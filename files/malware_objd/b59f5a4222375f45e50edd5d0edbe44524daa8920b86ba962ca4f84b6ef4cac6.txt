
b59f5a4222375f45e50edd5d0edbe44524daa8920b86ba962ca4f84b6ef4cac6.exe:     file format pei-i386


Disassembly of section CODE:

00401000 <CODE>:
  401000:	add    al,0x10
  401002:	inc    eax
  401003:	add    BYTE PTR [edx],cl
  401005:	push   es
  401006:	push   ebx
  401007:	je     0x40107b
  401009:	imul   ebp,DWORD PTR [esi+0x67],0x401058
	...
  40102c:	pop    eax
  40102d:	adc    BYTE PTR [eax+0x0],al
  401030:	add    al,0x0
  401032:	add    BYTE PTR [eax],al
  401034:	add    BYTE PTR [eax],al
  401036:	add    BYTE PTR [eax],al
  401038:	fdiv   QWORD PTR [ebx]
  40103a:	inc    eax
  40103b:	add    al,ch
  40103d:	xor    eax,DWORD PTR [eax+0x0]
  401040:	in     al,dx
  401041:	xor    eax,DWORD PTR [eax+0x0]
  401044:	lock xor eax,DWORD PTR [eax+0x0]
  401048:	in     al,0x33
  40104a:	inc    eax
  40104b:	add    BYTE PTR [ecx+esi*1+0x40],bl
  40104f:	add    BYTE PTR [eax+0x31],bh
  401052:	inc    eax
  401053:	add    BYTE PTR [ecx+esi*1+0x54070040],dh
  40105a:	dec    edi
  40105b:	bound  ebp,QWORD PTR [edx+0x65]
  40105e:	arpl   WORD PTR [esp+eiz*2+0x10],si
  401062:	inc    eax
  401063:	add    BYTE PTR [edi],al
  401065:	pop    es
  401066:	push   esp
  401067:	dec    edi
  401068:	bound  ebp,QWORD PTR [edx+0x65]
  40106b:	arpl   WORD PTR [eax+ebx*2+0x10],si
  40106f:	inc    eax
  401070:	add    BYTE PTR [eax],al
  401072:	add    BYTE PTR [eax],al
  401074:	add    BYTE PTR [eax],al
  401076:	add    BYTE PTR [esi],al
  401078:	push   ebx
  401079:	jns    0x4010ee
  40107b:	je     0x4010e2
  40107d:	ins    DWORD PTR es:[edi],dx
  40107e:	add    BYTE PTR [eax],al
  401080:	test   BYTE PTR [eax],dl
  401082:	inc    eax
  401083:	add    BYTE PTR [edi],cl
  401085:	or     cl,BYTE PTR [ecx+0x49]
  401088:	outs   dx,BYTE PTR ds:[esi]
  401089:	je     0x4010f0
  40108b:	jb     0x4010f3
  40108d:	popa   
  40108e:	arpl   WORD PTR [ebp+0x0],sp
  401091:	add    BYTE PTR [eax],al
  401093:	add    BYTE PTR [ecx],al
	...
  40109d:	rol    BYTE PTR [eax],0x0
  4010a0:	add    BYTE PTR [eax],al
  4010a2:	add    BYTE PTR [eax],al
  4010a4:	inc    esi
  4010a5:	push   es
  4010a6:	push   ebx
  4010a7:	jns    0x40111c
  4010a9:	je     0x401110
  4010ab:	ins    DWORD PTR es:[edi],dx
  4010ac:	add    eax,DWORD PTR [eax]
  4010ae:	(bad)  
  4010af:	dec    esp
  4010b1:	add    DWORD PTR [esp+0x4],0xfffffff8
  4010b6:	jmp    0x4052e4
  4010bb:	add    DWORD PTR [esp+0x4],0xfffffff8
  4010c0:	jmp    0x40530c
  4010c5:	add    DWORD PTR [esp+0x4],0xfffffff8
  4010ca:	jmp    0x405320
  4010cf:	int3   
  4010d0:	int3   
  4010d1:	mov    cl,0x10
  4010d3:	inc    eax
  4010d4:	add    BYTE PTR [ebx-0x3affbff0],bh
  4010da:	adc    BYTE PTR [eax+0x0],al
  4010dd:	add    DWORD PTR [eax],eax
	...
  4010e7:	add    BYTE PTR [eax],al
  4010e9:	rol    BYTE PTR [eax],0x0
  4010ec:	add    BYTE PTR [eax],al
  4010ee:	add    BYTE PTR [eax],al
  4010f0:	inc    esi
  4010f1:	rcl    DWORD PTR [eax],1
  4010f3:	inc    eax
  4010f4:	add    BYTE PTR [eax],cl
  4010f6:	add    BYTE PTR [eax],al
  4010f8:	add    BYTE PTR [eax],al
  4010fa:	add    BYTE PTR [eax],al
  4010fc:	add    BYTE PTR [ebp+0x114c0040],cl
  401102:	inc    eax
  401103:	add    ch,bl
  401105:	adc    BYTE PTR [eax+0x0],al
	...
  401120:	dec    esp
  401121:	adc    DWORD PTR [eax+0x0],eax
  401124:	or     al,0x0
  401126:	add    BYTE PTR [eax],al
  401128:	or     al,0x10
  40112a:	inc    eax
  40112b:	add    ah,bl
  40112d:	xor    eax,DWORD PTR [eax+0x0]
  401130:	mov    eax,0xc4004052
  401135:	push   edx
  401136:	inc    eax
  401137:	add    al,dh
  401139:	xor    eax,DWORD PTR [eax+0x0]
  40113c:	in     al,0x33
  40113e:	inc    eax
  40113f:	add    ah,dl
  401141:	push   edx
  401142:	inc    eax
  401143:	add    BYTE PTR [eax+0x31],bh
  401146:	inc    eax
  401147:	add    BYTE PTR [ecx+esi*1+0x54110040],dh
  40114e:	dec    ecx
  40114f:	outs   dx,BYTE PTR ds:[esi]
  401150:	je     0x4011b7
  401152:	jb     0x4011ba
  401154:	popa   
  401155:	arpl   WORD PTR [ebp+0x64],sp
  401158:	dec    edi
  401159:	bound  ebp,QWORD PTR [edx+0x65]
  40115c:	arpl   WORD PTR [ebx+ecx*4-0x40],si
  401160:	jmp    DWORD PTR ds:0x4301b0
  401166:	mov    eax,eax
  401168:	jmp    DWORD PTR ds:0x4301ac
  40116e:	mov    eax,eax
  401170:	jmp    DWORD PTR ds:0x4301a8
  401176:	mov    eax,eax
  401178:	jmp    DWORD PTR ds:0x4301a4
  40117e:	mov    eax,eax
  401180:	jmp    DWORD PTR ds:0x4301a0
  401186:	mov    eax,eax
  401188:	jmp    DWORD PTR ds:0x4301c4
  40118e:	mov    eax,eax
  401190:	jmp    DWORD PTR ds:0x43019c
  401196:	mov    eax,eax
  401198:	jmp    DWORD PTR ds:0x4301c0
  40119e:	mov    eax,eax
  4011a0:	jmp    DWORD PTR ds:0x430198
  4011a6:	mov    eax,eax
  4011a8:	jmp    DWORD PTR ds:0x430194
  4011ae:	mov    eax,eax
  4011b0:	jmp    DWORD PTR ds:0x430190
  4011b6:	mov    eax,eax
  4011b8:	jmp    DWORD PTR ds:0x43018c
  4011be:	mov    eax,eax
  4011c0:	jmp    DWORD PTR ds:0x430188
  4011c6:	mov    eax,eax
  4011c8:	jmp    DWORD PTR ds:0x430184
  4011ce:	mov    eax,eax
  4011d0:	jmp    DWORD PTR ds:0x430180
  4011d6:	mov    eax,eax
  4011d8:	jmp    DWORD PTR ds:0x43017c
  4011de:	mov    eax,eax
  4011e0:	jmp    DWORD PTR ds:0x430178
  4011e6:	mov    eax,eax
  4011e8:	jmp    DWORD PTR ds:0x430174
  4011ee:	mov    eax,eax
  4011f0:	jmp    DWORD PTR ds:0x430170
  4011f6:	mov    eax,eax
  4011f8:	jmp    DWORD PTR ds:0x4301bc
  4011fe:	mov    eax,eax
  401200:	jmp    DWORD PTR ds:0x43016c
  401206:	mov    eax,eax
  401208:	jmp    DWORD PTR ds:0x430168
  40120e:	mov    eax,eax
  401210:	jmp    DWORD PTR ds:0x430164
  401216:	mov    eax,eax
  401218:	jmp    DWORD PTR ds:0x4301d4
  40121e:	mov    eax,eax
  401220:	jmp    DWORD PTR ds:0x4301d0
  401226:	mov    eax,eax
  401228:	jmp    DWORD PTR ds:0x4301cc
  40122e:	mov    eax,eax
  401230:	jmp    DWORD PTR ds:0x430160
  401236:	mov    eax,eax
  401238:	jmp    DWORD PTR ds:0x43015c
  40123e:	mov    eax,eax
  401240:	jmp    DWORD PTR ds:0x4301e4
  401246:	mov    eax,eax
  401248:	jmp    DWORD PTR ds:0x4301e0
  40124e:	mov    eax,eax
  401250:	jmp    DWORD PTR ds:0x4301dc
  401256:	mov    eax,eax
  401258:	jmp    DWORD PTR ds:0x430158
  40125e:	mov    eax,eax
  401260:	jmp    DWORD PTR ds:0x430154
  401266:	mov    eax,eax
  401268:	jmp    DWORD PTR ds:0x430150
  40126e:	mov    eax,eax
  401270:	jmp    DWORD PTR ds:0x43014c
  401276:	mov    eax,eax
  401278:	push   ebx
  401279:	add    esp,0xffffffbc
  40127c:	mov    ebx,0xa
  401281:	push   esp
  401282:	call   0x4011e0
  401287:	test   BYTE PTR [esp+0x2c],0x1
  40128c:	je     0x401293
  40128e:	movzx  ebx,WORD PTR [esp+0x30]
  401293:	mov    eax,ebx
  401295:	add    esp,0x44
  401298:	pop    ebx
  401299:	ret    
  40129a:	mov    eax,eax
  40129c:	jmp    DWORD PTR ds:0x430148
  4012a2:	mov    eax,eax
  4012a4:	jmp    DWORD PTR ds:0x430144
  4012aa:	mov    eax,eax
  4012ac:	jmp    DWORD PTR ds:0x430140
  4012b2:	mov    eax,eax
  4012b4:	jmp    DWORD PTR ds:0x43013c
  4012ba:	mov    eax,eax
  4012bc:	jmp    DWORD PTR ds:0x430138
  4012c2:	mov    eax,eax
  4012c4:	jmp    DWORD PTR ds:0x430134
  4012ca:	mov    eax,eax
  4012cc:	jmp    DWORD PTR ds:0x430130
  4012d2:	mov    eax,eax
  4012d4:	jmp    DWORD PTR ds:0x43012c
  4012da:	mov    eax,eax
  4012dc:	push   ebx
  4012dd:	add    esp,0xfffffff4
  4012e0:	mov    ebx,0x42f5e0
  4012e5:	cmp    DWORD PTR [ebx],0x0
  4012e8:	jne    0x401343
  4012ea:	push   0x644
  4012ef:	push   0x0
  4012f1:	call   0x40129c
  4012f6:	mov    DWORD PTR [esp+0x8],eax
  4012fa:	cmp    DWORD PTR [esp+0x8],0x0
  4012ff:	jne    0x401308
  401301:	xor    eax,eax
  401303:	mov    DWORD PTR [esp],eax
  401306:	jmp    0x401358
  401308:	mov    eax,DWORD PTR [esp+0x8]
  40130c:	mov    edx,DWORD PTR ds:0x42f5dc
  401312:	mov    DWORD PTR [eax],edx
  401314:	mov    eax,DWORD PTR [esp+0x8]
  401318:	mov    ds:0x42f5dc,eax
  40131d:	xor    eax,eax
  40131f:	mov    edx,eax
  401321:	add    edx,edx
  401323:	mov    ecx,DWORD PTR [esp+0x8]
  401327:	lea    edx,[ecx+edx*8+0x4]
  40132b:	mov    DWORD PTR [esp+0x4],edx
  40132f:	mov    edx,DWORD PTR [esp+0x4]
  401333:	mov    ecx,DWORD PTR [ebx]
  401335:	mov    DWORD PTR [edx],ecx
  401337:	mov    edx,DWORD PTR [esp+0x4]
  40133b:	mov    DWORD PTR [ebx],edx
  40133d:	inc    eax
  40133e:	cmp    eax,0x64
  401341:	jne    0x40131f
  401343:	mov    eax,DWORD PTR [ebx]
  401345:	mov    DWORD PTR [esp+0x4],eax
  401349:	mov    eax,DWORD PTR [esp+0x4]
  40134d:	mov    eax,DWORD PTR [eax]
  40134f:	mov    DWORD PTR [ebx],eax
  401351:	mov    eax,DWORD PTR [esp+0x4]
  401355:	mov    DWORD PTR [esp],eax
  401358:	mov    eax,DWORD PTR [esp]
  40135b:	add    esp,0xc
  40135e:	pop    ebx
  40135f:	ret    
  401360:	mov    DWORD PTR [eax],eax
  401362:	mov    DWORD PTR [eax+0x4],eax
  401365:	ret    
  401366:	mov    eax,eax
  401368:	push   ebx
  401369:	push   esi
  40136a:	add    esp,0xfffffff8
  40136d:	mov    esi,edx
  40136f:	mov    ebx,eax
  401371:	call   0x4012dc
  401376:	mov    DWORD PTR [esp+0x4],eax
  40137a:	cmp    DWORD PTR [esp+0x4],0x0
  40137f:	jne    0x401385
  401381:	xor    eax,eax
  401383:	jmp    0x4013bf
  401385:	mov    eax,DWORD PTR [esi]
  401387:	mov    edx,DWORD PTR [esp+0x4]
  40138b:	mov    DWORD PTR [edx+0x8],eax
  40138e:	mov    eax,DWORD PTR [esi+0x4]
  401391:	mov    edx,DWORD PTR [esp+0x4]
  401395:	mov    DWORD PTR [edx+0xc],eax
  401398:	mov    eax,DWORD PTR [ebx]
  40139a:	mov    DWORD PTR [esp],eax
  40139d:	mov    eax,DWORD PTR [esp+0x4]
  4013a1:	mov    edx,DWORD PTR [esp]
  4013a4:	mov    DWORD PTR [eax],edx
  4013a6:	mov    eax,DWORD PTR [esp+0x4]
  4013aa:	mov    DWORD PTR [eax+0x4],ebx
  4013ad:	mov    eax,DWORD PTR [esp]
  4013b0:	mov    edx,DWORD PTR [esp+0x4]
  4013b4:	mov    DWORD PTR [eax+0x4],edx
  4013b7:	mov    eax,DWORD PTR [esp+0x4]
  4013bb:	mov    DWORD PTR [ebx],eax
  4013bd:	mov    al,0x1
  4013bf:	pop    ecx
  4013c0:	pop    edx
  4013c1:	pop    esi
  4013c2:	pop    ebx
  4013c3:	ret    
  4013c4:	add    esp,0xfffffff8
  4013c7:	mov    edx,DWORD PTR [eax+0x4]
  4013ca:	mov    DWORD PTR [esp],edx
  4013cd:	mov    edx,DWORD PTR [eax]
  4013cf:	mov    DWORD PTR [esp+0x4],edx
  4013d3:	mov    edx,DWORD PTR [esp]
  4013d6:	mov    ecx,DWORD PTR [esp+0x4]
  4013da:	mov    DWORD PTR [edx],ecx
  4013dc:	mov    edx,DWORD PTR [esp+0x4]
  4013e0:	mov    ecx,DWORD PTR [esp]
  4013e3:	mov    DWORD PTR [edx+0x4],ecx
  4013e6:	mov    edx,DWORD PTR ds:0x42f5e0
  4013ec:	mov    DWORD PTR [eax],edx
  4013ee:	mov    ds:0x42f5e0,eax
  4013f3:	pop    ecx
  4013f4:	pop    edx
  4013f5:	ret    
  4013f6:	mov    eax,eax
  4013f8:	push   ebx
  4013f9:	push   esi
  4013fa:	push   edi
  4013fb:	push   ebp
  4013fc:	add    esp,0xfffffff8
  4013ff:	mov    ebx,ecx
  401401:	mov    esi,eax
  401403:	mov    edi,esp
  401405:	mov    eax,DWORD PTR [esi]
  401407:	mov    DWORD PTR [edi],eax
  401409:	mov    eax,DWORD PTR [edx]
  40140b:	mov    DWORD PTR [ebx],eax
  40140d:	mov    eax,DWORD PTR [edx+0x4]
  401410:	mov    DWORD PTR [ebx+0x4],eax
  401413:	mov    eax,DWORD PTR [edi]
  401415:	mov    eax,DWORD PTR [eax]
  401417:	mov    DWORD PTR [esp+0x4],eax
  40141b:	mov    edx,DWORD PTR [edi]
  40141d:	mov    edx,DWORD PTR [edx+0x8]
  401420:	mov    ecx,edx
  401422:	mov    ebp,DWORD PTR [edi]
  401424:	add    ecx,DWORD PTR [ebp+0xc]
  401427:	mov    eax,DWORD PTR [ebx]
  401429:	cmp    ecx,eax
  40142b:	jne    0x401445
  40142d:	mov    eax,DWORD PTR [edi]
  40142f:	call   0x4013c4
  401434:	mov    eax,DWORD PTR [edi]
  401436:	mov    eax,DWORD PTR [eax+0x8]
  401439:	mov    DWORD PTR [ebx],eax
  40143b:	mov    eax,DWORD PTR [edi]
  40143d:	mov    eax,DWORD PTR [eax+0xc]
  401440:	add    DWORD PTR [ebx+0x4],eax
  401443:	jmp    0x40145b
  401445:	add    eax,DWORD PTR [ebx+0x4]
  401448:	cmp    edx,eax
  40144a:	jne    0x40145b
  40144c:	mov    eax,DWORD PTR [edi]
  40144e:	call   0x4013c4
  401453:	mov    eax,DWORD PTR [edi]
  401455:	mov    eax,DWORD PTR [eax+0xc]
  401458:	add    DWORD PTR [ebx+0x4],eax
  40145b:	mov    eax,DWORD PTR [esp+0x4]
  40145f:	mov    DWORD PTR [edi],eax
  401461:	cmp    esi,DWORD PTR [edi]
  401463:	jne    0x401413
  401465:	mov    edx,ebx
  401467:	mov    eax,esi
  401469:	call   0x401368
  40146e:	test   al,al
  401470:	jne    0x401476
  401472:	xor    eax,eax
  401474:	mov    DWORD PTR [ebx],eax
  401476:	pop    ecx
  401477:	pop    edx
  401478:	pop    ebp
  401479:	pop    edi
  40147a:	pop    esi
  40147b:	pop    ebx
  40147c:	ret    
  40147d:	lea    eax,[eax+0x0]
  401480:	push   ebx
  401481:	push   esi
  401482:	push   edi
  401483:	push   ebp
  401484:	add    esp,0xfffffff0
  401487:	mov    DWORD PTR [esp],eax
  40148a:	mov    esi,esp
  40148c:	mov    eax,DWORD PTR [esi]
  40148e:	mov    DWORD PTR [esp+0xc],eax
  401492:	mov    ecx,DWORD PTR [edx]
  401494:	mov    eax,DWORD PTR [esi]
  401496:	mov    eax,DWORD PTR [eax+0x8]
  401499:	cmp    ecx,eax
  40149b:	jb     0x401527
  4014a1:	mov    ebx,eax
  4014a3:	mov    edi,DWORD PTR [esi]
  4014a5:	add    ebx,DWORD PTR [edi+0xc]
  4014a8:	mov    edi,ecx
  4014aa:	add    edi,DWORD PTR [edx+0x4]
  4014ad:	cmp    ebx,edi
  4014af:	jb     0x401527
  4014b1:	cmp    ecx,eax
  4014b3:	jne    0x4014d6
  4014b5:	mov    eax,DWORD PTR [edx+0x4]
  4014b8:	mov    ecx,DWORD PTR [esi]
  4014ba:	add    DWORD PTR [ecx+0x8],eax
  4014bd:	mov    eax,DWORD PTR [edx+0x4]
  4014c0:	mov    edx,DWORD PTR [esi]
  4014c2:	sub    DWORD PTR [edx+0xc],eax
  4014c5:	mov    eax,DWORD PTR [esi]
  4014c7:	cmp    DWORD PTR [eax+0xc],0x0
  4014cb:	jne    0x401523
  4014cd:	mov    eax,DWORD PTR [esi]
  4014cf:	call   0x4013c4
  4014d4:	jmp    0x401523
  4014d6:	mov    ebx,eax
  4014d8:	mov    edi,DWORD PTR [esi]
  4014da:	add    ebx,DWORD PTR [edi+0xc]
  4014dd:	mov    edi,ecx
  4014df:	add    edi,DWORD PTR [edx+0x4]
  4014e2:	cmp    ebx,edi
  4014e4:	jne    0x4014f0
  4014e6:	mov    eax,DWORD PTR [edx+0x4]
  4014e9:	mov    edx,DWORD PTR [esi]
  4014eb:	sub    DWORD PTR [edx+0xc],eax
  4014ee:	jmp    0x401523
  4014f0:	mov    ebx,DWORD PTR [edx]
  4014f2:	add    ebx,DWORD PTR [edx+0x4]
  4014f5:	mov    DWORD PTR [esp+0x4],ebx
  4014f9:	mov    edi,DWORD PTR [esi]
  4014fb:	mov    edi,DWORD PTR [edi+0x8]
  4014fe:	mov    ebp,DWORD PTR [esi]
  401500:	add    edi,DWORD PTR [ebp+0xc]
  401503:	sub    edi,ebx
  401505:	mov    DWORD PTR [esp+0x8],edi
  401509:	sub    ecx,eax
  40150b:	mov    eax,DWORD PTR [esi]
  40150d:	mov    DWORD PTR [eax+0xc],ecx
  401510:	lea    edx,[esp+0x4]
  401514:	mov    eax,DWORD PTR [esi]
  401516:	call   0x401368
  40151b:	test   al,al
  40151d:	jne    0x401523
  40151f:	xor    eax,eax
  401521:	jmp    0x40153b
  401523:	mov    al,0x1
  401525:	jmp    0x40153b
  401527:	mov    eax,DWORD PTR [esi]
  401529:	mov    eax,DWORD PTR [eax]
  40152b:	mov    DWORD PTR [esi],eax
  40152d:	mov    eax,DWORD PTR [esi]
  40152f:	cmp    eax,DWORD PTR [esp+0xc]
  401533:	jne    0x401492
  401539:	xor    eax,eax
  40153b:	add    esp,0x10
  40153e:	pop    ebp
  40153f:	pop    edi
  401540:	pop    esi
  401541:	pop    ebx
  401542:	ret    
  401543:	nop
  401544:	push   ebx
  401545:	push   esi
  401546:	push   edi
  401547:	mov    ebx,edx
  401549:	mov    esi,eax
  40154b:	cmp    esi,0x100000
  401551:	jge    0x40155a
  401553:	mov    esi,0x100000
  401558:	jmp    0x401566
  40155a:	add    esi,0xffff
  401560:	and    esi,0xffff0000
  401566:	mov    DWORD PTR [ebx+0x4],esi
  401569:	push   0x1
  40156b:	push   0x2000
  401570:	push   esi
  401571:	push   0x0
  401573:	call   0x4012ac
  401578:	mov    edi,eax
  40157a:	mov    DWORD PTR [ebx],edi
  40157c:	test   edi,edi
  40157e:	je     0x4015a3
  401580:	mov    edx,ebx
  401582:	mov    eax,0x42f5e4
  401587:	call   0x401368
  40158c:	test   al,al
  40158e:	jne    0x4015a3
  401590:	push   0x8000
  401595:	push   0x0
  401597:	mov    eax,DWORD PTR [ebx]
  401599:	push   eax
  40159a:	call   0x4012b4
  40159f:	xor    eax,eax
  4015a1:	mov    DWORD PTR [ebx],eax
  4015a3:	pop    edi
  4015a4:	pop    esi
  4015a5:	pop    ebx
  4015a6:	ret    
  4015a7:	nop
  4015a8:	push   ebx
  4015a9:	push   esi
  4015aa:	push   edi
  4015ab:	push   ebp
  4015ac:	mov    ebx,ecx
  4015ae:	mov    esi,edx
  4015b0:	mov    ebp,eax
  4015b2:	mov    DWORD PTR [ebx+0x4],0x100000
  4015b9:	push   0x4
  4015bb:	push   0x2000
  4015c0:	push   0x100000
  4015c5:	push   ebp
  4015c6:	call   0x4012ac
  4015cb:	mov    edi,eax
  4015cd:	mov    DWORD PTR [ebx],edi
  4015cf:	test   edi,edi
  4015d1:	jne    0x4015f2
  4015d3:	add    esi,0xffff
  4015d9:	and    esi,0xffff0000
  4015df:	mov    DWORD PTR [ebx+0x4],esi
  4015e2:	push   0x4
  4015e4:	push   0x2000
  4015e9:	push   esi
  4015ea:	push   ebp
  4015eb:	call   0x4012ac
  4015f0:	mov    DWORD PTR [ebx],eax
  4015f2:	cmp    DWORD PTR [ebx],0x0
  4015f5:	je     0x40161a
  4015f7:	mov    edx,ebx
  4015f9:	mov    eax,0x42f5e4
  4015fe:	call   0x401368
  401603:	test   al,al
  401605:	jne    0x40161a
  401607:	push   0x8000
  40160c:	push   0x0
  40160e:	mov    eax,DWORD PTR [ebx]
  401610:	push   eax
  401611:	call   0x4012b4
  401616:	xor    eax,eax
  401618:	mov    DWORD PTR [ebx],eax
  40161a:	pop    ebp
  40161b:	pop    edi
  40161c:	pop    esi
  40161d:	pop    ebx
  40161e:	ret    
  40161f:	nop
  401620:	push   ebx
  401621:	push   esi
  401622:	push   edi
  401623:	push   ebp
  401624:	add    esp,0xffffffe8
  401627:	mov    edi,ecx
  401629:	mov    esi,esp
  40162b:	mov    DWORD PTR [esp+0x8],0xffffffff
  401633:	xor    ecx,ecx
  401635:	mov    DWORD PTR [esp+0xc],ecx
  401639:	mov    DWORD PTR [esp+0x10],eax
  40163d:	add    edx,DWORD PTR [esp+0x10]
  401641:	mov    DWORD PTR [esp+0x14],edx
  401645:	mov    eax,ds:0x42f5e4
  40164a:	mov    DWORD PTR [esi],eax
  40164c:	jmp    0x4016b9
  40164e:	mov    eax,DWORD PTR [esi]
  401650:	mov    eax,DWORD PTR [eax]
  401652:	mov    DWORD PTR [esp+0x4],eax
  401656:	mov    eax,DWORD PTR [esi]
  401658:	mov    ebx,DWORD PTR [eax+0x8]
  40165b:	cmp    ebx,DWORD PTR [esp+0x10]
  40165f:	jb     0x4016b3
  401661:	mov    eax,ebx
  401663:	mov    edx,DWORD PTR [esi]
  401665:	add    eax,DWORD PTR [edx+0xc]
  401668:	cmp    eax,DWORD PTR [esp+0x14]
  40166c:	ja     0x4016b3
  40166e:	cmp    ebx,DWORD PTR [esp+0x8]
  401672:	jae    0x401678
  401674:	mov    DWORD PTR [esp+0x8],ebx
  401678:	mov    eax,DWORD PTR [esi]
  40167a:	mov    ebp,DWORD PTR [eax+0x8]
  40167d:	mov    eax,DWORD PTR [esi]
  40167f:	add    ebp,DWORD PTR [eax+0xc]
  401682:	cmp    ebp,DWORD PTR [esp+0xc]
  401686:	jbe    0x40168c
  401688:	mov    DWORD PTR [esp+0xc],ebp
  40168c:	push   0x8000
  401691:	push   0x0
  401693:	mov    eax,DWORD PTR [esi]
  401695:	mov    eax,DWORD PTR [eax+0x8]
  401698:	push   eax
  401699:	call   0x4012b4
  40169e:	test   eax,eax
  4016a0:	jne    0x4016ac
  4016a2:	mov    DWORD PTR ds:0x42f5c0,0x1
  4016ac:	mov    eax,DWORD PTR [esi]
  4016ae:	call   0x4013c4
  4016b3:	mov    eax,DWORD PTR [esp+0x4]
  4016b7:	mov    DWORD PTR [esi],eax
  4016b9:	mov    eax,0x42f5e4
  4016be:	cmp    eax,DWORD PTR [esi]
  4016c0:	jne    0x40164e
  4016c2:	xor    eax,eax
  4016c4:	mov    DWORD PTR [edi],eax
  4016c6:	cmp    DWORD PTR [esp+0xc],0x0
  4016cb:	je     0x4016de
  4016cd:	mov    eax,DWORD PTR [esp+0x8]
  4016d1:	mov    DWORD PTR [edi],eax
  4016d3:	mov    eax,DWORD PTR [esp+0xc]
  4016d7:	sub    eax,DWORD PTR [esp+0x8]
  4016db:	mov    DWORD PTR [edi+0x4],eax
  4016de:	add    esp,0x18
  4016e1:	pop    ebp
  4016e2:	pop    edi
  4016e3:	pop    esi
  4016e4:	pop    ebx
  4016e5:	ret    
  4016e6:	mov    eax,eax
  4016e8:	push   ebx
  4016e9:	push   esi
  4016ea:	push   edi
  4016eb:	push   ebp
  4016ec:	add    esp,0xffffffe8
  4016ef:	mov    ebx,ecx
  4016f1:	mov    DWORD PTR [esp],edx
  4016f4:	lea    esi,[esp+0x8]
  4016f8:	lea    edi,[esp+0x4]
  4016fc:	lea    ebp,[esp+0xc]
  401700:	mov    edx,eax
  401702:	mov    ecx,edx
  401704:	and    ecx,0xfffff000
  40170a:	mov    DWORD PTR [esp+0x10],ecx
  40170e:	add    edx,DWORD PTR [esp]
  401711:	add    edx,0xfff
  401717:	and    edx,0xfffff000
  40171d:	mov    DWORD PTR [esp+0x14],edx
  401721:	mov    eax,DWORD PTR [esp+0x10]
  401725:	mov    DWORD PTR [ebx],eax
  401727:	mov    eax,DWORD PTR [esp+0x14]
  40172b:	sub    eax,DWORD PTR [esp+0x10]
  40172f:	mov    DWORD PTR [ebx+0x4],eax
  401732:	mov    eax,ds:0x42f5e4
  401737:	mov    DWORD PTR [edi],eax
  401739:	jmp    0x401796
  40173b:	mov    eax,DWORD PTR [edi]
  40173d:	mov    eax,DWORD PTR [eax+0x8]
  401740:	mov    DWORD PTR [esi],eax
  401742:	mov    eax,DWORD PTR [edi]
  401744:	mov    eax,DWORD PTR [eax+0xc]
  401747:	add    eax,DWORD PTR [esi]
  401749:	mov    DWORD PTR [ebp+0x0],eax
  40174c:	mov    eax,DWORD PTR [esi]
  40174e:	cmp    eax,DWORD PTR [esp+0x10]
  401752:	jae    0x40175a
  401754:	mov    eax,DWORD PTR [esp+0x10]
  401758:	mov    DWORD PTR [esi],eax
  40175a:	mov    eax,DWORD PTR [ebp+0x0]
  40175d:	cmp    eax,DWORD PTR [esp+0x14]
  401761:	jbe    0x40176a
  401763:	mov    eax,DWORD PTR [esp+0x14]
  401767:	mov    DWORD PTR [ebp+0x0],eax
  40176a:	mov    eax,DWORD PTR [esi]
  40176c:	cmp    eax,DWORD PTR [ebp+0x0]
  40176f:	jae    0x401790
  401771:	push   0x4
  401773:	push   0x1000
  401778:	mov    eax,DWORD PTR [ebp+0x0]
  40177b:	sub    eax,DWORD PTR [esi]
  40177d:	push   eax
  40177e:	mov    eax,DWORD PTR [esi]
  401780:	push   eax
  401781:	call   0x4012ac
  401786:	test   eax,eax
  401788:	jne    0x401790
  40178a:	xor    eax,eax
  40178c:	mov    DWORD PTR [ebx],eax
  40178e:	jmp    0x40179f
  401790:	mov    eax,DWORD PTR [edi]
  401792:	mov    eax,DWORD PTR [eax]
  401794:	mov    DWORD PTR [edi],eax
  401796:	mov    eax,0x42f5e4
  40179b:	cmp    eax,DWORD PTR [edi]
  40179d:	jne    0x40173b
  40179f:	add    esp,0x18
  4017a2:	pop    ebp
  4017a3:	pop    edi
  4017a4:	pop    esi
  4017a5:	pop    ebx
  4017a6:	ret    
  4017a7:	nop
  4017a8:	push   ebx
  4017a9:	push   esi
  4017aa:	push   edi
  4017ab:	push   ebp
  4017ac:	add    esp,0xffffffe8
  4017af:	mov    DWORD PTR [esp],edx
  4017b2:	lea    esi,[esp+0x8]
  4017b6:	lea    edi,[esp+0x4]
  4017ba:	lea    ebx,[esp+0xc]
  4017be:	mov    edx,eax
  4017c0:	mov    ebp,edx
  4017c2:	add    ebp,0xfff
  4017c8:	and    ebp,0xfffff000
  4017ce:	mov    DWORD PTR [esp+0x10],ebp
  4017d2:	add    edx,DWORD PTR [esp]
  4017d5:	and    edx,0xfffff000
  4017db:	mov    DWORD PTR [esp+0x14],edx
  4017df:	mov    eax,DWORD PTR [esp+0x10]
  4017e3:	mov    DWORD PTR [ecx],eax
  4017e5:	mov    eax,DWORD PTR [esp+0x14]
  4017e9:	sub    eax,DWORD PTR [esp+0x10]
  4017ed:	mov    DWORD PTR [ecx+0x4],eax
  4017f0:	mov    eax,ds:0x42f5e4
  4017f5:	mov    DWORD PTR [edi],eax
  4017f7:	jmp    0x401851
  4017f9:	mov    eax,DWORD PTR [edi]
  4017fb:	mov    eax,DWORD PTR [eax+0x8]
  4017fe:	mov    DWORD PTR [esi],eax
  401800:	mov    eax,DWORD PTR [edi]
  401802:	mov    eax,DWORD PTR [eax+0xc]
  401805:	add    eax,DWORD PTR [esi]
  401807:	mov    DWORD PTR [ebx],eax
  401809:	mov    eax,DWORD PTR [esi]
  40180b:	cmp    eax,DWORD PTR [esp+0x10]
  40180f:	jae    0x401817
  401811:	mov    eax,DWORD PTR [esp+0x10]
  401815:	mov    DWORD PTR [esi],eax
  401817:	mov    eax,DWORD PTR [ebx]
  401819:	cmp    eax,DWORD PTR [esp+0x14]
  40181d:	jbe    0x401825
  40181f:	mov    eax,DWORD PTR [esp+0x14]
  401823:	mov    DWORD PTR [ebx],eax
  401825:	mov    eax,DWORD PTR [esi]
  401827:	cmp    eax,DWORD PTR [ebx]
  401829:	jae    0x40184b
  40182b:	push   0x4000
  401830:	mov    eax,DWORD PTR [ebx]
  401832:	sub    eax,DWORD PTR [esi]
  401834:	push   eax
  401835:	mov    eax,DWORD PTR [esi]
  401837:	push   eax
  401838:	call   0x4012b4
  40183d:	test   eax,eax
  40183f:	jne    0x40184b
  401841:	mov    DWORD PTR ds:0x42f5c0,0x2
  40184b:	mov    eax,DWORD PTR [edi]
  40184d:	mov    eax,DWORD PTR [eax]
  40184f:	mov    DWORD PTR [edi],eax
  401851:	mov    eax,0x42f5e4
  401856:	cmp    eax,DWORD PTR [edi]
  401858:	jne    0x4017f9
  40185a:	add    esp,0x18
  40185d:	pop    ebp
  40185e:	pop    edi
  40185f:	pop    esi
  401860:	pop    ebx
  401861:	ret    
  401862:	mov    eax,eax
  401864:	push   ebx
  401865:	push   esi
  401866:	push   edi
  401867:	push   ebp
  401868:	add    esp,0xfffffff4
  40186b:	mov    ebx,edx
  40186d:	mov    esi,eax
  40186f:	mov    edi,esp
  401871:	mov    ebp,0x42f5f4
  401876:	add    esi,0x3fff
  40187c:	and    esi,0xffffc000
  401882:	mov    eax,DWORD PTR [ebp+0x0]
  401885:	mov    DWORD PTR [edi],eax
  401887:	jmp    0x4018ca
  401889:	mov    eax,DWORD PTR [edi]
  40188b:	cmp    esi,DWORD PTR [eax+0xc]
  40188e:	jg     0x4018c4
  401890:	mov    ecx,ebx
  401892:	mov    eax,DWORD PTR [edi]
  401894:	mov    eax,DWORD PTR [eax+0x8]
  401897:	mov    edx,esi
  401899:	call   0x4016e8
  40189e:	cmp    DWORD PTR [ebx],0x0
  4018a1:	je     0x401902
  4018a3:	mov    eax,DWORD PTR [ebx+0x4]
  4018a6:	mov    edx,DWORD PTR [edi]
  4018a8:	add    DWORD PTR [edx+0x8],eax
  4018ab:	mov    eax,DWORD PTR [ebx+0x4]
  4018ae:	mov    edx,DWORD PTR [edi]
  4018b0:	sub    DWORD PTR [edx+0xc],eax
  4018b3:	mov    eax,DWORD PTR [edi]
  4018b5:	cmp    DWORD PTR [eax+0xc],0x0
  4018b9:	jne    0x401902
  4018bb:	mov    eax,DWORD PTR [edi]
  4018bd:	call   0x4013c4
  4018c2:	jmp    0x401902
  4018c4:	mov    eax,DWORD PTR [edi]
  4018c6:	mov    eax,DWORD PTR [eax]
  4018c8:	mov    DWORD PTR [edi],eax
  4018ca:	cmp    ebp,DWORD PTR [edi]
  4018cc:	jne    0x401889
  4018ce:	mov    edx,ebx
  4018d0:	mov    eax,esi
  4018d2:	call   0x401544
  4018d7:	cmp    DWORD PTR [ebx],0x0
  4018da:	je     0x401902
  4018dc:	lea    ecx,[esp+0x4]
  4018e0:	mov    edx,ebx
  4018e2:	mov    eax,ebp
  4018e4:	call   0x4013f8
  4018e9:	cmp    DWORD PTR [esp+0x4],0x0
  4018ee:	jne    0x401882
  4018f0:	lea    ecx,[esp+0x4]
  4018f4:	mov    edx,DWORD PTR [ebx+0x4]
  4018f7:	mov    eax,DWORD PTR [ebx]
  4018f9:	call   0x401620
  4018fe:	xor    eax,eax
  401900:	mov    DWORD PTR [ebx],eax
  401902:	add    esp,0xc
  401905:	pop    ebp
  401906:	pop    edi
  401907:	pop    esi
  401908:	pop    ebx
  401909:	ret    
  40190a:	mov    eax,eax
  40190c:	push   ebx
  40190d:	push   esi
  40190e:	push   edi
  40190f:	push   ebp
  401910:	add    esp,0xffffffe8
  401913:	mov    DWORD PTR [esp],ecx
  401916:	mov    edi,edx
  401918:	mov    ebx,eax
  40191a:	lea    esi,[esp+0x4]
  40191e:	mov    ebp,0x42f5f4
  401923:	add    edi,0x3fff
  401929:	and    edi,0xffffc000
  40192f:	mov    eax,DWORD PTR [ebp+0x0]
  401932:	mov    DWORD PTR [esi],eax
  401934:	jmp    0x40193c
  401936:	mov    eax,DWORD PTR [esi]
  401938:	mov    eax,DWORD PTR [eax]
  40193a:	mov    DWORD PTR [esi],eax
  40193c:	cmp    ebp,DWORD PTR [esi]
  40193e:	je     0x401947
  401940:	mov    eax,DWORD PTR [esi]
  401942:	cmp    ebx,DWORD PTR [eax+0x8]
  401945:	jne    0x401936
  401947:	mov    eax,DWORD PTR [esi]
  401949:	cmp    ebx,DWORD PTR [eax+0x8]
  40194c:	jne    0x4019ad
  40194e:	mov    eax,DWORD PTR [esi]
  401950:	cmp    edi,DWORD PTR [eax+0xc]
  401953:	jle    0x4019f5
  401959:	mov    eax,DWORD PTR [esi]
  40195b:	mov    edx,edi
  40195d:	sub    edx,DWORD PTR [eax+0xc]
  401960:	mov    eax,DWORD PTR [esi]
  401962:	mov    eax,DWORD PTR [eax+0x8]
  401965:	mov    ecx,DWORD PTR [esi]
  401967:	add    eax,DWORD PTR [ecx+0xc]
  40196a:	lea    ecx,[esp+0x8]
  40196e:	call   0x4015a8
  401973:	cmp    DWORD PTR [esp+0x8],0x0
  401978:	je     0x4019ad
  40197a:	lea    ecx,[esp+0x10]
  40197e:	lea    edx,[esp+0x8]
  401982:	mov    eax,ebp
  401984:	call   0x4013f8
  401989:	cmp    DWORD PTR [esp+0x10],0x0
  40198e:	jne    0x40192f
  401990:	lea    ecx,[esp+0x10]
  401994:	mov    edx,DWORD PTR [esp+0xc]
  401998:	mov    eax,DWORD PTR [esp+0x8]
  40199c:	call   0x401620
  4019a1:	mov    eax,DWORD PTR [esp]
  4019a4:	xor    edx,edx
  4019a6:	mov    DWORD PTR [eax],edx
  4019a8:	jmp    0x401a47
  4019ad:	lea    ecx,[esp+0x8]
  4019b1:	mov    edx,edi
  4019b3:	mov    eax,ebx
  4019b5:	call   0x4015a8
  4019ba:	cmp    DWORD PTR [esp+0x8],0x0
  4019bf:	je     0x4019f5
  4019c1:	lea    ecx,[esp+0x10]
  4019c5:	lea    edx,[esp+0x8]
  4019c9:	mov    eax,ebp
  4019cb:	call   0x4013f8
  4019d0:	cmp    DWORD PTR [esp+0x10],0x0
  4019d5:	jne    0x40192f
  4019db:	lea    ecx,[esp+0x10]
  4019df:	mov    edx,DWORD PTR [esp+0xc]
  4019e3:	mov    eax,DWORD PTR [esp+0x8]
  4019e7:	call   0x401620
  4019ec:	mov    eax,DWORD PTR [esp]
  4019ef:	xor    edx,edx
  4019f1:	mov    DWORD PTR [eax],edx
  4019f3:	jmp    0x401a47
  4019f5:	mov    eax,DWORD PTR [esi]
  4019f7:	mov    ebp,DWORD PTR [eax+0x8]
  4019fa:	cmp    ebx,ebp
  4019fc:	jne    0x401a40
  4019fe:	mov    eax,DWORD PTR [esi]
  401a00:	cmp    edi,DWORD PTR [eax+0xc]
  401a03:	jg     0x401a40
  401a05:	mov    ecx,DWORD PTR [esp]
  401a08:	mov    eax,ebp
  401a0a:	mov    edx,edi
  401a0c:	call   0x4016e8
  401a11:	mov    eax,DWORD PTR [esp]
  401a14:	cmp    DWORD PTR [eax],0x0
  401a17:	je     0x401a47
  401a19:	mov    eax,DWORD PTR [esp]
  401a1c:	mov    eax,DWORD PTR [eax+0x4]
  401a1f:	mov    edx,DWORD PTR [esi]
  401a21:	add    DWORD PTR [edx+0x8],eax
  401a24:	mov    eax,DWORD PTR [esp]
  401a27:	mov    eax,DWORD PTR [eax+0x4]
  401a2a:	mov    edx,DWORD PTR [esi]
  401a2c:	sub    DWORD PTR [edx+0xc],eax
  401a2f:	mov    eax,DWORD PTR [esi]
  401a31:	cmp    DWORD PTR [eax+0xc],0x0
  401a35:	jne    0x401a47
  401a37:	mov    eax,DWORD PTR [esi]
  401a39:	call   0x4013c4
  401a3e:	jmp    0x401a47
  401a40:	mov    eax,DWORD PTR [esp]
  401a43:	xor    edx,edx
  401a45:	mov    DWORD PTR [eax],edx
  401a47:	add    esp,0x18
  401a4a:	pop    ebp
  401a4b:	pop    edi
  401a4c:	pop    esi
  401a4d:	pop    ebx
  401a4e:	ret    
  401a4f:	nop
  401a50:	push   ebx
  401a51:	add    esp,0xffffffe8
  401a54:	mov    ebx,ecx
  401a56:	lea    ecx,[eax+0x3fff]
  401a5c:	and    ecx,0xffffc000
  401a62:	mov    DWORD PTR [esp],ecx
  401a65:	add    edx,eax
  401a67:	and    edx,0xffffc000
  401a6d:	mov    DWORD PTR [esp+0x4],edx
  401a71:	mov    eax,DWORD PTR [esp+0x4]
  401a75:	cmp    eax,DWORD PTR [esp]
  401a78:	jbe    0x401ad9
  401a7a:	mov    ecx,ebx
  401a7c:	mov    edx,DWORD PTR [esp+0x4]
  401a80:	sub    edx,DWORD PTR [esp]
  401a83:	mov    eax,DWORD PTR [esp]
  401a86:	call   0x4017a8
  401a8b:	lea    ecx,[esp+0x8]
  401a8f:	mov    edx,ebx
  401a91:	mov    eax,0x42f5f4
  401a96:	call   0x4013f8
  401a9b:	mov    ebx,DWORD PTR [esp+0x8]
  401a9f:	test   ebx,ebx
  401aa1:	je     0x401ac2
  401aa3:	lea    ecx,[esp+0x10]
  401aa7:	mov    edx,DWORD PTR [esp+0xc]
  401aab:	mov    eax,ebx
  401aad:	call   0x401620
  401ab2:	mov    eax,DWORD PTR [esp+0x10]
  401ab6:	mov    DWORD PTR [esp+0x8],eax
  401aba:	mov    eax,DWORD PTR [esp+0x14]
  401abe:	mov    DWORD PTR [esp+0xc],eax
  401ac2:	cmp    DWORD PTR [esp+0x8],0x0
  401ac7:	je     0x401add
  401ac9:	lea    edx,[esp+0x8]
  401acd:	mov    eax,0x42f5f4
  401ad2:	call   0x401480
  401ad7:	jmp    0x401add
  401ad9:	xor    eax,eax
  401adb:	mov    DWORD PTR [ebx],eax
  401add:	add    esp,0x18
  401ae0:	pop    ebx
  401ae1:	ret    
  401ae2:	mov    eax,eax
  401ae4:	push   ebp
  401ae5:	mov    ebp,esp
  401ae7:	push   ecx
  401ae8:	xor    edx,edx
  401aea:	push   ebp
  401aeb:	push   0x401bac
  401af0:	push   DWORD PTR fs:[edx]
  401af3:	mov    DWORD PTR fs:[edx],esp
  401af6:	push   0x42f5c4
  401afb:	call   0x4012bc
  401b00:	cmp    BYTE PTR ds:0x42f045,0x0
  401b07:	je     0x401b13
  401b09:	push   0x42f5c4
  401b0e:	call   0x4012c4
  401b13:	mov    eax,0x42f5e4
  401b18:	call   0x401360
  401b1d:	mov    eax,0x42f5f4
  401b22:	call   0x401360
  401b27:	mov    eax,0x42f620
  401b2c:	call   0x401360
  401b31:	push   0xff8
  401b36:	push   0x0
  401b38:	call   0x40129c
  401b3d:	mov    ds:0x42f61c,eax
  401b42:	cmp    DWORD PTR ds:0x42f61c,0x0
  401b49:	je     0x401b8b
  401b4b:	mov    eax,0x3
  401b50:	mov    edx,DWORD PTR ds:0x42f61c
  401b56:	xor    ecx,ecx
  401b58:	mov    DWORD PTR [edx+eax*4-0xc],ecx
  401b5c:	inc    eax
  401b5d:	cmp    eax,0x401
  401b62:	jne    0x401b50
  401b64:	mov    DWORD PTR [ebp-0x4],0x42f604
  401b6b:	mov    eax,DWORD PTR [ebp-0x4]
  401b6e:	mov    edx,DWORD PTR [ebp-0x4]
  401b71:	mov    DWORD PTR [eax+0x4],edx
  401b74:	mov    eax,DWORD PTR [ebp-0x4]
  401b77:	mov    edx,DWORD PTR [ebp-0x4]
  401b7a:	mov    DWORD PTR [eax],edx
  401b7c:	mov    eax,DWORD PTR [ebp-0x4]
  401b7f:	mov    ds:0x42f610,eax
  401b84:	mov    BYTE PTR ds:0x42f5bc,0x1
  401b8b:	xor    eax,eax
  401b8d:	pop    edx
  401b8e:	pop    ecx
  401b8f:	pop    ecx
  401b90:	mov    DWORD PTR fs:[eax],edx
  401b93:	push   0x401bb3
  401b98:	cmp    BYTE PTR ds:0x42f045,0x0
  401b9f:	je     0x401bab
  401ba1:	push   0x42f5c4
  401ba6:	call   0x4012cc
  401bab:	ret    
  401bac:	jmp    0x4036ac
  401bb1:	jmp    0x401b98
  401bb3:	mov    al,ds:0x42f5bc
  401bb8:	pop    ecx
  401bb9:	pop    ebp
  401bba:	ret    
  401bbb:	nop
  401bbc:	push   ebp
  401bbd:	mov    ebp,esp
  401bbf:	add    esp,0xfffffff8
  401bc2:	cmp    BYTE PTR ds:0x42f5bc,0x0
  401bc9:	je     0x401cb7
  401bcf:	xor    eax,eax
  401bd1:	push   ebp
  401bd2:	push   0x401cb0
  401bd7:	push   DWORD PTR fs:[eax]
  401bda:	mov    DWORD PTR fs:[eax],esp
  401bdd:	cmp    BYTE PTR ds:0x42f045,0x0
  401be4:	je     0x401bf0
  401be6:	push   0x42f5c4
  401beb:	call   0x4012c4
  401bf0:	mov    BYTE PTR ds:0x42f5bc,0x0
  401bf7:	mov    eax,ds:0x42f61c
  401bfc:	push   eax
  401bfd:	call   0x4012a4
  401c02:	xor    eax,eax
  401c04:	mov    ds:0x42f61c,eax
  401c09:	mov    eax,ds:0x42f5e4
  401c0e:	mov    DWORD PTR [ebp-0x8],eax
  401c11:	jmp    0x401c2e
  401c13:	push   0x8000
  401c18:	push   0x0
  401c1a:	mov    eax,DWORD PTR [ebp-0x8]
  401c1d:	mov    eax,DWORD PTR [eax+0x8]
  401c20:	push   eax
  401c21:	call   0x4012b4
  401c26:	mov    eax,DWORD PTR [ebp-0x8]
  401c29:	mov    eax,DWORD PTR [eax]
  401c2b:	mov    DWORD PTR [ebp-0x8],eax
  401c2e:	mov    eax,0x42f5e4
  401c33:	cmp    eax,DWORD PTR [ebp-0x8]
  401c36:	jne    0x401c13
  401c38:	mov    eax,0x42f5e4
  401c3d:	call   0x401360
  401c42:	mov    eax,0x42f5f4
  401c47:	call   0x401360
  401c4c:	mov    eax,0x42f620
  401c51:	call   0x401360
  401c56:	mov    eax,ds:0x42f5dc
  401c5b:	mov    DWORD PTR [ebp-0x4],eax
  401c5e:	cmp    DWORD PTR [ebp-0x4],0x0
  401c62:	je     0x401c85
  401c64:	mov    eax,DWORD PTR [ebp-0x4]
  401c67:	mov    eax,DWORD PTR [eax]
  401c69:	mov    ds:0x42f5dc,eax
  401c6e:	mov    eax,DWORD PTR [ebp-0x4]
  401c71:	push   eax
  401c72:	call   0x4012a4
  401c77:	mov    eax,ds:0x42f5dc
  401c7c:	mov    DWORD PTR [ebp-0x4],eax
  401c7f:	cmp    DWORD PTR [ebp-0x4],0x0
  401c83:	jne    0x401c64
  401c85:	xor    eax,eax
  401c87:	pop    edx
  401c88:	pop    ecx
  401c89:	pop    ecx
  401c8a:	mov    DWORD PTR fs:[eax],edx
  401c8d:	push   0x401cb7
  401c92:	cmp    BYTE PTR ds:0x42f045,0x0
  401c99:	je     0x401ca5
  401c9b:	push   0x42f5c4
  401ca0:	call   0x4012cc
  401ca5:	push   0x42f5c4
  401caa:	call   0x4012d4
  401caf:	ret    
  401cb0:	jmp    0x4036ac
  401cb5:	jmp    0x401c92
  401cb7:	pop    ecx
  401cb8:	pop    ecx
  401cb9:	pop    ebp
  401cba:	ret    
  401cbb:	nop
  401cbc:	push   ebx
  401cbd:	add    esp,0xfffffff8
  401cc0:	cmp    eax,DWORD PTR ds:0x42f610
  401cc6:	jne    0x401cd1
  401cc8:	mov    edx,DWORD PTR [eax+0x4]
  401ccb:	mov    DWORD PTR ds:0x42f610,edx
  401cd1:	mov    edx,DWORD PTR [eax+0x4]
  401cd4:	mov    DWORD PTR [esp],edx
  401cd7:	mov    edx,DWORD PTR [eax+0x8]
  401cda:	cmp    edx,0x1000
  401ce0:	jg     0x401d30
  401ce2:	cmp    eax,DWORD PTR [esp]
  401ce5:	jne    0x401cfe
  401ce7:	test   edx,edx
  401ce9:	jns    0x401cee
  401ceb:	add    edx,0x3
  401cee:	sar    edx,0x2
  401cf1:	mov    eax,ds:0x42f61c
  401cf6:	xor    ecx,ecx
  401cf8:	mov    DWORD PTR [eax+edx*4-0xc],ecx
  401cfc:	jmp    0x401d49
  401cfe:	test   edx,edx
  401d00:	jns    0x401d05
  401d02:	add    edx,0x3
  401d05:	sar    edx,0x2
  401d08:	mov    ecx,DWORD PTR ds:0x42f61c
  401d0e:	mov    ebx,DWORD PTR [esp]
  401d11:	mov    DWORD PTR [ecx+edx*4-0xc],ebx
  401d15:	mov    eax,DWORD PTR [eax]
  401d17:	mov    DWORD PTR [esp+0x4],eax
  401d1b:	mov    eax,DWORD PTR [esp]
  401d1e:	mov    edx,DWORD PTR [esp+0x4]
  401d22:	mov    DWORD PTR [eax],edx
  401d24:	mov    eax,DWORD PTR [esp+0x4]
  401d28:	mov    edx,DWORD PTR [esp]
  401d2b:	mov    DWORD PTR [eax+0x4],edx
  401d2e:	jmp    0x401d49
  401d30:	mov    eax,DWORD PTR [eax]
  401d32:	mov    DWORD PTR [esp+0x4],eax
  401d36:	mov    eax,DWORD PTR [esp]
  401d39:	mov    edx,DWORD PTR [esp+0x4]
  401d3d:	mov    DWORD PTR [eax],edx
  401d3f:	mov    eax,DWORD PTR [esp+0x4]
  401d43:	mov    edx,DWORD PTR [esp]
  401d46:	mov    DWORD PTR [eax+0x4],edx
  401d49:	pop    ecx
  401d4a:	pop    edx
  401d4b:	pop    ebx
  401d4c:	ret    
  401d4d:	lea    eax,[eax+0x0]
  401d50:	push   ebx
  401d51:	push   ecx
  401d52:	mov    ecx,esp
  401d54:	mov    edx,DWORD PTR ds:0x42f620
  401d5a:	mov    DWORD PTR [ecx],edx
  401d5c:	jmp    0x401d76
  401d5e:	mov    edx,DWORD PTR [ecx]
  401d60:	mov    edx,DWORD PTR [edx+0x8]
  401d63:	cmp    eax,edx
  401d65:	jb     0x401d70
  401d67:	mov    ebx,DWORD PTR [ecx]
  401d69:	add    edx,DWORD PTR [ebx+0xc]
  401d6c:	cmp    eax,edx
  401d6e:	jb     0x401d8d
  401d70:	mov    edx,DWORD PTR [ecx]
  401d72:	mov    edx,DWORD PTR [edx]
  401d74:	mov    DWORD PTR [ecx],edx
  401d76:	mov    edx,0x42f620
  401d7b:	cmp    edx,DWORD PTR [ecx]
  401d7d:	jne    0x401d5e
  401d7f:	mov    DWORD PTR ds:0x42f5c0,0x3
  401d89:	xor    eax,eax
  401d8b:	mov    DWORD PTR [ecx],eax
  401d8d:	mov    eax,DWORD PTR [ecx]
  401d8f:	pop    edx
  401d90:	pop    ebx
  401d91:	ret    
  401d92:	mov    eax,eax
  401d94:	push   ebx
  401d95:	push   ecx
  401d96:	mov    ecx,edx
  401d98:	sub    ecx,0x4
  401d9b:	lea    ebx,[ecx+eax*1]
  401d9e:	mov    DWORD PTR [esp],ebx
  401da1:	cmp    edx,0x10
  401da4:	jl     0x401db9
  401da6:	mov    edx,DWORD PTR [esp]
  401da9:	mov    DWORD PTR [edx],0x80000007
  401daf:	mov    edx,ecx
  401db1:	call   0x401f90
  401db6:	pop    edx
  401db7:	pop    ebx
  401db8:	ret    
  401db9:	cmp    edx,0x4
  401dbc:	jl     0x401dcd
  401dbe:	mov    ecx,edx
  401dc0:	or     ecx,0x80000002
  401dc6:	mov    DWORD PTR [eax],ecx
  401dc8:	mov    eax,DWORD PTR [esp]
  401dcb:	mov    DWORD PTR [eax],ecx
  401dcd:	pop    edx
  401dce:	pop    ebx
  401dcf:	ret    
  401dd0:	inc    DWORD PTR ds:0x42f5ac
  401dd6:	mov    edx,eax
  401dd8:	sub    edx,0x4
  401ddb:	mov    edx,DWORD PTR [edx]
  401ddd:	and    edx,0x7ffffffc
  401de3:	sub    edx,0x4
  401de6:	add    DWORD PTR ds:0x42f5b0,edx
  401dec:	call   0x4024ec
  401df1:	ret    
  401df2:	mov    eax,eax
  401df4:	cmp    edx,0xc
  401df7:	jl     0x401e07
  401df9:	or     edx,0x2
  401dfc:	mov    DWORD PTR [eax],edx
  401dfe:	add    eax,0x4
  401e01:	call   0x401dd0
  401e06:	ret    
  401e07:	cmp    edx,0x4
  401e0a:	jl     0x401e16
  401e0c:	mov    ecx,edx
  401e0e:	or     ecx,0x80000002
  401e14:	mov    DWORD PTR [eax],ecx
  401e16:	add    eax,edx
  401e18:	and    DWORD PTR [eax],0xfffffffe
  401e1b:	ret    
  401e1c:	push   ebx
  401e1d:	push   esi
  401e1e:	push   ecx
  401e1f:	mov    edx,eax
  401e21:	sub    edx,0x4
  401e24:	mov    edx,DWORD PTR [edx]
  401e26:	mov    ecx,edx
  401e28:	and    ecx,0x80000002
  401e2e:	cmp    ecx,0x80000002
  401e34:	je     0x401e40
  401e36:	mov    DWORD PTR ds:0x42f5c0,0x4
  401e40:	mov    ebx,edx
  401e42:	and    ebx,0x7ffffffc
  401e48:	sub    eax,ebx
  401e4a:	mov    ecx,eax
  401e4c:	xor    edx,DWORD PTR [ecx]
  401e4e:	test   edx,0xfffffffe
  401e54:	je     0x401e60
  401e56:	mov    DWORD PTR ds:0x42f5c0,0x5
  401e60:	test   BYTE PTR [ecx],0x1
  401e63:	je     0x401e8e
  401e65:	mov    edx,eax
  401e67:	sub    edx,0xc
  401e6a:	mov    esi,DWORD PTR [edx+0x8]
  401e6d:	sub    eax,esi
  401e6f:	mov    DWORD PTR [esp],eax
  401e72:	mov    eax,DWORD PTR [esp]
  401e75:	cmp    esi,DWORD PTR [eax+0x8]
  401e78:	je     0x401e84
  401e7a:	mov    DWORD PTR ds:0x42f5c0,0x6
  401e84:	mov    eax,DWORD PTR [esp]
  401e87:	call   0x401cbc
  401e8c:	add    ebx,esi
  401e8e:	mov    eax,ebx
  401e90:	pop    edx
  401e91:	pop    esi
  401e92:	pop    ebx
  401e93:	ret    
  401e94:	push   ebx
  401e95:	push   esi
  401e96:	push   ecx
  401e97:	mov    ebx,eax
  401e99:	xor    esi,esi
  401e9b:	mov    eax,DWORD PTR [ebx]
  401e9d:	test   eax,0x80000000
  401ea2:	je     0x401eaf
  401ea4:	and    eax,0x7ffffffc
  401ea9:	add    esi,eax
  401eab:	add    ebx,eax
  401ead:	mov    eax,DWORD PTR [ebx]
  401eaf:	test   al,0x2
  401eb1:	jne    0x401ecb
  401eb3:	mov    DWORD PTR [esp],ebx
  401eb6:	mov    eax,DWORD PTR [esp]
  401eb9:	call   0x401cbc
  401ebe:	mov    eax,DWORD PTR [esp]
  401ec1:	mov    eax,DWORD PTR [eax+0x8]
  401ec4:	add    esi,eax
  401ec6:	add    ebx,eax
  401ec8:	and    DWORD PTR [ebx],0xfffffffe
  401ecb:	mov    eax,esi
  401ecd:	pop    edx
  401ece:	pop    esi
  401ecf:	pop    ebx
  401ed0:	ret    
  401ed1:	lea    eax,[eax+0x0]
  401ed4:	push   ebx
  401ed5:	push   esi
  401ed6:	push   edi
  401ed7:	push   ebp
  401ed8:	add    esp,0xfffffff4
  401edb:	mov    esi,edx
  401edd:	mov    ebp,eax
  401edf:	xor    ebx,ebx
  401ee1:	mov    eax,ebp
  401ee3:	call   0x401d50
  401ee8:	mov    DWORD PTR [esp+0x8],eax
  401eec:	cmp    DWORD PTR [esp+0x8],0x0
  401ef1:	je     0x401f86
  401ef7:	mov    eax,DWORD PTR [esp+0x8]
  401efb:	mov    edi,DWORD PTR [eax+0x8]
  401efe:	mov    eax,edi
  401f00:	mov    edx,DWORD PTR [esp+0x8]
  401f04:	add    eax,DWORD PTR [edx+0xc]
  401f07:	mov    edx,eax
  401f09:	lea    ecx,[esi+ebp*1]
  401f0c:	sub    edx,ecx
  401f0e:	cmp    edx,0xc
  401f11:	jg     0x401f17
  401f13:	mov    esi,eax
  401f15:	sub    esi,ebp
  401f17:	mov    eax,ebp
  401f19:	sub    eax,edi
  401f1b:	cmp    eax,0xc
  401f1e:	jge    0x401f36
  401f20:	mov    eax,DWORD PTR [esp+0x8]
  401f24:	mov    edx,ebp
  401f26:	sub    edx,DWORD PTR [eax+0x8]
  401f29:	add    edx,esi
  401f2b:	mov    ecx,esp
  401f2d:	mov    eax,edi
  401f2f:	call   0x401a50
  401f34:	jmp    0x401f45
  401f36:	mov    ecx,esp
  401f38:	mov    edx,esi
  401f3a:	sub    edx,0x4
  401f3d:	lea    eax,[ebp+0x4]
  401f40:	call   0x401a50
  401f45:	mov    edi,DWORD PTR [esp]
  401f48:	test   edi,edi
  401f4a:	je     0x401f86
  401f4c:	mov    edx,edi
  401f4e:	sub    edx,ebp
  401f50:	mov    eax,ebp
  401f52:	call   0x401d94
  401f57:	mov    edx,DWORD PTR [esp+0x8]
  401f5b:	mov    edx,DWORD PTR [edx+0x8]
  401f5e:	mov    ecx,DWORD PTR [esp+0x8]
  401f62:	add    edx,DWORD PTR [ecx+0xc]
  401f65:	mov    eax,edi
  401f67:	add    eax,DWORD PTR [esp+0x4]
  401f6b:	cmp    edx,eax
  401f6d:	jbe    0x401f79
  401f6f:	lea    edx,[esi+ebp*1]
  401f72:	sub    edx,eax
  401f74:	call   0x401df4
  401f79:	mov    edx,esp
  401f7b:	mov    eax,DWORD PTR [esp+0x8]
  401f7f:	call   0x401480
  401f84:	mov    bl,0x1
  401f86:	mov    eax,ebx
  401f88:	add    esp,0xc
  401f8b:	pop    ebp
  401f8c:	pop    edi
  401f8d:	pop    esi
  401f8e:	pop    ebx
  401f8f:	ret    
  401f90:	push   ebx
  401f91:	push   esi
  401f92:	add    esp,0xfffffff4
  401f95:	mov    ebx,edx
  401f97:	mov    esi,eax
  401f99:	mov    DWORD PTR [esp],esi
  401f9c:	mov    eax,DWORD PTR [esp]
  401f9f:	mov    DWORD PTR [eax+0x8],ebx
  401fa2:	mov    eax,DWORD PTR [esp]
  401fa5:	add    eax,ebx
  401fa7:	sub    eax,0xc
  401faa:	mov    DWORD PTR [eax+0x8],ebx
  401fad:	cmp    ebx,0x1000
  401fb3:	jg     0x40202b
  401fb5:	mov    eax,ebx
  401fb7:	test   eax,eax
  401fb9:	jns    0x401fbe
  401fbb:	add    eax,0x3
  401fbe:	sar    eax,0x2
  401fc1:	mov    edx,DWORD PTR ds:0x42f61c
  401fc7:	mov    edx,DWORD PTR [edx+eax*4-0xc]
  401fcb:	mov    DWORD PTR [esp+0x4],edx
  401fcf:	cmp    DWORD PTR [esp+0x4],0x0
  401fd4:	jne    0x401ff9
  401fd6:	mov    edx,DWORD PTR ds:0x42f61c
  401fdc:	mov    ecx,DWORD PTR [esp]
  401fdf:	mov    DWORD PTR [edx+eax*4-0xc],ecx
  401fe3:	mov    eax,DWORD PTR [esp]
  401fe6:	mov    edx,DWORD PTR [esp]
  401fe9:	mov    DWORD PTR [eax+0x4],edx
  401fec:	mov    eax,DWORD PTR [esp]
  401fef:	mov    edx,DWORD PTR [esp]
  401ff2:	mov    DWORD PTR [eax],edx
  401ff4:	jmp    0x402081
  401ff9:	mov    eax,DWORD PTR [esp+0x4]
  401ffd:	mov    eax,DWORD PTR [eax]
  401fff:	mov    DWORD PTR [esp+0x8],eax
  402003:	mov    eax,DWORD PTR [esp]
  402006:	mov    edx,DWORD PTR [esp+0x4]
  40200a:	mov    DWORD PTR [eax+0x4],edx
  40200d:	mov    eax,DWORD PTR [esp]
  402010:	mov    edx,DWORD PTR [esp+0x8]
  402014:	mov    DWORD PTR [eax],edx
  402016:	mov    eax,DWORD PTR [esp+0x4]
  40201a:	mov    edx,DWORD PTR [esp]
  40201d:	mov    DWORD PTR [eax],edx
  40201f:	mov    eax,DWORD PTR [esp+0x8]
  402023:	mov    edx,DWORD PTR [esp]
  402026:	mov    DWORD PTR [eax+0x4],edx
  402029:	jmp    0x402081
  40202b:	cmp    ebx,0x3c00
  402031:	jl     0x402040
  402033:	mov    edx,ebx
  402035:	mov    eax,esi
  402037:	call   0x401ed4
  40203c:	test   al,al
  40203e:	jne    0x402081
  402040:	mov    eax,ds:0x42f610
  402045:	mov    DWORD PTR [esp+0x4],eax
  402049:	mov    eax,DWORD PTR [esp]
  40204c:	mov    ds:0x42f610,eax
  402051:	mov    eax,DWORD PTR [esp+0x4]
  402055:	mov    eax,DWORD PTR [eax]
  402057:	mov    DWORD PTR [esp+0x8],eax
  40205b:	mov    eax,DWORD PTR [esp]
  40205e:	mov    edx,DWORD PTR [esp+0x4]
  402062:	mov    DWORD PTR [eax+0x4],edx
  402065:	mov    eax,DWORD PTR [esp]
  402068:	mov    edx,DWORD PTR [esp+0x8]
  40206c:	mov    DWORD PTR [eax],edx
  40206e:	mov    eax,DWORD PTR [esp+0x4]
  402072:	mov    edx,DWORD PTR [esp]
  402075:	mov    DWORD PTR [eax],edx
  402077:	mov    eax,DWORD PTR [esp+0x8]
  40207b:	mov    edx,DWORD PTR [esp]
  40207e:	mov    DWORD PTR [eax+0x4],edx
  402081:	add    esp,0xc
  402084:	pop    esi
  402085:	pop    ebx
  402086:	ret    
  402087:	nop
  402088:	cmp    DWORD PTR ds:0x42f614,0x0
  40208f:	jle    0x4020d1
  402091:	cmp    DWORD PTR ds:0x42f614,0xc
  402098:	jge    0x4020a6
  40209a:	mov    DWORD PTR ds:0x42f5c0,0x7
  4020a4:	jmp    0x4020d1
  4020a6:	mov    eax,ds:0x42f614
  4020ab:	or     eax,0x2
  4020ae:	mov    edx,DWORD PTR ds:0x42f618
  4020b4:	mov    DWORD PTR [edx],eax
  4020b6:	mov    eax,ds:0x42f618
  4020bb:	add    eax,0x4
  4020be:	call   0x401dd0
  4020c3:	xor    eax,eax
  4020c5:	mov    ds:0x42f618,eax
  4020ca:	xor    eax,eax
  4020cc:	mov    ds:0x42f614,eax
  4020d1:	ret    
  4020d2:	mov    eax,eax
  4020d4:	push   ebx
  4020d5:	push   esi
  4020d6:	push   edi
  4020d7:	add    esp,0xfffffff0
  4020da:	mov    esi,eax
  4020dc:	lea    edi,[esp]
  4020df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020e1:	mov    edi,esp
  4020e3:	call   0x402088
  4020e8:	lea    ecx,[esp+0x8]
  4020ec:	mov    edx,edi
  4020ee:	mov    eax,0x42f620
  4020f3:	call   0x4013f8
  4020f8:	mov    ebx,DWORD PTR [esp+0x8]
  4020fc:	test   ebx,ebx
  4020fe:	jne    0x402104
  402100:	xor    eax,eax
  402102:	jmp    0x402156
  402104:	mov    eax,DWORD PTR [edi]
  402106:	cmp    ebx,eax
  402108:	jae    0x402114
  40210a:	call   0x401e1c
  40210f:	sub    DWORD PTR [edi],eax
  402111:	add    DWORD PTR [edi+0x4],eax
  402114:	mov    eax,DWORD PTR [edi]
  402116:	add    eax,DWORD PTR [edi+0x4]
  402119:	mov    esi,ebx
  40211b:	add    esi,DWORD PTR [esp+0xc]
  40211f:	cmp    eax,esi
  402121:	jae    0x40212b
  402123:	call   0x401e94
  402128:	add    DWORD PTR [edi+0x4],eax
  40212b:	mov    eax,DWORD PTR [edi]
  40212d:	add    eax,DWORD PTR [edi+0x4]
  402130:	cmp    esi,eax
  402132:	jne    0x402145
  402134:	sub    eax,0x4
  402137:	mov    edx,0x4
  40213c:	call   0x401d94
  402141:	sub    DWORD PTR [edi+0x4],0x4
  402145:	mov    eax,DWORD PTR [edi]
  402147:	mov    ds:0x42f618,eax
  40214c:	mov    eax,DWORD PTR [edi+0x4]
  40214f:	mov    ds:0x42f614,eax
  402154:	mov    al,0x1
  402156:	add    esp,0x10
  402159:	pop    edi
  40215a:	pop    esi
  40215b:	pop    ebx
  40215c:	ret    
  40215d:	lea    eax,[eax+0x0]
  402160:	push   ebx
  402161:	add    esp,0xfffffff8
  402164:	mov    ebx,eax
  402166:	mov    edx,esp
  402168:	lea    eax,[ebx+0x4]
  40216b:	call   0x401864
  402170:	cmp    DWORD PTR [esp],0x0
  402174:	je     0x402181
  402176:	mov    eax,esp
  402178:	call   0x4020d4
  40217d:	test   al,al
  40217f:	jne    0x402185
  402181:	xor    eax,eax
  402183:	jmp    0x402187
  402185:	mov    al,0x1
  402187:	pop    ecx
  402188:	pop    edx
  402189:	pop    ebx
  40218a:	ret    
  40218b:	nop
  40218c:	push   ebx
  40218d:	push   esi
  40218e:	add    esp,0xfffffff8
  402191:	mov    esi,edx
  402193:	mov    ebx,eax
  402195:	mov    ecx,esp
  402197:	lea    edx,[esi+0x4]
  40219a:	mov    eax,ebx
  40219c:	call   0x40190c
  4021a1:	cmp    DWORD PTR [esp],0x0
  4021a5:	je     0x4021b2
  4021a7:	mov    eax,esp
  4021a9:	call   0x4020d4
  4021ae:	test   al,al
  4021b0:	jne    0x4021b6
  4021b2:	xor    eax,eax
  4021b4:	jmp    0x4021b8
  4021b6:	mov    al,0x1
  4021b8:	pop    ecx
  4021b9:	pop    edx
  4021ba:	pop    esi
  4021bb:	pop    ebx
  4021bc:	ret    
  4021bd:	lea    eax,[eax+0x0]
  4021c0:	push   ecx
  4021c1:	mov    edx,esp
  4021c3:	xor    ecx,ecx
  4021c5:	mov    DWORD PTR [edx],ecx
  4021c7:	test   eax,eax
  4021c9:	jns    0x4021ce
  4021cb:	add    eax,0x3
  4021ce:	sar    eax,0x2
  4021d1:	cmp    eax,0x400
  4021d6:	jg     0x4021f1
  4021d8:	mov    ecx,DWORD PTR ds:0x42f61c
  4021de:	mov    ecx,DWORD PTR [ecx+eax*4-0xc]
  4021e2:	mov    DWORD PTR [edx],ecx
  4021e4:	cmp    DWORD PTR [edx],0x0
  4021e7:	jne    0x4021f1
  4021e9:	inc    eax
  4021ea:	cmp    eax,0x401
  4021ef:	jne    0x4021d8
  4021f1:	mov    eax,DWORD PTR [edx]
  4021f3:	pop    edx
  4021f4:	ret    
  4021f5:	lea    eax,[eax+0x0]
  4021f8:	push   ebx
  4021f9:	push   esi
  4021fa:	push   edi
  4021fb:	push   ebp
  4021fc:	add    esp,0xfffffff4
  4021ff:	mov    ebx,eax
  402201:	lea    esi,[esp+0x8]
  402205:	mov    edi,0x42f610
  40220a:	mov    ebp,0x42f614
  40220f:	mov    eax,ds:0x42f608
  402214:	mov    DWORD PTR [esi],eax
  402216:	mov    eax,DWORD PTR [esi]
  402218:	cmp    ebx,DWORD PTR [eax+0x8]
  40221b:	jle    0x4022cc
  402221:	mov    eax,DWORD PTR [edi]
  402223:	mov    DWORD PTR [esi],eax
  402225:	mov    eax,DWORD PTR [esi]
  402227:	mov    eax,DWORD PTR [eax+0x8]
  40222a:	cmp    ebx,eax
  40222c:	jle    0x4022cc
  402232:	mov    edx,DWORD PTR [esi]
  402234:	mov    DWORD PTR [edx+0x8],ebx
  402237:	mov    edx,DWORD PTR [esi]
  402239:	mov    edx,DWORD PTR [edx+0x4]
  40223c:	mov    DWORD PTR [esi],edx
  40223e:	mov    edx,DWORD PTR [esi]
  402240:	cmp    ebx,DWORD PTR [edx+0x8]
  402243:	jg     0x402237
  402245:	mov    edx,DWORD PTR [edi]
  402247:	mov    DWORD PTR [edx+0x8],eax
  40224a:	mov    eax,DWORD PTR [esi]
  40224c:	cmp    eax,DWORD PTR [edi]
  40224e:	je     0x402256
  402250:	mov    eax,DWORD PTR [esi]
  402252:	mov    DWORD PTR [edi],eax
  402254:	jmp    0x4022cc
  402256:	cmp    ebx,0x1000
  40225c:	jg     0x40226c
  40225e:	mov    eax,ebx
  402260:	call   0x4021c0
  402265:	mov    DWORD PTR [esi],eax
  402267:	cmp    DWORD PTR [esi],0x0
  40226a:	jne    0x4022cc
  40226c:	mov    eax,ebx
  40226e:	call   0x402160
  402273:	test   al,al
  402275:	jne    0x402281
  402277:	xor    eax,eax
  402279:	mov    DWORD PTR [esp],eax
  40227c:	jmp    0x402335
  402281:	cmp    ebx,DWORD PTR [ebp+0x0]
  402284:	jg     0x40220f
  402286:	sub    DWORD PTR [ebp+0x0],ebx
  402289:	cmp    DWORD PTR [ebp+0x0],0xc
  40228d:	jge    0x402297
  40228f:	add    ebx,DWORD PTR [ebp+0x0]
  402292:	xor    eax,eax
  402294:	mov    DWORD PTR [ebp+0x0],eax
  402297:	mov    eax,ds:0x42f618
  40229c:	mov    DWORD PTR [esp+0x4],eax
  4022a0:	add    DWORD PTR ds:0x42f618,ebx
  4022a6:	mov    eax,ebx
  4022a8:	or     eax,0x2
  4022ab:	mov    edx,DWORD PTR [esp+0x4]
  4022af:	mov    DWORD PTR [edx],eax
  4022b1:	mov    eax,DWORD PTR [esp+0x4]
  4022b5:	add    eax,0x4
  4022b8:	mov    DWORD PTR [esp],eax
  4022bb:	inc    DWORD PTR ds:0x42f5ac
  4022c1:	sub    ebx,0x4
  4022c4:	add    DWORD PTR ds:0x42f5b0,ebx
  4022ca:	jmp    0x402335
  4022cc:	mov    eax,DWORD PTR [esi]
  4022ce:	call   0x401cbc
  4022d3:	mov    eax,DWORD PTR [esi]
  4022d5:	mov    edx,DWORD PTR [eax+0x8]
  4022d8:	mov    eax,edx
  4022da:	sub    eax,ebx
  4022dc:	cmp    eax,0xc
  4022df:	jl     0x4022ed
  4022e1:	mov    edx,DWORD PTR [esi]
  4022e3:	add    edx,ebx
  4022e5:	xchg   edx,eax
  4022e6:	call   0x401f90
  4022eb:	jmp    0x40230b
  4022ed:	mov    ebx,edx
  4022ef:	mov    eax,DWORD PTR [esi]
  4022f1:	cmp    eax,DWORD PTR [edi]
  4022f3:	jne    0x4022fc
  4022f5:	mov    eax,DWORD PTR [esi]
  4022f7:	mov    eax,DWORD PTR [eax+0x4]
  4022fa:	mov    DWORD PTR [edi],eax
  4022fc:	mov    eax,DWORD PTR [esi]
  4022fe:	add    eax,ebx
  402300:	mov    DWORD PTR [esp+0x4],eax
  402304:	mov    eax,DWORD PTR [esp+0x4]
  402308:	and    DWORD PTR [eax],0xfffffffe
  40230b:	mov    eax,DWORD PTR [esi]
  40230d:	mov    DWORD PTR [esp+0x4],eax
  402311:	mov    eax,ebx
  402313:	or     eax,0x2
  402316:	mov    edx,DWORD PTR [esp+0x4]
  40231a:	mov    DWORD PTR [edx],eax
  40231c:	mov    eax,DWORD PTR [esp+0x4]
  402320:	add    eax,0x4
  402323:	mov    DWORD PTR [esp],eax
  402326:	inc    DWORD PTR ds:0x42f5ac
  40232c:	sub    ebx,0x4
  40232f:	add    DWORD PTR ds:0x42f5b0,ebx
  402335:	mov    eax,DWORD PTR [esp]
  402338:	add    esp,0xc
  40233b:	pop    ebp
  40233c:	pop    edi
  40233d:	pop    esi
  40233e:	pop    ebx
  40233f:	ret    
  402340:	push   ebp
  402341:	mov    ebp,esp
  402343:	add    esp,0xffffffec
  402346:	push   ebx
  402347:	mov    ebx,eax
  402349:	cmp    BYTE PTR ds:0x42f5bc,0x0
  402350:	jne    0x40235b
  402352:	call   0x401ae4
  402357:	test   al,al
  402359:	je     0x402363
  40235b:	cmp    ebx,0x7ffffff8
  402361:	jle    0x40236d
  402363:	xor    eax,eax
  402365:	mov    DWORD PTR [ebp-0x4],eax
  402368:	jmp    0x4024e3
  40236d:	xor    edx,edx
  40236f:	push   ebp
  402370:	push   0x4024dc
  402375:	push   DWORD PTR fs:[edx]
  402378:	mov    DWORD PTR fs:[edx],esp
  40237b:	cmp    BYTE PTR ds:0x42f045,0x0
  402382:	je     0x40238e
  402384:	push   0x42f5c4
  402389:	call   0x4012c4
  40238e:	add    ebx,0x7
  402391:	and    ebx,0xfffffffc
  402394:	cmp    ebx,0xc
  402397:	jge    0x40239e
  402399:	mov    ebx,0xc
  40239e:	cmp    ebx,0x1000
  4023a4:	jg     0x402456
  4023aa:	mov    eax,ebx
  4023ac:	test   eax,eax
  4023ae:	jns    0x4023b3
  4023b0:	add    eax,0x3
  4023b3:	sar    eax,0x2
  4023b6:	mov    edx,DWORD PTR ds:0x42f61c
  4023bc:	mov    edx,DWORD PTR [edx+eax*4-0xc]
  4023c0:	mov    DWORD PTR [ebp-0x8],edx
  4023c3:	cmp    DWORD PTR [ebp-0x8],0x0
  4023c7:	je     0x402456
  4023cd:	mov    edx,DWORD PTR [ebp-0x8]
  4023d0:	add    edx,ebx
  4023d2:	mov    DWORD PTR [ebp-0x14],edx
  4023d5:	mov    edx,DWORD PTR [ebp-0x14]
  4023d8:	and    DWORD PTR [edx],0xfffffffe
  4023db:	mov    edx,DWORD PTR [ebp-0x8]
  4023de:	mov    edx,DWORD PTR [edx+0x4]
  4023e1:	mov    DWORD PTR [ebp-0x10],edx
  4023e4:	mov    edx,DWORD PTR [ebp-0x10]
  4023e7:	cmp    edx,DWORD PTR [ebp-0x8]
  4023ea:	jne    0x4023fa
  4023ec:	mov    edx,DWORD PTR ds:0x42f61c
  4023f2:	xor    ecx,ecx
  4023f4:	mov    DWORD PTR [edx+eax*4-0xc],ecx
  4023f8:	jmp    0x402420
  4023fa:	mov    edx,DWORD PTR ds:0x42f61c
  402400:	mov    ecx,DWORD PTR [ebp-0x10]
  402403:	mov    DWORD PTR [edx+eax*4-0xc],ecx
  402407:	mov    eax,DWORD PTR [ebp-0x8]
  40240a:	mov    eax,DWORD PTR [eax]
  40240c:	mov    DWORD PTR [ebp-0xc],eax
  40240f:	mov    eax,DWORD PTR [ebp-0xc]
  402412:	mov    edx,DWORD PTR [ebp-0x10]
  402415:	mov    DWORD PTR [eax+0x4],edx
  402418:	mov    eax,DWORD PTR [ebp-0x10]
  40241b:	mov    edx,DWORD PTR [ebp-0xc]
  40241e:	mov    DWORD PTR [eax],edx
  402420:	mov    eax,DWORD PTR [ebp-0x8]
  402423:	mov    DWORD PTR [ebp-0x14],eax
  402426:	mov    eax,DWORD PTR [ebp-0x8]
  402429:	mov    eax,DWORD PTR [eax+0x8]
  40242c:	or     eax,0x2
  40242f:	mov    edx,DWORD PTR [ebp-0x14]
  402432:	mov    DWORD PTR [edx],eax
  402434:	mov    eax,DWORD PTR [ebp-0x14]
  402437:	add    eax,0x4
  40243a:	mov    DWORD PTR [ebp-0x4],eax
  40243d:	inc    DWORD PTR ds:0x42f5ac
  402443:	sub    ebx,0x4
  402446:	add    DWORD PTR ds:0x42f5b0,ebx
  40244c:	call   0x403790
  402451:	jmp    0x4024e3
  402456:	cmp    ebx,DWORD PTR ds:0x42f614
  40245c:	jg     0x4024b1
  40245e:	sub    DWORD PTR ds:0x42f614,ebx
  402464:	cmp    DWORD PTR ds:0x42f614,0xc
  40246b:	jge    0x40247a
  40246d:	add    ebx,DWORD PTR ds:0x42f614
  402473:	xor    eax,eax
  402475:	mov    ds:0x42f614,eax
  40247a:	mov    eax,ds:0x42f618
  40247f:	mov    DWORD PTR [ebp-0x14],eax
  402482:	add    DWORD PTR ds:0x42f618,ebx
  402488:	mov    eax,ebx
  40248a:	or     eax,0x2
  40248d:	mov    edx,DWORD PTR [ebp-0x14]
  402490:	mov    DWORD PTR [edx],eax
  402492:	mov    eax,DWORD PTR [ebp-0x14]
  402495:	add    eax,0x4
  402498:	mov    DWORD PTR [ebp-0x4],eax
  40249b:	inc    DWORD PTR ds:0x42f5ac
  4024a1:	sub    ebx,0x4
  4024a4:	add    DWORD PTR ds:0x42f5b0,ebx
  4024aa:	call   0x403790
  4024af:	jmp    0x4024e3
  4024b1:	mov    eax,ebx
  4024b3:	call   0x4021f8
  4024b8:	mov    DWORD PTR [ebp-0x4],eax
  4024bb:	xor    eax,eax
  4024bd:	pop    edx
  4024be:	pop    ecx
  4024bf:	pop    ecx
  4024c0:	mov    DWORD PTR fs:[eax],edx
  4024c3:	push   0x4024e3
  4024c8:	cmp    BYTE PTR ds:0x42f045,0x0
  4024cf:	je     0x4024db
  4024d1:	push   0x42f5c4
  4024d6:	call   0x4012cc
  4024db:	ret    
  4024dc:	jmp    0x4036ac
  4024e1:	jmp    0x4024c8
  4024e3:	mov    eax,DWORD PTR [ebp-0x4]
  4024e6:	pop    ebx
  4024e7:	mov    esp,ebp
  4024e9:	pop    ebp
  4024ea:	ret    
  4024eb:	nop
  4024ec:	push   ebp
  4024ed:	mov    ebp,esp
  4024ef:	add    esp,0xfffffff0
  4024f2:	push   ebx
  4024f3:	mov    ebx,eax
  4024f5:	xor    eax,eax
  4024f7:	mov    ds:0x42f5c0,eax
  4024fc:	cmp    BYTE PTR ds:0x42f5bc,0x0
  402503:	jne    0x402524
  402505:	call   0x401ae4
  40250a:	test   al,al
  40250c:	jne    0x402524
  40250e:	mov    DWORD PTR ds:0x42f5c0,0x8
  402518:	mov    DWORD PTR [ebp-0x4],0x8
  40251f:	jmp    0x4026ba
  402524:	xor    edx,edx
  402526:	push   ebp
  402527:	push   0x4026b3
  40252c:	push   DWORD PTR fs:[edx]
  40252f:	mov    DWORD PTR fs:[edx],esp
  402532:	cmp    BYTE PTR ds:0x42f045,0x0
  402539:	je     0x402545
  40253b:	push   0x42f5c4
  402540:	call   0x4012c4
  402545:	mov    DWORD PTR [ebp-0x8],ebx
  402548:	mov    eax,DWORD PTR [ebp-0x8]
  40254b:	sub    eax,0x4
  40254e:	mov    DWORD PTR [ebp-0x8],eax
  402551:	mov    eax,DWORD PTR [ebp-0x8]
  402554:	mov    ebx,DWORD PTR [eax]
  402556:	test   bl,0x2
  402559:	jne    0x40256a
  40255b:	mov    DWORD PTR ds:0x42f5c0,0x9
  402565:	jmp    0x40268a
  40256a:	dec    DWORD PTR ds:0x42f5ac
  402570:	mov    eax,ebx
  402572:	and    eax,0x7ffffffc
  402577:	sub    eax,0x4
  40257a:	sub    DWORD PTR ds:0x42f5b0,eax
  402580:	test   bl,0x1
  402583:	je     0x4025d8
  402585:	mov    eax,DWORD PTR [ebp-0x8]
  402588:	sub    eax,0xc
  40258b:	mov    eax,DWORD PTR [eax+0x8]
  40258e:	cmp    eax,0xc
  402591:	jl     0x40259a
  402593:	test   eax,0x80000003
  402598:	je     0x4025a9
  40259a:	mov    DWORD PTR ds:0x42f5c0,0xa
  4025a4:	jmp    0x40268a
  4025a9:	mov    edx,DWORD PTR [ebp-0x8]
  4025ac:	sub    edx,eax
  4025ae:	mov    DWORD PTR [ebp-0x10],edx
  4025b1:	mov    edx,DWORD PTR [ebp-0x10]
  4025b4:	cmp    eax,DWORD PTR [edx+0x8]
  4025b7:	je     0x4025c8
  4025b9:	mov    DWORD PTR ds:0x42f5c0,0xa
  4025c3:	jmp    0x40268a
  4025c8:	add    ebx,eax
  4025ca:	mov    eax,DWORD PTR [ebp-0x10]
  4025cd:	mov    DWORD PTR [ebp-0x8],eax
  4025d0:	mov    eax,DWORD PTR [ebp-0x10]
  4025d3:	call   0x401cbc
  4025d8:	and    ebx,0x7ffffffc
  4025de:	mov    eax,DWORD PTR [ebp-0x8]
  4025e1:	add    eax,ebx
  4025e3:	mov    DWORD PTR [ebp-0xc],eax
  4025e6:	mov    eax,DWORD PTR [ebp-0xc]
  4025e9:	cmp    eax,DWORD PTR ds:0x42f618
  4025ef:	jne    0x40261d
  4025f1:	sub    DWORD PTR ds:0x42f618,ebx
  4025f7:	add    DWORD PTR ds:0x42f614,ebx
  4025fd:	cmp    DWORD PTR ds:0x42f614,0x3c00
  402607:	jle    0x40260e
  402609:	call   0x402088
  40260e:	xor    eax,eax
  402610:	mov    DWORD PTR [ebp-0x4],eax
  402613:	call   0x403790
  402618:	jmp    0x4026ba
  40261d:	mov    eax,DWORD PTR [ebp-0xc]
  402620:	mov    eax,DWORD PTR [eax]
  402622:	test   al,0x2
  402624:	je     0x402644
  402626:	and    eax,0x7ffffffc
  40262b:	cmp    eax,0x4
  40262e:	jge    0x40263c
  402630:	mov    DWORD PTR ds:0x42f5c0,0xb
  40263a:	jmp    0x40268a
  40263c:	mov    eax,DWORD PTR [ebp-0xc]
  40263f:	or     DWORD PTR [eax],0x1
  402642:	jmp    0x402680
  402644:	mov    eax,DWORD PTR [ebp-0xc]
  402647:	mov    DWORD PTR [ebp-0x10],eax
  40264a:	mov    eax,DWORD PTR [ebp-0x10]
  40264d:	cmp    DWORD PTR [eax+0x4],0x0
  402651:	je     0x402664
  402653:	mov    eax,DWORD PTR [ebp-0x10]
  402656:	cmp    DWORD PTR [eax],0x0
  402659:	je     0x402664
  40265b:	mov    eax,DWORD PTR [ebp-0x10]
  40265e:	cmp    DWORD PTR [eax+0x8],0xc
  402662:	jge    0x402670
  402664:	mov    DWORD PTR ds:0x42f5c0,0xb
  40266e:	jmp    0x40268a
  402670:	mov    eax,DWORD PTR [ebp-0x10]
  402673:	mov    eax,DWORD PTR [eax+0x8]
  402676:	add    ebx,eax
  402678:	mov    eax,DWORD PTR [ebp-0x10]
  40267b:	call   0x401cbc
  402680:	mov    edx,ebx
  402682:	mov    eax,DWORD PTR [ebp-0x8]
  402685:	call   0x401f90
  40268a:	mov    eax,ds:0x42f5c0
  40268f:	mov    DWORD PTR [ebp-0x4],eax
  402692:	xor    eax,eax
  402694:	pop    edx
  402695:	pop    ecx
  402696:	pop    ecx
  402697:	mov    DWORD PTR fs:[eax],edx
  40269a:	push   0x4026ba
  40269f:	cmp    BYTE PTR ds:0x42f045,0x0
  4026a6:	je     0x4026b2
  4026a8:	push   0x42f5c4
  4026ad:	call   0x4012cc
  4026b2:	ret    
  4026b3:	jmp    0x4036ac
  4026b8:	jmp    0x40269f
  4026ba:	mov    eax,DWORD PTR [ebp-0x4]
  4026bd:	pop    ebx
  4026be:	mov    esp,ebp
  4026c0:	pop    ebp
  4026c1:	ret    
  4026c2:	mov    eax,eax
  4026c4:	push   ebx
  4026c5:	push   esi
  4026c6:	push   edi
  4026c7:	push   ebp
  4026c8:	add    esp,0xfffffff4
  4026cb:	mov    ebx,edx
  4026cd:	add    ebx,0x7
  4026d0:	and    ebx,0xfffffffc
  4026d3:	cmp    ebx,0xc
  4026d6:	jge    0x4026dd
  4026d8:	mov    ebx,0xc
  4026dd:	sub    eax,0x4
  4026e0:	mov    DWORD PTR [esp],eax
  4026e3:	mov    eax,DWORD PTR [esp]
  4026e6:	mov    esi,DWORD PTR [eax]
  4026e8:	and    esi,0x7ffffffc
  4026ee:	mov    eax,DWORD PTR [esp]
  4026f1:	add    eax,esi
  4026f3:	mov    DWORD PTR [esp+0x4],eax
  4026f7:	cmp    esi,ebx
  4026f9:	jne    0x402702
  4026fb:	mov    al,0x1
  4026fd:	jmp    0x4028bf
  402702:	cmp    esi,ebx
  402704:	jle    0x40279a
  40270a:	mov    ebp,esi
  40270c:	sub    ebp,ebx
  40270e:	mov    edx,DWORD PTR [esp+0x4]
  402712:	cmp    edx,DWORD PTR ds:0x42f618
  402718:	jne    0x402746
  40271a:	sub    DWORD PTR ds:0x42f618,ebp
  402720:	add    DWORD PTR ds:0x42f614,ebp
  402726:	cmp    DWORD PTR ds:0x42f614,0xc
  40272d:	jge    0x4028a2
  402733:	add    DWORD PTR ds:0x42f618,ebp
  402739:	sub    DWORD PTR ds:0x42f614,ebp
  40273f:	mov    ebx,esi
  402741:	jmp    0x4028a2
  402746:	mov    DWORD PTR [esp+0x4],eax
  40274a:	mov    eax,DWORD PTR [esp+0x4]
  40274e:	test   BYTE PTR [eax],0x2
  402751:	jne    0x40276b
  402753:	mov    eax,DWORD PTR [esp+0x4]
  402757:	mov    DWORD PTR [esp+0x8],eax
  40275b:	mov    eax,DWORD PTR [esp+0x8]
  40275f:	add    ebp,DWORD PTR [eax+0x8]
  402762:	mov    eax,DWORD PTR [esp+0x8]
  402766:	call   0x401cbc
  40276b:	cmp    ebp,0xc
  40276e:	jl     0x402793
  402770:	mov    eax,DWORD PTR [esp]
  402773:	add    eax,ebx
  402775:	mov    DWORD PTR [esp+0x4],eax
  402779:	or     ebp,0x2
  40277c:	mov    eax,DWORD PTR [esp+0x4]
  402780:	mov    DWORD PTR [eax],ebp
  402782:	mov    eax,DWORD PTR [esp+0x4]
  402786:	add    eax,0x4
  402789:	call   0x401dd0
  40278e:	jmp    0x4028a2
  402793:	mov    ebx,esi
  402795:	jmp    0x4028a2
  40279a:	mov    edi,ebx
  40279c:	sub    edi,esi
  40279e:	mov    eax,DWORD PTR [esp+0x4]
  4027a2:	cmp    eax,DWORD PTR ds:0x42f618
  4027a8:	jne    0x40280f
  4027aa:	cmp    edi,DWORD PTR ds:0x42f614
  4027b0:	jg     0x402801
  4027b2:	sub    DWORD PTR ds:0x42f614,edi
  4027b8:	add    DWORD PTR ds:0x42f618,edi
  4027be:	cmp    DWORD PTR ds:0x42f614,0xc
  4027c5:	jge    0x4027df
  4027c7:	mov    eax,ds:0x42f614
  4027cc:	add    DWORD PTR ds:0x42f618,eax
  4027d2:	add    ebx,DWORD PTR ds:0x42f614
  4027d8:	xor    eax,eax
  4027da:	mov    ds:0x42f614,eax
  4027df:	mov    eax,ebx
  4027e1:	sub    eax,esi
  4027e3:	add    DWORD PTR ds:0x42f5b0,eax
  4027e9:	mov    eax,DWORD PTR [esp]
  4027ec:	mov    eax,DWORD PTR [eax]
  4027ee:	and    eax,0x80000003
  4027f3:	or     ebx,eax
  4027f5:	mov    eax,DWORD PTR [esp]
  4027f8:	mov    DWORD PTR [eax],ebx
  4027fa:	mov    al,0x1
  4027fc:	jmp    0x4028bf
  402801:	call   0x402088
  402806:	mov    eax,DWORD PTR [esp]
  402809:	add    eax,esi
  40280b:	mov    DWORD PTR [esp+0x4],eax
  40280f:	mov    eax,DWORD PTR [esp+0x4]
  402813:	test   BYTE PTR [eax],0x2
  402816:	jne    0x402867
  402818:	mov    eax,DWORD PTR [esp+0x4]
  40281c:	mov    DWORD PTR [esp+0x8],eax
  402820:	mov    edx,DWORD PTR [esp+0x8]
  402824:	mov    ebp,DWORD PTR [edx+0x8]
  402827:	cmp    edi,ebp
  402829:	jle    0x402835
  40282b:	add    eax,ebp
  40282d:	mov    DWORD PTR [esp+0x4],eax
  402831:	sub    edi,ebp
  402833:	jmp    0x402867
  402835:	mov    eax,DWORD PTR [esp+0x8]
  402839:	call   0x401cbc
  40283e:	sub    ebp,edi
  402840:	cmp    ebp,0xc
  402843:	jl     0x402853
  402845:	mov    eax,DWORD PTR [esp]
  402848:	add    eax,ebx
  40284a:	mov    edx,ebp
  40284c:	call   0x401f90
  402851:	jmp    0x4028a2
  402853:	add    ebx,ebp
  402855:	mov    eax,DWORD PTR [esp]
  402858:	add    eax,ebx
  40285a:	mov    DWORD PTR [esp+0x4],eax
  40285e:	mov    eax,DWORD PTR [esp+0x4]
  402862:	and    DWORD PTR [eax],0xfffffffe
  402865:	jmp    0x4028a2
  402867:	mov    eax,DWORD PTR [esp+0x4]
  40286b:	mov    eax,DWORD PTR [eax]
  40286d:	test   eax,0x80000000
  402872:	je     0x40289e
  402874:	and    eax,0x7ffffffc
  402879:	add    eax,DWORD PTR [esp+0x4]
  40287d:	mov    DWORD PTR [esp+0x4],eax
  402881:	mov    edx,edi
  402883:	mov    eax,DWORD PTR [esp+0x4]
  402887:	call   0x40218c
  40288c:	test   al,al
  40288e:	je     0x40289e
  402890:	mov    eax,DWORD PTR [esp]
  402893:	add    eax,esi
  402895:	mov    DWORD PTR [esp+0x4],eax
  402899:	jmp    0x40279a
  40289e:	xor    eax,eax
  4028a0:	jmp    0x4028bf
  4028a2:	mov    eax,ebx
  4028a4:	sub    eax,esi
  4028a6:	add    DWORD PTR ds:0x42f5b0,eax
  4028ac:	mov    eax,DWORD PTR [esp]
  4028af:	mov    eax,DWORD PTR [eax]
  4028b1:	and    eax,0x80000003
  4028b6:	or     ebx,eax
  4028b8:	mov    eax,DWORD PTR [esp]
  4028bb:	mov    DWORD PTR [eax],ebx
  4028bd:	mov    al,0x1
  4028bf:	add    esp,0xc
  4028c2:	pop    ebp
  4028c3:	pop    edi
  4028c4:	pop    esi
  4028c5:	pop    ebx
  4028c6:	ret    
  4028c7:	nop
  4028c8:	push   ebp
  4028c9:	mov    ebp,esp
  4028cb:	add    esp,0xfffffff8
  4028ce:	push   ebx
  4028cf:	push   esi
  4028d0:	mov    esi,edx
  4028d2:	mov    ebx,eax
  4028d4:	cmp    BYTE PTR ds:0x42f5bc,0x0
  4028db:	jne    0x4028f0
  4028dd:	call   0x401ae4
  4028e2:	test   al,al
  4028e4:	jne    0x4028f0
  4028e6:	xor    eax,eax
  4028e8:	mov    DWORD PTR [ebp-0x4],eax
  4028eb:	jmp    0x402988
  4028f0:	xor    edx,edx
  4028f2:	push   ebp
  4028f3:	push   0x402981
  4028f8:	push   DWORD PTR fs:[edx]
  4028fb:	mov    DWORD PTR fs:[edx],esp
  4028fe:	cmp    BYTE PTR ds:0x42f045,0x0
  402905:	je     0x402911
  402907:	push   0x42f5c4
  40290c:	call   0x4012c4
  402911:	mov    edx,esi
  402913:	mov    eax,ebx
  402915:	call   0x4026c4
  40291a:	test   al,al
  40291c:	je     0x402923
  40291e:	mov    DWORD PTR [ebp-0x4],ebx
  402921:	jmp    0x402960
  402923:	mov    eax,esi
  402925:	call   0x402340
  40292a:	mov    DWORD PTR [ebp-0x8],eax
  40292d:	mov    eax,ebx
  40292f:	sub    eax,0x4
  402932:	mov    eax,DWORD PTR [eax]
  402934:	and    eax,0x7ffffffc
  402939:	sub    eax,0x4
  40293c:	cmp    esi,eax
  40293e:	jge    0x402942
  402940:	mov    eax,esi
  402942:	cmp    DWORD PTR [ebp-0x8],0x0
  402946:	je     0x40295a
  402948:	mov    edx,DWORD PTR [ebp-0x8]
  40294b:	mov    ecx,ebx
  40294d:	xchg   ecx,eax
  40294e:	call   0x402b2c
  402953:	mov    eax,ebx
  402955:	call   0x4024ec
  40295a:	mov    eax,DWORD PTR [ebp-0x8]
  40295d:	mov    DWORD PTR [ebp-0x4],eax
  402960:	xor    eax,eax
  402962:	pop    edx
  402963:	pop    ecx
  402964:	pop    ecx
  402965:	mov    DWORD PTR fs:[eax],edx
  402968:	push   0x402988
  40296d:	cmp    BYTE PTR ds:0x42f045,0x0
  402974:	je     0x402980
  402976:	push   0x42f5c4
  40297b:	call   0x4012cc
  402980:	ret    
  402981:	jmp    0x4036ac
  402986:	jmp    0x40296d
  402988:	mov    eax,DWORD PTR [ebp-0x4]
  40298b:	pop    esi
  40298c:	pop    ebx
  40298d:	pop    ecx
  40298e:	pop    ecx
  40298f:	pop    ebp
  402990:	ret    
  402991:	lea    eax,[eax+0x0]
  402994:	push   ebx
  402995:	push   ecx
  402996:	mov    ebx,eax
  402998:	test   ebx,ebx
  40299a:	jle    0x4029b6
  40299c:	mov    eax,ebx
  40299e:	call   DWORD PTR ds:0x42e038
  4029a4:	mov    DWORD PTR [esp],eax
  4029a7:	cmp    DWORD PTR [esp],0x0
  4029ab:	jne    0x4029bb
  4029ad:	mov    al,0x1
  4029af:	call   0x402a8c
  4029b4:	jmp    0x4029bb
  4029b6:	xor    eax,eax
  4029b8:	mov    DWORD PTR [esp],eax
  4029bb:	mov    eax,DWORD PTR [esp]
  4029be:	pop    edx
  4029bf:	pop    ebx
  4029c0:	ret    
  4029c1:	lea    eax,[eax+0x0]
  4029c4:	push   ebx
  4029c5:	test   eax,eax
  4029c7:	je     0x4029de
  4029c9:	call   DWORD PTR ds:0x42e03c
  4029cf:	mov    ebx,eax
  4029d1:	test   ebx,ebx
  4029d3:	je     0x4029e0
  4029d5:	mov    al,0x2
  4029d7:	call   0x402a8c
  4029dc:	jmp    0x4029e0
  4029de:	xor    ebx,ebx
  4029e0:	mov    eax,ebx
  4029e2:	pop    ebx
  4029e3:	ret    
  4029e4:	mov    ecx,DWORD PTR [eax]
  4029e6:	test   ecx,ecx
  4029e8:	je     0x402a1c
  4029ea:	test   edx,edx
  4029ec:	je     0x402a06
  4029ee:	push   eax
  4029ef:	mov    eax,ecx
  4029f1:	call   DWORD PTR ds:0x42e040
  4029f7:	pop    ecx
  4029f8:	or     eax,eax
  4029fa:	je     0x402a15
  4029fc:	mov    DWORD PTR [ecx],eax
  4029fe:	ret    
  4029ff:	mov    al,0x2
  402a01:	jmp    0x402a8c
  402a06:	mov    DWORD PTR [eax],edx
  402a08:	mov    eax,ecx
  402a0a:	call   DWORD PTR ds:0x42e03c
  402a10:	or     eax,eax
  402a12:	jne    0x4029ff
  402a14:	ret    
  402a15:	mov    al,0x1
  402a17:	jmp    0x402a8c
  402a1c:	test   edx,edx
  402a1e:	je     0x402a30
  402a20:	push   eax
  402a21:	mov    eax,edx
  402a23:	call   DWORD PTR ds:0x42e038
  402a29:	pop    ecx
  402a2a:	or     eax,eax
  402a2c:	je     0x402a15
  402a2e:	mov    DWORD PTR [ecx],eax
  402a30:	ret    
  402a31:	lea    eax,[eax+0x0]
  402a34:	mov    DWORD PTR ds:0x42e004,edx
  402a3a:	call   0x403c94
  402a3f:	ret    
  402a40:	push   ebx
  402a41:	push   esi
  402a42:	mov    esi,edx
  402a44:	mov    ebx,eax
  402a46:	and    bl,0x7f
  402a49:	cmp    DWORD PTR ds:0x42f008,0x0
  402a50:	je     0x402a5c
  402a52:	mov    edx,esi
  402a54:	mov    eax,ebx
  402a56:	call   DWORD PTR ds:0x42f008
  402a5c:	test   bl,bl
  402a5e:	jne    0x402a6d
  402a60:	call   0x405980
  402a65:	mov    ebx,DWORD PTR [eax+0x4]
  402a6b:	jmp    0x402a7c
  402a6d:	cmp    bl,0x18
  402a70:	ja     0x402a7c
  402a72:	xor    eax,eax
  402a74:	mov    al,bl
  402a76:	mov    bl,BYTE PTR [eax+0x42e044]
  402a7c:	xor    eax,eax
  402a7e:	mov    al,bl
  402a80:	mov    edx,esi
  402a82:	call   0x402a34
  402a87:	pop    esi
  402a88:	pop    ebx
  402a89:	ret    
  402a8a:	mov    eax,eax
  402a8c:	and    eax,0x7f
  402a8f:	mov    edx,DWORD PTR [esp]
  402a92:	jmp    0x402a40
  402a97:	ret    
  402a98:	push   eax
  402a99:	push   edx
  402a9a:	push   ecx
  402a9b:	call   0x405980
  402aa0:	cmp    DWORD PTR [eax+0x4],0x0
  402aa7:	pop    ecx
  402aa8:	pop    edx
  402aa9:	pop    eax
  402aaa:	jne    0x402aad
  402aac:	ret    
  402aad:	xor    eax,eax
  402aaf:	jmp    0x402a8c
  402ab4:	ret    
  402ab5:	lea    eax,[eax+0x0]
  402ab8:	push   ebx
  402ab9:	mov    ebx,eax
  402abb:	call   0x405980
  402ac0:	mov    DWORD PTR [eax+0x4],ebx
  402ac6:	pop    ebx
  402ac7:	ret    
  402ac8:	push   esi
  402ac9:	push   edi
  402aca:	mov    esi,eax
  402acc:	mov    edi,DWORD PTR [esp+0xc]
  402ad0:	xor    eax,eax
  402ad2:	or     al,BYTE PTR [esi]
  402ad4:	je     0x402b01
  402ad6:	test   edx,edx
  402ad8:	jle    0x402af2
  402ada:	cmp    edx,eax
  402adc:	jg     0x402af9
  402ade:	sub    eax,edx
  402ae0:	inc    eax
  402ae1:	test   ecx,ecx
  402ae3:	jl     0x402af9
  402ae5:	cmp    ecx,eax
  402ae7:	jg     0x402afd
  402ae9:	add    esi,edx
  402aeb:	mov    BYTE PTR [edi],cl
  402aed:	inc    edi
  402aee:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402af0:	jmp    0x402b03
  402af2:	mov    edx,0x1
  402af7:	jmp    0x402ade
  402af9:	xor    ecx,ecx
  402afb:	jmp    0x402ae9
  402afd:	mov    ecx,eax
  402aff:	jmp    0x402ae9
  402b01:	mov    BYTE PTR [edi],al
  402b03:	pop    edi
  402b04:	pop    esi
  402b05:	ret    0x4
  402b08:	ret    
  402b09:	lea    eax,[eax+0x0]
  402b0c:	push   ebx
  402b0d:	call   0x405980
  402b12:	mov    ebx,DWORD PTR [eax+0x4]
  402b18:	call   0x405980
  402b1d:	xor    edx,edx
  402b1f:	mov    DWORD PTR [eax+0x4],edx
  402b25:	mov    eax,ebx
  402b27:	pop    ebx
  402b28:	ret    
  402b29:	lea    eax,[eax+0x0]
  402b2c:	push   esi
  402b2d:	push   edi
  402b2e:	mov    esi,eax
  402b30:	mov    edi,edx
  402b32:	mov    eax,ecx
  402b34:	cmp    edi,esi
  402b36:	ja     0x402b4b
  402b38:	je     0x402b69
  402b3a:	sar    ecx,0x2
  402b3d:	js     0x402b69
  402b3f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b41:	mov    ecx,eax
  402b43:	and    ecx,0x3
  402b46:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b48:	pop    edi
  402b49:	pop    esi
  402b4a:	ret    
  402b4b:	lea    esi,[ecx+esi*1-0x4]
  402b4f:	lea    edi,[ecx+edi*1-0x4]
  402b53:	sar    ecx,0x2
  402b56:	js     0x402b69
  402b58:	std    
  402b59:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b5b:	mov    ecx,eax
  402b5d:	and    ecx,0x3
  402b60:	add    esi,0x3
  402b63:	add    edi,0x3
  402b66:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b68:	cld    
  402b69:	pop    edi
  402b6a:	pop    esi
  402b6b:	ret    
  402b6c:	cmp    DWORD PTR ds:0x42f028,0x0
  402b73:	je     0x402b7b
  402b75:	call   DWORD PTR ds:0x42f028
  402b7b:	mov    eax,0xd2
  402b80:	jmp    0x403ca0
  402b85:	ret    
  402b86:	mov    eax,eax
  402b88:	push   ebx
  402b89:	mov    cx,WORD PTR [eax+0x4]
  402b8d:	sub    cx,0xd7b1
  402b92:	je     0x402ba3
  402b94:	dec    ecx
  402b95:	sub    cx,0x2
  402b99:	jae    0x402ba7
  402b9b:	mov    ebx,edx
  402b9d:	call   ebx
  402b9f:	mov    ebx,eax
  402ba1:	jmp    0x402bbe
  402ba3:	xor    ebx,ebx
  402ba5:	jmp    0x402bbe
  402ba7:	cmp    eax,0x42f214
  402bac:	je     0x402bb5
  402bae:	cmp    eax,0x42f3e0
  402bb3:	jne    0x402bb9
  402bb5:	xor    ebx,ebx
  402bb7:	jmp    0x402bbe
  402bb9:	mov    ebx,0x67
  402bbe:	test   ebx,ebx
  402bc0:	je     0x402bc9
  402bc2:	mov    eax,ebx
  402bc4:	call   0x402ab8
  402bc9:	mov    eax,ebx
  402bcb:	pop    ebx
  402bcc:	ret    
  402bcd:	lea    eax,[eax+0x0]
  402bd0:	mov    edx,DWORD PTR [eax+0x1c]
  402bd3:	call   0x402b88
  402bd8:	ret    
  402bd9:	lea    eax,[eax+0x0]
  402bdc:	push   ebx
  402bdd:	push   esi
  402bde:	mov    ebx,eax
  402be0:	xor    esi,esi
  402be2:	mov    ax,WORD PTR [ebx+0x4]
  402be6:	cmp    ax,0xd7b1
  402bea:	jb     0x402c1b
  402bec:	cmp    ax,0xd7b3
  402bf0:	ja     0x402c1b
  402bf2:	and    ax,0xd7b2
  402bf6:	cmp    ax,0xd7b2
  402bfa:	jne    0x402c03
  402bfc:	mov    eax,ebx
  402bfe:	call   DWORD PTR [ebx+0x1c]
  402c01:	mov    esi,eax
  402c03:	test   esi,esi
  402c05:	jne    0x402c0e
  402c07:	mov    eax,ebx
  402c09:	call   DWORD PTR [ebx+0x24]
  402c0c:	mov    esi,eax
  402c0e:	test   esi,esi
  402c10:	je     0x402c2d
  402c12:	mov    eax,esi
  402c14:	call   0x402ab8
  402c19:	jmp    0x402c2d
  402c1b:	cmp    ebx,0x42f048
  402c21:	je     0x402c2d
  402c23:	mov    eax,0x67
  402c28:	call   0x402ab8
  402c2d:	mov    eax,esi
  402c2f:	pop    esi
  402c30:	pop    ebx
  402c31:	ret    
  402c32:	mov    eax,eax
  402c34:	push   edi
  402c35:	mov    edi,eax
  402c37:	mov    ch,cl
  402c39:	mov    eax,ecx
  402c3b:	shl    eax,0x10
  402c3e:	mov    ax,cx
  402c41:	mov    ecx,edx
  402c43:	sar    ecx,0x2
  402c46:	js     0x402c51
  402c48:	rep stos DWORD PTR es:[edi],eax
  402c4a:	mov    ecx,edx
  402c4c:	and    ecx,0x3
  402c4f:	rep stos BYTE PTR es:[edi],al
  402c51:	pop    edi
  402c52:	ret    
  402c53:	nop
  402c54:	push   ebx
  402c55:	push   esi
  402c56:	push   edi
  402c57:	mov    esi,eax
  402c59:	push   eax
  402c5a:	test   eax,eax
  402c5c:	je     0x402cca
  402c5e:	xor    eax,eax
  402c60:	xor    ebx,ebx
  402c62:	mov    edi,0xccccccc
  402c67:	mov    bl,BYTE PTR [esi]
  402c69:	inc    esi
  402c6a:	cmp    bl,0x20
  402c6d:	je     0x402c67
  402c6f:	mov    ch,0x0
  402c71:	cmp    bl,0x2d
  402c74:	je     0x402cd8
  402c76:	cmp    bl,0x2b
  402c79:	je     0x402cda
  402c7b:	cmp    bl,0x24
  402c7e:	je     0x402cdf
  402c80:	cmp    bl,0x78
  402c83:	je     0x402cdf
  402c85:	cmp    bl,0x58
  402c88:	je     0x402cdf
  402c8a:	cmp    bl,0x30
  402c8d:	jne    0x402ca2
  402c8f:	mov    bl,BYTE PTR [esi]
  402c91:	inc    esi
  402c92:	cmp    bl,0x78
  402c95:	je     0x402cdf
  402c97:	cmp    bl,0x58
  402c9a:	je     0x402cdf
  402c9c:	test   bl,bl
  402c9e:	je     0x402cc0
  402ca0:	jmp    0x402ca6
  402ca2:	test   bl,bl
  402ca4:	je     0x402cd3
  402ca6:	sub    bl,0x30
  402ca9:	cmp    bl,0x9
  402cac:	ja     0x402cd3
  402cae:	cmp    eax,edi
  402cb0:	ja     0x402cd3
  402cb2:	lea    eax,[eax+eax*4]
  402cb5:	add    eax,eax
  402cb7:	add    eax,ebx
  402cb9:	mov    bl,BYTE PTR [esi]
  402cbb:	inc    esi
  402cbc:	test   bl,bl
  402cbe:	jne    0x402ca6
  402cc0:	dec    ch
  402cc2:	je     0x402ccd
  402cc4:	test   eax,eax
  402cc6:	jge    0x402d1c
  402cc8:	jmp    0x402cd3
  402cca:	inc    esi
  402ccb:	jmp    0x402cd3
  402ccd:	neg    eax
  402ccf:	jle    0x402d1c
  402cd1:	js     0x402d1c
  402cd3:	pop    ebx
  402cd4:	sub    esi,ebx
  402cd6:	jmp    0x402d1f
  402cd8:	inc    ch
  402cda:	mov    bl,BYTE PTR [esi]
  402cdc:	inc    esi
  402cdd:	jmp    0x402c7b
  402cdf:	mov    edi,0xfffffff
  402ce4:	mov    bl,BYTE PTR [esi]
  402ce6:	inc    esi
  402ce7:	test   bl,bl
  402ce9:	je     0x402cca
  402ceb:	cmp    bl,0x61
  402cee:	jb     0x402cf3
  402cf0:	sub    bl,0x20
  402cf3:	sub    bl,0x30
  402cf6:	cmp    bl,0x9
  402cf9:	jbe    0x402d06
  402cfb:	sub    bl,0x11
  402cfe:	cmp    bl,0x5
  402d01:	ja     0x402cd3
  402d03:	add    bl,0xa
  402d06:	cmp    eax,edi
  402d08:	ja     0x402cd3
  402d0a:	shl    eax,0x4
  402d0d:	add    eax,ebx
  402d0f:	mov    bl,BYTE PTR [esi]
  402d11:	inc    esi
  402d12:	test   bl,bl
  402d14:	jne    0x402ceb
  402d16:	dec    ch
  402d18:	jne    0x402d1c
  402d1a:	neg    eax
  402d1c:	pop    ecx
  402d1d:	xor    esi,esi
  402d1f:	mov    DWORD PTR [edx],esi
  402d21:	pop    edi
  402d22:	pop    esi
  402d23:	pop    ebx
  402d24:	ret    
  402d25:	lea    eax,[eax+0x0]
  402d28:	push   esi
  402d29:	push   edi
  402d2a:	mov    esi,eax
  402d2c:	mov    edi,edx
  402d2e:	and    ecx,0xff
  402d34:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d36:	pop    edi
  402d37:	pop    esi
  402d38:	ret    
  402d39:	lea    eax,[eax+0x0]
  402d3c:	jmp    0x402d44
  402d41:	ret    
  402d42:	mov    eax,eax
  402d44:	push   ebx
  402d45:	xor    ebx,ebx
  402d47:	test   eax,eax
  402d49:	jl     0x402d98
  402d4b:	je     0x402deb
  402d51:	cmp    eax,0x1400
  402d56:	jge    0x402ddd
  402d5c:	mov    edx,eax
  402d5e:	and    edx,0x1f
  402d61:	lea    edx,[edx+edx*4]
  402d64:	fld    TBYTE PTR [ebx+edx*2+0x402df7]
  402d6b:	fmulp  st(1),st
  402d6d:	shr    eax,0x5
  402d70:	je     0x402deb
  402d72:	mov    edx,eax
  402d74:	and    edx,0xf
  402d77:	je     0x402d85
  402d79:	lea    edx,[edx+edx*4]
  402d7c:	fld    TBYTE PTR [ebx+edx*2+0x402f2d]
  402d83:	fmulp  st(1),st
  402d85:	shr    eax,0x4
  402d88:	je     0x402deb
  402d8a:	lea    eax,[eax+eax*4]
  402d8d:	fld    TBYTE PTR [ebx+eax*2+0x402fc3]
  402d94:	fmulp  st(1),st
  402d96:	jmp    0x402deb
  402d98:	neg    eax
  402d9a:	cmp    eax,0x1400
  402d9f:	jge    0x402de7
  402da1:	mov    edx,eax
  402da3:	and    edx,0x1f
  402da6:	lea    edx,[edx+edx*4]
  402da9:	fld    TBYTE PTR [ebx+edx*2+0x402df7]
  402db0:	fdivp  st(1),st
  402db2:	shr    eax,0x5
  402db5:	je     0x402deb
  402db7:	mov    edx,eax
  402db9:	and    edx,0xf
  402dbc:	je     0x402dca
  402dbe:	lea    edx,[edx+edx*4]
  402dc1:	fld    TBYTE PTR [ebx+edx*2+0x402f2d]
  402dc8:	fdivp  st(1),st
  402dca:	shr    eax,0x4
  402dcd:	je     0x402deb
  402dcf:	lea    eax,[eax+eax*4]
  402dd2:	fld    TBYTE PTR [ebx+eax*2+0x402fc3]
  402dd9:	fdivp  st(1),st
  402ddb:	jmp    0x402deb
  402ddd:	fstp   st(0)
  402ddf:	fld    TBYTE PTR [ebx+0x402ded]
  402de5:	jmp    0x402deb
  402de7:	fstp   st(0)
  402de9:	fldz   
  402deb:	pop    ebx
  402dec:	ret    
  402ded:	add    BYTE PTR [eax],al
  402def:	add    BYTE PTR [eax],al
  402df1:	add    BYTE PTR [eax],al
  402df3:	add    BYTE PTR [eax+0x7fff],al
  402df9:	add    BYTE PTR [eax],al
  402dfb:	add    BYTE PTR [eax],al
  402dfd:	add    BYTE PTR [eax+0x3fff],al
  402e03:	add    BYTE PTR [eax],al
  402e05:	add    BYTE PTR [eax],al
  402e07:	add    BYTE PTR [eax+0x4002],ah
  402e0d:	add    BYTE PTR [eax],al
  402e0f:	add    BYTE PTR [eax],al
  402e11:	add    al,cl
  402e13:	add    eax,0x40
  402e18:	add    BYTE PTR [eax],al
  402e1a:	add    BYTE PTR [eax],al
  402e1c:	cli    
  402e1d:	or     BYTE PTR [eax+0x0],al
  402e20:	add    BYTE PTR [eax],al
  402e22:	add    BYTE PTR [eax],al
  402e24:	add    BYTE PTR [eax-0x64],al
  402e27:	or     al,0x40
  402e29:	add    BYTE PTR [eax],al
  402e2b:	add    BYTE PTR [eax],al
  402e2d:	add    BYTE PTR [eax],al
  402e2f:	push   eax
  402e30:	ret    
  402e31:	cmovo  eax,DWORD PTR [eax]
  402e34:	add    BYTE PTR [eax],al
  402e36:	add    BYTE PTR [eax],al
  402e38:	add    BYTE PTR [esp+esi*8],ah
  402e3b:	adc    al,BYTE PTR [eax+0x0]
  402e3e:	add    BYTE PTR [eax],al
  402e40:	add    BYTE PTR [eax],al
  402e42:	adc    BYTE PTR [esi+0x401698],0x0
  402e49:	add    BYTE PTR [eax],al
  402e4b:	add    BYTE PTR [eax],ah
  402e4d:	mov    esp,0x4019be
  402e52:	add    BYTE PTR [eax],al
  402e54:	add    BYTE PTR [eax],al
  402e56:	sub    BYTE PTR [ebx-0x12],ch
  402e59:	sbb    al,0x40
  402e5b:	add    BYTE PTR [eax],al
  402e5d:	add    BYTE PTR [eax],al
  402e5f:	add    cl,bh
  402e61:	add    dl,BYTE PTR [ebp+0x4020]
  402e67:	add    BYTE PTR [eax],al
  402e69:	inc    eax
  402e6a:	mov    bh,0x43
  402e6c:	mov    edx,0x4023
  402e71:	add    BYTE PTR [eax],al
  402e73:	adc    BYTE PTR [ebp+0x4026e8d4],ah
  402e79:	add    BYTE PTR [eax],al
  402e7b:	add    BYTE PTR [eax],al
  402e7d:	sub    ah,bh
  402e7f:	test   BYTE PTR [ecx+0x402a],dl
  402e85:	add    BYTE PTR [eax-0x4a19df0c],al
  402e8b:	sub    eax,0x40
  402e90:	mov    al,ds:0xe35fa931
  402e95:	xor    BYTE PTR [eax+0x0],al
  402e98:	add    BYTE PTR [eax],al
  402e9a:	add    al,0xbf
  402e9c:	leave  
  402e9d:	sbb    ecx,DWORD PTR [esi+0x4034]
  402ea3:	add    ch,al
  402ea5:	cs mov esp,0x4037b1a2
  402eab:	add    BYTE PTR [eax],al
  402ead:	inc    eax
  402eae:	jbe    0x402eea
  402eb0:	imul   ecx,DWORD PTR [ebx],0xffffffde
  402eb3:	cmp    al,BYTE PTR [eax+0x0]
  402eb6:	add    al,ch
  402eb8:	mov    DWORD PTR [ebx+eiz*1],eax
  402ebb:	(bad)  
  402ebc:	mov    bh,BYTE PTR [esi]
  402ebe:	inc    eax
  402ebf:	add    BYTE PTR [eax],al
  402ec1:	bound  ebp,QWORD PTR [ebp+eax*8+0x41ad78eb]
  402ec8:	inc    eax
  402ec9:	add    BYTE PTR [eax+0x26b7177a],al
  402ecf:	xlat   BYTE PTR ds:[ebx]
  402ed0:	fadd   DWORD PTR [eax+eax*2+0x0]
  402ed4:	nop
  402ed5:	lods   al,BYTE PTR ds:[esi]
  402ed6:	outs   dx,BYTE PTR ds:[esi]
  402ed7:	xor    bh,BYTE PTR [eax-0x7a]
  402eda:	xchg   DWORD PTR [eax+0x40],ecx
  402edd:	add    BYTE PTR [edi+edx*2+0x68163f0a],dh
  402ee4:	test   eax,0xa100404b
  402ee9:	in     eax,dx
  402eea:	int3   
  402eeb:	into   
  402eec:	sbb    eax,edx
  402eee:	ror    DWORD PTR [esi+0x40],cl
  402ef1:	mov    al,ds:0x61401484
  402ef6:	push   ecx
  402ef7:	pop    ecx
  402ef8:	test   BYTE PTR [edx+0x40],dl
  402efb:	enter  0x19a5,0x90
  402eff:	mov    ecx,0x55a56fa5
  402f04:	inc    eax
  402f05:	cmp    cl,BYTE PTR [edi]
  402f07:	and    ah,dh
  402f09:	daa    
  402f0a:	(bad)  
  402f0b:	retf   
  402f0c:	into   
  402f0d:	pop    eax
  402f0e:	inc    eax
  402f0f:	test   BYTE PTR [ecx],cl
  402f11:	xchg   esp,eax
  402f12:	clc    
  402f13:	js     0x402f4e
  402f15:	aas    
  402f16:	sbb    DWORD PTR [eax+eax*2-0x1b],0xd736b90b
  402f1e:	pop    es
  402f1f:	(bad)  
  402f20:	mov    eax,ds:0x4edf405f
  402f25:	addr16 add al,0xcd
  402f28:	leave  
  402f29:	repnz leave 
  402f2b:	bound  eax,QWORD PTR [eax-0x6a]
  402f2e:	and    al,BYTE PTR [ecx+0x6f7c4045]
  402f34:	cld    
  402f35:	gs inc eax
  402f37:	sahf   
  402f38:	mov    ch,0x70
  402f3a:	sub    ebp,DWORD PTR [eax+0x699dc5ad]
  402f40:	inc    eax
  402f41:	aad    0xa6
  402f43:	iret   
  402f44:	dec    DWORD PTR [ecx+0x1f]
  402f47:	js     0x402f0b
  402f49:	rol    DWORD PTR [eax-0x5d],cl
  402f4c:	adc    al,0x9b
  402f4e:	lds    edx,FWORD PTR [esi]
  402f50:	stos   DWORD PTR es:[edi],eax
  402f51:	mov    bl,0xef
  402f53:	cmp    eax,0xe98ce041
  402f58:	or     cl,0x47
  402f5b:	mov    edx,0xaa41a893
  402f60:	pop    ss
  402f61:	out    0x7f,al
  402f63:	sub    esp,DWORD PTR [ecx+0x4212b616]
  402f69:	imul   edx,DWORD PTR [ebp+0x27],0x39
  402f6d:	(bad)  
  402f6e:	div    DWORD PTR [eax-0x20]
  402f71:	jl     0x402fb5
  402f73:	xor    cl,cl
  402f75:	cmp    al,0xe3
  402f77:	call   DWORD PTR [esi+0x42e78a52]
  402f7d:	mov    ds,esi
  402f7f:	stc    
  402f80:	popf   
  402f81:	sti    
  402f82:	jmp    0x403002
  402f84:	stos   BYTE PTR es:[edi],al
  402f85:	push   ecx
  402f86:	inc    ebx
  402f87:	mov    WORD PTR [edi],gs
  402f89:	push   0x5c
  402f8b:	sbb    esp,edi
  402f8d:	sar    BYTE PTR es:[ebx-0x331c89bd],cl
  402f94:	repnz sub DWORD PTR [edi],ebp
  402f97:	test   BYTE PTR [ecx+0xad24426],al
  402f9d:	nop
  402f9e:	fild   DWORD PTR [eax]
  402fa0:	daa    
  402fa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fa2:	lahf   
  402fa3:	nop
  402fa4:	inc    esp
  402fa5:	pop    ss
  402fa6:	stos   BYTE PTR es:[edi],al
  402fa7:	clc    
  402fa8:	scas   al,BYTE PTR es:[edi]
  402fa9:	adc    bl,ah
  402fab:	(bad)
  402fae:	inc    esp
  402faf:	pop    ecx
  402fb0:	pushf  
  402fb1:	mov    al,0xe9
  402fb3:	pop    es
  402fb4:	pushf  
  402fb5:	mov    dh,dl
  402fb7:	fs inc ebp
  402fb9:	aam    0xf3
  402fbb:	imul   ebx
  402fbd:	loope  0x403009
  402fbf:	jp     0x402f56
  402fc1:	iret   
  402fc2:	inc    ebp
  402fc3:	bound  esp,QWORD PTR [edx-0x2723f86b]
  402fc9:	ds mov eax,0x91c74639
  402fcf:	push   cs
  402fd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fd1:	scas   al,BYTE PTR es:[edi]
  402fd2:	mov    al,ds:0x46a3e319
  402fd7:	pop    ss
  402fd8:	or     al,0x75
  402fda:	add    DWORD PTR [esi+0x48c97675],0x93a7e44d
  402fe4:	cmp    DWORD PTR [ebx],edi
  402fe6:	xor    eax,0x53edb2b8
  402feb:	in     eax,0x5d
  402fed:	cmp    eax,0x8b3b5dc5
  402ff2:	sahf   
  402ff3:	xchg   edx,eax
  402ff4:	pop    edx
  402ff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ff6:	lock mov eax,ds:0xa554c020
  402ffc:	mov    WORD PTR [edi],?
  402ffe:	popa   
  402fff:	mov    ebx,DWORD PTR [edx-0x75]
  403002:	fsub   DWORD PTR ds:0xdbf9895d
  403008:	addr16 clc 
  40300a:	repz daa 
  40300c:	mov    edi,0xdd5dc8a2
  403011:	sub    BYTE PTR [esi-0x65],0x97
  403015:	and    BYTE PTR [edx-0x3b9fadfe],cl
  40301b:	and    eax,0xd559f075
  403020:	outs   dx,BYTE PTR ds:[esi]
  403021:	bound  edx,QWORD PTR [ecx]
  403023:	xor    eax,0xc37bcaae
  403028:	jmp    DWORD PTR ds:0x4301b8
  40302e:	mov    eax,eax
  403030:	push   ebx
  403031:	xor    ebx,ebx
  403033:	push   0x0
  403035:	call   0x403028
  40303a:	cmp    eax,0x7
  40303d:	jne    0x40305b
  40303f:	push   0x1
  403041:	call   0x403028
  403046:	and    eax,0xff00
  40304b:	cmp    eax,0xd00
  403050:	je     0x403059
  403052:	cmp    eax,0x400
  403057:	jne    0x40305b
  403059:	mov    bl,0x1
  40305b:	mov    eax,ebx
  40305d:	pop    ebx
  40305e:	ret    
  40305f:	nop
  403060:	push   ebp
  403061:	mov    ebp,esp
  403063:	add    esp,0xfffffff4
  403066:	movzx  eax,WORD PTR ds:0x42e020
  40306d:	mov    DWORD PTR [ebp-0x8],eax
  403070:	lea    eax,[ebp-0x4]
  403073:	push   eax
  403074:	push   0x1
  403076:	push   0x0
  403078:	push   0x4030f8
  40307d:	push   0x80000002
  403082:	call   0x401220
  403087:	test   eax,eax
  403089:	jne    0x4030d8
  40308b:	xor    eax,eax
  40308d:	push   ebp
  40308e:	push   0x4030d1
  403093:	push   DWORD PTR fs:[eax]
  403096:	mov    DWORD PTR fs:[eax],esp
  403099:	mov    DWORD PTR [ebp-0xc],0x4
  4030a0:	lea    eax,[ebp-0xc]
  4030a3:	push   eax
  4030a4:	lea    eax,[ebp-0x8]
  4030a7:	push   eax
  4030a8:	push   0x0
  4030aa:	push   0x0
  4030ac:	push   0x403114
  4030b1:	mov    eax,DWORD PTR [ebp-0x4]
  4030b4:	push   eax
  4030b5:	call   0x401228
  4030ba:	xor    eax,eax
  4030bc:	pop    edx
  4030bd:	pop    ecx
  4030be:	pop    ecx
  4030bf:	mov    DWORD PTR fs:[eax],edx
  4030c2:	push   0x4030d8
  4030c7:	mov    eax,DWORD PTR [ebp-0x4]
  4030ca:	push   eax
  4030cb:	call   0x401218
  4030d0:	ret    
  4030d1:	jmp    0x4036ac
  4030d6:	jmp    0x4030c7
  4030d8:	mov    ax,ds:0x42e020
  4030de:	and    ax,0xffc0
  4030e2:	mov    dx,WORD PTR [ebp-0x8]
  4030e6:	and    dx,0x3f
  4030ea:	or     ax,dx
  4030ed:	mov    ds:0x42e020,ax
  4030f3:	mov    esp,ebp
  4030f5:	pop    ebp
  4030f6:	ret    
  4030f7:	add    BYTE PTR [ebx+0x4f],dl
  4030fa:	inc    esi
  4030fb:	push   esp
  4030fc:	push   edi
  4030fd:	inc    ecx
  4030fe:	push   edx
  4030ff:	inc    ebp
  403100:	pop    esp
  403101:	inc    edx
  403102:	outs   dx,DWORD PTR ds:[esi]
  403103:	jb     0x403171
  403105:	popa   
  403106:	outs   dx,BYTE PTR ds:[esi]
  403107:	fs pop esp
  403109:	inc    esp
  40310a:	gs ins BYTE PTR es:[edi],dx
  40310c:	jo     0x403176
  40310e:	imul   ebx,DWORD PTR [edx+edx*2+0x54],0x5046004c
  403116:	push   ebp
  403117:	dec    ebp
  403118:	popa   
  403119:	jae    0x403186
  40311b:	push   esi
  40311c:	popa   
  40311d:	ins    BYTE PTR es:[edi],dx
  40311e:	jne    0x403185
  403120:	add    BYTE PTR [eax],al
  403122:	add    BYTE PTR [eax],al
  403124:	fninit 
  403126:	fldcw  WORD PTR ds:0x42e020
  40312d:	ret    
  40312e:	mov    eax,eax
  403130:	push   ecx
  403131:	mov    eax,DWORD PTR [eax]
  403133:	mov    DWORD PTR [esp],eax
  403136:	mov    eax,DWORD PTR [esp]
  403139:	pop    edx
  40313a:	ret    
  40313b:	nop
  40313c:	push   esi
  40313d:	push   edi
  40313e:	mov    edi,edx
  403140:	mov    esi,DWORD PTR [eax-0x2c]
  403143:	xor    ecx,ecx
  403145:	mov    cl,BYTE PTR [esi]
  403147:	inc    ecx
  403148:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40314a:	pop    edi
  40314b:	pop    esi
  40314c:	ret    
  40314d:	lea    eax,[eax+0x0]
  403150:	mov    eax,DWORD PTR [eax-0x24]
  403153:	test   eax,eax
  403155:	je     0x403159
  403157:	mov    eax,DWORD PTR [eax]
  403159:	ret    
  40315a:	mov    eax,eax
  40315c:	push   ebx
  40315d:	mov    ebx,eax
  40315f:	mov    eax,ebx
  403161:	call   0x40318c
  403166:	call   0x402994
  40316b:	mov    edx,eax
  40316d:	mov    eax,ebx
  40316f:	call   0x4031d0
  403174:	pop    ebx
  403175:	ret    
  403176:	mov    eax,eax
  403178:	push   ebx
  403179:	mov    ebx,eax
  40317b:	mov    eax,ebx
  40317d:	call   0x403228
  403182:	mov    eax,ebx
  403184:	call   0x4029c4
  403189:	pop    ebx
  40318a:	ret    
  40318b:	nop
  40318c:	add    eax,0xffffffd8
  40318f:	mov    eax,DWORD PTR [eax]
  403191:	ret    
  403192:	mov    eax,eax
  403194:	test   dl,dl
  403196:	je     0x4031a0
  403198:	add    esp,0xfffffff0
  40319b:	call   0x403418
  4031a0:	test   dl,dl
  4031a2:	je     0x4031b3
  4031a4:	call   0x403470
  4031a9:	pop    DWORD PTR fs:0x0
  4031b0:	add    esp,0xc
  4031b3:	ret    
  4031b4:	call   0x403480
  4031b9:	test   dl,dl
  4031bb:	jle    0x4031c2
  4031bd:	call   0x403468
  4031c2:	ret    
  4031c3:	nop
  4031c4:	test   eax,eax
  4031c6:	je     0x4031cf
  4031c8:	mov    dl,0x1
  4031ca:	mov    ecx,DWORD PTR [eax]
  4031cc:	call   DWORD PTR [ecx-0x4]
  4031cf:	ret    
  4031d0:	push   ebx
  4031d1:	push   esi
  4031d2:	push   edi
  4031d3:	mov    ebx,eax
  4031d5:	mov    edi,edx
  4031d7:	stos   DWORD PTR es:[edi],eax
  4031d8:	mov    ecx,DWORD PTR [ebx-0x28]
  4031db:	xor    eax,eax
  4031dd:	push   ecx
  4031de:	shr    ecx,0x2
  4031e1:	dec    ecx
  4031e2:	rep stos DWORD PTR es:[edi],eax
  4031e4:	pop    ecx
  4031e5:	and    ecx,0x3
  4031e8:	rep stos BYTE PTR es:[edi],al
  4031ea:	mov    eax,edx
  4031ec:	mov    edx,esp
  4031ee:	mov    ecx,DWORD PTR [ebx-0x48]
  4031f1:	test   ecx,ecx
  4031f3:	je     0x4031f6
  4031f5:	push   ecx
  4031f6:	mov    ebx,DWORD PTR [ebx-0x24]
  4031f9:	test   ebx,ebx
  4031fb:	je     0x403201
  4031fd:	mov    ebx,DWORD PTR [ebx]
  4031ff:	jmp    0x4031ee
  403201:	cmp    esp,edx
  403203:	je     0x403222
  403205:	pop    ebx
  403206:	mov    ecx,DWORD PTR [ebx]
  403208:	add    ebx,0x4
  40320b:	mov    esi,DWORD PTR [ebx+0x10]
  40320e:	test   esi,esi
  403210:	je     0x403218
  403212:	mov    edi,DWORD PTR [ebx+0x14]
  403215:	mov    DWORD PTR [edi+eax*1],esi
  403218:	add    ebx,0x1c
  40321b:	dec    ecx
  40321c:	jne    0x40320b
  40321e:	cmp    esp,edx
  403220:	jne    0x403205
  403222:	pop    edi
  403223:	pop    esi
  403224:	pop    ebx
  403225:	ret    
  403226:	mov    eax,eax
  403228:	push   ebx
  403229:	push   esi
  40322a:	mov    ebx,eax
  40322c:	mov    esi,eax
  40322e:	mov    esi,DWORD PTR [esi]
  403230:	mov    edx,DWORD PTR [esi-0x40]
  403233:	mov    esi,DWORD PTR [esi-0x24]
  403236:	test   edx,edx
  403238:	je     0x403241
  40323a:	call   0x4045a8
  40323f:	mov    eax,ebx
  403241:	test   esi,esi
  403243:	jne    0x40322e
  403245:	pop    esi
  403246:	pop    ebx
  403247:	ret    
  403248:	xchg   ecx,edx
  40324a:	cmp    ecx,0xff000000
  403250:	jae    0x403263
  403252:	cmp    ecx,0xfe000000
  403258:	jb     0x403261
  40325a:	movsx  ecx,cx
  40325d:	add    ecx,DWORD PTR [eax]
  40325f:	jmp    DWORD PTR [ecx]
  403261:	jmp    ecx
  403263:	and    ecx,0xffffff
  403269:	add    ecx,eax
  40326b:	mov    eax,edx
  40326d:	mov    edx,DWORD PTR [ecx]
  40326f:	jmp    0x40528c
  403274:	ret    
  403275:	lea    eax,[eax+0x0]
  403278:	push   ebp
  403279:	mov    ebp,esp
  40327b:	add    esp,0xfffffff8
  40327e:	push   ebx
  40327f:	push   esi
  403280:	push   edi
  403281:	xor    ebx,ebx
  403283:	mov    DWORD PTR [ebp-0x8],ebx
  403286:	mov    ebx,ecx
  403288:	mov    edi,edx
  40328a:	mov    esi,eax
  40328c:	xor    eax,eax
  40328e:	push   ebp
  40328f:	push   0x403306
  403294:	push   DWORD PTR fs:[eax]
  403297:	mov    DWORD PTR fs:[eax],esp
  40329a:	xor    eax,eax
  40329c:	mov    DWORD PTR [ebx],eax
  40329e:	mov    edx,edi
  4032a0:	mov    eax,DWORD PTR [esi]
  4032a2:	call   0x403318
  4032a7:	mov    DWORD PTR [ebp-0x4],eax
  4032aa:	cmp    DWORD PTR [ebp-0x4],0x0
  4032ae:	je     0x4032e8
  4032b0:	mov    eax,DWORD PTR [ebp-0x4]
  4032b3:	mov    eax,DWORD PTR [eax+0x14]
  4032b6:	test   eax,eax
  4032b8:	je     0x4032ce
  4032ba:	mov    edx,eax
  4032bc:	add    edx,esi
  4032be:	mov    DWORD PTR [ebx],edx
  4032c0:	test   edx,edx
  4032c2:	je     0x4032e8
  4032c4:	mov    eax,DWORD PTR [ebx]
  4032c6:	push   eax
  4032c7:	mov    eax,DWORD PTR [eax]
  4032c9:	call   DWORD PTR [eax+0x4]
  4032cc:	jmp    0x4032e8
  4032ce:	lea    ecx,[ebp-0x8]
  4032d1:	mov    eax,DWORD PTR [ebp-0x4]
  4032d4:	mov    edx,DWORD PTR [eax+0x18]
  4032d7:	mov    eax,esi
  4032d9:	call   0x403248
  4032de:	mov    edx,DWORD PTR [ebp-0x8]
  4032e1:	mov    eax,ebx
  4032e3:	call   0x40528c
  4032e8:	cmp    DWORD PTR [ebx],0x0
  4032eb:	setne  al
  4032ee:	mov    ebx,eax
  4032f0:	xor    eax,eax
  4032f2:	pop    edx
  4032f3:	pop    ecx
  4032f4:	pop    ecx
  4032f5:	mov    DWORD PTR fs:[eax],edx
  4032f8:	push   0x40330d
  4032fd:	lea    eax,[ebp-0x8]
  403300:	call   0x405274
  403305:	ret    
  403306:	jmp    0x4036ac
  40330b:	jmp    0x4032fd
  40330d:	mov    eax,ebx
  40330f:	pop    edi
  403310:	pop    esi
  403311:	pop    ebx
  403312:	pop    ecx
  403313:	pop    ecx
  403314:	pop    ebp
  403315:	ret    
  403316:	mov    eax,eax
  403318:	push   ebx
  403319:	push   esi
  40331a:	mov    ebx,eax
  40331c:	mov    eax,DWORD PTR [ebx-0x48]
  40331f:	test   eax,eax
  403321:	je     0x40334c
  403323:	mov    ecx,DWORD PTR [eax]
  403325:	add    eax,0x4
  403328:	mov    esi,DWORD PTR [edx]
  40332a:	cmp    esi,DWORD PTR [eax]
  40332c:	jne    0x403346
  40332e:	mov    esi,DWORD PTR [edx+0x4]
  403331:	cmp    esi,DWORD PTR [eax+0x4]
  403334:	jne    0x403346
  403336:	mov    esi,DWORD PTR [edx+0x8]
  403339:	cmp    esi,DWORD PTR [eax+0x8]
  40333c:	jne    0x403346
  40333e:	mov    esi,DWORD PTR [edx+0xc]
  403341:	cmp    esi,DWORD PTR [eax+0xc]
  403344:	je     0x403359
  403346:	add    eax,0x1c
  403349:	dec    ecx
  40334a:	jne    0x403328
  40334c:	mov    ebx,DWORD PTR [ebx-0x24]
  40334f:	test   ebx,ebx
  403351:	je     0x403357
  403353:	mov    ebx,DWORD PTR [ebx]
  403355:	jmp    0x40331c
  403357:	xor    eax,eax
  403359:	pop    esi
  40335a:	pop    ebx
  40335b:	ret    
  40335c:	push   ebx
  40335d:	push   esi
  40335e:	mov    esi,edx
  403360:	mov    ebx,eax
  403362:	test   ebx,ebx
  403364:	je     0x403373
  403366:	mov    edx,esi
  403368:	mov    eax,DWORD PTR [ebx]
  40336a:	call   0x4033c8
  40336f:	test   al,al
  403371:	jne    0x403378
  403373:	xor    eax,eax
  403375:	pop    esi
  403376:	pop    ebx
  403377:	ret    
  403378:	mov    al,0x1
  40337a:	pop    esi
  40337b:	pop    ebx
  40337c:	ret    
  40337d:	lea    eax,[eax+0x0]
  403380:	push   edi
  403381:	xchg   esi,eax
  403382:	jmp    0x403386
  403384:	mov    esi,DWORD PTR [esi]
  403386:	mov    edi,DWORD PTR [esi-0x30]
  403389:	test   edi,edi
  40338b:	je     0x40339a
  40338d:	movzx  ecx,WORD PTR [edi]
  403390:	push   ecx
  403391:	add    edi,0x2
  403394:	repnz scas ax,WORD PTR es:[edi]
  403397:	je     0x4033a3
  403399:	pop    ecx
  40339a:	mov    esi,DWORD PTR [esi-0x24]
  40339d:	test   esi,esi
  40339f:	jne    0x403384
  4033a1:	pop    edi
  4033a2:	ret    
  4033a3:	pop    eax
  4033a4:	add    eax,eax
  4033a6:	sub    eax,ecx
  4033a8:	mov    esi,DWORD PTR [edi+eax*2-0x4]
  4033ac:	pop    edi
  4033ad:	ret    
  4033ae:	mov    eax,eax
  4033b0:	push   eax
  4033b1:	push   ecx
  4033b2:	mov    eax,DWORD PTR [eax]
  4033b4:	call   0x403380
  4033b9:	pop    ecx
  4033ba:	pop    eax
  4033bb:	je     0x4033bf
  4033bd:	jmp    esi
  4033bf:	pop    ecx
  4033c0:	jmp    0x402b6c
  4033c5:	ret    
  4033c6:	mov    eax,eax
  4033c8:	jmp    0x4033cc
  4033ca:	mov    eax,DWORD PTR [eax]
  4033cc:	cmp    eax,edx
  4033ce:	je     0x4033d8
  4033d0:	mov    eax,DWORD PTR [eax-0x24]
  4033d3:	test   eax,eax
  4033d5:	jne    0x4033ca
  4033d7:	ret    
  4033d8:	mov    al,0x1
  4033da:	ret    
  4033db:	nop
  4033dc:	mov    eax,0x8000ffff
  4033e1:	ret    
  4033e2:	mov    eax,eax
  4033e4:	ret    
  4033e5:	lea    eax,[eax+0x0]
  4033e8:	ret    
  4033e9:	lea    eax,[eax+0x0]
  4033ec:	ret    
  4033ed:	lea    eax,[eax+0x0]
  4033f0:	push   esi
  4033f1:	mov    si,WORD PTR [edx]
  4033f4:	or     si,si
  4033f7:	je     0x403410
  4033f9:	cmp    si,0xc000
  4033fe:	jae    0x403410
  403400:	push   eax
  403401:	mov    eax,DWORD PTR [eax]
  403403:	call   0x403380
  403408:	pop    eax
  403409:	je     0x403410
  40340b:	mov    ecx,esi
  40340d:	pop    esi
  40340e:	jmp    ecx
  403410:	pop    esi
  403411:	mov    ecx,DWORD PTR [eax]
  403413:	jmp    DWORD PTR [ecx-0x10]
  403416:	ret    
  403417:	nop
  403418:	push   edx
  403419:	push   ecx
  40341a:	push   ebx
  40341b:	test   dl,dl
  40341d:	jl     0x403422
  40341f:	call   DWORD PTR [eax-0xc]
  403422:	xor    edx,edx
  403424:	lea    ecx,[esp+0x10]
  403428:	mov    ebx,DWORD PTR fs:[edx]
  40342b:	mov    DWORD PTR [ecx],ebx
  40342d:	mov    DWORD PTR [ecx+0x8],ebp
  403430:	mov    DWORD PTR [ecx+0x4],0x403441
  403437:	mov    DWORD PTR [ecx+0xc],eax
  40343a:	mov    DWORD PTR fs:[edx],ecx
  40343d:	pop    ebx
  40343e:	pop    ecx
  40343f:	pop    edx
  403440:	ret    
  403441:	jmp    0x403580
  403446:	mov    eax,DWORD PTR [esp+0x2c]
  40344a:	mov    eax,DWORD PTR [eax+0xc]
  40344d:	test   eax,eax
  40344f:	je     0x40345f
  403451:	mov    ecx,DWORD PTR [eax]
  403453:	mov    dl,0x81
  403455:	push   eax
  403456:	call   DWORD PTR [ecx-0x4]
  403459:	pop    eax
  40345a:	call   0x403468
  40345f:	call   0x40370c
  403464:	ret    
  403465:	lea    eax,[eax+0x0]
  403468:	mov    edx,DWORD PTR [eax]
  40346a:	call   DWORD PTR [edx-0x8]
  40346d:	ret    
  40346e:	mov    eax,eax
  403470:	push   ebx
  403471:	mov    ebx,eax
  403473:	mov    eax,ebx
  403475:	mov    edx,DWORD PTR [eax]
  403477:	call   DWORD PTR [edx-0x1c]
  40347a:	mov    eax,ebx
  40347c:	pop    ebx
  40347d:	ret    
  40347e:	mov    eax,eax
  403480:	test   dl,dl
  403482:	jg     0x403485
  403484:	ret    
  403485:	push   eax
  403486:	push   edx
  403487:	mov    edx,DWORD PTR [eax]
  403489:	call   DWORD PTR [edx-0x18]
  40348c:	pop    edx
  40348d:	pop    eax
  40348e:	ret    
  40348f:	nop
  403490:	cmp    BYTE PTR ds:0x42e024,0x1
  403497:	jbe    0x4034aa
  403499:	push   0x0
  40349b:	push   0x0
  40349d:	push   0x0
  40349f:	push   0xeedfadf
  4034a4:	call   DWORD PTR ds:0x42f014
  4034aa:	ret    
  4034ab:	nop
  4034ac:	cmp    BYTE PTR ds:0x42e024,0x0
  4034b3:	je     0x4034cc
  4034b5:	push   eax
  4034b6:	push   eax
  4034b7:	push   edx
  4034b8:	push   esp
  4034b9:	push   0x2
  4034bb:	push   0x0
  4034bd:	push   0xeedfae4
  4034c2:	call   DWORD PTR ds:0x42f014
  4034c8:	add    esp,0x8
  4034cb:	pop    eax
  4034cc:	ret    
  4034cd:	lea    eax,[eax+0x0]
  4034d0:	push   esp
  4034d1:	push   0x1
  4034d3:	push   0x0
  4034d5:	push   0xeedfae0
  4034da:	call   DWORD PTR ds:0x42f014
  4034e0:	add    esp,0x4
  4034e3:	pop    eax
  4034e4:	ret    
  4034e5:	lea    eax,[eax+0x0]
  4034e8:	cmp    BYTE PTR ds:0x42e024,0x1
  4034ef:	jbe    0x4034f8
  4034f1:	push   eax
  4034f2:	push   ebx
  4034f3:	jmp    0x4034d0
  4034f8:	ret    
  4034f9:	lea    eax,[eax+0x0]
  4034fc:	test   ecx,ecx
  4034fe:	je     0x403519
  403500:	mov    eax,DWORD PTR [ecx+0x1]
  403503:	cmp    BYTE PTR [ecx],0xe9
  403506:	je     0x403514
  403508:	cmp    BYTE PTR [ecx],0xeb
  40350b:	jne    0x403519
  40350d:	movsx  eax,al
  403510:	inc    ecx
  403511:	inc    ecx
  403512:	jmp    0x403517
  403514:	add    ecx,0x5
  403517:	add    ecx,eax
  403519:	ret    
  40351a:	mov    eax,eax
  40351c:	cmp    BYTE PTR ds:0x42e024,0x1
  403523:	jbe    0x403542
  403525:	push   eax
  403526:	push   edx
  403527:	push   ecx
  403528:	call   0x4034fc
  40352d:	push   ecx
  40352e:	push   esp
  40352f:	push   0x1
  403531:	push   0x0
  403533:	push   0xeedfae1
  403538:	call   DWORD PTR ds:0x42f014
  40353e:	pop    ecx
  40353f:	pop    ecx
  403540:	pop    edx
  403541:	pop    eax
  403542:	ret    
  403543:	nop
  403544:	cmp    BYTE PTR ds:0x42e024,0x1
  40354b:	jbe    0x40355f
  40354d:	push   edx
  40354e:	push   esp
  40354f:	push   0x1
  403551:	push   0x0
  403553:	push   0xeedfae2
  403558:	call   DWORD PTR ds:0x42f014
  40355e:	pop    edx
  40355f:	ret    
  403560:	push   eax
  403561:	push   edx
  403562:	cmp    BYTE PTR ds:0x42e024,0x1
  403569:	jbe    0x40357b
  40356b:	push   esp
  40356c:	push   0x2
  40356e:	push   0x0
  403570:	push   0xeedfae3
  403575:	call   DWORD PTR ds:0x42f014
  40357b:	pop    edx
  40357c:	pop    eax
  40357d:	ret    
  40357e:	mov    eax,eax
  403580:	mov    eax,DWORD PTR [esp+0x4]
  403584:	test   DWORD PTR [eax+0x4],0x6
  40358b:	jne    0x4036a4
  403591:	cmp    DWORD PTR [eax],0xeedfade
  403597:	mov    edx,DWORD PTR [eax+0x18]
  40359a:	mov    ecx,DWORD PTR [eax+0x14]
  40359d:	je     0x40360d
  40359f:	cld    
  4035a0:	call   0x403124
  4035a5:	mov    edx,DWORD PTR ds:0x42f010
  4035ab:	test   edx,edx
  4035ad:	je     0x4036a4
  4035b3:	call   edx
  4035b5:	test   eax,eax
  4035b7:	je     0x4036a4
  4035bd:	mov    edx,DWORD PTR [esp+0xc]
  4035c1:	mov    ecx,DWORD PTR [esp+0x4]
  4035c5:	cmp    DWORD PTR [ecx],0xeefface
  4035cb:	je     0x403604
  4035cd:	call   0x4034ac
  4035d2:	cmp    BYTE PTR ds:0x42e028,0x0
  4035d9:	jbe    0x403604
  4035db:	cmp    BYTE PTR ds:0x42e024,0x0
  4035e2:	ja     0x403604
  4035e4:	lea    ecx,[esp+0x4]
  4035e8:	push   eax
  4035e9:	push   ecx
  4035ea:	call   0x401178
  4035ef:	cmp    eax,0x0
  4035f2:	pop    eax
  4035f3:	je     0x4036a4
  4035f9:	mov    edx,eax
  4035fb:	mov    eax,DWORD PTR [esp+0x4]
  4035ff:	mov    ecx,DWORD PTR [eax+0xc]
  403602:	jmp    0x403634
  403604:	mov    edx,eax
  403606:	mov    eax,DWORD PTR [esp+0x4]
  40360a:	mov    ecx,DWORD PTR [eax+0xc]
  40360d:	cmp    BYTE PTR ds:0x42e028,0x1
  403614:	jbe    0x403634
  403616:	cmp    BYTE PTR ds:0x42e024,0x0
  40361d:	ja     0x403634
  40361f:	push   eax
  403620:	lea    eax,[esp+0x8]
  403624:	push   edx
  403625:	push   ecx
  403626:	push   eax
  403627:	call   0x401178
  40362c:	cmp    eax,0x0
  40362f:	pop    ecx
  403630:	pop    edx
  403631:	pop    eax
  403632:	je     0x4036a4
  403634:	or     DWORD PTR [eax+0x4],0x2
  403638:	push   ebx
  403639:	xor    ebx,ebx
  40363b:	push   esi
  40363c:	push   edi
  40363d:	push   ebp
  40363e:	mov    ebx,DWORD PTR fs:[ebx]
  403641:	push   ebx
  403642:	push   eax
  403643:	push   edx
  403644:	push   ecx
  403645:	mov    edx,DWORD PTR [esp+0x28]
  403649:	push   0x0
  40364b:	push   eax
  40364c:	push   0x403658
  403651:	push   edx
  403652:	call   DWORD PTR ds:0x42f018
  403658:	mov    edi,DWORD PTR [esp+0x28]
  40365c:	call   0x405980
  403661:	push   DWORD PTR [eax+0x0]
  403667:	mov    DWORD PTR [eax+0x0],esp
  40366d:	mov    ebp,DWORD PTR [edi+0x8]
  403670:	mov    ebx,DWORD PTR [edi+0x4]
  403673:	mov    DWORD PTR [edi+0x4],0x403684
  40367a:	add    ebx,0x5
  40367d:	call   0x4034e8
  403682:	jmp    ebx
  403684:	jmp    0x4036ac
  403689:	call   0x405980
  40368e:	mov    ecx,DWORD PTR [eax+0x0]
  403694:	mov    edx,DWORD PTR [ecx]
  403696:	mov    DWORD PTR [eax+0x0],edx
  40369c:	mov    eax,DWORD PTR [ecx+0x8]
  40369f:	jmp    0x4031c4
  4036a4:	mov    eax,0x1
  4036a9:	ret    
  4036aa:	mov    eax,eax
  4036ac:	mov    eax,DWORD PTR [esp+0x4]
  4036b0:	mov    edx,DWORD PTR [esp+0x8]
  4036b4:	test   DWORD PTR [eax+0x4],0x6
  4036bb:	je     0x4036dc
  4036bd:	mov    ecx,DWORD PTR [edx+0x4]
  4036c0:	mov    DWORD PTR [edx+0x4],0x4036dc
  4036c7:	push   ebx
  4036c8:	push   esi
  4036c9:	push   edi
  4036ca:	push   ebp
  4036cb:	mov    ebp,DWORD PTR [edx+0x8]
  4036ce:	add    ecx,0x5
  4036d1:	call   0x40351c
  4036d6:	call   ecx
  4036d8:	pop    ebp
  4036d9:	pop    edi
  4036da:	pop    esi
  4036db:	pop    ebx
  4036dc:	mov    eax,0x1
  4036e1:	ret    
  4036e2:	mov    eax,eax
  4036e4:	or     eax,eax
  4036e6:	jne    0x4036f2
  4036e8:	mov    eax,0xd8
  4036ed:	call   0x403ca0
  4036f2:	pop    edx
  4036f3:	push   esp
  4036f4:	push   ebp
  4036f5:	push   edi
  4036f6:	push   esi
  4036f7:	push   ebx
  4036f8:	push   eax
  4036f9:	push   edx
  4036fa:	push   esp
  4036fb:	push   0x7
  4036fd:	push   0x1
  4036ff:	push   0xeedfade
  403704:	push   edx
  403705:	jmp    DWORD PTR ds:0x42f014
  40370b:	ret    
  40370c:	mov    eax,DWORD PTR [esp+0x30]
  403710:	mov    DWORD PTR [eax+0x4],0x403757
  403717:	call   0x405980
  40371c:	mov    edx,DWORD PTR [eax+0x0]
  403722:	mov    ecx,DWORD PTR [edx]
  403724:	mov    DWORD PTR [eax+0x0],ecx
  40372a:	mov    eax,DWORD PTR [edx+0xc]
  40372d:	and    DWORD PTR [eax+0x4],0xfffffffd
  403731:	cmp    DWORD PTR [eax],0xeedfade
  403737:	je     0x403746
  403739:	mov    eax,DWORD PTR [edx+0x8]
  40373c:	call   0x4031c4
  403741:	call   0x403490
  403746:	xor    eax,eax
  403748:	add    esp,0x14
  40374b:	mov    edx,DWORD PTR fs:[eax]
  40374e:	pop    ecx
  40374f:	mov    edx,DWORD PTR [edx]
  403751:	mov    DWORD PTR [ecx],edx
  403753:	pop    ebp
  403754:	pop    edi
  403755:	pop    esi
  403756:	pop    ebx
  403757:	mov    eax,0x1
  40375c:	ret    
  40375d:	lea    eax,[eax+0x0]
  403760:	call   0x405980
  403765:	mov    edx,DWORD PTR [eax+0x0]
  40376b:	mov    ecx,DWORD PTR [edx]
  40376d:	mov    DWORD PTR [eax+0x0],ecx
  403773:	mov    eax,DWORD PTR [edx+0x8]
  403776:	call   0x4031c4
  40377b:	pop    edx
  40377c:	mov    esp,DWORD PTR [esp+0x2c]
  403780:	xor    eax,eax
  403782:	pop    ecx
  403783:	mov    DWORD PTR fs:[eax],ecx
  403786:	pop    eax
  403787:	pop    ebp
  403788:	call   0x403544
  40378d:	jmp    edx
  40378f:	ret    
  403790:	xor    edx,edx
  403792:	mov    ecx,DWORD PTR [esp+0x8]
  403796:	mov    eax,DWORD PTR [esp+0x4]
  40379a:	add    ecx,0x5
  40379d:	mov    DWORD PTR fs:[edx],eax
  4037a0:	call   ecx
  4037a2:	ret    0xc
  4037a5:	ret    
  4037a6:	mov    eax,eax
  4037a8:	push   ebp
  4037a9:	mov    ebp,esp
  4037ab:	mov    edx,DWORD PTR [ebp+0x8]
  4037ae:	mov    eax,DWORD PTR [edx]
  4037b0:	cmp    eax,0xc0000092
  4037b5:	jg     0x4037e3
  4037b7:	je     0x403815
  4037b9:	cmp    eax,0xc000008e
  4037be:	jg     0x4037d5
  4037c0:	je     0x403819
  4037c2:	sub    eax,0xc0000005
  4037c7:	je     0x403825
  4037c9:	sub    eax,0x87
  4037ce:	je     0x40380d
  4037d0:	dec    eax
  4037d1:	je     0x403821
  4037d3:	jmp    0x403835
  4037d5:	add    eax,0x3fffff71
  4037da:	sub    eax,0x2
  4037dd:	jb     0x403815
  4037df:	je     0x403811
  4037e1:	jmp    0x403835
  4037e3:	cmp    eax,0xc0000096
  4037e8:	jg     0x4037fb
  4037ea:	je     0x403829
  4037ec:	sub    eax,0xc0000093
  4037f1:	je     0x403821
  4037f3:	dec    eax
  4037f4:	je     0x403809
  4037f6:	dec    eax
  4037f7:	je     0x40381d
  4037f9:	jmp    0x403835
  4037fb:	sub    eax,0xc00000fd
  403800:	je     0x403831
  403802:	sub    eax,0x3d
  403805:	je     0x40382d
  403807:	jmp    0x403835
  403809:	mov    al,0xc8
  40380b:	jmp    0x403837
  40380d:	mov    al,0xc9
  40380f:	jmp    0x403837
  403811:	mov    al,0xcd
  403813:	jmp    0x403837
  403815:	mov    al,0xcf
  403817:	jmp    0x403837
  403819:	mov    al,0xc8
  40381b:	jmp    0x403837
  40381d:	mov    al,0xd7
  40381f:	jmp    0x403837
  403821:	mov    al,0xce
  403823:	jmp    0x403837
  403825:	mov    al,0xd8
  403827:	jmp    0x403837
  403829:	mov    al,0xda
  40382b:	jmp    0x403837
  40382d:	mov    al,0xd9
  40382f:	jmp    0x403837
  403831:	mov    al,0xca
  403833:	jmp    0x403837
  403835:	mov    al,0xff
  403837:	and    eax,0xff
  40383c:	mov    edx,DWORD PTR [edx+0xc]
  40383f:	call   0x402a34
  403844:	pop    ebp
  403845:	ret    0x4
  403848:	mov    eax,DWORD PTR [esp+0x4]
  40384c:	test   DWORD PTR [eax+0x4],0x6
  403853:	jne    0x4038e2
  403859:	cmp    BYTE PTR ds:0x42e024,0x0
  403860:	ja     0x403871
  403862:	lea    eax,[esp+0x4]
  403866:	push   eax
  403867:	call   0x401178
  40386c:	cmp    eax,0x0
  40386f:	je     0x4038e2
  403871:	mov    eax,DWORD PTR [esp+0x4]
  403875:	cld    
  403876:	call   0x403124
  40387b:	mov    edx,DWORD PTR [esp+0x8]
  40387f:	push   0x0
  403881:	push   eax
  403882:	push   0x40388e
  403887:	push   edx
  403888:	call   DWORD PTR ds:0x42f018
  40388e:	mov    ebx,DWORD PTR [esp+0x4]
  403892:	cmp    DWORD PTR [ebx],0xeedfade
  403898:	mov    edx,DWORD PTR [ebx+0x14]
  40389b:	mov    eax,DWORD PTR [ebx+0x18]
  40389e:	je     0x4038bd
  4038a0:	mov    edx,DWORD PTR ds:0x42f010
  4038a6:	test   edx,edx
  4038a8:	je     0x4037a8
  4038ae:	mov    eax,ebx
  4038b0:	call   edx
  4038b2:	test   eax,eax
  4038b4:	je     0x4037a8
  4038ba:	mov    edx,DWORD PTR [ebx+0xc]
  4038bd:	call   0x403560
  4038c2:	mov    ecx,DWORD PTR ds:0x42f004
  4038c8:	test   ecx,ecx
  4038ca:	je     0x4038ce
  4038cc:	call   ecx
  4038ce:	mov    ecx,DWORD PTR [esp+0x4]
  4038d2:	mov    eax,0xd9
  4038d7:	mov    edx,DWORD PTR [ecx+0x14]
  4038da:	mov    DWORD PTR [esp],edx
  4038dd:	jmp    0x403ca0
  4038e2:	xor    eax,eax
  4038e4:	ret    
  4038e5:	lea    eax,[eax+0x0]
  4038e8:	xor    edx,edx
  4038ea:	lea    eax,[ebp-0xc]
  4038ed:	mov    ecx,DWORD PTR fs:[edx]
  4038f0:	mov    DWORD PTR fs:[edx],eax
  4038f3:	mov    DWORD PTR [eax],ecx
  4038f5:	mov    DWORD PTR [eax+0x4],0x403848
  4038fc:	mov    DWORD PTR [eax+0x8],ebp
  4038ff:	mov    ds:0x42f634,eax
  403904:	ret    
  403905:	lea    eax,[eax+0x0]
  403908:	xor    edx,edx
  40390a:	mov    eax,ds:0x42f634
  40390f:	test   eax,eax
  403911:	je     0x40392f
  403913:	mov    ecx,DWORD PTR fs:[edx]
  403916:	cmp    eax,ecx
  403918:	jne    0x403922
  40391a:	mov    eax,DWORD PTR [eax]
  40391c:	mov    DWORD PTR fs:[edx],eax
  40391f:	ret    
  403920:	mov    ecx,DWORD PTR [ecx]
  403922:	cmp    ecx,0xffffffff
  403925:	je     0x40392f
  403927:	cmp    DWORD PTR [ecx],eax
  403929:	jne    0x403920
  40392b:	mov    eax,DWORD PTR [eax]
  40392d:	mov    DWORD PTR [ecx],eax
  40392f:	ret    
  403930:	push   ebp
  403931:	mov    ebp,esp
  403933:	add    esp,0xfffffff8
  403936:	push   ebx
  403937:	push   esi
  403938:	push   edi
  403939:	mov    esi,0x42f630
  40393e:	mov    eax,DWORD PTR [esi+0x8]
  403941:	test   eax,eax
  403943:	je     0x403999
  403945:	mov    ebx,DWORD PTR [esi+0xc]
  403948:	mov    eax,DWORD PTR [eax+0x4]
  40394b:	mov    DWORD PTR [ebp-0x4],eax
  40394e:	xor    eax,eax
  403950:	push   ebp
  403951:	push   0x403985
  403956:	push   DWORD PTR fs:[eax]
  403959:	mov    DWORD PTR fs:[eax],esp
  40395c:	test   ebx,ebx
  40395e:	jle    0x40397b
  403960:	dec    ebx
  403961:	mov    DWORD PTR [esi+0xc],ebx
  403964:	mov    eax,DWORD PTR [ebp-0x4]
  403967:	mov    eax,DWORD PTR [eax+ebx*8+0x4]
  40396b:	mov    DWORD PTR [ebp-0x8],eax
  40396e:	cmp    DWORD PTR [ebp-0x8],0x0
  403972:	je     0x403977
  403974:	call   DWORD PTR [ebp-0x8]
  403977:	test   ebx,ebx
  403979:	jg     0x403960
  40397b:	xor    eax,eax
  40397d:	pop    edx
  40397e:	pop    ecx
  40397f:	pop    ecx
  403980:	mov    DWORD PTR fs:[eax],edx
  403983:	jmp    0x403999
  403985:	jmp    0x403580
  40398a:	call   0x403930
  40398f:	call   0x40370c
  403994:	call   0x403760
  403999:	pop    edi
  40399a:	pop    esi
  40399b:	pop    ebx
  40399c:	pop    ecx
  40399d:	pop    ecx
  40399e:	pop    ebp
  40399f:	ret    
  4039a0:	push   ebp
  4039a1:	mov    ebp,esp
  4039a3:	add    esp,0xfffffff8
  4039a6:	push   ebx
  4039a7:	push   esi
  4039a8:	push   edi
  4039a9:	mov    edi,0x42f630
  4039ae:	mov    eax,DWORD PTR [edi+0x8]
  4039b1:	test   eax,eax
  4039b3:	je     0x403a09
  4039b5:	mov    esi,DWORD PTR [eax]
  4039b7:	xor    ebx,ebx
  4039b9:	mov    eax,DWORD PTR [eax+0x4]
  4039bc:	mov    DWORD PTR [ebp-0x4],eax
  4039bf:	xor    eax,eax
  4039c1:	push   ebp
  4039c2:	push   0x4039f5
  4039c7:	push   DWORD PTR fs:[eax]
  4039ca:	mov    DWORD PTR fs:[eax],esp
  4039cd:	cmp    esi,ebx
  4039cf:	jle    0x4039eb
  4039d1:	mov    eax,DWORD PTR [ebp-0x4]
  4039d4:	mov    eax,DWORD PTR [eax+ebx*8]
  4039d7:	mov    DWORD PTR [ebp-0x8],eax
  4039da:	inc    ebx
  4039db:	mov    DWORD PTR [edi+0xc],ebx
  4039de:	cmp    DWORD PTR [ebp-0x8],0x0
  4039e2:	je     0x4039e7
  4039e4:	call   DWORD PTR [ebp-0x8]
  4039e7:	cmp    esi,ebx
  4039e9:	jg     0x4039d1
  4039eb:	xor    eax,eax
  4039ed:	pop    edx
  4039ee:	pop    ecx
  4039ef:	pop    ecx
  4039f0:	mov    DWORD PTR fs:[eax],edx
  4039f3:	jmp    0x403a09
  4039f5:	jmp    0x403580
  4039fa:	call   0x403930
  4039ff:	call   0x40370c
  403a04:	call   0x403760
  403a09:	pop    edi
  403a0a:	pop    esi
  403a0b:	pop    ebx
  403a0c:	pop    ecx
  403a0d:	pop    ecx
  403a0e:	pop    ebp
  403a0f:	ret    
  403a10:	mov    DWORD PTR ds:0x42f014,0x401168
  403a1a:	mov    DWORD PTR ds:0x42f018,0x401170
  403a24:	mov    ds:0x42f638,eax
  403a29:	xor    eax,eax
  403a2b:	mov    ds:0x42f63c,eax
  403a30:	mov    DWORD PTR ds:0x42f640,edx
  403a36:	mov    eax,DWORD PTR [edx+0x4]
  403a39:	mov    ds:0x42f02c,eax
  403a3e:	call   0x4038e8
  403a43:	mov    BYTE PTR ds:0x42f034,0x0
  403a4a:	call   0x4039a0
  403a4f:	ret    
  403a50:	push   ebx
  403a51:	xor    ebx,ebx
  403a53:	push   edi
  403a54:	push   esi
  403a55:	mov    edi,DWORD PTR [eax+ebx*1]
  403a58:	lea    esi,[eax+ebx*1+0x4]
  403a5c:	mov    eax,DWORD PTR [esi+0x4]
  403a5f:	mov    edx,DWORD PTR [esi]
  403a61:	mov    eax,DWORD PTR [eax+ebx*1]
  403a64:	add    edx,ebx
  403a66:	call   0x4056fc
  403a6b:	add    esi,0x8
  403a6e:	dec    edi
  403a6f:	jne    0x403a5c
  403a71:	pop    esi
  403a72:	pop    edi
  403a73:	pop    ebx
  403a74:	ret    
  403a75:	lea    eax,[eax+0x0]
  403a78:	push   ebx
  403a79:	xor    ebx,ebx
  403a7b:	push   edi
  403a7c:	push   esi
  403a7d:	mov    edi,DWORD PTR [eax+ebx*1]
  403a80:	lea    esi,[eax+ebx*1+0x4]
  403a84:	mov    eax,DWORD PTR [esi+0x4]
  403a87:	mov    edx,DWORD PTR [esi]
  403a89:	mov    eax,DWORD PTR [eax+ebx*1]
  403a8c:	add    eax,DWORD PTR [esi+0x8]
  403a8f:	mov    DWORD PTR [edx+ebx*1],eax
  403a92:	add    esi,0xc
  403a95:	dec    edi
  403a96:	jne    0x403a84
  403a98:	pop    esi
  403a99:	pop    edi
  403a9a:	pop    ebx
  403a9b:	ret    
  403a9c:	push   ebx
  403a9d:	push   esi
  403a9e:	push   edi
  403a9f:	mov    esi,0x42e068
  403aa4:	mov    cl,0x10
  403aa6:	mov    ebx,DWORD PTR ds:0x42e000
  403aac:	mov    eax,ebx
  403aae:	mov    edi,0xa
  403ab3:	cdq    
  403ab4:	idiv   edi
  403ab6:	add    dl,0x30
  403ab9:	xor    eax,eax
  403abb:	mov    al,cl
  403abd:	mov    BYTE PTR [esi+eax*1],dl
  403ac0:	mov    eax,ebx
  403ac2:	mov    ebx,0xa
  403ac7:	cdq    
  403ac8:	idiv   ebx
  403aca:	mov    ebx,eax
  403acc:	dec    ecx
  403acd:	test   ebx,ebx
  403acf:	jne    0x403aac
  403ad1:	mov    cl,0x1c
  403ad3:	mov    eax,ds:0x42e004
  403ad8:	mov    edx,eax
  403ada:	and    edx,0xf
  403add:	mov    dl,BYTE PTR [edx+0x42e088]
  403ae3:	xor    ebx,ebx
  403ae5:	mov    bl,cl
  403ae7:	mov    BYTE PTR [esi+ebx*1],dl
  403aea:	shr    eax,0x4
  403aed:	dec    ecx
  403aee:	test   eax,eax
  403af0:	jne    0x403ad8
  403af2:	pop    edi
  403af3:	pop    esi
  403af4:	pop    ebx
  403af5:	ret    
  403af6:	mov    eax,eax
  403af8:	xor    eax,eax
  403afa:	xchg   DWORD PTR ds:0x42e000,eax
  403b00:	neg    eax
  403b02:	sbb    eax,eax
  403b04:	inc    eax
  403b05:	mov    edi,0x42f630
  403b0a:	mov    ebx,DWORD PTR [edi+0x18]
  403b0d:	mov    ebp,DWORD PTR [edi+0x14]
  403b10:	push   DWORD PTR [edi+0x1c]
  403b13:	push   DWORD PTR [edi+0x20]
  403b16:	mov    esi,DWORD PTR [edi]
  403b18:	mov    ecx,0xb
  403b1d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b1f:	pop    edi
  403b20:	pop    esi
  403b21:	leave  
  403b22:	ret    0xc
  403b25:	ret    
  403b26:	mov    eax,eax
  403b28:	push   ecx
  403b29:	cmp    BYTE PTR ds:0x42f044,0x0
  403b30:	je     0x403b89
  403b32:	cmp    WORD PTR ds:0x42f218,0xd7b2
  403b3b:	jne    0x403b51
  403b3d:	cmp    DWORD PTR ds:0x42f220,0x0
  403b44:	jbe    0x403b51
  403b46:	mov    eax,0x42f214
  403b4b:	call   DWORD PTR ds:0x42f230
  403b51:	push   0x0
  403b53:	lea    eax,[esp+0x4]
  403b57:	push   eax
  403b58:	push   0x1e
  403b5a:	push   0x42e068
  403b5f:	push   0xfffffff5
  403b61:	call   0x401160
  403b66:	push   eax
  403b67:	call   0x401180
  403b6c:	push   0x0
  403b6e:	lea    eax,[esp+0x4]
  403b72:	push   eax
  403b73:	push   0x2
  403b75:	push   0x403bb0
  403b7a:	push   0xfffffff5
  403b7c:	call   0x401160
  403b81:	push   eax
  403b82:	call   0x401180
  403b87:	pop    edx
  403b88:	ret    
  403b89:	cmp    BYTE PTR ds:0x42e02c,0x0
  403b90:	jne    0x403ba5
  403b92:	push   0x0
  403b94:	push   0x42e060
  403b99:	push   0x42e068
  403b9e:	push   0x0
  403ba0:	call   0x401198
  403ba5:	pop    edx
  403ba6:	ret    
  403ba7:	add    bh,bh
  403ba9:	(bad)  
  403baa:	(bad)  
  403bab:	inc    DWORD PTR [edx]
  403bad:	add    BYTE PTR [eax],al
  403baf:	add    BYTE PTR ds:0x5300000a,cl
  403bb5:	push   esi
  403bb6:	push   edi
  403bb7:	push   ebp
  403bb8:	push   ecx
  403bb9:	mov    ebx,0x42f630
  403bbe:	mov    esi,0x42f040
  403bc3:	cmp    BYTE PTR [ebx+0x28],0x0
  403bc7:	jne    0x403bdf
  403bc9:	cmp    DWORD PTR [esi],0x0
  403bcc:	je     0x403bdf
  403bce:	mov    eax,DWORD PTR [esi]
  403bd0:	mov    DWORD PTR [esp],eax
  403bd3:	xor    eax,eax
  403bd5:	mov    DWORD PTR [esi],eax
  403bd7:	call   DWORD PTR [esp]
  403bda:	cmp    DWORD PTR [esi],0x0
  403bdd:	jne    0x403bce
  403bdf:	cmp    DWORD PTR ds:0x42e004,0x0
  403be6:	je     0x403bf9
  403be8:	call   0x403a9c
  403bed:	call   0x403b28
  403bf2:	xor    eax,eax
  403bf4:	mov    ds:0x42e004,eax
  403bf9:	cmp    BYTE PTR [ebx+0x28],0x2
  403bfd:	jne    0x403c0d
  403bff:	cmp    DWORD PTR ds:0x42e000,0x0
  403c06:	jne    0x403c0d
  403c08:	xor    eax,eax
  403c0a:	mov    DWORD PTR [ebx+0xc],eax
  403c0d:	call   0x403930
  403c12:	cmp    BYTE PTR [ebx+0x28],0x1
  403c16:	jbe    0x403c21
  403c18:	cmp    DWORD PTR ds:0x42e000,0x0
  403c1f:	je     0x403c44
  403c21:	mov    edi,DWORD PTR [ebx+0x10]
  403c24:	test   edi,edi
  403c26:	je     0x403c44
  403c28:	mov    eax,edi
  403c2a:	call   0x4051f0
  403c2f:	mov    ebp,DWORD PTR [ebx+0x10]
  403c32:	mov    esi,DWORD PTR [ebp+0x10]
  403c35:	cmp    esi,DWORD PTR [ebp+0x4]
  403c38:	je     0x403c44
  403c3a:	test   esi,esi
  403c3c:	je     0x403c44
  403c3e:	push   esi
  403c3f:	call   0x4011b0
  403c44:	call   0x403908
  403c49:	cmp    BYTE PTR [ebx+0x28],0x1
  403c4d:	jne    0x403c52
  403c4f:	call   DWORD PTR [ebx+0x24]
  403c52:	cmp    BYTE PTR [ebx+0x28],0x0
  403c56:	je     0x403c5d
  403c58:	call   0x403af8
  403c5d:	cmp    DWORD PTR [ebx],0x0
  403c60:	jne    0x403c7c
  403c62:	cmp    DWORD PTR ds:0x42f024,0x0
  403c69:	je     0x403c71
  403c6b:	call   DWORD PTR ds:0x42f024
  403c71:	mov    eax,ds:0x42e000
  403c76:	push   eax
  403c77:	call   0x401190
  403c7c:	mov    eax,DWORD PTR [ebx]
  403c7e:	mov    esi,eax
  403c80:	mov    edi,ebx
  403c82:	mov    ecx,0xb
  403c87:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c89:	jmp    0x403bf9
  403c8e:	pop    edx
  403c8f:	pop    ebp
  403c90:	pop    edi
  403c91:	pop    esi
  403c92:	pop    ebx
  403c93:	ret    
  403c94:	mov    ds:0x42e000,eax
  403c99:	call   0x403bb4
  403c9e:	ret    
  403c9f:	nop
  403ca0:	pop    DWORD PTR ds:0x42e004
  403ca6:	jmp    0x403c94
  403cab:	ret    
  403cac:	mov    edx,DWORD PTR [eax]
  403cae:	test   edx,edx
  403cb0:	je     0x403cce
  403cb2:	mov    DWORD PTR [eax],0x0
  403cb8:	mov    ecx,DWORD PTR [edx-0x8]
  403cbb:	dec    ecx
  403cbc:	jl     0x403cce
  403cbe:	lock dec DWORD PTR [edx-0x8]
  403cc2:	jne    0x403cce
  403cc4:	push   eax
  403cc5:	lea    eax,[edx-0x8]
  403cc8:	call   0x4029c4
  403ccd:	pop    eax
  403cce:	ret    
  403ccf:	nop
  403cd0:	push   ebx
  403cd1:	push   esi
  403cd2:	mov    ebx,eax
  403cd4:	mov    esi,edx
  403cd6:	mov    edx,DWORD PTR [ebx]
  403cd8:	test   edx,edx
  403cda:	je     0x403cf6
  403cdc:	mov    DWORD PTR [ebx],0x0
  403ce2:	mov    ecx,DWORD PTR [edx-0x8]
  403ce5:	dec    ecx
  403ce6:	jl     0x403cf6
  403ce8:	lock dec DWORD PTR [edx-0x8]
  403cec:	jne    0x403cf6
  403cee:	lea    eax,[edx-0x8]
  403cf1:	call   0x4029c4
  403cf6:	add    ebx,0x4
  403cf9:	dec    esi
  403cfa:	jne    0x403cd6
  403cfc:	pop    esi
  403cfd:	pop    ebx
  403cfe:	ret    
  403cff:	nop
  403d00:	test   edx,edx
  403d02:	je     0x403d28
  403d04:	mov    ecx,DWORD PTR [edx-0x8]
  403d07:	inc    ecx
  403d08:	jg     0x403d24
  403d0a:	push   eax
  403d0b:	push   edx
  403d0c:	mov    eax,DWORD PTR [edx-0x4]
  403d0f:	call   0x403d70
  403d14:	mov    edx,eax
  403d16:	pop    eax
  403d17:	push   edx
  403d18:	mov    ecx,DWORD PTR [eax-0x4]
  403d1b:	call   0x402b2c
  403d20:	pop    edx
  403d21:	pop    eax
  403d22:	jmp    0x403d28
  403d24:	lock inc DWORD PTR [edx-0x8]
  403d28:	xchg   DWORD PTR [eax],edx
  403d2a:	test   edx,edx
  403d2c:	je     0x403d42
  403d2e:	mov    ecx,DWORD PTR [edx-0x8]
  403d31:	dec    ecx
  403d32:	jl     0x403d42
  403d34:	lock dec DWORD PTR [edx-0x8]
  403d38:	jne    0x403d42
  403d3a:	lea    eax,[edx-0x8]
  403d3d:	call   0x4029c4
  403d42:	ret    
  403d43:	nop
  403d44:	test   edx,edx
  403d46:	je     0x403d52
  403d48:	mov    ecx,DWORD PTR [edx-0x8]
  403d4b:	inc    ecx
  403d4c:	jle    0x403d52
  403d4e:	lock inc DWORD PTR [edx-0x8]
  403d52:	xchg   DWORD PTR [eax],edx
  403d54:	test   edx,edx
  403d56:	je     0x403d6c
  403d58:	mov    ecx,DWORD PTR [edx-0x8]
  403d5b:	dec    ecx
  403d5c:	jl     0x403d6c
  403d5e:	lock dec DWORD PTR [edx-0x8]
  403d62:	jne    0x403d6c
  403d64:	lea    eax,[edx-0x8]
  403d67:	call   0x4029c4
  403d6c:	ret    
  403d6d:	lea    eax,[eax+0x0]
  403d70:	test   eax,eax
  403d72:	jle    0x403d98
  403d74:	push   eax
  403d75:	add    eax,0xa
  403d78:	and    eax,0xfffffffe
  403d7b:	push   eax
  403d7c:	call   0x402994
  403d81:	pop    edx
  403d82:	mov    WORD PTR [edx+eax*1-0x2],0x0
  403d89:	add    eax,0x8
  403d8c:	pop    edx
  403d8d:	mov    DWORD PTR [eax-0x4],edx
  403d90:	mov    DWORD PTR [eax-0x8],0x1
  403d97:	ret    
  403d98:	xor    eax,eax
  403d9a:	ret    
  403d9b:	nop
  403d9c:	push   ebx
  403d9d:	push   esi
  403d9e:	push   edi
  403d9f:	mov    ebx,eax
  403da1:	mov    esi,edx
  403da3:	mov    edi,ecx
  403da5:	mov    eax,edi
  403da7:	call   0x403d70
  403dac:	mov    ecx,edi
  403dae:	mov    edi,eax
  403db0:	test   esi,esi
  403db2:	je     0x403dbd
  403db4:	mov    edx,eax
  403db6:	mov    eax,esi
  403db8:	call   0x402b2c
  403dbd:	mov    eax,ebx
  403dbf:	call   0x403cac
  403dc4:	mov    DWORD PTR [ebx],edi
  403dc6:	pop    edi
  403dc7:	pop    esi
  403dc8:	pop    ebx
  403dc9:	ret    
  403dca:	mov    eax,eax
  403dcc:	push   ebp
  403dcd:	mov    ebp,esp
  403dcf:	push   0x0
  403dd1:	push   0x0
  403dd3:	push   edx
  403dd4:	push   eax
  403dd5:	mov    eax,DWORD PTR [ebp+0x8]
  403dd8:	push   eax
  403dd9:	push   ecx
  403dda:	push   0x0
  403ddc:	mov    eax,ds:0x42f5b8
  403de1:	push   eax
  403de2:	call   0x401230
  403de7:	pop    ebp
  403de8:	ret    0x4
  403deb:	nop
  403dec:	push   ebp
  403ded:	mov    ebp,esp
  403def:	push   edx
  403df0:	push   eax
  403df1:	mov    eax,DWORD PTR [ebp+0x8]
  403df4:	push   eax
  403df5:	push   ecx
  403df6:	push   0x0
  403df8:	mov    eax,ds:0x42f5b8
  403dfd:	push   eax
  403dfe:	call   0x401210
  403e03:	pop    ebp
  403e04:	ret    0x4
  403e07:	nop
  403e08:	push   ebx
  403e09:	push   esi
  403e0a:	push   edi
  403e0b:	push   ebp
  403e0c:	add    esp,0xfffff004
  403e12:	push   eax
  403e13:	add    esp,0xfffffffc
  403e16:	mov    esi,ecx
  403e18:	mov    DWORD PTR [esp],edx
  403e1b:	mov    edi,eax
  403e1d:	test   esi,esi
  403e1f:	jg     0x403e2a
  403e21:	mov    eax,edi
  403e23:	call   0x403cac
  403e28:	jmp    0x403e89
  403e2a:	lea    ebp,[esi+0x1]
  403e2d:	cmp    ebp,0x7ff
  403e33:	jge    0x403e5d
  403e35:	push   esi
  403e36:	lea    eax,[esp+0x8]
  403e3a:	mov    ecx,DWORD PTR [esp+0x4]
  403e3e:	mov    edx,0xfff
  403e43:	call   0x403dcc
  403e48:	mov    ebx,eax
  403e4a:	test   ebx,ebx
  403e4c:	jl     0x403e5d
  403e4e:	lea    edx,[esp+0x4]
  403e52:	mov    eax,edi
  403e54:	mov    ecx,ebx
  403e56:	call   0x403d9c
  403e5b:	jmp    0x403e89
  403e5d:	mov    ebx,ebp
  403e5f:	add    ebx,ebx
  403e61:	mov    eax,edi
  403e63:	mov    edx,ebx
  403e65:	call   0x404284
  403e6a:	push   esi
  403e6b:	mov    eax,DWORD PTR [edi]
  403e6d:	mov    ecx,DWORD PTR [esp+0x4]
  403e71:	mov    edx,ebx
  403e73:	call   0x403dcc
  403e78:	mov    ebx,eax
  403e7a:	test   ebx,ebx
  403e7c:	jge    0x403e80
  403e7e:	xor    ebx,ebx
  403e80:	mov    eax,edi
  403e82:	mov    edx,ebx
  403e84:	call   0x404284
  403e89:	add    esp,0x1004
  403e8f:	pop    ebp
  403e90:	pop    edi
  403e91:	pop    esi
  403e92:	pop    ebx
  403e93:	ret    
  403e94:	push   edx
  403e95:	mov    edx,esp
  403e97:	mov    ecx,0x1
  403e9c:	call   0x403d9c
  403ea1:	pop    edx
  403ea2:	ret    
  403ea3:	nop
  403ea4:	xor    ecx,ecx
  403ea6:	test   edx,edx
  403ea8:	je     0x403ecb
  403eaa:	push   edx
  403eab:	cmp    cl,BYTE PTR [edx]
  403ead:	je     0x403ec6
  403eaf:	cmp    cl,BYTE PTR [edx+0x1]
  403eb2:	je     0x403ec5
  403eb4:	cmp    cl,BYTE PTR [edx+0x2]
  403eb7:	je     0x403ec4
  403eb9:	cmp    cl,BYTE PTR [edx+0x3]
  403ebc:	je     0x403ec3
  403ebe:	add    edx,0x4
  403ec1:	jmp    0x403eab
  403ec3:	inc    edx
  403ec4:	inc    edx
  403ec5:	inc    edx
  403ec6:	mov    ecx,edx
  403ec8:	pop    edx
  403ec9:	sub    ecx,edx
  403ecb:	jmp    0x403d9c
  403ed0:	ret    
  403ed1:	lea    eax,[eax+0x0]
  403ed4:	xor    ecx,ecx
  403ed6:	test   edx,edx
  403ed8:	je     0x403f07
  403eda:	push   edx
  403edb:	cmp    cx,WORD PTR [edx]
  403ede:	je     0x403f00
  403ee0:	cmp    cx,WORD PTR [edx+0x2]
  403ee4:	je     0x403efd
  403ee6:	cmp    cx,WORD PTR [edx+0x4]
  403eea:	je     0x403efa
  403eec:	cmp    cx,WORD PTR [edx+0x6]
  403ef0:	je     0x403ef7
  403ef2:	add    edx,0x8
  403ef5:	jmp    0x403edb
  403ef7:	add    edx,0x2
  403efa:	add    edx,0x2
  403efd:	add    edx,0x2
  403f00:	mov    ecx,edx
  403f02:	pop    edx
  403f03:	sub    ecx,edx
  403f05:	shr    ecx,1
  403f07:	jmp    0x403e08
  403f0c:	ret    
  403f0d:	lea    eax,[eax+0x0]
  403f10:	xor    ecx,ecx
  403f12:	mov    cl,BYTE PTR [edx]
  403f14:	inc    edx
  403f15:	jmp    0x403d9c
  403f1a:	ret    
  403f1b:	nop
  403f1c:	push   edi
  403f1d:	push   eax
  403f1e:	push   ecx
  403f1f:	mov    edi,edx
  403f21:	xor    eax,eax
  403f23:	repnz scas al,BYTE PTR es:[edi]
  403f25:	jne    0x403f29
  403f27:	not    ecx
  403f29:	pop    eax
  403f2a:	add    ecx,eax
  403f2c:	pop    eax
  403f2d:	pop    edi
  403f2e:	jmp    0x403d9c
  403f33:	ret    
  403f34:	xor    ecx,ecx
  403f36:	test   edx,edx
  403f38:	je     0x403f3f
  403f3a:	mov    ecx,DWORD PTR [edx-0x4]
  403f3d:	shr    ecx,1
  403f3f:	jmp    0x403e08
  403f44:	ret    
  403f45:	lea    eax,[eax+0x0]
  403f48:	test   eax,eax
  403f4a:	je     0x403f4f
  403f4c:	mov    eax,DWORD PTR [eax-0x4]
  403f4f:	ret    
  403f50:	test   edx,edx
  403f52:	je     0x403f93
  403f54:	mov    ecx,DWORD PTR [eax]
  403f56:	test   ecx,ecx
  403f58:	je     0x403d00
  403f5e:	push   ebx
  403f5f:	push   esi
  403f60:	push   edi
  403f61:	mov    ebx,eax
  403f63:	mov    esi,edx
  403f65:	mov    edi,DWORD PTR [ecx-0x4]
  403f68:	mov    edx,DWORD PTR [esi-0x4]
  403f6b:	add    edx,edi
  403f6d:	cmp    esi,ecx
  403f6f:	je     0x403f88
  403f71:	call   0x404284
  403f76:	mov    eax,esi
  403f78:	mov    ecx,DWORD PTR [esi-0x4]
  403f7b:	mov    edx,DWORD PTR [ebx]
  403f7d:	add    edx,edi
  403f7f:	call   0x402b2c
  403f84:	pop    edi
  403f85:	pop    esi
  403f86:	pop    ebx
  403f87:	ret    
  403f88:	call   0x404284
  403f8d:	mov    eax,DWORD PTR [ebx]
  403f8f:	mov    ecx,edi
  403f91:	jmp    0x403f7b
  403f93:	ret    
  403f94:	test   edx,edx
  403f96:	je     0x403ff9
  403f98:	test   ecx,ecx
  403f9a:	je     0x403d00
  403fa0:	cmp    edx,DWORD PTR [eax]
  403fa2:	je     0x404000
  403fa4:	cmp    ecx,DWORD PTR [eax]
  403fa6:	je     0x403fb6
  403fa8:	push   eax
  403fa9:	push   ecx
  403faa:	call   0x403d00
  403faf:	pop    edx
  403fb0:	pop    eax
  403fb1:	jmp    0x403f50
  403fb6:	push   ebx
  403fb7:	push   esi
  403fb8:	push   edi
  403fb9:	mov    ebx,edx
  403fbb:	mov    esi,ecx
  403fbd:	push   eax
  403fbe:	mov    eax,DWORD PTR [ebx-0x4]
  403fc1:	add    eax,DWORD PTR [esi-0x4]
  403fc4:	call   0x403d70
  403fc9:	mov    edi,eax
  403fcb:	mov    edx,eax
  403fcd:	mov    eax,ebx
  403fcf:	mov    ecx,DWORD PTR [ebx-0x4]
  403fd2:	call   0x402b2c
  403fd7:	mov    edx,edi
  403fd9:	mov    eax,esi
  403fdb:	mov    ecx,DWORD PTR [esi-0x4]
  403fde:	add    edx,DWORD PTR [ebx-0x4]
  403fe1:	call   0x402b2c
  403fe6:	pop    eax
  403fe7:	mov    edx,edi
  403fe9:	test   edi,edi
  403feb:	je     0x403ff0
  403fed:	dec    DWORD PTR [edi-0x8]
  403ff0:	call   0x403d00
  403ff5:	pop    edi
  403ff6:	pop    esi
  403ff7:	pop    ebx
  403ff8:	ret    
  403ff9:	mov    edx,ecx
  403ffb:	jmp    0x403d00
  404000:	mov    edx,ecx
  404002:	jmp    0x403f50
  404007:	ret    
  404008:	push   ebx
  404009:	push   esi
  40400a:	push   edi
  40400b:	push   edx
  40400c:	push   eax
  40400d:	mov    ebx,edx
  40400f:	xor    edi,edi
  404011:	mov    ecx,DWORD PTR [esp+edx*4+0x14]
  404015:	test   ecx,ecx
  404017:	je     0x404025
  404019:	cmp    DWORD PTR [eax],ecx
  40401b:	jne    0x404025
  40401d:	mov    edi,ecx
  40401f:	mov    eax,DWORD PTR [ecx-0x4]
  404022:	dec    edx
  404023:	jmp    0x404027
  404025:	xor    eax,eax
  404027:	mov    ecx,DWORD PTR [esp+edx*4+0x14]
  40402b:	test   ecx,ecx
  40402d:	je     0x404038
  40402f:	add    eax,DWORD PTR [ecx-0x4]
  404032:	cmp    edi,ecx
  404034:	jne    0x404038
  404036:	xor    edi,edi
  404038:	dec    edx
  404039:	jne    0x404027
  40403b:	test   edi,edi
  40403d:	je     0x404056
  40403f:	mov    edx,eax
  404041:	mov    eax,DWORD PTR [esp]
  404044:	mov    esi,DWORD PTR [edi-0x4]
  404047:	call   0x404284
  40404c:	mov    edi,DWORD PTR [esp]
  40404f:	push   DWORD PTR [edi]
  404051:	add    esi,DWORD PTR [edi]
  404053:	dec    ebx
  404054:	jmp    0x40405e
  404056:	call   0x403d70
  40405b:	push   eax
  40405c:	mov    esi,eax
  40405e:	mov    eax,DWORD PTR [esp+ebx*4+0x18]
  404062:	mov    edx,esi
  404064:	test   eax,eax
  404066:	je     0x404072
  404068:	mov    ecx,DWORD PTR [eax-0x4]
  40406b:	add    esi,ecx
  40406d:	call   0x402b2c
  404072:	dec    ebx
  404073:	jne    0x40405e
  404075:	pop    edx
  404076:	pop    eax
  404077:	test   edi,edi
  404079:	jne    0x404087
  40407b:	test   edx,edx
  40407d:	je     0x404082
  40407f:	dec    DWORD PTR [edx-0x8]
  404082:	call   0x403d00
  404087:	pop    edx
  404088:	pop    edi
  404089:	pop    esi
  40408a:	pop    ebx
  40408b:	pop    eax
  40408c:	lea    esp,[esp+edx*4]
  40408f:	jmp    eax
  404091:	ret    
  404092:	mov    eax,eax
  404094:	push   ebx
  404095:	push   esi
  404096:	push   edi
  404097:	mov    esi,eax
  404099:	mov    edi,edx
  40409b:	cmp    eax,edx
  40409d:	je     0x404132
  4040a3:	test   esi,esi
  4040a5:	je     0x40410f
  4040a7:	test   edi,edi
  4040a9:	je     0x404116
  4040ab:	mov    eax,DWORD PTR [esi-0x4]
  4040ae:	mov    edx,DWORD PTR [edi-0x4]
  4040b1:	sub    eax,edx
  4040b3:	ja     0x4040b7
  4040b5:	add    edx,eax
  4040b7:	push   edx
  4040b8:	shr    edx,0x2
  4040bb:	je     0x4040e3
  4040bd:	mov    ecx,DWORD PTR [esi]
  4040bf:	mov    ebx,DWORD PTR [edi]
  4040c1:	cmp    ecx,ebx
  4040c3:	jne    0x40411d
  4040c5:	dec    edx
  4040c6:	je     0x4040dd
  4040c8:	mov    ecx,DWORD PTR [esi+0x4]
  4040cb:	mov    ebx,DWORD PTR [edi+0x4]
  4040ce:	cmp    ecx,ebx
  4040d0:	jne    0x40411d
  4040d2:	add    esi,0x8
  4040d5:	add    edi,0x8
  4040d8:	dec    edx
  4040d9:	jne    0x4040bd
  4040db:	jmp    0x4040e3
  4040dd:	add    esi,0x4
  4040e0:	add    edi,0x4
  4040e3:	pop    edx
  4040e4:	and    edx,0x3
  4040e7:	je     0x40410b
  4040e9:	mov    ecx,DWORD PTR [esi]
  4040eb:	mov    ebx,DWORD PTR [edi]
  4040ed:	cmp    cl,bl
  4040ef:	jne    0x404132
  4040f1:	dec    edx
  4040f2:	je     0x40410b
  4040f4:	cmp    ch,bh
  4040f6:	jne    0x404132
  4040f8:	dec    edx
  4040f9:	je     0x40410b
  4040fb:	and    ebx,0xff0000
  404101:	and    ecx,0xff0000
  404107:	cmp    ecx,ebx
  404109:	jne    0x404132
  40410b:	add    eax,eax
  40410d:	jmp    0x404132
  40410f:	mov    edx,DWORD PTR [edi-0x4]
  404112:	sub    eax,edx
  404114:	jmp    0x404132
  404116:	mov    eax,DWORD PTR [esi-0x4]
  404119:	sub    eax,edx
  40411b:	jmp    0x404132
  40411d:	pop    edx
  40411e:	cmp    cl,bl
  404120:	jne    0x404132
  404122:	cmp    ch,bh
  404124:	jne    0x404132
  404126:	shr    ecx,0x10
  404129:	shr    ebx,0x10
  40412c:	cmp    cl,bl
  40412e:	jne    0x404132
  404130:	cmp    ch,bh
  404132:	pop    edi
  404133:	pop    esi
  404134:	pop    ebx
  404135:	ret    
  404136:	mov    eax,eax
  404138:	test   eax,eax
  40413a:	je     0x404146
  40413c:	mov    edx,DWORD PTR [eax-0x8]
  40413f:	inc    edx
  404140:	jle    0x404146
  404142:	lock inc DWORD PTR [eax-0x8]
  404146:	ret    
  404147:	nop
  404148:	test   eax,eax
  40414a:	je     0x40414e
  40414c:	ret    
  40414d:	add    BYTE PTR [eax+0x40414d],bh
  404153:	ret    
  404154:	mov    edx,DWORD PTR [eax]
  404156:	test   edx,edx
  404158:	je     0x404192
  40415a:	mov    ecx,DWORD PTR [edx-0x8]
  40415d:	dec    ecx
  40415e:	je     0x404192
  404160:	push   ebx
  404161:	mov    ebx,eax
  404163:	mov    eax,DWORD PTR [edx-0x4]
  404166:	call   0x403d70
  40416b:	mov    edx,eax
  40416d:	mov    eax,DWORD PTR [ebx]
  40416f:	mov    DWORD PTR [ebx],edx
  404171:	push   eax
  404172:	mov    ecx,DWORD PTR [eax-0x4]
  404175:	call   0x402b2c
  40417a:	pop    eax
  40417b:	mov    ecx,DWORD PTR [eax-0x8]
  40417e:	dec    ecx
  40417f:	jl     0x40418f
  404181:	lock dec DWORD PTR [eax-0x8]
  404185:	jne    0x40418f
  404187:	lea    eax,[eax-0x8]
  40418a:	call   0x4029c4
  40418f:	mov    edx,DWORD PTR [ebx]
  404191:	pop    ebx
  404192:	mov    eax,edx
  404194:	ret    
  404195:	lea    eax,[eax+0x0]
  404198:	jmp    0x404154
  40419d:	ret    
  40419e:	mov    eax,eax
  4041a0:	push   ebx
  4041a1:	test   eax,eax
  4041a3:	je     0x4041d2
  4041a5:	mov    ebx,DWORD PTR [eax-0x4]
  4041a8:	test   ebx,ebx
  4041aa:	je     0x4041d2
  4041ac:	dec    edx
  4041ad:	jl     0x4041ca
  4041af:	cmp    edx,ebx
  4041b1:	jge    0x4041d2
  4041b3:	sub    ebx,edx
  4041b5:	test   ecx,ecx
  4041b7:	jl     0x4041d2
  4041b9:	cmp    ecx,ebx
  4041bb:	jg     0x4041ce
  4041bd:	add    edx,eax
  4041bf:	mov    eax,DWORD PTR [esp+0x8]
  4041c3:	call   0x403d9c
  4041c8:	jmp    0x4041db
  4041ca:	xor    edx,edx
  4041cc:	jmp    0x4041b3
  4041ce:	mov    ecx,ebx
  4041d0:	jmp    0x4041bd
  4041d2:	mov    eax,DWORD PTR [esp+0x8]
  4041d6:	call   0x403cac
  4041db:	pop    ebx
  4041dc:	ret    0x4
  4041df:	ret    
  4041e0:	test   eax,eax
  4041e2:	je     0x40423a
  4041e4:	push   ebx
  4041e5:	push   esi
  4041e6:	push   edi
  4041e7:	push   ebp
  4041e8:	mov    ebx,eax
  4041ea:	mov    esi,edx
  4041ec:	mov    edi,ecx
  4041ee:	mov    edx,DWORD PTR [edx]
  4041f0:	push   edx
  4041f1:	test   edx,edx
  4041f3:	je     0x4041f8
  4041f5:	mov    edx,DWORD PTR [edx-0x4]
  4041f8:	dec    edi
  4041f9:	jge    0x4041fd
  4041fb:	xor    edi,edi
  4041fd:	cmp    edi,edx
  4041ff:	jle    0x404203
  404201:	mov    edi,edx
  404203:	mov    ebp,DWORD PTR [ebx-0x4]
  404206:	mov    eax,esi
  404208:	add    edx,ebp
  40420a:	call   0x404284
  40420f:	pop    eax
  404210:	cmp    eax,ebx
  404212:	jne    0x404216
  404214:	mov    ebx,DWORD PTR [esi]
  404216:	mov    eax,DWORD PTR [esi]
  404218:	lea    edx,[edi+ebp*1]
  40421b:	mov    ecx,DWORD PTR [eax-0x4]
  40421e:	sub    ecx,edx
  404220:	add    edx,eax
  404222:	add    eax,edi
  404224:	call   0x402b2c
  404229:	mov    eax,ebx
  40422b:	mov    edx,DWORD PTR [esi]
  40422d:	mov    ecx,ebp
  40422f:	add    edx,edi
  404231:	call   0x402b2c
  404236:	pop    ebp
  404237:	pop    edi
  404238:	pop    esi
  404239:	pop    ebx
  40423a:	ret    
  40423b:	nop
  40423c:	test   eax,eax
  40423e:	je     0x404280
  404240:	test   edx,edx
  404242:	je     0x404275
  404244:	push   ebx
  404245:	push   esi
  404246:	push   edi
  404247:	mov    esi,eax
  404249:	mov    edi,edx
  40424b:	mov    ecx,DWORD PTR [edi-0x4]
  40424e:	push   edi
  40424f:	mov    edx,DWORD PTR [esi-0x4]
  404252:	dec    edx
  404253:	js     0x404270
  404255:	mov    al,BYTE PTR [esi]
  404257:	inc    esi
  404258:	sub    ecx,edx
  40425a:	jle    0x404270
  40425c:	repnz scas al,BYTE PTR es:[edi]
  40425e:	jne    0x404270
  404260:	mov    ebx,ecx
  404262:	push   esi
  404263:	push   edi
  404264:	mov    ecx,edx
  404266:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404268:	pop    edi
  404269:	pop    esi
  40426a:	je     0x404278
  40426c:	mov    ecx,ebx
  40426e:	jmp    0x40425c
  404270:	pop    edx
  404271:	xor    eax,eax
  404273:	jmp    0x40427d
  404275:	xor    eax,eax
  404277:	ret    
  404278:	pop    edx
  404279:	mov    eax,edi
  40427b:	sub    eax,edx
  40427d:	pop    edi
  40427e:	pop    esi
  40427f:	pop    ebx
  404280:	ret    
  404281:	lea    eax,[eax+0x0]
  404284:	push   ebx
  404285:	push   esi
  404286:	push   edi
  404287:	mov    ebx,eax
  404289:	mov    esi,edx
  40428b:	xor    edi,edi
  40428d:	test   edx,edx
  40428f:	jle    0x4042d9
  404291:	mov    eax,DWORD PTR [ebx]
  404293:	test   eax,eax
  404295:	je     0x4042ba
  404297:	cmp    DWORD PTR [eax-0x8],0x1
  40429b:	jne    0x4042ba
  40429d:	sub    eax,0x8
  4042a0:	add    edx,0x9
  4042a3:	push   eax
  4042a4:	mov    eax,esp
  4042a6:	call   0x4029e4
  4042ab:	pop    eax
  4042ac:	add    eax,0x8
  4042af:	mov    DWORD PTR [ebx],eax
  4042b1:	mov    DWORD PTR [eax-0x4],esi
  4042b4:	mov    BYTE PTR [esi+eax*1],0x0
  4042b8:	jmp    0x4042e2
  4042ba:	mov    eax,edx
  4042bc:	call   0x403d70
  4042c1:	mov    edi,eax
  4042c3:	mov    eax,DWORD PTR [ebx]
  4042c5:	test   eax,eax
  4042c7:	je     0x4042d9
  4042c9:	mov    edx,edi
  4042cb:	mov    ecx,DWORD PTR [eax-0x4]
  4042ce:	cmp    ecx,esi
  4042d0:	jl     0x4042d4
  4042d2:	mov    ecx,esi
  4042d4:	call   0x402b2c
  4042d9:	mov    eax,ebx
  4042db:	call   0x403cac
  4042e0:	mov    DWORD PTR [ebx],edi
  4042e2:	pop    edi
  4042e3:	pop    esi
  4042e4:	pop    ebx
  4042e5:	ret    
  4042e6:	mov    eax,eax
  4042e8:	mov    al,0x1
  4042ea:	jmp    0x402a8c
  4042ef:	ret    
  4042f0:	test   eax,eax
  4042f2:	je     0x404304
  4042f4:	push   eax
  4042f5:	push   0x0
  4042f7:	call   0x401240
  4042fc:	test   eax,eax
  4042fe:	je     0x4042e8
  404304:	ret    
  404305:	lea    eax,[eax+0x0]
  404308:	xchg   DWORD PTR [eax],edx
  40430a:	test   edx,edx
  40430c:	je     0x404314
  40430e:	push   edx
  40430f:	call   0x401250
  404314:	ret    
  404315:	lea    eax,[eax+0x0]
  404318:	mov    edx,DWORD PTR [eax]
  40431a:	test   edx,edx
  40431c:	je     0x40432c
  40431e:	mov    DWORD PTR [eax],0x0
  404324:	push   eax
  404325:	push   edx
  404326:	call   0x401250
  40432b:	pop    eax
  40432c:	ret    
  40432d:	lea    eax,[eax+0x0]
  404330:	push   ebx
  404331:	push   esi
  404332:	mov    ebx,eax
  404334:	mov    esi,edx
  404336:	mov    eax,DWORD PTR [ebx]
  404338:	test   eax,eax
  40433a:	je     0x404348
  40433c:	mov    DWORD PTR [ebx],0x0
  404342:	push   eax
  404343:	call   0x401250
  404348:	add    ebx,0x4
  40434b:	dec    esi
  40434c:	jne    0x404336
  40434e:	pop    esi
  40434f:	pop    ebx
  404350:	ret    
  404351:	lea    eax,[eax+0x0]
  404354:	test   edx,edx
  404356:	je     0x404318
  40435c:	mov    ecx,DWORD PTR [edx-0x4]
  40435f:	shr    ecx,1
  404361:	je     0x404318
  404367:	push   ecx
  404368:	push   edx
  404369:	push   eax
  40436a:	call   0x401248
  40436f:	test   eax,eax
  404371:	je     0x4042e8
  404377:	ret    
  404378:	push   ebx
  404379:	push   esi
  40437a:	push   edi
  40437b:	push   ebp
  40437c:	add    esp,0xfffff004
  404382:	push   eax
  404383:	add    esp,0xfffffffc
  404386:	mov    esi,ecx
  404388:	mov    DWORD PTR [esp],edx
  40438b:	mov    edi,eax
  40438d:	test   esi,esi
  40438f:	jg     0x40439a
  404391:	mov    eax,edi
  404393:	call   0x404318
  404398:	jmp    0x4043f7
  40439a:	lea    ebp,[esi+0x1]
  40439d:	cmp    ebp,0x7ff
  4043a3:	jge    0x4043cd
  4043a5:	push   esi
  4043a6:	lea    eax,[esp+0x8]
  4043aa:	mov    ecx,DWORD PTR [esp+0x4]
  4043ae:	mov    edx,0x7ff
  4043b3:	call   0x403dec
  4043b8:	mov    ebx,eax
  4043ba:	test   ebx,ebx
  4043bc:	jle    0x4043cd
  4043be:	lea    edx,[esp+0x4]
  4043c2:	mov    eax,edi
  4043c4:	mov    ecx,ebx
  4043c6:	call   0x404404
  4043cb:	jmp    0x4043f7
  4043cd:	mov    ebx,ebp
  4043cf:	mov    eax,edi
  4043d1:	mov    edx,ebx
  4043d3:	call   0x404560
  4043d8:	push   esi
  4043d9:	mov    eax,DWORD PTR [edi]
  4043db:	mov    ecx,DWORD PTR [esp+0x4]
  4043df:	mov    edx,ebx
  4043e1:	call   0x403dec
  4043e6:	mov    ebx,eax
  4043e8:	test   ebx,ebx
  4043ea:	jge    0x4043ee
  4043ec:	xor    ebx,ebx
  4043ee:	mov    eax,edi
  4043f0:	mov    edx,ebx
  4043f2:	call   0x404560
  4043f7:	add    esp,0x1004
  4043fd:	pop    ebp
  4043fe:	pop    edi
  4043ff:	pop    esi
  404400:	pop    ebx
  404401:	ret    
  404402:	mov    eax,eax
  404404:	test   ecx,ecx
  404406:	je     0x404318
  40440c:	push   eax
  40440d:	push   ecx
  40440e:	push   edx
  40440f:	call   0x401240
  404414:	test   eax,eax
  404416:	je     0x4042e8
  40441c:	pop    edx
  40441d:	push   DWORD PTR [edx]
  40441f:	mov    DWORD PTR [edx],eax
  404421:	call   0x401250
  404426:	ret    
  404427:	nop
  404428:	xor    ecx,ecx
  40442a:	test   edx,edx
  40442c:	je     0x40445b
  40442e:	push   edx
  40442f:	cmp    cx,WORD PTR [edx]
  404432:	je     0x404454
  404434:	cmp    cx,WORD PTR [edx+0x2]
  404438:	je     0x404451
  40443a:	cmp    cx,WORD PTR [edx+0x4]
  40443e:	je     0x40444e
  404440:	cmp    cx,WORD PTR [edx+0x6]
  404444:	je     0x40444b
  404446:	add    edx,0x8
  404449:	jmp    0x40442f
  40444b:	add    edx,0x2
  40444e:	add    edx,0x2
  404451:	add    edx,0x2
  404454:	mov    ecx,edx
  404456:	pop    edx
  404457:	sub    ecx,edx
  404459:	shr    ecx,1
  40445b:	jmp    0x404404
  404460:	ret    
  404461:	lea    eax,[eax+0x0]
  404464:	xor    ecx,ecx
  404466:	test   edx,edx
  404468:	je     0x40446d
  40446a:	mov    ecx,DWORD PTR [edx-0x4]
  40446d:	jmp    0x404378
  404472:	ret    
  404473:	nop
  404474:	test   eax,eax
  404476:	je     0x40447c
  404478:	ret    
  404479:	nop
  40447a:	add    BYTE PTR [eax],al
  40447c:	mov    eax,0x40447a
  404481:	ret    
  404482:	mov    eax,eax
  404484:	test   eax,eax
  404486:	je     0x40448d
  404488:	mov    eax,DWORD PTR [eax-0x4]
  40448b:	shr    eax,1
  40448d:	ret    
  40448e:	mov    eax,eax
  404490:	push   ebx
  404491:	push   esi
  404492:	push   edi
  404493:	mov    esi,eax
  404495:	mov    edi,edx
  404497:	cmp    eax,edx
  404499:	je     0x40450d
  40449b:	test   esi,esi
  40449d:	je     0x4044f0
  40449f:	test   edi,edi
  4044a1:	je     0x4044f7
  4044a3:	mov    eax,DWORD PTR [esi-0x4]
  4044a6:	mov    edx,DWORD PTR [edi-0x4]
  4044a9:	sub    eax,edx
  4044ab:	ja     0x4044af
  4044ad:	add    edx,eax
  4044af:	push   edx
  4044b0:	shr    edx,0x2
  4044b3:	je     0x4044db
  4044b5:	mov    ecx,DWORD PTR [esi]
  4044b7:	mov    ebx,DWORD PTR [edi]
  4044b9:	cmp    ecx,ebx
  4044bb:	jne    0x4044fe
  4044bd:	dec    edx
  4044be:	je     0x4044d5
  4044c0:	mov    ecx,DWORD PTR [esi+0x4]
  4044c3:	mov    ebx,DWORD PTR [edi+0x4]
  4044c6:	cmp    ecx,ebx
  4044c8:	jne    0x4044fe
  4044ca:	add    esi,0x8
  4044cd:	add    edi,0x8
  4044d0:	dec    edx
  4044d1:	jne    0x4044b5
  4044d3:	jmp    0x4044db
  4044d5:	add    esi,0x4
  4044d8:	add    edi,0x4
  4044db:	pop    edx
  4044dc:	and    edx,0x2
  4044df:	je     0x4044ec
  4044e1:	mov    cx,WORD PTR [esi]
  4044e4:	mov    bx,WORD PTR [edi]
  4044e7:	cmp    cx,bx
  4044ea:	jne    0x40450d
  4044ec:	add    eax,eax
  4044ee:	jmp    0x40450d
  4044f0:	mov    edx,DWORD PTR [edi-0x4]
  4044f3:	sub    eax,edx
  4044f5:	jmp    0x40450d
  4044f7:	mov    eax,DWORD PTR [esi-0x4]
  4044fa:	sub    eax,edx
  4044fc:	jmp    0x40450d
  4044fe:	pop    edx
  4044ff:	cmp    cx,bx
  404502:	jne    0x40450d
  404504:	shr    ecx,0x10
  404507:	shr    ebx,0x10
  40450a:	cmp    cx,bx
  40450d:	pop    edi
  40450e:	pop    esi
  40450f:	pop    ebx
  404510:	ret    
  404511:	lea    eax,[eax+0x0]
  404514:	push   ebp
  404515:	mov    ebp,esp
  404517:	push   ebx
  404518:	push   esi
  404519:	push   edi
  40451a:	mov    edi,ecx
  40451c:	mov    ebx,edx
  40451e:	mov    esi,eax
  404520:	mov    eax,esi
  404522:	call   0x404484
  404527:	cmp    ebx,0x1
  40452a:	jge    0x404530
  40452c:	xor    ebx,ebx
  40452e:	jmp    0x404537
  404530:	dec    ebx
  404531:	cmp    eax,ebx
  404533:	jge    0x404537
  404535:	mov    ebx,eax
  404537:	test   edi,edi
  404539:	jge    0x40453f
  40453b:	xor    eax,eax
  40453d:	jmp    0x404547
  40453f:	sub    eax,ebx
  404541:	cmp    edi,eax
  404543:	jge    0x404547
  404545:	mov    eax,edi
  404547:	mov    edx,ebx
  404549:	add    edx,edx
  40454b:	add    edx,esi
  40454d:	mov    ecx,DWORD PTR [ebp+0x8]
  404550:	xchg   ecx,eax
  404551:	call   0x404404
  404556:	pop    edi
  404557:	pop    esi
  404558:	pop    ebx
  404559:	pop    ebp
  40455a:	ret    0x4
  40455d:	lea    eax,[eax+0x0]
  404560:	push   ebx
  404561:	push   esi
  404562:	push   ecx
  404563:	mov    ebx,edx
  404565:	mov    esi,eax
  404567:	xor    eax,eax
  404569:	mov    DWORD PTR [esp],eax
  40456c:	test   ebx,ebx
  40456e:	jle    0x404599
  404570:	mov    eax,ebx
  404572:	call   0x4042f0
  404577:	mov    DWORD PTR [esp],eax
  40457a:	mov    eax,DWORD PTR [esi]
  40457c:	call   0x404484
  404581:	test   eax,eax
  404583:	jle    0x404599
  404585:	cmp    ebx,eax
  404587:	jge    0x40458b
  404589:	mov    eax,ebx
  40458b:	mov    ecx,eax
  40458d:	add    ecx,ecx
  40458f:	mov    edx,DWORD PTR [esp]
  404592:	mov    eax,DWORD PTR [esi]
  404594:	call   0x402b2c
  404599:	mov    eax,esi
  40459b:	mov    edx,DWORD PTR [esp]
  40459e:	call   0x404308
  4045a3:	pop    edx
  4045a4:	pop    esi
  4045a5:	pop    ebx
  4045a6:	ret    
  4045a7:	nop
  4045a8:	xor    ecx,ecx
  4045aa:	push   ebx
  4045ab:	mov    cl,BYTE PTR [edx+0x1]
  4045ae:	push   esi
  4045af:	push   edi
  4045b0:	mov    ebx,eax
  4045b2:	lea    esi,[ecx+edx*1+0xa]
  4045b6:	mov    edi,DWORD PTR [ecx+edx*1+0x6]
  4045ba:	mov    edx,DWORD PTR [esi]
  4045bc:	mov    eax,DWORD PTR [esi+0x4]
  4045bf:	add    eax,ebx
  4045c1:	mov    edx,DWORD PTR [edx]
  4045c3:	mov    ecx,0x1
  4045c8:	call   0x4045f4
  4045cd:	add    esi,0x8
  4045d0:	dec    edi
  4045d1:	jg     0x4045ba
  4045d3:	mov    eax,ebx
  4045d5:	pop    edi
  4045d6:	pop    esi
  4045d7:	pop    ebx
  4045d8:	ret    
  4045d9:	lea    eax,[eax+0x0]
  4045dc:	cmp    DWORD PTR ds:0x42e00c,0x0
  4045e3:	je     0x4045ec
  4045e5:	call   DWORD PTR ds:0x42e00c
  4045eb:	ret    
  4045ec:	mov    al,0x10
  4045ee:	call   0x402a8c
  4045f3:	ret    
  4045f4:	cmp    ecx,0x0
  4045f7:	je     0x4046dd
  4045fd:	push   eax
  4045fe:	push   ebx
  4045ff:	push   esi
  404600:	push   edi
  404601:	mov    ebx,eax
  404603:	mov    esi,edx
  404605:	mov    edi,ecx
  404607:	xor    edx,edx
  404609:	mov    al,BYTE PTR [esi]
  40460b:	mov    dl,BYTE PTR [esi+0x1]
  40460e:	cmp    al,0xa
  404610:	je     0x404637
  404612:	cmp    al,0xb
  404614:	je     0x404654
  404616:	cmp    al,0xc
  404618:	je     0x40466b
  40461a:	cmp    al,0xd
  40461c:	je     0x40467a
  40461e:	cmp    al,0xe
  404620:	je     0x404698
  404622:	cmp    al,0xf
  404624:	je     0x4046ae
  40462a:	cmp    al,0x11
  40462c:	je     0x4046bd
  404632:	jmp    0x4046ce
  404637:	cmp    ecx,0x1
  40463a:	mov    eax,ebx
  40463c:	jg     0x404648
  40463e:	call   0x403cac
  404643:	jmp    0x4046d9
  404648:	mov    edx,ecx
  40464a:	call   0x403cd0
  40464f:	jmp    0x4046d9
  404654:	cmp    ecx,0x1
  404657:	mov    eax,ebx
  404659:	jg     0x404662
  40465b:	call   0x404318
  404660:	jmp    0x4046d9
  404662:	mov    edx,ecx
  404664:	call   0x404330
  404669:	jmp    0x4046d9
  40466b:	mov    eax,ebx
  40466d:	add    ebx,0x10
  404670:	call   0x4045dc
  404675:	dec    edi
  404676:	jg     0x40466b
  404678:	jmp    0x4046d9
  40467a:	push   ebp
  40467b:	mov    ebp,edx
  40467d:	mov    edx,DWORD PTR [esi+ebp*1+0xa]
  404681:	mov    eax,ebx
  404683:	add    ebx,DWORD PTR [esi+ebp*1+0x2]
  404687:	mov    ecx,DWORD PTR [esi+ebp*1+0x6]
  40468b:	mov    edx,DWORD PTR [edx]
  40468d:	call   0x4045f4
  404692:	dec    edi
  404693:	jg     0x40467d
  404695:	pop    ebp
  404696:	jmp    0x4046d9
  404698:	push   ebp
  404699:	mov    ebp,edx
  40469b:	mov    eax,ebx
  40469d:	add    ebx,DWORD PTR [esi+ebp*1+0x2]
  4046a1:	mov    edx,esi
  4046a3:	call   0x4045a8
  4046a8:	dec    edi
  4046a9:	jg     0x40469b
  4046ab:	pop    ebp
  4046ac:	jmp    0x4046d9
  4046ae:	mov    eax,ebx
  4046b0:	add    ebx,0x4
  4046b3:	call   0x405274
  4046b8:	dec    edi
  4046b9:	jg     0x4046ae
  4046bb:	jmp    0x4046d9
  4046bd:	mov    eax,ebx
  4046bf:	mov    edx,esi
  4046c1:	add    ebx,0x4
  4046c4:	call   0x404b28
  4046c9:	dec    edi
  4046ca:	jg     0x4046bd
  4046cc:	jmp    0x4046d9
  4046ce:	pop    edi
  4046cf:	pop    esi
  4046d0:	pop    ebx
  4046d1:	pop    eax
  4046d2:	mov    al,0x2
  4046d4:	jmp    0x402a8c
  4046d9:	pop    edi
  4046da:	pop    esi
  4046db:	pop    ebx
  4046dc:	pop    eax
  4046dd:	ret    
  4046de:	mov    eax,eax
  4046e0:	mov    ecx,0x1
  4046e5:	jmp    0x4045f4
  4046ea:	ret    
  4046eb:	nop
  4046ec:	cmp    DWORD PTR ds:0x42e014,0x0
  4046f3:	je     0x4046fc
  4046f5:	call   DWORD PTR ds:0x42e014
  4046fb:	ret    
  4046fc:	mov    al,0x10
  4046fe:	call   0x402a8c
  404703:	ret    
  404704:	push   ebx
  404705:	push   esi
  404706:	push   edi
  404707:	push   ebp
  404708:	mov    ebx,eax
  40470a:	mov    esi,edx
  40470c:	xor    eax,eax
  40470e:	mov    al,BYTE PTR [ecx+0x1]
  404711:	lea    edi,[eax+ecx*1+0xa]
  404715:	mov    ebp,DWORD PTR [edi-0x4]
  404718:	xor    eax,eax
  40471a:	mov    ecx,DWORD PTR [edi-0x8]
  40471d:	push   ecx
  40471e:	mov    ecx,DWORD PTR [edi+0x4]
  404721:	sub    ecx,eax
  404723:	jle    0x404730
  404725:	mov    edx,eax
  404727:	add    eax,esi
  404729:	add    edx,ebx
  40472b:	call   0x402b2c
  404730:	mov    eax,DWORD PTR [edi+0x4]
  404733:	mov    edx,DWORD PTR [edi]
  404735:	mov    edx,DWORD PTR [edx]
  404737:	mov    cl,BYTE PTR [edx]
  404739:	cmp    cl,0xa
  40473c:	je     0x40476f
  40473e:	cmp    cl,0xb
  404741:	je     0x404780
  404743:	cmp    cl,0xc
  404746:	je     0x404791
  404748:	cmp    cl,0xd
  40474b:	je     0x4047a2
  40474d:	cmp    cl,0xe
  404750:	je     0x4047c2
  404752:	cmp    cl,0xf
  404755:	je     0x4047db
  40475b:	cmp    cl,0x11
  40475e:	je     0x4047ec
  404764:	mov    al,0x2
  404766:	pop    ebp
  404767:	pop    edi
  404768:	pop    esi
  404769:	pop    ebx
  40476a:	jmp    0x402a8c
  40476f:	mov    edx,DWORD PTR [eax+esi*1]
  404772:	add    eax,ebx
  404774:	call   0x403d00
  404779:	mov    eax,0x4
  40477e:	jmp    0x4047fd
  404780:	mov    edx,DWORD PTR [eax+esi*1]
  404783:	add    eax,ebx
  404785:	call   0x404354
  40478a:	mov    eax,0x4
  40478f:	jmp    0x4047fd
  404791:	lea    edx,[eax+esi*1]
  404794:	add    eax,ebx
  404796:	call   0x4046ec
  40479b:	mov    eax,0x10
  4047a0:	jmp    0x4047fd
  4047a2:	xor    ecx,ecx
  4047a4:	mov    cl,BYTE PTR [edx+0x1]
  4047a7:	push   DWORD PTR [ecx+edx*1+0x2]
  4047ab:	push   DWORD PTR [ecx+edx*1+0x6]
  4047af:	mov    ecx,DWORD PTR [ecx+edx*1+0xa]
  4047b3:	mov    ecx,DWORD PTR [ecx]
  4047b5:	lea    edx,[eax+esi*1]
  4047b8:	add    eax,ebx
  4047ba:	call   0x404820
  4047bf:	pop    eax
  4047c0:	jmp    0x4047fd
  4047c2:	xor    ecx,ecx
  4047c4:	mov    cl,BYTE PTR [edx+0x1]
  4047c7:	mov    ecx,DWORD PTR [ecx+edx*1+0x2]
  4047cb:	push   ecx
  4047cc:	mov    ecx,edx
  4047ce:	lea    edx,[eax+esi*1]
  4047d1:	add    eax,ebx
  4047d3:	call   0x404704
  4047d8:	pop    eax
  4047d9:	jmp    0x4047fd
  4047db:	mov    edx,DWORD PTR [eax+esi*1]
  4047de:	add    eax,ebx
  4047e0:	call   0x40528c
  4047e5:	mov    eax,0x4
  4047ea:	jmp    0x4047fd
  4047ec:	mov    ecx,edx
  4047ee:	mov    edx,DWORD PTR [eax+esi*1]
  4047f1:	add    eax,ebx
  4047f3:	call   0x404b64
  4047f8:	mov    eax,0x4
  4047fd:	add    eax,DWORD PTR [edi+0x4]
  404800:	add    edi,0x8
  404803:	dec    ebp
  404804:	jne    0x40471e
  40480a:	pop    ecx
  40480b:	sub    ecx,eax
  40480d:	jle    0x404819
  40480f:	lea    edx,[eax+ebx*1]
  404812:	add    eax,esi
  404814:	call   0x402b2c
  404819:	pop    ebp
  40481a:	pop    edi
  40481b:	pop    esi
  40481c:	pop    ebx
  40481d:	ret    
  40481e:	mov    eax,eax
  404820:	push   ebx
  404821:	push   esi
  404822:	push   edi
  404823:	push   ebp
  404824:	mov    ebx,eax
  404826:	mov    esi,edx
  404828:	mov    edi,ecx
  40482a:	mov    ebp,DWORD PTR [esp+0x14]
  40482e:	mov    cl,BYTE PTR [edi]
  404830:	cmp    cl,0xa
  404833:	je     0x404866
  404835:	cmp    cl,0xb
  404838:	je     0x40487d
  40483a:	cmp    cl,0xc
  40483d:	je     0x404891
  40483f:	cmp    cl,0xd
  404842:	je     0x4048a5
  404844:	cmp    cl,0xe
  404847:	je     0x4048c6
  404849:	cmp    cl,0xf
  40484c:	je     0x4048e3
  404852:	cmp    cl,0x11
  404855:	je     0x4048f7
  40485b:	mov    al,0x2
  40485d:	pop    ebp
  40485e:	pop    edi
  40485f:	pop    esi
  404860:	pop    ebx
  404861:	jmp    0x402a8c
  404866:	mov    eax,ebx
  404868:	mov    edx,DWORD PTR [esi]
  40486a:	call   0x403d00
  40486f:	add    ebx,0x4
  404872:	add    esi,0x4
  404875:	dec    ebp
  404876:	jne    0x404866
  404878:	jmp    0x40490b
  40487d:	mov    eax,ebx
  40487f:	mov    edx,DWORD PTR [esi]
  404881:	call   0x404354
  404886:	add    ebx,0x4
  404889:	add    esi,0x4
  40488c:	dec    ebp
  40488d:	jne    0x40487d
  40488f:	jmp    0x40490b
  404891:	mov    eax,ebx
  404893:	mov    edx,esi
  404895:	call   0x4046ec
  40489a:	add    ebx,0x10
  40489d:	add    esi,0x10
  4048a0:	dec    ebp
  4048a1:	jne    0x404891
  4048a3:	jmp    0x40490b
  4048a5:	xor    ecx,ecx
  4048a7:	mov    cl,BYTE PTR [edi+0x1]
  4048aa:	lea    edi,[ecx+edi*1+0x2]
  4048ae:	mov    eax,ebx
  4048b0:	mov    edx,esi
  4048b2:	mov    ecx,DWORD PTR [edi+0x8]
  4048b5:	push   DWORD PTR [edi+0x4]
  4048b8:	call   0x404820
  4048bd:	add    ebx,DWORD PTR [edi]
  4048bf:	add    esi,DWORD PTR [edi]
  4048c1:	dec    ebp
  4048c2:	jne    0x4048ae
  4048c4:	jmp    0x40490b
  4048c6:	mov    eax,ebx
  4048c8:	mov    edx,esi
  4048ca:	mov    ecx,edi
  4048cc:	call   0x404704
  4048d1:	xor    eax,eax
  4048d3:	mov    al,BYTE PTR [edi+0x1]
  4048d6:	add    ebx,DWORD PTR [eax+edi*1+0x2]
  4048da:	add    esi,DWORD PTR [eax+edi*1+0x2]
  4048de:	dec    ebp
  4048df:	jne    0x4048c6
  4048e1:	jmp    0x40490b
  4048e3:	mov    eax,ebx
  4048e5:	mov    edx,DWORD PTR [esi]
  4048e7:	call   0x40528c
  4048ec:	add    ebx,0x4
  4048ef:	add    esi,0x4
  4048f2:	dec    ebp
  4048f3:	jne    0x4048e3
  4048f5:	jmp    0x40490b
  4048f7:	mov    eax,ebx
  4048f9:	mov    edx,DWORD PTR [esi]
  4048fb:	mov    ecx,edi
  4048fd:	call   0x404b64
  404902:	add    ebx,0x4
  404905:	add    esi,0x4
  404908:	dec    ebp
  404909:	jne    0x4048f7
  40490b:	pop    ebp
  40490c:	pop    edi
  40490d:	pop    esi
  40490e:	pop    ebx
  40490f:	ret    0x4
  404912:	ret    
  404913:	nop
  404914:	mov    al,0x11
  404916:	jmp    0x402a8c
  40491b:	ret    
  40491c:	push   edx
  40491d:	push   eax
  40491e:	mov    eax,DWORD PTR [esp+0x10]
  404922:	mul    DWORD PTR [esp]
  404925:	mov    ecx,eax
  404927:	mov    eax,DWORD PTR [esp+0x4]
  40492b:	mul    DWORD PTR [esp+0xc]
  40492f:	add    ecx,eax
  404931:	mov    eax,DWORD PTR [esp]
  404934:	mul    DWORD PTR [esp+0xc]
  404938:	add    edx,ecx
  40493a:	pop    ecx
  40493b:	pop    ecx
  40493c:	ret    0x8
  40493f:	ret    
  404940:	test   eax,eax
  404942:	je     0x404947
  404944:	mov    eax,DWORD PTR [eax-0x4]
  404947:	ret    
  404948:	call   0x404940
  40494d:	dec    eax
  40494e:	ret    
  40494f:	nop
  404950:	push   ebp
  404951:	mov    ebp,esp
  404953:	push   DWORD PTR [ebp+0x8]
  404956:	call   0x404820
  40495b:	pop    ebp
  40495c:	ret    0x4
  40495f:	nop
  404960:	jmp    0x4045f4
  404965:	ret    
  404966:	mov    eax,eax
  404968:	call   0x404b28
  40496d:	ret    
  40496e:	mov    eax,eax
  404970:	push   ebp
  404971:	mov    ebp,esp
  404973:	add    esp,0xffffffe4
  404976:	push   ebx
  404977:	push   esi
  404978:	push   edi
  404979:	mov    DWORD PTR [ebp-0xc],ecx
  40497c:	mov    DWORD PTR [ebp-0x8],edx
  40497f:	mov    DWORD PTR [ebp-0x4],eax
  404982:	mov    eax,DWORD PTR [ebp-0x4]
  404985:	mov    eax,DWORD PTR [eax]
  404987:	mov    DWORD PTR [ebp-0x18],eax
  40498a:	mov    eax,DWORD PTR [ebp+0x8]
  40498d:	mov    ebx,DWORD PTR [eax]
  40498f:	test   ebx,ebx
  404991:	jg     0x4049ae
  404993:	test   ebx,ebx
  404995:	jge    0x40499e
  404997:	mov    al,0x4
  404999:	call   0x402a8c
  40499e:	mov    eax,DWORD PTR [ebp-0x4]
  4049a1:	mov    edx,DWORD PTR [ebp-0x8]
  4049a4:	call   0x404968
  4049a9:	jmp    0x404b11
  4049ae:	xor    edi,edi
  4049b0:	cmp    DWORD PTR [ebp-0x18],0x0
  4049b4:	je     0x4049c3
  4049b6:	sub    DWORD PTR [ebp-0x18],0x4
  4049ba:	mov    eax,DWORD PTR [ebp-0x18]
  4049bd:	mov    edi,DWORD PTR [eax]
  4049bf:	sub    DWORD PTR [ebp-0x18],0x4
  4049c3:	mov    eax,DWORD PTR [ebp-0x8]
  4049c6:	movzx  eax,BYTE PTR [eax+0x1]
  4049ca:	add    DWORD PTR [ebp-0x8],eax
  4049cd:	mov    eax,DWORD PTR [ebp-0x8]
  4049d0:	mov    esi,DWORD PTR [eax+0x2]
  4049d3:	mov    edx,DWORD PTR [eax+0x6]
  4049d6:	test   edx,edx
  4049d8:	je     0x4049e1
  4049da:	mov    eax,DWORD PTR [edx]
  4049dc:	mov    DWORD PTR [ebp-0x8],eax
  4049df:	jmp    0x4049e6
  4049e1:	xor    eax,eax
  4049e3:	mov    DWORD PTR [ebp-0x8],eax
  4049e6:	mov    eax,ebx
  4049e8:	imul   esi
  4049ea:	mov    DWORD PTR [ebp-0x14],eax
  4049ed:	mov    eax,DWORD PTR [ebp-0x14]
  4049f0:	cdq    
  4049f1:	idiv   ebx
  4049f3:	cmp    esi,eax
  4049f5:	je     0x4049fe
  4049f7:	mov    al,0x4
  4049f9:	call   0x402a8c
  4049fe:	add    DWORD PTR [ebp-0x14],0x8
  404a02:	cmp    DWORD PTR [ebp-0x18],0x0
  404a06:	je     0x404a10
  404a08:	mov    eax,DWORD PTR [ebp-0x18]
  404a0b:	cmp    DWORD PTR [eax],0x1
  404a0e:	jne    0x404a4c
  404a10:	mov    eax,DWORD PTR [ebp-0x18]
  404a13:	mov    DWORD PTR [ebp-0x1c],eax
  404a16:	cmp    edi,ebx
  404a18:	jle    0x404a39
  404a1a:	cmp    DWORD PTR [ebp-0x8],0x0
  404a1e:	je     0x404a39
  404a20:	mov    eax,DWORD PTR [ebp-0x18]
  404a23:	add    eax,0x8
  404a26:	mov    edx,ebx
  404a28:	imul   edx,esi
  404a2b:	add    eax,edx
  404a2d:	mov    ecx,edi
  404a2f:	sub    ecx,ebx
  404a31:	mov    edx,DWORD PTR [ebp-0x8]
  404a34:	call   0x404960
  404a39:	lea    eax,[ebp-0x1c]
  404a3c:	mov    edx,DWORD PTR [ebp-0x14]
  404a3f:	call   0x4029e4
  404a44:	mov    eax,DWORD PTR [ebp-0x1c]
  404a47:	mov    DWORD PTR [ebp-0x18],eax
  404a4a:	jmp    0x404aaf
  404a4c:	mov    eax,DWORD PTR [ebp-0x18]
  404a4f:	dec    DWORD PTR [eax]
  404a51:	mov    eax,DWORD PTR [ebp-0x14]
  404a54:	call   0x402994
  404a59:	mov    DWORD PTR [ebp-0x18],eax
  404a5c:	mov    DWORD PTR [ebp-0x10],edi
  404a5f:	cmp    ebx,DWORD PTR [ebp-0x10]
  404a62:	jge    0x404a67
  404a64:	mov    DWORD PTR [ebp-0x10],ebx
  404a67:	cmp    DWORD PTR [ebp-0x8],0x0
  404a6b:	je     0x404a99
  404a6d:	mov    edx,DWORD PTR [ebp-0x10]
  404a70:	imul   edx,esi
  404a73:	mov    eax,DWORD PTR [ebp-0x18]
  404a76:	add    eax,0x8
  404a79:	xor    ecx,ecx
  404a7b:	call   0x402c34
  404a80:	mov    eax,DWORD PTR [ebp-0x10]
  404a83:	push   eax
  404a84:	mov    edx,DWORD PTR [ebp-0x4]
  404a87:	mov    edx,DWORD PTR [edx]
  404a89:	mov    eax,DWORD PTR [ebp-0x18]
  404a8c:	add    eax,0x8
  404a8f:	mov    ecx,DWORD PTR [ebp-0x8]
  404a92:	call   0x404950
  404a97:	jmp    0x404aaf
  404a99:	mov    ecx,DWORD PTR [ebp-0x10]
  404a9c:	imul   ecx,esi
  404a9f:	mov    edx,DWORD PTR [ebp-0x18]
  404aa2:	add    edx,0x8
  404aa5:	mov    eax,DWORD PTR [ebp-0x4]
  404aa8:	mov    eax,DWORD PTR [eax]
  404aaa:	call   0x402b2c
  404aaf:	mov    eax,DWORD PTR [ebp-0x18]
  404ab2:	mov    DWORD PTR [eax],0x1
  404ab8:	add    DWORD PTR [ebp-0x18],0x4
  404abc:	mov    eax,DWORD PTR [ebp-0x18]
  404abf:	mov    DWORD PTR [eax],ebx
  404ac1:	add    DWORD PTR [ebp-0x18],0x4
  404ac5:	mov    edx,ebx
  404ac7:	sub    edx,edi
  404ac9:	imul   edx,esi
  404acc:	mov    eax,esi
  404ace:	imul   eax,edi
  404ad1:	add    eax,DWORD PTR [ebp-0x18]
  404ad4:	xor    ecx,ecx
  404ad6:	call   0x402c34
  404adb:	cmp    DWORD PTR [ebp-0xc],0x1
  404adf:	jle    0x404b09
  404ae1:	add    DWORD PTR [ebp+0x8],0x4
  404ae5:	dec    DWORD PTR [ebp-0xc]
  404ae8:	dec    ebx
  404ae9:	test   ebx,ebx
  404aeb:	jl     0x404b09
  404aed:	inc    ebx
  404aee:	xor    esi,esi
  404af0:	mov    eax,DWORD PTR [ebp+0x8]
  404af3:	push   eax
  404af4:	mov    eax,DWORD PTR [ebp-0x18]
  404af7:	lea    eax,[eax+esi*4]
  404afa:	mov    ecx,DWORD PTR [ebp-0xc]
  404afd:	mov    edx,DWORD PTR [ebp-0x8]
  404b00:	call   0x404970
  404b05:	inc    esi
  404b06:	dec    ebx
  404b07:	jne    0x404af0
  404b09:	mov    eax,DWORD PTR [ebp-0x4]
  404b0c:	mov    edx,DWORD PTR [ebp-0x18]
  404b0f:	mov    DWORD PTR [eax],edx
  404b11:	pop    edi
  404b12:	pop    esi
  404b13:	pop    ebx
  404b14:	mov    esp,ebp
  404b16:	pop    ebp
  404b17:	ret    0x4
  404b1a:	mov    eax,eax
  404b1c:	push   esp
  404b1d:	add    DWORD PTR [esp],0x4
  404b21:	call   0x404970
  404b26:	ret    
  404b27:	nop
  404b28:	mov    ecx,DWORD PTR [eax]
  404b2a:	test   ecx,ecx
  404b2c:	je     0x404b61
  404b2e:	mov    DWORD PTR [eax],0x0
  404b34:	lock dec DWORD PTR [ecx-0x8]
  404b38:	jne    0x404b61
  404b3a:	push   eax
  404b3b:	mov    eax,ecx
  404b3d:	xor    ecx,ecx
  404b3f:	mov    cl,BYTE PTR [edx+0x1]
  404b42:	mov    edx,DWORD PTR [ecx+edx*1+0x6]
  404b46:	test   edx,edx
  404b48:	je     0x404b58
  404b4a:	mov    ecx,DWORD PTR [eax-0x4]
  404b4d:	test   ecx,ecx
  404b4f:	je     0x404b58
  404b51:	mov    edx,DWORD PTR [edx]
  404b53:	call   0x4045f4
  404b58:	sub    eax,0x8
  404b5b:	call   0x4029c4
  404b60:	pop    eax
  404b61:	ret    
  404b62:	mov    eax,eax
  404b64:	push   ebx
  404b65:	mov    ebx,DWORD PTR [eax]
  404b67:	test   edx,edx
  404b69:	je     0x404b6f
  404b6b:	lock inc DWORD PTR [edx-0x8]
  404b6f:	test   ebx,ebx
  404b71:	je     0x404b87
  404b73:	lock dec DWORD PTR [ebx-0x8]
  404b77:	jne    0x404b87
  404b79:	push   eax
  404b7a:	push   edx
  404b7b:	mov    edx,ecx
  404b7d:	inc    DWORD PTR [ebx-0x8]
  404b80:	call   0x404b28
  404b85:	pop    edx
  404b86:	pop    eax
  404b87:	mov    DWORD PTR [eax],edx
  404b89:	pop    ebx
  404b8a:	ret    
  404b8b:	nop
  404b8c:	add    esp,0xffffffe4
  404b8f:	push   0x1c
  404b91:	lea    edx,[esp+0x4]
  404b95:	push   edx
  404b96:	push   eax
  404b97:	call   0x401238
  404b9c:	cmp    DWORD PTR [esp+0x10],0x1000
  404ba4:	jne    0x404bac
  404ba6:	mov    eax,DWORD PTR [esp+0x4]
  404baa:	jmp    0x404bae
  404bac:	xor    eax,eax
  404bae:	add    esp,0x1c
  404bb1:	ret    
  404bb2:	mov    eax,eax
  404bb4:	push   ebx
  404bb5:	push   esi
  404bb6:	add    esp,0xfffffef8
  404bbc:	mov    ebx,eax
  404bbe:	cmp    DWORD PTR [ebx+0x10],0x0
  404bc2:	jne    0x404bef
  404bc4:	push   0x105
  404bc9:	lea    eax,[esp+0x4]
  404bcd:	push   eax
  404bce:	mov    eax,DWORD PTR [ebx+0x4]
  404bd1:	push   eax
  404bd2:	call   0x4011c8
  404bd7:	mov    eax,esp
  404bd9:	mov    dl,0x1
  404bdb:	call   0x404e48
  404be0:	mov    esi,eax
  404be2:	mov    DWORD PTR [ebx+0x10],esi
  404be5:	test   esi,esi
  404be7:	jne    0x404bef
  404be9:	mov    eax,DWORD PTR [ebx+0x4]
  404bec:	mov    DWORD PTR [ebx+0x10],eax
  404bef:	mov    eax,DWORD PTR [ebx+0x10]
  404bf2:	add    esp,0x108
  404bf8:	pop    esi
  404bf9:	pop    ebx
  404bfa:	ret    
  404bfb:	nop
  404bfc:	push   ebx
  404bfd:	push   esi
  404bfe:	push   edi
  404bff:	push   ecx
  404c00:	mov    ebx,eax
  404c02:	mov    esi,esp
  404c04:	mov    eax,ds:0x42e030
  404c09:	mov    DWORD PTR [esi],eax
  404c0b:	cmp    DWORD PTR [esi],0x0
  404c0e:	je     0x404c3b
  404c10:	mov    eax,DWORD PTR [esi]
  404c12:	cmp    ebx,DWORD PTR [eax+0x4]
  404c15:	je     0x404c25
  404c17:	mov    eax,DWORD PTR [esi]
  404c19:	cmp    ebx,DWORD PTR [eax+0x8]
  404c1c:	je     0x404c25
  404c1e:	mov    eax,DWORD PTR [esi]
  404c20:	cmp    ebx,DWORD PTR [eax+0xc]
  404c23:	jne    0x404c30
  404c25:	mov    eax,DWORD PTR [esi]
  404c27:	call   0x404bb4
  404c2c:	mov    edi,eax
  404c2e:	jmp    0x404c3d
  404c30:	mov    eax,DWORD PTR [esi]
  404c32:	mov    eax,DWORD PTR [eax]
  404c34:	mov    DWORD PTR [esi],eax
  404c36:	cmp    DWORD PTR [esi],0x0
  404c39:	jne    0x404c10
  404c3b:	mov    edi,ebx
  404c3d:	mov    eax,edi
  404c3f:	pop    edx
  404c40:	pop    edi
  404c41:	pop    esi
  404c42:	pop    ebx
  404c43:	ret    
  404c44:	push   ebp
  404c45:	mov    ebp,esp
  404c47:	push   ecx
  404c48:	push   ebx
  404c49:	push   esi
  404c4a:	lea    esi,[ebp-0x4]
  404c4d:	mov    DWORD PTR [esi],eax
  404c4f:	jmp    0x404c5b
  404c51:	mov    eax,DWORD PTR [esi]
  404c53:	push   eax
  404c54:	call   0x401188
  404c59:	mov    DWORD PTR [esi],eax
  404c5b:	mov    eax,DWORD PTR [esi]
  404c5d:	mov    bl,BYTE PTR [eax]
  404c5f:	test   bl,bl
  404c61:	je     0x404c68
  404c63:	cmp    bl,0x5c
  404c66:	jne    0x404c51
  404c68:	mov    eax,DWORD PTR [esi]
  404c6a:	pop    esi
  404c6b:	pop    ebx
  404c6c:	pop    ecx
  404c6d:	pop    ebp
  404c6e:	ret    
  404c6f:	nop
  404c70:	push   ebp
  404c71:	mov    ebp,esp
  404c73:	add    esp,0xfffffda4
  404c79:	push   ebx
  404c7a:	push   esi
  404c7b:	push   edi
  404c7c:	mov    DWORD PTR [ebp-0x8],edx
  404c7f:	mov    DWORD PTR [ebp-0x4],eax
  404c82:	mov    eax,DWORD PTR [ebp-0x4]
  404c85:	mov    DWORD PTR [ebp-0xc],eax
  404c88:	push   0x404e24
  404c8d:	call   0x4011d0
  404c92:	mov    esi,eax
  404c94:	test   esi,esi
  404c96:	je     0x404cdc
  404c98:	push   0x404e34
  404c9d:	push   esi
  404c9e:	call   0x4011d8
  404ca3:	mov    DWORD PTR [ebp-0x18],eax
  404ca6:	cmp    DWORD PTR [ebp-0x18],0x0
  404caa:	je     0x404cdc
  404cac:	push   0x105
  404cb1:	lea    eax,[ebp-0x25b]
  404cb7:	push   eax
  404cb8:	mov    eax,DWORD PTR [ebp-0x4]
  404cbb:	push   eax
  404cbc:	call   DWORD PTR [ebp-0x18]
  404cbf:	test   eax,eax
  404cc1:	je     0x404cdc
  404cc3:	mov    eax,DWORD PTR [ebp-0x8]
  404cc6:	push   eax
  404cc7:	lea    eax,[ebp-0x25b]
  404ccd:	push   eax
  404cce:	mov    eax,DWORD PTR [ebp-0x4]
  404cd1:	push   eax
  404cd2:	call   0x401200
  404cd7:	jmp    0x404e18
  404cdc:	mov    eax,DWORD PTR [ebp-0x4]
  404cdf:	cmp    BYTE PTR [eax],0x5c
  404ce2:	jne    0x404d25
  404ce4:	mov    eax,DWORD PTR [ebp-0x4]
  404ce7:	cmp    BYTE PTR [eax+0x1],0x5c
  404ceb:	jne    0x404e18
  404cf1:	mov    eax,DWORD PTR [ebp-0x4]
  404cf4:	add    eax,0x2
  404cf7:	call   0x404c44
  404cfc:	mov    DWORD PTR [ebp-0x10],eax
  404cff:	mov    eax,DWORD PTR [ebp-0x10]
  404d02:	cmp    BYTE PTR [eax],0x0
  404d05:	je     0x404e18
  404d0b:	mov    eax,DWORD PTR [ebp-0x10]
  404d0e:	inc    eax
  404d0f:	call   0x404c44
  404d14:	mov    DWORD PTR [ebp-0x10],eax
  404d17:	mov    eax,DWORD PTR [ebp-0x10]
  404d1a:	cmp    BYTE PTR [eax],0x0
  404d1d:	je     0x404e18
  404d23:	jmp    0x404d2e
  404d25:	mov    eax,DWORD PTR [ebp-0x4]
  404d28:	add    eax,0x2
  404d2b:	mov    DWORD PTR [ebp-0x10],eax
  404d2e:	mov    ebx,DWORD PTR [ebp-0x10]
  404d31:	sub    ebx,DWORD PTR [ebp-0x4]
  404d34:	lea    eax,[ebx+0x1]
  404d37:	push   eax
  404d38:	mov    eax,DWORD PTR [ebp-0x4]
  404d3b:	push   eax
  404d3c:	lea    eax,[ebp-0x25b]
  404d42:	push   eax
  404d43:	call   0x401200
  404d48:	jmp    0x404df8
  404d4d:	mov    eax,DWORD PTR [ebp-0x10]
  404d50:	inc    eax
  404d51:	call   0x404c44
  404d56:	mov    DWORD PTR [ebp-0x14],eax
  404d59:	mov    edi,DWORD PTR [ebp-0x14]
  404d5c:	sub    edi,DWORD PTR [ebp-0x10]
  404d5f:	mov    eax,edi
  404d61:	add    eax,ebx
  404d63:	inc    eax
  404d64:	cmp    eax,0x105
  404d69:	jg     0x404e18
  404d6f:	inc    edi
  404d70:	push   edi
  404d71:	mov    eax,DWORD PTR [ebp-0x10]
  404d74:	push   eax
  404d75:	lea    eax,[ebp-0x25b]
  404d7b:	add    eax,ebx
  404d7d:	push   eax
  404d7e:	call   0x401200
  404d83:	lea    eax,[ebp-0x156]
  404d89:	push   eax
  404d8a:	lea    eax,[ebp-0x25b]
  404d90:	push   eax
  404d91:	call   0x4011a8
  404d96:	mov    esi,eax
  404d98:	cmp    esi,0xffffffff
  404d9b:	je     0x404e18
  404d9d:	push   esi
  404d9e:	call   0x4011a0
  404da3:	lea    eax,[ebp-0x12a]
  404da9:	push   eax
  404daa:	call   0x401208
  404daf:	lea    edx,[ebx+0x1]
  404db2:	add    eax,edx
  404db4:	inc    eax
  404db5:	cmp    eax,0x105
  404dba:	jg     0x404e18
  404dbc:	mov    BYTE PTR [ebp+ebx*1-0x25b],0x5c
  404dc4:	mov    eax,0x105
  404dc9:	sub    eax,ebx
  404dcb:	dec    eax
  404dcc:	push   eax
  404dcd:	lea    eax,[ebp-0x12a]
  404dd3:	push   eax
  404dd4:	lea    eax,[ebp-0x25b]
  404dda:	add    eax,ebx
  404ddc:	inc    eax
  404ddd:	push   eax
  404dde:	call   0x401200
  404de3:	lea    eax,[ebp-0x12a]
  404de9:	push   eax
  404dea:	call   0x401208
  404def:	inc    eax
  404df0:	add    ebx,eax
  404df2:	mov    eax,DWORD PTR [ebp-0x14]
  404df5:	mov    DWORD PTR [ebp-0x10],eax
  404df8:	mov    eax,DWORD PTR [ebp-0x10]
  404dfb:	cmp    BYTE PTR [eax],0x0
  404dfe:	jne    0x404d4d
  404e04:	mov    eax,DWORD PTR [ebp-0x8]
  404e07:	push   eax
  404e08:	lea    eax,[ebp-0x25b]
  404e0e:	push   eax
  404e0f:	mov    eax,DWORD PTR [ebp-0x4]
  404e12:	push   eax
  404e13:	call   0x401200
  404e18:	mov    eax,DWORD PTR [ebp-0xc]
  404e1b:	pop    edi
  404e1c:	pop    esi
  404e1d:	pop    ebx
  404e1e:	mov    esp,ebp
  404e20:	pop    ebp
  404e21:	ret    
  404e22:	add    BYTE PTR [eax],al
  404e24:	imul   esp,DWORD PTR [ebp+0x72],0x6e
  404e28:	gs ins BYTE PTR es:[edi],dx
  404e2a:	xor    esi,DWORD PTR [edx]
  404e2c:	cs fs ins BYTE PTR es:[edi],dx
  404e2f:	ins    BYTE PTR es:[edi],dx
  404e30:	add    BYTE PTR [eax],al
  404e32:	add    BYTE PTR [eax],al
  404e34:	inc    edi
  404e35:	gs je  0x404e84
  404e38:	outs   dx,DWORD PTR ds:[esi]
  404e39:	outs   dx,BYTE PTR ds:[esi]
  404e3a:	addr16 push eax
  404e3c:	popa   
  404e3d:	je     0x404ea7
  404e3f:	dec    esi
  404e40:	popa   
  404e41:	ins    DWORD PTR es:[edi],dx
  404e42:	gs inc ecx
  404e44:	add    BYTE PTR [eax],al
  404e46:	add    BYTE PTR [eax],al
  404e48:	push   ebp
  404e49:	mov    ebp,esp
  404e4b:	add    esp,0xfffffedc
  404e51:	push   ebx
  404e52:	mov    DWORD PTR [ebp-0x4],eax
  404e55:	push   0x105
  404e5a:	lea    eax,[ebp-0x121]
  404e60:	push   eax
  404e61:	push   0x0
  404e63:	call   0x4011c8
  404e68:	mov    BYTE PTR [ebp-0x12],0x0
  404e6c:	lea    eax,[ebp-0x8]
  404e6f:	push   eax
  404e70:	push   0xf0019
  404e75:	push   0x0
  404e77:	push   0x40508c
  404e7c:	push   0x80000001
  404e81:	call   0x401220
  404e86:	test   eax,eax
  404e88:	je     0x404eca
  404e8a:	lea    eax,[ebp-0x8]
  404e8d:	push   eax
  404e8e:	push   0xf0019
  404e93:	push   0x0
  404e95:	push   0x40508c
  404e9a:	push   0x80000002
  404e9f:	call   0x401220
  404ea4:	test   eax,eax
  404ea6:	je     0x404eca
  404ea8:	lea    eax,[ebp-0x8]
  404eab:	push   eax
  404eac:	push   0xf0019
  404eb1:	push   0x0
  404eb3:	push   0x4050a8
  404eb8:	push   0x80000001
  404ebd:	call   0x401220
  404ec2:	test   eax,eax
  404ec4:	jne    0x404f53
  404eca:	xor    eax,eax
  404ecc:	push   ebp
  404ecd:	push   0x404f4c
  404ed2:	push   DWORD PTR fs:[eax]
  404ed5:	mov    DWORD PTR fs:[eax],esp
  404ed8:	mov    DWORD PTR [ebp-0x18],0x5
  404edf:	lea    eax,[ebp-0x121]
  404ee5:	mov    edx,0x105
  404eea:	call   0x404c70
  404eef:	lea    eax,[ebp-0x18]
  404ef2:	push   eax
  404ef3:	lea    eax,[ebp-0x12]
  404ef6:	push   eax
  404ef7:	push   0x0
  404ef9:	push   0x0
  404efb:	lea    eax,[ebp-0x121]
  404f01:	push   eax
  404f02:	mov    eax,DWORD PTR [ebp-0x8]
  404f05:	push   eax
  404f06:	call   0x401228
  404f0b:	test   eax,eax
  404f0d:	je     0x404f31
  404f0f:	lea    eax,[ebp-0x18]
  404f12:	push   eax
  404f13:	lea    eax,[ebp-0x12]
  404f16:	push   eax
  404f17:	push   0x0
  404f19:	push   0x0
  404f1b:	push   0x4050c8
  404f20:	mov    eax,DWORD PTR [ebp-0x8]
  404f23:	push   eax
  404f24:	call   0x401228
  404f29:	test   eax,eax
  404f2b:	je     0x404f31
  404f2d:	mov    BYTE PTR [ebp-0x12],0x0
  404f31:	mov    BYTE PTR [ebp-0xe],0x0
  404f35:	xor    eax,eax
  404f37:	pop    edx
  404f38:	pop    ecx
  404f39:	pop    ecx
  404f3a:	mov    DWORD PTR fs:[eax],edx
  404f3d:	push   0x404f53
  404f42:	mov    eax,DWORD PTR [ebp-0x8]
  404f45:	push   eax
  404f46:	call   0x401218
  404f4b:	ret    
  404f4c:	jmp    0x4036ac
  404f51:	jmp    0x404f42
  404f53:	push   0x105
  404f58:	mov    eax,DWORD PTR [ebp-0x4]
  404f5b:	push   eax
  404f5c:	lea    eax,[ebp-0x121]
  404f62:	push   eax
  404f63:	call   0x401200
  404f68:	push   0x5
  404f6a:	lea    eax,[ebp-0xd]
  404f6d:	push   eax
  404f6e:	push   0x3
  404f70:	call   0x4011e8
  404f75:	push   eax
  404f76:	call   0x4011c0
  404f7b:	xor    ebx,ebx
  404f7d:	cmp    BYTE PTR [ebp-0x121],0x0
  404f84:	je     0x405083
  404f8a:	cmp    BYTE PTR [ebp-0xd],0x0
  404f8e:	jne    0x404f9a
  404f90:	cmp    BYTE PTR [ebp-0x12],0x0
  404f94:	je     0x405083
  404f9a:	lea    eax,[ebp-0x121]
  404fa0:	push   eax
  404fa1:	call   0x401208
  404fa6:	lea    edx,[ebp-0x121]
  404fac:	add    eax,edx
  404fae:	mov    DWORD PTR [ebp-0x1c],eax
  404fb1:	jmp    0x404fb6
  404fb3:	dec    DWORD PTR [ebp-0x1c]
  404fb6:	mov    eax,DWORD PTR [ebp-0x1c]
  404fb9:	cmp    BYTE PTR [eax],0x2e
  404fbc:	je     0x404fc9
  404fbe:	lea    eax,[ebp-0x121]
  404fc4:	cmp    eax,DWORD PTR [ebp-0x1c]
  404fc7:	jne    0x404fb3
  404fc9:	lea    eax,[ebp-0x121]
  404fcf:	cmp    eax,DWORD PTR [ebp-0x1c]
  404fd2:	je     0x405083
  404fd8:	inc    DWORD PTR [ebp-0x1c]
  404fdb:	cmp    BYTE PTR [ebp-0x12],0x0
  404fdf:	je     0x40500d
  404fe1:	mov    edx,DWORD PTR [ebp-0x1c]
  404fe4:	sub    edx,eax
  404fe6:	mov    eax,0x105
  404feb:	sub    eax,edx
  404fed:	push   eax
  404fee:	lea    eax,[ebp-0x12]
  404ff1:	push   eax
  404ff2:	mov    eax,DWORD PTR [ebp-0x1c]
  404ff5:	push   eax
  404ff6:	call   0x401200
  404ffb:	push   0x2
  404ffd:	push   0x0
  404fff:	lea    eax,[ebp-0x121]
  405005:	push   eax
  405006:	call   0x4011f0
  40500b:	mov    ebx,eax
  40500d:	test   ebx,ebx
  40500f:	jne    0x405083
  405011:	cmp    BYTE PTR [ebp-0xd],0x0
  405015:	je     0x405083
  405017:	lea    eax,[ebp-0x121]
  40501d:	mov    edx,DWORD PTR [ebp-0x1c]
  405020:	sub    edx,eax
  405022:	mov    eax,0x105
  405027:	sub    eax,edx
  405029:	push   eax
  40502a:	lea    eax,[ebp-0xd]
  40502d:	push   eax
  40502e:	mov    eax,DWORD PTR [ebp-0x1c]
  405031:	push   eax
  405032:	call   0x401200
  405037:	push   0x2
  405039:	push   0x0
  40503b:	lea    eax,[ebp-0x121]
  405041:	push   eax
  405042:	call   0x4011f0
  405047:	mov    ebx,eax
  405049:	test   ebx,ebx
  40504b:	jne    0x405083
  40504d:	mov    BYTE PTR [ebp-0xb],0x0
  405051:	lea    eax,[ebp-0x121]
  405057:	mov    edx,DWORD PTR [ebp-0x1c]
  40505a:	sub    edx,eax
  40505c:	mov    eax,0x105
  405061:	sub    eax,edx
  405063:	push   eax
  405064:	lea    eax,[ebp-0xd]
  405067:	push   eax
  405068:	mov    eax,DWORD PTR [ebp-0x1c]
  40506b:	push   eax
  40506c:	call   0x401200
  405071:	push   0x2
  405073:	push   0x0
  405075:	lea    eax,[ebp-0x121]
  40507b:	push   eax
  40507c:	call   0x4011f0
  405081:	mov    ebx,eax
  405083:	mov    eax,ebx
  405085:	pop    ebx
  405086:	mov    esp,ebp
  405088:	pop    ebp
  405089:	ret    
  40508a:	add    BYTE PTR [eax],al
  40508c:	push   ebx
  40508d:	outs   dx,DWORD PTR ds:[esi]
  40508e:	data16 je 0x405108
  405091:	popa   
  405092:	jb     0x4050f9
  405094:	pop    esp
  405095:	inc    edx
  405096:	outs   dx,DWORD PTR ds:[esi]
  405097:	jb     0x405105
  405099:	popa   
  40509a:	outs   dx,BYTE PTR ds:[esi]
  40509b:	fs pop esp
  40509d:	dec    esp
  40509e:	outs   dx,DWORD PTR ds:[esi]
  40509f:	arpl   WORD PTR [ecx+0x6c],sp
  4050a2:	gs jae 0x4050a5
  4050a5:	add    BYTE PTR [eax],al
  4050a7:	add    BYTE PTR [ebx+0x6f],dl
  4050aa:	data16 je 0x405124
  4050ad:	popa   
  4050ae:	jb     0x405115
  4050b0:	pop    esp
  4050b1:	inc    edx
  4050b2:	outs   dx,DWORD PTR ds:[esi]
  4050b3:	jb     0x405121
  4050b5:	popa   
  4050b6:	outs   dx,BYTE PTR ds:[esi]
  4050b7:	fs pop esp
  4050b9:	inc    esp
  4050ba:	gs ins BYTE PTR es:[edi],dx
  4050bc:	jo     0x405126
  4050be:	imul   ebx,DWORD PTR [esp+ecx*2+0x6f],0x656c6163
  4050c6:	jae    0x4050c8
  4050c8:	add    BYTE PTR [eax],al
  4050ca:	add    BYTE PTR [eax],al
  4050cc:	call   0x4050dc
  4050d1:	ret    
  4050d2:	mov    eax,eax
  4050d4:	call   0x4050fc
  4050d9:	ret    
  4050da:	mov    eax,eax
  4050dc:	push   ebx
  4050dd:	mov    ebx,eax
  4050df:	mov    eax,0x8
  4050e4:	call   0x402994
  4050e9:	mov    edx,DWORD PTR ds:0x42e034
  4050ef:	mov    DWORD PTR [eax],edx
  4050f1:	mov    DWORD PTR [eax+0x4],ebx
  4050f4:	mov    ds:0x42e034,eax
  4050f9:	pop    ebx
  4050fa:	ret    
  4050fb:	nop
  4050fc:	push   ebx
  4050fd:	push   esi
  4050fe:	push   edi
  4050ff:	add    esp,0xfffffff8
  405102:	mov    esi,eax
  405104:	lea    edi,[esp+0x4]
  405108:	mov    eax,ds:0x42e034
  40510d:	mov    DWORD PTR [esp],eax
  405110:	cmp    DWORD PTR [esp],0x0
  405114:	je     0x40513b
  405116:	mov    eax,DWORD PTR [esp]
  405119:	mov    eax,DWORD PTR [eax+0x4]
  40511c:	cmp    eax,esi
  40511e:	jne    0x40513b
  405120:	mov    eax,ds:0x42e034
  405125:	mov    eax,DWORD PTR [eax]
  405127:	mov    ds:0x42e034,eax
  40512c:	mov    edx,0x8
  405131:	mov    eax,DWORD PTR [esp]
  405134:	call   0x4029c4
  405139:	jmp    0x40517b
  40513b:	mov    eax,DWORD PTR [esp]
  40513e:	mov    DWORD PTR [edi],eax
  405140:	cmp    DWORD PTR [edi],0x0
  405143:	je     0x40517b
  405145:	mov    eax,DWORD PTR [edi]
  405147:	mov    ebx,DWORD PTR [eax]
  405149:	test   ebx,ebx
  40514b:	je     0x405170
  40514d:	mov    eax,DWORD PTR [ebx+0x4]
  405150:	cmp    eax,esi
  405152:	jne    0x405170
  405154:	mov    DWORD PTR [esp],ebx
  405157:	mov    eax,DWORD PTR [edi]
  405159:	mov    eax,DWORD PTR [eax]
  40515b:	mov    eax,DWORD PTR [eax]
  40515d:	mov    edx,DWORD PTR [edi]
  40515f:	mov    DWORD PTR [edx],eax
  405161:	mov    edx,0x8
  405166:	mov    eax,DWORD PTR [esp]
  405169:	call   0x4029c4
  40516e:	jmp    0x40517b
  405170:	mov    eax,DWORD PTR [edi]
  405172:	mov    eax,DWORD PTR [eax]
  405174:	mov    DWORD PTR [edi],eax
  405176:	cmp    DWORD PTR [edi],0x0
  405179:	jne    0x405145
  40517b:	pop    ecx
  40517c:	pop    edx
  40517d:	pop    edi
  40517e:	pop    esi
  40517f:	pop    ebx
  405180:	ret    
  405181:	lea    eax,[eax+0x0]
  405184:	push   ebp
  405185:	mov    ebp,esp
  405187:	add    esp,0xfffffff8
  40518a:	push   ebx
  40518b:	push   esi
  40518c:	push   edi
  40518d:	mov    DWORD PTR [ebp-0x4],eax
  405190:	mov    eax,ds:0x42e034
  405195:	mov    DWORD PTR [ebp-0x8],eax
  405198:	cmp    DWORD PTR [ebp-0x8],0x0
  40519c:	je     0x4051d7
  40519e:	xor    eax,eax
  4051a0:	push   ebp
  4051a1:	push   0x4051bf
  4051a6:	push   DWORD PTR fs:[eax]
  4051a9:	mov    DWORD PTR fs:[eax],esp
  4051ac:	mov    ebx,DWORD PTR [ebp-0x8]
  4051af:	mov    eax,DWORD PTR [ebp-0x4]
  4051b2:	call   DWORD PTR [ebx+0x4]
  4051b5:	xor    eax,eax
  4051b7:	pop    edx
  4051b8:	pop    ecx
  4051b9:	pop    ecx
  4051ba:	mov    DWORD PTR fs:[eax],edx
  4051bd:	jmp    0x4051c9
  4051bf:	jmp    0x403580
  4051c4:	call   0x403760
  4051c9:	mov    eax,DWORD PTR [ebp-0x8]
  4051cc:	mov    eax,DWORD PTR [eax]
  4051ce:	mov    DWORD PTR [ebp-0x8],eax
  4051d1:	cmp    DWORD PTR [ebp-0x8],0x0
  4051d5:	jne    0x40519e
  4051d7:	pop    edi
  4051d8:	pop    esi
  4051d9:	pop    ebx
  4051da:	pop    ecx
  4051db:	pop    ecx
  4051dc:	pop    ebp
  4051dd:	ret    
  4051de:	mov    eax,eax
  4051e0:	mov    edx,DWORD PTR ds:0x42e030
  4051e6:	mov    DWORD PTR [eax],edx
  4051e8:	mov    ds:0x42e030,eax
  4051ed:	ret    
  4051ee:	mov    eax,eax
  4051f0:	push   ebp
  4051f1:	mov    ebp,esp
  4051f3:	add    esp,0xfffffff8
  4051f6:	mov    DWORD PTR [ebp-0x4],eax
  4051f9:	xor    eax,eax
  4051fb:	push   ebp
  4051fc:	push   0x405269
  405201:	push   DWORD PTR fs:[eax]
  405204:	mov    DWORD PTR fs:[eax],esp
  405207:	mov    eax,DWORD PTR [ebp-0x4]
  40520a:	mov    eax,DWORD PTR [eax+0x4]
  40520d:	call   0x405184
  405212:	xor    eax,eax
  405214:	pop    edx
  405215:	pop    ecx
  405216:	pop    ecx
  405217:	mov    DWORD PTR fs:[eax],edx
  40521a:	push   0x405270
  40521f:	mov    eax,DWORD PTR [ebp-0x4]
  405222:	cmp    eax,DWORD PTR ds:0x42e030
  405228:	jne    0x405236
  40522a:	mov    eax,DWORD PTR [ebp-0x4]
  40522d:	mov    eax,DWORD PTR [eax]
  40522f:	mov    ds:0x42e030,eax
  405234:	jmp    0x405268
  405236:	mov    eax,ds:0x42e030
  40523b:	mov    DWORD PTR [ebp-0x8],eax
  40523e:	cmp    DWORD PTR [ebp-0x8],0x0
  405242:	je     0x405268
  405244:	mov    eax,DWORD PTR [ebp-0x8]
  405247:	mov    eax,DWORD PTR [eax]
  405249:	cmp    eax,DWORD PTR [ebp-0x4]
  40524c:	jne    0x40525a
  40524e:	mov    eax,DWORD PTR [ebp-0x4]
  405251:	mov    eax,DWORD PTR [eax]
  405253:	mov    edx,DWORD PTR [ebp-0x8]
  405256:	mov    DWORD PTR [edx],eax
  405258:	jmp    0x405268
  40525a:	mov    eax,DWORD PTR [ebp-0x8]
  40525d:	mov    eax,DWORD PTR [eax]
  40525f:	mov    DWORD PTR [ebp-0x8],eax
  405262:	cmp    DWORD PTR [ebp-0x8],0x0
  405266:	jne    0x405244
  405268:	ret    
  405269:	jmp    0x4036ac
  40526e:	jmp    0x40521f
  405270:	pop    ecx
  405271:	pop    ecx
  405272:	pop    ebp
  405273:	ret    
  405274:	mov    edx,DWORD PTR [eax]
  405276:	test   edx,edx
  405278:	je     0x405288
  40527a:	mov    DWORD PTR [eax],0x0
  405280:	push   eax
  405281:	push   edx
  405282:	mov    eax,DWORD PTR [edx]
  405284:	call   DWORD PTR [eax+0x8]
  405287:	pop    eax
  405288:	ret    
  405289:	lea    eax,[eax+0x0]
  40528c:	test   edx,edx
  40528e:	je     0x4052a9
  405290:	push   edx
  405291:	push   eax
  405292:	mov    eax,DWORD PTR [edx]
  405294:	push   edx
  405295:	call   DWORD PTR [eax+0x4]
  405298:	pop    eax
  405299:	mov    ecx,DWORD PTR [eax]
  40529b:	pop    DWORD PTR [eax]
  40529d:	test   ecx,ecx
  40529f:	jne    0x4052a2
  4052a1:	ret    
  4052a2:	mov    eax,DWORD PTR [ecx]
  4052a4:	push   ecx
  4052a5:	call   DWORD PTR [eax+0x8]
  4052a8:	ret    
  4052a9:	mov    ecx,DWORD PTR [eax]
  4052ab:	test   ecx,ecx
  4052ad:	mov    DWORD PTR [eax],edx
  4052af:	je     0x4052b7
  4052b1:	mov    eax,DWORD PTR [ecx]
  4052b3:	push   ecx
  4052b4:	call   DWORD PTR [eax+0x8]
  4052b7:	ret    
  4052b8:	add    eax,0x4
  4052bb:	push   eax
  4052bc:	call   0x401260
  4052c1:	ret    
  4052c2:	mov    eax,eax
  4052c4:	cmp    DWORD PTR [eax+0x4],0x0
  4052c8:	je     0x4052d1
  4052ca:	mov    al,0x2
  4052cc:	call   0x402a8c
  4052d1:	ret    
  4052d2:	mov    eax,eax
  4052d4:	call   0x40315c
  4052d9:	mov    DWORD PTR [eax+0x4],0x1
  4052e0:	ret    
  4052e1:	lea    eax,[eax+0x0]
  4052e4:	push   ebp
  4052e5:	mov    ebp,esp
  4052e7:	push   ebx
  4052e8:	mov    ebx,DWORD PTR [ebp+0x8]
  4052eb:	mov    ecx,DWORD PTR [ebp+0x10]
  4052ee:	mov    edx,DWORD PTR [ebp+0xc]
  4052f1:	mov    eax,ebx
  4052f3:	call   0x403278
  4052f8:	test   al,al
  4052fa:	je     0x405300
  4052fc:	xor    eax,eax
  4052fe:	jmp    0x405305
  405300:	mov    eax,0x80004002
  405305:	pop    ebx
  405306:	pop    ebp
  405307:	ret    0xc
  40530a:	mov    eax,eax
  40530c:	push   ebp
  40530d:	mov    ebp,esp
  40530f:	mov    eax,DWORD PTR [ebp+0x8]
  405312:	add    eax,0x4
  405315:	push   eax
  405316:	call   0x401258
  40531b:	pop    ebp
  40531c:	ret    0x4
  40531f:	nop
  405320:	push   ebp
  405321:	mov    ebp,esp
  405323:	push   ebx
  405324:	push   esi
  405325:	mov    ebx,DWORD PTR [ebp+0x8]
  405328:	lea    eax,[ebx+0x4]
  40532b:	push   eax
  40532c:	call   0x401260
  405331:	mov    esi,eax
  405333:	test   esi,esi
  405335:	jne    0x405340
  405337:	mov    dl,0x1
  405339:	mov    eax,ebx
  40533b:	mov    ecx,DWORD PTR [eax]
  40533d:	call   DWORD PTR [ecx-0x4]
  405340:	mov    eax,esi
  405342:	pop    esi
  405343:	pop    ebx
  405344:	pop    ebp
  405345:	ret    0x4
  405348:	push   ebp
  405349:	mov    ebp,esp
  40534b:	add    esp,0xfffffff8
  40534e:	push   ebx
  40534f:	push   esi
  405350:	mov    DWORD PTR [ebp-0x8],ecx
  405353:	mov    DWORD PTR [ebp-0x4],edx
  405356:	xor    edx,edx
  405358:	cmp    DWORD PTR [ebp-0x8],0x0
  40535c:	je     0x40541a
  405362:	xor    esi,esi
  405364:	xor    ecx,ecx
  405366:	test   eax,eax
  405368:	je     0x4053f5
  40536e:	jmp    0x4053dc
  405370:	mov    edx,DWORD PTR [ebp-0x8]
  405373:	movzx  edx,WORD PTR [edx+ecx*2]
  405377:	inc    ecx
  405378:	cmp    edx,0x7f
  40537b:	ja     0x405383
  40537d:	mov    BYTE PTR [eax+esi*1],dl
  405380:	inc    esi
  405381:	jmp    0x4053dc
  405383:	cmp    edx,0x7ff
  405389:	jbe    0x4053bc
  40538b:	lea    ebx,[esi+0x3]
  40538e:	cmp    ebx,DWORD PTR [ebp-0x4]
  405391:	ja     0x4053e6
  405393:	mov    ebx,edx
  405395:	shr    ebx,0xc
  405398:	or     bl,0xe0
  40539b:	mov    BYTE PTR [eax+esi*1],bl
  40539e:	mov    ebx,edx
  4053a0:	shr    ebx,0x6
  4053a3:	and    bl,0x3f
  4053a6:	or     bl,0x80
  4053a9:	mov    BYTE PTR [eax+esi*1+0x1],bl
  4053ad:	and    dl,0x3f
  4053b0:	or     dl,0x80
  4053b3:	mov    BYTE PTR [eax+esi*1+0x2],dl
  4053b7:	add    esi,0x3
  4053ba:	jmp    0x4053dc
  4053bc:	lea    ebx,[esi+0x2]
  4053bf:	cmp    ebx,DWORD PTR [ebp-0x4]
  4053c2:	ja     0x4053e6
  4053c4:	mov    ebx,edx
  4053c6:	shr    ebx,0x6
  4053c9:	or     bl,0xc0
  4053cc:	mov    BYTE PTR [eax+esi*1],bl
  4053cf:	and    dl,0x3f
  4053d2:	or     dl,0x80
  4053d5:	mov    BYTE PTR [eax+esi*1+0x1],dl
  4053d9:	add    esi,0x2
  4053dc:	cmp    ecx,DWORD PTR [ebp+0x8]
  4053df:	jae    0x4053e6
  4053e1:	cmp    esi,DWORD PTR [ebp-0x4]
  4053e4:	jb     0x405370
  4053e6:	cmp    esi,DWORD PTR [ebp-0x4]
  4053e9:	jb     0x4053ef
  4053eb:	mov    esi,DWORD PTR [ebp-0x4]
  4053ee:	dec    esi
  4053ef:	mov    BYTE PTR [eax+esi*1],0x0
  4053f3:	jmp    0x405417
  4053f5:	cmp    ecx,DWORD PTR [ebp+0x8]
  4053f8:	jae    0x405417
  4053fa:	mov    eax,DWORD PTR [ebp-0x8]
  4053fd:	movzx  edx,WORD PTR [eax+ecx*2]
  405401:	inc    ecx
  405402:	cmp    edx,0x7f
  405405:	jbe    0x405411
  405407:	cmp    edx,0x7ff
  40540d:	jbe    0x405410
  40540f:	inc    esi
  405410:	inc    esi
  405411:	inc    esi
  405412:	cmp    ecx,DWORD PTR [ebp+0x8]
  405415:	jb     0x4053fa
  405417:	lea    edx,[esi+0x1]
  40541a:	mov    eax,edx
  40541c:	pop    esi
  40541d:	pop    ebx
  40541e:	pop    ecx
  40541f:	pop    ecx
  405420:	pop    ebp
  405421:	ret    0x4
  405424:	push   ebp
  405425:	mov    ebp,esp
  405427:	add    esp,0xfffffff0
  40542a:	push   ebx
  40542b:	push   esi
  40542c:	mov    DWORD PTR [ebp-0xc],ecx
  40542f:	mov    DWORD PTR [ebp-0x8],edx
  405432:	mov    DWORD PTR [ebp-0x4],eax
  405435:	cmp    DWORD PTR [ebp-0xc],0x0
  405439:	jne    0x405445
  40543b:	xor    eax,eax
  40543d:	mov    DWORD PTR [ebp-0x10],eax
  405440:	jmp    0x40554e
  405445:	mov    DWORD PTR [ebp-0x10],0xffffffff
  40544c:	xor    eax,eax
  40544e:	xor    esi,esi
  405450:	cmp    DWORD PTR [ebp-0x4],0x0
  405454:	je     0x405503
  40545a:	jmp    0x4054e1
  40545f:	mov    edx,DWORD PTR [ebp-0xc]
  405462:	xor    ecx,ecx
  405464:	mov    cl,BYTE PTR [edx+esi*1]
  405467:	inc    esi
  405468:	test   cl,0x80
  40546b:	je     0x4054d9
  40546d:	cmp    esi,DWORD PTR [ebp+0x8]
  405470:	jae    0x40554e
  405476:	and    ecx,0x3f
  405479:	test   cl,0x20
  40547c:	je     0x4054ac
  40547e:	mov    edx,DWORD PTR [ebp-0xc]
  405481:	mov    dl,BYTE PTR [edx+esi*1]
  405484:	inc    esi
  405485:	mov    ebx,edx
  405487:	and    bl,0xc0
  40548a:	cmp    bl,0x80
  40548d:	jne    0x40554e
  405493:	cmp    esi,DWORD PTR [ebp+0x8]
  405496:	jae    0x40554e
  40549c:	and    dl,0x3f
  40549f:	and    edx,0xff
  4054a5:	shl    ecx,0x6
  4054a8:	or     edx,ecx
  4054aa:	mov    ecx,edx
  4054ac:	mov    edx,DWORD PTR [ebp-0xc]
  4054af:	mov    dl,BYTE PTR [edx+esi*1]
  4054b2:	inc    esi
  4054b3:	mov    ebx,edx
  4054b5:	and    bl,0xc0
  4054b8:	cmp    bl,0x80
  4054bb:	jne    0x40554e
  4054c1:	and    dl,0x3f
  4054c4:	and    edx,0xff
  4054ca:	shl    ecx,0x6
  4054cd:	or     dx,cx
  4054d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4054d3:	mov    WORD PTR [ecx+eax*2],dx
  4054d7:	jmp    0x4054e0
  4054d9:	mov    edx,DWORD PTR [ebp-0x4]
  4054dc:	mov    WORD PTR [edx+eax*2],cx
  4054e0:	inc    eax
  4054e1:	cmp    esi,DWORD PTR [ebp+0x8]
  4054e4:	jae    0x4054ef
  4054e6:	cmp    eax,DWORD PTR [ebp-0x8]
  4054e9:	jb     0x40545f
  4054ef:	cmp    eax,DWORD PTR [ebp-0x8]
  4054f2:	jb     0x4054f8
  4054f4:	mov    eax,DWORD PTR [ebp-0x8]
  4054f7:	dec    eax
  4054f8:	mov    edx,DWORD PTR [ebp-0x4]
  4054fb:	mov    WORD PTR [edx+eax*2],0x0
  405501:	jmp    0x40554a
  405503:	cmp    esi,DWORD PTR [ebp+0x8]
  405506:	jae    0x40554a
  405508:	mov    edx,DWORD PTR [ebp-0xc]
  40550b:	mov    dl,BYTE PTR [edx+esi*1]
  40550e:	inc    esi
  40550f:	test   dl,0x80
  405512:	je     0x405544
  405514:	cmp    esi,DWORD PTR [ebp+0x8]
  405517:	jae    0x40554e
  405519:	and    dl,0x3f
  40551c:	test   dl,0x20
  40551f:	je     0x405535
  405521:	mov    edx,DWORD PTR [ebp-0xc]
  405524:	mov    dl,BYTE PTR [edx+esi*1]
  405527:	inc    esi
  405528:	and    dl,0xc0
  40552b:	cmp    dl,0x80
  40552e:	jne    0x40554e
  405530:	cmp    esi,DWORD PTR [ebp+0x8]
  405533:	jae    0x40554e
  405535:	mov    edx,DWORD PTR [ebp-0xc]
  405538:	mov    dl,BYTE PTR [edx+esi*1]
  40553b:	inc    esi
  40553c:	and    dl,0xc0
  40553f:	cmp    dl,0x80
  405542:	jne    0x40554e
  405544:	inc    eax
  405545:	cmp    esi,DWORD PTR [ebp+0x8]
  405548:	jb     0x405508
  40554a:	inc    eax
  40554b:	mov    DWORD PTR [ebp-0x10],eax
  40554e:	mov    eax,DWORD PTR [ebp-0x10]
  405551:	pop    esi
  405552:	pop    ebx
  405553:	mov    esp,ebp
  405555:	pop    ebp
  405556:	ret    0x4
  405559:	lea    eax,[eax+0x0]
  40555c:	push   ebp
  40555d:	mov    ebp,esp
  40555f:	push   0x0
  405561:	push   ebx
  405562:	push   esi
  405563:	mov    esi,edx
  405565:	mov    ebx,eax
  405567:	xor    eax,eax
  405569:	push   ebp
  40556a:	push   0x4055fb
  40556f:	push   DWORD PTR fs:[eax]
  405572:	mov    DWORD PTR fs:[eax],esp
  405575:	mov    eax,esi
  405577:	call   0x403cac
  40557c:	mov    eax,ebx
  40557e:	xor    edx,edx
  405580:	call   0x404490
  405585:	je     0x4055e5
  405587:	mov    eax,ebx
  405589:	call   0x404484
  40558e:	lea    edx,[eax+eax*2]
  405591:	lea    eax,[ebp-0x4]
  405594:	call   0x404284
  405599:	mov    eax,ebx
  40559b:	call   0x404484
  4055a0:	push   eax
  4055a1:	mov    eax,DWORD PTR [ebp-0x4]
  4055a4:	call   0x403f48
  4055a9:	inc    eax
  4055aa:	push   eax
  4055ab:	mov    eax,ebx
  4055ad:	call   0x404474
  4055b2:	push   eax
  4055b3:	mov    eax,DWORD PTR [ebp-0x4]
  4055b6:	call   0x404148
  4055bb:	pop    ecx
  4055bc:	pop    edx
  4055bd:	call   0x405348
  4055c2:	test   eax,eax
  4055c4:	jle    0x4055d3
  4055c6:	mov    edx,eax
  4055c8:	dec    edx
  4055c9:	lea    eax,[ebp-0x4]
  4055cc:	call   0x404284
  4055d1:	jmp    0x4055db
  4055d3:	lea    eax,[ebp-0x4]
  4055d6:	call   0x403cac
  4055db:	mov    eax,esi
  4055dd:	mov    edx,DWORD PTR [ebp-0x4]
  4055e0:	call   0x403d00
  4055e5:	xor    eax,eax
  4055e7:	pop    edx
  4055e8:	pop    ecx
  4055e9:	pop    ecx
  4055ea:	mov    DWORD PTR fs:[eax],edx
  4055ed:	push   0x405602
  4055f2:	lea    eax,[ebp-0x4]
  4055f5:	call   0x403cac
  4055fa:	ret    
  4055fb:	jmp    0x4036ac
  405600:	jmp    0x4055f2
  405602:	pop    esi
  405603:	pop    ebx
  405604:	pop    ecx
  405605:	pop    ebp
  405606:	ret    
  405607:	nop
  405608:	push   ebp
  405609:	mov    ebp,esp
  40560b:	push   0x0
  40560d:	push   ebx
  40560e:	push   esi
  40560f:	mov    esi,edx
  405611:	mov    ebx,eax
  405613:	xor    eax,eax
  405615:	push   ebp
  405616:	push   0x40569f
  40561b:	push   DWORD PTR fs:[eax]
  40561e:	mov    DWORD PTR fs:[eax],esp
  405621:	mov    eax,esi
  405623:	call   0x404318
  405628:	test   ebx,ebx
  40562a:	je     0x405689
  40562c:	mov    eax,ebx
  40562e:	call   0x403f48
  405633:	mov    edx,eax
  405635:	lea    eax,[ebp-0x4]
  405638:	call   0x404560
  40563d:	mov    eax,ebx
  40563f:	call   0x403f48
  405644:	push   eax
  405645:	mov    eax,DWORD PTR [ebp-0x4]
  405648:	call   0x404484
  40564d:	inc    eax
  40564e:	push   eax
  40564f:	mov    eax,ebx
  405651:	call   0x404148
  405656:	push   eax
  405657:	mov    eax,DWORD PTR [ebp-0x4]
  40565a:	call   0x404474
  40565f:	pop    ecx
  405660:	pop    edx
  405661:	call   0x405424
  405666:	test   eax,eax
  405668:	jle    0x405677
  40566a:	mov    edx,eax
  40566c:	dec    edx
  40566d:	lea    eax,[ebp-0x4]
  405670:	call   0x404560
  405675:	jmp    0x40567f
  405677:	lea    eax,[ebp-0x4]
  40567a:	call   0x404318
  40567f:	mov    eax,esi
  405681:	mov    edx,DWORD PTR [ebp-0x4]
  405684:	call   0x404354
  405689:	xor    eax,eax
  40568b:	pop    edx
  40568c:	pop    ecx
  40568d:	pop    ecx
  40568e:	mov    DWORD PTR fs:[eax],edx
  405691:	push   0x4056a6
  405696:	lea    eax,[ebp-0x4]
  405699:	call   0x404318
  40569e:	ret    
  40569f:	jmp    0x4036ac
  4056a4:	jmp    0x405696
  4056a6:	pop    esi
  4056a7:	pop    ebx
  4056a8:	pop    ecx
  4056a9:	pop    ebp
  4056aa:	ret    
  4056ab:	nop
  4056ac:	push   ebp
  4056ad:	mov    ebp,esp
  4056af:	push   0x0
  4056b1:	push   ebx
  4056b2:	push   esi
  4056b3:	mov    esi,edx
  4056b5:	mov    ebx,eax
  4056b7:	xor    eax,eax
  4056b9:	push   ebp
  4056ba:	push   0x4056ef
  4056bf:	push   DWORD PTR fs:[eax]
  4056c2:	mov    DWORD PTR fs:[eax],esp
  4056c5:	lea    eax,[ebp-0x4]
  4056c8:	mov    edx,ebx
  4056ca:	call   0x404464
  4056cf:	mov    eax,DWORD PTR [ebp-0x4]
  4056d2:	mov    edx,esi
  4056d4:	call   0x40555c
  4056d9:	xor    eax,eax
  4056db:	pop    edx
  4056dc:	pop    ecx
  4056dd:	pop    ecx
  4056de:	mov    DWORD PTR fs:[eax],edx
  4056e1:	push   0x4056f6
  4056e6:	lea    eax,[ebp-0x4]
  4056e9:	call   0x404318
  4056ee:	ret    
  4056ef:	jmp    0x4036ac
  4056f4:	jmp    0x4056e6
  4056f6:	pop    esi
  4056f7:	pop    ebx
  4056f8:	pop    ecx
  4056f9:	pop    ebp
  4056fa:	ret    
  4056fb:	nop
  4056fc:	push   ebx
  4056fd:	push   esi
  4056fe:	add    esp,0xfffff004
  405704:	push   eax
  405705:	mov    esi,edx
  405707:	mov    ebx,eax
  405709:	test   ebx,ebx
  40570b:	je     0x40574a
  40570d:	cmp    DWORD PTR [ebx+0x4],0x10000
  405714:	jge    0x405740
  405716:	push   0x1000
  40571b:	lea    eax,[esp+0x4]
  40571f:	push   eax
  405720:	mov    eax,DWORD PTR [ebx+0x4]
  405723:	push   eax
  405724:	mov    eax,DWORD PTR [ebx]
  405726:	mov    eax,DWORD PTR [eax]
  405728:	call   0x404bfc
  40572d:	push   eax
  40572e:	call   0x4011f8
  405733:	mov    ecx,eax
  405735:	mov    edx,esp
  405737:	mov    eax,esi
  405739:	call   0x403d9c
  40573e:	jmp    0x40574a
  405740:	mov    eax,esi
  405742:	mov    edx,DWORD PTR [ebx+0x4]
  405745:	call   0x403ea4
  40574a:	add    esp,0x1000
  405750:	pop    esi
  405751:	pop    ebx
  405752:	ret    
  405753:	nop
  405754:	push   ebp
  405755:	mov    ebp,esp
  405757:	add    esp,0xfffffff0
  40575a:	push   ebx
  40575b:	xor    edx,edx
  40575d:	mov    DWORD PTR [ebp-0x10],edx
  405760:	xor    edx,edx
  405762:	push   ebp
  405763:	push   0x4057ba
  405768:	push   DWORD PTR fs:[edx]
  40576b:	mov    DWORD PTR fs:[edx],esp
  40576e:	push   0x7
  405770:	lea    edx,[ebp-0xb]
  405773:	push   edx
  405774:	push   0x1004
  405779:	push   eax
  40577a:	call   0x4011c0
  40577f:	lea    eax,[ebp-0x10]
  405782:	lea    edx,[ebp-0xb]
  405785:	mov    ecx,0x7
  40578a:	call   0x403f1c
  40578f:	mov    eax,DWORD PTR [ebp-0x10]
  405792:	lea    edx,[ebp-0x4]
  405795:	call   0x402c54
  40579a:	mov    ebx,eax
  40579c:	cmp    DWORD PTR [ebp-0x4],0x0
  4057a0:	je     0x4057a4
  4057a2:	xor    ebx,ebx
  4057a4:	xor    eax,eax
  4057a6:	pop    edx
  4057a7:	pop    ecx
  4057a8:	pop    ecx
  4057a9:	mov    DWORD PTR fs:[eax],edx
  4057ac:	push   0x4057c1
  4057b1:	lea    eax,[ebp-0x10]
  4057b4:	call   0x403cac
  4057b9:	ret    
  4057ba:	jmp    0x4036ac
  4057bf:	jmp    0x4057b1
  4057c1:	mov    eax,ebx
  4057c3:	pop    ebx
  4057c4:	mov    esp,ebp
  4057c6:	pop    ebp
  4057c7:	ret    
  4057c8:	push   ebp
  4057c9:	mov    ebp,esp
  4057cb:	xor    eax,eax
  4057cd:	push   ebp
  4057ce:	push   0x405812
  4057d3:	push   DWORD PTR fs:[eax]
  4057d6:	mov    DWORD PTR fs:[eax],esp
  4057d9:	inc    DWORD PTR ds:0x42f5b4
  4057df:	jne    0x405804
  4057e1:	mov    eax,0x42f048
  4057e6:	call   0x402bdc
  4057eb:	mov    eax,0x42f214
  4057f0:	call   0x402bdc
  4057f5:	mov    eax,0x42f3e0
  4057fa:	call   0x402bdc
  4057ff:	call   0x401bbc
  405804:	xor    eax,eax
  405806:	pop    edx
  405807:	pop    ecx
  405808:	pop    ecx
  405809:	mov    DWORD PTR fs:[eax],edx
  40580c:	push   0x405819
  405811:	ret    
  405812:	jmp    0x4036ac
  405817:	jmp    0x405811
  405819:	pop    ebp
  40581a:	ret    
  40581b:	nop
  40581c:	sub    DWORD PTR ds:0x42f5b4,0x1
  405823:	jae    0x4058ee
  405829:	mov    BYTE PTR ds:0x42e008,0x2
  405830:	mov    DWORD PTR ds:0x42f014,0x401168
  40583a:	mov    DWORD PTR ds:0x42f018,0x401170
  405844:	mov    BYTE PTR ds:0x42f046,0x2
  40584b:	mov    DWORD PTR ds:0x42f000,0x404914
  405855:	call   0x403030
  40585a:	test   al,al
  40585c:	je     0x405863
  40585e:	call   0x403060
  405863:	call   0x403124
  405868:	mov    WORD PTR ds:0x42f04c,0xd7b0
  405871:	mov    WORD PTR ds:0x42f218,0xd7b0
  40587a:	mov    WORD PTR ds:0x42f3e4,0xd7b0
  405883:	call   0x4011b8
  405888:	mov    ds:0x42f03c,eax
  40588d:	call   0x401278
  405892:	mov    ds:0x42f038,eax
  405897:	call   0x401270
  40589c:	and    eax,0x80000000
  4058a1:	cmp    eax,0x80000000
  4058a6:	je     0x4058d5
  4058a8:	call   0x401270
  4058ad:	and    eax,0xff
  4058b2:	cmp    ax,0x4
  4058b6:	jbe    0x4058c4
  4058b8:	mov    DWORD PTR ds:0x42f5b8,0x3
  4058c2:	jmp    0x4058e4
  4058c4:	call   0x4011e8
  4058c9:	call   0x405754
  4058ce:	mov    ds:0x42f5b8,eax
  4058d3:	jmp    0x4058e4
  4058d5:	call   0x4011e8
  4058da:	call   0x405754
  4058df:	mov    ds:0x42f5b8,eax
  4058e4:	call   0x401268
  4058e9:	mov    ds:0x42f030,eax
  4058ee:	ret    
  4058ef:	nop
  4058f0:	jmp    DWORD PTR ds:0x4301f8
  4058f6:	mov    eax,eax
  4058f8:	jmp    DWORD PTR ds:0x4301f4
  4058fe:	mov    eax,eax
  405900:	jmp    DWORD PTR ds:0x4301f0
  405906:	mov    eax,eax
  405908:	jmp    DWORD PTR ds:0x4301ec
  40590e:	mov    eax,eax
  405910:	push   ebx
  405911:	push   ecx
  405912:	mov    ebx,eax
  405914:	push   ebx
  405915:	push   0x40
  405917:	call   0x4058f8
  40591c:	mov    DWORD PTR [esp],eax
  40591f:	mov    eax,DWORD PTR [esp]
  405922:	pop    edx
  405923:	pop    ebx
  405924:	ret    
  405925:	lea    eax,[eax+0x0]
  405928:	mov    eax,0xc
  40592d:	ret    
  40592e:	mov    eax,eax
  405930:	push   ebx
  405931:	push   ecx
  405932:	call   0x405928
  405937:	mov    ebx,eax
  405939:	test   ebx,ebx
  40593b:	je     0x40597b
  40593d:	cmp    DWORD PTR ds:0x42e098,0xffffffff
  405944:	jne    0x405950
  405946:	mov    eax,0xe2
  40594b:	call   0x403ca0
  405950:	mov    eax,ebx
  405952:	call   0x405910
  405957:	mov    DWORD PTR [esp],eax
  40595a:	cmp    DWORD PTR [esp],0x0
  40595e:	jne    0x40596c
  405960:	mov    eax,0xe2
  405965:	call   0x403ca0
  40596a:	jmp    0x40597b
  40596c:	mov    eax,DWORD PTR [esp]
  40596f:	push   eax
  405970:	mov    eax,ds:0x42e098
  405975:	push   eax
  405976:	call   0x405908
  40597b:	pop    edx
  40597c:	pop    ebx
  40597d:	ret    
  40597e:	mov    eax,eax
  405980:	mov    cl,BYTE PTR ds:0x42f65c
  405986:	mov    eax,ds:0x42e098
  40598b:	test   cl,cl
  40598d:	jne    0x4059b5
  40598f:	mov    edx,DWORD PTR fs:0x2c
  405996:	mov    eax,DWORD PTR [edx+eax*4]
  405999:	ret    
  40599a:	call   0x405930
  40599f:	mov    eax,ds:0x42e098
  4059a4:	push   eax
  4059a5:	call   0x405900
  4059aa:	test   eax,eax
  4059ac:	je     0x4059af
  4059ae:	ret    
  4059af:	mov    eax,ds:0x42f668
  4059b4:	ret    
  4059b5:	push   eax
  4059b6:	call   0x405900
  4059bb:	test   eax,eax
  4059bd:	je     0x40599a
  4059bf:	ret    
  4059c0:	mov    eax,0x42e09c
  4059c5:	call   0x4051e0
  4059ca:	ret    
  4059cb:	nop
  4059cc:	push   ebx
  4059cd:	mov    ebx,eax
  4059cf:	xor    eax,eax
  4059d1:	mov    ds:0x42e098,eax
  4059d6:	push   0x0
  4059d8:	call   0x4058f0
  4059dd:	mov    ds:0x42f660,eax
  4059e2:	mov    eax,ds:0x42f660
  4059e7:	mov    ds:0x42e0a0,eax
  4059ec:	xor    eax,eax
  4059ee:	mov    ds:0x42e0a4,eax
  4059f3:	xor    eax,eax
  4059f5:	mov    ds:0x42e0a8,eax
  4059fa:	call   0x4059c0
  4059ff:	mov    edx,0x42e09c
  405a04:	mov    eax,ebx
  405a06:	call   0x403a10
  405a0b:	pop    ebx
  405a0c:	ret    
  405a0d:	lea    eax,[eax+0x0]
  405a10:	push   ebp
  405a11:	mov    ebp,esp
  405a13:	xor    eax,eax
  405a15:	push   ebp
  405a16:	push   0x405a35
  405a1b:	push   DWORD PTR fs:[eax]
  405a1e:	mov    DWORD PTR fs:[eax],esp
  405a21:	inc    DWORD PTR ds:0x42f664
  405a27:	xor    eax,eax
  405a29:	pop    edx
  405a2a:	pop    ecx
  405a2b:	pop    ecx
  405a2c:	mov    DWORD PTR fs:[eax],edx
  405a2f:	push   0x405a3c
  405a34:	ret    
  405a35:	jmp    0x4036ac
  405a3a:	jmp    0x405a34
  405a3c:	pop    ebp
  405a3d:	ret    
  405a3e:	mov    eax,eax
  405a40:	sub    DWORD PTR ds:0x42f664,0x1
  405a47:	ret    
  405a48:	push   ebp
  405a49:	mov    ebp,esp
  405a4b:	xor    eax,eax
  405a4d:	push   ebp
  405a4e:	push   0x405a6d
  405a53:	push   DWORD PTR fs:[eax]
  405a56:	mov    DWORD PTR fs:[eax],esp
  405a59:	inc    DWORD PTR ds:0x42f66c
  405a5f:	xor    eax,eax
  405a61:	pop    edx
  405a62:	pop    ecx
  405a63:	pop    ecx
  405a64:	mov    DWORD PTR fs:[eax],edx
  405a67:	push   0x405a74
  405a6c:	ret    
  405a6d:	jmp    0x4036ac
  405a72:	jmp    0x405a6c
  405a74:	pop    ebp
  405a75:	ret    
  405a76:	mov    eax,eax
  405a78:	sub    DWORD PTR ds:0x42f66c,0x1
  405a7f:	ret    
  405a80:	jmp    DWORD PTR ds:0x430284
  405a86:	mov    eax,eax
  405a88:	jmp    DWORD PTR ds:0x430280
  405a8e:	mov    eax,eax
  405a90:	jmp    DWORD PTR ds:0x43027c
  405a96:	mov    eax,eax
  405a98:	jmp    DWORD PTR ds:0x430278
  405a9e:	mov    eax,eax
  405aa0:	jmp    DWORD PTR ds:0x430274
  405aa6:	mov    eax,eax
  405aa8:	jmp    DWORD PTR ds:0x430270
  405aae:	mov    eax,eax
  405ab0:	jmp    DWORD PTR ds:0x43026c
  405ab6:	mov    eax,eax
  405ab8:	jmp    DWORD PTR ds:0x430268
  405abe:	mov    eax,eax
  405ac0:	jmp    DWORD PTR ds:0x430264
  405ac6:	mov    eax,eax
  405ac8:	jmp    DWORD PTR ds:0x430260
  405ace:	mov    eax,eax
  405ad0:	jmp    DWORD PTR ds:0x43025c
  405ad6:	mov    eax,eax
  405ad8:	jmp    DWORD PTR ds:0x430258
  405ade:	mov    eax,eax
  405ae0:	jmp    DWORD PTR ds:0x430254
  405ae6:	mov    eax,eax
  405ae8:	jmp    DWORD PTR ds:0x430250
  405aee:	mov    eax,eax
  405af0:	jmp    DWORD PTR ds:0x43024c
  405af6:	mov    eax,eax
  405af8:	jmp    DWORD PTR ds:0x430248
  405afe:	mov    eax,eax
  405b00:	jmp    DWORD PTR ds:0x430244
  405b06:	mov    eax,eax
  405b08:	jmp    DWORD PTR ds:0x430240
  405b0e:	mov    eax,eax
  405b10:	jmp    DWORD PTR ds:0x43023c
  405b16:	mov    eax,eax
  405b18:	jmp    DWORD PTR ds:0x430238
  405b1e:	mov    eax,eax
  405b20:	jmp    DWORD PTR ds:0x430234
  405b26:	mov    eax,eax
  405b28:	jmp    DWORD PTR ds:0x430230
  405b2e:	mov    eax,eax
  405b30:	jmp    DWORD PTR ds:0x43022c
  405b36:	mov    eax,eax
  405b38:	jmp    DWORD PTR ds:0x430228
  405b3e:	mov    eax,eax
  405b40:	jmp    DWORD PTR ds:0x430224
  405b46:	mov    eax,eax
  405b48:	jmp    DWORD PTR ds:0x430220
  405b4e:	mov    eax,eax
  405b50:	jmp    DWORD PTR ds:0x43021c
  405b56:	mov    eax,eax
  405b58:	jmp    DWORD PTR ds:0x430218
  405b5e:	mov    eax,eax
  405b60:	jmp    DWORD PTR ds:0x430214
  405b66:	mov    eax,eax
  405b68:	jmp    DWORD PTR ds:0x430210
  405b6e:	mov    eax,eax
  405b70:	jmp    DWORD PTR ds:0x43020c
  405b76:	mov    eax,eax
  405b78:	jmp    DWORD PTR ds:0x430208
  405b7e:	mov    eax,eax
  405b80:	jmp    DWORD PTR ds:0x430204
  405b86:	mov    eax,eax
  405b88:	jmp    DWORD PTR ds:0x430200
  405b8e:	mov    eax,eax
  405b90:	jmp    DWORD PTR ds:0x430298
  405b96:	mov    eax,eax
  405b98:	jmp    DWORD PTR ds:0x43029c
  405b9e:	mov    eax,eax
  405ba0:	jmp    DWORD PTR ds:0x430294
  405ba6:	mov    eax,eax
  405ba8:	jmp    DWORD PTR ds:0x430290
  405bae:	mov    eax,eax
  405bb0:	jmp    DWORD PTR ds:0x43028c
  405bb6:	mov    eax,eax
  405bb8:	push   ebp
  405bb9:	mov    ebp,esp
  405bbb:	xor    eax,eax
  405bbd:	push   ebp
  405bbe:	push   0x405bdd
  405bc3:	push   DWORD PTR fs:[eax]
  405bc6:	mov    DWORD PTR fs:[eax],esp
  405bc9:	inc    DWORD PTR ds:0x42f670
  405bcf:	xor    eax,eax
  405bd1:	pop    edx
  405bd2:	pop    ecx
  405bd3:	pop    ecx
  405bd4:	mov    DWORD PTR fs:[eax],edx
  405bd7:	push   0x405be4
  405bdc:	ret    
  405bdd:	jmp    0x4036ac
  405be2:	jmp    0x405bdc
  405be4:	pop    ebp
  405be5:	ret    
  405be6:	mov    eax,eax
  405be8:	sub    DWORD PTR ds:0x42f670,0x1
  405bef:	ret    
  405bf0:	jmp    DWORD PTR ds:0x4303ac
  405bf6:	mov    eax,eax
  405bf8:	jmp    DWORD PTR ds:0x4303a8
  405bfe:	mov    eax,eax
  405c00:	jmp    DWORD PTR ds:0x4303a4
  405c06:	mov    eax,eax
  405c08:	jmp    DWORD PTR ds:0x4302f4
  405c0e:	mov    eax,eax
  405c10:	jmp    DWORD PTR ds:0x4303a0
  405c16:	mov    eax,eax
  405c18:	jmp    DWORD PTR ds:0x43039c
  405c1e:	mov    eax,eax
  405c20:	jmp    DWORD PTR ds:0x4302f0
  405c26:	mov    eax,eax
  405c28:	jmp    DWORD PTR ds:0x4302a4
  405c2e:	mov    eax,eax
  405c30:	jmp    DWORD PTR ds:0x430398
  405c36:	mov    eax,eax
  405c38:	jmp    DWORD PTR ds:0x430394
  405c3e:	mov    eax,eax
  405c40:	jmp    DWORD PTR ds:0x430390
  405c46:	mov    eax,eax
  405c48:	jmp    DWORD PTR ds:0x43038c
  405c4e:	mov    eax,eax
  405c50:	jmp    DWORD PTR ds:0x4302ec
  405c56:	mov    eax,eax
  405c58:	jmp    DWORD PTR ds:0x430388
  405c5e:	mov    eax,eax
  405c60:	jmp    DWORD PTR ds:0x430384
  405c66:	mov    eax,eax
  405c68:	jmp    DWORD PTR ds:0x4302e8
  405c6e:	mov    eax,eax
  405c70:	jmp    DWORD PTR ds:0x430380
  405c76:	mov    eax,eax
  405c78:	jmp    DWORD PTR ds:0x43037c
  405c7e:	mov    eax,eax
  405c80:	jmp    DWORD PTR ds:0x430378
  405c86:	mov    eax,eax
  405c88:	jmp    DWORD PTR ds:0x430374
  405c8e:	mov    eax,eax
  405c90:	jmp    DWORD PTR ds:0x430370
  405c96:	mov    eax,eax
  405c98:	jmp    DWORD PTR ds:0x4302b4
  405c9e:	mov    eax,eax
  405ca0:	jmp    DWORD PTR ds:0x4302e4
  405ca6:	mov    eax,eax
  405ca8:	jmp    DWORD PTR ds:0x4302e0
  405cae:	mov    eax,eax
  405cb0:	jmp    DWORD PTR ds:0x4302dc
  405cb6:	mov    eax,eax
  405cb8:	jmp    DWORD PTR ds:0x43036c
  405cbe:	mov    eax,eax
  405cc0:	jmp    DWORD PTR ds:0x430368
  405cc6:	mov    eax,eax
  405cc8:	jmp    DWORD PTR ds:0x430364
  405cce:	mov    eax,eax
  405cd0:	jmp    DWORD PTR ds:0x430360
  405cd6:	mov    eax,eax
  405cd8:	jmp    DWORD PTR ds:0x43035c
  405cde:	mov    eax,eax
  405ce0:	jmp    DWORD PTR ds:0x4302d8
  405ce6:	mov    eax,eax
  405ce8:	jmp    DWORD PTR ds:0x430358
  405cee:	mov    eax,eax
  405cf0:	jmp    DWORD PTR ds:0x430354
  405cf6:	mov    eax,eax
  405cf8:	jmp    DWORD PTR ds:0x430350
  405cfe:	mov    eax,eax
  405d00:	jmp    DWORD PTR ds:0x43034c
  405d06:	mov    eax,eax
  405d08:	jmp    DWORD PTR ds:0x430348
  405d0e:	mov    eax,eax
  405d10:	jmp    DWORD PTR ds:0x4302ac
  405d16:	mov    eax,eax
  405d18:	jmp    DWORD PTR ds:0x430344
  405d1e:	mov    eax,eax
  405d20:	jmp    DWORD PTR ds:0x4302d4
  405d26:	mov    eax,eax
  405d28:	jmp    DWORD PTR ds:0x430340
  405d2e:	mov    eax,eax
  405d30:	jmp    DWORD PTR ds:0x43033c
  405d36:	mov    eax,eax
  405d38:	jmp    DWORD PTR ds:0x430338
  405d3e:	mov    eax,eax
  405d40:	jmp    DWORD PTR ds:0x430334
  405d46:	mov    eax,eax
  405d48:	jmp    DWORD PTR ds:0x430330
  405d4e:	mov    eax,eax
  405d50:	jmp    DWORD PTR ds:0x43032c
  405d56:	mov    eax,eax
  405d58:	jmp    DWORD PTR ds:0x430328
  405d5e:	mov    eax,eax
  405d60:	jmp    DWORD PTR ds:0x4302d0
  405d66:	mov    eax,eax
  405d68:	jmp    DWORD PTR ds:0x430324
  405d6e:	mov    eax,eax
  405d70:	jmp    DWORD PTR ds:0x4302cc
  405d76:	mov    eax,eax
  405d78:	jmp    DWORD PTR ds:0x4302c8
  405d7e:	mov    eax,eax
  405d80:	jmp    DWORD PTR ds:0x430320
  405d86:	mov    eax,eax
  405d88:	jmp    DWORD PTR ds:0x43031c
  405d8e:	mov    eax,eax
  405d90:	jmp    DWORD PTR ds:0x4302c4
  405d96:	mov    eax,eax
  405d98:	jmp    DWORD PTR ds:0x430318
  405d9e:	mov    eax,eax
  405da0:	jmp    DWORD PTR ds:0x430314
  405da6:	mov    eax,eax
  405da8:	jmp    DWORD PTR ds:0x430310
  405dae:	mov    eax,eax
  405db0:	jmp    DWORD PTR ds:0x43030c
  405db6:	mov    eax,eax
  405db8:	jmp    DWORD PTR ds:0x430308
  405dbe:	mov    eax,eax
  405dc0:	jmp    DWORD PTR ds:0x4302c0
  405dc6:	mov    eax,eax
  405dc8:	jmp    DWORD PTR ds:0x430304
  405dce:	mov    eax,eax
  405dd0:	jmp    DWORD PTR ds:0x430300
  405dd6:	mov    eax,eax
  405dd8:	jmp    DWORD PTR ds:0x4302fc
  405dde:	mov    eax,eax
  405de0:	jmp    DWORD PTR ds:0x4302bc
  405de6:	mov    eax,eax
  405de8:	push   ebp
  405de9:	mov    ebp,esp
  405deb:	mov    ecx,0x4
  405df0:	push   0x0
  405df2:	push   0x0
  405df4:	dec    ecx
  405df5:	jne    0x405df0
  405df7:	push   ecx
  405df8:	mov    DWORD PTR [ebp-0x4],eax
  405dfb:	xor    eax,eax
  405dfd:	push   ebp
  405dfe:	push   0x406096
  405e03:	push   DWORD PTR fs:[eax]
  405e06:	mov    DWORD PTR fs:[eax],esp
  405e09:	mov    DWORD PTR [ebp-0xc],0x1c564
  405e10:	lea    eax,[ebp-0x1c]
  405e13:	mov    edx,0x4060ac
  405e18:	call   0x403d44
  405e1d:	lea    eax,[ebp-0x18]
  405e20:	mov    edx,0x4060b8
  405e25:	call   0x403d44
  405e2a:	lea    eax,[ebp-0x24]
  405e2d:	mov    edx,0x4060c8
  405e32:	call   0x403d44
  405e37:	lea    eax,[ebp-0x18]
  405e3a:	mov    edx,0x4060d4
  405e3f:	call   0x403d44
  405e44:	lea    eax,[ebp-0x20]
  405e47:	mov    edx,0x4060e0
  405e4c:	call   0x403d44
  405e51:	lea    eax,[ebp-0x18]
  405e54:	mov    edx,0x4060ec
  405e59:	call   0x403d44
  405e5e:	lea    eax,[ebp-0x24]
  405e61:	mov    edx,0x4060f8
  405e66:	call   0x403d44
  405e6b:	lea    eax,[ebp-0x20]
  405e6e:	mov    edx,0x4060c8
  405e73:	call   0x403d44
  405e78:	lea    eax,[ebp-0x1c]
  405e7b:	mov    edx,0x406108
  405e80:	call   0x403d44
  405e85:	mov    eax,DWORD PTR [ebp-0xc]
  405e88:	add    eax,DWORD PTR [ebp-0xc]
  405e8b:	mov    DWORD PTR [ebp-0x10],eax
  405e8e:	lea    eax,[ebp-0x18]
  405e91:	mov    edx,0x406118
  405e96:	call   0x403d44
  405e9b:	lea    eax,[ebp-0x18]
  405e9e:	mov    edx,0x406124
  405ea3:	call   0x403d44
  405ea8:	lea    eax,[ebp-0x20]
  405eab:	mov    edx,0x406130
  405eb0:	call   0x403d44
  405eb5:	lea    eax,[ebp-0x24]
  405eb8:	mov    edx,0x40613c
  405ebd:	call   0x403d44
  405ec2:	lea    eax,[ebp-0x24]
  405ec5:	mov    edx,0x4060d4
  405eca:	call   0x403d44
  405ecf:	lea    eax,[ebp-0x20]
  405ed2:	mov    edx,0x4060ec
  405ed7:	call   0x403d44
  405edc:	mov    eax,DWORD PTR [ebp-0x14]
  405edf:	add    eax,DWORD PTR [ebp-0x14]
  405ee2:	sub    eax,DWORD PTR [ebp-0xc]
  405ee5:	mov    DWORD PTR [ebp-0xc],eax
  405ee8:	lea    eax,[ebp-0x18]
  405eeb:	mov    edx,0x4060ec
  405ef0:	call   0x403d44
  405ef5:	lea    eax,[ebp-0x18]
  405ef8:	mov    edx,0x406148
  405efd:	call   0x403d44
  405f02:	lea    eax,[ebp-0x18]
  405f05:	mov    edx,0x4060d4
  405f0a:	call   0x403d44
  405f0f:	lea    eax,[ebp-0x1c]
  405f12:	mov    edx,0x406154
  405f17:	call   0x403d44
  405f1c:	lea    eax,[ebp-0x24]
  405f1f:	mov    edx,0x406160
  405f24:	call   0x403d44
  405f29:	mov    eax,DWORD PTR [ebp-0xc]
  405f2c:	sub    eax,DWORD PTR [ebp-0x10]
  405f2f:	mov    DWORD PTR [ebp-0x10],eax
  405f32:	lea    eax,[ebp-0x8]
  405f35:	mov    edx,0x40616c
  405f3a:	call   0x403d44
  405f3f:	mov    DWORD PTR [ebp-0xc],0x1c564
  405f46:	lea    eax,[ebp-0x1c]
  405f49:	mov    edx,0x4060ac
  405f4e:	call   0x403d44
  405f53:	lea    eax,[ebp-0x18]
  405f56:	mov    edx,0x4060b8
  405f5b:	call   0x403d44
  405f60:	lea    eax,[ebp-0x24]
  405f63:	mov    edx,0x4060c8
  405f68:	call   0x403d44
  405f6d:	lea    eax,[ebp-0x18]
  405f70:	mov    edx,0x4060d4
  405f75:	call   0x403d44
  405f7a:	lea    eax,[ebp-0x20]
  405f7d:	mov    edx,0x4060e0
  405f82:	call   0x403d44
  405f87:	lea    eax,[ebp-0x18]
  405f8a:	mov    edx,0x4060ec
  405f8f:	call   0x403d44
  405f94:	lea    eax,[ebp-0x24]
  405f97:	mov    edx,0x4060f8
  405f9c:	call   0x403d44
  405fa1:	lea    eax,[ebp-0x20]
  405fa4:	mov    edx,0x4060c8
  405fa9:	call   0x403d44
  405fae:	lea    eax,[ebp-0x1c]
  405fb1:	mov    edx,0x406108
  405fb6:	call   0x403d44
  405fbb:	mov    eax,DWORD PTR [ebp-0xc]
  405fbe:	add    eax,DWORD PTR [ebp-0xc]
  405fc1:	mov    DWORD PTR [ebp-0x10],eax
  405fc4:	lea    eax,[ebp-0x18]
  405fc7:	mov    edx,0x406118
  405fcc:	call   0x403d44
  405fd1:	lea    eax,[ebp-0x18]
  405fd4:	mov    edx,0x406124
  405fd9:	call   0x403d44
  405fde:	lea    eax,[ebp-0x20]
  405fe1:	mov    edx,0x406130
  405fe6:	call   0x403d44
  405feb:	lea    eax,[ebp-0x24]
  405fee:	mov    edx,0x40613c
  405ff3:	call   0x403d44
  405ff8:	lea    eax,[ebp-0x24]
  405ffb:	mov    edx,0x4060d4
  406000:	call   0x403d44
  406005:	lea    eax,[ebp-0x20]
  406008:	mov    edx,0x4060ec
  40600d:	call   0x403d44
  406012:	mov    eax,DWORD PTR [ebp-0x14]
  406015:	add    eax,DWORD PTR [ebp-0x14]
  406018:	sub    eax,DWORD PTR [ebp-0xc]
  40601b:	mov    DWORD PTR [ebp-0xc],eax
  40601e:	lea    eax,[ebp-0x18]
  406021:	mov    edx,0x4060ec
  406026:	call   0x403d44
  40602b:	lea    eax,[ebp-0x18]
  40602e:	mov    edx,0x406148
  406033:	call   0x403d44
  406038:	lea    eax,[ebp-0x18]
  40603b:	mov    edx,0x4060d4
  406040:	call   0x403d44
  406045:	lea    eax,[ebp-0x1c]
  406048:	mov    edx,0x406154
  40604d:	call   0x403d44
  406052:	lea    eax,[ebp-0x24]
  406055:	mov    edx,0x406160
  40605a:	call   0x403d44
  40605f:	mov    eax,DWORD PTR [ebp-0xc]
  406062:	sub    eax,DWORD PTR [ebp-0x10]
  406065:	mov    DWORD PTR [ebp-0x10],eax
  406068:	mov    eax,DWORD PTR [ebp-0x4]
  40606b:	mov    edx,DWORD PTR [ebp-0x8]
  40606e:	call   0x403d00
  406073:	xor    eax,eax
  406075:	pop    edx
  406076:	pop    ecx
  406077:	pop    ecx
  406078:	mov    DWORD PTR fs:[eax],edx
  40607b:	push   0x40609d
  406080:	lea    eax,[ebp-0x24]
  406083:	mov    edx,0x4
  406088:	call   0x403cd0
  40608d:	lea    eax,[ebp-0x8]
  406090:	call   0x403cac
  406095:	ret    
  406096:	jmp    0x4036ac
  40609b:	jmp    0x406080
  40609d:	mov    esp,ebp
  40609f:	pop    ebp
  4060a0:	ret    
  4060a1:	add    BYTE PTR [eax],al
  4060a3:	add    bh,bh
  4060a5:	(bad)  
  4060a6:	(bad)  
  4060a7:	inc    DWORD PTR [ecx]
  4060a9:	add    BYTE PTR [eax],al
  4060ab:	add    BYTE PTR [esi+0x0],ch
  4060ae:	add    BYTE PTR [eax],al
  4060b0:	(bad)  
  4060b1:	(bad)  
  4060b2:	(bad)  
  4060b3:	inc    DWORD PTR [eax+eax*1]
  4060b6:	add    BYTE PTR [eax],al
  4060b8:	imul   edx,DWORD PTR [esi+0x33],0x53
  4060bf:	add    bh,bh
  4060c1:	(bad)  
  4060c2:	(bad)  
  4060c3:	inc    DWORD PTR [edx]
  4060c5:	add    BYTE PTR [eax],al
  4060c7:	add    BYTE PTR [edi],dh
  4060c9:	jne    0x4060cb
  4060cb:	add    bh,bh
  4060cd:	(bad)  
  4060ce:	(bad)  
  4060cf:	inc    DWORD PTR [ebx]
  4060d1:	add    BYTE PTR [eax],al
  4060d3:	add    BYTE PTR [eax+esi*1+0x6c],al
  4060d7:	add    bh,bh
  4060d9:	(bad)  
  4060da:	(bad)  
  4060db:	inc    DWORD PTR [edx]
  4060dd:	add    BYTE PTR [eax],al
  4060df:	add    BYTE PTR [ecx+0x44],al
  4060e2:	add    BYTE PTR [eax],al
  4060e4:	(bad)  
  4060e5:	(bad)  
  4060e6:	(bad)  
  4060e7:	inc    DWORD PTR [ecx]
  4060e9:	add    BYTE PTR [eax],al
  4060eb:	add    BYTE PTR [ecx+0x0],ah
  4060ee:	add    BYTE PTR [eax],al
  4060f0:	(bad)  
  4060f1:	(bad)  
  4060f2:	(bad)  
  4060f3:	inc    DWORD PTR [eax+eax*1]
  4060f6:	add    BYTE PTR [eax],al
  4060f8:	popa   
  4060f9:	dec    edx
  4060fa:	xor    eax,0x78
  4060ff:	add    bh,bh
  406101:	(bad)  
  406102:	(bad)  
  406103:	inc    DWORD PTR [eax+eax*1]
  406106:	add    BYTE PTR [eax],al
  406108:	jns    0x406179
  40610a:	push   ebp
  40610b:	dec    edi
  40610c:	add    BYTE PTR [eax],al
  40610e:	add    BYTE PTR [eax],al
  406110:	(bad)  
  406111:	(bad)  
  406112:	(bad)  
  406113:	inc    DWORD PTR [ecx]
  406115:	add    BYTE PTR [eax],al
  406117:	add    BYTE PTR [edi+0x0],dl
  40611a:	add    BYTE PTR [eax],al
  40611c:	(bad)  
  40611d:	(bad)  
  40611e:	(bad)  
  40611f:	inc    DWORD PTR [ebx]
  406121:	add    BYTE PTR [eax],al
  406123:	add    BYTE PTR [ecx+0x4e],cl
  406126:	dec    esi
  406127:	add    bh,bh
  406129:	(bad)  
  40612a:	(bad)  
  40612b:	inc    DWORD PTR [ebx]
  40612d:	add    BYTE PTR [eax],al
  40612f:	add    BYTE PTR [ebx+0x38],al
  406132:	push   esi
  406133:	add    bh,bh
  406135:	(bad)  
  406136:	(bad)  
  406137:	inc    DWORD PTR [ebx]
  406139:	add    BYTE PTR [eax],al
  40613b:	add    BYTE PTR [ecx+0x75],ah
  40613e:	pop    eax
  40613f:	add    bh,bh
  406141:	(bad)  
  406142:	(bad)  
  406143:	inc    DWORD PTR [ebx]
  406145:	add    BYTE PTR [eax],al
  406147:	add    BYTE PTR [edi+0x71],ah
  40614a:	dec    eax
  40614b:	add    bh,bh
  40614d:	(bad)  
  40614e:	(bad)  
  40614f:	inc    DWORD PTR [ebx]
  406151:	add    BYTE PTR [eax],al
  406153:	add    BYTE PTR [esi+edx*2+0x79],al
  406157:	add    bh,bh
  406159:	(bad)  
  40615a:	(bad)  
  40615b:	inc    DWORD PTR [edx]
  40615d:	add    BYTE PTR [eax],al
  40615f:	add    BYTE PTR [edi],dh
  406161:	xor    al,0x0
  406163:	add    bh,bh
  406165:	(bad)  
  406166:	(bad)  
  406167:	jmp    DWORD PTR [edx+0x2200017d]
  40616d:	pop    es
  40616e:	add    al,BYTE PTR [edx+eax*1]
  406171:	jg     0x406174
  406173:	(bad)  
  406175:	and    ebx,0xf6e6c684
  40617b:	cld    
  40617c:	call   FWORD PTR [ecx+0x53]
  40617f:	push   esp
  406180:	pop    ebx
  406181:	pop    ebp
  406182:	push   esp
  406183:	stc    
  406184:	xor    ebp,ebx
  406186:	outs   dx,DWORD PTR ds:[esi]
  406187:	test   DWORD PTR [ebp+esi*1-0x79],edx
  40618b:	pop    ecx
  40618c:	or     BYTE PTR [edx+0x73811c51],cl
  406192:	and    BYTE PTR [edx+0x1e],ah
  406195:	push   edx
  406196:	xor    ebx,edi
  406198:	aaa    
  406199:	int    0xac
  40619b:	cmp    esp,DWORD PTR [ecx+0x7b]
  40619e:	add    ebp,DWORD PTR [eax]
  4061a0:	and    bl,al
  4061a2:	lds    ecx,FWORD PTR [edi]
  4061a4:	push   cs
  4061a5:	(bad)  
  4061a6:	out    dx,al
  4061a7:	test   DWORD PTR [ebx+esi*8+0x6549b456],0x8b15588c
  4061b2:	sbb    esi,DWORD PTR [ebp-0x23]
  4061b5:	mov    DWORD PTR [ebp-0x2],ebx
  4061b8:	push   ebx
  4061b9:	pop    ecx
  4061ba:	push   ebx
  4061bb:	add    DWORD PTR [ebx-0x3],0x86cb4c8c
  4061c2:	dec    edx
  4061c3:	int3   
  4061c4:	ins    BYTE PTR es:[edi],dx
  4061c5:	test   BYTE PTR [ecx],bh
  4061c7:	inc    ebp
  4061c8:	push   eax
  4061c9:	push   es
  4061ca:	xor    DWORD PTR [edx+ecx*1],0x40860a08
  4061d1:	cld    
  4061d2:	xor    dl,dl
  4061d4:	pop    ebp
  4061d5:	pop    edi
  4061d6:	mov    cs,WORD PTR [ebx-0x39]
  4061d9:	mov    es,WORD PTR [ebp+0x3a]
  4061dc:	xchg   esp,eax
  4061dd:	or     BYTE PTR [esi],cl
  4061df:	sub    BYTE PTR [ebx],dl
  4061e1:	pop    eax
  4061e2:	sub    ecx,DWORD PTR [ebx]
  4061e4:	mov    ecx,esp
  4061e6:	or     eax,0x8bc3438e
  4061eb:	inc    ebp
  4061ec:	enter  0x3885,0x54
  4061f0:	inc    ebp
  4061f1:	pop    es
  4061f2:	or     eax,DWORD PTR [esi+ecx*4]
  4061f5:	sbb    BYTE PTR [edx],cl
  4061f7:	or     eax,DWORD PTR [esi]
  4061f9:	add    BYTE PTR [edi+ecx*8-0x7d],0x43
  4061fe:	jb     0x40620b
  406200:	dec    esi
  406201:	sti    
  406202:	mov    WORD PTR [eax-0x32],es
  406205:	mov    WORD PTR [ebp-0x3d],cs
  406208:	mov    esi,DWORD PTR [ebx+0x1e]
  40620b:	xor    ebp,0x79
  40620e:	pop    es
  40620f:	in     eax,dx
  406210:	sti    
  406211:	out    0xff,eax
  406213:	stc    
  406214:	test   edi,edi
  406216:	add    al,0x8d
  406218:	lock or cl,BYTE PTR [esi]
  40621b:	or     al,0x4e
  40621d:	int    0x4f
  40621f:	int    0xa
  406221:	femms  
  406223:	push   cs
  406224:	xchg   DWORD PTR [esi-0x5],ecx
  406227:	cmp    al,0xd7
  406229:	push   esi
  40622a:	pop    ecx
  40622b:	mov    eax,DWORD PTR [esi-0x35]
  40622e:	or     DWORD PTR [edx+ebp*1+0x3c],0xffffffda
  406233:	pop    esi
  406234:	push   ebp
  406235:	add    DWORD PTR [edx-0x38],0x960ee3cc
  40623c:	or     eax,DWORD PTR ds:0x2c581320
  406242:	add    al,BYTE PTR [edx+0x30b05c6]
  406248:	sub    edx,DWORD PTR ds:0x87062a54
  40624e:	int3   
  40624f:	or     cl,BYTE PTR [esi-0x5b4fbf7]
  406255:	mov    esi,DWORD PTR [ecx]
  406257:	dec    edi
  406258:	push   0x4a7d6b64
  40625d:	test   DWORD PTR [eax+0x1],ecx
  406260:	mov    ?,WORD PTR [eax]
  406262:	dec    edx
  406263:	pusha  
  406264:	popa   
  406265:	jno    0x4062e1
  406267:	dec    esi
  406268:	mov    es,WORD PTR [ecx+0x5]
  40626b:	cmp    DWORD PTR [eax],0x63
  40626e:	jbe    0x4062eb
  406270:	dec    edx
  406271:	jne    0x4062a9
  406273:	mov    cs,WORD PTR [edi-0x35]
  406276:	mov    es,WORD PTR [edx+0x2a]
  406279:	or     eax,DWORD PTR [esi-0x4]
  40627c:	cmp    edi,edx
  40627e:	push   ecx
  40627f:	pop    eax
  406280:	add    BYTE PTR [esi-0x3b],0x3
  406284:	iret   
  406285:	xchg   edx,eax
  406286:	or     eax,0x5f1f2102
  40628b:	and    BYTE PTR ds:0x6702cc80,al
  406291:	or     DWORD PTR [eax],0xffffff8d
  406294:	pop    esi
  406295:	les    ecx,FWORD PTR [edi+0x52031154]
  40629b:	cld    
  40629c:	or     BYTE PTR [esi+0x8e2c1c4],dh
  4062a2:	add    edi,ebx
  4062a4:	mov    ecx,DWORD PTR [esi]
  4062a6:	add    al,0x40
  4062a8:	lock test BYTE PTR [ebp-0x71],cl
  4062ac:	mov    ?,WORD PTR [esi]
  4062ae:	inc    ebp
  4062af:	pusha  
  4062b0:	je     0x40630b
  4062b2:	jne    0x4062fc
  4062b4:	lea    eax,[ecx+0x6]
  4062b7:	lea    edi,[edi]
  4062b9:	jp     0x406320
  4062bb:	gs inc eax
  4062bd:	jo     0x406309
  4062bf:	test   ah,cl
  4062c1:	pop    es
  4062c2:	xor    DWORD PTR [ebx],0x6f7a6561
  4062c8:	jl     0x406306
  4062ca:	or     BYTE PTR [esi-0x34],0x81
  4062ce:	dec    ebp
  4062cf:	and    DWORD PTR [ebx],eax
  4062d1:	inc    esi
  4062d2:	cld    
  4062d3:	cmp    al,0xdd
  4062d5:	push   edi
  4062d6:	pop    esi
  4062d7:	add    BYTE PTR [eax-0x3b],0x5
  4062db:	int    0x92
  4062dd:	or     DWORD PTR [eax],ecx
  4062df:	and    al,0x1f
  4062e1:	pop    ebx
  4062e2:	sub    ecx,DWORD PTR [ebx+ecx*4]
  4062e5:	ror    DWORD PTR [edi],0x60
  4062e8:	add    BYTE PTR [eax],0x8b
  4062eb:	push   ebp
  4062ec:	ror    BYTE PTR [ebx+0x5e041c56],0xf7
  4062f3:	add    al,0xbc
  4062f5:	retf   
  4062f6:	retf   0x9e6
  4062f9:	add    dl,bh
  4062fb:	add    DWORD PTR [ecx],0x9
  4062fe:	dec    ebp
  4062ff:	test   DWORD PTR [ebp+ebx*8+0x46c74ffa],0xf91b8508
  40630a:	stc    
  40630b:	cld    
  40630c:	mov    BYTE PTR [edi-0x61],0x6d
  406310:	into   
  406311:	inc    ebp
  406312:	popf   
  406313:	je     0x4062e4
  406315:	dec    esi
  406316:	popf   
  406317:	fs int3 
  406319:	dec    ebx
  40631a:	xchg   ecx,eax
  40631b:	fs int3 
  40631d:	dec    edi
  40631e:	xchg   ebx,eax
  40631f:	leavew 
  406321:	dec    ebx
  406322:	xchg   ecx,eax
  406323:	or     al,0x86
  406325:	inc    edx
  406326:	xchg   ebp,eax
  406327:	push   ebp
  406328:	sti    
  406329:	pop    esp
  40632a:	mov    WORD PTR [eax+0x6e89ceff],cs
  406330:	lock div ebx
  406333:	push   eax
  406334:	int3   
  406335:	sub    BYTE PTR [ebp-0xe],0xfc
  406339:	repz popa 
  40633b:	into   
  40633c:	test   BYTE PTR [edx-0x1],ah
  40633f:	repz imul DWORD PTR [ebx-0x39]
  406343:	xchg   DWORD PTR [edx-0x9],ebp
  406346:	clc    
  406347:	lock addr16 (bad) 
  40634a:	mov    ebp,DWORD PTR [edx-0x5]
  40634d:	idiv   ebp
  40634f:	jne    0x406318
  406351:	sub    BYTE PTR [edi-0x7],0xf5
  406355:	not    DWORD PTR [ebp-0x3f]
  406358:	and    BYTE PTR [ebp-0x9],0xfa
  40635c:	mul    DWORD PTR [eax-0x3d]
  40635f:	mov    ch,BYTE PTR [ebx-0x7]
  406362:	idiv   ah
  406364:	leavew 
  406366:	(bad)  
  406367:	outs   dx,DWORD PTR ds:[esi]
  406368:	push   edx
  40636a:	std    
  40636b:	ja     0x406331
  40636d:	sub    DWORD PTR [edi-0xc],0xcc4af0ff
  406374:	mov    ch,BYTE PTR [ebx-0x3]
  406377:	icebp  
  406378:	mul    DWORD PTR [ebp-0x3a]
  40637b:	(bad)  
  40637f:	hlt    
  406380:	inc    ebp
  406381:	ret    
  406382:	test   DWORD PTR [edi-0xc],edi
  406385:	icebp  
  406386:	stc    
  406387:	ins    BYTE PTR es:[edi],dx
  406388:	retf   0x758e
  40638b:	(bad)  
  40638c:	cld    
  40638d:	mul    DWORD PTR [esi-0x39]
  406390:	lea    edi,[edx-0x7]
  406393:	hlt    
  406394:	jmp    DWORD PTR [ecx-0x40]
  406397:	mov    BYTE PTR [ebx-0x8],dh
  40639a:	(bad)  
  40639b:	clc    
  40639c:	add    DWORD PTR [ecx-0x20a997b],ecx
  4063a2:	lock push eax
  4063a4:	xchg   DWORD PTR [edx-0x7],eax
  4063a7:	pop    esp
  4063a8:	repnz fisttp DWORD PTR [edx-0x7f3b70b6]
  4063af:	call   0x483a63ab
  4063b4:	mov    BYTE PTR [edi-0xa08061b],0x63
  4063bb:	mov    DWORD PTR [eax-0xf0d061d],0xea80cc74
  4063c5:	div    ch
  4063c7:	test   BYTE PTR [edi-0x31],0x8e
  4063cb:	in     al,0xf4
  4063cd:	repnz cli 
  4063cf:	jne    0x406396
  4063d1:	test   edx,esp
  4063d3:	icebp  
  4063d4:	cli    
  4063d5:	icebp  
  4063d6:	jns    0x40639b
  4063d8:	sub    al,0xf3
  4063db:	hlt    
  4063dc:	cmc    
  4063dd:	jle    0x4063a5
  4063df:	mov    eax,esp
  4063e1:	icebp  
  4063e2:	div    edi
  4063e4:	pusha  
  4063e5:	rol    DWORD PTR [ebx-0x105],0x6a
  4063ec:	mov    BYTE PTR [ecx-0xb0b060f],0x7f
  4063f3:	int    0x8e
  4063f5:	stc    
  4063f6:	clc    
  4063f7:	hlt    
  4063f8:	(bad)  
  4063f9:	push   edi
  4063fa:	into   
  4063fb:	xchg   cl,bh
  4063fd:	div    ah
  4063ff:	clc    
  406400:	ja     0x4063c5
  406402:	(bad)  
  406403:	repz idiv al
  406406:	jmp    FWORD PTR [eax+eax*8-0x7d]
  40640a:	idiv   dh
  40640c:	std    
  40640d:	cli    
  40640e:	pusha  
  40640f:	into   
  406410:	test   eax,esi
  406412:	(bad)  
  406413:	div    ah
  406415:	fs (bad) 
  406417:	(bad)  
  406418:	stc    
  406419:	repnz div ebp
  40641c:	jns    0x4063e9
  40641e:	(bad)  
  40641f:	div    eax
  406421:	icebp  
  406422:	repz js 0x4063e6
  406425:	mov    bh,ah
  406427:	cli    
  406428:	idiv   bh
  40642a:	add    eax,DWORD PTR [edx-0xf0b1b73]
  406430:	neg    DWORD PTR [esi+ecx*4+0x4f]
  406434:	sti    
  406435:	pop    eax
  406436:	repnz ror dl,1
  406439:	mov    cl,BYTE PTR [edx-0x2]
  40643c:	sti    
  40643d:	call   FWORD PTR [edx-0x32]
  406440:	add    DWORD PTR [edx-0x3],0xfffffff2
  406444:	imul   DWORD PTR [esi-0x37]
  406447:	add    DWORD PTR [ecx+esi*8-0x3],0xfffffffb
  40644c:	jp     0x406412
  40644e:	add    BYTE PTR [eax+edi*8-0x7],0xf9
  406453:	jle    0x406423
  406455:	xchg   BYTE PTR [ecx-0x6],al
  406458:	lock div DWORD PTR [eax-0x32]
  40645c:	mov    WORD PTR [edx-0x10],es
  40645f:	(bad)  
  406460:	stc    
  406461:	push   0xf54786c5
  406466:	cld    
  406467:	jmp    DWORD PTR [ecx-0x3c]
  40646a:	test   DWORD PTR [ebx-0x5],ecx
  40646d:	std    
  40646e:	hlt    
  40646f:	inc    ecx
  406470:	leave  
  406471:	add    BYTE PTR [eax-0x10],0xfa
  406475:	std    
  406476:	(bad)  
  406477:	into   
  406478:	xchg   BYTE PTR [ebx-0xb],cl
  40647b:	cli    
  40647c:	cld    
  40647d:	fs int 0x86
  406480:	dec    ecx
  406481:	push   eax
  406483:	hlt    
  406484:	popa   
  406485:	rol    BYTE PTR [eax-0x1040bbf],0x60
  40648c:	into   
  40648d:	(bad)  
  40648e:	dec    edi
  40648f:	div    edi
  406491:	stc    
  406492:	or     ecx,DWORD PTR [ebp-0xdbb7f]
  406498:	clc    
  406499:	push   eax
  40649a:	mov    WORD PTR [eax+edi*8+0x50],es
  40649e:	std    
  40649f:	(bad)  [ebx-0x7d357fb6]
  4064a5:	xor    esi,ebx
  4064a7:	repnz not DWORD PTR [ebp-0x37]
  4064ab:	xor    BYTE PTR ds:0x69f6fffa,0xc0
  4064b2:	test   DWORD PTR [eax],edi
  4064b4:	std    
  4064b5:	repz clc 
  4064b7:	jp     0x406485
  4064b9:	cmp    DWORD PTR [eax],0xfffffffa
  4064bc:	idiv   al
  4064be:	jns    0x406489
  4064c0:	test   DWORD PTR [eax],esi
  4064c2:	cli    
  4064c3:	(bad)  
  4064c4:	idiv   DWORD PTR [edi-0x31]
  4064c7:	xor    DWORD PTR [edx],0x6cf5f7f4
  4064cd:	ret    
  4064ce:	test   DWORD PTR [edi],edi
  4064d0:	push   eax
  4064d2:	lock imul ecx,eax,0xf9fa388e
  4064d9:	repnz dec ebp
  4064db:	int3   
  4064dc:	mov    DWORD PTR [esi],edi
  4064de:	repz lock lock jp 0x4064b1
  4064e3:	cmp    BYTE PTR [eax],0xf9
  4064e6:	hlt    
  4064e7:	jmp    DWORD PTR [ebp-0x3a]
  4064ea:	add    DWORD PTR [eax-0x5],0xcd6ef8ff
  4064f1:	mov    cs,WORD PTR [edx-0xc]
  4064f4:	hlt    
  4064f5:	stc    
  4064f6:	or     ecx,DWORD PTR [edx+eax*4-0x80a03c2]
  4064fd:	pop    ebx
  4064fe:	mov    WORD PTR [eax-0x7],es
  406501:	pop    edx
  406502:	clc    
  406503:	fisttp DWORD PTR [esi-0x606807b]
  406509:	cld    
  40650a:	mov    BYTE PTR [edi-0x803d3],0x54
  406511:	(bad)  
  406512:	mov    WORD PTR [edx],fs
  406514:	(bad)  
  406515:	push   ebp
  406517:	jp     0x4064e3
  406519:	lea    esp,[eax]
  40651b:	cmc    
  40651c:	repnz cmc 
  40651e:	arpl   ax,cx
  406520:	mov    esp,DWORD PTR [edi]
  406522:	hlt    
  406523:	clc    
  406524:	lock dec eax
  406526:	ret    0x2c8c
  406529:	cld    
  40652a:	lock mul DWORD PTR [ebx-0x34]
  40652e:	mov    ah,BYTE PTR ds:0x71f5faf3
  406534:	into   
  406535:	mov    BYTE PTR ds:0x64f7f0f3,ch
  40653b:	ret    0x2385
  40653e:	idiv   ecx
  406540:	dec    BYTE PTR [edi-0x35]
  406543:	lea    esi,[edi]
  406545:	lock stc 
  406547:	jmp    FWORD PTR [ebx-0x3c]
  40654a:	cmp    DWORD PTR [ecx],0x6afefafd
  406550:	rol    BYTE PTR [ebx-0x70308c8],0x6a
  406557:	leave  
  406558:	lea    esi,[esi]
  40655a:	div    esi
  40655c:	cli    
  40655d:	jge    0x406525
  40655f:	cmp    DWORD PTR ds:0x73f0fcfc,0xffffffc5
  406566:	test   DWORD PTR [eax],edi
  406568:	std    
  406569:	(bad)  
  40656a:	std    
  40656b:	add    al,0x8f
  40656d:	mov    gs,WORD PTR [eax]
  40656f:	lock cli 
  406571:	cmc    
  406572:	pop    edi
  406573:	push   ebx
  406574:	std    
  406575:	fld    QWORD PTR [ecx-0x50a877a]
  40657b:	cld    
  40657c:	into   
  40657d:	mov    ss,WORD PTR [edx+edi*8]
  406580:	push   eax
  406582:	dec    esp
  406583:	enter  0x1d83,0xf3
  406587:	hlt    
  406588:	sti    
  406589:	lds    ecx,FWORD PTR fs:[ebp-0x80801ed]
  406590:	jb     0x40655f
  406592:	test   DWORD PTR [esi],ebx
  406594:	stc    
  406595:	repnz dec DWORD PTR [edx-0x3a]
  406599:	sbb    BYTE PTR [edx],0xfb
  40659c:	(bad)  
  40659d:	std    
  40659e:	les    ecx,FWORD PTR gs:[edx-0x5070ce4]
  4065a5:	push   0xf01e8dcb
  4065aa:	clc    
  4065ab:	std    
  4065ac:	jo     0x406574
  4065ae:	mov    WORD PTR [esi],ds
  4065b0:	stc    
  4065b1:	(bad)  
  4065b2:	jmp    FWORD PTR [esi-0x36]
  4065b5:	adc    BYTE PTR [edi],0xf5
  4065b8:	stc    
  4065b9:	(bad)  
  4065ba:	pusha  
  4065bb:	iret   
  4065bc:	sub    BYTE PTR ds:0x4df5fff0,0xc7
  4065c3:	lea    ebp,[ebx]
  4065c5:	idiv   bl
  4065c7:	imul   BYTE PTR [edx-0x32]
  4065ca:	(bad)  
  4065cb:	das    
  4065cc:	cli    
  4065cd:	(bad)  
  4065ce:	cld    
  4065cf:	outs   dx,BYTE PTR ds:[esi]
  4065d0:	leave  
  4065d1:	mov    ah,BYTE PTR [esi]
  4065d3:	icebp  
  4065d4:	hlt    
  4065d5:	cli    
  4065d6:	popa   
  4065d7:	ror    BYTE PTR [eax-0xc0ad1],0x60
  4065de:	leave  
  4065df:	mov    ch,BYTE PTR ds:0x63f8faf7
  4065e5:	int    0x85
  4065e7:	es (bad) 
  4065e9:	sti    
  4065ea:	inc    DWORD PTR [ebp-0x3a]
  4065ed:	sub    BYTE PTR [esp+esi*8],0xf4
  4065f1:	hlt    
  4065f2:	or     eax,DWORD PTR [esi-0x701e37d]
  4065f8:	not    DWORD PTR [ebx-0x7f]
  4065fb:	dec    ebp
  4065fc:	not    DWORD PTR [edi-0x6]
  4065ff:	(bad)  
  406600:	pusha  
  406601:	pop    es
  406602:	not    edi
  406604:	mov    edi,ebx
  406606:	push   ecx
  406607:	stc    
  406608:	push   esi
  406609:	mov    BYTE PTR [ecx+0x45810b40],cl
  40660f:	retf   0x4c8b
  406612:	(bad)  
  406613:	xor    DWORD PTR [bp+si],0x8f075643
  40661a:	pusha  
  40661b:	(bad)  
  40661d:	jne    0xd5786a6e
  406623:	pop    ebp
  406624:	push   ebp
  406625:	(bad)  
  406626:	dec    esp
  406627:	int3   
  406628:	mov    BYTE PTR [edi+0x34],cl
  40662b:	xchg   ebp,eax
  40662c:	or     DWORD PTR [ebx],ecx
  40662e:	sub    al,0x1f
  406630:	push   ecx
  406631:	add    ecx,DWORD PTR cs:[ebx+0x4a850bc9]
  406638:	ror    BYTE PTR [edx+0x308dc841],0x56
  40663f:	inc    esp
  406640:	add    cl,BYTE PTR ds:0x44f8207
  406646:	add    BYTE PTR [esi],cl
  406648:	push   0x35026044
  40664d:	add    DWORD PTR [edi],eax
  40664f:	lea    eax,[ebx-0x3e]
  406652:	add    DWORD PTR [ebx+0x57],0x55
  406656:	pop    eax
  406657:	not    DWORD PTR [eax-0x78]
  40665a:	add    BYTE PTR [eax-0x4d],0x83
  40665e:	jnp    0x406615
  406660:	add    ecx,DWORD PTR [ebx+ecx*4]
  406663:	sub    eax,DWORD PTR [ecx]
  406665:	add    BYTE PTR ds:0x8fca4589,cl
  40666b:	inc    edx
  40666c:	pop    edi
  40666d:	push   eax
  40666e:	test   BYTE PTR [eax+0x2],al
  406671:	pop    edi
  406672:	push   edx
  406673:	std    
  406674:	fwait
  406675:	jo     0x406673
  406677:	push   ebp
  406679:	mov    es,WORD PTR [esi-0x40]
  40667c:	add    al,0xb4
  40667e:	jne    0x406686
  406680:	inc    ecx
  406681:	mov    ?,eax
  406683:	jp     0x4066ce
  406685:	dec    edx
  406686:	int3   
  406687:	inc    ecx
  406688:	rol    DWORD PTR [ebx],0x8
  40668b:	or     al,BYTE PTR [ecx]
  40668d:	sbb    DWORD PTR [ebp-0x36],0xffffff80
  406691:	push   edx
  406692:	cmp    BYTE PTR [ebp-0x2ffbf7b8],cl
  406698:	xchg   bl,al
  40669a:	cld    
  40669b:	add    BYTE PTR [edx],al
  40669d:	or     cl,BYTE PTR [ecx-0x19323fbe]
  4066a3:	push   es
  4066a4:	add    DWORD PTR [ecx],0x8ede0081
  4066aa:	push   edi
  4066ab:	mov    cl,0x8b
  4066ad:	pop    esp
  4066ae:	mov    ah,0x8d
  4066b0:	push   edx
  4066b1:	adc    BYTE PTR [eax-0x79],dl
  4066b4:	push   edx
  4066b5:	mov    esp,0x6155481
  4066ba:	fst    DWORD PTR [ebp-0x7a]
  4066bd:	dec    edx
  4066be:	mov    ah,0x81
  4066c0:	inc    ebp
  4066c1:	or     eax,0xfb59cd0b
  4066c6:	pushf  
  4066c7:	jae    0x4066c0
  4066c9:	cmc    
  4066ca:	repnz cli 
  4066cc:	inc    ebp
  4066cd:	ret    
  4066ce:	dec    esi
  4066cf:	jp     0x406684
  4066d1:	mov    cs,WORD PTR [ebx-0x3d]
  4066d4:	mov    es,WORD PTR [ebp+0x32]
  4066d7:	ss int3 
  4066d9:	add    eax,0xf0ccc88
  4066de:	jae    0xd1cd3431
  4066e4:	and    BYTE PTR [eax+0x34],dl
  4066e7:	mov    DWORD PTR [ecx-0x2c],edx
  4066ea:	lea    edi,[ebp-0x9]
  4066ed:	or     BYTE PTR [esi-0x3d],0x88
  4066f1:	mov    bl,0xaf
  4066f3:	push   es
  4066f4:	or     eax,DWORD PTR [ecx]
  4066f6:	pop    es
  4066f7:	pop    es
  4066f8:	test   DWORD PTR [ebx-0x71f8f4f8],ecx
  4066fe:	inc    eax
  4066ff:	ret    0x888c
  406702:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406703:	add    BYTE PTR [ebx],al
  406705:	push   es
  406706:	add    eax,0x408bf046
  40670b:	out    dx,eax
  40670c:	jecxz  0x406776
  40670e:	lea    eax,[ebp-0x1b]
  406711:	add    BYTE PTR [ecx],0x3
  406714:	dec    edi
  406715:	inc    BYTE PTR [ebp+0x4881e24d]
  40671b:	out    0x8c,al
  40671d:	into   
  40671e:	push   es
  40671f:	test   DWORD PTR [esi-0x1d],ecx
  406722:	test   BYTE PTR [eax-0x18],al
  406725:	xor    BYTE PTR [eax+0x7],0x8c
  406729:	out    0x4,al
  40672b:	fndisi(8087 only) 
  40672d:	inc    esi
  40672e:	mov    ebx,esi
  406730:	js     0x406771
  406732:	dec    esi
  406733:	xchg   BYTE PTR [esi-0x18],al
  406736:	add    BYTE PTR [edi+0xe8c501],bh
  40673c:	adc    DWORD PTR [ebx-0x1b],0x64
  406740:	xchg   BYTE PTR [edx],bl
  406742:	popa   
  406743:	mov    fs,esp
  406745:	inc    DWORD PTR [ecx]
  406747:	or     eax,0x508bdab3
  40674c:	fld    QWORD PTR [esi+edi*8-0x77e680fb]
  406753:	inc    edx
  406754:	in     eax,dx
  406755:	or     al,0x4d
  406757:	fld    DWORD PTR [ecx+0x4584e54c]
  40675d:	out    0x82,al
  40675f:	push   esi
  406760:	xlat   BYTE PTR ds:[ebx]
  406761:	push   cs
  406762:	sbb    al,BYTE PTR [eax+0x4e00e945]
  406768:	ja     0x406737
  40676a:	mov    DWORD PTR [esi-0x14],ecx
  40676d:	test   BYTE PTR [ebp+0xe],al
  406770:	or     al,0x40
  406772:	out    dx,al
  406773:	xchg   DWORD PTR [ebp-0x11],ecx
  406776:	mov    ecx,DWORD PTR [edi-0x17]
  406779:	xor    BYTE PTR [eax],0xb
  40677c:	je     0x406713
  40677e:	mov    ecx,DWORD PTR [edx-0x3d]
  406781:	xchg   DWORD PTR [esi+0x31],edi
  406784:	fs repz add al,0x1
  406788:	add    eax,DWORD PTR [ebx-0x7ca736b1]
  40678e:	sar    DWORD PTR [eax],0xd2
  406791:	push   esi
  406792:	push   esi
  406793:	xchg   BYTE PTR [ebp-0x35],al
  406796:	mov    eax,DWORD PTR [edi+0x3d]
  406799:	popf   
  40679a:	add    eax,DWORD PTR [esi]
  40679c:	adc    DWORD PTR cs:[ebx+0x24],ebx
  4067a0:	or     BYTE PTR [ecx+eax*8-0x6908a2fc],al
  4067a7:	ja     0x4067a1
  4067a9:	std    
  4067aa:	cli    
  4067ab:	mov    ecx,DWORD PTR [eax+ecx*8+0x3]
  4067af:	add    BYTE PTR [eax],0x2
  4067b2:	or     al,0x8e
  4067b4:	dec    ebp
  4067b5:	fimul  DWORD PTR [ebp+0x7f8ad544]
  4067bb:	or     DWORD PTR [edi],ecx
  4067bd:	jl     0xa486969
  4067c3:	add    BYTE PTR [ecx-0x3f],0x80
  4067c7:	mov    BYTE PTR [edx+0x50d],cl
  4067cd:	mov    DWORD PTR [esi-0x77184ab6],0x86060505
  4067d7:	dec    esi
  4067d8:	mov    edx,0xc004087
  4067dd:	enter  0xf758,0x50
  4067e1:	mov    ecx,DWORD PTR [ebp+0x74f685fb]
  4067e7:	jne    0x406774
  4067e9:	inc    ecx
  4067ea:	mov    al,0x84
  4067ec:	xor    ecx,DWORD PTR [ebx]
  4067ee:	jg     0x4067f7
  4067f0:	or     BYTE PTR [esi-0x4a],0x80
  4067f4:	add    DWORD PTR [edi+ecx*8],eax
  4067f7:	mov    cl,BYTE PTR [edi-0x5c]
  4067fa:	loopne 0x406808
  4067fc:	mov    es,WORD PTR [eax-0x46]
  4067ff:	mov    WORD PTR [eax+0x17],cs
  406802:	add    eax,esp
  406804:	pop    DWORD PTR [ebx-0x51]
  406807:	mov    eax,DWORD PTR [edi-0x4b]
  40680a:	mov    BYTE PTR [eax+0x10],cl
  40680d:	add    eax,0xa94e80c7
  406812:	jmp    0x406847
  406814:	test   DWORD PTR [ecx-0x5c],ecx
  406817:	cld    
  406818:	dec    edx
  406819:	push   cs
  40681a:	mov    bh,BYTE PTR [ebx+0x1b]
  40681d:	test   DWORD PTR [ecx-0x59],ecx
  406820:	mov    WORD PTR [edi],cs
  406822:	and    bl,bh
  406824:	test   BYTE PTR [eax],0x3
  406827:	pop    edi
  406828:	pop    esi
  406829:	repz fld DWORD PTR [ebp+ebx*2-0x13f7735c]
  406831:	sbb    eax,DWORD PTR [esi+0x884a046]
  406837:	add    al,bl
  406839:	or     esp,0xa
  40683c:	push   esi
  40683d:	push   edi
  40683e:	std    
  40683f:	fiadd  WORD PTR [ebx+0x28fa752]
  406845:	lea    eax,[edi-0x58]
  406848:	or     al,0x81
  40684a:	inc    eax
  40684b:	test   eax,0xa6438d03
  406850:	mov    edi,DWORD PTR [ebx]
  406852:	pop    es
  406853:	jo     0x406805
  406855:	mov    eax,DWORD PTR [eax-0x48]
  406858:	sbb    eax,0x85b04a8e
  40685d:	jno    0x40686e
  40685f:	add    eax,DWORD PTR [eax]
  406861:	(bad)  
  406862:	jae    0x406863
  406864:	repnz std 
  406866:	mov    eax,DWORD PTR [edi-0x34]
  406869:	add    DWORD PTR [ebx+0x28],esi
  40686c:	xchg   BYTE PTR [eax-0xe],bh
  40686f:	addr16 add eax,0x69080e82
  406875:	add    BYTE PTR [ecx-0xba7f4c0],al
  40687b:	xchg   esi,eax
  40687c:	jns    0x40687d
  40687e:	lock hlt 
  406880:	test   DWORD PTR [ebx-0x3],eax
  406883:	test   edi,esp
  406885:	pop    ecx
  406886:	(bad)  
  406887:	jecxz  0x4068e0
  406889:	push   esp
  40688a:	pop    edx
  40688b:	sub    ebp,0x5b
  40688e:	leave  
  40688f:	add    al,0x4
  406891:	mov    ecx,DWORD PTR [ebp+0x0]
  406894:	dec    edx
  406895:	pop    edx
  406896:	push   edi
  406897:	add    DWORD PTR [esi],eax
  406899:	add    BYTE PTR [edx],al
  40689b:	or     al,BYTE PTR [esi]
  40689d:	(bad)  
  40689e:	(bad)  
  4068a0:	clc    
  4068a1:	cli    
  4068a2:	or     al,0xd
  4068a4:	mov    al,0x3
  4068a6:	sysret 
  4068a8:	add    al,BYTE PTR ds:0x6400900
  4068ae:	sbb    al,BYTE PTR [eax]
  4068b0:	add    cl,BYTE PTR [edi+eax*1]
  4068b3:	or     BYTE PTR [edx],cl
  4068b5:	push   es
  4068b6:	add    DWORD PTR ds:0xf0d0709,eax
  4068bc:	add    BYTE PTR [edx],cl
  4068be:	add    eax,0x90a0801
  4068c3:	add    al,0x9
  4068c5:	or     ecx,DWORD PTR [eax]
  4068c7:	or     cl,BYTE PTR ds:0x30005
  4068cd:	(bad)  
  4068ce:	syscall 
  4068d0:	push   cs
  4068d1:	or     al,BYTE PTR ds:0xb1dbc05
  4068d7:	add    al,0x13
  4068d9:	mov    ah,0x5
  4068db:	ret    0xb02e
  4068de:	or     DWORD PTR [ecx-0x36],ecx
  4068e1:	daa    
  4068e2:	fwait
  4068e3:	nop
  4068e4:	push   esp
  4068e5:	push   0x7024736d
  4068ea:	jne    0x406950
  4068ec:	ins    BYTE PTR es:[edi],dx
  4068ed:	jns    0x406959
  4068ef:	sub    bp,WORD PTR [ebx+0x7e]
  4068f3:	jb     0x406968
  4068f5:	sub    BYTE PTR [ecx+0x6f],ah
  4068f8:	sub    BYTE PTR [ecx+0x72],bh
  4068fb:	imul   esp,DWORD PTR ds:0x626c697f,0x72
  406902:	and    edx,DWORD PTR [ecx+0x6f]
  406905:	ins    DWORD PTR es:[edi],dx
  406906:	xor    esi,DWORD PTR [eax]
  406908:	or     BYTE PTR [ecx],cl
  40690a:	sub    al,0x37
  40690c:	push   es
  40690d:	add    BYTE PTR [ecx],cl
  40690f:	or     eax,DWORD PTR [ecx]
  406911:	add    BYTE PTR [edx],cl
  406913:	push   cs
  406914:	or     al,0x8
  406916:	or     cl,BYTE PTR [edx]
  406918:	or     eax,0xe0e0f0a
  40691d:	or     al,0xb
  40691f:	pop    es
  406920:	syscall 
  406922:	add    al,0x9
  406924:	add    BYTE PTR [ebx],al
  406926:	invd   
  406928:	or     al,0xa
  40692a:	invd   
  40692c:	or     al,0x5
  40692e:	or     al,BYTE PTR [edi]
  406930:	or     BYTE PTR ds:0x80f0c03,cl
  406936:	add    DWORD PTR [eax+eax*1],eax
  406939:	or     al,0x8
  40693b:	push   es
  40693c:	add    DWORD PTR [edx],eax
  40693e:	or     eax,0x60f0708
  406943:	add    BYTE PTR [esi],cl
  406945:	add    al,BYTE PTR [eax+ecx*1]
  406948:	add    al,BYTE PTR ds:0x6060701
  40694e:	or     cl,BYTE PTR [eax]
  406950:	add    eax,DWORD PTR [edi]
  406952:	add    eax,0x805080f
  406957:	or     DWORD PTR ds:0x906000f,eax
  40695d:	add    eax,DWORD PTR [ebx]
  40695f:	(bad)  
  406961:	add    eax,DWORD PTR [eax]
  406963:	or     eax,0x4020002
  406968:	add    cl,BYTE PTR [ebx]
  40696a:	add    BYTE PTR [edi],cl
  40696c:	add    eax,0x2050f0a
  406971:	push   cs
  406972:	or     BYTE PTR [ebx],al
  406974:	add    BYTE PTR [edx],cl
  406976:	add    eax,0x30b0803
  40697b:	add    eax,0xe0b0f00
  406980:	push   es
  406981:	add    eax,0x1040b0c
  406986:	add    ecx,DWORD PTR [eax]
  406988:	or     al,BYTE PTR [ecx]
  40698a:	or     BYTE PTR [eax],cl
  40698c:	push   es
  40698d:	or     eax,DWORD PTR [eax]
  40698f:	add    al,0x6
  406991:	or     eax,0x42500700
  406996:	add    DWORD PTR [esp+ecx*2],eax
  406999:	add    ecx,DWORD PTR [edi]
  40699b:	add    dl,BYTE PTR [esi]
  40699d:	pop    esi
  40699e:	dec    esi
  40699f:	sub    eax,0x80d0c05
  4069a4:	add    ecx,DWORD PTR [edi]
  4069a6:	pop    es
  4069a7:	add    ah,ch
  4069a9:	add    BYTE PTR [esi+0x2010d81],al
  4069af:	sbb    ecx,DWORD PTR [ecx+eax*2]
  4069b2:	or     BYTE PTR [edx],cl
  4069b4:	push   es
  4069b5:	sub    eax,DWORD PTR [ecx+ecx*1]
  4069b8:	pop    es
  4069b9:	or     eax,0x51a2000f
  4069be:	add    DWORD PTR [eax],ecx
  4069c0:	or     bl,BYTE PTR [ecx]
  4069c2:	add    al,0x9
  4069c4:	or     ebp,DWORD PTR [eax+0xa]
  4069c7:	or     eax,0x430005
  4069cc:	nop    DWORD PTR ds:0x5070b0e
  4069d3:	push   es
  4069d4:	or     DWORD PTR [ebx],ecx
  4069d6:	or     cl,BYTE PTR [eax+eax*1]
  4069d9:	or     al,0xf
  4069db:	(bad)  
  4069dd:	or     BYTE PTR ds:0xb0607,al
  4069e3:	add    BYTE PTR [eax],al
  4069e5:	mov    ah,0x1
  4069e7:	add    al,0x0
  4069e9:	add    ecx,DWORD PTR [ebx]
  4069eb:	or     ecx,DWORD PTR [ebx]
  4069ed:	or     ecx,DWORD PTR [ebx]
  4069ef:	or     eax,DWORD PTR [ebx+ecx*1]
  4069f2:	add    DWORD PTR [edi],eax
  4069f4:	or     BYTE PTR [ebx],al
  4069f6:	sbb    cl,BYTE PTR [eax]
  4069f8:	or     eax,DWORD PTR [edi+0x5]
  4069fb:	add    eax,0x718070a
  406a00:	add    BYTE PTR [ebx],dl
  406a02:	push   es
  406a03:	push   es
  406a04:	add    eax,DWORD PTR [eax]
  406a06:	add    al,BYTE PTR ds:0x6000813
  406a0c:	add    BYTE PTR [ecx],cl
  406a0e:	or     eax,DWORD PTR [ecx]
  406a10:	add    BYTE PTR [edx],cl
  406a12:	push   cs
  406a13:	or     al,0x8
  406a15:	mov    cl,BYTE PTR [edx]
  406a17:	or     eax,0xe0e0928
  406a1c:	or     al,0x9b
  406a1e:	pop    es
  406a1f:	jge    0x340723f
  406a25:	invd   
  406a27:	or     al,0xa
  406a29:	invd   
  406a2b:	or     al,0x5
  406a2d:	or     al,BYTE PTR [edi]
  406a2f:	or     BYTE PTR ds:0x80f0c03,cl
  406a35:	add    DWORD PTR [eax+eax*1],eax
  406a38:	or     al,0x8
  406a3a:	push   es
  406a3b:	add    DWORD PTR [edx],eax
  406a3d:	or     eax,0x60f0708
  406a42:	add    BYTE PTR [esi],cl
  406a44:	add    al,BYTE PTR [eax+ecx*1]
  406a47:	add    al,BYTE PTR ds:0x6060701
  406a4d:	or     cl,BYTE PTR [eax]
  406a4f:	add    eax,DWORD PTR [edi]
  406a51:	add    eax,0x805080f
  406a56:	or     DWORD PTR ds:0x906000f,eax
  406a5c:	add    eax,DWORD PTR [ebx]
  406a5e:	(bad)  
  406a60:	add    eax,DWORD PTR [eax]
  406a62:	or     eax,0x4020002
  406a67:	add    cl,BYTE PTR [ebx]
  406a69:	add    BYTE PTR [edi],cl
  406a6b:	add    eax,0x2050f0a
  406a70:	push   cs
  406a71:	or     BYTE PTR [ebx],al
  406a73:	add    BYTE PTR [edx],cl
  406a75:	add    eax,0x30b0803
  406a7a:	add    eax,0xe0b0f00
  406a7f:	push   es
  406a80:	add    eax,0x1040b0c
  406a85:	add    ecx,DWORD PTR [eax]
  406a87:	or     al,BYTE PTR [ecx]
  406a89:	or     BYTE PTR [eax],cl
  406a8b:	push   es
  406a8c:	dec    eax
  406a8d:	dec    edi
  406a8e:	inc    eax
  406a8f:	inc    ebx
  406a90:	or     eax,0xa3000700
  406a95:	inc    esp
  406a96:	add    al,0x0
  406a98:	add    bl,BYTE PTR [edx]
  406a9a:	add    cl,BYTE PTR [edi]
  406a9c:	add    BYTE PTR [edx+0x7],cl
  406a9f:	add    eax,0x308090c
  406aa4:	sysret 
  406aa6:	add    al,BYTE PTR ds:0x6000900
  406aac:	add    BYTE PTR [eax],al
  406aae:	add    cl,BYTE PTR [edi+eiz*1]
  406ab1:	or     BYTE PTR [edx],cl
  406ab3:	inc    bp
  406ab5:	inc    esp
  406ab6:	pop    ebp
  406ab7:	inc    esi
  406ab8:	or     eax,0xbd0a000f
  406abd:	add    DWORD PTR [eax],ecx
  406abf:	or     cl,BYTE PTR [ecx]
  406ac1:	or     DWORD PTR fs:[ebx],ecx
  406ac4:	or     BYTE PTR [eax],cl
  406ac6:	or     eax,0x490005
  406acb:	(bad)  
  406acc:	syscall 
  406ace:	push   cs
  406acf:	or     eax,DWORD PTR ds:0xb0d0605
  406ad5:	or     cl,BYTE PTR [eax+eax*1]
  406ad8:	dec    esp
  406ad9:	(bad)  
  406ada:	bswap  eax
  406adc:	dec    edx
  406add:	push   esi
  406ade:	push   esp
  406adf:	push   es
  406ae0:	or     eax,DWORD PTR [eax]
  406ae2:	add    BYTE PTR [eax],al
  406ae4:	loope  0x406aec
  406ae6:	add    al,0x0
  406ae8:	pop    es
  406ae9:	jnp    0x406af6
  406aeb:	or     ecx,DWORD PTR [ebx]
  406aed:	or     ecx,DWORD PTR [ebx]
  406aef:	push   es
  406af0:	or     ecx,DWORD PTR [ebp+0x7]
  406af3:	or     BYTE PTR [ebx],al
  406af5:	or     cl,BYTE PTR [eax]
  406af7:	or     eax,DWORD PTR [edi]
  406af9:	add    eax,0x8070a05
  406afe:	pop    es
  406aff:	add    BYTE PTR [ebx],al
  406b01:	push   es
  406b02:	push   es
  406b03:	ret    
  406b04:	imul   esp,DWORD PTR cs:[ecx+0x62],0x7c
  406b09:	popa   
  406b0a:	push   es
  406b0b:	add    BYTE PTR [ebx],ch
  406b0d:	or     eax,0x8e0a0001
  406b12:	or     al,0x8
  406b14:	or     al,BYTE PTR [edx]
  406b16:	or     eax,0xe420f0a
  406b1b:	or     al,0xb
  406b1d:	pop    es
  406b1e:	syscall 
  406b20:	add    al,0x9
  406b22:	add    BYTE PTR [ebx],al
  406b24:	invd   
  406b26:	or     al,0xa
  406b28:	dec    edi
  406b29:	or     BYTE PTR [eax*8+0x7f7b7524],cl
  406b30:	pusha  
  406b31:	or     al,0xf
  406b33:	or     BYTE PTR [ecx+0x80c011a],cl
  406b39:	xchg   esi,eax
  406b3a:	add    DWORD PTR [edx],eax
  406b3c:	or     eax,0x60f0628
  406b41:	push   esp
  406b42:	push   cs
  406b43:	add    al,BYTE PTR [eax+ecx*1]
  406b46:	add    al,BYTE PTR ds:0x6060701
  406b4c:	or     cl,BYTE PTR [eax]
  406b4e:	add    eax,DWORD PTR [edi]
  406b50:	inc    ebp
  406b51:	invd   
  406b53:	push   ebp
  406b54:	or     BYTE PTR [ecx],cl
  406b56:	add    eax,0x906000f
  406b5b:	add    eax,DWORD PTR [ebx]
  406b5d:	(bad)  
  406b5f:	add    eax,DWORD PTR [eax]
  406b61:	or     eax,0x4020002
  406b66:	add    cl,BYTE PTR [ebx]
  406b68:	add    BYTE PTR [edi],cl
  406b6a:	add    eax,0x2050f0a
  406b6f:	push   cs
  406b70:	or     BYTE PTR [ebx],al
  406b72:	add    BYTE PTR [edx],cl
  406b74:	add    eax,0x30b0803
  406b79:	add    eax,0xe0b0f00
  406b7e:	push   es
  406b7f:	add    eax,0x1040b0c
  406b84:	add    ecx,DWORD PTR [eax]
  406b86:	or     al,BYTE PTR [ecx]
  406b88:	or     BYTE PTR [eax+0x4000b06],bh
  406b8e:	push   es
  406b8f:	or     eax,0x7005d00
  406b94:	add    DWORD PTR [eax+eax*1],eax
  406b97:	add    cl,BYTE PTR [edx]
  406b99:	add    cl,BYTE PTR [edi]
  406b9b:	add    BYTE PTR [edi+eax*1],cl
  406b9e:	add    eax,0x3084d0c
  406ba3:	pop    edi
  406ba4:	pop    es
  406ba5:	add    al,BYTE PTR ds:0x6000900
  406bab:	add    BYTE PTR [eax],al
  406bad:	add    cl,BYTE PTR [edi+eax*1]
  406bb0:	or     BYTE PTR [edx],cl
  406bb2:	push   es
  406bb3:	add    DWORD PTR ds:0xf0d0709,eax
  406bb9:	add    BYTE PTR [edx],cl
  406bbb:	add    eax,0x90a0801
  406bc0:	add    al,0x9
  406bc2:	or     ecx,DWORD PTR [eax]
  406bc4:	or     cl,BYTE PTR ds:0x30005
  406bca:	(bad)  
  406bcb:	syscall 
  406bcd:	push   cs
  406bce:	or     eax,DWORD PTR ds:0xb0d0605
  406bd4:	or     cl,BYTE PTR [eax+eax*1]
  406bd7:	or     al,0xf
  406bd9:	invd   
  406bdb:	or     BYTE PTR ds:0xb0607,al
  406be1:	add    BYTE PTR [eax],al
  406be3:	add    al,0x0
  406be5:	add    al,0x0
  406be7:	pop    es
  406be8:	or     ecx,DWORD PTR [ebx]
  406bea:	or     ecx,DWORD PTR [ebx]
  406bec:	or     ecx,DWORD PTR [ebx]
  406bee:	push   es
  406bef:	or     eax,DWORD PTR [ecx]
  406bf1:	pop    es
  406bf2:	or     BYTE PTR [ebx],al
  406bf4:	or     cl,BYTE PTR [eax]
  406bf6:	or     eax,DWORD PTR [edi]
  406bf8:	add    eax,0x8070a05
  406bfd:	pop    es
  406bfe:	add    BYTE PTR [ebx],al
  406c00:	push   es
  406c01:	push   es
  406c02:	add    eax,DWORD PTR [eax]
  406c04:	add    al,BYTE PTR ds:0x6000803
  406c0a:	add    BYTE PTR [ecx],cl
  406c0c:	or     eax,DWORD PTR [ecx]
  406c0e:	add    BYTE PTR [edx],cl
  406c10:	push   cs
  406c11:	or     al,0x8
  406c13:	or     cl,BYTE PTR [edx]
  406c15:	or     eax,0xe0e0f0a
  406c1a:	or     al,0xb
  406c1c:	pop    es
  406c1d:	syscall 
  406c1f:	add    al,0x9
  406c21:	add    BYTE PTR [ebx],al
  406c23:	invd   
  406c25:	or     al,0xa
  406c27:	invd   
  406c29:	or     al,0x5
  406c2b:	or     al,BYTE PTR [edi]
  406c2d:	or     BYTE PTR ds:0x80f0c03,cl
  406c33:	add    DWORD PTR [eax+eax*1],eax
  406c36:	or     al,0x8
  406c38:	push   es
  406c39:	add    DWORD PTR [edx],eax
  406c3b:	or     eax,0x60f0708
  406c40:	add    BYTE PTR [esi],cl
  406c42:	add    al,BYTE PTR [eax+ecx*1]
  406c45:	add    al,BYTE PTR ds:0x6060701
  406c4b:	or     cl,BYTE PTR [eax]
  406c4d:	add    eax,DWORD PTR [edi]
  406c4f:	add    eax,0x805080f
  406c54:	or     DWORD PTR ds:0x906000f,eax
  406c5a:	add    eax,DWORD PTR [ebx]
  406c5c:	(bad)  
  406c5e:	add    eax,DWORD PTR [eax]
  406c60:	or     eax,0x4020002
  406c65:	add    cl,BYTE PTR [ebx]
  406c67:	add    BYTE PTR [edi],cl
  406c69:	add    eax,0x2050f0a
  406c6e:	push   cs
  406c6f:	or     BYTE PTR [ebx],al
  406c71:	add    BYTE PTR [edx],cl
  406c73:	add    eax,0x30b0803
  406c78:	add    eax,0xe0b0f00
  406c7d:	push   es
  406c7e:	add    eax,0x1040b0c
  406c83:	add    ecx,DWORD PTR [eax]
  406c85:	or     al,BYTE PTR [ecx]
  406c87:	or     BYTE PTR [eax],cl
  406c89:	push   es
  406c8a:	or     eax,DWORD PTR [eax]
  406c8c:	add    al,0x6
  406c8e:	or     eax,0x7000700
  406c93:	add    ebx,edi
  406c95:	and    eax,0xf428b1a
  406c9a:	mov    ecx,esp
  406c9c:	clc    
  406c9d:	and    BYTE PTR [eax],bl
  406c9f:	mov    WORD PTR [eax+0x3],cs
  406ca2:	test   bh,al
  406ca4:	std    
  406ca5:	and    BYTE PTR [eax],dl
  406ca7:	mov    BYTE PTR [eax+0x6],al
  406caa:	mov    eax,eax
  406cac:	std    
  406cad:	sub    DWORD PTR [ebx],ecx
  406caf:	mov    DWORD PTR [edx+0x6],ecx
  406cb2:	mov    al,ch
  406cb4:	mul    BYTE PTR [edx]
  406cb6:	add    eax,0x8e0a408e
  406cbb:	shl    edi,0x2f
  406cbe:	or     eax,0x830b4985
  406cc3:	retf   0x20f2
  406cc6:	add    BYTE PTR [edx-0x3a7bf0c0],al
  406ccc:	icebp  
  406ccd:	cs stc 
  406ccf:	test   DWORD PTR [esi+0xd],eax
  406cd2:	or     dl,0xf3
  406cd5:	and    eax,0x84f8ff4
  406cda:	add    ebp,0xfffffff8
  406cdd:	and    edi,edi
  406cdf:	add    BYTE PTR [eax+0x0],0x8f
  406ce3:	sar    bl,0x25
  406ce6:	das    
  406ce7:	mov    cl,BYTE PTR [ebx+0xb]
  406cea:	or     bl,0xf4
  406ced:	and    ebp,DWORD PTR [edi]
  406cef:	add    BYTE PTR [edi+0x8],0x88
  406cf3:	retf   0x2ef7
  406cf6:	daa    
  406cf7:	test   BYTE PTR [ebp+0xa],al
  406cfa:	mov    eax,cs
  406cfc:	clc    
  406cfd:	and    eax,0x34686f3
  406d02:	mov    eax,edx
  406d04:	push   esi
  406d05:	push   edx
  406d06:	sbb    eax,0x55
  406d09:	mov    eax,ds:0x416b21
  406d0e:	pop    edx
  406d0f:	scas   eax,DWORD PTR es:[edi]
  406d10:	cmp    BYTE PTR [ebp+0x4a],0xa
  406d14:	pop    ebp
  406d15:	loop   0x406ca4
  406d17:	icebp  
  406d18:	icebp  
  406d19:	repz add BYTE PTR [ebx],0x2b
  406d1d:	mov    es,WORD PTR [eax]
  406d1f:	sub    eax,0x98cc585a
  406d24:	pop    edi
  406d25:	adc    edi,0x6a2dad5b
  406d2b:	inc    edi
  406d2c:	or     BYTE PTR [esi-0x56a0f21d],cl
  406d32:	lea    esi,[ecx+0x40]
  406d35:	or     al,0x58
  406d37:	out    dx,al
  406d38:	jno    0x406d37
  406d3a:	repnz test DWORD PTR [edi+esi*8-0xa31e4f9],0x7ae28bdc
  406d46:	pop    edx
  406d47:	les    edx,FWORD PTR [ebp+0x50]
  406d4a:	pop    ebx
  406d4b:	xor    ecx,0xffffff8c
  406d4e:	fstp   QWORD PTR [ecx+0x5b]
  406d51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d52:	and    BYTE PTR [ecx+0x45],ch
  406d55:	jae    0xa2937741
  406d5b:	cmp    DWORD PTR [edi+0x43],0x0
  406d5f:	pop    ebp
  406d60:	jmp    0x482:0xfdfbfd3f
  406d67:	sub    ecx,DWORD PTR [esi+0x5c5f2b0e]
  406d6d:	push   ebp
  406d6e:	retf   
  406d6f:	xchg   ebx,eax
  406d70:	test   edx,ecx
  406d72:	jno    0x406d7d
  406d74:	neg    DWORD PTR [esi]
  406d76:	das    
  406d77:	gs inc eax
  406d79:	lar    ecx,si
  406d7c:	jb     0x406d82
  406d7e:	iret   
  406d7f:	mov    ebx,0x8bde805
  406d84:	or     al,BYTE PTR [ecx]
  406d86:	retf   
  406d87:	cwde   
  406d88:	or     ebx,0x74
  406d8b:	push   cs
  406d8c:	stc    
  406d8d:	sbb    BYTE PTR [eax],dh
  406d8f:	addr16 inc eax
  406d91:	pop    es
  406d92:	or     ah,al
  406d94:	jne    0x406d99
  406d96:	leave  
  406d97:	mov    dl,0xd
  406d99:	jmp    0xc457548
  406d9e:	into   
  406d9f:	cwde   
  406da0:	mov    BYTE PTR [edi],al
  406da2:	or     bl,0x71
  406da5:	xor    cl,BYTE PTR [edx+edx*8-0x74afe78e]
  406dac:	(bad)  
  406dad:	clc    
  406dae:	sbb    eax,0x541663e
  406db3:	push   eax
  406db4:	push   cs
  406db5:	int    0x7b
  406db7:	sbb    DWORD PTR [ebx+0x8b8c204],eax
  406dbd:	loopne 0x406d45
  406dbf:	or     DWORD PTR [ebx],ecx
  406dc1:	or     BYTE PTR [ebx-0x33773e3],al
  406dc7:	adc    eax,0xe456f3f
  406dcc:	add    al,ch
  406dce:	jo     0x406dbd
  406dd0:	into   
  406dd1:	mov    ebx,0xc6ce50b
  406dd6:	(bad)  
  406dd7:	jge    0x5657dfb7
  406ddd:	adc    al,0xff
  406de0:	adc    eax,0x446028
  406de5:	pop    esi
  406de6:	add    cl,bl
  406de8:	jg     0x406dd6
  406dea:	or     BYTE PTR [edx],0xc5
  406ded:	xchg   BYTE PTR [ecx+0x7],al
  406df0:	adc    DWORD PTR [esi],0x74b680e
  406df6:	in     eax,dx
  406df7:	pop    eax
  406df8:	push   cs
  406df9:	pop    es
  406dfa:	or     ah,al
  406dfc:	push   ebx
  406dfd:	push   ebp
  406dfe:	(bad)  
  406dff:	hlt    
  406e00:	mov    al,bl
  406e02:	and    dh,0x7c
  406e05:	mov    edi,DWORD PTR ds:0xb497002
  406e0b:	add    DWORD PTR [eax+eax*1-0x7b],esi
  406e0f:	fiadd  DWORD PTR [ebx+0xe18f5c9]
  406e15:	jg     0x406e65
  406e17:	push   cs
  406e18:	mov    al,dl
  406e1a:	jb     0x406e23
  406e1c:	(bad)  
  406e1d:	sbb    DWORD PTR [ecx-0x1cf0bc8b],ebx
  406e23:	add    ecx,DWORD PTR [edx+0xf7b10f4]
  406e29:	cmp    edi,eax
  406e2b:	or     dh,0x89
  406e2e:	xchg   esp,eax
  406e2f:	aaa    
  406e30:	push   0xcc330441
  406e35:	add    ch,0x8a
  406e38:	aam    0xe5
  406e3a:	mov    edx,0x5ef9f0f8
  406e3f:	push   ebp
  406e40:	ror    DWORD PTR [ecx-0x1e79fdb8],0x78
  406e47:	lea    edx,[edx]
  406e49:	cs loope 0x406dfa
  406e4c:	clc    
  406e4d:	cli    
  406e4e:	lock retf 
  406e50:	xchg   cl,dh
  406e52:	or     eax,0xe5671378
  406e57:	pop    esi
  406e58:	cmp    dl,bl
  406e5a:	jnp    0x406eb5
  406e5c:	push   ebp
  406e5d:	push   edi
  406e5e:	test   ah,al
  406e60:	mov    ebp,edx
  406e62:	jae    0x406e6f
  406e64:	xchg   BYTE PTR [esi+edi*1-0x6],dh
  406e68:	xchg   DWORD PTR [ebx+0x3c],esi
  406e6b:	std    
  406e6c:	repz sti 
  406e6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e6f:	jmp    0x406e97
  406e71:	cmp    al,0xd3
  406e73:	jl     0x406ea6
  406e75:	push   ebp
  406e76:	push   edx
  406e77:	mov    ecx,ecx
  406e79:	sbb    cl,0x8f
  406e7c:	int    0x7b
  406e7e:	sub    eax,DWORD PTR [edi+0x7e8500e0]
  406e84:	xor    edi,esi
  406e86:	test   DWORD PTR [edx+0x33],edi
  406e89:	(bad)  
  406e8a:	stc    
  406e8b:	cmc    
  406e8c:	test   eax,0x8e02ffc1
  406e91:	sar    BYTE PTR [ebx+eax*1+0x26020a02],0xc6
  406e99:	and    eax,0xf1a9f6c0
  406e9e:	inc    ecx
  406e9f:	ret    0x5f6
  406ea2:	jp     0x406eb0
  406ea4:	rep lods al,BYTE PTR ds:[esi]
  406ea6:	and    esi,0x3
  406ea9:	mov    ebx,eax
  406eab:	jmp    DWORD PTR [ebx-0x7d3aaba9]
  406eb1:	jmp    0x2b724cbb
  406eb6:	fnstenv [esi+0x21]
  406eb9:	add    edx,DWORD PTR [ebx+0x2d48886c]
  406ebf:	or     DWORD PTR [eax],ecx
  406ec1:	add    eax,0x12469d4
  406ec6:	fbstp  TBYTE PTR [ebx+0x2b]
  406ec9:	add    DWORD PTR [ebp+0x5f2129d2],edx
  406ecf:	push   ebp
  406ed0:	push   ecx
  406ed1:	leave  
  406ed2:	xchg   eax,eax
  406ed4:	pop    ebx
  406ed5:	xchg   al,cl
  406ed7:	add    ch,0x8c
  406eda:	iret   
  406edb:	(bad)  
  406edc:	jmp    0x406eee
  406ede:	mov    sp,cx
  406ee1:	mov    ebp,edx
  406ee3:	sar    esi,0x9
  406ee6:	jae    0x406eea
  406ee8:	clc    
  406ee9:	mov    al,ds:0xe088d782
  406eee:	add    al,0xfb
  406ef0:	test   eax,0x549bcb55
  406ef5:	push   ebx
  406ef6:	push   edx
  406ef7:	add    ecx,0x58
  406efa:	add    al,0x77
  406efd:	push   0x37
  406eff:	ret    
  406f00:	xor    ecx,ebx
  406f02:	mov    edx,0xaccc4cf
  406f07:	mov    dl,BYTE PTR [edi]
  406f09:	dec    ebp
  406f0a:	cmp    ebx,0xbdf47a2a
  406f10:	or     cl,BYTE PTR [edx+0x6c7b27f6]
  406f16:	mov    ?,edi
  406f18:	and    BYTE PTR [ebx+0x50],dh
  406f1b:	test   edi,edi
  406f1d:	sub    eax,0xf38f5c74
  406f22:	je     0x406fa2
  406f24:	push   ebp
  406f25:	mov    bh,dh
  406f27:	pop    ebp
  406f28:	jle    0x406f7c
  406f2a:	mov    dh,dh
  406f2c:	xor    edi,DWORD PTR [ecx+0x1c]
  406f2f:	sbb    BYTE PTR [edi],0x42
  406f32:	xor    bh,0x70
  406f35:	jb     0x406f80
  406f37:	xor    dh,0x50
  406f3a:	jae    0x406f88
  406f3c:	sbb    bl,0x7a
  406f3f:	and    ch,bh
  406f41:	or     al,0x86
  406f43:	fidiv  WORD PTR [ebp+0x2a]
  406f46:	xchg   ch,ch
  406f48:	cmp    cl,BYTE PTR [eax+0x2a720ef8]
  406f4e:	xor    ebp,edi
  406f50:	jg     0x406f7a
  406f52:	mov    BYTE PTR [ebx],cl
  406f54:	add    BYTE PTR [edi],0xc9
  406f57:	add    bl,bl
  406f59:	test   DWORD PTR [eax*2-0x1988297c],edx
  406f60:	cld    
  406f61:	leave  
  406f62:	jbe    0x406f66
  406f64:	test   edi,ecx
  406f66:	js     0x406fac
  406f68:	in     al,0xc
  406f6a:	inc    esp
  406f6b:	in     eax,0xe
  406f6d:	hlt    
  406f6e:	fdiv   DWORD PTR [eax+eax*2+0x7b]
  406f72:	dec    ebx
  406f73:	push   eax
  406f74:	sub    bl,bl
  406f76:	jmp    0x406fc6
  406f78:	cmc    
  406f79:	retf   
  406f7a:	mov    WORD PTR [ebx],ds
  406f7c:	dec    edx
  406f7d:	loopne 0x406f46
  406f7f:	mov    esi,0xef5f7fc
  406f84:	adc    BYTE PTR [esi],0x40
  406f87:	(bad)  
  406f88:	(bad)  [eax-0x27]
  406f8b:	(bad)  
  406f8c:	sti    
  406f8d:	data16 jb 0x406f94
  406f90:	sub    edi,0x32e18220
  406f96:	(bad)  
  406f97:	sti    
  406f98:	add    eax,0xe68c0e71
  406f9d:	sbb    DWORD PTR [ebx-0x2a8afd0c],eax
  406fa3:	or     dl,0xa
  406fa6:	aas    
  406fa7:	clc    
  406fa8:	ja     0x406f75
  406faa:	int    0xe7
  406fac:	or     al,0xb
  406fae:	fimul  WORD PTR [ebx-0x297cb0e5]
  406fb4:	jp     0x406f8b
  406fb6:	push   ebx
  406fb7:	xor    al,0xf7
  406fb9:	cmp    DWORD PTR [eax],0xc8525a56
  406fbf:	cwde   
  406fc0:	pop    esp
  406fc2:	jno    0x406fdd
  406fc4:	mov    BYTE PTR [ecx+0xe],al
  406fc7:	(bad)  
  406fc8:	cmp    al,0xe7
  406fca:	jg     0x406fd5
  406fcc:	test   DWORD PTR [edi],edi
  406fce:	out    0x7e,al
  406fd0:	push   es
  406fd1:	add    edi,DWORD PTR [esi-0x1cb1b134]
  406fd7:	or     eax,DWORD PTR [esi-0x3ef5fc3a]
  406fdd:	ret    
  406fde:	mov    eax,esp
  406fe0:	cmp    BYTE PTR [ecx],0x8
  406fe3:	addr16 dec ebx
  406fe5:	or     ecx,DWORD PTR [edx]
  406fe7:	jge    0x406fff
  406fe9:	pop    ebx
  406fea:	push   esp
  406feb:	pop    edx
  406fec:	jmp    0xf63d67b9
  406ff1:	pop    ecx
  406ff2:	pop    edi
  406ff3:	ins    DWORD PTR es:[edi],dx
  406ff4:	add    al,0x6f
  406ff6:	or     ch,BYTE PTR [edi-0x17]
  406ff9:	std    
  406ffa:	in     eax,dx
  406ffb:	or     eax,0x700b13f9
  407000:	inc    edx
  407001:	add    eax,0x5e5a515a
  407006:	ret    
  407007:	cdq    
  407008:	add    BYTE PTR [ebp+0x24],0xe
  40700c:	test   DWORD PTR [eax+0x2c],ebx
  40700f:	add    bh,ch
  407011:	dec    ebp
  407012:	push   cs
  407013:	or     DWORD PTR [esi],ecx
  407015:	push   cs
  407016:	or     al,0x7f
  407018:	sbb    BYTE PTR [edi+ecx*2+0x742ce00],al
  40701f:	stos   DWORD PTR es:[edi],eax
  407020:	sbb    ecx,DWORD PTR [edx+ecx*1+0x5c]
  407024:	pop    esi
  407025:	pop    ebx
  407026:	push   eax
  407027:	sub    DWORD PTR [ebp+0x0],0xe709c28e
  40702e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40702f:	(bad)  
  407030:	sti    
  407031:	push   ebx
  407033:	fstp   DWORD PTR [ebx+0x5e]
  407036:	pop    esp
  407037:	push   esi
  407038:	mov    al,0x6
  40703a:	clts   
  40703c:	add    ch,cl
  40703e:	mov    esp,eax
  407040:	pop    ebx
  407041:	push   esp
  407042:	push   edx
  407043:	push   eax
  407044:	mov    eax,0x84a7392
  407049:	mov    BYTE PTR [eax+0xd],al
  40704c:	mov    cl,al
  40704e:	jno    0x40707a
  407050:	sbb    BYTE PTR [edx+0x3],0x8b
  407054:	inc    esi
  407055:	or     eax,0x8f2b078a
  40705a:	fdivr  DWORD PTR [esi+0x18]
  40705d:	dec    ecx
  40705e:	mov    DWORD PTR [ebp+0x8],ebx
  407061:	mov    DWORD PTR [edi],ecx
  407063:	and    al,0x84
  407065:	jno    0x407039
  407067:	or     eax,DWORD PTR [eax-0x3f5850c]
  40706d:	(bad)  
  40706e:	(bad)  
  40706f:	fidivr WORD PTR [ebx+eiz*8+0x51]
  407073:	pop    esp
  407074:	pop    ebx
  407075:	pop    ebx
  407076:	int3   
  407077:	fwait
  407078:	pop    ebp
  407079:	push   eax
  40707a:	push   edx
  40707b:	pop    ecx
  40707c:	pop    edx
  40707d:	(bad)
  407081:	cmp    ecx,0x4b15ecb0
  407087:	add    BYTE PTR [edi],bh
  407089:	add    edx,DWORD PTR ds:0x8004760
  40708f:	xchg   ebp,eax
  407090:	add    BYTE PTR [ecx+edi*1],ah
  407093:	loope  0x407111
  407095:	cmp    cl,BYTE PTR [ebx-0x7ab927c8]
  40709b:	adc    BYTE PTR [eax-0x78f8b08a],ch
  4070a1:	repz je 0x4070af
  4070a4:	call   eax
  4070a6:	cmp    BYTE PTR [esi+eiz*1],0xc
  4070aa:	jae    0x4070bf
  4070ac:	mov    dl,0xe2
  4070ae:	adc    al,BYTE PTR [ebp+0x9]
  4070b1:	cmp    al,0x8
  4070b3:	pop    ss
  4070b4:	pusha  
  4070b5:	dec    edx
  4070b6:	add    eax,0xc4810675
  4070bb:	(bad)  
  4070bc:	fiadd  DWORD PTR [eax+0x1d18f5cf]
  4070c2:	pusha  
  4070c3:	inc    ebx
  4070c4:	add    ah,ah
  4070c6:	or     edi,DWORD PTR [esi]
  4070c8:	in     eax,0x74
  4070ca:	into   
  4070cb:	pop    edi
  4070cc:	pop    ebx
  4070cd:	push   edx
  4070ce:	push   ebp
  4070cf:	push   ecx
  4070d0:	iret   
  4070d1:	lea    ecx,[edi+ecx*1+0x5e]
  4070d5:	test   eax,0x6477094
  4070da:	mov    es,eax
  4070dc:	je     0x4070f3
  4070de:	(bad)  
  4070df:	adc    BYTE PTR [edi],dh
  4070e1:	leave  
  4070e2:	mov    WORD PTR [ebx+0xf],cs
  4070e5:	or     BYTE PTR [edi],0x2f
  4070e8:	add    BYTE PTR [edx],0x2f
  4070eb:	xchg   ch,cl
  4070ed:	not    DWORD PTR [esi]
  4070ef:	adc    ch,BYTE PTR [eax+0x4b]
  4070f2:	pop    es
  4070f3:	pop    edi
  4070f4:	mov    BYTE PTR [edi+0x5c00847],0xb
  4070fb:	jbe    0x407143
  4070fd:	add    esi,DWORD PTR [eax]
  4070ff:	adc    al,BYTE PTR [ebp+0x3]
  407102:	iret   
  407103:	add    eax,0xb49700a
  407108:	cmp    DWORD PTR [eax],edx
  40710a:	dec    edx
  40710b:	push   cs
  40710c:	scas   eax,DWORD PTR es:[edi]
  40710d:	xchg   esp,eax
  40710e:	jg     0x40715a
  407110:	or     eax,0xaeadcf39
  407115:	jns    0x407162
  407117:	pop    es
  407118:	xchg   BYTE PTR [eax],dl
  40711a:	mov    al,ds:0x8403407c
  40711f:	dec    edx
  407120:	or     BYTE PTR [ecx+0x54c781b],ch
  407126:	int3   
  407127:	add    dl,BYTE PTR [edi*2-0x1ff0f3bd]
  40712e:	mov    ds:0xcbf3fffb,eax
  407133:	xchg   esi,eax
  407134:	push   edx
  407135:	push   esp
  407136:	xchg   BYTE PTR [eax],dl
  407138:	mov    bh,BYTE PTR [edi+0x2]
  40713b:	mov    ebx,DWORD PTR [eax+0x6]
  40713e:	(bad)  
  40713f:	push   cs
  407140:	jmp    0xcc85:0x607048e
  407147:	add    BYTE PTR [eax+0x72],cl
  40714a:	cmc    
  40714b:	push   ecx
  40714c:	push   ebx
  40714d:	mov    BYTE PTR [ebx-0x7830cb37],0x3
  407154:	or     DWORD PTR [ebx+0x43],esp
  407157:	paddw  mm3,mm3
  40715a:	sbb    ebp,ecx
  40715c:	inc    edx
  40715d:	mov    edi,0xb427196
  407162:	mov    edx,DWORD PTR [eax+0x1d]
  407165:	and    DWORD PTR [eax+0x11],0xfc1479fd
  40716c:	ja     0x407198
  40716e:	mov    ?,WORD PTR [ecx+esi*4]
  407171:	add    BYTE PTR [ebx],al
  407173:	add    eax,0x51aefc00
  407178:	pop    eax
  407179:	int3   
  40717a:	into   
  40717b:	pop    es
  40717c:	add    al,0xc2
  40717e:	mov    al,cl
  407180:	pop    ecx
  407181:	push   edi
  407182:	pop    edi
  407183:	pop    ebp
  407184:	push   edi
  407185:	mov    al,0x94
  407187:	jno    0x4071cf
  407189:	or     eax,0x477027be
  40718e:	add    DWORD PTR [ebx+edi*2+0x19770a2a],eax
  407195:	xor    DWORD PTR [edx],0x7
  407198:	jno    0x4071b7
  40719a:	xchg   BYTE PTR [esi],cl
  40719c:	mov    cl,BYTE PTR [ebx]
  40719e:	and    esi,DWORD PTR [ecx]
  4071a0:	lds    ecx,FWORD PTR [ecx+0x2412ff0f]
  4071a6:	cmp    DWORD PTR [esp+ecx*1],0x72
  4071aa:	out    0x89,eax
  4071ac:	cmp    eax,DWORD PTR ds:0xd074965
  4071b2:	jnp    0x4071ba
  4071b4:	cmc    
  4071b5:	adc    BYTE PTR [ebp+0x68],dl
  4071b8:	dec    edx
  4071b9:	or     DWORD PTR [edx+esi*2+0x37f0a23],eax
  4071c0:	xchg   BYTE PTR ds:0xf4f6003,bh
  4071c6:	add    eax,0xc5360e7b
  4071cb:	(bad)  
  4071cc:	dec    esi
  4071cd:	pop    es
  4071ce:	cmc    
  4071cf:	sbb    DWORD PTR [esp+ebp*2],ebx
  4071d2:	dec    edi
  4071d3:	js     0x70469f4c
  4071d9:	add    al,BYTE PTR [ebx+0x4064003d]
  4071df:	add    al,0x0
  4071e1:	jae    0x407212
  4071e3:	xor    BYTE PTR [eax+0x1b],0x8e
  4071e7:	hlt    
  4071e8:	jb     0x407200
  4071ea:	mov    al,al
  4071ec:	not    DWORD PTR [esi]
  4071ee:	push   ds
  4071ef:	push   0x6e8e074b
  4071f4:	sbb    cl,BYTE PTR [ebp+edi*2+0x2763b17]
  4071fb:	jb     0x407206
  4071fd:	test   esp,esi
  4071ff:	jno    0x407206
  407201:	pop    esi
  407202:	call   0xf5376cb2
  407207:	(bad)  
  407208:	adc    eax,0x84c6e2a
  40720d:	mov    dh,BYTE PTR [ecx+0x25]
  407210:	or     edi,DWORD PTR [edx+0xd]
  407213:	icebp  
  407214:	pop    edi
  407215:	das    
  407216:	xchg   DWORD PTR [ebp+ebp*1+0x4],esi
  40721a:	jge    0x407221
  40721c:	jmp    0x40723e
  40721e:	div    ebx
  407220:	cmc    
  407221:	mov    WORD PTR [ebx],?
  407223:	or     al,0x70
  407225:	adc    BYTE PTR [ebp+esi*1+0xf4c731d],al
  40722c:	or     BYTE PTR [ebp+0x2],dh
  40722f:	call   FWORD PTR [ecx]
  407231:	sbb    BYTE PTR [esi+0x41],dh
  407234:	add    ch,BYTE PTR [eax+ecx*1+0x50064f67]
  40723b:	out    0x96,al
  40723d:	(bad)  
  40723e:	idiv   ebp
  407240:	mov    es,WORD PTR [edx]
  407242:	mov    esi,?
  407244:	(bad)  
  407245:	icebp  
  407246:	mov    cl,0x8
  407248:	pop    es
  407249:	add    eax,0xe1a0fb0f
  40724e:	popa   
  40724f:	cli    
  407250:	lock call FWORD PTR [esp+edx*2+0x5c]
  407255:	pop    ebp
  407256:	push   esp
  407257:	leave  
  407258:	mov    al,ds:0x426d00
  40725d:	jmp    0x95cc:0xfff4fd1a
  407264:	sbb    DWORD PTR [edi],0x137ad080
  40726a:	les    eax,FWORD PTR [eax]
  40726c:	or     al,BYTE PTR ds:0x49800803
  407272:	std    
  407273:	dec    ecx
  407274:	jae    0x40727a
  407276:	icebp  
  407277:	dec    esp
  407278:	std    
  407279:	jns    0x40727c
  40727b:	push   esp
  40727c:	mov    WORD PTR [ecx-0x10],es
  40727f:	loop   0x407286
  407281:	repz idiv ecx
  407284:	push   ebx
  407285:	ret    
  407286:	pop    esi
  407288:	pop    esi
  407289:	push   esi
  40728a:	mov    es,ebx
  40728c:	mov    ss,edi
  40728e:	(bad)  
  40728f:	adc    eax,DWORD PTR [edi-0x38e98928]
  407295:	sysret 
  407297:	add    eax,0x49830d0c
  40729c:	test   DWORD PTR [esi+0x7e],0xf843ff08
  4072a3:	jae    0x4072ad
  4072a5:	lea    eax,[eax-0xc]
  4072a8:	out    dx,eax
  4072a9:	shl    eax,cl
  4072ab:	stc    
  4072ac:	inc    BYTE PTR [esi+0x7a4303ca]
  4072b2:	fist   DWORD PTR [esi+ebx*2-0x3e]
  4072b6:	or     edx,0xffffff8c
  4072b9:	(bad)  
  4072ba:	jge    0x4072e4
  4072bc:	add    DWORD PTR [eax-0xb],0x44
  4072c0:	jg     0x4072db
  4072c2:	push   eax
  4072c3:	pop    ebp
  4072c4:	test   BYTE PTR [edi-0xe],al
  4072c7:	jecxz  0x407326
  4072c9:	add    eax,0xc8820d06
  4072ce:	push   esp
  4072cf:	push   edx
  4072d0:	xchg   DWORD PTR [edi-0xd],eax
  4072d3:	loopne 0x407345
  4072d5:	(bad)  
  4072d6:	clc    
  4072d7:	stc    
  4072d8:	push   ecx
  4072d9:	pop    eax
  4072da:	jmp    0x4072df
  4072dc:	sti    
  4072dd:	inc    edx
  4072de:	cld    
  4072df:	xchg   DWORD PTR [edi],edx
  4072e1:	mov    ds,ecx
  4072e3:	jg     0x4072fd
  4072e5:	add    BYTE PTR [ecx-0x2],0x42
  4072e9:	jge    0x4072f5
  4072eb:	test   DWORD PTR [ecx-0xe],0x478a037d
  4072f2:	std    
  4072f3:	loop   0x40728c
  4072f5:	repnz clc 
  4072f7:	inc    eax
  4072f9:	mov    eax,DWORD PTR [esi+0x3]
  4072fc:	test   eax,edx
  4072fe:	jno    0x40730a
  407300:	or     DWORD PTR [edx-0x2],0x41
  407304:	ja     0x40730e
  407306:	inc    BYTE PTR [edx-0xe]
  407309:	mov    DWORD PTR [ecx*4-0x7ee18128],ebx
  407310:	inc    ebp
  407311:	test   BYTE PTR [edi+0x70],0x6
  407315:	clc    
  407316:	inc    ebp
  407317:	std    
  407318:	jno    0x40731b
  40731a:	lea    eax,[ecx-0x9]
  40731d:	loopne 0x407389
  40731f:	lock lock test edi,0x76c78f95
  407327:	sub    DWORD PTR [ebx-0x71],edx
  40732a:	iret   
  40732b:	add    al,BYTE PTR [edx-0x1fa3011c]
  407331:	cmp    eax,0x52f2fdfb
  407336:	popa   
  407337:	enter  0x242,0xf0
  40733b:	add    al,BYTE PTR [ebx+ecx*4]
  40733e:	ret    0x5b0d
  407341:	mov    ss,WORD PTR [esi-0x6]
  407344:	int    0x48
  407346:	sti    
  407347:	push   es
  407348:	add    eax,0x39c6080f
  40734d:	leave  
  40734e:	(bad)  
  40734f:	lahf   
  407350:	push   ebx
  407351:	push   eax
  407352:	pop    esi
  407353:	mov    al,al
  407355:	xchg   ah,bl
  407357:	mov    cl,bh
  407359:	test   dl,bh
  40735b:	call   0xf53e6f26
  407360:	mov    esi,esi
  407362:	mov    ebp,cs
  407364:	mov    dh,bl
  407366:	jbe    0x40736f
  407368:	add    ecx,0xdcedfa89
  40736e:	repnz hlt 
  407370:	cld    
  407371:	mov    eax,ds
  407373:	out    0xe7,eax
  407375:	lock stc 
  407377:	cli    
  407378:	test   DWORD PTR [eax],esi
  40737a:	pop    ebx
  40737b:	pop    edi
  40737c:	pop    eax
  40737d:	retf   
  40737e:	add    ecx,0x59ea835d
  407384:	push   eax
  407385:	pop    DWORD PTR [ebx+0x5]
  407388:	push   eax
  407389:	push   esi
  40738a:	push   0x7
  40738c:	imul   eax,DWORD PTR [eax+ebp*8],0x4b
  407390:	repz std 
  407392:	lock pop ebp
  407394:	into   
  407395:	add    eax,DWORD PTR ds:0xe1815f9c
  40739b:	mov    dh,0x6
  40739d:	add    al,BYTE PTR ds:0xf9abe100
  4073a3:	(bad)  
  4073a4:	call   FWORD PTR [eax-0x31]
  4073a7:	xchg   edi,eax
  4073a8:	(bad)  
  4073a9:	retf   0x272
  4073ac:	mov    cs,WORD PTR [ecx-0x5]
  4073af:	into   
  4073b0:	mov    dl,dl
  4073b2:	jle    0x4073ee
  4073b4:	mov    al,BYTE PTR [eax]
  4073b6:	pop    eax
  4073b8:	or     ecx,DWORD PTR [ebp-0xd0a090f]
  4073be:	push   esi
  4073bf:	push   esi
  4073c0:	push   esp
  4073c1:	mov    esp,ecx
  4073c3:	xchg   bl,dl
  4073c5:	test   DWORD PTR [edx-0x7],esi
  4073c8:	mov    ss,WORD PTR [eax-0xf]
  4073cb:	or     dh,al
  4073cd:	xor    eax,0xe71878ce
  4073d2:	and    cl,BYTE PTR [edx]
  4073d4:	add    eax,0x8bfb8f07
  4073d9:	dec    esi
  4073da:	cld    
  4073db:	(bad)  
  4073dc:	adc    eax,DWORD PTR ds:0xf167effa
  4073e2:	hlt    
  4073e3:	hlt    
  4073e4:	push   esp
  4073e5:	push   ebp
  4073e6:	pop    ebp
  4073e7:	enter  0x14e9,0xa
  4073eb:	add    ecx,DWORD PTR [edx]
  4073ed:	or     DWORD PTR [eax],0xffffff8e
  4073f0:	cld    
  4073f1:	out    dx,al
  4073f2:	loop   0x4073b8
  4073f4:	(bad)  
  4073f5:	aad    0x74
  4073f7:	bound  eax,QWORD PTR [ebx-0x457bf331]
  4073fd:	sti    
  4073fe:	cld    
  4073ff:	idiv   DWORD PTR [ebx]
  407401:	push   ss
  407402:	je     0x407459
  407404:	xor    BYTE PTR [ecx],cl
  407406:	je     0x40740c
  407408:	pop    esi
  407409:	pop    ebp
  40740a:	loopne 0x4073af
  40740c:	hlt    
  40740d:	repnz cmc 
  40740f:	push   ebp
  407410:	push   esi
  407411:	out    0x96,eax
  407413:	hlt    
  407414:	clc    
  407415:	lock push esi
  407417:	push   edx
  407418:	pop    esi
  407419:	mov    eax,edx
  40741b:	xchg   dh,al
  40741d:	pop    esp
  40741e:	or     DWORD PTR [esp+esi*8+0xf],0xf3eff643
  407426:	repz cld 
  407428:	repz xchg bh,cl
  40742b:	mov    dh,al
  40742d:	mov    esp,edx
  40742f:	or     DWORD PTR [ebp-0x3],0xffffffea
  407433:	adc    al,0xf2
  407435:	clc    
  407436:	lock (bad) 
  407438:	cli    
  407439:	xchg   edx,esi
  40743b:	pop    DWORD PTR [esi-0x2]
  40743e:	push   es
  40743f:	push   edx
  407440:	sti    
  407441:	out    dx,al
  407442:	or     al,0xf0
  407444:	idiv   esp
  407446:	pop    edi
  407447:	mov    ebp,?
  407449:	(bad)  
  40744a:	cli    
  40744b:	jl     0x407457
  40744d:	cli    
  40744e:	inc    eax
  40744f:	clc    
  407450:	out    dx,al
  407451:	push   0xfffffffd
  407453:	cld    
  407454:	lock push ebp
  407456:	pop    ebp
  407457:	pop    ebx
  407458:	into   
  407459:	mov    ecx,edx
  40745b:	jmp    0x4074b9
  40745d:	cld    
  40745e:	hlt    
  40745f:	inc    DWORD PTR [esi-0x5b91c31]
  407465:	std    
  407466:	icebp  
  407467:	retf   
  407468:	xchg   al,al
  40746a:	jle    0x407478
  40746c:	mov    BYTE PTR [eax-0xd],bl
  40746f:	inc    ecx
  407470:	jnp    0x407475
  407472:	lock dec ebx
  407474:	test   ch,0x8e
  407477:	int3   
  407478:	mov    es,esp
  40747a:	jne    0x40747d
  40747c:	retf   
  40747d:	or     bh,BYTE PTR [ecx+0xb461fe1]
  407483:	ret    
  407484:	(bad)  
  407485:	push   ss
  407486:	mov    dl,dl
  407488:	jae    0x4074c1
  40748a:	mov    WORD PTR [ebx-0x4],cs
  40748d:	dec    ecx
  40748e:	jbe    0x4074cb
  407490:	push   ecx
  407491:	xchg   bl,al
  407493:	xchg   DWORD PTR [ebp-0x7],eax
  407496:	in     al,0x84
  407498:	idiv   ah
  40749a:	lock mov es,eax
  40749d:	mov    es,WORD PTR [ebx]
  40749f:	adc    BYTE PTR [ebx],0x56
  4074a2:	mov    ecx,DWORD PTR [eax-0x2]
  4074a5:	in     al,0xa1
  4074a7:	icebp  
  4074a8:	cmc    
  4074a9:	stc    
  4074aa:	pop    ecx
  4074ab:	mov    es,WORD PTR [ecx-0x1]
  4074ae:	inc    esp
  4074af:	jae    0x4074be
  4074b1:	cmc    
  4074b2:	dec    ebp
  4074b3:	stc    
  4074b4:	jge    0x4074b8
  4074b6:	test   BYTE PTR [ecx+esi*8-0x1d],al
  4074ba:	ret    0xf2f2
  4074bd:	cli    
  4074be:	mov    edx,DWORD PTR [eax]
  4074c0:	pop    ebx
  4074c1:	xchg   bh,bl
  4074c3:	(bad)  
  4074c4:	out    0xb0,eax
  4074c6:	cli    
  4074c7:	cli    
  4074c8:	stc    
  4074c9:	into   
  4074ca:	or     dl,0xe5
  4074cd:	mov    bl,0xf3
  4074cf:	lock lock retf 
  4074d2:	add    ebp,0x54
  4074d5:	or     ebx,0x74
  4074d8:	sub    eax,0x81fc5c8b
  4074dd:	(bad)  [ebx+0x2d]
  4074e0:	inc    ecx
  4074e1:	ja     0x4074f3
  4074e3:	xor    dl,cl
  4074e5:	jnp    0x4074fb
  4074e7:	sub    ah,dl
  4074e9:	(bad)  
  4074ea:	retf   0x1176
  4074ed:	xor    bl,dh
  4074ef:	jp     0x407505
  4074f1:	or     eax,ebp
  4074f3:	add    DWORD PTR [ebx+0x24],0xb
  4074f7:	out    dx,al
  4074f8:	push   edx
  4074f9:	std    
  4074fa:	(bad)  
  4074fb:	std    
  4074fc:	out    dx,al
  4074fd:	adc    bh,BYTE PTR [ecx]
  4074ff:	shr    ch,cl
  407501:	in     eax,0x80
  407503:	shr    dl,cl
  407505:	jmp    0x407488
  407507:	dec    edx
  407508:	sub    BYTE PTR [eax],al
  40750a:	loop   0x40756b
  40750c:	lock cmc 
  40750e:	lock push ebp
  407510:	int3   
  407511:	or     BYTE PTR [ebx],cl
  407513:	les    ebx,FWORD PTR [ebx+edx*2+0x53]
  407517:	add    bl,0x8a
  40751a:	fld    DWORD PTR [ecx-0x8521d3d]
  407520:	repz cli 
  407522:	adc    DWORD PTR [ecx*4-0x7bc38821],0x7c4afd42
  40752d:	es xor eax,ecx
  407530:	jl     0x407556
  407532:	mov    bh,dh
  407534:	jns    0x407563
  407536:	das    
  407537:	icebp  
  407538:	aaa    
  407539:	int    0x7a
  40753b:	or     cl,BYTE PTR [ebx+0x7fe28ca]
  407541:	hlt    
  407542:	xchg   DWORD PTR [esp+edx*1],ecx
  407545:	out    dx,eax
  407546:	add    esi,esi
  407548:	idiv   edx
  40754a:	sbb    DWORD PTR [edx],0xffffff8c
  40754d:	xlat   BYTE PTR ds:[ebx]
  40754e:	mov    edx,DWORD PTR [ebp+esi*8+0x2a]
  407552:	stc    
  407553:	out    0xa2,eax
  407555:	add    eax,DWORD PTR [eax]
  407557:	or     eax,0xc7595e5d
  40755c:	xchg   ebx,ecx
  40755e:	je     0x4075b9
  407560:	push   esi
  407561:	pop    esp
  407562:	pop    eax
  407563:	push   eax
  407564:	mov    ecx,ebp
  407566:	adc    ebp,0x118ec589
  40756c:	pop    edx
  40756d:	mov    ss,ecx
  40756f:	jno    0x407574
  407571:	test   BYTE PTR [ecx-0xe],bl
  407574:	dec    ecx
  407575:	js     0x407585
  407577:	cmp    bh,bl
  407579:	cmp    ah,dl
  40757b:	jbe    0x407585
  40757d:	mov    bh,bl
  40757f:	sub    DWORD PTR [ebp-0x9],0xffffff89
  407583:	hlt    
  407584:	pop    es
  407585:	out    0xe8,eax
  407587:	jb     0x407589
  407589:	pop    es
  40758a:	add    DWORD PTR [ecx+edi*1-0x26],ebx
  40758e:	jg     0x407590
  407590:	test   BYTE PTR [esi],bl
  407592:	xchg   DWORD PTR [ecx],eax
  407594:	mov    BYTE PTR [eax],bl
  407596:	and    al,BYTE PTR [ebx-0x2cd10cb5]
  40759c:	add    al,0xc2
  40759e:	or     al,bh
  4075a0:	out    dx,al
  4075a1:	stos   DWORD PTR es:[edi],eax
  4075a2:	clc    
  4075a3:	std    
  4075a4:	repz mov ss,eax
  4075a7:	adc    DWORD PTR [eax],0xfd08ec88
  4075ad:	in     eax,0x91
  4075af:	clc    
  4075b0:	cmc    
  4075b1:	cli    
  4075b2:	pop    esp
  4075b3:	push   edi
  4075b4:	push   esp
  4075b5:	push   edx
  4075b6:	(bad)  
  4075b7:	cdq    
  4075b8:	mov    cs,eax
  4075ba:	jle    0x407609
  4075bc:	adc    dl,0x77
  4075bf:	xor    DWORD PTR [ecx+ebx*2+0x52],ebx
  4075c3:	xchg   ebp,ecx
  4075c5:	mov    edx,ss
  4075c7:	lea    eax,[edx-0x9]
  4075ca:	pop    ebp
  4075cb:	xchg   DWORD PTR [esi-0x10],edx
  4075ce:	inc    ebp
  4075cf:	ja     0x4075e4
  4075d1:	add    BYTE PTR [ebx],0x41
  4075d4:	das    
  4075d5:	fidivr DWORD PTR [esi+0x14]
  4075d8:	repnz stos BYTE PTR es:[edi],al
  4075da:	jne    0x4075f0
  4075dc:	mov    esp,ecx
  4075de:	pop    ebp
  4075df:	pop    esp
  4075e0:	sbb    dl,0xf8
  4075e3:	lods   eax,DWORD PTR ds:[esi]
  4075e4:	pop    ecx
  4075e5:	push   ebp
  4075e6:	jne    0x4075f3
  4075e8:	sbb    edx,0x3651e4e1
  4075ee:	(bad)
  4075f1:	ss enter 0x5ac4,0x8a
  4075f6:	(bad)  
  4075f7:	das    
  4075f8:	rcr    DWORD PTR [edi+0x5c],cl
  4075fb:	pop    esi
  4075fc:	rol    BYTE PTR [ebp+0x5f530640],0x5c
  407603:	mov    bl,al
  407605:	sbb    eax,0x3d
  407608:	test   DWORD PTR [edi-0x7bbd8c28],0x7fcc8b0d
  407612:	and    al,0x8c
  407614:	jge    0x407612
  407616:	or     BYTE PTR [ebp+0x1e],dh
  407619:	mov    eax,fs
  40761b:	add    al,0x89
  40761d:	int    0x1
  40761f:	pop    esp
  407620:	mov    edx,gs
  407622:	out    dx,eax
  407623:	jno    0x40761f
  407625:	cld    
  407626:	repz push edi
  407628:	mov    eax,ecx
  40762a:	or     al,0x89
  40762c:	jno    0xa0573a8
  407632:	push   cs
  407633:	pop    es
  407634:	in     al,0x2e
  407636:	mov    esi,ebx
  407638:	jmp    0xc088:0xfafdf4e3
  40763f:	lea    eax,ds:0x1777c88f
  407645:	mov    ebp,?
  407647:	or     DWORD PTR [ebp-0xc],0x30
  40764b:	hlt    
  40764c:	jae    0x407650
  40764e:	(bad)  
  40764f:	clc    
  407650:	jmp    0x40764a
  407652:	clc    
  407653:	cmc    
  407654:	cld    
  407655:	mov    ebp,edx
  407657:	jmp    0x3b82:0xfdfbfe08
  40765e:	push   eax
  40765f:	pop    ebx
  407660:	push   ecx
  407661:	int3   
  407662:	mov    es,edx
  407664:	mov    esi,0xfdd9ea09
  407669:	cli    
  40766a:	cld    
  40766b:	retf   
  40766c:	mov    es,ebx
  40766e:	jno    0x407680
  407670:	pop    edi
  407671:	popa   
  407672:	push   cs
  407673:	out    dx,al
  407674:	imul   edi,edx,0xc384fbf4
  40767a:	pop    es
  40767b:	mov    fs,ebp
  40767d:	div    edi
  40767f:	stc    
  407680:	enter  0x448d,0x6
  407684:	mov    dl,BYTE PTR [eax]
  407686:	adc    dl,0x73
  407689:	pop    es
  40768a:	push   esi
  40768b:	call   0xf13e72f6
  407690:	ret    
  407691:	add    DWORD PTR [edi+0x5],0xd18d1d87
  407698:	jnp    0x4076a3
  40769a:	lds    eax,FWORD PTR ds:0x6000900
  4076a0:	push   eax
  4076a1:	push   edx
  4076a2:	jmp    0xc25e:0xf5f7f141
  4076a9:	mov    BYTE PTR [ecx+0x7],cl
  4076ac:	pop    esi
  4076ad:	pop    ecx
  4076ae:	mov    ecx,ecx
  4076b0:	mov    edi,ss
  4076b2:	or     DWORD PTR [ecx],0xffffff8c
  4076b5:	les    edi,FWORD PTR [ebp+0x7]
  4076b8:	iret   
  4076b9:	or     DWORD PTR ds:0x50030005,ecx
  4076bf:	out    0x3f,eax
  4076c1:	repz icebp 
  4076c3:	hlt    
  4076c4:	xchg   dh,al
  4076c6:	add    al,BYTE PTR [ebx+0x7e]
  4076c9:	loop   0x40771d
  4076cb:	pop    ebx
  4076cc:	iret   
  4076cd:	or     BYTE PTR [edi+0x8],0x8d
  4076d1:	xlat   BYTE PTR ds:[ebx]
  4076d2:	or     BYTE PTR [edx-0x49],al
  4076d8:	(bad)  
  4076dc:	out    dx,al
  4076dd:	add    al,0x8f
  4076df:	mov    edx,0x57f4f4f4
  4076e4:	pop    ecx
  4076e5:	push   ecx
  4076e6:	out    dx,eax
  4076e7:	or     ebp,esi
  4076e9:	cmc    
  4076ea:	test   DWORD PTR [esi+0x7b810ac7],0xc3f8f7f8
  4076f4:	jmp    0x8ec1:0xfffcf9d1
  4076fb:	ret    
  4076fc:	pop    ebx
  4076fd:	push   esi
  4076fe:	push   ecx
  4076ff:	push   ebp
  407700:	mov    bh,cl
  407702:	add    eax,0x5cf1f5f0
  407707:	mov    ecx,esi
  407709:	test   BYTE PTR [esi+0x2a1a86fb],0x87
  407710:	repz cmp cl,0x7a
  407714:	or     eax,0x77ebc782
  407719:	div    ebx
  40771b:	cmc    
  40771c:	in     al,0x55
  40771e:	sub    DWORD PTR [ebx+0xb],0x4f2f586
  407725:	or     al,0xf
  407727:	jne    0x407752
  407729:	push   edx
  40772a:	lea    ecx,[eax+0x2c]
  40772d:	push   cs
  40772e:	mov    cl,BYTE PTR [esi+0x29]
  407731:	or     al,0xbd
  407733:	lock add DWORD PTR [eax],eax
  407736:	push   cs
  407737:	jmp    0xdf8a:0xfafdf440
  40773e:	sbb    ebp,0x74
  407741:	pop    es
  407742:	mov    ss,WORD PTR [ebx+0x21]
  407745:	or     eax,DWORD PTR [ebx-0x123d7c3e]
  40774b:	add    BYTE PTR ss:[esi],al
  40774e:	or     eax,ebp
  407750:	sub    DWORD PTR [edi+edx*8-0x2e793878],eax
  407757:	call   0xb427dfa
  40775c:	push   esi
  40775d:	test   BYTE PTR [edx],al
  40775f:	add    DWORD PTR [ebx+0x21],0xebdb8506
  407766:	push   ss
  407767:	idiv   dl
  407769:	cld    
  40776a:	adc    ebx,0xffffff86
  40776d:	fidivr WORD PTR [ebp+0xd]
  407770:	cmp    ch,dl
  407772:	(bad)  
  407773:	ret    0xd887
  407776:	in     al,dx
  407777:	jl     0x40777a
  407779:	or     BYTE PTR [edx],cl
  40777b:	or     ah,0xc
  40777e:	push   ss
  40777f:	or     eax,DWORD PTR [eax]
  407781:	pop    ecx
  407782:	pop    ecx
  407783:	push   ebx
  407784:	pop    ebx
  407785:	les    ecx,FWORD PTR [ebx+0xfcd84c7]
  40778b:	xchg   BYTE PTR [esi],cl
  40778d:	std    
  40778e:	lock call FWORD PTR [esi+edx*2+0x57]
  407793:	in     al,0x41
  407795:	std    
  407796:	cld    
  407797:	lock add dl,0xa
  40779b:	test   ch,cl
  40779d:	(bad)  
  40779e:	stc    
  40779f:	call   FWORD PTR [edx-0x3]
  4077a2:	mov    cs,WORD PTR ds:[edx]
  4077a5:	loop   0x4077f3
  4077a7:	hlt    
  4077a8:	cli    
  4077a9:	test   ah,0x9d
  4077ac:	ds leave 
  4077ae:	(bad)  
  4077af:	xlat   BYTE PTR ds:[ebx]
  4077b0:	jne    0x4077d7
  4077b2:	pop    eax
  4077b3:	outs   dx,DWORD PTR ds:[esi]
  4077b4:	aas    
  4077b5:	add    edi,DWORD PTR [edi+0x28]
  4077b8:	ins    BYTE PTR es:[edi],dx
  4077b9:	ss dec edi
  4077bb:	add    dh,BYTE PTR [edi+0x17]
  4077be:	imul   esi,DWORD PTR [edi+ecx*2],0x630b7f0a
  4077c5:	cmp    eax,0x97e0d47
  4077ca:	or     esi,0x7
  4077cd:	in     al,0xec
  4077cf:	mov    eax,edi
  4077d1:	add    eax,0x8302c985
  4077d6:	ret    0x8906
  4077d9:	aad    0x5a
  4077db:	cs fcmovu st,st(2)
  4077de:	loop   0x4077c2
  4077e0:	scas   eax,DWORD PTR es:[edi]
  4077e1:	hlt    
  4077e2:	stc    
  4077e3:	hlt    
  4077e4:	ret    0x488a
  4077e7:	add    ebx,DWORD PTR [ebp+0x58]
  4077ea:	pop    edx
  4077eb:	mov    ss,edx
  4077ed:	xor    al,0xca
  4077ef:	cmc    
  4077f0:	outs   dx,BYTE PTR ds:[esi]
  4077f1:	test   al,0x75
  4077f3:	add    ecx,esi
  4077f5:	xlat   BYTE PTR ds:[ebx]
  4077f6:	pop    ebx
  4077f7:	add    ebx,eax
  4077f9:	pop    ebp
  4077fa:	pop    esp
  4077fb:	loope  0x407785
  4077fd:	stc    
  4077fe:	push   esi
  407800:	enter  0x408c,0xa
  407804:	aas    
  407805:	lds    ecx,FWORD PTR [ebp-0x7ef18128]
  40780b:	inc    ebp
  40780c:	repnz out 0xe6,eax
  40780f:	cmc    
  407810:	clc    
  407811:	lock (bad) 
  407813:	xchg   esp,eax
  407814:	mov    eax,es
  407816:	ja     0x407823
  407818:	retf   
  407819:	pushf  
  40781a:	or     cl,BYTE PTR [edi]
  40781c:	mov    al,0x8a
  40781e:	push   ds
  40781f:	dec    edx
  407820:	pop    es
  407821:	retf   
  407822:	xchg   bl,al
  407824:	mov    edi,ecx
  407826:	jl     0x40782c
  407828:	pop    DWORD PTR [eax-0x10]
  40782b:	fldz   
  40782d:	ret    0xcd89
  407830:	pop    ebx
  407831:	push   ecx
  407832:	pop    eax
  407833:	push   ebx
  407834:	push   ecx
  407835:	test   eax,edi
  407837:	(bad)  
  407838:	loopne 0x4077c3
  40783a:	ret    0xe3e9
  40783d:	stc    
  40783e:	stc    
  40783f:	cmc    
  407840:	sbb    ebx,0xffffff82
  407843:	fidivr WORD PTR [ebx+0x4b]
  407846:	mov    cs,WORD PTR [ebp+0x9]
  407849:	in     eax,dx
  40784a:	fcos   
  40784c:	stc    
  40784d:	test   BYTE PTR [eax+0x300e82f3],0xe8
  407854:	sbb    esp,edi
  407856:	(bad)  
  407857:	std    
  407858:	lea    eax,[esi]
  40785a:	das    
  40785b:	test   ecx,edi
  40785d:	jnp    0x407864
  40785f:	test   bl,cl
  407861:	add    edi,eax
  407863:	adc    DWORD PTR [edi],0x24
  407866:	add    DWORD PTR [eax+0x3],0xfaf6e9e0
  40786d:	inc    DWORD PTR [eax+eax*8+0x88ecf0d]
  407874:	das    
  407875:	mov    DWORD PTR ds:0xe9cd8373,edx
  40787b:	fscale 
  40787d:	stc    
  40787e:	hlt    
  40787f:	mov    eax,ecx
  407881:	lea    ebx,[ecx]
  407883:	and    al,0xef
  407885:	sti    
  407886:	cli    
  407887:	(bad)  
  407888:	sti    
  407889:	pop    edx
  40788a:	pop    edi
  40788b:	push   ebp
  40788c:	pop    esp
  40788d:	push   esp
  40788e:	ret    
  40788f:	pushf  
  407890:	push   esp
  407891:	push   ebx
  407892:	pop    esi
  407893:	pop    ebp
  407894:	adc    eax,0x4989c73e
  40789a:	xchg   esp,eax
  40789b:	sbb    DWORD PTR [ebp+0x10374cf],eax
  4078a1:	dec    ebp
  4078a2:	sti    
  4078a3:	inc    edx
  4078a4:	jg     0x40789a
  4078a6:	shr    ch,1
  4078a8:	loope  0x407862
  4078aa:	lock lock call FWORD PTR [edx-0x74]
  4078af:	mov    DWORD PTR [ebx-0x7fef6ab2],0x79ca8df9
  4078b9:	jnp    0xc14f750a
  4078bf:	in     eax,dx
  4078c0:	cmp    dh,0xfa
  4078c3:	cli    
  4078c4:	dec    ebp
  4078c5:	js     0x4078a9
  4078c7:	push   eax
  4078c8:	push   esp
  4078c9:	call   0xf8316b88
  4078ce:	push   edx
  4078cf:	pop    ebx
  4078d0:	pop    esp
  4078d1:	pop    esi
  4078d2:	xchg   BYTE PTR [esp+edx*4],ah
  4078d5:	jmp    esp
  4078d7:	ret    
  4078d8:	push   edi
  4078d9:	push   esi
  4078da:	push   eax
  4078db:	or     ch,0x82
  4078de:	fdiv   QWORD PTR [edx]
  4078e0:	(bad)  [edx+0x79]
  4078e3:	test   cl,dh
  4078e5:	jl     0x407939
  4078e7:	(bad)  
  4078e8:	idiv   DWORD PTR [edi+0x53]
  4078eb:	mov    es,WORD PTR [ebx-0xa]
  4078ee:	mov    WORD PTR [edi-0x5],ds
  4078f1:	sub    ebx,edx
  4078f3:	jno    0x4078f9
  4078f5:	add    al,dl
  4078f7:	push   eax
  4078f8:	(bad)  
  4078f9:	jmp    0x8b60ed08
  4078fe:	pop    es
  4078ff:	sbb    BYTE PTR [esi],0x39
  407902:	sar    DWORD PTR [ebx+0x4d],cl
  407905:	inc    edx
  407906:	jle    0x407927
  407908:	xchg   BYTE PTR [ebx+ecx*1-0x7b],al
  40790c:	push   ecx
  40790d:	or     BYTE PTR [edx],dh
  40790f:	fidivr WORD PTR [edx+0x31]
  407912:	xchg   edi,ecx
  407914:	or     BYTE PTR [eax+0x7f4600c8],al
  40791a:	in     eax,dx
  40791b:	jecxz  0x407927
  40791d:	xchg   ah,cl
  40791f:	add    ecx,DWORD PTR [ebx-0x73a9f836]
  407925:	jmp    0x883:0x6a0b7003
  40792c:	mov    DWORD PTR [bp+si],edx
  40792f:	outs   dx,BYTE PTR ds:[esi]
  407930:	ds (bad) 
  407932:	jae    0x407955
  407934:	cmpps  xmm5,xmm7,0x15
  407938:	mov    DWORD PTR [edx-0x3],edx
  40793b:	cs (bad) 
  40793d:	in     eax,dx
  40793e:	sbb    al,0x83
  407940:	inc    ebp
  407941:	sti    
  407942:	sub    al,0xdf
  407944:	jecxz  0x407950
  407946:	push   edx
  407947:	outs   dx,DWORD PTR ds:[esi]
  407948:	cmp    al,0xd6
  40794a:	jne    0x40795b
  40794c:	enter  0x13ea,0xce
  407950:	loope  0x407965
  407952:	data16 xor al,0xdb
  407955:	pop    edi
  407956:	pop    esp
  407957:	pop    edi
  407958:	rol    DWORD PTR [esi-0x7eaff0c0],0xe3
  40795f:	push   esi
  407960:	push   esp
  407961:	pop    ecx
  407962:	cmp    edx,0xffffff8b
  407965:	ror    BYTE PTR [esi-0x14327c0d],1
  40796b:	mov    al,0xfe
  40796d:	lock hlt 
  40796f:	(bad)  
  407970:	std    
  407971:	add    al,0x71
  407973:	getsec 
  407975:	(bad)  
  407977:	cmovno edi,DWORD PTR [edx]
  40797a:	retf   
  40797b:	jne    0x407981
  40797d:	sbb    al,0x81
  407980:	stc    
  407981:	jo     0x407987
  407983:	xor    al,0xc0
  407985:	in     al,dx
  407986:	or     DWORD PTR [edi],ebp
  407988:	ret    
  407989:	cmp    edx,esi
  40798b:	jg     0x40799a
  40798d:	mov    ecx,ebx
  40798f:	mov    esi,ss
  407991:	pandn  mm1,QWORD PTR [ebx]
  407994:	aad    0x84
  407996:	dec    edx
  407997:	or     dl,BYTE PTR [eax+ebp*8-0x6021d]
  40799e:	pop    edi
  40799f:	pop    esp
  4079a0:	push   edi
  4079a1:	pop    edx
  4079a2:	retf   0x60e
  4079a5:	mov    WORD PTR [ebp+0x9],es
  4079a8:	or     ch,0x7b
  4079ab:	dec    ebx
  4079ac:	(bad)  
  4079ad:	xlat   BYTE PTR ds:[ebx]
  4079ae:	jne    0x4079e2
  4079b0:	pop    ecx
  4079b1:	pop    edi
  4079b2:	push   ebx
  4079b3:	or     ch,0x81
  4079b6:	fld    QWORD PTR [esi-0x162d03b6]
  4079bc:	pop    eax
  4079bd:	test   BYTE PTR [ebx-0xe],dl
  4079c0:	(bad)  
  4079c2:	dec    edi
  4079c3:	jle    0x4079f2
  4079c5:	ins    DWORD PTR es:[edi],dx
  4079c6:	or     DWORD PTR [edx],0x260dca83
  4079cc:	fnstenv [esi+0x13]
  4079cf:	cmc    
  4079d0:	pusha  
  4079d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079d2:	jne    0x4079e5
  4079d4:	mov    edi,ecx
  4079d6:	push   esi
  4079d7:	push   ebx
  4079d8:	mov    esi,edx
  4079da:	clc    
  4079db:	ins    DWORD PTR es:[edi],dx
  4079dc:	lods   al,BYTE PTR ds:[esi]
  4079dd:	push   esp
  4079de:	push   ebp
  4079df:	jg     0x4079eb
  4079e1:	sbb    al,0xec
  4079e4:	loop   0x407a3f
  4079e6:	cmp    ecx,eax
  4079e8:	loopne 0x4079f7
  4079ea:	xor    al,0xc5
  4079ec:	leave  
  4079ed:	pop    ebp
  4079ee:	cmp    edi,0xeed7d329
  4079f4:	pop    esp
  4079f5:	pop    esi
  4079f6:	pop    ecx
  4079f7:	(bad)  
  4079f8:	push   eax
  4079f9:	pop    esi
  4079fa:	push   ecx
  4079fb:	(bad)  
  4079fc:	fiadd  DWORD PTR [edx-0x7c3fcd05]
  407a02:	or     ch,BYTE PTR [eax]
  407a04:	(bad)  
  407a05:	shl    DWORD PTR [esp-0x7f],1
  407a09:	int3   
  407a0a:	out    0x53,al
  407a0c:	lock hlt 
  407a0e:	clc    
  407a0f:	xchg   BYTE PTR [ecx],al
  407a11:	and    BYTE PTR [edx-0x9fb14fa],al
  407a17:	repz cmc 
  407a19:	mov    cl,al
  407a1b:	jb     0x407a2e
  407a1d:	xor    edi,ebx
  407a1f:	jne    0x407a30
  407a21:	mov    bh,cl
  407a23:	test   al,al
  407a25:	add    cl,ch
  407a27:	mov    ebx,DWORD PTR [eax]
  407a29:	sub    al,0x8d
  407a2b:	pop    es
  407a2c:	jmp    0xc68d:0xf0f8fc12
  407a33:	test   DWORD PTR [esi],edx
  407a35:	and    al,ah
  407a37:	dec    ebx
  407a38:	stc    
  407a39:	(bad)  
  407a3a:	clc    
  407a3b:	pop    esp
  407a3c:	pop    eax
  407a3d:	push   ecx
  407a3e:	retf   
  407a3f:	xchg   ebx,eax
  407a40:	mov    WORD PTR ds:0x1071da8a,ss
  407a46:	pop    ecx
  407a47:	mov    es,WORD PTR [ebp-0x4]
  407a4a:	xlat   BYTE PTR ds:[ebx]
  407a4b:	loopne 0x407a9f
  407a4d:	push   ecx
  407a4e:	out    0x9b,eax
  407a50:	icebp  
  407a51:	push   edx
  407a53:	pop    eax
  407a54:	test   edx,eax
  407a56:	or     eax,DWORD PTR [esi-0x50f03fd]
  407a5c:	or     DWORD PTR ds:0x85cd92c6,0x43
  407a63:	add    BYTE PTR [edx-0x72e15eb],bh
  407a69:	cld    
  407a6a:	cli    
  407a6b:	ret    
  407a6c:	imul   eax,DWORD PTR [eax-0x1b799ff2],0x650a7609
  407a76:	mov    esp,edx
  407a78:	or     DWORD PTR [ebp+ecx*1-0x12],edi
  407a7c:	out    dx,eax
  407a7d:	(bad)  
  407a7e:	sti    
  407a7f:	stc    
  407a80:	into   
  407a81:	lea    eax,[edi+0x0]
  407a84:	push   esi
  407a85:	mov    BYTE PTR [eax],0x24
  407a88:	ret    0x427f
  407a8b:	rdpmc  
  407a8d:	int3   
  407a8e:	mov    WORD PTR [ecx],ss
  407a90:	sub    dl,cl
  407a92:	or     al,0x81
  407a94:	fistp  WORD PTR [edx]
  407a96:	inc    edx
  407a97:	add    eax,0x2df88a40
  407a9c:	jne    0x407a8e
  407a9e:	mov    edx,0xa481ad4
  407aa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407aa4:	shl    DWORD PTR [eax+0x49],0x7
  407aa8:	push   edi
  407aa9:	int3   
  407aaa:	mov    ecx,edx
  407aac:	mov    ch,0x10
  407aae:	loope  0x407a4b
  407ab0:	cli    
  407ab1:	sti    
  407ab2:	test   al,0x83
  407ab5:	pop    ds
  407ab6:	add    DWORD PTR [ebp+0x40],esp
  407ab9:	add    ecx,DWORD PTR [ecx+0x6e09ac1f]
  407abf:	dec    ebx
  407ac0:	add    eax,0x58cd8dc6
  407ac5:	pop    esp
  407ac6:	pop    ebx
  407ac7:	push   ecx
  407ac8:	xchg   edi,edx
  407aca:	test   ah,bh
  407acc:	test   eax,0xb466715
  407ad1:	mov    DWORD PTR [esi],eax
  407ad3:	cmp    DWORD PTR [edx],0x0
  407ad6:	jo     0x407aeb
  407ad8:	mov    WORD PTR ds:0xf40f4880,?
  407ade:	pop    esp
  407adf:	add    al,BYTE PTR [eax-0x75f773f9]
  407ae5:	or     al,0x8b
  407ae7:	xor    eax,0x50e87007
  407aec:	pop    eax
  407aed:	push   esi
  407aee:	pop    esp
  407aef:	ret    
  407af0:	push   esi
  407af1:	(bad)  
  407af2:	jmp    0x168c:0x6d57c030
  407af9:	inc    eax
  407afa:	push   es
  407afb:	idiv   BYTE PTR fs:[ebx]
  407afe:	mov    DWORD PTR gs:[edx],ebp
  407b01:	icebp  
  407b02:	or     DWORD PTR [eax+0x7f0d4a7f],eax
  407b08:	add    esi,ecx
  407b0a:	sbb    edx,DWORD PTR [ebx+ebp*2+0x47]
  407b0e:	psubd  mm2,QWORD PTR [ecx]
  407b11:	sub    eax,0x3b0f4360
  407b16:	int3   
  407b17:	push   eax
  407b18:	push   esi
  407b19:	push   ecx
  407b1a:	push   0x9e6f1a8c
  407b1f:	adc    eax,DWORD PTR [ebx+0xc]
  407b22:	int3   
  407b23:	loope  0x407b06
  407b25:	lock push ebx
  407b28:	jecxz  0x407b28
  407b2a:	pop    esp
  407b2b:	ror    DWORD PTR [esi+0x467a8f25],0x0
  407b32:	(bad)  
  407b34:	cmp    ah,al
  407b36:	pop    eax
  407b37:	hlt    
  407b38:	(bad)  
  407b39:	clc    
  407b3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b3b:	mov    bh,BYTE PTR [edi+0x48]
  407b3e:	add    eax,eax
  407b40:	add    BYTE PTR [edi],cl
  407b42:	js     0x407b89
  407b44:	or     BYTE PTR [ecx],dl
  407b46:	sbb    ecx,DWORD PTR [edi+0x0]
  407b49:	pusha  
  407b4a:	into   
  407b4b:	push   es
  407b4c:	sub    edi,DWORD PTR [edi+0x4a]
  407b4f:	add    esi,DWORD PTR [eax+0x7c764da]
  407b55:	lock jae 0x407ba3
  407b58:	add    BYTE PTR [edi+0xc86cd2],bh
  407b5e:	ret    0x487d
  407b61:	add    esi,DWORD PTR [eax-0x8e71223]
  407b67:	hlt    
  407b68:	cld    
  407b69:	in     eax,dx
  407b6a:	mov    ?,esi
  407b6c:	hlt    
  407b6d:	icebp  
  407b6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b6f:	sbb    eax,0xc2044b7c
  407b74:	cld    
  407b75:	div    ebp
  407b77:	(bad)  
  407b78:	daa    
  407b79:	or     BYTE PTR [esi],al
  407b7b:	or     edx,DWORD PTR [eax+0x6b]
  407b7e:	je     0x407bf9
  407b80:	imul   ebp,DWORD PTR [eax+0x6e],0x6f472174
  407b87:	jb     0x407bfc
  407b89:	jo     0x407bf1
  407b8b:	addr16 fs jae 0x407bb4
  407b8f:	and    al,0x6e
  407b91:	and    DWORD PTR [ebx],esp
  407b93:	ds cmp edi,DWORD PTR ds:[esp+ebp*1]
  407b98:	cmp    esi,DWORD PTR [eax]
  407b9a:	xor    esp,DWORD PTR ss:[eax]
  407b9d:	inc    ebx
  407b9e:	jp     0x407c02
  407ba0:	ins    WORD PTR es:[edi],dx
  407ba2:	arpl   WORD PTR [ebx+0x25],si
  407ba5:	imul   edi,DWORD PTR [esi+0x2d],0x41
  407ba9:	push   0x6cb9055e
  407bae:	push   0x49
  407bb0:	add    al,0xe1
  407bb2:	cmc    
  407bb3:	div    ch
  407bb5:	repnz (bad) 
  407bb7:	nop
  407bb8:	push   eax
  407bb9:	mov    edx,edi
  407bbb:	cmp    al,0xc5
  407bbd:	lods   eax,DWORD PTR ds:[esi]
  407bbe:	imul   esp,DWORD PTR [ebp+0x45],0x6
  407bc2:	addr16 or esp,edx
  407bc5:	push   eax
  407bc7:	rep lock lods al,BYTE PTR ds:[esi]
  407bca:	fs jle 0x407c12
  407bcd:	pop    es
  407bce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bcf:	addr16 jbe 0x407c12
  407bd2:	add    BYTE PTR [edi+0x7406468],ah
  407bd8:	cmp    bl,cl
  407bda:	test   al,0x67
  407bdc:	imul   ecx,DWORD PTR [ebx+0x6],0x38
  407be0:	shl    DWORD PTR [eax+edi*2-0x1cf7b59d],0xc6
  407be8:	cli    
  407be9:	cli    
  407bea:	cmc    
  407beb:	mov    ebp,0x340676c
  407bf0:	(bad)  
  407bf1:	(bad)
  407bf4:	idiv   edx
  407bf6:	cld    
  407bf7:	push   ebx
  407bf8:	ret    
  407bf9:	mov    eax,DWORD PTR [eax+0x9]
  407bfc:	pop    esi
  407bfd:	mov    ch,ah
  407bff:	cmp    esi,ecx
  407c01:	pop    ecx
  407c02:	pusha  
  407c03:	xchg   ebx,eax
  407c04:	adc    eax,0xf16b0a4d
  407c09:	ds push 0xf02782
  407c0f:	je     0x407c90
  407c11:	inc    eax
  407c12:	add    edi,DWORD PTR [edx+0x2]
  407c15:	mov    ah,0x56
  407c17:	outs   dx,DWORD PTR ds:[esi]
  407c18:	dec    eax
  407c19:	or     al,0xed
  407c1b:	dec    edi
  407c1c:	icebp  
  407c1d:	div    edx
  407c1f:	xor    ah,cl
  407c21:	push   ebp
  407c22:	push   ecx
  407c23:	pop    eax
  407c24:	pusha  
  407c25:	mov    DWORD PTR [eax+eiz*2],ebx
  407c28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c29:	push   ds
  407c2a:	inc    edx
  407c2b:	or     eax,0xf5d9eecb
  407c30:	push   ecx
  407c32:	jmp    0x8f01d233
  407c37:	rol    DWORD PTR [ebx+ebp*1+0x3487c76],0x6
  407c3f:	(bad)  
  407c40:	pop    edx
  407c41:	sub    ecx,0x3b
  407c44:	leave  
  407c45:	push   eax
  407c46:	rcr    DWORD PTR [bx+di],1
  407c49:	dec    ecx
  407c4a:	add    esp,DWORD PTR [edi-0x10]
  407c4d:	cmp    ah,BYTE PTR [edi-0x77]
  407c50:	sub    eax,0x727605fd
  407c55:	inc    edx
  407c56:	or     esi,DWORD PTR [ebx]
  407c58:	iret   
  407c59:	pop    edi
  407c5a:	push   ebx
  407c5b:	push   esi
  407c5c:	popa   
  407c5d:	mov    ebx,DWORD PTR [esi]
  407c5f:	pusha  
  407c60:	fistp  DWORD PTR [edi]
  407c62:	dec    edx
  407c63:	add    eax,0xf095e1c0
  407c68:	cli    
  407c69:	jmp    esp
  407c6b:	repz push ebx
  407c6d:	lds    ecx,FWORD PTR [esi+0x752988cc]
  407c73:	jne    0x407cbd
  407c75:	or     al,BYTE PTR [eax]
  407c77:	retf   
  407c78:	mul    DWORD PTR [ebx]
  407c7a:	dec    ebx
  407c7b:	add    DWORD PTR [esi+eax*1-0x7a],0x3b25f8c0
  407c83:	add    BYTE PTR [eax+eax*1-0x77],0xca
  407c88:	std    
  407c89:	sub    bh,BYTE PTR [eax]
  407c8b:	lea    eax,[edi+0x5]
  407c8e:	xchg   ebp,ecx
  407c90:	mul    DWORD PTR [esi]
  407c92:	cmp    eax,DWORD PTR [esi-0x3674fabe]
  407c98:	jmp    DWORD PTR [ebx]
  407c9a:	xor    BYTE PTR [ecx-0x3773f3be],al
  407ca0:	cmc    
  407ca1:	and    esp,DWORD PTR [ecx-0x79f8b67c]
  407ca7:	iret   
  407ca8:	jmp    FWORD PTR [edi]
  407caa:	cdq    
  407cab:	or     BYTE PTR [eax+0xa],0x82
  407caf:	(bad)  
  407cb0:	imul   BYTE PTR [esi]
  407cb2:	nop
  407cb3:	mov    ecx,DWORD PTR [ebp+0x5]
  407cb6:	mov    eax,ebx
  407cb8:	jmp    FWORD PTR [edx]
  407cba:	fwait
  407cbb:	test   BYTE PTR [esi+0xb],cl
  407cbe:	mov    es,ebp
  407cc0:	stc    
  407cc1:	sub    BYTE PTR [ebx-0x78ffb375],bl
  407cc7:	iret   
  407cc8:	lock sub eax,0x6478484
  407cce:	add    al,0xff
  407cd1:	and    eax,0x44818c
  407cd6:	mov    ebx,cs
  407cd8:	hlt    
  407cd9:	(bad)
  407cde:	add    cl,0xf8
  407ce1:	sub    eax,0xb488b83
  407ce6:	mov    ebp,es
  407ce8:	cli    
  407ce9:	das    
  407cea:	jnp    0x407c75
  407cec:	inc    edi
  407ced:	add    BYTE PTR [eax+0x7826f9c6],cl
  407cf3:	add    DWORD PTR [ebp+0x3],0xffffff83
  407cf7:	sar    cl,0x25
  407cfa:	jge    0x407c86
  407cfc:	inc    ecx
  407cfd:	add    BYTE PTR [ecx+0x7a2df3ce],al
  407d03:	mov    ecx,DWORD PTR [ebp+0xa]
  407d06:	test   dh,cl
  407d08:	icebp  
  407d09:	sub    DWORD PTR [edi-0x7a],esp
  407d0c:	dec    edi
  407d0d:	add    eax,0x26ffc98f
  407d12:	mov    DWORD PTR [si+0xa],ecx
  407d16:	test   al,cl
  407d18:	repz and BYTE PTR [esi-0x7a],ch
  407d1c:	dec    eax
  407d1d:	or     eax,0x2df0cc88
  407d22:	popa   
  407d23:	test   DWORD PTR [eax+0xc],eax
  407d26:	add    esi,0xfffffffe
  407d29:	daa    
  407d2a:	push   ecx
  407d2b:	mov    DWORD PTR [edi+0xf],eax
  407d2e:	(bad)  
  407d2f:	shl    cl,0x27
  407d32:	pop    esp
  407d33:	mov    DWORD PTR [edx+0x5],eax
  407d36:	mov    al,bh
  407d38:	stc    
  407d39:	and    ebx,DWORD PTR [esi-0x77]
  407d3c:	inc    ebx
  407d3d:	pop    es
  407d3e:	mov    cs,edi
  407d40:	mul    DWORD PTR [eax]
  407d42:	pop    eax
  407d43:	mov    BYTE PTR [ebp+0xf],al
  407d46:	mov    eax,esi
  407d48:	mul    BYTE PTR [esi]
  407d4a:	dec    edi
  407d4b:	mov    cs,WORD PTR [edx+0x3]
  407d4e:	mov    ecx,ebp
  407d50:	std    
  407d51:	and    eax,0xb42854a
  407d56:	mov    ecx,edi
  407d58:	xchg   edi,eax
  407d59:	loop   0x407d58
  407d5b:	cmc    
  407d5c:	std    
  407d5d:	icebp  
  407d5e:	retf   
  407d5f:	xchg   ebx,eax
  407d60:	xor    eax,ebx
  407d62:	in     eax,dx
  407d63:	outs   dx,BYTE PTR ds:[esi]
  407d64:	stc    
  407d65:	hlt    
  407d66:	cld    
  407d67:	(bad)  
  407d68:	test   eax,0x860e0b0f
  407d6d:	or     bl,BYTE PTR [eax+0x18d9f2cb]
  407d73:	enter  0x8cc9,0x48
  407d77:	or     BYTE PTR [ebx-0x80],dl
  407d7a:	in     al,dx
  407d7b:	aaa    
  407d7c:	(bad)  
  407d7d:	pop    eax
  407d7e:	push   0x147210e
  407d83:	pusha  
  407d84:	push   DWORD PTR [edx]
  407d86:	outs   dx,BYTE PTR ds:[esi]
  407d87:	mov    ebp,DWORD PTR [edi]
  407d89:	dec    DWORD PTR [ecx]
  407d8b:	jg     0x407e00
  407d8d:	dec    esp
  407d8e:	or     eax,0x5e55c33b
  407d93:	pop    ebx
  407d94:	popa   
  407d95:	mov    DWORD PTR [ecx],ebx
  407d97:	push   0x2402116
  407d9c:	iret   
  407d9d:	out    dx,al
  407d9e:	outs   dx,BYTE PTR ds:[esi]
  407d9f:	clc    
  407da0:	stc    
  407da1:	(bad)  
  407da2:	out    dx,al
  407da3:	icebp  
  407da4:	pop    edx
  407da5:	into   
  407da6:	test   al,al
  407da8:	mov    DWORD PTR [eax],ebp
  407daa:	jns    0x407e2a
  407dac:	dec    edx
  407dad:	or     DWORD PTR ds:0xc22df4ca,eax
  407db3:	mov    WORD PTR [ebp+0x0],es
  407db6:	mov    al,al
  407db8:	lock sub al,cl
  407dbb:	(bad)  
  407dbc:	dec    ebx
  407dbd:	add    eax,0x2ef2c68e
  407dc2:	retf   0x408d
  407dc5:	or     al,0x84
  407dc7:	iret   
  407dc8:	imul   DWORD PTR ds:0xb4686b9
  407dce:	mov    eax,eax
  407dd0:	jmp    DWORD PTR [ecx]
  407dd2:	mov    ah,0x85
  407dd4:	inc    eax
  407dd5:	pop    es
  407dd6:	or     bl,0xf4
  407dd9:	cs mov ebx,0x8a0b468a
  407ddf:	(bad)  
  407de0:	mul    DWORD PTR [esi]
  407de2:	mov    ds:0x8e074b89,al
  407de7:	lds    ebx,FWORD PTR [edi-0x74]
  407dea:	in     al,0x84
  407dec:	(bad)  
  407ded:	repz push ebp
  407def:	push   eax
  407df0:	push   esp
  407df1:	mov    DWORD PTR [edi-0xf],ecx
  407df4:	mov    bl,BYTE PTR [ebp-0x8]
  407df7:	pop    DWORD PTR [ebp-0xb]
  407dfa:	add    BYTE PTR [esp+edi*8-0x1e],0x68
  407dff:	cli    
  407e00:	div    ebp
  407e02:	or     DWORD PTR [eax-0xe],0xf3f850e7
  407e09:	hlt    
  407e0a:	xor    al,0xcf
  407e0c:	push   eax
  407e0d:	ins    BYTE PTR es:[edi],dx
  407e0e:	sbb    ah,BYTE PTR [edx]
  407e10:	inc    ebx
  407e11:	(bad)  
  407e13:	repz cmp ch,BYTE PTR [ebx-0x7f]
  407e17:	sub    al,0xbb
  407e19:	or     eax,DWORD PTR [edi]
  407e1b:	or     BYTE PTR ds:0xe0f34988,cl
  407e21:	xor    cl,0xff
  407e24:	repz cmp esi,0xffffff84
  407e28:	std    
  407e29:	jae    0x407e71
  407e2b:	mov    esp,0xe00060e
  407e30:	mov    DWORD PTR [ecx-0xc],eax
  407e33:	mov    BYTE PTR [ecx+0x19],al
  407e36:	clc    
  407e37:	and    cl,BYTE PTR [ecx]
  407e39:	sbb    DWORD PTR [ebp-0x5],0xf73d518d
  407e40:	test   edx,ebp
  407e42:	push   es
  407e43:	aaa    
  407e44:	int    0x88
  407e46:	inc    ebx
  407e47:	cli    
  407e48:	mov    es,WORD PTR [esi-0xd]
  407e4b:	loop   0x407ecc
  407e4d:	div    dl
  407e4f:	std    
  407e50:	mov    edx,DWORD PTR [edi-0x8]
  407e53:	mov    BYTE PTR [edi+0x1a],bl
  407e56:	lock test eax,ebp
  407e59:	dec    DWORD PTR [edi-0x2df502b1]
  407e5f:	mov    BYTE PTR [esi+0x1d],bl
  407e62:	cld    
  407e63:	dec    esi
  407e64:	add    BYTE PTR [esi-0x3],0xe8
  407e68:	xor    edi,esi
  407e6a:	icebp  
  407e6b:	stc    
  407e6c:	ds cld 
  407e6e:	jne    0x407e71
  407e70:	mov    edi,0x10a0802
  407e75:	dec    ebx
  407e76:	inc    edi
  407e77:	jae    0x407e35
  407e79:	lea    eax,[ecx-0x2]
  407e7c:	in     eax,0xe3
  407e7e:	hlt    
  407e7f:	(bad)  
  407e80:	clc    
  407e81:	mov    al,BYTE PTR [ecx-0xc]
  407e84:	mov    DWORD PTR [edi-0x2],ebx
  407e87:	out    0x2c,eax
  407e89:	clc    
  407e8a:	clc    
  407e8b:	cli    
  407e8c:	aas    
  407e8d:	int    0x52
  407e8f:	pop    edx
  407e90:	push   esi
  407e91:	arpl   WORD PTR [ebx+0x22136815],cx
  407e97:	inc    esi
  407e98:	add    BYTE PTR [ebp+0xabdf447],cl
  407e9e:	or     al,BYTE PTR [esi]
  407ea0:	add    ebp,ebp
  407ea2:	jmp    0x407e98
  407ea4:	bnd lock ret 
  407ea7:	jecxz  0x407f02
  407ea9:	lock div ebp
  407eac:	loop   0x407e9d
  407eae:	push   esi
  407eaf:	push   ebp
  407eb0:	push   ebx
  407eb1:	sub    eax,0x408ec358
  407eb7:	cvtps2pd xmm1,QWORD PTR [esi-0x723e771e]
  407ebe:	push   ebp
  407ebf:	ds retf 
  407ec1:	or     DWORD PTR [ecx-0x78],0xffffff85
  407ec5:	dec    edx
  407ec6:	add    DWORD PTR [ecx+0x438ef14d],0xfffffffb
  407ecd:	xor    eax,eax
  407ecf:	push   ebp
  407ed0:	ins    BYTE PTR es:[edi],dx
  407ed1:	push   ebp
  407ed2:	daa    
  407ed3:	inc    eax
  407ed4:	pop    es
  407ed5:	outs   dx,DWORD PTR ds:[esi]
  407ed6:	hlt    
  407ed7:	cmp    ebp,DWORD PTR [edi-0x7e]
  407eda:	sub    ecx,DWORD PTR [ebx+0x68bd914e]
  407ee0:	add    ecx,DWORD PTR [edx]
  407ee2:	or     bl,ah
  407ee4:	jg     0x407ee1
  407ee6:	cli    
  407ee7:	cmc    
  407ee8:	mov    al,BYTE PTR [ebp-0x75]
  407eeb:	mov    edx,0x346256f
  407ef0:	mov    eax,0x843267a
  407ef5:	call   0xf5377de2
  407efa:	mov    dl,BYTE PTR [ebp-0x7a]
  407efd:	or     DWORD PTR [ecx-0x4],0xffffffe2
  407f01:	cmc    
  407f02:	cmc    
  407f03:	cmc    
  407f04:	lock add DWORD PTR [ebx-0x7c],0xffffffb1
  407f09:	imul   ebp,DWORD PTR [eax*2+0x2094b104],0x4f
  407f11:	or     ah,ah
  407f13:	fcomi  st,st(1)
  407f15:	div    ebx
  407f17:	mov    ds,WORD PTR [edi-0x71]
  407f1a:	test   DWORD PTR [eax-0xd],ecx
  407f1d:	in     al,0xed
  407f1f:	lock (bad) 
  407f21:	sti    
  407f22:	mov    ecx,DWORD PTR [ecx-0x4]
  407f25:	out    dx,al
  407f26:	jmp    0x407f22
  407f28:	repnz test DWORD PTR [edi+edx*8-0x7661a271],0xd8eaf841
  407f34:	stc    
  407f35:	clc    
  407f36:	stc    
  407f37:	(bad)  
  407f38:	dec    edi
  407f39:	pushf  
  407f3a:	les    eax,FWORD PTR [edx-0x67]
  407f3d:	push   cs
  407f3e:	or     BYTE PTR ds:0xa740ce08,al
  407f44:	add    DWORD PTR [esi],eax
  407f46:	or     BYTE PTR [ebx],al
  407f48:	les    ecx,FWORD PTR [edx-0x3a]
  407f4b:	cld    
  407f4c:	push   edx
  407f4e:	std    
  407f4f:	lea    eax,[edi-0x8]
  407f52:	push   edx
  407f53:	xchg   BYTE PTR [ebp-0x61],al
  407f56:	push   ebp
  407f57:	pusha  
  407f58:	or     eax,0x78e6026f
  407f5d:	std    
  407f5e:	push   ebp
  407f60:	mov    WORD PTR [esi-0x10],ds
  407f63:	popa   
  407f64:	add    cl,BYTE PTR [eax+0x645bf745]
  407f6a:	add    eax,0x4428ac6d
  407f6f:	add    DWORD PTR [ecx+0x8],ebp
  407f72:	loop   0x407fd4
  407f74:	div    bh
  407f76:	stc    
  407f77:	popa   
  407f78:	add    DWORD PTR [ecx+0x6d50f543],ecx
  407f7e:	add    ebp,DWORD PTR [edi-0x3f]
  407f81:	daa    
  407f82:	inc    eax
  407f83:	add    ah,BYTE PTR [eax+0x2]
  407f86:	out    0x4d,eax
  407f88:	repnz clc 
  407f8a:	cli    
  407f8b:	data16 or al,0x85
  407f8e:	inc    esi
  407f8f:	not    DWORD PTR [edi+0x68]
  407f92:	push   es
  407f93:	push   0x4623e9
  407f98:	push   0x2
  407f9a:	in     al,0x3e
  407f9c:	div    ch
  407f9e:	stc    
  407f9f:	mov    WORD PTR [eax-0xb],es
  407fa2:	push   edi
  407fa3:	or     BYTE PTR [edx-0x70],0x5a
  407fa7:	outs   dx,DWORD PTR ds:[esi]
  407fa8:	add    esp,DWORD PTR [edx+0xa]
  407fab:	loope  0x407fd1
  407fad:	div    esp
  407faf:	test   DWORD PTR [edi+0x3e0b71cd],0x50f07b0
  407fb9:	jp     0x407fca
  407fbb:	ss fsubp st(5),st
  407fbe:	(bad)  
  407fc0:	or     edi,DWORD PTR [edi]
  407fc2:	rcl    BYTE PTR [esi+0x56],0x56
  407fc6:	ins    BYTE PTR es:[edi],dx
  407fc7:	adc    DWORD PTR ds:0x40285a6f,0x88418d00
  407fd1:	mov    esi,0xb0b0702
  407fd6:	jecxz  0x407f7e
  407fd8:	stc    
  407fd9:	hlt    
  407fda:	stc    
  407fdb:	xchg   BYTE PTR [edi+esi*8-0x4e],al
  407fdf:	add    DWORD PTR [edx],ecx
  407fe1:	or     BYTE PTR [ebx],cl
  407fe3:	out    dx,eax
  407fe4:	shl    ebx,0xf5
  407fe7:	clc    
  407fe8:	retf   
  407fe9:	out    dx,al
  407fea:	sbb    dh,bl
  407fec:	stc    
  407fed:	stc    
  407fee:	call   0x590709d1
  407ff3:	and    ebp,0x5b
  407ff6:	ret    
  407ff7:	or     esp,esi
  407ff9:	(bad)  
  407ffa:	push   ebp
  407ffc:	(bad)  
  407ffe:	or     BYTE PTR [edx],cl
  408000:	imul   ecx,DWORD PTR ds:0xf1f10f0a,0xfffffff3
  408007:	hlt    
  408008:	pop    ss
  408009:	syscall 
  40800b:	add    al,0x46
  40800d:	inc    esp
  40800e:	push   esi
  40800f:	pop    ecx
  408010:	inc    esi
  408011:	pop    edi
  408012:	inc    eax
  408013:	sub    DWORD PTR cs:[esi+0x41],ebx
  408017:	pop    ecx
  408018:	push   eax
  408019:	inc    eax
  40801a:	dec    edi
  40801b:	inc    edi
  40801c:	or     al,0xf
  40801e:	or     BYTE PTR [ecx],al
  408020:	sti    
  408021:	push   ebx
  408023:	test   DWORD PTR [ecx+eax*1],0x45420d02
  40802a:	push   edi
  40802b:	push   0x60
  40802d:	jg     0x408063
  40802f:	xor    al,0x30
  408031:	and    al,BYTE PTR ds:0x62064601
  408037:	or     ah,BYTE PTR [ebp+0x3]
  40803a:	outs   dx,BYTE PTR ds:[esi]
  40803b:	add    eax,0x86c0861
  408040:	jp     0x408047
  408042:	jnp    0x408044
  408044:	je     0x40804f
  408046:	bound  eax,QWORD PTR [ebx]
  408048:	jnp    0x408054
  40804a:	ins    BYTE PTR es:[edi],dx
  40804b:	add    BYTE PTR [edi+0x2],bh
  40804e:	jae    0x408052
  408050:	add    al,0x2
  408052:	or     eax,DWORD PTR [eax]
  408054:	pop    ds
  408055:	add    DWORD PTR [esi],edi
  408057:	or     edi,DWORD PTR [ecx]
  408059:	push   es
  40805a:	ss or  al,0x3e
  40805d:	add    al,0x32
  40805f:	add    DWORD PTR [edx+0xc],eax
  408062:	dec    ecx
  408063:	pop    es
  408064:	inc    ebp
  408065:	add    al,0x3f
  408067:	cmovl  eax,DWORD PTR [edx]
  40806a:	cmp    ecx,DWORD PTR [eax]
  40806c:	dec    ebx
  40806d:	add    BYTE PTR [edx+0x7],cl
  408070:	or     BYTE PTR [edx],cl
  408072:	add    DWORD PTR [eax],ecx
  408074:	dec    ecx
  408075:	push   es
  408076:	outs   dx,DWORD PTR ds:[esi]
  408077:	add    BYTE PTR [ecx+0x6],ch
  40807a:	add    BYTE PTR fs:[ecx+0x0],ch
  40807e:	outs   dx,BYTE PTR ds:[esi]
  40807f:	add    DWORD PTR [edi+0x0],esi
  408082:	jbe    0x40808e
  408084:	jo     0x408095
  408086:	popa   
  408087:	or     al,0x63
  408089:	add    eax,0x37a0d63
  40808e:	push   0x7
  408090:	jno    0x408097
  408092:	add    BYTE PTR [ecx],cl
  408094:	push   ebp
  408095:	(bad)  
  408096:	in     al,dx
  408097:	add    esi,0xffffffd0
  40809a:	push   esp
  40809b:	pop    esi
  40809c:	pop    ebp
  40809d:	lea    eax,[ecx+ecx*1-0x7e]
  4080a1:	push   edx
  4080a2:	add    eax,0x86f25586
  4080a7:	mov    ecx,0x4090aac
  4080ac:	or     DWORD PTR [esi+ecx*4],eax
  4080af:	lahf   
  4080b0:	or     eax,0x80880005
  4080b5:	scas   eax,DWORD PTR es:[edi]
  4080b6:	syscall 
  4080b8:	push   cs
  4080b9:	or     BYTE PTR [eax-0x3],al
  4080bc:	(bad)  
  4080c0:	ja     0x40804d
  4080c2:	dec    ecx
  4080c3:	sti    
  4080c4:	test   BYTE PTR [eax],cl
  4080c6:	or     eax,DWORD PTR [eax-0x1]
  4080c9:	(bad)  
  4080ca:	dec    esi
  4080cb:	lock mov eax,DWORD PTR [ebp-0x10]
  4080cf:	add    esp,0x8
  4080d2:	mov    cs,WORD PTR [esi-0x19]
  4080d5:	or     BYTE PTR [esi-0x1],0x80
  4080d9:	inc    esi
  4080da:	jb     0x4fca81cf
  4080e0:	aam    0x38
  4080e2:	(bad)  
  4080e3:	mov    WORD PTR [eax-0x16],es
  4080e6:	fsub   DWORD PTR [ebp-0x25]
  4080e9:	fdiv   DWORD PTR [esi]
  4080eb:	(bad)  
  4080ec:	and    al,BYTE PTR [ebx+0x0]
  4080ef:	jmp    0xd88d:0xfff7eeb9
  4080f6:	inc    edx
  4080f7:	mov    ds,edx
  4080f9:	jb     0x40813a
  4080fb:	dec    ebp
  4080fc:	xchg   DWORD PTR [ebp-0x1a],ecx
  4080ff:	ins    BYTE PTR es:[edi],dx
  408100:	xchg   BYTE PTR [edx],dh
  408102:	add    BYTE PTR [ecx+0xbe5cdf9],bh
  408108:	imul   eax,DWORD PTR [ebx+eiz*8-0x47f3f00a],0xeb4f85cf
  408113:	mov    esi,edx
  408115:	push   es
  408116:	jg     0x40812e
  408118:	or     DWORD PTR [eax-0xd],0xf
  40811c:	dec    edx
  40811d:	in     al,dx
  40811e:	mov    BYTE PTR [ecx-0x18],al
  408121:	xchg   DWORD PTR [ebp-0x12],ecx
  408124:	mov    dl,BYTE PTR [edi+0x1d]
  408127:	or     DWORD PTR [edi],edx
  408129:	mov    WORD PTR [ebx-0x14],es
  40812c:	or     al,0x49
  40812e:	jno    0x4080f4
  408130:	mov    DWORD PTR [eax-0xb],eax
  408133:	mov    WORD PTR [esi+0x2],es
  408136:	or     DWORD PTR [ebp-0x9],ecx
  408139:	mov    es,WORD PTR [eax-0x5]
  40813c:	add    DWORD PTR [eax-0x4],0xffffff8a
  408140:	cmp    eax,0x70810f0f
  408145:	cld    
  408146:	cld    
  408147:	lock push ebp
  408149:	pop    ebp
  40814a:	pop    ebx
  40814b:	xchg   bh,ah
  40814d:	pop    ebp
  40814e:	ror    BYTE PTR [eax],0x2
  408151:	or     eax,DWORD PTR [eax]
  408153:	syscall 
  408155:	or     cl,BYTE PTR [edi]
  408157:	inc    ebp
  408158:	push   edi
  408159:	test   esp,esp
  40815b:	add    ah,0xba
  40815e:	push   esi
  40815f:	push   ebp
  408160:	pop    edi
  408161:	pop    eax
  408162:	push   ebp
  408163:	push   edx
  408164:	cld    
  408165:	fldcw  WORD PTR ds:[edx-0x73]
  408169:	push   edi
  40816a:	cmp    al,0x80
  40816c:	push   esi
  40816d:	or     eax,0x8a1e5a88
  408172:	jp     0x408194
  408174:	ins    BYTE PTR es:[edi],dx
  408175:	adc    ebx,DWORD PTR [ecx+0x35]
  408178:	stc    
  408179:	cmp    al,0xc0
  40817b:	stos   DWORD PTR es:[edi],eax
  40817c:	cmp    al,0x66
  40817e:	jge    0x408186
  408180:	sub    al,0x22
  408182:	retf   
  408183:	int    0x2
  408185:	add    ebx,ecx
  408187:	in     eax,0xf5
  408189:	(bad)  
  40818a:	repnz push ebx
  40818c:	mov    edi,0x5f896d45
  408191:	adc    BYTE PTR [edx-0x76248cee],al
  408197:	pop    edi
  408198:	lock pop eax
  40819a:	push   esi
  40819b:	push   ecx
  40819c:	lea    eax,[ecx+edi*8-0x80]
  4081a0:	inc    edx
  4081a1:	in     eax,0x84
  4081a3:	inc    ebp
  4081a4:	loop   0x408209
  4081a6:	xor    BYTE PTR [eax],0x47
  4081a9:	push   ebx
  4081aa:	or     ecx,DWORD PTR [edi+edi*1-0x71f2f5f7]
  4081b1:	inc    ebp
  4081b2:	push   DWORD PTR [ebx]
  4081b4:	fstp   QWORD PTR [ebp+0x55]
  4081b7:	test   DWORD PTR [esi-0x13],ecx
  4081ba:	mov    es,WORD PTR [esi+0x31]
  4081bd:	xchg   edx,eax
  4081be:	or     DWORD PTR [eax],ecx
  4081c0:	and    al,0x1f
  4081c2:	pop    ebx
  4081c3:	sub    ecx,DWORD PTR [ebx+ecx*4]
  4081c6:	ror    DWORD PTR [edi],0x8f
  4081c9:	dec    esi
  4081ca:	in     al,0x8b
  4081cc:	inc    ebp
  4081cd:	loopne 0x408150
  4081cf:	cmp    al,0x50
  4081d1:	inc    edx
  4081d2:	or     ecx,DWORD PTR [ebx]
  4081d4:	add    al,0x8e
  4081d6:	add    DWORD PTR [edx],ecx
  4081d8:	push   es
  4081d9:	or     ecx,DWORD PTR [edx+0x4a88ec42]
  4081df:	jo     0x4081e9
  4081e1:	inc    edx
  4081e2:	stc    
  4081e3:	mov    WORD PTR [edi-0x19],cs
  4081e6:	add    DWORD PTR [edx-0x20],0xffffff88
  4081ea:	jle    0x40820a
  4081ec:	xchg   bh,bh
  4081ee:	or     eax,0x8f389
  4081f3:	push   es
  4081f4:	inc    edi
  4081f5:	cmp    dl,al
  4081f7:	mov    al,BYTE PTR [ebp-0xa]
  4081fa:	cmp    eax,0x815a5ade
  4081ff:	dec    eax
  408200:	jmp    0x55d9:0x3f2e4e84
  408207:	pop    edi
  408208:	mov    es,edi
  40820a:	enter  0x1e0,0x96
  40820e:	or     ecx,DWORD PTR [eax]
  408210:	cs sbb al,0x5c
  408213:	sub    BYTE PTR [ecx],al
  408215:	mov    ebx,eax
  408217:	add    BYTE PTR [esi],cl
  408219:	pop    es
  40821a:	sub    BYTE PTR [esp+ebx*2],bl
  40821d:	and    eax,0xc88300
  408222:	lea    ecx,[ecx]
  408224:	add    DWORD PTR [eax-0xc],eax
  408227:	xchg   BYTE PTR [esi],dh
  408229:	dec    edx
  40822a:	outs   dx,DWORD PTR ds:[esi]
  40822b:	outs   dx,DWORD PTR ds:[esi]
  40822c:	data16 jno 0x40828a
  40822f:	pop    DWORD PTR [ebp+eax*1-0x7a]
  408233:	ds dec edx
  408235:	arpl   WORD PTR [edx+0x71],bp
  408238:	jb     0x408287
  40823a:	or     BYTE PTR [ecx+0xd],0x89
  40823e:	xor    DWORD PTR [ebp+edi*2+0x79],esp
  408242:	inc    edi
  408243:	jl     0x408283
  408245:	mov    BYTE PTR [edx-0x16],cl
  408248:	mov    BYTE PTR [eax+0x29],al
  40824b:	add    DWORD PTR [ebp-0x2],eax
  40824e:	aaa    
  40824f:	rcr    BYTE PTR [ecx+0x50],1
  408252:	test   dh,al
  408254:	or     edi,ecx
  408256:	pushf  
  408257:	add    DWORD PTR [edx],ecx
  408259:	sub    al,0x10
  40825b:	push   esp
  40825c:	add    DWORD PTR cs:[eax-0x719afc34],eax
  408263:	add    BYTE PTR [ecx-0x7e],ch
  408266:	dec    ebx
  408267:	fmul   DWORD PTR [esi+0x418feb49]
  40826d:	pop    ds
  40826e:	or     ecx,DWORD PTR [edi-0x3]
  408271:	pop    es
  408272:	mov    edi,0xe6c1d553
  408277:	add    al,0xe
  408279:	ret    0x8c
  40827c:	add    al,0x44
  40827e:	clc    
  40827f:	mov    DWORD PTR [edi-0x2e],eax
  408282:	xor    DWORD PTR [esi],0x47
  408285:	imul   esi,DWORD PTR [ebx+0x55],0x42855f79
  40828c:	or     eax,DWORD PTR [esi+0x6a6f773a]
  408292:	inc    ecx
  408293:	jae    0x4082dc
  408295:	add    ebx,0x4
  408298:	xchg   BYTE PTR [ecx],dh
  40829a:	outs   dx,BYTE PTR ds:[esi]
  40829b:	bound  esi,QWORD PTR [ebx+0x60]
  40829e:	jl     0x4082db
  4082a0:	xchg   BYTE PTR [edx-0x20],cl
  4082a3:	add    DWORD PTR [ebp+0x25],0x37f54f0b
  4082aa:	fistp  DWORD PTR [ecx+0x58]
  4082ad:	or     esi,0x39ac006
  4082b3:	or     ebp,DWORD PTR [ebx]
  4082b5:	push   ss
  4082b6:	pop    edx
  4082b7:	das    
  4082b8:	add    DWORD PTR [esi-0x7e92fa3e],eax
  4082be:	or     al,0x66
  4082c0:	test   DWORD PTR [edx-0x2f],ecx
  4082c3:	or     DWORD PTR [ebp-0x1b],0xffffff8c
  4082c7:	inc    esi
  4082c8:	pop    ss
  4082c9:	add    eax,DWORD PTR [ebp-0x4]
  4082cc:	or     esi,DWORD PTR [edi-0x163921af]
  4082d2:	or     DWORD PTR [eax],ecx
  4082d4:	leave  
  4082d5:	or     BYTE PTR [ebx],0x5
  4082d8:	dec    esi
  4082d9:	std    
  4082da:	mov    eax,?
  4082dc:	inc    eax
  4082dd:	inc    ebp
  4082de:	pop    es
  4082df:	mov    ss,WORD PTR [edx+edi*8]
  4082e2:	cli    
  4082e3:	cmc    
  4082e4:	ror    DWORD PTR [ebp-0x4c],0x47
  4082e8:	lds    eax,FWORD PTR [ebx-0x4e]
  4082eb:	data16 mov BYTE PTR [edi-0x50],0x77
  4082f0:	into   
  4082f1:	inc    ebp
  4082f2:	mov    al,0x4d
  4082f4:	iret   
  4082f5:	dec    esi
  4082f6:	mov    dh,0x6f
  4082f8:	int3   
  4082f9:	dec    ebx
  4082fa:	mov    ah,0x6c
  4082fc:	int3   
  4082fd:	dec    edi
  4082fe:	mov    ah,0x7f
  408300:	leave  
  408301:	dec    ebx
  408302:	mov    ah,0x60
  408304:	int    0x42
  408306:	mov    ah,0x60
  408308:	ret    0xbc4c
  40830b:	dec    ebx
  40830c:	leave  
  40830d:	dec    ebp
  40830e:	mov    cl,0x6b
  408310:	leave  
  408311:	dec    ebp
  408312:	mov    dl,0x6b
  408314:	int3   
  408315:	inc    edx
  408316:	mov    bh,0x69
  408318:	lds    ecx,FWORD PTR [ecx-0x31]
  40831b:	mov    DWORD PTR fs:[ecx-0x3f],0xc343ce69
  408323:	inc    ebx
  408324:	retf   
  408325:	dec    ebp
  408326:	les    ecx,FWORD PTR [edi]
  408328:	mov    eax,DWORD PTR [ebp-0x43]
  40832b:	push   edx
  40832c:	(bad)  
  40832d:	dec    ebp
  40832e:	(bad)  
  40832f:	push   ebp
  408330:	(bad)  
  408331:	ror    DWORD PTR [ebp-0x3f79f22],1
  408337:	aam    0x8c
  408339:	dec    edx
  40833a:	loopne 0x4082ca
  40833c:	dec    ebp
  40833d:	loope  0x4083a2
  40833f:	mov    ?,WORD PTR [eax]
  408341:	dec    ebx
  408342:	push   ebx
  408343:	or     al,0x86
  408345:	test   DWORD PTR [ebx],ecx
  408347:	add    eax,DWORD PTR [eax]
  408349:	addr16 add bh,bh
  40834c:	shl    DWORD PTR [edi],1
  40834e:	rcr    BYTE PTR [ecx+0x50],1
  408351:	test   BYTE PTR [eax-0x1e],al
  408354:	test   BYTE PTR [ebp+0x3e],al
  408357:	xchg   edi,eax
  408358:	or     eax,DWORD PTR [edi]
  40835a:	and    al,0x19
  40835c:	push   ecx
  40835d:	daa    
  40835e:	or     al,0x88
  408360:	(bad)  
  408361:	or     eax,0x85ef4a89
  408366:	inc    ebx
  408367:	loope  0x4082f6
  408369:	xor    edx,DWORD PTR [esp+eax*2+0x3]
  40836d:	or     BYTE PTR ds:0x6095784,al
  408373:	or     ebp,DWORD PTR [edx+0x4]
  408376:	stc    
  408377:	fimul  WORD PTR [ebx+0x4304e452]
  40837d:	sub    al,0x83
  40837f:	jmp    0x4287:0xd44a8b02
  408386:	rol    DWORD PTR [edi-0x18b97ef3],1
  40838c:	mov    WORD PTR [edi-0x2f],es
  40838f:	mov    ecx,DWORD PTR [ecx]
  408391:	xor    edx,esp
  408393:	push   edx
  408394:	push   eax
  408395:	mov    DWORD PTR [ecx-0x11],ecx
  408398:	or     DWORD PTR [edx+0x3a],0xffffff98
  40839c:	push   es
  40839d:	or     eax,0x245b1e23
  4083a2:	push   cs
  4083a3:	xchg   ch,al
  4083a5:	add    BYTE PTR [ebx+0x4e82e04c],al
  4083ab:	fadd   QWORD PTR [ecx-0x4ba73f3]
  4083b1:	mov    ecx,DWORD PTR [edx-0x25]
  4083b4:	mov    cs,WORD PTR [esi+0xf]
  4083b7:	mov    WORD PTR [eax-0xa],es
  4083ba:	xchg   BYTE PTR [esi-0x12],cl
  4083bd:	or     DWORD PTR [eax-0x7ef0f0f4],eax
  4083c3:	dec    ebp
  4083c4:	aad    0x8c
  4083c6:	inc    ebx
  4083c7:	fild   DWORD PTR [ebx+0xf040478]
  4083cd:	and    BYTE PTR [edi+eax*1+0x4e800b0b],0xef
  4083d5:	add    BYTE PTR [esi+0x807018b],0x0
  4083dc:	dec    edi
  4083dd:	lock add BYTE PTR [edx-0x37],0xec
  4083e2:	mov    DWORD PTR [edi],eax
  4083e4:	or     BYTE PTR [edi],al
  4083e6:	mov    eax,DWORD PTR [esi-0x36]
  4083e9:	lea    eax,[ebx+0xc]
  4083ec:	add    DWORD PTR [eax-0x5],eax
  4083ef:	pop    eax
  4083f0:	call   DWORD PTR [ebx-0x28]
  4083f3:	adc    bl,0x84
  4083f6:	fstp   TBYTE PTR [esi+0x7e]
  4083f9:	xchg   DWORD PTR [ebp-0x3a],ecx
  4083fc:	mov    DWORD PTR ds:0x85037b0a,esi
  408402:	dec    ecx
  408403:	(bad)  
  408404:	mov    WORD PTR [edi],cs
  408406:	push   es
  408407:	inc    ecx
  408408:	icebp  
  408409:	mov    DWORD PTR [esi-0x39],eax
  40840c:	jecxz  0x40840e
  40840e:	or     DWORD PTR [edx-0x3c],0x41a4587
  408415:	dec    ebp
  408416:	cmc    
  408417:	mov    cl,BYTE PTR [ecx-0x39]
  40841a:	add    DWORD PTR [eax+ecx*8-0x75],0x4c
  40841f:	sbb    BYTE PTR ds:0x4d84fa44,al
  408425:	ret    
  408426:	in     al,0x33
  408428:	mov    ecx,DWORD PTR [ebx-0x36]
  40842b:	(bad)  
  40842c:	xor    ch,dh
  40842e:	ret    0x701
  408431:	push   es
  408432:	xchg   BYTE PTR [esi+0x19],bh
  408435:	and    al,0xfa
  408438:	lock or BYTE PTR ds:0xd9fa5a5f,al
  40843f:	mov    edx,DWORD PTR [ebx-0x33]
  408442:	mov    al,BYTE PTR [ecx]
  408444:	in     al,0x5
  408446:	add    BYTE PTR [ebp-0xb],bh
  408449:	add    edi,0xf4515300
  40844f:	(bad)  
  408450:	test   BYTE PTR [eax-0x32],dl
  408453:	xchg   BYTE PTR [edi],al
  408455:	or     DWORD PTR [ebx-0x40],0xc14f8307
  40845c:	pop    es
  40845d:	or     DWORD PTR [esi-0x35],0xffffff86
  408461:	cmp    BYTE PTR [edi],cl
  408463:	jle    0x408432
  408465:	test   DWORD PTR [eax-0x40],eax
  408468:	pop    ds
  408469:	pop    DWORD PTR [edi+ecx*8-0x75]
  40846d:	jb     0x40847c
  40846f:	or     BYTE PTR [edi],al
  408471:	cmp    DWORD PTR [ebx-0x1],0xfffffffb
  408475:	stc    
  408476:	xchg   BYTE PTR [ebp-0x1d],al
  408479:	mov    eax,DWORD PTR [edi+0x29]
  40847c:	pop    es
  40847d:	inc    ebp
  40847e:	cli    
  40847f:	add    DWORD PTR [edi-0x5],0x60
  408483:	push   0xd14008c
  408488:	or     BYTE PTR [ebx],al
  40848a:	test   BYTE PTR [edi+0x32],al
  40848d:	mov    cs,WORD PTR [ebp-0xf]
  408490:	mov    edx,DWORD PTR [esi+0x8]
  408493:	mov    DWORD PTR [edx+0x4],ecx
  408496:	mov    WORD PTR [eax+0x6],cs
  408499:	mov    ebx,DWORD PTR [ecx+0x9]
  40849c:	cmp    BYTE PTR [esp+esi*1],0xd0
  4084a0:	je     0x4084b2
  4084a2:	mov    ecx,?
  4084a4:	xor    DWORD PTR ds:0x32117482,0xffffffde
  4084ab:	jg     0x4084a9
  4084ad:	mov    WORD PTR [eax+0x1b],cs
  4084b0:	mov    eax,DWORD PTR [edx-0x5]
  4084b3:	mov    WORD PTR [esi+0x17],es
  4084b6:	mov    cs,WORD PTR [eax-0xa]
  4084b9:	test   BYTE PTR [ebx+0x2a],al
  4084bc:	ins    DWORD PTR es:[edi],dx
  4084bd:	mov    ecx,DWORD PTR [ecx-0x25]
  4084c0:	test   BYTE PTR [eax],cl
  4084c2:	adc    DWORD PTR [eax-0x1d],0x5
  4084c6:	dec    ecx
  4084c7:	sub    BYTE PTR [ecx+0x418be845],cl
  4084cd:	in     al,dx
  4084ce:	mov    fs,edi
  4084d0:	push   esi
  4084d1:	hlt    
  4084d2:	jmp    0x408528
  4084d4:	push   ebp
  4084d5:	pop    ebp
  4084d6:	and    ah,0x5a
  4084d9:	retf   
  4084da:	mov    dl,cl
  4084dc:	retf   
  4084dd:	xchg   BYTE PTR [edi+0x5],al
  4084e0:	push   eax
  4084e1:	sub    ebx,0xfef8c389
  4084e7:	stc    
  4084e8:	stc    
  4084e9:	push   eax
  4084ea:	push   esi
  4084eb:	push   ebp
  4084ec:	fadd   DWORD PTR ss:[ecx-0x9020163]
  4084f3:	hlt    
  4084f4:	mov    BYTE PTR [ebp-0x80c0c0a],bl
  4084fa:	adc    DWORD PTR [edi-0x4f],0xffffff83
  4084fe:	push   edx
  4084ff:	mov    esi,0x8ca75187
  408504:	test   BYTE PTR [ecx+edx*2-0xcb9760f],0x85
  40850c:	dec    ecx
  40850d:	mul    bh
  40850f:	and    eax,0x8af5faf9
  408514:	dec    ebp
  408515:	cmc    
  408516:	jmp    0x408541
  408518:	cli    
  408519:	idiv   esi
  40851b:	aaa    
  40851c:	rcr    BYTE PTR [ecx+0x60],0x3
  408520:	das    
  408521:	inc    edx
  408522:	or     eax,0x623ff86c
  408527:	mov    DWORD PTR [esi],ebp
  408529:	push   0x18
  40852b:	es inc edx
  40852d:	add    eax,0x6efa72fe
  408532:	cs es inc ebx
  408535:	pop    es
  408536:	cli    
  408537:	jp     0x408529
  408539:	mov    BYTE PTR [ebp-0xf],cl
  40853c:	mov    edi,0x906000b
  408541:	jmp    0x40858c
  408543:	cld    
  408544:	cmc    
  408545:	cld    
  408546:	xor    edi,ebx
  408548:	mov    edi,DWORD PTR [ebp-0xa]
  40854b:	pop    DWORD PTR [edi-0x1]
  40854e:	data16 mov ?,WORD PTR ds:0x870a5547
  408555:	push   cs
  408556:	or     eax,0x40810003
  40855b:	test   DWORD PTR [ebx-0x38f9c0b5],0x8dfe4e86
  408565:	inc    eax
  408566:	cld    
  408567:	mov    bh,BYTE PTR [ecx+edx*2]
  40856a:	inc    esi
  40856b:	or     BYTE PTR [edx],cl
  40856d:	push   cs
  40856e:	(bad)  
  40856f:	out    dx,al
  408570:	add    cl,BYTE PTR [ebx]
  408572:	add    BYTE PTR [ecx-0x700a27d],cl
  408578:	push   DWORD PTR [eax+ecx*8]
  40857b:	mov    esi,0x20a0244
  408580:	out    0x4f,eax
  408582:	in     eax,0xf8
  408584:	cli    
  408585:	or     DWORD PTR [eax-0x64],0x12bdc630
  40858c:	add    eax,0x46e80900
  408591:	jmp    0x830c8395
  408596:	pop    eax
  408597:	cmc    
  408598:	stc    
  408599:	inc    BYTE PTR [ecx+0x9]
  40859c:	pop    es
  40859d:	or     eax,0x788adb3c
  4085a2:	or     DWORD PTR [ecx],ecx
  4085a4:	add    eax,0xb09e88c
  4085a9:	or     BYTE PTR [edi-0x3020680],al
  4085af:	push   DWORD PTR [ebp+0xb4e2b3b]
  4085b5:	mov    ebp,0xb4d2845
  4085ba:	loop   0x4085e1
  4085bc:	clc    
  4085bd:	repz lock test BYTE PTR [ebp-0x607070c],bl
  4085c5:	xchg   BYTE PTR [ebp-0x50],al
  4085c8:	call   0x3c7800
  4085cd:	mov    al,BYTE PTR [esi-0xb0b090d]
  4085d3:	mov    cl,0x32
  4085d5:	and    eax,0x5fb00741
  4085da:	and    al,0x48
  4085dc:	or     ebp,edi
  4085de:	add    edi,ebp
  4085e0:	cmc    
  4085e1:	clc    
  4085e2:	adc    DWORD PTR [edx-0x6060108],0xffffff8e
  4085e9:	inc    ebp
  4085ea:	scas   al,BYTE PTR es:[edi]
  4085eb:	in     eax,dx
  4085ec:	pop    ss
  4085ed:	cli    
  4085ee:	(bad)  
  4085ef:	stc    
  4085f0:	call   0x3f79bf
  4085f5:	or     DWORD PTR [ebx-0x10],0x4d2466b2
  4085fc:	or     ah,bh
  4085fe:	fdivr  st,st(4)
  408600:	repz hlt 
  408602:	jae    0x408604
  408604:	mov    es,WORD PTR [ecx-0xb]
  408607:	mov    edx,0xc48218f
  40860c:	loop   0x4085d6
  40860e:	cli    
  40860f:	repz cli 
  408611:	jg     0x40864b
  408613:	test   DWORD PTR [eax-0x69],ecx
  408616:	pop    esp
  408617:	or     BYTE PTR [ebp-0xc0004af],0x58
  40861e:	ins    BYTE PTR es:[edi],dx
  40861f:	add    DWORD PTR [eax+0xd],ebp
  408622:	bound  eax,QWORD PTR [ebx]
  408624:	test   BYTE PTR [ebx-0x8],al
  408627:	out    0xea,al
  408629:	cmc    
  40862a:	idiv   ebp
  40862c:	push   ebp
  40862d:	imul   eax,DWORD PTR [edi],0x6c
  408630:	push   es
  408631:	or     DWORD PTR [ebp-0x51],0xf7fedeef
  408638:	cli    
  408639:	pop    eax
  40863a:	arpl   WORD PTR ds:0xe1b64584,ax
  408640:	shl    edx,cl
  408642:	lock cmc 
  408644:	push   ebx
  408645:	call   0xfe407be5
  40864a:	xchg   edx,edi
  40864c:	or     bl,BYTE PTR [ebx]
  40864e:	aam    0x46
  408650:	loope  0x40869d
  408652:	mov    BYTE PTR [edi-0x66],al
  408655:	pop    eax
  408656:	mov    es,WORD PTR [ebp-0x80305a6]
  40865c:	pop    ebx
  40865d:	imul   eax,DWORD PTR ds:0xa610f6a,0xe3f4408d
  408667:	lods   eax,DWORD PTR ds:[esi]
  408668:	lock cld 
  40866a:	neg    DWORD PTR [edx-0x76]
  40866d:	dec    ebp
  40866e:	hlt    
  40866f:	out    dx,al
  408670:	stos   DWORD PTR es:[edi],eax
  408671:	icebp  
  408672:	sti    
  408673:	stc    
  408674:	pop    ebp
  408675:	push   0x7
  408677:	mov    eax,DWORD PTR [edx-0x53]
  40867a:	in     al,dx
  40867b:	xchg   ebp,eax
  40867c:	repz cmc 
  40867e:	std    
  40867f:	pop    edi
  408680:	push   0xc
  408682:	mov    WORD PTR [eax-0x44],es
  408685:	in     eax,0x82
  408687:	repnz lock clc 
  40868a:	push   edx
  40868b:	in     eax,dx
  40868c:	push   eax
  40868d:	(bad)  
  40868e:	(bad)  
  40868f:	stc    
  408690:	cmp    eax,0x3
  408693:	pop    ss
  408694:	fmul   QWORD PTR [ebx-0x72]
  408697:	fisttp QWORD PTR [esi]
  408699:	or     BYTE PTR [eax-0x74f0f2f9],0x4f
  4086a0:	stc    
  4086a1:	mov    ebx,0x4492464
  4086a6:	loope  0x4086ce
  4086a8:	cli    
  4086a9:	cmc    
  4086aa:	bnd jno 0x4086bc
  4086ad:	mov    BYTE PTR [ebp-0xd],al
  4086b0:	mov    ch,0x89
  4086b2:	and    BYTE PTR [ebx+0x5],cl
  4086b5:	in     eax,dx
  4086b6:	sbb    bh,bh
  4086b8:	hlt    
  4086b9:	cmc    
  4086ba:	jns    0x4086eb
  4086bc:	or     DWORD PTR [edx-0x65],0x57808558
  4086c3:	stc    
  4086c4:	hlt    
  4086c5:	call   DWORD PTR [eax+0x6a]
  4086c8:	add    al,0x6a
  4086ca:	add    al,0x6a
  4086cc:	add    esp,DWORD PTR [ecx+0xb]
  4086cf:	popa   
  4086d0:	or     esp,DWORD PTR [ecx+0xb]
  4086d3:	lea    ecx,[esi-0x7]
  4086d6:	out    dx,eax
  4086d7:	xor    edx,esi
  4086d9:	cmc    
  4086da:	neg    DWORD PTR [ebx+0x6d]
  4086dd:	add    eax,0xf7f2c7ed
  4086e2:	clc    
  4086e3:	cmp    ebx,0x7
  4086e6:	sbb    eax,0x31e943d8
  4086eb:	mov    cs,WORD PTR [ebp-0x6c]
  4086ee:	push   esi
  4086ef:	lea    ecx,[ebx+ebx*2+0x5ef5fffe]
  4086f6:	data16 or BYTE PTR [eax+0xa],ah
  4086fa:	addr16 push cs
  4086fc:	gs push cs
  4086fe:	fs or  al,0x61
  408701:	pop    es
  408702:	test   BYTE PTR [eax-0x4],al
  408705:	loope  0x408711
  408707:	xacquire lock neg DWORD PTR [ecx+eax*4+0x4a]
  40870d:	hlt    
  40870e:	in     al,0x4
  408710:	sti    
  408711:	clc    
  408712:	neg    DWORD PTR [ebp-0x15]
  408715:	fwait
  408716:	cli    
  408717:	idiv   esi
  408719:	xchg   eax,edi
  40871b:	or     eax,0x6a42dd13
  408720:	stc    
  408721:	or     DWORD PTR [edi],eax
  408723:	pmaxsw mm0,QWORD PTR [edi]
  408726:	clc    
  408727:	std    
  408728:	sti    
  408729:	mov    cl,bh
  40872b:	add    al,0xe
  40872d:	and    BYTE PTR [ecx],0x5
  408730:	or     cl,BYTE PTR [eax]
  408732:	imul   eax,DWORD PTR [edi],0x8085176f
  408738:	or     bh,dh
  40873a:	cli    
  40873b:	lock push eax
  40873d:	ins    BYTE PTR es:[edi],dx
  40873e:	or     DWORD PTR [eax-0x14a564ba],ecx
  408744:	cmp    bl,0xfd
  408747:	dec    DWORD PTR [edi+0x6a5bea41]
  40874d:	or     ecx,DWORD PTR [eax-0x76aa1cb1]
  408753:	mov    ecx,DWORD PTR [edi*8-0x3c790a01]
  40875a:	add    BYTE PTR [ebx-0x78],bl
  40875d:	inc    eax
  40875e:	xchg   esp,eax
  40875f:	pop    edi
  408760:	jecxz  0x408707
  408762:	repz cli 
  408764:	xrelease xchg BYTE PTR [ecx-0x17],al
  408768:	push   ebx
  408769:	bound  ecx,QWORD PTR [edx-0x74]
  40876c:	lea    ebx,[eax]
  40876e:	stc    
  40876f:	hlt    
  408770:	call   DWORD PTR [ebp+ecx*4+0x48]
  408774:	in     al,dx
  408775:	push   edi
  408776:	mov    eax,DWORD PTR [edx-0x6b]
  408779:	push   esp
  40877a:	call   0xf13e8712
  40877f:	lea    ecx,[ecx-0x11]
  408782:	push   ebp
  408783:	fs cmc 
  408785:	or     BYTE PTR [ebx],al
  408787:	jp     0xf73ea514
  40878d:	call   DWORD PTR [esi-0x75]
  408790:	inc    ebp
  408791:	out    dx,al
  408792:	aas    
  408793:	aad    0x5a
  408795:	pop    edx
  408796:	lea    eax,[ecx+ecx*2-0x690d070a]
  40879d:	add    ecx,DWORD PTR [esi]
  40879f:	and    DWORD PTR [edx],edx
  4087a1:	pop    esp
  4087a2:	cs or  eax,0x5803cd87
  4087a8:	or     DWORD PTR [eax-0x6f],0xfa5feb50
  4087af:	lock cli 
  4087b1:	or     DWORD PTR [esi-0x47],0xffffff8e
  4087b5:	xchg   ebx,eax
  4087b6:	gs cmc 
  4087b8:	cmc    
  4087b9:	repz call 0xf831690c
  4087bf:	test   DWORD PTR [eax-0x11],eax
  4087c2:	push   esi
  4087c3:	add    BYTE PTR [ebp-0x40198],0x54
  4087ca:	lea    eax,[edx-0x49]
  4087cd:	jecxz  0x4087c0
  4087cf:	out    0xf4,eax
  4087d1:	hlt    
  4087d2:	push   esi
  4087d3:	add    BYTE PTR [ebx+ebp*8+0x58],0x88
  4087d8:	dec    edi
  4087d9:	pushf  
  4087da:	pop    ebx
  4087db:	out    dx,eax
  4087dc:	xor    eax,0x3bf8f5f0
  4087e1:	(bad)  
  4087e2:	mov    DWORD PTR [esi-0x1e],eax
  4087e5:	xor    eax,0xd94789c3
  4087ea:	xor    al,cl
  4087ec:	mov    DWORD PTR [ebx-0x2c],eax
  4087ef:	cmp    cl,bl
  4087f1:	mov    BYTE PTR [ebp-0x26],al
  4087f4:	cmp    eax,0xc64f81cc
  4087f9:	xchg   BYTE PTR [edi-0xc0e0f99],cl
  4087ff:	add    BYTE PTR [edx-0x11],0x8e
  408803:	inc    ecx
  408804:	stc    
  408805:	mov    eax,DWORD PTR [ebx+0x5f]
  408808:	or     ecx,esp
  40880a:	or     DWORD PTR [edx-0x30],0x66
  40880e:	add    eax,0xd080762
  408813:	or     esp,DWORD PTR [esi+0x4f]
  408816:	test   DWORD PTR [esp+eiz*8+0x50],eax
  40881a:	data16 or BYTE PTR [esi+0x1e],ch
  40881e:	add    al,BYTE PTR [edx]
  408820:	or     BYTE PTR [edx-0x19af3db6],cl
  408826:	xchg   esp,eax
  408827:	icebp  
  408828:	idiv   ebp
  40882a:	mov    es,WORD PTR [ebx+ebp*8+0x56]
  40882e:	lea    ecx,[edi-0x64]
  408831:	push   ebx
  408832:	out    dx,eax
  408833:	jl     0x40882f
  408835:	idiv   edx
  408837:	or     DWORD PTR [ecx+ebp*8-0x7a],0x45
  40883c:	into   
  40883d:	arpl   WORD PTR [ebx+0x69],ax
  408840:	punpcklbw mm0,DWORD PTR [edx]
  408843:	lea    ecx,[eax-0x1e]
  408846:	push   eax
  408847:	push   0x6a0b6804
  40884c:	js     0x89964fa1
  408852:	dec    ebx
  408853:	pushf  
  408854:	push   ebx
  408855:	mov    ecx,DWORD PTR [edi-0x3f]
  408858:	push   ebx
  408859:	loopne 0x4088ac
  40885b:	idiv   dl
  40885d:	inc    DWORD PTR [ebx+edx*8+0xc6f4664]
  408864:	popa   
  408865:	add    eax,0x5ae8468c
  40886a:	imul   ecx,DWORD PTR [eax],0x62
  40886d:	push   es
  40886e:	popa   
  40886f:	add    BYTE PTR [ecx-0x10af26bd],cl
  408875:	pop    edi
  408876:	repz (bad) 
  408878:	sti    
  408879:	push   eax
  40887a:	mov    DWORD PTR [edi-0x3a],ecx
  40887d:	pop    edi
  40887e:	call   0xf43b7abc
  408883:	or     BYTE PTR [bp+di+0xf],ch
  408887:	pop    es
  408888:	add    cl,BYTE PTR ds:0x438d496a
  40888e:	fcom   DWORD PTR [eax+0x68]
  408891:	or     al,0x6f
  408893:	pop    ss
  408894:	or     cl,BYTE PTR [ecx]
  408896:	add    DWORD PTR [eax-0x18a238b4],ecx
  40889c:	and    bh,bh
  40889e:	cli    
  40889f:	(bad)  
  4088a0:	bound  ecx,QWORD PTR [edx+0x63]
  4088a3:	add    al,0x63
  4088a5:	or     al,BYTE PTR [ebp+0x6a55d54f]
  4088ab:	add    ebp,DWORD PTR [edx+0xf]
  4088ae:	gs add eax,0x55d54e83
  4088b4:	out    dx,al
  4088b5:	adc    bh,bh
  4088b7:	cmc    
  4088b8:	repz push eax
  4088ba:	xchg   DWORD PTR [edx-0x31],ecx
  4088bd:	pop    eax
  4088be:	loopne 0x4088b0
  4088c0:	repz stc 
  4088c2:	hlt    
  4088c3:	push   0x40
  4088c5:	push   0x4
  4088c7:	push   0x5
  4088c9:	lea    eax,[edx-0x2d]
  4088cc:	pop    ebx
  4088cd:	popa   
  4088ce:	or     esp,DWORD PTR [ecx+0xb]
  4088d1:	ins    BYTE PTR es:[edi],dx
  4088d2:	or     ecx,DWORD PTR [edx+eax*2+0x4d8153c4]
  4088d9:	lahf   
  4088da:	push   edi
  4088db:	mov    es,WORD PTR [eax-0x36]
  4088de:	push   edi
  4088df:	loopne 0x4088b4
  4088e1:	hlt    
  4088e2:	cld    
  4088e3:	stc    
  4088e4:	sbb    eax,0xf
  4088e7:	xchg   DWORD PTR [eax+0x2],ebp
  4088ea:	or     BYTE PTR [eax],al
  4088ec:	add    eax,0x6
  4088ef:	mov    fs,WORD PTR [ecx+eax*1+0xa]
  4088f3:	push   cs
  4088f4:	xchg   DWORD PTR [ebp-0x3a],ecx
  4088f7:	or     DWORD PTR [eax-0x52],0xffffff84
  4088fb:	dec    ebx
  4088fc:	(bad)  
  4088fd:	test   DWORD PTR [esi-0x51],ecx
  408900:	add    BYTE PTR [eax-0x48],0xe1
  408904:	(bad)  
  408905:	call   0xdac880fa
  40890a:	test   BYTE PTR [ebp-0x70a049c],al
  408910:	or     DWORD PTR [eax-0x29],0xffffffe4
  408914:	dec    edi
  408915:	cld    
  408916:	(bad)  
  408917:	sti    
  408918:	mov    ecx,0x1462044
  40891d:	mov    edx,0xf472cc9
  408922:	sub    eax,0x8fd285c8
  408927:	dec    ebp
  408928:	(bad)  
  408929:	push   es
  40892a:	test   BYTE PTR [edi-0x8],al
  40892d:	stc    
  40892e:	cmc    
  40892f:	loopne 0x408958
  408931:	repz cli 
  408933:	lock test DWORD PTR [eax-0x54],edx
  408937:	add    BYTE PTR [eax-0x25],0x3
  40893b:	or     DWORD PTR [ecx-0x3],0xfffffffc
  40893f:	lock mov ebx,ebp
  408942:	or     BYTE PTR [edx+ecx*1-0x15fbfe00],dh
  408949:	add    ah,dh
  40894b:	lock cli 
  40894d:	or     DWORD PTR [edx-0xb],0x885c4689
  408954:	xlat   BYTE PTR ds:[ebx]
  408955:	add    DWORD PTR [eax-0x2d],0xfaf0f0e0
  40895c:	inc    DWORD PTR [edx+0x408d025e]
  408962:	cld    
  408963:	add    BYTE PTR [ecx+edx*2+0x0],0x4d
  408968:	fidivr DWORD PTR [eax+0xb06080c]
  40896e:	call   0x337f54
  408973:	mov    WORD PTR [ebp-0x9],es
  408976:	mov    al,BYTE PTR [eax+edx*2+0x1]
  40897a:	dec    edi
  40897b:	ror    BYTE PTR [eax+eax*8+0x488c08],cl
  408982:	xchg   bh,bl
  408984:	jmp    0x408946
  408986:	hlt    
  408987:	std    
  408988:	cli    
  408989:	mov    ecx,DWORD PTR [eax+esi*8+0x9]
  40898d:	mov    bh,0x58
  40898f:	add    al,0x47
  408991:	adc    bl,0x76
  408994:	dec    esp
  408995:	inc    edx
  408996:	ret    0xbf4c
  408999:	or     eax,0x8e0a000f
  40899e:	push   esp
  40899f:	cld    
  4089a0:	sbb    DWORD PTR [ebx+0x38],0xda0bcc82
  4089a7:	mov    edi,es
  4089a9:	clc    
  4089aa:	add    eax,DWORD PTR [eax]
  4089ac:	je     0xe50b3ffa
  4089b2:	push   es
  4089b3:	mov    eax,DWORD PTR [ecx]
  4089b5:	or     BYTE PTR [ecx],0xdd
  4089b8:	mov    DWORD PTR [ecx-0x45],ebx
  4089bb:	test   BYTE PTR [ebp-0x44],bl
  4089be:	mov    cs,WORD PTR [ebp+0x16]
  4089c1:	adc    BYTE PTR [ebp-0x4c],0x8b
  4089c5:	push   esi
  4089c6:	adc    al,0x7
  4089c8:	rcl    BYTE PTR [ebp-0x80],1
  4089cb:	dec    esi
  4089cc:	mov    edi,0x5074b80
  4089d1:	dec    esi
  4089d2:	rcr    DWORD PTR [ebp-0x20],1
  4089d5:	jl     0x4089d0
  4089d7:	div    esp
  4089d9:	clc    
  4089da:	inc    eax
  4089db:	mov    ebp,0x8cb67241
  4089e0:	push   ebp
  4089e1:	repz lea edx,[edi+esi*1-0x75]
  4089e6:	inc    edi
  4089e7:	leave  
  4089e8:	cmp    al,bl
  4089ea:	je     0x408a15
  4089ec:	sub    ecx,ebx
  4089ee:	pop    ebx
  4089ef:	mov    al,BYTE PTR [ebp-0x6]
  4089f2:	pop    esi
  4089f3:	xchg   DWORD PTR [ebp-0x26],ecx
  4089f6:	pop    edx
  4089f7:	in     eax,0x92
  4089f9:	stc    
  4089fa:	icebp  
  4089fb:	icebp  
  4089fc:	xchg   DWORD PTR [esi-0x9],ecx
  4089ff:	test   BYTE PTR [eax-0x38],dl
  408a02:	adc    BYTE PTR [eax+0x37],0x84
  408a06:	dec    ebp
  408a07:	clc    
  408a08:	or     DWORD PTR [edi+0x34],0xbeda400f
  408a0f:	lock or eax,0x5d840c03
  408a15:	icebp  
  408a16:	in     al,dx
  408a17:	cmp    eax,0x8af9f7ff
  408a1c:	inc    edi
  408a1d:	fstp   QWORD PTR [eax-0x11]
  408a20:	mov    ebx,0x52f1fff4
  408a25:	in     al,dx
  408a26:	mov    ?,ecx
  408a28:	cli    
  408a29:	dec    BYTE PTR [ebx+eax*2-0x591fa52e]
  408a30:	cmc    
  408a31:	cli    
  408a32:	lock pop eax
  408a34:	in     eax,dx
  408a35:	jg     0x408a31
  408a37:	cli    
  408a38:	lock mov eax,DWORD PTR [ebx-0x6f]
  408a3c:	push   ebx
  408a3d:	jmp    0x408a18
  408a3f:	clc    
  408a40:	cld    
  408a41:	dec    DWORD PTR [esi+0x776fffa]
  408a47:	mov    DWORD PTR [esi-0x68],edi
  408a4a:	mov    dh,bl
  408a4c:	jg     0x408a52
  408a4e:	outs   dx,DWORD PTR ds:[esi]
  408a4f:	add    al,BYTE PTR [ebp-0x1daf68b3]
  408a55:	(bad)  
  408a57:	div    esp
  408a59:	xor    ch,al
  408a5b:	pop    edx
  408a5c:	push   esi
  408a5d:	push   edx
  408a5e:	push   0xffffff8f
  408a60:	adc    eax,0x412a0764
  408a65:	add    eax,DWORD PTR [ebp-0x80a0671]
  408a6b:	stc    
  408a6c:	mov    cl,0x2
  408a6e:	add    al,0x6
  408a70:	or     eax,0xf8e815e8
  408a75:	dec    BYTE PTR [ecx+0xb0ae45]
  408a7b:	str    WORD PTR [edi+ebp*8]
  408a7f:	sub    al,0xe0
  408a81:	repnz test DWORD PTR [esi-0x231544b6],0x8bfff6e7
  408a8c:	inc    ebp
  408a8d:	clc    
  408a8e:	mov    eax,0xa08070e
  408a93:	out    dx,al
  408a94:	adc    eax,0xcef8f6e9
  408a99:	out    0x6a,al
  408a9b:	out    dx,eax
  408a9c:	cli    
  408a9d:	(bad)  
  408a9e:	jecxz  0x408a6c
  408aa0:	add    dl,0x56
  408aa3:	push   ebp
  408aa4:	push   ebx
  408aa5:	sub    eax,0xbc258
  408aab:	prefetch BYTE PTR ds:0x5270b0e
  408ab2:	push   es
  408ab3:	or     eax,0xc0a0f
  408ab8:	comiss xmm1,DWORD PTR cs:[eax]
  408abc:	or     BYTE PTR ds:0xfff40607,al
  408ac2:	(bad)  
  408ac3:	inc    DWORD PTR ds:0x66000400
  408ac9:	or     ecx,DWORD PTR [ebx]
  408acb:	or     esi,esp
  408acd:	hlt    
  408ace:	hlt    
  408acf:	stc    
  408ad0:	sbb    eax,DWORD PTR [ecx]
  408ad2:	pop    es
  408ad3:	or     BYTE PTR [esi+ecx*2+0x5d],cl
  408ad7:	pop    ebp
  408ad8:	dec    ecx
  408ad9:	push   esi
  408ada:	dec    edi
  408adb:	sub    esp,DWORD PTR [esi]
  408add:	pop    edx
  408ade:	inc    ebx
  408adf:	push   ebx
  408ae0:	push   esp
  408ae1:	dec    esi
  408ae2:	inc    esp
  408ae3:	inc    edi
  408ae4:	add    BYTE PTR [edx],al
  408ae6:	add    eax,0xf9fff703
  408aeb:	inc    DWORD PTR [ebx]
  408aed:	or     eax,DWORD PTR [ecx]
  408aef:	add    BYTE PTR [eax+0x4c],al
  408af2:	push   esp
  408af3:	fs push 0x7b
  408af6:	cmp    edi,DWORD PTR [edx]
  408af8:	aaa    
  408af9:	cs push cs
  408afb:	or     al,0x13
  408afd:	pop    es
  408afe:	syscall 
  408b00:	popa   
  408b01:	or     DWORD PTR [eax+0x3],edi
  408b04:	jg     0x408b0e
  408b06:	pusha  
  408b07:	or     ah,BYTE PTR [eax+0x8]
  408b0a:	jle    0x408b11
  408b0c:	outs   dx,DWORD PTR ds:[esi]
  408b0d:	pop    es
  408b0e:	jp     0x408b1d
  408b10:	sub    eax,0x79086a0c
  408b15:	add    al,0x65
  408b17:	or     al,0x8
  408b19:	push   es
  408b1a:	add    DWORD PTR [edx],eax
  408b1c:	sbb    ecx,DWORD PTR [eax]
  408b1e:	pop    es
  408b1f:	pcmpeqw mm0,QWORD PTR [eax]
  408b22:	js     0x408b26
  408b24:	or     BYTE PTR [bp+si+0x5],ch
  408b28:	outs   dx,BYTE PTR ds:[esi]
  408b29:	pop    es
  408b2a:	jne    0x408b32
  408b2c:	jle    0x408b36
  408b2e:	sub    eax,0x700f6007
  408b33:	add    eax,0xf05096d
  408b38:	push   ebp
  408b39:	(bad)  
  408b3a:	in     eax,0x30
  408b3c:	ret    
  408b3d:	pop    edx
  408b3e:	(bad)  
  408b3f:	retf   0x4d2e
  408b42:	add    ah,BYTE PTR [ebp+edi*8+0x34]
  408b46:	data16 and BYTE PTR [eax],0xf0
  408b4a:	add    BYTE PTR [esi+0x79],dh
  408b4d:	inc    ebp
  408b4e:	add    bh,BYTE PTR ds:0x535959c8
  408b54:	popa   
  408b55:	mov    bl,BYTE PTR [eax]
  408b57:	arpl   bx,dx
  408b59:	sub    eax,DWORD PTR [eax+0xf]
  408b5c:	enter  0xa0e7,0xe1
  408b60:	repz hlt 
  408b62:	out    dx,eax
  408b63:	stc    
  408b64:	pop    esi
  408b65:	retf   
  408b66:	add    ecx,0x7d7a258b
  408b6c:	inc    eax
  408b6d:	add    al,0x7
  408b6f:	into   
  408b70:	push   ebp
  408b71:	mov    esp,gs
  408b73:	xor    al,0xc1
  408b75:	push   ecx
  408b76:	push   0xf422503
  408b7b:	fs repz aaa 
  408b7e:	popa   
  408b7f:	test   DWORD PTR ds:0x718f06f7,ebp
  408b85:	inc    edx
  408b86:	add    eax,0x5f5ac933
  408b8b:	pop    ecx
  408b8c:	mov    ebx,DWORD PTR fs:[edi+ebp*2]
  408b90:	add    BYTE PTR ds:0xe0c60146,ah
  408b96:	imul   ebp,ecx,0xfde1fff0
  408b9c:	pop    esp
  408b9d:	retf   
  408b9e:	or     ecx,0x7e8b2487
  408ba4:	dec    edx
  408ba5:	or     eax,0x8b56c304
  408baa:	jecxz  0x408b30
  408bac:	inc    eax
  408bad:	push   es
  408bae:	cmp    bh,dl
  408bb0:	mov    WORD PTR [esi-0x5f],ss
  408bb3:	or     BYTE PTR [edi+0x4],0x33
  408bb7:	fiadd  WORD PTR [esi+0x4083a05f]
  408bbd:	sysexit 
  408bbf:	(bad)  [ecx+0x458fa450]
  408bc5:	or     al,0x83
  408bc7:	(bad)  
  408bc8:	retf   
  408bc9:	cmp    dl,al
  408bcb:	mov    cl,0x4b
  408bcd:	or     eax,DWORD PTR [esi]
  408bcf:	or     ebp,ecx
  408bd1:	clc    
  408bd2:	jmp    0x860f:0x4e83f5fc
  408bd9:	lds    edi,FWORD PTR [edx+0x10bdc134]
  408bdf:	add    eax,DWORD PTR [esi]
  408be1:	push   es
  408be2:	jmp    0x408bd1
  408be4:	loopne 0x408be0
  408be6:	cld    
  408be7:	push   ebp
  408be8:	ret    
  408be9:	mov    eax,DWORD PTR [eax+0x9]
  408bec:	pop    esi
  408bed:	mov    ch,ah
  408bef:	or     DWORD PTR [ebx+0x4],0xf2bae258
  408bf6:	cmc    
  408bf7:	lock push edi
  408bf9:	test   DWORD PTR [ecx+0x3],ecx
  408bfc:	ror    BYTE PTR [edi-0x4b],0x5
  408c00:	sub    al,BYTE PTR [ebp+0x64]
  408c03:	test   BYTE PTR [ebp+0x4],cl
  408c06:	int    0x4f
  408c08:	mov    esp,0xe8c7ae85
  408c0d:	or     DWORD PTR [eax+0xb],0xffffffcb
  408c11:	dec    edi
  408c12:	mov    al,0xff
  408c14:	fdivr  DWORD PTR [edx+0x9438394]
  408c1a:	lds    ecx,FWORD PTR [ebp-0x4c]
  408c1d:	jno    0x408c7a
  408c1f:	xor    al,0x10
  408c21:	push   ebx
  408c22:	rcl    DWORD PTR [ebx+ebx*2-0x20753077],0xd5
  408c2a:	in     eax,0xb3
  408c2c:	sub    BYTE PTR [ebx],al
  408c2e:	pop    es
  408c2f:	add    eax,0xe0d6c224
  408c34:	add    bl,ch
  408c36:	test   bl,al
  408c38:	pop    ebp
  408c39:	retf   0xc388
  408c3c:	pop    edx
  408c3d:	sub    edi,0x53bec983
  408c43:	push   esp
  408c44:	push   ebx
  408c45:	(bad)  
  408c46:	pop    esi
  408c47:	mov    esp,0x8c024084
  408c4c:	(bad)
  408c4f:	dec    eax
  408c50:	add    eax,DWORD PTR [eax]
  408c52:	or     ch,ch
  408c54:	sti    
  408c55:	jmp    0x45cf894e
  408c5a:	pop    es
  408c5b:	adc    BYTE PTR [esi-0x4a],0x8e
  408c5f:	dec    ecx
  408c60:	add    ecx,DWORD PTR [edi+0x4f83b771]
  408c66:	or     DWORD PTR [ebx+0x4580be70],eax
  408c6c:	or     al,0x8d
  408c6e:	dec    ebp
  408c6f:	mov    esp,0x8afb458e
  408c74:	inc    ecx
  408c75:	cld    
  408c76:	xor    ebp,ecx
  408c78:	and    ecx,ecx
  408c7a:	xor    ecx,DWORD PTR [ecx-0x5]
  408c7d:	push   es
  408c7e:	iret   
  408c7f:	push   cs
  408c80:	dec    ebp
  408c81:	mov    edi,0x6fa67f0a
  408c86:	xlat   BYTE PTR ds:[ebx]
  408c87:	mov    bl,0x7
  408c89:	push   es
  408c8a:	add    BYTE PTR [eax],al
  408c8c:	jmp    0xc705:0xf5f7f89f
  408c93:	mov    ss,ecx
  408c95:	mov    edx,cs
  408c97:	cmp    al,0xc6
  408c99:	sub    esi,eax
  408c9b:	xor    cl,bh
  408c9d:	or     DWORD PTR [eax+edi*8+0xa],ecx
  408ca1:	dec    esi
  408ca2:	enter  0x5b0f,0xb2
  408ca6:	(bad)  
  408ca7:	jmp    0x408c63
  408ca9:	add    ecx,DWORD PTR [edi]
  408cab:	add    eax,0xfa77e30e
  408cb0:	stc    
  408cb1:	repnz or cl,cl
  408cb4:	test   DWORD PTR [ebp-0x10],eax
  408cb7:	test   cl,cl
  408cb9:	cmp    ecx,ebx
  408cbb:	es inc edx
  408cbd:	cli    
  408cbe:	cmp    dh,al
  408cc0:	add    eax,edi
  408cc2:	pop    es
  408cc3:	inc    ebp
  408cc4:	rol    BYTE PTR ds:0x2f2b7bdc,0xb1
  408ccb:	sbb    cl,BYTE PTR [ebx]
  408ccd:	push   es
  408cce:	or     ebp,ecx
  408cd0:	push   edi
  408cd1:	idiv   esp
  408cd3:	cmc    
  408cd4:	or     ecx,DWORD PTR [esi-0x5]
  408cd7:	mov    ?,ebp
  408cd9:	add    DWORD PTR [edx-0xc],0xc120c334
  408ce0:	xor    eax,0x6c403c0
  408ce5:	inc    esi
  408ce6:	rol    BYTE PTR ds:0xcab4cee8,0xbb
  408ced:	push   ss
  408cee:	or     cl,BYTE PTR [esi]
  408cf0:	or     al,0xe0
  408cf2:	and    al,0xf5
  408cf4:	repnz cmc 
  408cf6:	or     al,0xc9
  408cf8:	test   esp,edi
  408cfa:	add    BYTE PTR [edx-0xd],0x36
  408cfe:	ret    
  408cff:	sub    al,dh
  408d01:	xor    BYTE PTR [edx-0xc],cl
  408d04:	bswap  ecx
  408d06:	or     al,0x4d
  408d08:	rol    BYTE PTR [eax],0xa5
  408d0b:	or     BYTE PTR [eax+edi*8-0x47],dh
  408d0f:	or     ecx,DWORD PTR [edi]
  408d11:	or     BYTE PTR [ecx],al
  408d13:	in     al,dx
  408d14:	or     al,0xf3
  408d16:	idiv   ecx
  408d18:	add    al,ah
  408d1a:	xchg   al,dl
  408d1c:	mov    eax,cs
  408d1e:	xor    eax,0x37c12dc6
  408d23:	iret   
  408d24:	add    DWORD PTR [eax-0x3],eax
  408d27:	add    al,0x43
  408d29:	(bad)  
  408d2a:	mov    cr0,ebp
  408d2d:	add    BYTE PTR [edx-0x4b],0x4
  408d31:	add    eax,0xe4ed0908
  408d36:	(bad)  
  408d37:	stc    
  408d38:	test   BYTE PTR [eax],0xc0
  408d3b:	xchg   BYTE PTR [edi-0x1],cl
  408d3e:	mov    ecx,ebx
  408d40:	xor    ebx,eax
  408d42:	and    DWORD PTR [ecx-0x2],eax
  408d45:	cmp    dh,al
  408d47:	or     al,0xc2
  408d49:	or     DWORD PTR [edx-0x2f],ecx
  408d4c:	pop    es
  408d4d:	sbb    eax,0xb0a8334e
  408d52:	adc    al,0x3
  408d54:	or     BYTE PTR [ebx],cl
  408d56:	jmp    0x408d24
  408d58:	(bad)  
  408d59:	lock hlt 
  408d5b:	or     eax,0xf387f943
  408d60:	pop    DWORD PTR [edi+edi*8+0x3b]
  408d64:	leave  
  408d65:	and    cl,bh
  408d67:	cmp    eax,ebp
  408d69:	or     dh,al
  408d6b:	pop    es
  408d6c:	inc    ebx
  408d6d:	aad    0x5
  408d6f:	push   es
  408d70:	xchg   ebp,eax
  408d71:	inc    ecx
  408d72:	cld    
  408d73:	mov    esi,0x20a0216
  408d78:	out    0xa7,eax
  408d7a:	repnz clc 
  408d7c:	cli    
  408d7d:	bswap  edx
  408d7f:	xor    ebx,0xffffff84
  408d82:	inc    edx
  408d83:	(bad)  
  408d84:	ss (bad) 
  408d86:	sub    al,dh
  408d88:	xor    eax,0xcf01fc45
  408d8d:	add    al,0x4d
  408d8f:	(bad)  
  408d90:	add    ebx,ecx
  408d92:	popf   
  408d93:	mov    DWORD PTR [esi-0x49],ebp
  408d96:	or     BYTE PTR [eax],al
  408d98:	or     al,BYTE PTR ds:0xf6f48de9
  408d9e:	sti    
  408d9f:	or     cl,ch
  408da1:	adc    edx,0xffffff86
  408da4:	ret    0xc533
  408da7:	and    ecx,esp
  408da9:	cmp    al,0xc2
  408dab:	or     eax,0x4306f94e
  408db0:	in     eax,dx
  408db1:	push   cs
  408db2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408db3:	sti    
  408db4:	inc    esp
  408db5:	xchg   DWORD PTR [ebp+0x5080803],esi
  408dbb:	out    dx,eax
  408dbc:	(bad)  
  408dbd:	cmc    
  408dbe:	(bad)  
  408dbf:	inc    DWORD PTR [ebx]
  408dc1:	(bad)  
  408dc2:	mov    DWORD PTR [ecx-0x4],eax
  408dc5:	mov    ebp,cs
  408dc7:	cmp    al,cl
  408dc9:	sub    BYTE PTR [esi-0x9],cl
  408dcc:	xor    eax,0xbc002cd
  408dd1:	inc    esi
  408dd2:	out    dx,al
  408dd3:	or     eax,0xfafa5cba
  408dd8:	mov    al,0x16
  408dda:	or     BYTE PTR [edi],al
  408ddc:	add    bl,ch
  408dde:	inc    esp
  408ddf:	clc    
  408de0:	cld    
  408de1:	inc    DWORD PTR [ecx]
  408de3:	inc    eax
  408de4:	inc    DWORD PTR [ebx-0xaba7208]
  408dea:	cmp    dl,al
  408dec:	and    ecx,ebp
  408dee:	cmp    eax,0x9cc0bcf
  408df3:	dec    eax
  408df4:	loop   0x408e00
  408df6:	mov    al,0xd9
  408df8:	push   eax
  408df9:	cmp    BYTE PTR [ebp+0x9040519],0xe8
  408e00:	and    esi,ecx
  408e02:	div    ebx
  408e04:	or     eax,ecx
  408e06:	cmp    esp,0xffffff8e
  408e09:	dec    edi
  408e0a:	sti    
  408e0b:	cmp    ecx,edx
  408e0d:	and    dl,cl
  408e0f:	cmp    al,0x4d
  408e11:	std    
  408e12:	pop    es
  408e13:	ret    
  408e14:	cmovge ebp,edx
  408e17:	add    al,0x20
  408e19:	sbb    al,0x98
  408e1b:	ins    BYTE PTR es:[edi],dx
  408e1c:	mov    ch,0x1
  408e1e:	add    BYTE PTR [esi],cl
  408e20:	add    ch,ah
  408e22:	idiv   bh
  408e24:	cli    
  408e25:	inc    BYTE PTR [eax+eax*8]
  408e28:	(bad)  
  408e29:	rol    BYTE PTR [ebx+0x2cc334c4],cl
  408e2f:	retf   
  408e30:	ss iret 
  408e32:	or     al,BYTE PTR [eax-0xd]
  408e35:	add    eax,DWORD PTR [ebx-0x7]
  408e38:	push   es
  408e39:	nop
  408e3a:	jle    0x408dce
  408e3c:	(bad)  
  408e3d:	mov    edx,0x2000201
  408e42:	in     al,dx
  408e43:	fcomip st,st(6)
  408e45:	push   eax
  408e47:	push   es
  408e48:	leave  
  408e49:	xchg   BYTE PTR [eax-0x2],al
  408e4c:	test   esi,ecx
  408e4e:	xor    bl,al
  408e50:	sub    DWORD PTR [eax-0x1],eax
  408e53:	cmp    ecx,ebp
  408e55:	add    dl,al
  408e57:	add    ecx,DWORD PTR [edx-0x1]
  408e5a:	or     ecx,DWORD PTR [eax-0x41528aba]
  408e60:	adc    BYTE PTR [ebx],al
  408e62:	or     BYTE PTR [edx],cl
  408e64:	jmp    0xf53a841c
  408e69:	add    eax,DWORD PTR [ecx-0x6]
  408e6c:	xchg   al,bh
  408e6e:	mov    WORD PTR [ebp-0x5],es
  408e71:	xor    al,bh
  408e73:	and    eax,ebp
  408e75:	cmp    ecx,eax
  408e77:	or     al,0xc6
  408e79:	cmovb  edi,ebp
  408e7c:	or     DWORD PTR [eax+eax*1],ebp
  408e7f:	mov    bh,0x46
  408e81:	mov    ebp,0x9000514
  408e86:	call   0xfe408c2a
  408e8b:	xadd   BYTE PTR [ebx+0x36c68dfa],al
  408e92:	iret   
  408e93:	and    al,0x48
  408e95:	repz xor ecx,ebp
  408e98:	push   es
  408e99:	ret    0x4f0b
  408e9c:	leave  
  408e9d:	add    DWORD PTR [ebx+0x2e],ebp
  408ea0:	push   ss
  408ea1:	cld    
  408ea2:	mov    bh,0x0
  408ea4:	add    BYTE PTR [ebx],al
  408ea6:	add    bh,ah
  408ea8:	ja     0x408ea2
  408eaa:	icebp  
  408eab:	hlt    
  408eac:	push   es
  408ead:	ret    
  408eae:	(bad)  
  408eaf:	aad    0x80
  408eb1:	int3   
  408eb2:	aas    
  408eb3:	ret    
  408eb4:	das    
  408eb5:	enter  0xce3c,0xb
  408eb9:	inc    eax
  408eba:	sti    
  408ebb:	add    eax,0x4005d44e
  408ec0:	mov    bh,0x40
  408ec2:	les    edi,FWORD PTR [edx+0xb0b0b0e]
  408ec8:	jecxz  0x408f26
  408eca:	idiv   cl
  408ecc:	hlt    
  408ecd:	add    al,ah
  408ecf:	add    DWORD PTR [esi-0xa],0x36fb4e83
  408ed6:	(bad)  
  408ed7:	sub    ecx,eax
  408ed9:	cmp    eax,esp
  408edb:	add    eax,esp
  408edd:	add    eax,0x5305eb43
  408ee2:	pop    edi
  408ee3:	pop    ebp
  408ee4:	cs mov edx,0xb090008
  408eea:	jmp    0xf4328624
  408eef:	or     ecx,DWORD PTR [edi-0xa]
  408ef2:	xchg   dl,dh
  408ef4:	test   BYTE PTR [ebx-0xe],cl
  408ef7:	aas    
  408ef8:	int3   
  408ef9:	and    al,0xcc
  408efb:	ss inc ecx
  408efd:	cmc    
  408efe:	add    eax,ebp
  408f00:	or     al,0x4d
  408f02:	mov    al,0xf
  408f04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f05:	iret   
  408f06:	mov    edx,0x813b0ec
  408f0b:	or     eax,0xf51de403
  408f10:	(bad)  
  408f11:	sti    
  408f12:	add    ecx,ebx
  408f14:	xor    esi,0xffffff8a
  408f17:	lds    edi,FWORD PTR [esi]
  408f19:	into   
  408f1a:	and    al,0x4a
  408f1c:	cli    
  408f1d:	xor    ecx,ecx
  408f1f:	add    edi,eax
  408f21:	or     eax,DWORD PTR [edi-0x2b]
  408f24:	add    al,0x5a
  408f26:	push   ss
  408f27:	sub    esp,ebx
  408f29:	mov    dl,0x6
  408f2b:	pop    es
  408f2c:	add    eax,0xf4f4e00f
  408f31:	idiv   dl
  408f33:	or     al,0xc6
  408f35:	(bad)  
  408f36:	ror    DWORD PTR [eax+0x20c93cc5],1
  408f3c:	(bad)  
  408f3d:	les    eax,FWORD PTR ds:[ebx]
  408f40:	inc    edi
  408f41:	clc    
  408f42:	add    DWORD PTR [esi-0x1c],ecx
  408f45:	or     dl,BYTE PTR [esi+0x1e]
  408f48:	dec    ebx
  408f49:	pop    es
  408f4a:	mov    eax,0x30807
  408f4f:	loop   0x408f26
  408f51:	push   edi
  408f53:	hlt    
  408f54:	add    dh,al
  408f56:	mov    DWORD PTR [edx-0x9],ecx
  408f59:	test   DWORD PTR [ebx-0x7],eax
  408f5c:	aas    
  408f5d:	enter  0xc727,0x30
  408f61:	retf   
  408f62:	or     esi,eax
  408f64:	or     ecx,DWORD PTR [ebp-0x2]
  408f67:	push   cs
  408f68:	and    edx,0x9bad5a7
  408f6e:	add    BYTE PTR [edi],al
  408f70:	add    esp,ebp
  408f72:	scas   al,BYTE PTR es:[edi]
  408f73:	(bad)  
  408f74:	cmc    
  408f75:	std    
  408f76:	or     al,0x45
  408f78:	lock mov ebp,?
  408f7b:	xchg   DWORD PTR [eax-0xc],ecx
  408f7e:	xor    al,cl
  408f80:	and    al,0xc1
  408f82:	ss inc ebp
  408f84:	cmc    
  408f85:	add    eax,eax
  408f87:	add    eax,DWORD PTR [ebp-0x32]
  408f8a:	or     edi,ecx
  408f8c:	repz fabs 
  408f8f:	mov    ebx,0xd070911
  408f94:	out    0x8b,eax
  408f96:	idiv   dl
  408f98:	dec    BYTE PTR [ebx]
  408f9a:	int    0x82
  408f9c:	hlt    
  408f9d:	or     ah,0x3b
  408fa0:	int3   
  408fa1:	cs inc eax
  408fa3:	cld    
  408fa4:	xor    bh,al
  408fa6:	or     al,0xcc
  408fa8:	push   es
  408fa9:	dec    ebx
  408faa:	jmp    0x408fac
  408fac:	jecxz  0x408f79
  408fae:	in     al,dx
  408faf:	sub    dh,BYTE PTR [eax+0xf0c0009]
  408fb5:	out    0x62,eax
  408fb7:	hlt    
  408fb8:	cli    
  408fb9:	clc    
  408fba:	add    eax,0x8bd88bcd
  408fbf:	ret    0xc733
  408fc2:	and    eax,eax
  408fc4:	cmp    ch,cl
  408fc6:	or     BYTE PTR [esi-0x9],cl
  408fc9:	or     BYTE PTR [ebx-0x1],al
  408fcc:	add    al,0xd1
  408fce:	sysenter 
  408fd0:	leave  
  408fd1:	mov    dl,0x2
  408fd3:	pop    es
  408fd4:	add    eax,0xf44ee205
  408fd9:	clc    
  408fda:	inc    DWORD PTR [eax]
  408fdc:	lds    ecx,FWORD PTR [edi+0x4089fc46]
  408fe2:	(bad)  
  408fe3:	cmp    eax,ebx
  408fe5:	and    eax,0x2c83ac6
  408fea:	(bad)  
  408feb:	or     DWORD PTR [ebx-0x3c],ecx
  408fee:	or     eax,0xfed8078d
  408ff3:	mov    ch,0x0
  408ff5:	push   cs
  408ff6:	or     al,0xb
  408ff8:	out    dx,eax
  408ff9:	sub    cl,bh
  408ffb:	sti    
  408ffc:	test   BYTE PTR [ebx],0x46
  408fff:	repz xor esp,0xffffff81
  409003:	dec    edx
  409004:	hlt    
  409005:	aas    
  409006:	ret    0xc429
  409009:	cmp    ecx,DWORD PTR [eax-0x1]
  40900c:	bswap  ecx
  40900e:	or     eax,DWORD PTR [eax+ebx*8+0x5]
  409012:	loope  0x409030
  409014:	pop    esp
  409015:	inc    esp
  409016:	mov    eax,0xf070819
  40901b:	out    dx,al
  40901c:	add    al,0xf2
  40901e:	std    
  40901f:	sti    
  409020:	or     eax,ebp
  409022:	mov    ?,ecx
  409024:	mov    ecx,es
  409026:	xor    eax,0xfb462bcc
  40902b:	ss enter 0xc60b,0xb
  409030:	dec    esp
  409031:	cmc    
  409032:	or     al,BYTE PTR ds:0xb9aaeaef
  409038:	or     cl,BYTE PTR [edx]
  40903a:	add    eax,DWORD PTR [eax]
  40903c:	in     eax,0xe1
  40903e:	sti    
  40903f:	std    
  409040:	sti    
  409041:	add    ebp,ecx
  409043:	mov    edx,edi
  409045:	mov    cs,esp
  409047:	cmp    al,0xc6
  409049:	and    ecx,ecx
  40904b:	cmp    eax,ebp
  40904d:	add    ecx,DWORD PTR [edi-0x7]
  409050:	add    BYTE PTR [ebp-0x31],cl
  409053:	push   es
  409054:	std    
  409055:	mov    ds:0xfb4f7e0,eax
  40905a:	add    eax,0xc3ec0b0c
  40905f:	clc    
  409060:	div    ebp
  409062:	add    cl,bl
  409064:	add    DWORD PTR [ebx-0x9],0x3efa418b
  40906b:	ret    
  40906c:	and    al,0xc6
  40906e:	xor    al,0xc2
  409070:	pop    es
  409071:	mov    DWORD PTR [ecx],0xd90ada4f
  409077:	push   cs
  409078:	push   0x803b662
  40907d:	add    ecx,DWORD PTR [edi]
  40907f:	out    dx,eax
  409080:	mov    ds:0x3f6fffe,al
  409085:	inc    ebx
  409086:	cld    
  409087:	mov    edi,edx
  409089:	xchg   DWORD PTR [edx-0xc],eax
  40908c:	cmp    ecx,eax
  40908e:	and    al,dh
  409090:	cmp    al,BYTE PTR [edx-0xf]
  409093:	or     al,0xc6
  409095:	or     DWORD PTR [eax-0x13],eax
  409098:	or     eax,0x842e4580
  40909d:	mov    cl,0x1c
  40909f:	or     cl,BYTE PTR ds:0xfb7ee805
  4090a5:	lock lock push es
  4090a8:	leave  
  4090a9:	xor    ch,0x8e
  4090ac:	sar    DWORD PTR [esi],0xcd
  4090af:	cmp    DWORD PTR [ecx-0x4],ecx
  4090b2:	bswap  esp
  4090b4:	or     al,0x4d
  4090b6:	fadd   DWORD PTR [eax]
  4090b8:	inc    ebp
  4090b9:	aas    
  4090ba:	icebp  
  4090bb:	(bad)  
  4090bc:	mov    edx,0x4000404
  4090c1:	call   0xf535811f
  4090c6:	or     ch,cl
  4090c8:	sbb    dh,0x80
  4090cb:	(bad)  
  4090cc:	xor    al,0xcb
  4090ce:	xor    ch,cl
  4090d0:	or     ecx,DWORD PTR [esi-0x5]
  4090d3:	push   es
  4090d4:	inc    eax
  4090d5:	(bad)  
  4090d6:	add    cl,BYTE PTR [ecx-0x437b8e0f]
  4090dc:	or     eax,0xed020003
  4090e1:	cmp    al,0xf3
  4090e3:	(bad)  
  4090e4:	stc    
  4090e5:	add    ecx,edx
  4090e7:	add    BYTE PTR [esp+edi*8-0x7f],0x4b
  4090ec:	lock cmp ecx,ecx
  4090ef:	cmp    ebx,ecx
  4090f1:	or     eax,ecx
  4090f3:	or     eax,0x250ee44b
  4090f8:	outs   dx,BYTE PTR ds:[esi]
  4090f9:	cwde   
  4090fa:	imul   esi,DWORD PTR [ebx+0x80f0310],0xf7f415e4
  409104:	repz push es
  409106:	dec    edi
  409107:	sti    
  409108:	xor    ebp,0xffffff88
  40910b:	dec    ecx
  40910c:	repz cmp eax,esi
  40910f:	aaa    
  409110:	ret    
  409111:	bswap  esi
  409113:	add    eax,0x408f644
  409118:	aas    
  409119:	jmp    0x804:0x219bafb
  409120:	jmp    0xcd05:0xf9f8fbfa
  409127:	xor    ebx,0xffffff8c
  40912a:	ret    0xce3c
  40912d:	ss dec ebp
  40912f:	cmc    
  409130:	push   es
  409131:	int3   
  409132:	add    eax,DWORD PTR [ebx-0x37]
  409135:	push   es
  409136:	inc    edi
  409137:	in     eax,0xb4
  409139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40913a:	mov    edx,0x2000209
  40913f:	in     al,dx
  409140:	loop   0x409133
  409142:	push   eax
  409144:	push   es
  409145:	int3   
  409146:	test   ch,bl
  409148:	mov    eax,ecx
  40914a:	cmp    eax,eax
  40914c:	xor    ecx,ebp
  40914e:	push   es
  40914f:	inc    esi
  409150:	hlt    
  409151:	or     BYTE PTR [esi-0x37],al
  409154:	add    eax,0x4dd0c4a6
  409159:	mov    edi,0x1040b07
  40915e:	jmp    0x409129
  409160:	lock (bad) 
  409162:	test   DWORD PTR [ebx],0xf84582c5
  409168:	lea    ecx,[eax-0x4]
  40916b:	xor    al,0xc3
  40916d:	xor    al,0xc7
  40916f:	pop    es
  409170:	mov    DWORD PTR [ecx],0x600ada4f
  409176:	inc    edi
  409177:	mov    esp,0x81db6f3
  40917c:	add    ecx,DWORD PTR [edi]
  40917e:	out    dx,eax
  40917f:	mov    ds:0x3f6ffff,eax
  409184:	inc    ebx
  409185:	cld    
  409186:	mov    edi,edx
  409188:	xchg   DWORD PTR [edx-0xc],eax
  40918b:	cmp    ecx,eax
  40918d:	xor    al,dh
  40918f:	or     al,cl
  409191:	push   cs
  409192:	dec    edx
  409193:	in     al,0xf
  409195:	jne    0x409154
  409197:	mov    bh,0xb4
  409199:	mov    bl,0x13
  40919b:	or     DWORD PTR [ebx],ecx
  40919d:	or     dl,ah
  40919f:	mov    edi,?
  4091a1:	(bad)  
  4091a2:	cld    
  4091a3:	add    ecx,eax
  4091a5:	test   ch,dh
  4091a7:	test   esp,ecx
  4091a9:	ss ret 
  4091ab:	xor    eax,0xcf09f748
  4091b0:	add    ecx,DWORD PTR [ecx-0x1]
  4091b3:	or     cl,dh
  4091b5:	jbe    0x409155
  4091b7:	das    
  4091b8:	mov    esp,0xf
  4091bd:	in     al,dx
  4091be:	(bad)  
  4091bf:	(bad)  
  4091c0:	(bad)  
  4091c1:	clc    
  4091c2:	or     ch,cl
  4091c4:	adc    bl,0x80
  4091c7:	int    0x35
  4091c9:	enter  0xc032,0xb
  4091cd:	inc    esi
  4091ce:	test   BYTE PTR [ebx],0x4e
  4091d1:	mov    ebx,0xa62dff00
  4091d6:	loop   0x409195
  4091d8:	or     eax,DWORD PTR [ebx]
  4091da:	push   es
  4091db:	push   es
  4091dc:	jmp    0x409221
  4091de:	clc    
  4091df:	cli    
  4091e0:	cld    
  4091e1:	or     eax,ebx
  4091e3:	pop    DWORD PTR [ebp-0xb]
  4091e6:	add    BYTE PTR [esp+edi*8+0x39],0xcd
  4091eb:	aas    
  4091ec:	into   
  4091ed:	or     ebp,ecx
  4091ef:	push   cs
  4091f0:	dec    edi
  4091f1:	(bad)  
  4091f2:	or     ecx,DWORD PTR [ebx-0x4a2c1bc4]
  4091f8:	adc    eax,0xeb000904
  4091fd:	sub    al,0xf2
  4091ff:	repz cmc 
  409201:	or     al,0x4d
  409203:	lock mov ?,edx
  409206:	mov    WORD PTR [ebp-0xf],cs
  409209:	xor    bl,cl
  40920b:	cmp    al,0xcb
  40920d:	add    al,dl
  40920f:	add    ecx,DWORD PTR [ecx-0x24]
  409212:	add    eax,DWORD PTR [edi+ebx*1]
  409215:	test   DWORD PTR [edi*4+0xe000618],ecx
  40921c:	jmp    0xc002:0xfafdf207
  409223:	(bad)  
  409224:	test   BYTE PTR [ecx+0x36c130cf],0x4a
  40922b:	hlt    
  40922c:	push   es
  40922d:	retf   
  40922e:	or     al,BYTE PTR [eax-0x11]
  409231:	add    eax,0xdad7d93f
  409236:	mov    ch,0xe
  409238:	add    eax,DWORD PTR [eax]
  40923a:	or     eax,0xfbfbe4ea
  40923f:	std    
  409240:	or     dh,al
  409242:	test   ch,bl
  409244:	or     ecx,0xcf3dc136
  40924a:	add    BYTE PTR [ebp-0xa],al
  40924d:	push   es
  40924e:	inc    esi
  40924f:	in     al,0xe
  409251:	out    0x9c,al
  409253:	fucomi st,st(1)
  409255:	mov    cl,0x5
  409257:	push   es
  409258:	add    eax,0xf8c1e30c
  40925d:	cld    
  40925e:	test   DWORD PTR [ecx],0xfa4d81c2
  409264:	add    BYTE PTR [ebp-0x8],0x35
  409268:	into   
  409269:	xor    eax,ecx
  40926b:	add    eax,eax
  40926d:	add    al,BYTE PTR [ecx-0x8]
  409270:	pop    es
  409271:	bnd jle 0x409221
  409274:	pop    ds
  409275:	mov    dh,0x17
  409277:	add    eax,0xa6e00d0c
  40927c:	idiv   al
  40927e:	std    
  40927f:	push   es
  409280:	inc    ebp
  409281:	cmc    
  409282:	mov    edi,esi
  409284:	mov    eax,DWORD PTR [ebp-0x2]
  409287:	aas    
  409288:	sar    BYTE PTR [ebx],0xc9
  40928b:	add    eax,0xc34c06c7
  409290:	or     BYTE PTR [edx+0x56],ch
  409293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409294:	sar    DWORD PTR [ebx+0x4090a1f],0xe1
  40929b:	mov    ?,ecx
  40929d:	cmc    
  40929e:	repnz push es
  4092a0:	(bad)  
  4092a1:	mov    al,dh
  4092a3:	test   BYTE PTR [edx-0x7],cl
  4092a6:	stc    
  4092a7:	fisttp DWORD PTR [esi]
  4092a9:	ret    
  4092aa:	xor    eax,0xfc908ca
  4092af:	inc    ebp
  4092b0:	mov    al,0xa
  4092b2:	dec    ebx
  4092b3:	sub    ah,BYTE PTR [ecx]
  4092b5:	icebp  
  4092b6:	mov    ebp,0xb00
  4092bb:	call   0x3c8c20
  4092c0:	add    al,0xcd
  4092c2:	adc    bl,0x80
  4092c5:	int3   
  4092c6:	cld    
  4092c7:	(bad)  
  4092c8:	add    dl,al
  4092ca:	xor    al,0xce
  4092cc:	add    BYTE PTR [edi-0xc],cl
  4092cf:	or     BYTE PTR [edx-0x23],al
  4092d2:	add    BYTE PTR [ebp-0x45bbdd08],bl
  4092d8:	or     DWORD PTR [esi],eax
  4092da:	push   es
  4092db:	add    ebp,eax
  4092dd:	inc    ecx
  4092de:	cld    
  4092df:	cld    
  4092e0:	test   DWORD PTR [ebx],0xf74c89c5
  4092e6:	mov    al,dh
  4092e8:	std    
  4092e9:	fiadd  WORD PTR [edi]
  4092eb:	dec    ebp
  4092ec:	idiv   BYTE PTR [ecx]
  4092ee:	into   
  4092ef:	or     eax,ecx
  4092f1:	or     eax,0xa00ef84b
  4092f6:	sub    al,0x91
  4092f8:	scas   eax,DWORD PTR es:[edi]
  4092f9:	mov    bl,0xf
  4092fb:	add    ecx,DWORD PTR [edi]
  4092fd:	or     ah,ah
  4092ff:	sub    esi,esi
  409301:	div    ebx
  409303:	push   es
  409304:	dec    edi
  409305:	sti    
  409306:	xor    ebp,0xffffff88
  409309:	iret   
  40930a:	clc    
  40930b:	fmul   DWORD PTR [edx]
  40930d:	ret    
  40930e:	xor    ecx,DWORD PTR [ecx-0xc]
  409311:	add    eax,0xd84801c7
  409316:	add    dh,BYTE PTR [esi]
  409318:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409319:	xchg   ebx,eax
  40931a:	repnz mov eax,0x5020811
  409320:	jmp    0xf63a921d
  409325:	or     eax,esp
  409327:	mov    ebp,?
  409329:	test   BYTE PTR [ebp-0x7],cl
  40932c:	(bad)  
  40932d:	(bad)  [esi]
  40932f:	leave  
  409330:	xor    eax,ecx
  409332:	or     al,al
  409334:	add    BYTE PTR [edx-0x1a],cl
  409337:	push   es
  409338:	ret    
  409339:	push   esp
  40933a:	pop    ecx
  40933b:	gs mov eax,0xb0202
  409341:	out    0xdb,eax
  409343:	repnz lock cli 
  409346:	add    eax,ecx
  409348:	sbb    ebx,0xffffff8b
  40934b:	int    0xf2
  40934d:	rol    DWORD PTR [ebx],cl
  40934f:	enter  0xc330,0x3
  409353:	dec    edx
  409354:	test   DWORD PTR ds:0x9909cd43,0xb28c0dc8
  40935e:	add    BYTE PTR [ecx],al
  409360:	or     BYTE PTR [eax],cl
  409362:	out    dx,al
  409363:	mov    dh,0xf8
  409365:	sti    
  409366:	stc    
  409367:	push   cs
  409368:	ret    
  409369:	mov    es,WORD PTR [ebp-0x5]
  40936c:	mov    al,dl
  40936e:	not    edx
  409370:	add    DWORD PTR [edi-0xd],eax
  409373:	xor    ecx,edi
  409375:	add    al,0xc2
  409377:	cmovs  ebp,esp
  40937a:	push   es
  40937b:	jb     0x409370
  40937d:	in     eax,dx
  40937e:	cli    
  40937f:	mov    edx,0x60006
  409384:	call   0xf8398822
  409389:	or     DWORD PTR [ebx-0x3],eax
  40938c:	mov    ?,ecx
  40938e:	mov    esi,cs
  409390:	clc    
  409391:	rol    BYTE PTR [ecx],1
  409393:	ret    0x4d32
  409396:	test   BYTE PTR [edx],0xc2
  409399:	or     cl,BYTE PTR [esi-0x38]
  40939c:	paddusb mm3,QWORD PTR [eax-0x7c]
  4093a0:	xchg   BYTE PTR [edx+0xe050f1a],bh
  4093a6:	jecxz  0x409424
  4093a8:	std    
  4093a9:	stc    
  4093aa:	repnz or ch,cl
  4093ad:	xchg   eax,esi
  4093af:	xchg   DWORD PTR [edx-0xd],ecx
  4093b2:	(bad)  
  4093b3:	fmul   DWORD PTR [esi]
  4093b5:	shl    DWORD PTR ds:0x3c303cc,0x41
  4093bc:	fadd   QWORD PTR [ecx]
  4093be:	dec    edi
  4093bf:	jns    0x409364
  4093c1:	fs mov cl,0xd
  4093c4:	or     ecx,DWORD PTR [ebx]
  4093c6:	push   es
  4093c7:	jecxz  0x409422
  4093c9:	push   edi
  4093cb:	cld    
  4093cc:	or     esi,ecx
  4093ce:	sbb    bh,0x8e
  4093d1:	ret    0xd7fd
  4093d4:	add    eax,esp
  4093d6:	xor    eax,ebp
  4093d8:	add    eax,0x4703ff43
  4093dd:	std    
  4093de:	push   es
  4093df:	call   0xb43ebeca
  4093e4:	add    DWORD PTR [ecx],eax
  4093e6:	add    BYTE PTR [edx],cl
  4093e8:	out    0x3b,al
  4093ea:	lock cmc 
  4093ec:	cmc    
  4093ed:	push   cs
  4093ee:	leave  
  4093ef:	xchg   BYTE PTR [ebx-0xe],cl
  4093f2:	xchg   ebp,ecx
  4093f4:	lock fisttp WORD PTR [esi]
  4093f7:	inc    ecx
  4093f8:	cmc    
  4093f9:	xor    eax,eax
  4093fb:	or     al,0xcf
  4093fd:	cmovg  ebx,ebx
  409400:	or     eax,0xa40b4618
  409405:	mov    dl,0x2
  409407:	add    ecx,DWORD PTR [edi+ecx*1]
  40940a:	loopne 0x409420
  40940c:	cld    
  40940d:	push   ebx
  40940f:	or     eax,DWORD PTR [ebx-0x3]
  409412:	mov    ebp,esi
  409414:	add    esp,0xfffffff8
  409417:	(bad)  
  409418:	or     ecx,ecx
  40941a:	xor    DWORD PTR [ecx-0xc],eax
  40941d:	add    ebx,eax
  40941f:	add    al,BYTE PTR [edx-0xa]
  409422:	add    ebp,DWORD PTR [ebx-0x40b6f4e7]
  409428:	sbb    cl,BYTE PTR [eax]
  40942a:	add    eax,0xf8f6e108
  40942f:	(bad)  
  409430:	stc    
  409431:	or     al,ah
  409433:	mov    bh,bh
  409435:	add    DWORD PTR [esi-0x4],0xc40bd2fa
  40943c:	aaa    
  40943d:	lds    ecx,FWORD PTR [eax]
  40943f:	ret    
  409440:	or     al,0x40
  409442:	(bad)  
  409443:	or     al,BYTE PTR [edi-0x4600a284]
  409449:	push   es
  40944a:	or     al,BYTE PTR ds:0xf4d9e003
  409450:	cli    
  409451:	dec    DWORD PTR [ecx*8-0x3471217b]
  409458:	cld    
  409459:	aam    0xa
  40945b:	sar    BYTE PTR [ebx],0xcc
  40945e:	add    cl,BYTE PTR [ebp-0xc]
  409461:	add    eax,0x3301e84e
  409466:	(bad)  
  409467:	cmp    bh,BYTE PTR [edx+0x4010dba]
  40946d:	add    dl,ch
  40946f:	mov    ebx,0xffff0f5
  409474:	les    ecx,FWORD PTR [ecx+ecx*2-0x73a7c0f]
  40947b:	xlat   BYTE PTR ds:[ebx]
  40947c:	or     DWORD PTR [eax-0x4],eax
  40947f:	cmp    al,bl
  409481:	add    eax,0xc84703c7
  409486:	add    dh,BYTE PTR [ebx-0x40d42e28]
  40948c:	push   es
  40948d:	pop    es
  40948e:	or     eax,0xf285e80f
  409493:	(bad)  
  409494:	test   DWORD PTR [ecx],0xf382f84c
  40949a:	or     ecx,0xfffffffa
  40949d:	aad    0xb
  40949f:	les    esi,FWORD PTR [ebx]
  4094a1:	dec    edx
  4094a2:	repz push es
  4094a4:	enter  0x4008,0xe5
  4094a8:	add    ebx,DWORD PTR [eax+ebx*8+0x19bae78c]
  4094af:	(bad)  
  4094b0:	invd   
  4094b2:	loopne 0x40951c
  4094b4:	lock stc 
  4094b6:	hlt    
  4094b7:	add    eax,edi
  4094b9:	mov    esi,esp
  4094bb:	mov    eax,DWORD PTR [ecx+0x8]
  4094be:	push   es
  4094bf:	push   ebx
  4094c0:	mov    ebx,0xa034e80
  4094c5:	jbe    0x409486
  4094c7:	mov    al,BYTE PTR [edx+0x0]
  4094ca:	add    dh,BYTE PTR [edx-0x50]
  4094cd:	add    BYTE PTR [edx+0xd],0x8e
  4094d1:	pop    edi
  4094d2:	sti    
  4094d3:	or     DWORD PTR [edi-0x44],edx
  4094d6:	mov    BYTE PTR [ebx+0xe],al
  4094d9:	xor    dl,dl
  4094db:	mov    edx,DWORD PTR [ebp-0x59]
  4094de:	add    DWORD PTR [ebp+0xe],0xffffff83
  4094e2:	leave  
  4094e3:	retf   
  4094e4:	xor    cl,cl
  4094e6:	mov    al,0x4e
  4094e8:	or     al,0x8
  4094ea:	or     ah,dl
  4094ec:	jmp    0x523285c4
  4094f1:	push   edx
  4094f2:	push   eax
  4094f3:	mov    edx,gs
  4094f5:	pop    eax
  4094f6:	(bad)  
  4094f7:	cdq    
  4094f8:	push   ebp
  4094f9:	mov    bl,ah
  4094fb:	pop    ecx
  4094fc:	pop    edi
  4094fd:	pop    esp
  4094fe:	pop    eax
  4094ff:	adc    esi,0xffffff8e
  409502:	jg     0x409513
  409504:	mov    ecx,ebx
  409506:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409507:	xchg   esp,ebx
  409509:	leave  
  40950a:	jmp    0x409525
  40950c:	mov    eax,DWORD PTR [ecx+0x0]
  40950f:	pop    es
  409510:	push   eax
  409511:	scas   al,BYTE PTR es:[edi]
  409512:	xchg   bl,bl
  409514:	(bad)  
  409515:	in     eax,dx
  409516:	add    eax,0x50a438b
  40951b:	pop    ecx
  40951c:	stos   BYTE PTR es:[edi],al
  40951d:	mov    cs,WORD PTR [edi+ecx*1+0x3d]
  409521:	push   edi
  409522:	mov    ds:0x508c057e,al
  409527:	pop    es
  409528:	test   DWORD PTR [edi-0x5c],0x85f34080
  40952f:	fnstsw WORD PTR [edi+0x5b]
  409532:	mov    esp,0x30a4f
  409537:	es cmp al,0x3b
  40953a:	stc    
  40953b:	jae    0x40956d
  40953d:	or     bh,0x84
  409540:	add    eax,DWORD PTR [ecx+0x5a8f0d5a]
  409546:	or     al,bl
  409548:	mov    ecx,DWORD PTR [edi-0x7]
  40954b:	jmp    0x409555
  40954d:	sar    ah,cl
  40954f:	cli    
  409550:	mov    eax,0x60e0b4f
  409555:	or     ah,BYTE PTR cs:[eax]
  409558:	fdivr  QWORD PTR [ecx+0x10a0843]
  40955e:	and    ecx,DWORD PTR [esi]
  409560:	pop    es
  409561:	dec    esi
  409562:	cld    
  409563:	pop    DWORD PTR [ebx+0x5]
  409566:	push   eax
  409567:	out    dx,eax
  409568:	shl    cl,1
  40956a:	(bad)  
  40956b:	sti    
  40956c:	pop    ecx
  40956d:	jmp    0x8b4a1e8f
  409572:	pop    ecx
  409573:	js     0x8908a4d1
  409579:	dec    edx
  40957a:	sti    
  40957b:	mov    esi,ecx
  40957d:	call   0x3a6e49
  409582:	add    DWORD PTR [edi+edi*1],ebx
  409585:	fmul   QWORD PTR [ebp+0x5aa971d1]
  40958b:	push   edi
  40958c:	pop    esp
  40958d:	push   esp
  40958e:	push   edx
  40958f:	ret    
  409590:	pop    edi
  409591:	mov    gs,ebp
  409593:	pop    ebx
  409594:	adc    ecx,0x83034c8f
  40959a:	dec    edx
  40959b:	test   eax,0xc60b558e
  4095a0:	dec    ebx
  4095a1:	or     eax,0x40808ec5
  4095a6:	or     eax,0x32af7585
  4095ab:	jle    0x4095b7
  4095ad:	xchg   DWORD PTR [edx+0x7],ecx
  4095b0:	pop    eax
  4095b1:	loopne 0x409536
  4095b3:	icebp  
  4095b4:	stc    
  4095b5:	hlt    
  4095b6:	pop    ecx
  4095b7:	mov    eax,DWORD PTR [ebp+0xc]
  4095ba:	mov    eax,DWORD PTR [eax+ebp*4-0x74]
  4095be:	pop    esi
  4095bf:	add    ecx,DWORD PTR [eax+0x482f3c9]
  4095c5:	add    BYTE PTR [edi+ecx*1-0x7d],0x43
  4095ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095cb:	sbb    DWORD PTR [esi+0xf],0xffffff86
  4095cf:	(bad)  
  4095d0:	test   BYTE PTR [esi+0xb458c0a],0x56
  4095d7:	out    dx,al
  4095d8:	arpl   si,si
  4095da:	std    
  4095db:	cli    
  4095dc:	pop    edx
  4095dd:	adc    ebx,0xffffff8d
  4095e0:	inc    ebp
  4095e1:	add    DWORD PTR [eax+0x1eb3b0c1],ecx
  4095e7:	or     al,0x8
  4095e9:	or     ah,dl
  4095eb:	ins    BYTE PTR es:[edi],dx
  4095ec:	shl    al,cl
  4095ee:	icebp  
  4095ef:	test   DWORD PTR [ecx+0x3],ecx
  4095f2:	push   edi
  4095f3:	out    0xb5,eax
  4095f5:	icebp  
  4095f6:	idiv   bh
  4095f8:	pop    edx
  4095f9:	push   esp
  4095fa:	push   ebp
  4095fb:	iret   
  4095fc:	pop    edi
  4095fd:	test   ah,ah
  4095ff:	pop    ecx
  409601:	xchg   BYTE PTR [esi+ebx*2+0x5a],dl
  409605:	xor    ch,al
  409607:	xchg   BYTE PTR [ebp-0x73],al
  40960a:	(bad)  
  40960b:	cli    
  40960c:	test   DWORD PTR [ebp-0x5a],ecx
  40960f:	mov    al,BYTE PTR [edi-0x53]
  409612:	loopne 0x40966a
  409614:	sar    ecx,1
  409616:	(bad)  
  409617:	cmp    eax,0xc6051c2
  40961c:	aas    
  40961d:	inc    ecx
  40961e:	pop    es
  40961f:	(bad)  
  409620:	stc    
  409621:	cmp    ch,BYTE PTR [edx+ecx*4+0x27]
  409625:	push   eax
  409626:	out    0xc9,eax
  409628:	lock div esi
  40962b:	pop    esp
  40962c:	pop    edx
  40962d:	mov    eax,DWORD PTR [ebx-0x57]
  409630:	jmp    0x4096a2
  409632:	shl    ch,cl
  409634:	cld    
  409635:	push   eax
  409636:	add    BYTE PTR [edi-0x60],0xea
  40963a:	mov    bl,ah
  40963c:	hlt    
  40963d:	call   DWORD PTR [ebp-0x13]
  409640:	mov    esi,0x57fdfaf1
  409645:	pop    ebp
  409646:	mov    es,WORD PTR [ebp-0x66]
  409649:	in     eax,dx
  40964a:	inc    ecx
  40964b:	div    esp
  40964d:	cld    
  40964e:	pop    esp
  40964f:	mov    ecx,eax
  409651:	jecxz  0x409653
  409653:	(bad)  
  409655:	repz mov ch,0x14
  409658:	add    DWORD PTR [ebx],eax
  40965a:	or     BYTE PTR [edi+0x4b85985c],al
  409660:	xchg   DWORD PTR [ebx],esi
  409662:	les    ecx,FWORD PTR [esi+ecx*1+0x70005ba]
  409669:	add    esp,ebp
  40966b:	in     eax,dx
  40966c:	add    BYTE PTR [edx],cl
  40966e:	add    al,BYTE PTR [ebp+edx*2-0x1b3d7380]
  409675:	cmp    dl,ch
  409677:	cld    
  409678:	lock inc esp
  40967a:	dec    esp
  40967b:	jo     0x40965e
  40967d:	pop    esp
  40967e:	call   0xfe408ba6
  409683:	push   ebp
  409684:	xor    al,0xc8
  409686:	push   eax
  409687:	pop    edi
  409688:	pop    eax
  409689:	popa   
  40968a:	adc    BYTE PTR [edi],0x65
  40968d:	sbb    bh,BYTE PTR [edx]
  40968f:	dec    edx
  409690:	add    eax,0xe1864d8c
  409695:	iret   
  409696:	shl    ah,cl
  409698:	test   DWORD PTR [edi-0x3f175ab8],0xc6f0f0db
  4096a2:	out    0x6a,eax
  4096a4:	fdiv   st(2),st
  4096a6:	stc    
  4096a7:	out    0xe3,al
  4096a9:	push   ebp
  4096aa:	push   edx
  4096ab:	pop    ebx
  4096ac:	xchg   edx,ebp
  4096ae:	push   edx
  4096af:	retf   
  4096b0:	pop    ebp
  4096b1:	mov    gs,ebx
  4096b3:	xor    eax,0x416855cb
  4096b8:	ds inc eax
  4096ba:	add    al,0x64
  4096bc:	clc    
  4096bd:	cmp    ebp,DWORD PTR [edi-0x7e]
  4096c0:	sub    esi,esp
  4096c2:	push   cs
  4096c3:	cmp    BYTE PTR [ebp+0x41],0x7
  4096c7:	cmp    eax,ebx
  4096c9:	push   eax
  4096ca:	push   ecx
  4096cb:	push   edx
  4096cc:	arpl   WORD PTR [ebp+edx*1+0x47324f62],cx
  4096d3:	add    al,al
  4096d5:	out    dx,eax
  4096d6:	sub    dl,bl
  4096d8:	(bad)  
  4096d9:	std    
  4096da:	out    dx,al
  4096db:	sti    
  4096dc:	push   ebp
  4096dd:	ret    
  4096de:	(bad)  
  4096df:	ror    BYTE PTR [edx+0x4a768526],0xe
  4096e6:	or     eax,0xe1815fcb
  4096eb:	cmp    edi,ecx
  4096ed:	pop    ebx
  4096ee:	or     ax,0x4730
  4096f2:	punpcklwd mm7,mm3
  4096f5:	cmp    DWORD PTR [edx+ecx*4+0x2f],esp
  4096f9:	test   DWORD PTR [ecx],0xc4879b6
  4096ff:	or     cl,BYTE PTR [edi+0x30d0885]
  409705:	mov    ah,0xb7
  409707:	jle    0x40974a
  409709:	add    al,0xe8
  40970b:	pop    ecx
  40970c:	sar    ecx,cl
  40970e:	(bad)  
  40970f:	mov    edx,0xf477eb9
  409714:	out    dx,al
  409715:	jnp    0x4096e8
  409717:	std    
  409718:	sti    
  409719:	mov    al,0xb2
  40971b:	jae    0x40975e
  40971d:	pop    es
  40971e:	out    dx,al
  40971f:	inc    edi
  409720:	shl    edi,1
  409722:	cld    
  409723:	mov    edi,0x54879a9
  409728:	loopne 0x409768
  40972a:	fdivrp st(0),st
  40972c:	(bad)  
  40972d:	mov    esi,0xf4375a1
  409732:	loop   0x409762
  409734:	fcomi  st,st(2)
  409736:	std    
  409737:	mov    eax,0xb4272a6
  40973c:	call   0xf136756d
  409741:	mov    ebp,0x34878a2
  409746:	call   0xf83d755e
  40974b:	mov    bl,0x9f
  40974d:	jae    0x40978f
  40974f:	pavgw  mm0,QWORD PTR [ecx]
  409752:	(bad)  
  409754:	repz mov bl,0x9c
  409757:	ja     0x40979c
  409759:	or     dl,ah
  40975b:	add    al,0xd3
  40975d:	idiv   ecx
  40975f:	mov    bl,0x94
  409761:	jb     0x4097a9
  409763:	or     eax,0xf8dafce8
  409768:	(bad)  
  409769:	mov    esp,0x24a7490
  40976e:	out    0xf1,eax
  409770:	(bad)  
  409771:	clc    
  409772:	cli    
  409773:	mov    ah,0x81
  409775:	jle    0x4097ba
  409777:	pxor   mm4,mm5
  40977a:	(bad)  
  40977c:	idiv   BYTE PTR [eax+0x240768e]
  409782:	in     al,0xda
  409784:	shl    ch,cl
  409786:	stc    
  409787:	xor    al,ch
  409789:	push   ebx
  40978a:	pop    esi
  40978b:	push   esp
  40978c:	imul   ecx,DWORD PTR [ecx+0x33096d1a],0x4a
  409793:	or     edi,eax
  409795:	loopne 0x4097fc
  409797:	shl    ch,1
  409799:	repnz out dx,al
  40979b:	clc    
  40979c:	pop    esi
  40979d:	ret    
  40979e:	test   bh,cl
  4097a0:	xchg   BYTE PTR [ebx],ah
  4097a2:	mov    bh,0x73
  4097a4:	inc    ebp
  4097a5:	push   es
  4097a6:	or     al,0xc8
  4097a8:	cmc    
  4097a9:	repz push ebx
  4097ac:	and    cl,BYTE PTR [edi]
  4097ae:	or     BYTE PTR [eax],cl
  4097b0:	push   esi
  4097b1:	dec    eax
  4097b2:	inc    eax
  4097b3:	pop    edi
  4097b4:	push   edi
  4097b5:	inc    ecx
  4097b6:	push   edx
  4097b7:	inc    ecx
  4097b8:	pop    esp
  4097b9:	dec    ecx
  4097ba:	imul   esp,DWORD PTR [ecx+edi*2+0x64],0x7f6d6478
  4097c2:	pop    edx
  4097c3:	pop    esp
  4097c4:	push   0x7d6c6c69
  4097c9:	jnp    0x409822
  4097cb:	inc    esp
  4097cc:	jo     0x409845
  4097ce:	js     0x409832
  4097d0:	data16 jae 0x409829
  4097d3:	data16 je 0x40984b
  4097d6:	push   0x6f
  4097d8:	ins    BYTE PTR es:[edi],dx
  4097d9:	pop    ecx
  4097da:	push   ecx
  4097db:	jge    0x40984b
  4097dd:	push   es
  4097de:	add    BYTE PTR [ecx],cl
  4097e0:	hlt    
  4097e1:	(bad)  
  4097e2:	push   ebp
  4097e4:	xor    DWORD PTR [eax+ecx*1],ecx
  4097e7:	or     bl,BYTE PTR [ecx+0x62]
  4097ea:	ins    BYTE PTR es:[edi],dx
  4097eb:	jnp    0x409866
  4097ed:	outs   dx,DWORD PTR ds:[esi]
  4097ee:	jle    0x40985e
  4097f0:	pop    ebx
  4097f1:	inc    edx
  4097f2:	ins    BYTE PTR es:[edi],dx
  4097f3:	addr16 jnp 0x409865
  4097f6:	jo     0x409858
  4097f8:	outs   dx,BYTE PTR ds:[esi]
  4097f9:	js     0x409851
  4097fb:	pop    eax
  4097fc:	popa   
  4097fd:	bound  esp,QWORD PTR [ecx+0x65]
  409800:	jo     0x40987d
  409802:	push   ecx
  409803:	inc    eax
  409804:	jns    0x409883
  409806:	jp     0x40986c
  409808:	push   0x74
  40980a:	pop    edx
  40980b:	ins    DWORD PTR es:[edi],dx
  40980c:	je     0x409880
  40980e:	imul   esp,DWORD PTR [edx+0x66],0x5b
  409812:	pop    edi
  409813:	imul   ebp,DWORD PTR [edi+eiz*2+0x61],0x59716d6d
  40981b:	inc    esp
  40981c:	jg     0x409894
  40981e:	push   0x65
  409820:	jp     0x409888
  409822:	jne    0x40987d
  409824:	pop    ebp
  409825:	jge    0x409892
  409827:	or     BYTE PTR [esi+ecx*4-0x1d],bl
  40982b:	xor    eax,esi
  40982d:	pop    esp
  40982e:	imul   ecx,esp,0x34
  409831:	dec    edx
  409832:	add    esp,DWORD PTR [edx+esi*8+0x32]
  409836:	mov    esp,DWORD PTR fs:[edi*8+0x4579c00e]
  40983e:	or     bh,BYTE PTR [edx+0x11]
  409841:	mov    edx,0x43688e
  409846:	loop   0x409864
  409848:	fincstp 
  40984a:	hlt    
  40984b:	mov    ebx,0xb4f6079
  409850:	out    0x9,al
  409852:	fcomip st,st(3)
  409854:	hlt    
  409855:	aaa    
  409856:	rcr    DWORD PTR [ecx+0x51],0x53
  40985a:	sbb    DWORD PTR gs:[eax],0x443bdd6e
  409861:	push   es
  409862:	into   
  409863:	jmp    0xff39700f
  409868:	out    dx,eax
  409869:	clc    
  40986a:	pop    edi
  40986b:	leave  
  40986c:	and    DWORD PTR [edx],0x5477ac0
  409872:	or     eax,0xe3885dce
  409877:	xor    al,0xc2
  409879:	push   eax
  40987a:	push   0x463c0c
  40987f:	fs std 
  409881:	cmp    al,0x63
  409883:	sub    DWORD PTR [edx],0x7fc104f9
  409889:	inc    edi
  40988a:	or     eax,0x5c50c03c
  40988f:	pop    eax
  409890:	ins    BYTE PTR es:[edi],dx
  409891:	sbb    DWORD PTR [ecx],0x6c
  409894:	add    eax,0xce0a4837
  409899:	in     al,dx
  40989a:	push   0xffffffd4
  40989c:	push   eax
  40989e:	in     al,0xfd
  4098a0:	push   ebx
  4098a1:	enter  0xc58e,0x85
  4098a5:	and    bh,cl
  4098a7:	jl     0x4098f5
  4098a9:	add    BYTE PTR ds:0xe4835acc,cl
  4098af:	ss (bad) 
  4098b1:	push   ebx
  4098b2:	arpl   WORD PTR ds:0x6404403c,di
  4098b8:	sti    
  4098b9:	xor    BYTE PTR [ebx-0x7e],ah
  4098bc:	sub    esi,esp
  4098be:	push   cs
  4098bf:	ret    
  4098c0:	jge    0x409908
  4098c2:	or     esi,DWORD PTR [edx]
  4098c4:	(bad)  
  4098c5:	push   edx
  4098c6:	pop    edx
  4098c7:	push   ebx
  4098c8:	ins    BYTE PTR es:[edi],dx
  4098c9:	adc    BYTE PTR [edi],0x6d
  4098cc:	inc    ecx
  4098cd:	ss inc edi
  4098cf:	or     ah,al
  4098d1:	jmp    0xfd3a6a07
  4098d6:	jmp    0x4098d2
  4098d8:	pop    eax
  4098d9:	rol    BYTE PTR [ebx-0x3ed27a40],0x7d
  4098e0:	inc    ecx
  4098e1:	add    BYTE PTR [ebx],cl
  4098e3:	int    0x59
  4098e5:	and    esi,0x39
  4098e8:	int    0x5f
  4098ea:	addr16 jnp 0x40991f
  4098ed:	dec    esp
  4098ee:	or     esp,DWORD PTR [ebx-0x10]
  4098f1:	xor    eax,0xfc208060
  4098f6:	or     al,ah
  4098f8:	jp     0x409944
  4098fa:	(bad)  
  4098fc:	int3   
  4098fd:	pop    edi
  4098fe:	push   ebx
  4098ff:	pop    esi
  409900:	ins    BYTE PTR es:[edi],dx
  409901:	test   BYTE PTR [ebx],dl
  409903:	fs jae 0x40993a
  409906:	inc    ecx
  409907:	add    al,0xc3
  409909:	in     eax,0xf2
  40990b:	sar    dh,1
  40990d:	std    
  40990e:	out    0xf0,al
  409910:	pop    edx
  409911:	int3   
  409912:	(bad)  
  409913:	ror    BYTE PTR [ebp+0x427ec82f],0x5
  40991a:	add    ah,al
  40991c:	push   ebx
  40991d:	(bad)  
  40991e:	out    0x3b,al
  409920:	ret    
  409921:	push   edx
  409922:	ins    DWORD PTR es:[edi],dx
  409923:	mov    ds:0x6d084534,al
  409928:	cli    
  409929:	aas    
  40992a:	fs (bad) 
  40992f:	fistp  QWORD PTR [ebx+eax*2+0x0]
  409933:	ds ret 0x5b5a
  409937:	pop    ebp
  409938:	data16 adc BYTE PTR [eax],0x67
  40993c:	mov    cl,0x36
  40993e:	dec    edi
  40993f:	add    eax,0xd5cae7c1
  409944:	push   ebp
  409946:	out    dx,al
  409947:	sti    
  409948:	push   ebp
  409949:	enter  0xc588,0x83
  40994d:	and    bl,bl
  40994f:	js     0x409997
  409951:	add    eax,0x106c80d
  409956:	add    ecx,DWORD PTR [eax]
  409958:	push   esi
  409959:	add    DWORD PTR [eax],ecx
  40995b:	or     BYTE PTR [ebx-0x80],dl
  40995e:	in     al,dx
  40995f:	outs   dx,BYTE PTR ds:[esi]
  409960:	push   es
  409961:	pop    esi
  409962:	push   esi
  409963:	push   eax
  409964:	mov    ebx,esi
  409966:	mov    bh,dh
  409968:	mov    esi,edx
  40996a:	cmp    edx,eax
  40996c:	pop    edx
  40996d:	push   0xc453aaf
  409972:	imul   esi,edi,0x228e6b33
  409978:	mov    es,ebx
  40997a:	loope  0x409961
  40997c:	fdivp  st(7),st
  40997e:	inc    DWORD PTR [edi-0x7edc8c06]
  409984:	rol    BYTE PTR [edx+0x3e9e06e5],0xcd
  40998b:	sub    ecx,eax
  40998d:	(bad)  
  40998e:	xchg   ecx,eax
  40998f:	sub    BYTE PTR [edx+0x49],0x4
  409993:	test   BYTE PTR [esi-0xc],cl
  409996:	loop   0x409988
  409998:	fdiv   st(7),st
  40999a:	cld    
  40999b:	mov    ebx,DWORD PTR [edx-0xd]
  40999e:	mov    es,WORD PTR ds:0x4bedc680
  4099a4:	xlat   BYTE PTR ds:[ebx]
  4099a5:	hlt    
  4099a6:	cmc    
  4099a7:	int    0xee
  4099a9:	or     BYTE PTR [edx-0x79228207],cl
  4099af:	cmp    al,0x6
  4099b1:	jle    0x4099d0
  4099b3:	jmp    0x4099c3
  4099b5:	(bad)  
  4099b6:	or     ecx,DWORD PTR [edi+0x36b3bdc3]
  4099bc:	dec    ebx
  4099bd:	or     esp,ebx
  4099bf:	cmp    bl,ah
  4099c1:	hlt    
  4099c2:	dec    BYTE PTR [ebx+ecx*1-0xb2e2b15]
  4099c9:	clc    
  4099ca:	ds std 
  4099cc:	jne    0x4099ae
  4099ce:	jecxz  0x409a26
  4099d0:	mov    eax,DWORD PTR [eax]
  4099d2:	out    dx,al
  4099d3:	xlat   BYTE PTR ds:[ebx]
  4099d4:	(bad)  
  4099d6:	std    
  4099d7:	mov    ss,WORD PTR [eax]
  4099d9:	mov    BYTE PTR [esp+eax*1-0x1],bh
  4099dd:	and    al,0x7e
  4099df:	aaa    
  4099e0:	mov    ecx,DWORD PTR [ecx]
  4099e2:	out    0xcd,al
  4099e4:	shl    ebp,1
  4099e6:	cmc    
  4099e7:	xchg   dl,bl
  4099e9:	test   ch,cl
  4099eb:	mov    bh,0xd
  4099ed:	or     eax,DWORD PTR [edi]
  4099ef:	paddsw mm3,QWORD PTR [ebx]
  4099f2:	sar    bh,cl
  4099f4:	cld    
  4099f5:	test   bl,bl
  4099f7:	mov    ch,0xb
  4099f9:	invd   
  4099fb:	or     al,0xbd
  4099fd:	into   
  4099fe:	cmp    cl,BYTE PTR [eax+0xd]
  409a01:	jmp    0x409a5d
  409a03:	aam    0xf7
  409a05:	(bad)  
  409a06:	out    dx,eax
  409a07:	push   cs
  409a08:	xchg   DWORD PTR [ebx],eax
  409a0a:	(bad)  
  409a0b:	ret    0xb5b8
  409a0e:	xor    eax,0xdeee0f47
  409a13:	xlat   BYTE PTR ds:[ebx]
  409a14:	std    
  409a15:	sti    
  409a16:	add    DWORD PTR [ecx],0xffffffed
  409a19:	mov    bl,dh
  409a1b:	stc    
  409a1c:	stc    
  409a1d:	xor    eax,esi
  409a1f:	jl     0x409a01
  409a21:	ss iret 
  409a23:	push   edx
  409a24:	pop    esp
  409a25:	push   ecx
  409a26:	ins    DWORD PTR es:[edi],dx
  409a27:	mov    WORD PTR [edi],ds
  409a29:	push   0x34334ac
  409a2e:	or     BYTE PTR [edi-0x1],0xe8
  409a32:	and    ebx,edx
  409a34:	(bad)  
  409a35:	std    
  409a36:	(bad)  
  409a37:	jmp    0x409a00
  409a39:	aad    0xf0
  409a3b:	cli    
  409a3c:	loope  0x409a3d
  409a3e:	pop    edx
  409a3f:	pop    esp
  409a40:	push   ebp
  409a41:	push   ecx
  409a42:	pop    esi
  409a43:	ret    
  409a44:	cmc    
  409a45:	cli    
  409a46:	cld    
  409a47:	test   DWORD PTR [edx],0x3f000503
  409a4d:	or     ecx,DWORD PTR [esi]
  409a4f:	push   es
  409a50:	cli    
  409a51:	repz hlt 
  409a53:	sti    
  409a54:	add    BYTE PTR [ebx],al
  409a56:	or     BYTE PTR [edx],cl
  409a58:	sub    al,0x8
  409a5a:	or     BYTE PTR [esi],al
  409a5c:	pop    es
  409a5d:	add    BYTE PTR [esi+eax*1],al
  409a60:	dec    esp
  409a61:	add    BYTE PTR [ebp+0x0],al
  409a64:	inc    esp
  409a65:	add    DWORD PTR [eax+0x0],eax
  409a68:	inc    edi
  409a69:	or     al,BYTE PTR [edi+ecx*1+0x0]
  409a6d:	or     al,0x7
  409a6f:	add    eax,0x3080d18
  409a74:	aas    
  409a75:	pop    es
  409a76:	xor    eax,DWORD PTR ds:0x6330932
  409a7c:	xor    al,0x0
  409a7e:	aaa    
  409a7f:	or     al,0x31
  409a81:	or     BYTE PTR ds:0x30053906,bh
  409a87:	pop    es
  409a88:	or     eax,0x250a000f
  409a8d:	add    DWORD PTR [eax],ecx
  409a8f:	or     cl,BYTE PTR [eax+0x4]
  409a92:	dec    ebx
  409a93:	or     ecx,DWORD PTR [ebx+0xa]
  409a96:	dec    ecx
  409a97:	add    eax,0xf460345
  409a9c:	aas    
  409a9d:	add    eax,0x5370b3f
  409aa2:	xor    eax,0x390a3f0d
  409aa7:	add    BYTE PTR [edx],bh
  409aa9:	psignb mm6,QWORD PTR [eax]
  409aad:	add    eax,0xb063e
  409ab2:	add    BYTE PTR [eax],al
  409ab4:	push   ecx
  409ab5:	mov    ebp,eax
  409ab7:	xor    eax,edi
  409ab9:	pop    esi
  409aba:	arpl   WORD PTR [ebp+esi*1+0x4b],sp
  409abe:	or     esp,DWORD PTR [edx-0xc]
  409ac1:	xor    DWORD PTR [ebx-0x7f],esp
  409ac4:	and    esi,ebp
  409ac6:	or     eax,0x54571df
  409acb:	jg     0x409afc
  409acd:	mov    al,0xa7
  409acf:	pusha  
  409ad0:	inc    ebx
  409ad1:	push   es
  409ad2:	out    dx,al
  409ad3:	mov    esi,0xbbfafddb
  409ad8:	xchg   esp,eax
  409ad9:	pusha  
  409ada:	inc    esi
  409adb:	add    cl,ah
  409add:	mov    eax,0xb6f5ffda
  409ae2:	xchg   esp,eax
  409ae3:	push   0xa3e50a4a
  409ae8:	aam    0xf1
  409aea:	icebp  
  409aeb:	mov    ah,0x8f
  409aed:	addr16 dec edi
  409aef:	add    eax,0xfcdb96ec
  409af4:	lock cmp ecx,esp
  409af7:	push   eax
  409af8:	push   esi
  409af9:	push   ecx
  409afa:	push   0x7e6f1a8c
  409aff:	xor    eax,DWORD PTR [ebx+0xc]
  409b02:	int3   
  409b03:	loope  0x409b06
  409b05:	sar    edi,1
  409b07:	repz jecxz 0x409b08
  409b0a:	pop    esp
  409b0b:	ror    DWORD PTR [ecx],0x8
  409b0e:	pop    es
  409b0f:	(bad)  
  409b11:	pusha  
  409b12:	dec    esi
  409b13:	add    bh,al
  409b15:	xor    eax,0x679d0542
  409b1a:	inc    esi
  409b1b:	push   es
  409b1c:	jmp    0x486f:0x9d074335
  409b23:	add    eax,0xf4534c4
  409b28:	test   BYTE PTR [esi+0x49],ah
  409b2b:	add    eax,edi
  409b2d:	xor    ecx,DWORD PTR [edx+0x3]
  409b30:	and    DWORD PTR [eax],0xffffffd6
  409b33:	jbe    0x409b77
  409b35:	add    al,0x3
  409b37:	js     0x409b43
  409b39:	mov    bh,0x7d
  409b3b:	xor    al,0x4f
  409b3d:	add    eax,0xfcddffea
  409b42:	dec    ecx
  409b44:	pop    es
  409b45:	add    ecx,DWORD PTR [eax]
  409b47:	or     ebx,DWORD PTR [edi+0x5]
  409b4a:	add    BYTE PTR [edi],cl
  409b4c:	hlt    
  409b4d:	sub    ebp,esi
  409b4f:	test   BYTE PTR [ebx+ecx*1-0x71],cl
  409b53:	sar    esp,0x2d
  409b56:	jmp    0xffcb:0x8d084880
  409b5d:	and    esi,ebx
  409b5f:	mov    WORD PTR [eax+0x7],es
  409b62:	mov    eax,edi
  409b64:	(bad)  
  409b65:	and    eax,edx
  409b67:	or     DWORD PTR [edx+0x2],0xffffff84
  409b6b:	rcr    BYTE PTR [edi+0x51],0x52
  409b6f:	(bad)
  409b73:	cmc    
  409b74:	mov    edx,?
  409b76:	mov    es,esi
  409b78:	loope  0x409b21
  409b7a:	(bad)  
  409b7c:	dec    DWORD PTR [ecx-0x7e30732c]
  409b82:	aad    0xe9
  409b84:	jne    0x409b5d
  409b86:	clc    
  409b87:	xacquire xchg BYTE PTR [esi+ebp*1],dh
  409b8b:	mov    es,WORD PTR [esi]
  409b8d:	or     DWORD PTR [esi+0x2d],0x7cd08c00
  409b94:	and    DWORD PTR [esi-0x749adbff],eax
  409b9a:	punpckhwd mm0,QWORD PTR [esi+0xf774af6]
  409ba1:	pusha  
  409ba2:	mov    ?,ebx
  409ba4:	push   eax
  409ba5:	jnp    0x409bab
  409ba7:	push   0xffffff8c
  409ba9:	iret   
  409baa:	sub    BYTE PTR [ebx+0x6d022351],al
  409bb0:	mov    DWORD PTR [edx],eax
  409bb2:	add    DWORD PTR [eax],0x24
  409bb5:	push   es
  409bb6:	add    DWORD PTR [ebx+0x2f],0xf
  409bba:	or     DWORD PTR [eax-0x72],eax
  409bbd:	shl    BYTE PTR [ebx-0x22],1
  409bc0:	pop    eax
  409bc1:	pop    ebp
  409bc2:	push   edi
  409bc3:	pop    ebp
  409bc4:	push   ecx
  409bc5:	retf   
  409bc6:	add    bh,0x56
  409bc9:	push   ebx
  409bca:	pop    ebp
  409bcb:	push   edx
  409bcc:	mov    eax,ebx
  409bce:	clc    
  409bcf:	mov    dh,bh
  409bd1:	mov    ebp,DWORD PTR [edi+0x24]
  409bd4:	push   es
  409bd5:	ss ret 
  409bd7:	add    DWORD PTR [edx+eiz*1],0x14b09bb
  409bde:	add    BYTE PTR [eax+0xa],ah
  409be1:	or     BYTE PTR fs:[edx],bh
  409be4:	or     cl,BYTE PTR ds:0xe60e6559
  409bea:	pop    esi
  409beb:	jmp    0x8309:0x418cf0f8
  409bf2:	jle    0x409c03
  409bf4:	or     BYTE PTR [eax+0x5b],bh
  409bf7:	or     BYTE PTR gs:[edi-0x72],bl
  409bfb:	dec    edi
  409bfc:	pop    es
  409bfd:	pop    eax
  409bfe:	pop    edx
  409bff:	jmp    0x409c6d
  409c01:	lock idiv esi
  409c04:	(bad)  
  409c05:	lock (bad) 
  409c07:	test   BYTE PTR [edx],0x1
  409c0a:	add    cl,ch
  409c0c:	jge    0x409c1f
  409c0e:	addr16 push es
  409c10:	or     BYTE PTR [esi],0x2
  409c13:	outs   dx,BYTE PTR ds:[esi]
  409c14:	or     BYTE PTR [ecx-0x11a8fec0],cl
  409c1a:	sub    al,0xeb
  409c1c:	idiv   esp
  409c1e:	mov    esi,es
  409c20:	or     al,0xc8
  409c22:	mov    ss,eax
  409c24:	mov    bl,bh
  409c26:	or     eax,DWORD PTR [eax]
  409c28:	push   es
  409c29:	leave  
  409c2a:	ja     0x409bdc
  409c2c:	mov    bh,ah
  409c2e:	jbe    0x409c38
  409c30:	xchg   BYTE PTR [edi+0x0],al
  409c33:	mov    eax,DWORD PTR [eax]
  409c35:	es loopne 0x409c48
  409c38:	addr16 add eax,0x68050f8a
  409c3e:	push   cs
  409c3f:	add    DWORD PTR [esi+0x0],0x5a
  409c43:	in     eax,dx
  409c44:	add    ebp,ecx
  409c46:	hlt    
  409c47:	cld    
  409c48:	mov    es,WORD PTR [ebx+ebp*1]
  409c4b:	push   edx
  409c4c:	push   esp
  409c4d:	pop    ebx
  409c4e:	pop    edx
  409c4f:	push   edx
  409c50:	push   eax
  409c51:	(bad)  
  409c52:	mov    al,bl
  409c54:	pop    ebp
  409c55:	sub    ebp,0x58eecc8b
  409c5b:	push   esi
  409c5c:	push   ebx
  409c5d:	xor    eax,0xec5289df
  409c62:	mov    ss,WORD PTR [esp+ebp*8-0x77]
  409c66:	push   edi
  409c67:	cli    
  409c68:	mov    ecx,DWORD PTR [edx-0x4]
  409c6b:	add    DWORD PTR [edx-0x7],0xfcd5c0e4
  409c72:	lock mov bh,BYTE PTR [edi-0xf]
  409c76:	xor    ecx,ecx
  409c78:	push   ebp
  409c79:	outs   dx,BYTE PTR ds:[esi]
  409c7a:	call   0x3af7:0x630c4240
  409c81:	bound  ecx,QWORD PTR [eax-0x410ec5db]
  409c87:	push   cs
  409c88:	mov    eax,0x801050f
  409c8d:	loop   0x409cce
  409c8f:	sti    
  409c90:	div    ah
  409c92:	or     DWORD PTR [edi-0xb],0x89fb458e
  409c99:	or     BYTE PTR [edx+eax*1+0x7005338d],al
  409ca0:	add    al,0x3e
  409ca2:	rol    BYTE PTR [edi+0x1887f049],1
  409ca8:	test   BYTE PTR [edx+0x34],bl
  409cab:	in     eax,dx
  409cac:	sti    
  409cad:	fdivr  st(4),st
  409caf:	dec    DWORD PTR [ebp+0x418be855]
  409cb5:	lock out dx,eax
  409cb7:	mov    edx,0x80f4f4f5
  409cbc:	dec    esi
  409cbd:	jmp    0x4f88:0xe0528c5b
  409cc4:	hlt    
  409cc5:	jecxz  0x409c6c
  409cc7:	sti    
  409cc8:	cli    
  409cc9:	cmc    
  409cca:	mov    WORD PTR [ebp-0x11],cs
  409ccd:	pop    edx
  409cce:	jmp    0x409ca3
  409cd0:	(bad)  
  409cd2:	inc    DWORD PTR [edi-0x74e0883b]
  409cd8:	add    DWORD PTR [ebx+0x694f79],ecx
  409cde:	mov    cl,BYTE PTR [esi]
  409ce0:	or     al,0x62
  409ce2:	or     al,BYTE PTR [ecx-0x19a00db8]
  409ce8:	push   edx
  409ce9:	in     al,dx
  409cea:	hlt    
  409ceb:	clc    
  409cec:	in     al,0x18
  409cee:	(bad)  
  409cef:	push   cs
  409cf0:	mov    eax,DWORD PTR [ebx]
  409cf2:	or     al,0xf
  409cf4:	test   DWORD PTR ds:0x710df38f,ecx
  409cfa:	xchg   ebp,eax
  409cfb:	outs   dx,DWORD PTR ds:[esi]
  409cfc:	or     BYTE PTR [ebp+0x8650c03],cl
  409d02:	mov    al,BYTE PTR [ecx-0x8]
  409d05:	pop    esp
  409d06:	loopne 0x409d43
  409d08:	loope  0x409d07
  409d0a:	repnz cmp eax,edi
  409d0d:	push   ebp
  409d0e:	pop    edi
  409d0f:	pop    ecx
  409d10:	push   0xffffff8b
  409d12:	adc    al,0x60
  409d14:	mov    ds:0x8b074145,eax
  409d19:	inc    ebx
  409d1a:	loop   0x409cce
  409d1c:	add    BYTE PTR [edi],al
  409d1e:	add    eax,0xd182e00f
  409d23:	idiv   dl
  409d25:	add    BYTE PTR [ebp-0x6],0xe1
  409d29:	fs (bad) 
  409d2c:	cmc    
  409d2d:	shr    cl,0xd8
  409d30:	sar    bh,1
  409d32:	std    
  409d33:	out    dx,eax
  409d34:	loope  0x409cb6
  409d36:	(bad)  
  409d37:	push   eax
  409d38:	pop    ebx
  409d39:	push   ecx
  409d3a:	test   al,ah
  409d3c:	pop    edi
  409d3d:	int    0x83
  409d3f:	ret    
  409d40:	or     esi,0xffffffe1
  409d43:	imul   edx,DWORD PTR [esi+eax*4],0x5f042147
  409d4a:	arpl   WORD PTR [edx-0x1cf3baba],sp
  409d50:	clc    
  409d51:	fdivp  st(4),st
  409d53:	test   DWORD PTR [ecx-0x7af3d3bb],0x53c71ccf
  409d5d:	xchg   ah,ch
  409d5f:	test   ah,al
  409d61:	repz push edx
  409d63:	push   edx
  409d64:	push   edi
  409d65:	mov    eax,esi
  409d67:	mov    ecx,DWORD PTR [edx-0x4]
  409d6a:	add    DWORD PTR [edx-0x7],0xfcd4c3e4
  409d71:	lock xor al,0xc2
  409d74:	push   eax
  409d75:	push   0x464145
  409d7a:	fs std 
  409d7c:	cmp    al,0x63
  409d7e:	sub    DWORD PTR [edx],0xd4edc68d
  409d84:	shl    edx,cl
  409d86:	lock call 0xf83f984a
  409d8c:	adc    ecx,0x4d80036e
  409d92:	mul    ch
  409d94:	jns    0x409d70
  409d96:	cld    
  409d97:	call   FWORD PTR [edi+0x5c]
  409d9a:	in     eax,dx
  409d9b:	daa    
  409d9c:	aam    0xfa
  409d9e:	cli    
  409d9f:	(bad)  
  409da0:	std    
  409da1:	pop    ebp
  409da2:	pop    ecx
  409da3:	in     al,0x80
  409da5:	shl    eax,cl
  409da7:	lock or DWORD PTR [ebp-0xf],0x4ee35551
  409daf:	(bad)  
  409db1:	sti    
  409db2:	mov    ebx,esp
  409db4:	push   ebx
  409db5:	out    dx,eax
  409db6:	inc    ebp
  409db7:	aam    0xf4
  409db9:	hlt    
  409dba:	or     BYTE PTR [esi-0x2],0x80
  409dbe:	(bad)  
  409dbf:	mov    WORD PTR [ebp-0x9],es
  409dc2:	sbb    DWORD PTR [ebp-0xd],0xf5d083ef
  409dc9:	clc    
  409dca:	cmp    eax,edi
  409dcc:	pop    edx
  409dcd:	pop    edx
  409dce:	pop    edi
  409dcf:	bound  ecx,QWORD PTR [edx+0x42566a10]
  409dd5:	dec    eax
  409dd6:	add    BYTE PTR [ebx-0x4b1c0abb],cl
  409ddc:	fdiv   st,st(5)
  409dde:	icebp  
  409ddf:	iret   
  409de0:	loope  0x409e0b
  409de2:	fdiv   st,st(2)
  409de4:	cmc    
  409de5:	in     al,0xfe
  409de7:	push   ecx
  409de8:	push   edx
  409de9:	push   eax
  409dea:	mov    edx,gs
  409dec:	pop    eax
  409ded:	mov    DWORD PTR [edx-0x1b7ba940],0xf5f3ce8d
  409df7:	repz cli 
  409df9:	pop    ecx
  409dfa:	push   ecx
  409dfb:	cmp    ebx,edi
  409dfd:	mov    bl,BYTE PTR [ecx-0xd]
  409e00:	xor    ecx,0x37
  409e03:	rcr    BYTE PTR [ecx+0x60],0xf3
  409e07:	inc    eax
  409e08:	inc    edx
  409e09:	or     eax,0x623ff86c
  409e0e:	mov    DWORD PTR [esi],ebp
  409e10:	mov    edx,eax
  409e12:	loopne 0x409e93
  409e14:	(bad)  
  409e16:	clc    
  409e17:	mov    eax,DWORD PTR [ebx-0xa]
  409e1a:	mov    dl,0xb
  409e1c:	inc    ebp
  409e1d:	inc    ebp
  409e1e:	pavgb  mm2,mm5
  409e21:	shl    dh,1
  409e23:	cli    
  409e24:	add    BYTE PTR gs:[ebx+ecx*1+0x69],ch
  409e29:	add    DWORD PTR [ebp+0xa],esp
  409e2c:	imul   eax,DWORD PTR [eax],0x2000265
  409e32:	inc    esp
  409e33:	mov    DWORD PTR [esi-0x4],ecx
  409e36:	out    0xdc,eax
  409e38:	shl    eax,cl
  409e3a:	cli    
  409e3b:	mov    esi,edx
  409e3d:	pop    ebx
  409e3e:	jmp    0x409ea5
  409e40:	aam    0xfa
  409e42:	cld    
  409e43:	pop    eax
  409e44:	jecxz  0x409e9a
  409e46:	(bad)  
  409e48:	lock xchg BYTE PTR [ebx-0xb0c0706],cl
  409e4f:	push   esp
  409e50:	imul   ebx,DWORD PTR [edi],0x5b014a4a
  409e56:	loopne 0x409e57
  409e58:	idiv   edi
  409e5a:	sti    
  409e5b:	push   ebp
  409e5c:	in     eax,0x57
  409e5e:	fcos   
  409e60:	clc    
  409e61:	mov    al,dl
  409e63:	lea    edx,[edi-0xf000a]
  409e69:	mov    ch,0x7
  409e6b:	add    al,0xc
  409e6d:	or     eax,0xf8d676e0
  409e72:	std    
  409e73:	rcl    BYTE PTR ss:[ebx+0x59],0x5f
  409e78:	mov    DWORD PTR fs:[edx],edx
  409e7b:	fs sti 
  409e7d:	dec    ecx
  409e7e:	dec    edx
  409e7f:	push   es
  409e80:	mov    WORD PTR [eax-0xb],es
  409e83:	out    dx,eax
  409e84:	add    edi,edx
  409e86:	push   ebp
  409e88:	(bad)  
  409e89:	call   0xfc377a00
  409e8e:	loop   0x409e8b
  409e90:	push   esi
  409e91:	push   ecx
  409e92:	xchg   al,ah
  409e94:	pop    ebp
  409e95:	rol    BYTE PTR [eax],0xf
  409e98:	pop    ds
  409e99:	add    eax,0x5510b0e
  409e9e:	arpl   WORD PTR ds:0x7c0a66,cx
  409ea4:	and    cl,BYTE PTR [edi]
  409ea6:	or     BYTE PTR [si+0x5],bh
  409eaa:	push   0x6
  409eac:	or     eax,DWORD PTR [eax]
  409eae:	add    BYTE PTR [eax],al
  409eb0:	add    al,0x0
  409eb2:	add    al,0x0
  409eb4:	push   esp
  409eb5:	pop    ebp
  409eb6:	adc    bl,0x80
  409eb9:	enter  0xb7e3,0xc5
  409ebd:	(bad)  
  409ebe:	clc    
  409ebf:	xor    ebx,0xffffff81
  409ec2:	into   
  409ec3:	cmp    dh,cl
  409ec5:	mov    ss,esi
  409ec7:	loop   0x409ed8
  409ec9:	fdivr  st,st(0)
  409ecb:	dec    DWORD PTR [eax-0x3ca7a740]
  409ed1:	pop    DWORD PTR [ebp+0x3]
  409ed4:	pop    ebx
  409ed5:	push   esi
  409ed6:	push   edi
  409ed7:	mov    edx,ecx
  409ed9:	add    dl,0xe8
  409edc:	mov    esi,0x62f7f3d9
  409ee1:	ds dec esi
  409ee3:	dec    edx
  409ee4:	pcmpgtd mm0,QWORD PTR [edx+0x4f]
  409ee8:	dec    ebx
  409ee9:	pop    es
  409eea:	out    0xc,eax
  409eec:	(bad)  
  409eee:	call   DWORD PTR [ebx-0x19]
  409ef1:	repz shl ebp,1
  409ef4:	lock cmp esp,0xffffff80
  409ef8:	cld    
  409ef9:	jae    0x409f2b
  409efb:	ds ret 
  409efd:	test   DWORD PTR [ebx],ecx
  409eff:	sub    al,0x55
  409f01:	outs   dx,BYTE PTR ds:[esi]
  409f02:	add    BYTE PTR [esi+0x8],ah
  409f05:	outs   dx,BYTE PTR ds:[esi]
  409f06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f07:	bound  ecx,QWORD PTR [ebp+0x8]
  409f0a:	clc    
  409f0b:	fst    DWORD PTR [esi-0x18]
  409f0e:	add    ah,bl
  409f10:	sti    
  409f11:	imul   edx
  409f13:	int3   
  409f14:	fdiv   st(0),st
  409f16:	stc    
  409f17:	out    dx,al
  409f18:	inc    esi
  409f19:	(bad)  
  409f1a:	cld    
  409f1b:	clc    
  409f1c:	or     bh,0x7c
  409f1f:	push   ss
  409f20:	or     edx,0xffffff8e
  409f23:	sbb    esp,DWORD PTR [esi+ebp*8]
  409f26:	mov    ebx,ebx
  409f28:	cld    
  409f29:	lock add DWORD PTR [edi],0x19ea5d24
  409f30:	(bad)  
  409f31:	sti    
  409f32:	std    
  409f33:	add    BYTE PTR [ebx],0x3c
  409f36:	xlat   BYTE PTR ds:[ebx]
  409f37:	loop   0x409ecc
  409f39:	fdiv   st(5),st
  409f3b:	icebp  
  409f3c:	jge    0x409f9d
  409f3e:	push   0x8434652
  409f43:	arpl   WORD PTR [edi+0x46],cx
  409f46:	inc    eax
  409f47:	pavgw  mm4,QWORD PTR [ebp+0x5bf3fadb]
  409f4e:	in     al,dx
  409f4f:	pushf  
  409f50:	fdivrp st(7),st
  409f52:	cmc    
  409f53:	mov    bh,al
  409f55:	(bad)  
  409f56:	lock jg 0x409f9a
  409f59:	mov    esp,0x7000f0c
  409f5e:	call   0x3c9db9
  409f63:	mov    ecx,DWORD PTR [esi]
  409f65:	test   BYTE PTR es:[eax+ebp*1],al
  409f69:	push   edi
  409f6a:	outs   dx,DWORD PTR ds:[esi]
  409f6b:	or     al,0x67
  409f6d:	or     BYTE PTR [ecx+0x2b],ch
  409f70:	ins    DWORD PTR es:[edi],dx
  409f71:	add    bh,dl
  409f73:	(bad)  
  409f74:	pop    ecx
  409f75:	call   0xfe407d1a
  409f7a:	in     al,0x66
  409f7c:	aad    0xf5
  409f7e:	stc    
  409f7f:	jmp    0xf3397465
  409f84:	mov    al,al
  409f86:	jle    0x409f97
  409f88:	mov    cl,bl
  409f8a:	sbb    DWORD PTR ds:0xd011e120,0x48ef2f5
  409f94:	daa    
  409f95:	call   0xf23b627b
  409f9a:	add    BYTE PTR [esi],0x36
  409f9d:	aam    0xe5
  409f9f:	ds shl ebx,cl
  409fa2:	(bad)  
  409fa3:	js     0x409fb7
  409fa5:	test   BYTE PTR [ebx],cl
  409fa7:	loopne 0x40a026
  409fa9:	(bad)  
  409fab:	hlt    
  409fac:	mov    edx,DWORD PTR [ebx]
  409fae:	xchg   WORD PTR [esi+eax*2-0x2],di
  409fb3:	pop    ebx
  409fb4:	jg     0x409fbd
  409fb6:	or     al,0xb1
  409fb9:	jnp    0x40a000
  409fbb:	dec    ebx
  409fbc:	add    edi,ebp
  409fbe:	data16 fcomi st,st(5)
  409fc1:	not    DWORD PTR [ecx+0x59]
  409fc4:	pop    esi
  409fc5:	(bad)  
  409fc6:	or     al,BYTE PTR [edi]
  409fc8:	pop    ebx
  409fc9:	dec    edi
  409fca:	inc    edi
  409fcb:	data16 jb 0x40a01b
  409fce:	ins    DWORD PTR es:[edi],dx
  409fcf:	outs   dx,DWORD PTR ds:[esi]
  409fd0:	jne    0x40a03d
  409fd2:	inc    ebp
  409fd3:	ins    BYTE PTR es:[di],dx
  409fd5:	bound  esp,QWORD PTR [ebp+0x7b]
  409fd8:	pop    ebx
  409fd9:	pusha  
  409fda:	je     0x40a03e
  409fdc:	push   cs
  409fdd:	or     al,0x8
  409fdf:	or     bl,BYTE PTR [ecx+0x65]
  409fe2:	outs   dx,DWORD PTR ds:[esi]
  409fe3:	arpl   WORD PTR [edx+0x3d],sp
  409fe6:	ds and eax,0x4696363
  409fec:	pop    edx
  409fed:	dec    eax
  409fee:	inc    esp
  409fef:	push   0x7c
  409ff1:	dec    edx
  409ff2:	arpl   WORD PTR gs:[ecx+ebp*2+0x77],bp
  409ff7:	pop    edx
  409ff8:	data16 jl 0x40a060
  409ffb:	push   esp
  409ffc:	or     al,0xf
  409ffe:	or     BYTE PTR [ecx],al
  40a000:	push   es
  40a001:	add    BYTE PTR [eax+ecx*1],cl
  40a004:	pop    edx
  40a005:	add    DWORD PTR [edx],eax
  40a007:	or     eax,0x87e38c5d
  40a00c:	les    ebp,FWORD PTR [edx-0x3]
  40a00f:	sti    
  40a010:	not    DWORD PTR [ecx-0x72]
  40a013:	fnstenv [esi+eax*8]
  40a016:	push   ebx
  40a017:	(bad)  
  40a018:	call   0x6b45e75d
  40a01d:	div    DWORD PTR ds:0x8425806c
  40a023:	ret    
  40a024:	mov    esp,0xf4340fd
  40a029:	loop   0x409fb4
  40a02b:	shl    dl,cl
  40a02d:	std    
  40a02e:	mov    DWORD PTR [edi-0xb02a0],0xf0a0593
  40a038:	mov    BYTE PTR [edi-0x30896],al
  40a03e:	pop    edx
  40a03f:	in     eax,dx
  40a040:	sbb    esi,ebx
  40a042:	hlt    
  40a043:	cld    
  40a044:	add    al,0x7b
  40a047:	adc    eax,0xf36dbb8d
  40a04c:	hlt    
  40a04d:	sti    
  40a04e:	add    al,0x76
  40a050:	sbb    eax,0xf764bc89
  40a055:	stc    
  40a056:	hlt    
  40a057:	add    DWORD PTR [ecx+0xa],esi
  40a05a:	xchg   bl,al
  40a05c:	mov    ebp,0x4414304
  40a061:	call   0xf13e78b6
  40a066:	xor    ecx,esp
  40a068:	pop    ebp
  40a069:	pop    esp
  40a06a:	push   ebp
  40a06b:	imul   eax,DWORD PTR [ecx+0x41e06713],0xe9ca0045
  40a075:	mov    edi,ecx
  40a077:	(bad)  
  40a078:	std    
  40a079:	out    0xff,eax
  40a07b:	push   ebx
  40a07c:	and    ebx,0xf8f6c65c
  40a082:	repnz lock pop es
  40a085:	or     al,BYTE PTR ds:0x62645d01
  40a08b:	push   0x66
  40a08d:	jl     0x40a0f5
  40a08f:	or     dh,dl
  40a091:	cli    
  40a092:	(bad)  
  40a093:	cld    
  40a094:	push   es
  40a095:	(bad)  
  40a096:	syscall 
  40a098:	pop    ecx
  40a099:	bound  ebp,QWORD PTR [ebx+0x25]
  40a09c:	pop    esi
  40a09d:	pop    ebp
  40a09e:	or     ecx,DWORD PTR [edx]
  40a0a0:	pop    edi
  40a0a1:	or     eax,0xf7f7f10f
  40a0a7:	mov    ds,edi
  40a0a9:	outs   dx,BYTE PTR ds:[esi]
  40a0aa:	or     eax,DWORD PTR [ecx]
  40a0ac:	add    BYTE PTR [eax],al
  40a0ae:	mov    DWORD PTR [eax+eiz*1+0x4],eax
  40a0b2:	push   edi
  40a0b3:	popa   
  40a0b4:	or     esp,ebx
  40a0b6:	and    eax,0x8ef9f4d7
  40a0bb:	shl    DWORD PTR [ecx+0x18],0x88
  40a0bf:	leave  
  40a0c0:	sbb    edi,0xffffffbe
  40a0c3:	add    eax,0xe0070a04
  40a0c8:	sbb    edx,edi
  40a0ca:	cld    
  40a0cb:	stc    
  40a0cc:	in     eax,dx
  40a0cd:	add    al,0x8b
  40a0cf:	shr    ebp,0xbc
  40a0d2:	(bad)  
  40a0d4:	stc    
  40a0d5:	or     ebp,0xa00030b
  40a0db:	push   ebp
  40a0dc:	iret   
  40a0dd:	test   DWORD PTR [edx+0xa],ecx
  40a0e0:	pop    eax
  40a0e1:	and    ebx,0x805a5d5f
  40a0e7:	cmc    
  40a0e8:	xchg   BYTE PTR [eax-0x8],al
  40a0eb:	test   BYTE PTR [ebp-0x1],al
  40a0ee:	out    0x45,eax
  40a0f0:	aad    0xf5
  40a0f2:	lock cmp ecx,esp
  40a0f5:	push   eax
  40a0f6:	bound  edi,QWORD PTR [edx+0x68034d4c]
  40a0fc:	lock cmp BYTE PTR [ebp-0x73],ah
  40a100:	and    BYTE PTR [edi-0x28721132],al
  40a106:	repnz test DWORD PTR [edx+ecx*2-0x2ae51706],0xc587f7fb
  40a112:	jg     0x40a134
  40a114:	mov    ebp,0x3080a07
  40a119:	mov    WORD PTR [eax-0xd],ss
  40a11c:	outs   dx,BYTE PTR ds:[esi]
  40a11d:	xchg   BYTE PTR [ebx+edx*2-0x5],dh
  40a121:	pcmpeqw mm2,QWORD PTR ds:0x46c8885f
  40a128:	mov    al,0x2
  40a12a:	add    BYTE PTR ds:0xf8478b02,cl
  40a130:	jmp    0xbe1:0xfaf0d82c
  40a137:	inc    esi
  40a138:	dec    edx
  40a139:	jnp    0x40a111
  40a13b:	xor    al,al
  40a13d:	push   eax
  40a13e:	pop    esp
  40a13f:	pop    edx
  40a140:	ins    BYTE PTR es:[edi],dx
  40a141:	adc    BYTE PTR [ebx],0x6d
  40a144:	les    ecx,FWORD PTR [ebx+0x4b]
  40a147:	push   cs
  40a148:	mov    eax,DWORD PTR [eax-0x10]
  40a14b:	jecxz  0x40a18d
  40a14d:	aam    0xfc
  40a14f:	test   ecx,0xf9c6bae8
  40a155:	hlt    
  40a156:	jmp    0x40a14c
  40a158:	pop    eax
  40a159:	push   esi
  40a15a:	pop    ecx
  40a15b:	pop    edx
  40a15c:	ret    
  40a15d:	mov    al,BYTE PTR [ecx+0x4]
  40a160:	push   ebp
  40a161:	mov    esi,esp
  40a163:	or     ebx,0x36515fe8
  40a169:	xlat   BYTE PTR ds:[ebx]
  40a16a:	test   BYTE PTR [ebp-0x15],dl
  40a16d:	xchg   BYTE PTR [edx-0x6],cl
  40a170:	mov    WORD PTR [ebp-0xb],ss
  40a173:	mov    esi,esi
  40a175:	mov    ebx,DWORD PTR [ebp+0xa]
  40a178:	add    DWORD PTR [edx-0xc],0xfad9c6e2
  40a17f:	test   BYTE PTR [edx-0x4d1708b8],0xdd
  40a186:	(bad)  
  40a187:	idiv   DWORD PTR [ecx]
  40a189:	leave  
  40a18a:	push   ecx
  40a18b:	popa   
  40a18c:	lods   eax,DWORD PTR ds:[esi]
  40a18d:	dec    ebp
  40a18e:	dec    edx
  40a18f:	or     eax,0x6433ff61
  40a194:	xchg   BYTE PTR [edi],ch
  40a196:	mov    cs,ebp
  40a198:	jecxz  0x40a18c
  40a19a:	sar    ecx,1
  40a19c:	xacquire xchg BYTE PTR [edi-0x8],cl
  40a1a0:	push   eax
  40a1a1:	pushw  cs
  40a1a3:	or     BYTE PTR gs:[ebx+0x6ceefb40],al
  40a1aa:	(bad)  
  40a1ab:	(bad)  
  40a1ac:	call   DWORD PTR [esi+edx*2-0x14]
  40a1b0:	aam    0xdd
  40a1b2:	hlt    
  40a1b3:	hlt    
  40a1b4:	mov    cs,ebx
  40a1b6:	jle    0x40a20c
  40a1b8:	mov    ecx,DWORD PTR [esi-0x13]
  40a1bb:	push   edi
  40a1bc:	bound  eax,QWORD PTR [ebx]
  40a1be:	xchg   DWORD PTR [ebp-0x5],ecx
  40a1c1:	push   edi
  40a1c2:	outs   dx,DWORD PTR ds:[esi]
  40a1c3:	add    eax,0xeff04281
  40a1c8:	dec    eax
  40a1c9:	aad    0xf9
  40a1cb:	stc    
  40a1cc:	mov    al,dh
  40a1ce:	push   esp
  40a1cf:	mov    es,WORD PTR [esi-0x4]
  40a1d2:	push   eax
  40a1d3:	out    dx,al
  40a1d4:	rcl    bl,0xf4
  40a1d7:	inc    BYTE PTR [ebp-0x7ac18436]
  40a1dd:	dec    edi
  40a1de:	loop   0x40a166
  40a1e0:	pop    edi
  40a1e1:	jecxz  0x40a1c9
  40a1e3:	pop    ds
  40a1e4:	aam    0xf4
  40a1e6:	clc    
  40a1e7:	add    BYTE PTR [eax-0x18],0x59
  40a1eb:	mov    eax,DWORD PTR [esi-0x19]
  40a1ee:	loopne 0x40a21d
  40a1f0:	fdivr  st(0),st
  40a1f2:	neg    DWORD PTR [eax+ecx*4+0x4f]
  40a1f6:	neg    DWORD PTR [eax+0x67]
  40a1f9:	add    ebx,DWORD PTR [edx-0x7c]
  40a1fc:	dec    ebp
  40a1fd:	cmc    
  40a1fe:	push   esp
  40a1ff:	call   0xff3a749c
  40a204:	mov    esi,ebx
  40a206:	add    DWORD PTR [edx-0x19],0xffffffee
  40a20a:	shl    al,cl
  40a20c:	std    
  40a20d:	sti    
  40a20e:	add    DWORD PTR [edi-0xf],0x51
  40a212:	out    dx,eax
  40a213:	addr16 fdivr st(5),st
  40a216:	div    DWORD PTR [eax]
  40a218:	(bad)  
  40a219:	pop    edi
  40a21a:	push   esi
  40a21b:	push   ecx
  40a21c:	popa   
  40a21d:	sbb    DWORD PTR [ecx],0x4645a26d
  40a223:	or     DWORD PTR [esi+0x6be2e746],ecx
  40a229:	aam    0xf2
  40a22b:	std    
  40a22c:	lea    eax,[edi-0x4]
  40a22f:	mov    eax,0x50f0009
  40a234:	loop   0x40a2b2
  40a236:	sar    ebp,1
  40a238:	icebp  
  40a239:	retf   
  40a23a:	jmp    0xe8e3:0xfcfac7c9
  40a241:	pop    ebp
  40a242:	pop    esi
  40a243:	mov    ebp,edx
  40a245:	push   esi
  40a246:	int3   
  40a247:	add    al,BYTE PTR ds:0x54044b81
  40a24d:	mov    ah,ah
  40a24f:	push   0xffffff8a
  40a251:	jge    0x40a253
  40a253:	lea    esi,[esi+0xc]
  40a256:	clc    
  40a257:	mov    ah,0x8d
  40a259:	xor    esp,ebx
  40a25b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a25c:	mov    ah,0x3
  40a25e:	in     al,dx
  40a25f:	ins    DWORD PTR es:[edi],dx
  40a260:	add    cl,BYTE PTR [edx]
  40a262:	add    bh,BYTE PTR [esi+esi*8+0x3d]
  40a266:	into   
  40a267:	in     eax,dx
  40a268:	push   0x7c03080d
  40a26d:	sbb    esi,DWORD PTR [ebx]
  40a26f:	(bad)
  40a272:	add    BYTE PTR [esi],al
  40a274:	add    BYTE PTR [ebx+0x21],dh
  40a277:	mov    edi,0x16ba4905
  40a27c:	jmp    0xd47abcb
  40a281:	pop    ds
  40a282:	sar    BYTE PTR [ecx-0xe],0x74
  40a286:	aaa    
  40a287:	mov    al,ds:0x46e1d0e2
  40a28c:	or     BYTE PTR [edx],cl
  40a28e:	or     eax,0x1076d92c
  40a293:	out    0x4d,eax
  40a295:	add    eax,0x2dee0b0e
  40a29a:	stos   BYTE PTR es:[edi],al
  40a29b:	fsubr  st(3),st
  40a29d:	jle    0x40a2e0
  40a29f:	adc    ebp,eax
  40a2a1:	in     al,0x13
  40a2a3:	cdq    
  40a2a4:	inc    eax
  40a2a5:	(bad)  
  40a2a6:	out    0xe,eax
  40a2a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2a9:	call   0x44a2da
  40a2ae:	cmp    DWORD PTR [eax],eax
  40a2b0:	jp     0x40a2bd
  40a2b2:	or     edi,DWORD PTR [eax+0x1]
  40a2b5:	mov    esi,edi
  40a2b7:	add    edi,DWORD PTR [eax+0x7]
  40a2ba:	test   al,dh
  40a2bc:	jl     0x40a33b
  40a2be:	or     cl,BYTE PTR [edx+0x46]
  40a2c1:	nop
  40a2c2:	mov    edx,fs
  40a2c4:	mov    ah,0x9
  40a2c6:	push   ecx
  40a2c7:	mov    ebp,edi
  40a2c9:	das    
  40a2ca:	shl    al,0xa4
  40a2cd:	pop    esp
  40a2ce:	out    dx,al
  40a2cf:	lea    ecx,[eax]
  40a2d1:	shl    BYTE PTR [ebx+0x5],cl
  40a2d4:	sbb    DWORD PTR ds:0xcdd81047,0x3d
  40a2db:	ror    DWORD PTR [ebx-0x1e],0xe3
  40a2df:	cmc    
  40a2e0:	lock icebp 
  40a2e2:	pop    ds
  40a2e3:	(bad)
  40a2e6:	lock cli 
  40a2e8:	sti    
  40a2e9:	jnp    0x40a2dd
  40a2eb:	shr    BYTE PTR [esi+0x55],0xce
  40a2ef:	add    cl,BYTE PTR [edi]
  40a2f1:	test   DWORD PTR [ebp+eax*1+0x5b],ecx
  40a2f5:	mov    esp,ds
  40a2f7:	in     eax,0xfb
  40a2f9:	(bad)  
  40a2fa:	lock neg DWORD PTR [ebx-0x39]
  40a2fe:	mov    ecx,esp
  40a300:	pop    ebp
  40a301:	(bad)  
  40a302:	in     eax,dx
  40a303:	or     ecx,0x355954e0
  40a309:	fild   DWORD PTR [edi+0x4f81ec5f]
  40a30f:	std    
  40a310:	mov    BYTE PTR [edx-0x6],dl
  40a313:	(bad)  
  40a314:	cli    
  40a315:	sbb    DWORD PTR [esi+0xf],0xffffff8e
  40a319:	dec    edx
  40a31a:	hlt    
  40a31b:	in     eax,dx
  40a31c:	inc    eax
  40a31d:	fdivr  st,st(2)
  40a31f:	lock mov eax,DWORD PTR [ebx-0xf]
  40a323:	jmp    0x40a368
  40a325:	fdivrp st(5),st
  40a327:	cld    
  40a328:	xor    ecx,ebp
  40a32a:	push   edi
  40a32b:	push   0xb42434b
  40a330:	fs lock xor eax,0x8925866e
  40a337:	int    0xe0
  40a339:	and    al,0xcf
  40a33b:	cmc    
  40a33c:	cli    
  40a33d:	mov    cs,WORD PTR [ebp-0x1]
  40a340:	push   ebx
  40a341:	ins    DWORD PTR es:[edi],dx
  40a342:	add    DWORD PTR [esi],ecx
  40a344:	or     ecx,DWORD PTR [esi]
  40a346:	ins    BYTE PTR es:[edi],dx
  40a347:	add    eax,0xe9f84e87
  40a34c:	sub    ebx,ecx
  40a34e:	cmc    
  40a34f:	(bad)  
  40a350:	pop    eax
  40a351:	pop    esi
  40a352:	out    dx,al
  40a353:	and    bl,cl
  40a355:	sti    
  40a356:	stc    
  40a357:	mov    al,al
  40a359:	jb     0x40a3ba
  40a35b:	mov    al,BYTE PTR [eax+ebp*8+0x50]
  40a35f:	push   0xf04a8f0a
  40a364:	pop    esp
  40a365:	ins    DWORD PTR es:[edi],dx
  40a366:	add    eax,0xebf04887
  40a36b:	push   es
  40a36c:	(bad)  
  40a36d:	std    
  40a36e:	cli    
  40a36f:	mov    edi,ecx
  40a371:	push   esi
  40a372:	lea    eax,[ebp-0xc]
  40a375:	push   edx
  40a376:	in     al,0x12
  40a378:	shl    ebp,1
  40a37a:	stc    
  40a37b:	test   ch,al
  40a37d:	jl     0x40a3b4
  40a37f:	or     BYTE PTR [edx-0x18],0x81
  40a383:	push   eax
  40a384:	in     eax,dx
  40a385:	loopne 0x40a403
  40a387:	(bad)  
  40a389:	test   BYTE PTR [esi-0x71a219b3],0x45
  40a390:	jmp    0x40a37a
  40a392:	in     eax,dx
  40a393:	(bad)  
  40a395:	icebp  
  40a396:	pop    ebx
  40a397:	mov    BYTE PTR [eax-0xa],al
  40a39a:	pop    ebp
  40a39b:	popa   
  40a39c:	or     bl,BYTE PTR [edx-0x75]
  40a39f:	dec    ecx
  40a3a0:	sti    
  40a3a1:	pop    edi
  40a3a2:	loopne 0x40a385
  40a3a4:	(bad)  
  40a3a6:	stc    
  40a3a7:	add    bl,0x8b
  40a3aa:	push   ebp
  40a3ab:	in     al,dx
  40a3ac:	call   0xf53972b4
  40a3b1:	or     BYTE PTR [esi-0x1],0x5b
  40a3b5:	jecxz  0x40a36f
  40a3b7:	sar    esi,cl
  40a3b9:	clc    
  40a3ba:	cmp    eax,ebx
  40a3bc:	push   eax
  40a3bd:	push   ecx
  40a3be:	push   edx
  40a3bf:	arpl   WORD PTR [ebp+edx*1+0x474f5762],cx
  40a3c6:	add    BYTE PTR [esi-0x6a1411bd],cl
  40a3cc:	int3   
  40a3cd:	cli    
  40a3ce:	cld    
  40a3cf:	test   DWORD PTR [ebp-0x2],eax
  40a3d2:	mov    edx,0x10b0b
  40a3d7:	loop   0x40a37b
  40a3d9:	ret    0xf5f7
  40a3dc:	leave  
  40a3dd:	in     al,0x2c
  40a3df:	ret    
  40a3e0:	icebp  
  40a3e1:	icebp  
  40a3e2:	out    0xe8,eax
  40a3e4:	pop    ecx
  40a3e5:	push   esp
  40a3e6:	mov    fs,ecx
  40a3e8:	push   esp
  40a3e9:	ret    0xf07
  40a3ec:	pop    ebp
  40a3ed:	xchg   esi,esp
  40a3ef:	mov    dh,0x28
  40a3f1:	or     al,0x5
  40a3f3:	or     ch,BYTE PTR [ebp+0x8]
  40a3f6:	add    eax,DWORD PTR [di+0x7a]
  40a3fa:	icebp  
  40a3fb:	push   eax
  40a3fc:	push   edi
  40a3fd:	push   esi
  40a3fe:	test   DWORD PTR [ebp-0x6],ecx
  40a401:	mov    WORD PTR [edi-0xf],es
  40a404:	loopne 0x40a436
  40a406:	fyl2xp1 
  40a408:	push   DWORD PTR [eax+0x24872e2]
  40a40e:	rcl    DWORD PTR ss:[edx+0x6e],0x41
  40a413:	pop    ebx
  40a414:	dec    eax
  40a415:	add    esp,DWORD PTR [ebx-0x6]
  40a418:	aas    
  40a419:	ins    BYTE PTR es:[edi],dx
  40a41a:	mov    WORD PTR [eax],gs
  40a41c:	test   BYTE PTR [eax-0x1],dl
  40a41f:	mov    eax,0x3435866
  40a424:	out    0x39,eax
  40a426:	cli    
  40a427:	push   edx
  40a429:	pop    DWORD PTR [ebp-0x12]
  40a42c:	push   esp
  40a42d:	mov    DWORD PTR [esi-0x10],ecx
  40a430:	out    0x76,eax
  40a432:	(bad)
  40a435:	mov    esi,ebx
  40a437:	mov    ecx,ebp
  40a439:	dec    BYTE PTR [edx]
  40a43b:	add    eax,0x3f4b103
  40a440:	add    eax,0xfe4e8400
  40a445:	out    dx,al
  40a446:	(bad)  
  40a447:	fdivr  st(4),st
  40a449:	sti    
  40a44a:	mov    WORD PTR [esi-0x8],es
  40a44d:	pop    edx
  40a44e:	mov    cl,BYTE PTR [ebp-0x8]
  40a451:	out    dx,al
  40a452:	pop    ecx
  40a453:	iret   
  40a454:	sti    
  40a455:	stc    
  40a456:	xchg   al,cl
  40a458:	xchg   cl,ch
  40a45a:	clc    
  40a45b:	add    DWORD PTR [eax+eax*1],eax
  40a45e:	mov    eax,0xf020b
  40a463:	xchg   DWORD PTR [edx-0xb],eax
  40a466:	in     al,0x64
  40a468:	fdivr  st,st(4)
  40a46a:	lock mov cl,BYTE PTR [edi-0x13]
  40a46e:	mov    ebx,DWORD PTR [esp+ebp*8-0x73]
  40a472:	inc    ebp
  40a473:	lock jmp 0x548d:0xf5f7de63
  40a47b:	in     eax,dx
  40a47c:	test   BYTE PTR [edx-0x3],al
  40a47f:	out    0x78,eax
  40a481:	(bad)  
  40a482:	cli    
  40a483:	inc    BYTE PTR [ebp-0x7dab12b1]
  40a489:	dec    esi
  40a48a:	clc    
  40a48b:	loop   0x40a4a2
  40a48d:	retf   0xfcff
  40a490:	mov    ebx,edi
  40a492:	mov    edi,gs
  40a494:	or     esi,DWORD PTR [edx+0xd060503]
  40a49a:	or     BYTE PTR [edi-0x4],0xe8
  40a49e:	ds fcomip st,st(0)
  40a4a1:	test   DWORD PTR [ebx+0x41eee340],0x8ffffffe
  40a4ab:	fmul   DWORD PTR [edi-0x1c08bb]
  40a4b1:	(bad)
  40a4b4:	adc    dh,0x88
  40a4b7:	jmp    0x40a4ba
  40a4b9:	test   DWORD PTR [esi-0x6],eax
  40a4bc:	loopne 0x40a4f2
  40a4be:	(bad)  
  40a4bf:	cli    
  40a4c0:	cli    
  40a4c1:	xchg   DWORD PTR [edx-0x4],eax
  40a4c4:	mov    ebx,ss
  40a4c6:	jmp    0x40a4fb
  40a4c8:	xlat   BYTE PTR ds:[ebx]
  40a4c9:	cld    
  40a4ca:	dec    DWORD PTR [edi-0x61f08c0]
  40a4d0:	leave  
  40a4d1:	push   esi
  40a4d3:	pop    ebx
  40a4d4:	mov    WORD PTR [ebp-0x6],es
  40a4d7:	out    0xfc,al
  40a4d9:	(bad)  
  40a4da:	cmc    
  40a4db:	cmc    
  40a4dc:	pop    ebp
  40a4dd:	loop   0x40a544
  40a4df:	repz icebp 
  40a4e1:	xrelease xchg BYTE PTR [edx-0x11],al
  40a4e5:	push   ebp
  40a4e6:	mov    ebp,0xf43517d
  40a4eb:	mov    dl,0x84
  40a4ed:	pop    ebx
  40a4ee:	dec    edi
  40a4ef:	or     BYTE PTR [edi+eax*1-0x1a77f8f6],dh
  40a4f6:	add    eax,0x8af7f0f2
  40a4fb:	push   ecx
  40a4fc:	loopne 0x40a485
  40a4fe:	into   
  40a4ff:	out    dx,al
  40a500:	mov    ch,0xcf
  40a502:	repnz test DWORD PTR [ecx+esi*1-0x76fd8afa],0x54c2b2c2
  40a50e:	inc    ecx
  40a50f:	pop    es
  40a510:	out    dx,al
  40a511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a512:	(bad)  
  40a513:	idiv   esp
  40a515:	mov    dl,BYTE PTR [eax-0x2d]
  40a518:	add    DWORD PTR [ebx],0xffffffe0
  40a51b:	aam    0xf5
  40a51d:	lock dec DWORD PTR [ebp-0x367720a4]
  40a524:	loop   0x40a4b2
  40a526:	int    0xf2
  40a528:	std    
  40a529:	xor    ebx,ecx
  40a52b:	mov    DWORD PTR [edi-0x21],ecx
  40a52e:	mov    edx,0xf4a54db
  40a533:	mov    ebp,0x3485fe6
  40a538:	call   0xf83d82de
  40a53d:	adc    BYTE PTR [esi-0x2f],0x8d
  40a541:	dec    edx
  40a542:	shl    esi,cl
  40a544:	mov    edx,0x8ff4f3d7
  40a549:	inc    esp
  40a54a:	fneni(8087 only) 
  40a54c:	push   cs
  40a54d:	div    bh
  40a54f:	test   DWORD PTR [ebx-0x74d28b35],0xd4bdcc40
  40a559:	push   esi
  40a55a:	inc    ecx
  40a55b:	add    al,0xb8
  40a55d:	cli    
  40a55e:	pop    ebx
  40a55f:	inc    edx
  40a560:	psubsb mm1,QWORD PTR [esi-0x790c0521]
  40a567:	pop    ebp
  40a568:	iret   
  40a569:	add    BYTE PTR [edx-0x2e],0xed
  40a56d:	xchg   ebx,eax
  40a56e:	(bad)  
  40a570:	stc    
  40a571:	mov    eax,DWORD PTR [ebp-0x2e]
  40a574:	in     al,0xdc
  40a576:	(bad)  
  40a577:	cmc    
  40a578:	stc    
  40a579:	test   ch,al
  40a57b:	jl     0x40a5ab
  40a57d:	add    BYTE PTR [edx-0x3c],0xb0
  40a581:	rcl    DWORD PTR [eax+0x48],1
  40a584:	or     dh,BYTE PTR [ecx+0x84b5b08]
  40a58a:	loop   0x40a5e0
  40a58c:	(bad)  
  40a58e:	cld    
  40a58f:	mov    ebx,DWORD PTR [edx-0x35]
  40a592:	mov    BYTE PTR [ebx-0x3d],cl
  40a595:	in     eax,dx
  40a596:	outs   dx,DWORD PTR ds:[esi]
  40a597:	aam    0xf2
  40a599:	hlt    
  40a59a:	or     DWORD PTR [ecx-0x38],0xf7f9bde4
  40a5a1:	test   DWORD PTR [eax-0x72de8d39],0x42ecf845
  40a5ab:	cld    
  40a5ac:	(bad)  
  40a5ad:	clc    
  40a5ae:	or     BYTE PTR [esi-0x1],0xe3
  40a5b2:	stc    
  40a5b3:	(bad)  
  40a5b4:	stc    
  40a5b5:	hlt    
  40a5b6:	push   ecx
  40a5b7:	ins    DWORD PTR es:[edi],dx
  40a5b8:	or     BYTE PTR [esi+0xce3fc4f],cl
  40a5be:	retf   0xf5fa
  40a5c1:	mov    eax,es
  40a5c3:	mov    WORD PTR [ebp-0x1],ss
  40a5c6:	lea    eax,[ebx-0x5]
  40a5c9:	call   0xf83d7fde
  40a5ce:	mov    ebx,esi
  40a5d0:	lea    eax,[edi+esi*4-0x45]
  40a5d4:	aam    0x5b
  40a5d6:	dec    esi
  40a5d7:	or     al,0xb0
  40a5d9:	push   ss
  40a5da:	pop    eax
  40a5db:	dec    ebp
  40a5dc:	or     ah,bh
  40a5de:	or     dh,dl
  40a5e0:	repz hlt 
  40a5e2:	mov    WORD PTR [edx-0x47],ds
  40a5e5:	mov    DWORD PTR [eax+eax*8-0x15],ecx
  40a5e9:	sbb    dl,bl
  40a5eb:	repz cmc 
  40a5ed:	test   BYTE PTR [ebp-0x34],cl
  40a5f0:	in     eax,dx
  40a5f1:	push   ebp
  40a5f2:	icebp  
  40a5f3:	div    edx
  40a5f5:	xchg   ah,cl
  40a5f7:	add    BYTE PTR [edx+ebx*4-0x7cf3fffc],cl
  40a5fe:	inc    ebx
  40a5ff:	cmc    
  40a600:	jmp    0x6a56:0xf0f8c5ae
  40a607:	push   cs
  40a608:	(bad)
  40a60c:	xor    DWORD PTR [ebx+0x47],edx
  40a60f:	push   es
  40a610:	mov    esi,0x7435a4e
  40a615:	in     eax,dx
  40a616:	rcr    edi,0xfa
  40a619:	test   DWORD PTR [edx+0x438dbb50],0xdedcebb1
  40a623:	cmc    
  40a624:	cld    
  40a625:	mov    ecx,DWORD PTR [eax-0x46]
  40a628:	push   eax
  40a629:	pop    DWORD PTR [ecx-0xa]
  40a62c:	jecxz  0x40a5c9
  40a62e:	sar    edx,0xf5
  40a631:	test   ch,cl
  40a633:	mov    DWORD PTR [ebx-0xc],ebx
  40a636:	pop    ebx
  40a637:	call   0xf83d81ea
  40a63c:	sbb    bl,0x80
  40a63f:	fstp   TBYTE PTR [edx+0x5d]
  40a642:	test   DWORD PTR [ebx-0xf],eax
  40a645:	in     al,0x55
  40a647:	leave  
  40a648:	(bad)  
  40a649:	cld    
  40a64a:	pop    eax
  40a64b:	pusha  
  40a64c:	add    DWORD PTR [ebp+0x7fe3b64d],eax
  40a652:	cld    
  40a653:	stc    
  40a654:	repnz lea eax,[edx-0x50]
  40a658:	push   edi
  40a659:	mov    WORD PTR [ecx-0x58],cs
  40a65c:	mov    eax,0x4f503e
  40a661:	mov    ah,0x43
  40a663:	push   edi
  40a664:	dec    esp
  40a665:	or     eax,0xf8d87ee0
  40a66a:	std    
  40a66b:	mov    ss,WORD PTR [ebp-0x5f]
  40a66e:	lea    eax,[ebx-0x54]
  40a671:	call   0xf8398402
  40a676:	adc    DWORD PTR [ebx-0x53],0xdcb6e15d
  40a67d:	lock inc DWORD PTR [ecx-0x78a74ec0]
  40a684:	dec    esp
  40a685:	lock loope 0x40a6d2
  40a688:	(bad)  
  40a689:	cmc    
  40a68a:	repnz mov cs,eax
  40a68d:	mov    BYTE PTR [ebp-0xd],dl
  40a690:	push   edi
  40a691:	in     eax,dx
  40a692:	inc    esp
  40a693:	aad    0xfa
  40a695:	cli    
  40a696:	(bad)  
  40a697:	aad    0x86
  40a699:	dec    edi
  40a69a:	test   al,0xe8
  40a69c:	fs div al
  40a69f:	test   DWORD PTR [ebx+0x57bea350],0xec004052
  40a6a9:	or     ecx,ebx
  40a6ab:	(bad)  
  40a6ac:	clc    
  40a6ad:	mov    cs,ebx
  40a6af:	add    al,0x8f
  40a6b1:	(bad)  
  40a6b2:	or     BYTE PTR [esi],al
  40a6b4:	or     ecx,DWORD PTR [edx+ecx*2+0x59deb994]
  40a6bb:	dec    ebx
  40a6bc:	pop    es
  40a6bd:	mov    ebp,0x8475869
  40a6c2:	out    dx,eax
  40a6c3:	and    esp,edx
  40a6c5:	stc    
  40a6c6:	stc    
  40a6c7:	mov    BYTE PTR [ebp-0x62],dl
  40a6ca:	mov    BYTE PTR [esi-0x58],al
  40a6cd:	call   0xf5377806
  40a6d2:	mov    al,BYTE PTR [ebp-0x56]
  40a6d5:	out    0x76,al
  40a6d7:	std    
  40a6d8:	cmc    
  40a6d9:	cmc    
  40a6da:	mov    dl,cl
  40a6dc:	jnp    0x40a701
  40a6de:	add    DWORD PTR [ecx-0x61],0xffffffbd
  40a6e2:	fist   DWORD PTR [esp+eax*2+0x9]
  40a6e6:	mov    eax,0xc485d87
  40a6eb:	loop   0x40a6e4
  40a6ed:	fdivrp st(3),st
  40a6ef:	cli    
  40a6f0:	adc    DWORD PTR [edx-0x64],0xe7944680
  40a6f7:	add    eax,edx
  40a6f9:	sti    
  40a6fa:	inc    DWORD PTR [edi+0x53e99e4d]
  40a700:	clc    
  40a701:	idiv   eax
  40a703:	mov    al,dh
  40a705:	jnp    0x248adce
  40a70b:	mov    BYTE PTR [ebx+ecx*4-0x44],cl
  40a70f:	rcr    BYTE PTR [ebx+0x48],cl
  40a712:	add    edi,DWORD PTR [edi+0x5485d9d]
  40a718:	loopne 0x40a6dc
  40a71a:	shl    eax,cl
  40a71c:	dec    DWORD PTR [ebp+0x4a8e8f5c]
  40a722:	call   0x89ff:0xfddddceb
  40a729:	inc    ecx
  40a72a:	xchg   edx,eax
  40a72b:	jecxz  0x40a751
  40a72d:	cli    
  40a72e:	cli    
  40a72f:	cmc    
  40a730:	mov    al,ch
  40a732:	or     eax,0x19c8b
  40a737:	or     cl,BYTE PTR [eax+0x37b18c4e]
  40a73d:	push   edi
  40a73e:	inc    eax
  40a73f:	btr    DWORD PTR [edx-0x1cf3baac],esp
  40a746:	call   0x8c54:0x81f7fcd7
  40a74d:	test   DWORD PTR [ebx-0x7d],eax
  40a750:	call   0x337e00
  40a755:	mov    WORD PTR [ebp-0x71],es
  40a758:	jmp    0xf63e9c50
  40a75d:	xchg   edi,ecx
  40a75f:	je     0x40a7a0
  40a761:	mov    cl,BYTE PTR [eax-0x3080d90]
  40a767:	mov    ch,0xd3
  40a769:	push   ebx
  40a76a:	inc    ebp
  40a76b:	add    BYTE PTR [ecx+0x4054c4],dh
  40a771:	jmp    0x948d:0xf5f7d17e
  40a778:	jns    0x40a770
  40a77a:	clc    
  40a77b:	repnz add BYTE PTR [ebp-0x76],0xed
  40a780:	sbb    eax,0x4c8ff6f5
  40a786:	mov    esp,eax
  40a788:	ret    0xfaf9
  40a78b:	inc    DWORD PTR [esi+0x3d8a00c0]
  40a791:	or     al,0xb
  40a793:	add    eax,0xf4798b88
  40a798:	cmc    
  40a799:	repz mov edx,0x84f5ed8
  40a79f:	mov    al,0xdd
  40a7a1:	push   ebp
  40a7a2:	inc    esi
  40a7a3:	or     ebp,eax
  40a7a5:	aas    
  40a7a6:	(bad)  
  40a7a7:	sti    
  40a7a8:	dec    DWORD PTR [edi-0xb0b8c6b]
  40a7ae:	hlt    
  40a7af:	xchg   BYTE PTR [esi-0x10b068d],cl
  40a7b5:	out    dx,eax
  40a7b6:	inc    edx
  40a7b7:	shl    ebp,cl
  40a7b9:	test   DWORD PTR [eax-0xa05827e],0xf488e0f8
  40a7c3:	cld    
  40a7c4:	stc    
  40a7c5:	add    ebx,0x74
  40a7c8:	ins    BYTE PTR es:[edi],dx
  40a7c9:	mov    BYTE PTR [esi-0x6009c],cl
  40a7cf:	mov    bl,0x3f
  40a7d1:	push   ebx
  40a7d2:	inc    eax
  40a7d3:	or     dh,BYTE PTR [esi+0xa4a5ae0]
  40a7d9:	in     eax,0x0
  40a7db:	fyl2x  
  40a7dd:	icebp  
  40a7de:	xchg   DWORD PTR [esi-0x4050f95],ebx
  40a7e4:	test   BYTE PTR [ebp-0xc080f8d],al
  40a7ea:	loop   0x40a806
  40a7ec:	fdiv   st,st(3)
  40a7ee:	cli    
  40a7ef:	add    DWORD PTR [edx-0xc030d88],0xfbf552e7
  40a7f9:	dec    DWORD PTR [ecx-0x70c78d38]
  40a7ff:	sub    BYTE PTR [eax+edi*8-0x10],0xf9
  40a804:	mov    edx,0x844503a
  40a809:	mov    edx,0x6475205
  40a80e:	out    dx,al
  40a80f:	(bad)  
  40a811:	cld    
  40a812:	clc    
  40a813:	mov    ds,WORD PTR [edx-0x9080594]
  40a819:	mov    BYTE PTR [edx-0x3090698],cl
  40a81f:	jmp    0x40a810
  40a821:	(bad)  
  40a824:	xchg   BYTE PTR [edi-0x2040298],al
  40a82a:	jecxz  0x40a851
  40a82c:	sti    
  40a82d:	cli    
  40a82e:	cmc    
  40a82f:	mov    al,ch
  40a831:	or     eax,0x29d8b
  40a836:	or     cl,BYTE PTR [eax-0x30bab72]
  40a83c:	cli    
  40a83d:	mov    edx,0x64e581b
  40a842:	mov    ebp,0x144582c
  40a847:	jmp    0x40a7dd
  40a849:	(bad)  
  40a84b:	test   DWORD PTR [ebx-0x400a86d],0x678580f9
  40a855:	(bad)  
  40a856:	clc    
  40a857:	(bad)  
  40a858:	in     al,dx
  40a859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a85a:	int    0xf5
  40a85c:	std    
  40a85d:	test   BYTE PTR [ebp-0xc050794],al
  40a863:	in     eax,0xe4
  40a865:	lock lock clc 
  40a868:	xchg   ebp,eax
  40a86a:	je     0x40a89c
  40a86c:	lea    ecx,[ebx-0xc0200ac]
  40a872:	mov    ebp,0x146591c
  40a877:	mov    ebp,0xf4d5431
  40a87c:	call   0xf83f78ee
  40a881:	sbb    DWORD PTR [eax+edx*2-0x78080b0a],0xfcff5d88
  40a88c:	jmp    edi
  40a88e:	jge    0x40a85a
  40a890:	icebp  
  40a891:	hlt    
  40a892:	mov    es,WORD PTR [eax-0xa0b0da2]
  40a898:	in     al,0xb7
  40a89a:	push   eax
  40a89c:	lock (bad) 
  40a89e:	enter  0x820a,0x21
  40a8a2:	or     al,BYTE PTR [eax]
  40a8a4:	add    BYTE PTR [ebp-0x4b377],cl
  40a8aa:	clc    
  40a8ab:	mov    cl,0xdf
  40a8ad:	pop    edx
  40a8ae:	dec    ebx
  40a8af:	or     esi,DWORD PTR [ebx+0x7415856]
  40a8b5:	loopne 0x40a8e4
  40a8b7:	fcomip st,st(7)
  40a8b9:	hlt    
  40a8ba:	mov    WORD PTR [eax-0x8070ab7],ss
  40a8c0:	mov    al,BYTE PTR [ebp-0x30606ad]
  40a8c6:	call   0xf83d7306
  40a8cb:	mov    eax,DWORD PTR [ebx-0x10b09b0]
  40a8d1:	call   0xf834a64a
  40a8d6:	(bad)  
  40a8da:	add    BYTE PTR [ebx-0x70b0cb6],0xb5
  40a8e1:	rcl    DWORD PTR [ebp+0x49],1
  40a8e4:	add    BYTE PTR [ebx+0xa4c5b6f],bh
  40a8ea:	out    0xf1,eax
  40a8ec:	fdivr  st,st(2)
  40a8ee:	cmc    
  40a8ef:	mov    WORD PTR [ebp-0xf0c03b7],ds
  40a8f5:	test   DWORD PTR [esp+ecx*2-0x11080c01],eax
  40a8fc:	add    eax,0x8cf7f2cd
  40a901:	mov    cl,BYTE PTR [esi-0x1]
  40a904:	icebp  
  40a905:	std    
  40a906:	in     al,dx
  40a907:	inc    ecx
  40a908:	icebp  
  40a909:	cli    
  40a90a:	inc    BYTE PTR [edx-0x4e70f63a]
  40a910:	add    eax,DWORD PTR [edi]
  40a912:	add    eax,0xf7398582
  40a917:	idiv   dl
  40a919:	mov    ch,0x34
  40a91b:	push   esp
  40a91c:	dec    ecx
  40a91d:	add    edi,DWORD PTR [ebx+0x43597b]
  40a923:	in     eax,0xc2
  40a925:	aam    0xfd
  40a927:	sti    
  40a928:	mov    DWORD PTR [esi-0xa050fc4],ebx
  40a92e:	add    BYTE PTR [eax-0x3080ebe],0xe8
  40a935:	ror    ebx,0xfc
  40a938:	test   DWORD PTR [eax-0xf00ba7a],0xf616e6f4
  40a942:	repz hlt 
  40a944:	add    ecx,0x8c873d77
  40a94a:	cmp    al,0xf7
  40a94c:	stc    
  40a94d:	hlt    
  40a94e:	mov    edx,0x4d5430
  40a953:	mov    edi,0x4415488
  40a958:	call   0xf13e87e6
  40a95d:	mov    ebx,DWORD PTR [ecx-0xd0c05cd]
  40a963:	test   DWORD PTR [esi-0x50207c9],eax
  40a969:	call   0x3a780d
  40a96e:	mov    eax,DWORD PTR [edi-0xa0807cc]
  40a974:	out    dx,al
  40a975:	(bad)  
  40a977:	idiv   al
  40a979:	mov    bh,cl
  40a97b:	jne    0x40a9c2
  40a97d:	mov    BYTE PTR [eax+edi*1+0x59fbf6f5],al
  40a984:	xchg   BYTE PTR [ebp-0x50dda],cl
  40a98a:	mov    BYTE PTR [esi],dl
  40a98c:	out    0x7c,eax
  40a98e:	retf   
  40a98f:	icebp  
  40a990:	hlt    
  40a991:	mov    cs,WORD PTR [eax-0xa0b0dd6]
  40a997:	mov    dh,0x98
  40a999:	pop    edi
  40a99a:	dec    edi
  40a99b:	cmpxchg BYTE PTR [edx],cl
  40a99e:	add    eax,0xbae38607
  40a9a3:	idiv   edi
  40a9a5:	sti    
  40a9a6:	mov    eax,DWORD PTR [ecx-0xb0b07d0]
  40a9ac:	pop    ebx
  40a9ad:	xchg   BYTE PTR [esi-0x10b06dd],cl
  40a9b3:	mov    WORD PTR [esi],ds
  40a9b5:	jmp    0x40a9f7
  40a9b7:	(bad)  
  40a9b8:	hlt    
  40a9b9:	clc    
  40a9ba:	mov    ss,WORD PTR [eax-0x70807de]
  40a9c0:	pop    eax
  40a9c1:	jmp    0x40a9d7
  40a9c3:	leave  
  40a9c4:	cld    
  40a9c5:	dec    DWORD PTR ds:0x8c580
  40a9cb:	push   es
  40a9cc:	push   0x12c19
  40a9d1:	loop   0x40aa27
  40a9d3:	fcomip st,st(7)
  40a9d5:	cmc    
  40a9d6:	or     DWORD PTR [eax-0x2],0xf3c7c4e7
  40a9dd:	hlt    
  40a9de:	push   edi
  40a9df:	gs add al,0x89
  40a9e2:	test   BYTE PTR [eax],ah
  40a9e4:	cld    
  40a9e5:	lock div DWORD PTR [esi+0xc485ede]
  40a9ec:	mov    ebp,0xd4854be
  40a9f1:	jmp    0x40a9f1
  40a9f3:	fdivr  st(7),st
  40a9f5:	dec    BYTE PTR [edi-0x608d36b]
  40a9fb:	dec    BYTE PTR [edi-0xf07d378]
  40aa01:	stc    
  40aa02:	call   0xf83c79fa
  40aa07:	mov    DWORD PTR [eax-0x60607db],eax
  40aa0d:	pop    edx
  40aa0e:	test   DWORD PTR [esi-0xd],eax
  40aa11:	in     eax,dx
  40aa12:	mov    ecx,0x82f7fac2
  40aa17:	int    0x84
  40aa19:	push   ebp
  40aa1a:	cli    
  40aa1b:	push   ecx
  40aa1c:	jmp    0x40a9da
  40aa1e:	aad    0xf5
  40aa20:	cld    
  40aa21:	mov    edx,ebp
  40aa23:	xchg   ebx,ebx
  40aa25:	ja     0x40aa96
  40aa27:	mov    DWORD PTR [esi-0xc],ecx
  40aa2a:	out    0x7c,eax
  40aa2c:	ret    
  40aa2d:	lock cli 
  40aa2f:	push   edx
  40aa30:	or     DWORD PTR fs:[esi-0x305e97b],ecx
  40aa37:	mul    ebx
  40aa39:	xchg   esp,eax
  40aa3a:	icebp  
  40aa3b:	push   eax
  40aa3d:	xchg   BYTE PTR [ebx-0xb0c05e6],cl
  40aa43:	push   esp
  40aa44:	mov    WORD PTR [esi-0x8010ae4],cs
  40aa4a:	mov    dl,0xd2
  40aa4c:	pop    edx
  40aa4d:	inc    eax
  40aa4e:	add    al,0xbe
  40aa50:	lds    edx,FWORD PTR [ebx+0x47]
  40aa53:	add    bh,ch
  40aa55:	mov    ss,edi
  40aa57:	(bad)  
  40aa58:	std    
  40aa59:	adc    DWORD PTR [edi-0x70c00e5],0xf7158988
  40aa63:	cld    
  40aa64:	lock out dx,eax
  40aa66:	cwde   
  40aa67:	enter  0xf6ff,0x8b
  40aa6b:	xchg   ebx,eax
  40aa6c:	sbb    bh,bh
  40aa6e:	std    
  40aa6f:	repz pop edi
  40aa71:	loopne 0x40aa23
  40aa73:	retf   
  40aa74:	(bad)  
  40aa75:	cli    
  40aa76:	add    BYTE PTR [edx-0xa000fef],0x55
  40aa7d:	mov    WORD PTR [ebp-0x2],cs
  40aa80:	loope  0x40aac5
  40aa82:	ret    
  40aa83:	hlt    
  40aa84:	test   DWORD PTR [ecx-0xaa713b],0xdf5fe758
  40aa8e:	icebp  
  40aa8f:	hlt    
  40aa90:	mov    ds,ebp
  40aa92:	adc    esi,0x7e
  40aa95:	inc    edi
  40aa96:	xchg   DWORD PTR [ebp-0x8],eax
  40aa99:	out    0x5,eax
  40aa9b:	shl    edi,0xfa
  40aa9e:	push   edi
  40aa9f:	ins    BYTE PTR es:[edi],dx
  40aaa0:	or     ecx,DWORD PTR [ebp-0x4f373]
  40aaa6:	sti    
  40aaa7:	mov    edx,0xb4b5ad3
  40aaac:	mov    bl,0xbf
  40aaae:	pop    eax
  40aaaf:	inc    esi
  40aab0:	or     ebp,ecx
  40aab2:	xor    eax,0x83f5fcdb
  40aab7:	sahf   
  40aab8:	or     edi,edx
  40aaba:	cli    
  40aabb:	cmc    
  40aabc:	mov    cl,BYTE PTR [ebp-0x60300e9]
  40aac2:	out    dx,al
  40aac3:	ds int 0xfd
  40aac6:	cli    
  40aac7:	mov    BYTE PTR [ebp-0x90006f0],cl
  40aacd:	pop    ebx
  40aace:	mov    WORD PTR [ebp-0x2],es
  40aad1:	out    0xfa,al
  40aad3:	shl    ebp,0xf5
  40aad6:	xchg   dl,al
  40aad8:	test   BYTE PTR [ebx-0xe],bl
  40aadb:	push   esp
  40aadc:	jecxz  0x40aad6
  40aade:	(bad)  
  40aadf:	cli    
  40aae0:	sti    
  40aae1:	sbb    al,0x86
  40aae4:	aam    0x7d
  40aae6:	or     DWORD PTR [bp+si-0x4],0xf8c2bce4
  40aaee:	neg    DWORD PTR [ebp+0x69]
  40aaf1:	or     al,0x82
  40aaf3:	lea    ecx,[ecx]
  40aaf5:	sti    
  40aaf6:	push   ebx
  40aaf8:	loopne 0x40aacb
  40aafa:	repnz std 
  40aafc:	repnz test DWORD PTR [edx-0xe0006f9],eax
  40ab03:	push   edx
  40ab04:	mov    DWORD PTR [ebp-0x70105fe],eax
  40ab0a:	mov    esp,0x3485bd2
  40ab0f:	mov    edi,0x5485ccd
  40ab14:	loopne 0x40aadc
  40ab16:	xlat   BYTE PTR ds:[ebx]
  40ab17:	lock dec DWORD PTR [ebp-0xf03fc64]
  40ab1e:	cmc    
  40ab1f:	mov    es,WORD PTR [ebp-0x20002f7]
  40ab25:	in     al,dx
  40ab26:	fadd   st,st(7)
  40ab28:	push   eax
  40ab2a:	mov    ds,WORD PTR [edi-0xe0205f5]
  40ab30:	push   eax
  40ab31:	jmp    0x40ab2d
  40ab33:	(bad)  
  40ab34:	cli    
  40ab35:	cld    
  40ab36:	or     DWORD PTR [esi-0xf0005f5],0x5b
  40ab3d:	add    DWORD PTR [ebx-0xf],0xffffffe4
  40ab41:	mov    ebp,cs
  40ab43:	(bad)  
  40ab44:	cld    
  40ab45:	add    edx,0xffffff8a
  40ab48:	pop    ebp
  40ab49:	hlt    
  40ab4a:	pop    esi
  40ab4b:	jecxz  0x40aadd
  40ab4d:	(bad)  
  40ab4f:	repnz mov ebx,edi
  40ab52:	test   esp,ebx
  40ab54:	je     0x40ab84
  40ab56:	lea    eax,[edi-0xe]
  40ab59:	jmp    0x498e:0xf8f3f29d
  40ab60:	stc    
  40ab61:	loopne 0x40aba4
  40ab63:	xbegin 0x9ab0166
  40ab69:	lea    eax,[ebx-0xc]
  40ab6c:	call   0xf83970ca
  40ab71:	or     esi,0x8cf5508a
  40ab77:	dec    eax
  40ab78:	imul   eax
  40ab7a:	push   0x81f7fedc
  40ab7f:	rol    DWORD PTR [ecx-0x7ec7812e],1
  40ab85:	dec    eax
  40ab86:	icebp  
  40ab87:	call   0xf13173ab
  40ab8c:	push   ebp
  40ab8d:	or     ecx,DWORD PTR fs:[eax+0x3ee5f240]
  40ab94:	ret    
  40ab95:	repz call FWORD PTR [edx+eax*4-0x76]
  40ab9a:	hlt    
  40ab9b:	idiv   dl
  40ab9d:	clc    
  40ab9e:	out    dx,al
  40ab9f:	div    ah
  40aba1:	(bad)  
  40aba2:	dec    DWORD PTR [edi-0x701077b]
  40aba8:	hlt    
  40aba9:	sbb    BYTE PTR [esi-0x9],0x52
  40abad:	jecxz  0x40abd7
  40abaf:	sar    dh,cl
  40abb1:	clc    
  40abb2:	sbb    ebx,0xffffff8f
  40abb5:	sar    DWORD PTR [esi+0x3],cl
  40abb8:	ss fsubrp st(1),st
  40abbb:	add    eax,0xc33306bb
  40abc0:	pop    esp
  40abc1:	pop    edi
  40abc2:	pop    edx
  40abc3:	mov    edx,DWORD PTR fs:0x4651596b
  40abca:	add    BYTE PTR [esi+ecx*4-0xe0a0103],al
  40abd1:	in     al,0xb6
  40abd3:	shl    ch,0xf2
  40abd6:	xchg   DWORD PTR [edx-0xb0c0ef2],ecx
  40abdc:	out    dx,eax
  40abdd:	mov    ebx,es
  40abdf:	sti    
  40abe0:	test   BYTE PTR [ebp-0xc08f47a],0xf5
  40abe7:	mov    ch,0xa
  40abe9:	or     al,0x5
  40abeb:	or     ch,bh
  40abed:	mov    bl,0xc7
  40abef:	cld    
  40abf0:	repz or BYTE PTR [ebp-0xc0004f3],0xe0
  40abf8:	outs   dx,BYTE PTR ds:[esi]
  40abf9:	(bad)  
  40abfa:	std    
  40abfb:	repnz test DWORD PTR [edx-0xe0006e1],eax
  40ac02:	jmp    0x828c:0xfafdc289
  40ac09:	adc    bh,cl
  40ac0b:	cmc    
  40ac0c:	imul   ebx
  40ac0e:	push   ebp
  40ac0f:	ret    
  40ac10:	lock test DWORD PTR [eax-0xf05ee73],0x30bbcff
  40ac1b:	add    ecx,DWORD PTR [edi]
  40ac1d:	loop   0x40aba8
  40ac1f:	retf   0xfdf2
  40ac22:	lea    eax,[edi-0xb02dc]
  40ac28:	out    0x32,eax
  40ac2a:	int3   
  40ac2b:	lock cli 
  40ac2d:	(bad)  
  40ac2e:	mov    ebp,DWORD PTR [esp+edi*8]
  40ac31:	push   ebp
  40ac33:	mov    edi,0x30b0807
  40ac38:	in     eax,dx
  40ac39:	outs   dx,DWORD PTR ds:[esi]
  40ac3a:	(bad)
  40ac3d:	mov    eax,DWORD PTR [eax-0x1040bc8]
  40ac43:	jmp    0x40ac59
  40ac45:	int3   
  40ac46:	(bad)  
  40ac47:	test   DWORD PTR [ebp-0x400cc7d],0xcd41e5f9
  40ac51:	(bad)  
  40ac52:	clc    
  40ac53:	mov    WORD PTR [ecx-0x20a02c4],es
  40ac59:	out    0x6,eax
  40ac5b:	retf   0xfaf8
  40ac5e:	or     DWORD PTR [eax-0x70f03b8],0xf6ca2eea
  40ac68:	dec    DWORD PTR [ebx-0xc02bb7b]
  40ac6e:	clc    
  40ac6f:	loopne 0x40ac6b
  40ac71:	ret    
  40ac72:	(bad)  
  40ac73:	cli    
  40ac74:	test   BYTE PTR [edx-0xa000fbb],al
  40ac7a:	in     eax,dx
  40ac7b:	adc    al,0xc2
  40ac7d:	cmc    
  40ac7e:	test   BYTE PTR [ecx-0xa08b874],0xf2
  40ac85:	in     eax,dx
  40ac86:	fcmovb st,st(6)
  40ac88:	push   eax
  40ac8a:	add    BYTE PTR [eax-0x5050ba2],0xee
  40ac91:	bnd ret 0xf3f5
  40ac95:	lea    ecx,[ecx-0x8080fa5]
  40ac9b:	in     eax,dx
  40ac9c:	ret    
  40ac9d:	ret    
  40ac9e:	hlt    
  40ac9f:	dec    DWORD PTR [ebp-0x400a37b]
  40aca5:	(bad)  
  40aca6:	out    dx,eax
  40aca7:	loop   0x40ac6b
  40aca9:	hlt    
  40acaa:	hlt    
  40acab:	xchg   BYTE PTR [esi-0x7010ba6],cl
  40acb1:	loopne 0x40ac60
  40acb3:	iret   
  40acb4:	div    esp
  40acb6:	mov    al,BYTE PTR [eax-0x8070a9b]
  40acbc:	out    dx,eax
  40acbd:	ror    edx,cl
  40acbf:	stc    
  40acc0:	stc    
  40acc1:	mov    es,WORD PTR [ebp-0x803059a]
  40acc7:	call   0xf537726a
  40accc:	mov    WORD PTR [ebp-0x80c0e9e],es
  40acd2:	loop   0x40ac8b
  40acd4:	(bad)  
  40acd5:	cmc    
  40acd6:	lock or DWORD PTR [ebx-0xf070ba0],0xffffffed
  40acde:	xchg   ah,cl
  40ace0:	(bad)  
  40ace1:	cld    
  40ace2:	or     BYTE PTR [ebp-0x80f0a84],0xe4
  40ace9:	mov    ds:0x80f7f8c3,al
  40acee:	xchg   BYTE PTR [eax-0x10],bh
  40acf1:	idiv   esi
  40acf3:	in     al,dx
  40acf4:	ins    BYTE PTR es:[edi],dx
  40acf5:	leave  
  40acf6:	idiv   ecx
  40acf8:	mov    WORD PTR [edi-0xf07088b],es
  40acfe:	out    dx,al
  40acff:	xchg   ecx,eax
  40ad00:	(bad)  
  40ad01:	std    
  40ad02:	sti    
  40ad03:	test   DWORD PTR [edi-0x6070187],eax
  40ad09:	out    dx,al
  40ad0a:	pop    esp
  40ad0b:	int    0xfc
  40ad0d:	clc    
  40ad0e:	mov    BYTE PTR [edx-0x78],cl
  40ad11:	in     eax,dx
  40ad12:	jbe    0x40acd4
  40ad14:	cli    
  40ad15:	lock lea eax,[ebx-0x73]
  40ad19:	jmp    0x40ad60
  40ad1b:	retf   0xfcf5
  40ad1e:	lea    ecx,[eax-0x76]
  40ad21:	call   0xf53e7a92
  40ad26:	lea    ecx,[edx-0x77]
  40ad29:	loop   0x40ad64
  40ad2b:	sar    ch,0xf1
  40ad2e:	test   DWORD PTR [esi-0x70],eax
  40ad31:	loop   0x40ad8e
  40ad33:	retf   0xf4f7
  40ad36:	mov    es,WORD PTR [eax-0x6c]
  40ad39:	out    0x2d,eax
  40ad3b:	retf   
  40ad3c:	stc    
  40ad3d:	cli    
  40ad3e:	or     DWORD PTR [esi-0x64],0xf5c14de9
  40ad45:	inc    BYTE PTR [ebp+0x16e39a4d]
  40ad4b:	sar    ecx,0xf2
  40ad4e:	lea    eax,[edx-0x60]
  40ad51:	out    dx,eax
  40ad52:	aas    
  40ad53:	int    0xff
  40ad55:	std    
  40ad56:	xchg   DWORD PTR [edi-0x55],eax
  40ad59:	mov    edx,0xc05070e
  40ad5e:	in     eax,0x2d
  40ad60:	(bad)  
  40ad61:	lock clc 
  40ad63:	pop    DWORD PTR [eax-0x54]
  40ad66:	mov    bl,0x2
  40ad68:	push   es
  40ad69:	add    BYTE PTR [eax],al
  40ad6b:	jmp    0x448b:0xf5f7ce30
  40ad72:	mov    cl,0xe1
  40ad74:	jmp    0x40ad3f
  40ad76:	lock inc DWORD PTR [edi+0x1ee0b940]
  40ad7d:	sar    bl,0xf6
  40ad80:	xchg   BYTE PTR [ebp-0x4a],cl
  40ad83:	in     eax,0xd9
  40ad85:	(bad)  
  40ad86:	cld    
  40ad87:	inc    DWORD PTR [edx+0xfe6c54a]
  40ad8d:	int3   
  40ad8e:	cli    
  40ad8f:	stc    
  40ad90:	or     BYTE PTR [esi-0x32],0xe4
  40ad94:	int3   
  40ad95:	enter  0xf0f0,0x85
  40ad99:	dec    ebp
  40ad9a:	int    0xef
  40ad9c:	bnd ret 
  40ad9e:	(bad)  
  40ad9f:	dec    DWORD PTR [ebp-0x431333bf]
  40ada5:	ret    
  40ada6:	hlt    
  40ada7:	hlt    
  40ada8:	xchg   BYTE PTR [esi-0x25],cl
  40adab:	jecxz  0x40ad8f
  40adad:	ret    
  40adae:	(bad)  
  40adaf:	clc    
  40adb0:	test   DWORD PTR [esi-0x22],eax
  40adb3:	loopne 0x40ad5c
  40adb5:	ret    
  40adb6:	cli    
  40adb7:	cli    
  40adb8:	xchg   DWORD PTR [edx-0x30],eax
  40adbb:	out    dx,eax
  40adbc:	aam    0xcb
  40adbe:	stc    
  40adbf:	stc    
  40adc0:	mov    es,WORD PTR [ebp-0x22]
  40adc3:	mov    edi,0x6000804
  40adc8:	call   0x3f7d7f
  40adcd:	xchg   DWORD PTR [ebx-0xc],ecx
  40add0:	mov    dl,0x8
  40add2:	or     cl,BYTE PTR ds:0xc6dce70a
  40add8:	repz hlt 
  40adda:	(bad)  
  40addb:	out    0x2d,al
  40addd:	(bad)  
  40adde:	idiv   bh
  40ade0:	jmp    0xcb84:0xf5f3f5e9
  40ade7:	push   edx
  40ade8:	pop    esi
  40ade9:	and    edx,0xc03ce55
  40adef:	sldt   WORD PTR [ecx]
  40adf2:	add    al,0x0
  40adf4:	dec    eax
  40adf5:	or     BYTE PTR [edi+0x1],al
  40adf8:	push   esi
  40adf9:	or     eax,0x60f0749
  40adfe:	add    BYTE PTR [esi],cl
  40ae00:	std    
  40ae01:	sti    
  40ae02:	idiv   ebp
  40ae04:	push   cs
  40ae05:	add    DWORD PTR [edi],eax
  40ae07:	push   es
  40ae08:	dec    edi
  40ae09:	fs jnp 0x40ae83
  40ae0c:	imul   sp,WORD PTR [ebx+0x4c],0x7c64
  40ae12:	ins    BYTE PTR es:[edi],dx
  40ae13:	add    eax,0xf6f9fff0
  40ae18:	das    
  40ae19:	add    ecx,DWORD PTR [edi]
  40ae1b:	or     dl,BYTE PTR [eax+0x6f]
  40ae1e:	imul   esi,DWORD PTR [esi+0x77],0x63
  40ae22:	jbe    0x40ae8b
  40ae24:	push   edi
  40ae25:	dec    ebp
  40ae26:	data16 data16 js 0x40ae8a
  40ae2a:	jbe    0x40ae99
  40ae2c:	push   0x63575f7c
  40ae31:	imul   esp,DWORD PTR [edi+0x67],0x7c
  40ae35:	jo     0x40ae5c
  40ae37:	dec    esi
  40ae38:	pop    ebx
  40ae39:	push   edi
  40ae3a:	dec    ebp
  40ae3b:	jae    0x40aeb4
  40ae3d:	jle    0x40aead
  40ae3f:	push   0x75
  40ae41:	push   ebp
  40ae42:	ins    DWORD PTR es:[edi],dx
  40ae43:	js     0x40aeb7
  40ae45:	popa   
  40ae46:	addr16 push 0x604000b
  40ae4c:	repnz (bad) 
  40ae4e:	clc    
  40ae4f:	dec    DWORD PTR [ecx+eax*1]
  40ae52:	add    al,0x0
  40ae54:	inc    ebx
  40ae55:	dec    eax
  40ae56:	inc    ecx
  40ae57:	dec    ebx
  40ae58:	inc    ebp
  40ae59:	dec    edx
  40ae5a:	aaa    
  40ae5b:	xor    eax,0x3383d3c
  40ae60:	lock clc 
  40ae62:	std    
  40ae63:	cli    
  40ae64:	pop    es
  40ae65:	or     DWORD PTR [eax],eax
  40ae67:	push   es
  40ae68:	pushw  0x6b6c
  40ae6c:	arpl   WORD PTR [ebp*2-0x90501fa],di
  40ae73:	clc    
  40ae74:	push   es
  40ae75:	str    WORD PTR [edx]
  40ae78:	popa   
  40ae79:	ins    DWORD PTR es:[edi],dx
  40ae7a:	addr16 push 0x68
  40ae7d:	outs   dx,BYTE PTR ds:[esi]
  40ae7e:	jp     0x40aea3
  40ae80:	gs jl  0x40aef2
  40ae83:	add    eax,0xf0fffcff
  40ae88:	add    eax,0x750b0e05
  40ae8d:	jle    0x40af0a
  40ae8f:	outs   dx,DWORD PTR ds:[esi]
  40ae90:	jge    0x40af0a
  40ae92:	and    eax,0xf647c63
  40ae97:	or     bh,dh
  40ae99:	cli    
  40ae9a:	clc    
  40ae9b:	stc    
  40ae9c:	or     al,0x0
  40ae9e:	add    BYTE PTR [eax],al
  40aea0:	arpl   WORD PTR [esi+0x7a],di
  40aea3:	sub    DWORD PTR [esi+0x77],esp
  40aea6:	imul   ecx,DWORD PTR [ebx],0xf9f4f4f4
  40aeac:	push   es
  40aead:	add    DWORD PTR [edi],eax
  40aeaf:	or     BYTE PTR [edi+0x77],al
  40aeb2:	push   0x60
  40aeb4:	inc    esp
  40aeb5:	je     0x40af1a
  40aeb7:	jle    0x40af24
  40aeb9:	sub    BYTE PTR [ebp+0x7c],ah
  40aebc:	bound  eax,QWORD PTR [esi]
  40aebe:	push   es
  40aebf:	add    edi,edi
  40aec1:	std    
  40aec2:	cli    
  40aec3:	cld    
  40aec4:	push   cs
  40aec5:	add    BYTE PTR [esi],al
  40aec7:	add    BYTE PTR [edi+0x63],ch
  40aeca:	outs   dx,DWORD PTR ds:[esi]
  40aecb:	outs   dx,BYTE PTR ds:[si]
  40aecd:	cmp    cl,BYTE PTR [eax+ecx*1]
  40aed0:	cmc    
  40aed1:	cmc    
  40aed2:	repnz cmc 
  40aed4:	add    ecx,DWORD PTR [esi]
  40aed6:	push   cs
  40aed7:	or     al,0x68
  40aed9:	ja     0x40af4c
  40aedb:	outs   dx,BYTE PTR ds:[esi]
  40aedc:	outs   dx,DWORD PTR ds:[esi]
  40aedd:	jg     0x40af42
  40aedf:	jns    0x40af10
  40aee1:	push   0x70
  40aee3:	imul   ecx,DWORD PTR [edi],0x8
  40aee6:	or     al,0x5
  40aee8:	cmc    
  40aee9:	clc    
  40aeea:	div    edx
  40aeec:	add    eax,0x56080f0c
  40aef1:	ins    DWORD PTR es:[edi],dx
  40aef2:	outs   dx,BYTE PTR ds:[esi]
  40aef3:	sub    al,0x50
  40aef5:	push   esi
  40aef6:	add    DWORD PTR [edx],eax
  40aef8:	repnz idiv eax
  40aefb:	lock or eax,DWORD PTR [eax]
  40aefe:	push   cs
  40aeff:	add    ah,BYTE PTR [ebx+0x32]
  40af02:	jg     0x40af6b
  40af04:	ja     0x40af7b
  40af06:	push   0x61286763
  40af0b:	jnp    0x40af71
  40af0d:	invd   
  40af0f:	add    eax,0xf0faf6f7
  40af14:	or     eax,DWORD PTR [esi]
  40af16:	or     DWORD PTR [ebx],eax
  40af18:	fs xor eax,0x7b657163
  40af1e:	popa   
  40af1f:	sub    BYTE PTR [edi+0x72],ch
  40af22:	pusha  
  40af23:	or     edi,edi
  40af25:	lock cli 
  40af27:	cmc    
  40af28:	add    eax,0x610e0205
  40af2d:	jnp    0x40af80
  40af2f:	pusha  
  40af30:	outs   dx,BYTE PTR ds:[esi]
  40af31:	imul   esp,DWORD PTR [ecx],0x6e7368
  40af37:	pmuludq mm6,mm1
  40af3a:	stc    
  40af3b:	cli    
  40af3c:	add    BYTE PTR [ebx],cl
  40af3e:	add    al,0x1
  40af40:	ins    WORD PTR es:[edi],dx
  40af42:	pusha  
  40af43:	imul   ebp,DWORD PTR [bx+di+0x6e],0x77
  40af48:	and    BYTE PTR [esi+0x7a],ah
  40af4b:	ins    BYTE PTR es:[edi],dx
  40af4c:	add    BYTE PTR [edi],al
  40af4e:	add    BYTE PTR [edi],al
  40af50:	(bad)  
  40af51:	sti    
  40af52:	(bad)  
  40af53:	std    
  40af54:	add    DWORD PTR [edx],eax
  40af56:	verw   WORD PTR [ecx+0x66]
  40af5a:	js     0x40afdb
  40af5c:	jnp    0x40afcb
  40af5e:	jge    0x40af87
  40af60:	push   0x74
  40af62:	addr16 add dh,dh
  40af65:	(bad)  
  40af66:	stc    
  40af67:	dec    DWORD PTR [ecx]
  40af69:	add    cl,BYTE PTR [edi+eax*1]
  40af6c:	outs   dx,DWORD PTR ds:[esi]
  40af6d:	je     0x40afda
  40af6f:	imul   ebp,DWORD PTR [ebx+eiz*1+0x65],0xa006273
  40af77:	add    eax,0xf6f5f7fe
  40af7c:	or     al,0x9
  40af7e:	or     ecx,DWORD PTR [eax]
  40af80:	ins    DWORD PTR es:[edi],dx
  40af81:	jae    0x40afed
  40af83:	je     0x40afae
  40af85:	popa   
  40af86:	jno    0x40afea
  40af88:	add    eax,0xfa050b0e
  40af8d:	stc    
  40af8e:	repnz hlt 
  40af90:	add    cl,BYTE PTR [eax+eax*1]
  40af93:	or     al,0x68
  40af95:	jno    0x40b00c
  40af97:	jl     0x40afc8
  40af99:	data16 js 0x40b002
  40af9c:	add    BYTE PTR [eax],al
  40af9e:	add    BYTE PTR [edi+edi*8],al
  40afa1:	sti    
  40afa2:	(bad)  
  40afa3:	clc    
  40afa4:	or     DWORD PTR [ebx],ecx
  40afa6:	or     ecx,DWORD PTR [ebx]
  40afa8:	outs   dx,BYTE PTR ds:[esi]
  40afa9:	outs   dx,BYTE PTR ds:[esi]
  40afaa:	push   es
  40afab:	or     edi,esi
  40afad:	clc    
  40afae:	idiv   esp
  40afb0:	push   es
  40afb1:	or     BYTE PTR [ebx],cl
  40afb3:	pop    es
  40afb4:	fs ja  0x40b021
  40afb7:	ins    BYTE PTR es:[edi],dx
  40afb8:	push   0x6b
  40afba:	imul   esp,DWORD PTR [ebx+0x2d],0x66
  40afbe:	jle    0x40b020
  40afc0:	add    al,BYTE PTR ds:0xf9ff0803
  40afc6:	push   esi
  40afc8:	push   es
  40afc9:	add    DWORD PTR [eax],eax
  40afcb:	or     ch,BYTE PTR [edi+0x7e]
  40afce:	jle    0x40b03a
  40afd0:	jge    0x40b050
  40afd2:	imul   bp,WORD PTR [esi+0x25],0x766c
  40afd8:	addr16 syscall 
  40afdb:	add    al,0xf6
  40afdd:	(bad)  
  40afde:	cld    
  40afdf:	lock (bad) 
  40afe2:	or     cl,BYTE PTR [edi]
  40afe4:	fs je  0x40b054
  40afe7:	and    esp,DWORD PTR [esi+0x74]
  40afea:	outs   dx,DWORD PTR ds:[esi]
  40afeb:	add    esi,ebx
  40afed:	lock idiv esi
  40aff0:	push   cs
  40aff1:	add    BYTE PTR [eax+ecx*1],cl
  40aff4:	push   0x79
  40aff6:	push   0x79
  40aff8:	jle    0x40b06f
  40affa:	es gs jo 0x40b063
  40affe:	add    al,BYTE PTR [edi+esi*8]
  40b001:	std    
  40b002:	cli    
  40b003:	dec    BYTE PTR [edi]
  40b005:	push   es
  40b006:	push   es
  40b007:	or     ah,BYTE PTR [ecx+0x6a]
  40b00a:	jl     0x40b077
  40b00c:	and    eax,0x9657b69
  40b011:	add    eax,0xf6f9000f
  40b016:	cld    
  40b017:	cld    
  40b018:	push   es
  40b019:	or     al,BYTE PTR [ebx]
  40b01b:	add    BYTE PTR [ebx+ebp*2+0x7d],ah
  40b01f:	ja     0x40b097
  40b021:	sub    BYTE PTR [eax+0x70],ch
  40b024:	fs add eax,0x2170f0a
  40b02a:	push   cs
  40b02b:	or     BYTE PTR [eax+0x0],dl
  40b02e:	inc    ebp
  40b02f:	add    eax,0x35f0845
  40b034:	push   edx
  40b035:	add    BYTE PTR [esi+0xb],cl
  40b038:	pop    esp
  40b039:	push   es
  40b03a:	inc    eax
  40b03b:	or     al,0x57
  40b03d:	add    al,0x1
  40b03f:	add    esi,edi
  40b041:	cmc    
  40b042:	(bad)  
  40b043:	test   DWORD PTR [ebx],0x71000b06
  40b049:	js     0x40b0ab
  40b04b:	outs   dx,DWORD PTR ds:[esi]
  40b04c:	ins    BYTE PTR es:[edi],dx
  40b04d:	ja     0x40b0c3
  40b04f:	sub    DWORD PTR [ecx+0x76],ebp
  40b052:	pusha  
  40b053:	or     bh,ch
  40b055:	lock push ebx
  40b058:	adc    eax,DWORD PTR ds:0x727d0d0c
  40b05e:	jb     0x40b0d4
  40b060:	arpl   WORD PTR [esp+esi*1+0x3d],bp
  40b064:	push   esp
  40b065:	jnp    0x40b0d8
  40b067:	outs   dx,BYTE PTR ds:[si]
  40b069:	fs jb  0x40b0e0
  40b06c:	sub    ah,BYTE PTR [ebp+edi*2+0x64]
  40b070:	or     DWORD PTR [edi],eax
  40b072:	or     eax,0xe981550f
  40b077:	xor    cl,al
  40b079:	pop    edi
  40b07a:	popa   
  40b07b:	pop    ss
  40b07c:	pop    ebp
  40b07d:	dec    ebx
  40b07e:	or     BYTE PTR [esi-0xe],ch
  40b081:	xor    eax,0xb7208a64
  40b086:	out    dx,eax
  40b087:	jae    0x40b0d7
  40b089:	or     ebp,ebp
  40b08b:	rol    bh,1
  40b08d:	repnz hlt 
  40b08f:	mov    dl,0xb8
  40b091:	pusha  
  40b092:	dec    esp
  40b093:	movntq (bad),mm6
  40b094:	out    0xf3,eax
  40b096:	int    0xfa
  40b098:	clc    
  40b099:	xor    eax,0x59595acb
  40b09e:	pusha  
  40b09f:	mov    DWORD PTR [eax+ebp*2],edx
  40b0a2:	sbb    eax,0xc80b4b5f
  40b0a7:	loop   0x40b100
  40b0a9:	mov    ecx,0xf0ecfef4
  40b0ae:	pop    esi
  40b0af:	leave  
  40b0b0:	pop    es
  40b0b1:	or     eax,DWORD PTR [edi]
  40b0b3:	add    eax,0x8475e21
  40b0b8:	mov    ds:0x6e06431f,eax
  40b0bd:	sbb    al,0x40
  40b0bf:	add    bl,BYTE PTR [ebp+0x5a00481d]
  40b0c5:	push   ds
  40b0c6:	dec    ecx
  40b0c7:	or     ebx,ebp
  40b0c9:	pop    ds
  40b0ca:	dec    edx
  40b0cb:	push   cs
  40b0cc:	mov    al,ds:0x190a4a17
  40b0d1:	sub    ecx,DWORD PTR [edi+0xe]
  40b0d4:	jmp    0x442b:0xdb074b2c
  40b0db:	or     DWORD PTR [ebp+ebp*1+0x2500084f],esp
  40b0e2:	dec    edi
  40b0e3:	or     al,dl
  40b0e5:	sub    ecx,DWORD PTR [edx+0x7]
  40b0e8:	add    al,0x36
  40b0ea:	inc    ebx
  40b0eb:	or     al,0x5b
  40b0ed:	xor    al,BYTE PTR [ecx+0x4]
  40b0f0:	fdiv   DWORD PTR [edi]
  40b0f2:	dec    eax
  40b0f3:	push   es
  40b0f4:	xchg   ebp,eax
  40b0f5:	cmp    DWORD PTR [ebp+0x8],ecx
  40b0f8:	pop    ss
  40b0f9:	xor    eax,DWORD PTR [esi+0x0]
  40b0fc:	out    dx,al
  40b0fd:	cmp    DWORD PTR [eax+ecx*1+0x4a],eax
  40b101:	cmp    DWORD PTR [ecx+0x7],eax
  40b104:	push   ds
  40b105:	cmp    cl,BYTE PTR [edx+0x8]
  40b108:	cmp    DWORD PTR [ebx],0x45
  40b10b:	addps  xmm7,XMMWORD PTR [ecx]
  40b10e:	dec    eax
  40b10f:	or     DWORD PTR [ebp-0x7ef9bfcd],edi
  40b115:	aas    
  40b116:	inc    ebx
  40b117:	setbe  BYTE PTR ds:0x3e220d40
  40b11e:	inc    edx
  40b11f:	add    al,0x4e
  40b121:	xor    DWORD PTR [eax+0xf],eax
  40b124:	sbb    DWORD PTR [eax],esi
  40b126:	dec    edi
  40b127:	add    eax,0x3080e02
  40b12c:	loopne 0x40b187
  40b12e:	inc    ebp
  40b12f:	add    ecx,DWORD PTR [ecx]
  40b131:	or     eax,DWORD PTR [ebx]
  40b133:	add    eax,0xe4b6fb4
  40b138:	mov    dl,0x3b
  40b13a:	dec    esp
  40b13b:	or     edx,DWORD PTR [ecx-0x76]
  40b13e:	out    dx,eax
  40b13f:	mov    cl,0xe
  40b141:	add    DWORD PTR [eax],ecx
  40b143:	or     BYTE PTR [ebx+ecx*1+0x6a],ch
  40b147:	add    al,0x4f
  40b149:	js     0x40b144
  40b14b:	push   esi
  40b14c:	mov    eax,0x44551b
  40b151:	jmp    0xc73f:0xfff0c868
  40b158:	push   eax
  40b159:	arpl   WORD PTR fs:[ebp+0x43],bx
  40b15d:	packsswb mm7,mm5
  40b160:	xor    eax,0xbe208064
  40b165:	pushf  
  40b166:	push   esp
  40b167:	inc    edx
  40b168:	or     al,0xef
  40b16a:	into   
  40b16b:	mov    ch,0xf9
  40b16d:	dec    BYTE PTR [eax+0x25e5ef4c]
  40b173:	out    dx,eax
  40b174:	cmc    
  40b175:	cli    
  40b176:	mov    cl,BYTE PTR [ebp-0x1e]
  40b179:	test   BYTE PTR [ecx-0x1b],dl
  40b17c:	jecxz  0x40b161
  40b17e:	jecxz  0x40b172
  40b180:	cli    
  40b181:	mov    edx,DWORD PTR [esi-0x14]
  40b184:	mov    bh,0xd7
  40b186:	jae    0x40b1d6
  40b188:	or     ebp,ebp
  40b18a:	inc    edi
  40b18b:	ret    
  40b18c:	repnz hlt 
  40b18e:	loop   0x40b1c1
  40b190:	retf   
  40b191:	repz lock test al,bl
  40b195:	test   DWORD PTR [eax-0x19],eax
  40b198:	out    dx,al
  40b199:	add    al,0xc6
  40b19b:	(bad)  
  40b19c:	dec    DWORD PTR [edi+0x528de445]
  40b1a2:	out    dx,eax
  40b1a3:	jecxz  0x40b174
  40b1a5:	loop   0x40b19b
  40b1a7:	hlt    
  40b1a8:	lea    ebx,[esi-0x1b]
  40b1ab:	mov    edi,0x84a75d4
  40b1b0:	jecxz  0x40b1ce
  40b1b2:	sar    dl,0xf5
  40b1b5:	clc    
  40b1b6:	cmp    eax,0x64376db
  40b1bb:	outs   dx,BYTE PTR ds:[esi]
  40b1bc:	adc    DWORD PTR [ebp+0x42],0x5
  40b1c0:	cld    
  40b1c1:	cmp    eax,0x94070d8
  40b1c6:	arpl   WORD PTR [ebp-0x7ef1b5ab],dx
  40b1cc:	dec    ebp
  40b1cd:	(bad)  
  40b1ce:	mov    al,0x9
  40b1d0:	or     cl,BYTE PTR [edi]
  40b1d2:	push   cs
  40b1d3:	out    0xb4,al
  40b1d5:	int    0xf8
  40b1d7:	lock mov es,WORD PTR [ecx-0x2b]
  40b1db:	call   0xf438aeef
  40b1e0:	pusha  
  40b1e1:	pavgb  mm2,mm5
  40b1e4:	iret   
  40b1e5:	cmc    
  40b1e6:	clc    
  40b1e7:	cmp    ecx,ebp
  40b1e9:	pop    ecx
  40b1ea:	push   ebp
  40b1eb:	push   esi
  40b1ec:	ins    BYTE PTR es:[edi],dx
  40b1ed:	mov    BYTE PTR [eax+ebp*2],dl
  40b1f0:	jns    0x40b24f
  40b1f2:	inc    esi
  40b1f3:	add    DWORD PTR [edi+0xabdd448],ecx
  40b1f9:	push   es
  40b1fa:	add    BYTE PTR [esi],cl
  40b1fc:	jmp    0xeec2:0xfafdccaf
  40b203:	pop    es
  40b204:	mov    eax,0xece8f7f5
  40b209:	in     eax,dx
  40b20a:	jge    0x40b1c3
  40b20c:	cli    
  40b20d:	test   DWORD PTR [ecx],0x6000305
  40b213:	or     DWORD PTR [ebx+0x3],esi
  40b216:	outs   dx,BYTE PTR ds:[esi]
  40b217:	or     dh,BYTE PTR [edi+0x0]
  40b21a:	add    bh,BYTE PTR gs:[edx+eax*1]
  40b21e:	cmp    BYTE PTR [edx],al
  40b220:	or     eax,DWORD PTR [eax]
  40b222:	syscall 
  40b224:	push   es
  40b225:	syscall 
  40b227:	add    dh,BYTE PTR [eax]
  40b229:	or     BYTE PTR ds:0x62057a00,bh
  40b22f:	or     BYTE PTR [edi+0x3],bh
  40b232:	ins    DWORD PTR es:[edi],dx
  40b233:	add    BYTE PTR [edi],cl
  40b235:	or     ecx,DWORD PTR [esi]
  40b237:	push   es
  40b238:	add    eax,0x1040b0c
  40b23d:	add    ecx,DWORD PTR [eax]
  40b23f:	or     al,BYTE PTR [ecx]
  40b241:	or     BYTE PTR [eax],cl
  40b243:	push   es
  40b244:	or     eax,DWORD PTR [eax]
  40b246:	add    al,0x6
  40b248:	or     eax,0x7000700
  40b24d:	add    DWORD PTR [eax+eax*1],eax
  40b250:	add    cl,BYTE PTR [edx]
  40b252:	add    cl,BYTE PTR [edi]
  40b254:	add    BYTE PTR [edi+eax*1],cl
  40b257:	add    eax,0x3080d0c
  40b25c:	sysret 
  40b25e:	add    al,BYTE PTR ds:0x6000900
  40b264:	add    BYTE PTR [eax],al
  40b266:	add    cl,BYTE PTR [edi+eax*1]
  40b269:	or     BYTE PTR [edx],cl
  40b26b:	push   es
  40b26c:	add    DWORD PTR ds:0xf0d0709,eax
  40b272:	add    BYTE PTR [edx],cl
  40b274:	add    eax,0x90a0801
  40b279:	add    al,0x9
  40b27b:	or     ecx,DWORD PTR [eax]
  40b27d:	or     cl,BYTE PTR ds:0x30005
  40b283:	(bad)  
  40b284:	syscall 
  40b286:	push   cs
  40b287:	or     eax,DWORD PTR ds:0xb0d0605
  40b28d:	or     cl,BYTE PTR [eax+eax*1]
  40b290:	or     al,0xf
  40b292:	invd   
  40b294:	or     BYTE PTR ds:0xb0607,al
  40b29a:	add    BYTE PTR [eax],al
  40b29c:	add    al,0x8d
  40b29e:	inc    esp
  40b29f:	add    BYTE PTR [edi],al
  40b2a1:	or     ecx,DWORD PTR [ebx]
  40b2a3:	or     ecx,DWORD PTR [ebx]
  40b2a5:	or     ecx,DWORD PTR [ebx]
  40b2a7:	push   es
  40b2a8:	cmp    ebx,DWORD PTR [edi]
  40b2aa:	inc    edi
  40b2ab:	or     bh,ah
  40b2ad:	sbb    DWORD PTR [eax+0xb],ecx
  40b2b0:	stos   DWORD PTR es:[edi],eax
  40b2b1:	push   ss
  40b2b2:	inc    ebp
  40b2b3:	or     cl,bl
  40b2b5:	adc    eax,0x1bcf0047
  40b2ba:	inc    esi
  40b2bb:	add    eax,DWORD PTR [eax]
  40b2bd:	add    al,BYTE PTR ds:0x46107803
  40b2c3:	add    BYTE PTR [ecx-0x41ffbee5],bl
  40b2c9:	push   ds
  40b2ca:	dec    esp
  40b2cb:	or     BYTE PTR [edx],cl
  40b2cd:	rol    ecx,0xc2
  40b2d0:	(bad)  
  40b2d1:	fld    st(1)
  40b2d3:	(bad)  
  40b2d4:	(bad)  
  40b2d5:	leave  
  40b2d6:	aam    0xdd
  40b2d8:	into   
  40b2d9:	rcr    dl,1
  40b2db:	(bad)  
  40b2dd:	(bad)  
  40b2de:	shr    edx,cl
  40b2e0:	out    dx,al
  40b2e1:	jmp    0x40b2ef
  40b2e3:	loope  0x40b2d4
  40b2e5:	mov    cl,BYTE PTR [eax+0xd]
  40b2e8:	iret   
  40b2e9:	adc    DWORD PTR [edi+0x8],ecx
  40b2ec:	int    0x19
  40b2ee:	inc    eax
  40b2ef:	or     al,0xe0
  40b2f1:	sbb    BYTE PTR [ecx+0x2],al
  40b2f4:	repnz idiv eax
  40b2f7:	lock push es
  40b2f9:	add    BYTE PTR [esi],cl
  40b2fb:	add    al,BYTE PTR [eax+ecx*1]
  40b2fe:	add    al,BYTE PTR ds:0x6060701
  40b304:	or     cl,BYTE PTR [eax]
  40b306:	add    eax,DWORD PTR [edi]
  40b308:	add    eax,0x805080f
  40b30d:	or     DWORD PTR ds:0x493d1c0f,eax
  40b313:	add    edx,DWORD PTR [edi+0x34]
  40b316:	dec    edx
  40b317:	add    eax,DWORD PTR [eax]
  40b319:	or     eax,0x35320002
  40b31e:	xor    BYTE PTR [eax],bh
  40b320:	xor    al,0x3a
  40b322:	xor    edi,DWORD PTR ds:0x4c433c37
  40b328:	dec    ebx
  40b329:	inc    edi
  40b32a:	inc    ebp
  40b32b:	dec    esp
  40b32c:	add    eax,0x30b0803
  40b331:	add    eax,0xe0b0f00
  40b336:	push   es
  40b337:	add    eax,0xf28fff08
  40b33c:	inc    eax
  40b33d:	adc    eax,0xd9b43f8
  40b342:	popa   
  40b343:	aad    0xb
  40b345:	sub    al,0xfa
  40b347:	add    BYTE PTR cs:[edi],al
  40b34a:	add    BYTE PTR [edi],al
  40b34c:	add    DWORD PTR [eax+eax*1],eax
  40b34f:	add    cl,BYTE PTR [edx]
  40b351:	add    cl,BYTE PTR [edi]
  40b353:	add    BYTE PTR [edi+eax*1],cl
  40b356:	add    eax,0x3080d0c
  40b35b:	sysret 
  40b35d:	add    al,BYTE PTR ds:0x6000900
  40b363:	add    BYTE PTR [eax],al
  40b365:	add    cl,BYTE PTR [edi+eax*1]
  40b368:	or     BYTE PTR [edx],cl
  40b36a:	push   es
  40b36b:	add    DWORD PTR ds:0xf0d0709,eax
  40b371:	add    BYTE PTR [edx],cl
  40b373:	add    eax,0x90a0801
  40b378:	add    al,0x9
  40b37a:	or     ecx,DWORD PTR [eax]
  40b37c:	or     cl,BYTE PTR ds:0x30005
  40b382:	(bad)  
  40b383:	syscall 
  40b385:	push   cs
  40b386:	or     eax,DWORD PTR ds:0xb0d0605
  40b38c:	or     cl,BYTE PTR [eax+eax*1]
  40b38f:	or     al,0xf
  40b391:	invd   
  40b393:	or     BYTE PTR ds:0xb0607,al
  40b399:	add    BYTE PTR [eax],al
  40b39b:	add    al,0x0
  40b39d:	add    al,0x0
  40b39f:	pop    es
  40b3a0:	or     ecx,DWORD PTR [ebx]
  40b3a2:	or     ecx,DWORD PTR [ebx]
  40b3a4:	or     ecx,DWORD PTR [ebx]
  40b3a6:	push   es
  40b3a7:	or     eax,DWORD PTR [ecx]
  40b3a9:	pop    es
  40b3aa:	or     BYTE PTR [ebx],al
  40b3ac:	or     cl,BYTE PTR [eax]
  40b3ae:	or     eax,DWORD PTR [edi]
  40b3b0:	add    eax,0x8070a05
  40b3b5:	pop    es
  40b3b6:	add    BYTE PTR [ebx],al
  40b3b8:	push   es
  40b3b9:	push   es
  40b3ba:	add    eax,DWORD PTR [eax]
  40b3bc:	add    al,BYTE PTR ds:0x6000803
  40b3c2:	add    BYTE PTR [ecx],cl
  40b3c4:	or     eax,DWORD PTR [ecx]
  40b3c6:	add    BYTE PTR [edx],cl
  40b3c8:	push   cs
  40b3c9:	or     al,0x8
  40b3cb:	or     cl,BYTE PTR [edx]
  40b3cd:	or     eax,0xe0e0f0a
  40b3d2:	or     al,0xb
  40b3d4:	pop    es
  40b3d5:	syscall 
  40b3d7:	add    al,0x9
  40b3d9:	add    BYTE PTR [ebx],al
  40b3db:	invd   
  40b3dd:	or     al,0xa
  40b3df:	invd   
  40b3e1:	or     al,0x5
  40b3e3:	or     al,BYTE PTR [edi]
  40b3e5:	or     BYTE PTR ds:0x80f0c03,cl
  40b3eb:	add    DWORD PTR [eax+eax*1],eax
  40b3ee:	or     al,0x8
  40b3f0:	push   es
  40b3f1:	add    DWORD PTR [edx],eax
  40b3f3:	or     eax,0x60f0708
  40b3f8:	add    BYTE PTR [esi],cl
  40b3fa:	add    al,BYTE PTR [eax+ecx*1]
  40b3fd:	add    al,BYTE PTR ds:0x6060701
  40b403:	or     cl,BYTE PTR [eax]
  40b405:	add    eax,DWORD PTR [edi]
  40b407:	add    eax,0x805080f
  40b40c:	or     DWORD PTR ds:0x906000f,eax
  40b412:	add    eax,DWORD PTR [ebx]
  40b414:	(bad)  
  40b416:	add    eax,DWORD PTR [eax]
  40b418:	or     eax,0x4020002
  40b41d:	add    cl,BYTE PTR [ebx]
  40b41f:	add    BYTE PTR [edi],cl
  40b421:	add    eax,0x2050f0a
  40b426:	push   cs
  40b427:	or     BYTE PTR [ebx],al
  40b429:	add    BYTE PTR [edx],cl
  40b42b:	add    eax,0x30b0803
  40b430:	add    eax,0xe0b0f00
  40b435:	push   es
  40b436:	add    eax,0x1040b0c
  40b43b:	add    ecx,DWORD PTR [eax]
  40b43d:	or     al,BYTE PTR [ecx]
  40b43f:	or     BYTE PTR [eax],cl
  40b441:	push   es
  40b442:	or     eax,DWORD PTR [eax]
  40b444:	add    al,0x6
  40b446:	or     eax,0x7000700
  40b44b:	add    DWORD PTR [eax+eax*1],eax
  40b44e:	add    cl,BYTE PTR [edx]
  40b450:	add    cl,BYTE PTR [edi]
  40b452:	add    BYTE PTR [edi+eax*1],cl
  40b455:	add    eax,0x3080d0c
  40b45a:	sysret 
  40b45c:	add    al,BYTE PTR ds:0x6000900
  40b462:	add    BYTE PTR [eax],al
  40b464:	add    cl,BYTE PTR [edi+eax*1]
  40b467:	or     BYTE PTR [edx],cl
  40b469:	push   es
  40b46a:	add    DWORD PTR ds:0xf0d0709,eax
  40b470:	add    BYTE PTR [edx],cl
  40b472:	add    eax,0x90a0801
  40b477:	add    al,0x9
  40b479:	or     ecx,DWORD PTR [eax]
  40b47b:	or     cl,BYTE PTR ds:0x30005
  40b481:	(bad)  
  40b482:	syscall 
  40b484:	push   cs
  40b485:	or     eax,DWORD PTR ds:0xb0d0605
  40b48b:	or     cl,BYTE PTR [eax+eax*1]
  40b48e:	or     al,0xf
  40b490:	invd   
  40b492:	or     BYTE PTR ds:0xb0607,al
  40b498:	add    BYTE PTR [eax],al
  40b49a:	add    al,0x0
  40b49c:	add    al,0x0
  40b49e:	pop    es
  40b49f:	or     edi,ebx
  40b4a1:	mov    cl,BYTE PTR [ebx]
  40b4a3:	or     edi,ebx
  40b4a5:	xchg   BYTE PTR [ebx],cl
  40b4a7:	add    DWORD PTR [edi],eax
  40b4a9:	or     BYTE PTR [ebx],al
  40b4ab:	or     cl,BYTE PTR [eax]
  40b4ad:	or     eax,DWORD PTR [edi]
  40b4af:	add    eax,0x8070a05
  40b4b4:	mov    bh,0x82
  40b4b6:	add    eax,DWORD PTR [esi]
  40b4b8:	add    BYTE PTR es:[eax],0x2
  40b4bc:	add    eax,0x6000803
  40b4c1:	add    BYTE PTR [ecx],cl
  40b4c3:	or     eax,DWORD PTR [ecx]
  40b4c5:	add    BYTE PTR [edx],cl
  40b4c7:	push   cs
  40b4c8:	hlt    
  40b4c9:	mov    cl,BYTE PTR [edx]
  40b4cb:	or     bh,BYTE PTR ds:0xe0e0f8b
  40b4d1:	or     al,0xb
  40b4d3:	pop    es
  40b4d4:	syscall 
  40b4d6:	add    al,0x9
  40b4d8:	add    BYTE PTR [ebx],al
  40b4da:	invd   
  40b4dc:	push   eax
  40b4dd:	mov    DWORD PTR [edi],ecx
  40b4df:	or     BYTE PTR [esp+eax*4+0xa],al
  40b4e3:	pop    es
  40b4e4:	or     BYTE PTR ds:0x80f0c03,cl
  40b4ea:	add    DWORD PTR [eax+eax*1],eax
  40b4ed:	or     al,0x8
  40b4ef:	push   es
  40b4f0:	jecxz  0x40b478
  40b4f2:	or     eax,0x68eaf08
  40b4f7:	add    BYTE PTR [esi],cl
  40b4f9:	add    al,BYTE PTR [eax+ecx*1]
  40b4fc:	add    al,BYTE PTR ds:0x6060701
  40b502:	or     cl,BYTE PTR [eax]
  40b504:	or     DWORD PTR [edx-0x7b47f0fb],eax
  40b50a:	or     BYTE PTR [ecx],cl
  40b50c:	add    eax,0x906000f
  40b511:	add    eax,DWORD PTR [ebx]
  40b513:	(bad)  
  40b515:	add    eax,DWORD PTR [eax]
  40b517:	or     eax,0x4028542
  40b51c:	mov    esi,0x50f008a
  40b521:	or     cl,BYTE PTR [edi]
  40b523:	add    eax,0x3080e02
  40b528:	add    BYTE PTR [edx],cl
  40b52a:	add    eax,0x38eae03
  40b52f:	add    eax,0xe0b8ed0
  40b534:	push   es
  40b535:	add    eax,0x1040b0c
  40b53a:	add    ecx,DWORD PTR [eax]
  40b53c:	or     al,BYTE PTR [ecx]
  40b53e:	or     BYTE PTR [eax],cl
  40b540:	retf   0x8e
  40b543:	add    al,0xde
  40b545:	mov    WORD PTR [eax],es
  40b547:	pop    es
  40b548:	add    BYTE PTR [edi],al
  40b54a:	add    DWORD PTR [eax+eax*1],eax
  40b54d:	add    cl,BYTE PTR [edx]
  40b54f:	add    cl,BYTE PTR [edi]
  40b551:	add    BYTE PTR [edi+eax*1],cl
  40b554:	out    dx,eax
  40b555:	mov    DWORD PTR ds:0x78ee308,ecx
  40b55b:	add    al,BYTE PTR ds:0x6000900
  40b561:	add    BYTE PTR [eax],al
  40b563:	add    cl,BYTE PTR [edi+eax*1]
  40b566:	or     BYTE PTR [edx],cl
  40b568:	push   cs
  40b569:	xchg   DWORD PTR ds:0xf8cef09,eax
  40b56f:	add    BYTE PTR [edx],cl
  40b571:	add    eax,0x90a0801
  40b576:	add    al,0x9
  40b578:	or     ecx,DWORD PTR [eax]
  40b57a:	or     cl,BYTE PTR ds:0x30005
  40b580:	(bad)  
  40b581:	syscall 
  40b583:	push   cs
  40b584:	cmc    
  40b585:	test   BYTE PTR ds:0xa891906,al
  40b58b:	or     al,0x2a
  40b58d:	mov    cs,WORD PTR [edi]
  40b58f:	wrmsr  
  40b591:	mov    al,BYTE PTR ds:0x894207
  40b597:	add    BYTE PTR [esi-0x7a],dl
  40b59a:	add    BYTE PTR [edx+ebp*2],al
  40b59d:	test   DWORD PTR [ebx],ecx
  40b59f:	or     esi,DWORD PTR [ebx-0x77]
  40b5a2:	or     ecx,DWORD PTR [ebx]
  40b5a4:	or     BYTE PTR [ecx-0x7e65f8ff],0xa
  40b5ab:	or     BYTE PTR [ebp+0xa050585],dl
  40b5b1:	pop    es
  40b5b2:	or     BYTE PTR [edi],al
  40b5b4:	mov    esi,0xcd060681
  40b5b9:	add    BYTE PTR [edx],0x5
  40b5bc:	out    0x8a,eax
  40b5be:	add    BYTE PTR [esi],al
  40b5c0:	add    BYTE PTR [ecx],cl
  40b5c2:	or     eax,DWORD PTR [ecx]
  40b5c4:	push   es
  40b5c5:	mov    DWORD PTR [esi],ecx
  40b5c7:	or     al,0x12
  40b5c9:	mov    DWORD PTR [edx],ecx
  40b5cb:	or     eax,0xe0e8c24
  40b5d0:	xor    cl,BYTE PTR [eax-0x78b4f0f9]
  40b5d6:	or     DWORD PTR [eax],eax
  40b5d8:	add    ecx,DWORD PTR [edi]
  40b5da:	or     BYTE PTR [eax+eiz*2],cl
  40b5dd:	mov    WORD PTR [eax],cs
  40b5df:	or     al,0x7f
  40b5e1:	mov    DWORD PTR [edi],eax
  40b5e3:	or     BYTE PTR [ebp-0x6ff0f380],al
  40b5e9:	add    BYTE PTR [eax+eax*1],0xa0
  40b5ed:	mov    eax,DWORD PTR [esi]
  40b5ef:	add    DWORD PTR [esi-0x36f8f772],esi
  40b5f5:	test   DWORD PTR [eax],eax
  40b5f7:	push   cs
  40b5f8:	aam    0x87
  40b5fa:	or     BYTE PTR [edx],al
  40b5fc:	jecxz  0x40b580
  40b5fe:	pop    es
  40b5ff:	push   es
  40b600:	cld    
  40b601:	mov    DWORD PTR [eax],ecx
  40b603:	add    ecx,DWORD PTR ds:0x1f080f81
  40b609:	mov    WORD PTR [ecx],cs
  40b60b:	add    eax,0x9068425
  40b610:	aas    
  40b611:	xchg   DWORD PTR [edi],ecx
  40b613:	or     dl,BYTE PTR [ecx-0x7c]
  40b616:	or     eax,0x4866202
  40b61b:	add    bh,BYTE PTR [ebp-0x7c]
  40b61e:	syscall 
  40b620:	or     BYTE PTR [ebx-0x7369fdfb],0x3
  40b627:	add    BYTE PTR [ecx+eax*4-0x7840f7fd],ch
  40b62e:	add    eax,0xe8fc900
  40b633:	push   es
  40b634:	ror    DWORD PTR [eax+0x301040b],1
  40b63a:	or     BYTE PTR [edx],cl
  40b63c:	icebp  
  40b63d:	mov    WORD PTR [eax],cs
  40b63f:	push   es
  40b640:	or     eax,DWORD PTR [eax]
  40b642:	add    al,0x6
  40b644:	adc    eax,0x35000785
  40b649:	test   BYTE PTR [eax+eax*1],al
  40b64c:	add    cl,BYTE PTR [edx]
  40b64e:	add    cl,BYTE PTR [edi]
  40b650:	dec    edx
  40b651:	mov    DWORD PTR [edi],eax
  40b653:	add    eax,0x308886a
  40b658:	ja     0x40b5dc
  40b65a:	add    al,BYTE PTR ds:0x6008c8e
  40b660:	add    BYTE PTR [eax],al
  40b662:	add    cl,BYTE PTR [edi+esi*4]
  40b665:	lea    ecx,[edx]
  40b667:	push   es
  40b668:	add    DWORD PTR ds:0x8ad70709,eax
  40b66e:	add    BYTE PTR [edx],cl
  40b670:	add    eax,0xff0a0801
  40b675:	or     DWORD PTR [ecx],0xd0a080b
  40b67b:	add    eax,0xf008512
  40b680:	syscall 
  40b682:	push   cs
  40b683:	or     ebp,DWORD PTR [esi+0x60]
  40b686:	je     0x40b6eb
  40b688:	outs   dx,BYTE PTR ds:[esi]
  40b689:	data16 aas 
  40b68b:	xor    ah,BYTE PTR [edx]
  40b68d:	imul   esp,DWORD PTR [ebx+0x64],0x8
  40b691:	add    eax,0x654c0607
  40b696:	je     0x40b6db
  40b698:	jno    0x40b70c
  40b69a:	jbe    0x40b701
  40b69c:	imul   edi,DWORD PTR [edi+0x5f],0x6a6e7963
  40b6a3:	bound  eax,QWORD PTR [edx+0x65]
  40b6a6:	pop    es
  40b6a7:	or     BYTE PTR [ebx],al
  40b6a9:	or     al,BYTE PTR [ebp+0x7e]
  40b6ac:	imul   esi,DWORD PTR [ecx+0x6c],0x48
  40b6b0:	jle    0x40b72e
  40b6b2:	bound  edx,QWORD PTR [esp+ebp*2+0x51]
  40b6b6:	outs   dx,DWORD PTR ds:[esi]
  40b6b7:	addr16 gs inc ecx
  40b6ba:	ins    DWORD PTR es:[edi],dx
  40b6bb:	bound  edi,QWORD PTR [edx+0x0]
  40b6be:	push   es
  40b6bf:	add    BYTE PTR [ebx+esi*2+0x68],cl
  40b6c3:	je     0x40b71f
  40b6c5:	jl     0x40b72a
  40b6c7:	imul   ebp,DWORD PTR [edi+0x79],0x7e
  40b6cb:	or     cl,BYTE PTR [edi]
  40b6cd:	push   cs
  40b6ce:	pop    esp
  40b6cf:	js     0x40b738
  40b6d1:	push   edx
  40b6d2:	popa   
  40b6d3:	jb     0x40b742
  40b6d5:	add    ecx,DWORD PTR fs:[bx]
  40b6d9:	or     BYTE PTR [esi+0x6b],bl
  40b6dc:	data16 jnp 0x40b748
  40b6df:	inc    eax
  40b6e0:	jb     0x40b746
  40b6e2:	ins    DWORD PTR es:[edi],dx
  40b6e3:	jge    0x40b75c
  40b6e5:	gs pusha 
  40b6e7:	add    WORD PTR [eax+eax*1],ax
  40b6eb:	or     al,0x4f
  40b6ed:	arpl   WORD PTR [ebp+0x4f],si
  40b6f0:	bound  ebp,QWORD PTR [edx+esi*2+0x63]
  40b6f4:	arpl   WORD PTR [eax+0x6f],cx
  40b6f7:	ins    BYTE PTR es:[edi],dx
  40b6f8:	pusha  
  40b6f9:	fs addr16 inc esp
  40b6fc:	add    DWORD PTR [edi],eax
  40b6fe:	push   es
  40b6ff:	push   es
  40b700:	dec    esp
  40b701:	jp     0x40b769
  40b703:	bound  ecx,QWORD PTR [ecx+0x66]
  40b706:	push   0x77
  40b708:	imul   edi,DWORD PTR [ebx+0x7c],0x4106000f
  40b70f:	bound  di,DWORD PTR [edi+0x4c]
  40b713:	jno    0x40b77a
  40b715:	push   0x4020002
  40b71a:	dec    edx
  40b71b:	outs   dx,BYTE PTR ds:[esi]
  40b71c:	popa   
  40b71d:	jg     0x40b776
  40b71f:	outs   dx,DWORD PTR ds:[esi]
  40b720:	dec    esi
  40b721:	imul   ebp,DWORD PTR [esi+0x61],0xa00036b
  40b728:	dec    ebp
  40b729:	imul   di,WORD PTR [ebx+0x42],0x6c69
  40b72f:	pusha  
  40b730:	push   0x4b05060e
  40b735:	outs   dx,BYTE PTR ds:[esi]
  40b736:	jo     0x40b789
  40b738:	jno    0x40b7a1
  40b73a:	imul   esp,DWORD PTR [ebx+edi*2+0x7b],0x74616e4e
  40b742:	push   es
  40b743:	or     eax,0x66656b6f
  40b748:	je     0x40b7ba
  40b74a:	xor    esi,DWORD PTR [eax]
  40b74c:	and    al,0x66
  40b74e:	arpl   WORD PTR [esp+ecx*1+0x7],bp
  40b752:	add    eax,0x70715e0c
  40b757:	dec    ecx
  40b758:	jne    0x40b7c1
  40b75a:	pusha  
  40b75b:	push   ebx
  40b75c:	jge    0x40b7d0
  40b75e:	outs   dx,DWORD PTR ds:[esi]
  40b75f:	outs   dx,BYTE PTR ds:[esi]
  40b760:	add    cl,BYTE PTR [si]
  40b763:	pop    es
  40b764:	pop    ebx
  40b765:	jae    0x40b7dc
  40b767:	push   ebx
  40b768:	pusha  
  40b769:	dec    eax
  40b76a:	imul   esp,DWORD PTR [ecx+0x60],0x63
  40b76e:	pop    ecx
  40b76f:	jno    0x40b7e4
  40b771:	popa   
  40b772:	outs   dx,BYTE PTR fs:[esi]
  40b774:	dec    eax
  40b775:	ins    BYTE PTR es:[edi],dx
  40b776:	or     BYTE PTR gs:[edx],cl
  40b779:	or     eax,0x41707956
  40b77e:	arpl   WORD PTR [ebx+0x6a],sp
  40b781:	ins    DWORD PTR es:[edi],dx
  40b782:	pop    eax
  40b783:	jno    0x40b7fc
  40b785:	outs   dx,DWORD PTR ds:[esi]
  40b786:	arpl   WORD PTR [esi+eax*2+0x69],bp
  40b78a:	outs   dx,BYTE PTR ds:[esi]
  40b78b:	or     al,0x6e
  40b78d:	imul   edi,DWORD PTR [esi+0x69],0x75
  40b791:	outs   dx,BYTE PTR ds:[esi]
  40b792:	xor    eax,0x6c642e39
  40b797:	push   0x7000400
  40b79c:	pop    ecx
  40b79d:	outs   dx,BYTE PTR ds:[esi]
  40b79e:	ins    BYTE PTR es:[edi],dx
  40b79f:	pop    edx
  40b7a0:	jle    0x40b810
  40b7a2:	je     0x40b816
  40b7a4:	push   edi
  40b7a5:	data16 fs jbe 0x40b818
  40b7a9:	dec    ebp
  40b7aa:	jae    0x40b7fc
  40b7ac:	add    eax,0x5a070a05
  40b7b1:	bound  esp,QWORD PTR [edi+0x52]
  40b7b4:	jae    0x40b819
  40b7b6:	jno    0x40b831
  40b7b8:	push   esp
  40b7b9:	outs   dx,DWORD PTR fs:[esi]
  40b7bb:	jge    0x40b822
  40b7bd:	inc    ebx
  40b7be:	js     0x40b808
  40b7c0:	or     eax,DWORD PTR [ecx]
  40b7c2:	add    BYTE PTR [edx],cl
  40b7c4:	pop    esp
  40b7c5:	imul   ebp,DWORD PTR [edi+0x45],0x4464687a
  40b7cc:	imul   esi,DWORD PTR [edi+0x49],0x73
  40b7d0:	push   eax
  40b7d1:	syscall 
  40b7d3:	add    al,0x5b
  40b7d5:	gs fs inc eax
  40b7d8:	js     0x40b843
  40b7da:	fs inc esp
  40b7dc:	ins    DWORD PTR es:[edi],dx
  40b7dd:	jne    0x40b81f
  40b7df:	jb     0x40b827
  40b7e1:	or     BYTE PTR ds:0x6f6a5e03,cl
  40b7e7:	inc    edx
  40b7e8:	push   0x4d6d7f6f
  40b7ed:	fs jnp 0x40b7fd
  40b7f0:	arpl   WORD PTR [edx+0x7d],sp
  40b7f3:	push   0x36316265
  40b7f8:	imul   bp,WORD PTR es:[ebp+0x7],0x606
  40b7ff:	or     bl,BYTE PTR [esi+0x6a]
  40b802:	jne    0x40b875
  40b804:	jp     0x40b86f
  40b806:	imul   ebx,DWORD PTR [ecx+0x7c],0x6797d60
  40b80d:	or     DWORD PTR [ebx],eax
  40b80f:	add    ebx,DWORD PTR [ecx+0x63]
  40b812:	jno    0x40b888
  40b814:	js     0x40b879
  40b816:	ins    BYTE PTR es:[edi],dx
  40b817:	inc    esp
  40b818:	jbe    0x40b881
  40b81a:	outs   dx,BYTE PTR ds:[esi]
  40b81b:	add    BYTE PTR [edi],cl
  40b81d:	add    eax,0x7677665c
  40b822:	jnp    0x40b88d
  40b824:	outs   dx,DWORD PTR ds:[esi]
  40b825:	inc    ecx
  40b826:	imul   bp,WORD PTR [ebx+ebp*2+0xb],0x503
  40b82d:	add    BYTE PTR [ebx+0x6e],bl
  40b830:	jl     0x40b89d
  40b832:	ins    BYTE PTR es:[edi],dx
  40b833:	bound  ebp,QWORD PTR [edx+0x70]
  40b836:	fs push ebx
  40b838:	jp     0x40b89f
  40b83a:	bound  ebp,QWORD PTR [ebp+0x7b]
  40b83d:	jne    0x40b84a
  40b83f:	add    BYTE PTR [esi+eax*1],al
  40b842:	pop    esi
  40b843:	ins    BYTE PTR es:[edi],dx
  40b844:	bound  esp,QWORD PTR [ebp+0x77]
  40b847:	add    DWORD PTR [eax+eax*1],eax
  40b84a:	push   ecx
  40b84b:	arpl   WORD PTR [eax+0x6a],di
  40b84e:	outs   dx,DWORD PTR ds:[esi]
  40b84f:	push   0x55
  40b851:	pusha  
  40b852:	jg     0x40b8b6
  40b854:	jge    0x40b8c7
  40b856:	ins    BYTE PTR es:[edi],dx
  40b857:	bound  eax,QWORD PTR [edx]
  40b859:	add    eax,0x63530900
  40b85e:	je     0x40b8ac
  40b860:	arpl   WORD PTR [edi+0x73],di
  40b863:	dec    ebp
  40b864:	js     0x40b8da
  40b866:	outs   dx,BYTE PTR ds:[esi]
  40b867:	ja     0x40b872
  40b869:	pop    es
  40b86a:	or     eax,0x766f520f
  40b86f:	je     0x40b8d6
  40b871:	outs   dx,DWORD PTR ds:[esi]
  40b872:	pop    ebp
  40b873:	ins    BYTE PTR es:[edi],dx
  40b874:	jnp    0x40b8e4
  40b876:	imul   ebp,DWORD PTR [esi+0xd],0x52030005
  40b87d:	push   0x6e
  40b87f:	popa   
  40b880:	pop    esi
  40b881:	jns    0x40b8ed
  40b883:	data16 arpl WORD PTR [esi+0x78],di
  40b887:	inc    edi
  40b888:	imul   ebp,DWORD PTR [ebp+0x63],0x808767d
  40b88f:	add    eax,0x6b68694b
  40b894:	push   edx
  40b895:	gs ja  0x40b907
  40b898:	jno    0x40b90c
  40b89a:	outs   dx,BYTE PTR fs:[esi]
  40b89c:	or     ecx,DWORD PTR [ebx]
  40b89e:	or     ecx,DWORD PTR [ebx]
  40b8a0:	inc    edi
  40b8a1:	imul   ebp,DWORD PTR [edx+0x65],0x65706d55
  40b8a8:	jge    0x40b923
  40b8aa:	fs pusha 
  40b8ac:	add    eax,0x4b08070a
  40b8b1:	outs   dx,DWORD PTR ds:[esi]
  40b8b2:	bound  esp,QWORD PTR [edx+0x4a]
  40b8b5:	push   0x62
  40b8b7:	jo     0x40b91d
  40b8b9:	jno    0x40b92c
  40b8bb:	inc    ecx
  40b8bc:	push   es
  40b8bd:	add    BYTE PTR [ecx],cl
  40b8bf:	or     eax,DWORD PTR [esi+0x65]
  40b8c2:	jle    0x40b922
  40b8c4:	jle    0x40b92d
  40b8c6:	imul   ecx,DWORD PTR [ebx+0x69],0x7d6b7d6e
  40b8cd:	jg     0x40b8da
  40b8cf:	pop    es
  40b8d0:	syscall 
  40b8d2:	inc    ebx
  40b8d3:	ins    BYTE PTR es:[edi],dx
  40b8d4:	je     0x40b924
  40b8d6:	pusha  
  40b8d7:	ins    BYTE PTR es:[edi],dx
  40b8d8:	jns    0x40b940
  40b8da:	push   0x4e
  40b8dc:	imul   ebp,DWORD PTR gs:[edi+0x49],0x5b666069
  40b8e4:	invd   
  40b8e6:	add    DWORD PTR [edi+eax*2],eax
  40b8e9:	imul   edi,DWORD PTR [edx+ecx*2+0x60],0x754d7971
  40b8f1:	jge    0x40b95c
  40b8f3:	jb     0x40b903
  40b8f5:	add    al,BYTE PTR [eax+ecx*1]
  40b8f8:	inc    ebp
  40b8f9:	pusha  
  40b8fa:	jne    0x40b940
  40b8fc:	jae    0x40b972
  40b8fe:	js     0x40b96d
  40b900:	ins    DWORD PTR es:[edi],dx
  40b901:	jae    0x40b958
  40b903:	jge    0x40b96c
  40b905:	ins    WORD PTR es:[edi],dx
  40b907:	jp     0x40b97f
  40b909:	sldt   WORD PTR [esi]
  40b90c:	dec    esi
  40b90d:	data16 ja 0x40b95c
  40b910:	outs   dx,BYTE PTR gs:[esi]
  40b912:	ins    DWORD PTR es:[edi],dx
  40b913:	ins    BYTE PTR es:[edi],dx
  40b914:	ins    BYTE PTR es:[edi],dx
  40b915:	fs dec esi
  40b917:	ins    DWORD PTR es:[edi],dx
  40b918:	ins    BYTE PTR es:[edi],dx
  40b919:	outs   dx,BYTE PTR ds:[esi]
  40b91a:	push   edi
  40b91b:	syscall 
  40b91d:	or     cl,BYTE PTR [ecx+0x6c]
  40b920:	ins    BYTE PTR es:[edi],dx
  40b921:	push   0x5a
  40b923:	data16 jae 0x40b98b
  40b926:	jo     0x40b999
  40b928:	imul   ebp,DWORD PTR [esi+0x54],0x5
  40b92c:	add    BYTE PTR [edi],cl
  40b92e:	dec    esi
  40b92f:	jbe    0x40b9a0
  40b931:	jno    0x40b98f
  40b933:	jns    0x40b9a0
  40b935:	bound  esp,QWORD PTR [esi+0x7b]
  40b938:	jns    0x40b93b
  40b93a:	or     BYTE PTR [eax],cl
  40b93c:	inc    edx
  40b93d:	outs   dx,BYTE PTR ds:[esi]
  40b93e:	ins    BYTE PTR es:[edi],dx
  40b93f:	popa   
  40b940:	jb     0x40b9aa
  40b942:	inc    esi
  40b943:	outs   dx,BYTE PTR ds:[esi]
  40b944:	ins    BYTE PTR es:[edi],dx
  40b945:	bound  edx,QWORD PTR [esi+0x4]
  40b948:	add    BYTE PTR [edx],al
  40b94a:	dec    ecx
  40b94b:	jo     0x40b9b7
  40b94d:	popa   
  40b94e:	js     0x40b9b2
  40b950:	push   ebp
  40b951:	jle    0x40b9b5
  40b953:	imul   esp,DWORD PTR [esi+0x7c],0x74
  40b957:	push   ebp
  40b958:	add    eax,0x45000900
  40b95d:	jb     0x40b9c4
  40b95f:	arpl   WORD PTR [eax+0x62],di
  40b962:	dec    esi
  40b963:	arpl   WORD PTR [edx+0x64],bp
  40b966:	push   edx
  40b967:	or     DWORD PTR [edi],eax
  40b969:	or     eax,0x76656c4c
  40b96e:	fs inc eax
  40b970:	imul   esp,DWORD PTR [edi+0x60],0x65
  40b974:	outs   dx,BYTE PTR ds:[esi]
  40b975:	or     BYTE PTR [ebx+0x69],ch
  40b978:	jae    0x40b9db
  40b97a:	jae    0x40b9e5
  40b97c:	cmp    al,0x3d
  40b97e:	sub    ebp,DWORD PTR [edx+0x67]
  40b981:	imul   eax,DWORD PTR ds:0x490b0d06,0x7b6d657e
  40b98b:	push   0x58
  40b98d:	jp     0x40b9f9
  40b98f:	arpl   WORD PTR fs:[eax+0x73],di
  40b993:	push   edi
  40b994:	imul   esi,DWORD PTR [eax+0x68],0x64606f48
  40b99b:	gs pop esp
  40b99d:	or     esp,DWORD PTR [ebp+0x6e]
  40b9a0:	jb     0x40ba0c
  40b9a2:	jno    0x40ba12
  40b9a4:	cmp    esi,DWORD PTR [ecx]
  40b9a6:	and    al,0x6c
  40b9a8:	imul   eax,DWORD PTR [di],0x5
  40b9ac:	or     al,BYTE PTR [edi]
  40b9ae:	inc    esi
  40b9af:	bound  esi,QWORD PTR [edi+ecx*2+0x69]
  40b9b3:	bound  ebp,QWORD PTR gs:[ebp+eax*2+0x77]
  40b9b8:	ins    BYTE PTR es:[edi],dx
  40b9b9:	jge    0x40ba2b
  40b9bb:	inc    edi
  40b9bc:	fs ins DWORD PTR es:[edi],dx
  40b9be:	inc    esi
  40b9bf:	fs ins DWORD PTR es:[edi],dx
  40b9c1:	push   0xa7b7e6b
  40b9c6:	or     cl,BYTE PTR ds:0x5b7a6a44
  40b9cc:	jg     0x40ba3c
  40b9ce:	jne    0x40ba1e
  40b9d0:	popa   
  40b9d1:	pusha  
  40b9d2:	or     DWORD PTR [eax],eax
  40b9d4:	ins    DWORD PTR es:[edi],dx
  40b9d5:	jnp    0x40ba43
  40b9d7:	pusha  
  40b9d8:	and    WORD PTR [eax+eiz*2+0x69],bp
  40b9dd:	or     al,BYTE PTR [edi]
  40b9df:	or     BYTE PTR [edi+0x74],dl
  40b9e2:	pop    ebp
  40b9e3:	jp     0x40ba52
  40b9e5:	jae    0x40ba64
  40b9e7:	dec    ecx
  40b9e8:	bound  ebp,QWORD PTR [esi+0x69]
  40b9eb:	jae    0x40ba5c
  40b9ed:	ins    BYTE PTR es:[edi],dx
  40b9ee:	jl     0x40ba5e
  40b9f0:	pusha  
  40b9f1:	push   0x676d7c50
  40b9f6:	ins    DWORD PTR es:[edi],dx
  40b9f7:	jno    0x40ba6f
  40b9f9:	add    DWORD PTR [edi],eax
  40b9fb:	push   es
  40b9fc:	pop    esp
  40b9fd:	jge    0x40ba4a
  40b9ff:	jno    0x40ba63
  40ba01:	fs jnp 0x40ba71
  40ba04:	push   esi
  40ba05:	ins    DWORD PTR es:[edi],dx
  40ba06:	push   0x71
  40ba08:	outs   dx,WORD PTR ds:[esi]
  40ba0a:	push   0x55030309
  40ba0f:	jge    0x40ba5f
  40ba11:	popa   
  40ba12:	jge    0x40ba68
  40ba14:	imul   esp,DWORD PTR [edi+0x73],0x6a536d4d
  40ba1b:	data16 jle 0x40ba84
  40ba1e:	push   0x6c
  40ba20:	push   cs
  40ba21:	or     BYTE PTR [ebx],al
  40ba23:	add    BYTE PTR [eax+0x72],dl
  40ba26:	push   esi
  40ba27:	data16 bound si,DWORD PTR [ebp+0x56]
  40ba2c:	data16 outs dx,BYTE PTR ds:[esi]
  40ba2e:	jns    0x40ba79
  40ba30:	arpl   WORD PTR [edi+0x6e],bx
  40ba33:	addr16 jne 0x40baa0
  40ba36:	add    DWORD PTR fs:[bx+si],ecx
  40ba3a:	data16 jb 0x40baac
  40ba3d:	ins    BYTE PTR es:[edi],dx
  40ba3e:	push   0x6b6c6928
  40ba43:	add    BYTE PTR [edi],al
  40ba45:	add    DWORD PTR [esi+0x77],ebx
  40ba48:	push   ebx
  40ba49:	jg     0x40bab2
  40ba4b:	jge    0x40bac6
  40ba4d:	pop    edi
  40ba4e:	jle    0x40bac6
  40ba50:	js     0x40baba
  40ba52:	gs dec edx
  40ba54:	popa   
  40ba55:	popa   
  40ba56:	ins    DWORD PTR es:[edi],dx
  40ba57:	ja     0x40bac6
  40ba59:	push   0x6e6f6f74
  40ba5e:	add    cl,BYTE PTR [esp+ebp*2]
  40ba61:	ins    DWORD PTR es:[edi],dx
  40ba62:	js     0x40bacc
  40ba64:	imul   edi,DWORD PTR fs:[edx],0x6c6b2335
  40ba6b:	add    ax,0x801
  40ba6f:	or     cl,BYTE PTR [esi+0x61]
  40ba72:	jge    0x40bad1
  40ba74:	ins    DWORD PTR es:[edi],dx
  40ba75:	js     0x40baf5
  40ba77:	ins    BYTE PTR es:[edi],dx
  40ba78:	outs   dx,DWORD PTR ds:[esi]
  40ba79:	ins    DWORD PTR es:[edi],dx
  40ba7a:	inc    ebp
  40ba7b:	ja     0x40bacb
  40ba7d:	add    eax,0x6960637d
  40ba82:	push   0x3e
  40ba84:	cmp    DWORD PTR [eax+ebp*2],esp
  40ba87:	ins    BYTE PTR es:[edi],dx
  40ba88:	pusha  
  40ba89:	(bad)  
  40ba8a:	invd   
  40ba8c:	dec    esi
  40ba8d:	ins    BYTE PTR es:[edi],dx
  40ba8e:	imul   esp,DWORD PTR [edx+0x4e],0x71636578
  40ba95:	je     0x40bafc
  40ba97:	bound  ebp,QWORD PTR [ebx+0x6e]
  40ba9a:	pop    esp
  40ba9b:	or     esp,DWORD PTR [edi+eiz*2+0x6e]
  40ba9f:	xor    eax,0x64632f39
  40baa4:	outs   dx,DWORD PTR ds:[esi]
  40baa5:	or     cl,BYTE PTR [eax]
  40baa7:	or     eax,DWORD PTR [edx+ebp*2+0x51]
  40baab:	imul   esi,DWORD PTR [ebx+eiz*2+0x4a],0x65
  40bab0:	outs   dx,BYTE PTR ds:[esi]
  40bab1:	inc    eax
  40bab2:	je     0x40bb1a
  40bab4:	add    al,BYTE PTR gs:0x6000803
  40babb:	add    BYTE PTR [ecx],cl
  40babd:	or     eax,DWORD PTR [ecx]
  40babf:	add    BYTE PTR [edx],cl
  40bac1:	push   cs
  40bac2:	or     al,0x8
  40bac4:	or     cl,BYTE PTR [edx]
  40bac6:	or     eax,0xe0e0f0a
  40bacb:	or     al,0xb
  40bacd:	pop    es
  40bace:	syscall 
  40bad0:	add    al,0x9
  40bad2:	add    BYTE PTR [ebx],al
  40bad4:	invd   
  40bad6:	or     al,0xa
  40bad8:	invd   
  40bada:	or     al,0x5
  40badc:	or     al,BYTE PTR [edi]
  40bade:	or     BYTE PTR ds:0x80f0c03,cl
  40bae4:	add    DWORD PTR [eax+eax*1],eax
  40bae7:	or     al,0x8
  40bae9:	push   es
  40baea:	add    DWORD PTR [edx],eax
  40baec:	or     eax,0x60f0708
  40baf1:	add    BYTE PTR [esi],cl
  40baf3:	add    al,BYTE PTR [eax+ecx*1]
  40baf6:	add    al,BYTE PTR ds:0x6060701
  40bafc:	or     cl,BYTE PTR [eax]
  40bafe:	add    eax,DWORD PTR [edi]
  40bb00:	add    eax,0x805080f
  40bb05:	or     DWORD PTR ds:0x906000f,eax
  40bb0b:	add    eax,DWORD PTR [ebx]
  40bb0d:	(bad)  
  40bb0f:	add    eax,DWORD PTR [eax]
  40bb11:	or     eax,0x4020002
  40bb16:	add    cl,BYTE PTR [ebx]
  40bb18:	add    BYTE PTR [edi],cl
  40bb1a:	add    eax,0x2050f0a
  40bb1f:	push   cs
  40bb20:	or     BYTE PTR [ebx],al
  40bb22:	add    BYTE PTR [edx],cl
  40bb24:	add    eax,0x30b0803
  40bb29:	add    eax,0xe0b0f00
  40bb2e:	push   es
  40bb2f:	add    eax,0x1040b0c
  40bb34:	add    ecx,DWORD PTR [eax]
  40bb36:	or     al,BYTE PTR [ecx]
  40bb38:	or     BYTE PTR [eax],cl
  40bb3a:	push   es
  40bb3b:	or     eax,DWORD PTR [eax]
  40bb3d:	add    al,0x6
  40bb3f:	or     eax,0x7000700
  40bb44:	add    DWORD PTR [eax+eax*1],eax
  40bb47:	add    cl,BYTE PTR [edx]
  40bb49:	add    cl,BYTE PTR [edi]
  40bb4b:	add    BYTE PTR [edi+eax*1],cl
  40bb4e:	add    eax,0x3080d0c
  40bb53:	sysret 
  40bb55:	add    al,BYTE PTR ds:0x6000900
  40bb5b:	add    BYTE PTR [eax],al
  40bb5d:	add    cl,BYTE PTR [edi+eax*1]
  40bb60:	or     BYTE PTR [edx],cl
  40bb62:	push   es
  40bb63:	add    DWORD PTR ds:0xf0d0709,eax
  40bb69:	add    BYTE PTR [edx],cl
  40bb6b:	add    eax,0x90a0801
  40bb70:	add    al,0x9
  40bb72:	or     ecx,DWORD PTR [eax]
  40bb74:	or     cl,BYTE PTR ds:0x30005
  40bb7a:	(bad)  
  40bb7b:	syscall 
  40bb7d:	push   cs
  40bb7e:	or     eax,DWORD PTR ds:0xb0d0605
  40bb84:	or     cl,BYTE PTR [eax+eax*1]
  40bb87:	or     al,0xf
  40bb89:	invd   
  40bb8b:	or     BYTE PTR ds:0xb0607,al
  40bb91:	add    BYTE PTR [eax],al
  40bb93:	add    al,0x0
  40bb95:	add    al,0x0
  40bb97:	pop    es
  40bb98:	or     ecx,DWORD PTR [ebx]
  40bb9a:	or     ecx,DWORD PTR [ebx]
  40bb9c:	or     ecx,DWORD PTR [ebx]
  40bb9e:	push   es
  40bb9f:	or     eax,DWORD PTR [ecx]
  40bba1:	pop    es
  40bba2:	or     BYTE PTR [ebx],al
  40bba4:	or     cl,BYTE PTR [eax]
  40bba6:	or     eax,DWORD PTR [edi]
  40bba8:	add    eax,0x8070a05
  40bbad:	pop    es
  40bbae:	add    BYTE PTR [ebx],al
  40bbb0:	push   es
  40bbb1:	push   es
  40bbb2:	add    eax,DWORD PTR [eax]
  40bbb4:	add    al,BYTE PTR ds:0x6000803
  40bbba:	add    BYTE PTR [ecx],cl
  40bbbc:	or     eax,DWORD PTR [ecx]
  40bbbe:	add    BYTE PTR [edx],cl
  40bbc0:	push   cs
  40bbc1:	or     al,0x8
  40bbc3:	or     cl,BYTE PTR [edx]
  40bbc5:	or     eax,0xe0e0f0a
  40bbca:	or     al,0xb
  40bbcc:	pop    es
  40bbcd:	syscall 
  40bbcf:	add    al,0x9
  40bbd1:	add    BYTE PTR [ebx],al
  40bbd3:	invd   
  40bbd5:	or     al,0xa
  40bbd7:	invd   
  40bbd9:	or     al,0x5
  40bbdb:	or     al,BYTE PTR [edi]
  40bbdd:	or     BYTE PTR ds:0x80f0c03,cl
  40bbe3:	add    DWORD PTR [eax+eax*1],eax
  40bbe6:	or     al,0x8
  40bbe8:	push   es
  40bbe9:	add    DWORD PTR [edx],eax
  40bbeb:	or     eax,0x60f0708
  40bbf0:	add    BYTE PTR [esi],cl
  40bbf2:	add    al,BYTE PTR [eax+ecx*1]
  40bbf5:	add    al,BYTE PTR ds:0x6060701
  40bbfb:	or     cl,BYTE PTR [eax]
  40bbfd:	add    eax,DWORD PTR [edi]
  40bbff:	add    eax,0x805080f
  40bc04:	or     DWORD PTR ds:0x906000f,eax
  40bc0a:	add    eax,DWORD PTR [ebx]
  40bc0c:	(bad)  
  40bc0e:	add    eax,DWORD PTR [eax]
  40bc10:	or     eax,0x4020002
  40bc15:	add    cl,BYTE PTR [ebx]
  40bc17:	add    BYTE PTR [edi],cl
  40bc19:	add    eax,0x2050f0a
  40bc1e:	push   cs
  40bc1f:	or     BYTE PTR [ebx],al
  40bc21:	add    BYTE PTR [edx],cl
  40bc23:	add    eax,0x30b0803
  40bc28:	add    eax,0xe0b0f00
  40bc2d:	push   es
  40bc2e:	add    eax,0x1040b0c
  40bc33:	add    ecx,DWORD PTR [eax]
  40bc35:	or     al,BYTE PTR [ecx]
  40bc37:	or     BYTE PTR [eax],cl
  40bc39:	push   es
  40bc3a:	or     eax,DWORD PTR [eax]
  40bc3c:	add    al,0x6
  40bc3e:	or     eax,0x7000700
  40bc43:	add    DWORD PTR [eax+eax*1],eax
  40bc46:	add    cl,BYTE PTR [edx]
  40bc48:	add    cl,BYTE PTR [edi]
  40bc4a:	add    BYTE PTR [edi+eax*1],cl
  40bc4d:	add    eax,0x3080d0c
  40bc52:	sysret 
  40bc54:	add    al,BYTE PTR ds:0x6000900
  40bc5a:	add    BYTE PTR [eax],al
  40bc5c:	add    cl,BYTE PTR [edi+eax*1]
  40bc5f:	or     BYTE PTR [edx],cl
  40bc61:	push   es
  40bc62:	add    DWORD PTR ds:0xf0d0709,eax
  40bc68:	add    BYTE PTR [edx],cl
  40bc6a:	add    eax,0x90a0801
  40bc6f:	add    al,0x9
  40bc71:	or     ecx,DWORD PTR [eax]
  40bc73:	or     cl,BYTE PTR ds:0x30005
  40bc79:	(bad)  
  40bc7a:	syscall 
  40bc7c:	push   cs
  40bc7d:	or     eax,DWORD PTR ds:0xb0d0605
  40bc83:	or     cl,BYTE PTR [eax+eax*1]
  40bc86:	or     al,0xf
  40bc88:	invd   
  40bc8a:	or     BYTE PTR ds:0xb0607,al
  40bc90:	add    BYTE PTR [eax],al
  40bc92:	add    al,0x0
  40bc94:	add    al,0x0
  40bc96:	pop    es
  40bc97:	or     ecx,DWORD PTR [ebx]
  40bc99:	or     ecx,DWORD PTR [ebx]
  40bc9b:	or     ecx,DWORD PTR [edi]
  40bc9d:	push   es
  40bc9e:	or     eax,DWORD PTR [ecx]
  40bca0:	pop    es
  40bca1:	or     BYTE PTR [edx],al
  40bca3:	or     al,BYTE PTR [edx]
  40bca5:	or     eax,DWORD PTR [edi]
  40bca7:	add    eax,0x88070a1d
  40bcac:	pop    es
  40bcad:	add    BYTE PTR [ebx],al
  40bcaf:	push   es
  40bcb0:	push   es
  40bcb1:	add    eax,DWORD PTR [eax]
  40bcb3:	add    al,BYTE PTR [ecx]
  40bcb5:	add    ecx,DWORD PTR [eax]
  40bcb7:	add    BYTE PTR [edi],al
  40bcb9:	add    BYTE PTR [ecx],cl
  40bcbb:	or     ebx,DWORD PTR [ecx+0x0]
  40bcbe:	or     cl,BYTE PTR [esi-0x75f5f7c4]
  40bcc4:	or     eax,0xe0e0f0a
  40bcc9:	or     al,0xb
  40bccb:	pop    es
  40bccc:	or     eax,DWORD PTR ds:0x3000904
  40bcd2:	push   cs
  40bcd3:	or     BYTE PTR [edx+ecx*1],cl
  40bcd6:	invd   
  40bcd8:	inc    esp
  40bcd9:	add    eax,0x9d6c070a
  40bcde:	add    ecx,DWORD PTR [ebp*1-0x1bfbffea]
  40bce5:	or     BYTE PTR [eax],cl
  40bce7:	push   es
  40bce8:	add    DWORD PTR [edx],eax
  40bcea:	or     eax,0x420f0308
  40bcef:	add    BYTE PTR [edi+0x2],cl
  40bcf2:	push   eax
  40bcf3:	or     BYTE PTR [ebx+0x5],al
  40bcf6:	add    DWORD PTR [edi],eax
  40bcf8:	inc    ebx
  40bcf9:	aas    
  40bcfa:	pop    ebx
  40bcfb:	pop    edi
  40bcfc:	cmp    cl,BYTE PTR [ebx+ebp*2]
  40bcff:	push   cs
  40bd00:	or     DWORD PTR [ebx],ecx
  40bd02:	or     al,0x6
  40bd04:	stc    
  40bd05:	adc    BYTE PTR [eax],bl
  40bd07:	mov    ebp,0x47054aec
  40bd0c:	jmp    0xbe44a126
  40bd11:	add    al,0x1f
  40bd13:	or     bh,BYTE PTR [esi+0x1905011d]
  40bd19:	mov    bh,0x3
  40bd1b:	shl    DWORD PTR [esi],0x7d
  40bd1e:	mov    ch,0x62
  40bd20:	dec    ebx
  40bd21:	add    ebx,DWORD PTR [edi+0x69625017]
  40bd27:	jg     0x40bd37
  40bd29:	sub    al,0x79
  40bd2b:	jle    0x40bd9c
  40bd2d:	ins    BYTE PTR es:[edi],dx
  40bd2e:	cmp    eax,0x2ec66164
  40bd33:	jbe    0x40bcff
  40bd35:	jo     0x40bd11
  40bd37:	data16 fs (bad) 
  40bd3a:	std    
  40bd3b:	or     BYTE PTR [ebp-0x6b],ch
  40bd3e:	add    eax,0xdac4e569
  40bd43:	push   edi
  40bd44:	outs   dx,DWORD PTR ds:[esi]
  40bd45:	aam    0x3b
  40bd47:	cmp    eax,0x21061a0c
  40bd4c:	aas    
  40bd4d:	sub    BYTE PTR [edi],cl
  40bd4f:	push   ebx
  40bd50:	fs push eax
  40bd52:	inc    esi
  40bd53:	clts   
  40bd55:	inc    esp
  40bd56:	add    al,0x1
  40bd58:	or     BYTE PTR [edi],dl
  40bd5a:	pop    ecx
  40bd5b:	inc    ecx
  40bd5c:	and    al,0x5e
  40bd5e:	push   ss
  40bd5f:	in     eax,0xec
  40bd61:	xchg   DWORD PTR [ecx],eax
  40bd63:	mov    WORD PTR [esi],cs
  40bd65:	or     eax,0xec0c1f04
  40bd6a:	inc    ebp
  40bd6b:	jmp    0x40bdbe
  40bd6d:	adc    eax,0x2deb6d4e
  40bd72:	adc    DWORD PTR [edi],ebx
  40bd74:	adc    al,BYTE PTR [esi+esi*1]
  40bd77:	adc    ebx,DWORD PTR ds:0x25e0a8e
  40bd7d:	ss sub al,0x0
  40bd80:	cmp    al,BYTE PTR ds:0xef0e097c
  40bd86:	pop    esi
  40bd87:	packuswb mm2,QWORD PTR [ebx+0x4c]
  40bd8b:	xor    DWORD PTR ds:0x36094859,ecx
  40bd91:	and    BYTE PTR [edi+0x2d],0x45
  40bd95:	push   edx
  40bd96:	sbb    DWORD PTR ds:0xc82c6e1b,ebp
  40bd9c:	or     ah,BYTE PTR [ebx+0x3084437b]
  40bda2:	std    
  40bda3:	push   ss
  40bda4:	div    BYTE PTR [ebp-0x33]
  40bda7:	inc    edx
  40bda8:	inc    edx
  40bda9:	inc    edx
  40bdaa:	inc    edx
  40bdab:	test   eax,0xafe1f009
  40bdb0:	aad    0x89
  40bdb2:	out    dx,eax
  40bdb3:	pop    ebx
  40bdb4:	or     al,0x28
  40bdb6:	and    BYTE PTR [edi+edx*4],0x88
  40bdba:	dec    ebp
  40bdbb:	dec    ebp
  40bdbc:	push   esi
  40bdbd:	sub    al,BYTE PTR [esp+eax*2+0x4]
  40bdc1:	mov    esi,0x68609d1
  40bdc6:	in     eax,dx
  40bdc7:	or     DWORD PTR [edx-0x30fdf303],ebp
  40bdcd:	dec    ebp
  40bdce:	pop    esp
  40bdcf:	xor    cl,BYTE PTR [ecx]
  40bdd1:	adc    eax,DWORD PTR [ebx]
  40bdd3:	push   es
  40bdd4:	in     al,dx
  40bdd5:	lea    ecx,ds:0xbe02facf
  40bddb:	jg     0x40bdde
  40bddd:	into   
  40bdde:	sub    esp,DWORD PTR [ecx+0x65]
  40bde1:	arpl   WORD PTR [edi-0x6a],si
  40bde4:	add    esi,eax
  40bde6:	int    0xfa
  40bde8:	mov    al,0x2e
  40bdea:	adc    esp,DWORD PTR [ebx]
  40bdec:	push   ecx
  40bded:	inc    edx
  40bdee:	push   cs
  40bdef:	jnp    0x40bdf3
  40bdf1:	outs   dx,BYTE PTR ds:[esi]
  40bdf2:	bound  esp,QWORD PTR gs:[si]
  40bdf6:	cli    
  40bdf7:	mov    ds:0x8b11e103,al
  40bdfc:	add    dh,ch
  40bdfe:	mov    al,0x25
  40be00:	dec    esp
  40be01:	push   ebx
  40be02:	jb     0x40bde7
  40be04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be05:	inc    edi
  40be06:	cmp    DWORD PTR ds:0x5bcb8846,esp
  40be0c:	and    ebp,DWORD PTR ds:0x731431ad
  40be12:	stos   BYTE PTR es:[edi],al
  40be13:	and    al,0x5a
  40be15:	cmp    eax,0xb79b223
  40be1a:	mov    al,ds:0xf31d5003
  40be1f:	or     eax,0x70540902
  40be24:	js     0x40be2d
  40be26:	xchg   ebp,eax
  40be27:	outs   dx,BYTE PTR ds:[esi]
  40be28:	mov    al,0x10
  40be2a:	pop    es
  40be2b:	sti    
  40be2c:	push   0xffffffad
  40be2e:	xor    al,0xa5
  40be30:	or     DWORD PTR [ecx],ebx
  40be32:	and    eax,DWORD PTR [ebp+0x57330e08]
  40be38:	popa   
  40be39:	sbb    bh,BYTE PTR [eax]
  40be3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be3c:	js     0x40bdcc
  40be3e:	pop    es
  40be3f:	xor    dl,BYTE PTR [ebx]
  40be41:	or     ecx,DWORD PTR [edx]
  40be43:	dec    ecx
  40be44:	push   0x8e12966d
  40be49:	scas   eax,DWORD PTR es:[edi]
  40be4a:	and    eax,0x10867854
  40be4f:	lea    edx,[ebx+0x1a]
  40be52:	aad    0x22
  40be54:	adc    ch,ah
  40be56:	xchg   esi,eax
  40be57:	add    dl,ch
  40be59:	and    eax,0xaada4aeb
  40be5e:	inc    ebp
  40be5f:	es mov ch,0x8e
  40be62:	or     DWORD PTR [esi],ebp
  40be64:	mov    WORD PTR [ecx],es
  40be66:	push   edx
  40be67:	or     DWORD PTR [ebp+0x6d],eax
  40be6a:	pusha  
  40be6b:	bound  di,DWORD PTR [ecx-0x33]
  40be6f:	or     DWORD PTR ds:0xfe042b4c,0xab4e24e9
  40be79:	addr16 pop es
  40be7b:	adc    eax,DWORD PTR [ebp-0x4b]
  40be7e:	push   ebp
  40be7f:	and    ebx,eax
  40be81:	push   cs
  40be82:	ins    DWORD PTR es:[edi],dx
  40be83:	xchg   edx,eax
  40be84:	lods   eax,DWORD PTR ds:[esi]
  40be85:	nop
  40be86:	add    BYTE PTR [edi-0x5b],al
  40be89:	sub    bh,BYTE PTR ds:0x450fc38f
  40be8f:	inc    esp
  40be90:	mov    cl,0x27
  40be92:	cmp    al,0x1
  40be94:	add    DWORD PTR [esi+0x2e1f26cd],0x78aabb14
  40be9e:	or     ch,BYTE PTR [esi]
  40bea0:	adc    edx,ebx
  40bea2:	ss scas eax,DWORD PTR es:[edi]
  40bea4:	dec    eax
  40bea5:	test   eax,0x1a5d9589
  40beaa:	lods   eax,DWORD PTR ds:[esi]
  40beab:	and    bl,al
  40bead:	mov    al,0xc9
  40beaf:	jge    0x40becd
  40beb1:	push   edi
  40beb2:	pop    esp
  40beb3:	inc    ecx
  40beb4:	stc    
  40beb5:	push   0xffffffc1
  40beb7:	addr16 xor eax,0x66a96f68
  40bebd:	test   al,0x38
  40bebf:	enter  0x26f8,0xa7
  40bec3:	xor    al,0x2b
  40bec5:	inc    ebp
  40bec6:	pop    eax
  40bec7:	add    DWORD PTR [edx+0x2c97438c],edx
  40becd:	fwait
  40bece:	xchg   esi,eax
  40becf:	xchg   ebp,eax
  40bed0:	iret   
  40bed1:	xchg   dl,ch
  40bed3:	test   DWORD PTR [edi-0x75],esi
  40bed6:	xor    al,0x82
  40bed8:	pop    ds
  40bed9:	jle    0x40be61
  40bedb:	inc    ebp
  40bedc:	jbe    0x40bf04
  40bede:	jl     0x40be70
  40bee0:	jb     0x40bead
  40bee2:	mov    ch,0xed
  40bee4:	push   0xb7316e77
  40bee9:	sbb    DWORD PTR [edi-0x72],ebp
  40beec:	inc    ebp
  40beed:	data16 sub dl,BYTE PTR [esi-0x66]
  40bef1:	push   ecx
  40bef2:	rcl    BYTE PTR [ebp-0x20],0x56
  40bef6:	jl     0x40bf43
  40bef8:	cmp    BYTE PTR [edi+0x1e],al
  40befb:	dec    edx
  40befc:	or     BYTE PTR [ebx+0x4d],0x2f
  40bf00:	aas    
  40bf01:	nop
  40bf02:	les    esp,FWORD PTR ds:[ecx+eiz*8+0x3e347039]
  40bf0a:	and    eax,0x4a872d13
  40bf0f:	sar    DWORD PTR [eax-0x7e],0x43
  40bf13:	mov    cl,0x22
  40bf15:	das    
  40bf16:	xchg   edi,eax
  40bf17:	and    eax,edx
  40bf19:	cld    
  40bf1a:	jecxz  0x40bf08
  40bf1c:	jg     0x40bf0b
  40bf1e:	ds in  eax,dx
  40bf20:	adc    esp,edi
  40bf22:	mov    cl,BYTE PTR [ebp-0x24]
  40bf25:	das    
  40bf26:	rcr    DWORD PTR [ebp-0x102f3b23],1
  40bf2c:	ret    0x1077
  40bf2f:	cmp    BYTE PTR [ecx],dl
  40bf31:	divps  xmm0,XMMWORD PTR [eax]
  40bf34:	mov    al,al
  40bf36:	mov    ebp,0xda9708bb
  40bf3b:	pop    eax
  40bf3c:	jmp    0x40bf62
  40bf3e:	data16 cld 
  40bf40:	or     esi,esi
  40bf42:	mov    BYTE PTR [esi+0x24],0xe
  40bf46:	jne    0x40bf51
  40bf48:	or     DWORD PTR [edx],ecx
  40bf4a:	mov    edi,0x8c340d5d
  40bf4f:	ret    
  40bf50:	jl     0x40bf8b
  40bf52:	jnp    0x40bfa7
  40bf54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf55:	sub    ebx,DWORD PTR ds:0xa8133342
  40bf5b:	push   cs
  40bf5c:	inc    ebp
  40bf5d:	or     DWORD PTR [edi],ebp
  40bf5f:	add    DWORD PTR [edi-0x71d026f7],edx
  40bf65:	cli    
  40bf66:	sub    dh,cl
  40bf68:	idiv   DWORD PTR [edx]
  40bf6a:	push   eax
  40bf6b:	push   edi
  40bf6c:	mov    bl,0x30
  40bf6e:	push   esi
  40bf6f:	sbb    BYTE PTR [edx],bl
  40bf71:	mov    WORD PTR [esi],?
  40bf73:	(bad)  
  40bf74:	jne    0x40bfad
  40bf76:	sbb    al,0x62
  40bf78:	inc    ebp
  40bf79:	or     ebx,ebx
  40bf7b:	push   0xcfaf3337
  40bf80:	xlat   BYTE PTR ds:[ebx]
  40bf81:	or     bl,0x85
  40bf84:	ret    0xe7c
  40bf87:	add    eax,0xc95bc53f
  40bf8c:	test   eax,0x8d405265
  40bf91:	or     al,0x9b
  40bf93:	jge    0x8f1cf89e
  40bf99:	retf   0x106
  40bf9c:	ret    0x4a8e
  40bf9f:	rol    DWORD PTR ds:0x158910ca,0xe5
  40bfa6:	or     eax,DWORD PTR ds:0x60fb8a45
  40bfac:	jno    0x40bf9b
  40bfae:	jmp    0x531a:0xc41dcc82
  40bfb5:	xchg   esp,eax
  40bfb6:	in     al,dx
  40bfb7:	sbb    DWORD PTR [ebp+0x4c],0x7c5ef606
  40bfbe:	jle    0x40bfb5
  40bfc0:	sbb    bl,bh
  40bfc2:	in     al,0x94
  40bfc4:	nop
  40bfc5:	(bad)  
  40bfc6:	call   DWORD PTR [esi+0x12198f4b]
  40bfcc:	xchg   BYTE PTR [edi+0xd],dl
  40bfcf:	dec    ebx
  40bfd0:	pop    esp
  40bfd1:	or     al,BYTE PTR [ecx]
  40bfd3:	or     ecx,edi
  40bfd5:	push   ds
  40bfd6:	cmc    
  40bfd7:	call   0xe80:0x4c165060
  40bfde:	add    dh,BYTE PTR [edx+0x54150d02]
  40bfe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfe5:	push   cs
  40bfe6:	test   BYTE PTR ds:0xcca5af9,0x13
  40bfed:	cwde   
  40bfee:	inc    esi
  40bfef:	xor    eax,0xc706a9aa
  40bff4:	xchg   DWORD PTR [esi-0x76a1abb0],ebx
  40bffa:	push   ebx
  40bffc:	out    dx,eax
  40bffd:	sub    DWORD PTR [edi-0x74a44415],esp
  40c003:	mov    ecx,0x33688701
  40c008:	pop    edx
  40c009:	push   esp
  40c00a:	lahf   
  40c00b:	lock xor dh,al
  40c00e:	inc    esi
  40c00f:	sub    BYTE PTR [esp+edx*8-0x31f8adf2],0x15
  40c017:	jg     0x40c031
  40c019:	xchg   edi,eax
  40c01a:	adc    esp,DWORD PTR [ebp*8+0x213bb0b0]
  40c021:	sbb    al,0x9c
  40c023:	or     al,BYTE PTR [eax]
  40c025:	or     BYTE PTR [edi],dl
  40c027:	dec    edi
  40c028:	or     bl,ch
  40c02a:	pop    ebx
  40c02b:	popf   
  40c02c:	push   es
  40c02d:	or     cl,BYTE PTR [edi+0x32]
  40c030:	sar    DWORD PTR [eax+0x9],0x32
  40c034:	inc    edi
  40c035:	fwait
  40c036:	inc    ecx
  40c037:	sbb    dh,bl
  40c039:	fdiv   QWORD PTR [edi]
  40c03b:	sbb    al,0xe6
  40c03d:	ja     0x40c000
  40c03f:	push   ss
  40c040:	(bad)  
  40c041:	add    cl,0xe0
  40c044:	pop    edx
  40c045:	sub    dl,BYTE PTR [esi-0x78]
  40c048:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c049:	or     al,0x82
  40c04b:	add    al,0x6e
  40c04d:	pop    ebp
  40c04e:	pop    ebp
  40c04f:	pop    esp
  40c050:	mov    BYTE PTR [edx-0x578c5ad4],ah
  40c056:	push   ecx
  40c057:	inc    DWORD PTR [ecx+esi*4+0x21]
  40c05b:	stc    
  40c05c:	inc    ebx
  40c05d:	ds test al,0x9
  40c060:	ss cmc 
  40c062:	jle    0x40c0ce
  40c064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c065:	(bad)  
  40c066:	or     DWORD PTR [ebp+0x30],eax
  40c069:	jno    0x40c054
  40c06b:	mov    ebp,0x7fc1da6a
  40c070:	push   ecx
  40c071:	(bad)  
  40c072:	and    dh,BYTE PTR [ebp+0x16]
  40c075:	fbstp  TBYTE PTR [esi+0x33fc0c1a]
  40c07b:	or     ebp,DWORD PTR ds:0xc4778cad
  40c081:	xor    BYTE PTR [ebp+0x4f],0x98
  40c085:	leave  
  40c086:	xor    eax,0x7892ee24
  40c08b:	add    cl,BYTE PTR [eax]
  40c08d:	jo     0x40c096
  40c08f:	pop    es
  40c090:	ret    
  40c091:	out    0xfa,eax
  40c093:	xchg   esi,eax
  40c094:	cmp    eax,0xf686c1e0
  40c099:	sub    al,0x71
  40c09b:	mov    ebx,0x2bb328e8
  40c0a0:	pop    DWORD PTR [edi-0xbd5d638]
  40c0a6:	in     al,dx
  40c0a7:	jnp    0x40c08b
  40c0a9:	lahf   
  40c0aa:	xchg   edx,eax
  40c0ab:	push   ss
  40c0ac:	push   ds
  40c0ad:	frstor [ebp-0x46]
  40c0b0:	jecxz  0x40c08e
  40c0b2:	shl    BYTE PTR [ecx+0x50],cl
  40c0b5:	dec    DWORD PTR [edx+0x230ee7a8]
  40c0bb:	or     ebx,ebx
  40c0bd:	pop    es
  40c0be:	scas   eax,DWORD PTR es:[edi]
  40c0bf:	sbb    BYTE PTR [edi+esi*8],bh
  40c0c2:	lds    eax,FWORD PTR [edx-0x6f5dafec]
  40c0c8:	push   eax
  40c0c9:	lahf   
  40c0ca:	lahf   
  40c0cb:	test   BYTE PTR [ebp-0x21],dh
  40c0ce:	adc    eax,0xd5f38ffa
  40c0d3:	adc    eax,0xa1bd0570
  40c0d8:	(bad)  
  40c0da:	pop    edx
  40c0db:	dec    edx
  40c0dc:	into   
  40c0dd:	pop    esp
  40c0de:	out    dx,al
  40c0df:	xchg   ebx,eax
  40c0e0:	out    0x69,eax
  40c0e2:	adc    al,0x8c
  40c0e4:	jne    0x40c0f2
  40c0e6:	ins    DWORD PTR es:[edi],dx
  40c0e7:	and    BYTE PTR [edx],cl
  40c0e9:	push   0x9b5feba6
  40c0ee:	retf   
  40c0ef:	icebp  
  40c0f0:	cmc    
  40c0f1:	push   ss
  40c0f2:	push   ebp
  40c0f3:	(bad)  
  40c0f4:	xor    eax,0x217bdd82
  40c0f9:	(bad)  
  40c0fa:	fild   QWORD PTR [eax]
  40c0fc:	mov    ch,0x54
  40c0fe:	dec    ebx
  40c0ff:	mov    ebp,esi
  40c101:	pusha  
  40c102:	ins    BYTE PTR es:[edi],dx
  40c103:	inc    ebx
  40c104:	push   ds
  40c105:	dec    eax
  40c106:	dec    esp
  40c107:	xchg   ebp,ebp
  40c109:	(bad)  
  40c10a:	mov    cs,WORD PTR [edx]
  40c10c:	pop    ebp
  40c10d:	in     eax,dx
  40c10e:	fcmovu st,st(5)
  40c110:	dec    ebx
  40c111:	cmc    
  40c112:	jnp    0x40c0bb
  40c114:	bound  edx,QWORD PTR [ecx]
  40c116:	pop    edi
  40c117:	xchg   esi,ebx
  40c119:	inc    ecx
  40c11a:	mov    ecx,0xb4ac0ed
  40c11f:	inc    esp
  40c120:	gs pusha 
  40c122:	mov    ch,0x51
  40c124:	pop    ecx
  40c125:	fs add eax,0xabe35519
  40c12b:	push   esi
  40c12c:	leave  
  40c12d:	je     0x40c145
  40c12f:	jp     0x40c1a5
  40c131:	into   
  40c132:	cmp    ah,BYTE PTR [esi]
  40c134:	dec    ebx
  40c135:	add    ch,0x99
  40c138:	xor    BYTE PTR [edi],0x9
  40c13b:	jp     0x40c18f
  40c13d:	div    ah
  40c13f:	test   DWORD PTR [edx+0x66],esp
  40c142:	jl     0x40c166
  40c144:	fst    QWORD PTR [ebp+0x60]
  40c147:	jmp    0x178d0f3e
  40c14c:	mov    ds:0xedc0c4e4,eax
  40c151:	add    dl,bh
  40c153:	mov    ds:0xbd39680a,eax
  40c158:	pop    edx
  40c159:	mov    ds:0xe6a4f70e,al
  40c15e:	cmp    ecx,DWORD PTR [esi]
  40c160:	shr    bl,0x2c
  40c163:	push   ss
  40c164:	mov    esp,0xe8450b17
  40c169:	push   eax
  40c16a:	lahf   
  40c16b:	bnd jno 0x40c1ba
  40c16e:	cwde   
  40c16f:	loope  0x40c1e8
  40c171:	jg     0x40c1b9
  40c173:	sub    ebx,eax
  40c175:	or     DWORD PTR [esi+0x33],esi
  40c178:	in     al,dx
  40c179:	aaa    
  40c17a:	js     0x40c137
  40c17c:	mov    bl,0x7b
  40c17e:	pushw  es
  40c180:	test   BYTE PTR [ecx-0x2ee8effa],cl
  40c186:	jp     0x40c182
  40c188:	jg     0x40c1f2
  40c18a:	scas   al,BYTE PTR es:[edi]
  40c18b:	jae    0x40c198
  40c18d:	push   ebp
  40c18e:	in     al,dx
  40c18f:	loop   0x40c186
  40c191:	call   0x3c00:0x3bcd078b
  40c198:	mov    bh,dl
  40c19a:	jae    0x40c1e5
  40c19c:	js     0x40c128
  40c19e:	ror    BYTE PTR [ebx-0x2f],cl
  40c1a1:	xor    esi,0xa0735440
  40c1a7:	loop   0x40c1da
  40c1a9:	fs add ah,ch
  40c1ac:	sbb    eax,0x78dd7f8e
  40c1b1:	int3   
  40c1b2:	and    bl,BYTE PTR ds:0x8f4ae60e
  40c1b8:	or     ah,BYTE PTR [eax+0x24]
  40c1bb:	sbb    eax,0x90ae2c04
  40c1c0:	adc    DWORD PTR [ebx],ebp
  40c1c2:	test   al,0x48
  40c1c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1c5:	sbb    ah,BYTE PTR [ebp+edi*4-0xcb7487d]
  40c1cc:	dec    ebp
  40c1cd:	cmp    BYTE PTR [eax+0x12],0xe7
  40c1d1:	test   dl,ch
  40c1d3:	adc    al,0xf2
  40c1d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1d6:	add    DWORD PTR [eax+ebx*1+0x1ec6c7b5],esi
  40c1dd:	retf   
  40c1de:	xlat   BYTE PTR ds:[ebx]
  40c1df:	jecxz  0x40c1e7
  40c1e1:	inc    eax
  40c1e2:	ret    0xab0e
  40c1e5:	dec    ebx
  40c1e6:	(bad)  
  40c1e7:	and    edi,DWORD PTR [edx+0xf]
  40c1ea:	das    
  40c1eb:	and    cl,bh
  40c1ed:	dec    ebp
  40c1ee:	mov    bh,0xa1
  40c1f0:	xor    al,0xcb
  40c1f2:	cdq    
  40c1f3:	xor    bl,bh
  40c1f5:	pop    edi
  40c1f6:	xor    edi,DWORD PTR [edx+eax*1+0x2a]
  40c1fa:	psadbw mm3,QWORD PTR [esp+ecx*1-0x2a7dfb89]
  40c202:	fdivrp st(5),st
  40c204:	call   FWORD PTR [edx]
  40c206:	mov    ebp,0x982023d
  40c20b:	mov    DWORD PTR [ebx],ebx
  40c20d:	mov    edx,DWORD PTR [esp+edx*1-0x74]
  40c211:	sub    ah,bh
  40c213:	push   ecx
  40c214:	push   eax
  40c215:	and    esp,esp
  40c217:	and    ecx,eax
  40c219:	lods   al,BYTE PTR ds:[esi]
  40c21a:	mov    ds:0x4b1be241,eax
  40c21f:	xor    al,BYTE PTR ds:0xb021b643
  40c225:	(bad)  
  40c226:	pop    edi
  40c227:	or     al,0x99
  40c229:	inc    edx
  40c22a:	jno    0x40c26d
  40c22c:	sub    eax,0xf7bb0a9b
  40c231:	add    DWORD PTR [esi+0x35e46483],esp
  40c237:	aaa    
  40c238:	mov    ds,WORD PTR [ebp-0x5fc6fe1a]
  40c23e:	push   eax
  40c23f:	(bad)  
  40c240:	int    0xe
  40c242:	clc    
  40c243:	sub    cl,BYTE PTR [ecx]
  40c245:	pop    esi
  40c246:	inc    esp
  40c247:	lea    ecx,[ecx+0x241b5c36]
  40c24d:	jne    0x40c2c1
  40c24f:	cmc    
  40c250:	mov    ah,0xf
  40c252:	cmp    al,0xe6
  40c254:	fimul  WORD PTR [edx-0x207a5a02]
  40c25a:	or     eax,0xa0e1498d
  40c25f:	in     al,dx
  40c260:	cmp    BYTE PTR [esp+eax*2+0xb],al
  40c264:	dec    eax
  40c265:	mov    es,WORD PTR [ecx-0x5acaeb3d]
  40c26b:	inc    edi
  40c26c:	adc    BYTE PTR ss:[edx-0x357ece98],dh
  40c273:	das    
  40c274:	cmc    
  40c275:	mov    dh,BYTE PTR ds:[ebx-0x1b]
  40c279:	popa   
  40c27a:	(bad)  
  40c27b:	repnz push edx
  40c27d:	fsub   DWORD PTR [edi]
  40c27f:	xor    BYTE PTR [ebx],bh
  40c281:	add    al,0x2
  40c283:	jge    0x40c2b1
  40c285:	add    ecx,DWORD PTR [edi-0x72]
  40c288:	aam    0x2a
  40c28a:	push   ebx
  40c28b:	jmp    0x7975:0xc19f6eb9
  40c292:	pop    ebp
  40c293:	hlt    
  40c294:	dec    eax
  40c295:	mov    ah,0x41
  40c297:	mov    esi,0x863dca40
  40c29c:	in     al,dx
  40c29d:	cli    
  40c29e:	pushf  
  40c29f:	cmp    ecx,DWORD PTR [edi+0x7]
  40c2a2:	fsubr  st(6),st
  40c2a4:	iret   
  40c2a5:	daa    
  40c2a6:	mov    ds:0xfdf3ecc6,eax
  40c2ab:	test   eax,0x502c7d22
  40c2b0:	shl    BYTE PTR [eax-0x75b31d38],0x3f
  40c2b7:	ds es pop edx
  40c2ba:	lods   eax,DWORD PTR ds:[esi]
  40c2bb:	push   ecx
  40c2bc:	and    al,0xf
  40c2be:	push   cs
  40c2bf:	or     ah,cl
  40c2c1:	mov    dh,0xbb
  40c2c3:	push   eax
  40c2c4:	ret    
  40c2c5:	xchg   DWORD PTR [ebx],esi
  40c2c7:	xor    bl,BYTE PTR [edi]
  40c2c9:	sub    eax,0x7673495b
  40c2ce:	push   esi
  40c2cf:	idiv   DWORD PTR [edx]
  40c2d1:	dec    esp
  40c2d2:	sahf   
  40c2d3:	mov    al,0x1
  40c2d5:	sub    DWORD PTR [edx+0x76],0x54c9a10b
  40c2dc:	ja     0x40c2d4
  40c2de:	inc    ebx
  40c2df:	or     al,0x53
  40c2e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2e3:	pop    es
  40c2e4:	mov    DWORD PTR [ebx+0x4c8fe059],edx
  40c2ea:	ror    DWORD PTR [edi],cl
  40c2ec:	mov    ds:0x16a29c22,al
  40c2f1:	call   0x8e26:0xd4e9514b
  40c2f8:	fdiv   DWORD PTR [ebp+0x36308e01]
  40c2fe:	or     ah,ah
  40c300:	pop    esp
  40c301:	aad    0x32
  40c303:	test   BYTE PTR ds:0x473c2d5a,ah
  40c309:	jl     0x40c2c7
  40c30b:	adc    DWORD PTR ds:0xe9e29887,0x67fe232f
  40c315:	stos   WORD PTR es:[edi],ax
  40c317:	inc    edx
  40c318:	in     al,0x95
  40c31a:	mov    ebp,0xeca74f47
  40c31f:	sahf   
  40c320:	scas   al,BYTE PTR es:[edi]
  40c321:	dec    ebx
  40c322:	dec    edx
  40c323:	cmp    cl,al
  40c325:	sbb    dl,BYTE PTR [eax+0x4]
  40c328:	mov    ecx,DWORD PTR [eax+0x6a]
  40c32b:	dec    BYTE PTR [edx+0x48]
  40c32e:	leave  
  40c32f:	fdivrp st(5),st
  40c331:	sub    dl,ch
  40c333:	jns    0x40c37f
  40c335:	dec    ebx
  40c336:	push   0x77f80a10
  40c33b:	cmp    DWORD PTR [ebx],ebx
  40c33d:	dec    ecx
  40c33e:	mov    ds,WORD PTR [ecx]
  40c340:	rcl    BYTE PTR [esi+0x4d7d7dd6],1
  40c346:	sub    BYTE PTR fs:[eax+0x3c],0xaf
  40c34b:	sub    BYTE PTR [edx],dl
  40c34d:	test   DWORD PTR [esi-0x67],0xab00a54a
  40c354:	push   ebp
  40c355:	adc    bl,BYTE PTR [esi]
  40c357:	pop    ss
  40c358:	cwde   
  40c359:	jmp    DWORD PTR ds:0xc2a94c0e
  40c35f:	stos   BYTE PTR es:[edi],al
  40c360:	xchg   BYTE PTR [ebx+ebp*4+0x29],bl
  40c364:	test   bl,dh
  40c366:	imul   eax,esp,0xffffff80
  40c369:	cdq    
  40c36a:	xchg   ebx,eax
  40c36b:	adc    BYTE PTR [eax+0x3601d2ec],bl
  40c371:	push   cs
  40c372:	cmc    
  40c373:	mov    edi,0x39080ce7
  40c378:	fnstenv [edi+0x5c]
  40c37b:	bnd ret 
  40c37d:	sub    esi,DWORD PTR [edi+0x2b]
  40c380:	ins    DWORD PTR es:[edi],dx
  40c381:	fimul  DWORD PTR [ecx-0x36762a67]
  40c387:	dec    ebx
  40c388:	mov    al,0x49
  40c38a:	xchg   esi,eax
  40c38b:	add    ebp,DWORD PTR [ebx-0x5a]
  40c38e:	test   DWORD PTR [esi+0x2d],ebx
  40c391:	mov    BYTE PTR [esi],bl
  40c393:	aad    0x71
  40c395:	pop    ss
  40c396:	mov    bl,0xb0
  40c398:	shl    DWORD PTR [ebp-0x42],0x99
  40c39c:	cmp    BYTE PTR [edi+eax*4],bl
  40c39f:	and    al,0x4a
  40c3a1:	xlat   BYTE PTR ds:[ebx]
  40c3a2:	test   al,0x17
  40c3a4:	push   ecx
  40c3a5:	add    edi,esi
  40c3a7:	sub    eax,0x312cf310
  40c3ac:	adc    bl,BYTE PTR [eax+0x7e2fe72d]
  40c3b2:	push   es
  40c3b3:	pop    edi
  40c3b4:	xchg   DWORD PTR [ecx-0x1b78f76c],eax
  40c3ba:	xchg   esp,eax
  40c3bb:	cmp    eax,0x13726f8a
  40c3c0:	xchg   BYTE PTR [ebx+0x6d],al
  40c3c3:	icebp  
  40c3c4:	xor    al,cl
  40c3c6:	xchg   BYTE PTR ds:0x2fa53ff9,ch
  40c3cc:	xor    esi,edi
  40c3ce:	lea    eax,[ebp+0x134b3b32]
  40c3d4:	adc    al,0x76
  40c3d6:	push   eax
  40c3d7:	add    al,0x16
  40c3d9:	sub    ch,BYTE PTR [edi]
  40c3db:	mov    cl,0x62
  40c3dd:	sbb    eax,DWORD PTR [ebp-0x75b6ebef]
  40c3e3:	inc    ebp
  40c3e4:	setg   BYTE PTR [ecx]
  40c3e7:	jp     0x40c3ff
  40c3e9:	popa   
  40c3ea:	repnz add al,0x9f
  40c3ed:	les    eax,FWORD PTR [esi-0x28]
  40c3f0:	mov    es,WORD PTR [edx]
  40c3f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3f3:	xchg   ecx,eax
  40c3f4:	and    al,BYTE PTR [ecx-0x76f5cea1]
  40c3fa:	mov    BYTE PTR [ecx+edi*4],ch
  40c3fd:	add    eax,0xad10b6c4
  40c402:	or     al,0x37
  40c404:	into   
  40c405:	mov    ecx,0xf98b00cf
  40c40a:	inc    ebp
  40c40b:	ds or  eax,0xe774ffd4
  40c411:	mov    esi,0x442b726a
  40c416:	mov    esi,0x8da40692
  40c41b:	add    edx,DWORD PTR [edx]
  40c41d:	ret    0x300f
  40c420:	add    DWORD PTR [eax],ecx
  40c422:	lods   al,BYTE PTR ds:[esi]
  40c423:	test   eax,0x4ee85956
  40c428:	mov    DWORD PTR [ecx+ebp*2],ebx
  40c42b:	mov    WORD PTR [ecx+0x648e3a9a],gs
  40c431:	scas   al,BYTE PTR es:[edi]
  40c432:	mov    ebx,0x1912eec1
  40c437:	shr    DWORD PTR [ecx],0xe9
  40c43a:	out    0xa9,al
  40c43c:	test   DWORD PTR [eax],ebp
  40c43e:	pop    ecx
  40c43f:	sub    ecx,ebx
  40c441:	push   edx
  40c442:	jp     0x40c484
  40c444:	cld    
  40c445:	sbb    BYTE PTR [esi],cl
  40c447:	mov    cl,al
  40c449:	xlat   BYTE PTR ds:[ebx]
  40c44a:	aad    0xd1
  40c44c:	test   DWORD PTR [ebx+edx*1+0x2c],ebp
  40c450:	sbb    al,0x48
  40c452:	sub    al,0x61
  40c454:	xchg   DWORD PTR [esi-0x1a],esp
  40c457:	mov    ds:0x56129da1,eax
  40c45c:	in     eax,0x31
  40c45e:	sub    DWORD PTR [ebp-0x20],eax
  40c461:	mov    ebx,0x11c3fb53
  40c466:	dec    edi
  40c467:	xor    DWORD PTR [edx+0x2a362ed7],esp
  40c46d:	nop
  40c46e:	mov    ch,0xb3
  40c470:	mov    eax,0xe60ec97
  40c475:	mov    bh,dl
  40c477:	or     eax,0x814d7839
  40c47c:	jle    0x40c494
  40c47e:	sub    al,0xb3
  40c480:	call   0x31e5:0x1278b506
  40c487:	sbb    eax,0xd25d53ff
  40c48c:	cli    
  40c48d:	push   ebp
  40c48e:	adc    eax,0xd4e35f78
  40c493:	shl    DWORD PTR [ecx+0x1e],0x29
  40c497:	ss (bad) 
  40c499:	pop    ebp
  40c49a:	and    cl,BYTE PTR [ebx]
  40c49c:	fldenv [esi]
  40c49e:	in     al,0x13
  40c4a0:	sub    al,0xef
  40c4a2:	fcom   QWORD PTR cs:[edx-0x1f]
  40c4a6:	push   cs
  40c4a7:	push   edi
  40c4a8:	cmp    cl,BYTE PTR [eax]
  40c4aa:	mov    DWORD PTR [edi+0x1e],edi
  40c4ad:	add    DWORD PTR [esi+0x48c1189],ebx
  40c4b3:	sbb    bh,ah
  40c4b5:	dec    edx
  40c4b6:	or     ch,BYTE PTR [eax]
  40c4b8:	mov    ecx,esi
  40c4ba:	stos   BYTE PTR es:[edi],al
  40c4bb:	inc    ecx
  40c4bc:	js     0x40c4f2
  40c4be:	jns    0x40c52a
  40c4c0:	or     DWORD PTR [esi],ebx
  40c4c2:	mov    ecx,ebx
  40c4c4:	jge    0x40c4d2
  40c4c6:	mov    esi,cs
  40c4c8:	enter  0xfe94,0x8
  40c4cc:	inc    ebx
  40c4cd:	fdiv   DWORD PTR [ecx-0x3e]
  40c4d0:	test   DWORD PTR [esi],edx
  40c4d2:	imul   ecx
  40c4d4:	sub    al,0x15
  40c4d6:	stos   BYTE PTR es:[edi],al
  40c4d7:	adc    eax,0x2f6d19d2
  40c4dc:	push   cs
  40c4dd:	std    
  40c4de:	pop    edi
  40c4df:	or     ecx,esi
  40c4e1:	test   DWORD PTR [ebp+0xb1da534],eax
  40c4e7:	arpl   WORD PTR [ecx+0x48],ax
  40c4ea:	xchg   esi,eax
  40c4eb:	popf   
  40c4ec:	sub    al,0xea
  40c4ee:	(bad)  
  40c4ef:	mov    bl,0x44
  40c4f1:	addr16 in al,dx
  40c4f3:	into   
  40c4f4:	jo     0x40c52b
  40c4f6:	or     ecx,DWORD PTR [edi]
  40c4f8:	mov    esi,0xf6170c00
  40c4fd:	push   ds
  40c4fe:	mov    edi,edi
  40c500:	lods   eax,DWORD PTR ds:[esi]
  40c501:	sbb    dh,BYTE PTR [ecx-0x11]
  40c504:	mov    dl,0x8a
  40c506:	adc    al,0xa
  40c508:	inc    ebx
  40c509:	push   edi
  40c50a:	lea    edx,[ecx-0x40]
  40c50d:	dec    ebp
  40c50e:	retf   
  40c50f:	mov    bh,ch
  40c511:	pop    es
  40c512:	xchg   DWORD PTR [eax],edx
  40c514:	jno    0x40c517
  40c516:	or     al,0xff
  40c518:	pop    ss
  40c519:	jne    0x40c51b
  40c51b:	rol    BYTE PTR [edi],0xd
  40c51e:	cmp    DWORD PTR [esi],0xe4d88789
  40c524:	mov    eax,ds:0xac69e723
  40c529:	sub    DWORD PTR ds:0x4b087133,ecx
  40c52f:	test   eax,ecx
  40c531:	add    al,ch
  40c533:	sub    cl,BYTE PTR [edx+0x24062504]
  40c539:	pop    ss
  40c53a:	test   BYTE PTR ds:0xdf89bc22,0x82
  40c541:	in     al,dx
  40c542:	or     BYTE PTR [esi-0x57bd1c5d],dl
  40c548:	js     0x40c561
  40c54a:	add    ch,BYTE PTR [eax]
  40c54c:	sbb    esp,DWORD PTR [eax]
  40c54e:	cmc    
  40c54f:	popf   
  40c550:	or     al,0x5e
  40c552:	int3   
  40c553:	aas    
  40c554:	add    BYTE PTR [eax+0xe],ch
  40c557:	jns    0x40c55b
  40c559:	lods   al,BYTE PTR ds:[esi]
  40c55a:	int3   
  40c55b:	setb   BYTE PTR [edi]
  40c55e:	int    0x9
  40c560:	lea    eax,[edx]
  40c562:	lock sub BYTE PTR [ecx+0x42],cl
  40c566:	pop    es
  40c567:	add    DWORD PTR [ecx],0xfe2f8bce
  40c56d:	nop
  40c56e:	or     BYTE PTR [ecx*2+0x11ec32b8],ch
  40c575:	mov    cl,BYTE PTR [esi]
  40c577:	add    dl,BYTE PTR ds:0x721947b
  40c57d:	test   BYTE PTR [ebx-0x2d],dl
  40c580:	push   esi
  40c581:	inc    eax
  40c582:	push   0xc0adc52e
  40c587:	xor    eax,0x65c6f413
  40c58c:	neg    DWORD PTR [ecx+0x12bbc32d]
  40c592:	repz or DWORD PTR [edx-0x56],edi
  40c596:	and    al,BYTE PTR [ebp-0x72]
  40c599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c59a:	jae    0x40c59e
  40c59c:	add    BYTE PTR [ebx],ch
  40c59e:	retf   
  40c59f:	cmp    bh,BYTE PTR [ebp-0x4d]
  40c5a2:	sbb    DWORD PTR [ecx-0x741377f9],eax
  40c5a8:	ins    BYTE PTR es:[edi],dx
  40c5a9:	push   cs
  40c5aa:	pop    ebx
  40c5ab:	rcr    DWORD PTR [ebp+0x50],cl
  40c5ae:	outs   dx,BYTE PTR ds:[esi]
  40c5af:	mov    ds:0x6c3ad7b3,eax
  40c5b4:	push   es
  40c5b5:	add    DWORD PTR [edi+0x86049e9],ebp
  40c5bb:	and    cl,BYTE PTR [ebx+0x53]
  40c5be:	shl    al,1
  40c5c0:	call   esi
  40c5c2:	or     ah,BYTE PTR es:[edi-0x31eb85f3]
  40c5c9:	hlt    
  40c5ca:	lods   al,BYTE PTR ds:[esi]
  40c5cb:	push   0x55
  40c5cd:	pusha  
  40c5ce:	icebp  
  40c5cf:	dec    ebx
  40c5d0:	push   edx
  40c5d1:	or     edx,DWORD PTR [ebx+ecx*4]
  40c5d4:	jle    0x40c603
  40c5d6:	icebp  
  40c5d7:	iret   
  40c5d8:	xchg   edi,eax
  40c5d9:	mov    dl,0x5a
  40c5db:	stc    
  40c5dc:	and    BYTE PTR ds:0x21924361,cl
  40c5e2:	arpl   WORD PTR [ebx-0x44c64db3],di
  40c5e8:	(bad)  
  40c5e9:	(bad)
  40c5ec:	xor    DWORD PTR [ebx],0x2d
  40c5ef:	fbld   TBYTE PTR [edx-0x38f28f0e]
  40c5f5:	hlt    
  40c5f6:	xor    eax,0xc4f6ca69
  40c5fb:	icebp  
  40c5fc:	retf   
  40c5fd:	fidivr DWORD PTR [eax+0x1f]
  40c600:	push   eax
  40c601:	outs   dx,DWORD PTR ds:[esi]
  40c602:	stc    
  40c603:	pop    edx
  40c604:	fst    DWORD PTR [edi-0x72994d8]
  40c60a:	or     eax,0x2ebf02ef
  40c60f:	shr    ah,cl
  40c611:	xchg   DWORD PTR [ecx+eax*2+0x14],eax
  40c615:	cmp    al,bh
  40c617:	and    al,0xfd
  40c619:	and    eax,DWORD PTR [ebp-0x4a86182e]
  40c61f:	pop    ss
  40c620:	cmp    al,0xcf
  40c622:	fldcw  WORD PTR [ebx]
  40c624:	fnstsw WORD PTR [ebx-0x5c9783b9]
  40c62a:	nop
  40c62b:	cmc    
  40c62c:	dec    ebx
  40c62d:	jp     0x40c633
  40c62f:	fwait
  40c630:	ret    0xd71
  40c633:	mov    ds,WORD PTR [eax]
  40c635:	shl    DWORD PTR [ecx-0x765c142e],0x1c
  40c63c:	int3   
  40c63d:	out    0x92,eax
  40c63f:	test   DWORD PTR [esi+0x582f04bc],0x524f3e54
  40c649:	xor    ebp,ecx
  40c64b:	shl    DWORD PTR [esi],1
  40c64d:	mov    WORD PTR [eax+esi*1-0x74],?
  40c651:	add    al,0xc5
  40c653:	(bad)  
  40c654:	out    dx,al
  40c655:	loopne 0x40c687
  40c657:	mov    cs,WORD PTR [eax]
  40c659:	xchg   ebx,esi
  40c65b:	arpl   WORD PTR [edx+0x64],ax
  40c65e:	xor    edi,esi
  40c660:	(bad)  
  40c661:	frstor [ebx+0x36]
  40c664:	ret    
  40c665:	psubq  mm5,QWORD PTR [esi+0x40]
  40c669:	mov    eax,0x9af2ec42
  40c66e:	mov    cl,0x51
  40c670:	sbb    cl,BYTE PTR [esp+eax*4]
  40c673:	inc    edx
  40c674:	pop    esi
  40c675:	(bad)  
  40c676:	pop    edi
  40c677:	aaa    
  40c678:	mov    BYTE PTR [edi],dl
  40c67a:	sub    eax,0x90e83ae8
  40c67f:	inc    ecx
  40c680:	adc    bl,BYTE PTR [edi]
  40c682:	imul   edx,DWORD PTR [edi+0x66f85238],0xd317b2f
  40c68c:	jle    0x40c68e
  40c68e:	mov    edi,0x10072333
  40c693:	out    0x15,al
  40c695:	mov    ds:0x1c334ce8,eax
  40c69a:	ins    BYTE PTR es:[edi],dx
  40c69b:	mov    ebp,0x3fa42385
  40c6a0:	mov    edx,0xc8916c6
  40c6a5:	jp     0x40c69b
  40c6a7:	inc    esp
  40c6a8:	add    al,0x4
  40c6aa:	lock and DWORD PTR ds:0xe4110389,edi
  40c6b1:	and    ch,BYTE PTR [ebp-0x3f7ae95e]
  40c6b7:	nop
  40c6b8:	mov    esi,0x29801222
  40c6bd:	mov    ecx,DWORD PTR [edx+0x571b440e]
  40c6c3:	jnp    0x40c6e0
  40c6c5:	lods   al,BYTE PTR ds:[esi]
  40c6c6:	or     BYTE PTR [ebp+0x8],ch
  40c6c9:	sub    al,0x2b
  40c6cb:	pop    ss
  40c6cc:	jge    0x40c653
  40c6ce:	data16 cmp al,BYTE PTR gs:0xa02a3e85
  40c6d6:	pop    ss
  40c6d7:	jecxz  0x40c6d7
  40c6d9:	jmp    0x40c67c
  40c6db:	pop    eax
  40c6dc:	xlat   BYTE PTR ds:[ebx]
  40c6dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6de:	out    0x51,al
  40c6e0:	rcr    BYTE PTR [eax-0x5b08d771],1
  40c6e6:	cmp    al,0x2a
  40c6e8:	add    ebp,DWORD PTR [edi+0x14567d33]
  40c6ee:	or     DWORD PTR [ecx+ebx*8],edi
  40c6f1:	push   ds
  40c6f2:	and    al,0x42
  40c6f4:	xor    DWORD PTR ds:0x5440d81,esp
  40c6fa:	shufps xmm1,XMMWORD PTR es:[esi],0xfe
  40c6ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c700:	jo     0x40c725
  40c702:	mov    esi,DWORD PTR [eax]
  40c704:	ret    
  40c705:	dec    eax
  40c706:	sbb    ch,ch
  40c708:	leave  
  40c709:	inc    esi
  40c70a:	ds aas 
  40c70c:	push   ss
  40c70d:	fstp   TBYTE PTR [ebx+ecx*2+0x1b]
  40c711:	sub    BYTE PTR [ebx+0x4c],bh
  40c714:	mov    bh,0x5c
  40c716:	call   0xee65:0xef620cd2
  40c71d:	cmp    DWORD PTR [edi+0x3eade68e],ecx
  40c723:	mov    BYTE PTR [esi+0x19ffc558],ah
  40c729:	int    0x99
  40c72b:	mov    al,0xc0
  40c72d:	arpl   bp,dx
  40c72f:	mov    edx,0x50eb08f3
  40c734:	push   eax
  40c735:	xor    BYTE PTR [ecx],0x23
  40c738:	aas    
  40c739:	mov    edi,DWORD PTR [ebx-0x40]
  40c73c:	push   ebx
  40c73d:	pop    eax
  40c73e:	sub    esp,edi
  40c740:	out    0x4d,eax
  40c742:	or     cl,BYTE PTR [edi+0x2c0b8d9c]
  40c748:	mov    ebp,0x88c450d9
  40c74d:	fwait
  40c74e:	pop    ebx
  40c74f:	lods   eax,DWORD PTR es:[esi]
  40c751:	push   eax
  40c752:	mov    ch,0x37
  40c754:	mov    ah,BYTE PTR [ebx]
  40c756:	neg    BYTE PTR [ebx]
  40c758:	outs   dx,WORD PTR ds:[esi]
  40c75a:	xchg   DWORD PTR [esi+0x4ab3a489],eax
  40c760:	imul   DWORD PTR [ecx+eax*1]
  40c763:	cmp    al,0xe2
  40c765:	inc    ebx
  40c766:	jge    0x40c782
  40c768:	pop    ecx
  40c769:	push   ebx
  40c76a:	mov    ebx,0x78f5414
  40c76f:	mov    al,ds:0x510b78d3
  40c774:	pop    ecx
  40c775:	adc    ch,ch
  40c777:	sbb    eax,0x9873ea5
  40c77c:	sbb    eax,0xb18212b6
  40c781:	lea    edi,[edx+eiz*8+0x1497a99]
  40c788:	jae    0x40c78c
  40c78a:	xchg   DWORD PTR [esi+0x115425c9],eax
  40c790:	and    al,0x64
  40c792:	jnp    0x40c80d
  40c794:	xor    BYTE PTR [eax],cl
  40c796:	pop    edi
  40c797:	xlat   BYTE PTR ds:[ebx]
  40c798:	lods   eax,DWORD PTR ds:[esi]
  40c799:	cmp    ebx,esi
  40c79b:	cmp    al,0x33
  40c79d:	push   ss
  40c79e:	mov    esp,0x75162f44
  40c7a3:	(bad)  
  40c7a4:	mov    ebx,0x6d6ee643
  40c7a9:	sbb    eax,DWORD PTR [ebp+0x1]
  40c7ac:	ins    DWORD PTR es:[edi],dx
  40c7ad:	adc    eax,0xd42df084
  40c7b2:	inc    ebx
  40c7b3:	fwait
  40c7b4:	dec    eax
  40c7b5:	adc    edx,DWORD PTR [eax]
  40c7b7:	pop    edi
  40c7b8:	cdq    
  40c7b9:	add    BYTE PTR [eax+eiz*8+0x3598c78f],cl
  40c7c0:	pop    edx
  40c7c1:	dec    esp
  40c7c2:	stos   DWORD PTR es:[edi],eax
  40c7c3:	es retf 
  40c7c5:	or     eax,0xc99e7a86
  40c7ca:	mov    eax,DWORD PTR [ecx-0x75cd35e3]
  40c7d0:	inc    edi
  40c7d1:	add    DWORD PTR [edx],ebx
  40c7d3:	mov    ebp,0x2a903d04
  40c7d8:	xchg   ebp,eax
  40c7d9:	xlat   BYTE PTR ds:[ebx]
  40c7da:	and    ch,bl
  40c7dc:	arpl   WORD PTR [esi+esi*2],cx
  40c7df:	jle    0x40c7cc
  40c7e1:	ret    
  40c7e2:	xor    ch,BYTE PTR [edx]
  40c7e4:	mov    edx,fs
  40c7e6:	inc    esi
  40c7e7:	(bad)  
  40c7e8:	call   0x14b2:0x82dc2512
  40c7ef:	mov    cl,0x1c
  40c7f1:	mov    DWORD PTR [eax+0x9],ebx
  40c7f4:	dec    esp
  40c7f5:	xor    edi,ebx
  40c7f7:	add    bh,dl
  40c7f9:	xchg   esp,eax
  40c7fa:	in     al,0x41
  40c7fc:	push   ecx
  40c7fd:	cs out dx,ax
  40c800:	push   ss
  40c801:	sbb    eax,0x781489fd
  40c806:	add    BYTE PTR [ebp+0x340a9731],ah
  40c80c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c80d:	add    BYTE PTR [edx],0x4
  40c810:	mov    ecx,DWORD PTR [ecx-0x1c]
  40c813:	push   eax
  40c814:	mov    bl,0xd3
  40c816:	pop    esp
  40c817:	pop    edx
  40c818:	xor    al,0xb2
  40c81a:	inc    eax
  40c81b:	fs sbb ecx,edx
  40c81e:	test   eax,0x92f99ee1
  40c823:	mov    edi,0xf598440f
  40c828:	sub    eax,0xb9a150e4
  40c82d:	add    ecx,ecx
  40c82f:	push   edi
  40c830:	outs   dx,DWORD PTR ds:[esi]
  40c831:	adc    ebp,DWORD PTR [esi]
  40c833:	pop    ecx
  40c834:	sub    eax,DWORD PTR [edx+0x32]
  40c837:	sub    BYTE PTR [edi+0x8fa448e],cl
  40c83d:	add    ch,0xb
  40c840:	xchg   BYTE PTR ds:[edi-0x3c],al
  40c844:	call   ebp
  40c846:	or     DWORD PTR [esi],eax
  40c848:	mov    edx,0x867fe47c
  40c84d:	cwde   
  40c84e:	add    al,BYTE PTR [edx]
  40c850:	or     al,0x81
  40c852:	xchg   ebp,eax
  40c853:	mov    al,0xc8
  40c855:	pop    edi
  40c856:	lea    edx,[ebx+0x7f78a470]
  40c85c:	and    al,ah
  40c85e:	int3   
  40c85f:	es or  eax,eax
  40c862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c863:	pop    ds
  40c864:	inc    ebx
  40c865:	add    BYTE PTR [eax+ebx*8+0x7a],bl
  40c869:	sbb    bl,BYTE PTR [eax+0x52084f2a]
  40c86f:	dec    edx
  40c870:	or     BYTE PTR [edx-0x80f7982],cl
  40c876:	xchg   ecx,eax
  40c877:	(bad)  
  40c878:	lahf   
  40c879:	pushf  
  40c87a:	jno    0x40c8b2
  40c87c:	add    eax,0xf834046
  40c881:	jmp    0xd4c360d4
  40c886:	add    eax,0xb4042392
  40c88b:	ins    BYTE PTR es:[edi],dx
  40c88c:	xor    esi,DWORD PTR [eax-0x6b1828a4]
  40c892:	mov    esi,0xeb2ef145
  40c897:	inc    ebx
  40c898:	pop    ss
  40c899:	sbb    eax,0x57e1d3e8
  40c89e:	out    dx,eax
  40c89f:	dec    edi
  40c8a0:	lea    eax,[ebp-0x13eee673]
  40c8a6:	jb     0x40c8f1
  40c8a8:	pop    eax
  40c8a9:	and    DWORD PTR [eax+edi*1],eax
  40c8ac:	push   eax
  40c8ad:	xchg   DWORD PTR [edx],eax
  40c8af:	or     dl,BYTE PTR [edx]
  40c8b1:	fwait
  40c8b2:	sub    ah,cl
  40c8b4:	call   0x5cb9:0xd4311acc
  40c8bb:	xchg   esi,eax
  40c8bc:	xor    DWORD PTR [edi+eax*2+0x30],0xf2b31f9e
  40c8c4:	outs   dx,BYTE PTR ds:[esi]
  40c8c5:	inc    esp
  40c8c6:	inc    edx
  40c8c7:	mov    dl,0x6
  40c8c9:	sbb    ah,BYTE PTR [edi]
  40c8cb:	pop    ecx
  40c8cc:	sub    bl,BYTE PTR [edi]
  40c8ce:	repnz sub ebx,DWORD PTR [edx-0x129fd2f2]
  40c8d5:	imul   ecx,DWORD PTR [ecx+0x52bb8355],0x58
  40c8dc:	bound  esp,QWORD PTR [eax+0x285a8dae]
  40c8e2:	ds fcomip st,st(3)
  40c8e5:	ds push ds
  40c8e7:	and    DWORD PTR [ebp-0x7711ebe2],eax
  40c8ed:	lock retf 0x3319
  40c8f1:	inc    BYTE PTR [ebx+ebx*1]
  40c8f4:	mov    al,ds:0xef06027e
  40c8f9:	ins    DWORD PTR es:[edi],dx
  40c8fa:	das    
  40c8fb:	pushf  
  40c8fc:	sbb    eax,0xaefb27b4
  40c901:	dec    esi
  40c902:	cmc    
  40c903:	cmp    BYTE PTR [ebp+0x1a5cf252],ah
  40c909:	sti    
  40c90a:	ret    0x2f09
  40c90d:	jbe    0x40c914
  40c90f:	dec    edi
  40c910:	push   ss
  40c911:	or     DWORD PTR ds:0xf002f2ec,edx
  40c917:	or     dl,BYTE PTR [edx-0x5430bb9e]
  40c91d:	test   al,0x44
  40c91f:	mov    ecx,0xd50b2214
  40c924:	xchg   esp,eax
  40c925:	push   ebp
  40c926:	or     BYTE PTR [edi+0x23],dh
  40c929:	inc    ecx
  40c92a:	sub    ch,0x4f
  40c92d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c92e:	push   edx
  40c92f:	movzx  ebp,BYTE PTR [ebx-0x2a]
  40c933:	cli    
  40c934:	jae    0x40c919
  40c936:	jl     0x40c904
  40c938:	or     bh,BYTE PTR [ebx]
  40c93a:	add    cl,BYTE PTR [ebx+0x4d8ab044]
  40c940:	and    eax,ebx
  40c942:	xor    eax,0x92188042
  40c947:	lahf   
  40c948:	sub    ecx,DWORD PTR [ebx]
  40c94a:	gs or  esp,ecx
  40c94d:	jp     0x40c904
  40c94f:	cwde   
  40c950:	call   0x8f96:0x42e76851
  40c957:	cmp    BYTE PTR ss:[esi+ecx*2],bl
  40c95b:	jae    0x40c982
  40c95d:	call   0x8085:0x4555a67e
  40c964:	mov    ecx,0x20426d8
  40c969:	js     0x40c970
  40c96b:	in     eax,0x1e
  40c96d:	pusha  
  40c96e:	(bad)  
  40c96f:	dec    ebx
  40c970:	jae    0x40c968
  40c972:	ds pusha 
  40c974:	or     bl,BYTE PTR [ecx+ecx*4-0x2ef77b5]
  40c97b:	retf   
  40c97c:	add    BYTE PTR [edi],ah
  40c97e:	js     0x40c999
  40c980:	xor    eax,0xbb02f201
  40c985:	test   DWORD PTR [eax+0x6],0x58e3529
  40c98c:	jg     0x40c99d
  40c98e:	sbb    BYTE PTR [ecx],ah
  40c990:	mov    es,ebp
  40c992:	aam    0x7b
  40c994:	mov    WORD PTR [esi+0x6253d00a],?
  40c99a:	or     edx,DWORD PTR [edi]
  40c99c:	add    eax,0x542d990a
  40c9a1:	pop    ss
  40c9a2:	mov    BYTE PTR [edx],0x83
  40c9a5:	in     eax,0x8f
  40c9a7:	cwde   
  40c9a8:	dec    edx
  40c9a9:	pop    ds
  40c9aa:	enter  0x8840,0x20
  40c9ae:	repz push es
  40c9b0:	mov    ds:0x4aae2d1c,eax
  40c9b5:	mov    edx,0x7e841220
  40c9ba:	call   0x1c469a09
  40c9bf:	pop    edx
  40c9c0:	push   edx
  40c9c1:	es mov edi,0xccd28762
  40c9c7:	ds loopne 0x40c9ad
  40c9ca:	mov    ?,ebx
  40c9cc:	adc    BYTE PTR [ebp-0xf157cee],bh
  40c9d2:	call   0x7c3a2f6f
  40c9d7:	mov    ecx,0xc30cf54a
  40c9dc:	or     eax,eax
  40c9de:	add    eax,0x9fc3bc3
  40c9e3:	test   DWORD PTR [edx-0x78],ebx
  40c9e6:	adc    eax,0xd02f2cdf
  40c9eb:	cmp    DWORD PTR [edx+0x7bc7f7f5],0x4bedbd34
  40c9f5:	fs mov ecx,0xc9091fb5
  40c9fb:	ret    0x37f
  40c9fe:	or     BYTE PTR [ebx+eax*2+0x4d1b0304],al
  40ca05:	sbb    al,0x68
  40ca07:	sub    eax,0xeffc903a
  40ca0c:	xor    BYTE PTR [edx+0x15],cl
  40ca0f:	fcomip st,st(6)
  40ca11:	push   cs
  40ca12:	dec    esi
  40ca13:	add    eax,0xd75827dd
  40ca18:	stc    
  40ca19:	sahf   
  40ca1a:	in     al,0x93
  40ca1c:	sti    
  40ca1d:	out    dx,eax
  40ca1e:	mul    DWORD PTR [eax+0x168e1595]
  40ca24:	fmul   QWORD PTR [edx]
  40ca26:	fst    QWORD PTR [eax-0x1b]
  40ca29:	test   DWORD PTR [ebp-0xdc3a21a],0xe43ab032
  40ca33:	cld    
  40ca34:	inc    ebp
  40ca35:	jne    0x40caaf
  40ca37:	icebp  
  40ca38:	and    ah,BYTE PTR [ecx-0x195139de]
  40ca3e:	sub    esp,0x7a2abc66
  40ca44:	lds    esp,FWORD PTR [eax]
  40ca46:	jge    0x40caa5
  40ca48:	in     eax,dx
  40ca49:	(bad)  
  40ca4a:	or     ah,BYTE PTR [ecx-0x46]
  40ca4d:	adc    dh,ah
  40ca4f:	ror    DWORD PTR [eax],0x28
  40ca52:	sbb    eax,0x21128d24
  40ca57:	push   es
  40ca58:	cmp    DWORD PTR [edi],ebx
  40ca5a:	jl     0x40ca69
  40ca5c:	pop    edx
  40ca5d:	push   cs
  40ca5e:	(bad)  
  40ca5f:	das    
  40ca60:	inc    esi
  40ca61:	adc    BYTE PTR ds:0x414c427,al
  40ca67:	adc    dh,dh
  40ca69:	mov    DWORD PTR [eax-0x7c],edi
  40ca6c:	fucomp st(0)
  40ca6e:	scas   eax,DWORD PTR es:[edi]
  40ca6f:	mov    bh,bl
  40ca71:	out    dx,eax
  40ca72:	push   ebp
  40ca73:	scas   eax,DWORD PTR es:[edi]
  40ca74:	xor    DWORD PTR [ecx-0x7d4e2361],ebx
  40ca7a:	inc    esp
  40ca7b:	daa    
  40ca7c:	js     0x40ca4c
  40ca7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca7f:	jp     0x40cafb
  40ca81:	in     al,dx
  40ca82:	arpl   WORD PTR [eax+edi*1],ax
  40ca85:	in     al,0x97
  40ca87:	je     0x40cad1
  40ca89:	add    ecx,edx
  40ca8b:	mov    ebx,ecx
  40ca8d:	fild   QWORD PTR [esi]
  40ca8f:	in     eax,0xe7
  40ca91:	or     ebp,eax
  40ca93:	and    ch,al
  40ca95:	dec    ebx
  40ca96:	enter  0x1b61,0x8a
  40ca9a:	inc    edx
  40ca9b:	sub    edi,edx
  40ca9d:	and    eax,DWORD PTR [edi]
  40ca9f:	inc    ecx
  40caa0:	mov    ds:0x2dee23c3,al
  40caa5:	xor    ch,0x36
  40caa8:	out    0x30,eax
  40caaa:	cmp    DWORD PTR ds:0x1d42eb5d,esi
  40cab0:	sub    edx,DWORD PTR ds:0x2251d426
  40cab6:	mov    ebp,DWORD PTR [ebp-0xc3d20fb]
  40cabc:	scas   al,BYTE PTR es:[edi]
  40cabd:	call   0x71c2:0xbeed537e
  40cac4:	push   cs
  40cac5:	push   cs
  40cac6:	jns    0x40caac
  40cac8:	or     BYTE PTR [esi-0x16d78054],dh
  40cace:	adc    DWORD PTR [ebp-0x174fa6ac],esp
  40cad4:	xchg   esi,eax
  40cad5:	ja     0x40cb33
  40cad7:	sti    
  40cad8:	clc    
  40cad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cada:	adc    esp,edi
  40cadc:	sbb    eax,0x20309a2a
  40cae1:	dec    edi
  40cae2:	das    
  40cae3:	(bad)  
  40cae4:	jmp    0x6649b036
  40cae9:	ror    DWORD PTR [esp+eax*4],0xde
  40caed:	repnz sbb cl,BYTE PTR [ebx]
  40caf0:	test   DWORD PTR ds:0x37e8f050,eax
  40caf6:	mov    ds:0x8f56ab60,al
  40cafb:	cmp    al,bh
  40cafd:	int3   
  40cafe:	push   ecx
  40caff:	clc    
  40cb00:	push   cs
  40cb01:	sbb    eax,0xfc38086f
  40cb06:	jns    0x40cb17
  40cb08:	cmp    DWORD PTR ds:0x5c1bfb0f,esp
  40cb0e:	sbb    eax,0xfb94c628
  40cb13:	inc    edx
  40cb14:	push   cs
  40cb15:	(bad)  
  40cb16:	out    dx,eax
  40cb17:	cmc    
  40cb18:	inc    eax
  40cb19:	test   DWORD PTR [eax-0x1e608bc0],0xc80f285b
  40cb23:	in     eax,0xe5
  40cb25:	and    cl,BYTE PTR [ebx+0xd]
  40cb28:	adc    bl,BYTE PTR [ecx+edi*1+0x5b]
  40cb2c:	inc    ebx
  40cb2d:	inc    edi
  40cb2e:	or     ebx,esi
  40cb30:	push   ss
  40cb31:	sub    eax,0x12dec8c0
  40cb36:	adc    al,BYTE PTR ds:0x6c8547cb
  40cb3c:	lods   al,BYTE PTR ds:[esi]
  40cb3d:	(bad)  [ecx+ebx*1+0x7525204d]
  40cb44:	adc    eax,DWORD PTR [ebx]
  40cb46:	out    0x5a,eax
  40cb48:	lds    ecx,FWORD PTR [ecx+eax*1+0x4477ce8b]
  40cb4f:	xor    al,0x3
  40cb51:	jns    0x40cb67
  40cb53:	pop    ecx
  40cb54:	pop    ebp
  40cb56:	xchg   esp,eax
  40cb57:	dec    esi
  40cb58:	cs xor eax,0xe7167f50
  40cb5e:	dec    ebx
  40cb5f:	and    eax,0xf543a623
  40cb64:	rcl    BYTE PTR [ebx+0x3a],0xed
  40cb68:	mov    eax,ds:0x641c1d5f
  40cb6d:	dec    ebp
  40cb6e:	adc    edx,edx
  40cb70:	xlat   BYTE PTR ds:[ebx]
  40cb71:	shl    DWORD PTR ds:0x27acebc7,cl
  40cb77:	cwde   
  40cb78:	jmp    0x40cb42
  40cb7a:	repnz or eax,0xacaf5308
  40cb80:	or     BYTE PTR ds:0x45d5fc58,al
  40cb86:	add    DWORD PTR [edx+0x202d6d08],0x7c
  40cb8d:	add    ebp,ebp
  40cb8f:	sub    al,0x57
  40cb91:	inc    edx
  40cb92:	shl    ch,cl
  40cb94:	test   eax,0xae9b35b
  40cb99:	sub    DWORD PTR [edi],ebp
  40cb9b:	pop    es
  40cb9c:	int3   
  40cb9d:	(bad)
  40cba0:	ror    esi,cl
  40cba2:	ffree  st(0)
  40cba4:	int    0xd
  40cba6:	rcl    esp,cl
  40cba8:	rcr    ch,0xdb
  40cbab:	rcl    esp,cl
  40cbad:	ror    BYTE PTR [ebx*8+0x2ebe9e6],cl
  40cbb4:	out    0xe2,eax
  40cbb6:	pushf  
  40cbb7:	push   ecx
  40cbb8:	push   edi
  40cbb9:	pop    edx
  40cbba:	pop    eax
  40cbbb:	jle    0x40cba7
  40cbbd:	rcl    BYTE PTR [edx-0x74],0xb7
  40cbc1:	and    DWORD PTR [ecx-0x40a9afd3],edi
  40cbc7:	push   ss
  40cbc8:	ds int 0xeb
  40cbcb:	xlat   BYTE PTR ds:[ebx]
  40cbcc:	call   0xbe8:0x85e6601
  40cbd3:	ret    
  40cbd4:	mov    WORD PTR [ebp+0x45],ss
  40cbd7:	sbb    edx,DWORD PTR ds:0x3418dbde
  40cbdd:	fldcw  WORD PTR [eax]
  40cbdf:	mov    DWORD PTR [esi-0x667ddfe8],ecx
  40cbe5:	push   cs
  40cbe6:	imul   ecx,esp,0xffffff97
  40cbe9:	lds    edi,FWORD PTR [ecx]
  40cbeb:	mov    esi,0x1ad9b2c9
  40cbf0:	xor    eax,0x12117bfa
  40cbf5:	jb     0x40cc1a
  40cbf7:	enter  0x752c,0x28
  40cbfb:	idiv   DWORD PTR [eax-0x54]
  40cbfe:	inc    DWORD PTR [esi-0x58f913ce]
  40cc04:	test   al,0x35
  40cc06:	cmp    eax,0xff087f75
  40cc0b:	loop   0x40cc7d
  40cc0d:	jae    0x40cc1e
  40cc0f:	lods   eax,DWORD PTR ds:[esi]
  40cc10:	sbb    al,0x16
  40cc12:	hlt    
  40cc13:	test   eax,0xcdc19c1d
  40cc18:	or     cl,dh
  40cc1a:	dec    ebp
  40cc1b:	pop    ebp
  40cc1c:	pop    esi
  40cc1d:	mov    bl,0x7
  40cc1f:	add    ch,ch
  40cc21:	add    DWORD PTR [ecx+esi*2-0x1f],0xf2ceedac
  40cc29:	push   cs
  40cc2a:	mov    bh,0xa2
  40cc2c:	imul   DWORD PTR [eax-0x34]
  40cc2f:	aas    
  40cc30:	ss add BYTE PTR fs:[edi-0x51bf60e],bh
  40cc38:	test   BYTE PTR [esi],al
  40cc3a:	push   ebx
  40cc3b:	clc    
  40cc3c:	add    al,0xd8
  40cc3e:	push   0x4bd1ecba
  40cc43:	sbb    al,BYTE PTR [ecx-0x8]
  40cc46:	sub    DWORD PTR [edi],0xf1f44d02
  40cc4c:	out    0x9e,al
  40cc4e:	mov    WORD PTR [edx*4-0x33d5ee96],?
  40cc55:	sbb    eax,0x24dfe4d7
  40cc5a:	dec    edi
  40cc5b:	pop    es
  40cc5c:	or     ah,dh
  40cc5e:	in     eax,dx
  40cc5f:	add    eax,0x93c262de
  40cc64:	push   edi
  40cc65:	pop    esi
  40cc66:	pop    esp
  40cc67:	pop    edi
  40cc68:	mov    eax,ds:0xd45a061b
  40cc6d:	sbb    BYTE PTR [eax],ah
  40cc6f:	xor    DWORD PTR [eax],ebp
  40cc71:	dec    ebp
  40cc72:	ror    dl,1
  40cc74:	arpl   WORD PTR ds:0x5650f6f5,dx
  40cc7a:	sbb    al,0xe
  40cc7c:	mov    dh,0xc2
  40cc7e:	mov    eax,ebp
  40cc80:	pop    es
  40cc81:	ret    
  40cc82:	jecxz  0x40cc98
  40cc84:	mov    dh,0x8d
  40cc86:	jle    0x40cce7
  40cc88:	fcom   QWORD PTR [esi-0x5104f3fd]
  40cc8e:	adc    BYTE PTR [edx],cl
  40cc90:	mov    dh,0xa4
  40cc92:	bound  ebx,QWORD PTR [esi-0x46]
  40cc95:	addr16 adc eax,0x8208628c
  40cc9b:	bswap  esi
  40cc9d:	mov    bl,0x8d
  40cc9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cca0:	or     bh,dl
  40cca2:	out    dx,eax
  40cca3:	inc    ecx
  40cca4:	mov    eax,esp
  40cca6:	sub    BYTE PTR [ebp+0x56],0xb1
  40ccaa:	sbb    ecx,esp
  40ccac:	ret    
  40ccad:	add    esi,ecx
  40ccaf:	lahf   
  40ccb0:	cmp    eax,ebx
  40ccb2:	cs retf 0x25be
  40ccb6:	jbe    0x40cd36
  40ccb8:	pop    eax
  40ccb9:	shr    BYTE PTR [eax-0x7301f00b],cl
  40ccbf:	int    0x37
  40ccc1:	pop    es
  40ccc2:	mov    eax,ds:0x82d54d16
  40ccc7:	clc    
  40ccc8:	fdivr  st(4),st
  40ccca:	jae    0x40cc6c
  40cccc:	into   
  40cccd:	jle    0x40ccd9
  40cccf:	js     0x40ccf6
  40ccd1:	or     cl,BYTE PTR [edx+0x682461c]
  40ccd7:	js     0x40cceb
  40ccd9:	mov    esp,eax
  40ccdb:	sub    eax,0x37c4f01
  40cce0:	mov    al,0xd
  40cce2:	add    al,0x20
  40cce4:	shr    DWORD PTR [edi],1
  40cce6:	add    ecx,DWORD PTR [ecx]
  40cce8:	inc    ecx
  40cce9:	inc    ecx
  40ccea:	mov    cl,0x2f
  40ccec:	rcl    BYTE PTR [eax],1
  40ccee:	xchg   BYTE PTR [eax+0x11],cl
  40ccf1:	adc    ecx,DWORD PTR [ebx+0x7d474143]
  40ccf7:	repz dec esp
  40ccf9:	add    ebx,DWORD PTR [esp+eiz*2]
  40ccfc:	adc    eax,0x9b80874e
  40cd01:	in     al,dx
  40cd02:	xchg   esp,eax
  40cd03:	and    al,0x85
  40cd05:	popa   
  40cd06:	dec    ebp
  40cd07:	(bad)  
  40cd08:	push   esi
  40cd09:	cdq    
  40cd0a:	pop    eax
  40cd0b:	inc    esp
  40cd0c:	je     0x40cca3
  40cd0e:	push   0x2fb5b8c3
  40cd13:	pop    es
  40cd14:	or     BYTE PTR [eax-0x876b5e2],al
  40cd1a:	sub    DWORD PTR [eax],edx
  40cd1c:	je     0x40cd11
  40cd1e:	mov    ebx,0xb22c0236
  40cd23:	push   0x33
  40cd25:	push   cs
  40cd26:	and    ah,BYTE PTR [edi+eiz*2]
  40cd29:	inc    edx
  40cd2a:	cmp    BYTE PTR es:[ebx-0x54],bh
  40cd2e:	bound  esi,QWORD PTR [edx+0x5a]
  40cd31:	inc    ebx
  40cd32:	push   ebp
  40cd33:	xor    BYTE PTR [esi+0x2027834b],dh
  40cd39:	and    al,BYTE PTR [ebx+0x2]
  40cd3c:	inc    edx
  40cd3d:	test   ebp,edx
  40cd3f:	xchg   ebp,eax
  40cd40:	daa    
  40cd41:	jmp    0x40cd4a
  40cd43:	sahf   
  40cd44:	add    edi,DWORD PTR [esi+edi*8]
  40cd47:	mov    bh,0x39
  40cd49:	sub    cl,BYTE PTR [esi]
  40cd4b:	je     0x40cd6f
  40cd4d:	cmp    al,0x3b
  40cd4f:	std    
  40cd50:	add    esp,DWORD PTR [ecx]
  40cd52:	mov    ecx,DWORD PTR [ecx]
  40cd54:	ret    0xc60d
  40cd57:	and    cl,dl
  40cd59:	pop    edi
  40cd5a:	into   
  40cd5b:	ds jbe 0x40cd45
  40cd5e:	repz int3 
  40cd60:	xor    esp,DWORD PTR [eax+ecx*4-0x25]
  40cd64:	jl     0x40cd7a
  40cd66:	pop    ecx
  40cd67:	cmp    al,0xf3
  40cd69:	adc    DWORD PTR [ebx+0x3f],0xffffff89
  40cd6d:	add    al,BYTE PTR [ecx-0x11]
  40cd70:	add    eax,edi
  40cd72:	aam    0x75
  40cd74:	repz cmp eax,0x299ce773
  40cd7a:	rol    bl,cl
  40cd7c:	jmp    0xec989b7e
  40cd81:	mov    edi,0xd90b250
  40cd86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd87:	aas    
  40cd88:	jle    0x40cd5b
  40cd8a:	(bad)  
  40cd8b:	call   0x20ac:0x2a017064
  40cd92:	push   ebp
  40cd93:	push   es
  40cd94:	js     0x40cda1
  40cd96:	sbb    eax,0x70038d10
  40cd9b:	je     0x40cd6e
  40cd9d:	ss (bad) 
  40cd9f:	or     esi,DWORD PTR [edx+0xc5742c4]
  40cda5:	push   esp
  40cda6:	push   edi
  40cda7:	rol    DWORD PTR [ebx],1
  40cda9:	in     al,0xa0
  40cdab:	iret   
  40cdac:	std    
  40cdad:	daa    
  40cdae:	scas   al,BYTE PTR es:[edi]
  40cdaf:	fidiv  WORD PTR [ebp+eiz*2+0x7750dc30]
  40cdb6:	pop    ds
  40cdb7:	out    0x98,al
  40cdb9:	(bad)  
  40cdba:	cli    
  40cdbb:	sbb    ecx,DWORD PTR [eax]
  40cdbd:	jp     0x40cdd2
  40cdbf:	adc    al,0x4
  40cdc1:	push   ds
  40cdc2:	outs   dx,BYTE PTR ds:[esi]
  40cdc3:	pop    ss
  40cdc4:	sub    bh,al
  40cdc6:	inc    esi
  40cdc7:	adc    al,0x3f
  40cdc9:	rcr    DWORD PTR [edx-0x77],0x2f
  40cdcd:	jp     0x40cdd1
  40cdcf:	cwde   
  40cdd0:	das    
  40cdd1:	ja     0x40cdd4
  40cdd3:	sub    eax,0x2aa405ba
  40cdd8:	and    al,0xce
  40cdda:	fld    QWORD PTR [eax+edx*4+0x11]
  40cdde:	mov    al,ds:0x4511baef
  40cde3:	lock daa 
  40cde5:	pop    ds
  40cde6:	cli    
  40cde7:	pop    esi
  40cde8:	ins    DWORD PTR es:[edi],dx
  40cde9:	pop    ss
  40cdea:	mov    DWORD PTR [edx+0x52],ebp
  40cded:	std    
  40cdee:	mov    ch,0xdb
  40cdf0:	pop    eax
  40cdf1:	push   eax
  40cdf2:	(bad)  
  40cdf3:	out    dx,al
  40cdf4:	popa   
  40cdf5:	pop    ebx
  40cdf6:	mov    bh,0x89
  40cdf8:	cs dec ecx
  40cdfa:	shl    BYTE PTR ds:0x273c0d3f,0x41
  40ce01:	xor    ecx,DWORD PTR ds:0xff44ca24
  40ce07:	mov    esi,0xeb6c6492
  40ce0c:	push   eax
  40ce0d:	add    eax,0x2d61dbfd
  40ce12:	inc    ebx
  40ce13:	jl     0x40cd96
  40ce15:	(bad)  
  40ce16:	(bad)  
  40ce17:	loope  0x40ce67
  40ce19:	outs   dx,BYTE PTR ds:[esi]
  40ce1a:	xchg   ebp,eax
  40ce1b:	imul   BYTE PTR [esi+0x32]
  40ce1e:	sbb    bl,BYTE PTR [di]
  40ce21:	and    BYTE PTR [ecx+0x250c5ee1],al
  40ce27:	out    dx,al
  40ce28:	mov    ds:0x266d7240,ax
  40ce2e:	int    0xfd
  40ce30:	aaa    
  40ce31:	jp     0x40ce2b
  40ce33:	cli    
  40ce34:	xchg   DWORD PTR [esi],esi
  40ce36:	in     eax,dx
  40ce37:	sbb    DWORD PTR ds:[edi],eax
  40ce3a:	(bad)  
  40ce3b:	shl    BYTE PTR [edx-0x1f80b7dc],cl
  40ce41:	push   eax
  40ce42:	add    DWORD PTR [ecx+0x4e],eax
  40ce45:	push   ecx
  40ce46:	push   eax
  40ce47:	dec    eax
  40ce48:	pop    esp
  40ce49:	inc    edx
  40ce4a:	pop    edi
  40ce4b:	cmove  ebp,DWORD PTR [ebp+0x77]
  40ce4f:	pusha  
  40ce50:	push   0x48e56968
  40ce55:	arpl   ax,bp
  40ce57:	jns    0x40ce8e
  40ce59:	arpl   WORD PTR [di+0x5953],cx
  40ce5e:	dec    ebp
  40ce5f:	add    cl,BYTE PTR [edx+0x58]
  40ce62:	pop    edx
  40ce63:	dec    ebp
  40ce64:	addr16 sbb eax,0x65c6e7e
  40ce6a:	popa   
  40ce6b:	jbe    0x40ced4
  40ce6d:	or     eax,DWORD PTR [edi]
  40ce6f:	fsubr  QWORD PTR [ecx]
  40ce71:	out    dx,eax
  40ce72:	nop
  40ce73:	popf   
  40ce74:	jmp    0x8302f40a
  40ce79:	jl     0x40ce4c
  40ce7b:	add    BYTE PTR [edx],dh
  40ce7d:	ror    DWORD PTR [esp+ecx*1+0x3d139d42],0x6a
  40ce85:	xchg   ch,ah
  40ce87:	shl    BYTE PTR [eax],cl
  40ce89:	in     eax,dx
  40ce8a:	mov    ds:0x5bc04289,eax
  40ce8f:	out    0x67,eax
  40ce91:	(bad)  
  40ce92:	push   0xb5fa2c83
  40ce97:	mov    bh,bl
  40ce99:	mov    WORD PTR [esi-0x6905e52d],es
  40ce9f:	jnp    0x40ce72
  40cea1:	inc    edx
  40cea2:	or     ecx,DWORD PTR [edi]
  40cea4:	in     al,0xcb
  40cea6:	adc    DWORD PTR [ebp+0x2a],esi
  40cea9:	rcl    DWORD PTR [ecx+ebx*2-0x421e8cc1],1
  40ceb0:	xchg   ecx,eax
  40ceb1:	pop    eax
  40ceb2:	mov    ah,0x64
  40ceb4:	cmp    eax,DWORD PTR [ebx+0x57f6013c]
  40ceba:	pop    ebx
  40cebb:	out    0xcb,eax
  40cebd:	pusha  
  40cebe:	or     BYTE PTR [ecx],cl
  40cec0:	or     BYTE PTR [esi],ah
  40cec2:	popa   
  40cec3:	push   ds
  40cec4:	popa   
  40cec5:	daa    
  40cec6:	add    BYTE PTR [edi],0x7b
  40cec9:	leave  
  40ceca:	cmp    BYTE PTR [esi],cl
  40cecc:	mov    esp,ecx
  40cece:	outs   dx,DWORD PTR ds:[esi]
  40cecf:	push   ebx
  40ced0:	sbb    eax,eax
  40ced2:	call   0xa71a981e
  40ced7:	movsx  ecx,WORD PTR [ecx-0x6fc4df2]
  40cede:	pop    eax
  40cedf:	imul   dh
  40cee1:	jno    0x40ce6c
  40cee3:	retf   0xadd3
  40cee6:	test   DWORD PTR [ecx+ebx*8+0x3f],ecx
  40ceea:	arpl   WORD PTR [edi+0x7],bx
  40ceed:	int    0xe4
  40ceef:	push   cs
  40cef0:	dec    edx
  40cef1:	add    al,0x4
  40cef3:	push   ebp
  40cef4:	test   DWORD PTR [esp+ebp*1],eax
  40cef7:	jmp    0x23dfb4c9
  40cefc:	mov    ebp,0x5204514e
  40cf01:	mov    bl,BYTE PTR [edi-0xd]
  40cf04:	mov    al,ds:0x11ff02e4
  40cf09:	out    0x19,eax
  40cf0b:	in     eax,dx
  40cf0c:	xor    al,0xd1
  40cf0e:	sbb    BYTE PTR [ebx+esi*4],dl
  40cf11:	mov    ecx,DWORD PTR [edi]
  40cf13:	mov    ebx,eax
  40cf15:	adc    BYTE PTR [edx-0x6c],bh
  40cf18:	daa    
  40cf19:	jno    0x40cf11
  40cf1b:	ja     0x40cf25
  40cf1d:	pop    ebp
  40cf1e:	ja     0x40cf2b
  40cf20:	adc    DWORD PTR [edi],esi
  40cf22:	xor    eax,0x6f4d1524
  40cf27:	jne    0x40cf62
  40cf29:	mov    fs,eax
  40cf2b:	std    
  40cf2c:	arpl   WORD PTR [ebp+eax*4-0x60f7a37],ax
  40cf33:	sti    
  40cf34:	and    bh,BYTE PTR [eax+edx*1+0xe]
  40cf38:	or     al,0xfb
  40cf3a:	jp     0x40cf42
  40cf3c:	add    DWORD PTR [ebx+0x380b03ce],edi
  40cf42:	icebp  
  40cf43:	sub    DWORD PTR [ecx],ebx
  40cf45:	out    0x88,al
  40cf47:	stos   BYTE PTR es:[edi],al
  40cf48:	jmp    0xc347e608
  40cf4d:	mov    DWORD PTR [edi+0x6c65be18],0x8dea3c23
  40cf57:	mov    esp,0x1d006303
  40cf5c:	test   BYTE PTR [esi+eax*8-0x20],bl
  40cf60:	jl     0x40cf74
  40cf62:	push   ebp
  40cf63:	cli    
  40cf64:	push   edx
  40cf65:	std    
  40cf66:	and    al,0xc4
  40cf68:	aaa    
  40cf69:	and    DWORD PTR [ecx],ecx
  40cf6b:	xor    cl,BYTE PTR [ebx+eiz*1-0x228018ff]
  40cf72:	sahf   
  40cf73:	rcl    ebp,1
  40cf75:	jge    0x40cfb4
  40cf77:	hlt    
  40cf78:	dec    edi
  40cf79:	adc    DWORD PTR [ebp+0x50ec9],ebp
  40cf7f:	repz lea edi,[edx]
  40cf82:	loop   0x40cf99
  40cf84:	adc    ch,0x86
  40cf87:	sub    edx,DWORD PTR [esi+0x10]
  40cf8a:	pop    es
  40cf8b:	inc    BYTE PTR [ecx+0x1b5528fc]
  40cf91:	jo     0x40cf5c
  40cf93:	outs   dx,DWORD PTR ds:[esi]
  40cf94:	dec    eax
  40cf95:	mov    dh,0xc4
  40cf97:	cmp    DWORD PTR [eax-0x59a1ecb9],eax
  40cf9d:	xor    DWORD PTR [ecx],eax
  40cf9f:	add    eax,0x68980a88
  40cfa4:	mov    DWORD PTR [ebx+eiz*4-0x16a696f5],edx
  40cfab:	or     ah,dl
  40cfad:	ret    0xdd1b
  40cfb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfb1:	pop    edx
  40cfb2:	test   al,0x19
  40cfb4:	add    eax,0xd3aa3451
  40cfb9:	and    DWORD PTR [edx+0x4029f8e7],ecx
  40cfbf:	xchg   esi,eax
  40cfc0:	jecxz  0x40d019
  40cfc2:	fsubr  QWORD PTR [ebp-0x1c]
  40cfc5:	std    
  40cfc6:	xor    edi,DWORD PTR [ebp+0x6b]
  40cfc9:	sub    eax,0xea9c8297
  40cfce:	mov    ecx,0x32432a10
  40cfd3:	pop    esp
  40cfd4:	in     al,dx
  40cfd5:	(bad)  
  40cfd6:	cmp    bl,BYTE PTR [edi+0x3e]
  40cfd9:	push   0x9774e267
  40cfde:	in     eax,0x7b
  40cfe0:	call   0x17b7:0xee542e9
  40cfe7:	stc    
  40cfe8:	in     al,0x0
  40cfea:	add    al,BYTE PTR [edx]
  40cfec:	push   0x79
  40cfee:	pop    ds
  40cfef:	inc    ecx
  40cff0:	test   al,0x8
  40cff2:	shr    BYTE PTR [ebx],1
  40cff4:	xor    ecx,DWORD PTR [eax-0x1245ca39]
  40cffa:	bound  edi,QWORD PTR [esi+0x5d]
  40cffd:	int    0x3c
  40cfff:	shl    DWORD PTR [ebp+0x3fa54d88],cl
  40d005:	test   al,0x7
  40d007:	stc    
  40d008:	iret   
  40d009:	mov    bh,0xa2
  40d00b:	lds    edx,FWORD PTR [esi]
  40d00d:	push   eax
  40d00e:	call   0x54d0:0x42466bfa
  40d015:	xchg   esp,eax
  40d016:	inc    eax
  40d017:	add    al,0xeb
  40d019:	jb     0x40d025
  40d01b:	pop    edi
  40d01c:	xchg   bl,cl
  40d01e:	add    ebp,DWORD PTR [edi-0xf]
  40d021:	mov    ds:0xab5d03f4,al
  40d026:	inc    edx
  40d027:	mov    al,ds:0xc354c054
  40d02c:	stos   BYTE PTR es:[edi],al
  40d02d:	sub    ecx,ebx
  40d02f:	cmc    
  40d030:	pop    esp
  40d031:	cmp    eax,DWORD PTR [ebx-0xc]
  40d034:	fisttp DWORD PTR [ebp+0x603a9ebe]
  40d03a:	sbb    DWORD PTR [edi],0x10042438
  40d040:	push   edx
  40d041:	add    BYTE PTR [ebx-0x2dff94e1],ch
  40d047:	adc    dl,dh
  40d049:	jbe    0x40d043
  40d04b:	lds    edx,FWORD PTR es:[esi-0x12d615d5]
  40d052:	test   al,0xd
  40d054:	xchg   ebp,eax
  40d055:	push   ecx
  40d056:	mov    ebx,DWORD PTR [ecx]
  40d058:	rcr    DWORD PTR [eax+0x20],cl
  40d05b:	js     0x40d0a1
  40d05d:	mov    cl,0x8
  40d05f:	je     0x40d0cf
  40d061:	lock xchg ah,bh
  40d064:	pop    edi
  40d065:	push   esp
  40d066:	pop    ecx
  40d067:	cdq    
  40d068:	pop    es
  40d069:	daa    
  40d06a:	jle    0x40d070
  40d06c:	or     al,0x10
  40d06e:	sti    
  40d06f:	push   ds
  40d070:	outs   dx,DWORD PTR ds:[esi]
  40d071:	mov    ds:0x666a1b78,eax
  40d076:	outs   dx,BYTE PTR ds:[esi]
  40d077:	test   DWORD PTR [edx*4+0xfc1006a],ebx
  40d07e:	inc    edx
  40d07f:	add    BYTE PTR [esp],dh
  40d082:	mov    esi,?
  40d084:	mov    bh,0x6
  40d086:	dec    edi
  40d087:	or     BYTE PTR [edx],al
  40d089:	inc    edi
  40d08a:	neg    BYTE PTR [eax+0x43]
  40d08d:	or     eax,0x7e88002a
  40d092:	sbb    al,0x5d
  40d094:	sub    eax,0x7d870aa1
  40d099:	setle  BYTE PTR ds:0x315d8c27
  40d0a0:	xchg   BYTE PTR [eax-0x1c],dl
  40d0a3:	popa   
  40d0a4:	shr    BYTE PTR [eax-0x45d5f47d],0x0
  40d0ab:	lea    ebx,[eax]
  40d0ad:	not    DWORD PTR [ebp-0x5]
  40d0b0:	pop    ebp
  40d0b1:	inc    esp
  40d0b2:	mov    DWORD PTR [esi],ecx
  40d0b4:	in     al,dx
  40d0b5:	push   ecx
  40d0b6:	sti    
  40d0b7:	xchg   esi,eax
  40d0b8:	mov    esi,0xf272db70
  40d0bd:	inc    esp
  40d0be:	or     edx,esp
  40d0c0:	push   esp
  40d0c1:	(bad)  
  40d0c2:	sbb    ebx,DWORD PTR [edi+0x6a073f8d]
  40d0c8:	std    
  40d0c9:	add    edi,DWORD PTR [eax+0x3d]
  40d0cc:	sbb    BYTE PTR [ebx+0x5a],ch
  40d0cf:	jl     0x40d092
  40d0d1:	(bad)  
  40d0d2:	(bad)  
  40d0d3:	call   0xd26ab0e0
  40d0d8:	call   0x435b3bb9
  40d0dd:	xchg   ecx,eax
  40d0de:	pop    es
  40d0df:	pop    ds
  40d0e0:	pop    eax
  40d0e1:	arpl   WORD PTR [eax+0x34],dx
  40d0e4:	fs add eax,0xb713eb3c
  40d0ea:	sbb    BYTE PTR [edi+0x7b2f0401],cl
  40d0f0:	push   edx
  40d0f1:	jmp    0x1646b663
  40d0f6:	mov    eax,ds:0x551e0d63
  40d0fb:	popf   
  40d0fc:	ror    BYTE PTR [eax+edx*2],0xe5
  40d100:	fsub   DWORD PTR [ecx-0x5b]
  40d103:	cdq    
  40d104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d105:	add    dl,BYTE PTR [ebx]
  40d107:	xchg   DWORD PTR [esi+0x1],eax
  40d10a:	lea    edi,[esi+ebp*8]
  40d10d:	call   0xe14f5a15
  40d112:	jne    0x40d0c3
  40d114:	push   es
  40d115:	mov    dl,0xc9
  40d117:	repz pop ds
  40d119:	sbb    al,0xcc
  40d11b:	mov    bh,0x9
  40d11d:	arpl   WORD PTR [edi+0x38],bp
  40d120:	and    DWORD PTR gs:[ecx+0x18],esp
  40d124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d125:	in     eax,dx
  40d126:	int    0x6c
  40d128:	out    dx,al
  40d129:	inc    esp
  40d12a:	pop    ecx
  40d12b:	in     al,dx
  40d12c:	xchg   BYTE PTR [edi+0x42],al
  40d12f:	pop    ecx
  40d130:	in     al,0x5e
  40d132:	mov    bl,BYTE PTR [ebx]
  40d134:	sub    DWORD PTR [edi],ebp
  40d136:	sbb    eax,0xec112857
  40d13b:	mov    WORD PTR [eax+ebp*4],gs
  40d13e:	or     eax,0x1b7e9e69
  40d143:	ret    0x6c06
  40d146:	lods   al,BYTE PTR ds:[esi]
  40d147:	loopne 0x40d166
  40d149:	xchg   edx,eax
  40d14a:	pop    eax
  40d14b:	jae    0x40d0e3
  40d14d:	add    DWORD PTR [esi+0x4b],edi
  40d150:	jb     0x40d14d
  40d152:	loope  0x40d190
  40d154:	dec    ebx
  40d155:	pushf  
  40d156:	add    BYTE PTR [edi-0x7fc9b6ef],cl
  40d15c:	cmp    ch,BYTE PTR [esi-0x2a]
  40d15f:	dec    edx
  40d160:	mov    edx,DWORD PTR [esi+0x60]
  40d163:	sub    DWORD PTR [ebp+0x1e],ecx
  40d166:	add    eax,0xeffe6d79
  40d16b:	jmp    FWORD PTR [edx+0xf1e1f34]
  40d171:	nop
  40d172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d173:	fisttp DWORD PTR ds:0x54f56384
  40d179:	icebp  
  40d17a:	jmp    0xe2586498
  40d17f:	and    BYTE PTR [edx-0x558a2318],al
  40d185:	push   cs
  40d186:	test   BYTE PTR [ecx],dh
  40d188:	retf   
  40d189:	clc    
  40d18a:	in     eax,dx
  40d18b:	or     eax,0xe212377a
  40d190:	in     al,dx
  40d191:	(bad)  
  40d192:	stc    
  40d193:	(bad)  
  40d194:	add    eax,0x287f16e7
  40d199:	and    esp,DWORD PTR [ebx]
  40d19b:	pop    ss
  40d19c:	jp     0x40d1cb
  40d19e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d19f:	push   eax
  40d1a0:	pop    eax
  40d1a1:	lods   al,BYTE PTR ds:[esi]
  40d1a2:	enter  0xe3c5,0x9b
  40d1a6:	xor    BYTE PTR [eax+esi*1+0x23a27e5a],dh
  40d1ad:	rdpmc  
  40d1af:	jl     0x40d1ed
  40d1b1:	ret    
  40d1b2:	or     esp,ebx
  40d1b4:	cmp    DWORD PTR [eax-0x71cb7ff7],esp
  40d1ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1bb:	sbb    DWORD PTR [ebp+0x3c],ebx
  40d1be:	pop    ds
  40d1bf:	cmp    al,0x5d
  40d1c1:	mov    BYTE PTR [ebx],bh
  40d1c3:	add    eax,0xe807fd89
  40d1c8:	xchg   BYTE PTR [edx],ch
  40d1ca:	cmp    BYTE PTR [edi-0x10],cl
  40d1cd:	jbe    0x40d23b
  40d1cf:	add    DWORD PTR [ecx+0x0],0x36275507
  40d1d6:	fiadd  WORD PTR [edx]
  40d1d8:	pop    edx
  40d1d9:	add    eax,0x23931200
  40d1de:	adc    al,0x80
  40d1e0:	xchg   ebp,eax
  40d1e1:	sub    al,0xdd
  40d1e3:	ja     0x40d1f8
  40d1e5:	imul   esi,DWORD PTR [eax],0xb35cdf2d
  40d1eb:	dec    esp
  40d1ec:	ficom  DWORD PTR [ecx+eiz*8+0x77]
  40d1f0:	and    al,0xfa
  40d1f2:	in     eax,0x59
  40d1f4:	cmp    ch,BYTE PTR [ecx+0x4fab47b7]
  40d1fa:	loop   0x40d1a9
  40d1fc:	add    ecx,DWORD PTR [edx]
  40d1fe:	xchg   DWORD PTR [ebx-0x73],ebp
  40d201:	rcl    BYTE PTR [edx+eax*1-0x3c],0x4d
  40d206:	jmp    0xfe:0x135cd36c
  40d20d:	pop    eax
  40d20e:	pusha  
  40d20f:	fidivr WORD PTR [ebp+0x28e0ef13]
  40d215:	sub    dl,BYTE PTR ds:0x8e551bb3
  40d21b:	test   BYTE PTR [edx-0x6b7b22f4],dl
  40d221:	dec    edx
  40d222:	or     al,0x40
  40d224:	or     bl,ch
  40d226:	ror    BYTE PTR [eax-0xe],cl
  40d229:	mov    ebx,0x25a65fdf
  40d22e:	xor    dl,cl
  40d230:	or     al,0x46
  40d232:	aas    
  40d233:	aas    
  40d234:	jb     0x40d249
  40d236:	mov    dh,0x42
  40d238:	popf   
  40d239:	dec    esp
  40d23a:	out    0xc3,al
  40d23c:	sub    DWORD PTR [edx+0x6],esi
  40d23f:	pop    es
  40d240:	bound  ecx,QWORD PTR ds:0x41e6b325
  40d246:	xchg   BYTE PTR [ebx-0x29],bl
  40d249:	mov    bh,0x2b
  40d24b:	add    eax,0x5fad4630
  40d250:	pop    eax
  40d251:	push   ebx
  40d252:	adc    eax,0x285c5c5e
  40d257:	das    
  40d258:	push   es
  40d259:	sti    
  40d25a:	shr    DWORD PTR [ebx],cl
  40d25c:	push   ebx
  40d25d:	xor    eax,0x508ae998
  40d262:	inc    eax
  40d263:	push   ecx
  40d264:	int3   
  40d265:	xor    edx,ecx
  40d267:	mov    ds:0x11cb3477,eax
  40d26c:	out    0x38,eax
  40d26e:	mov    BYTE PTR [ebx-0x74fc7185],dl
  40d274:	xchg   DWORD PTR [di-0x7ff7],esi
  40d279:	push   0x90fe4b02
  40d27e:	sahf   
  40d27f:	adc    BYTE PTR [esi+0x13],ah
  40d282:	add    eax,0x2c6de66b
  40d287:	jo     0x40d2e2
  40d289:	pop    esp
  40d28a:	adc    BYTE PTR [edi],dh
  40d28c:	push   ss
  40d28d:	call   0xcd11:0xc426dab
  40d294:	imul   edx,DWORD PTR ds:0x6b155380,0xffffff99
  40d29b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d29c:	in     eax,0xe4
  40d29e:	pop    edi
  40d29f:	aas    
  40d2a0:	inc    ebp
  40d2a1:	lods   al,BYTE PTR ds:[esi]
  40d2a2:	jo     0x40d2e9
  40d2a4:	mov    dl,0x53
  40d2a6:	(bad)  
  40d2a7:	data16 mov dl,0x1c
  40d2aa:	fidivr WORD PTR [ebp+edx*2+0x39]
  40d2ae:	add    al,0xa4
  40d2b0:	push   esp
  40d2b1:	out    dx,eax
  40d2b2:	retf   
  40d2b3:	jnp    0x40d236
  40d2b5:	je     0x40d29d
  40d2b7:	mov    ebx,0xe64b1918
  40d2bc:	sahf   
  40d2bd:	dec    edi
  40d2be:	into   
  40d2bf:	cdq    
  40d2c0:	xor    DWORD PTR ds:0xec116b3,ecx
  40d2c6:	mov    al,0x95
  40d2c8:	mov    es,WORD PTR [esi-0x45f97e1f]
  40d2ce:	jmp    0x4e762c3a
  40d2d3:	or     bh,BYTE PTR [edx]
  40d2d5:	xchg   edi,eax
  40d2d6:	retf   
  40d2d7:	and    dl,al
  40d2d9:	jns    0x40d300
  40d2db:	jle    0x40d334
  40d2dd:	sti    
  40d2de:	xchg   BYTE PTR [eax+0x50ea130d],ah
  40d2e4:	sub    al,0x4a
  40d2e6:	pop    es
  40d2e7:	mov    ch,0x2c
  40d2e9:	mov    ebx,0x3ce0f18a
  40d2ee:	dec    esi
  40d2ef:	fadd   QWORD PTR [esi-0x12]
  40d2f2:	ins    DWORD PTR es:[edi],dx
  40d2f3:	xor    al,BYTE PTR [ecx]
  40d2f5:	jbe    0x40d29e
  40d2f7:	xor    BYTE PTR [esi+0x710712e1],al
  40d2fd:	cmp    bl,BYTE PTR [ebx+0x3b59843d]
  40d303:	xchg   ebp,eax
  40d304:	push   es
  40d305:	es push ss
  40d307:	cmp    BYTE PTR [eax],ah
  40d309:	push   ebp
  40d30a:	xchg   esp,eax
  40d30b:	and    esp,DWORD PTR [ecx]
  40d30d:	retf   
  40d30e:	inc    edx
  40d30f:	sbb    DWORD PTR [esi],eax
  40d311:	sub    BYTE PTR [esi],dh
  40d313:	out    0x33,eax
  40d315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d316:	std    
  40d317:	add    al,0x69
  40d319:	sub    bl,BYTE PTR [esp+edi*1-0x12]
  40d31d:	and    eax,0xccb928ec
  40d322:	shr    BYTE PTR [edx],1
  40d324:	ror    esi,cl
  40d326:	loopne 0x40d303
  40d328:	test   al,al
  40d32a:	lds    esp,FWORD PTR [ecx]
  40d32c:	into   
  40d32d:	iret   
  40d32e:	rcr    BYTE PTR [edx],0x29
  40d331:	jae    0x40d34e
  40d333:	jp     0x40d310
  40d335:	jns    0x40d355
  40d337:	jge    0x40d2f9
  40d339:	js     0x40d350
  40d33b:	jl     0x40d318
  40d33d:	jge    0x40d33f
  40d33f:	push   esp
  40d340:	(bad)  
  40d342:	jne    0x40d393
  40d344:	fdivrp st(2),st
  40d346:	les    edi,FWORD PTR [esi+eax*1]
  40d349:	scas   al,BYTE PTR es:[edi]
  40d34a:	repz sub al,0xf2
  40d34d:	or     BYTE PTR [esi-0x1ef5abfa],0x52
  40d354:	int    0x8e
  40d356:	pop    esi
  40d357:	ret    
  40d358:	or     edi,ebx
  40d35a:	retf   0xdc47
  40d35d:	cmp    eax,0x647e458a
  40d362:	mov    BYTE PTR [edi],bh
  40d364:	cmovge ebp,DWORD PTR [ebx+0x777065e2]
  40d36b:	xchg   BYTE PTR ds:0xf225d509,ah
  40d371:	and    ecx,ecx
  40d373:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d374:	cmp    al,BYTE PTR [edi+0x70]
  40d377:	xor    bl,BYTE PTR [eax]
  40d379:	or     eax,0xfb1cb4e2
  40d37e:	mov    BYTE PTR [ecx],bh
  40d380:	mov    esp,0x115d850d
  40d385:	test   eax,0x1e761a46
  40d38a:	cmp    eax,0x2cf188fa
  40d38f:	xlat   BYTE PTR ds:[ebx]
  40d390:	test   cl,bl
  40d392:	popa   
  40d393:	cli    
  40d394:	push   0xffffffe6
  40d396:	sbb    BYTE PTR [eax-0x6e],al
  40d399:	sti    
  40d39a:	xchg   edx,eax
  40d39b:	stc    
  40d39c:	adc    BYTE PTR [eax],al
  40d39e:	jmp    0x37129403
  40d3a3:	inc    ebx
  40d3a4:	add    eax,0x27dbba89
  40d3a9:	xchg   edx,eax
  40d3aa:	pop    ecx
  40d3ab:	adc    esp,DWORD PTR [ecx]
  40d3ad:	cmp    bl,BYTE PTR [edx+ecx*2]
  40d3b0:	add    al,0x59
  40d3b2:	fs pop edx
  40d3b4:	bound  esi,QWORD PTR [ebp+0xda54dc5]
  40d3ba:	dec    edi
  40d3bb:	pop    esp
  40d3bc:	cmp    BYTE PTR [ecx-0x20],0x9e
  40d3c0:	aas    
  40d3c1:	out    dx,al
  40d3c2:	fldcw  WORD PTR [ebx-0x2b]
  40d3c5:	jmp    0x826b:0x5479be07
  40d3cc:	mov    eax,ds:0x3c43cd0a
  40d3d1:	into   
  40d3d2:	test   eax,0x5369c68a
  40d3d7:	sub    al,0xf
  40d3d9:	mov    cl,BYTE PTR [ebp+0x38d87daf]
  40d3df:	add    eax,0x23c9fb73
  40d3e4:	xchg   al,dl
  40d3e6:	jp     0x40d370
  40d3e8:	popf   
  40d3e9:	gs mov bl,0xaf
  40d3ec:	aas    
  40d3ed:	and    al,0x1b
  40d3ef:	add    ah,ch
  40d3f1:	ror    BYTE PTR [edx+0x35],1
  40d3f4:	enter  0x8f39,0x75
  40d3f8:	push   esi
  40d3f9:	or     DWORD PTR [ecx+0x6e],eax
  40d3fc:	push   esi
  40d3fd:	ss and eax,0x7ddd0584
  40d403:	sbb    BYTE PTR [edi-0x1],al
  40d406:	xor    ecx,DWORD PTR [ecx-0x25]
  40d409:	outs   dx,DWORD PTR ds:[esi]
  40d40a:	or     eax,0xda1c9046
  40d40f:	and    al,0x73
  40d411:	out    0x9a,eax
  40d413:	cmp    esp,ebp
  40d415:	jmp    0x40d436
  40d417:	out    0xc,eax
  40d419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d41a:	mov    bh,0xe1
  40d41c:	mov    bl,0xe4
  40d41e:	mov    WORD PTR [edx],es
  40d420:	jnp    0x40d41e
  40d422:	xchg   ecx,eax
  40d423:	int3   
  40d424:	dec    esi
  40d425:	cmp    eax,0x629d1356
  40d42a:	xchg   BYTE PTR [eax-0x3898414c],ch
  40d430:	inc    esp
  40d431:	ret    0x3f36
  40d434:	fisubr WORD PTR [edx-0x42a55587]
  40d43a:	sub    al,0x38
  40d43c:	and    eax,0x1f76fd
  40d441:	or     eax,0x13a144d1
  40d446:	mov    esi,0xc86e2291
  40d44b:	cs jb  0x40d437
  40d44e:	call   0x5a4d:0xf1a02466
  40d455:	and    bl,BYTE PTR [esi]
  40d457:	sbb    eax,0xf91cb66f
  40d45c:	push   esp
  40d45d:	push   ecx
  40d45e:	pop    ss
  40d45f:	mov    al,ds:0x14f6391d
  40d464:	inc    ecx
  40d465:	mov    edi,0x1900cb9b
  40d46a:	das    
  40d46b:	dec    esp
  40d46c:	sbb    ebp,ebx
  40d46e:	sub    eax,0x38ebf7dd
  40d473:	and    al,0xeb
  40d475:	sub    cl,BYTE PTR [esi+0x41397b7a]
  40d47b:	mov    eax,0x868f1186
  40d480:	rcl    dl,cl
  40d482:	dec    eax
  40d483:	cmc    
  40d484:	push   ds
  40d485:	xchg   ebx,eax
  40d486:	adc    eax,0x3429be0e
  40d48b:	or     BYTE PTR [esi],0xc8
  40d48e:	or     BYTE PTR [esi+0x74],al
  40d491:	jecxz  0x40d44a
  40d493:	xchg   ebx,eax
  40d494:	push   es
  40d495:	sbb    eax,0x84354a20
  40d49a:	or     al,0xcb
  40d49c:	add    DWORD PTR ds:0xed850630,edi
  40d4a2:	jno    0x40d511
  40d4a4:	and    al,0x25
  40d4a6:	and    bh,BYTE PTR [esi+0x7]
  40d4a9:	push   cs
  40d4aa:	out    dx,eax
  40d4ab:	jmp    0xf7ad0abf
  40d4b0:	sub    eax,0x3c6d0215
  40d4b5:	shl    BYTE PTR [edx+eax*2+0x3f5c2447],0xa
  40d4bd:	mov    ebp,0x11858f07
  40d4c2:	dec    eax
  40d4c3:	xchg   esp,eax
  40d4c4:	(bad)  
  40d4c5:	sbb    edi,esp
  40d4c7:	cmp    DWORD PTR [eax+0x15],ecx
  40d4ca:	or     DWORD PTR [ebx-0x7aa824dd],edi
  40d4d0:	or     eax,0xdb1f2e9a
  40d4d5:	mov    ebx,0xa2c95f4e
  40d4da:	mov    bl,ch
  40d4dc:	aaa    
  40d4dd:	push   cs
  40d4de:	mov    ?,WORD PTR [eax]
  40d4e0:	push   esi
  40d4e1:	adc    BYTE PTR [esi+0xb],dl
  40d4e4:	ret    
  40d4e5:	out    0x8,al
  40d4e7:	jns    0x40d4c9
  40d4e9:	dec    bl
  40d4eb:	push   edi
  40d4ec:	xchg   esp,eax
  40d4ed:	sbb    BYTE PTR ds:0x29130bc1,dl
  40d4f3:	mov    DWORD PTR ds:0xb1572f0,0x4f3bfb25
  40d4fd:	mov    ah,0xd0
  40d4ff:	pop    ecx
  40d500:	cmc    
  40d501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d502:	dec    esi
  40d503:	repnz or eax,0x80768af4
  40d509:	(bad)  
  40d50a:	xlat   BYTE PTR ds:[ebx]
  40d50b:	push   ds
  40d50c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d50d:	dec    edx
  40d50e:	leave  
  40d50f:	into   
  40d510:	push   edi
  40d511:	pop    ebx
  40d512:	adc    BYTE PTR [eax],cl
  40d514:	mov    ebx,0x8fbb3649
  40d519:	sbb    DWORD PTR [esi-0x76f0e5c1],esi
  40d51f:	jg     0x40d502
  40d521:	cli    
  40d522:	adc    al,0x9b
  40d524:	stc    
  40d525:	lahf   
  40d526:	adc    bh,ch
  40d528:	and    ebx,edx
  40d52a:	mov    esi,0xeda658e
  40d52f:	out    0xfe,eax
  40d531:	shr    DWORD PTR [edi],cl
  40d533:	aas    
  40d534:	jge    0x40d524
  40d536:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d537:	cmp    DWORD PTR [esi-0x19b9c8cf],ecx
  40d53d:	icebp  
  40d53e:	cli    
  40d53f:	cs push 0x24
  40d542:	dec    edi
  40d543:	or     eax,0x35b8101b
  40d548:	add    BYTE PTR [ebx],0xbe
  40d54b:	adc    DWORD PTR [edi],edx
  40d54d:	mov    ds:0x3025898e,eax
  40d552:	mov    esp,0xf3ea0807
  40d557:	aas    
  40d558:	fcmove st,st(6)
  40d55a:	aaa    
  40d55b:	jp     0x40d570
  40d55d:	xchg   edx,eax
  40d55e:	out    dx,eax
  40d55f:	push   ss
  40d560:	push   ebp
  40d561:	pop    ds
  40d562:	lods   al,BYTE PTR ds:[esi]
  40d563:	adc    al,0x25
  40d565:	sbb    ch,bh
  40d567:	icebp  
  40d568:	fisub  DWORD PTR [ebp+0x2e]
  40d56b:	rol    BYTE PTR [ebx-0x70],cl
  40d56e:	or     esi,DWORD PTR [bx+0x4b]
  40d572:	push   es
  40d573:	mov    eax,ds:0x22c30627
  40d578:	mov    edi,ebx
  40d57a:	(bad)  
  40d57c:	test   eax,0x1b27a2ff
  40d581:	(bad)  
  40d583:	or     eax,0x402dfa4c
  40d588:	add    dl,BYTE PTR [edx-0x3f]
  40d58b:	loop   0x40d5b7
  40d58d:	fldcw  WORD PTR [eax]
  40d58f:	add    al,0xba
  40d591:	push   ds
  40d592:	lock pop ecx
  40d594:	idiv   BYTE PTR [edi]
  40d596:	xor    eax,0x630b7905
  40d59b:	sub    dh,BYTE PTR [ecx+edx*8]
  40d59e:	adc    DWORD PTR [eax+0x4a],0x22
  40d5a2:	into   
  40d5a3:	jns    0x40d5a6
  40d5a5:	rcl    BYTE PTR [ebp+0x20],1
  40d5a8:	cdq    
  40d5a9:	mov    al,0x77
  40d5ab:	ja     0x40d5a8
  40d5ad:	dec    BYTE PTR [edi-0x5d25cd75]
  40d5b3:	(bad)  
  40d5b4:	and    ecx,DWORD PTR [ecx]
  40d5b6:	popa   
  40d5b7:	psllq  mm3,mm3
  40d5ba:	sbb    BYTE PTR ss:[esi],cl
  40d5bd:	push   ebx
  40d5be:	out    dx,eax
  40d5bf:	xchg   ebp,eax
  40d5c0:	stc    
  40d5c1:	nop
  40d5c2:	push   es
  40d5c3:	mov    BYTE PTR [ebp+eiz*8-0x77],bl
  40d5c7:	pop    eax
  40d5c8:	outs   dx,BYTE PTR ds:[esi]
  40d5c9:	jo     0x40d604
  40d5cb:	jne    0x40d62d
  40d5cd:	add    ebp,DWORD PTR [ebx+0x75]
  40d5d0:	sub    BYTE PTR [esi+edx*4+0x7b],al
  40d5d4:	jns    0x40d5b3
  40d5d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5d7:	outs   dx,BYTE PTR ds:[esi]
  40d5d8:	(bad)  
  40d5d9:	cld    
  40d5da:	test   al,0x20
  40d5dc:	bound  ebp,QWORD PTR ds:0x1c3e3ffe
  40d5e2:	aaa    
  40d5e3:	xor    DWORD PTR [edx],esp
  40d5e5:	ss lock mov ebx,0x65f0ca81
  40d5ec:	test   al,0x24
  40d5ee:	sub    al,0x3d
  40d5f0:	(bad)  
  40d5f1:	in     eax,dx
  40d5f2:	shl    BYTE PTR [edx+edi*8+0x799c2a8a],cl
  40d5f9:	clc    
  40d5fa:	adc    DWORD PTR ds:[ebp+eiz*4+0x4b],eax
  40d5ff:	into   
  40d600:	test   BYTE PTR [ebx-0x36f1c3c3],0x35
  40d607:	mov    dh,0x7
  40d609:	test   BYTE PTR [esi],dl
  40d60b:	push   esi
  40d60c:	outs   dx,BYTE PTR ds:[esi]
  40d60d:	inc    ebp
  40d60e:	add    al,0xe5
  40d610:	les    esi,FWORD PTR [eax+0x44]
  40d613:	dec    eax
  40d614:	loopne 0x40d630
  40d616:	adc    eax,0x351ba35d
  40d61b:	cld    
  40d61c:	rcl    ch,1
  40d61e:	shr    DWORD PTR [eax-0x6cb628ee],0x6
  40d625:	mov    BYTE PTR [eax-0x65],dl
  40d628:	sbb    eax,0x7cda36c9
  40d62d:	inc    ebx
  40d62e:	not    BYTE PTR [ebx+0x279b4bf]
  40d634:	mov    eax,ds:0x89f744aa
  40d639:	pop    edi
  40d63a:	cmp    ebx,ebx
  40d63c:	daa    
  40d63d:	adc    eax,0x7f4faa45
  40d642:	dec    edx
  40d643:	sbb    al,0x7
  40d645:	jmp    0x72d44f31
  40d64a:	add    DWORD PTR [eax],ecx
  40d64c:	pop    esp
  40d64d:	mov    esi,0xd7bc3c1e
  40d652:	pop    esp
  40d653:	push   eax
  40d654:	mov    ecx,0xb1de4c25
  40d659:	popf   
  40d65a:	mov    esp,0x65be8e6d
  40d65f:	leave  
  40d660:	sbb    BYTE PTR ds:0xc7c0ffca,bl
  40d666:	dec    esi
  40d667:	inc    DWORD PTR [esi+0x70]
  40d66a:	sbb    ebx,ecx
  40d66c:	xchg   BYTE PTR ds:0x81504588,al
  40d672:	inc    edi
  40d673:	icebp  
  40d674:	jmp    0x40d62d
  40d676:	aad    0x9d
  40d678:	xchg   BYTE PTR [edi+ebp*4],bh
  40d67b:	cmc    
  40d67c:	push   cs
  40d67d:	fild   DWORD PTR [esi+0x291f5b19]
  40d683:	ret    0x6601
  40d686:	or     eax,0x2385083c
  40d68b:	cwde   
  40d68c:	push   esi
  40d68d:	mov    es,WORD PTR [edi-0x65220bbd]
  40d693:	jmp    0x48662bcc
  40d698:	dec    esp
  40d699:	jl     0x40d6b2
  40d69b:	xchg   esi,eax
  40d69c:	jno    0x40d6bb
  40d69e:	inc    esi
  40d69f:	or     BYTE PTR [esi+0x6619c855],dl
  40d6a5:	pop    esi
  40d6a6:	adc    BYTE PTR [eax+0xd],al
  40d6a9:	arpl   bp,cx
  40d6ab:	outs   dx,DWORD PTR ds:[esi]
  40d6ac:	loop   0x40d6b1
  40d6ae:	ins    DWORD PTR es:[edi],dx
  40d6af:	imul   esp,DWORD PTR [eax-0x7b],0xe
  40d6b3:	jae    0x40d6d0
  40d6b5:	inc    ebx
  40d6b6:	hlt    
  40d6b7:	stc    
  40d6b8:	push   esi
  40d6b9:	dec    esi
  40d6ba:	das    
  40d6bb:	pop    es
  40d6bc:	adc    BYTE PTR [ecx+0x27],dh
  40d6bf:	scas   al,BYTE PTR es:[edi]
  40d6c0:	and    eax,DWORD PTR [esi+0x7bf2929d]
  40d6c6:	adc    al,0x3b
  40d6c8:	push   edx
  40d6c9:	and    BYTE PTR [ebp-0x16eb4c00],0x75
  40d6d0:	das    
  40d6d1:	or     eax,0xfa5efe51
  40d6d6:	call   0xc7:0x6e0b944
  40d6dd:	push   ss
  40d6de:	add    eax,0x92a0a4c4
  40d6e3:	in     eax,dx
  40d6e4:	push   eax
  40d6e5:	sub    ebx,ebx
  40d6e7:	outs   dx,DWORD PTR ds:[esi]
  40d6e8:	sub    edx,DWORD PTR [ecx]
  40d6ea:	jbe    0x40d6ac
  40d6ec:	idiv   DWORD PTR [eax+0x72]
  40d6ef:	sti    
  40d6f0:	pop    edx
  40d6f1:	rol    BYTE PTR [ebx],0x3d
  40d6f4:	or     al,0x91
  40d6f6:	xor    BYTE PTR [eax],cl
  40d6f8:	repz in al,0xcf
  40d6fb:	sahf   
  40d6fc:	cld    
  40d6fd:	rcr    ecx,cl
  40d6ff:	iret   
  40d700:	scas   al,BYTE PTR es:[edi]
  40d701:	add    edi,DWORD PTR [edx*4-0x77766e98]
  40d708:	retf   
  40d709:	adc    al,ah
  40d70b:	int    0xd9
  40d70d:	lock jecxz 0x40d6f5
  40d710:	jmp    0x40d6f7
  40d712:	jo     0x40d716
  40d714:	(bad)  
  40d715:	int    0x3c
  40d717:	int3   
  40d718:	dec    esi
  40d719:	call   0xff845c88
  40d71e:	nop
  40d71f:	adc    al,0x7f
  40d721:	sub    ebp,DWORD PTR [ebx+0x4a]
  40d724:	nop
  40d725:	call   0xcda4ab3
  40d72a:	adc    dl,BYTE PTR [ebx+ebx*2+0x5a]
  40d72e:	adc    DWORD PTR [edx],ecx
  40d730:	in     al,0x7b
  40d732:	shr    DWORD PTR [eax-0x2],cl
  40d735:	fidivr DWORD PTR [edi+0x48a10e17]
  40d73b:	iret   
  40d73c:	icebp  
  40d73d:	leave  
  40d73e:	cmp    dh,ah
  40d740:	xchg   ah,bl
  40d742:	in     eax,0x35
  40d744:	push   0x71
  40d746:	(bad)  
  40d747:	or     eax,0x15d2b1f
  40d74c:	add    ah,BYTE PTR [esi]
  40d74e:	into   
  40d74f:	push   ds
  40d750:	fst    DWORD PTR [ebp+0x46]
  40d753:	sbb    BYTE PTR [ebx],0x57
  40d756:	sti    
  40d757:	or     edx,DWORD PTR [eax+0x49]
  40d75a:	cmp    BYTE PTR [ebp+ebp*1+0x3d2dbd8d],cl
  40d761:	or     BYTE PTR [ecx-0x75],dl
  40d764:	in     eax,0xbd
  40d766:	es fsubrp st(4),st
  40d769:	cmp    BYTE PTR [ecx+ebx*2+0x2c080d82],ah
  40d770:	push   ds
  40d771:	xchg   BYTE PTR [ecx+edx*2],ah
  40d774:	xor    cl,BYTE PTR [ecx+ebp*4]
  40d777:	adc    al,0xa5
  40d779:	inc    edi
  40d77a:	or     BYTE PTR [ebx+0x53],ah
  40d77d:	xchg   edx,eax
  40d77e:	add    BYTE PTR [edx*8-0x4bfedcfd],cl
  40d785:	adc    BYTE PTR [ebp-0x191ee2fd],cl
  40d78b:	inc    edx
  40d78c:	or     al,BYTE PTR [ebx]
  40d78e:	test   bh,dl
  40d790:	pop    ebp
  40d791:	and    BYTE PTR [esi],dh
  40d793:	in     eax,dx
  40d794:	iret   
  40d795:	dec    ebp
  40d796:	xchg   ebp,eax
  40d797:	test   DWORD PTR [ebx],esi
  40d799:	and    BYTE PTR [edx+0x3f],bl
  40d79c:	ins    BYTE PTR es:[edi],dx
  40d79d:	aas    
  40d79e:	arpl   WORD PTR [edi],bp
  40d7a0:	outs   dx,DWORD PTR ds:[esi]
  40d7a1:	push   es
  40d7a2:	pop    ecx
  40d7a3:	adc    eax,0x62f6980b
  40d7a8:	or     eax,0x330a0a0a
  40d7ad:	add    dl,ah
  40d7af:	jmp    0x3d2d:0xc0d0e2b
  40d7b6:	fnstenv [ecx+0x40]
  40d7b9:	div    bl
  40d7bb:	cmp    esi,ecx
  40d7bd:	xchg   DWORD PTR [eax],ecx
  40d7bf:	inc    ecx
  40d7c0:	push   DWORD PTR [edx+0x5f950042]
  40d7c6:	push   ecx
  40d7c7:	adc    BYTE PTR [edx-0x78],dl
  40d7ca:	fiadd  WORD PTR [esp+edx*2]
  40d7cd:	hlt    
  40d7ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7cf:	jb     0x40d7d8
  40d7d1:	cld    
  40d7d2:	push   cs
  40d7d3:	rcr    DWORD PTR [esi+0x8],cl
  40d7d6:	retf   
  40d7d7:	imul   edx,DWORD PTR [esi-0x1f],0x6e1f8ca0
  40d7de:	xchg   ebp,eax
  40d7df:	add    al,0x3
  40d7e1:	mov    al,ds:0x83cc7df2
  40d7e6:	xchg   esi,eax
  40d7e7:	ins    DWORD PTR es:[edi],dx
  40d7e8:	cmp    al,BYTE PTR ds:0xe9f9b587
  40d7ee:	aaa    
  40d7ef:	cmp    ebp,esi
  40d7f1:	jns    0x40d7f7
  40d7f3:	or     cl,BYTE PTR [ebp-0x7999d011]
  40d7f9:	in     eax,0x86
  40d7fb:	js     0x40d7f4
  40d7fd:	leave  
  40d7fe:	aam    0x3a
  40d800:	or     eax,0xa5c339fd
  40d805:	mov    ecx,fs
  40d807:	or     DWORD PTR [ebp-0x307757ae],ebx
  40d80d:	std    
  40d80e:	cmp    BYTE PTR [edi],ch
  40d810:	pop    ds
  40d811:	and    al,0xc9
  40d813:	sahf   
  40d814:	jmp    0x68fc:0xc070a06a
  40d81b:	ror    BYTE PTR [eax+0x72],1
  40d81e:	push   ecx
  40d81f:	test   eax,0x4706d303
  40d824:	ins    BYTE PTR es:[edi],dx
  40d825:	inc    eax
  40d826:	adc    ch,BYTE PTR [ecx+0x15143d1f]
  40d82c:	push   ebx
  40d82d:	adc    eax,0x54ab00e
  40d832:	sbb    DWORD PTR [edi-0x15b0d8e5],0x5dac9477
  40d83c:	jne    0x40d818
  40d83e:	and    cl,cl
  40d840:	push   ebx
  40d841:	aad    0x2
  40d843:	inc    BYTE PTR [esi]
  40d845:	dec    edx
  40d846:	retf   0xea6f
  40d849:	push   esp
  40d84a:	cmp    ebp,esp
  40d84c:	push   esi
  40d84d:	(bad)  
  40d84e:	rol    BYTE PTR [ecx+eax*2-0x101be239],cl
  40d855:	dec    eax
  40d856:	imul   BYTE PTR [ebx-0x7d]
  40d859:	add    edx,DWORD PTR [ebp+0x1e]
  40d85c:	xlat   BYTE PTR ds:[ebx]
  40d85d:	mov    WORD PTR [edx-0x54],ss
  40d860:	sub    eax,0x4bd9e68c
  40d865:	dec    eax
  40d866:	idiv   edx
  40d868:	sbb    edi,edi
  40d86a:	jno    0x40d7f6
  40d86c:	or     al,0xe9
  40d86f:	dec    esp
  40d870:	inc    ebx
  40d871:	xor    cl,BYTE PTR ds:0x2aa14f63
  40d877:	aam    0x80
  40d879:	aas    
  40d87a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d87b:	or     eax,0x914281e0
  40d880:	inc    esi
  40d881:	adc    eax,0x4f13d595
  40d886:	cld    
  40d887:	dec    ebx
  40d888:	jg     0x40d89f
  40d88a:	repnz in eax,0x8c
  40d88d:	dec    edx
  40d88e:	add    eax,0x408acf37
  40d893:	cwde   
  40d894:	adc    eax,0x6dd9e4ba
  40d899:	call   0x8f3f:0xe60542d4
  40d8a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8a1:	dec    ecx
  40d8a2:	ja     0x40d893
  40d8a4:	stos   BYTE PTR es:[edi],al
  40d8a5:	xchg   BYTE PTR [ebx],ch
  40d8a7:	test   al,0xab
  40d8a9:	inc    esi
  40d8aa:	mov    edx,esi
  40d8ac:	hlt    
  40d8ad:	mov    bh,dl
  40d8af:	add    ebx,DWORD PTR [edx+eax*4+0x2b]
  40d8b3:	fwait
  40d8b4:	cli    
  40d8b5:	in     eax,0x78
  40d8b7:	outs   dx,BYTE PTR ds:[esi]
  40d8b8:	sbb    dh,BYTE PTR [eax-0x2dcbe464]
  40d8be:	les    esp,FWORD PTR ds:0x44456887
  40d8c4:	ja     0x40d92f
  40d8c6:	push   ebx
  40d8c7:	sub    DWORD PTR [edx-0x7e],0x5f31ab43
  40d8ce:	aaa    
  40d8cf:	sub    al,0xdb
  40d8d1:	ja     0x40d8d3
  40d8d3:	add    cl,BYTE PTR [eax]
  40d8d5:	enter  0xc859,0xe2
  40d8d9:	sbb    BYTE PTR [edi-0x6ef60ae0],0x10
  40d8e0:	cmp    edx,edi
  40d8e2:	adc    bh,BYTE PTR [ecx+0x55]
  40d8e5:	inc    esi
  40d8e6:	xlat   BYTE PTR ds:[ebx]
  40d8e7:	adc    al,0xb7
  40d8e9:	and    DWORD PTR [ecx+ecx*1],ecx
  40d8ec:	in     eax,dx
  40d8ed:	sbb    DWORD PTR [edi-0x6d],ecx
  40d8f0:	in     al,0x36
  40d8f2:	mov    esp,0xe184ddce
  40d8f7:	ds out dx,eax
  40d8f9:	or     edx,DWORD PTR [edi]
  40d8fb:	invd   
  40d8fd:	ins    BYTE PTR es:[edi],dx
  40d8fe:	push   eax
  40d8ff:	repnz jecxz 0x40d8f1
  40d902:	sbb    DWORD PTR [edi],esp
  40d904:	sub    ebp,DWORD PTR [ecx]
  40d906:	aaa    
  40d907:	inc    edi
  40d908:	inc    ebp
  40d909:	sbb    eax,0x36e7f1ee
  40d90e:	retf   0x1002
  40d911:	mov    ch,ch
  40d913:	cmp    eax,0x527ffeb4
  40d918:	in     al,dx
  40d919:	add    cl,BYTE PTR [eax-0x3dfed989]
  40d91f:	in     al,dx
  40d920:	and    BYTE PTR [ebx+0x62],bl
  40d923:	jnp    0x40d943
  40d925:	aad    0x89
  40d927:	pop    es
  40d928:	adc    ebx,DWORD PTR [esi-0x3c]
  40d92b:	ins    BYTE PTR es:[edi],dx
  40d92c:	adc    DWORD PTR [ebx+0x0],ebx
  40d92f:	ds leave 
  40d931:	call   0x212dd533
  40d936:	push   ds
  40d937:	add    ebx,DWORD PTR [ebp-0x7328db10]
  40d93d:	pop    esi
  40d93e:	inc    DWORD PTR [ecx-0x79]
  40d941:	jle    0x40d976
  40d943:	inc    esi
  40d944:	sub    ah,BYTE PTR es:[esi-0x41f24df1]
  40d94b:	mov    edi,0x52d47630
  40d950:	das    
  40d951:	retf   0x1321
  40d954:	test   BYTE PTR [edi],cl
  40d956:	stos   DWORD PTR es:[edi],eax
  40d957:	pop    esp
  40d958:	mov    ebx,edi
  40d95a:	mov    dh,dl
  40d95c:	test   BYTE PTR [eax-0x5c17221b],ah
  40d962:	mov    ds:0x390a2617,eax
  40d967:	xchg   esi,eax
  40d968:	mov    bh,0x6b
  40d96a:	add    eax,0x4d79e5c1
  40d96f:	call   0x8f94a8b9
  40d974:	shl    BYTE PTR [ebp+0x2f82c2fc],cl
  40d97a:	leave  
  40d97b:	push   ebp
  40d97c:	mul    BYTE PTR [esi+0x48230884]
  40d982:	jle    0x40d99c
  40d984:	aaa    
  40d985:	fidivr DWORD PTR [eax+ebx*1+0x11]
  40d989:	sub    esi,ebx
  40d98b:	pop    ds
  40d98c:	pop    esp
  40d98d:	xchg   edx,eax
  40d98e:	push   ds
  40d98f:	xchg   edi,eax
  40d990:	or     bh,BYTE PTR [ebx+0x15]
  40d993:	add    ah,al
  40d995:	and    al,0xb
  40d997:	jl     0x40d9c5
  40d999:	xchg   ebx,eax
  40d99a:	cdq    
  40d99b:	out    dx,eax
  40d99c:	outs   dx,DWORD PTR ds:[esi]
  40d99d:	out    dx,eax
  40d99e:	xor    eax,DWORD PTR [ebx]
  40d9a0:	out    0x8b,eax
  40d9a2:	fist   WORD PTR [esi]
  40d9a4:	bound  edx,QWORD PTR [ebx+eiz*1]
  40d9a7:	not    WORD PTR [esp+ebx*2-0x1f]
  40d9ac:	and    eax,0xe75cbecd
  40d9b1:	jne    0x40da11
  40d9b3:	clc    
  40d9b4:	push   edx
  40d9b5:	adc    eax,0xf90d3e8c
  40d9ba:	inc    ecx
  40d9bb:	jno    0x40d9e5
  40d9bd:	fwait
  40d9be:	aas    
  40d9bf:	sub    al,0x7f
  40d9c1:	sub    BYTE PTR [esi+0xb],al
  40d9c4:	jg     0x40d9e6
  40d9c6:	sub    dh,al
  40d9c8:	fcmove st,st(3)
  40d9ca:	mov    dh,0x4
  40d9cc:	jo     0x40da13
  40d9ce:	add    eax,0x8bf001f2
  40d9d3:	or     eax,0x59f3e330
  40d9d8:	in     eax,dx
  40d9d9:	sub    al,0x54
  40d9db:	cmc    
  40d9dc:	push   ebp
  40d9dd:	mov    ?,edi
  40d9df:	popf   
  40d9e0:	pushf  
  40d9e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9e2:	inc    ebp
  40d9e3:	pusha  
  40d9e4:	push   ebx
  40d9e5:	push   edx
  40d9e6:	cmc    
  40d9e7:	lahf   
  40d9e8:	pop    edx
  40d9e9:	xchg   ecx,eax
  40d9ea:	push   eax
  40d9eb:	inc    ebp
  40d9ec:	dec    edi
  40d9ed:	(bad)  
  40d9ee:	xor    al,0x1b
  40d9f0:	pop    ebp
  40d9f1:	xchg   esi,eax
  40d9f2:	or     cl,BYTE PTR ds:0x6714c42
  40d9f8:	cmp    al,0xfe
  40d9fa:	xor    dl,cl
  40d9fc:	fimul  WORD PTR [ecx+0x416b3833]
  40da02:	and    BYTE PTR [ecx],al
  40da04:	or     ch,ah
  40da06:	out    dx,eax
  40da07:	jno    0x40da76
  40da09:	adc    dl,BYTE PTR [eax+esi*1-0x2c]
  40da0d:	push   cs
  40da0e:	adc    al,0x8b
  40da10:	adc    eax,0x1581032e
  40da15:	es test eax,0xa1a66d9
  40da1b:	stos   BYTE PTR es:[edi],al
  40da1c:	push   edx
  40da1d:	psrlw  mm3,QWORD PTR [ebx+edi*4+0x1014be9e]
  40da25:	loopne 0x40da74
  40da27:	lods   al,BYTE PTR ds:[esi]
  40da28:	xchg   esi,eax
  40da29:	adc    edi,DWORD PTR [ecx]
  40da2b:	mov    eax,ds:0x9745b560
  40da30:	dec    eax
  40da31:	aas    
  40da32:	loopne 0x40d9f8
  40da34:	mov    ecx,DWORD PTR [ebp+edi*8-0x36]
  40da38:	fcomp  st(2)
  40da3a:	dec    ebp
  40da3b:	jno    0x40da52
  40da3d:	pop    ds
  40da3e:	mov    DWORD PTR [eax],ecx
  40da40:	inc    eax
  40da41:	jbe    0x40dabe
  40da43:	sbb    BYTE PTR [ebx-0x7aeae9c9],bh
  40da49:	int    0x3d
  40da4b:	call   0x61c18449
  40da50:	jne    0x40da53
  40da52:	out    0x8b,eax
  40da54:	loopne 0x40daa8
  40da56:	sbb    DWORD PTR [ebx-0x53],0x1598a208
  40da5d:	push   ebx
  40da5e:	cmc    
  40da5f:	adc    DWORD PTR [ebx+ebp*8-0x6cd44c68],edx
  40da66:	adc    dl,BYTE PTR [ebx+0x5a28439b]
  40da6c:	test   DWORD PTR [ebx-0x368479da],esp
  40da72:	int    0x77
  40da74:	push   ds
  40da75:	fucom  st(5)
  40da77:	sub    ebp,edi
  40da79:	iret   
  40da7a:	inc    ecx
  40da7b:	add    esi,DWORD PTR [esi+0x39]
  40da7e:	call   0x562a1d99
  40da83:	mov    bl,0x5e
  40da85:	out    0xee,al
  40da87:	js     0x40da92
  40da89:	jge    0x40da88
  40da8b:	mov    cl,BYTE PTR [edi+esi*1]
  40da8e:	or     ebp,edx
  40da90:	sub    al,0x46
  40da92:	imul   edx,esp,0x2afd2749
  40da98:	ds aad 0xd6
  40da9b:	sub    edi,DWORD PTR [edi+0x7ef3351d]
  40daa1:	xlat   BYTE PTR ds:[ebx]
  40daa2:	jl     0x40da5c
  40daa4:	inc    ebx
  40daa5:	pop    edi
  40daa6:	in     al,dx
  40daa7:	ror    ch,1
  40daa9:	adc    esi,edx
  40daab:	xor    BYTE PTR [eax],dh
  40daad:	bswap  edi
  40daaf:	inc    edx
  40dab0:	and    bh,BYTE PTR [ebx-0x2d707ced]
  40dab6:	or     BYTE PTR [ebp-0x2b18c2be],bh
  40dabc:	sbb    al,0x92
  40dabe:	dec    esi
  40dabf:	loop   0x40db06
  40dac1:	or     edi,DWORD PTR [eax]
  40dac3:	or     eax,0x6ce95152
  40dac8:	shr    DWORD PTR [esi],1
  40daca:	pop    esi
  40dacb:	ins    BYTE PTR es:[edi],dx
  40dacc:	xchg   ebx,eax
  40dacd:	enter  0x2ba,0x59
  40dad1:	or     dl,BYTE PTR [eax+0xa]
  40dad4:	mov    DWORD PTR [ecx-0x20],ebx
  40dad7:	mov    ecx,0x3afc55d2
  40dadc:	push   edi
  40dadd:	mov    bh,0x58
  40dadf:	dec    edx
  40dae0:	inc    ebx
  40dae1:	mov    al,0xf2
  40dae3:	sbb    dh,BYTE PTR ds:0xb9481003
  40dae9:	push   esp
  40daea:	imul   edx,DWORD PTR [eax+0x4a],0x5b985f8e
  40daf1:	cmp    BYTE PTR [edi],0x55
  40daf4:	in     al,0x58
  40daf6:	dec    edx
  40daf7:	repnz jecxz 0x40db46
  40dafa:	pop    ebp
  40dafb:	pop    ss
  40dafc:	and    ah,BYTE PTR [eax+eax*1+0x5a]
  40db00:	sub    ch,ah
  40db02:	fild   WORD PTR [ebx]
  40db04:	add    DWORD PTR [ebp-0x2e],ecx
  40db07:	jb     0x40db59
  40db09:	xor    eax,0xb5e2489c
  40db0e:	dec    esp
  40db0f:	leave  
  40db10:	loop   0x40dae2
  40db12:	adc    ch,BYTE PTR [edx+0x12]
  40db15:	aas    
  40db16:	xchg   ebx,eax
  40db17:	dec    esp
  40db18:	sub    dl,ah
  40db1a:	aam    0xcb
  40db1c:	adc    eax,DWORD PTR [ebx+0x17]
  40db1f:	lahf   
  40db20:	loopne 0x40db7f
  40db22:	adc    DWORD PTR [ebp-0x13],0xffffffd5
  40db26:	pop    esi
  40db27:	cdq    
  40db28:	in     al,0x4f
  40db2a:	call   FWORD PTR [edx+edi*8+0x37]
  40db2e:	add    eax,0xe5ec0c88
  40db33:	and    eax,0xc7866d70
  40db38:	jg     0x40db1a
  40db3a:	xor    eax,0x762b93ff
  40db3f:	hlt    
  40db40:	add    DWORD PTR [ebp+0x1a],ecx
  40db43:	loopne 0x40db3d
  40db45:	cdq    
  40db46:	inc    ebp
  40db47:	inc    esi
  40db48:	inc    edx
  40db49:	popf   
  40db4a:	or     eax,0xbbb20206
  40db4f:	or     esi,DWORD PTR [eax]
  40db51:	cmp    esi,DWORD PTR [esp+edi*2]
  40db54:	sub    eax,0xd122020a
  40db59:	in     eax,0x70
  40db5b:	sahf   
  40db5c:	sbb    DWORD PTR [ecx+ebp*8],eax
  40db5f:	mov    eax,DWORD PTR [ebx]
  40db61:	and    bl,dl
  40db63:	aaa    
  40db64:	mov    ds:0x7f3e39e7,eax
  40db69:	dec    ebx
  40db6a:	jmp    0x40db8d
  40db6c:	hlt    
  40db6d:	jmp    0x3738eef6
  40db72:	fbstp  TBYTE PTR [eax]
  40db74:	lock push 0xf500a69e
  40db7a:	cwde   
  40db7b:	pop    ds
  40db7c:	adc    eax,0xcb01f48b
  40db81:	rcr    ecx,1
  40db83:	nop
  40db84:	and    DWORD PTR ds:0xa5c689e4,ecx
  40db8a:	sub    eax,0x7c7e1fab
  40db8f:	std    
  40db90:	in     eax,dx
  40db91:	mov    dh,BYTE PTR [eax]
  40db93:	cmp    al,0xd4
  40db95:	sbb    eax,0x5e2df21f
  40db9a:	jo     0x40db67
  40db9c:	in     eax,dx
  40db9d:	hlt    
  40db9e:	es pusha 
  40dba0:	pusha  
  40dba1:	jne    0x40dbb5
  40dba3:	pop    eax
  40dba4:	adc    al,bh
  40dba6:	jle    0x40dc05
  40dba8:	data16 mov ds:0x9d4ee25f,al
  40dbae:	fst    QWORD PTR ds:[ecx]
  40dbb1:	aas    
  40dbb2:	in     eax,dx
  40dbb3:	sti    
  40dbb4:	dec    eax
  40dbb5:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40dbb7:	pusha  
  40dbb8:	mov    ebp,0x5686a755
  40dbbd:	(bad)  
  40dbbe:	or     BYTE PTR [edx+ebx*2+0x39],ch
  40dbc2:	xchg   esp,eax
  40dbc3:	xchg   edi,eax
  40dbc4:	lds    edi,FWORD PTR [bp+si+0x17f9]
  40dbc9:	mov    esi,0x3fcea220
  40dbce:	rcr    ch,1
  40dbd0:	ja     0x40dc34
  40dbd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbd3:	nop
  40dbd4:	sahf   
  40dbd5:	or     DWORD PTR ds:[edi+ebp*8-0x1b],edx
  40dbda:	gs push ebp
  40dbdc:	call   0x5c617c0e
  40dbe1:	jns    0x40dc61
  40dbe3:	stos   BYTE PTR es:[edi],al
  40dbe4:	mov    ss,WORD PTR [edi+0x24]
  40dbe7:	and    BYTE PTR [esi],ah
  40dbe9:	pop    ecx
  40dbea:	pop    ebx
  40dbeb:	inc    ebp
  40dbec:	sbb    eax,0x12d63b28
  40dbf1:	push   ebp
  40dbf2:	push   cs
  40dbf3:	gs push esi
  40dbf5:	aas    
  40dbf6:	or     ebx,DWORD PTR [esi]
  40dbf8:	outs   dx,DWORD PTR ds:[esi]
  40dbf9:	inc    ebx
  40dbfa:	and    ch,BYTE PTR [edx+0x4b8c1a1d]
  40dc00:	adc    edx,DWORD PTR [ebx]
  40dc02:	push   es
  40dc03:	push   ebp
  40dc04:	pop    ds
  40dc05:	and    DWORD PTR [ebx],eax
  40dc07:	sbb    eax,DWORD PTR [edx]
  40dc09:	inc    esp
  40dc0a:	sbb    eax,DWORD PTR [ebp+0x5e4022df]
  40dc10:	ins    DWORD PTR es:[edi],dx
  40dc11:	dec    eax
  40dc12:	mov    ebp,0x132598da
  40dc17:	int    0x53
  40dc19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc1a:	mov    esi,DWORD PTR [esi-0x268bf5b8]
  40dc20:	jns    0x40dbc9
  40dc22:	inc    edi
  40dc23:	xor    BYTE PTR [eax-0x7b],al
  40dc26:	dec    DWORD PTR [ecx]
  40dc28:	jb     0x40dc2f
  40dc2a:	fwait
  40dc2b:	mov    edi,cs
  40dc2d:	cmovp  esi,DWORD PTR ds:0xd884b0c7
  40dc34:	fst    DWORD PTR [edi+edx*1]
  40dc37:	ins    BYTE PTR es:[edi],dx
  40dc38:	fldenv [edx]
  40dc3a:	idiv   BYTE PTR [ebx+edi*8]
  40dc3d:	fsub   QWORD PTR [edi]
  40dc3f:	add    DWORD PTR [esi-0x672bf521],ebx
  40dc45:	test   DWORD PTR [edi+0x4b],ecx
  40dc48:	push   cs
  40dc49:	cwde   
  40dc4a:	mov    dl,0xcb
  40dc4c:	mov    dh,0x3f
  40dc4e:	retf   0xdb25
  40dc51:	dec    ax
  40dc53:	inc    ebx
  40dc54:	frstor [edx]
  40dc56:	cmp    al,0xe7
  40dc58:	xor    eax,0x372d3721
  40dc5d:	dec    ebp
  40dc5e:	leave  
  40dc5f:	in     eax,dx
  40dc60:	lea    edi,[ebx]
  40dc62:	add    BYTE PTR [ecx-0x2],ah
  40dc65:	shr    BYTE PTR [esi],0x9
  40dc68:	ss xchg ecx,eax
  40dc6a:	push   ss
  40dc6b:	mov    esp,0x195e7086
  40dc70:	inc    esi
  40dc71:	pushf  
  40dc72:	enter  0xaaf7,0xb0
  40dc76:	inc    ebx
  40dc77:	out    0x5,eax
  40dc79:	add    BYTE PTR [ebx-0x1a6f93d3],cl
  40dc7f:	stos   BYTE PTR es:[edi],al
  40dc80:	and    eax,DWORD PTR [ebp+0x295e2192]
  40dc86:	popf   
  40dc87:	xor    eax,0x18ec92
  40dc8c:	push   edx
  40dc8d:	xchg   edx,eax
  40dc8e:	jmp    0x40dca3
  40dc90:	(bad)  [ebx+0x1e]
  40dc93:	mov    al,ds:0xc2457a76
  40dc98:	shl    DWORD PTR [eax],1
  40dc9a:	fsub   QWORD PTR [esi]
  40dc9c:	fsubr  st(5),st
  40dc9e:	mov    al,ds:0x2fb89747
  40dca3:	mov    ebx,0xb6f18269
  40dca8:	add    BYTE PTR [edx-0x3be1adea],al
  40dcae:	data16 sub BYTE PTR [edx-0x7caffc0d],bh
  40dcb5:	or     eax,0x242848a3
  40dcba:	adc    eax,DWORD PTR [edx+0x5b]
  40dcbd:	mov    BYTE PTR [esp+eax*1-0x4f],al
  40dcc1:	test   al,0x10
  40dcc3:	mov    ss,WORD PTR ds:0x7a3fccce
  40dcc9:	daa    
  40dcca:	add    DWORD PTR [ebx+edi*4-0x38c9e024],ecx
  40dcd1:	sbb    bl,ah
  40dcd3:	test   eax,0x84937de9
  40dcd8:	inc    ecx
  40dcd9:	js     0x40dcc8
  40dcdb:	fimul  WORD PTR [edx+0x45]
  40dcde:	xchg   esp,eax
  40dcdf:	arpl   WORD PTR [esi+ebx*8],di
  40dce2:	cmp    cl,BYTE PTR [ebx+0x46a7100]
  40dce8:	jne    0x40dc6c
  40dcea:	cld    
  40dceb:	(bad)  
  40dcec:	dec    esi
  40dced:	daa    
  40dcee:	xchg   edx,eax
  40dcef:	add    eax,DWORD PTR [esi]
  40dcf1:	sbb    al,0xda
  40dcf3:	push   es
  40dcf4:	or     BYTE PTR [esi+0xb],cl
  40dcf7:	push   es
  40dcf8:	cld    
  40dcf9:	xor    eax,0x4ff3020d
  40dcfe:	add    cl,BYTE PTR [edx]
  40dd00:	sti    
  40dd01:	test   eax,0xbaac166c
  40dd06:	add    al,BYTE PTR [ecx]
  40dd08:	jb     0x40dcef
  40dd0a:	mov    al,ds:0x5635dfea
  40dd0f:	fcom   DWORD PTR [esi+0x486ce2f9]
  40dd15:	adc    BYTE PTR [esi+0xa06584f],al
  40dd1b:	add    al,0xf
  40dd1d:	sub    al,0x25
  40dd1f:	sbb    eax,0x3236dbb2
  40dd24:	push   ebx
  40dd25:	xchg   ch,bl
  40dd27:	test   BYTE PTR [ebp+0x28],dl
  40dd2a:	push   es
  40dd2b:	in     eax,0xd6
  40dd2d:	add    dl,BYTE PTR [edx-0x17]
  40dd30:	inc    esp
  40dd31:	aam    0x4f
  40dd33:	ror    DWORD PTR [eax],cl
  40dd35:	lods   eax,DWORD PTR ds:[esi]
  40dd36:	test   DWORD PTR [ebx-0x44c201ae],ecx
  40dd3c:	push   ebx
  40dd3d:	in     eax,dx
  40dd3e:	push   ss
  40dd3f:	aad    0x31
  40dd41:	adc    edx,DWORD PTR [edx+edx*1+0x104cd96a]
  40dd48:	cs cli 
  40dd4a:	je     0x40ddc6
  40dd4c:	and    eax,0x60e86fdc
  40dd51:	and    al,0xc4
  40dd53:	repz inc edx
  40dd55:	repnz ficomp DWORD PTR [edi-0xb77cff6]
  40dd5c:	aad    0x2e
  40dd5e:	push   ss
  40dd5f:	fldcw  WORD PTR [esi]
  40dd61:	pop    edi
  40dd62:	ficomp DWORD PTR [ecx+0x10]
  40dd65:	aam    0xd7
  40dd67:	sub    eax,DWORD PTR [ecx+edx*1+0x54]
  40dd6b:	or     eax,0x7d4d8767
  40dd70:	xchg   ebx,eax
  40dd71:	mov    WORD PTR gs:[eax-0x2f],cs
  40dd75:	nop
  40dd76:	pop    ds
  40dd77:	add    esi,0xffffff87
  40dd7a:	pop    ebp
  40dd7b:	mov    ch,0x87
  40dd7d:	pusha  
  40dd7e:	into   
  40dd7f:	out    0x66,al
  40dd81:	xor    eax,0xb2cf0bf8
  40dd86:	jb     0x40dd93
  40dd88:	in     eax,0x7e
  40dd8a:	jns    0x40dd9b
  40dd8c:	push   0xffffffed
  40dd8e:	test   DWORD PTR [eax],edi
  40dd90:	icebp  
  40dd91:	(bad)  
  40dd92:	sti    
  40dd93:	popf   
  40dd94:	int    0x15
  40dd96:	loope  0x40de14
  40dd98:	and    al,0x15
  40dd9a:	setb   BYTE PTR [eax-0x8]
  40dd9e:	sbb    esp,ebx
  40dda0:	pushf  
  40dda1:	sub    BYTE PTR [edx+0xe],bh
  40dda4:	cmp    BYTE PTR [eax+0x2f],ch
  40dda7:	push   edi
  40dda8:	repnz adc dl,BYTE PTR [ebx-0x64ffa410]
  40ddaf:	hlt    
  40ddb0:	in     al,dx
  40ddb1:	push   ebp
  40ddb2:	pop    ss
  40ddb3:	push   cs
  40ddb4:	sbb    eax,0x3639ad5d
  40ddb9:	inc    esp
  40ddba:	adc    al,0x1c
  40ddbc:	jmp    0xba8523d1
  40ddc1:	push   ss
  40ddc2:	popf   
  40ddc3:	sbb    BYTE PTR [edx-0x77],cl
  40ddc6:	or     bl,BYTE PTR [eax]
  40ddc8:	test   al,0x3b
  40ddca:	adc    al,0x2a
  40ddcc:	icebp  
  40ddcd:	adc    DWORD PTR ds:0x1d5a975b,edi
  40ddd3:	push   eax
  40ddd4:	and    DWORD PTR [edx],ecx
  40ddd6:	sbb    BYTE PTR [eax+0x640fe837],0x84
  40dddd:	dec    ebp
  40ddde:	or     eax,0x917f7f80
  40dde3:	and    eax,0xd3f96720
  40dde8:	test   BYTE PTR [ebx-0x1],cl
  40ddeb:	pop    eax
  40ddec:	pop    es
  40dded:	or     al,0xd
  40ddef:	and    al,0xc4
  40ddf1:	jge    0x40de00
  40ddf3:	xchg   edx,eax
  40ddf4:	iret   
  40ddf5:	add    bl,bh
  40ddf7:	into   
  40ddf8:	(bad)  
  40ddfa:	pop    ecx
  40ddfb:	(bad)  
  40ddfc:	shl    BYTE PTR [ebx],1
  40ddfe:	sbb    bh,0x3c
  40de01:	sbb    BYTE PTR [esi],al
  40de03:	add    BYTE PTR [eax+0x2ef08c0a],0x6
  40de0a:	jns    0x40dd8d
  40de0c:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40de0e:	lsl    ebp,WORD PTR [ebx+0x40]
  40de12:	or     DWORD PTR [edx],eax
  40de14:	push   ds
  40de15:	pop    esp
  40de16:	push   cs
  40de17:	xchg   DWORD PTR [edi],ecx
  40de19:	jb     0x40de28
  40de1b:	test   al,0x3
  40de1d:	jmp    FWORD PTR [edx]
  40de1f:	jmp    0x9d4c:0xd518192
  40de26:	out    0x30,al
  40de28:	mov    ebx,0x71c7ae8
  40de2d:	cs jae 0x40de1f
  40de30:	xor    bh,BYTE PTR [edx+esi*8+0x2ddbb01a]
  40de37:	and    ebp,0x7a
  40de3a:	adc    cl,BYTE PTR [esp+eiz*4-0x5]
  40de3e:	adc    DWORD PTR ds:0x149f8b65,ebp
  40de44:	int    0x85
  40de46:	mov    esi,0x511e4819
  40de4b:	fistp  DWORD PTR [ebx-0x75a24351]
  40de51:	lods   eax,DWORD PTR ds:[esi]
  40de52:	or     eax,0x41fe8709
  40de57:	and    ebx,ecx
  40de59:	or     BYTE PTR [ecx+0x3b666327],ch
  40de5f:	pop    edi
  40de60:	in     al,0x37
  40de62:	pop    ebp
  40de63:	and    esi,DWORD PTR [ecx]
  40de65:	daa    
  40de66:	or     edx,DWORD PTR [ebx+0x38]
  40de69:	sub    eax,0xac2f131c
  40de6e:	mov    gs,ecx
  40de70:	push   ecx
  40de71:	es push esi
  40de73:	lods   eax,DWORD PTR es:[esi]
  40de75:	iret   
  40de76:	fistp  WORD PTR [ebx]
  40de78:	push   ebp
  40de79:	adc    al,0xa9
  40de7b:	inc    ebp
  40de7c:	adc    DWORD PTR [edx],ecx
  40de7e:	daa    
  40de7f:	sbb    eax,0xe64d02e2
  40de84:	cmp    al,0x5
  40de86:	dec    esp
  40de87:	sub    BYTE PTR [ecx],cl
  40de89:	sub    BYTE PTR [edi+ebp*1+0x7eb485d],0x8f
  40de91:	add    BYTE PTR [ebp-0x516a1b1d],ch
  40de97:	stos   DWORD PTR es:[edi],eax
  40de98:	jb     0x40deaf
  40de9a:	mov    ah,0x9e
  40de9c:	dec    esi
  40de9d:	(bad)  
  40de9e:	fs sub al,0x13
  40dea1:	mov    DWORD PTR [ebp+0x3],edx
  40dea4:	dec    bh
  40dea6:	dec    ebx
  40dea7:	dec    ebp
  40dea8:	pop    esp
  40dea9:	and    BYTE PTR [ebp+0x1e],ah
  40deac:	jb     0x40deb1
  40deae:	xchg   esi,eax
  40deaf:	adc    BYTE PTR [edi],0x96
  40deb2:	out    dx,eax
  40deb3:	retf   
  40deb4:	out    0x33,al
  40deb6:	inc    eax
  40deb7:	shr    bl,0xcb
  40deba:	cli    
  40debb:	jae    0x40defe
  40debd:	sub    DWORD PTR [ecx-0x1089b07d],edi
  40dec3:	loopne 0x40df25
  40dec5:	sub    eax,0xfda11f8e
  40deca:	mov    WORD PTR [ecx-0x5be68317],cs
  40ded0:	jecxz  0x40deed
  40ded2:	mov    ah,0x14
  40ded4:	and    BYTE PTR [ecx],al
  40ded6:	mov    ecx,0x644a392f
  40dedb:	inc    edi
  40dedc:	out    dx,eax
  40dedd:	inc    ebx
  40dede:	das    
  40dedf:	xchg   ebp,eax
  40dee0:	or     al,0x3
  40dee2:	mov    WORD PTR [ecx],ss
  40dee4:	pushf  
  40dee5:	add    DWORD PTR ds:0xc78573fd,eax
  40deeb:	ins    BYTE PTR es:[edi],dx
  40deec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40deed:	mov    edx,0x3b901a0e
  40def2:	sub    BYTE PTR [edi-0x15],cl
  40def5:	xor    ah,BYTE PTR [esi]
  40def7:	sbb    esp,edx
  40def9:	cmc    
  40defa:	adc    al,0xe8
  40defc:	ds sti 
  40defe:	jecxz  0x40df56
  40df00:	test   DWORD PTR [ecx],esp
  40df02:	inc    ebx
  40df03:	or     edx,DWORD PTR [ebx]
  40df05:	add    cl,BYTE PTR [esi]
  40df07:	push   cs
  40df08:	test   BYTE PTR [eax+0x8],bh
  40df0b:	mov    ?,WORD PTR [eax+eiz*8]
  40df0e:	out    0x29,eax
  40df10:	dec    esi
  40df11:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40df13:	adc    eax,DWORD PTR [edi]
  40df15:	adc    al,0xe3
  40df17:	adc    al,0x7b
  40df19:	fnstenv [edx]
  40df1b:	outs   dx,BYTE PTR ds:[esi]
  40df1c:	sbb    DWORD PTR [edi],ebx
  40df1e:	dec    eax
  40df1f:	adc    eax,0x23a8ec20
  40df24:	lods   al,BYTE PTR ds:[esi]
  40df25:	test   BYTE PTR [ecx-0x674371b],dl
  40df2b:	dec    ecx
  40df2c:	aam    0x40
  40df2e:	jb     0x40df46
  40df30:	or     al,0x66
  40df32:	mov    ebx,0x42a74db8
  40df37:	ins    BYTE PTR es:[edi],dx
  40df38:	ret    
  40df39:	and    eax,0x52f31e5a
  40df3e:	add    BYTE PTR [edi+0x42],ch
  40df41:	ret    
  40df42:	int    0xe8
  40df44:	rol    dl,cl
  40df46:	push   esp
  40df47:	gs std 
  40df49:	mov    ds:0x212fa511,eax
  40df4e:	inc    esp
  40df4f:	pop    ds
  40df50:	mov    ebp,0x70cb9bdd
  40df55:	retf   
  40df56:	and    BYTE PTR [edi-0xd],al
  40df59:	dec    ebx
  40df5a:	adc    DWORD PTR [edx+edx*2+0x52],edi
  40df5e:	add    DWORD PTR [edi+0x2e],ecx
  40df61:	sub    eax,0x7879ca95
  40df66:	call   0x810a:0xf9ac2234
  40df6d:	sbb    ah,BYTE PTR [esi]
  40df6f:	bound  ecx,QWORD PTR [ebp+ebx*2+0x4f0ede28]
  40df76:	fcmovbe st,st(1)
  40df78:	push   0xffffffa3
  40df7a:	(bad)  
  40df7b:	pop    esp
  40df7c:	xor    cl,BYTE PTR [edx+0x4c]
  40df7f:	dec    ebp
  40df80:	aaa    
  40df81:	mov    edx,0x683cd86c
  40df86:	(bad)  
  40df87:	jg     0x40dfb5
  40df89:	cmp    edx,DWORD PTR [ebx]
  40df8b:	and    DWORD PTR fs:[edi+edi*1],edi
  40df8f:	mov    ds:0x6a7a7428,eax
  40df94:	pop    esp
  40df95:	aaa    
  40df96:	and    DWORD PTR [esp+edi*8],eax
  40df99:	call   DWORD PTR [ebx+0x73]
  40df9c:	xchg   ebx,eax
  40df9d:	lds    ebp,FWORD PTR [edx-0x490ee4ee]
  40dfa3:	fst    DWORD PTR [eax]
  40dfa5:	in     al,0x58
  40dfa7:	and    DWORD PTR [ebx],eax
  40dfa9:	sbb    al,0x59
  40dfab:	pop    esp
  40dfac:	pop    ebp
  40dfad:	sbb    DWORD PTR [edx+0x2f],esi
  40dfb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfb1:	pop    ss
  40dfb2:	pop    eax
  40dfb3:	adc    BYTE PTR [edx+0x55a61f5a],dl
  40dfb9:	cmp    bl,BYTE PTR [ebx]
  40dfbb:	push   eax
  40dfbc:	adc    al,0xcf
  40dfbe:	cmp    eax,0x15aef676
  40dfc3:	lock and eax,0x14b718c7
  40dfc9:	loop   0x40dfa0
  40dfcb:	push   0x4142a58
  40dfd0:	sbb    al,0xc5
  40dfd2:	or     DWORD PTR [eax],edi
  40dfd4:	push   ss
  40dfd5:	das    
  40dfd6:	ret    0xe42e
  40dfd9:	push   ecx
  40dfda:	xlat   BYTE PTR ds:[ebx]
  40dfdb:	sti    
  40dfdc:	into   
  40dfdd:	addr16 pushf 
  40dfdf:	(bad)  
  40dfe0:	je     0x40e010
  40dfe2:	(bad)  
  40dfe3:	ud0    eax,DWORD PTR ds:0x52862770
  40dfea:	pop    ecx
  40dfeb:	sti    
  40dfec:	test   BYTE PTR [ecx+0xb],bh
  40dfef:	adc    edx,edx
  40dff1:	daa    
  40dff2:	js     0x40e00c
  40dff4:	sbb    eax,DWORD PTR [edx+0x612119eb]
  40dffa:	sub    DWORD PTR [esi+0x48e0fee5],edx
  40e000:	xchg   edx,eax
  40e001:	mov    WORD PTR [edx-0x683567f3],?
  40e007:	sub    esi,DWORD PTR [ebx]
  40e009:	xchg   edx,eax
  40e00a:	xchg   DWORD PTR [edx+0x5919d50],esi
  40e010:	mov    ?,WORD PTR gs:[ecx+ecx*4]
  40e014:	cs cmp eax,0x823b5050
  40e01a:	test   DWORD PTR [bx-0x80],edi
  40e01e:	cld    
  40e01f:	mov    dl,0x84
  40e021:	mov    ah,0xc
  40e023:	inc    esi
  40e024:	pop    ss
  40e025:	and    ch,ch
  40e027:	sbb    al,0xa7
  40e029:	sbb    eax,0xf09468e
  40e02e:	mov    esp,esi
  40e030:	add    ebx,DWORD PTR [edi]
  40e032:	push   edx
  40e033:	pop    ebp
  40e034:	cwde   
  40e035:	imul   esi,DWORD PTR [esp+ecx*4],0x51561f70
  40e03c:	call   0x5c016e73
  40e041:	dec    ebp
  40e042:	add    DWORD PTR [edi+0xa],eax
  40e045:	(bad)  
  40e046:	leave  
  40e047:	xchg   esi,eax
  40e048:	jp     0x40e083
  40e04a:	jle    0x40e065
  40e04c:	mov    al,0xd
  40e04e:	jb     0x40e0cd
  40e050:	sub    BYTE PTR [ecx],al
  40e052:	(bad)  
  40e054:	or     BYTE PTR [ecx+edx*2+0x7fa6fd24],al
  40e05b:	neg    DWORD PTR [esi+0x4c]
  40e05e:	push   es
  40e05f:	xchg   esi,eax
  40e060:	xchg   esi,eax
  40e061:	inc    ecx
  40e062:	mov    dl,BYTE PTR [ebx-0x5a]
  40e065:	or     BYTE PTR [eax+0x4],dl
  40e068:	(bad)  
  40e069:	xchg   esi,eax
  40e06a:	addr16 pop edx
  40e06c:	add    dh,BYTE PTR [esi-0x36fbfe31]
  40e072:	xor    DWORD PTR [edi],0x35ecb611
  40e078:	lahf   
  40e079:	mov    ah,0x11
  40e07b:	sub    bl,BYTE PTR [ecx+0xe7c9e91]
  40e081:	pop    edi
  40e082:	mov    ecx,0x8f33e909
  40e087:	pop    esi
  40e088:	test   al,0x40
  40e08a:	fmul   QWORD PTR [ecx-0x35a092bc]
  40e090:	nop
  40e091:	add    eax,DWORD PTR [edx-0x28]
  40e094:	pop    edx
  40e095:	and    BYTE PTR [ebx+0x4f],bl
  40e098:	inc    ecx
  40e099:	das    
  40e09a:	add    BYTE PTR [esp+eiz*8+0x2e562e27],ch
  40e0a1:	mov    al,ds:0x1c36f4e8
  40e0a6:	out    0x1c,al
  40e0a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0a9:	push   esp
  40e0aa:	dec    ecx
  40e0ab:	push   es
  40e0ac:	mov    edx,0x37c9c375
  40e0b1:	in     al,0x3e
  40e0b3:	pop    edx
  40e0b4:	aam    0xf4
  40e0b6:	dec    ebx
  40e0b7:	push   0xffffff83
  40e0b9:	out    0xb3,eax
  40e0bb:	xchg   ebp,eax
  40e0bc:	adc    al,0x32
  40e0be:	fldcw  WORD PTR [edi+0x200352b4]
  40e0c4:	pop    esi
  40e0c5:	lock mov cl,0xd4
  40e0c8:	(bad)  
  40e0c9:	mov    ah,0xbe
  40e0cb:	sub    DWORD PTR [ebp-0x5df5cd85],ebx
  40e0d1:	sub    al,0xe6
  40e0d3:	jg     0x40e0de
  40e0d5:	cmp    eax,0x429bc7fe
  40e0da:	out    0x20,eax
  40e0dc:	fisttp DWORD PTR [eax-0x4d11312e]
  40e0e2:	jecxz  0x40e11b
  40e0e4:	scas   eax,DWORD PTR es:[edi]
  40e0e5:	ins    DWORD PTR es:[edi],dx
  40e0e6:	mov    ebp,ecx
  40e0e8:	leave  
  40e0e9:	stos   DWORD PTR es:[edi],eax
  40e0ea:	mov    edi,0x6519a971
  40e0ef:	pop    edx
  40e0f0:	(bad)  [ebp-0x60321229]
  40e0f6:	dec    ebx
  40e0f7:	stos   DWORD PTR es:[edi],eax
  40e0f8:	inc    esi
  40e0f9:	push   ss
  40e0fa:	xor    BYTE PTR [ebx],dl
  40e0fc:	pop    ebx
  40e0fd:	mov    esp,0x38ba139c
  40e102:	xor    eax,DWORD PTR [ebp-0x5a0ef9f6]
  40e108:	inc    ebx
  40e109:	add    ebx,DWORD PTR [esi+0x50bf009]
  40e10f:	call   0xcae2f4d
  40e114:	pop    esi
  40e115:	push   esp
  40e116:	and    eax,0x546bc90a
  40e11b:	dec    eax
  40e11c:	sbb    dh,BYTE PTR [ebx+0x58]
  40e11f:	push   ebx
  40e120:	out    dx,al
  40e121:	pushf  
  40e122:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e123:	inc    ecx
  40e124:	dec    esi
  40e125:	jmp    0xd3f6eb47
  40e12a:	mov    dl,0x8c
  40e12c:	xchg   edi,eax
  40e12d:	pushf  
  40e12e:	dec    ecx
  40e12f:	repz jl 0x40e184
  40e132:	sbb    edx,0xeb82f314
  40e138:	pop    ss
  40e139:	sti    
  40e13a:	dec    esi
  40e13b:	imul   edx,esi,0x7eb16006
  40e141:	sbb    DWORD PTR [edi],eax
  40e143:	pusha  
  40e144:	sub    al,0x2
  40e146:	je     0x40e146
  40e148:	and    al,0xc0
  40e14a:	sbb    eax,0xd45daad9
  40e14f:	inc    edx
  40e150:	std    
  40e151:	ror    edx,cl
  40e153:	mov    esi,0x74084322
  40e158:	aad    0x98
  40e15a:	and    BYTE PTR [edi-0x2d],dl
  40e15d:	mov    dh,0xbb
  40e15f:	pop    eax
  40e160:	lahf   
  40e161:	jp     0x40e147
  40e163:	push   ss
  40e164:	add    BYTE PTR ds:0xdb3e46d5,bl
  40e16a:	jge    0x40e177
  40e16c:	jg     0x40e0ef
  40e16e:	xor    eax,0xe44dd9e5
  40e173:	ret    
  40e174:	cmp    BYTE PTR [ebx],ah
  40e176:	xor    al,0x35
  40e178:	mov    eax,ds:0xd335b77
  40e17d:	sti    
  40e17e:	push   ebx
  40e17f:	add    dl,BYTE PTR [edi]
  40e181:	adc    DWORD PTR [esi+0x2eb32cfe],esp
  40e187:	or     DWORD PTR [eax+0x2a991e61],ebp
  40e18d:	lahf   
  40e18e:	sahf   
  40e18f:	dec    edi
  40e190:	jl     0x40e12c
  40e192:	xchg   edi,eax
  40e193:	scas   eax,DWORD PTR es:[edi]
  40e194:	xchg   ebp,eax
  40e195:	jl     0x40e1e8
  40e197:	add    eax,0xf6afeac9
  40e19c:	pop    esp
  40e19d:	mov    dl,0x73
  40e19f:	pop    eax
  40e1a0:	inc    esp
  40e1a1:	call   0x9180:0xb7391292
  40e1a8:	test   eax,0xfaf31de8
  40e1ad:	mov    ah,0xca
  40e1af:	push   eax
  40e1b0:	inc    esp
  40e1b1:	leave  
  40e1b2:	mov    WORD PTR [ebx+ebp*2+0x31],es
  40e1b6:	cli    
  40e1b7:	les    ecx,FWORD PTR [eax]
  40e1b9:	pop    ds
  40e1ba:	adc    BYTE PTR [ecx],bl
  40e1bc:	jmp    0x45bd:0xec625e50
  40e1c3:	mov    dh,0xe0
  40e1c5:	pop    edx
  40e1c6:	sti    
  40e1c7:	scas   eax,DWORD PTR es:[edi]
  40e1c8:	and    DWORD PTR [bx+si+0x41],ecx
  40e1cc:	int    0xe3
  40e1ce:	adc    ebp,DWORD PTR [ebp+0x5d]
  40e1d1:	and    eax,0x4017f2cd
  40e1d6:	fimul  WORD PTR [esi+0x49a51186]
  40e1dc:	stos   BYTE PTR es:[edi],al
  40e1dd:	dec    edi
  40e1de:	push   0xe40e488d
  40e1e3:	xor    eax,0x49057108
  40e1e8:	cmp    BYTE PTR [ecx*4+0x4b430072],dl
  40e1ef:	add    bl,dh
  40e1f1:	cmp    al,0x8a
  40e1f3:	add    dh,bh
  40e1f5:	daa    
  40e1f6:	lock jmp 0x40e209
  40e1f9:	sar    bh,cl
  40e1fb:	push   edi
  40e1fc:	sub    eax,0xea198644
  40e201:	mov    ecx,0xe116d971
  40e206:	fidivr WORD PTR [edi+0x5f]
  40e209:	jp     0x40e1ad
  40e20b:	je     0x40e19e
  40e20d:	test   al,0xb3
  40e20f:	dec    ebp
  40e210:	fld    TBYTE PTR [eax+0x742be0b]
  40e216:	mov    cl,0x20
  40e218:	shr    DWORD PTR [ebx-0x3],cl
  40e21b:	fidiv  DWORD PTR [esi]
  40e21d:	mov    ch,0xe1
  40e21f:	xor    DWORD PTR fs:[edi],edi
  40e222:	(bad)  
  40e223:	pop    ds
  40e224:	push   ebp
  40e225:	psubusb mm3,QWORD PTR [edi]
  40e228:	or     ebx,DWORD PTR [esi-0x21]
  40e22b:	or     al,0x70
  40e22d:	cwde   
  40e22e:	fld    TBYTE PTR [edx+0x2126992]
  40e234:	jp     0x40e25c
  40e236:	dec    esp
  40e237:	lods   al,BYTE PTR ds:[esi]
  40e238:	or     eax,0x6f1e8613
  40e23d:	sahf   
  40e23e:	pop    ebp
  40e23f:	out    dx,al
  40e240:	or     bl,dh
  40e242:	mov    ecx,0x2c9950ac
  40e247:	or     esi,DWORD PTR [ecx+0x4ea28f09]
  40e24d:	or     eax,0x9126042e
  40e252:	pop    edi
  40e253:	xor    esp,DWORD PTR [ebp+0x38133620]
  40e259:	cmp    BYTE PTR [ebx],al
  40e25b:	lods   al,BYTE PTR ds:[esi]
  40e25c:	adc    BYTE PTR [ebp+0x4f],bl
  40e25f:	push   es
  40e260:	and    bh,BYTE PTR [ecx]
  40e262:	sub    al,0xdf
  40e264:	ja     0x40e212
  40e266:	lea    edx,[eax-0x185e6d26]
  40e26c:	fcomp  DWORD PTR [esi]
  40e26e:	add    eax,DWORD PTR [ecx]
  40e270:	push   ss
  40e271:	icebp  
  40e272:	(bad)  
  40e273:	scas   al,BYTE PTR es:[edi]
  40e274:	cmp    eax,0x9f371864
  40e279:	push   0x5f
  40e27b:	sti    
  40e27c:	or     edi,edi
  40e27e:	mov    esi,0x110b4259
  40e283:	(bad)  
  40e284:	sti    
  40e285:	push   ss
  40e286:	(bad)  
  40e287:	ins    DWORD PTR es:[edi],dx
  40e288:	sahf   
  40e289:	fwait
  40e28a:	add    edx,DWORD PTR [esi-0x1a]
  40e28d:	push   cs
  40e28e:	sahf   
  40e28f:	out    dx,eax
  40e290:	shr    BYTE PTR [ebp-0x5fcf1279],cl
  40e296:	aam    0xd7
  40e298:	pusha  
  40e299:	add    esp,esp
  40e29b:	test   DWORD PTR [esi],edx
  40e29d:	cmp    al,0x14
  40e29f:	add    eax,0x14e1fa0d
  40e2a4:	mov    ds:0xf0cb4ef7,al
  40e2a9:	es push edi
  40e2ab:	mov    ebp,0x480f289b
  40e2b0:	mov    BYTE PTR ds:0xe9a96809,ah
  40e2b6:	xchg   ecx,eax
  40e2b7:	dec    esi
  40e2b8:	jecxz  0x40e2c0
  40e2ba:	scas   al,BYTE PTR es:[edi]
  40e2bb:	scas   al,BYTE PTR es:[edi]
  40e2bc:	jle    0x40e326
  40e2be:	adc    ebp,DWORD PTR [ebp+0x14]
  40e2c1:	ds sar cl,1
  40e2c4:	sub    BYTE PTR [edx+edi*8-0x48],0x17
  40e2c9:	push   esp
  40e2ca:	xor    dl,BYTE PTR [ecx-0x61]
  40e2cd:	mov    ah,0xce
  40e2cf:	sub    eax,0x9d378c43
  40e2d4:	popa   
  40e2d5:	into   
  40e2d6:	into   
  40e2d7:	pop    es
  40e2d8:	or     BYTE PTR [edi],al
  40e2da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2db:	neg    BYTE PTR [ecx+0xb53c7aa]
  40e2e1:	(bad)  
  40e2e2:	jmp    0x40e34e
  40e2e4:	mov    BYTE PTR [edi],bl
  40e2e6:	cld    
  40e2e7:	add    eax,0x2dfb7f55
  40e2ec:	fst    DWORD PTR ds:0x7b3addfa
  40e2f2:	lahf   
  40e2f3:	inc    edx
  40e2f4:	or     eax,0xdda4b56c
  40e2f9:	cmp    bl,BYTE PTR [ecx]
  40e2fb:	pop    ecx
  40e2fc:	dec    esp
  40e2fd:	(bad)  
  40e2ff:	add    cl,BYTE PTR [eax-0x69]
  40e302:	jne    0x40e34e
  40e304:	adc    DWORD PTR [edi],ebp
  40e306:	mov    WORD PTR [ebx+0x79d32e0a],fs
  40e30c:	adc    DWORD PTR [ebx+0x4b7a475d],esp
  40e312:	popf   
  40e313:	mov    edi,0xd2055b7c
  40e318:	xchg   esi,esp
  40e31a:	sbb    bh,bh
  40e31c:	int3   
  40e31d:	iret   
  40e31e:	xchg   ecx,eax
  40e31f:	cmp    esi,DWORD PTR [edi+0x4c]
  40e322:	and    DWORD PTR [ebp+eiz*1-0x62],ecx
  40e326:	aam    0x79
  40e328:	mov    ds:0x5a74c9fc,al
  40e32d:	cwde   
  40e32e:	mov    ?,WORD PTR [ebx]
  40e330:	or     eax,0x84ce6f36
  40e335:	adc    eax,0xedd33d69
  40e33a:	mov    ebp,0xc273ad06
  40e33f:	jo     0x40e379
  40e341:	iret   
  40e342:	pop    DWORD PTR [ecx+0x7f]
  40e345:	imul   eax,DWORD PTR es:[ebx],0xffffff93
  40e349:	xchg   ebp,eax
  40e34a:	inc    eax
  40e34b:	enter  0xf0f9,0xf9
  40e34f:	sbb    esi,esi
  40e351:	sahf   
  40e352:	fnstcw WORD PTR [eax]
  40e354:	jbe    0x40e361
  40e356:	lds    eax,FWORD PTR [eax]
  40e358:	push   eax
  40e359:	push   cs
  40e35a:	sbb    al,0xf
  40e35c:	(bad)  
  40e35d:	cmp    BYTE PTR [edi],ah
  40e35f:	cld    
  40e360:	scas   eax,DWORD PTR es:[edi]
  40e361:	div    BYTE PTR [ebx]
  40e363:	and    al,0xc5
  40e365:	mov    WORD PTR [edi+0x12],cs
  40e368:	lods   al,BYTE PTR ds:[esi]
  40e369:	pop    edx
  40e36a:	pop    esi
  40e36b:	scas   al,BYTE PTR es:[edi]
  40e36c:	jb     0x40e3c4
  40e36e:	push   ebp
  40e36f:	pop    edx
  40e370:	leave  
  40e371:	jl     0x40e37f
  40e373:	outs   dx,DWORD PTR ds:[esi]
  40e374:	scas   eax,DWORD PTR es:[edi]
  40e375:	inc    ebx
  40e376:	bswap  esi
  40e378:	mov    DWORD PTR [ebp+0x5b],esi
  40e37b:	leave  
  40e37c:	inc    ebx
  40e37d:	cs dec ecx
  40e37f:	push   esi
  40e380:	test   DWORD PTR [eax+0xf34c446],esi
  40e386:	adc    ecx,esp
  40e388:	out    0x86,eax
  40e38a:	mov    ds:0xc9cf4a5c,eax
  40e38f:	data16 mov dl,0x42
  40e392:	push   es
  40e393:	stc    
  40e394:	mov    WORD PTR [ecx-0x74],ds
  40e397:	xchg   ebx,eax
  40e398:	or     eax,0x6d3a2b96
  40e39d:	ins    DWORD PTR es:[edi],dx
  40e39e:	into   
  40e39f:	test   al,0x8d
  40e3a1:	sbb    DWORD PTR [ebx],0xffffffad
  40e3a4:	xchg   edx,eax
  40e3a5:	add    eax,0x3430af9e
  40e3aa:	mov    al,0x56
  40e3ac:	or     eax,esp
  40e3ae:	cmp    DWORD PTR [esi+ebp*1-0x63],ebp
  40e3b2:	call   0x335:0x9e6c084f
  40e3b9:	jge    0x40e3e7
  40e3bb:	in     al,dx
  40e3bc:	pop    esp
  40e3bd:	std    
  40e3be:	or     eax,0x12fb9f85
  40e3c3:	adc    bl,BYTE PTR [eax+0x24]
  40e3c6:	push   ds
  40e3c7:	retf   
  40e3c8:	rol    BYTE PTR [esi+ebp*4],1
  40e3cb:	push   ss
  40e3cc:	and    cl,BYTE PTR [ebx-0x4e30a3c6]
  40e3d2:	in     al,dx
  40e3d3:	inc    ebx
  40e3d4:	push   es
  40e3d5:	(bad)  
  40e3d6:	jl     0x40e3b0
  40e3d8:	dec    ebp
  40e3d9:	repz stc 
  40e3db:	sub    BYTE PTR [eax-0x53ac07c8],bl
  40e3e1:	add    al,ch
  40e3e3:	and    bh,dh
  40e3e5:	inc    ecx
  40e3e6:	xchg   esp,eax
  40e3e7:	push   0x59
  40e3e9:	xor    bh,BYTE PTR [edi+0x50f02e41]
  40e3ef:	imul   esi,DWORD PTR [ebx],0x469ca7
  40e3f5:	mov    ebp,0x82690f4c
  40e3fa:	daa    
  40e3fb:	loopne 0x40e40a
  40e3fd:	aas    
  40e3fe:	repnz or eax,0xede5284e
  40e404:	inc    esi
  40e405:	and    bh,ah
  40e407:	in     al,dx
  40e408:	push   ebx
  40e409:	shr    ah,cl
  40e40b:	inc    ebx
  40e40c:	sub    DWORD PTR [ebp+0x600110c0],edi
  40e412:	sbb    ecx,DWORD PTR [edi+0x48]
  40e415:	retf   
  40e416:	and    BYTE PTR [edx],al
  40e418:	adc    BYTE PTR [esi-0x40],al
  40e41b:	nop
  40e41c:	pop    esi
  40e41d:	mov    al,0x1a
  40e41f:	fs cs dec edx
  40e422:	mov    tr0,edx
  40e425:	sub    esp,DWORD PTR [esi]
  40e427:	dec    esp
  40e428:	es dec edx
  40e42a:	xor    cl,al
  40e42c:	add    eax,0xe571298a
  40e431:	loopne 0x40e410
  40e433:	(bad)  
  40e435:	leave  
  40e436:	jb     0x40e456
  40e438:	into   
  40e439:	xchg   DWORD PTR [esi],ecx
  40e43b:	lea    ebx,[ebx]
  40e43d:	and    dl,bl
  40e43f:	scas   eax,DWORD PTR es:[edi]
  40e440:	outs   dx,BYTE PTR ds:[esi]
  40e441:	(bad)  
  40e443:	mov    edx,?
  40e445:	adc    dh,BYTE PTR [edi+0x1]
  40e448:	cmp    al,0xb3
  40e44a:	jl     0x40e44f
  40e44c:	jp     0x40e486
  40e44e:	ja     0x40e444
  40e450:	and    edi,esp
  40e452:	xor    DWORD PTR [edi+0x0],0xffffffe5
  40e456:	xor    dl,BYTE PTR [ebx]
  40e458:	jno    0x40e47d
  40e45a:	mov    ch,0x1e
  40e45c:	add    BYTE PTR [ecx-0x49d89c80],cl
  40e462:	retf   0x39e
  40e465:	sub    edi,eax
  40e467:	push   cs
  40e468:	mov    al,al
  40e46a:	jg     0x40e481
  40e46c:	add    dh,dh
  40e46e:	push   ss
  40e46f:	sbb    BYTE PTR [edx-0x12dbcf15],0xd5
  40e476:	aas    
  40e477:	ds push esi
  40e479:	sub    BYTE PTR [ecx],0x1a
  40e47c:	jecxz  0x40e4c5
  40e47e:	adc    ecx,ebx
  40e480:	xor    bh,BYTE PTR [edx+0x82bc735]
  40e486:	leave  
  40e487:	and    al,0x54
  40e489:	inc    ebx
  40e48a:	dec    ecx
  40e48b:	test   DWORD PTR [esi],esp
  40e48d:	dec    eax
  40e48e:	inc    ebx
  40e48f:	aaa    
  40e490:	lea    esp,[edi+0x1d]
  40e493:	push   ecx
  40e494:	mov    gs,WORD PTR [ebx]
  40e496:	push   edx
  40e497:	icebp  
  40e498:	add    edx,DWORD PTR [eax+0x3c]
  40e49b:	imul   edx,DWORD PTR [esi+0x3],0x890f1fe3
  40e4a2:	int    0x82
  40e4a4:	sub    esi,esp
  40e4a6:	or     al,0x15
  40e4a8:	(bad)
  40e4ab:	add    cl,BYTE PTR [ecx+0x305f1cf7]
  40e4b1:	jge    0x40e44e
  40e4b3:	adc    edx,DWORD PTR [edx-0x2c]
  40e4b6:	xchg   ebx,eax
  40e4b7:	repz or cl,0x64
  40e4bb:	sti    
  40e4bc:	call   0xaf4a2304
  40e4c1:	sub    bl,BYTE PTR [eax+0x2e09c322]
  40e4c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4c8:	or     BYTE PTR [edx+edi*1+0x18],ch
  40e4cc:	aas    
  40e4cd:	or     BYTE PTR [eax+0x39],al
  40e4d0:	dec    edx
  40e4d1:	mov    cs,WORD PTR [eax+0x1d]
  40e4d4:	dec    esi
  40e4d5:	sub    al,BYTE PTR [ebx+0x4c]
  40e4d8:	or     al,0xdc
  40e4da:	jae    0x40e509
  40e4dc:	lds    ebp,FWORD PTR [ebx+0x21]
  40e4df:	cvtpi2ps xmm2,QWORD PTR [ecx-0xd]
  40e4e3:	in     eax,dx
  40e4e4:	fld    TBYTE PTR ds:0x9cdca286
  40e4ea:	shl    ebp,0x96
  40e4ed:	or     ecx,DWORD PTR ds:0x5bd017bd
  40e4f3:	in     al,dx
  40e4f4:	add    dh,BYTE PTR [eax]
  40e4f6:	cli    
  40e4f7:	and    al,0xcb
  40e4f9:	adc    eax,DWORD PTR [esi]
  40e4fb:	add    DWORD PTR ds:0xf8e7588a,esi
  40e501:	dec    esp
  40e502:	or     DWORD PTR [eax],0x7d5b880f
  40e508:	retf   
  40e509:	adc    eax,DWORD PTR [ecx+0x6cd0249c]
  40e50f:	add    edx,ebx
  40e511:	cmp    al,0x26
  40e513:	dec    edi
  40e514:	mov    ds,WORD PTR [esi+0x482e30be]
  40e51a:	call   0x7d6fc94
  40e51f:	inc    eax
  40e520:	adc    eax,0xf3e79c02
  40e525:	adc    BYTE PTR [edi],bh
  40e527:	es inc eax
  40e529:	ret    
  40e52a:	adc    DWORD PTR [ebx],eax
  40e52c:	jge    0x40e54e
  40e52e:	es push 0xffffffcc
  40e531:	dec    edx
  40e532:	mov    edi,0xba82722c
  40e537:	dec    eax
  40e538:	push   0x45315d1c
  40e53d:	shr    DWORD PTR [ecx+0xe],cl
  40e540:	rol    bl,1
  40e542:	test   eax,0x9fea7e15
  40e547:	or     BYTE PTR [edi+0xe31c320],dl
  40e54d:	into   
  40e54e:	jg     0x40e560
  40e550:	test   ebp,edx
  40e552:	outs   dx,DWORD PTR ds:[esi]
  40e553:	add    eax,0x6ceccbdd
  40e558:	rol    BYTE PTR [edx+0x6],0xae
  40e55c:	xor    bh,BYTE PTR [edi]
  40e55e:	mov    esp,0xce5b3f98
  40e563:	cld    
  40e564:	in     al,dx
  40e565:	jae    0x40e515
  40e567:	xchg   BYTE PTR ds:0x2f607c,bl
  40e56d:	daa    
  40e56e:	inc    ebp
  40e56f:	and    eax,0xcbc4d08d
  40e574:	xor    ebp,ebx
  40e576:	add    al,0x43
  40e578:	(bad)  
  40e579:	stc    
  40e57a:	xchg   ebx,eax
  40e57b:	push   esp
  40e57c:	mov    cl,0x85
  40e57e:	(bad)  
  40e57f:	and    BYTE PTR [esi],ch
  40e581:	sar    bh,1
  40e583:	cdq    
  40e584:	repz in eax,dx
  40e586:	mov    bl,0x53
  40e588:	icebp  
  40e589:	mov    ds:0x8e07050d,eax
  40e58e:	pop    edi
  40e58f:	in     al,dx
  40e590:	test   DWORD PTR [eax+esi*8-0x8868d6c],ecx
  40e597:	pop    ss
  40e598:	sbb    al,0xe5
  40e59a:	stc    
  40e59b:	cs inc eax
  40e59d:	test   al,0xf
  40e59f:	(bad)  
  40e5a0:	out    dx,eax
  40e5a1:	lock add dh,BYTE PTR [esi+0x3]
  40e5a5:	xchg   ebx,ebx
  40e5a7:	popa   
  40e5a8:	cmp    BYTE PTR [esi+0xd],dh
  40e5ab:	sahf   
  40e5ac:	stos   BYTE PTR es:[edi],al
  40e5ad:	data16 out dx,al
  40e5af:	adc    dl,ch
  40e5b1:	fild   QWORD PTR [esi+0xcf0b985]
  40e5b7:	sbb    ah,BYTE PTR [ecx-0x5]
  40e5ba:	out    0x89,eax
  40e5bc:	lahf   
  40e5bd:	stc    
  40e5be:	dec    esp
  40e5bf:	ja     0x40e634
  40e5c1:	xchg   ecx,eax
  40e5c2:	or     al,0xe8
  40e5c4:	scas   al,BYTE PTR es:[edi]
  40e5c5:	jne    0x40e57a
  40e5c7:	adc    DWORD PTR [esi],ebx
  40e5c9:	or     al,0x1b
  40e5cc:	cmp    ch,dl
  40e5ce:	jo     0x40e58f
  40e5d0:	leave  
  40e5d1:	fld    st(6)
  40e5d3:	icebp  
  40e5d4:	ds stos BYTE PTR es:[edi],al
  40e5d6:	js     0x40e5d1
  40e5d8:	mov    edx,0x4c8fe45
  40e5dd:	pop    edi
  40e5de:	xchg   esi,eax
  40e5df:	clc    
  40e5e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5e1:	jnp    0x40e605
  40e5e3:	pop    ebp
  40e5e4:	mov    ebp,0xb4df45bd
  40e5e9:	and    bl,BYTE PTR [edi+esi*2+0x6f]
  40e5ed:	mov    dh,bh
  40e5ef:	and    al,0x93
  40e5f1:	(bad)
  40e5f4:	mov    edx,0xc8a880c6
  40e5f9:	push   ecx
  40e5fa:	or     DWORD PTR [edx-0x467adb0],ebx
  40e600:	add    BYTE PTR [ebp+0xd],0xb1
  40e604:	and    ebx,DWORD PTR [esi+0xc]
  40e607:	cmp    ecx,DWORD PTR [eax-0x7f1764e7]
  40e60d:	fistp  DWORD PTR [di+0x5e]
  40e611:	mov    DWORD PTR [edx-0xe],esp
  40e614:	out    0xa5,al
  40e616:	test   DWORD PTR [esi-0x1d],esp
  40e619:	pop    ds
  40e61a:	cld    
  40e61b:	stc    
  40e61c:	aas    
  40e61d:	inc    ebp
  40e61e:	jmp    0x40e627
  40e620:	loop   0x40e626
  40e622:	in     eax,dx
  40e623:	or     eax,0xa7de85ed
  40e628:	pop    ds
  40e629:	mov    gs,WORD PTR [ecx]
  40e62b:	jnp    0x40e629
  40e62d:	jl     0x40e674
  40e62f:	mov    bl,0xd3
  40e631:	push   ebx
  40e632:	jbe    0x40e5f1
  40e634:	sbb    al,0x5f
  40e636:	std    
  40e637:	out    0xd8,eax
  40e639:	hlt    
  40e63a:	xor    esi,DWORD PTR [ecx-0x7b33ecfb]
  40e640:	inc    esi
  40e641:	xchg   ebx,eax
  40e642:	xchg   BYTE PTR [edx],bl
  40e644:	shr    ebp,cl
  40e646:	test   eax,0xbefcda89
  40e64b:	cld    
  40e64c:	cmp    ebx,DWORD PTR [ecx-0x65]
  40e64f:	ficomp WORD PTR [eax]
  40e651:	das    
  40e652:	cdq    
  40e653:	sti    
  40e654:	arpl   WORD PTR [bp+si],bp
  40e657:	repz sti 
  40e659:	nop
  40e65a:	cli    
  40e65b:	xchg   edi,eax
  40e65c:	push   ds
  40e65d:	call   DWORD PTR [edi-0x1aeb3e50]
  40e663:	in     eax,dx
  40e664:	das    
  40e665:	sub    eax,DWORD PTR [edi]
  40e667:	popf   
  40e668:	inc    ecx
  40e669:	rcl    ebx,1
  40e66b:	sbb    DWORD PTR [ecx+0x67aabc0b],ecx
  40e671:	mov    bh,0x97
  40e673:	push   0x2537c69f
  40e678:	and    esp,DWORD PTR [ecx]
  40e67a:	jp     0x40e6a6
  40e67c:	lea    ebp,ds:0x9e9f5c32
  40e682:	dec    ebp
  40e683:	sub    cl,BYTE PTR [ebx]
  40e685:	in     al,dx
  40e686:	sub    edx,esi
  40e688:	or     al,0x53
  40e68a:	imul   edx,DWORD PTR [ebp+0x309d59cf],0x55
  40e691:	add    BYTE PTR [ebx+0x10],dl
  40e694:	jae    0x40e6b8
  40e696:	xchg   ebp,eax
  40e697:	inc    eax
  40e698:	mov    esi,0xd11ccf97
  40e69d:	push   ecx
  40e69e:	loope  0x40e65f
  40e6a0:	dec    esi
  40e6a1:	icebp  
  40e6a2:	cmp    al,0x9e
  40e6a4:	xchg   edi,eax
  40e6a5:	sub    ebx,DWORD PTR [esi]
  40e6a7:	(bad)  
  40e6a8:	stc    
  40e6a9:	cld    
  40e6aa:	adc    ebx,DWORD PTR [edx+0x3b00f79c]
  40e6b0:	aad    0x8d
  40e6b2:	sbb    bl,BYTE PTR [ebp+0x7]
  40e6b5:	mov    edi,edi
  40e6b7:	xchg   edi,eax
  40e6b8:	(bad)  
  40e6ba:	aas    
  40e6bb:	jbe    0x40e674
  40e6bd:	sub    eax,0xdc09d6db
  40e6c2:	aam    0xe0
  40e6c4:	mov    al,BYTE PTR [esi+0x6f]
  40e6c7:	das    
  40e6c8:	or     cl,BYTE PTR [ecx-0x28]
  40e6cb:	ds int3 
  40e6cd:	push   cs
  40e6ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6cf:	cdq    
  40e6d0:	sub    eax,0xa3acbe1e
  40e6d5:	sbb    ch,BYTE PTR [ebx]
  40e6d7:	out    0xd1,eax
  40e6d9:	test   BYTE PTR [esp+eiz*8+0xe],al
  40e6dd:	jae    0x40e6c9
  40e6df:	mov    esi,0x2e60a3f4
  40e6e4:	add    al,0xfe
  40e6e6:	sbb    al,0xfe
  40e6e8:	jle    0x40e742
  40e6ea:	(bad)  
  40e6eb:	jo     0x40e73e
  40e6ed:	icebp  
  40e6ee:	xor    BYTE PTR [edx-0x27d4ab7e],ch
  40e6f4:	ret    0x411f
  40e6f7:	jns    0x40e6fc
  40e6f9:	add    ebp,esi
  40e6fb:	or     BYTE PTR [esi+ecx*2],al
  40e6fe:	xchg   ebp,eax
  40e6ff:	std    
  40e700:	sbb    al,0x5
  40e702:	mov    ecx,ebp
  40e704:	cmp    ecx,0x33
  40e707:	cmp    DWORD PTR [ecx+0x5e],esp
  40e70a:	ins    DWORD PTR es:[edi],dx
  40e70b:	mov    ecx,DWORD PTR [eax+0x9d9f94f]
  40e711:	das    
  40e712:	ror    DWORD PTR [ebp-0x1],cl
  40e715:	lock repnz push 0x87036c99
  40e71c:	movq   xmm7,QWORD PTR [eax+0xb]
  40e721:	mov    ch,0x1a
  40e723:	jmp    0x3501b7e7
  40e728:	inc    eax
  40e729:	rcl    ch,1
  40e72b:	push   esi
  40e72c:	jecxz  0x40e749
  40e72e:	fisubr DWORD PTR [edx]
  40e730:	ror    DWORD PTR [edi+0x8],cl
  40e733:	dec    ebp
  40e734:	add    eax,DWORD PTR [eax+0x4e2475d7]
  40e73a:	mov    BYTE PTR [ecx+0x2ba13242],bl
  40e740:	xor    eax,0x843104c0
  40e745:	jo     0x40e74d
  40e747:	nop
  40e748:	mov    ah,0x24
  40e74a:	iret   
  40e74b:	or     al,BYTE PTR [esi+0x44]
  40e74e:	xor    al,0x6c
  40e750:	je     0x40e75a
  40e752:	dec    eax
  40e753:	ja     0x40e735
  40e755:	mov    DWORD PTR [edx-0x51a4d2fa],eax
  40e75b:	ins    BYTE PTR es:[edi],dx
  40e75c:	add    dh,BYTE PTR [edx]
  40e75e:	add    DWORD PTR [eax+0x30],0xffffffc5
  40e762:	imul   ebx,edx,0x75
  40e765:	add    al,0x54
  40e767:	pop    eax
  40e768:	sub    BYTE PTR [ecx],ah
  40e76a:	add    edx,esi
  40e76c:	adc    BYTE PTR [edi-0x8],0x5c
  40e770:	cdq    
  40e771:	inc    esi
  40e772:	sub    eax,0xc8af110f
  40e777:	cmp    eax,0x2879109
  40e77c:	and    BYTE PTR [edx-0x2c7535ab],ch
  40e782:	cmp    dh,BYTE PTR [ecx]
  40e784:	nop
  40e785:	mov    cl,0x89
  40e787:	sti    
  40e788:	sbb    ecx,DWORD PTR [esi+0x9]
  40e78b:	sub    al,0x65
  40e78d:	pop    ss
  40e78e:	jmp    0x19c414dd
  40e793:	inc    edx
  40e794:	jb     0x40e750
  40e796:	mov    ds:0xa4afc750,eax
  40e79b:	or     BYTE PTR gs:[ebx],al
  40e79e:	leave  
  40e79f:	mov    dl,0x5e
  40e7a1:	int    0x4f
  40e7a3:	sub    esi,DWORD PTR [edx+0xb]
  40e7a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7a8:	add    dl,BYTE PTR [edx+0x3d]
  40e7ab:	icebp  
  40e7ac:	push   ecx
  40e7ad:	fisub  WORD PTR [eax]
  40e7af:	mov    dl,0xbb
  40e7b1:	fmul   QWORD PTR [edi+0x4e]
  40e7b4:	or     bh,BYTE PTR [edi+0x44323907]
  40e7ba:	sbb    DWORD PTR [edx-0x4b],esi
  40e7bd:	adc    ch,BYTE PTR [eax+0x79]
  40e7c0:	(bad)  
  40e7c1:	xor    eax,0xc7279477
  40e7c7:	daa    
  40e7c8:	leave  
  40e7c9:	retf   0xe901
  40e7cc:	or     bh,BYTE PTR [ebx+0x28]
  40e7cf:	cdq    
  40e7d0:	xchg   ebx,eax
  40e7d1:	pop    ebp
  40e7d2:	xor    DWORD PTR ds:0x64892588,eax
  40e7d8:	in     eax,dx
  40e7d9:	xchg   ebp,eax
  40e7da:	daa    
  40e7db:	sbb    al,0xa7
  40e7dd:	pop    ebx
  40e7de:	jecxz  0x40e790
  40e7e0:	mov    eax,0x38951975
  40e7e5:	das    
  40e7e6:	scas   al,BYTE PTR es:[edi]
  40e7e7:	mov    bh,0xd0
  40e7e9:	call   0xe314:0xb42a94da
  40e7f0:	test   BYTE PTR [ebp-0x7c02ba6a],cl
  40e7f6:	enter  0x2e5c,0x7
  40e7fa:	inc    edx
  40e7fb:	adc    al,BYTE PTR [esi+0x43]
  40e7fe:	dec    eax
  40e7ff:	inc    eax
  40e800:	loope  0x40e7f5
  40e802:	ret    0xe7d3
  40e805:	cld    
  40e806:	out    dx,al
  40e807:	and    ebp,eax
  40e809:	sub    dl,BYTE PTR [esi]
  40e80b:	mov    edi,0x2bf9191c
  40e810:	test   al,al
  40e812:	jg     0x40e80f
  40e814:	add    ecx,ebp
  40e816:	add    DWORD PTR [ebx+0x5],edi
  40e819:	or     al,0x7
  40e81b:	sahf   
  40e81c:	stos   DWORD PTR es:[edi],eax
  40e81d:	push   ds
  40e81e:	inc    ebx
  40e81f:	fs and al,0x22
  40e822:	pop    es
  40e823:	or     DWORD PTR [edx+edi*8],0x5c
  40e827:	jns    0x40e84a
  40e829:	mov    DWORD PTR [ecx],ebx
  40e82b:	xor    al,0x4b
  40e82d:	push   cs
  40e82e:	mov    edi,0xa02250cf
  40e833:	leave  
  40e834:	pop    ebp
  40e835:	js     0x40e7ef
  40e837:	inc    esp
  40e838:	ret    
  40e839:	ficom  WORD PTR [ebp-0x60]
  40e83c:	ret    
  40e83d:	cdq    
  40e83e:	repz out dx,eax
  40e840:	fisttp WORD PTR [edi]
  40e842:	xor    eax,0x8c0bb5f2
  40e847:	out    0x79,al
  40e849:	mov    bh,0x66
  40e84b:	nop
  40e84c:	in     al,0xd6
  40e84e:	out    0x94,al
  40e850:	popf   
  40e851:	xchg   edi,eax
  40e852:	jmp    0x1a20:0xaa3bb69c
  40e859:	jecxz  0x40e8b6
  40e85b:	scas   eax,DWORD PTR es:[edi]
  40e85c:	lods   al,BYTE PTR ds:[esi]
  40e85d:	lock mov esi,0x5589cd1
  40e863:	adc    esp,DWORD PTR [ebx]
  40e865:	jne    0x40e85e
  40e867:	cmp    al,0x88
  40e869:	adc    ch,bh
  40e86b:	jb     0x40e884
  40e86d:	add    dh,BYTE PTR [ebx-0x79]
  40e870:	out    0x1,al
  40e872:	jmp    0x35b3:0x35e8d1b8
  40e879:	ja     0x40e83f
  40e87b:	(bad)  
  40e87c:	call   0xdcbfb9c6
  40e881:	or     ebp,DWORD PTR [esi+edx*4-0x47f986eb]
  40e888:	pop    ebp
  40e889:	out    0xf,eax
  40e88b:	rcr    DWORD PTR ds:0x86211910,1
  40e891:	inc    esp
  40e892:	adc    BYTE PTR [ecx],ah
  40e894:	adc    eax,0x27015e0d
  40e899:	in     al,0x9f
  40e89b:	or     ecx,DWORD PTR [esi]
  40e89d:	in     al,dx
  40e89e:	pop    edi
  40e89f:	and    edx,DWORD PTR [esi+ecx*1]
  40e8a2:	out    dx,eax
  40e8a3:	cmp    al,0xf1
  40e8a5:	icebp  
  40e8a6:	sar    ch,0x3d
  40e8a9:	pusha  
  40e8aa:	in     eax,dx
  40e8ab:	and    eax,0x4e8971e9
  40e8b0:	xchg   ecx,eax
  40e8b1:	popf   
  40e8b2:	cmp    al,0x3e
  40e8b4:	xor    al,0x75
  40e8b6:	xchg   BYTE PTR [edx+eiz*2+0x45],dl
  40e8ba:	xchg   DWORD PTR [ecx],esp
  40e8bc:	push   cs
  40e8bd:	fmul   QWORD PTR [eax+0x110b5307]
  40e8c3:	jae    0x40e901
  40e8c5:	add    al,0x58
  40e8c7:	jmp    0x243565bb
  40e8cc:	adc    ebp,DWORD PTR [ebx+0x741b2256]
  40e8d2:	and    al,0x8c
  40e8d4:	mov    ebx,ebx
  40e8d6:	or     al,0x6
  40e8d8:	test   eax,0xcf06e059
  40e8dd:	ror    BYTE PTR [ecx-0x9],cl
  40e8e0:	and    al,al
  40e8e2:	int    0xf6
  40e8e4:	xor    BYTE PTR [ecx-0x16aeb0d4],ch
  40e8ea:	(bad)  
  40e8ec:	xlat   BYTE PTR ds:[ebx]
  40e8ed:	pop    ebx
  40e8ee:	sahf   
  40e8ef:	ins    BYTE PTR es:[edi],dx
  40e8f0:	in     al,dx
  40e8f1:	pop    esi
  40e8f2:	jecxz  0x40e902
  40e8f4:	fsub   DWORD PTR [ebx+ebx*8-0x27c8f470]
  40e8fb:	inc    esp
  40e8fc:	ins    DWORD PTR es:[edi],dx
  40e8fd:	xlat   BYTE PTR ds:[ebx]
  40e8fe:	adc    DWORD PTR [ebx+0xf38982a],0x55236e83
  40e908:	stc    
  40e909:	inc    edi
  40e90a:	dec    esp
  40e90b:	dec    edx
  40e90c:	pusha  
  40e90d:	lods   eax,DWORD PTR ds:[esi]
  40e90e:	jecxz  0x40e947
  40e910:	and    eax,0xa75d24b7
  40e915:	mov    ah,0x1b
  40e917:	and    BYTE PTR [ebp-0x36],ah
  40e91a:	loopne 0x40e8f4
  40e91c:	lahf   
  40e91d:	mov    eax,0x75c01397
  40e922:	pop    ebx
  40e923:	test   esp,edx
  40e925:	xor    eax,0xcbe308b1
  40e92a:	fisttp WORD PTR [eax-0x55]
  40e92d:	scas   al,BYTE PTR es:[edi]
  40e92e:	rol    BYTE PTR [eax],0x5c
  40e931:	mov    BYTE PTR [ebp+0x3d806186],dl
  40e937:	dec    ebp
  40e938:	push   cs
  40e939:	pushf  
  40e93a:	sub    eax,0x5ffa5c2c
  40e93f:	mov    eax,eax
  40e941:	bound  eax,QWORD PTR [ebx]
  40e943:	fild   DWORD PTR [ecx]
  40e945:	iret   
  40e946:	and    DWORD PTR [esi+0x7001c1dc],esp
  40e94c:	std    
  40e94d:	or     edi,DWORD PTR [edi+0x23]
  40e950:	inc    ecx
  40e951:	iret   
  40e952:	shufps xmm2,XMMWORD PTR [eax-0x75],0x45
  40e957:	inc    esp
  40e958:	xchg   DWORD PTR [edi],esi
  40e95a:	leave  
  40e95b:	sbb    eax,0x53027f45
  40e960:	adc    al,0x56
  40e962:	inc    esp
  40e963:	and    esi,ecx
  40e965:	out    dx,eax
  40e966:	mov    DWORD PTR [ecx],ecx
  40e968:	pusha  
  40e969:	or     edi,0xbc8434e4
  40e96f:	shl    DWORD PTR [edx+eiz*1+0x4d],cl
  40e973:	jbe    0x40e95d
  40e975:	test   dl,cl
  40e977:	adc    DWORD PTR [esi],0x5f
  40e97a:	(bad)  
  40e97b:	fcomp  QWORD PTR [ebp-0x76]
  40e97e:	push   ebx
  40e97f:	jg     0x40e903
  40e981:	mov    bl,0x2
  40e983:	mov    edx,0x61b64c67
  40e988:	or     al,0x52
  40e98a:	cmp    DWORD PTR [eax-0xce4000f],ecx
  40e990:	dec    ebx
  40e991:	cli    
  40e992:	out    0xe1,al
  40e994:	or     DWORD PTR [eax-0x35],0x285d3f8b
  40e99b:	add    cl,BYTE PTR [edi]
  40e99d:	fs push cs
  40e99f:	shr    BYTE PTR [ebx+0x7b00483d],cl
  40e9a5:	pop    edi
  40e9a6:	xor    ch,BYTE PTR [esi]
  40e9a8:	out    0xb8,al
  40e9aa:	add    BYTE PTR [esi-0x7e2d50f9],cl
  40e9b0:	in     al,0x20
  40e9b2:	xchg   esi,eax
  40e9b3:	js     0x40e9ce
  40e9b5:	dec    ecx
  40e9b6:	inc    eax
  40e9b7:	mov    BYTE PTR [ecx],cl
  40e9b9:	push   edi
  40e9ba:	pop    edi
  40e9bb:	adc    bh,BYTE PTR [eax]
  40e9bd:	pop    ss
  40e9be:	dec    esi
  40e9bf:	jne    0x40e9cf
  40e9c1:	push   edx
  40e9c2:	push   esp
  40e9c3:	and    eax,0x24b2c183
  40e9c8:	dec    eax
  40e9c9:	sbb    al,0xa5
  40e9cb:	repz pop ebp
  40e9cd:	pop    ecx
  40e9ce:	idiv   BYTE PTR [edx-0x35]
  40e9d1:	sub    BYTE PTR [esp+esi*8+0x1a6be709],bl
  40e9d8:	repz pop edx
  40e9da:	dec    ecx
  40e9db:	in     eax,dx
  40e9dc:	sbb    ch,BYTE PTR [eax+0x47]
  40e9df:	mov    ch,0x8e
  40e9e1:	jle    0x40ea58
  40e9e3:	push   ebx
  40e9e4:	adc    eax,0x56711ea7
  40e9e9:	pop    es
  40e9ea:	fiadd  WORD PTR [edx+0x4f]
  40e9ed:	mov    ebp,0xd21c43cc
  40e9f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9f3:	mov    ds,WORD PTR [edi+edx*1]
  40e9f6:	inc    esp
  40e9f7:	push   cs
  40e9f8:	pop    ss
  40e9f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9fa:	adc    eax,0x550dd132
  40e9ff:	or     al,BYTE PTR [ecx]
  40ea01:	push   es
  40ea02:	and    al,0xa3
  40ea04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea05:	add    ebx,edi
  40ea07:	and    eax,0xc2ef60a
  40ea0c:	xchg   ebx,eax
  40ea0d:	adc    BYTE PTR ds:0x6eddd332,dh
  40ea13:	mov    ah,0x13
  40ea15:	and    DWORD PTR [eax-0x43],0x851f8208
  40ea1c:	push   esi
  40ea1d:	or     DWORD PTR [edi],eax
  40ea1f:	mov    bl,bh
  40ea21:	push   edx
  40ea22:	jno    0x40ea0c
  40ea24:	ret    
  40ea25:	in     eax,0x4d
  40ea27:	dec    ebp
  40ea28:	mov    eax,0xe248584d
  40ea2d:	push   cs
  40ea2e:	in     al,dx
  40ea2f:	fsubr  QWORD PTR cs:[edx+0x79]
  40ea33:	aam    0x56
  40ea35:	inc    esi
  40ea36:	push   es
  40ea37:	xchg   ebp,eax
  40ea38:	mov    bh,0xd5
  40ea3a:	inc    esp
  40ea3b:	aaa    
  40ea3c:	xor    al,0x67
  40ea3e:	ins    DWORD PTR es:[edi],dx
  40ea3f:	and    dl,BYTE PTR [edx+0x5b]
  40ea42:	test   DWORD PTR [ecx],esp
  40ea44:	lds    esi,FWORD PTR [ebx+edi*8]
  40ea47:	push   cs
  40ea48:	inc    ecx
  40ea49:	jl     0x40ea5a
  40ea4b:	jno    0x40ea73
  40ea4d:	imul   ecx,DWORD PTR [eax],0x36c67649
  40ea53:	mov    dh,0x16
  40ea55:	ins    DWORD PTR es:[edi],dx
  40ea56:	and    eax,0x93ff55df
  40ea5b:	dec    ecx
  40ea5c:	push   edx
  40ea5d:	sbb    DWORD PTR [edi],edx
  40ea5f:	ret    
  40ea60:	jmp    0x40ead6
  40ea62:	addr16 xor al,0xea
  40ea65:	adc    DWORD PTR [edx+0x14],eax
  40ea68:	xor    eax,0x34d6358d
  40ea6d:	or     eax,0x25037d07
  40ea72:	or     al,0x8b
  40ea74:	or     dl,BYTE PTR [eax+eax*2]
  40ea77:	aam    0x12
  40ea79:	pavgw  mm2,mm1
  40ea7c:	fs retf 
  40ea7e:	mov    DWORD PTR [edx],edi
  40ea80:	rcr    BYTE PTR [edi],cl
  40ea82:	adc    bh,ah
  40ea84:	and    ecx,DWORD PTR [esi+0x5ee40204]
  40ea8a:	pop    ss
  40ea8b:	push   eax
  40ea8c:	fcomp  DWORD PTR ds:0xf656b51e
  40ea92:	rcl    BYTE PTR [eax+0x6f],1
  40ea95:	or     al,0xf4
  40ea97:	daa    
  40ea98:	jl     0x40eaa8
  40ea9a:	test   DWORD PTR [ecx+0x67a55fb3],eax
  40eaa0:	test   eax,0x54612777
  40eaa5:	xchg   edx,eax
  40eaa6:	aaa    
  40eaa7:	sub    al,0x1e
  40eaa9:	sub    ch,dl
  40eaab:	sub    eax,0xd28a42bc
  40eab0:	or     eax,0x8343de0f
  40eab5:	stc    
  40eab6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eab7:	dec    eax
  40eab8:	or     ecx,DWORD PTR [edx+0x45388d94]
  40eabe:	pop    ebx
  40eabf:	push   ebx
  40eac0:	and    esi,DWORD PTR ds:0x6383cc0a
  40eac6:	jecxz  0x40ea83
  40eac8:	sbb    bh,BYTE PTR ss:[eax+0x4a37c44d]
  40eacf:	jle    0x40ea87
  40ead1:	scas   al,BYTE PTR es:[edi]
  40ead2:	jns    0x40eaa3
  40ead4:	or     eax,0x4a6b72e0
  40ead9:	in     al,dx
  40eada:	push   esi
  40eadb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eadc:	and    al,0xe5
  40eade:	cs retf 0xdc2
  40eae2:	add    DWORD PTR [ebx+0x2],edx
  40eae5:	int    0xdb
  40eae7:	dec    ebp
  40eae8:	cmp    al,0x4b
  40eaea:	dec    eax
  40eaeb:	jl     0x40eb2f
  40eaed:	retf   0x842f
  40eaf0:	cmp    BYTE PTR [esi],dh
  40eaf2:	outs   dx,DWORD PTR ds:[esi]
  40eaf3:	push   ebp
  40eaf4:	dec    esp
  40eaf5:	inc    esi
  40eaf6:	push   edi
  40eaf7:	push   0x80e1ceac
  40eafc:	lahf   
  40eafd:	cmp    eax,DWORD PTR [ebx+ebx*4+0x4e]
  40eb01:	pop    ecx
  40eb02:	cmovb  esp,DWORD PTR [eax]
  40eb05:	fmul   st(2),st
  40eb07:	push   ss
  40eb08:	mov    WORD PTR [ecx-0x72e7a960],?
  40eb0e:	popa   
  40eb0f:	bound  edi,QWORD PTR [edi]
  40eb11:	mov    ds:0x6be90afa,eax
  40eb16:	arpl   WORD PTR [esi+0x66],si
  40eb19:	jmp    0x377ff38b
  40eb1e:	es gs mov bl,0xa2
  40eb22:	dec    ebx
  40eb23:	inc    edi
  40eb24:	inc    esp
  40eb25:	sar    DWORD PTR [edx+0x44],1
  40eb28:	push   0x69
  40eb2a:	adc    al,0x69
  40eb2c:	push   edi
  40eb2d:	(bad)  
  40eb2e:	shr    BYTE PTR [esi+0x4c],0x8a
  40eb32:	popa   
  40eb33:	mov    ebx,0x3dd15afc
  40eb38:	repnz out 0xf7,al
  40eb3b:	pop    es
  40eb3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb3d:	mov    ?,WORD PTR [esi-0x6b]
  40eb40:	out    dx,al
  40eb41:	push   0x4c
  40eb43:	int    0x3b
  40eb45:	aam    0xb9
  40eb47:	push   es
  40eb48:	(bad)  
  40eb49:	dec    eax
  40eb4a:	jmp    0x40eae0
  40eb4c:	rsm    
  40eb4e:	jae    0x40eb43
  40eb50:	aam    0xe4
  40eb52:	jecxz  0x40eb84
  40eb54:	mov    ah,0x3d
  40eb56:	pop    edx
  40eb57:	inc    eax
  40eb58:	add    DWORD PTR [ecx+ecx*1-0x80],eax
  40eb5c:	in     al,0x18
  40eb5e:	mov    edi,0x4c18939a
  40eb63:	sbb    eax,0xfd6bd925
  40eb68:	mov    ah,0x1d
  40eb6a:	jg     0x40ebe8
  40eb6c:	xchg   ecx,eax
  40eb6d:	pop    ds
  40eb6e:	(bad)  
  40eb6f:	retf   0x515a
  40eb72:	outs   dx,BYTE PTR ds:[esi]
  40eb73:	sbb    cl,ch
  40eb75:	je     0x6060d52
  40eb7b:	call   0x15120718
  40eb80:	imul   ebp,ecx,0xffffffc6
  40eb83:	fwait
  40eb84:	and    dl,ah
  40eb86:	inc    edx
  40eb87:	shl    DWORD PTR [eax],0x8e
  40eb8a:	jne    0x40eba1
  40eb8c:	sub    al,0x7c
  40eb8e:	push   0xfffffff6
  40eb90:	xlat   BYTE PTR ds:[ebx]
  40eb91:	mov    ebx,0xbeac2516
  40eb96:	or     cl,BYTE PTR [ebx-0x38]
  40eb99:	push   eax
  40eb9a:	xchg   edx,eax
  40eb9b:	sbb    dh,ah
  40eb9d:	inc    ebp
  40eb9e:	int3   
  40eb9f:	out    0xc8,al
  40eba1:	shl    DWORD PTR [ecx-0x35],1
  40eba4:	in     eax,0x9d
  40eba6:	retf   0xec0d
  40eba9:	repz inc esp
  40ebab:	push   edx
  40ebac:	xor    edi,DWORD PTR [edx]
  40ebae:	push   0x6fb890b
  40ebb3:	add    esp,edx
  40ebb5:	sub    eax,0xf80917d3
  40ebba:	mov    al,0x84
  40ebbc:	repz and eax,DWORD PTR [eax+0x9b27bf]
  40ebc3:	dec    esi
  40ebc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebc5:	cld    
  40ebc6:	jl     0x40ebbf
  40ebc8:	sahf   
  40ebc9:	mul    DWORD PTR [ecx+0xb]
  40ebcc:	add    ebp,esp
  40ebce:	das    
  40ebcf:	dec    ecx
  40ebd0:	xchg   ebx,eax
  40ebd1:	adc    eax,0x8e8b2032
  40ebd6:	mov    cl,0x6
  40ebd8:	inc    edx
  40ebd9:	push   cs
  40ebda:	sub    edi,0x6
  40ebdd:	inc    edx
  40ebde:	das    
  40ebdf:	jo     0x40ec08
  40ebe1:	mov    ebp,0x931c8701
  40ebe6:	mov    BYTE PTR [ebx+edi*8+0x617e0966],dh
  40ebed:	inc    esp
  40ebee:	mov    ds:0x9b1bbf30,eax
  40ebf3:	mov    al,ds:0xc5d6e381
  40ebf8:	xchg   ebx,eax
  40ebf9:	imul   ecx,DWORD PTR [ecx+esi*1],0x4b
  40ebfd:	mov    esp,0x26439bb3
  40ec02:	sub    DWORD PTR [ebp+eax*2+0x64],edi
  40ec06:	xchg   esp,eax
  40ec07:	inc    BYTE PTR [eax-0x4eb13772]
  40ec0d:	cli    
  40ec0e:	call   0xf518:0x70222909
  40ec15:	inc    esi
  40ec16:	and    BYTE PTR [edx-0x2f8b6e80],bl
  40ec1c:	xchg   edi,eax
  40ec1d:	into   
  40ec1e:	popa   
  40ec1f:	out    dx,al
  40ec20:	push   edi
  40ec21:	push   0x79750666
  40ec26:	imul   esi,DWORD PTR [edi+0x62],0x405b27a7
  40ec2d:	shl    BYTE PTR [ebp-0x3],1
  40ec30:	call   0x103b:0xd5147ae5
  40ec37:	mov    bl,0x6a
  40ec39:	jno    0x40ebca
  40ec3b:	sub    al,0xa7
  40ec3d:	push   edx
  40ec3e:	push   ecx
  40ec3f:	addr16 sti 
  40ec41:	mov    DWORD PTR [ebp+0x6d385114],ebp
  40ec47:	sub    cl,al
  40ec49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec4a:	sbb    BYTE PTR [eax],bh
  40ec4c:	sub    dh,BYTE PTR [esi-0x73d3a2ba]
  40ec52:	mov    ebx,0x220742cd
  40ec57:	movntq QWORD PTR [edx],mm5
  40ec5a:	jns    0x40ec62
  40ec5c:	adc    al,0xec
  40ec5e:	xor    ebx,esp
  40ec60:	jne    0x40ecb0
  40ec62:	(bad)  
  40ec63:	imul   edx,ecx,0xffffffe2
  40ec66:	cmp    eax,DWORD PTR [esi]
  40ec68:	js     0x40ec37
  40ec6a:	pop    eax
  40ec6b:	or     DWORD PTR [edx-0x37],ebx
  40ec6e:	cmp    cl,bh
  40ec70:	push   ebp
  40ec71:	lods   eax,DWORD PTR ds:[esi]
  40ec72:	movaps xmm4,XMMWORD PTR [esi-0x7d]
  40ec76:	push   ecx
  40ec77:	ret    0xdc3b
  40ec7a:	out    0xcf,eax
  40ec7c:	push   ebx
  40ec7d:	or     ebp,DWORD PTR [edx-0x57]
  40ec80:	jle    0x40eca5
  40ec82:	sti    
  40ec83:	sbb    al,0x79
  40ec85:	ins    BYTE PTR es:[edi],dx
  40ec86:	(bad)  
  40ec88:	shl    BYTE PTR [ecx],0xf3
  40ec8b:	xor    cl,BYTE PTR [ecx]
  40ec8d:	mov    ds:0x9c04733b,al
  40ec92:	mov    cl,BYTE PTR [ebx+0x42]
  40ec95:	mov    edx,esp
  40ec97:	sbb    BYTE PTR [ecx-0x7bc77a3c],ch
  40ec9d:	and    al,0x84
  40ec9f:	pop    ds
  40eca0:	cmp    al,0xc
  40eca2:	push   edx
  40eca3:	idiv   BYTE PTR [ebx+0x4]
  40eca6:	inc    ecx
  40eca7:	mov    DWORD PTR [esp+ecx*4+0x2f77e505],0x2308ef43
  40ecb2:	(bad)  
  40ecb3:	pop    ecx
  40ecb4:	ret    
  40ecb5:	mov    edi,0xe2c24a88
  40ecba:	call   0x9c33250d
  40ecbf:	ins    DWORD PTR es:[edi],dx
  40ecc0:	xor    al,0xf2
  40ecc2:	jo     0x40ecd1
  40ecc4:	jmp    0x54bc073e
  40ecc9:	sub    eax,0x851b59ca
  40ecce:	dec    edi
  40eccf:	add    eax,0xe97b880e
  40ecd4:	push   ds
  40ecd5:	test   DWORD PTR [eax-0x4ca6eca7],0x621e018d
  40ecdf:	sar    BYTE PTR [edx],cl
  40ece1:	movups xmm6,xmm6
  40ece4:	div    DWORD PTR [ebx]
  40ece6:	pop    ss
  40ece7:	and    dl,bl
  40ece9:	mov    cl,0xd5
  40eceb:	ins    BYTE PTR es:[di],dx
  40eced:	jno    0x40ed40
  40ecef:	and    BYTE PTR [ebp+eax*4+0x66],bl
  40ecf3:	jne    0x40ed0b
  40ecf5:	inc    ebp
  40ecf6:	or     bh,bh
  40ecf8:	aad    0x7b
  40ecfa:	pop    eax
  40ecfb:	test   DWORD PTR [edx],ebx
  40ecfd:	(bad)  
  40ecfe:	pop    edi
  40ecff:	push   esp
  40ed00:	sbb    BYTE PTR ds:0xc4842850,al
  40ed06:	in     al,0x5
  40ed08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed09:	aas    
  40ed0a:	clc    
  40ed0b:	xor    edi,DWORD PTR [esi-0x21a6587b]
  40ed11:	push   0x4d0fdb98
  40ed16:	adc    DWORD PTR [ebp-0x79],esi
  40ed19:	inc    edx
  40ed1a:	push   ebp
  40ed1b:	dec    ebx
  40ed1c:	sbb    BYTE PTR [ecx],ah
  40ed1e:	rcl    BYTE PTR [ebx],1
  40ed20:	out    dx,al
  40ed21:	push   ebx
  40ed22:	dec    ebp
  40ed23:	retf   0x9428
  40ed26:	sbb    BYTE PTR [ebp+0xf],bl
  40ed29:	in     eax,dx
  40ed2a:	and    DWORD PTR [esi+edi*2-0x7b],0xffffffe9
  40ed2f:	pop    ebp
  40ed30:	out    dx,eax
  40ed31:	and    ebp,DWORD PTR [ecx]
  40ed33:	mov    edx,0x41c2b11d
  40ed38:	fistp  WORD PTR [edx+0x5]
  40ed3b:	shr    BYTE PTR [eax],cl
  40ed3d:	sub    DWORD PTR [edx+0xa],eax
  40ed40:	in     eax,dx
  40ed41:	jl     0x40eda0
  40ed43:	xchg   edx,eax
  40ed44:	loop   0x40ed2c
  40ed46:	or     esi,ebx
  40ed48:	repz ds push eax
  40ed4b:	pop    esi
  40ed4c:	aas    
  40ed4d:	bnd jno 0x40ed73
  40ed50:	dec    edx
  40ed51:	pop    ds
  40ed52:	push   esp
  40ed53:	pop    esi
  40ed54:	xchg   esp,eax
  40ed55:	pop    edx
  40ed56:	pop    ds
  40ed57:	dec    ebx
  40ed58:	int    0x21
  40ed5a:	js     0x40ed5f
  40ed5c:	add    BYTE PTR [ebx-0x7cb3b9f6],bh
  40ed62:	mov    dl,0x55
  40ed64:	pusha  
  40ed65:	push   ebx
  40ed66:	dec    edi
  40ed67:	cwde   
  40ed68:	sub    BYTE PTR [eax+ecx*8-0x42],dl
  40ed6c:	jle    0x40ed88
  40ed6e:	and    bh,BYTE PTR [edi]
  40ed70:	gs push esi
  40ed72:	jp     0x40ed7a
  40ed74:	in     eax,0x2d
  40ed76:	mov    dl,0x8b
  40ed78:	dec    ebx
  40ed79:	sub    DWORD PTR [edx],0xa046b300
  40ed7f:	or     bh,BYTE PTR [ebp-0x52cd33a7]
  40ed85:	retf   0x135b
  40ed88:	mov    eax,ds:0x79754193
  40ed8d:	adc    DWORD PTR [ebx],ecx
  40ed8f:	sbb    al,0xe4
  40ed91:	test   cl,cl
  40ed93:	add    dh,BYTE PTR [ebx-0x46260777]
  40ed99:	push   ss
  40ed9a:	jmp    0x40ed3a
  40ed9c:	inc    esp
  40ed9d:	lds    edx,FWORD PTR [ecx-0x4d]
  40eda0:	int3   
  40eda1:	and    bh,dh
  40eda3:	jae    0x40edc4
  40eda5:	adc    eax,0x53480e78
  40edaa:	adc    al,BYTE PTR ds:0x85570204
  40edb0:	(bad)  
  40edb2:	fisubr DWORD PTR [ebp+0x19]
  40edb5:	adc    BYTE PTR [esi],cl
  40edb7:	out    dx,al
  40edb8:	sbb    dh,BYTE PTR [edx+0x4603d81c]
  40edbe:	mov    BYTE PTR ds:0x8b107d90,al
  40edc4:	aas    
  40edc5:	cld    
  40edc6:	imul   esi,DWORD PTR [ebx+0x812ebf4],0x3b
  40edcd:	pop    edx
  40edce:	or     DWORD PTR [edx],edx
  40edd0:	jb     0x40edeb
  40edd2:	icebp  
  40edd3:	dec    ebp
  40edd4:	inc    esp
  40edd5:	sti    
  40edd6:	repz fsubr DWORD PTR [ecx+edi*4]
  40edda:	lods   eax,DWORD PTR ds:[esi]
  40eddb:	pop    ebx
  40eddc:	cmp    al,0x41
  40edde:	push   cs
  40eddf:	imul   ecx,DWORD PTR [ecx-0x3e],0x894f6c55
  40ede6:	loopne 0x40edd9
  40ede8:	shl    BYTE PTR [esi],cl
  40edea:	std    
  40edeb:	pop    ss
  40edec:	mov    al,0xda
  40edee:	or     edi,ebp
  40edf0:	cmp    DWORD PTR [ebx+0x75384c27],0xd
  40edf7:	cmp    esp,DWORD PTR ds:0x7f56c727
  40edfd:	or     BYTE PTR [ebx+0x5054785],al
  40ee03:	mov    ?,ecx
  40ee05:	mov    ecx,0xc1b12c00
  40ee0a:	inc    edx
  40ee0b:	ja     0x40ee14
  40ee0d:	dec    ebx
  40ee0e:	xchg   esi,eax
  40ee0f:	and    al,BYTE PTR [edi]
  40ee11:	ucomiss xmm5,xmm7
  40ee14:	dec    ebp
  40ee15:	or     esp,esp
  40ee17:	int    0xd6
  40ee19:	mov    WORD PTR [ebx-0x4e],gs
  40ee1c:	adc    bl,BYTE PTR ds:0xc40251f6
  40ee22:	inc    edi
  40ee23:	adc    al,BYTE PTR [ecx+ebx*2+0x51]
  40ee27:	sub    ebx,DWORD PTR [edx]
  40ee29:	and    BYTE PTR [ebx],bl
  40ee2b:	jbe    0x40edb7
  40ee2d:	inc    esi
  40ee2e:	pop    es
  40ee2f:	out    0x59,eax
  40ee31:	or     DWORD PTR [eax*8+0x72972fab],ebx
  40ee38:	push   0x19ab2e01
  40ee3d:	sub    eax,0x768c8a79
  40ee42:	push   edx
  40ee43:	dec    eax
  40ee44:	and    BYTE PTR [edx],ah
  40ee46:	mov    ds:0x94fa9cb7,eax
  40ee4b:	or     al,0x53
  40ee4d:	pop    ss
  40ee4e:	push   esi
  40ee4f:	ja     0x40eed0
  40ee51:	dec    edx
  40ee52:	inc    ebx
  40ee53:	dec    ebx
  40ee54:	cmp    ebx,DWORD PTR [edi]
  40ee56:	cmc    
  40ee57:	mov    cl,0xda
  40ee59:	xchg   ecx,eax
  40ee5a:	aaa    
  40ee5b:	cmp    eax,ebp
  40ee5d:	sub    BYTE PTR [edi+0x277a8204],cl
  40ee63:	or     eax,0x8ff386b1
  40ee68:	ins    DWORD PTR es:[edi],dx
  40ee69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee6a:	pop    ss
  40ee6b:	cli    
  40ee6c:	dec    esp
  40ee6d:	in     al,dx
  40ee6e:	push   ebx
  40ee6f:	in     al,0x36
  40ee71:	xor    ah,dl
  40ee73:	dec    BYTE PTR [ecx+0x4d]
  40ee76:	and    ecx,DWORD PTR [ecx-0x31]
  40ee79:	pop    eax
  40ee7a:	and    al,0xd3
  40ee7c:	pop    edi
  40ee7d:	ja     0x40eef0
  40ee7f:	addr16 mov esp,0x355815e2
  40ee85:	push   cs
  40ee86:	mov    al,0x87
  40ee88:	pop    edx
  40ee89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee8a:	push   eax
  40ee8b:	and    ecx,DWORD PTR [ebx+0x2869b9a4]
  40ee91:	mov    ss,WORD PTR [ecx-0x6f018c22]
  40ee97:	dec    edx
  40ee98:	lds    edi,FWORD PTR [ecx+0x5e]
  40ee9b:	inc    edi
  40ee9c:	(bad)  
  40ee9d:	lods   eax,DWORD PTR ds:[esi]
  40ee9e:	mov    WORD PTR [ecx+0x168ea169],?
  40eea4:	dec    ecx
  40eea5:	(bad)  
  40eea6:	mov    cl,0x52
  40eea8:	add    eax,0x5592121f
  40eead:	pop    ecx
  40eeae:	dec    eax
  40eeaf:	clc    
  40eeb0:	pop    edx
  40eeb1:	sub    DWORD PTR [edx+eiz*1-0x4db3f03a],eax
  40eeb8:	popa   
  40eeb9:	or     DWORD PTR [edi+0x67],edi
  40eebc:	pop    ss
  40eebd:	scas   al,BYTE PTR es:[edi]
  40eebe:	or     DWORD PTR [ebx+0x23e35421],0x56
  40eec5:	shl    BYTE PTR [esi+0x2f],0x94
  40eec9:	sahf   
  40eeca:	mov    al,0x5e
  40eecc:	push   esp
  40eecd:	cmp    ax,0xe8fa
  40eed1:	pop    edi
  40eed2:	repz in al,0x60
  40eed5:	test   eax,0x3c702bb9
  40eeda:	mov    ecx,0x6972b49e
  40eedf:	adc    ch,BYTE PTR [ebp+esi*1+0x56]
  40eee3:	mov    al,ds:0x1306a66
  40eee8:	jg     0x40eef5
  40eeea:	push   ebp
  40eeeb:	cli    
  40eeec:	jbe    0x40ef17
  40eeee:	jecxz  0x40ef47
  40eef0:	imul   eax,esp,0x33
  40eef3:	add    al,0x5a
  40eef5:	sub    BYTE PTR [ecx-0x6e9a4e7c],dl
  40eefb:	cmp    al,0x1a
  40eefd:	in     al,dx
  40eefe:	add    al,bh
  40ef00:	loope  0x40eea1
  40ef02:	cmp    al,bh
  40ef04:	shr    BYTE PTR ds:0x2f90888c,cl
  40ef0a:	int3   
  40ef0b:	inc    ebp
  40ef0c:	pop    ss
  40ef0d:	fldenv [esi]
  40ef0f:	or     edi,DWORD PTR [eax-0x6511f713]
  40ef15:	lds    ebp,FWORD PTR [ebp-0x31eaf51e]
  40ef1b:	sbb    edx,DWORD PTR [esi]
  40ef1d:	les    ebx,FWORD PTR [eax+0x81d17cc]
  40ef23:	sub    BYTE PTR [ebx+eiz*1-0x34124fc8],al
  40ef2a:	xor    al,0x1d
  40ef2c:	mov    bh,0x4b
  40ef2e:	mov    ?,WORD PTR [ecx+0x47885c8]
  40ef34:	xchg   esi,eax
  40ef35:	sbb    dh,cl
  40ef37:	sbb    esp,DWORD PTR [ecx-0xcfa0000]
  40ef3d:	int3   
  40ef3e:	ja     0x40ef24
  40ef40:	inc    eax
  40ef41:	in     eax,dx
  40ef42:	sub    BYTE PTR [ecx+0x68],bl
  40ef45:	in     eax,dx
  40ef46:	test   al,dh
  40ef48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef49:	mov    bh,0xfc
  40ef4b:	xor    edx,DWORD PTR [ecx+ebp*8+0x1b]
  40ef4f:	imul   esp,ebx,0x5
  40ef52:	imul   eax,ebx,0x2b
  40ef55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef56:	arpl   di,si
  40ef58:	mov    ah,0x62
  40ef5a:	xor    DWORD PTR [ecx+eiz*8-0x7c06358f],0x28
  40ef62:	cdq    
  40ef63:	and    dh,BYTE PTR [ecx+0x21908e5f]
  40ef69:	sbb    al,0xdd
  40ef6b:	sub    BYTE PTR [eax],ch
  40ef6d:	jmp    0x8b504986
  40ef72:	mov    esi,DWORD PTR [edi+0x14]
  40ef75:	dec    ecx
  40ef76:	pop    ecx
  40ef77:	or     eax,0x572b8a9a
  40ef7c:	and    BYTE PTR [esi],ah
  40ef7e:	push   ds
  40ef7f:	cvtdq2ps xmm5,xmm0
  40ef82:	popa   
  40ef83:	sub    dl,BYTE PTR [ebx+0x6]
  40ef86:	jne    0x40efba
  40ef88:	pop    ecx
  40ef89:	fs in  eax,dx
  40ef8b:	jbe    0x40ef83
  40ef8d:	mov    ds:0x7efef037,eax
  40ef92:	xor    bl,BYTE PTR [edx+0x62ced26e]
  40ef98:	jge    0x40ef4e
  40ef9a:	mov    ecx,DWORD PTR [edi+0x5]
  40ef9d:	add    al,0x85
  40ef9f:	out    dx,eax
  40efa0:	mov    ds:0xc9862f90,eax
  40efa5:	test   BYTE PTR [edi+eax*1-0x3d],bl
  40efa9:	pop    esi
  40efaa:	sbb    ah,BYTE PTR [ecx+0x22]
  40efad:	aaa    
  40efae:	adc    al,0xc5
  40efb0:	mov    esp,0x63bc7320
  40efb5:	ins    BYTE PTR es:[edi],dx
  40efb6:	xlat   BYTE PTR cs:[ebx]
  40efb8:	push   ds
  40efb9:	pop    ds
  40efba:	jmp    0x40efaf
  40efbc:	mov    esp,0xb77c7d79
  40efc1:	lods   al,BYTE PTR ds:[esi]
  40efc2:	mov    al,ds:0xb4f2b1f8
  40efc7:	mov    al,ds:0x4735b208
  40efcc:	ror    DWORD PTR [esp+eax*1+0x2261b4df],0xb7
  40efd4:	and    bl,BYTE PTR [ecx]
  40efd6:	add    edi,ecx
  40efd8:	stc    
  40efd9:	ficom  WORD PTR [ebx+0x3e0ef22e]
  40efdf:	shl    BYTE PTR [ebx+0x12],cl
  40efe2:	or     al,0x7b
  40efe4:	add    eax,0x363cc95a
  40efe9:	mov    WORD PTR ds:0x89a6a1fe,ss
  40efef:	cmp    al,0x5e
  40eff1:	pop    esp
  40eff2:	loope  0x40efce
  40eff4:	inc    esp
  40eff5:	or     BYTE PTR [edx+0x52],cl
  40eff8:	(bad)  
  40eff9:	adc    ch,BYTE PTR [ebx+esi*1]
  40effc:	test   DWORD PTR [eax-0xe883dc],0xfeac68cb
  40f006:	pop    eax
  40f007:	pop    eax
  40f008:	pop    esi
  40f009:	dec    edi
  40f00a:	inc    ebp
  40f00b:	ja     0x40f052
  40f00d:	mov    ch,0x9a
  40f00f:	int3   
  40f010:	call   0xd9bffa77
  40f015:	in     al,dx
  40f016:	pop    ebx
  40f017:	add    ebx,DWORD PTR [ebp-0x417f3387]
  40f01d:	(bad)  
  40f01e:	xchg   esp,eax
  40f01f:	inc    edx
  40f020:	add    BYTE PTR [ebp+0x287945f1],cl
  40f026:	fucomi st,st(6)
  40f028:	aam    0x32
  40f02a:	mov    dh,0xbb
  40f02c:	aad    0x2a
  40f02e:	jae    0x40f00b
  40f030:	je     0x40f080
  40f032:	sub    eax,0x5ad6d80e
  40f037:	jp     0x40f040
  40f039:	retf   0xd85a
  40f03c:	jge    0x40efd0
  40f03e:	add    al,0x87
  40f040:	outs   dx,DWORD PTR ds:[esi]
  40f041:	fwait
  40f042:	lds    ebx,FWORD PTR [edx]
  40f044:	xchg   edi,eax
  40f045:	ss jge 0x40efd8
  40f048:	gs push ecx
  40f04a:	scas   eax,DWORD PTR es:[edi]
  40f04b:	sbb    ah,bh
  40f04d:	rcl    ebp,0x16
  40f050:	jmp    0x40efd3
  40f052:	jle    0x40f054
  40f054:	mov    bl,0xf9
  40f056:	pop    ebx
  40f057:	(bad)  
  40f059:	xchg   edx,eax
  40f05a:	pop    ecx
  40f05b:	jno    0x40f0bb
  40f05d:	cld    
  40f05e:	pop    eax
  40f05f:	int3   
  40f060:	aaa    
  40f061:	cmp    al,0x9e
  40f063:	mov    bh,0x13
  40f065:	or     esp,DWORD PTR [edx+0x4f]
  40f068:	rcl    DWORD PTR [edx+0x12],0xee
  40f06c:	jmp    0x45d5:0x2bb29660
  40f073:	adc    edi,DWORD PTR [ebx+0x683c7403]
  40f079:	or     DWORD PTR [ecx+0xd],edi
  40f07c:	add    bh,BYTE PTR ds:0x19418b15
  40f082:	nop
  40f083:	ja     0x40f0f1
  40f085:	ret    0xda8b
  40f088:	into   
  40f089:	and    eax,0x6fea0358
  40f08e:	int3   
  40f08f:	dec    ecx
  40f090:	int    0x84
  40f092:	xlat   BYTE PTR ds:[ebx]
  40f093:	stc    
  40f094:	inc    eax
  40f095:	rcr    BYTE PTR [edi-0x35],0x8
  40f099:	out    0x2f,al
  40f09b:	xchg   esp,eax
  40f09c:	sar    DWORD PTR [edi],0xef
  40f09f:	pushf  
  40f0a0:	fisub  WORD PTR [ebx-0x3a]
  40f0a3:	mov    bh,0x54
  40f0a5:	fs push edx
  40f0a7:	sbb    bh,BYTE PTR [ecx]
  40f0a9:	ret    
  40f0aa:	xchg   esi,eax
  40f0ab:	and    al,0x9f
  40f0ad:	(bad)  
  40f0ae:	mov    cr7,ebx
  40f0b1:	mul    DWORD PTR [ecx+eiz*4]
  40f0b4:	jbe    0x40f099
  40f0b6:	xchg   ebp,eax
  40f0b7:	dec    ecx
  40f0b8:	inc    ebx
  40f0b9:	lock das 
  40f0bb:	sbb    bl,dh
  40f0bd:	mov    ebp,eax
  40f0bf:	idiv   BYTE PTR [eax-0x65709ff]
  40f0c5:	(bad)  
  40f0c6:	dec    eax
  40f0c7:	enter  0x541a,0x27
  40f0cb:	or     DWORD PTR gs:[ebx-0x7e4e46ae],ebx
  40f0d2:	push   ecx
  40f0d3:	pop    ss
  40f0d4:	loopne 0x40f0ab
  40f0d6:	sub    dl,BYTE PTR [ecx]
  40f0d8:	xchg   ecx,eax
  40f0d9:	fiadd  DWORD PTR [ecx-0x1c869a25]
  40f0df:	adc    eax,DWORD PTR [ecx+0x30]
  40f0e2:	loope  0x40f103
  40f0e4:	xchg   BYTE PTR [edi+eax*4],cl
  40f0e7:	gs js  0x40f07b
  40f0ea:	push   edx
  40f0eb:	push   es
  40f0ec:	inc    esi
  40f0ed:	jmp    0x40f0ff
  40f0ef:	shl    ah,1
  40f0f1:	cwde   
  40f0f2:	(bad)  [eax]
  40f0f4:	pop    esp
  40f0f5:	sub    edx,DWORD PTR [ecx-0x3801bf93]
  40f0fb:	les    eax,FWORD PTR [esi]
  40f0fd:	jmp    0x126a680e
  40f102:	adc    al,0xb
  40f104:	aad    0xc
  40f106:	sbb    al,BYTE PTR [ebx+0x9606ecd]
  40f10c:	jbe    0x40f12e
  40f10e:	dec    ecx
  40f10f:	add    BYTE PTR [ebx+0x25],0x6c
  40f113:	ins    BYTE PTR es:[edi],dx
  40f114:	add    al,0xc5
  40f116:	sti    
  40f117:	fisttp QWORD PTR [ebp+0x49]
  40f11a:	jae    0x40f162
  40f11c:	jg     0x40f162
  40f11e:	cli    
  40f11f:	test   DWORD PTR [eax+ebp*8-0x19],ecx
  40f123:	(bad)  
  40f124:	sbb    dh,al
  40f126:	or     BYTE PTR ds:0x288fc5f7,bl
  40f12c:	sub    BYTE PTR [edx+ebx*8-0x2c],0xeb
  40f131:	stc    
  40f132:	les    edx,FWORD PTR [esi+0x5df08a08]
  40f138:	jl     0x40f145
  40f13a:	cs xchg BYTE PTR ds:[edx+ecx*1+0x5ce714f],ch
  40f143:	pop    es
  40f144:	adc    al,0xf0
  40f146:	or     eax,edx
  40f148:	retf   
  40f149:	sahf   
  40f14a:	or     esp,ebp
  40f14c:	push   edi
  40f14d:	int3   
  40f14e:	add    edx,DWORD PTR [edi]
  40f150:	daa    
  40f151:	and    edi,edi
  40f153:	sbb    eax,DWORD PTR [eax]
  40f155:	sbb    BYTE PTR [edx+0x2833139d],0xba
  40f15c:	and    DWORD PTR [ebp+0x69210f1d],edi
  40f162:	jecxz  0x40f175
  40f164:	cmp    dh,bh
  40f166:	pop    es
  40f167:	sub    DWORD PTR [eax-0x467842de],edx
  40f16d:	inc    ebx
  40f16e:	mov    ebx,0xa8103e29
  40f173:	aad    0x9d
  40f175:	ror    BYTE PTR [edi+0x3ee32b03],0x85
  40f17c:	pushf  
  40f17d:	dec    edi
  40f17e:	add    cl,BYTE PTR [ebp-0x4e13d304]
  40f184:	sub    al,0x7
  40f186:	test   eax,0x59ab3308
  40f18b:	jmp    0x40f1c5
  40f18d:	daa    
  40f18e:	pop    es
  40f18f:	mov    eax,0x861c19c5
  40f194:	cmp    eax,0xb32ac78e
  40f199:	lods   eax,DWORD PTR ds:[esi]
  40f19a:	mov    esi,0x7cf33242
  40f19f:	xor    al,0x10
  40f1a1:	outs   dx,BYTE PTR ds:[esi]
  40f1a2:	add    al,0xd3
  40f1a4:	and    BYTE PTR [edx],al
  40f1a6:	jmp    0x3f82:0xc22d0681
  40f1ad:	adc    ah,BYTE PTR [ecx-0x53]
  40f1b0:	int3   
  40f1b1:	or     al,0xee
  40f1b3:	jle    0x40f15a
  40f1b5:	inc    esi
  40f1b6:	add    eax,0xb1157a8b
  40f1bb:	das    
  40f1bc:	(bad)  [ebx]
  40f1be:	ror    DWORD PTR [ecx+eax*1-0x6c],1
  40f1c2:	stos   BYTE PTR es:[edi],al
  40f1c3:	pusha  
  40f1c4:	xor    eax,0x46858979
  40f1c9:	mov    WORD PTR [eax+0x3e090e5a],?
  40f1cf:	adc    BYTE PTR [ecx+eiz*4+0x4e],ah
  40f1d3:	or     eax,0xc7cbe9a3
  40f1d8:	add    BYTE PTR [esi],bl
  40f1da:	retf   
  40f1db:	fimul  WORD PTR [ebx+0x40]
  40f1de:	lods   al,BYTE PTR ds:[esi]
  40f1df:	sbb    BYTE PTR [ecx],0xf1
  40f1e2:	push   0x57
  40f1e4:	pop    edx
  40f1e5:	out    0x5e,al
  40f1e7:	repz enter 0xa003,0x1e
  40f1ec:	cdq    
  40f1ed:	mov    dh,0x89
  40f1ef:	imul   eax,ebp,0x55
  40f1f2:	dec    esp
  40f1f3:	xor    eax,DWORD PTR [ebx]
  40f1f5:	sub    eax,edi
  40f1f7:	daa    
  40f1f8:	add    BYTE PTR [ecx-0x76a63d32],al
  40f1fe:	sbb    eax,DWORD PTR [eax+edx*4]
  40f201:	icebp  
  40f202:	jl     0x40f21a
  40f204:	cmp    DWORD PTR ds:0xe6490386,edi
  40f20a:	push   es
  40f20b:	mov    ebx,0x10fde35
  40f210:	mov    ebp,DWORD PTR [ecx+0x42d94150]
  40f216:	bound  ecx,QWORD PTR [esp+ecx*8]
  40f219:	aaa    
  40f21a:	int    0xf5
  40f21c:	dec    eax
  40f21d:	pop    esp
  40f21e:	push   es
  40f21f:	cwde   
  40f220:	sub    al,BYTE PTR [edx+eax*2-0x978d07]
  40f227:	imul   esi,edx,0xffffff9c
  40f22a:	add    eax,0xa52d79b9
  40f22f:	test   al,0xc9
  40f231:	fwait
  40f232:	outs   dx,DWORD PTR ds:[esi]
  40f233:	neg    edi
  40f235:	or     al,0xac
  40f237:	int3   
  40f238:	inc    BYTE PTR [esi+ebx*1+0x7a]
  40f23c:	jbe    0x40f1fc
  40f23e:	bt     DWORD PTR [edx],edx
  40f241:	fwait
  40f242:	enter  0xa113,0xb2
  40f246:	loop   0x40f24b
  40f248:	aas    
  40f249:	inc    esi
  40f24a:	in     al,0x8b
  40f24c:	out    0x8c,al
  40f24e:	ret    0x1e44
  40f251:	mov    cl,0x9a
  40f253:	stos   BYTE PTR es:[edi],al
  40f254:	and    BYTE PTR [esi+0x237ce312],0xa7
  40f25b:	and    al,0x15
  40f25d:	mov    dl,0x89
  40f25f:	or     DWORD PTR [ecx+0x58],ebp
  40f262:	sub    dh,BYTE PTR [ebx]
  40f264:	xor    edx,0x16
  40f267:	jne    0x40f24b
  40f269:	jle    0x40f1ee
  40f26b:	ds leave 
  40f26d:	cmp    eax,0x1396f1e9
  40f272:	push   ebx
  40f273:	xchg   ecx,esp
  40f275:	xchg   ebp,eax
  40f276:	xchg   DWORD PTR [ecx],eax
  40f278:	call   0xda9:0x73e6fa99
  40f27f:	pop    ecx
  40f280:	dec    edi
  40f281:	xchg   BYTE PTR [ebx],ch
  40f283:	imul   edx,DWORD PTR [ebx+0x10],0xfffffff0
  40f287:	sbb    al,0x24
  40f289:	aam    0xb3
  40f28b:	mov    DWORD PTR [ecx-0x20],esi
  40f28e:	retf   
  40f28f:	(bad)  
  40f290:	and    bh,bh
  40f292:	mov    WORD PTR [eax+0x5fe46f6],cs
  40f298:	aaa    
  40f299:	lahf   
  40f29a:	fmul   QWORD PTR [ebx]
  40f29c:	and    BYTE PTR [esi+0x1885d391],ch
  40f2a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2a3:	cli    
  40f2a4:	lods   eax,DWORD PTR ds:[esi]
  40f2a5:	adc    ch,bl
  40f2a7:	sbb    al,0xcb
  40f2a9:	shl    edx,0x80
  40f2ac:	pop    ebx
  40f2ad:	lahf   
  40f2ae:	mov    cl,0xe0
  40f2b0:	add    edx,ebp
  40f2b2:	mov    edx,?
  40f2b4:	pop    es
  40f2b5:	popa   
  40f2b6:	dec    esi
  40f2b7:	aam    0xf1
  40f2b9:	icebp  
  40f2ba:	loop   0x40f2a7
  40f2bc:	inc    ecx
  40f2bd:	pop    ss
  40f2be:	jb     0x40f254
  40f2c0:	retf   
  40f2c1:	mov    BYTE PTR [ebp+eiz*4-0x5f],ch
  40f2c5:	or     dh,bl
  40f2c7:	(bad)  
  40f2c8:	xor    dh,BYTE PTR [ebp+ecx*1-0x6839bacb]
  40f2cf:	add    ch,BYTE PTR [esi+0x1d1cadab]
  40f2d5:	in     al,0xaa
  40f2d7:	mov    ss,WORD PTR [edx]
  40f2d9:	add    eax,0xc0858478
  40f2de:	jb     0x40f2a4
  40f2e0:	add    DWORD PTR [ebx+0x4b],eax
  40f2e3:	out    0xad,eax
  40f2e5:	lahf   
  40f2e6:	cmp    edi,DWORD PTR ds:[eax]
  40f2e9:	add    eax,0x54e2bbbf
  40f2ee:	loope  0x40f347
  40f2f0:	cmp    eax,0x82e0eec9
  40f2f5:	xchg   edx,eax
  40f2f6:	add    BYTE PTR [ecx-0x5f035cac],bl
  40f2fc:	sub    ebx,eax
  40f2fe:	pop    ecx
  40f2ff:	or     ebp,DWORD PTR [eax+ecx*4+0x29dd6136]
  40f306:	mov    dl,0xc
  40f308:	es push eax
  40f30a:	mov    edi,edx
  40f30c:	shl    BYTE PTR [edi+0x5],cl
  40f30f:	cld    
  40f310:	sti    
  40f311:	sub    BYTE PTR [esi-0x2a223b5c],bh
  40f317:	and    DWORD PTR [eax+0x4],0x8b23979c
  40f31e:	or     al,0x5a
  40f320:	gs ret 
  40f322:	push   cs
  40f323:	sub    esi,DWORD PTR [edx-0xd]
  40f326:	push   edi
  40f327:	shl    edx,cl
  40f329:	addr16 sbb eax,0xcf21a83c
  40f32f:	ja     0x40f36a
  40f331:	and    edi,ebp
  40f333:	es xchg ebx,eax
  40f335:	std    
  40f336:	stc    
  40f337:	jbe    0x40f3a3
  40f339:	leave  
  40f33a:	adc    DWORD PTR [eax],ecx
  40f33c:	lahf   
  40f33d:	imul   edx,ebx,0xa
  40f340:	add    esi,DWORD PTR [ebp+0x11]
  40f343:	cmc    
  40f344:	push   eax
  40f345:	add    al,0xd2
  40f347:	pop    ebx
  40f348:	ret    
  40f349:	(bad)  
  40f34a:	pmaxsw mm0,QWORD PTR [esi+0x28]
  40f34e:	mov    cl,0x55
  40f350:	cld    
  40f351:	mov    ds:0x93937463,al
  40f356:	adc    edi,ebp
  40f358:	imul   eax,DWORD PTR ds:0x78cd081a,0x1
  40f35f:	mov    ds:0xcdf179df,eax
  40f364:	fisubr WORD PTR [ebx+0x7a12065d]
  40f36a:	add    al,0xf7
  40f36c:	fcmovne st,st(1)
  40f36e:	loopne 0x40f2f3
  40f370:	stos   BYTE PTR es:[edi],al
  40f371:	packssdw mm1,mm1
  40f374:	push   es
  40f375:	cmp    eax,0xcedd19ce
  40f37a:	(bad)  
  40f37b:	shl    BYTE PTR [ebx],1
  40f37d:	cld    
  40f37e:	lock xchg ebx,esp
  40f381:	mov    ebp,0x2d7cb84f
  40f386:	hlt    
  40f387:	shl    esi,cl
  40f389:	rcr    edx,0xd6
  40f38c:	aad    0xdf
  40f38e:	(bad)  [edx]
  40f390:	add    ch,dh
  40f392:	jnp    0x40f399
  40f394:	jne    0x40f396
  40f396:	push   0x2e026cfc
  40f39b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f39c:	adc    esi,ebp
  40f39e:	dec    ebp
  40f39f:	out    0xe8,eax
  40f3a1:	sbb    ebx,DWORD PTR [ecx-0xc]
  40f3a4:	shr    DWORD PTR [ecx],0xb1
  40f3a7:	jp     0x40f3ab
  40f3a9:	inc    ebp
  40f3aa:	inc    edi
  40f3ab:	sub    eax,0xe0b66eca
  40f3b0:	add    dh,ch
  40f3b2:	cmp    edx,ebp
  40f3b4:	out    dx,al
  40f3b5:	dec    ecx
  40f3b6:	push   esi
  40f3b7:	mov    esi,eax
  40f3b9:	pushw  es
  40f3bb:	sub    dl,al
  40f3bd:	add    BYTE PTR [ecx],cl
  40f3bf:	hlt    
  40f3c0:	mov    al,ds:0xc5107222
  40f3c5:	add    eax,0x918dfe05
  40f3ca:	push   edi
  40f3cb:	cmp    ecx,0x3
  40f3ce:	xchg   edx,eax
  40f3cf:	mov    BYTE PTR [ebx],cl
  40f3d1:	inc    ebp
  40f3d2:	shr    DWORD PTR [ecx-0x8],0x3e
  40f3d6:	push   cs
  40f3d7:	add    ecx,esp
  40f3d9:	push   esi
  40f3da:	popa   
  40f3db:	into   
  40f3dc:	das    
  40f3dd:	push   ebx
  40f3de:	int    0xab
  40f3e0:	dec    esp
  40f3e1:	scas   al,BYTE PTR es:[edi]
  40f3e2:	retf   
  40f3e3:	and    eax,0xdc8c2c99
  40f3e8:	mov    gs,edx
  40f3ea:	push   es
  40f3eb:	je     0x40f431
  40f3ed:	idiv   DWORD PTR [eax+0x2750285d]
  40f3f3:	sub    cl,BYTE PTR [ebx]
  40f3f5:	mov    eax,ds:0x7eb478fb
  40f3fa:	and    bh,ch
  40f3fc:	pop    edx
  40f3fd:	lahf   
  40f3fe:	nop
  40f3ff:	cld    
  40f400:	div    ah
  40f402:	jmp    0x40f425
  40f404:	pop    esi
  40f405:	jp     0x40f446
  40f407:	adc    DWORD PTR [edx],esp
  40f409:	adc    eax,0x32029348
  40f40e:	test   BYTE PTR [esi],cl
  40f410:	(bad)  
  40f411:	clc    
  40f412:	es jo  0x40f429
  40f415:	add    bl,BYTE PTR [ecx+0x1c026d3e]
  40f41b:	loope  0x40f3ab
  40f41d:	into   
  40f41e:	mov    ds:0x1cbe5d6,eax
  40f423:	or     BYTE PTR [esi+0x26d1dacc],ah
  40f429:	adc    BYTE PTR [ecx+0x13ffcc00],cl
  40f42f:	(bad)  
  40f430:	(bad)  
  40f431:	aad    0x30
  40f433:	leave  
  40f434:	xchg   ebx,eax
  40f435:	sar    cl,1
  40f437:	xor    eax,0xf744af6e
  40f43c:	and    al,0x38
  40f43e:	rol    dl,0x3
  40f441:	das    
  40f442:	fldl2t 
  40f444:	adc    DWORD PTR [ecx-0x18],ebx
  40f447:	into   
  40f448:	mov    WORD PTR [esi+0x4e],?
  40f44b:	sbb    al,0xa5
  40f44d:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40f44f:	pop    ecx
  40f450:	or     al,0x2e
  40f452:	push   edi
  40f453:	inc    esp
  40f454:	fdiv   QWORD PTR [edx]
  40f456:	mov    ebx,0x17125628
  40f45b:	in     al,dx
  40f45c:	jo     0x40f44f
  40f45e:	leave  
  40f45f:	push   esi
  40f460:	scas   al,BYTE PTR es:[edi]
  40f461:	inc    edx
  40f462:	cmp    DWORD PTR [esi+0x1d],esi
  40f465:	test   BYTE PTR [eax],0xb6
  40f468:	cmp    edx,DWORD PTR [ecx]
  40f46a:	adc    al,0xc5
  40f46c:	pop    edx
  40f46d:	push   0xffffffeb
  40f46f:	sbb    BYTE PTR ds:0xfd17402f,al
  40f475:	adc    cl,BYTE PTR [ebp+0x11ef1438]
  40f47b:	(bad)  
  40f47c:	mov    eax,0xed2dcfad
  40f481:	loopne 0x40f4b0
  40f483:	nop
  40f484:	hlt    
  40f485:	pop    edi
  40f486:	mov    edx,0x826fa86e
  40f48b:	or     eax,DWORD PTR [ecx+eiz*1-0x34f8f9b6]
  40f492:	mov    dl,0xd3
  40f494:	and    eax,0xd0e6ac19
  40f499:	pop    esi
  40f49a:	mov    eax,ds:0x41026a8f
  40f49f:	dec    esp
  40f4a0:	retf   
  40f4a1:	pop    es
  40f4a2:	dec    ecx
  40f4a3:	xor    BYTE PTR ds:0x394e0000,al
  40f4a9:	dec    ebp
  40f4aa:	adc    al,BYTE PTR [eax]
  40f4ac:	addr16 into 
  40f4ae:	sti    
  40f4af:	inc    ecx
  40f4b0:	push   0xffffffe5
  40f4b2:	into   
  40f4b3:	jl     0x40f45f
  40f4b5:	jg     0x40f4ba
  40f4b7:	inc    ecx
  40f4b8:	add    BYTE PTR [edx+0x113a0397],al
  40f4be:	sbb    BYTE PTR [eax],ah
  40f4c0:	or     dl,BYTE PTR [ecx+0x67]
  40f4c3:	(bad)  
  40f4c4:	push   ss
  40f4c5:	out    0x45,al
  40f4c7:	push   eax
  40f4c8:	sbb    eax,0x54286857
  40f4cd:	stos   BYTE PTR es:[edi],al
  40f4ce:	pop    esp
  40f4cf:	or     eax,0x13a2f207
  40f4d4:	sbb    esp,edi
  40f4d6:	dec    ecx
  40f4d7:	retf   
  40f4d8:	mov    bh,0x31
  40f4da:	pop    esp
  40f4db:	adc    dl,al
  40f4dd:	outs   dx,DWORD PTR ds:[esi]
  40f4de:	and    edi,DWORD PTR [ecx]
  40f4e0:	lds    eax,FWORD PTR [edi-0x5342d919]
  40f4e6:	nop
  40f4e7:	sti    
  40f4e8:	out    dx,al
  40f4e9:	pop    esi
  40f4ea:	stc    
  40f4eb:	cmc    
  40f4ec:	inc    esi
  40f4ed:	add    eax,0xe9e2d622
  40f4f2:	mov    ds:0x3ea80a81,eax
  40f4f7:	inc    edx
  40f4f8:	lock push esp
  40f4fa:	mov    ds:0x4b2818cb,al
  40f4ff:	mov    bl,0xf5
  40f501:	daa    
  40f502:	es test al,0x54
  40f505:	mov    esi,0x62a5c08e
  40f50a:	or     dl,dh
  40f50c:	jmp    0xf2ba06d4
  40f511:	dec    eax
  40f512:	hlt    
  40f513:	cdq    
  40f514:	sub    esp,DWORD PTR [edx]
  40f516:	mov    dl,0x43
  40f518:	jg     0x40f4a8
  40f51a:	inc    esp
  40f51b:	and    esi,DWORD PTR [esi-0x72]
  40f51e:	push   esp
  40f51f:	mov    edi,0x7883627
  40f524:	dec    ebp
  40f525:	test   DWORD PTR [edi],edi
  40f527:	fld1   
  40f529:	sar    BYTE PTR [ebx+0x15],cl
  40f52c:	(bad)  
  40f52e:	in     al,0x23
  40f530:	loope  0x40f54f
  40f532:	push   0xffffffc7
  40f534:	mov    ds:0x681d0a69,eax
  40f539:	dec    esp
  40f53a:	int3   
  40f53b:	mov    al,0xbb
  40f53d:	fimul  DWORD PTR [edx]
  40f53f:	add    DWORD PTR [ecx-0x3009c9ea],esp
  40f545:	fcmovnb st,st(5)
  40f547:	push   edi
  40f548:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f549:	mov    BYTE PTR ds:0x36b1e55b,bh
  40f54f:	adc    ecx,DWORD PTR [ebx+0x711ce01d]
  40f555:	aaa    
  40f556:	push   cs
  40f557:	mov    WORD PTR [edi],cs
  40f559:	fist   DWORD PTR [edi]
  40f55b:	and    eax,0x41160782
  40f560:	mov    ?,WORD PTR [ebp+0x1b]
  40f563:	and    BYTE PTR [ecx-0x31],ah
  40f566:	pop    ss
  40f567:	das    
  40f568:	imul   esp,DWORD PTR [eax+0x3e],0xe5c31488
  40f56f:	xchg   ecx,eax
  40f570:	adc    BYTE PTR ds:0x706b2b1d,0xc2
  40f577:	in     al,dx
  40f578:	or     al,0xce
  40f57a:	and    DWORD PTR [esi+0x422eb232],ecx
  40f580:	arpl   WORD PTR ds:0xd45184d0,di
  40f586:	fs sub eax,0x6e738681
  40f58c:	mov    dl,0x8f
  40f58e:	lds    ebp,FWORD PTR [ecx+0x2c36aaed]
  40f594:	pop    ebp
  40f595:	loopne 0x40f5a1
  40f597:	and    ch,BYTE PTR [eax-0x18]
  40f59a:	sub    al,0x80
  40f59c:	jmp    0x8a4d10c6
  40f5a1:	xchg   edi,eax
  40f5a2:	or     BYTE PTR [ecx-0x54e9f999],ch
  40f5a8:	adc    ecx,DWORD PTR [ebx*1-0x5fdb54e8]
  40f5af:	test   ebp,0x14700d83
  40f5b5:	xchg   edx,eax
  40f5b6:	mov    edi,0xb3464aaa
  40f5bb:	test   al,0x1a
  40f5bd:	push   esi
  40f5be:	(bad)  
  40f5bf:	pop    edi
  40f5c0:	add    cl,BYTE PTR [ebx-0x2c]
  40f5c3:	aad    0xd9
  40f5c5:	retf   
  40f5c6:	fld    DWORD PTR ds:0x440fdf2a
  40f5cc:	add    BYTE PTR [ebx],bl
  40f5ce:	in     eax,dx
  40f5cf:	xchg   ebx,ecx
  40f5d1:	mov    ds:0x90c6e2db,al
  40f5d6:	sbb    esi,DWORD PTR ds:0x152a374b
  40f5dc:	fs popf 
  40f5de:	jp     0x40f5ce
  40f5e0:	push   ss
  40f5e1:	es jge 0x40f603
  40f5e4:	inc    edx
  40f5e5:	fs adc al,0x79
  40f5e8:	iret   
  40f5e9:	xchg   ebp,eax
  40f5ea:	addr16 inc ebp
  40f5ec:	pop    ecx
  40f5ed:	call   0x2d36d7f7
  40f5f2:	cmp    BYTE PTR [edi],ah
  40f5f4:	outs   dx,DWORD PTR ds:[esi]
  40f5f5:	daa    
  40f5f6:	xor    eax,0xcb259004
  40f5fb:	and    eax,0x1d762de0
  40f600:	cmp    DWORD PTR [edx],esp
  40f602:	sbb    edx,DWORD PTR [edi]
  40f604:	add    BYTE PTR [ebp+edx*1+0x21],0x13
  40f609:	sub    DWORD PTR [eax],0xc7f9ca22
  40f60f:	and    edx,esp
  40f611:	adc    BYTE PTR [edi+0x10],dh
  40f614:	cmp    BYTE PTR [edx],bl
  40f616:	sbb    BYTE PTR [edi],dl
  40f618:	mov    es,WORD PTR [ebp+ecx*1+0x2d]
  40f61c:	add    BYTE PTR [ebx+eax*1-0x6cd22b],dl
  40f623:	outs   dx,BYTE PTR ds:[esi]
  40f624:	int3   
  40f625:	cli    
  40f626:	or     eax,0xfd74fd68
  40f62b:	cmp    al,0xe0
  40f62d:	sbb    ch,dh
  40f62f:	xchg   DWORD PTR [ebp-0x15],ecx
  40f632:	sub    ebx,esp
  40f634:	nop
  40f635:	ror    ecx,1
  40f637:	(bad)  
  40f639:	fdivr  DWORD PTR [ebp-0x2c]
  40f63c:	aas    
  40f63d:	int3   
  40f63e:	adc    ebp,ecx
  40f640:	test   BYTE PTR [esi-0x37],al
  40f643:	js     0x40f5d1
  40f645:	inc    eax
  40f646:	mov    esp,0xbf9db324
  40f64b:	icebp  
  40f64c:	mov    al,0x32
  40f64e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f64f:	push   ds
  40f650:	test   al,0x82
  40f652:	inc    edx
  40f653:	mov    eax,ds:0x9e97a820
  40f658:	retf   
  40f659:	pushf  
  40f65a:	jmp    0x33de66fc
  40f65f:	dec    ebp
  40f660:	and    BYTE PTR [esi],0x80
  40f663:	xchg   esp,eax
  40f664:	xchg   dl,cl
  40f666:	sub    edx,0x7c
  40f669:	jae    0x40f6dd
  40f66b:	aaa    
  40f66c:	je     0x40f67f
  40f66e:	jno    0x40f5f3
  40f670:	inc    ecx
  40f671:	imul   ebp,DWORD PTR [edx],0x69
  40f674:	xchg   ebp,eax
  40f675:	pusha  
  40f676:	leave  
  40f677:	ins    DWORD PTR es:[edi],dx
  40f678:	jmp    0x359175dc
  40f67d:	pop    esi
  40f67e:	sbb    BYTE PTR [ecx-0x7f],dl
  40f681:	dec    esi
  40f682:	inc    eax
  40f683:	and    DWORD PTR [edx-0x69],ecx
  40f686:	dec    esp
  40f687:	rol    BYTE PTR [edi-0x19],0x3b
  40f68b:	jge    0x40f6fe
  40f68d:	and    edx,DWORD PTR [eax]
  40f68f:	jge    0x40f611
  40f691:	inc    ebp
  40f692:	je     0x40f6c0
  40f694:	arpl   WORD PTR [esi-0x119c3291],bx
  40f69a:	outs   dx,BYTE PTR ds:[esi]
  40f69b:	jg     0x40f6f6
  40f69d:	ss push ebp
  40f69f:	push   ds
  40f6a0:	push   edi
  40f6a1:	mov    WORD PTR [edi+0x52],cs
  40f6a4:	sub    eax,0xca499949
  40f6a9:	inc    edi
  40f6aa:	in     eax,0x49
  40f6ac:	jbe    0x40f6e7
  40f6ae:	aas    
  40f6af:	xor    BYTE PTR [ebx],bl
  40f6b1:	xor    DWORD PTR [ebp-0x64fdcdbd],eax
  40f6b7:	loop   0x40f726
  40f6b9:	mov    dl,0xb1
  40f6bb:	rcr    DWORD PTR [esi-0x7c],0xc5
  40f6bf:	push   ss
  40f6c0:	xlat   BYTE PTR ds:[ebx]
  40f6c1:	or     BYTE PTR [esi],bh
  40f6c3:	xlat   BYTE PTR ds:[ebx]
  40f6c4:	sub    al,0xc8
  40f6c6:	cmp    al,0x60
  40f6c8:	cmp    esi,ecx
  40f6ca:	mov    eax,DWORD PTR [eax+esi*1]
  40f6cd:	imul   ecx,DWORD PTR [edx+0x5c],0x13f9763c
  40f6d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6d5:	scas   eax,DWORD PTR es:[edi]
  40f6d6:	push   ebp
  40f6d7:	push   esi
  40f6d8:	lahf   
  40f6d9:	add    al,0x27
  40f6db:	xchg   ebp,eax
  40f6dc:	nop
  40f6dd:	lahf   
  40f6de:	into   
  40f6df:	xchg   ebx,eax
  40f6e0:	out    dx,al
  40f6e1:	xor    BYTE PTR [ebp-0x78],0x34
  40f6e5:	sbb    DWORD PTR [ebx],0x84898989
  40f6eb:	dec    ecx
  40f6ec:	mov    cl,0xc4
  40f6ee:	std    
  40f6ef:	fnsave [ecx-0x33b72200]
  40f6f5:	(bad)  
  40f6f6:	clc    
  40f6f7:	in     eax,0xa1
  40f6f9:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40f6fb:	aaa    
  40f6fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6fd:	in     al,dx
  40f6fe:	pop    ebx
  40f6ff:	pusha  
  40f700:	mov    dl,0x4f
  40f702:	mov    ebp,0x7fb7c991
  40f707:	dec    edx
  40f708:	push   cs
  40f709:	xor    BYTE PTR [eax],bh
  40f70b:	out    0xd0,eax
  40f70d:	sbb    DWORD PTR [ecx-0x8],edx
  40f710:	mov    edx,0x74442f7c
  40f715:	sub    dl,BYTE PTR [ecx]
  40f717:	push   ebp
  40f718:	jmp    0x40f6e3
  40f71a:	lods   al,BYTE PTR ds:[esi]
  40f71b:	fistp  QWORD PTR [esi]
  40f71d:	xchg   BYTE PTR [edi-0x76],al
  40f720:	(bad)  
  40f722:	lds    esp,FWORD PTR [ebp+0x8]
  40f725:	push   esi
  40f726:	in     al,0x38
  40f728:	and    DWORD PTR [edx],ecx
  40f72a:	ret    
  40f72b:	shufps xmm0,XMMWORD PTR [ebx-0x7],0x2b
  40f730:	adc    al,0x7e
  40f732:	mov    edi,0x7b7ed3f
  40f737:	xchg   ecx,eax
  40f738:	call   0xae4ce2ff
  40f73d:	sub    eax,esi
  40f73f:	add    edx,DWORD PTR [ebx+0x73fd59c9]
  40f745:	mov    al,ds:0x424038a8
  40f74a:	repnz dec esp
  40f74c:	nop
  40f74d:	test   BYTE PTR [edi+eiz*1],al
  40f750:	aam    0xd7
  40f752:	push   esp
  40f753:	cmp    al,BYTE PTR [eax-0x25ae93fe]
  40f759:	cmp    BYTE PTR [ebx-0x4df34106],cl
  40f75f:	push   ecx
  40f760:	xchg   esp,eax
  40f761:	xor    DWORD PTR [eax+0x55],edx
  40f764:	jns    0x40f78c
  40f766:	stc    
  40f767:	cli    
  40f768:	inc    ebx
  40f769:	sbb    al,0xc
  40f76b:	xor    edx,esi
  40f76d:	pop    esp
  40f76e:	sub    eax,0xe935513b
  40f773:	das    
  40f774:	cdq    
  40f775:	or     BYTE PTR [eax-0x2ebd9c8d],bh
  40f77b:	mov    WORD PTR [edx-0xd3aa091],es
  40f781:	call   0x9660e5a2
  40f786:	dec    ecx
  40f787:	push   eax
  40f788:	or     al,0xb0
  40f78a:	push   esi
  40f78b:	fwait
  40f78c:	arpl   cx,bx
  40f78e:	pop    eax
  40f78f:	inc    esp
  40f790:	sbb    eax,0x4b494211
  40f795:	cwde   
  40f796:	sbb    DWORD PTR [edi+0x78e51e5d],edx
  40f79c:	repnz sbb cl,ch
  40f79f:	sbb    esi,DWORD PTR [eax+ebp*1+0x61459b04]
  40f7a6:	jne    0x40f74d
  40f7a8:	lods   eax,DWORD PTR ds:[esi]
  40f7a9:	sbb    ecx,DWORD PTR [edi+eiz*2+0x4e]
  40f7ad:	cmp    BYTE PTR [edx],ah
  40f7af:	or     al,0x8b
  40f7b1:	iret   
  40f7b2:	fsubr  st,st(6)
  40f7b4:	mov    esp,0xb4562be3
  40f7b9:	lds    esi,FWORD PTR [edx+0x5793bfd9]
  40f7bf:	adc    BYTE PTR [ecx+ecx*4+0x4a],bl
  40f7c3:	int    0xef
  40f7c5:	mov    eax,0xdd963e9a
  40f7ca:	clc    
  40f7cb:	pusha  
  40f7cc:	int3   
  40f7cd:	sbb    eax,0x4b1bf298
  40f7d2:	(bad)  
  40f7d3:	(bad)  
  40f7d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7d5:	aas    
  40f7d6:	int    0xcb
  40f7d8:	inc    edi
  40f7d9:	push   edx
  40f7da:	sti    
  40f7db:	xchg   DWORD PTR [esi],esp
  40f7dd:	xor    eax,0xc46d8bd1
  40f7e2:	cdq    
  40f7e3:	ss push 0x0
  40f7e6:	push   ecx
  40f7e7:	jp     0x40f7ed
  40f7e9:	ins    DWORD PTR es:[edi],dx
  40f7ea:	sub    esp,DWORD PTR [eax]
  40f7ec:	push   esp
  40f7ed:	jge    0x40f805
  40f7ef:	aaa    
  40f7f0:	pushf  
  40f7f1:	jle    0x40f7fd
  40f7f3:	out    0x81,al
  40f7f5:	dec    eax
  40f7f6:	std    
  40f7f7:	rcl    DWORD PTR [edx+0x11cb1f36],1
  40f7fd:	jle    0x40f80b
  40f7ff:	push   ecx
  40f800:	std    
  40f801:	xchg   esp,eax
  40f802:	lahf   
  40f803:	jecxz  0x40f847
  40f805:	jecxz  0x40f84e
  40f807:	mov    dh,0xb0
  40f809:	push   ebp
  40f80a:	lds    esp,FWORD PTR [ebx-0x65595f39]
  40f810:	jp     0x40f80f
  40f812:	mov    esi,esi
  40f814:	mov    ?,WORD PTR [ecx+0x45]
  40f817:	xchg   esp,eax
  40f818:	(bad)  
  40f81a:	lods   al,BYTE PTR ds:[esi]
  40f81b:	and    eax,0x1b60d8e5
  40f820:	inc    ebp
  40f821:	test   BYTE PTR [edx+ebx*8-0x2b4863ce],0x6a
  40f829:	and    eax,0xb0776a74
  40f82e:	stc    
  40f82f:	xor    eax,0x19055a2c
  40f834:	dec    eax
  40f835:	ja     0x40f82c
  40f837:	ror    BYTE PTR [edi+0x46],1
  40f83a:	xchg   ecx,eax
  40f83b:	inc    edx
  40f83c:	jle    0x40f7cf
  40f83e:	mov    DWORD PTR [eax-0x34c6140b],eax
  40f844:	es popa 
  40f846:	ins    DWORD PTR es:[edi],dx
  40f847:	sbb    al,0xd8
  40f849:	call   0x941b:0xbb68f04
  40f850:	es sub eax,0x494ea46b
  40f856:	add    ebp,DWORD PTR [esi]
  40f858:	cmc    
  40f859:	add    DWORD PTR [eax-0x5cc942de],ebp
  40f85f:	retf   
  40f860:	mov    WORD PTR [edx],ds
  40f862:	not    BYTE PTR [edx+0x65]
  40f865:	fistp  DWORD PTR [ebx+esi*1+0x12]
  40f869:	mov    ds:0x4fd178a2,eax
  40f86e:	ds mov esi,0x10465300
  40f874:	jo     0x40f838
  40f876:	sub    eax,0x19638d5d
  40f87b:	(bad)  
  40f87c:	push   cs
  40f87d:	fwait
  40f87e:	cwde   
  40f87f:	push   0xbfe61a1e
  40f884:	mov    al,0x97
  40f886:	test   bl,ch
  40f888:	loop   0x40f86f
  40f88a:	mov    edx,DWORD PTR [edx-0x1]
  40f88d:	jae    0x40f8bd
  40f88f:	hlt    
  40f890:	jge    0x40f8f0
  40f892:	ret    0xe404
  40f895:	cmc    
  40f896:	dec    edx
  40f897:	(bad)  
  40f898:	mov    dh,0x9a
  40f89a:	push   esp
  40f89b:	scas   eax,DWORD PTR es:[edi]
  40f89c:	add    al,0xc3
  40f89e:	or     al,0x18
  40f8a0:	in     al,dx
  40f8a1:	pop    ebp
  40f8a2:	sub    al,0x7
  40f8a4:	pop    edx
  40f8a5:	xchg   DWORD PTR [esi-0x3],ecx
  40f8a8:	mov    WORD PTR [ebp+edx*4-0x27],?
  40f8ac:	mov    ?,WORD PTR [eax]
  40f8ae:	mov    al,0x39
  40f8b0:	xlat   BYTE PTR ds:[ebx]
  40f8b1:	push   edx
  40f8b2:	loop   0x40f8a4
  40f8b4:	and    BYTE PTR [esi-0x72afe63e],cl
  40f8ba:	sbb    al,0x2f
  40f8bc:	jp     0x40f91b
  40f8be:	daa    
  40f8bf:	fdiv   st(1),st
  40f8c1:	fs daa 
  40f8c3:	pop    edi
  40f8c4:	aad    0x74
  40f8c6:	or     ecx,ebp
  40f8c8:	adc    ch,BYTE PTR [ecx-0x68]
  40f8cb:	fnstsw WORD PTR [edx+ebp*1+0x5c490109]
  40f8d2:	aad    0x90
  40f8d4:	(bad)
  40f8d7:	aas    
  40f8d8:	xor    edx,ebp
  40f8da:	pop    ds
  40f8db:	(bad)  
  40f8dc:	(bad)  
  40f8de:	jmp    0x40f910
  40f8e0:	inc    ebp
  40f8e1:	and    DWORD PTR [edx*1+0x19dfc12f],ecx
  40f8e8:	rol    dl,1
  40f8ea:	mov    ecx,0xa11c4689
  40f8ef:	int3   
  40f8f0:	mov    WORD PTR [edx],gs
  40f8f2:	cdq    
  40f8f3:	enter  0xc132,0xcd
  40f8f7:	cmc    
  40f8f8:	popf   
  40f8f9:	inc    esi
  40f8fa:	mov    WORD PTR [ecx+eax*4-0x35],?
  40f8fe:	iret   
  40f8ff:	mov    dl,BYTE PTR [ebx]
  40f901:	mov    al,0xb1
  40f903:	jbe    0x40f8ab
  40f905:	data16 mov ch,0x2c
  40f908:	mov    DWORD PTR [esi+0x4],edx
  40f90b:	xchg   esi,eax
  40f90c:	and    esi,DWORD PTR [edx-0x52d4a6b5]
  40f912:	push   es
  40f913:	sahf   
  40f914:	ror    BYTE PTR [edi-0x4d],0x3c
  40f918:	mov    esi,0x5bbb42a9
  40f91d:	ret    
  40f91e:	ret    0x8c
  40f921:	and    eax,0xe973b18c
  40f926:	lock sub eax,0x93e4fb81
  40f92c:	nop
  40f92d:	sbb    ebp,DWORD PTR [ebx+0x2acdfd8e]
  40f933:	fstp   DWORD PTR [esp+eiz*4]
  40f936:	sar    al,0x84
  40f939:	dec    ecx
  40f93a:	adc    BYTE PTR [edi],ch
  40f93c:	aaa    
  40f93d:	cmp    BYTE PTR [edx+edi*2+0x45],dh
  40f941:	sahf   
  40f942:	xchg   ecx,eax
  40f943:	ja     0x40f986
  40f945:	fwait
  40f946:	sub    eax,0x93c0bd2c
  40f94b:	call   esi
  40f94d:	inc    edx
  40f94e:	(bad)  
  40f94f:	jge    0x40f8f1
  40f951:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f952:	popf   
  40f953:	sbb    dh,BYTE PTR [ecx+0x23]
  40f956:	cwde   
  40f957:	inc    ebp
  40f958:	test   eax,0xe5474cf6
  40f95d:	retf   
  40f95e:	jge    0x40f9db
  40f960:	mov    DWORD PTR [esi-0x7e8c77bf],ecx
  40f966:	xchg   ecx,eax
  40f967:	cmp    esi,edx
  40f969:	pop    ss
  40f96a:	jle    0x40f8f5
  40f96c:	pop    ss
  40f96d:	mov    ecx,0x4657482e
  40f972:	mov    ds:0xc331cc92,eax
  40f977:	dec    esi
  40f978:	es inc ecx
  40f97a:	sti    
  40f97b:	mov    esi,0xb41885d1
  40f980:	fidiv  WORD PTR [ebp+0xc]
  40f983:	hlt    
  40f984:	lds    ebp,FWORD PTR [edi]
  40f986:	sbb    al,BYTE PTR [ebx+0x55ea818a]
  40f98c:	dec    edi
  40f98d:	jns    0x40f9a1
  40f98f:	pushf  
  40f990:	lock cmc 
  40f992:	jae    0x40f988
  40f994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f995:	add    eax,0x7119062e
  40f99a:	lahf   
  40f99b:	aad    0x88
  40f99d:	xchg   esi,eax
  40f99e:	pop    ss
  40f99f:	cmp    al,0x4c
  40f9a1:	add    al,0x8b
  40f9a3:	ds lahf 
  40f9a5:	ins    DWORD PTR es:[edi],dx
  40f9a6:	adc    DWORD PTR [edx],esi
  40f9a8:	pop    es
  40f9a9:	pop    ebp
  40f9aa:	test   DWORD PTR [edx+0x7f],0xee62e08d
  40f9b1:	sub    BYTE PTR [edx+0x3e],dh
  40f9b4:	out    dx,al
  40f9b5:	cmp    ebp,DWORD PTR [ebx]
  40f9b7:	test   eax,0x8b27d01a
  40f9bc:	jg     0x40f970
  40f9be:	add    bl,dl
  40f9c0:	les    esp,FWORD PTR [ecx+edi*2]
  40f9c3:	cwde   
  40f9c4:	pop    es
  40f9c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9c6:	dec    edi
  40f9c7:	mov    WORD PTR [ecx],es
  40f9c9:	add    ebx,DWORD PTR [ebp+0x4468897e]
  40f9cf:	mov    BYTE PTR [ebp+ecx*8+0x6f904f68],dl
  40f9d6:	test   al,0x44
  40f9d8:	jge    0x40f9fd
  40f9da:	mov    bh,0x14
  40f9dc:	sub    eax,DWORD PTR [ecx]
  40f9de:	test   al,0x96
  40f9e0:	fs out dx,eax
  40f9e2:	xor    DWORD PTR [esi],ebx
  40f9e4:	ins    DWORD PTR es:[edi],dx
  40f9e5:	pop    es
  40f9e6:	adc    BYTE PTR [edx+eiz*2+0x2d],0x83
  40f9eb:	mov    ds:0x45070361,eax
  40f9f0:	arpl   WORD PTR [ebp+ecx*1+0x5f780bae],sp
  40f9f7:	adc    edx,DWORD PTR [esi+edi*8]
  40f9fa:	enter  0x5c89,0x66
  40f9fe:	and    DWORD PTR [bp+0x18],ebx
  40fa02:	shl    DWORD PTR [eax+0x2],1
  40fa05:	sbb    DWORD PTR [ebx+0xc],esp
  40fa08:	cdq    
  40fa09:	dec    edi
  40fa0a:	mov    edi,0x917fa709
  40fa0f:	lea    esi,[eax]
  40fa11:	add    al,0xec
  40fa13:	rol    dl,0x35
  40fa16:	out    0xc6,al
  40fa18:	adc    cl,BYTE PTR [esi]
  40fa1a:	pop    ss
  40fa1b:	ins    DWORD PTR es:[edi],dx
  40fa1c:	mov    esi,DWORD PTR [esi-0x4f70dd3f]
  40fa22:	lods   al,BYTE PTR ds:[esi]
  40fa23:	sbb    ah,BYTE PTR [ebp+0xe]
  40fa26:	xchg   esi,eax
  40fa27:	or     DWORD PTR [edx+0x1c9552ca],0x7b
  40fa2e:	mov    gs,esi
  40fa30:	or     eax,0x8a418575
  40fa35:	sub    DWORD PTR [ebx+0x10],esi
  40fa38:	imul   edx,DWORD PTR [ebp+0x12792d62],0x58f287fd
  40fa42:	lods   eax,DWORD PTR ds:[esi]
  40fa43:	pop    ss
  40fa44:	xchg   DWORD PTR [edx],ebp
  40fa46:	loop   0x40fa71
  40fa48:	jbe    0x40fa68
  40fa4a:	jno    0x40f9e2
  40fa4c:	inc    ebx
  40fa4d:	inc    esi
  40fa4e:	or     eax,0x420db99d
  40fa53:	arpl   WORD PTR [eax],si
  40fa55:	test   al,0xcf
  40fa57:	cmp    al,0x1a
  40fa59:	mov    ebp,0x240848b7
  40fa5e:	inc    esp
  40fa5f:	mov    edi,0x1b47aece
  40fa64:	int3   
  40fa65:	lea    ecx,[ecx+0x39]
  40fa68:	cmp    al,0xe9
  40fa6a:	and    BYTE PTR [esi],al
  40fa6c:	mov    ecx,0xb4232bc1
  40fa71:	ret    0xf521
  40fa74:	mov    dh,0xe9
  40fa76:	sub    al,0xac
  40fa78:	cmc    
  40fa79:	repz sub al,0x92
  40fa7c:	pushf  
  40fa7d:	mov    ebp,0xfd92057
  40fa82:	sub    eax,0x3357aa94
  40fa87:	push   eax
  40fa88:	add    BYTE PTR [ecx],cl
  40fa8a:	daa    
  40fa8b:	inc    edx
  40fa8c:	add    BYTE PTR [edi+0xe],ah
  40fa8f:	jbe    0x40faa8
  40fa91:	push   esi
  40fa92:	gs dec ecx
  40fa94:	or     esp,DWORD PTR [esi]
  40fa96:	xchg   BYTE PTR [eax+0x6e],bl
  40fa99:	punpcklwd mm4,DWORD PTR [esi+ebp*2+0x77]
  40fa9e:	jns    0x40fafc
  40faa0:	dec    edi
  40faa1:	jb     0x40fb1c
  40faa3:	jno    0x40fb1e
  40faa5:	cmp    edi,DWORD PTR fs:[edi+0x50]
  40faa9:	jb     0x40faa9
  40faab:	arpl   WORD PTR [edi+0x68],di
  40faae:	cmc    
  40faaf:	push   edx
  40fab0:	jmp    0x7fe:0xf86be768
  40fab7:	xor    DWORD PTR [ebx+0x7c],eax
  40faba:	jl     0x40fb14
  40fabc:	cmp    ebp,DWORD PTR ss:0x617b5c2d
  40fac3:	mov    DWORD PTR [ecx],esi
  40fac5:	cmp    DWORD PTR ds:0x4948592c,edx
  40facb:	push   esp
  40facc:	pop    es
  40facd:	push   edx
  40face:	dec    edx
  40facf:	pop    edi
  40fad0:	inc    edx
  40fad1:	push   edi
  40fad2:	inc    edx
  40fad3:	or     edx,DWORD PTR [ebx+0x7c]
  40fad6:	imul   edi,DWORD PTR [esi+eax*2+0x6f],0x9c16a970
  40fade:	cmp    BYTE PTR [eax-0x269b8ff0],bl
  40fae4:	sbb    esi,DWORD PTR gs:[eax+0x41db6731]
  40faeb:	add    BYTE PTR [esi],0x7c
  40faee:	push   ebx
  40faef:	pop    ebp
  40faf0:	xchg   edx,eax
  40faf1:	xor    eax,ecx
  40faf3:	sbb    eax,0x2138cdc1
  40faf8:	cmp    eax,0x57cf210f
  40fafd:	outs   dx,DWORD PTR ds:[esi]
  40fafe:	das    
  40faff:	je     0x40fa98
  40fb01:	nop
  40fb02:	jmp    0x40fb28
  40fb04:	pushf  
  40fb05:	inc    esp
  40fb06:	fisub  WORD PTR [ecx-0x11e8d578]
  40fb0c:	dec    edi
  40fb0d:	int    0x91
  40fb0f:	or     BYTE PTR [ebx+0x252557be],al
  40fb15:	mov    ecx,0xd70d5d1e
  40fb1a:	sub    al,BYTE PTR [esi-0x27d16c09]
  40fb20:	mov    eax,ds:0x34810d15
  40fb25:	test   eax,0x6a6ecf75
  40fb2a:	adc    al,0x21
  40fb2c:	lock cmp al,0xd6
  40fb2f:	and    DWORD PTR [ebx],0xcacfea25
  40fb35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb36:	ret    
  40fb37:	push   edi
  40fb38:	mov    bh,BYTE PTR [esi]
  40fb3a:	and    eax,0xc5e9dbe6
  40fb3f:	stc    
  40fb40:	xchg   BYTE PTR [edi+ecx*4+0x50fd5353],ah
  40fb47:	pop    es
  40fb48:	aaa    
  40fb49:	stos   DWORD PTR es:[edi],eax
  40fb4a:	loop   0x40fb7d
  40fb4c:	arpl   WORD PTR [eax],cx
  40fb4e:	repz inc edi
  40fb50:	retf   
  40fb51:	push   ebx
  40fb52:	stos   BYTE PTR es:[edi],al
  40fb53:	aas    
  40fb54:	out    0x3f,al
  40fb56:	das    
  40fb57:	jp     0x40fb10
  40fb59:	je     0x40fb20
  40fb5b:	cmp    bl,ch
  40fb5d:	push   cs
  40fb5e:	iret   
  40fb5f:	mov    DWORD PTR [ebx+0x17cf5b7b],ecx
  40fb65:	(bad)  
  40fb66:	sub    DWORD PTR fs:[eax],0x35
  40fb6a:	sbb    eax,0x8dd9487a
  40fb6f:	inc    edi
  40fb70:	and    al,0x7c
  40fb72:	mov    ecx,ds
  40fb74:	out    dx,al
  40fb75:	push   esp
  40fb76:	add    eax,0xa494b3ec
  40fb7b:	test   BYTE PTR [edi+eiz*2+0x3d474a4d],bl
  40fb82:	jae    0x40fb1c
  40fb84:	fld    TBYTE PTR [ebx-0x33b75dc8]
  40fb8a:	and    ch,BYTE PTR ds:0xcdde0cc2
  40fb90:	inc    eax
  40fb91:	mov    bh,0x38
  40fb93:	ret    
  40fb94:	stos   DWORD PTR es:[edi],eax
  40fb95:	add    al,0xb1
  40fb97:	inc    ebx
  40fb98:	push   esi
  40fb99:	rcl    DWORD PTR [ebx+0x16f03e4c],0x96
  40fba0:	xchg   DWORD PTR [eax],eax
  40fba2:	aaa    
  40fba3:	mov    esi,0xe1211739
  40fba8:	ret    
  40fba9:	dec    ecx
  40fbaa:	dec    DWORD PTR ds:0x80c4bfcd
  40fbb0:	xor    ecx,edx
  40fbb2:	adc    al,0xb3
  40fbb4:	shl    DWORD PTR [ebx-0x48fcb439],0x9f
  40fbbb:	sub    eax,0xa4ccf91
  40fbc0:	and    al,0xbd
  40fbc2:	dec    ebx
  40fbc3:	inc    eax
  40fbc4:	lahf   
  40fbc5:	jge    0x40fb50
  40fbc7:	ins    BYTE PTR es:[edi],dx
  40fbc8:	lods   eax,DWORD PTR ds:[esi]
  40fbc9:	outs   dx,DWORD PTR ds:[esi]
  40fbca:	cmp    DWORD PTR [edi],ebx
  40fbcc:	jmp    0xc14a:0xa2712e81
  40fbd3:	addr16 aas 
  40fbd5:	xchg   edx,eax
  40fbd6:	mov    esi,DWORD PTR [esp+eax*4+0x33]
  40fbda:	div    BYTE PTR [ebx-0x6b]
  40fbdd:	(bad)  
  40fbde:	and    BYTE PTR fs:[esi+0x53c41911],bl
  40fbe5:	mov    al,ds:0xb5586002
  40fbea:	dec    esi
  40fbeb:	mov    ebx,0xcfec3094
  40fbf0:	xor    edi,0x49419503
  40fbf6:	sub    ebx,DWORD PTR [ebp+0x1]
  40fbf9:	mov    eax,0x319c2ea0
  40fbfe:	xchg   DWORD PTR [ecx-0x66a85a54],ebp
  40fc04:	rcr    bh,cl
  40fc06:	sahf   
  40fc07:	sbb    ecx,edx
  40fc09:	mov    DWORD PTR [edx+0x55cd54fa],esi
  40fc0f:	in     al,dx
  40fc10:	adc    DWORD PTR [esi+0x61928b88],edx
  40fc16:	mov    eax,0xc2998b38
  40fc1b:	ret    0x2d9d
  40fc1e:	daa    
  40fc1f:	stos   BYTE PTR es:[edi],al
  40fc20:	(bad)  
  40fc21:	ror    BYTE PTR [edi+ecx*4],cl
  40fc24:	test   al,0xf2
  40fc26:	jmp    0x40fbdd
  40fc28:	adc    bh,BYTE PTR [edi]
  40fc2a:	ss and edx,0x41a2bdd5
  40fc31:	ss dec eax
  40fc33:	pop    ecx
  40fc34:	retf   
  40fc35:	or     BYTE PTR [ebp-0x4544c21e],cl
  40fc3b:	and    edi,DWORD PTR [ecx]
  40fc3d:	mov    DWORD PTR [ebp+eax*4-0x5be0d05c],0x4b10271e
  40fc48:	in     al,dx
  40fc49:	adc    ch,BYTE PTR [edx+0x17e7001c]
  40fc4f:	inc    edi
  40fc50:	push   ss
  40fc51:	stos   BYTE PTR es:[edi],al
  40fc52:	pop    ds
  40fc53:	and    eax,0x8cbaa59e
  40fc58:	(bad)  
  40fc59:	sbb    eax,0xdbc9b1b
  40fc5e:	jmp    0x67f74422
  40fc63:	pop    ecx
  40fc64:	ins    DWORD PTR es:[edi],dx
  40fc65:	into   
  40fc66:	test   bl,bl
  40fc68:	rol    BYTE PTR ss:[ebx],cl
  40fc6b:	(bad)  
  40fc6d:	fstp   DWORD PTR [esi-0x3e]
  40fc70:	inc    edx
  40fc71:	mov    al,0x45
  40fc73:	jae    0x40fcbe
  40fc75:	sbb    ah,bl
  40fc77:	cli    
  40fc78:	mov    dl,0x87
  40fc7a:	lahf   
  40fc7b:	inc    edx
  40fc7c:	pop    ecx
  40fc7d:	mov    eax,0xae802612
  40fc82:	lods   eax,DWORD PTR ds:[esi]
  40fc83:	adc    eax,DWORD PTR [esi-0x77]
  40fc86:	mov    ds:0xcce91854,eax
  40fc8b:	xchg   esp,eax
  40fc8c:	push   ds
  40fc8d:	dec    esi
  40fc8e:	mov    ch,0x95
  40fc90:	push   eax
  40fc91:	adc    eax,0x2c7207fe
  40fc96:	ins    DWORD PTR es:[edi],dx
  40fc97:	das    
  40fc98:	scas   eax,DWORD PTR es:[edi]
  40fc99:	lahf   
  40fc9a:	stos   BYTE PTR es:[edi],al
  40fc9b:	pop    ss
  40fc9c:	retf   0x27ce
  40fc9f:	adc    BYTE PTR [esi-0x4edd8862],cl
  40fca5:	pushf  
  40fca6:	es data16 mov cl,0x4b
  40fcaa:	adc    DWORD PTR [edi+0x3e],ebx
  40fcad:	sub    DWORD PTR [edx+eax*4+0x5a02183a],ebx
  40fcb4:	mov    ecx,DWORD PTR [esi-0x79]
  40fcb7:	inc    eax
  40fcb8:	lea    edx,[ebx-0x7e]
  40fcbb:	pop    eax
  40fcbc:	or     DWORD PTR [edi-0x71],0x81498e5e
  40fcc3:	pop    ebp
  40fcc4:	call   0x374d4a1d
  40fcc9:	mov    al,ds:0xc7759114
  40fcce:	pop    es
  40fccf:	cmp    BYTE PTR [ecx+ecx*2],0xb
  40fcd3:	mov    cl,BYTE PTR ds:[edx+0x32]
  40fcd7:	xor    cl,BYTE PTR ds:[edx]
  40fcda:	mov    ecx,0x86898e68
  40fcdf:	fs aas 
  40fce1:	cmp    ah,ah
  40fce3:	shr    DWORD PTR [eax-0x4a108758],0x61
  40fcea:	imul   esi,DWORD PTR [edi+0x79],0x1d
  40fcee:	push   eax
  40fcef:	fimul  WORD PTR [ecx+0x37]
  40fcf2:	ds (bad) 
  40fcf4:	out    dx,eax
  40fcf5:	sub    DWORD PTR [ebx+eiz*2],esp
  40fcf8:	and    al,0x92
  40fcfa:	sub    DWORD PTR ds:0xf62570f,esp
  40fd00:	test   BYTE PTR [ecx+0x6],0x34
  40fd04:	repz or edi,edi
  40fd07:	sbb    ecx,DWORD PTR [edx]
  40fd09:	pusha  
  40fd0a:	inc    eax
  40fd0b:	hlt    
  40fd0c:	pop    ds
  40fd0d:	or     esi,DWORD PTR [edx]
  40fd0f:	add    eax,0xd0f4172
  40fd14:	outs   dx,DWORD PTR ds:[esi]
  40fd15:	repz mov al,ds:0x640f994a
  40fd1b:	xchg   edi,eax
  40fd1c:	fwait
  40fd1d:	mov    esi,0xe1070fa2
  40fd22:	popa   
  40fd23:	retf   
  40fd24:	sub    al,0x1f
  40fd26:	jmp    0x4f96:0xc72665af
  40fd2d:	adc    BYTE PTR [ecx],al
  40fd2f:	push   ecx
  40fd30:	test   BYTE PTR [edi+0x7d],0x5f
  40fd34:	push   cs
  40fd35:	dec    esi
  40fd36:	(bad)
  40fd3a:	enter  0xfd6b,0xe2
  40fd3e:	adc    DWORD PTR [edi-0x7618dc54],esi
  40fd44:	aad    0x73
  40fd46:	sub    DWORD PTR [ebp+esi*1+0x54],eax
  40fd4a:	pop    esi
  40fd4b:	and    eax,0x2533493c
  40fd50:	fdivrp st(7),st
  40fd52:	lds    ebp,FWORD PTR [edx]
  40fd54:	mov    ch,0x3d
  40fd56:	ret    
  40fd57:	out    dx,al
  40fd58:	sbb    dh,BYTE PTR [eax]
  40fd5a:	(bad)  
  40fd5b:	mov    WORD PTR [ecx],ss
  40fd5d:	mov    ah,0x54
  40fd5f:	lods   eax,DWORD PTR ds:[esi]
  40fd60:	sbb    ebx,DWORD PTR [edx]
  40fd62:	dec    edx
  40fd63:	frstor [esp+eax*8]
  40fd66:	das    
  40fd67:	or     al,0x11
  40fd69:	inc    esi
  40fd6a:	jo     0x40fdd3
  40fd6c:	pop    esp
  40fd6d:	inc    ecx
  40fd6e:	add    al,0x62
  40fd70:	jge    0x40fddd
  40fd72:	das    
  40fd73:	push   0x72
  40fd75:	jmp    0xb65805a6
  40fd7a:	push   cs
  40fd7b:	ret    
  40fd7c:	into   
  40fd7d:	push   ebp
  40fd7e:	or     DWORD PTR [edx],ebx
  40fd80:	aam    0xc2
  40fd82:	bound  eax,QWORD PTR [eax]
  40fd84:	and    BYTE PTR [edx+0xd],dh
  40fd87:	dec    eax
  40fd88:	in     al,0xf6
  40fd8a:	mov    ds:0xdfb0e87c,al
  40fd8f:	pop    esp
  40fd90:	xchg   edi,eax
  40fd91:	ror    edi,0x99
  40fd94:	mov    ds:0x4cc7a7d,al
  40fd99:	imul   DWORD PTR [edx+0x48]
  40fd9c:	jns    0x40fe02
  40fd9e:	mov    DWORD PTR [ebp+0x2],esi
  40fda1:	xchg   BYTE PTR [esp+ebx*8-0x2e],dl
  40fda5:	adc    al,dh
  40fda7:	(bad)  
  40fda8:	mov    DWORD PTR [ebx+0x15d8e462],0xcf24a291
  40fdb2:	and    BYTE PTR [edx+0x71ee9911],bh
  40fdb8:	sar    DWORD PTR [edx],0x5a
  40fdbb:	scas   al,BYTE PTR es:[edi]
  40fdbc:	aas    
  40fdbd:	sti    
  40fdbe:	xchg   esi,eax
  40fdbf:	pop    eax
  40fdc0:	inc    esi
  40fdc1:	aaa    
  40fdc2:	clc    
  40fdc3:	push   ecx
  40fdc4:	or     eax,0x8702de8c
  40fdc9:	rol    ch,0x9b
  40fdcc:	addr16 inc ebp
  40fdce:	push   0x36a0c30c
  40fdd3:	shl    DWORD PTR ds:0x408aeb69,0x7f
  40fdda:	jno    0x40fdd3
  40fddc:	lea    ecx,[ebx-0x6f6d1603]
  40fde2:	or     eax,0x302ecfd7
  40fde7:	pop    edx
  40fde8:	fs rcl esp,0xc4
  40fdec:	dec    edi
  40fded:	cmp    ebp,ebx
  40fdef:	dec    esi
  40fdf0:	clc    
  40fdf1:	hlt    
  40fdf2:	xor    edi,DWORD PTR [eax+0x64]
  40fdf5:	stos   DWORD PTR es:[edi],eax
  40fdf6:	pusha  
  40fdf7:	inc    ecx
  40fdf8:	in     eax,0xc7
  40fdfa:	xchg   ebp,eax
  40fdfb:	mov    al,ds:0x6625c63a
  40fe00:	rol    DWORD PTR [ebp-0x786e8bd],cl
  40fe06:	xchg   DWORD PTR es:[ebp-0x69],eax
  40fe0a:	dec    ecx
  40fe0b:	sub    ebp,DWORD PTR [ebx]
  40fe0d:	cdq    
  40fe0e:	sub    dh,dh
  40fe10:	dec    edi
  40fe11:	addr16 and al,dh
  40fe14:	add    ch,ah
  40fe16:	lds    eax,FWORD PTR [esi-0x42]
  40fe19:	(bad)  
  40fe1a:	xchg   esi,eax
  40fe1b:	fs iret 
  40fe1d:	pop    ecx
  40fe1e:	enter  0x514e,0xc2
  40fe22:	mov    bh,0xa
  40fe24:	pop    ds
  40fe25:	int3   
  40fe26:	(bad)  
  40fe27:	iret   
  40fe28:	or     al,BYTE PTR [eax-0x42]
  40fe2b:	loopne 0x40fe37
  40fe2d:	pop    edx
  40fe2e:	mov    al,0x24
  40fe30:	push   cs
  40fe31:	enter  0xcce4,0x9e
  40fe35:	and    DWORD PTR [esi+edi*2-0x32],esp
  40fe39:	std    
  40fe3a:	gs jae 0x40fe7d
  40fe3d:	jl     0x40fe53
  40fe3f:	and    DWORD PTR [ebx-0x4ae80812],edi
  40fe45:	inc    ebx
  40fe46:	fnsave [ecx]
  40fe48:	rcl    BYTE PTR [ebx+edx*8-0xdf16e18],cl
  40fe4f:	mov    eax,ds:0x7523126f
  40fe54:	mov    esi,0xb75aed17
  40fe59:	inc    ecx
  40fe5a:	iret   
  40fe5b:	sbb    bh,BYTE PTR [eax-0x3265a7a6]
  40fe61:	and    al,0x93
  40fe63:	or     eax,0x19f11924
  40fe68:	fist   WORD PTR [ecx]
  40fe6a:	pop    ss
  40fe6b:	mov    ebp,0xb5875cbc
  40fe70:	mov    eax,ds:0xb3f08c38
  40fe75:	or     cl,BYTE PTR [ebp+esi*2+0xa]
  40fe79:	pushf  
  40fe7a:	push   cs
  40fe7b:	std    
  40fe7c:	ja     0x40feb9
  40fe7e:	jg     0x40fecc
  40fe80:	int3   
  40fe81:	inc    edi
  40fe82:	add    eax,0xef7b42bc
  40fe87:	cwde   
  40fe88:	push   ds
  40fe89:	pusha  
  40fe8a:	jmp    0xdb142c53
  40fe8f:	inc    eax
  40fe90:	add    eax,0x4e860806
  40fe95:	out    0x59,eax
  40fe97:	imul   edx,DWORD PTR [ecx*1+0x57e19674],0xb62a2507
  40fea2:	pop    ecx
  40fea3:	cmp    al,0x78
  40fea5:	cwde   
  40fea6:	loopne 0x40ff15
  40fea8:	and    DWORD PTR [esi-0x4c],edi
  40feab:	rol    dh,0x61
  40feae:	mov    bh,0x2b
  40feb0:	ins    DWORD PTR es:[edi],dx
  40feb1:	push   0x56cd16bb
  40feb6:	call   0x5107:0xc49b596
  40febd:	pop    edx
  40febe:	or     eax,0x75397134
  40fec3:	xor    al,0x61
  40fec5:	cmp    eax,0x266a3062
  40feca:	inc    ecx
  40fecb:	jmp    0x6356c5dd
  40fed0:	or     eax,0xc7a0a78
  40fed5:	push   0x3f
  40fed7:	stos   DWORD PTR es:[edi],eax
  40fed8:	dec    edx
  40fed9:	and    al,0x61
  40fedb:	ins    DWORD PTR es:[edi],dx
  40fedc:	dec    esp
  40fedd:	pushw  ds
  40fedf:	ret    
  40fee0:	aas    
  40fee1:	je     0x40fefb
  40fee3:	data16 sub BYTE PTR [ebp-0x29],al
  40fee7:	ins    DWORD PTR es:[edi],dx
  40fee8:	and    esi,DWORD PTR [edx]
  40feea:	icebp  
  40feeb:	mov    ecx,0xe82c1103
  40fef0:	cmp    edi,DWORD PTR [ebx-0x34]
  40fef3:	je     0x40febd
  40fef5:	push   0xd43444a3
  40fefa:	or     edx,DWORD PTR [eax+0x358a0f9b]
  40ff00:	daa    
  40ff01:	int    0xe
  40ff03:	inc    ebp
  40ff04:	xor    eax,0x7a4b35c4
  40ff09:	cmp    DWORD PTR [ebp+edi*1+0x7d],eax
  40ff0d:	mov    DWORD PTR [ebp+ecx*8-0x4e],edx
  40ff11:	imul   ebp,DWORD PTR [edi],0x1952c1b2
  40ff17:	pop    es
  40ff18:	and    esp,DWORD PTR [eax+0x21ee481b]
  40ff1e:	inc    edx
  40ff1f:	mov    al,ds:0x86567b96
  40ff24:	popa   
  40ff25:	and    al,0x18
  40ff27:	jle    0x40ff8b
  40ff29:	fs push ss
  40ff2b:	sub    eax,0x1741b391
  40ff30:	jge    0x40ff80
  40ff32:	xchg   ebp,eax
  40ff33:	xor    dl,BYTE PTR [esi-0x4a]
  40ff36:	addr16 sub dh,ch
  40ff39:	add    al,0xdd
  40ff3b:	sbb    eax,0x466c5a20
  40ff40:	pushf  
  40ff41:	outs   dx,DWORD PTR ds:[esi]
  40ff42:	jnp    0x40ff06
  40ff44:	mov    al,0x7a
  40ff46:	pop    ss
  40ff47:	jo     0x40ff4d
  40ff49:	cmp    DWORD PTR [ecx],ecx
  40ff4b:	and    ah,BYTE PTR [eax-0x68]
  40ff4e:	or     dl,BYTE PTR [edx]
  40ff50:	fs pop edi
  40ff52:	mov    dl,0x15
  40ff54:	sub    eax,0xd8d6273
  40ff59:	cmp    DWORD PTR [edi-0x3614dcc6],edi
  40ff5f:	xor    eax,0xf49a423b
  40ff64:	mov    WORD PTR ds:0xf86f8f08,es
  40ff6a:	mov    esi,0xd305eb00
  40ff6f:	ret    
  40ff70:	call   0x291b4f16
  40ff75:	dec    esi
  40ff76:	jnp    0x40fef8
  40ff78:	sbb    dh,BYTE PTR [edi]
  40ff7a:	sbb    ebx,edx
  40ff7c:	scas   al,BYTE PTR es:[edi]
  40ff7d:	jecxz  0x40ffad
  40ff7f:	xchg   esp,eax
  40ff80:	sub    esp,eax
  40ff82:	add    cl,BYTE PTR [ebp+edx*4-0x3b]
  40ff86:	pop    ebp
  40ff87:	pop    esp
  40ff88:	aas    
  40ff89:	push   es
  40ff8a:	cmp    al,0xc3
  40ff8c:	ins    DWORD PTR es:[edi],dx
  40ff8d:	xchg   esi,eax
  40ff8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff8f:	and    BYTE PTR [edi+0x37],bh
  40ff92:	xchg   BYTE PTR [esi-0x78],dl
  40ff95:	inc    eax
  40ff96:	sbb    eax,0x560b4224
  40ff9b:	pop    esi
  40ff9c:	or     DWORD PTR [edx],ebp
  40ff9e:	xor    BYTE PTR [edi-0x1b500225],bl
  40ffa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffa5:	(bad)  
  40ffa6:	xor    DWORD PTR [ecx-0x79],edx
  40ffa9:	adc    BYTE PTR [edx-0x28],bl
  40ffac:	pop    esi
  40ffad:	pop    ds
  40ffae:	sub    eax,0xe5faa175
  40ffb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffb4:	and    ah,BYTE PTR [edi]
  40ffb6:	(bad)  
  40ffb8:	push   ds
  40ffb9:	fwait
  40ffba:	pop    esi
  40ffbb:	(bad)  
  40ffbc:	arpl   WORD PTR [ecx-0x43],cx
  40ffbf:	fst    QWORD PTR [ebp+0x3878c7f7]
  40ffc5:	mov    ecx,0x219af67a
  40ffca:	pop    es
  40ffcb:	push   ebp
  40ffcc:	enter  0x4dca,0x8a
  40ffd0:	cmp    eax,0x3be34d24
  40ffd5:	sub    bh,BYTE PTR [ebp+eax*4+0x4]
  40ffd9:	inc    ebx
  40ffda:	jg     0x40ff61
  40ffdc:	mov    ds:0x6a2e5db8,al
  40ffe1:	mov    edx,0x79e6ae82
  40ffe6:	push   esi
  40ffe7:	mov    bh,0x89
  40ffe9:	or     BYTE PTR [ebx-0x4812b1c],al
  40ffef:	xor    ch,BYTE PTR es:[edi+0x70399834]
  40fff6:	push   ecx
  40fff7:	and    eax,0xaba62972
  40fffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fffd:	test   BYTE PTR [ecx-0x3f],bl
  410000:	mov    ss,WORD PTR ds:0x2314795d
  410006:	sub    eax,0x7eccfd95
  41000b:	adc    DWORD PTR ds:0xd7bf9517,0x72bb410
  410015:	ins    DWORD PTR es:[edi],dx
  410016:	mov    esi,0xa31e04e
  41001b:	adc    ch,ch
  41001d:	inc    edx
  41001e:	in     al,0xa5
  410020:	jp     0x40ffb6
  410022:	sbb    eax,0xa855704f
  410027:	xchg   edi,eax
  410028:	cs aas 
  41002a:	rcr    DWORD PTR [ecx],0xc6
  41002d:	test   DWORD PTR ss:[eax],edi
  410030:	add    esp,DWORD PTR [esi]
  410032:	xchg   BYTE PTR [ebp+0x16e29b3d],al
  410038:	mov    cl,0xaf
  41003a:	jmp    0x5603bdea
  41003f:	addr16 mov dh,0x32
  410042:	lds    esp,FWORD PTR [edi-0x67a0f120]
  410048:	mov    eax,0x70496720
  41004d:	repnz scas eax,DWORD PTR es:[edi]
  41004f:	ret    
  410050:	popa   
  410051:	inc    ebp
  410052:	cmp    eax,0xb5ac5bbf
  410057:	push   edi
  410058:	nop
  410059:	and    DWORD PTR [edx],esp
  41005b:	xor    BYTE PTR [ebx+0x12ed4c9e],bh
  410061:	sub    edi,DWORD PTR [edi+0x18d27de1]
  410067:	adc    ebp,DWORD PTR [edi+eax*2]
  41006a:	inc    esi
  41006b:	xor    al,BYTE PTR [ebx+0x21]
  41006e:	das    
  41006f:	outs   dx,DWORD PTR ds:[esi]
  410070:	(bad)  
  410071:	fld    TBYTE PTR [ecx+edx*1-0x34115242]
  410078:	test   al,0x11
  41007a:	xor    edx,DWORD PTR [esi-0xe]
  41007d:	mov    ecx,0x850e832a
  410082:	xor    eax,0xa56eb38f
  410087:	sbb    eax,0x66076e97
  41008c:	test   al,0x93
  41008e:	in     al,0xa2
  410090:	sahf   
  410091:	jmp    0x8f498837
  410096:	and    al,0x4c
  410098:	and    al,0x23
  41009a:	dec    eax
  41009b:	xchg   DWORD PTR [eax-0x74],ecx
  41009e:	dec    edi
  41009f:	out    0xbb,eax
  4100a1:	push   0x58
  4100a3:	sbb    BYTE PTR [esi-0x1cf1f5a0],bh
  4100a9:	sbb    edi,DWORD PTR [ebp-0x9a5d81f]
  4100af:	lods   al,BYTE PTR ds:[esi]
  4100b0:	pop    ds
  4100b1:	jge    0x41006b
  4100b3:	retf   0xabe1
  4100b6:	mov    al,ds:0xcda45517
  4100bb:	mulps  xmm3,XMMWORD PTR [eax]
  4100be:	ja     0x4100bd
  4100c0:	xchg   ebp,eax
  4100c1:	(bad)  
  4100c3:	dec    ebp
  4100c4:	gs sub ah,al
  4100c7:	mov    esp,0xaacaf9d5
  4100cc:	push   DWORD PTR [edx]
  4100ce:	lods   eax,DWORD PTR ds:[esi]
  4100cf:	cmp    BYTE PTR [edx-0x55592709],al
  4100d5:	inc    ebp
  4100d6:	out    dx,al
  4100d7:	popa   
  4100d8:	push   esp
  4100d9:	add    ah,BYTE PTR [eax-0x4bdf77c6]
  4100df:	std    
  4100e0:	jns    0x410155
  4100e2:	icebp  
  4100e3:	pop    ebp
  4100e4:	and    DWORD PTR [ecx+0x50],edi
  4100e7:	jno    0x4100f4
  4100e9:	and    eax,0x8505b65b
  4100ee:	mov    bh,0x97
  4100f0:	dec    edi
  4100f1:	sti    
  4100f2:	stc    
  4100f3:	sbb    al,0xbd
  4100f5:	mov    dl,BYTE PTR [eax]
  4100f7:	xor    DWORD PTR [edx],edx
  4100f9:	and    BYTE PTR [eax+ebx*1+0x24],bl
  4100fd:	push   cs
  4100fe:	aas    
  4100ff:	xor    DWORD PTR [ebx-0x22bd5a51],ebp
  410105:	pop    esi
  410106:	mov    al,ds:0x61208cc5
  41010b:	mov    edx,0x2792dc11
  410110:	fidiv  WORD PTR [ebx-0x53671b83]
  410116:	and    eax,0xff3c86f1
  41011b:	loop   0x4100a2
  41011d:	or     bl,bl
  41011f:	xchg   ebx,eax
  410121:	jp     0x410152
  410123:	inc    eax
  410124:	mov    WORD PTR [edi-0x12],?
  410127:	cmp    BYTE PTR [edx+edx*2],0xb7
  41012b:	rol    al,0x64
  41012e:	or     DWORD PTR [ebx-0x1d],edx
  410131:	dec    esi
  410132:	mov    edx,0x36edecef
  410137:	add    al,0x86
  410139:	mov    ecx,0xa612c33c
  41013e:	fucomp st(4)
  410140:	mov    ecx,0xcb4c1b1
  410145:	adc    BYTE PTR [edx-0x42],dl
  410148:	mov    cl,0x21
  41014a:	and    al,0xa3
  41014c:	sub    bh,BYTE PTR [ecx+0x13a3fec6]
  410152:	fld    DWORD PTR [edx]
  410154:	sbb    bh,BYTE PTR [ebx+0x4bd183b8]
  41015a:	repnz adc eax,0x2ee3ba43
  410160:	sub    BYTE PTR ss:[esi-0x73],cl
  410164:	sub    al,0xd6
  410166:	mov    es,WORD PTR ds:0x9c330374
  41016c:	xchg   edx,eax
  41016d:	dec    edx
  41016e:	push   ecx
  41016f:	xchg   edi,eax
  410170:	inc    ebp
  410171:	mov    DWORD PTR [eax-0x69],edx
  410174:	sub    al,0x73
  410176:	mov    edx,0xbf823094
  41017b:	test   BYTE PTR [ebx],ch
  41017d:	imul   esi,DWORD PTR [eax-0x3a4f83f1],0x54
  410184:	mov    edx,0x9d765b14
  410189:	jl     0x410152
  41018b:	pop    ds
  41018c:	dec    esp
  41018d:	inc    edx
  41018e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41018f:	shl    BYTE PTR [ebx+0x3a],1
  410192:	mov    bl,0xca
  410195:	inc    esp
  410196:	arpl   WORD PTR [edx],bp
  410198:	cmp    al,0xe
  41019a:	push   edi
  41019b:	inc    esi
  41019c:	inc    esi
  41019d:	push   edi
  41019e:	push   ebp
  41019f:	inc    ecx
  4101a0:	pop    edx
  4101a1:	inc    eax
  4101a2:	add    al,0x5b
  4101a4:	inc    esp
  4101a5:	outs   dx,DWORD PTR ds:[esi]
  4101a6:	addr16 js 0x410217
  4101a9:	jo     0x410179
  4101ab:	outs   dx,BYTE PTR ds:[esi]
  4101ac:	jg     0x4101ac
  4101ae:	neg    cl
  4101b0:	outs   dx,BYTE PTR ds:[esi]
  4101b1:	popa   
  4101b2:	out    dx,eax
  4101b3:	js     0x41019d
  4101b5:	ror    DWORD PTR [ebp+0x76],0x7d
  4101b9:	out    dx,al
  4101ba:	push   0x567779fb
  4101bf:	jmp    0xfcac62c0
  4101c4:	inc    BYTE PTR [esi+esi*2-0x15]
  4101c8:	cmp    bl,BYTE PTR cs:[eax+0x6d]
  4101cc:	mov    dh,0x6a
  4101ce:	outs   dx,DWORD PTR ds:[esi]
  4101d0:	mov    esi,0x1f46cd76
  4101d5:	and    eax,0x8db47e68
  4101da:	int    0x6a
  4101dc:	pop    ecx
  4101dd:	fwait
  4101de:	mov    bl,0x4f
  4101e0:	fidivr DWORD PTR [ebp+0x217e5db8]
  4101e6:	sub    DWORD PTR [ebx],esp
  4101e8:	inc    edx
  4101e9:	mov    ebx,0xb1c5b685
  4101ee:	sahf   
  4101ef:	fbld   TBYTE PTR [bx+si-0x7c]
  4101f3:	mov    cl,0xe2
  4101f5:	xor    ch,BYTE PTR [esi-0x51457480]
  4101fb:	mov    al,0x28
  4101fd:	mov    ch,0xa0
  4101ff:	ss inc ecx
  410201:	nop
  410202:	cmp    eax,DWORD PTR [edx-0x161cb0c9]
  410208:	js     0x4101c2
  41020a:	or     dl,BYTE PTR [esi]
  41020c:	sbb    eax,0xbfc0b0e5
  410211:	or     edx,DWORD PTR [esi]
  410213:	pop    ebx
  410214:	mov    eax,0x15ebf2f6
  410219:	shl    DWORD PTR [ebx+0x42],0x3f
  41021d:	ins    DWORD PTR es:[edi],dx
  41021e:	in     al,0x8c
  410220:	pop    ds
  410221:	test   al,0x13
  410223:	and    eax,0x8053bf89
  410228:	or     BYTE PTR [ecx+0x1830b3f8],0x4d
  41022f:	mov    dl,0x17
  410231:	out    0xa6,al
  410233:	mov    al,ds:0xe51179d3
  410238:	fidivr DWORD PTR [esi-0x4829f099]
  41023e:	int3   
  41023f:	ror    BYTE PTR [eax+0x79863ec9],cl
  410245:	inc    esi
  410246:	outs   dx,BYTE PTR ds:[esi]
  410247:	xchg   ebx,eax
  410248:	and    ch,BYTE PTR [edx]
  41024a:	or     DWORD PTR [ebx-0x1314a88c],edi
  410250:	xchg   ecx,eax
  410251:	sbb    eax,0x169a7535
  410256:	jmp    0x9616:0x5536e733
  41025d:	test   DWORD PTR [edx+ecx*4],esi
  410260:	mov    ds:0xb18f841e,eax
  410265:	and    eax,0x7c165987
  41026a:	or     bh,BYTE PTR [eax+0x7c8c3311]
  410270:	popa   
  410271:	add    DWORD PTR [ecx-0x47],esi
  410274:	adc    DWORD PTR [ebx+0x19],edx
  410277:	cmp    al,BYTE PTR [esi]
  410279:	jb     0x4102c5
  41027b:	mov    WORD PTR [edi],ss
  41027d:	and    DWORD PTR [ebx+ebp*8-0x1681edf3],ebp
  410284:	inc    eax
  410285:	or     dh,al
  410287:	xor    eax,0x420fa9a3
  41028c:	scas   eax,DWORD PTR es:[edi]
  41028d:	sub    BYTE PTR [edx-0x93079cb],ch
  410293:	push   ss
  410294:	retf   0x48b8
  410297:	jne    0x4102bc
  410299:	push   0x50
  41029b:	ror    BYTE PTR [ebx+0x141bb111],0x14
  4102a2:	pop    ebx
  4102a3:	sbb    al,0x61
  4102a5:	jns    0x4102e5
  4102a7:	xor    DWORD PTR [esi+0x520cf7b6],0x44c6351c
  4102b1:	sbb    ecx,DWORD PTR [edi]
  4102b3:	and    al,0xd1
  4102b5:	push   0xa785bac2
  4102ba:	shl    bl,0x85
  4102bd:	sub    eax,0x10ebf2be
  4102c2:	xchg   ebp,eax
  4102c3:	or     BYTE PTR [edi],al
  4102c5:	mov    ebx,0x19375b7f
  4102ca:	push   esi
  4102cb:	jno    0x410287
  4102cd:	lock push esp
  4102cf:	aaa    
  4102d0:	rcl    BYTE PTR [edx],cl
  4102d2:	in     eax,0xba
  4102d4:	sub    dl,BYTE PTR [ecx-0x123b10d4]
  4102da:	or     al,0x6c
  4102dc:	and    ch,BYTE PTR [ecx-0x72]
  4102df:	inc    edx
  4102e0:	and    dh,BYTE PTR [eax+0x55e48173]
  4102e6:	test   DWORD PTR [edx+eax*8],esp
  4102e9:	sub    esi,DWORD PTR [edx+edx*2]
  4102ec:	stos   DWORD PTR es:[edi],eax
  4102ed:	cmp    BYTE PTR [esi+0x2c],0x51
  4102f1:	mov    ah,0x7
  4102f3:	and    DWORD PTR [edx-0x4d],esi
  4102f6:	or     esi,DWORD PTR [ebx+edi*4+0x40]
  4102fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102fb:	imul   eax,DWORD PTR [ebp-0x30e6ca18],0x237c72c
  410305:	push   es
  410306:	retf   
  410307:	retf   0xb8f6
  41030a:	add    bh,BYTE PTR [eax+0x7]
  41030d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41030e:	fistp  QWORD PTR fs:[edi+0x434aab00]
  410315:	call   0xce4b:0xddc4680d
  41031c:	xor    eax,0x7acf266e
  410321:	dec    esp
  410322:	aad    0x4d
  410324:	int3   
  410325:	retf   0x5706
  410328:	mov    edx,0x44980d4
  41032d:	push   ds
  41032e:	jb     0x410374
  410330:	and    esi,ecx
  410332:	mov    BYTE PTR [esi+0x7f],cl
  410335:	shl    BYTE PTR [eax],1
  410337:	mov    ecx,0x44c7fa96
  41033c:	enter  0xd80e,0x70
  410340:	sub    ebx,DWORD PTR ds:0x271dba26
  410346:	and    al,0x53
  410348:	cmp    al,BYTE PTR [edi-0x6]
  41034b:	mov    fs,WORD PTR [edx+0x4b]
  41034e:	mov    edi,0xfc45cb90
  410353:	mov    BYTE PTR [ecx*1-0x3d403315],0xb4
  41035b:	push   ss
  41035c:	inc    ebx
  41035d:	sub    BYTE PTR [eax],ah
  41035f:	adc    edx,ecx
  410361:	xor    ah,bh
  410363:	sbb    BYTE PTR [eax-0x54fe32f8],al
  410369:	push   cs
  41036a:	jno    0x410364
  41036c:	sbb    eax,DWORD PTR [ecx]
  41036e:	(bad)  
  41036f:	dec    ebp
  410370:	fiadd  DWORD PTR [ecx]
  410372:	sub    edi,ebx
  410374:	mov    cs,WORD PTR [ebx-0x72]
  410377:	and    ebp,ebp
  410379:	neg    al
  41037b:	rol    DWORD PTR [esi],cl
  41037d:	nop    DWORD PTR [edi+0x37]
  410381:	mov    al,ds:0x19fcc7cb
  410386:	(bad)  
  410388:	or     al,BYTE PTR [esi]
  41038a:	nop
  41038b:	inc    ecx
  41038c:	test   DWORD PTR [edx-0x220e5dd4],0xd00a06de
  410396:	call   0x14fc:0x84ca6c8e
  41039d:	xchg   ebp,eax
  41039e:	jmp    0x4d32134f
  4103a3:	mov    WORD PTR [edx+0x3964cf],es
  4103a9:	in     eax,dx
  4103aa:	(bad)  
  4103ac:	push   edx
  4103ad:	cmp    BYTE PTR [ebp-0x48b3ba7d],cl
  4103b3:	jmp    0xdb60bfc2
  4103b8:	push   eax
  4103b9:	test   BYTE PTR [ebx+eiz*1+0xde00477],al
  4103c0:	daa    
  4103c1:	sbb    al,0x92
  4103c3:	outs   dx,DWORD PTR ds:[esi]
  4103c4:	aaa    
  4103c5:	div    edx
  4103c7:	sub    cl,0xfd
  4103ca:	add    BYTE PTR [eax-0x36ad883],dl
  4103d0:	adc    eax,0xf8da22db
  4103d5:	add    cl,BYTE PTR [eax]
  4103d7:	add    DWORD PTR [esi+0x7e],0xffffffaf
  4103db:	int    0xbc
  4103dd:	stc    
  4103de:	pop    ss
  4103df:	aas    
  4103e0:	push   cs
  4103e1:	or     al,0x2d
  4103e3:	add    DWORD PTR [eax-0x768c4b7],edi
  4103e9:	add    BYTE PTR [ebx+0x1686116c],0x8f
  4103f0:	test   bl,bh
  4103f2:	bound  esp,QWORD PTR [edi]
  4103f4:	sbb    ebp,esi
  4103f6:	xchg   ebx,eax
  4103f7:	call   0xad74:0x8f497a20
  4103fe:	inc    ebp
  4103ff:	fnstsw WORD PTR [edx]
  410401:	xchg   DWORD PTR [ecx],eax
  410403:	jle    0x41044a
  410405:	mov    ebx,0xebece20
  41040a:	or     BYTE PTR [esp+eiz*4-0x78],dl
  41040e:	stos   BYTE PTR es:[edi],al
  41040f:	popa   
  410410:	inc    ebx
  410411:	iret   
  410412:	leave  
  410413:	mov    ds:0x58570ce8,eax
  410418:	pop    ebx
  410419:	sub    dh,BYTE PTR [ebx+0x56301c08]
  41041f:	add    BYTE PTR [esi-0x1b],0xc9
  410423:	mov    ebx,eax
  410425:	xchg   edx,eax
  410426:	push   cs
  410427:	mov    WORD PTR [ebx-0x4a1e455d],gs
  41042d:	adc    al,0xe
  41042f:	adc    ch,BYTE PTR [edx+0xffb4082]
  410435:	pop    esi
  410436:	adc    ch,BYTE PTR [eax]
  410438:	shl    BYTE PTR [edi-0x79080278],cl
  41043e:	jmp    0x748:0x14510b79
  410445:	mov    ch,0x84
  410447:	fdivr  st,st(2)
  410449:	test   DWORD PTR [ebx-0x11],ecx
  41044c:	js     0xbb16b136
  410452:	mov    DWORD PTR [ebx+0x26b82f4],ebp
  410458:	add    dh,0xfb
  41045b:	shr    ch,cl
  41045d:	mov    ds:0xf18a2c87,al
  410462:	jl     0x4103eb
  410464:	repz out 0xc9,eax
  410467:	in     eax,0x20
  410469:	mov    eax,ds:0xad67408a
  41046e:	vmread edx,edx
  410471:	push   es
  410472:	cmp    ah,dh
  410474:	outs   dx,BYTE PTR ds:[esi]
  410475:	test   DWORD PTR [ebx+0x1b],ecx
  410478:	scas   al,BYTE PTR es:[edi]
  410479:	syscall 
  41047b:	test   BYTE PTR [edx],cl
  41047d:	fscale 
  41047f:	mov    dh,0x8f
  410481:	add    DWORD PTR cs:[eax+0x1be28e07],edx
  410488:	pop    ebp
  410489:	fsub   DWORD PTR [ebp-0x73]
  41048c:	or     dl,BYTE PTR [eax]
  41048e:	sub    eax,0x28ebeff5
  410493:	loope  0x410436
  410495:	test   DWORD PTR [edx],esi
  410497:	and    al,0xf3
  410499:	jnp    0x4104fd
  41049b:	(bad)  
  41049c:	stc    
  41049d:	stos   BYTE PTR es:[edi],al
  41049e:	jl     0x41048a
  4104a0:	stos   BYTE PTR es:[edi],al
  4104a1:	(bad)  
  4104a2:	es (bad) 
  4104a4:	lock shl BYTE PTR [edx+0x1],cl
  4104a8:	ror    BYTE PTR [eax],1
  4104aa:	and    BYTE PTR [esi+0x6f],ah
  4104ad:	xchg   BYTE PTR [esi+eiz*4],cl
  4104b0:	cmc    
  4104b1:	jno    0x410444
  4104b3:	mov    cs,WORD PTR [eax]
  4104b5:	test   BYTE PTR [eax+0x26],al
  4104b8:	or     BYTE PTR [ebx+0x10fd7cc1],0x9b
  4104bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104c1:	xchg   ecx,eax
  4104c2:	or     eax,0xfaf53045
  4104c7:	push   eax
  4104c8:	xchg   edi,eax
  4104c9:	xchg   ecx,eax
  4104ca:	pop    ebp
  4104cb:	mov    eax,esi
  4104cd:	nop
  4104ce:	lahf   
  4104cf:	or     eax,ebx
  4104d1:	cmp    ah,0x7d
  4104d4:	pop    ss
  4104d5:	xchg   DWORD PTR [edi-0x73c972f2],esi
  4104db:	fisttp QWORD PTR [eax-0x6a]
  4104de:	nop
  4104df:	sbb    al,BYTE PTR [eax]
  4104e1:	cs push 0x104d6d91
  4104e7:	push   ebx
  4104e8:	adc    eax,DWORD PTR [eax+0x69766db]
  4104ee:	inc    ebx
  4104ef:	or     BYTE PTR [ecx],bh
  4104f1:	in     eax,0x63
  4104f3:	fst    DWORD PTR [esp+eax*1]
  4104f6:	cld    
  4104f7:	pop    edx
  4104f8:	clc    
  4104f9:	jge    0x4104d6
  4104fb:	add    DWORD PTR [esi-0x5a4e1dc0],ebx
  410501:	sub    BYTE PTR [esi+0x1d],ch
  410504:	repnz mov edi,0xa9cda470
  41050a:	int3   
  41050b:	sub    al,dl
  41050d:	inc    ebx
  41050e:	jnp    0x41051f
  410510:	enter  0x5bf4,0x83
  410514:	icebp  
  410515:	dec    cx
  410517:	sub    al,0xb7
  410519:	(bad)  
  41051a:	js     0x410521
  41051c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41051d:	neg    BYTE PTR [edx-0x6a]
  410520:	inc    esi
  410521:	add    BYTE PTR [edi-0x4a],bh
  410524:	mov    esp,0x834573bf
  410529:	and    bl,BYTE PTR [ecx-0x72]
  41052c:	call   0x2da0a0a9
  410531:	je     0x410553
  410533:	outs   dx,DWORD PTR ds:[esi]
  410534:	jno    0x410578
  410536:	enter  0x20fe,0x26
  41053a:	lods   eax,DWORD PTR ds:[esi]
  41053b:	loope  0x4105ba
  41053d:	adc    BYTE PTR [eax-0x4c],cl
  410540:	and    al,BYTE PTR [ecx+ecx*4]
  410543:	adc    DWORD PTR ds:0x8a78dcec,esi
  410549:	and    BYTE PTR [edx-0x6b],bl
  41054c:	pop    ebp
  41054d:	loopne 0x41055f
  41054f:	and    al,0x82
  410551:	or     bh,BYTE PTR [ebx+0x37]
  410554:	inc    edi
  410555:	out    0x82,al
  410557:	test   DWORD PTR [edi],esi
  410559:	rcl    ch,1
  41055b:	pop    eax
  41055c:	xlat   BYTE PTR ds:[ebx]
  41055d:	jle    0x41057c
  41055f:	in     eax,0xf4
  410561:	stos   DWORD PTR es:[edi],eax
  410562:	inc    edi
  410563:	mov    cl,0xe4
  410565:	popf   
  410566:	fist   WORD PTR [ebx-0x15]
  410569:	jae    0x41057e
  41056b:	enter  0xb5f1,0x3b
  41056f:	or     eax,0x5eab73c9
  410574:	sbb    eax,0xf1ad167c
  410579:	mov    esi,0x33693a23
  41057e:	push   ecx
  41057f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410580:	(bad)  [eax+0x15]
  410583:	xor    esi,0x25f09423
  410589:	xlat   BYTE PTR ds:[ebx]
  41058a:	add    ecx,edi
  41058c:	and    DWORD PTR [edx],ebp
  41058e:	into   
  41058f:	dec    ecx
  410590:	and    BYTE PTR [edx],ch
  410592:	mul    BYTE PTR [edi+0x30]
  410595:	or     al,0x61
  410597:	pushf  
  410598:	and    DWORD PTR [esi-0x3c],0x7ad9ca40
  41059f:	inc    esi
  4105a0:	push   esi
  4105a1:	nop
  4105a2:	cli    
  4105a3:	and    DWORD PTR [eax],edx
  4105a5:	inc    ecx
  4105a6:	mov    esp,0x8be29703
  4105ab:	outs   dx,BYTE PTR ds:[esi]
  4105ac:	mov    DWORD PTR [ecx-0x2c],0xe7e6200
  4105b3:	fsubr  QWORD PTR [ecx+0x23a6982f]
  4105b9:	xor    DWORD PTR [ecx+0x618c9a27],esi
  4105bf:	into   
  4105c0:	inc    edi
  4105c1:	ret    
  4105c2:	fidiv  DWORD PTR [edi+0x2f]
  4105c5:	pop    edx
  4105c6:	xor    BYTE PTR [ebx],ch
  4105c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105c9:	nop
  4105ca:	iret   
  4105cb:	adc    al,0x18
  4105cd:	test   ah,dh
  4105cf:	(bad)  
  4105d0:	sub    al,0x8c
  4105d2:	dec    ebp
  4105d3:	loopne 0x4105a9
  4105d5:	push   esp
  4105d6:	pop    esi
  4105d7:	push   ecx
  4105d8:	ins    BYTE PTR es:[edi],dx
  4105d9:	mov    DWORD PTR [edi],edx
  4105db:	(bad)  
  4105dd:	mov    ebp,0xc59e6f4c
  4105e2:	add    BYTE PTR [esi-0x7c],dl
  4105e5:	mov    BYTE PTR ds:0x43e0f9b1,dl
  4105eb:	jmp    0x410666
  4105ed:	std    
  4105ee:	jmp    0x410647
  4105f0:	inc    DWORD PTR [edi+edx*1+0x2deaf498]
  4105f7:	rcr    BYTE PTR gs:[ebx*2-0x78717e7e],cl
  4105ff:	js     0x410673
  410601:	pushf  
  410602:	loop   0x410606
  410604:	dec    esi
  410605:	jo     0x4105b3
  410607:	push   0x3459c786
  41060c:	pop    eax
  41060d:	imul   esp,edi,0x1c
  410610:	call   0x8eca0340
  410615:	xor    eax,0x12e7ac73
  41061a:	dec    esi
  41061b:	cs or  eax,0x1f1980a5
  410621:	loop   0x41064d
  410623:	ins    BYTE PTR es:[edi],dx
  410624:	mov    al,ds:0x420a1018
  410629:	mov    cs,WORD PTR [ebx+0x452ff1f3]
  41062f:	jmp    0x81f7:0x50738305
  410636:	mov    edx,ebp
  410638:	pop    ds
  410639:	mov    cl,0x3b
  41063b:	ins    DWORD PTR es:[edi],dx
  41063c:	xor    eax,0xbd38fb1e
  410641:	mov    al,BYTE PTR [ecx+0x5632f4b4]
  410647:	hlt    
  410648:	mov    eax,0x28dedf11
  41064d:	mov    ecx,DWORD PTR [ecx+0x403ff985]
  410653:	jb     0x41065c
  410655:	xchg   ebx,eax
  410656:	ror    BYTE PTR [eax+0x638c63eb],1
  41065c:	push   ss
  41065d:	sub    cl,BYTE PTR [ecx]
  41065f:	or     al,0x95
  410661:	fs mov ebp,0x54c7cc36
  410667:	icebp  
  410668:	hlt    
  410669:	push   ebx
  41066a:	mov    cl,0x60
  41066c:	pop    ss
  41066d:	out    0x50,al
  41066f:	dec    edx
  410670:	xchg   ebp,eax
  410671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410672:	mov    ds:0x308cb9a7,eax
  410677:	and    ebp,ebx
  410679:	(bad)  
  41067a:	push   ds
  41067b:	jno    0x4106c2
  41067d:	ror    BYTE PTR [ebx-0x133c32af],0x12
  410684:	ins    BYTE PTR es:[edi],dx
  410685:	jno    0x41061e
  410687:	inc    edi
  410688:	stos   DWORD PTR es:[edi],eax
  410689:	sbb    bl,BYTE PTR [ecx]
  41068b:	in     eax,dx
  41068c:	push   es
  41068d:	ret    
  41068e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41068f:	(bad)  
  410692:	jle    0x410698
  410694:	enter  0xf790,0x41
  410698:	xor    BYTE PTR [ebp+0x74],cl
  41069b:	cmc    
  41069c:	or     eax,0xbf462e78
  4106a1:	dec    edx
  4106a2:	or     ebp,DWORD PTR [ebx]
  4106a4:	add    eax,0x227dca3d
  4106a9:	pop    ecx
  4106aa:	sub    esi,0xffffff86
  4106ad:	inc    ecx
  4106ae:	adc    DWORD PTR [ebx+0x3],0xffffffcf
  4106b2:	sbb    ah,0x55
  4106b5:	in     al,0x33
  4106b7:	xchg   ebp,eax
  4106b8:	rol    ebp,cl
  4106ba:	sbb    edx,eax
  4106bc:	(bad)  
  4106bd:	fisttp QWORD PTR [esi]
  4106bf:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106c1:	imul   ebx,DWORD PTR [eax],0xe61df3d9
  4106c7:	adc    ebp,DWORD PTR [ebx]
  4106c9:	mov    ebx,0x6787c6b0
  4106ce:	push   ebp
  4106cf:	ud2    
  4106d1:	adc    esi,DWORD PTR [ebx+ebx*8]
  4106d4:	xchg   ecx,eax
  4106d5:	jb     0x410733
  4106d7:	mov    ebx,0xb0a10fb3
  4106dc:	and    ch,BYTE PTR [ecx+edx*8-0x5bebde23]
  4106e3:	push   eax
  4106e4:	enter  0x8d41,0x81
  4106e8:	inc    ecx
  4106e9:	shl    DWORD PTR [ebp-0x8],0x31
  4106ed:	cs jae 0x4106fa
  4106f0:	dec    esi
  4106f1:	inc    ebp
  4106f2:	mov    DWORD PTR [eax+0x22],ecx
  4106f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106f6:	mov    al,BYTE PTR [eax-0x7201ea35]
  4106fc:	or     al,BYTE PTR [ecx]
  4106fe:	and    BYTE PTR [edx+0x4dd1f99c],ch
  410704:	push   0x8
  410706:	aam    0xb6
  410708:	add    eax,0x6991b764
  41070d:	sub    DWORD PTR [eax-0x45e0e9fe],edi
  410713:	repz adc BYTE PTR [esi+0x59],bl
  410717:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  410719:	dec    ebp
  41071a:	mov    DWORD PTR [ebx-0x6d],ebx
  41071d:	pop    esp
  41071e:	test   al,0xfb
  410720:	cli    
  410721:	lock and eax,DWORD PTR [esi]
  410724:	lods   eax,DWORD PTR ds:[esi]
  410725:	fld    QWORD PTR [edx-0x37]
  410728:	loopne 0x4106e0
  41072a:	stos   BYTE PTR es:[edi],al
  41072b:	in     eax,0x14
  41072d:	sbb    eax,0xc6a68573
  410732:	or     ecx,edx
  410734:	xor    al,0x3f
  410736:	xlat   BYTE PTR ds:[ebx]
  410737:	adc    ebx,ebp
  410739:	push   ebp
  41073a:	stos   DWORD PTR es:[edi],eax
  41073b:	lods   al,BYTE PTR es:[esi]
  41073d:	sbb    esp,DWORD PTR [ebp-0x52]
  410740:	inc    ebx
  410741:	pop    edi
  410742:	idiv   DWORD PTR [ebx+0x591b8df6]
  410748:	mov    edx,0x5f214b56
  41074d:	retf   0x64cb
  410750:	mov    ds:0x73bc159c,eax
  410755:	or     eax,0x71915d83
  41075a:	mov    al,ds:0xe8b9917
  41075f:	mov    cl,BYTE PTR [edx]
  410761:	push   eax
  410762:	dec    ebx
  410763:	ins    BYTE PTR es:[edi],dx
  410764:	xchg   edi,eax
  410765:	jno    0x4106e8
  410767:	cmp    eax,0x4f81a644
  41076c:	inc    esp
  41076d:	jno    0x4107d4
  41076f:	out    dx,al
  410770:	mov    ecx,0xffa02725
  410775:	test   DWORD PTR [ebp-0x1e],esi
  410778:	ins    DWORD PTR es:[edi],dx
  410779:	inc    ebx
  41077a:	sbb    eax,0xcf2ea12e
  41077f:	outs   dx,DWORD PTR ds:[esi]
  410780:	sbb    eax,0x16e6cc15
  410785:	loope  0x410800
  410787:	dec    edi
  410788:	scas   eax,DWORD PTR es:[edi]
  410789:	shr    BYTE PTR [ecx+0x5f],cl
  41078c:	(bad)  
  41078d:	sahf   
  41078e:	and    ebx,DWORD PTR [edi+0xa07ad6c]
  410794:	out    0x34,al
  410796:	lds    esi,FWORD PTR [edx-0x6410df74]
  41079c:	or     esp,DWORD PTR [edi]
  41079e:	or     al,0x4f
  4107a0:	cmp    eax,0xef0e11b
  4107a5:	cmp    eax,0xa628e349
  4107aa:	in     eax,0xc
  4107ac:	xor    edx,edx
  4107ae:	ss femms 
  4107b1:	push   cs
  4107b2:	jp     0x410821
  4107b4:	imul   ecx,DWORD PTR [eax+0x54],0x40
  4107b8:	int    0x56
  4107ba:	inc    ebp
  4107bb:	pop    ds
  4107bc:	dec    ebx
  4107bd:	dec    ebx
  4107be:	dec    ebp
  4107bf:	xchg   ecx,eax
  4107c0:	add    eax,0x9c09c1fd
  4107c5:	push   ecx
  4107c6:	mov    bh,0x6b
  4107c8:	add    al,0x15
  4107ca:	add    eax,0xe79129de
  4107cf:	fimul  WORD PTR [edx+0x23]
  4107d2:	cmp    al,0xb5
  4107d4:	inc    edx
  4107d5:	jg     0x41075e
  4107d7:	mov    DWORD PTR [edi],ecx
  4107d9:	inc    ebx
  4107da:	ret    0xc821
  4107dd:	xchg   ecx,eax
  4107de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107df:	mov    WORD PTR fs:[edi],cs
  4107e2:	jae    0x41077e
  4107e4:	mov    ebx,0x93807110
  4107e9:	mov    dl,BYTE PTR ds:0x8c91a705
  4107ef:	and    BYTE PTR [ecx],al
  4107f1:	popf   
  4107f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107f3:	inc    eax
  4107f4:	add    DWORD PTR [edi+esi*4-0x23],ecx
  4107f8:	lock outs dx,BYTE PTR ds:[esi]
  4107fa:	sti    
  4107fb:	cwde   
  4107fc:	pop    es
  4107fd:	adc    bh,dh
  4107ff:	(bad)  
  410800:	imul   esp
  410802:	bnd jl 0x4107f5
  410805:	ds cmc 
  410807:	pop    ds
  410808:	test   DWORD PTR [eax-0xedb0db1],0xf4cbfe9f
  410812:	loop   0x41080d
  410814:	ja     0x410806
  410816:	xor    bl,bh
  410818:	adc    ebx,edi
  41081a:	cmp    cl,0x1a
  41081d:	jmp    0x212c50a6
  410822:	jecxz  0x4107c0
  410824:	loop   0x410803
  410826:	das    
  410827:	cdq    
  410828:	jmp    0xe277:0xeae4e0c8
  41082f:	cmp    ah,ah
  410831:	pop    ds
  410832:	call   0x2d2d4bc0
  410837:	loopne 0x4107d3
  410839:	out    dx,al
  41083a:	enter  0xede5,0xed
  41083e:	jb     0x41081c
  410840:	cmp    al,0xd4
  410842:	pop    ds
  410843:	fimul  DWORD PTR [eax-0x26d82fbb]
  410849:	cwde   
  41084a:	xlat   BYTE PTR ds:[ebx]
  41084b:	(bad)
  41084e:	fnstenv [edi-0x30]
  410851:	cmp    al,0xdb
  410853:	push   ds
  410854:	fld    DWORD PTR [eax-0x2dd625b9]
  41085a:	xchg   ecx,eax
  41085b:	ror    cl,1
  41085d:	shl    edx,cl
  41085f:	fdivr  DWORD PTR [ebx-0x3f]
  410862:	cmp    eax,0x83cf1dc5
  410867:	inc    esp
  410868:	into   
  410869:	sub    ecx,eax
  41086b:	fwait
  41086c:	ror    ecx,0xc9
  41086f:	in     eax,dx
  410870:	retf   
  410871:	jo     0x41083d
  410873:	aas    
  410874:	rcl    DWORD PTR [ecx*8+0x2ac7408d],0xcb
  41087c:	cdq    
  41087d:	(bad)  
  41087e:	(bad)  
  41087f:	int3   
  410880:	loopne 0x410842
  410882:	jge    0x410843
  410884:	ds mov ah,0x1b
  410887:	mov    eax,0x2cb64a80
  41088c:	mov    ecx,0xbecab693
  410891:	out    0xb9,al
  410893:	ja     0x410845
  410895:	cmp    BYTE PTR [ebx+0x4387bb1f],bh
  41089b:	mov    esi,0xb896b425
  4108a0:	ret    
  4108a1:	mov    esi,0x33ebb6a6
  4108a6:	cwde   
  4108a7:	adc    eax,0x4680114e
  4108ac:	popf   
  4108ad:	es push edi
  4108af:	xchg   ebx,eax
  4108b0:	or     al,0x2f
  4108b2:	sbb    al,0x85
  4108b4:	xchg   ebp,eax
  4108b5:	lahf   
  4108b6:	push   esp
  4108b7:	outs   dx,BYTE PTR fs:[esi]
  4108b9:	cmp    BYTE PTR [eax],dl
  4108bb:	scas   al,BYTE PTR es:[edi]
  4108bc:	scas   eax,DWORD PTR es:[edi]
  4108bd:	jbe    0x410864
  4108bf:	lods   eax,DWORD PTR ds:[esi]
  4108c0:	call   0xb5ae:0xa965e825
  4108c7:	sbb    al,0xe6
  4108c9:	add    esp,DWORD PTR [ecx+edi*1+0x7c0f1007]
  4108d0:	xchg   ebx,eax
  4108d1:	or     DWORD PTR [eax+0x7d],ecx
  4108d4:	adc    DWORD PTR [edx+0x6a],ebp
  4108d7:	ja     0x410888
  4108d9:	push   esi
  4108da:	ficom  DWORD PTR [esi]
  4108dc:	popf   
  4108dd:	sub    BYTE PTR [esi],bh
  4108df:	or     eax,0x271e4ab2
  4108e4:	inc    eax
  4108e5:	xchg   edx,eax
  4108e6:	mov    esp,0xa794056b
  4108eb:	in     al,0x44
  4108ed:	dec    eax
  4108ee:	addr16 push sp
  4108f1:	jl     0x41094b
  4108f3:	sbb    BYTE PTR [edx+0x5aec555f],dl
  4108f9:	mov    cl,BYTE PTR [edx-0x45]
  4108fc:	mov    ebp,0x4740020a
  410901:	je     0x41097d
  410903:	fs popa 
  410905:	dec    ebp
  410906:	data16 ins BYTE PTR es:[edi],dx
  410908:	popa   
  410909:	es ja  0x41098a
  41090c:	add    DWORD PTR [ebx-0x411da041],ebx
  410912:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410913:	mov    ebp,0x269d76
  410918:	push   cs
  410919:	dec    ecx
  41091a:	dec    edi
  41091b:	push   0xcd7dd3b4
  410920:	push   ss
  410921:	mov    ecx,0xe45a941d
  410926:	sbb    BYTE PTR [ebp+edx*4-0x41],cl
  41092a:	inc    ebp
  41092b:	imul   ecx,DWORD PTR [esi+eax*1],0x75
  41092f:	pop    eax
  410930:	add    DWORD PTR [esi],edi
  410932:	pushw  0xd746
  410936:	fs push ebp
  410938:	pop    ebx
  410939:	enter  0xeb63,0xc6
  41093d:	xchg   esp,eax
  41093e:	sbb    ecx,eax
  410940:	pop    ss
  410941:	cs inc esi
  410943:	push   0x29
  410945:	retf   
  410946:	fs aam 0xc1
  410949:	or     al,0xff
  41094b:	add    al,0x40
  41094d:	push   ds
  41094e:	mov    bh,0x6
  410950:	pop    es
  410951:	mov    edx,0x8319522
  410956:	and    DWORD PTR [esp+ecx*8-0x32eb6784],ebx
  41095d:	or     al,0x42
  41095f:	dec    ebp
  410960:	push   0x7443720e
  410965:	push   edi
  410966:	mov    eax,0x729c6708
  41096b:	jg     0x4109c6
  41096d:	cs jno 0x410942
  410970:	mov    ds:0x186954c2,al
  410975:	imul   esp,DWORD PTR [edx+eiz*2-0x3a],0x4afe5fd9
  41097d:	fidivr WORD PTR [esi+0x5079e08]
  410983:	dec    eax
  410984:	jae    0x41092e
  410986:	or     BYTE PTR [eax+0x61],ch
  410989:	push   0x78
  41098b:	gs jbe 0x4109bd
  41098e:	xchg   ebp,eax
  41098f:	xchg   edi,ecx
  410991:	dec    esi
  410992:	dec    ebx
  410993:	ins    BYTE PTR es:[edi],dx
  410994:	in     al,0xb
  410996:	cmovl  ebx,DWORD PTR [esi+0xc]
  41099a:	cmp    dh,BYTE PTR [ebp-0x497e6896]
  4109a0:	pop    eax
  4109a1:	xchg   ebx,eax
  4109a2:	or     ch,0xea
  4109a5:	popf   
  4109a6:	daa    
  4109a7:	cwde   
  4109a8:	mov    ch,0x22
  4109aa:	jo     0x4109c3
  4109ac:	pop    es
  4109ad:	push   0x9c7e4d6b
  4109b2:	shl    BYTE PTR [edx+0x3ddd6754],1
  4109b8:	fsubr  DWORD PTR [edi+edx*2-0x46]
  4109bc:	push   edi
  4109bd:	les    edi,FWORD PTR [ebx-0x6ecee543]
  4109c3:	push   ebp
  4109c4:	in     eax,dx
  4109c5:	aaa    
  4109c6:	dec    edi
  4109c7:	pushf  
  4109c8:	mov    ah,0x20
  4109ca:	addr16 dec esp
  4109cc:	bound  eax,QWORD PTR [edx+0x60]
  4109cf:	sub    al,0x8c
  4109d1:	push   ebp
  4109d2:	fmul   QWORD PTR [ebx+0xc05fa07]
  4109d8:	pop    edi
  4109d9:	outs   dx,BYTE PTR ds:[esi]
  4109da:	push   0xe8995599
  4109df:	scas   eax,DWORD PTR es:[edi]
  4109e0:	push   ebx
  4109e1:	push   0xffffffe1
  4109e3:	jns    0x41096f
  4109e5:	and    DWORD PTR [ecx+0xa694102],0x6b9c6f51
  4109ef:	xchg   BYTE PTR [esi-0x8a16bbd],al
  4109f5:	mov    BYTE PTR [eax],ah
  4109f7:	or     dh,BYTE PTR [esi+0x38]
  4109fa:	repz or eax,0x4b7050aa
  410a00:	daa    
  410a01:	jge    0x410a73
  410a03:	ja     0x41099a
  410a05:	lahf   
  410a06:	pop    ebp
  410a07:	loop   0x41099d
  410a09:	cmp    BYTE PTR [edi+0x4],0x4b
  410a0d:	xor    eax,DWORD PTR [eax+0x61]
  410a10:	mov    esp,0xd124b511
  410a15:	(bad)  
  410a16:	mov    ds:0x54fe6859,al
  410a1b:	xor    eax,esi
  410a1d:	mov    ds,WORD PTR [edx]
  410a1f:	inc    esi
  410a20:	inc    eax
  410a21:	outs   dx,BYTE PTR ds:[esi]
  410a22:	jno    0x4109ae
  410a24:	jg     0x410a10
  410a26:	pop    ecx
  410a27:	mov    eax,0x64612e8f
  410a2c:	test   BYTE PTR [ecx-0x4f],cl
  410a2f:	mov    ebx,DWORD PTR [edx-0x63]
  410a32:	clc    
  410a33:	aam    0x4f
  410a35:	xor    ah,BYTE PTR [edi]
  410a37:	xchg   DWORD PTR [eax+0x79],edx
  410a3a:	fdivr  DWORD PTR [ebx+0x6c]
  410a3d:	imul   esp,DWORD PTR [ebp-0x1f],0x5ab65f93
  410a44:	mov    cl,0xb4
  410a46:	adc    cl,ch
  410a48:	or     al,0x48
  410a4a:	pop    esi
  410a4b:	jle    0x410a6a
  410a4d:	imul   ebp,DWORD PTR fs:[esi+0x2a],0xffffff83
  410a52:	xchg   ebx,eax
  410a53:	and    eax,0xdd569a0c
  410a58:	pop    esp
  410a59:	dec    ebp
  410a5a:	inc    ebp
  410a5b:	loop   0x410aaf
  410a5d:	ja     0x410adc
  410a5f:	xchg   ecx,eax
  410a60:	outs   dx,DWORD PTR ds:[esi]
  410a61:	jae    0x410ad0
  410a63:	popf   
  410a64:	popa   
  410a65:	push   esp
  410a66:	imul   edx,DWORD PTR [eax-0x42],0x78c92e6e
  410a6d:	sub    al,0x71
  410a6f:	cwde   
  410a70:	xor    edi,DWORD PTR [ebp+0x5f7c85c0]
  410a76:	es int3 
  410a78:	xlat   BYTE PTR ds:[ebx]
  410a79:	lods   eax,DWORD PTR ds:[esi]
  410a7a:	rol    BYTE PTR [eax-0x32d8f735],0x4d
  410a81:	dec    ecx
  410a82:	dec    sp
  410a84:	push   0x25c52a6e
  410a89:	dec    eax
  410a8a:	xchg   ecx,eax
  410a8b:	in     al,0x43
  410a8d:	test   DWORD PTR [eax+0x53],ebp
  410a90:	add    BYTE PTR [edi],al
  410a92:	push   0x60
  410a94:	(bad)  [ecx+0x20]
  410a97:	jp     0x410ab5
  410a99:	mov    eax,0x597b5f96
  410a9e:	mov    ecx,0x8c6d1d7c
  410aa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410aa4:	ins    DWORD PTR es:[edi],dx
  410aa5:	popf   
  410aa6:	xor    DWORD PTR [ebx],esi
  410aa8:	pop    eax
  410aa9:	fidiv  WORD PTR [ecx]
  410aab:	xchg   edi,eax
  410aac:	fchs   
  410aae:	and    al,0x1c
  410ab0:	and    al,0x8
  410ab2:	ins    BYTE PTR es:[edi],dx
  410ab3:	push   0x66
  410ab5:	scas   eax,DWORD PTR es:[edi]
  410ab6:	ret    0xbbfc
  410ab9:	jne    0x410a55
  410abb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410abc:	pushf  
  410abd:	sub    BYTE PTR ds:0x67792969,ch
  410ac3:	call   0x41ee:0xe54d775a
  410aca:	fwait
  410acb:	xchg   BYTE PTR [edi],ah
  410acd:	data16 (bad) 
  410acf:	jne    0x410a96
  410ad1:	fdiv   DWORD PTR [ebx+0x49bc8cb4]
  410ad7:	fidiv  DWORD PTR [edx+0x593ea80d]
  410add:	xchg   ebp,eax
  410ade:	int    0xc2
  410ae0:	push   edx
  410ae1:	int    0x36
  410ae3:	xchg   esi,eax
  410ae4:	xchg   ecx,eax
  410ae5:	xchg   ecx,eax
  410ae6:	scas   al,BYTE PTR es:[edi]
  410ae7:	sbb    al,0x8d
  410ae9:	push   ebp
  410aea:	pushf  
  410aeb:	and    dh,bh
  410aed:	out    dx,eax
  410aee:	dec    eax
  410aef:	inc    esi
  410af0:	fwait
  410af1:	call   0x8d9e:0xbe9b97d6
  410af8:	push   ecx
  410af9:	mov    eax,0xaf5d5aa5
  410afe:	leave  
  410aff:	sub    ebx,edx
  410b01:	in     al,dx
  410b02:	in     al,dx
  410b03:	mov    ah,0xa9
  410b05:	mov    dl,0x8
  410b07:	cmp    al,BYTE PTR [edi]
  410b09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b0a:	push   ebx
  410b0b:	jno    0x410b78
  410b0d:	mov    ds:0xea357bb,eax
  410b12:	js     0x410aa7
  410b14:	pop    eax
  410b15:	popf   
  410b16:	lds    ebx,FWORD PTR [eax]
  410b18:	mov    edi,DWORD PTR [edx+0x17]
  410b1b:	mov    ch,0xd6
  410b1d:	or     BYTE PTR [edi+0x3ec11538],cl
  410b23:	add    eax,0x49057a0a
  410b28:	ja     0x410b2b
  410b2a:	xchg   DWORD PTR [esi],ebp
  410b2c:	(bad)  
  410b2d:	xchg   edx,eax
  410b2e:	fcmovbe st,st(2)
  410b30:	outs   dx,DWORD PTR ds:[esi]
  410b31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b32:	dec    ebx
  410b33:	dec    esi
  410b34:	dec    ebp
  410b35:	stos   BYTE PTR es:[edi],al
  410b36:	xor    al,bh
  410b38:	pop    edx
  410b39:	xchg   ecx,eax
  410b3a:	(bad)  
  410b3b:	fwait
  410b3c:	sbb    esi,edx
  410b3e:	and    bl,0x76
  410b41:	mov    BYTE PTR cs:[edi+0x7f],bl
  410b45:	xor    ebp,DWORD PTR [edi-0x7a]
  410b48:	test   DWORD PTR [esi],edx
  410b4a:	mov    ebx,DWORD PTR [ebx]
  410b4c:	shl    al,0x98
  410b4f:	ficomp WORD PTR [ebx+edi*4-0x7c]
  410b53:	mov    esi,ss
  410b55:	push   ecx
  410b56:	loop   0x410bac
  410b58:	sbb    cl,BYTE PTR [ebx+ecx*1+0x77]
  410b5c:	dec    eax
  410b5d:	lds    edx,FWORD PTR [ecx+0x7b]
  410b60:	js     0x410b28
  410b62:	cwde   
  410b63:	fld    TBYTE PTR [ebx+0x56]
  410b66:	jecxz  0x410b5e
  410b68:	setnp  dl
  410b6b:	mov    bh,0x2d
  410b6d:	xchg   edx,eax
  410b6e:	inc    esp
  410b6f:	(bad)  
  410b70:	fwait
  410b71:	neg    DWORD PTR [edi+0x5af7f357]
  410b77:	cmp    al,BYTE PTR [esi]
  410b79:	mov    cl,0x1c
  410b7b:	jno    0x410b9d
  410b7d:	mov    edi,0x50238dec
  410b82:	cdq    
  410b83:	jg     0x410baa
  410b85:	push   edx
  410b86:	aaa    
  410b87:	rcl    BYTE PTR [ebx+0x28],0x61
  410b8b:	outs   dx,DWORD PTR ds:[esi]
  410b8c:	pop    eax
  410b8d:	into   
  410b8e:	jecxz  0x410b48
  410b90:	cmp    cl,cl
  410b92:	jmp    0x1d15d89
  410b97:	lock daa 
  410b99:	inc    BYTE PTR [edx-0x5]
  410b9c:	lods   eax,DWORD PTR ds:[esi]
  410b9d:	mov    ch,0x12
  410b9f:	mov    esp,0x823df3cd
  410ba4:	enter  0x6cff,0xfc
  410ba8:	sub    DWORD PTR [eax],edx
  410baa:	mov    ds:0x74efe71d,al
  410baf:	mov    bl,0x56
  410bb1:	stc    
  410bb2:	(bad)  
  410bb3:	adc    al,0x5f
  410bb5:	retf   0x5016
  410bb8:	gs enter 0x4947,0xb
  410bbd:	or     BYTE PTR [esi],0xe1
  410bc0:	pop    eax
  410bc1:	push   0x28fc2501
  410bc6:	pop    ss
  410bc7:	aas    
  410bc8:	lea    eax,[eax+0x13]
  410bcb:	push   esp
  410bcc:	test   BYTE PTR [ebx-0x3e],dl
  410bcf:	test   ah,0x97
  410bd2:	hlt    
  410bd3:	cmc    
  410bd4:	cli    
  410bd5:	ret    
  410bd6:	inc    ebx
  410bd7:	xchg   edi,eax
  410bd8:	dec    ecx
  410bd9:	pushf  
  410bda:	mov    dh,0x8d
  410bdc:	shr    BYTE PTR [ebp+0x250c729e],1
  410be2:	leave  
  410be3:	adc    ah,0xda
  410be6:	adc    eax,0x34bcd215
  410beb:	sub    eax,0x640dfcd
  410bf0:	sbb    al,0x76
  410bf2:	sub    dh,ah
  410bf4:	test   DWORD PTR [edx-0x2fc03502],edx
  410bfa:	sti    
  410bfb:	retf   
  410bfc:	dec    edi
  410bfd:	sbb    esi,edi
  410bff:	jp     0x410bca
  410c01:	es std 
  410c03:	and    eax,ebx
  410c05:	loopne 0x410bda
  410c07:	into   
  410c08:	call   0x26cf3ed4
  410c0d:	repnz mov eax,ds:0x261ef13d
  410c13:	rol    BYTE PTR [ebx+eax*2-0x246c5139],1
  410c1a:	ret    
  410c1b:	into   
  410c1c:	mov    edx,0x284c0076
  410c21:	cmc    
  410c22:	idiv   edi
  410c24:	push   0xffffffa5
  410c26:	fcmovu st,st(1)
  410c28:	sub    cl,BYTE PTR [ecx+0x72]
  410c2b:	push   0xffffffd0
  410c2d:	and    bl,0x5c
  410c30:	pop    edx
  410c31:	pop    eax
  410c32:	sub    eax,0xd7374b38
  410c37:	retf   0xc964
  410c3a:	xor    esp,ecx
  410c3c:	or     al,0x95
  410c3e:	imul   edi,DWORD PTR [edx],0x60
  410c41:	popa   
  410c42:	fisub  DWORD PTR [eax]
  410c44:	icebp  
  410c45:	fistp  DWORD PTR [edi+0x2a088a7d]
  410c4b:	(bad)  
  410c4c:	dec    esi
  410c4d:	cli    
  410c4e:	cmp    dl,0xc2
  410c51:	ror    DWORD PTR [eax],1
  410c53:	xchg   BYTE PTR [eax],al
  410c55:	je     0x410cce
  410c57:	push   cs
  410c58:	mov    eax,ds:0x5e8d26e5
  410c5d:	leave  
  410c5e:	and    al,0xfe
  410c60:	dec    edi
  410c61:	mov    ebp,0x212de98d
  410c66:	fdivr  QWORD PTR [esi+0x52]
  410c69:	fld    DWORD PTR [edi+0x20]
  410c6c:	pop    esp
  410c6d:	shl    dl,cl
  410c6f:	icebp  
  410c70:	fst    DWORD PTR [edi-0x71]
  410c73:	push   esi
  410c74:	xlat   BYTE PTR ds:[ebx]
  410c75:	fld    TBYTE PTR [ebx]
  410c77:	fisub  WORD PTR [eax]
  410c79:	jl     0x410c27
  410c7b:	ss cld 
  410c7d:	inc    edi
  410c7e:	dec    ecx
  410c7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c80:	jecxz  0x410c7b
  410c82:	fistp  WORD PTR [edi-0x945b808]
  410c88:	or     bh,cl
  410c8a:	sbb    al,0x74
  410c8c:	or     eax,0x4a3e43b9
  410c91:	stos   BYTE PTR es:[edi],al
  410c92:	dec    eax
  410c93:	dec    ebx
  410c94:	ror    DWORD PTR [ecx+0x12],1
  410c97:	mov    WORD PTR [edi],es
  410c99:	dec    ebx
  410c9a:	stos   BYTE PTR es:[edi],al
  410c9b:	dec    esi
  410c9c:	lock (bad) 
  410c9e:	icebp  
  410c9f:	int    0xab
  410ca1:	fdiv   st(6),st
  410ca3:	fwait
  410ca4:	hlt    
  410ca5:	cld    
  410ca6:	cmp    BYTE PTR [bx+di+0x3b],dh
  410caa:	mov    esi,0x2c743cff
  410caf:	rol    DWORD PTR ds:0x528c054a,1
  410cb5:	push   ds
  410cb6:	test   BYTE PTR [ecx],0x1a
  410cb9:	mov    edi,0xa4c90668
  410cbe:	int3   
  410cbf:	loope  0x410cd7
  410cc1:	dec    eax
  410cc2:	(bad)  
  410cc3:	jbe    0x410cd7
  410cc5:	leave  
  410cc6:	sub    DWORD PTR [edx+esi*1-0x1bb1787d],esp
  410ccd:	adc    BYTE PTR [edx-0x34],ah
  410cd0:	scas   al,BYTE PTR es:[edi]
  410cd1:	inc    eax
  410cd2:	push   edi
  410cd3:	xchg   edi,eax
  410cd4:	adc    eax,0x9c9e3775
  410cd9:	adc    ah,al
  410cdb:	fbstp  TBYTE PTR [esp+eiz*4]
  410cde:	out    0x32,eax
  410ce0:	cld    
  410ce1:	cmp    bh,BYTE PTR [edx+0xaca1fe7]
  410ce7:	inc    esi
  410ce8:	mov    WORD PTR [ebp-0x2],?
  410ceb:	fisub  WORD PTR ss:[eax-0x7d09f44c]
  410cf2:	stc    
  410cf3:	cmp    dh,dh
  410cf5:	xchg   DWORD PTR [esi],eax
  410cf7:	mov    eax,0xf241179
  410cfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cfd:	jmp    0xaa542e6d
  410d02:	lods   eax,DWORD PTR ds:[esi]
  410d03:	lds    ecx,FWORD PTR [esi+0x1]
  410d06:	mov    dh,0x2c
  410d08:	or     esp,edx
  410d0a:	out    dx,al
  410d0b:	stos   DWORD PTR es:[edi],eax
  410d0c:	push   eax
  410d0d:	xor    DWORD PTR ds:0xee69e434,esi
  410d13:	sbb    BYTE PTR [ebx-0xe],0xc7
  410d17:	mov    fs,ebp
  410d19:	or     BYTE PTR [edx-0x1f],0x90
  410d1d:	sbb    eax,0x3dcb1920
  410d22:	shl    BYTE PTR [ebx+0x56acee5a],cl
  410d28:	call   0xb136:0x9d63bd5
  410d2f:	and    DWORD PTR [ebx],ecx
  410d31:	(bad)  
  410d32:	mov    al,ds:0xef14dce0
  410d37:	inc    ecx
  410d38:	mov    ecx,0x2b2b9508
  410d3d:	add    eax,0x4fb66221
  410d42:	pop    esi
  410d43:	push   esp
  410d44:	daa    
  410d45:	loop   0x410d08
  410d47:	js     0x410d1f
  410d49:	mov    ebx,0x9466d67d
  410d4e:	sbb    DWORD PTR [ecx-0x7b],ebx
  410d51:	push   eax
  410d52:	dec    ebx
  410d53:	bound  edi,QWORD PTR [ebp+0x3]
  410d56:	wrmsr  
  410d58:	(bad)  
  410d59:	xchg   BYTE PTR [edx-0x1e],bh
  410d5c:	aas    
  410d5d:	sahf   
  410d5e:	push   cs
  410d5f:	aas    
  410d60:	mov    DWORD PTR [edi+eax*1],0x7e2dd90c
  410d67:	mov    al,ds:0x50c486
  410d6c:	jl     0x410d55
  410d6e:	sbb    DWORD PTR [edx],eax
  410d70:	push   es
  410d71:	push   edx
  410d72:	in     eax,dx
  410d73:	sub    BYTE PTR [eax+0x5b430d4f],ch
  410d79:	cli    
  410d7a:	lods   eax,DWORD PTR ds:[esi]
  410d7b:	sbb    ah,bl
  410d7d:	mov    al,0x3
  410d7f:	mov    eax,ds:0x93e3998e
  410d84:	and    ecx,eax
  410d86:	test   ch,dh
  410d88:	sbb    ch,BYTE PTR [ecx]
  410d8a:	jbe    0x410db6
  410d8c:	or     BYTE PTR [esi],bh
  410d8e:	ja     0x410dd8
  410d90:	cmp    eax,0x3e76073b
  410d95:	outs   dx,DWORD PTR ds:[esi]
  410d96:	fimul  WORD PTR [edi+ecx*4]
  410d99:	stos   DWORD PTR es:[edi],eax
  410d9a:	aad    0x4
  410d9c:	mov    dh,0xc2
  410d9e:	pop    es
  410d9f:	pop    ebp
  410da0:	leave  
  410da1:	mov    ecx,DWORD PTR [edx]
  410da3:	test   al,0x95
  410da5:	loopne 0x410e05
  410da7:	cmp    ebp,esi
  410da9:	sub    bl,BYTE PTR [esi+edi*8+0x1d]
  410dad:	sub    dh,BYTE PTR [edi]
  410daf:	out    dx,al
  410db0:	add    esi,DWORD PTR [ebx+edx*1+0x7c]
  410db4:	sbb    al,0x8
  410db6:	test   DWORD PTR [ecx],eax
  410db8:	cmp    BYTE PTR [eax-0x3c],0x79
  410dbc:	or     esi,ebp
  410dbe:	adc    eax,0x8aa871e7
  410dc3:	sbb    eax,DWORD PTR [edx-0x23]
  410dc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dc7:	les    esp,FWORD PTR [edi]
  410dc9:	aad    0x84
  410dcb:	(bad)  
  410dcc:	test   DWORD PTR [ecx+0x5],0x9b5d35dc
  410dd3:	or     al,0x56
  410dd5:	inc    eax
  410dd6:	jns    0x410ddd
  410dd8:	cmp    DWORD PTR ds:0x862de7a,0xa015199
  410de2:	daa    
  410de3:	nop
  410de4:	push   edx
  410de5:	test   al,0x94
  410de7:	jmp    0x410e1c
  410de9:	dec    eax
  410dea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410deb:	or     edx,DWORD PTR [esi+0x23b31c21]
  410df1:	mov    ds:0x8659e542,ax
  410df7:	xor    ah,dh
  410df9:	sahf   
  410dfa:	sbb    eax,0x95fc0539
  410dff:	ss adc eax,0xc8726a21
  410e05:	mov    DWORD PTR [ebx-0x10],esp
  410e08:	pop    ds
  410e09:	test   eax,0xf7567357
  410e0e:	pop    es
  410e0f:	(bad)  
  410e11:	inc    edi
  410e12:	dec    ebx
  410e13:	dec    eax
  410e14:	shr    BYTE PTR [edi],1
  410e16:	xlat   BYTE PTR ds:[ebx]
  410e17:	cld    
  410e18:	aam    0x2b
  410e1a:	fisttp DWORD PTR [esi-0x352eafc1]
  410e20:	xchg   ebp,eax
  410e21:	sub    eax,0x4081751c
  410e26:	pop    esi
  410e27:	xor    eax,0x7749f88a
  410e2c:	gs push ss
  410e2e:	push   cs
  410e2f:	push   edx
  410e30:	pop    ebx
  410e31:	or     DWORD PTR es:[ebx+0x75],ebx
  410e35:	(bad)  [ebp+0x13]
  410e38:	inc    eax
  410e39:	out    0x26,eax
  410e3b:	repnz inc eax
  410e3d:	imul   eax,DWORD PTR [edx],0x18708313
  410e43:	in     eax,dx
  410e44:	sbb    DWORD PTR [esi-0x45cebd2f],ecx
  410e4a:	push   ebx
  410e4b:	stos   BYTE PTR es:[edi],al
  410e4c:	jmp    0x4b04:0x2dbeec6a
  410e53:	inc    eax
  410e54:	mov    BYTE PTR [ebx],cl
  410e56:	ret    0xcee7
  410e59:	add    BYTE PTR [esp-0x4b80548f],0x21
  410e61:	mov    ds:0x48bc0b11,al
  410e66:	in     al,dx
  410e67:	test   eax,0x5ba2cccc
  410e6c:	nop
  410e6d:	in     al,dx
  410e6e:	int3   
  410e6f:	sahf   
  410e70:	xchg   BYTE PTR [edx-0x7ef181c3],dh
  410e76:	cmova  ebx,DWORD PTR [esp+edx*1+0x1a]
  410e7b:	mov    ebx,DWORD PTR [edx+0x7f8c48cd]
  410e81:	xlat   BYTE PTR ds:[ebx]
  410e82:	pop    es
  410e83:	fld    QWORD PTR [edx+edi*2]
  410e86:	(bad)  
  410e87:	(bad)  
  410e88:	dec    esi
  410e89:	lods   eax,DWORD PTR ds:[esi]
  410e8a:	and    ebx,esi
  410e8c:	dec    esi
  410e8d:	xchg   esp,eax
  410e8e:	call   0x11690715
  410e93:	jg     0x410ed2
  410e95:	sub    eax,0x850de27e
  410e9a:	mov    ebx,0x6b7d030
  410e9f:	add    eax,0x8987fdf1
  410ea4:	adc    DWORD PTR [edx+0x2c],eax
  410ea7:	inc    ebx
  410ea8:	push   cs
  410ea9:	mov    ch,al
  410eab:	call   0xc10a:0x1b9e6cbe
  410eb2:	or     al,0x75
  410eb4:	push   es
  410eb5:	repnz aad 0x85
  410eb8:	pop    edx
  410eb9:	pop    ecx
  410eba:	xchg   esi,eax
  410ebb:	mov    dh,0x14
  410ebd:	cdq    
  410ebe:	jbe    0x410e73
  410ec0:	pop    ebx
  410ec1:	ds jno 0x410eab
  410ec4:	iret   
  410ec5:	xchg   esp,eax
  410ec6:	cmp    ebx,DWORD PTR [ebx]
  410ec8:	pop    ecx
  410ec9:	mov    dh,0xe7
  410ecb:	inc    BYTE PTR [esp+eax*1-0x29ffd4ed]
  410ed2:	sub    eax,0xd6e90bdd
  410ed7:	push   cs
  410ed8:	jne    0x410e5f
  410eda:	ret    0xf34f
  410edd:	and    eax,0x95aafc07
  410ee2:	int    0xef
  410ee4:	dec    ebx
  410ee5:	xor    eax,0x2523c953
  410eea:	mov    bl,0x94
  410eec:	ret    0xae45
  410eef:	mov    eax,ds:0x31edc80b
  410ef4:	mov    dh,0x73
  410ef6:	push   esp
  410ef7:	in     eax,0xa6
  410ef9:	mov    esi,0x40d2ba0d
  410efe:	or     BYTE PTR ds:0x79c08590,bl
  410f04:	cmc    
  410f05:	jmp    0xed7c:0xd4d064df
  410f0c:	or     DWORD PTR [eax+0x3947751b],esp
  410f12:	or     al,0xfa
  410f14:	jb     0x410ed2
  410f16:	mov    dx,0x31ae
  410f1a:	pop    ss
  410f1b:	dec    esp
  410f1c:	in     eax,dx
  410f1d:	jbe    0x410ea8
  410f1f:	jne    0x410ef9
  410f21:	add    edx,DWORD PTR [eax-0x72]
  410f24:	pusha  
  410f25:	lods   al,BYTE PTR fs:[esi]
  410f27:	and    BYTE PTR [ebp-0x411ed539],cl
  410f2d:	inc    ebx
  410f2e:	cwde   
  410f2f:	inc    eax
  410f30:	cwde   
  410f31:	repnz mov ch,0x32
  410f34:	push   esp
  410f35:	dec    eax
  410f36:	push   edx
  410f37:	add    al,0x4c
  410f39:	inc    edi
  410f3a:	ret    0xe846
  410f3d:	jp     0x410f80
  410f3f:	stos   BYTE PTR es:[edi],al
  410f40:	add    BYTE PTR [eax-0x71fc9920],dl
  410f46:	mov    ebp,0xa20aee0f
  410f4b:	push   cs
  410f4c:	ins    BYTE PTR es:[edi],dx
  410f4d:	mov    al,0xcd
  410f4f:	out    dx,eax
  410f50:	inc    esi
  410f51:	jle    0x410f84
  410f53:	mov    edi,0xe8480ff1
  410f58:	aas    
  410f59:	cmc    
  410f5a:	add    eax,DWORD PTR [ebp-0xbe007be]
  410f60:	add    BYTE PTR [esi],cl
  410f62:	inc    esi
  410f63:	cli    
  410f64:	inc    DWORD PTR [esp+ecx*2+0xd]
  410f68:	cmp    DWORD PTR [edi+0x1abe3706],0x3e05467b
  410f72:	into   
  410f73:	jg     0x410f97
  410f75:	aaa    
  410f76:	das    
  410f77:	arpl   WORD PTR [ebx],di
  410f79:	sub    al,0x7a
  410f7b:	adc    al,0xcc
  410f7d:	and    dl,BYTE PTR [eax]
  410f7f:	sbb    ebp,edx
  410f81:	arpl   si,sp
  410f83:	pop    ss
  410f84:	inc    eax
  410f85:	xchg   BYTE PTR [esp+edx*2-0x1f0574e4],ah
  410f8c:	sub    al,0x0
  410f8e:	mov    ecx,0x59528a0d
  410f93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f94:	dec    DWORD PTR [ecx+0x4d87f581]
  410f9a:	iret   
  410f9b:	jmp    0x29c8:0x44c31339
  410fa2:	arpl   cx,di
  410fa4:	lds    esp,FWORD PTR ds:0xa8fc7ed0
  410faa:	lahf   
  410fab:	xor    DWORD PTR [eax-0x240f04ab],ebp
  410fb1:	push   edi
  410fb2:	shl    BYTE PTR [esi],1
  410fb4:	gs dec ecx
  410fb6:	push   cs
  410fb7:	mov    edi,0xff58f59f
  410fbc:	clc    
  410fbd:	fwait
  410fbe:	adc    al,0x48
  410fc0:	or     esp,DWORD PTR [edi-0x80]
  410fc3:	js     0x41101a
  410fc5:	or     eax,0x47050645
  410fca:	or     bl,al
  410fcc:	mov    edi,0xefd80237
  410fd1:	in     eax,0xf1
  410fd3:	xchg   ecx,eax
  410fd4:	imul   ecx,DWORD PTR [edx],0xb
  410fd7:	rcr    BYTE PTR [ecx-0x4d],1
  410fda:	aaa    
  410fdb:	and    ebp,DWORD PTR [ebp+ebx*2-0x2b]
  410fdf:	cmp    cl,BYTE PTR [edx+0x1676d58a]
  410fe5:	int3   
  410fe6:	pop    ebp
  410fe7:	int3   
  410fe8:	inc    ebx
  410fe9:	aas    
  410fea:	(bad)  
  410feb:	(bad)  
  410fec:	imul   edi,DWORD PTR [ecx+0xd68e253],0xfa0d5dbf
  410ff6:	sub    eax,0x9280769d
  410ffb:	or     eax,DWORD PTR [eax-0x705e513f]
  411001:	cwde   
  411002:	or     eax,esp
  411004:	sub    al,0xc3
  411006:	xor    eax,0x442a7ec6
  41100b:	push   ds
  41100c:	imul   esp,DWORD PTR ds:0x301335d4,0x89684be7
  411016:	in     al,0x82
  411018:	(bad)  
  411019:	cmc    
  41101a:	(bad)  
  41101c:	sub    ebp,edx
  41101e:	push   0x1c
  411020:	clc    
  411021:	jmp    0x41102d
  411023:	and    al,0x2f
  411025:	dec    ebp
  411026:	mov    ebx,0x393bbdc1
  41102b:	lds    edi,FWORD PTR [eax+0x2]
  41102e:	dec    esp
  41102f:	out    0x3b,eax
  411031:	add    bl,bl
  411033:	dec    ebp
  411034:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411035:	aam    0x90
  411037:	and    edx,ebp
  411039:	mov    ecx,0x945b922b
  41103e:	adc    DWORD PTR [ecx],eax
  411040:	sub    ch,BYTE PTR [eax]
  411042:	sub    BYTE PTR [esi+0x41],al
  411045:	lahf   
  411046:	push   eax
  411047:	int3   
  411048:	add    BYTE PTR [ebx+edi*1],dl
  41104b:	jg     0x411017
  41104d:	not    dh
  41104f:	xchg   ebx,eax
  411050:	mov    edx,0xea56c1fa
  411055:	add    ecx,DWORD PTR [ebx+0x6624d92]
  41105b:	loopne 0x410fed
  41105d:	in     eax,0x75
  41105f:	dec    ecx
  411060:	pop    ss
  411061:	pop    edi
  411062:	mov    dh,0x5e
  411064:	sti    
  411065:	or     BYTE PTR [edi-0x271707be],ch
  41106b:	shl    DWORD PTR [ecx+0x1b],cl
  41106e:	push   es
  41106f:	push   es
  411070:	(bad)  
  411071:	pop    ebp
  411072:	add    DWORD PTR [ebp-0x64],edx
  411075:	adc    DWORD PTR [esi+0xd],ebx
  411078:	and    al,0x3f
  41107a:	pop    ss
  41107b:	out    0xa3,eax
  41107d:	sar    DWORD PTR [esi+0xb],0x46
  411081:	mov    edx,0xc1bbd55
  411086:	mov    DWORD PTR [esi+0x8],edx
  411089:	jmp    0x736b001c
  41108e:	lock ror DWORD PTR [ebx],0x4
  411092:	jo     0x41107c
  411094:	pop    ecx
  411095:	imul   edi,DWORD PTR [esi],0x2f969ace
  41109b:	outs   dx,BYTE PTR ds:[esi]
  41109c:	lea    esi,[ebx]
  41109e:	add    dl,BYTE PTR [edx-0x35]
  4110a1:	xor    edx,DWORD PTR [eax]
  4110a3:	or     eax,0x6e7c8d40
  4110a8:	cs and al,0x2d
  4110ab:	pop    ebp
  4110ac:	xor    eax,0x82d2b4fc
  4110b1:	add    al,0xc1
  4110b3:	ror    DWORD PTR [ecx+0x7c],0x85
  4110b7:	rol    ecx,0x46
  4110ba:	inc    ecx
  4110bb:	test   DWORD PTR [ecx+0x70],ebx
  4110be:	popf   
  4110bf:	es jmp 0x102135a1
  4110c5:	adc    ch,BYTE PTR [ebp-0x646316be]
  4110cb:	cdq    
  4110cc:	add    ecx,DWORD PTR [ebp+0x5e]
  4110cf:	mov    ah,0x12
  4110d1:	sbb    al,0x6a
  4110d3:	push   cs
  4110d4:	mov    bl,0x3e
  4110d6:	sbb    eax,0x1e5f425b
  4110db:	inc    esp
  4110dc:	or     DWORD PTR [ebx-0x10bdd80b],ecx
  4110e2:	pop    esi
  4110e3:	pop    eax
  4110e4:	mov    eax,0x5a568e8c
  4110e9:	test   DWORD PTR [edx-0x3fd2070a],ebp
  4110ef:	stc    
  4110f0:	sub    ch,BYTE PTR [ebx+0x46be1f35]
  4110f6:	es ss repnz xor al,0xe6
  4110fb:	outs   dx,DWORD PTR ds:[esi]
  4110fc:	int3   
  4110fd:	jmp    0x4110d0
  4110ff:	cmp    DWORD PTR [ebx],eax
  411101:	inc    ebx
  411102:	cs sti 
  411104:	int3   
  411105:	push   ebx
  411106:	inc    ebx
  411107:	cmp    ebx,ebx
  411109:	mov    dl,0xce
  41110b:	or     edx,DWORD PTR [ebp-0x68]
  41110e:	rcr    DWORD PTR [ebx],1
  411110:	xchg   ebp,eax
  411111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411112:	bound  esi,QWORD PTR [edx+0x1ade491a]
  411118:	sbb    BYTE PTR [esi+0x5fea1a07],ah
  41111e:	shl    DWORD PTR [ecx+0x7fbb5e6e],cl
  411124:	xor    DWORD PTR [ebp+edi*1+0x6bbd7cdc],0x665a0c80
  41112f:	add    BYTE PTR [eax+0x76b05243],bh
  411135:	add    eax,ebp
  411137:	mov    al,0xa0
  411139:	repz dec ebx
  41113b:	inc    edx
  41113c:	adc    al,0x4b
  41113e:	in     al,dx
  41113f:	je     0x41112c
  411141:	xor    ebx,DWORD PTR [edi]
  411143:	pop    eax
  411144:	dec    BYTE PTR [edx-0x5b]
  411147:	or     BYTE PTR [edx-0x1dcdeed],0x42
  41114e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41114f:	xor    BYTE PTR [esi],0x11
  411152:	pop    ebx
  411153:	xchg   esi,eax
  411154:	mov    esp,0x8e6eea7b
  411159:	inc    ebx
  41115a:	inc    edi
  41115b:	sbb    BYTE PTR [ebx],0xb6
  41115e:	pop    esi
  41115f:	fisttp QWORD PTR [edx-0x508ef809]
  411165:	sahf   
  411166:	push   0x8dba0a90
  41116b:	das    
  41116c:	push   esi
  41116d:	add    bh,dl
  41116f:	jmp    0x41119c
  411171:	aad    0x6c
  411173:	test   BYTE PTR [esi+esi*8-0x66],bl
  411177:	add    cl,BYTE PTR [esi+0x37d30de3]
  41117d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41117e:	jecxz  0x41110d
  411180:	int    0x34
  411182:	out    0x5f,eax
  411184:	or     cl,BYTE PTR [ebp+0x30]
  411187:	in     al,0xe1
  411189:	pop    ss
  41118a:	push   ds
  41118b:	jb     0x4111d7
  41118d:	xor    ebx,0xe
  411190:	or     eax,0xf6e5ed2e
  411195:	xor    BYTE PTR [ecx-0x77be0b14],cl
  41119b:	retf   
  41119c:	add    bh,BYTE PTR [esi-0x6b]
  41119f:	ja     0x4111e5
  4111a1:	call   DWORD PTR [esi-0x12076b57]
  4111a7:	(bad)  
  4111a8:	nop
  4111a9:	inc    ecx
  4111aa:	xor    ebp,DWORD PTR [ebp-0x747574f4]
  4111b0:	mul    BYTE PTR [ecx+0x11]
  4111b3:	and    al,BYTE PTR [eax-0x566e0ea7]
  4111b9:	out    dx,al
  4111ba:	pand   mm7,QWORD PTR [ebx-0x57]
  4111be:	adc    al,0x1c
  4111c0:	fwait
  4111c1:	cmp    eax,0xa1df5396
  4111c6:	dec    ecx
  4111c7:	pop    edi
  4111c8:	mov    esi,0x35f0289
  4111cd:	ror    DWORD PTR [edi],0xec
  4111d0:	pop    esi
  4111d1:	xrelease xchg BYTE PTR [edi+0x7d452f9a],dh
  4111d8:	xor    BYTE PTR [eax],0xd8
  4111db:	sbb    BYTE PTR [ecx],bl
  4111dd:	mov    ebp,0x195da473
  4111e2:	leave  
  4111e3:	mov    ch,0x3c
  4111e5:	dec    esi
  4111e6:	sub    eax,DWORD PTR [edi-0x770d04b8]
  4111ec:	mov    ebp,DWORD PTR [ebp+0x57af1748]
  4111f2:	pushf  
  4111f3:	inc    esp
  4111f4:	aam    0xdd
  4111f6:	test   al,0xfd
  4111f8:	and    eax,0x1fac008c
  4111fd:	dec    esp
  4111fe:	mov    bl,0xe6
  411200:	mov    edx,0xb993d3f7
  411205:	inc    esi
  411206:	inc    dh
  411208:	rcl    BYTE PTR [edx-0x70713149],1
  41120e:	std    
  41120f:	inc    edi
  411210:	jp     0x411271
  411212:	jno    0x411233
  411214:	mov    ds:0x1e74fade,al
  411219:	jp     0x4111c4
  41121b:	mov    eax,ds:0x828e69b8
  411220:	jns    0x4111e4
  411222:	or     al,0xbc
  411224:	xchg   BYTE PTR [edx+0x2809b924],cl
  41122a:	mov    ds:0x54f143e2,eax
  41122f:	push   0x3cb95668
  411234:	(bad)  
  411235:	rcl    DWORD PTR [eax-0x4cbf25d],1
  41123b:	jge    0x411280
  41123d:	pop    es
  41123e:	jle    0x411275
  411240:	push   0x41e45b09
  411245:	(bad)  
  411246:	imul   edx,DWORD PTR [ebp+0x6a],0x34d1782e
  41124d:	test   ebx,ecx
  41124f:	sbb    BYTE PTR [edi-0x54abad4],ch
  411255:	push   ebp
  411256:	cdq    
  411257:	(bad)  
  411258:	(bad)  [ecx+esi*1]
  41125b:	pop    ebx
  41125c:	or     DWORD PTR [ecx+0x78],ecx
  41125f:	adc    eax,edi
  411261:	pusha  
  411262:	pop    es
  411263:	push   ebx
  411264:	sub    DWORD PTR [edx+ecx*8],eax
  411267:	adc    ebx,DWORD PTR [ecx+0x78]
  41126a:	xchg   ebp,ebx
  41126c:	adc    bh,BYTE PTR [ebp-0x51]
  41126f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411270:	sbb    DWORD PTR [ecx],0x5c3c116c
  411276:	hlt    
  411277:	and    al,0xba
  411279:	dec    edx
  41127a:	call   DWORD PTR [ebx-0x71d4dca]
  411280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411282:	and    al,0xf2
  411284:	mov    ecx,0x5ca85a0a
  411289:	lahf   
  41128a:	daa    
  41128b:	mov    ds:0x7e8dd9c4,eax
  411290:	pop    ds
  411291:	push   0xc073b1cd
  411296:	imul   ebp,DWORD PTR [eax+0x43],0xcd9a00bc
  41129d:	(bad)  
  41129e:	hlt    
  41129f:	xchg   BYTE PTR [edx+0x47acb67f],dl
  4112a5:	int    0xe
  4112a7:	add    DWORD PTR [esi+0x296a2831],ecx
  4112ad:	mov    al,ds:0x83e5a3de
  4112b2:	sub    eax,0x390a7006
  4112b7:	ins    DWORD PTR es:[edi],dx
  4112b8:	neg    BYTE PTR [edx]
  4112ba:	emms   
  4112bc:	push   esp
  4112bd:	fst    QWORD PTR [esi+0x18b55fa8]
  4112c3:	or     ch,BYTE PTR ss:[edi]
  4112c6:	lea    eax,[ebx+edx*1-0x6]
  4112ca:	sub    esi,DWORD PTR [ebx+0x48]
  4112cd:	jae    0x4112ed
  4112cf:	je     0x4112f1
  4112d1:	imul   ebx,DWORD PTR [edi],0xe48af1b0
  4112d7:	adc    eax,0x8f14ed1c
  4112dc:	mov    ds:0xc0ce229b,eax
  4112e1:	adc    DWORD PTR [edx-0x5a],eax
  4112e4:	gs mov ebp,0xd5380e12
  4112ea:	jl     0x4112bd
  4112ec:	loopne 0x4112e6
  4112ee:	pushf  
  4112ef:	mov    BYTE PTR [ecx+0x54],ah
  4112f2:	mov    eax,ds:0xe2e38251
  4112f7:	sbb    al,0x8c
  4112f9:	inc    ebp
  4112fa:	cli    
  4112fb:	les    esi,FWORD PTR [ecx]
  4112fd:	pop    ds
  4112fe:	add    DWORD PTR [ebx-0x7a741f00],ebp
  411304:	je     0x41132d
  411306:	pop    ss
  411307:	daa    
  411308:	add    BYTE PTR [ebp-0x36],ch
  41130b:	xchg   ecx,eax
  41130c:	jno    0x411298
  41130e:	xchg   ebp,eax
  41130f:	mov    ecx,0x90bb0d57
  411314:	jb     0x411339
  411316:	fiadd  WORD PTR [edx]
  411318:	jb     0x411302
  41131a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41131b:	sbb    DWORD PTR [edi],edi
  41131d:	mov    ch,0x6c
  41131f:	(bad)  
  411320:	xor    al,0x80
  411322:	jb     0x41136c
  411324:	sub    ch,ah
  411326:	(bad)  
  411327:	div    DWORD PTR [edx-0x6b]
  41132a:	dec    eax
  41132b:	add    BYTE PTR [eax+0x3878b947],al
  411331:	loope  0x411385
  411333:	push   edx
  411334:	je     0x411324
  411336:	js     0x4113b5
  411338:	pop    esi
  411339:	jp     0x41135f
  41133b:	and    al,BYTE PTR [eax]
  41133d:	sbb    al,0x61
  41133f:	mov    bl,BYTE PTR [ebx*4+0x59298486]
  411346:	add    BYTE PTR [ecx],0xe9
  411349:	push   ebp
  41134a:	sti    
  41134b:	xchg   esp,eax
  41134c:	cmp    al,0x44
  41134e:	cld    
  41134f:	sbb    al,0x4f
  411351:	mov    eax,ds:0x3993022c
  411356:	jmp    0x7601:0xe5755dc3
  41135d:	add    edi,DWORD PTR [edi]
  41135f:	mov    al,ds:0x82e8248e
  411364:	pop    ebp
  411365:	out    0xfb,eax
  411367:	repnz xor BYTE PTR [esi+0x17],0x83
  41136c:	cli    
  41136d:	adc    al,0xdd
  41136f:	frstor [ecx+ecx*8-0x33]
  411373:	cs or  eax,0x2cf0198a
  411379:	rcr    eax,1
  41137b:	xchg   edi,eax
  41137c:	mov    al,ds:0x3835fd85
  411381:	push   0xffffff89
  411383:	xchg   DWORD PTR [ebx],esp
  411385:	xor    eax,0xd9d9e487
  41138a:	les    cx,DWORD PTR [edi-0x13]
  41138e:	pop    esp
  41138f:	pop    es
  411390:	or     DWORD PTR [edx+edx*1-0x4581f982],ebx
  411397:	into   
  411398:	add    BYTE PTR [ecx+0x6f],cl
  41139b:	or     al,ch
  41139d:	push   ds
  41139e:	sub    eax,0x4f557ab8
  4113a3:	and    eax,0x111ce62f
  4113a8:	test   DWORD PTR [ebx+0x6d],0xf916082e
  4113af:	mov    al,0xc1
  4113b1:	mov    esi,es
  4113b3:	dec    esi
  4113b4:	scas   eax,DWORD PTR es:[edi]
  4113b5:	pop    ds
  4113b6:	out    dx,eax
  4113b7:	ja     0x4113b5
  4113b9:	xlat   BYTE PTR ds:[ebx]
  4113ba:	or     al,0xdc
  4113bc:	paddusb mm1,QWORD PTR [eax+0x22eddfd1]
  4113c3:	call   0x8c41db42
  4113c8:	mov    eax,0x2814d9e7
  4113cd:	pop    ss
  4113ce:	jg     0x4113ec
  4113d0:	mov    bh,0x68
  4113d2:	in     al,dx
  4113d3:	out    0xf1,eax
  4113d5:	adc    eax,DWORD PTR [eax+0x2486d1b4]
  4113db:	push   ebp
  4113dc:	adc    DWORD PTR [edx-0x62d8e8ca],esi
  4113e2:	sbb    al,0x97
  4113e4:	aam    0x96
  4113e6:	add    al,0x34
  4113e8:	mov    dl,0x94
  4113ea:	shl    dl,0x25
  4113ed:	mov    edx,0x15e40db4
  4113f2:	(bad)  
  4113f4:	cwde   
  4113f5:	cmp    ebx,DWORD PTR [ebx+0x1e]
  4113f8:	shl    BYTE PTR [eax],0x80
  4113fb:	mov    cl,0x5d
  4113fd:	out    0xcd,al
  4113ff:	(bad)  
  411401:	int    0xf6
  411403:	ret    
  411404:	and    edi,ebp
  411406:	clc    
  411407:	push   ss
  411408:	xchg   ebx,eax
  411409:	or     BYTE PTR cs:[ebp-0x6d],bh
  41140d:	test   DWORD PTR [edi+0x19a54e3a],esi
  411413:	daa    
  411414:	mov    ch,0x6
  411416:	xchg   ebp,eax
  411417:	xchg   ebx,eax
  411418:	adc    edx,DWORD PTR [edi]
  41141a:	mov    eax,0x2525e7a4
  41141f:	xor    DWORD PTR [ebx+0x24],0xc7e7204e
  411426:	mov    al,ds:0xd28958c5
  41142b:	pusha  
  41142c:	cld    
  41142d:	inc    esi
  41142e:	push   ds
  41142f:	push   ds
  411430:	(bad)  
  411431:	mov    ds:0x2bf70f65,al
  411436:	mov    ds:0xd142b9dd,eax
  41143b:	pusha  
  41143c:	xchg   esp,eax
  41143d:	jle    0x4113e2
  41143f:	iret   
  411440:	nop
  411441:	imul   esi,DWORD PTR ds:0x424cd404
  411448:	pop    es
  411449:	push   esi
  41144a:	xchg   ecx,eax
  41144b:	jmp    0xbceb7573
  411450:	adc    al,0xc
  411452:	rcl    DWORD PTR [ebx],cl
  411454:	test   BYTE PTR [eax+esi*8-0x26297f6a],dl
  41145b:	jge    0x4113fa
  41145d:	adc    ecx,DWORD PTR [ecx-0x6ff27279]
  411463:	outs   dx,BYTE PTR ds:[esi]
  411464:	retf   0xae1b
  411467:	or     ecx,DWORD PTR [ecx+edx*2]
  41146a:	xchg   esi,eax
  41146b:	xchg   ebx,eax
  41146c:	and    DWORD PTR [ecx+eax*8-0x1ef0644d],edi
  411473:	pop    esp
  411474:	call   0xb925:0x1fb7
  41147a:	jp     0x41148b
  41147c:	and    al,0x90
  41147e:	lds    eax,FWORD PTR [edx]
  411480:	dec    ecx
  411481:	mov    BYTE PTR ds:0xc641b5f8,0x24
  411488:	les    edx,FWORD PTR [edi+ecx*4]
  41148b:	dec    ecx
  41148c:	sbb    bl,BYTE PTR [ecx+0x6e]
  41148f:	mov    ebx,edx
  411491:	sub    eax,0xb48d9181
  411496:	pop    ecx
  411497:	aam    0x47
  411499:	std    
  41149a:	cmp    ch,BYTE PTR [edx+0x62]
  41149d:	repz out 0xca,eax
  4114a0:	hlt    
  4114a1:	int    0xb8
  4114a3:	dec    ebx
  4114a4:	add    esp,DWORD PTR [eax]
  4114a6:	fadd   DWORD PTR ds:0x9cc32e88
  4114ac:	jg     0x4114ff
  4114ae:	mov    WORD PTR [ecx+0x29],cs
  4114b1:	inc    esi
  4114b2:	out    dx,al
  4114b3:	es leave 
  4114b5:	scas   al,BYTE PTR es:[edi]
  4114b6:	lds    esi,FWORD PTR [edx-0x74]
  4114b9:	into   
  4114ba:	xor    DWORD PTR [esi+eax*8],0xffffffcf
  4114be:	dec    edi
  4114bf:	push   ebx
  4114c0:	inc    eax
  4114c1:	jge    0x41150d
  4114c3:	es mov ebx,0xb3f7ce0a
  4114c9:	mov    bh,BYTE PTR [esi]
  4114cb:	xchg   ecx,eax
  4114cc:	mov    bh,0x1
  4114ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114cf:	jbe    0x4114da
  4114d1:	out    0x3f,eax
  4114d3:	dec    dx
  4114d5:	dec    ebx
  4114d6:	repnz add ecx,ecx
  4114d9:	cdq    
  4114da:	add    ebp,DWORD PTR [ebx-0x1c]
  4114dd:	or     BYTE PTR [ebx-0x53],0x19
  4114e1:	sbb    BYTE PTR [ebp-0x69d3ec5e],bh
  4114e7:	imul   BYTE PTR [ebx]
  4114e9:	xor    DWORD PTR [edx],eax
  4114eb:	dec    eax
  4114ec:	push   ecx
  4114ed:	int    0xfa
  4114ef:	add    eax,0x53d02bb7
  4114f4:	fisubr DWORD PTR [edi]
  4114f6:	test   al,0xc8
  4114f8:	dec    ebp
  4114f9:	scas   eax,DWORD PTR es:[edi]
  4114fa:	(bad)  
  4114fb:	fimul  DWORD PTR [ebx-0x78]
  4114fe:	imul   esi,eax,0xfffffff4
  411501:	add    eax,0x250a448a
  411506:	xchg   ecx,eax
  411507:	or     BYTE PTR [ebp-0x3b35d8d4],al
  41150d:	pop    ss
  41150e:	or     ebx,ebp
  411510:	mov    ebp,DWORD PTR [edi-0x1368a2c8]
  411516:	cwde   
  411517:	mov    ebx,0xe708505a
  41151c:	inc    ecx
  41151d:	ret    0x2004
  411520:	data16 js 0x411547
  411523:	mov    al,ds:0x7e9a2e1d
  411528:	push   ecx
  411529:	and    eax,DWORD PTR [ecx+0x3]
  41152c:	add    DWORD PTR [ebp-0xab6000c],ecx
  411532:	lock mov eax,0x8ea495c2
  411538:	push   0x6
  41153a:	test   eax,0x4e0ad2b6
  41153f:	test   DWORD PTR [eax+0x33],ecx
  411542:	xchg   DWORD PTR [edx],ebx
  411544:	sbb    al,0x7c
  411546:	push   es
  411547:	or     BYTE PTR [ecx+ecx*8+0x10750170],bl
  41154e:	test   BYTE PTR [esi-0x53],bh
  411551:	mov    edx,DWORD PTR [eax+0xd]
  411554:	(bad)  
  411555:	leave  
  411556:	cmp    DWORD PTR [eax+eiz*1+0x1272f6b1],ebp
  41155d:	fnsave [ebp+esi*4+0x1d137047]
  411564:	and    ch,BYTE PTR [edx+eiz*4-0x5790555c]
  41156b:	mov    dh,0x2b
  41156d:	jg     0x411517
  41156f:	pusha  
  411570:	ret    0xc861
  411573:	xor    al,dh
  411575:	jg     0x411563
  411577:	add    BYTE PTR [edx-0x65fd272],0xec
  41157e:	jg     0x411514
  411580:	test   DWORD PTR [edi-0x527c98dd],eax
  411586:	xchg   ebp,eax
  411587:	sbb    BYTE PTR [edi],dh
  411589:	mov    edx,0x56499f5a
  41158e:	sbb    edx,DWORD PTR [esi-0x7b844ed4]
  411594:	repz clc 
  411596:	and    DWORD PTR [eax],0xb4da84f7
  41159c:	call   0x7a24a3ee
  4115a1:	push   edi
  4115a2:	cdq    
  4115a3:	sub    ch,BYTE PTR [ebp-0x74]
  4115a6:	je     0x4115a0
  4115a8:	repnz xchg edx,eax
  4115aa:	out    0x27,eax
  4115ac:	jo     0x41154b
  4115ae:	cld    
  4115af:	lods   eax,DWORD PTR ds:[esi]
  4115b0:	mov    WORD PTR ds:0xdc5b0009,cs
  4115b6:	adc    al,0xf
  4115b8:	push   edi
  4115b9:	outs   dx,WORD PTR ds:[esi]
  4115bb:	or     al,0xf1
  4115bd:	adc    cl,bh
  4115bf:	pop    ebx
  4115c0:	pop    edx
  4115c1:	jle    0x4115d0
  4115c3:	xor    al,0xdb
  4115c5:	in     eax,0x8d
  4115c7:	jg     0x411553
  4115c9:	mov    dl,0xf7
  4115cb:	out    dx,eax
  4115cc:	or     eax,DWORD PTR [ebx-0xc]
  4115cf:	repnz or dh,BYTE PTR [esi+0xe]
  4115d3:	or     DWORD PTR [eax],esi
  4115d5:	cmp    bl,al
  4115d7:	add    BYTE PTR [ebx],al
  4115d9:	imul   ecx,DWORD PTR [ebx+0x78],0x140aa9f5
  4115e0:	mov    edi,ebx
  4115e2:	(bad)  
  4115e3:	adc    ebx,DWORD PTR [eax]
  4115e5:	mov    edi,0x9d6f12c9
  4115ea:	xchg   ebx,eax
  4115eb:	inc    esi
  4115ec:	mov    edi,0x328812e3
  4115f1:	sub    BYTE PTR [eax-0x32],cl
  4115f4:	push   esi
  4115f5:	jle    0x41162b
  4115f7:	push   ebx
  4115f8:	push   0xffffffe7
  4115fa:	or     al,0x9a
  4115fc:	add    ah,BYTE PTR [eax-0x653fee8]
  411602:	add    al,BYTE PTR [edi+0x565c0e76]
  411608:	sub    ch,BYTE PTR [esi+0x18]
  41160b:	and    eax,0x32686a3
  411610:	xchg   edi,eax
  411611:	sbb    eax,0x9880144b
  411616:	push   edx
  411617:	jecxz  0x411623
  411619:	fadd   DWORD PTR [ebp+0x74]
  41161c:	or     eax,0xa0a7b06
  411621:	and    bh,0x15
  411624:	jo     0x41163d
  411626:	out    dx,eax
  411627:	and    al,0xae
  411629:	jnp    0x411656
  41162b:	ficomp WORD PTR [esi+edx*8+0xb24d628]
  411632:	dec    ebp
  411633:	dec    BYTE PTR [esi]
  411635:	or     al,0xc3
  411637:	cs clc 
  411639:	jnp    0x4115e3
  41163b:	cmp    esp,DWORD PTR [edi-0x1a916336]
  411641:	inc    esi
  411642:	aam    0x40
  411644:	mov    dh,0x0
  411646:	push   eax
  411647:	out    0x4f,eax
  411649:	imul   edx,DWORD PTR [ebx],0xffffffde
  41164c:	sub    BYTE PTR [edx+0x5d4f85d8],dl
  411652:	ja     0x411644
  411654:	xchg   edi,eax
  411655:	add    bh,ch
  411657:	mov    edi,0xb811c79c
  41165c:	and    eax,0x3260f30
  411661:	push   esi
  411662:	adc    al,0x93
  411664:	jnp    0x4115e6
  411666:	ror    DWORD PTR [edi+0x2076d30a],0xa8
  41166d:	scas   eax,DWORD PTR es:[edi]
  41166e:	push   0xaf1098b6
  411673:	cmp    dl,BYTE PTR [edi-0x3e1e5972]
  411679:	shl    ebp,1
  41167b:	push   es
  41167c:	mov    esp,0xd92e17a
  411681:	repnz sbb BYTE PTR [edi-0x6],bh
  411685:	and    eax,esi
  411687:	leave  
  411688:	mov    edi,esp
  41168a:	push   ecx
  41168b:	imul   esi,DWORD PTR [eax+edx*2],0xd9a620e6
  411692:	and    BYTE PTR [edx],ah
  411694:	in     eax,0xac
  411696:	je     0x4116df
  411698:	mov    ds:0x8d9a7ce3,eax
  41169d:	cli    
  41169e:	enter  0xb5d8,0xe2
  4116a2:	and    ebp,DWORD PTR ds:0xe4ed0ebc
  4116a8:	add    BYTE PTR [ecx+esi*8-0x108307eb],0x12
  4116b0:	ja     0x41172a
  4116b2:	(bad)  
  4116b3:	rcl    BYTE PTR [ebx],cl
  4116b5:	and    BYTE PTR [ebp+ebx*8-0x4d377a39],0xa1
  4116bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116be:	imul   esp,ebx,0xffffffe3
  4116c1:	sub    DWORD PTR [edi+edi*2-0x1e1aaa2f],edx
  4116c8:	xor    esp,DWORD PTR [ebx+0x5ec087c9]
  4116ce:	mov    cl,ch
  4116d0:	or     eax,0xd499b192
  4116d5:	scas   al,BYTE PTR es:[edi]
  4116d6:	xchg   esp,eax
  4116d7:	daa    
  4116d8:	leave  
  4116d9:	xchg   edx,eax
  4116da:	xchg   edi,eax
  4116db:	ds mov ah,0x8d
  4116de:	dec    ecx
  4116df:	push   0xbc670cca
  4116e4:	popa   
  4116e5:	fld    DWORD PTR [eax+0x8fd337d]
  4116eb:	test   eax,0x6c478245
  4116f0:	popf   
  4116f1:	loopne 0x4116bd
  4116f3:	push   esp
  4116f4:	jge    0x4116e0
  4116f6:	cmp    dl,al
  4116f8:	mov    edx,DWORD PTR [edx-0x36]
  4116fb:	pop    ebp
  4116fc:	cmp    eax,DWORD PTR [bx]
  4116ff:	inc    ecx
  411700:	in     al,dx
  411701:	xchg   ebx,eax
  411702:	mov    ebp,0xfe32f135
  411707:	dec    esi
  411708:	adc    cl,BYTE PTR [ebx+0x30]
  41170b:	sub    eax,0xe11f822e
  411710:	and    BYTE PTR [eax+0x26],ch
  411713:	adc    BYTE PTR [eax],dl
  411715:	and    DWORD PTR [ebx-0x3cf3ce44],ecx
  41171b:	mov    ah,0x4
  41171d:	or     eax,DWORD PTR [eax]
  41171f:	push   cs
  411720:	pop    es
  411721:	add    eax,0x240f1204
  411726:	push   cs
  411727:	dec    edi
  411728:	pop    es
  411729:	pop    es
  41172a:	or     BYTE PTR ds:0x16060709,0x8d
  411731:	sub    ebp,0x9bb4ad78
  411737:	mov    ebx,0x48b82b8f
  41173c:	jl     0x41178f
  41173e:	call   0x8e87:0xcd1a0cf0
  411745:	or     DWORD PTR [edx],eax
  411747:	mov    ah,0x87
  411749:	dec    ecx
  41174a:	mov    ds:0x2729bd21,al
  41174f:	mov    ds:0xb6d228ae,al
  411754:	dec    ebp
  411755:	std    
  411756:	adc    ecx,DWORD PTR [ebp-0x1]
  411759:	mov    ?,WORD PTR [ebx+0x18]
  41175c:	xchg   edx,eax
  41175d:	jnp    0x4117a8
  41175f:	add    BYTE PTR [eax+ecx*4+0x65420e46],ch
  411766:	mov    eax,ds:0x8826b78d
  41176b:	push   ss
  41176c:	pop    ecx
  41176d:	jmp    0x7fa5:0x8e1a7d2c
  411774:	and    ebx,DWORD PTR [esi+ecx*1+0x44]
  411778:	push   es
  411779:	mov    ecx,fs
  41177b:	leave  
  41177c:	mov    dh,0x6
  41177e:	pop    ebp
  41177f:	or     bl,BYTE PTR [ebp-0x7ffe5ac0]
  411785:	js     0x411739
  411787:	rol    BYTE PTR [ecx],1
  411789:	cdq    
  41178a:	xchg   bh,bl
  41178c:	inc    eax
  41178d:	clc    
  41178e:	nop
  41178f:	mov    eax,ds:0xbaaa4fe1
  411794:	mov    cl,0x50
  411796:	mov    edx,0x9aac9f9f
  41179b:	bound  esp,QWORD PTR [edx+esi*8]
  41179e:	mov    edi,0x1cefc3b9
  4117a3:	adc    DWORD PTR [edi-0x7b69417a],0x3c0bb528
  4117ad:	in     eax,0xee
  4117af:	add    DWORD PTR [esp+ecx*8+0x19],0xed22bd27
  4117b7:	add    al,0xd0
  4117b9:	jg     0x411769
  4117bb:	mov    edi,0x2839c69e
  4117c0:	enter  0xb4b,0x37
  4117c4:	fwait
  4117c5:	xchg   edx,eax
  4117c6:	rcr    DWORD PTR [edi],0x26
  4117c9:	enter  0x9534,0xb9
  4117cd:	fld    DWORD PTR [ecx]
  4117cf:	and    al,bl
  4117d1:	push   edi
  4117d2:	sub    ebp,DWORD PTR [edx-0x6b]
  4117d5:	dec    esi
  4117d6:	or     cl,BYTE PTR gs:[ebx-0x2b57be5f]
  4117dd:	and    BYTE PTR [eax+eiz*4-0x767eee51],bh
  4117e4:	sbb    eax,0x99abb8c8
  4117e9:	ss mov al,0xf2
  4117ec:	sub    bl,cl
  4117ee:	in     eax,dx
  4117ef:	push   esi
  4117f0:	mov    ds:0x259a429e,eax
  4117f5:	lahf   
  4117f6:	and    bl,BYTE PTR [edi+0x42]
  4117f9:	xchg   edx,eax
  4117fa:	sub    esp,DWORD PTR [ebp-0x503952e9]
  411800:	(bad)  
  411801:	call   0x22e:0x9c010034
  411808:	add    DWORD PTR [ebp+0x4a],ecx
  41180b:	bound  edx,QWORD PTR [esi-0x6476adcb]
  411811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411812:	arpl   di,dx
  411814:	mov    bl,0x28
  411816:	xchg   BYTE PTR [ecx+0x4],ah
  411819:	push   0x307f6389
  41181e:	sub    DWORD PTR [edi-0x7a1379c4],0x32
  411825:	mov    al,0x33
  411827:	into   
  411828:	dec    ecx
  411829:	adc    bh,BYTE PTR [edi+esi*2-0x572428da]
  411830:	mov    ecx,0x6e7bc32a
  411835:	dec    eax
  411836:	mov    al,0xc6
  411838:	xchg   edx,eax
  411839:	mov    edx,0x7163c91e
  41183e:	repz iret 
  411840:	or     BYTE PTR [edx],cl
  411842:	rol    BYTE PTR [ecx-0x35f8673f],cl
  411848:	add    bh,BYTE PTR [ecx+ebp*1-0x7c]
  41184c:	cmp    al,0xac
  41184e:	aad    0xd
  411850:	jp     0x411875
  411852:	arpl   di,ax
  411854:	les    eax,FWORD PTR [esp+esi*8+0x5933e232]
  41185b:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41185d:	test   eax,0x321b503c
  411862:	outs   dx,DWORD PTR ds:[esi]
  411863:	test   DWORD PTR [esi],edi
  411865:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411866:	xor    BYTE PTR [edi+0x70],dh
  411869:	(bad)  
  41186a:	lea    eax,[esi]
  41186c:	clc    
  41186d:	test   al,0x4e
  41186f:	or     BYTE PTR ds:0xf106a87c,dl
  411875:	daa    
  411876:	sbb    ebx,DWORD PTR [edi+0x59fc852c]
  41187c:	(bad)
  41187f:	mov    edi,0x8297d86
  411884:	jno    0x411816
  411886:	adc    al,0x5
  411888:	outs   dx,BYTE PTR ds:[esi]
  411889:	cli    
  41188a:	mov    ds:0xa1cde147,al
  41188f:	mov    dh,0xe5
  411891:	xor    DWORD PTR [ebx-0x10],edi
  411894:	mov    BYTE PTR [ebx-0x39],al
  411897:	call   0x5b202f0f
  41189c:	pop    di
  41189e:	jmp    0xb4376123
  4118a3:	cmp    esp,DWORD PTR [edi]
  4118a5:	test   eax,0x95271342
  4118aa:	add    al,0xc
  4118ac:	fcos   
  4118ae:	mov    al,0xd
  4118b0:	inc    ecx
  4118b1:	arpl   WORD PTR [ecx-0xebff86b],ax
  4118b7:	stos   BYTE PTR es:[edi],al
  4118b8:	test   eax,0x741bcbcf
  4118bd:	sbb    al,cl
  4118bf:	jne    0x411865
  4118c1:	jb     0x411872
  4118c3:	push   0x45
  4118c5:	dec    ebx
  4118c6:	scas   al,BYTE PTR es:[edi]
  4118c7:	outs   dx,DWORD PTR ds:[esi]
  4118c8:	ucomiss xmm2,xmm1
  4118cb:	cmp    edx,ecx
  4118cd:	nop
  4118ce:	xchg   ecx,eax
  4118cf:	outs   dx,BYTE PTR ds:[esi]
  4118d0:	inc    edx
  4118d1:	mov    eax,ds:0x49f2212c
  4118d6:	(bad)  
  4118d7:	jl     0x4118a3
  4118d9:	or     eax,0xda034735
  4118de:	out    0xa5,al
  4118e0:	or     BYTE PTR [eax+esi*4-0x7baf7dd7],bh
  4118e7:	aam    0x2
  4118e9:	lods   eax,DWORD PTR ds:[esi]
  4118ea:	int3   
  4118eb:	lds    eax,FWORD PTR [ebp+0x1e]
  4118ee:	or     BYTE PTR [edx+eax*2-0x1c73fa17],dh
  4118f5:	mov    dl,0x89
  4118f7:	jge    0x4118fe
  4118f9:	xor    DWORD PTR [edi+esi*4+0x5b7c887c],edx
  411900:	mov    WORD PTR [eax],ss
  411902:	fbld   TBYTE PTR [eax]
  411904:	test   BYTE PTR [ebp+0x34566c9a],bh
  41190a:	in     al,0x27
  41190c:	pop    es
  41190d:	xor    ah,bh
  41190f:	xor    al,0xdc
  411911:	das    
  411912:	xor    BYTE PTR [ecx-0x3c],al
  411915:	dec    esp
  411916:	add    al,0xe
  411918:	stos   BYTE PTR es:[edi],al
  411919:	xorps  xmm2,XMMWORD PTR [edi+0x3f]
  41191d:	fidiv  DWORD PTR [ebx-0x43]
  411920:	(bad)  
  411921:	mov    ds:0xd1d6023,eax
  411926:	add    eax,0x517658e3
  41192b:	mov    ebp,0xdf26a985
  411930:	test   BYTE PTR [esp+ebp*8-0x7e7cf4a2],cl
  411937:	sbb    eax,0x19e5a0dd
  41193c:	sub    DWORD PTR [edx+0xe],esi
  41193f:	cs icebp 
  411941:	and    al,0xdf
  411943:	or     esp,DWORD PTR [edx-0x1]
  411946:	sub    al,0xfe
  411948:	call   DWORD PTR ds:0x52238b99
  41194e:	jmp    FWORD PTR [esi]
  411950:	fnsave [esi+0x60]
  411953:	ss jecxz 0x4118f3
  411956:	and    DWORD PTR [esi+0x467a0d38],ebp
  41195c:	test   ebp,edi
  41195e:	cmp    eax,0xe7b0ba8
  411963:	dec    esi
  411964:	xor    BYTE PTR [ebx],bh
  411966:	shld   DWORD PTR [eax],esi,cl
  411969:	cmp    eax,0xee0248bf
  41196e:	aam    0x10
  411970:	es mov dh,0x8f
  411973:	ror    DWORD PTR [ecx+edi*2],0x88
  411977:	out    0x99,eax
  411979:	xchg   ecx,eax
  41197a:	int    0x3f
  41197c:	lock mov ch,0xda
  41197f:	int3   
  411980:	xchg   ebp,eax
  411981:	push   0x93d4785
  411986:	std    
  411987:	popa   
  411988:	or     BYTE PTR [edi-0x3a7ded90],cl
  41198e:	(bad)  
  41198f:	push   ds
  411990:	inc    esp
  411991:	dec    esi
  411992:	xchg   BYTE PTR [edi-0x1f],ah
  411995:	inc    ebx
  411996:	xor    BYTE PTR [edx],0xf6
  411999:	dec    edx
  41199a:	sti    
  41199b:	call   0x7f3a1b22
  4119a0:	sbb    al,0x86
  4119a2:	add    BYTE PTR ds:0x26a5e28d,bh
  4119a8:	dec    esi
  4119a9:	add    eax,0x8feb7f04
  4119ae:	enter  0xc122,0xb8
  4119b2:	das    
  4119b3:	int    0x85
  4119b5:	add    esi,DWORD PTR [ebp+0x1]
  4119b8:	inc    esp
  4119b9:	add    dl,0xf8
  4119bc:	inc    edx
  4119bd:	(bad)  
  4119be:	in     al,0x72
  4119c0:	add    ecx,DWORD PTR [ecx]
  4119c2:	mov    bh,0x5
  4119c4:	loop   0x4119e2
  4119c6:	lea    esi,[esi+0x49469e32]
  4119cc:	push   cs
  4119cd:	add    BYTE PTR [esi-0x3e],0xf5
  4119d1:	pop    eax
  4119d2:	and    eax,0x83f029b3
  4119d7:	inc    edi
  4119d8:	cmp    ecx,eax
  4119da:	mov    esi,DWORD PTR [ebp+0x5b]
  4119dd:	or     eax,0x80d86103
  4119e2:	adc    ch,cl
  4119e4:	aad    0x43
  4119e6:	push   cs
  4119e7:	outs   dx,BYTE PTR ds:[esi]
  4119e8:	repnz stos BYTE PTR es:[edi],al
  4119ea:	cli    
  4119eb:	dec    edx
  4119ec:	mov    edx,0x2c1643e4
  4119f1:	or     DWORD PTR [eax+0x17],ebx
  4119f4:	addr16 retf 
  4119f6:	and    al,0xcf
  4119f8:	cmp    bh,BYTE PTR [ecx]
  4119fa:	fst    QWORD PTR [ecx+0x52]
  4119fd:	push   0xf22fbb1e
  411a02:	les    edx,FWORD PTR [ebx+0x432a691b]
  411a08:	stos   BYTE PTR es:[edi],al
  411a09:	inc    esi
  411a0a:	das    
  411a0b:	dec    esp
  411a0c:	add    esp,DWORD PTR ds:0xcb2eafe3
  411a12:	xlat   BYTE PTR ds:[ebx]
  411a13:	retf   0x5ac0
  411a16:	(bad)  
  411a17:	mov    esi,0xec3d42cd
  411a1c:	das    
  411a1d:	stc    
  411a1e:	push   ds
  411a1f:	fnstsw WORD PTR [ebp+0x72d0230e]
  411a25:	in     eax,0xb6
  411a27:	pushf  
  411a28:	sub    DWORD PTR [eax+0x19720325],0x6fab4271
  411a32:	inc    ecx
  411a33:	push   ds
  411a34:	dec    edx
  411a35:	ret    
  411a36:	cs loope 0x411a47
  411a39:	test   BYTE PTR [eax-0x2a],bh
  411a3c:	jno    0x411a80
  411a3e:	inc    eax
  411a3f:	pminsw mm7,QWORD PTR [ebp+0x6d8d4cbf]
  411a46:	dec    edx
  411a47:	outs   dx,BYTE PTR ds:[esi]
  411a48:	mov    esi,0xc11841d9
  411a4d:	and    BYTE PTR [edi],cl
  411a4f:	or     BYTE PTR [ebx],al
  411a51:	dec    eax
  411a52:	addr16 jp 0x411aa0
  411a55:	cld    
  411a56:	sbb    DWORD PTR [esi],ecx
  411a58:	jb     0x411a04
  411a5a:	repz jmp 0x83b6b14b
  411a60:	lea    eax,[ecx+eax*4]
  411a63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a64:	popa   
  411a65:	or     al,0x12
  411a67:	mov    esp,0xa966e89c
  411a6c:	lds    eax,FWORD PTR [ecx]
  411a6e:	std    
  411a6f:	repz pop ecx
  411a71:	or     esi,DWORD PTR [edx-0x30bd5f0b]
  411a77:	shr    BYTE PTR [ecx+0x1b],0x43
  411a7b:	push   0xb6ddd5a3
  411a80:	call   0xf68b:0x35944f10
  411a87:	add    bl,dh
  411a89:	das    
  411a8a:	repz into 
  411a8c:	xor    al,0xa
  411a8e:	enter  0x5cf9,0xe
  411a92:	pop    ebx
  411a93:	iret   
  411a94:	dec    ebx
  411a95:	(bad)  
  411a96:	popa   
  411a97:	push   es
  411a98:	push   es
  411a99:	xchg   BYTE PTR [ebx+0x27e4f734],bl
  411a9f:	test   BYTE PTR [eax+0x36],cl
  411aa2:	cmp    BYTE PTR [edx],cl
  411aa4:	cmp    DWORD PTR [ebp+0x6],ebx
  411aa7:	or     esp,DWORD PTR [edx]
  411aa9:	fnstsw WORD PTR [edi+0x14]
  411aac:	inc    edi
  411aad:	(bad)  
  411aae:	cdq    
  411aaf:	cli    
  411ab0:	cld    
  411ab1:	mov    ds:0xa7054c0b,al
  411ab6:	add    esi,ebx
  411ab8:	pop    ss
  411ab9:	in     eax,dx
  411aba:	int    0x2c
  411abc:	jg     0x411aa0
  411abe:	fcmovnbe st,st(4)
  411ac0:	sub    al,bl
  411ac2:	cmp    BYTE PTR ds:0x702e1a05,0x40
  411ac9:	jns    0x411b24
  411acb:	shl    BYTE PTR [ebx+0x26565a14],0x75
  411ad2:	mov    ch,0x4b
  411ad4:	add    edi,ebp
  411ad6:	mov    ecx,0xee69c1e0
  411adb:	inc    edx
  411adc:	mov    ebx,0x6798eb8a
  411ae1:	lahf   
  411ae2:	mov    esi,0x584ae742
  411ae7:	cmp    ecx,DWORD PTR ds:0x2bf68716
  411aed:	sbb    BYTE PTR [ebp+0x439afafa],ah
  411af3:	push   eax
  411af4:	stc    
  411af5:	or     ah,BYTE PTR [edi+0x6b21d31c]
  411afb:	jmp    0x411ae7
  411afd:	push   edi
  411afe:	pop    eax
  411aff:	inc    ecx
  411b00:	mov    edx,0x9e4b5ff8
  411b05:	jae    0x411ae1
  411b07:	xchg   esp,eax
  411b08:	sub    al,0xbf
  411b0a:	or     eax,0x6990b564
  411b0f:	sbb    ch,BYTE PTR [edi]
  411b11:	dec    edi
  411b12:	push   edx
  411b13:	xchg   esi,eax
  411b14:	and    bl,BYTE PTR [ecx-0xc]
  411b17:	push   cs
  411b18:	mov    ecx,0x19a808e8
  411b1d:	pop    esi
  411b1e:	sub    eax,0xcf20d512
  411b23:	adc    ecx,eax
  411b25:	xchg   esp,eax
  411b26:	xor    al,0x78
  411b28:	fwait
  411b29:	pushf  
  411b2a:	mov    bl,BYTE PTR [ecx]
  411b2c:	mov    ?,WORD PTR [ecx+ebp*1+0x1f9707b9]
  411b33:	int    0x15
  411b35:	scas   eax,DWORD PTR es:[edi]
  411b36:	adc    eax,DWORD PTR [edx+0x1e]
  411b39:	and    esi,DWORD PTR [eax-0x41b57700]
  411b3f:	sub    BYTE PTR [ecx],bl
  411b41:	dec    ecx
  411b42:	dec    ecx
  411b43:	in     al,0x22
  411b45:	adc    ebx,DWORD PTR [esi]
  411b47:	push   ebp
  411b48:	(bad)
  411b4b:	dec    ebp
  411b4c:	(bad)  
  411b4d:	adc    eax,0x1cbe2b40
  411b52:	adc    eax,0x5af48789
  411b57:	cmp    edx,esi
  411b59:	add    BYTE PTR [ecx],dl
  411b5b:	sub    eax,0xf1c3d16
  411b60:	sub    dl,ch
  411b62:	mov    ds,WORD PTR [ecx]
  411b64:	dec    eax
  411b65:	div    edx
  411b67:	dec    ebp
  411b68:	mov    edi,0x12dc295a
  411b6d:	xchg   edx,eax
  411b6e:	jb     0x411af7
  411b70:	fstp   TBYTE PTR [eax]
  411b72:	inc    edi
  411b73:	jb     0x411afb
  411b75:	das    
  411b76:	cld    
  411b77:	jmp    0xdb99f492
  411b7c:	mov    al,ds:0xbdfe2f78
  411b81:	dec    edx
  411b82:	and    eax,0xb80b6a20
  411b87:	ds mov edi,0x12422e18
  411b8d:	add    ebp,DWORD PTR [ebp+0x2a]
  411b90:	(bad)  
  411b91:	fld    DWORD PTR [edx]
  411b93:	xor    eax,DWORD PTR [esi-0x27]
  411b96:	mov    esi,DWORD PTR [ebp-0x2eadf3ba]
  411b9c:	mov    bh,0x2e
  411b9e:	mov    edi,DWORD PTR [ecx]
  411ba0:	cmp    BYTE PTR [ebp+0x6e],al
  411ba3:	iret   
  411ba4:	adc    DWORD PTR [edx-0x7c],eax
  411ba7:	and    ecx,eax
  411ba9:	and    BYTE PTR [edx],0x51
  411bac:	retf   
  411bad:	mov    cl,0x5f
  411baf:	xor    eax,0x7b831f2b
  411bb4:	hlt    
  411bb5:	sub    edi,DWORD PTR [ebx-0x69400d83]
  411bbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bbc:	add    al,0x2c
  411bbe:	enter  0x94f5,0x22
  411bc2:	adc    DWORD PTR [edx-0x6d],0x61
  411bc6:	ret    0xf444
  411bc9:	pop    edx
  411bca:	call   0x4e194980
  411bcf:	repnz mov edi,0xeb4c516f
  411bd5:	sbb    edx,DWORD PTR [eax]
  411bd7:	mov    bh,ch
  411bd9:	or     al,0xf
  411bdb:	and    ebx,DWORD PTR [ebx+0x16]
  411bde:	or     ecx,DWORD PTR [esp-0x3a]
  411be2:	cmp    al,0x98
  411be4:	and    ecx,DWORD PTR [esi+0x49cb6c1a]
  411bea:	adc    cl,al
  411bec:	cmp    dl,BYTE PTR ds:0x28c2d68
  411bf2:	adc    BYTE PTR [ecx-0x6],ah
  411bf5:	in     eax,0x19
  411bf7:	lds    edx,FWORD PTR [esi]
  411bf9:	clc    
  411bfa:	in     eax,dx
  411bfb:	pop    edi
  411bfc:	popa   
  411bfd:	cli    
  411bfe:	daa    
  411bff:	mov    eax,0x7abd046d
  411c04:	retf   0xf8fd
  411c07:	jle    0x411c2e
  411c09:	lods   al,BYTE PTR ds:[esi]
  411c0a:	inc    esi
  411c0b:	adc    BYTE PTR [esi],ch
  411c0d:	jle    0x411bd1
  411c0f:	or     edi,ebp
  411c11:	push   0xffffff84
  411c13:	imul   ebp,DWORD PTR [esi],0x39b8f210
  411c19:	push   ecx
  411c1a:	ret    
  411c1b:	lods   eax,DWORD PTR ds:[esi]
  411c1c:	pop    esi
  411c1d:	(bad)  
  411c1e:	push   cs
  411c1f:	js     0x411c97
  411c21:	sbb    bl,BYTE PTR [ebx+0x10083335]
  411c27:	in     al,0x77
  411c29:	push   esi
  411c2a:	stc    
  411c2b:	add    BYTE PTR [ecx+0x21e3d627],cl
  411c31:	sbb    dl,BYTE PTR ds:0xf4cba45d
  411c37:	mov    ah,0x5a
  411c39:	in     al,dx
  411c3a:	add    eax,esi
  411c3c:	add    bh,cl
  411c3e:	inc    edx
  411c3f:	jns    0x411c01
  411c41:	adc    eax,0xf77fa1e9
  411c46:	mov    WORD PTR [edi+0x752db38c],fs
  411c4c:	push   ecx
  411c4d:	xor    DWORD PTR [eax-0x80],ebx
  411c50:	lds    ecx,FWORD PTR [ebx]
  411c52:	dec    esi
  411c53:	outs   dx,BYTE PTR ds:[esi]
  411c54:	and    ch,BYTE PTR [eax+ebx*4-0x4d]
  411c58:	test   cl,dl
  411c5a:	push   edi
  411c5b:	cmp    DWORD PTR [ecx+0x1],esp
  411c5e:	and    ah,BYTE PTR [edx+0x24]
  411c61:	out    dx,eax
  411c62:	sub    DWORD PTR [edi],edi
  411c64:	stos   DWORD PTR es:[edi],eax
  411c65:	push   cs
  411c66:	and    DWORD PTR [esi+0x65],0x741302ac
  411c6d:	fild   WORD PTR [ebx+0x26]
  411c70:	outs   dx,DWORD PTR ds:[esi]
  411c71:	and    DWORD PTR [eax-0x6b],ebp
  411c74:	ins    DWORD PTR es:[edi],dx
  411c75:	sbb    al,0x0
  411c77:	or     BYTE PTR ds:0x26524e43,ch
  411c7d:	push   ss
  411c7e:	push   ds
  411c7f:	mov    eax,ds:0x11220e06
  411c84:	repz sbb ecx,ecx
  411c87:	aas    
  411c88:	enter  0x8303,0x6a
  411c8c:	adc    ch,dh
  411c8e:	jno    0x411cce
  411c90:	sbb    DWORD PTR [ecx-0x50],ebx
  411c93:	cs cld 
  411c95:	add    edx,DWORD PTR [ecx-0x5d]
  411c98:	ret    0xbc04
  411c9b:	cli    
  411c9c:	pop    ecx
  411c9d:	mov    dl,0xa7
  411c9f:	mov    fs,ebp
  411ca1:	int3   
  411ca2:	push   0xe369c17f
  411ca7:	aad    0xdd
  411ca9:	push   ecx
  411caa:	ins    BYTE PTR es:[edi],dx
  411cab:	repz cwde 
  411cad:	dec    edi
  411cae:	or     al,0x94
  411cb0:	mov    ds:0xf5c44851,al
  411cb5:	add    eax,0x5000b005
  411cba:	loop   0x411c54
  411cbc:	and    al,0x7c
  411cbe:	scas   al,BYTE PTR es:[edi]
  411cbf:	mov    edi,0x3a8c2162
  411cc4:	add    cl,al
  411cc6:	pop    edx
  411cc7:	push   es
  411cc8:	mov    cl,0x24
  411cca:	mul    ecx
  411ccc:	and    bl,BYTE PTR [eax]
  411cce:	mov    cl,0x2e
  411cd0:	aad    0x5c
  411cd2:	sahf   
  411cd3:	pop    ds
  411cd4:	or     eax,0x6a776040
  411cd9:	inc    esi
  411cda:	jo     0x411cd2
  411cdc:	out    0x5f,eax
  411cde:	jae    0x411d12
  411ce0:	arpl   WORD PTR [eax+0x0],sp
  411ce3:	inc    ebp
  411ce4:	jle    0x411d2b
  411ce6:	push   0x71
  411ce8:	jle    0x411cb7
  411cea:	iret   
  411ceb:	mov    bh,0xca
  411ced:	inc    eax
  411cee:	push   0x6b
  411cf0:	imul   ebp,esp,0xffffff90
  411cf3:	and    ebx,DWORD PTR ds:0x8989a1f8
  411cf9:	jmp    0x411d2c
  411cfb:	xchg   edx,eax
  411cfc:	pop    ds
  411cfd:	push   ds
  411cfe:	and    ch,ah
  411d00:	call   0x89d6:0x14d59ce1
  411d07:	(bad)  
  411d08:	fstp   DWORD PTR [ebx]
  411d0a:	(bad)  
  411d0b:	push   edi
  411d0c:	and    dh,BYTE PTR [ebx]
  411d0e:	cmp    al,0xc1
  411d10:	es add al,0x40
  411d13:	mov    bh,0x99
  411d15:	push   ds
  411d16:	and    DWORD PTR [ebp-0x5adadde9],edi
  411d1c:	dec    edi
  411d1d:	inc    esi
  411d1e:	push   ss
  411d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d20:	mov    ?,edi
  411d22:	popf   
  411d23:	cmp    bl,BYTE PTR [ebx-0x6de700ce]
  411d29:	and    al,BYTE PTR [ecx+ecx*1]
  411d2c:	add    DWORD PTR [ebx-0x7cb9dbac],ecx
  411d32:	xor    BYTE PTR [ecx+esi*2+0x6b797d11],al
  411d39:	xchg   DWORD PTR [ecx-0x67],ebx
  411d3c:	adc    al,0x6a
  411d3e:	xor    BYTE PTR [edi],bh
  411d40:	aas    
  411d41:	pusha  
  411d42:	daa    
  411d43:	sub    bl,BYTE PTR [edi]
  411d45:	inc    ebp
  411d46:	push   ebp
  411d47:	ret    0x372f
  411d4a:	push   edi
  411d4b:	not    BYTE PTR [ebx]
  411d4d:	dec    esp
  411d4e:	and    BYTE PTR [ecx],dl
  411d50:	inc    ebp
  411d51:	dec    ebp
  411d52:	call   0x2374:0x1934b9a9
  411d59:	push   ds
  411d5a:	cmp    DWORD PTR [eax+0x5a],ebp
  411d5d:	push   ebx
  411d5e:	cs inc esp
  411d60:	lods   al,BYTE PTR ds:[esi]
  411d61:	push   ss
  411d62:	and    ecx,DWORD PTR [esi+0x10369828]
  411d68:	cmp    ecx,DWORD PTR [edx]
  411d6a:	arpl   WORD PTR [ebx+ebp*1],dx
  411d6d:	repz pop esp
  411d6f:	and    al,0x7d
  411d71:	(bad)  
  411d73:	pop    ss
  411d74:	loope  0x411dc2
  411d76:	add    eax,0x47b3060c
  411d7b:	add    ah,BYTE PTR ds:0x959c0d02
  411d81:	sbb    al,ch
  411d83:	std    
  411d84:	or     BYTE PTR [ebp-0x93e17d],ch
  411d8a:	sbb    al,0x77
  411d8c:	jb     0x411d84
  411d8e:	and    bh,BYTE PTR [ebp+0x78]
  411d91:	sti    
  411d92:	sub    eax,0x22e87358
  411d97:	div    BYTE PTR [ebp-0x17]
  411d9a:	sub    ch,BYTE PTR [esi+0x3c]
  411d9d:	inc    esp
  411d9e:	call   0xe1b291cc
  411da3:	and    ebx,DWORD PTR [eax+0x3a]
  411da6:	sbb    eax,0x35c027d1
  411dab:	add    eax,0x7fbd21d7
  411db0:	shl    DWORD PTR [edi],1
  411db2:	js     0x411e2a
  411db4:	frstor [edi+eiz*8]
  411db7:	xor    al,0x3f
  411db9:	(bad)  
  411dba:	sub    edi,eax
  411dbc:	xor    al,BYTE PTR [ecx]
  411dbe:	int    0x23
  411dc0:	and    eax,0xba21c37d
  411dc5:	xor    bh,BYTE PTR [ecx+ecx*8]
  411dc8:	sub    DWORD PTR [ecx],esi
  411dca:	ds or  al,0xb7
  411dcd:	sub    esi,DWORD PTR [ecx+0x27b1253e]
  411dd3:	sub    DWORD PTR [esi-0x43],esi
  411dd6:	and    BYTE PTR [ecx+0x72],ah
  411dd9:	mov    dl,0x22
  411ddb:	xor    edi,DWORD PTR [esi]
  411ddd:	pop    fs
  411ddf:	daa    
  411de0:	jecxz  0x411e1d
  411de2:	xor    BYTE PTR [esi+0xd3d2021],ch
  411de8:	mov    ds:0x253a0929,al
  411ded:	scas   al,BYTE PTR es:[edi]
  411dee:	and    edx,DWORD PTR [ebx]
  411df0:	fadd   st,st(7)
  411df2:	popf   
  411df3:	inc    esp
  411df4:	call   0x44d28116
  411df9:	push   edi
  411dfa:	punpckhdq mm2,QWORD PTR [edx+0x6d30a548]
  411e01:	xchg   esi,eax
  411e02:	inc    edi
  411e03:	cmp    eax,0x438a6200
  411e08:	shr    BYTE PTR [ebx],cl
  411e0a:	outs   dx,BYTE PTR ds:[esi]
  411e0b:	mov    ecx,DWORD PTR [ebx+0x45]
  411e0e:	dec    ecx
  411e0f:	data16 mov BYTE PTR [edx+0x57],al
  411e13:	and    al,0x62
  411e15:	add    BYTE PTR [edi+0x11],0x6
  411e19:	gs jno 0x411e65
  411e1c:	(bad)  
  411e1d:	aaa    
  411e1e:	pusha  
  411e1f:	jg     0x411e66
  411e21:	inc    eax
  411e22:	pop    es
  411e23:	addr16 je 0x411e67
  411e26:	and    DWORD PTR [esi],edi
  411e28:	fs jl  0x411e7a
  411e2b:	add    DWORD PTR [ebx],ebx
  411e2d:	ins    BYTE PTR es:[edi],dx
  411e2e:	push   0x48
  411e30:	scas   eax,DWORD PTR es:[edi]
  411e31:	cmp    BYTE PTR [ebx-0x10],ah
  411e34:	or     ebp,DWORD PTR [ecx+0x1c]
  411e37:	loop   0x411e46
  411e39:	add    al,0x18
  411e3b:	and    al,cl
  411e3d:	xchg   ah,bh
  411e3f:	test   DWORD PTR [edi+edx*1+0x1fac1d35],edi
  411e46:	jae    0x411ec1
  411e48:	inc    edi
  411e49:	mov    ebx,0x1821b83f
  411e4e:	pop    ebx
  411e4f:	icebp  
  411e50:	pop    es
  411e51:	inc    esi
  411e52:	icebp  
  411e53:	mov    al,0x1f
  411e55:	jno    0x411e69
  411e57:	clc    
  411e58:	add    al,0x43
  411e5a:	sbb    ebx,edx
  411e5c:	and    dh,BYTE PTR [ebx+0x7e5d1078]
  411e62:	jmp    0x411eb8
  411e64:	push   edi
  411e65:	mov    esi,DWORD PTR [edi+esi*2-0x73]
  411e69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e6a:	pop    esp
  411e6b:	inc    edi
  411e6c:	add    ebx,DWORD PTR [edi-0xb]
  411e6f:	or     al,bl
  411e71:	fwait
  411e72:	mov    ?,WORD PTR [eax-0x3c]
  411e75:	dec    ecx
  411e76:	jg     0x411e79
  411e78:	jns    0x411ecf
  411e7a:	mov    bh,bl
  411e7c:	and    al,0x29
  411e7e:	push   ebx
  411e7f:	jmp    0xb20b:0xf57c05bc
  411e86:	push   ds
  411e87:	sbb    al,0x2a
  411e89:	cli    
  411e8a:	je     0x411ebd
  411e8c:	sbb    al,BYTE PTR [edx+edi*2]
  411e8f:	mov    ebx,es
  411e91:	loope  0x411efb
  411e93:	pop    edi
  411e94:	arpl   WORD PTR [ebx+0x22154eba],cx
  411e9a:	mov    esp,0x6d62784e
  411e9f:	jmp    DWORD PTR [edi-0x7af2da16]
  411ea5:	jo     0x411e91
  411ea7:	or     eax,0x35195ab2
  411eac:	lock retf 
  411eae:	mov    cl,BYTE PTR [esi]
  411eb0:	pop    es
  411eb1:	jnp    0x411ec0
  411eb3:	jmp    0x411e73
  411eb5:	addr16 cmp BYTE PTR [bp+si+0x572],bh
  411ebb:	mov    bl,0x7d
  411ebd:	pop    ds
  411ebe:	adc    edi,DWORD PTR [edx+edx*4]
  411ec1:	mov    esp,0x8ac4b05d
  411ec6:	sbb    eax,DWORD PTR [eax-0x78a1be5b]
  411ecc:	into   
  411ecd:	out    0xca,eax
  411ecf:	and    al,0x4d
  411ed1:	mov    esp,0x14be4305
  411ed6:	sbb    al,0xc0
  411ed8:	inc    ebx
  411ed9:	fcom   st(7)
  411edb:	jns    0x411edd
  411edd:	mov    dl,0x87
  411edf:	das    
  411ee0:	retf   0x8e09
  411ee3:	loop   0x411ee9
  411ee5:	pop    es
  411ee6:	adc    eax,0xaf472b
  411eeb:	xor    ecx,0x5b4d9f36
  411ef1:	in     al,0x7b
  411ef3:	xor    eax,DWORD PTR ds:0x8411760b
  411ef9:	cli    
  411efa:	repz jp 0x411f15
  411efd:	cmp    DWORD PTR [edi],eax
  411eff:	shl    BYTE PTR [esi-0x7959b4ef],0x38
  411f06:	int    0x40
  411f08:	dec    edi
  411f09:	stos   BYTE PTR es:[edi],al
  411f0a:	out    0x1b,al
  411f0c:	loope  0x411f04
  411f0e:	fcmovnb st,st(2)
  411f10:	sub    ah,bh
  411f12:	(bad)
  411f15:	icebp  
  411f16:	push   edx
  411f17:	xchg   BYTE PTR [ebx-0x64],al
  411f1a:	ja     0x411f98
  411f1c:	push   ds
  411f1d:	sub    al,0xe5
  411f1f:	test   DWORD PTR [esi+ebx*1],0x2aeb8a16
  411f26:	push   ss
  411f27:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  411f29:	or     esi,DWORD PTR [edi]
  411f2b:	add    al,0x40
  411f2d:	dec    BYTE PTR [ebx+0x758ff329]
  411f33:	add    al,0x3e
  411f35:	rol    BYTE PTR ds:0xc123c98d,1
  411f3b:	lea    ecx,[eax+0x28537c54]
  411f41:	sub    BYTE PTR [ebx],0x29
  411f44:	adc    eax,0xef4fdf8a
  411f49:	gs jno 0x411f73
  411f4c:	xor    DWORD PTR [ebp+0x51f266b],0xffffffe2
  411f53:	adc    al,0xe
  411f55:	jbe    0x411f5a
  411f57:	push   ebp
  411f58:	mov    ecx,0x5b882a49
  411f5d:	out    dx,al
  411f5e:	or     BYTE PTR [eax-0x5cb91caa],bh
  411f64:	or     eax,0x65e7cd3
  411f69:	xchg   esi,eax
  411f6a:	in     al,0xe0
  411f6c:	test   DWORD PTR [edi+0x1ad0178],edx
  411f72:	cli    
  411f73:	fist   WORD PTR [edx-0x50]
  411f76:	stos   BYTE PTR es:[edi],al
  411f77:	out    0xb3,eax
  411f79:	or     DWORD PTR [eax+0x519aafca],ecx
  411f7f:	mov    edi,ebx
  411f81:	cmp    DWORD PTR [ebx],0xfffffff3
  411f84:	xor    dh,bh
  411f86:	mov    ch,0x8e
  411f88:	retf   0xc854
  411f8b:	das    
  411f8c:	inc    ebp
  411f8d:	inc    eax
  411f8e:	pop    edx
  411f8f:	add    ah,bl
  411f91:	in     eax,0xa9
  411f93:	mov    dh,0xef
  411f95:	inc    ebp
  411f96:	add    BYTE PTR [ebx-0x2fca57f4],cl
  411f9c:	leave  
  411f9d:	cmc    
  411f9e:	hlt    
  411f9f:	enter  0x1a23,0xb9
  411fa3:	loopne 0x411fbd
  411fa5:	not    DWORD PTR [eax]
  411fa7:	push   ss
  411fa8:	jne    0x411fb6
  411faa:	mov    ch,0x21
  411fac:	mov    ebp,DWORD PTR [ebx]
  411fae:	out    0x4a,eax
  411fb0:	not    DWORD PTR [ebx+ebx*8-0x16]
  411fb4:	and    esi,DWORD PTR ds:0x9484d14b
  411fba:	add    BYTE PTR [ecx-0x43be3972],cl
  411fc0:	add    al,0x0
  411fc2:	cld    
  411fc3:	repz xchg ch,dl
  411fc6:	dec    edi
  411fc7:	mov    dl,0xa8
  411fc9:	xor    esp,DWORD PTR [ecx+0xc784c0f]
  411fcf:	inc    edx
  411fd0:	jbe    0x411fcb
  411fd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fd3:	xor    al,0x1a
  411fd5:	jge    0x411f9c
  411fd7:	xor    ah,ch
  411fd9:	jmp    0xfd67e631
  411fde:	pminsw mm1,QWORD PTR [ecx]
  411fe1:	jne    0x412031
  411fe3:	hlt    
  411fe4:	add    eax,DWORD PTR [edi+eax*2]
  411fe7:	jns    0x411fe5
  411fe9:	loopne 0x411fa1
  411feb:	adc    DWORD PTR [edi],ebp
  411fed:	cmp    ebx,DWORD PTR [eax-0x7d7f3d0c]
  411ff3:	sbb    BYTE PTR [ecx+0x2aa32588],bl
  411ff9:	pop    esp
  411ffa:	lahf   
  411ffb:	or     DWORD PTR [edi],esp
  411ffd:	adc    eax,0x14d0901
  412002:	ss sbb edi,ebx
  412005:	jg     0x41200f
  412007:	cmc    
  412008:	jns    0x412011
  41200a:	fadd   QWORD PTR [eax-0x63756663]
  412010:	je     0x411fbd
  412012:	(bad)  
  412013:	femms  
  412015:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412016:	sar    DWORD PTR ss:[ecx+0x1d],1
  41201a:	push   ebx
  41201b:	jno    0x412074
  41201d:	dec    edi
  41201e:	sub    esp,DWORD PTR ds:0x8a2a5271
  412024:	or     DWORD PTR [esi-0x28f71bf4],ecx
  41202a:	xor    ch,al
  41202c:	icebp  
  41202d:	dec    esp
  41202e:	mov    ebx,DWORD PTR [edi+0x54]
  412031:	pop    ds
  412032:	inc    ecx
  412033:	out    dx,eax
  412034:	shl    DWORD PTR [ebp+eax*1+0x24f3db1],1
  41203b:	frstor [edx-0x58]
  41203e:	add    eax,0x558f2b
  412043:	icebp  
  412044:	pop    edi
  412045:	into   
  412046:	and    ch,BYTE PTR ds:0x3f06dc49
  41204c:	outs   dx,BYTE PTR ds:[esi]
  41204d:	push   es
  41204e:	inc    eax
  41204f:	and    ebx,DWORD PTR [edx]
  412051:	repz mov al,ds:0x262b2c46
  412057:	mul    DWORD PTR [ecx]
  412059:	mov    eax,ds:0xd62e918
  41205e:	cmp    BYTE PTR [edi-0x24],bh
  412061:	and    eax,0x20214641
  412066:	scas   al,BYTE PTR es:[edi]
  412067:	push   ds
  412068:	add    edx,esi
  41206a:	mov    al,0x26
  41206c:	(bad)  
  41206d:	sub    edi,ebp
  41206f:	xchg   DWORD PTR [esi],esi
  412071:	push   ds
  412072:	mov    cl,0x2f
  412074:	push   ds
  412075:	sbb    DWORD PTR [esi],eax
  412077:	gs ins BYTE PTR es:[edi],dx
  412079:	adc    bh,BYTE PTR ds:0xb928462d
  41207f:	lods   eax,DWORD PTR ss:[esi]
  412081:	(bad)
  412084:	mov    bh,BYTE PTR [edi-0x472da0fe]
  41208a:	and    dl,BYTE PTR [edi+ebx*1+0xf22db63]
  412091:	or     al,BYTE PTR [ebx+0x4e]
  412094:	or     cl,BYTE PTR [esi]
  412096:	jbe    0x412112
  412098:	dec    ebp
  412099:	or     cl,ch
  41209b:	in     eax,0x12
  41209d:	out    0x11,eax
  41209f:	(bad)  
  4120a0:	test   al,0xee
  4120a2:	add    BYTE PTR [esi],cl
  4120a4:	mov    ds:0x4611bd11,eax
  4120a9:	loopne 0x41211e
  4120ab:	and    DWORD PTR [edx],edi
  4120ad:	in     eax,dx
  4120ae:	(bad)  
  4120af:	pop    ebx
  4120b0:	jecxz  0x4120f3
  4120b2:	ja     0x41207f
  4120b4:	or     DWORD PTR [ebp+0x62bd1f96],ebx
  4120ba:	in     al,0xf1
  4120bc:	pop    edi
  4120bd:	push   eax
  4120be:	lahf   
  4120bf:	xchg   edi,eax
  4120c0:	adc    ah,dl
  4120c2:	mov    ebx,esp
  4120c4:	cmp    al,0xe
  4120c6:	hlt    
  4120c7:	jno    0x4120ee
  4120c9:	retf   
  4120ca:	icebp  
  4120cb:	push   es
  4120cc:	ss jmp 0xdbff9841
  4120d2:	inc    edi
  4120d3:	js     0x412105
  4120d5:	cmp    eax,0xa8147348
  4120da:	pmuludq mm7,QWORD PTR [ecx]
  4120dd:	xor    bl,BYTE PTR [eax]
  4120df:	shl    DWORD PTR [ebx+0x24],1
  4120e2:	mov    ecx,0x16785319
  4120e7:	push   edi
  4120e8:	xor    DWORD PTR ds:0xf7348d6,edx
  4120ee:	leave  
  4120ef:	call   0x8ee:0x97983bf2
  4120f6:	xchg   ecx,eax
  4120f7:	and    bh,BYTE PTR [edx]
  4120f9:	inc    esi
  4120fa:	rcl    DWORD PTR [ebx],0xbb
  4120fd:	adc    BYTE PTR [esi-0x2381bbe9],bh
  412103:	cmp    eax,0x4463faf4
  412108:	and    al,0x48
  41210a:	push   ds
  41210b:	in     eax,dx
  41210c:	dec    ebx
  41210d:	pop    es
  41210e:	repz (bad) 
  412111:	data16 jne 0x412121
  412114:	or     eax,0x3fa11ce9
  412119:	and    eax,0x2def2073
  41211e:	in     al,0x2b
  412120:	cdq    
  412121:	xchg   esi,eax
  412122:	ja     0x41213d
  412124:	ret    0xe356
  412127:	out    0xe8,eax
  412129:	mov    DWORD PTR [esi],ecx
  41212b:	into   
  41212c:	sbb    eax,DWORD PTR [edi]
  41212e:	sahf   
  41212f:	push   es
  412130:	dec    esp
  412131:	add    BYTE PTR es:[edi],cl
  412134:	add    ecx,ebp
  412136:	test   al,cl
  412138:	test   eax,0xdeeac638
  41213d:	fs sbb bh,ch
  412140:	es jmp 0x41212d
  412143:	inc    dh
  412145:	scas   al,BYTE PTR es:[edi]
  412146:	mov    esp,0x8a468d1b
  41214b:	inc    eax
  41214c:	imul   ecx,edx,0x47
  41214f:	mov    dl,0xbc
  412151:	jns    0x4120d5
  412153:	aaa    
  412154:	push   esp
  412155:	test   DWORD PTR [edi],0x25a20cf8
  41215b:	jl     0x41218b
  41215d:	mov    DWORD PTR [ebx],esi
  41215f:	mov    BYTE PTR [ecx],ch
  412161:	push   es
  412162:	sub    DWORD PTR [edi],eax
  412164:	and    eax,0x3c36bc92
  412169:	into   
  41216a:	cmp    ah,BYTE PTR [eax]
  41216c:	xor    al,0xc0
  41216e:	dec    edi
  41216f:	leave  
  412170:	aaa    
  412171:	ret    0xcb6a
  412174:	xor    al,0x95
  412176:	cli    
  412177:	dec    esi
  412178:	ret    
  412179:	test   edx,edx
  41217b:	jecxz  0x4121be
  41217d:	inc    eax
  41217e:	int    0xc1
  412180:	inc    ebp
  412181:	xlat   BYTE PTR ds:[ebx]
  412182:	js     0x41219c
  412184:	or     cl,BYTE PTR [edi+ebx*8+0x18c8bf72]
  41218b:	into   
  41218c:	mov    DWORD PTR [ebx-0x723f827b],edi
  412192:	jo     0x4121ef
  412194:	icebp  
  412195:	mov    ebp,0xd0b0598
  41219a:	imul   edi,DWORD PTR [ebx+0x1fae722e],0x20ab9d18
  4121a4:	xchg   ecx,eax
  4121a5:	cmp    DWORD PTR [eax+edi*4],ebp
  4121a8:	scas   al,BYTE PTR es:[edi]
  4121a9:	cmp    eax,0xff20cfd
  4121ae:	int    0xff
  4121b0:	out    0x97,al
  4121b2:	push   ebx
  4121b3:	jmp    0xc4a0:0x120f3faa
  4121ba:	cs pop edi
  4121bc:	enter  0x49ea,0xf9
  4121c0:	sub    DWORD PTR [eax],ebp
  4121c2:	in     al,dx
  4121c3:	add    eax,0x8f71ca2d
  4121c8:	out    dx,eax
  4121c9:	push   ebp
  4121ca:	aaa    
  4121cb:	sub    DWORD PTR [ebx],ebp
  4121cd:	pop    ds
  4121ce:	xchg   DWORD PTR [ebp+0x1259e2ed],eax
  4121d4:	push   cs
  4121d5:	and    al,bh
  4121d7:	cmc    
  4121d8:	jae    0x412244
  4121da:	push   cs
  4121db:	and    ebp,DWORD PTR [ebx+ecx*2-0x6e8fd273]
  4121e2:	inc    ebp
  4121e3:	fld    QWORD PTR [esi-0xe1db82c]
  4121e9:	out    0x67,al
  4121eb:	mov    bl,BYTE PTR [ebp-0x35]
  4121ee:	pop    esi
  4121ef:	int3   
  4121f0:	sbb    al,0xd
  4121f2:	sti    
  4121f3:	jp     0x4121e0
  4121f5:	gs sti 
  4121f7:	dec    esp
  4121f8:	enter  0x2220,0xe1
  4121fc:	sbb    esi,ebp
  4121fe:	sub    edx,ebp
  412200:	inc    esp
  412201:	sbb    BYTE PTR [edi+0x4e2b2813],dl
  412207:	and    edx,DWORD PTR [edx-0x72]
  41220a:	jecxz  0x412259
  41220c:	ins    BYTE PTR es:[edi],dx
  41220d:	stos   DWORD PTR es:[edi],eax
  41220e:	fucomi st,st(0)
  412210:	inc    esp
  412211:	dec    ebp
  412212:	es enter 0x1abd,0xcb
  412217:	sub    BYTE PTR [esi+0x29c6f008],bh
  41221d:	mov    edi,?
  41221f:	sub    BYTE PTR [eax+0x752f03f5],dh
  412225:	shl    BYTE PTR [eax],1
  412227:	aaa    
  412228:	out    0xf9,eax
  41222a:	mov    esi,0x81424209
  41222f:	cmp    BYTE PTR [esi+0x19c7bcf4],ah
  412235:	add    BYTE PTR [edx-0x76aee77e],ch
  41223b:	loopne 0x412278
  41223d:	mov    WORD PTR [eax+0x5ac94824],es
  412243:	out    0x5a,al
  412245:	(bad)  
  412246:	lods   eax,DWORD PTR ds:[esi]
  412247:	retf   
  412248:	(bad)  
  412249:	ficom  DWORD PTR ds:0x161081d5
  41224f:	je     0x412255
  412251:	not    DWORD PTR [eax]
  412253:	mov    ?,eax
  412255:	inc    esp
  412256:	lods   eax,DWORD PTR ds:[esi]
  412257:	ja     0x41224d
  412259:	in     eax,dx
  41225a:	add    eax,0xf7dd42d5
  41225f:	cmp    BYTE PTR [ecx+0x7377ecc3],cl
  412265:	adc    BYTE PTR [esi+ecx*2+0x26],bl
  412269:	sub    eax,DWORD PTR [edx+ebx*1-0x73]
  41226d:	add    DWORD PTR [ebp+0x1f],eax
  412270:	sub    bh,0x73
  412273:	xor    eax,DWORD PTR [ebp-0x32089184]
  412279:	pop    ebp
  41227a:	sub    ch,BYTE PTR [ebp-0x4d]
  41227d:	call   0x6bdb9aa1
  412282:	repnz cwde 
  412284:	adc    ah,cl
  412286:	dec    esi
  412287:	add    DWORD PTR [ebx],0x53
  41228a:	ja     0x412291
  41228c:	mov    ecx,0xa7f3c169
  412291:	mov    eax,edi
  412293:	jb     0x41229c
  412295:	imul   edi,DWORD PTR [ebp+0x4485a667],0x58f5d017
  41229f:	cmp    bh,BYTE PTR [ebp+edi*1-0x206a04b9]
  4122a6:	push   ds
  4122a7:	push   cs
  4122a8:	sub    cx,WORD PTR fs:[ebp*1-0x73c6f383]
  4122b1:	dec    ebp
  4122b2:	in     eax,dx
  4122b3:	xor    ebp,DWORD PTR [ecx+ebp*1-0x5b8d00d9]
  4122ba:	add    al,0x34
  4122bc:	dec    edi
  4122bd:	add    BYTE PTR [ecx+0x28],dh
  4122c0:	popw   ds
  4122c2:	dec    BYTE PTR [edx+0xf]
  4122c5:	inc    ebp
  4122c6:	lahf   
  4122c7:	sbb    bh,bl
  4122c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122ca:	mov    DWORD PTR [eax],ecx
  4122cc:	mov    BYTE PTR [ebp+0x23],bh
  4122cf:	enter  0x73d,0x49
  4122d3:	inc    eax
  4122d4:	push   0xbb4fc51a
  4122d9:	adc    eax,0xdb16c1eb
  4122de:	sub    BYTE PTR [edx+0x25],cl
  4122e1:	mov    dh,0xf3
  4122e3:	pcmpgtw mm0,mm5
  4122e6:	sbb    BYTE PTR [edx],ah
  4122e8:	adc    ch,al
  4122ea:	push   DWORD PTR [edx+0x2c09f543]
  4122f0:	out    dx,eax
  4122f1:	outs   dx,DWORD PTR ds:[esi]
  4122f2:	jmp    0xf01bb327
  4122f7:	push   cs
  4122f8:	daa    
  4122f9:	cdq    
  4122fa:	aaa    
  4122fb:	(bad)  
  4122fc:	cli    
  4122fd:	(bad)  
  4122fe:	sub    BYTE PTR [esi+eiz*4],al
  412301:	adc    cl,0xf8
  412304:	xchg   esp,eax
  412305:	inc    edx
  412306:	fiadd  WORD PTR [edx-0x9552e87]
  41230c:	js     0x412312
  41230e:	inc    ecx
  41230f:	jb     0x41231a
  412311:	xlat   BYTE PTR ds:[ebx]
  412312:	lahf   
  412313:	mov    dh,0xf
  412315:	loop   0x4122da
  412317:	fnsave [edx-0x1e]
  41231a:	mov    dh,BYTE PTR [ebx+edx*2+0x8]
  41231e:	loope  0x412353
  412320:	or     DWORD PTR [edx-0x1fe6bb78],edx
  412326:	sbb    dh,0xc8
  412329:	mov    esi,0x2e00013
  41232e:	outs   dx,DWORD PTR ds:[esi]
  41232f:	pop    es
  412330:	cmp    eax,0x4ec1c80
  412335:	push   0xffffffee
  412337:	xor    dl,al
  412339:	test   eax,0x79f9bc2e
  41233e:	or     eax,0xc578052f
  412343:	pop    DWORD PTR [ebp-0x6df706ce]
  412349:	cmp    eax,0xf280073d
  41234e:	sbb    al,BYTE PTR [ebx]
  412350:	jns    0x412375
  412352:	xor    DWORD PTR [ebx-0xa],0x23c43713
  412359:	into   
  41235a:	dec    esp
  41235b:	or     ebx,esp
  41235d:	dec    eax
  41235e:	push   ss
  41235f:	jno    0x41236b
  412361:	neg    BYTE PTR [eax]
  412363:	push   cs
  412364:	adc    DWORD PTR ds:0x13e4e278,edi
  41236a:	sbb    ah,BYTE PTR [ecx-0x33]
  41236d:	test   al,0x25
  41236f:	xor    al,0x6d
  412371:	popf   
  412372:	pop    ebp
  412373:	push   ecx
  412374:	mov    ebp,0x2d2b419b
  412379:	adc    DWORD PTR [eax],esp
  41237b:	mov    ds:0xf54bf0a2,eax
  412380:	push   ebx
  412381:	or     esi,DWORD PTR [edx]
  412383:	fcmovnb st,st(4)
  412385:	loope  0x412347
  412387:	aam    0x8f
  412389:	or     al,BYTE PTR [edx-0x3dbaf4a8]
  41238f:	inc    esi
  412390:	or     ah,al
  412392:	mov    WORD PTR [edi],es
  412394:	and    DWORD PTR [esi],eax
  412396:	in     al,0xc4
  412398:	or     al,BYTE PTR [esi]
  41239a:	(bad)  
  41239b:	or     al,0x85
  41239d:	mov    dl,0x65
  41239f:	mov    eax,0xbd7b57f9
  4123a4:	lahf   
  4123a5:	ficom  DWORD PTR ds:0xf66ce30e
  4123ab:	cld    
  4123ac:	cmp    DWORD PTR [ebp-0x22],edi
  4123af:	add    eax,0x157f02fd
  4123b4:	mov    bl,0x8f
  4123b6:	cmovl  esp,DWORD PTR [ebp+0x2a]
  4123ba:	add    DWORD PTR [ebx-0x60],ebp
  4123bd:	test   eax,edx
  4123bf:	add    BYTE PTR [edi+0x7f04ecbf],bh
  4123c5:	repnz inc edx
  4123c7:	or     ebp,DWORD PTR [edx+eax*1+0x44700d3]
  4123ce:	mov    edi,0x6ddeabd8
  4123d3:	xor    bh,BYTE PTR [edi-0x2c]
  4123d6:	pop    esp
  4123d7:	mov    ebx,0xcb4b2927
  4123dc:	jns    0x4123e1
  4123de:	fidivr WORD PTR [edx+ecx*4]
  4123e1:	cmc    
  4123e2:	push   edi
  4123e3:	stc    
  4123e4:	test   DWORD PTR [ebx-0x65f9a666],0xf993ba1b
  4123ee:	or     al,0xf3
  4123f0:	or     ch,BYTE PTR [eax+0x7b]
  4123f3:	sbb    edi,ebp
  4123f5:	retf   0x7422
  4123f8:	or     dh,BYTE PTR [eax]
  4123fa:	push   ss
  4123fb:	dec    edi
  4123fc:	sub    cl,0xe7
  4123ff:	aas    
  412400:	addr16 enter 0x3f0e,0xa0
  412405:	pop    ecx
  412406:	and    DWORD PTR [ebp+0x22],esp
  412409:	and    edi,DWORD PTR [edx]
  41240b:	pop    es
  41240c:	dec    ebx
  41240d:	dec    esp
  41240e:	in     al,dx
  41240f:	inc    esp
  412410:	or     BYTE PTR [eax-0x7df1edba],cl
  412416:	adc    al,0xc1
  412418:	add    eax,DWORD PTR [esi-0x26]
  41241b:	mov    WORD PTR [ecx+eax*2],?
  41241e:	sar    esp,1
  412420:	mov    eax,ds:0x9e20ccbb
  412425:	cmp    cl,al
  412427:	or     eax,0x158bd077
  41242c:	neg    ah
  41242e:	(bad)  
  41242f:	repnz lds ecx,FWORD PTR [ebx+ecx*2]
  412433:	cmc    
  412434:	rcl    ah,0x99
  412437:	out    0x7e,al
  412439:	jecxz  0x41240d
  41243b:	je     0x412497
  41243d:	jmp    0x412488
  41243f:	pop    ds
  412440:	xchg   edx,eax
  412441:	jae    0x412455
  412443:	jmp    0xda5ae29
  412448:	aas    
  412449:	(bad)  
  41244a:	repnz test eax,ecx
  41244d:	or     eax,0x2ec19a06
  412452:	push   cs
  412453:	dec    edi
  412454:	push   edx
  412455:	lock sbb DWORD PTR [ecx+0x21],edi
  412459:	push   eax
  41245a:	sbb    DWORD PTR [ecx],0x230c3614
  412460:	outs   dx,BYTE PTR ds:[esi]
  412461:	leave  
  412462:	and    eax,0xdb62ec44
  412467:	sub    al,BYTE PTR [eax]
  412469:	add    edi,DWORD PTR [esp+eax*8]
  41246c:	jp     0x4124b5
  41246e:	sub    DWORD PTR [ebx],esp
  412470:	sub    ebp,ebx
  412472:	push   ds
  412473:	fadd   QWORD PTR cs:0xdde05748
  41247a:	sub    DWORD PTR [ebx+0x3d],ebx
  41247d:	or     dl,ah
  41247f:	jnp    0x412455
  412481:	sbb    edx,eax
  412483:	and    DWORD PTR [ecx+0x56c49c82],esi
  412489:	arpl   WORD PTR [eax+0xa],dx
  41248c:	xor    ch,cl
  41248e:	(bad)  
  41248f:	push   ss
  412490:	mov    al,0x9d
  412492:	inc    ecx
  412493:	pop    edi
  412494:	add    BYTE PTR [ebx],ch
  412496:	aad    0xec
  412498:	sub    eax,0x39de0732
  41249d:	out    0xfe,eax
  41249f:	fsubrp st(5),st
  4124a1:	cdq    
  4124a2:	jmp    0x4124a3
  4124a4:	outs   dx,DWORD PTR ds:[esi]
  4124a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124a7:	fisttp DWORD PTR [ebx+ebx*4-0x4d]
  4124ab:	jl     0x4124b1
  4124ad:	or     DWORD PTR [edx-0x2a],ecx
  4124b0:	ret    0x288a
  4124b3:	xchg   BYTE PTR [edx-0x77],ch
  4124b6:	popf   
  4124b7:	xor    eax,0xbea3ca82
  4124bc:	pushf  
  4124bd:	sahf   
  4124be:	and    dh,al
  4124c0:	xor    al,0x42
  4124c2:	fcmovne st,st(0)
  4124c4:	jg     0x4124fa
  4124c6:	and    bh,BYTE PTR [edi]
  4124c8:	push   cs
  4124c9:	or     edi,DWORD PTR [edx+0xc]
  4124cc:	xlat   BYTE PTR ds:[ebx]
  4124cd:	or     DWORD PTR [ebp+0x2d],ebp
  4124d0:	mov    ecx,0x5abf190
  4124d5:	pop    edi
  4124d6:	pop    ss
  4124d7:	out    0x1e,eax
  4124d9:	xchg   DWORD PTR [ebx+0x2fcec20e],eax
  4124df:	mov    esp,0x27984e59
  4124e4:	and    bh,BYTE PTR [eax+0x0]
  4124e7:	aas    
  4124e8:	ins    BYTE PTR es:[edi],dx
  4124e9:	rcl    BYTE PTR [ebx-0x6f],cl
  4124ec:	(bad)  
  4124ed:	cs push ebx
  4124f0:	(bad)  
  4124f1:	test   BYTE PTR [ebp-0x17],dh
  4124f4:	adc    dl,BYTE PTR [edx]
  4124f6:	add    BYTE PTR [eax-0x76a555ae],dh
  4124fc:	repz retf 
  4124fe:	sbb    cl,BYTE PTR ds:[ecx+0x1c]
  412502:	add    BYTE PTR [ebx],bh
  412504:	xchg   BYTE PTR [edx],cl
  412506:	pop    eax
  412507:	mov    ecx,0xe71f882a
  41250c:	xor    edx,esi
  41250e:	sti    
  41250f:	fisub  WORD PTR [ebp-0x7]
  412512:	adc    DWORD PTR [esi],eax
  412514:	cwde   
  412515:	out    dx,eax
  412516:	adc    DWORD PTR [ebx+eax*2+0x15b2cece],edi
  41251d:	sub    ecx,eax
  41251f:	sbb    dl,BYTE PTR [edi]
  412521:	sbb    al,0xbc
  412523:	(bad)  
  412525:	xor    DWORD PTR [edx+0x150f297f],esi
  41252b:	or     al,BYTE PTR ds:0xafa3499e
  412531:	mov    dh,BYTE PTR [esp+ebp*2]
  412534:	add    al,0x7f
  412536:	ins    DWORD PTR es:[edi],dx
  412537:	ins    DWORD PTR es:[edi],dx
  412538:	test   BYTE PTR ds:0xee111fe1,dl
  41253e:	add    eax,0x9b809d11
  412543:	bound  edx,QWORD PTR [eax+eiz*2]
  412546:	jne    0x41256b
  412548:	xchg   ecx,eax
  412549:	xor    eax,DWORD PTR [ecx+0x51]
  41254c:	sub    DWORD PTR [eax+0x1a],esp
  41254f:	or     bl,ah
  412551:	dec    eax
  412552:	sbb    BYTE PTR [eax],dh
  412554:	sbb    eax,0x30193423
  412559:	jge    0x41258c
  41255b:	sti    
  41255c:	popa   
  41255d:	sbb    al,0x33
  41255f:	sbb    ebx,edi
  412561:	push   es
  412562:	xor    al,BYTE PTR [eax-0x7cdcf808]
  412568:	inc    edi
  412569:	fldcw  WORD PTR [ebx]
  41256b:	sub    bl,BYTE PTR ds:0x462d87d1
  412571:	leave  
  412572:	and    BYTE PTR [ebx+edx*1],bl
  412575:	into   
  412576:	or     eax,0xb5034548
  41257b:	stos   DWORD PTR es:[edi],eax
  41257c:	cmp    eax,DWORD PTR [eax]
  41257e:	rsm    
  412580:	pop    edx
  412581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412582:	adc    DWORD PTR [edi-0x35f83a03],ecx
  412588:	jecxz  0x41251c
  41258a:	outs   dx,BYTE PTR ds:[esi]
  41258b:	arpl   WORD PTR [edi-0x30a125b4],sp
  412591:	loopne 0x4125a6
  412593:	adc    al,0x1f
  412595:	jg     0x4125e3
  412597:	sub    eax,0x90a9b831
  41259c:	in     al,dx
  41259d:	bound  ecx,QWORD PTR [ebp+0x12ccbe19]
  4125a3:	sti    
  4125a4:	mov    BYTE PTR [ebp-0x25332bcc],al
  4125aa:	push   edx
  4125ab:	sub    eax,0x7ab18d11
  4125b0:	outs   dx,BYTE PTR ds:[esi]
  4125b1:	loop   0x412615
  4125b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125b4:	mov    ebp,0x2cc1dbb
  4125b9:	fucomi st,st(1)
  4125bb:	mov    WORD PTR [ecx-0x1947b14],gs
  4125c1:	lods   al,BYTE PTR ds:[esi]
  4125c2:	jle    0x41254c
  4125c4:	mov    BYTE PTR fs:[ecx+0x2b],0x75
  4125c9:	mov    eax,ds:0x7134ec23
  4125ce:	jle    0x41255d
  4125d0:	je     0x41258f
  4125d2:	clc    
  4125d3:	dec    ebx
  4125d4:	add    al,0xa3
  4125d6:	sbb    DWORD PTR [edx+eiz*4-0x55],0xffffff84
  4125db:	ret    0xc0b9
  4125de:	aaa    
  4125df:	sub    eax,0xcccf1a45
  4125e4:	push   esp
  4125e5:	test   esi,edx
  4125e7:	popa   
  4125e8:	aam    0x87
  4125ea:	pop    ecx
  4125eb:	and    bl,BYTE PTR [esi]
  4125ed:	and    DWORD PTR [eax],0x47fcc715
  4125f3:	(bad)  
  4125f4:	sbb    cl,bl
  4125f6:	cmp    BYTE PTR [esi-0x22],0x4
  4125fa:	in     eax,0x69
  4125fc:	imul   edx,ebx,0x517ebd37
  412602:	push   edx
  412603:	shl    DWORD PTR [ecx],cl
  412605:	das    
  412606:	adc    DWORD PTR [edi],ebp
  412608:	fadd   st(0),st
  41260a:	jbe    0x412640
  41260c:	pop    eax
  41260d:	ret    0x56bc
  412610:	jae    0x412684
  412612:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412613:	pop    eax
  412614:	daa    
  412615:	ret    
  412616:	aam    0x2a
  412618:	push   ebx
  412619:	(bad)  
  41261a:	sahf   
  41261b:	imul   ebx,DWORD PTR [ecx+0x131a20e1],0x24
  412622:	shr    dh,0x2c
  412625:	xor    dh,cl
  412627:	add    ch,ch
  412629:	jo     0x412630
  41262b:	rcl    DWORD PTR [esi],0x99
  41262e:	add    ah,al
  412630:	(bad)  
  412632:	add    eax,0x4371e9d7
  412637:	dec    edi
  412638:	lock pusha 
  41263a:	js     0x4126b6
  41263c:	sbb    eax,0x23636460
  412641:	jbe    0x4125c4
  412643:	ret    
  412644:	inc    edx
  412645:	jbe    0x41267a
  412647:	cmp    eax,0x2962411d
  41264c:	js     0x4126b0
  41264e:	and    eax,ebp
  412650:	daa    
  412651:	inc    edx
  412652:	cld    
  412653:	lock mov ds:0x7a63a516,eax
  412659:	je     0x41265f
  41265b:	and    esp,DWORD PTR [edi]
  41265d:	aam    0xcc
  41265f:	jae    0x4126cd
  412661:	sbb    DWORD PTR [ebx],edx
  412663:	push   0x2ed12e60
  412668:	xlat   BYTE PTR ds:[ebx]
  412669:	mov    bh,0x30
  41266b:	cwde   
  41266c:	leave  
  41266d:	jg     0x41267f
  41266f:	and    edx,DWORD PTR [edx]
  412671:	mov    bl,0x1b
  412673:	mov    ah,BYTE PTR [ebx+0x2a]
  412676:	shr    BYTE PTR [ebp+0x21ccb108],0x25
  41267d:	ja     0x412646
  41267f:	add    DWORD PTR [edx],ecx
  412681:	jno    0x41265e
  412683:	pop    esi
  412684:	push   ebp
  412685:	jecxz  0x412690
  412687:	xor    edx,ebp
  412689:	shl    esp,1
  41268b:	cmc    
  41268c:	test   esi,edi
  41268e:	jno    0x412706
  412690:	ds js  0x4126f3
  412693:	push   ds
  412694:	cmc    
  412695:	test   BYTE PTR [eax-0x45],bl
  412698:	and    DWORD PTR [edi],ebp
  41269a:	jae    0x41269c
  41269c:	ins    BYTE PTR es:[edi],dx
  41269d:	or     eax,0x4ccf212c
  4126a2:	hlt    
  4126a3:	sub    al,ch
  4126a5:	fimul  WORD PTR [edi-0x2cf89797]
  4126ab:	sbb    al,0x77
  4126ad:	aas    
  4126ae:	jns    0x4126e2
  4126b0:	aad    0x4d
  4126b2:	fisttp QWORD PTR [ebp+ebx*1+0x21]
  4126b6:	mov    al,0x28
  4126b8:	jo     0x4126ad
  4126ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126bb:	or     cx,dx
  4126be:	xchg   BYTE PTR [edx],bl
  4126c0:	adc    esi,DWORD PTR [ecx+0x2b351c9b]
  4126c6:	inc    ecx
  4126c7:	loopne 0x412739
  4126c9:	jmp    0x41270d
  4126cb:	fnsave [esi-0x37]
  4126ce:	xor    ebp,DWORD PTR [edx+0x14]
  4126d1:	icebp  
  4126d2:	adc    ah,BYTE PTR [eax-0x52]
  4126d5:	sbb    eax,0x891fe041
  4126da:	jne    0x4126c2
  4126dc:	ja     0x4126a9
  4126de:	sub    ecx,ebp
  4126e0:	cs icebp 
  4126e2:	fisub  WORD PTR [ebx+0x106d926c]
  4126e8:	outs   dx,DWORD PTR ds:[esi]
  4126e9:	gs mov cl,bh
  4126ec:	pop    ebp
  4126ed:	xchg   DWORD PTR [edi+eiz*8-0x54],esi
  4126f1:	clc    
  4126f2:	or     edx,DWORD PTR [esi+0x60]
  4126f5:	clc    
  4126f6:	mov    al,0xac
  4126f8:	jmp    0x41270d
  4126fa:	xchg   edi,eax
  4126fb:	enter  0xac6e,0x75
  4126ff:	pop    esi
  412700:	mov    edi,0xb38b624c
  412705:	ret    0x2b59
  412708:	neg    BYTE PTR [ebx]
  41270a:	pop    ecx
  41270b:	mov    ds:0x8a635f2d,al
  412710:	mov    edx,0x15b5fdab
  412715:	mov    al,ds:0xcdcb8220
  41271a:	jmp    0x45c54638
  41271f:	adc    BYTE PTR [ecx+0x5848f376],bh
  412725:	ins    BYTE PTR es:[edi],dx
  412726:	or     DWORD PTR [edi],edx
  412728:	test   DWORD PTR [ecx],eax
  41272a:	in     al,0x42
  41272c:	sbb    DWORD PTR [ecx],esp
  41272e:	stos   BYTE PTR es:[edi],al
  41272f:	retf   
  412730:	add    DWORD PTR [edx],0xfffffff9
  412733:	jmp    0x69d0:0x42956ad5
  41273a:	pop    ebx
  41273b:	pushf  
  41273c:	popa   
  41273d:	and    BYTE PTR [ebp+0x419d667],dl
  412743:	sbb    BYTE PTR [ebx-0x2d],al
  412746:	addr16 enter 0xa1e6,0xee
  41274b:	ss and al,al
  41274e:	test   edx,edx
  412750:	les    edx,FWORD PTR [esi-0x33]
  412753:	ja     0x4127ad
  412755:	dec    esp
  412756:	das    
  412757:	test   BYTE PTR [ebx],0x94
  41275a:	inc    edx
  41275b:	mov    eax,ds:0x1ce043e6
  412760:	(bad)  
  412761:	retf   
  412762:	pop    ebx
  412763:	pop    ss
  412764:	mov    WORD PTR [edi-0x77],gs
  412767:	retf   
  412768:	sbb    DWORD PTR [ecx+0x4c],ebx
  41276b:	fwait
  41276c:	test   eax,0x6a630651
  412771:	nop
  412772:	into   
  412773:	das    
  412774:	cmp    eax,0x1fa1096
  412779:	add    BYTE PTR [ecx-0x58],ah
  41277c:	push   edi
  41277d:	push   ss
  41277e:	and    BYTE PTR [esi],dl
  412780:	stc    
  412781:	add    edi,DWORD PTR [esp+eax*4+0x4f7a1144]
  412788:	or     bl,ah
  41278a:	xchg   DWORD PTR [esi+0xe],eax
  41278d:	das    
  41278e:	add    edx,DWORD PTR [ecx]
  412790:	jecxz  0x412758
  412792:	not    BYTE PTR [ecx+0x74e0544]
  412798:	int3   
  412799:	adc    eax,0x20092a80
  41279e:	jmp    0x212a:0xaf3868c5
  4127a5:	cwde   
  4127a6:	inc    esi
  4127a7:	clc    
  4127a8:	(bad)  
  4127a9:	mov    esp,DWORD PTR fs:[eax+0x7f]
  4127ad:	loopne 0x4127f9
  4127af:	xor    BYTE PTR [edx+0x74],ah
  4127b2:	mul    esp
  4127b4:	aas    
  4127b5:	push   edi
  4127b6:	popf   
  4127b7:	sbb    esp,DWORD PTR [eax+0x18]
  4127ba:	arpl   si,bp
  4127bc:	pop    edx
  4127bd:	icebp  
  4127be:	bound  esp,QWORD PTR [eax]
  4127c0:	jbe    0x4127d2
  4127c2:	test   DWORD PTR [edi+0x61],ecx
  4127c5:	and    edx,DWORD PTR [ebx+0x6e]
  4127c8:	gs pop esi
  4127ca:	out    0x7b,eax
  4127cc:	jb     0x412809
  4127ce:	push   es
  4127cf:	push   edx
  4127d0:	clc    
  4127d1:	mov    ah,0x66
  4127d3:	shl    BYTE PTR [eax],cl
  4127d5:	sub    DWORD PTR ds:[esi+0x5e3b6796],edx
  4127dc:	push   ss
  4127dd:	rcr    DWORD PTR [esi],1
  4127df:	je     0x41282a
  4127e1:	jge    0x4127cf
  4127e3:	jbe    0x412850
  4127e5:	imul   edi,DWORD PTR [eax],0xfffffff0
  4127e8:	inc    BYTE PTR [edi+0x3959a7c9]
  4127ee:	xor    dl,BYTE PTR [esi+esi*2-0x5e]
  4127f2:	jbe    0x4127fa
  4127f4:	adc    BYTE PTR [eax+0x10],ch
  4127f7:	mov    dl,0xe6
  4127f9:	cmp    al,0x18
  4127fb:	sub    al,0xba
  4127fd:	and    eax,0x69c403eb
  412802:	loop   0x4127de
  412804:	enter  0x1dee,0x85
  412808:	in     eax,dx
  412809:	(bad)  
  41280a:	sti    
  41280b:	inc    esi
  41280c:	cmp    BYTE PTR [edx],ah
  41280e:	hlt    
  41280f:	ret    
  412810:	leave  
  412811:	call   0x6e656c59
  412816:	dec    ebp
  412817:	push   ebx
  412818:	gs stos BYTE PTR es:[edi],al
  41281a:	call   0xff1c:0xd24ba69c
  412821:	(bad)  
  412822:	push   eax
  412823:	cmp    BYTE PTR [edx+ecx*4],dl
  412826:	pop    ss
  412827:	and    BYTE PTR [edi],ch
  412829:	sbb    eax,0x12ef1f1c
  41282e:	fmul   DWORD PTR [ecx]
  412830:	sub    ecx,DWORD PTR [eax]
  412832:	xchg   BYTE PTR [esi],bl
  412834:	push   ebp
  412835:	pop    ebp
  412836:	mov    esi,0x90855ac8
  41283b:	cmp    ebp,DWORD PTR [ebx+0x5c]
  41283e:	jmp    0x412862
  412840:	bound  edx,QWORD PTR [ecx+0x61]
  412843:	sbb    ah,BYTE PTR [edi+0x2a]
  412846:	push   ebx
  412847:	or     al,0xfe
  412849:	pop    ebx
  41284a:	loopne 0x412876
  41284c:	and    esp,ecx
  41284e:	retf   
  41284f:	mov    ecx,0x77a86818
  412854:	ror    DWORD PTR [esi+ecx*8+0x9f17212],cl
  41285b:	out    dx,al
  41285c:	clc    
  41285d:	push   0x1ce63697
  412862:	sar    DWORD PTR [eax-0x40],0x82
  412866:	bswap  eax
  412868:	imul   ebp,DWORD PTR [edx],0xb75df373
  41286e:	outs   dx,BYTE PTR ds:[esi]
  41286f:	mov    ebp,0xd32f3b11
  412874:	sbb    BYTE PTR [edx+0x33d78a63],al
  41287a:	retf   
  41287b:	cmc    
  41287c:	pop    ecx
  41287d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41287e:	iret   
  41287f:	es repnz das 
  412882:	mul    BYTE PTR [ecx]
  412884:	lds    edx,FWORD PTR [eax-0x45]
  412887:	stc    
  412888:	sbb    eax,0xc1c25db1
  41288d:	lea    esi,[eax-0x5c]
  412890:	mov    ds,WORD PTR [ebp+0x4]
  412893:	inc    ebp
  412894:	fadd   QWORD PTR [ebx]
  412896:	mov    ah,0x57
  412898:	iret   
  412899:	sub    ch,BYTE PTR [edi]
  41289b:	loopne 0x41287a
  41289d:	jge    0x4128d5
  41289f:	repnz test BYTE PTR [ebx+0x1f],0xcc
  4128a4:	and    ebp,esi
  4128a6:	xor    al,0xdb
  4128a9:	push   es
  4128aa:	push   cs
  4128ab:	(bad)  
  4128ac:	mov    esi,esp
  4128ae:	sbb    ch,BYTE PTR [edi-0x235976f5]
  4128b4:	sbb    BYTE PTR [edi],ch
  4128b6:	or     al,0xc7
  4128b8:	into   
  4128b9:	mov    dh,0xc5
  4128bb:	push   edx
  4128bc:	das    
  4128bd:	repnz or eax,0xb11bef8f
  4128c3:	add    eax,0xd382029d
  4128c8:	(bad)  
  4128c9:	out    0x30,al
  4128cb:	jnp    0x41284d
  4128cd:	fist   DWORD PTR [esi+0x276cf39e]
  4128d3:	idiv   BYTE PTR [eax+0x730a8a69]
  4128d9:	push   ss
  4128da:	iret   
  4128db:	or     BYTE PTR [edi+0x5342e025],ch
  4128e1:	or     DWORD PTR [edi+0x43e91c8e],esi
  4128e7:	xchg   BYTE PTR [edi],al
  4128e9:	cmp    DWORD PTR [ebp+0x72],ecx
  4128ec:	popa   
  4128ed:	sti    
  4128ee:	es call 0x53e1:0x53b2d39a
  4128f6:	pop    ecx
  4128f7:	jmp    0xb6d6d83
  4128fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128fd:	lods   eax,DWORD PTR ds:[esi]
  4128fe:	mov    cl,0xcb
  412900:	adc    esi,DWORD PTR [ebx+ebx*1+0x27]
  412904:	sub    eax,DWORD PTR [ebp+0x13311e0a]
  41290a:	inc    edx
  41290b:	or     DWORD PTR [edi+0x7f4d0980],ecx
  412911:	xor    al,0x1f
  412913:	xchg   esp,eax
  412914:	sub    eax,0xa11229e4
  412919:	sub    BYTE PTR [edi],bl
  41291b:	and    ecx,ebp
  41291d:	sub    ebp,DWORD PTR [ecx+0x260253]
  412923:	imul   edi,DWORD PTR [eax],0xffffff97
  412926:	dec    ebx
  412927:	repnz lds ecx,FWORD PTR [eax-0x1a]
  41292b:	push   esp
  41292c:	fwait
  41292d:	mov    ecx,0xee08d3a
  412932:	ja     0x412955
  412934:	pop    esp
  412935:	aaa    
  412936:	mov    edx,0x1bc5cbdd
  41293b:	and    edx,DWORD PTR [ecx-0x2a]
  41293e:	mov    ds:0x331bb80e,al
  412943:	int3   
  412944:	das    
  412945:	jne    0x4128e3
  412947:	dec    esi
  412948:	out    dx,al
  412949:	add    DWORD PTR [edi+edx*8+0x150e862b],ecx
  412950:	iret   
  412951:	(bad)  
  412952:	out    dx,eax
  412953:	add    al,0x5
  412955:	mov    dh,0x92
  412957:	jns    0x4129c5
  412959:	dec    ebx
  41295a:	cmp    ch,BYTE PTR [eax]
  41295c:	xor    ecx,DWORD PTR [esi-0x76357f47]
  412962:	sti    
  412963:	out    0xa1,eax
  412965:	dec    ebp
  412966:	xor    DWORD PTR [esi+0x5],ecx
  412969:	adc    ebp,edx
  41296b:	jns    0x41294d
  41296d:	dec    ecx
  41296e:	inc    eax
  41296f:	cwde   
  412970:	ja     0x4128f5
  412972:	mov    edx,0x42e9844a
  412977:	test   eax,0x54122900
  41297c:	div    BYTE PTR [edx+edx*2-0x3d]
  412980:	or     al,0xa
  412982:	aas    
  412983:	out    dx,eax
  412984:	jp     0x41298d
  412986:	aas    
  412987:	out    dx,al
  412988:	sbb    cl,0x80
  41298b:	out    0xd1,eax
  41298d:	adc    eax,0xeba87afb
  412992:	adc    al,0x8
  412994:	jo     0x4129a7
  412996:	or     al,0x1
  412998:	jae    0x412943
  41299a:	sbb    cl,BYTE PTR [ecx]
  41299c:	dec    edi
  41299d:	sbb    al,0x17
  41299f:	add    eax,0x6543e4c
  4129a4:	cmc    
  4129a5:	or     al,0x89
  4129a7:	sbb    DWORD PTR [esi-0x7d704093],0xe
  4129ae:	mov    DWORD PTR [esi-0x38],ecx
  4129b1:	cmc    
  4129b2:	lock outs dx,BYTE PTR ds:[esi]
  4129b4:	dec    eax
  4129b5:	fstp   TBYTE PTR [eax-0x1a]
  4129b8:	inc    ebx
  4129b9:	and    al,0xd4
  4129bb:	mov    esi,0xdc010b48
  4129c0:	and    al,0xbf
  4129c2:	loope  0x4129db
  4129c4:	pop    es
  4129c5:	mov    ah,bl
  4129c7:	or     DWORD PTR [ecx+0x77],esi
  4129ca:	sub    al,0x51
  4129cc:	lea    ebp,[esi+eax*4]
  4129cf:	dec    ecx
  4129d0:	in     eax,dx
  4129d1:	lods   eax,DWORD PTR ds:[esi]
  4129d2:	push   ebx
  4129d3:	push   ebp
  4129d4:	add    DWORD PTR [eax],0x92bc0375
  4129da:	scas   eax,DWORD PTR es:[edi]
  4129db:	inc    ecx
  4129dc:	sbb    al,0xcb
  4129de:	add    al,0xa3
  4129e0:	retf   0x879e
  4129e3:	push   0xffffffd4
  4129e5:	push   ebx
  4129e6:	add    eax,0xec31d4ab
  4129eb:	pop    ds
  4129ec:	push   esp
  4129ed:	push   cs
  4129ee:	out    0x1f,eax
  4129f0:	adc    eax,0x6f07b6f0
  4129f5:	or     cl,BYTE PTR [ebx+0x71]
  4129f8:	pop    esp
  4129f9:	inc    ebx
  4129fa:	add    eax,0x45429379
  4129ff:	mov    bl,0xf4
  412a01:	xor    edx,edx
  412a03:	ds sbb al,0xd8
  412a06:	push   esi
  412a07:	cs adc al,0xa1
  412a0a:	pop    ecx
  412a0b:	sub    BYTE PTR [edi-0x237a07b],0x5c
  412a12:	(bad)  
  412a13:	jmp    0x412a1c
  412a15:	sbb    DWORD PTR [esi+0x1b],0x5f08e3b0
  412a1c:	mov    edx,DWORD PTR [ecx+0x58]
  412a1f:	jmp    0x4967449a
  412a24:	or     esp,DWORD PTR [ebx]
  412a26:	rol    BYTE PTR [ecx-0xf],1
  412a29:	mov    dl,0xb2
  412a2b:	fdiv   DWORD PTR [ebp-0x6c7f2df8]
  412a31:	inc    ebx
  412a32:	ja     0x412a03
  412a34:	call   0x68aba3d0
  412a39:	(bad)  
  412a3a:	daa    
  412a3b:	js     0x412a23
  412a3d:	in     eax,0x51
  412a3f:	in     eax,dx
  412a40:	aam    0x86
  412a42:	adc    DWORD PTR [ecx],edi
  412a44:	pop    ds
  412a45:	dec    eax
  412a46:	cld    
  412a47:	adc    BYTE PTR [edi+ebx*1-0x14],bl
  412a4b:	imul   esi,DWORD PTR [eax-0x2413d5d1],0x9256a20e
  412a55:	fsubr  QWORD PTR [ecx]
  412a57:	lds    eax,FWORD PTR [esi]
  412a59:	scas   al,BYTE PTR es:[edi]
  412a5a:	mov    ebx,0x6ef7c715
  412a5f:	dec    edx
  412a60:	in     eax,dx
  412a61:	out    0x80,al
  412a63:	or     al,0x24
  412a65:	loopne 0x412ab0
  412a67:	shl    DWORD PTR [eax-0x2d683181],0x87
  412a6e:	daa    
  412a6f:	div    BYTE PTR [eax+0x25a4ce91]
  412a75:	add    eax,0x8c5b35d
  412a7a:	mov    edx,0xc2cd2c03
  412a7f:	rol    BYTE PTR [esi-0x32],1
  412a82:	js     0x412ad2
  412a84:	xlat   BYTE PTR ds:[ebx]
  412a85:	lea    ecx,[ebp+0x5f]
  412a88:	cs mov ebx,0x15e58c12
  412a8e:	das    
  412a8f:	add    DWORD PTR [esi+0x4a4d62b6],0x283fdf5c
  412a99:	pop    edx
  412a9a:	push   0x49f395c2
  412a9f:	into   
  412aa0:	in     eax,0xb
  412aa2:	and    DWORD PTR [edi+eax*8],ebp
  412aa5:	jne    0x412a4a
  412aa7:	pop    ecx
  412aa8:	jae    0x412af3
  412aaa:	daa    
  412aab:	into   
  412aac:	add    al,0xf2
  412aae:	loop   0x412b2f
  412ab0:	fwait
  412ab1:	mov    esi,0x4d965927
  412ab6:	inc    esp
  412ab7:	mov    al,ds:0xcc08f221
  412abc:	sub    DWORD PTR [edi+0x55eeed03],eax
  412ac2:	lock das 
  412ac4:	loope  0x412a47
  412ac6:	sti    
  412ac7:	inc    esp
  412ac8:	sbb    ecx,DWORD PTR [esi]
  412aca:	pop    ebp
  412acb:	xchg   esi,eax
  412acc:	ficom  DWORD PTR [edx+0x1b]
  412acf:	sbb    al,0xe8
  412ad1:	outs   dx,DWORD PTR ds:[esi]
  412ad2:	or     al,0x96
  412ad4:	and    al,bh
  412ad6:	jno    0x412afa
  412ad8:	nop
  412ad9:	inc    edx
  412ada:	pop    ds
  412adb:	cmp    DWORD PTR [eax],eax
  412add:	xchg   DWORD PTR [ebx+esi*1-0x2c],edx
  412ae1:	jle    0x412b01
  412ae3:	inc    ebp
  412ae4:	or     BYTE PTR [esi*4-0x319ea8c8],dl
  412aeb:	dec    edx
  412aec:	and    BYTE PTR [ebx-0x10],dl
  412aef:	push   es
  412af0:	enter  0xd206,0x4e
  412af4:	cmp    eax,0x73290195
  412af9:	mov    ebp,DWORD PTR [eax-0x6479189b]
  412aff:	cmp    ebp,DWORD PTR [ebx-0x256c9213]
  412b05:	push   0x7e
  412b07:	xchg   ebx,eax
  412b08:	dec    edx
  412b09:	xchg   ebp,eax
  412b0a:	mov    esi,DWORD PTR [edi]
  412b0c:	pop    eax
  412b0d:	or     ebx,DWORD PTR [ebp+0x1b]
  412b10:	jb     0x412b1f
  412b12:	int    0xc
  412b14:	cli    
  412b15:	mov    ds:0x3d4950ce,al
  412b1a:	loope  0x412b15
  412b1c:	xchg   ebp,eax
  412b1d:	or     al,0xbf
  412b1f:	pop    esp
  412b20:	aad    0x1a
  412b22:	test   BYTE PTR [eax+0x3835f1ff],0x49
  412b29:	(bad)  
  412b2a:	add    DWORD PTR [eax+ebx*2-0x45],0xffffff81
  412b2f:	pop    edx
  412b30:	sub    dl,BYTE PTR [ebx]
  412b32:	repnz (bad) 
  412b34:	xchg   ecx,eax
  412b35:	sti    
  412b36:	and    dl,BYTE PTR [eax]
  412b38:	in     al,dx
  412b39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b3a:	int3   
  412b3b:	jnp    0x412b9e
  412b3d:	loop   0x412b0d
  412b3f:	xor    eax,0xa904fb87
  412b44:	adc    edi,edx
  412b46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b47:	cmp    ebp,DWORD PTR [esi+0x3ef42511]
  412b4d:	adc    BYTE PTR [eax-0x17e94f38],bh
  412b53:	test   BYTE PTR [edx],dl
  412b55:	xor    ecx,eax
  412b57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b58:	ror    BYTE PTR [eax+ecx*4+0x2eb43a19],cl
  412b5f:	test   DWORD PTR [esp+ecx*2],ebx
  412b62:	pop    es
  412b63:	inc    esi
  412b64:	dec    edx
  412b65:	addr16 dec esi
  412b67:	add    al,0x82
  412b69:	pop    ecx
  412b6a:	add    eax,esp
  412b6c:	sub    DWORD PTR [ebx+0x394ba196],ebx
  412b72:	and    DWORD PTR [eax],0x4
  412b75:	jno    0x412ba2
  412b77:	xor    BYTE PTR [ebp+0x74],dh
  412b7a:	pop    ebx
  412b7b:	mov    bh,0x31
  412b7d:	pop    ebp
  412b7e:	jmp    0x412b58
  412b80:	test   BYTE PTR [edi],ah
  412b82:	sbb    eax,0xef5e288d
  412b88:	adc    al,0x7d
  412b8a:	mov    ecx,0xa72cfb2c
  412b8f:	mov    ah,0xde
  412b91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b92:	test   DWORD PTR [ebp-0x12981c81],edi
  412b98:	(bad)  
  412b99:	pop    es
  412b9a:	push   ss
  412b9b:	cmp    DWORD PTR [esi],ecx
  412b9d:	aad    0x8e
  412b9f:	push   edx
  412ba0:	or     BYTE PTR [esi+0x19],0x29
  412ba4:	loope  0x412ba0
  412ba6:	push   edi
  412ba7:	loope  0x412b85
  412ba9:	in     al,0x69
  412bab:	outs   dx,BYTE PTR ds:[esi]
  412bac:	or     eax,0xffffffb2
  412baf:	adc    esi,ecx
  412bb1:	add    BYTE PTR ds:0x4c31d4fb,al
  412bb7:	sbb    BYTE PTR [edi+0x19],cl
  412bba:	sub    ecx,DWORD PTR [eax-0x4]
  412bbd:	xor    BYTE PTR [esi-0x1997b032],al
  412bc3:	mov    dl,0x12
  412bc5:	mov    ebp,ecx
  412bc7:	sbb    BYTE PTR ds:0x874e7ef9,ah
  412bcd:	int    0x83
  412bcf:	and    DWORD PTR [ecx+eax*8],eax
  412bd2:	mov    ebx,0x84686830
  412bd7:	jecxz  0x412bf5
  412bd9:	dec    edi
  412bda:	push   esi
  412bdb:	xor    BYTE PTR [esi+0x21],bl
  412bde:	push   eax
  412bdf:	stc    
  412be0:	sub    al,0x27
  412be2:	idiv   bh
  412be4:	add    BYTE PTR [edx],0x72
  412be7:	adc    eax,0xee03b4b3
  412bec:	fs push edx
  412bee:	dec    ebp
  412bef:	or     al,bl
  412bf1:	push   edx
  412bf2:	cli    
  412bf3:	cs lahf 
  412bf5:	in     al,0x9c
  412bf7:	aad    0x39
  412bf9:	stos   BYTE PTR es:[edi],al
  412bfa:	mov    ecx,DWORD PTR [ebx+0x713613a]
  412c00:	add    BYTE PTR [eiz*1-0x5d9038d0],0x4
  412c08:	pop    eax
  412c09:	in     eax,dx
  412c0a:	sub    esi,ebp
  412c0c:	mov    edi,0xdd1369e7
  412c11:	dec    esp
  412c12:	xor    BYTE PTR [esi-0x3f44a899],bl
  412c18:	imul   esp,DWORD PTR [ebx],0x95809d0
  412c1e:	xor    cl,ah
  412c20:	das    
  412c21:	(bad)  
  412c22:	xor    al,0x16
  412c24:	inc    esi
  412c25:	or     BYTE PTR [edi-0x21f74c53],al
  412c2b:	dec    edx
  412c2c:	mov    eax,esi
  412c2e:	inc    edx
  412c2f:	aas    
  412c30:	jbe    0x412c48
  412c32:	frstor [ebx]
  412c34:	sahf   
  412c35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c36:	icebp  
  412c37:	sub    BYTE PTR [edx],ch
  412c39:	rol    BYTE PTR [edx+0x1031fff],1
  412c3f:	jbe    0x412c69
  412c41:	or     eax,0xf729740a
  412c46:	push   esp
  412c47:	jl     0x412be4
  412c49:	add    DWORD PTR [ecx],edi
  412c4b:	pop    ebx
  412c4c:	pop    esp
  412c4d:	add    esp,0x2760e30e
  412c53:	sbb    ebx,DWORD PTR [eax+0x1aacf133]
  412c59:	inc    ecx
  412c5a:	cs push ebp
  412c5c:	jbe    0x412c76
  412c5e:	(bad)  
  412c5f:	out    dx,eax
  412c60:	js     0x412c99
  412c62:	mov    esi,0xc52f9c58
  412c67:	sub    al,0x44
  412c69:	ja     0x412cd5
  412c6b:	mov    eax,0xf5b504b5
  412c70:	nop
  412c71:	clc    
  412c72:	jbe    0x412c7d
  412c74:	std    
  412c75:	sahf   
  412c76:	rcr    BYTE PTR [ebx],cl
  412c78:	cmp    DWORD PTR [ebp+0x13],0xb5866cfa
  412c7f:	dec    esi
  412c80:	jg     0x412c75
  412c82:	and    DWORD PTR [edi+0x3],eax
  412c85:	xchg   BYTE PTR [ecx],al
  412c87:	hlt    
  412c88:	sbb    BYTE PTR [ebp-0x3e],ch
  412c8b:	add    edi,DWORD PTR [bx+si]
  412c8e:	mov    WORD PTR [edi+0xe],?
  412c91:	add    eax,0x1910777
  412c96:	add    eax,0x48bb1f0d
  412c9b:	imul   edi,ebp,0x50
  412c9e:	push   edi
  412c9f:	pushf  
  412ca0:	retf   
  412ca1:	mov    esi,0x7145c608
  412ca6:	xchg   BYTE PTR [ecx+0xc],al
  412ca9:	push   ss
  412caa:	push   ss
  412cab:	loope  0x412d0d
  412cad:	and    DWORD PTR [ebp-0x7f],esp
  412cb0:	push   es
  412cb1:	neg    BYTE PTR [ebp-0x19]
  412cb4:	dec    edi
  412cb5:	or     BYTE PTR cs:[edx],bl
  412cb8:	std    
  412cb9:	dec    esp
  412cba:	pop    es
  412cbb:	fsubr  QWORD PTR [esi]
  412cbd:	mov    edx,0x5881c0f
  412cc2:	loopne 0x412cf4
  412cc4:	mov    dh,0x4d
  412cc6:	stos   DWORD PTR es:[edi],eax
  412cc7:	clc    
  412cc8:	mov    eax,0xf5791a73
  412ccd:	aam    0x5
  412ccf:	sbb    eax,0x359c333
  412cd4:	cmp    eax,0x543e88d
  412cd9:	cwde   
  412cda:	call   0x19925220
  412cdf:	int    0xb
  412ce1:	jne    0x412ce8
  412ce3:	mov    bh,0xfb
  412ce5:	push   ebp
  412ce6:	mov    WORD PTR [ecx-0x35be51f3],ds
  412cec:	add    al,0x22
  412cee:	xchg   eax,ecx
  412cf0:	fdiv   DWORD PTR [esi+0x8d07f0c]
  412cf6:	inc    edx
  412cf7:	push   0x1d2b1b7b
  412cfc:	dec    ecx
  412cfd:	sbb    al,0x5
  412cff:	and    DWORD PTR gs:[esi+0x3f],eax
  412d03:	sub    ebx,DWORD PTR [ecx+0x4d]
  412d06:	dec    ebx
  412d07:	sbb    eax,0xd4081e43
  412d0c:	inc    edi
  412d0d:	es add eax,0x8dd25c24
  412d13:	or     eax,0x1b67df56
  412d18:	dec    ebp
  412d19:	pop    edi
  412d1a:	fisub  WORD PTR [eax+0x5d]
  412d1d:	add    eax,0xb81b1437
  412d22:	mov    ebx,0x5ee94c95
  412d27:	ss push ds
  412d29:	dec    esp
  412d2a:	shl    DWORD PTR [ecx],0xd
  412d2d:	push   ss
  412d2e:	lahf   
  412d2f:	and    al,0xb
  412d31:	fsubr  st,st(1)
  412d33:	int3   
  412d34:	jmp    0x2e1a:0xbafe0905
  412d3b:	ja     0x412d12
  412d3d:	lahf   
  412d3e:	inc    ecx
  412d3f:	sbb    dl,bl
  412d41:	mov    esp,DWORD PTR [ecx]
  412d43:	add    DWORD PTR [esi],eax
  412d45:	jmp    0x45d1:0x5811aee1
  412d4c:	xchg   edx,eax
  412d4d:	mov    bh,0xea
  412d4f:	xor    eax,0x4f153b2d
  412d54:	inc    esi
  412d55:	psubb  mm3,QWORD PTR [ecx+0x1c]
  412d59:	pop    es
  412d5a:	mov    bl,BYTE PTR [edx]
  412d5c:	pop    ds
  412d5d:	or     al,0x31
  412d5f:	js     0x412dcd
  412d61:	dec    ebx
  412d62:	sbb    ch,ah
  412d64:	inc    eax
  412d65:	adc    DWORD PTR [edi],edi
  412d67:	dec    esi
  412d68:	mov    ds:0x6a544b12,eax
  412d6d:	dec    esi
  412d6e:	adc    al,0xe
  412d70:	jmp    0x39f6e723
  412d75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d76:	inc    ebp
  412d77:	push   ebx
  412d78:	test   eax,0x44940f97
  412d7d:	pop    ebx
  412d7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d7f:	je     0x412d7d
  412d81:	push   cs
  412d82:	test   al,0x2b
  412d84:	add    esp,ecx
  412d86:	or     eax,DWORD PTR [edi+0x3a]
  412d89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d8a:	addr16 icebp 
  412d8c:	ret    
  412d8d:	sub    BYTE PTR [edx-0x7686d0d3],dl
  412d93:	pop    ebx
  412d94:	iret   
  412d95:	sbb    dh,BYTE PTR [edx]
  412d97:	dec    eax
  412d98:	ins    DWORD PTR es:[edi],dx
  412d99:	push   ecx
  412d9a:	ja     0x412e08
  412d9c:	xor    edi,DWORD PTR [edi+0x651549c2]
  412da2:	(bad)  
  412da4:	popa   
  412da5:	xor    al,0x7e
  412da7:	cmp    cl,BYTE PTR [esp+ecx*8+0x38]
  412dab:	xor    edx,DWORD PTR [ecx]
  412dad:	mov    es,edx
  412daf:	aas    
  412db0:	sbb    al,BYTE PTR [edx]
  412db2:	out    dx,eax
  412db3:	(bad)  
  412db4:	push   esp
  412db5:	push   0xffffff9e
  412db7:	(bad)
  412dba:	xchg   edx,eax
  412dbb:	push   edx
  412dbc:	outs   dx,DWORD PTR ds:[esi]
  412dbd:	out    0x3a,eax
  412dbf:	les    ebx,FWORD PTR [ecx+0x443083e8]
  412dc5:	inc    esp
  412dc6:	mov    ecx,0x47f7c431
  412dcb:	mov    edx,0xff196cb4
  412dd0:	or     cl,BYTE PTR ds:0x6061cc59
  412dd6:	mov    esp,0xd061cbb1
  412ddb:	sub    ah,bl
  412ddd:	daa    
  412dde:	jmp    FWORD PTR [ecx+eiz*2]
  412de1:	jae    0x412d65
  412de3:	and    ecx,DWORD PTR [eax+0x6a]
  412de6:	push   es
  412de7:	jp     0x412e32
  412de9:	and    bl,ch
  412deb:	xchg   esp,eax
  412dec:	(bad)  
  412ded:	cwde   
  412dee:	mov    WORD PTR [esi-0x32],ds
  412df1:	(bad)  
  412df2:	dec    ecx
  412df3:	xlat   BYTE PTR ds:[ebx]
  412df4:	fisttp QWORD PTR [esi+0x60]
  412df7:	imul   ebx,DWORD PTR [ebx+edx*4],0xffffffde
  412dfb:	es int 0x49
  412dfe:	pop    ss
  412dff:	push   ds
  412e00:	rol    DWORD PTR [edx+0x3b],0xee
  412e04:	loope  0x412e1d
  412e06:	stos   DWORD PTR es:[edi],eax
  412e07:	sub    DWORD PTR [ecx],esp
  412e09:	mov    al,ds:0x2920a07d
  412e0e:	inc    ecx
  412e0f:	or     eax,DWORD PTR [esi-0x20298cb2]
  412e15:	dec    edi
  412e16:	aad    0xb5
  412e18:	lock in al,dx
  412e1a:	inc    edx
  412e1b:	and    DWORD PTR [ebx-0x7a],edi
  412e1e:	neg    DWORD PTR [edi]
  412e20:	(bad)  
  412e22:	rol    DWORD PTR [edi-0x25d02abb],1
  412e28:	cdq    
  412e29:	rcl    BYTE PTR [eax],0x2b
  412e2c:	mov    dl,0xc6
  412e2e:	sti    
  412e2f:	mov    cl,0x8c
  412e31:	shl    edx,cl
  412e33:	and    BYTE PTR [esi+0x9621d6f],cl
  412e39:	sbb    DWORD PTR [edx],0x43bfe4cd
  412e3f:	ficomp DWORD PTR [ebx+0x4bd0deaf]
  412e45:	mov    ebp,0xd0e99464
  412e4a:	sbb    BYTE PTR [esp+ecx*2-0x43],bh
  412e4e:	sbb    ecx,edx
  412e50:	lea    eax,[edi+0x1f]
  412e53:	ins    DWORD PTR es:[edi],dx
  412e54:	lea    ecx,[eax]
  412e56:	pusha  
  412e57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e58:	ja     0x412e98
  412e5a:	push   eax
  412e5b:	cmp    eax,0xbfe58f91
  412e60:	or     al,0x86
  412e63:	dec    eax
  412e64:	imul   BYTE PTR [ebx+0x4ca25e54]
  412e6a:	pop    ebp
  412e6b:	mov    cs,WORD PTR [esi+0x51]
  412e6e:	adc    ch,BYTE PTR [esi]
  412e70:	repnz in eax,dx
  412e72:	dec    esp
  412e73:	push   es
  412e74:	test   DWORD PTR [edi],0x5d9e80d7
  412e7a:	dec    ebp
  412e7b:	inc    ebx
  412e7c:	pusha  
  412e7d:	jbe    0x412e8b
  412e7f:	test   DWORD PTR [eax],esi
  412e81:	stc    
  412e82:	jbe    0x412e88
  412e84:	inc    ebp
  412e85:	pop    esi
  412e86:	dec    ebp
  412e87:	dec    eax
  412e88:	je     0x412e42
  412e8a:	outs   dx,DWORD PTR ds:[esi]
  412e8b:	cmp    DWORD PTR [ebx],ebx
  412e8d:	repz push eax
  412e8f:	cmp    cl,BYTE PTR [edi+0x4044f068]
  412e95:	pop    ebx
  412e96:	inc    ebp
  412e97:	repz (bad) 
  412e99:	shl    BYTE PTR [esi],1
  412e9b:	cmp    DWORD PTR [edi],0x8658f319
  412ea1:	fcom   DWORD PTR [ebx-0x5e]
  412ea4:	sub    ebp,DWORD PTR [ebx+0x5682d346]
  412eaa:	push   esp
  412eab:	pop    ebp
  412eac:	mov    dh,BYTE PTR [edi+0x1df88501]
  412eb2:	mov    ebp,0xd1f1c31a
  412eb7:	mov    DWORD PTR [ecx],edi
  412eb9:	mov    BYTE PTR [eax+0x2c816eb1],dl
  412ebf:	or     DWORD PTR [ebp-0xc31826c],ebx
  412ec5:	adc    BYTE PTR [edx-0x27],ah
  412ec8:	xor    al,0xbf
  412eca:	and    ebx,DWORD PTR [esi]
  412ecc:	or     ch,ah
  412ece:	in     al,dx
  412ecf:	xchg   edx,eax
  412ed0:	push   edx
  412ed1:	push   ebp
  412ed2:	mov    ch,BYTE PTR [ecx-0x5f]
  412ed5:	sbb    ebx,edx
  412ed7:	bound  edx,QWORD PTR [ecx]
  412ed9:	adc    BYTE PTR es:[ecx],0x32
  412edd:	mov    esi,ss
  412edf:	mov    esi,DWORD PTR gs:[ebp+0x2a91b6ba]
  412ee6:	pusha  
  412ee7:	push   es
  412ee8:	jmp    0x412ef5
  412eea:	or     eax,0x9c588bde
  412eef:	out    0x2d,eax
  412ef1:	dec    eax
  412ef2:	mov    esp,0xce92dc83
  412ef7:	pusha  
  412ef8:	xchg   ebx,eax
  412ef9:	(bad)  
  412efa:	dec    edi
  412efb:	shld   DWORD PTR [edx+0x1de25ace],eax,cl
  412f02:	hlt    
  412f03:	mov    ecx,0x97954c98
  412f08:	clc    
  412f09:	(bad)  
  412f0a:	and    al,0xff
  412f0c:	sub    esp,eax
  412f0e:	outs   dx,DWORD PTR ds:[esi]
  412f0f:	div    esp
  412f11:	or     bl,BYTE PTR [edi+0x6a0a4a4e]
  412f17:	dec    eax
  412f18:	mov    esi,0x20622ab8
  412f1d:	adc    ch,ah
  412f1f:	xor    cl,BYTE PTR [eax+eax*2+0x34158ad8]
  412f26:	adc    BYTE PTR [eax],0x55
  412f29:	dec    ebp
  412f2a:	and    eax,0x18088936
  412f2f:	cmp    eax,0x23c02b1
  412f34:	(bad)  
  412f35:	or     bl,BYTE PTR [eax-0x66]
  412f38:	mov    ch,BYTE PTR [eax]
  412f3a:	add    eax,0x6f8916dd
  412f3f:	cmp    dl,cl
  412f41:	pop    ebp
  412f42:	imul   ebx,DWORD PTR [ecx-0x4c1a890a],0x901378ab
  412f4c:	push   eax
  412f4d:	inc    edi
  412f4e:	loopne 0x412f2a
  412f50:	dec    ecx
  412f51:	mov    cl,0x1c
  412f53:	shl    DWORD PTR [esi-0x14],0x19
  412f57:	dec    esi
  412f58:	dec    ebp
  412f59:	inc    eax
  412f5a:	pop    edx
  412f5b:	pop    ecx
  412f5c:	inc    ecx
  412f5d:	sbb    edx,DWORD PTR [esi+0x4d]
  412f60:	sub    edx,DWORD PTR [eax+0x5f]
  412f63:	jle    0x412f65
  412f65:	pop    edx
  412f66:	dec    edx
  412f67:	inc    ecx
  412f68:	shr    bh,1
  412f6a:	sbb    ch,BYTE PTR [edi+ecx*1]
  412f6d:	ja     0x412fba
  412f6f:	add    ebx,DWORD PTR [ebx+0x6d]
  412f72:	imul   esi,DWORD PTR [ebp+0x33],0x9b2f3036
  412f79:	xor    eax,DWORD PTR [ecx+0x25]
  412f7c:	(bad)  
  412f7d:	imul   eax
  412f7f:	dec    ebp
  412f80:	add    DWORD PTR [bx+si+0x77],edx
  412f84:	(bad)  
  412f85:	outs   dx,DWORD PTR ds:[esi]
  412f86:	dec    eax
  412f87:	mov    dl,0x82
  412f89:	push   cs
  412f8a:	popa   
  412f8b:	jb     0x412faa
  412f8d:	mov    dl,0x97
  412f8f:	jnp    0x412f13
  412f91:	loop   0x412f22
  412f93:	in     al,0x75
  412f95:	jecxz  0x412ffc
  412f97:	jmp    0xf74a27aa
  412f9c:	push   cs
  412f9d:	std    
  412f9e:	add    esp,ebx
  412fa0:	add    DWORD PTR [edx-0x1d],esp
  412fa3:	adc    al,dh
  412fa5:	inc    edi
  412fa6:	test   BYTE PTR [edx+0x48],cl
  412fa9:	arpl   WORD PTR [ebx],si
  412fab:	push   0x4785f180
  412fb0:	stos   DWORD PTR es:[edi],eax
  412fb1:	(bad)  
  412fb2:	fstp   QWORD PTR [esi-0x38]
  412fb5:	add    ebp,edi
  412fb7:	push   edi
  412fb8:	hlt    
  412fb9:	mov    eax,0x7a3daeaf
  412fbe:	push   0xfffffff7
  412fc0:	mov    bl,0x6d
  412fc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fc3:	sbb    BYTE PTR [edi],al
  412fc5:	je     0x412fc3
  412fc7:	jmp    0x4684893e
  412fcc:	dec    esp
  412fcd:	scas   al,BYTE PTR es:[edi]
  412fce:	mov    bh,dl
  412fd0:	add    ebp,0x6e
  412fd3:	in     al,0x1c
  412fd5:	ja     0x413047
  412fd7:	in     al,0x9c
  412fd9:	or     BYTE PTR [ebp-0x53385cfa],ah
  412fdf:	(bad)  [edx+ebp*1]
  412fe2:	xor    bh,bl
  412fe4:	into   
  412fe5:	add    DWORD PTR [edx],0xc4fe2e49
  412feb:	cmp    al,0x77
  412fed:	sub    ecx,DWORD PTR [ecx]
  412fef:	pusha  
  412ff0:	xchg   BYTE PTR [esi],cl
  412ff2:	add    esi,DWORD PTR [ecx-0x1ac93729]
  412ff8:	push   es
  412ff9:	fstp   DWORD PTR [ecx-0x21]
  412ffc:	pop    ss
  412ffd:	retf   
  412ffe:	(bad)  
  412fff:	ins    BYTE PTR es:[edi],dx
  413000:	cmc    
  413001:	mov    cl,BYTE PTR [edi+edx*8]
  413004:	into   
  413005:	pusha  
  413006:	(bad)  
  413008:	add    cl,BYTE PTR [eax+0x58e5f03]
  41300e:	inc    edi
  41300f:	cmp    eax,0x891d97e
  413014:	iret   
  413015:	sub    al,0xc
  413017:	retf   0x6d03
  41301a:	je     0x413043
  41301c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41301d:	pop    esp
  41301e:	pop    eax
  41301f:	ds sub al,0x8
  413022:	push   ss
  413023:	dec    ebp
  413024:	cdq    
  413025:	ret    0x1dce
  413028:	pop    edi
  413029:	add    bh,dh
  41302b:	xor    edi,DWORD PTR [esp+ebx*8]
  41302e:	fs xchg ecx,eax
  413030:	pop    eax
  413031:	and    BYTE PTR ds:[ecx],al
  413034:	js     0x41304f
  413036:	pop    es
  413037:	jne    0x41305a
  413039:	imul   ebx,DWORD PTR [ebx*2-0x3c3b0dd0],0x73
  413041:	leave  
  413042:	sbb    ebp,DWORD PTR [ebx+0x78]
  413045:	jle    0x412fe6
  413047:	push   ds
  413048:	int    0xcd
  41304a:	clts   
  41304c:	or     edi,ecx
  41304e:	in     eax,0xed
  413050:	xchg   bl,dh
  413052:	push   edx
  413053:	mov    ebx,0x8964430f
  413058:	pop    esi
  413059:	pop    ds
  41305a:	ds sbb eax,0x236dc72
  413060:	jl     0x413043
  413062:	ins    DWORD PTR es:[edi],dx
  413063:	add    ecx,DWORD PTR [edi+0x524f3802]
  413069:	or     eax,0x1eb6138b
  41306e:	dec    ebp
  41306f:	aam    0xfd
  413071:	adc    DWORD PTR [esi+eax*2+0x104913a],eax
  413078:	pop    ss
  413079:	and    al,0x11
  41307b:	push   edx
  41307c:	repz loop 0x41304c
  41307f:	les    ecx,FWORD PTR ds:0xb43885f1
  413085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413086:	test   al,0x93
  413088:	inc    esp
  413089:	std    
  41308a:	cs pop ss
  41308c:	push   ebx
  41308d:	je     0x41308f
  41308f:	imul   esi,DWORD PTR [edi-0x739aef89],0xeb8b340d
  413099:	sub    al,0x42
  41309b:	cmp    bh,bl
  41309d:	stos   DWORD PTR es:[edi],eax
  41309e:	xor    al,0x58
  4130a0:	and    al,0xa
  4130a2:	(bad)  
  4130a3:	mov    edi,0x644a226b
  4130a8:	dec    ebp
  4130a9:	pop    ebx
  4130aa:	or     eax,0x8ef54a1d
  4130af:	ds dec eax
  4130b1:	gs popa 
  4130b3:	xor    BYTE PTR [ebp+0x79],ch
  4130b6:	xchg   BYTE PTR [ecx+0x3d610f41],al
  4130bc:	outs   dx,DWORD PTR ds:[esi]
  4130bd:	push   0x46d6716b
  4130c2:	sub    DWORD PTR [edx],edx
  4130c4:	or     DWORD PTR [ecx+0x63],edi
  4130c7:	jo     0x413143
  4130c9:	cli    
  4130ca:	xor    al,0xc8
  4130cc:	mov    ah,BYTE PTR [edi]
  4130ce:	or     dh,BYTE PTR ds:0x68cee48
  4130d4:	sub    eax,0xf5b96a40
  4130d9:	sub    DWORD PTR [edx+0x60],eax
  4130dc:	in     eax,dx
  4130dd:	inc    eax
  4130de:	pop    ds
  4130df:	push   ebp
  4130e0:	ds xor eax,0xecc80850
  4130e6:	add    eax,0x4e2ccc4e
  4130eb:	jae    0x4130d5
  4130ed:	fld    TBYTE PTR [ebp+esi*4+0x53562542]
  4130f4:	lods   al,BYTE PTR ds:[esi]
  4130f5:	dec    ecx
  4130f6:	jge    0x4130fe
  4130f8:	xchg   edi,eax
  4130f9:	inc    ebx
  4130fa:	mov    es,eax
  4130fc:	test   al,0x35
  4130fe:	jns    0x41316b
  413100:	cli    
  413101:	arpl   WORD PTR [edi+0x4b4ce55d],cx
  413107:	inc    edx
  413108:	cld    
  413109:	and    DWORD PTR [ebp-0x3e],esi
  41310c:	test   ah,0x4b
  41310f:	or     DWORD PTR [ebx],0xffffffc4
  413112:	outs   dx,BYTE PTR ds:[esi]
  413113:	add    edi,eax
  413115:	je     0x41314a
  413117:	and    eax,0x69cf2348
  41311c:	and    cl,bl
  41311e:	pusha  
  41311f:	sub    eax,0xc72d77c0
  413124:	data16 ins BYTE PTR es:[edi],dx
  413126:	into   
  413127:	xor    ecx,ecx
  413129:	dec    edx
  41312a:	add    dh,cl
  41312c:	outs   dx,DWORD PTR ds:[esi]
  41312d:	add    cl,bh
  41312f:	fs or  cl,bh
  413132:	inc    ecx
  413133:	sar    DWORD PTR [edi+edx*8],1
  413136:	(bad)  
  413137:	fild   DWORD PTR [eax-0x7b]
  41313a:	xlat   BYTE PTR ds:[ebx]
  41313b:	gs add eax,0x5dd996ce
  413141:	imul   ebp,edx,0x32461def
  413147:	mov    al,ds:0x702dbfd5
  41314c:	cdq    
  41314d:	dec    ebp
  41314e:	inc    edx
  41314f:	push   ss
  413150:	push   edx
  413151:	jo     0x4130e0
  413153:	cs sub eax,0x2742016f
  413159:	cmp    al,0x57
  41315b:	push   ds
  41315c:	(bad)  [ebp+ecx*1+0x45004b16]
  413163:	pop    edi
  413164:	ret    
  413165:	cmp    ah,dh
  413167:	jmp    0x485c3dff
  41316c:	stc    
  41316d:	push   edi
  41316e:	sti    
  41316f:	mov    WORD PTR [edi-0x7e],es
  413172:	loope  0x4131a0
  413174:	mov    edi,DWORD PTR [ebx+0x7d]
  413177:	aad    0x92
  413179:	mov    edi,0x40811ce3
  41317e:	sbb    DWORD PTR [ebx],ecx
  413180:	call   FWORD PTR [eax-0x80]
  413183:	(bad)  
  413184:	in     al,dx
  413185:	outs   dx,DWORD PTR ds:[esi]
  413186:	push   ds
  413187:	mov    ebx,DWORD PTR [ebx-0x27ea7418]
  41318d:	cmp    BYTE PTR [edi+edi*1-0x76],0xf3
  413192:	pop    ebx
  413193:	arpl   WORD PTR [ecx-0x24],si
  413196:	out    0x37,al
  413198:	out    0x81,al
  41319a:	jno    0x413139
  41319c:	in     eax,dx
  41319d:	mov    dh,0xee
  41319f:	jle    0x4131af
  4131a1:	adc    DWORD PTR [ebx+0x16],edx
  4131a4:	inc    ebx
  4131a5:	sbb    eax,0x70817f05
  4131aa:	sub    DWORD PTR [edi],0xc544f938
  4131b0:	pop    edi
  4131b1:	je     0x4131d2
  4131b3:	bnd call 0x26bd429c
  4131b9:	stos   DWORD PTR es:[edi],eax
  4131ba:	ret    
  4131bb:	fsub   DWORD PTR [ecx]
  4131bd:	fimul  WORD PTR [edx+0x1665ef0a]
  4131c3:	daa    
  4131c4:	lahf   
  4131c5:	sub    DWORD PTR [esi],0x42170ec3
  4131cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131cc:	ror    BYTE PTR ds:0xe0f454ea,0x3b
  4131d3:	cmp    al,0xcc
  4131d5:	jmp    0x4b484e61
  4131da:	inc    esp
  4131db:	or     edi,DWORD PTR [esi-0x2c697601]
  4131e1:	push   esi
  4131e2:	das    
  4131e3:	mov    bl,BYTE PTR ds:0xbc0b63f3
  4131e9:	pop    es
  4131ea:	sbb    eax,0x3d469e2d
  4131ef:	jecxz  0x413199
  4131f1:	mov    al,0x56
  4131f3:	mov    bh,0xef
  4131f5:	jnp    0x41317b
  4131f7:	dec    ebx
  4131f8:	mov    WORD PTR [ebp+0x7e],ss
  4131fb:	ret    
  4131fc:	aaa    
  4131fd:	xor    eax,edx
  4131ff:	je     0x41321d
  413201:	push   DWORD PTR [eax]
  413203:	sub    eax,0x1b7d1f35
  413208:	(bad)  
  413209:	shl    DWORD PTR [ecx-0xa],1
  41320c:	cmp    ecx,DWORD PTR [esi-0x18d2ac01]
  413212:	adc    eax,0xffc0cca
  413217:	and    eax,0x1048eb62
  41321c:	push   ebp
  41321d:	adc    al,al
  41321f:	mov    bl,0xd9
  413221:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413222:	push   eax
  413223:	cmc    
  413224:	out    dx,al
  413225:	xchg   ecx,eax
  413226:	cwde   
  413227:	pop    edi
  413228:	push   esp
  413229:	inc    esi
  41322a:	push   ebx
  41322b:	(bad)  
  41322c:	std    
  41322d:	xchg   DWORD PTR [edi+0x1890e70b],edx
  413233:	push   es
  413234:	or     dh,bl
  413236:	add    DWORD PTR [eax+eiz*2-0x44],ebx
  41323a:	pop    es
  41323b:	mov    ebp,0xf986af0f
  413240:	fucomi st,st(7)
  413242:	ror    BYTE PTR [ecx+0xfcb6b1a],cl
  413248:	mov    al,ah
  41324a:	or     al,0xeb
  41324c:	adc    esi,ebp
  41324e:	sbb    ebx,esi
  413250:	push   ds
  413251:	dec    BYTE PTR [edi]
  413253:	and    ebp,DWORD PTR [edx]
  413255:	or     ch,BYTE PTR [ebp-0x9]
  413258:	inc    edx
  413259:	jae    0x41325d
  41325b:	sbb    DWORD PTR [bp+si-0x7a],ebp
  41325f:	es ret 0xf5a9
  413263:	sub    ebx,edx
  413265:	cdq    
  413266:	in     al,0x33
  413268:	out    0xfb,al
  41326a:	or     edi,DWORD PTR [edx+0x7d]
  41326d:	aas    
  41326e:	dec    eax
  41326f:	ss mov ecx,0x8a2bdd89
  413275:	jmp    0x563e93bd
  41327a:	shl    BYTE PTR [eax+0x203d484f],0x4e
  413281:	inc    esp
  413282:	mov    di,WORD PTR [esi+0x41]
  413286:	dec    ecx
  413287:	imul   ebx,DWORD PTR [esi],0x13
  41328a:	retf   0x225c
  41328d:	pop    ds
  41328e:	dec    esi
  41328f:	and    ah,BYTE PTR [edi]
  413291:	mov    edx,0x60cdded
  413296:	(bad)  
  413297:	jge    0x413290
  413299:	sbb    BYTE PTR [ecx+eiz*4-0x53],bh
  41329d:	aas    
  41329e:	mov    esi,0x98b3ee39
  4132a3:	or     BYTE PTR ds:0x125c2e4,ah
  4132a9:	nop
  4132aa:	push   ds
  4132ab:	sbb    al,0x8b
  4132ad:	mov    bh,0xfc
  4132af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132b0:	pop    esi
  4132b1:	rcr    BYTE PTR [eax],cl
  4132b3:	pop    ecx
  4132b4:	stc    
  4132b5:	das    
  4132b6:	enter  0x4a57,0xa7
  4132ba:	ds icebp 
  4132bc:	adc    BYTE PTR [edi+0x561e88f4],ch
  4132c2:	pop    esi
  4132c3:	stc    
  4132c4:	neg    DWORD PTR [esi]
  4132c6:	cwde   
  4132c7:	pusha  
  4132c8:	inc    eax
  4132c9:	sub    eax,0x740cf7b0
  4132ce:	or     DWORD PTR [edi+eax*1],ecx
  4132d1:	add    DWORD PTR [ebp-0x5b],0x5f
  4132d5:	push   ebp
  4132d6:	mov    WORD PTR [ecx+0x3ba15425],ss
  4132dc:	frstor [ebx]
  4132de:	ret    
  4132df:	or     al,0x77
  4132e1:	and    esp,DWORD PTR [eax]
  4132e3:	outs   dx,BYTE PTR ds:[esi]
  4132e4:	pop    ecx
  4132e5:	or     al,0xb0
  4132e7:	jecxz  0x41327a
  4132e9:	push   esi
  4132ea:	sub    eax,DWORD PTR [edx+edi*4]
  4132ed:	loop   0x41333c
  4132ef:	xchg   ecx,ebx
  4132f1:	pusha  
  4132f2:	cmp    ebx,ebx
  4132f4:	add    edi,ebp
  4132f6:	fistp  DWORD PTR [edx]
  4132f8:	int    0x9
  4132fa:	mov    ch,BYTE PTR [esp+edi*4+0x42a347e4]
  413301:	jmp    0xb0175f21
  413306:	pop    edi
  413307:	xor    DWORD PTR [ecx],edi
  413309:	and    eax,0x23c30595
  41330e:	pop    esi
  41330f:	inc    edx
  413310:	loop   0x413310
  413312:	sbb    al,0x83
  413314:	lock call 0xb287:0x7c5a2e0d
  41331c:	xchg   ebp,eax
  41331d:	or     al,0xe8
  41331f:	lock push ebx
  413321:	pop    ds
  413322:	cmp    BYTE PTR [ebx],bl
  413324:	stos   BYTE PTR es:[edi],al
  413325:	adc    al,BYTE PTR [ecx+0x53aa7700]
  41332b:	scas   eax,DWORD PTR es:[edi]
  41332c:	adc    al,0xf
  41332e:	aaa    
  41332f:	mov    ah,BYTE PTR [ebp-0x60]
  413332:	cmp    ch,BYTE PTR [ebx+0x20766d35]
  413338:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41333a:	arpl   WORD PTR [esi+0x35308892],dx
  413340:	bound  esi,QWORD PTR [ebx+0x79e1f8a0]
  413346:	mov    DWORD PTR [eax+0x6ff9320],esp
  41334c:	or     BYTE PTR [esi+ecx*8],al
  41334f:	lea    edi,[edi]
  413351:	adc    BYTE PTR [ebx+0x4e455fad],dh
  413357:	stos   DWORD PTR es:[edi],eax
  413358:	mov    edi,0xb6f01633
  41335d:	inc    ecx
  41335e:	xlat   BYTE PTR ds:[ebx]
  41335f:	test   eax,0x881860d5
  413364:	xchg   esp,esi
  413366:	cmp    ebp,DWORD PTR [edi+0xf]
  413369:	add    BYTE PTR [edi],dl
  41336b:	cmp    DWORD PTR [ebp+0x11],esi
  41336e:	xchg   DWORD PTR [ebx+0x45],esp
  413371:	ins    BYTE PTR es:[edi],dx
  413372:	add    BYTE PTR [ebp+0x18f09f6e],bh
  413378:	cmp    bh,0x80
  41337b:	push   0x61
  41337d:	lock and ebp,ecx
  413380:	or     al,0x8b
  413382:	pop    ss
  413383:	call   DWORD PTR [edx]
  413385:	dec    ebx
  413386:	xchg   ebp,eax
  413387:	fdivr  st,st(7)
  413389:	dec    ecx
  41338a:	inc    eax
  41338b:	push   esp
  41338c:	(bad)  
  41338d:	repnz sub edi,DWORD PTR [edx]
  413390:	lea    ebp,[ecx-0x46]
  413393:	xchg   esi,esp
  413395:	imul   esi,DWORD PTR [ecx+0x5c],0x435fd320
  41339c:	cmp    BYTE PTR [esi+0x10],bl
  41339f:	push   cs
  4133a0:	sti    
  4133a1:	xor    eax,0xa0556deb
  4133a6:	popa   
  4133a7:	sbb    al,0x90
  4133a9:	pop    eax
  4133aa:	rcr    ch,0x5
  4133ad:	add    esi,edx
  4133af:	adc    eax,ebx
  4133b1:	add    esp,ebx
  4133b3:	lea    ebx,[esi-0x34]
  4133b6:	cmp    eax,0x460bd545
  4133bb:	pop    ecx
  4133bc:	add    cl,cl
  4133be:	daa    
  4133bf:	shr    DWORD PTR [esi-0x16],1
  4133c2:	and    al,BYTE PTR [ecx+0xf]
  4133c5:	scas   al,BYTE PTR es:[edi]
  4133c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133c7:	sub    ebx,DWORD PTR [edx]
  4133c9:	fcom   st(7)
  4133cb:	push   ss
  4133cc:	test   DWORD PTR [ebp+0x2ccbb397],ecx
  4133d2:	mov    BYTE PTR [edx],ch
  4133d4:	fnstsw WORD PTR [edi+ecx*4+0xd0e565a]
  4133db:	gs popa 
  4133dd:	(bad)  
  4133de:	pop    edx
  4133df:	lods   al,BYTE PTR ds:[esi]
  4133e0:	or     eax,0x42a4708
  4133e5:	or     al,0xab
  4133e7:	and    al,0x12
  4133e9:	das    
  4133ea:	inc    ebx
  4133eb:	xor    al,BYTE PTR [edi]
  4133ed:	out    dx,eax
  4133ee:	stc    
  4133ef:	pop    edx
  4133f0:	adc    ch,BYTE PTR [ecx-0x372158d2]
  4133f6:	cmp    ebx,esi
  4133f8:	jge    0x4133a9
  4133fa:	sub    eax,0xdc5362e
  4133ff:	ja     0x41342d
  413401:	(bad)  
  413403:	rol    DWORD PTR [eax],0xac
  413406:	cmp    DWORD PTR [edi],ebx
  413408:	inc    esp
  413409:	fisttp WORD PTR [edx-0x41df2464]
  41340f:	cmp    DWORD PTR [esi-0x7a],ecx
  413412:	sbb    eax,0xda82c999
  413417:	dec    ebx
  413418:	gs pop ss
  41341a:	sbb    eax,0x5c5761ad
  413420:	or     al,0x88
  413422:	fcmovne st,st(4)
  413424:	sbb    BYTE PTR [esi+ebp*1-0x17],cl
  413428:	mov    edx,eax
  41342a:	pushf  
  41342b:	push   ss
  41342c:	scas   al,BYTE PTR es:[edi]
  41342d:	push   edi
  41342e:	nop
  41342f:	add    DWORD PTR [ecx+0x3817302f],ebp
  413435:	pop    ecx
  413436:	dec    edi
  413437:	sbb    edi,0xffffffb4
  41343a:	pop    ds
  41343b:	adc    al,ch
  41343d:	mov    dh,0xe4
  41343f:	push   edi
  413440:	xchg   esi,eax
  413441:	cmp    DWORD PTR [ecx],ebx
  413443:	mov    al,0x50
  413445:	fist   WORD PTR [eax+0x2c0dd285]
  41344b:	and    edx,eax
  41344d:	fmul   DWORD PTR [edx]
  41344f:	sub    BYTE PTR [ecx+0x31],0x33
  413453:	pop    eax
  413454:	in     al,dx
  413455:	dec    esi
  413456:	mov    dh,BYTE PTR [esi]
  413458:	mov    dl,BYTE PTR [eax-0x5d]
  41345b:	jg     0x413479
  41345d:	leave  
  41345e:	xchg   ecx,eax
  41345f:	out    0x8b,eax
  413461:	(bad)  
  413462:	sub    ecx,DWORD PTR [eax+0x335a4d4f]
  413468:	fidiv  WORD PTR [edi]
  41346a:	jg     0x41343f
  41346c:	push   ebp
  41346d:	adc    ah,BYTE PTR [edx]
  41346f:	or     DWORD PTR [edi-0x1ae6cdad],edx
  413475:	xor    edi,DWORD PTR [edx]
  413477:	push   cs
  413478:	dec    ebx
  413479:	dec    ebx
  41347a:	sbb    eax,DWORD PTR [ecx+0x13]
  41347d:	dec    ebp
  41347e:	sbb    esi,DWORD PTR [esi]
  413480:	inc    ebx
  413481:	aas    
  413482:	xlat   BYTE PTR ds:[ebx]
  413483:	out    0xf7,eax
  413485:	test   DWORD PTR [bp+si],ebp
  413488:	push   ecx
  413489:	clc    
  41348a:	adc    BYTE PTR [edi],al
  41348c:	(bad)  
  41348d:	sbb    esi,DWORD PTR [edi+eax*2+0x22]
  413491:	add    eax,0x39ce9b80
  413496:	mov    cl,0x5e
  413498:	mov    al,0x4d
  41349a:	mov    esp,0x525107dc
  41349f:	dec    esi
  4134a0:	adc    al,cl
  4134a2:	repnz add DWORD PTR [eax],eax
  4134a5:	dec    ebp
  4134a6:	mov    ecx,0x82e8e6c4
  4134ab:	or     ecx,DWORD PTR [ebp+0x43011e36]
  4134b1:	sbb    al,0x58
  4134b3:	add    al,0xeb
  4134b5:	out    0xe6,eax
  4134b7:	ret    
  4134b8:	inc    edi
  4134b9:	sbb    al,0xe5
  4134bb:	clc    
  4134bc:	sbb    ebx,DWORD PTR [eax+edx*2+0x1f]
  4134c0:	rol    DWORD PTR [edi+0x41e96b94],1
  4134c6:	add    DWORD PTR [ecx+0x5782ca77],edx
  4134cc:	xor    ah,BYTE PTR [edx+edx*8+0x2972d134]
  4134d3:	sbb    ah,BYTE PTR [ebx]
  4134d5:	ret    
  4134d6:	pop    esi
  4134d7:	cmp    ecx,DWORD PTR [edi+0x2b]
  4134da:	mov    BYTE PTR [esi],bh
  4134dc:	fdiv   DWORD PTR [edi]
  4134de:	dec    ebp
  4134df:	jmp    0x9737df6
  4134e4:	test   al,0x45
  4134e6:	ds mov esp,0xe5d18f5e
  4134ec:	jle    0x413551
  4134ee:	mov    fs,WORD PTR [edi]
  4134f0:	jnp    0x41347f
  4134f2:	xchg   esi,eax
  4134f3:	dec    BYTE PTR [ecx]
  4134f5:	xor    eax,0x3c68f8f9
  4134fa:	stos   BYTE PTR es:[edi],al
  4134fb:	add    BYTE PTR [ebx+0x23],al
  4134fe:	and    BYTE PTR [ebp+0x52895620],bl
  413504:	xchg   edx,eax
  413505:	stos   BYTE PTR es:[edi],al
  413506:	add    DWORD PTR [ecx+0x2714701a],esp
  41350c:	jbe    0x413519
  41350e:	nop
  41350f:	cld    
  413510:	xchg   ebp,eax
  413511:	jo     0x4134b7
  413513:	(bad)  
  413514:	hlt    
  413515:	or     bl,ch
  413517:	adc    al,0x87
  413519:	in     eax,0x88
  41351b:	xchg   ebx,eax
  41351c:	in     al,dx
  41351d:	inc    eax
  41351e:	ficomp DWORD PTR [edi-0x2b]
  413521:	leave  
  413522:	dec    eax
  413523:	add    bh,cl
  413525:	pop    edx
  413526:	dec    eax
  413527:	fs add eax,0x125d539e
  41352d:	pop    ebx
  41352e:	sub    al,0xb4
  413530:	push   ebp
  413531:	push   cs
  413532:	mov    WORD PTR [ebp-0x5f],es
  413535:	jmp    0x229f:0xf2ffb7d6
  41353c:	push   esp
  41353d:	jl     0x41352e
  41353f:	add    BYTE PTR [ebx+0x7],dl
  413542:	mov    esp,0x26d9c073
  413547:	cld    
  413548:	pushf  
  413549:	addr16 xchg ebp,eax
  41354b:	(bad)  
  41354c:	out    0x71,eax
  41354e:	mov    DWORD PTR [esi],esp
  413550:	mov    ds:0x5353d71c,al
  413555:	jmp    0x4134f5
  413557:	je     0x41353e
  413559:	jno    0x413518
  41355b:	push   edi
  41355c:	(bad)  
  41355d:	adc    esp,DWORD PTR [eax-0x3c]
  413560:	add    BYTE PTR [ecx],cl
  413562:	sbb    al,0x57
  413564:	arpl   WORD PTR [edx+0x2d0febcc],di
  41356a:	inc    edi
  41356b:	mov    BYTE PTR ds:0x4ae5d58c,0xc1
  413572:	dec    esi
  413573:	pop    ss
  413574:	inc    ebx
  413575:	inc    esi
  413576:	pop    ecx
  413577:	loope  0x4135d3
  413579:	jns    0x413508
  41357b:	mov    edi,0x2eb4ac72
  413580:	pop    ss
  413581:	sbb    ch,BYTE PTR [edx+edx*1]
  413584:	push   ss
  413585:	popf   
  413586:	add    al,0xd1
  413588:	das    
  413589:	xchg   ecx,eax
  41358a:	stc    
  41358b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41358c:	adc    al,0xc9
  41358e:	cdq    
  41358f:	pop    esi
  413590:	xor    ebp,ecx
  413592:	push   cs
  413593:	(bad)  
  413594:	jmp    FWORD PTR [ecx]
  413596:	xchg   edi,eax
  413597:	mov    esp,0x6b145872
  41359c:	cld    
  41359d:	sbb    ebx,ebp
  41359f:	pop    ecx
  4135a0:	out    0x26,eax
  4135a2:	push   esp
  4135a3:	fwait
  4135a4:	xchg   esi,eax
  4135a5:	push   esi
  4135a6:	out    0xc1,eax
  4135a8:	dec    edx
  4135a9:	push   ds
  4135aa:	out    0xe,eax
  4135ac:	xor    eax,0x30a9c9b7
  4135b1:	adc    dl,BYTE PTR [ebx-0x73]
  4135b4:	cmp    bl,cl
  4135b6:	pusha  
  4135b7:	pop    ebx
  4135b8:	add    al,0x8b
  4135ba:	shr    ecx,1
  4135bc:	pop    ebp
  4135bd:	(bad)  
  4135be:	mov    ebx,0xf7448ef9
  4135c3:	push   ss
  4135c4:	pop    esp
  4135c5:	pop    edx
  4135c6:	xor    esi,DWORD PTR [ebp-0x30]
  4135c9:	stos   BYTE PTR es:[edi],al
  4135ca:	bound  ecx,QWORD PTR [esp+0x5b]
  4135ce:	sub    al,0x83
  4135d0:	mul    ah
  4135d2:	push   ecx
  4135d3:	push   eax
  4135d4:	sbb    dl,bh
  4135d6:	loope  0x413624
  4135d8:	out    0x13,al
  4135da:	fmul   QWORD PTR [edx-0x13238e72]
  4135e0:	sub    al,0xd
  4135e2:	(bad)  
  4135e3:	jmp    0x827f2fca
  4135e8:	rol    BYTE PTR [ebx+ebx*2+0x13],1
  4135ec:	mov    ds:0xbe23fc4c,eax
  4135f1:	pop    ebp
  4135f2:	shl    BYTE PTR [edi+0x10b8fd44],cl
  4135f8:	mov    ds:0xf647c3d2,eax
  4135fd:	adc    eax,0x9de25f8a
  413602:	fucomp st(2)
  413604:	mov    ds:0xcdfc41c1,al
  413609:	inc    edi
  41360a:	jecxz  0x41362d
  41360c:	test   edi,ecx
  41360e:	mov    ds:0x3f8d6611,al
  413613:	xchg   esp,eax
  413614:	ins    BYTE PTR es:[edi],dx
  413615:	push   esi
  413616:	add    eax,0xfcffcb11
  41361b:	mov    al,0x70
  41361d:	xor    DWORD PTR [esp+eax*2-0x55],ebp
  413621:	and    edx,DWORD PTR [ecx+0x16414b76]
  413627:	jl     0x413610
  413629:	fs sti 
  41362b:	jmp    0x4135bb
  41362d:	cmp    eax,0x25931b68
  413632:	pop    esi
  413633:	mov    ch,0x51
  413635:	jnp    0x4135d0
  413637:	lahf   
  413638:	inc    ebp
  413639:	push   edi
  41363a:	ret    
  41363b:	jne    0x41363f
  41363d:	inc    ecx
  41363e:	xlat   BYTE PTR ds:[ebx]
  41363f:	pop    es
  413640:	jg     0x981a7f13
  413646:	pop    ebp
  413647:	add    eax,0x5c58ae2f
  41364c:	adc    DWORD PTR [eax-0x2c],ebp
  41364f:	fsub   QWORD PTR [ecx-0x1e08cdba]
  413655:	(bad)
  413658:	mov    BYTE PTR [edi-0x1c4014bd],al
  41365e:	sub    bh,BYTE PTR es:[ebx-0x27d5ed02]
  413665:	pop    esp
  413666:	das    
  413667:	mov    esp,0x3e09ae73
  41366c:	push   ebx
  41366d:	mov    ah,0x17
  41366f:	jae    0x4135f1
  413671:	inc    esp
  413672:	es je  0x4136a4
  413675:	xchg   edi,eax
  413676:	pop    ebx
  413677:	jmp    0x62a9:0x49e21d8f
  41367e:	out    dx,al
  41367f:	or     ch,ah
  413681:	addr16 or al,0x62
  413684:	sbb    al,0x5e
  413686:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413687:	and    eax,0x5af39b0c
  41368c:	sub    ebx,ebp
  41368e:	sbb    DWORD PTR [edx],ebp
  413690:	sub    DWORD PTR [esi],esp
  413692:	mov    DWORD PTR [edi-0x6a2ecb23],ebx
  413698:	loop   0x4136f4
  41369a:	popf   
  41369b:	sbb    eax,0x292b4724
  4136a0:	mov    WORD PTR [edi+edx*8],es
  4136a3:	mov    edx,0x4597ef31
  4136a8:	xchg   DWORD PTR [eax+eiz*2-0x26],edx
  4136ac:	push   ss
  4136ad:	or     DWORD PTR [eax-0x562ba048],ebp
  4136b3:	repz pop esp
  4136b5:	or     DWORD PTR [edi+0x69c7c189],0x26
  4136bc:	and    ebx,DWORD PTR ds:0xd8ce03c9
  4136c2:	jns    0x4136e9
  4136c4:	mov    dl,0x1d
  4136c6:	int    0x85
  4136c8:	inc    ecx
  4136c9:	push   esi
  4136ca:	rol    BYTE PTR [esi+0x9],cl
  4136cd:	jbe    0x413674
  4136cf:	sub    ecx,DWORD PTR [esi+0x7d]
  4136d2:	sbb    ah,bh
  4136d4:	push   esi
  4136d5:	mov    edi,es
  4136d7:	push   ds
  4136d8:	(bad)  
  4136d9:	rcl    DWORD PTR [eax-0x2f],1
  4136dc:	adc    eax,0xfd5840a5
  4136e1:	push   es
  4136e2:	mov    dh,0x24
  4136e4:	jge    0x41366f
  4136e6:	sbb    eax,0xcd2451dd
  4136eb:	adc    bh,BYTE PTR [edx+0x1fd33cd6]
  4136f1:	jae    0x413752
  4136f3:	jle    0x4136b2
  4136f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136f6:	sub    ecx,DWORD PTR [esi-0x58]
  4136f9:	cs stos DWORD PTR es:[edi],eax
  4136fb:	xchg   esi,eax
  4136fc:	mov    al,0x30
  4136fe:	mov    cl,0xab
  413700:	or     eax,0x9e5213bf
  413705:	jnp    0x413759
  413707:	add    esp,DWORD PTR [ebx+eiz*1+0x4b26b4b9]
  41370e:	ret    0x7221
  413711:	stos   BYTE PTR es:[edi],al
  413712:	pop    ecx
  413713:	xchg   esi,eax
  413714:	dec    edi
  413715:	fnstcw WORD PTR [edx-0x4f]
  413718:	adc    eax,0xad54b02e
  41371d:	inc    ebp
  41371e:	and    edx,esi
  413720:	or     DWORD PTR [ebx+0x50],0xaa78a222
  413727:	inc    ebx
  413728:	mov    bh,0x68
  41372a:	push   ds
  41372b:	cli    
  41372c:	mov    BYTE PTR [edx+0x4c0ff15b],dl
  413732:	cdq    
  413733:	shl    cx,1
  413736:	sbb    al,0x25
  413738:	setne  BYTE PTR [ecx+0x578de790]
  41373f:	and    bl,BYTE PTR [ecx]
  413741:	daa    
  413742:	iret   
  413743:	xchg   DWORD PTR [eax+0x1c],edx
  413746:	cwde   
  413747:	cs lahf 
  413749:	push   ss
  41374a:	out    0x19,eax
  41374c:	clc    
  41374d:	pop    edi
  41374e:	sbb    DWORD PTR [esi+0x6fdf901c],0x4ba117d6
  413758:	pop    esp
  413759:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41375a:	mov    edx,DWORD PTR [ebx-0x79]
  41375d:	aam    0x2a
  41375f:	pop    ss
  413760:	das    
  413761:	dec    ebx
  413762:	shr    BYTE PTR [esi],1
  413764:	lea    esi,[ebx-0x73]
  413767:	inc    ecx
  413768:	xor    BYTE PTR [ecx+ebx*1+0x73],ah
  41376c:	daa    
  41376d:	push   eax
  41376e:	and    DWORD PTR [edx],eax
  413770:	test   DWORD PTR [ecx],ebp
  413772:	sub    DWORD PTR [edx],ebp
  413774:	pop    ss
  413775:	mov    al,ds:0x8c888b06
  41377a:	in     al,dx
  41377b:	push   cs
  41377c:	or     ebx,DWORD PTR [ebx+0x15264f17]
  413782:	jnp    0x4137df
  413784:	mov    bl,0x3f
  413786:	rcl    BYTE PTR [ebx-0xa],1
  413789:	loopne 0x41376d
  41378b:	sbb    ecx,DWORD PTR [esi+0x5ca01618]
  413791:	sbb    ebp,DWORD PTR [ecx]
  413793:	in     eax,dx
  413794:	in     eax,dx
  413795:	xchg   ebp,eax
  413796:	inc    eax
  413797:	mov    cs,WORD PTR [esi]
  413799:	pop    ss
  41379a:	mov    bh,0x39
  41379c:	loopne 0x413777
  41379e:	in     eax,dx
  41379f:	js     0x4137d9
  4137a1:	and    BYTE PTR [edi+0x7d286726],dl
  4137a7:	cmp    eax,DWORD PTR [ebp-0x4f]
  4137aa:	and    dl,BYTE PTR [ebp+0x3154451f]
  4137b0:	outs   dx,DWORD PTR ds:[esi]
  4137b1:	ret    
  4137b2:	jle    0x4137d8
  4137b4:	hlt    
  4137b5:	or     dl,BYTE PTR [ecx+0x30]
  4137b8:	pop    es
  4137b9:	inc    ebp
  4137ba:	out    0x1c,al
  4137bc:	bound  edx,QWORD PTR [eax+0x2f]
  4137bf:	and    BYTE PTR [edi-0x65],dh
  4137c2:	and    BYTE PTR [ecx+0x2885756],bl
  4137c8:	xor    al,0xfb
  4137ca:	pop    ebp
  4137cb:	mul    ah
  4137cd:	dec    ebx
  4137ce:	repnz mov ds:0x205d7c31,eax
  4137d4:	and    eax,0x6d8b3816
  4137d9:	inc    ecx
  4137da:	rcl    BYTE PTR [eax+ecx*2],0x79
  4137de:	lods   al,BYTE PTR ds:[esi]
  4137df:	mov    edx,0xb0027a3b
  4137e4:	jg     0x41377f
  4137e6:	lahf   
  4137e7:	fisubr WORD PTR [edi]
  4137e9:	iret   
  4137ea:	in     eax,0x8c
  4137ec:	and    ah,bl
  4137ee:	ins    BYTE PTR es:[edi],dx
  4137ef:	mov    esi,0xd925ed40
  4137f4:	add    al,0xaf
  4137f6:	into   
  4137f7:	inc    esp
  4137f8:	cmc    
  4137f9:	mov    WORD PTR [ebx+0x72574ec6],fs
  4137ff:	push   esp
  413800:	mov    edi,0xb2264013
  413805:	mov    ds:0x57cf9c1f,eax
  41380a:	push   esp
  41380b:	sbb    edx,DWORD PTR [edi+0x28]
  41380e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41380f:	sbb    al,0x7d
  413811:	popf   
  413812:	inc    eax
  413813:	call   0xa91d:0xad959556
  41381a:	jecxz  0x4137ab
  41381c:	add    BYTE PTR [eax-0x26],cl
  41381f:	sub    DWORD PTR [edi+0x7186aa15],0x3a
  413826:	or     BYTE PTR [esp+edi*2],0xa9
  41382a:	adc    BYTE PTR [ebp-0x7acd907b],bh
  413830:	inc    ebx
  413831:	addr16 mov ds:0xb914,eax
  413835:	cmp    ebp,0xffffffd1
  413838:	pop    es
  413839:	mov    ebx,DWORD PTR [edx+0x1a]
  41383c:	call   0xbe08:0xde4b1fc1
  413843:	inc    eax
  413844:	sbb    BYTE PTR [esi-0x21caec31],dl
  41384a:	add    edi,esi
  41384c:	sbb    DWORD PTR ds:[edx+edx*8+0x431f0315],ebx
  413854:	xor    eax,0x761a212f
  413859:	aad    0x46
  41385b:	sbb    eax,0x14296d41
  413860:	sbb    BYTE PTR [edx-0x12],bh
  413863:	inc    esi
  413864:	or     cl,BYTE PTR [ebp-0x52]
  413867:	sub    DWORD PTR [edi],eax
  413869:	sbb    ebx,edi
  41386b:	in     eax,0xf4
  41386d:	inc    ebx
  41386e:	sbb    DWORD PTR [ebp+0x57f425ee],0xffffffee
  413875:	mov    cl,0x1e
  413877:	or     BYTE PTR ds:0xef339a59,ch
  41387d:	sub    al,0x82
  41387f:	out    dx,eax
  413880:	int    0xda
  413882:	adc    DWORD PTR [ebx-0x2e],ebp
  413885:	or     BYTE PTR ds:0x562d848b,ah
  41388b:	pop    ebx
  41388c:	lds    ebx,FWORD PTR [ebx+0x2]
  41388f:	pop    ss
  413890:	pop    esi
  413891:	imul   bx,WORD PTR [ebx],0x2d
  413895:	pop    ebp
  413896:	push   ebx
  413897:	rcl    BYTE PTR [edx+ecx*1+0xd6e6d89],0x64
  41389f:	imul   esp,DWORD PTR [ebx+0x34],0x7a
  4138a3:	stos   BYTE PTR es:[edi],al
  4138a4:	cs push ebp
  4138a6:	sti    
  4138a7:	cmp    eax,0x7a622779
  4138ac:	jns    0x4138b5
  4138ae:	xor    ah,BYTE PTR [ecx+0x20]
  4138b1:	scas   al,BYTE PTR es:[edi]
  4138b2:	jb     0x413870
  4138b4:	fmul   DWORD PTR [edx]
  4138b6:	pop    ecx
  4138b7:	sbb    esp,DWORD PTR [esi+esi*2+0x6c]
  4138bb:	or     dh,BYTE PTR [edi+0x63]
  4138be:	sub    ch,BYTE PTR [edx-0x76]
  4138c1:	outs   dx,BYTE PTR ds:[esi]
  4138c2:	rol    WORD PTR [ebx],0x6a
  4138c6:	jno    0x413919
  4138c8:	ins    BYTE PTR es:[edi],dx
  4138c9:	outs   dx,DWORD PTR ds:[esi]
  4138ca:	shl    BYTE PTR [esi],0x62
  4138cd:	jae    0x41394b
  4138cf:	in     al,0x55
  4138d1:	popa   
  4138d2:	pop    es
  4138d3:	push   esp
  4138d4:	ins    BYTE PTR es:[edi],dx
  4138d5:	mov    ebp,DWORD PTR [edi]
  4138d7:	cmp    DWORD PTR [ebx-0x77],ebp
  4138da:	outs   dx,DWORD PTR ds:[esi]
  4138db:	popa   
  4138dc:	push   0x6f
  4138de:	outs   dx,DWORD PTR ds:[esi]
  4138df:	jg     0x413924
  4138e1:	dec    ecx
  4138e2:	push   ds
  4138e3:	push   ebp
  4138e4:	imul   esi,ebp,0x7a76377b
  4138ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138eb:	js     0x41395a
  4138ed:	add    eax,DWORD PTR [eax+0x6d]
  4138f0:	cld    
  4138f1:	and    BYTE PTR [ebp+0x68],0x28
  4138f5:	outs   dx,BYTE PTR ds:[esi]
  4138f6:	dec    ebx
  4138f7:	add    ebp,DWORD PTR [eax]
  4138f9:	sub    al,0x8
  4138fb:	sbb    DWORD PTR [eax],ecx
  4138fd:	gs jne 0x413927
  413900:	bound  esp,QWORD PTR ds:0x72241008
  413906:	gs pop esp
  413908:	sbb    eax,0x637d8b14
  41390d:	jb     0x413911
  41390f:	outs   dx,BYTE PTR gs:[esi]
  413911:	popa   
  413912:	fs jnp 0x413974
  413915:	sub    dl,bl
  413917:	jo     0x413981
  413919:	inc    edi
  41391a:	add    BYTE PTR [ebp+0x12],cl
  41391d:	js     0x413984
  41391f:	jg     0x413997
  413921:	outs   dx,BYTE PTR ds:[esi]
  413922:	push   esp
  413923:	gs pop ss
  413925:	push   edx
  413926:	add    eax,0x6578628a
  41392b:	sub    BYTE PTR [ebp+edx*2+0x7b],ch
  41392f:	rcr    DWORD PTR [eax+0x9207025],1
  413935:	add    ebx,ebx
  413937:	dec    ebp
  413938:	jl     0x41399f
  41393a:	call   0x83a280be
  41393f:	add    eax,0x7d7b8016
  413944:	jp     0x413973
  413946:	test   al,0x20
  413948:	sar    DWORD PTR [edi+ebp*8],1
  41394b:	add    ebp,DWORD PTR ds:0x4f517c31
  413951:	test   DWORD PTR [edi+0x1eb2065e],ecx
  413957:	bound  ebx,QWORD PTR [eax-0xfb53c2c]
  41395d:	xlat   BYTE PTR ds:[ebx]
  41395e:	cli    
  41395f:	sub    DWORD PTR [ecx-0x38f3e41e],eax
  413965:	jmp    0x67ff:0xe7e24b0d
  41396c:	lea    eax,ss:[ecx+0x14]
  413970:	icebp  
  413971:	ret    
  413972:	aaa    
  413973:	or     al,0xc3
  413975:	mov    eax,0xd48ae380
  41397a:	push   ss
  41397b:	jmp    0x43b9:0xbbe4a9e
  413982:	cwde   
  413983:	inc    ecx
  413984:	sbb    eax,0xf4e62623
  413989:	aas    
  41398a:	neg    DWORD PTR [ecx]
  41398c:	icebp  
  41398d:	in     eax,0xed
  41398f:	jmp    0x55f30099
  413994:	sub    DWORD PTR [ecx],0xffffff9a
  413997:	nop
  413998:	das    
  413999:	sub    edi,edx
  41399b:	adc    al,0x22
  41399d:	and    eax,0x51b0c045
  4139a2:	push   esi
  4139a3:	push   es
  4139a4:	sahf   
  4139a5:	jg     0x4139dc
  4139a7:	sbb    al,0x26
  4139a9:	mov    cl,BYTE PTR [eax]
  4139ab:	push   edi
  4139ac:	in     al,dx
  4139ad:	or     eax,ebx
  4139af:	outs   dx,DWORD PTR ds:[esi]
  4139b0:	pop    edi
  4139b1:	add    al,BYTE PTR [esp+edi*2]
  4139b4:	pop    es
  4139b5:	adc    BYTE PTR [edx+0x10],0x34
  4139b9:	je     0x4139ee
  4139bb:	stos   BYTE PTR es:[edi],al
  4139bc:	cmp    dh,al
  4139be:	dec    ebx
  4139bf:	jmp    0xb311:0xe6fe819
  4139c6:	pushf  
  4139c7:	test   eax,0xd4d4c7a0
  4139cc:	inc    eax
  4139cd:	aaa    
  4139ce:	leave  
  4139cf:	retf   0xc23
  4139d2:	gs sbb ch,bh
  4139d5:	add    ch,cl
  4139d7:	push   ss
  4139d8:	inc    esp
  4139d9:	cmp    al,0xf7
  4139db:	std    
  4139dc:	lock inc ebp
  4139de:	dec    ecx
  4139df:	jbe    0x413970
  4139e1:	mov    dl,0x1e
  4139e3:	cs stos DWORD PTR es:[edi],eax
  4139e5:	mov    cl,0x21
  4139e7:	xor    BYTE PTR [esi+edx*4-0x74],0x5e
  4139ec:	inc    ebx
  4139ed:	sub    DWORD PTR ds:[ecx],ebx
  4139f0:	adc    DWORD PTR [edi+0x413af3ed],eax
  4139f6:	pop    es
  4139f7:	or     al,0x45
  4139f9:	inc    ebx
  4139fa:	fmulp  st(3),st
  4139fc:	bound  esi,QWORD PTR [eax+esi*1]
  4139ff:	or     ch,dh
  413a01:	push   ebx
  413a02:	mov    eax,ds:0x96f34515
  413a07:	ins    DWORD PTR es:[edi],dx
  413a08:	cmp    BYTE PTR [edx+0x11844cdd],bl
  413a0e:	jmp    0x413a3c
  413a10:	js     0x4139cc
  413a12:	xchg   esi,eax
  413a13:	and    cl,BYTE PTR [ebx-0x5e]
  413a16:	pop    ebx
  413a17:	xchg   esp,eax
  413a18:	adc    DWORD PTR ds:0xc79e1bf7,ebx
  413a1e:	lock ds push cs
  413a21:	stc    
  413a22:	or     al,0x82
  413a24:	sbb    DWORD PTR [edx],ebp
  413a26:	loope  0x413a7c
  413a28:	jl     0x4139be
  413a2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a2b:	pop    ebp
  413a2c:	add    edi,edx
  413a2e:	mov    bh,bl
  413a30:	add    edi,DWORD PTR [ecx]
  413a32:	jle    0x413a4d
  413a34:	jns    0x413a6e
  413a36:	jle    0x413a1a
  413a38:	daa    
  413a39:	mov    eax,ds:0xd053c1b
  413a3e:	and    esp,DWORD PTR [edx]
  413a40:	shr    bl,1
  413a42:	jle    0x413abe
  413a44:	cmp    eax,ebp
  413a46:	inc    ebx
  413a47:	xchg   ebp,eax
  413a48:	retf   
  413a49:	mov    eax,0x24e7131c
  413a4e:	xchg   esp,eax
  413a4f:	pop    ds
  413a50:	cmc    
  413a51:	(bad)  
  413a52:	cs out dx,al
  413a54:	xor    eax,0x3b6bb66c
  413a59:	ja     0x413a98
  413a5b:	push   cs
  413a5c:	inc    ebx
  413a5d:	cmp    eax,0xa0d19322
  413a62:	je     0x413a9d
  413a64:	sbb    al,0xff
  413a66:	repz gs int3 
  413a69:	xor    BYTE PTR [ebp+0x4a156412],0xda
  413a70:	or     eax,0xe64d02b7
  413a75:	or     eax,0x358a59ae
  413a7a:	sbb    bh,bh
  413a7c:	test   eax,0x32010b7b
  413a81:	mov    ebx,0x458a9edb
  413a86:	add    ebp,DWORD PTR [eax]
  413a88:	dec    esi
  413a89:	inc    esi
  413a8a:	or     eax,DWORD PTR [eax+edi*2-0x4fbdef3]
  413a91:	or     eax,0xb7dd8702
  413a96:	cmp    eax,0x577e0b5d
  413a9b:	jl     0x413a49
  413a9d:	cmp    esp,ebx
  413a9f:	out    dx,al
  413aa0:	inc    edi
  413aa1:	inc    esi
  413aa2:	pop    ecx
  413aa3:	cli    
  413aa4:	sub    bh,bh
  413aa6:	mov    edx,0xe044f27d
  413aab:	fimul  WORD PTR ds:0x47ace8dd
  413ab1:	inc    eax
  413ab2:	pop    ecx
  413ab3:	in     eax,dx
  413ab4:	sub    bl,dl
  413ab6:	push   ebp
  413ab7:	dec    esi
  413ab8:	bound  esp,QWORD PTR [edx]
  413aba:	mov    ebx,DWORD PTR [esi+edi*1+0x7a]
  413abe:	div    DWORD PTR [edx+0x6712d077]
  413ac4:	push   edx
  413ac5:	repnz push cs
  413ac7:	add    BYTE PTR [eax+0x4f0423fb],bl
  413acd:	jg     0x413b4e
  413acf:	test   DWORD PTR [edi+ebp*1-0x31],ecx
  413ad3:	idiv   BYTE PTR ds:0xf181eac1
  413ad9:	add    al,0xf
  413adb:	pop    ss
  413adc:	or     DWORD PTR [esi-0x8],ecx
  413adf:	push   ebx
  413ae0:	push   edx
  413ae1:	or     eax,ebp
  413ae3:	lea    eax,[eax+0xc]
  413ae6:	push   ecx
  413ae7:	adc    eax,0x906c4f8b
  413aec:	scas   al,BYTE PTR es:[edi]
  413aed:	cs in  eax,dx
  413aef:	or     ecx,ebp
  413af1:	mov    esp,0x4894989a
  413af6:	test   BYTE PTR [edx],ah
  413af8:	jb     0x413b46
  413afa:	lahf   
  413afb:	jae    0x413a8e
  413afd:	daa    
  413afe:	xchg   DWORD PTR [ebx],edx
  413b00:	lods   al,BYTE PTR ds:[esi]
  413b01:	(bad)  
  413b03:	push   ds
  413b04:	clc    
  413b05:	adc    dl,BYTE PTR ds:[eax]
  413b08:	jl     0x413ac8
  413b0a:	mov    bl,ah
  413b0c:	popa   
  413b0d:	inc    esi
  413b0e:	out    dx,al
  413b0f:	push   cs
  413b10:	pop    ebx
  413b11:	and    eax,0x84c41b74
  413b16:	cs push 0x3876a05
  413b1c:	push   ebp
  413b1d:	jge    0x413b56
  413b1f:	mov    ds:0x7e4f2025,al
  413b24:	jle    0x413af2
  413b26:	in     al,dx
  413b27:	jo     0x413b92
  413b29:	ror    DWORD PTR [edx+0x46],0x45
  413b2d:	pop    ebp
  413b2e:	jmp    0xc7ae8b9f
  413b33:	repnz mov ds:0x1eeda50a,al
  413b39:	sbb    al,0xd0
  413b3b:	pop    ebx
  413b3c:	fst    DWORD PTR [eax]
  413b3e:	jmp    0xd11c:0x3e7d7936
  413b45:	or     al,0x2b
  413b47:	imul   eax,DWORD PTR [edi+0x5e],0xbca9cbd
  413b4e:	xor    dh,cl
  413b50:	fs out 0xd5,eax
  413b53:	outs   dx,BYTE PTR ds:[esi]
  413b54:	cmp    DWORD PTR [ebx+0x2c],edi
  413b57:	adc    esi,edx
  413b59:	cmc    
  413b5a:	sar    DWORD PTR [ebp-0x2398579a],0xf2
  413b61:	xor    dh,bh
  413b63:	xchg   DWORD PTR [ebx],ebx
  413b65:	je     0x413b84
  413b67:	sbb    bh,BYTE PTR [esi+edx*4-0x5daf9b5]
  413b6e:	pop    ebx
  413b6f:	jbe    0x413b69
  413b71:	sub    al,0x2e
  413b73:	mov    ah,0xb8
  413b75:	add    eax,0xf92ae86b
  413b7a:	mov    ebp,DWORD PTR [ebp-0xb]
  413b7d:	popf   
  413b7e:	or     eax,0x96cbf252
  413b83:	(bad)  
  413b84:	aam    0x29
  413b86:	sahf   
  413b87:	or     ebp,ebp
  413b89:	stos   DWORD PTR es:[edi],eax
  413b8a:	std    
  413b8b:	pop    es
  413b8c:	mov    edx,0xd8870e9
  413b91:	dec    ebp
  413b92:	popf   
  413b93:	aaa    
  413b94:	leave  
  413b95:	cwde   
  413b96:	mov    edi,0xfd29a3a7
  413b9b:	or     ebx,DWORD PTR [edx+edx*4+0x6a90229d]
  413ba2:	mov    BYTE PTR [ecx],bl
  413ba4:	out    dx,eax
  413ba5:	and    edi,DWORD PTR [ebp+0x69]
  413ba8:	jb     0x413bd9
  413baa:	pcmpeqb mm7,QWORD PTR [esi+0x78]
  413bae:	xor    eax,0x807b0903
  413bb3:	repnz call 0x3bfd:0xc3f56815
  413bbb:	pop    esi
  413bbc:	or     al,BYTE PTR [ebp-0xe]
  413bbf:	je     0x413c30
  413bc1:	pop    ss
  413bc2:	sub    eax,0xe65cfffb
  413bc7:	sub    eax,0x5005670f
  413bcc:	dec    ebx
  413bcd:	test   BYTE PTR [eax+0x46],0x37
  413bd1:	jb     0x413bca
  413bd3:	das    
  413bd4:	dec    esp
  413bd5:	into   
  413bd6:	inc    ecx
  413bd7:	mov    es,esi
  413bd9:	scas   eax,DWORD PTR es:[edi]
  413bda:	scas   al,BYTE PTR es:[edi]
  413bdb:	jns    0x413b77
  413bdd:	clc    
  413bde:	outs   dx,DWORD PTR ds:[esi]
  413bdf:	xor    esi,esp
  413be1:	popa   
  413be2:	ss (bad) 
  413be4:	fsubr  QWORD PTR [edx]
  413be6:	mov    esi,0xf8cfdbf7
  413beb:	and    al,0xfa
  413bed:	inc    ebx
  413bee:	xchg   DWORD PTR [esi+ecx*8+0x3cd7f542],edi
  413bf5:	(bad)  
  413bf6:	lds    eax,FWORD PTR ds:0x5be48407
  413bfc:	cwde   
  413bfd:	ret    
  413bfe:	or     BYTE PTR [esi-0x28d5008f],0x4e
  413c05:	pop    ecx
  413c06:	push   0x9b1ad41e
  413c0b:	stos   DWORD PTR es:[edi],eax
  413c0c:	pop    ds
  413c0d:	add    al,0x89
  413c0f:	add    BYTE PTR [ebx-0x12],dl
  413c12:	push   esi
  413c13:	push   esi
  413c14:	or     ecx,eax
  413c16:	lea    eax,[eax+0x5f590297]
  413c1c:	sub    al,0x6c
  413c1e:	fist   WORD PTR [eax-0x2a]
  413c21:	imul   eax,DWORD PTR [esp+edi*1+0x78192fc2],0xd
  413c29:	imul   edi,ecx,0x1cb0ca50
  413c2f:	ja     0x413c7d
  413c31:	add    DWORD PTR [ecx],0xfffffff9
  413c34:	xor    eax,eax
  413c36:	dec    ebx
  413c37:	sbb    bh,ch
  413c39:	sub    DWORD PTR [esi-0x3d],ecx
  413c3c:	(bad)  
  413c3d:	call   0x86742f43
  413c42:	retf   
  413c43:	ret    
  413c44:	outs   dx,BYTE PTR ds:[esi]
  413c45:	dec    edi
  413c46:	mov    ecx,ebp
  413c48:	ds (bad) 
  413c4a:	sbb    al,0x7b
  413c4c:	(bad)  
  413c4d:	jmp    0x413cbe
  413c4f:	ins    BYTE PTR es:[edi],dx
  413c50:	in     eax,dx
  413c51:	inc    DWORD PTR [eax+ecx*8]
  413c54:	cs sbb edx,esp
  413c57:	ja     0x413c3e
  413c59:	mov    gs,WORD PTR [ecx-0x2c]
  413c5c:	add    bl,BYTE PTR [edi]
  413c5e:	cs jp  0x413c70
  413c61:	fnstenv [edi]
  413c63:	and    esi,ecx
  413c65:	dec    ecx
  413c66:	push   cs
  413c67:	adc    BYTE PTR [edi-0x9],0x10
  413c6b:	inc    ecx
  413c6c:	push   ebp
  413c6d:	scas   al,BYTE PTR es:[edi]
  413c6e:	(bad)  
  413c6f:	fmulp  st(1),st
  413c71:	mov    al,al
  413c73:	and    ch,BYTE PTR [ebp+ecx*2-0x32976474]
  413c7a:	pop    esp
  413c7b:	pop    es
  413c7c:	(bad)
  413c80:	and    ch,dl
  413c82:	add    esp,DWORD PTR [esi+eax*2-0x14]
  413c86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c87:	icebp  
  413c88:	xchg   ecx,eax
  413c89:	jmp    0x413cd4
  413c8b:	jle    0x413c64
  413c8d:	inc    edi
  413c8e:	ja     0x413cbf
  413c90:	jecxz  0x413d0a
  413c92:	xchg   ecx,eax
  413c93:	out    0x4a,al
  413c95:	jg     0x413c80
  413c97:	and    edi,DWORD PTR [esi]
  413c99:	adc    bh,0x51
  413c9c:	out    0x9b,eax
  413c9e:	adc    al,0x1e
  413ca0:	icebp  
  413ca1:	pop    ecx
  413ca2:	cmp    dh,bl
  413ca4:	push   ss
  413ca5:	clc    
  413ca6:	and    al,0xfc
  413ca8:	test   DWORD PTR [eax-0x321f032b],eax
  413cae:	xor    al,0xfd
  413cb0:	xchg   edi,eax
  413cb1:	cwde   
  413cb2:	cwde   
  413cb3:	bound  esp,QWORD PTR [ecx]
  413cb5:	cld    
  413cb6:	push   0x26cc24d8
  413cbb:	lahf   
  413cbc:	(bad)  [esi]
  413cbe:	push   cs
  413cbf:	test   eax,0x52e11090
  413cc4:	xor    DWORD PTR [edx-0x72],edx
  413cc7:	mov    edi,0x4241ae3c
  413ccc:	sbb    BYTE PTR [edx+0x7878d0c6],ch
  413cd2:	mov    edx,0xd7c8b008
  413cd7:	in     al,dx
  413cd8:	adc    eax,0xf217f3cc
  413cdd:	lock mov esp,0xf3198443
  413ce3:	nop
  413ce4:	sbb    DWORD PTR [esi+0x78],ebp
  413ce7:	xchg   esi,eax
  413ce8:	or     BYTE PTR [edi+0xd],0x5f
  413cec:	add    DWORD PTR [esi+esi*1+0x1492ad5c],esp
  413cf3:	add    esi,DWORD PTR [ebp+0x1b]
  413cf6:	inc    esi
  413cf7:	jmp    0x2c728585
  413cfc:	outs   dx,BYTE PTR ds:[esi]
  413cfd:	xchg   edx,eax
  413cfe:	jecxz  0x413c8c
  413d00:	test   DWORD PTR [edx-0x7a93f28e],ebp
  413d06:	mov    bl,0x4d
  413d08:	push   es
  413d09:	sbb    al,0xa9
  413d0b:	dec    ebp
  413d0c:	mov    al,0x0
  413d0e:	or     ah,cl
  413d10:	add    BYTE PTR [edx+0x124fba67],bh
  413d16:	pop    ds
  413d17:	in     eax,0xa5
  413d19:	dec    ecx
  413d1a:	mov    bh,0x10
  413d1c:	inc    bp
  413d1e:	(bad)  
  413d1f:	mov    ebx,0x1a8322a2
  413d24:	(bad)  
  413d25:	dec    ecx
  413d26:	push   edx
  413d27:	mov    ebx,0x4c893791
  413d2c:	inc    esi
  413d2d:	sbb    al,0x19
  413d2f:	mov    eax,DWORD PTR fs:[esi-0x72]
  413d33:	in     al,0xaf
  413d35:	(bad)  
  413d36:	mov    eax,0xeefb9139
  413d3b:	(bad)  
  413d3c:	sti    
  413d3d:	push   ebx
  413d3e:	sbb    al,0x2b
  413d40:	and    bl,al
  413d42:	jbe    0x413d79
  413d44:	cld    
  413d45:	adc    eax,0x1ac10040
  413d4a:	lods   eax,DWORD PTR ds:[esi]
  413d4b:	xchg   BYTE PTR [edx+eax*2-0x11],ch
  413d4f:	mov    dh,0xd8
  413d51:	pop    ebx
  413d52:	add    bl,BYTE PTR [esi-0xbbb6b1]
  413d58:	cmp    DWORD PTR [edi],esi
  413d5a:	(bad)  [edi]
  413d5c:	mov    ecx,0x36aa569a
  413d61:	dec    di
  413d63:	(bad)  [ebx+0x6c]
  413d66:	adc    al,0x6c
  413d68:	add    al,0xdb
  413d6a:	or     DWORD PTR [ecx-0x4d],0xd26d048a
  413d71:	imul   edi,DWORD PTR [ebp+0x19],0x8ade0845
  413d78:	inc    ebp
  413d79:	mov    WORD PTR [edi+0x6ed86a01],es
  413d7f:	lea    ebx,ds:0x88d20d1d
  413d85:	dec    edx
  413d86:	bound  eax,QWORD PTR [ebp+0x6bd76006]
  413d8c:	adc    DWORD PTR ds:0x418146f1,0xffffffdc
  413d93:	and    eax,0xce5b4f4c
  413d98:	iret   
  413d99:	into   
  413d9a:	xchg   esp,eax
  413d9b:	and    eax,0xfc914d2
  413da0:	adc    cl,BYTE PTR [edx-0x373dfde9]
  413da6:	enter  0x2ead,0xa5
  413daa:	adc    eax,0x43f302c8
  413daf:	adc    BYTE PTR [esi],al
  413db1:	pop    DWORD PTR [ebp-0x37]
  413db4:	and    eax,0xc88714b9
  413db9:	mov    BYTE PTR [ebx-0x34],0x24
  413dbd:	or     ecx,DWORD PTR [ebx-0x7b4ae409]
  413dc3:	inc    ebp
  413dc4:	fs sub edi,ecx
  413dc7:	adc    DWORD PTR [edi-0x42eef352],ebp
  413dcd:	push   ss
  413dce:	int3   
  413dcf:	add    DWORD PTR [ebx+0x39],0x20
  413dd3:	mov    dl,0x18
  413dd5:	xchg   BYTE PTR [ebp+0x1bbf1703],ah
  413ddb:	fiadd  DWORD PTR [edx-0x728feebf]
  413de1:	inc    esp
  413de2:	push   eax
  413de3:	lea    eax,[edi]
  413de5:	bound  esi,QWORD PTR [edx-0x1be01595]
  413deb:	dec    ecx
  413dec:	test   DWORD PTR [edi-0x4b],ecx
  413def:	and    edi,DWORD PTR [ebx]
  413df1:	dec    esp
  413df2:	add    edx,DWORD PTR [edi-0x7c]
  413df5:	or     DWORD PTR [ecx],esp
  413df7:	pop    edi
  413df8:	leave  
  413df9:	sub    al,0xbb
  413dfb:	add    al,dh
  413dfd:	icebp  
  413dfe:	mov    ah,0x42
  413e00:	pusha  
  413e01:	mov    eax,ds:0x52d30418
  413e06:	mov    esp,ebx
  413e08:	cld    
  413e09:	call   0x8c48b24d
  413e0e:	push   esi
  413e0f:	out    0x41,al
  413e11:	sbb    al,0x46
  413e13:	cmp    ah,BYTE PTR [edi-0x5629da7c]
  413e19:	add    ebp,edi
  413e1b:	and    eax,esp
  413e1d:	popa   
  413e1e:	adc    BYTE PTR [ebp-0x45113e18],al
  413e24:	fcomp  QWORD PTR [ebx-0x73ebc8bd]
  413e2a:	iret   
  413e2b:	cli    
  413e2c:	push   0x119064ac
  413e31:	ret    
  413e32:	xor    eax,0xaf9666a
  413e37:	push   0xe96a226f
  413e3c:	push   0x63
  413e3e:	add    BYTE PTR [esi+0x206a677b],cl
  413e44:	fisub  WORD PTR [eax]
  413e46:	loopne 0x413e29
  413e48:	jmp    FWORD PTR [esi]
  413e4a:	and    al,0x33
  413e4c:	mov    ebx,0xd339fdba
  413e51:	inc    ebp
  413e52:	and    eax,0x89036e69
  413e57:	inc    ecx
  413e58:	arpl   WORD PTR [ebp+0x24],sp
  413e5b:	dec    edx
  413e5c:	das    
  413e5d:	popa   
  413e5e:	jg     0x413ec3
  413e60:	inc    esi
  413e61:	jbe    0x413e80
  413e63:	shl    DWORD PTR [ecx+edi*2],0x5e
  413e67:	inc    edi
  413e68:	ja     0x413ec1
  413e6a:	pusha  
  413e6b:	or     al,0xca
  413e6d:	outs   dx,DWORD PTR ds:[esi]
  413e6e:	push   eax
  413e6f:	dec    esi
  413e70:	cli    
  413e71:	imul   eax,DWORD PTR [ebx],0x9
  413e74:	push   edx
  413e75:	data16 jnp 0x413ed7
  413e78:	dec    ebx
  413e79:	imul   eax,DWORD PTR [eax+0x7f],0x7f6747ce
  413e80:	adc    eax,0x6e6c4713
  413e85:	mov    WORD PTR [ebp+0x6c],cs
  413e88:	jecxz  0x413ea9
  413e8a:	sub    al,0xf5
  413e8c:	jmp    0x4aea6d63
  413e91:	add    eax,0x155efb66
  413e96:	(bad)  
  413e98:	or     BYTE PTR [ebx-0xf],cl
  413e9b:	popf   
  413e9c:	enter  0xb61c,0xed
  413ea0:	and    ebp,ebx
  413ea2:	and    esp,DWORD PTR [edi]
  413ea4:	cmc    
  413ea5:	stos   BYTE PTR es:[edi],al
  413ea6:	mov    ?,WORD PTR [eax]
  413ea8:	push   eax
  413ea9:	(bad)  
  413eaa:	repz add cl,BYTE PTR [ebx+0x5f1f7af3]
  413eb1:	in     al,dx
  413eb2:	out    0x4,al
  413eb4:	mov    eax,0x52fe5940
  413eb9:	push   ds
  413eba:	jmp    0x413eeb
  413ebc:	jbe    0x413efc
  413ebe:	adc    eax,0x5c3eea3f
  413ec3:	fbld   TBYTE PTR [esp+esi*8+0x5d62e125]
  413eca:	popa   
  413ecb:	test   DWORD PTR [edx-0x6ec06636],0x3c256720
  413ed5:	cmp    BYTE PTR [edx-0x35986eea],ch
  413edb:	lods   eax,DWORD PTR ds:[esi]
  413edc:	arpl   WORD PTR [esi+0x2f],bp
  413edf:	dec    edx
  413ee0:	pop    esi
  413ee1:	mov    BYTE PTR [esi-0x38215e77],dh
  413ee7:	mov    dl,BYTE PTR [esi]
  413ee9:	sub    al,0x31
  413eeb:	xor    BYTE PTR [esi+0x49],0xac
  413eef:	pop    ebp
  413ef0:	dec    edi
  413ef1:	mov    ch,0x10
  413ef3:	in     al,0x3e
  413ef5:	mov    ecx,ebx
  413ef7:	xor    ah,BYTE PTR ds:0xe4b90b98
  413efd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413efe:	xchg   esi,eax
  413eff:	xlat   BYTE PTR ds:[ebx]
  413f00:	enter  0x4bdf,0x61
  413f04:	push   ds
  413f05:	(bad)  
  413f06:	sbb    BYTE PTR [eax],dl
  413f08:	push   ss
  413f09:	inc    ebx
  413f0a:	inc    ebp
  413f0b:	lods   al,BYTE PTR ds:[esi]
  413f0c:	and    al,0x49
  413f0e:	jno    0x413edf
  413f10:	dec    esp
  413f11:	or     DWORD PTR [ebx],ebx
  413f13:	stos   BYTE PTR es:[edi],al
  413f14:	sbb    eax,0xf424a778
  413f19:	adc    al,0xf2
  413f1b:	dec    edx
  413f1c:	pusha  
  413f1d:	(bad)  
  413f1e:	dec    esp
  413f1f:	inc    esp
  413f20:	and    dh,BYTE PTR [eax+0x32]
  413f23:	retf   0x74e2
  413f26:	jne    0x413edd
  413f28:	les    ecx,FWORD PTR [edx+0x65]
  413f2b:	daa    
  413f2c:	je     0x413ebf
  413f2e:	xchg   BYTE PTR [eax+eax*4+0x1149d6c2],bh
  413f35:	push   cs
  413f36:	xor    bl,ch
  413f38:	lea    edi,[edi+ebx*8]
  413f3b:	jbe    0x413f5a
  413f3d:	jecxz  0x413f97
  413f3f:	or     bh,BYTE PTR [ecx-0x49]
  413f42:	in     eax,0x70
  413f44:	add    eax,DWORD PTR [esi+esi*2]
  413f47:	add    eax,0xfd691f41
  413f4c:	jnp    0x413ee5
  413f4e:	xor    edi,DWORD PTR [edx]
  413f50:	jg     0x413f39
  413f52:	es (bad) 
  413f54:	jns    0x413ef2
  413f56:	nop
  413f57:	retf   
  413f58:	adc    al,0x6c
  413f5a:	push   es
  413f5b:	ins    BYTE PTR es:[edi],dx
  413f5c:	ret    0x785f
  413f5f:	repnz imul eax,DWORD PTR fs:[eax],0x68
  413f64:	mov    dl,0x9b
  413f66:	push   ecx
  413f67:	or     eax,0x42f87c81
  413f6c:	jae    0x413fbb
  413f6e:	scas   al,BYTE PTR es:[edi]
  413f6f:	fidiv  WORD PTR [edx+eiz*8]
  413f72:	and    esp,DWORD PTR [esi]
  413f74:	sub    eax,0xe1840e
  413f79:	fwait
  413f7a:	xor    bh,BYTE PTR [edi]
  413f7c:	into   
  413f7d:	call   FWORD PTR [edx]
  413f7f:	mov    DWORD PTR [ecx+0x540a1d0a],edx
  413f85:	sbb    ah,BYTE PTR [ebx+0x3b]
  413f88:	retf   
  413f89:	xor    DWORD PTR [eax+ebx*8],eax
  413f8c:	pop    eax
  413f8d:	fld    QWORD PTR [ebp+0xf]
  413f90:	int    0xea
  413f92:	or     DWORD PTR [edi+0x7e],edx
  413f95:	pop    ecx
  413f96:	(bad)  
  413f97:	call   0x10a5:0x3eb1a0a
  413f9e:	mov    bl,0x83
  413fa0:	rcr    DWORD PTR [ebp-0x69cac61e],0xed
  413fa7:	stos   DWORD PTR es:[edi],eax
  413fa8:	jmp    0xe673:0xfd355480
  413faf:	loop   0x414003
  413fb1:	lds    ebx,FWORD PTR [edi]
  413fb3:	sar    BYTE PTR [edi+0x7b821384],1
  413fb9:	add    DWORD PTR [esi+0x2234e80f],esi
  413fbf:	rol    BYTE PTR [edi+ebp*2-0x1bb4932c],0xfa
  413fc7:	punpcklbw mm1,DWORD PTR [edx+0x1c]
  413fcb:	fst    QWORD PTR [edx+0xb]
  413fce:	adc    BYTE PTR [ebx+0x26323a42],dl
  413fd4:	ds pop edx
  413fd6:	lods   al,BYTE PTR ds:[esi]
  413fd7:	lahf   
  413fd8:	push   eax
  413fd9:	dec    ecx
  413fda:	xchg   ebp,eax
  413fdb:	inc    eax
  413fdc:	jmp    0x89f8b7a4
  413fe1:	sbb    esi,DWORD PTR [ecx]
  413fe3:	daa    
  413fe4:	push   ds
  413fe5:	cmp    DWORD PTR ds:[edx],ebx
  413fe8:	cwde   
  413fe9:	test   eax,0xe04857c
  413fee:	mov    bh,0x1f
  413ff0:	jb     0x413fe0
  413ff2:	jp     0x414058
  413ff4:	pop    esi
  413ff5:	call   0x3f8:0x2297ecc
  413ffc:	je     0x413fbb
  413ffe:	pop    ss
  413fff:	ret    
  414000:	adc    bl,ch
  414002:	sub    DWORD PTR [esi],esi
  414004:	push   edi
  414005:	pop    ss
  414006:	arpl   WORD PTR [ebp-0x4de1e7d3],si
  41400c:	inc    edx
  41400d:	addr16 in eax,dx
  41400f:	mov    edi,0x958be528
  414014:	call   0xd615:0x10a872b3
  41401b:	(bad)  
  41401d:	loop   0x414032
  41401f:	add    ch,ah
  414021:	inc    eax
  414022:	pop    eax
  414023:	imul   edx,DWORD PTR [ebx],0xffffffdc
  414026:	cmp    al,bh
  414028:	cmp    ah,al
  41402a:	fstp   DWORD PTR [ebx+0x10]
  41402d:	lods   eax,DWORD PTR ds:[esi]
  41402e:	test   al,0x7d
  414030:	push   ecx
  414031:	push   ecx
  414032:	push   0xffffff80
  414034:	aam    0xc
  414036:	imul   eax,DWORD PTR [ebp+0x15],0x46
  41403a:	rcl    DWORD PTR [edx],0xb8
  41403d:	jecxz  0x414086
  41403f:	xchg   ebp,eax
  414040:	imul   ebp,DWORD PTR [ecx+0xf64965f],0x13a52dfa
  41404a:	jmp    FWORD PTR [eax-0x7b]
  41404d:	mov    DWORD PTR [ecx-0x4f],edx
  414050:	and    DWORD PTR [ebx-0x4f],ebx
  414053:	(bad)  
  414054:	icebp  
  414055:	dec    edi
  414056:	sbb    DWORD PTR [edx],esp
  414058:	into   
  414059:	out    0xf8,al
  41405b:	jbe    0x4140b6
  41405d:	xchg   esp,eax
  41405e:	or     ecx,esp
  414060:	jl     0x4140af
  414062:	sti    
  414063:	xchg   ecx,eax
  414064:	stos   BYTE PTR es:[edi],al
  414065:	push   0xffffff8e
  414067:	inc    ebp
  414068:	or     ebx,ebp
  41406a:	dec    ebx
  41406b:	pop    edx
  41406c:	mov    BYTE PTR [ebx+0x39ce0ab0],0x57
  414073:	imul   ebp,DWORD PTR [edi+0x22],0x3c19e35
  41407a:	dec    ebx
  41407b:	inc    ecx
  41407c:	imul   eax,DWORD PTR ds:0x34488711,0x799f9a5b
  414086:	retf   
  414087:	xchg   ecx,eax
  414088:	aad    0x67
  41408a:	sub    eax,0x3df71d66
  41408f:	daa    
  414090:	adc    eax,0x47472ff2
  414095:	or     DWORD PTR [ebp+0x13c55356],esi
  41409b:	adc    bh,BYTE PTR [ebx]
  41409d:	jmp    0xd422:0xf00c83c0
  4140a4:	mov    ecx,0xac37c495
  4140a9:	clc    
  4140aa:	es test al,0x4d
  4140ad:	or     DWORD PTR [edi-0x11],eax
  4140b0:	xor    DWORD PTR [edx],0x8a2ad0b1
  4140b6:	adc    ecx,DWORD PTR [ecx+0x4ad52936]
  4140bc:	jle    0x414050
  4140be:	push   cs
  4140bf:	push   cs
  4140c0:	jae    0x41412c
  4140c2:	arpl   WORD PTR [eax+0x6e],cx
  4140c5:	jno    0x41411e
  4140c7:	pop    esp
  4140c8:	loopne 0x41410a
  4140ca:	dec    edx
  4140cb:	ins    DWORD PTR es:[edi],dx
  4140cc:	pusha  
  4140cd:	enter  0x6077,0x54
  4140d1:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4140d3:	dec    ebx
  4140d4:	ins    DWORD PTR es:[edi],dx
  4140d5:	xor    dh,BYTE PTR [edx+0x60]
  4140d8:	mov    ah,0x4f
  4140da:	leave  
  4140db:	cdq    
  4140dc:	adc    BYTE PTR ds:0x7c76788c,ah
  4140e2:	or     BYTE PTR [ebx+0x60],0x69
  4140e6:	dec    edi
  4140e7:	gs jo  0x414106
  4140ea:	pop    edi
  4140eb:	icebp  
  4140ec:	jns    0x414156
  4140ee:	(bad)  
  4140ef:	jno    0x4140b8
  4140f1:	es dec esi
  4140f3:	pop    ecx
  4140f4:	mov    ah,0x49
  4140f6:	je     0x414177
  4140f8:	mov    esp,0x51701a34
  4140fd:	xor    al,0xf3
  4140ff:	mov    esi,0x115778e1
  414104:	js     0x414185
  414106:	popf   
  414107:	fldcw  WORD PTR [ecx-0x3a]
  41410a:	dec    esp
  41410b:	ins    BYTE PTR es:[edi],dx
  41410c:	xchg   esp,esp
  41410e:	scas   eax,DWORD PTR es:[edi]
  41410f:	push   0xf3ef6035
  414114:	sbb    al,0x9f
  414116:	xor    eax,0xdc301f3d
  41411b:	mov    ecx,0xbbfb6df4
  414120:	mov    esp,0x19696429
  414125:	pusha  
  414126:	fcomi  st,st(1)
  414128:	inc    ebx
  414129:	mov    ebx,0x6289641c
  41412e:	or     DWORD PTR [edi-0x2ce0856d],0xda9b5f06
  414138:	lea    eax,[edi-0x5e]
  41413b:	push   es
  41413c:	les    edi,FWORD PTR [ecx]
  41413e:	(bad)  
  41413f:	je     0x414128
  414141:	mov    esp,0xe8b1db6e
  414146:	inc    ebp
  414147:	adc    eax,DWORD PTR [esi-0x7d490bf6]
  41414d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41414e:	aam    0x1e
  414150:	pushf  
  414151:	xor    DWORD PTR [ebx+0x6babf3ba],ecx
  414157:	call   0xb3fa:0xa4803e72
  41415e:	push   0x81767fe4
  414163:	add    ebx,DWORD PTR [ecx]
  414165:	sub    dl,BYTE PTR [esi]
  414167:	mov    ch,0xd4
  414169:	jae    0x414131
  41416b:	dec    eax
  41416c:	sbb    DWORD PTR [ebp-0x4d],ebx
  41416f:	and    DWORD PTR [esi+0x23feed87],ebp
  414175:	(bad)  
  414176:	sbb    ebp,ebp
  414178:	in     al,dx
  414179:	bound  esp,QWORD PTR ds:0x76678a04
  41417f:	cs out 0x6d,al
  414182:	inc    ecx
  414183:	push   0xbc18d501
  414188:	dec    ebp
  414189:	pop    ss
  41418a:	adc    al,0xc4
  41418c:	es xchg edi,eax
  41418e:	stos   BYTE PTR es:[edi],al
  41418f:	jge    0x4141f5
  414191:	add    DWORD PTR [ebp-0x7b],ebp
  414194:	jg     0x4141de
  414196:	repnz pop ebx
  414198:	es jns 0x4141a4
  41419b:	leave  
  41419c:	xor    DWORD PTR [ebx+0x41808efc],0x15bf70a2
  4141a6:	stc    
  4141a7:	inc    edx
  4141a8:	xor    al,0x1e
  4141aa:	out    0x3f,al
  4141ac:	xchg   edx,eax
  4141ad:	cmp    eax,0x75e6a737
  4141b2:	ror    BYTE PTR [eax+0x1c5a29dc],cl
  4141b8:	repnz sub eax,0x75c125d7
  4141be:	cld    
  4141bf:	sbb    BYTE PTR [eax-0x4e],ah
  4141c2:	js     0x41421b
  4141c4:	scas   al,BYTE PTR es:[edi]
  4141c5:	pusha  
  4141c6:	daa    
  4141c7:	sbb    bl,bh
  4141c9:	test   DWORD PTR [esi+0x69],0xd0fd5a49
  4141d0:	test   eax,0x41f36d41
  4141d5:	and    DWORD PTR [esi+ebx*4-0x5c],ebx
  4141d9:	mov    edx,0x86b15b41
  4141de:	lods   eax,DWORD PTR ds:[esi]
  4141df:	inc    esi
  4141e0:	inc    eax
  4141e1:	inc    ebp
  4141e2:	xchg   edi,eax
  4141e3:	ins    BYTE PTR es:[edi],dx
  4141e4:	rol    BYTE PTR gs:[edx-0x24],1
  4141e8:	inc    ecx
  4141e9:	data16 cld 
  4141eb:	adc    ecx,DWORD PTR [ebx+ebx*8+0x1a]
  4141ef:	dec    edx
  4141f0:	outs   dx,DWORD PTR ds:[esi]
  4141f1:	adc    ebp,DWORD PTR [ebx]
  4141f3:	xchg   esp,eax
  4141f4:	sub    al,0x43
  4141f6:	out    dx,al
  4141f7:	popa   
  4141f8:	inc    esp
  4141f9:	xchg   ebx,eax
  4141fa:	cmp    ebx,DWORD PTR [ecx-0x5e929b43]
  414200:	sub    eax,0x916f1f49
  414205:	mov    edi,0xa6ec0d35
  41420a:	sbb    BYTE PTR [edi-0x80],al
  41420d:	sub    al,BYTE PTR [edi-0x59]
  414210:	daa    
  414211:	(bad)  [ecx+0x19]
  414214:	daa    
  414215:	add    cl,bl
  414217:	mov    dh,0xaa
  414219:	nop
  41421a:	in     al,dx
  41421b:	inc    edi
  41421c:	test   al,0xfd
  41421e:	cmp    cl,BYTE PTR [ebx+0x79af011]
  414224:	inc    esp
  414225:	div    DWORD PTR [edi]
  414227:	pop    es
  414228:	ret    
  414229:	jle    0x41429c
  41422b:	and    eax,0x724592bb
  414230:	pop    es
  414231:	test   al,0x46
  414233:	ins    DWORD PTR es:[edi],dx
  414234:	jbe    0x4141f9
  414236:	xor    DWORD PTR [ebx+ebp*4],esi
  414239:	dec    ebp
  41423a:	add    eax,0x283bea04
  41423f:	and    eax,0x8899261e
  414244:	pop    eax
  414245:	mov    dl,BYTE PTR ds:0x625d31e0
  41424b:	adc    al,0x23
  41424d:	div    DWORD PTR [ecx]
  41424f:	in     al,dx
  414250:	inc    esi
  414251:	retf   
  414252:	adc    eax,0x369262ff
  414257:	or     dh,BYTE PTR [eax+0x48]
  41425a:	cmp    dl,BYTE PTR [edx]
  41425c:	sahf   
  41425d:	push   si
  41425f:	mov    al,0xe4
  414261:	jo     0x41428c
  414263:	mov    edx,DWORD PTR [ecx+0x6d09336e]
  414269:	xor    edi,DWORD PTR [esi+0x6]
  41426c:	imul   edi,DWORD PTR [ebp-0x77],0xffffffc5
  414270:	loopne 0x414205
  414272:	ret    0x81d3
  414275:	mov    ds:0x1bd5e697,al
  41427a:	add    eax,ebp
  41427c:	psllw  mm0,QWORD PTR [eax-0x30e21bb7]
  414283:	push   esi
  414284:	dec    esp
  414285:	stc    
  414286:	cmp    dh,0x26
  414289:	xor    DWORD PTR [eax],ecx
  41428b:	in     eax,dx
  41428c:	mov    ds:0xede2e4df,eax
  414291:	in     al,0x11
  414293:	mov    bh,0x5
  414295:	sub    BYTE PTR [edx],al
  414297:	or     esi,DWORD PTR [esi+eax*1+0x371ed78c]
  41429e:	inc    ebp
  41429f:	dec    edi
  4142a0:	daa    
  4142a1:	jle    0x414264
  4142a3:	dec    esp
  4142a4:	fsub   QWORD PTR [edi+0x58]
  4142a7:	addr16 jmp 0x8c4f5231
  4142ad:	xchg   DWORD PTR [ebx],esp
  4142af:	and    ch,BYTE PTR [esi-0x58]
  4142b2:	inc    ebx
  4142b3:	sub    al,0xd5
  4142b5:	adc    DWORD PTR [edi],ebx
  4142b7:	loop   0x414297
  4142b9:	int    0x76
  4142bb:	pop    es
  4142bc:	popa   
  4142bd:	mov    bh,0xaa
  4142bf:	out    0xb2,al
  4142c1:	sti    
  4142c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142c3:	bound  ebx,QWORD PTR [esi-0x13]
  4142c6:	mov    db5,edx
  4142c9:	repnz xchg ebp,eax
  4142cb:	stos   DWORD PTR es:[edi],eax
  4142cc:	push   0x47cd76dd
  4142d1:	inc    edi
  4142d2:	jle    0x41425e
  4142d4:	es cmc 
  4142d6:	xor    BYTE PTR [edi],dl
  4142d8:	or     BYTE PTR [ebx-0x2],0xe5
  4142dc:	dec    ecx
  4142dd:	mov    edi,0xfac2160
  4142e2:	cmp    DWORD PTR [edi+0x6a],edi
  4142e5:	mov    al,ds:0x893d368b
  4142ea:	add    al,0x3e
  4142ec:	jno    0x414342
  4142ee:	push   esp
  4142ef:	(bad)  
  4142f0:	and    eax,0x64629d6d
  4142f5:	cdq    
  4142f6:	fiadd  WORD PTR [eax+0x3c]
  4142f9:	xor    eax,0x2ed268f2
  4142fe:	mov    ecx,0xf5cdde40
  414303:	daa    
  414304:	sub    eax,0x4c90f832
  414309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41430a:	add    DWORD PTR [edi-0x8],ebx
  41430d:	dec    esp
  41430e:	loope  0x4142d3
  414310:	data16 xor BYTE PTR [ebx-0x76],bh
  414314:	aad    0x2f
  414316:	out    dx,eax
  414317:	mov    BYTE PTR [ebp+0x2a],cl
  41431a:	rcr    ch,0x65
  41431d:	pop    ecx
  41431e:	(bad)  
  41431f:	dec    ecx
  414320:	adc    eax,0x4f829b2a
  414325:	iret   
  414326:	retf   0x9081
  414329:	cmp    DWORD PTR [ecx],esi
  41432b:	(bad)  
  41432c:	(bad)  
  41432d:	xchg   DWORD PTR [eax],ebx
  41432f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414330:	lods   eax,DWORD PTR ds:[esi]
  414331:	and    esp,DWORD PTR [ecx-0x4cc3378b]
  414337:	and    BYTE PTR [edi+0x77],ch
  41433a:	mov    ebx,0xa45f51c3
  41433f:	xlat   BYTE PTR ds:[ebx]
  414340:	cli    
  414341:	retf   0x3223
  414344:	add    al,0x47
  414346:	dec    edi
  414347:	cs dec ebx
  414349:	xor    esp,DWORD PTR [ecx+0x42785bee]
  41434f:	icebp  
  414350:	sub    DWORD PTR [edi+eax*2-0x6879bc1d],0x62
  414358:	lods   al,BYTE PTR ds:[esi]
  414359:	and    cl,ch
  41435b:	pop    edi
  41435c:	jp     0x4142e9
  41435e:	add    eax,0xc560554
  414363:	shr    dh,0xce
  414366:	or     ebp,esi
  414368:	fmul   DWORD PTR ds:0xf335b281
  41436e:	int3   
  41436f:	cwde   
  414370:	cmp    eax,0x504e4a2
  414375:	jg     0x4143a3
  414377:	sbb    DWORD PTR [ebp+0x43],0x6d742ec7
  41437e:	std    
  41437f:	std    
  414380:	adc    al,BYTE PTR [eax]
  414382:	out    0x63,al
  414384:	pop    ebx
  414385:	iret   
  414386:	scas   al,BYTE PTR es:[edi]
  414387:	in     eax,dx
  414388:	(bad)  
  41438a:	push   0x5e8aee8
  41438f:	and    ebx,DWORD PTR [eax-0x80]
  414392:	clc    
  414393:	adc    BYTE PTR [esi],ch
  414395:	mov    bh,0x17
  414397:	data16 (bad) 
  414399:	cmp    esp,DWORD PTR [eax-0x277efeb3]
  41439f:	jle    0x4143c0
  4143a1:	push   ds
  4143a2:	imul   ebx,DWORD PTR [ecx-0x38],0x5a
  4143a6:	fxch   st(4)
  4143a8:	mov    ah,bh
  4143aa:	add    ch,BYTE PTR [ebx+0x27]
  4143ad:	push   edx
  4143ae:	out    dx,eax
  4143af:	add    al,0x59
  4143b1:	gs aas 
  4143b3:	sub    BYTE PTR [esi+esi*2],0x3a
  4143b7:	fidivr WORD PTR [esi+0x5d]
  4143ba:	sti    
  4143bb:	adc    dh,BYTE PTR [ebp+ebx*1+0x21]
  4143bf:	sbb    bl,bh
  4143c1:	(bad)  
  4143c2:	mov    edi,0x8682e494
  4143c7:	lea    edi,[ecx-0x70e9b151]
  4143cd:	push   ds
  4143ce:	lea    edi,[ecx]
  4143d0:	mov    eax,DWORD PTR [esi+esi*1-0x79]
  4143d4:	mov    ds:0x3cbc573a,al
  4143d9:	fcomip st,st(2)
  4143db:	dec    eax
  4143dc:	into   
  4143dd:	popf   
  4143de:	lock ret 
  4143e0:	aaa    
  4143e1:	xchg   DWORD PTR [edi-0x6edeb9c9],ecx
  4143e7:	mov    DWORD PTR [edx+0x2d],eax
  4143ea:	jns    0x414370
  4143ec:	inc    esp
  4143ed:	fidivr DWORD PTR [edx]
  4143ef:	dec    ecx
  4143f0:	inc    ecx
  4143f1:	aad    0x35
  4143f3:	sub    al,0x98
  4143f5:	out    0x86,eax
  4143f7:	xchg   BYTE PTR [ecx],dh
  4143f9:	scas   eax,DWORD PTR es:[edi]
  4143fa:	mov    esi,0x748e7e9c
  4143ff:	adc    BYTE PTR [eax+0x75],cl
  414402:	dec    edx
  414403:	and    edx,DWORD PTR [edi]
  414405:	fiadd  WORD PTR [ecx-0x7]
  414408:	pop    ebx
  414409:	inc    ebp
  41440a:	pop    ebx
  41440b:	pusha  
  41440c:	orps   xmm7,XMMWORD PTR [ebx+eax*8]
  414410:	and    esi,edx
  414412:	xor    al,0x92
  414414:	push   ecx
  414415:	or     eax,0x5a4e45c2
  41441a:	and    BYTE PTR [edi+0x21],dl
  41441d:	push   ds
  41441e:	rcl    ah,cl
  414420:	std    
  414421:	xor    bl,bl
  414423:	aad    0x61
  414425:	mov    ah,0xb5
  414427:	repz aas 
  414429:	adc    eax,0xac0c4b2c
  41442e:	mov    ecx,0x35d8489b
  414433:	xor    DWORD PTR [eax-0x4c52b24],esi
  414439:	and    al,0x2
  41443b:	jge    0x41445d
  41443d:	mov    dl,0x8
  41443f:	sti    
  414440:	data16 stos BYTE PTR es:[edi],al
  414442:	push   0xf17d50a2
  414447:	sbb    al,0xef
  414449:	mov    ebx,0x65ebf83c
  41444e:	pop    eax
  41444f:	(bad)  
  414450:	ds pusha 
  414452:	mov    eax,DWORD PTR ds:0x7045445b
  414458:	(bad)  
  414459:	(bad)  
  41445a:	(bad)
  41445d:	fist   WORD PTR [edi+0x3f]
  414460:	jmp    0xa3dc:0x5b042fcc
  414467:	sahf   
  414468:	xor    eax,DWORD PTR [edx]
  41446a:	gs inc esi
  41446c:	mov    es,WORD PTR es:[eax]
  41446f:	dec    ecx
  414470:	loop   0x4144a1
  414472:	idiv   BYTE PTR [ebx+0x4d0e3fda]
  414478:	adc    BYTE PTR [esi-0x6f],ah
  41447b:	sbb    BYTE PTR [edx+0x51],cl
  41447e:	jno    0x414467
  414480:	add    al,0x8f
  414482:	xor    BYTE PTR [edx-0x70],dh
  414485:	test   al,0x3a
  414487:	push   0xffffff99
  414489:	xor    eax,0x39a54b33
  41448e:	or     dl,BYTE PTR [ebp+0x4834bd2d]
  414494:	push   ebp
  414495:	(bad)  
  414496:	enter  0x302b,0x20
  41449a:	xchg   edi,eax
  41449b:	jmp    0x40b0:0xeca34763
  4144a2:	fimul  DWORD PTR [eax+ebx*4-0x54]
  4144a6:	mov    ds:0x28457152,eax
  4144ab:	repz fsub st(4),st
  4144ae:	adc    esi,ebp
  4144b0:	dec    ebx
  4144b1:	ss std 
  4144b3:	jbe    0x414477
  4144b5:	das    
  4144b6:	cmp    BYTE PTR [eax+edx*1],dl
  4144b9:	inc    edi
  4144ba:	or     BYTE PTR [ecx],dl
  4144bc:	outs   dx,DWORD PTR ds:[esi]
  4144bd:	adc    BYTE PTR [edx+edx*8],ah
  4144c0:	and    esp,DWORD PTR [edx+0x4e94e73b]
  4144c6:	cmp    eax,0x41f80233
  4144cb:	mov    dl,0x37
  4144cd:	not    BYTE PTR [eax+0x503d8e65]
  4144d3:	pop    ds
  4144d4:	sbb    DWORD PTR [edi],esp
  4144d6:	pushf  
  4144d7:	cmp    al,0x4
  4144d9:	jge    0x414506
  4144db:	lahf   
  4144dc:	retf   
  4144dd:	xor    eax,0xceb42dd2
  4144e2:	idiv   DWORD PTR [eax]
  4144e4:	sahf   
  4144e5:	jo     0x414536
  4144e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144e8:	jecxz  0x414530
  4144ea:	setb   BYTE PTR [edx]
  4144ed:	add    BYTE PTR [ecx+0x12],bh
  4144f0:	out    dx,al
  4144f1:	add    DWORD PTR [esi],eax
  4144f3:	int    0x33
  4144f5:	shl    DWORD PTR [esp+ebp*8+0x4a02340d],0xbe
  4144fd:	mov    al,0x54
  4144ff:	mov    ds:0x90e29026,al
  414504:	inc    esi
  414505:	add    BYTE PTR [edx],0x2
  414508:	stos   DWORD PTR es:[edi],eax
  414509:	jmp    0x41451d
  41450b:	mov    edx,gs
  41450d:	xchg   ebx,edi
  41450f:	add    cl,BYTE PTR [esi-0x547047a1]
  414515:	out    dx,eax
  414516:	push   ds
  414517:	mov    ch,BYTE PTR [edi+0x35]
  41451a:	std    
  41451b:	pop    esp
  41451c:	retf   0x395a
  41451f:	cli    
  414520:	popf   
  414521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414522:	cmp    edi,DWORD PTR [ecx]
  414524:	jae    0x414596
  414526:	add    BYTE PTR [edx],dl
  414528:	xor    al,0x7b
  41452a:	cmp    al,0xe2
  41452c:	dec    ebx
  41452d:	sahf   
  41452e:	mov    bh,dh
  414530:	inc    eax
  414531:	in     al,0xc
  414533:	xor    ecx,DWORD PTR [eax]
  414535:	pop    eax
  414536:	cmp    edi,DWORD PTR [ecx]
  414538:	cmp    edi,DWORD PTR [ebx+0x1f]
  41453b:	dec    sp
  41453d:	rol    DWORD PTR [eax],0x72
  414540:	cmc    
  414541:	sub    eax,0x7b2f1486
  414546:	adc    ecx,DWORD PTR [ecx+0x491fef5a]
  41454c:	daa    
  41454d:	loope  0x414550
  41454f:	cs das 
  414551:	test   BYTE PTR [edx+0x2b],0x2c
  414555:	jnp    0x41455d
  414557:	dec    ebp
  414558:	jmp    0xc49b:0xcc7780e4
  41455f:	mov    fs:0xd582f6be,eax
  414565:	jmp    0x77b0:0xb6c7ac2d
  41456c:	test   bh,ch
  41456e:	xor    ch,BYTE PTR [esi]
  414570:	jno    0x414580
  414572:	or     edx,0x49762fdf
  414578:	pop    esi
  414579:	jbe    0x4145ce
  41457b:	adc    eax,0x3b9818a9
  414580:	or     eax,0xee2143c2
  414585:	cs dec esp
  414587:	in     al,0xa4
  414589:	pop    ebp
  41458a:	cwde   
  41458b:	daa    
  41458c:	xor    eax,0x1d6b2165
  414591:	xchg   DWORD PTR [ebp-0x7bb4ddb0],ebx
  414597:	inc    edi
  414598:	sbb    esp,0x4a97b247
  41459e:	lods   eax,DWORD PTR ds:[esi]
  41459f:	sbb    bh,BYTE PTR [edi]
  4145a1:	inc    ebp
  4145a2:	and    ax,0x3aa
  4145a6:	and    ebx,DWORD PTR [edx+eax*1]
  4145a9:	int3   
  4145aa:	push   ebx
  4145ab:	popf   
  4145ac:	mov    esi,0xfdc07588
  4145b1:	push   es
  4145b2:	into   
  4145b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145b4:	and    dl,BYTE PTR [edx+0x4b018afb]
  4145ba:	sbb    al,0xc
  4145bc:	and    al,BYTE PTR [ebp+0x1207525d]
  4145c2:	pop    esi
  4145c3:	sbb    al,0xfd
  4145c5:	mov    dl,0x46
  4145c7:	sbb    DWORD PTR [ebx-0x19],eax
  4145ca:	pop    ebx
  4145cb:	mov    dl,0x72
  4145cd:	sar    BYTE PTR [eax-0xf93a96c],cl
  4145d3:	dec    edx
  4145d4:	not    DWORD PTR [ebp+0x53]
  4145d7:	bound  ebp,QWORD PTR [ecx+eax*1-0x6f7d199a]
  4145de:	mov    ecx,0xb8c5092a
  4145e3:	sti    
  4145e4:	fmul   QWORD PTR [edx+0x4e]
  4145e7:	mov    edx,DWORD PTR [edx+0x57]
  4145ea:	push   edx
  4145eb:	in     al,dx
  4145ec:	mov    ds:0x6e0ea9b9,al
  4145f1:	xor    BYTE PTR [esi],bh
  4145f3:	jl     0x414575
  4145f5:	add    bl,BYTE PTR [eax]
  4145f7:	mov    edi,0x470340af
  4145fc:	and    eax,0x1792786e
  414601:	push   0x23c58f7
  414606:	xchg   esi,eax
  414607:	push   ss
  414608:	das    
  414609:	adc    esp,esp
  41460b:	mov    ds:0x55f72cd7,eax
  414610:	(bad)  
  414611:	int3   
  414612:	std    
  414613:	and    al,0x51
  414615:	iret   
  414616:	xor    bh,BYTE PTR [edx-0x15]
  414619:	add    eax,0x5df41104
  41461e:	jmp    0x8f30f935
  414623:	imul   eax,DWORD PTR ds:0x994f339a,0x67
  41462a:	jns    0x4145f1
  41462c:	lds    esp,FWORD PTR [ebx+eiz*4-0x2c9beee7]
  414633:	mov    ebp,0xe1dad098
  414638:	jl     0x414670
  41463a:	mov    ecx,0x78226688
  41463f:	aas    
  414640:	cld    
  414641:	pop    esp
  414642:	adc    dh,dh
  414644:	cmp    edi,ebp
  414646:	jp     0x41468f
  414648:	pop    ds
  414649:	imul   ebp,DWORD PTR gs:[ecx],0xebc26afd
  414650:	xor    eax,0x1c89c7f0
  414655:	in     eax,dx
  414656:	fwait
  414657:	and    BYTE PTR [edi+ecx*8-0x4f297c08],ch
  41465e:	add    bl,al
  414660:	mov    ds:0x938b5c2f,eax
  414665:	sub    al,0xe
  414667:	int    0xc3
  414669:	and    eax,DWORD PTR [edi-0x143403bb]
  41466f:	mov    eax,es:0xae4be503
  414675:	cmp    bl,BYTE PTR [ebp-0x5f]
  414678:	fwait
  414679:	jmp    0xfe355511
  41467e:	das    
  41467f:	sub    eax,0xbf90bd73
  414684:	das    
  414685:	pop    edx
  414686:	xor    ebp,DWORD PTR [esi+0x31f27924]
  41468c:	jp     0x4146fe
  41468e:	pop    ss
  41468f:	sub    al,0x24
  414691:	fdiv   DWORD PTR ds:[ebx+0x5b0ee38f]
  414698:	pop    edi
  414699:	adc    esp,DWORD PTR [edi]
  41469b:	cmp    DWORD PTR [ecx+0x48],ecx
  41469e:	lea    ebp,[edi]
  4146a0:	loope  0x414699
  4146a2:	sub    eax,0xab76f75
  4146a7:	in     eax,dx
  4146a8:	fmul   QWORD PTR [eax+0x65ca7562]
  4146ae:	mov    ecx,0x11084307
  4146b3:	push   ecx
  4146b4:	xor    DWORD PTR [ebp+0x6cfac8f9],esi
  4146ba:	pop    ecx
  4146bb:	push   edi
  4146bc:	inc    ebp
  4146bd:	pop    ds
  4146be:	sub    al,0xe5
  4146c0:	cmp    eax,0x2fa6358b
  4146c5:	(bad)  [esi]
  4146c7:	int    0x7d
  4146c9:	xor    eax,0x4e024d66
  4146ce:	es mov bh,0x9f
  4146d1:	retf   0x3e1b
  4146d4:	sar    dh,0xe4
  4146d7:	mov    ebx,0x983bd149
  4146dc:	add    ch,BYTE PTR [ebx+ebx*1]
  4146df:	fnstsw WORD PTR [esp+edi*1]
  4146e2:	xor    DWORD PTR [eax-0x72],eax
  4146e5:	sub    ebx,edi
  4146e7:	sbb    al,0x6e
  4146e9:	pop    ebp
  4146ea:	out    0x3d,eax
  4146ec:	test   BYTE PTR [edi+edi*8],dl
  4146ef:	cwde   
  4146f0:	(bad)  
  4146f1:	pop    ebp
  4146f2:	mov    ch,0x3a
  4146f4:	inc    esp
  4146f5:	jle    0x414684
  4146f7:	aam    0x13
  4146f9:	sub    ecx,DWORD PTR [edx]
  4146fb:	push   esi
  4146fc:	popf   
  4146fd:	dec    eax
  4146fe:	aas    
  4146ff:	pop    ecx
  414700:	test   al,0xd6
  414702:	pop    eax
  414703:	dec    edx
  414704:	retf   0x12bc
  414707:	retf   
  414708:	lea    esi,ds:0x37fd4542
  41470e:	mov    esi,ebx
  414710:	inc    esp
  414711:	pop    esi
  414712:	jo     0x414704
  414714:	inc    esp
  414715:	sar    BYTE PTR [edi],1
  414717:	inc    edx
  414718:	mov    ah,0x1e
  41471a:	or     eax,0x902b381e
  41471f:	cmp    BYTE PTR [ecx],bh
  414721:	into   
  414722:	pop    ebx
  414723:	and    ecx,esi
  414725:	sub    eax,0xc0c7514
  41472a:	mov    esi,0xd9071a08
  41472f:	mov    gs,edx
  414731:	stos   BYTE PTR es:[edi],al
  414732:	pop    esp
  414733:	push   esp
  414734:	add    DWORD PTR [ecx+0x0],esi
  414737:	dec    esp
  414738:	xchg   esi,eax
  414739:	int3   
  41473a:	les    edi,FWORD PTR [esp+eax*2]
  41473d:	or     eax,0x90890883
  414742:	xchg   edx,eax
  414743:	inc    esp
  414744:	inc    edx
  414745:	adc    esp,edx
  414747:	aas    
  414748:	xor    DWORD PTR [ecx+ecx*4-0x3b4038f5],esp
  41474f:	push   edx
  414750:	mov    bl,0x1d
  414752:	mov    esi,0xaf448fcb
  414757:	(bad)  
  414758:	out    dx,eax
  414759:	jbe    0x41474c
  41475b:	inc    esi
  41475c:	leave  
  41475d:	dec    eax
  41475e:	xor    ebp,DWORD PTR [ebx+edi*1]
  414761:	es scas al,BYTE PTR es:[edi]
  414763:	xor    eax,0x6938ac14
  414768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414769:	in     al,0x5
  41476b:	and    DWORD PTR [esi+0x1d],edx
  41476e:	xor    edx,DWORD PTR [eax]
  414770:	ss mov esp,0xab72d846
  414776:	push   ebx
  414777:	aaa    
  414778:	in     eax,dx
  414779:	sub    al,0x8a
  41477b:	sbb    eax,0x7a74b906
  414780:	push   ebp
  414781:	out    dx,eax
  414782:	sbb    BYTE PTR [ecx],bh
  414784:	inc    edi
  414785:	lods   al,BYTE PTR ds:[esi]
  414786:	retf   
  414787:	or     DWORD PTR [edx-0x72],ecx
  41478a:	or     cl,0xa9
  41478d:	push   ss
  41478e:	mov    dh,0xdb
  414790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414791:	xchg   esi,eax
  414792:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414793:	fcom   QWORD PTR [esi]
  414795:	cmp    al,0x82
  414797:	int3   
  414798:	xor    eax,DWORD PTR [edi]
  41479a:	push   ss
  41479b:	pushw  ss
  41479d:	jne    0x4147b7
  41479f:	push   cs
  4147a0:	inc    esp
  4147a1:	or     eax,0x4f452e36
  4147a6:	test   BYTE PTR [eax],cl
  4147a8:	push   esi
  4147a9:	loope  0x4147df
  4147ab:	or     eax,0x4fe5463e
  4147b0:	repz jbe 0x414737
  4147b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147b4:	xchg   BYTE PTR [ebp+eax*4-0x5b],bh
  4147b8:	sahf   
  4147b9:	jl     0x4147ab
  4147bb:	and    edi,DWORD PTR [edi+0x71059b32]
  4147c1:	cmp    BYTE PTR [edi-0x3e],dh
  4147c4:	(bad)  
  4147c5:	cmp    al,0x32
  4147c7:	stos   DWORD PTR es:[edi],eax
  4147c8:	cs mov ecx,0x97636b01
  4147ce:	int3   
  4147cf:	and    bh,BYTE PTR [ecx+ecx*1+0x7de9a923]
  4147d6:	clc    
  4147d7:	loope  0x414819
  4147d9:	adc    ax,0xab51
  4147dd:	cmp    eax,0xbb8b12d3
  4147e2:	(bad)  
  4147e3:	sub    dl,BYTE PTR [ebx]
  4147e5:	(bad)  
  4147e7:	ins    BYTE PTR es:[edi],dx
  4147e8:	inc    esp
  4147e9:	xchg   edx,eax
  4147ea:	pop    edx
  4147eb:	pop    esp
  4147ec:	sub    al,BYTE PTR [ecx+ecx*4+0x9760cf8]
  4147f3:	push   0xf13e04b6
  4147f8:	mov    esi,0xd0e64de8
  4147fd:	xchg   esi,eax
  4147fe:	pop    ss
  4147ff:	or     al,BYTE PTR [ebp-0x6b3526d]
  414805:	jmp    FWORD PTR [eax+eax*1]
  414808:	es int3 
  41480a:	xchg   DWORD PTR [esp+ecx*4],ebx
  41480d:	inc    edx
  41480e:	xor    eax,0x2c7ac419
  414813:	mov    ebp,0x73a5fa3
  414818:	jg     0x414848
  41481a:	pop    esi
  41481b:	mov    ch,0x88
  41481d:	(bad)  
  41481e:	rol    BYTE PTR [edi+0x32],cl
  414821:	add    ebp,esp
  414823:	jp     0x414832
  414825:	sbb    BYTE PTR [ecx],0x1b
  414828:	in     al,dx
  414829:	xchg   ebx,eax
  41482a:	sbb    esi,DWORD PTR [ecx+0x7d098d2a]
  414830:	jecxz  0x414854
  414832:	ja     0x4147ca
  414834:	outs   dx,DWORD PTR ds:[esi]
  414835:	add    al,0xc4
  414837:	call   0x7995974b
  41483c:	pop    ecx
  41483d:	fist   DWORD PTR [eax-0x19beac9c]
  414843:	out    dx,eax
  414844:	sub    esi,DWORD PTR [ebx+0x0]
  414847:	into   
  414848:	sahf   
  414849:	loopne 0x4148a8
  41484b:	(bad)  
  41484c:	pop    ecx
  41484d:	xor    eax,0xa29da1b
  414852:	dec    edi
  414853:	dec    ecx
  414854:	in     al,0x2a
  414856:	inc    edx
  414857:	imul   ebx,DWORD PTR cs:[ebx+0xe],0xfffffff2
  41485c:	adc    BYTE PTR [ecx+0x6227af33],bl
  414862:	dec    edi
  414863:	dec    esp
  414864:	push   0x351dd7ec
  414869:	push   edx
  41486a:	push   ss
  41486b:	fstp   DWORD PTR [eax-0x68a9b9b]
  414871:	jmp    0x4148ef
  414873:	ss pop es
  414875:	jae    0x41489e
  414877:	sbb    dl,al
  414879:	push   ds
  41487a:	pop    esi
  41487b:	pop    edx
  41487c:	push   es
  41487d:	xor    BYTE PTR [eax],dl
  41487f:	pop    ds
  414880:	cmp    BYTE PTR ds:0x97c3eb54,al
  414886:	sti    
  414887:	mov    dh,0x29
  414889:	pushf  
  41488a:	xor    eax,0x190bd9e9
  41488f:	push   ds
  414890:	iret   
  414891:	leave  
  414892:	aas    
  414893:	and    al,0x27
  414895:	mov    esi,0x6b292829
  41489a:	das    
  41489b:	in     eax,0xd9
  41489d:	(bad)  [eax+ecx*8+0x546f3daf]
  4148a4:	add    eax,0xd658770b
  4148a9:	xor    DWORD PTR [edi-0x2faa6459],ebx
  4148af:	lfence 
  4148b2:	inc    esi
  4148b3:	ficomp DWORD PTR ds:[ebp+0x69]
  4148b7:	scas   al,BYTE PTR es:[edi]
  4148b8:	xchg   ebx,eax
  4148b9:	and    eax,0xe82f4f5
  4148be:	mov    edi,0x37e05e04
  4148c3:	fs dec esp
  4148c5:	jns    0x4148d9
  4148c7:	pop    ecx
  4148c8:	pop    es
  4148c9:	adc    BYTE PTR [ebp+0x63],0x37
  4148cd:	cmp    eax,0xdfb1ce8c
  4148d2:	or     ch,BYTE PTR [ecx]
  4148d4:	mov    eax,0x1663ee9e
  4148d9:	dec    ebx
  4148da:	ss out dx,eax
  4148dc:	cld    
  4148dd:	xchg   esp,eax
  4148de:	fwait
  4148df:	pop    ss
  4148e0:	push   edx
  4148e1:	cmp    dl,ch
  4148e3:	mov    al,0xb4
  4148e5:	add    esi,DWORD PTR ds:0x75df87b8
  4148eb:	add    BYTE PTR [esi-0x28],dl
  4148ee:	call   0x975c3a45
  4148f3:	rcl    eax,0x26
  4148f6:	mov    bh,0x80
  4148f8:	sti    
  4148f9:	pop    edi
  4148fa:	pop    ds
  4148fb:	ficomp DWORD PTR [ebx-0x29]
  4148fe:	mov    al,ds:0xf9834155
  414903:	pop    esp
  414904:	xor    ebp,esi
  414906:	or     cl,cl
  414908:	jp     0x414940
  41490a:	or     DWORD PTR [ecx+0x6d],edi
  41490d:	mov    BYTE PTR [edi+ebx*1+0x47],bl
  414911:	push   0x2e
  414913:	pop    edi
  414914:	jne    0x4148cd
  414916:	sbb    BYTE PTR [edx+0x49],dh
  414919:	push   eax
  41491a:	enter  0x2cd6,0xba
  41491e:	aas    
  41491f:	cmp    al,0x26
  414921:	pop    ecx
  414922:	sub    al,0x41
  414924:	add    ebx,DWORD PTR [eax+0x29]
  414927:	(bad)  
  414928:	cmp    BYTE PTR [ebx+0x618a965c],cl
  41492e:	sub    DWORD PTR [ecx],ebx
  414930:	jecxz  0x4148fc
  414932:	sub    eax,0xe13c49c3
  414937:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414938:	sbb    eax,0x1f3f33cf
  41493d:	jae    0x4148e6
  41493f:	or     al,0x3e
  414941:	aas    
  414942:	jno    0x41495b
  414944:	mov    cl,BYTE PTR [ebx-0x3f]
  414947:	inc    edi
  414948:	inc    esi
  414949:	add    ebp,ecx
  41494b:	adc    ch,BYTE PTR [eax-0x5b]
  41494e:	inc    ebx
  41494f:	dec    ebx
  414950:	das    
  414951:	jecxz  0x414940
  414953:	sbb    dh,ch
  414955:	stos   DWORD PTR es:[edi],eax
  414956:	(bad)  
  414957:	lahf   
  414958:	sub    eax,0x3d675df7
  41495d:	mov    esp,DWORD PTR [eax+ebp*8]
  414960:	or     ah,al
  414962:	and    ah,BYTE PTR ds:[ebx]
  414965:	aam    0xed
  414967:	sub    eax,0x808e52ae
  41496c:	xor    eax,0x275d0743
  414971:	sti    
  414972:	adc    DWORD PTR gs:[esi-0x55],ecx
  414976:	cmp    eax,0x2ea94906
  41497b:	das    
  41497c:	inc    edx
  41497d:	xor    BYTE PTR [ebx],al
  41497f:	std    
  414980:	dec    edx
  414981:	mov    WORD PTR [ecx],?
  414983:	sbb    bh,BYTE PTR [edx]
  414985:	nop
  414986:	fst    DWORD PTR [edx+0x72]
  414989:	and    bh,BYTE PTR ds:0x40632c10
  41498f:	and    eax,DWORD PTR [ebx+0x6d]
  414992:	clc    
  414993:	loop   0x414963
  414995:	mov    ds:0xc723321d,al
  41499a:	and    al,0x52
  41499c:	mov    ds:0xe1c229ea,eax
  4149a1:	add    al,0x44
  4149a3:	and    BYTE PTR [edi],dh
  4149a5:	mov    bl,0x48
  4149a7:	daa    
  4149a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149a9:	sub    dl,BYTE PTR [edi+edi*4]
  4149ac:	xor    BYTE PTR [edi-0x7300d855],al
  4149b2:	fwait
  4149b3:	test   al,0x8d
  4149b5:	inc    ebp
  4149b6:	dec    esi
  4149b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149b8:	fmulp  st(5),st
  4149ba:	xchg   edx,eax
  4149bb:	xor    eax,0x99f03db8
  4149c0:	das    
  4149c1:	push   ss
  4149c2:	mov    cl,0x24
  4149c4:	or     eax,DWORD PTR [edx-0x7a]
  4149c7:	enter  0xf24d,0x2
  4149cb:	mov    bh,0xab
  4149cd:	outs   dx,BYTE PTR ds:[esi]
  4149ce:	or     eax,eax
  4149d0:	daa    
  4149d1:	add    BYTE PTR [ecx+0x4c],al
  4149d4:	sub    dh,al
  4149d6:	cmp    al,0xd
  4149d8:	ss inc esp
  4149da:	pop    eax
  4149db:	cmp    DWORD PTR [ecx],0x49
  4149de:	add    edx,DWORD PTR [ebp+ebp*1+0x7a2755eb]
  4149e5:	pop    ss
  4149e6:	js     0x414979
  4149e8:	xor    dl,BYTE PTR [edi+0x64]
  4149eb:	in     al,0x1e
  4149ed:	push   ebx
  4149ee:	and    eax,edi
  4149f0:	enter  0xeee0,0x82
  4149f4:	xor    al,0x71
  4149f6:	sti    
  4149f7:	test   DWORD PTR [eax-0x48],ebx
  4149fa:	add    bx,WORD PTR [esi]
  4149fd:	and    al,0x58
  4149ff:	sbb    al,BYTE PTR [ebx+0xe7612f8]
  414a05:	ins    BYTE PTR es:[edi],dx
  414a06:	sub    DWORD PTR [ecx-0x656a80f7],esi
  414a0c:	xor    DWORD PTR [ebx+0x7d],ecx
  414a0f:	push   edi
  414a10:	xchg   ecx,eax
  414a11:	rol    bh,1
  414a13:	mov    dl,0xb
  414a15:	daa    
  414a16:	jbe    0x4149a4
  414a18:	out    dx,al
  414a19:	cmp    eax,0x8329e1d3
  414a1e:	sub    bl,bl
  414a20:	daa    
  414a21:	push   ds
  414a22:	mov    ecx,DWORD PTR [ecx-0x3a9a980a]
  414a28:	out    dx,al
  414a29:	fidiv  DWORD PTR [edi]
  414a2b:	mov    cl,0xca
  414a2d:	and    DWORD PTR [eax],eax
  414a2f:	xchg   DWORD PTR [esi],esp
  414a31:	mov    ch,0x2c
  414a33:	xlat   BYTE PTR ds:[ebx]
  414a34:	pop    ecx
  414a35:	push   eax
  414a36:	add    dh,BYTE PTR [edi-0x54aa87e1]
  414a3c:	sbb    edx,DWORD PTR [ecx+esi*2]
  414a3f:	or     eax,0x671d0c16
  414a44:	adc    edi,DWORD PTR [ebx+0x75]
  414a47:	and    cl,BYTE PTR [ecx]
  414a49:	cmp    edx,ebx
  414a4b:	sub    BYTE PTR [edx+0x71],bh
  414a4e:	dec    edx
  414a4f:	gs inc edi
  414a51:	rcl    BYTE PTR [edx-0x41],cl
  414a54:	ja     0x414a41
  414a56:	cli    
  414a57:	lods   eax,DWORD PTR ds:[esi]
  414a58:	clc    
  414a59:	cmc    
  414a5a:	lock je 0x414a87
  414a5d:	and    DWORD PTR [edi],ecx
  414a5f:	push   edi
  414a60:	push   ss
  414a61:	mov    BYTE PTR [esi-0x1f355dd5],dl
  414a67:	dec    ecx
  414a68:	and    BYTE PTR [ebp+0x66],0x47
  414a6c:	or     al,0x73
  414a6e:	call   0x5d49:0xc707d314
  414a75:	imul   edi,DWORD PTR [ecx+ecx*2],0x9d35e744
  414a7c:	std    
  414a7d:	pop    ds
  414a7e:	sbb    ebx,DWORD PTR [ebx-0x49]
  414a81:	mov    al,0x42
  414a83:	test   eax,0xf254006d
  414a88:	xlat   BYTE PTR ds:[ebx]
  414a89:	xor    DWORD PTR [esi+ebx*8+0x45a2574d],eax
  414a90:	fadd   st(1),st
  414a92:	test   BYTE PTR [edx+0x6a],ch
  414a95:	xor    BYTE PTR [edi],dl
  414a97:	test   BYTE PTR ds:0x6b28b818,ah
  414a9d:	mov    ah,0x6c
  414a9f:	push   ecx
  414aa0:	dec    esp
  414aa1:	inc    esp
  414aa2:	gs (bad) 
  414aa4:	sbb    bh,BYTE PTR [ecx+0x30]
  414aa7:	push   eax
  414aa8:	jno    0x414a5b
  414aaa:	je     0x414ac1
  414aac:	pop    ecx
  414aad:	outs   dx,DWORD PTR ds:[esi]
  414aae:	addr16 push edx
  414ab0:	(bad)  
  414ab1:	jmp    0x4410:0x14a8215f
  414ab8:	mov    al,0x5
  414aba:	ror    BYTE PTR [ebp-0x2cb0cb1c],0x13
  414ac1:	leave  
  414ac2:	add    edi,DWORD PTR [esi+ecx*1]
  414ac5:	push   0x60070e59
  414aca:	adc    bl,BYTE PTR [edi]
  414acc:	cmp    DWORD PTR [edx],ecx
  414ace:	fdiv   QWORD PTR [edi]
  414ad0:	or     BYTE PTR ds:0x75294aa3,bl
  414ad6:	sub    al,0x6f
  414ad8:	pop    ds
  414ad9:	pusha  
  414ada:	cwde   
  414adb:	sbb    BYTE PTR [edx+eax*8-0x60],al
  414adf:	lock dec edx
  414ae1:	fsub   QWORD PTR cs:[esi+0x7c]
  414ae5:	fsubr  DWORD PTR ds:0x5675cce8
  414aeb:	push   ecx
  414aec:	dec    ecx
  414aed:	lods   eax,DWORD PTR ds:[esi]
  414aee:	hlt    
  414aef:	dec    ecx
  414af0:	cwde   
  414af1:	and    ebp,DWORD PTR [ecx+ecx*2]
  414af4:	dec    ecx
  414af5:	addr16 in al,dx
  414af7:	shl    DWORD PTR [esi-0x15d49ca7],0x29
  414afe:	jae    0x414afa
  414b00:	div    BYTE PTR [ecx+0x6c]
  414b03:	pusha  
  414b04:	mov    gs,WORD PTR [ecx]
  414b06:	sbb    eax,0x9dee9a1d
  414b0b:	mov    bh,BYTE PTR [esi+0x414d39bf]
  414b11:	pop    ecx
  414b12:	lds    edi,FWORD PTR [edx-0x47e4cfdb]
  414b18:	rol    bl,cl
  414b1a:	(bad)  
  414b1b:	out    dx,al
  414b1c:	js     0x414ade
  414b1e:	daa    
  414b1f:	pop    edi
  414b20:	das    
  414b21:	jae    0x414ad4
  414b23:	push   ecx
  414b24:	sbb    DWORD PTR [ecx-0x4d],ebx
  414b27:	mov    cl,0x48
  414b29:	dec    edi
  414b2a:	fstp   QWORD PTR [ecx]
  414b2c:	jmp    0x746f5884
  414b31:	mov    dl,0x69
  414b33:	call   FWORD PTR [eax]
  414b35:	out    dx,eax
  414b36:	adc    ah,BYTE PTR [ecx]
  414b38:	ins    BYTE PTR es:[edi],dx
  414b39:	call   0x8245:0x98266ec9
  414b40:	add    eax,0x1e20eaa7
  414b45:	fdiv   DWORD PTR [esi+0x4d]
  414b48:	pop    ds
  414b49:	or     al,0xe
  414b4b:	cmp    BYTE PTR [edi+0x370b2b6c],0x7d
  414b52:	sbb    dl,BYTE PTR [eax]
  414b54:	imul   ebp,DWORD PTR [edi],0x17
  414b57:	push   esi
  414b58:	pop    ss
  414b59:	mov    dl,0x30
  414b5b:	punpcklwd mm3,DWORD PTR [ebx]
  414b5e:	jnp    0x414b87
  414b60:	inc    ebx
  414b61:	loopne 0x414bdf
  414b63:	and    DWORD PTR ds:0x1a14002b,ebp
  414b69:	xchg   ecx,eax
  414b6a:	adc    DWORD PTR es:[ebp-0x10],ebx
  414b6e:	and    al,0x3d
  414b70:	push   cs
  414b71:	jmp    0x1a65eda3
  414b76:	or     BYTE PTR [edx],ch
  414b78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b79:	dec    edx
  414b7a:	pop    edi
  414b7b:	push   ss
  414b7c:	push   ss
  414b7d:	cmp    ah,BYTE PTR [ebx]
  414b7f:	or     eax,0x1c2249c7
  414b84:	add    DWORD PTR [eax+0x19],0x33
  414b88:	jg     0x414ba9
  414b8a:	inc    edi
  414b8b:	add    dl,BYTE PTR [edi-0x7f1e8f7d]
  414b91:	add    cl,BYTE PTR [edi]
  414b93:	jp     0x414bc4
  414b95:	sub    al,0xa4
  414b97:	pop    ds
  414b98:	mov    edx,0xf64c0de4
  414b9d:	cmp    ecx,DWORD PTR [esi]
  414b9f:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  414ba1:	jle    0x414b5d
  414ba3:	cdq    
  414ba4:	arpl   WORD PTR [edi-0x45ebc792],ax
  414baa:	stos   BYTE PTR es:[edi],al
  414bab:	inc    eax
  414bac:	gs jne 0x414b37
  414baf:	inc    ecx
  414bb0:	xor    al,0x23
  414bb2:	mov    esp,ebp
  414bb4:	and    eax,0xa814e82e
  414bb9:	xor    BYTE PTR [esi],dl
  414bbb:	add    ecx,DWORD PTR [ebp+0x41064584]
  414bc1:	in     al,dx
  414bc2:	pop    esp
  414bc3:	ins    BYTE PTR es:[edi],dx
  414bc4:	das    
  414bc5:	jae    0x414b55
  414bc7:	inc    edi
  414bc8:	scas   eax,DWORD PTR es:[edi]
  414bc9:	sbb    ah,dl
  414bcb:	and    DWORD PTR [edx],esp
  414bcd:	and    BYTE PTR [ebx+0x1a],al
  414bd0:	sub    al,0xfd
  414bd2:	sbb    esp,DWORD PTR [edi]
  414bd4:	mov    ch,0x14
  414bd6:	mov    ch,0xf
  414bd8:	cmp    BYTE PTR [edi+edx*2-0x35564da9],ch
  414bdf:	adc    ah,BYTE PTR [edi+0x7d]
  414be2:	and    BYTE PTR [edx+0xc9be099],0x90
  414be9:	pushf  
  414bea:	mov    ds:0x2a214f52,al
  414bef:	js     0x414c13
  414bf1:	sbb    al,0xc7
  414bf3:	outs   dx,DWORD PTR ds:[esi]
  414bf4:	inc    ebx
  414bf5:	mov    ?,edx
  414bf7:	retf   
  414bf8:	push   es
  414bf9:	mov    ch,0xc6
  414bfb:	in     al,0x1a
  414bfd:	lahf   
  414bfe:	xor    esi,edi
  414c00:	mov    bl,0xa1
  414c02:	or     eax,0xfb385d5b
  414c07:	cld    
  414c08:	and    eax,0xefc1a369
  414c0d:	or     cl,BYTE PTR [eax-0x79]
  414c10:	sbb    al,0xb
  414c12:	call   0x2c177bd3
  414c17:	mov    eax,0x43a905f0
  414c1c:	push   ss
  414c1d:	in     al,0x5e
  414c1f:	pop    edx
  414c20:	sahf   
  414c21:	in     eax,dx
  414c22:	sub    al,0x56
  414c24:	jmp    0x28ad3329
  414c29:	xor    edi,DWORD PTR [edi]
  414c2b:	daa    
  414c2c:	push   eax
  414c2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c2e:	and    eax,0x8d9485f
  414c33:	dec    esi
  414c34:	pop    ss
  414c35:	daa    
  414c36:	mov    edx,0x3d224854
  414c3b:	stos   DWORD PTR es:[edi],eax
  414c3c:	sbb    al,0x1d
  414c3e:	add    al,0x90
  414c40:	sbb    dl,BYTE PTR [edi-0x58]
  414c43:	iret   
  414c44:	lods   eax,DWORD PTR ds:[esi]
  414c46:	sbb    DWORD PTR [ebx+0x5b],edi
  414c49:	mov    bh,0xd
  414c4b:	jmp    0xe58f:0x3df64a1c
  414c52:	cmp    ch,BYTE PTR [edi]
  414c54:	add    al,0x87
  414c56:	je     0x414c8a
  414c58:	stos   DWORD PTR es:[edi],eax
  414c59:	sbb    BYTE PTR ds:0xa638e03d,dl
  414c5f:	sub    al,dl
  414c61:	jle    0x414cbe
  414c63:	adc    esi,DWORD PTR [eax+0x60]
  414c66:	xor    ah,BYTE PTR [edx+0x1b]
  414c69:	or     esp,0xffffffb5
  414c6c:	or     bh,BYTE PTR [eax+edx*4+0x6e]
  414c70:	add    ebx,edi
  414c72:	sub    BYTE PTR gs:[bx+si],al
  414c76:	mov    ebp,DWORD PTR [edi+0x50720783]
  414c7c:	stos   BYTE PTR es:[edi],al
  414c7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c7e:	xor    edx,ecx
  414c80:	inc    ebx
  414c81:	push   ss
  414c82:	sbb    eax,0x505bc44c
  414c87:	arpl   WORD PTR [edx+0x12],dx
  414c8a:	mov    al,0x41
  414c8c:	jb     0x414cf2
  414c8e:	test   DWORD PTR [edi+0x5e],edx
  414c91:	lea    edi,[ecx+0x53]
  414c94:	and    BYTE PTR [ecx+ecx*4],0xff
  414c98:	mov    al,ds:0x20582f67
  414c9d:	cmp    DWORD PTR [ecx],0x3f3254d4
  414ca3:	rcr    BYTE PTR [ebx+ebx*2+0x3956fe0f],1
  414caa:	out    dx,eax
  414cab:	ins    BYTE PTR es:[edi],dx
  414cac:	mov    dl,bh
  414cae:	ja     0x414c5f
  414cb0:	cs fs ret 0xaa5e
  414cb5:	popa   
  414cb6:	push   edx
  414cb7:	loopne 0x414c42
  414cb9:	aas    
  414cba:	inc    ebp
  414cbb:	and    DWORD PTR [ebx+0x56],edi
  414cbe:	push   ebp
  414cbf:	or     eax,0x955c3431
  414cc4:	jbe    0x414d0d
  414cc6:	dec    esi
  414cc7:	stos   BYTE PTR es:[edi],al
  414cc8:	jns    0x414cb4
  414cca:	(bad)  
  414ccb:	mul    esi
  414ccd:	adc    BYTE PTR [edi-0x60],0xe7
  414cd1:	retf   
  414cd2:	(bad)  
  414cd3:	add    ecx,DWORD PTR [ecx+eax*8-0x5e]
  414cd7:	inc    edi
  414cd8:	jae    0x414d30
  414cda:	sub    ebp,DWORD PTR [ecx-0x5]
  414cdd:	adc    DWORD PTR gs:[ecx-0x6edbde0],esi
  414ce4:	(bad)  
  414ce5:	loopne 0x414d5f
  414ce7:	xchg   ebp,eax
  414ce8:	in     al,0x57
  414cea:	or     eax,0xe3368da1
  414cef:	sbb    BYTE PTR ds:0xf97b1c3b,ah
  414cf5:	mov    WORD PTR [ecx-0x3233223b],cs
  414cfb:	arpl   di,si
  414cfd:	inc    eax
  414cfe:	fcomp  QWORD PTR [esi+0x1bd7eb19]
  414d04:	adc    cl,BYTE PTR [edx+0x1f]
  414d07:	xor    BYTE PTR [eax+eax*8],bl
  414d0a:	and    bh,dh
  414d0c:	jo     0x414ca7
  414d0e:	in     eax,dx
  414d0f:	loopne 0x414d63
  414d11:	rcr    BYTE PTR [ecx+0x2046ae3a],cl
  414d17:	adc    DWORD PTR [ecx+0x14],edx
  414d1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d1b:	mov    cl,dh
  414d1d:	push   0x27fe84a1
  414d22:	in     al,dx
  414d23:	xchg   esp,eax
  414d24:	fstp   TBYTE PTR [ebp+0x19]
  414d27:	in     eax,dx
  414d28:	sub    bl,BYTE PTR ds:0x1a53741e
  414d2e:	adc    eax,0x7f0b0de3
  414d33:	or     al,0x52
  414d35:	inc    edx
  414d36:	int    0xd9
  414d38:	sub    bh,bh
  414d3a:	jecxz  0x414da3
  414d3c:	sbb    eax,0x2cca024e
  414d41:	(bad)  
  414d43:	dec    eax
  414d44:	adc    BYTE PTR [edi-0xa2fce03],dl
  414d4a:	cmp    BYTE PTR [eax],bl
  414d4c:	cmp    eax,0xe7e0e61d
  414d51:	addr16 dec ebx
  414d53:	push   edx
  414d54:	xor    BYTE PTR [ebx-0x6e],0x90
  414d58:	out    dx,al
  414d59:	cld    
  414d5a:	neg    DWORD PTR [edx]
  414d5c:	clc    
  414d5d:	sbb    al,BYTE PTR [edx]
  414d5f:	dec    ebx
  414d60:	sub    al,0x76
  414d62:	test   al,0x54
  414d64:	cmp    al,0x4d
  414d66:	nop
  414d67:	loope  0x414d30
  414d69:	mov    eax,0x3493117f
  414d6e:	mov    fs,WORD PTR es:[eax-0x6a]
  414d72:	nop
  414d73:	adc    ecx,DWORD PTR [eax-0x4b]
  414d76:	ss mov dl,bh
  414d79:	add    DWORD PTR [edx+0x35],edi
  414d7c:	and    DWORD PTR [ebp+0x2a],ecx
  414d7f:	std    
  414d80:	or     eax,0xbe4b29bf
  414d85:	shr    BYTE PTR [esi],1
  414d87:	repz sub cl,BYTE PTR [ebp+0x7]
  414d8b:	mov    dl,BYTE PTR [ecx+0x32297422]
  414d91:	arpl   WORD PTR [eax],cx
  414d93:	sub    eax,0xe108374c
  414d98:	bound  ebp,QWORD PTR [ebx]
  414d9a:	in     al,0x21
  414d9c:	iret   
  414d9d:	jl     0x414dcc
  414d9f:	cmp    eax,DWORD PTR [ebx+0x5bc12157]
  414da5:	sub    BYTE PTR [esi+0x29],ah
  414da8:	or     BYTE PTR [edx+0x1b],dl
  414dab:	nop
  414dac:	aam    0xa0
  414dae:	sub    DWORD PTR [esi+0x5e5b9e30],ebp
  414db4:	dec    esi
  414db5:	add    ebp,ebp
  414db7:	push   0x12
  414db9:	adc    ah,BYTE PTR [edx+eax*1]
  414dbc:	sub    DWORD PTR [esi],eax
  414dbe:	test   BYTE PTR [ebx],dl
  414dc0:	jno    0x414d59
  414dc2:	repz adc BYTE PTR [ecx],ch
  414dc5:	(bad)  
  414dc6:	and    ebp,DWORD PTR [ebx+0x3a]
  414dc9:	xor    edx,DWORD PTR cs:[edx+0x760d8712]
  414dd0:	bound  esp,QWORD PTR [esi+esi*1+0x2c]
  414dd4:	sbb    al,BYTE PTR [ebx+0x6dfa4d4e]
  414dda:	mov    ecx,0xed049919
  414ddf:	sub    al,BYTE PTR [eax+0x43149329]
  414de5:	xor    ch,BYTE PTR [ecx*2+0x111529f9]
  414dec:	lahf   
  414ded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dee:	pop    ecx
  414def:	imul   ebp,ebx,0xbca12e16
  414df5:	shl    DWORD PTR [eax+0x13],1
  414df8:	jb     0x414e12
  414dfa:	dec    ebx
  414dfb:	cdq    
  414dfc:	dec    esi
  414dfd:	outs   dx,BYTE PTR ds:[esi]
  414dfe:	inc    eax
  414dff:	and    edx,DWORD PTR [ebx]
  414e01:	inc    edx
  414e02:	sub    dl,al
  414e04:	xchg   edx,eax
  414e05:	sub    al,0x2b
  414e07:	es push ds
  414e09:	xor    ebp,DWORD PTR [edi]
  414e0b:	and    DWORD PTR [esi],0xf5dd4b19
  414e11:	test   al,0x20
  414e13:	push   es
  414e14:	add    ebx,DWORD PTR [ebx]
  414e16:	push   ebx
  414e17:	jne    0x414da2
  414e19:	adc    DWORD PTR fs:[edx],ebx
  414e1c:	mov    ebp,0xb7061020
  414e21:	dec    ebx
  414e22:	pop    ebx
  414e23:	or     ch,BYTE PTR [ecx]
  414e25:	dec    esi
  414e26:	or     al,0x73
  414e28:	adc    al,0xcd
  414e2a:	mov    al,0x20
  414e2c:	(bad)  
  414e2d:	adc    BYTE PTR [ebx+0x21],cl
  414e30:	pusha  
  414e31:	pop    es
  414e32:	mov    esi,0x7d361e8a
  414e37:	cdq    
  414e38:	mov    ecx,DWORD PTR [edx]
  414e3a:	cmp    eax,0x1f3bed66
  414e3f:	and    ah,BYTE PTR [ebx+0x52]
  414e42:	pop    edi
  414e43:	sub    al,0x1e
  414e45:	mov    eax,cs:0xfc6e0a66
  414e4b:	xchg   DWORD PTR [esi+0x3ed160f4],eax
  414e51:	sbb    al,BYTE PTR [eax+ebx*1+0x63ee54dd]
  414e58:	mov    edx,0x3cfd9842
  414e5d:	ret    0x2d7e
  414e60:	inc    edx
  414e61:	inc    esp
  414e62:	or     eax,0x267788d4
  414e67:	mov    edx,0xa0372068
  414e6c:	pop    ebp
  414e6d:	dec    ebp
  414e6e:	sub    eax,esp
  414e70:	push   edx
  414e71:	dec    ebx
  414e72:	popf   
  414e73:	adc    dl,BYTE PTR [eax+0x57]
  414e76:	lea    eax,[esi+0x70]
  414e79:	jae    0x414eae
  414e7b:	fwait
  414e7c:	mov    ebx,0x1133167b
  414e81:	push   ecx
  414e82:	(bad)  
  414e83:	push   esi
  414e84:	stos   DWORD PTR es:[edi],eax
  414e85:	je     0x414ec6
  414e87:	adc    eax,0xec505e2a
  414e8c:	adc    ebp,DWORD PTR [eax]
  414e8e:	xor    eax,0xd541736e
  414e93:	add    BYTE PTR ds:0xb24771c,ah
  414e99:	mov    edx,0x5d652e42
  414e9e:	push   edx
  414e9f:	and    bl,bl
  414ea1:	pop    esp
  414ea2:	pop    esp
  414ea3:	shr    bh,1
  414ea5:	sbb    cl,BYTE PTR [eax]
  414ea7:	jo     0x414efa
  414ea9:	bound  esi,QWORD PTR [ebx+0x11]
  414eac:	pusha  
  414ead:	repnz or DWORD PTR [ecx+0x1fb87668],ebx
  414eb4:	dec    ecx
  414eb5:	sbb    bh,BYTE PTR [ecx]
  414eb7:	add    ah,BYTE PTR [ebx+0x20]
  414eba:	jge    0x414eb8
  414ebc:	adc    eax,0x6f022084
  414ec1:	lock push ds
  414ec3:	(bad)  [eax+0x28]
  414ec6:	loope  0x414ec6
  414ec8:	stos   DWORD PTR es:[edi],eax
  414ec9:	push   esp
  414eca:	xlat   BYTE PTR ds:[ebx]
  414ecb:	das    
  414ecc:	outs   dx,BYTE PTR ds:[esi]
  414ecd:	popa   
  414ece:	jbe    0x414eff
  414ed0:	dec    esp
  414ed1:	and    DWORD PTR [ebp+0x2c],esi
  414ed4:	bound  ecx,QWORD PTR [eax+0x6c]
  414ed7:	push   esi
  414ed8:	mov    al,0xac
  414eda:	jg     0x414eaf
  414edc:	repz fwait
  414ede:	dec    esp
  414edf:	dec    edx
  414ee0:	cmp    al,0x2d
  414ee2:	ins    BYTE PTR es:[edi],dx
  414ee3:	push   ebp
  414ee4:	addr16 pop ds
  414ee6:	inc    esp
  414ee7:	or     edi,DWORD PTR [edi+0x40]
  414eea:	xchg   edi,eax
  414eeb:	push   edi
  414eec:	dec    ebx
  414eed:	push   ss
  414eee:	sub    eax,DWORD PTR [ebx+0x59]
  414ef1:	inc    edi
  414ef2:	aaa    
  414ef3:	or     DWORD PTR [edx],0xf18c5985
  414ef9:	pop    edx
  414efa:	sbb    DWORD PTR [edx-0x4edd715c],edx
  414f00:	mov    eax,0x42909048
  414f05:	push   ds
  414f06:	inc    ecx
  414f07:	push   0x27560c20
  414f0c:	sti    
  414f0d:	cwde   
  414f0e:	retf   
  414f0f:	dec    ecx
  414f10:	call   0x936993f4
  414f15:	mov    ebp,0x6992fc5a
  414f1a:	adc    BYTE PTR [eax+0x20],bl
  414f1d:	sub    edi,ebp
  414f1f:	popa   
  414f20:	and    esp,DWORD PTR [eax-0x2f]
  414f23:	add    eax,0x1696662e
  414f28:	push   0x76311cee
  414f2d:	sbb    DWORD PTR [ebx+0x31],edi
  414f30:	push   es
  414f31:	jo     0x414ebc
  414f33:	ins    DWORD PTR es:[edi],dx
  414f34:	xchg   BYTE PTR [edx+0x63e587c],dl
  414f3a:	pop    esp
  414f3b:	dec    ebp
  414f3c:	fstp   TBYTE PTR [edi]
  414f3e:	pop    esp
  414f3f:	jae    0x414ec1
  414f41:	or     eax,ebx
  414f43:	dec    eax
  414f44:	cmp    eax,0x60ab6dab
  414f49:	fiadd  DWORD PTR [edx+eiz*2+0x34]
  414f4d:	outs   dx,BYTE PTR ds:[esi]
  414f4e:	sbb    esi,DWORD PTR fs:[ebx]
  414f51:	add    al,0x5e
  414f53:	xor    eax,0xf254cb19
  414f58:	mov    dl,0x87
  414f5a:	mov    al,0x88
  414f5c:	dec    esi
  414f5d:	jle    0x414ef9
  414f5f:	cmp    DWORD PTR [esi+0x44f232c0],esp
  414f65:	inc    esp
  414f66:	repnz push 0x9d580971
  414f6c:	pop    esp
  414f6d:	mov    ah,0x66
  414f6f:	mov    WORD PTR [ebp-0x2c],ss
  414f72:	mov    cl,0xc
  414f74:	and    al,0x15
  414f76:	leave  
  414f77:	pushf  
  414f78:	add    edi,edi
  414f7a:	sub    eax,0x410c9e80
  414f7f:	jae    0x414f81
  414f81:	daa    
  414f82:	inc    ebx
  414f83:	and    eax,0x6e6aa7bb
  414f88:	jp     0x414f19
  414f8a:	pop    ebp
  414f8b:	test   BYTE PTR ds:0xa91e33a,dl
  414f91:	mov    esi,0x1f83dae
  414f96:	adc    bh,BYTE PTR [esi-0x8d79168]
  414f9c:	daa    
  414f9d:	sbb    cl,dh
  414f9f:	aas    
  414fa0:	and    cl,BYTE PTR [esi]
  414fa2:	adc    al,0x3a
  414fa4:	mov    bh,0xed
  414fa6:	loop   0x414fad
  414fa8:	sbb    al,0xc7
  414faa:	ins    DWORD PTR es:[edi],dx
  414fab:	rcl    DWORD PTR [eax],1
  414fad:	or     esi,ebp
  414faf:	jnp    0x414fbc
  414fb1:	push   ebx
  414fb2:	(bad)  
  414fb3:	xor    DWORD PTR ds:[ebx],ecx
  414fb6:	push   esp
  414fb7:	sub    BYTE PTR [ebx],dh
  414fb9:	retf   0x6dfc
  414fbc:	adc    BYTE PTR [ebx-0x1c],bh
  414fbf:	and    dl,al
  414fc1:	out    0x34,eax
  414fc3:	inc    ebx
  414fc4:	es xchg ebp,eax
  414fc6:	mov    al,0xc6
  414fc8:	call   0x1ae9e9e
  414fcd:	mov    ch,0x19
  414fcf:	sub    cl,dl
  414fd1:	adc    BYTE PTR [ebx-0x2b6de926],0x2c
  414fd8:	sbb    ah,BYTE PTR [ebp-0x22]
  414fdb:	ins    DWORD PTR es:[edi],dx
  414fdc:	jp     0x414fc0
  414fde:	dec    edi
  414fdf:	pop    edi
  414fe0:	ja     0x415003
  414fe2:	mov    edi,0x26946920
  414fe7:	aad    0xf5
  414fe9:	data16 test dh,dh
  414fec:	sbb    al,0x37
  414fee:	mov    edi,esi
  414ff0:	or     bl,bl
  414ff2:	fisubr DWORD PTR [edx]
  414ff4:	adc    al,bl
  414ff6:	mov    ecx,0x58240e3c
  414ffb:	outs   dx,DWORD PTR ds:[esi]
  414ffc:	retf   0x2cc6
  414fff:	xor    eax,DWORD PTR [ebp+0x1e11f8cb]
  415005:	out    0x1,al
  415007:	aad    0x6c
  415009:	out    dx,al
  41500a:	and    esp,DWORD PTR ds:0x1740b781
  415010:	dec    eax
  415011:	sub    edi,DWORD PTR [edx-0x77]
  415014:	dec    ecx
  415015:	leave  
  415016:	sub    bh,BYTE PTR [ecx-0x56]
  415019:	aaa    
  41501a:	shl    BYTE PTR [ebx-0x7],0x62
  41501e:	mov    ebp,0xb9a9c53e
  415023:	mov    dh,0x14
  415025:	mov    eax,0x60e3b85f
  41502a:	pop    edx
  41502b:	push   0xffffffb4
  41502d:	cwde   
  41502e:	sub    ecx,DWORD PTR [eax+0x63b3cc31]
  415034:	sub    al,0x80
  415036:	or     BYTE PTR [edi],0xf2
  415039:	or     bh,cl
  41503b:	mov    ebx,0x148e3278
  415040:	je     0x41503c
  415042:	pop    ecx
  415043:	cmp    DWORD PTR [ecx-0x33e62e05],edi
  415049:	pusha  
  41504a:	push   esi
  41504b:	push   ds
  41504c:	in     al,0xe
  41504e:	mov    edx,0x1666486b
  415053:	cmp    DWORD PTR [ebx+ecx*4-0x57],edi
  415057:	xor    eax,DWORD PTR [ebx-0x54]
  41505a:	cs inc ebx
  41505c:	aas    
  41505d:	call   0xf7467b9c
  415062:	add    esi,DWORD PTR [esi-0x79c9eb46]
  415068:	sbb    al,0x74
  41506a:	pop    ebx
  41506b:	inc    ecx
  41506c:	cmp    ebp,DWORD PTR [eax]
  41506e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41506f:	sub    eax,0x1df93a24
  415074:	loope  0x4150b6
  415076:	pop    ds
  415077:	jp     0x415001
  415079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41507a:	jmp    0xf2c27e53
  41507f:	das    
  415080:	jle    0x415049
  415082:	push   ss
  415083:	cmp    eax,0x20889fe2
  415088:	loopne 0x415019
  41508a:	cmp    edx,DWORD PTR [edi+ecx*4]
  41508d:	mov    edi,0xaa39b760
  415092:	mov    eax,ds:0x7344b5ab
  415097:	std    
  415098:	loope  0x415104
  41509a:	add    al,0x21
  41509c:	cwde   
  41509d:	sub    eax,0x1cfc352b
  4150a2:	mov    DWORD PTR [edx-0x2265fc06],eax
  4150a8:	jb     0x4150c1
  4150aa:	mov    DWORD PTR [edx+0x61a21378],0x234a88a4
  4150b4:	xor    BYTE PTR cs:0xbe6e428d,bl
  4150bb:	cmp    DWORD PTR [edi+0x46bd38a1],edx
  4150c1:	jb     0x4150ba
  4150c3:	jb     0x415058
  4150c5:	bound  ebx,QWORD PTR [edi+0x4db6b454]
  4150cb:	and    DWORD PTR [esi-0x40],edi
  4150ce:	pop    ebx
  4150cf:	mov    esi,0x30228e1d
  4150d4:	dec    ebx
  4150d5:	dec    edi
  4150d6:	xchg   DWORD PTR [edx],ebx
  4150d8:	repnz sub al,0x7
  4150db:	and    ah,BYTE PTR [edx]
  4150dd:	enter  0x271d,0x30
  4150e1:	mov    DWORD PTR [eax],ecx
  4150e3:	lock gs out dx,al
  4150e6:	inc    ecx
  4150e7:	jne    0x4150cf
  4150e9:	xchg   BYTE PTR [ebx+0x7],al
  4150ec:	push   edi
  4150ed:	add    BYTE PTR [esi],0xc6
  4150f0:	arpl   WORD PTR [eax-0x7ad8ca25],bp
  4150f6:	add    al,0xb0
  4150f8:	rcr    DWORD PTR gs:[esi+ebx*1],1
  4150fc:	inc    eax
  4150fd:	sahf   
  4150fe:	mov    WORD PTR ds:0x2e0787f8,ds
  415104:	sub    cl,dl
  415106:	push   0x178d3520
  41510b:	push   esi
  41510c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41510d:	mov    ah,0x29
  41510f:	adc    dh,BYTE PTR [ebx]
  415111:	lods   eax,DWORD PTR ds:[esi]
  415112:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415113:	mov    al,ds:0x13364915
  415118:	imul   ecx,esp,0x89b2981a
  41511e:	(bad)  
  41511f:	sti    
  415120:	in     eax,dx
  415121:	mov    dl,bh
  415123:	mov    esi,0x2d2cd723
  415128:	ret    
  415129:	sbb    esp,DWORD PTR [ecx]
  41512b:	ja     0x41515a
  41512d:	lods   al,BYTE PTR ds:[esi]
  41512e:	mov    cl,0xca
  415130:	pop    esi
  415131:	jmp    0x288251f4
  415136:	mov    esp,DWORD PTR [ebp+0x3e4551cb]
  41513c:	dec    ebx
  41513d:	cld    
  41513e:	sub    DWORD PTR [edi-0x49],ecx
  415141:	inc    edi
  415142:	jbe    0x41514a
  415144:	inc    eax
  415145:	cmp    al,0x23
  415147:	mov    ah,BYTE PTR ds:0x71ce3c71
  41514d:	push   ebp
  41514e:	inc    ecx
  41514f:	xor    DWORD PTR [eax-0x75bfecc4],0xffffff8f
  415156:	jno    0x4151a7
  415158:	js     0x41518f
  41515a:	mov    esi,0x32064a50
  41515f:	lock shl BYTE PTR [ebp+0x39f5102d],1
  415166:	mov    dh,0x6e
  415168:	mov    al,ds:0x7d374944
  41516d:	sbb    al,0x7b
  41516f:	lahf   
  415170:	and    al,0x69
  415172:	in     eax,0x1a
  415174:	inc    edi
  415175:	mov    esp,0x8117f25f
  41517a:	xchg   esp,eax
  41517b:	icebp  
  41517c:	rcr    DWORD PTR [ebx-0x16],cl
  41517f:	sbb    DWORD PTR [edi-0x45f2f6f0],ebp
  415185:	call   0x8aa0:0x521d42b4
  41518c:	test   al,0xea
  41518e:	mov    DWORD PTR [esi+0x2a24b2a2],edi
  415194:	(bad)  
  415195:	dec    ebx
  415196:	push   ecx
  415197:	shl    BYTE PTR [ebp-0x417be1b8],1
  41519d:	jo     0x41520e
  41519f:	adc    esp,DWORD PTR [esi]
  4151a1:	lods   eax,DWORD PTR ds:[esi]
  4151a2:	mov    ebp,0x1f9215b4
  4151a7:	mov    eax,ds:0xdda38ab8
  4151ac:	lds    esp,FWORD PTR [eax+0x2a00564c]
  4151b2:	sub    BYTE PTR [edx+edx*1-0x68],dh
  4151b6:	aad    0xed
  4151b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151b9:	sbb    eax,0x41cdb880
  4151be:	ins    BYTE PTR es:[edi],dx
  4151bf:	inc    ebp
  4151c0:	sbb    al,0x22
  4151c2:	pop    ds
  4151c3:	and    BYTE PTR [edi],ch
  4151c5:	arpl   WORD PTR [ecx+esi*1+0x5ceffc0f],si
  4151cc:	and    ebx,DWORD PTR [esp+ebx*8]
  4151cf:	dec    edx
  4151d0:	adc    eax,0xdc9e217d
  4151d5:	jnp    0x415233
  4151d7:	inc    eax
  4151d8:	shl    ebp,0x9e
  4151db:	and    ecx,DWORD PTR [eax]
  4151dd:	jg     0x415212
  4151df:	das    
  4151e0:	out    0x1d,al
  4151e2:	out    0x63,eax
  4151e4:	adc    eax,0x220af39b
  4151e9:	add    ah,BYTE PTR [ebx+eax*2]
  4151ec:	add    ebx,DWORD PTR [edi]
  4151ee:	sbb    BYTE PTR [ecx],0x10
  4151f1:	mov    al,0xb1
  4151f3:	and    bh,cl
  4151f5:	jbe    0x4151e5
  4151f7:	pop    eax
  4151f8:	iret   
  4151f9:	pop    es
  4151fa:	and    DWORD PTR ds:0x8d1cf810,ecx
  415200:	jl     0x415203
  415202:	das    
  415203:	repz and al,0x7b
  415206:	or     eax,0xe72ce322
  41520b:	sti    
  41520c:	push   esp
  41520d:	xor    DWORD PTR gs:[edi+0x2c927d52],0xffffffc6
  415215:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  415217:	mov    edx,ebx
  415219:	pop    eax
  41521a:	add    BYTE PTR [eax-0x5476f32a],cl
  415220:	into   
  415221:	sahf   
  415222:	daa    
  415223:	inc    esi
  415224:	jecxz  0x4151a7
  415226:	mov    bh,0x8b
  415228:	push   ecx
  415229:	ins    BYTE PTR es:[edi],dx
  41522a:	rol    DWORD PTR [edx+eiz*4+0x1f329ccf],cl
  415231:	(bad)  
  415233:	pop    esp
  415234:	test   DWORD PTR [ecx],ecx
  415236:	cmp    dh,BYTE PTR [ebx+0x762d7032]
  41523c:	not    BYTE PTR [ecx]
  41523e:	dec    esp
  41523f:	push   ebp
  415240:	adc    eax,0x893d4f4
  415245:	adc    dh,BYTE PTR [esi+ebx*1+0x44]
  415249:	in     al,0xf3
  41524b:	xchg   ecx,eax
  41524c:	aaa    
  41524d:	push   edi
  41524e:	mov    eax,ebp
  415250:	imul   esi,DWORD PTR [eax+0x33],0xffffff80
  415254:	cmp    DWORD PTR [esi+0x249e394b],ebx
  41525a:	int3   
  41525b:	adc    BYTE PTR [eax],cl
  41525d:	add    dl,BYTE PTR [edx+0x58]
  415260:	out    dx,al
  415261:	dec    BYTE PTR [edx-0x3b]
  415264:	push   ecx
  415265:	xor    BYTE PTR [edx-0x4c],0x25
  415269:	jl     0x415290
  41526b:	test   BYTE PTR [edi+0x5a],al
  41526e:	xchg   edx,eax
  41526f:	jge    0x415291
  415271:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415272:	adc    DWORD PTR [ebp+ebp*1-0x31],eax
  415276:	adc    DWORD PTR [ebx+0x6741cc27],ebp
  41527c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41527d:	inc    esp
  41527e:	adc    al,0x7f
  415280:	fcomp  DWORD PTR [eax+ecx*2-0x379c7d14]
  415287:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415289:	push   ds
  41528a:	inc    ebx
  41528b:	add    DWORD PTR [eax-0x7f],ebx
  41528e:	mov    WORD PTR [ecx],es
  415290:	fcom   DWORD PTR [edi]
  415292:	lods   al,BYTE PTR ds:[esi]
  415293:	test   al,0x19
  415295:	dec    esp
  415296:	mov    BYTE PTR [esi],dh
  415298:	popa   
  415299:	jne    0x415248
  41529b:	fwait
  41529c:	stc    
  41529d:	sbb    esi,DWORD PTR [ecx]
  41529f:	or     BYTE PTR [edx+0x25],0x7a
  4152a3:	mov    WORD PTR [ecx+0x53],es
  4152a6:	and    al,BYTE PTR [eax+0xb]
  4152a9:	test   eax,0x5cbe532b
  4152ae:	mov    edx,0x228ddba7
  4152b3:	cs cmp eax,0x5311d7a0
  4152b9:	adc    al,0x1d
  4152bb:	xchg   ecx,eax
  4152bc:	lock dec ebx
  4152be:	add    bl,BYTE PTR [ebx]
  4152c0:	push   ss
  4152c1:	cs cs loop 0x4152aa
  4152c5:	sbb    dl,BYTE PTR [edi-0x389eb229]
  4152cb:	sbb    cl,ch
  4152cd:	retf   
  4152ce:	adc    eax,eax
  4152d0:	pop    ds
  4152d1:	das    
  4152d2:	and    eax,0xb2195b6a
  4152d7:	and    BYTE PTR [edi-0x49],ch
  4152da:	sbb    ecx,ecx
  4152dc:	mov    WORD PTR [edx],?
  4152de:	xchg   esi,eax
  4152df:	cdq    
  4152e0:	adc    ebp,DWORD PTR [edi+0x7c]
  4152e3:	test   eax,0xd9a61e88
  4152e8:	mov    BYTE PTR [edi+0x17],dl
  4152eb:	add    eax,0xae1398c7
  4152f0:	jg     0x41531d
  4152f2:	adc    bh,BYTE PTR [eax-0x64]
  4152f5:	inc    esi
  4152f6:	xchg   BYTE PTR [edi],bh
  4152f8:	pushf  
  4152f9:	daa    
  4152fa:	ins    DWORD PTR es:[edi],dx
  4152fb:	xchg   ecx,eax
  4152fc:	pushf  
  4152fd:	sbb    al,0xa5
  4152ff:	adc    dh,BYTE PTR [ecx]
  415301:	xchg   ecx,eax
  415302:	sub    edx,DWORD PTR [ecx-0x65]
  415305:	test   al,0x15
  415307:	popa   
  415308:	int    0xa7
  41530a:	push   es
  41530b:	dec    edi
  41530c:	data16 mov ds:0xad3e538a,al
  415312:	iret   
  415313:	cmp    DWORD PTR [esi],ebx
  415315:	mov    ecx,0xb50847e0
  41531a:	std    
  41531b:	and    al,BYTE PTR [ebp+0x4e8cb055]
  415321:	adc    al,0xbd
  415323:	call   DWORD PTR [esi]
  415325:	mov    bh,BYTE PTR [edx-0x3e]
  415328:	inc    ebp
  415329:	sub    esi,DWORD PTR [ebx+eax*8]
  41532c:	and    cl,BYTE PTR [eax]
  41532e:	xchg   edx,eax
  41532f:	sar    DWORD PTR [ebx+ecx*8],0x35
  415333:	ret    0x467c
  415336:	sbb    eax,0x626df33
  41533b:	cdq    
  41533c:	ficomp WORD PTR [esi]
  41533e:	loop   0x41530a
  415340:	xlat   BYTE PTR ds:[ebx]
  415341:	or     ecx,esi
  415343:	sbb    esp,DWORD PTR [ecx]
  415345:	aam    0xc0
  415347:	rcr    DWORD PTR [eax+ebp*8],1
  41534a:	loopne 0x41532d
  41534c:	pmulhw mm3,QWORD PTR [ecx-0x8e9715c]
  415353:	adc    esi,0x39
  415356:	in     al,dx
  415357:	sar    BYTE PTR [edx+0x20],0x1a
  41535b:	leave  
  41535c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41535d:	das    
  41535e:	adc    eax,esi
  415360:	and    BYTE PTR [ecx-0x4e3206cc],0x14
  415367:	ins    DWORD PTR es:[edi],dx
  415368:	sub    edx,DWORD PTR [edx+0x6f722ab]
  41536e:	sbb    al,0x4
  415370:	jo     0x415322
  415372:	js     0x415321
  415374:	mov    ebx,0x59cfe4ff
  415379:	dec    esp
  41537a:	cmc    
  41537b:	inc    edi
  41537c:	lods   al,BYTE PTR fs:[esi]
  41537e:	and    BYTE PTR [edi+0xc],ah
  415381:	xchg   esp,eax
  415382:	jbe    0x415393
  415384:	pusha  
  415385:	icebp  
  415386:	push   eax
  415387:	cs jae 0x415403
  41538a:	mov    edi,0x7a5ff981
  41538f:	and    al,0xe
  415391:	adc    al,0x4a
  415393:	cs jns 0x41532f
  415396:	mov    ebp,0x93a03e5c
  41539b:	mov    ebx,0x31f77a70
  4153a0:	lahf   
  4153a1:	inc    ebp
  4153a2:	adc    esi,esp
  4153a4:	std    
  4153a5:	push   0x5cfa4d6d
  4153aa:	pushf  
  4153ab:	ror    DWORD PTR [ecx+0x10],cl
  4153ae:	jo     0x415415
  4153b0:	mov    ch,0xce
  4153b2:	add    DWORD PTR [edx+ebx*4+0x51],0x459f6947
  4153ba:	pop    edx
  4153bb:	das    
  4153bc:	inc    DWORD PTR [edx]
  4153be:	pop    edx
  4153bf:	ss retf 
  4153c1:	sub    eax,DWORD PTR [esi]
  4153c3:	ja     0x4153f7
  4153c5:	push   ebp
  4153c6:	xor    ah,BYTE PTR [esi]
  4153c8:	(bad)  [ecx+ebx*1+0x34]
  4153cc:	adc    BYTE PTR [ebp+0x2d34f43b],0x3c
  4153d3:	xor    bh,al
  4153d5:	sub    eax,0x543dbbd1
  4153da:	aas    
  4153db:	pop    eax
  4153dc:	(bad)  
  4153dd:	cmp    BYTE PTR [edx-0x35a8cac7],bl
  4153e3:	dec    DWORD PTR [eax+0x72]
  4153e6:	ins    BYTE PTR es:[edi],dx
  4153e7:	ret    
  4153e8:	xchg   edx,eax
  4153e9:	jmp    0x29ffa8db
  4153ee:	mov    edi,gs
  4153f0:	out    0xe0,eax
  4153f2:	xchg   BYTE PTR [ecx-0x79aa4a4a],ch
  4153f8:	mov    WORD PTR [eax+0x2f],ds
  4153fb:	scas   eax,DWORD PTR es:[edi]
  4153fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153fd:	sbb    eax,0xf8a38131
  415402:	aas    
  415403:	pop    ecx
  415404:	mov    eax,0xdabd7bc1
  415409:	es dec eax
  41540b:	jne    0x41542d
  41540d:	mov    BYTE PTR [edi+0x729158b7],dl
  415413:	mov    ds:0x7c418054,al
  415418:	jno    0x41547b
  41541a:	(bad)  
  41541b:	call   0x6b756489
  415420:	and    DWORD PTR [ebp-0x4],0xcb462edd
  415427:	xchg   BYTE PTR [eax+0x59],bh
  41542a:	xlat   BYTE PTR ds:[ebx]
  41542b:	xor    DWORD PTR [edi-0x12706dd4],ebx
  415431:	inc    ebx
  415432:	jp     0x41549b
  415434:	or     dl,BYTE PTR [esi+0x49603e62]
  41543a:	arpl   WORD PTR [esi],sp
  41543c:	ret    0x4004
  41543f:	cmp    ch,BYTE PTR [edi+edx*4-0x6f]
  415443:	add    cl,BYTE PTR ds:0xdc574f22
  415449:	call   DWORD PTR [edx]
  41544b:	in     eax,dx
  41544c:	sub    DWORD PTR [ebx-0x77d556aa],edi
  415452:	jge    0x4153e4
  415454:	shl    al,1
  415456:	adc    ebx,DWORD PTR [eax]
  415458:	and    BYTE PTR [edx+0x55],bl
  41545b:	xchg   ebp,eax
  41545c:	push   edi
  41545d:	adc    BYTE PTR [ebp+0x4c],al
  415460:	mov    al,BYTE PTR [ebx-0x64]
  415463:	std    
  415464:	push   ss
  415465:	rol    BYTE PTR [ebp+0x54],0x1f
  415469:	jge    0x415442
  41546b:	inc    ebp
  41546c:	push   edx
  41546d:	jecxz  0x415419
  41546f:	aad    0xd4
  415471:	add    BYTE PTR [esi+0x64],dl
  415474:	lea    esp,[edx-0x50a21ec2]
  41547a:	inc    ebx
  41547b:	xor    al,0x65
  41547d:	stos   DWORD PTR es:[edi],eax
  41547e:	fldl2e 
  415480:	cmp    eax,0x19a1b6ee
  415485:	ins    BYTE PTR es:[edi],dx
  415486:	inc    ebx
  415487:	(bad)  
  415488:	jge    0x41543f
  41548a:	popf   
  41548b:	hlt    
  41548c:	dec    eax
  41548d:	ret    0xad4a
  415490:	stos   DWORD PTR es:[edi],eax
  415491:	clc    
  415492:	fstp   DWORD PTR [eax]
  415494:	xchg   BYTE PTR [edi],ch
  415496:	imul   esp,DWORD PTR [ecx],0x69
  415499:	je     0x4154f6
  41549b:	pop    ds
  41549c:	stos   DWORD PTR es:[edi],eax
  41549d:	cmp    dl,al
  41549f:	push   es
  4154a0:	daa    
  4154a1:	and    ebx,DWORD PTR [edx]
  4154a3:	stos   BYTE PTR es:[edi],al
  4154a4:	xchg   edi,eax
  4154a5:	push   cs
  4154a6:	jge    0x415519
  4154a8:	mov    ecx,0x433617d3
  4154ad:	loope  0x4154a7
  4154af:	pop    ebx
  4154b0:	push   esp
  4154b1:	jo     0x415506
  4154b3:	in     eax,0x4a
  4154b5:	rcr    DWORD PTR [edi],1
  4154b7:	mov    fs,WORD PTR [edx]
  4154b9:	push   edi
  4154ba:	out    dx,eax
  4154bb:	xlat   BYTE PTR ds:[ebx]
  4154bc:	inc    ebp
  4154bd:	push   edi
  4154be:	mov    WORD PTR [ebx],ss
  4154c0:	pushf  
  4154c1:	ss dec ebx
  4154c3:	daa    
  4154c4:	cmp    al,0x4f
  4154c6:	aaa    
  4154c7:	dec    ebx
  4154c8:	test   al,0x89
  4154ca:	mov    ds:0x8e1cd83,al
  4154cf:	lods   al,BYTE PTR ds:[esi]
  4154d0:	loopne 0x41546a
  4154d2:	or     eax,0xbf316988
  4154d7:	dec    ebp
  4154d8:	cs inc eax
  4154da:	inc    ebx
  4154db:	ret    
  4154dc:	sbb    DWORD PTR [edi-0x17],ecx
  4154df:	pop    ebp
  4154e0:	enter  0x553f,0x14
  4154e4:	loope  0x415481
  4154e6:	cdq    
  4154e7:	dec    ecx
  4154e8:	mov    eax,0x91a9591e
  4154ed:	add    ah,BYTE PTR [ebx+0x7fd3623]
  4154f3:	stos   DWORD PTR es:[edi],eax
  4154f4:	loope  0x4154f2
  4154f6:	xlat   BYTE PTR ds:[ebx]
  4154f7:	xor    bl,BYTE PTR [ecx-0x65]
  4154fa:	xor    cl,BYTE PTR gs:[edi+0x17]
  4154fe:	push   ds
  4154ff:	bound  esp,QWORD PTR [ecx]
  415501:	out    0xbd,al
  415503:	jmp    0x41555a
  415505:	stc    
  415506:	mov    bh,dh
  415508:	mov    ds:0xea96b29c,al
  41550d:	cmp    al,0x1a
  41550f:	inc    ebx
  415510:	add    eax,edx
  415512:	push   edi
  415513:	sbb    esi,DWORD PTR ds:0xc1a612fe
  415519:	add    BYTE PTR [ebx+0x70815c48],bl
  41551f:	mov    esi,0x67fc6ea5
  415524:	ds ds add al,0x7
  415528:	pushf  
  415529:	les    eax,FWORD PTR [edi+0x70c979dc]
  41552f:	dec    ebp
  415530:	in     eax,0xab
  415532:	push   ebx
  415533:	shr    bl,0x6e
  415536:	leave  
  415537:	or     ch,BYTE PTR [edx]
  415539:	cs test bl,ch
  41553c:	sbb    al,0x8
  41553e:	test   al,0xae
  415540:	fwait
  415541:	jg     0x415588
  415543:	pop    edx
  415544:	push   ebx
  415545:	loop   0x41557b
  415547:	adc    cl,BYTE PTR [edx]
  415549:	and    eax,0x4f6da315
  41554e:	loop   0x4154d9
  415550:	adc    al,0x11
  415552:	cmc    
  415553:	cmc    
  415554:	add    ecx,ecx
  415556:	xor    eax,0x703b747c
  41555b:	jle    0x4155b4
  41555d:	pop    ebx
  41555e:	inc    eax
  41555f:	jne    0x4155bc
  415561:	lahf   
  415562:	mov    BYTE PTR [eax+0x46],ah
  415565:	push   es
  415566:	push   ss
  415567:	fisttp DWORD PTR [ebx]
  415569:	pop    si
  41556b:	dec    ecx
  41556c:	sbb    eax,edi
  41556e:	int    0x3e
  415570:	imul   ebx,edx,0xffffffeb
  415573:	iret   
  415574:	inc    ebp
  415575:	cs add dh,cl
  415578:	in     al,dx
  415579:	and    ecx,DWORD PTR [eax]
  41557b:	jae    0x41551c
  41557d:	push   0x76
  41557f:	jg     0x415578
  415581:	loope  0x4155da
  415583:	psubw  mm4,QWORD PTR [eax]
  415586:	push   ds
  415587:	push   eax
  415588:	pop    ebp
  415589:	push   ds
  41558a:	in     al,dx
  41558b:	pop    ss
  41558c:	mov    ?,WORD PTR [esi+0x20]
  41558f:	and    cl,ah
  415591:	cdq    
  415592:	mov    eax,ds:0x99e50c17
  415597:	jne    0x4155b6
  415599:	movq   QWORD PTR [ebp+0x96a6e9b],mm7
  4155a0:	ror    BYTE PTR [esi],0x5f
  4155a3:	cli    
  4155a4:	sbb    al,0x85
  4155a6:	test   al,0x55
  4155a8:	mov    eax,DWORD PTR [ecx+edx*2]
  4155ab:	and    eax,0x19e35944
  4155b0:	xchg   BYTE PTR [edx-0x48f4e768],cl
  4155b6:	adc    al,0x81
  4155b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155b9:	inc    ebp
  4155ba:	mov    al,bl
  4155bc:	pop    eax
  4155bd:	jl     0x4155d3
  4155bf:	int3   
  4155c0:	mov    esp,DWORD PTR [edi]
  4155c2:	ss out 0x32,al
  4155c5:	or     edx,DWORD PTR [esi+0x23e010b]
  4155cb:	push   0x8
  4155cd:	and    cl,BYTE PTR [edi]
  4155cf:	repnz xor ch,BYTE PTR [ecx+esi*1+0x41]
  4155d4:	push   cs
  4155d5:	sbb    al,0x10
  4155d7:	add    DWORD PTR [eax],ebp
  4155d9:	fild   DWORD PTR [ebx]
  4155db:	call   0x11d9a8ca
  4155e0:	inc    ecx
  4155e1:	push   ebp
  4155e2:	pop    ebp
  4155e3:	enter  0xb8d1,0x8c
  4155e7:	out    0x1d,al
  4155e9:	into   
  4155ea:	cs cs adc al,0xb6
  4155ee:	or     esi,eax
  4155f0:	les    eax,FWORD PTR [edx]
  4155f2:	jo     0x415612
  4155f4:	imul   esi,ebp,0x55
  4155f7:	stos   DWORD PTR es:[edi],eax
  4155f8:	push   DWORD PTR [ebx-0x53bd1de]
  4155fe:	xchg   edx,eax
  4155ff:	retf   0x861e
  415602:	je     0x415627
  415604:	pop    eax
  415605:	cld    
  415606:	cmc    
  415607:	sbb    al,0x13
  415609:	in     eax,dx
  41560a:	in     al,dx
  41560b:	push   ecx
  41560c:	mov    ds:0x17b2c528,al
  415611:	pop    es
  415612:	loop   0x415619
  415614:	inc    edi
  415615:	dec    esp
  415616:	je     0x415677
  415618:	rol    edi,cl
  41561a:	leave  
  41561b:	and    al,0x21
  41561d:	sub    al,0x32
  41561f:	imul   esi,DWORD PTR [ebx-0x68],0x46809ab
  415626:	pop    esi
  415627:	pop    edi
  415628:	push   ebp
  415629:	(bad)  
  41562a:	pop    esi
  41562b:	adc    BYTE PTR [edx-0x2d],al
  41562e:	int    0xcb
  415630:	push   eax
  415631:	push   cs
  415632:	xor    eax,0x26705296
  415637:	and    al,BYTE PTR [esi]
  415639:	adc    bl,BYTE PTR [edi+eax*1+0x1dc2d73b]
  415640:	push   eax
  415641:	mov    esp,0x51840d60
  415646:	cmp    dl,al
  415648:	add    cl,0xd1
  41564b:	xchg   ecx,eax
  41564c:	out    dx,al
  41564d:	wbinvd 
  41564f:	adc    al,0x95
  415651:	lds    ecx,FWORD PTR [edi+0x3275d0a5]
  415657:	dec    esp
  415658:	inc    esp
  415659:	and    ch,dh
  41565b:	jne    0x4155f2
  41565d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41565e:	rcl    BYTE PTR [edi+0xff48b06],cl
  415664:	sub    DWORD PTR [edx+0x76515389],esp
  41566a:	mov    ebp,0xe5206cc2
  41566f:	xrelease xchg DWORD PTR [ecx+0x17ea1584],ebx
  415676:	sar    ch,cl
  415678:	jle    0x4156d5
  41567a:	inc    BYTE PTR [edi-0x79f220f0]
  415680:	pop    ss
  415681:	and    ecx,DWORD PTR [ecx-0xc16d899]
  415687:	sbb    ah,bh
  415689:	inc    esp
  41568a:	or     al,0xa5
  41568c:	jae    0x4156bd
  41568e:	into   
  41568f:	out    dx,eax
  415690:	xchg   esi,eax
  415691:	inc    ebx
  415692:	mov    ebx,0x81c020e6
  415697:	test   BYTE PTR [eax+eax*2],dl
  41569a:	pop    es
  41569b:	ins    BYTE PTR es:[edi],dx
  41569c:	sbb    ebx,DWORD PTR [ebx-0x59e4f460]
  4156a2:	test   BYTE PTR [ecx+edx*4-0x33],bl
  4156a6:	cmp    al,0xff
  4156a8:	add    al,0xc2
  4156aa:	or     DWORD PTR [eax-0x6b1fa427],eax
  4156b0:	or     eax,0xa9b33e8
  4156b5:	ror    edi,1
  4156b7:	jbe    0x4156a4
  4156b9:	jl     0x41566a
  4156bb:	sub    al,0x56
  4156bd:	fisubr DWORD PTR [edi]
  4156bf:	dec    esp
  4156c0:	and    dh,bl
  4156c2:	jno    0x4156e6
  4156c4:	shl    BYTE PTR [ebx-0x122ef060],0x5a
  4156cb:	mov    WORD PTR [eax+eiz*1-0x39dfc973],fs
  4156d2:	dec    ebx
  4156d3:	cmp    edi,ecx
  4156d5:	push   cs
  4156d6:	push   esp
  4156d7:	in     al,0xd7
  4156d9:	jb     0x415666
  4156db:	mov    DWORD PTR [edi-0x3f],esi
  4156de:	pop    ecx
  4156df:	pop    eax
  4156e0:	jnp    0x41575c
  4156e2:	sbb    DWORD PTR [edx+0x3b],ebp
  4156e5:	xor    DWORD PTR [edx-0x23],edi
  4156e8:	jle    0x41574a
  4156ea:	sar    DWORD PTR [ebx],1
  4156ec:	repz pop ebp
  4156ee:	sub    bl,BYTE PTR [ecx-0x35]
  4156f1:	sahf   
  4156f2:	mov    bl,0x81
  4156f4:	test   eax,0xbdf524a2
  4156f9:	mov    al,ds:0x7df7b59
  4156fe:	(bad)  
  4156ff:	loop   0x415698
  415701:	mov    ch,0x90
  415703:	push   0xa02d2914
  415708:	add    al,0x25
  41570a:	adc    DWORD PTR [ebp+0x4ec5171d],0x7d
  415711:	inc    ecx
  415712:	push   ecx
  415713:	cs mov eax,0x185a76ca
  415719:	sbb    dh,BYTE PTR [eax+0xeed9544]
  41571f:	add    esi,DWORD PTR [edi+0x1f05be57]
  415725:	adc    eax,DWORD PTR [ecx]
  415727:	cmp    bl,cl
  415729:	cdq    
  41572a:	push   ds
  41572b:	push   ebx
  41572c:	xchg   edx,eax
  41572d:	adc    DWORD PTR [ecx-0x7a8fc1b6],esp
  415733:	or     eax,DWORD PTR [esi+0x34b15569]
  415739:	inc    cx
  41573b:	lods   al,BYTE PTR ds:[esi]
  41573c:	(bad)  
  41573d:	sub    DWORD PTR ds:0x8af16317,ebp
  415743:	or     BYTE PTR [ecx+0x37],bh
  415746:	retf   
  415747:	or     BYTE PTR [ebx],0xa9
  41574a:	cmp    ch,BYTE PTR [esi+0x7d]
  41574d:	pop    ss
  41574e:	mov    WORD PTR [ebx],ds
  415750:	ja     0x41577b
  415752:	pop    edx
  415753:	fbstp  TBYTE PTR [ecx+0x5d4316d1]
  415759:	dec    ebx
  41575a:	push   ecx
  41575b:	sub    esi,DWORD PTR [edi]
  41575d:	and    BYTE PTR [eax+0x4b458009],dl
  415763:	mov    al,0x34
  415765:	inc    edi
  415766:	mov    edi,0xc9ff9793
  41576b:	cmp    edi,DWORD PTR [edi]
  41576d:	sbb    al,0x56
  41576f:	dec    ebx
  415770:	mov    al,ds:0x8c310ba9
  415775:	sub    eax,0x4bb0a525
  41577a:	shl    DWORD PTR [ebx+0x19e8c0f],0x3e
  415781:	or     edx,eax
  415783:	adc    al,0xd1
  415785:	or     edx,ecx
  415787:	mov    DWORD PTR [ebp-0x28],eax
  41578a:	adc    ebx,DWORD PTR [ebp-0x20]
  41578d:	psubsb mm1,QWORD PTR [ecx]
  415790:	in     al,dx
  415791:	mov    edi,edx
  415793:	xchg   ecx,eax
  415794:	jl     0x415735
  415796:	arpl   dx,si
  415798:	or     bh,BYTE PTR [edi+esi*8]
  41579b:	jmp    0x4157d2
  41579d:	ds (bad) 
  41579f:	gs in  eax,dx
  4157a1:	mov    edx,eax
  4157a3:	push   es
  4157a4:	mov    edi,0x460afd69
  4157a9:	pop    esi
  4157aa:	aaa    
  4157ab:	sbb    esp,edi
  4157ad:	add    al,0xd
  4157af:	in     eax,0x11
  4157b1:	mov    WORD PTR [ecx],ss
  4157b3:	push   es
  4157b4:	test   al,0xa3
  4157b6:	xchg   ebx,eax
  4157b7:	mov    eax,0xa2150011
  4157bc:	adc    eax,DWORD PTR [ebx]
  4157be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157bf:	mov    edi,DWORD PTR [esi+0x5c41c90d]
  4157c5:	(bad)  
  4157c6:	call   FWORD PTR [edi]
  4157c8:	lahf   
  4157c9:	jmp    0x7541c1f7
  4157ce:	inc    ecx
  4157cf:	and    esp,edx
  4157d1:	jecxz  0x4157b8
  4157d3:	inc    ebp
  4157d4:	je     0x5e620a44
  4157da:	das    
  4157db:	add    edx,ecx
  4157dd:	dec    ecx
  4157de:	add    ebp,0xa
  4157e1:	pop    eax
  4157e2:	repnz xchg ebx,eax
  4157e4:	fsubr  QWORD PTR ds:0xd364bac7
  4157ea:	mov    eax,ds:0x5940cfdc
  4157ef:	dec    esi
  4157f0:	mov    eax,ds:0x9e3f9c52
  4157f5:	xchg   ebx,eax
  4157f6:	xlat   BYTE PTR ds:[ebx]
  4157f7:	int3   
  4157f8:	test   BYTE PTR [esi-0x2e],ah
  4157fb:	lods   al,BYTE PTR ds:[esi]
  4157fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157fd:	int3   
  4157fe:	and    al,0xa3
  415800:	scas   al,BYTE PTR es:[edi]
  415801:	shr    DWORD PTR [ebx+ecx*1-0x26],0xaf
  415806:	cmp    dl,al
  415808:	ins    DWORD PTR es:[edi],dx
  415809:	lock add al,0x55
  41580c:	in     al,dx
  41580d:	pop    edi
  41580e:	(bad)
  415812:	mov    bl,bl
  415814:	shl    ecx,1
  415816:	pushf  
  415817:	mov    bl,0xcf
  415819:	fdiv   st,st(7)
  41581b:	sub    BYTE PTR [esi+ecx*1-0xcf8d4e3],bh
  415822:	or     ah,BYTE PTR [edx-0x48]
  415825:	sub    DWORD PTR [eax+edi*1+0x120b1f45],esp
  41582c:	cmp    DWORD PTR [ebx-0x40c8f53d],esi
  415832:	sbb    DWORD PTR [ecx+0x3c],edi
  415835:	lods   al,BYTE PTR ds:[esi]
  415836:	out    dx,al
  415837:	mov    cs,WORD PTR [edx+0x1dbfdaba]
  41583d:	pop    esi
  41583e:	xor    BYTE PTR [edx-0x2f],cl
  415841:	mov    BYTE PTR [edx-0x3281c8d4],ch
  415847:	push   ds
  415848:	push   esi
  415849:	test   BYTE PTR [ecx+ebx*2],ch
  41584c:	imul   esp,ecx,0x8404879f
  415852:	sbb    BYTE PTR [esi+ebp*4+0xeb69808],0x7e
  41585a:	xor    eax,0x2b47741a
  41585f:	gs sub eax,0x377c5966
  415865:	sub    al,0xaf
  415867:	jmp    0x9a745d8c
  41586c:	push   0x37c74c53
  415871:	mov    ds:0x5a28bb5c,al
  415876:	mov    ds:0xfaed811c,al
  41587b:	popa   
  41587c:	loopne 0x4158f4
  41587e:	add    ah,ah
  415880:	or     bh,BYTE PTR [ebx]
  415882:	adc    al,0x16
  415884:	out    0xf4,eax
  415886:	mov    eax,0xb03ae12
  41588b:	push   0x99430451
  415890:	and    ebp,DWORD PTR [edi]
  415892:	fidiv  WORD PTR [eax+eiz*1]
  415895:	ins    DWORD PTR es:[edi],dx
  415896:	xor    ebp,DWORD PTR [ebp-0x40]
  415899:	out    0x93,al
  41589b:	xor    al,0x5f
  41589d:	rcl    edi,cl
  41589f:	jecxz  0x4158e3
  4158a1:	pop    eax
  4158a2:	mov    ch,0x37
  4158a4:	mov    cl,0xd3
  4158a6:	cmp    dl,BYTE PTR [ebx+0x305a932]
  4158ac:	(bad)  
  4158ad:	mov    eax,ds:0x2d41ec01
  4158b2:	sbb    esi,DWORD PTR [esi+0xfa010cb]
  4158b8:	mov    al,BYTE PTR [eax-0x2cf124f2]
  4158be:	loopne 0x41584a
  4158c0:	cmp    BYTE PTR [esi+edx*1],0x10
  4158c4:	jl     0x4158bd
  4158c6:	or     edi,0xffffffbd
  4158c9:	or     ebx,DWORD PTR [esi]
  4158cb:	xor    ecx,DWORD PTR [bx-0x26e1]
  4158d0:	dec    DWORD PTR [esi-0x53dcf9b1]
  4158d6:	sbb    BYTE PTR [edx+edi*1],0x7f
  4158da:	pushf  
  4158db:	iret   
  4158dc:	xchg   ecx,eax
  4158dd:	mov    fs,WORD PTR ds:0x5705a765
  4158e3:	push   es
  4158e4:	cmp    eax,0xcf704489
  4158e9:	lahf   
  4158ea:	dec    di
  4158ec:	(bad)  
  4158ed:	push   esi
  4158ee:	cld    
  4158ef:	clc    
  4158f0:	sub    al,0xb
  4158f2:	adc    dl,BYTE PTR [edx]
  4158f4:	inc    ebp
  4158f5:	aad    0x9f
  4158f7:	add    DWORD PTR [edi],ebx
  4158f9:	and    al,0xe5
  4158fb:	push   cs
  4158fc:	cmp    cl,ch
  4158fe:	loope  0x415977
  415900:	ss fcmovu st,st(0)
  415903:	sub    al,0x2c
  415905:	hlt    
  415906:	and    edx,DWORD PTR [eax]
  415908:	sbb    al,0x34
  41590a:	or     DWORD PTR ds:0xaaee6e9,eax
  415910:	push   ebx
  415911:	mov    BYTE PTR [ebp+0x11],0xc2
  415915:	xor    al,0xcf
  415917:	add    DWORD PTR ds:0x1c78de0d,edi
  41591d:	ret    0x4997
  415920:	jmp    0x34ad:0xf8b92709
  415927:	ret    
  415928:	adc    al,0xa2
  41592a:	add    al,0x58
  41592c:	and    al,0x2c
  41592e:	add    BYTE PTR [ebp+0xaa573a0],0xfd
  415935:	(bad)  
  415936:	and    DWORD PTR [ecx-0x5b7a8028],eax
  41593c:	and    al,0xd4
  41593e:	cmp    ebp,DWORD PTR [edx]
  415940:	mov    bh,0xd4
  415942:	sub    al,0x21
  415944:	cdq    
  415945:	push   edi
  415946:	iret   
  415947:	dec    eax
  415948:	sub    eax,0xcd9f0da1
  41594d:	jle    0x41596e
  41594f:	adc    edi,DWORD PTR [ebx+edi*1-0x7ce09161]
  415956:	adc    al,0x6b
  415958:	dec    edx
  415959:	push   es
  41595a:	ds iret 
  41595c:	jge    0x415958
  41595e:	pop    es
  41595f:	push   edx
  415960:	cs lock repnz inc esi
  415964:	mov    eax,ds:0xbb2bdae
  415969:	inc    edx
  41596a:	aas    
  41596b:	and    bl,BYTE PTR [ecx]
  41596d:	mov    dl,0x37
  41596f:	sti    
  415970:	inc    eax
  415971:	jnp    0x4159cd
  415973:	mov    DWORD PTR [eax],esp
  415975:	inc    eax
  415976:	arpl   WORD PTR [edi-0x78],ax
  415979:	aas    
  41597a:	or     eax,0x7c73942b
  41597f:	add    BYTE PTR [eax],dh
  415981:	sub    eax,0x63cb5964
  415986:	outs   dx,BYTE PTR ds:[esi]
  415987:	addr16 push ebp
  415989:	ror    BYTE PTR [esp+eax*1+0x77217123],cl
  415990:	or     edi,ebx
  415992:	arpl   sp,sp
  415994:	jae    0x4159fa
  415996:	icebp  
  415997:	js     0x415985
  415999:	gs retf 
  41599b:	dec    ecx
  41599c:	arpl   WORD PTR [ebx+eiz*2-0x41],cx
  4159a0:	mov    ds:0x5b7b576b,al
  4159a5:	in     al,dx
  4159a6:	push   ebx
  4159a7:	ficom  DWORD PTR [ebx]
  4159a9:	in     al,dx
  4159aa:	push   edx
  4159ab:	add    al,0x9
  4159ad:	mov    BYTE PTR [edi-0x2008d7c4],bh
  4159b3:	jl     0x41594a
  4159b5:	(bad)  [ecx]
  4159b7:	xchg   edx,eax
  4159b8:	test   al,0xac
  4159ba:	inc    eax
  4159bb:	add    BYTE PTR [edi-0x1bd30600],dh
  4159c1:	or     al,BYTE PTR [ebx]
  4159c3:	and    BYTE PTR ds:0x6dd567bc,ah
  4159c9:	pop    esi
  4159ca:	ss jb  0x415a4b
  4159cd:	pop    ds
  4159ce:	xchg   ebp,ecx
  4159d0:	xchg   esp,eax
  4159d1:	inc    eax
  4159d2:	jne    0x4159e4
  4159d4:	mov    DWORD PTR ds:0xf5e0610b,esp
  4159da:	retf   
  4159db:	add    ch,BYTE PTR [ebp-0x2b157b8c]
  4159e1:	xchg   ebp,eax
  4159e2:	js     0x41599c
  4159e4:	inc    eax
  4159e5:	ins    DWORD PTR es:[edi],dx
  4159e6:	xor    eax,esp
  4159e8:	or     BYTE PTR [edi+ebx*1-0x7d],cl
  4159ec:	push   0xcd2e31d0
  4159f1:	test   DWORD PTR [eax],esp
  4159f3:	mov    al,ds:0xfd4044cb
  4159f8:	xor    edi,ebx
  4159fa:	lods   eax,DWORD PTR ds:[esi]
  4159fb:	push   ebp
  4159fc:	sbb    edi,esi
  4159fe:	adc    DWORD PTR [eax-0xa],0xba8af3ba
  415a05:	dec    ecx
  415a06:	adc    BYTE PTR [esi+0x75],al
  415a09:	push   ss
  415a0a:	and    BYTE PTR [ecx+0x36],ch
  415a0d:	daa    
  415a0e:	adc    edi,0xffffff87
  415a11:	and    DWORD PTR [edx],edx
  415a13:	sbb    DWORD PTR [ebp-0x608e4a54],ebp
  415a19:	lds    ecx,FWORD PTR [edi+0x2b]
  415a1c:	into   
  415a1d:	pop    ebx
  415a1e:	leave  
  415a1f:	fadd   DWORD PTR [edi]
  415a21:	pop    es
  415a22:	stos   DWORD PTR es:[edi],eax
  415a23:	dec    ebx
  415a24:	sbb    DWORD PTR [edi],0x0
  415a27:	mov    dl,0xc7
  415a29:	cmc    
  415a2a:	and    al,BYTE PTR [esi]
  415a2c:	adc    al,0xcb
  415a2e:	jle    0x415a10
  415a30:	inc    ebx
  415a31:	xchg   edx,eax
  415a32:	ja     0x415a12
  415a34:	sbb    DWORD PTR [ebx+ebx*8],0xfffffff7
  415a38:	sti    
  415a39:	test   BYTE PTR [esi+0x49],al
  415a3c:	in     al,0xda
  415a3e:	adc    al,0x6a
  415a40:	jp     0x415a99
  415a42:	js     0x415a69
  415a44:	jle    0x415a01
  415a46:	lea    eax,[edi-0x47]
  415a49:	mov    gs:0x468d76b6,eax
  415a4f:	pop    edx
  415a50:	sub    al,0x8d
  415a52:	mov    DWORD PTR [edi+0x3da73cc6],ecx
  415a58:	aad    0xbf
  415a5a:	ins    DWORD PTR es:[edi],dx
  415a5b:	jecxz  0x415a7b
  415a5d:	mov    ch,0xfa
  415a5f:	mov    ds:0x41af8ca4,eax
  415a64:	jp     0x415ab0
  415a66:	cdq    
  415a67:	int    0xa7
  415a69:	hlt    
  415a6a:	pusha  
  415a6b:	mov    edi,DWORD PTR [edx]
  415a6d:	push   esp
  415a6e:	fst    QWORD PTR [ecx+0x2af7d22a]
  415a74:	repnz or eax,0x4662e14d
  415a7a:	pop    ebx
  415a7b:	sbb    DWORD PTR [ebp+0x237b26b0],0x6dc15e77
  415a85:	mov    esi,0x6114fd0c
  415a8a:	push   ebx
  415a8b:	test   BYTE PTR [eax+esi*8+0x40],cl
  415a8f:	pop    eax
  415a90:	adc    BYTE PTR ds:[bp+di-0x1b],al
  415a95:	(bad)  
  415a96:	dec    esi
  415a97:	pop    ds
  415a98:	je     0x415a20
  415a9a:	rcl    BYTE PTR [eax],0x32
  415a9d:	push   eax
  415a9e:	inc    ecx
  415a9f:	test   BYTE PTR [edx+0x4b],bh
  415aa2:	pop    ss
  415aa3:	das    
  415aa4:	xor    esp,edx
  415aa6:	dec    esp
  415aa7:	xor    ebx,ebp
  415aa9:	lds    ebx,FWORD PTR [esi+ecx*8-0x3c7e040d]
  415ab0:	imul   DWORD PTR [edx]
  415ab2:	adc    al,0x33
  415ab4:	push   0xffffff8d
  415ab6:	jo     0x415a8f
  415ab8:	ins    DWORD PTR es:[edi],dx
  415ab9:	pop    eax
  415aba:	mov    edi,0x467dfaba
  415abf:	mov    cs,WORD PTR [eax]
  415ac1:	je     0x415b22
  415ac3:	and    eax,0xf5bbc9b
  415ac8:	push   ds
  415ac9:	push   eax
  415aca:	clc    
  415acb:	adc    dh,dh
  415acd:	inc    esi
  415ace:	cmp    ecx,DWORD PTR [edi+0xe4006a5]
  415ad4:	sub    ebp,edi
  415ad6:	in     eax,0x7c
  415ad8:	inc    ecx
  415ad9:	xor    eax,0x3415b0e5
  415ade:	jns    0x415ab0
  415ae0:	rol    DWORD PTR [esi],cl
  415ae2:	pusha  
  415ae3:	sub    DWORD PTR [esi+0xa9f2419],0x6b20f2cf
  415aed:	shl    DWORD PTR [esi+0x9fbcc73],0x3b
  415af4:	add    ch,bh
  415af6:	xchg   esi,eax
  415af7:	jl     0x415ac9
  415af9:	iret   
  415afa:	xor    ecx,DWORD PTR [eax]
  415afc:	mov    bl,BYTE PTR [esi]
  415afe:	add    ch,BYTE PTR [edx+0x22]
  415b01:	cwde   
  415b02:	imul   esp,eax,0x32091e0a
  415b08:	mov    eax,0x61a097e
  415b0d:	in     eax,dx
  415b0e:	adc    al,0x49
  415b10:	dec    ecx
  415b11:	icebp  
  415b12:	xchg   esp,eax
  415b13:	mov    DWORD PTR [edi-0xb],edi
  415b16:	das    
  415b17:	fidiv  WORD PTR [edx-0x11a878d0]
  415b1d:	jecxz  0x415b26
  415b1f:	dec    edx
  415b20:	or     DWORD PTR [ebp+0x4b15067b],ecx
  415b26:	mov    bh,0xd8
  415b28:	push   0xfa3ddae5
  415b2d:	inc    esp
  415b2e:	cmp    ch,al
  415b30:	dec    edi
  415b31:	add    ebp,DWORD PTR [ebp+0x6a]
  415b34:	ss inc ecx
  415b36:	mov    ch,0xf2
  415b38:	int    0x59
  415b3a:	sub    eax,0x95696ea9
  415b3f:	fisubr WORD PTR [eax+0x6c71521]
  415b45:	jne    0x415bb9
  415b47:	and    eax,0x5aa5866d
  415b4c:	pushf  
  415b4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b4e:	mov    al,ds:0x884559d8
  415b53:	outs   dx,DWORD PTR ds:[esi]
  415b54:	in     eax,0x48
  415b56:	lods   eax,DWORD PTR ds:[esi]
  415b57:	out    dx,al
  415b58:	and    al,0xdd
  415b5a:	aas    
  415b5b:	jecxz  0x415b97
  415b5d:	jge    0x415afe
  415b5f:	call   FWORD PTR [esi]
  415b61:	mov    BYTE PTR [edi+ecx*8-0x48],al
  415b65:	sahf   
  415b66:	add    bh,BYTE PTR [ebx-0x2f]
  415b69:	push   ds
  415b6a:	lods   eax,DWORD PTR ds:[esi]
  415b6b:	xor    eax,0x6f0d4df8
  415b70:	aad    0xe
  415b72:	pop    ds
  415b73:	popa   
  415b74:	ds aad 0x85
  415b77:	adc    cl,BYTE PTR [edi+0x9193046]
  415b7d:	or     ebp,ecx
  415b7f:	jmp    0x5603120d
  415b84:	push   edi
  415b85:	xchg   esi,eax
  415b86:	sbb    BYTE PTR [ecx-0x7ed92a7],dh
  415b8c:	and    DWORD PTR [bp+si+0x5f],eax
  415b90:	fild   QWORD PTR [ebx-0x6ed31f9a]
  415b96:	push   ebx
  415b97:	sbb    al,0x8d
  415b99:	sbb    BYTE PTR [esi],bh
  415b9b:	pop    ebx
  415b9c:	dec    DWORD PTR ds:0x5886a70b
  415ba2:	retf   
  415ba3:	cwde   
  415ba4:	pop    eax
  415ba5:	jmp    0x10ee8eb0
  415baa:	mov    WORD PTR [eax],gs
  415bac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bad:	adc    esi,DWORD PTR [bp+0x11]
  415bb1:	clc    
  415bb2:	shr    DWORD PTR [eax],1
  415bb4:	call   0xe6b6687f
  415bb9:	or     cl,BYTE PTR [ecx-0x25d0483d]
  415bbf:	push   es
  415bc0:	or     al,0xe2
  415bc2:	xor    eax,0x6e00ba27
  415bc7:	fisubr DWORD PTR [ebp+0x29013910]
  415bcd:	mov    bl,0x5
  415bcf:	out    0xfe,al
  415bd1:	cld    
  415bd2:	push   ebx
  415bd3:	je     0x415bf4
  415bd5:	pop    ebx
  415bd6:	pop    es
  415bd7:	mov    ds:0xb622893c,eax
  415bdc:	dec    edi
  415bdd:	xor    DWORD PTR [edx-0x46],ecx
  415be0:	mov    dh,0x4
  415be2:	mov    ds:0xfdeb5d50,al
  415be7:	cmc    
  415be8:	mov    esp,0x6182792
  415bed:	mov    edx,esp
  415bef:	pop    edx
  415bf0:	push   ss
  415bf1:	mov    esi,0x1e679df4
  415bf6:	push   ecx
  415bf7:	sbb    cl,al
  415bf9:	and    bh,BYTE PTR [esi-0x2dafe207]
  415bff:	out    dx,al
  415c00:	imul   edi,DWORD PTR [esp+edx*1],0xd81eafda
  415c07:	aad    0x1c
  415c09:	jmp    FWORD PTR [edi-0x3d1f16ee]
  415c0f:	or     DWORD PTR [esp+edi*8-0x79],edi
  415c13:	ficomp WORD PTR [eax]
  415c15:	scas   al,BYTE PTR es:[edi]
  415c16:	dec    edi
  415c17:	pop    ds
  415c18:	mov    ch,0x14
  415c1a:	dec    edi
  415c1b:	stc    
  415c1c:	mov    ecx,0xc87eb896
  415c21:	hlt    
  415c22:	inc    ebx
  415c23:	std    
  415c24:	xchg   ecx,eax
  415c25:	dec    ebp
  415c26:	call   edx
  415c28:	jno    0x415c19
  415c2a:	fadd   DWORD PTR [ecx]
  415c2c:	pop    edi
  415c2d:	mov    al,al
  415c2f:	dec    ebx
  415c30:	mov    ds:0x7b2f37ac,al
  415c35:	int3   
  415c36:	pop    ebx
  415c37:	imul   esp,DWORD PTR [ebx],0x24
  415c3a:	inc    ebp
  415c3b:	inc    edx
  415c3c:	popa   
  415c3d:	or     dh,BYTE PTR ds:[ecx-0x70]
  415c41:	push   eax
  415c42:	cmp    al,0xa2
  415c44:	add    eax,0xfa12ea15
  415c49:	inc    eax
  415c4a:	mov    ds:0xa691f08,eax
  415c4f:	or     ah,BYTE PTR [edi]
  415c51:	add    al,0xac
  415c53:	and    eax,0x622830bc
  415c58:	dec    ebx
  415c59:	inc    edi
  415c5a:	xor    BYTE PTR [ebx],al
  415c5c:	mov    ecx,DWORD PTR [edi+0x22]
  415c5f:	add    eax,0x9ff34f71
  415c64:	jbe    0x415caf
  415c66:	pop    esp
  415c67:	inc    ebx
  415c68:	inc    ebp
  415c69:	push   ss
  415c6a:	lea    esi,[edi]
  415c6c:	arpl   WORD PTR ds:0xafd93a93,bp
  415c72:	adc    eax,0x3683a439
  415c77:	mov    esi,0x7cf2710f
  415c7c:	xchg   edx,eax
  415c7d:	push   ecx
  415c7e:	add    ecx,eax
  415c80:	push   eax
  415c81:	mov    ds:0xb1fe0ac3,eax
  415c86:	fnsave [esi+ebp*4]
  415c89:	ss push eax
  415c8b:	push   ecx
  415c8c:	ret    0xfa6
  415c8f:	clc    
  415c90:	sbb    eax,0x2bdafe1
  415c95:	push   ss
  415c96:	mov    al,ds:0xbc010be9
  415c9b:	test   DWORD PTR [edi+0x3c],0x48826eb9
  415ca2:	loope  0x415c70
  415ca4:	add    al,0x29
  415ca6:	(bad)  
  415ca7:	stc    
  415ca8:	jg     0x415cd9
  415caa:	mov    ah,0xdb
  415cac:	jle    0x415cf1
  415cae:	adc    dl,ch
  415cb0:	dec    edi
  415cb1:	int    0x16
  415cb3:	sub    DWORD PTR [ecx-0x2b9e1b97],edx
  415cb9:	sbb    dl,cl
  415cbb:	push   ecx
  415cbc:	jno    0x415ce1
  415cbe:	jp     0x415cc7
  415cc0:	push   0x3c
  415cc2:	retf   0xe383
  415cc5:	sbb    DWORD PTR [eax+0x31],ecx
  415cc8:	jl     0x415ca7
  415cca:	fwait
  415ccb:	std    
  415ccc:	adc    ah,al
  415cce:	fwait
  415ccf:	inc    esp
  415cd0:	push   ecx
  415cd1:	mov    dh,0x84
  415cd3:	or     al,BYTE PTR [edx-0x38]
  415cd6:	add    al,dl
  415cd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cd9:	sbb    ch,BYTE PTR [esi+0x37]
  415cdc:	call   0x2c60:0x44ac3e6c
  415ce3:	sub    al,0xf6
  415ce5:	sub    eax,0x1b7df9e0
  415cea:	ret    0xc988
  415ced:	mov    ds:0x1f13990c,eax
  415cf2:	inc    esi
  415cf3:	data16 and BYTE PTR [esi],bh
  415cf6:	inc    edi
  415cf7:	popa   
  415cf8:	sbb    BYTE PTR [esi],0x85
  415cfb:	dec    ecx
  415cfc:	inc    edi
  415cfd:	inc    ecx
  415cfe:	inc    esi
  415cff:	inc    esi
  415d00:	dec    eax
  415d01:	add    BYTE PTR [ecx],dh
  415d03:	cmp    edi,DWORD PTR [ebx+esi*1]
  415d06:	cmp    DWORD PTR [ebx+edi*1],esi
  415d09:	xor    DWORD PTR [esi+0x31],edx
  415d0c:	call   0x4c5eec8b
  415d11:	in     al,0x29
  415d13:	scas   al,BYTE PTR es:[edi]
  415d14:	out    0x34,al
  415d16:	xor    esi,ecx
  415d18:	cmp    DWORD PTR [ecx+0x14bd47e1],esi
  415d1e:	adc    BYTE PTR [edi-0x52a19040],dh
  415d24:	in     al,dx
  415d25:	jbe    0x415d8c
  415d27:	or     dh,bl
  415d29:	push   ds
  415d2a:	aam    0x2a
  415d2c:	scas   al,BYTE PTR es:[edi]
  415d2d:	pop    ebx
  415d2e:	and    ecx,esi
  415d30:	in     eax,dx
  415d31:	dec    esi
  415d32:	hlt    
  415d33:	hlt    
  415d34:	js     0x415da3
  415d36:	dec    edx
  415d37:	cmp    al,0xdb
  415d39:	and    edx,DWORD PTR [edx]
  415d3b:	sbb    al,0x88
  415d3d:	sbb    al,BYTE PTR [edi]
  415d3f:	test   eax,0x3b2f368c
  415d44:	aad    0x57
  415d46:	loopne 0x415d0c
  415d48:	pop    ds
  415d49:	dec    esp
  415d4a:	jo     0x415d25
  415d4c:	call   FWORD PTR [edx-0xf0f3e92]
  415d52:	pop    es
  415d53:	cmp    al,0x43
  415d55:	leave  
  415d56:	lea    ecx,[edi+edx*1+0x7f]
  415d5a:	cmc    
  415d5b:	xchg   BYTE PTR [edx-0x8],bl
  415d5e:	test   eax,0x19ee7763
  415d63:	aad    0xb5
  415d65:	aam    0xa4
  415d67:	push   ss
  415d68:	or     edi,DWORD PTR ds:[edi]
  415d6b:	ds dec ebp
  415d6d:	js     0x415db9
  415d6f:	xor    DWORD PTR [edx+0x25f59c47],ecx
  415d75:	cld    
  415d76:	inc    eax
  415d77:	xchg   BYTE PTR [eax],dl
  415d79:	imul   ecx,DWORD PTR ds:0x49c9d3bf,0x3b
  415d80:	and    DWORD PTR [eax+0x681a4744],ebp
  415d86:	or     eax,0x44282d97
  415d8b:	push   ecx
  415d8c:	sti    
  415d8d:	push   ss
  415d8e:	in     eax,0x4e
  415d90:	std    
  415d91:	inc    edx
  415d92:	retf   
  415d93:	cmp    bl,BYTE PTR ds:0x916a054a
  415d99:	shl    DWORD PTR [ebx-0x78],1
  415d9c:	push   ebx
  415d9d:	inc    eax
  415d9e:	sti    
  415d9f:	or     BYTE PTR [ecx+0x19],bh
  415da2:	aaa    
  415da3:	out    dx,al
  415da4:	xchg   esi,eax
  415da5:	push   ecx
  415da6:	neg    BYTE PTR [esi]
  415da8:	mov    BYTE PTR [edx+0x243d29db],bl
  415dae:	xchg   BYTE PTR [edi],dl
  415db0:	add    DWORD PTR [edi+eax*4+0x73814622],0xdfbf5dfa
  415dbb:	loopne 0x415de2
  415dbd:	xor    ecx,DWORD PTR [edi+0x4]
  415dc0:	jmp    0x415df4
  415dc2:	xor    BYTE PTR [ecx],dl
  415dc4:	lea    edi,[edi+0x7316fb4e]
  415dca:	push   esi
  415dcb:	xchg   edx,eax
  415dcc:	add    bh,ch
  415dce:	es (bad) 
  415dd0:	sbb    bh,BYTE PTR [eax+0x6f]
  415dd3:	mov    WORD PTR [edi],fs
  415dd5:	xor    BYTE PTR fs:[edi-0x54],al
  415dd9:	inc    ebx
  415dda:	adc    al,0x64
  415ddc:	rcl    BYTE PTR [ecx],0x81
  415ddf:	dec    edi
  415de0:	dec    ebx
  415de1:	cld    
  415de2:	push   0xffffffdc
  415de4:	sti    
  415de5:	sub    DWORD PTR [eax],ecx
  415de7:	int3   
  415de8:	sbb    BYTE PTR ds:0x203e6181,bl
  415dee:	pop    eax
  415def:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415df0:	dec    ebx
  415df1:	inc    ebx
  415df2:	adc    dl,BYTE PTR [ebx-0x4a]
  415df5:	shl    BYTE PTR [ecx+0x4e],0x33
  415df9:	rol    DWORD PTR [eax-0x5],cl
  415dfc:	in     al,0xf0
  415dfe:	cmp    BYTE PTR [esi+0x4773e94f],bl
  415e04:	clc    
  415e05:	adc    al,0x8f
  415e07:	jo     0x415e00
  415e09:	mov    DWORD PTR [eax+0x70],esp
  415e0c:	mov    ebp,DWORD PTR [ecx-0xf]
  415e0f:	mov    DWORD PTR [esi-0xf],edx
  415e12:	and    BYTE PTR [ebx+0x14],al
  415e15:	test   al,0x30
  415e17:	cwde   
  415e18:	pop    es
  415e19:	cmp    DWORD PTR [ebp-0x36],esp
  415e1c:	mul    DWORD PTR [edi]
  415e1e:	sub    DWORD PTR [ecx-0x3f3783c7],eax
  415e24:	sbb    DWORD PTR [edx-0x301c600b],esi
  415e2a:	xor    al,0x80
  415e2c:	add    BYTE PTR [eax],0x83
  415e2f:	stos   BYTE PTR es:[edi],al
  415e30:	lea    edi,[ebp+0x14]
  415e33:	aaa    
  415e34:	add    BYTE PTR [ebx+0x121f5b94],al
  415e3a:	push   ebp
  415e3b:	es xchg ebx,eax
  415e3d:	xchg   ah,dh
  415e3f:	push   cs
  415e40:	int    0x2a
  415e42:	in     eax,dx
  415e43:	add    DWORD PTR [ecx-0x726480b4],0x61fdf10b
  415e4d:	mov    esi,0x50a835a9
  415e52:	pop    ds
  415e53:	in     eax,dx
  415e54:	int    0xf4
  415e56:	mov    WORD PTR [eax+0xb],cs
  415e59:	mov    dh,0x60
  415e5b:	cmp    DWORD PTR [eax+0x11aab425],esi
  415e61:	pop    ebx
  415e62:	retf   
  415e63:	and    BYTE PTR [ecx+eiz*2],0x1f
  415e67:	stos   BYTE PTR es:[edi],al
  415e68:	cmp    ch,BYTE PTR [edi]
  415e6a:	imul   edi,DWORD PTR [ebp-0x32e0b3a9],0x7ca44802
  415e74:	sub    eax,0x84275e34
  415e79:	stos   DWORD PTR es:[edi],eax
  415e7a:	adc    eax,0x7b402922
  415e7f:	xor    al,0xba
  415e81:	sub    eax,0x1cc95400
  415e86:	mov    cl,0x2b
  415e88:	adc    BYTE PTR [ebp+eiz*8+0x51],bl
  415e8c:	mov    al,0x22
  415e8e:	cli    
  415e8f:	(bad)  
  415e90:	bound  edi,QWORD PTR [edx-0x6d]
  415e93:	push   0xc73f942e
  415e98:	mov    edi,DWORD PTR [ebx]
  415e9a:	dec    ecx
  415e9b:	sub    ah,bl
  415e9d:	or     ch,BYTE PTR [edi-0x87601e6]
  415ea3:	push   ds
  415ea4:	imul   edi,DWORD PTR [edi],0xfffffffc
  415ea7:	jmp    0xd218:0x69f9034b
  415eae:	in     eax,dx
  415eaf:	jge    0x415e40
  415eb1:	imul   edi,DWORD PTR [ebx-0x4c],0xffffffb9
  415eb5:	imul   esp,edx,0xffffffc5
  415eb8:	push   edi
  415eb9:	repnz mov dl,BYTE PTR [esp+edi*2+0x37]
  415ebe:	pop    edx
  415ebf:	pusha  
  415ec0:	push   esp
  415ec1:	mov    ah,ch
  415ec3:	or     eax,0x232795c
  415ec8:	jmp    0x415f39
  415eca:	arpl   WORD PTR [edx+0xec08d83],di
  415ed0:	repnz icebp 
  415ed2:	sbb    edi,DWORD PTR [ebp+0x4d35c9f9]
  415ed8:	inc    ecx
  415ed9:	dec    esp
  415eda:	xchg   BYTE PTR [ebx+0x2c],al
  415edd:	cld    
  415ede:	stc    
  415edf:	add    DWORD PTR [ebx+ebx*8+0x6886fefa],ebp
  415ee6:	out    0xf7,al
  415ee8:	repnz push cs
  415eea:	xchg   DWORD PTR [eax-0x3],esi
  415eed:	clc    
  415eee:	push   ss
  415eef:	js     0x415ea9
  415ef1:	cli    
  415ef2:	pop    es
  415ef3:	or     al,BYTE PTR [ebx+0x4d]
  415ef6:	dec    ebx
  415ef7:	jle    0x415f70
  415ef9:	std    
  415efa:	inc    ecx
  415efb:	cld    
  415efc:	dec    edx
  415efd:	jne    0x415ee0
  415eff:	lea    ebp,[ebx+ebx*2-0x76e86f56]
  415f06:	dec    ecx
  415f07:	inc    ecx
  415f08:	retf   
  415f09:	ror    edx,1
  415f0b:	fnstcw WORD PTR [eax+0x255a5055]
  415f11:	mov    ebx,ebp
  415f13:	dec    ebp
  415f14:	test   eax,0x48f2882a
  415f19:	pop    ebx
  415f1a:	push   0xffffffd1
  415f1c:	jl     0x415f4b
  415f1e:	and    eax,0xdaf4290c
  415f23:	pop    es
  415f24:	or     ah,BYTE PTR [eax+0x0]
  415f27:	dec    esp
  415f28:	fmul   DWORD PTR [ecx+0x1b]
  415f2b:	mov    ch,0x26
  415f2d:	clc    
  415f2e:	call   0xca74ddf8
  415f33:	mov    edi,ds
  415f35:	push   esp
  415f36:	bound  edi,QWORD PTR [eax]
  415f38:	cld    
  415f39:	lods   al,BYTE PTR ds:[esi]
  415f3a:	pushf  
  415f3b:	inc    esi
  415f3c:	pop    edi
  415f3d:	and    BYTE PTR [edx-0x31],cl
  415f40:	pop    es
  415f41:	adc    bh,BYTE PTR [edx+ebx*8+0x4cf31099]
  415f48:	cmp    eax,0x1f8c76dc
  415f4d:	pop    ds
  415f4e:	xor    DWORD PTR [ecx+0x25],eax
  415f51:	mov    WORD PTR [ebx-0x553daeba],ds
  415f57:	push   0xfffffffc
  415f59:	mov    edi,0xfbc20b20
  415f5e:	std    
  415f5f:	and    cl,BYTE PTR [ebx]
  415f61:	mov    gs,WORD PTR [edx+ecx*2]
  415f64:	mov    esi,ss
  415f66:	neg    BYTE PTR [esi+0x2cde5995]
  415f6c:	aam    0xf6
  415f6e:	repz mov bl,0x85
  415f71:	ins    BYTE PTR es:[edi],dx
  415f72:	jne    0x415fb7
  415f74:	mov    dl,0x6c
  415f76:	les    eax,FWORD PTR [esi-0x33f4a939]
  415f7c:	jo     0x415f6e
  415f7e:	test   DWORD PTR ds:0xc17faa29,0x6b4e9db5
  415f88:	and    cl,BYTE PTR [ecx+0x611e79cb]
  415f8e:	and    BYTE PTR [esi-0x14b84f6f],bl
  415f94:	in     al,0x30
  415f96:	sub    cl,BYTE PTR [edi]
  415f98:	icebp  
  415f99:	mov    DWORD PTR [ecx+0x56],0x38e1496e
  415fa0:	add    DWORD PTR [esi],ecx
  415fa2:	jno    0x415f26
  415fa4:	cli    
  415fa5:	pop    ss
  415fa6:	fmul   DWORD PTR [esi+0x44]
  415fa9:	or     al,0xe1
  415fab:	out    0xd8,al
  415fad:	hlt    
  415fae:	repz jmp 0x2d776bd4
  415fb4:	inc    BYTE PTR [esi+edi*4]
  415fb7:	or     eax,0xe72cc968
  415fbc:	xor    al,0x83
  415fbe:	xlat   BYTE PTR ds:[ebx]
  415fbf:	(bad)  
  415fc0:	mov    ebp,0x7c2dbec8
  415fc5:	retf   0xe20a
  415fc8:	dec    BYTE PTR [edx]
  415fca:	(bad)  
  415fcb:	push   esp
  415fcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fcd:	bound  ebx,QWORD PTR [ecx+0x5a]
  415fd0:	inc    ebx
  415fd1:	dec    ebp
  415fd2:	or     BYTE PTR [edi+0x43],cl
  415fd5:	sub    ecx,DWORD PTR [esi-0x24]
  415fd8:	cli    
  415fd9:	sbb    eax,DWORD PTR [eax+0xbf97065]
  415fdf:	or     al,0x5e
  415fe1:	jo     0x416048
  415fe3:	jns    0x41602d
  415fe5:	gs mov esp,0xe7f020fe
  415feb:	icebp  
  415fec:	mov    ch,0xc6
  415fee:	xchg   edx,eax
  415fef:	dec    eax
  415ff0:	push   cs
  415ff1:	inc    esp
  415ff2:	ins    DWORD PTR es:[edi],dx
  415ff3:	ja     0x416059
  415ff5:	data16 xchg BYTE PTR [edi+eiz*1+0x33],ah
  415ffa:	or     DWORD PTR [ebx+esi*1],ebp
  415ffd:	cs sub ah,ah
  416000:	sub    BYTE PTR [eax+0x36332d63],dh
  416006:	(bad)  
  416007:	push   eax
  416008:	inc    esi
  416009:	retf   0x30c7
  41600c:	pop    es
  41600d:	add    edi,DWORD PTR [edi+0x75]
  416010:	aaa    
  416011:	cmp    DWORD PTR [ebp-0x11],ecx
  416014:	shr    DWORD PTR [eax],1
  416016:	jecxz  0x416066
  416018:	imul   eax,DWORD PTR [esi],0x27676d61
  41601e:	xor    eax,0x7cfbb7e2
  416023:	psadbw mm1,QWORD PTR [edi-0x6f]
  416027:	jp     0x416076
  416029:	add    eax,0x2a7f6069
  41602e:	sbb    BYTE PTR [eax+ebx*1-0x41],al
  416032:	cmc    
  416033:	idiv   DWORD PTR [eax]
  416035:	(bad)  
  416036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416037:	cmp    al,BYTE PTR [edx-0x73]
  41603a:	dec    ebp
  41603b:	nop
  41603c:	push   ss
  41603d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41603e:	cld    
  41603f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416040:	(bad)  
  416041:	sub    dl,BYTE PTR [edx+ecx*4-0x42]
  416045:	sahf   
  416046:	leave  
  416047:	hlt    
  416048:	sub    eax,0x472bb7da
  41604d:	in     al,dx
  41604e:	ss sbb dh,dl
  416051:	ret    
  416052:	or     eax,0x1544cebf
  416057:	xchg   esp,eax
  416058:	adc    eax,0xf7f33057
  41605d:	sar    BYTE PTR [ecx-0x62036b22],0x7f
  416064:	push   ebx
  416065:	inc    ecx
  416066:	dec    ebp
  416067:	inc    ebp
  416068:	inc    edi
  416069:	lods   eax,DWORD PTR ds:[esi]
  41606a:	in     eax,dx
  41606b:	cmp    BYTE PTR [ecx+0x6648f508],al
  416071:	push   ebp
  416072:	les    esi,FWORD PTR [eax+ebx*8]
  416075:	ss xchg edi,eax
  416077:	and    al,0x99
  416079:	or     esp,DWORD PTR [ebx+ecx*2+0x3e9e1bf7]
  416080:	add    eax,DWORD PTR [ebx+0x12f41519]
  416086:	mov    ebp,0x7f46965e
  41608b:	pop    ss
  41608c:	and    al,0xf3
  41608e:	idiv   DWORD PTR [ecx+0x79367021]
  416094:	stc    
  416095:	xchg   BYTE PTR [esi],bh
  416097:	adc    al,0xf1
  416099:	dec    edi
  41609a:	mov    WORD PTR [edi],fs
  41609c:	sbb    eax,0xebece961
  4160a1:	or     edi,DWORD PTR [edx+0x2ce3d43a]
  4160a7:	sbb    DWORD PTR [ebx],0x4f284f45
  4160ad:	mov    BYTE PTR [esi+0x29],dh
  4160b0:	inc    ecx
  4160b1:	mov    al,0x24
  4160b3:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160b5:	inc    DWORD PTR [eax]
  4160b7:	lods   al,BYTE PTR ds:[esi]
  4160b8:	call   0x2228:0xfbaa130c
  4160bf:	sbb    eax,0x55288a0
  4160c4:	inc    ecx
  4160c5:	xchg   ecx,eax
  4160c6:	scas   al,BYTE PTR es:[edi]
  4160c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160c8:	sbb    ecx,DWORD PTR gs:[edx-0x1c8f797f]
  4160cf:	xchg   al,bh
  4160d1:	inc    ebx
  4160d2:	sub    DWORD PTR [ecx],0xb9390104
  4160d8:	shr    DWORD PTR [esi+0x1ea73201],0x86
  4160df:	aas    
  4160e0:	(bad)  
  4160e1:	sar    BYTE PTR [ebx-0x76],0x2f
  4160e5:	mov    al,ds:0x1b76046f
  4160ea:	add    bh,BYTE PTR [esi-0x71395e2]
  4160f0:	pop    ebp
  4160f1:	in     al,dx
  4160f2:	mov    al,0x5d
  4160f4:	fstp   DWORD PTR [ebx]
  4160f6:	in     eax,0xf4
  4160f8:	xor    al,0x72
  4160fa:	push   es
  4160fb:	mov    ebx,edi
  4160fd:	inc    ecx
  4160fe:	or     BYTE PTR [edx+0x25],al
  416101:	bound  esi,QWORD PTR ds:0x9b6b7a4a
  416107:	add    al,0xbf
  416109:	cwde   
  41610a:	ja     0x416115
  41610c:	mov    ebp,0x8a554177
  416111:	in     al,0x14
  416113:	out    0x91,eax
  416115:	mov    ch,BYTE PTR [edx-0x42ea9f48]
  41611b:	(bad)  
  41611c:	mov    eax,ds:0x9c0e186
  416121:	test   eax,0x3ce11fa6
  416126:	push   ss
  416127:	mov    ah,0x37
  416129:	and    dl,BYTE PTR [edi]
  41612b:	enter  0x74b4,0xb3
  41612f:	inc    ecx
  416130:	test   eax,0xaa4b0013
  416135:	and    DWORD PTR [esi+0x2d26e921],ebp
  41613b:	sbb    eax,0x21433005
  416140:	or     ebp,DWORD PTR [esi+0x42b030f]
  416146:	dec    edi
  416147:	add    DWORD PTR [esp+ebx*1-0xc621e9c],ebp
  41614e:	mov    ah,0x39
  416150:	mov    ds:0xe7661b78,al
  416155:	push   esi
  416156:	xchg   eax,esi
  416158:	xchg   esi,eax
  416159:	sub    DWORD PTR [ecx+0x25],edi
  41615c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41615d:	or     DWORD PTR [ecx],edx
  41615f:	mov    BYTE PTR [eax+esi*8+0x14238941],al
  416166:	adc    BYTE PTR [ebx],bl
  416168:	jne    0x41617e
  41616a:	and    DWORD PTR ds:0x444e8775,eax
  416170:	das    
  416171:	addr16 shr ecx,0x5b
  416175:	je     0x4161bf
  416177:	pop    ebx
  416178:	inc    ebp
  416179:	mov    ch,0x81
  41617b:	add    edx,DWORD PTR [ecx]
  41617d:	dec    ecx
  41617e:	not    DWORD PTR [eax+0x4b8ceec7]
  416184:	cwde   
  416185:	push   ecx
  416186:	dec    ebp
  416187:	sub    DWORD PTR [ebx+0x4ef80ea6],0x8fc3b1f3
  416191:	adc    BYTE PTR [edi],0xe4
  416194:	les    edx,FWORD PTR [esp+ecx*2]
  416197:	add    dh,0x5c
  41619a:	jmp    0xf89aa9b2
  41619f:	leave  
  4161a0:	mov    cl,0x80
  4161a2:	mov    ecx,0x9073be6d
  4161a7:	jnp    0x4161a6
  4161a9:	mov    al,0x1e
  4161ab:	pop    edi
  4161ac:	repnz pop eax
  4161ae:	push   esi
  4161af:	outs   dx,DWORD PTR ds:[esi]
  4161b0:	inc    eax
  4161b1:	or     ah,BYTE PTR [esi+0x4d97104f]
  4161b7:	rcl    esi,0x69
  4161ba:	dec    eax
  4161bb:	pop    ebx
  4161bc:	in     eax,dx
  4161bd:	(bad)  
  4161bf:	inc    ebp
  4161c0:	out    0x9e,eax
  4161c2:	cmp    BYTE PTR cs:[ecx-0x26f431a9],ah
  4161c9:	sbb    DWORD PTR [ebx-0x7b298b94],edi
  4161cf:	retf   0xf205
  4161d2:	inc    eax
  4161d3:	dec    ebp
  4161d4:	imul   eax,DWORD PTR [ebp+0x1c],0xd532e35
  4161db:	inc    edx
  4161dc:	(bad)  
  4161dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161de:	push   0xd180f1f6
  4161e3:	sub    ecx,0x12bf262c
  4161e9:	sub    ch,0xf1
  4161ec:	dec    ecx
  4161ed:	adc    al,0xc5
  4161ef:	xor    al,0xce
  4161f1:	sahf   
  4161f2:	test   DWORD PTR [edi+esi*8+0xb29911f],ebp
  4161f9:	dec    esi
  4161fa:	(bad)  
  4161fb:	retf   0x9295
  4161fe:	dec    ebx
  4161ff:	sbb    eax,0xe0be221c
  416204:	sti    
  416205:	lahf   
  416206:	pop    ds
  416207:	icebp  
  416208:	jmp    0x4161ae
  41620a:	dec    esp
  41620b:	int    0x5d
  41620d:	leave  
  41620e:	aaa    
  41620f:	mov    al,0xfe
  416211:	into   
  416212:	mov    ah,0x20
  416214:	cmp    eax,esi
  416216:	add    eax,0x8aba06f0
  41621b:	pusha  
  41621c:	icebp  
  41621d:	mov    WORD PTR [edi+0x15],ss
  416220:	dec    edx
  416221:	mov    bh,0x10
  416223:	leave  
  416224:	mov    al,BYTE PTR [ecx+0x11]
  416227:	das    
  416228:	mov    edi,0x7146b374
  41622d:	jb     0x4161bc
  41622f:	out    dx,eax
  416230:	test   eax,0x6453955d
  416235:	or     eax,0xc7a1dfeb
  41623a:	inc    ebp
  41623b:	cld    
  41623c:	fistp  QWORD PTR [eax-0x47]
  41623f:	pop    ss
  416240:	clc    
  416241:	int3   
  416242:	cmp    al,0xf9
  416244:	xchg   edi,eax
  416245:	sbb    eax,0x8cca0682
  41624a:	mov    eax,ds:0x5c2edbce
  41624f:	stc    
  416250:	inc    eax
  416251:	inc    ebx
  416252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416253:	mov    ds:0xdaa816f8,eax
  416258:	sti    
  416259:	and    ch,dh
  41625b:	mov    edx,0xd9001a21
  416260:	push   0x965eb557
  416265:	lds    ebx,FWORD PTR [esp+edi*2+0x15499828]
  41626c:	pushf  
  41626d:	add    bl,ch
  41626f:	xchg   ecx,eax
  416270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416271:	pop    ecx
  416272:	lea    ebx,[edi-0x75f017c5]
  416278:	inc    edx
  416279:	std    
  41627a:	mov    ch,0xb5
  41627c:	xchg   ah,ch
  41627e:	pusha  
  41627f:	loop   0x416272
  416281:	cwde   
  416282:	dec    edx
  416283:	cwde   
  416284:	outs   dx,BYTE PTR ds:[esi]
  416285:	mov    esi,0x1c731969
  41628a:	stos   DWORD PTR es:[edi],eax
  41628b:	retf   
  41628c:	pop    esi
  41628d:	and    al,BYTE PTR [ebp+0x7794213a]
  416293:	pop    esp
  416294:	mov    ecx,0xafe6dd12
  416299:	dec    esi
  41629a:	push   ebx
  41629b:	pop    ss
  41629c:	lods   eax,DWORD PTR ds:[esi]
  41629d:	mov    eax,ds:0x1047c70
  4162a2:	mov    WORD PTR [edx-0x7c],es
  4162a5:	aas    
  4162a6:	mov    ss,WORD PTR [eax+0x6a8b903d]
  4162ac:	mov    cl,0x21
  4162ae:	push   ds
  4162af:	dec    ebp
  4162b0:	mov    DWORD PTR [edi-0x6d0b98cd],esp
  4162b6:	jbe    0x416247
  4162b8:	ret    
  4162b9:	add    dl,bl
  4162bb:	popf   
  4162bc:	les    esp,FWORD PTR ds:0x5429feb6
  4162c2:	xor    DWORD PTR [edx-0x35],0x4844f4fb
  4162c9:	mov    DWORD PTR [edx],ecx
  4162cb:	and    esi,DWORD PTR [edx]
  4162cd:	lods   eax,DWORD PTR ds:[esi]
  4162ce:	fnstsw ax
  4162d0:	and    eax,esp
  4162d2:	ss jle 0x416305
  4162d5:	xchg   ebp,eax
  4162d6:	into   
  4162d7:	mov    edx,0x1a6c467f
  4162dc:	test   eax,0x1a1f0e7a
  4162e1:	add    BYTE PTR [esi],dl
  4162e3:	mov    bl,BYTE PTR [ebp-0x57]
  4162e6:	and    cl,bh
  4162e8:	lds    ebp,FWORD PTR [edi]
  4162ea:	and    dh,ch
  4162ec:	mov    esi,DWORD PTR [ecx]
  4162ee:	sbb    BYTE PTR [edx-0x1f49a297],bh
  4162f4:	(bad)  
  4162f5:	(bad)  [ecx-0x48]
  4162f8:	repz or al,BYTE PTR [esi]
  4162fb:	fs stc 
  4162fd:	mov    cs,WORD PTR [ebp+ecx*4+0x43]
  416301:	repnz dec esi
  416303:	ficom  DWORD PTR [edx-0x3]
  416306:	cwde   
  416307:	ins    BYTE PTR es:[edi],dx
  416308:	adc    ch,BYTE PTR [ecx+ecx*2]
  41630b:	popa   
  41630c:	das    
  41630d:	add    eax,0x826a554c
  416312:	pushf  
  416313:	call   0x58fa793a
  416318:	fstp   DWORD PTR [ebx+0x9]
  41631b:	mov    al,ds:0xc8258a52
  416320:	(bad)  
  416322:	std    
  416323:	call   0x4836:0x175b0a97
  41632a:	les    esp,FWORD PTR [edi+ebp*8+0x38ea7ec8]
  416331:	rcl    BYTE PTR [ebx],cl
  416333:	aad    0xaf
  416335:	inc    edx
  416336:	jle    0x41639e
  416338:	ror    BYTE PTR [ecx+eiz*2+0x5d],0xd1
  41633d:	adc    eax,0x9cc79ccd
  416342:	and    BYTE PTR [edi],0xc9
  416345:	mov    edi,0xe59b5162
  41634a:	(bad)  
  41634c:	call   0x1ebbc0a5
  416351:	mov    ah,BYTE PTR [esi]
  416353:	jecxz  0x41634e
  416355:	das    
  416356:	sti    
  416357:	sbb    bl,BYTE PTR [ecx]
  416359:	pop    eax
  41635a:	xor    DWORD PTR [ebp-0x11],edi
  41635d:	sbb    eax,0x20bc5c86
  416362:	sub    cl,BYTE PTR [edx+esi*4]
  416365:	(bad)  
  416366:	dec    esp
  416367:	push   ecx
  416368:	sub    BYTE PTR [ebp+0x15],dl
  41636b:	adc    edx,edx
  41636d:	in     eax,0xb6
  41636f:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416371:	lods   eax,DWORD PTR ds:[esi]
  416372:	and    dh,cl
  416374:	(bad)  
  416375:	cmp    BYTE PTR [esi+0x1d],al
  416378:	mov    eax,edi
  41637a:	cdq    
  41637b:	jae    0x416390
  41637d:	mov    esp,0xcf85967e
  416382:	and    eax,0xe412d03e
  416387:	add    al,0x41
  416389:	push   ebx
  41638a:	in     eax,0x31
  41638c:	and    DWORD PTR [ebx+0x1d],ebx
  41638f:	dec    ebp
  416390:	or     BYTE PTR [ecx-0x7c],cl
  416393:	and    esi,DWORD PTR [esi+0x7cc031f0]
  416399:	push   ebp
  41639a:	aas    
  41639b:	and    al,0x21
  41639d:	dec    edx
  41639e:	adc    al,0x21
  4163a0:	(bad)  
  4163a1:	cmp    eax,0x8c274c62
  4163a6:	sbb    dl,dl
  4163a8:	xor    esi,DWORD PTR [edx+0x38]
  4163ab:	jno    0x41633a
  4163ad:	popa   
  4163ae:	adc    esi,ecx
  4163b0:	or     edx,DWORD PTR gs:0x8fc2fb48
  4163b7:	lods   eax,DWORD PTR ds:[esi]
  4163b9:	xchg   bh,cl
  4163bb:	add    eax,DWORD PTR [ebp+eax*4+0x2c]
  4163bf:	jbe    0x41638d
  4163c1:	imul   edi,DWORD PTR [esi],0x2d2f4e6b
  4163c7:	ins    DWORD PTR es:[edi],dx
  4163c8:	test   DWORD PTR [ebx],esp
  4163ca:	leave  
  4163cb:	std    
  4163cc:	pop    ds
  4163cd:	sub    al,0xce
  4163cf:	xor    BYTE PTR [ecx+0x25],cl
  4163d2:	cmp    eax,0x262963b9
  4163d7:	sub    ah,al
  4163d9:	ja     0x416408
  4163db:	xchg   esp,eax
  4163dc:	adc    ah,BYTE PTR [edi]
  4163de:	or     al,0x23
  4163e0:	lea    esp,[ebx]
  4163e2:	repz (bad) 
  4163e4:	cmp    dh,al
  4163e6:	je     0x416447
  4163e8:	es xchg ebx,eax
  4163ea:	adc    ebx,edx
  4163ec:	call   DWORD PTR [esi-0x4a83fa5f]
  4163f2:	lods   al,BYTE PTR ds:[esi]
  4163f3:	jns    0x416415
  4163f5:	mov    edi,0xf763417e
  4163fa:	mov    edi,0x9c0b9e0e
  4163ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416400:	xchg   ebp,eax
  416401:	and    al,0x62
  416403:	sbb    ebp,DWORD PTR [edi+0x11]
  416406:	adc    BYTE PTR [esi+0xf3f1c89],dh
  41640c:	sbb    DWORD PTR [esi-0x788cedb2],ecx
  416412:	clc    
  416413:	add    al,0xfd
  416415:	push   cs
  416416:	pop    esi
  416417:	sub    ebp,DWORD PTR [eax+0x2606448c]
  41641d:	add    BYTE PTR [ecx+0x61698017],bl
  416423:	jb     0x4163fe
  416425:	fild   DWORD PTR [edi]
  416427:	pushf  
  416428:	ror    DWORD PTR [esi+ebp*1],cl
  41642b:	inc    ecx
  41642c:	popf   
  41642d:	mov    dl,0x43
  41642f:	pop    ds
  416430:	sar    DWORD PTR [ebx+ecx*4+0x1664511e],cl
  416437:	lea    ecx,[edx+0x17]
  41643a:	and    DWORD PTR [edi],eax
  41643c:	or     ebp,esi
  41643e:	cli    
  41643f:	push   esi
  416440:	mov    ch,BYTE PTR [ecx]
  416442:	cwde   
  416443:	icebp  
  416444:	add    edi,esp
  416446:	inc    eax
  416447:	clc    
  416448:	jns    0x4163d8
  41644a:	sub    dh,bl
  41644c:	stc    
  41644d:	cmp    DWORD PTR [edx+0x2d],eax
  416450:	cli    
  416451:	sub    dl,BYTE PTR [ecx+0x627c8ac3]
  416457:	mov    esp,0x20d2f4c3
  41645c:	retf   
  41645d:	mov    cl,0xf3
  41645f:	and    ebx,0x9a178ef2
  416465:	mov    bh,0xf4
  416467:	(bad)  
  416468:	lock call FWORD PTR [edx]
  41646b:	inc    edi
  41646c:	or     BYTE PTR [ecx],cl
  41646e:	test   BYTE PTR [ebx-0x7a910e2b],al
  416474:	xor    al,0xec
  416476:	jmp    0x4d6147b2
  41647b:	out    0x25,eax
  41647d:	push   es
  41647e:	nop
  41647f:	call   0x4fb0c95a
  416484:	addr16 jo 0x41640f
  416487:	out    0xd0,eax
  416489:	scas   eax,DWORD PTR es:[edi]
  41648a:	and    al,0x41
  41648c:	icebp  
  41648d:	adc    al,0xd6
  41648f:	test   DWORD PTR [ecx+0x21e766dc],0x35d11836
  416499:	jbe    0x41646c
  41649b:	jb     0x416432
  41649d:	and    DWORD PTR [ebx],edx
  41649f:	sti    
  4164a0:	pusha  
  4164a1:	mov    esi,0xfae40db1
  4164a6:	add    al,0x27
  4164a8:	inc    edi
  4164a9:	adc    BYTE PTR [ecx-0x36332537],dl
  4164af:	sub    edx,DWORD PTR [ecx]
  4164b1:	dec    edx
  4164b2:	pop    ebp
  4164b3:	jp     0x41645c
  4164b5:	pusha  
  4164b6:	into   
  4164b7:	or     esp,ebx
  4164b9:	lea    esp,[edi]
  4164bb:	fprem1 
  4164bd:	xor    ebp,eax
  4164bf:	ja     0x41651f
  4164c1:	into   
  4164c2:	and    ch,BYTE PTR [ebx]
  4164c4:	aaa    
  4164c5:	adc    DWORD PTR [ecx-0x37],eax
  4164c8:	(bad)  
  4164c9:	push   0x1da72dc0
  4164ce:	fdivr  QWORD PTR [edx]
  4164d0:	jo     0x41649c
  4164d2:	jo     0x416472
  4164d4:	xchg   ecx,eax
  4164d5:	repnz push cs
  4164d7:	(bad)  
  4164d8:	sub    al,BYTE PTR ss:[eax]
  4164db:	fild   WORD PTR [esi+0x66f8a688]
  4164e1:	xchg   ebx,eax
  4164e2:	ds mov ecx,0x7b03b734
  4164e8:	xchg   BYTE PTR [edx],ah
  4164ea:	loop   0x4164eb
  4164ec:	sbb    DWORD PTR [esi+0x4f4eb5c5],esi
  4164f2:	xor    dh,BYTE PTR [eax+0x6b2eaec1]
  4164f8:	mov    dl,BYTE PTR [eax+edi*4+0x27]
  4164fc:	mov    ds:0x2cb14f86,al
  416501:	adc    bh,BYTE PTR [edx-0x53ac8936]
  416507:	xchg   edx,eax
  416508:	jo     0x416559
  41650a:	in     al,dx
  41650b:	jae    0x416491
  41650d:	sub    eax,0xcd3bb898
  416512:	rcl    DWORD PTR [esi],0xc6
  416515:	mov    BYTE PTR [esp+ebp*4],dh
  416518:	cmp    DWORD PTR [ebx+0x198c2608],ebx
  41651e:	push   esp
  41651f:	rcl    BYTE PTR [ebp-0x5eda5d96],0xe0
  416526:	push   es
  416527:	jmp    0x7442f860
  41652c:	mov    DWORD PTR [esi+0x29],eax
  41652f:	jbe    0x4164b5
  416531:	inc    ecx
  416532:	call   0xdc05:0xf2238322
  416539:	xchg   edx,eax
  41653a:	pop    edi
  41653b:	xchg   edx,eax
  41653c:	gs cmp al,0x1f
  416540:	loope  0x4164fe
  416542:	or     eax,0x818a85af
  416547:	stc    
  416548:	outs   dx,BYTE PTR ds:[esi]
  416549:	test   DWORD PTR [ebx],edi
  41654b:	test   BYTE PTR [eax],dh
  41654d:	or     BYTE PTR ds:0xcf09af2f,0xf3
  416554:	dec    edx
  416555:	mov    BYTE PTR [esi],bh
  416557:	test   DWORD PTR ds:0x3de80c18,ebx
  41655d:	je     0x41656d
  41655f:	sub    al,0xca
  416561:	adc    DWORD PTR [esp-0x726686d2],edx
  416568:	mov    ebp,ebp
  41656a:	cmp    al,0x9a
  41656c:	in     al,dx
  41656d:	mov    edx,0x82907ea0
  416572:	aad    0xe9
  416574:	dec    edi
  416575:	fmul   QWORD PTR [ebp+0x2b836d6b]
  41657b:	lock dec ecx
  41657d:	out    dx,eax
  41657e:	sub    eax,0x847d9d98
  416583:	ins    BYTE PTR es:[edi],dx
  416584:	push   edx
  416585:	out    0xd,al
  416587:	and    DWORD PTR [edi+0x742c6f4a],eax
  41658d:	sbb    al,0x8c
  41658f:	addr16 jnp 0x416516
  416592:	in     eax,0x67
  416594:	mov    ds:0x8859ed2e,al
  416599:	lea    esi,[edx]
  41659b:	bound  ebx,QWORD PTR ds:0x805a0760
  4165a1:	sti    
  4165a2:	or     ch,dl
  4165a4:	popa   
  4165a5:	push   edx
  4165a6:	xchg   edi,eax
  4165a7:	inc    ecx
  4165a8:	xchg   dh,bh
  4165aa:	sbb    edi,edx
  4165ac:	dec    edx
  4165ad:	mov    edi,0x666a7d26
  4165b2:	popa   
  4165b3:	test   DWORD PTR [edi],ebx
  4165b5:	pop    esi
  4165b6:	sbb    eax,0x15928c58
  4165bb:	arpl   WORD PTR [esp+ebx*4],bx
  4165be:	test   BYTE PTR [ecx+0x22526b5e],0xf4
  4165c5:	loopne 0x4165cf
  4165c7:	in     al,dx
  4165c8:	pop    ss
  4165c9:	add    BYTE PTR [ebx+0x67],0xd9
  4165cd:	and    BYTE PTR [eax],ah
  4165cf:	inc    esi
  4165d0:	and    BYTE PTR [bx+di-0x6d],al
  4165d4:	push   edx
  4165d5:	(bad)  
  4165d6:	int3   
  4165d7:	push   0x4bded17f
  4165dc:	xchg   ebx,eax
  4165dd:	iret   
  4165de:	mov    edx,0xc1e427ef
  4165e3:	inc    ebx
  4165e4:	xor    DWORD PTR [eax+edx*1+0x23],edx
  4165e8:	int    0xea
  4165ea:	popf   
  4165eb:	test   edx,ecx
  4165ed:	dec    ecx
  4165ee:	leave  
  4165ef:	ss and esi,ebx
  4165f2:	sbb    DWORD PTR [edx],eax
  4165f4:	push   cs
  4165f5:	test   DWORD PTR ds:[eax+eax*2+0x20],ecx
  4165fa:	push   0x352cc6b3
  4165ff:	imul   ebp,DWORD PTR [esi+0x26],0x300ceed3
  416606:	xchg   DWORD PTR [edi+0x35],ecx
  416609:	and    bh,BYTE PTR [eax]
  41660b:	mov    ch,0xca
  41660d:	sub    DWORD PTR [ecx+edx*4],esi
  416610:	das    
  416611:	(bad)  
  416612:	scas   eax,DWORD PTR es:[edi]
  416613:	or     dh,BYTE PTR [ecx+0x2b4c4cbf]
  416619:	cmp    BYTE PTR [ebx+0x2424844f],cl
  41661f:	sbb    DWORD PTR [edx],ebp
  416621:	mov    al,0x84
  416623:	push   ds
  416624:	jnp    0x416683
  416626:	popa   
  416627:	and    DWORD PTR [esi],ebx
  416629:	and    al,BYTE PTR [esi]
  41662b:	ret    0xe347
  41662e:	jbe    0x4165b4
  416630:	loope  0x416650
  416632:	xchg   ecx,eax
  416633:	ffree  st(6)
  416635:	sub    BYTE PTR [eax],bl
  416637:	inc    esi
  416638:	retf   0x651f
  41663b:	sub    DWORD PTR [esi],esp
  41663d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41663e:	sbb    eax,0x137030d4
  416643:	ja     0x4165d6
  416645:	test   al,0x79
  416647:	xchg   ebp,eax
  416648:	test   al,0x19
  41664a:	sub    cl,cl
  41664c:	sub    BYTE PTR [esi-0x5a],bl
  41664f:	jmp    0x1c18:0x2d8d4c87
  416656:	add    DWORD PTR [esi-0x1d18ee55],edi
  41665c:	mov    WORD PTR [esi+0x1],es
  41665f:	and    edx,DWORD PTR [edi+edx*1]
  416662:	xor    eax,0x919e6d1
  416667:	mov    bh,0xc7
  416669:	sbb    eax,0xf2c5fb0
  41666e:	pop    ds
  41666f:	or     eax,DWORD PTR [edx]
  416671:	add    eax,DWORD PTR [ecx-0x7d25ff09]
  416677:	js     0x416615
  416679:	std    
  41667a:	out    dx,eax
  41667b:	add    eax,edx
  41667d:	cmp    al,0x84
  41667f:	mov    ah,0x8d
  416681:	dec    esi
  416682:	adc    al,0xc3
  416684:	sbb    eax,ecx
  416686:	pushf  
  416687:	xor    ch,dh
  416689:	inc    BYTE PTR [ecx]
  41668b:	lock out 0xe,al
  41668e:	and    al,ah
  416690:	adc    cl,BYTE PTR [ecx-0x39]
  416693:	clc    
  416694:	(bad)  
  416695:	cs cli 
  416697:	mov    bh,0x4d
  416699:	test   eax,0x22b223ed
  41669e:	inc    ebp
  41669f:	jmp    0xea03:0x2019ef21
  4166a6:	push   ds
  4166a7:	lock or edi,DWORD PTR [ebp-0x78]
  4166ab:	(bad)  
  4166ac:	ds in  eax,0xaa
  4166af:	ficom  WORD PTR [ebx+ecx*4-0x5b229697]
  4166b6:	test   bl,dh
  4166b8:	mov    cl,0xb3
  4166ba:	aam    0x70
  4166bc:	inc    edx
  4166bd:	outs   dx,DWORD PTR ds:[esi]
  4166be:	in     eax,dx
  4166bf:	sahf   
  4166c0:	cmp    eax,0x1990e54b
  4166c5:	push   ss
  4166c6:	adc    ebp,esp
  4166c8:	jmp    0x4166f8
  4166ca:	nop
  4166cb:	pop    ss
  4166cc:	(bad)  
  4166cd:	imul   edi,DWORD PTR [ebx-0x16],0x20855d4e
  4166d4:	pop    ds
  4166d5:	gs arpl di,bx
  4166d8:	adc    bl,dl
  4166da:	push   edi
  4166db:	xor    BYTE PTR [edi],bh
  4166dd:	jecxz  0x41669c
  4166df:	inc    edx
  4166e0:	pop    es
  4166e1:	mov    BYTE PTR [eax+0xf1786df],dl
  4166e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166e8:	cmp    DWORD PTR ds:0x56f9bb02,ebx
  4166ee:	mov    esi,0x2d5494db
  4166f3:	xchg   ebp,eax
  4166f4:	popa   
  4166f5:	mov    BYTE PTR [ecx],dh
  4166f7:	and    DWORD PTR [ebp-0x12],ecx
  4166fa:	push   es
  4166fb:	fisubr DWORD PTR [esi-0x40f3f9b7]
  416701:	test   DWORD PTR [ecx+0xc],esp
  416704:	mov    edx,0xd65890e8
  416709:	lods   al,BYTE PTR ds:[esi]
  41670a:	add    eax,0x8d200b28
  41670f:	mov    WORD PTR [eax+ebx*4+0xd],?
  416713:	aas    
  416714:	cmp    BYTE PTR [edx],0xd7
  416717:	pop    ecx
  416718:	xor    esp,DWORD PTR [ecx-0x3a1defb0]
  41671e:	ror    DWORD PTR [eax+ecx*1-0x53],1
  416722:	sub    esp,DWORD PTR [edx]
  416724:	mov    ah,0xf7
  416726:	inc    ecx
  416727:	sub    al,0x6
  416729:	int    0x2
  41672b:	mov    bl,BYTE PTR [edx+esi*1]
  41672e:	dec    edx
  41672f:	pop    ebp
  416730:	xchg   ecx,eax
  416731:	sbb    dh,BYTE PTR [eax-0x439d7e10]
  416737:	std    
  416738:	dec    edi
  416739:	xchg   edx,eax
  41673a:	dec    eax
  41673b:	and    al,bh
  41673d:	loope  0x4166f1
  41673f:	pushf  
  416740:	lods   al,BYTE PTR ds:[esi]
  416741:	fucomip st,st(4)
  416743:	adc    al,0x13
  416745:	popf   
  416746:	ins    BYTE PTR es:[edi],dx
  416747:	repnz cmp bl,BYTE PTR [eax+eiz*8]
  41674b:	mov    dh,0x77
  41674d:	dec    edi
  41674e:	adc    edi,DWORD PTR [esi-0x3c6ed4ac]
  416754:	sahf   
  416755:	lds    ebp,FWORD PTR [esi+0x16]
  416758:	shr    DWORD PTR [edx],0x72
  41675b:	add    dl,BYTE PTR [eax+0x47c9231b]
  416761:	inc    edx
  416762:	mov    ah,bh
  416764:	mov    eax,ds:0xc813b514
  416769:	sbb    BYTE PTR [edi],0x3d
  41676c:	inc    ecx
  41676d:	or     DWORD PTR [eax],0x2d
  416770:	rcr    BYTE PTR [esi],cl
  416772:	jno    0x41679c
  416774:	inc    esp
  416775:	and    DWORD PTR [edi+eax*8-0x33b77ef1],ebx
  41677c:	sub    BYTE PTR [ecx],bl
  41677e:	add    DWORD PTR [esi+0x7c],esp
  416781:	enter  0x4cdb,0xf6
  416785:	scas   al,BYTE PTR es:[edi]
  416786:	mov    WORD PTR es:[ecx+0x30bd4065],?
  41678d:	dec    ebx
  41678e:	aas    
  41678f:	or     DWORD PTR [edi+0x61],ebp
  416792:	out    dx,eax
  416793:	in     eax,0x2f
  416795:	xchg   edi,eax
  416796:	mov    bh,0x19
  416798:	test   DWORD PTR [esi+0x9c14180],edi
  41679e:	sub    al,0x87
  4167a0:	push   cs
  4167a1:	rol    BYTE PTR [ebp+0x24b640b2],0x4c
  4167a8:	or     dl,BYTE PTR [esi-0x7c]
  4167ab:	in     al,dx
  4167ac:	mov    eax,0x6b1e2a7c
  4167b1:	lahf   
  4167b2:	inc    esp
  4167b3:	mov    ebx,0x65a6b806
  4167b8:	xchg   ecx,eax
  4167b9:	mov    ah,bh
  4167bb:	setle  BYTE PTR [edi]
  4167be:	dec    ecx
  4167bf:	add    BYTE PTR [edi],ch
  4167c1:	xchg   al,dh
  4167c3:	xchg   edi,eax
  4167c4:	xchg   ebx,eax
  4167c5:	sub    BYTE PTR es:[bp-0x4385],bl
  4167cb:	xor    al,0xdb
  4167cd:	pop    ebx
  4167ce:	test   ebx,esp
  4167d0:	inc    edi
  4167d1:	sub    al,0x27
  4167d3:	xchg   edx,eax
  4167d4:	add    bl,BYTE PTR [edi+esi*4]
  4167d7:	xchg   esp,eax
  4167d8:	mov    WORD PTR [ebx],ds
  4167da:	call   0x839c533c
  4167df:	xor    DWORD PTR [edi+0x50ca540e],esp
  4167e5:	and    DWORD PTR [eax],edx
  4167e7:	mov    esi,0xe5591261
  4167ec:	xor    edi,DWORD PTR [ebx]
  4167ee:	sub    al,0xf9
  4167f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167f1:	push   ecx
  4167f2:	mov    ds:0x6b99152a,eax
  4167f7:	int    0x4d
  4167f9:	cmp    BYTE PTR cs:[edi],ch
  4167fc:	pop    ds
  4167fd:	lods   al,BYTE PTR ds:[esi]
  4167fe:	pop    ecx
  4167ff:	scas   eax,DWORD PTR es:[edi]
  416800:	cmp    edi,DWORD PTR [ecx-0x32]
  416803:	test   BYTE PTR [ecx+ebp*1],dh
  416806:	cdq    
  416807:	and    ebp,DWORD PTR [eax]
  416809:	dec    edx
  41680a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41680b:	sbb    eax,DWORD PTR [edi+edx*1-0x75120fe1]
  416812:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416813:	pop    ebp
  416814:	test   BYTE PTR [edx],ch
  416816:	sbb    DWORD PTR [edx],0xffffffa3
  416819:	add    eax,0x1ddc16e7
  41681e:	mov    dh,0xd
  416820:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416821:	mov    ecx,DWORD PTR [esi+0x40]
  416824:	mov    ebp,0x5cb63510
  416829:	add    BYTE PTR [edx+0x2d14508b],0x30
  416830:	mov    ebx,0xbad34475
  416835:	lods   al,BYTE PTR ds:[esi]
  416836:	pop    esp
  416837:	outs   dx,BYTE PTR cs:[si]
  41683a:	inc    esp
  41683b:	stos   DWORD PTR es:[edi],eax
  41683c:	jle    0x4167ca
  41683e:	daa    
  41683f:	inc    esi
  416840:	pop    esp
  416841:	and    dl,dh
  416843:	lock and DWORD PTR [ebx+0x4a54d110],esp
  41684a:	cmp    BYTE PTR [edi+0x209eb15],ch
  416850:	test   BYTE PTR [ebx-0x4],cl
  416853:	loope  0x416858
  416855:	pop    esi
  416856:	adc    eax,0xe8fb16f5
  41685b:	sbb    DWORD PTR [edx-0x6],0x14022d58
  416862:	jo     0x416871
  416864:	test   cl,bl
  416866:	push   cs
  416867:	aas    
  416868:	ficomp DWORD PTR [ecx]
  41686a:	fsub   st(5),st
  41686c:	or     eax,0xc1040622
  416871:	loopne 0x4168bd
  416873:	adc    eax,0xddca38bd
  416878:	dec    esp
  416879:	adc    DWORD PTR [eax+ecx*2],ebx
  41687c:	mov    ds:0x6a23293e,al
  416881:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416882:	sbb    BYTE PTR [ebp+0x669c8928],dl
  416888:	and    eax,0x18ad3876
  41688d:	xor    al,0xa
  41688f:	jge    0x416816
  416891:	dec    esi
  416892:	cmp    ebp,DWORD PTR [ecx+edi*2]
  416895:	xchg   ebx,eax
  416896:	xor    eax,0x48606288
  41689b:	and    edi,DWORD PTR [ecx-0x80]
  41689e:	dec    esi
  41689f:	dec    ecx
  4168a0:	sub    DWORD PTR [eax-0x62],ecx
  4168a3:	push   esp
  4168a4:	(bad)
  4168a8:	sub    al,0x3b
  4168aa:	sbb    al,0x5f
  4168ac:	add    ch,BYTE PTR [edi]
  4168ae:	inc    eax
  4168af:	xchg   ebx,eax
  4168b0:	push   0xffffff8e
  4168b2:	sbb    ah,BYTE PTR [ecx+0x64]
  4168b5:	sub    ebx,DWORD PTR [edi]
  4168b7:	adc    al,0x69
  4168b9:	add    al,0x4
  4168bb:	or     BYTE PTR [ebx+0x7a],0xc7
  4168bf:	sbb    al,0x67
  4168c1:	jge    0x4168ef
  4168c3:	out    0xdd,al
  4168c5:	add    al,0x88
  4168c7:	mov    edi,eax
  4168c9:	jecxz  0x41684f
  4168cb:	dec    edi
  4168cc:	sbb    DWORD PTR [edx],0x8a8bd2d0
  4168d2:	pop    esi
  4168d3:	loope  0x41692a
  4168d5:	adc    al,0x98
  4168d7:	sbb    dh,BYTE PTR [ebp-0x277d6cf4]
  4168dd:	mov    bh,0xa8
  4168df:	adc    ebx,DWORD PTR [ecx-0x48e257df]
  4168e5:	jno    0x41691c
  4168e7:	mov    ecx,0xd704ae10
  4168ec:	adc    edi,DWORD PTR [esi+0x40838e0d]
  4168f2:	mov    dh,0x22
  4168f4:	popa   
  4168f5:	nop
  4168f6:	mov    ecx,0xc9198db8
  4168fb:	or     DWORD PTR [ecx-0x80],ebx
  4168fe:	inc    ebp
  4168ff:	shl    DWORD PTR [eax],0x51
  416902:	xchg   esp,eax
  416903:	int    0x85
  416905:	xor    esp,DWORD PTR [edi-0x23]
  416908:	and    al,0x5e
  41690a:	mov    WORD PTR [esi-0x23],es
  41690d:	sub    bl,BYTE PTR cs:[edx+eiz*8-0x1393dd76]
  416915:	and    eax,0x25b01c0e
  41691a:	mov    cs,WORD PTR es:[ebx-0x6]
  41691e:	adc    dh,dh
  416920:	rol    DWORD PTR [edi-0x1c09ba09],1
  416926:	sbb    esi,edx
  416928:	add    eax,0x72d34dd9
  41692d:	cld    
  41692e:	or     BYTE PTR [edx],ah
  416930:	repnz adc eax,0xc388047a
  416936:	movups XMMWORD PTR [edx+0x1ea2c7de],xmm0
  41693d:	adc    esp,DWORD PTR [edi]
  41693f:	mov    al,ds:0x91121a19
  416944:	xchg   edx,eax
  416945:	mov    ah,0xa0
  416947:	adc    esp,DWORD PTR ds:0x4288960c
  41694d:	sub    edx,esp
  41694f:	xchg   ebx,eax
  416950:	pop    esp
  416951:	sbb    ah,BYTE PTR [eax]
  416953:	sbb    al,0x76
  416955:	rdtsc  
  416957:	test   al,0x3d
  416959:	dec    ebx
  41695a:	mov    ebp,DWORD PTR [edx+eiz*1]
  41695d:	adc    DWORD PTR [edx+eax*1+0x2e],ebp
  416961:	cmp    eax,0x3fcd6d19
  416966:	dec    esi
  416967:	dec    ebp
  416968:	rcl    DWORD PTR [eax],cl
  41696a:	dec    ebx
  41696b:	push   cs
  41696c:	dec    ecx
  41696d:	mov    ds:0x3e08431a,eax
  416972:	adc    DWORD PTR [ebp+0x41],0xffffffa6
  416976:	iret   
  416977:	inc    ebx
  416978:	outs   dx,BYTE PTR ds:[esi]
  416979:	push   esp
  41697a:	adc    DWORD PTR cs:0x8d190451,edx
  416981:	dec    esp
  416982:	pop    ecx
  416983:	sub    eax,0x3c639c03
  416988:	int3   
  416989:	pop    ds
  41698a:	pusha  
  41698b:	ins    DWORD PTR es:[edi],dx
  41698c:	and    ebp,esp
  41698e:	fimul  DWORD PTR [ebx]
  416990:	jl     0x416919
  416992:	cmc    
  416993:	loope  0x41691c
  416995:	dec    ebx
  416996:	je     0x4169c4
  416998:	aad    0x1e
  41699a:	pop    ebp
  41699b:	jns    0x41694c
  41699d:	(bad)  
  41699e:	loopne 0x4169b3
  4169a0:	or     BYTE PTR [ebx-0x7c],cl
  4169a3:	pop    ebx
  4169a4:	aas    
  4169a5:	popa   
  4169a6:	(bad)  
  4169a8:	(bad)
  4169ac:	mov    dh,0x50
  4169ae:	push   ss
  4169af:	mov    al,ds:0x30155617
  4169b4:	xchg   ecx,eax
  4169b5:	daa    
  4169b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169b7:	fwait
  4169b8:	nop
  4169b9:	push   ss
  4169ba:	xchg   edx,eax
  4169bb:	ret    
  4169bc:	stos   BYTE PTR es:[edi],al
  4169bd:	xor    eax,0xa532a84e
  4169c2:	ret    
  4169c3:	jge    0x41696d
  4169c5:	sbb    eax,0x49ee84a3
  4169ca:	sbb    eax,0x1d0182b5
  4169cf:	popf   
  4169d0:	mov    dh,0x17
  4169d2:	ja     0x41699c
  4169d4:	mov    bh,0x4
  4169d6:	push   esp
  4169d7:	mov    sp,0x3c29
  4169db:	je     0x4169f6
  4169dd:	enter  0x6a4d,0x6a
  4169e1:	mov    ss,WORD PTR [esi+edx*8+0x19]
  4169e5:	and    eax,0x18de9751
  4169ea:	cmp    eax,0x22e5321f
  4169ef:	xor    DWORD PTR [edx],edx
  4169f1:	pop    ecx
  4169f2:	out    0xb4,eax
  4169f4:	and    edi,DWORD PTR [edx+0x35]
  4169f7:	or     BYTE PTR [ebx],ch
  4169f9:	into   
  4169fa:	call   0xe34d3b17
  4169ff:	pushf  
  416a00:	xchg   ecx,eax
  416a01:	rol    dh,1
  416a03:	out    0xd2,al
  416a05:	xchg   esi,eax
  416a06:	ins    DWORD PTR es:[edi],dx
  416a07:	test   al,0x5a
  416a09:	push   ss
  416a0a:	inc    ecx
  416a0b:	inc    ecx
  416a0c:	pop    edx
  416a0d:	mov    cl,0x5e
  416a0f:	adc    al,bl
  416a11:	cmp    eax,0x1937796a
  416a16:	bound  edx,QWORD PTR [ebx]
  416a18:	xor    ch,ch
  416a1a:	(bad)  
  416a1b:	cmp    DWORD PTR [esi+0x22],ebp
  416a1e:	imul   esp,DWORD PTR [edi+0x60],0xa0387665
  416a25:	push   ds
  416a26:	adc    dh,BYTE PTR [edx]
  416a28:	ins    BYTE PTR es:[edi],dx
  416a29:	sbb    DWORD PTR [edx],ebp
  416a2b:	jnp    0x4169e0
  416a2d:	out    dx,al
  416a2e:	cdq    
  416a2f:	ja     0x416a8d
  416a31:	imul   ebx,DWORD PTR [eax],0x3a2a0dd1
  416a37:	popa   
  416a38:	lds    ebp,FWORD PTR [edi+0x62]
  416a3b:	jo     0x416a5a
  416a3d:	pusha  
  416a3e:	adc    al,0x3b
  416a40:	scas   al,BYTE PTR es:[edi]
  416a41:	(bad)  
  416a42:	(bad)  
  416a43:	fldenv [edi+0x69]
  416a46:	jnp    0x4169ed
  416a48:	loopne 0x416abd
  416a4a:	in     eax,0x4c
  416a4c:	adc    eax,0x372b1149
  416a51:	clc    
  416a52:	dec    ecx
  416a53:	jg     0x416a38
  416a55:	bound  ebp,QWORD PTR fs:[edi+0x21]
  416a59:	jno    0x416ac6
  416a5b:	adc    cl,BYTE PTR [eax+ecx*1-0x65]
  416a5f:	xor    al,0xad
  416a61:	cmp    DWORD PTR [ecx+0x3f18dfbe],edi
  416a67:	push   0x41
  416a69:	js     0x416abc
  416a6b:	and    al,0x79
  416a6d:	pop    esp
  416a6e:	jae    0x416ad0
  416a70:	pusha  
  416a71:	inc    esi
  416a72:	sub    al,0x67
  416a74:	jbe    0x416a95
  416a76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a77:	sbb    eax,0x25b73744
  416a7c:	fld    QWORD PTR [eax+esi*1]
  416a7f:	inc    edi
  416a80:	add    al,0x73
  416a82:	ins    BYTE PTR es:[edi],dx
  416a83:	jb     0x416af2
  416a85:	pop    ss
  416a86:	in     eax,0x17
  416a88:	pop    eax
  416a89:	aas    
  416a8a:	mov    cs:0x92b9656,al
  416a90:	push   ebx
  416a91:	imul   ebp,DWORD PTR [esi+0x77],0x46574538
  416a98:	retf   0x1db5
  416a9b:	cmp    BYTE PTR [edi],dl
  416a9d:	aam    0x66
  416a9f:	cmp    DWORD PTR [edx+edx*2+0x3a67d082],ebp
  416aa6:	ss dec ebx
  416aa8:	push   ds
  416aa9:	xlat   BYTE PTR ds:[ebx]
  416aaa:	xor    esp,eax
  416aac:	or     ebx,ecx
  416aae:	cmc    
  416aaf:	inc    esp
  416ab0:	push   0x1d
  416ab2:	pushf  
  416ab3:	push   ds
  416ab4:	lock ins DWORD PTR es:[edi],dx
  416ab6:	mov    al,ah
  416ab8:	add    ecx,DWORD PTR [ebp+0x67]
  416abb:	outs   dx,BYTE PTR ds:[esi]
  416abc:	pop    esi
  416abd:	dec    bl
  416abf:	mov    bh,0x2a
  416ac1:	test   dl,dh
  416ac3:	pushf  
  416ac4:	sbb    eax,0xd47252ae
  416ac9:	outs   dx,BYTE PTR ds:[esi]
  416aca:	popa   
  416acb:	jb     0x416b39
  416acd:	loop   0x416af2
  416acf:	addr16 (bad) 
  416ad1:	cmc    
  416ad2:	mov    eax,0xc1eaf735
  416ad7:	mov    edx,0x341d1e2b
  416adc:	jo     0x416b56
  416ade:	popf   
  416adf:	or     BYTE PTR [ecx],dh
  416ae1:	inc    eax
  416ae2:	call   0x1c1a:0x3e93593
  416ae9:	cmp    eax,0x486c5bc8
  416aee:	dec    esi
  416aef:	bound  esp,QWORD PTR [edi+0x1e]
  416af2:	dec    edx
  416af3:	jns    0x416b65
  416af5:	mov    ds:0x1d47e1b7,al
  416afa:	dec    edx
  416afb:	sbb    eax,0x1cf46196
  416b00:	sbb    DWORD PTR [ebx],edi
  416b02:	jg     0x416b68
  416b04:	xchg   ebx,eax
  416b05:	test   DWORD PTR [esi+0x66],ebx
  416b08:	bound  edx,QWORD PTR [ebp-0x6fcd39ea]
  416b0e:	sahf   
  416b0f:	mov    dh,BYTE PTR [esi]
  416b11:	pop    ebx
  416b12:	dec    edi
  416b13:	dec    edx
  416b14:	push   edx
  416b15:	mov    bh,0xa8
  416b17:	cmp    edx,DWORD PTR [ebx+esi*1]
  416b1a:	push   esp
  416b1b:	adc    BYTE PTR [edx],cl
  416b1d:	(bad)  
  416b1e:	daa    
  416b1f:	lods   al,BYTE PTR ds:[esi]
  416b20:	bound  ecx,QWORD PTR [ebp-0x12b59cc0]
  416b26:	lods   al,BYTE PTR ds:[esi]
  416b27:	out    dx,eax
  416b28:	adc    eax,ebp
  416b2a:	sbb    ecx,ebx
  416b2c:	cmp    esi,DWORD PTR [eax]
  416b2e:	add    DWORD PTR [edi],eax
  416b30:	inc    ecx
  416b31:	js     0x416baa
  416b33:	push   cs
  416b34:	adc    eax,0x73083fc8
  416b39:	jb     0x416b08
  416b3b:	ja     0x416af7
  416b3d:	test   eax,0x332fd84c
  416b42:	sbb    dl,BYTE PTR [esi+0x1b]
  416b45:	shl    BYTE PTR [ebx+edx*1+0x3a],0xfc
  416b4a:	xor    eax,0xc2b0584d
  416b4f:	add    al,0xd
  416b51:	sbb    DWORD PTR [ebp+0x36fc5a2e],ebx
  416b57:	adc    BYTE PTR [edx+0x4b2dfd5e],cl
  416b5d:	cwde   
  416b5e:	xor    BYTE PTR [ecx],dh
  416b60:	pop    ebx
  416b61:	pop    eax
  416b62:	mov    ecx,gs
  416b64:	push   es
  416b65:	cmp    al,0xae
  416b67:	push   eax
  416b68:	test   al,0x6b
  416b6a:	jp     0x416bb8
  416b6c:	imul   DWORD PTR [ebp+0x41f0a030]
  416b72:	(bad)  
  416b73:	and    ecx,DWORD PTR [ebp-0x31cb2bb2]
  416b79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b7a:	push   edx
  416b7b:	adc    eax,0x191cc42c
  416b80:	or     cl,BYTE PTR [ecx-0x4a7eb073]
  416b86:	mov    eax,0x81e9211e
  416b8b:	or     eax,0x9e45d8a
  416b90:	dec    edi
  416b91:	jne    0x416bb5
  416b93:	xchg   ecx,eax
  416b94:	or     esp,DWORD PTR [edi-0x24]
  416b97:	mov    BYTE PTR [esi+0x1f89517b],0x45
  416b9e:	adc    eax,0x4f1337d5
  416ba3:	sub    esp,DWORD PTR [eax]
  416ba5:	mov    bl,BYTE PTR [eax]
  416ba7:	cmp    al,0x8f
  416ba9:	jno    0x416bf5
  416bab:	sub    BYTE PTR [ecx],ah
  416bad:	jp     0x416bc6
  416baf:	daa    
  416bb0:	or     eax,0x16568d7c
  416bb5:	punpcklbw mm0,DWORD PTR [edx+0x672b1844]
  416bbc:	sbb    al,BYTE PTR [ecx+ecx*4]
  416bbf:	imul   eax,DWORD PTR [ebx-0x1],0x226f2cdb
  416bc6:	cmc    
  416bc7:	adc    cl,cl
  416bc9:	adc    eax,DWORD PTR [ebx-0x793cfa18]
  416bcf:	inc    ebp
  416bd0:	(bad)  [esi]
  416bd2:	mov    bl,0x1c
  416bd4:	ficomp WORD PTR [ebp-0x753de41f]
  416bda:	mov    ah,0x48
  416bdc:	les    esp,FWORD PTR [edi]
  416bde:	mov    bl,0x19
  416be0:	mov    cl,0xa
  416be2:	scas   eax,DWORD PTR es:[edi]
  416be3:	or     BYTE PTR [edi-0x5c],0x23
  416be7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416be8:	sbb    eax,0x4ca186a9
  416bed:	pushf  
  416bee:	and    BYTE PTR [edx-0x6af77eee],ah
  416bf4:	mov    cs,WORD PTR [ebp+eax*4+0x2c]
  416bf8:	test   DWORD PTR ds:0x45898f7d,ebx
  416bfe:	jne    0x416c26
  416c00:	jge    0x416c1e
  416c02:	push   0xb
  416c04:	jne    0x416b92
  416c06:	dec    esi
  416c07:	push   edi
  416c08:	and    eax,0x845a1f75
  416c0d:	jb     0x416c55
  416c0f:	dec    edi
  416c10:	sub    ah,BYTE PTR [esi+edx*1+0x3c]
  416c14:	punpckhbw mm1,QWORD PTR [ebp+0x6e283d45]
  416c1b:	adc    ch,BYTE PTR [edi]
  416c1d:	xchg   DWORD PTR [ebx-0x5e],edx
  416c20:	imul   edx,DWORD PTR [ecx+0x73dc1d59],0x5d
  416c27:	mov    edx,DWORD PTR [edi]
  416c29:	adc    esp,DWORD PTR [ecx]
  416c2b:	push   esi
  416c2c:	and    al,BYTE PTR [edx]
  416c2e:	cmovp  edx,DWORD PTR cs:[ecx+0x13]
  416c33:	(bad)  
  416c34:	xlat   BYTE PTR ds:[ebx]
  416c35:	sub    BYTE PTR [eax+0x14],cl
  416c38:	cmc    
  416c39:	push   edx
  416c3a:	das    
  416c3b:	mov    BYTE PTR [ebp+0x1ec55c40],bh
  416c41:	jecxz  0x416c2e
  416c43:	fnstcw WORD PTR [ebx+0x2385169d]
  416c49:	adc    DWORD PTR [esi+0x280ac9e5],ebp
  416c4f:	jmp    0x160ce219
  416c54:	je     0x416c90
  416c56:	in     al,0x1c
  416c58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c59:	pop    ds
  416c5a:	jnp    0x416c0f
  416c5c:	adc    eax,0x2831a9c7
  416c61:	mov    esp,0xf55cd816
  416c66:	cli    
  416c67:	push   0x307a2483
  416c6c:	cmp    bh,BYTE PTR [edx-0x4ee41de7]
  416c72:	mov    ds:0x5f27ec0c,eax
  416c77:	in     al,dx
  416c78:	lock pushf 
  416c7a:	dec    eax
  416c7b:	int3   
  416c7c:	(bad)  
  416c7e:	or     BYTE PTR [edi+esi*1],dl
  416c81:	add    eax,0x21e2cd07
  416c86:	addr16 mov edx,0x5b282c0d
  416c8c:	jmp    0x416c0e
  416c8e:	inc    ecx
  416c8f:	xor    eax,0xc1b23223
  416c94:	cmp    eax,0x63210815
  416c99:	push   ss
  416c9a:	fimul  DWORD PTR [eax]
  416c9c:	pushf  
  416c9d:	das    
  416c9e:	dec    esi
  416c9f:	sub    esp,ebx
  416ca1:	mov    WORD PTR [ecx+0x51],es
  416ca4:	das    
  416ca5:	or     ebp,DWORD PTR [edx]
  416ca7:	add    eax,0x6dd2938
  416cac:	pop    esi
  416cad:	test   eax,0xcf25b113
  416cb2:	jb     0x416cbf
  416cb4:	sbb    ebp,DWORD PTR [esp+edi*1]
  416cb7:	or     al,0xdb
  416cb9:	push   ds
  416cba:	add    DWORD PTR [edi+0x43e512a2],ebx
  416cc0:	fstp   TBYTE PTR [edx-0x30]
  416cc3:	pop    ss
  416cc4:	push   0xdac52f82
  416cc9:	inc    esi
  416cca:	repz jbe 0x416cac
  416ccd:	push   edi
  416cce:	cs ins DWORD PTR es:[edi],dx
  416cd0:	in     al,0x2c
  416cd2:	dec    edi
  416cd3:	fist   DWORD PTR [ebx]
  416cd5:	jl     0x416c5a
  416cd7:	scas   al,BYTE PTR es:[edi]
  416cd8:	data16 rol BYTE PTR [ebx],1
  416cdb:	shr    DWORD PTR [ebp+0xb],1
  416cde:	inc    edi
  416cdf:	js     0x416d0e
  416ce1:	(bad)  
  416ce2:	pushf  
  416ce3:	and    ebx,DWORD PTR [ebx+0x1d]
  416ce6:	lods   al,BYTE PTR ds:[esi]
  416ce7:	adc    al,0xea
  416ce9:	or     eax,0x8ed2d3f9
  416cee:	sbb    ebp,DWORD PTR [edi-0x3a]
  416cf1:	sbb    ch,dl
  416cf3:	mov    cs,WORD PTR [ebp+0x71]
  416cf6:	sub    eax,0x25ca76c9
  416cfb:	fcmovnu st,st(5)
  416cfd:	xlat   BYTE PTR ds:[ebx]
  416cfe:	adc    al,0xb8
  416d00:	(bad)  
  416d01:	push   esi
  416d02:	xchg   ecx,eax
  416d03:	or     bl,0xa7
  416d06:	add    eax,0xa5eb69f1
  416d0b:	cdq    
  416d0c:	imul   esp
  416d0e:	push   ds
  416d0f:	(bad)  
  416d10:	(bad)  
  416d11:	mov    al,0xaa
  416d13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d14:	cli    
  416d15:	fsub   DWORD PTR [esi+0x4ab2cda1]
  416d1b:	mov    al,0xcb
  416d1d:	jmp    0x416d4c
  416d1f:	sbb    BYTE PTR [edi],bl
  416d21:	push   eax
  416d22:	into   
  416d23:	(bad)  
  416d24:	pop    eax
  416d25:	test   DWORD PTR [esi+ebp*8+0x21],ecx
  416d29:	inc    eax
  416d2a:	scas   al,BYTE PTR es:[edi]
  416d2b:	xor    BYTE PTR [eax],ah
  416d2d:	imul   esp,DWORD PTR [eax],0xfffffff6
  416d30:	fistp  QWORD PTR [edi+esi*4+0x51]
  416d34:	push   esi
  416d35:	fdivr  st,st(6)
  416d37:	unpcklps xmm5,XMMWORD PTR [esi-0x74e18954]
  416d3e:	mov    edx,0x4a8d2401
  416d43:	lods   al,BYTE PTR ds:[esi]
  416d44:	(bad)
  416d47:	mov    eax,ds:0x2b25b5cd
  416d4c:	pop    ecx
  416d4d:	std    
  416d4e:	or     ecx,eax
  416d50:	nop
  416d51:	and    DWORD PTR [eax+0xcd4171c],ebp
  416d57:	lods   eax,DWORD PTR ds:[esi]
  416d58:	or     ah,BYTE PTR [esi+ebp*4+0x66]
  416d5c:	pop    ds
  416d5d:	es das 
  416d5f:	imul   ebp,DWORD PTR [eax-0x62df6bcf],0x11632f60
  416d69:	jl     0x416d12
  416d6b:	push   ebp
  416d6c:	neg    DWORD PTR [ebp+0x4dd2d08c]
  416d72:	stc    
  416d73:	popa   
  416d74:	dec    ecx
  416d75:	mov    BYTE PTR [eax],dh
  416d77:	mov    al,ds:0x884d8f59
  416d7c:	jne    0x416d6d
  416d7e:	push   ecx
  416d7f:	or     esp,DWORD PTR [eax]
  416d81:	mov    dh,0x16
  416d83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d84:	fsubr  DWORD PTR [eax]
  416d86:	xchg   esp,eax
  416d87:	cdq    
  416d88:	test   BYTE PTR [edi+0x328c21d1],al
  416d8e:	dec    ebp
  416d8f:	inc    eax
  416d90:	xor    eax,0x7861916
  416d95:	mov    eax,ss
  416d97:	pop    ebx
  416d98:	push   ecx
  416d99:	mov    al,0x5a
  416d9b:	loope  0x416e17
  416d9d:	fild   QWORD PTR [eax-0x592791f0]
  416da3:	je     0x416da9
  416da5:	mov    BYTE PTR [edx+0x2cef0375],dl
  416dab:	pop    edi
  416dac:	xchg   edx,eax
  416dad:	dec    esp
  416dae:	cmp    DWORD PTR [esp+edi*4+0x1c88d077],ecx
  416db5:	test   al,0x99
  416db7:	not    BYTE PTR [ecx+eax*4-0x51]
  416dbb:	inc    edi
  416dbc:	gs pop ecx
  416dbe:	test   DWORD PTR ds:0xa540d5b7,ebp
  416dc4:	push   cs
  416dc5:	push   ss
  416dc6:	(bad)  
  416dc7:	xchg   ebp,eax
  416dc8:	lahf   
  416dc9:	xor    DWORD PTR [ebx+eax*4+0x7105067],0x51
  416dd1:	adc    DWORD PTR [ecx-0x2d5ebb05],eax
  416dd7:	inc    edi
  416dd8:	aad    0x72
  416dda:	test   al,0xc7
  416ddc:	push   eax
  416ddd:	pop    esi
  416dde:	retf   
  416ddf:	jo     0x416d71
  416de1:	jp     0x416d84
  416de3:	retf   
  416de4:	repnz rcl bh,0xf4
  416de8:	(bad)  
  416de9:	fldcw  WORD PTR [esi+ebp*4]
  416dec:	fcmovnb st,st(5)
  416dee:	or     edi,DWORD PTR [eax-0x4e05548]
  416df4:	xor    bh,BYTE PTR [ebx-0x6b62e29f]
  416dfa:	(bad)  
  416dfb:	test   BYTE PTR [eax],0xbf
  416dfe:	inc    edx
  416dff:	ror    DWORD PTR [eax+0x2ee63176],1
  416e05:	out    0x1d,al
  416e07:	jns    0x416e06
  416e09:	jns    0x416e71
  416e0b:	retf   0x5ed8
  416e0e:	push   eax
  416e0f:	test   BYTE PTR [edx-0x76],ah
  416e12:	add    al,BYTE PTR ds:0x2fcc0065
  416e18:	fstp   DWORD PTR [eax]
  416e1a:	push   esp
  416e1b:	pop    ss
  416e1c:	test   eax,0x1b401b4
  416e21:	push   ds
  416e22:	jnp    0x416e71
  416e24:	mov    fs,WORD PTR [edx]
  416e26:	fucom  st(7)
  416e28:	lea    esi,[edi]
  416e2a:	dec    edx
  416e2b:	ret    0xd51c
  416e2e:	aam    0xba
  416e30:	jne    0x416e44
  416e32:	mov    dl,0xf8
  416e34:	shl    BYTE PTR [ebx+0x6d],cl
  416e37:	and    eax,0xd9f7025c
  416e3c:	imul   edx,DWORD PTR [edx+0x5f],0x25df0e73
  416e43:	dec    ebx
  416e44:	push   0xd3ccaf1c
  416e49:	jbe    0x416eaf
  416e4b:	ficomp WORD PTR [eax+ecx*4]
  416e4e:	mov    dh,0xd4
  416e50:	and    DWORD PTR [ebp+0x29],esp
  416e53:	popa   
  416e54:	test   BYTE PTR [ebx],dh
  416e56:	pop    es
  416e57:	out    dx,al
  416e58:	jae    0x416eb3
  416e5a:	shl    DWORD PTR [edi],1
  416e5c:	je     0x416edd
  416e5e:	dec    edi
  416e5f:	xlat   BYTE PTR ds:[ebx]
  416e60:	xchg   ebp,eax
  416e61:	sbb    bl,0x87
  416e64:	inc    ebx
  416e65:	rol    DWORD PTR [esi-0x62],cl
  416e68:	push   esp
  416e69:	push   ebx
  416e6a:	aad    0x8c
  416e6c:	popa   
  416e6d:	scas   al,BYTE PTR es:[di]
  416e6f:	sbb    DWORD PTR [edi+0x20074ae6],eax
  416e75:	sbb    al,0x5b
  416e77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e78:	sbb    DWORD PTR [ecx+eiz*8-0x576efdcb],ebx
  416e7f:	xor    al,0x4a
  416e81:	push   esi
  416e82:	sub    esp,DWORD PTR [eax-0x6febd957]
  416e88:	stos   BYTE PTR es:[edi],al
  416e89:	push   ebx
  416e8a:	cs sbb al,0xaf
  416e8d:	mov    ebp,0x411989ea
  416e92:	call   0xb560c9b0
  416e97:	les    eax,FWORD PTR ds:0x3b49b01c
  416e9d:	and    al,0x81
  416e9f:	js     0x416e6c
  416ea1:	and    dl,bh
  416ea3:	fldenv [ebx]
  416ea5:	add    DWORD PTR [eax],0xf1f5d0f6
  416eab:	gs out 0xd4,al
  416eae:	enter  0x923e,0xda
  416eb2:	xor    al,BYTE PTR [ebx-0x29dde9ad]
  416eb8:	fild   WORD PTR [ebx]
  416eba:	call   0x7255ea95
  416ebf:	rcr    cl,cl
  416ec1:	and    DWORD PTR [ecx],0xffffffb8
  416ec4:	xlat   BYTE PTR ds:[ebx]
  416ec5:	mov    cl,0x2f
  416ec7:	mov    al,ds:0x57b5bd11
  416ecc:	test   eax,0x96b14414
  416ed1:	or     eax,0x9de2c322
  416ed6:	leave  
  416ed7:	or     al,0xe7
  416ed9:	push   0x22
  416edb:	cmp    eax,0xbb47d1c3
  416ee0:	out    dx,eax
  416ee1:	inc    esp
  416ee2:	mov    DWORD PTR [ebp+0x65],edx
  416ee5:	mov    ecx,DWORD PTR [ebx]
  416ee7:	pop    esp
  416ee8:	popa   
  416ee9:	jnp    0x416f5d
  416eeb:	push   0x60
  416eed:	aad    0xfb
  416eef:	shl    BYTE PTR [edi-0x4b],1
  416ef2:	ja     0x416f6c
  416ef4:	inc    ebp
  416ef5:	sbb    DWORD PTR [edi],ecx
  416ef7:	push   ebx
  416ef8:	je     0x416f63
  416efa:	jns    0x416ea5
  416efc:	adc    DWORD PTR [ecx+0x2],esp
  416eff:	adc    eax,0x2fc443a
  416f04:	pusha  
  416f05:	sub    esp,DWORD PTR [edx+eiz*2+0x3b]
  416f09:	mov    ds:0x40150e8c,al
  416f0e:	ins    DWORD PTR es:[edi],dx
  416f0f:	xchg   BYTE PTR [eax-0x4a3d9491],dl
  416f15:	jnp    0x416f6b
  416f17:	cwde   
  416f18:	pop    esi
  416f19:	or     eax,0x425c4f46
  416f1e:	sar    ebx,0xe7
  416f21:	rcr    BYTE PTR [eax-0x2b],0x34
  416f25:	jb     0x416f75
  416f27:	jns    0x416f7c
  416f29:	add    dl,BYTE PTR [eax+0x6c]
  416f2c:	ja     0x416f8e
  416f2e:	add    al,0x9d
  416f30:	and    al,BYTE PTR [esi]
  416f32:	addr16 ja 0x416fa5
  416f35:	push   ebx
  416f36:	cmp    DWORD PTR [esi],esp
  416f38:	or     DWORD PTR [eax+0x74],ecx
  416f3b:	aad    0x5
  416f3d:	push   ds
  416f3e:	pop    edi
  416f3f:	imul   edi,DWORD PTR [edx+0x6e],0x65
  416f43:	push   0x4c1e9a2e
  416f48:	je     0x416fb6
  416f4a:	scas   al,BYTE PTR es:[edi]
  416f4b:	sahf   
  416f4c:	ins    BYTE PTR es:[edi],dx
  416f4d:	pusha  
  416f4e:	not    BYTE PTR [edi+0x76]
  416f51:	imul   ebp,DWORD PTR [eax+0x7ba1b31a],0x7fc46f73
  416f5b:	mov    cl,0xb9
  416f5d:	jge    0x416fb6
  416f5f:	jnp    0x416f6e
  416f61:	jbe    0x416fdb
  416f63:	gs addr16 inc ebp
  416f66:	imul   esp,DWORD PTR [edx+edx*8+0x7c],0x14
  416f6b:	sub    al,0x19
  416f6d:	xchg   edx,eax
  416f6e:	adc    cl,BYTE PTR [ebx+0x627860b7]
  416f74:	add    DWORD PTR [edx+0x64],edi
  416f77:	js     0x416ff2
  416f79:	aas    
  416f7a:	stc    
  416f7b:	pushf  
  416f7c:	xor    al,0x75
  416f7e:	popa   
  416f7f:	dec    ebx
  416f80:	push   esp
  416f81:	xor    DWORD PTR gs:[edx+ebp*2-0x20f6c098],0xd9987b2e
  416f8d:	pop    eax
  416f8e:	out    0x3b,al
  416f90:	aam    0x21
  416f92:	daa    
  416f93:	pop    edx
  416f94:	push   edi
  416f95:	xchg   ebx,eax
  416f96:	push   ebx
  416f97:	(bad)  
  416f98:	retf   
  416f99:	push   ebp
  416f9a:	inc    ebx
  416f9b:	adc    edx,DWORD PTR [eax+0x72]
  416f9e:	jae    0x416fb1
  416fa0:	ins    BYTE PTR es:[edi],dx
  416fa1:	adc    esi,DWORD PTR [esi]
  416fa3:	cdq    
  416fa4:	ss push esi
  416fa6:	mov    ds:0xd074e846,eax
  416fac:	call   0x4a3fd38e
  416fb1:	push   0x69
  416fb3:	jb     0x416f7b
  416fb5:	or     esi,DWORD PTR [eax+0x2b2e2e81]
  416fbb:	adc    ecx,DWORD PTR ds:0x6d512cf3
  416fc1:	cmp    ebp,DWORD PTR [ebx+0x64]
  416fc4:	shr    DWORD PTR [ecx],cl
  416fc6:	repnz and BYTE PTR [ebp+0x45],dh
  416fca:	shl    BYTE PTR [ebx-0x13],cl
  416fcd:	pop    edi
  416fce:	inc    edx
  416fcf:	jge    0x41702a
  416fd1:	imul   esp,DWORD PTR [ecx+0x4436ad70],0x25
  416fd8:	inc    edi
  416fd9:	add    al,0x38
  416fdb:	push   ebp
  416fdc:	push   eax
  416fdd:	dec    edx
  416fde:	dec    esp
  416fdf:	inc    ecx
  416fe0:	inc    ebx
  416fe1:	fcom   QWORD PTR [eax-0x14]
  416fe4:	jg     0x41702c
  416fe6:	mov    eax,0x52367137
  416feb:	addr16 retf 
  416fed:	jns    0x416f9a
  416fef:	stos   DWORD PTR es:[edi],eax
  416ff0:	into   
  416ff1:	xchg   BYTE PTR [ecx+eax*2+0x413a2ce6],cl
  416ff8:	mov    bl,0x36
  416ffa:	rcr    DWORD PTR [ebp-0x41],cl
  416ffd:	daa    
  416ffe:	and    eax,0xe8fc4949
  417003:	ins    DWORD PTR es:[edi],dx
  417004:	sub    eax,0x2901a27e
  417009:	push   edx
  41700a:	lods   al,BYTE PTR ds:[esi]
  41700b:	cld    
  41700c:	add    BYTE PTR [eax-0x66],ah
  41700f:	pcmpgtw mm5,QWORD PTR ds:0xcf6ade6c
  417016:	fcomp  DWORD PTR [ecx]
  417018:	jg     0x417066
  41701a:	or     DWORD PTR [ebp+0x27],0x24
  41701e:	inc    ebx
  41701f:	scas   eax,DWORD PTR es:[edi]
  417020:	pop    ds
  417021:	loopne 0x416fc3
  417023:	dec    eax
  417024:	sub    al,0xbd
  417026:	adc    DWORD PTR [edx+0x1d40ed19],ebx
  41702c:	in     al,0xa9
  41702e:	mov    al,ds:0x2d776577
  417033:	dec    eax
  417034:	out    0x3e,al
  417036:	pop    ss
  417037:	jge    0x416fbc
  417039:	push   cs
  41703a:	data16 out 0x6,al
  41703d:	out    dx,al
  41703e:	popa   
  41703f:	pop    di
  417041:	mov    ebp,0xeee27d45
  417046:	mov    ebp,DWORD PTR [edi+0xd]
  417049:	mov    ds:0x454ffbf0,eax
  41704e:	mov    WORD PTR [esi+edx*1],gs
  417051:	ins    BYTE PTR es:[edi],dx
  417052:	inc    edi
  417053:	imul   esi,edx,0xddab672e
  417059:	xchg   cl,cl
  41705b:	inc    ecx
  41705c:	pop    edi
  41705d:	lea    eax,[edi-0x22a47d7]
  417063:	lds    edx,FWORD PTR [edi+0x1e]
  417066:	pop    ebp
  417067:	dec    edi
  417068:	mov    eax,DWORD PTR [ebx-0x37]
  41706b:	mov    DWORD PTR [ebp-0x53],eax
  41706e:	cs pushf 
  417070:	mov    eax,ds:0xf54db9fc
  417075:	fincstp 
  417077:	add    eax,0x8348a21c
  41707c:	dec    esi
  41707d:	aad    0x19
  41707f:	enter  0x8cdd,0xb5
  417083:	jl     0x4170e9
  417085:	fcom   DWORD PTR [ebp-0x3ab6450a]
  41708b:	pop    ss
  41708c:	xor    al,0x13
  41708e:	sub    eax,0xbf26b2a9
  417093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417094:	push   cs
  417095:	sti    
  417096:	inc    esp
  417097:	test   DWORD PTR [eax-0x3dde5271],ebp
  41709d:	add    al,0xaa
  41709f:	ret    0x21d9
  4170a2:	addr16 or ch,0xe0
  4170a6:	pusha  
  4170a7:	pop    ecx
  4170a8:	inc    eax
  4170a9:	push   0xffffff95
  4170ab:	and    al,0x4b
  4170ad:	fstp   QWORD PTR [eax]
  4170af:	mov    cl,0xd
  4170b1:	pop    ss
  4170b2:	enter  0xaf4a,0x15
  4170b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170b7:	sbb    al,bh
  4170b9:	loopne 0x4170c1
  4170bb:	or     al,0x3
  4170bd:	xchg   ebp,eax
  4170be:	pop    es
  4170bf:	(bad)  [esi-0x9]
  4170c2:	adc    dh,dh
  4170c4:	enter  0x63dc,0x3
  4170c8:	adc    DWORD PTR [ebp-0x167c1bee],esp
  4170ce:	cmp    DWORD PTR [esi],ecx
  4170d0:	xor    ch,dl
  4170d2:	fcom   DWORD PTR [esi]
  4170d4:	or     bh,ah
  4170d6:	sbb    dl,bl
  4170d8:	enter  0xec62,0xdc
  4170dc:	rcr    DWORD PTR [ebx],1
  4170de:	ret    0xc44e
  4170e1:	inc    eax
  4170e2:	addr16 sbb edx,edi
  4170e5:	frstor [ecx+eiz*8-0x4c]
  4170e9:	iret   
  4170ea:	or     ch,BYTE PTR [eax-0x68838b6]
  4170f0:	add    eax,0xc12ab34a
  4170f5:	dec    ebx
  4170f6:	mov    ds:0x5c7488e3,eax
  4170fb:	jns    0x417091
  4170fd:	test   eax,0x48dc295e
  417102:	push   es
  417103:	cs pop ss
  417105:	mov    ah,0x62
  417107:	or     edx,0x3d
  41710a:	ror    BYTE PTR [eax+ebp*8-0x14],cl
  41710e:	adc    dl,BYTE PTR [eax-0xfe9fd26]
  417114:	fimul  DWORD PTR [edx+0x1d72003e]
  41711a:	and    edi,edi
  41711c:	adc    al,0x6e
  41711e:	pop    es
  41711f:	sub    eax,0x23c52fd6
  417124:	enter  0xc13,0x26
  417128:	push   eax
  417129:	dec    ebx
  41712a:	mov    WORD PTR [ecx],ds
  41712c:	in     eax,0x2b
  41712e:	fbstp  TBYTE PTR [edi]
  417130:	add    DWORD PTR [ecx+ebp*2],edx
  417133:	xchg   esi,eax
  417134:	cmp    edx,ebp
  417136:	jmp    0xd5d7f639
  41713b:	aas    
  41713c:	dec    ecx
  41713d:	dec    ebp
  41713e:	(bad)  [ecx]
  417140:	and    eax,0xefd81414
  417145:	mov    DWORD PTR [ebp-0xbced08f],0xbc8c8596
  41714f:	adc    edi,DWORD PTR [ebp+0x4005e129]
  417155:	retf   0xc542
  417158:	sub    eax,0xd91d7533
  41715d:	(bad)  
  41715e:	xchg   ebp,eax
  41715f:	in     al,0x6f
  417161:	cmp    al,0xd8
  417163:	cmp    eax,0x8e68cee1
  417168:	push   ebp
  417169:	and    ecx,DWORD PTR [edx]
  41716b:	call   0xb7183a6d
  417170:	sbb    eax,0x28b3dd8c
  417175:	add    BYTE PTR ds:0x84c9de3a,0x1d
  41717c:	aaa    
  41717d:	test   al,0x4e
  41717f:	int    0x4c
  417181:	pop    esp
  417182:	mov    BYTE PTR [ebp-0x74b17abe],al
  417188:	pop    ds
  417189:	test   al,0xc2
  41718b:	mov    BYTE PTR [eax+0x35],bh
  41718e:	inc    eax
  41718f:	std    
  417190:	adc    DWORD PTR [esi+0x355c7b00],0x16361fca
  41719a:	dec    ebx
  41719b:	not    DWORD PTR [ebx+0x4dbfcecf]
  4171a1:	xlat   BYTE PTR ds:[ebx]
  4171a2:	call   0x70252970
  4171a7:	nop
  4171a8:	fs loopne 0x41719d
  4171ab:	sbb    al,bl
  4171ad:	mov    ah,0x4f
  4171af:	jns    0x417172
  4171b1:	pop    ss
  4171b2:	stos   BYTE PTR es:[edi],al
  4171b3:	inc    esi
  4171b4:	int3   
  4171b5:	cs sbb al,0xa4
  4171b8:	nop
  4171b9:	in     eax,0x76
  4171bb:	inc    esp
  4171bc:	sbb    BYTE PTR ss:[esi+0x6508a2c6],al
  4171c3:	scas   eax,DWORD PTR es:[edi]
  4171c4:	add    eax,0x7aa577fe
  4171c9:	push   esi
  4171ca:	icebp  
  4171cb:	jmp    0xa520e9e7
  4171d0:	(bad)  
  4171d1:	xchg   edx,eax
  4171d2:	cs xchg esi,eax
  4171d4:	mov    al,ds:0x7881f514
  4171d9:	les    ecx,FWORD PTR [edi+ebx*2-0x385b4074]
  4171e0:	cld    
  4171e1:	jne    0x417225
  4171e3:	mov    bh,0xa9
  4171e5:	mov    edi,0x9e291409
  4171ea:	sbb    ebp,DWORD PTR [esi]
  4171ec:	inc    esp
  4171ed:	ins    BYTE PTR es:[edi],dx
  4171ee:	stos   DWORD PTR es:[edi],eax
  4171ef:	mov    BYTE PTR [eax-0x6f],bh
  4171f2:	inc    edx
  4171f3:	enter  0x2827,0xc0
  4171f7:	xchg   edi,eax
  4171f8:	mov    eax,ds:0x1c66c425
  4171fd:	lahf   
  4171fe:	mov    DWORD PTR [edx-0x6e5fd73a],ebp
  417204:	add    bl,BYTE PTR [esp+ebx*8+0x6164b29e]
  41720b:	ret    0x6e37
  41720e:	xlat   BYTE PTR ds:[ebx]
  41720f:	sub    BYTE PTR [edx],0x5e
  417212:	ret    0x2b2b
  417215:	inc    ecx
  417216:	je     0x417277
  417218:	dec    eax
  417219:	dec    ebx
  41721a:	scas   al,BYTE PTR es:[edi]
  41721b:	adc    bl,al
  41721d:	adc    dl,BYTE PTR [ebp-0x75]
  417220:	ins    DWORD PTR es:[edi],dx
  417221:	ret    
  417222:	in     eax,dx
  417223:	pop    ss
  417224:	mov    ebp,0x1e315cfa
  417229:	sar    DWORD PTR [eax-0x7bec770b],1
  41722f:	cmc    
  417230:	daa    
  417231:	push   ebx
  417232:	push   ss
  417233:	add    ah,cl
  417235:	or     bl,BYTE PTR [ebx]
  417237:	xchg   esp,eax
  417238:	loop   0x41726d
  41723a:	sub    DWORD PTR [eiz*2-0x3204fc09],0xcef5d235
  417245:	aas    
  417246:	call   0xe43dfd12
  41724b:	push   ebp
  41724c:	int3   
  41724d:	(bad)  
  41724e:	adc    dh,0xc1
  417251:	fstp   DWORD PTR es:[esi+0x6a7b434c]
  417258:	ror    DWORD PTR [ebp+0x3],1
  41725b:	inc    ecx
  41725c:	je     0x4172be
  41725e:	mov    ebp,0x2164b2b
  417263:	and    ah,BYTE PTR fs:[esi-0x35870ee1]
  41726a:	lods   eax,DWORD PTR ds:[esi]
  41726b:	jno    0x417280
  41726d:	mov    ah,0x0
  41726f:	ja     0x417285
  417271:	or     cl,BYTE PTR [ebp+0x221c2bb8]
  417277:	jp     0x417287
  417279:	in     al,dx
  41727a:	ffree  st(4)
  41727c:	xchg   ecx,eax
  41727d:	outs   dx,DWORD PTR cs:[esi]
  41727f:	imul   ebp,DWORD PTR [ebx+0x57],0x2e
  417283:	or     eax,0x62563f7e
  417288:	nop
  417289:	pusha  
  41728a:	jo     0x417228
  41728c:	ins    DWORD PTR es:[edi],dx
  41728d:	mov    dl,0x21
  41728f:	ja     0x4172c9
  417291:	std    
  417292:	push   cs
  417293:	xchg   esi,eax
  417294:	fisttp WORD PTR [edi-0x4fc1bcda]
  41729a:	sub    DWORD PTR [ecx],esi
  41729c:	or     eax,0xf06f6868
  4172a1:	aaa    
  4172a2:	push   ecx
  4172a3:	xchg   bl,ch
  4172a5:	sub    eax,0x4d8d7648
  4172aa:	fnsave [ebx]
  4172ac:	push   edx
  4172ad:	leave  
  4172ae:	or     cl,BYTE PTR [esi-0x2c]
  4172b1:	(bad)  
  4172b3:	lds    eax,FWORD PTR [ecx-0x3add2242]
  4172b9:	das    
  4172ba:	xchg   edx,eax
  4172bb:	fs (bad) 
  4172bd:	out    dx,al
  4172be:	ror    ebp,1
  4172c0:	mov    BYTE PTR [edi+eax*2],bl
  4172c3:	lds    ecx,FWORD PTR [edi-0x36dc2275]
  4172c9:	xchg   esp,eax
  4172ca:	repz inc edi
  4172cc:	cmp    dh,BYTE PTR [edi+0x47]
  4172cf:	stos   DWORD PTR es:[edi],eax
  4172d0:	test   DWORD PTR ds:[edx-0x25cc50f4],ecx
  4172d7:	xor    BYTE PTR [ecx-0x5e9e8d52],0x88
  4172de:	pop    ebx
  4172df:	adc    eax,esi
  4172e1:	data16 sbb bl,cl
  4172e4:	int3   
  4172e5:	adc    cl,0x38
  4172e8:	inc    esi
  4172e9:	mov    bh,0x2c
  4172eb:	jno    0x417308
  4172ed:	int3   
  4172ee:	scas   eax,DWORD PTR es:[edi]
  4172ef:	and    bl,bh
  4172f1:	iret   
  4172f2:	ficom  WORD PTR [esi]
  4172f4:	dec    edi
  4172f5:	lods   al,BYTE PTR ds:[esi]
  4172f6:	int    0x41
  4172f8:	(bad)  
  4172f9:	pop    edi
  4172fa:	add    dh,dl
  4172fc:	js     0x417293
  4172fe:	(bad)  
  4172ff:	and    al,0xa6
  417301:	and    DWORD PTR [esi+edi*8],0x22
  417305:	adc    eax,DWORD PTR [edx]
  417307:	and    esi,DWORD PTR [edi-0x40]
  41730a:	sbb    al,bh
  41730c:	nop
  41730d:	push   ebp
  41730e:	shr    BYTE PTR [ebx],1
  417310:	sbb    BYTE PTR [edx],dl
  417312:	pop    esi
  417313:	push   esp
  417314:	fcom   QWORD PTR [ecx-0x71]
  417317:	dec    esp
  417318:	in     al,dx
  417319:	and    al,0x46
  41731b:	mov    edi,0xfb89d21a
  417320:	(bad)  
  417322:	sub    bh,BYTE PTR [ebx]
  417324:	pop    ebp
  417325:	stos   DWORD PTR es:[edi],eax
  417326:	and    edx,ecx
  417328:	mov    WORD PTR [ebx+0x1],ss
  41732b:	nop
  41732c:	adc    esi,DWORD PTR [edi+0x45ed5d85]
  417332:	mov    eax,ds:0x3403b524
  417337:	jae    0x4172c8
  417339:	rcr    edx,0xd5
  41733c:	inc    esp
  41733d:	pop    eax
  41733e:	sub    dl,cl
  417340:	sub    DWORD PTR [ecx],0x76
  417343:	push   ss
  417344:	sbb    bl,BYTE PTR [eax]
  417346:	add    DWORD PTR [edi-0x52],esi
  417349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41734a:	ins    DWORD PTR es:[edi],dx
  41734b:	mov    ecx,0xeaa54b02
  417350:	add    DWORD PTR [ebx],ebp
  417352:	aas    
  417353:	data16 and al,0x20
  417356:	stos   DWORD PTR es:[edi],eax
  417357:	dec    edi
  417358:	xor    ecx,edi
  41735a:	and    al,0x7d
  41735c:	sub    dh,al
  41735e:	sub    edi,ebp
  417360:	pusha  
  417361:	add    al,0x20
  417363:	push   es
  417364:	imul   eax
  417366:	dec    esi
  417367:	cdq    
  417368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417369:	sub    al,0x81
  41736b:	ja     0x4173b0
  41736d:	push   edi
  41736e:	aas    
  41736f:	xor    BYTE PTR [ebp+0x7e],0xae
  417373:	and    ch,ch
  417375:	cli    
  417376:	aas    
  417377:	mov    ch,0x6f
  417379:	imul   ebx,DWORD PTR [ebp+0x15a1352b],0x84600914
  417383:	out    dx,eax
  417384:	int    0x2b
  417386:	data16 mov ds:0x5109fbdb,al
  41738c:	mov    BYTE PTR [edi+0x217783c],dh
  417392:	sub    BYTE PTR ds:0xa610ce1f,0x81
  417399:	or     cl,ah
  41739b:	fild   DWORD PTR [ecx+0x17c04eef]
  4173a1:	in     al,dx
  4173a2:	vmovhpd xmm3,xmm4,xmm7
  4173a6:	push   ss
  4173a7:	push   edx
  4173a8:	xor    ebx,ecx
  4173aa:	push   esp
  4173ab:	int    0x8e
  4173ad:	or     ch,0xc3
  4173b0:	mov    esi,0xc1d7eb98
  4173b5:	push   cs
  4173b6:	inc    ebx
  4173b7:	mov    eax,ds:0x2b7feec4
  4173bc:	mov    edi,0xc89c0ecb
  4173c1:	jge    0x41737c
  4173c3:	retf   0x2081
  4173c6:	test   edx,eax
  4173c8:	or     al,0x8c
  4173ca:	(bad)  
  4173cb:	into   
  4173cc:	jl     0x417394
  4173ce:	xor    BYTE PTR [eax-0x3e],dh
  4173d1:	mov    fs,WORD PTR [ecx]
  4173d3:	imul   eax,eax,0xd
  4173d6:	bound  esi,QWORD PTR [edi-0x1918a46a]
  4173dc:	inc    ebp
  4173dd:	stos   DWORD PTR es:[edi],eax
  4173de:	or     DWORD PTR [esp+eax*4],esp
  4173e1:	sbb    eax,0x8c8d4387
  4173e6:	pusha  
  4173e7:	lock xor eax,DWORD PTR [edx+ecx*1-0x59e256eb]
  4173ef:	leave  
  4173f0:	cld    
  4173f1:	mov    al,ds:0x5f1e739a
  4173f6:	ins    DWORD PTR es:[edi],dx
  4173f7:	popa   
  4173f8:	jnp    0x4173af
  4173fa:	jmp    0x896b013e
  4173ff:	sbb    eax,0x8a572b22
  417404:	jge    0x417466
  417406:	cs mov ah,0x3a
  417409:	loop   0x41742b
  41740b:	int    0xc7
  41740d:	push   eax
  41740e:	and    DWORD PTR [edi-0x5d],ebx
  417411:	push   0x6c
  417413:	jbe    0x41747c
  417415:	cwde   
  417416:	test   bl,al
  417418:	mov    al,0x8c
  41741a:	xor    ebp,DWORD PTR [esi]
  41741c:	sub    al,0x3d
  41741e:	test   al,0x6
  417420:	imul   edi,DWORD PTR [eax-0x27],0x22
  417424:	push   eax
  417425:	xchg   BYTE PTR [ecx-0x1d7085ae],dl
  41742b:	pop    eax
  41742c:	mov    al,0xca
  41742e:	inc    esi
  41742f:	lea    eax,[edi+0x63]
  417432:	int    0xa9
  417434:	dec    edi
  417435:	mov    edi,ecx
  417437:	and    ecx,DWORD PTR ds:0xc0cea6d0
  41743d:	retf   
  41743e:	mov    ds:0xc86cf647,eax
  417443:	arpl   WORD PTR [edi],sp
  417445:	(bad)  
  417446:	loop   0x4173e5
  417448:	sub    ebx,DWORD PTR [ebx+ecx*1-0xfbf7f9e]
  41744f:	and    eax,0xf952244d
  417454:	xor    edx,edi
  417456:	imul   ebp,edx,0x7e5859a5
  41745c:	mov    bh,0x3
  41745e:	test   DWORD PTR [edi-0x3b],ebp
  417461:	and    dh,BYTE PTR [eax]
  417463:	mov    cl,0xe
  417465:	cs mov bh,0x61
  417468:	xor    eax,DWORD PTR [ebx-0x61f770d5]
  41746e:	push   0xffffffbb
  417470:	xor    BYTE PTR [ebx-0x5f],ah
  417473:	popa   
  417474:	hlt    
  417475:	sahf   
  417476:	adc    BYTE PTR ds:0xb47f1648,ch
  41747c:	mov    DWORD PTR [edi+edx*2-0x6d],ebx
  417480:	xchg   BYTE PTR [edi+0x76],al
  417483:	mov    BYTE PTR [ebp+esi*2+0x31],cl
  417487:	add    dl,dl
  417489:	outs   dx,BYTE PTR ds:[esi]
  41748a:	adc    eax,0xe36866e4
  41748f:	push   esi
  417490:	aad    0x74
  417492:	pop    ecx
  417493:	adc    eax,0xea73ff
  417498:	enter  0x700c,0x4f
  41749c:	push   ss
  41749d:	mov    ecx,0x1ec5417e
  4174a2:	fld    st(5)
  4174a4:	mov    cl,BYTE PTR [esi+0x4b2ea3f5]
  4174aa:	mov    eax,ds:0x4660fbc5
  4174af:	cwde   
  4174b0:	pop    ebx
  4174b1:	enter  0x1bad,0x9b
  4174b5:	mov    ebp,0x9ecda856
  4174ba:	xor    cl,bl
  4174bc:	adc    edx,DWORD PTR [ebx+eiz*2+0x7]
  4174c0:	dec    esi
  4174c1:	dec    edi
  4174c2:	call   0x6fd0:0x56ad9c2c
  4174c9:	(bad)  
  4174ca:	dec    esi
  4174cb:	leave  
  4174cc:	jo     0x4174ea
  4174ce:	mov    bh,ah
  4174d0:	fimul  DWORD PTR [eax-0x74]
  4174d3:	loope  0x417456
  4174d5:	inc    ecx
  4174d6:	xor    bl,BYTE PTR [eax+0x33]
  4174d9:	repnz lahf 
  4174db:	les    ecx,FWORD PTR ds:0xc6d28620
  4174e1:	in     eax,dx
  4174e2:	dec    edi
  4174e3:	and    eax,0x9f2bfc15
  4174e8:	pop    ds
  4174e9:	je     0x41750b
  4174eb:	sbb    esp,DWORD PTR [eax-0x3b8cb002]
  4174f1:	aaa    
  4174f2:	mov    cl,0x40
  4174f4:	sub    BYTE PTR [ebx-0x1d],bh
  4174f7:	xchg   esp,eax
  4174f8:	iret   
  4174f9:	les    esi,FWORD PTR [eax+0x4c]
  4174fc:	and    DWORD PTR [esi+0x3fc0ef86],ecx
  417502:	out    0xcb,al
  417504:	xchg   BYTE PTR [edx-0x4b362c76],ah
  41750a:	xchg   edi,eax
  41750b:	psrlq  mm1,mm6
  41750e:	inc    ebp
  41750f:	lds    esi,FWORD PTR [edx+0x76dce90c]
  417515:	or     edi,esi
  417517:	pop    ss
  417518:	adc    eax,0x986a646c
  41751d:	mov    WORD PTR [edi+0x5f4901cf],gs
  417523:	pop    esi
  417524:	mov    dl,0x77
  417526:	adc    al,0x54
  417528:	sbb    eax,0x26529860
  41752d:	rcl    DWORD PTR [ecx-0xf0875b2],cl
  417533:	pop    ss
  417534:	mov    ds:0x497c0d24,eax
  417539:	sti    
  41753a:	sub    eax,0x5efb8a7d
  41753f:	xchg   BYTE PTR [ecx-0x36],al
  417542:	int    0x68
  417544:	retf   
  417545:	sbb    al,0x18
  417547:	sti    
  417548:	stos   BYTE PTR es:[edi],al
  417549:	lds    ecx,FWORD PTR [eax+0x22]
  41754c:	adc    al,0x4a
  41754e:	and    DWORD PTR [esi+eax*2],ebp
  417551:	adc    al,0x25
  417553:	fnstcw WORD PTR [edx+0x24294f2f]
  417559:	repz stc 
  41755b:	push   cs
  41755c:	jns    0x417563
  41755e:	in     eax,dx
  41755f:	psubsb mm3,QWORD PTR [esi+0x24]
  417563:	adc    BYTE PTR [eax],ch
  417565:	dec    ecx
  417566:	pop    ecx
  417567:	repz lds esp,FWORD PTR es:0xc45bce13
  41756f:	push   0x2900f193
  417574:	xchg   edi,eax
  417575:	push   ds
  417576:	and    al,0x25
  417578:	adc    DWORD PTR [ebp-0x75],edi
  41757b:	fsubr  QWORD PTR [ebp+0x6d]
  41757e:	adc    al,0x22
  417580:	xor    cl,dl
  417582:	adc    al,0x75
  417584:	and    dl,BYTE PTR [ebp-0x6089efe3]
  41758a:	add    al,0xde
  41758c:	stos   DWORD PTR es:[edi],eax
  41758d:	enter  0xb26e,0xc0
  417591:	adc    al,0x9a
  417593:	dec    esi
  417594:	rcr    DWORD PTR [eax],0xa7
  417597:	shr    eax,0x7f
  41759a:	loopne 0x41753c
  41759c:	enter  0x830d,0xf2
  4175a0:	sbb    al,0xcc
  4175a2:	push   edi
  4175a3:	sub    dl,al
  4175a5:	inc    esi
  4175a6:	push   cs
  4175a7:	ins    BYTE PTR es:[edi],dx
  4175a8:	add    dh,BYTE PTR [edi+0x65]
  4175ab:	pop    ebx
  4175ac:	popa   
  4175ad:	(bad)  
  4175ae:	sbb    edx,DWORD PTR [ebx]
  4175b0:	adc    cl,BYTE PTR [ebx]
  4175b2:	push   ds
  4175b3:	push   cs
  4175b4:	pop    esi
  4175b5:	and    edx,DWORD PTR [ecx]
  4175b7:	add    dl,BYTE PTR [edx+0x7e]
  4175ba:	outs   dx,DWORD PTR ds:[esi]
  4175bb:	jne    0x417621
  4175bd:	imul   edx,DWORD PTR [esi+0x1e19a9c8],0x63c40c71
  4175c7:	xor    BYTE PTR [ecx],bl
  4175c9:	stos   BYTE PTR es:[edi],al
  4175ca:	push   ds
  4175cb:	inc    ecx
  4175cc:	pop    eax
  4175cd:	fsin   
  4175cf:	push   esi
  4175d0:	dec    ebp
  4175d1:	(bad)  [ebx]
  4175d3:	inc    ebp
  4175d4:	(bad)  
  4175d5:	adc    eax,0x7078906b
  4175da:	add    dl,0xb2
  4175dd:	push   esi
  4175de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175df:	dec    esi
  4175e0:	jbe    0x4175f1
  4175e2:	jle    0x41757e
  4175e4:	ins    BYTE PTR es:[edi],dx
  4175e5:	and    esi,DWORD PTR [ebp+0x34]
  4175e8:	(bad)  
  4175e9:	(bad)  [edi+eax*8+0x72]
  4175ed:	dec    edi
  4175ee:	ret    0xf01a
  4175f1:	repz mov eax,ds:0x2a70c0f8
  4175f7:	cdq    
  4175f8:	jge    0x41761b
  4175fa:	sub    eax,DWORD PTR [eax+0x1d]
  4175fd:	mov    eax,0xdf7f4309
  417602:	mov    DWORD PTR [edx*2+0x2b47b080],esp
  417609:	mov    al,cl
  41760b:	aam    0x96
  41760d:	add    ebx,DWORD PTR [ebx+0x603ab1df]
  417613:	push   ds
  417614:	push   edi
  417615:	jns    0x4175c9
  417617:	hlt    
  417618:	test   al,0xb5
  41761a:	push   es
  41761b:	mov    BYTE PTR [ebx-0x4a],al
  41761e:	push   edx
  41761f:	mov    al,0xa2
  417621:	xchg   ecx,eax
  417622:	xor    bh,BYTE PTR [edx+0x49831486]
  417628:	jo     0x417602
  41762a:	jle    0x4175ca
  41762c:	push   ebp
  41762d:	mov    ah,0xe3
  41762f:	jns    0x4175bc
  417631:	jp     0x4175b4
  417633:	nop
  417634:	dec    eax
  417635:	mov    ebp,0xc1df69d
  41763a:	mov    dh,0x3
  41763c:	inc    edx
  41763d:	bound  eax,QWORD PTR [ebp+0x6c65302]
  417643:	add    DWORD PTR [edx-0x6cfbf0b4],edi
  417649:	scas   al,BYTE PTR es:[edi]
  41764a:	jae    0x417657
  41764c:	iret   
  41764d:	aad    0x21
  41764f:	pusha  
  417650:	pusha  
  417651:	or     ecx,esi
  417653:	xchg   BYTE PTR cs:[edi+ecx*1+0x70],dh
  417658:	imul   BYTE PTR [edi+0x5d]
  41765b:	das    
  41765c:	adc    edi,esi
  41765e:	ret    
  41765f:	pop    ebp
  417660:	or     esi,0xc29d8925
  417666:	sti    
  417667:	add    esp,edi
  417669:	jno    0x41763f
  41766b:	add    dh,BYTE PTR [edi-0x7b]
  41766e:	sbb    eax,0xc8b22bda
  417673:	cmp    ebp,esp
  417675:	(bad)  
  417676:	mov    BYTE PTR [eax],ah
  417678:	test   eax,esi
  41767a:	pop    ebp
  41767b:	(bad)  
  41767c:	jg     0x417606
  41767e:	and    BYTE PTR [edx-0x4b60f044],ah
  417684:	inc    DWORD PTR [edi]
  417686:	addr16 pusha 
  417688:	outs   dx,DWORD PTR ds:[esi]
  417689:	imul   esp,edx,0xfd267912
  41768f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417690:	hlt    
  417691:	jnp    0x417616
  417693:	jg     0x41770e
  417695:	xor    ch,bh
  417697:	push   eax
  417698:	xchg   edi,eax
  417699:	jg     0x417649
  41769b:	mov    WORD PTR [edi+0x47],es
  41769e:	inc    esp
  41769f:	hlt    
  4176a0:	and    DWORD PTR [edx-0xf189835],0x46
  4176a7:	mov    bl,BYTE PTR [ecx-0x6e678d63]
  4176ad:	adc    BYTE PTR [esi],dl
  4176af:	mov    ah,0x6e
  4176b1:	mov    dh,0x20
  4176b3:	lds    eax,FWORD PTR ds:0xfab44710
  4176b9:	and    al,0x97
  4176bb:	cs xchg ecx,eax
  4176bd:	add    BYTE PTR [edx],ch
  4176bf:	jl     0x4176b0
  4176c1:	cmp    DWORD PTR [edx+0x5f94cf9e],ebx
  4176c7:	add    DWORD PTR [esi+eax*4+0x1c],esi
  4176cb:	and    al,0xa9
  4176cd:	repnz aam 0x22
  4176d0:	mov    esp,0x194413c2
  4176d5:	js     0x41765e
  4176d7:	popa   
  4176d8:	adc    DWORD PTR [ebp+0x39],esi
  4176db:	lea    esi,[eax-0x3962d47f]
  4176e1:	add    BYTE PTR [ebp+esi*4+0x10446dc],al
  4176e8:	(bad)  
  4176e9:	ins    BYTE PTR es:[edi],dx
  4176ea:	bound  esi,QWORD PTR [ecx+0x20]
  4176ed:	sbb    BYTE PTR [eax-0x64d574e4],al
  4176f3:	pusha  
  4176f4:	mov    ah,0x23
  4176f6:	mov    cl,0x1c
  4176f8:	daa    
  4176f9:	add    ebx,DWORD PTR [ecx]
  4176fb:	mov    esi,ecx
  4176fd:	or     al,0xfb
  417700:	and    ebp,DWORD PTR [edi]
  417702:	mov    ds:0xfc00593,eax
  417707:	div    BYTE PTR gs:[ecx+0x420c983b]
  41770e:	pop    eax
  41770f:	adc    BYTE PTR [edi+0x2ebb4b49],cl
  417715:	mov    esp,DWORD PTR [ebx]
  417717:	jle    0x417729
  417719:	xor    DWORD PTR [ecx],esi
  41771b:	inc    ecx
  41771c:	inc    edi
  41771d:	out    0x13,al
  41771f:	fwait
  417720:	les    eax,FWORD PTR [ebx]
  417722:	adc    esi,edi
  417724:	mov    BYTE PTR [eax+0x2c20543c],0x70
  41772b:	or     al,0x72
  41772d:	mov    edx,0x1ac77cca
  417732:	imul   ecx,DWORD PTR [eax],0x657978a6
  417738:	dec    ebx
  417739:	push   0xffffff91
  41773b:	add    DWORD PTR [eax],0xf329efd5
  417741:	xor    al,BYTE PTR [ecx]
  417743:	xor    BYTE PTR ds:0xf6290579,cl
  417749:	bts    DWORD PTR [ebp+0x6b],edi
  41774d:	mov    eax,ds:0x2dec5758
  417752:	push   cs
  417753:	scas   al,BYTE PTR es:[edi]
  417754:	lds    esi,FWORD PTR [ebp*8-0x5330959f]
  41775b:	and    DWORD PTR [esi-0x24],edi
  41775e:	loopne 0x417725
  417760:	dec    edx
  417761:	sbb    esp,ebp
  417763:	push   0xffffffe0
  417765:	dec    esp
  417766:	and    eax,0x3ef31c
  41776b:	fs ja  0x41772d
  41776e:	xchg   ecx,eax
  41776f:	jns    0x4177df
  417771:	and    cl,ch
  417773:	retf   
  417774:	retf   0xa07e
  417777:	mov    ds:0xc62b08,eax
  41777c:	jmp    0x4177bb
  41777e:	inc    edx
  41777f:	mov    ah,BYTE PTR [edi+edi*4]
  417782:	sbb    DWORD PTR [ebx-0x59739bf],ebp
  417788:	js     0x417724
  41778a:	or     BYTE PTR [esi-0x67],0x2a
  41778e:	ret    0x8d2a
  417791:	lods   eax,DWORD PTR ds:[esi]
  417792:	stc    
  417793:	push   DWORD PTR [eax+0x208f700f]
  417799:	and    al,BYTE PTR [edi+eax*2]
  41779c:	jl     0x417793
  41779e:	xor    al,BYTE PTR [ebp-0x31]
  4177a1:	sub    eax,0xbe1d124c
  4177a6:	fdivr  DWORD PTR [eax]
  4177a8:	dec    edi
  4177a9:	in     eax,dx
  4177aa:	das    
  4177ab:	and    dl,BYTE PTR [ebx]
  4177ad:	imul   edi,DWORD PTR [eax-0x39],0x7183f8a5
  4177b4:	and    edi,esp
  4177b6:	enter  0x4711,0x5c
  4177ba:	loop   0x4177ea
  4177bc:	sbb    eax,0x84fc1fed
  4177c1:	ja     0x4177c8
  4177c3:	and    eax,0x44379e9c
  4177c8:	adc    ch,bh
  4177ca:	lods   eax,DWORD PTR ds:[esi]
  4177cb:	xor    ebx,DWORD PTR [ecx]
  4177cd:	push   ss
  4177ce:	mov    dl,cl
  4177d0:	shl    DWORD PTR [ebp-0x7cd2eb78],0x25
  4177d7:	pusha  
  4177d8:	sub    DWORD PTR [ebx],ebp
  4177da:	mov    ds:0x8a41653c,al
  4177df:	adc    al,0x13
  4177e1:	cld    
  4177e2:	loopne 0x417826
  4177e4:	adc    dh,BYTE PTR [eax+ebx*1+0x25]
  4177e8:	scas   eax,DWORD PTR es:[edi]
  4177e9:	fimul  WORD PTR [eax+0x66fcebc0]
  4177ef:	inc    ebp
  4177f0:	das    
  4177f1:	push   ebp
  4177f2:	xor    eax,0x177f4d98
  4177f7:	mov    bl,0x4d
  4177f9:	pop    esp
  4177fa:	cli    
  4177fb:	sub    al,0x15
  4177fd:	test   BYTE PTR [edi],bl
  4177ff:	jne    0x417785
  417801:	sub    al,0x6b
  417803:	pop    edi
  417804:	cwde   
  417805:	jb     0x417857
  417807:	mov    edi,0x6e5195e0
  41780c:	push   esi
  41780d:	(bad)  
  41780e:	jl     0x417877
  417810:	clc    
  417811:	stos   BYTE PTR es:[edi],al
  417812:	je     0x417858
  417814:	iret   
  417815:	sbb    eax,0x9b05d7d
  41781a:	dec    edi
  41781b:	pop    ds
  41781c:	(bad)  
  41781d:	call   0x3146:0xb171e7de
  417824:	jb     0x41787c
  417826:	push   ds
  417827:	xchg   esp,eax
  417828:	xchg   BYTE PTR [ecx-0x5f],dh
  41782b:	jge    0x4178a6
  41782d:	lea    ecx,[ebx-0x7d43f369]
  417833:	mov    dl,0xa7
  417835:	xor    eax,0x457a286b
  41783a:	adc    BYTE PTR [eax+esi*1+0x4d98717f],bh
  417841:	and    ch,BYTE PTR [ecx]
  417843:	fbstp  TBYTE PTR [edx-0x3c]
  417846:	pop    ds
  417847:	jnp    0x4178a4
  417849:	xor    BYTE PTR [ebx-0x70],ch
  41784c:	arpl   WORD PTR [edx-0x348a4ddb],bx
  417852:	leave  
  417853:	mov    ds:0x4ebfd531,eax
  417858:	js     0x417877
  41785a:	fstp   TBYTE PTR [ecx+0x4a1ccfe4]
  417860:	or     eax,0x225ef597
  417865:	adc    al,0x50
  417867:	es push ebp
  417869:	aas    
  41786a:	fadd   QWORD PTR [esi]
  41786c:	add    BYTE PTR [ecx],0x34
  41786f:	dec    esp
  417870:	push   edi
  417871:	jb     0x4178c8
  417873:	(bad)  
  417874:	cmc    
  417875:	jg     0x4178ca
  417877:	shr    BYTE PTR [eax+ecx*4-0x17aedcf1],0xac
  41787f:	jmp    0x41781c
  417881:	pop    ds
  417882:	imul   ebx,DWORD PTR ds:0xb338ac7d,0x67
  417889:	xchg   edx,eax
  41788a:	psubsb mm6,QWORD PTR [esp+eax*4+0x64]
  41788f:	sub    DWORD PTR [ebx-0x221315ef],ebp
  417895:	nop
  417896:	je     0x4178fc
  417898:	aaa    
  417899:	push   cs
  41789a:	ret    
  41789b:	mov    eax,0x6bf739f7
  4178a0:	dec    ebp
  4178a1:	cmp    bh,BYTE PTR [esi]
  4178a3:	fstp   DWORD PTR [esi+0x64ef923f]
  4178a9:	xchg   BYTE PTR [ebp-0x19a44ae3],ch
  4178af:	sbb    bl,BYTE PTR [eax]
  4178b1:	aad    0xe5
  4178b3:	(bad)  
  4178b4:	dec    ecx
  4178b5:	pop    DWORD PTR [edx+0x1b962a4d]
  4178bb:	std    
  4178bc:	ins    DWORD PTR es:[edi],dx
  4178bd:	jmp    0xea5239cf
  4178c2:	test   DWORD PTR [ebp+eiz*8+0x187e86c7],0x2059dfa5
  4178cd:	sbb    eax,DWORD PTR [esi]
  4178cf:	int    0xed
  4178d1:	dec    esi
  4178d2:	mov    DWORD PTR [edx+0x3e],edi
  4178d5:	adc    ch,BYTE PTR [ebp+ebx*4+0x6d]
  4178d9:	push   edx
  4178da:	jg     0x417924
  4178dc:	pop    ds
  4178dd:	push   0x45
  4178df:	stos   BYTE PTR es:[edi],al
  4178e0:	add    BYTE PTR cs:[edi-0x16ed31aa],cl
  4178e7:	sub    bl,BYTE PTR [edx+0x308b4ee2]
  4178ed:	mov    al,ds:0xf34f0a76
  4178f3:	lds    esp,FWORD PTR [esi+0x1b]
  4178f6:	push   ds
  4178f7:	int    0xf6
  4178f9:	nop
  4178fa:	xor    ecx,DWORD PTR [esi]
  4178fc:	inc    eax
  4178fd:	mov    ch,0x22
  4178ff:	adc    ebx,DWORD PTR [eax-0x6c]
  417902:	adc    eax,0x84863699
  417907:	mov    ebx,0x74c8746b
  41790c:	mov    ch,0x6a
  41790e:	jo     0x417979
  417910:	sub    BYTE PTR [ebx+0xe9ff39],al
  417916:	icebp  
  417917:	(bad)  
  417918:	mov    esp,0xb22715b7
  41791d:	jns    0x417945
  41791f:	and    BYTE PTR [eax+eiz*2+0x329aff26],bl
  417926:	mov    bh,0x67
  417928:	loopne 0x41797f
  41792a:	cmp    BYTE PTR [eax],0x6e
  41792d:	shl    BYTE PTR ds:0xc0ba122c,1
  417933:	mov    bl,0xee
  417935:	je     0x4178b9
  417937:	out    dx,eax
  417938:	pop    ecx
  417939:	mov    WORD PTR [edx-0x31],ds
  41793c:	test   al,0x58
  41793e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41793f:	mov    DWORD PTR [ebx+0x799b48b0],ebp
  417945:	cmp    dl,BYTE PTR [esi]
  417947:	add    BYTE PTR [ebp-0x21c04508],ch
  41794d:	cmp    DWORD PTR [ecx+0x66],0x10
  417951:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417953:	pop    ecx
  417954:	adc    BYTE PTR [esi-0x394b447b],bl
  41795a:	xor    DWORD PTR [eax],edx
  41795c:	sub    DWORD PTR [edi],eax
  41795e:	adc    eax,0x1104097b
  417963:	xchg   esi,eax
  417964:	loope  0x4178f2
  417966:	addr16 push esi
  417968:	(bad)  
  417969:	loopne 0x4179a8
  41796b:	call   0xe70a:0xecb94508
  417972:	xchg   edi,eax
  417973:	pop    ecx
  417974:	mov    ebp,0x2e287a7b
  417979:	rcr    DWORD PTR [edi-0x7b],1
  41797c:	mov    WORD PTR [edi],es
  41797e:	stos   DWORD PTR es:[edi],eax
  41797f:	xchg   esp,eax
  417980:	push   ebp
  417981:	outs   dx,DWORD PTR ds:[esi]
  417982:	test   BYTE PTR ds:0xc449f8b4,bl
  417988:	push   ss
  417989:	mov    ch,0x3f
  41798b:	out    0xb0,eax
  41798d:	and    BYTE PTR [esi],0xe2
  417990:	mov    ebp,0xc2b1d206
  417995:	fnstcw WORD PTR [ebp-0x7e4c31c2]
  41799b:	stc    
  41799c:	les    ebp,FWORD PTR [ebp-0x7427eed]
  4179a2:	and    eax,0x4fa0f8f3
  4179a7:	enter  0xdab0,0x1b
  4179ab:	js     0x417977
  4179ad:	stos   DWORD PTR es:[edi],eax
  4179ae:	aas    
  4179af:	inc    edi
  4179b0:	or     DWORD PTR [ebx-0x487f6f4f],ebx
  4179b6:	sbb    BYTE PTR [ecx+0x13ae19fa],dl
  4179bc:	xor    bh,BYTE PTR [edx]
  4179be:	pusha  
  4179bf:	and    eax,0x3f3c186d
  4179c4:	push   0x2b
  4179c6:	ss push ebx
  4179c8:	sahf   
  4179c9:	inc    edi
  4179ca:	das    
  4179cb:	mov    WORD PTR [eax+0x40],cs
  4179ce:	jne    0x417a45
  4179d0:	inc    edi
  4179d1:	icebp  
  4179d2:	sub    eax,0x2d63a3f4
  4179d7:	inc    esi
  4179d8:	add    eax,0xe4d8025e
  4179dd:	sub    al,0xd8
  4179df:	or     eax,0x7fb46012
  4179e4:	or     dl,BYTE PTR [ebx]
  4179e6:	aaa    
  4179e7:	in     al,0x66
  4179e9:	icebp  
  4179ea:	sub    DWORD PTR [ebp+0x46f61e8],edx
  4179f0:	pop    ebx
  4179f1:	sub    DWORD PTR [edx+0x69],edx
  4179f4:	and    DWORD PTR [ecx+0x15],eax
  4179f7:	ins    DWORD PTR es:[edi],dx
  4179f8:	mov    esp,0x2199bf79
  4179fd:	outs   dx,BYTE PTR ds:[esi]
  4179fe:	stos   BYTE PTR es:[edi],al
  4179ff:	sbb    al,BYTE PTR [ecx+0xc]
  417a02:	ins    DWORD PTR es:[edi],dx
  417a03:	adc    al,0x6a
  417a05:	aas    
  417a06:	inc    edi
  417a07:	arpl   WORD PTR [esi+0x5fc472d6],dx
  417a0d:	push   0xffffff8c
  417a0f:	mov    bh,0x8
  417a11:	xchg   DWORD PTR [ecx+eax*2+0x3],edx
  417a15:	pop    eax
  417a16:	pop    edi
  417a17:	ss dec ebx
  417a19:	inc    ebp
  417a1a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a1c:	xchg   edi,eax
  417a1d:	or     al,ah
  417a1f:	lds    edi,FWORD PTR [ebx+0x5ff24ca]
  417a25:	cmp    DWORD PTR [ebx],0x0
  417a28:	pop    es
  417a29:	jnp    0x417a2c
  417a2b:	sub    bl,BYTE PTR [eax]
  417a2d:	mov    ebp,0x23eefbbc
  417a32:	hlt    
  417a33:	push   ss
  417a34:	xlat   BYTE PTR ds:[ebx]
  417a35:	sahf   
  417a36:	sti    
  417a37:	cmp    al,BYTE PTR [eax+0x30f9b7af]
  417a3d:	xor    al,BYTE PTR [edi-0x594fb8fc]
  417a43:	rcl    DWORD PTR [ebx+0x5],1
  417a46:	dec    eax
  417a47:	mov    ch,0x24
  417a49:	adc    al,0x59
  417a4b:	xchg   DWORD PTR [edi],edx
  417a4d:	mov    ebx,0x871887b3
  417a52:	fs push esi
  417a54:	sub    BYTE PTR [ebx-0x18],dl
  417a57:	ror    BYTE PTR [eax-0x1fe85aee],cl
  417a5d:	ret    
  417a5e:	mov    eax,0x7598a234
  417a63:	adc    al,0x89
  417a65:	sbb    eax,0x58e01ef3
  417a6a:	ficom  DWORD PTR [eax]
  417a6c:	icebp  
  417a6d:	sub    eax,0x6f1a6bb8
  417a72:	pop    esi
  417a73:	leave  
  417a74:	or     BYTE PTR [ebx-0x1f],ah
  417a77:	push   esp
  417a78:	mov    al,0x2
  417a7a:	mov    esi,0x6b9306c7
  417a7f:	daa    
  417a80:	push   0x65ec6a20
  417a85:	test   DWORD PTR [edi-0x1cc4b684],ecx
  417a8b:	mov    eax,0x5981ea74
  417a90:	xchg   DWORD PTR [esi+eiz*1-0xc7bf36b],esp
  417a97:	retf   0x8a9f
  417a9a:	push   esi
  417a9b:	dec    ebx
  417a9c:	dec    ebx
  417a9d:	mov    esi,fs
  417a9f:	ja     0x417a31
  417aa1:	aaa    
  417aa2:	rcr    BYTE PTR [ecx-0x41],1
  417aa5:	imul   eax,DWORD PTR [ecx],0x57
  417aa8:	cdq    
  417aa9:	arpl   WORD PTR [ecx-0x1b7698e6],di
  417aaf:	cli    
  417ab0:	push   esp
  417ab1:	sahf   
  417ab2:	cld    
  417ab3:	cmp    eax,0x2b34063c
  417ab8:	sub    BYTE PTR [ebp-0x57],cl
  417abb:	mov    fs,WORD PTR [edx+0x4659a97]
  417ac1:	or     eax,0x1f48ad28
  417ac6:	(bad)  
  417ac7:	mov    ebx,0x29f27210
  417acc:	dec    edi
  417acd:	lods   al,BYTE PTR ds:[esi]
  417ace:	adc    al,0x86
  417ad0:	inc    esp
  417ad1:	dec    ebp
  417ad2:	sti    
  417ad3:	rol    DWORD PTR [ecx+0x1e06bde3],cl
  417ad9:	jns    0x417af1
  417adb:	cmc    
  417adc:	out    0x89,al
  417ade:	das    
  417adf:	test   eax,0x57eef428
  417ae4:	stos   DWORD PTR es:[edi],eax
  417ae5:	mov    esp,DWORD PTR [esi+ebx*4-0x5b]
  417ae9:	ins    DWORD PTR es:[edi],dx
  417aea:	ins    DWORD PTR es:[edi],dx
  417aeb:	sub    esp,ebp
  417aed:	dec    ecx
  417aee:	lock mov ah,0x20
  417af1:	jae    0x417b0c
  417af3:	test   DWORD PTR [esi+0x1c],esi
  417af6:	fidivr DWORD PTR [edx+0x67d92463]
  417afc:	xchg   ecx,eax
  417afd:	fdiv   DWORD PTR [ebx-0x1fe57c69]
  417b03:	in     al,0xc6
  417b05:	and    esi,edi
  417b07:	jle    0x417ac6
  417b09:	pop    esp
  417b0a:	pusha  
  417b0b:	outs   dx,BYTE PTR ds:[esi]
  417b0c:	dec    edi
  417b0d:	fsubr  DWORD PTR [esi-0x71a9b0aa]
  417b13:	int    0xfe
  417b15:	daa    
  417b16:	sub    ah,BYTE PTR [ecx+0x7b]
  417b19:	lds    edi,FWORD PTR [edx+0x16d8694c]
  417b1f:	xchg   BYTE PTR [ebx+0x14dc8e1],al
  417b25:	lea    edx,[esi-0x43]
  417b28:	dec    esp
  417b29:	add    eax,0xb335a630
  417b2e:	or     dl,cl
  417b30:	(bad)  
  417b31:	int    0x12
  417b33:	mov    ds:0xb9ab2d8d,eax
  417b38:	aad    0xac
  417b3a:	nop/reserved BYTE PTR [eax+0x3f28b022]
  417b41:	or     al,0x34
  417b43:	mov    DWORD PTR ds:0xbd4f352a,0xe6f5cec3
  417b4d:	sar    DWORD PTR [eax-0x3c5dcdf6],1
  417b53:	(bad)  
  417b54:	lock mov bl,0x6c
  417b57:	icebp  
  417b58:	mov    eax,ds:0x96ac2c1e
  417b5d:	hlt    
  417b5e:	dec    eax
  417b5f:	mov    edi,0x74b34598
  417b64:	div    ebp
  417b66:	inc    ebx
  417b67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b68:	xor    al,0x8c
  417b6a:	sbb    BYTE PTR [ebx],cl
  417b6c:	sub    eax,0x26bf324f
  417b71:	cmp    DWORD PTR [ecx],esp
  417b73:	pop    esp
  417b74:	inc    ecx
  417b75:	mov    cl,0x2e
  417b77:	jg     0x417b9c
  417b79:	mul    al
  417b7b:	and    BYTE PTR [esi-0x5eb41f59],ch
  417b81:	mov    edi,DWORD PTR cs:[ebp+0x19b1a042]
  417b88:	mov    ds:0x2b1ab603,eax
  417b8d:	mov    edi,0x8cfa983
  417b92:	popf   
  417b93:	test   ax,0xd166
  417b97:	mov    al,ds:0x2b44ec66
  417b9c:	adc    edx,DWORD PTR [eax+0x2d6b50aa]
  417ba2:	xchg   ebp,eax
  417ba3:	arpl   WORD PTR [ecx+0x4d],bp
  417ba6:	dec    esi
  417ba7:	call   0xa313:0x7ab8a916
  417bae:	add    ch,BYTE PTR [ecx-0x33e89b25]
  417bb4:	pop    es
  417bb5:	test   al,0x57
  417bb7:	pop    esp
  417bb8:	sbb    eax,DWORD PTR [ebp+0x13989958]
  417bbe:	jecxz  0x417b7e
  417bc0:	call   0x48ea:0xa34c70fb
  417bc7:	push   eax
  417bc8:	cmp    cl,bl
  417bca:	xchg   esp,eax
  417bcb:	jae    0x417b7e
  417bcd:	mov    ebp,0xb4c4cf83
  417bd2:	xchg   esp,eax
  417bd3:	push   0x14
  417bd5:	inc    eax
  417bd6:	xchg   edx,eax
  417bd7:	arpl   WORD PTR [ebp-0x4bc6b322],ax
  417bdd:	adc    al,0x92
  417bdf:	add    ebp,DWORD PTR [eax-0x7bdef745]
  417be5:	dec    esp
  417be6:	or     cl,al
  417be8:	retf   0xa762
  417beb:	pop    ebx
  417bec:	xor    eax,0xe793d9f8
  417bf1:	icebp  
  417bf2:	das    
  417bf3:	leave  
  417bf4:	jmp    0x813b982f
  417bf9:	push   DWORD PTR [ebx+ebp*1+0x6d5d8480]
  417c00:	mov    DWORD PTR [edx+esi*2],eax
  417c03:	or     esp,DWORD PTR [esi-0x173ea360]
  417c09:	or     BYTE PTR [ecx+0x281e7a60],bl
  417c0f:	repz (bad)
  417c12:	or     DWORD PTR [eax-0x7a],0xda42412e
  417c19:	imul   esi,ebx,0x6b95b03a
  417c1f:	pusha  
  417c20:	add    BYTE PTR [edx],al
  417c22:	mov    dh,0x6c
  417c24:	or     BYTE PTR [esi+0x18f94060],al
  417c2a:	cmp    al,0x7
  417c2c:	jne    0x417cad
  417c2e:	dec    ecx
  417c2f:	das    
  417c30:	frstor [edi+0x4]
  417c33:	ins    BYTE PTR es:[edi],dx
  417c34:	xor    al,0xff
  417c36:	inc    DWORD PTR gs:[ebp-0x41]
  417c3a:	outs   dx,DWORD PTR ds:[esi]
  417c3b:	test   al,0x3e
  417c3d:	push   esp
  417c3e:	in     eax,0x2d
  417c40:	mov    ecx,edx
  417c42:	mov    al,0x7a
  417c44:	add    BYTE PTR [edi],0x58
  417c47:	dec    edx
  417c48:	dec    ebp
  417c49:	ficom  DWORD PTR [esi+eiz*4+0x3b]
  417c4d:	and    al,0x4e
  417c4f:	adc    esi,esi
  417c51:	xchg   edx,eax
  417c52:	xor    bh,BYTE PTR [esi+0x6548f688]
  417c58:	inc    ebx
  417c59:	sub    eax,0x7d086fd2
  417c5e:	mov    ch,0x8b
  417c60:	cwde   
  417c61:	lds    eax,FWORD PTR [eax+0x12368e52]
  417c67:	pop    es
  417c68:	sbb    bl,BYTE PTR [ecx+0x5c501d35]
  417c6e:	or     eax,0x3bb02527
  417c73:	ins    DWORD PTR es:[edi],dx
  417c74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c75:	mov    dl,0xf7
  417c77:	loop   0x417cdc
  417c79:	cmp    ecx,0x50
  417c7c:	inc    esp
  417c7d:	xor    eax,0x87e04a1c
  417c82:	outs   dx,BYTE PTR ds:[esi]
  417c83:	push   0xcd6944fe
  417c88:	loopne 0x417c40
  417c8a:	jae    0x417c4b
  417c8c:	clc    
  417c8d:	ret    0x4616
  417c90:	sub    esi,DWORD PTR [ebx+0x2218ca89]
  417c96:	push   es
  417c97:	dec    ebp
  417c98:	(bad)  
  417c99:	sub    al,0xf4
  417c9b:	xchg   ecx,ebx
  417c9d:	lahf   
  417c9e:	pusha  
  417c9f:	fistp  WORD PTR [ecx+0x1c]
  417ca2:	sbb    esi,eax
  417ca4:	scas   eax,DWORD PTR es:[edi]
  417ca5:	sbb    DWORD PTR [ecx-0x66],esi
  417ca8:	dec    ebx
  417ca9:	add    ch,BYTE PTR [esi]
  417cab:	iret   
  417cac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cad:	repnz mov bl,0x8
  417cb0:	mov    edx,0x8686fba
  417cb5:	lods   eax,DWORD PTR ds:[esi]
  417cb6:	mov    al,0xc9
  417cb8:	mov    gs,WORD PTR [esi-0x3]
  417cbb:	dec    edi
  417cbc:	(bad)  
  417cbd:	xchg   esp,eax
  417cbe:	mov    bh,0xac
  417cc0:	sub    eax,0x525085ed
  417cc5:	adc    BYTE PTR ds:0xcf357e85,cl
  417ccb:	push   ds
  417ccc:	in     al,dx
  417ccd:	push   ecx
  417cce:	mov    ds:0xad55a80a,al
  417cd3:	mov    ?,WORD PTR [edx+0x7e]
  417cd6:	dec    ecx
  417cd7:	pop    es
  417cd8:	test   eax,0x40748cba
  417cdd:	ret    0x42ca
  417ce0:	pop    es
  417ce1:	push   esp
  417ce2:	push   eax
  417ce3:	hlt    
  417ce4:	aam    0x16
  417ce6:	dec    ecx
  417ce7:	mov    al,BYTE PTR [ebp+0x21]
  417cea:	push   0x7d
  417cec:	out    dx,eax
  417ced:	add    edi,DWORD PTR [ecx]
  417cef:	xor    ebp,DWORD PTR [ebx]
  417cf1:	push   ebx
  417cf2:	out    dx,eax
  417cf3:	arpl   WORD PTR [esi],ax
  417cf5:	cmp    al,0xe4
  417cf7:	addr16 (bad) 
  417cf9:	mul    BYTE PTR [eax-0x1d]
  417cfc:	(bad)  
  417cfd:	clc    
  417cfe:	cmp    al,al
  417d00:	pop    ebx
  417d01:	cs push edi
  417d03:	dec    eax
  417d04:	and    BYTE PTR [eax+0x36],dh
  417d07:	pop    ss
  417d08:	sub    ecx,DWORD PTR [ecx]
  417d0a:	push   ds
  417d0b:	inc    esi
  417d0c:	pop    ebx
  417d0d:	pop    esp
  417d0e:	dec    edx
  417d0f:	inc    ebx
  417d10:	dec    edx
  417d11:	push   edx
  417d12:	js     0x417d8a
  417d14:	outs   dx,BYTE PTR ds:[esi]
  417d15:	pop    edx
  417d16:	call   0x4f908870
  417d1b:	pop    esp
  417d1c:	xchg   BYTE PTR [edi+0x65],dl
  417d1f:	std    
  417d20:	inc    esp
  417d21:	les    esi,FWORD PTR [esi-0x3c]
  417d24:	aad    0xcd
  417d26:	pop    eax
  417d27:	mov    esi,0x8c8d2f79
  417d2c:	and    al,0x73
  417d2e:	cmovp  edi,ecx
  417d31:	jb     0x417d91
  417d33:	daa    
  417d34:	adc    eax,0xb5cd26bf
  417d39:	cdq    
  417d3a:	clc    
  417d3b:	arpl   WORD PTR [edi],sp
  417d3d:	int    0x64
  417d3f:	xor    DWORD PTR [ebx+ebp*2-0x46d737c4],eax
  417d46:	adc    DWORD PTR [ebp-0x76],0x48e3f65
  417d4d:	adc    al,0x80
  417d4f:	mov    ebx,0x80845299
  417d54:	hlt    
  417d55:	mov    esp,DWORD PTR [edi]
  417d57:	push   0x7b1dbc45
  417d5c:	mov    BYTE PTR [ecx+0x5c257d9f],cl
  417d62:	inc    ecx
  417d63:	mov    dl,0x1b
  417d65:	xchg   esp,eax
  417d66:	test   BYTE PTR [ebp+0x38207ebf],cl
  417d6c:	dec    ebp
  417d6d:	mov    eax,0x8d89a014
  417d72:	adc    esi,DWORD PTR [ebp+0x31]
  417d75:	mov    al,0x7c
  417d77:	jae    0x417dbd
  417d79:	mov    cl,bl
  417d7b:	call   0x2ef3219f
  417d80:	or     edx,DWORD PTR [ebx-0x4a]
  417d83:	xor    DWORD PTR fs:[ebp+esi*2-0x4f09d13e],esi
  417d8b:	push   es
  417d8c:	mul    BYTE PTR [esi+0x47]
  417d8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d90:	fidiv  DWORD PTR [ebp-0x4a30e1f6]
  417d96:	mov    WORD PTR [ebp-0x154dc266],?
  417d9c:	add    bh,BYTE PTR [edx]
  417d9e:	jnp    0x417d93
  417da0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417da1:	ja     0x417d89
  417da3:	sub    al,0x68
  417da5:	or     eax,DWORD PTR [edi]
  417da7:	and    ah,ah
  417da9:	mov    eax,ds:0xac2fff02
  417dae:	adc    DWORD PTR [edi+0x67],eax
  417db1:	sbb    BYTE PTR [edx],dh
  417db3:	adc    al,0xae
  417db5:	mov    ch,0xf4
  417db7:	inc    BYTE PTR [ecx-0x52668b27]
  417dbd:	gs mov ebp,0xba978b17
  417dc3:	les    ecx,FWORD PTR [esi+0x7f]
  417dc6:	or     al,0x70
  417dc8:	add    al,0xba
  417dca:	jecxz  0x417daf
  417dcc:	std    
  417dcd:	mov    ah,0xad
  417dcf:	push   ds
  417dd0:	(bad)  
  417dd1:	data16 jb 0x417dec
  417dd4:	push   cs
  417dd5:	and    edi,DWORD PTR [esi-0x68a1c06e]
  417ddb:	out    dx,al
  417ddc:	or     eax,0x4a123b29
  417de1:	pop    ebx
  417de2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417de3:	ss pop ds
  417de5:	aas    
  417de6:	inc    edi
  417de7:	test   DWORD PTR [edi],esp
  417de9:	add    esi,DWORD PTR [ecx]
  417deb:	and    BYTE PTR [edx-0x12f942e6],ch
  417df1:	mov    al,0x7c
  417df3:	std    
  417df4:	test   esi,eax
  417df6:	test   eax,0xef2ac79f
  417dfb:	mov    cl,0xa
  417dfd:	mov    cl,0xa5
  417dff:	addr16 or eax,0x5ea417b8
  417e05:	push   edx
  417e06:	scas   eax,DWORD PTR es:[edi]
  417e07:	sbb    DWORD PTR [esi+edx*2-0x51],ecx
  417e0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e0c:	pop    ds
  417e0d:	lea    edx,[edx]
  417e0f:	xchg   edx,eax
  417e10:	pop    ss
  417e11:	pop    edx
  417e12:	jno    0x417daa
  417e14:	scas   eax,DWORD PTR es:[edi]
  417e15:	pop    ds
  417e16:	(bad)  
  417e17:	scas   eax,DWORD PTR es:[edi]
  417e18:	test   BYTE PTR [edi-0x6433d227],ch
  417e1e:	mov    ebx,0x99c455e
  417e23:	cwde   
  417e24:	test   eax,0x72af6147
  417e29:	leave  
  417e2a:	and    al,0x9e
  417e2c:	das    
  417e2d:	outs   dx,DWORD PTR ds:[esi]
  417e2e:	in     al,0x26
  417e30:	call   0xe44c:0x8dd0e23d
  417e37:	enter  0x412d,0x92
  417e3b:	xchg   edx,eax
  417e3c:	sub    BYTE PTR [edi+0x61],ch
  417e3f:	add    dh,BYTE PTR [ebp+0x6a]
  417e42:	pusha  
  417e43:	imul   edx,DWORD PTR [eax+ebx*4+0x6f3bd46c],0x35
  417e4b:	xlat   BYTE PTR ss:[ebx]
  417e4d:	or     edi,DWORD PTR [edi]
  417e4f:	loope  0x417e59
  417e51:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e53:	cmc    
  417e54:	jnp    0x417dd6
  417e56:	or     DWORD PTR [ecx+edi*4],0xd
  417e5a:	test   al,0x8c
  417e5c:	mov    ebx,0x51106aa6
  417e61:	lea    ebp,[ebx+0x7f]
  417e64:	loopne 0x417eca
  417e66:	mov    eax,ds:0x12f319a7
  417e6b:	jns    0x417df7
  417e6d:	jnp    0x417ed2
  417e6f:	push   ecx
  417e70:	retf   0x8fb0
  417e73:	inc    eax
  417e74:	call   0x435d37ca
  417e79:	cmp    esi,DWORD PTR [eax]
  417e7b:	test   BYTE PTR ds:0xa129c5c7,ch
  417e81:	sbb    esi,esi
  417e83:	ins    BYTE PTR es:[edi],dx
  417e84:	dec    ebx
  417e85:	ret    
  417e86:	dec    edx
  417e87:	psubusb mm6,QWORD PTR [edx-0x4]
  417e8b:	popf   
  417e8c:	pop    ebp
  417e8d:	stc    
  417e8e:	pop    ecx
  417e8f:	sbb    ecx,DWORD PTR [ebx]
  417e91:	imul   ebp,edx,0xe40e9762
  417e97:	jp     0x417e8c
  417e99:	xchg   ebp,eax
  417e9a:	pop    edi
  417e9b:	je     0x417ef2
  417e9d:	push   ds
  417e9e:	mov    fs,WORD PTR [ecx-0x6]
  417ea1:	pop    ss
  417ea2:	cmp    BYTE PTR [ecx+0x3675cc4c],0x7
  417ea9:	bound  ecx,QWORD PTR [edi]
  417eab:	lea    edi,[edi]
  417ead:	push   ecx
  417eae:	fs cmc 
  417eb0:	or     esp,esi
  417eb2:	add    al,ch
  417eb4:	sbb    eax,0xc39e5885
  417eb9:	pop    eax
  417eba:	cmp    DWORD PTR [edx],edi
  417ebc:	sub    ecx,DWORD PTR [edx-0x363304df]
  417ec2:	sbb    DWORD PTR [esi+edx*2+0xb13f66c],esi
  417ec9:	aaa    
  417eca:	xchg   edx,eax
  417ecb:	mov    edi,0x2533c66f
  417ed0:	jl     0x417f48
  417ed2:	lods   eax,DWORD PTR ds:[esi]
  417ed3:	jno    0x417f12
  417ed5:	and    ch,BYTE PTR [eax]
  417ed7:	dec    ecx
  417ed8:	ins    BYTE PTR es:[edi],dx
  417ed9:	imul   edi,DWORD PTR [esi],0xa22d2e11
  417edf:	(bad)  
  417ee1:	dec    edx
  417ee2:	xor    eax,0xa8552908
  417ee7:	stc    
  417ee8:	cmp    esp,DWORD PTR [esi*4+0x6f84d626]
  417eef:	popa   
  417ef0:	lock sub al,BYTE PTR [ebp-0x4c]
  417ef4:	push   ds
  417ef5:	inc    edi
  417ef6:	daa    
  417ef7:	cmp    eax,0x3eeef772
  417efc:	cmc    
  417efd:	push   edi
  417efe:	mov    ds:0x4e2f888b,eax
  417f03:	test   DWORD PTR [edx-0x80],esi
  417f06:	xor    al,0xbb
  417f08:	mov    BYTE PTR [esi-0x4],al
  417f0b:	stc    
  417f0c:	jae    0x417ea8
  417f0e:	sub    DWORD PTR [eax-0x5b18ee67],0x5b
  417f15:	jne    0x417ed6
  417f17:	jae    0x417ed5
  417f19:	sub    al,0xe0
  417f1b:	ins    DWORD PTR es:[edi],dx
  417f1c:	int3   
  417f1d:	add    eax,0x3a170299
  417f22:	or     esi,DWORD PTR [ecx+0x50]
  417f25:	unpckhps xmm7,XMMWORD PTR [ecx]
  417f28:	cld    
  417f29:	pop    edi
  417f2a:	inc    ebp
  417f2b:	jge    0x417f3d
  417f2d:	adc    edx,eax
  417f2f:	mov    bh,0x31
  417f31:	jno    0x417f7d
  417f33:	mov    ds:0xad06e7cf,eax
  417f38:	inc    esp
  417f39:	fs sbb ebx,ebx
  417f3c:	mov    eax,0xcd9389d4
  417f41:	lds    edi,FWORD PTR es:[edi+eax*8-0xb]
  417f46:	jne    0x417ece
  417f48:	repnz inc esp
  417f4a:	stos   DWORD PTR es:[edi],eax
  417f4b:	xchg   ebx,eax
  417f4c:	sub    al,0x4e
  417f4e:	mov    bh,0x22
  417f50:	test   al,0xc
  417f52:	imul   BYTE PTR [esi+0x8907b2c]
  417f58:	pop    ds
  417f59:	pop    ds
  417f5a:	add    esp,DWORD PTR [eax+0x741cc7d3]
  417f60:	pop    ebp
  417f61:	in     eax,0xb8
  417f63:	das    
  417f64:	push   ds
  417f65:	mov    eax,ds:0x2cf849cd
  417f6a:	jnp    0x417f58
  417f6c:	test   BYTE PTR [edx-0x7e],cl
  417f6f:	ret    0x491
  417f72:	sbb    eax,0xc809ae09
  417f77:	mov    cl,0x55
  417f79:	or     BYTE PTR [ebp+0x66483db3],bl
  417f7f:	mov    ds:0xb86d258c,eax
  417f84:	pop    es
  417f85:	push   esp
  417f86:	lods   al,BYTE PTR ds:[esi]
  417f87:	into   
  417f88:	pop    esp
  417f89:	mov    eax,0x37aed432
  417f8e:	dec    ecx
  417f8f:	mov    bl,0x87
  417f91:	(bad)  
  417f92:	cmp    eax,0xbcb227d7
  417f97:	push   esi
  417f98:	xchg   BYTE PTR [edx-0x4a],al
  417f9b:	scas   al,BYTE PTR es:[edi]
  417f9c:	push   0xffffffed
  417f9e:	lods   al,BYTE PTR ss:[esi]
  417fa0:	add    eax,0x8aa24810
  417fa5:	xchg   DWORD PTR [esi+0x57797773],esi
  417fab:	mov    eax,ds:0x148063c3
  417fb0:	dec    ecx
  417fb1:	rcr    BYTE PTR [edx+0x24818150],1
  417fb7:	mov    ds:0x2a87d335,al
  417fbc:	push   ebx
  417fbd:	xchg   esp,eax
  417fbe:	neg    DWORD PTR [ebx+esi*2]
  417fc1:	pop    DWORD PTR cs:[ecx+0x6832683c]
  417fc8:	and    BYTE PTR [esi-0x492aa7fc],cl
  417fce:	dec    esp
  417fcf:	cmp    al,0xc9
  417fd1:	iret   
  417fd2:	and    al,0x48
  417fd4:	repnz sub DWORD PTR [ebx+0x16011344],esp
  417fdb:	in     al,dx
  417fdc:	xchg   ebx,eax
  417fdd:	fucomp st(4)
  417fdf:	push   cs
  417fe0:	mov    esp,0x674d3009
  417fe5:	mov    ?,eax
  417fe7:	test   DWORD PTR ds:[ecx+0x29],eax
  417feb:	push   es
  417fec:	mov    esi,esp
  417fee:	sub    ecx,esp
  417ff0:	adc    ch,BYTE PTR [edi-0x20]
  417ff3:	or     al,0x53
  417ff5:	add    bh,dh
  417ff7:	adc    esi,DWORD PTR [ebx]
  417ff9:	mov    esp,ecx
  417ffb:	or     BYTE PTR [ecx+0x211be0e9],cl
  418001:	cmc    
  418002:	das    
  418003:	xor    BYTE PTR [esp+eax*1+0x14],bh
  418007:	jno    0x417fce
  418009:	xchg   ebx,eax
  41800a:	add    al,0x19
  41800c:	out    dx,al
  41800d:	pop    es
  41800e:	jne    0x418062
  418010:	pop    edi
  418011:	add    DWORD PTR [ecx+0x56c179dd],eax
  418017:	or     eax,0x8218773f
  41801c:	imul   esi,DWORD PTR [esi+0x5071dd4],0x51
  418023:	adc    DWORD PTR [eax],eax
  418025:	test   BYTE PTR [eax+0x65],ah
  418028:	int    0xf
  41802a:	loopne 0x418072
  41802c:	loop   0x41802f
  41802e:	mov    edx,0xf2010c1a
  418033:	(bad)  
  418034:	ss int 0xff
  418037:	scas   al,BYTE PTR es:[edi]
  418038:	icebp  
  418039:	mov    es,WORD PTR [esi-0x7c2979e4]
  41803f:	loop   0x418080
  418041:	or     ecx,DWORD PTR [ecx-0x72f70d59]
  418047:	pop    edx
  418048:	std    
  418049:	dec    edi
  41804a:	or     dl,BYTE PTR ds:0x6e8dbcd
  418050:	jo     0x41805c
  418052:	add    al,0x15
  418054:	or     eax,0x17892b57
  418059:	lock or al,0x8e
  41805c:	sbb    bl,BYTE PTR [esi+0x65]
  41805f:	push   ds
  418060:	sub    ebx,DWORD PTR [esi+0x1f07c0f0]
  418066:	or     eax,0xe00e4a88
  41806b:	push   ebp
  41806c:	std    
  41806d:	ss cmp al,0xf7
  418071:	popa   
  418072:	ja     0x41809a
  418074:	mov    cl,0xb5
  418076:	dec    ebp
  418077:	xor    al,0xfb
  418079:	xor    bh,BYTE PTR [eax]
  41807b:	or     DWORD PTR [ecx],ebp
  41807d:	sbb    ebx,DWORD PTR [edi]
  41807f:	pop    es
  418080:	jb     0x41808c
  418082:	add    ch,0x67
  418085:	jbe    0x418081
  418087:	(bad)  
  418088:	mov    eax,0x4009693a
  41808d:	add    eax,0x4f3d0666
  418092:	push   es
  418093:	add    al,0x7
  418095:	test   esi,ebx
  418097:	sub    ch,0x3e
  41809a:	call   0xd588:0x750604fe
  4180a1:	out    dx,eax
  4180a2:	lods   al,BYTE PTR ds:[esi]
  4180a3:	or     eax,0xdcce8bc7
  4180a8:	mov    cl,0xa1
  4180aa:	in     eax,0x7d
  4180ac:	sbb    eax,0x47a08f3c
  4180b1:	mov    WORD PTR [ecx+0x49874ddf],cs
  4180b7:	adc    ah,bh
  4180b9:	es pop edi
  4180bb:	test   BYTE PTR [eax],0xc
  4180be:	or     BYTE PTR [eax],cl
  4180c0:	push   es
  4180c1:	push   es
  4180c2:	or     al,0x1
  4180c4:	or     ecx,DWORD PTR [edx]
  4180c6:	mov    DWORD PTR [edx],ebp
  4180c8:	add    al,0x5
  4180ca:	or     DWORD PTR [esi+esi*2],eax
  4180cd:	lea    ecx,[ecx+ebp*2+0x17]
  4180d1:	or     ebp,DWORD PTR [eax]
  4180d3:	inc    ebp
  4180d4:	and    al,0x9f
  4180d6:	xor    ch,BYTE PTR [edx]
  4180d8:	inc    ebp
  4180d9:	inc    esi
  4180da:	dec    ebx
  4180db:	push   ecx
  4180dc:	xchg   DWORD PTR [ebx+0x13],ebx
  4180df:	outs   dx,BYTE PTR ds:[esi]
  4180e0:	sub    ch,BYTE PTR [ebp+0x59]
  4180e3:	ja     0x4180ad
  4180e5:	in     eax,dx
  4180e6:	dec    eax
  4180e7:	adc    al,0x8b
  4180e9:	ins    DWORD PTR es:[edi],dx
  4180ea:	in     eax,dx
  4180eb:	fwait
  4180ec:	dec    ebx
  4180ed:	push   ds
  4180ee:	sbb    ch,dh
  4180f0:	xor    eax,0x8907199c
  4180f5:	cmp    ebp,DWORD PTR [eax+0x15299be0]
  4180fb:	or     eax,0x18a2500
  418100:	add    al,0x10
  418102:	mov    cs,WORD PTR [edi]
  418104:	add    DWORD PTR [esi],ebx
  418106:	mov    ecx,DWORD PTR [esi+eax*1]
  418109:	cmc    
  41810a:	sub    ecx,DWORD PTR [esi]
  41810c:	inc    esp
  41810d:	mov    eax,es
  41810f:	mov    gs,esp
  418111:	inc    edi
  418112:	repz hlt 
  418114:	pop    es
  418115:	sbb    al,0xa8
  418117:	jmp    0x8102:0xe2c409ef
  41811e:	nop
  41811f:	push   es
  418120:	cmp    BYTE PTR [ebp-0x2f],0x5a
  418124:	jmp    0xcd488917
  418129:	xor    cl,BYTE PTR [esi]
  41812b:	dec    ebx
  41812c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41812d:	out    dx,eax
  41812e:	or     ebx,DWORD PTR [ecx-0x16]
  418131:	sbb    dh,BYTE PTR [ebx+0x5e4d8311]
  418137:	adc    cl,BYTE PTR [ebx-0x49af4920]
  41813d:	lahf   
  41813e:	call   0x71630e6f
  418143:	pop    ds
  418144:	or     dl,BYTE PTR [ebp-0x11fa31f6]
  41814a:	mov    al,ds:0x8f42dd08
  41814f:	stc    
  418150:	movnti DWORD PTR [edi],esi
  418153:	inc    edi
  418154:	inc    edx
  418155:	repnz stc 
  418157:	xor    BYTE PTR [eax],ah
  418159:	out    0xeb,eax
  41815b:	addr16 xchg ebx,eax
  41815d:	and    edx,DWORD PTR [edx]
  41815f:	xchg   esp,ecx
  418161:	cli    
  418162:	stc    
  418163:	fcmovu st,st(4)
  418165:	or     eax,0x3c2197e
  41816a:	and    DWORD PTR [eax],eax
  41816c:	jge    0x418172
  41816e:	and    DWORD PTR [edx],ebp
  418170:	jno    0x418184
  418172:	fst    DWORD PTR [ecx-0x22eb16ce]
  418178:	push   es
  418179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41817a:	mov    al,0x2b
  41817c:	iret   
  41817d:	popf   
  41817e:	add    eax,0xb887916
  418183:	mov    ch,BYTE PTR [ebx]
  418185:	aam    0x2e
  418187:	pop    ebp
  418188:	mov    ecx,0x170bef39
  41818d:	jmp    0x4585:0x902d9137
  418194:	scas   eax,DWORD PTR es:[edi]
  418195:	and    eax,0xfbd951c0
  41819a:	gs out 0xd6,eax
  41819d:	bound  eax,QWORD PTR [esi-0x68]
  4181a0:	push   ebp
  4181a1:	mov    ebp,0x3ea04e64
  4181a6:	xor    eax,0x917031e1
  4181ab:	xchg   edi,eax
  4181ac:	jb     0x418208
  4181ae:	jge    0x4181f3
  4181b0:	fisub  WORD PTR [ecx]
  4181b2:	sub    DWORD PTR [eax-0x51],ecx
  4181b5:	imul   bl
  4181b7:	rdtsc  
  4181b9:	out    dx,eax
  4181ba:	and    edx,DWORD PTR [esi+0x5f]
  4181bd:	mov    ebp,0xdedad82a
  4181c2:	inc    ebp
  4181c3:	mov    bh,0x5f
  4181c5:	stos   BYTE PTR es:[edi],al
  4181c6:	bound  ebp,QWORD PTR [edx-0x57]
  4181c9:	adc    BYTE PTR [ebx],bl
  4181cb:	push   ecx
  4181cc:	leave  
  4181cd:	(bad)  
  4181ce:	xlat   BYTE PTR ds:[ebx]
  4181cf:	adc    dh,al
  4181d1:	or     BYTE PTR [ebp-0x80],0xd
  4181d5:	cmp    ecx,esp
  4181d7:	jo     0x4181ce
  4181d9:	push   0x9cfe2fa
  4181de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181df:	cdq    
  4181e0:	adc    DWORD PTR [ecx],esi
  4181e2:	cdq    
  4181e3:	push   eax
  4181e4:	push   esp
  4181e5:	or     ah,BYTE PTR [ebp+0x382ed84]
  4181eb:	xor    dh,dh
  4181ed:	sub    dl,bh
  4181ef:	(bad)  
  4181f0:	in     eax,dx
  4181f1:	(bad)  
  4181f3:	je     0x4181f4
  4181f5:	je     0x418274
  4181f7:	clc    
  4181f8:	cmp    edi,DWORD PTR [ebp-0x3b]
  4181fb:	cwde   
  4181fc:	pop    edi
  4181fd:	shr    BYTE PTR [eax-0x27d68be8],0xb7
  418204:	imul   edx,DWORD PTR [eax],0xd4a7ce14
  41820a:	sub    eax,0x323cfd9d
  41820f:	test   BYTE PTR [ebx],bh
  418211:	or     bl,bl
  418213:	add    ecx,0x7ba9e807
  418219:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41821a:	aaa    
  41821b:	add    DWORD PTR [ebx],ebx
  41821d:	pop    es
  41821e:	mov    DWORD PTR [ebx],ecx
  418220:	ret    0xef06
  418223:	dec    edi
  418224:	cwde   
  418225:	pop    ecx
  418226:	pusha  
  418227:	adc    al,0x5
  418229:	inc    ebx
  41822a:	jo     0x4181d5
  41822c:	inc    edx
  41822d:	sub    eax,DWORD PTR [edi+0x714aa710]
  418233:	push   ebx
  418234:	adc    eax,DWORD PTR [edi]
  418236:	mov    edi,DWORD PTR [esi]
  418238:	and    BYTE PTR [esp+ebx*1],ch
  41823b:	sbb    al,0xea
  41823d:	pop    ss
  41823e:	cwde   
  41823f:	push   ds
  418240:	loopne 0x418222
  418242:	push   edx
  418243:	daa    
  418244:	sbb    DWORD PTR [esi],ecx
  418246:	rcl    ecx,cl
  418248:	or     ah,BYTE PTR [edx]
  41824a:	out    0xdc,al
  41824c:	xchg   ecx,eax
  41824d:	outs   dx,BYTE PTR ds:[esi]
  41824e:	sbb    BYTE PTR [ebp+0x3f7678f7],0xaf
  418255:	mov    BYTE PTR [esi],ah
  418257:	adc    dl,BYTE PTR [edx-0x38cda7e0]
  41825d:	ja     0x418239
  41825f:	mov    bl,0x16
  418261:	xor    DWORD PTR [edi],esi
  418263:	imul   BYTE PTR ds:0x323066e4
  418269:	lock aaa 
  41826b:	(bad)  
  41826c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41826d:	ror    BYTE PTR [esi-0x6c0bf5e9],cl
  418273:	fsub   DWORD PTR [edx-0x6]
  418276:	push   es
  418277:	jle    0x41822c
  418279:	or     dh,BYTE PTR [eax-0x38]
  41827c:	inc    esi
  41827d:	aad    0xa9
  41827f:	shl    BYTE PTR [eax-0x53864ed8],0xd5
  418286:	or     edx,edx
  418288:	enter  0x1b06,0xe9
  41828c:	sub    cl,dh
  41828e:	fwait
  41828f:	sti    
  418290:	loope  0x41829f
  418292:	dec    ebx
  418293:	xchg   DWORD PTR ds:0x9792bb5,esi
  418299:	icebp  
  41829a:	push   ebx
  41829b:	dec    esp
  41829c:	adc    cl,BYTE PTR [ecx+0x2a479cfc]
  4182a2:	fnsave [ecx-0x6ff4bb69]
  4182a8:	dec    edi
  4182a9:	xchg   edi,eax
  4182aa:	pushf  
  4182ab:	adc    BYTE PTR [ebx-0x25],cl
  4182ae:	jg     0x4182d1
  4182b0:	and    eax,0x913d049
  4182b5:	xor    DWORD PTR [edi+0xa],ecx
  4182b8:	aas    
  4182b9:	mov    al,BYTE PTR [eax+0x3b]
  4182bc:	das    
  4182bd:	cmp    edx,DWORD PTR [edx-0x19de3cd4]
  4182c3:	and    al,0x39
  4182c5:	stc    
  4182c6:	cmp    eax,0x388629e7
  4182cb:	xchg   ecx,eax
  4182cc:	jl     0x41831b
  4182ce:	clc    
  4182cf:	fldenv [ebx+ecx*1+0x3158991b]
  4182d6:	xor    esi,DWORD PTR [ebp+0x3d]
  4182d9:	dec    edx
  4182da:	pop    es
  4182db:	enter  0x5c58,0x4c
  4182df:	cmp    al,0xa0
  4182e1:	call   FWORD PTR [edx-0x4ab94ca0]
  4182e7:	jo     0x418276
  4182e9:	dec    ebp
  4182ea:	jp     0x418368
  4182ec:	cs ss dec eax
  4182ef:	cld    
  4182f0:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182f2:	stos   BYTE PTR es:[edi],al
  4182f3:	sbb    ecx,esi
  4182f5:	mov    ch,0x62
  4182f7:	sar    BYTE PTR [edi+0x70],1
  4182fa:	rcl    BYTE PTR [eax],1
  4182fc:	adc    edi,DWORD PTR [edi+0x44bed65c]
  418302:	adc    eax,0x274c6aa7
  418307:	jp     0x418364
  418309:	cmp    BYTE PTR ds:0xf5216efe,ch
  41830f:	adc    eax,0x284f675b
  418314:	dec    esi
  418315:	mov    ds:0xdf988b4e,eax
  41831a:	std    
  41831b:	clc    
  41831c:	leave  
  41831d:	pusha  
  41831e:	ss mov ch,0x15
  418321:	fbstp  TBYTE PTR [ecx+0x55]
  418324:	and    DWORD PTR [eax],ebx
  418326:	pop    edx
  418327:	sahf   
  418328:	push   ebx
  418329:	inc    esp
  41832a:	push   ds
  41832b:	call   0xeaaf22a5
  418330:	mov    eax,ds:0x57d3db36
  418335:	mov    eax,0xfa038d86
  41833a:	sub    BYTE PTR [ebp*4+0x446e2097],dl
  418341:	(bad)  
  418343:	lods   eax,DWORD PTR ds:[si]
  418345:	imul   ecx,DWORD PTR [edi],0xffffffac
  418348:	std    
  418349:	sbb    DWORD PTR [edi+0x58],esp
  41834c:	scas   eax,DWORD PTR es:[edi]
  41834d:	adc    al,0x58
  41834f:	pushf  
  418350:	and    ch,0x61
  418353:	or     DWORD PTR [ebx-0x5],eax
  418356:	pusha  
  418357:	mov    al,ds:0x5005dc2a
  41835c:	mov    ebx,ebp
  41835e:	test   al,0x42
  418360:	call   0xdab0:0x811ae8de
  418367:	aas    
  418368:	mov    edi,0xcbb126b0
  41836d:	mov    DWORD PTR [edi],ecx
  41836f:	loope  0x418369
  418371:	lods   eax,DWORD PTR ds:[esi]
  418372:	out    dx,eax
  418373:	enter  0x2fce,0x51
  418377:	cmp    DWORD PTR [ecx+0x12],esp
  41837a:	mov    ds:0xb5deda4d,al
  41837f:	and    al,BYTE PTR [edi]
  418381:	mov    ah,0x95
  418383:	pop    esp
  418384:	in     eax,dx
  418385:	pop    eax
  418386:	stos   DWORD PTR es:[edi],eax
  418387:	(bad)  [eax+0x1]
  41838a:	inc    esp
  41838b:	in     al,dx
  41838c:	cmp    ch,BYTE PTR [edx-0x30]
  41838f:	adc    eax,0xcfe15ee0
  418394:	lods   eax,DWORD PTR ds:[esi]
  418395:	cld    
  418396:	pop    eax
  418397:	push   0xffffffe9
  418399:	jge    0x418330
  41839b:	cwde   
  41839c:	or     al,0x8f
  41839e:	sbb    dh,bl
  4183a0:	aas    
  4183a1:	ds sbb al,0xe4
  4183a4:	push   esi
  4183a5:	xchg   edi,eax
  4183a6:	dec    ebp
  4183a7:	add    DWORD PTR [ebp+0x6bf1da43],ecx
  4183ad:	xor    esi,ebp
  4183af:	idiv   cl
  4183b1:	icebp  
  4183b2:	outs   dx,DWORD PTR ds:[esi]
  4183b3:	or     al,0x81
  4183b5:	imul   ebp,DWORD PTR [ebp+0x58de2fd6],0xe72f699c
  4183bf:	jne    0x41840f
  4183c1:	xchg   edx,eax
  4183c2:	mov    cl,0x12
  4183c4:	test   eax,0x39174aae
  4183c9:	xchg   BYTE PTR [ebx+0x13d5ab66],bh
  4183cf:	pop    ebx
  4183d0:	add    BYTE PTR [esi],dh
  4183d2:	inc    DWORD PTR [ebx-0xa605341]
  4183d8:	loop   0x418430
  4183da:	in     eax,0xdb
  4183dc:	dec    edi
  4183dd:	pop    es
  4183de:	dec    edi
  4183df:	pop    esi
  4183e0:	mov    bh,0x19
  4183e2:	push   ecx
  4183e3:	es push ecx
  4183e5:	xchg   ecx,eax
  4183e6:	fdiv   DWORD PTR [esi+0x564e3191]
  4183ec:	das    
  4183ed:	aam    0x4a
  4183ef:	fisub  WORD PTR ds:0xa7f604f1
  4183f5:	out    0xf1,eax
  4183f7:	adc    ebp,DWORD PTR [eax+0x5f]
  4183fa:	jg     0x41837e
  4183fc:	test   BYTE PTR [eax],al
  4183fe:	aad    0xf7
  418400:	push   edi
  418401:	(bad)  
  418402:	push   eax
  418403:	add    esp,DWORD PTR [edi+0xde48f05]
  418409:	in     al,dx
  41840a:	test   eax,0x2265bc90
  41840f:	jb     0x4183a2
  418411:	(bad)  [esi]
  418413:	mov    ds:0xaeb9c097,eax
  418418:	pop    esp
  418419:	and    DWORD PTR [ebx+0x1b],edx
  41841c:	push   edi
  41841d:	ss adc al,0x21
  418420:	pop    edx
  418421:	rol    DWORD PTR [edx+0x55],1
  418424:	icebp  
  418425:	xchg   esp,eax
  418426:	xchg   DWORD PTR [esi+0x28dfdc02],ecx
  41842c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41842d:	inc    si
  41842f:	leave  
  418430:	fcom   DWORD PTR [ebx]
  418432:	and    BYTE PTR [edx],al
  418434:	aad    0x6
  418436:	dec    ebx
  418437:	fldcw  WORD PTR [edi-0x4]
  41843a:	aad    0x31
  41843c:	into   
  41843d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41843e:	mov    WORD PTR [edi+eiz*2],fs
  418441:	xlat   BYTE PTR ds:[ebx]
  418442:	cmp    al,BYTE PTR [ebp-0x33]
  418445:	lods   eax,DWORD PTR ds:[esi]
  418446:	js     0x4184ad
  418448:	push   0x57
  41844a:	test   eax,0x97195b13
  41844f:	loopne 0x418448
  418451:	adc    ah,BYTE PTR [ecx+0x7f962f26]
  418457:	(bad)  
  418458:	mov    ebp,DWORD PTR [edx+0x3912fab]
  41845e:	ficomp WORD PTR [eax+0x1c]
  418461:	jge    0x4184c1
  418463:	sub    eax,0xb7b29b13
  418468:	inc    edi
  418469:	cmp    eax,0xb82f134a
  41846e:	inc    ecx
  41846f:	mov    al,0x44
  418471:	div    DWORD PTR [esi-0x6adb0753]
  418477:	push   ss
  418478:	inc    ecx
  418479:	stos   DWORD PTR es:[edi],eax
  41847a:	ins    DWORD PTR es:[edi],dx
  41847b:	scas   al,BYTE PTR es:[edi]
  41847c:	cmp    BYTE PTR [edi],dh
  41847e:	mov    ah,0xcd
  418480:	sbb    ebx,DWORD PTR ds:0x4445d1ce
  418486:	xchg   BYTE PTR [ebp-0x62],ch
  418489:	mov    bh,BYTE PTR [ebx]
  41848b:	call   0x9a6f:0x581c6cd9
  418492:	or     DWORD PTR [edx-0x3135958d],eax
  418498:	add    esp,DWORD PTR [esi]
  41849a:	adc    DWORD PTR [edx+0x67],0x7b
  41849e:	dec    edx
  41849f:	mov    al,ds:0x50dc8693
  4184a4:	mov    al,ds:0xa5d519ed
  4184a9:	dec    edx
  4184aa:	sub    bh,BYTE PTR [ecx-0x36]
  4184ad:	sub    dh,BYTE PTR [eax-0x3a8a1170]
  4184b3:	ins    DWORD PTR es:[edi],dx
  4184b4:	xchg   BYTE PTR [edi-0x598be54a],bl
  4184ba:	inc    ebp
  4184bb:	adc    al,0x39
  4184bd:	adc    al,0x6b
  4184bf:	xchg   ebx,eax
  4184c0:	lock sbb eax,0xad9895
  4184c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184c7:	fistp  QWORD PTR [esp+eiz*4+0xd]
  4184cb:	out    dx,eax
  4184cc:	push   cs
  4184cd:	mov    ds:0x8aba4995,eax
  4184d2:	int    0x40
  4184d4:	push   edx
  4184d5:	sbb    eax,0x5722a766
  4184da:	mov    ds,WORD PTR [edx]
  4184dc:	adc    cl,al
  4184de:	test   eax,0xf6f29195
  4184e3:	iret   
  4184e4:	test   al,0x3e
  4184e6:	mov    dh,0xc5
  4184e8:	xchg   DWORD PTR [edx],ebp
  4184ea:	push   esp
  4184eb:	mov    cl,0x48
  4184ed:	inc    esi
  4184ee:	mov    WORD PTR [ebp+eiz*4+0x4c],?
  4184f2:	das    
  4184f3:	sbb    al,0xca
  4184f5:	ror    DWORD PTR ds:0x64fb99e1,1
  4184fb:	out    dx,al
  4184fc:	add    al,0xa5
  4184fe:	xchg   ecx,eax
  4184ff:	dec    ebx
  418500:	xchg   ebp,eax
  418501:	out    0xb8,al
  418503:	fwait
  418504:	pop    edx
  418505:	dec    eax
  418506:	icebp  
  418507:	push   gs
  418509:	mov    ds:0x1f928fc8,al
  41850e:	push   ds
  41850f:	sbb    BYTE PTR [edx+0x6ef8b60f],bl
  418515:	mov    BYTE PTR [ebx-0x50],al
  418518:	and    BYTE PTR [ecx+0x21a9c197],al
  41851e:	call   0xc2ae:0x6b0f7d61
  418525:	inc    eax
  418526:	cdq    
  418527:	cmp    DWORD PTR [esi+ebp*4-0x7b],ecx
  41852b:	and    eax,0xa7529b33
  418530:	ja     0x41857a
  418532:	stos   BYTE PTR es:[edi],al
  418533:	stc    
  418534:	add    dl,BYTE PTR [ecx]
  418536:	push   edi
  418537:	xchg   edx,eax
  418538:	mov    edi,0xa93285a9
  41853d:	imul   ecx,DWORD PTR ds:0xb8f73992,0xd0a0108c
  418547:	shl    BYTE PTR gs:[edi-0x66b316fc],1
  41854e:	fnsave [ecx-0x2b]
  418551:	and    al,0x5
  418553:	pop    eax
  418554:	pop    esi
  418555:	(bad)  [ecx+0x71]
  418558:	dec    esp
  418559:	pop    es
  41855a:	sub    al,0xba
  41855c:	daa    
  41855d:	pop    es
  41855e:	jae    0x418523
  418560:	pushf  
  418561:	dec    ecx
  418562:	sbb    BYTE PTR [esi-0x64],dh
  418565:	dec    ecx
  418566:	jns    0x418581
  418568:	or     ebx,DWORD PTR ds:0xc9527f8a
  41856e:	push   esp
  41856f:	add    ah,0x5f
  418572:	fistp  WORD PTR [ebp+0x2a9aa6c8]
  418578:	jmp    0x4185a8
  41857a:	dec    esp
  41857b:	push   ecx
  41857c:	ins    BYTE PTR es:[edi],dx
  41857d:	mov    bl,0x8e
  41857f:	jmp    0xb506:0xd74d59b
  418586:	xchg   edx,eax
  418587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418588:	int3   
  418589:	je     0x4185ed
  41858b:	and    ch,bh
  41858d:	ins    DWORD PTR es:[edi],dx
  41858e:	mov    bl,0x0
  418590:	inc    ebx
  418591:	out    dx,eax
  418592:	jg     0x418571
  418594:	jb     0x41860e
  418596:	les    eax,FWORD PTR [ecx]
  418598:	popa   
  418599:	(bad)  
  41859a:	(bad)  
  41859b:	and    al,0x5b
  41859d:	out    dx,al
  41859e:	and    eax,0xf4d79da
  4185a3:	dec    ebx
  4185a4:	imul   esp,DWORD PTR ds:0x187aed55,0xffffffad
  4185ab:	shl    BYTE PTR [eax-0x1c],cl
  4185ae:	fistp  DWORD PTR [edi-0x71]
  4185b1:	out    dx,al
  4185b2:	dec    esp
  4185b3:	xchg   ebp,eax
  4185b4:	out    0xc6,al
  4185b6:	in     al,dx
  4185b7:	or     eax,0xe4d60baa
  4185bc:	and    BYTE PTR [ebx],bl
  4185be:	add    cl,al
  4185c0:	jae    0x4185c3
  4185c2:	out    dx,al
  4185c3:	fisttp DWORD PTR [edi]
  4185c5:	das    
  4185c6:	jnp    0x4185cd
  4185c8:	add    DWORD PTR [eax+0x5809db34],eax
  4185ce:	xchg   esp,eax
  4185cf:	and    al,BYTE PTR [ecx-0x45116e74]
  4185d5:	push   ds
  4185d6:	lods   eax,DWORD PTR ds:[esi]
  4185d7:	fcmovb st,st(3)
  4185d9:	add    dh,BYTE PTR [ecx]
  4185db:	in     al,0x64
  4185dd:	es stc 
  4185df:	xchg   DWORD PTR [esi],eax
  4185e1:	or     DWORD PTR [ecx+0x52],ebx
  4185e4:	inc    ebp
  4185e5:	ins    DWORD PTR es:[edi],dx
  4185e6:	dec    eax
  4185e7:	push   eax
  4185e8:	imul   ecx,DWORD PTR [esi+0x1f],0x4f
  4185ec:	imul   edi,DWORD PTR [esi-0x42],0xb72367cc
  4185f3:	and    ah,BYTE PTR [ebp+0x4f]
  4185f6:	data16 outs dx,BYTE PTR ds:[esi]
  4185f8:	cli    
  4185f9:	cmp    DWORD PTR [ebp-0x28],esi
  4185fc:	and    BYTE PTR [ebx],bl
  4185fe:	lahf   
  4185ff:	hlt    
  418600:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418601:	out    0xe3,al
  418603:	dec    ebp
  418604:	mov    dl,BYTE PTR [ebp-0x3b7bdeed]
  41860a:	push   0x40
  41860c:	popf   
  41860d:	aas    
  41860e:	jno    0x4185e1
  418610:	xchg   esi,esi
  418612:	xor    edi,eax
  418614:	add    bl,BYTE PTR [ebp+0x10829f0]
  41861a:	xor    al,cl
  41861c:	sub    al,0xcc
  41861e:	mov    ds:0x967444f3,al
  418623:	pop    esi
  418624:	adc    edi,eax
  418626:	dec    ebp
  418627:	pop    edx
  418628:	cmp    al,al
  41862a:	iret   
  41862b:	lea    ebx,[ebx+eax*1]
  41862e:	out    0xe0,al
  418630:	mov    ?,ebp
  418632:	retf   
  418633:	adc    BYTE PTR [esp+eiz*2-0x6c],bl
  418637:	andps  xmm0,XMMWORD PTR [ebx]
  41863a:	dec    edi
  41863b:	adc    DWORD PTR [ebx],esp
  41863d:	mov    edx,0x2409383e
  418642:	jnp    0x4185cb
  418644:	cmp    al,0xa1
  418646:	cwde   
  418647:	adc    dl,BYTE PTR [edi-0x4b]
  41864a:	ss push eax
  41864c:	inc    eax
  41864d:	xchg   esp,eax
  41864e:	push   0xab3839a0
  418653:	pop    ds
  418654:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418655:	enter  0x26ed,0x4b
  418659:	sub    BYTE PTR [ecx-0x52],dh
  41865c:	mov    edi,0x559dfbd1
  418661:	loopne 0x4186dd
  418663:	aas    
  418664:	push   esi
  418665:	pop    eax
  418666:	aas    
  418667:	push   ecx
  418668:	add    bh,BYTE PTR [eax+0x39]
  41866b:	cmp    ah,BYTE PTR [edi+0x1]
  41866e:	es mov eax,0x45b158a2
  418674:	xor    ch,BYTE PTR [edi+0x6a9320fb]
  41867a:	add    DWORD PTR [eax],0x1d
  41867d:	mov    ebx,0x50351a23
  418682:	push   ds
  418683:	xchg   DWORD PTR [edx-0x20],ecx
  418686:	mov    edi,0x1e19c750
  41868b:	test   eax,0x1e4c824d
  418690:	in     eax,dx
  418691:	or     DWORD PTR [edi+0xb616ce6],edi
  418697:	sub    edx,DWORD PTR [ebx+0x258e0b84]
  41869d:	xor    eax,0x1a8102ac
  4186a2:	sbb    eax,0x47dd9885
  4186a7:	mov    ah,0xd8
  4186a9:	or     esi,DWORD PTR [edi]
  4186ab:	fistp  WORD PTR [edi+ebp*1-0x27]
  4186af:	jg     0x4186f7
  4186b1:	pop    eax
  4186b2:	mov    dl,0x6c
  4186b4:	xlat   BYTE PTR ds:[ebx]
  4186b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186b6:	cmp    eax,0x199459ad
  4186bb:	cld    
  4186bc:	mov    ebp,fs
  4186be:	das    
  4186bf:	sub    BYTE PTR [ecx-0x2fbecd2f],bl
  4186c5:	daa    
  4186c6:	mov    al,ds:0xd985d092
  4186cb:	out    0x94,al
  4186cd:	cmp    ah,dl
  4186cf:	push   0xffffffc0
  4186d1:	cmp    dh,BYTE PTR [ebp-0x15f435e5]
  4186d7:	test   BYTE PTR [ebx+0x61],al
  4186da:	dec    ebx
  4186db:	adc    BYTE PTR [esi],ah
  4186dd:	mov    bh,0x35
  4186df:	sbb    eax,0x47669749
  4186e4:	adc    al,BYTE PTR [eax+0x1f]
  4186e7:	dec    ebp
  4186e8:	mov    ds:0x773b4eef,al
  4186ed:	bound  ebx,QWORD PTR [ecx+0x41]
  4186f0:	add    DWORD PTR [edi-0x3731c56e],edx
  4186f6:	ins    BYTE PTR es:[edi],dx
  4186f7:	ret    
  4186f8:	and    DWORD PTR [edi+edx*1],ebx
  4186fb:	aad    0x75
  4186fd:	add    eax,0xbc004438
  418702:	push   ds
  418703:	adc    eax,DWORD PTR [edi]
  418705:	add    al,BYTE PTR [ebx-0x764df902]
  41870b:	out    0x92,eax
  41870d:	mov    ebp,esi
  41870f:	pop    ds
  418710:	fmul   DWORD PTR [ebx-0x5e]
  418713:	sub    dl,BYTE PTR [edx]
  418715:	fnstcw WORD PTR [ebx+0x46]
  418718:	xor    ch,ch
  41871a:	sbb    DWORD PTR [esp+ecx*8+0x62d6b721],edx
  418721:	je     0x41872b
  418723:	mov    ds,WORD PTR [ebp+ebx*4-0x4fb7b371]
  41872a:	mov    ds:0x53044ac8,al
  41872f:	call   0x2159:0x81ce1204
  418736:	push   es
  418737:	xchg   esi,eax
  418738:	adc    edi,DWORD PTR [eax]
  41873a:	xchg   edi,eax
  41873b:	mov    bh,0x2d
  41873d:	sbb    edi,DWORD PTR ds:0x27cda646
  418743:	sahf   
  418744:	and    eax,0x30258105
  418749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41874a:	ins    BYTE PTR es:[edi],dx
  41874b:	(bad)  
  41874c:	sbb    esi,DWORD PTR [edi]
  41874e:	xchg   ebx,eax
  41874f:	jmp    0x8c9b:0x1f950d2e
  418756:	iret   
  418757:	mov    al,0xe5
  418759:	pop    ebp
  41875a:	cdq    
  41875b:	sub    ah,dl
  41875d:	pusha  
  41875e:	jge    0x4187c4
  418760:	jmp    0xadc6:0x702e3066
  418767:	inc    ecx
  418768:	rep ins BYTE PTR es:[edi],dx
  41876a:	jl     0x4187ea
  41876c:	add    ebp,DWORD PTR [eax+0x6e]
  41876f:	and    ah,BYTE PTR [ecx+0x71]
  418772:	(bad)  
  418773:	outs   dx,BYTE PTR ds:[esi]
  418774:	push   0x4962f787
  418779:	out    0x49,al
  41877b:	call   0x1cb725ca
  418780:	cmp    BYTE PTR [esi-0x8],dl
  418783:	jp     0x418722
  418785:	pop    ss
  418786:	jae    0x41874a
  418788:	data16 sbb ah,BYTE PTR [ebp+ebx*2-0x1a275ba8]
  418790:	and    esi,DWORD PTR [edi+0x5f091436]
  418796:	jmp    0xec9374e0
  41879b:	inc    eax
  41879c:	mov    al,ds:0x832f411f
  4187a1:	jnp    0x4187ac
  4187a3:	adc    DWORD PTR [esi-0x25],eax
  4187a6:	jns    0x4187b8
  4187a8:	and    al,0x93
  4187aa:	das    
  4187ab:	ja     0x4187a0
  4187ad:	cmp    al,0xde
  4187af:	aaa    
  4187b0:	push   ecx
  4187b1:	loop   0x41878e
  4187b3:	call   0x133:0xdc36c30e
  4187ba:	mov    bl,BYTE PTR [ebx]
  4187bc:	cli    
  4187bd:	pop    ds
  4187be:	call   0x8984:0x905551bd
  4187c5:	pusha  
  4187c6:	aaa    
  4187c7:	aam    0x18
  4187c9:	or     DWORD PTR [ebx],0x2f297191
  4187cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187d0:	jecxz  0x4187de
  4187d2:	arpl   WORD PTR [esi-0x6515d2a9],si
  4187d8:	aaa    
  4187d9:	sub    al,0x9d
  4187db:	fcom   QWORD PTR cs:[ebx+0x26970fc4]
  4187e2:	int3   
  4187e3:	pop    esp
  4187e4:	push   edi
  4187e5:	pop    ebp
  4187e6:	adc    eax,0x5550b11b
  4187eb:	pop    esi
  4187ec:	mov    eax,0x88a94cb2
  4187f1:	frstor [ebx+0x30a92c7a]
  4187f7:	xchg   BYTE PTR [edx],cl
  4187f9:	cmp    ebx,DWORD PTR [ebp-0x3d]
  4187fc:	je     0x4187a7
  4187fe:	ss stos BYTE PTR es:[edi],al
  418800:	inc    ebx
  418801:	scas   al,BYTE PTR es:[edi]
  418802:	lds    esp,FWORD PTR [ebx]
  418804:	xor    BYTE PTR ds:0x5972d949,dl
  41880a:	inc    eax
  41880b:	dec    esp
  41880c:	lods   eax,DWORD PTR ds:[esi]
  41880d:	xchg   BYTE PTR [edx-0x5d],dh
  418810:	je     0x41884c
  418812:	scas   eax,DWORD PTR es:[edi]
  418813:	xor    bl,BYTE PTR [edi]
  418815:	or     BYTE PTR [edi+edx*2],dh
  418818:	test   ebx,esi
  41881a:	sahf   
  41881b:	ins    DWORD PTR es:[edi],dx
  41881c:	jmp    0x933:0x5fcf9a4e
  418823:	loop   0x418876
  418825:	xor    al,0x5f
  418827:	sub    cl,bh
  418829:	fwait
  41882a:	inc    esi
  41882b:	mov    edi,0x7f513193
  418830:	xor    DWORD PTR [edi-0x11a66a76],edi
  418836:	xchg   edi,eax
  418837:	fwait
  418838:	xor    ch,BYTE PTR [edi]
  41883a:	mov    ds,WORD PTR [eax-0x7f3596ab]
  418840:	sub    edi,0x9b1a5198
  418846:	xchg   BYTE PTR [ebp+eiz*1-0x67f59c6b],dh
  41884d:	adc    eax,0x6290e62b
  418852:	out    0x98,al
  418854:	adc    DWORD PTR [edx],ebp
  418856:	fist   DWORD PTR [eax-0x3162dd36]
  41885c:	mov    ch,0x9b
  41885e:	sbb    DWORD PTR [edx+0x2d738c91],edi
  418864:	adc    DWORD PTR [edi+edi*2],ebp
  418867:	enter  0x75af,0xa8
  41886b:	adc    al,0xd6
  41886d:	jno    0x418862
  41886f:	mov    ds:0x6a6b13fb,eax
  418874:	daa    
  418875:	outs   dx,BYTE PTR ds:[esi]
  418876:	(bad)  
  418877:	inc    esi
  418878:	in     eax,dx
  418879:	out    dx,eax
  41887a:	add    edx,DWORD PTR ds:0x40973223
  418880:	fidivr DWORD PTR ds:0x146c2ca0
  418886:	dec    ecx
  418887:	aam    0x92
  418889:	in     al,0xbc
  41888b:	pop    esi
  41888c:	jb     0x3bc6dd39
  418892:	xchg   ebp,eax
  418893:	js     0x418851
  418895:	dec    edi
  418896:	sti    
  418897:	lods   eax,DWORD PTR ds:[esi]
  418898:	inc    edx
  418899:	dec    ebp
  41889a:	and    cl,BYTE PTR [ebp-0x4c0c7679]
  4188a0:	pop    ss
  4188a1:	mov    al,ds:0x9545861b
  4188a6:	(bad)  
  4188a7:	into   
  4188a8:	mov    bh,0x43
  4188aa:	call   0x8dc7:0x8ca8330a
  4188b1:	jnp    0x4188a0
  4188b3:	and    al,BYTE PTR [edi-0x6c602cd6]
  4188b9:	ds push edx
  4188bb:	ret    
  4188bc:	shl    BYTE PTR [ecx],0xae
  4188bf:	or     ah,BYTE PTR [edi+edx*8+0x3b81998d]
  4188c6:	add    BYTE PTR [esi+0x364da61d],cl
  4188cc:	inc    eax
  4188cd:	mul    BYTE PTR [ecx+esi*4]
  4188d0:	and    eax,0x419bff0a
  4188d5:	mov    esi,0x1c9d6710
  4188da:	mov    ds:0x972c1218,al
  4188df:	inc    ebp
  4188e0:	mov    DWORD PTR [ecx-0x3a4c8e6f],0x18b81989
  4188ea:	jg     0x418960
  4188ec:	mov    al,BYTE PTR [eax+0x6]
  4188ef:	fiadd  WORD PTR ds:0xc13c822e
  4188f5:	xor    edi,DWORD PTR [ebp-0x177d1b55]
  4188fb:	jno    0x41897a
  4188fd:	dec    esp
  4188fe:	imul   ebx,DWORD PTR [ecx+0x74906ed6],0xb023ff3e
  418908:	dec    ebx
  418909:	arpl   WORD PTR [eax-0x436bdcb5],si
  41890f:	test   BYTE PTR [ecx+ecx*1-0x73],0x22
  418914:	jns    0x4188c2
  418916:	retf   0x4087
  418919:	push   cs
  41891a:	sbb    eax,0x4b28c77b
  41891f:	inc    ecx
  418920:	ret    0x23c
  418923:	in     eax,dx
  418924:	mov    bl,0x4b
  418926:	sub    edx,DWORD PTR [ecx+0x1a]
  418929:	jmp    0xeecb:0x3f9e5cf6
  418930:	les    esi,FWORD PTR [esp+edi*2]
  418933:	or     DWORD PTR [edx-0x4921ee59],0x6d288d44
  41893d:	mov    ah,0x34
  41893f:	aad    0xb7
  418941:	jmp    0x418917
  418943:	in     al,0xa2
  418945:	(bad)  
  418946:	retf   
  418947:	cwde   
  418948:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418949:	xor    bh,ch
  41894b:	leave  
  41894c:	inc    edi
  41894d:	inc    ebp
  41894e:	test   al,0x2e
  418950:	aam    0x6b
  418952:	or     eax,0xb9409ef4
  418957:	adc    eax,0x178aa269
  41895c:	pop    edi
  41895d:	add    ebp,DWORD PTR [eax+0x29c4a484]
  418963:	fsub   QWORD PTR [eax]
  418965:	mov    al,0x63
  418967:	sbb    BYTE PTR [ecx-0xf2e86c9],dh
  41896d:	cmp    al,0xe5
  41896f:	dec    ebx
  418970:	sbb    BYTE PTR [edi],bh
  418972:	or     ch,BYTE PTR [eax+0x7e]
  418975:	bound  edi,QWORD PTR [ebx+0x1d]
  418978:	push   ecx
  418979:	in     al,dx
  41897a:	or     esp,DWORD PTR [edx+0x77]
  41897d:	sbb    esp,ebp
  41897f:	(bad)  
  418980:	hlt    
  418981:	mov    ebp,0xa20483cb
  418986:	and    al,0xe3
  418988:	mov    eax,0x399de181
  41898d:	test   ebp,eax
  41898f:	xchg   esp,eax
  418990:	fbld   TBYTE PTR [ecx-0x59]
  418993:	sbb    DWORD PTR [edx-0x29],ecx
  418996:	pop    ebp
  418997:	pop    ebx
  418998:	mov    ebp,0x89879c5c
  41899d:	pop    ds
  41899e:	mov    dh,0x97
  4189a0:	test   DWORD PTR [edi+0x6fcd498f],ebx
  4189a6:	push   edi
  4189a7:	mov    al,ds:0x344e381b
  4189ac:	pop    eax
  4189ad:	or     eax,0x3f1e3186
  4189b2:	dec    esi
  4189b3:	fs mov ch,0xc4
  4189b6:	adc    eax,0x572b731
  4189bb:	loopne 0x418a00
  4189bd:	aas    
  4189be:	mov    ebx,0x823b4525
  4189c3:	inc    edi
  4189c4:	xor    bh,dh
  4189c6:	popa   
  4189c7:	and    DWORD PTR [eax],esp
  4189c9:	dec    edi
  4189ca:	scas   eax,DWORD PTR es:[edi]
  4189cb:	pushf  
  4189cc:	loope  0x4189f6
  4189ce:	ss and eax,0xac473a98
  4189d4:	lods   eax,DWORD PTR ds:[esi]
  4189d5:	inc    edi
  4189d6:	pushf  
  4189d7:	push   ds
  4189d8:	sbb    eax,0xc1fea095
  4189dd:	or     eax,DWORD PTR [ebp-0x413f33be]
  4189e3:	retf   0xb3e
  4189e6:	dec    edi
  4189e7:	and    DWORD PTR [esi-0x68],ecx
  4189ea:	push   cs
  4189eb:	xchg   ebx,eax
  4189ec:	dec    ebx
  4189ed:	dec    ebx
  4189ee:	sbb    al,0x69
  4189f0:	shl    dh,1
  4189f2:	fs lahf 
  4189f4:	xchg   esi,eax
  4189f5:	dec    ecx
  4189f6:	call   0x8218e671
  4189fb:	ja     0x418a1c
  4189fd:	sub    BYTE PTR [eax+eax*1-0x33c8da09],ah
  418a04:	cmp    dh,ah
  418a06:	leave  
  418a07:	pushf  
  418a08:	push   edi
  418a09:	dec    ecx
  418a0a:	adc    ah,BYTE PTR [ecx]
  418a0c:	daa    
  418a0d:	jmp    0x2c97d7cf
  418a12:	stos   BYTE PTR es:[edi],al
  418a13:	pushf  
  418a14:	push   ds
  418a15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a16:	and    BYTE PTR [esi-0x7a94f269],bl
  418a1c:	dec    esi
  418a1d:	stc    
  418a1e:	pop    ds
  418a1f:	jb     0x4189d7
  418a21:	push   ds
  418a22:	mov    gs,esi
  418a24:	cmp    BYTE PTR [edx],0xc1
  418a27:	pop    esp
  418a28:	sbb    cl,dl
  418a2a:	xchg   edi,eax
  418a2b:	and    BYTE PTR [ebx-0x36],0xa1
  418a2f:	xor    ch,BYTE PTR [esi]
  418a31:	shr    BYTE PTR [esi+0xe94c12f],1
  418a37:	ds lahf 
  418a39:	push   esp
  418a3a:	add    eax,0xe6a6ef5a
  418a3f:	add    BYTE PTR ds:0x1ec1cbdd,dl
  418a45:	retf   
  418a46:	push   edi
  418a47:	cmp    dh,BYTE PTR [esi-0x4f]
  418a4a:	cmp    dl,BYTE PTR [ebx]
  418a4c:	mov    esp,ds
  418a4e:	loop   0x418a60
  418a50:	sti    
  418a51:	xchg   ebx,eax
  418a52:	cmc    
  418a53:	adc    BYTE PTR [esi],ah
  418a55:	adc    ebp,DWORD PTR [ecx+0x26]
  418a58:	popf   
  418a59:	retf   0xdd7e
  418a5c:	std    
  418a5d:	dec    esi
  418a5e:	xor    al,0x59
  418a60:	adc    al,0x63
  418a62:	jnp    0x418a84
  418a64:	shr    al,cl
  418a66:	arpl   WORD PTR [eax+edx*4-0x3a],cx
  418a6a:	std    
  418a6b:	inc    ecx
  418a6c:	xor    al,0x8e
  418a6e:	gs sub al,0xe
  418a71:	cli    
  418a72:	lock xchg ebx,eax
  418a74:	cmp    eax,0xccc3b521
  418a79:	cmp    BYTE PTR [ebp-0x72],ah
  418a7c:	(bad)  
  418a7e:	push   eax
  418a7f:	(bad)  
  418a80:	jns    0x418a77
  418a82:	add    esp,DWORD PTR [edx+edx*1+0x57109ae3]
  418a89:	mov    al,ds:0xa6721e37
  418a8e:	jg     0x418a1d
  418a90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a91:	ret    0x3700
  418a94:	inc    esp
  418a95:	retf   
  418a96:	mov    DWORD PTR [eax+0x1874ef25],ebx
  418a9c:	xchg   esi,eax
  418a9d:	xlat   BYTE PTR ds:[ebx]
  418a9e:	loope  0x418a6d
  418aa0:	scas   al,BYTE PTR es:[edi]
  418aa1:	adc    dh,ah
  418aa3:	adc    al,0x1
  418aa5:	inc    edx
  418aa6:	xchg   edx,eax
  418aa7:	into   
  418aa8:	test   ah,ah
  418aaa:	xchg   edx,eax
  418aab:	aaa    
  418aac:	cld    
  418aad:	pushf  
  418aae:	or     ecx,eax
  418ab0:	inc    ebx
  418ab1:	(bad)  
  418ab2:	ror    DWORD PTR [edx+0x313f3868],1
  418ab8:	sahf   
  418ab9:	dec    esp
  418aba:	cli    
  418abb:	xchg   esi,eax
  418abc:	popa   
  418abd:	mov    edi,0xa227f117
  418ac2:	cmp    edx,DWORD PTR [eax-0x73]
  418ac5:	adc    BYTE PTR [ecx+0xe],cl
  418ac8:	cmp    eax,0x80aa5db8
  418acd:	sub    ah,ch
  418acf:	and    cl,BYTE PTR [esi+eax*8+0x1af5a12b]
  418ad6:	or     cl,BYTE PTR [edi]
  418ad8:	jae    0x418a99
  418ada:	mov    eax,ds:0x282a8a9d
  418adf:	sub    ah,BYTE PTR [ebx-0x4a]
  418ae2:	xor    ebp,DWORD PTR [edi]
  418ae4:	add    BYTE PTR [edi-0x2b],ch
  418ae7:	sbb    ecx,esp
  418ae9:	rcl    DWORD PTR [edi+0x7b5261bb],cl
  418aef:	nop
  418af0:	push   ss
  418af1:	xor    BYTE PTR [edi+edi*8+0x9a0a858],cl
  418af8:	mov    al,ds:0xa96005af
  418afd:	add    BYTE PTR [eax+0xb],dl
  418b00:	jbe    0x418a8a
  418b02:	lea    eax,[ecx]
  418b04:	dec    edi
  418b05:	cmp    DWORD PTR ds:0xa5a2b55,ebx
  418b0b:	pop    esp
  418b0c:	inc    esi
  418b0d:	sbb    eax,0x467ff6de
  418b12:	mov    edx,0x21729c96
  418b17:	or     al,0x7b
  418b19:	xor    al,0x1e
  418b1b:	out    dx,eax
  418b1c:	hlt    
  418b1d:	mov    ebp,0xe72f34a3
  418b22:	and    DWORD PTR [edi+ebp*2+0x78],0x8
  418b27:	push   eax
  418b28:	ret    0x5fe0
  418b2b:	in     eax,dx
  418b2c:	jecxz  0x418af5
  418b2e:	adc    BYTE PTR [edi],0x46
  418b31:	adc    eax,0x25fb5357
  418b36:	inc    esp
  418b37:	sbb    BYTE PTR [ebx],dh
  418b39:	add    al,0xe
  418b3b:	call   0xfd69:0x40ef4c91
  418b42:	scas   eax,DWORD PTR es:[edi]
  418b43:	add    dh,al
  418b45:	xchg   edx,eax
  418b46:	lea    ecx,[esi-0x78ef0cae]
  418b4c:	mov    cs:0xa6928d3f,al
  418b52:	cmp    DWORD PTR [edx-0x193c00b5],0x18
  418b59:	add    DWORD PTR [ebx+0x6fb90074],ebx
  418b5f:	dec    ebp
  418b60:	mov    edi,0x9ac213d
  418b65:	mov    ch,0x3c
  418b67:	sbb    esp,ebp
  418b69:	cs jmp 0x6d57:0xf5c0c5c9
  418b71:	jne    0x418bd5
  418b73:	jg     0x418bda
  418b75:	add    eax,0x567b7d4b
  418b7a:	je     0x418be1
  418b7c:	mov    ds:0xed525881,al
  418b81:	jo     0x418b8a
  418b83:	repnz ins BYTE PTR es:[edi],dx
  418b85:	pop    ss
  418b86:	pop    ebx
  418b87:	and    DWORD PTR [ebx],0xc78688f9
  418b8d:	xor    ax,0x8e5d
  418b91:	mov    esp,0x5cb06dfd
  418b96:	push   ebx
  418b97:	pop    ds
  418b98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b99:	bound  eax,QWORD PTR es:[edi-0x65]
  418b9d:	mov    edx,0xaa5e8151
  418ba2:	dec    eax
  418ba3:	scas   al,BYTE PTR es:[edi]
  418ba4:	retf   
  418ba5:	jmp    0x418bbe
  418ba7:	shl    ah,1
  418ba9:	add    eax,0x8803160
  418bae:	inc    esi
  418baf:	and    edi,DWORD PTR [edi+edx*2]
  418bb2:	stos   DWORD PTR es:[edi],eax
  418bb3:	aad    0xa1
  418bb5:	mov    eax,0x178fccb8
  418bba:	mov    ebp,DWORD PTR [esi+ecx*1]
  418bbd:	gs sub al,0x7
  418bc1:	jg     0x418c05
  418bc3:	cmp    eax,0x9c0d6c04
  418bc8:	aas    
  418bc9:	xchg   ebx,eax
  418bca:	ja     0x418c2d
  418bcc:	cmp    al,0x4a
  418bce:	push   0x20
  418bd0:	nop
  418bd1:	sbb    BYTE PTR ds:[edx+0x5daf8a55],cl
  418bd8:	scas   al,BYTE PTR es:[edi]
  418bd9:	daa    
  418bda:	hlt    
  418bdb:	js     0x418c04
  418bdd:	lods   eax,DWORD PTR ds:[esi]
  418bde:	pop    esi
  418bdf:	jp     0xcee8937
  418be5:	inc    edi
  418be6:	adc    cl,BYTE PTR [edi+esi*1-0x26]
  418bea:	pushf  
  418beb:	jnp    0x418c48
  418bed:	pop    ecx
  418bee:	mov    ds:0x374ff021,al
  418bf3:	pop    es
  418bf4:	and    bh,BYTE PTR [eax+0x1]
  418bf7:	dec    esi
  418bf8:	fdivr  DWORD PTR [eax]
  418bfa:	popf   
  418bfb:	pop    ds
  418bfc:	inc    edi
  418bfd:	push   es
  418bfe:	stos   DWORD PTR es:[edi],eax
  418bff:	jmp    0x569b:0xcf2cb737
  418c06:	adc    eax,0xc8fb3130
  418c0b:	loope  0x418bb9
  418c0d:	test   BYTE PTR ss:[edx-0x71ee69d0],ch
  418c14:	inc    ebp
  418c15:	or     ebp,DWORD PTR [eax-0x7]
  418c18:	inc    eax
  418c19:	loop   0x418bfb
  418c1b:	adc    ecx,esp
  418c1d:	dec    esi
  418c1e:	shl    DWORD PTR [esi-0x1cb2555b],0x87
  418c25:	fwait
  418c26:	aad    0xa7
  418c28:	call   0x4396:0x4c4c1cc3
  418c2f:	lods   eax,DWORD PTR ds:[esi]
  418c30:	fld    st(2)
  418c32:	stc    
  418c33:	sub    BYTE PTR [edx-0x17ea1e9d],al
  418c39:	imul   ecx,DWORD PTR [eax-0x1fc81e98],0xffffffc0
  418c40:	popa   
  418c41:	daa    
  418c42:	cmp    DWORD PTR [edx+ecx*4],ebx
  418c45:	stos   BYTE PTR es:[edi],al
  418c46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c47:	jecxz  0x418c25
  418c49:	dec    eax
  418c4a:	cmc    
  418c4b:	ins    DWORD PTR es:[edi],dx
  418c4c:	sbb    dh,0xea
  418c4f:	jae    0x418cd0
  418c51:	sbb    BYTE PTR [ebp+0x37e44b95],dh
  418c57:	mov    DWORD PTR [edi],esp
  418c59:	fisubr WORD PTR [ebx+0x44]
  418c5c:	ret    0x295a
  418c5f:	adc    ch,BYTE PTR [ebx-0x15]
  418c62:	ins    DWORD PTR es:[edi],dx
  418c63:	push   esp
  418c64:	mov    bh,0xc5
  418c66:	je     0x418c19
  418c68:	ret    0x1056
  418c6b:	mov    ds:0x707b1933,eax
  418c70:	mov    eax,DWORD PTR [ecx]
  418c72:	loope  0x418c84
  418c74:	pop    edx
  418c75:	dec    ebp
  418c76:	test   DWORD PTR [edx+0xc],0xa4fa1edf
  418c7d:	ret    0xc05d
  418c80:	inc    ebp
  418c81:	adc    bx,WORD PTR [eax+0x4c1b3530]
  418c88:	mov    ebx,0x58893f92
  418c8d:	adc    al,0x3c
  418c8f:	lea    esp,[edi-0x54ea1fe3]
  418c95:	mov    ds:0xaa90d4ed,eax
  418c9a:	ins    DWORD PTR es:[edi],dx
  418c9b:	lahf   
  418c9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c9d:	adc    ecx,DWORD PTR [edi]
  418c9f:	xchg   edx,eax
  418ca0:	add    eax,0x21af6c82
  418ca5:	pop    es
  418ca6:	mov    BYTE PTR [ebx],ah
  418ca8:	outs   dx,DWORD PTR ds:[esi]
  418ca9:	sub    ecx,ecx
  418cab:	outs   dx,DWORD PTR ds:[esi]
  418cac:	push   esp
  418cad:	stos   BYTE PTR es:[edi],al
  418cae:	adc    BYTE PTR [ebp-0x650134ef],dl
  418cb4:	sub    BYTE PTR [eax],dl
  418cb6:	mov    esp,0x7d68cac8
  418cbb:	call   0xa3a0661d
  418cc0:	retf   0x908b
  418cc3:	inc    ebp
  418cc4:	fcom   DWORD PTR [edx]
  418cc6:	sub    eax,0xcda9cbc5
  418ccb:	mov    dl,0x8f
  418ccd:	push   es
  418cce:	jmp    0x45e:0xa0d12e77
  418cd5:	push   es
  418cd6:	mov    BYTE PTR [ecx+0x19],0x2c
  418cda:	inc    ebx
  418cdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cdc:	mov    DWORD PTR [edx+0x6],edx
  418cdf:	enter  0xe81c,0xc1
  418ce3:	mov    esp,0x3a12a456
  418ce8:	jmp    0x4e7c:0x854b3107
  418cef:	dec    eax
  418cf0:	pushf  
  418cf1:	out    0xd0,al
  418cf3:	scas   al,BYTE PTR es:[edi]
  418cf4:	pop    es
  418cf5:	int    0x4d
  418cf7:	out    dx,al
  418cf8:	imul   ebp,DWORD PTR [eax],0xffffff95
  418cfb:	enter  0xe407,0xcf
  418cff:	inc    esi
  418d00:	or     al,BYTE PTR [ebx+0x4613261e]
  418d06:	fild   WORD PTR [ebp+0x12f7681f]
  418d0c:	aad    0x18
  418d0e:	shr    DWORD PTR [eax],1
  418d10:	rol    DWORD PTR [ebp+0x16],0x98
  418d14:	pop    ebx
  418d15:	push   esp
  418d16:	test   eax,0x5cea6da
  418d1b:	cmp    dl,dl
  418d1d:	sub    eax,DWORD PTR [edx]
  418d1f:	sub    eax,0x65099613
  418d24:	pop    ecx
  418d25:	pop    esi
  418d26:	test   esp,esi
  418d28:	mov    al,0x51
  418d2a:	xchg   esi,eax
  418d2b:	xchg   edx,eax
  418d2c:	xchg   ebp,eax
  418d2d:	or     al,0x30
  418d2f:	jnp    0x418d33
  418d31:	call   0x60480539
  418d36:	das    
  418d37:	sub    eax,0x2142b94c
  418d3c:	fimul  DWORD PTR [esi+0x11e73843]
  418d42:	sub    DWORD PTR [edx],ecx
  418d44:	imul   esp,DWORD PTR [edx],0x79
  418d47:	sub    esp,eax
  418d49:	into   
  418d4a:	call   0x41ac:0x6a783f14
  418d51:	dec    esp
  418d52:	bound  edx,QWORD PTR [ecx+esi*2]
  418d55:	js     0x418d74
  418d57:	mov    ecx,0x351f20cd
  418d5c:	push   edi
  418d5d:	dec    edx
  418d5e:	push   ss
  418d5f:	add    ebp,DWORD PTR [edi+0x6e9ba32a]
  418d65:	int    0x90
  418d67:	jo     0x418d4f
  418d69:	outs   dx,BYTE PTR ds:[esi]
  418d6a:	mov    fs,WORD PTR [esi]
  418d6c:	in     eax,0x9
  418d6e:	xchg   ebx,eax
  418d6f:	sub    ah,BYTE PTR [edi]
  418d71:	shr    DWORD PTR [ecx-0x7b353986],cl
  418d77:	adc    DWORD PTR [edx+0x7ba18889],edi
  418d7d:	push   es
  418d7e:	add    DWORD PTR [ebp-0x294b53ad],ebp
  418d84:	loopne 0x418d8f
  418d86:	test   BYTE PTR ds:0x4d890fa4,0x83
  418d8d:	mov    bl,ch
  418d8f:	call   0x1d8301ed
  418d94:	rol    BYTE PTR [ebp+0xb01fcb6],0xfe
  418d9b:	jmp    0xdb48:0x8e925e4
  418da2:	and    eax,ecx
  418da4:	adc    DWORD PTR [eax-0x4f9c4b3e],0xffffffac
  418dab:	mov    eax,ds:0xb5831708
  418db0:	sahf   
  418db1:	sub    eax,edi
  418db3:	adc    eax,0x596de851
  418db8:	or     DWORD PTR [ecx+0x4d],ebp
  418dbb:	sub    al,0x92
  418dbd:	cmp    esp,DWORD PTR [edi+edi*1]
  418dc0:	inc    edi
  418dc1:	inc    ebx
  418dc2:	or     al,0xdb
  418dc4:	add    DWORD PTR [edi],0xc
  418dc7:	or     BYTE PTR [eax],cl
  418dc9:	cmp    eax,0x18bac529
  418dce:	inc    ebp
  418dcf:	jg     0x418e02
  418dd1:	fdivr  QWORD PTR [ecx+0x7c]
  418dd4:	and    bl,ch
  418dd6:	outs   dx,DWORD PTR ds:[esi]
  418dd7:	icebp  
  418dd8:	sbb    ebp,edi
  418dda:	add    BYTE PTR [esi],bl
  418ddc:	add    eax,0x3dbc2124
  418de1:	adc    ebp,ebp
  418de3:	mov    dh,0xef
  418de5:	outs   dx,BYTE PTR ds:[esi]
  418de6:	adc    al,0x99
  418de8:	push   esp
  418de9:	xor    ebp,DWORD PTR [eax-0x674d72bf]
  418def:	call   0x108be501
  418df4:	jo     0x418e44
  418df6:	dec    ebp
  418df7:	pop    edx
  418df8:	js     0x418da3
  418dfa:	pop    ss
  418dfb:	mov    eax,ds:0xef5c27e2
  418e00:	pop    ss
  418e01:	jns    0x418e09
  418e03:	test   DWORD PTR ds:0xf13605eb,edx
  418e09:	mov    edx,0xb5a59318
  418e0e:	dec    ebp
  418e0f:	or     eax,0xccfa622f
  418e14:	jo     0x418e53
  418e16:	test   DWORD PTR [ecx],ebp
  418e18:	into   
  418e19:	rcr    DWORD PTR [ecx],1
  418e1b:	dec    eax
  418e1c:	xor    BYTE PTR [ebx+0x34],dh
  418e1f:	cs pop ss
  418e21:	dec    ebp
  418e22:	stos   DWORD PTR es:[edi],eax
  418e23:	push   ss
  418e24:	or     al,0x60
  418e26:	leave  
  418e27:	inc    edx
  418e28:	xchg   edx,eax
  418e29:	in     al,0x2c
  418e2b:	push   ecx
  418e2c:	add    esi,DWORD PTR [edi]
  418e2e:	adc    BYTE PTR [ebx+ebx*1+0x2],bl
  418e32:	icebp  
  418e33:	(bad)  
  418e34:	adc    edx,edi
  418e36:	aaa    
  418e37:	or     al,BYTE PTR [eax-0x70ea83e8]
  418e3d:	pop    esp
  418e3e:	adc    DWORD PTR [esi+eiz*8],esp
  418e41:	add    DWORD PTR [eax],edi
  418e43:	cmp    eax,0x8fdd4332
  418e48:	mov    ebx,0xf308ac94
  418e4d:	inc    edi
  418e4e:	test   BYTE PTR [ebx+0x2d],al
  418e51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e52:	and    BYTE PTR [eax-0x36143380],al
  418e58:	mov    ds:0x84ef4610,al
  418e5d:	leave  
  418e5e:	cmp    BYTE PTR [ecx-0x7232293d],dl
  418e64:	in     eax,dx
  418e65:	rcr    DWORD PTR [edi],1
  418e67:	sbb    BYTE PTR [eax-0x6],dl
  418e6a:	cmp    eax,esp
  418e6c:	jmp    0x418e4b
  418e6e:	push   es
  418e6f:	scas   eax,DWORD PTR es:[edi]
  418e70:	lea    eax,[ebx-0x6c]
  418e73:	int3   
  418e74:	loopne 0x418edf
  418e76:	adc    eax,0x140737
  418e7b:	jne    0x418efa
  418e7d:	jns    0x418e13
  418e7f:	or     BYTE PTR [esi+0x6ec281ba],dh
  418e85:	dec    edi
  418e86:	lods   eax,DWORD PTR ds:[esi]
  418e87:	jle    0x418f00
  418e89:	pop    ebx
  418e8a:	ss jg  0x418eaf
  418e8d:	sbb    BYTE PTR [edi+0x7f],dh
  418e90:	addr16 mov bh,0x85
  418e93:	imul   ebp,DWORD PTR [edx+0x75],0x69606e34
  418e9a:	daa    
  418e9b:	je     0x418efd
  418e9d:	inc    ebx
  418e9e:	lea    esp,[edx]
  418ea0:	outs   dx,DWORD PTR ds:[esi]
  418ea1:	ror    BYTE PTR [edi],cl
  418ea3:	inc    ebx
  418ea4:	ins    BYTE PTR es:[edi],dx
  418ea5:	cmp    DWORD PTR [esi],ecx
  418ea7:	or     DWORD PTR [edx+0x4f],esi
  418eaa:	jp     0x418f02
  418eac:	dec    WORD PTR [ecx-0x6f]
  418eb0:	adc    al,0x1c
  418eb2:	sub    esp,DWORD PTR [edi]
  418eb4:	mov    fs:0x2c7d4e95,al
  418eba:	and    esi,DWORD PTR ds:[esi-0x9]
  418ebe:	fdivr  st,st(5)
  418ec0:	test   DWORD PTR [eax],edi
  418ec2:	pusha  
  418ec3:	aas    
  418ec4:	cmp    eax,0x3332a9fa
  418ec9:	jg     0x418ef6
  418ecb:	pop    esi
  418ecc:	les    esi,FWORD PTR [ebx+0x211bcea7]
  418ed2:	sub    ebp,DWORD PTR [ecx]
  418ed4:	jbe    0x418ee4
  418ed6:	inc    ecx
  418ed7:	pop    ebp
  418ed8:	inc    edi
  418ed9:	push   esp
  418eda:	das    
  418edb:	imul   esi,DWORD PTR [ecx+0x75],0x705f61d4
  418ee2:	int    0x2c
  418ee4:	jne    0x418e8b
  418ee6:	push   ss
  418ee7:	ret    0xe361
  418eea:	in     al,dx
  418eeb:	xor    al,0xff
  418eed:	and    esp,esp
  418eef:	xlat   BYTE PTR ds:[ebx]
  418ef0:	jg     0x418eea
  418ef2:	test   BYTE PTR [eax+edi*8+0x49],al
  418ef6:	pop    esp
  418ef7:	pop    edx
  418ef8:	inc    edi
  418ef9:	push   ds
  418efa:	xchg   DWORD PTR [eax+0x70],esp
  418efd:	mov    ah,0x27
  418eff:	gs mov eax,0xf576426a
  418f05:	cmp    BYTE PTR [edx+0x5a],bh
  418f08:	dec    edi
  418f09:	pop    ss
  418f0a:	stos   DWORD PTR es:[edi],eax
  418f0b:	pop    edx
  418f0c:	outs   dx,BYTE PTR ds:[esi]
  418f0d:	daa    
  418f0e:	jns    0x418f64
  418f10:	out    0xab,eax
  418f12:	xor    dh,BYTE PTR [esi+edx*4+0x67]
  418f16:	jno    0x418f91
  418f18:	gs test eax,0x797abd50
  418f1e:	inc    esi
  418f1f:	dec    edx
  418f20:	inc    esp
  418f21:	push   ecx
  418f22:	fucomp st(3)
  418f24:	sar    BYTE PTR [ebp-0x16],cl
  418f27:	sbb    esi,DWORD PTR [edi-0x52]
  418f2a:	pop    esi
  418f2b:	sbb    eax,0xffffffa7
  418f2e:	addr16 adc al,0x79
  418f31:	mov    eax,0x82ae60c5
  418f36:	push   esp
  418f37:	or     esp,DWORD PTR [ebx-0x40]
  418f3a:	pusha  
  418f3b:	xor    cl,ah
  418f3d:	sbb    esi,DWORD PTR [eax+0x69]
  418f40:	push   eax
  418f41:	lock add BYTE PTR [bp+si-0x1e],0xb9
  418f47:	pop    ecx
  418f48:	or     al,0xfa
  418f4a:	js     0x418ee4
  418f4c:	cmp    al,0x75
  418f4e:	shr    DWORD PTR [edi-0x43],1
  418f51:	xchg   esp,eax
  418f52:	jbe    0x418f4f
  418f54:	das    
  418f55:	pop    edx
  418f56:	icebp  
  418f57:	push   cs
  418f58:	pop    eax
  418f59:	inc    ecx
  418f5a:	pop    ecx
  418f5b:	rol    DWORD PTR ss:[eax+esi*2-0x3],1
  418f60:	cld    
  418f61:	fdiv   DWORD PTR [ecx-0x60]
  418f64:	push   ds
  418f65:	jge    0x418f1f
  418f67:	push   ecx
  418f68:	mov    bh,dh
  418f6a:	stos   DWORD PTR es:[edi],eax
  418f6b:	jbe    0x418f52
  418f6d:	jle    0x418f82
  418f6f:	jp     0x418f70
  418f71:	sub    dh,BYTE PTR [edx+0x3c]
  418f74:	inc    esi
  418f75:	(bad)  
  418f76:	sub    dl,ah
  418f78:	popa   
  418f79:	xor    eax,0x5bffccdc
  418f7e:	fsubr  QWORD PTR [eax+0x58f372d1]
  418f84:	retf   
  418f85:	mov    al,ds:0x642b13e4
  418f8a:	jno    0x418fb2
  418f8c:	popa   
  418f8d:	imul   edx,DWORD PTR [ebx-0x17e634d1],0xe5665038
  418f97:	repnz test DWORD PTR [ebx],esi
  418f9a:	mov    dl,0x37
  418f9c:	popf   
  418f9d:	sub    ebp,DWORD PTR [esi]
  418f9f:	cmp    al,0x55
  418fa1:	adc    ah,BYTE PTR [edi+0x34]
  418fa4:	and    edx,DWORD PTR [esi]
  418fa6:	cmc    
  418fa7:	and    al,0x55
  418fa9:	stos   BYTE PTR es:[edi],al
  418faa:	(bad)  
  418fac:	mov    eax,0x78d6281f
  418fb1:	fimul  WORD PTR [ecx]
  418fb3:	popa   
  418fb4:	mov    ebx,ebx
  418fb6:	lahf   
  418fb7:	test   ah,cl
  418fb9:	mov    dl,0x51
  418fbb:	push   edi
  418fbc:	mov    eax,ds:0x84ecdf97
  418fc1:	mov    es,WORD PTR [ecx+0x111f637c]
  418fc7:	adc    al,0xc0
  418fc9:	jae    0x418f78
  418fcb:	push   esp
  418fcc:	lock sahf 
  418fce:	add    dh,BYTE PTR [eax-0x3f917336]
  418fd4:	cld    
  418fd5:	jmp    0x418f5a
  418fd7:	sbb    BYTE PTR [esi+0x20],bl
  418fda:	xor    al,0x24
  418fdc:	push   edx
  418fdd:	push   ecx
  418fde:	pop    ds
  418fdf:	inc    esi
  418fe0:	push   ebx
  418fe1:	mov    ebp,edx
  418fe3:	push   esp
  418fe4:	enter  0x5050,0xe2
  418fe8:	inc    edx
  418fe9:	or     ch,ch
  418feb:	daa    
  418fec:	push   ss
  418fed:	cmp    eax,0x4e3f7879
  418ff2:	(bad)  [ebp-0x41]
  418ff5:	test   eax,edi
  418ff7:	into   
  418ff8:	inc    esi
  418ff9:	jb     0x41901a
  418ffb:	leave  
  418ffc:	jo     0x418f95
  418ffe:	test   eax,0x8ba2da58
  419003:	mov    eax,DWORD PTR [edi-0xb]
  419006:	das    
  419007:	jns    0x418f9e
  419009:	sbb    DWORD PTR [edx],edx
  41900b:	xor    al,BYTE PTR [eax-0x348883f3]
  419011:	test   DWORD PTR [edx],0xd3d7212
  419017:	jo     0x41901e
  419019:	xor    al,BYTE PTR ss:[edi-0xa0fcae3]
  419020:	jecxz  0x419037
  419022:	retf   
  419023:	xor    BYTE PTR [esi],bl
  419025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419026:	jmp    0x419057
  419028:	repnz adc BYTE PTR [edi],dl
  41902b:	or     DWORD PTR [esi+0x1074430a],ecx
  419031:	pop    esp
  419032:	das    
  419033:	out    dx,al
  419034:	pop    ds
  419035:	int3   
  419036:	pop    cx
  419038:	pop    ebx
  419039:	in     al,0x43
  41903b:	dec    ecx
  41903c:	dec    ecx
  41903d:	mov    dh,0xc7
  41903f:	mov    dl,0x19
  419041:	test   BYTE PTR [ecx],bh
  419043:	mov    bl,0xf1
  419045:	addr16 loop 0x41908e
  419048:	add    ebx,DWORD PTR [eax+0x55a30679]
  41904e:	and    BYTE PTR [esi-0x7177b8b6],bh
  419054:	stc    
  419055:	adc    DWORD PTR [esp+ebx*4+0x44],0x89cde62e
  41905d:	sub    al,0x57
  41905f:	xchg   DWORD PTR [esi-0x7],esp
  419062:	add    bl,cl
  419064:	rcr    DWORD PTR [ecx+edi*8+0xe440bf2],cl
  41906b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41906c:	test   BYTE PTR [ebp+0x41],al
  41906f:	and    DWORD PTR [edx-0x7178cf6b],ebx
  419075:	bound  esp,QWORD PTR [esi+ecx*2]
  419078:	mov    dl,0xdb
  41907a:	xchg   DWORD PTR [edx],esi
  41907c:	out    dx,eax
  41907d:	jg     0x4190a1
  41907f:	mov    edi,0xb56fd4e0
  419084:	pop    es
  419085:	xchg   DWORD PTR [eax],edi
  419087:	jns    0x4190fd
  419089:	pop    es
  41908a:	popa   
  41908b:	xlat   BYTE PTR ds:[ebx]
  41908c:	sbb    DWORD PTR [edx+0x721d9bfe],eax
  419092:	test   DWORD PTR [ebp+ecx*1+0x2e],esp
  419096:	push   DWORD PTR [edx+0x4db39adf]
  41909c:	push   esi
  41909d:	imul   esp,DWORD PTR [ebx],0x96ca0cd8
  4190a3:	push   ss
  4190a4:	cs add edx,ecx
  4190a7:	test   BYTE PTR [esi-0x12],dl
  4190aa:	jnp    0x419079
  4190ac:	nop
  4190ad:	mov    bh,0xf6
  4190af:	mov    WORD PTR [ebx-0x7ccfba54],ds
  4190b5:	mov    ah,0x77
  4190b7:	gs popa 
  4190b9:	add    bh,BYTE PTR [ebp+0x78]
  4190bc:	xchg   ebp,eax
  4190bd:	xor    ch,cl
  4190bf:	ficomp DWORD PTR [edi-0x24fd7be5]
  4190c5:	idiv   BYTE PTR [ebx+ecx*1-0x75]
  4190c9:	rcr    BYTE PTR [ecx],cl
  4190cb:	xchg   edx,eax
  4190cc:	dec    ecx
  4190cd:	pop    eax
  4190ce:	or     eax,0x43463c5a
  4190d3:	and    ecx,ebx
  4190d5:	shr    BYTE PTR [eax-0x436f41f0],1
  4190db:	inc    edx
  4190dc:	or     BYTE PTR [ecx-0x3bf5ecc4],bh
  4190e2:	adc    BYTE PTR [ecx-0x37],bh
  4190e5:	outs   dx,DWORD PTR ds:[esi]
  4190e6:	repz pushf 
  4190e8:	rol    BYTE PTR [ebp+0x11],1
  4190eb:	jbe    0x41910f
  4190ed:	jb     0x419101
  4190ef:	and    ebp,ebx
  4190f1:	repz sbb al,0xd0
  4190f4:	and    al,0xa
  4190f6:	ja     0x41914f
  4190f8:	sbb    BYTE PTR [edx-0x80],dl
  4190fb:	mov    edi,0xd91ff849
  419100:	lea    edi,[eax-0x45]
  419103:	xchg   edx,eax
  419104:	pop    ebx
  419105:	ja     0x4190ae
  419107:	pop    eax
  419108:	pop    es
  419109:	jle    0x419138
  41910b:	or     BYTE PTR [edi+0x41b9836c],0x96
  419112:	sub    ecx,ecx
  419114:	inc    eax
  419115:	mov    eax,DWORD PTR [ebx]
  419117:	out    0xb7,eax
  419119:	adc    ebp,DWORD PTR [esi]
  41911b:	mov    WORD PTR [esi+0x14],fs
  41911e:	mov    esi,DWORD PTR [ebp-0x1a0cdcd8]
  419124:	or     eax,0xf525b0dc
  419129:	cli    
  41912a:	pop    eax
  41912b:	inc    eax
  41912c:	xchg   BYTE PTR [ebx],dl
  41912e:	(bad)  
  41912f:	xchg   edx,eax
  419130:	and    al,0xb9
  419132:	adc    al,BYTE PTR [edx+ebp*4+0x4ce59002]
  419139:	dec    ebx
  41913a:	sti    
  41913b:	ret    0xcd2d
  41913e:	push   ds
  41913f:	sbb    BYTE PTR [eax-0x7f],cl
  419142:	int3   
  419143:	rol    DWORD PTR [edi-0x3f0eb11],1
  419149:	test   DWORD PTR [ebx+eax*2+0x704b4379],esp
  419150:	xchg   ebp,eax
  419151:	jno    0x419128
  419153:	inc    ebp
  419154:	jbe    0x419130
  419156:	test   DWORD PTR [edx+0x46],ebp
  419159:	inc    esp
  41915a:	out    0x56,al
  41915c:	js     0x41912b
  41915e:	and    BYTE PTR [ebx-0x4ac88c49],ah
  419164:	or     DWORD PTR [edx-0x7fc9941c],edi
  41916a:	lea    esi,[ebp-0x60552b9d]
  419170:	dec    eax
  419171:	mov    bl,0x36
  419173:	mov    eax,DWORD PTR [edi+0x19768c7d]
  419179:	xchg   ecx,eax
  41917a:	sbb    al,0x50
  41917c:	pop    edx
  41917d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41917e:	sbb    bl,BYTE PTR [eax+0x630c1744]
  419184:	or     ecx,DWORD PTR [ebx]
  419186:	sub    BYTE PTR [esi],dl
  419188:	scas   al,BYTE PTR es:[edi]
  419189:	lea    ecx,[ebp+0x50d86d64]
  41918f:	mov    WORD PTR [ecx-0x4a],es
  419192:	jp     0x4191c2
  419194:	retf   0x6213
  419197:	jae    0x419162
  419199:	mov    DWORD PTR [eax],ebp
  41919b:	(bad)  
  41919c:	mov    ds:0x93d01092,eax
  4191a1:	mov    WORD PTR [ebx],es
  4191a3:	and    al,0xe4
  4191a5:	test   ecx,eax
  4191a7:	cmp    BYTE PTR [edi-0x7a],0x12
  4191ab:	jae    0x4191da
  4191ad:	mov    al,0x7
  4191af:	ret    
  4191b0:	sbb    al,0x9e
  4191b2:	dec    ecx
  4191b3:	sub    BYTE PTR ds:0xd35016f3,dl
  4191b9:	inc    eax
  4191ba:	test   DWORD PTR [esi-0x23],0x50c50195
  4191c1:	add    al,0x16
  4191c3:	and    dh,BYTE PTR [edx-0x3cc31fdf]
  4191c9:	(bad)  
  4191ca:	pusha  
  4191cb:	loope  0x4191c8
  4191cd:	inc    edi
  4191ce:	sbb    DWORD PTR [eax+0x2ad47f21],esi
  4191d4:	(bad)  
  4191d5:	pop    ss
  4191d6:	ins    BYTE PTR es:[edi],dx
  4191d7:	nop
  4191d8:	pop    ss
  4191d9:	adc    BYTE PTR [ebp+0x6b45e24f],0x51
  4191e0:	lods   al,BYTE PTR ds:[esi]
  4191e1:	adc    bh,BYTE PTR [ecx]
  4191e3:	push   ecx
  4191e4:	scas   al,BYTE PTR es:[edi]
  4191e5:	mov    al,ds:0x712d307
  4191ea:	jb     0x419249
  4191ec:	sbb    DWORD PTR [ebp-0x49a167fb],0x23
  4191f3:	outs   dx,DWORD PTR ds:[esi]
  4191f4:	add    cl,BYTE PTR ds:0x24eed2e2
  4191fa:	mov    ecx,DWORD PTR [esi+0x1f21a82d]
  419200:	mov    dl,0x58
  419202:	jmp    FWORD PTR [edx]
  419204:	push   0x12
  419206:	mov    edi,0x1c9098d6
  41920b:	inc    esp
  41920c:	sub    bl,bl
  41920e:	cmp    bh,BYTE PTR [ebp+esi*8+0x43d4a98d]
  419215:	xchg   ecx,eax
  419216:	mov    ds:0xa92886d3,eax
  41921b:	pop    ebx
  41921c:	sbb    BYTE PTR [edi-0x9],dl
  41921f:	(bad)
  419224:	add    BYTE PTR [esi+0x35a6be33],ch
  41922a:	fwait
  41922b:	arpl   WORD PTR [eax-0x38],sp
  41922e:	push   edi
  41922f:	shl    cl,1
  419231:	std    
  419232:	cwde   
  419233:	popf   
  419234:	shl    BYTE PTR [esi],0x24
  419237:	sbb    edi,DWORD PTR [ecx-0x16]
  41923a:	outs   dx,DWORD PTR ds:[esi]
  41923b:	mov    edi,0xcc398ec3
  419240:	mov    es,WORD PTR [ebx]
  419242:	leave  
  419243:	and    esp,DWORD PTR [eax-0x39]
  419246:	xor    BYTE PTR [eax-0x1eecb709],dl
  41924c:	test   eax,0xf0e817a7
  419251:	sbb    eax,0x2dd189a
  419256:	mov    edi,0xb949fa9
  41925b:	repnz stc 
  41925d:	jle    0x419251
  41925f:	push   esp
  419260:	pushf  
  419261:	pop    esp
  419262:	jmp    0x3706c6b6
  419267:	xchg   DWORD PTR [esi+0x4c34521c],esp
  41926d:	test   DWORD PTR [edx],ebp
  41926f:	ret    0x8a38
  419272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419273:	lea    eax,[ecx+edx*1-0x77]
  419277:	sahf   
  419278:	sbb    BYTE PTR [ebx-0x5],dl
  41927b:	and    BYTE PTR [edx+0x68281223],bl
  419281:	mov    ebx,0xadb716cd
  419286:	sbb    ch,BYTE PTR [ebx+0x7b]
  419289:	push   cs
  41928a:	or     eax,0x29088306
  41928f:	pop    esi
  419290:	daa    
  419291:	stos   DWORD PTR es:[edi],eax
  419292:	mov    esp,0x888f87f1
  419297:	push   edi
  419298:	sub    DWORD PTR [ebx-0x7feb15f9],edi
  41929e:	(bad)  
  41929f:	pushf  
  4192a0:	ds add dl,ch
  4192a3:	xor    ebp,DWORD PTR [ecx]
  4192a5:	mov    ebp,0x349ba222
  4192aa:	outs   dx,DWORD PTR ds:[esi]
  4192ab:	pop    edx
  4192ac:	fmul   st,st(7)
  4192ae:	call   0xe715:0xea1df41b
  4192b5:	sbb    ch,0xac
  4192b8:	ret    0x1cb7
  4192bb:	imul   edi,DWORD PTR [eax-0x18],0x72
  4192bf:	scas   ax,WORD PTR es:[edi]
  4192c1:	aaa    
  4192c2:	and    dh,ah
  4192c4:	rcr    BYTE PTR [edi-0x2ab84b38],cl
  4192ca:	add    al,0xdb
  4192cc:	jne    0x419342
  4192ce:	ss dec edi
  4192d0:	mov    dh,0xe5
  4192d2:	out    0x27,al
  4192d4:	loop   0x419349
  4192d6:	add    eax,0x19ae013e
  4192db:	nop
  4192dc:	dec    esp
  4192dd:	idiv   BYTE PTR [edi]
  4192df:	shr    ah,cl
  4192e1:	cmp    ebx,DWORD PTR [edx+edi*4]
  4192e4:	push   es
  4192e5:	dec    ecx
  4192e6:	sbb    eax,0x9cc3349c
  4192eb:	test   eax,0x1f05bd76
  4192f0:	leave  
  4192f1:	push   eax
  4192f2:	jne    0x4192c8
  4192f4:	gs jne 0x419360
  4192f7:	cmc    
  4192f8:	sbb    DWORD PTR [ebx+ecx*8-0x5c94d107],edi
  4192ff:	add    BYTE PTR [eax],0x66
  419302:	test   al,0x20
  419304:	pop    edx
  419305:	push   eax
  419306:	imul   eax,DWORD PTR [eax+0x2a583a96],0x1b
  41930d:	in     eax,0x8f
  41930f:	inc    esi
  419310:	cmp    eax,0x26450c39
  419315:	out    dx,eax
  419316:	lds    ebx,FWORD PTR ds:0x4d63952a
  41931c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41931d:	xchg   DWORD PTR [edx-0x5509482c],esp
  419323:	or     ecx,DWORD PTR [edx-0xfd2116e]
  419329:	jmp    0x85a896c0
  41932e:	mov    cl,0xa8
  419330:	sbb    al,0xe
  419332:	jle    0x419393
  419334:	ret    0xd2a4
  419337:	or     DWORD PTR [esi+0x73],0x7cc35c14
  41933e:	call   0xa02a2904
  419343:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419344:	mov    dh,0x55
  419346:	lock mov esp,0x989b315
  41934c:	jb     0x4192eb
  41934e:	mov    ch,0x8c
  419350:	lea    edi,[ebx]
  419352:	out    0x5,eax
  419354:	shl    BYTE PTR [ebp+0x27],0x2
  419358:	jmp    0xc024:0x8b73ac5f
  41935f:	jmp    0x4193ad
  419361:	jg     0x419301
  419363:	dec    ebp
  419364:	xchg   ebp,eax
  419365:	out    0x5d,eax
  419367:	pop    eax
  419368:	out    dx,eax
  419369:	mov    esi,0xc41490df
  41936e:	test   BYTE PTR es:[esi],bl
  419371:	fstp   QWORD PTR [eax]
  419373:	pop    ds
  419374:	cmp    BYTE PTR [esi-0x533afaa0],dl
  41937a:	sub    eax,0x5872743
  41937f:	xor    al,0x11
  419381:	scas   eax,DWORD PTR es:[edi]
  419382:	mov    ds:0xe4eea07,al
  419387:	xchg   ebp,eax
  419388:	ja     0x419404
  41938a:	das    
  41938b:	mov    edx,0x701d0a0e
  419390:	inc    esi
  419391:	sub    edx,DWORD PTR [ebp-0x7294887b]
  419397:	pop    ebx
  419398:	sub    eax,0x52e0298
  41939d:	js     0x4193b7
  41939f:	repz sti 
  4193a1:	mov    esp,0xaf6147ce
  4193a6:	cwde   
  4193a7:	ficom  WORD PTR [eiz*8-0x4ad8516e]
  4193ae:	ret    
  4193af:	jne    0x419420
  4193b1:	xchg   ebx,eax
  4193b2:	cmp    eax,0x46a9be6e
  4193b7:	shl    esp,1
  4193b9:	test   al,0x9e
  4193bb:	adc    DWORD PTR [edi-0x67],ecx
  4193be:	mov    ds,WORD PTR [eax]
  4193c0:	dec    ecx
  4193c1:	shl    BYTE PTR [esi],cl
  4193c3:	cs dec edx
  4193c5:	mov    fs,WORD PTR [ecx]
  4193c7:	fcmovb st,st(6)
  4193c9:	dec    eax
  4193ca:	sub    al,0x9d
  4193cc:	call   0xb4dd:0xcb82ac48
  4193d3:	sbb    BYTE PTR [edx+ebp*4],bl
  4193d6:	fisttp QWORD PTR [edx+ecx*1]
  4193d9:	nop
  4193da:	cld    
  4193db:	xlat   BYTE PTR ds:[ebx]
  4193dc:	add    eax,0x1411f966
  4193e1:	out    0x93,al
  4193e3:	sbb    eax,0x8578d95a
  4193e9:	mov    ah,0x26
  4193eb:	scas   eax,DWORD PTR es:[edi]
  4193ec:	adc    ebx,DWORD PTR [edx]
  4193ee:	jae    0x4193e5
  4193f0:	pop    eax
  4193f1:	cmp    ah,ch
  4193f3:	adc    esp,DWORD PTR [ecx+0x2fd628a4]
  4193f9:	sar    DWORD PTR [edx-0x60],0x98
  4193fd:	push   eax
  4193fe:	pop    ds
  4193ff:	dec    esp
  419400:	xchg   BYTE PTR [esi+0x7],bh
  419403:	mov    dl,0x70
  419405:	or     eax,0xc1dafa46
  41940a:	out    dx,al
  41940b:	pusha  
  41940c:	mov    al,ds:0xcc7a15b0
  419411:	inc    eax
  419412:	pop    ss
  419413:	push   esi
  419414:	cdq    
  419415:	inc    ecx
  419416:	icebp  
  419417:	test   eax,0x5954746f
  41941c:	cli    
  41941d:	mov    cl,BYTE PTR [edi-0x44da9adc]
  419423:	pusha  
  419424:	jle    0x419496
  419426:	jb     0x4193f3
  419428:	push   esi
  419429:	call   0x44d11b2c
  41942e:	dec    edx
  41942f:	add    edx,eax
  419431:	in     al,0xda
  419433:	call   0x5187:0xed0d2fde
  41943a:	or     ebx,edi
  41943c:	push   0xffffff81
  41943e:	push   esp
  41943f:	jecxz  0x4194bb
  419441:	xor    BYTE PTR [ebp+0x5d94fedf],bh
  419447:	dec    esp
  419448:	xchg   esp,eax
  419449:	in     eax,0x2f
  41944b:	data16 mov bl,0x89
  41944e:	les    ebx,FWORD PTR [edx+edi*8]
  419451:	dec    esp
  419452:	jns    0x4193ef
  419454:	ret    0x7e90
  419457:	sbb    dh,BYTE PTR [esi+0x39dbc094]
  41945d:	add    ecx,esi
  41945f:	pop    DWORD PTR [ecx-0x5429e5df]
  419465:	add    dl,BYTE PTR [ebx]
  419467:	scas   eax,DWORD PTR es:[edi]
  419468:	mov    ecx,DWORD PTR [ebx-0x60440f5f]
  41946e:	test   BYTE PTR [esi],ch
  419470:	inc    eax
  419471:	scas   eax,DWORD PTR es:[edi]
  419472:	outs   dx,BYTE PTR ds:[esi]
  419473:	and    esp,DWORD PTR [edx+0x6301662e]
  419479:	add    al,BYTE PTR [edi]
  41947b:	xchg   DWORD PTR ds:0x8452295a,ecx
  419481:	dec    esp
  419482:	pushf  
  419483:	xchg   ecx,ebx
  419485:	lods   al,BYTE PTR ds:[esi]
  419486:	push   0x14
  419488:	dec    esi
  419489:	mov    ds:0x23af6bc2,al
  41948e:	push   ss
  41948f:	push   ebx
  419490:	xchg   edx,eax
  419491:	repz inc esp
  419493:	jmp    0xf08c:0x2c962a87
  41949a:	xchg   bh,bh
  41949c:	nop
  41949d:	pop    eax
  41949e:	in     al,dx
  41949f:	inc    DWORD PTR [ebx+0x47]
  4194a2:	mov    DWORD PTR ds:0x7f3ea6c7,eax
  4194a8:	dec    ebp
  4194a9:	and    al,0xc9
  4194ab:	and    BYTE PTR [edx+0x5de102a0],dl
  4194b1:	jp     0x41946d
  4194b3:	or     ah,BYTE PTR [edi]
  4194b5:	fist   DWORD PTR [edx+0x2f199757]
  4194bb:	pushf  
  4194bc:	lea    edi,[ebx+edi*2+0x1a]
  4194c0:	out    dx,al
  4194c1:	call   0xf6be:0x1e8edb88
  4194c8:	sar    DWORD PTR [ebx+ecx*1+0x417b792b],1
  4194cf:	dec    ebx
  4194d0:	xchg   ecx,eax
  4194d1:	mov    gs,edi
  4194d3:	push   ebx
  4194d4:	pop    edi
  4194d5:	xor    al,bh
  4194d7:	pop    eax
  4194d8:	test   eax,0x48fa09f2
  4194dd:	xor    dh,BYTE PTR [esi]
  4194df:	and    ecx,ecx
  4194e1:	jg     0x4194cd
  4194e3:	xchg   edx,eax
  4194e4:	outs   dx,DWORD PTR ds:[esi]
  4194e5:	cmp    eax,0xeb9bee12
  4194ea:	mov    DWORD PTR [edi-0x1e616ecc],edx
  4194f0:	popa   
  4194f1:	inc    esi
  4194f2:	nop
  4194f3:	xchg   ebx,eax
  4194f4:	mov    dl,0xd4
  4194f6:	loop   0x419505
  4194f8:	arpl   WORD PTR [esi+0x3445778f],bx
  4194fe:	das    
  4194ff:	add    DWORD PTR [edi-0x244a7975],eax
  419505:	mov    ebp,0xcb4db101
  41950a:	push   ecx
  41950b:	pop    ds
  41950c:	lahf   
  41950d:	jmp    0x419588
  41950f:	(bad)
  419512:	popa   
  419513:	mov    bh,0x21
  419515:	sub    ebx,DWORD PTR [edx+esi*2-0x1aad8303]
  41951c:	bound  ecx,QWORD PTR [eax+0x556f63fa]
  419522:	push   ebx
  419523:	pop    eax
  419524:	div    BYTE PTR [ecx+0x16502f5]
  41952a:	sbb    esi,edx
  41952c:	mov    ds,WORD PTR [ecx]
  41952e:	or     DWORD PTR [eax+0xd],eax
  419531:	imul   esp,esp,0xffffffbf
  419534:	inc    esi
  419535:	mov    BYTE PTR [ebp+0x72782e3],cl
  41953b:	adc    al,0x55
  41953d:	shl    bl,1
  41953f:	daa    
  419540:	and    BYTE PTR [eax+esi*1],ch
  419543:	adc    al,0x86
  419545:	ins    DWORD PTR es:[edi],dx
  419546:	mov    cs,WORD PTR [eax]
  419548:	test   DWORD PTR [esi],esi
  41954a:	into   
  41954b:	dec    ebx
  41954c:	dec    ebp
  41954d:	xchg   DWORD PTR [ebp+ebx*8+0x73649504],ebx
  419554:	mov    esp,0xbf144585
  419559:	jns    0x4194ff
  41955b:	imul   edx,DWORD PTR [ecx+ecx*2],0x12666dcc
  419562:	sbb    BYTE PTR [edi+0x145fe468],al
  419568:	push   ebp
  419569:	nop
  41956a:	jp     0x4194ff
  41956c:	cli    
  41956d:	xchg   ecx,eax
  41956e:	test   eax,0xcf4e0e61
  419573:	loope  0x4194ff
  419575:	add    eax,0x226429b6
  41957a:	jmp    0x7d2bd0ae
  41957f:	sub    ch,BYTE PTR [edx-0x15cdb0c1]
  419585:	(bad)  
  419586:	inc    ebp
  419587:	sub    BYTE PTR [ecx],dl
  419589:	popf   
  41958a:	mov    cl,0x51
  41958c:	add    bl,BYTE PTR [esi+edi*4-0x6f]
  419590:	push   0x73
  419592:	xchg   ebx,edi
  419594:	or     eax,DWORD PTR [edx]
  419596:	mov    WORD PTR [ebp+ebp*4-0x72],ss
  41959a:	in     eax,dx
  41959b:	adc    al,0x1e
  41959d:	out    0x8c,al
  41959f:	mov    esi,ebp
  4195a1:	sbb    DWORD PTR [ecx],ebp
  4195a3:	test   DWORD PTR [ecx],esp
  4195a5:	xlat   BYTE PTR ds:[ebx]
  4195a6:	test   DWORD PTR [eax+0xb3f2dcc],edi
  4195ac:	mov    esp,0xc872468d
  4195b1:	xor    al,0x47
  4195b3:	sahf   
  4195b4:	xor    DWORD PTR [eax],esp
  4195b6:	or     eax,0xbe84bb8e
  4195bb:	loope  0x4195df
  4195bd:	mov    edx,0x71461c76
  4195c2:	cmp    ch,BYTE PTR [eax-0x6194ed29]
  4195c8:	ss inc ecx
  4195ca:	xchg   esi,eax
  4195cb:	sbb    bh,BYTE PTR [edi+0x320599fe]
  4195d1:	mov    edi,0xfa96068d
  4195d6:	and    eax,0xad4b2d05
  4195db:	mov    esp,0xd549e6fd
  4195e0:	add    al,0x80
  4195e2:	inc    eax
  4195e3:	cmp    dh,0x8
  4195e6:	ja     0x4195c9
  4195e8:	dec    eax
  4195e9:	xchg   DWORD PTR [ecx-0x3d],esp
  4195ec:	les    edi,FWORD PTR [edi]
  4195ee:	cdq    
  4195ef:	xor    DWORD PTR [edx],esp
  4195f1:	dec    edx
  4195f2:	cmc    
  4195f3:	inc    ebx
  4195f4:	(bad)  [edi-0x71]
  4195f7:	mov    dl,0x6b
  4195f9:	sub    BYTE PTR ds:0x698dac86,dl
  4195ff:	push   ebx
  419600:	xor    DWORD PTR [edi-0x3d751bf4],ecx
  419606:	xchg   esp,eax
  419607:	imul   eax,DWORD PTR [esi],0x95164385
  41960d:	or     cl,BYTE PTR [ecx+0x2]
  419610:	sub    ecx,DWORD PTR [ebx]
  419612:	leave  
  419613:	jmp    0x9f66ed2c
  419618:	call   0x2c10:0xa1b0ca99
  41961f:	xchg   ecx,eax
  419620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419621:	xor    cl,BYTE PTR cs:[esp+eiz*4]
  419625:	and    BYTE PTR [eax+ecx*4],ah
  419628:	and    eax,0x8307120b
  41962d:	aaa    
  41962e:	adc    DWORD PTR [edi],edx
  419630:	mov    ebx,0xb8c57bda
  419635:	ror    BYTE PTR [ebp+0x1],1
  419638:	jmp    0x419633
  41963a:	xchg   edx,eax
  41963b:	ret    
  41963c:	sbb    DWORD PTR [edx],0xfffffffe
  41963f:	(bad)  
  419640:	sbb    ebp,eax
  419642:	xchg   ecx,eax
  419643:	mov    cl,0xdc
  419645:	xchg   edx,eax
  419646:	push   cs
  419647:	lock repnz (bad)
  41964b:	out    0xa,eax
  41964d:	sbb    al,0xfa
  41964f:	call   0x5ba9:0x63fdf08d
  419656:	fwait
  419657:	clc    
  419658:	mov    ss,ecx
  41965a:	jl     0x4195e2
  41965c:	jae    0x4195e0
  41965e:	or     eax,DWORD PTR [edx+ebp*8-0x7cbddd06]
  419665:	adc    ch,bh
  419667:	(bad)  
  419668:	cmp    bl,al
  41966a:	mov    edx,0x6d3174f3
  41966f:	inc    edi
  419670:	dec    eax
  419671:	xchg   DWORD PTR [ebx],ebx
  419673:	adc    edx,esp
  419675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419676:	daa    
  419677:	mov    edx,DWORD PTR [edi+edi*2]
  41967a:	or     al,0x3b
  41967c:	stos   BYTE PTR es:[edi],al
  41967d:	jbe    0x4196f9
  41967f:	iret   
  419680:	jno    0x4196e7
  419682:	nop
  419683:	int3   
  419684:	cmp    BYTE PTR [eax+0x2e],ch
  419687:	adc    ebx,DWORD PTR [edx+0x7f3d0dd7]
  41968d:	or     bh,BYTE PTR [ebp+0x26]
  419690:	pop    ebp
  419691:	fiadd  DWORD PTR [edi+0x13899546]
  419697:	push   0xd03158d8
  41969c:	add    eax,0xbe581274
  4196a1:	sbb    DWORD PTR [esp+edx*2],esp
  4196a4:	rol    BYTE PTR [edi+edx*8+0x1f758501],cl
  4196ab:	lds    ebx,FWORD PTR [ecx]
  4196ad:	outs   dx,BYTE PTR ds:[esi]
  4196ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196af:	sub    ah,BYTE PTR [edi-0x54743adc]
  4196b5:	jns    0x4196a4
  4196b7:	repnz mov WORD PTR [ebp-0x76763caf],?
  4196be:	dec    ecx
  4196bf:	mov    esi,0x74b55927
  4196c4:	imul   eax,ecx,0x21
  4196c7:	sbb    BYTE PTR [edx+edi*4],0x16
  4196cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196cc:	or     ch,BYTE PTR [ebp+0x20450f8e]
  4196d2:	call   0x2981:0xaf3d96a4
  4196d9:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4196db:	push   edx
  4196dc:	popa   
  4196dd:	cwde   
  4196de:	and    dl,BYTE PTR [ebx+0x39]
  4196e1:	sub    DWORD PTR [esi-0x155fbd84],eax
  4196e7:	inc    edi
  4196e8:	call   0xe190:0x4351a89b
  4196ef:	sbb    ch,BYTE PTR [eax-0x6f]
  4196f2:	icebp  
  4196f3:	add    ebp,DWORD PTR [esi]
  4196f5:	xchg   edi,eax
  4196f6:	adc    eax,0xec889e59
  4196fb:	dec    esi
  4196fc:	cdq    
  4196fd:	add    eax,0x9c408592
  419702:	and    ecx,edx
  419704:	or     eax,0x97469465
  419709:	sub    DWORD PTR [ecx-0x66d8fbc0],edi
  41970f:	popf   
  419710:	xchg   ebp,eax
  419711:	xchg   ebx,eax
  419712:	mov    ds:0x71d8212,al
  419717:	inc    ecx
  419718:	mov    bl,BYTE PTR [ebx+0x43cf001e]
  41971e:	mov    bh,0x87
  419720:	push   cs
  419721:	gs cmp dh,dh
  419724:	out    0x1f,eax
  419726:	adc    eax,0xf9ed7a82
  41972b:	inc    edx
  41972c:	and    eax,0xccbeab17
  419731:	jb     0x41978f
  419733:	and    BYTE PTR [esi+0x35dea2a8],ah
  419739:	ins    BYTE PTR es:[edi],dx
  41973a:	mov    ds:0xcb3bcc9d,eax
  41973f:	push   0xffffffdb
  419741:	out    dx,al
  419742:	mov    al,bh
  419744:	mov    edx,0x3a2d929b
  419749:	int3   
  41974a:	xchg   BYTE PTR [edx+0x3378eb9b],ah
  419750:	add    DWORD PTR [ebx+0x73],0x35c81249
  419757:	scas   eax,DWORD PTR es:[edi]
  419758:	adc    al,0x6a
  41975a:	loop   0x419716
  41975c:	or     esi,DWORD PTR [edi+edx*2+0x14]
  419760:	add    eax,0xa6224c27
  419765:	aas    
  419766:	sub    al,0xf9
  419768:	cmp    DWORD PTR [eax+0x14],0x5a987a97
  41976f:	add    ah,BYTE PTR [eax-0x22]
  419772:	push   esp
  419773:	mov    ebx,0x14618dea
  419778:	idiv   DWORD PTR [edx-0x4d]
  41977b:	jno    0x4197ce
  41977d:	xor    BYTE PTR [eax],ch
  41977f:	ret    0x757a
  419782:	mov    cl,0x39
  419784:	jle    0x4197eb
  419786:	inc    eax
  419787:	mov    esp,0xa6cf8337
  41978c:	fisubr DWORD PTR [esi]
  41978e:	add    cl,BYTE PTR [eax+0x39]
  419791:	mov    eax,0x1b4db7dc
  419796:	cmp    ecx,DWORD PTR [ebx]
  419798:	pop    es
  419799:	mov    cl,0x80
  41979b:	pop    ebx
  41979c:	cmp    DWORD PTR ds:0x775398dd,ebp
  4197a2:	jmp    0x41978c
  4197a4:	aam    0x5a
  4197a6:	call   0x5aa5046f
  4197ab:	mov    BYTE PTR [eax+0x71],bl
  4197ae:	or     al,0x64
  4197b0:	test   al,0x23
  4197b2:	xchg   ebx,eax
  4197b3:	ins    DWORD PTR es:[edi],dx
  4197b4:	into   
  4197b5:	mov    bh,BYTE PTR [esi-0x18653466]
  4197bb:	ds xchg al,dl
  4197be:	mov    ch,0x54
  4197c0:	iret   
  4197c1:	bound  esi,QWORD PTR [edx-0x56e52147]
  4197c7:	and    BYTE PTR [edi],al
  4197c9:	pusha  
  4197ca:	dec    eax
  4197cb:	jne    0x419812
  4197cd:	sub    al,0x34
  4197cf:	scas   eax,DWORD PTR es:[edi]
  4197d0:	es jg  0x41982a
  4197d3:	ja     0x419771
  4197d5:	test   al,0xe1
  4197d7:	sub    al,0x87
  4197d9:	xchg   edi,eax
  4197da:	imul   eax,DWORD PTR [ecx+edx*1],0xd82b0425
  4197e1:	mov    ch,0xe4
  4197e3:	xchg   ecx,eax
  4197e4:	pop    esp
  4197e5:	clc    
  4197e6:	and    edi,ebp
  4197e8:	sub    DWORD PTR ds:0xf9186ac8,0xffffff8b
  4197ef:	shl    BYTE PTR [edi-0x1f],0x85
  4197f3:	dec    eax
  4197f4:	pop    ss
  4197f5:	inc    esi
  4197f6:	xchg   esp,eax
  4197f7:	scas   al,BYTE PTR es:[edi]
  4197f8:	push   es
  4197f9:	test   eax,0x230a4b29
  4197fe:	ret    0x1d7a
  419801:	loop   0x4197e4
  419803:	and    BYTE PTR [ebx-0x6e],al
  419806:	ds push 0x886afe7a
  41980c:	mov    ch,0x4
  41980e:	mov    WORD PTR [ebx+0x2efa4fa9],ss
  419814:	pop    esp
  419815:	or     BYTE PTR [eax],ch
  419817:	and    edi,eax
  419819:	cmp    DWORD PTR [esi+0x2feecd86],edx
  41981f:	push   ebx
  419820:	gs and al,0x96
  419823:	and    al,0x90
  419825:	push   ecx
  419826:	in     al,0x3c
  419828:	and    DWORD PTR [ecx+0x7],edx
  41982b:	dec    edi
  41982c:	fwait
  41982d:	std    
  41982e:	xor    al,BYTE PTR [ecx]
  419830:	adc    DWORD PTR [ebx],edx
  419832:	inc    esp
  419833:	inc    eax
  419834:	inc    ebx
  419835:	mov    eax,DWORD PTR [eax+0x43]
  419838:	cwde   
  419839:	and    al,0x0
  41983b:	scas   al,BYTE PTR es:[edi]
  41983c:	jae    0x41985d
  41983e:	jp     0x41986b
  419840:	inc    esp
  419841:	outs   dx,DWORD PTR ds:[esi]
  419842:	push   eax
  419843:	mov    dh,0x81
  419845:	enter  0x417c,0x2a
  419849:	mov    ecx,edx
  41984b:	jns    0x419823
  41984d:	fisttp DWORD PTR [edx+edx*8-0x19]
  419851:	imul   esp,DWORD PTR [edx-0x50],0x50153968
  419858:	fadd   QWORD PTR [edx]
  41985a:	adc    al,0xb4
  41985c:	test   DWORD PTR [edx-0x474df96c],esi
  419862:	mov    ecx,0x95b51217
  419867:	shr    DWORD PTR [esp+eax*8+0x14e123c],0xbe
  41986f:	mov    ebp,0x71616388
  419874:	jae    0x4198b0
  419876:	fld    QWORD PTR [edi+0x7]
  419879:	data16 outs dx,BYTE PTR ds:[esi]
  41987b:	jno    0x419896
  41987d:	pop    esi
  41987e:	push   ebp
  41987f:	bound  sp,DWORD PTR [eax-0x72]
  419883:	add    DWORD PTR [esi],esi
  419885:	inc    edx
  419886:	es (bad) 
  419888:	loope  0x419812
  41988a:	or     ecx,DWORD PTR [edx+esi*8]
  41988d:	cmp    DWORD PTR [edi+0x7063816b],ecx
  419893:	jnp    0x41987b
  419895:	jl     0x419913
  419897:	inc    eax
  419898:	cmp    ch,BYTE PTR [ecx+0x220db32d]
  41989e:	xor    BYTE PTR [edx+0x30d2a2d7],bl
  4198a4:	test   eax,0x622f6ef4
  4198a9:	sub    ah,BYTE PTR [esi+0x9]
  4198ac:	push   edx
  4198ad:	xor    BYTE PTR [ecx+0x2212ca9d],bh
  4198b3:	mov    ebp,0xb012a780
  4198b8:	(bad)  
  4198b9:	or     DWORD PTR [esi+0x44],ebx
  4198bc:	test   eax,0x1c3168c6
  4198c1:	fadd   QWORD PTR [edi+edx*4+0x18c71068]
  4198c8:	or     eax,0x604bc969
  4198cd:	scas   eax,DWORD PTR es:[edi]
  4198ce:	iret   
  4198cf:	xlat   BYTE PTR ds:[ebx]
  4198d0:	jae    0x419943
  4198d2:	ins    DWORD PTR es:[edi],dx
  4198d3:	jle    0x4198f4
  4198d5:	dec    ecx
  4198d6:	push   es
  4198d7:	fwait
  4198d8:	xor    ch,BYTE PTR [edi]
  4198da:	and    ah,BYTE PTR [edi+0x43]
  4198dd:	call   0x816fe57c
  4198e2:	sbb    DWORD PTR [ecx],0x1c
  4198e5:	and    eax,0x7a6369
  4198ea:	je     0x419893
  4198ec:	mov    esp,0x7f68917a
  4198f1:	mov    ch,0xc3
  4198f3:	mov    ds:0x224e0720,eax
  4198f8:	ds into 
  4198fa:	sub    ebp,ebx
  4198fc:	adc    esi,DWORD PTR [edi-0x31f8748e]
  419902:	dec    edx
  419903:	rol    DWORD PTR [eax],1
  419905:	sbb    ebp,DWORD PTR [ebx+eiz*4-0x485868cb]
  41990c:	mov    WORD PTR [esi-0x371f9596],?
  419912:	or     al,0x46
  419914:	mov    ah,0x4f
  419916:	outs   dx,DWORD PTR ds:[esi]
  419917:	sbb    BYTE PTR [ebp+0x17c1f493],ch
  41991d:	dec    edx
  41991e:	mov    bl,0xfc
  419920:	rcr    BYTE PTR [edx-0x15df08e2],0xf5
  419927:	inc    edx
  419928:	(bad)  
  419929:	mov    dl,0x42
  41992b:	jge    0x4198b3
  41992d:	ret    0x5b68
  419930:	dec    ecx
  419931:	or     eax,0xed6260bf
  419936:	or     ah,BYTE PTR [ebx]
  419938:	jae    0x419970
  41993a:	jns    0x419975
  41993c:	jb     0x4198c1
  41993e:	call   0x2852:0xd45c6fd8
  419945:	daa    
  419946:	and    ch,BYTE PTR [eax]
  419948:	aad    0x40
  41994a:	xor    BYTE PTR gs:[ebp+ebp*4+0x1a],0x8d
  419950:	dec    edi
  419951:	mov    edi,gs
  419953:	popf   
  419954:	xchg   edx,eax
  419955:	jnp    0x4199bf
  419957:	scas   al,BYTE PTR es:[edi]
  419958:	sbb    ch,BYTE PTR [eax-0x6c]
  41995b:	pop    eax
  41995c:	shl    DWORD PTR [eax+0x6caa861d],cl
  419962:	and    DWORD PTR [esi],ebx
  419964:	ds adc ebp,0x14
  419968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419969:	cli    
  41996a:	jo     0x4199db
  41996c:	lds    ecx,FWORD PTR [ecx-0x60a5fa51]
  419972:	adc    DWORD PTR [edi+0x5f],ebx
  419975:	mov    dl,0xe6
  419977:	les    ebx,FWORD PTR [ecx+ebp*1]
  41997a:	int3   
  41997b:	mov    bh,0x40
  41997d:	(bad)  
  41997e:	loopne 0x419995
  419980:	sbb    bl,0x6f
  419983:	sub    eax,0xd81f62a6
  419988:	push   ecx
  419989:	inc    ebx
  41998a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41998b:	inc    eax
  41998c:	push   ebp
  41998d:	inc    edx
  41998e:	and    BYTE PTR [esi],0x7d
  419991:	cld    
  419992:	arpl   WORD PTR [eax],cx
  419994:	sar    BYTE PTR [ebp+0x60],0x1b
  419998:	setae  BYTE PTR [ebx+0x46cb1352]
  41999f:	sub    al,0x90
  4199a1:	push   ss
  4199a2:	dec    ecx
  4199a3:	push   eax
  4199a4:	cmpxchg DWORD PTR [bx],ebx
  4199a8:	fiadd  WORD PTR [edx+0x40]
  4199ab:	inc    ebp
  4199ac:	jb     0x419a01
  4199ae:	dec    ebx
  4199af:	sti    
  4199b0:	and    DWORD PTR [eax-0x32ec2396],edx
  4199b6:	inc    eax
  4199b7:	std    
  4199b8:	pop    edi
  4199b9:	sbb    DWORD PTR [edi+ebp*1],esp
  4199bc:	pop    es
  4199bd:	aas    
  4199be:	std    
  4199bf:	mov    ebp,0x851cf806
  4199c4:	dec    edx
  4199c5:	adc    DWORD PTR [esi-0x52334b97],esi
  4199cb:	outs   dx,BYTE PTR ds:[esi]
  4199cc:	stc    
  4199cd:	push   es
  4199ce:	pop    esp
  4199cf:	loope  0x4199f7
  4199d1:	dec    ecx
  4199d2:	cmp    DWORD PTR [esi+esi*8],ebp
  4199d5:	mov    bl,dl
  4199d7:	xor    bl,BYTE PTR [ebx-0x12]
  4199da:	aas    
  4199db:	pop    ss
  4199dc:	shl    DWORD PTR [eax],0xa6
  4199df:	sub    bl,BYTE PTR [edx+0x1a624989]
  4199e5:	test   cl,dh
  4199e7:	and    esp,DWORD PTR [eax-0x41]
  4199ea:	jno    0x4199af
  4199ec:	sbb    al,BYTE PTR [ebx]
  4199ee:	(bad)  
  4199f0:	jmp    0x419a36
  4199f2:	cwde   
  4199f3:	pop    es
  4199f4:	or     ah,BYTE PTR [edx]
  4199f6:	fs mov ah,0x1d
  4199f9:	(bad)  
  4199fa:	sbb    edx,edi
  4199fc:	and    esi,eax
  4199fe:	sbb    ebp,DWORD PTR [eax+0x32]
  419a01:	adc    al,0x4a
  419a03:	int    0x49
  419a05:	stos   BYTE PTR es:[edi],al
  419a06:	ror    DWORD PTR [ebp+0x4c626ccd],0xa
  419a0d:	mov    ecx,0xb5e82564
  419a12:	mov    ss,WORD PTR ds:0x3a6a60a4
  419a18:	and    DWORD PTR [ebp+0x4e],0xe5e9cd6
  419a1f:	fistp  QWORD PTR [edi]
  419a21:	pop    ss
  419a22:	push   edx
  419a23:	mov    esi,0x3fee09a7
  419a28:	(bad)  
  419a29:	and    ah,bl
  419a2b:	xchg   edx,eax
  419a2c:	popf   
  419a2d:	fcomi  st,st(2)
  419a2f:	pop    edx
  419a30:	in     al,dx
  419a31:	outs   dx,DWORD PTR ds:[esi]
  419a32:	xor    dl,ah
  419a34:	(bad)  
  419a35:	jno    0x419a4f
  419a37:	xchg   edi,eax
  419a38:	adc    eax,DWORD PTR [esi+0x19]
  419a3b:	pop    ebp
  419a3c:	cld    
  419a3d:	add    eax,0x215a4618
  419a42:	jbe    0x419a5f
  419a44:	(bad)  
  419a45:	(bad)  
  419a46:	ins    BYTE PTR es:[edi],dx
  419a47:	pushf  
  419a48:	cmp    DWORD PTR [ebx-0x35741ad],ebp
  419a4e:	lahf   
  419a4f:	or     eax,0x7d2f0020
  419a54:	iret   
  419a55:	mov    al,0xc
  419a57:	cli    
  419a58:	and    al,0xb4
  419a5a:	add    eax,0x12b8750
  419a5f:	dec    ebp
  419a60:	(bad)  [edx+0x62bb7500]
  419a66:	add    ah,BYTE PTR [eax]
  419a68:	and    DWORD PTR [ebx+0x35],edi
  419a6b:	and    al,0xa
  419a6d:	jns    0x419a6f
  419a6f:	and    eax,0x305357e3
  419a74:	mov    eax,0x90144dc6
  419a79:	hlt    
  419a7a:	retf   
  419a7b:	scas   eax,DWORD PTR es:[edi]
  419a7c:	push   esi
  419a7d:	adc    cl,BYTE PTR [ebp+0x24]
  419a80:	or     cl,ch
  419a82:	xor    dl,bl
  419a84:	stos   DWORD PTR es:[edi],eax
  419a85:	hlt    
  419a86:	cmp    al,BYTE PTR [esi-0x65e667aa]
  419a8c:	xchg   ebx,eax
  419a8d:	push   es
  419a8e:	mov    BYTE PTR [edx+0x11],dh
  419a91:	adc    eax,ebx
  419a93:	pop    esp
  419a94:	xchg   ebp,eax
  419a95:	jg     0x419aa2
  419a97:	cmp    al,0x75
  419a99:	or     edx,esp
  419a9b:	mov    ds:0x4c3f9a04,al
  419aa0:	inc    edx
  419aa1:	js     0x419aa3
  419aa3:	dec    ecx
  419aa4:	imul   esp,eax,0x33d2c4c
  419aaa:	ja     0x419ad0
  419aac:	(bad)  
  419aad:	out    dx,eax
  419aae:	test   BYTE PTR [ebp+0x74],ah
  419ab1:	or     al,0xca
  419ab3:	sub    cl,BYTE PTR [eax+0x19364916]
  419ab9:	mov    ebp,DWORD PTR [esi+0x6]
  419abc:	pcmpeqb mm1,QWORD PTR [edi]
  419abf:	das    
  419ac0:	sbb    al,dl
  419ac2:	adc    al,BYTE PTR [ebp+0x339e98f7]
  419ac8:	push   cs
  419ac9:	and    bl,BYTE PTR [ecx]
  419acb:	test   edx,eax
  419acd:	adc    DWORD PTR [ecx-0x7],ebp
  419ad0:	(bad)  
  419ad1:	add    al,BYTE PTR es:[ecx+0x485b6f4e]
  419ad8:	adc    al,0x8f
  419ada:	dec    edi
  419adb:	enter  0xf91b,0xbc
  419adf:	mov    al,ds:0x5423c336
  419ae4:	cmovle ebp,DWORD PTR [esi+0x77bd8a8f]
  419aeb:	fisttp DWORD PTR [ebx+0x26]
  419aee:	push   0xe13d7fa
  419af3:	push   ecx
  419af4:	loop   0x419b0d
  419af6:	nop
  419af7:	dec    ecx
  419af8:	(bad)  
  419af9:	cwde   
  419afa:	call   DWORD PTR [eax]
  419afc:	inc    esp
  419afd:	int    0x90
  419aff:	cdq    
  419b00:	mov    ch,0x49
  419b02:	icebp  
  419b03:	gs push 0xf12e7cb2
  419b09:	push   cs
  419b0a:	jo     0x419abb
  419b0c:	inc    esi
  419b0d:	out    0x33,eax
  419b0f:	mov    dl,0x3a
  419b11:	sub    eax,0x2405166c
  419b16:	cmp    al,al
  419b18:	or     ah,BYTE PTR [esi]
  419b1a:	push   ecx
  419b1b:	cli    
  419b1c:	mov    ebx,0xb5295e6a
  419b21:	inc    ebp
  419b22:	lgs    esi,FWORD PTR [edx]
  419b25:	aam    0x17
  419b27:	sub    ch,0x8c
  419b2a:	dec    ebp
  419b2b:	sub    edx,ebp
  419b2d:	vcmpss xmm3,xmm0,DWORD PTR [ebp-0x2263a3bb],0xe4
  419b36:	inc    edx
  419b37:	sub    dl,0x73
  419b3a:	or     DWORD PTR [ebx],esp
  419b3c:	retf   
  419b3d:	and    BYTE PTR [edi],al
  419b3f:	prefetch (bad)
  419b40:	or     eax,0x34612fec
  419b45:	pop    ebx
  419b46:	mov    esp,0x363dd213
  419b4b:	test   BYTE PTR [ebx+0x20],al
  419b4e:	ja     0x419b60
  419b50:	dec    ecx
  419b51:	fs dec edi
  419b53:	mov    esi,0xeb3391e5
  419b58:	xor    BYTE PTR [ecx+edx*4-0x4bfd21fe],dl
  419b5f:	pop    ds
  419b60:	mov    DWORD PTR [ecx],ecx
  419b62:	jmp    0x419bb7
  419b64:	jno    0x419b13
  419b66:	repnz add edx,DWORD PTR [ebp-0x1b]
  419b6a:	loopne 0x419b18
  419b6c:	inc    edi
  419b6d:	fs pop ecx
  419b6f:	cmp    eax,0x9509cb14
  419b74:	sbb    bh,dh
  419b76:	push   esi
  419b77:	xor    eax,0x96252819
  419b7c:	xor    edx,ecx
  419b7e:	fs xchg edi,eax
  419b80:	fadd   QWORD PTR [esi+0x29b51e38]
  419b86:	dec    edi
  419b87:	sbb    DWORD PTR [esi+0x43],esp
  419b8a:	sub    ecx,esp
  419b8c:	add    DWORD PTR [edx+0x582b2a08],eax
  419b92:	jmp    0x625676fd
  419b97:	test   eax,0x4931eacf
  419b9c:	inc    edx
  419b9d:	mov    eax,0x4269b307
  419ba2:	sbb    al,0x3e
  419ba4:	test   al,0xb3
  419ba6:	test   DWORD PTR [edx-0x77],ecx
  419ba9:	adc    ch,bl
  419bab:	stos   DWORD PTR es:[edi],eax
  419bac:	hlt    
  419bad:	push   ds
  419bae:	mov    esi,0x11e7af4c
  419bb3:	cpuid  
  419bb5:	add    DWORD PTR [ecx+0x5f3e5db7],0x976b4cb6
  419bbf:	push   esi
  419bc0:	pop    ds
  419bc1:	sbb    BYTE PTR [eax],ah
  419bc3:	mov    dl,ah
  419bc5:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bc7:	fisttp QWORD PTR [edx-0x3f57f2a1]
  419bcd:	or     BYTE PTR [esi],dh
  419bcf:	popa   
  419bd0:	lds    esp,FWORD PTR [ebx+edi*1+0x49]
  419bd4:	mov    BYTE PTR [ebx],bl
  419bd6:	or     DWORD PTR [edi+0x230a2991],eax
  419bdc:	pop    eax
  419bdd:	push   ds
  419bde:	sbb    al,0x17
  419be0:	jmp    0x54c8c77d
  419be5:	aas    
  419be6:	push   esi
  419be7:	cmp    cl,dl
  419be9:	pop    ecx
  419bea:	jg     0x419ba4
  419bec:	push   esp
  419bed:	outs   dx,DWORD PTR ds:[esi]
  419bee:	push   eax
  419bef:	pop    ds
  419bf0:	dec    esi
  419bf1:	ins    BYTE PTR es:[edi],dx
  419bf2:	xchg   ebx,eax
  419bf3:	xchg   ebp,eax
  419bf4:	pop    esp
  419bf5:	imul   edi,DWORD PTR [edi],0xffffff83
  419bf8:	sub    ebp,eax
  419bfa:	ret    0xb11
  419bfd:	outs   dx,BYTE PTR ds:[esi]
  419bfe:	xchg   ebp,eax
  419bff:	inc    ebx
  419c00:	sub    BYTE PTR [esi+ebx*4-0x7f],0x5
  419c05:	int    0x3b
  419c07:	pop    edx
  419c08:	fxch   st(6)
  419c0a:	dec    ebx
  419c0b:	int    0xf7
  419c0d:	call   0x748b:0xad4c088a
  419c14:	jp     0x419c20
  419c16:	mov    BYTE PTR [eax-0x27],bl
  419c19:	es push edx
  419c1b:	out    0xac,eax
  419c1d:	xchg   ebp,eax
  419c1e:	dec    ebp
  419c1f:	adc    ebp,DWORD PTR ds:0x14074096
  419c25:	call   0xb5f49eff
  419c2a:	nop
  419c2b:	cli    
  419c2c:	ins    BYTE PTR es:[edi],dx
  419c2d:	fs mov bh,ah
  419c30:	pop    ds
  419c31:	sub    esi,esp
  419c33:	enter  0x688e,0x3d
  419c37:	pop    edx
  419c38:	pop    esi
  419c39:	cwde   
  419c3a:	add    ebp,DWORD PTR [esi+0x4f314640]
  419c40:	jmp    FWORD PTR [eax+0x16]
  419c43:	mov    ds:0xc84e7881,al
  419c48:	mov    bh,0x95
  419c4a:	sti    
  419c4b:	icebp  
  419c4c:	inc    edx
  419c4d:	jecxz  0x419c6d
  419c4f:	jbe    0x419ca0
  419c51:	lahf   
  419c52:	call   0x2c2c077d
  419c57:	push   0x6a6b25d8
  419c5c:	jbe    0x419c9c
  419c5e:	ins    DWORD PTR es:[edi],dx
  419c5f:	lock out dx,al
  419c61:	push   esi
  419c62:	cmp    eax,0x5c2761b4
  419c67:	add    al,0x4b
  419c69:	and    eax,0x3417471c
  419c6e:	pop    ds
  419c6f:	adc    al,0xb
  419c71:	adc    al,0x87
  419c73:	and    al,0x4
  419c75:	adc    esi,DWORD PTR [eax+0x3e]
  419c78:	cmc    
  419c79:	inc    ebx
  419c7a:	sub    BYTE PTR [esi+0x5a03177d],bh
  419c80:	sbb    ebx,DWORD PTR [edx+edi*8-0x503373b]
  419c87:	sub    DWORD PTR [eax-0x778b4f9d],ebx
  419c8d:	mov    es,WORD PTR [edi]
  419c8f:	dec    eax
  419c90:	jb     0x419c6c
  419c92:	cmp    al,0x86
  419c94:	xchg   ebp,eax
  419c95:	les    edx,FWORD PTR [ebx]
  419c97:	sbb    DWORD PTR [edx-0x62],ecx
  419c9a:	mov    al,fs:0x139d03b2
  419ca0:	adc    bh,dh
  419ca2:	push   ebp
  419ca3:	mov    ebp,0x67db2158
  419ca8:	or     bh,al
  419caa:	repnz dec ecx
  419cac:	pop    ecx
  419cad:	adc    eax,0x74236c53
  419cb2:	add    eax,DWORD PTR [esi+0x39]
  419cb5:	cmp    edi,eax
  419cb7:	inc    esi
  419cb8:	div    edx
  419cba:	fs test eax,0x1e139add
  419cc0:	mov    ds:0x1580188a,al
  419cc5:	adc    ebp,DWORD PTR [eax-0x4c]
  419cc8:	dec    ecx
  419cc9:	inc    DWORD PTR [edi+0xd66d0f2]
  419ccf:	push   es
  419cd0:	or     DWORD PTR [ebx+eiz*2],edi
  419cd3:	mov    esp,0x802c2a90
  419cd8:	jle    0x419c65
  419cda:	xor    BYTE PTR [edx],0xad
  419cdd:	(bad)
  419ce0:	retf   0x4154
  419ce3:	mov    ds:0x301bc9e,al
  419ce8:	popa   
  419ce9:	stos   BYTE PTR es:[edi],al
  419cea:	cs mov bl,0xc3
  419ced:	(bad)  
  419cee:	call   0x5e59:0x4a95cba5
  419cf5:	xchg   esp,eax
  419cf6:	ins    BYTE PTR es:[edi],dx
  419cf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cf8:	imul   ebp,DWORD PTR [ebx],0x2409bd0f
  419cfe:	ins    DWORD PTR es:[edi],dx
  419cff:	mov    ah,0x2b
  419d01:	inc    ecx
  419d02:	xlat   BYTE PTR ds:[ebx]
  419d03:	dec    esp
  419d04:	fst    QWORD PTR [ecx]
  419d06:	in     eax,dx
  419d07:	pusha  
  419d08:	and    al,0x26
  419d0a:	rcr    DWORD PTR [ebx+0x667b8ad8],1
  419d10:	js     0x419cc3
  419d12:	xchg   esp,eax
  419d13:	repz cs out 0x57,eax
  419d17:	and    dl,BYTE PTR [eax+0x10]
  419d1a:	dec    ecx
  419d1b:	xchg   edi,eax
  419d1c:	das    
  419d1d:	xchg   edx,eax
  419d1e:	(bad)  
  419d1f:	out    dx,al
  419d20:	xor    ah,BYTE PTR [ebp-0x1b]
  419d23:	test   al,0xaf
  419d25:	retf   0xc55
  419d28:	repnz repz and al,0x24
  419d2c:	retf   
  419d2d:	lods   al,BYTE PTR ds:[esi]
  419d2e:	cmp    bl,BYTE PTR [ebx-0x5d]
  419d31:	add    eax,0x2427f024
  419d36:	lahf   
  419d37:	pop    ds
  419d38:	jbe    0x419cea
  419d3a:	mov    esi,0x58e776b4
  419d3f:	push   ss
  419d40:	lds    edx,FWORD PTR [ebx]
  419d42:	mov    esi,0x8a7e1046
  419d47:	pop    edx
  419d48:	fadd   QWORD PTR [eax-0x7c]
  419d4b:	pusha  
  419d4c:	dec    ecx
  419d4d:	fwait
  419d4e:	aad    0x1f
  419d50:	push   ss
  419d51:	inc    esi
  419d52:	sbb    eax,0x763b7169
  419d57:	sbb    al,BYTE PTR [esi+0x49cb8d11]
  419d5d:	js     0x419cfc
  419d5f:	fiadd  DWORD PTR [edi-0x33db92a4]
  419d65:	xor    BYTE PTR [ecx+ebp*2+0x7713782],dl
  419d6c:	lea    ecx,[esi-0x29c7eab5]
  419d72:	les    ebp,FWORD PTR [ebp-0x1f]
  419d75:	mov    ecx,0x8d83b394
  419d7a:	mov    DWORD PTR [ecx-0x49],0x4d611a0a
  419d81:	ret    0x607c
  419d84:	fs jo  0x419dc4
  419d87:	sbb    BYTE PTR [edx+0x5bf07b0b],dl
  419d8d:	es adc esi,esi
  419d90:	pusha  
  419d91:	or     bh,0xe4
  419d94:	cmp    al,0x52
  419d96:	mov    bl,0xc8
  419d98:	and    eax,0x65873df7
  419d9d:	(bad)  
  419d9e:	push   ecx
  419d9f:	jmp    FWORD PTR [ebx-0x8e9d62c]
  419da5:	xchg   edi,eax
  419da6:	test   BYTE PTR [eax],cl
  419da8:	or     DWORD PTR [ebp-0x107265ab],ecx
  419dae:	pusha  
  419daf:	inc    eax
  419db0:	es in  al,dx
  419db2:	hlt    
  419db3:	push   0x2985452f
  419db8:	and    bl,0x9c
  419dbb:	inc    ebp
  419dbc:	ror    DWORD PTR [ecx],cl
  419dbe:	xchg   DWORD PTR ds:0xc66803db,edi
  419dc4:	xchg   esi,eax
  419dc5:	retf   
  419dc6:	dec    esp
  419dc7:	arpl   WORD PTR [esi+0x44],dx
  419dca:	push   0xf1bc9c15
  419dcf:	dec    esp
  419dd0:	popa   
  419dd1:	fild   QWORD PTR [edx+0x32]
  419dd4:	cli    
  419dd5:	cli    
  419dd6:	call   0x48e7:0xe4910bc3
  419ddd:	jae    0x419df3
  419ddf:	sub    eax,DWORD PTR [edx+edi*4+0x61]
  419de3:	sub    DWORD PTR [ebp+edi*1+0x1448884],eax
  419dea:	xor    BYTE PTR [edx-0x7f6bb9cd],dl
  419df0:	ret    
  419df1:	xchg   esi,eax
  419df2:	jb     0x419e71
  419df4:	and    BYTE PTR [ecx-0x3a],0x64
  419df8:	xlat   BYTE PTR ds:[ebx]
  419df9:	mul    eax
  419dfb:	dec    esi
  419dfc:	ja     0x419e40
  419dfe:	add    ecx,DWORD PTR [ecx-0x5ad4b4ae]
  419e04:	clc    
  419e05:	adc    al,0x24
  419e07:	and    edi,edi
  419e09:	xor    eax,0x5f7e17ce
  419e0e:	push   0xa9b1498c
  419e13:	out    dx,eax
  419e14:	bound  ecx,QWORD PTR [edx+ecx*8]
  419e17:	lock mov eax,fs:0x667740e4
  419e1e:	imul   edi,DWORD PTR [edi+0x37da1628],0x403f44d3
  419e28:	inc    esi
  419e29:	jno    0x419e4b
  419e2b:	or     ebx,DWORD PTR [esi]
  419e2d:	add    ebp,DWORD PTR [esi+edi*2]
  419e30:	xchg   esi,eax
  419e31:	xor    ecx,DWORD PTR [edx+0x76012f09]
  419e37:	(bad)
  419e3a:	mov    esp,0x7492c800
  419e3f:	cmp    BYTE PTR ds:0x7d8b3f03,dh
  419e45:	rcl    BYTE PTR [ecx-0x54],1
  419e48:	shl    BYTE PTR [edx-0x69],cl
  419e4b:	push   ebx
  419e4c:	or     BYTE PTR [ebp+0x6cf68005],cl
  419e52:	mov    ecx,0xbe01ecb5
  419e57:	or     al,0x5
  419e59:	test   BYTE PTR [ecx],bh
  419e5b:	sbb    ah,ah
  419e5d:	dec    eax
  419e5e:	sbb    BYTE PTR [edi+0x29185e1],ah
  419e64:	test   BYTE PTR [bp+di],ah
  419e67:	sbb    bh,ah
  419e69:	jnp    0x7ee9c2e4
  419e6f:	shl    BYTE PTR [edx-0xd6edb82],1
  419e75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e76:	addr16 (bad) 
  419e78:	push   ebp
  419e79:	jg     0x419e9a
  419e7b:	jae    0x419ef8
  419e7d:	push   eax
  419e7e:	or     eax,0x4307f33f
  419e83:	pop    esp
  419e84:	or     dl,BYTE PTR [ebx+0x64874898]
  419e8a:	jmp    0x419e5e
  419e8c:	leave  
  419e8d:	pop    ebp
  419e8e:	cmc    
  419e8f:	stos   DWORD PTR es:[edi],eax
  419e90:	imul   edx,DWORD PTR fs:[esi+0xc],0x9e994821
  419e98:	ja     0x419e1f
  419e9a:	adc    ecx,DWORD PTR [esi-0x6]
  419e9d:	adc    BYTE PTR [edx],bh
  419e9f:	push   cs
  419ea0:	xor    al,0x76
  419ea2:	retf   
  419ea3:	adc    eax,0x95dbae38
  419ea8:	cdq    
  419ea9:	push   ds
  419eaa:	call   0x1697:0x43a3e943
  419eb1:	jecxz  0x419eb5
  419eb3:	push   ebx
  419eb4:	les    ebx,FWORD PTR [esi+ebp*4+0x5f]
  419eb8:	sbb    bh,BYTE PTR [esi-0x70]
  419ebb:	push   es
  419ebc:	mov    bl,0xe5
  419ebe:	test   BYTE PTR [edi],0x68
  419ec1:	inc    ebp
  419ec2:	into   
  419ec3:	pop    ecx
  419ec4:	sti    
  419ec5:	das    
  419ec6:	call   0xb1ccc36f
  419ecb:	push   ebp
  419ecc:	xor    BYTE PTR [edi-0x4f52952c],cl
  419ed2:	(bad)  
  419ed3:	dec    esp
  419ed4:	xchg   ebp,eax
  419ed5:	in     al,dx
  419ed6:	dec    ebp
  419ed7:	or     eax,0x41c83471
  419edc:	pop    eax
  419edd:	retf   
  419ede:	mov    edx,ebx
  419ee0:	neg    DWORD PTR [esi+0x7a]
  419ee3:	inc    edx
  419ee4:	dec    esi
  419ee5:	push   edx
  419ee6:	add    DWORD PTR [ebx],eax
  419ee8:	sub    al,0x4c
  419eea:	call   0x4225:0x9134be18
  419ef1:	out    dx,eax
  419ef2:	adc    BYTE PTR [eax-0x6ad876fb],0x2e
  419ef9:	cli    
  419efa:	shr    DWORD PTR [ebp-0x2c],cl
  419efd:	sbb    bh,BYTE PTR [edx-0xc]
  419f00:	leave  
  419f01:	dec    esp
  419f02:	sbb    al,0x70
  419f04:	lds    ecx,FWORD PTR gs:[edi+ebx*2-0x6e1dd570]
  419f0c:	or     ebx,eax
  419f0e:	jmp    0x419f24
  419f10:	popf   
  419f11:	mov    ebx,0x3593443e
  419f16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f17:	test   eax,0xc7a3117b
  419f1c:	popf   
  419f1d:	pop    ss
  419f1e:	pop    ebp
  419f1f:	ins    BYTE PTR es:[edi],dx
  419f20:	cmp    eax,0x1c06c1c8
  419f25:	cli    
  419f26:	jbe    0x419f76
  419f28:	and    eax,DWORD PTR [edi+ecx*4+0x26]
  419f2c:	adc    ecx,DWORD PTR [ecx+edx*1+0x19]
  419f30:	out    dx,eax
  419f31:	es nop
  419f33:	adc    DWORD PTR [esi+ebp*1],ebp
  419f36:	add    DWORD PTR [ebx+0x48],0xffffffc4
  419f3a:	inc    ebx
  419f3b:	jbe    0x419f77
  419f3d:	in     al,dx
  419f3e:	retf   
  419f3f:	pop    ds
  419f40:	pop    edx
  419f41:	xchg   edi,eax
  419f42:	test   DWORD PTR [edi-0x64],ecx
  419f45:	clc    
  419f46:	ss push esi
  419f48:	adc    al,0x32
  419f4a:	cli    
  419f4b:	add    eax,0x65fcbb4
  419f50:	xor    eax,DWORD PTR [ebx+0xd44a897]
  419f56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f57:	in     eax,dx
  419f58:	sub    dl,BYTE PTR [eax]
  419f5a:	lahf   
  419f5b:	fdiv   DWORD PTR [esi+0x39]
  419f5e:	jae    0x419f0f
  419f60:	adc    al,BYTE PTR [ebx-0xb]
  419f63:	inc    eax
  419f64:	mov    cl,0x74
  419f66:	push   esi
  419f67:	(bad)  
  419f69:	call   0x83e1ecbf
  419f6e:	and    BYTE PTR [ebx],0xfd
  419f71:	lea    edi,[ecx-0x5]
  419f74:	push   ebp
  419f75:	fwait
  419f76:	jl     0x419f8f
  419f78:	ret    
  419f79:	push   eax
  419f7a:	ret    0xf9b8
  419f7d:	(bad)  
  419f7e:	cli    
  419f7f:	dec    ebp
  419f80:	(bad)  
  419f82:	addr16 aam 0x51
  419f85:	sub    BYTE PTR [eax-0x6c983e31],al
  419f8b:	dec    ebx
  419f8c:	call   0x82bad779
  419f91:	pop    esp
  419f92:	mov    dl,0x98
  419f94:	mov    edx,0x5145d051
  419f99:	imul   esp,DWORD PTR [eax],0xffffffb3
  419f9c:	cmp    al,0xa5
  419f9e:	ins    BYTE PTR es:[edi],dx
  419f9f:	mov    ch,0xf2
  419fa1:	call   0x3921:0x1cb9457e
  419fa8:	xchg   esp,eax
  419fa9:	mov    ch,0xcb
  419fab:	jae    0x419f57
  419fad:	mov    ebp,0xcc210e47
  419fb2:	pop    ecx
  419fb3:	outs   dx,DWORD PTR ds:[esi]
  419fb4:	xchg   DWORD PTR [edi+eiz*2+0x46],edi
  419fb8:	out    dx,al
  419fb9:	push   cs
  419fba:	repnz popa 
  419fbc:	mov    al,0x97
  419fbe:	dec    esp
  419fbf:	ins    DWORD PTR es:[edi],dx
  419fc0:	imul   ecx,DWORD PTR [ebx+0x62],0x1a
  419fc4:	and    eax,0x1319c8be
  419fc9:	or     edi,DWORD PTR [ecx]
  419fcb:	sub    BYTE PTR [edx],dh
  419fcd:	ins    BYTE PTR es:[edi],dx
  419fce:	or     bh,BYTE PTR [ebx-0x45dbf0b8]
  419fd4:	outs   dx,BYTE PTR ds:[esi]
  419fd5:	inc    ebp
  419fd6:	pushf  
  419fd7:	dec    esp
  419fd8:	(bad)  
  419fd9:	(bad)  
  419fda:	stos   BYTE PTR es:[edi],al
  419fdb:	pop    edi
  419fdc:	sub    al,0x0
  419fde:	mov    al,0x41
  419fe0:	pusha  
  419fe1:	das    
  419fe2:	mov    eax,ds:0xab6bf58d
  419fe7:	sub    WORD PTR [ecx-0x6b3ee010],di
  419fee:	dec    ecx
  419fef:	repz fst QWORD PTR ds:[esi]
  419ff3:	retf   
  419ff4:	scas   al,BYTE PTR es:[edi]
  419ff5:	nop
  419ff6:	hlt    
  419ff7:	sub    al,0x21
  419ff9:	sbb    esi,edi
  419ffb:	or     cl,cl
  419ffd:	stc    
  419ffe:	sar    ecx,1
  41a000:	arpl   WORD PTR [edx-0x35f67ef2],sp
  41a006:	out    dx,eax
  41a007:	ret    0xf4fc
  41a00a:	fisub  DWORD PTR [edx]
  41a00c:	inc    ebx
  41a00d:	jp     0x41a016
  41a00f:	ror    BYTE PTR [edx+0x7d],0x59
  41a013:	pop    ss
  41a014:	(bad)  
  41a015:	adc    BYTE PTR [ebx-0x20a49eaa],dh
  41a01b:	in     eax,dx
  41a01c:	test   DWORD PTR [esi+0x5e],ecx
  41a01f:	push   ebx
  41a020:	pop    edx
  41a021:	dec    esp
  41a022:	push   0x53
  41a024:	outs   dx,BYTE PTR ds:[esi]
  41a025:	pop    esp
  41a026:	sahf   
  41a027:	out    dx,al
  41a028:	dec    edi
  41a029:	jmp    0xfd7f:0xbf504f22
  41a030:	adc    BYTE PTR [edi+0x66754b37],0x2b
  41a037:	cmp    al,0xe
  41a039:	es push eax
  41a03b:	push   edx
  41a03c:	dec    edx
  41a03d:	mov    al,ds:0x71441115
  41a042:	iret   
  41a043:	sub    eax,0x18cb3649
  41a048:	inc    ebp
  41a049:	lahf   
  41a04a:	and    eax,DWORD PTR [ecx+0x50565df5]
  41a050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a051:	stos   DWORD PTR es:[edi],eax
  41a052:	test   BYTE PTR [ebx+edx*1],al
  41a055:	or     eax,0xd33496c2
  41a05a:	push   esp
  41a05b:	add    BYTE PTR [ecx-0x1b],bh
  41a05e:	aam    0x7d
  41a060:	aam    0x98
  41a062:	jmp    0x41a0db
  41a064:	popf   
  41a065:	jp     0x41a019
  41a067:	out    dx,al
  41a068:	sbb    BYTE PTR [ebx+0x2da23e58],0x75
  41a06f:	push   edx
  41a070:	jl     0x41a0c9
  41a072:	retf   0x40ef
  41a075:	pop    edi
  41a076:	aas    
  41a077:	out    0x2c,al
  41a079:	dec    edx
  41a07a:	es popa 
  41a07c:	or     DWORD PTR [ecx-0x1a],esp
  41a07f:	push   0x7f5906af
  41a084:	fldcw  WORD PTR [edi]
  41a086:	icebp  
  41a087:	mov    esi,0x597e54f9
  41a08c:	add    eax,0x2d7b6968
  41a091:	es jge 0x41a0f1
  41a094:	idiv   DWORD PTR [eax]
  41a096:	aaa    
  41a097:	call   0x6c0b:0x147efef8
  41a09e:	fwait
  41a09f:	std    
  41a0a0:	stos   DWORD PTR es:[edi],eax
  41a0a1:	pushaw 
  41a0a3:	fst    QWORD PTR [ebp-0x5b12b05]
  41a0a9:	xchg   BYTE PTR [edx+0x358b7474],bh
  41a0af:	mov    eax,0xb1c56a58
  41a0b4:	imul   eax,DWORD PTR [ecx+0x4b],0x41
  41a0b8:	fld    DWORD PTR [edx+0x47]
  41a0bb:	idiv   ch
  41a0bd:	fsub   st(6),st
  41a0bf:	rcr    BYTE PTR [esi-0xc2002e],0xc
  41a0c6:	mov    ah,0x31
  41a0c8:	call   0xdbb1:0xda7fb349
  41a0cf:	mov    eax,0x884d046b
  41a0d4:	scas   eax,DWORD PTR es:[edi]
  41a0d5:	rcl    DWORD PTR [ecx+0x2e],cl
  41a0d8:	mov    esp,0xdefafcde
  41a0dd:	sub    dh,BYTE PTR [esi+0x3f35f3e4]
  41a0e3:	es xor al,0x9e
  41a0e6:	adc    BYTE PTR [ebx-0x40],ch
  41a0e9:	imul   ebx,ecx,0xffffff9e
  41a0ec:	push   cs
  41a0ed:	sub    al,0x87
  41a0ef:	(bad)  
  41a0f0:	aaa    
  41a0f1:	inc    ecx
  41a0f2:	jl     0x41a10b
  41a0f4:	pop    ecx
  41a0f5:	daa    
  41a0f6:	add    ch,0x10
  41a0f9:	stos   BYTE PTR es:[edi],al
  41a0fa:	or     eax,0x4a72c5b4
  41a0ff:	or     ebp,ecx
  41a101:	pop    edx
  41a102:	imul   DWORD PTR [ebx+0x2b]
  41a105:	sub    al,0x9c
  41a107:	lods   al,BYTE PTR ds:[esi]
  41a108:	out    0x55,al
  41a10a:	mov    ah,0xb1
  41a10c:	cmc    
  41a10d:	sar    BYTE PTR [edx],1
  41a10f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a110:	jns    0x41a0ff
  41a112:	mov    bh,0x39
  41a114:	in     eax,0x91
  41a116:	push   ebp
  41a117:	adc    ebp,edx
  41a119:	adc    al,0x5b
  41a11b:	test   eax,0xb8edfd62
  41a120:	inc    esp
  41a121:	dec    eax
  41a122:	push   es
  41a123:	js     0x41a132
  41a125:	in     al,dx
  41a126:	and    ah,al
  41a128:	scas   al,BYTE PTR es:[edi]
  41a129:	push   ebx
  41a12a:	cld    
  41a12b:	outs   dx,DWORD PTR ds:[esi]
  41a12c:	adc    al,0xf3
  41a12e:	cmc    
  41a12f:	repnz iret 
  41a131:	rol    DWORD PTR [ebp+0x5722223a],0x65
  41a138:	xchg   ebp,eax
  41a139:	adc    BYTE PTR [ebx+eax*2],0x1
  41a13d:	fild   WORD PTR [ebx-0x19]
  41a140:	(bad)  
  41a141:	jmp    0x41a162
  41a143:	ins    DWORD PTR es:[edi],dx
  41a144:	sub    BYTE PTR [ebx],0x48
  41a147:	cmp    BYTE PTR [ecx-0x28d276af],ah
  41a14d:	push   cs
  41a14e:	inc    esi
  41a14f:	dec    ebp
  41a150:	ins    BYTE PTR es:[edi],dx
  41a151:	xor    DWORD PTR es:[edi+0x78254247],eax
  41a158:	mov    al,0xf5
  41a15a:	call   0x6a57a84d
  41a15f:	pop    ecx
  41a160:	idiv   esi
  41a162:	retf   0x5879
  41a165:	nop
  41a166:	xchg   edi,eax
  41a167:	and    cl,0x32
  41a16a:	mov    dl,0x90
  41a16c:	adc    BYTE PTR [ecx-0x20],dh
  41a16f:	adc    al,0x86
  41a171:	pop    ds
  41a172:	js     0x41a1c1
  41a174:	ja     0x41a169
  41a176:	inc    ecx
  41a177:	in     eax,dx
  41a178:	pop    eax
  41a179:	and    ebx,DWORD PTR [edx+0x923eb0]
  41a17f:	mov    al,0x7
  41a181:	or     ch,BYTE PTR [esi+0x19]
  41a184:	out    dx,al
  41a185:	and    bl,BYTE PTR [edi-0x3f90dab5]
  41a18b:	out    dx,al
  41a18c:	in     al,0xf3
  41a18e:	cmp    ch,BYTE PTR [esi]
  41a190:	out    dx,eax
  41a191:	loope  0x41a14f
  41a193:	pop    ss
  41a194:	imul   eax,DWORD PTR [edi],0x59
  41a197:	hlt    
  41a198:	or     edx,ecx
  41a19a:	sbb    eax,0x8d802d1b
  41a19f:	jmp    0x41a170
  41a1a1:	push   ebx
  41a1a2:	mov    bh,0x32
  41a1a4:	fsubr  st,st(2)
  41a1a6:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41a1a8:	das    
  41a1a9:	aam    0xbd
  41a1ab:	mov    ch,0x48
  41a1ad:	dec    ecx
  41a1ae:	jg     0x41a134
  41a1b0:	ret    0x9d88
  41a1b3:	inc    esp
  41a1b4:	ds int 0x3c
  41a1b7:	inc    ecx
  41a1b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1b9:	xchg   BYTE PTR [edx],dh
  41a1bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1bc:	pop    es
  41a1bd:	xchg   ecx,eax
  41a1be:	mul    DWORD PTR [ecx]
  41a1c0:	cmp    BYTE PTR [ebx],dl
  41a1c2:	(bad)
  41a1c5:	(bad)  
  41a1c6:	mov    WORD PTR [ecx],?
  41a1c8:	sub    BYTE PTR [esp+edx*4],0x31
  41a1cc:	daa    
  41a1cd:	es lock push es
  41a1d0:	shl    DWORD PTR [eax],cl
  41a1d2:	add    al,0xd0
  41a1d4:	cwde   
  41a1d5:	mov    al,0x23
  41a1d7:	push   eax
  41a1d8:	mov    eax,0x2fefcc2f
  41a1dd:	and    DWORD PTR [edi],edx
  41a1df:	cmp    al,0xf4
  41a1e1:	push   ebp
  41a1e2:	inc    ecx
  41a1e3:	adc    DWORD PTR [edx],edi
  41a1e5:	and    ch,cl
  41a1e7:	daa    
  41a1e8:	and    BYTE PTR [edx-0x72f54ae1],bl
  41a1ee:	push   edi
  41a1ef:	sahf   
  41a1f0:	frstor [esi+edx*1-0x4d701376]
  41a1f7:	es push ds
  41a1f9:	jb     0x41a24b
  41a1fb:	inc    ebp
  41a1fc:	out    0x8b,al
  41a1fe:	mov    edi,0xed8cba6b
  41a203:	sbb    dh,bh
  41a205:	add    DWORD PTR [ebp-0x4a],edx
  41a208:	xchg   ebp,eax
  41a209:	jle    0x41a242
  41a20b:	test   BYTE PTR [ebx+0x4d850e2c],al
  41a211:	or     ah,BYTE PTR [ebx+0xa6d89e6]
  41a217:	add    ch,BYTE PTR [edx+0x5ec2293a]
  41a21d:	ffree  st(4)
  41a21f:	sbb    ecx,DWORD PTR ds:0x2f0a272b
  41a225:	(bad)  
  41a226:	push   esp
  41a227:	add    ecx,DWORD PTR ds:0x6aa64887
  41a22d:	fwait
  41a22e:	mov    ch,0xe0
  41a230:	pop    ebp
  41a231:	add    BYTE PTR [edi],dl
  41a233:	jge    0x41a21b
  41a235:	mov    BYTE PTR [ebp+0x76],dh
  41a238:	ins    BYTE PTR es:[edi],dx
  41a239:	pop    esi
  41a23a:	add    edx,DWORD PTR [ecx]
  41a23c:	ins    DWORD PTR es:[edi],dx
  41a23d:	inc    eax
  41a23e:	jb     0x41a25a
  41a240:	dec    edx
  41a241:	or     cl,al
  41a243:	cwde   
  41a244:	das    
  41a245:	es push eax
  41a247:	and    BYTE PTR [edx-0x4e590c64],al
  41a24d:	lods   al,BYTE PTR ds:[esi]
  41a24e:	push   ecx
  41a24f:	loopne 0x41a1d2
  41a251:	cmp    ebx,DWORD PTR [ebp+eax*4+0x64]
  41a255:	dec    edi
  41a256:	enter  0x208b,0x1d
  41a25a:	push   ds
  41a25b:	rol    dh,1
  41a25d:	sti    
  41a25e:	and    esp,DWORD PTR [edx+0x12]
  41a261:	or     DWORD PTR [edi],ebx
  41a263:	dec    edi
  41a264:	jp     0x41a259
  41a266:	lea    esp,[ebx-0xf]
  41a269:	pop    edi
  41a26a:	cmp    esi,DWORD PTR [esi-0x30]
  41a26d:	test   BYTE PTR [edx+0x15],cl
  41a270:	and    dh,cl
  41a272:	mov    al,ds:0xa4224b01
  41a277:	ja     0x41a22a
  41a279:	or     al,0x1b
  41a27b:	and    esi,DWORD PTR [edx-0x4c476dd3]
  41a281:	div    BYTE PTR [ecx]
  41a283:	cmp    dh,BYTE PTR [ebp-0x5b]
  41a286:	pop    edx
  41a287:	mov    cl,cl
  41a289:	pop    edx
  41a28a:	pop    edi
  41a28b:	shl    BYTE PTR [eax+ecx*4-0x4aae69a7],0x5f
  41a293:	mov    eax,fs
  41a295:	add    eax,0xfc1046c4
  41a29a:	mov    esp,0xfecc752e
  41a29f:	fs jl  0x41a28b
  41a2a2:	push   eax
  41a2a3:	push   ebx
  41a2a4:	xchg   esi,eax
  41a2a5:	out    dx,eax
  41a2a6:	jl     0x41a2de
  41a2a8:	dec    edx
  41a2a9:	retf   
  41a2aa:	mov    dl,dl
  41a2ac:	bound  edx,QWORD PTR [ebp+0x20]
  41a2af:	mov    es,WORD PTR [eax+0x3596dd20]
  41a2b5:	mov    ah,0x89
  41a2b7:	lods   al,BYTE PTR ds:[esi]
  41a2b8:	ss pushf 
  41a2ba:	test   eax,0x6ad18014
  41a2bf:	mov    al,0x20
  41a2c1:	add    al,0xb2
  41a2c3:	xchg   edi,eax
  41a2c4:	test   eax,0x82ba19f7
  41a2c9:	mov    ch,0x95
  41a2cb:	pop    edi
  41a2cc:	ja     0x41a2ec
  41a2ce:	add    DWORD PTR [edi-0xe549a03],0x1b
  41a2d5:	mov    dl,0x1a
  41a2d7:	lds    ebx,FWORD PTR [edi-0x5747008b]
  41a2dd:	cli    
  41a2de:	fdivr  QWORD PTR [edx]
  41a2e0:	push   ebx
  41a2e1:	or     DWORD PTR ds:0x8383d404,esp
  41a2e7:	scas   al,BYTE PTR es:[edi]
  41a2e8:	xchg   edi,eax
  41a2e9:	mov    al,ds:0xb9e202a7
  41a2ee:	loope  0x41a291
  41a2f0:	retf   
  41a2f1:	mov    dh,0x81
  41a2f3:	pushf  
  41a2f4:	add    BYTE PTR [ebp+0xc],bh
  41a2f7:	xchg   edi,eax
  41a2f8:	adc    ebx,edi
  41a2fa:	adc    cl,BYTE PTR [ebx+0x641d4d42]
  41a300:	or     ch,BYTE PTR [ebx-0x42]
  41a303:	scas   al,BYTE PTR es:[edi]
  41a304:	dec    edx
  41a305:	mov    edx,0x7b646121
  41a30a:	adc    DWORD PTR [esi+0x1d],0x8fdca01a
  41a311:	or     ah,BYTE PTR [ebx-0x7]
  41a314:	stc    
  41a315:	in     eax,dx
  41a316:	ffreep st(1)
  41a318:	(bad)  
  41a319:	loop   0x41a342
  41a31b:	pop    ebx
  41a31c:	mov    edx,0xa23fba8c
  41a321:	xchg   ecx,eax
  41a322:	repnz ins BYTE PTR es:[edi],dx
  41a324:	sub    eax,0xd289632
  41a329:	mov    bh,0xfe
  41a32b:	dec    ecx
  41a32c:	dec    ebx
  41a32d:	mov    bh,0x20
  41a32f:	adc    BYTE PTR [ecx+ebp*8-0xc7065e5],bh
  41a336:	and    al,0x6f
  41a338:	cmp    BYTE PTR [ecx+0x121b67b3],cl
  41a33e:	cs push 0x64542586
  41a344:	test   DWORD PTR [ecx-0x79338195],edx
  41a34a:	test   dh,ch
  41a34c:	pop    edi
  41a34d:	xchg   ebp,eax
  41a34e:	pop    esp
  41a34f:	and    BYTE PTR [esi-0x6ac0615c],cl
  41a355:	lods   eax,DWORD PTR ds:[esi]
  41a356:	out    0x2b,eax
  41a358:	add    al,0x3
  41a35a:	sub    BYTE PTR [ebp+0x6f],bh
  41a35d:	loope  0x41a36b
  41a35f:	add    DWORD PTR [ebp-0x72ecf690],0x0
  41a366:	js     0x41a342
  41a368:	mov    dl,BYTE PTR [eax+0x3b]
  41a36b:	jle    0x41a351
  41a36d:	jp     0x41a38a
  41a36f:	imul   ebp,ebx,0x2f8d5537
  41a375:	shl    BYTE PTR [ebx+edi*8],cl
  41a378:	or     al,0xe2
  41a37a:	or     eax,0x9a190596
  41a37f:	dec    ecx
  41a380:	fcmovbe st,st(0)
  41a382:	adc    ecx,DWORD PTR [ebp-0x80]
  41a385:	es mov edx,0xb69b8709
  41a38b:	ds xor eax,0x880e5570
  41a391:	shl    BYTE PTR [eax-0x77],0x25
  41a395:	pcmpgtb mm1,QWORD PTR [ebp+ecx*4+0x2a]
  41a39a:	fsub   DWORD PTR ds:0x5f4e12c7
  41a3a0:	xchg   BYTE PTR [edx+edx*1-0x2a],al
  41a3a4:	shl    esp,0xcf
  41a3a7:	pop    ebx
  41a3a8:	or     DWORD PTR [edi],edi
  41a3aa:	nop
  41a3ab:	pop    edi
  41a3ac:	and    eax,0x854f1af2
  41a3b1:	stos   DWORD PTR es:[edi],eax
  41a3b2:	clc    
  41a3b3:	lea    eax,[eax]
  41a3b5:	popf   
  41a3b6:	test   BYTE PTR [esi-0x11],al
  41a3b9:	call   0x1858:0xa0f1bd80
  41a3c0:	jmp    0x8dc225af
  41a3c5:	mov    esi,0x65bb3557
  41a3ca:	outs   dx,DWORD PTR ds:[esi]
  41a3cb:	push   esp
  41a3cc:	daa    
  41a3cd:	inc    edx
  41a3ce:	cwde   
  41a3cf:	xchg   ebx,eax
  41a3d0:	xor    esi,DWORD PTR [edi-0x56]
  41a3d3:	push   ecx
  41a3d4:	outs   dx,BYTE PTR ds:[esi]
  41a3d5:	mov    dl,0x8b
  41a3d7:	sbb    ch,BYTE PTR [edx+0x74]
  41a3da:	repnz jmp 0x8df4:0x171ffdd3
  41a3e2:	fsubrp st(1),st
  41a3e4:	dec    esi
  41a3e5:	jae    0x41a456
  41a3e7:	push   es
  41a3e8:	inc    ecx
  41a3e9:	pop    eax
  41a3ea:	aam    0xdb
  41a3ec:	mov    al,ds:0x55838e1a
  41a3f1:	int3   
  41a3f2:	adc    eax,0x8625f054
  41a3f7:	sbb    ch,BYTE PTR [ecx+edi*8+0x70]
  41a3fb:	data16 sub ah,BYTE PTR [edx+edx*1-0x72]
  41a400:	test   eax,0xa6aedc5f
  41a405:	nop
  41a406:	adc    al,0xea
  41a408:	jmp    0x4f08:0x87513482
  41a40f:	push   ecx
  41a410:	sar    BYTE PTR [esi+ebp*8+0x6a],cl
  41a414:	mov    edx,0xbc1aef1d
  41a419:	pop    eax
  41a41a:	mov    edx,DWORD PTR [ebx]
  41a41c:	sub    DWORD PTR [eax+0x26],edi
  41a41f:	es jae 0x41a3b4
  41a422:	xchg   esp,eax
  41a423:	sub    DWORD PTR [eax-0x22c613ad],0x7b
  41a42a:	pop    ss
  41a42b:	jmp    0x41a480
  41a42d:	test   al,0xca
  41a42f:	sbb    al,0xc8
  41a431:	or     BYTE PTR [esp+ecx*1+0x752cd1c9],bh
  41a438:	iret   
  41a439:	push   es
  41a43a:	add    al,0xb4
  41a43c:	repz int 0x0
  41a43f:	add    al,0xb6
  41a441:	out    dx,eax
  41a442:	dec    ebp
  41a443:	cld    
  41a444:	cmp    BYTE PTR [ecx-0x48],bl
  41a447:	lahf   
  41a448:	jecxz  0x41a4af
  41a44a:	push   eax
  41a44b:	pop    ebx
  41a44c:	mov    ds:0x431447f3,al
  41a451:	push   edx
  41a452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a453:	mov    cl,0x3
  41a455:	sub    eax,0xec36125b
  41a45a:	(bad)  
  41a45b:	stos   BYTE PTR es:[edi],al
  41a45c:	sub    eax,DWORD PTR [edx+0x5a]
  41a45f:	xchg   ebp,eax
  41a460:	mov    dl,0x23
  41a462:	adc    DWORD PTR [edx+eax*2],edi
  41a465:	or     al,0xb2
  41a467:	push   ds
  41a468:	inc    ebx
  41a469:	sub    al,0x37
  41a46b:	scas   al,BYTE PTR es:[edi]
  41a46c:	mov    ebp,0xc7183b35
  41a471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a472:	or     ah,al
  41a474:	sbb    al,0xea
  41a476:	icebp  
  41a477:	or     ecx,ecx
  41a479:	aad    0x77
  41a47b:	mov    ecx,0x4d42d6c5
  41a480:	fs xchg ebp,ebx
  41a483:	fld    TBYTE PTR [edi-0x22]
  41a486:	(bad)  
  41a487:	dec    ecx
  41a488:	pop    eax
  41a489:	aam    0xec
  41a48b:	mov    bh,BYTE PTR [edx]
  41a48d:	xchg   ecx,eax
  41a48e:	add    eax,0x8afb9e1
  41a493:	js     0x41a4ab
  41a495:	mov    edx,0x72aa2f5b
  41a49a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a49b:	sbb    al,0x5e
  41a49d:	push   ecx
  41a49e:	jns    0x41a42d
  41a4a0:	hlt    
  41a4a1:	pop    ebx
  41a4a2:	repnz cmp eax,0x47ec21da
  41a4a8:	adc    dh,BYTE PTR [esi+ecx*2+0x6de2dff3]
  41a4af:	mov    ds,WORD PTR [edx+0x23]
  41a4b2:	xor    cl,BYTE PTR [ecx]
  41a4b4:	mov    eax,0x3b10e25e
  41a4b9:	xlat   BYTE PTR ds:[ebx]
  41a4ba:	inc    esp
  41a4bb:	jnp    0x41a4a3
  41a4bd:	mov    edx,0xef5f0689
  41a4c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4c3:	or     cl,BYTE PTR [edx-0x6fe4e824]
  41a4c9:	mov    cl,dh
  41a4cb:	adc    eax,0xa51c790d
  41a4d0:	rcr    ebx,1
  41a4d2:	xchg   ebp,eax
  41a4d3:	add    eax,0x58923e9d
  41a4d8:	sub    al,BYTE PTR [ebx]
  41a4da:	test   DWORD PTR [edx-0x22],ebx
  41a4dd:	sub    BYTE PTR [edx-0x3b00bd10],cl
  41a4e3:	aas    
  41a4e4:	std    
  41a4e5:	outs   dx,DWORD PTR ds:[esi]
  41a4e6:	cdq    
  41a4e7:	jmp    0xb6771068
  41a4ec:	xchg   edi,eax
  41a4ee:	pop    eax
  41a4ef:	push   edi
  41a4f0:	cld    
  41a4f1:	sbb    esi,DWORD PTR [eax-0x11]
  41a4f4:	xchg   DWORD PTR [ebx],edx
  41a4f6:	in     eax,dx
  41a4f7:	(bad)  
  41a4f8:	xchg   esi,eax
  41a4f9:	daa    
  41a4fa:	push   esi
  41a4fb:	(bad)
  41a4fe:	icebp  
  41a4ff:	ins    DWORD PTR es:[edi],dx
  41a500:	sub    BYTE PTR [edx],0xd7
  41a503:	(bad)  
  41a504:	js     0x41a4a8
  41a506:	mov    ss,WORD PTR [ecx]
  41a508:	cs xchg esi,eax
  41a50a:	cli    
  41a50b:	fsubr  QWORD PTR [edx+edx*8]
  41a50e:	push   esi
  41a50f:	cs or  al,0xc4
  41a512:	pop    ds
  41a513:	mov    edx,0x451403b2
  41a518:	aaa    
  41a519:	test   DWORD PTR [ebp+eax*4-0x4dd26d2a],esp
  41a520:	mov    esp,0xe37dc660
  41a525:	in     eax,dx
  41a526:	test   eax,0x97dc6d58
  41a52b:	dec    ebp
  41a52c:	xlat   BYTE PTR ds:[ebx]
  41a52d:	inc    eax
  41a52e:	aam    0x54
  41a530:	(bad)  
  41a532:	out    dx,eax
  41a533:	mov    ds:0xf30a1e59,al
  41a538:	js     0x41a4d9
  41a53a:	adc    eax,0x7cdaf24e
  41a53f:	sub    DWORD PTR [ebx],esp
  41a541:	pop    edx
  41a542:	sub    esi,DWORD PTR [ebp+0x5a]
  41a545:	js     0x41a4fd
  41a547:	test   cl,cl
  41a549:	out    dx,al
  41a54a:	xchg   edi,eax
  41a54b:	fst    DWORD PTR [ebp+0x1a]
  41a54e:	adc    esi,eax
  41a550:	scas   eax,DWORD PTR es:[edi]
  41a551:	ficomp WORD PTR [eax+0x7]
  41a554:	dec    ecx
  41a555:	push   esp
  41a556:	xchg   BYTE PTR [ebx],dl
  41a558:	dec    ebx
  41a559:	mov    ds,ebp
  41a55b:	xor    eax,0xbfd3eaac
  41a560:	nop
  41a561:	sub    eax,0xd21f2b87
  41a566:	paddsw mm2,QWORD PTR [esi-0x2c]
  41a56a:	adc    BYTE PTR [esi-0x75],al
  41a56d:	add    ah,ch
  41a56f:	retf   
  41a570:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a571:	push   ss
  41a572:	iret   
  41a573:	sub    eax,0x5c81f426
  41a578:	inc    edi
  41a579:	pushf  
  41a57a:	data16 out dx,al
  41a57c:	(bad)  
  41a57d:	inc    eax
  41a57e:	sub    BYTE PTR [esi+0x69],al
  41a581:	dec    edx
  41a582:	mov    ebx,0x3f3ae9ba
  41a587:	sub    cl,BYTE PTR [eax+0x4c]
  41a58a:	cs dec ebp
  41a58c:	ret    0x3f87
  41a58f:	int    0xb0
  41a591:	adc    ecx,edx
  41a593:	and    ah,BYTE PTR [edx]
  41a595:	aad    0xe4
  41a597:	mov    ebp,0x407a4597
  41a59c:	push   ecx
  41a59d:	dec    ebx
  41a59e:	xchg   edx,eax
  41a59f:	shl    BYTE PTR [ebx+ebp*8-0x7fe218ab],cl
  41a5a6:	inc    ebx
  41a5a7:	shl    BYTE PTR [edx-0x2e1a2639],cl
  41a5ad:	or     DWORD PTR [esi-0x2fc6e191],eax
  41a5b3:	cld    
  41a5b4:	and    eax,0x446cac6
  41a5b9:	jmp    0xc962:0x4b68f66b
  41a5c0:	out    0x25,eax
  41a5c2:	sub    ebp,DWORD PTR [ebp+0x4dbbb405]
  41a5c8:	add    eax,0x715e4fbe
  41a5cd:	mov    esi,DWORD PTR [eax+0x330401f8]
  41a5d3:	in     al,0xb1
  41a5d5:	xor    DWORD PTR [edi+0x16],0xffffffb9
  41a5d9:	mov    DWORD PTR ds:0xc203791d,eax
  41a5df:	leave  
  41a5e0:	ins    DWORD PTR es:[edi],dx
  41a5e1:	(bad)  
  41a5e2:	bound  ebx,QWORD PTR [ebp+0x23]
  41a5e5:	cmp    edi,DWORD PTR [esi-0x2a]
  41a5e8:	mov    esp,0xa5f526a4
  41a5ed:	dec    esp
  41a5ee:	pop    ecx
  41a5ef:	dec    eax
  41a5f0:	(bad)  
  41a5f1:	cmp    eax,0xb9404c9b
  41a5f6:	loopne 0x41a5d8
  41a5f8:	test   BYTE PTR [edi+0xc],dl
  41a5fb:	add    DWORD PTR [esi],ebx
  41a5fd:	jl     0x41a57f
  41a5ff:	test   eax,0x15585c2a
  41a604:	loop   0x41a5c7
  41a606:	mov    ebp,0x7dc7b144
  41a60b:	pop    ss
  41a60c:	pop    eax
  41a60d:	push   edx
  41a60e:	loope  0x41a64f
  41a610:	jo     0x41a652
  41a612:	test   al,0x14
  41a614:	dec    ebp
  41a615:	sub    al,0x22
  41a617:	test   al,0x28
  41a619:	fwait
  41a61a:	push   cs
  41a61b:	adc    DWORD PTR [eax-0x76],eax
  41a61e:	lahf   
  41a61f:	mov    DWORD PTR [edx],esi
  41a621:	cs mov dl,0x31
  41a624:	lods   eax,DWORD PTR ds:[esi]
  41a625:	cmp    eax,0x68ab3bf0
  41a62a:	std    
  41a62b:	repnz shr BYTE PTR ss:[bx+si+0x476],1
  41a632:	or     cl,BYTE PTR [eax+0x6776724d]
  41a638:	jnp    0x41a67c
  41a63a:	pop    es
  41a63b:	imul   esi,DWORD PTR [eax+0x6a],0x9b736b25
  41a642:	push   cs
  41a643:	sbb    ah,ah
  41a645:	into   
  41a646:	fs shl bl,cl
  41a649:	mov    BYTE PTR [ebp-0x5aa2de73],bl
  41a64f:	push   ebx
  41a650:	jl     0x41a665
  41a652:	jecxz  0x41a6b6
  41a654:	mov    edx,0x5606527
  41a659:	cmp    al,0x62
  41a65b:	fwait
  41a65c:	icebp  
  41a65d:	push   ebx
  41a65e:	leave  
  41a65f:	rol    BYTE PTR ss:[edi+0x38],1
  41a663:	cmc    
  41a664:	rcl    esp,cl
  41a666:	fsubp  st(0),st
  41a668:	or     DWORD PTR [ebx+0x71],edx
  41a66b:	lds    edx,FWORD PTR [edi+0x3174820]
  41a671:	inc    esp
  41a672:	push   0x551f31b5
  41a677:	xchg   ebp,eax
  41a678:	adc    BYTE PTR [eax],ch
  41a67a:	sbb    DWORD PTR [ebp+0x0],esp
  41a67d:	push   0xffffffe5
  41a67f:	bound  eax,QWORD PTR [edi]
  41a681:	sub    bh,BYTE PTR [ebx+0x3e514967]
  41a687:	dec    esp
  41a688:	add    ecx,DWORD PTR fs:[ecx+0x278112ba]
  41a68f:	(bad)  
  41a690:	outs   dx,DWORD PTR ds:[esi]
  41a691:	or     DWORD PTR [edi+0xf7f7346],ebp
  41a697:	dec    ebx
  41a698:	test   BYTE PTR [ebx-0x79],dh
  41a69b:	adc    DWORD PTR [ebx+0x19],eax
  41a69e:	mov    dh,0x8f
  41a6a0:	ja     0x41a62f
  41a6a2:	inc    ecx
  41a6a3:	nop
  41a6a4:	mov    DWORD PTR [edx],edx
  41a6a6:	adc    eax,0xc90bcc07
  41a6ab:	les    edx,FWORD PTR [ecx+eax*8-0x63f34ddd]
  41a6b2:	inc    ebp
  41a6b3:	xchg   edx,eax
  41a6b4:	data16 mov al,dh
  41a6b7:	cwde   
  41a6b8:	xor    BYTE PTR [edx-0x7e248ff9],dl
  41a6be:	std    
  41a6bf:	rol    DWORD PTR [edi-0x5f7a1d23],cl
  41a6c5:	adc    BYTE PTR ds:0xccf58849,dh
  41a6cb:	dec    edi
  41a6cc:	sub    al,0x45
  41a6ce:	pop    edi
  41a6cf:	pop    es
  41a6d0:	sub    esp,esi
  41a6d2:	pop    esi
  41a6d3:	neg    BYTE PTR [bx+di]
  41a6d6:	enter  0x70f,0x7b
  41a6da:	sbb    eax,0x85641799
  41a6df:	sub    al,0x3e
  41a6e1:	and    al,0xb
  41a6e3:	sahf   
  41a6e4:	das    
  41a6e5:	rcl    DWORD PTR [ebp+0x2da41a27],cl
  41a6eb:	in     eax,0xa6
  41a6ed:	sub    eax,0xa846a8d2
  41a6f2:	or     cl,BYTE PTR [esi-0x57]
  41a6f5:	ror    bh,1
  41a6f7:	adc    esp,edi
  41a6f9:	xor    DWORD PTR ds:0xf4340d98,edi
  41a6ff:	imul   ecx,DWORD PTR [esi+0x183a19db],0x12
  41a706:	adc    DWORD PTR [ebx+0x3498279d],esi
  41a70c:	jns    0x41a76f
  41a70e:	inc    ebx
  41a70f:	lods   eax,DWORD PTR ds:[esi]
  41a710:	xchg   DWORD PTR [eax],ecx
  41a712:	or     al,0xb2
  41a714:	hlt    
  41a715:	sbb    dl,BYTE PTR [ecx+0x45]
  41a718:	and    BYTE PTR [edi],0xef
  41a71b:	sti    
  41a71c:	dec    esi
  41a71d:	or     ch,BYTE PTR [esi+0x3d368f5e]
  41a723:	test   DWORD PTR [esi-0x23],ecx
  41a726:	loope  0x41a736
  41a728:	sub    DWORD PTR [edi],eax
  41a72a:	pop    esi
  41a72b:	xlat   BYTE PTR ds:[ebx]
  41a72c:	rcl    BYTE PTR [esi+0x2b],0x6
  41a730:	stc    
  41a731:	push   cs
  41a732:	and    DWORD PTR [edi+0x2c],eax
  41a735:	and    ebx,DWORD PTR [edx+0x58b2dd06]
  41a73b:	push   esp
  41a73c:	xlat   BYTE PTR ds:[ebx]
  41a73d:	sbb    DWORD PTR [esi],esi
  41a73f:	fidivr WORD PTR [eax-0x5b73c3f5]
  41a745:	test   BYTE PTR [edx-0x19],ch
  41a748:	icebp  
  41a749:	inc    eax
  41a74b:	adc    eax,0x15340c33
  41a750:	arpl   WORD PTR [edx],cx
  41a752:	mov    eax,0xbcc0f165
  41a757:	loope  0x41a796
  41a759:	dec    eax
  41a75a:	jno    0x41a74f
  41a75c:	xor    ecx,DWORD PTR [esi-0x658b5740]
  41a762:	or     al,0xc0
  41a764:	fist   DWORD PTR [ecx-0x2a9f53d1]
  41a76a:	ror    BYTE PTR [esi],0x40
  41a76d:	inc    edi
  41a76e:	or     esp,0x56168a10
  41a774:	out    0x39,eax
  41a776:	cs xor eax,0x56fc229c
  41a77c:	mov    ds:0x94ad42b0,al
  41a781:	ret    0x6c3
  41a784:	dec    edx
  41a785:	shl    esi,cl
  41a787:	mov    bl,BYTE PTR [ecx-0x47]
  41a78a:	bound  ebp,QWORD PTR [eax+0x4bf21695]
  41a790:	xchg   DWORD PTR [edi],eax
  41a792:	mov    dh,0xc2
  41a794:	inc    ecx
  41a795:	in     al,dx
  41a796:	clc    
  41a797:	and    eax,0x1b44337c
  41a79c:	imul   esi,esi,0xffffffef
  41a79f:	retf   0x5048
  41a7a2:	js     0x41a75c
  41a7a4:	lea    ecx,[ebp-0x59]
  41a7a7:	xchg   edx,eax
  41a7a8:	sub    al,0x2a
  41a7aa:	push   0x5f
  41a7ac:	xor    dh,BYTE PTR [edi]
  41a7ae:	fisubr WORD PTR [edi+0x10f37259]
  41a7b4:	jo     0x41a7cc
  41a7b6:	jne    0x5023d503
  41a7bc:	jp     0x41a747
  41a7be:	bound  esp,QWORD PTR [esi+0xe4e9178]
  41a7c4:	adc    cl,dh
  41a7c6:	fwait
  41a7c7:	leave  
  41a7c8:	jo     0x41a7e5
  41a7ca:	out    dx,al
  41a7cb:	sbb    BYTE PTR [edx+0x4825f33a],0x45
  41a7d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7d3:	daa    
  41a7d4:	pop    edi
  41a7d5:	push   0xf
  41a7d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7d8:	ds dec eax
  41a7da:	add    dl,BYTE PTR [esi]
  41a7dc:	nop
  41a7dd:	scas   al,BYTE PTR es:[edi]
  41a7de:	(bad)  
  41a7df:	xor    ebx,DWORD PTR [eax-0x54cfd699]
  41a7e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7e6:	adc    eax,0xe0029f74
  41a7eb:	jo     0x41a7fa
  41a7ed:	fs mov ebx,0xa295a83d
  41a7f3:	cmp    DWORD PTR [edx+ebp*2+0x4d565b60],edi
  41a7fa:	addr16 cmc 
  41a7fc:	mov    esi,0x5f1d032a
  41a801:	fwait
  41a802:	inc    ebx
  41a803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a804:	mov    eax,ds:0xd8459c06
  41a809:	pusha  
  41a80a:	setnp  bh
  41a80d:	dec    ecx
  41a80e:	sub    esp,DWORD PTR [edi-0x3e]
  41a811:	jne    0x41a82f
  41a813:	xor    DWORD PTR [edi+eax*8+0xe2e715d],edi
  41a81a:	jbe    0x41a83a
  41a81c:	stc    
  41a81d:	xchg   edx,eax
  41a81e:	into   
  41a81f:	adc    bl,BYTE PTR [ecx-0x25]
  41a822:	xchg   ebp,eax
  41a823:	cmc    
  41a824:	mov    DWORD PTR ds:0x44b87dd9,esi
  41a82a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a82b:	loope  0x41a84b
  41a82d:	jno    0x41a7bb
  41a82f:	jae    0x41a7ec
  41a831:	push   edi
  41a832:	pop    esp
  41a833:	push   es
  41a834:	xchg   edi,eax
  41a835:	push   esi
  41a836:	adc    ebp,ebx
  41a838:	mov    DWORD PTR [eax+0x735367a2],eax
  41a83e:	adc    DWORD PTR [edi],ebx
  41a840:	mov    eax,0x88672e43
  41a845:	cmp    eax,0x41a38f5a
  41a84a:	lods   eax,DWORD PTR ds:[esi]
  41a84b:	dec    esp
  41a84c:	inc    esp
  41a84d:	ds sub al,0xb7
  41a850:	jnp    0x41a89d
  41a852:	dec    eax
  41a853:	hlt    
  41a854:	mov    edx,0x6c30893a
  41a859:	add    eax,0x4dd03b60
  41a85e:	or     DWORD PTR [esi-0x27],ecx
  41a861:	jp     0x41a8b0
  41a863:	dec    ebx
  41a864:	and    eax,0xf911616e
  41a869:	pop    eax
  41a86a:	xchg   esp,eax
  41a86b:	scas   al,BYTE PTR es:[edi]
  41a86c:	xor    DWORD PTR [ecx-0x1b2636d6],edi
  41a872:	call   0xa62eeb3f
  41a877:	jo     0x41a858
  41a879:	cmp    ecx,DWORD PTR [esi+esi*4]
  41a87c:	mov    bl,0x46
  41a87e:	push   ecx
  41a87f:	push   ds
  41a880:	add    eax,0x8fbc56dc
  41a885:	retf   
  41a886:	xchg   DWORD PTR [ebp-0x4a309648],ebp
  41a88c:	pusha  
  41a88d:	mov    ds:0x26151351,al
  41a892:	mov    dl,0x8c
  41a894:	mov    ecx,0x97f4c5d
  41a899:	push   0xfd0566db
  41a89e:	daa    
  41a89f:	jnp    0x41a8f5
  41a8a1:	fwait
  41a8a2:	test   BYTE PTR [esi-0x2ae3365],bl
  41a8a8:	mov    cl,0xe3
  41a8aa:	das    
  41a8ab:	sbb    BYTE PTR [eax],ah
  41a8ad:	popa   
  41a8ae:	mov    bl,0x81
  41a8b0:	test   al,0x5a
  41a8b2:	or     cl,BYTE PTR [edi+eax*2-0x667b1aae]
  41a8b9:	adc    BYTE PTR [ecx+0x28],ch
  41a8bc:	popa   
  41a8bd:	and    al,0x7c
  41a8bf:	xor    BYTE PTR [edx+0x1101c610],al
  41a8c5:	push   edi
  41a8c6:	lock jne 0x41a875
  41a8c9:	sub    eax,0x4f3d4a90
  41a8ce:	mov    eax,ds:0xf402dfa
  41a8d3:	inc    edx
  41a8d4:	repz pop edx
  41a8d6:	in     eax,dx
  41a8d7:	xor    eax,0x1915b064
  41a8dc:	inc    esp
  41a8dd:	int3   
  41a8de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8df:	pop    esp
  41a8e0:	jb     0x41a8a1
  41a8e2:	test   DWORD PTR [esp+ecx*1],0x5c482a89
  41a8e9:	ss jnp 0x41a91d
  41a8ec:	push   esp
  41a8ed:	fwait
  41a8ee:	aad    0xc2
  41a8f0:	inc    eax
  41a8f1:	mov    edi,0x211fd815
  41a8f6:	or     BYTE PTR [ebx],dh
  41a8f8:	and    DWORD PTR [edx*4-0x79bbc84e],ebp
  41a8ff:	sub    edx,DWORD PTR [eax-0x39de6e66]
  41a905:	add    eax,DWORD PTR [edx]
  41a907:	rcl    DWORD PTR [ecx],0x88
  41a90a:	ja     0x41a8a1
  41a90c:	cmp    al,0x79
  41a90e:	daa    
  41a90f:	outs   dx,BYTE PTR ds:[esi]
  41a910:	cs inc ebx
  41a912:	lock mov ch,0x5c
  41a915:	xchg   DWORD PTR [ecx],ebp
  41a917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a918:	pop    edx
  41a919:	inc    ebp
  41a91a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a91b:	sbb    eax,0x8439074a
  41a920:	js     0x41a94f
  41a922:	mov    bl,0x99
  41a924:	inc    edi
  41a925:	inc    ecx
  41a926:	test   al,0xf
  41a928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a929:	call   0x17111d23
  41a92e:	cmp    dl,BYTE PTR [ecx+0x2b141a4f]
  41a934:	shl    DWORD PTR [eax+0x3b],cl
  41a937:	ret    
  41a938:	xchg   DWORD PTR [ebx],ebx
  41a93a:	jns    0x41a8ff
  41a93c:	or     BYTE PTR ds:0x7329bc20,ch
  41a942:	pop    ss
  41a943:	jns    0x41a93f
  41a945:	sub    eax,0xcc4b6a8b
  41a94a:	scas   eax,DWORD PTR es:[edi]
  41a94b:	dec    edi
  41a94c:	das    
  41a94d:	or     eax,0x64f2e46e
  41a952:	mov    ch,0xa9
  41a954:	ja     0x41a990
  41a956:	nop
  41a957:	(bad)  
  41a958:	mov    WORD PTR [edx+0x66],es
  41a95b:	(bad)  
  41a95c:	jecxz  0x41a919
  41a95e:	lea    edi,[ecx]
  41a960:	dec    esi
  41a961:	pop    ebp
  41a962:	fidiv  WORD PTR [ebp-0x67]
  41a965:	cmp    ch,BYTE PTR [edi+0x45816402]
  41a96b:	in     eax,dx
  41a96c:	jp     0x41a8f1
  41a96e:	inc    eax
  41a96f:	pop    ds
  41a970:	dec    esp
  41a971:	cld    
  41a972:	sub    DWORD PTR [edx],edx
  41a974:	icebp  
  41a975:	dec    eax
  41a976:	inc    ebx
  41a977:	out    dx,eax
  41a978:	imul   eax,ebp,0xffffffb3
  41a97b:	xor    BYTE PTR [ebp-0x52],ch
  41a97e:	jge    0x41a90e
  41a980:	adc    eax,0x480e2d69
  41a985:	std    
  41a986:	shl    ebp,cl
  41a988:	(bad)  
  41a98a:	cmc    
  41a98b:	btc    edx,eax
  41a98e:	inc    ebx
  41a98f:	or     DWORD PTR [ecx+0x54],edi
  41a992:	add    BYTE PTR [ecx+0x2e],ch
  41a995:	dec    esp
  41a996:	sahf   
  41a997:	pop    edi
  41a998:	cmp    ebx,eax
  41a99a:	sub    DWORD PTR [esi-0x5d],eax
  41a99d:	cmp    dh,ch
  41a99f:	div    DWORD PTR [eax+0x2a4c8ccc]
  41a9a5:	call   0x63ec2170
  41a9aa:	arpl   WORD PTR [edi-0x5952ae14],ax
  41a9b0:	xchg   esi,eax
  41a9b1:	ss ss das 
  41a9b4:	outs   dx,BYTE PTR ds:[esi]
  41a9b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9b6:	push   ebp
  41a9b7:	cwde   
  41a9b8:	mov    ebx,0x4c43542c
  41a9bd:	dec    ebx
  41a9be:	sbb    eax,0x4da6a77f
  41a9c3:	mov    ah,0x38
  41a9c5:	dec    ebx
  41a9c6:	add    eax,0x48498a31
  41a9cb:	and    BYTE PTR [edi+0x19],bl
  41a9ce:	sub    al,0xd3
  41a9d0:	or     DWORD PTR [ebx],edx
  41a9d2:	imul   esi,DWORD PTR [esi-0x5c],0x2b0d9a87
  41a9d9:	inc    ebx
  41a9da:	sbb    BYTE PTR [ebp-0x5],dl
  41a9dd:	mov    ebp,DWORD PTR [esi+eax*1-0x33]
  41a9e1:	adc    eax,0x68cdfc72
  41a9e6:	jmp    0x263abb2b
  41a9eb:	lods   al,BYTE PTR ds:[esi]
  41a9ec:	ins    DWORD PTR es:[edi],dx
  41a9ed:	push   ebp
  41a9ee:	xor    al,0x37
  41a9f0:	das    
  41a9f1:	test   DWORD PTR [eax],eax
  41a9f3:	retf   0x4ae5
  41a9f6:	(bad)  
  41a9f7:	in     al,dx
  41a9f8:	(bad)  
  41a9f9:	lea    esi,[ebp+eax*2+0x7df8dc54]
  41aa00:	dec    edx
  41aa01:	push   0x3d438c26
  41aa06:	sbb    DWORD PTR [ebx+0x559c179c],esi
  41aa0c:	cmp    BYTE PTR [ebx],bh
  41aa0e:	sbb    esi,DWORD PTR [esi]
  41aa10:	add    al,0x75
  41aa12:	mov    eax,DWORD PTR [eax+ecx*1+0x66a07bbb]
  41aa19:	push   edx
  41aa1a:	and    DWORD PTR [edi],esi
  41aa1c:	and    eax,0xd65219af
  41aa21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa22:	(bad)  
  41aa23:	fst    DWORD PTR [ebx]
  41aa25:	dec    eax
  41aa26:	dec    ecx
  41aa27:	stos   BYTE PTR es:[edi],al
  41aa28:	mov    edi,0xcbcd68df
  41aa2d:	sbb    al,0x8e
  41aa2f:	and    al,0x1b
  41aa31:	adc    BYTE PTR [ebp-0x4b],al
  41aa34:	jo     0x41aa7b
  41aa36:	jecxz  0x41aa7d
  41aa38:	mov    cs,WORD PTR [ebx]
  41aa3a:	and    eax,DWORD PTR [edi]
  41aa3c:	xor    BYTE PTR [ebp+0x6b46470b],al
  41aa42:	cmp    DWORD PTR [eax-0x2bc7a0eb],eax
  41aa48:	lea    esp,[ecx]
  41aa4a:	out    dx,al
  41aa4b:	out    0xd1,al
  41aa4d:	inc    edi
  41aa4e:	rcr    edx,0x4f
  41aa51:	sbb    esp,esi
  41aa53:	adc    al,0xa1
  41aa55:	xor    eax,0xcabd5373
  41aa5a:	cld    
  41aa5b:	pop    ss
  41aa5c:	sbb    BYTE PTR [esi-0xe],bl
  41aa5f:	jae    0x41aade
  41aa61:	test   eax,0x38e2982
  41aa66:	sbb    eax,0x5cf2e5b2
  41aa6b:	aad    0x65
  41aa6d:	or     bh,dh
  41aa6f:	mov    bh,bl
  41aa71:	inc    eax
  41aa72:	stc    
  41aa73:	xor    ch,BYTE PTR [edi+0x78c82a1d]
  41aa79:	and    al,0x9c
  41aa7b:	sbb    DWORD PTR [edi+ecx*4],0xffffff9f
  41aa7f:	stos   DWORD PTR es:[edi],eax
  41aa80:	dec    ebx
  41aa81:	cwde   
  41aa82:	ja     0x41aa8d
  41aa84:	enter  0xac86,0xa7
  41aa88:	jb     0x41aaa1
  41aa8a:	pop    esi
  41aa8b:	mov    dl,0xfc
  41aa8d:	lods   al,BYTE PTR ds:[esi]
  41aa8e:	dec    dx
  41aa90:	add    ebx,DWORD PTR [ebx]
  41aa92:	fldl2e 
  41aa94:	cmp    al,0xf3
  41aa96:	push   ebp
  41aa97:	mov    ecx,0xce73c941
  41aa9c:	nop
  41aa9d:	inc    ecx
  41aa9e:	add    BYTE PTR ds:0x8296f9a4,dl
  41aaa4:	(bad)  
  41aaa5:	cdq    
  41aaa6:	hlt    
  41aaa7:	dec    eax
  41aaa8:	adc    eax,0x42e21d21
  41aaad:	in     al,dx
  41aaae:	adc    al,0x7b
  41aab0:	inc    esi
  41aab1:	xchg   BYTE PTR [esi-0xc],ah
  41aab4:	add    eax,0x7f91421d
  41aab9:	arpl   WORD PTR [edi],si
  41aabb:	push   edi
  41aabc:	sub    ebx,ecx
  41aabe:	dec    esi
  41aabf:	inc    eax
  41aac0:	adc    DWORD PTR [ecx+esi*1-0x65a638e2],edx
  41aac7:	jle    0x41aaec
  41aac9:	adc    dl,BYTE PTR [ebp-0x17e5a7b2]
  41aacf:	pop    ss
  41aad0:	xchg   ebx,eax
  41aad1:	or     ebx,DWORD PTR [ebx]
  41aad3:	ret    
  41aad4:	shl    DWORD PTR [ecx+0xf44f97d],cl
  41aada:	pop    edx
  41aadb:	ins    DWORD PTR es:[edi],dx
  41aadc:	mov    DWORD PTR [ecx-0x4d74941a],esp
  41aae2:	jl     0x41aa94
  41aae4:	pop    edx
  41aae5:	push   ds
  41aae6:	mov    ?,WORD PTR [ebp-0x75]
  41aae9:	cwde   
  41aaea:	jnp    0x41ab5e
  41aaec:	pop    esi
  41aaed:	ds sub eax,0xdccfc5e3
  41aaf3:	dec    esp
  41aaf4:	stos   BYTE PTR es:[edi],al
  41aaf5:	fmul   st(7),st
  41aaf7:	adc    al,0x91
  41aaf9:	push   eax
  41aafa:	push   0x42
  41aafc:	inc    ecx
  41aafd:	pop    ss
  41aafe:	and    DWORD PTR [ebx+0x40],eax
  41ab01:	imul   esi,eax,0x4c
  41ab04:	pop    ds
  41ab05:	sub    DWORD PTR [edx-0x3f],ebx
  41ab08:	push   0x342721f
  41ab0d:	(bad)  
  41ab0e:	pop    edx
  41ab0f:	sar    DWORD PTR [ebp+0x6b],0x4f
  41ab13:	or     DWORD PTR [ecx],edx
  41ab15:	ss jne 0x41aad2
  41ab18:	add    al,0x1c
  41ab1a:	or     BYTE PTR [edi+0x28],cl
  41ab1d:	cmp    DWORD PTR [eax],0xa519085c
  41ab23:	arpl   si,si
  41ab25:	inc    esi
  41ab26:	jne    0x41ab76
  41ab28:	and    ebp,DWORD PTR [ecx+0x1bff4bee]
  41ab2e:	mov    cl,0x5d
  41ab30:	dec    esi
  41ab31:	inc    esp
  41ab32:	imul   DWORD PTR [ebx+0x76]
  41ab35:	lods   al,BYTE PTR ds:[esi]
  41ab36:	ffreep st(4)
  41ab38:	push   0x50fb5e40
  41ab3d:	jnp    0x41ab6d
  41ab3f:	cmp    eax,DWORD PTR [esi-0x37]
  41ab42:	and    al,BYTE PTR [ecx]
  41ab44:	xor    eax,0x47165c44
  41ab49:	test   BYTE PTR [esi],ah
  41ab4b:	scas   al,BYTE PTR es:[edi]
  41ab4c:	adc    eax,0x7c9ff34a
  41ab51:	or     eax,DWORD PTR [ecx+0x4a]
  41ab54:	sahf   
  41ab55:	iret   
  41ab56:	push   cs
  41ab57:	inc    ecx
  41ab58:	jl     0x41ab8f
  41ab5a:	mov    al,ds:0xed4a1b58
  41ab5f:	aas    
  41ab60:	push   esp
  41ab61:	repz dec eax
  41ab63:	xchg   esp,eax
  41ab64:	std    
  41ab65:	(bad)  
  41ab66:	jmp    0x4bd9:0x2f1f45d8
  41ab6d:	ins    BYTE PTR es:[edi],dx
  41ab6e:	rol    DWORD PTR [eax+0x11],0xfa
  41ab72:	shr    DWORD PTR [edi-0x48fbb6e5],0x80
  41ab79:	dec    ebx
  41ab7a:	pop    edx
  41ab7b:	cs mov eax,0x9a855593
  41ab81:	push   sp
  41ab83:	sub    dl,BYTE PTR [ebx-0x28f6a5e7]
  41ab89:	sbb    al,0x6a
  41ab8b:	or     DWORD PTR [ebx+0x25634085],ecx
  41ab91:	push   0x7383649f
  41ab96:	sub    ebx,DWORD PTR fs:[bp+di+0x19]
  41ab9b:	jl     0x41abaa
  41ab9d:	pop    edi
  41ab9e:	test   DWORD PTR [edx+0x72],ecx
  41aba1:	and    eax,DWORD PTR [eax-0x6c]
  41aba4:	jne    0x41ab27
  41aba6:	inc    esi
  41aba7:	imul   esi,DWORD PTR [ecx+0x28],0xdfe91723
  41abae:	xor    eax,DWORD PTR [ebp+0x10]
  41abb1:	mov    DWORD PTR [esp+eax*4-0x7aefbee9],eax
  41abb8:	or     DWORD PTR [ecx+eiz*2],ebp
  41abbb:	mov    ecx,DWORD PTR [ebp+0x5e94360c]
  41abc1:	cld    
  41abc2:	push   ss
  41abc3:	push   ss
  41abc4:	sub    DWORD PTR ds:0xcb49a628,ebx
  41abca:	call   0x400c:0x727bf22e
  41abd1:	mov    es,WORD PTR [ebx+0x48f12819]
  41abd7:	popf   
  41abd8:	sub    DWORD PTR [ebx],0x5143f214
  41abde:	xor    edi,DWORD PTR [esi-0x1c]
  41abe1:	push   edi
  41abe2:	sbb    eax,0x63b3d2d6
  41abe7:	fnstcw WORD PTR [eax]
  41abe9:	xadd   bl,ch
  41abec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abed:	cmp    DWORD PTR [edx],eax
  41abef:	rol    edx,cl
  41abf1:	ja     0x41abe8
  41abf3:	ret    
  41abf4:	adc    cl,ah
  41abf6:	call   0xda59e567
  41abfb:	sbb    bh,BYTE PTR [ebx-0xc1d8959]
  41ac01:	sti    
  41ac02:	mov    esi,ebx
  41ac04:	push   cs
  41ac05:	add    BYTE PTR [ebx+0x37],ch
  41ac08:	frstor [ebx]
  41ac0a:	scas   eax,DWORD PTR es:[edi]
  41ac0b:	pop    esp
  41ac0c:	inc    ebp
  41ac0d:	mov    al,ds:0xe2465427
  41ac12:	sub    eax,0x26e24d51
  41ac17:	jge    0x41ac7d
  41ac19:	ins    DWORD PTR es:[edi],dx
  41ac1a:	push   ebx
  41ac1b:	(bad)  
  41ac1c:	mov    eax,ds:0xc157ff2
  41ac21:	or     al,0x31
  41ac23:	pop    ds
  41ac24:	(bad)  
  41ac25:	int    0x7e
  41ac27:	and    ebx,DWORD PTR [esi+0x7]
  41ac2a:	out    dx,al
  41ac2b:	dec    ecx
  41ac2c:	jae    0x41ac5f
  41ac2e:	or     al,0x99
  41ac30:	daa    
  41ac31:	test   DWORD PTR [edi],edx
  41ac33:	and    esp,DWORD PTR [esi]
  41ac35:	add    bl,BYTE PTR [eax+0x6b3e2c4c]
  41ac3b:	adc    ebx,DWORD PTR [eax+0x59]
  41ac3e:	jnp    0x41aca5
  41ac40:	sub    al,0x68
  41ac42:	cmp    ch,BYTE PTR fs:[eax+0x24]
  41ac46:	das    
  41ac47:	jbe    0x41ac70
  41ac49:	cmp    esp,esi
  41ac4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac4c:	add    ch,BYTE PTR [ebp+0x77]
  41ac4f:	div    DWORD PTR [edx]
  41ac51:	(bad)  
  41ac52:	call   0x1082f2eb
  41ac57:	data16 adc cl,bh
  41ac5a:	imul   esi,DWORD PTR [edi-0xd6309d3],0x8a7ac3da
  41ac64:	or     eax,0x32000181
  41ac69:	add    al,0xea
  41ac6b:	add    eax,0xf5eab957
  41ac70:	imul   ebp,esp,0x45042b07
  41ac76:	fiadd  DWORD PTR [edx-0x4d]
  41ac79:	pop    ebx
  41ac7a:	lock cmc 
  41ac7c:	outs   dx,BYTE PTR ds:[esi]
  41ac7d:	push   esp
  41ac7e:	or     edx,DWORD PTR [eax]
  41ac80:	clc    
  41ac81:	test   BYTE PTR [ecx],cl
  41ac83:	pop    ds
  41ac84:	inc    edx
  41ac85:	add    eax,DWORD PTR [esi]
  41ac87:	and    BYTE PTR [esp+edx*8-0x72],al
  41ac8b:	add    eax,0xc770376
  41ac90:	inc    edi
  41ac91:	adc    ecx,DWORD PTR [edx+0x2b]
  41ac94:	cld    
  41ac95:	mov    al,BYTE PTR [esi]
  41ac97:	add    ecx,DWORD PTR [edx-0x7307f25f]
  41ac9d:	not    DWORD PTR [esi+esi*1-0x3e6aa0ae]
  41aca4:	sbb    DWORD PTR [esi+0x4],esp
  41aca7:	jmp    0xfc598f2f
  41acac:	and    esi,edi
  41acae:	inc    esi
  41acaf:	pop    es
  41acb0:	pushf  
  41acb1:	or     BYTE PTR ds:0x11221a9b,cl
  41acb7:	inc    ebp
  41acb8:	sub    DWORD PTR [edx],ebp
  41acba:	mov    ?,WORD PTR ds:0x45203813
  41acc0:	inc    ebp
  41acc1:	inc    ecx
  41acc2:	xchg   edx,eax
  41acc3:	pop    ecx
  41acc4:	sub    dl,BYTE PTR [eax+0x4e]
  41acc7:	pusha  
  41acc8:	ins    DWORD PTR es:[edi],dx
  41acc9:	xchg   BYTE PTR [ebp+0x1e],bh
  41accc:	jle    0x41acf4
  41acce:	add    BYTE PTR [eax-0x7c],0x96
  41acd2:	xchg   edi,eax
  41acd3:	and    eax,0xa4a34d90
  41acd8:	cmp    BYTE PTR [edx-0x34d447f0],0x47
  41acdf:	retf   
  41ace0:	xchg   esp,eax
  41ace1:	shr    DWORD PTR [eax],cl
  41ace3:	ror    BYTE PTR [ecx-0x1f],cl
  41ace6:	jecxz  0x41ac6c
  41ace8:	not    BYTE PTR [ecx]
  41acea:	(bad)  
  41aceb:	sub    al,BYTE PTR [esi]
  41aced:	popf   
  41acee:	add    DWORD PTR [eax+ecx*2],eax
  41acf1:	add    BYTE PTR [ebp+ebx*1-0x27],dl
  41acf5:	test   DWORD PTR [edx+eax*1],eax
  41acf8:	retf   0x36
  41acfb:	leave  
  41acfc:	xor    DWORD PTR [esi-0x3c],esp
  41acff:	cmp    BYTE PTR [edi-0x37],ch
  41ad02:	cmp    BYTE PTR [edx-0x3d],ah
  41ad05:	ss jnp 0x41ad82
  41ad08:	ja     0x41acce
  41ad0a:	ja     0x41ad3c
  41ad0c:	push   es
  41ad0d:	fdiv   QWORD PTR [ecx+ecx*4]
  41ad10:	fwait
  41ad11:	pop    DWORD PTR [esi-0x26]
  41ad14:	sbb    eax,0x8e859d3c
  41ad19:	jmp    0x41acea
  41ad1b:	nop
  41ad1c:	retf   
  41ad1d:	std    
  41ad1e:	js     0x41ad75
  41ad20:	lahf   
  41ad21:	sbb    eax,DWORD PTR [eax]
  41ad23:	inc    edx
  41ad24:	xchg   esi,eax
  41ad25:	adc    BYTE PTR [ebx-0x68917864],bh
  41ad2b:	cmp    BYTE PTR [eax-0x63901833],cl
  41ad31:	aas    
  41ad32:	jnp    0x41accc
  41ad34:	xchg   BYTE PTR [eax-0x2c],bh
  41ad37:	clc    
  41ad38:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41ad3a:	mov    eax,ds:0xc4a4332
  41ad3f:	(bad)  
  41ad40:	xchg   ebx,eax
  41ad41:	cdq    
  41ad42:	retf   
  41ad43:	add    al,0x20
  41ad45:	mov    DWORD PTR [eax],eax
  41ad47:	cmc    
  41ad48:	mov    esi,ecx
  41ad4a:	inc    esp
  41ad4b:	push   ds
  41ad4c:	or     al,0xf1
  41ad4e:	dec    edi
  41ad4f:	xchg   ecx,eax
  41ad50:	push   es
  41ad51:	outs   dx,BYTE PTR ds:[esi]
  41ad52:	fimul  WORD PTR ds:0x22f3082c
  41ad58:	sub    DWORD PTR [ebx],0xffffffb6
  41ad5b:	stc    
  41ad5c:	mov    ebx,0x4fc80461
  41ad61:	sahf   
  41ad62:	push   esp
  41ad63:	jne    0x41aceb
  41ad65:	jp     0x41ad79
  41ad67:	or     DWORD PTR [esi-0x6a],edi
  41ad6a:	fmul   DWORD PTR [ebx+0x69fc3cb0]
  41ad70:	or     esi,eax
  41ad72:	inc    ecx
  41ad73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad74:	ss in  eax,0xe9
  41ad77:	leave  
  41ad78:	adc    dl,BYTE PTR [eax-0x61225ac9]
  41ad7e:	test   BYTE PTR [edx],0x4b
  41ad81:	inc    eax
  41ad82:	inc    esi
  41ad83:	dec    edx
  41ad84:	dec    ebp
  41ad85:	dec    esp
  41ad86:	or     eax,0x5d4e4448
  41ad8b:	push   edx
  41ad8c:	push   eax
  41ad8d:	push   esp
  41ad8e:	push   eax
  41ad8f:	pop    es
  41ad90:	pop    edx
  41ad91:	pop    edx
  41ad92:	pop    esp
  41ad93:	pop    ebx
  41ad94:	pop    ecx
  41ad95:	push   ecx
  41ad96:	push   0x616f0560
  41ad9b:	pusha  
  41ad9c:	outs   dx,DWORD PTR gs:[esi]
  41ad9e:	ret    
  41ad9f:	push   ebp
  41ada0:	sub    DWORD PTR [ebp+0xd6c6461],0x62
  41ada7:	jp     0x41ae28
  41ada9:	ja     0x41ae26
  41adab:	jno    0x41ae24
  41adad:	je     0x41adb7
  41adaf:	jns    0x41ae29
  41adb1:	js     0x41ae23
  41adb3:	adc    dh,BYTE PTR ds:0x8a222a21
  41adb9:	xchg   esp,eax
  41adba:	push   ss
  41adbb:	sbb    BYTE PTR [edx],cl
  41adbd:	or     eax,0x903101f
  41adc2:	and    al,0x15
  41adc4:	adc    al,0x70
  41adc6:	daa    
  41adc7:	jns    0x41adc0
  41adc9:	rcl    DWORD PTR [ecx+0x22953a6d],1
  41adcf:	mov    esp,0x469c5a2b
  41add4:	adc    eax,0xfe9037d
  41add9:	inc    esi
  41adda:	adc    eax,0xa4c4eb4d
  41addf:	and    eax,0x890f29a0
  41ade4:	iret   
  41ade5:	sbb    DWORD PTR [edi],0x3d
  41ade8:	adc    esp,DWORD PTR [esi-0x78]
  41adeb:	sub    cl,al
  41aded:	pop    es
  41adee:	xchg   esp,eax
  41adef:	mov    ebx,0x275ea72
  41adf4:	inc    esi
  41adf5:	push   ebp
  41adf6:	or     bl,BYTE PTR [eax]
  41adf8:	inc    edx
  41adf9:	push   edx
  41adfa:	imul   eax,DWORD PTR [edx],0xffffffb5
  41adfd:	push   cs
  41adfe:	repz cmp al,0x2b
  41ae01:	mov    cl,BYTE PTR [ebp+edx*1-0x68]
  41ae05:	sbb    al,0x4c
  41ae07:	shl    BYTE PTR [edx+0x4f22f003],cl
  41ae0d:	in     eax,dx
  41ae0e:	scas   eax,DWORD PTR es:[edi]
  41ae0f:	sub    BYTE PTR [edx+0xa521211],bh
  41ae15:	test   BYTE PTR ds:0xb20aa407,bl
  41ae1b:	push   es
  41ae1c:	push   esi
  41ae1d:	xchg   ecx,eax
  41ae1e:	aaa    
  41ae1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae20:	jno    0x41adcb
  41ae22:	mov    ah,0x13
  41ae24:	loop   0x41ae64
  41ae26:	movhps xmm5,QWORD PTR [eax]
  41ae29:	and    edx,DWORD PTR [ebx]
  41ae2b:	inc    esi
  41ae2c:	in     eax,dx
  41ae2d:	pop    es
  41ae2e:	loope  0x41ae05
  41ae30:	pushf  
  41ae31:	pop    eax
  41ae32:	imul   ecx,ecx,0x1
  41ae35:	lea    ecx,[ebx-0x67]
  41ae38:	into   
  41ae39:	ret    
  41ae3a:	dec    esi
  41ae3b:	pop    esp
  41ae3c:	and    edi,esi
  41ae3e:	adc    eax,0x2736a8d9
  41ae43:	cmp    esp,DWORD PTR [edx+0x47420360]
  41ae49:	imul   edi,DWORD PTR [edi],0x73
  41ae4c:	adc    ebx,DWORD PTR [edx+eiz*4-0x2a]
  41ae50:	jns    0x41ae4f
  41ae52:	loop   0x41ae31
  41ae54:	loope  0x41ae6c
  41ae56:	dec    esp
  41ae57:	push   esp
  41ae58:	xor    BYTE PTR ds:0x1409aecf,cl
  41ae5e:	inc    esi
  41ae5f:	mov    al,ds:0x75280529
  41ae64:	cmp    eax,0xa48e8075
  41ae69:	xor    eax,0x57ca4e0c
  41ae6e:	mov    ds:0x3105b69,al
  41ae73:	xor    eax,0xae7b2d4b
  41ae78:	stc    
  41ae79:	push   ss
  41ae7a:	add    al,0x81
  41ae7c:	dec    edx
  41ae7d:	mov    ebx,0xa27a0e38
  41ae82:	lods   eax,DWORD PTR ds:[esi]
  41ae83:	xor    ah,BYTE PTR [ecx+0x60]
  41ae86:	mov    eax,0x1b0cb084
  41ae8b:	push   eax
  41ae8c:	pop    ss
  41ae8d:	lahf   
  41ae8e:	jnp    0x41aec7
  41ae90:	repz shl BYTE PTR [edi],cl
  41ae93:	out    0x9,al
  41ae95:	mov    ah,0x4a
  41ae97:	cmp    BYTE PTR [ecx],ah
  41ae99:	add    BYTE PTR [ebp+0x3c],dh
  41ae9c:	in     al,dx
  41ae9d:	add    al,0xa4
  41ae9f:	pop    es
  41aea0:	xchg   DWORD PTR [edi],ecx
  41aea2:	out    dx,eax
  41aea3:	cs pop esi
  41aea5:	repnz or ecx,eax
  41aea8:	es dec eax
  41aeaa:	add    BYTE PTR [ebx+0x0],al
  41aead:	sbb    bl,BYTE PTR [esi]
  41aeaf:	add    esp,DWORD PTR ds:0x30093625
  41aeb5:	jae    0x41ae5e
  41aeb7:	xor    al,0xbc
  41aeb9:	add    esp,DWORD PTR [ebp+ebp*1+0x650c1b5c]
  41aec0:	sti    
  41aec1:	paddb  mm2,QWORD PTR [eax]
  41aec4:	sub    eax,0xd82c3e46
  41aec9:	loope  0x41aee4
  41aecb:	enter  0xe63,0x2
  41aecf:	add    ebp,DWORD PTR [ebx+0x241bad05]
  41aed5:	mov    eax,cs
  41aed7:	imul   eax,DWORD PTR [eax],0xffffffe9
  41aeda:	les    ecx,FWORD PTR [ebp+0x2f07ba13]
  41aee0:	or     DWORD PTR cs:[edi],0xcc4e34f
  41aee7:	aas    
  41aee8:	dec    esp
  41aee9:	dec    edi
  41aeea:	or     DWORD PTR [ebp+0x14],0x312bc6ca
  41aef1:	inc    ebx
  41aef2:	dec    ebx
  41aef3:	inc    eax
  41aef4:	add    DWORD PTR [esi],edx
  41aef6:	sub    BYTE PTR [ebx-0x35ebe52d],dl
  41aefc:	ss dec ebx
  41aefe:	add    ebp,DWORD PTR [ecx]
  41af00:	pop    ebp
  41af01:	sub    DWORD PTR [ebx+0x18],esi
  41af04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af05:	jbe    0x41af4c
  41af07:	outs   dx,DWORD PTR ds:[esi]
  41af08:	and    DWORD PTR [edx],edx
  41af0a:	pop    esi
  41af0b:	sahf   
  41af0c:	sub    al,0x79
  41af0e:	xor    eax,DWORD PTR [edi]
  41af10:	and    eax,0x3f6d0e3c
  41af15:	mov    eax,ds:0x882f14e2
  41af1a:	or     ah,BYTE PTR [ebp-0x5c]
  41af1d:	rdtsc  
  41af1f:	pop    edi
  41af20:	xor    dh,dl
  41af22:	cvtpi2ps xmm4,QWORD PTR [edi+0x33dbf326]
  41af29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af2a:	inc    ebp
  41af2b:	sbb    eax,ecx
  41af2d:	xchg   DWORD PTR [edx],edx
  41af2f:	cmp    eax,0x50e4995
  41af34:	dec    eax
  41af35:	add    eax,0x2aa88c6
  41af3a:	xchg   BYTE PTR [esi],bl
  41af3c:	mov    ds:0xfeb92312,eax
  41af41:	mov    dl,0x1
  41af43:	dec    esi
  41af44:	inc    edx
  41af45:	adc    edx,edx
  41af47:	adc    edi,DWORD PTR [ecx]
  41af49:	add    DWORD PTR [edi+0x330a8935],ebp
  41af4f:	mov    ch,0x47
  41af51:	imul   esp,DWORD PTR [eax],0x68
  41af54:	or     al,0x19
  41af56:	push   ss
  41af57:	into   
  41af58:	sbb    eax,0x331205a0
  41af5d:	add    eax,0x20a5136e
  41af62:	dec    eax
  41af63:	inc    esp
  41af64:	add    eax,0x20ab62a2
  41af69:	dec    esi
  41af6a:	xor    al,0xe
  41af6c:	xor    eax,0xc3260da4
  41af71:	adc    DWORD PTR [edx],ecx
  41af73:	ret    
  41af74:	or     BYTE PTR cs:[edx+0xd],ah
  41af78:	cmp    al,0x42
  41af7a:	add    eax,DWORD PTR [eax]
  41af7c:	and    eax,0xa0270a9d
  41af82:	imul   ebx,DWORD PTR [eax],0xffffff9c
  41af85:	mov    ebp,0x145812b
  41af8a:	retf   0x3067
  41af8d:	and    esp,DWORD PTR [esi+0xe]
  41af90:	add    al,BYTE PTR [ebx-0x25]
  41af93:	mov    edi,0x8a1a21
  41af98:	sbb    eax,0x2ac2bf1
  41af9d:	test   BYTE PTR [edi],bh
  41af9f:	in     eax,0x51
  41afa1:	scas   eax,DWORD PTR es:[edi]
  41afa2:	xchg   edi,eax
  41afa3:	or     eax,0x2ab2d40e
  41afa8:	in     eax,dx
  41afa9:	jns    0x41afef
  41afab:	mov    WORD PTR [ebx],es
  41afad:	xor    eax,esp
  41afaf:	push   esi
  41afb0:	cwde   
  41afb1:	lahf   
  41afb2:	imul   esp,DWORD PTR [ebx],0xa0130ca1
  41afb8:	cmp    eax,0x10d46186
  41afbd:	cld    
  41afbe:	inc    edi
  41afbf:	inc    ebx
  41afc0:	(bad)  
  41afc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afc2:	retf   
  41afc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afc4:	add    eax,0x5af06e4c
  41afc9:	mov    cl,BYTE PTR [eax]
  41afcb:	xor    al,BYTE PTR [ebx-0x2c9751d8]
  41afd1:	ror    BYTE PTR [ecx],0xd0
  41afd4:	or     eax,0x8146fab
  41afd9:	pop    ss
  41afda:	fsub   QWORD PTR [eax+0x348d25ca]
  41afe0:	xchg   ah,al
  41afe2:	out    0x22,eax
  41afe4:	arpl   WORD PTR [esi],si
  41afe6:	bound  ebx,QWORD PTR [esi-0x48]
  41afe9:	mov    al,BYTE PTR [edi]
  41afeb:	sub    DWORD PTR [ebp+0x2113aa10],esp
  41aff1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aff2:	es popf 
  41aff4:	sbb    BYTE PTR es:[eax+0x42088741],ch
  41affb:	mov    dh,0x8d
  41affd:	xor    edi,0x18
  41b000:	jl     0x41afb2
  41b002:	push   es
  41b003:	jmp    0x713:0x6db36b2d
  41b00a:	fs mov edi,0x6147e809
  41b010:	mov    dl,0x4
  41b012:	aam    0x8d
  41b014:	push   ebp
  41b015:	mov    bh,0x15
  41b017:	rcr    DWORD PTR [ecx],cl
  41b019:	pop    edi
  41b01a:	mov    bl,0x2b
  41b01c:	lds    eax,FWORD PTR [ecx-0x1]
  41b01f:	nop
  41b020:	and    ebx,DWORD PTR [edx]
  41b022:	inc    ebx
  41b023:	call   0x19a3:0x5927f92
  41b02a:	test   DWORD PTR [ebx],edx
  41b02c:	int3   
  41b02d:	add    DWORD PTR [ebx+0x4c452877],esi
  41b033:	outs   dx,BYTE PTR ds:[esi]
  41b034:	ins    DWORD PTR es:[edi],dx
  41b035:	clc    
  41b036:	sub    BYTE PTR [eax+edx*1],ah
  41b039:	dec    ecx
  41b03a:	xor    ch,BYTE PTR [ebp-0x50e7cf6f]
  41b040:	pushf  
  41b041:	cmp    BYTE PTR [ecx-0x27],cl
  41b044:	xor    bl,BYTE PTR [ecx]
  41b046:	xchg   edx,eax
  41b047:	das    
  41b048:	(bad)  
  41b049:	rcr    BYTE PTR [ebx],1
  41b04b:	dec    esp
  41b04c:	add    edi,DWORD PTR [edx]
  41b04e:	fnsave [ebx]
  41b050:	cmp    BYTE PTR [ebp-0x7a],0x57
  41b054:	or     BYTE PTR [ecx+0x6a],ch
  41b057:	or     eax,0x84551099
  41b05c:	test   BYTE PTR [edi+edx*8+0x26],ch
  41b060:	xchg   edi,eax
  41b061:	in     al,dx
  41b062:	mov    ah,0x93
  41b064:	in     eax,0x1c
  41b066:	pop    ss
  41b067:	xchg   DWORD PTR [esi],esi
  41b069:	(bad)  
  41b06a:	bsr    esi,DWORD PTR [ebp-0x6]
  41b06e:	xor    eax,0xa22d4c04
  41b073:	xor    eax,0x96be5e40
  41b078:	(bad)  
  41b079:	mov    ds:0x1dde3201,al
  41b07e:	sbb    BYTE PTR [esi],0x81
  41b081:	pop    edx
  41b082:	xchg   ecx,eax
  41b083:	jns    0x41b020
  41b085:	repnz addr16 cmc 
  41b088:	and    bh,BYTE PTR [eax]
  41b08a:	sbb    edx,DWORD PTR [esi]
  41b08c:	dec    eax
  41b08d:	sub    al,0xf8
  41b08f:	xor    BYTE PTR [eax],0x19
  41b092:	xchg   edi,eax
  41b093:	cmp    BYTE PTR [edx+0xc6d1d33],al
  41b099:	or     esi,DWORD PTR [edi+ecx*4-0x31]
  41b09d:	stos   BYTE PTR es:[edi],al
  41b09e:	pushf  
  41b09f:	adc    al,0x34
  41b0a1:	ss jge 0x41b064
  41b0a4:	sub    eax,DWORD PTR [edx]
  41b0a6:	or     al,0x35
  41b0a8:	sbb    DWORD PTR [ecx],esi
  41b0aa:	ss push edx
  41b0ac:	xor    ah,BYTE PTR [ebp-0x53c2f95e]
  41b0b2:	mov    esp,0x93a5a8f5
  41b0b7:	sub    edx,DWORD PTR [ebp+0x68bd6c9a]
  41b0bd:	fs fwait
  41b0bf:	inc    ecx
  41b0c0:	xor    BYTE PTR [eax+0x1ecca82b],0xa9
  41b0c7:	pushf  
  41b0c8:	outs   dx,BYTE PTR ds:[esi]
  41b0ca:	fisubr WORD PTR [ecx]
  41b0cc:	cmp    al,0x17
  41b0ce:	cmp    DWORD PTR [esi-0x74],0x71fc4e3d
  41b0d5:	out    dx,al
  41b0d6:	into   
  41b0d7:	adc    eax,0xcb630677
  41b0dc:	cmp    al,0x88
  41b0de:	sbb    esp,edx
  41b0e0:	test   BYTE PTR [ecx],ch
  41b0e2:	data16 jns 0x41b073
  41b0e5:	iret   
  41b0e6:	mov    bl,0x4
  41b0e8:	mov    BYTE PTR [ecx+ebp*4+0x6f],dh
  41b0ec:	jge    0x41b081
  41b0ee:	pop    ds
  41b0ef:	retf   0x804f
  41b0f2:	jge    0x41b106
  41b0f4:	mov    esp,0x29cb63a7
  41b0f9:	fs push ds
  41b0fb:	test   al,0xce
  41b0fd:	sub    ch,BYTE PTR [edi-0x7c]
  41b100:	or     BYTE PTR [eax-0x773097d9],bh
  41b106:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b107:	adc    edx,DWORD PTR [eax+0x441d9e98]
  41b10d:	aaa    
  41b10e:	xchg   edx,eax
  41b10f:	lahf   
  41b110:	pushf  
  41b111:	add    ecx,eax
  41b113:	pushf  
  41b114:	fwait
  41b115:	mov    al,0x35
  41b117:	mov    DWORD PTR [esi],esi
  41b119:	sbb    edx,0x3d8a1dd1
  41b11f:	mov    ebp,es
  41b121:	add    BYTE PTR [ebx-0x5f],0x8a
  41b125:	lods   al,BYTE PTR ds:[esi]
  41b126:	in     al,0xa3
  41b128:	inc    ecx
  41b129:	imul   edx,DWORD PTR [ecx],0x1e
  41b12c:	aad    0x1e
  41b12e:	push   0x32915bb4
  41b133:	lds    edx,FWORD PTR [edi+0x3a]
  41b136:	dec    eax
  41b137:	test   BYTE PTR [edi],bh
  41b139:	das    
  41b13a:	lea    eax,ds:0xc15fedf5
  41b140:	jne    0x41b0ff
  41b142:	sbb    eax,0x35ca5b91
  41b147:	and    DWORD PTR [eax],0x25
  41b14a:	mov    ecx,0xec4d47c3
  41b14f:	leave  
  41b150:	adc    eax,0x72cd99ec
  41b155:	or     ecx,0xf8077559
  41b15b:	fsub   DWORD PTR [ecx]
  41b15d:	not    BYTE PTR [eax]
  41b15f:	stos   BYTE PTR es:[edi],al
  41b160:	mov    esp,0x4218cf89
  41b165:	sahf   
  41b166:	daa    
  41b167:	pop    es
  41b168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b169:	cdq    
  41b16a:	mov    WORD PTR [eax],cs
  41b16c:	sbb    dl,dh
  41b16e:	inc    ebp
  41b16f:	and    DWORD PTR [ecx-0x2af739d2],0x246319f3
  41b179:	(bad)  
  41b17a:	movhps xmm5,QWORD PTR ds:0x6af11b9c
  41b181:	sub    BYTE PTR [ebp*4-0x4ed0e0d8],cl
  41b188:	inc    ebp
  41b189:	mov    ebx,0xc09ef5cc
  41b18e:	cli    
  41b18f:	ret    
  41b190:	sub    DWORD PTR [ecx],ecx
  41b192:	icebp  
  41b193:	cmp    al,0xfe
  41b195:	test   DWORD PTR es:0xe6178720,edx
  41b19c:	and    BYTE PTR [eax],bh
  41b19e:	out    dx,eax
  41b19f:	adc    eax,0x2e3d0f2d
  41b1a4:	xor    ah,BYTE PTR ds:0x82453562
  41b1aa:	(bad)  
  41b1ab:	cmp    al,0x31
  41b1ad:	or     DWORD PTR [edx-0x4ee0a709],esp
  41b1b3:	xor    eax,DWORD PTR [edx-0x53]
  41b1b6:	int    0x8e
  41b1b8:	xchg   ebp,eax
  41b1b9:	fsub   QWORD PTR [edx]
  41b1bb:	fucom  st(0)
  41b1bd:	mov    eax,ds:0x1ed42898
  41b1c2:	mov    dh,0x37
  41b1c4:	sub    ebp,ebp
  41b1c6:	jo     0x41b166
  41b1c8:	mov    edi,esi
  41b1ca:	pop    ss
  41b1cb:	sub    al,bl
  41b1cd:	jecxz  0x41b1f1
  41b1cf:	sbb    DWORD PTR [eax],0xffffffe1
  41b1d2:	sub    eax,DWORD PTR [ecx]
  41b1d4:	loope  0x41b1a0
  41b1d6:	aaa    
  41b1d7:	push   ds
  41b1d8:	pop    ds
  41b1d9:	std    
  41b1da:	sbb    esp,DWORD PTR [ecx]
  41b1dc:	pop    ds
  41b1dd:	jbe    0x41b23b
  41b1df:	test   BYTE PTR [ecx],ah
  41b1e1:	adc    BYTE PTR [edi],ch
  41b1e3:	in     al,0x44
  41b1e5:	inc    esi
  41b1e6:	sar    ah,0x9f
  41b1e9:	dec    ecx
  41b1ea:	stc    
  41b1eb:	sub    eax,0x37590136
  41b1f0:	mov    BYTE PTR [eax+eiz*2],al
  41b1f3:	add    WORD PTR ss:[edx],0x9e44
  41b1f9:	mov    dl,0x80
  41b1fb:	(bad)  
  41b1fc:	sbb    ecx,esp
  41b1fe:	sub    al,0xf7
  41b200:	inc    eax
  41b201:	add    BYTE PTR [eax],ch
  41b203:	movlps QWORD PTR [esi+0x48342c22],xmm3
  41b20a:	pop    ebp
  41b20b:	ins    BYTE PTR es:[edi],dx
  41b20c:	mov    dh,BYTE PTR [edi+0x14]
  41b20f:	sub    BYTE PTR [ebx*4-0x486a59bb],0x2b
  41b217:	int    0x41
  41b219:	fucomp st(3)
  41b21b:	mov    ebx,?
  41b21d:	sbb    eax,0x29032a08
  41b222:	and    dh,BYTE PTR [edi]
  41b224:	inc    edx
  41b225:	dec    eax
  41b226:	xchg   esi,eax
  41b227:	push   esi
  41b228:	das    
  41b229:	popa   
  41b22a:	inc    ebx
  41b22b:	jg     0x41b1ba
  41b22d:	mov    ss,WORD PTR [eax+ebx*1+0x44a528a0]
  41b234:	rcr    DWORD PTR [ebp+0x40e429da],0xfa
  41b23b:	clc    
  41b23c:	and    DWORD PTR [ecx],eax
  41b23e:	sbb    DWORD PTR [eax],esp
  41b240:	sub    eax,0x4091334c
  41b245:	and    eax,0xe5d4953
  41b24a:	add    edi,DWORD PTR [ebx+0x3b]
  41b24d:	adc    DWORD PTR [ebp+ecx*1+0x34a72a90],ecx
  41b254:	sbb    ch,al
  41b256:	sub    al,0xd5
  41b258:	inc    esp
  41b259:	loopne 0x41b272
  41b25b:	outs   dx,BYTE PTR ds:[esi]
  41b25c:	or     ebp,DWORD PTR [eax]
  41b25e:	pop    ss
  41b25f:	push   ds
  41b260:	or     al,0x2b
  41b262:	sbb    esi,DWORD PTR [eax]
  41b264:	and    edx,DWORD PTR [edi+0x46]
  41b267:	pusha  
  41b268:	xchg   ebx,eax
  41b269:	jae    0x41b299
  41b26b:	pop    DWORD PTR [edx-0x65]
  41b26e:	test   eax,0xc7070086
  41b273:	sbb    ebp,DWORD PTR [ebx-0x2a]
  41b276:	or     ch,bl
  41b278:	inc    ebp
  41b279:	stc    
  41b27a:	mov    BYTE PTR [eax],al
  41b27c:	and    dl,BYTE PTR [edi]
  41b27e:	inc    esi
  41b27f:	adc    DWORD PTR ss:[ecx+0x47],ebp
  41b283:	add    edx,DWORD PTR [edi+0x45]
  41b286:	imul   edx,DWORD PTR [ebx+0x4b8d267d],0xba8aa790
  41b290:	sbb    edi,eax
  41b292:	fwait
  41b293:	sub    al,0xfe
  41b295:	pop    ss
  41b296:	sti    
  41b297:	and    DWORD PTR [esi],eax
  41b299:	sub    eax,0x490d2304
  41b29e:	daa    
  41b29f:	cmp    al,0x84
  41b2a1:	pop    edi
  41b2a2:	sbb    BYTE PTR [ecx+eiz*1+0x62],ch
  41b2a6:	dec    ebp
  41b2a7:	jle    0x41b23c
  41b2a9:	xchg   ebx,eax
  41b2aa:	sub    al,0xa0
  41b2ac:	inc    ebp
  41b2ad:	mov    edx,0x13dd89ca
  41b2b2:	shl    DWORD PTR [edx],cl
  41b2b4:	jmp    0x41b30c
  41b2b6:	xchg   ecx,eax
  41b2b7:	sub    BYTE PTR [esi],ah
  41b2b9:	adc    ecx,DWORD PTR [ecx+0x2f]
  41b2bc:	sub    eax,0x441e3684
  41b2c1:	and    BYTE PTR [edi+0x47],ah
  41b2c4:	mov    ebx,DWORD PTR [ebp+0x4cac2098]
  41b2ca:	int3   
  41b2cb:	ror    DWORD PTR [edx+0x24f11ee1],1
  41b2d1:	add    al,0x24
  41b2d3:	push   0x6b
  41b2d5:	or     eax,0x96454737
  41b2da:	pop    edi
  41b2db:	and    eax,0x8b754a60
  41b2e0:	xchg   BYTE PTR [ecx-0x3fd948f0],ch
  41b2e6:	dec    edx
  41b2e7:	rcl    BYTE PTR [edx+edi*8+0x232d0411],1
  41b2ee:	adc    DWORD PTR [eax+0x21],eax
  41b2f1:	xor    al,0x81
  41b2f3:	inc    ebx
  41b2f4:	pop    ss
  41b2f5:	pop    edi
  41b2f6:	and    al,0x60
  41b2f8:	dec    esi
  41b2f9:	jg     0x41b296
  41b2fb:	test   DWORD PTR [ebx],ebp
  41b2fd:	xchg   esp,eax
  41b2fe:	inc    ebp
  41b2ff:	mov    al,0xc0
  41b301:	xchg   ecx,edx
  41b303:	adc    esp,ebx
  41b305:	es hlt 
  41b307:	dec    ecx
  41b308:	add    ah,BYTE PTR [edx]
  41b30a:	outs   dx,DWORD PTR ds:[esi]
  41b30b:	imul   DWORD PTR [ecx]
  41b30d:	xor    al,0x1d
  41b30f:	xor    BYTE PTR [ecx+eax*2],cl
  41b312:	es pop esi
  41b314:	dec    edi
  41b315:	jns    0x41b2b5
  41b317:	xchg   DWORD PTR [ebx],ebp
  41b319:	lahf   
  41b31a:	inc    ecx
  41b31b:	mov    eax,ds:0x13b38dbc
  41b320:	shl    DWORD PTR [edx],0xdb
  41b323:	inc    edx
  41b324:	clc    
  41b325:	(bad)
  41b329:	adc    DWORD PTR [ebx],ebp
  41b32b:	sub    eax,DWORD PTR [ebx+0x3c]
  41b32e:	inc    eax
  41b32f:	mov    DWORD PTR [eax+0x1d],edx
  41b332:	add    BYTE PTR [eax],cl
  41b334:	jp     0x41b347
  41b336:	xchg   esi,eax
  41b338:	or     al,0xac
  41b33a:	nop
  41b33b:	mov    bh,0x21
  41b33d:	ret    
  41b33e:	inc    eax
  41b33f:	jmp    0x41b33d
  41b341:	mov    DWORD PTR [ebx+esi*1],ecx
  41b344:	xchg   BYTE PTR ds:0x3e0c0918,bl
  41b34a:	or     ebp,DWORD PTR [ebp+0x62]
  41b34d:	dec    edx
  41b34e:	jb     0x41b351
  41b350:	xchg   DWORD PTR [eax-0x4feebf64],ecx
  41b356:	mov    dh,al
  41b358:	dec    eax
  41b359:	or     esp,esi
  41b35b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b35c:	or     DWORD PTR [esi],ebp
  41b35e:	push   es
  41b35f:	aaa    
  41b360:	jae    0x41b383
  41b362:	stos   BYTE PTR es:[edi],al
  41b363:	or     eax,DWORD PTR [edi+0x4e]
  41b366:	pop    edx
  41b367:	mov    ebp,DWORD PTR [ebx-0x68]
  41b36a:	add    BYTE PTR [edx+0xea6cf19],al
  41b370:	(bad)  
  41b371:	(bad)  
  41b372:	js     0x41b371
  41b374:	xor    cl,BYTE PTR [edi]
  41b376:	xor    al,BYTE PTR [ecx-0x51c9d7bb]
  41b37c:	add    eax,DWORD PTR [edx+ebx*2+0x70]
  41b380:	test   BYTE PTR [ebx+0x219b089b],al
  41b386:	stos   BYTE PTR es:[edi],al
  41b387:	inc    ebx
  41b388:	mov    eax,0x582ca9d7
  41b38d:	repz or BYTE PTR [ebx],bl
  41b390:	(bad)  
  41b392:	cmp    dl,BYTE PTR [eax]
  41b394:	push   edi
  41b395:	or     DWORD PTR [edx],ebp
  41b397:	xor    BYTE PTR [esi],cl
  41b399:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b39a:	jbe    0x41b3dd
  41b39c:	popa   
  41b39d:	pusha  
  41b39e:	fucomp st(3)
  41b3a0:	sub    al,0x3b
  41b3a2:	pop    edx
  41b3a3:	ins    DWORD PTR es:[edi],dx
  41b3a4:	add    al,0x64
  41b3a6:	sub    WORD PTR [ebp+0x65454a2d],bp
  41b3ad:	dec    eax
  41b3ae:	xor    dh,al
  41b3b0:	inc    edx
  41b3b1:	push   edx
  41b3b2:	(bad)  
  41b3b3:	bound  ebx,QWORD PTR [esi+0xe]
  41b3b6:	push   0x6b
  41b3b8:	push   edx
  41b3b9:	shl    BYTE PTR [ebx-0x34],1
  41b3bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3bd:	sub    esi,DWORD PTR [edi]
  41b3bf:	inc    esi
  41b3c0:	sub    eax,0x571e7945
  41b3c5:	add    DWORD PTR [edi+0x6e],0x551fb876
  41b3cc:	nop
  41b3cd:	repz popf 
  41b3cf:	daa    
  41b3d0:	lea    edx,[ecx+ecx*2]
  41b3d3:	push   esp
  41b3d4:	repz jge 0x41b380
  41b3d7:	jp     0x41b3fe
  41b3d9:	cwde   
  41b3da:	push   edx
  41b3db:	nop
  41b3dc:	rcl    DWORD PTR [ebx+ecx*1],cl
  41b3df:	dec    esi
  41b3e0:	dec    esp
  41b3e1:	xchg   esp,eax
  41b3e2:	ins    BYTE PTR es:[edi],dx
  41b3e3:	popa   
  41b3e4:	dec    ebx
  41b3e5:	cmp    BYTE PTR [edx+0x42],al
  41b3e8:	push   es
  41b3e9:	sbb    eax,0x501b1a6a
  41b3ee:	dec    ebp
  41b3ef:	inc    ebx
  41b3f0:	push   0x11
  41b3f2:	xchg   bh,cl
  41b3f4:	outs   dx,DWORD PTR ds:[esi]
  41b3f5:	inc    edi
  41b3f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3f7:	imul   ecx,DWORD PTR [ebp+0x30],0xffffffa5
  41b3fb:	cmp    eax,0xa71c3825
  41b400:	sbb    BYTE PTR [edi],bl
  41b402:	imul   edx,DWORD PTR [ebp+0x65],0x7430405f
  41b409:	lods   al,BYTE PTR ds:[esi]
  41b40a:	adc    edx,DWORD PTR [esi+0x6f]
  41b40d:	pop    esp
  41b40e:	ins    BYTE PTR es:[edi],dx
  41b40f:	mov    esp,DWORD PTR [ebp+0x7f]
  41b412:	add    bl,BYTE PTR gs:[ebp+0x60]
  41b416:	dec    eax
  41b417:	jl     0x41b47a
  41b419:	add    cl,BYTE PTR [edi+0x65477d4e]
  41b41f:	sub    BYTE PTR [edx],cl
  41b421:	mov    bh,0x24
  41b423:	push   0x26
  41b425:	sub    eax,0x7d746916
  41b42a:	test   eax,0x204b9426
  41b42f:	add    BYTE PTR [esi],dl
  41b431:	outs   dx,DWORD PTR ds:[esi]
  41b432:	jns    0x41b4a9
  41b434:	jle    0x41b3fe
  41b436:	nop
  41b437:	out    dx,al
  41b438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b439:	sub    DWORD PTR [edi],edi
  41b43b:	xchg   esp,eax
  41b43c:	fmul   DWORD PTR [eax+0x127866bc]
  41b442:	inc    edi
  41b443:	jg     0x41b487
  41b445:	jns    0x41b49e
  41b447:	imul   ecx,DWORD PTR [edi+0x34],0x4d14dab0
  41b44e:	xlat   BYTE PTR ds:[ebx]
  41b44f:	lahf   
  41b450:	mov    al,ds:0xfab87c73
  41b455:	adc    DWORD PTR [ebp+eax*2+0x15],ebx
  41b459:	pop    esi
  41b45a:	out    dx,al
  41b45b:	sub    DWORD PTR [ebp+0x79],esi
  41b45e:	popa   
  41b45f:	leave  
  41b460:	pop    ebx
  41b461:	jge    0x41b496
  41b463:	xor    eax,0xff6d4bc9
  41b468:	mov    esi,DWORD PTR [esi]
  41b46a:	mov    BYTE PTR [ebp+0x64],al
  41b46d:	(bad)  
  41b46e:	dec    DWORD PTR [edx]
  41b470:	dec    eax
  41b471:	inc    ebp
  41b472:	sbb    edx,DWORD PTR [eax]
  41b474:	inc    ebp
  41b475:	push   0xa9c07605
  41b47a:	xor    bl,BYTE PTR [ecx]
  41b47c:	adc    bl,BYTE PTR [edx+esi*1+0x40]
  41b480:	and    BYTE PTR [eax],bl
  41b482:	pusha  
  41b483:	push   ds
  41b484:	xchg   edi,eax
  41b485:	loope  0x41b471
  41b487:	push   ebx
  41b488:	shl    DWORD PTR [ebp+0x7d],1
  41b48b:	rcl    WORD PTR [ebx+0x35a87d91],cl
  41b492:	sahf   
  41b493:	dec    esi
  41b494:	aas    
  41b495:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b496:	add    al,0x8
  41b498:	fild   DWORD PTR cs:[di]
  41b49c:	jg     0x41b504
  41b49e:	mov    ebp,0x178f608b
  41b4a3:	dec    ebx
  41b4a4:	and    eax,0xa0a7713c
  41b4a9:	add    esi,0xffffffe0
  41b4ac:	jp     0x41b523
  41b4ae:	pop    ebx
  41b4af:	mov    edi,0xe1c3d157
  41b4b4:	(bad)  
  41b4b5:	aad    0xa2
  41b4b7:	inc    ecx
  41b4b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4b9:	(bad)  
  41b4ba:	sbb    BYTE PTR [ebp+0x6a5f1502],bl
  41b4c0:	imul   esp,DWORD PTR [edx-0x5a568099],0x3b3b65ce
  41b4ca:	jae    0x2e46402f
  41b4d0:	pop    ecx
  41b4d1:	popa   
  41b4d2:	inc    eax
  41b4d3:	mov    al,0x1d
  41b4d5:	or     DWORD PTR [edx+0x5b],0x4a
  41b4d9:	push   esp
  41b4da:	ins    BYTE PTR es:[edi],dx
  41b4db:	xor    edx,DWORD PTR [ebp-0x63]
  41b4de:	jo     0x41b4dc
  41b4e0:	popf   
  41b4e1:	xor    DWORD PTR [ebp+0x68],0xb5420281
  41b4e8:	sbb    DWORD PTR [ecx-0x10],edi
  41b4eb:	inc    ebp
  41b4ec:	xor    DWORD PTR [ebx+0x57],0x4c471c0f
  41b4f3:	outs   dx,DWORD PTR ds:[esi]
  41b4f4:	sbb    DWORD PTR [edx+0x3127d916],edx
  41b4fa:	pop    edx
  41b4fb:	sub    al,0x7b
  41b4fd:	pop    edx
  41b4fe:	push   edi
  41b4ff:	ja     0x41b543
  41b501:	int    0x4
  41b503:	lock pop edx
  41b505:	push   esp
  41b506:	push   es
  41b507:	mov    BYTE PTR [edx],dl
  41b509:	es ja  0x41b541
  41b50c:	lods   eax,DWORD PTR ds:[esi]
  41b50d:	enter  0xe46d,0x50
  41b511:	push   ds
  41b512:	jecxz  0x41b524
  41b514:	inc    esi
  41b515:	jo     0x41b4b6
  41b517:	sbb    DWORD PTR [edi+0x6f],esi
  41b51a:	push   es
  41b51b:	dec    edi
  41b51c:	jmp    0x41b596
  41b51e:	inc    ebx
  41b51f:	fs int 0x1e
  41b522:	jle    0x41b587
  41b524:	cmp    bl,cl
  41b526:	fist   WORD PTR [ecx+0x68686b7]
  41b52c:	xor    BYTE PTR [ebp+0x45],cl
  41b52f:	push   es
  41b530:	ins    DWORD PTR es:[edi],dx
  41b531:	loop   0x41b4d7
  41b533:	inc    edx
  41b534:	fs jbe 0x41b4e6
  41b537:	inc    esp
  41b538:	dec    eax
  41b539:	sub    BYTE PTR [ebp-0x6],cl
  41b53c:	fistp  QWORD PTR [ebp+0x63]
  41b53f:	sbb    DWORD PTR [eax+0x74],ecx
  41b542:	mov    ch,0x73
  41b544:	gs xchg edi,eax
  41b546:	inc    ebp
  41b547:	or     ecx,0x6e
  41b54a:	xor    ebp,DWORD PTR [edx+0x20]
  41b54d:	pop    esi
  41b54e:	scas   al,BYTE PTR es:[edi]
  41b54f:	xor    eax,0x91179108
  41b554:	sub    BYTE PTR [ecx-0x5e],al
  41b557:	imul   esp,DWORD PTR [ebx+eax*8+0x829e322],0xd32da48e
  41b562:	sub    eax,0x7177678b
  41b567:	and    al,0x49
  41b569:	push   ebp
  41b56a:	icebp  
  41b56b:	arpl   WORD PTR [esi-0x333f7754],bp
  41b571:	jbe    0x41b5cd
  41b573:	das    
  41b574:	daa    
  41b575:	dec    eax
  41b576:	ins    DWORD PTR es:[edi],dx
  41b577:	lds    ebx,FWORD PTR [esi+0x1c]
  41b57a:	sbb    DWORD PTR [edx-0x3b07569],eax
  41b580:	adc    BYTE PTR [ebp-0xb],ah
  41b583:	pop    ds
  41b584:	adc    al,0x8b
  41b586:	loope  0x41b565
  41b588:	sub    ah,al
  41b58a:	add    esi,DWORD PTR [ebx-0x6223c922]
  41b590:	add    eax,0xe10733ba
  41b595:	lea    edx,[eax]
  41b597:	xchg   ecx,eax
  41b598:	ins    BYTE PTR es:[edi],dx
  41b599:	pop    ds
  41b59a:	mov    ecx,0x1f20877e
  41b59f:	mov    eax,ds:0x442099f5
  41b5a4:	mov    gs,ecx
  41b5a6:	fwait
  41b5a7:	in     eax,dx
  41b5a8:	jmp    0x336dcff9
  41b5ad:	push   edi
  41b5ae:	cli    
  41b5af:	jnp    0x41b537
  41b5b1:	mov    esi,DWORD PTR es:[edx+eiz*2+0x392a8680]
  41b5b9:	cs pusha 
  41b5bb:	sbb    al,0x6e
  41b5bd:	push   0xffffffa7
  41b5bf:	push   ebp
  41b5c0:	jmp    0x989d647e
  41b5c5:	or     bl,BYTE PTR [ecx]
  41b5c7:	push   es
  41b5c8:	inc    eax
  41b5c9:	or     eax,0xc9edd44a
  41b5ce:	or     BYTE PTR [ecx+eiz*1+0x4f6d4272],ch
  41b5d5:	jecxz  0x41b627
  41b5d7:	xchg   esp,eax
  41b5d8:	test   DWORD PTR [ebx+0x59],esi
  41b5db:	das    
  41b5dc:	xchg   ebx,eax
  41b5dd:	out    0x5a,eax
  41b5df:	xchg   ebx,eax
  41b5e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5e1:	lock out dx,al
  41b5e3:	or     eax,DWORD PTR [eax+esi*1+0x69b12312]
  41b5ea:	and    eax,0xfdcd5340
  41b5ef:	dec    ecx
  41b5f0:	add    eax,0x5a383c38
  41b5f5:	inc    eax
  41b5f6:	aaa    
  41b5f7:	popa   
  41b5f8:	inc    edi
  41b5f9:	mov    bl,0xac
  41b5fb:	push   edx
  41b5fc:	or     BYTE PTR [eiz*4+0x489ec375],ah
  41b603:	fistp  WORD PTR [ebx-0x2ea1d4d8]
  41b609:	les    ebp,FWORD PTR [eax-0x5d97e7bc]
  41b60f:	pushf  
  41b610:	inc    edx
  41b611:	fs mov cl,0x45
  41b614:	das    
  41b615:	xor    DWORD PTR [ecx-0x6b9e8caf],eax
  41b61b:	xchg   BYTE PTR [ebx+0x32c261a9],cl
  41b621:	inc    edx
  41b622:	test   eax,0xc43743cd
  41b627:	les    ebx,FWORD PTR [ebx+edx*8-0x7]
  41b62b:	jp     0x41b671
  41b62d:	add    al,0xd8
  41b62f:	xor    esp,DWORD PTR [esi+0x6a]
  41b632:	inc    ebx
  41b633:	iret   
  41b634:	jge    0x41b5e5
  41b636:	jns    0x41b61a
  41b638:	(bad)  
  41b639:	(bad)  
  41b63a:	nop
  41b63b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b63c:	test   eax,0x928aa274
  41b641:	inc    edi
  41b642:	push   ecx
  41b643:	pusha  
  41b644:	bound  ebp,QWORD PTR [ebx-0x16aa4fc4]
  41b64a:	rcl    ebp,cl
  41b64c:	mov    esp,0x68741123
  41b651:	mov    edi,0x4dfd5ab7
  41b656:	mov    ecx,0xaf17a4ce
  41b65b:	push   es
  41b65c:	test   al,0x59
  41b65e:	pusha  
  41b65f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b660:	test   DWORD PTR [eax+0x244f5778],edi
  41b666:	in     al,dx
  41b667:	push   cs
  41b668:	rcr    eax,1
  41b66a:	jb     0x41b633
  41b66c:	das    
  41b66d:	dec    edi
  41b66e:	and    DWORD PTR [ecx],esp
  41b670:	lods   al,BYTE PTR fs:[esi]
  41b672:	dec    edx
  41b673:	dec    esp
  41b674:	adc    DWORD PTR [ebp+0x7d1465d6],esi
  41b67a:	mov    ds,WORD PTR [esp+eax*8+0x5278b75e]
  41b681:	xchg   edi,eax
  41b682:	jp     0x41b6c9
  41b684:	cmp    BYTE PTR [ebx-0x3e46a355],ah
  41b68a:	push   esp
  41b68b:	sbb    BYTE PTR [edx-0x2],ah
  41b68e:	mov    BYTE PTR [esi-0x62],0x25
  41b692:	stos   DWORD PTR es:[edi],eax
  41b693:	fistp  QWORD PTR [edx+0x24596a74]
  41b699:	daa    
  41b69a:	jnp    0x41b6ed
  41b69c:	maxps  xmm1,XMMWORD PTR [eax+0x50786895]
  41b6a3:	jle    0x41b717
  41b6a5:	jmp    0x1622:0x5df00043
  41b6ac:	repnz inc eax
  41b6ae:	pop    ds
  41b6af:	cpuid  
  41b6b1:	and    DWORD PTR [edi],esp
  41b6b3:	std    
  41b6b4:	jb     0x41b6fd
  41b6b6:	fisubr DWORD PTR [edx]
  41b6b8:	es data16 sub al,0xc0
  41b6bc:	push   0x4b7ca397
  41b6c1:	aam    0x14
  41b6c3:	in     eax,0xae
  41b6c5:	out    dx,al
  41b6c6:	dec    esp
  41b6c7:	daa    
  41b6c8:	pop    edi
  41b6c9:	jno    0x41b738
  41b6cb:	ror    DWORD PTR [eax+0x7f],cl
  41b6ce:	fnstsw WORD PTR [ebx+edi*8-0x55aacdbb]
  41b6d5:	jbe    0x41b6d2
  41b6d7:	dec    esi
  41b6d8:	outs   dx,BYTE PTR ds:[esi]
  41b6d9:	inc    ebp
  41b6da:	sbb    edx,DWORD PTR [edi+0x7330a385]
  41b6e0:	mov    edi,0x91eab67a
  41b6e5:	retf   0x1a73
  41b6e8:	addr16 inc edx
  41b6ea:	pop    ecx
  41b6eb:	mov    ebx,0x3b2d49de
  41b6f0:	retf   
  41b6f1:	lods   eax,DWORD PTR ds:[esi]
  41b6f2:	jnp    0x41b6ad
  41b6f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6f5:	sub    al,0x1e
  41b6f7:	lds    ebx,FWORD PTR [eax-0x4bacbae2]
  41b6fd:	fsub   QWORD PTR [eax-0x2d7f9e1b]
  41b703:	dec    edi
  41b704:	inc    edi
  41b705:	and    al,0x66
  41b707:	dec    ebx
  41b708:	sub    DWORD PTR [ebx],0xf7c7795e
  41b70e:	into   
  41b70f:	add    eax,0x52550aa3
  41b714:	addr16 adc eax,0x7740165c
  41b71a:	out    dx,eax
  41b71b:	push   esi
  41b71c:	and    edx,DWORD PTR [edx+ebp*2]
  41b71f:	push   ss
  41b720:	out    0x93,al
  41b722:	xchg   BYTE PTR [edi+0x4e],dl
  41b725:	fld    DWORD PTR [esi-0x439c9683]
  41b72b:	push   ss
  41b72c:	pop    ebx
  41b72d:	pop    esi
  41b72e:	add    bl,BYTE PTR [eax+0x45]
  41b731:	fild   WORD PTR [esi-0x41]
  41b734:	dec    ebp
  41b735:	gs xchg ecx,eax
  41b737:	inc    esi
  41b738:	mov    bl,0x4e
  41b73a:	push   ecx
  41b73b:	jns    0x41b707
  41b73d:	pop    esp
  41b73e:	xchg   edi,eax
  41b73f:	shl    esp,1
  41b741:	xor    cl,BYTE PTR [edi]
  41b743:	push   edi
  41b744:	jg     0x41b6d2
  41b746:	dec    edi
  41b747:	jp     0x41b7b5
  41b749:	pushf  
  41b74a:	out    dx,al
  41b74b:	mov    bl,0x6
  41b74d:	test   DWORD PTR [eax+0x5f],eax
  41b750:	ins    DWORD PTR es:[edi],dx
  41b751:	xor    BYTE PTR [esp+ebp*1+0xef2523b],al
  41b758:	sbb    al,0x2c
  41b75a:	sbb    ebx,DWORD PTR [edi-0x4a]
  41b75d:	or     BYTE PTR [ecx-0x1f],ch
  41b760:	jle    0x41b7bd
  41b762:	jne    0x41b763
  41b764:	ss std 
  41b766:	dec    edx
  41b767:	nop
  41b768:	cmp    BYTE PTR [ebp-0x16],dl
  41b76b:	push   0x48
  41b76d:	pop    ecx
  41b76e:	repz cli 
  41b770:	popa   
  41b771:	dec    ebp
  41b772:	adc    DWORD PTR [esi+0x6c],eax
  41b775:	or     BYTE PTR [ecx],ah
  41b777:	cs mov ebx,0x51490809
  41b77d:	mov    al,0x29
  41b77f:	or     eax,0x80a1ee27
  41b784:	cwde   
  41b785:	ficomp DWORD PTR [edi]
  41b787:	adc    eax,0x421a3580
  41b78c:	sbb    al,0xa6
  41b78e:	mov    dl,0xce
  41b790:	fidiv  WORD PTR [ebx+0x12659d2f]
  41b796:	pop    ecx
  41b797:	adc    BYTE PTR [eax-0x53],bh
  41b79a:	mov    dh,0x89
  41b79c:	xor    cl,BYTE PTR [eax+0x75654c13]
  41b7a2:	push   0x961416a7
  41b7a7:	push   ecx
  41b7a8:	xchg   esi,eax
  41b7a9:	push   0x55982ca4
  41b7ae:	scas   eax,DWORD PTR es:[edi]
  41b7af:	pop    ecx
  41b7b0:	rcl    DWORD PTR [eax+eax*2],0x41
  41b7b4:	jecxz  0x41b771
  41b7b6:	popf   
  41b7b7:	xchg   ebp,eax
  41b7b8:	jo     0x41b764
  41b7ba:	loope  0x41b75f
  41b7bc:	pop    eax
  41b7bd:	ret    
  41b7be:	jbe    0x41b800
  41b7c0:	push   esi
  41b7c1:	jbe    0x41b7e8
  41b7c3:	dec    ecx
  41b7c4:	inc    ebx
  41b7c5:	in     al,0xed
  41b7c7:	out    0x82,al
  41b7c9:	scas   eax,DWORD PTR es:[edi]
  41b7ca:	das    
  41b7cb:	ror    DWORD PTR [esp+ecx*4-0x222b51e8],1
  41b7d2:	cmp    eax,0x69a6e31b
  41b7d7:	dec    esi
  41b7d8:	int3   
  41b7d9:	dec    edx
  41b7da:	inc    esp
  41b7db:	jns    0x41b82d
  41b7dd:	xor    al,0xe2
  41b7df:	pusha  
  41b7e0:	push   edx
  41b7e1:	sbb    al,0x56
  41b7e3:	in     eax,dx
  41b7e4:	add    BYTE PTR [eax+0x12],0x5a
  41b7e8:	inc    edx
  41b7e9:	mov    edx,0xed6509a0
  41b7ee:	cmp    dl,BYTE PTR [ebx+0x51]
  41b7f1:	fsubr  QWORD PTR [ebp+0x4]
  41b7f4:	aas    
  41b7f5:	add    ebp,DWORD PTR [eax+0x79]
  41b7f8:	sbb    esp,DWORD PTR [ebx-0x4c8021c9]
  41b7fe:	jb     0x41b7e1
  41b800:	push   esi
  41b801:	mov    BYTE PTR [eax],bl
  41b803:	xchg   BYTE PTR [ebp+0x69],ah
  41b806:	xlat   BYTE PTR ds:[ebx]
  41b807:	mov    eax,ds:0x11548e14
  41b80c:	sub    edx,ebx
  41b80e:	sahf   
  41b80f:	lds    ecx,FWORD PTR [esi-0x37]
  41b812:	adc    BYTE PTR [ebx+0x7a],dl
  41b815:	sub    edx,DWORD PTR [ebp+0x40]
  41b818:	pop    ebp
  41b819:	cdq    
  41b81a:	mov    ch,0xe0
  41b81c:	mov    edi,0xa0ceb3cf
  41b821:	adc    al,0x58
  41b823:	loope  0x41b893
  41b825:	stos   DWORD PTR es:[edi],eax
  41b826:	sbb    ebx,DWORD PTR [ebp-0x2d2380df]
  41b82c:	repz cmp BYTE PTR [ebx],bl
  41b82f:	in     eax,dx
  41b830:	cmp    al,0xb3
  41b832:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b833:	inc    edx
  41b834:	repz ja 0x41b88a
  41b837:	dec    esi
  41b838:	scas   al,BYTE PTR es:[edi]
  41b839:	xlat   BYTE PTR ds:[ebx]
  41b83a:	xchg   edi,eax
  41b83b:	inc    esi
  41b83c:	dec    edx
  41b83d:	jge    0x41b7f3
  41b83f:	xor    BYTE PTR [ecx],dh
  41b841:	xchg   ebp,eax
  41b842:	scas   eax,DWORD PTR es:[edi]
  41b843:	and    dl,BYTE PTR gs:[esi+ebp*2+0x1fae6094]
  41b84b:	mov    BYTE PTR [ecx],ch
  41b84d:	xchg   ecx,eax
  41b84e:	inc    edx
  41b84f:	jbe    0x41b81d
  41b851:	inc    esi
  41b852:	sbb    al,0x50
  41b854:	jb     0x41b8c6
  41b856:	xchg   DWORD PTR [edi],ebp
  41b858:	scas   al,BYTE PTR es:[edi]
  41b859:	imul   esp,DWORD PTR [edi-0x6d],0xffffff8d
  41b85d:	das    
  41b85e:	sbb    eax,0x252bd12e
  41b863:	sub    eax,0xf3d60d42
  41b868:	icebp  
  41b869:	ret    0x6efc
  41b86c:	xor    DWORD PTR [edx+0x46],esi
  41b86f:	xchg   esi,eax
  41b870:	mov    ecx,0x6c8b29d3
  41b875:	inc    eax
  41b876:	(bad)  
  41b877:	stc    
  41b878:	sub    al,0xa7
  41b87a:	push   cs
  41b87b:	pusha  
  41b87c:	pop    edx
  41b87d:	adc    al,BYTE PTR [ebx-0x37]
  41b880:	mov    ch,0x28
  41b882:	outs   dx,BYTE PTR ds:[esi]
  41b883:	jb     0x41b858
  41b885:	push   cs
  41b886:	aas    
  41b887:	bound  esp,QWORD PTR [edi+0x54]
  41b88a:	loope  0x41b846
  41b88c:	in     eax,0x38
  41b88e:	sbb    eax,DWORD PTR [edi+ecx*2-0x53]
  41b892:	cmp    al,0x16
  41b894:	call   0xa608141f
  41b899:	rol    DWORD PTR [ebp+0x789b7966],1
  41b89f:	push   ds
  41b8a0:	mov    ebx,DWORD PTR [ebx+0x301335a4]
  41b8a6:	xlat   BYTE PTR ds:[ebx]
  41b8a7:	les    eax,FWORD PTR [edi+0x2e]
  41b8aa:	pop    edx
  41b8ab:	aas    
  41b8ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8ad:	pop    esi
  41b8ae:	push   ebx
  41b8af:	pushf  
  41b8b0:	dec    esp
  41b8b1:	js     0x41b8d4
  41b8b3:	ins    BYTE PTR es:[edi],dx
  41b8b4:	lahf   
  41b8b5:	jecxz  0x41b8b1
  41b8b7:	mov    cl,0x7a
  41b8b9:	pop    edi
  41b8ba:	call   0x2888:0x6b5f056d
  41b8c1:	mov    cl,0x83
  41b8c3:	push   esi
  41b8c4:	adc    al,0x68
  41b8c6:	lods   eax,DWORD PTR ds:[esi]
  41b8c7:	aaa    
  41b8c8:	and    eax,0xb27f10b1
  41b8cd:	aaa    
  41b8ce:	sbb    dl,ah
  41b8d0:	sub    BYTE PTR [edi+0x390cbcd8],0x59
  41b8d7:	pusha  
  41b8d8:	in     al,dx
  41b8d9:	in     al,0x45
  41b8db:	sbb    DWORD PTR [ebx-0x68],ebp
  41b8de:	or     BYTE PTR [edx+0x74],0x4d
  41b8e2:	mov    gs,ecx
  41b8e4:	xor    eax,DWORD PTR [esi]
  41b8e6:	xchg   dl,bl
  41b8e8:	jno    0x41b923
  41b8ea:	and    esp,DWORD PTR [ebp-0x2991dad7]
  41b8f0:	xor    ecx,DWORD PTR [eax+0x43442430]
  41b8f6:	cmp    bl,BYTE PTR [edx+0x72]
  41b8f9:	adc    BYTE PTR [esi+0x2728f334],dl
  41b8ff:	or     BYTE PTR [eax],dh
  41b901:	dec    edx
  41b902:	call   0x25e6fe8e
  41b907:	int    0x26
  41b909:	jmp    0x40a8118a
  41b90e:	retf   
  41b90f:	jge    0x41b896
  41b911:	ret    
  41b912:	ds dec esp
  41b914:	adc    DWORD PTR [ecx],edi
  41b916:	fnstcw WORD PTR [ebx]
  41b918:	sti    
  41b919:	pop    ecx
  41b91a:	push   0xffffffe3
  41b91c:	es dec ecx
  41b91e:	cmc    
  41b91f:	add    al,0xb8
  41b921:	pop    ebx
  41b922:	adc    ecx,DWORD PTR [edx-0x28]
  41b925:	inc    edi
  41b926:	(bad)  
  41b927:	sahf   
  41b928:	push   ss
  41b929:	ret    
  41b92a:	push   edi
  41b92b:	cld    
  41b92c:	adc    esp,edx
  41b92e:	sub    DWORD PTR [ebx+ebx*1],edx
  41b931:	enter  0x4119,0x6a
  41b935:	cld    
  41b936:	retf   0x770b
  41b939:	sbb    BYTE PTR [edi],dl
  41b93b:	dec    esi
  41b93c:	jl     0x41b97d
  41b93e:	mov    ds:0x3cf90d6d,eax
  41b943:	adc    al,BYTE PTR ds:0x15880161
  41b949:	cmp    BYTE PTR [ebx],al
  41b94b:	dec    edi
  41b94c:	sbb    al,BYTE PTR [edx+0x13dc729]
  41b952:	pop    eax
  41b953:	dec    eax
  41b954:	push   0x78c16d8c
  41b959:	retf   0xc673
  41b95c:	jbe    0x41b926
  41b95e:	jg     0x41b921
  41b960:	xchg   ch,cl
  41b962:	add    ebx,0xcabbc9bb
  41b968:	mov    dh,0xc9
  41b96a:	aam    0xc6
  41b96c:	jmp    0x93c:0xfdfeec0
  41b973:	dec    esp
  41b974:	add    BYTE PTR [esi+0xf12cf1f],al
  41b97a:	adc    eax,0x2d8e164a
  41b97f:	int3   
  41b980:	es enter 0xc82c,0x4d
  41b985:	ret    
  41b986:	inc    ecx
  41b987:	int3   
  41b988:	push   edx
  41b989:	les    edx,FWORD PTR [ebx-0x33]
  41b98c:	(bad)
  41b991:	(bad)  
  41b992:	jl     0x41b961
  41b994:	or     ebx,0xc290c687
  41b99a:	xchg   edi,eax
  41b99b:	lds    ebp,FWORD PTR [edx+ecx*8-0x324f355e]
  41b9a2:	mov    ecx,0xc0cec2c1
  41b9a7:	rcl    edx,0xc2
  41b9aa:	fcmovnb st,st(2)
  41b9ac:	in     al,0xc8
  41b9ae:	jecxz  0x41b97e
  41b9b0:	test   bl,0xfb
  41b9b3:	into   
  41b9b4:	rdtsc  
  41b9b6:	pop    es
  41b9b7:	fwait
  41b9b8:	push   ds
  41b9b9:	test   eax,0xca2db21e
  41b9be:	es aam 0x0
  41b9c1:	js     0x41b9f5
  41b9c3:	jbe    0x41ba0a
  41b9c5:	jge    0x41ba14
  41b9c7:	jb     0x41ba24
  41b9c9:	jns    0x41ba1d
  41b9cb:	ja     0x41ba39
  41b9cd:	jge    0x41ba3d
  41b9cf:	jno    0x41ba4e
  41b9d1:	jno    0x41ba50
  41b9d3:	jnp    0x41b95a
  41b9d5:	je     0x41b95b
  41b9d7:	jae    0x41b970
  41b9d9:	jno    0x41b972
  41b9db:	jl     0x41b97e
  41b9dd:	jl     0x41b981
  41b9df:	jl     0x41b99d
  41b9e1:	jnp    0x41b995
  41b9e3:	jg     0x41b9a5
  41b9e5:	jge    0x41b9b2
  41b9e7:	ja     0x41b9bf
  41b9e9:	jnp    0x41b9e3
  41b9eb:	adc    al,0x1
  41b9ed:	ss add eax,0x171b149d
  41b9f3:	xchg   esp,eax
  41b9f4:	sub    eax,0x329e2617
  41b9f9:	sbb    DWORD PTR [ecx],esi
  41b9fb:	cwde   
  41b9fc:	popa   
  41b9fd:	nop
  41b9fe:	push   0xffffff91
  41ba00:	fcom   QWORD PTR [ebx+0x341c8bda]
  41ba06:	nop
  41ba07:	sub    ebp,ebp
  41ba09:	inc    esp
  41ba0a:	es xor al,0x3a
  41ba0d:	into   
  41ba0e:	mov    ebp,0x34d1fdde
  41ba13:	xor    dh,BYTE PTR [ecx+0x61]
  41ba16:	jo     0x41ba8c
  41ba18:	ja     0x41b9b9
  41ba1a:	sbb    BYTE PTR [edx+esi*1],ah
  41ba1d:	jp     0x41b9f7
  41ba1f:	mov    dl,0x52
  41ba21:	retf   0xd3da
  41ba24:	xchg   ecx,eax
  41ba25:	loop   0x41ba41
  41ba27:	out    0x9f,eax
  41ba29:	sti    
  41ba2a:	push   cs
  41ba2b:	or     eax,0x2a270733
  41ba30:	dec    ecx
  41ba31:	and    ch,BYTE PTR [ebx+0x34]
  41ba34:	mov    cs,WORD PTR [ebx-0x56]
  41ba37:	push   esi
  41ba38:	into   
  41ba39:	pop    esp
  41ba3a:	out    0x66,al
  41ba3c:	in     eax,0x6b
  41ba3e:	in     al,0x78
  41ba40:	in     al,0x8b
  41ba42:	in     eax,0x91
  41ba44:	out    dx,al
  41ba45:	mov    eax,ds:0xbaefa9e1
  41ba4a:	out    0xc6,al
  41ba4c:	jmp    0x41ba11
  41ba4e:	out    dx,eax
  41ba4f:	shr    cl,cl
  41ba51:	fucom  st(0)
  41ba53:	repz in al,0xfb
  41ba56:	out    dx,eax
  41ba57:	or     al,0x3e
  41ba59:	or     eax,eax
  41ba5b:	push   ss
  41ba5c:	(bad)  
  41ba5d:	daa    
  41ba5e:	xlat   BYTE PTR ds:[ebx]
  41ba5f:	sub    ebx,esp
  41ba61:	inc    ebp
  41ba62:	in     eax,0x4f
  41ba64:	test   DWORD PTR [ebx-0x4],0xf069ff54
  41ba6b:	jo     0x41ba63
  41ba6d:	xchg   ecx,eax
  41ba6e:	cli    
  41ba6f:	mov    dl,0xf4
  41ba71:	sar    ebx,cl
  41ba73:	out    0xf1,al
  41ba75:	std    
  41ba76:	clc    
  41ba77:	xor    al,0x3c
  41ba79:	jg     0x41bac8
  41ba7b:	jle    0x41ba13
  41ba7d:	jnp    0x41ba33
  41ba7f:	jp     0x41ba53
  41ba81:	sbb    al,ah
  41ba83:	xor    bh,al
  41ba85:	mov    WORD PTR [esi+edi*1],fs
  41ba88:	es cs inc esp
  41ba8b:	inc    edi
  41ba8c:	inc    ebx
  41ba8d:	bound  ebx,QWORD PTR [ebp-0x7c]
  41ba90:	imul   esp,DWORD PTR [ecx-0x15883b92],0xffffff8b
  41ba97:	in     eax,0x84
  41ba99:	jmp    0xcb09:0x3701efa1
  41baa0:	xchg   ebx,eax
  41baa1:	shl    BYTE PTR [ecx-0x4b144a27],cl
  41baa7:	sub    bl,dh
  41baa9:	(bad)  
  41baaa:	sub    eax,0xef50134
  41baaf:	and    al,BYTE PTR [edx+0x65]
  41bab2:	jnp    0x41bafc
  41bab4:	jnp    0x41ba3d
  41bab6:	jb     0x41ba57
  41bab8:	jbe    0x41ba67
  41baba:	jg     0x41ba84
  41babc:	ja     0x41ba9d
  41babe:	jl     0x41ba99
  41bac0:	adc    al,0x6
  41bac2:	cmp    DWORD PTR [edi],edi
  41bac4:	dec    ebp
  41bac5:	inc    edi
  41bac6:	jo     0x41ba8e
  41bac8:	add    BYTE PTR [edi],0x9c
  41bacb:	inc    ecx
  41bacc:	lahf   
  41bacd:	mov    ebp,DWORD PTR [eax+eax*8-0x3749375d]
  41bad4:	mov    dl,0xc1
  41bad6:	mov    bl,0xcc
  41bad8:	fisubr WORD PTR [edx]
  41bada:	ss sti 
  41badc:	in     eax,0xf6
  41bade:	jecxz  0x41bae8
  41bae0:	aaa    
  41bae1:	cmp    al,cl
  41bae3:	xor    al,0xd2
  41bae5:	dec    ecx
  41bae6:	shl    BYTE PTR [esp+eiz*8+0x6a],1
  41baea:	loop   0x41bb66
  41baec:	out    0x59,eax
  41baee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41baef:	sbb    BYTE PTR [ebx+ebx*4+0x184fe918],ch
  41baf6:	jne    0x41bb08
  41baf8:	jo     0x41bb0e
  41bafa:	jg     0x41bb49
  41bafc:	jne    0x41bb70
  41bafe:	jb     0x41ba82
  41bb00:	jb     0x41ba95
  41bb02:	jb     0x41baab
  41bb04:	jg     0x41bab0
  41bb06:	adc    BYTE PTR [esi],cl
  41bb08:	xor    DWORD PTR [edi+ebx*4],ebx
  41bb0b:	push   ds
  41bb0c:	sbb    ch,BYTE PTR [ecx]
  41bb0e:	xchg   ecx,eax
  41bb0f:	xor    eax,0x899a3417
  41bb14:	adc    edx,DWORD PTR [ebp-0x526b5f6e]
  41bb1a:	pushf  
  41bb1b:	mov    ebx,0xb29fbe93
  41bb20:	call   0x8dd2:0x98c396c2
  41bb27:	jge    0x41bb62
  41bb29:	lods   al,BYTE PTR ds:[esi]
  41bb2a:	sub    ecx,edx
  41bb2c:	dec    ebx
  41bb2d:	iret   
  41bb2e:	ins    BYTE PTR es:[edi],dx
  41bb2f:	fld    DWORD PTR [ebp+edi*1+0x32ca3e37]
  41bb36:	aad    0x6b
  41bb38:	fnstsw WORD PTR [ebx-0x1f]
  41bb3b:	cdq    
  41bb3c:	and    edi,DWORD PTR [ebx]
  41bb3e:	sar    edi,0xec
  41bb41:	(bad)  
  41bb42:	in     al,dx
  41bb43:	cmc    
  41bb44:	cld    
  41bb45:	cli    
  41bb46:	xor    DWORD PTR cs:[eax],edi
  41bb49:	dec    ecx
  41bb4a:	cmp    al,0x55
  41bb4c:	ds push edi
  41bb4e:	cmp    eax,0x3ee039d5
  41bb53:	in     al,dx
  41bb54:	(bad)  
  41bb56:	xor    BYTE PTR [ebx],bh
  41bb58:	dec    ecx
  41bb59:	inc    eax
  41bb5a:	lea    ecx,[ecx-0x206a3cc6]
  41bb60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb61:	(bad)  
  41bb62:	mov    ebx,0x323b4417
  41bb67:	xlat   BYTE PTR ds:[ebx]
  41bb68:	push   ebp
  41bb69:	rol    BYTE PTR [edi+0x638cbef],1
  41bb6f:	and    al,0x3d
  41bb71:	sub    DWORD PTR [ecx],esi
  41bb73:	mov    ch,BYTE PTR [eax]
  41bb75:	sahf   
  41bb76:	inc    ecx
  41bb77:	shr    BYTE PTR [ebx+eax*1+0x34],cl
  41bb7b:	das    
  41bb7c:	les    ecx,FWORD PTR [edi-0x2d]
  41bb7f:	mov    ch,bl
  41bb81:	mov    ebx,0xf4e2c9ee
  41bb86:	repz mov dh,BYTE PTR [esi]
  41bb89:	aaa    
  41bb8a:	leave  
  41bb8b:	inc    esi
  41bb8c:	aam    0x55
  41bb8e:	ficom  DWORD PTR [ebp-0x19]
  41bb91:	jne    0x41bb7d
  41bb93:	jnp    0x41bb91
  41bb95:	mov    ds:0xf0f4e2fb,al
  41bb9a:	cmc    
  41bb9b:	xchg   BYTE PTR [eax],bh
  41bb9d:	sub    esp,0xc30cf121
  41bba3:	inc    edx
  41bba4:	fld    DWORD PTR [ebp+0x1c]
  41bba7:	add    eax,0x8e9b6630
  41bbac:	adc    al,0xaa
  41bbae:	call   0x18f3:0x92e81fd8
  41bbb5:	adc    edx,eax
  41bbb7:	xor    BYTE PTR [edi+0x25],bh
  41bbba:	and    ebp,0xd89dd492
  41bbc0:	pop    ss
  41bbc1:	in     al,dx
  41bbc2:	cwde   
  41bbc3:	out    dx,al
  41bbc4:	cwde   
  41bbc5:	hlt    
  41bbc6:	mov    ds,WORD PTR [eax+0x3b]
  41bbc9:	ins    DWORD PTR es:[edi],dx
  41bbca:	sub    DWORD PTR [edi+0x43],edi
  41bbcd:	xchg   DWORD PTR [eax-0x61],ebp
  41bbd0:	sbb    BYTE PTR [esi-0x41365860],0xe1
  41bbd7:	mov    dh,0xf6
  41bbd9:	or     eax,0xe8c7e796
  41bbde:	shr    edx,0xdc
  41bbe1:	fnstsw WORD PTR [ebx]
  41bbe3:	sbb    al,0x3b
  41bbe5:	cs aas 
  41bbe7:	sub    DWORD PTR [edx],edi
  41bbe9:	cmp    cl,BYTE PTR ss:[ebp+0x35]
  41bbed:	dec    ebp
  41bbee:	cmp    eax,0x3e08075d
  41bbf3:	pop    es
  41bbf4:	inc    esi
  41bbf5:	and    eax,0x78c1768a
  41bbfa:	add    BYTE PTR [ebx+edi*1-0x66cccefd],dh
  41bc01:	push   eax
  41bc02:	mov    bh,0x38
  41bc04:	cld    
  41bc05:	add    bh,BYTE PTR [ecx+edi*1]
  41bc08:	cmp    BYTE PTR [esi+0x108ac54a],al
  41bc0e:	xor    esp,DWORD PTR [edi]
  41bc10:	sahf   
  41bc11:	inc    edx
  41bc12:	mov    ds:0xe5d133b0,eax
  41bc17:	sub    BYTE PTR [edi],bh
  41bc19:	cmp    ecx,DWORD PTR [ebx+0x36]
  41bc1c:	mov    esi,0xb23c5e0e
  41bc21:	dec    edx
  41bc22:	js     0x41bc60
  41bc24:	sbb    BYTE PTR [ecx+0x300eac9d],0x70
  41bc2b:	call   0xea2c9fff
  41bc30:	stc    
  41bc31:	icebp  
  41bc32:	pop    es
  41bc33:	cmp    dh,BYTE PTR [eax]
  41bc35:	ins    DWORD PTR es:[edi],dx
  41bc36:	xor    ebp,DWORD PTR [ebx+0x3a]
  41bc39:	ja     0x41bc79
  41bc3b:	jns    0x41bc7b
  41bc3d:	fwait
  41bc3e:	cmp    eax,0x369c3d96
  41bc43:	mov    ds:0xa437a339,eax
  41bc48:	ds test eax,0xe837b633
  41bc4e:	xor    edx,esi
  41bc50:	cmp    dl,bh
  41bc52:	sub    edi,edi
  41bc54:	out    dx,al
  41bc55:	jp     0x41bc66
  41bc57:	jae    0x41bc60
  41bc59:	js     0x41bc70
  41bc5b:	jnp    0x41bc75
  41bc5d:	jl     0x41bc77
  41bc5f:	jns    0x41bc73
  41bc61:	ja     0x41bce0
  41bc63:	jae    0x41bc19
  41bc65:	jb     0x41bc3d
  41bc67:	js     0x41bc5a
  41bc69:	push   ss
  41bc6a:	add    BYTE PTR ds:0x1c1a9c10,dh
  41bc70:	sbb    DWORD PTR [edx+0x25d91f51],edx
  41bc76:	push   eax
  41bc77:	or     cl,BYTE PTR [edx]
  41bc79:	cmp    dl,BYTE PTR [ebx+0x2a]
  41bc7c:	jb     0x41bcc3
  41bc7e:	mov    WORD PTR [ebx-0x56],fs
  41bc81:	mov    cl,BYTE PTR [edx]
  41bc83:	lahf   
  41bc84:	daa    
  41bc85:	ret    
  41bc86:	sub    DWORD PTR [edx],edx
  41bc88:	mov    cl,0x33
  41bc8a:	iret   
  41bc8b:	xor    dl,dh
  41bc8d:	cmp    bl,ch
  41bc8f:	cmp    edi,esi
  41bc91:	or     al,0xf0
  41bc93:	dec    edx
  41bc94:	(bad)  
  41bc95:	dec    ecx
  41bc96:	mov    BYTE PTR [edx+0x8],0x26
  41bc9a:	ss mov esp,0x6934c265
  41bca0:	pushf  
  41bca1:	je     0x41bcc0
  41bca3:	daa    
  41bca4:	ss dec ebx
  41bca6:	nop
  41bca7:	pusha  
  41bca8:	adc    BYTE PTR [edx+0x106b399],ah
  41bcae:	ds pop ss
  41bcb0:	sub    bl,BYTE PTR [ebx+0x44]
  41bcb3:	push   eax
  41bcb4:	ins    BYTE PTR es:[edi],dx
  41bcb5:	arpl   WORD PTR [ecx-0x541368a4],bx
  41bcbb:	jmp    FWORD PTR [ebx+0x4e3428f2]
  41bcc1:	jecxz  0x41bcb4
  41bcc3:	out    dx,eax
  41bcc4:	pop    ss
  41bcc5:	xor    BYTE PTR [edx],bh
  41bcc7:	sub    dh,BYTE PTR [ebx]
  41bcc9:	daa    
  41bcca:	cmp    esp,ebp
  41bccc:	add    DWORD PTR [ecx+esi*1],ebp
  41bccf:	jne    0x41bd17
  41bcd1:	sbb    dh,BYTE PTR ds:0x2fef9eb6
  41bcd7:	frstor [edx+0x23]
  41bcda:	mov    cs,WORD PTR [ecx]
  41bcdc:	push   ds
  41bcdd:	pop    es
  41bcde:	xor    eax,0x15819c40
  41bce3:	adc    DWORD PTR [edi+0x7e],eax
  41bce6:	cmp    al,0x88
  41bce8:	pop    esp
  41bce9:	enter  0x469,0x7d
  41bced:	dec    ebp
  41bcee:	or     BYTE PTR [edx+0x336a3d5d],0xb0
  41bcf5:	jo     0x41bd31
  41bcf7:	lea    edi,[edx]
  41bcf9:	mov    WORD PTR [ecx],?
  41bcfb:	xchg   ebp,eax
  41bcfc:	xor    DWORD PTR [ebp-0x37cc4dcd],esp
  41bd02:	fbstp  TBYTE PTR ds:[ebx]
  41bd05:	call   0xe97fa744
  41bd0a:	cmp    ch,bh
  41bd0c:	xor    dh,bh
  41bd0e:	pop    es
  41bd0f:	push   cs
  41bd10:	xor    cl,BYTE PTR [edi]
  41bd12:	inc    edx
  41bd13:	adc    DWORD PTR [esi+0x910041c],eax
  41bd19:	and    DWORD PTR [edi+0x3a383f39],ebx
  41bd1f:	cmp    al,0x36
  41bd21:	xor    BYTE PTR [eax],bh
  41bd23:	push   ebx
  41bd24:	xor    eax,0x336f335c
  41bd29:	bound  esi,QWORD PTR [ebx]
  41bd2b:	jp     0x41bd61
  41bd2d:	mov    bh,BYTE PTR [edx]
  41bd2f:	cmp    BYTE PTR [esi],0x92
  41bd32:	cmp    al,0xbf
  41bd34:	cmp    esi,DWORD PTR [ebx-0x37c03cc5]
  41bd3a:	cmp    cl,dl
  41bd3c:	cmp    eax,0x223a55e7
  41bd41:	shr    BYTE PTR [edx],0xd7
  41bd44:	xor    al,0xd1
  41bd46:	inc    ebp
  41bd47:	loopne 0x41bda6
  41bd49:	in     eax,0x7b
  41bd4b:	stc    
  41bd4c:	xchg   edx,eax
  41bd4d:	neg    DWORD PTR [eax-0x58055e02]
  41bd53:	test   ecx,0xfdf0cffc
  41bd59:	(bad)  
  41bd5a:	cld    
  41bd5b:	test   BYTE PTR [edx],0x3b
  41bd5e:	ja     0x41bd72
  41bd60:	jge    0x41bd82
  41bd62:	jnp    0x41bd8f
  41bd64:	mov    esp,0x76377c6b
  41bd69:	dec    ecx
  41bd6a:	je     0x41bdb9
  41bd6c:	jg     0x41bdc9
  41bd6e:	jg     0x41bdcc
  41bd70:	jb     0x41bde0
  41bd72:	jno    0x41bde2
  41bd74:	mov    dh,0x72
  41bd76:	jae    0x41bdf3
  41bd78:	je     0x41bd01
  41bd7a:	xchg   ebp,eax
  41bd7b:	xor    edi,DWORD PTR [ecx+edx*4+0x7a]
  41bd7f:	cdq    
  41bd80:	jno    0x41bd2c
  41bd82:	jne    0x41bd31
  41bd84:	jle    0x41bd43
  41bd86:	ja     0x41bd44
  41bd88:	jle    0x41bd54
  41bd8a:	jnp    0x41bd57
  41bd8c:	jge    0x41bd6c
  41bd8e:	js     0x41bd6c
  41bd90:	jge    0x41bd74
  41bd92:	jae    0x41bd7b
  41bd94:	jl     0x41bd91
  41bd96:	jae    0x41bd8c
  41bd98:	sbb    eax,DWORD PTR [ebx]
  41bd9a:	xor    cl,BYTE PTR [ebx]
  41bd9c:	lock cmp DWORD PTR ds:0xfee92626,ebx
  41bda3:	cmp    BYTE PTR [edx+0x4f4b7f5d],bl
  41bda9:	dec    ecx
  41bdaa:	or     DWORD PTR ds:0x639e945a,ebp
  41bdb0:	xchg   edx,eax
  41bdb1:	jne    0x41bd4e
  41bdb3:	jbe    0x41bdfa
  41bdb5:	cwde   
  41bdb6:	mov    ah,BYTE PTR [esi]
  41bdb8:	pop    es
  41bdb9:	xchg   edi,eax
  41bdba:	jmp    0x41bd60
  41bdbc:	in     eax,0xa8
  41bdbe:	out    dx,eax
  41bdbf:	mov    esi,0x9a94bde2
  41bdc4:	(bad)  
  41bdc5:	hlt    
  41bdc6:	fdivp  st(2),st
  41bdc8:	shl    cl,1
  41bdca:	loop   0x41bdc8
  41bdcc:	loope  0x41bdca
  41bdce:	icebp  
  41bdcf:	idiv   cl
  41bdd1:	clc    
  41bdd2:	or     ah,al
  41bdd4:	cdq    
  41bdd5:	sbb    esp,ebx
  41bdd7:	sbb    al,0xda
  41bdd9:	and    al,0xe9
  41bddb:	sub    al,0xe7
  41bddd:	xor    edi,ecx
  41bddf:	aas    
  41bde0:	popa   
  41bde1:	mov    ds:0x5b3b5f3e,eax
  41bde6:	cmp    DWORD PTR [esi+0x38],ebp
  41bde9:	imul   esi,DWORD PTR [esi+esi*2],0x26
  41bded:	js     0x41bdd8
  41bdef:	xchg   ebp,eax
  41bdf0:	test   DWORD PTR [esi-0x66656162],edx
  41bdf6:	test   al,0x98
  41bdf8:	scas   eax,DWORD PTR es:[edi]
  41bdf9:	nop
  41bdfa:	mov    ah,0x91
  41bdfc:	mov    dl,0x93
  41bdfe:	retf   
  41bdff:	xchg   ebx,eax
  41be00:	int    0x9e
  41be02:	rcl    BYTE PTR [ebx-0x6214652a],1
  41be08:	jmp    0x1235:0x1688ff98
  41be0f:	and    ch,BYTE PTR [edi]
  41be11:	dec    eax
  41be12:	cmp    bl,BYTE PTR [esi+0x55d54563]
  41be18:	jmp    0xfea8b26f
  41be1d:	imul   esi,esp,0x7f
  41be20:	cld    
  41be21:	jns    0x41be1a
  41be23:	mov    ebx,?
  41be25:	lahf   
  41be26:	cli    
  41be27:	xchg   ebx,eax
  41be28:	cli    
  41be29:	mov    al,ds:0xc3fdb5f3
  41be2e:	cld    
  41be2f:	pop    ebp
  41be30:	xor    al,0xe9
  41be32:	jmp    0x327bee58
  41be37:	cmp    dl,BYTE PTR [edi-0x43cf4fc4]
  41be3d:	xor    dh,cl
  41be3f:	cmp    eax,0xfeff24d7
  41be44:	add    DWORD PTR [eax],esi
  41be46:	daa    
  41be47:	mov    eax,ds:0x9a6f62d8
  41be4c:	mov    DWORD PTR [edi-0x8382a60],esp
  41be52:	push   es
  41be53:	js     0x41be69
  41be55:	mov    edi,0x372bd241
  41be5a:	ficomp WORD PTR [ebx+0x17839b6c]
  41be60:	lahf   
  41be61:	xchg   edx,eax
  41be62:	enter  0xd313,0x94
  41be66:	or     eax,DWORD PTR [ebp+esi*8+0x4a]
  41be6a:	lea    ecx,[ecx-0x3e]
  41be6d:	ja     0x41be7c
  41be6f:	jb     0x41beb2
  41be71:	mov    WORD PTR [ecx+0x4],es
  41be74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be75:	hlt    
  41be76:	fdivr  st(3),st
  41be78:	fcomip st,st(5)
  41be7a:	or     eax,0x731d7530
  41be7f:	adc    DWORD PTR [edx+0x4d],edi
  41be82:	jnp    0x41becf
  41be84:	jno    0x41be10
  41be86:	jle    0x41be10
  41be88:	inc    eax
  41be89:	mov    ebx,0x903c1ff5
  41be8e:	lahf   
  41be8f:	mov    al,ds:0xc497b819
  41be94:	adc    edx,ebp
  41be96:	xchg   ebp,eax
  41be97:	jecxz  0x41beb3
  41be99:	cld    
  41be9a:	adc    BYTE PTR [esi],0x37
  41be9d:	sub    ch,BYTE PTR [ecx]
  41be9f:	xor    BYTE PTR [esi+0x5a],al
  41bea2:	push   0x78
  41bea4:	fmulp  st(3),st
  41bea6:	xchg   edx,eax
  41bea7:	in     eax,0xc0
  41bea9:	cli    
  41beaa:	iret   
  41beab:	imul   edx
  41bead:	icebp  
  41beae:	sbb    edi,DWORD PTR [ebx]
  41beb0:	push   ds
  41beb1:	jmp    0xe899a2eb
  41beb6:	dec    DWORD PTR gs:[ebp-0x41054c08]
  41bebd:	hlt    
  41bebe:	sar    bl,1
  41bec0:	push   es
  41bec1:	xchg   ebp,eax
  41bec2:	enter  0x2b50,0xa8
  41bec6:	or     al,bh
  41bec8:	cmp    dl,BYTE PTR [edi]
  41beca:	ss pop ss
  41becc:	pushf  
  41becd:	push   esi
  41bece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41becf:	xlat   BYTE PTR ds:[ebx]
  41bed0:	inc    ebx
  41bed1:	pop    esi
  41bed2:	sub    DWORD PTR [ecx],esp
  41bed4:	xor    eax,0xeec1ea81
  41bed9:	clc    
  41beda:	repnz adc al,0x3c
  41bedd:	xor    ecx,DWORD PTR [edx+0x38]
  41bee0:	push   esp
  41bee1:	and    eax,0x979b006d
  41bee6:	xchg   edi,eax
  41bee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bee8:	sbb    ch,BYTE PTR [esi-0x2a663f61]
  41beee:	mov    BYTE PTR [edx],dl
  41bef0:	xor    eax,0xc8813c44
  41bef5:	pmullw mm2,QWORD PTR [edi+0x33cc6273]
  41befc:	je     0x41beb2
  41befe:	test   BYTE PTR [ebx],dl
  41bf00:	and    DWORD PTR [eax+ecx*2],0x533d0914
  41bf07:	cdq    
  41bf08:	pop    eax
  41bf09:	sbb    ebp,DWORD PTR [ebx-0x79]
  41bf0c:	jmp    0x41bf14
  41bf0e:	push   ebp
  41bf0f:	int    0x46
  41bf11:	rol    DWORD PTR [esi],0xa3
  41bf14:	pop    es
  41bf15:	and    edi,DWORD PTR [ecx-0x7b]
  41bf18:	jecxz  0x41bee1
  41bf1a:	mov    gs,WORD PTR [eax]
  41bf1c:	xor    DWORD PTR [eax-0x45],ecx
  41bf1f:	push   ebp
  41bf20:	jno    0x41bf8e
  41bf22:	jb     0x41bf9e
  41bf24:	or     esp,esi
  41bf26:	xor    ch,BYTE PTR [eax+0x33]
  41bf29:	mov    ebp,DWORD PTR [ecx+ebx*4]
  41bf2c:	inc    edx
  41bf2d:	test   al,0x66
  41bf2f:	mov    edi,0xc6a3ce84
  41bf34:	ret    
  41bf35:	fucom  st(7)
  41bf37:	in     al,dx
  41bf38:	loop   0x41bf31
  41bf3a:	add    al,0x47
  41bf3c:	popf   
  41bf3d:	or     ch,BYTE PTR [ebx]
  41bf3f:	or     al,BYTE PTR [edi]
  41bf41:	or     BYTE PTR [esi+ebx*1],dh
  41bf44:	sub    BYTE PTR [edi],bl
  41bf46:	inc    ebx
  41bf47:	es or  cl,0x86
  41bf4b:	xor    al,0xa3
  41bf4d:	inc    ebp
  41bf4e:	les    ecx,FWORD PTR [ecx-0x2e]
  41bf51:	lock arpl di,si
  41bf54:	jo     0x41bfa7
  41bf56:	ds jns 0x41beee
  41bf59:	jo     0x41bef5
  41bf5b:	jl     0x41befe
  41bf5d:	jb     0x41bf04
  41bf5f:	js     0x41bf1a
  41bf61:	jnp    0x41bf13
  41bf63:	js     0x41bf27
  41bf65:	ja     0x41bf2d
  41bf67:	jno    0x41bf47
  41bf69:	dec    eax
  41bf6a:	fld    QWORD PTR [edx]
  41bf6c:	cmp    ebp,esi
  41bf6e:	ret    
  41bf6f:	cld    
  41bf70:	sar    ah,0xcd
  41bf73:	add    al,0x14
  41bf75:	pop    ds
  41bf76:	push   ss
  41bf77:	sub    eax,0x392e3e35
  41bf7c:	xor    BYTE PTR [eax],bh
  41bf7e:	xor    esi,DWORD PTR [ebx]
  41bf80:	dec    edi
  41bf81:	and    eax,0x5e96cf4c
  41bf86:	xchg   ebx,eax
  41bf87:	push   0x4977cd4c
  41bf8c:	add    al,BYTE PTR [esi-0x620b7706]
  41bf92:	sti    
  41bf93:	xchg   ecx,eax
  41bf94:	hlt    
  41bf95:	scas   al,BYTE PTR es:[edi]
  41bf96:	add    esi,DWORD PTR es:[edi]
  41bf99:	mov    cl,0x3d
  41bf9b:	mov    esi,0xcd3fca3c
  41bfa0:	and    al,0xda
  41bfa2:	sub    al,0x92
  41bfa4:	in     eax,0x92
  41bfa6:	jmp    0x58e:0xf89efd98
  41bfad:	aas    
  41bfae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfaf:	push   ds
  41bfb0:	sbb    DWORD PTR ds:0x1f209410,edx
  41bfb6:	and    edx,DWORD PTR [esi-0x66c1e2c8]
  41bfbc:	dec    esp
  41bfbd:	xchg   edi,eax
  41bfbe:	dec    ebx
  41bfbf:	pushf  
  41bfc0:	push   ebx
  41bfc1:	xchg   ebx,eax
  41bfc2:	push   ebp
  41bfc3:	xchg   ebp,eax
  41bfc4:	ins    BYTE PTR es:[edi],dx
  41bfc5:	adc    DWORD PTR [edx],0xf38bf87e
  41bfcb:	cmp    ebx,0xffffff91
  41bfce:	sti    
  41bfcf:	xchg   esi,eax
  41bfd0:	repnz test eax,0xb6f1a3f9
  41bfd6:	(bad)  
  41bfd7:	mov    esi,0xc9f2c6f4
  41bfdc:	hlt    
  41bfdd:	aad    0xfe
  41bfdf:	fistp  QWORD PTR [ebx+0x78e97a53]
  41bfe5:	cld    
  41bfe6:	jns    0x41bfe1
  41bfe8:	pop    ss
  41bfe9:	add    al,0x31
  41bfeb:	or     dl,BYTE PTR [ecx+edx*1+0x35962e16]
  41bff2:	push   ss
  41bff3:	inc    eax
  41bff4:	lea    edi,[edi]
  41bff6:	pop    ecx
  41bff7:	cld    
  41bff8:	outs   dx,BYTE PTR ds:[esi]
  41bff9:	std    
  41bffa:	js     0x41bffb
  41bffc:	jne    0x41bffd
  41bffe:	jg     0x41bff2
  41c000:	xchg   dh,bh
  41c002:	mov    esp,gs
  41c004:	jg     0x41bf94
  41c006:	jo     0x41c07b
  41c008:	popf   
  41c009:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c00b:	mov    ebx,0x72d77bab
  41c010:	fdiv   DWORD PTR [ebx-0x1f]
  41c013:	jne    0x41bff7
  41c015:	jge    0x41bff9
  41c017:	jb     0x41c004
  41c019:	jle    0x41c018
  41c01b:	jnp    0x41c010
  41c01d:	ja     0x41c016
  41c01f:	jns    0x41c019
  41c021:	inc    eax
  41c022:	adc    BYTE PTR [edi],al
  41c024:	pop    edi
  41c025:	xor    al,0x87
  41c027:	push   eax
  41c028:	iret   
  41c029:	dec    ebx
  41c02a:	add    eax,0x4581ab41
  41c02f:	in     al,0x5d
  41c031:	jecxz  0x41c090
  41c033:	jecxz  0x41c08e
  41c035:	out    0x6e,eax
  41c037:	loopne 0x41bfc8
  41c039:	jmp    0x41bfd2
  41c03b:	jmp    0xe3a6:0xe795e49a
  41c042:	lods   al,BYTE PTR ds:[esi]
  41c043:	call   0xe2e2a1f1
  41c048:	mov    eax,0xc3e3bae6
  41c04d:	out    0xe7,eax
  41c04f:	out    0xe2,al
  41c051:	in     al,dx
  41c052:	cmc    
  41c053:	xchg   esp,eax
  41c054:	aad    0xf6
  41c056:	hlt    
  41c057:	(bad)  
  41c058:	stc    
  41c059:	add    eax,0x19f0137
  41c05e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c05f:	add    DWORD PTR [esi-0x6c3a3cf0],esi
  41c065:	dec    esi
  41c066:	in     al,dx
  41c067:	inc    edx
  41c068:	icebp  
  41c069:	dec    ebp
  41c06a:	inc    esp
  41c06b:	in     eax,dx
  41c06c:	push   esi
  41c06d:	cmc    
  41c06e:	push   eax
  41c06f:	neg    BYTE PTR [edi+edi*8+0x60]
  41c073:	hlt    
  41c074:	popa   
  41c075:	repz jge 0x41c06c
  41c078:	lahf   
  41c079:	sti    
  41c07a:	mov    ds:0xa0f6affd,eax
  41c07f:	repnz mov bl,0xf9
  41c082:	mov    edi,0xb0f9baf0
  41c087:	cld    
  41c088:	(bad)  
  41c08b:	call   esi
  41c08d:	cli    
  41c08e:	lock hlt 
  41c090:	cmc    
  41c091:	stc    
  41c092:	mov    WORD PTR [ebx],?
  41c094:	push   cs
  41c095:	(bad)  
  41c096:	or     eax,0x12db09d9
  41c09b:	loop   0x41c0b7
  41c09d:	jmp    0xf954bbbb
  41c0a2:	and    eax,edi
  41c0a4:	inc    ecx
  41c0a5:	call   DWORD PTR [ebx-0x10]
  41c0a8:	pop    ecx
  41c0a9:	std    
  41c0aa:	pop    eax
  41c0ab:	clc    
  41c0ac:	ins    DWORD PTR es:[edi],dx
  41c0ad:	cmp    DWORD PTR [ecx],ebx
  41c0af:	gs hlt 
  41c0b1:	pusha  
  41c0b2:	div    BYTE PTR [ebx+esi*4-0x7]
  41c0b6:	cdq    
  41c0b7:	cs jl  0x41c060
  41c0ba:	js     0x41c060
  41c0bc:	inc    edx
  41c0bd:	mov    bh,0x11
  41c0bf:	iret   
  41c0c0:	add    esp,DWORD PTR [ecx]
  41c0c2:	mov    ebx,0xc6c1c9c7
  41c0c7:	retf   
  41c0c8:	mov    esp,0x3fb29c3
  41c0ce:	cmp    eax,0x1f31de06
  41c0d3:	mov    esi,0xdb1ac016
  41c0d8:	push   ds
  41c0d9:	in     eax,dx
  41c0da:	and    eax,0x2bf125fb
  41c0df:	repnz xor edi,esi
  41c0e2:	pop    ebp
  41c0e3:	cmc    
  41c0e4:	push   0x68f861f4
  41c0e9:	icebp  
  41c0ea:	push   0xfffffffa
  41c0ec:	jp     0x41c0e6
  41c0ee:	jge    0x41c0eb
  41c0f0:	jns    0x41c0e9
  41c0f2:	jp     0x41c0f1
  41c0f4:	xchg   edx,esi
  41c0f6:	lahf   
  41c0f7:	icebp  
  41c0f8:	mov    esi,0xb0feb4ff
  41c0fd:	lock shl ebp,0xc8
  41c101:	sti    
  41c102:	int    0xfe
  41c104:	into   
  41c105:	not    edi
  41c107:	cli    
  41c108:	fcomi  st,st(6)
  41c10a:	sar    esi,1
  41c10c:	in     eax,dx
  41c10d:	pop    ds
  41c10e:	mov    WORD PTR [ebx*1+0x1b1b1f9c],?
  41c115:	xchg   esp,eax
  41c116:	adc    BYTE PTR [ecx],bl
  41c118:	and    BYTE PTR [edx-0x67dee7df],dl
  41c11e:	sub    ecx,DWORD PTR [ebx+0x1e]
  41c121:	inc    eax
  41c122:	ret    
  41c123:	imul   eax,ebx,0xc46cc361
  41c129:	jle    0x41c0f5
  41c12b:	js     0x41c0fb
  41c12d:	jno    0x41c0fb
  41c12f:	jno    0x41c0fc
  41c131:	mov    ebx,ecx
  41c133:	test   edi,ecx
  41c135:	mov    cl,al
  41c137:	fwait
  41c138:	ret    
  41c139:	mov    ebx,0xcdc8c2c2
  41c13e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c13f:	and    al,0xc8
  41c141:	out    dx,eax
  41c142:	(bad)  
  41c144:	shr    bl,cl
  41c146:	fucomp st(7)
  41c148:	fucomp st(1)
  41c14a:	in     al,0xe1
  41c14c:	hlt    
  41c14d:	jg     0x41c187
  41c14f:	aaa    
  41c150:	adc    al,0x23
  41c152:	daa    
  41c153:	mov    eax,ds:0x332b3b35
  41c158:	sub    bh,BYTE PTR [esi*1+0x35393d33]
  41c15f:	cmp    dh,BYTE PTR [eax]
  41c161:	cmp    DWORD PTR [esi+0x36],edx
  41c164:	jp     0x41c196
  41c166:	jb     0x41c1a4
  41c168:	jge    0x41c19c
  41c16a:	cmp    DWORD PTR ds:0x3f873788,0x3a9d3f8a
  41c174:	sahf   
  41c175:	ds xchg ebp,eax
  41c177:	cmp    al,0xae
  41c179:	cmp    al,cl
  41c17b:	cmp    bl,bl
  41c17d:	xor    edx,ebx
  41c17f:	cmp    al,0xdc
  41c181:	xor    al,0xe9
  41c183:	cmp    eax,0x3aed33e4
  41c188:	out    dx,eax
  41c189:	aaa    
  41c18a:	idiv   BYTE PTR ds:0x33010af7
  41c190:	cs inc ebx
  41c192:	cmp    DWORD PTR [esi+esi*1+0x420a34ca],eax
  41c199:	dec    ebx
  41c19a:	inc    edi
  41c19b:	iret   
  41c19c:	mov    esp,0xf95ef34d
  41c1a1:	pop    ecx
  41c1a2:	clc    
  41c1a3:	imul   edi,edi,0x94f93d83
  41c1a9:	clc    
  41c1aa:	xchg   ebp,eax
  41c1ab:	icebp  
  41c1ac:	xchg   ebp,eax
  41c1ad:	call   DWORD PTR [ecx-0x5f09530c]
  41c1b3:	std    
  41c1b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1b5:	cmc    
  41c1b6:	mov    al,ds:0xe819c69e
  41c1bb:	xchg   edi,eax
  41c1bc:	out    dx,eax
  41c1bd:	xchg   ebp,eax
  41c1be:	jmp    0x41c203
  41c1c0:	pop    es
  41c1c1:	repz (bad) 
  41c1c3:	icebp  
  41c1c4:	sar    esi,0xd8
  41c1c7:	add    DWORD PTR [ebx+ecx*1],esi
  41c1ca:	dec    esi
  41c1cb:	or     eax,0x3536c0c6
  41c1d0:	int    0x31
  41c1d2:	dec    ecx
  41c1d3:	cmp    eax,0x3d443d4b
  41c1d8:	pop    esi
  41c1d9:	and    bl,BYTE PTR [esi+eax*1-0x34]
  41c1dd:	pop    edi
  41c1de:	out    0x69,al
  41c1e0:	jecxz  0x41c253
  41c1e2:	loope  0x41c180
  41c1e4:	loop   0x41c17f
  41c1e6:	cwde   
  41c1e7:	sub    ah,BYTE PTR [esi-0x58065e0b]
  41c1ed:	cli    
  41c1ee:	mov    eax,0xb6f5b0f2
  41c1f3:	hlt    
  41c1f4:	mov    ebp,0xf8fdd6fc
  41c1f9:	push   ecx
  41c1fb:	sti    
  41c1fc:	add    BYTE PTR ds:0xa6009f02,bh
  41c202:	add    DWORD PTR [ecx-0x23e23bec],esi
  41c208:	sbb    eax,0xe2c611eb
  41c20d:	call   DWORD PTR [edi+edi*8+0x59]
  41c211:	call   0xffacb234
  41c216:	arpl   bx,si
  41c218:	imul   BYTE PTR gs:[ebx-0x6]
  41c21c:	jg     0x41c212
  41c21e:	jo     0x41c219
  41c220:	js     0x41c220
  41c222:	test   ebp,esp
  41c224:	cmp    DWORD PTR [eax-0x46084c07],edi
  41c22a:	cmc    
  41c22b:	shl    eax,0xc7
  41c22e:	hlt    
  41c22f:	int3   
  41c230:	lock enter 0xd0f8,0xfb
  41c235:	sar    ebx,cl
  41c237:	push   es
  41c238:	ds jg  0x41c25f
  41c23b:	int    0xb
  41c23d:	cli    
  41c23e:	int    0xd6
  41c240:	(bad)  
  41c242:	mov    eax,ds:0x7ab10508
  41c247:	repz and esi,DWORD PTR ds:0x5f1d0551
  41c24e:	scas   al,BYTE PTR es:[edi]
  41c24f:	sub    BYTE PTR [ebx-0x4d],ah
  41c252:	sub    ebx,DWORD PTR [eax]
  41c254:	imul   eax,DWORD PTR [eax+0x7ff0702a],0x258429e5
  41c25e:	mov    ebp,0x872b8c33
  41c263:	or     eax,0xf2e29c23
  41c268:	aas    
  41c269:	sti    
  41c26a:	retf   0x3bbf
  41c26d:	xor    al,0x1a
  41c26f:	xor    dh,cl
  41c271:	add    edx,DWORD PTR [ebx+0xc6bce49]
  41c277:	xchg   ecx,eax
  41c278:	dec    eax
  41c279:	pushf  
  41c27a:	mov    BYTE PTR [ebp+0x9ccdcc3],bh
  41c280:	hlt    
  41c281:	mov    al,0x38
  41c283:	dec    ebp
  41c284:	aaa    
  41c285:	jbe    0x41c2c0
  41c287:	mov    WORD PTR [eax+ebp*4],gs
  41c28a:	sahf   
  41c28b:	pushf  
  41c28c:	out    dx,al
  41c28d:	xchg   edx,eax
  41c28e:	not    DWORD PTR [ecx+0x569e8e22]
  41c294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c295:	bound  ebx,QWORD PTR [ebp+0x3e]
  41c298:	mov    ds:0x58f1e36f,eax
  41c29d:	cs dec esp
  41c29f:	popf   
  41c2a0:	in     eax,0xab
  41c2a2:	loope  0x41c269
  41c2a4:	neg    ebx
  41c2a6:	cmc    
  41c2a7:	out    dx,eax
  41c2a8:	nop
  41c2a9:	pop    ebp
  41c2aa:	and    eax,0x331e1629
  41c2af:	pop    edi
  41c2b0:	call   0x97c7a3f9
  41c2b5:	mov    esp,0x511ade22
  41c2ba:	xor    al,0x60
  41c2bc:	sahf   
  41c2bd:	adc    DWORD PTR [ecx],0xffffff84
  41c2c0:	sbb    BYTE PTR [esi],0x34
  41c2c3:	dec    ebx
  41c2c4:	and    eax,0x31014ed0
  41c2c9:	fwait
  41c2ca:	jno    0x41c29f
  41c2cc:	(bad)  
  41c2ce:	out    dx,al
  41c2cf:	cmc    
  41c2d0:	in     eax,0xf9
  41c2d2:	add    BYTE PTR [edx],bh
  41c2d4:	cmp    eax,0x22123801
  41c2d9:	cmp    al,0x6
  41c2db:	scas   al,BYTE PTR es:[edi]
  41c2dc:	push   esp
  41c2dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2de:	imul   edx,edi,0xe3fbbfdd
  41c2e4:	idiv   eax
  41c2e6:	add    al,0xb2
  41c2e8:	add    al,BYTE PTR [ecx]
  41c2ea:	or     BYTE PTR [ecx],cl
  41c2ec:	push   cs
  41c2ed:	cmp    BYTE PTR [ebx+0x5c],ch
  41c2f0:	retf   0x1657
  41c2f3:	mov    eax,ds:0xe063ba4f
  41c2f8:	and    eax,0x3b383e34
  41c2fd:	xor    DWORD PTR [edi],0xffffff9f
  41c300:	cmp    DWORD PTR [esi+0x2a2bf33f],esp
  41c306:	cmp    DWORD PTR [eax-0x628cef92],ebx
  41c30c:	sahf   
  41c30d:	sbb    al,dh
  41c30f:	xchg   edi,eax
  41c310:	ror    BYTE PTR [ecx+0x23],cl
  41c313:	clc    
  41c314:	ret    
  41c315:	std    
  41c316:	ret    
  41c317:	add    al,0x31
  41c319:	adc    al,0x9a
  41c31b:	pop    ss
  41c31c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c31d:	sbb    bh,BYTE PTR [ecx-0x20df30dd]
  41c323:	daa    
  41c324:	jmp    0x584d:0x7b357502
  41c32b:	dec    edi
  41c32c:	and    DWORD PTR [edx],esi
  41c32e:	push   ebp
  41c32f:	ss push ebx
  41c331:	ds pop esp
  41c333:	mov    ebp,0x2d633c65
  41c338:	xor    al,0x9c
  41c33b:	stos   DWORD PTR es:[edi],eax
  41c33c:	xchg   esi,eax
  41c33d:	mov    eax,ds:0xceb3144b
  41c342:	mov    ebx,0xc1d2c7cf
  41c348:	fmul   st,st(0)
  41c34a:	in     eax,0xc8
  41c34c:	out    dx,eax
  41c34d:	test   eax,0x2f2018f2
  41c352:	dec    ecx
  41c353:	sub    BYTE PTR [eax+esi*8+0x18],ch
  41c357:	ins    BYTE PTR es:[edi],dx
  41c358:	xchg   esi,eax
  41c359:	add    BYTE PTR [esi-0x6],0xdf
  41c35d:	retf   0xd5fc
  41c360:	or     cl,bl
  41c362:	ja     0x41c3c0
  41c364:	add    al,0xa5
  41c366:	dec    edi
  41c367:	inc    ebx
  41c368:	jbe    0x41c2f6
  41c36a:	mov    edi,eax
  41c36c:	scas   eax,DWORD PTR es:[edi]
  41c36d:	or     DWORD PTR [edi+0x45d29fa5],ebp
  41c373:	sti    
  41c374:	dec    dl
  41c376:	or     al,0x63
  41c378:	nop
  41c379:	jno    0x41c3c1
  41c37b:	je     0x41c3d9
  41c37d:	jns    0x41c3f5
  41c37f:	ja     0x41c308
  41c381:	jl     0x41c31a
  41c383:	inc    edx
  41c384:	scas   al,BYTE PTR es:[edi]
  41c385:	or     dl,bh
  41c387:	vpsubsw xmm1,xmm6,xmm2
  41c38b:	or     DWORD PTR [edx+0x404a286b],ebp
  41c391:	ins    DWORD PTR es:[edi],dx
  41c392:	popa   
  41c393:	xor    DWORD PTR [esi-0x49],0x2ba83d7e
  41c39a:	mov    bl,0x6
  41c39c:	push   ss
  41c39d:	shl    esp,cl
  41c39f:	xchg   ebx,eax
  41c3a0:	mov    cl,0x33
  41c3a2:	enter  0xdbb3,0x1f
  41c3a6:	fist   DWORD PTR [edi]
  41c3a8:	out    0x4f,al
  41c3aa:	sbb    DWORD PTR [edi],ebp
  41c3ac:	cmp    BYTE PTR ss:[ebp+0x330b209d],al
  41c3b3:	ret    0xcd00
  41c3b6:	leavew 
  41c3b8:	pusha  
  41c3b9:	(bad)  
  41c3ba:	imul   ecx,edx,0x77
  41c3bd:	stos   DWORD PTR es:[edi],eax
  41c3be:	sbb    eax,0xe975ef7f
  41c3c3:	and    bl,0x8b
  41c3c6:	call   0xe3cba452
  41c3cb:	call   0xe529:0x6a9d2fdc
  41c3d2:	ret    
  41c3d3:	in     eax,0xcc
  41c3d5:	in     eax,0xc6
  41c3d7:	loop   0x41c39d
  41c3d9:	in     eax,0xd2
  41c3db:	shr    DWORD PTR [edi],1
  41c3dd:	rcl    DWORD PTR [ebx+eiz*2+0x78],1
  41c3e1:	call   0xe8b7a55f
  41c3e6:	jl     0x41c3d2
  41c3e8:	inc    esp
  41c3e9:	cli    
  41c3ea:	aaa    
  41c3eb:	das    
  41c3ec:	lock aas 
  41c3ee:	fiadd  WORD PTR [edx+0x32]
  41c3f1:	jns    0x41c418
  41c3f3:	inc    edx
  41c3f4:	sub    cl,BYTE PTR [esi+0x54]
  41c3f7:	cmp    ebp,DWORD PTR [eax+0xe]
  41c3fa:	inc    ebx
  41c3fb:	mov    cl,0x30
  41c3fd:	inc    eax
  41c3fe:	hlt    
  41c3ff:	push   ecx
  41c400:	icebp  
  41c401:	pop    edx
  41c402:	popf   
  41c403:	dec    edi
  41c404:	lods   eax,DWORD PTR ds:[esi]
  41c405:	dec    ecx
  41c406:	dec    esp
  41c407:	or     eax,0x92907949
  41c40c:	mov    esi,?
  41c40e:	xchg   ecx,eax
  41c40f:	clc    
  41c410:	xchg   edx,eax
  41c411:	lock xchg esi,eax
  41c413:	jmp    DWORD PTR [edi+0x556ba5f2]
  41c419:	fwait
  41c41a:	pop    edi
  41c41b:	xchg   esi,eax
  41c41c:	dec    edx
  41c41d:	xchg   ebp,eax
  41c41e:	fcomp  DWORD PTR [edi-0x1b50302b]
  41c424:	repz sti 
  41c426:	std    
  41c427:	icebp  
  41c428:	(bad)  
  41c429:	std    
  41c42a:	inc    BYTE PTR [eax]
  41c42c:	xor    BYTE PTR [edx+ebx*4],cl
  41c42f:	or     BYTE PTR [edx-0x3fe04eec],ah
  41c435:	sub    al,0xd0
  41c437:	sub    ecx,esp
  41c439:	das    
  41c43a:	cli    
  41c43b:	xor    ch,dh
  41c43d:	cmp    al,0xfb
  41c43f:	xor    esi,edx
  41c441:	inc    edx
  41c442:	dec    DWORD PTR [ebp-0x5]
  41c445:	push   ecx
  41c446:	cld    
  41c447:	push   eax
  41c448:	push   edi
  41c449:	call   0x60b225cb
  41c44e:	jnp    0x41c4bb
  41c450:	ja     0x41c4cc
  41c452:	jns    0x41c4cf
  41c454:	jo     0x41c3dc
  41c456:	jl     0x41c3d9
  41c458:	jb     0x41c3df
  41c45a:	js     0x41c3f9
  41c45c:	jnp    0x41c3f2
  41c45e:	js     0x41c3fa
  41c460:	ja     0x41c410
  41c462:	jno    0x41c406
  41c464:	jge    0x41c417
  41c466:	jae    0x41c41d
  41c468:	jl     0x41c41a
  41c46a:	jbe    0x41c43b
  41c46c:	jle    0x41c43c
  41c46e:	dec    ebp
  41c46f:	rol    DWORD PTR [ebx],0x35
  41c472:	fnstenv [edx]
  41c474:	jecxz  0x41c4b3
  41c476:	jecxz  0x41c4b3
  41c478:	jmp    0x41c4aa
  41c47a:	cld    
  41c47b:	add    eax,0x40a23e7e
  41c480:	mov    ecx,0xe4c6e861
  41c485:	(bad)
  41c489:	mov    cl,0x22
  41c48b:	sub    al,BYTE PTR [edi]
  41c48d:	lahf   
  41c48e:	xchg   edi,eax
  41c48f:	lahf   
  41c490:	call   FWORD PTR [ecx+eiz*8+0xdf603c8]
  41c497:	adc    DWORD PTR ds:0xee882030,ecx
  41c49d:	inc    esi
  41c49e:	pop    ebp
  41c49f:	fld    DWORD PTR [edi-0x6b]
  41c4a2:	adc    ebx,DWORD PTR [edi]
  41c4a4:	xlat   BYTE PTR ds:[ebx]
  41c4a5:	cmp    eax,0x97462f52
  41c4aa:	sahf   
  41c4ab:	hlt    
  41c4ac:	(bad)  
  41c4ae:	cmp    al,0xc3
  41c4b0:	fmul   QWORD PTR es:[esi-0x2e]
  41c4b4:	gs lock xor ebp,0x153400a9
  41c4bc:	js     0x41c515
  41c4be:	and    DWORD PTR [esi-0x64c6efaf],edx
  41c4c4:	dec    ecx
  41c4c5:	adc    BYTE PTR [edi-0x68],bl
  41c4c8:	pop    esi
  41c4c9:	nop
  41c4ca:	outs   dx,DWORD PTR ds:[esi]
  41c4cb:	inc    edi
  41c4cc:	push   edi
  41c4cd:	jg     0x41c4f5
  41c4cf:	mov    bl,0x5
  41c4d1:	mov    ch,0x9b
  41c4d3:	out    dx,eax
  41c4d4:	mov    eax,ds:0xb6efa8e9
  41c4d9:	in     eax,0xc2
  41c4db:	out    0xc2,al
  41c4dd:	jecxz  0x41c4af
  41c4df:	loope  0x41c4b8
  41c4e1:	loopne 0x41c4d7
  41c4e3:	jmp    0xda11:0xc0153a07
  41c4ea:	sub    al,0x7d
  41c4ec:	dec    ecx
  41c4ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4ee:	add    al,0xcf
  41c4f0:	pop    edx
  41c4f1:	bound  esi,QWORD PTR [ecx]
  41c4f3:	pop    edx
  41c4f4:	xor    dh,BYTE PTR [ebx]
  41c4f6:	pushf  
  41c4f7:	sub    DWORD PTR [ebx+0x1b46adcd],edx
  41c4fd:	ret    0x374a
  41c500:	repnz retf 
  41c502:	inc    esi
  41c504:	repz fld DWORD PTR [edi]
  41c507:	xor    al,0x1
  41c509:	dec    eax
  41c50a:	add    al,0xa
  41c50c:	icebp  
  41c50d:	into   
  41c50e:	sbb    ecx,DWORD PTR [ecx]
  41c510:	pop    ss
  41c511:	inc    ecx
  41c512:	adc    al,0xa2
  41c514:	cmp    al,0x45
  41c516:	(bad)  
  41c517:	xor    ebx,DWORD PTR [ebp-0x4]
  41c51a:	pop    edi
  41c51b:	not    DWORD PTR [esi-0xd]
  41c51e:	ins    BYTE PTR es:[edi],dx
  41c51f:	cli    
  41c520:	push   0x67f264fa
  41c525:	out    0x47,eax
  41c527:	mov    BYTE PTR [ebp+0x31],dh
  41c52a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c52b:	mov    bh,0x32
  41c52d:	ja     0x41c4e3
  41c52f:	jg     0x41c4e5
  41c531:	jl     0x41c4f2
  41c533:	jge    0x41c4e5
  41c535:	jge    0x41c504
  41c537:	jl     0x41c500
  41c539:	push   esp
  41c53a:	enter  0x3b42,0xd2
  41c53e:	xor    bl,ah
  41c540:	or     BYTE PTR [ebx+0x1f42df3f],ch
  41c546:	aas    
  41c547:	ins    DWORD PTR es:[edi],dx
  41c548:	xchg   ebx,eax
  41c549:	mov    dl,0xa2
  41c54b:	loope  0x41c505
  41c54d:	pop    ds
  41c54e:	cmp    esp,DWORD PTR [ebx]
  41c550:	jmp    0xc647:0xb5f1ea32
  41c557:	inc    esi
  41c558:	ficom  DWORD PTR [ebx-0x12]
  41c55b:	pop    edi
  41c55c:	jmp    DWORD PTR [ebx-0xb]
  41c55f:	arpl   cx,di
  41c561:	jp     0x41c55c
  41c563:	jns    0x41c557
  41c565:	mov    cl,dh
  41c567:	xor    DWORD PTR [ecx],esi
  41c569:	(bad)  
  41c56a:	jmp    0x41c551
  41c56c:	out    dx,al
  41c56d:	xor    eax,0x3b483b34
  41c572:	pop    eax
  41c573:	push   edi
  41c574:	out    dx,eax
  41c575:	xlat   BYTE PTR ds:[ebx]
  41c576:	enter  0xc301,0x3
  41c57a:	ja     0x41c53b
  41c57c:	cwde   
  41c57d:	push   ss
  41c57e:	cld    
  41c57f:	pop    ds
  41c580:	dec    BYTE PTR [ecx-0x7c6cbca]
  41c586:	test   al,0x2c
  41c588:	cmp    dh,BYTE PTR [esi]
  41c58a:	cmp    BYTE PTR [ebx],dh
  41c58c:	fdiv   DWORD PTR [ebx]
  41c58e:	das    
  41c58f:	mov    ch,0x39
  41c591:	mov    edi,0x4e753e42
  41c596:	leave  
  41c597:	aaa    
  41c598:	leave  
  41c599:	cmp    eax,edi
  41c59b:	xor    eax,0x30d431d1
  41c5a0:	fistp  QWORD PTR [ecx]
  41c5a2:	aam    0x27
  41c5a4:	in     eax,0xc0
  41c5a6:	xchg   edx,eax
  41c5a7:	in     al,0x8e
  41c5a9:	sar    esp,0xfb
  41c5ac:	stc    
  41c5ad:	stc    
  41c5ae:	std    
  41c5af:	repnz repnz stc 
  41c5b2:	or     eax,0x1e20737
  41c5b7:	loopne 0x41c5c3
  41c5b9:	out    dx,eax
  41c5ba:	jge    0x41c5b8
  41c5bc:	mov    dh,bl
  41c5be:	xor    ecx,0xf39efe9c
  41c5c4:	lods   al,BYTE PTR ds:[esi]
  41c5c5:	rep stos BYTE PTR es:[edi],al
  41c5c7:	stc    
  41c5c8:	mov    ch,0xf6
  41c5ca:	mov    bl,0xf1
  41c5cc:	ret    
  41c5cd:	repz fdivr st,st(6)
  41c5d0:	jmp    0x3e3c:0xdfefffe
  41c5d7:	or     bh,BYTE PTR [eax]
  41c5d9:	adc    bh,BYTE PTR [edx]
  41c5db:	adc    bh,BYTE PTR [eax]
  41c5dd:	and    DWORD PTR [edx],ebp
  41c5df:	and    eax,0x9f4f9aed
  41c5e4:	dec    ebp
  41c5e5:	cdq    
  41c5e6:	push   0x46ad7995
  41c5eb:	push   ds
  41c5ec:	sbb    DWORD PTR [ecx-0x676e677c],0xac808d97
  41c5f6:	jmp    DWORD PTR [esi-0x45b30e8d]
  41c5fc:	pop    es
  41c5fd:	int    0xcb
  41c5ff:	int    0xca
  41c601:	into   
  41c602:	fild   QWORD PTR [eax]
  41c604:	popa   
  41c605:	out    dx,eax
  41c606:	jmp    0x922f:0xe1fae4eb
  41c60d:	add    ebx,esp
  41c60f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c610:	or     DWORD PTR [edx+eax*1],esi
  41c613:	xchg   ebx,eax
  41c614:	adc    BYTE PTR [edx-0x6cc6d132],ah
  41c61a:	mov    ds:0xc9d2c4a2,eax
  41c61f:	repnz xor BYTE PTR [ebx+0x71a4793d],dl
  41c626:	mov    esi,0x8b20205f
  41c62b:	push   ebp
  41c62c:	mov    edx,0xd280c275
  41c631:	and    eax,0xcce63d3c
  41c636:	loop   0x41c673
  41c638:	loop   0x41c5d0
  41c63a:	sbb    BYTE PTR [edi-0x34a85529],al
  41c640:	or     edi,DWORD PTR [ebp-0x3fd649c5]
  41c646:	inc    eax
  41c647:	(bad)  
  41c648:	fisttp WORD PTR fs:[ecx-0x330e5d1a]
  41c64f:	lock mul DWORD PTR ds:0xed3fe200
  41c656:	je     0x41c63d
  41c658:	xchg   ch,bh
  41c65a:	retf   
  41c65b:	clc    
  41c65c:	and    esp,DWORD PTR [ebx]
  41c65e:	cmp    al,0x85
  41c660:	mov    BYTE PTR [edx+ebp*4+0x64],dh
  41c664:	rcl    BYTE PTR [edx-0xf140982],0xf2
  41c66b:	and    DWORD PTR [eax+0x69],ebx
  41c66e:	jno    0x41c6ca
  41c670:	pop    eax
  41c671:	pop    eax
  41c672:	xchg   DWORD PTR [edi],edi
  41c674:	test   DWORD PTR [edx],edi
  41c676:	mov    eax,ds:0xcc34a730
  41c67b:	das    
  41c67c:	fisttp WORD PTR [eax+0x203b011a]
  41c682:	int3   
  41c683:	sub    ecx,ebx
  41c685:	push   esp
  41c686:	outs   dx,BYTE PTR ds:[esi]
  41c687:	aaa    
  41c688:	and    DWORD PTR [esi-0x73],esi
  41c68b:	sub    al,0xa5
  41c68d:	sahf   
  41c68e:	(bad)  
  41c690:	neg    dh
  41c692:	lock or al,0x8e
  41c695:	adc    al,0x40
  41c697:	xor    al,0x8f
  41c699:	mov    esp,0x3d2c55c5
  41c69e:	sbb    DWORD PTR [edx],edi
  41c6a0:	dec    edx
  41c6a1:	shl    BYTE PTR [eax+0x6c],0x44
  41c6a5:	or     BYTE PTR [esi],al
  41c6a7:	xor    edi,eax
  41c6a9:	sbb    al,0x44
  41c6ab:	cld    
  41c6ac:	bound  esp,QWORD PTR [edx+ecx*8]
  41c6af:	or     al,ch
  41c6b1:	in     al,0x9b
  41c6b3:	bound  ebp,QWORD PTR ds:0xe8ff46d2
  41c6ba:	aad    0x4
  41c6bc:	sub    eax,0x395ef11c
  41c6c1:	push   ebp
  41c6c2:	and    BYTE PTR [ecx+0x4],ah
  41c6c5:	cmc    
  41c6c6:	add    cl,BYTE PTR [ebx-0x3f]
  41c6c9:	jmp    0xed22a9b5
  41c6ce:	adc    dh,BYTE PTR [eax]
  41c6d0:	pop    ss
  41c6d1:	and    cl,BYTE PTR [eax+eax*8]
  41c6d4:	ds (bad) 
  41c6d6:	pop    ebp
  41c6d7:	or     eax,0x8b8b4e62
  41c6dc:	or     ch,0xa0
  41c6df:	(bad)  
  41c6e0:	icebp  
  41c6e1:	vpsrlw xmm7,xmm0,XMMWORD PTR [esi]
  41c6e5:	jge    0x41c71c
  41c6e7:	repnz adc al,BYTE PTR es:[esi]
  41c6eb:	hlt    
  41c6ec:	inc    esi
  41c6ed:	dec    ecx
  41c6ee:	inc    edx
  41c6ef:	imul   ax,WORD PTR [esi-0x6395139b],0x799e
  41c6f8:	mov    cl,0x3e
  41c6fa:	jb     0x41c6eb
  41c6fc:	in     al,0x5f
  41c6fe:	pushf  
  41c6ff:	and    DWORD PTR [eax+0x184d795],0x72ca393a
  41c709:	sub    al,0x17
  41c70b:	cmp    eax,0x46f93bc4
  41c710:	inc    eax
  41c711:	and    cl,BYTE PTR [ebp+0xa]
  41c714:	adc    esi,DWORD PTR [ebp+0x10d4b06c]
  41c71a:	fsub   st,st(3)
  41c71c:	jmp    0x343dae1b
  41c721:	pop    eax
  41c722:	push   ecx
  41c723:	dec    esi
  41c724:	fbstp  TBYTE PTR [esi]
  41c726:	jae    0x41c720
  41c728:	pop    ds
  41c729:	adc    al,0x3f
  41c72b:	test   BYTE PTR [ecx+0x49d7169e],bl
  41c731:	cdq    
  41c732:	pop    ebp
  41c733:	dec    ebp
  41c734:	bound  ecx,QWORD PTR [ecx+0x25ec89d]
  41c73a:	pusha  
  41c73b:	es mov ecx,0x3b3539e9
  41c741:	fwait
  41c742:	cmp    ecx,edi
  41c744:	aas    
  41c745:	push   ss
  41c746:	mov    esp,0xb68dbc62
  41c74b:	stos   DWORD PTR es:[edi],eax
  41c74c:	mov    eax,0xf9e5a8b2
  41c751:	popf   
  41c752:	pop    es
  41c753:	aad    0xda
  41c755:	or     eax,0xcc2e360d
  41c75a:	mov    ecx,0x42209d7
  41c75f:	rcr    DWORD PTR [edx-0x76],cl
  41c762:	fs dec esp
  41c764:	mov    bh,0x73
  41c766:	in     eax,0x99
  41c768:	(bad)  
  41c769:	test   eax,0xb0f4aeff
  41c76e:	repz aam 0x31
  41c771:	mov    DWORD PTR [edx-0x1b],ebx
  41c774:	and    ch,BYTE PTR [ecx+0xd]
  41c777:	cwde   
  41c778:	lock clc 
  41c77a:	dec    ebx
  41c77b:	add    eax,0xc58e83c3
  41c780:	mov    BYTE PTR [esi*1-0x166a6b59],0xa8
  41c788:	or     al,0x83
  41c78a:	pop    edx
  41c78b:	xor    eax,0xd689c378
  41c790:	fbld   TBYTE PTR [edx-0x37]
  41c793:	test   esi,edi
  41c795:	scas   eax,DWORD PTR es:[edi]
  41c796:	inc    esp
  41c797:	cmp    BYTE PTR [eax-0x39],ch
  41c79a:	dec    ebx
  41c79b:	jns    0x41c720
  41c79d:	sbb    bh,BYTE PTR [ebp+eax*2+0x1f1227b9]
  41c7a4:	cmp    eax,0xba73cf54
  41c7a9:	push   eax
  41c7aa:	and    dl,BYTE PTR [edx-0x667ba744]
  41c7b0:	and    eax,ebx
  41c7b2:	sbb    DWORD PTR [edx+0x2a],0x36
  41c7b6:	inc    esp
  41c7b7:	aaa    
  41c7b8:	jge    0x41c834
  41c7ba:	in     eax,0x8f
  41c7bc:	clc    
  41c7bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7be:	cli    
  41c7bf:	mov    ebx,0x999beffc
  41c7c4:	adc    BYTE PTR [ecx+eax*8],dl
  41c7c7:	pop    esi
  41c7c8:	or     al,0x7b
  41c7ca:	dec    esp
  41c7cb:	ja     0x41c834
  41c7cd:	dec    eax
  41c7ce:	jp     0x41c7d8
  41c7d0:	pushf  
  41c7d1:	retf   0x159e
  41c7d4:	sbb    BYTE PTR [eax],bh
  41c7d6:	and    al,bh
  41c7d8:	xor    BYTE PTR [edx+0xd],dl
  41c7db:	adc    eax,0xba2a8c56
  41c7e0:	push   gs
  41c7e2:	dec    ebp
  41c7e3:	mul    cl
  41c7e5:	test   DWORD PTR [ebp-0x6465e911],edx
  41c7eb:	mov    ebp,0xd3c2d01d
  41c7f0:	loope  0x41c7ee
  41c7f2:	cvtps2pd xmm1,QWORD PTR [ebx]
  41c7f5:	adc    DWORD PTR [esi-0x6a6161e4],eax
  41c7fb:	mov    ch,0x9
  41c7fd:	(bad)  
  41c7fe:	call   0x1bf:0xc7ea1abf
  41c805:	push   ebp
  41c806:	xchg   DWORD PTR [esi-0x55],eax
  41c809:	outs   dx,DWORD PTR cs:[esi]
  41c80b:	int    0xd4
  41c80d:	aam    0x2d
  41c80f:	in     eax,dx
  41c810:	jecxz  0x41c806
  41c812:	frstor [ecx-0x6de1c3f5]
  41c818:	add    BYTE PTR [eax],bh
  41c81a:	sub    esp,edi
  41c81c:	or     DWORD PTR [ebp-0x69],0x9b521f8e
  41c823:	ja     0x41c7f1
  41c825:	ds xchg ecx,eax
  41c827:	sub    DWORD PTR [esi+0x7fdc77c0],edi
  41c82d:	icebp  
  41c82e:	pop    ebx
  41c82f:	mov    dl,0x41
  41c831:	jbe    0x41c81e
  41c833:	jmp    0x391:0x1df9fcee
  41c83a:	and    BYTE PTR [esi+eax*2+0x6d],bl
  41c83e:	push   0x221fb08c
  41c843:	mov    ebx,0x86f69f4b
  41c848:	add    esi,DWORD PTR [ebx]
  41c84a:	and    BYTE PTR cs:[edx+0x49],cl
  41c84e:	data16 fs ja 0x41c7d3
  41c852:	xchg   ebp,eax
  41c853:	mov    ds:0xeacbcea3,al
  41c858:	loopne 0x41c848
  41c85a:	add    eax,0x36de8d3a
  41c85f:	xchg   BYTE PTR [ecx-0x7a],dl
  41c862:	stc    
  41c863:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c864:	cli    
  41c865:	mov    cl,0xb2
  41c867:	mov    edi,0x23acd35d
  41c86c:	call   0x484a5f13
  41c871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c872:	sbb    ah,BYTE PTR [ecx-0x6821c559]
  41c878:	dec    esi
  41c879:	dec    ecx
  41c87a:	popa   
  41c87b:	ins    BYTE PTR es:[edi],dx
  41c87c:	jbe    0x41c812
  41c87e:	jno    0x41c83f
  41c880:	xchg   ebp,eax
  41c881:	pop    esi
  41c882:	popf   
  41c883:	mov    ch,BYTE PTR [esi+ebp*4]
  41c886:	mov    WORD PTR [edx-0x2f76b634],ds
  41c88c:	scas   eax,DWORD PTR es:[edi]
  41c88d:	mov    ?,eax
  41c88f:	leave  
  41c890:	xlat   BYTE PTR ds:[ebx]
  41c891:	cmp    al,0xf
  41c893:	retf   0x3412
  41c896:	mov    ebp,0x49089c4c
  41c89b:	ins    BYTE PTR es:[edi],dx
  41c89c:	call   0xf07a:0xd1770d94
  41c8a3:	sbb    eax,0x90273218
  41c8a8:	and    ebx,DWORD PTR [esi]
  41c8aa:	cmp    cl,BYTE PTR [ebx+0xd]
  41c8ad:	dec    ecx
  41c8ae:	inc    esi
  41c8af:	inc    edi
  41c8b0:	mov    ebx,DWORD PTR [eax+0x22]
  41c8b3:	stos   BYTE PTR es:[edi],al
  41c8b4:	outs   dx,BYTE PTR ds:[esi]
  41c8b5:	xchg   esp,eax
  41c8b6:	adc    DWORD PTR [ecx-0x9],edi
  41c8b9:	popf   
  41c8ba:	hlt    
  41c8bb:	xchg   ecx,eax
  41c8bc:	sti    
  41c8bd:	call   0xe151d118
  41c8c2:	cwde   
  41c8c3:	cmc    
  41c8c4:	xchg   BYTE PTR [ecx+0x1884faf0],al
  41c8ca:	gs dec edi
  41c8cc:	shl    DWORD PTR [ecx],1
  41c8ce:	xor    ch,BYTE PTR [edi]
  41c8d0:	pop    esi
  41c8d1:	push   esp
  41c8d2:	adc    ecx,DWORD PTR [ebp-0x3e]
  41c8d5:	test   BYTE PTR [edx+edx*8-0x22],cl
  41c8d9:	out    0xed,eax
  41c8db:	cmc    
  41c8dc:	in     eax,0xf4
  41c8de:	idiv   ecx
  41c8e0:	jnp    0x41c8bc
  41c8e2:	dec    esp
  41c8e3:	adc    eax,0x95753167
  41c8e8:	sbb    BYTE PTR [ecx],0x8e
  41c8eb:	nop
  41c8ec:	mov    edi,0xdc90c21f
  41c8f1:	into   
  41c8f2:	add    BYTE PTR [esp+edx*2],al
  41c8f5:	add    DWORD PTR [ebx-0x39],ecx
  41c8f8:	add    eax,0xb84cd6b4
  41c8fd:	fcomi  st,st(7)
  41c8ff:	add    eax,0x41a4f33
  41c904:	mov    eax,ds:0xc6904d1c
  41c909:	mov    BYTE PTR [ebx],bl
  41c90b:	cmp    ecx,DWORD PTR [ecx+0x4b]
  41c90e:	cmp    bl,dl
  41c910:	fucomi st,st(4)
  41c912:	cmp    ebx,DWORD PTR [eax+eax*8+0x7a]
  41c916:	(bad)  
  41c917:	rcl    bl,0xfd
  41c91a:	in     al,dx
  41c91b:	pop    ecx
  41c91c:	xor    edi,DWORD PTR [ebx-0x47]
  41c91f:	je     0x41c8e6
  41c921:	push   0xffffffee
  41c923:	les    esi,FWORD PTR [ecx]
  41c925:	add    DWORD PTR [edi+0x167b80a5],ebp
  41c92b:	jne    0x41c96b
  41c92d:	push   ds
  41c92e:	push   ds
  41c92f:	xor    DWORD PTR [ebx],ebp
  41c931:	sahf   
  41c932:	dec    eax
  41c933:	adc    DWORD PTR [eax+eax*2+0x642126ba],eax
  41c93a:	sti    
  41c93b:	xchg   ebp,eax
  41c93c:	dec    edx
  41c93d:	(bad)
  41c941:	lea    esi,[ecx-0x6de8057c]
  41c947:	pop    ss
  41c948:	stos   DWORD PTR es:[edi],eax
  41c949:	cmp    al,0xb4
  41c94b:	dec    ecx
  41c94c:	int    0x73
  41c94e:	shl    BYTE PTR [ebp-0x1b],1
  41c951:	xor    dh,0xb7
  41c954:	sti    
  41c955:	push   esp
  41c956:	les    eax,FWORD PTR [edi-0x68]
  41c959:	sub    al,0x9
  41c95b:	and    esi,0xd
  41c95e:	sbb    DWORD PTR [edx+ebx*1],esi
  41c961:	fnstsw WORD PTR [edi-0x4e]
  41c964:	dec    edi
  41c965:	inc    ebx
  41c966:	pop    edx
  41c967:	sbb    DWORD PTR [esp+edx*8-0x12],0xfffffff9
  41c96c:	cli    
  41c96d:	add    eax,0x55b60a35
  41c972:	sbb    DWORD PTR [ecx],edi
  41c974:	cdq    
  41c975:	inc    esp
  41c976:	mov    es,WORD PTR [ebx-0x80]
  41c979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c97a:	push   cs
  41c97b:	cmp    BYTE PTR [eax],ah
  41c97d:	call   0xe49ab6ce
  41c982:	(bad)
  41c985:	lock hlt 
  41c987:	icebp  
  41c988:	sub    ebx,DWORD PTR [ebx+0x4c651c99]
  41c98e:	pop    eax
  41c98f:	jb     0x41c9b7
  41c991:	push   0xffffffb0
  41c993:	mov    esi,0xa6a3be70
  41c998:	div    ah
  41c99a:	popa   
  41c99b:	and    DWORD PTR [esi],esi
  41c99d:	and    eax,0xc9c4a78
  41c9a2:	and    DWORD PTR [edx+edx*4-0x770a6d1d],esi
  41c9a9:	add    eax,0x89b78039
  41c9ae:	aaa    
  41c9af:	cli    
  41c9b0:	es or  al,0x4a
  41c9b3:	outs   dx,DWORD PTR ds:[esi]
  41c9b4:	gs addr16 test eax,0xa947b1a8
  41c9bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9bc:	outs   dx,BYTE PTR ds:[esi]
  41c9bd:	int3   
  41c9be:	add    eax,0xce6c3f3a
  41c9c3:	adc    esi,0xffffff92
  41c9c6:	xlat   BYTE PTR ds:[ebx]
  41c9c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9c8:	jge    0x41ca47
  41c9ca:	xor    al,0x1c
  41c9cc:	cmp    DWORD PTR [ecx],esp
  41c9ce:	das    
  41c9cf:	sub    BYTE PTR [edi-0x5f],cl
  41c9d2:	popa   
  41c9d3:	cmp    eax,0xe874267e
  41c9d8:	pusha  
  41c9d9:	test   eax,0x5a35a2fe
  41c9de:	mov    dl,0xe
  41c9e0:	test   bl,al
  41c9e2:	(bad)  
  41c9e3:	out    dx,eax
  41c9e4:	add    BYTE PTR [esi],cl
  41c9e6:	leave  
  41c9e7:	adc    DWORD PTR [edi],edx
  41c9e9:	aad    0x29
  41c9eb:	add    eax,0xd9cc0861
  41c9f0:	enter  0xefd2,0xdc
  41c9f4:	cmp    al,0xfd
  41c9f6:	mov    ds:0x2947e902,eax
  41c9fb:	shr    DWORD PTR [ecx+ebp*1],cl
  41c9fe:	add    BYTE PTR [ebp+0x35],ah
  41ca01:	enter  0x3fc3,0xfa
  41ca05:	dec    esi
  41ca06:	cmp    al,0xc1
  41ca08:	ds push ebx
  41ca0a:	cmp    DWORD PTR [eax+0x2d],esi
  41ca0d:	ja     0x41ca12
  41ca0f:	enter  0x4a95,0xb3
  41ca13:	(bad)  
  41ca14:	mov    ah,0xce
  41ca16:	(bad)  
  41ca17:	retf   
  41ca18:	(bad)  
  41ca19:	fdiv   st,st(0)
  41ca1b:	shl    al,cl
  41ca1d:	in     al,0xf9
  41ca1f:	std    
  41ca20:	imul   ecx,DWORD PTR [edi],0xe
  41ca23:	inc    DWORD PTR [esi]
  41ca25:	and    al,0x2e
  41ca27:	pusha  
  41ca28:	and    al,0x88
  41ca2a:	add    eax,DWORD PTR [ebp-0x5f]
  41ca2d:	sti    
  41ca2e:	lock pop ebx
  41ca30:	test   dh,0xdc
  41ca33:	dec    edx
  41ca34:	fwait
  41ca35:	gs push eax
  41ca37:	xchg   edx,eax
  41ca38:	push   ds
  41ca39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca3a:	dec    esi
  41ca3b:	sbb    ch,bl
  41ca3d:	mov    dl,ah
  41ca3f:	into   
  41ca40:	dec    bh
  41ca42:	repnz cmp edi,0x36
  41ca46:	sbb    BYTE PTR [ebx+0x4753a542],bl
  41ca4c:	jp     0xa8b7d877
  41ca52:	xchg   ebx,eax
  41ca53:	mov    cl,0x91
  41ca55:	mov    bl,0x4a
  41ca57:	inc    esi
  41ca58:	jmp    0x41ca23
  41ca5a:	sti    
  41ca5b:	leave  
  41ca5c:	adc    eax,0x7f921c32
  41ca61:	mov    ds:0xd78abe75,al
  41ca66:	dec    esp
  41ca67:	jp     0x41ca06
  41ca69:	inc    esi
  41ca6a:	rol    BYTE PTR [ecx],0xf
  41ca6d:	add    BYTE PTR [edx+0x3a],ah
  41ca70:	cs js  0x41ca60
  41ca73:	xor    ebx,DWORD PTR [edx+0x2e]
  41ca76:	mov    eax,ds:0x2ab3b7c1
  41ca7b:	fadd   DWORD PTR [ecx+ebx*4+0x20]
  41ca7f:	sub    DWORD PTR [ecx+0x30],ebp
  41ca82:	dec    edx
  41ca83:	ror    BYTE PTR [ecx-0x2c],cl
  41ca86:	jl     0x41ca6b
  41ca88:	ja     0x41ca6e
  41ca8a:	mov    bh,0xff
  41ca8c:	int3   
  41ca8d:	icebp  
  41ca8e:	fisubr WORD PTR [edx-0xa]
  41ca91:	or     al,BYTE PTR [esi]
  41ca93:	cmp    ecx,DWORD PTR [ebx+ecx*8]
  41ca96:	rcr    BYTE PTR [esi+eiz*1+0x8],0xf
  41ca9b:	jne    0x41ca82
  41ca9d:	jmp    DWORD PTR [eax+0x6a]
  41caa0:	out    0x29,eax
  41caa2:	sti    
  41caa3:	add    eax,DWORD PTR [edx]
  41caa5:	xor    DWORD PTR [esi],ecx
  41caa7:	inc    edx
  41caa8:	and    al,0x8d
  41caaa:	xor    bl,BYTE PTR [edi-0x29]
  41caad:	inc    edx
  41caae:	or     BYTE PTR ds:0xc6c19158,0x53
  41cab5:	fst    QWORD PTR [eax]
  41cab7:	add    BYTE PTR [edx],bh
  41cab9:	sbb    eax,0x3e81299a
  41cabe:	pop    ebx
  41cabf:	int    0x56
  41cac1:	ja     0x41cae2
  41cac3:	xchg   edi,eax
  41cac4:	xchg   BYTE PTR [eax-0x49],dh
  41cac7:	jnp    0x41ca79
  41cac9:	inc    ebx
  41caca:	in     eax,0x0
  41cacc:	or     BYTE PTR [edi],ah
  41cace:	cmp    al,0x35
  41cad0:	xchg   esi,eax
  41cad1:	inc    ebp
  41cad2:	mov    ds:0xca7bb050,al
  41cad7:	jnp    0x41caaf
  41cad9:	(bad)  
  41cada:	jmp    0x9e32:0xe581ccc9
  41cae1:	ss js  0x41cafd
  41cae4:	inc    esp
  41cae5:	pop    ebp
  41cae6:	jns    0x41cb09
  41cae8:	jne    0x41cb39
  41caea:	aas    
  41caeb:	mov    eax,ds:0xe4f7a7fe
  41caf0:	jo     0x41cae3
  41caf2:	retf   
  41caf3:	push   ebx
  41caf4:	add    BYTE PTR [eax],al
  41caf6:	fadd   QWORD PTR [edi]
  41caf8:	pop    ecx
  41caf9:	or     edx,esi
  41cafb:	jbe    0x41cb70
  41cafd:	cmp    al,BYTE PTR [ebx+0x3d]
  41cb00:	ins    DWORD PTR es:[edi],dx
  41cb01:	jne    0x41cb5b
  41cb03:	test   ah,ch
  41cb05:	cmp    edx,DWORD PTR [ebx-0x37de32c2]
  41cb0b:	dec    ebx
  41cb0c:	les    ebx,FWORD PTR ds:0x560db7c
  41cb12:	push   eax
  41cb13:	scas   eax,DWORD PTR es:[edi]
  41cb14:	xor    esp,DWORD PTR [ebp-0x43117a63]
  41cb1a:	(bad)  
  41cb1c:	clc    
  41cb1d:	cli    
  41cb1e:	push   ds
  41cb1f:	js     0x41cb0e
  41cb21:	adc    DWORD PTR [edx+0xc],esi
  41cb24:	inc    ebp
  41cb25:	ds imul edi,ecx,0x6e
  41cb29:	mov    BYTE PTR [esi-0x6c60e6a4],bh
  41cb2f:	mov    ds:0xc89cb312,al
  41cb34:	xchg   edx,eax
  41cb35:	xlat   BYTE PTR ds:[ebx]
  41cb36:	xchg   BYTE PTR [eax+0x728851e9],bl
  41cb3c:	(bad)  
  41cb3d:	adc    al,0xa
  41cb3f:	cmp    bl,BYTE PTR [ecx]
  41cb41:	mov    edi,edi
  41cb43:	aas    
  41cb44:	lds    esi,FWORD PTR [ebx]
  41cb46:	push   ds
  41cb47:	in     eax,0xdf
  41cb49:	and    esp,ebx
  41cb4b:	lock shl DWORD PTR [eax],0xcf
  41cb4f:	xor    al,0x57
  41cb51:	xor    al,0xd9
  41cb53:	cmp    DWORD PTR [ebx+0x3a],ebp
  41cb56:	jl     0x41cb79
  41cb58:	jl     0x41cb67
  41cb5a:	rol    BYTE PTR [ecx-0xe5c3416],0xad
  41cb61:	mov    eax,0x4d3590bc
  41cb66:	int3   
  41cb67:	mov    ds:0x17ebdb28,al
  41cb6c:	(bad)  
  41cb6d:	cli    
  41cb6e:	(bad)  
  41cb6f:	sub    BYTE PTR ds:0x9f741f9d,cl
  41cb75:	dec    edx
  41cb76:	and    al,0xf7
  41cb78:	sub    al,0x3a
  41cb7a:	xchg   esi,ecx
  41cb7c:	dec    ecx
  41cb7d:	loop   0x41cbd4
  41cb7f:	out    dx,eax
  41cb80:	in     ax,0x69
  41cb83:	loope  0x41cc02
  41cb85:	inc    esi
  41cb86:	les    ecx,FWORD PTR [ecx-0x623e7b3e]
  41cb8c:	(bad)  
  41cb8d:	scas   eax,DWORD PTR es:[edi]
  41cb8e:	retf   
  41cb8f:	mov    eax,0x53d3d6c2
  41cb94:	(bad)  
  41cb95:	cld    
  41cb96:	sub    ecx,DWORD PTR [ecx]
  41cb98:	pop    ecx
  41cb99:	sub    eax,0x99d9494f
  41cb9e:	js     0x41cc18
  41cba0:	jg     0x41cb61
  41cba2:	jae    0x41cb58
  41cba4:	jae    0x41cb81
  41cba6:	pop    esi
  41cba7:	rcl    ah,cl
  41cba9:	and    DWORD PTR [edi+0x4d],ebp
  41cbac:	mov    esp,0x9bb8a10b
  41cbb1:	push   ebx
  41cbb2:	mov    al,ds:0x461c5fda
  41cbb7:	xchg   BYTE PTR [ebx-0x33084607],cl
  41cbbd:	jg     0x41cbe9
  41cbbf:	xchg   ebp,eax
  41cbc0:	xor    DWORD PTR [ebp+0x5c],edi
  41cbc3:	push   edi
  41cbc4:	outs   dx,BYTE PTR ds:[esi]
  41cbc5:	jns    0x41cbe9
  41cbc7:	retf   
  41cbc8:	dec    ebp
  41cbc9:	scas   al,BYTE PTR es:[edi]
  41cbca:	or     esi,DWORD PTR [eax]
  41cbcc:	jp     0x41cbdd
  41cbce:	inc    ecx
  41cbcf:	jo     0x41cb5d
  41cbd1:	lahf   
  41cbd2:	cmp    DWORD PTR [edi],0xe0dddaae
  41cbd8:	vmovsldup xmm2,XMMWORD PTR [esi+0x5900a611]
  41cbe0:	xor    al,BYTE PTR ds:0xbf877889
  41cbe6:	retf   
  41cbe7:	vpsubusb xmm1,xmm7,xmm4
  41cbeb:	jmp    0x41cc17
  41cbed:	dec    ebx
  41cbee:	enter  0x51ec,0xd9
  41cbf2:	cmp    bh,BYTE PTR [ecx]
  41cbf4:	in     eax,0x36
  41cbf6:	loopne 0x41cc03
  41cbf8:	sbb    al,0x3b
  41cbfa:	adc    cl,BYTE PTR [ecx+0x4e]
  41cbfd:	xchg   BYTE PTR [ecx-0x38],cl
  41cc00:	mov    eax,ds:0xa052c68
  41cc05:	scas   al,BYTE PTR es:[edi]
  41cc06:	(bad)  [ebx+0x4f]
  41cc09:	sti    
  41cc0a:	mov    dh,0x35
  41cc0c:	sub    BYTE PTR [edi],ch
  41cc0e:	dec    edx
  41cc0f:	add    DWORD PTR [ebx+0x28dbb760],edi
  41cc15:	mov    ecx,0x8dd7938e
  41cc1a:	or     al,0x37
  41cc1c:	pop    ebp
  41cc1d:	ss gs push edi
  41cc20:	in     al,0x98
  41cc22:	jg     0x41cc73
  41cc24:	sbb    bl,cl
  41cc26:	aad    0x54
  41cc28:	lea    ecx,[ecx]
  41cc2a:	lahf   
  41cc2b:	add    ch,BYTE PTR [ebp+0x57]
  41cc2e:	dec    esp
  41cc2f:	(bad)  
  41cc30:	jle    0x41cc3e
  41cc32:	mov    BYTE PTR [edi-0x4c],cl
  41cc35:	mov    edi,DWORD PTR [edi+0xdcffdc0]
  41cc3b:	in     al,0x90
  41cc3d:	sub    eax,0x62790b20
  41cc42:	or     cl,BYTE PTR [esi+edi*2-0x1a487b90]
  41cc49:	push   ds
  41cc4a:	out    0x32,al
  41cc4c:	jmp    edx
  41cc4e:	hlt    
  41cc4f:	in     eax,dx
  41cc50:	sbb    ebx,DWORD PTR [edx+eax*4+0x22f04607]
  41cc57:	and    cl,cl
  41cc59:	(bad)  
  41cc5a:	nop
  41cc5b:	loopne 0x41cc9a
  41cc5d:	popf   
  41cc5e:	ds inc ecx
  41cc60:	lahf   
  41cc61:	dec    ecx
  41cc62:	adc    eax,0x82689266
  41cc67:	add    eax,0x34b96321
  41cc6c:	aaa    
  41cc6d:	mov    dh,0x5a
  41cc6f:	xchg   edx,eax
  41cc70:	jecxz  0x41cc82
  41cc72:	mov    DWORD PTR [edx+ebp*4],edx
  41cc75:	xchg   ebx,eax
  41cc76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc77:	mov    DWORD PTR [edx-0x1e58c66e],esi
  41cc7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc7e:	loopne 0x41cc4e
  41cc80:	xchg   esp,eax
  41cc81:	jmp    0xacdcc1a0
  41cc86:	(bad)  
  41cc87:	ins    DWORD PTR es:[edi],dx
  41cc88:	retf   
  41cc89:	jle    0x41ccea
  41cc8b:	sbb    ebp,DWORD PTR [ecx]
  41cc8d:	xor    eax,0x6904a338
  41cc92:	mov    edi,0xceca1cf0
  41cc97:	inc    edi
  41cc98:	hlt    
  41cc99:	repz test DWORD PTR [ebx+0x16f65a57],ebx
  41cca0:	mov    dh,cl
  41cca2:	ret    
  41cca3:	out    dx,eax
  41cca4:	(bad)  
  41cca6:	lods   eax,DWORD PTR ds:[esi]
  41cca7:	shl    BYTE PTR [esi+0x2a],0x8a
  41ccab:	cld    
  41ccac:	cwde   
  41ccad:	lahf   
  41ccae:	mul    BYTE PTR [ecx-0x3b367c61]
  41ccb4:	lock inc edi
  41ccb6:	cmp    ah,ch
  41ccb8:	ss out 0x3d,eax
  41ccbb:	icebp  
  41ccbc:	add    DWORD PTR ds:0x1c4b0835,eax
  41ccc2:	cmp    DWORD PTR [esi],0x4c
  41ccc5:	and    DWORD PTR [esi+0x22],ecx
  41ccc8:	adc    DWORD PTR [edi-0x689a4df7],edi
  41ccce:	arpl   WORD PTR [ebp-0x47054908],ax
  41ccd4:	lock sar esp,0xdc
  41ccd8:	fs jne 0x41cd05
  41ccdb:	loopne 0x41cc65
  41ccdd:	jle    0x41ccb9
  41ccdf:	sbb    ebx,DWORD PTR [ebx]
  41cce1:	sti    
  41cce2:	scas   eax,DWORD PTR es:[edi]
  41cce3:	and    esi,ecx
  41cce5:	xor    esi,DWORD PTR [eax+0x8501162]
  41cceb:	int3   
  41ccec:	xor    ch,BYTE PTR [edi-0x3eb442d5]
  41ccf2:	data16 fisttp DWORD PTR [ebx-0x381b5d15]
  41ccf9:	cmc    
  41ccfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccfb:	(bad)  [eax]
  41ccfd:	cmp    al,0x34
  41ccff:	sbb    ah,BYTE PTR [eax]
  41cd01:	xor    DWORD PTR [ebx],ecx
  41cd03:	and    al,0x65
  41cd05:	xchg   BYTE PTR [eax+0xc9a90a2],cl
  41cd0b:	sbb    DWORD PTR [esi],edi
  41cd0d:	cs loopne 0x41cca0
  41cd10:	or     ebx,DWORD PTR [eax+0x48]
  41cd13:	jp     0x41cc97
  41cd15:	dec    ecx
  41cd16:	repz js 0x41ccb9
  41cd19:	sub    eax,esp
  41cd1b:	inc    esp
  41cd1c:	rcr    DWORD PTR [ecx],cl
  41cd1e:	bound  edi,QWORD PTR [ebx+eax*1]
  41cd21:	inc    esp
  41cd22:	inc    esi
  41cd23:	fs xchg edi,eax
  41cd25:	(bad)  
  41cd26:	cdq    
  41cd27:	ror    edi,cl
  41cd29:	pop    esi
  41cd2a:	dec    edi
  41cd2b:	adc    al,0x6d
  41cd2d:	ror    BYTE PTR [edi-0x73],0xa1
  41cd31:	fstp   DWORD PTR [eax-0x74]
  41cd34:	dec    edi
  41cd35:	jl     0x9bf05844
  41cd3b:	push   eax
  41cd3c:	or     DWORD PTR [ebx+ecx*8+0x7b],esi
  41cd40:	loopne 0x41cdbf
  41cd42:	cld    
  41cd43:	sbb    esi,DWORD PTR [esi]
  41cd45:	ss inc esp
  41cd47:	div    DWORD PTR ds:0x828f267b
  41cd4d:	push   cs
  41cd4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd4f:	in     al,dx
  41cd50:	inc    ebx
  41cd51:	mov    ecx,0xd6bee6f1
  41cd56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd57:	add    eax,0xd27bc66a
  41cd5c:	jle    0x41cd32
  41cd5e:	cwde   
  41cd5f:	jecxz  0x41cd78
  41cd61:	je     0x41cdd2
  41cd63:	and    eax,0x6a4d6142
  41cd68:	outs   dx,DWORD PTR ss:[esi]
  41cd6a:	sub    BYTE PTR [esi+0x3fd72f63],ah
  41cd70:	dec    ebx
  41cd71:	pop    esp
  41cd72:	mov    ecx,0x18c9d41
  41cd77:	jp     0x41cde0
  41cd79:	lahf   
  41cd7a:	and    BYTE PTR [edx+0x83ef5a3],0x3a
  41cd81:	pop    esp
  41cd82:	pop    ss
  41cd83:	enter  0x44d,0x61
  41cd87:	popa   
  41cd88:	fmulp  st(5),st
  41cd8a:	je     0x41cd1f
  41cd8c:	dec    esp
  41cd8d:	mov    ds:0x3b024e00,eax
  41cd92:	sub    DWORD PTR [ebp-0x56bc50c3],ebx
  41cd98:	loopne 0x41cdff
  41cd9a:	in     eax,0xa5
  41cd9c:	cs jl  0x41cd88
  41cd9f:	jae    0x41cd2b
  41cda1:	jge    0x41cd25
  41cda3:	inc    edx
  41cda4:	scas   eax,DWORD PTR es:[edi]
  41cda5:	mov    BYTE PTR [ecx+ecx*8+0x5f],dh
  41cda9:	pop    ebp
  41cdaa:	or     BYTE PTR [ebx],cl
  41cdac:	cmp    DWORD PTR [ebp+0x34],eax
  41cdaf:	inc    edi
  41cdb0:	scas   eax,DWORD PTR es:[edi]
  41cdb1:	sbb    DWORD PTR [edx+eiz*2],edi
  41cdb4:	xor    eax,0x5f33578
  41cdb9:	(bad)  
  41cdbb:	enter  0x5d4e,0xf5
  41cdbf:	cmp    esp,DWORD PTR [esi+0x30]
  41cdc2:	or     al,0x33
  41cdc4:	cmp    esi,DWORD PTR [ebx]
  41cdc6:	xor    DWORD PTR [ecx+0x6b1acc91],edx
  41cdcc:	xor    DWORD PTR [esi-0x6],edi
  41cdcf:	inc    ecx
  41cdd0:	inc    edx
  41cdd1:	fistp  DWORD PTR [ecx+0xf3a6f80]
  41cdd7:	hlt    
  41cdd8:	loopne 0x41ce57
  41cdda:	sbb    eax,0x3337042c
  41cddf:	sbb    eax,0x27ae461d
  41cde4:	or     ebp,DWORD PTR [eax]
  41cde6:	inc    edi
  41cde7:	xor    DWORD PTR [eax+0x6d],eax
  41cdea:	inc    esp
  41cdeb:	cmp    bh,BYTE PTR [edx-0x45]
  41cdee:	icebp  
  41cdef:	sub    al,0x3a
  41cdf1:	xor    ebp,DWORD PTR [ebp+0x2b]
  41cdf4:	jbe    0x41ce3a
  41cdf6:	cmp    eax,0x3ae345a7
  41cdfb:	es int3 
  41cdfd:	jb     0x41ce22
  41cdff:	or     ah,BYTE PTR [ecx-0x63af231]
  41ce05:	or     eax,0x70036a48
  41ce0a:	xbegin 0x3c9be5d3
  41ce10:	ins    DWORD PTR es:[edi],dx
  41ce11:	out    0x2a,eax
  41ce13:	mov    bl,0xec
  41ce15:	(bad)  
  41ce16:	stc    
  41ce17:	add    eax,0xcf2f3b2d
  41ce1c:	xchg   ebx,eax
  41ce1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce1e:	xchg   edx,eax
  41ce1f:	icebp  
  41ce20:	push   cs
  41ce21:	mov    eax,ds:0xcb2eb335
  41ce26:	inc    eax
  41ce27:	push   es
  41ce28:	cmp    edi,DWORD PTR [edx]
  41ce2a:	retf   0xd278
  41ce2d:	stos   BYTE PTR es:[edi],al
  41ce2e:	push   edx
  41ce2f:	mov    edi,0x904a3a2f
  41ce34:	xor    al,0xa
  41ce36:	or     bh,BYTE PTR [edx]
  41ce38:	das    
  41ce39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce3a:	(bad)  
  41ce3b:	nop
  41ce3c:	fwait
  41ce3d:	add    DWORD PTR [ebp-0x26ec3805],esp
  41ce43:	pop    edx
  41ce44:	lods   al,BYTE PTR ds:[esi]
  41ce45:	push   edi
  41ce46:	(bad)  
  41ce48:	scas   al,BYTE PTR es:[edi]
  41ce49:	jne    0x41ce25
  41ce4b:	jle    0x41ce2b
  41ce4d:	dec    ebp
  41ce4e:	loopne 0x41cecb
  41ce50:	adc    eax,0x6a8f3332
  41ce55:	call   0x3a3:0x929ed0bb
  41ce5c:	fldcw  WORD PTR [eax]
  41ce5e:	test   DWORD PTR [esi],eax
  41ce60:	dec    eax
  41ce61:	sub    BYTE PTR [esi+0x41],bh
  41ce64:	shr    DWORD PTR [ecx+0x75],0xb6
  41ce68:	xchg   ecx,eax
  41ce69:	and    BYTE PTR [ebp-0x183370bd],al
  41ce6f:	pop    ds
  41ce70:	ds jns 0x41cecd
  41ce73:	je     0x41cedf
  41ce75:	jg     0x41ceea
  41ce77:	js     0x41ce1a
  41ce79:	jg     0x41ce5f
  41ce7b:	adc    eax,0xa353351b
  41ce80:	push   0x1b362e03
  41ce85:	in     al,dx
  41ce86:	sbb    BYTE PTR [ecx+esi*1+0x56],0x9a
  41ce8b:	imul   BYTE PTR [eax+0x5f9cc5fb]
  41ce91:	sbb    ebx,esi
  41ce93:	lock add DWORD PTR [esi],0xffffff9a
  41ce97:	add    ebx,esp
  41ce99:	push   ebp
  41ce9a:	and    WORD PTR gs:[edi-0x56],0x66
  41cea0:	(bad)  
  41cea1:	aam    0xf0
  41cea3:	jo     0x41cea8
  41cea5:	and    DWORD PTR [esi],esi
  41cea7:	cmp    eax,0xe253522c
  41ceac:	adc    al,0x6b
  41ceae:	cld    
  41ceaf:	xchg   bl,bh
  41ceb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ceb2:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ceb4:	mov    ebp,0x80f453e0
  41ceb9:	push   edx
  41ceba:	adc    eax,0x2a144353
  41cebf:	out    0x56,eax
  41cec1:	arpl   cx,di
  41cec3:	jle    0x41ce55
  41cec5:	or     dl,BYTE PTR [esi-0x2d]
  41cec8:	out    0xd,eax
  41ceca:	mov    dl,0xec
  41cecc:	xor    edi,DWORD PTR [esi+0x127e1ce5]
  41ced2:	test   eax,0xbae135e4
  41ced7:	sub    esp,ebp
  41ced9:	xor    DWORD PTR [edx+0x10],esi
  41cedc:	jb     0x41cef1
  41cede:	jl     0x41cf09
  41cee0:	push   esp
  41cee1:	jns    0x41cecc
  41cee3:	cmp    bh,BYTE PTR [edi+0x2a]
  41cee6:	jp     0x41cf5f
  41cee8:	pushf  
  41cee9:	xchg   DWORD PTR [esi+0x6897bc80],eax
  41ceef:	jge    0x41cec2
  41cef1:	js     0x41cec7
  41cef3:	push   ebp
  41cef4:	fsincos 
  41cef6:	daa    
  41cef7:	loopne 0x41cf59
  41cef9:	in     eax,0x18
  41cefb:	sub    eax,0x5ba2bdcb
  41cf00:	cmp    al,0x7c
  41cf02:	int    0x45
  41cf04:	fldln2 
  41cf06:	mov    ebp,0xc30d1b82
  41cf0b:	lea    esp,[edi]
  41cf0d:	mov    ds:0xd00fd28d,al
  41cf12:	pop    edx
  41cf13:	mov    ebp,0x94323e10
  41cf18:	inc    eax
  41cf19:	adc    dl,BYTE PTR [esi-0x12]
  41cf1c:	jmp    0x5e276aa3
  41cf21:	cmp    DWORD PTR ds:0xc8f1f171,ecx
  41cf27:	push   ds
  41cf28:	mov    BYTE PTR [edx],bh
  41cf2a:	fwait
  41cf2b:	xchg   ecx,eax
  41cf2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf2d:	mov    bl,BYTE PTR [ecx+0xd]
  41cf30:	xchg   edx,eax
  41cf31:	loopne 0x41cf7b
  41cf33:	and    cl,al
  41cf35:	retf   0x7c60
  41cf38:	adc    eax,DWORD PTR [ebp-0x2c]
  41cf3b:	int3   
  41cf3c:	or     bl,BYTE PTR ds:0x4b482a3b
  41cf42:	clc    
  41cf43:	push   ebx
  41cf44:	pop    eax
  41cf45:	and    eax,DWORD PTR [eax]
  41cf47:	mov    ebx,0x3f698ebd
  41cf4c:	xchg   edx,eax
  41cf4d:	xor    al,BYTE PTR [ecx-0x48]
  41cf50:	adc    eax,0x8e8aac49
  41cf55:	sub    DWORD PTR [edx],edi
  41cf57:	inc    esi
  41cf58:	stos   DWORD PTR es:[edi],eax
  41cf59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf5a:	cmp    ebp,edi
  41cf5c:	adc    ecx,DWORD PTR es:[esi+0x70]
  41cf60:	into   
  41cf61:	push   ss
  41cf62:	hlt    
  41cf63:	fdecstp 
  41cf65:	in     al,0x5e
  41cf67:	jne    0x41cf56
  41cf69:	stos   BYTE PTR es:[edi],al
  41cf6a:	jmp    0x7974:0x97779ec5
  41cf71:	addr16 je 0x41cf0c
  41cf74:	adc    eax,0x9732351c
  41cf79:	mov    ?,ebx
  41cf7b:	shr    ah,cl
  41cf7d:	xchg   edx,eax
  41cf7e:	adc    edx,DWORD PTR [ebx-0x423768f8]
  41cf84:	dec    edi
  41cf85:	sub    eax,0xf4c2829b
  41cf8a:	arpl   WORD PTR [esi],cx
  41cf8c:	cmp    esp,ecx
  41cf8e:	aas    
  41cf8f:	or     BYTE PTR [edi+edx*1],cl
  41cf92:	loope  0x41cfe7
  41cf94:	jnp    0x41cfc9
  41cf96:	or     edi,ebp
  41cf98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf99:	or     ah,al
  41cf9b:	inc    esp
  41cf9c:	lds    eax,FWORD PTR [ecx]
  41cf9e:	ss dec ecx
  41cfa0:	sbb    cl,BYTE PTR [ebp+0x68a80592]
  41cfa6:	push   es
  41cfa7:	mov    ?,esp
  41cfa9:	mov    eax,0x608aaf48
  41cfae:	(bad)  
  41cfaf:	jg     0x41cf66
  41cfb1:	or     DWORD PTR [edx+0x3a],edi
  41cfb4:	retf   0x50b1
  41cfb7:	or     al,0x7
  41cfb9:	xor    DWORD PTR [eax],eax
  41cfbb:	inc    ecx
  41cfbc:	daa    
  41cfbd:	mov    fs,WORD PTR [edx]
  41cfbf:	jp     0x41d02f
  41cfc1:	push   esi
  41cfc2:	push   ecx
  41cfc3:	lea    edx,[ecx-0x3a]
  41cfc6:	inc    ebp
  41cfc7:	mov    dh,0x52
  41cfc9:	mov    ebx,0x8f20af10
  41cfce:	push   edx
  41cfcf:	ror    DWORD PTR [ebp-0x654a6a4f],cl
  41cfd5:	ds xchg ebp,eax
  41cfd7:	jp     0x41cf61
  41cfd9:	xchg   BYTE PTR [eax-0x522b593c],ch
  41cfdf:	push   ss
  41cfe0:	(bad)  
  41cfe1:	sahf   
  41cfe2:	loope  0x41cf7d
  41cfe4:	mul    DWORD PTR [edi+0x2e801d5b]
  41cfea:	pop    esi
  41cfeb:	push   esp
  41cfec:	loope  0x41d064
  41cfee:	not    BYTE PTR [edi]
  41cff0:	adc    bh,BYTE PTR [esi]
  41cff2:	sub    eax,0xb35967f5
  41cff7:	add    cl,BYTE PTR [ecx-0x77]
  41cffa:	mov    ebp,0x2df23237
  41cfff:	push   ss
  41d000:	sub    al,0x9e
  41d002:	bound  ebp,QWORD PTR [ebx+0x24bebfea]
  41d008:	adc    eax,0xc5dbc92f
  41d00d:	pop    ss
  41d00e:	js     0x41d087
  41d010:	mov    ah,0x7e
  41d012:	test   al,0x56
  41d014:	jne    0x41cfa4
  41d016:	xor    ebp,DWORD PTR [esi+0x112837d4]
  41d01c:	or     ebx,DWORD PTR [edi]
  41d01e:	and    BYTE PTR ds:[edx],ch
  41d021:	inc    ecx
  41d022:	dec    esp
  41d023:	dec    esi
  41d024:	mov    cl,0x5c
  41d026:	rcr    DWORD PTR [edx-0x4a18fdfa],0x8
  41d02d:	cmp    al,0xfe
  41d02f:	and    eax,0x4662652e
  41d034:	jne    0x41cfe6
  41d036:	out    0xed,al
  41d038:	icebp  
  41d039:	mov    BYTE PTR [eax],bl
  41d03b:	int    0x1c
  41d03d:	and    al,0x1d
  41d03f:	dec    ebx
  41d040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d041:	mov    edx,0x26032c84
  41d046:	cwde   
  41d047:	mov    bh,0x91
  41d049:	mov    ecx,0x542ec94
  41d04e:	mov    al,BYTE PTR [esi-0x52]
  41d051:	dec    ebp
  41d052:	in     al,0xc7
  41d054:	gs push 0x1c2efd31
  41d05a:	dec    esp
  41d05b:	ret    
  41d05c:	xchg   esi,eax
  41d05d:	fnstsw WORD PTR [edi-0x1eb615cd]
  41d063:	or     ah,0x53
  41d066:	outs   dx,BYTE PTR ds:[esi]
  41d067:	adc    ebx,DWORD PTR [ebx]
  41d069:	mov    esi,0xed09ec2a
  41d06e:	push   es
  41d06f:	jmp    0x41d02c
  41d071:	sbb    al,0x57
  41d073:	jmp    0xcdd10dd0
  41d078:	je     0x41d01b
  41d07a:	jg     0x41d0d4
  41d07c:	add    dl,BYTE PTR [eax]
  41d07e:	cdq    
  41d07f:	mov    ebp,0x39fddbf9
  41d084:	and    edi,DWORD PTR [esp+edi*1]
  41d087:	scas   al,BYTE PTR es:[edi]
  41d088:	xchg   edi,eax
  41d089:	xchg   esi,eax
  41d08a:	and    BYTE PTR [ebx-0x30],0x5e
  41d08e:	adc    DWORD PTR [edi],ecx
  41d090:	xor    esp,DWORD PTR es:[esi-0x3c09347b]
  41d097:	mov    edi,0xe7e5d788
  41d09c:	cmovge eax,DWORD PTR ss:[eax]
  41d0a0:	cmp    eax,0x725e6359
  41d0a5:	sub    edx,DWORD PTR [ecx-0x25]
  41d0a8:	neg    dh
  41d0aa:	mov    al,0x7e
  41d0ac:	push   ds
  41d0ad:	push   cs
  41d0ae:	jecxz  0x41d075
  41d0b0:	dec    ebx
  41d0b1:	in     eax,0x50
  41d0b3:	clc    
  41d0b4:	jp     0x41d066
  41d0b6:	ds pop ss
  41d0b8:	lods   eax,DWORD PTR ds:[esi]
  41d0b9:	lea    esp,[edi-0x43]
  41d0bc:	std    
  41d0bd:	aaa    
  41d0be:	inc    eax
  41d0bf:	std    
  41d0c0:	lea    edx,[ebp-0x607bca84]
  41d0c6:	inc    esi
  41d0c7:	push   ds
  41d0c8:	sahf   
  41d0c9:	int3   
  41d0ca:	lea    ebp,[ecx+edi*8+0x77ad7d24]
  41d0d1:	mov    ah,0x4f
  41d0d3:	mov    dl,0x8a
  41d0d5:	pop    ecx
  41d0d6:	mov    ecx,0x4c5ea07f
  41d0db:	in     eax,dx
  41d0dc:	add    esp,DWORD PTR [ecx+0x4e7558e5]
  41d0e2:	repnz test DWORD PTR [ecx-0x6d],esi
  41d0e6:	std    
  41d0e7:	mov    edx,0x49fe4cbd
  41d0ec:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41d0ee:	dec    ebp
  41d0ef:	sub    al,0x34
  41d0f1:	test   BYTE PTR [ebp-0xf],ch
  41d0f4:	jge    0x41d0ee
  41d0f6:	(bad)  
  41d0f7:	hlt    
  41d0f8:	cmp    eax,0x44ec2e4d
  41d0fd:	mov    bl,0xfa
  41d0ff:	std    
  41d100:	cmp    eax,DWORD PTR ds:0x6f8448ac
  41d107:	into   
  41d108:	ins    DWORD PTR es:[edi],dx
  41d109:	dec    ecx
  41d10a:	out    0x4d,eax
  41d10c:	iret   
  41d10d:	sbb    eax,0xffa80de3
  41d112:	test   ebp,eax
  41d114:	push   esp
  41d115:	jnp    0x41d18f
  41d117:	push   eax
  41d118:	inc    esp
  41d119:	push   ebp
  41d11a:	or     bl,dl
  41d11c:	jnp    0x41d164
  41d11e:	add    DWORD PTR [ebx+eax*4+0x6ab03410],0x7ccc990b
  41d129:	xor    DWORD PTR [ebx-0x5],esi
  41d12c:	pop    edx
  41d12d:	push   es
  41d12e:	mov    al,ds:0x1c92923
  41d133:	jge    0x41d15d
  41d135:	add    ecx,DWORD PTR ds:0xcdc78ecc
  41d13b:	add    al,0x58
  41d13d:	jmp    0x41d189
  41d13f:	ds retf 
  41d141:	mov    ch,0x4d
  41d143:	retf   0xd57f
  41d146:	jne    0x41d1a0
  41d148:	(bad)  
  41d149:	adc    BYTE PTR [ebx+eax*2+0xbdae44b],ch
  41d150:	dec    edx
  41d151:	adc    DWORD PTR [eax+0x42],ecx
  41d154:	sbb    DWORD PTR [edi-0x15],0xb4e484e3
  41d15b:	cs (bad) 
  41d15d:	aaa    
  41d15e:	loope  0x41d186
  41d160:	cmc    
  41d161:	or     dl,BYTE PTR [ecx-0x71a266d3]
  41d167:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d168:	xchg   ebx,eax
  41d169:	les    edx,FWORD PTR [edx-0x568d3a2b]
  41d16f:	sub    eax,0x3f90536
  41d174:	or     ecx,DWORD PTR [eax-0x3f]
  41d177:	lds    esi,FWORD PTR [ecx+0x34]
  41d17a:	dec    ecx
  41d17b:	dec    esp
  41d17c:	rcl    BYTE PTR [edi+eax*4-0x55216d36],0xe9
  41d184:	retf   
  41d185:	test   edx,0xe215867b
  41d18b:	inc    edi
  41d18c:	ins    BYTE PTR es:[edi],dx
  41d18d:	push   es
  41d18e:	retf   
  41d18f:	stos   BYTE PTR es:[edi],al
  41d190:	sub    eax,0x55af0a67
  41d195:	fild   QWORD PTR [ecx-0x4f855d83]
  41d19b:	inc    edi
  41d19c:	retf   
  41d19d:	or     al,0x45
  41d19f:	rol    ch,1
  41d1a1:	xlat   BYTE PTR ds:[ebx]
  41d1a2:	mov    al,ds:0x42a9f027
  41d1a7:	push   cs
  41d1a8:	xchg   edi,eax
  41d1a9:	or     esp,esp
  41d1ab:	jae    0x41d173
  41d1ad:	add    esi,eax
  41d1af:	in     al,0x2d
  41d1b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1b2:	sbb    BYTE PTR [eax],dh
  41d1b4:	ds push ss
  41d1b6:	dec    eax
  41d1b7:	out    0x34,eax
  41d1b9:	sub    edi,DWORD PTR [ebx]
  41d1bb:	sub    eax,0x7d90d848
  41d1c0:	jnp    0x41d171
  41d1c2:	sbb    bh,BYTE PTR [edx+0x4a]
  41d1c5:	adc    BYTE PTR [eax-0x7fb55506],cl
  41d1cb:	ret    
  41d1cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1cd:	xchg   ebx,eax
  41d1ce:	fst    DWORD PTR [edi+0x4b]
  41d1d1:	popf   
  41d1d2:	les    esp,FWORD PTR [edx-0x5748b359]
  41d1d8:	outs   dx,BYTE PTR ss:[esi]
  41d1da:	mov    ecx,0xb0b98f95
  41d1df:	std    
  41d1e0:	mov    dh,0x21
  41d1e2:	into   
  41d1e3:	add    BYTE PTR [edi],ch
  41d1e5:	(bad)  
  41d1e6:	in     al,0xc2
  41d1e8:	mov    ebp,0xdfb9d96b
  41d1ed:	in     eax,0xe6
  41d1ef:	lock mov ah,0x2a
  41d1f2:	in     eax,0x86
  41d1f4:	xor    bh,dh
  41d1f6:	stc    
  41d1f7:	add    edi,ebp
  41d1f9:	xchg   esi,eax
  41d1fa:	add    edi,0x4
  41d1fd:	add    BYTE PTR ds:[ecx],ch
  41d200:	or     edi,esi
  41d202:	mov    esi,0x341404f9
  41d207:	sbb    al,0x43
  41d209:	and    eax,0xaa3b2583
  41d20e:	in     al,dx
  41d20f:	clc    
  41d210:	shl    BYTE PTR [eax+0x27],1
  41d213:	push   eax
  41d214:	ja     0x41d20a
  41d216:	pop    ebp
  41d217:	div    DWORD PTR [edx]
  41d219:	dec    ecx
  41d21a:	ret    0x12d
  41d21d:	push   edi
  41d21e:	cmp    BYTE PTR ss:[ecx],bl
  41d221:	cmp    DWORD PTR ds:0x1f2a1a3e,edx
  41d227:	mov    DWORD PTR [ebp+0x29],ebx
  41d22a:	xchg   ecx,eax
  41d22b:	fbld   TBYTE PTR ds:0x407836f2
  41d231:	push   ebx
  41d232:	jg     0x41d292
  41d234:	jb     0x41d28f
  41d236:	inc    esi
  41d237:	popa   
  41d238:	add    eax,0xdf06f96
  41d23d:	pop    eax
  41d23e:	jle    0x41d232
  41d240:	and    BYTE PTR [edi-0x73],bh
  41d243:	les    eax,FWORD PTR [edi-0x75dead05]
  41d249:	rcl    BYTE PTR [edx-0x3e],0x17
  41d24d:	jno    0x41d20c
  41d24f:	cmc    
  41d250:	mov    edx,0x9bcebb62
  41d255:	not    BYTE PTR [ecx*8-0x642976ba]
  41d25c:	sub    BYTE PTR [eax-0x26678f92],0x7d
  41d263:	sbb    cl,BYTE PTR [esi+0x19]
  41d266:	cmp    BYTE PTR [esi+0x1b],0xf6
  41d26a:	daa    
  41d26b:	repz inc esi
  41d26d:	daa    
  41d26e:	mov    ds:0x5c89e425,eax
  41d273:	popf   
  41d274:	xchg   ebp,eax
  41d275:	mov    ebx,0x822a3925
  41d27a:	cs ja  0x41d1ff
  41d27d:	dec    ecx
  41d27e:	xor    edx,ebp
  41d280:	test   DWORD PTR [esi+ecx*2+0x4fe98fde],eax
  41d287:	add    edi,DWORD PTR [ecx+0x63130acd]
  41d28d:	repnz or dh,bh
  41d290:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d291:	bound  ecx,QWORD PTR [ebp-0x79e7a6f4]
  41d297:	imul   ecx,DWORD PTR [esi+0x3f1ade21],0xfffffff6
  41d29e:	pop    es
  41d29f:	out    dx,al
  41d2a0:	outs   dx,BYTE PTR ds:[esi]
  41d2a1:	sbb    eax,0x9c18f381
  41d2a6:	adc    bh,bh
  41d2a8:	and    ah,BYTE PTR [eax-0x386d06c0]
  41d2ae:	test   BYTE PTR cs:[edx-0x30],0x23
  41d2b3:	pushf  
  41d2b4:	pop    edx
  41d2b5:	hlt    
  41d2b6:	mov    ecx,0x3406414f
  41d2bb:	cld    
  41d2bc:	mov    al,BYTE PTR [esi]
  41d2be:	jmp    0x41d279
  41d2c0:	push   edi
  41d2c1:	pop    eax
  41d2c2:	add    eax,DWORD PTR ds:0x16ea5828
  41d2c8:	mov    ebp,0x43e68638
  41d2cd:	sub    BYTE PTR ds:[esp+edi*8+0x66],dl
  41d2d2:	pop    es
  41d2d3:	iret   
  41d2d4:	jne    0x41d34b
  41d2d6:	inc    esp
  41d2d7:	sbb    BYTE PTR [edx+0x2b096b31],0xe8
  41d2de:	push   ebx
  41d2df:	loopne 0x41d300
  41d2e1:	jle    0x41d318
  41d2e3:	jge    0x41d352
  41d2e5:	and    dh,dl
  41d2e7:	adc    ch,BYTE PTR [esi*2+0x160efa6f]
  41d2ee:	push   eax
  41d2ef:	ins    BYTE PTR es:[edi],dx
  41d2f0:	cmp    al,0x49
  41d2f2:	rol    DWORD PTR [eax+0x610b6fa7],0xa
  41d2f9:	xor    al,0xd8
  41d2fb:	imul   ecx,DWORD PTR [edi],0xaf3991a4
  41d301:	inc    esi
  41d302:	outs   dx,DWORD PTR ds:[esi]
  41d303:	push   ss
  41d304:	stos   DWORD PTR es:[edi],eax
  41d305:	daa    
  41d306:	sub    al,0xb3
  41d308:	cdq    
  41d309:	inc    esi
  41d30a:	adc    bl,BYTE PTR [ebx+0xe]
  41d30d:	cmp    al,0x8
  41d30f:	sub    DWORD PTR cs:[ecx+edi*2-0x40],eax
  41d314:	(bad)  
  41d315:	push   0x5c61ac30
  41d31a:	xchg   edi,eax
  41d31b:	cs jecxz 0x41d346
  41d31e:	in     al,0x7a
  41d320:	fisttp QWORD PTR [esp+edx*1]
  41d323:	ins    BYTE PTR es:[edi],dx
  41d324:	xchg   esi,eax
  41d325:	es js  0x41d392
  41d328:	adc    DWORD PTR [ebp-0x53],ebx
  41d32b:	test   eax,0x9d761b59
  41d330:	cs and BYTE PTR fs:[edi+eiz*2],dh
  41d335:	cmp    bh,BYTE PTR [eax+0x3]
  41d338:	gs push eax
  41d33a:	jl     0x41d2cd
  41d33c:	push   0xc161d153
  41d341:	sub    DWORD PTR [ebx],eax
  41d343:	retf   
  41d344:	aas    
  41d345:	fs push edi
  41d347:	popa   
  41d348:	retf   
  41d349:	and    eax,0x3c5b0a26
  41d34e:	jle    0x41d2dd
  41d350:	mov    dl,0x59
  41d352:	inc    esp
  41d353:	cmp    DWORD PTR [esi+0x42],ebp
  41d356:	cmp    DWORD PTR [edi+0x72],ebx
  41d359:	(bad)  
  41d35a:	sar    BYTE PTR [edx+0x2e],0x66
  41d35e:	xlat   BYTE PTR ds:[ebx]
  41d35f:	or     BYTE PTR ds:0xe76c6432,al
  41d365:	pop    ecx
  41d366:	mov    edi,0x5ba6455
  41d36b:	or     eax,0xe7880ba9
  41d370:	and    eax,0x678165b8
  41d375:	push   ecx
  41d376:	add    DWORD PTR gs:0x4d6ab251,esi
  41d37d:	sbb    al,bh
  41d37f:	bound  esp,QWORD PTR [edx+eax*1+0x6029945a]
  41d386:	sub    edx,DWORD PTR [ebp-0x23]
  41d389:	scas   al,BYTE PTR es:[edi]
  41d38a:	adc    BYTE PTR [ecx+0x62],dh
  41d38d:	dec    edx
  41d38e:	jne    0x41d3db
  41d390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d391:	mov    bh,0xd6
  41d393:	mov    bx,cx
  41d396:	add    bh,BYTE PTR [edi+eiz*2]
  41d399:	imul   edx,DWORD PTR [eax],0x71ab7446
  41d39f:	add    al,0x90
  41d3a1:	push   es
  41d3a2:	dec    ebx
  41d3a3:	ret    
  41d3a4:	jg     0x41d3b8
  41d3a6:	addr16 (bad) 
  41d3aa:	imul   edx,DWORD PTR [ebp+0x5f015f13],0x961c7b23
  41d3b4:	add    ch,BYTE PTR [ebp-0x22]
  41d3b7:	das    
  41d3b8:	xchg   edi,eax
  41d3b9:	ins    DWORD PTR es:[edi],dx
  41d3ba:	popf   
  41d3bb:	dec    edi
  41d3bc:	pop    ss
  41d3bd:	pop    ds
  41d3be:	or     ecx,esi
  41d3c0:	inc    edx
  41d3c1:	ret    
  41d3c2:	dec    edi
  41d3c3:	sub    eax,0xbd4cdef5
  41d3c8:	jp     0x41d35a
  41d3ca:	xor    BYTE PTR [ecx-0x4eb2d3e7],0x3e
  41d3d1:	leave  
  41d3d2:	jg     0x41d423
  41d3d4:	div    esp
  41d3d6:	push   cs
  41d3d7:	mov    esp,0xaf6c9748
  41d3dc:	retf   0x80cd
  41d3df:	jbe    0x41d400
  41d3e1:	dec    eax
  41d3e2:	nop
  41d3e3:	cmp    DWORD PTR [ecx-0x6bc6bde2],esi
  41d3e9:	jp     0x41d3fe
  41d3eb:	jne    0x41d407
  41d3ed:	add    eax,0x70144fb6
  41d3f2:	jno    0x41d418
  41d3f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3f5:	dec    ebp
  41d3f6:	(bad)  
  41d3f7:	cmp    cl,BYTE PTR [ebx+0x34]
  41d3fa:	popa   
  41d3fb:	mov    ecx,esi
  41d3fd:	pop    ds
  41d3fe:	in     al,0xe
  41d400:	pop    ss
  41d401:	in     eax,dx
  41d402:	add    BYTE PTR [edx+0x5f],ch
  41d405:	push   0x79abcf14
  41d40a:	mov    bh,0x63
  41d40c:	push   0xa3044487
  41d411:	or     al,ch
  41d413:	cwde   
  41d414:	test   BYTE PTR [esi-0x20],bh
  41d417:	aad    0x6
  41d419:	mov    esp,DWORD PTR [ebp-0x23]
  41d41c:	gs jp  0x41d464
  41d41f:	or     al,0x72
  41d421:	retf   0xeeb
  41d424:	xchg   ebx,esp
  41d426:	push   ecx
  41d427:	xor    DWORD PTR [eax+0x5590a704],ecx
  41d42d:	imul   ebx,DWORD PTR [eax],0x24
  41d430:	or     DWORD PTR [esi+0x4027ad],ebx
  41d436:	pop    ebx
  41d437:	pop    ss
  41d438:	adc    BYTE PTR [ebx],ch
  41d43a:	popa   
  41d43b:	jnp    0x41d3d2
  41d43d:	push   esi
  41d43e:	ins    BYTE PTR es:[edi],dx
  41d43f:	adc    eax,DWORD PTR [ebx-0x5c]
  41d442:	inc    edi
  41d443:	sbb    ah,BYTE PTR [edi+eiz*1+0x154e355d]
  41d44a:	xchg   esi,eax
  41d44b:	xor    DWORD PTR [edi-0x22],edx
  41d44e:	(bad)  
  41d450:	jno    0x41d418
  41d452:	addr16 jg 0x41d3fd
  41d455:	and    DWORD PTR [ebx],ebp
  41d457:	adc    DWORD PTR [esi+edi*8+0x67],esp
  41d45b:	sbb    eax,0x47bcf876
  41d460:	adc    BYTE PTR [eax-0x1052367b],ah
  41d466:	pmaxub mm6,QWORD PTR [ebx+0xa]
  41d46a:	loop   0x41d497
  41d46c:	dec    ecx
  41d46d:	xor    al,0x68
  41d46f:	jmp    0x41d45c
  41d471:	adc    al,0xa6
  41d473:	bound  esp,QWORD PTR [eax]
  41d475:	sub    bl,BYTE PTR [eax]
  41d477:	add    BYTE PTR [ebx+0x66],al
  41d47a:	loope  0x41d4d5
  41d47c:	and    eax,0xb76b172a
  41d481:	std    
  41d482:	xchg   edi,eax
  41d483:	sub    al,0x21
  41d485:	inc    esi
  41d486:	adc    eax,0xb756f6ad
  41d48b:	cmp    edx,DWORD PTR [ebp-0x2e8054fe]
  41d491:	outs   dx,BYTE PTR ds:[esi]
  41d492:	sbb    esi,ebp
  41d494:	ins    DWORD PTR es:[edi],dx
  41d495:	push   edx
  41d496:	cmc    
  41d497:	push   edi
  41d498:	or     edx,DWORD PTR [ecx+0x5b]
  41d49b:	ins    BYTE PTR es:[edi],dx
  41d49c:	inc    esp
  41d49d:	(bad)  
  41d49e:	imul   edx,DWORD PTR [edx+0x614c9769],0x182adc8d
  41d4a8:	aam    0x6b
  41d4aa:	sub    ebp,DWORD PTR [edi]
  41d4ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4ad:	add    DWORD PTR [ebx],ebp
  41d4af:	lods   eax,DWORD PTR ds:[esi]
  41d4b0:	sbb    eax,0x967a6773
  41d4b5:	sub    cl,BYTE PTR [esi+0x2e]
  41d4b8:	xor    BYTE PTR [ebp+0x8],dh
  41d4bb:	mov    al,ds:0x1171786f
  41d4c0:	out    0x60,eax
  41d4c2:	xor    BYTE PTR [edx-0x658694b9],cl
  41d4c8:	ds in  al,dx
  41d4ca:	mov    al,ds:0x41d040c1
  41d4cf:	dec    esi
  41d4d0:	jle    0x41d480
  41d4d2:	jnp    0x41d53b
  41d4d4:	pushfw 
  41d4d6:	fldcw  WORD PTR ds:0xd6ded5e
  41d4dc:	push   esi
  41d4dd:	jbe    0x41d50b
  41d4df:	imul   edi,DWORD PTR [ebx+0x63a62371],0xffffffaa
  41d4e6:	sbb    BYTE PTR [eax+ebp*1+0x7c3a6414],0x26
  41d4ee:	in     al,0xff
  41d4f0:	mov    eax,0x4d79af9a
  41d4f5:	jae    0x41d53b
  41d4f7:	push   cs
  41d4f8:	lods   eax,DWORD PTR ds:[esi]
  41d4f9:	(bad)  [edx]
  41d4fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4fc:	loop   0x41d510
  41d4fe:	jl     0x41d490
  41d500:	mov    dh,BYTE PTR [eax+0x318e429e]
  41d506:	inc    edx
  41d507:	jg     0x41d49b
  41d509:	and    DWORD PTR [ebp+eax*1-0x74d0e605],0x28
  41d511:	jg     0x41d54b
  41d513:	gs vpshldq zmm4{k5},zmm3,zmm3,0x46
  41d51b:	fwait
  41d51c:	xchg   esi,eax
  41d51d:	sub    edi,edi
  41d51f:	data16 mov ch,BYTE PTR [eax+0x5c1a7aed]
  41d526:	cmp    DWORD PTR [esi],esp
  41d528:	pusha  
  41d529:	add    ebp,DWORD PTR [eax-0x58]
  41d52c:	leave  
  41d52d:	inc    esp
  41d52e:	or     eax,0x8d427687
  41d533:	lods   al,BYTE PTR ds:[esi]
  41d534:	dec    edi
  41d535:	inc    edi
  41d536:	xor    al,0x3d
  41d538:	sti    
  41d539:	push   ecx
  41d53a:	sbb    eax,0x54e506e6
  41d53f:	jmp    0x94f96bbe
  41d544:	ins    DWORD PTR es:[edi],dx
  41d545:	push   edx
  41d546:	imul   ecx,DWORD PTR [edx-0x68],0x56
  41d54a:	adc    al,0x69
  41d54c:	adc    eax,0x2104c771
  41d551:	in     eax,0x66
  41d553:	jge    0x41d581
  41d555:	aam    0x20
  41d557:	dec    esi
  41d558:	fs popf 
  41d55a:	div    BYTE PTR [esp+ecx*8+0x2c]
  41d55e:	pop    ebp
  41d55f:	adc    eax,0x91d1776e
  41d564:	gs xchg ebx,eax
  41d566:	loopne 0x41d535
  41d568:	push   gs
  41d56a:	add    edi,esp
  41d56c:	jne    0x41d5ad
  41d56e:	imul   ebp,DWORD PTR [edx+0x6d7b6b25],0xffffff9d
  41d575:	mov    eax,ds:0x3141f9e6
  41d57a:	rcr    eax,1
  41d57c:	into   
  41d57d:	test   DWORD PTR [edi],eax
  41d57f:	bound  ecx,QWORD PTR [edx]
  41d581:	pop    ss
  41d582:	sbb    DWORD PTR [edx],esi
  41d584:	mov    edx,0xcbcfc2b
  41d589:	mov    ch,0x6
  41d58b:	lahf   
  41d58c:	je     0x41d558
  41d58e:	xor    BYTE PTR [eax],cl
  41d590:	inc    eax
  41d591:	dec    ebp
  41d592:	add    DWORD PTR [eax+eax*2+0x6d],ebp
  41d596:	inc    esp
  41d597:	lods   eax,DWORD PTR ds:[esi]
  41d598:	lahf   
  41d599:	push   0x70
  41d59b:	mov    BYTE PTR [ebp+0x6c931247],ch
  41d5a1:	sar    DWORD PTR [eax],0x72
  41d5a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5a5:	push   esp
  41d5a6:	pop    edi
  41d5a7:	push   0xffffff8d
  41d5a9:	sub    dh,BYTE PTR [eax-0x1e]
  41d5ac:	lahf   
  41d5ad:	outs   dx,DWORD PTR ds:[esi]
  41d5ae:	jge    0x41d5ab
  41d5b0:	call   0x1c1b:0x4713c99a
  41d5b7:	mov    esp,0x5f16ab7f
  41d5bc:	outs   dx,DWORD PTR ds:[esi]
  41d5bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5be:	push   ss
  41d5bf:	push   esp
  41d5c0:	(bad)  
  41d5c1:	cmp    DWORD PTR [esp-0x7a1feef],ecx
  41d5c8:	jne    0x41d629
  41d5ca:	shl    DWORD PTR [eax],cl
  41d5cc:	or     al,0xef
  41d5ce:	popf   
  41d5cf:	pushf  
  41d5d0:	dec    ebp
  41d5d1:	pop    esp
  41d5d2:	mov    al,ds:0x102d98cf
  41d5d7:	dec    edx
  41d5d8:	icebp  
  41d5d9:	dec    esp
  41d5da:	jo     0x41d5a0
  41d5dc:	es int3 
  41d5de:	into   
  41d5df:	into   
  41d5e0:	ins    BYTE PTR es:[edi],dx
  41d5e1:	ret    0x28c2
  41d5e4:	neg    BYTE PTR [ebp+0x7e]
  41d5e7:	jnp    0x41d630
  41d5e9:	mov    dl,0x2
  41d5eb:	mov    ds,WORD PTR [edx-0x30]
  41d5ee:	inc    ecx
  41d5ef:	fs je  0x41d5f4
  41d5f2:	pop    esp
  41d5f3:	pop    eax
  41d5f4:	dec    ebx
  41d5f5:	or     edx,DWORD PTR ds:0xa4744419
  41d5fb:	inc    edi
  41d5fc:	xchg   ebx,eax
  41d5fd:	imul   edx,DWORD PTR [ecx-0x72c3e3aa],0x4f3fe09e
  41d607:	or     BYTE PTR [edx+0x1b],bl
  41d60a:	or     DWORD PTR [eax],ebx
  41d60c:	dec    edi
  41d60d:	xchg   esi,eax
  41d60e:	pop    ecx
  41d60f:	dec    esi
  41d610:	mov    edi,0x2a61ab78
  41d615:	jns    0x41d617
  41d617:	or     DWORD PTR [ebx-0x1eaab2d4],edx
  41d61d:	push   ebp
  41d61e:	gs xor al,0xd4
  41d621:	inc    ecx
  41d622:	cwde   
  41d623:	call   0x8aab:0x65c6c3a2
  41d62a:	(bad)  
  41d62b:	adc    al,0x1d
  41d62d:	dec    edi
  41d62e:	xchg   ebp,eax
  41d62f:	pusha  
  41d630:	and    dl,dl
  41d632:	sbb    DWORD PTR [edi+0xd14236c],edx
  41d638:	ja     0x41d697
  41d63a:	les    esp,FWORD PTR [eax+0x774db175]
  41d640:	mov    WORD PTR [edi+0x72],ss
  41d643:	mov    ds:0x5b2cad2c,eax
  41d648:	adc    al,0x65
  41d64a:	into   
  41d64b:	ins    DWORD PTR es:[edi],dx
  41d64c:	xor    BYTE PTR [ebp+ebx*2-0x689cdc92],ch
  41d653:	stos   DWORD PTR es:[edi],eax
  41d654:	(bad)  
  41d655:	aaa    
  41d656:	push   ebx
  41d657:	sub    al,0x24
  41d659:	scas   eax,DWORD PTR es:[edi]
  41d65a:	mov    DWORD PTR [edi-0x14],edi
  41d65d:	jg     0x2b46f215
  41d663:	ficomp WORD PTR [edi+0x5d]
  41d666:	push   cs
  41d667:	and    al,0xf3
  41d669:	cmp    ecx,esi
  41d66b:	imul   ebp,DWORD PTR [edi-0x6b7388e3],0x10
  41d672:	mov    al,ds:0x70d567b7
  41d677:	jno    0x41d6ef
  41d679:	retf   
  41d67a:	setno  bh
  41d67d:	pop    ds
  41d67e:	jp     0x41d6ba
  41d680:	sub    DWORD PTR [ebx],eax
  41d682:	in     eax,0x46
  41d684:	cmp    ebx,DWORD PTR [ebx-0x26e49d83]
  41d68a:	ret    0x777a
  41d68d:	stos   BYTE PTR es:[edi],al
  41d68e:	cmp    eax,0x2618233e
  41d693:	push   esi
  41d694:	repz sbb edi,DWORD PTR [edi+0x41]
  41d698:	addr16 jge 0x41d6fb
  41d69b:	std    
  41d69c:	jge    0x41d6a4
  41d69e:	push   edx
  41d69f:	inc    ebp
  41d6a0:	sbb    BYTE PTR [edi+eiz*2],0x62
  41d6a4:	adc    DWORD PTR [edi+0x25],ebp
  41d6a7:	leave  
  41d6a8:	sbb    DWORD PTR fs:[ebp-0x43bfefd7],eax
  41d6af:	cmp    ebp,DWORD PTR [edi-0x8]
  41d6b2:	jge    0x41d6d1
  41d6b4:	fnstsw WORD PTR ds:0x25153f93
  41d6ba:	dec    ebx
  41d6bb:	aaa    
  41d6bc:	jbe    0x41d727
  41d6be:	pop    ebp
  41d6bf:	retf   
  41d6c0:	enter  0x421f,0xf8
  41d6c4:	cmp    BYTE PTR [edx+0x31781a44],0x2e
  41d6cb:	jno    0x41d704
  41d6cd:	into   
  41d6ce:	sbb    al,0x35
  41d6d0:	mov    cl,BYTE PTR [edx]
  41d6d2:	sar    BYTE PTR [edx+0x42],0x40
  41d6d6:	jo     0x41d709
  41d6d8:	cmp    DWORD PTR [edi+0x3b],ecx
  41d6db:	xor    al,BYTE PTR [esi+ebx*2+0x60404a33]
  41d6e2:	ror    dl,1
  41d6e4:	(bad)  
  41d6e7:	bound  edi,QWORD PTR [eax-0x42]
  41d6ea:	dec    ebp
  41d6eb:	cmp    ah,BYTE PTR [ebx+0xe]
  41d6ee:	push   esi
  41d6ef:	dec    edx
  41d6f0:	arpl   WORD PTR [edx+0x39],bx
  41d6f3:	sub    al,al
  41d6f5:	cmp    dl,BYTE PTR [eax-0x1d]
  41d6f8:	jle    0x41d758
  41d6fa:	adc    BYTE PTR [ecx+0x6e],ch
  41d6fd:	jl     0x41d703
  41d6ff:	pop    eax
  41d700:	js     0x41d737
  41d702:	xchg   DWORD PTR [ecx-0x76],ebp
  41d705:	xchg   DWORD PTR [ecx+0x6d],esi
  41d708:	xor    BYTE PTR [ecx+0x3a],dh
  41d70b:	push   cs
  41d70c:	dec    edx
  41d70d:	js     0x41d776
  41d70f:	aas    
  41d710:	jmp    0x9ae41c67
  41d715:	jle    0x41d712
  41d717:	cmp    BYTE PTR [edx+0x54],dh
  41d71a:	add    eax,0x66794b63
  41d71f:	imul   ecx,DWORD PTR [edi+0x79],0xfffffff7
  41d723:	ret    
  41d724:	dec    ecx
  41d725:	inc    ebp
  41d726:	ins    BYTE PTR es:[edi],dx
  41d727:	push   ss
  41d728:	dec    edx
  41d729:	push   eax
  41d72a:	push   ebp
  41d72b:	iret   
  41d72c:	jnp    0x41d782
  41d72e:	jae    0x41d72c
  41d730:	xor    eax,0xea21733f
  41d735:	xor    DWORD PTR ds:0xb753850,edi
  41d73b:	xor    DWORD PTR [esi+0x5e],eax
  41d73e:	ss dec esi
  41d740:	sub    cl,bh
  41d742:	inc    ecx
  41d743:	dec    eax
  41d744:	repnz pusha 
  41d746:	stc    
  41d747:	pop    esp
  41d748:	cmp    al,0x2a
  41d74a:	ds js  0x41d79d
  41d74d:	jne    0x41d7bc
  41d74f:	loop   0x41d748
  41d751:	imul   ecx,ecx,0x4f62554a
  41d757:	loopne 0x41d7a4
  41d759:	jae    0x41d7ca
  41d75b:	ja     0x41d792
  41d75d:	xor    eax,0x4e4c8173
  41d762:	aaa    
  41d763:	push   esi
  41d764:	ins    BYTE PTR es:[edi],dx
  41d765:	jne    0x41d79f
  41d767:	or     eax,0x586b5a7d
  41d76c:	jl     0x41d7da
  41d76e:	xor    al,0xb0
  41d770:	mov    bh,0x85
  41d772:	push   ebx
  41d773:	ins    DWORD PTR es:[edi],dx
  41d774:	inc    eax
  41d775:	dec    ecx
  41d776:	cmp    ecx,DWORD PTR [esp+ebp*2-0x1]
  41d77a:	gs (bad) 
  41d77c:	lock (bad) 
  41d77e:	(bad)  
  41d77f:	xor    eax,0x2d640549
  41d784:	outs   dx,BYTE PTR ds:[esi]
  41d785:	popa   
  41d786:	push   edx
  41d787:	ja     0x41d7cc
  41d789:	dec    edx
  41d78a:	(bad)  
  41d78c:	jbe    0x41d803
  41d78e:	inc    esp
  41d78f:	in     al,0x70
  41d791:	fs pop esp
  41d793:	mov    bl,0x82
  41d795:	cmp    ecx,DWORD PTR [esi-0x54]
  41d798:	fwait
  41d799:	push   edx
  41d79a:	ins    BYTE PTR es:[edi],dx
  41d79b:	aaa    
  41d79c:	ss dec ecx
  41d79e:	jge    0x41d81f
  41d7a0:	js     0x41d7a7
  41d7a2:	inc    esi
  41d7a3:	popa   
  41d7a4:	pusha  
  41d7a5:	daa    
  41d7a6:	dec    ebp
  41d7a7:	jge    0x41d770
  41d7a9:	cmp    eax,0x5144453d
  41d7ae:	not    esi
  41d7b0:	imul   edi,DWORD PTR [esi+ecx*1+0x5d],0x5e76554e
  41d7b8:	push   edi
  41d7b9:	jge    0x41d77c
  41d7bb:	pop    edx
  41d7bc:	ja     0x41d7a8
  41d7be:	pusha  
  41d7bf:	jbe    0x41d808
  41d7c1:	sbb    eax,0xb83f3c64
  41d7c6:	sbb    al,0x77
  41d7c8:	push   ebx
  41d7c9:	xchg   esi,eax
  41d7ca:	xor    BYTE PTR [ebp+0x77533b44],dh
  41d7d0:	cmp    dl,BYTE PTR [ecx+0x30]
  41d7d3:	inc    edx
  41d7d4:	outs   dx,BYTE PTR ds:[si]
  41d7d6:	mov    ebx,0x546ede11
  41d7db:	ins    BYTE PTR es:[edi],dx
  41d7dc:	loop   0x41d81e
  41d7de:	jbe    0x41d847
  41d7e0:	push   edx
  41d7e1:	jbe    0x41d77f
  41d7e3:	adc    bh,BYTE PTR ds:[edx+0x35]
  41d7e7:	dec    esi
  41d7e8:	fwait
  41d7e9:	dec    ebp
  41d7ea:	leave  
  41d7eb:	inc    esi
  41d7ec:	dec    ebx
  41d7ed:	push   0x1b24d75
  41d7f2:	cmp    eax,0x75428d3c
  41d7f7:	imul   esp,DWORD PTR [esi+0x46],0x57ee7959
  41d7fe:	or     eax,0x3a744223
  41d803:	dec    edi
  41d804:	xchg   BYTE PTR [ecx+0x5e],bh
  41d807:	dec    eax
  41d808:	call   0x31cc:0x4b905aea
  41d80f:	xor    eax,0x766c624e
  41d814:	adc    dh,BYTE PTR [esi+0x65]
  41d817:	dec    edi
  41d818:	into   
  41d819:	xor    ch,BYTE PTR [esi+0x74]
  41d81c:	xor    esi,esi
  41d81e:	fdivr  DWORD PTR [eax]
  41d820:	ss jne 0x41d899
  41d823:	(bad)  
  41d824:	jp     0x41d832
  41d826:	pop    esi
  41d827:	inc    edi
  41d828:	jb     0x41d879
  41d82a:	push   0x6c
  41d82c:	outs   dx,DWORD PTR ds:[esi]
  41d82d:	push   esp
  41d82e:	lea    edx,[edx-0x37a795a8]
  41d834:	pusha  
  41d835:	dec    ebp
  41d836:	cmp    al,0x69
  41d838:	dec    ecx
  41d839:	jl     0x41d831
  41d83b:	fbstp  TBYTE PTR [eax+0x3f]
  41d83e:	je     0x41d8b2
  41d840:	sub    ah,BYTE PTR [edx+0x71]
  41d843:	cmp    cl,BYTE PTR [esi]
  41d845:	pop    edi
  41d846:	xor    edi,DWORD PTR ds:0x74a4823c
  41d84c:	push   cs
  41d84d:	daa    
  41d84e:	ds pop ecx
  41d850:	mov    ds:0x22716056,al
  41d855:	es jns 0x41d873
  41d858:	jbe    0x41d8ce
  41d85a:	addr16 lahf 
  41d85c:	jbe    0x41d8af
  41d85e:	pop    eax
  41d85f:	mov    ebp,0x2bff565e
  41d864:	cmp    BYTE PTR [ebp+0x4f],dl
  41d867:	xchg   edx,eax
  41d868:	jp     0x41d8b5
  41d86a:	cmp    DWORD PTR [edx],0x3e66c641
  41d870:	inc    ebp
  41d871:	dec    ecx
  41d872:	nop
  41d873:	arpl   WORD PTR [ebx+0x29],ax
  41d876:	sub    eax,DWORD PTR [esi-0x2a]
  41d879:	pop    esp
  41d87a:	dec    esi
  41d87b:	dec    ebx
  41d87c:	cmp    ebx,DWORD PTR [eax+0x7f]
  41d87f:	fwait
  41d880:	popa   
  41d881:	enter  0xd430,0xe
  41d885:	xchg   esi,eax
  41d886:	pop    ecx
  41d887:	cmp    cl,BYTE PTR [edx+edx*2-0xc]
  41d88b:	fdivr  DWORD PTR [edx]
  41d88d:	fimul  WORD PTR [edi+0x4d]
  41d890:	add    DWORD PTR [ebx+0x51],esi
  41d893:	jo     0x41d912
  41d895:	pop    ecx
  41d896:	push   edx
  41d897:	imul   edi,DWORD PTR [ebx],0x1f803e44
  41d89d:	and    al,0x5b
  41d89f:	iret   
  41d8a0:	arpl   WORD PTR [esp+ecx*2+0x3e],bp
  41d8a4:	les    eax,FWORD PTR [ebx+0x38af0046]
  41d8aa:	popa   
  41d8ab:	gs xor eax,0xed4a4ee6
  41d8b1:	pop    ecx
  41d8b2:	aaa    
  41d8b3:	push   0x61
  41d8b5:	icebp  
  41d8b6:	lock pusha 
  41d8b8:	add    ebp,DWORD PTR [edi+0x7f]
  41d8bb:	inc    esi
  41d8bc:	jae    0x41d841
  41d8be:	outs   dx,BYTE PTR ds:[esi]
  41d8bf:	cmp    al,0x4d
  41d8c1:	dec    ebx
  41d8c2:	push   ebx
  41d8c3:	xlat   BYTE PTR ds:[ebx]
  41d8c4:	mov    edi,0x310e0e26
  41d8c9:	jl     0x41d8d6
  41d8cb:	inc    edx
  41d8cc:	(bad)  
  41d8cd:	outs   dx,BYTE PTR ds:[esi]
  41d8ce:	inc    edx
  41d8cf:	sub    DWORD PTR [ebx+0x57],edx
  41d8d2:	jae    0x41d91e
  41d8d4:	add    BYTE PTR [ebp+0x29],dh
  41d8d7:	lock aaa 
  41d8d9:	add    al,0x44
  41d8db:	inc    esi
  41d8dc:	dec    ebx
  41d8dd:	jo     0x41d92d
  41d8df:	push   ebx
  41d8e0:	dec    edx
  41d8e1:	jp     0x41d95a
  41d8e3:	cmp    eax,0x521c9c9c
  41d8e8:	push   0x5a
  41d8ea:	fidivr DWORD PTR [ecx-0x7f]
  41d8ed:	push   ecx
  41d8ee:	dec    ebx
  41d8ef:	imul   edx,DWORD PTR [ebp-0x32],0x51
  41d8f3:	mov    ebp,0x3b3f6e43
  41d8f8:	xor    al,0x42
  41d8fa:	lock and dh,BYTE PTR [ecx+0x44]
  41d8fe:	sbb    edi,DWORD PTR [edx+esi*2]
  41d901:	loopne 0x41d8db
  41d903:	ins    BYTE PTR es:[edi],dx
  41d904:	dec    ecx
  41d905:	cld    
  41d906:	push   edi
  41d907:	sub    esp,DWORD PTR [eax+ebp*8+0x64]
  41d90b:	imul   eax,DWORD PTR [edi+0x13],0x4f
  41d90f:	arpl   WORD PTR [edx-0xf],cx
  41d912:	outs   dx,DWORD PTR ds:[esi]
  41d913:	aam    0x68
  41d915:	pop    ebx
  41d916:	cmp    eax,0x65244a3f
  41d91b:	jns    0x41d932
  41d91d:	or     ecx,DWORD PTR [ebp+0x57]
  41d920:	cmp    BYTE PTR [esp+ecx*1+0x7f],dh
  41d924:	push   eax
  41d925:	cmp    BYTE PTR [esi+0x45],dh
  41d928:	mov    al,ds:0x7446de72
  41d92d:	hlt    
  41d92e:	jne    0x41d9ac
  41d930:	push   ds
  41d931:	pop    ecx
  41d932:	jne    0x41d99c
  41d934:	cld    
  41d935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d936:	push   eax
  41d937:	or     eax,0x71644309
  41d93c:	cmp    al,0x65
  41d93e:	repz dec edx
  41d940:	push   edx
  41d941:	cmp    eax,0x35867a6f
  41d946:	gs jb  0x41d956
  41d949:	inc    edi
  41d94a:	ss pop eax
  41d94c:	addr16 fsubr st(2),st
  41d94f:	popa   
  41d950:	addr16 cmp al,0x13
  41d953:	pop    eax
  41d954:	and    ecx,DWORD PTR [edx+0xe]
  41d957:	or     ecx,DWORD PTR [eax+0x39]
  41d95a:	inc    esi
  41d95b:	jbe    0x41d9d2
  41d95d:	test   BYTE PTR [ecx],ah
  41d95f:	pop    es
  41d960:	test   eax,0x7fc02f46
  41d965:	out    dx,al
  41d966:	pusha  
  41d967:	push   edi
  41d968:	bound  edx,QWORD PTR [edi]
  41d96a:	or     BYTE PTR [esp+eax*2-0x47219d93],bl
  41d971:	lods   ax,WORD PTR ds:[esi]
  41d973:	pop    eax
  41d974:	mov    eax,0x35d8641
  41d979:	pop    edi
  41d97a:	push   0x7d63465d
  41d97f:	imul   ebx,esi,0x34787175
  41d985:	mov    eax,ds:0x76675790
  41d98a:	dec    edx
  41d98b:	jl     0x41d9cb
  41d98d:	sti    
  41d98e:	es push 0x2d004874
  41d994:	imul   edx,DWORD PTR [esi+0x34],0xca4ce895
  41d99b:	xor    eax,0x4966915c
  41d9a0:	push   esi
  41d9a1:	add    al,0x64
  41d9a3:	js     0x41da16
  41d9a5:	inc    edx
  41d9a6:	jge    0x41da01
  41d9a8:	dec    ecx
  41d9a9:	sahf   
  41d9aa:	dec    esp
  41d9ab:	xor    BYTE PTR [esi+0x4d6e0a6a],bl
  41d9b1:	dec    edx
  41d9b2:	pop    edi
  41d9b3:	dec    edi
  41d9b4:	arpl   WORD PTR [edx+0x59765709],dx
  41d9ba:	fimul  DWORD PTR [edx+0x70]
  41d9bd:	jp     0x41da19
  41d9bf:	std    
  41d9c0:	sahf   
  41d9c1:	inc    edx
  41d9c2:	arpl   WORD PTR [ecx+0x73],bx
  41d9c5:	push   ds
  41d9c6:	dec    eax
  41d9c7:	outs   dx,DWORD PTR ds:[esi]
  41d9c8:	xor    dh,BYTE PTR [esi+0x76d56168]
  41d9ce:	imul   edi,DWORD PTR [esi],0x64b16241
  41d9d4:	pop    esi
  41d9d5:	dec    ebx
  41d9d6:	aam    0xed
  41d9d8:	xchg   DWORD PTR ds:0xe7385657,ebp
  41d9de:	dec    esi
  41d9df:	push   0xb2786d74
  41d9e4:	jne    0x41da16
  41d9e6:	arpl   ax,dx
  41d9e8:	cmp    eax,0x706e2556
  41d9ed:	idiv   DWORD PTR [edi+0x55]
  41d9f0:	cmp    al,0x50
  41d9f2:	bound  ecx,QWORD PTR [esi+edi*1]
  41d9f5:	pop    esp
  41d9f6:	dec    ecx
  41d9f7:	add    bl,al
  41d9f9:	or     BYTE PTR [edx],dh
  41d9fb:	dec    ecx
  41d9fc:	inc    ecx
  41d9fd:	lahf   
  41d9fe:	xor    BYTE PTR [ebx],al
  41da00:	mov    ebp,0x6a4f7646
  41da05:	push   edi
  41da06:	mov    esi,0x4712c04e
  41da0b:	dec    ebx
  41da0c:	js     0x41da62
  41da0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da0f:	add    cl,BYTE PTR [ecx+0x901ff15]
  41da15:	xor    bh,BYTE PTR [ecx]
  41da17:	xor    bh,BYTE PTR ds:0x71533337
  41da1d:	dec    edi
  41da1e:	xor    DWORD PTR [ecx+ebp*2+0x4e],ebx
  41da22:	push   ebx
  41da23:	inc    edx
  41da24:	push   0x4931786f
  41da29:	jp     0x41da87
  41da2b:	je     0x41daaa
  41da2d:	xor    BYTE PTR [ebp+0x4f],bl
  41da30:	inc    ecx
  41da31:	ins    DWORD PTR es:[edi],dx
  41da32:	addr16 pusha 
  41da34:	inc    edx
  41da35:	inc    ebx
  41da36:	pop    ebp
  41da37:	push   esi
  41da38:	dec    edi
  41da39:	push   ecx
  41da3a:	inc    edx
  41da3b:	xor    edi,DWORD PTR [ecx]
  41da3d:	inc    edi
  41da3e:	push   ebp
  41da3f:	xor    ah,BYTE PTR [esi+0x7f]
  41da42:	push   eax
  41da43:	inc    esi
  41da44:	jbe    0x41da99
  41da46:	push   ebx
  41da47:	popa   
  41da48:	outs   dx,BYTE PTR ds:[esi]
  41da49:	jae    0x41da7e
  41da4b:	ins    BYTE PTR es:[edi],dx
  41da4c:	inc    edx
  41da4d:	pop    edx
  41da4e:	cmp    BYTE PTR [edi+0x4a],bl
  41da51:	pop    ebx
  41da52:	inc    ebp
  41da53:	pusha  
  41da54:	pop    edx
  41da55:	ja     0x41daa5
  41da57:	inc    edi
  41da58:	ss inc ecx
  41da5a:	inc    ebx
  41da5b:	dec    eax
  41da5c:	outs   dx,BYTE PTR ds:[esi]
  41da5d:	cmp    al,0x58
  41da5f:	xor    BYTE PTR [ebp+esi*2+0x57],dl
  41da63:	dec    ecx
  41da64:	outs   dx,BYTE PTR ds:[esi]
  41da65:	push   esp
  41da66:	inc    esp
  41da67:	pop    edx
  41da68:	jns    0x41dac7
  41da6a:	inc    ebp
  41da6b:	inc    esi
  41da6c:	inc    ebx
  41da6d:	aaa    
  41da6e:	je     0x41dab6
  41da70:	ins    DWORD PTR es:[edi],dx
  41da71:	inc    ebx
  41da72:	dec    esp
  41da73:	push   eax
  41da74:	outs   dx,DWORD PTR ds:[esi]
  41da75:	pusha  
  41da76:	jae    0x41dae4
  41da78:	jae    0x41dac1
  41da7a:	cmp    al,0x64
  41da7c:	inc    ebp
  41da7d:	dec    esp
  41da7e:	ja     0x41dad9
  41da80:	inc    eax
  41da81:	jge    0x41daea
  41da83:	imul   esi,DWORD PTR [edx],0x44655f4b
  41da89:	cmp    al,0x7c
  41da8b:	xor    al,0x47
  41da8d:	imul   edx,DWORD PTR [edx+0x6a],0x397b5f6e
  41da94:	ss ja  0x41daf8
  41da97:	jge    0x41dacf
  41da99:	xor    eax,0x756e734d
  41da9e:	xor    edx,DWORD PTR [edx+0x49]
  41daa1:	dec    esi
  41daa2:	pop    edx
  41daa3:	pusha  
  41daa4:	jle    0x41dae1
  41daa6:	dec    ebp
  41daa7:	dec    esp
  41daa8:	inc    edx
  41daa9:	dec    edx
  41daaa:	dec    edx
  41daab:	push   ecx
  41daac:	jg     0x41daf4
  41daae:	push   edi
  41daaf:	ja     0x41db22
  41dab1:	dec    eax
  41dab2:	gs jge 0x41daf4
  41dab5:	pop    eax
  41dab6:	arpl   WORD PTR [esi+0x7d],dx
  41dab9:	cmp    dl,BYTE PTR [ebx+0x6b]
  41dabc:	xor    al,BYTE PTR [esi+0x6e]
  41dabf:	xor    BYTE PTR [ebp+0x6c],dl
  41dac2:	ins    BYTE PTR es:[edi],dx
  41dac3:	aaa    
  41dac4:	ja     0x41db31
  41dac6:	pop    esi
  41dac7:	dec    ebp
  41dac8:	popa   
  41dac9:	pop    ecx
  41daca:	inc    esi
  41dacb:	dec    edx
  41dacc:	dec    ecx
  41dacd:	dec    eax
  41dace:	popa   
  41dacf:	push   edi
  41dad0:	ja     0x41db2e
  41dad2:	jne    0x41db3e
  41dad4:	inc    ebp
  41dad5:	inc    ebx
  41dad6:	cmp    eax,0x547c734a
  41dadb:	cmp    edi,DWORD PTR [esi]
  41dadd:	popa   
  41dade:	dec    edx
  41dadf:	aaa    
  41dae0:	push   edi
  41dae1:	pusha  
  41dae2:	popa   
  41dae3:	js     0x41db29
  41dae5:	pop    esp
  41dae6:	push   ebp
  41dae7:	push   esi
  41dae8:	push   eax
  41dae9:	pusha  
  41daea:	inc    ebp
  41daeb:	cmp    bl,BYTE PTR ss:[edi+0x68]
  41daef:	dec    edx
  41daf0:	inc    sp
  41daf2:	inc    edi
  41daf3:	inc    esp
  41daf4:	pop    esp
  41daf5:	pusha  
  41daf6:	imul   esp,DWORD PTR [edi+0x65],0x7c486b72
  41dafd:	ja     0x41db5d
  41daff:	addr16 dec esi
  41db01:	jns    0x41db70
  41db03:	jl     0x41db35
  41db05:	jg     0x41db41
  41db07:	dec    cx
  41db09:	xor    ecx,DWORD PTR [eax+0x51]
  41db0c:	fs dec ebx
  41db0e:	imul   esp,DWORD PTR [ebx+0x3f],0x675b3632
  41db15:	pop    ebx
  41db16:	pop    ebx
  41db17:	jl     0x41db66
  41db19:	ja     0x41db76
  41db1b:	inc    ecx
  41db1c:	push   esp
  41db1d:	inc    edi
  41db1e:	dec    ecx
  41db1f:	inc    esp
  41db20:	dec    esi
  41db21:	dec    esi
  41db22:	inc    eax
  41db23:	pop    ecx
  41db24:	pop    esp
  41db25:	push   eax
  41db26:	inc    ebx
  41db27:	dec    esi
  41db28:	inc    esi
  41db29:	inc    esi
  41db2a:	dec    esi
  41db2b:	dec    ebx
  41db2c:	push   edi
  41db2d:	inc    esp
  41db2e:	dec    eax
  41db2f:	dec    ecx
  41db30:	inc    ecx
  41db31:	dec    ebp
  41db32:	dec    eax
  41db33:	pop    edi
  41db34:	pop    edx
  41db35:	push   ebp
  41db36:	inc    ecx
  41db37:	dec    ebp
  41db38:	inc    esp
  41db39:	dec    edi
  41db3a:	dec    esi
  41db3b:	inc    edi
  41db3c:	push   edx
  41db3d:	dec    ebp
  41db3e:	inc    ebx
  41db3f:	dec    esp
  41db40:	inc    ebx
  41db41:	dec    eax
  41db42:	inc    esi
  41db43:	pop    ebp
  41db44:	push   ecx
  41db45:	push   edi
  41db46:	dec    esp
  41db47:	dec    ebx
  41db48:	inc    esp
  41db49:	inc    ebx
  41db4a:	dec    ebx
  41db4b:	inc    esi
  41db4c:	pop    eax
  41db4d:	dec    ebx
  41db4e:	dec    ebp
  41db4f:	inc    eax
  41db50:	inc    eax
  41db51:	inc    ebp
  41db52:	dec    edi
  41db53:	push   edx
  41db54:	push   ebp
  41db55:	push   ebp
  41db56:	inc    ecx
  41db57:	inc    edi
  41db58:	inc    esp
  41db59:	inc    esi
  41db5a:	inc    ecx
  41db5b:	inc    edx
  41db5c:	pop    esi
  41db5d:	dec    edx
  41db5e:	inc    ecx
  41db5f:	inc    ecx
  41db60:	dec    edi
  41db61:	inc    ebx
  41db62:	dec    esp
  41db63:	push   edx
  41db64:	push   esp
  41db65:	push   eax
  41db66:	dec    ebp
  41db67:	dec    ebx
  41db68:	dec    ebx
  41db69:	inc    ecx
  41db6a:	inc    esi
  41db6b:	inc    edx
  41db6c:	push   edi
  41db6d:	inc    edi
  41db6e:	dec    edi
  41db6f:	inc    esp
  41db70:	dec    ecx
  41db71:	dec    esi
  41db72:	inc    ebx
  41db73:	pop    eax
  41db74:	pop    esp
  41db75:	push   eax
  41db76:	inc    esi
  41db77:	dec    edi
  41db78:	dec    edi
  41db79:	inc    edx
  41db7a:	inc    ebp
  41db7b:	dec    esp
  41db7c:	pop    ebx
  41db7d:	inc    edi
  41db7e:	dec    edi
  41db7f:	inc    ebp
  41db80:	dec    esi
  41db81:	inc    esi
  41db82:	inc    esp
  41db83:	push   edx
  41db84:	push   eax
  41db85:	pop    ebx
  41db86:	inc    esi
  41db87:	inc    ecx
  41db88:	inc    ecx
  41db89:	inc    ebx
  41db8a:	dec    ecx
  41db8b:	dec    edi
  41db8c:	push   edi
  41db8d:	inc    ecx
  41db8e:	inc    edi
  41db8f:	inc    edx
  41db90:	dec    edi
  41db91:	dec    ebp
  41db92:	inc    edi
  41db93:	pop    edx
  41db94:	pop    ebp
  41db95:	push   ebx
  41db96:	dec    ecx
  41db97:	inc    esp
  41db98:	inc    edx
  41db99:	dec    ecx
  41db9a:	inc    edi
  41db9b:	dec    esp
  41db9c:	push   ecx
  41db9d:	inc    ecx
  41db9e:	dec    esi
  41db9f:	dec    edx
  41dba0:	inc    ebp
  41dba1:	inc    esi
  41dba2:	dec    ebp
  41dba3:	push   edx
  41dba4:	push   ebp
  41dba5:	pop    edx
  41dba6:	dec    esi
  41dba7:	dec    edx
  41dba8:	dec    edx
  41dba9:	inc    ebp
  41dbaa:	inc    ebp
  41dbab:	inc    eax
  41dbac:	pop    edi
  41dbad:	inc    esp
  41dbae:	inc    eax
  41dbaf:	dec    ebp
  41dbb0:	dec    ecx
  41dbb1:	dec    ebp
  41dbb2:	dec    eax
  41dbb3:	push   eax
  41dbb4:	push   esp
  41dbb5:	pop    edx
  41dbb6:	dec    esi
  41dbb7:	dec    esp
  41dbb8:	dec    eax
  41dbb9:	dec    esp
  41dbba:	inc    esp
  41dbbb:	inc    eax
  41dbbc:	pop    eax
  41dbbd:	dec    esp
  41dbbe:	inc    edi
  41dbbf:	dec    eax
  41dbc0:	inc    esi
  41dbc1:	inc    esi
  41dbc2:	inc    esi
  41dbc3:	pop    esp
  41dbc4:	pop    eax
  41dbc5:	pop    esp
  41dbc6:	dec    ecx
  41dbc7:	inc    edx
  41dbc8:	inc    ebp
  41dbc9:	dec    ebx
  41dbca:	inc    ebx
  41dbcb:	dec    edi
  41dbcc:	push   edi
  41dbcd:	dec    esi
  41dbce:	inc    edx
  41dbcf:	inc    esp
  41dbd0:	inc    edi
  41dbd1:	dec    esp
  41dbd2:	inc    ebx
  41dbd3:	push   eax
  41dbd4:	pop    edx
  41dbd5:	push   ebp
  41dbd6:	inc    eax
  41dbd7:	inc    ebx
  41dbd8:	inc    edx
  41dbd9:	dec    edi
  41dbda:	inc    esp
  41dbdb:	dec    edi
  41dbdc:	push   ebx
  41dbdd:	inc    esi
  41dbde:	inc    ecx
  41dbdf:	dec    ebx
  41dbe0:	inc    ecx
  41dbe1:	dec    ebx
  41dbe2:	dec    edi
  41dbe3:	push   ecx
  41dbe4:	pop    ebp
  41dbe5:	pop    edi
  41dbe6:	inc    ecx
  41dbe7:	inc    edx
  41dbe8:	dec    ebp
  41dbe9:	dec    edx
  41dbea:	dec    ebp
  41dbeb:	dec    eax
  41dbec:	pop    edx
  41dbed:	inc    edx
  41dbee:	inc    esp
  41dbef:	dec    ecx
  41dbf0:	dec    ebx
  41dbf1:	dec    esi
  41dbf2:	inc    ebp
  41dbf3:	pop    esp
  41dbf4:	pop    edx
  41dbf5:	pop    ebx
  41dbf6:	inc    ecx
  41dbf7:	dec    ebx
  41dbf8:	inc    ecx
  41dbf9:	inc    ebx
  41dbfa:	inc    ecx
  41dbfb:	inc    edx
  41dbfc:	push   edx
  41dbfd:	dec    edi
  41dbfe:	dec    esp
  41dbff:	inc    edi
  41dc00:	dec    ecx
  41dc01:	inc    esp
  41dc02:	inc    edx
  41dc03:	pop    ebx
  41dc04:	push   eax
  41dc05:	pop    ebx
  41dc06:	inc    edx
  41dc07:	inc    ecx
  41dc08:	inc    esp
  41dc09:	inc    esi
  41dc0a:	inc    ebp
  41dc0b:	dec    ecx
  41dc0c:	push   esi
  41dc0d:	inc    esp
  41dc0e:	dec    eax
  41dc0f:	dec    edi
  41dc10:	dec    ebp
  41dc11:	dec    edi
  41dc12:	inc    esp
  41dc13:	push   eax
  41dc14:	push   edx
  41dc15:	push   ecx
  41dc16:	dec    ecx
  41dc17:	dec    esp
  41dc18:	inc    edx
  41dc19:	inc    edx
  41dc1a:	dec    esi
  41dc1b:	inc    ebx
  41dc1c:	push   esi
  41dc1d:	dec    esp
  41dc1e:	inc    esp
  41dc1f:	inc    ebx
  41dc20:	dec    ecx
  41dc21:	dec    ecx
  41dc22:	inc    esi
  41dc23:	pop    esp
  41dc24:	pop    eax
  41dc25:	push   edx
  41dc26:	dec    ebx
  41dc27:	inc    esi
  41dc28:	dec    ebx
  41dc29:	dec    ecx
  41dc2a:	inc    edx
  41dc2b:	inc    eax
  41dc2c:	push   ebp
  41dc2d:	dec    ebp
  41dc2e:	dec    ecx
  41dc2f:	dec    esp
  41dc30:	dec    edx
  41dc31:	inc    ecx
  41dc32:	inc    eax
  41dc33:	pop    edx
  41dc34:	pop    ebp
  41dc35:	push   eax
  41dc36:	dec    eax
  41dc37:	inc    esp
  41dc38:	inc    edx
  41dc39:	dec    ecx
  41dc3a:	dec    esi
  41dc3b:	inc    ebp
  41dc3c:	pop    esp
  41dc3d:	inc    esi
  41dc3e:	dec    esp
  41dc3f:	dec    esi
  41dc40:	dec    edi
  41dc41:	dec    edi
  41dc42:	inc    edx
  41dc43:	push   ecx
  41dc44:	pop    edi
  41dc45:	pop    ebp
  41dc46:	dec    esi
  41dc47:	inc    esp
  41dc48:	dec    esi
  41dc49:	dec    esp
  41dc4a:	dec    edi
  41dc4b:	dec    edi
  41dc4c:	pop    edx
  41dc4d:	dec    eax
  41dc4e:	inc    eax
  41dc4f:	dec    ebp
  41dc50:	inc    edx
  41dc51:	inc    esi
  41dc52:	dec    ebp
  41dc53:	push   ebp
  41dc54:	pop    ebp
  41dc55:	push   eax
  41dc56:	inc    edx
  41dc57:	inc    esp
  41dc58:	dec    ebx
  41dc59:	inc    esi
  41dc5a:	dec    ebx
  41dc5b:	dec    ecx
  41dc5c:	pop    ebx
  41dc5d:	inc    esp
  41dc5e:	inc    ecx
  41dc5f:	inc    edx
  41dc60:	inc    esp
  41dc61:	inc    ebp
  41dc62:	dec    ebp
  41dc63:	push   esp
  41dc64:	pop    eax
  41dc65:	pop    esp
  41dc66:	dec    esi
  41dc67:	dec    ebx
  41dc68:	dec    esp
  41dc69:	inc    ecx
  41dc6a:	dec    ebx
  41dc6b:	inc    eax
  41dc6c:	push   esi
  41dc6d:	dec    edx
  41dc6e:	inc    esp
  41dc6f:	inc    esp
  41dc70:	dec    ecx
  41dc71:	dec    edx
  41dc72:	inc    edi
  41dc73:	pop    esp
  41dc74:	pop    eax
  41dc75:	push   edi
  41dc76:	dec    edx
  41dc77:	dec    edi
  41dc78:	dec    edi
  41dc79:	inc    edx
  41dc7a:	inc    ebp
  41dc7b:	dec    esp
  41dc7c:	push   esi
  41dc7d:	dec    edx
  41dc7e:	inc    ebp
  41dc7f:	inc    ebx
  41dc80:	inc    ecx
  41dc81:	dec    ebp
  41dc82:	dec    ebp
  41dc83:	push   eax
  41dc84:	push   ebx
  41dc85:	push   edi
  41dc86:	inc    esp
  41dc87:	inc    ecx
  41dc88:	dec    esi
  41dc89:	dec    esi
  41dc8a:	inc    esi
  41dc8b:	inc    eax
  41dc8c:	push   eax
  41dc8d:	inc    edx
  41dc8e:	inc    edx
  41dc8f:	inc    edx
  41dc90:	dec    edx
  41dc91:	dec    esi
  41dc92:	inc    ebp
  41dc93:	pop    ebp
  41dc94:	cmp    BYTE PTR [ebx+ebp*1+0x77],ch
  41dc98:	ins    DWORD PTR es:[edi],dx
  41dc99:	inc    ebp
  41dc9a:	pusha  
  41dc9b:	xor    esp,DWORD PTR ds:0x70635a6b
  41dca1:	push   edi
  41dca2:	sub    ebp,DWORD PTR [esi+0x23]
  41dca5:	xor    eax,DWORD PTR [esi+0x25]
  41dca8:	sub    BYTE PTR [eax+0x45],bl
  41dcab:	sub    DWORD PTR [eax+edx*2],esp
  41dcae:	xor    BYTE PTR [edx+0x40],ch
  41dcb1:	sub    dl,BYTE PTR [ebp+0x5f]
  41dcb4:	popa   
  41dcb5:	pop    esp
  41dcb6:	jp     0x41dcf6
  41dcb8:	pop    ebx
  41dcb9:	sub    al,0x47
  41dcbb:	inc    esp
  41dcbc:	sub    WORD PTR ds:[eax+eax*2+0x2e],dx
  41dcc2:	cmp    al,0x6e
  41dcc4:	inc    edx
  41dcc5:	pop    edx
  41dcc6:	inc    ebx
  41dcc7:	pop    edx
  41dcc8:	pop    ecx
  41dcc9:	daa    
  41dcca:	pop    esi
  41dccb:	jge    0x41dd1d
  41dccd:	outs   dx,BYTE PTR ds:[esi]
  41dcce:	ja     0x41dd17
  41dcd0:	sub    BYTE PTR [ecx+0x30],ah
  41dcd3:	and    DWORD PTR [eax+0x5c],ebp
  41dcd6:	dec    esi
  41dcd7:	addr16 cmp al,0x21
  41dcda:	push   0x4b
  41dcdc:	push   esp
  41dcdd:	aaa    
  41dcde:	inc    ecx
  41dcdf:	dec    esp
  41dce0:	jbe    0x41dd52
  41dce2:	jo     0x41dd41
  41dce4:	ins    BYTE PTR es:[edi],dx
  41dce5:	jno    0x41dd5c
  41dce7:	push   0x38527740
  41dcec:	pop    eax
  41dced:	push   0x77215727
  41dcf2:	pusha  
  41dcf3:	es pop esi
  41dcf5:	xor    bl,BYTE PTR cs:[edx+0x45]
  41dcf9:	xor    edx,DWORD PTR [ebx+0x46]
  41dcfc:	sub    esi,DWORD PTR [esi]
  41dcfe:	cmp    DWORD PTR [esi],esp
  41dd00:	jae    0x41dd80
  41dd02:	push   0x3530395f
  41dd07:	arpl   WORD PTR [ecx+eax*2],si
  41dd0a:	outs   dx,DWORD PTR ds:[esi]
  41dd0b:	dec    eax
  41dd0c:	push   esi
  41dd0d:	js     0x41dd80
  41dd0f:	push   eax
  41dd10:	and    ah,BYTE PTR [esi+esi*1+0x5c]
  41dd14:	xor    al,0x45
  41dd16:	ins    DWORD PTR es:[edi],dx
  41dd17:	inc    esi
  41dd18:	inc    ebx
  41dd19:	addr16 daa 
  41dd1b:	jo     0x41dd57
  41dd1d:	js     0x41dd96
  41dd1f:	xor    BYTE PTR [edx+0x60],bh
  41dd22:	ds ins BYTE PTR es:[edi],dx
  41dd24:	cmp    DWORD PTR [ebx+0x3e],esp
  41dd27:	ins    BYTE PTR es:[edi],dx
  41dd28:	jae    0x41dd9b
  41dd2a:	dec    esp
  41dd2b:	jae    0x41dd9b
  41dd2d:	inc    sp
  41dd2f:	push   ebp
  41dd30:	cmp    eax,0x48216543
  41dd35:	sub    bh,BYTE PTR [ecx]
  41dd37:	cs jp  0x41dd7e
  41dd3a:	push   esi
  41dd3b:	inc    edx
  41dd3c:	and    bh,BYTE PTR [edi+0x5b]
  41dd3f:	sub    eax,0x5e7f607c
  41dd44:	cmp    BYTE PTR [eax+esi*1+0x48],ah
  41dd48:	dec    edi
  41dd49:	pop    edx
  41dd4a:	inc    ecx
  41dd4b:	dec    ebp
  41dd4c:	dec    ecx
  41dd4d:	dec    eax
  41dd4e:	jl     0x41ddad
  41dd50:	ss jno 0x41dd9a
  41dd53:	push   ebx
  41dd54:	ja     0x41dda0
  41dd56:	ins    DWORD PTR es:[edi],dx
  41dd57:	inc    esp
  41dd58:	je     0x41ddd0
  41dd5a:	push   0x6b6c2f79
  41dd5f:	jp     0x41dd97
  41dd61:	imul   ebp,DWORD PTR ds:0x6d495a51,0x62
  41dd69:	xor    DWORD PTR [eax+0x4a],edx
  41dd6c:	dec    ecx
  41dd6d:	dec    edx
  41dd6e:	cmp    eax,0x6e674b3a
  41dd73:	bound  esi,QWORD PTR [edi]
  41dd75:	jns    0x41ddea
  41dd77:	dec    eax
  41dd78:	jae    0x41ddb1
  41dd7a:	daa    
  41dd7b:	dec    ebx
  41dd7c:	xor    ch,BYTE PTR [edi]
  41dd7e:	jbe    0x41ddb8
  41dd80:	sub    esp,DWORD PTR [eax+edx*2]
  41dd83:	xor    dl,BYTE PTR [esi+0x53]
  41dd86:	pusha  
  41dd87:	jl     0x41ddec
  41dd89:	jp     0x41ddb8
  41dd8b:	inc    ebp
  41dd8c:	and    DWORD PTR [esi+0x4f],edx
  41dd8f:	pop    ebp
  41dd90:	jae    0x41dddd
  41dd92:	push   edi
  41dd93:	cmp    al,0x6f
  41dd95:	cs jne 0x41dde5
  41dd98:	jp     0x41ddf3
  41dd9a:	dec    edi
  41dd9b:	and    esp,DWORD PTR [ebp+edi*1+0x3c]
  41dd9f:	jno    0x41ddd3
  41dda1:	outs   dx,BYTE PTR ds:[esi]
  41dda2:	sub    edx,DWORD PTR [edi+0x29]
  41dda5:	sub    BYTE PTR [ebx],ah
  41dda7:	dec    edx
  41dda8:	pop    ebp
  41dda9:	gs dec ecx
  41ddab:	push   ebx
  41ddac:	push   esi
  41ddad:	jno    0x41de06
  41ddaf:	sub    eax,0x2147254b
  41ddb4:	cmp    eax,0x28665c3b
  41ddb9:	pop    ecx
  41ddba:	inc    ebx
  41ddbb:	jbe    0x41de06
  41ddbd:	xor    BYTE PTR [ecx],dh
  41ddbf:	and    eax,0x324b2057
  41ddc4:	arpl   WORD PTR [esp+ebp*2+0x3b],ax
  41ddc8:	sub    DWORD PTR [esi],edi
  41ddca:	and    al,0x48
  41ddcc:	aas    
  41ddcd:	sub    eax,0x7a333756
  41ddd2:	ja     0x41de0f
  41ddd4:	xor    bl,BYTE PTR [ebp+0x24]
  41ddd7:	aas    
  41ddd8:	arpl   WORD PTR [ebx],bp
  41ddda:	addr16 pop esi
  41dddc:	sub    al,0x21
  41ddde:	dec    eax
  41dddf:	jg     0x41de2d
  41dde1:	bound  edx,QWORD PTR [ebx+0x4b]
  41dde4:	ins    BYTE PTR es:[edi],dx
  41dde5:	inc    eax
  41dde6:	data16 outs dx,BYTE PTR ds:[esi]
  41dde8:	sub    ecx,DWORD PTR [edi+0x73]
  41ddeb:	sub    al,0x63
  41dded:	dec    edx
  41ddee:	outs   dx,DWORD PTR cs:[esi]
  41ddf0:	dec    edi
  41ddf1:	inc    edx
  41ddf2:	ins    DWORD PTR es:[edi],dx
  41ddf3:	sub    DWORD PTR [edx+0x2a],ebx
  41ddf6:	jge    0x41de34
  41ddf8:	push   ecx
  41ddf9:	pop    esi
  41ddfa:	ins    DWORD PTR es:[edi],dx
  41ddfb:	jbe    0x41de2b
  41ddfd:	push   esp
  41ddfe:	inc    ecx
  41ddff:	aas    
  41de00:	je     0x41de45
  41de02:	and    DWORD PTR [edi],ebp
  41de04:	es ds aaa 
  41de07:	jne    0x41de3b
  41de09:	ins    BYTE PTR es:[edi],dx
  41de0a:	ss pusha 
  41de0c:	inc    esp
  41de0d:	cmp    dl,BYTE PTR [ebx+0x42]
  41de10:	add    BYTE PTR [edx+0x74],ah
  41de13:	repnz mov esi,DWORD PTR [eax]
  41de16:	mov    edi,0x45ff2af5
  41de1b:	xchg   edx,eax
  41de1c:	into   
  41de1d:	push   0x455a5053
  41de22:	sbb    eax,0x4b
  41de25:	and    eax,DWORD PTR [ebp+0x0]
  41de28:	dec    DWORD PTR [ebx-0x3aa8932]
  41de2e:	sti    
  41de2f:	mov    eax,fs:0x17a6863
  41de35:	js     0x41de6f
  41de37:	mov    ax,ax
  41de3a:	xor    al,0x26
  41de3c:	jge    0x41de4e
  41de3e:	addr16 push eax
  41de40:	and    DWORD PTR [si+0x30],esp
  41de44:	xchg   edx,eax
  41de45:	or     ah,BYTE PTR [edx-0x1]
  41de48:	sar    ah,0x47
  41de4b:	cmc    
  41de4c:	cld    
  41de4d:	lea    edi,[eax]
  41de4f:	jae    0x41de50
  41de51:	push   edi
  41de52:	xchg   edx,eax
  41de53:	ror    BYTE PTR gs:[ecx+0x50005650],1
  41de5a:	jb     0x41de58
  41de5c:	push   edi
  41de5d:	js     0x41de59
  41de5f:	add    DWORD PTR ss:[ebp+0x19],edx
  41de63:	ja     0x41ded2
  41de65:	inc    DWORD PTR [eax+0x6a]
  41de68:	push   ebp
  41de69:	and    DWORD PTR [eax+0x792489fa],ecx
  41de6f:	sub    ebp,DWORD PTR [eax-0x6]
  41de72:	ins    DWORD PTR es:[edi],dx
  41de73:	inc    ebp
  41de74:	add    BYTE PTR [ebx+0x0],dl
  41de77:	outs   dx,DWORD PTR ds:[esi]
  41de78:	push   ebp
  41de7a:	push   ds
  41de7b:	mov    eax,DWORD PTR [ebp+0x45]
  41de7e:	jbe    0x41defd
  41de80:	mov    edi,edx
  41de82:	dec    esp
  41de83:	jo     0x41de81
  41de85:	pop    edi
  41de86:	jmp    FWORD PTR [eax-0x8]
  41de89:	inc    ebp
  41de8a:	push   edi
  41de8b:	es jnp 0x41de8e
  41de8e:	add    BYTE PTR [eax+0x24],al
  41de91:	xor    BYTE PTR [eax+eiz*1],dh
  41de94:	inc    edi
  41de95:	sub    edi,DWORD PTR [ebx-0x15]
  41de98:	mov    edi,ebx
  41de9a:	jmp    0x41ded2
  41de9c:	sbb    esp,DWORD PTR [ecx-0x5ccb799]
  41dea2:	call   0x35877632
  41dea7:	dec    edx
  41dea8:	daa    
  41dea9:	call   0x4674df05
  41deae:	push   esi
  41deaf:	add    DWORD PTR [eax+0x72],0x55
  41deb3:	push   ebx
  41deb4:	js     0x41deb6
  41deb6:	push   esi
  41deb7:	push   eax
  41deb8:	stc    
  41deb9:	mov    esp,DWORD PTR [ecx-0x13d10600]
  41debf:	mov    dl,bh
  41dec1:	cli    
  41dec2:	(bad)  
  41dec3:	cli    
  41dec4:	dec    edi
  41dec5:	into   
  41dec6:	outs   dx,BYTE PTR ds:[esi]
  41dec7:	or     al,0x8b
  41dec9:	daa    
  41deca:	mov    edi,0x395445
  41decf:	push   ebx
  41ded0:	jmp    FWORD PTR [eax]
  41ded2:	in     al,dx
  41ded3:	push   0xffffffff
  41ded5:	js     0x41dee3
  41ded7:	inc    ebp
  41ded8:	cli    
  41ded9:	addr16 call 0xff4de20c
  41dedf:	call   0xecc2a355
  41dee4:	pop    eax
  41dee5:	inc    cx
  41dee7:	inc    edx
  41dee8:	sub    eax,0x464f9708
  41deed:	xor    dh,cl
  41deef:	xchg   edx,eax
  41def0:	(bad)  
  41def1:	clc    
  41def2:	jb     0x41df39
  41def4:	and    DWORD PTR [edi],esi
  41def6:	push   esi
  41def7:	push   esi
  41def8:	push   0x58
  41defa:	jae    0x41df53
  41defc:	inc    ebp
  41defd:	(bad)  
  41defe:	call   0x35bb2748
  41df03:	pop    edi
  41df04:	inc    eax
  41df05:	inc    esi
  41df06:	mov    DWORD PTR [ebx-0x7d],esp
  41df09:	dec    edi
  41df0a:	push   0x53
  41df0c:	shr    BYTE PTR ds:0x8b550000,1
  41df12:	in     al,dx
  41df13:	xor    eax,eax
  41df15:	push   ebp
  41df16:	push   0x41df35
  41df1b:	push   DWORD PTR fs:[eax]
  41df1e:	mov    DWORD PTR fs:[eax],esp
  41df21:	inc    DWORD PTR ds:0x42f674
  41df27:	xor    eax,eax
  41df29:	pop    edx
  41df2a:	pop    ecx
  41df2b:	pop    ecx
  41df2c:	mov    DWORD PTR fs:[eax],edx
  41df2f:	push   0x41df3c
  41df34:	ret    
  41df35:	jmp    0x4036ac
  41df3a:	jmp    0x41df34
  41df3c:	pop    ebp
  41df3d:	ret    
  41df3e:	mov    eax,eax
  41df40:	sub    DWORD PTR ds:0x42f674,0x1
  41df47:	ret    
  41df48:	push   ebp
  41df49:	mov    ebp,esp
  41df4b:	xor    eax,eax
  41df4d:	push   ebp
  41df4e:	push   0x41df6d
  41df53:	push   DWORD PTR fs:[eax]
  41df56:	mov    DWORD PTR fs:[eax],esp
  41df59:	inc    DWORD PTR ds:0x42f678
  41df5f:	xor    eax,eax
  41df61:	pop    edx
  41df62:	pop    ecx
  41df63:	pop    ecx
  41df64:	mov    DWORD PTR fs:[eax],edx
  41df67:	push   0x41df74
  41df6c:	ret    
  41df6d:	jmp    0x4036ac
  41df72:	jmp    0x41df6c
  41df74:	pop    ebp
  41df75:	ret    
  41df76:	mov    eax,eax
  41df78:	sub    DWORD PTR ds:0x42f678,0x1
  41df7f:	ret    
  41df80:	pusha  
  41df81:	test   BYTE PTR [edx+0x0],0xf0
  41df85:	inc    DWORD PTR [eax]
  41df87:	add    BYTE PTR [eax-0xa],ah
  41df8a:	inc    edx
  41df8b:	add    cl,dh
  41df8d:	inc    DWORD PTR [eax]
  41df8f:	add    BYTE PTR [eax-0xa],ah
  41df92:	inc    edx
  41df93:	add    dl,dh
  41df95:	inc    DWORD PTR [eax]
  41df97:	add    BYTE PTR [eax-0xa],ah
  41df9a:	inc    edx
  41df9b:	add    bl,dh
  41df9d:	inc    DWORD PTR [eax]
  41df9f:	add    BYTE PTR [eax-0xa],ah
  41dfa2:	inc    edx
  41dfa3:	add    ah,dh
  41dfa5:	inc    DWORD PTR [eax]
  41dfa7:	add    BYTE PTR [eax-0xa],ah
  41dfaa:	inc    edx
  41dfab:	add    ch,dh
  41dfad:	inc    DWORD PTR [eax]
  41dfaf:	add    BYTE PTR [eax-0xa],ah
  41dfb2:	inc    edx
  41dfb3:	add    dh,dh
  41dfb5:	inc    DWORD PTR [eax]
  41dfb7:	add    BYTE PTR [eax-0xa],ah
  41dfba:	inc    edx
  41dfbb:	add    bh,dh
  41dfbd:	inc    DWORD PTR [eax]
  41dfbf:	add    BYTE PTR [eax-0xa],ah
  41dfc2:	inc    edx
  41dfc3:	add    al,bh
  41dfc5:	inc    DWORD PTR [eax]
  41dfc7:	add    BYTE PTR [eax-0xa],ah
  41dfca:	inc    edx
  41dfcb:	add    cl,bh
  41dfcd:	inc    DWORD PTR [eax]
  41dfcf:	add    BYTE PTR [eax-0xa],ah
  41dfd2:	inc    edx
  41dfd3:	add    dl,bh
  41dfd5:	inc    DWORD PTR [eax]
  41dfd7:	add    BYTE PTR [eax-0xa],ah
  41dfda:	inc    edx
  41dfdb:	add    bl,bh
  41dfdd:	inc    DWORD PTR [eax]
  41dfdf:	add    BYTE PTR [eax-0xa],ah
  41dfe2:	inc    edx
  41dfe3:	add    ah,bh
  41dfe5:	inc    DWORD PTR [eax]
  41dfe7:	add    BYTE PTR [eax-0xa],ah
  41dfea:	inc    edx
  41dfeb:	add    ch,bh
  41dfed:	inc    DWORD PTR [eax]
  41dfef:	add    BYTE PTR [eax-0xa],ah
  41dff2:	inc    edx
  41dff3:	add    dh,bh
  41dff5:	inc    DWORD PTR [eax]
  41dff7:	add    BYTE PTR [eax-0xa],ah
  41dffa:	inc    edx
  41dffb:	add    bh,bh
  41dffd:	inc    DWORD PTR [eax]
  41dfff:	add    BYTE PTR [eax-0xa],ah
  41e002:	inc    edx
  41e003:	add    al,ah
  41e005:	inc    DWORD PTR [eax]
  41e007:	add    BYTE PTR [eax-0xa],ah
  41e00a:	inc    edx
  41e00b:	add    cl,ah
  41e00d:	inc    DWORD PTR [eax]
  41e00f:	add    BYTE PTR [eax-0xa],ah
  41e012:	inc    edx
  41e013:	add    dl,ah
  41e015:	inc    DWORD PTR [eax]
  41e017:	add    BYTE PTR [eax-0xa],ah
  41e01a:	inc    edx
  41e01b:	add    bl,ah
  41e01d:	inc    DWORD PTR [eax]
  41e01f:	add    BYTE PTR [eax-0xa],ah
  41e022:	inc    edx
  41e023:	add    ah,ah
  41e025:	inc    DWORD PTR [eax]
  41e027:	add    BYTE PTR [eax-0xa],ah
  41e02a:	inc    edx
  41e02b:	add    ch,ah
  41e02d:	inc    DWORD PTR [eax]
  41e02f:	add    BYTE PTR [eax-0xa],ah
  41e032:	inc    edx
  41e033:	add    dh,ah
  41e035:	inc    DWORD PTR [eax]
  41e037:	add    BYTE PTR [eax-0xa],ah
  41e03a:	inc    edx
  41e03b:	add    bh,ah
  41e03d:	inc    DWORD PTR [eax]
  41e03f:	add    BYTE PTR [eax-0xa],ah
  41e042:	inc    edx
  41e043:	add    al,ch
  41e045:	inc    DWORD PTR [eax]
  41e047:	add    BYTE PTR [eax-0xa],ah
  41e04a:	inc    edx
  41e04b:	add    cl,ch
  41e04d:	inc    DWORD PTR [eax]
  41e04f:	add    BYTE PTR [eax-0xa],ah
  41e052:	inc    edx
  41e053:	add    dl,ch
  41e055:	inc    DWORD PTR [eax]
  41e057:	add    BYTE PTR [eax-0xa],ah
  41e05a:	inc    edx
  41e05b:	add    bl,ch
  41e05d:	inc    DWORD PTR [eax]
  41e05f:	add    BYTE PTR [eax-0xa],ah
  41e062:	inc    edx
  41e063:	add    ah,ch
  41e065:	inc    DWORD PTR [eax]
  41e067:	add    BYTE PTR [eax-0xa],ah
  41e06a:	inc    edx
  41e06b:	add    ch,ch
  41e06d:	inc    DWORD PTR [eax]
  41e06f:	add    BYTE PTR [eax-0xa],ah
  41e072:	inc    edx
  41e073:	add    dh,ch
  41e075:	inc    DWORD PTR [eax]
  41e077:	add    BYTE PTR [eax-0xa],ah
  41e07a:	inc    edx
  41e07b:	add    bh,ch
  41e07d:	inc    DWORD PTR [eax]
  41e07f:	add    BYTE PTR [eax-0xa],ah
  41e082:	inc    edx
  41e083:	add    al,dl
  41e085:	inc    DWORD PTR [eax]
  41e087:	add    BYTE PTR [eax-0xa],ah
  41e08a:	inc    edx
  41e08b:	add    cl,dl
  41e08d:	inc    DWORD PTR [eax]
  41e08f:	add    BYTE PTR [eax-0xa],ah
  41e092:	inc    edx
  41e093:	add    dl,dl
  41e095:	inc    DWORD PTR [eax]
  41e097:	add    BYTE PTR [eax-0xa],ah
  41e09a:	inc    edx
  41e09b:	add    bl,dl
  41e09d:	inc    DWORD PTR [eax]
  41e09f:	add    BYTE PTR [eax-0xa],ah
  41e0a2:	inc    edx
  41e0a3:	add    ah,dl
  41e0a5:	inc    DWORD PTR [eax]
  41e0a7:	add    BYTE PTR [eax-0xa],ah
  41e0aa:	inc    edx
  41e0ab:	add    ch,dl
  41e0ad:	inc    DWORD PTR [eax]
  41e0af:	add    BYTE PTR [eax-0xa],ah
  41e0b2:	inc    edx
  41e0b3:	add    dh,dl
  41e0b5:	inc    DWORD PTR [eax]
  41e0b7:	add    BYTE PTR [eax-0xa],ah
  41e0ba:	inc    edx
  41e0bb:	add    bh,dl
  41e0bd:	inc    DWORD PTR [eax]
  41e0bf:	add    BYTE PTR [eax-0xa],ah
  41e0c2:	inc    edx
  41e0c3:	add    al,bl
  41e0c5:	inc    DWORD PTR [eax]
  41e0c7:	add    BYTE PTR [eax-0xa],ah
  41e0ca:	inc    edx
  41e0cb:	add    cl,bl
  41e0cd:	inc    DWORD PTR [eax]
  41e0cf:	add    BYTE PTR [eax-0xa],ah
  41e0d2:	inc    edx
  41e0d3:	add    dl,bl
  41e0d5:	inc    DWORD PTR [eax]
  41e0d7:	add    BYTE PTR [eax-0xa],ah
  41e0da:	inc    edx
  41e0db:	add    bl,bl
  41e0dd:	inc    DWORD PTR [eax]
  41e0df:	add    BYTE PTR [eax-0xa],ah
  41e0e2:	inc    edx
  41e0e3:	add    ah,bl
  41e0e5:	inc    DWORD PTR [eax]
  41e0e7:	add    BYTE PTR [eax-0xa],ah
  41e0ea:	inc    edx
  41e0eb:	add    ch,bl
  41e0ed:	inc    DWORD PTR [eax]
  41e0ef:	add    BYTE PTR [eax-0xa],ah
  41e0f2:	inc    edx
  41e0f3:	add    dh,bl
  41e0f5:	inc    DWORD PTR [eax]
  41e0f7:	add    BYTE PTR [eax-0xa],ah
  41e0fa:	inc    edx
  41e0fb:	add    bh,bl
  41e0fd:	inc    DWORD PTR [eax]
  41e0ff:	add    BYTE PTR [eax-0xa],ah
  41e102:	inc    edx
  41e103:	add    al,al
  41e105:	inc    DWORD PTR [eax]
  41e107:	add    BYTE PTR [eax-0xa],ah
  41e10a:	inc    edx
  41e10b:	add    cl,al
  41e10d:	inc    DWORD PTR [eax]
  41e10f:	add    BYTE PTR [eax-0xa],ah
  41e112:	inc    edx
  41e113:	add    dl,al
  41e115:	inc    DWORD PTR [eax]
  41e117:	add    BYTE PTR [eax-0xa],ah
  41e11a:	inc    edx
  41e11b:	add    bl,al
  41e11d:	inc    DWORD PTR [eax]
  41e11f:	add    BYTE PTR [eax-0xa],ah
  41e122:	inc    edx
  41e123:	add    ah,al
  41e125:	inc    DWORD PTR [eax]
  41e127:	add    BYTE PTR [eax-0xa],ah
  41e12a:	inc    edx
  41e12b:	add    ch,al
  41e12d:	inc    DWORD PTR [eax]
  41e12f:	add    BYTE PTR [eax-0xa],ah
  41e132:	inc    edx
  41e133:	add    dh,al
  41e135:	inc    DWORD PTR [eax]
  41e137:	add    BYTE PTR [eax-0xa],ah
  41e13a:	inc    edx
  41e13b:	add    bh,al
  41e13d:	inc    DWORD PTR [eax]
  41e13f:	add    BYTE PTR [eax-0xa],ah
  41e142:	inc    edx
  41e143:	add    al,cl
  41e145:	inc    DWORD PTR [eax]
  41e147:	add    BYTE PTR [eax-0xa],ah
  41e14a:	inc    edx
  41e14b:	add    cl,cl
  41e14d:	inc    DWORD PTR [eax]
  41e14f:	add    BYTE PTR [eax-0xa],ah
  41e152:	inc    edx
  41e153:	add    dl,cl
  41e155:	inc    DWORD PTR [eax]
  41e157:	add    BYTE PTR [eax-0xa],ah
  41e15a:	inc    edx
  41e15b:	add    bl,cl
  41e15d:	inc    DWORD PTR [eax]
  41e15f:	add    BYTE PTR [eax-0xa],ah
  41e162:	inc    edx
  41e163:	add    ah,cl
  41e165:	inc    DWORD PTR [eax]
  41e167:	add    BYTE PTR [eax-0xa],ah
  41e16a:	inc    edx
  41e16b:	add    ch,cl
  41e16d:	inc    DWORD PTR [eax]
  41e16f:	add    BYTE PTR [eax-0xa],ah
  41e172:	inc    edx
  41e173:	add    dh,cl
  41e175:	inc    DWORD PTR [eax]
  41e177:	add    BYTE PTR [eax-0xa],ah
  41e17a:	inc    edx
  41e17b:	add    bh,cl
  41e17d:	inc    DWORD PTR [eax]
  41e17f:	add    BYTE PTR [eax-0xa],ah
  41e182:	inc    edx
  41e183:	add    BYTE PTR [eax+0x600000ff],dh
  41e189:	test   BYTE PTR [edx+0x0],0xb1
  41e18d:	inc    DWORD PTR [eax]
  41e18f:	add    BYTE PTR [eax-0xa],ah
  41e192:	inc    edx
  41e193:	add    BYTE PTR [edx+0x600000ff],dh
  41e199:	test   BYTE PTR [edx+0x0],0xb3
  41e19d:	inc    DWORD PTR [eax]
  41e19f:	add    BYTE PTR [eax-0xa],ah
  41e1a2:	inc    edx
  41e1a3:	add    BYTE PTR [edi+edi*8-0x9a00000],dh
  41e1aa:	inc    edx
  41e1ab:	add    BYTE PTR [ebp+0x600000ff],dh
  41e1b1:	test   BYTE PTR [edx+0x0],0xb6
  41e1b5:	inc    DWORD PTR [eax]
  41e1b7:	add    BYTE PTR [eax-0xa],ah
  41e1ba:	inc    edx
  41e1bb:	add    BYTE PTR [edi+0x600000ff],dh
  41e1c1:	test   BYTE PTR [edx+0x0],0xb8
  41e1c5:	inc    DWORD PTR [eax]
  41e1c7:	add    BYTE PTR [eax-0xa],ah
  41e1ca:	inc    edx
  41e1cb:	add    BYTE PTR [ecx+0x600000ff],bh
  41e1d1:	test   BYTE PTR [edx+0x0],0xba
  41e1d5:	inc    DWORD PTR [eax]
  41e1d7:	add    BYTE PTR [eax-0xa],ah
  41e1da:	inc    edx
  41e1db:	add    BYTE PTR [ebx+0x600000ff],bh
  41e1e1:	test   BYTE PTR [edx+0x0],0xbc
  41e1e5:	inc    DWORD PTR [eax]
  41e1e7:	add    BYTE PTR [eax-0xa],ah
  41e1ea:	inc    edx
  41e1eb:	add    BYTE PTR [ebp+0x600000ff],bh
  41e1f1:	test   BYTE PTR [edx+0x0],0xbe
  41e1f5:	inc    DWORD PTR [eax]
  41e1f7:	add    BYTE PTR [eax-0xa],ah
  41e1fa:	inc    edx
  41e1fb:	add    BYTE PTR [edi+0x600000ff],bh
  41e201:	test   BYTE PTR [edx+0x0],0xa0
  41e205:	inc    DWORD PTR [eax]
  41e207:	add    BYTE PTR [eax-0xa],ah
  41e20a:	inc    edx
  41e20b:	add    BYTE PTR [ecx+0x600000ff],ah
  41e211:	test   BYTE PTR [edx+0x0],0xa2
  41e215:	inc    DWORD PTR [eax]
  41e217:	add    BYTE PTR [eax-0xa],ah
  41e21a:	inc    edx
  41e21b:	add    BYTE PTR [ebx+0x600000ff],ah
  41e221:	test   BYTE PTR [edx+0x0],0xa4
  41e225:	inc    DWORD PTR [eax]
  41e227:	add    BYTE PTR [eax-0xa],ah
  41e22a:	inc    edx
  41e22b:	add    BYTE PTR [ebp+0x600000ff],ah
  41e231:	test   BYTE PTR [edx+0x0],0xa6
  41e235:	inc    DWORD PTR [eax]
  41e237:	add    BYTE PTR [eax-0xa],ah
  41e23a:	inc    edx
  41e23b:	add    BYTE PTR [edi+0x600000ff],ah
  41e241:	test   BYTE PTR [edx+0x0],0xa8
  41e245:	inc    DWORD PTR [eax]
  41e247:	add    BYTE PTR [eax-0xa],ah
  41e24a:	inc    edx
  41e24b:	add    BYTE PTR [ecx+0x550000ff],ch
  41e251:	mov    ebp,esp
  41e253:	xor    eax,eax
  41e255:	push   ebp
  41e256:	push   0x41e275
  41e25b:	push   DWORD PTR fs:[eax]
  41e25e:	mov    DWORD PTR fs:[eax],esp
  41e261:	inc    DWORD PTR ds:0x42f67c
  41e267:	xor    eax,eax
  41e269:	pop    edx
  41e26a:	pop    ecx
  41e26b:	pop    ecx
  41e26c:	mov    DWORD PTR fs:[eax],edx
  41e26f:	push   0x41e27c
  41e274:	ret    
  41e275:	jmp    0x4036ac
  41e27a:	jmp    0x41e274
  41e27c:	pop    ebp
  41e27d:	ret    
  41e27e:	mov    eax,eax
  41e280:	sub    DWORD PTR ds:0x42f67c,0x1
  41e287:	ret    
  41e288:	aam    0xe2
  41e28a:	inc    ecx
	...
  41e293:	add    ah,dl
  41e295:	loop   0x41e2d8
	...
  41e2a7:	add    dh,ah
  41e2a9:	loop   0x41e2ec
  41e2ab:	add    BYTE PTR [eax+eax*1],cl
  41e2ae:	add    BYTE PTR [eax],al
  41e2b0:	or     al,0x10
  41e2b2:	inc    eax
  41e2b3:	add    ah,bl
  41e2b5:	xor    eax,DWORD PTR [eax+0x0]
  41e2b8:	call   0xec4222f0
  41e2bd:	xor    eax,DWORD PTR [eax+0x0]
  41e2c0:	lock xor eax,DWORD PTR [eax+0x0]
  41e2c4:	in     al,0x33
  41e2c6:	inc    eax
  41e2c7:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41e2cb:	add    BYTE PTR [eax+0x31],bh
  41e2ce:	inc    eax
  41e2cf:	add    BYTE PTR [ecx+esi*1+0xe0040],dh
  41e2d6:	add    BYTE PTR [eax],al
  41e2d8:	add    BYTE PTR [eax],al
  41e2da:	add    DWORD PTR [eax],eax
  41e2dc:	add    BYTE PTR [eax],al
  41e2de:	add    BYTE PTR [eax],dl
  41e2e0:	inc    eax
  41e2e1:	add    BYTE PTR [eax+eax*1],al
  41e2e4:	add    BYTE PTR [eax],al
  41e2e6:	or     DWORD PTR [ebp+0x78],eax
  41e2e9:	arpl   WORD PTR [ebp+0x70],sp
  41e2ec:	je     0x41e357
  41e2ee:	outs   dx,DWORD PTR ds:[esi]
  41e2ef:	outs   dx,BYTE PTR ds:[esi]
  41e2f0:	cmp    al,0xe3
  41e2f2:	inc    ecx
	...
  41e30f:	add    BYTE PTR [ebx+eiz*8],bh
  41e312:	inc    ecx
  41e313:	add    BYTE PTR [eax],dl
  41e315:	add    BYTE PTR [eax],al
  41e317:	add    BYTE PTR [eax-0x23ffbe1e],cl
  41e31d:	xor    eax,DWORD PTR [eax+0x0]
  41e320:	call   0xec422358
  41e325:	xor    eax,DWORD PTR [eax+0x0]
  41e328:	lock xor eax,DWORD PTR [eax+0x0]
  41e32c:	in     al,0x33
  41e32e:	inc    eax
  41e32f:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41e333:	add    BYTE PTR [esi+eiz*1+0x42],cl
  41e337:	add    BYTE PTR [ecx+esi*1+0x450e0040],dh
  41e33e:	dec    eax
  41e33f:	gs popa 
  41e341:	jo     0x41e388
  41e343:	js     0x41e3a8
  41e345:	gs jo  0x41e3bc
  41e348:	imul   ebp,DWORD PTR [edi+0x6e],0x41e39890
	...
  41e36b:	add    BYTE PTR [eax+0x100041e3],bl
  41e371:	add    BYTE PTR [eax],al
  41e373:	add    al,dh
  41e375:	loop   0x41e3b8
  41e377:	add    ah,bl
  41e379:	xor    eax,DWORD PTR [eax+0x0]
  41e37c:	call   0xec4223b4
  41e381:	xor    eax,DWORD PTR [eax+0x0]
  41e384:	lock xor eax,DWORD PTR [eax+0x0]
  41e388:	in     al,0x33
  41e38a:	inc    eax
  41e38b:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41e38f:	add    BYTE PTR [esi+eiz*1+0x42],cl
  41e393:	add    BYTE PTR [ecx+esi*1+0x450c0040],dh
  41e39a:	dec    edi
  41e39b:	jne    0x41e411
  41e39d:	dec    edi
  41e39e:	dec    bp
  41e3a0:	gs ins DWORD PTR es:[edi],dx
  41e3a2:	outs   dx,DWORD PTR ds:[esi]
  41e3a3:	jb     0x41e41e
  41e3a5:	lea    eax,[eax+0x0]
  41e3a8:	hlt    
  41e3a9:	jecxz  0x41e3ec
	...
  41e3c7:	add    ah,dh
  41e3c9:	jecxz  0x41e40c
  41e3cb:	add    BYTE PTR [eax],dl
  41e3cd:	add    BYTE PTR [eax],al
  41e3cf:	add    BYTE PTR [eax-0x23ffbe1e],cl
  41e3d5:	xor    eax,DWORD PTR [eax+0x0]
  41e3d8:	call   0xec422410
  41e3dd:	xor    eax,DWORD PTR [eax+0x0]
  41e3e0:	lock xor eax,DWORD PTR [eax+0x0]
  41e3e4:	in     al,0x33
  41e3e6:	inc    eax
  41e3e7:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41e3eb:	add    BYTE PTR [eax+0x31],bh
  41e3ee:	inc    eax
  41e3ef:	add    BYTE PTR [ecx+esi*1+0x450b0040],dh
  41e3f6:	dec    ecx
  41e3f7:	outs   dx,BYTE PTR ds:[esi]
  41e3f8:	dec    edi
  41e3f9:	jne    0x41e46f
  41e3fb:	inc    ebp
  41e3fc:	jb     0x41e470
  41e3fe:	outs   dx,DWORD PTR ds:[esi]
  41e3ff:	jb     0x41e44d
  41e401:	in     al,0x41
	...
  41e41f:	add    BYTE PTR [esp+eiz*8+0x41],cl
  41e423:	add    BYTE PTR [eax],dl
  41e425:	add    BYTE PTR [eax],al
  41e427:	add    BYTE PTR [eax-0x23ffbe1e],cl
  41e42d:	xor    eax,DWORD PTR [eax+0x0]
  41e430:	call   0xec422468
  41e435:	xor    eax,DWORD PTR [eax+0x0]
  41e438:	lock xor eax,DWORD PTR [eax+0x0]
  41e43c:	in     al,0x33
  41e43e:	inc    eax
  41e43f:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41e443:	add    BYTE PTR [eax+0x31],bh
  41e446:	inc    eax
  41e447:	add    BYTE PTR [ecx+esi*1+0x45090040],dh
  41e44e:	inc    ebp
  41e44f:	js     0x41e4c5
  41e451:	gs jb  0x41e4c2
  41e454:	popa   
  41e455:	ins    BYTE PTR es:[edi],dx
  41e456:	mov    eax,eax
  41e458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e459:	in     al,0x41
	...
  41e477:	add    BYTE PTR [esp+eiz*8+0x100041],ah
  41e47e:	add    BYTE PTR [eax],al
  41e480:	add    ah,ah
  41e482:	inc    ecx
  41e483:	add    ah,bl
  41e485:	xor    eax,DWORD PTR [eax+0x0]
  41e488:	call   0xec4224c0
  41e48d:	xor    eax,DWORD PTR [eax+0x0]
  41e490:	lock xor eax,DWORD PTR [eax+0x0]
  41e494:	in     al,0x33
  41e496:	inc    eax
  41e497:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41e49b:	add    BYTE PTR [eax+0x31],bh
  41e49e:	inc    eax
  41e49f:	add    BYTE PTR [ecx+esi*1+0x45120040],dh
  41e4a6:	inc    ebp
  41e4a7:	js     0x41e51d
  41e4a9:	gs jb  0x41e51a
  41e4ac:	popa   
  41e4ad:	ins    BYTE PTR es:[edi],dx
  41e4ae:	inc    ebp
  41e4af:	js     0x41e514
  41e4b1:	gs jo  0x41e528
  41e4b4:	imul   ebp,DWORD PTR [edi+0x6e],0x41e50490
	...
  41e4d7:	add    BYTE PTR [eiz*8+0x100041],al
  41e4de:	add    BYTE PTR [eax],al
  41e4e0:	add    ah,ah
  41e4e2:	inc    ecx
  41e4e3:	add    ah,bl
  41e4e5:	xor    eax,DWORD PTR [eax+0x0]
  41e4e8:	call   0xec422520
  41e4ed:	xor    eax,DWORD PTR [eax+0x0]
  41e4f0:	lock xor eax,DWORD PTR [eax+0x0]
  41e4f4:	in     al,0x33
  41e4f6:	inc    eax
  41e4f7:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41e4fb:	add    BYTE PTR [eax+0x31],bh
  41e4fe:	inc    eax
  41e4ff:	add    BYTE PTR [ecx+esi*1+0x45090040],dh
  41e506:	dec    ecx
  41e507:	outs   dx,BYTE PTR ds:[esi]
  41e508:	je     0x41e54f
  41e50a:	jb     0x41e57e
  41e50c:	outs   dx,DWORD PTR ds:[esi]
  41e50d:	jb     0x41e49a
  41e50f:	rcr    BYTE PTR [ebp+eiz*8+0x41],0x0
	...
  41e530:	pop    esp
  41e531:	in     eax,0x41
  41e533:	add    BYTE PTR [eax],dl
  41e535:	add    BYTE PTR [eax],al
  41e537:	add    BYTE PTR [eax-0x23ffbe1c],bh
  41e53d:	xor    eax,DWORD PTR [eax+0x0]
  41e540:	call   0xec422578
  41e545:	xor    eax,DWORD PTR [eax+0x0]
  41e548:	lock xor eax,DWORD PTR [eax+0x0]
  41e54c:	in     al,0x33
  41e54e:	inc    eax
  41e54f:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41e553:	add    BYTE PTR [eax+0x31],bh
  41e556:	inc    eax
  41e557:	add    BYTE PTR [ecx+esi*1+0x450a0040],dh
  41e55e:	inc    esp
  41e55f:	imul   esi,DWORD PTR [esi+0x42],0x72655a79
  41e566:	outs   dx,DWORD PTR ds:[esi]
  41e567:	nop
  41e568:	mov    ah,0xe5
  41e56a:	inc    ecx
	...
  41e587:	add    BYTE PTR [ebp+eiz*8+0x100041],dh
  41e58e:	add    BYTE PTR [eax],al
  41e590:	mov    eax,0xdc0041e4
  41e595:	xor    eax,DWORD PTR [eax+0x0]
  41e598:	call   0xec4225d0
  41e59d:	xor    eax,DWORD PTR [eax+0x0]
  41e5a0:	lock xor eax,DWORD PTR [eax+0x0]
  41e5a4:	in     al,0x33
  41e5a6:	inc    eax
  41e5a7:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41e5ab:	add    BYTE PTR [eax+0x31],bh
  41e5ae:	inc    eax
  41e5af:	add    BYTE PTR [ecx+esi*1+0x450b0040],dh
  41e5b6:	push   edx
  41e5b7:	popa   
  41e5b8:	outs   dx,BYTE PTR ds:[esi]
  41e5b9:	addr16 gs inc ebp
  41e5bc:	jb     0x41e630
  41e5be:	outs   dx,DWORD PTR ds:[esi]
  41e5bf:	jb     0x41e5cd
  41e5c1:	out    0x41,al
	...
  41e5df:	add    BYTE PTR [esi+eiz*8],cl
  41e5e2:	inc    ecx
  41e5e3:	add    BYTE PTR [eax],dl
  41e5e5:	add    BYTE PTR [eax],al
  41e5e7:	add    BYTE PTR [eax-0x23ffbe1c],bh
  41e5ed:	xor    eax,DWORD PTR [eax+0x0]
  41e5f0:	call   0xec422628
  41e5f5:	xor    eax,DWORD PTR [eax+0x0]
  41e5f8:	lock xor eax,DWORD PTR [eax+0x0]
  41e5fc:	in     al,0x33
  41e5fe:	inc    eax
  41e5ff:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41e603:	add    BYTE PTR [eax+0x31],bh
  41e606:	inc    eax
  41e607:	add    BYTE PTR [ecx+esi*1+0x450c0040],dh
  41e60e:	dec    ecx
  41e60f:	outs   dx,BYTE PTR ds:[esi]
  41e610:	je     0x41e661
  41e612:	jbe    0x41e679
  41e614:	jb     0x41e67c
  41e616:	ins    BYTE PTR es:[edi],dx
  41e617:	outs   dx,DWORD PTR ds:[esi]
  41e618:	ja     0x41e5a7
  41e61a:	inc    eax
  41e61b:	add    BYTE PTR [eax-0x1a],ch
  41e61e:	inc    ecx
	...
  41e63b:	add    BYTE PTR [eax-0x1a],ch
  41e63e:	inc    ecx
  41e63f:	add    BYTE PTR [eax],dl
  41e641:	add    BYTE PTR [eax],al
  41e643:	add    BYTE PTR [eax],al
  41e645:	in     al,0x41
  41e647:	add    ah,bl
  41e649:	xor    eax,DWORD PTR [eax+0x0]
  41e64c:	call   0xec422684
  41e651:	xor    eax,DWORD PTR [eax+0x0]
  41e654:	lock xor eax,DWORD PTR [eax+0x0]
  41e658:	in     al,0x33
  41e65a:	inc    eax
  41e65b:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41e65f:	add    BYTE PTR [eax+0x31],bh
  41e662:	inc    eax
  41e663:	add    BYTE PTR [ecx+esi*1+0x450a0040],dh
  41e66a:	dec    ebp
  41e66b:	popa   
  41e66c:	je     0x41e6d6
  41e66e:	inc    ebp
  41e66f:	jb     0x41e6e3
  41e671:	outs   dx,DWORD PTR ds:[esi]
  41e672:	jb     0x41e604
  41e674:	shl    dh,0x41
	...
  41e693:	add    al,al
  41e695:	out    0x41,al
  41e697:	add    BYTE PTR [eax],dl
  41e699:	add    BYTE PTR [eax],al
  41e69b:	add    BYTE PTR [esi+eiz*8],bl
  41e69e:	inc    ecx
  41e69f:	add    ah,bl
  41e6a1:	xor    eax,DWORD PTR [eax+0x0]
  41e6a4:	call   0xec4226dc
  41e6a9:	xor    eax,DWORD PTR [eax+0x0]
  41e6ac:	lock xor eax,DWORD PTR [eax+0x0]
  41e6b0:	in     al,0x33
  41e6b2:	inc    eax
  41e6b3:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41e6b7:	add    BYTE PTR [eax+0x31],bh
  41e6ba:	inc    eax
  41e6bb:	add    BYTE PTR [ecx+esi*1+0x450a0040],dh
  41e6c2:	dec    ecx
  41e6c3:	outs   dx,BYTE PTR ds:[esi]
  41e6c4:	jbe    0x41e727
  41e6c6:	ins    BYTE PTR es:[edi],dx
  41e6c7:	imul   esp,DWORD PTR [edi+ecx*2+0x70],0x41e71890
	...
  41e6eb:	add    BYTE PTR [eax],bl
  41e6ed:	out    0x41,eax
  41e6ef:	add    BYTE PTR [eax],dl
  41e6f1:	add    BYTE PTR [eax],al
  41e6f3:	add    BYTE PTR [esi+eiz*8],bl
  41e6f6:	inc    ecx
  41e6f7:	add    ah,bl
  41e6f9:	xor    eax,DWORD PTR [eax+0x0]
  41e6fc:	call   0xec422734
  41e701:	xor    eax,DWORD PTR [eax+0x0]
  41e704:	lock xor eax,DWORD PTR [eax+0x0]
  41e708:	in     al,0x33
  41e70a:	inc    eax
  41e70b:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41e70f:	add    BYTE PTR [eax+0x31],bh
  41e712:	inc    eax
  41e713:	add    BYTE PTR [ecx+esi*1+0x450b0040],dh
  41e71a:	pop    edx
  41e71b:	gs jb  0x41e78d
  41e71e:	inc    esp
  41e71f:	imul   esi,DWORD PTR [esi+0x69],0xe7706564
  41e726:	inc    ecx
	...
  41e743:	add    BYTE PTR [eax-0x19],dh
  41e746:	inc    ecx
  41e747:	add    BYTE PTR [eax],dl
  41e749:	add    BYTE PTR [eax],al
  41e74b:	add    BYTE PTR [esi+eiz*8],bl
  41e74e:	inc    ecx
  41e74f:	add    ah,bl
  41e751:	xor    eax,DWORD PTR [eax+0x0]
  41e754:	call   0xec42278c
  41e759:	xor    eax,DWORD PTR [eax+0x0]
  41e75c:	lock xor eax,DWORD PTR [eax+0x0]
  41e760:	in     al,0x33
  41e762:	inc    eax
  41e763:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41e767:	add    BYTE PTR [eax+0x31],bh
  41e76a:	inc    eax
  41e76b:	add    BYTE PTR [ecx+esi*1+0x45090040],dh
  41e772:	dec    edi
  41e773:	jbe    0x41e7da
  41e775:	jb     0x41e7dd
  41e777:	ins    BYTE PTR es:[edi],dx
  41e778:	outs   dx,DWORD PTR ds:[esi]
  41e779:	ja     0x41e706
  41e77b:	ror    al,0xe7
  41e77e:	inc    ecx
	...
  41e79b:	add    al,cl
  41e79d:	out    0x41,eax
  41e79f:	add    BYTE PTR [eax],dl
  41e7a1:	add    BYTE PTR [eax],al
  41e7a3:	add    BYTE PTR [esi+eiz*8],bl
  41e7a6:	inc    ecx
  41e7a7:	add    ah,bl
  41e7a9:	xor    eax,DWORD PTR [eax+0x0]
  41e7ac:	call   0xec4227e4
  41e7b1:	xor    eax,DWORD PTR [eax+0x0]
  41e7b4:	lock xor eax,DWORD PTR [eax+0x0]
  41e7b8:	in     al,0x33
  41e7ba:	inc    eax
  41e7bb:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41e7bf:	add    BYTE PTR [eax+0x31],bh
  41e7c2:	inc    eax
  41e7c3:	add    BYTE PTR [ecx+esi*1+0x450a0040],dh
  41e7ca:	push   ebp
  41e7cb:	outs   dx,BYTE PTR ds:[esi]
  41e7cc:	fs gs jb 0x41e836
  41e7d0:	ins    BYTE PTR es:[edi],dx
  41e7d1:	outs   dx,DWORD PTR ds:[esi]
  41e7d2:	ja     0x41e764
  41e7d4:	and    al,ch
  41e7d6:	inc    ecx
	...
  41e7f3:	add    BYTE PTR [eax],ah
  41e7f5:	call   0x51e83b
  41e7fa:	add    BYTE PTR [eax],al
  41e7fc:	lock loop 0x41e840
  41e7ff:	add    ah,bl
  41e801:	xor    eax,DWORD PTR [eax+0x0]
  41e804:	call   0xec42283c
  41e809:	xor    eax,DWORD PTR [eax+0x0]
  41e80c:	lock xor eax,DWORD PTR [eax+0x0]
  41e810:	in     al,0x33
  41e812:	inc    eax
  41e813:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41e817:	add    BYTE PTR [esi+eiz*1+0x42],cl
  41e81b:	add    BYTE PTR [ecx+esi*1+0x450f0040],dh
  41e822:	dec    ecx
  41e823:	outs   dx,BYTE PTR ds:[esi]
  41e824:	jbe    0x41e887
  41e826:	ins    BYTE PTR es:[edi],dx
  41e827:	imul   esp,DWORD PTR [eax+edx*2+0x6f],0x65746e69
  41e82f:	jb     0x41e8ad
  41e831:	call   0x41e877
	...
  41e84e:	add    BYTE PTR [eax],al
  41e850:	jl     0x41e83a
  41e852:	inc    ecx
  41e853:	add    BYTE PTR [eax+eax*1],cl
  41e856:	add    BYTE PTR [eax],al
  41e858:	mov    dl,ah
  41e85a:	inc    ecx
  41e85b:	add    ah,bl
  41e85d:	xor    eax,DWORD PTR [eax+0x0]
  41e860:	call   0xec422898
  41e865:	xor    eax,DWORD PTR [eax+0x0]
  41e868:	lock xor eax,DWORD PTR [eax+0x0]
  41e86c:	in     al,0x33
  41e86e:	inc    eax
  41e86f:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41e873:	add    BYTE PTR [eax+0x31],bh
  41e876:	inc    eax
  41e877:	add    BYTE PTR [ecx+esi*1+0x450c0040],dh
  41e87e:	dec    ecx
  41e87f:	outs   dx,BYTE PTR ds:[esi]
  41e880:	jbe    0x41e8e3
  41e882:	ins    BYTE PTR es:[edi],dx
  41e883:	imul   esp,DWORD PTR [ebx+eax*2+0x61],0x408d7473
  41e88b:	add    al,bl
  41e88d:	call   0x41e8d3
	...
  41e8aa:	add    BYTE PTR [eax],al
  41e8ac:	fsubr  st,st(0)
  41e8ae:	inc    ecx
  41e8af:	add    BYTE PTR [eax+eax*1],cl
  41e8b2:	add    BYTE PTR [eax],al
  41e8b4:	mov    dl,ah
  41e8b6:	inc    ecx
  41e8b7:	add    ah,bl
  41e8b9:	xor    eax,DWORD PTR [eax+0x0]
  41e8bc:	call   0xec4228f4
  41e8c1:	xor    eax,DWORD PTR [eax+0x0]
  41e8c4:	lock xor eax,DWORD PTR [eax+0x0]
  41e8c8:	in     al,0x33
  41e8ca:	inc    eax
  41e8cb:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41e8cf:	add    BYTE PTR [eax+0x31],bh
  41e8d2:	inc    eax
  41e8d3:	add    BYTE PTR [ecx+esi*1+0x450d0040],dh
  41e8da:	inc    ebx
  41e8db:	outs   dx,DWORD PTR ds:[esi]
  41e8dc:	outs   dx,BYTE PTR ds:[esi]
  41e8dd:	jbe    0x41e944
  41e8df:	jb     0x41e955
  41e8e1:	inc    ebp
  41e8e2:	jb     0x41e956
  41e8e4:	outs   dx,DWORD PTR ds:[esi]
  41e8e5:	jb     0x41e872
  41e8e7:	shl    BYTE PTR [ecx+ebp*8],0x41
	...
  41e907:	add    BYTE PTR [ecx+ebp*8],dh
  41e90a:	inc    ecx
  41e90b:	add    BYTE PTR [eax],dl
  41e90d:	add    BYTE PTR [eax],al
  41e90f:	add    BYTE PTR [eax],al
  41e911:	in     al,0x41
  41e913:	add    ah,bl
  41e915:	xor    eax,DWORD PTR [eax+0x0]
  41e918:	call   0xec422950
  41e91d:	xor    eax,DWORD PTR [eax+0x0]
  41e920:	lock xor eax,DWORD PTR [eax+0x0]
  41e924:	in     al,0x33
  41e926:	inc    eax
  41e927:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41e92b:	add    BYTE PTR [eax+0x31],bh
  41e92e:	inc    eax
  41e92f:	add    BYTE PTR [ecx+esi*1+0x45100040],dh
  41e936:	inc    ecx
  41e937:	arpl   WORD PTR [ebx+0x65],sp
  41e93a:	jae    0x41e9af
  41e93c:	push   esi
  41e93d:	imul   ebp,DWORD PTR [edi+0x6c],0x6f697461
  41e944:	outs   dx,BYTE PTR ds:[esi]
  41e945:	lea    eax,[eax+0x0]
  41e948:	xchg   esp,eax
  41e949:	jmp    0x41e98f
	...
  41e966:	add    BYTE PTR [eax],al
  41e968:	xchg   esp,eax
  41e969:	jmp    0x51e9af
  41e96e:	add    BYTE PTR [eax],al
  41e970:	add    ah,ah
  41e972:	inc    ecx
  41e973:	add    ah,bl
  41e975:	xor    eax,DWORD PTR [eax+0x0]
  41e978:	call   0xec4229b0
  41e97d:	xor    eax,DWORD PTR [eax+0x0]
  41e980:	lock xor eax,DWORD PTR [eax+0x0]
  41e984:	in     al,0x33
  41e986:	inc    eax
  41e987:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41e98b:	add    BYTE PTR [eax+0x31],bh
  41e98e:	inc    eax
  41e98f:	add    BYTE PTR [ecx+esi*1+0x450a0040],dh
  41e996:	push   eax
  41e997:	jb     0x41ea02
  41e999:	jbe    0x41ea04
  41e99b:	ins    BYTE PTR es:[edi],dx
  41e99c:	gs addr16 gs nop
  41e9a0:	in     al,dx
  41e9a1:	jmp    0x41e9e7
	...
  41e9be:	add    BYTE PTR [eax],al
  41e9c0:	in     al,dx
  41e9c1:	jmp    0x51ea07
  41e9c6:	add    BYTE PTR [eax],al
  41e9c8:	add    ah,ah
  41e9ca:	inc    ecx
  41e9cb:	add    ah,bl
  41e9cd:	xor    eax,DWORD PTR [eax+0x0]
  41e9d0:	call   0xec422a08
  41e9d5:	xor    eax,DWORD PTR [eax+0x0]
  41e9d8:	lock xor eax,DWORD PTR [eax+0x0]
  41e9dc:	in     al,0x33
  41e9de:	inc    eax
  41e9df:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41e9e3:	add    BYTE PTR [eax+0x31],bh
  41e9e6:	inc    eax
  41e9e7:	add    BYTE PTR [ecx+esi*1+0x450e0040],dh
  41e9ee:	push   ebx
  41e9ef:	je     0x41ea52
  41e9f1:	arpl   WORD PTR [ebx+0x4f],bp
  41e9f4:	jbe    0x41ea5b
  41e9f6:	jb     0x41ea5e
  41e9f8:	ins    BYTE PTR es:[edi],dx
  41e9f9:	outs   dx,DWORD PTR ds:[esi]
  41e9fa:	ja     0x41e98c
  41e9fc:	dec    eax
  41e9fd:	jmp    0x0:0x41
	...
  41ea1c:	dec    eax
  41ea1d:	jmp    0x0:0x100041
  41ea24:	add    ah,ah
  41ea26:	inc    ecx
  41ea27:	add    ah,bl
  41ea29:	xor    eax,DWORD PTR [eax+0x0]
  41ea2c:	call   0xec422a64
  41ea31:	xor    eax,DWORD PTR [eax+0x0]
  41ea34:	lock xor eax,DWORD PTR [eax+0x0]
  41ea38:	in     al,0x33
  41ea3a:	inc    eax
  41ea3b:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41ea3f:	add    BYTE PTR [eax+0x31],bh
  41ea42:	inc    eax
  41ea43:	add    BYTE PTR [ecx+esi*1+0x45090040],dh
  41ea4a:	inc    ebx
  41ea4b:	outs   dx,DWORD PTR ds:[esi]
  41ea4c:	outs   dx,BYTE PTR ds:[esi]
  41ea4d:	je     0x41eac1
  41ea4f:	outs   dx,DWORD PTR ds:[esi]
  41ea50:	ins    BYTE PTR es:[edi],dx
  41ea51:	inc    ebx
  41ea52:	mov    eax,eax
  41ea54:	mov    al,ds:0x41ea
	...
  41ea71:	add    BYTE PTR [eax],al
  41ea73:	add    BYTE PTR [eax+0xc0041ea],ah
  41ea79:	add    BYTE PTR [eax],al
  41ea7b:	add    BYTE PTR [eax-0x23ffbe1e],cl
  41ea81:	xor    eax,DWORD PTR [eax+0x0]
  41ea84:	call   0xec422abc
  41ea89:	xor    eax,DWORD PTR [eax+0x0]
  41ea8c:	lock xor eax,DWORD PTR [eax+0x0]
  41ea90:	in     al,0x33
  41ea92:	inc    eax
  41ea93:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41ea97:	add    BYTE PTR [eax+0x31],bh
  41ea9a:	inc    eax
  41ea9b:	add    BYTE PTR [ecx+esi*1+0x450d0040],dh
  41eaa2:	push   esi
  41eaa3:	popa   
  41eaa4:	jb     0x41eb0f
  41eaa6:	popa   
  41eaa7:	outs   dx,BYTE PTR ds:[esi]
  41eaa8:	je     0x41eaef
  41eaaa:	jb     0x41eb1e
  41eaac:	outs   dx,DWORD PTR ds:[esi]
  41eaad:	jb     0x41ea3a
  41eaaf:	sar    ah,0xea
  41eab2:	inc    ecx
	...
  41eacf:	add    ah,bh
  41ead1:	jmp    0x0:0xc0041
  41ead8:	mov    dl,ah
  41eada:	inc    ecx
  41eadb:	add    ah,bl
  41eadd:	xor    eax,DWORD PTR [eax+0x0]
  41eae0:	call   0xec422b18
  41eae5:	xor    eax,DWORD PTR [eax+0x0]
  41eae8:	lock xor eax,DWORD PTR [eax+0x0]
  41eaec:	in     al,0x33
  41eaee:	inc    eax
  41eaef:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41eaf3:	add    BYTE PTR [eax+0x31],bh
  41eaf6:	inc    eax
  41eaf7:	add    BYTE PTR [ecx+esi*1+0x45100040],dh
  41eafe:	inc    ecx
  41eaff:	jae    0x41eb74
  41eb01:	gs jb  0x41eb78
  41eb04:	imul   ebp,DWORD PTR [edi+0x6e],0x6c696146
  41eb0b:	gs lea eax,fs:[eax+0x0]
  41eb10:	pop    esp
  41eb11:	jmp    0x41eb54
	...
  41eb2f:	add    BYTE PTR [ebx+ebp*8+0x41],bl
  41eb33:	add    BYTE PTR [eax+eax*1],cl
  41eb36:	add    BYTE PTR [eax],al
  41eb38:	mov    dl,ah
  41eb3a:	inc    ecx
  41eb3b:	add    ah,bl
  41eb3d:	xor    eax,DWORD PTR [eax+0x0]
  41eb40:	call   0xec422b78
  41eb45:	xor    eax,DWORD PTR [eax+0x0]
  41eb48:	lock xor eax,DWORD PTR [eax+0x0]
  41eb4c:	in     al,0x33
  41eb4e:	inc    eax
  41eb4f:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41eb53:	add    BYTE PTR [eax+0x31],bh
  41eb56:	inc    eax
  41eb57:	add    BYTE PTR [ecx+esi*1+0x450e0040],dh
  41eb5e:	inc    ecx
  41eb5f:	bound  esi,QWORD PTR [ebx+0x74]
  41eb62:	jb     0x41ebc5
  41eb64:	arpl   WORD PTR [ebp+eax*2+0x72],si
  41eb68:	jb     0x41ebd9
  41eb6a:	jb     0x41eafc
  41eb6c:	mov    eax,0x41eb
	...
  41eb89:	add    BYTE PTR [eax],al
  41eb8b:	add    BYTE PTR [eax+0xc0041eb],bh
  41eb91:	add    BYTE PTR [eax],al
  41eb93:	add    BYTE PTR [eax-0x23ffbe1e],cl
  41eb99:	xor    eax,DWORD PTR [eax+0x0]
  41eb9c:	call   0xec422bd4
  41eba1:	xor    eax,DWORD PTR [eax+0x0]
  41eba4:	lock xor eax,DWORD PTR [eax+0x0]
  41eba8:	in     al,0x33
  41ebaa:	inc    eax
  41ebab:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41ebaf:	add    BYTE PTR [eax+0x31],bh
  41ebb2:	inc    eax
  41ebb3:	add    BYTE PTR [ecx+esi*1+0x450e0040],dh
  41ebba:	dec    ecx
  41ebbb:	outs   dx,BYTE PTR ds:[esi]
  41ebbc:	je     0x41ec24
  41ebbe:	inc    ebx
  41ebbf:	popa   
  41ebc0:	jae    0x41ec36
  41ebc2:	inc    ebp
  41ebc3:	jb     0x41ec37
  41ebc5:	outs   dx,DWORD PTR ds:[esi]
  41ebc6:	jb     0x41eb58
  41ebc8:	adc    al,0xec
  41ebca:	inc    ecx
	...
  41ebe7:	add    BYTE PTR [esp+ebp*8],dl
  41ebea:	inc    ecx
  41ebeb:	add    BYTE PTR [eax],dl
  41ebed:	add    BYTE PTR [eax],al
  41ebef:	add    BYTE PTR [eax-0x23ffbe1e],cl
  41ebf5:	xor    eax,DWORD PTR [eax+0x0]
  41ebf8:	call   0xec422c30
  41ebfd:	xor    eax,DWORD PTR [eax+0x0]
  41ec00:	lock xor eax,DWORD PTR [eax+0x0]
  41ec04:	in     al,0x33
  41ec06:	inc    eax
  41ec07:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41ec0b:	add    BYTE PTR [eax+0x31],bh
  41ec0e:	inc    eax
  41ec0f:	add    BYTE PTR [ecx+esi*1+0x45080040],dh
  41ec16:	dec    edi
  41ec17:	push   ebx
  41ec18:	inc    ebp
  41ec19:	jb     0x41ec8d
  41ec1b:	outs   dx,DWORD PTR ds:[esi]
  41ec1c:	jb     0x41ebab
  41ec1e:	inc    eax
  41ec1f:	add    BYTE PTR [esp+ebp*8+0x41],ch
	...
  41ec3f:	add    BYTE PTR [esp+ebp*8+0x41],ch
  41ec43:	add    BYTE PTR [eax+eax*1],cl
  41ec46:	add    BYTE PTR [eax],al
  41ec48:	mov    dl,ah
  41ec4a:	inc    ecx
  41ec4b:	add    ah,bl
  41ec4d:	xor    eax,DWORD PTR [eax+0x0]
  41ec50:	call   0xec422c88
  41ec55:	xor    eax,DWORD PTR [eax+0x0]
  41ec58:	lock xor eax,DWORD PTR [eax+0x0]
  41ec5c:	in     al,0x33
  41ec5e:	inc    eax
  41ec5f:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41ec63:	add    BYTE PTR [eax+0x31],bh
  41ec66:	inc    eax
  41ec67:	add    BYTE PTR [ecx+esi*1+0x45120040],dh
  41ec6e:	push   ebx
  41ec6f:	popa   
  41ec70:	data16 arpl WORD PTR gs:[ecx+0x6c],sp
  41ec75:	ins    BYTE PTR es:[edi],dx
  41ec76:	inc    ebp
  41ec77:	js     0x41ecdc
  41ec79:	gs jo  0x41ecf0
  41ec7c:	imul   ebp,DWORD PTR [edi+0x6e],0x41ec8490
  41ec83:	add    BYTE PTR [ecx],dl
  41ec85:	add    ebp,DWORD PTR [esi]
  41ec87:	aaa    
  41ec88:	xor    al,0x4
  41ec8a:	add    BYTE PTR [eax],al
  41ec8c:	add    BYTE PTR [eax],al
  41ec8e:	adc    BYTE PTR [eax+0x0],al
  41ec91:	dec    eax
  41ec92:	add    BYTE PTR [eax],al
  41ec94:	add    BYTE PTR [eax],al
  41ec96:	adc    BYTE PTR [eax+0x0],al
  41ec99:	or     BYTE PTR [ebx+0x79],dl
  41ec9c:	jae    0x41ecf3
  41ec9e:	je     0x41ed09
  41eca0:	ins    BYTE PTR es:[edi],dx
  41eca1:	jae    0x41ec2e
  41eca3:	shr    BYTE PTR [eax+0x110041ec],0x3
  41ecaa:	cmp    BYTE PTR cs:[esp+eax*1],dh
  41ecae:	add    BYTE PTR [eax],al
  41ecb0:	add    BYTE PTR [eax],al
  41ecb2:	adc    BYTE PTR [eax+0x0],al
  41ecb5:	dec    eax
  41ecb6:	add    BYTE PTR [eax],al
  41ecb8:	add    BYTE PTR [eax],al
  41ecba:	adc    BYTE PTR [eax+0x0],al
  41ecbd:	or     BYTE PTR [ebx+0x79],dl
  41ecc0:	jae    0x41ed17
  41ecc2:	je     0x41ed2d
  41ecc4:	ins    BYTE PTR es:[edi],dx
  41ecc5:	jae    0x41ec52
  41ecc7:	sar    bh,0xff
  41ecca:	(bad)  
  41eccb:	inc    DWORD PTR [ecx]
  41eccd:	add    BYTE PTR [eax],al
  41eccf:	add    BYTE PTR [eax+eax*1],ah
  41ecd2:	add    BYTE PTR [eax],al
  41ecd4:	and    ch,ch
  41ecd6:	inc    ecx
	...
  41ecf3:	add    BYTE PTR [eax],ah
  41ecf5:	in     eax,dx
  41ecf6:	inc    ecx
  41ecf7:	add    BYTE PTR [eax+eax*1+0x0],al
  41ecfb:	add    BYTE PTR [eax+edx*1],cl
  41ecfe:	inc    eax
  41ecff:	add    ah,bl
  41ed01:	xor    eax,DWORD PTR [eax+0x0]
  41ed04:	call   0xec422d3c
  41ed09:	xor    eax,DWORD PTR [eax+0x0]
  41ed0c:	lock xor eax,DWORD PTR [eax+0x0]
  41ed10:	in     al,0x33
  41ed12:	inc    eax
  41ed13:	add    BYTE PTR [ecx+esi*1+0x40],bl
  41ed17:	add    BYTE PTR [eax+0x31],bh
  41ed1a:	inc    eax
  41ed1b:	add    ah,bh
  41ed1d:	cmp    BYTE PTR [edx+0x0],al
  41ed20:	adc    edx,DWORD PTR [esp+edx*2+0x68]
  41ed24:	jb     0x41ed8b
  41ed26:	popa   
  41ed27:	fs dec esp
  41ed29:	outs   dx,DWORD PTR ds:[esi]
  41ed2a:	arpl   WORD PTR [ecx+0x6c],sp
  41ed2d:	inc    ebx
  41ed2e:	outs   dx,DWORD PTR ds:[esi]
  41ed2f:	jne    0x41ed9f
  41ed31:	je     0x41ed98
  41ed33:	jb     0x41ed01
  41ed35:	add    eax,0xffffffd4
  41ed38:	jmp    0x423c74
  41ed3d:	add    eax,0xffffffd4
  41ed40:	jmp    0x423ce4
  41ed45:	add    eax,0xffffffd4
  41ed48:	jmp    0x423b78
  41ed4d:	add    eax,0xffffffd4
  41ed50:	jmp    0x423c24
  41ed55:	add    DWORD PTR [esp+0x4],0xffffffd4
  41ed5a:	jmp    0x4052e4
  41ed5f:	add    DWORD PTR [esp+0x4],0xffffffd4
  41ed64:	jmp    0x40530c
  41ed69:	add    DWORD PTR [esp+0x4],0xffffffd4
  41ed6e:	jmp    0x405320
  41ed73:	int3   
  41ed74:	push   ebp
  41ed75:	in     eax,dx
  41ed76:	inc    ecx
  41ed77:	add    BYTE PTR [edi-0x13],bl
  41ed7a:	inc    ecx
  41ed7b:	add    BYTE PTR [ecx-0x13],ch
  41ed7e:	inc    ecx
  41ed7f:	add    BYTE PTR ds:0x3d0041ed,dh
  41ed85:	in     eax,dx
  41ed86:	inc    ecx
  41ed87:	add    BYTE PTR [ebp-0x13],al
  41ed8a:	inc    ecx
  41ed8b:	add    BYTE PTR [ebp-0x13],cl
  41ed8e:	inc    ecx
  41ed8f:	add    BYTE PTR [ecx],al
  41ed91:	add    BYTE PTR [eax],al
  41ed93:	add    BYTE PTR [edx-0x74],dl
  41ed96:	adc    BYTE PTR [ebx-0x71],bh
  41ed99:	sbb    eax,0xdf9c4cdb
  41ed9e:	push   edi
  41ed9f:	loopne 0x41ee12
  41eda1:	sbb    DWORD PTR ds:0x41ed743f,edi
  41eda7:	add    BYTE PTR [eax+eax*1],ch
  41edaa:	add    BYTE PTR [eax],al
  41edac:	add    BYTE PTR [eax],al
  41edae:	add    BYTE PTR [eax],al
  41edb0:	cld    
  41edb1:	in     eax,dx
  41edb2:	inc    ecx
  41edb3:	add    BYTE PTR [eax+0x41ed],dl
	...
  41edcd:	add    BYTE PTR [eax],al
  41edcf:	add    ah,bh
  41edd1:	in     eax,dx
  41edd2:	inc    ecx
  41edd3:	add    BYTE PTR [eax],dh
  41edd5:	add    BYTE PTR [eax],al
  41edd7:	add    BYTE PTR [eax],al
  41edd9:	adc    DWORD PTR [eax+0x0],eax
  41eddc:	fdiv   QWORD PTR [ebx]
  41edde:	inc    eax
  41eddf:	add    BYTE PTR [eax-0x3bffbfae],bh
  41ede5:	push   edx
  41ede6:	inc    eax
  41ede7:	add    al,dh
  41ede9:	xor    eax,DWORD PTR [eax+0x0]
  41edec:	in     al,0x33
  41edee:	inc    eax
  41edef:	add    ah,dl
  41edf1:	push   edx
  41edf2:	inc    eax
  41edf3:	add    BYTE PTR [eax+0x31],bh
  41edf6:	inc    eax
  41edf7:	add    ah,ch
  41edf9:	cmp    al,BYTE PTR [edx+0x0]
  41edfc:	and    al,0x54
  41edfe:	dec    ebp
  41edff:	jne    0x41ee6d
  41ee01:	je     0x41ee6c
  41ee03:	push   edx
  41ee04:	gs popa 
  41ee06:	fs inc ebp
  41ee08:	js     0x41ee6d
  41ee0a:	ins    BYTE PTR es:[edi],dx
  41ee0b:	jne    0x41ee80
  41ee0d:	imul   esi,DWORD PTR [esi+0x65],0x74697257
  41ee14:	gs push ebx
  41ee16:	jns    0x41ee86
  41ee18:	arpl   WORD PTR [eax+0x72],bp
  41ee1b:	outs   dx,DWORD PTR ds:[esi]
  41ee1c:	outs   dx,BYTE PTR ds:[esi]
  41ee1d:	imul   edi,DWORD PTR [edx+0x65],0x408d72
  41ee24:	push   ebp
  41ee25:	mov    ebp,esp
  41ee27:	push   ebx
  41ee28:	mov    ebx,edx
  41ee2a:	mov    edx,eax
  41ee2c:	shr    edx,0x10
  41ee2f:	div    bx
  41ee32:	mov    ebx,DWORD PTR [ebp+0x8]
  41ee35:	mov    WORD PTR [ecx],ax
  41ee38:	mov    WORD PTR [ebx],dx
  41ee3b:	pop    ebx
  41ee3c:	pop    ebp
  41ee3d:	ret    0x4
  41ee40:	push   ebx
  41ee41:	push   esi
  41ee42:	push   edi
  41ee43:	mov    edi,ecx
  41ee45:	mov    esi,edx
  41ee47:	mov    ebx,eax
  41ee49:	push   esi
  41ee4a:	push   edi
  41ee4b:	mov    ecx,ebx
  41ee4d:	mov    dl,0x1
  41ee4f:	mov    eax,ds:0x41e88c
  41ee54:	call   0x4225b8
  41ee59:	call   0x4036e4
  41ee5e:	pop    edi
  41ee5f:	pop    esi
  41ee60:	pop    ebx
  41ee61:	ret    
  41ee62:	mov    eax,eax
  41ee64:	push   ebx
  41ee65:	push   esi
  41ee66:	mov    ebx,eax
  41ee68:	mov    eax,ebx
  41ee6a:	call   0x402994
  41ee6f:	mov    esi,eax
  41ee71:	mov    eax,esi
  41ee73:	xor    ecx,ecx
  41ee75:	mov    edx,ebx
  41ee77:	call   0x402c34
  41ee7c:	mov    eax,esi
  41ee7e:	pop    esi
  41ee7f:	pop    ebx
  41ee80:	ret    
  41ee81:	lea    eax,[eax+0x0]
  41ee84:	push   ebx
  41ee85:	push   esi
  41ee86:	push   edi
  41ee87:	add    esp,0xfffffff8
  41ee8a:	mov    edi,edx
  41ee8c:	mov    esi,eax
  41ee8e:	mov    eax,esi
  41ee90:	call   0x403f48
  41ee95:	mov    ebx,eax
  41ee97:	mov    eax,edi
  41ee99:	mov    edx,ebx
  41ee9b:	call   0x404284
  41eea0:	mov    DWORD PTR [esp],esi
  41eea3:	mov    eax,DWORD PTR [edi]
  41eea5:	mov    DWORD PTR [esp+0x4],eax
  41eea9:	test   ebx,ebx
  41eeab:	je     0x41eece
  41eead:	mov    eax,DWORD PTR [esp]
  41eeb0:	mov    al,BYTE PTR [eax]
  41eeb2:	cmp    al,0x61
  41eeb4:	jb     0x41eebc
  41eeb6:	cmp    al,0x7a
  41eeb8:	ja     0x41eebc
  41eeba:	sub    al,0x20
  41eebc:	mov    edx,DWORD PTR [esp+0x4]
  41eec0:	mov    BYTE PTR [edx],al
  41eec2:	inc    DWORD PTR [esp]
  41eec5:	inc    DWORD PTR [esp+0x4]
  41eec9:	dec    ebx
  41eeca:	test   ebx,ebx
  41eecc:	jne    0x41eead
  41eece:	pop    ecx
  41eecf:	pop    edx
  41eed0:	pop    edi
  41eed1:	pop    esi
  41eed2:	pop    ebx
  41eed3:	ret    
  41eed4:	push   ebx
  41eed5:	push   esi
  41eed6:	push   edi
  41eed7:	add    esp,0xfffffff8
  41eeda:	mov    edi,edx
  41eedc:	mov    esi,eax
  41eede:	mov    eax,esi
  41eee0:	call   0x403f48
  41eee5:	mov    ebx,eax
  41eee7:	mov    eax,edi
  41eee9:	mov    edx,ebx
  41eeeb:	call   0x404284
  41eef0:	mov    DWORD PTR [esp],esi
  41eef3:	mov    eax,DWORD PTR [edi]
  41eef5:	mov    DWORD PTR [esp+0x4],eax
  41eef9:	test   ebx,ebx
  41eefb:	je     0x41ef1e
  41eefd:	mov    eax,DWORD PTR [esp]
  41ef00:	mov    al,BYTE PTR [eax]
  41ef02:	cmp    al,0x41
  41ef04:	jb     0x41ef0c
  41ef06:	cmp    al,0x5a
  41ef08:	ja     0x41ef0c
  41ef0a:	add    al,0x20
  41ef0c:	mov    edx,DWORD PTR [esp+0x4]
  41ef10:	mov    BYTE PTR [edx],al
  41ef12:	inc    DWORD PTR [esp]
  41ef15:	inc    DWORD PTR [esp+0x4]
  41ef19:	dec    ebx
  41ef1a:	test   ebx,ebx
  41ef1c:	jne    0x41eefd
  41ef1e:	pop    ecx
  41ef1f:	pop    edx
  41ef20:	pop    edi
  41ef21:	pop    esi
  41ef22:	pop    ebx
  41ef23:	ret    
  41ef24:	push   esi
  41ef25:	push   edi
  41ef26:	push   ebx
  41ef27:	mov    esi,eax
  41ef29:	mov    edi,edx
  41ef2b:	or     eax,eax
  41ef2d:	je     0x41ef32
  41ef2f:	mov    eax,DWORD PTR [eax-0x4]
  41ef32:	or     edx,edx
  41ef34:	je     0x41ef39
  41ef36:	mov    edx,DWORD PTR [edx-0x4]
  41ef39:	mov    ecx,eax
  41ef3b:	cmp    ecx,edx
  41ef3d:	jbe    0x41ef41
  41ef3f:	mov    ecx,edx
  41ef41:	cmp    ecx,ecx
  41ef43:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef45:	je     0x41ef71
  41ef47:	mov    bl,BYTE PTR [esi-0x1]
  41ef4a:	cmp    bl,0x61
  41ef4d:	jb     0x41ef57
  41ef4f:	cmp    bl,0x7a
  41ef52:	ja     0x41ef57
  41ef54:	sub    bl,0x20
  41ef57:	mov    bh,BYTE PTR [edi-0x1]
  41ef5a:	cmp    bh,0x61
  41ef5d:	jb     0x41ef67
  41ef5f:	cmp    bh,0x7a
  41ef62:	ja     0x41ef67
  41ef64:	sub    bh,0x20
  41ef67:	cmp    bl,bh
  41ef69:	je     0x41ef43
  41ef6b:	movzx  eax,bl
  41ef6e:	movzx  edx,bh
  41ef71:	sub    eax,edx
  41ef73:	pop    ebx
  41ef74:	pop    edi
  41ef75:	pop    esi
  41ef76:	ret    
  41ef77:	nop
  41ef78:	cmp    eax,edx
  41ef7a:	je     0x41ef95
  41ef7c:	or     eax,eax
  41ef7e:	je     0x41ef97
  41ef80:	or     edx,edx
  41ef82:	je     0x41ef98
  41ef84:	mov    ecx,DWORD PTR [eax-0x4]
  41ef87:	cmp    ecx,DWORD PTR [edx-0x4]
  41ef8a:	jne    0x41ef98
  41ef8c:	call   0x41ef24
  41ef91:	test   eax,eax
  41ef93:	jne    0x41ef98
  41ef95:	mov    al,0x1
  41ef97:	ret    
  41ef98:	xor    eax,eax
  41ef9a:	ret    
  41ef9b:	nop
  41ef9c:	push   ebx
  41ef9d:	push   esi
  41ef9e:	mov    esi,edx
  41efa0:	mov    ebx,eax
  41efa2:	mov    eax,esi
  41efa4:	call   0x403f48
  41efa9:	push   eax
  41efaa:	mov    eax,esi
  41efac:	call   0x404148
  41efb1:	push   eax
  41efb2:	mov    eax,ebx
  41efb4:	call   0x403f48
  41efb9:	push   eax
  41efba:	mov    eax,ebx
  41efbc:	call   0x404148
  41efc1:	push   eax
  41efc2:	push   0x0
  41efc4:	push   0x400
  41efc9:	call   0x405a88
  41efce:	sub    eax,0x2
  41efd1:	pop    esi
  41efd2:	pop    ebx
  41efd3:	ret    
  41efd4:	push   ebx
  41efd5:	push   esi
  41efd6:	mov    esi,edx
  41efd8:	mov    ebx,eax
  41efda:	mov    eax,esi
  41efdc:	call   0x403f48
  41efe1:	push   eax
  41efe2:	mov    eax,esi
  41efe4:	call   0x404148
  41efe9:	push   eax
  41efea:	mov    eax,ebx
  41efec:	call   0x403f48
  41eff1:	push   eax
  41eff2:	mov    eax,ebx
  41eff4:	call   0x404148
  41eff9:	push   eax
  41effa:	push   0x1
  41effc:	push   0x400
  41f001:	call   0x405a88
  41f006:	sub    eax,0x2
  41f009:	pop    esi
  41f00a:	pop    ebx
  41f00b:	ret    
  41f00c:	push   ebx
  41f00d:	push   esi
  41f00e:	mov    esi,edx
  41f010:	mov    ebx,eax
  41f012:	mov    edx,esi
  41f014:	mov    eax,ebx
  41f016:	call   0x41efd4
  41f01b:	test   eax,eax
  41f01d:	sete   al
  41f020:	pop    esi
  41f021:	pop    ebx
  41f022:	ret    
  41f023:	nop
  41f024:	push   ebx
  41f025:	push   esi
  41f026:	push   edi
  41f027:	push   ebp
  41f028:	mov    ebp,edx
  41f02a:	mov    edi,eax
  41f02c:	mov    eax,edi
  41f02e:	call   0x403f48
  41f033:	mov    esi,eax
  41f035:	mov    ebx,0x1
  41f03a:	jmp    0x41f03d
  41f03c:	inc    ebx
  41f03d:	cmp    esi,ebx
  41f03f:	jl     0x41f048
  41f041:	cmp    BYTE PTR [edi+ebx*1-0x1],0x20
  41f046:	jbe    0x41f03c
  41f048:	cmp    esi,ebx
  41f04a:	jge    0x41f056
  41f04c:	mov    eax,ebp
  41f04e:	call   0x403cac
  41f053:	jmp    0x41f06c
  41f055:	dec    esi
  41f056:	cmp    BYTE PTR [edi+esi*1-0x1],0x20
  41f05b:	jbe    0x41f055
  41f05d:	push   ebp
  41f05e:	mov    ecx,esi
  41f060:	sub    ecx,ebx
  41f062:	inc    ecx
  41f063:	mov    edx,ebx
  41f065:	mov    eax,edi
  41f067:	call   0x4041a0
  41f06c:	pop    ebp
  41f06d:	pop    edi
  41f06e:	pop    esi
  41f06f:	pop    ebx
  41f070:	ret    
  41f071:	lea    eax,[eax+0x0]
  41f074:	or     cl,cl
  41f076:	jne    0x41f08f
  41f078:	or     eax,eax
  41f07a:	jns    0x41f08a
  41f07c:	neg    eax
  41f07e:	call   0x41f08a
  41f083:	mov    al,0x2d
  41f085:	inc    ecx
  41f086:	dec    esi
  41f087:	mov    BYTE PTR [esi],al
  41f089:	ret    
  41f08a:	mov    ecx,0xa
  41f08f:	push   edx
  41f090:	push   esi
  41f091:	xor    edx,edx
  41f093:	div    ecx
  41f095:	dec    esi
  41f096:	add    dl,0x30
  41f099:	cmp    dl,0x3a
  41f09c:	jb     0x41f0a1
  41f09e:	add    dl,0x7
  41f0a1:	mov    BYTE PTR [esi],dl
  41f0a3:	or     eax,eax
  41f0a5:	jne    0x41f091
  41f0a7:	pop    ecx
  41f0a8:	pop    edx
  41f0a9:	sub    ecx,esi
  41f0ab:	sub    edx,ecx
  41f0ad:	jbe    0x41f0bf
  41f0af:	add    ecx,edx
  41f0b1:	mov    al,0x30
  41f0b3:	sub    esi,edx
  41f0b5:	jmp    0x41f0ba
  41f0b7:	mov    BYTE PTR [edx+esi*1],al
  41f0ba:	dec    edx
  41f0bb:	jne    0x41f0b7
  41f0bd:	mov    BYTE PTR [esi],al
  41f0bf:	ret    
  41f0c0:	push   esi
  41f0c1:	mov    esi,esp
  41f0c3:	sub    esp,0x10
  41f0c6:	xor    ecx,ecx
  41f0c8:	push   edx
  41f0c9:	xor    edx,edx
  41f0cb:	call   0x41f074
  41f0d0:	mov    edx,esi
  41f0d2:	pop    eax
  41f0d3:	call   0x403d9c
  41f0d8:	add    esp,0x10
  41f0db:	pop    esi
  41f0dc:	ret    
  41f0dd:	lea    eax,[eax+0x0]
  41f0e0:	or     cl,cl
  41f0e2:	jne    0x41f114
  41f0e4:	mov    ecx,0xa
  41f0e9:	test   DWORD PTR [eax+0x4],0x80000000
  41f0f0:	je     0x41f114
  41f0f2:	push   DWORD PTR [eax+0x4]
  41f0f5:	push   DWORD PTR [eax]
  41f0f7:	mov    eax,esp
  41f0f9:	neg    DWORD PTR [esp]
  41f0fc:	adc    DWORD PTR [esp+0x4],0x0
  41f101:	neg    DWORD PTR [esp+0x4]
  41f105:	call   0x41f114
  41f10a:	mov    BYTE PTR [esi-0x1],0x2d
  41f10e:	dec    esi
  41f10f:	inc    ecx
  41f110:	add    esp,0x8
  41f113:	ret    
  41f114:	push   esi
  41f115:	sub    esp,0x4
  41f118:	fnstcw WORD PTR [esp+0x2]
  41f11c:	fnstcw WORD PTR [esp]
  41f11f:	or     WORD PTR [esp],0xf00
  41f125:	fldcw  WORD PTR [esp]
  41f128:	mov    WORD PTR [esp],cx
  41f12c:	fld1   
  41f12e:	test   DWORD PTR [eax+0x4],0x80000000
  41f135:	je     0x41f15e
  41f137:	push   DWORD PTR [eax+0x4]
  41f13a:	push   DWORD PTR [eax]
  41f13c:	and    DWORD PTR [esp+0x4],0x7fffffff
  41f144:	push   0x7fffffff
  41f149:	push   0xffffffff
  41f14e:	fild   QWORD PTR [esp+0x8]
  41f152:	fild   QWORD PTR [esp]
  41f155:	fadd   st,st(2)
  41f157:	faddp  st(1),st
  41f159:	add    esp,0x10
  41f15c:	jmp    0x41f160
  41f15e:	fild   QWORD PTR [eax]
  41f160:	fild   WORD PTR [esp]
  41f163:	fld    st(1)
  41f165:	dec    esi
  41f166:	fprem  
  41f168:	fistp  WORD PTR [esp]
  41f16b:	fdiv   st(1),st
  41f16d:	mov    al,BYTE PTR [esp]
  41f170:	add    al,0x30
  41f172:	cmp    al,0x3a
  41f174:	jb     0x41f178
  41f176:	add    al,0x7
  41f178:	mov    BYTE PTR [esi],al
  41f17a:	fld    st(1)
  41f17c:	fcom   st(3)
  41f17e:	fstsw  ax
  41f181:	sahf   
  41f182:	jae    0x41f165
  41f184:	fldcw  WORD PTR [esp+0x2]
  41f188:	add    esp,0x4
  41f18b:	ffree  st(3)
  41f18d:	ffree  st(2)
  41f18f:	ffree  st(1)
  41f191:	ffree  st(0)
  41f193:	pop    ecx
  41f194:	sub    ecx,esi
  41f196:	sub    edx,ecx
  41f198:	jbe    0x41f1aa
  41f19a:	sub    esi,edx
  41f19c:	mov    al,0x30
  41f19e:	add    ecx,edx
  41f1a0:	jmp    0x41f1a5
  41f1a2:	mov    BYTE PTR [edx+esi*1],al
  41f1a5:	dec    edx
  41f1a6:	jne    0x41f1a2
  41f1a8:	mov    BYTE PTR [esi],al
  41f1aa:	ret    
  41f1ab:	nop
  41f1ac:	push   ebp
  41f1ad:	mov    ebp,esp
  41f1af:	push   esi
  41f1b0:	mov    esi,esp
  41f1b2:	sub    esp,0x20
  41f1b5:	xor    ecx,ecx
  41f1b7:	push   eax
  41f1b8:	xor    edx,edx
  41f1ba:	lea    eax,[ebp+0x8]
  41f1bd:	call   0x41f0e0
  41f1c2:	mov    edx,esi
  41f1c4:	pop    eax
  41f1c5:	call   0x403d9c
  41f1ca:	add    esp,0x20
  41f1cd:	pop    esi
  41f1ce:	pop    ebp
  41f1cf:	ret    0x8
  41f1d2:	mov    eax,eax
  41f1d4:	cmp    edx,0x20
  41f1d7:	jbe    0x41f1db
  41f1d9:	xor    edx,edx
  41f1db:	push   esi
  41f1dc:	mov    esi,esp
  41f1de:	sub    esp,0x20
  41f1e1:	push   ecx
  41f1e2:	mov    ecx,0x10
  41f1e7:	call   0x41f074
  41f1ec:	mov    edx,esi
  41f1ee:	pop    eax
  41f1ef:	call   0x403d9c
  41f1f4:	add    esp,0x20
  41f1f7:	pop    esi
  41f1f8:	ret    
  41f1f9:	lea    eax,[eax+0x0]
  41f1fc:	push   ebx
  41f1fd:	push   ecx
  41f1fe:	mov    ebx,edx
  41f200:	mov    edx,esp
  41f202:	call   0x402c54
  41f207:	cmp    DWORD PTR [esp],0x0
  41f20b:	je     0x41f20f
  41f20d:	mov    eax,ebx
  41f20f:	pop    edx
  41f210:	pop    ebx
  41f211:	ret    
  41f212:	mov    eax,eax
  41f214:	push   ebx
  41f215:	push   esi
  41f216:	push   ecx
  41f217:	mov    esi,edx
  41f219:	mov    ebx,eax
  41f21b:	mov    edx,esp
  41f21d:	mov    eax,ebx
  41f21f:	call   0x402c54
  41f224:	mov    DWORD PTR [esi],eax
  41f226:	cmp    DWORD PTR [esp],0x0
  41f22a:	sete   al
  41f22d:	pop    edx
  41f22e:	pop    esi
  41f22f:	pop    ebx
  41f230:	ret    
  41f231:	lea    eax,[eax+0x0]
  41f234:	mov    eax,ds:0x42f788
  41f239:	call   0x404940
  41f23e:	test   eax,eax
  41f240:	jne    0x41f26b
  41f242:	push   0x1
  41f244:	mov    eax,0x42f788
  41f249:	mov    ecx,0x1
  41f24e:	mov    edx,DWORD PTR ds:0x41ec80
  41f254:	call   0x404b1c
  41f259:	add    esp,0x4
  41f25c:	mov    eax,ds:0x42f788
  41f261:	mov    edx,0x41f2ac
  41f266:	call   0x403d00
  41f26b:	mov    eax,ds:0x42f78c
  41f270:	call   0x404940
  41f275:	test   eax,eax
  41f277:	jne    0x41f2a2
  41f279:	push   0x1
  41f27b:	mov    eax,0x42f78c
  41f280:	mov    ecx,0x1
  41f285:	mov    edx,DWORD PTR ds:0x41eca4
  41f28b:	call   0x404b1c
  41f290:	add    esp,0x4
  41f293:	mov    eax,ds:0x42f78c
  41f298:	mov    edx,0x41f2bc
  41f29d:	call   0x403d00
  41f2a2:	ret    
  41f2a3:	add    bh,bh
  41f2a5:	(bad)  
  41f2a6:	(bad)  
  41f2a7:	inc    DWORD PTR [eax+eax*1]
  41f2aa:	add    BYTE PTR [eax],al
  41f2ac:	push   esp
  41f2ad:	jb     0x41f324
  41f2af:	add    BYTE PTR gs:[eax],al
  41f2b2:	add    BYTE PTR [eax],al
  41f2b4:	(bad)  
  41f2b5:	(bad)  
  41f2b6:	(bad)  
  41f2b7:	inc    DWORD PTR ds:0x46000000
  41f2bd:	popa   
  41f2be:	ins    BYTE PTR es:[edi],dx
  41f2bf:	jae    0x41f326
  41f2c1:	add    BYTE PTR [eax],al
  41f2c3:	add    BYTE PTR [ebp-0x75],dl
  41f2c6:	in     al,dx
  41f2c7:	push   ecx
  41f2c8:	push   ebx
  41f2c9:	push   esi
  41f2ca:	push   edi
  41f2cb:	mov    BYTE PTR [ebp-0x1],0x0
  41f2cf:	mov    esi,edx
  41f2d1:	test   esi,esi
  41f2d3:	jl     0x41f2f5
  41f2d5:	inc    esi
  41f2d6:	mov    ebx,eax
  41f2d8:	mov    eax,DWORD PTR [ebp+0x8]
  41f2db:	mov    eax,DWORD PTR [eax-0x4]
  41f2de:	mov    edx,DWORD PTR [ebx]
  41f2e0:	call   0x41f00c
  41f2e5:	test   al,al
  41f2e7:	je     0x41f2ef
  41f2e9:	mov    BYTE PTR [ebp-0x1],0x1
  41f2ed:	jmp    0x41f2f5
  41f2ef:	add    ebx,0x4
  41f2f2:	dec    esi
  41f2f3:	jne    0x41f2d8
  41f2f5:	mov    al,BYTE PTR [ebp-0x1]
  41f2f8:	pop    edi
  41f2f9:	pop    esi
  41f2fa:	pop    ebx
  41f2fb:	pop    ecx
  41f2fc:	pop    ebp
  41f2fd:	ret    
  41f2fe:	mov    eax,eax
  41f300:	push   ebp
  41f301:	mov    ebp,esp
  41f303:	add    esp,0xfffffff0
  41f306:	push   ebx
  41f307:	mov    ebx,edx
  41f309:	mov    DWORD PTR [ebp-0x4],eax
  41f30c:	lea    edx,[ebp-0x10]
  41f30f:	mov    eax,DWORD PTR [ebp-0x4]
  41f312:	call   0x420384
  41f317:	mov    edx,eax
  41f319:	test   dl,dl
  41f31b:	je     0x41f32e
  41f31d:	fld    TBYTE PTR [ebp-0x10]
  41f320:	fcomp  DWORD PTR ds:0x41f380
  41f326:	fnstsw ax
  41f328:	sahf   
  41f329:	setne  BYTE PTR [ebx]
  41f32c:	jmp    0x41f377
  41f32e:	call   0x41f234
  41f333:	push   ebp
  41f334:	mov    eax,ds:0x42f788
  41f339:	call   0x404948
  41f33e:	mov    edx,eax
  41f340:	mov    eax,ds:0x42f788
  41f345:	call   0x41f2c4
  41f34a:	pop    ecx
  41f34b:	mov    edx,eax
  41f34d:	test   dl,dl
  41f34f:	je     0x41f356
  41f351:	mov    BYTE PTR [ebx],0x1
  41f354:	jmp    0x41f377
  41f356:	push   ebp
  41f357:	mov    eax,ds:0x42f78c
  41f35c:	call   0x404948
  41f361:	mov    edx,eax
  41f363:	mov    eax,ds:0x42f78c
  41f368:	call   0x41f2c4
  41f36d:	pop    ecx
  41f36e:	mov    edx,eax
  41f370:	test   dl,dl
  41f372:	je     0x41f377
  41f374:	mov    BYTE PTR [ebx],0x0
  41f377:	mov    eax,edx
  41f379:	pop    ebx
  41f37a:	mov    esp,ebp
  41f37c:	pop    ebp
  41f37d:	ret    
  41f37e:	add    BYTE PTR [eax],al
  41f380:	add    BYTE PTR [eax],al
  41f382:	add    BYTE PTR [eax],al
  41f384:	(bad)  
  41f385:	(bad)  
  41f386:	(bad)  
  41f387:	inc    DWORD PTR [ecx]
  41f389:	add    BYTE PTR [eax],al
  41f38b:	add    BYTE PTR [eax],dh
  41f38d:	add    BYTE PTR [eax],al
  41f38f:	add    bh,bh
  41f391:	(bad)  
  41f392:	(bad)  
  41f393:	inc    DWORD PTR [edx]
  41f395:	add    BYTE PTR [eax],al
  41f397:	add    BYTE PTR ds:0x53000031,ch
  41f39d:	push   esi
  41f39e:	mov    esi,ecx
  41f3a0:	mov    ebx,eax
  41f3a2:	test   dl,dl
  41f3a4:	je     0x41f3d2
  41f3a6:	call   0x41f234
  41f3ab:	test   bl,bl
  41f3ad:	je     0x41f3c0
  41f3af:	mov    eax,esi
  41f3b1:	mov    edx,DWORD PTR ds:0x42f788
  41f3b7:	mov    edx,DWORD PTR [edx]
  41f3b9:	call   0x403d00
  41f3be:	jmp    0x41f3e4
  41f3c0:	mov    eax,esi
  41f3c2:	mov    edx,DWORD PTR ds:0x42f78c
  41f3c8:	mov    edx,DWORD PTR [edx]
  41f3ca:	call   0x403d00
  41f3cf:	pop    esi
  41f3d0:	pop    ebx
  41f3d1:	ret    
  41f3d2:	mov    eax,esi
  41f3d4:	xor    edx,edx
  41f3d6:	mov    dl,bl
  41f3d8:	mov    edx,DWORD PTR [edx*4+0x42e12c]
  41f3df:	call   0x403d00
  41f3e4:	pop    esi
  41f3e5:	pop    ebx
  41f3e6:	ret    
  41f3e7:	nop
  41f3e8:	push   ebx
  41f3e9:	push   esi
  41f3ea:	push   edi
  41f3eb:	mov    ebx,edx
  41f3ed:	mov    edi,eax
  41f3ef:	or     eax,0xffffffff
  41f3f2:	mov    esi,ebx
  41f3f4:	and    esi,0x3
  41f3f7:	cmp    esi,0x2
  41f3fa:	ja     0x41f43b
  41f3fc:	mov    edx,ebx
  41f3fe:	and    edx,0xf0
  41f404:	cmp    edx,0x40
  41f407:	ja     0x41f43b
  41f409:	push   0x0
  41f40b:	push   0x80
  41f410:	push   0x3
  41f412:	push   0x0
  41f414:	mov    eax,ebx
  41f416:	and    eax,0xf0
  41f41b:	shr    eax,0x4
  41f41e:	mov    eax,DWORD PTR [eax*4+0x42e140]
  41f425:	push   eax
  41f426:	mov    eax,DWORD PTR [esi*4+0x42e134]
  41f42d:	push   eax
  41f42e:	mov    eax,edi
  41f430:	call   0x404148
  41f435:	push   eax
  41f436:	call   0x405a98
  41f43b:	pop    edi
  41f43c:	pop    esi
  41f43d:	pop    ebx
  41f43e:	ret    
  41f43f:	nop
  41f440:	push   ebx
  41f441:	mov    ebx,eax
  41f443:	push   0x0
  41f445:	push   0x80
  41f44a:	push   0x2
  41f44c:	push   0x0
  41f44e:	push   0x0
  41f450:	push   0xc0000000
  41f455:	mov    eax,ebx
  41f457:	call   0x404148
  41f45c:	push   eax
  41f45d:	call   0x405a98
  41f462:	pop    ebx
  41f463:	ret    
  41f464:	call   0x41f440
  41f469:	ret    
  41f46a:	mov    eax,eax
  41f46c:	push   ebx
  41f46d:	push   esi
  41f46e:	push   edi
  41f46f:	push   ecx
  41f470:	mov    edi,ecx
  41f472:	mov    esi,edx
  41f474:	mov    ebx,eax
  41f476:	push   0x0
  41f478:	lea    eax,[esp+0x4]
  41f47c:	push   eax
  41f47d:	push   edi
  41f47e:	push   esi
  41f47f:	push   ebx
  41f480:	call   0x405b50
  41f485:	test   eax,eax
  41f487:	jne    0x41f490
  41f489:	mov    DWORD PTR [esp],0xffffffff
  41f490:	mov    eax,DWORD PTR [esp]
  41f493:	pop    edx
  41f494:	pop    edi
  41f495:	pop    esi
  41f496:	pop    ebx
  41f497:	ret    
  41f498:	push   ebx
  41f499:	push   esi
  41f49a:	push   edi
  41f49b:	push   ecx
  41f49c:	mov    edi,ecx
  41f49e:	mov    esi,edx
  41f4a0:	mov    ebx,eax
  41f4a2:	push   0x0
  41f4a4:	lea    eax,[esp+0x4]
  41f4a8:	push   eax
  41f4a9:	push   edi
  41f4aa:	push   esi
  41f4ab:	push   ebx
  41f4ac:	call   0x405b88
  41f4b1:	test   eax,eax
  41f4b3:	jne    0x41f4bc
  41f4b5:	mov    DWORD PTR [esp],0xffffffff
  41f4bc:	mov    eax,DWORD PTR [esp]
  41f4bf:	pop    edx
  41f4c0:	pop    edi
  41f4c1:	pop    esi
  41f4c2:	pop    ebx
  41f4c3:	ret    
  41f4c4:	push   ebp
  41f4c5:	mov    ebp,esp
  41f4c7:	add    esp,0xfffffff8
  41f4ca:	push   ebx
  41f4cb:	push   esi
  41f4cc:	mov    esi,edx
  41f4ce:	mov    ebx,eax
  41f4d0:	mov    eax,DWORD PTR [ebp+0x8]
  41f4d3:	mov    DWORD PTR [ebp-0x8],eax
  41f4d6:	mov    eax,DWORD PTR [ebp+0xc]
  41f4d9:	mov    DWORD PTR [ebp-0x4],eax
  41f4dc:	push   esi
  41f4dd:	lea    eax,[ebp-0x4]
  41f4e0:	push   eax
  41f4e1:	mov    eax,DWORD PTR [ebp-0x8]
  41f4e4:	push   eax
  41f4e5:	push   ebx
  41f4e6:	call   0x405b70
  41f4eb:	mov    DWORD PTR [ebp-0x8],eax
  41f4ee:	mov    eax,DWORD PTR [ebp-0x8]
  41f4f1:	mov    edx,DWORD PTR [ebp-0x4]
  41f4f4:	pop    esi
  41f4f5:	pop    ebx
  41f4f6:	pop    ecx
  41f4f7:	pop    ecx
  41f4f8:	pop    ebp
  41f4f9:	ret    0x8
  41f4fc:	push   eax
  41f4fd:	call   0x405a80
  41f502:	ret    
  41f503:	nop
  41f504:	push   ebx
  41f505:	push   esi
  41f506:	push   edi
  41f507:	push   ecx
  41f508:	mov    esi,edx
  41f50a:	mov    ebx,eax
  41f50c:	mov    eax,esi
  41f50e:	call   0x403f48
  41f513:	mov    edi,eax
  41f515:	mov    eax,ebx
  41f517:	call   0x404148
  41f51c:	mov    DWORD PTR [esp],eax
  41f51f:	test   edi,edi
  41f521:	jle    0x41f54c
  41f523:	mov    bl,BYTE PTR [esi+edi*1-0x1]
  41f527:	test   bl,bl
  41f529:	je     0x41f547
  41f52b:	mov    edx,ebx
  41f52d:	mov    eax,DWORD PTR [esp]
  41f530:	call   0x41f6e8
  41f535:	test   eax,eax
  41f537:	je     0x41f547
  41f539:	mov    edx,edi
  41f53b:	mov    eax,esi
  41f53d:	call   0x422d70
  41f542:	cmp    al,0x2
  41f544:	jne    0x41f54c
  41f546:	dec    edi
  41f547:	dec    edi
  41f548:	test   edi,edi
  41f54a:	jg     0x41f523
  41f54c:	mov    eax,edi
  41f54e:	pop    edx
  41f54f:	pop    edi
  41f550:	pop    esi
  41f551:	pop    ebx
  41f552:	ret    
  41f553:	nop
  41f554:	push   ebx
  41f555:	push   esi
  41f556:	push   edi
  41f557:	mov    edi,edx
  41f559:	mov    ebx,eax
  41f55b:	mov    edx,ebx
  41f55d:	mov    eax,0x41f588
  41f562:	call   0x41f504
  41f567:	mov    esi,eax
  41f569:	push   edi
  41f56a:	lea    edx,[esi+0x1]
  41f56d:	mov    ecx,0x7fffffff
  41f572:	mov    eax,ebx
  41f574:	call   0x4041a0
  41f579:	pop    edi
  41f57a:	pop    esi
  41f57b:	pop    ebx
  41f57c:	ret    
  41f57d:	add    BYTE PTR [eax],al
  41f57f:	add    bh,bh
  41f581:	(bad)  
  41f582:	(bad)  
  41f583:	inc    DWORD PTR [edx]
  41f585:	add    BYTE PTR [eax],al
  41f587:	add    BYTE PTR [edx+edi*1+0x0],bl
  41f58b:	add    BYTE PTR [ebx+0x56],dl
  41f58e:	add    esp,0xfffffef8
  41f594:	mov    esi,edx
  41f596:	mov    ebx,eax
  41f598:	push   esp
  41f599:	lea    eax,[esp+0x8]
  41f59d:	push   eax
  41f59e:	push   0x104
  41f5a3:	mov    eax,ebx
  41f5a5:	call   0x404148
  41f5aa:	push   eax
  41f5ab:	call   0x405ae8
  41f5b0:	mov    ecx,eax
  41f5b2:	lea    edx,[esp+0x4]
  41f5b6:	mov    eax,esi
  41f5b8:	call   0x403d9c
  41f5bd:	add    esp,0x108
  41f5c3:	pop    esi
  41f5c4:	pop    ebx
  41f5c5:	ret    
  41f5c6:	mov    eax,eax
  41f5c8:	push   ebp
  41f5c9:	mov    ebp,esp
  41f5cb:	add    esp,0xffffffe4
  41f5ce:	push   ebx
  41f5cf:	mov    eax,DWORD PTR [ebp+0x8]
  41f5d2:	test   eax,eax
  41f5d4:	je     0x41f5db
  41f5d6:	mov    DWORD PTR [ebp-0x1c],eax
  41f5d9:	jmp    0x41f5e0
  41f5db:	xor    eax,eax
  41f5dd:	mov    DWORD PTR [ebp-0x1c],eax
  41f5e0:	lea    eax,[ebp-0x10]
  41f5e3:	push   eax
  41f5e4:	lea    eax,[ebp-0xc]
  41f5e7:	push   eax
  41f5e8:	lea    eax,[ebp-0x8]
  41f5eb:	push   eax
  41f5ec:	lea    eax,[ebp-0x4]
  41f5ef:	push   eax
  41f5f0:	mov    eax,DWORD PTR [ebp-0x1c]
  41f5f3:	push   eax
  41f5f4:	call   0x405ae0
  41f5f9:	mov    ebx,eax
  41f5fb:	mov    eax,DWORD PTR [ebp-0x4]
  41f5fe:	imul   DWORD PTR [ebp-0x8]
  41f601:	xor    edx,edx
  41f603:	mov    DWORD PTR [ebp-0x18],eax
  41f606:	mov    DWORD PTR [ebp-0x14],edx
  41f609:	mov    eax,DWORD PTR [ebp-0xc]
  41f60c:	xor    edx,edx
  41f60e:	push   edx
  41f60f:	push   eax
  41f610:	mov    eax,DWORD PTR [ebp-0x18]
  41f613:	mov    edx,DWORD PTR [ebp-0x14]
  41f616:	call   0x40491c
  41f61b:	mov    ecx,DWORD PTR [ebp+0xc]
  41f61e:	mov    DWORD PTR [ecx],eax
  41f620:	mov    DWORD PTR [ecx+0x4],edx
  41f623:	mov    eax,DWORD PTR [ebp-0x10]
  41f626:	xor    edx,edx
  41f628:	push   edx
  41f629:	push   eax
  41f62a:	mov    eax,DWORD PTR [ebp-0x18]
  41f62d:	mov    edx,DWORD PTR [ebp-0x14]
  41f630:	call   0x40491c
  41f635:	mov    ecx,DWORD PTR [ebp+0x10]
  41f638:	mov    DWORD PTR [ecx],eax
  41f63a:	mov    DWORD PTR [ecx+0x4],edx
  41f63d:	mov    eax,ebx
  41f63f:	pop    ebx
  41f640:	mov    esp,ebp
  41f642:	pop    ebp
  41f643:	ret    0x10
  41f646:	mov    eax,eax
  41f648:	mov    edx,edi
  41f64a:	mov    edi,eax
  41f64c:	mov    ecx,0xffffffff
  41f651:	xor    al,al
  41f653:	repnz scas al,BYTE PTR es:[edi]
  41f655:	mov    eax,0xfffffffe
  41f65a:	sub    eax,ecx
  41f65c:	mov    edi,edx
  41f65e:	ret    
  41f65f:	nop
  41f660:	push   ecx
  41f661:	mov    DWORD PTR [esp],eax
  41f664:	xchg   edx,eax
  41f665:	call   0x402b2c
  41f66a:	mov    eax,DWORD PTR [esp]
  41f66d:	pop    edx
  41f66e:	ret    
  41f66f:	nop
  41f670:	push   edi
  41f671:	push   esi
  41f672:	push   ebx
  41f673:	mov    esi,eax
  41f675:	mov    edi,edx
  41f677:	mov    ebx,ecx
  41f679:	xor    al,al
  41f67b:	test   ecx,ecx
  41f67d:	je     0x41f684
  41f67f:	repnz scas al,BYTE PTR es:[edi]
  41f681:	jne    0x41f684
  41f683:	inc    ecx
  41f684:	sub    ebx,ecx
  41f686:	mov    edi,esi
  41f688:	mov    esi,edx
  41f68a:	mov    edx,edi
  41f68c:	mov    ecx,ebx
  41f68e:	shr    ecx,0x2
  41f691:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f693:	mov    ecx,ebx
  41f695:	and    ecx,0x3
  41f698:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f69a:	stos   BYTE PTR es:[edi],al
  41f69b:	mov    eax,edx
  41f69d:	pop    ebx
  41f69e:	pop    esi
  41f69f:	pop    edi
  41f6a0:	ret    
  41f6a1:	lea    eax,[eax+0x0]
  41f6a4:	push   edi
  41f6a5:	push   esi
  41f6a6:	push   ebx
  41f6a7:	mov    edi,edx
  41f6a9:	mov    esi,eax
  41f6ab:	mov    ebx,ecx
  41f6ad:	xor    eax,eax
  41f6af:	or     ecx,ecx
  41f6b1:	je     0x41f6e2
  41f6b3:	repnz scas al,BYTE PTR es:[edi]
  41f6b5:	sub    ebx,ecx
  41f6b7:	mov    ecx,ebx
  41f6b9:	mov    edi,edx
  41f6bb:	xor    edx,edx
  41f6bd:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6bf:	je     0x41f6e2
  41f6c1:	mov    al,BYTE PTR [esi-0x1]
  41f6c4:	cmp    al,0x61
  41f6c6:	jb     0x41f6ce
  41f6c8:	cmp    al,0x7a
  41f6ca:	ja     0x41f6ce
  41f6cc:	sub    al,0x20
  41f6ce:	mov    dl,BYTE PTR [edi-0x1]
  41f6d1:	cmp    dl,0x61
  41f6d4:	jb     0x41f6de
  41f6d6:	cmp    dl,0x7a
  41f6d9:	ja     0x41f6de
  41f6db:	sub    dl,0x20
  41f6de:	sub    eax,edx
  41f6e0:	je     0x41f6bd
  41f6e2:	pop    ebx
  41f6e3:	pop    esi
  41f6e4:	pop    edi
  41f6e5:	ret    
  41f6e6:	mov    eax,eax
  41f6e8:	push   ecx
  41f6e9:	mov    ecx,esp
  41f6eb:	mov    DWORD PTR [ecx],eax
  41f6ed:	jmp    0x41f6fb
  41f6ef:	test   al,al
  41f6f1:	jne    0x41f6f9
  41f6f3:	xor    eax,eax
  41f6f5:	mov    DWORD PTR [ecx],eax
  41f6f7:	jmp    0x41f703
  41f6f9:	inc    DWORD PTR [ecx]
  41f6fb:	mov    eax,DWORD PTR [ecx]
  41f6fd:	mov    al,BYTE PTR [eax]
  41f6ff:	cmp    dl,al
  41f701:	jne    0x41f6ef
  41f703:	mov    eax,DWORD PTR [ecx]
  41f705:	pop    edx
  41f706:	ret    
  41f707:	nop
  41f708:	push   edi
  41f709:	push   esi
  41f70a:	push   ebx
  41f70b:	or     eax,eax
  41f70d:	je     0x41f753
  41f70f:	or     edx,edx
  41f711:	je     0x41f753
  41f713:	mov    ebx,eax
  41f715:	mov    edi,edx
  41f717:	xor    al,al
  41f719:	mov    ecx,0xffffffff
  41f71e:	repnz scas al,BYTE PTR es:[edi]
  41f720:	not    ecx
  41f722:	dec    ecx
  41f723:	je     0x41f753
  41f725:	mov    esi,ecx
  41f727:	mov    edi,ebx
  41f729:	mov    ecx,0xffffffff
  41f72e:	repnz scas al,BYTE PTR es:[edi]
  41f730:	not    ecx
  41f732:	sub    ecx,esi
  41f734:	jbe    0x41f753
  41f736:	mov    edi,ebx
  41f738:	lea    ebx,[esi-0x1]
  41f73b:	mov    esi,edx
  41f73d:	lods   al,BYTE PTR ds:[esi]
  41f73e:	repnz scas al,BYTE PTR es:[edi]
  41f740:	jne    0x41f753
  41f742:	mov    eax,ecx
  41f744:	push   edi
  41f745:	mov    ecx,ebx
  41f747:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f749:	pop    edi
  41f74a:	mov    ecx,eax
  41f74c:	jne    0x41f73b
  41f74e:	lea    eax,[edi-0x1]
  41f751:	jmp    0x41f755
  41f753:	xor    eax,eax
  41f755:	pop    ebx
  41f756:	pop    esi
  41f757:	pop    edi
  41f758:	ret    
  41f759:	lea    eax,[eax+0x0]
  41f75c:	push   ebx
  41f75d:	mov    ebx,eax
  41f75f:	add    ebx,0x4
  41f762:	mov    eax,ebx
  41f764:	call   0x402994
  41f769:	mov    DWORD PTR [eax],ebx
  41f76b:	add    eax,0x4
  41f76e:	pop    ebx
  41f76f:	ret    
  41f770:	push   ebx
  41f771:	push   esi
  41f772:	push   ecx
  41f773:	mov    ebx,eax
  41f775:	test   ebx,ebx
  41f777:	jne    0x41f780
  41f779:	xor    eax,eax
  41f77b:	mov    DWORD PTR [esp],eax
  41f77e:	jmp    0x41f79d
  41f780:	mov    eax,ebx
  41f782:	call   0x41f648
  41f787:	mov    esi,eax
  41f789:	inc    esi
  41f78a:	mov    eax,esi
  41f78c:	call   0x41f75c
  41f791:	mov    ecx,esi
  41f793:	mov    edx,ebx
  41f795:	call   0x41f660
  41f79a:	mov    DWORD PTR [esp],eax
  41f79d:	mov    eax,DWORD PTR [esp]
  41f7a0:	pop    edx
  41f7a1:	pop    esi
  41f7a2:	pop    ebx
  41f7a3:	ret    
  41f7a4:	push   ebx
  41f7a5:	push   esi
  41f7a6:	push   edi
  41f7a7:	add    esp,0xffffffd8
  41f7aa:	mov    ebx,ecx
  41f7ac:	mov    esi,edx
  41f7ae:	mov    edi,eax
  41f7b0:	cmp    ebx,0x1f
  41f7b3:	jbe    0x41f7ba
  41f7b5:	mov    ebx,0x1f
  41f7ba:	mov    edx,ebx
  41f7bc:	dec    edx
  41f7bd:	mov    eax,esi
  41f7bf:	call   0x422d94
  41f7c4:	cmp    al,0x1
  41f7c6:	jne    0x41f7c9
  41f7c8:	dec    ebx
  41f7c9:	mov    eax,esp
  41f7cb:	mov    ecx,ebx
  41f7cd:	mov    edx,esi
  41f7cf:	call   0x41f660
  41f7d4:	mov    BYTE PTR [esp+ebx*1],0x0
  41f7d8:	mov    eax,esp
  41f7da:	mov    DWORD PTR [esp+0x20],eax
  41f7de:	mov    BYTE PTR [esp+0x24],0x6
  41f7e3:	lea    edx,[esp+0x20]
  41f7e7:	mov    eax,DWORD PTR [edi*4+0x42e154]
  41f7ee:	xor    ecx,ecx
  41f7f0:	call   0x41ee40
  41f7f5:	add    esp,0x28
  41f7f8:	pop    edi
  41f7f9:	pop    esi
  41f7fa:	pop    ebx
  41f7fb:	ret    
  41f7fc:	push   ebx
  41f7fd:	mov    ecx,DWORD PTR ds:0x42e558
  41f803:	cmp    DWORD PTR [ecx],0x0
  41f806:	je     0x41f814
  41f808:	mov    ebx,DWORD PTR ds:0x42e558
  41f80e:	mov    ebx,DWORD PTR [ebx]
  41f810:	call   ebx
  41f812:	pop    ebx
  41f813:	ret    
  41f814:	mov    al,0x10
  41f816:	call   0x402a8c
  41f81b:	pop    ebx
  41f81c:	ret    
  41f81d:	lea    eax,[eax+0x0]
  41f820:	push   ebx
  41f821:	mov    ebx,eax
  41f823:	mov    eax,ebx
  41f825:	call   0x403cac
  41f82a:	pop    ebx
  41f82b:	ret    
  41f82c:	push   ebp
  41f82d:	mov    ebp,esp
  41f82f:	add    esp,0xffffff94
  41f832:	push   ebx
  41f833:	xor    ebx,ebx
  41f835:	mov    DWORD PTR [ebp-0x14],ebx
  41f838:	push   ebx
  41f839:	push   esi
  41f83a:	push   edi
  41f83b:	mov    edi,eax
  41f83d:	mov    esi,ecx
  41f83f:	xor    eax,eax
  41f841:	mov    DWORD PTR [ebp-0x4],eax
  41f844:	add    ecx,DWORD PTR [ebp+0x10]
  41f847:	mov    DWORD PTR [ebp-0x8],edi
  41f84a:	xor    eax,eax
  41f84c:	mov    DWORD PTR [ebp-0xc],eax
  41f84f:	mov    DWORD PTR [ebp-0x10],eax
  41f852:	mov    DWORD PTR [ebp-0x14],eax
  41f855:	or     edx,edx
  41f857:	je     0x41f866
  41f859:	cmp    esi,ecx
  41f85b:	je     0x41f866
  41f85d:	lods   al,BYTE PTR ds:[esi]
  41f85e:	cmp    al,0x25
  41f860:	je     0x41f870
  41f862:	stos   BYTE PTR es:[edi],al
  41f863:	dec    edx
  41f864:	jne    0x41f859
  41f866:	mov    eax,edi
  41f868:	sub    eax,DWORD PTR [ebp-0x8]
  41f86b:	jmp    0x41fb93
  41f870:	cmp    esi,ecx
  41f872:	je     0x41f866
  41f874:	lods   al,BYTE PTR ds:[esi]
  41f875:	cmp    al,0x25
  41f877:	je     0x41f862
  41f879:	lea    ebx,[esi-0x2]
  41f87c:	mov    DWORD PTR [ebp-0x18],ebx
  41f87f:	mov    BYTE PTR [ebp-0x19],al
  41f882:	cmp    al,0x2d
  41f884:	jne    0x41f88b
  41f886:	cmp    esi,ecx
  41f888:	je     0x41f866
  41f88a:	lods   al,BYTE PTR ds:[esi]
  41f88b:	call   0x41f90e
  41f890:	cmp    al,0x3a
  41f892:	jne    0x41f89e
  41f894:	mov    DWORD PTR [ebp-0xc],ebx
  41f897:	cmp    esi,ecx
  41f899:	je     0x41f866
  41f89b:	lods   al,BYTE PTR ds:[esi]
  41f89c:	jmp    0x41f87f
  41f89e:	mov    DWORD PTR [ebp-0x20],ebx
  41f8a1:	mov    ebx,0xffffffff
  41f8a6:	cmp    al,0x2e
  41f8a8:	jne    0x41f8b4
  41f8aa:	cmp    esi,ecx
  41f8ac:	je     0x41f866
  41f8ae:	lods   al,BYTE PTR ds:[esi]
  41f8af:	call   0x41f90e
  41f8b4:	mov    DWORD PTR [ebp-0x24],ebx
  41f8b7:	mov    DWORD PTR [ebp-0x28],esi
  41f8ba:	push   ecx
  41f8bb:	push   edx
  41f8bc:	call   0x41f956
  41f8c1:	pop    edx
  41f8c2:	mov    ebx,DWORD PTR [ebp-0x20]
  41f8c5:	sub    ebx,ecx
  41f8c7:	jae    0x41f8cb
  41f8c9:	xor    ebx,ebx
  41f8cb:	cmp    BYTE PTR [ebp-0x19],0x2d
  41f8cf:	jne    0x41f8db
  41f8d1:	sub    edx,ecx
  41f8d3:	jae    0x41f8d9
  41f8d5:	add    ecx,edx
  41f8d7:	xor    edx,edx
  41f8d9:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8db:	xchg   ecx,ebx
  41f8dd:	sub    edx,ecx
  41f8df:	jae    0x41f8e5
  41f8e1:	add    ecx,edx
  41f8e3:	xor    edx,edx
  41f8e5:	mov    al,0x20
  41f8e7:	rep stos BYTE PTR es:[edi],al
  41f8e9:	xchg   ecx,ebx
  41f8eb:	sub    edx,ecx
  41f8ed:	jae    0x41f8f3
  41f8ef:	add    ecx,edx
  41f8f1:	xor    edx,edx
  41f8f3:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8f5:	cmp    DWORD PTR [ebp-0x10],0x0
  41f8f9:	je     0x41f905
  41f8fb:	push   edx
  41f8fc:	lea    eax,[ebp-0x10]
  41f8ff:	call   0x41f820
  41f904:	pop    edx
  41f905:	pop    ecx
  41f906:	mov    esi,DWORD PTR [ebp-0x28]
  41f909:	jmp    0x41f855
  41f90e:	xor    ebx,ebx
  41f910:	cmp    al,0x2a
  41f912:	je     0x41f936
  41f914:	cmp    al,0x30
  41f916:	jb     0x41f955
  41f918:	cmp    al,0x39
  41f91a:	ja     0x41f955
  41f91c:	imul   ebx,ebx,0xa
  41f922:	sub    al,0x30
  41f924:	movzx  eax,al
  41f927:	add    ebx,eax
  41f929:	cmp    esi,ecx
  41f92b:	je     0x41f930
  41f92d:	lods   al,BYTE PTR ds:[esi]
  41f92e:	jmp    0x41f914
  41f930:	pop    eax
  41f931:	jmp    0x41f866
  41f936:	mov    eax,DWORD PTR [ebp-0xc]
  41f939:	cmp    eax,DWORD PTR [ebp+0x8]
  41f93c:	jg     0x41f950
  41f93e:	inc    DWORD PTR [ebp-0xc]
  41f941:	mov    ebx,DWORD PTR [ebp+0xc]
  41f944:	cmp    BYTE PTR [ebx+eax*8+0x4],0x0
  41f949:	mov    ebx,DWORD PTR [ebx+eax*8]
  41f94c:	je     0x41f950
  41f94e:	xor    ebx,ebx
  41f950:	cmp    esi,ecx
  41f952:	je     0x41f930
  41f954:	lods   al,BYTE PTR ds:[esi]
  41f955:	ret    
  41f956:	and    al,0xdf
  41f958:	mov    cl,al
  41f95a:	mov    eax,0x1
  41f95f:	mov    ebx,DWORD PTR [ebp-0xc]
  41f962:	cmp    ebx,DWORD PTR [ebp+0x8]
  41f965:	jg     0x41f9c3
  41f967:	inc    DWORD PTR [ebp-0xc]
  41f96a:	mov    esi,DWORD PTR [ebp+0xc]
  41f96d:	lea    esi,[esi+ebx*8]
  41f970:	mov    eax,DWORD PTR [esi]
  41f972:	movzx  edx,BYTE PTR [esi+0x4]
  41f976:	jmp    DWORD PTR [edx*4+0x41f97d]
  41f97d:	push   cs
  41f97e:	cli    
  41f97f:	inc    ecx
  41f980:	add    cl,al
  41f982:	stc    
  41f983:	inc    ecx
  41f984:	add    BYTE PTR [edi-0x6],al
  41f987:	inc    ecx
  41f988:	add    BYTE PTR [esi],cl
  41f98a:	sti    
  41f98b:	inc    ecx
  41f98c:	add    BYTE PTR [edi-0x6],dh
  41f98f:	inc    ecx
  41f990:	add    bh,ch
  41f992:	cli    
  41f993:	inc    ecx
  41f994:	add    bh,cl
  41f996:	cli    
  41f997:	inc    ecx
  41f998:	add    cl,al
  41f99a:	stc    
  41f99b:	inc    ecx
  41f99c:	add    cl,al
  41f99e:	stc    
  41f99f:	inc    ecx
  41f9a0:	add    cl,al
  41f9a2:	stc    
  41f9a3:	inc    ecx
  41f9a4:	add    BYTE PTR [eax-0x4cffbe06],cl
  41f9aa:	cli    
  41f9ab:	inc    ecx
  41f9ac:	add    BYTE PTR [edx],cl
  41f9ae:	sti    
  41f9af:	inc    ecx
  41f9b0:	add    BYTE PTR [esi-0x6],dl
  41f9b3:	inc    ecx
  41f9b4:	add    cl,al
  41f9b6:	stc    
  41f9b7:	inc    ecx
  41f9b8:	add    BYTE PTR [edi-0x27ffbe06],cl
  41f9be:	stc    
  41f9bf:	inc    ecx
  41f9c0:	add    BYTE PTR [ecx],dh
  41f9c2:	shr    al,0xbb
  41f9c5:	add    DWORD PTR [eax],eax
  41f9c7:	add    BYTE PTR [ebx+0x4d8be855],cl
  41f9cd:	fsubr  DWORD PTR [ecx]
  41f9cf:	ror    DWORD PTR [ebx-0x331703a3],1
  41f9d5:	std    
  41f9d6:	(bad)  
  41f9d7:	dec    DWORD PTR [ebp+0x558bb775]
  41f9dd:	fadd   QWORD PTR [ebx+0x27620fa]
  41f9e3:	xor    edx,edx
  41f9e5:	mov    ebx,ecx
  41f9e7:	sub    cl,0x44
  41f9ea:	je     0x41f0e0
  41f9f0:	mov    ecx,0x10
  41f9f5:	cmp    bl,0x58
  41f9f8:	je     0x41f0e0
  41f9fe:	mov    ecx,0xa
  41fa03:	cmp    bl,0x55
  41fa06:	je     0x41f0e0
  41fa0c:	jmp    0x41f9c1
  41fa0e:	lea    esi,[ebp-0x59]
  41fa11:	mov    edx,DWORD PTR [ebp-0x24]
  41fa14:	mov    ebx,ecx
  41fa16:	cmp    edx,0x10
  41fa19:	jbe    0x41fa1d
  41fa1b:	xor    edx,edx
  41fa1d:	sub    cl,0x44
  41fa20:	je     0x41f074
  41fa26:	mov    ecx,0x10
  41fa2b:	cmp    bl,0x58
  41fa2e:	je     0x41f074
  41fa34:	mov    ecx,0xa
  41fa39:	cmp    bl,0x55
  41fa3c:	je     0x41f074
  41fa42:	jmp    0x41f9c1
  41fa47:	cmp    cl,0x53
  41fa4a:	jne    0x41f9c1
  41fa50:	mov    ecx,0x1
  41fa55:	ret    
  41fa56:	cmp    cl,0x53
  41fa59:	jne    0x41f9c1
  41fa5f:	cmp    WORD PTR [eax],0x1
  41fa63:	jbe    0x41fa74
  41fa65:	mov    edx,eax
  41fa67:	lea    eax,[ebp-0x10]
  41fa6a:	call   0x41f7fc
  41fa6f:	mov    esi,DWORD PTR [ebp-0x10]
  41fa72:	jmp    0x41fabe
  41fa74:	xor    ecx,ecx
  41fa76:	ret    
  41fa77:	cmp    cl,0x53
  41fa7a:	jne    0x41f9c1
  41fa80:	mov    esi,eax
  41fa82:	lods   al,BYTE PTR ds:[esi]
  41fa83:	movzx  ecx,al
  41fa86:	jmp    0x41fac5
  41fa88:	mov    esi,0x403ed4
  41fa8d:	jmp    0x41fa94
  41fa8f:	mov    esi,0x403f34
  41fa94:	add    esi,DWORD PTR [ebp-0x4]
  41fa97:	cmp    cl,0x53
  41fa9a:	jne    0x41f9c1
  41faa0:	mov    edx,eax
  41faa2:	lea    eax,[ebp-0x14]
  41faa5:	push   ebx
  41faa6:	mov    ebx,DWORD PTR [ebp-0x4]
  41faa9:	call   esi
  41faab:	pop    ebx
  41faac:	mov    esi,DWORD PTR [ebp-0x14]
  41faaf:	mov    eax,esi
  41fab1:	jmp    0x41fabe
  41fab3:	cmp    cl,0x53
  41fab6:	jne    0x41f9c1
  41fabc:	mov    esi,eax
  41fabe:	or     esi,esi
  41fac0:	je     0x41fa74
  41fac2:	mov    ecx,DWORD PTR [esi-0x4]
  41fac5:	cmp    ecx,DWORD PTR [ebp-0x24]
  41fac8:	ja     0x41facb
  41faca:	ret    
  41facb:	mov    ecx,DWORD PTR [ebp-0x24]
  41face:	ret    
  41facf:	cmp    cl,0x53
  41fad2:	jne    0x41f9c1
  41fad8:	mov    esi,eax
  41fada:	push   edi
  41fadb:	mov    edi,eax
  41fadd:	xor    al,al
  41fadf:	mov    ecx,DWORD PTR [ebp-0x24]
  41fae2:	jecxz  0x41fae9
  41fae4:	repnz scas al,BYTE PTR es:[edi]
  41fae6:	jne    0x41fae9
  41fae8:	dec    edi
  41fae9:	mov    ecx,edi
  41faeb:	sub    ecx,esi
  41faed:	pop    edi
  41faee:	ret    
  41faef:	cmp    cl,0x50
  41faf2:	jne    0x41f9c1
  41faf8:	mov    edx,0x8
  41fafd:	mov    ecx,0x10
  41fb02:	lea    esi,[ebp-0x59]
  41fb05:	jmp    0x41f074
  41fb0a:	mov    bh,0x1
  41fb0c:	jmp    0x41fb10
  41fb0e:	mov    bh,0x0
  41fb10:	mov    esi,eax
  41fb12:	mov    bl,0x0
  41fb14:	cmp    cl,0x47
  41fb17:	je     0x41fb58
  41fb19:	mov    bl,0x1
  41fb1b:	cmp    cl,0x45
  41fb1e:	je     0x41fb58
  41fb20:	mov    bl,0x2
  41fb22:	cmp    cl,0x46
  41fb25:	je     0x41fb39
  41fb27:	mov    bl,0x3
  41fb29:	cmp    cl,0x4e
  41fb2c:	je     0x41fb39
  41fb2e:	cmp    cl,0x4d
  41fb31:	jne    0x41f9c1
  41fb37:	mov    bl,0x4
  41fb39:	mov    eax,0x12
  41fb3e:	mov    edx,DWORD PTR [ebp-0x24]
  41fb41:	cmp    edx,eax
  41fb43:	jbe    0x41fb6a
  41fb45:	mov    edx,0x2
  41fb4a:	cmp    cl,0x4d
  41fb4d:	jne    0x41fb6a
  41fb4f:	movzx  edx,BYTE PTR ds:0x42f688
  41fb56:	jmp    0x41fb6a
  41fb58:	mov    eax,DWORD PTR [ebp-0x24]
  41fb5b:	mov    edx,0x3
  41fb60:	cmp    eax,0x12
  41fb63:	jbe    0x41fb6a
  41fb65:	mov    eax,0xf
  41fb6a:	push   ebx
  41fb6b:	push   eax
  41fb6c:	push   edx
  41fb6d:	lea    eax,[ebp-0x69]
  41fb70:	mov    edx,esi
  41fb72:	movzx  ecx,bh
  41fb75:	mov    ebx,DWORD PTR [ebp-0x4]
  41fb78:	call   0x41fd10
  41fb7d:	mov    ecx,eax
  41fb7f:	lea    esi,[ebp-0x69]
  41fb82:	ret    
  41fb83:	push   ebx
  41fb84:	push   eax
  41fb85:	lea    eax,[ebp-0x14]
  41fb88:	mov    ebx,DWORD PTR [ebp-0x4]
  41fb8b:	call   0x403cac
  41fb90:	pop    eax
  41fb91:	pop    ebx
  41fb92:	ret    
  41fb93:	call   0x41fb83
  41fb98:	pop    edi
  41fb99:	pop    esi
  41fb9a:	pop    ebx
  41fb9b:	pop    ebx
  41fb9c:	mov    esp,ebp
  41fb9e:	pop    ebp
  41fb9f:	ret    0xc
  41fba2:	mov    eax,eax
  41fba4:	push   ebp
  41fba5:	mov    ebp,esp
  41fba7:	push   ecx
  41fba8:	push   ebx
  41fba9:	push   esi
  41fbaa:	push   edi
  41fbab:	mov    esi,ecx
  41fbad:	mov    edi,edx
  41fbaf:	mov    ebx,eax
  41fbb1:	test   ebx,ebx
  41fbb3:	je     0x41fbdd
  41fbb5:	test   esi,esi
  41fbb7:	je     0x41fbdd
  41fbb9:	mov    eax,esi
  41fbbb:	call   0x41f648
  41fbc0:	push   eax
  41fbc1:	mov    eax,DWORD PTR [ebp+0xc]
  41fbc4:	push   eax
  41fbc5:	mov    eax,DWORD PTR [ebp+0x8]
  41fbc8:	push   eax
  41fbc9:	mov    ecx,esi
  41fbcb:	mov    eax,ebx
  41fbcd:	mov    edx,edi
  41fbcf:	call   0x41f82c
  41fbd4:	mov    BYTE PTR [ebx+eax*1],0x0
  41fbd8:	mov    DWORD PTR [ebp-0x4],ebx
  41fbdb:	jmp    0x41fbe2
  41fbdd:	xor    eax,eax
  41fbdf:	mov    DWORD PTR [ebp-0x4],eax
  41fbe2:	mov    eax,DWORD PTR [ebp-0x4]
  41fbe5:	pop    edi
  41fbe6:	pop    esi
  41fbe7:	pop    ebx
  41fbe8:	pop    ecx
  41fbe9:	pop    ebp
  41fbea:	ret    0x8
  41fbed:	lea    eax,[eax+0x0]
  41fbf0:	push   ebp
  41fbf1:	mov    ebp,esp
  41fbf3:	push   ecx
  41fbf4:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbf7:	xchg   ecx,eax
  41fbf8:	xchg   ecx,edx
  41fbfa:	call   0x41fc04
  41fbff:	pop    ebp
  41fc00:	ret    0x4
  41fc03:	nop
  41fc04:	push   ebp
  41fc05:	mov    ebp,esp
  41fc07:	add    esp,0xfffff004
  41fc0d:	push   eax
  41fc0e:	add    esp,0xfffffff8
  41fc11:	push   ebx
  41fc12:	push   esi
  41fc13:	push   edi
  41fc14:	mov    DWORD PTR [ebp-0x8],ecx
  41fc17:	mov    DWORD PTR [ebp-0x4],edx
  41fc1a:	mov    esi,eax
  41fc1c:	mov    ebx,0x1000
  41fc21:	mov    eax,DWORD PTR [ebp-0x4]
  41fc24:	call   0x403f48
  41fc29:	cmp    eax,0xc00
  41fc2e:	jge    0x41fc58
  41fc30:	mov    eax,DWORD PTR [ebp-0x4]
  41fc33:	call   0x403f48
  41fc38:	push   eax
  41fc39:	mov    eax,DWORD PTR [ebp-0x8]
  41fc3c:	push   eax
  41fc3d:	mov    eax,DWORD PTR [ebp+0x8]
  41fc40:	push   eax
  41fc41:	mov    ecx,DWORD PTR [ebp-0x4]
  41fc44:	lea    eax,[ebp-0x1008]
  41fc4a:	mov    edx,0xfff
  41fc4f:	call   0x41f82c
  41fc54:	mov    edi,eax
  41fc56:	jmp    0x41fc64
  41fc58:	mov    eax,DWORD PTR [ebp-0x4]
  41fc5b:	call   0x403f48
  41fc60:	mov    ebx,eax
  41fc62:	mov    edi,ebx
  41fc64:	mov    eax,ebx
  41fc66:	dec    eax
  41fc67:	cmp    edi,eax
  41fc69:	jl     0x41fcb1
  41fc6b:	jmp    0x41fc9f
  41fc6d:	add    ebx,ebx
  41fc6f:	mov    eax,esi
  41fc71:	call   0x403cac
  41fc76:	mov    eax,esi
  41fc78:	mov    edx,ebx
  41fc7a:	call   0x404284
  41fc7f:	mov    eax,DWORD PTR [ebp-0x4]
  41fc82:	call   0x403f48
  41fc87:	push   eax
  41fc88:	mov    eax,DWORD PTR [ebp-0x8]
  41fc8b:	push   eax
  41fc8c:	mov    eax,DWORD PTR [ebp+0x8]
  41fc8f:	push   eax
  41fc90:	mov    ecx,DWORD PTR [ebp-0x4]
  41fc93:	mov    edx,ebx
  41fc95:	dec    edx
  41fc96:	mov    eax,DWORD PTR [esi]
  41fc98:	call   0x41f82c
  41fc9d:	mov    edi,eax
  41fc9f:	mov    eax,ebx
  41fca1:	dec    eax
  41fca2:	cmp    edi,eax
  41fca4:	jge    0x41fc6d
  41fca6:	mov    eax,esi
  41fca8:	mov    edx,edi
  41fcaa:	call   0x404284
  41fcaf:	jmp    0x41fcc0
  41fcb1:	lea    edx,[ebp-0x1008]
  41fcb7:	mov    eax,esi
  41fcb9:	mov    ecx,edi
  41fcbb:	call   0x403d9c
  41fcc0:	pop    edi
  41fcc1:	pop    esi
  41fcc2:	pop    ebx
  41fcc3:	mov    esp,ebp
  41fcc5:	pop    ebp
  41fcc6:	ret    0x4
  41fcc9:	lea    eax,[eax+0x0]
  41fccc:	push   esi
  41fccd:	xor    esi,esi
  41fccf:	stos   BYTE PTR es:[edi],al
  41fcd0:	or     bl,bl
  41fcd2:	jne    0x41fcd8
  41fcd4:	xor    edx,edx
  41fcd6:	jmp    0x41fce2
  41fcd8:	or     edx,edx
  41fcda:	jge    0x41fce2
  41fcdc:	mov    al,0x2d
  41fcde:	neg    edx
  41fce0:	jmp    0x41fce8
  41fce2:	or     ah,ah
  41fce4:	je     0x41fce9
  41fce6:	mov    al,ah
  41fce8:	stos   BYTE PTR es:[edi],al
  41fce9:	xchg   edx,eax
  41fcea:	push   eax
  41fceb:	mov    ebx,esp
  41fced:	xor    edx,edx
  41fcef:	div    DWORD PTR [esi+0x42e168]
  41fcf5:	add    dl,0x30
  41fcf8:	mov    BYTE PTR [ebx],dl
  41fcfa:	inc    ebx
  41fcfb:	dec    ecx
  41fcfc:	or     eax,eax
  41fcfe:	jne    0x41fced
  41fd00:	or     ecx,ecx
  41fd02:	jg     0x41fced
  41fd04:	dec    ebx
  41fd05:	mov    al,BYTE PTR [ebx]
  41fd07:	stos   BYTE PTR es:[edi],al
  41fd08:	cmp    ebx,esp
  41fd0a:	jne    0x41fd04
  41fd0c:	pop    eax
  41fd0d:	pop    esi
  41fd0e:	ret    
  41fd0f:	nop
  41fd10:	push   ebp
  41fd11:	mov    ebp,esp
  41fd13:	add    esp,0xffffffd4
  41fd16:	push   edi
  41fd17:	push   esi
  41fd18:	push   ebx
  41fd19:	mov    DWORD PTR [ebp-0x4],eax
  41fd1c:	mov    al,ds:0x42f687
  41fd21:	mov    BYTE PTR [ebp-0x5],al
  41fd24:	mov    al,ds:0x42f686
  41fd29:	mov    BYTE PTR [ebp-0x6],al
  41fd2c:	mov    eax,ds:0x42f680
  41fd31:	mov    DWORD PTR [ebp-0xc],eax
  41fd34:	mov    al,ds:0x42f684
  41fd39:	mov    BYTE PTR [ebp-0xd],al
  41fd3c:	mov    al,ds:0x42f685
  41fd41:	mov    BYTE PTR [ebp-0xe],al
  41fd44:	mov    DWORD PTR [ebp-0x14],0x0
  41fd4b:	mov    eax,0x13
  41fd50:	cmp    cl,0x0
  41fd53:	jne    0x41fd6c
  41fd55:	mov    eax,DWORD PTR [ebp+0xc]
  41fd58:	cmp    eax,0x2
  41fd5b:	jge    0x41fd62
  41fd5d:	mov    eax,0x2
  41fd62:	cmp    eax,0x12
  41fd65:	jle    0x41fd6c
  41fd67:	mov    eax,0x12
  41fd6c:	mov    DWORD PTR [ebp+0xc],eax
  41fd6f:	push   eax
  41fd70:	mov    eax,0x270f
  41fd75:	cmp    BYTE PTR [ebp+0x10],0x2
  41fd79:	jb     0x41fd7e
  41fd7b:	mov    eax,DWORD PTR [ebp+0x8]
  41fd7e:	push   eax
  41fd7f:	lea    eax,[ebp-0x2c]
  41fd82:	call   0x41ffe4
  41fd87:	mov    edi,DWORD PTR [ebp-0x4]
  41fd8a:	movzx  eax,WORD PTR [ebp-0x2c]
  41fd8e:	sub    eax,0x7fff
  41fd93:	cmp    eax,0x2
  41fd96:	jae    0x41fdb2
  41fd98:	mov    ecx,eax
  41fd9a:	call   0x41fe0f
  41fd9f:	lea    esi,[ecx+ecx*2+0x41fe00]
  41fda6:	add    esi,DWORD PTR [ebp-0x14]
  41fda9:	mov    ecx,0x3
  41fdae:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdb0:	jmp    0x41fddf
  41fdb2:	lea    esi,[ebp-0x29]
  41fdb5:	movzx  ebx,BYTE PTR [ebp+0x10]
  41fdb9:	cmp    bl,0x1
  41fdbc:	je     0x41fdce
  41fdbe:	cmp    bl,0x4
  41fdc1:	ja     0x41fdcc
  41fdc3:	movsx  eax,WORD PTR [ebp-0x2c]
  41fdc7:	cmp    eax,DWORD PTR [ebp+0xc]
  41fdca:	jle    0x41fdce
  41fdcc:	mov    bl,0x0
  41fdce:	lea    ebx,[ebx*4+0x41fdec]
  41fdd5:	add    ebx,DWORD PTR [ebp-0x14]
  41fdd8:	mov    ebx,DWORD PTR [ebx]
  41fdda:	add    ebx,DWORD PTR [ebp-0x14]
  41fddd:	call   ebx
  41fddf:	mov    eax,edi
  41fde1:	sub    eax,DWORD PTR [ebp-0x4]
  41fde4:	pop    ebx
  41fde5:	pop    esi
  41fde6:	pop    edi
  41fde7:	jmp    0x41ffdd
  41fdec:	sbb    esi,edi
  41fdee:	inc    ecx
  41fdef:	add    BYTE PTR [ebp-0x2],dh
  41fdf2:	inc    ecx
  41fdf3:	add    BYTE PTR [esi+edi*8-0x153ffbf],ch
  41fdfa:	inc    ecx
  41fdfb:	add    BYTE PTR [esi],dl
  41fdfd:	inc    DWORD PTR [ecx+0x0]
  41fe00:	dec    ecx
  41fe01:	dec    esi
  41fe02:	inc    esi
  41fe03:	dec    esi
  41fe04:	inc    ecx
  41fe05:	dec    esi
  41fe06:	lods   al,BYTE PTR ds:[esi]
  41fe07:	or     al,al
  41fe09:	jne    0x41fe0e
  41fe0b:	mov    al,0x30
  41fe0d:	dec    esi
  41fe0e:	ret    
  41fe0f:	cmp    BYTE PTR [ebp-0x2a],0x0
  41fe13:	je     0x41fe18
  41fe15:	mov    al,0x2d
  41fe17:	stos   BYTE PTR es:[edi],al
  41fe18:	ret    
  41fe19:	call   0x41fe0f
  41fe1e:	movsx  ecx,WORD PTR [ebp-0x2c]
  41fe22:	xor    edx,edx
  41fe24:	cmp    ecx,DWORD PTR [ebp+0xc]
  41fe27:	jg     0x41fe46
  41fe29:	cmp    ecx,0xfffffffd
  41fe2c:	jl     0x41fe46
  41fe2e:	or     ecx,ecx
  41fe30:	jg     0x41fe4c
  41fe32:	mov    al,0x30
  41fe34:	stos   BYTE PTR es:[edi],al
  41fe35:	cmp    BYTE PTR [esi],0x0
  41fe38:	je     0x41fe74
  41fe3a:	mov    al,BYTE PTR [ebp-0x5]
  41fe3d:	stos   BYTE PTR es:[edi],al
  41fe3e:	neg    ecx
  41fe40:	mov    al,0x30
  41fe42:	rep stos BYTE PTR es:[edi],al
  41fe44:	jmp    0x41fe60
  41fe46:	mov    ecx,0x1
  41fe4b:	inc    edx
  41fe4c:	lods   al,BYTE PTR ds:[esi]
  41fe4d:	or     al,al
  41fe4f:	je     0x41fe68
  41fe51:	stos   BYTE PTR es:[edi],al
  41fe52:	loop   0x41fe4c
  41fe54:	lods   al,BYTE PTR ds:[esi]
  41fe55:	or     al,al
  41fe57:	je     0x41fe6c
  41fe59:	mov    ah,al
  41fe5b:	mov    al,BYTE PTR [ebp-0x5]
  41fe5e:	stos   WORD PTR es:[edi],ax
  41fe60:	lods   al,BYTE PTR ds:[esi]
  41fe61:	or     al,al
  41fe63:	je     0x41fe6c
  41fe65:	stos   BYTE PTR es:[edi],al
  41fe66:	jmp    0x41fe60
  41fe68:	mov    al,0x30
  41fe6a:	rep stos BYTE PTR es:[edi],al
  41fe6c:	or     edx,edx
  41fe6e:	je     0x41fe74
  41fe70:	xor    eax,eax
  41fe72:	jmp    0x41fe92
  41fe74:	ret    
  41fe75:	call   0x41fe0f
  41fe7a:	call   0x41fe06
  41fe7f:	mov    ah,BYTE PTR [ebp-0x5]
  41fe82:	stos   WORD PTR es:[edi],ax
  41fe84:	mov    ecx,DWORD PTR [ebp+0xc]
  41fe87:	dec    ecx
  41fe88:	call   0x41fe06
  41fe8d:	stos   BYTE PTR es:[edi],al
  41fe8e:	loop   0x41fe88
  41fe90:	mov    ah,0x2b
  41fe92:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe95:	cmp    ecx,0x4
  41fe98:	jbe    0x41fe9c
  41fe9a:	xor    ecx,ecx
  41fe9c:	mov    al,0x45
  41fe9e:	mov    bl,BYTE PTR [ebp-0x29]
  41fea1:	movsx  edx,WORD PTR [ebp-0x2c]
  41fea5:	dec    edx
  41fea6:	call   0x41fccc
  41feab:	ret    
  41feac:	call   0x41fe0f
  41feb1:	mov    edx,DWORD PTR [ebp+0x8]
  41feb4:	cmp    edx,0x12
  41feb7:	jb     0x41febe
  41feb9:	mov    edx,0x12
  41febe:	movsx  ecx,WORD PTR [ebp-0x2c]
  41fec2:	or     ecx,ecx
  41fec4:	jg     0x41fecb
  41fec6:	mov    al,0x30
  41fec8:	stos   BYTE PTR es:[edi],al
  41fec9:	jmp    0x41fef5
  41fecb:	xor    ebx,ebx
  41fecd:	cmp    BYTE PTR [ebp+0x10],0x2
  41fed1:	je     0x41fedd
  41fed3:	mov    eax,ecx
  41fed5:	dec    eax
  41fed6:	mov    bl,0x3
  41fed8:	div    bl
  41feda:	mov    bl,ah
  41fedc:	inc    ebx
  41fedd:	call   0x41fe06
  41fee2:	stos   BYTE PTR es:[edi],al
  41fee3:	dec    ecx
  41fee4:	je     0x41fef5
  41fee6:	dec    ebx
  41fee7:	jne    0x41fedd
  41fee9:	mov    al,BYTE PTR [ebp-0x6]
  41feec:	test   al,al
  41feee:	je     0x41fedd
  41fef0:	stos   BYTE PTR es:[edi],al
  41fef1:	mov    bl,0x3
  41fef3:	jmp    0x41fedd
  41fef5:	or     edx,edx
  41fef7:	je     0x41ff15
  41fef9:	mov    al,BYTE PTR [ebp-0x5]
  41fefc:	test   al,al
  41fefe:	je     0x41ff01
  41ff00:	stos   BYTE PTR es:[edi],al
  41ff01:	jecxz  0x41ff0c
  41ff03:	mov    al,0x30
  41ff05:	stos   BYTE PTR es:[edi],al
  41ff06:	dec    edx
  41ff07:	je     0x41ff15
  41ff09:	inc    ecx
  41ff0a:	jne    0x41ff05
  41ff0c:	call   0x41fe06
  41ff11:	stos   BYTE PTR es:[edi],al
  41ff12:	dec    edx
  41ff13:	jne    0x41ff0c
  41ff15:	ret    
  41ff16:	xor    ebx,ebx
  41ff18:	mov    bl,BYTE PTR [ebp-0xd]
  41ff1b:	mov    ecx,0x3
  41ff20:	cmp    BYTE PTR [ebp-0x2a],0x0
  41ff24:	je     0x41ff2e
  41ff26:	mov    bl,BYTE PTR [ebp-0xe]
  41ff29:	mov    ecx,0x40f
  41ff2e:	cmp    bl,cl
  41ff30:	jbe    0x41ff34
  41ff32:	mov    bl,cl
  41ff34:	add    bl,ch
  41ff36:	lea    ebx,[ebx+ebx*4+0x41ff79]
  41ff3d:	add    ebx,DWORD PTR [ebp-0x14]
  41ff40:	mov    ecx,0x5
  41ff45:	mov    al,BYTE PTR [ebx]
  41ff47:	cmp    al,0x40
  41ff49:	je     0x41ff69
  41ff4b:	push   ecx
  41ff4c:	push   ebx
  41ff4d:	cmp    al,0x24
  41ff4f:	je     0x41ff58
  41ff51:	cmp    al,0x2a
  41ff53:	je     0x41ff5f
  41ff55:	stos   BYTE PTR es:[edi],al
  41ff56:	jmp    0x41ff64
  41ff58:	call   0x41ff6a
  41ff5d:	jmp    0x41ff64
  41ff5f:	call   0x41feb1
  41ff64:	pop    ebx
  41ff65:	pop    ecx
  41ff66:	inc    ebx
  41ff67:	loop   0x41ff45
  41ff69:	ret    
  41ff6a:	push   esi
  41ff6b:	mov    esi,DWORD PTR [ebp-0xc]
  41ff6e:	test   esi,esi
  41ff70:	je     0x41ff77
  41ff72:	mov    ecx,DWORD PTR [esi-0x4]
  41ff75:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff77:	pop    esi
  41ff78:	ret    
  41ff79:	and    al,0x2a
  41ff7b:	inc    eax
  41ff7c:	inc    eax
  41ff7d:	inc    eax
  41ff7e:	sub    ah,BYTE PTR [eax+eax*2]
  41ff81:	inc    eax
  41ff82:	inc    eax
  41ff83:	and    al,0x20
  41ff85:	sub    al,BYTE PTR [eax+0x40]
  41ff88:	sub    ah,BYTE PTR [eax]
  41ff8a:	and    al,0x40
  41ff8c:	inc    eax
  41ff8d:	sub    BYTE PTR [edx+ebp*1],ah
  41ff90:	sub    DWORD PTR [eax+0x2d],eax
  41ff93:	and    al,0x2a
  41ff95:	inc    eax
  41ff96:	inc    eax
  41ff97:	and    al,0x2d
  41ff99:	sub    al,BYTE PTR [eax+0x40]
  41ff9c:	and    al,0x2a
  41ff9e:	sub    eax,0x2a284040
  41ffa3:	and    al,0x29
  41ffa5:	inc    eax
  41ffa6:	sub    eax,0x4040242a
  41ffab:	sub    ch,BYTE PTR ds:0x2a404024
  41ffb1:	and    al,0x2d
  41ffb3:	inc    eax
  41ffb4:	inc    eax
  41ffb5:	sub    eax,0x4024202a
  41ffba:	sub    eax,0x402a2024
  41ffbf:	sub    ah,BYTE PTR [eax]
  41ffc1:	and    al,0x2d
  41ffc3:	inc    eax
  41ffc4:	and    al,0x20
  41ffc6:	sub    ch,BYTE PTR ds:0x2d202440
  41ffcc:	sub    al,BYTE PTR [eax+0x2a]
  41ffcf:	sub    eax,0x28402420
  41ffd4:	and    al,0x20
  41ffd6:	sub    ch,BYTE PTR [ecx]
  41ffd8:	sub    BYTE PTR [edx],ch
  41ffda:	and    BYTE PTR [ecx+ebp*1],ah
  41ffdd:	mov    esp,ebp
  41ffdf:	pop    ebp
  41ffe0:	ret    0xc
  41ffe3:	nop
  41ffe4:	push   ebp
  41ffe5:	mov    ebp,esp
  41ffe7:	add    esp,0xffffffe0
  41ffea:	push   edi
  41ffeb:	push   esi
  41ffec:	push   ebx
  41ffed:	mov    ebx,eax
  41ffef:	mov    esi,edx
  41fff1:	mov    DWORD PTR [ebp-0x4],0x0
  41fff8:	cmp    cl,0x0
  41fffb:	je     0x420007
  41fffd:	call   0x420133
  420002:	jmp    0x420207
  420007:	call   0x420011
  42000c:	jmp    0x420207
  420011:	mov    ax,WORD PTR [esi+0x8]
  420015:	mov    edx,eax
  420017:	and    eax,0x7fff
  42001c:	je     0x42003c
  42001e:	cmp    eax,0x7fff
  420023:	jne    0x420047
  420025:	test   WORD PTR [esi+0x6],0x8000
  42002b:	je     0x42003e
  42002d:	cmp    DWORD PTR [esi],0x0
  420030:	jne    0x42003b
  420032:	cmp    DWORD PTR [esi+0x4],0x80000000
  420039:	je     0x42003e
  42003b:	inc    eax
  42003c:	xor    edx,edx
  42003e:	mov    BYTE PTR [ebx+0x3],0x0
  420042:	jmp    0x420114
  420047:	fld    TBYTE PTR [esi]
  420049:	sub    eax,0x3fff
  42004e:	imul   eax,eax,0x4d10
  420054:	sar    eax,0x10
  420057:	inc    eax
  420058:	mov    DWORD PTR [ebp-0x8],eax
  42005b:	mov    eax,0x12
  420060:	sub    eax,DWORD PTR [ebp-0x8]
  420063:	fabs   
  420065:	push   ebx
  420066:	mov    ebx,DWORD PTR [ebp-0x4]
  420069:	call   0x402d3c
  42006e:	pop    ebx
  42006f:	frndint 
  420071:	mov    edi,DWORD PTR [ebp-0x4]
  420074:	fld    TBYTE PTR [edi+0x42e15c]
  42007a:	fcomp  st(1)
  42007c:	fstsw  WORD PTR [ebp-0xa]
  420080:	fwait
  420081:	test   WORD PTR [ebp-0xa],0x4100
  420087:	je     0x420092
  420089:	fidiv  DWORD PTR [edi+0x42e168]
  42008f:	inc    DWORD PTR [ebp-0x8]
  420092:	fbstp  TBYTE PTR [ebp-0x18]
  420095:	lea    edi,[ebx+0x3]
  420098:	mov    edx,0x9
  42009d:	fwait
  42009e:	mov    al,BYTE PTR [edx+ebp*1-0x19]
  4200a2:	mov    ah,al
  4200a4:	shr    al,0x4
  4200a7:	and    ah,0xf
  4200aa:	add    ax,0x3030
  4200ae:	stos   WORD PTR es:[edi],ax
  4200b0:	dec    edx
  4200b1:	jne    0x42009e
  4200b3:	xor    al,al
  4200b5:	stos   BYTE PTR es:[edi],al
  4200b6:	mov    edi,DWORD PTR [ebp-0x8]
  4200b9:	add    edi,DWORD PTR [ebp+0x8]
  4200bc:	jns    0x4200c5
  4200be:	xor    eax,eax
  4200c0:	jmp    0x42003c
  4200c5:	cmp    edi,DWORD PTR [ebp+0xc]
  4200c8:	jb     0x4200cd
  4200ca:	mov    edi,DWORD PTR [ebp+0xc]
  4200cd:	cmp    edi,0x12
  4200d0:	jae    0x4200f9
  4200d2:	cmp    BYTE PTR [ebx+edi*1+0x3],0x35
  4200d7:	jb     0x4200fe
  4200d9:	mov    BYTE PTR [ebx+edi*1+0x3],0x0
  4200de:	dec    edi
  4200df:	js     0x4200ee
  4200e1:	inc    BYTE PTR [ebx+edi*1+0x3]
  4200e5:	cmp    BYTE PTR [ebx+edi*1+0x3],0x39
  4200ea:	ja     0x4200d9
  4200ec:	jmp    0x42010d
  4200ee:	mov    WORD PTR [ebx+0x3],0x31
  4200f4:	inc    DWORD PTR [ebp-0x8]
  4200f7:	jmp    0x42010d
  4200f9:	mov    edi,0x12
  4200fe:	mov    BYTE PTR [ebx+edi*1+0x3],0x0
  420103:	dec    edi
  420104:	js     0x42011f
  420106:	cmp    BYTE PTR [ebx+edi*1+0x3],0x30
  42010b:	je     0x4200fe
  42010d:	mov    dx,WORD PTR [esi+0x8]
  420111:	mov    eax,DWORD PTR [ebp-0x8]
  420114:	shr    dx,0xf
  420118:	mov    WORD PTR [ebx],ax
  42011b:	mov    BYTE PTR [ebx+0x2],dl
  42011e:	ret    
  42011f:	xor    edx,edx
  420121:	jmp    0x420111
  420123:	or     al,BYTE PTR [eax]
  420125:	add    BYTE PTR [eax],al
  420127:	add    BYTE PTR fs:[eax],al
  42012a:	add    al,ch
  42012c:	add    eax,DWORD PTR [eax]
  42012e:	add    BYTE PTR [eax],dl
  420130:	daa    
  420131:	add    BYTE PTR [eax],al
  420133:	mov    eax,DWORD PTR [esi]
  420135:	mov    edx,DWORD PTR [esi+0x4]
  420138:	mov    ecx,eax
  42013a:	or     ecx,edx
  42013c:	je     0x4201f9
  420142:	or     edx,edx
  420144:	jns    0x42014d
  420146:	neg    edx
  420148:	neg    eax
  42014a:	sbb    edx,0x0
  42014d:	xor    ecx,ecx
  42014f:	mov    edi,DWORD PTR [ebp+0x8]
  420152:	or     edi,edi
  420154:	jge    0x420158
  420156:	xor    edi,edi
  420158:	cmp    edi,0x4
  42015b:	jl     0x42017c
  42015d:	mov    edi,0x4
  420162:	inc    ecx
  420163:	sub    eax,0xa7640000
  420168:	sbb    edx,0xde0b6b3
  42016e:	jae    0x420162
  420170:	dec    ecx
  420171:	add    eax,0xa7640000
  420176:	adc    edx,0xde0b6b3
  42017c:	mov    DWORD PTR [ebp-0x20],eax
  42017f:	mov    DWORD PTR [ebp-0x1c],edx
  420182:	fild   QWORD PTR [ebp-0x20]
  420185:	mov    edx,edi
  420187:	mov    eax,0x4
  42018c:	sub    eax,edx
  42018e:	je     0x42019a
  420190:	mov    edi,DWORD PTR [ebp-0x4]
  420193:	fidiv  DWORD PTR [edi+eax*4+0x42011f]
  42019a:	fbstp  TBYTE PTR [ebp-0x18]
  42019d:	lea    edi,[ebx+0x3]
  4201a0:	fwait
  4201a1:	or     ecx,ecx
  4201a3:	jne    0x4201c0
  4201a5:	mov    ecx,0x9
  4201aa:	mov    al,BYTE PTR [ecx+ebp*1-0x19]
  4201ae:	mov    ah,al
  4201b0:	shr    al,0x4
  4201b3:	jne    0x4201d3
  4201b5:	mov    al,ah
  4201b7:	and    al,0xf
  4201b9:	jne    0x4201da
  4201bb:	dec    ecx
  4201bc:	jne    0x4201aa
  4201be:	jmp    0x4201f9
  4201c0:	mov    al,cl
  4201c2:	add    al,0x30
  4201c4:	stos   BYTE PTR es:[edi],al
  4201c5:	mov    ecx,0x9
  4201ca:	mov    al,BYTE PTR [ecx+ebp*1-0x19]
  4201ce:	mov    ah,al
  4201d0:	shr    al,0x4
  4201d3:	add    al,0x30
  4201d5:	stos   BYTE PTR es:[edi],al
  4201d6:	mov    al,ah
  4201d8:	and    al,0xf
  4201da:	add    al,0x30
  4201dc:	stos   BYTE PTR es:[edi],al
  4201dd:	dec    ecx
  4201de:	jne    0x4201ca
  4201e0:	mov    eax,edi
  4201e2:	lea    ecx,[ebx+edx*1+0x3]
  4201e6:	sub    eax,ecx
  4201e8:	mov    BYTE PTR [edi],0x0
  4201eb:	dec    edi
  4201ec:	cmp    BYTE PTR [edi],0x30
  4201ef:	je     0x4201e8
  4201f1:	mov    edx,DWORD PTR [esi+0x4]
  4201f4:	shr    edx,0x1f
  4201f7:	jmp    0x420200
  4201f9:	xor    eax,eax
  4201fb:	xor    edx,edx
  4201fd:	mov    BYTE PTR [ebx+0x3],al
  420200:	mov    WORD PTR [ebx],ax
  420203:	mov    BYTE PTR [ebx+0x2],dl
  420206:	ret    
  420207:	pop    ebx
  420208:	pop    esi
  420209:	pop    edi
  42020a:	mov    esp,ebp
  42020c:	pop    ebp
  42020d:	ret    0x8
  420210:	push   ebp
  420211:	mov    ebp,esp
  420213:	add    esp,0xfffffff4
  420216:	push   edi
  420217:	push   esi
  420218:	push   ebx
  420219:	mov    esi,eax
  42021b:	mov    edi,edx
  42021d:	mov    DWORD PTR [ebp-0x4],0x0
  420224:	mov    al,ds:0x42f687
  420229:	mov    BYTE PTR [ebp-0x5],al
  42022c:	mov    ebx,ecx
  42022e:	fstcw  WORD PTR [ebp-0x8]
  420232:	fclex  
  420235:	fldcw  WORD PTR ds:0x42e16c
  42023b:	fldz   
  42023d:	call   0x4202c7
  420242:	mov    bh,BYTE PTR [esi]
  420244:	cmp    bh,0x2b
  420247:	je     0x42024e
  420249:	cmp    bh,0x2d
  42024c:	jne    0x42024f
  42024e:	inc    esi
  42024f:	mov    ecx,esi
  420251:	call   0x4202d2
  420256:	xor    edx,edx
  420258:	mov    al,BYTE PTR [esi]
  42025a:	cmp    al,BYTE PTR [ebp-0x5]
  42025d:	jne    0x420267
  42025f:	inc    esi
  420260:	call   0x4202d2
  420265:	neg    edx
  420267:	cmp    ecx,esi
  420269:	je     0x4202ba
  42026b:	mov    al,BYTE PTR [esi]
  42026d:	and    al,0xdf
  42026f:	cmp    al,0x45
  420271:	jne    0x42027d
  420273:	inc    esi
  420274:	push   edx
  420275:	call   0x4202ee
  42027a:	pop    eax
  42027b:	add    edx,eax
  42027d:	call   0x4202c7
  420282:	cmp    BYTE PTR [esi],0x0
  420285:	jne    0x4202ba
  420287:	mov    eax,edx
  420289:	cmp    bl,0x1
  42028c:	jne    0x420291
  42028e:	add    eax,0x4
  420291:	push   ebx
  420292:	mov    ebx,DWORD PTR [ebp-0x4]
  420295:	call   0x402d3c
  42029a:	pop    ebx
  42029b:	cmp    bh,0x2d
  42029e:	jne    0x4202a2
  4202a0:	fchs   
  4202a2:	cmp    bl,0x0
  4202a5:	je     0x4202ab
  4202a7:	fistp  QWORD PTR [edi]
  4202a9:	jmp    0x4202ad
  4202ab:	fstp   TBYTE PTR [edi]
  4202ad:	fstsw  ax
  4202b0:	test   ax,0x9
  4202b4:	jne    0x4202bc
  4202b6:	mov    al,0x1
  4202b8:	jmp    0x4202be
  4202ba:	fstp   st(0)
  4202bc:	xor    eax,eax
  4202be:	fclex  
  4202c1:	fldcw  WORD PTR [ebp-0x8]
  4202c4:	fwait
  4202c5:	jmp    0x42031d
  4202c7:	lods   al,BYTE PTR ds:[esi]
  4202c8:	or     al,al
  4202ca:	je     0x4202d0
  4202cc:	cmp    al,0x20
  4202ce:	je     0x4202c7
  4202d0:	dec    esi
  4202d1:	ret    
  4202d2:	xor    eax,eax
  4202d4:	xor    edx,edx
  4202d6:	lods   al,BYTE PTR ds:[esi]
  4202d7:	sub    al,0x3a
  4202d9:	add    al,0xa
  4202db:	jae    0x4202ec
  4202dd:	fimul  DWORD PTR ds:0x42e168
  4202e3:	mov    DWORD PTR [ebp-0xc],eax
  4202e6:	fiadd  DWORD PTR [ebp-0xc]
  4202e9:	inc    edx
  4202ea:	jmp    0x4202d6
  4202ec:	dec    esi
  4202ed:	ret    
  4202ee:	xor    eax,eax
  4202f0:	xor    edx,edx
  4202f2:	mov    cl,BYTE PTR [esi]
  4202f4:	cmp    cl,0x2b
  4202f7:	je     0x4202fe
  4202f9:	cmp    cl,0x2d
  4202fc:	jne    0x4202ff
  4202fe:	inc    esi
  4202ff:	mov    al,BYTE PTR [esi]
  420301:	sub    al,0x3a
  420303:	add    al,0xa
  420305:	jae    0x420315
  420307:	inc    esi
  420308:	imul   edx,edx,0xa
  42030b:	add    edx,eax
  42030d:	cmp    edx,0x1f4
  420313:	jb     0x4202ff
  420315:	cmp    cl,0x2d
  420318:	jne    0x42031c
  42031a:	neg    edx
  42031c:	ret    
  42031d:	pop    ebx
  42031e:	pop    esi
  42031f:	pop    edi
  420320:	mov    esp,ebp
  420322:	pop    ebp
  420323:	ret    
  420324:	push   ebp
  420325:	mov    ebp,esp
  420327:	add    esp,0xffffffc0
  42032a:	push   ebx
  42032b:	mov    ebx,eax
  42032d:	push   0x0
  42032f:	push   0xf
  420331:	push   0x0
  420333:	lea    edx,[ebp+0x8]
  420336:	lea    eax,[ebp-0x40]
  420339:	xor    ecx,ecx
  42033b:	call   0x41fd10
  420340:	mov    ecx,eax
  420342:	lea    edx,[ebp-0x40]
  420345:	mov    eax,ebx
  420347:	call   0x403d9c
  42034c:	pop    ebx
  42034d:	mov    esp,ebp
  42034f:	pop    ebp
  420350:	ret    0xc
  420353:	nop
  420354:	push   ebp
  420355:	mov    ebp,esp
  420357:	add    esp,0xffffffc0
  42035a:	push   ebx
  42035b:	mov    ebx,eax
  42035d:	push   0x0
  42035f:	push   0x0
  420361:	push   0x0
  420363:	lea    edx,[ebp+0x8]
  420366:	lea    eax,[ebp-0x40]
  420369:	mov    cl,0x1
  42036b:	call   0x41fd10
  420370:	mov    ecx,eax
  420372:	lea    edx,[ebp-0x40]
  420375:	mov    eax,ebx
  420377:	call   0x403d9c
  42037c:	pop    ebx
  42037d:	mov    esp,ebp
  42037f:	pop    ebp
  420380:	ret    0x8
  420383:	nop
  420384:	push   ebx
  420385:	push   esi
  420386:	mov    esi,edx
  420388:	mov    ebx,eax
  42038a:	mov    eax,ebx
  42038c:	call   0x404148
  420391:	mov    edx,esi
  420393:	xor    ecx,ecx
  420395:	call   0x420210
  42039a:	pop    esi
  42039b:	pop    ebx
  42039c:	ret    
  42039d:	lea    eax,[eax+0x0]
  4203a0:	push   ebx
  4203a1:	push   esi
  4203a2:	add    esp,0xfffffff4
  4203a5:	mov    esi,edx
  4203a7:	mov    ebx,eax
  4203a9:	mov    eax,ebx
  4203ab:	call   0x404148
  4203b0:	mov    edx,esp
  4203b2:	xor    ecx,ecx
  4203b4:	call   0x420210
  4203b9:	test   al,al
  4203bb:	je     0x4203c3
  4203bd:	fld    TBYTE PTR [esp]
  4203c0:	fstp   QWORD PTR [esi]
  4203c2:	fwait
  4203c3:	add    esp,0xc
  4203c6:	pop    esi
  4203c7:	pop    ebx
  4203c8:	ret    
  4203c9:	lea    eax,[eax+0x0]
  4203cc:	push   ebx
  4203cd:	push   esi
  4203ce:	add    esp,0xfffffff4
  4203d1:	mov    esi,edx
  4203d3:	mov    ebx,eax
  4203d5:	mov    eax,ebx
  4203d7:	call   0x404148
  4203dc:	mov    edx,esp
  4203de:	xor    ecx,ecx
  4203e0:	call   0x420210
  4203e5:	test   al,al
  4203e7:	je     0x4203ef
  4203e9:	fld    TBYTE PTR [esp]
  4203ec:	fstp   DWORD PTR [esi]
  4203ee:	fwait
  4203ef:	add    esp,0xc
  4203f2:	pop    esi
  4203f3:	pop    ebx
  4203f4:	ret    
  4203f5:	lea    eax,[eax+0x0]
  4203f8:	push   ebx
  4203f9:	push   esi
  4203fa:	mov    esi,edx
  4203fc:	mov    ebx,eax
  4203fe:	mov    eax,ebx
  420400:	call   0x404148
  420405:	mov    edx,esi
  420407:	mov    cl,0x1
  420409:	call   0x420210
  42040e:	pop    esi
  42040f:	pop    ebx
  420410:	ret    
  420411:	lea    eax,[eax+0x0]
  420414:	push   ebp
  420415:	mov    ebp,esp
  420417:	push   ebx
  420418:	xor    ebx,ebx
  42041a:	mov    ecx,eax
  42041c:	fld    QWORD PTR [ebp+0x8]
  42041f:	fmul   DWORD PTR [ebx+0x42e170]
  420425:	sub    esp,0x8
  420428:	fistp  QWORD PTR [esp]
  42042b:	fwait
  42042c:	pop    eax
  42042d:	pop    edx
  42042e:	or     edx,edx
  420430:	jns    0x420443
  420432:	neg    edx
  420434:	neg    eax
  420436:	sbb    edx,0x0
  420439:	div    DWORD PTR [ebx+0x42e174]
  42043f:	neg    eax
  420441:	jmp    0x420449
  420443:	div    DWORD PTR [ebx+0x42e174]
  420449:	add    eax,0xa955a
  42044e:	mov    DWORD PTR [ecx],edx
  420450:	mov    DWORD PTR [ecx+0x4],eax
  420453:	pop    ebx
  420454:	pop    ebp
  420455:	ret    0x8
  420458:	push   ebp
  420459:	mov    ebp,esp
  42045b:	add    esp,0xfffffff8
  42045e:	push   esi
  42045f:	mov    esi,DWORD PTR [ebp+0xc]
  420462:	mov    BYTE PTR [ebp-0x1],0x0
  420466:	cmp    ax,0x18
  42046a:	jae    0x4204b9
  42046c:	cmp    dx,0x3c
  420470:	jae    0x4204b9
  420472:	cmp    cx,0x3c
  420476:	jae    0x4204b9
  420478:	cmp    si,0x3e8
  42047d:	jae    0x4204b9
  42047f:	movzx  eax,ax
  420482:	imul   eax,eax,0x36ee80
  420488:	movzx  edx,dx
  42048b:	imul   edx,edx,0xea60
  420491:	add    eax,edx
  420493:	movzx  edx,cx
  420496:	imul   edx,edx,0x3e8
  42049c:	add    eax,edx
  42049e:	movzx  edx,si
  4204a1:	add    eax,edx
  4204a3:	mov    DWORD PTR [ebp-0x8],eax
  4204a6:	fild   DWORD PTR [ebp-0x8]
  4204a9:	fdiv   DWORD PTR ds:0x4204c4
  4204af:	mov    eax,DWORD PTR [ebp+0x8]
  4204b2:	fstp   QWORD PTR [eax]
  4204b4:	fwait
  4204b5:	mov    BYTE PTR [ebp-0x1],0x1
  4204b9:	mov    al,BYTE PTR [ebp-0x1]
  4204bc:	pop    esi
  4204bd:	pop    ecx
  4204be:	pop    ecx
  4204bf:	pop    ebp
  4204c0:	ret    0x8
  4204c3:	add    BYTE PTR [eax+0x554ca4cb],al
  4204c9:	mov    ebp,esp
  4204cb:	add    esp,0xfffffff4
  4204ce:	push   ebx
  4204cf:	push   esi
  4204d0:	push   edi
  4204d1:	mov    edi,ecx
  4204d3:	mov    esi,edx
  4204d5:	mov    ebx,eax
  4204d7:	lea    eax,[ebp-0x4]
  4204da:	push   eax
  4204db:	push   DWORD PTR [ebp+0x10]
  4204de:	push   DWORD PTR [ebp+0xc]
  4204e1:	lea    eax,[ebp-0xc]
  4204e4:	call   0x420414
  4204e9:	mov    eax,DWORD PTR [ebp-0xc]
  4204ec:	lea    ecx,[ebp-0x2]
  4204ef:	mov    dx,0xea60
  4204f3:	call   0x41ee24
  4204f8:	push   esi
  4204f9:	mov    ecx,ebx
  4204fb:	movzx  eax,WORD PTR [ebp-0x2]
  4204ff:	mov    dx,0x3c
  420503:	call   0x41ee24
  420508:	mov    eax,DWORD PTR [ebp+0x8]
  42050b:	push   eax
  42050c:	mov    ecx,edi
  42050e:	movzx  eax,WORD PTR [ebp-0x4]
  420512:	mov    dx,0x3e8
  420516:	call   0x41ee24
  42051b:	pop    edi
  42051c:	pop    esi
  42051d:	pop    ebx
  42051e:	mov    esp,ebp
  420520:	pop    ebp
  420521:	ret    0xc
  420524:	push   ebx
  420525:	push   esi
  420526:	mov    ecx,eax
  420528:	movzx  eax,cx
  42052b:	and    eax,0x3
  42052e:	test   eax,eax
  420530:	jne    0x420553
  420532:	movzx  ebx,cx
  420535:	mov    eax,ebx
  420537:	mov    esi,0x64
  42053c:	xor    edx,edx
  42053e:	div    esi
  420540:	test   edx,edx
  420542:	jne    0x420558
  420544:	mov    eax,ebx
  420546:	mov    ecx,0x190
  42054b:	xor    edx,edx
  42054d:	div    ecx
  42054f:	test   edx,edx
  420551:	je     0x420558
  420553:	xor    eax,eax
  420555:	pop    esi
  420556:	pop    ebx
  420557:	ret    
  420558:	mov    al,0x1
  42055a:	pop    esi
  42055b:	pop    ebx
  42055c:	ret    
  42055d:	lea    eax,[eax+0x0]
  420560:	push   ebp
  420561:	mov    ebp,esp
  420563:	add    esp,0xfffffff4
  420566:	push   ebx
  420567:	push   esi
  420568:	push   edi
  420569:	mov    ebx,ecx
  42056b:	mov    edi,edx
  42056d:	mov    esi,eax
  42056f:	mov    BYTE PTR [ebp-0x1],0x0
  420573:	mov    eax,esi
  420575:	call   0x420524
  42057a:	and    eax,0x7f
  42057d:	lea    eax,[eax+eax*2]
  420580:	lea    eax,[eax*8+0x42e0d4]
  420587:	mov    DWORD PTR [ebp-0x8],eax
  42058a:	cmp    si,0x1
  42058e:	jb     0x420622
  420594:	cmp    si,0x270f
  420599:	ja     0x420622
  42059f:	cmp    di,0x1
  4205a3:	jb     0x420622
  4205a5:	cmp    di,0xc
  4205a9:	ja     0x420622
  4205ab:	cmp    bx,0x1
  4205af:	jb     0x420622
  4205b1:	movzx  eax,di
  4205b4:	mov    edx,DWORD PTR [ebp-0x8]
  4205b7:	cmp    bx,WORD PTR [edx+eax*2-0x2]
  4205bc:	ja     0x420622
  4205be:	movzx  eax,di
  4205c1:	dec    eax
  4205c2:	test   eax,eax
  4205c4:	jle    0x4205d7
  4205c6:	mov    ecx,0x1
  4205cb:	mov    edx,DWORD PTR [ebp-0x8]
  4205ce:	add    bx,WORD PTR [edx+ecx*2-0x2]
  4205d3:	inc    ecx
  4205d4:	dec    eax
  4205d5:	jne    0x4205cb
  4205d7:	movzx  ecx,si
  4205da:	dec    ecx
  4205db:	mov    eax,ecx
  4205dd:	mov    esi,0x64
  4205e2:	cdq    
  4205e3:	idiv   esi
  4205e5:	imul   esi,ecx,0x16d
  4205eb:	mov    edx,ecx
  4205ed:	test   edx,edx
  4205ef:	jns    0x4205f4
  4205f1:	add    edx,0x3
  4205f4:	sar    edx,0x2
  4205f7:	add    esi,edx
  4205f9:	sub    esi,eax
  4205fb:	mov    eax,ecx
  4205fd:	mov    ecx,0x190
  420602:	cdq    
  420603:	idiv   ecx
  420605:	add    esi,eax
  420607:	movzx  eax,bx
  42060a:	add    esi,eax
  42060c:	sub    esi,0xa955a
  420612:	mov    DWORD PTR [ebp-0xc],esi
  420615:	fild   DWORD PTR [ebp-0xc]
  420618:	mov    eax,DWORD PTR [ebp+0x8]
  42061b:	fstp   QWORD PTR [eax]
  42061d:	fwait
  42061e:	mov    BYTE PTR [ebp-0x1],0x1
  420622:	mov    al,BYTE PTR [ebp-0x1]
  420625:	pop    edi
  420626:	pop    esi
  420627:	pop    ebx
  420628:	mov    esp,ebp
  42062a:	pop    ebp
  42062b:	ret    0x4
  42062e:	mov    eax,eax
  420630:	push   ebp
  420631:	mov    ebp,esp
  420633:	add    esp,0xffffffe4
  420636:	push   ebx
  420637:	push   esi
  420638:	mov    DWORD PTR [ebp-0xc],ecx
  42063b:	mov    DWORD PTR [ebp-0x8],edx
  42063e:	mov    DWORD PTR [ebp-0x4],eax
  420641:	mov    ebx,DWORD PTR [ebp+0x8]
  420644:	push   DWORD PTR [ebp+0x10]
  420647:	push   DWORD PTR [ebp+0xc]
  42064a:	lea    eax,[ebp-0x1c]
  42064d:	call   0x420414
  420652:	mov    ecx,DWORD PTR [ebp-0x18]
  420655:	test   ecx,ecx
  420657:	jg     0x42067d
  420659:	mov    eax,DWORD PTR [ebp-0x4]
  42065c:	mov    WORD PTR [eax],0x0
  420661:	mov    eax,DWORD PTR [ebp-0x8]
  420664:	mov    WORD PTR [eax],0x0
  420669:	mov    eax,DWORD PTR [ebp-0xc]
  42066c:	mov    WORD PTR [eax],0x0
  420671:	mov    WORD PTR [ebx],0x0
  420676:	xor    edx,edx
  420678:	jmp    0x420775
  42067d:	mov    eax,ecx
  42067f:	mov    esi,0x7
  420684:	cdq    
  420685:	idiv   esi
  420687:	inc    edx
  420688:	mov    WORD PTR [ebx],dx
  42068b:	dec    ecx
  42068c:	mov    bx,0x1
  420690:	cmp    ecx,0x23ab1
  420696:	jl     0x4206ab
  420698:	sub    ecx,0x23ab1
  42069e:	add    bx,0x190
  4206a3:	cmp    ecx,0x23ab1
  4206a9:	jge    0x420698
  4206ab:	lea    eax,[ebp-0xe]
  4206ae:	push   eax
  4206af:	lea    eax,[ebp-0x10]
  4206b2:	mov    dx,0x8eac
  4206b6:	xchg   ecx,eax
  4206b7:	call   0x41ee24
  4206bc:	cmp    WORD PTR [ebp-0x10],0x4
  4206c1:	jne    0x4206cd
  4206c3:	dec    WORD PTR [ebp-0x10]
  4206c7:	add    WORD PTR [ebp-0xe],0x8eac
  4206cd:	imul   ax,WORD PTR [ebp-0x10],0x64
  4206d2:	add    bx,ax
  4206d5:	lea    eax,[ebp-0xe]
  4206d8:	push   eax
  4206d9:	lea    ecx,[ebp-0x10]
  4206dc:	movzx  eax,WORD PTR [ebp-0xe]
  4206e0:	mov    dx,0x5b5
  4206e4:	call   0x41ee24
  4206e9:	mov    ax,WORD PTR [ebp-0x10]
  4206ed:	shl    eax,0x2
  4206f0:	add    bx,ax
  4206f3:	lea    eax,[ebp-0xe]
  4206f6:	push   eax
  4206f7:	lea    ecx,[ebp-0x10]
  4206fa:	movzx  eax,WORD PTR [ebp-0xe]
  4206fe:	mov    dx,0x16d
  420702:	call   0x41ee24
  420707:	cmp    WORD PTR [ebp-0x10],0x4
  42070c:	jne    0x420718
  42070e:	dec    WORD PTR [ebp-0x10]
  420712:	add    WORD PTR [ebp-0xe],0x16d
  420718:	add    bx,WORD PTR [ebp-0x10]
  42071c:	mov    eax,ebx
  42071e:	call   0x420524
  420723:	mov    edx,eax
  420725:	xor    eax,eax
  420727:	mov    al,dl
  420729:	lea    eax,[eax+eax*2]
  42072c:	lea    eax,[eax*8+0x42e0d4]
  420733:	mov    DWORD PTR [ebp-0x14],eax
  420736:	mov    ax,0x1
  42073a:	movzx  ecx,ax
  42073d:	mov    esi,DWORD PTR [ebp-0x14]
  420740:	mov    cx,WORD PTR [esi+ecx*2-0x2]
  420745:	mov    WORD PTR [ebp-0x10],cx
  420749:	mov    cx,WORD PTR [ebp-0xe]
  42074d:	cmp    cx,WORD PTR [ebp-0x10]
  420751:	jb     0x42075e
  420753:	mov    cx,WORD PTR [ebp-0x10]
  420757:	sub    WORD PTR [ebp-0xe],cx
  42075b:	inc    eax
  42075c:	jmp    0x42073a
  42075e:	mov    ecx,DWORD PTR [ebp-0x4]
  420761:	mov    WORD PTR [ecx],bx
  420764:	mov    ecx,DWORD PTR [ebp-0x8]
  420767:	mov    WORD PTR [ecx],ax
  42076a:	mov    ax,WORD PTR [ebp-0xe]
  42076e:	inc    eax
  42076f:	mov    ecx,DWORD PTR [ebp-0xc]
  420772:	mov    WORD PTR [ecx],ax
  420775:	mov    eax,edx
  420777:	pop    esi
  420778:	pop    ebx
  420779:	mov    esp,ebp
  42077b:	pop    ebp
  42077c:	ret    0xc
  42077f:	nop
  420780:	push   ebp
  420781:	mov    ebp,esp
  420783:	push   ecx
  420784:	push   esi
  420785:	mov    esi,eax
  420787:	push   DWORD PTR [ebp+0xc]
  42078a:	push   DWORD PTR [ebp+0x8]
  42078d:	lea    eax,[ebp-0x2]
  420790:	push   eax
  420791:	mov    eax,esi
  420793:	call   0x420630
  420798:	pop    esi
  420799:	pop    ecx
  42079a:	pop    ebp
  42079b:	ret    0x8
  42079e:	mov    eax,eax
  4207a0:	push   ebp
  4207a1:	mov    ebp,esp
  4207a3:	add    esp,0xfffffff8
  4207a6:	push   DWORD PTR [ebp+0xc]
  4207a9:	push   DWORD PTR [ebp+0x8]
  4207ac:	lea    eax,[ebp-0x8]
  4207af:	call   0x420414
  4207b4:	mov    eax,DWORD PTR [ebp-0x4]
  4207b7:	mov    ecx,0x7
  4207bc:	cdq    
  4207bd:	idiv   ecx
  4207bf:	mov    eax,edx
  4207c1:	inc    eax
  4207c2:	pop    ecx
  4207c3:	pop    ecx
  4207c4:	pop    ebp
  4207c5:	ret    0x8
  4207c8:	add    esp,0xfffffff0
  4207cb:	push   esp
  4207cc:	call   0x405af8
  4207d1:	mov    ax,WORD PTR [esp]
  4207d5:	add    esp,0x10
  4207d8:	ret    
  4207d9:	lea    eax,[eax+0x0]
  4207dc:	push   ebp
  4207dd:	mov    ebp,esp
  4207df:	push   ebx
  4207e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4207e3:	mov    ebx,0x100
  4207e8:	sub    ebx,DWORD PTR [ecx-0x104]
  4207ee:	cmp    edx,ebx
  4207f0:	jge    0x4207f4
  4207f2:	mov    ebx,edx
  4207f4:	test   ebx,ebx
  4207f6:	je     0x420812
  4207f8:	mov    edx,DWORD PTR [ebp+0x8]
  4207fb:	mov    edx,DWORD PTR [edx-0x104]
  420801:	mov    ecx,DWORD PTR [ebp+0x8]
  420804:	lea    edx,[ecx+edx*1-0x100]
  42080b:	mov    ecx,ebx
  42080d:	call   0x402b2c
  420812:	mov    eax,DWORD PTR [ebp+0x8]
  420815:	add    DWORD PTR [eax-0x104],ebx
  42081b:	pop    ebx
  42081c:	pop    ebp
  42081d:	ret    
  42081e:	mov    eax,eax
  420820:	push   ebp
  420821:	mov    ebp,esp
  420823:	push   ebx
  420824:	mov    ebx,eax
  420826:	mov    eax,DWORD PTR [ebp+0x8]
  420829:	push   eax
  42082a:	mov    eax,ebx
  42082c:	call   0x403f48
  420831:	mov    edx,eax
  420833:	mov    eax,ebx
  420835:	call   0x4207dc
  42083a:	pop    ecx
  42083b:	pop    ebx
  42083c:	pop    ebp
  42083d:	ret    
  42083e:	mov    eax,eax
  420840:	push   ebp
  420841:	mov    ebp,esp
  420843:	add    esp,0xffffffe0
  420846:	push   ebx
  420847:	push   esi
  420848:	mov    esi,edx
  42084a:	mov    ebx,eax
  42084c:	mov    eax,DWORD PTR [ebp+0x8]
  42084f:	push   eax
  420850:	push   0x4
  420852:	mov    DWORD PTR [ebp-0x20],esi
  420855:	mov    BYTE PTR [ebp-0x1c],0x0
  420859:	mov    DWORD PTR [ebp-0x18],ebx
  42085c:	mov    BYTE PTR [ebp-0x14],0x0
  420860:	lea    eax,[ebp-0x20]
  420863:	push   eax
  420864:	push   0x1
  420866:	mov    ecx,0x42e178
  42086b:	lea    eax,[ebp-0x10]
  42086e:	mov    edx,0x10
  420873:	call   0x41f82c
  420878:	mov    edx,eax
  42087a:	lea    eax,[ebp-0x10]
  42087d:	call   0x4207dc
  420882:	pop    ecx
  420883:	pop    esi
  420884:	pop    ebx
  420885:	mov    esp,ebp
  420887:	pop    ebp
  420888:	ret    
  420889:	lea    eax,[eax+0x0]
  42088c:	push   ebp
  42088d:	mov    ebp,esp
  42088f:	push   ecx
  420890:	mov    eax,DWORD PTR [ebp+0x8]
  420893:	add    eax,0xfffffffc
  420896:	mov    edx,DWORD PTR [eax]
  420898:	mov    DWORD PTR [ebp-0x4],edx
  42089b:	jmp    0x42089f
  42089d:	inc    DWORD PTR [eax]
  42089f:	mov    edx,DWORD PTR [eax]
  4208a1:	mov    dl,BYTE PTR [edx]
  4208a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4208a6:	cmp    dl,BYTE PTR [ecx-0x5]
  4208a9:	je     0x42089d
  4208ab:	mov    eax,DWORD PTR [eax]
  4208ad:	sub    eax,DWORD PTR [ebp-0x4]
  4208b0:	inc    eax
  4208b1:	mov    edx,DWORD PTR [ebp+0x8]
  4208b4:	mov    DWORD PTR [edx-0xc],eax
  4208b7:	pop    ecx
  4208b8:	pop    ebp
  4208b9:	ret    
  4208ba:	mov    eax,eax
  4208bc:	push   ebp
  4208bd:	mov    ebp,esp
  4208bf:	mov    eax,DWORD PTR [ebp+0x8]
  4208c2:	cmp    BYTE PTR [eax-0x13],0x0
  4208c6:	jne    0x4208f2
  4208c8:	mov    eax,DWORD PTR [ebp+0x8]
  4208cb:	mov    eax,DWORD PTR [eax+0x8]
  4208ce:	push   DWORD PTR [eax+0xc]
  4208d1:	push   DWORD PTR [eax+0x8]
  4208d4:	mov    eax,DWORD PTR [ebp+0x8]
  4208d7:	lea    ecx,[eax-0x12]
  4208da:	mov    eax,DWORD PTR [ebp+0x8]
  4208dd:	lea    edx,[eax-0x10]
  4208e0:	mov    eax,DWORD PTR [ebp+0x8]
  4208e3:	add    eax,0xfffffff2
  4208e6:	call   0x420780
  4208eb:	mov    eax,DWORD PTR [ebp+0x8]
  4208ee:	mov    BYTE PTR [eax-0x13],0x1
  4208f2:	pop    ebp
  4208f3:	ret    
  4208f4:	push   ebp
  4208f5:	mov    ebp,esp
  4208f7:	mov    eax,DWORD PTR [ebp+0x8]
  4208fa:	cmp    BYTE PTR [eax-0x1d],0x0
  4208fe:	jne    0x420931
  420900:	mov    eax,DWORD PTR [ebp+0x8]
  420903:	mov    eax,DWORD PTR [eax+0x8]
  420906:	push   DWORD PTR [eax+0xc]
  420909:	push   DWORD PTR [eax+0x8]
  42090c:	mov    eax,DWORD PTR [ebp+0x8]
  42090f:	add    eax,0xffffffe4
  420912:	push   eax
  420913:	mov    eax,DWORD PTR [ebp+0x8]
  420916:	lea    ecx,[eax-0x1a]
  420919:	mov    eax,DWORD PTR [ebp+0x8]
  42091c:	lea    edx,[eax-0x18]
  42091f:	mov    eax,DWORD PTR [ebp+0x8]
  420922:	add    eax,0xffffffea
  420925:	call   0x4204c8
  42092a:	mov    eax,DWORD PTR [ebp+0x8]
  42092d:	mov    BYTE PTR [eax-0x1d],0x1
  420931:	pop    ebp
  420932:	ret    
  420933:	nop
  420934:	push   ebp
  420935:	mov    ebp,esp
  420937:	add    esp,0xfffffee4
  42093d:	push   ebx
  42093e:	push   esi
  42093f:	xor    ecx,ecx
  420941:	mov    DWORD PTR [ebp-0x11c],ecx
  420947:	mov    DWORD PTR [ebp-0x4],ecx
  42094a:	mov    ebx,edx
  42094c:	mov    esi,eax
  42094e:	xor    eax,eax
  420950:	push   ebp
  420951:	push   0x420a85
  420956:	push   DWORD PTR fs:[eax]
  420959:	mov    DWORD PTR fs:[eax],esp
  42095c:	mov    eax,ebx
  42095e:	call   0x403cac
  420963:	mov    eax,DWORD PTR [ebp+0x8]
  420966:	mov    ax,WORD PTR [eax-0xe]
  42096a:	mov    WORD PTR [ebp-0x18],ax
  42096e:	mov    eax,DWORD PTR [ebp+0x8]
  420971:	mov    ax,WORD PTR [eax-0x10]
  420975:	mov    WORD PTR [ebp-0x16],ax
  420979:	mov    eax,DWORD PTR [ebp+0x8]
  42097c:	mov    ax,WORD PTR [eax-0x12]
  420980:	mov    WORD PTR [ebp-0x12],ax
  420984:	lea    eax,[ebp-0x4]
  420987:	mov    edx,0x420a9c
  42098c:	call   0x403d44
  420991:	push   0x100
  420996:	lea    eax,[ebp-0x118]
  42099c:	push   eax
  42099d:	mov    eax,DWORD PTR [ebp-0x4]
  4209a0:	call   0x404148
  4209a5:	push   eax
  4209a6:	lea    eax,[ebp-0x18]
  4209a9:	push   eax
  4209aa:	push   0x4
  4209ac:	call   0x405b30
  4209b1:	push   eax
  4209b2:	call   0x405ad8
  4209b7:	test   eax,eax
  4209b9:	je     0x420a64
  4209bf:	mov    eax,ebx
  4209c1:	lea    edx,[ebp-0x118]
  4209c7:	mov    ecx,0x100
  4209cc:	call   0x403f1c
  4209d1:	dec    esi
  4209d2:	jne    0x420a64
  4209d8:	mov    eax,ds:0x42f744
  4209dd:	sub    eax,0x4
  4209e0:	je     0x420a04
  4209e2:	sub    eax,0xd
  4209e5:	jne    0x420a64
  4209e7:	push   ebx
  4209e8:	mov    eax,DWORD PTR [ebx]
  4209ea:	mov    edx,0x1
  4209ef:	call   0x422f24
  4209f4:	mov    ecx,eax
  4209f6:	mov    eax,DWORD PTR [ebx]
  4209f8:	mov    edx,0x1
  4209fd:	call   0x4041a0
  420a02:	jmp    0x420a64
  420a04:	cmp    DWORD PTR ds:0x42f748,0x1
  420a0b:	jne    0x420a64
  420a0d:	mov    eax,DWORD PTR [ebx]
  420a0f:	call   0x403f48
  420a14:	mov    edx,eax
  420a16:	mov    eax,DWORD PTR [ebx]
  420a18:	call   0x422dac
  420a1d:	cmp    eax,0x4
  420a20:	jne    0x420a64
  420a22:	mov    eax,DWORD PTR [ebx]
  420a24:	mov    edx,0x3
  420a29:	call   0x422ec0
  420a2e:	lea    edx,[ebp-0x118]
  420a34:	add    eax,edx
  420a36:	dec    eax
  420a37:	mov    DWORD PTR [ebp-0x8],eax
  420a3a:	lea    eax,[ebp-0x11c]
  420a40:	mov    edx,DWORD PTR [ebp-0x8]
  420a43:	call   0x403ea4
  420a48:	mov    eax,DWORD PTR [ebp-0x11c]
  420a4e:	mov    edx,0x2
  420a53:	call   0x422f24
  420a58:	mov    ecx,eax
  420a5a:	mov    eax,ebx
  420a5c:	mov    edx,DWORD PTR [ebp-0x8]
  420a5f:	call   0x403d9c
  420a64:	xor    eax,eax
  420a66:	pop    edx
  420a67:	pop    ecx
  420a68:	pop    ecx
  420a69:	mov    DWORD PTR fs:[eax],edx
  420a6c:	push   0x420a8c
  420a71:	lea    eax,[ebp-0x11c]
  420a77:	call   0x403cac
  420a7c:	lea    eax,[ebp-0x4]
  420a7f:	call   0x403cac
  420a84:	ret    
  420a85:	jmp    0x4036ac
  420a8a:	jmp    0x420a71
  420a8c:	pop    esi
  420a8d:	pop    ebx
  420a8e:	mov    esp,ebp
  420a90:	pop    ebp
  420a91:	ret    
  420a92:	add    BYTE PTR [eax],al
  420a94:	(bad)  
  420a95:	(bad)  
  420a96:	(bad)  
  420a97:	inc    DWORD PTR [edx]
  420a99:	add    BYTE PTR [eax],al
  420a9b:	add    BYTE PTR [edi+0x67],ah
  420a9e:	add    BYTE PTR [eax],al
  420aa0:	push   ebp
  420aa1:	mov    ebp,esp
  420aa3:	add    esp,0xfffffeec
  420aa9:	push   ebx
  420aaa:	push   esi
  420aab:	xor    ecx,ecx
  420aad:	mov    DWORD PTR [ebp-0x4],ecx
  420ab0:	mov    ebx,edx
  420ab2:	mov    esi,eax
  420ab4:	xor    eax,eax
  420ab6:	push   ebp
  420ab7:	push   0x420b7e
  420abc:	push   DWORD PTR fs:[eax]
  420abf:	mov    DWORD PTR fs:[eax],esp
  420ac2:	mov    eax,ebx
  420ac4:	call   0x403cac
  420ac9:	mov    eax,DWORD PTR [ebp+0x8]
  420acc:	mov    ax,WORD PTR [eax-0xe]
  420ad0:	mov    WORD PTR [ebp-0x14],ax
  420ad4:	mov    eax,DWORD PTR [ebp+0x8]
  420ad7:	mov    ax,WORD PTR [eax-0x10]
  420adb:	mov    WORD PTR [ebp-0x12],ax
  420adf:	mov    eax,DWORD PTR [ebp+0x8]
  420ae2:	mov    ax,WORD PTR [eax-0x12]
  420ae6:	mov    WORD PTR [ebp-0xe],ax
  420aea:	cmp    esi,0x2
  420aed:	jg     0x420afe
  420aef:	lea    eax,[ebp-0x4]
  420af2:	mov    edx,0x420b94
  420af7:	call   0x403d44
  420afc:	jmp    0x420b0b
  420afe:	lea    eax,[ebp-0x4]
  420b01:	mov    edx,0x420ba0
  420b06:	call   0x403d44
  420b0b:	push   0x100
  420b10:	lea    eax,[ebp-0x114]
  420b16:	push   eax
  420b17:	mov    eax,DWORD PTR [ebp-0x4]
  420b1a:	call   0x404148
  420b1f:	push   eax
  420b20:	lea    eax,[ebp-0x14]
  420b23:	push   eax
  420b24:	push   0x4
  420b26:	call   0x405b30
  420b2b:	push   eax
  420b2c:	call   0x405ad8
  420b31:	test   eax,eax
  420b33:	je     0x420b68
  420b35:	mov    eax,ebx
  420b37:	lea    edx,[ebp-0x114]
  420b3d:	mov    ecx,0x100
  420b42:	call   0x403f1c
  420b47:	dec    esi
  420b48:	jne    0x420b68
  420b4a:	mov    eax,DWORD PTR [ebx]
  420b4c:	cmp    BYTE PTR [eax],0x30
  420b4f:	jne    0x420b68
  420b51:	push   ebx
  420b52:	mov    eax,DWORD PTR [ebx]
  420b54:	call   0x403f48
  420b59:	mov    ecx,eax
  420b5b:	dec    ecx
  420b5c:	mov    eax,DWORD PTR [ebx]
  420b5e:	mov    edx,0x2
  420b63:	call   0x4041a0
  420b68:	xor    eax,eax
  420b6a:	pop    edx
  420b6b:	pop    ecx
  420b6c:	pop    ecx
  420b6d:	mov    DWORD PTR fs:[eax],edx
  420b70:	push   0x420b85
  420b75:	lea    eax,[ebp-0x4]
  420b78:	call   0x403cac
  420b7d:	ret    
  420b7e:	jmp    0x4036ac
  420b83:	jmp    0x420b75
  420b85:	pop    esi
  420b86:	pop    ebx
  420b87:	mov    esp,ebp
  420b89:	pop    ebp
  420b8a:	ret    
  420b8b:	add    bh,bh
  420b8d:	(bad)  
  420b8e:	(bad)  
  420b8f:	inc    DWORD PTR [edx]
  420b91:	add    BYTE PTR [eax],al
  420b93:	add    BYTE PTR [ecx+0x79],bh
  420b96:	add    BYTE PTR [eax],al
  420b98:	(bad)  
  420b99:	(bad)  
  420b9a:	(bad)  
  420b9b:	inc    DWORD PTR [eax+eax*1]
  420b9e:	add    BYTE PTR [eax],al
  420ba0:	jns    0x420c1b
  420ba2:	jns    0x420c1d
  420ba4:	add    BYTE PTR [eax],al
  420ba6:	add    BYTE PTR [eax],al
  420ba8:	push   ebp
  420ba9:	mov    ebp,esp
  420bab:	add    esp,0xffffffd4
  420bae:	push   ebx
  420baf:	push   esi
  420bb0:	push   edi
  420bb1:	xor    edx,edx
  420bb3:	mov    DWORD PTR [ebp-0x2c],edx
  420bb6:	mov    DWORD PTR [ebp-0x28],edx
  420bb9:	mov    DWORD PTR [ebp-0x4],eax
  420bbc:	lea    esi,[ebp-0x4]
  420bbf:	xor    eax,eax
  420bc1:	push   ebp
  420bc2:	push   0x42134e
  420bc7:	push   DWORD PTR fs:[eax]
  420bca:	mov    DWORD PTR fs:[eax],esp
  420bcd:	cmp    DWORD PTR [esi],0x0
  420bd0:	je     0x421333
  420bd6:	mov    eax,DWORD PTR [ebp+0x8]
  420bd9:	cmp    DWORD PTR [eax-0x108],0x2
  420be0:	jge    0x421333
  420be6:	mov    eax,DWORD PTR [ebp+0x8]
  420be9:	inc    DWORD PTR [eax-0x108]
  420bef:	mov    BYTE PTR [ebp-0x1e],0x20
  420bf3:	mov    BYTE PTR [ebp-0x13],0x0
  420bf7:	mov    BYTE PTR [ebp-0x1d],0x0
  420bfb:	mov    BYTE PTR [ebp-0x1f],0x0
  420bff:	jmp    0x42131f
  420c04:	mov    eax,DWORD PTR [esi]
  420c06:	mov    al,BYTE PTR [eax]
  420c08:	mov    BYTE PTR [ebp-0x5],al
  420c0b:	mov    al,BYTE PTR [ebp-0x5]
  420c0e:	and    eax,0xff
  420c13:	bt     DWORD PTR ds:0x42e104,eax
  420c1a:	jae    0x420c43
  420c1c:	mov    eax,DWORD PTR [ebp+0x8]
  420c1f:	push   eax
  420c20:	mov    eax,DWORD PTR [esi]
  420c22:	call   0x422f84
  420c27:	mov    edx,eax
  420c29:	mov    eax,DWORD PTR [esi]
  420c2b:	call   0x4207dc
  420c30:	pop    ecx
  420c31:	mov    eax,DWORD PTR [esi]
  420c33:	call   0x422fa4
  420c38:	mov    DWORD PTR [esi],eax
  420c3a:	mov    BYTE PTR [ebp-0x1e],0x20
  420c3e:	jmp    0x42131f
  420c43:	mov    eax,DWORD PTR [esi]
  420c45:	call   0x422fa4
  420c4a:	mov    DWORD PTR [esi],eax
  420c4c:	mov    bl,BYTE PTR [ebp-0x5]
  420c4f:	mov    eax,ebx
  420c51:	add    al,0x9f
  420c53:	sub    al,0x1a
  420c55:	jae    0x420c5a
  420c57:	sub    bl,0x20
  420c5a:	mov    eax,ebx
  420c5c:	add    al,0xbf
  420c5e:	sub    al,0x1a
  420c60:	jae    0x420c72
  420c62:	cmp    bl,0x4d
  420c65:	jne    0x420c6f
  420c67:	cmp    BYTE PTR [ebp-0x1e],0x48
  420c6b:	jne    0x420c6f
  420c6d:	mov    bl,0x4e
  420c6f:	mov    BYTE PTR [ebp-0x1e],bl
  420c72:	xor    eax,eax
  420c74:	mov    al,bl
  420c76:	add    eax,0xffffffde
  420c79:	cmp    eax,0x38
  420c7c:	ja     0x42130d
  420c82:	mov    al,BYTE PTR [eax+0x420c8f]
  420c88:	jmp    DWORD PTR [eax*4+0x420cc8]
  420c8f:	sldt   WORD PTR [eax]
  420c92:	add    BYTE PTR [eax],al
  420c94:	sldt   WORD PTR [eax]
  420c97:	add    BYTE PTR [eax],al
  420c99:	add    BYTE PTR [eax],al
  420c9b:	add    BYTE PTR ds:0x0,cl
  420ca1:	add    BYTE PTR [eax],al
  420ca3:	add    BYTE PTR [eax],al
  420ca5:	add    BYTE PTR [eax],al
  420ca7:	push   cs
  420ca8:	add    BYTE PTR [eax],al
  420caa:	add    BYTE PTR [eax],al
  420cac:	add    BYTE PTR [eax],al
  420cae:	or     eax,DWORD PTR [eax]
  420cb0:	or     al,0x5
  420cb2:	add    eax,DWORD PTR [eax]
  420cb4:	add    al,BYTE PTR [esi]
  420cb6:	add    BYTE PTR [eax],al
  420cb8:	add    BYTE PTR [eax],al
  420cba:	add    al,0x7
  420cbc:	add    BYTE PTR [eax],al
  420cbe:	add    BYTE PTR [eax],al
  420cc0:	or     BYTE PTR [ecx],cl
  420cc2:	add    BYTE PTR [eax],al
  420cc4:	add    BYTE PTR [eax],al
  420cc6:	add    DWORD PTR [edx],ecx
  420cc8:	or     eax,0x8004213
  420ccd:	or     eax,0xd570042
  420cd2:	inc    edx
  420cd3:	add    BYTE PTR [ebp+ecx*1+0xdb10042],al
  420cda:	inc    edx
  420cdb:	add    BYTE PTR [esi],dl
  420cdd:	push   cs
  420cde:	inc    edx
  420cdf:	add    bl,al
  420ce1:	push   cs
  420ce2:	inc    edx
  420ce3:	add    dh,dl
  420ce5:	cmovb  eax,DWORD PTR [eax]
  420ce8:	pop    es
  420ce9:	adc    BYTE PTR [edx+0x0],al
  420cec:	cmp    BYTE PTR [eax],dl
  420cee:	inc    edx
  420cef:	add    BYTE PTR [ebp+0x10],ch
  420cf2:	inc    edx
  420cf3:	add    BYTE PTR [esi+0x17004210],bl
  420cf9:	adc    al,BYTE PTR [edx+0x0]
  420cfc:	jne    0x420d10
  420cfe:	inc    edx
  420cff:	add    BYTE PTR [ebx-0x45ffbdee],bl
  420d05:	adc    al,BYTE PTR [edx+0x0]
  420d08:	push   ebp
  420d09:	call   0x42088c
  420d0e:	pop    ecx
  420d0f:	push   ebp
  420d10:	call   0x4208bc
  420d15:	pop    ecx
  420d16:	cmp    DWORD PTR [ebp-0xc],0x2
  420d1a:	jg     0x420d3f
  420d1c:	mov    eax,DWORD PTR [ebp+0x8]
  420d1f:	push   eax
  420d20:	movzx  eax,WORD PTR [ebp-0xe]
  420d24:	mov    ecx,0x64
  420d29:	xor    edx,edx
  420d2b:	div    ecx
  420d2d:	mov    eax,edx
  420d2f:	mov    edx,0x2
  420d34:	call   0x420840
  420d39:	pop    ecx
  420d3a:	jmp    0x42131f
  420d3f:	mov    eax,DWORD PTR [ebp+0x8]
  420d42:	push   eax
  420d43:	movzx  eax,WORD PTR [ebp-0xe]
  420d47:	mov    edx,0x4
  420d4c:	call   0x420840
  420d51:	pop    ecx
  420d52:	jmp    0x42131f
  420d57:	push   ebp
  420d58:	call   0x42088c
  420d5d:	pop    ecx
  420d5e:	push   ebp
  420d5f:	call   0x4208bc
  420d64:	pop    ecx
  420d65:	mov    eax,DWORD PTR [ebp+0x8]
  420d68:	push   eax
  420d69:	push   ebp
  420d6a:	lea    edx,[ebp-0x28]
  420d6d:	mov    eax,DWORD PTR [ebp-0xc]
  420d70:	call   0x420934
  420d75:	pop    ecx
  420d76:	mov    eax,DWORD PTR [ebp-0x28]
  420d79:	call   0x420820
  420d7e:	pop    ecx
  420d7f:	jmp    0x42131f
  420d84:	push   ebp
  420d85:	call   0x42088c
  420d8a:	pop    ecx
  420d8b:	push   ebp
  420d8c:	call   0x4208bc
  420d91:	pop    ecx
  420d92:	mov    eax,DWORD PTR [ebp+0x8]
  420d95:	push   eax
  420d96:	push   ebp
  420d97:	lea    edx,[ebp-0x2c]
  420d9a:	mov    eax,DWORD PTR [ebp-0xc]
  420d9d:	call   0x420aa0
  420da2:	pop    ecx
  420da3:	mov    eax,DWORD PTR [ebp-0x2c]
  420da6:	call   0x420820
  420dab:	pop    ecx
  420dac:	jmp    0x42131f
  420db1:	push   ebp
  420db2:	call   0x42088c
  420db7:	pop    ecx
  420db8:	push   ebp
  420db9:	call   0x4208bc
  420dbe:	pop    ecx
  420dbf:	mov    eax,DWORD PTR [ebp-0xc]
  420dc2:	dec    eax
  420dc3:	sub    eax,0x2
  420dc6:	jb     0x420dcc
  420dc8:	je     0x420de2
  420dca:	jmp    0x420dfc
  420dcc:	mov    eax,DWORD PTR [ebp+0x8]
  420dcf:	push   eax
  420dd0:	movzx  eax,WORD PTR [ebp-0x10]
  420dd4:	mov    edx,DWORD PTR [ebp-0xc]
  420dd7:	call   0x420840
  420ddc:	pop    ecx
  420ddd:	jmp    0x42131f
  420de2:	mov    eax,DWORD PTR [ebp+0x8]
  420de5:	push   eax
  420de6:	movzx  eax,WORD PTR [ebp-0x10]
  420dea:	mov    eax,DWORD PTR [eax*4+0x42f6a4]
  420df1:	call   0x420820
  420df6:	pop    ecx
  420df7:	jmp    0x42131f
  420dfc:	mov    eax,DWORD PTR [ebp+0x8]
  420dff:	push   eax
  420e00:	movzx  eax,WORD PTR [ebp-0x10]
  420e04:	mov    eax,DWORD PTR [eax*4+0x42f6d4]
  420e0b:	call   0x420820
  420e10:	pop    ecx
  420e11:	jmp    0x42131f
  420e16:	push   ebp
  420e17:	call   0x42088c
  420e1c:	pop    ecx
  420e1d:	mov    eax,DWORD PTR [ebp-0xc]
  420e20:	dec    eax
  420e21:	sub    eax,0x2
  420e24:	jb     0x420e30
  420e26:	je     0x420e4d
  420e28:	dec    eax
  420e29:	je     0x420e74
  420e2b:	dec    eax
  420e2c:	je     0x420e9b
  420e2e:	jmp    0x420eaf
  420e30:	push   ebp
  420e31:	call   0x4208bc
  420e36:	pop    ecx
  420e37:	mov    eax,DWORD PTR [ebp+0x8]
  420e3a:	push   eax
  420e3b:	movzx  eax,WORD PTR [ebp-0x12]
  420e3f:	mov    edx,DWORD PTR [ebp-0xc]
  420e42:	call   0x420840
  420e47:	pop    ecx
  420e48:	jmp    0x42131f
  420e4d:	mov    eax,DWORD PTR [ebp+0x8]
  420e50:	push   eax
  420e51:	mov    eax,DWORD PTR [ebp+0x8]
  420e54:	push   DWORD PTR [eax+0xc]
  420e57:	push   DWORD PTR [eax+0x8]
  420e5a:	call   0x4207a0
  420e5f:	movzx  eax,ax
  420e62:	mov    eax,DWORD PTR [eax*4+0x42f704]
  420e69:	call   0x420820
  420e6e:	pop    ecx
  420e6f:	jmp    0x42131f
  420e74:	mov    eax,DWORD PTR [ebp+0x8]
  420e77:	push   eax
  420e78:	mov    eax,DWORD PTR [ebp+0x8]
  420e7b:	push   DWORD PTR [eax+0xc]
  420e7e:	push   DWORD PTR [eax+0x8]
  420e81:	call   0x4207a0
  420e86:	movzx  eax,ax
  420e89:	mov    eax,DWORD PTR [eax*4+0x42f720]
  420e90:	call   0x420820
  420e95:	pop    ecx
  420e96:	jmp    0x42131f
  420e9b:	mov    eax,DWORD PTR [ebp+0x8]
  420e9e:	push   eax
  420e9f:	mov    eax,ds:0x42f68c
  420ea4:	call   0x420ba8
  420ea9:	pop    ecx
  420eaa:	jmp    0x42131f
  420eaf:	mov    eax,DWORD PTR [ebp+0x8]
  420eb2:	push   eax
  420eb3:	mov    eax,ds:0x42f690
  420eb8:	call   0x420ba8
  420ebd:	pop    ecx
  420ebe:	jmp    0x42131f
  420ec3:	push   ebp
  420ec4:	call   0x42088c
  420ec9:	pop    ecx
  420eca:	push   ebp
  420ecb:	call   0x4208f4
  420ed0:	pop    ecx
  420ed1:	mov    BYTE PTR [ebp-0x20],0x0
  420ed5:	mov    eax,DWORD PTR [esi]
  420ed7:	mov    DWORD PTR [ebp-0x24],eax
  420eda:	jmp    0x420f89
  420edf:	mov    eax,DWORD PTR [ebp-0x24]
  420ee2:	mov    al,BYTE PTR [eax]
  420ee4:	and    eax,0xff
  420ee9:	bt     DWORD PTR ds:0x42e104,eax
  420ef0:	jae    0x420f02
  420ef2:	mov    eax,DWORD PTR [ebp-0x24]
  420ef5:	call   0x422fa4
  420efa:	mov    DWORD PTR [ebp-0x24],eax
  420efd:	jmp    0x420f89
  420f02:	mov    eax,DWORD PTR [ebp-0x24]
  420f05:	movzx  eax,BYTE PTR [eax]
  420f08:	cmp    eax,0x48
  420f0b:	jg     0x420f24
  420f0d:	je     0x420f95
  420f13:	sub    eax,0x22
  420f16:	je     0x420f7e
  420f18:	sub    eax,0x5
  420f1b:	je     0x420f7e
  420f1d:	sub    eax,0x1a
  420f20:	je     0x420f30
  420f22:	jmp    0x420f86
  420f24:	sub    eax,0x61
  420f27:	je     0x420f30
  420f29:	sub    eax,0x7
  420f2c:	je     0x420f95
  420f2e:	jmp    0x420f86
  420f30:	cmp    BYTE PTR [ebp-0x20],0x0
  420f34:	jne    0x420f86
  420f36:	mov    edx,0x42135c
  420f3b:	mov    ecx,0x5
  420f40:	mov    eax,DWORD PTR [ebp-0x24]
  420f43:	call   0x41f6a4
  420f48:	test   eax,eax
  420f4a:	je     0x420f78
  420f4c:	mov    edx,0x421364
  420f51:	mov    ecx,0x3
  420f56:	mov    eax,DWORD PTR [ebp-0x24]
  420f59:	call   0x41f6a4
  420f5e:	test   eax,eax
  420f60:	je     0x420f78
  420f62:	mov    edx,0x421368
  420f67:	mov    ecx,0x4
  420f6c:	mov    eax,DWORD PTR [ebp-0x24]
  420f6f:	call   0x41f6a4
  420f74:	test   eax,eax
  420f76:	jne    0x420f95
  420f78:	mov    BYTE PTR [ebp-0x1f],0x1
  420f7c:	jmp    0x420f95
  420f7e:	mov    al,BYTE PTR [ebp-0x20]
  420f81:	xor    al,0x1
  420f83:	mov    BYTE PTR [ebp-0x20],al
  420f86:	inc    DWORD PTR [ebp-0x24]
  420f89:	mov    eax,DWORD PTR [ebp-0x24]
  420f8c:	cmp    BYTE PTR [eax],0x0
  420f8f:	jne    0x420edf
  420f95:	mov    di,WORD PTR [ebp-0x16]
  420f99:	cmp    BYTE PTR [ebp-0x1f],0x0
  420f9d:	je     0x420fb4
  420f9f:	test   di,di
  420fa2:	jne    0x420faa
  420fa4:	mov    di,0xc
  420fa8:	jmp    0x420fb4
  420faa:	cmp    di,0xc
  420fae:	jbe    0x420fb4
  420fb0:	sub    di,0xc
  420fb4:	cmp    DWORD PTR [ebp-0xc],0x2
  420fb8:	jle    0x420fc1
  420fba:	mov    DWORD PTR [ebp-0xc],0x2
  420fc1:	mov    eax,DWORD PTR [ebp+0x8]
  420fc4:	push   eax
  420fc5:	movzx  eax,di
  420fc8:	mov    edx,DWORD PTR [ebp-0xc]
  420fcb:	call   0x420840
  420fd0:	pop    ecx
  420fd1:	jmp    0x42131f
  420fd6:	push   ebp
  420fd7:	call   0x42088c
  420fdc:	pop    ecx
  420fdd:	push   ebp
  420fde:	call   0x4208f4
  420fe3:	pop    ecx
  420fe4:	cmp    DWORD PTR [ebp-0xc],0x2
  420fe8:	jle    0x420ff1
  420fea:	mov    DWORD PTR [ebp-0xc],0x2
  420ff1:	mov    eax,DWORD PTR [ebp+0x8]
  420ff4:	push   eax
  420ff5:	movzx  eax,WORD PTR [ebp-0x18]
  420ff9:	mov    edx,DWORD PTR [ebp-0xc]
  420ffc:	call   0x420840
  421001:	pop    ecx
  421002:	jmp    0x42131f
  421007:	push   ebp
  421008:	call   0x42088c
  42100d:	pop    ecx
  42100e:	push   ebp
  42100f:	call   0x4208f4
  421014:	pop    ecx
  421015:	cmp    DWORD PTR [ebp-0xc],0x2
  421019:	jle    0x421022
  42101b:	mov    DWORD PTR [ebp-0xc],0x2
  421022:	mov    eax,DWORD PTR [ebp+0x8]
  421025:	push   eax
  421026:	movzx  eax,WORD PTR [ebp-0x1a]
  42102a:	mov    edx,DWORD PTR [ebp-0xc]
  42102d:	call   0x420840
  421032:	pop    ecx
  421033:	jmp    0x42131f
  421038:	push   ebp
  421039:	call   0x42088c
  42103e:	pop    ecx
  42103f:	cmp    DWORD PTR [ebp-0xc],0x1
  421043:	jne    0x421059
  421045:	mov    eax,DWORD PTR [ebp+0x8]
  421048:	push   eax
  421049:	mov    eax,ds:0x42f6a0
  42104e:	call   0x420ba8
  421053:	pop    ecx
  421054:	jmp    0x42131f
  421059:	mov    eax,DWORD PTR [ebp+0x8]
  42105c:	push   eax
  42105d:	mov    eax,ds:0x42f6a4
  421062:	call   0x420ba8
  421067:	pop    ecx
  421068:	jmp    0x42131f
  42106d:	push   ebp
  42106e:	call   0x42088c
  421073:	pop    ecx
  421074:	push   ebp
  421075:	call   0x4208f4
  42107a:	pop    ecx
  42107b:	cmp    DWORD PTR [ebp-0xc],0x3
  42107f:	jle    0x421088
  421081:	mov    DWORD PTR [ebp-0xc],0x3
  421088:	mov    eax,DWORD PTR [ebp+0x8]
  42108b:	push   eax
  42108c:	movzx  eax,WORD PTR [ebp-0x1c]
  421090:	mov    edx,DWORD PTR [ebp-0xc]
  421093:	call   0x420840
  421098:	pop    ecx
  421099:	jmp    0x42131f
  42109e:	push   ebp
  42109f:	call   0x4208f4
  4210a4:	pop    ecx
  4210a5:	mov    eax,DWORD PTR [esi]
  4210a7:	dec    eax
  4210a8:	mov    DWORD PTR [ebp-0x24],eax
  4210ab:	mov    edx,0x42135c
  4210b0:	mov    ecx,0x5
  4210b5:	mov    eax,DWORD PTR [ebp-0x24]
  4210b8:	call   0x41f6a4
  4210bd:	test   eax,eax
  4210bf:	jne    0x4210ea
  4210c1:	cmp    WORD PTR [ebp-0x16],0xc
  4210c6:	jb     0x4210cc
  4210c8:	add    DWORD PTR [ebp-0x24],0x3
  4210cc:	mov    eax,DWORD PTR [ebp+0x8]
  4210cf:	push   eax
  4210d0:	mov    edx,0x2
  4210d5:	mov    eax,DWORD PTR [ebp-0x24]
  4210d8:	call   0x4207dc
  4210dd:	pop    ecx
  4210de:	add    DWORD PTR [esi],0x4
  4210e1:	mov    BYTE PTR [ebp-0x1f],0x1
  4210e5:	jmp    0x42131f
  4210ea:	mov    edx,0x421364
  4210ef:	mov    ecx,0x3
  4210f4:	mov    eax,DWORD PTR [ebp-0x24]
  4210f7:	call   0x41f6a4
  4210fc:	test   eax,eax
  4210fe:	jne    0x421129
  421100:	cmp    WORD PTR [ebp-0x16],0xc
  421105:	jb     0x42110b
  421107:	add    DWORD PTR [ebp-0x24],0x2
  42110b:	mov    eax,DWORD PTR [ebp+0x8]
  42110e:	push   eax
  42110f:	mov    edx,0x1
  421114:	mov    eax,DWORD PTR [ebp-0x24]
  421117:	call   0x4207dc
  42111c:	pop    ecx
  42111d:	add    DWORD PTR [esi],0x2
  421120:	mov    BYTE PTR [ebp-0x1f],0x1
  421124:	jmp    0x42131f
  421129:	mov    edx,0x421368
  42112e:	mov    ecx,0x4
  421133:	mov    eax,DWORD PTR [ebp-0x24]
  421136:	call   0x41f6a4
  42113b:	test   eax,eax
  42113d:	jne    0x421172
  42113f:	cmp    WORD PTR [ebp-0x16],0xc
  421144:	jae    0x421157
  421146:	mov    eax,DWORD PTR [ebp+0x8]
  421149:	push   eax
  42114a:	mov    eax,ds:0x42f698
  42114f:	call   0x420820
  421154:	pop    ecx
  421155:	jmp    0x421166
  421157:	mov    eax,DWORD PTR [ebp+0x8]
  42115a:	push   eax
  42115b:	mov    eax,ds:0x42f69c
  421160:	call   0x420820
  421165:	pop    ecx
  421166:	add    DWORD PTR [esi],0x3
  421169:	mov    BYTE PTR [ebp-0x1f],0x1
  42116d:	jmp    0x42131f
  421172:	mov    edx,0x421370
  421177:	mov    ecx,0x4
  42117c:	mov    eax,DWORD PTR [ebp-0x24]
  42117f:	call   0x41f6a4
  421184:	test   eax,eax
  421186:	jne    0x4211b9
  421188:	push   ebp
  421189:	call   0x4208bc
  42118e:	pop    ecx
  42118f:	mov    eax,DWORD PTR [ebp+0x8]
  421192:	push   eax
  421193:	mov    eax,DWORD PTR [ebp+0x8]
  421196:	push   DWORD PTR [eax+0xc]
  421199:	push   DWORD PTR [eax+0x8]
  42119c:	call   0x4207a0
  4211a1:	movzx  eax,ax
  4211a4:	mov    eax,DWORD PTR [eax*4+0x42f720]
  4211ab:	call   0x420820
  4211b0:	pop    ecx
  4211b1:	add    DWORD PTR [esi],0x3
  4211b4:	jmp    0x42131f
  4211b9:	mov    edx,0x421378
  4211be:	mov    ecx,0x3
  4211c3:	mov    eax,DWORD PTR [ebp-0x24]
  4211c6:	call   0x41f6a4
  4211cb:	test   eax,eax
  4211cd:	jne    0x421200
  4211cf:	push   ebp
  4211d0:	call   0x4208bc
  4211d5:	pop    ecx
  4211d6:	mov    eax,DWORD PTR [ebp+0x8]
  4211d9:	push   eax
  4211da:	mov    eax,DWORD PTR [ebp+0x8]
  4211dd:	push   DWORD PTR [eax+0xc]
  4211e0:	push   DWORD PTR [eax+0x8]
  4211e3:	call   0x4207a0
  4211e8:	movzx  eax,ax
  4211eb:	mov    eax,DWORD PTR [eax*4+0x42f704]
  4211f2:	call   0x420820
  4211f7:	pop    ecx
  4211f8:	add    DWORD PTR [esi],0x2
  4211fb:	jmp    0x42131f
  421200:	mov    eax,DWORD PTR [ebp+0x8]
  421203:	push   eax
  421204:	lea    eax,[ebp-0x5]
  421207:	mov    edx,0x1
  42120c:	call   0x4207dc
  421211:	pop    ecx
  421212:	jmp    0x42131f
  421217:	push   ebp
  421218:	call   0x42088c
  42121d:	pop    ecx
  42121e:	mov    eax,DWORD PTR [ebp+0x8]
  421221:	push   eax
  421222:	mov    eax,ds:0x42f68c
  421227:	call   0x420ba8
  42122c:	pop    ecx
  42122d:	push   ebp
  42122e:	call   0x4208f4
  421233:	pop    ecx
  421234:	cmp    WORD PTR [ebp-0x16],0x0
  421239:	jne    0x42124d
  42123b:	cmp    WORD PTR [ebp-0x18],0x0
  421240:	jne    0x42124d
  421242:	cmp    WORD PTR [ebp-0x1a],0x0
  421247:	je     0x42131f
  42124d:	mov    eax,DWORD PTR [ebp+0x8]
  421250:	push   eax
  421251:	mov    eax,0x42137c
  421256:	mov    edx,0x1
  42125b:	call   0x4207dc
  421260:	pop    ecx
  421261:	mov    eax,DWORD PTR [ebp+0x8]
  421264:	push   eax
  421265:	mov    eax,ds:0x42f6a4
  42126a:	call   0x420ba8
  42126f:	pop    ecx
  421270:	jmp    0x42131f
  421275:	cmp    BYTE PTR ds:0x42f689,0x0
  42127c:	je     0x42131f
  421282:	mov    eax,DWORD PTR [ebp+0x8]
  421285:	push   eax
  421286:	mov    eax,0x42f689
  42128b:	mov    edx,0x1
  421290:	call   0x4207dc
  421295:	pop    ecx
  421296:	jmp    0x42131f
  42129b:	cmp    BYTE PTR ds:0x42f694,0x0
  4212a2:	je     0x42131f
  4212a4:	mov    eax,DWORD PTR [ebp+0x8]
  4212a7:	push   eax
  4212a8:	mov    eax,0x42f694
  4212ad:	mov    edx,0x1
  4212b2:	call   0x4207dc
  4212b7:	pop    ecx
  4212b8:	jmp    0x42131f
  4212ba:	mov    eax,DWORD PTR [esi]
  4212bc:	mov    DWORD PTR [ebp-0x24],eax
  4212bf:	jmp    0x4212e0
  4212c1:	mov    eax,DWORD PTR [esi]
  4212c3:	mov    al,BYTE PTR [eax]
  4212c5:	and    eax,0xff
  4212ca:	bt     DWORD PTR ds:0x42e104,eax
  4212d1:	jae    0x4212de
  4212d3:	mov    eax,DWORD PTR [esi]
  4212d5:	call   0x422fa4
  4212da:	mov    DWORD PTR [esi],eax
  4212dc:	jmp    0x4212e0
  4212de:	inc    DWORD PTR [esi]
  4212e0:	mov    eax,DWORD PTR [esi]
  4212e2:	cmp    BYTE PTR [eax],0x0
  4212e5:	je     0x4212f0
  4212e7:	mov    eax,DWORD PTR [esi]
  4212e9:	mov    al,BYTE PTR [eax]
  4212eb:	cmp    al,BYTE PTR [ebp-0x5]
  4212ee:	jne    0x4212c1
  4212f0:	mov    eax,DWORD PTR [ebp+0x8]
  4212f3:	push   eax
  4212f4:	mov    edx,DWORD PTR [esi]
  4212f6:	sub    edx,DWORD PTR [ebp-0x24]
  4212f9:	mov    eax,DWORD PTR [ebp-0x24]
  4212fc:	call   0x4207dc
  421301:	pop    ecx
  421302:	mov    eax,DWORD PTR [esi]
  421304:	cmp    BYTE PTR [eax],0x0
  421307:	je     0x42131f
  421309:	inc    DWORD PTR [esi]
  42130b:	jmp    0x42131f
  42130d:	mov    eax,DWORD PTR [ebp+0x8]
  421310:	push   eax
  421311:	lea    eax,[ebp-0x5]
  421314:	mov    edx,0x1
  421319:	call   0x4207dc
  42131e:	pop    ecx
  42131f:	mov    eax,DWORD PTR [esi]
  421321:	cmp    BYTE PTR [eax],0x0
  421324:	jne    0x420c04
  42132a:	mov    eax,DWORD PTR [ebp+0x8]
  42132d:	dec    DWORD PTR [eax-0x108]
  421333:	xor    eax,eax
  421335:	pop    edx
  421336:	pop    ecx
  421337:	pop    ecx
  421338:	mov    DWORD PTR fs:[eax],edx
  42133b:	push   0x421355
  421340:	lea    eax,[ebp-0x2c]
  421343:	mov    edx,0x2
  421348:	call   0x403cd0
  42134d:	ret    
  42134e:	jmp    0x4036ac
  421353:	jmp    0x421340
  421355:	pop    edi
  421356:	pop    esi
  421357:	pop    ebx
  421358:	mov    esp,ebp
  42135a:	pop    ebp
  42135b:	ret    
  42135c:	inc    ecx
  42135d:	dec    ebp
  42135e:	das    
  42135f:	push   eax
  421360:	dec    ebp
  421361:	add    BYTE PTR [eax],al
  421363:	add    BYTE PTR [ecx+0x2f],al
  421366:	push   eax
  421367:	add    BYTE PTR [ecx+0x4d],al
  42136a:	push   eax
  42136b:	dec    ebp
  42136c:	add    BYTE PTR [eax],al
  42136e:	add    BYTE PTR [eax],al
  421370:	inc    ecx
  421371:	inc    ecx
  421372:	inc    ecx
  421373:	inc    ecx
  421374:	add    BYTE PTR [eax],al
  421376:	add    BYTE PTR [eax],al
  421378:	inc    ecx
  421379:	inc    ecx
  42137a:	inc    ecx
  42137b:	add    BYTE PTR [eax],ah
  42137d:	add    BYTE PTR [eax],al
  42137f:	add    BYTE PTR [ebp-0x75],dl
  421382:	in     al,dx
  421383:	add    esp,0xfffffef8
  421389:	push   ebx
  42138a:	push   esi
  42138b:	mov    ebx,edx
  42138d:	mov    esi,eax
  42138f:	xor    eax,eax
  421391:	mov    DWORD PTR [ebp-0x104],eax
  421397:	xor    eax,eax
  421399:	mov    DWORD PTR [ebp-0x108],eax
  42139f:	test   ebx,ebx
  4213a1:	je     0x4213ae
  4213a3:	push   ebp
  4213a4:	mov    eax,ebx
  4213a6:	call   0x420ba8
  4213ab:	pop    ecx
  4213ac:	jmp    0x4213ba
  4213ae:	push   ebp
  4213af:	mov    eax,0x4213d8
  4213b4:	call   0x420ba8
  4213b9:	pop    ecx
  4213ba:	lea    edx,[ebp-0x100]
  4213c0:	mov    eax,esi
  4213c2:	mov    ecx,DWORD PTR [ebp-0x104]
  4213c8:	call   0x403d9c
  4213cd:	pop    esi
  4213ce:	pop    ebx
  4213cf:	mov    esp,ebp
  4213d1:	pop    ebp
  4213d2:	ret    0x8
  4213d5:	add    BYTE PTR [eax],al
  4213d7:	add    BYTE PTR [ebx+0x0],al
  4213da:	add    BYTE PTR [eax],al
  4213dc:	push   ebp
  4213dd:	mov    ebp,esp
  4213df:	push   DWORD PTR [ebp+0xc]
  4213e2:	push   DWORD PTR [ebp+0x8]
  4213e5:	xor    edx,edx
  4213e7:	call   0x421380
  4213ec:	pop    ebp
  4213ed:	ret    0x8
  4213f0:	push   ebx
  4213f1:	push   esi
  4213f2:	push   edi
  4213f3:	mov    edi,edx
  4213f5:	mov    esi,eax
  4213f7:	mov    ebx,DWORD PTR [edi]
  4213f9:	jmp    0x4213fc
  4213fb:	inc    ebx
  4213fc:	mov    eax,esi
  4213fe:	call   0x403f48
  421403:	cmp    ebx,eax
  421405:	jg     0x42140e
  421407:	cmp    BYTE PTR [esi+ebx*1-0x1],0x20
  42140c:	je     0x4213fb
  42140e:	mov    DWORD PTR [edi],ebx
  421410:	pop    edi
  421411:	pop    esi
  421412:	pop    ebx
  421413:	ret    
  421414:	push   ebp
  421415:	mov    ebp,esp
  421417:	add    esp,0xfffffff4
  42141a:	push   ebx
  42141b:	push   esi
  42141c:	push   edi
  42141d:	mov    DWORD PTR [ebp-0x8],ecx
  421420:	mov    DWORD PTR [ebp-0x4],edx
  421423:	mov    edi,eax
  421425:	mov    BYTE PTR [ebp-0x9],0x0
  421429:	mov    eax,DWORD PTR [ebp+0x8]
  42142c:	mov    BYTE PTR [eax],0x0
  42142f:	mov    edx,DWORD PTR [ebp-0x4]
  421432:	mov    eax,edi
  421434:	call   0x4213f0
  421439:	mov    ebx,DWORD PTR [ebp-0x4]
  42143c:	mov    ebx,DWORD PTR [ebx]
  42143e:	xor    esi,esi
  421440:	jmp    0x421459
  421442:	mov    eax,esi
  421444:	add    eax,eax
  421446:	lea    eax,[eax+eax*4]
  421449:	xor    edx,edx
  42144b:	mov    dl,BYTE PTR [edi+ebx*1-0x1]
  42144f:	sub    dx,0x30
  421453:	add    ax,dx
  421456:	mov    esi,eax
  421458:	inc    ebx
  421459:	mov    eax,edi
  42145b:	call   0x403f48
  421460:	cmp    ebx,eax
  421462:	jg     0x421475
  421464:	mov    al,BYTE PTR [edi+ebx*1-0x1]
  421468:	add    al,0xd0
  42146a:	sub    al,0xa
  42146c:	jae    0x421475
  42146e:	cmp    si,0x3e8
  421473:	jb     0x421442
  421475:	mov    eax,DWORD PTR [ebp-0x4]
  421478:	cmp    ebx,DWORD PTR [eax]
  42147a:	jle    0x421499
  42147c:	mov    eax,ebx
  42147e:	mov    edx,DWORD PTR [ebp-0x4]
  421481:	mov    edx,DWORD PTR [edx]
  421483:	sub    al,dl
  421485:	mov    edx,DWORD PTR [ebp+0x8]
  421488:	mov    BYTE PTR [edx],al
  42148a:	mov    eax,DWORD PTR [ebp-0x4]
  42148d:	mov    DWORD PTR [eax],ebx
  42148f:	mov    eax,DWORD PTR [ebp-0x8]
  421492:	mov    WORD PTR [eax],si
  421495:	mov    BYTE PTR [ebp-0x9],0x1
  421499:	mov    al,BYTE PTR [ebp-0x9]
  42149c:	pop    edi
  42149d:	pop    esi
  42149e:	pop    ebx
  42149f:	mov    esp,ebp
  4214a1:	pop    ebp
  4214a2:	ret    0x4
  4214a5:	lea    eax,[eax+0x0]
  4214a8:	push   ebp
  4214a9:	mov    ebp,esp
  4214ab:	add    esp,0xfffffff8
  4214ae:	push   ebx
  4214af:	push   esi
  4214b0:	push   edi
  4214b1:	xor    ebx,ebx
  4214b3:	mov    DWORD PTR [ebp-0x8],ebx
  4214b6:	mov    edi,ecx
  4214b8:	mov    esi,edx
  4214ba:	mov    DWORD PTR [ebp-0x4],eax
  4214bd:	xor    eax,eax
  4214bf:	push   ebp
  4214c0:	push   0x421521
  4214c5:	push   DWORD PTR fs:[eax]
  4214c8:	mov    DWORD PTR fs:[eax],esp
  4214cb:	xor    ebx,ebx
  4214cd:	test   edi,edi
  4214cf:	je     0x42150b
  4214d1:	mov    edx,esi
  4214d3:	mov    eax,DWORD PTR [ebp-0x4]
  4214d6:	call   0x4213f0
  4214db:	lea    eax,[ebp-0x8]
  4214de:	push   eax
  4214df:	mov    eax,edi
  4214e1:	call   0x403f48
  4214e6:	mov    ecx,eax
  4214e8:	mov    edx,DWORD PTR [esi]
  4214ea:	mov    eax,DWORD PTR [ebp-0x4]
  4214ed:	call   0x4041a0
  4214f2:	mov    edx,DWORD PTR [ebp-0x8]
  4214f5:	mov    eax,edi
  4214f7:	call   0x41efd4
  4214fc:	test   eax,eax
  4214fe:	jne    0x42150b
  421500:	mov    eax,edi
  421502:	call   0x403f48
  421507:	add    DWORD PTR [esi],eax
  421509:	mov    bl,0x1
  42150b:	xor    eax,eax
  42150d:	pop    edx
  42150e:	pop    ecx
  42150f:	pop    ecx
  421510:	mov    DWORD PTR fs:[eax],edx
  421513:	push   0x421528
  421518:	lea    eax,[ebp-0x8]
  42151b:	call   0x403cac
  421520:	ret    
  421521:	jmp    0x4036ac
  421526:	jmp    0x421518
  421528:	mov    eax,ebx
  42152a:	pop    edi
  42152b:	pop    esi
  42152c:	pop    ebx
  42152d:	pop    ecx
  42152e:	pop    ecx
  42152f:	pop    ebp
  421530:	ret    
  421531:	lea    eax,[eax+0x0]
  421534:	push   ebx
  421535:	push   esi
  421536:	push   edi
  421537:	push   ecx
  421538:	mov    BYTE PTR [esp],cl
  42153b:	mov    edi,edx
  42153d:	mov    esi,eax
  42153f:	xor    ebx,ebx
  421541:	mov    edx,edi
  421543:	mov    eax,esi
  421545:	call   0x4213f0
  42154a:	mov    eax,esi
  42154c:	call   0x403f48
  421551:	cmp    eax,DWORD PTR [edi]
  421553:	jl     0x421564
  421555:	mov    eax,DWORD PTR [edi]
  421557:	mov    al,BYTE PTR [esi+eax*1-0x1]
  42155b:	cmp    al,BYTE PTR [esp]
  42155e:	jne    0x421564
  421560:	inc    DWORD PTR [edi]
  421562:	mov    bl,0x1
  421564:	mov    eax,ebx
  421566:	pop    edx
  421567:	pop    edi
  421568:	pop    esi
  421569:	pop    ebx
  42156a:	ret    
  42156b:	nop
  42156c:	push   ebx
  42156d:	push   esi
  42156e:	push   edi
  42156f:	mov    esi,eax
  421571:	xor    ebx,ebx
  421573:	mov    edi,0x1
  421578:	jmp    0x4215a3
  42157a:	mov    al,BYTE PTR [esi+edi*1-0x1]
  42157e:	and    al,0xdf
  421580:	sub    al,0x44
  421582:	je     0x42159e
  421584:	dec    al
  421586:	je     0x421592
  421588:	sub    al,0x8
  42158a:	je     0x42159a
  42158c:	sub    al,0xc
  42158e:	je     0x421596
  421590:	jmp    0x4215a2
  421592:	mov    bl,0x2
  421594:	jmp    0x4215b0
  421596:	mov    bl,0x2
  421598:	jmp    0x4215b0
  42159a:	xor    ebx,ebx
  42159c:	jmp    0x4215b0
  42159e:	mov    bl,0x1
  4215a0:	jmp    0x4215b0
  4215a2:	inc    edi
  4215a3:	mov    eax,esi
  4215a5:	call   0x403f48
  4215aa:	cmp    edi,eax
  4215ac:	jle    0x42157a
  4215ae:	xor    ebx,ebx
  4215b0:	mov    eax,ebx
  4215b2:	pop    edi
  4215b3:	pop    esi
  4215b4:	pop    ebx
  4215b5:	ret    
  4215b6:	mov    eax,eax
  4215b8:	push   ebx
  4215b9:	push   esi
  4215ba:	mov    ebx,edx
  4215bc:	mov    esi,eax
  4215be:	jmp    0x4215e3
  4215c0:	mov    eax,DWORD PTR [ebx]
  4215c2:	mov    al,BYTE PTR [esi+eax*1-0x1]
  4215c6:	and    eax,0xff
  4215cb:	bt     DWORD PTR ds:0x42e104,eax
  4215d2:	jae    0x4215e1
  4215d4:	mov    edx,DWORD PTR [ebx]
  4215d6:	mov    eax,esi
  4215d8:	call   0x422ff4
  4215dd:	mov    DWORD PTR [ebx],eax
  4215df:	jmp    0x4215e3
  4215e1:	inc    DWORD PTR [ebx]
  4215e3:	mov    eax,esi
  4215e5:	call   0x403f48
  4215ea:	cmp    eax,DWORD PTR [ebx]
  4215ec:	jl     0x4215fa
  4215ee:	mov    eax,DWORD PTR [ebx]
  4215f0:	mov    al,BYTE PTR [esi+eax*1-0x1]
  4215f4:	add    al,0xd0
  4215f6:	sub    al,0xa
  4215f8:	jae    0x4215c0
  4215fa:	pop    esi
  4215fb:	pop    ebx
  4215fc:	ret    
  4215fd:	lea    eax,[eax+0x0]
  421600:	push   ebx
  421601:	push   esi
  421602:	push   edi
  421603:	push   ebp
  421604:	push   ecx
  421605:	mov    ebp,eax
  421607:	xor    eax,eax
  421609:	mov    DWORD PTR [esp],eax
  42160c:	mov    edi,0x7
  421611:	mov    ebx,0x42f750
  421616:	mov    esi,0x42f76c
  42161b:	cmp    DWORD PTR [ebx],0x0
  42161e:	je     0x421649
  421620:	mov    eax,ebp
  421622:	call   0x404148
  421627:	push   eax
  421628:	mov    eax,DWORD PTR [ebx]
  42162a:	call   0x404148
  42162f:	pop    edx
  421630:	call   0x42306c
  421635:	test   eax,eax
  421637:	je     0x421640
  421639:	mov    eax,DWORD PTR [esi]
  42163b:	mov    DWORD PTR [esp],eax
  42163e:	jmp    0x421649
  421640:	add    esi,0x4
  421643:	add    ebx,0x4
  421646:	dec    edi
  421647:	jne    0x42161b
  421649:	mov    eax,DWORD PTR [esp]
  42164c:	pop    edx
  42164d:	pop    ebp
  42164e:	pop    edi
  42164f:	pop    esi
  421650:	pop    ebx
  421651:	ret    
  421652:	mov    eax,eax
  421654:	push   ebp
  421655:	mov    ebp,esp
  421657:	push   ebx
  421658:	mov    ebx,eax
  42165a:	cmp    DWORD PTR ds:0x42f744,0x12
  421661:	jne    0x42169d
  421663:	cmp    ebx,0x63
  421666:	jg     0x42168c
  421668:	call   0x4207c8
  42166d:	movzx  ecx,ax
  421670:	mov    eax,DWORD PTR [ebp+0x8]
  421673:	mov    eax,DWORD PTR [eax-0x4]
  421676:	cdq    
  421677:	xor    eax,edx
  421679:	sub    eax,edx
  42167b:	add    ecx,eax
  42167d:	mov    eax,ecx
  42167f:	mov    ecx,0x64
  421684:	cdq    
  421685:	idiv   ecx
  421687:	imul   eax,eax,0x64
  42168a:	add    ebx,eax
  42168c:	mov    eax,DWORD PTR [ebp+0x8]
  42168f:	cmp    DWORD PTR [eax-0x4],0x0
  421693:	jle    0x4216a3
  421695:	mov    eax,DWORD PTR [ebp+0x8]
  421698:	neg    DWORD PTR [eax-0x4]
  42169b:	jmp    0x4216a3
  42169d:	mov    eax,DWORD PTR [ebp+0x8]
  4216a0:	dec    DWORD PTR [eax-0x4]
  4216a3:	mov    eax,DWORD PTR [ebp+0x8]
  4216a6:	mov    eax,DWORD PTR [eax-0x4]
  4216a9:	add    eax,ebx
  4216ab:	pop    ebx
  4216ac:	pop    ebp
  4216ad:	ret    
  4216ae:	mov    eax,eax
  4216b0:	push   ebp
  4216b1:	mov    ebp,esp
  4216b3:	add    esp,0xffffffd8
  4216b6:	push   ebx
  4216b7:	push   esi
  4216b8:	push   edi
  4216b9:	xor    ebx,ebx
  4216bb:	mov    DWORD PTR [ebp-0x28],ebx
  4216be:	mov    DWORD PTR [ebp-0x24],ebx
  4216c1:	mov    DWORD PTR [ebp-0x20],ebx
  4216c4:	mov    DWORD PTR [ebp-0x1c],ebx
  4216c7:	mov    DWORD PTR [ebp-0x8],ecx
  4216ca:	mov    ebx,edx
  4216cc:	mov    esi,eax
  4216ce:	xor    eax,eax
  4216d0:	push   ebp
  4216d1:	push   0x4219cb
  4216d6:	push   DWORD PTR fs:[eax]
  4216d9:	mov    DWORD PTR fs:[eax],esp
  4216dc:	xor    edi,edi
  4216de:	mov    WORD PTR [ebp-0x12],0x0
  4216e4:	mov    WORD PTR [ebp-0x14],0x0
  4216ea:	mov    BYTE PTR [ebp-0x18],0x0
  4216ee:	mov    BYTE PTR [ebp-0x9],0x0
  4216f2:	mov    eax,ds:0x42f68c
  4216f7:	call   0x42156c
  4216fc:	mov    BYTE PTR [ebp-0xa],al
  4216ff:	xor    eax,eax
  421701:	mov    DWORD PTR [ebp-0x4],eax
  421704:	cmp    DWORD PTR ds:0x42f68c,0x0
  42170b:	je     0x42174b
  42170d:	mov    eax,ds:0x42f68c
  421712:	cmp    BYTE PTR [eax],0x67
  421715:	jne    0x42174b
  421717:	mov    edx,ebx
  421719:	mov    eax,esi
  42171b:	call   0x4215b8
  421720:	lea    eax,[ebp-0x20]
  421723:	push   eax
  421724:	mov    ecx,DWORD PTR [ebx]
  421726:	dec    ecx
  421727:	mov    edx,0x1
  42172c:	mov    eax,esi
  42172e:	call   0x4041a0
  421733:	mov    eax,DWORD PTR [ebp-0x20]
  421736:	lea    edx,[ebp-0x1c]
  421739:	call   0x41f024
  42173e:	mov    eax,DWORD PTR [ebp-0x1c]
  421741:	call   0x421600
  421746:	mov    DWORD PTR [ebp-0x4],eax
  421749:	jmp    0x421767
  42174b:	mov    edx,DWORD PTR ds:0x42f68c
  421751:	mov    eax,0x4219e4
  421756:	call   0x423030
  42175b:	test   eax,eax
  42175d:	jle    0x421767
  42175f:	mov    eax,ds:0x42f76c
  421764:	mov    DWORD PTR [ebp-0x4],eax
  421767:	lea    eax,[ebp-0x15]
  42176a:	push   eax
  42176b:	lea    ecx,[ebp-0xc]
  42176e:	mov    edx,ebx
  421770:	mov    eax,esi
  421772:	call   0x421414
  421777:	test   al,al
  421779:	je     0x4219b0
  42177f:	mov    edx,ebx
  421781:	mov    cl,BYTE PTR ds:0x42f689
  421787:	mov    eax,esi
  421789:	call   0x421534
  42178e:	test   al,al
  421790:	je     0x4219b0
  421796:	lea    eax,[ebp-0x16]
  421799:	push   eax
  42179a:	lea    ecx,[ebp-0xe]
  42179d:	mov    edx,ebx
  42179f:	mov    eax,esi
  4217a1:	call   0x421414
  4217a6:	test   al,al
  4217a8:	je     0x4219b0
  4217ae:	mov    edx,ebx
  4217b0:	mov    cl,BYTE PTR ds:0x42f689
  4217b6:	mov    eax,esi
  4217b8:	call   0x421534
  4217bd:	test   al,al
  4217bf:	je     0x421893
  4217c5:	lea    eax,[ebp-0x17]
  4217c8:	push   eax
  4217c9:	lea    ecx,[ebp-0x10]
  4217cc:	mov    edx,ebx
  4217ce:	mov    eax,esi
  4217d0:	call   0x421414
  4217d5:	test   al,al
  4217d7:	je     0x4219b0
  4217dd:	mov    al,BYTE PTR [ebp-0xa]
  4217e0:	sub    al,0x1
  4217e2:	jb     0x4217ec
  4217e4:	je     0x421808
  4217e6:	dec    al
  4217e8:	je     0x421824
  4217ea:	jmp    0x42183e
  4217ec:	mov    di,WORD PTR [ebp-0x10]
  4217f0:	mov    al,BYTE PTR [ebp-0x17]
  4217f3:	mov    BYTE PTR [ebp-0x18],al
  4217f6:	mov    ax,WORD PTR [ebp-0xc]
  4217fa:	mov    WORD PTR [ebp-0x12],ax
  4217fe:	mov    ax,WORD PTR [ebp-0xe]
  421802:	mov    WORD PTR [ebp-0x14],ax
  421806:	jmp    0x42183e
  421808:	mov    di,WORD PTR [ebp-0x10]
  42180c:	mov    al,BYTE PTR [ebp-0x17]
  42180f:	mov    BYTE PTR [ebp-0x18],al
  421812:	mov    ax,WORD PTR [ebp-0xe]
  421816:	mov    WORD PTR [ebp-0x12],ax
  42181a:	mov    ax,WORD PTR [ebp-0xc]
  42181e:	mov    WORD PTR [ebp-0x14],ax
  421822:	jmp    0x42183e
  421824:	mov    di,WORD PTR [ebp-0xc]
  421828:	mov    al,BYTE PTR [ebp-0x15]
  42182b:	mov    BYTE PTR [ebp-0x18],al
  42182e:	mov    ax,WORD PTR [ebp-0xe]
  421832:	mov    WORD PTR [ebp-0x12],ax
  421836:	mov    ax,WORD PTR [ebp-0x10]
  42183a:	mov    WORD PTR [ebp-0x14],ax
  42183e:	cmp    DWORD PTR [ebp-0x4],0x0
  421842:	jle    0x421852
  421844:	push   ebp
  421845:	movzx  eax,di
  421848:	call   0x421654
  42184d:	pop    ecx
  42184e:	mov    edi,eax
  421850:	jmp    0x4218c2
  421852:	cmp    BYTE PTR [ebp-0x18],0x2
  421856:	ja     0x4218c2
  421858:	call   0x4207c8
  42185d:	movzx  ecx,ax
  421860:	movzx  eax,WORD PTR ds:0x42e0d0
  421867:	sub    ecx,eax
  421869:	mov    eax,ecx
  42186b:	push   ecx
  42186c:	mov    ecx,0x64
  421871:	cdq    
  421872:	idiv   ecx
  421874:	pop    ecx
  421875:	imul   ax,ax,0x64
  421879:	add    di,ax
  42187c:	cmp    WORD PTR ds:0x42e0d0,0x0
  421884:	jbe    0x4218c2
  421886:	movzx  eax,di
  421889:	cmp    ecx,eax
  42188b:	jle    0x4218c2
  42188d:	add    di,0x64
  421891:	jmp    0x4218c2
  421893:	call   0x4207c8
  421898:	mov    edi,eax
  42189a:	cmp    BYTE PTR [ebp-0xa],0x1
  42189e:	jne    0x4218b2
  4218a0:	mov    ax,WORD PTR [ebp-0xc]
  4218a4:	mov    WORD PTR [ebp-0x14],ax
  4218a8:	mov    ax,WORD PTR [ebp-0xe]
  4218ac:	mov    WORD PTR [ebp-0x12],ax
  4218b0:	jmp    0x4218c2
  4218b2:	mov    ax,WORD PTR [ebp-0xc]
  4218b6:	mov    WORD PTR [ebp-0x12],ax
  4218ba:	mov    ax,WORD PTR [ebp-0xe]
  4218be:	mov    WORD PTR [ebp-0x14],ax
  4218c2:	mov    edx,ebx
  4218c4:	mov    cl,BYTE PTR ds:0x42f689
  4218ca:	mov    eax,esi
  4218cc:	call   0x421534
  4218d1:	mov    edx,ebx
  4218d3:	mov    eax,esi
  4218d5:	call   0x4213f0
  4218da:	cmp    BYTE PTR ds:0x42f74c,0x0
  4218e1:	je     0x42199a
  4218e7:	mov    edx,DWORD PTR ds:0x42f68c
  4218ed:	mov    eax,0x4219f0
  4218f2:	call   0x40423c
  4218f7:	test   eax,eax
  4218f9:	je     0x42199a
  4218ff:	mov    eax,ds:0x42f6a0
  421904:	mov    al,BYTE PTR [eax]
  421906:	add    al,0xd0
  421908:	sub    al,0xa
  42190a:	jae    0x42191e
  42190c:	mov    edx,ebx
  42190e:	mov    eax,esi
  421910:	call   0x4215b8
  421915:	jmp    0x42199a
  42191a:	jmp    0x42191e
  42191c:	inc    DWORD PTR [ebx]
  42191e:	mov    eax,esi
  421920:	call   0x403f48
  421925:	cmp    eax,DWORD PTR [ebx]
  421927:	jl     0x421932
  421929:	mov    eax,DWORD PTR [ebx]
  42192b:	cmp    BYTE PTR [esi+eax*1-0x1],0x20
  421930:	jne    0x42191c
  421932:	mov    edx,ebx
  421934:	mov    eax,esi
  421936:	call   0x4213f0
  42193b:	mov    eax,esi
  42193d:	call   0x403f48
  421942:	cmp    eax,DWORD PTR [ebx]
  421944:	jl     0x42199a
  421946:	lea    eax,[ebp-0x24]
  421949:	push   eax
  42194a:	mov    eax,ds:0x42f698
  42194f:	call   0x403f48
  421954:	mov    ecx,eax
  421956:	mov    edx,DWORD PTR [ebx]
  421958:	mov    eax,esi
  42195a:	call   0x4041a0
  42195f:	mov    edx,DWORD PTR [ebp-0x24]
  421962:	mov    eax,ds:0x42f698
  421967:	call   0x41efd4
  42196c:	test   eax,eax
  42196e:	je     0x42199a
  421970:	lea    eax,[ebp-0x28]
  421973:	push   eax
  421974:	mov    eax,ds:0x42f69c
  421979:	call   0x403f48
  42197e:	mov    ecx,eax
  421980:	mov    edx,DWORD PTR [ebx]
  421982:	mov    eax,esi
  421984:	call   0x4041a0
  421989:	mov    edx,DWORD PTR [ebp-0x28]
  42198c:	mov    eax,ds:0x42f69c
  421991:	call   0x41efd4
  421996:	test   eax,eax
  421998:	jne    0x42191e
  42199a:	mov    eax,DWORD PTR [ebp-0x8]
  42199d:	push   eax
  42199e:	mov    cx,WORD PTR [ebp-0x14]
  4219a2:	mov    dx,WORD PTR [ebp-0x12]
  4219a6:	mov    eax,edi
  4219a8:	call   0x420560
  4219ad:	mov    BYTE PTR [ebp-0x9],al
  4219b0:	xor    eax,eax
  4219b2:	pop    edx
  4219b3:	pop    ecx
  4219b4:	pop    ecx
  4219b5:	mov    DWORD PTR fs:[eax],edx
  4219b8:	push   0x4219d2
  4219bd:	lea    eax,[ebp-0x28]
  4219c0:	mov    edx,0x4
  4219c5:	call   0x403cd0
  4219ca:	ret    
  4219cb:	jmp    0x4036ac
  4219d0:	jmp    0x4219bd
  4219d2:	mov    al,BYTE PTR [ebp-0x9]
  4219d5:	pop    edi
  4219d6:	pop    esi
  4219d7:	pop    ebx
  4219d8:	mov    esp,ebp
  4219da:	pop    ebp
  4219db:	ret    
  4219dc:	(bad)  
  4219dd:	(bad)  
  4219de:	(bad)  
  4219df:	inc    DWORD PTR [ecx]
  4219e1:	add    BYTE PTR [eax],al
  4219e3:	add    BYTE PTR [ebp+0x0],ah
  4219e6:	add    BYTE PTR [eax],al
  4219e8:	(bad)  
  4219e9:	(bad)  
  4219ea:	(bad)  
  4219eb:	inc    DWORD PTR [ebx]
  4219ed:	add    BYTE PTR [eax],al
  4219ef:	add    BYTE PTR [esp+eiz*2+0x64],ah
  4219f3:	add    BYTE PTR [ebx+0x56],dl
  4219f6:	push   edi
  4219f7:	push   ebp
  4219f8:	add    esp,0xfffffff0
  4219fb:	mov    DWORD PTR [esp],ecx
  4219fe:	mov    esi,edx
  421a00:	mov    ebp,eax
  421a02:	xor    ebx,ebx
  421a04:	or     edi,0xffffffff
  421a07:	mov    edx,esi
  421a09:	mov    ecx,DWORD PTR ds:0x42f698
  421a0f:	mov    eax,ebp
  421a11:	call   0x4214a8
  421a16:	test   al,al
  421a18:	jne    0x421a2c
  421a1a:	mov    edx,esi
  421a1c:	mov    ecx,0x421bd8
  421a21:	mov    eax,ebp
  421a23:	call   0x4214a8
  421a28:	test   al,al
  421a2a:	je     0x421a30
  421a2c:	xor    edi,edi
  421a2e:	jmp    0x421a5a
  421a30:	mov    edx,esi
  421a32:	mov    ecx,DWORD PTR ds:0x42f69c
  421a38:	mov    eax,ebp
  421a3a:	call   0x4214a8
  421a3f:	test   al,al
  421a41:	jne    0x421a55
  421a43:	mov    edx,esi
  421a45:	mov    ecx,0x421be4
  421a4a:	mov    eax,ebp
  421a4c:	call   0x4214a8
  421a51:	test   al,al
  421a53:	je     0x421a5a
  421a55:	mov    edi,0xc
  421a5a:	test   edi,edi
  421a5c:	jl     0x421a67
  421a5e:	mov    edx,esi
  421a60:	mov    eax,ebp
  421a62:	call   0x4213f0
  421a67:	lea    eax,[esp+0xc]
  421a6b:	push   eax
  421a6c:	lea    ecx,[esp+0x8]
  421a70:	mov    edx,esi
  421a72:	mov    eax,ebp
  421a74:	call   0x421414
  421a79:	test   al,al
  421a7b:	je     0x421bc6
  421a81:	mov    WORD PTR [esp+0x6],0x0
  421a88:	mov    WORD PTR [esp+0x8],0x0
  421a8f:	mov    WORD PTR [esp+0xa],0x0
  421a96:	mov    edx,esi
  421a98:	mov    cl,BYTE PTR ds:0x42f694
  421a9e:	mov    eax,ebp
  421aa0:	call   0x421534
  421aa5:	test   al,al
  421aa7:	je     0x421b1d
  421aa9:	lea    eax,[esp+0xc]
  421aad:	push   eax
  421aae:	lea    ecx,[esp+0xa]
  421ab2:	mov    edx,esi
  421ab4:	mov    eax,ebp
  421ab6:	call   0x421414
  421abb:	test   al,al
  421abd:	je     0x421bc6
  421ac3:	mov    edx,esi
  421ac5:	mov    cl,BYTE PTR ds:0x42f694
  421acb:	mov    eax,ebp
  421acd:	call   0x421534
  421ad2:	test   al,al
  421ad4:	je     0x421b1d
  421ad6:	lea    eax,[esp+0xc]
  421ada:	push   eax
  421adb:	lea    ecx,[esp+0xc]
  421adf:	mov    edx,esi
  421ae1:	mov    eax,ebp
  421ae3:	call   0x421414
  421ae8:	test   al,al
  421aea:	je     0x421bc6
  421af0:	mov    edx,esi
  421af2:	mov    cl,BYTE PTR ds:0x42f687
  421af8:	mov    eax,ebp
  421afa:	call   0x421534
  421aff:	test   al,al
  421b01:	je     0x421b1d
  421b03:	lea    eax,[esp+0xc]
  421b07:	push   eax
  421b08:	lea    ecx,[esp+0xe]
  421b0c:	mov    edx,esi
  421b0e:	mov    eax,ebp
  421b10:	call   0x421414
  421b15:	test   al,al
  421b17:	je     0x421bc6
  421b1d:	test   edi,edi
  421b1f:	jge    0x421b74
  421b21:	mov    edx,esi
  421b23:	mov    ecx,DWORD PTR ds:0x42f698
  421b29:	mov    eax,ebp
  421b2b:	call   0x4214a8
  421b30:	test   al,al
  421b32:	jne    0x421b46
  421b34:	mov    edx,esi
  421b36:	mov    ecx,0x421bd8
  421b3b:	mov    eax,ebp
  421b3d:	call   0x4214a8
  421b42:	test   al,al
  421b44:	je     0x421b4a
  421b46:	xor    edi,edi
  421b48:	jmp    0x421b74
  421b4a:	mov    edx,esi
  421b4c:	mov    ecx,DWORD PTR ds:0x42f69c
  421b52:	mov    eax,ebp
  421b54:	call   0x4214a8
  421b59:	test   al,al
  421b5b:	jne    0x421b6f
  421b5d:	mov    edx,esi
  421b5f:	mov    ecx,0x421be4
  421b64:	mov    eax,ebp
  421b66:	call   0x4214a8
  421b6b:	test   al,al
  421b6d:	je     0x421b74
  421b6f:	mov    edi,0xc
  421b74:	test   edi,edi
  421b76:	jl     0x421b9c
  421b78:	cmp    WORD PTR [esp+0x4],0x0
  421b7e:	je     0x421bc6
  421b80:	cmp    WORD PTR [esp+0x4],0xc
  421b86:	ja     0x421bc6
  421b88:	cmp    WORD PTR [esp+0x4],0xc
  421b8e:	jne    0x421b97
  421b90:	mov    WORD PTR [esp+0x4],0x0
  421b97:	add    WORD PTR [esp+0x4],di
  421b9c:	mov    edx,esi
  421b9e:	mov    eax,ebp
  421ba0:	call   0x4213f0
  421ba5:	mov    ax,WORD PTR [esp+0xa]
  421baa:	push   eax
  421bab:	mov    eax,DWORD PTR [esp+0x4]
  421baf:	push   eax
  421bb0:	mov    cx,WORD PTR [esp+0x10]
  421bb5:	mov    dx,WORD PTR [esp+0xe]
  421bba:	mov    ax,WORD PTR [esp+0xc]
  421bbf:	call   0x420458
  421bc4:	mov    ebx,eax
  421bc6:	mov    eax,ebx
  421bc8:	add    esp,0x10
  421bcb:	pop    ebp
  421bcc:	pop    edi
  421bcd:	pop    esi
  421bce:	pop    ebx
  421bcf:	ret    
  421bd0:	(bad)  
  421bd1:	(bad)  
  421bd2:	(bad)  
  421bd3:	inc    DWORD PTR [edx]
  421bd5:	add    BYTE PTR [eax],al
  421bd7:	add    BYTE PTR [ecx+0x4d],al
  421bda:	add    BYTE PTR [eax],al
  421bdc:	(bad)  
  421bdd:	(bad)  
  421bde:	(bad)  
  421bdf:	inc    DWORD PTR [edx]
  421be1:	add    BYTE PTR [eax],al
  421be3:	add    BYTE PTR [eax+0x4d],dl
  421be6:	add    BYTE PTR [eax],al
  421be8:	push   ebx
  421be9:	push   esi
  421bea:	push   ecx
  421beb:	mov    esi,edx
  421bed:	mov    ebx,eax
  421bef:	mov    DWORD PTR [esp],0x1
  421bf6:	mov    ecx,esi
  421bf8:	mov    edx,esp
  421bfa:	mov    eax,ebx
  421bfc:	call   0x4219f4
  421c01:	test   al,al
  421c03:	je     0x421c11
  421c05:	mov    eax,ebx
  421c07:	call   0x403f48
  421c0c:	cmp    eax,DWORD PTR [esp]
  421c0f:	jl     0x421c15
  421c11:	xor    eax,eax
  421c13:	jmp    0x421c17
  421c15:	mov    al,0x1
  421c17:	pop    edx
  421c18:	pop    esi
  421c19:	pop    ebx
  421c1a:	ret    
  421c1b:	nop
  421c1c:	push   ebx
  421c1d:	push   esi
  421c1e:	push   edi
  421c1f:	add    esp,0xffffffe8
  421c22:	mov    edi,edx
  421c24:	mov    esi,eax
  421c26:	mov    bl,0x1
  421c28:	mov    DWORD PTR [esp],0x1
  421c2f:	xor    eax,eax
  421c31:	mov    DWORD PTR [esp+0x10],eax
  421c35:	mov    DWORD PTR [esp+0x14],eax
  421c39:	lea    ecx,[esp+0x8]
  421c3d:	mov    edx,esp
  421c3f:	mov    eax,esi
  421c41:	call   0x4216b0
  421c46:	test   al,al
  421c48:	je     0x421c67
  421c4a:	mov    eax,esi
  421c4c:	call   0x403f48
  421c51:	cmp    eax,DWORD PTR [esp]
  421c54:	jl     0x421c74
  421c56:	lea    ecx,[esp+0x10]
  421c5a:	mov    edx,esp
  421c5c:	mov    eax,esi
  421c5e:	call   0x4219f4
  421c63:	test   al,al
  421c65:	jne    0x421c74
  421c67:	mov    edx,edi
  421c69:	mov    eax,esi
  421c6b:	call   0x421be8
  421c70:	mov    ebx,eax
  421c72:	jmp    0x421c9b
  421c74:	fld    QWORD PTR [esp+0x8]
  421c78:	fcomp  DWORD PTR ds:0x421ca4
  421c7e:	fnstsw ax
  421c80:	sahf   
  421c81:	jb     0x421c90
  421c83:	fld    QWORD PTR [esp+0x8]
  421c87:	fadd   QWORD PTR [esp+0x10]
  421c8b:	fstp   QWORD PTR [edi]
  421c8d:	fwait
  421c8e:	jmp    0x421c9b
  421c90:	fld    QWORD PTR [esp+0x8]
  421c94:	fsub   QWORD PTR [esp+0x10]
  421c98:	fstp   QWORD PTR [edi]
  421c9a:	fwait
  421c9b:	mov    eax,ebx
  421c9d:	add    esp,0x18
  421ca0:	pop    edi
  421ca1:	pop    esi
  421ca2:	pop    ebx
  421ca3:	ret    
  421ca4:	add    BYTE PTR [eax],al
  421ca6:	add    BYTE PTR [eax],al
  421ca8:	push   ebx
  421ca9:	add    esp,0xffffff00
  421caf:	mov    ebx,edx
  421cb1:	push   0x0
  421cb3:	push   0x100
  421cb8:	lea    edx,[esp+0x8]
  421cbc:	push   edx
  421cbd:	push   0x0
  421cbf:	push   eax
  421cc0:	push   0x0
  421cc2:	push   0x3200
  421cc7:	call   0x405ab8
  421ccc:	jmp    0x421ccf
  421cce:	dec    eax
  421ccf:	test   eax,eax
  421cd1:	jle    0x421ce1
  421cd3:	mov    dl,BYTE PTR [esp+eax*1-0x1]
  421cd7:	sub    dl,0x21
  421cda:	jb     0x421cce
  421cdc:	sub    dl,0xd
  421cdf:	je     0x421cce
  421ce1:	mov    edx,esp
  421ce3:	mov    ecx,ebx
  421ce5:	xchg   ecx,eax
  421ce6:	call   0x403d9c
  421ceb:	add    esp,0x100
  421cf1:	pop    ebx
  421cf2:	ret    
  421cf3:	nop
  421cf4:	push   ebp
  421cf5:	mov    ebp,esp
  421cf7:	add    esp,0xffffff00
  421cfd:	push   ebx
  421cfe:	push   esi
  421cff:	mov    esi,ecx
  421d01:	mov    ebx,DWORD PTR [ebp+0x8]
  421d04:	push   0x100
  421d09:	lea    ecx,[ebp-0x100]
  421d0f:	push   ecx
  421d10:	push   edx
  421d11:	push   eax
  421d12:	call   0x405b00
  421d17:	test   eax,eax
  421d19:	jle    0x421d2d
  421d1b:	mov    ecx,eax
  421d1d:	dec    ecx
  421d1e:	lea    edx,[ebp-0x100]
  421d24:	mov    eax,ebx
  421d26:	call   0x403d9c
  421d2b:	jmp    0x421d36
  421d2d:	mov    eax,ebx
  421d2f:	mov    edx,esi
  421d31:	call   0x403d00
  421d36:	pop    esi
  421d37:	pop    ebx
  421d38:	mov    esp,ebp
  421d3a:	pop    ebp
  421d3b:	ret    0x4
  421d3e:	mov    eax,eax
  421d40:	push   ebx
  421d41:	push   esi
  421d42:	push   edi
  421d43:	push   ecx
  421d44:	mov    ebx,ecx
  421d46:	mov    esi,edx
  421d48:	mov    edi,eax
  421d4a:	push   0x2
  421d4c:	lea    eax,[esp+0x4]
  421d50:	push   eax
  421d51:	push   esi
  421d52:	push   edi
  421d53:	call   0x405b00
  421d58:	test   eax,eax
  421d5a:	jle    0x421d61
  421d5c:	mov    al,BYTE PTR [esp]
  421d5f:	jmp    0x421d63
  421d61:	mov    eax,ebx
  421d63:	pop    edx
  421d64:	pop    edi
  421d65:	pop    esi
  421d66:	pop    ebx
  421d67:	ret    
  421d68:	push   ebp
  421d69:	mov    ebp,esp
  421d6b:	push   ecx
  421d6c:	push   ebx
  421d6d:	push   esi
  421d6e:	push   edi
  421d6f:	mov    DWORD PTR [ebp-0x4],ecx
  421d72:	mov    edi,edx
  421d74:	mov    esi,eax
  421d76:	mov    ebx,DWORD PTR [ebp+0x8]
  421d79:	push   ebx
  421d7a:	mov    eax,DWORD PTR [ebp+0x10]
  421d7d:	mov    eax,DWORD PTR [eax-0x4]
  421d80:	xor    ecx,ecx
  421d82:	mov    edx,esi
  421d84:	call   0x421cf4
  421d89:	cmp    DWORD PTR [ebx],0x0
  421d8c:	jne    0x421d9b
  421d8e:	mov    eax,DWORD PTR [ebp-0x4]
  421d91:	mov    eax,DWORD PTR [eax+edi*4]
  421d94:	mov    edx,ebx
  421d96:	call   0x4056fc
  421d9b:	pop    edi
  421d9c:	pop    esi
  421d9d:	pop    ebx
  421d9e:	pop    ecx
  421d9f:	pop    ebp
  421da0:	ret    0x8
  421da3:	nop
  421da4:	push   ebp
  421da5:	mov    ebp,esp
  421da7:	xor    ecx,ecx
  421da9:	push   ecx
  421daa:	push   ecx
  421dab:	push   ecx
  421dac:	push   ecx
  421dad:	push   ecx
  421dae:	push   ecx
  421daf:	push   ebx
  421db0:	push   esi
  421db1:	push   edi
  421db2:	xor    eax,eax
  421db4:	push   ebp
  421db5:	push   0x421eb7
  421dba:	push   DWORD PTR fs:[eax]
  421dbd:	mov    DWORD PTR fs:[eax],esp
  421dc0:	call   0x405b30
  421dc5:	mov    DWORD PTR [ebp-0x4],eax
  421dc8:	mov    ebx,0x1
  421dcd:	mov    esi,0x42f6a8
  421dd2:	mov    edi,0x42f6d8
  421dd7:	push   ebp
  421dd8:	push   0xb
  421dda:	lea    eax,[ebp-0xc]
  421ddd:	push   eax
  421dde:	mov    ecx,0x42e17c
  421de3:	mov    edx,ebx
  421de5:	dec    edx
  421de6:	lea    eax,[ebx+0x44]
  421de9:	dec    eax
  421dea:	call   0x421d68
  421def:	pop    ecx
  421df0:	mov    edx,DWORD PTR [ebp-0xc]
  421df3:	mov    eax,esi
  421df5:	call   0x403d00
  421dfa:	push   ebp
  421dfb:	push   0xb
  421dfd:	lea    eax,[ebp-0x10]
  421e00:	push   eax
  421e01:	mov    ecx,0x42e1ac
  421e06:	mov    edx,ebx
  421e08:	dec    edx
  421e09:	lea    eax,[ebx+0x38]
  421e0c:	dec    eax
  421e0d:	call   0x421d68
  421e12:	pop    ecx
  421e13:	mov    edx,DWORD PTR [ebp-0x10]
  421e16:	mov    eax,edi
  421e18:	call   0x403d00
  421e1d:	inc    ebx
  421e1e:	add    edi,0x4
  421e21:	add    esi,0x4
  421e24:	cmp    ebx,0xd
  421e27:	jne    0x421dd7
  421e29:	mov    ebx,0x1
  421e2e:	mov    esi,0x42f708
  421e33:	mov    edi,0x42f724
  421e38:	lea    eax,[ebx+0x5]
  421e3b:	mov    ecx,0x7
  421e40:	cdq    
  421e41:	idiv   ecx
  421e43:	mov    DWORD PTR [ebp-0x8],edx
  421e46:	push   ebp
  421e47:	push   0x6
  421e49:	lea    eax,[ebp-0x14]
  421e4c:	push   eax
  421e4d:	mov    ecx,0x42e1dc
  421e52:	mov    edx,ebx
  421e54:	dec    edx
  421e55:	mov    eax,DWORD PTR [ebp-0x8]
  421e58:	add    eax,0x31
  421e5b:	call   0x421d68
  421e60:	pop    ecx
  421e61:	mov    edx,DWORD PTR [ebp-0x14]
  421e64:	mov    eax,esi
  421e66:	call   0x403d00
  421e6b:	push   ebp
  421e6c:	push   0x6
  421e6e:	lea    eax,[ebp-0x18]
  421e71:	push   eax
  421e72:	mov    ecx,0x42e1f8
  421e77:	mov    edx,ebx
  421e79:	dec    edx
  421e7a:	mov    eax,DWORD PTR [ebp-0x8]
  421e7d:	add    eax,0x2a
  421e80:	call   0x421d68
  421e85:	pop    ecx
  421e86:	mov    edx,DWORD PTR [ebp-0x18]
  421e89:	mov    eax,edi
  421e8b:	call   0x403d00
  421e90:	inc    ebx
  421e91:	add    edi,0x4
  421e94:	add    esi,0x4
  421e97:	cmp    ebx,0x8
  421e9a:	jne    0x421e38
  421e9c:	xor    eax,eax
  421e9e:	pop    edx
  421e9f:	pop    ecx
  421ea0:	pop    ecx
  421ea1:	mov    DWORD PTR fs:[eax],edx
  421ea4:	push   0x421ebe
  421ea9:	lea    eax,[ebp-0x18]
  421eac:	mov    edx,0x4
  421eb1:	call   0x403cd0
  421eb6:	ret    
  421eb7:	jmp    0x4036ac
  421ebc:	jmp    0x421ea9
  421ebe:	pop    edi
  421ebf:	pop    esi
  421ec0:	pop    ebx
  421ec1:	mov    esp,ebp
  421ec3:	pop    ebp
  421ec4:	ret    
  421ec5:	lea    eax,[eax+0x0]
  421ec8:	push   ebp
  421ec9:	mov    ebp,esp
  421ecb:	push   ebx
  421ecc:	push   esi
  421ecd:	xor    esi,esi
  421ecf:	mov    ebx,0x1
  421ed4:	jmp    0x421edc
  421ed6:	cmp    ebx,0x7
  421ed9:	je     0x421efa
  421edb:	inc    ebx
  421edc:	cmp    DWORD PTR [ebx*4+0x42f74c],0x0
  421ee4:	jne    0x421ed6
  421ee6:	lea    eax,[ebx*4+0x42f74c]
  421eed:	mov    edx,DWORD PTR [ebp+0x8]
  421ef0:	call   0x403ea4
  421ef5:	mov    esi,0x1
  421efa:	mov    eax,esi
  421efc:	pop    esi
  421efd:	pop    ebx
  421efe:	pop    ebp
  421eff:	ret    0x4
  421f02:	mov    eax,eax
  421f04:	push   ebp
  421f05:	mov    ebp,esp
  421f07:	push   0x0
  421f09:	push   ebx
  421f0a:	push   esi
  421f0b:	xor    eax,eax
  421f0d:	push   ebp
  421f0e:	push   0x421f69
  421f13:	push   DWORD PTR fs:[eax]
  421f16:	mov    DWORD PTR fs:[eax],esp
  421f19:	xor    esi,esi
  421f1b:	mov    ebx,0x1
  421f20:	jmp    0x421f28
  421f22:	cmp    ebx,0x7
  421f25:	je     0x421f53
  421f27:	inc    ebx
  421f28:	cmp    DWORD PTR [ebx*4+0x42f768],0xffffffff
  421f30:	jne    0x421f22
  421f32:	lea    eax,[ebp-0x4]
  421f35:	mov    edx,DWORD PTR [ebp+0x8]
  421f38:	call   0x403ea4
  421f3d:	mov    eax,DWORD PTR [ebp-0x4]
  421f40:	xor    edx,edx
  421f42:	call   0x41f1fc
  421f47:	mov    DWORD PTR [ebx*4+0x42f768],eax
  421f4e:	mov    esi,0x1
  421f53:	xor    eax,eax
  421f55:	pop    edx
  421f56:	pop    ecx
  421f57:	pop    ecx
  421f58:	mov    DWORD PTR fs:[eax],edx
  421f5b:	push   0x421f70
  421f60:	lea    eax,[ebp-0x4]
  421f63:	call   0x403cac
  421f68:	ret    
  421f69:	jmp    0x4036ac
  421f6e:	jmp    0x421f60
  421f70:	mov    eax,esi
  421f72:	pop    esi
  421f73:	pop    ebx
  421f74:	pop    ecx
  421f75:	pop    ebp
  421f76:	ret    0x4
  421f79:	lea    eax,[eax+0x0]
  421f7c:	push   ebp
  421f7d:	mov    ebp,esp
  421f7f:	push   0x0
  421f81:	push   esi
  421f82:	xor    eax,eax
  421f84:	push   ebp
  421f85:	push   0x422013
  421f8a:	push   DWORD PTR fs:[eax]
  421f8d:	mov    DWORD PTR fs:[eax],esp
  421f90:	lea    eax,[ebp-0x4]
  421f93:	push   eax
  421f94:	call   0x405b30
  421f99:	mov    ecx,0x422028
  421f9e:	mov    edx,0x100b
  421fa3:	call   0x421cf4
  421fa8:	mov    eax,DWORD PTR [ebp-0x4]
  421fab:	mov    edx,0x1
  421fb0:	call   0x41f1fc
  421fb5:	mov    esi,eax
  421fb7:	mov    eax,esi
  421fb9:	add    eax,0xfffffffd
  421fbc:	sub    eax,0x3
  421fbf:	jae    0x421ffd
  421fc1:	push   0x4
  421fc3:	push   esi
  421fc4:	call   0x405b30
  421fc9:	push   eax
  421fca:	push   0x421ec8
  421fcf:	call   0x405ab0
  421fd4:	mov    edx,0x7
  421fd9:	mov    eax,0x42f76c
  421fde:	mov    DWORD PTR [eax],0xffffffff
  421fe4:	add    eax,0x4
  421fe7:	dec    edx
  421fe8:	jne    0x421fde
  421fea:	push   0x3
  421fec:	push   esi
  421fed:	call   0x405b30
  421ff2:	push   eax
  421ff3:	push   0x421f04
  421ff8:	call   0x405ab0
  421ffd:	xor    eax,eax
  421fff:	pop    edx
  422000:	pop    ecx
  422001:	pop    ecx
  422002:	mov    DWORD PTR fs:[eax],edx
  422005:	push   0x42201a
  42200a:	lea    eax,[ebp-0x4]
  42200d:	call   0x403cac
  422012:	ret    
  422013:	jmp    0x4036ac
  422018:	jmp    0x42200a
  42201a:	pop    esi
  42201b:	pop    ecx
  42201c:	pop    ebp
  42201d:	ret    
  42201e:	add    BYTE PTR [eax],al
  422020:	(bad)  
  422021:	(bad)  
  422022:	(bad)  
  422023:	inc    DWORD PTR [ecx]
  422025:	add    BYTE PTR [eax],al
  422027:	add    BYTE PTR [ecx],dh
  422029:	add    BYTE PTR [eax],al
  42202b:	add    BYTE PTR [ebp-0x75],dl
  42202e:	in     al,dx
  42202f:	xor    ecx,ecx
  422031:	push   ecx
  422032:	push   ecx
  422033:	push   ecx
  422034:	push   ecx
  422035:	push   ecx
  422036:	push   ebx
  422037:	push   esi
  422038:	push   edi
  422039:	mov    edi,edx
  42203b:	mov    esi,eax
  42203d:	xor    eax,eax
  42203f:	push   ebp
  422040:	push   0x4221f6
  422045:	push   DWORD PTR fs:[eax]
  422048:	mov    DWORD PTR fs:[eax],esp
  42204b:	mov    ebx,0x1
  422050:	mov    eax,edi
  422052:	call   0x403cac
  422057:	lea    eax,[ebp-0x8]
  42205a:	push   eax
  42205b:	call   0x405b30
  422060:	mov    ecx,0x42220c
  422065:	mov    edx,0x1009
  42206a:	call   0x421cf4
  42206f:	mov    eax,DWORD PTR [ebp-0x8]
  422072:	mov    edx,0x1
  422077:	call   0x41f1fc
  42207c:	add    eax,0xfffffffd
  42207f:	sub    eax,0x3
  422082:	jb     0x4221cc
  422088:	mov    eax,ds:0x42f744
  42208d:	sub    eax,0x4
  422090:	je     0x42209e
  422092:	add    eax,0xfffffff3
  422095:	sub    eax,0x2
  422098:	jb     0x42209e
  42209a:	xor    eax,eax
  42209c:	jmp    0x4220a0
  42209e:	mov    al,0x1
  4220a0:	test   al,al
  4220a2:	je     0x4220d9
  4220a4:	jmp    0x4220c9
  4220a6:	mov    al,BYTE PTR [esi+ebx*1-0x1]
  4220aa:	sub    al,0x47
  4220ac:	je     0x4220c8
  4220ae:	sub    al,0x20
  4220b0:	je     0x4220c8
  4220b2:	lea    eax,[ebp-0xc]
  4220b5:	mov    dl,BYTE PTR [esi+ebx*1-0x1]
  4220b9:	call   0x403e94
  4220be:	mov    edx,DWORD PTR [ebp-0xc]
  4220c1:	mov    eax,edi
  4220c3:	call   0x403f50
  4220c8:	inc    ebx
  4220c9:	mov    eax,esi
  4220cb:	call   0x403f48
  4220d0:	cmp    ebx,eax
  4220d2:	jle    0x4220a6
  4220d4:	jmp    0x4221db
  4220d9:	mov    eax,edi
  4220db:	mov    edx,esi
  4220dd:	call   0x403d00
  4220e2:	jmp    0x4221db
  4220e7:	mov    al,BYTE PTR [esi+ebx*1-0x1]
  4220eb:	and    eax,0xff
  4220f0:	bt     DWORD PTR ds:0x42e104,eax
  4220f7:	jae    0x422127
  4220f9:	mov    edx,ebx
  4220fb:	mov    eax,esi
  4220fd:	call   0x422fb8
  422102:	mov    DWORD PTR [ebp-0x4],eax
  422105:	lea    eax,[ebp-0x10]
  422108:	push   eax
  422109:	mov    ecx,DWORD PTR [ebp-0x4]
  42210c:	mov    edx,ebx
  42210e:	mov    eax,esi
  422110:	call   0x4041a0
  422115:	mov    edx,DWORD PTR [ebp-0x10]
  422118:	mov    eax,edi
  42211a:	call   0x403f50
  42211f:	add    ebx,DWORD PTR [ebp-0x4]
  422122:	jmp    0x4221cc
  422127:	mov    edx,0x422210
  42212c:	lea    eax,[esi+ebx*1-0x1]
  422130:	mov    ecx,0x2
  422135:	call   0x41f6a4
  42213a:	test   eax,eax
  42213c:	jne    0x42214d
  42213e:	mov    eax,edi
  422140:	mov    edx,0x42221c
  422145:	call   0x403f50
  42214a:	inc    ebx
  42214b:	jmp    0x4221cb
  42214d:	mov    edx,0x422220
  422152:	lea    eax,[esi+ebx*1-0x1]
  422156:	mov    ecx,0x4
  42215b:	call   0x41f6a4
  422160:	test   eax,eax
  422162:	jne    0x422175
  422164:	mov    eax,edi
  422166:	mov    edx,0x422230
  42216b:	call   0x403f50
  422170:	add    ebx,0x3
  422173:	jmp    0x4221cb
  422175:	mov    edx,0x422238
  42217a:	lea    eax,[esi+ebx*1-0x1]
  42217e:	mov    ecx,0x2
  422183:	call   0x41f6a4
  422188:	test   eax,eax
  42218a:	jne    0x42219b
  42218c:	mov    eax,edi
  42218e:	mov    edx,0x422244
  422193:	call   0x403f50
  422198:	inc    ebx
  422199:	jmp    0x4221cb
  42219b:	mov    al,BYTE PTR [esi+ebx*1-0x1]
  42219f:	sub    al,0x59
  4221a1:	je     0x4221a7
  4221a3:	sub    al,0x20
  4221a5:	jne    0x4221b5
  4221a7:	mov    eax,edi
  4221a9:	mov    edx,0x422250
  4221ae:	call   0x403f50
  4221b3:	jmp    0x4221cb
  4221b5:	lea    eax,[ebp-0x14]
  4221b8:	mov    dl,BYTE PTR [esi+ebx*1-0x1]
  4221bc:	call   0x403e94
  4221c1:	mov    edx,DWORD PTR [ebp-0x14]
  4221c4:	mov    eax,edi
  4221c6:	call   0x403f50
  4221cb:	inc    ebx
  4221cc:	mov    eax,esi
  4221ce:	call   0x403f48
  4221d3:	cmp    ebx,eax
  4221d5:	jle    0x4220e7
  4221db:	xor    eax,eax
  4221dd:	pop    edx
  4221de:	pop    ecx
  4221df:	pop    ecx
  4221e0:	mov    DWORD PTR fs:[eax],edx
  4221e3:	push   0x4221fd
  4221e8:	lea    eax,[ebp-0x14]
  4221eb:	mov    edx,0x4
  4221f0:	call   0x403cd0
  4221f5:	ret    
  4221f6:	jmp    0x4036ac
  4221fb:	jmp    0x4221e8
  4221fd:	pop    edi
  4221fe:	pop    esi
  4221ff:	pop    ebx
  422200:	mov    esp,ebp
  422202:	pop    ebp
  422203:	ret    
  422204:	(bad)  
  422205:	(bad)  
  422206:	(bad)  
  422207:	inc    DWORD PTR [ecx]
  422209:	add    BYTE PTR [eax],al
  42220b:	add    BYTE PTR [ecx],dh
  42220d:	add    BYTE PTR [eax],al
  42220f:	add    BYTE PTR [edi+0x67],ah
  422212:	add    BYTE PTR [eax],al
  422214:	(bad)  
  422215:	(bad)  
  422216:	(bad)  
  422217:	inc    DWORD PTR [ebx]
  422219:	add    BYTE PTR [eax],al
  42221b:	add    BYTE PTR [edi+0x67],ah
  42221e:	add    BYTE PTR [bx+di+0x79],bh
  422222:	jns    0x42229d
  422224:	add    BYTE PTR [eax],al
  422226:	add    BYTE PTR [eax],al
  422228:	(bad)  
  422229:	(bad)  
  42222a:	(bad)  
  42222b:	inc    DWORD PTR [eax+eax*1]
  42222e:	add    BYTE PTR [eax],al
  422230:	gs gs gs add BYTE PTR gs:[eax],al
  422236:	add    BYTE PTR [eax],al
  422238:	jns    0x4222b3
  42223a:	add    BYTE PTR [eax],al
  42223c:	(bad)  
  42223d:	(bad)  
  42223e:	(bad)  
  42223f:	inc    DWORD PTR [edx]
  422241:	add    BYTE PTR [eax],al
  422243:	add    BYTE PTR [ebp+0x65],ah
  422246:	add    BYTE PTR [eax],al
  422248:	(bad)  
  422249:	(bad)  
  42224a:	(bad)  
  42224b:	inc    DWORD PTR [ecx]
  42224d:	add    BYTE PTR [eax],al
  42224f:	add    BYTE PTR [ebp+0x0],ah
  422252:	add    BYTE PTR [eax],al
  422254:	test   eax,eax
  422256:	je     0x42225d
  422258:	sub    eax,0x1000
  42225d:	ret    
  42225e:	mov    eax,eax
  422260:	push   ebp
  422261:	mov    ebp,esp
  422263:	add    esp,0xfffffba4
  422269:	push   ebx
  42226a:	push   esi
  42226b:	push   edi
  42226c:	mov    edi,ecx
  42226e:	mov    esi,edx
  422270:	mov    ebx,eax
  422272:	push   0x1c
  422274:	lea    eax,[ebp-0x334]
  42227a:	push   eax
  42227b:	push   esi
  42227c:	call   0x405b78
  422281:	cmp    DWORD PTR [ebp-0x324],0x1000
  42228b:	jne    0x4222a9
  42228d:	push   0x105
  422292:	lea    eax,[ebp-0x216]
  422298:	push   eax
  422299:	mov    eax,DWORD PTR [ebp-0x330]
  42229f:	push   eax
  4222a0:	call   0x405b08
  4222a5:	test   eax,eax
  4222a7:	jne    0x4222cc
  4222a9:	push   0x105
  4222ae:	lea    eax,[ebp-0x216]
  4222b4:	push   eax
  4222b5:	mov    eax,ds:0x42f660
  4222ba:	push   eax
  4222bb:	call   0x405b08
  4222c0:	mov    eax,esi
  4222c2:	call   0x422254
  4222c7:	mov    DWORD PTR [ebp-0xc],eax
  4222ca:	jmp    0x4222d5
  4222cc:	sub    esi,DWORD PTR [ebp-0x330]
  4222d2:	mov    DWORD PTR [ebp-0xc],esi
  4222d5:	lea    eax,[ebp-0x216]
  4222db:	mov    dl,0x5c
  4222dd:	call   0x42312c
  4222e2:	mov    edx,eax
  4222e4:	inc    edx
  4222e5:	lea    eax,[ebp-0x111]
  4222eb:	mov    ecx,0x104
  4222f0:	call   0x41f670
  4222f5:	mov    eax,0x4223f0
  4222fa:	mov    DWORD PTR [ebp-0x4],eax
  4222fd:	mov    eax,0x4223f0
  422302:	mov    DWORD PTR [ebp-0x8],eax
  422305:	mov    eax,ebx
  422307:	mov    edx,DWORD PTR ds:0x41e288
  42230d:	call   0x40335c
  422312:	test   al,al
  422314:	je     0x42233f
  422316:	mov    eax,DWORD PTR [ebx+0x4]
  422319:	call   0x404148
  42231e:	mov    DWORD PTR [ebp-0x4],eax
  422321:	mov    eax,DWORD PTR [ebp-0x4]
  422324:	call   0x41f648
  422329:	test   eax,eax
  42232b:	je     0x42233f
  42232d:	mov    edx,DWORD PTR [ebp-0x4]
  422330:	cmp    BYTE PTR [edx+eax*1-0x1],0x2e
  422335:	je     0x42233f
  422337:	mov    eax,0x4223f4
  42233c:	mov    DWORD PTR [ebp-0x8],eax
  42233f:	push   0x100
  422344:	lea    eax,[ebp-0x316]
  42234a:	push   eax
  42234b:	mov    eax,ds:0x42e55c
  422350:	mov    eax,DWORD PTR [eax+0x4]
  422353:	push   eax
  422354:	mov    eax,ds:0x42f660
  422359:	call   0x404bfc
  42235e:	push   eax
  42235f:	call   0x405ba8
  422364:	lea    edx,[ebp-0x45c]
  42236a:	mov    eax,DWORD PTR [ebx]
  42236c:	call   0x40313c
  422371:	lea    eax,[ebp-0x45c]
  422377:	mov    DWORD PTR [ebp-0x35c],eax
  42237d:	mov    BYTE PTR [ebp-0x358],0x4
  422384:	lea    eax,[ebp-0x111]
  42238a:	mov    DWORD PTR [ebp-0x354],eax
  422390:	mov    BYTE PTR [ebp-0x350],0x6
  422397:	mov    eax,DWORD PTR [ebp-0xc]
  42239a:	mov    DWORD PTR [ebp-0x34c],eax
  4223a0:	mov    BYTE PTR [ebp-0x348],0x5
  4223a7:	mov    eax,DWORD PTR [ebp-0x4]
  4223aa:	mov    DWORD PTR [ebp-0x344],eax
  4223b0:	mov    BYTE PTR [ebp-0x340],0x6
  4223b7:	mov    eax,DWORD PTR [ebp-0x8]
  4223ba:	mov    DWORD PTR [ebp-0x33c],eax
  4223c0:	mov    BYTE PTR [ebp-0x338],0x6
  4223c7:	lea    eax,[ebp-0x35c]
  4223cd:	push   eax
  4223ce:	push   0x4
  4223d0:	lea    ecx,[ebp-0x316]
  4223d6:	mov    edx,DWORD PTR [ebp+0x8]
  4223d9:	mov    eax,edi
  4223db:	call   0x41fba4
  4223e0:	mov    eax,edi
  4223e2:	call   0x41f648
  4223e7:	pop    edi
  4223e8:	pop    esi
  4223e9:	pop    ebx
  4223ea:	mov    esp,ebp
  4223ec:	pop    ebp
  4223ed:	ret    0x4
  4223f0:	add    BYTE PTR [eax],al
  4223f2:	add    BYTE PTR [eax],al
  4223f4:	add    BYTE PTR cs:[eax],al
  4223f7:	add    BYTE PTR [ecx-0x4433c],al
  4223fd:	jmp    FWORD PTR [eax+0x0]
  422400:	add    al,0x0
  422402:	add    BYTE PTR [ebp-0x17b7dbb4],cl
  422408:	push   esp
  422409:	(bad)  
  42240a:	(bad)  
  42240b:	jmp    DWORD PTR [ecx+0x42e4f8]
  422411:	cmp    BYTE PTR [eax],0x0
  422414:	je     0x422474
  422416:	mov    eax,ds:0x42e41c
  42241b:	call   0x402bd0
  422420:	call   0x402a98
  422425:	lea    eax,[esp+0x44]
  422429:	push   eax
  42242a:	lea    eax,[esp+0x48]
  42242e:	push   eax
  42242f:	call   0x405b98
  422434:	push   0x0
  422436:	lea    eax,[esp+0x4]
  42243a:	push   eax
  42243b:	lea    eax,[esp+0x4c]
  42243f:	call   0x41f648
  422444:	push   eax
  422445:	lea    eax,[esp+0x50]
  422449:	push   eax
  42244a:	push   0xfffffff4
  42244c:	call   0x405b20
  422451:	push   eax
  422452:	call   0x405b88
  422457:	push   0x0
  422459:	lea    eax,[esp+0x4]
  42245d:	push   eax
  42245e:	push   0x2
  422460:	push   0x4224bc
  422465:	push   0xfffffff4
  422467:	call   0x405b20
  42246c:	push   eax
  42246d:	call   0x405b88
  422472:	jmp    0x4224aa
  422474:	push   0x40
  422476:	lea    eax,[esp+0x8]
  42247a:	push   eax
  42247b:	mov    eax,ds:0x42e3f8
  422480:	mov    eax,DWORD PTR [eax+0x4]
  422483:	push   eax
  422484:	mov    eax,ds:0x42f660
  422489:	call   0x404bfc
  42248e:	push   eax
  42248f:	call   0x405ba8
  422494:	push   0x2010
  422499:	lea    eax,[esp+0x8]
  42249d:	push   eax
  42249e:	lea    eax,[esp+0x4c]
  4224a2:	push   eax
  4224a3:	push   0x0
  4224a5:	call   0x405bb0
  4224aa:	add    esp,0x444
  4224b0:	ret    
  4224b1:	add    BYTE PTR [eax],al
  4224b3:	add    bh,bh
  4224b5:	(bad)  
  4224b6:	(bad)  
  4224b7:	inc    DWORD PTR [edx]
  4224b9:	add    BYTE PTR [eax],al
  4224bb:	add    BYTE PTR ds:0x5300000a,cl
  4224c1:	push   esi
  4224c2:	push   edi
  4224c3:	test   dl,dl
  4224c5:	je     0x4224cf
  4224c7:	add    esp,0xfffffff0
  4224ca:	call   0x403418
  4224cf:	mov    esi,ecx
  4224d1:	mov    ebx,edx
  4224d3:	mov    edi,eax
  4224d5:	lea    eax,[edi+0x4]
  4224d8:	mov    edx,esi
  4224da:	call   0x403d00
  4224df:	mov    eax,edi
  4224e1:	test   bl,bl
  4224e3:	je     0x4224f4
  4224e5:	call   0x403470
  4224ea:	pop    DWORD PTR fs:0x0
  4224f1:	add    esp,0xc
  4224f4:	mov    eax,edi
  4224f6:	pop    edi
  4224f7:	pop    esi
  4224f8:	pop    ebx
  4224f9:	ret    
  4224fa:	mov    eax,eax
  4224fc:	push   ebp
  4224fd:	mov    ebp,esp
  4224ff:	push   0x0
  422501:	push   ebx
  422502:	push   esi
  422503:	push   edi
  422504:	test   dl,dl
  422506:	je     0x422510
  422508:	add    esp,0xfffffff0
  42250b:	call   0x403418
  422510:	mov    esi,ecx
  422512:	mov    ebx,edx
  422514:	mov    edi,eax
  422516:	xor    eax,eax
  422518:	push   ebp
  422519:	push   0x422556
  42251e:	push   DWORD PTR fs:[eax]
  422521:	mov    DWORD PTR fs:[eax],esp
  422524:	lea    eax,[ebp-0x4]
  422527:	push   eax
  422528:	mov    edx,DWORD PTR [ebp+0xc]
  42252b:	mov    ecx,DWORD PTR [ebp+0x8]
  42252e:	mov    eax,esi
  422530:	call   0x41fbf0
  422535:	mov    edx,DWORD PTR [ebp-0x4]
  422538:	lea    eax,[edi+0x4]
  42253b:	call   0x403d00
  422540:	xor    eax,eax
  422542:	pop    edx
  422543:	pop    ecx
  422544:	pop    ecx
  422545:	mov    DWORD PTR fs:[eax],edx
  422548:	push   0x42255d
  42254d:	lea    eax,[ebp-0x4]
  422550:	call   0x403cac
  422555:	ret    
  422556:	jmp    0x4036ac
  42255b:	jmp    0x42254d
  42255d:	mov    eax,edi
  42255f:	test   bl,bl
  422561:	je     0x422572
  422563:	call   0x403470
  422568:	pop    DWORD PTR fs:0x0
  42256f:	add    esp,0xc
  422572:	mov    eax,edi
  422574:	pop    edi
  422575:	pop    esi
  422576:	pop    ebx
  422577:	pop    ecx
  422578:	pop    ebp
  422579:	ret    0x8
  42257c:	push   ebx
  42257d:	push   esi
  42257e:	push   edi
  42257f:	test   dl,dl
  422581:	je     0x42258b
  422583:	add    esp,0xfffffff0
  422586:	call   0x403418
  42258b:	mov    esi,ecx
  42258d:	mov    ebx,edx
  42258f:	mov    edi,eax
  422591:	lea    edx,[edi+0x4]
  422594:	mov    eax,esi
  422596:	call   0x4056fc
  42259b:	mov    eax,edi
  42259d:	test   bl,bl
  42259f:	je     0x4225b0
  4225a1:	call   0x403470
  4225a6:	pop    DWORD PTR fs:0x0
  4225ad:	add    esp,0xc
  4225b0:	mov    eax,edi
  4225b2:	pop    edi
  4225b3:	pop    esi
  4225b4:	pop    ebx
  4225b5:	ret    
  4225b6:	mov    eax,eax
  4225b8:	push   ebp
  4225b9:	mov    ebp,esp
  4225bb:	push   0x0
  4225bd:	push   0x0
  4225bf:	push   ebx
  4225c0:	push   esi
  4225c1:	push   edi
  4225c2:	test   dl,dl
  4225c4:	je     0x4225ce
  4225c6:	add    esp,0xfffffff0
  4225c9:	call   0x403418
  4225ce:	mov    esi,ecx
  4225d0:	mov    ebx,edx
  4225d2:	mov    edi,eax
  4225d4:	xor    eax,eax
  4225d6:	push   ebp
  4225d7:	push   0x422624
  4225dc:	push   DWORD PTR fs:[eax]
  4225df:	mov    DWORD PTR fs:[eax],esp
  4225e2:	lea    eax,[ebp-0x4]
  4225e5:	push   eax
  4225e6:	lea    edx,[ebp-0x8]
  4225e9:	mov    eax,esi
  4225eb:	call   0x4056fc
  4225f0:	mov    eax,DWORD PTR [ebp-0x8]
  4225f3:	mov    edx,DWORD PTR [ebp+0xc]
  4225f6:	mov    ecx,DWORD PTR [ebp+0x8]
  4225f9:	call   0x41fbf0
  4225fe:	mov    edx,DWORD PTR [ebp-0x4]
  422601:	lea    eax,[edi+0x4]
  422604:	call   0x403d00
  422609:	xor    eax,eax
  42260b:	pop    edx
  42260c:	pop    ecx
  42260d:	pop    ecx
  42260e:	mov    DWORD PTR fs:[eax],edx
  422611:	push   0x42262b
  422616:	lea    eax,[ebp-0x8]
  422619:	mov    edx,0x2
  42261e:	call   0x403cd0
  422623:	ret    
  422624:	jmp    0x4036ac
  422629:	jmp    0x422616
  42262b:	mov    eax,edi
  42262d:	test   bl,bl
  42262f:	je     0x422640
  422631:	call   0x403470
  422636:	pop    DWORD PTR fs:0x0
  42263d:	add    esp,0xc
  422640:	mov    eax,edi
  422642:	pop    edi
  422643:	pop    esi
  422644:	pop    ebx
  422645:	pop    ecx
  422646:	pop    ecx
  422647:	pop    ebp
  422648:	ret    0x8
  42264b:	nop
  42264c:	cmp    BYTE PTR [eax+0xc],0x0
  422650:	je     0x422657
  422652:	call   0x403178
  422657:	ret    
  422658:	pop    esp
  422659:	es inc edx
  42265b:	add    BYTE PTR [esi],cl
  42265d:	or     DWORD PTR [ebp+eax*2+0x72],edx
  422661:	jb     0x4226d2
  422663:	jb     0x4226b7
  422665:	arpl   WORD PTR gs:[eax],cx
  422668:	add    BYTE PTR [eax],al
  42266a:	add    BYTE PTR [ecx],al
  42266c:	add    BYTE PTR [eax],al
  42266e:	add    BYTE PTR [eax],al
  422670:	adc    BYTE PTR [eax+0x0],al
  422673:	add    al,0x0
  422675:	add    BYTE PTR [eax],al
  422677:	nop
  422678:	push   ebx
  422679:	push   esi
  42267a:	add    esp,0xfffffff8
  42267d:	xor    ebx,ebx
  42267f:	call   0x402b0c
  422684:	mov    esi,eax
  422686:	jmp    0x422689
  422688:	inc    ebx
  422689:	cmp    ebx,0x6
  42268c:	jg     0x422697
  42268e:	cmp    esi,DWORD PTR [ebx*8+0x42e214]
  422695:	jne    0x422688
  422697:	cmp    ebx,0x6
  42269a:	jg     0x4226b1
  42269c:	mov    ecx,DWORD PTR [ebx*8+0x42e218]
  4226a3:	mov    dl,0x1
  4226a5:	mov    eax,ds:0x41e3a8
  4226aa:	call   0x4224c0
  4226af:	jmp    0x4226ce
  4226b1:	mov    DWORD PTR [esp],esi
  4226b4:	mov    BYTE PTR [esp+0x4],0x0
  4226b9:	push   esp
  4226ba:	push   0x0
  4226bc:	mov    ecx,DWORD PTR ds:0x42e3f4
  4226c2:	mov    dl,0x1
  4226c4:	mov    eax,ds:0x41e3a8
  4226c9:	call   0x4225b8
  4226ce:	mov    DWORD PTR [eax+0xc],esi
  4226d1:	pop    ecx
  4226d2:	pop    edx
  4226d3:	pop    esi
  4226d4:	pop    ebx
  4226d5:	ret    
  4226d6:	mov    eax,eax
  4226d8:	fsub   QWORD PTR [esi]
  4226da:	inc    edx
  4226db:	add    BYTE PTR [esi],cl
  4226dd:	or     dl,BYTE PTR [ebp+eax*2+0x78]
  4226e1:	arpl   WORD PTR [ebp+0x70],sp
  4226e4:	je     0x422738
  4226e6:	arpl   WORD PTR gs:[eax],cx
  4226e9:	add    BYTE PTR [eax],al
  4226eb:	add    BYTE PTR [ecx],al
  4226ed:	add    BYTE PTR [eax],al
  4226ef:	add    BYTE PTR [eax],al
  4226f1:	adc    BYTE PTR [eax+0x0],al
  4226f4:	add    al,0x0
  4226f6:	add    BYTE PTR [eax],al
  4226f8:	push   ebx
  4226f9:	mov    ebx,edx
  4226fb:	mov    edx,eax
  4226fd:	dec    dl
  4226ff:	je     0x42270d
  422701:	dec    dl
  422703:	je     0x422715
  422705:	dec    edx
  422706:	sub    dl,0x16
  422709:	jb     0x42271d
  42270b:	jmp    0x422739
  42270d:	mov    edx,DWORD PTR ds:0x42f794
  422713:	jmp    0x422740
  422715:	mov    edx,DWORD PTR ds:0x42f798
  42271b:	jmp    0x422740
  42271d:	and    eax,0xff
  422722:	lea    eax,[eax*8+0x42e234]
  422729:	mov    ecx,DWORD PTR [eax+0x4]
  42272c:	mov    eax,DWORD PTR [eax]
  42272e:	mov    dl,0x1
  422730:	call   0x4224c0
  422735:	mov    edx,eax
  422737:	jmp    0x422740
  422739:	call   0x422678
  42273e:	mov    edx,eax
  422740:	push   ebx
  422741:	mov    eax,edx
  422743:	jmp    0x4036e4
  422748:	pop    ebx
  422749:	ret    
  42274a:	mov    eax,eax
  42274c:	push   ebp
  42274d:	mov    ebp,esp
  42274f:	add    esp,0xffffffe0
  422752:	push   ebx
  422753:	push   esi
  422754:	push   edi
  422755:	xor    ebx,ebx
  422757:	mov    DWORD PTR [ebp-0x20],ebx
  42275a:	mov    DWORD PTR [ebp-0x4],ebx
  42275d:	mov    edi,ecx
  42275f:	mov    esi,edx
  422761:	mov    ebx,eax
  422763:	xor    eax,eax
  422765:	push   ebp
  422766:	push   0x4227e8
  42276b:	push   DWORD PTR fs:[eax]
  42276e:	mov    DWORD PTR fs:[eax],esp
  422771:	test   ebx,ebx
  422773:	je     0x422781
  422775:	lea    eax,[ebp-0x4]
  422778:	mov    edx,ebx
  42277a:	call   0x403d44
  42277f:	jmp    0x42278e
  422781:	lea    edx,[ebp-0x4]
  422784:	mov    eax,ds:0x42e4ec
  422789:	call   0x4056fc
  42278e:	mov    eax,DWORD PTR [ebp-0x4]
  422791:	mov    DWORD PTR [ebp-0x1c],eax
  422794:	mov    BYTE PTR [ebp-0x18],0xb
  422798:	mov    DWORD PTR [ebp-0x14],esi
  42279b:	mov    BYTE PTR [ebp-0x10],0xb
  42279f:	mov    DWORD PTR [ebp-0xc],edi
  4227a2:	mov    BYTE PTR [ebp-0x8],0x0
  4227a6:	lea    eax,[ebp-0x1c]
  4227a9:	push   eax
  4227aa:	push   0x2
  4227ac:	lea    edx,[ebp-0x20]
  4227af:	mov    eax,ds:0x42e518
  4227b4:	call   0x4056fc
  4227b9:	mov    ecx,DWORD PTR [ebp-0x20]
  4227bc:	mov    dl,0x1
  4227be:	mov    eax,ds:0x41eab0
  4227c3:	call   0x4224fc
  4227c8:	mov    ebx,eax
  4227ca:	xor    eax,eax
  4227cc:	pop    edx
  4227cd:	pop    ecx
  4227ce:	pop    ecx
  4227cf:	mov    DWORD PTR fs:[eax],edx
  4227d2:	push   0x4227ef
  4227d7:	lea    eax,[ebp-0x20]
  4227da:	call   0x403cac
  4227df:	lea    eax,[ebp-0x4]
  4227e2:	call   0x403cac
  4227e7:	ret    
  4227e8:	jmp    0x4036ac
  4227ed:	jmp    0x4227d7
  4227ef:	mov    eax,ebx
  4227f1:	pop    edi
  4227f2:	pop    esi
  4227f3:	pop    ebx
  4227f4:	mov    esp,ebp
  4227f6:	pop    ebp
  4227f7:	ret    
  4227f8:	mov    esp,ecx
  4227fa:	mov    DWORD PTR [esp],edx
  4227fd:	mov    ebp,DWORD PTR [ebp+0x0]
  422800:	jmp    0x4036e4
  422805:	ret    
  422806:	mov    eax,eax
  422808:	push   ebp
  422809:	mov    ebp,esp
  42280b:	call   0x42274c
  422810:	lea    ecx,[ebp+0x8]
  422813:	add    ecx,0x4
  422816:	mov    edx,DWORD PTR [ebp+0x8]
  422819:	call   0x4227f8
  42281e:	pop    ebp
  42281f:	ret    0x4
  422822:	mov    eax,eax
  422824:	mov    ecx,DWORD PTR ds:0x42e40c
  42282a:	mov    dl,0x1
  42282c:	mov    eax,ds:0x41eb10
  422831:	call   0x42257c
  422836:	call   0x4036e4
  42283b:	ret    
  42283c:	mov    eax,DWORD PTR [eax]
  42283e:	cmp    eax,0xc0000092
  422843:	jg     0x422871
  422845:	je     0x4228a0
  422847:	cmp    eax,0xc000008e
  42284c:	jg     0x422863
  42284e:	je     0x4228a3
  422850:	sub    eax,0xc0000005
  422855:	je     0x4228ac
  422857:	sub    eax,0x87
  42285c:	je     0x42289a
  42285e:	dec    eax
  42285f:	je     0x4228a9
  422861:	jmp    0x4228b8
  422863:	add    eax,0x3fffff71
  422868:	sub    eax,0x2
  42286b:	jb     0x4228a0
  42286d:	je     0x4228a6
  42286f:	jmp    0x4228b8
  422871:	cmp    eax,0xc0000096
  422876:	jg     0x422889
  422878:	je     0x4228af
  42287a:	sub    eax,0xc0000093
  42287f:	je     0x4228a9
  422881:	dec    eax
  422882:	je     0x422897
  422884:	dec    eax
  422885:	je     0x42289d
  422887:	jmp    0x4228b8
  422889:	sub    eax,0xc00000fd
  42288e:	je     0x4228b5
  422890:	sub    eax,0x3d
  422893:	je     0x4228b2
  422895:	jmp    0x4228b8
  422897:	mov    al,0x3
  422899:	ret    
  42289a:	mov    al,0x4
  42289c:	ret    
  42289d:	mov    al,0x5
  42289f:	ret    
  4228a0:	mov    al,0x6
  4228a2:	ret    
  4228a3:	mov    al,0x7
  4228a5:	ret    
  4228a6:	mov    al,0x8
  4228a8:	ret    
  4228a9:	mov    al,0x9
  4228ab:	ret    
  4228ac:	mov    al,0xb
  4228ae:	ret    
  4228af:	mov    al,0xc
  4228b1:	ret    
  4228b2:	mov    al,0xd
  4228b4:	ret    
  4228b5:	mov    al,0xe
  4228b7:	ret    
  4228b8:	mov    al,0x16
  4228ba:	ret    
  4228bb:	nop
  4228bc:	push   ebx
  4228bd:	mov    ebx,eax
  4228bf:	mov    eax,ebx
  4228c1:	call   0x42283c
  4228c6:	and    eax,0xff
  4228cb:	mov    eax,DWORD PTR [eax*8+0x42e234]
  4228d2:	pop    ebx
  4228d3:	ret    
  4228d4:	push   ebp
  4228d5:	mov    ebp,esp
  4228d7:	add    esp,0xfffffe8c
  4228dd:	push   ebx
  4228de:	xor    eax,eax
  4228e0:	mov    DWORD PTR [ebp-0x174],eax
  4228e6:	mov    DWORD PTR [ebp-0x150],eax
  4228ec:	mov    DWORD PTR [ebp-0x158],eax
  4228f2:	mov    DWORD PTR [ebp-0x154],eax
  4228f8:	mov    DWORD PTR [ebp-0x4],eax
  4228fb:	xor    eax,eax
  4228fd:	push   ebp
  4228fe:	push   0x422a97
  422903:	push   DWORD PTR fs:[eax]
  422906:	mov    DWORD PTR fs:[eax],esp
  422909:	mov    eax,DWORD PTR [ebp+0x8]
  42290c:	mov    ebx,DWORD PTR [eax-0x4]
  42290f:	cmp    DWORD PTR [ebx+0x14],0x0
  422913:	jne    0x422924
  422915:	lea    edx,[ebp-0x4]
  422918:	mov    eax,ds:0x42e570
  42291d:	call   0x4056fc
  422922:	jmp    0x422931
  422924:	lea    edx,[ebp-0x4]
  422927:	mov    eax,ds:0x42e4d4
  42292c:	call   0x4056fc
  422931:	mov    eax,DWORD PTR [ebx+0x18]
  422934:	mov    DWORD PTR [ebp-0x8],eax
  422937:	push   0x1c
  422939:	lea    eax,[ebp-0x24]
  42293c:	push   eax
  42293d:	mov    eax,DWORD PTR [ebx+0xc]
  422940:	push   eax
  422941:	call   0x405b78
  422946:	cmp    DWORD PTR [ebp-0x14],0x1000
  42294d:	jne    0x422a09
  422953:	push   0x105
  422958:	lea    eax,[ebp-0x129]
  42295e:	push   eax
  42295f:	mov    eax,DWORD PTR [ebp-0x20]
  422962:	push   eax
  422963:	call   0x405b08
  422968:	test   eax,eax
  42296a:	je     0x422a09
  422970:	mov    eax,DWORD PTR [ebx+0xc]
  422973:	mov    DWORD PTR [ebp-0x14c],eax
  422979:	mov    BYTE PTR [ebp-0x148],0x5
  422980:	lea    eax,[ebp-0x154]
  422986:	lea    edx,[ebp-0x129]
  42298c:	mov    ecx,0x105
  422991:	call   0x403f1c
  422996:	mov    eax,DWORD PTR [ebp-0x154]
  42299c:	lea    edx,[ebp-0x150]
  4229a2:	call   0x41f554
  4229a7:	mov    eax,DWORD PTR [ebp-0x150]
  4229ad:	mov    DWORD PTR [ebp-0x144],eax
  4229b3:	mov    BYTE PTR [ebp-0x140],0xb
  4229ba:	mov    eax,DWORD PTR [ebp-0x4]
  4229bd:	mov    DWORD PTR [ebp-0x13c],eax
  4229c3:	mov    BYTE PTR [ebp-0x138],0xb
  4229ca:	mov    eax,DWORD PTR [ebp-0x8]
  4229cd:	mov    DWORD PTR [ebp-0x134],eax
  4229d3:	mov    BYTE PTR [ebp-0x130],0x5
  4229da:	lea    eax,[ebp-0x14c]
  4229e0:	push   eax
  4229e1:	push   0x3
  4229e3:	lea    edx,[ebp-0x158]
  4229e9:	mov    eax,ds:0x42e50c
  4229ee:	call   0x4056fc
  4229f3:	mov    ecx,DWORD PTR [ebp-0x158]
  4229f9:	mov    dl,0x1
  4229fb:	mov    eax,ds:0x41e8e8
  422a00:	call   0x4224fc
  422a05:	mov    ebx,eax
  422a07:	jmp    0x422a66
  422a09:	mov    eax,DWORD PTR [ebx+0xc]
  422a0c:	mov    DWORD PTR [ebp-0x170],eax
  422a12:	mov    BYTE PTR [ebp-0x16c],0x5
  422a19:	mov    eax,DWORD PTR [ebp-0x4]
  422a1c:	mov    DWORD PTR [ebp-0x168],eax
  422a22:	mov    BYTE PTR [ebp-0x164],0xb
  422a29:	mov    eax,DWORD PTR [ebp-0x8]
  422a2c:	mov    DWORD PTR [ebp-0x160],eax
  422a32:	mov    BYTE PTR [ebp-0x15c],0x5
  422a39:	lea    eax,[ebp-0x170]
  422a3f:	push   eax
  422a40:	push   0x2
  422a42:	lea    edx,[ebp-0x174]
  422a48:	mov    eax,ds:0x42e4d8
  422a4d:	call   0x4056fc
  422a52:	mov    ecx,DWORD PTR [ebp-0x174]
  422a58:	mov    dl,0x1
  422a5a:	mov    eax,ds:0x41e8e8
  422a5f:	call   0x4224fc
  422a64:	mov    ebx,eax
  422a66:	xor    eax,eax
  422a68:	pop    edx
  422a69:	pop    ecx
  422a6a:	pop    ecx
  422a6b:	mov    DWORD PTR fs:[eax],edx
  422a6e:	push   0x422a9e
  422a73:	lea    eax,[ebp-0x174]
  422a79:	call   0x403cac
  422a7e:	lea    eax,[ebp-0x158]
  422a84:	mov    edx,0x3
  422a89:	call   0x403cd0
  422a8e:	lea    eax,[ebp-0x4]
  422a91:	call   0x403cac
  422a96:	ret    
  422a97:	jmp    0x4036ac
  422a9c:	jmp    0x422a73
  422a9e:	mov    eax,ebx
  422aa0:	pop    ebx
  422aa1:	mov    esp,ebp
  422aa3:	pop    ebp
  422aa4:	ret    
  422aa5:	lea    eax,[eax+0x0]
  422aa8:	push   ebp
  422aa9:	mov    ebp,esp
  422aab:	add    esp,0xfffffff0
  422aae:	push   ebx
  422aaf:	xor    edx,edx
  422ab1:	mov    DWORD PTR [ebp-0x10],edx
  422ab4:	mov    DWORD PTR [ebp-0x4],eax
  422ab7:	xor    eax,eax
  422ab9:	push   ebp
  422aba:	push   0x422b63
  422abf:	push   DWORD PTR fs:[eax]
  422ac2:	mov    DWORD PTR fs:[eax],esp
  422ac5:	mov    eax,DWORD PTR [ebp-0x4]
  422ac8:	call   0x42283c
  422acd:	and    eax,0xff
  422ad2:	mov    edx,eax
  422ad4:	add    edx,0xfffffffd
  422ad7:	sub    edx,0x8
  422ada:	jb     0x422ae4
  422adc:	je     0x422afb
  422ade:	dec    edx
  422adf:	sub    edx,0xa
  422ae2:	jae    0x422b06
  422ae4:	lea    eax,[eax*8+0x42e234]
  422aeb:	mov    ecx,DWORD PTR [eax+0x4]
  422aee:	mov    eax,DWORD PTR [eax]
  422af0:	mov    dl,0x1
  422af2:	call   0x4224c0
  422af7:	mov    ebx,eax
  422af9:	jmp    0x422b36
  422afb:	push   ebp
  422afc:	call   0x4228d4
  422b01:	pop    ecx
  422b02:	mov    ebx,eax
  422b04:	jmp    0x422b36
  422b06:	mov    eax,DWORD PTR [ebp-0x4]
  422b09:	mov    eax,DWORD PTR [eax]
  422b0b:	mov    DWORD PTR [ebp-0xc],eax
  422b0e:	mov    BYTE PTR [ebp-0x8],0x0
  422b12:	lea    eax,[ebp-0xc]
  422b15:	push   eax
  422b16:	push   0x0
  422b18:	lea    edx,[ebp-0x10]
  422b1b:	mov    eax,ds:0x42e3bc
  422b20:	call   0x4056fc
  422b25:	mov    ecx,DWORD PTR [ebp-0x10]
  422b28:	mov    dl,0x1
  422b2a:	mov    eax,ds:0x41e458
  422b2f:	call   0x4224fc
  422b34:	mov    ebx,eax
  422b36:	mov    eax,ebx
  422b38:	mov    edx,DWORD PTR ds:0x41e400
  422b3e:	call   0x40335c
  422b43:	test   al,al
  422b45:	je     0x422b4d
  422b47:	mov    eax,DWORD PTR [ebp-0x4]
  422b4a:	mov    DWORD PTR [ebx+0xc],eax
  422b4d:	xor    eax,eax
  422b4f:	pop    edx
  422b50:	pop    ecx
  422b51:	pop    ecx
  422b52:	mov    DWORD PTR fs:[eax],edx
  422b55:	push   0x422b6a
  422b5a:	lea    eax,[ebp-0x10]
  422b5d:	call   0x403cac
  422b62:	ret    
  422b63:	jmp    0x4036ac
  422b68:	jmp    0x422b5a
  422b6a:	mov    eax,ebx
  422b6c:	pop    ebx
  422b6d:	mov    esp,ebp
  422b6f:	pop    ebp
  422b70:	ret    
  422b71:	lea    eax,[eax+0x0]
  422b74:	call   0x4223f8
  422b79:	mov    eax,0x1
  422b7e:	call   0x403c94
  422b83:	ret    
  422b84:	mov    ecx,DWORD PTR ds:0x42e3fc
  422b8a:	mov    dl,0x1
  422b8c:	mov    eax,ds:0x41e34c
  422b91:	call   0x42257c
  422b96:	mov    ds:0x42f794,eax
  422b9b:	mov    ecx,DWORD PTR ds:0x42e4b0
  422ba1:	mov    dl,0x1
  422ba3:	mov    eax,ds:0x41e7d4
  422ba8:	call   0x42257c
  422bad:	mov    ds:0x42f798,eax
  422bb2:	mov    eax,ds:0x42e3c8
  422bb7:	mov    DWORD PTR [eax],0x4226f8
  422bbd:	mov    eax,ds:0x42e42c
  422bc2:	mov    DWORD PTR [eax],0x422b74
  422bc8:	mov    eax,ds:0x42e3f0
  422bcd:	mov    edx,DWORD PTR ds:0x41e288
  422bd3:	mov    DWORD PTR [eax],edx
  422bd5:	mov    eax,ds:0x42e424
  422bda:	mov    DWORD PTR [eax],0x4228bc
  422be0:	mov    eax,ds:0x42e430
  422be5:	mov    DWORD PTR [eax],0x422aa8
  422beb:	mov    eax,0x422808
  422bf0:	mov    edx,DWORD PTR ds:0x42e4c4
  422bf6:	mov    DWORD PTR [edx],eax
  422bf8:	mov    eax,0x422824
  422bfd:	mov    edx,DWORD PTR ds:0x42e3b8
  422c03:	mov    DWORD PTR [edx],eax
  422c05:	ret    
  422c06:	mov    eax,eax
  422c08:	cmp    DWORD PTR ds:0x42f794,0x0
  422c0f:	je     0x422c2b
  422c11:	mov    eax,ds:0x42f794
  422c16:	mov    BYTE PTR [eax+0xc],0x1
  422c1a:	mov    eax,ds:0x42f794
  422c1f:	mov    edx,DWORD PTR [eax]
  422c21:	call   DWORD PTR [edx-0x8]
  422c24:	xor    eax,eax
  422c26:	mov    ds:0x42f794,eax
  422c2b:	cmp    DWORD PTR ds:0x42f798,0x0
  422c32:	je     0x422c4e
  422c34:	mov    eax,ds:0x42f798
  422c39:	mov    BYTE PTR [eax+0xc],0x1
  422c3d:	mov    eax,ds:0x42f798
  422c42:	call   0x4031c4
  422c47:	xor    eax,eax
  422c49:	mov    ds:0x42f798,eax
  422c4e:	mov    eax,ds:0x42e3c8
  422c53:	xor    edx,edx
  422c55:	mov    DWORD PTR [eax],edx
  422c57:	mov    eax,ds:0x42e42c
  422c5c:	xor    edx,edx
  422c5e:	mov    DWORD PTR [eax],edx
  422c60:	mov    eax,ds:0x42e3f0
  422c65:	xor    edx,edx
  422c67:	mov    DWORD PTR [eax],edx
  422c69:	mov    eax,ds:0x42e424
  422c6e:	xor    edx,edx
  422c70:	mov    DWORD PTR [eax],edx
  422c72:	mov    eax,ds:0x42e430
  422c77:	xor    edx,edx
  422c79:	mov    DWORD PTR [eax],edx
  422c7b:	mov    eax,ds:0x42e4c4
  422c80:	xor    edx,edx
  422c82:	mov    DWORD PTR [eax],edx
  422c84:	ret    
  422c85:	lea    eax,[eax+0x0]
  422c88:	add    esp,0xffffff6c
  422c8e:	mov    DWORD PTR [esp],0x94
  422c95:	push   esp
  422c96:	call   0x405b38
  422c9b:	test   eax,eax
  422c9d:	je     0x422cef
  422c9f:	mov    eax,DWORD PTR [esp+0x10]
  422ca3:	mov    ds:0x42e0bc,eax
  422ca8:	mov    eax,DWORD PTR [esp+0x4]
  422cac:	mov    ds:0x42e0c0,eax
  422cb1:	mov    eax,DWORD PTR [esp+0x8]
  422cb5:	mov    ds:0x42e0c4,eax
  422cba:	cmp    DWORD PTR ds:0x42e0bc,0x1
  422cc1:	jne    0x422cd3
  422cc3:	mov    eax,DWORD PTR [esp+0xc]
  422cc7:	and    eax,0xffff
  422ccc:	mov    ds:0x42e0c8,eax
  422cd1:	jmp    0x422cdc
  422cd3:	mov    eax,DWORD PTR [esp+0xc]
  422cd7:	mov    ds:0x42e0c8,eax
  422cdc:	mov    eax,0x42e0cc
  422ce1:	lea    edx,[esp+0x14]
  422ce5:	mov    ecx,0x80
  422cea:	call   0x403f1c
  422cef:	add    esp,0x94
  422cf5:	ret    
  422cf6:	mov    eax,eax
  422cf8:	push   esi
  422cf9:	push   edi
  422cfa:	mov    edi,edx
  422cfc:	xor    edx,edx
  422cfe:	test   eax,eax
  422d00:	je     0x422d68
  422d02:	cmp    BYTE PTR [eax+edi*1],0x0
  422d06:	je     0x422d68
  422d08:	test   edi,edi
  422d0a:	jne    0x422d20
  422d0c:	mov    al,BYTE PTR [eax]
  422d0e:	and    eax,0xff
  422d13:	bt     DWORD PTR ds:0x42e104,eax
  422d1a:	jae    0x422d68
  422d1c:	mov    dl,0x1
  422d1e:	jmp    0x422d68
  422d20:	mov    esi,edi
  422d22:	dec    esi
  422d23:	jmp    0x422d26
  422d25:	dec    esi
  422d26:	test   esi,esi
  422d28:	jl     0x422d3c
  422d2a:	mov    cl,BYTE PTR [eax+esi*1]
  422d2d:	and    ecx,0xff
  422d33:	bt     DWORD PTR ds:0x42e104,ecx
  422d3a:	jb     0x422d25
  422d3c:	mov    ecx,edi
  422d3e:	sub    ecx,esi
  422d40:	and    ecx,0x80000001
  422d46:	jns    0x422d4d
  422d48:	dec    ecx
  422d49:	or     ecx,0xfffffffe
  422d4c:	inc    ecx
  422d4d:	test   ecx,ecx
  422d4f:	jne    0x422d55
  422d51:	mov    dl,0x2
  422d53:	jmp    0x422d68
  422d55:	mov    al,BYTE PTR [eax+edi*1]
  422d58:	and    eax,0xff
  422d5d:	bt     DWORD PTR ds:0x42e104,eax
  422d64:	jae    0x422d68
  422d66:	mov    dl,0x1
  422d68:	mov    eax,edx
  422d6a:	pop    edi
  422d6b:	pop    esi
  422d6c:	ret    
  422d6d:	lea    eax,[eax+0x0]
  422d70:	push   ebx
  422d71:	push   esi
  422d72:	mov    esi,edx
  422d74:	mov    ebx,eax
  422d76:	xor    eax,eax
  422d78:	cmp    BYTE PTR ds:0x42f74c,0x0
  422d7f:	je     0x422d90
  422d81:	mov    eax,ebx
  422d83:	call   0x404148
  422d88:	mov    edx,esi
  422d8a:	dec    edx
  422d8b:	call   0x422cf8
  422d90:	pop    esi
  422d91:	pop    ebx
  422d92:	ret    
  422d93:	nop
  422d94:	xor    ecx,ecx
  422d96:	cmp    BYTE PTR ds:0x42f74c,0x0
  422d9d:	je     0x422da6
  422d9f:	call   0x422cf8
  422da4:	mov    ecx,eax
  422da6:	mov    eax,ecx
  422da8:	ret    
  422da9:	lea    eax,[eax+0x0]
  422dac:	push   ebx
  422dad:	push   esi
  422dae:	mov    esi,edx
  422db0:	mov    ebx,eax
  422db2:	mov    eax,ebx
  422db4:	call   0x403f48
  422db9:	cmp    esi,eax
  422dbb:	jle    0x422dc6
  422dbd:	mov    eax,ebx
  422dbf:	call   0x403f48
  422dc4:	mov    esi,eax
  422dc6:	mov    edx,esi
  422dc8:	mov    eax,ebx
  422dca:	call   0x422dd4
  422dcf:	pop    esi
  422dd0:	pop    ebx
  422dd1:	ret    
  422dd2:	mov    eax,eax
  422dd4:	push   ebx
  422dd5:	push   esi
  422dd6:	push   edi
  422dd7:	push   ebp
  422dd8:	mov    edi,edx
  422dda:	mov    esi,eax
  422ddc:	xor    ebp,ebp
  422dde:	test   edi,edi
  422de0:	jle    0x422e28
  422de2:	mov    eax,esi
  422de4:	call   0x403f48
  422de9:	cmp    edi,eax
  422deb:	jg     0x422e28
  422ded:	mov    ebp,edi
  422def:	cmp    BYTE PTR ds:0x42f74c,0x0
  422df6:	je     0x422e28
  422df8:	mov    ebx,0x1
  422dfd:	xor    ebp,ebp
  422dff:	cmp    edi,ebx
  422e01:	jl     0x422e28
  422e03:	mov    al,BYTE PTR [esi+ebx*1-0x1]
  422e07:	and    eax,0xff
  422e0c:	bt     DWORD PTR ds:0x42e104,eax
  422e13:	jae    0x422e22
  422e15:	mov    edx,ebx
  422e17:	mov    eax,esi
  422e19:	call   0x422ff4
  422e1e:	mov    ebx,eax
  422e20:	jmp    0x422e23
  422e22:	inc    ebx
  422e23:	inc    ebp
  422e24:	cmp    edi,ebx
  422e26:	jge    0x422e03
  422e28:	mov    eax,ebp
  422e2a:	pop    ebp
  422e2b:	pop    edi
  422e2c:	pop    esi
  422e2d:	pop    ebx
  422e2e:	ret    
  422e2f:	nop
  422e30:	push   ebp
  422e31:	mov    ebp,esp
  422e33:	add    esp,0xfffffff4
  422e36:	push   ebx
  422e37:	push   esi
  422e38:	push   edi
  422e39:	mov    DWORD PTR [ebp-0x8],ecx
  422e3c:	mov    DWORD PTR [ebp-0x4],edx
  422e3f:	mov    edi,eax
  422e41:	mov    eax,edi
  422e43:	call   0x403f48
  422e48:	mov    DWORD PTR [ebp-0xc],eax
  422e4b:	mov    esi,0x1
  422e50:	mov    ebx,0x1
  422e55:	jmp    0x422e78
  422e57:	inc    esi
  422e58:	mov    al,BYTE PTR [edi+ebx*1-0x1]
  422e5c:	and    eax,0xff
  422e61:	bt     DWORD PTR ds:0x42e104,eax
  422e68:	jae    0x422e77
  422e6a:	mov    edx,ebx
  422e6c:	mov    eax,edi
  422e6e:	call   0x422ff4
  422e73:	mov    ebx,eax
  422e75:	jmp    0x422e78
  422e77:	inc    ebx
  422e78:	cmp    ebx,DWORD PTR [ebp-0xc]
  422e7b:	jge    0x422e82
  422e7d:	cmp    esi,DWORD PTR [ebp-0x4]
  422e80:	jl     0x422e57
  422e82:	cmp    esi,DWORD PTR [ebp-0x4]
  422e85:	jne    0x422eaa
  422e87:	cmp    ebx,DWORD PTR [ebp-0xc]
  422e8a:	jge    0x422eaa
  422e8c:	mov    al,BYTE PTR [edi+ebx*1-0x1]
  422e90:	and    eax,0xff
  422e95:	bt     DWORD PTR ds:0x42e104,eax
  422e9c:	jae    0x422eaa
  422e9e:	mov    edx,ebx
  422ea0:	mov    eax,edi
  422ea2:	call   0x422ff4
  422ea7:	dec    eax
  422ea8:	mov    ebx,eax
  422eaa:	mov    eax,DWORD PTR [ebp-0x8]
  422ead:	mov    DWORD PTR [eax],esi
  422eaf:	mov    eax,DWORD PTR [ebp+0x8]
  422eb2:	mov    DWORD PTR [eax],ebx
  422eb4:	pop    edi
  422eb5:	pop    esi
  422eb6:	pop    ebx
  422eb7:	mov    esp,ebp
  422eb9:	pop    ebp
  422eba:	ret    0x4
  422ebd:	lea    eax,[eax+0x0]
  422ec0:	push   ebx
  422ec1:	push   esi
  422ec2:	add    esp,0xfffffff8
  422ec5:	mov    ebx,edx
  422ec7:	mov    esi,eax
  422ec9:	xor    eax,eax
  422ecb:	mov    DWORD PTR [esp],eax
  422ece:	test   ebx,ebx
  422ed0:	jle    0x422f1c
  422ed2:	mov    eax,esi
  422ed4:	call   0x403f48
  422ed9:	cmp    ebx,eax
  422edb:	jg     0x422f1c
  422edd:	cmp    ebx,0x1
  422ee0:	jle    0x422f19
  422ee2:	cmp    BYTE PTR ds:0x42f74c,0x0
  422ee9:	je     0x422f19
  422eeb:	push   esp
  422eec:	lea    ecx,[esp+0x8]
  422ef0:	mov    edx,ebx
  422ef2:	dec    edx
  422ef3:	mov    eax,esi
  422ef5:	call   0x422e30
  422efa:	dec    ebx
  422efb:	cmp    ebx,DWORD PTR [esp+0x4]
  422eff:	jg     0x422f0d
  422f01:	mov    eax,esi
  422f03:	call   0x403f48
  422f08:	cmp    eax,DWORD PTR [esp]
  422f0b:	jg     0x422f14
  422f0d:	xor    eax,eax
  422f0f:	mov    DWORD PTR [esp],eax
  422f12:	jmp    0x422f1c
  422f14:	inc    DWORD PTR [esp]
  422f17:	jmp    0x422f1c
  422f19:	mov    DWORD PTR [esp],ebx
  422f1c:	mov    eax,DWORD PTR [esp]
  422f1f:	pop    ecx
  422f20:	pop    edx
  422f21:	pop    esi
  422f22:	pop    ebx
  422f23:	ret    
  422f24:	push   ebx
  422f25:	push   esi
  422f26:	add    esp,0xfffffff8
  422f29:	mov    ebx,edx
  422f2b:	mov    esi,eax
  422f2d:	xor    eax,eax
  422f2f:	mov    DWORD PTR [esp],eax
  422f32:	test   ebx,ebx
  422f34:	jle    0x422f7c
  422f36:	mov    eax,esi
  422f38:	call   0x403f48
  422f3d:	cmp    ebx,eax
  422f3f:	jle    0x422f4a
  422f41:	mov    eax,esi
  422f43:	call   0x403f48
  422f48:	mov    ebx,eax
  422f4a:	cmp    BYTE PTR ds:0x42f74c,0x0
  422f51:	je     0x422f79
  422f53:	push   esp
  422f54:	lea    ecx,[esp+0x8]
  422f58:	mov    edx,ebx
  422f5a:	mov    eax,esi
  422f5c:	call   0x422e30
  422f61:	mov    eax,esi
  422f63:	call   0x403f48
  422f68:	cmp    eax,DWORD PTR [esp]
  422f6b:	jge    0x422f7c
  422f6d:	mov    eax,esi
  422f6f:	call   0x403f48
  422f74:	mov    DWORD PTR [esp],eax
  422f77:	jmp    0x422f7c
  422f79:	mov    DWORD PTR [esp],ebx
  422f7c:	mov    eax,DWORD PTR [esp]
  422f7f:	pop    ecx
  422f80:	pop    edx
  422f81:	pop    esi
  422f82:	pop    ebx
  422f83:	ret    
  422f84:	push   ebx
  422f85:	mov    ebx,eax
  422f87:	cmp    BYTE PTR ds:0x42f74c,0x0
  422f8e:	je     0x422f9a
  422f90:	push   ebx
  422f91:	call   0x405b90
  422f96:	sub    eax,ebx
  422f98:	pop    ebx
  422f99:	ret    
  422f9a:	mov    eax,0x1
  422f9f:	pop    ebx
  422fa0:	ret    
  422fa1:	lea    eax,[eax+0x0]
  422fa4:	push   ebx
  422fa5:	push   ecx
  422fa6:	mov    ebx,eax
  422fa8:	push   ebx
  422fa9:	call   0x405b90
  422fae:	mov    DWORD PTR [esp],eax
  422fb1:	mov    eax,DWORD PTR [esp]
  422fb4:	pop    edx
  422fb5:	pop    ebx
  422fb6:	ret    
  422fb7:	nop
  422fb8:	push   ebx
  422fb9:	push   esi
  422fba:	mov    esi,edx
  422fbc:	mov    ebx,eax
  422fbe:	mov    eax,0x1
  422fc3:	cmp    BYTE PTR ds:0x42f74c,0x0
  422fca:	je     0x422fee
  422fcc:	mov    dl,BYTE PTR [ebx+esi*1-0x1]
  422fd0:	and    edx,0xff
  422fd6:	bt     DWORD PTR ds:0x42e104,edx
  422fdd:	jae    0x422fee
  422fdf:	mov    eax,ebx
  422fe1:	call   0x404148
  422fe6:	add    eax,esi
  422fe8:	dec    eax
  422fe9:	call   0x422f84
  422fee:	pop    esi
  422fef:	pop    ebx
  422ff0:	ret    
  422ff1:	lea    eax,[eax+0x0]
  422ff4:	push   ebx
  422ff5:	push   esi
  422ff6:	mov    ebx,edx
  422ff8:	mov    esi,eax
  422ffa:	lea    eax,[ebx+0x1]
  422ffd:	cmp    BYTE PTR ds:0x42f74c,0x0
  423004:	je     0x42302a
  423006:	mov    dl,BYTE PTR [esi+ebx*1-0x1]
  42300a:	and    edx,0xff
  423010:	bt     DWORD PTR ds:0x42e104,edx
  423017:	jae    0x42302a
  423019:	mov    eax,esi
  42301b:	call   0x404148
  423020:	add    eax,ebx
  423022:	dec    eax
  423023:	call   0x422f84
  423028:	add    eax,ebx
  42302a:	pop    esi
  42302b:	pop    ebx
  42302c:	ret    
  42302d:	lea    eax,[eax+0x0]
  423030:	push   ebx
  423031:	push   esi
  423032:	push   edi
  423033:	push   ebp
  423034:	push   ecx
  423035:	mov    ebx,edx
  423037:	mov    ebp,eax
  423039:	xor    esi,esi
  42303b:	mov    eax,ebp
  42303d:	call   0x404148
  423042:	push   eax
  423043:	mov    eax,ebx
  423045:	call   0x404148
  42304a:	mov    edi,eax
  42304c:	mov    eax,edi
  42304e:	pop    edx
  42304f:	call   0x42306c
  423054:	mov    DWORD PTR [esp],eax
  423057:	cmp    DWORD PTR [esp],0x0
  42305b:	je     0x423063
  42305d:	mov    esi,DWORD PTR [esp]
  423060:	sub    esi,edi
  423062:	inc    esi
  423063:	mov    eax,esi
  423065:	pop    edx
  423066:	pop    ebp
  423067:	pop    edi
  423068:	pop    esi
  423069:	pop    ebx
  42306a:	ret    
  42306b:	nop
  42306c:	push   ebx
  42306d:	push   esi
  42306e:	push   edi
  42306f:	push   ebp
  423070:	add    esp,0xfffffff8
  423073:	mov    edi,edx
  423075:	mov    ebp,eax
  423077:	xor    eax,eax
  423079:	mov    DWORD PTR [esp],eax
  42307c:	test   ebp,ebp
  42307e:	je     0x42311f
  423084:	cmp    BYTE PTR [ebp+0x0],0x0
  423088:	je     0x42311f
  42308e:	test   edi,edi
  423090:	je     0x42311f
  423096:	cmp    BYTE PTR [edi],0x0
  423099:	je     0x42311f
  42309f:	mov    eax,ebp
  4230a1:	call   0x41f648
  4230a6:	mov    DWORD PTR [esp+0x4],eax
  4230aa:	mov    eax,edi
  4230ac:	call   0x41f648
  4230b1:	mov    esi,eax
  4230b3:	mov    edx,edi
  4230b5:	mov    eax,ebp
  4230b7:	call   0x41f708
  4230bc:	mov    DWORD PTR [esp],eax
  4230bf:	jmp    0x423105
  4230c1:	mov    edx,DWORD PTR [esp]
  4230c4:	sub    edx,ebp
  4230c6:	mov    eax,ebp
  4230c8:	call   0x422d94
  4230cd:	mov    ebx,eax
  4230cf:	cmp    bl,0x2
  4230d2:	je     0x4230ed
  4230d4:	push   esi
  4230d5:	push   edi
  4230d6:	push   esi
  4230d7:	mov    eax,DWORD PTR [esp+0xc]
  4230db:	push   eax
  4230dc:	push   0x0
  4230de:	push   0x400
  4230e3:	call   0x405a88
  4230e8:	cmp    eax,0x2
  4230eb:	je     0x42311f
  4230ed:	cmp    bl,0x1
  4230f0:	jne    0x4230f5
  4230f2:	inc    DWORD PTR [esp]
  4230f5:	inc    DWORD PTR [esp]
  4230f8:	mov    edx,edi
  4230fa:	mov    eax,DWORD PTR [esp]
  4230fd:	call   0x41f708
  423102:	mov    DWORD PTR [esp],eax
  423105:	cmp    DWORD PTR [esp],0x0
  423109:	je     0x42311a
  42310b:	mov    eax,DWORD PTR [esp]
  42310e:	sub    eax,ebp
  423110:	mov    edx,DWORD PTR [esp+0x4]
  423114:	sub    edx,eax
  423116:	cmp    esi,edx
  423118:	jbe    0x4230c1
  42311a:	xor    eax,eax
  42311c:	mov    DWORD PTR [esp],eax
  42311f:	mov    eax,DWORD PTR [esp]
  423122:	pop    ecx
  423123:	pop    edx
  423124:	pop    ebp
  423125:	pop    edi
  423126:	pop    esi
  423127:	pop    ebx
  423128:	ret    
  423129:	lea    eax,[eax+0x0]
  42312c:	push   ebx
  42312d:	push   esi
  42312e:	add    esp,0xfffffff8
  423131:	mov    ebx,edx
  423133:	mov    DWORD PTR [esp],eax
  423136:	mov    esi,esp
  423138:	mov    edx,ebx
  42313a:	mov    eax,DWORD PTR [esi]
  42313c:	call   0x423174
  423141:	mov    DWORD PTR [esi],eax
  423143:	mov    eax,DWORD PTR [esi]
  423145:	mov    DWORD PTR [esp+0x4],eax
  423149:	test   bl,bl
  42314b:	je     0x42316a
  42314d:	cmp    DWORD PTR [esi],0x0
  423150:	je     0x42316a
  423152:	mov    eax,DWORD PTR [esi]
  423154:	mov    DWORD PTR [esp+0x4],eax
  423158:	inc    DWORD PTR [esi]
  42315a:	mov    edx,ebx
  42315c:	mov    eax,DWORD PTR [esi]
  42315e:	call   0x423174
  423163:	mov    DWORD PTR [esi],eax
  423165:	cmp    DWORD PTR [esi],0x0
  423168:	jne    0x423152
  42316a:	mov    eax,DWORD PTR [esp+0x4]
  42316e:	pop    ecx
  42316f:	pop    edx
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	nop
  423174:	push   ebx
  423175:	push   esi
  423176:	push   edi
  423177:	push   ecx
  423178:	mov    ebx,edx
  42317a:	mov    esi,eax
  42317c:	mov    edi,esp
  42317e:	mov    edx,ebx
  423180:	mov    eax,esi
  423182:	call   0x41f6e8
  423187:	mov    DWORD PTR [edi],eax
  423189:	cmp    DWORD PTR [edi],0x0
  42318c:	je     0x4231b5
  42318e:	mov    edx,DWORD PTR [edi]
  423190:	sub    edx,esi
  423192:	mov    eax,esi
  423194:	call   0x422d94
  423199:	sub    al,0x1
  42319b:	jb     0x4231b5
  42319d:	je     0x4231a1
  42319f:	jmp    0x4231a3
  4231a1:	inc    DWORD PTR [edi]
  4231a3:	inc    DWORD PTR [edi]
  4231a5:	mov    edx,ebx
  4231a7:	mov    eax,DWORD PTR [edi]
  4231a9:	call   0x41f6e8
  4231ae:	mov    DWORD PTR [edi],eax
  4231b0:	cmp    DWORD PTR [edi],0x0
  4231b3:	jne    0x42318e
  4231b5:	mov    eax,DWORD PTR [edi]
  4231b7:	pop    edx
  4231b8:	pop    edi
  4231b9:	pop    esi
  4231ba:	pop    ebx
  4231bb:	ret    
  4231bc:	push   ebp
  4231bd:	mov    ebp,esp
  4231bf:	add    esp,0xfffffff4
  4231c2:	push   ebx
  4231c3:	xor    edx,edx
  4231c5:	mov    DWORD PTR [ebp-0xc],edx
  4231c8:	xor    edx,edx
  4231ca:	push   ebp
  4231cb:	push   0x423220
  4231d0:	push   DWORD PTR fs:[edx]
  4231d3:	mov    DWORD PTR fs:[edx],esp
  4231d6:	push   0x7
  4231d8:	lea    edx,[ebp-0x7]
  4231db:	push   edx
  4231dc:	push   0x1004
  4231e1:	push   eax
  4231e2:	call   0x405b00
  4231e7:	lea    eax,[ebp-0xc]
  4231ea:	lea    edx,[ebp-0x7]
  4231ed:	mov    ecx,0x7
  4231f2:	call   0x403f1c
  4231f7:	mov    eax,DWORD PTR [ebp-0xc]
  4231fa:	push   eax
  4231fb:	call   0x405ac0
  423200:	mov    edx,eax
  423202:	pop    eax
  423203:	call   0x41f1fc
  423208:	mov    ebx,eax
  42320a:	xor    eax,eax
  42320c:	pop    edx
  42320d:	pop    ecx
  42320e:	pop    ecx
  42320f:	mov    DWORD PTR fs:[eax],edx
  423212:	push   0x423227
  423217:	lea    eax,[ebp-0xc]
  42321a:	call   0x403cac
  42321f:	ret    
  423220:	jmp    0x4036ac
  423225:	jmp    0x423217
  423227:	mov    eax,ebx
  423229:	pop    ebx
  42322a:	mov    esp,ebp
  42322c:	pop    ebp
  42322d:	ret    
  42322e:	mov    eax,eax
  423230:	push   ebp
  423231:	mov    ebp,esp
  423233:	push   ecx
  423234:	push   ebx
  423235:	push   esi
  423236:	push   edi
  423237:	mov    edi,DWORD PTR [ebp+0x8]
  42323a:	add    edi,0xffffffec
  42323d:	push   edi
  42323e:	mov    eax,ds:0x42f740
  423243:	call   0x4231bc
  423248:	push   eax
  423249:	call   0x405ac8
  42324e:	xor    esi,esi
  423250:	jmp    0x42327b
  423252:	mov    al,BYTE PTR [edi+esi*1+0x6]
  423256:	mov    bl,BYTE PTR [edi+esi*1+0x7]
  42325a:	sub    bl,al
  42325c:	jb     0x423278
  42325e:	inc    ebx
  42325f:	mov    BYTE PTR [ebp-0x1],al
  423262:	mov    al,BYTE PTR [ebp-0x1]
  423265:	and    eax,0xff
  42326a:	bts    DWORD PTR ds:0x42e104,eax
  423271:	inc    BYTE PTR [ebp-0x1]
  423274:	dec    bl
  423276:	jne    0x423262
  423278:	add    esi,0x2
  42327b:	cmp    esi,0xc
  42327e:	jge    0x42328a
  423280:	mov    al,BYTE PTR [edi+esi*1+0x6]
  423284:	or     al,BYTE PTR [edi+esi*1+0x7]
  423288:	jne    0x423252
  42328a:	pop    edi
  42328b:	pop    esi
  42328c:	pop    ebx
  42328d:	pop    ecx
  42328e:	pop    ebp
  42328f:	ret    
  423290:	mov    eax,ds:0x42f744
  423295:	cmp    eax,0x1f
  423298:	ja     0x4232a1
  42329a:	bt     DWORD PTR ds:0x42e2fc,eax
  4232a1:	setb   al
  4232a4:	ret    
  4232a5:	lea    eax,[eax+0x0]
  4232a8:	push   ebp
  4232a9:	mov    ebp,esp
  4232ab:	add    esp,0xfffffe64
  4232b1:	push   ebx
  4232b2:	push   esi
  4232b3:	push   edi
  4232b4:	mov    DWORD PTR ds:0x42f740,0x409
  4232be:	mov    DWORD PTR ds:0x42f744,0x9
  4232c8:	mov    DWORD PTR ds:0x42f748,0x1
  4232d2:	call   0x405b30
  4232d7:	test   eax,eax
  4232d9:	je     0x4232e0
  4232db:	mov    ds:0x42f740,eax
  4232e0:	test   ax,ax
  4232e3:	je     0x423300
  4232e5:	mov    edx,eax
  4232e7:	and    dx,0x3ff
  4232ec:	movzx  edx,dx
  4232ef:	mov    DWORD PTR ds:0x42f744,edx
  4232f5:	movzx  eax,ax
  4232f8:	shr    eax,0xa
  4232fb:	mov    ds:0x42f748,eax
  423300:	mov    esi,0x423400
  423305:	mov    edi,0x42e104
  42330a:	mov    ecx,0x8
  42330f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423311:	cmp    DWORD PTR ds:0x42e0bc,0x2
  423318:	jne    0x4233cb
  42331e:	call   0x423290
  423323:	test   al,al
  423325:	je     0x42333a
  423327:	mov    BYTE PTR ds:0x42f74d,0x0
  42332e:	mov    BYTE PTR ds:0x42f74c,0x0
  423335:	jmp    0x4233f9
  42333a:	push   ebp
  42333b:	call   0x423230
  423340:	pop    ecx
  423341:	mov    eax,0x42e104
  423346:	mov    edx,0x423400
  42334b:	mov    cl,0x20
  42334d:	call   0x402d28
  423352:	setne  bl
  423355:	mov    BYTE PTR ds:0x42f74c,bl
  42335b:	test   bl,bl
  42335d:	je     0x42336b
  42335f:	mov    BYTE PTR ds:0x42f74d,0x0
  423366:	jmp    0x4233f9
  42336b:	mov    eax,0x80
  423370:	lea    edx,[ebp-0x98]
  423376:	mov    BYTE PTR [edx],al
  423378:	inc    eax
  423379:	inc    edx
  42337a:	cmp    eax,0x100
  42337f:	jne    0x423376
  423381:	lea    eax,[ebp-0x98]
  423387:	mov    DWORD PTR [ebp-0x18],eax
  42338a:	lea    eax,[ebp-0x19a]
  423390:	push   eax
  423391:	push   0x80
  423396:	mov    eax,DWORD PTR [ebp-0x18]
  423399:	push   eax
  42339a:	push   0x2
  42339c:	mov    eax,ds:0x42f740
  4233a1:	push   eax
  4233a2:	call   0x405b28
  4233a7:	mov    eax,0x80
  4233ac:	lea    edx,[ebp-0x19a]
  4233b2:	cmp    WORD PTR [edx],0x2
  4233b6:	sete   cl
  4233b9:	mov    BYTE PTR ds:0x42f74d,cl
  4233bf:	test   cl,cl
  4233c1:	jne    0x4233f9
  4233c3:	add    edx,0x2
  4233c6:	dec    eax
  4233c7:	jne    0x4233b2
  4233c9:	jmp    0x4233f9
  4233cb:	push   0x4a
  4233cd:	call   0x405ba0
  4233d2:	test   eax,eax
  4233d4:	setne  al
  4233d7:	mov    ds:0x42f74d,al
  4233dc:	push   0x2a
  4233de:	call   0x405ba0
  4233e3:	test   eax,eax
  4233e5:	setne  bl
  4233e8:	mov    BYTE PTR ds:0x42f74c,bl
  4233ee:	test   bl,bl
  4233f0:	je     0x4233f9
  4233f2:	push   ebp
  4233f3:	call   0x423230
  4233f8:	pop    ecx
  4233f9:	pop    edi
  4233fa:	pop    esi
  4233fb:	pop    ebx
  4233fc:	mov    esp,ebp
  4233fe:	pop    ebp
  4233ff:	ret    
	...
  423420:	push   ebp
  423421:	mov    ebp,esp
  423423:	mov    ecx,0x8
  423428:	push   0x0
  42342a:	push   0x0
  42342c:	dec    ecx
  42342d:	jne    0x423428
  42342f:	push   ebx
  423430:	xor    eax,eax
  423432:	push   ebp
  423433:	push   0x4236eb
  423438:	push   DWORD PTR fs:[eax]
  42343b:	mov    DWORD PTR fs:[eax],esp
  42343e:	call   0x4232a8
  423443:	call   0x421da4
  423448:	cmp    BYTE PTR ds:0x42f74c,0x0
  42344f:	je     0x423456
  423451:	call   0x421f7c
  423456:	call   0x405b30
  42345b:	mov    ebx,eax
  42345d:	lea    eax,[ebp-0x10]
  423460:	push   eax
  423461:	xor    ecx,ecx
  423463:	mov    edx,0x14
  423468:	mov    eax,ebx
  42346a:	call   0x421cf4
  42346f:	mov    edx,DWORD PTR [ebp-0x10]
  423472:	mov    eax,0x42f680
  423477:	call   0x403d00
  42347c:	lea    eax,[ebp-0x14]
  42347f:	push   eax
  423480:	mov    ecx,0x423700
  423485:	mov    edx,0x1b
  42348a:	mov    eax,ebx
  42348c:	call   0x421cf4
  423491:	mov    eax,DWORD PTR [ebp-0x14]
  423494:	xor    edx,edx
  423496:	call   0x41f1fc
  42349b:	mov    ds:0x42f684,al
  4234a0:	lea    eax,[ebp-0x18]
  4234a3:	push   eax
  4234a4:	mov    ecx,0x423700
  4234a9:	mov    edx,0x1c
  4234ae:	mov    eax,ebx
  4234b0:	call   0x421cf4
  4234b5:	mov    eax,DWORD PTR [ebp-0x18]
  4234b8:	xor    edx,edx
  4234ba:	call   0x41f1fc
  4234bf:	mov    ds:0x42f685,al
  4234c4:	mov    cl,0x2c
  4234c6:	mov    edx,0xf
  4234cb:	mov    eax,ebx
  4234cd:	call   0x421d40
  4234d2:	mov    ds:0x42f686,al
  4234d7:	mov    cl,0x2e
  4234d9:	mov    edx,0xe
  4234de:	mov    eax,ebx
  4234e0:	call   0x421d40
  4234e5:	mov    ds:0x42f687,al
  4234ea:	lea    eax,[ebp-0x1c]
  4234ed:	push   eax
  4234ee:	mov    ecx,0x423700
  4234f3:	mov    edx,0x19
  4234f8:	mov    eax,ebx
  4234fa:	call   0x421cf4
  4234ff:	mov    eax,DWORD PTR [ebp-0x1c]
  423502:	xor    edx,edx
  423504:	call   0x41f1fc
  423509:	mov    ds:0x42f688,al
  42350e:	mov    cl,0x2f
  423510:	mov    edx,0x1d
  423515:	mov    eax,ebx
  423517:	call   0x421d40
  42351c:	mov    ds:0x42f689,al
  423521:	lea    eax,[ebp-0x24]
  423524:	push   eax
  423525:	mov    ecx,0x42370c
  42352a:	mov    edx,0x1f
  42352f:	mov    eax,ebx
  423531:	call   0x421cf4
  423536:	mov    eax,DWORD PTR [ebp-0x24]
  423539:	lea    edx,[ebp-0x20]
  42353c:	call   0x42202c
  423541:	mov    edx,DWORD PTR [ebp-0x20]
  423544:	mov    eax,0x42f68c
  423549:	call   0x403d00
  42354e:	lea    eax,[ebp-0x2c]
  423551:	push   eax
  423552:	mov    ecx,0x42371c
  423557:	mov    edx,0x20
  42355c:	mov    eax,ebx
  42355e:	call   0x421cf4
  423563:	mov    eax,DWORD PTR [ebp-0x2c]
  423566:	lea    edx,[ebp-0x28]
  423569:	call   0x42202c
  42356e:	mov    edx,DWORD PTR [ebp-0x28]
  423571:	mov    eax,0x42f690
  423576:	call   0x403d00
  42357b:	mov    cl,0x3a
  42357d:	mov    edx,0x1e
  423582:	mov    eax,ebx
  423584:	call   0x421d40
  423589:	mov    ds:0x42f694,al
  42358e:	lea    eax,[ebp-0x30]
  423591:	push   eax
  423592:	mov    ecx,0x423734
  423597:	mov    edx,0x28
  42359c:	mov    eax,ebx
  42359e:	call   0x421cf4
  4235a3:	mov    edx,DWORD PTR [ebp-0x30]
  4235a6:	mov    eax,0x42f698
  4235ab:	call   0x403d00
  4235b0:	lea    eax,[ebp-0x34]
  4235b3:	push   eax
  4235b4:	mov    ecx,0x423740
  4235b9:	mov    edx,0x29
  4235be:	mov    eax,ebx
  4235c0:	call   0x421cf4
  4235c5:	mov    edx,DWORD PTR [ebp-0x34]
  4235c8:	mov    eax,0x42f69c
  4235cd:	call   0x403d00
  4235d2:	lea    eax,[ebp-0x8]
  4235d5:	call   0x403cac
  4235da:	lea    eax,[ebp-0xc]
  4235dd:	call   0x403cac
  4235e2:	lea    eax,[ebp-0x38]
  4235e5:	push   eax
  4235e6:	mov    ecx,0x423700
  4235eb:	mov    edx,0x25
  4235f0:	mov    eax,ebx
  4235f2:	call   0x421cf4
  4235f7:	mov    eax,DWORD PTR [ebp-0x38]
  4235fa:	xor    edx,edx
  4235fc:	call   0x41f1fc
  423601:	test   eax,eax
  423603:	jne    0x423614
  423605:	lea    eax,[ebp-0x4]
  423608:	mov    edx,0x42374c
  42360d:	call   0x403d44
  423612:	jmp    0x423621
  423614:	lea    eax,[ebp-0x4]
  423617:	mov    edx,0x423758
  42361c:	call   0x403d44
  423621:	lea    eax,[ebp-0x3c]
  423624:	push   eax
  423625:	mov    ecx,0x423700
  42362a:	mov    edx,0x23
  42362f:	mov    eax,ebx
  423631:	call   0x421cf4
  423636:	mov    eax,DWORD PTR [ebp-0x3c]
  423639:	xor    edx,edx
  42363b:	call   0x41f1fc
  423640:	test   eax,eax
  423642:	jne    0x423683
  423644:	lea    eax,[ebp-0x40]
  423647:	push   eax
  423648:	mov    ecx,0x423700
  42364d:	mov    edx,0x1005
  423652:	mov    eax,ebx
  423654:	call   0x421cf4
  423659:	mov    eax,DWORD PTR [ebp-0x40]
  42365c:	xor    edx,edx
  42365e:	call   0x41f1fc
  423663:	test   eax,eax
  423665:	jne    0x423676
  423667:	lea    eax,[ebp-0xc]
  42366a:	mov    edx,0x423764
  42366f:	call   0x403d44
  423674:	jmp    0x423683
  423676:	lea    eax,[ebp-0x8]
  423679:	mov    edx,0x423774
  42367e:	call   0x403d44
  423683:	push   DWORD PTR [ebp-0x8]
  423686:	push   DWORD PTR [ebp-0x4]
  423689:	push   0x423784
  42368e:	push   DWORD PTR [ebp-0xc]
  423691:	mov    eax,0x42f6a0
  423696:	mov    edx,0x4
  42369b:	call   0x404008
  4236a0:	push   DWORD PTR [ebp-0x8]
  4236a3:	push   DWORD PTR [ebp-0x4]
  4236a6:	push   0x423790
  4236ab:	push   DWORD PTR [ebp-0xc]
  4236ae:	mov    eax,0x42f6a4
  4236b3:	mov    edx,0x4
  4236b8:	call   0x404008
  4236bd:	mov    cl,0x2c
  4236bf:	mov    edx,0xc
  4236c4:	mov    eax,ebx
  4236c6:	call   0x421d40
  4236cb:	mov    ds:0x42f74e,al
  4236d0:	xor    eax,eax
  4236d2:	pop    edx
  4236d3:	pop    ecx
  4236d4:	pop    ecx
  4236d5:	mov    DWORD PTR fs:[eax],edx
  4236d8:	push   0x4236f2
  4236dd:	lea    eax,[ebp-0x40]
  4236e0:	mov    edx,0x10
  4236e5:	call   0x403cd0
  4236ea:	ret    
  4236eb:	jmp    0x4036ac
  4236f0:	jmp    0x4236dd
  4236f2:	pop    ebx
  4236f3:	mov    esp,ebp
  4236f5:	pop    ebp
  4236f6:	ret    
  4236f7:	add    bh,bh
  4236f9:	(bad)  
  4236fa:	(bad)  
  4236fb:	inc    DWORD PTR [ecx]
  4236fd:	add    BYTE PTR [eax],al
  4236ff:	add    BYTE PTR [eax],dh
  423701:	add    BYTE PTR [eax],al
  423703:	add    bh,bh
  423705:	(bad)  
  423706:	(bad)  
  423707:	inc    DWORD PTR [esi]
  423709:	add    BYTE PTR [eax],al
  42370b:	add    BYTE PTR [ebp+0x2f],ch
  42370e:	fs das 
  423710:	jns    0x42378b
  423712:	add    BYTE PTR [eax],al
  423714:	(bad)  
  423715:	(bad)  
  423716:	(bad)  
  423717:	dec    DWORD PTR [eax+eax*1]
  42371a:	add    BYTE PTR [eax],al
  42371c:	ins    DWORD PTR es:[edi],dx
  42371d:	ins    DWORD PTR es:[edi],dx
  42371e:	ins    DWORD PTR es:[edi],dx
  42371f:	ins    DWORD PTR es:[edi],dx
  423720:	and    BYTE PTR [esp+ebp*1+0x20],ah
  423724:	jns    0x42379f
  423726:	jns    0x4237a1
  423728:	add    BYTE PTR [eax],al
  42372a:	add    BYTE PTR [eax],al
  42372c:	(bad)  
  42372d:	(bad)  
  42372e:	(bad)  
  42372f:	inc    DWORD PTR [edx]
  423731:	add    BYTE PTR [eax],al
  423733:	add    BYTE PTR [ecx+0x6d],ah
  423736:	add    BYTE PTR [eax],al
  423738:	(bad)  
  423739:	(bad)  
  42373a:	(bad)  
  42373b:	inc    DWORD PTR [edx]
  42373d:	add    BYTE PTR [eax],al
  42373f:	add    BYTE PTR [eax+0x6d],dh
  423742:	add    BYTE PTR [eax],al
  423744:	(bad)  
  423745:	(bad)  
  423746:	(bad)  
  423747:	inc    DWORD PTR [ecx]
  423749:	add    BYTE PTR [eax],al
  42374b:	add    BYTE PTR [eax+0x0],ch
  42374e:	add    BYTE PTR [eax],al
  423750:	(bad)  
  423751:	(bad)  
  423752:	(bad)  
  423753:	inc    DWORD PTR [edx]
  423755:	add    BYTE PTR [eax],al
  423757:	add    BYTE PTR [eax+0x68],ch
  42375a:	add    BYTE PTR [eax],al
  42375c:	(bad)  
  42375d:	(bad)  
  42375e:	(bad)  
  42375f:	inc    DWORD PTR ds:0x20000000
  423765:	inc    ecx
  423766:	dec    ebp
  423767:	push   eax
  423768:	dec    ebp
  423769:	add    BYTE PTR [eax],al
  42376b:	add    bh,bh
  42376d:	(bad)  
  42376e:	(bad)  
  42376f:	inc    DWORD PTR ds:0x41000000
  423775:	dec    ebp
  423776:	push   eax
  423777:	dec    ebp
  423778:	and    BYTE PTR [eax],al
  42377a:	add    BYTE PTR [eax],al
  42377c:	(bad)  
  42377d:	(bad)  
  42377e:	(bad)  
  42377f:	inc    DWORD PTR [ebx]
  423781:	add    BYTE PTR [eax],al
  423783:	add    BYTE PTR [edx],bh
  423785:	ins    DWORD PTR es:[edi],dx
  423786:	ins    DWORD PTR es:[edi],dx
  423787:	add    bh,bh
  423789:	(bad)  
  42378a:	(bad)  
  42378b:	inc    DWORD PTR [esi]
  42378d:	add    BYTE PTR [eax],al
  42378f:	add    BYTE PTR [edx],bh
  423791:	ins    DWORD PTR es:[edi],dx
  423792:	ins    DWORD PTR es:[edi],dx
  423793:	cmp    dh,BYTE PTR [ebx+0x73]
  423796:	add    BYTE PTR [eax],al
  423798:	jmp    DWORD PTR ds:0x4303b4
  42379e:	mov    eax,eax
  4237a0:	push   ebp
  4237a1:	mov    ebp,esp
  4237a3:	add    esp,0xffffffec
  4237a6:	push   ebx
  4237a7:	xor    eax,eax
  4237a9:	mov    DWORD PTR [ebp-0x14],eax
  4237ac:	xor    eax,eax
  4237ae:	push   ebp
  4237af:	push   0x423830
  4237b4:	push   DWORD PTR fs:[eax]
  4237b7:	mov    DWORD PTR fs:[eax],esp
  4237ba:	call   0x405af0
  4237bf:	mov    ebx,eax
  4237c1:	test   ebx,ebx
  4237c3:	je     0x4237fc
  4237c5:	mov    DWORD PTR [ebp-0x10],ebx
  4237c8:	mov    BYTE PTR [ebp-0xc],0x0
  4237cc:	lea    edx,[ebp-0x14]
  4237cf:	mov    eax,ebx
  4237d1:	call   0x421ca8
  4237d6:	mov    eax,DWORD PTR [ebp-0x14]
  4237d9:	mov    DWORD PTR [ebp-0x8],eax
  4237dc:	mov    BYTE PTR [ebp-0x4],0xb
  4237e0:	lea    eax,[ebp-0x10]
  4237e3:	push   eax
  4237e4:	push   0x1
  4237e6:	mov    ecx,DWORD PTR ds:0x42e4e4
  4237ec:	mov    dl,0x1
  4237ee:	mov    eax,ds:0x41ebc8
  4237f3:	call   0x4225b8
  4237f8:	mov    edx,eax
  4237fa:	jmp    0x423810
  4237fc:	mov    ecx,DWORD PTR ds:0x42e548
  423802:	mov    dl,0x1
  423804:	mov    eax,ds:0x41ebc8
  423809:	call   0x42257c
  42380e:	mov    edx,eax
  423810:	mov    DWORD PTR [edx+0xc],ebx
  423813:	mov    eax,edx
  423815:	call   0x4036e4
  42381a:	xor    eax,eax
  42381c:	pop    edx
  42381d:	pop    ecx
  42381e:	pop    ecx
  42381f:	mov    DWORD PTR fs:[eax],edx
  423822:	push   0x423837
  423827:	lea    eax,[ebp-0x14]
  42382a:	call   0x403cac
  42382f:	ret    
  423830:	jmp    0x4036ac
  423835:	jmp    0x423827
  423837:	pop    ebx
  423838:	mov    esp,ebp
  42383a:	pop    ebp
  42383b:	ret    
  42383c:	push   ebx
  42383d:	mov    ebx,eax
  42383f:	test   ebx,ebx
  423841:	jne    0x423848
  423843:	call   0x4237a0
  423848:	mov    eax,ebx
  42384a:	pop    ebx
  42384b:	ret    
  42384c:	push   ebx
  42384d:	push   esi
  42384e:	push   ecx
  42384f:	mov    ebx,0x42e300
  423854:	mov    esi,esp
  423856:	jmp    0x42386e
  423858:	mov    eax,DWORD PTR [ebx]
  42385a:	mov    DWORD PTR [esi],eax
  42385c:	mov    eax,DWORD PTR [esi]
  42385e:	mov    eax,DWORD PTR [eax]
  423860:	mov    DWORD PTR [ebx],eax
  423862:	mov    edx,0x8
  423867:	mov    eax,DWORD PTR [esi]
  423869:	call   0x4029c4
  42386e:	cmp    DWORD PTR [ebx],0x0
  423871:	jne    0x423858
  423873:	pop    edx
  423874:	pop    esi
  423875:	pop    ebx
  423876:	ret    
  423877:	nop
  423878:	push   ebx
  423879:	push   0x4238b0
  42387e:	call   0x405b10
  423883:	mov    ebx,eax
  423885:	test   ebx,ebx
  423887:	je     0x423899
  423889:	push   0x4238c0
  42388e:	push   ebx
  42388f:	call   0x405b18
  423894:	mov    ds:0x42e128,eax
  423899:	cmp    DWORD PTR ds:0x42e128,0x0
  4238a0:	jne    0x4238ac
  4238a2:	mov    eax,0x41f5c8
  4238a7:	mov    ds:0x42e128,eax
  4238ac:	pop    ebx
  4238ad:	ret    
  4238ae:	add    BYTE PTR [eax],al
  4238b0:	imul   esp,DWORD PTR [ebp+0x72],0x6e
  4238b4:	gs ins BYTE PTR es:[edi],dx
  4238b6:	xor    esi,DWORD PTR [edx]
  4238b8:	cs fs ins BYTE PTR es:[edi],dx
  4238bb:	ins    BYTE PTR es:[edi],dx
  4238bc:	add    BYTE PTR [eax],al
  4238be:	add    BYTE PTR [eax],al
  4238c0:	inc    edi
  4238c1:	gs je  0x423908
  4238c4:	imul   esi,DWORD PTR [ebx+0x6b],0x65657246
  4238cb:	push   ebx
  4238cc:	jo     0x42392f
  4238ce:	arpl   WORD PTR [ebp+0x45],sp
  4238d1:	js     0x423914
  4238d3:	add    BYTE PTR [edx+0x1],bh
  4238d9:	xchg   edx,eax
  4238da:	lock xadd DWORD PTR [edx],eax
  4238de:	inc    eax
  4238df:	ret    
  4238e0:	mov    edx,0xffffffff
  4238e5:	xchg   edx,eax
  4238e6:	lock xadd DWORD PTR [edx],eax
  4238ea:	dec    eax
  4238eb:	ret    
  4238ec:	xchg   DWORD PTR [eax],edx
  4238ee:	mov    eax,edx
  4238f0:	ret    
  4238f1:	lea    eax,[eax+0x0]
  4238f4:	xchg   edx,eax
  4238f5:	lock xadd DWORD PTR [edx],eax
  4238f9:	ret    
  4238fa:	mov    eax,eax
  4238fc:	push   ebx
  4238fd:	push   esi
  4238fe:	push   edi
  4238ff:	push   ebp
  423900:	add    esp,0xfffffff4
  423903:	call   0x403480
  423908:	mov    BYTE PTR [esp],dl
  42390b:	mov    edi,eax
  42390d:	lea    esi,[esp+0x4]
  423911:	lea    ebp,[esp+0x8]
  423915:	xor    ebx,ebx
  423917:	mov    eax,DWORD PTR [edi+ebx*4+0x4]
  42391b:	mov    DWORD PTR [esi],eax
  42391d:	xor    eax,eax
  42391f:	mov    DWORD PTR [edi+ebx*4+0x4],eax
  423923:	cmp    DWORD PTR [esi],0x0
  423926:	je     0x423940
  423928:	mov    eax,DWORD PTR [esi]
  42392a:	mov    DWORD PTR [ebp+0x0],eax
  42392d:	mov    eax,DWORD PTR [esi]
  42392f:	mov    eax,DWORD PTR [eax]
  423931:	mov    DWORD PTR [esi],eax
  423933:	mov    eax,DWORD PTR [ebp+0x0]
  423936:	call   0x4029c4
  42393b:	cmp    DWORD PTR [esi],0x0
  42393e:	jne    0x423928
  423940:	inc    ebx
  423941:	cmp    ebx,0x10
  423944:	jne    0x423917
  423946:	mov    dl,BYTE PTR [esp]
  423949:	and    dl,0xfc
  42394c:	mov    eax,edi
  42394e:	call   0x4031b4
  423953:	cmp    BYTE PTR [esp],0x0
  423957:	jle    0x423960
  423959:	mov    eax,edi
  42395b:	call   0x403468
  423960:	add    esp,0xc
  423963:	pop    ebp
  423964:	pop    edi
  423965:	pop    esi
  423966:	pop    ebx
  423967:	ret    
  423968:	push   ebp
  423969:	mov    ebp,esp
  42396b:	push   ecx
  42396c:	call   0x405ad0
  423971:	mov    WORD PTR [ebp-0x2],ax
  423975:	mov    al,BYTE PTR [ebp-0x2]
  423978:	xor    al,BYTE PTR [ebp-0x1]
  42397b:	and    al,0xf
  42397d:	pop    ecx
  42397e:	pop    ebp
  42397f:	ret    
  423980:	push   ebx
  423981:	push   esi
  423982:	push   edi
  423983:	push   ebp
  423984:	add    esp,0xfffffff8
  423987:	mov    DWORD PTR [esp],edx
  42398a:	mov    esi,eax
  42398c:	lea    edi,[esp+0x4]
  423990:	mov    eax,esi
  423992:	call   0x423968
  423997:	mov    ebx,eax
  423999:	call   0x405ad0
  42399e:	mov    ebp,eax
  4239a0:	xor    eax,eax
  4239a2:	mov    al,bl
  4239a4:	mov    eax,DWORD PTR [esi+eax*4+0x4]
  4239a8:	mov    DWORD PTR [edi],eax
  4239aa:	jmp    0x4239b2
  4239ac:	mov    eax,DWORD PTR [edi]
  4239ae:	mov    eax,DWORD PTR [eax]
  4239b0:	mov    DWORD PTR [edi],eax
  4239b2:	cmp    DWORD PTR [edi],0x0
  4239b5:	je     0x4239be
  4239b7:	mov    eax,DWORD PTR [edi]
  4239b9:	cmp    ebp,DWORD PTR [eax+0x4]
  4239bc:	jne    0x4239ac
  4239be:	cmp    DWORD PTR [edi],0x0
  4239c1:	jne    0x423a04
  4239c3:	mov    eax,esi
  4239c5:	call   0x423a24
  4239ca:	mov    DWORD PTR [edi],eax
  4239cc:	cmp    DWORD PTR [edi],0x0
  4239cf:	jne    0x423a04
  4239d1:	mov    eax,0x10
  4239d6:	call   0x41ee64
  4239db:	mov    DWORD PTR [edi],eax
  4239dd:	mov    eax,DWORD PTR [edi]
  4239df:	mov    DWORD PTR [eax+0x4],ebp
  4239e2:	mov    eax,DWORD PTR [edi]
  4239e4:	mov    DWORD PTR [eax+0x8],0x7fffffff
  4239eb:	mov    eax,DWORD PTR [edi]
  4239ed:	mov    edx,DWORD PTR [edi]
  4239ef:	mov    DWORD PTR [eax],edx
  4239f1:	xor    eax,eax
  4239f3:	mov    al,bl
  4239f5:	lea    eax,[esi+eax*4+0x4]
  4239f9:	mov    edx,DWORD PTR [edi]
  4239fb:	call   0x4238ec
  423a00:	mov    edx,DWORD PTR [edi]
  423a02:	mov    DWORD PTR [edx],eax
  423a04:	mov    eax,DWORD PTR [esp]
  423a07:	mov    edx,DWORD PTR [edi]
  423a09:	mov    DWORD PTR [eax],edx
  423a0b:	pop    ecx
  423a0c:	pop    edx
  423a0d:	pop    ebp
  423a0e:	pop    edi
  423a0f:	pop    esi
  423a10:	pop    ebx
  423a11:	ret    
  423a12:	mov    eax,eax
  423a14:	mov    eax,DWORD PTR [edx]
  423a16:	xor    ecx,ecx
  423a18:	mov    DWORD PTR [eax+0x4],ecx
  423a1b:	mov    eax,DWORD PTR [edx]
  423a1d:	xor    edx,edx
  423a1f:	mov    DWORD PTR [eax+0x8],edx
  423a22:	ret    
  423a23:	nop
  423a24:	push   ebx
  423a25:	push   esi
  423a26:	push   ecx
  423a27:	mov    ebx,eax
  423a29:	mov    esi,esp
  423a2b:	mov    eax,ebx
  423a2d:	call   0x423968
  423a32:	and    eax,0xff
  423a37:	mov    eax,DWORD PTR [ebx+eax*4+0x4]
  423a3b:	mov    DWORD PTR [esi],eax
  423a3d:	cmp    DWORD PTR [esi],0x0
  423a40:	je     0x423a72
  423a42:	mov    eax,DWORD PTR [esi]
  423a44:	add    eax,0x8
  423a47:	mov    edx,0x7fffffff
  423a4c:	call   0x4238ec
  423a51:	mov    ebx,eax
  423a53:	cmp    ebx,0x7fffffff
  423a59:	je     0x423a67
  423a5b:	call   0x405ad0
  423a60:	mov    edx,DWORD PTR [esi]
  423a62:	mov    DWORD PTR [edx+0x4],eax
  423a65:	jmp    0x423a72
  423a67:	mov    eax,DWORD PTR [esi]
  423a69:	mov    eax,DWORD PTR [eax]
  423a6b:	mov    DWORD PTR [esi],eax
  423a6d:	cmp    DWORD PTR [esi],0x0
  423a70:	jne    0x423a42
  423a72:	mov    eax,DWORD PTR [esi]
  423a74:	pop    edx
  423a75:	pop    esi
  423a76:	pop    ebx
  423a77:	ret    
  423a78:	push   ebx
  423a79:	push   esi
  423a7a:	test   dl,dl
  423a7c:	je     0x423a86
  423a7e:	add    esp,0xfffffff0
  423a81:	call   0x403418
  423a86:	mov    ebx,edx
  423a88:	mov    esi,eax
  423a8a:	xor    edx,edx
  423a8c:	mov    eax,esi
  423a8e:	call   0x403194
  423a93:	mov    DWORD PTR [esi+0xc],0xffff
  423a9a:	push   0x0
  423a9c:	push   0xffffffff
  423a9e:	push   0xffffffff
  423aa0:	push   0x0
  423aa2:	call   0x405a90
  423aa7:	mov    DWORD PTR [esi+0x10],eax
  423aaa:	push   0x0
  423aac:	push   0x0
  423aae:	push   0x0
  423ab0:	push   0x0
  423ab2:	call   0x405a90
  423ab7:	mov    DWORD PTR [esi+0x14],eax
  423aba:	mov    DWORD PTR [esi+0x18],0xffffffff
  423ac1:	mov    dl,0x1
  423ac3:	mov    eax,ds:0x41ecd4
  423ac8:	call   0x403194
  423acd:	mov    DWORD PTR [esi+0x20],eax
  423ad0:	mov    eax,esi
  423ad2:	test   bl,bl
  423ad4:	je     0x423ae5
  423ad6:	call   0x403470
  423adb:	pop    DWORD PTR fs:0x0
  423ae2:	add    esp,0xc
  423ae5:	mov    eax,esi
  423ae7:	pop    esi
  423ae8:	pop    ebx
  423ae9:	ret    
  423aea:	mov    eax,eax
  423aec:	push   ebx
  423aed:	push   esi
  423aee:	call   0x403480
  423af3:	mov    ebx,edx
  423af5:	mov    esi,eax
  423af7:	mov    eax,esi
  423af9:	call   0x423b78
  423afe:	mov    edx,ebx
  423b00:	and    dl,0xfc
  423b03:	mov    eax,esi
  423b05:	call   0x4031b4
  423b0a:	mov    eax,DWORD PTR [esi+0x10]
  423b0d:	push   eax
  423b0e:	call   0x405a80
  423b13:	mov    eax,DWORD PTR [esi+0x14]
  423b16:	push   eax
  423b17:	call   0x405a80
  423b1c:	mov    eax,DWORD PTR [esi+0x20]
  423b1f:	call   0x4031c4
  423b24:	test   bl,bl
  423b26:	jle    0x423b2f
  423b28:	mov    eax,esi
  423b2a:	call   0x403468
  423b2f:	pop    esi
  423b30:	pop    ebx
  423b31:	ret    
  423b32:	mov    eax,eax
  423b34:	mov    eax,DWORD PTR [eax+0x10]
  423b37:	push   eax
  423b38:	call   0x405b58
  423b3d:	ret    
  423b3e:	mov    eax,eax
  423b40:	mov    eax,DWORD PTR [eax+0x10]
  423b43:	push   eax
  423b44:	call   0x405b68
  423b49:	ret    
  423b4a:	mov    eax,eax
  423b4c:	mov    eax,DWORD PTR [eax+0x14]
  423b4f:	push   eax
  423b50:	call   0x405b68
  423b55:	ret    
  423b56:	mov    eax,eax
  423b58:	mov    edx,DWORD PTR [eax+0x18]
  423b5b:	push   edx
  423b5c:	mov    eax,DWORD PTR [eax+0x10]
  423b5f:	push   eax
  423b60:	call   0x405b80
  423b65:	ret    
  423b66:	mov    eax,eax
  423b68:	mov    edx,DWORD PTR [eax+0x18]
  423b6b:	push   edx
  423b6c:	mov    eax,DWORD PTR [eax+0x14]
  423b6f:	push   eax
  423b70:	call   0x405b80
  423b75:	ret    
  423b76:	mov    eax,eax
  423b78:	push   ebx
  423b79:	push   esi
  423b7a:	push   edi
  423b7b:	push   ebp
  423b7c:	add    esp,0xfffffff8
  423b7f:	mov    ebp,eax
  423b81:	mov    bl,0x1
  423b83:	call   0x405ad0
  423b88:	mov    edi,eax
  423b8a:	cmp    edi,DWORD PTR [ebp+0x24]
  423b8d:	je     0x423c17
  423b93:	mov    eax,ebp
  423b95:	call   0x423b34
  423b9a:	mov    eax,DWORD PTR [ebp+0x28]
  423b9d:	mov    DWORD PTR [esp+0x4],eax
  423ba1:	mov    edx,esp
  423ba3:	mov    eax,DWORD PTR [ebp+0x20]
  423ba6:	call   0x423980
  423bab:	mov    eax,DWORD PTR [esp]
  423bae:	cmp    DWORD PTR [eax+0xc],0x0
  423bb2:	seta   bl
  423bb5:	test   bl,bl
  423bb7:	je     0x423bdd
  423bb9:	lea    eax,[ebp+0xc]
  423bbc:	call   0x4238d4
  423bc1:	jmp    0x423bdd
  423bc3:	lea    eax,[ebp+0xc]
  423bc6:	mov    edx,0xffff
  423bcb:	call   0x4238f4
  423bd0:	mov    esi,eax
  423bd2:	test   esi,esi
  423bd4:	je     0x423bdd
  423bd6:	mov    eax,ebp
  423bd8:	call   0x423b68
  423bdd:	lea    eax,[ebp+0xc]
  423be0:	mov    edx,0xffff0001
  423be5:	call   0x4238f4
  423bea:	cmp    eax,0xffff
  423bef:	jne    0x423bc3
  423bf1:	mov    eax,ebp
  423bf3:	call   0x423b34
  423bf8:	test   bl,bl
  423bfa:	je     0x423c04
  423bfc:	lea    eax,[ebp+0xc]
  423bff:	call   0x4238e0
  423c04:	mov    DWORD PTR [ebp+0x24],edi
  423c07:	lea    eax,[ebp+0x28]
  423c0a:	call   0x4238d4
  423c0f:	dec    eax
  423c10:	cmp    eax,DWORD PTR [esp+0x4]
  423c14:	sete   bl
  423c17:	inc    DWORD PTR [ebp+0x1c]
  423c1a:	mov    eax,ebx
  423c1c:	pop    ecx
  423c1d:	pop    edx
  423c1e:	pop    ebp
  423c1f:	pop    edi
  423c20:	pop    esi
  423c21:	pop    ebx
  423c22:	ret    
  423c23:	nop
  423c24:	push   ebx
  423c25:	push   ecx
  423c26:	mov    ebx,eax
  423c28:	mov    edx,esp
  423c2a:	mov    eax,DWORD PTR [ebx+0x20]
  423c2d:	call   0x423980
  423c32:	dec    DWORD PTR [ebx+0x1c]
  423c35:	cmp    DWORD PTR [ebx+0x1c],0x0
  423c39:	jne    0x423c5b
  423c3b:	xor    eax,eax
  423c3d:	mov    DWORD PTR [ebx+0x24],eax
  423c40:	lea    eax,[ebx+0xc]
  423c43:	mov    edx,0xffff
  423c48:	call   0x4238f4
  423c4d:	mov    eax,ebx
  423c4f:	call   0x423b4c
  423c54:	mov    eax,ebx
  423c56:	call   0x423b40
  423c5b:	mov    eax,DWORD PTR [esp]
  423c5e:	cmp    DWORD PTR [eax+0xc],0x0
  423c62:	jne    0x423c6e
  423c64:	mov    edx,esp
  423c66:	mov    eax,DWORD PTR [ebx+0x20]
  423c69:	call   0x423a14
  423c6e:	pop    edx
  423c6f:	pop    ebx
  423c70:	ret    
  423c71:	lea    eax,[eax+0x0]
  423c74:	push   ebx
  423c75:	push   esi
  423c76:	push   edi
  423c77:	push   ecx
  423c78:	mov    edi,eax
  423c7a:	mov    edx,esp
  423c7c:	mov    eax,DWORD PTR [edi+0x20]
  423c7f:	call   0x423980
  423c84:	mov    eax,DWORD PTR [esp]
  423c87:	inc    DWORD PTR [eax+0xc]
  423c8a:	mov    eax,DWORD PTR [esp]
  423c8d:	cmp    DWORD PTR [eax+0xc],0x1
  423c91:	seta   bl
  423c94:	call   0x405ad0
  423c99:	cmp    eax,DWORD PTR [edi+0x24]
  423c9c:	je     0x423cde
  423c9e:	test   bl,bl
  423ca0:	jne    0x423cde
  423ca2:	mov    eax,edi
  423ca4:	call   0x423b58
  423ca9:	jmp    0x423cd2
  423cab:	lea    eax,[edi+0xc]
  423cae:	call   0x4238d4
  423cb3:	mov    esi,eax
  423cb5:	cmp    esi,0xffff
  423cbb:	jne    0x423cc4
  423cbd:	mov    eax,edi
  423cbf:	call   0x423b4c
  423cc4:	push   0x0
  423cc6:	call   0x423798
  423ccb:	mov    eax,edi
  423ccd:	call   0x423b58
  423cd2:	lea    eax,[edi+0xc]
  423cd5:	call   0x4238e0
  423cda:	test   eax,eax
  423cdc:	jle    0x423cab
  423cde:	pop    edx
  423cdf:	pop    edi
  423ce0:	pop    esi
  423ce1:	pop    ebx
  423ce2:	ret    
  423ce3:	nop
  423ce4:	push   ebx
  423ce5:	push   ecx
  423ce6:	mov    ebx,eax
  423ce8:	mov    edx,esp
  423cea:	mov    eax,DWORD PTR [ebx+0x20]
  423ced:	call   0x423980
  423cf2:	mov    eax,DWORD PTR [esp]
  423cf5:	dec    DWORD PTR [eax+0xc]
  423cf8:	mov    eax,DWORD PTR [esp]
  423cfb:	cmp    DWORD PTR [eax+0xc],0x0
  423cff:	jne    0x423d49
  423d01:	mov    edx,esp
  423d03:	mov    eax,DWORD PTR [ebx+0x20]
  423d06:	call   0x423a14
  423d0b:	call   0x405ad0
  423d10:	cmp    eax,DWORD PTR [ebx+0x24]
  423d13:	je     0x423d49
  423d15:	lea    eax,[ebx+0xc]
  423d18:	call   0x4238d4
  423d1d:	mov    ecx,eax
  423d1f:	cmp    ecx,0xffff
  423d25:	jne    0x423d30
  423d27:	mov    eax,ebx
  423d29:	call   0x423b4c
  423d2e:	jmp    0x423d49
  423d30:	test   ecx,ecx
  423d32:	jg     0x423d49
  423d34:	mov    eax,ecx
  423d36:	mov    ecx,0xffff
  423d3b:	cdq    
  423d3c:	idiv   ecx
  423d3e:	test   edx,edx
  423d40:	jne    0x423d49
  423d42:	mov    eax,ebx
  423d44:	call   0x423b4c
  423d49:	pop    edx
  423d4a:	pop    ebx
  423d4b:	ret    
  423d4c:	mov    edx,DWORD PTR [eax]
  423d4e:	xor    ecx,ecx
  423d50:	mov    DWORD PTR [eax],ecx
  423d52:	mov    eax,edx
  423d54:	call   0x4031c4
  423d59:	ret    
  423d5a:	mov    eax,eax
  423d5c:	sbb    eax,0xf8000000
  423d61:	loop   0x423da5
  423d63:	add    al,cl
  423d65:	in     al,0x42
  423d67:	add    al,dh
  423d69:	loop   0x423dad
  423d6b:	add    BYTE PTR [eax-0x1c],ch
  423d6e:	inc    edx
  423d6f:	add    al,ch
  423d71:	loop   0x423db5
  423d73:	add    BYTE PTR [ebx+eiz*8-0x1d1fffbe],bh
  423d7a:	inc    edx
  423d7b:	add    ah,ch
  423d7d:	in     al,0x42
  423d7f:	add    al,bl
  423d81:	loop   0x423dc5
  423d83:	add    BYTE PTR [eax],al
  423d85:	in     eax,0x42
  423d87:	add    al,dl
  423d89:	loop   0x423dcd
  423d8b:	add    BYTE PTR [eax],dl
  423d8d:	in     al,0x42
  423d8f:	add    al,cl
  423d91:	loop   0x423dd5
  423d93:	add    BYTE PTR [esp+eiz*8+0x42],dl
  423d97:	add    al,al
  423d99:	loop   0x423ddd
  423d9b:	add    BYTE PTR [eax-0x47ffbd1d],bl
  423da1:	loop   0x423de5
  423da3:	add    BYTE PTR [esp+eiz*8+0x42],dh
  423da7:	add    BYTE PTR [eax-0x73ffbd1e],dh
  423dad:	in     al,0x42
  423daf:	add    BYTE PTR [eax+0x380042e2],ch
  423db5:	in     al,0x42
  423db7:	add    BYTE PTR [eax+0x400042e2],ah
  423dbd:	in     al,0x42
  423dbf:	add    BYTE PTR [eax+0x300042e2],bl
  423dc5:	in     eax,0x42
  423dc7:	add    BYTE PTR [eax+0x3c0042e2],dl
  423dcd:	in     al,0x42
  423dcf:	add    BYTE PTR [eax+0x600042e2],cl
  423dd5:	in     eax,0x42
  423dd7:	add    BYTE PTR [eax-0x47ffbd1e],al
  423ddd:	in     al,0x42
  423ddf:	add    BYTE PTR [eax-0x1e],bh
  423de2:	inc    edx
  423de3:	add    BYTE PTR [esp+eiz*8-0x1d8fffbe],ah
  423dea:	inc    edx
  423deb:	add    BYTE PTR [eax-0x1b],ch
  423dee:	inc    edx
  423def:	add    BYTE PTR [eax-0x1e],ch
  423df2:	inc    edx
  423df3:	add    BYTE PTR [ebp+eiz*8+0x42],cl
  423df7:	add    BYTE PTR [eax-0x1e],ah
  423dfa:	inc    edx
  423dfb:	add    BYTE PTR [esp+eiz*8+0x42],cl
  423dff:	add    BYTE PTR [eax-0x1e],bl
  423e02:	inc    edx
  423e03:	add    BYTE PTR [eiz*8-0x1dafffbe],dh
  423e0a:	inc    edx
  423e0b:	add    BYTE PTR [eiz*8-0x1db7ffbe],bh
  423e12:	inc    edx
  423e13:	add    BYTE PTR [esp+eiz*8],al
  423e16:	inc    edx
  423e17:	add    BYTE PTR [eax-0x1e],al
  423e1a:	inc    edx
  423e1b:	add    al,ah
  423e1d:	jecxz  0x423e61
  423e1f:	add    BYTE PTR [eax],bh
  423e21:	loop   0x423e65
  423e23:	add    BYTE PTR [eax+0x300042e4],ah
  423e29:	loop   0x423e6d
  423e2b:	add    al,ch
  423e2d:	in     al,0x42
  423e2f:	add    BYTE PTR [eax],ch
  423e31:	loop   0x423e75
  423e33:	add    BYTE PTR [ebx+eiz*8-0x1ddfffbe],ah
  423e3a:	inc    edx
  423e3b:	add    BYTE PTR [eiz*8-0x1de7ffbe],ch
  423e42:	inc    edx
  423e43:	add    BYTE PTR [eax-0x1c],cl
  423e46:	inc    edx
  423e47:	add    BYTE PTR [eax],ch
  423e49:	add    BYTE PTR [eax],al
  423e4b:	add    BYTE PTR [eax],dl
  423e4d:	loop   0x423e91
  423e4f:	add    BYTE PTR [eax],ah
  423e51:	in     eax,0x42
  423e53:	add    BYTE PTR [eax],al
  423e55:	add    BYTE PTR [eax],al
  423e57:	add    BYTE PTR [edx+eiz*8],cl
  423e5a:	inc    edx
  423e5b:	add    ah,al
  423e5d:	jecxz  0x423ea1
  423e5f:	add    BYTE PTR [eax],al
  423e61:	add    BYTE PTR [eax],al
  423e63:	add    BYTE PTR [eax],cl
  423e65:	loop   0x423ea9
  423e67:	add    al,ah
  423e69:	in     al,0x42
  423e6b:	add    BYTE PTR [eax],al
  423e6d:	add    BYTE PTR [eax],al
  423e6f:	add    BYTE PTR [edx+eiz*8],al
  423e72:	inc    edx
  423e73:	add    BYTE PTR [eax+0x42e3],dh
  423e79:	add    BYTE PTR [eax],al
  423e7b:	add    BYTE PTR [eax],al
  423e7d:	loop   0x423ec1
  423e7f:	add    ah,ch
  423e81:	jecxz  0x423ec5
  423e83:	add    BYTE PTR [eax],al
  423e85:	add    BYTE PTR [eax],al
  423e87:	add    ah,bh
  423e89:	loope  0x423ecd
  423e8b:	add    ah,ah
  423e8d:	jecxz  0x423ed1
  423e8f:	add    BYTE PTR [eax],al
  423e91:	add    BYTE PTR [eax],al
  423e93:	add    al,bh
  423e95:	loope  0x423ed9
  423e97:	add    ah,cl
  423e99:	jecxz  0x423edd
  423e9b:	add    BYTE PTR [eax],al
  423e9d:	add    BYTE PTR [eax],al
  423e9f:	add    ah,dh
  423ea1:	loope  0x423ee5
  423ea3:	add    BYTE PTR [esp+eiz*8+0x42],al
  423ea7:	add    BYTE PTR [eax],al
  423ea9:	add    BYTE PTR [eax],al
  423eab:	add    al,dh
  423ead:	loope  0x423ef1
  423eaf:	add    BYTE PTR [esp+eiz*8+0x42],dh
  423eb6:	add    BYTE PTR [eax],al
  423eb8:	in     al,dx
  423eb9:	loope  0x423efd
  423ebb:	add    al,ch
  423ebd:	jecxz  0x423f01
  423ebf:	add    BYTE PTR [eax],al
  423ec1:	add    BYTE PTR [eax],al
  423ec3:	add    al,ch
  423ec5:	loope  0x423f09
  423ec7:	add    BYTE PTR [eax+0x42e4],bl
  423ecd:	add    BYTE PTR [eax],al
  423ecf:	add    ah,ah
  423ed1:	loope  0x423f15
  423ed3:	add    ah,bh
  423ed5:	in     al,0x42
  423ed7:	add    BYTE PTR [eax],al
  423ed9:	add    BYTE PTR [eax],al
  423edb:	add    al,ah
  423edd:	loope  0x423f21
  423edf:	add    ah,dh
  423ee1:	in     al,0x42
  423ee3:	add    BYTE PTR [eax],al
  423ee5:	add    BYTE PTR [eax],al
  423ee7:	add    ah,bl
  423ee9:	loope  0x423f2d
  423eeb:	add    al,al
  423eed:	in     al,0x42
  423eef:	add    BYTE PTR [eax],al
  423ef1:	add    BYTE PTR [eax],al
  423ef3:	add    al,bl
  423ef5:	loope  0x423f39
  423ef7:	add    BYTE PTR [esp+eiz*8],dh
  423efa:	inc    edx
  423efb:	add    BYTE PTR [eax],al
  423efd:	add    BYTE PTR [eax],al
  423eff:	add    ah,dl
  423f01:	loope  0x423f45
  423f03:	add    BYTE PTR [eax],ah
  423f05:	in     al,0x42
  423f07:	add    BYTE PTR [eax],al
  423f09:	add    BYTE PTR [eax],al
  423f0b:	add    al,dl
  423f0d:	loope  0x423f51
  423f0f:	add    BYTE PTR [ebx+eiz*8+0x42],ch
  423f16:	add    BYTE PTR [eax],al
  423f18:	int3   
  423f19:	loope  0x423f5d
  423f1b:	add    al,dh
  423f1d:	in     al,0x42
  423f1f:	add    BYTE PTR [eax],al
  423f21:	add    BYTE PTR [eax],al
  423f23:	add    al,cl
  423f25:	loope  0x423f69
  423f27:	add    BYTE PTR [esp+eiz*8+0x42],bh
  423f2b:	add    BYTE PTR [eax],al
  423f2d:	add    BYTE PTR [eax],al
  423f2f:	add    ah,al
  423f31:	loope  0x423f75
  423f33:	add    BYTE PTR [eax],bl
  423f35:	in     al,0x42
  423f37:	add    BYTE PTR [eax],al
  423f39:	add    BYTE PTR [eax],al
  423f3b:	add    al,al
  423f3d:	loope  0x423f81
  423f3f:	add    BYTE PTR [eax-0x1c],dh
  423f42:	inc    edx
  423f43:	add    BYTE PTR [eax],al
  423f45:	add    BYTE PTR [eax],al
  423f47:	add    BYTE PTR [ecx+eiz*8-0x1b53ffbe],bh
  423f4e:	inc    edx
  423f4f:	add    BYTE PTR [eax],al
  423f51:	add    BYTE PTR [eax],al
  423f53:	add    BYTE PTR [eax+0x780042e1],bh
  423f59:	in     al,0x42
  423f5b:	add    BYTE PTR [eax],al
  423f5d:	add    BYTE PTR [eax],al
  423f5f:	add    BYTE PTR [ecx+eiz*8-0x1bd7ffbe],dh
  423f66:	inc    edx
  423f67:	add    BYTE PTR [eax],al
  423f69:	add    BYTE PTR [eax],al
  423f6b:	add    BYTE PTR [eax-0x57ffbd1f],dh
  423f71:	jecxz  0x423fb5
  423f73:	add    BYTE PTR [eax],al
  423f75:	add    BYTE PTR [eax],al
  423f77:	add    BYTE PTR [ecx+eiz*8-0x1ba3ffbe],ch
  423f7e:	inc    edx
  423f7f:	add    BYTE PTR [eax],al
  423f81:	add    BYTE PTR [eax],al
  423f83:	add    BYTE PTR [eax+0x400042e1],ch
  423f89:	in     eax,0x42
  423f8b:	add    BYTE PTR [eax],al
  423f8d:	add    BYTE PTR [eax],al
  423f8f:	add    BYTE PTR [ecx+eiz*8-0x1ae3ffbe],ah
  423f96:	inc    edx
  423f97:	add    BYTE PTR [eax],al
  423f99:	add    BYTE PTR [eax],al
  423f9b:	add    BYTE PTR [eax-0x6bffbd1f],ah
  423fa1:	in     al,0x42
  423fa3:	add    BYTE PTR [eax],al
  423fa5:	add    BYTE PTR [eax],al
  423fa7:	add    BYTE PTR [ecx+eiz*8-0x1bffffbe],bl
  423fae:	inc    edx
  423faf:	add    BYTE PTR [eax],al
  423fb1:	add    BYTE PTR [eax],al
  423fb3:	add    BYTE PTR [eax-0x4bffbd1f],bl
  423fb9:	jecxz  0x423ffd
  423fbb:	add    BYTE PTR [eax],al
  423fbd:	add    BYTE PTR [eax],al
  423fbf:	add    BYTE PTR [ecx+eiz*8-0x1aebffbe],dl
  423fc6:	inc    edx
  423fc7:	add    BYTE PTR [eax],al
  423fc9:	add    BYTE PTR [eax],al
  423fcb:	add    BYTE PTR [eax+0x740042e1],dl
  423fd1:	in     eax,0x42
  423fd3:	add    BYTE PTR [eax],al
  423fd5:	add    BYTE PTR [eax],al
  423fd7:	add    BYTE PTR [ecx+eiz*8-0x1c2fffbe],cl
  423fde:	inc    edx
  423fdf:	add    BYTE PTR [eax],al
  423fe1:	add    BYTE PTR [eax],al
  423fe3:	add    BYTE PTR [eax-0x6bffbd1f],cl
  423fe9:	jecxz  0x42402d
  423feb:	add    BYTE PTR [eax],al
  423fed:	add    BYTE PTR [eax],al
  423fef:	add    BYTE PTR [ecx+eiz*8-0x1adbffbe],al
  423ff6:	inc    edx
  423ff7:	add    BYTE PTR [eax],al
  423ff9:	add    BYTE PTR [eax],al
  423ffb:	add    BYTE PTR [eax-0x6fffbd1f],al
  424001:	in     al,0x42
  424003:	add    BYTE PTR [eax],al
  424005:	add    BYTE PTR [eax],al
  424007:	add    BYTE PTR [ecx+eiz*8+0x42],bh
  42400b:	add    BYTE PTR [ebp+eiz*8+0x42],dl
  42400f:	add    BYTE PTR [eax],al
  424011:	add    BYTE PTR [eax],al
  424013:	add    BYTE PTR [eax-0x1f],bl
  424016:	inc    edx
  424017:	add    BYTE PTR [eax-0x1c],dl
  42401a:	inc    edx
  42401b:	add    BYTE PTR [eax],al
  42401d:	add    BYTE PTR [eax],al
  42401f:	add    BYTE PTR [ecx+eiz*8+0x42],dl
  424023:	add    BYTE PTR [eax],cl
  424025:	in     al,0x42
  424027:	add    BYTE PTR [eax],al
  424029:	add    BYTE PTR [eax],al
  42402b:	add    BYTE PTR [ebp-0x75],dl
  42402e:	in     al,dx
  42402f:	xor    eax,eax
  424031:	push   ebp
  424032:	push   0x4241a1
  424037:	push   DWORD PTR fs:[eax]
  42403a:	mov    DWORD PTR fs:[eax],esp
  42403d:	inc    DWORD PTR ds:0x42f790
  424043:	jne    0x424193
  424049:	mov    eax,0x42f79c
  42404e:	call   0x423d4c
  424053:	call   0x42384c
  424058:	call   0x422c08
  42405d:	mov    eax,0x42e24c
  424062:	mov    ecx,0x16
  424067:	mov    edx,DWORD PTR ds:0x4226d8
  42406d:	call   0x4045f4
  424072:	mov    eax,0x42e214
  424077:	mov    ecx,0x7
  42407c:	mov    edx,DWORD PTR ds:0x422658
  424082:	call   0x4045f4
  424087:	mov    eax,0x42e12c
  42408c:	mov    ecx,0x2
  424091:	mov    edx,DWORD PTR ds:0x401000
  424097:	call   0x4045f4
  42409c:	mov    eax,0x42e124
  4240a1:	call   0x403cac
  4240a6:	mov    eax,0x42f78c
  4240ab:	mov    edx,DWORD PTR ds:0x41eca4
  4240b1:	call   0x404b28
  4240b6:	mov    eax,0x42f788
  4240bb:	mov    edx,DWORD PTR ds:0x41ec80
  4240c1:	call   0x404b28
  4240c6:	mov    eax,0x42f750
  4240cb:	mov    ecx,0x7
  4240d0:	mov    edx,DWORD PTR ds:0x401000
  4240d6:	call   0x4045f4
  4240db:	mov    eax,0x42f724
  4240e0:	mov    ecx,0x7
  4240e5:	mov    edx,DWORD PTR ds:0x401000
  4240eb:	call   0x4045f4
  4240f0:	mov    eax,0x42f708
  4240f5:	mov    ecx,0x7
  4240fa:	mov    edx,DWORD PTR ds:0x401000
  424100:	call   0x4045f4
  424105:	mov    eax,0x42f6d8
  42410a:	mov    ecx,0xc
  42410f:	mov    edx,DWORD PTR ds:0x401000
  424115:	call   0x4045f4
  42411a:	mov    eax,0x42f6a8
  42411f:	mov    ecx,0xc
  424124:	mov    edx,DWORD PTR ds:0x401000
  42412a:	call   0x4045f4
  42412f:	mov    eax,0x42f6a4
  424134:	call   0x403cac
  424139:	mov    eax,0x42f6a0
  42413e:	call   0x403cac
  424143:	mov    eax,0x42f69c
  424148:	call   0x403cac
  42414d:	mov    eax,0x42f698
  424152:	call   0x403cac
  424157:	mov    eax,0x42f690
  42415c:	call   0x403cac
  424161:	mov    eax,0x42f68c
  424166:	call   0x403cac
  42416b:	mov    eax,0x42f680
  424170:	call   0x403cac
  424175:	mov    eax,0x42e0cc
  42417a:	call   0x403cac
  42417f:	mov    eax,0x42e0b8
  424184:	call   0x404318
  424189:	mov    eax,0x42e0b4
  42418e:	call   0x403cac
  424193:	xor    eax,eax
  424195:	pop    edx
  424196:	pop    ecx
  424197:	pop    ecx
  424198:	mov    DWORD PTR fs:[eax],edx
  42419b:	push   0x4241a8
  4241a0:	ret    
  4241a1:	jmp    0x4036ac
  4241a6:	jmp    0x4241a0
  4241a8:	pop    ebp
  4241a9:	ret    
  4241aa:	mov    eax,eax
  4241ac:	push   ebp
  4241ad:	mov    ebp,esp
  4241af:	xor    eax,eax
  4241b1:	push   ebp
  4241b2:	push   0x424214
  4241b7:	push   DWORD PTR fs:[eax]
  4241ba:	mov    DWORD PTR fs:[eax],esp
  4241bd:	sub    DWORD PTR ds:0x42f790,0x1
  4241c4:	jae    0x424206
  4241c6:	mov    eax,0x423d5c
  4241cb:	call   0x403a50
  4241d0:	mov    eax,0x423e48
  4241d5:	call   0x403a78
  4241da:	cmp    BYTE PTR ds:0x42f65d,0x0
  4241e1:	je     0x4241f2
  4241e3:	mov    eax,0x42e124
  4241e8:	mov    edx,0x424228
  4241ed:	call   0x403d00
  4241f2:	call   0x422b84
  4241f7:	call   0x422c88
  4241fc:	call   0x423878
  424201:	call   0x423420
  424206:	xor    eax,eax
  424208:	pop    edx
  424209:	pop    ecx
  42420a:	pop    ecx
  42420b:	mov    DWORD PTR fs:[eax],edx
  42420e:	push   0x42421b
  424213:	ret    
  424214:	jmp    0x4036ac
  424219:	jmp    0x424213
  42421b:	pop    ebp
  42421c:	ret    
  42421d:	add    BYTE PTR [eax],al
  42421f:	add    bh,bh
  424221:	(bad)  
  424222:	(bad)  
  424223:	inc    DWORD PTR [edx]
  424225:	add    BYTE PTR [eax],al
  424227:	add    BYTE PTR [eax],dh
  424229:	js     0x42422b
  42422b:	add    bh,bh
  42422d:	and    eax,0x4303d8
  424232:	mov    eax,eax
  424234:	jmp    DWORD PTR ds:0x4303d4
  42423a:	mov    eax,eax
  42423c:	jmp    DWORD PTR ds:0x4303d0
  424242:	mov    eax,eax
  424244:	jmp    DWORD PTR ds:0x4303cc
  42424a:	mov    eax,eax
  42424c:	push   ebp
  42424d:	mov    ebp,esp
  42424f:	cmp    DWORD PTR [ebp+0x10],0x400
  424256:	je     0x42425f
  424258:	mov    eax,0x80004001
  42425d:	jmp    0x424276
  42425f:	mov    ax,WORD PTR [ebp+0x18]
  424263:	push   eax
  424264:	mov    ax,WORD PTR [ebp+0x14]
  424268:	push   eax
  424269:	mov    eax,DWORD PTR [ebp+0xc]
  42426c:	push   eax
  42426d:	mov    eax,DWORD PTR [ebp+0x8]
  424270:	push   eax
  424271:	call   0x424244
  424276:	pop    ebp
  424277:	ret    0x14
  42427a:	mov    eax,eax
  42427c:	push   ebp
  42427d:	mov    ebp,esp
  42427f:	mov    eax,0x80004001
  424284:	pop    ebp
  424285:	ret    0x8
  424288:	push   ebp
  424289:	mov    ebp,esp
  42428b:	mov    eax,0x80004001
  424290:	pop    ebp
  424291:	ret    0xc
  424294:	push   ebp
  424295:	mov    ebp,esp
  424297:	mov    eax,0x80004001
  42429c:	pop    ebp
  42429d:	ret    0x10
  4242a0:	push   ebp
  4242a1:	mov    ebp,esp
  4242a3:	push   0x0
  4242a5:	push   ebx
  4242a6:	xor    eax,eax
  4242a8:	push   ebp
  4242a9:	push   0x4242fa
  4242ae:	push   DWORD PTR fs:[eax]
  4242b1:	mov    DWORD PTR fs:[eax],esp
  4242b4:	cmp    DWORD PTR [ebp+0xc],0x400
  4242bb:	je     0x4242c4
  4242bd:	mov    ebx,0x80004001
  4242c2:	jmp    0x4242e4
  4242c4:	lea    eax,[ebp-0x4]
  4242c7:	mov    edx,DWORD PTR [ebp+0x8]
  4242ca:	call   0x403f34
  4242cf:	mov    eax,DWORD PTR [ebp-0x4]
  4242d2:	mov    edx,DWORD PTR [ebp+0x14]
  4242d5:	call   0x41f214
  4242da:	and    eax,0x7f
  4242dd:	mov    ebx,DWORD PTR [eax*4+0x42e304]
  4242e4:	xor    eax,eax
  4242e6:	pop    edx
  4242e7:	pop    ecx
  4242e8:	pop    ecx
  4242e9:	mov    DWORD PTR fs:[eax],edx
  4242ec:	push   0x424301
  4242f1:	lea    eax,[ebp-0x4]
  4242f4:	call   0x403cac
  4242f9:	ret    
  4242fa:	jmp    0x4036ac
  4242ff:	jmp    0x4242f1
  424301:	mov    eax,ebx
  424303:	pop    ebx
  424304:	pop    ecx
  424305:	pop    ebp
  424306:	ret    0x10
  424309:	lea    eax,[eax+0x0]
  42430c:	push   ebp
  42430d:	mov    ebp,esp
  42430f:	push   0x0
  424311:	push   ebx
  424312:	xor    eax,eax
  424314:	push   ebp
  424315:	push   0x424366
  42431a:	push   DWORD PTR fs:[eax]
  42431d:	mov    DWORD PTR fs:[eax],esp
  424320:	cmp    DWORD PTR [ebp+0xc],0x400
  424327:	je     0x424330
  424329:	mov    ebx,0x80004001
  42432e:	jmp    0x424350
  424330:	lea    eax,[ebp-0x4]
  424333:	mov    edx,DWORD PTR [ebp+0x8]
  424336:	call   0x403f34
  42433b:	mov    eax,DWORD PTR [ebp-0x4]
  42433e:	mov    edx,DWORD PTR [ebp+0x14]
  424341:	call   0x4203cc
  424346:	and    eax,0x7f
  424349:	mov    ebx,DWORD PTR [eax*4+0x42e304]
  424350:	xor    eax,eax
  424352:	pop    edx
  424353:	pop    ecx
  424354:	pop    ecx
  424355:	mov    DWORD PTR fs:[eax],edx
  424358:	push   0x42436d
  42435d:	lea    eax,[ebp-0x4]
  424360:	call   0x403cac
  424365:	ret    
  424366:	jmp    0x4036ac
  42436b:	jmp    0x42435d
  42436d:	mov    eax,ebx
  42436f:	pop    ebx
  424370:	pop    ecx
  424371:	pop    ebp
  424372:	ret    0x10
  424375:	lea    eax,[eax+0x0]
  424378:	push   ebp
  424379:	mov    ebp,esp
  42437b:	push   0x0
  42437d:	push   ebx
  42437e:	xor    eax,eax
  424380:	push   ebp
  424381:	push   0x4243d2
  424386:	push   DWORD PTR fs:[eax]
  424389:	mov    DWORD PTR fs:[eax],esp
  42438c:	cmp    DWORD PTR [ebp+0xc],0x400
  424393:	je     0x42439c
  424395:	mov    ebx,0x80004001
  42439a:	jmp    0x4243bc
  42439c:	lea    eax,[ebp-0x4]
  42439f:	mov    edx,DWORD PTR [ebp+0x8]
  4243a2:	call   0x403f34
  4243a7:	mov    eax,DWORD PTR [ebp-0x4]
  4243aa:	mov    edx,DWORD PTR [ebp+0x14]
  4243ad:	call   0x4203a0
  4243b2:	and    eax,0x7f
  4243b5:	mov    ebx,DWORD PTR [eax*4+0x42e304]
  4243bc:	xor    eax,eax
  4243be:	pop    edx
  4243bf:	pop    ecx
  4243c0:	pop    ecx
  4243c1:	mov    DWORD PTR fs:[eax],edx
  4243c4:	push   0x4243d9
  4243c9:	lea    eax,[ebp-0x4]
  4243cc:	call   0x403cac
  4243d1:	ret    
  4243d2:	jmp    0x4036ac
  4243d7:	jmp    0x4243c9
  4243d9:	mov    eax,ebx
  4243db:	pop    ebx
  4243dc:	pop    ecx
  4243dd:	pop    ebp
  4243de:	ret    0x10
  4243e1:	lea    eax,[eax+0x0]
  4243e4:	push   ebp
  4243e5:	mov    ebp,esp
  4243e7:	push   0x0
  4243e9:	push   ebx
  4243ea:	xor    eax,eax
  4243ec:	push   ebp
  4243ed:	push   0x42443e
  4243f2:	push   DWORD PTR fs:[eax]
  4243f5:	mov    DWORD PTR fs:[eax],esp
  4243f8:	cmp    DWORD PTR [ebp+0xc],0x400
  4243ff:	je     0x424408
  424401:	mov    ebx,0x80004001
  424406:	jmp    0x424428
  424408:	lea    eax,[ebp-0x4]
  42440b:	mov    edx,DWORD PTR [ebp+0x8]
  42440e:	call   0x403f34
  424413:	mov    eax,DWORD PTR [ebp-0x4]
  424416:	mov    edx,DWORD PTR [ebp+0x14]
  424419:	call   0x421c1c
  42441e:	and    eax,0x7f
  424421:	mov    ebx,DWORD PTR [eax*4+0x42e304]
  424428:	xor    eax,eax
  42442a:	pop    edx
  42442b:	pop    ecx
  42442c:	pop    ecx
  42442d:	mov    DWORD PTR fs:[eax],edx
  424430:	push   0x424445
  424435:	lea    eax,[ebp-0x4]
  424438:	call   0x403cac
  42443d:	ret    
  42443e:	jmp    0x4036ac
  424443:	jmp    0x424435
  424445:	mov    eax,ebx
  424447:	pop    ebx
  424448:	pop    ecx
  424449:	pop    ebp
  42444a:	ret    0x10
  42444d:	lea    eax,[eax+0x0]
  424450:	push   ebp
  424451:	mov    ebp,esp
  424453:	push   0x0
  424455:	push   ebx
  424456:	xor    eax,eax
  424458:	push   ebp
  424459:	push   0x4244aa
  42445e:	push   DWORD PTR fs:[eax]
  424461:	mov    DWORD PTR fs:[eax],esp
  424464:	cmp    DWORD PTR [ebp+0xc],0x400
  42446b:	je     0x424474
  42446d:	mov    ebx,0x80004001
  424472:	jmp    0x424494
  424474:	lea    eax,[ebp-0x4]
  424477:	mov    edx,DWORD PTR [ebp+0x8]
  42447a:	call   0x403f34
  42447f:	mov    eax,DWORD PTR [ebp-0x4]
  424482:	mov    edx,DWORD PTR [ebp+0x14]
  424485:	call   0x4203f8
  42448a:	and    eax,0x7f
  42448d:	mov    ebx,DWORD PTR [eax*4+0x42e304]
  424494:	xor    eax,eax
  424496:	pop    edx
  424497:	pop    ecx
  424498:	pop    ecx
  424499:	mov    DWORD PTR fs:[eax],edx
  42449c:	push   0x4244b1
  4244a1:	lea    eax,[ebp-0x4]
  4244a4:	call   0x403cac
  4244a9:	ret    
  4244aa:	jmp    0x4036ac
  4244af:	jmp    0x4244a1
  4244b1:	mov    eax,ebx
  4244b3:	pop    ebx
  4244b4:	pop    ecx
  4244b5:	pop    ebp
  4244b6:	ret    0x10
  4244b9:	lea    eax,[eax+0x0]
  4244bc:	push   ebp
  4244bd:	mov    ebp,esp
  4244bf:	add    esp,0xfffffff8
  4244c2:	push   ebx
  4244c3:	xor    eax,eax
  4244c5:	mov    DWORD PTR [ebp-0x8],eax
  4244c8:	xor    eax,eax
  4244ca:	push   ebp
  4244cb:	push   0x424529
  4244d0:	push   DWORD PTR fs:[eax]
  4244d3:	mov    DWORD PTR fs:[eax],esp
  4244d6:	cmp    DWORD PTR [ebp+0xc],0x400
  4244dd:	je     0x4244e6
  4244df:	mov    ebx,0x80004001
  4244e4:	jmp    0x424513
  4244e6:	lea    eax,[ebp-0x8]
  4244e9:	mov    edx,DWORD PTR [ebp+0x8]
  4244ec:	call   0x403f34
  4244f1:	mov    eax,DWORD PTR [ebp-0x8]
  4244f4:	lea    edx,[ebp-0x1]
  4244f7:	call   0x41f300
  4244fc:	and    eax,0x7f
  4244ff:	mov    ebx,DWORD PTR [eax*4+0x42e304]
  424506:	cmp    BYTE PTR [ebp-0x1],0x1
  42450a:	cmc    
  42450b:	sbb    eax,eax
  42450d:	mov    edx,DWORD PTR [ebp+0x14]
  424510:	mov    WORD PTR [edx],ax
  424513:	xor    eax,eax
  424515:	pop    edx
  424516:	pop    ecx
  424517:	pop    ecx
  424518:	mov    DWORD PTR fs:[eax],edx
  42451b:	push   0x424530
  424520:	lea    eax,[ebp-0x8]
  424523:	call   0x403cac
  424528:	ret    
  424529:	jmp    0x4036ac
  42452e:	jmp    0x424520
  424530:	mov    eax,ebx
  424532:	pop    ebx
  424533:	pop    ecx
  424534:	pop    ecx
  424535:	pop    ebp
  424536:	ret    0x10
  424539:	lea    eax,[eax+0x0]
  42453c:	push   ebp
  42453d:	mov    ebp,esp
  42453f:	push   0x0
  424541:	push   ebx
  424542:	mov    eax,DWORD PTR [ebp+0x18]
  424545:	test   eax,eax
  424547:	je     0x42454d
  424549:	xor    edx,edx
  42454b:	mov    DWORD PTR [eax],edx
  42454d:	xor    eax,eax
  42454f:	push   ebp
  424550:	push   0x42459c
  424555:	push   DWORD PTR fs:[eax]
  424558:	mov    DWORD PTR fs:[eax],esp
  42455b:	cmp    DWORD PTR [ebp+0x10],0x400
  424562:	je     0x42456b
  424564:	mov    ebx,0x80004001
  424569:	jmp    0x424586
  42456b:	push   DWORD PTR [ebp+0xc]
  42456e:	push   DWORD PTR [ebp+0x8]
  424571:	lea    eax,[ebp-0x4]
  424574:	call   0x420354
  424579:	mov    edx,DWORD PTR [ebp-0x4]
  42457c:	mov    eax,DWORD PTR [ebp+0x18]
  42457f:	call   0x404464
  424584:	xor    ebx,ebx
  424586:	xor    eax,eax
  424588:	pop    edx
  424589:	pop    ecx
  42458a:	pop    ecx
  42458b:	mov    DWORD PTR fs:[eax],edx
  42458e:	push   0x4245a3
  424593:	lea    eax,[ebp-0x4]
  424596:	call   0x403cac
  42459b:	ret    
  42459c:	jmp    0x4036ac
  4245a1:	jmp    0x424593
  4245a3:	mov    eax,ebx
  4245a5:	pop    ebx
  4245a6:	pop    ecx
  4245a7:	pop    ebp
  4245a8:	ret    0x14
  4245ab:	nop
  4245ac:	push   ebp
  4245ad:	mov    ebp,esp
  4245af:	push   0x0
  4245b1:	push   ebx
  4245b2:	mov    eax,DWORD PTR [ebp+0x18]
  4245b5:	test   eax,eax
  4245b7:	je     0x4245bd
  4245b9:	xor    edx,edx
  4245bb:	mov    DWORD PTR [eax],edx
  4245bd:	xor    eax,eax
  4245bf:	push   ebp
  4245c0:	push   0x42460c
  4245c5:	push   DWORD PTR fs:[eax]
  4245c8:	mov    DWORD PTR fs:[eax],esp
  4245cb:	cmp    DWORD PTR [ebp+0x10],0x400
  4245d2:	je     0x4245db
  4245d4:	mov    ebx,0x80004001
  4245d9:	jmp    0x4245f6
  4245db:	push   DWORD PTR [ebp+0xc]
  4245de:	push   DWORD PTR [ebp+0x8]
  4245e1:	lea    eax,[ebp-0x4]
  4245e4:	call   0x4213dc
  4245e9:	mov    edx,DWORD PTR [ebp-0x4]
  4245ec:	mov    eax,DWORD PTR [ebp+0x18]
  4245ef:	call   0x404464
  4245f4:	xor    ebx,ebx
  4245f6:	xor    eax,eax
  4245f8:	pop    edx
  4245f9:	pop    ecx
  4245fa:	pop    ecx
  4245fb:	mov    DWORD PTR fs:[eax],edx
  4245fe:	push   0x424613
  424603:	lea    eax,[ebp-0x4]
  424606:	call   0x403cac
  42460b:	ret    
  42460c:	jmp    0x4036ac
  424611:	jmp    0x424603
  424613:	mov    eax,ebx
  424615:	pop    ebx
  424616:	pop    ecx
  424617:	pop    ebp
  424618:	ret    0x14
  42461b:	nop
  42461c:	push   ebp
  42461d:	mov    ebp,esp
  42461f:	push   0x0
  424621:	push   ebx
  424622:	mov    eax,DWORD PTR [ebp+0x14]
  424625:	test   eax,eax
  424627:	je     0x42462d
  424629:	xor    edx,edx
  42462b:	mov    DWORD PTR [eax],edx
  42462d:	xor    eax,eax
  42462f:	push   ebp
  424630:	push   0x424680
  424635:	push   DWORD PTR fs:[eax]
  424638:	mov    DWORD PTR fs:[eax],esp
  42463b:	cmp    DWORD PTR [ebp+0xc],0x400
  424642:	je     0x42464b
  424644:	mov    ebx,0x80004001
  424649:	jmp    0x42466a
  42464b:	cmp    WORD PTR [ebp+0x8],0x1
  424650:	sbb    eax,eax
  424652:	inc    eax
  424653:	lea    ecx,[ebp-0x4]
  424656:	xor    edx,edx
  424658:	call   0x41f39c
  42465d:	mov    edx,DWORD PTR [ebp-0x4]
  424660:	mov    eax,DWORD PTR [ebp+0x14]
  424663:	call   0x404464
  424668:	xor    ebx,ebx
  42466a:	xor    eax,eax
  42466c:	pop    edx
  42466d:	pop    ecx
  42466e:	pop    ecx
  42466f:	mov    DWORD PTR fs:[eax],edx
  424672:	push   0x424687
  424677:	lea    eax,[ebp-0x4]
  42467a:	call   0x403cac
  42467f:	ret    
  424680:	jmp    0x4036ac
  424685:	jmp    0x424677
  424687:	mov    eax,ebx
  424689:	pop    ebx
  42468a:	pop    ecx
  42468b:	pop    ebp
  42468c:	ret    0x10
  42468f:	nop
  424690:	jmp    DWORD PTR ds:0x4303c8
  424696:	mov    eax,eax
  424698:	jmp    DWORD PTR ds:0x4303c4
  42469e:	mov    eax,eax
  4246a0:	jmp    DWORD PTR ds:0x4303c0
  4246a6:	mov    eax,eax
  4246a8:	jmp    DWORD PTR ds:0x4303bc
  4246ae:	mov    eax,eax
  4246b0:	push   ebp
  4246b1:	mov    ebp,esp
  4246b3:	push   ecx
  4246b4:	push   ebx
  4246b5:	push   esi
  4246b6:	mov    ebx,edx
  4246b8:	mov    esi,eax
  4246ba:	mov    DWORD PTR [ebp-0x4],ebx
  4246bd:	mov    eax,DWORD PTR [ebp+0x8]
  4246c0:	cmp    DWORD PTR [eax-0x4],0x0
  4246c4:	je     0x4246df
  4246c6:	push   esi
  4246c7:	mov    eax,DWORD PTR [ebp+0x8]
  4246ca:	mov    eax,DWORD PTR [eax-0x4]
  4246cd:	push   eax
  4246ce:	call   0x405b18
  4246d3:	mov    DWORD PTR [ebp-0x4],eax
  4246d6:	cmp    DWORD PTR [ebp-0x4],0x0
  4246da:	jne    0x4246df
  4246dc:	mov    DWORD PTR [ebp-0x4],ebx
  4246df:	mov    eax,DWORD PTR [ebp-0x4]
  4246e2:	pop    esi
  4246e3:	pop    ebx
  4246e4:	pop    ecx
  4246e5:	pop    ebp
  4246e6:	ret    
  4246e7:	nop
  4246e8:	push   ebp
  4246e9:	mov    ebp,esp
  4246eb:	push   ecx
  4246ec:	push   0x4248e0
  4246f1:	call   0x405b10
  4246f6:	mov    DWORD PTR [ebp-0x4],eax
  4246f9:	push   ebp
  4246fa:	mov    edx,0x42424c
  4246ff:	mov    eax,0x4248f0
  424704:	call   0x4246b0
  424709:	pop    ecx
  42470a:	mov    ds:0x42f7a0,eax
  42470f:	push   ebp
  424710:	mov    edx,0x42427c
  424715:	mov    eax,0x424904
  42471a:	call   0x4246b0
  42471f:	pop    ecx
  424720:	mov    ds:0x42f7a4,eax
  424725:	push   ebp
  424726:	mov    edx,0x42427c
  42472b:	mov    eax,0x42490c
  424730:	call   0x4246b0
  424735:	pop    ecx
  424736:	mov    ds:0x42f7a8,eax
  42473b:	push   ebp
  42473c:	mov    edx,0x424288
  424741:	mov    eax,0x424914
  424746:	call   0x4246b0
  42474b:	pop    ecx
  42474c:	mov    ds:0x42f7ac,eax
  424751:	push   ebp
  424752:	mov    edx,0x424288
  424757:	mov    eax,0x42491c
  42475c:	call   0x4246b0
  424761:	pop    ecx
  424762:	mov    ds:0x42f7b0,eax
  424767:	push   ebp
  424768:	mov    edx,0x424288
  42476d:	mov    eax,0x424924
  424772:	call   0x4246b0
  424777:	pop    ecx
  424778:	mov    ds:0x42f7b4,eax
  42477d:	push   ebp
  42477e:	mov    edx,0x424288
  424783:	mov    eax,0x42492c
  424788:	call   0x4246b0
  42478d:	pop    ecx
  42478e:	mov    ds:0x42f7b8,eax
  424793:	push   ebp
  424794:	mov    edx,0x424288
  424799:	mov    eax,0x424934
  42479e:	call   0x4246b0
  4247a3:	pop    ecx
  4247a4:	mov    ds:0x42f7bc,eax
  4247a9:	push   ebp
  4247aa:	mov    edx,0x424288
  4247af:	mov    eax,0x42493c
  4247b4:	call   0x4246b0
  4247b9:	pop    ecx
  4247ba:	mov    ds:0x42f7c0,eax
  4247bf:	push   ebp
  4247c0:	mov    edx,0x424288
  4247c5:	mov    eax,0x424944
  4247ca:	call   0x4246b0
  4247cf:	pop    ecx
  4247d0:	mov    ds:0x42f7c4,eax
  4247d5:	push   ebp
  4247d6:	mov    edx,0x424288
  4247db:	mov    eax,0x42494c
  4247e0:	call   0x4246b0
  4247e5:	pop    ecx
  4247e6:	mov    ds:0x42f7c8,eax
  4247eb:	push   ebp
  4247ec:	mov    edx,0x424288
  4247f1:	mov    eax,0x424954
  4247f6:	call   0x4246b0
  4247fb:	pop    ecx
  4247fc:	mov    ds:0x42f7cc,eax
  424801:	push   ebp
  424802:	mov    edx,0x424294
  424807:	mov    eax,0x42495c
  42480c:	call   0x4246b0
  424811:	pop    ecx
  424812:	mov    ds:0x42f7d0,eax
  424817:	push   ebp
  424818:	mov    edx,0x4242a0
  42481d:	mov    eax,0x424964
  424822:	call   0x4246b0
  424827:	pop    ecx
  424828:	mov    ds:0x42f7d4,eax
  42482d:	push   ebp
  42482e:	mov    edx,0x42430c
  424833:	mov    eax,0x424974
  424838:	call   0x4246b0
  42483d:	pop    ecx
  42483e:	mov    ds:0x42f7d8,eax
  424843:	push   ebp
  424844:	mov    edx,0x424378
  424849:	mov    eax,0x424984
  42484e:	call   0x4246b0
  424853:	pop    ecx
  424854:	mov    ds:0x42f7dc,eax
  424859:	push   ebp
  42485a:	mov    edx,0x4243e4
  42485f:	mov    eax,0x424994
  424864:	call   0x4246b0
  424869:	pop    ecx
  42486a:	mov    ds:0x42f7e0,eax
  42486f:	push   ebp
  424870:	mov    edx,0x424450
  424875:	mov    eax,0x4249a4
  42487a:	call   0x4246b0
  42487f:	pop    ecx
  424880:	mov    ds:0x42f7e4,eax
  424885:	push   ebp
  424886:	mov    edx,0x4244bc
  42488b:	mov    eax,0x4249b4
  424890:	call   0x4246b0
  424895:	pop    ecx
  424896:	mov    ds:0x42f7e8,eax
  42489b:	push   ebp
  42489c:	mov    edx,0x42453c
  4248a1:	mov    eax,0x4249c4
  4248a6:	call   0x4246b0
  4248ab:	pop    ecx
  4248ac:	mov    ds:0x42f7ec,eax
  4248b1:	push   ebp
  4248b2:	mov    edx,0x4245ac
  4248b7:	mov    eax,0x4249d4
  4248bc:	call   0x4246b0
  4248c1:	pop    ecx
  4248c2:	mov    ds:0x42f7f0,eax
  4248c7:	push   ebp
  4248c8:	mov    edx,0x42461c
  4248cd:	mov    eax,0x4249e4
  4248d2:	call   0x4246b0
  4248d7:	pop    ecx
  4248d8:	mov    ds:0x42f7f4,eax
  4248dd:	pop    ecx
  4248de:	pop    ebp
  4248df:	ret    
  4248e0:	outs   dx,DWORD PTR ds:[esi]
  4248e1:	ins    BYTE PTR es:[edi],dx
  4248e2:	gs popa 
  4248e4:	jne    0x42495a
  4248e6:	xor    esi,DWORD PTR [edx]
  4248e8:	cs fs ins BYTE PTR es:[edi],dx
  4248eb:	ins    BYTE PTR es:[edi],dx
  4248ec:	add    BYTE PTR [eax],al
  4248ee:	add    BYTE PTR [eax],al
  4248f0:	push   esi
  4248f1:	popa   
  4248f2:	jb     0x42495d
  4248f4:	popa   
  4248f5:	outs   dx,BYTE PTR ds:[esi]
  4248f6:	je     0x42493b
  4248f8:	push   0x65676e61
  4248fd:	push   esp
  4248fe:	jns    0x424970
  424900:	gs inc ebp
  424902:	js     0x424904
  424904:	push   esi
  424905:	popa   
  424906:	jb     0x424956
  424908:	add    BYTE PTR gs:[bx+si],al
  42490c:	push   esi
  42490d:	popa   
  42490e:	jb     0x42495e
  424910:	outs   dx,DWORD PTR ds:[esi]
  424911:	je     0x424913
  424913:	add    BYTE PTR [esi+0x61],dl
  424916:	jb     0x424959
  424918:	fs add BYTE PTR fs:[eax],al
  42491c:	push   esi
  42491d:	popa   
  42491e:	jb     0x424973
  424920:	jne    0x424984
  424922:	add    BYTE PTR [eax],al
  424924:	push   esi
  424925:	popa   
  424926:	jb     0x424975
  424928:	jne    0x424996
  42492a:	add    BYTE PTR [eax],al
  42492c:	push   esi
  42492d:	popa   
  42492e:	jb     0x424974
  424930:	imul   esi,DWORD PTR [esi+0x0],0x72615600
  424937:	dec    ecx
  424938:	imul   esi,DWORD PTR fs:[esi+0x0],0x4d726156
  424940:	outs   dx,DWORD PTR ds:[esi]
  424941:	add    BYTE PTR fs:[eax],al
  424944:	push   esi
  424945:	popa   
  424946:	jb     0x424989
  424948:	outs   dx,BYTE PTR ds:[esi]
  424949:	add    BYTE PTR fs:[eax],al
  42494c:	push   esi
  42494d:	popa   
  42494e:	jb     0x42499f
  424950:	jb     0x424952
  424952:	add    BYTE PTR [eax],al
  424954:	push   esi
  424955:	popa   
  424956:	jb     0x4249b0
  424958:	outs   dx,DWORD PTR ds:[esi]
  424959:	jb     0x42495b
  42495b:	add    BYTE PTR [esi+0x61],dl
  42495e:	jb     0x4249a3
  424960:	ins    DWORD PTR es:[edi],dx
  424961:	jo     0x424963
  424963:	add    BYTE PTR [esi+0x61],dl
  424966:	jb     0x4249b1
  424968:	xor    al,0x46
  42496a:	jb     0x4249db
  42496c:	ins    DWORD PTR es:[edi],dx
  42496d:	push   ebx
  42496e:	je     0x4249e2
  424970:	add    BYTE PTR [eax],al
  424972:	add    BYTE PTR [eax],al
  424974:	push   esi
  424975:	popa   
  424976:	jb     0x4249ca
  424978:	xor    al,0x46
  42497a:	jb     0x4249eb
  42497c:	ins    DWORD PTR es:[edi],dx
  42497d:	push   ebx
  42497e:	je     0x4249f2
  424980:	add    BYTE PTR [eax],al
  424982:	add    BYTE PTR [eax],al
  424984:	push   esi
  424985:	popa   
  424986:	jb     0x4249da
  424988:	cmp    BYTE PTR [esi+0x72],al
  42498b:	outs   dx,DWORD PTR ds:[esi]
  42498c:	ins    DWORD PTR es:[edi],dx
  42498d:	push   ebx
  42498e:	je     0x424a02
  424990:	add    BYTE PTR [eax],al
  424992:	add    BYTE PTR [eax],al
  424994:	push   esi
  424995:	popa   
  424996:	jb     0x4249dc
  424998:	popa   
  424999:	je     0x424a00
  42499b:	inc    esi
  42499c:	jb     0x424a0d
  42499e:	ins    DWORD PTR es:[edi],dx
  42499f:	push   ebx
  4249a0:	je     0x424a14
  4249a2:	add    BYTE PTR [eax],al
  4249a4:	push   esi
  4249a5:	popa   
  4249a6:	jb     0x4249eb
  4249a8:	jns    0x4249f0
  4249aa:	jb     0x424a1b
  4249ac:	ins    DWORD PTR es:[edi],dx
  4249ad:	push   ebx
  4249ae:	je     0x424a22
  4249b0:	add    BYTE PTR [eax],al
  4249b2:	add    BYTE PTR [eax],al
  4249b4:	push   esi
  4249b5:	popa   
  4249b6:	jb     0x4249fa
  4249b8:	outs   dx,DWORD PTR ds:[esi]
  4249b9:	outs   dx,DWORD PTR ds:[esi]
  4249ba:	ins    BYTE PTR es:[edi],dx
  4249bb:	inc    esi
  4249bc:	jb     0x424a2d
  4249be:	ins    DWORD PTR es:[edi],dx
  4249bf:	push   ebx
  4249c0:	je     0x424a34
  4249c2:	add    BYTE PTR [eax],al
  4249c4:	push   esi
  4249c5:	popa   
  4249c6:	jb     0x424a0a
  4249c8:	jae    0x424a3e
  4249ca:	jb     0x424a12
  4249cc:	jb     0x424a3d
  4249ce:	ins    DWORD PTR es:[edi],dx
  4249cf:	inc    ebx
  4249d0:	jns    0x4249d2
  4249d2:	add    BYTE PTR [eax],al
  4249d4:	push   esi
  4249d5:	popa   
  4249d6:	jb     0x424a1a
  4249d8:	jae    0x424a4e
  4249da:	jb     0x424a22
  4249dc:	jb     0x424a4d
  4249de:	ins    DWORD PTR es:[edi],dx
  4249df:	inc    esp
  4249e0:	popa   
  4249e1:	je     0x424a48
  4249e3:	add    BYTE PTR [esi+0x61],dl
  4249e6:	jb     0x424a2a
  4249e8:	jae    0x424a5e
  4249ea:	jb     0x424a32
  4249ec:	jb     0x424a5d
  4249ee:	ins    DWORD PTR es:[edi],dx
  4249ef:	inc    edx
  4249f0:	outs   dx,DWORD PTR ds:[esi]
  4249f1:	outs   dx,DWORD PTR ds:[esi]
  4249f2:	ins    BYTE PTR es:[edi],dx
  4249f3:	add    BYTE PTR [ebp-0x75],dl
  4249f6:	in     al,dx
  4249f7:	xor    eax,eax
  4249f9:	push   ebp
  4249fa:	push   0x424a19
  4249ff:	push   DWORD PTR fs:[eax]
  424a02:	mov    DWORD PTR fs:[eax],esp
  424a05:	inc    DWORD PTR ds:0x42f7f8
  424a0b:	xor    eax,eax
  424a0d:	pop    edx
  424a0e:	pop    ecx
  424a0f:	pop    ecx
  424a10:	mov    DWORD PTR fs:[eax],edx
  424a13:	push   0x424a20
  424a18:	ret    
  424a19:	jmp    0x4036ac
  424a1e:	jmp    0x424a18
  424a20:	pop    ebp
  424a21:	ret    
  424a22:	mov    eax,eax
  424a24:	sub    DWORD PTR ds:0x42f7f8,0x1
  424a2b:	jae    0x424a32
  424a2d:	call   0x4246e8
  424a32:	ret    
  424a33:	nop
  424a34:	int3   
  424a35:	add    DWORD PTR [esp+0x4],0xfffffff8
  424a3a:	mov    eax,DWORD PTR [esp+0x4]
  424a3e:	mov    eax,DWORD PTR [eax]
  424a40:	jmp    DWORD PTR [eax]
  424a42:	add    DWORD PTR [esp+0x4],0xfffffff8
  424a47:	jmp    0x427028
  424a4c:	add    DWORD PTR [esp+0x4],0xfffffff8
  424a51:	jmp    0x427034
  424a56:	xor    eax,0x4200424a
  424a5b:	dec    edx
  424a5c:	inc    edx
  424a5d:	add    BYTE PTR [edx+ecx*2+0x42],cl
  424a61:	add    BYTE PTR [ecx],al
	...
  424a6b:	add    BYTE PTR [eax],al
  424a6d:	add    al,al
  424a6f:	add    BYTE PTR [eax],al
  424a71:	add    BYTE PTR [eax],al
  424a73:	add    BYTE PTR [eax],al
  424a75:	inc    esi
  424a76:	push   esi
  424a77:	dec    edx
  424a78:	inc    edx
  424a79:	add    BYTE PTR [eax],cl
  424a7b:	add    BYTE PTR [eax],al
  424a7d:	add    BYTE PTR [eax],al
  424a7f:	add    BYTE PTR [eax],al
  424a81:	add    BYTE PTR [ebx+0x424ad0c0],cl
  424a87:	add    BYTE PTR [edx+0x4a],ah
  424a8a:	inc    edx
	...
  424aa3:	add    BYTE PTR [ebx+ecx*2],cl
  424aa6:	inc    edx
  424aa7:	add    BYTE PTR [eax+eax*1],cl
  424aaa:	add    BYTE PTR [eax],al
  424aac:	or     al,0x10
  424aae:	inc    eax
  424aaf:	add    ah,bl
  424ab1:	xor    eax,DWORD PTR [eax+0x0]
  424ab4:	call   0xec428aec
  424ab9:	xor    eax,DWORD PTR [eax+0x0]
  424abc:	lock xor eax,DWORD PTR [eax+0x0]
  424ac0:	in     al,0x33
  424ac2:	inc    eax
  424ac3:	add    BYTE PTR [ecx+esi*1+0x40],bl
  424ac7:	add    BYTE PTR [eax+0x31],bh
  424aca:	inc    eax
  424acb:	add    BYTE PTR [edi+ebp*2],bh
  424ace:	inc    edx
  424acf:	add    BYTE PTR [eax+0x70],al
  424ad2:	inc    edx
  424ad3:	add    ah,cl
  424ad5:	outs   dx,DWORD PTR ds:[esi]
  424ad6:	inc    edx
  424ad7:	add    BYTE PTR [eax],al
  424ad9:	jo     0x424b1d
  424adb:	add    al,ah
  424add:	outs   dx,DWORD PTR ds:[esi]
  424ade:	inc    edx
  424adf:	add    BYTE PTR [eax+esi*2],bl
  424ae2:	inc    edx
  424ae3:	add    al,cl
  424ae5:	outs   dx,DWORD PTR ds:[esi]
  424ae6:	inc    edx
  424ae7:	add    BYTE PTR [esi+ebp*2],bh
  424aea:	inc    edx
  424aeb:	add    BYTE PTR [esi+ebp*2+0x42],dh
  424aef:	add    BYTE PTR [eax],al
  424af1:	outs   dx,DWORD PTR ds:[esi]
  424af2:	inc    edx
  424af3:	add    BYTE PTR [ebx+ebp*1+0x40],ch
  424af7:	add    BYTE PTR [ebx+ebp*1+0x40],ch
  424afb:	add    BYTE PTR [eax],dh
  424afd:	outs   dx,BYTE PTR ds:[esi]
  424afe:	inc    edx
  424aff:	add    BYTE PTR [eax+esi*2],dl
  424b02:	inc    edx
  424b03:	add    al,cl
  424b05:	outs   dx,BYTE PTR ds:[esi]
  424b06:	inc    edx
  424b07:	add    BYTE PTR [esi+ebp*2+0x54120042],bh
  424b0e:	inc    ebx
  424b0f:	jne    0x424b84
  424b11:	je     0x424b82
  424b13:	ins    DWORD PTR es:[edi],dx
  424b14:	push   esi
  424b15:	popa   
  424b16:	jb     0x424b81
  424b18:	popa   
  424b19:	outs   dx,BYTE PTR ds:[esi]
  424b1a:	je     0x424b70
  424b1c:	jns    0x424b8e
  424b1e:	gs nop
  424b20:	and    al,0x4b
  424b22:	inc    edx
  424b23:	add    BYTE PTR [edi],al
  424b25:	adc    dl,BYTE PTR [ebx+eax*2+0x75]
  424b29:	jae    0x424b9f
  424b2b:	outs   dx,DWORD PTR ds:[esi]
  424b2c:	ins    DWORD PTR es:[edi],dx
  424b2d:	push   esi
  424b2e:	popa   
  424b2f:	jb     0x424b9a
  424b31:	popa   
  424b32:	outs   dx,BYTE PTR ds:[esi]
  424b33:	je     0x424b89
  424b35:	jns    0x424ba7
  424b37:	ror    BYTE PTR gs:[edx+0x42],1
  424b3b:	add    BYTE PTR [eax+0x10],ah
  424b3e:	inc    eax
  424b3f:	add    BYTE PTR [eax],al
  424b41:	add    BYTE PTR [eax],cl
  424b43:	push   esi
  424b44:	popa   
  424b45:	jb     0x424bb0
  424b47:	popa   
  424b48:	outs   dx,BYTE PTR ds:[esi]
  424b49:	je     0x424bbe
  424b4b:	add    BYTE PTR [eax],al
  424b4d:	lea    eax,[eax+0x0]
  424b50:	pushf  
  424b51:	dec    ebx
  424b52:	inc    edx
	...
  424b6f:	add    BYTE PTR [ebx+ecx*2+0xc0042],bl
  424b76:	add    BYTE PTR [eax],al
  424b78:	push   esp
  424b79:	jmp    0x40:0x33dc0041
  424b80:	call   0xec428bb8
  424b85:	xor    eax,DWORD PTR [eax+0x0]
  424b88:	lock xor eax,DWORD PTR [eax+0x0]
  424b8c:	in     al,0x33
  424b8e:	inc    eax
  424b8f:	add    BYTE PTR [ecx+esi*1+0x40],bl
  424b93:	add    BYTE PTR [eax+0x31],bh
  424b96:	inc    eax
  424b97:	add    BYTE PTR [ecx+esi*1+0x45160040],dh
  424b9e:	push   esi
  424b9f:	popa   
  424ba0:	jb     0x424c0b
  424ba2:	popa   
  424ba3:	outs   dx,BYTE PTR ds:[esi]
  424ba4:	je     0x424bef
  424ba6:	outs   dx,BYTE PTR ds:[esi]
  424ba7:	jbe    0x424c0a
  424ba9:	ins    BYTE PTR es:[edi],dx
  424baa:	imul   esp,DWORD PTR [edi+ecx*2+0x70],0x6f727245
  424bb2:	jb     0x424b44
  424bb4:	add    BYTE PTR [edx+eax*2+0x0],cl
	...
  424bd4:	add    BYTE PTR [edx+eax*2+0x0],cl
  424bd8:	or     al,0x0
  424bda:	add    BYTE PTR [eax],al
  424bdc:	push   esp
  424bdd:	jmp    0x40:0x33dc0041
  424be4:	call   0xec428c1c
  424be9:	xor    eax,DWORD PTR [eax+0x0]
  424bec:	lock xor eax,DWORD PTR [eax+0x0]
  424bf0:	in     al,0x33
  424bf2:	inc    eax
  424bf3:	add    BYTE PTR [ecx+esi*1+0x40],bl
  424bf7:	add    BYTE PTR [eax+0x31],bh
  424bfa:	inc    eax
  424bfb:	add    BYTE PTR [ecx+esi*1+0x45150040],dh
  424c02:	push   esi
  424c03:	popa   
  424c04:	jb     0x424c6f
  424c06:	popa   
  424c07:	outs   dx,BYTE PTR ds:[esi]
  424c08:	je     0x424c5e
  424c0a:	jns    0x424c7c
  424c0c:	gs inc ebx
  424c0e:	popa   
  424c0f:	jae    0x424c85
  424c11:	inc    ebp
  424c12:	jb     0x424c86
  424c14:	outs   dx,DWORD PTR ds:[esi]
  424c15:	jb     0x424ba2
  424c17:	shl    BYTE PTR [esp+ecx*2+0x42],0x0
	...
  424c38:	fs dec esp
  424c3a:	inc    edx
  424c3b:	add    BYTE PTR [eax+eax*1],cl
  424c3e:	add    BYTE PTR [eax],al
  424c40:	push   esp
  424c41:	jmp    0x40:0x33dc0041
  424c48:	call   0xec428c80
  424c4d:	xor    eax,DWORD PTR [eax+0x0]
  424c50:	lock xor eax,DWORD PTR [eax+0x0]
  424c54:	in     al,0x33
  424c56:	inc    eax
  424c57:	add    BYTE PTR [ecx+esi*1+0x40],bl
  424c5b:	add    BYTE PTR [eax+0x31],bh
  424c5e:	inc    eax
  424c5f:	add    BYTE PTR [ecx+esi*1+0x45150040],dh
  424c66:	push   esi
  424c67:	popa   
  424c68:	jb     0x424cd3
  424c6a:	popa   
  424c6b:	outs   dx,BYTE PTR ds:[esi]
  424c6c:	je     0x424cbd
  424c6e:	jbe    0x424cd5
  424c70:	jb     0x424cd8
  424c72:	ins    BYTE PTR es:[edi],dx
  424c73:	outs   dx,DWORD PTR ds:[esi]
  424c74:	ja     0x424cbb
  424c76:	jb     0x424cea
  424c78:	outs   dx,DWORD PTR ds:[esi]
  424c79:	jb     0x424c06
  424c7b:	ror    al,0x4c
  424c7e:	inc    edx
	...
  424c9b:	add    al,cl
  424c9d:	dec    esp
  424c9e:	inc    edx
  424c9f:	add    BYTE PTR [eax+eax*1],cl
  424ca2:	add    BYTE PTR [eax],al
  424ca4:	push   esp
  424ca5:	jmp    0x40:0x33dc0041
  424cac:	call   0xec428ce4
  424cb1:	xor    eax,DWORD PTR [eax+0x0]
  424cb4:	lock xor eax,DWORD PTR [eax+0x0]
  424cb8:	in     al,0x33
  424cba:	inc    eax
  424cbb:	add    BYTE PTR [ecx+esi*1+0x40],bl
  424cbf:	add    BYTE PTR [eax+0x31],bh
  424cc2:	inc    eax
  424cc3:	add    BYTE PTR [ecx+esi*1+0x45170040],dh
  424cca:	push   esi
  424ccb:	popa   
  424ccc:	jb     0x424d37
  424cce:	popa   
  424ccf:	outs   dx,BYTE PTR ds:[esi]
  424cd0:	je     0x424d1b
  424cd2:	outs   dx,BYTE PTR ds:[esi]
  424cd3:	jbe    0x424d36
  424cd5:	ins    BYTE PTR es:[edi],dx
  424cd6:	imul   esp,DWORD PTR [ecx+eax*2+0x72],0x72724567
  424cde:	outs   dx,DWORD PTR ds:[esi]
  424cdf:	jb     0x424d0d
  424ce1:	dec    ebp
  424ce2:	inc    edx
	...
  424cff:	add    BYTE PTR [ecx*2+0xc0042],ch
  424d06:	add    BYTE PTR [eax],al
  424d08:	push   esp
  424d09:	jmp    0x40:0x33dc0041
  424d10:	call   0xec428d48
  424d15:	xor    eax,DWORD PTR [eax+0x0]
  424d18:	lock xor eax,DWORD PTR [eax+0x0]
  424d1c:	in     al,0x33
  424d1e:	inc    eax
  424d1f:	add    BYTE PTR [ecx+esi*1+0x40],bl
  424d23:	add    BYTE PTR [eax+0x31],bh
  424d26:	inc    eax
  424d27:	add    BYTE PTR [ecx+esi*1+0x45170040],dh
  424d2e:	push   esi
  424d2f:	popa   
  424d30:	jb     0x424d9b
  424d32:	popa   
  424d33:	outs   dx,BYTE PTR ds:[esi]
  424d34:	je     0x424d78
  424d36:	popa   
  424d37:	fs push esi
  424d39:	popa   
  424d3a:	jb     0x424d90
  424d3c:	jns    0x424dae
  424d3e:	gs inc ebp
  424d40:	jb     0x424db4
  424d42:	outs   dx,DWORD PTR ds:[esi]
  424d43:	jb     0x424cd5
  424d45:	dec    ebp
  424d46:	inc    edx
	...
  424d63:	add    BYTE PTR [eax+0xc00424d],dl
  424d69:	add    BYTE PTR [eax],al
  424d6b:	add    BYTE PTR [edx+ebp*8+0x41],dl
  424d6f:	add    ah,bl
  424d71:	xor    eax,DWORD PTR [eax+0x0]
  424d74:	call   0xec428dac
  424d79:	xor    eax,DWORD PTR [eax+0x0]
  424d7c:	lock xor eax,DWORD PTR [eax+0x0]
  424d80:	in     al,0x33
  424d82:	inc    eax
  424d83:	add    BYTE PTR [ecx+esi*1+0x40],bl
  424d87:	add    BYTE PTR [eax+0x31],bh
  424d8a:	inc    eax
  424d8b:	add    BYTE PTR [ecx+esi*1+0x45150040],dh
  424d92:	push   esi
  424d93:	popa   
  424d94:	jb     0x424dff
  424d96:	popa   
  424d97:	outs   dx,BYTE PTR ds:[esi]
  424d98:	je     0x424ddc
  424d9a:	popa   
  424d9b:	fs dec ecx
  424d9d:	outs   dx,BYTE PTR ds:[esi]
  424d9e:	fs gs js 0x424de7
  424da2:	jb     0x424e16
  424da4:	outs   dx,DWORD PTR ds:[esi]
  424da5:	jb     0x424d32
  424da7:	shl    ah,0x4d
  424daa:	inc    edx
	...
  424dc7:	add    ah,dh
  424dc9:	dec    ebp
  424dca:	inc    edx
  424dcb:	add    BYTE PTR [eax+eax*1],cl
  424dce:	add    BYTE PTR [eax],al
  424dd0:	push   esp
  424dd1:	jmp    0x40:0x33dc0041
  424dd8:	call   0xec428e10
  424ddd:	xor    eax,DWORD PTR [eax+0x0]
  424de0:	lock xor eax,DWORD PTR [eax+0x0]
  424de4:	in     al,0x33
  424de6:	inc    eax
  424de7:	add    BYTE PTR [ecx+esi*1+0x40],bl
  424deb:	add    BYTE PTR [eax+0x31],bh
  424dee:	inc    eax
  424def:	add    BYTE PTR [ecx+esi*1+0x45180040],dh
  424df6:	push   esi
  424df7:	popa   
  424df8:	jb     0x424e63
  424dfa:	popa   
  424dfb:	outs   dx,BYTE PTR ds:[esi]
  424dfc:	je     0x424e3f
  424dfe:	jb     0x424e72
  424e00:	popa   
  424e01:	jns    0x424e4f
  424e03:	outs   dx,DWORD PTR ds:[esi]
  424e04:	arpl   WORD PTR [ebx+0x65],bp
  424e07:	fs inc ebp
  424e09:	jb     0x424e7d
  424e0b:	outs   dx,DWORD PTR ds:[esi]
  424e0c:	jb     0x424d9b
  424e0e:	inc    eax
  424e0f:	add    BYTE PTR [esi+ecx*2+0x42],bl
	...
  424e2f:	add    BYTE PTR [esi+ecx*2+0x42],bl
  424e33:	add    BYTE PTR [eax+eax*1],cl
  424e36:	add    BYTE PTR [eax],al
  424e38:	push   esp
  424e39:	jmp    0x40:0x33dc0041
  424e40:	call   0xec428e78
  424e45:	xor    eax,DWORD PTR [eax+0x0]
  424e48:	lock xor eax,DWORD PTR [eax+0x0]
  424e4c:	in     al,0x33
  424e4e:	inc    eax
  424e4f:	add    BYTE PTR [ecx+esi*1+0x40],bl
  424e53:	add    BYTE PTR [eax+0x31],bh
  424e56:	inc    eax
  424e57:	add    BYTE PTR [ecx+esi*1+0x45180040],dh
  424e5e:	push   esi
  424e5f:	popa   
  424e60:	jb     0x424ecb
  424e62:	popa   
  424e63:	outs   dx,BYTE PTR ds:[esi]
  424e64:	je     0x424ea7
  424e66:	jb     0x424eda
  424e68:	popa   
  424e69:	jns    0x424eae
  424e6b:	jb     0x424ed2
  424e6d:	popa   
  424e6e:	je     0x424ed5
  424e70:	inc    ebp
  424e71:	jb     0x424ee5
  424e73:	outs   dx,DWORD PTR ds:[esi]
  424e74:	jb     0x424e03
  424e76:	inc    eax
  424e77:	add    ah,al
  424e79:	dec    esi
  424e7a:	inc    edx
	...
  424e97:	add    ah,al
  424e99:	dec    esi
  424e9a:	inc    edx
  424e9b:	add    BYTE PTR [eax+eax*1],cl
  424e9e:	add    BYTE PTR [eax],al
  424ea0:	push   esp
  424ea1:	jmp    0x40:0x33dc0041
  424ea8:	call   0xec428ee0
  424ead:	xor    eax,DWORD PTR [eax+0x0]
  424eb0:	lock xor eax,DWORD PTR [eax+0x0]
  424eb4:	in     al,0x33
  424eb6:	inc    eax
  424eb7:	add    BYTE PTR [ecx+esi*1+0x40],bl
  424ebb:	add    BYTE PTR [eax+0x31],bh
  424ebe:	inc    eax
  424ebf:	add    BYTE PTR [ecx+esi*1+0x45140040],dh
  424ec6:	push   esi
  424ec7:	popa   
  424ec8:	jb     0x424f33
  424eca:	popa   
  424ecb:	outs   dx,BYTE PTR ds:[esi]
  424ecc:	je     0x424f1c
  424ece:	outs   dx,DWORD PTR ds:[esi]
  424ecf:	je     0x424f1a
  424ed1:	ins    DWORD PTR es:[edi],dx
  424ed2:	jo     0x424f40
  424ed4:	inc    ebp
  424ed5:	jb     0x424f49
  424ed7:	outs   dx,DWORD PTR ds:[esi]
  424ed8:	jb     0x424e67
  424eda:	inc    eax
  424edb:	add    BYTE PTR [eax],ch
  424edd:	dec    edi
  424ede:	inc    edx
	...
  424efb:	add    BYTE PTR [eax],ch
  424efd:	dec    edi
  424efe:	inc    edx
  424eff:	add    BYTE PTR [eax+eax*1],cl
  424f02:	add    BYTE PTR [eax],al
  424f04:	push   esp
  424f05:	jmp    0x40:0x33dc0041
  424f0c:	call   0xec428f44
  424f11:	xor    eax,DWORD PTR [eax+0x0]
  424f14:	lock xor eax,DWORD PTR [eax+0x0]
  424f18:	in     al,0x33
  424f1a:	inc    eax
  424f1b:	add    BYTE PTR [ecx+esi*1+0x40],bl
  424f1f:	add    BYTE PTR [eax+0x31],bh
  424f22:	inc    eax
  424f23:	add    BYTE PTR [ecx+esi*1+0x45180040],dh
  424f2a:	push   esi
  424f2b:	popa   
  424f2c:	jb     0x424f97
  424f2e:	popa   
  424f2f:	outs   dx,BYTE PTR ds:[esi]
  424f30:	je     0x424f81
  424f32:	jne    0x424fa8
  424f34:	dec    edi
  424f35:	dec    bp
  424f37:	gs ins DWORD PTR es:[edi],dx
  424f39:	outs   dx,DWORD PTR ds:[esi]
  424f3a:	jb     0x424fb5
  424f3c:	inc    ebp
  424f3d:	jb     0x424fb1
  424f3f:	outs   dx,DWORD PTR ds:[esi]
  424f40:	jb     0x424ecf
  424f42:	inc    eax
  424f43:	add    BYTE PTR [eax+0x424f],dl
	...
  424f61:	add    BYTE PTR [eax],al
  424f63:	add    BYTE PTR [eax+0xc00424f],dl
  424f69:	add    BYTE PTR [eax],al
  424f6b:	add    BYTE PTR [edx+ebp*8+0x41],dl
  424f6f:	add    ah,bl
  424f71:	xor    eax,DWORD PTR [eax+0x0]
  424f74:	call   0xec428fac
  424f79:	xor    eax,DWORD PTR [eax+0x0]
  424f7c:	lock xor eax,DWORD PTR [eax+0x0]
  424f80:	in     al,0x33
  424f82:	inc    eax
  424f83:	add    BYTE PTR [ecx+esi*1+0x40],bl
  424f87:	add    BYTE PTR [eax+0x31],bh
  424f8a:	inc    eax
  424f8b:	add    BYTE PTR [ecx+esi*1+0x45170040],dh
  424f92:	push   esi
  424f93:	popa   
  424f94:	jb     0x424fff
  424f96:	popa   
  424f97:	outs   dx,BYTE PTR ds:[esi]
  424f98:	je     0x424fef
  424f9a:	outs   dx,BYTE PTR ds:[esi]
  424f9b:	gs js  0x42500e
  424f9e:	arpl   WORD PTR gs:[ebp+eiz*2+0x64],si
  424fa3:	inc    ebp
  424fa4:	jb     0x425018
  424fa6:	outs   dx,DWORD PTR ds:[esi]
  424fa7:	jb     0x424f9d
  424fa9:	dec    edi
  424faa:	inc    edx
	...
  424fc7:	add    ah,dh
  424fc9:	dec    edi
  424fca:	inc    edx
  424fcb:	add    BYTE PTR [eax+eax*1],cl
  424fce:	add    BYTE PTR [eax],al
  424fd0:	push   esp
  424fd1:	jmp    0x40:0x33dc0041
  424fd8:	call   0xec429010
  424fdd:	xor    eax,DWORD PTR [eax+0x0]
  424fe0:	lock xor eax,DWORD PTR [eax+0x0]
  424fe4:	in     al,0x33
  424fe6:	inc    eax
  424fe7:	add    BYTE PTR [ecx+esi*1+0x40],bl
  424feb:	add    BYTE PTR [eax+0x31],bh
  424fee:	inc    eax
  424fef:	add    BYTE PTR [ecx+esi*1+0x45150040],dh
  424ff6:	push   esi
  424ff7:	popa   
  424ff8:	jb     0x425063
  424ffa:	popa   
  424ffb:	outs   dx,BYTE PTR ds:[esi]
  424ffc:	je     0x425042
  424ffe:	imul   esi,DWORD PTR [ebx+0x70],0x68637461
  425005:	inc    ebp
  425006:	jb     0x42507a
  425008:	outs   dx,DWORD PTR ds:[esi]
  425009:	jb     0x424f96
  42500b:	rcl    BYTE PTR [ebp-0x75],0xec
  42500f:	push   0x0
  425011:	xor    eax,eax
  425013:	push   ebp
  425014:	push   0x425056
  425019:	push   DWORD PTR fs:[eax]
  42501c:	mov    DWORD PTR fs:[eax],esp
  42501f:	lea    edx,[ebp-0x4]
  425022:	mov    eax,ds:0x42e48c
  425027:	call   0x4056fc
  42502c:	mov    ecx,DWORD PTR [ebp-0x4]
  42502f:	mov    dl,0x1
  425031:	mov    eax,ds:0x424bb4
  425036:	call   0x4224c0
  42503b:	call   0x4036e4
  425040:	xor    eax,eax
  425042:	pop    edx
  425043:	pop    ecx
  425044:	pop    ecx
  425045:	mov    DWORD PTR fs:[eax],edx
  425048:	push   0x42505d
  42504d:	lea    eax,[ebp-0x4]
  425050:	call   0x403cac
  425055:	ret    
  425056:	jmp    0x4036ac
  42505b:	jmp    0x42504d
  42505d:	pop    ecx
  42505e:	pop    ebp
  42505f:	ret    
  425060:	push   ebp
  425061:	mov    ebp,esp
  425063:	add    esp,0xffffffe4
  425066:	push   ebx
  425067:	push   esi
  425068:	xor    ecx,ecx
  42506a:	mov    DWORD PTR [ebp-0x14],ecx
  42506d:	mov    DWORD PTR [ebp-0x18],ecx
  425070:	mov    DWORD PTR [ebp-0x1c],ecx
  425073:	mov    esi,edx
  425075:	mov    ebx,eax
  425077:	xor    eax,eax
  425079:	push   ebp
  42507a:	push   0x4250ef
  42507f:	push   DWORD PTR fs:[eax]
  425082:	mov    DWORD PTR fs:[eax],esp
  425085:	lea    edx,[ebp-0x14]
  425088:	mov    eax,ebx
  42508a:	call   0x426c0c
  42508f:	mov    eax,DWORD PTR [ebp-0x14]
  425092:	mov    DWORD PTR [ebp-0x10],eax
  425095:	mov    BYTE PTR [ebp-0xc],0xb
  425099:	lea    edx,[ebp-0x18]
  42509c:	mov    eax,esi
  42509e:	call   0x426c0c
  4250a3:	mov    eax,DWORD PTR [ebp-0x18]
  4250a6:	mov    DWORD PTR [ebp-0x8],eax
  4250a9:	mov    BYTE PTR [ebp-0x4],0xb
  4250ad:	lea    eax,[ebp-0x10]
  4250b0:	push   eax
  4250b1:	push   0x1
  4250b3:	lea    edx,[ebp-0x1c]
  4250b6:	mov    eax,ds:0x42e3a0
  4250bb:	call   0x4056fc
  4250c0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4250c3:	mov    dl,0x1
  4250c5:	mov    eax,ds:0x424bb4
  4250ca:	call   0x4224fc
  4250cf:	call   0x4036e4
  4250d4:	xor    eax,eax
  4250d6:	pop    edx
  4250d7:	pop    ecx
  4250d8:	pop    ecx
  4250d9:	mov    DWORD PTR fs:[eax],edx
  4250dc:	push   0x4250f6
  4250e1:	lea    eax,[ebp-0x1c]
  4250e4:	mov    edx,0x3
  4250e9:	call   0x403cd0
  4250ee:	ret    
  4250ef:	jmp    0x4036ac
  4250f4:	jmp    0x4250e1
  4250f6:	pop    esi
  4250f7:	pop    ebx
  4250f8:	mov    esp,ebp
  4250fa:	pop    ebp
  4250fb:	ret    
  4250fc:	push   ebp
  4250fd:	mov    ebp,esp
  4250ff:	push   0x0
  425101:	xor    eax,eax
  425103:	push   ebp
  425104:	push   0x425146
  425109:	push   DWORD PTR fs:[eax]
  42510c:	mov    DWORD PTR fs:[eax],esp
  42510f:	lea    edx,[ebp-0x4]
  425112:	mov    eax,ds:0x42e474
  425117:	call   0x4056fc
  42511c:	mov    ecx,DWORD PTR [ebp-0x4]
  42511f:	mov    dl,0x1
  425121:	mov    eax,ds:0x424b50
  425126:	call   0x4224c0
  42512b:	call   0x4036e4
  425130:	xor    eax,eax
  425132:	pop    edx
  425133:	pop    ecx
  425134:	pop    ecx
  425135:	mov    DWORD PTR fs:[eax],edx
  425138:	push   0x42514d
  42513d:	lea    eax,[ebp-0x4]
  425140:	call   0x403cac
  425145:	ret    
  425146:	jmp    0x4036ac
  42514b:	jmp    0x42513d
  42514d:	pop    ecx
  42514e:	pop    ebp
  42514f:	ret    
  425150:	push   ebp
  425151:	mov    ebp,esp
  425153:	add    esp,0xffffffe4
  425156:	push   ebx
  425157:	push   esi
  425158:	xor    ecx,ecx
  42515a:	mov    DWORD PTR [ebp-0x14],ecx
  42515d:	mov    DWORD PTR [ebp-0x18],ecx
  425160:	mov    DWORD PTR [ebp-0x1c],ecx
  425163:	mov    esi,edx
  425165:	mov    ebx,eax
  425167:	xor    eax,eax
  425169:	push   ebp
  42516a:	push   0x4251df
  42516f:	push   DWORD PTR fs:[eax]
  425172:	mov    DWORD PTR fs:[eax],esp
  425175:	lea    edx,[ebp-0x14]
  425178:	mov    eax,ebx
  42517a:	call   0x426c0c
  42517f:	mov    eax,DWORD PTR [ebp-0x14]
  425182:	mov    DWORD PTR [ebp-0x10],eax
  425185:	mov    BYTE PTR [ebp-0xc],0xb
  425189:	lea    edx,[ebp-0x18]
  42518c:	mov    eax,esi
  42518e:	call   0x426c0c
  425193:	mov    eax,DWORD PTR [ebp-0x18]
  425196:	mov    DWORD PTR [ebp-0x8],eax
  425199:	mov    BYTE PTR [ebp-0x4],0xb
  42519d:	lea    eax,[ebp-0x10]
  4251a0:	push   eax
  4251a1:	push   0x1
  4251a3:	lea    edx,[ebp-0x1c]
  4251a6:	mov    eax,ds:0x42e4cc
  4251ab:	call   0x4056fc
  4251b0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251b3:	mov    dl,0x1
  4251b5:	mov    eax,ds:0x424c18
  4251ba:	call   0x4224fc
  4251bf:	call   0x4036e4
  4251c4:	xor    eax,eax
  4251c6:	pop    edx
  4251c7:	pop    ecx
  4251c8:	pop    ecx
  4251c9:	mov    DWORD PTR fs:[eax],edx
  4251cc:	push   0x4251e6
  4251d1:	lea    eax,[ebp-0x1c]
  4251d4:	mov    edx,0x3
  4251d9:	call   0x403cd0
  4251de:	ret    
  4251df:	jmp    0x4036ac
  4251e4:	jmp    0x4251d1
  4251e6:	pop    esi
  4251e7:	pop    ebx
  4251e8:	mov    esp,ebp
  4251ea:	pop    ebp
  4251eb:	ret    
  4251ec:	push   ebp
  4251ed:	mov    ebp,esp
  4251ef:	push   0x0
  4251f1:	xor    eax,eax
  4251f3:	push   ebp
  4251f4:	push   0x425236
  4251f9:	push   DWORD PTR fs:[eax]
  4251fc:	mov    DWORD PTR fs:[eax],esp
  4251ff:	lea    edx,[ebp-0x4]
  425202:	mov    eax,ds:0x42e454
  425207:	call   0x4056fc
  42520c:	mov    ecx,DWORD PTR [ebp-0x4]
  42520f:	mov    dl,0x1
  425211:	mov    eax,ds:0x424e10
  425216:	call   0x4224c0
  42521b:	call   0x4036e4
  425220:	xor    eax,eax
  425222:	pop    edx
  425223:	pop    ecx
  425224:	pop    ecx
  425225:	mov    DWORD PTR fs:[eax],edx
  425228:	push   0x42523d
  42522d:	lea    eax,[ebp-0x4]
  425230:	call   0x403cac
  425235:	ret    
  425236:	jmp    0x4036ac
  42523b:	jmp    0x42522d
  42523d:	pop    ecx
  42523e:	pop    ebp
  42523f:	ret    
  425240:	push   ebp
  425241:	mov    ebp,esp
  425243:	mov    ecx,0x8
  425248:	push   0x0
  42524a:	push   0x0
  42524c:	dec    ecx
  42524d:	jne    0x425248
  42524f:	push   ebx
  425250:	mov    ebx,eax
  425252:	xor    eax,eax
  425254:	push   ebp
  425255:	push   0x425485
  42525a:	push   DWORD PTR fs:[eax]
  42525d:	mov    DWORD PTR fs:[eax],esp
  425260:	mov    eax,ebx
  425262:	cmp    eax,0x8002000a
  425267:	jg     0x4252a2
  425269:	je     0x425309
  42526f:	cmp    eax,0x80020005
  425274:	jg     0x425293
  425276:	je     0x4252cf
  425278:	sub    eax,0x80004001
  42527d:	je     0x42537b
  425283:	sub    eax,0xbffe
  425288:	je     0x4253ea
  42528e:	jmp    0x42540d
  425293:	sub    eax,0x80020008
  425298:	je     0x4252d9
  42529a:	dec    eax
  42529b:	je     0x4252ff
  42529d:	jmp    0x42540d
  4252a2:	sub    eax,0x8002000b
  4252a7:	je     0x42532f
  4252ad:	sub    eax,0x2
  4252b0:	je     0x425355
  4252b6:	sub    eax,0x50001
  4252bb:	je     0x4253a1
  4252c1:	sub    eax,0x49
  4252c4:	je     0x4253c7
  4252ca:	jmp    0x42540d
  4252cf:	call   0x42500c
  4252d4:	jmp    0x42545d
  4252d9:	lea    edx,[ebp-0x4]
  4252dc:	mov    eax,ds:0x42e538
  4252e1:	call   0x4056fc
  4252e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4252e9:	mov    dl,0x1
  4252eb:	mov    eax,ds:0x424ce0
  4252f0:	call   0x4224c0
  4252f5:	call   0x4036e4
  4252fa:	jmp    0x42545d
  4252ff:	call   0x4250fc
  425304:	jmp    0x42545d
  425309:	lea    edx,[ebp-0x8]
  42530c:	mov    eax,ds:0x42e3d8
  425311:	call   0x4056fc
  425316:	mov    ecx,DWORD PTR [ebp-0x8]
  425319:	mov    dl,0x1
  42531b:	mov    eax,ds:0x424c18
  425320:	call   0x4224c0
  425325:	call   0x4036e4
  42532a:	jmp    0x42545d
  42532f:	lea    edx,[ebp-0xc]
  425332:	mov    eax,ds:0x42e500
  425337:	call   0x4056fc
  42533c:	mov    ecx,DWORD PTR [ebp-0xc]
  42533f:	mov    dl,0x1
  425341:	mov    eax,ds:0x424d44
  425346:	call   0x4224c0
  42534b:	call   0x4036e4
  425350:	jmp    0x42545d
  425355:	lea    edx,[ebp-0x10]
  425358:	mov    eax,ds:0x42e564
  42535d:	call   0x4056fc
  425362:	mov    ecx,DWORD PTR [ebp-0x10]
  425365:	mov    dl,0x1
  425367:	mov    eax,ds:0x424da8
  42536c:	call   0x4224c0
  425371:	call   0x4036e4
  425376:	jmp    0x42545d
  42537b:	lea    edx,[ebp-0x14]
  42537e:	mov    eax,ds:0x42e4a8
  425383:	call   0x4056fc
  425388:	mov    ecx,DWORD PTR [ebp-0x14]
  42538b:	mov    dl,0x1
  42538d:	mov    eax,ds:0x424e78
  425392:	call   0x4224c0
  425397:	call   0x4036e4
  42539c:	jmp    0x42545d
  4253a1:	lea    edx,[ebp-0x18]
  4253a4:	mov    eax,ds:0x42e3fc
  4253a9:	call   0x4056fc
  4253ae:	mov    ecx,DWORD PTR [ebp-0x18]
  4253b1:	mov    dl,0x1
  4253b3:	mov    eax,ds:0x424edc
  4253b8:	call   0x4224c0
  4253bd:	call   0x4036e4
  4253c2:	jmp    0x42545d
  4253c7:	lea    edx,[ebp-0x1c]
  4253ca:	mov    eax,ds:0x42e410
  4253cf:	call   0x4056fc
  4253d4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4253d7:	mov    dl,0x1
  4253d9:	mov    eax,ds:0x424c7c
  4253de:	call   0x4224c0
  4253e3:	call   0x4036e4
  4253e8:	jmp    0x42545d
  4253ea:	lea    edx,[ebp-0x20]
  4253ed:	mov    eax,ds:0x42e3d4
  4253f2:	call   0x4056fc
  4253f7:	mov    ecx,DWORD PTR [ebp-0x20]
  4253fa:	mov    dl,0x1
  4253fc:	mov    eax,ds:0x424f44
  425401:	call   0x4224c0
  425406:	call   0x4036e4
  42540b:	jmp    0x42545d
  42540d:	mov    eax,ds:0x42e544
  425412:	mov    eax,DWORD PTR [eax]
  425414:	mov    DWORD PTR [ebp-0x38],eax
  425417:	mov    BYTE PTR [ebp-0x34],0xb
  42541b:	mov    DWORD PTR [ebp-0x30],ebx
  42541e:	mov    BYTE PTR [ebp-0x2c],0x0
  425422:	lea    edx,[ebp-0x3c]
  425425:	mov    eax,ebx
  425427:	call   0x421ca8
  42542c:	mov    eax,DWORD PTR [ebp-0x3c]
  42542f:	mov    DWORD PTR [ebp-0x28],eax
  425432:	mov    BYTE PTR [ebp-0x24],0xb
  425436:	lea    eax,[ebp-0x38]
  425439:	push   eax
  42543a:	push   0x2
  42543c:	lea    edx,[ebp-0x40]
  42543f:	mov    eax,ds:0x42e458
  425444:	call   0x4056fc
  425449:	mov    ecx,DWORD PTR [ebp-0x40]
  42544c:	mov    dl,0x1
  42544e:	mov    eax,ds:0x41ea54
  425453:	call   0x4224fc
  425458:	call   0x4036e4
  42545d:	xor    eax,eax
  42545f:	pop    edx
  425460:	pop    ecx
  425461:	pop    ecx
  425462:	mov    DWORD PTR fs:[eax],edx
  425465:	push   0x42548c
  42546a:	lea    eax,[ebp-0x40]
  42546d:	mov    edx,0x2
  425472:	call   0x403cd0
  425477:	lea    eax,[ebp-0x20]
  42547a:	mov    edx,0x8
  42547f:	call   0x403cd0
  425484:	ret    
  425485:	jmp    0x4036ac
  42548a:	jmp    0x42546a
  42548c:	pop    ebx
  42548d:	mov    esp,ebp
  42548f:	pop    ebp
  425490:	ret    
  425491:	lea    eax,[eax+0x0]
  425494:	test   eax,eax
  425496:	je     0x42549d
  425498:	call   0x425240
  42549d:	ret    
  42549e:	mov    eax,eax
  4254a0:	push   ebx
  4254a1:	test   eax,eax
  4254a3:	je     0x4254d1
  4254a5:	mov    ebx,eax
  4254a7:	sub    ebx,0x80020005
  4254ad:	je     0x4254b6
  4254af:	sub    ebx,0x5
  4254b2:	je     0x4254c1
  4254b4:	jmp    0x4254cc
  4254b6:	mov    eax,edx
  4254b8:	mov    edx,ecx
  4254ba:	call   0x425060
  4254bf:	jmp    0x4254d1
  4254c1:	mov    eax,edx
  4254c3:	mov    edx,ecx
  4254c5:	call   0x425150
  4254ca:	jmp    0x4254d1
  4254cc:	call   0x425240
  4254d1:	pop    ebx
  4254d2:	ret    
  4254d3:	nop
  4254d4:	push   ebp
  4254d5:	mov    ebp,esp
  4254d7:	push   0x0
  4254d9:	xor    eax,eax
  4254db:	push   ebp
  4254dc:	push   0x42551e
  4254e1:	push   DWORD PTR fs:[eax]
  4254e4:	mov    DWORD PTR fs:[eax],esp
  4254e7:	lea    edx,[ebp-0x4]
  4254ea:	mov    eax,ds:0x42e398
  4254ef:	call   0x4056fc
  4254f4:	mov    ecx,DWORD PTR [ebp-0x4]
  4254f7:	mov    dl,0x1
  4254f9:	mov    eax,ds:0x424fa8
  4254fe:	call   0x4224c0
  425503:	call   0x4036e4
  425508:	xor    eax,eax
  42550a:	pop    edx
  42550b:	pop    ecx
  42550c:	pop    ecx
  42550d:	mov    DWORD PTR fs:[eax],edx
  425510:	push   0x425525
  425515:	lea    eax,[ebp-0x4]
  425518:	call   0x403cac
  42551d:	ret    
  42551e:	jmp    0x4036ac
  425523:	jmp    0x425515
  425525:	pop    ecx
  425526:	pop    ebp
  425527:	ret    
  425528:	push   ebp
  425529:	mov    ebp,esp
  42552b:	push   ebx
  42552c:	mov    ecx,DWORD PTR [ebp+0x8]
  42552f:	add    ecx,0xfffffd00
  425535:	mov    edx,DWORD PTR [ecx+eax*8+0x4]
  425539:	add    edx,DWORD PTR [ecx+eax*8]
  42553c:	mov    ebx,DWORD PTR [ebp+0x8]
  42553f:	cmp    edx,DWORD PTR [ebx+eax*4-0x100]
  425546:	setg   dl
  425549:	dec    eax
  42554a:	test   dl,dl
  42554c:	je     0x425552
  42554e:	test   eax,eax
  425550:	jge    0x425535
  425552:	mov    eax,edx
  425554:	pop    ebx
  425555:	pop    ebp
  425556:	ret    
  425557:	nop
  425558:	push   ebp
  425559:	mov    ebp,esp
  42555b:	push   ebx
  42555c:	push   esi
  42555d:	mov    dl,0x1
  42555f:	mov    ecx,DWORD PTR [ebp+0x8]
  425562:	inc    DWORD PTR [ecx+eax*4-0x100]
  425569:	mov    ecx,DWORD PTR [ebp+0x8]
  42556c:	mov    ecx,DWORD PTR [ecx+eax*8-0x2fc]
  425573:	mov    ebx,ecx
  425575:	mov    esi,DWORD PTR [ebp+0x8]
  425578:	add    ebx,DWORD PTR [esi+eax*8-0x300]
  42557f:	mov    esi,DWORD PTR [ebp+0x8]
  425582:	cmp    ebx,DWORD PTR [esi+eax*4-0x100]
  425589:	jg     0x4255ad
  42558b:	test   eax,eax
  42558d:	jne    0x425593
  42558f:	xor    edx,edx
  425591:	jmp    0x4255ad
  425593:	mov    edx,DWORD PTR [ebp+0x8]
  425596:	mov    edx,DWORD PTR [ebp+0x8]
  425599:	mov    DWORD PTR [edx+eax*4-0x100],ecx
  4255a0:	mov    edx,DWORD PTR [ebp+0x8]
  4255a3:	push   edx
  4255a4:	dec    eax
  4255a5:	call   0x425558
  4255aa:	pop    ecx
  4255ab:	mov    edx,eax
  4255ad:	mov    eax,edx
  4255af:	pop    esi
  4255b0:	pop    ebx
  4255b1:	pop    ebp
  4255b2:	ret    
  4255b3:	nop
  4255b4:	push   ebp
  4255b5:	mov    ebp,esp
  4255b7:	add    esp,0xfffffce8
  4255bd:	push   ebx
  4255be:	push   esi
  4255bf:	push   edi
  4255c0:	mov    DWORD PTR [ebp-0x304],eax
  4255c6:	mov    eax,DWORD PTR [ebp-0x304]
  4255cc:	test   BYTE PTR [eax+0x1],0x20
  4255d0:	jne    0x4255dc
  4255d2:	mov    eax,0x80070057
  4255d7:	call   0x425494
  4255dc:	mov    eax,DWORD PTR [ebp-0x304]
  4255e2:	mov    ax,WORD PTR [eax]
  4255e5:	mov    edx,eax
  4255e7:	and    dx,0xfff
  4255ec:	cmp    dx,0xc
  4255f0:	jne    0x425718
  4255f6:	mov    edx,DWORD PTR [ebp-0x304]
  4255fc:	test   ah,0x40
  4255ff:	je     0x425614
  425601:	mov    eax,DWORD PTR [ebp-0x304]
  425607:	mov    eax,DWORD PTR [eax+0x8]
  42560a:	mov    eax,DWORD PTR [eax]
  42560c:	mov    DWORD PTR [ebp-0x308],eax
  425612:	jmp    0x425623
  425614:	mov    eax,DWORD PTR [ebp-0x304]
  42561a:	mov    eax,DWORD PTR [eax+0x8]
  42561d:	mov    DWORD PTR [ebp-0x308],eax
  425623:	mov    eax,DWORD PTR [ebp-0x308]
  425629:	movzx  eax,WORD PTR [eax]
  42562c:	mov    DWORD PTR [ebp-0x310],eax
  425632:	mov    ebx,DWORD PTR [ebp-0x310]
  425638:	dec    ebx
  425639:	test   ebx,ebx
  42563b:	jl     0x4256a8
  42563d:	inc    ebx
  42563e:	xor    edi,edi
  425640:	lea    esi,[ebp-0x300]
  425646:	mov    eax,esi
  425648:	mov    DWORD PTR [ebp-0x318],eax
  42564e:	mov    eax,DWORD PTR [ebp-0x318]
  425654:	add    eax,0x4
  425657:	push   eax
  425658:	lea    eax,[edi+0x1]
  42565b:	push   eax
  42565c:	mov    eax,DWORD PTR [ebp-0x308]
  425662:	push   eax
  425663:	call   0x424698
  425668:	call   0x425494
  42566d:	lea    eax,[ebp-0x30c]
  425673:	push   eax
  425674:	lea    eax,[edi+0x1]
  425677:	push   eax
  425678:	mov    eax,DWORD PTR [ebp-0x308]
  42567e:	push   eax
  42567f:	call   0x4246a0
  425684:	call   0x425494
  425689:	mov    eax,DWORD PTR [ebp-0x318]
  42568f:	mov    edx,DWORD PTR [ebp-0x30c]
  425695:	sub    edx,DWORD PTR [eax+0x4]
  425698:	inc    edx
  425699:	mov    eax,DWORD PTR [ebp-0x318]
  42569f:	mov    DWORD PTR [eax],edx
  4256a1:	inc    edi
  4256a2:	add    esi,0x8
  4256a5:	dec    ebx
  4256a6:	jne    0x425646
  4256a8:	mov    ebx,DWORD PTR [ebp-0x310]
  4256ae:	dec    ebx
  4256af:	test   ebx,ebx
  4256b1:	jl     0x4256cd
  4256b3:	inc    ebx
  4256b4:	lea    eax,[ebp-0x2fc]
  4256ba:	lea    edx,[ebp-0x100]
  4256c0:	mov    ecx,DWORD PTR [eax]
  4256c2:	mov    DWORD PTR [edx],ecx
  4256c4:	add    edx,0x4
  4256c7:	add    eax,0x8
  4256ca:	dec    ebx
  4256cb:	jne    0x4256c0
  4256cd:	push   ebp
  4256ce:	mov    ebx,DWORD PTR [ebp-0x310]
  4256d4:	dec    ebx
  4256d5:	mov    eax,ebx
  4256d7:	call   0x425528
  4256dc:	pop    ecx
  4256dd:	test   al,al
  4256df:	je     0x42570b
  4256e1:	lea    eax,[ebp-0x314]
  4256e7:	push   eax
  4256e8:	lea    eax,[ebp-0x100]
  4256ee:	push   eax
  4256ef:	mov    eax,DWORD PTR [ebp-0x308]
  4256f5:	push   eax
  4256f6:	call   0x4246a8
  4256fb:	call   0x425494
  425700:	mov    eax,DWORD PTR [ebp-0x314]
  425706:	call   0x4257ac
  42570b:	push   ebp
  42570c:	mov    eax,ebx
  42570e:	call   0x425558
  425713:	pop    ecx
  425714:	test   al,al
  425716:	jne    0x4256cd
  425718:	mov    eax,DWORD PTR [ebp-0x304]
  42571e:	push   eax
  42571f:	call   0x424234
  425724:	call   0x425494
  425729:	pop    edi
  42572a:	pop    esi
  42572b:	pop    ebx
  42572c:	mov    esp,ebp
  42572e:	pop    ebp
  42572f:	ret    
  425730:	push   ebx
  425731:	push   esi
  425732:	push   ecx
  425733:	mov    ebx,eax
  425735:	mov    si,WORD PTR [ebx]
  425738:	cmp    si,0x14
  42573c:	jae    0x42574b
  42573e:	push   ebx
  42573f:	call   0x424234
  425744:	call   0x425494
  425749:	jmp    0x4257a7
  42574b:	cmp    si,0x100
  425750:	jne    0x425761
  425752:	mov    WORD PTR [ebx],0x0
  425757:	lea    eax,[ebx+0x8]
  42575a:	call   0x403cac
  42575f:	jmp    0x4257a7
  425761:	cmp    si,0x101
  425766:	jne    0x425772
  425768:	mov    eax,ebx
  42576a:	call   DWORD PTR ds:0x42f810
  425770:	jmp    0x4257a7
  425772:	test   si,0x2000
  425777:	je     0x425782
  425779:	mov    eax,ebx
  42577b:	call   0x4255b4
  425780:	jmp    0x4257a7
  425782:	mov    edx,esp
  425784:	mov    eax,esi
  425786:	call   0x427068
  42578b:	test   al,al
  42578d:	je     0x42579b
  42578f:	mov    edx,ebx
  425791:	mov    eax,DWORD PTR [esp]
  425794:	mov    ecx,DWORD PTR [eax]
  425796:	call   DWORD PTR [ecx+0x24]
  425799:	jmp    0x4257a7
  42579b:	push   ebx
  42579c:	call   0x424234
  4257a1:	push   ebx
  4257a2:	call   0x42422c
  4257a7:	pop    edx
  4257a8:	pop    esi
  4257a9:	pop    ebx
  4257aa:	ret    
  4257ab:	nop
  4257ac:	test   WORD PTR [eax],0xbfe8
  4257b1:	jne    0x4257b9
  4257b3:	mov    WORD PTR [eax],0x0
  4257b8:	ret    
  4257b9:	call   0x425730
  4257be:	ret    
  4257bf:	nop
  4257c0:	push   eax
  4257c1:	call   0x4257ac
  4257c6:	pop    eax
  4257c7:	ret    
  4257c8:	push   ebp
  4257c9:	mov    ebp,esp
  4257cb:	push   ebx
  4257cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4257cf:	add    ecx,0xfffffd00
  4257d5:	mov    edx,DWORD PTR [ecx+eax*8+0x4]
  4257d9:	add    edx,DWORD PTR [ecx+eax*8]
  4257dc:	mov    ebx,DWORD PTR [ebp+0x8]
  4257df:	cmp    edx,DWORD PTR [ebx+eax*4-0x100]
  4257e6:	setg   dl
  4257e9:	dec    eax
  4257ea:	test   dl,dl
  4257ec:	je     0x4257f2
  4257ee:	test   eax,eax
  4257f0:	jge    0x4257d5
  4257f2:	mov    eax,edx
  4257f4:	pop    ebx
  4257f5:	pop    ebp
  4257f6:	ret    
  4257f7:	nop
  4257f8:	push   ebp
  4257f9:	mov    ebp,esp
  4257fb:	push   ebx
  4257fc:	push   esi
  4257fd:	mov    dl,0x1
  4257ff:	mov    ecx,DWORD PTR [ebp+0x8]
  425802:	inc    DWORD PTR [ecx+eax*4-0x100]
  425809:	mov    ecx,DWORD PTR [ebp+0x8]
  42580c:	mov    ecx,DWORD PTR [ecx+eax*8-0x2fc]
  425813:	mov    ebx,ecx
  425815:	mov    esi,DWORD PTR [ebp+0x8]
  425818:	add    ebx,DWORD PTR [esi+eax*8-0x300]
  42581f:	mov    esi,DWORD PTR [ebp+0x8]
  425822:	cmp    ebx,DWORD PTR [esi+eax*4-0x100]
  425829:	jg     0x42584d
  42582b:	test   eax,eax
  42582d:	jne    0x425833
  42582f:	xor    edx,edx
  425831:	jmp    0x42584d
  425833:	mov    edx,DWORD PTR [ebp+0x8]
  425836:	mov    edx,DWORD PTR [ebp+0x8]
  425839:	mov    DWORD PTR [edx+eax*4-0x100],ecx
  425840:	mov    edx,DWORD PTR [ebp+0x8]
  425843:	push   edx
  425844:	dec    eax
  425845:	call   0x4257f8
  42584a:	pop    ecx
  42584b:	mov    edx,eax
  42584d:	mov    eax,edx
  42584f:	pop    esi
  425850:	pop    ebx
  425851:	pop    ebp
  425852:	ret    
  425853:	nop
  425854:	push   ebp
  425855:	mov    ebp,esp
  425857:	add    esp,0xfffffcdc
  42585d:	push   ebx
  42585e:	push   esi
  42585f:	push   edi
  425860:	mov    DWORD PTR [ebp-0x308],ecx
  425866:	mov    ebx,edx
  425868:	mov    DWORD PTR [ebp-0x304],eax
  42586e:	test   BYTE PTR [ebx+0x1],0x20
  425872:	jne    0x42587e
  425874:	mov    eax,0x80070057
  425879:	call   0x425494
  42587e:	mov    ax,WORD PTR [ebx]
  425881:	mov    edx,eax
  425883:	and    dx,0xfff
  425888:	cmp    dx,0xc
  42588c:	jne    0x425a1a
  425892:	test   ah,0x40
  425895:	je     0x4258a4
  425897:	mov    eax,DWORD PTR [ebx+0x8]
  42589a:	mov    eax,DWORD PTR [eax]
  42589c:	mov    DWORD PTR [ebp-0x318],eax
  4258a2:	jmp    0x4258ad
  4258a4:	mov    eax,DWORD PTR [ebx+0x8]
  4258a7:	mov    DWORD PTR [ebp-0x318],eax
  4258ad:	mov    eax,DWORD PTR [ebp-0x318]
  4258b3:	movzx  eax,WORD PTR [eax]
  4258b6:	mov    DWORD PTR [ebp-0x310],eax
  4258bc:	mov    ebx,DWORD PTR [ebp-0x310]
  4258c2:	dec    ebx
  4258c3:	test   ebx,ebx
  4258c5:	jl     0x425932
  4258c7:	inc    ebx
  4258c8:	xor    edi,edi
  4258ca:	lea    esi,[ebp-0x300]
  4258d0:	mov    eax,esi
  4258d2:	mov    DWORD PTR [ebp-0x324],eax
  4258d8:	mov    eax,DWORD PTR [ebp-0x324]
  4258de:	add    eax,0x4
  4258e1:	push   eax
  4258e2:	lea    eax,[edi+0x1]
  4258e5:	push   eax
  4258e6:	mov    eax,DWORD PTR [ebp-0x318]
  4258ec:	push   eax
  4258ed:	call   0x424698
  4258f2:	call   0x425494
  4258f7:	lea    eax,[ebp-0x30c]
  4258fd:	push   eax
  4258fe:	lea    eax,[edi+0x1]
  425901:	push   eax
  425902:	mov    eax,DWORD PTR [ebp-0x318]
  425908:	push   eax
  425909:	call   0x4246a0
  42590e:	call   0x425494
  425913:	mov    eax,DWORD PTR [ebp-0x324]
  425919:	mov    edx,DWORD PTR [ebp-0x30c]
  42591f:	sub    edx,DWORD PTR [eax+0x4]
  425922:	inc    edx
  425923:	mov    eax,DWORD PTR [ebp-0x324]
  425929:	mov    DWORD PTR [eax],edx
  42592b:	inc    edi
  42592c:	add    esi,0x8
  42592f:	dec    ebx
  425930:	jne    0x4258d0
  425932:	lea    eax,[ebp-0x300]
  425938:	push   eax
  425939:	mov    eax,DWORD PTR [ebp-0x310]
  42593f:	push   eax
  425940:	push   0xc
  425942:	call   0x424690
  425947:	mov    DWORD PTR [ebp-0x314],eax
  42594d:	cmp    DWORD PTR [ebp-0x314],0x0
  425954:	jne    0x42595b
  425956:	call   0x4251ec
  42595b:	mov    eax,DWORD PTR [ebp-0x304]
  425961:	call   0x4257ac
  425966:	mov    eax,DWORD PTR [ebp-0x304]
  42596c:	mov    WORD PTR [eax],0x200c
  425971:	mov    eax,DWORD PTR [ebp-0x304]
  425977:	mov    edx,DWORD PTR [ebp-0x314]
  42597d:	mov    DWORD PTR [eax+0x8],edx
  425980:	mov    ebx,DWORD PTR [ebp-0x310]
  425986:	dec    ebx
  425987:	test   ebx,ebx
  425989:	jl     0x4259a5
  42598b:	inc    ebx
  42598c:	lea    eax,[ebp-0x2fc]
  425992:	lea    edx,[ebp-0x100]
  425998:	mov    ecx,DWORD PTR [eax]
  42599a:	mov    DWORD PTR [edx],ecx
  42599c:	add    edx,0x4
  42599f:	add    eax,0x8
  4259a2:	dec    ebx
  4259a3:	jne    0x425998
  4259a5:	push   ebp
  4259a6:	mov    ebx,DWORD PTR [ebp-0x310]
  4259ac:	dec    ebx
  4259ad:	mov    eax,ebx
  4259af:	call   0x4257c8
  4259b4:	pop    ecx
  4259b5:	test   al,al
  4259b7:	je     0x425a0b
  4259b9:	lea    eax,[ebp-0x31c]
  4259bf:	push   eax
  4259c0:	lea    eax,[ebp-0x100]
  4259c6:	push   eax
  4259c7:	mov    eax,DWORD PTR [ebp-0x318]
  4259cd:	push   eax
  4259ce:	call   0x4246a8
  4259d3:	call   0x425494
  4259d8:	lea    eax,[ebp-0x320]
  4259de:	push   eax
  4259df:	lea    eax,[ebp-0x100]
  4259e5:	push   eax
  4259e6:	mov    eax,DWORD PTR [ebp-0x314]
  4259ec:	push   eax
  4259ed:	call   0x4246a8
  4259f2:	call   0x425494
  4259f7:	mov    eax,DWORD PTR [ebp-0x31c]
  4259fd:	mov    edx,eax
  4259ff:	mov    eax,DWORD PTR [ebp-0x320]
  425a05:	call   DWORD PTR [ebp-0x308]
  425a0b:	push   ebp
  425a0c:	mov    eax,ebx
  425a0e:	call   0x4257f8
  425a13:	pop    ecx
  425a14:	test   al,al
  425a16:	jne    0x4259a5
  425a18:	jmp    0x425a2c
  425a1a:	push   ebx
  425a1b:	mov    eax,DWORD PTR [ebp-0x304]
  425a21:	push   eax
  425a22:	call   0x42423c
  425a27:	call   0x425494
  425a2c:	pop    edi
  425a2d:	pop    esi
  425a2e:	pop    ebx
  425a2f:	mov    esp,ebp
  425a31:	pop    ebp
  425a32:	ret    
  425a33:	nop
  425a34:	call   0x425ae8
  425a39:	ret    
  425a3a:	mov    eax,eax
  425a3c:	push   ebx
  425a3d:	push   esi
  425a3e:	push   edi
  425a3f:	push   ecx
  425a40:	mov    esi,edx
  425a42:	mov    ebx,eax
  425a44:	test   WORD PTR [ebx],0xbfe8
  425a49:	je     0x425a52
  425a4b:	mov    eax,ebx
  425a4d:	call   0x425730
  425a52:	mov    di,WORD PTR [esi]
  425a55:	cmp    di,0x14
  425a59:	jae    0x425a69
  425a5b:	push   esi
  425a5c:	push   ebx
  425a5d:	call   0x42423c
  425a62:	call   0x425494
  425a67:	jmp    0x425ae2
  425a69:	cmp    di,0x100
  425a6e:	jne    0x425a87
  425a70:	mov    WORD PTR [ebx],0x100
  425a75:	xor    eax,eax
  425a77:	mov    DWORD PTR [ebx+0x8],eax
  425a7a:	lea    eax,[ebx+0x8]
  425a7d:	mov    edx,DWORD PTR [esi+0x8]
  425a80:	call   0x403d00
  425a85:	jmp    0x425ae2
  425a87:	cmp    di,0x101
  425a8c:	jne    0x425aa1
  425a8e:	mov    WORD PTR [ebx],di
  425a91:	mov    eax,DWORD PTR [esi+0x8]
  425a94:	mov    DWORD PTR [ebx+0x8],eax
  425a97:	mov    eax,ebx
  425a99:	call   DWORD PTR ds:0x42f818
  425a9f:	jmp    0x425ae2
  425aa1:	test   di,0x2000
  425aa6:	je     0x425ab8
  425aa8:	mov    ecx,0x425a34
  425aad:	mov    edx,esi
  425aaf:	mov    eax,ebx
  425ab1:	call   0x425854
  425ab6:	jmp    0x425ae2
  425ab8:	mov    edx,esp
  425aba:	mov    eax,edi
  425abc:	call   0x427068
  425ac1:	test   al,al
  425ac3:	je     0x425ad6
  425ac5:	push   0x0
  425ac7:	mov    ecx,esi
  425ac9:	mov    edx,ebx
  425acb:	mov    eax,DWORD PTR [esp+0x4]
  425acf:	mov    ebx,DWORD PTR [eax]
  425ad1:	call   DWORD PTR [ebx+0x28]
  425ad4:	jmp    0x425ae2
  425ad6:	push   esi
  425ad7:	push   ebx
  425ad8:	call   0x42423c
  425add:	call   0x425494
  425ae2:	pop    edx
  425ae3:	pop    edi
  425ae4:	pop    esi
  425ae5:	pop    ebx
  425ae6:	ret    
  425ae7:	nop
  425ae8:	push   ebx
  425ae9:	push   esi
  425aea:	mov    ebx,edx
  425aec:	mov    esi,eax
  425aee:	cmp    esi,ebx
  425af0:	je     0x425b28
  425af2:	test   WORD PTR [ebx],0xbfe8
  425af7:	jne    0x425b1f
  425af9:	test   WORD PTR [esi],0xbfe8
  425afe:	je     0x425b07
  425b00:	mov    eax,esi
  425b02:	call   0x425730
  425b07:	mov    eax,DWORD PTR [ebx]
  425b09:	mov    DWORD PTR [esi],eax
  425b0b:	mov    eax,DWORD PTR [ebx+0x4]
  425b0e:	mov    DWORD PTR [esi+0x4],eax
  425b11:	mov    eax,DWORD PTR [ebx+0x8]
  425b14:	mov    DWORD PTR [esi+0x8],eax
  425b17:	mov    eax,DWORD PTR [ebx+0xc]
  425b1a:	mov    DWORD PTR [esi+0xc],eax
  425b1d:	jmp    0x425b28
  425b1f:	mov    edx,ebx
  425b21:	mov    eax,esi
  425b23:	call   0x425a3c
  425b28:	pop    esi
  425b29:	pop    ebx
  425b2a:	ret    
  425b2b:	nop
  425b2c:	push   ebp
  425b2d:	mov    ebp,esp
  425b2f:	push   ebx
  425b30:	mov    ebx,eax
  425b32:	mov    eax,ebx
  425b34:	call   0x404318
  425b39:	push   eax
  425b3a:	push   0x0
  425b3c:	push   0x400
  425b41:	push   DWORD PTR [ebp+0xc]
  425b44:	push   DWORD PTR [ebp+0x8]
  425b47:	mov    eax,ds:0x42e3dc
  425b4c:	mov    eax,DWORD PTR [eax]
  425b4e:	call   eax
  425b50:	mov    cx,0x8
  425b54:	mov    dx,0x6
  425b58:	call   0x4254a0
  425b5d:	pop    ebx
  425b5e:	pop    ebp
  425b5f:	ret    0x8
  425b62:	mov    eax,eax
  425b64:	push   ebp
  425b65:	mov    ebp,esp
  425b67:	push   ebx
  425b68:	mov    ebx,eax
  425b6a:	mov    eax,ebx
  425b6c:	call   0x404318
  425b71:	push   eax
  425b72:	push   0x0
  425b74:	push   0x400
  425b79:	push   DWORD PTR [ebp+0xc]
  425b7c:	push   DWORD PTR [ebp+0x8]
  425b7f:	mov    eax,ds:0x42e480
  425b84:	mov    eax,DWORD PTR [eax]
  425b86:	call   eax
  425b88:	mov    cx,0x8
  425b8c:	mov    dx,0x7
  425b90:	call   0x4254a0
  425b95:	pop    ebx
  425b96:	pop    ebp
  425b97:	ret    0x8
  425b9a:	mov    eax,eax
  425b9c:	push   ebp
  425b9d:	mov    ebp,esp
  425b9f:	xor    ecx,ecx
  425ba1:	push   ecx
  425ba2:	push   ecx
  425ba3:	push   ecx
  425ba4:	push   ecx
  425ba5:	push   ebx
  425ba6:	push   esi
  425ba7:	mov    ebx,edx
  425ba9:	mov    esi,eax
  425bab:	xor    eax,eax
  425bad:	push   ebp
  425bae:	push   0x425c52
  425bb3:	push   DWORD PTR fs:[eax]
  425bb6:	mov    DWORD PTR fs:[eax],esp
  425bb9:	mov    eax,ebx
  425bbb:	call   0x404318
  425bc0:	push   eax
  425bc1:	push   0x0
  425bc3:	push   0x400
  425bc8:	push   esi
  425bc9:	mov    eax,ds:0x42e504
  425bce:	mov    eax,DWORD PTR [eax]
  425bd0:	call   eax
  425bd2:	mov    cx,0x8
  425bd6:	mov    dx,0xb
  425bda:	call   0x4254a0
  425bdf:	mov    al,ds:0x42e314
  425be4:	sub    al,0x1
  425be6:	jb     0x425c37
  425be8:	je     0x425bf0
  425bea:	dec    al
  425bec:	je     0x425c11
  425bee:	jmp    0x425c32
  425bf0:	lea    eax,[ebp-0x8]
  425bf3:	mov    edx,DWORD PTR [ebx]
  425bf5:	call   0x403f34
  425bfa:	mov    eax,DWORD PTR [ebp-0x8]
  425bfd:	lea    edx,[ebp-0x4]
  425c00:	call   0x41eed4
  425c05:	mov    edx,DWORD PTR [ebp-0x4]
  425c08:	mov    eax,ebx
  425c0a:	call   0x404464
  425c0f:	jmp    0x425c37
  425c11:	lea    eax,[ebp-0x10]
  425c14:	mov    edx,DWORD PTR [ebx]
  425c16:	call   0x403f34
  425c1b:	mov    eax,DWORD PTR [ebp-0x10]
  425c1e:	lea    edx,[ebp-0xc]
  425c21:	call   0x41ee84
  425c26:	mov    edx,DWORD PTR [ebp-0xc]
  425c29:	mov    eax,ebx
  425c2b:	call   0x404464
  425c30:	jmp    0x425c37
  425c32:	call   0x4250fc
  425c37:	xor    eax,eax
  425c39:	pop    edx
  425c3a:	pop    ecx
  425c3b:	pop    ecx
  425c3c:	mov    DWORD PTR fs:[eax],edx
  425c3f:	push   0x425c59
  425c44:	lea    eax,[ebp-0x10]
  425c47:	mov    edx,0x4
  425c4c:	call   0x403cd0
  425c51:	ret    
  425c52:	jmp    0x4036ac
  425c57:	jmp    0x425c44
  425c59:	pop    esi
  425c5a:	pop    ebx
  425c5b:	mov    esp,ebp
  425c5d:	pop    ebp
  425c5e:	ret    
  425c5f:	nop
  425c60:	push   ebp
  425c61:	mov    ebp,esp
  425c63:	add    esp,0xffffffe8
  425c66:	push   ebx
  425c67:	push   esi
  425c68:	xor    ecx,ecx
  425c6a:	mov    DWORD PTR [ebp-0x14],ecx
  425c6d:	mov    DWORD PTR [ebp-0x18],ecx
  425c70:	mov    esi,edx
  425c72:	mov    ebx,eax
  425c74:	xor    eax,eax
  425c76:	push   ebp
  425c77:	push   0x425d1f
  425c7c:	push   DWORD PTR fs:[eax]
  425c7f:	mov    DWORD PTR fs:[eax],esp
  425c82:	lea    eax,[ebp-0x10]
  425c85:	push   eax
  425c86:	call   0x42422c
  425c8b:	xor    eax,eax
  425c8d:	push   ebp
  425c8e:	push   0x425cfd
  425c93:	push   DWORD PTR fs:[eax]
  425c96:	mov    DWORD PTR fs:[eax],esp
  425c99:	push   0x8
  425c9b:	push   0x0
  425c9d:	push   0x400
  425ca2:	push   ebx
  425ca3:	lea    eax,[ebp-0x10]
  425ca6:	push   eax
  425ca7:	mov    eax,ds:0x42e510
  425cac:	mov    eax,DWORD PTR [eax]
  425cae:	call   eax
  425cb0:	mov    dx,WORD PTR [ebx]
  425cb3:	mov    cx,0x100
  425cb7:	call   0x4254a0
  425cbc:	lea    eax,[ebp-0x14]
  425cbf:	push   eax
  425cc0:	lea    eax,[ebp-0x18]
  425cc3:	mov    edx,DWORD PTR [ebp-0x8]
  425cc6:	call   0x404428
  425ccb:	mov    eax,DWORD PTR [ebp-0x18]
  425cce:	mov    ecx,0x7fffffff
  425cd3:	mov    edx,0x1
  425cd8:	call   0x404514
  425cdd:	mov    edx,DWORD PTR [ebp-0x14]
  425ce0:	mov    eax,esi
  425ce2:	call   0x403f34
  425ce7:	xor    eax,eax
  425ce9:	pop    edx
  425cea:	pop    ecx
  425ceb:	pop    ecx
  425cec:	mov    DWORD PTR fs:[eax],edx
  425cef:	push   0x425d04
  425cf4:	lea    eax,[ebp-0x10]
  425cf7:	call   0x4257ac
  425cfc:	ret    
  425cfd:	jmp    0x4036ac
  425d02:	jmp    0x425cf4
  425d04:	xor    eax,eax
  425d06:	pop    edx
  425d07:	pop    ecx
  425d08:	pop    ecx
  425d09:	mov    DWORD PTR fs:[eax],edx
  425d0c:	push   0x425d26
  425d11:	lea    eax,[ebp-0x18]
  425d14:	mov    edx,0x2
  425d19:	call   0x404330
  425d1e:	ret    
  425d1f:	jmp    0x4036ac
  425d24:	jmp    0x425d11
  425d26:	pop    esi
  425d27:	pop    ebx
  425d28:	mov    esp,ebp
  425d2a:	pop    ebp
  425d2b:	ret    
  425d2c:	push   ebp
  425d2d:	mov    ebp,esp
  425d2f:	add    esp,0xfffffff0
  425d32:	push   ebx
  425d33:	push   esi
  425d34:	mov    esi,edx
  425d36:	mov    ebx,eax
  425d38:	lea    eax,[ebp-0x10]
  425d3b:	push   eax
  425d3c:	call   0x42422c
  425d41:	xor    eax,eax
  425d43:	push   ebp
  425d44:	push   0x425d82
  425d49:	push   DWORD PTR fs:[eax]
  425d4c:	mov    DWORD PTR fs:[eax],esp
  425d4f:	mov    edx,ebx
  425d51:	lea    eax,[ebp-0x10]
  425d54:	call   0x425ae8
  425d59:	lea    eax,[ebp-0x10]
  425d5c:	call   DWORD PTR ds:0x42f814
  425d62:	lea    edx,[ebp-0x10]
  425d65:	mov    eax,esi
  425d67:	call   0x425e14
  425d6c:	xor    eax,eax
  425d6e:	pop    edx
  425d6f:	pop    ecx
  425d70:	pop    ecx
  425d71:	mov    DWORD PTR fs:[eax],edx
  425d74:	push   0x425d89
  425d79:	lea    eax,[ebp-0x10]
  425d7c:	call   0x4257ac
  425d81:	ret    
  425d82:	jmp    0x4036ac
  425d87:	jmp    0x425d79
  425d89:	pop    esi
  425d8a:	pop    ebx
  425d8b:	mov    esp,ebp
  425d8d:	pop    ebp
  425d8e:	ret    
  425d8f:	nop
  425d90:	push   ebp
  425d91:	mov    ebp,esp
  425d93:	add    esp,0xffffffe4
  425d96:	push   ebx
  425d97:	mov    DWORD PTR [ebp-0x4],edx
  425d9a:	mov    ebx,eax
  425d9c:	mov    eax,DWORD PTR [ebp-0x4]
  425d9f:	test   eax,eax
  425da1:	je     0x425da7
  425da3:	xor    edx,edx
  425da5:	mov    DWORD PTR [eax],edx
  425da7:	lea    edx,[ebp-0xc]
  425daa:	mov    ax,WORD PTR [ebx]
  425dad:	call   0x427068
  425db2:	mov    BYTE PTR [ebp-0x5],al
  425db5:	cmp    BYTE PTR [ebp-0x5],0x0
  425db9:	je     0x425e0c
  425dbb:	lea    eax,[ebp-0x1c]
  425dbe:	push   eax
  425dbf:	call   0x42422c
  425dc4:	xor    eax,eax
  425dc6:	push   ebp
  425dc7:	push   0x425e05
  425dcc:	push   DWORD PTR fs:[eax]
  425dcf:	mov    DWORD PTR fs:[eax],esp
  425dd2:	push   0x100
  425dd7:	mov    ecx,ebx
  425dd9:	lea    edx,[ebp-0x1c]
  425ddc:	mov    eax,DWORD PTR [ebp-0xc]
  425ddf:	mov    ebx,DWORD PTR [eax]
  425de1:	call   DWORD PTR [ebx+0x1c]
  425de4:	mov    eax,DWORD PTR [ebp-0x4]
  425de7:	mov    edx,DWORD PTR [ebp-0x14]
  425dea:	call   0x403d00
  425def:	xor    eax,eax
  425df1:	pop    edx
  425df2:	pop    ecx
  425df3:	pop    ecx
  425df4:	mov    DWORD PTR fs:[eax],edx
  425df7:	push   0x425e0c
  425dfc:	lea    eax,[ebp-0x1c]
  425dff:	call   0x4257ac
  425e04:	ret    
  425e05:	jmp    0x4036ac
  425e0a:	jmp    0x425dfc
  425e0c:	mov    al,BYTE PTR [ebp-0x5]
  425e0f:	pop    ebx
  425e10:	mov    esp,ebp
  425e12:	pop    ebp
  425e13:	ret    
  425e14:	push   ebp
  425e15:	mov    ebp,esp
  425e17:	mov    ecx,0xe
  425e1c:	push   0x0
  425e1e:	push   0x0
  425e20:	dec    ecx
  425e21:	jne    0x425e1c
  425e23:	push   ecx
  425e24:	push   ebx
  425e25:	push   esi
  425e26:	mov    ebx,edx
  425e28:	mov    esi,eax
  425e2a:	xor    eax,eax
  425e2c:	push   ebp
  425e2d:	push   0x426341
  425e32:	push   DWORD PTR fs:[eax]
  425e35:	mov    DWORD PTR fs:[eax],esp
  425e38:	mov    ax,WORD PTR [ebx]
  425e3b:	movzx  edx,ax
  425e3e:	cmp    edx,0x14
  425e41:	ja     0x42607e
  425e47:	jmp    DWORD PTR [edx*4+0x425e4e]
  425e4e:	mov    ds:0xae00425e,al
  425e53:	pop    esi
  425e54:	inc    edx
  425e55:	add    dh,dl
  425e57:	pop    esi
  425e58:	inc    edx
  425e59:	add    cl,dh
  425e5b:	pop    esi
  425e5c:	inc    edx
  425e5d:	add    BYTE PTR [ebx],cl
  425e5f:	pop    edi
  425e60:	inc    edx
  425e61:	add    BYTE PTR [edi+ebx*2],ch
  425e64:	inc    edx
  425e65:	add    BYTE PTR [ebp+0x5f],cl
  425e68:	inc    edx
  425e69:	add    BYTE PTR [edx+0x5f],ch
  425e6c:	inc    edx
  425e6d:	add    BYTE PTR [edi+0x6500425f],al
  425e73:	pusha  
  425e74:	inc    edx
  425e75:	add    BYTE PTR [esi+0x60],bh
  425e78:	inc    edx
  425e79:	add    BYTE PTR [edi+ebx*2+0x60540042],ch
  425e80:	inc    edx
  425e81:	add    BYTE PTR [ebp+0x60],ah
  425e84:	inc    edx
  425e85:	add    BYTE PTR [esi+0x60],bh
  425e88:	inc    edx
  425e89:	add    BYTE PTR [esi+0x60],bh
  425e8c:	inc    edx
  425e8d:	add    bh,al
  425e8f:	pop    edi
  425e90:	inc    edx
  425e91:	add    dl,ah
  425e93:	pop    edi
  425e94:	inc    edx
  425e95:	add    dh,bh
  425e97:	pop    edi
  425e98:	inc    edx
  425e99:	add    BYTE PTR [ecx],bl
  425e9b:	pusha  
  425e9c:	inc    edx
  425e9d:	add    BYTE PTR [edi],dh
  425e9f:	pusha  
  425ea0:	inc    edx
  425ea1:	add    BYTE PTR [ebx-0x21fc173a],cl
  425ea7:	std    
  425ea8:	(bad)  
  425ea9:	jmp    0x4262f2
  425eae:	cmp    BYTE PTR ds:0x42e30c,0x0
  425eb5:	je     0x425ec4
  425eb7:	mov    dx,0x100
  425ebb:	mov    ax,0x1
  425ebf:	call   0x425060
  425ec4:	mov    eax,esi
  425ec6:	mov    edx,DWORD PTR ds:0x42e310
  425ecc:	call   0x403d00
  425ed1:	jmp    0x4262f2
  425ed6:	lea    edx,[ebp-0x4]
  425ed9:	movsx  eax,WORD PTR [ebx+0x8]
  425edd:	call   0x41f0c0
  425ee2:	mov    edx,DWORD PTR [ebp-0x4]
  425ee5:	mov    eax,esi
  425ee7:	call   0x403d00
  425eec:	jmp    0x4262f2
  425ef1:	lea    edx,[ebp-0x8]
  425ef4:	mov    eax,DWORD PTR [ebx+0x8]
  425ef7:	call   0x41f0c0
  425efc:	mov    edx,DWORD PTR [ebp-0x8]
  425eff:	mov    eax,esi
  425f01:	call   0x403d00
  425f06:	jmp    0x4262f2
  425f0b:	fld    DWORD PTR [ebx+0x8]
  425f0e:	add    esp,0xfffffff4
  425f11:	fstp   TBYTE PTR [esp]
  425f14:	fwait
  425f15:	lea    eax,[ebp-0xc]
  425f18:	call   0x420324
  425f1d:	mov    edx,DWORD PTR [ebp-0xc]
  425f20:	mov    eax,esi
  425f22:	call   0x403d00
  425f27:	jmp    0x4262f2
  425f2c:	fld    QWORD PTR [ebx+0x8]
  425f2f:	add    esp,0xfffffff4
  425f32:	fstp   TBYTE PTR [esp]
  425f35:	fwait
  425f36:	lea    eax,[ebp-0x10]
  425f39:	call   0x420324
  425f3e:	mov    edx,DWORD PTR [ebp-0x10]
  425f41:	mov    eax,esi
  425f43:	call   0x403d00
  425f48:	jmp    0x4262f2
  425f4d:	push   DWORD PTR [ebx+0xc]
  425f50:	push   DWORD PTR [ebx+0x8]
  425f53:	lea    eax,[ebp-0x14]
  425f56:	call   0x425b2c
  425f5b:	mov    edx,DWORD PTR [ebp-0x14]
  425f5e:	mov    eax,esi
  425f60:	call   0x403f34
  425f65:	jmp    0x4262f2
  425f6a:	push   DWORD PTR [ebx+0xc]
  425f6d:	push   DWORD PTR [ebx+0x8]
  425f70:	lea    eax,[ebp-0x18]
  425f73:	call   0x425b64
  425f78:	mov    edx,DWORD PTR [ebp-0x18]
  425f7b:	mov    eax,esi
  425f7d:	call   0x403f34
  425f82:	jmp    0x4262f2
  425f87:	lea    eax,[ebp-0x1c]
  425f8a:	push   eax
  425f8b:	mov    eax,DWORD PTR [ebx+0x8]
  425f8e:	mov    ecx,0x7fffffff
  425f93:	mov    edx,0x1
  425f98:	call   0x404514
  425f9d:	mov    edx,DWORD PTR [ebp-0x1c]
  425fa0:	mov    eax,esi
  425fa2:	call   0x403f34
  425fa7:	jmp    0x4262f2
  425fac:	lea    edx,[ebp-0x20]
  425faf:	mov    ax,WORD PTR [ebx+0x8]
  425fb3:	call   0x425b9c
  425fb8:	mov    edx,DWORD PTR [ebp-0x20]
  425fbb:	mov    eax,esi
  425fbd:	call   0x403f34
  425fc2:	jmp    0x4262f2
  425fc7:	lea    edx,[ebp-0x24]
  425fca:	movsx  eax,BYTE PTR [ebx+0x8]
  425fce:	call   0x41f0c0
  425fd3:	mov    edx,DWORD PTR [ebp-0x24]
  425fd6:	mov    eax,esi
  425fd8:	call   0x403d00
  425fdd:	jmp    0x4262f2
  425fe2:	lea    edx,[ebp-0x28]
  425fe5:	xor    eax,eax
  425fe7:	mov    al,BYTE PTR [ebx+0x8]
  425fea:	call   0x41f0c0
  425fef:	mov    edx,DWORD PTR [ebp-0x28]
  425ff2:	mov    eax,esi
  425ff4:	call   0x403d00
  425ff9:	jmp    0x4262f2
  425ffe:	lea    edx,[ebp-0x2c]
  426001:	movzx  eax,WORD PTR [ebx+0x8]
  426005:	call   0x41f0c0
  42600a:	mov    edx,DWORD PTR [ebp-0x2c]
  42600d:	mov    eax,esi
  42600f:	call   0x403d00
  426014:	jmp    0x4262f2
  426019:	mov    eax,DWORD PTR [ebx+0x8]
  42601c:	xor    edx,edx
  42601e:	push   edx
  42601f:	push   eax
  426020:	lea    eax,[ebp-0x30]
  426023:	call   0x41f1ac
  426028:	mov    edx,DWORD PTR [ebp-0x30]
  42602b:	mov    eax,esi
  42602d:	call   0x403d00
  426032:	jmp    0x4262f2
  426037:	push   DWORD PTR [ebx+0xc]
  42603a:	push   DWORD PTR [ebx+0x8]
  42603d:	lea    eax,[ebp-0x34]
  426040:	call   0x41f1ac
  426045:	mov    edx,DWORD PTR [ebp-0x34]
  426048:	mov    eax,esi
  42604a:	call   0x403d00
  42604f:	jmp    0x4262f2
  426054:	mov    eax,DWORD PTR [ebx+0x8]
  426057:	mov    edx,eax
  426059:	mov    eax,esi
  42605b:	call   0x425e14
  426060:	jmp    0x4262f2
  426065:	lea    edx,[ebp-0x38]
  426068:	mov    eax,ebx
  42606a:	call   0x425c60
  42606f:	mov    edx,DWORD PTR [ebp-0x38]
  426072:	mov    eax,esi
  426074:	call   0x403d00
  426079:	jmp    0x4262f2
  42607e:	mov    edx,eax
  426080:	sub    dx,0x100
  426085:	je     0x42608e
  426087:	dec    dx
  42608a:	je     0x42609d
  42608c:	jmp    0x4260b6
  42608e:	mov    eax,esi
  426090:	mov    edx,DWORD PTR [ebx+0x8]
  426093:	call   0x403d00
  426098:	jmp    0x4262f2
  42609d:	lea    edx,[ebp-0x3c]
  4260a0:	mov    eax,ebx
  4260a2:	call   0x425d2c
  4260a7:	mov    edx,DWORD PTR [ebp-0x3c]
  4260aa:	mov    eax,esi
  4260ac:	call   0x403d00
  4260b1:	jmp    0x4262f2
  4260b6:	test   ah,0x40
  4260b9:	je     0x4262ca
  4260bf:	movzx  eax,ax
  4260c2:	and    eax,0xffffbfff
  4260c7:	cmp    eax,0x14
  4260ca:	ja     0x4262b4
  4260d0:	jmp    DWORD PTR [eax*4+0x4260d7]
  4260d7:	mov    ah,0x62
  4260d9:	inc    edx
  4260da:	add    BYTE PTR [edx+eiz*2+0x612b0042],dh
  4260e1:	inc    edx
  4260e2:	add    BYTE PTR [eax+0x61],cl
  4260e5:	inc    edx
  4260e6:	add    BYTE PTR [ecx+eiz*2+0x42],ah
  4260ea:	add    BYTE PTR [edi-0x55ffbd9f],al
  4260f0:	popa   
  4260f1:	inc    edx
  4260f2:	add    cl,cl
  4260f4:	popa   
  4260f5:	inc    edx
  4260f6:	add    al,ch
  4260f8:	popa   
  4260f9:	inc    edx
  4260fa:	add    BYTE PTR [edx+eiz*2+0x62b40042],dh
  426101:	inc    edx
  426102:	add    cl,bh
  426104:	popa   
  426105:	inc    edx
  426106:	add    BYTE PTR [esi-0x4bffbd9e],ah
  42610c:	bound  eax,QWORD PTR [edx+0x0]
  42610f:	mov    ah,0x62
  426111:	inc    edx
  426112:	add    BYTE PTR [edx+eiz*2+0x62160042],dh
  426119:	inc    edx
  42611a:	add    BYTE PTR [ebx],dh
  42611c:	bound  eax,QWORD PTR [edx+0x0]
  42611f:	push   eax
  426120:	bound  eax,QWORD PTR [edx+0x0]
  426123:	ins    DWORD PTR es:[edi],dx
  426124:	bound  eax,QWORD PTR [edx+0x0]
  426127:	mov    ah,BYTE PTR [edx+0x42]
  42612a:	add    BYTE PTR [ebp+0x438bc055],cl
  426130:	or     BYTE PTR [edi],cl
  426132:	mov    edi,0x8f87e800
  426137:	(bad)  
  426138:	dec    DWORD PTR [ebx-0x39743fab]
  42613e:	call   0x403d00
  426143:	jmp    0x4262f2
  426148:	lea    edx,[ebp-0x44]
  42614b:	mov    eax,DWORD PTR [ebx+0x8]
  42614e:	mov    eax,DWORD PTR [eax]
  426150:	call   0x41f0c0
  426155:	mov    edx,DWORD PTR [ebp-0x44]
  426158:	mov    eax,esi
  42615a:	call   0x403d00
  42615f:	jmp    0x4262f2
  426164:	mov    eax,DWORD PTR [ebx+0x8]
  426167:	fld    DWORD PTR [eax]
  426169:	add    esp,0xfffffff4
  42616c:	fstp   TBYTE PTR [esp]
  42616f:	fwait
  426170:	lea    eax,[ebp-0x48]
  426173:	call   0x420324
  426178:	mov    edx,DWORD PTR [ebp-0x48]
  42617b:	mov    eax,esi
  42617d:	call   0x403d00
  426182:	jmp    0x4262f2
  426187:	mov    eax,DWORD PTR [ebx+0x8]
  42618a:	fld    QWORD PTR [eax]
  42618c:	add    esp,0xfffffff4
  42618f:	fstp   TBYTE PTR [esp]
  426192:	fwait
  426193:	lea    eax,[ebp-0x4c]
  426196:	call   0x420324
  42619b:	mov    edx,DWORD PTR [ebp-0x4c]
  42619e:	mov    eax,esi
  4261a0:	call   0x403d00
  4261a5:	jmp    0x4262f2
  4261aa:	mov    eax,DWORD PTR [ebx+0x8]
  4261ad:	push   DWORD PTR [eax+0x4]
  4261b0:	push   DWORD PTR [eax]
  4261b2:	lea    eax,[ebp-0x50]
  4261b5:	call   0x425b2c
  4261ba:	mov    edx,DWORD PTR [ebp-0x50]
  4261bd:	mov    eax,esi
  4261bf:	call   0x403f34
  4261c4:	jmp    0x4262f2
  4261c9:	mov    eax,DWORD PTR [ebx+0x8]
  4261cc:	push   DWORD PTR [eax+0x4]
  4261cf:	push   DWORD PTR [eax]
  4261d1:	lea    eax,[ebp-0x54]
  4261d4:	call   0x425b64
  4261d9:	mov    edx,DWORD PTR [ebp-0x54]
  4261dc:	mov    eax,esi
  4261de:	call   0x403f34
  4261e3:	jmp    0x4262f2
  4261e8:	mov    eax,esi
  4261ea:	mov    edx,DWORD PTR [ebx+0x8]
  4261ed:	mov    edx,DWORD PTR [edx]
  4261ef:	call   0x403ed4
  4261f4:	jmp    0x4262f2
  4261f9:	lea    edx,[ebp-0x58]
  4261fc:	mov    eax,DWORD PTR [ebx+0x8]
  4261ff:	mov    ax,WORD PTR [eax]
  426202:	call   0x425b9c
  426207:	mov    edx,DWORD PTR [ebp-0x58]
  42620a:	mov    eax,esi
  42620c:	call   0x403f34
  426211:	jmp    0x4262f2
  426216:	lea    edx,[ebp-0x5c]
  426219:	mov    eax,DWORD PTR [ebx+0x8]
  42621c:	movsx  eax,BYTE PTR [eax]
  42621f:	call   0x41f0c0
  426224:	mov    edx,DWORD PTR [ebp-0x5c]
  426227:	mov    eax,esi
  426229:	call   0x403d00
  42622e:	jmp    0x4262f2
  426233:	lea    edx,[ebp-0x60]
  426236:	mov    eax,DWORD PTR [ebx+0x8]
  426239:	movzx  eax,BYTE PTR [eax]
  42623c:	call   0x41f0c0
  426241:	mov    edx,DWORD PTR [ebp-0x60]
  426244:	mov    eax,esi
  426246:	call   0x403d00
  42624b:	jmp    0x4262f2
  426250:	lea    edx,[ebp-0x64]
  426253:	mov    eax,DWORD PTR [ebx+0x8]
  426256:	movzx  eax,WORD PTR [eax]
  426259:	call   0x41f0c0
  42625e:	mov    edx,DWORD PTR [ebp-0x64]
  426261:	mov    eax,esi
  426263:	call   0x403d00
  426268:	jmp    0x4262f2
  42626d:	mov    eax,DWORD PTR [ebx+0x8]
  426270:	mov    eax,DWORD PTR [eax]
  426272:	xor    edx,edx
  426274:	push   edx
  426275:	push   eax
  426276:	lea    eax,[ebp-0x68]
  426279:	call   0x41f1ac
  42627e:	mov    edx,DWORD PTR [ebp-0x68]
  426281:	mov    eax,esi
  426283:	call   0x403d00
  426288:	jmp    0x4262f2
  42628a:	mov    eax,DWORD PTR [ebx+0x8]
  42628d:	push   DWORD PTR [eax+0x4]
  426290:	push   DWORD PTR [eax]
  426292:	lea    eax,[ebp-0x6c]
  426295:	call   0x41f1ac
  42629a:	mov    edx,DWORD PTR [ebp-0x6c]
  42629d:	mov    eax,esi
  42629f:	call   0x403d00
  4262a4:	jmp    0x4262f2
  4262a6:	mov    eax,DWORD PTR [ebx+0x8]
  4262a9:	mov    edx,eax
  4262ab:	mov    eax,esi
  4262ad:	call   0x425e14
  4262b2:	jmp    0x4262f2
  4262b4:	lea    edx,[ebp-0x70]
  4262b7:	mov    eax,ebx
  4262b9:	call   0x425c60
  4262be:	mov    edx,DWORD PTR [ebp-0x70]
  4262c1:	mov    eax,esi
  4262c3:	call   0x403d00
  4262c8:	jmp    0x4262f2
  4262ca:	mov    eax,esi
  4262cc:	call   0x403cac
  4262d1:	mov    edx,eax
  4262d3:	mov    eax,ebx
  4262d5:	call   0x425d90
  4262da:	test   al,al
  4262dc:	jne    0x4262f2
  4262de:	lea    edx,[ebp-0x74]
  4262e1:	mov    eax,ebx
  4262e3:	call   0x425c60
  4262e8:	mov    edx,DWORD PTR [ebp-0x74]
  4262eb:	mov    eax,esi
  4262ed:	call   0x403d00
  4262f2:	xor    eax,eax
  4262f4:	pop    edx
  4262f5:	pop    ecx
  4262f6:	pop    ecx
  4262f7:	mov    DWORD PTR fs:[eax],edx
  4262fa:	push   0x426348
  4262ff:	lea    eax,[ebp-0x74]
  426302:	mov    edx,0x7
  426307:	call   0x403cd0
  42630c:	lea    eax,[ebp-0x58]
  42630f:	mov    edx,0x3
  426314:	call   0x404330
  426319:	lea    eax,[ebp-0x4c]
  42631c:	mov    edx,0xb
  426321:	call   0x403cd0
  426326:	lea    eax,[ebp-0x20]
  426329:	mov    edx,0x4
  42632e:	call   0x404330
  426333:	lea    eax,[ebp-0x10]
  426336:	mov    edx,0x4
  42633b:	call   0x403cd0
  426340:	ret    
  426341:	jmp    0x4036ac
  426346:	jmp    0x4262ff
  426348:	pop    esi
  426349:	pop    ebx
  42634a:	mov    esp,ebp
  42634c:	pop    ebp
  42634d:	ret    
  42634e:	mov    eax,eax
  426350:	push   ebp
  426351:	mov    ebp,esp
  426353:	add    esp,0xffffffec
  426356:	push   ebx
  426357:	push   esi
  426358:	xor    ecx,ecx
  42635a:	mov    DWORD PTR [ebp-0x14],ecx
  42635d:	mov    esi,edx
  42635f:	mov    ebx,eax
  426361:	xor    eax,eax
  426363:	push   ebp
  426364:	push   0x4263fa
  426369:	push   DWORD PTR fs:[eax]
  42636c:	mov    DWORD PTR fs:[eax],esp
  42636f:	lea    eax,[ebp-0x10]
  426372:	push   eax
  426373:	call   0x42422c
  426378:	xor    eax,eax
  42637a:	push   ebp
  42637b:	push   0x4263dd
  426380:	push   DWORD PTR fs:[eax]
  426383:	mov    DWORD PTR fs:[eax],esp
  426386:	push   0x8
  426388:	push   0x0
  42638a:	push   0x400
  42638f:	push   ebx
  426390:	lea    eax,[ebp-0x10]
  426393:	push   eax
  426394:	mov    eax,ds:0x42e510
  426399:	mov    eax,DWORD PTR [eax]
  42639b:	call   eax
  42639d:	mov    dx,WORD PTR [ebx]
  4263a0:	mov    cx,0x8
  4263a4:	call   0x4254a0
  4263a9:	push   esi
  4263aa:	lea    eax,[ebp-0x14]
  4263ad:	mov    edx,DWORD PTR [ebp-0x8]
  4263b0:	call   0x404428
  4263b5:	mov    eax,DWORD PTR [ebp-0x14]
  4263b8:	mov    ecx,0x7fffffff
  4263bd:	mov    edx,0x1
  4263c2:	call   0x404514
  4263c7:	xor    eax,eax
  4263c9:	pop    edx
  4263ca:	pop    ecx
  4263cb:	pop    ecx
  4263cc:	mov    DWORD PTR fs:[eax],edx
  4263cf:	push   0x4263e4
  4263d4:	lea    eax,[ebp-0x10]
  4263d7:	call   0x4257ac
  4263dc:	ret    
  4263dd:	jmp    0x4036ac
  4263e2:	jmp    0x4263d4
  4263e4:	xor    eax,eax
  4263e6:	pop    edx
  4263e7:	pop    ecx
  4263e8:	pop    ecx
  4263e9:	mov    DWORD PTR fs:[eax],edx
  4263ec:	push   0x426401
  4263f1:	lea    eax,[ebp-0x14]
  4263f4:	call   0x404318
  4263f9:	ret    
  4263fa:	jmp    0x4036ac
  4263ff:	jmp    0x4263f1
  426401:	pop    esi
  426402:	pop    ebx
  426403:	mov    esp,ebp
  426405:	pop    ebp
  426406:	ret    
  426407:	nop
  426408:	push   ebp
  426409:	mov    ebp,esp
  42640b:	add    esp,0xfffffff0
  42640e:	push   ebx
  42640f:	push   esi
  426410:	mov    esi,edx
  426412:	mov    ebx,eax
  426414:	lea    eax,[ebp-0x10]
  426417:	push   eax
  426418:	call   0x42422c
  42641d:	xor    eax,eax
  42641f:	push   ebp
  426420:	push   0x42645e
  426425:	push   DWORD PTR fs:[eax]
  426428:	mov    DWORD PTR fs:[eax],esp
  42642b:	mov    edx,ebx
  42642d:	lea    eax,[ebp-0x10]
  426430:	call   0x425ae8
  426435:	lea    eax,[ebp-0x10]
  426438:	call   DWORD PTR ds:0x42f814
  42643e:	lea    edx,[ebp-0x10]
  426441:	mov    eax,esi
  426443:	call   0x426534
  426448:	xor    eax,eax
  42644a:	pop    edx
  42644b:	pop    ecx
  42644c:	pop    ecx
  42644d:	mov    DWORD PTR fs:[eax],edx
  426450:	push   0x426465
  426455:	lea    eax,[ebp-0x10]
  426458:	call   0x4257ac
  42645d:	ret    
  42645e:	jmp    0x4036ac
  426463:	jmp    0x426455
  426465:	pop    esi
  426466:	pop    ebx
  426467:	mov    esp,ebp
  426469:	pop    ebp
  42646a:	ret    
  42646b:	nop
  42646c:	push   ebp
  42646d:	mov    ebp,esp
  42646f:	add    esp,0xffffffe0
  426472:	push   ebx
  426473:	xor    ecx,ecx
  426475:	mov    DWORD PTR [ebp-0x20],ecx
  426478:	mov    DWORD PTR [ebp-0x4],edx
  42647b:	mov    ebx,eax
  42647d:	mov    eax,DWORD PTR [ebp-0x4]
  426480:	test   eax,eax
  426482:	je     0x426488
  426484:	xor    edx,edx
  426486:	mov    DWORD PTR [eax],edx
  426488:	xor    eax,eax
  42648a:	push   ebp
  42648b:	push   0x426524
  426490:	push   DWORD PTR fs:[eax]
  426493:	mov    DWORD PTR fs:[eax],esp
  426496:	lea    edx,[ebp-0xc]
  426499:	mov    ax,WORD PTR [ebx]
  42649c:	call   0x427068
  4264a1:	mov    BYTE PTR [ebp-0x5],al
  4264a4:	cmp    BYTE PTR [ebp-0x5],0x0
  4264a8:	je     0x42650e
  4264aa:	lea    eax,[ebp-0x1c]
  4264ad:	push   eax
  4264ae:	call   0x42422c
  4264b3:	xor    eax,eax
  4264b5:	push   ebp
  4264b6:	push   0x426507
  4264bb:	push   DWORD PTR fs:[eax]
  4264be:	mov    DWORD PTR fs:[eax],esp
  4264c1:	push   0x8
  4264c3:	mov    ecx,ebx
  4264c5:	lea    edx,[ebp-0x1c]
  4264c8:	mov    eax,DWORD PTR [ebp-0xc]
  4264cb:	mov    ebx,DWORD PTR [eax]
  4264cd:	call   DWORD PTR [ebx+0x1c]
  4264d0:	mov    eax,DWORD PTR [ebp-0x4]
  4264d3:	push   eax
  4264d4:	lea    eax,[ebp-0x20]
  4264d7:	mov    edx,DWORD PTR [ebp-0x14]
  4264da:	call   0x404428
  4264df:	mov    eax,DWORD PTR [ebp-0x20]
  4264e2:	mov    ecx,0x7fffffff
  4264e7:	mov    edx,0x1
  4264ec:	call   0x404514
  4264f1:	xor    eax,eax
  4264f3:	pop    edx
  4264f4:	pop    ecx
  4264f5:	pop    ecx
  4264f6:	mov    DWORD PTR fs:[eax],edx
  4264f9:	push   0x42650e
  4264fe:	lea    eax,[ebp-0x1c]
  426501:	call   0x4257ac
  426506:	ret    
  426507:	jmp    0x4036ac
  42650c:	jmp    0x4264fe
  42650e:	xor    eax,eax
  426510:	pop    edx
  426511:	pop    ecx
  426512:	pop    ecx
  426513:	mov    DWORD PTR fs:[eax],edx
  426516:	push   0x42652b
  42651b:	lea    eax,[ebp-0x20]
  42651e:	call   0x404318
  426523:	ret    
  426524:	jmp    0x4036ac
  426529:	jmp    0x42651b
  42652b:	mov    al,BYTE PTR [ebp-0x5]
  42652e:	pop    ebx
  42652f:	mov    esp,ebp
  426531:	pop    ebp
  426532:	ret    
  426533:	nop
  426534:	push   ebp
  426535:	mov    ebp,esp
  426537:	mov    ecx,0xe
  42653c:	push   0x0
  42653e:	push   0x0
  426540:	dec    ecx
  426541:	jne    0x42653c
  426543:	push   ebx
  426544:	push   esi
  426545:	mov    ebx,edx
  426547:	mov    esi,eax
  426549:	xor    eax,eax
  42654b:	push   ebp
  42654c:	push   0x426a7a
  426551:	push   DWORD PTR fs:[eax]
  426554:	mov    DWORD PTR fs:[eax],esp
  426557:	mov    ax,WORD PTR [ebx]
  42655a:	movzx  edx,ax
  42655d:	cmp    edx,0x14
  426560:	ja     0x426790
  426566:	jmp    DWORD PTR [edx*4+0x42656d]
  42656d:	shl    DWORD PTR [ebp+0x42],0x0
  426571:	int    0x65
  426573:	inc    edx
  426574:	add    ch,dh
  426576:	gs inc edx
  426578:	add    BYTE PTR [eax],dl
  42657a:	inc    dx
  42657c:	add    BYTE PTR [edx],ch
  42657e:	inc    dx
  426580:	add    BYTE PTR [ebx+0x66],cl
  426583:	inc    edx
  426584:	add    BYTE PTR [esi+eiz*2+0x42],ch
  426588:	add    BYTE PTR [ecx-0x59ffbd9a],cl
  42658e:	inc    dx
  426590:	add    BYTE PTR [edi+0x67],dh
  426593:	inc    edx
  426594:	add    BYTE PTR [eax-0x41ffbd99],dl
  42659a:	inc    dx
  42659c:	add    BYTE PTR [esi+0x67],ah
  42659f:	inc    edx
  4265a0:	add    BYTE PTR [edi+0x67],dh
  4265a3:	inc    edx
  4265a4:	add    BYTE PTR [eax-0x6fffbd99],dl
  4265aa:	addr16 inc edx
  4265ac:	add    cl,bl
  4265ae:	inc    dx
  4265b0:	add    ah,dh
  4265b2:	inc    dx
  4265b4:	add    BYTE PTR [eax],dl
  4265b6:	addr16 inc edx
  4265b8:	add    BYTE PTR [ebx],ch
  4265ba:	addr16 inc edx
  4265bc:	add    BYTE PTR [ecx+0x67],cl
  4265bf:	inc    edx
  4265c0:	add    BYTE PTR [ebx-0x22af173a],cl
  4265c6:	std    
  4265c7:	(bad)  
  4265c8:	jmp    0x426a04
  4265cd:	cmp    BYTE PTR ds:0x42e30c,0x0
  4265d4:	je     0x4265e3
  4265d6:	mov    dx,0x8
  4265da:	mov    ax,0x1
  4265de:	call   0x425060
  4265e3:	mov    eax,esi
  4265e5:	mov    edx,DWORD PTR ds:0x42e310
  4265eb:	call   0x404464
  4265f0:	jmp    0x426a04
  4265f5:	lea    edx,[ebp-0x4]
  4265f8:	movsx  eax,WORD PTR [ebx+0x8]
  4265fc:	call   0x41f0c0
  426601:	mov    edx,DWORD PTR [ebp-0x4]
  426604:	mov    eax,esi
  426606:	call   0x404464
  42660b:	jmp    0x426a04
  426610:	lea    edx,[ebp-0x8]
  426613:	mov    eax,DWORD PTR [ebx+0x8]
  426616:	call   0x41f0c0
  42661b:	mov    edx,DWORD PTR [ebp-0x8]
  42661e:	mov    eax,esi
  426620:	call   0x404464
  426625:	jmp    0x426a04
  42662a:	fld    DWORD PTR [ebx+0x8]
  42662d:	add    esp,0xfffffff4
  426630:	fstp   TBYTE PTR [esp]
  426633:	fwait
  426634:	lea    eax,[ebp-0xc]
  426637:	call   0x420324
  42663c:	mov    edx,DWORD PTR [ebp-0xc]
  42663f:	mov    eax,esi
  426641:	call   0x404464
  426646:	jmp    0x426a04
  42664b:	fld    QWORD PTR [ebx+0x8]
  42664e:	add    esp,0xfffffff4
  426651:	fstp   TBYTE PTR [esp]
  426654:	fwait
  426655:	lea    eax,[ebp-0x10]
  426658:	call   0x420324
  42665d:	mov    edx,DWORD PTR [ebp-0x10]
  426660:	mov    eax,esi
  426662:	call   0x404464
  426667:	jmp    0x426a04
  42666c:	push   DWORD PTR [ebx+0xc]
  42666f:	push   DWORD PTR [ebx+0x8]
  426672:	lea    eax,[ebp-0x14]
  426675:	call   0x425b2c
  42667a:	mov    edx,DWORD PTR [ebp-0x14]
  42667d:	mov    eax,esi
  42667f:	call   0x404354
  426684:	jmp    0x426a04
  426689:	push   DWORD PTR [ebx+0xc]
  42668c:	push   DWORD PTR [ebx+0x8]
  42668f:	lea    eax,[ebp-0x18]
  426692:	call   0x425b64
  426697:	mov    edx,DWORD PTR [ebp-0x18]
  42669a:	mov    eax,esi
  42669c:	call   0x404354
  4266a1:	jmp    0x426a04
  4266a6:	push   esi
  4266a7:	mov    eax,DWORD PTR [ebx+0x8]
  4266aa:	mov    ecx,0x7fffffff
  4266af:	mov    edx,0x1
  4266b4:	call   0x404514
  4266b9:	jmp    0x426a04
  4266be:	lea    edx,[ebp-0x1c]
  4266c1:	mov    ax,WORD PTR [ebx+0x8]
  4266c5:	call   0x425b9c
  4266ca:	mov    edx,DWORD PTR [ebp-0x1c]
  4266cd:	mov    eax,esi
  4266cf:	call   0x404354
  4266d4:	jmp    0x426a04
  4266d9:	lea    edx,[ebp-0x20]
  4266dc:	movsx  eax,BYTE PTR [ebx+0x8]
  4266e0:	call   0x41f0c0
  4266e5:	mov    edx,DWORD PTR [ebp-0x20]
  4266e8:	mov    eax,esi
  4266ea:	call   0x404464
  4266ef:	jmp    0x426a04
  4266f4:	lea    edx,[ebp-0x24]
  4266f7:	xor    eax,eax
  4266f9:	mov    al,BYTE PTR [ebx+0x8]
  4266fc:	call   0x41f0c0
  426701:	mov    edx,DWORD PTR [ebp-0x24]
  426704:	mov    eax,esi
  426706:	call   0x404464
  42670b:	jmp    0x426a04
  426710:	lea    edx,[ebp-0x28]
  426713:	movzx  eax,WORD PTR [ebx+0x8]
  426717:	call   0x41f0c0
  42671c:	mov    edx,DWORD PTR [ebp-0x28]
  42671f:	mov    eax,esi
  426721:	call   0x404464
  426726:	jmp    0x426a04
  42672b:	mov    eax,DWORD PTR [ebx+0x8]
  42672e:	xor    edx,edx
  426730:	push   edx
  426731:	push   eax
  426732:	lea    eax,[ebp-0x2c]
  426735:	call   0x41f1ac
  42673a:	mov    edx,DWORD PTR [ebp-0x2c]
  42673d:	mov    eax,esi
  42673f:	call   0x404464
  426744:	jmp    0x426a04
  426749:	push   DWORD PTR [ebx+0xc]
  42674c:	push   DWORD PTR [ebx+0x8]
  42674f:	lea    eax,[ebp-0x30]
  426752:	call   0x41f1ac
  426757:	mov    edx,DWORD PTR [ebp-0x30]
  42675a:	mov    eax,esi
  42675c:	call   0x404464
  426761:	jmp    0x426a04
  426766:	mov    eax,DWORD PTR [ebx+0x8]
  426769:	mov    edx,eax
  42676b:	mov    eax,esi
  42676d:	call   0x426534
  426772:	jmp    0x426a04
  426777:	lea    edx,[ebp-0x34]
  42677a:	mov    eax,ebx
  42677c:	call   0x426350
  426781:	mov    edx,DWORD PTR [ebp-0x34]
  426784:	mov    eax,esi
  426786:	call   0x404354
  42678b:	jmp    0x426a04
  426790:	mov    edx,eax
  426792:	sub    dx,0x100
  426797:	je     0x4267a0
  426799:	dec    dx
  42679c:	je     0x4267af
  42679e:	jmp    0x4267c8
  4267a0:	mov    eax,esi
  4267a2:	mov    edx,DWORD PTR [ebx+0x8]
  4267a5:	call   0x404464
  4267aa:	jmp    0x426a04
  4267af:	lea    edx,[ebp-0x38]
  4267b2:	mov    eax,ebx
  4267b4:	call   0x426408
  4267b9:	mov    edx,DWORD PTR [ebp-0x38]
  4267bc:	mov    eax,esi
  4267be:	call   0x404354
  4267c3:	jmp    0x426a04
  4267c8:	test   ah,0x40
  4267cb:	je     0x4269dc
  4267d1:	movzx  eax,ax
  4267d4:	and    eax,0xffffbfff
  4267d9:	cmp    eax,0x14
  4267dc:	ja     0x4269c6
  4267e2:	jmp    DWORD PTR [eax*4+0x4267e9]
  4267e9:	(bad)  
  4267ea:	imul   eax,DWORD PTR [edx+0x0],0x4269c6
  4267f1:	cmp    eax,0x5a004268
  4267f6:	push   0x68760042
  4267fb:	inc    edx
  4267fc:	add    BYTE PTR [ecx-0x43ffbd98],bl
  426802:	push   0x68db0042
  426807:	inc    edx
  426808:	add    dl,bh
  42680a:	push   0x69c60042
  42680f:	inc    edx
  426810:	add    dh,al
  426812:	imul   eax,DWORD PTR [edx+0x0],0x42690b
  426819:	mov    eax,0xc6004269
  42681e:	imul   eax,DWORD PTR [edx+0x0],0x4269c6
  426825:	(bad)  
  426826:	imul   eax,DWORD PTR [edx+0x0],0x426928
  42682d:	inc    ebp
  42682e:	imul   eax,DWORD PTR [edx+0x0],0x426962
  426835:	jg     0x4268a0
  426837:	inc    edx
  426838:	add    BYTE PTR [ecx+ebp*2+0x558d0042],bl
  42683f:	les    ecx,FWORD PTR [ebx-0x40f0f7bd]
  426845:	add    al,ch
  426847:	jne    0x4267d1
  426849:	(bad)  
  42684a:	dec    DWORD PTR [ebx-0x39743bab]
  426850:	call   0x404464
  426855:	jmp    0x426a04
  42685a:	lea    edx,[ebp-0x40]
  42685d:	mov    eax,DWORD PTR [ebx+0x8]
  426860:	mov    eax,DWORD PTR [eax]
  426862:	call   0x41f0c0
  426867:	mov    edx,DWORD PTR [ebp-0x40]
  42686a:	mov    eax,esi
  42686c:	call   0x404464
  426871:	jmp    0x426a04
  426876:	mov    eax,DWORD PTR [ebx+0x8]
  426879:	fld    DWORD PTR [eax]
  42687b:	add    esp,0xfffffff4
  42687e:	fstp   TBYTE PTR [esp]
  426881:	fwait
  426882:	lea    eax,[ebp-0x44]
  426885:	call   0x420324
  42688a:	mov    edx,DWORD PTR [ebp-0x44]
  42688d:	mov    eax,esi
  42688f:	call   0x404464
  426894:	jmp    0x426a04
  426899:	mov    eax,DWORD PTR [ebx+0x8]
  42689c:	fld    QWORD PTR [eax]
  42689e:	add    esp,0xfffffff4
  4268a1:	fstp   TBYTE PTR [esp]
  4268a4:	fwait
  4268a5:	lea    eax,[ebp-0x48]
  4268a8:	call   0x420324
  4268ad:	mov    edx,DWORD PTR [ebp-0x48]
  4268b0:	mov    eax,esi
  4268b2:	call   0x404464
  4268b7:	jmp    0x426a04
  4268bc:	mov    eax,DWORD PTR [ebx+0x8]
  4268bf:	push   DWORD PTR [eax+0x4]
  4268c2:	push   DWORD PTR [eax]
  4268c4:	lea    eax,[ebp-0x4c]
  4268c7:	call   0x425b2c
  4268cc:	mov    edx,DWORD PTR [ebp-0x4c]
  4268cf:	mov    eax,esi
  4268d1:	call   0x404354
  4268d6:	jmp    0x426a04
  4268db:	mov    eax,DWORD PTR [ebx+0x8]
  4268de:	push   DWORD PTR [eax+0x4]
  4268e1:	push   DWORD PTR [eax]
  4268e3:	lea    eax,[ebp-0x50]
  4268e6:	call   0x425b64
  4268eb:	mov    edx,DWORD PTR [ebp-0x50]
  4268ee:	mov    eax,esi
  4268f0:	call   0x404354
  4268f5:	jmp    0x426a04
  4268fa:	mov    eax,esi
  4268fc:	mov    edx,DWORD PTR [ebx+0x8]
  4268ff:	mov    edx,DWORD PTR [edx]
  426901:	call   0x404428
  426906:	jmp    0x426a04
  42690b:	lea    edx,[ebp-0x54]
  42690e:	mov    eax,DWORD PTR [ebx+0x8]
  426911:	mov    ax,WORD PTR [eax]
  426914:	call   0x425b9c
  426919:	mov    edx,DWORD PTR [ebp-0x54]
  42691c:	mov    eax,esi
  42691e:	call   0x404354
  426923:	jmp    0x426a04
  426928:	lea    edx,[ebp-0x58]
  42692b:	mov    eax,DWORD PTR [ebx+0x8]
  42692e:	movsx  eax,BYTE PTR [eax]
  426931:	call   0x41f0c0
  426936:	mov    edx,DWORD PTR [ebp-0x58]
  426939:	mov    eax,esi
  42693b:	call   0x404464
  426940:	jmp    0x426a04
  426945:	lea    edx,[ebp-0x5c]
  426948:	mov    eax,DWORD PTR [ebx+0x8]
  42694b:	movzx  eax,BYTE PTR [eax]
  42694e:	call   0x41f0c0
  426953:	mov    edx,DWORD PTR [ebp-0x5c]
  426956:	mov    eax,esi
  426958:	call   0x404464
  42695d:	jmp    0x426a04
  426962:	lea    edx,[ebp-0x60]
  426965:	mov    eax,DWORD PTR [ebx+0x8]
  426968:	movzx  eax,WORD PTR [eax]
  42696b:	call   0x41f0c0
  426970:	mov    edx,DWORD PTR [ebp-0x60]
  426973:	mov    eax,esi
  426975:	call   0x404464
  42697a:	jmp    0x426a04
  42697f:	mov    eax,DWORD PTR [ebx+0x8]
  426982:	mov    eax,DWORD PTR [eax]
  426984:	xor    edx,edx
  426986:	push   edx
  426987:	push   eax
  426988:	lea    eax,[ebp-0x64]
  42698b:	call   0x41f1ac
  426990:	mov    edx,DWORD PTR [ebp-0x64]
  426993:	mov    eax,esi
  426995:	call   0x404464
  42699a:	jmp    0x426a04
  42699c:	mov    eax,DWORD PTR [ebx+0x8]
  42699f:	push   DWORD PTR [eax+0x4]
  4269a2:	push   DWORD PTR [eax]
  4269a4:	lea    eax,[ebp-0x68]
  4269a7:	call   0x41f1ac
  4269ac:	mov    edx,DWORD PTR [ebp-0x68]
  4269af:	mov    eax,esi
  4269b1:	call   0x404464
  4269b6:	jmp    0x426a04
  4269b8:	mov    eax,DWORD PTR [ebx+0x8]
  4269bb:	mov    edx,eax
  4269bd:	mov    eax,esi
  4269bf:	call   0x426534
  4269c4:	jmp    0x426a04
  4269c6:	lea    edx,[ebp-0x6c]
  4269c9:	mov    eax,ebx
  4269cb:	call   0x426350
  4269d0:	mov    edx,DWORD PTR [ebp-0x6c]
  4269d3:	mov    eax,esi
  4269d5:	call   0x404354
  4269da:	jmp    0x426a04
  4269dc:	mov    eax,esi
  4269de:	call   0x404318
  4269e3:	mov    edx,eax
  4269e5:	mov    eax,ebx
  4269e7:	call   0x42646c
  4269ec:	test   al,al
  4269ee:	jne    0x426a04
  4269f0:	lea    edx,[ebp-0x70]
  4269f3:	mov    eax,ebx
  4269f5:	call   0x426350
  4269fa:	mov    edx,DWORD PTR [ebp-0x70]
  4269fd:	mov    eax,esi
  4269ff:	call   0x404354
  426a04:	xor    eax,eax
  426a06:	pop    edx
  426a07:	pop    ecx
  426a08:	pop    ecx
  426a09:	mov    DWORD PTR fs:[eax],edx
  426a0c:	push   0x426a81
  426a11:	lea    eax,[ebp-0x70]
  426a14:	mov    edx,0x2
  426a19:	call   0x404330
  426a1e:	lea    eax,[ebp-0x68]
  426a21:	mov    edx,0x5
  426a26:	call   0x403cd0
  426a2b:	lea    eax,[ebp-0x54]
  426a2e:	mov    edx,0x3
  426a33:	call   0x404330
  426a38:	lea    eax,[ebp-0x48]
  426a3b:	mov    edx,0x4
  426a40:	call   0x403cd0
  426a45:	lea    eax,[ebp-0x38]
  426a48:	mov    edx,0x2
  426a4d:	call   0x404330
  426a52:	lea    eax,[ebp-0x30]
  426a55:	mov    edx,0x5
  426a5a:	call   0x403cd0
  426a5f:	lea    eax,[ebp-0x1c]
  426a62:	mov    edx,0x3
  426a67:	call   0x404330
  426a6c:	lea    eax,[ebp-0x10]
  426a6f:	mov    edx,0x4
  426a74:	call   0x403cd0
  426a79:	ret    
  426a7a:	jmp    0x4036ac
  426a7f:	jmp    0x426a11
  426a81:	pop    esi
  426a82:	pop    ebx
  426a83:	mov    esp,ebp
  426a85:	pop    ebp
  426a86:	ret    
  426a87:	nop
  426a88:	cmp    WORD PTR [eax],0x8
  426a8c:	jb     0x426aa8
  426a8e:	push   DWORD PTR [eax+0xc]
  426a91:	push   DWORD PTR [eax+0x8]
  426a94:	push   DWORD PTR [eax+0x4]
  426a97:	push   DWORD PTR [eax]
  426a99:	mov    WORD PTR [eax],0x0
  426a9e:	mov    edx,esp
  426aa0:	call   0x425ae8
  426aa5:	add    esp,0x10
  426aa8:	ret    
  426aa9:	lea    eax,[eax+0x0]
  426aac:	(bad)  
  426aad:	(bad)  
  426aae:	(bad)  
  426aaf:	inc    DWORD PTR ds:0x45000000
  426ab5:	ins    DWORD PTR es:[edi],dx
  426ab6:	jo     0x426b2c
  426ab8:	jns    0x426aba
  426aba:	add    BYTE PTR [eax],al
  426abc:	(bad)  
  426abd:	(bad)  
  426abe:	(bad)  
  426abf:	inc    DWORD PTR [eax+eax*1]
  426ac2:	add    BYTE PTR [eax],al
  426ac4:	dec    esi
  426ac5:	jne    0x426b33
  426ac7:	ins    BYTE PTR es:[edi],dx
  426ac8:	add    BYTE PTR [eax],al
  426aca:	add    BYTE PTR [eax],al
  426acc:	(bad)  
  426acd:	(bad)  
  426ace:	(bad)  
  426acf:	dec    DWORD PTR [eax]
  426ad1:	add    BYTE PTR [eax],al
  426ad3:	add    BYTE PTR [ebx+0x6d],dl
  426ad6:	popa   
  426ad7:	ins    BYTE PTR es:[edi],dx
  426ad8:	ins    BYTE PTR es:[edi],dx
  426ad9:	imul   ebp,DWORD PTR [esi+0x74],0x0
  426ae0:	(bad)  
  426ae1:	(bad)  
  426ae2:	(bad)  
  426ae3:	inc    DWORD PTR [edi]
  426ae5:	add    BYTE PTR [eax],al
  426ae7:	add    BYTE PTR [ecx+0x6e],cl
  426aea:	je     0x426b51
  426aec:	addr16 gs jb 0x426af0
  426af0:	(bad)  
  426af1:	(bad)  
  426af2:	(bad)  
  426af3:	inc    DWORD PTR [esi]
  426af5:	add    BYTE PTR [eax],al
  426af7:	add    BYTE PTR [ebx+0x69],dl
  426afa:	outs   dx,BYTE PTR ds:[esi]
  426afb:	ins    BYTE PTR es:[di],dx
  426afd:	add    BYTE PTR gs:[eax],al
  426b00:	(bad)  
  426b01:	(bad)  
  426b02:	(bad)  
  426b03:	inc    DWORD PTR [esi]
  426b05:	add    BYTE PTR [eax],al
  426b07:	add    BYTE PTR [edi+ebp*2+0x75],al
  426b0b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  426b0f:	add    bh,bh
  426b11:	(bad)  
  426b12:	(bad)  
  426b13:	dec    DWORD PTR [eax]
  426b15:	add    BYTE PTR [eax],al
  426b17:	add    BYTE PTR [ebx+0x75],al
  426b1a:	jb     0x426b8e
  426b1c:	outs   dx,BYTE PTR gs:[esi]
  426b1e:	arpl   WORD PTR [ecx+0x0],di
  426b21:	add    BYTE PTR [eax],al
  426b23:	add    bh,bh
  426b25:	(bad)  
  426b26:	(bad)  
  426b27:	inc    DWORD PTR [eax+eax*1]
  426b2a:	add    BYTE PTR [eax],al
  426b2c:	inc    esp
  426b2d:	popa   
  426b2e:	je     0x426b95
  426b30:	add    BYTE PTR [eax],al
  426b32:	add    BYTE PTR [eax],al
  426b34:	(bad)  
  426b35:	(bad)  
  426b36:	(bad)  
  426b37:	inc    DWORD PTR [esi]
  426b39:	add    BYTE PTR [eax],al
  426b3b:	add    BYTE PTR [edi+0x6c],cl
  426b3e:	gs push ebx
  426b40:	je     0x426bb4
  426b42:	add    BYTE PTR [eax],al
  426b44:	(bad)  
  426b45:	(bad)  
  426b46:	(bad)  
  426b47:	dec    DWORD PTR [eax]
  426b49:	add    BYTE PTR [eax],al
  426b4b:	add    BYTE PTR [ecx+ebp*2+0x73],al
  426b4f:	jo     0x426bb2
  426b51:	je     0x426bb6
  426b53:	push   0x0
  426b58:	(bad)  
  426b59:	(bad)  
  426b5a:	(bad)  
  426b5b:	inc    DWORD PTR ds:0x45000000
  426b61:	jb     0x426bd5
  426b63:	outs   dx,DWORD PTR ds:[esi]
  426b64:	jb     0x426b66
  426b66:	add    BYTE PTR [eax],al
  426b68:	(bad)  
  426b69:	(bad)  
  426b6a:	(bad)  
  426b6b:	inc    DWORD PTR [edi]
  426b6d:	add    BYTE PTR [eax],al
  426b6f:	add    BYTE PTR [edx+0x6f],al
  426b72:	outs   dx,DWORD PTR ds:[esi]
  426b73:	ins    BYTE PTR es:[edi],dx
  426b74:	gs popa 
  426b76:	outs   dx,BYTE PTR ds:[esi]
  426b77:	add    bh,bh
  426b79:	(bad)  
  426b7a:	(bad)  
  426b7b:	inc    DWORD PTR [edi]
  426b7d:	add    BYTE PTR [eax],al
  426b7f:	add    BYTE PTR [esi+0x61],dl
  426b82:	jb     0x426bed
  426b84:	popa   
  426b85:	outs   dx,BYTE PTR ds:[esi]
  426b86:	je     0x426b88
  426b88:	(bad)  
  426b89:	(bad)  
  426b8a:	(bad)  
  426b8b:	inc    DWORD PTR [edi]
  426b8d:	add    BYTE PTR [eax],al
  426b8f:	add    BYTE PTR [ebp+0x6e],dl
  426b92:	imul   ebp,DWORD PTR [esi+0x6f],0x77
  426b96:	outs   dx,BYTE PTR ds:[esi]
  426b97:	add    bh,bh
  426b99:	(bad)  
  426b9a:	(bad)  
  426b9b:	inc    DWORD PTR [edi]
  426b9d:	add    BYTE PTR [eax],al
  426b9f:	add    BYTE PTR [ebp+eiz*2+0x63],al
  426ba3:	imul   ebp,DWORD PTR [ebp+0x61],0xffff006c
  426baa:	(bad)  
  426bab:	inc    DWORD PTR [ebx]
  426bad:	add    BYTE PTR [eax],al
  426baf:	add    BYTE PTR [eax+esi*1],ah
  426bb2:	inc    esi
  426bb3:	add    bh,bh
  426bb5:	(bad)  
  426bb6:	(bad)  
  426bb7:	dec    DWORD PTR [eax]
  426bb9:	add    BYTE PTR [eax],al
  426bbb:	add    BYTE PTR [ebx+0x68],dl
  426bbe:	outs   dx,DWORD PTR ds:[esi]
  426bbf:	jb     0x426c35
  426bc1:	dec    ecx
  426bc2:	outs   dx,BYTE PTR ds:[esi]
  426bc3:	je     0x426bc5
  426bc5:	add    BYTE PTR [eax],al
  426bc7:	add    bh,bh
  426bc9:	(bad)  
  426bca:	(bad)  
  426bcb:	inc    DWORD PTR [eax+eax*1]
  426bce:	add    BYTE PTR [eax],al
  426bd0:	inc    edx
  426bd1:	jns    0x426c47
  426bd3:	add    BYTE PTR gs:[eax],al
  426bd6:	add    BYTE PTR [eax],al
  426bd8:	(bad)  
  426bd9:	(bad)  
  426bda:	(bad)  
  426bdb:	inc    DWORD PTR [eax+eax*1]
  426bde:	add    BYTE PTR [eax],al
  426be0:	push   edi
  426be1:	outs   dx,DWORD PTR ds:[esi]
  426be2:	jb     0x426c48
  426be4:	add    BYTE PTR [eax],al
  426be6:	add    BYTE PTR [eax],al
  426be8:	(bad)  
  426be9:	(bad)  
  426bea:	(bad)  
  426beb:	dec    DWORD PTR [eax]
  426bed:	add    BYTE PTR [eax],al
  426bef:	add    BYTE PTR [edi+ebp*2+0x6e],cl
  426bf3:	addr16 push edi
  426bf5:	outs   dx,DWORD PTR ds:[esi]
  426bf6:	jb     0x426c5c
  426bf8:	add    BYTE PTR [eax],al
  426bfa:	add    BYTE PTR [eax],al
  426bfc:	(bad)  
  426bfd:	(bad)  
  426bfe:	(bad)  
  426bff:	inc    DWORD PTR ds:0x49000000
  426c05:	outs   dx,BYTE PTR ds:[esi]
  426c06:	je     0x426c3e
  426c08:	xor    al,0x0
  426c0a:	add    BYTE PTR [eax],al
  426c0c:	push   ebp
  426c0d:	mov    ebp,esp
  426c0f:	add    esp,0xfffffdf8
  426c15:	push   ebx
  426c16:	push   esi
  426c17:	push   edi
  426c18:	xor    ecx,ecx
  426c1a:	mov    DWORD PTR [ebp-0x208],ecx
  426c20:	mov    esi,edx
  426c22:	mov    ebx,eax
  426c24:	xor    eax,eax
  426c26:	push   ebp
  426c27:	push   0x426d32
  426c2c:	push   DWORD PTR fs:[eax]
  426c2f:	mov    DWORD PTR fs:[eax],esp
  426c32:	mov    edi,ebx
  426c34:	and    di,0xfff
  426c39:	cmp    di,0x14
  426c3d:	ja     0x426c55
  426c3f:	mov    eax,esi
  426c41:	movzx  edx,di
  426c44:	mov    edx,DWORD PTR [edx*4+0x42e31c]
  426c4b:	call   0x403d00
  426c50:	jmp    0x426cf3
  426c55:	cmp    bx,0x100
  426c5a:	jne    0x426c6d
  426c5c:	mov    eax,esi
  426c5e:	mov    edx,0x426d48
  426c63:	call   0x403d00
  426c68:	jmp    0x426cf3
  426c6d:	cmp    bx,0x101
  426c72:	jne    0x426c82
  426c74:	mov    eax,esi
  426c76:	mov    edx,0x426d58
  426c7b:	call   0x403d00
  426c80:	jmp    0x426cf3
  426c82:	lea    edx,[ebp-0x4]
  426c85:	mov    eax,ebx
  426c87:	call   0x427068
  426c8c:	test   al,al
  426c8e:	je     0x426ccb
  426c90:	lea    eax,[ebp-0x104]
  426c96:	push   eax
  426c97:	lea    edx,[ebp-0x204]
  426c9d:	mov    eax,DWORD PTR [ebp-0x4]
  426ca0:	mov    eax,DWORD PTR [eax]
  426ca2:	call   0x40313c
  426ca7:	lea    eax,[ebp-0x204]
  426cad:	mov    ecx,0x7fffffff
  426cb2:	mov    edx,0x2
  426cb7:	call   0x402ac8
  426cbc:	lea    edx,[ebp-0x104]
  426cc2:	mov    eax,esi
  426cc4:	call   0x403f10
  426cc9:	jmp    0x426cf3
  426ccb:	lea    ecx,[ebp-0x208]
  426cd1:	movzx  eax,di
  426cd4:	mov    edx,0x4
  426cd9:	call   0x41f1d4
  426cde:	mov    ecx,DWORD PTR [ebp-0x208]
  426ce4:	mov    edx,DWORD PTR ds:0x42e544
  426cea:	mov    edx,DWORD PTR [edx]
  426cec:	mov    eax,esi
  426cee:	call   0x403f94
  426cf3:	test   bh,0x20
  426cf6:	je     0x426d06
  426cf8:	mov    ecx,DWORD PTR [esi]
  426cfa:	mov    eax,esi
  426cfc:	mov    edx,0x426d64
  426d01:	call   0x403f94
  426d06:	test   bh,0x40
  426d09:	je     0x426d19
  426d0b:	mov    ecx,DWORD PTR [esi]
  426d0d:	mov    eax,esi
  426d0f:	mov    edx,0x426d74
  426d14:	call   0x403f94
  426d19:	xor    eax,eax
  426d1b:	pop    edx
  426d1c:	pop    ecx
  426d1d:	pop    ecx
  426d1e:	mov    DWORD PTR fs:[eax],edx
  426d21:	push   0x426d39
  426d26:	lea    eax,[ebp-0x208]
  426d2c:	call   0x403cac
  426d31:	ret    
  426d32:	jmp    0x4036ac
  426d37:	jmp    0x426d26
  426d39:	pop    edi
  426d3a:	pop    esi
  426d3b:	pop    ebx
  426d3c:	mov    esp,ebp
  426d3e:	pop    ebp
  426d3f:	ret    
  426d40:	(bad)  
  426d41:	(bad)  
  426d42:	(bad)  
  426d43:	inc    DWORD PTR [esi]
  426d45:	add    BYTE PTR [eax],al
  426d47:	add    BYTE PTR [ebx+0x74],dl
  426d4a:	jb     0x426db5
  426d4c:	outs   dx,BYTE PTR ds:[esi]
  426d4d:	add    BYTE PTR [bx+si],al
  426d50:	(bad)  
  426d51:	(bad)  
  426d52:	(bad)  
  426d53:	inc    DWORD PTR [ebx]
  426d55:	add    BYTE PTR [eax],al
  426d57:	add    BYTE PTR [ecx+0x6e],al
  426d5a:	jns    0x426d5c
  426d5c:	(bad)  
  426d5d:	(bad)  
  426d5e:	(bad)  
  426d5f:	inc    DWORD PTR [esi]
  426d61:	add    BYTE PTR [eax],al
  426d63:	add    BYTE PTR [ecx+0x72],al
  426d66:	jb     0x426dc9
  426d68:	jns    0x426d8a
  426d6a:	add    BYTE PTR [eax],al
  426d6c:	(bad)  
  426d6d:	(bad)  
  426d6e:	(bad)  
  426d6f:	inc    DWORD PTR [esi]
  426d71:	add    BYTE PTR [eax],al
  426d73:	add    BYTE PTR [edx+0x79],al
  426d76:	push   edx
  426d77:	data16 and BYTE PTR gs:[eax],al
  426d7b:	add    BYTE PTR [ebx+0x56],dl
  426d7e:	mov    esi,edx
  426d80:	mov    ebx,eax
  426d82:	mov    eax,ebx
  426d84:	call   0x4257ac
  426d89:	mov    WORD PTR [ebx],0xa
  426d8e:	mov    DWORD PTR [ebx+0x8],esi
  426d91:	pop    esi
  426d92:	pop    ebx
  426d93:	ret    
  426d94:	mov    edx,0x80020004
  426d99:	call   0x426d7c
  426d9e:	ret    
  426d9f:	nop
  426da0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426da1:	ins    DWORD PTR es:[edi],dx
  426da2:	inc    edx
  426da3:	add    BYTE PTR [ecx],dl
  426da5:	add    ebp,DWORD PTR [esi]
  426da7:	xor    BYTE PTR [edx],dh
  426da9:	add    al,0x0
  426dab:	add    BYTE PTR [eax],al
  426dad:	add    BYTE PTR [eax],al
  426daf:	add    BYTE PTR [eax],al
  426db1:	(bad)  
  426db2:	(bad)  
  426db3:	(bad)  
  426db4:	jmp    DWORD PTR [eax]
  426db6:	dec    ebx
  426db7:	inc    edx
  426db8:	add    BYTE PTR [eax],cl
  426dba:	push   esi
  426dbb:	popa   
  426dbc:	jb     0x426e27
  426dbe:	popa   
  426dbf:	outs   dx,BYTE PTR ds:[esi]
  426dc0:	je     0x426e35
  426dc2:	mov    eax,eax
  426dc4:	push   ebp
  426dc5:	mov    ebp,esp
  426dc7:	push   ebx
  426dc8:	push   esi
  426dc9:	mov    esi,0x42f820
  426dce:	push   0x42f824
  426dd3:	call   0x405aa8
  426dd8:	xor    edx,edx
  426dda:	push   ebp
  426ddb:	push   0x426e25
  426de0:	push   DWORD PTR fs:[edx]
  426de3:	mov    DWORD PTR fs:[edx],esp
  426de6:	mov    eax,DWORD PTR [esi]
  426de8:	call   0x404940
  426ded:	mov    ebx,eax
  426def:	dec    ebx
  426df0:	cmp    ebx,0x0
  426df3:	jl     0x426e0d
  426df5:	mov    eax,DWORD PTR [esi]
  426df7:	mov    eax,DWORD PTR [eax+ebx*4]
  426dfa:	cmp    eax,DWORD PTR ds:0x42e318
  426e00:	je     0x426e07
  426e02:	call   0x4031c4
  426e07:	dec    ebx
  426e08:	cmp    ebx,0xffffffff
  426e0b:	jne    0x426df5
  426e0d:	xor    eax,eax
  426e0f:	pop    edx
  426e10:	pop    ecx
  426e11:	pop    ecx
  426e12:	mov    DWORD PTR fs:[eax],edx
  426e15:	push   0x426e2c
  426e1a:	push   0x42f824
  426e1f:	call   0x405b48
  426e24:	ret    
  426e25:	jmp    0x4036ac
  426e2a:	jmp    0x426e1a
  426e2c:	pop    esi
  426e2d:	pop    ebx
  426e2e:	pop    ebp
  426e2f:	ret    
  426e30:	push   ebp
  426e31:	mov    ebp,esp
  426e33:	call   0x426ff0
  426e38:	pop    ebp
  426e39:	ret    0x4
  426e3c:	push   ebx
  426e3d:	push   esi
  426e3e:	push   edi
  426e3f:	push   ecx
  426e40:	mov    esi,ecx
  426e42:	mov    edi,edx
  426e44:	mov    ebx,eax
  426e46:	mov    edx,esp
  426e48:	mov    ax,WORD PTR [esi]
  426e4b:	call   0x427068
  426e50:	test   al,al
  426e52:	je     0x426e68
  426e54:	mov    ax,WORD PTR [ebx+0x4]
  426e58:	push   eax
  426e59:	mov    ecx,esi
  426e5b:	mov    edx,edi
  426e5d:	mov    eax,DWORD PTR [esp+0x4]
  426e61:	mov    ebx,DWORD PTR [eax]
  426e63:	call   DWORD PTR [ebx+0x1c]
  426e66:	jmp    0x426e6f
  426e68:	mov    eax,ebx
  426e6a:	call   0x426fe8
  426e6f:	pop    edx
  426e70:	pop    edi
  426e71:	pop    esi
  426e72:	pop    ebx
  426e73:	ret    
  426e74:	push   ebp
  426e75:	mov    ebp,esp
  426e77:	add    esp,0xfffffff8
  426e7a:	push   ebx
  426e7b:	push   esi
  426e7c:	push   edi
  426e7d:	mov    esi,ecx
  426e7f:	mov    DWORD PTR [ebp-0x4],edx
  426e82:	mov    ebx,eax
  426e84:	mov    edi,DWORD PTR [ebp+0x8]
  426e87:	cmp    di,WORD PTR [ebx+0x4]
  426e8b:	je     0x426eac
  426e8d:	lea    edx,[ebp-0x8]
  426e90:	mov    ax,WORD PTR [esi]
  426e93:	call   0x427068
  426e98:	test   al,al
  426e9a:	je     0x426eac
  426e9c:	push   edi
  426e9d:	mov    ecx,esi
  426e9f:	mov    edx,DWORD PTR [ebp-0x4]
  426ea2:	mov    eax,DWORD PTR [ebp-0x8]
  426ea5:	mov    ebx,DWORD PTR [eax]
  426ea7:	call   DWORD PTR [ebx+0x1c]
  426eaa:	jmp    0x426eb3
  426eac:	mov    eax,ebx
  426eae:	call   0x426fe8
  426eb3:	pop    edi
  426eb4:	pop    esi
  426eb5:	pop    ebx
  426eb6:	pop    ecx
  426eb7:	pop    ecx
  426eb8:	pop    ebp
  426eb9:	ret    0x4
  426ebc:	push   ebp
  426ebd:	mov    ebp,esp
  426ebf:	call   0x426ff0
  426ec4:	pop    ebp
  426ec5:	ret    0x4
  426ec8:	push   ebp
  426ec9:	mov    ebp,esp
  426ecb:	push   ecx
  426ecc:	push   ebx
  426ecd:	push   esi
  426ece:	push   edi
  426ecf:	mov    edi,edx
  426ed1:	mov    esi,eax
  426ed3:	lea    eax,[ebp-0x1]
  426ed6:	push   eax
  426ed7:	mov    edx,edi
  426ed9:	mov    eax,esi
  426edb:	mov    ebx,DWORD PTR [eax]
  426edd:	call   DWORD PTR [ebx+0x38]
  426ee0:	xor    eax,eax
  426ee2:	mov    al,BYTE PTR [ebp-0x1]
  426ee5:	mov    edx,DWORD PTR [ebp+0x8]
  426ee8:	lea    edx,[edx+edx*2]
  426eeb:	add    edx,0x42e370
  426ef1:	mov    al,BYTE PTR [edx+eax*1-0x2a]
  426ef5:	pop    edi
  426ef6:	pop    esi
  426ef7:	pop    ebx
  426ef8:	pop    ecx
  426ef9:	pop    ebp
  426efa:	ret    0x4
  426efd:	lea    eax,[eax+0x0]
  426f00:	push   ebx
  426f01:	push   esi
  426f02:	push   edi
  426f03:	push   ebp
  426f04:	push   ecx
  426f05:	mov    esi,ecx
  426f07:	mov    edi,edx
  426f09:	mov    ebx,eax
  426f0b:	mov    ecx,esp
  426f0d:	mov    edx,esi
  426f0f:	mov    eax,ebx
  426f11:	mov    ebp,DWORD PTR [eax]
  426f13:	call   DWORD PTR [ebp+0xc]
  426f16:	test   al,al
  426f18:	je     0x426f2c
  426f1a:	mov    ax,WORD PTR [esp]
  426f1e:	push   eax
  426f1f:	mov    ecx,esi
  426f21:	mov    edx,edi
  426f23:	mov    eax,ebx
  426f25:	mov    ebx,DWORD PTR [eax]
  426f27:	call   DWORD PTR [ebx+0x1c]
  426f2a:	jmp    0x426f33
  426f2c:	mov    eax,ebx
  426f2e:	call   0x426fe8
  426f33:	pop    edx
  426f34:	pop    ebp
  426f35:	pop    edi
  426f36:	pop    esi
  426f37:	pop    ebx
  426f38:	ret    
  426f39:	lea    eax,[eax+0x0]
  426f3c:	push   ebp
  426f3d:	mov    ebp,esp
  426f3f:	add    esp,0xfffffff8
  426f42:	call   0x403480
  426f47:	mov    BYTE PTR [ebp-0x5],dl
  426f4a:	mov    DWORD PTR [ebp-0x4],eax
  426f4d:	push   0x42f824
  426f52:	call   0x405aa8
  426f57:	xor    edx,edx
  426f59:	push   ebp
  426f5a:	push   0x426f9f
  426f5f:	push   DWORD PTR fs:[edx]
  426f62:	mov    DWORD PTR fs:[edx],esp
  426f65:	mov    eax,DWORD PTR [ebp-0x4]
  426f68:	mov    ax,WORD PTR [eax+0x4]
  426f6c:	test   ax,ax
  426f6f:	je     0x426f87
  426f71:	movzx  eax,ax
  426f74:	mov    edx,DWORD PTR ds:0x42f820
  426f7a:	mov    ecx,DWORD PTR ds:0x42e318
  426f80:	mov    DWORD PTR [edx+eax*4-0x400],ecx
  426f87:	xor    eax,eax
  426f89:	pop    edx
  426f8a:	pop    ecx
  426f8b:	pop    ecx
  426f8c:	mov    DWORD PTR fs:[eax],edx
  426f8f:	push   0x426fa6
  426f94:	push   0x42f824
  426f99:	call   0x405b48
  426f9e:	ret    
  426f9f:	jmp    0x4036ac
  426fa4:	jmp    0x426f94
  426fa6:	mov    dl,BYTE PTR [ebp-0x5]
  426fa9:	and    dl,0xfc
  426fac:	mov    eax,DWORD PTR [ebp-0x4]
  426faf:	call   0x4031b4
  426fb4:	cmp    BYTE PTR [ebp-0x5],0x0
  426fb8:	jle    0x426fc2
  426fba:	mov    eax,DWORD PTR [ebp-0x4]
  426fbd:	call   0x403468
  426fc2:	pop    ecx
  426fc3:	pop    ecx
  426fc4:	pop    ebp
  426fc5:	ret    
  426fc6:	mov    eax,eax
  426fc8:	xor    eax,eax
  426fca:	ret    
  426fcb:	nop
  426fcc:	push   ebp
  426fcd:	mov    ebp,esp
  426fcf:	mov    edx,DWORD PTR [ebp+0x8]
  426fd2:	mov    ax,WORD PTR [eax+0x4]
  426fd6:	mov    WORD PTR [edx],ax
  426fd9:	mov    al,0x1
  426fdb:	pop    ebp
  426fdc:	ret    0x4
  426fdf:	nop
  426fe0:	mov    WORD PTR [ecx],0x8
  426fe5:	mov    al,0x1
  426fe7:	ret    
  426fe8:	call   0x42500c
  426fed:	ret    
  426fee:	mov    eax,eax
  426ff0:	call   0x4250fc
  426ff5:	ret    
  426ff6:	mov    eax,eax
  426ff8:	call   0x4254d4
  426ffd:	ret    
  426ffe:	mov    eax,eax
  427000:	push   ebp
  427001:	mov    ebp,esp
  427003:	mov    edx,DWORD PTR [ebp+0x8]
  427006:	mov    ax,WORD PTR [eax+0x4]
  42700a:	mov    WORD PTR [edx],ax
  42700d:	mov    al,0x1
  42700f:	pop    ebp
  427010:	ret    0x4
  427013:	nop
  427014:	call   0x426ff0
  427019:	ret    
  42701a:	mov    eax,eax
  42701c:	push   ebp
  42701d:	mov    ebp,esp
  42701f:	call   0x426ff8
  427024:	pop    ebp
  427025:	ret    0x8
  427028:	push   ebp
  427029:	mov    ebp,esp
  42702b:	or     eax,0xffffffff
  42702e:	pop    ebp
  42702f:	ret    0x4
  427032:	mov    eax,eax
  427034:	push   ebp
  427035:	mov    ebp,esp
  427037:	or     eax,0xffffffff
  42703a:	pop    ebp
  42703b:	ret    0x4
  42703e:	mov    eax,eax
  427040:	push   ebp
  427041:	mov    ebp,esp
  427043:	push   ebx
  427044:	mov    ebx,DWORD PTR [ebp+0x8]
  427047:	mov    ecx,DWORD PTR [ebp+0x10]
  42704a:	mov    edx,DWORD PTR [ebp+0xc]
  42704d:	mov    eax,ebx
  42704f:	call   0x403278
  427054:	test   al,al
  427056:	je     0x42705c
  427058:	xor    eax,eax
  42705a:	jmp    0x427061
  42705c:	mov    eax,0x80004002
  427061:	pop    ebx
  427062:	pop    ebp
  427063:	ret    0xc
  427066:	mov    eax,eax
  427068:	push   ebp
  427069:	mov    ebp,esp
  42706b:	push   ecx
  42706c:	push   ebx
  42706d:	push   esi
  42706e:	push   edi
  42706f:	mov    esi,edx
  427071:	mov    ebx,eax
  427073:	cmp    DWORD PTR ds:0x42f820,0x0
  42707a:	je     0x42708a
  42707c:	cmp    bx,0x100
  427081:	jb     0x42708a
  427083:	cmp    bx,0x7ff
  427088:	jbe    0x42708e
  42708a:	xor    eax,eax
  42708c:	jmp    0x427090
  42708e:	mov    al,0x1
  427090:	mov    BYTE PTR [ebp-0x1],al
  427093:	cmp    BYTE PTR [ebp-0x1],0x0
  427097:	je     0x427117
  427099:	push   0x42f824
  42709e:	call   0x405aa8
  4270a3:	xor    eax,eax
  4270a5:	push   ebp
  4270a6:	push   0x427110
  4270ab:	push   DWORD PTR fs:[eax]
  4270ae:	mov    DWORD PTR fs:[eax],esp
  4270b1:	mov    eax,ds:0x42f820
  4270b6:	call   0x404940
  4270bb:	movzx  edi,bx
  4270be:	mov    edx,edi
  4270c0:	sub    edx,0x100
  4270c6:	cmp    eax,edx
  4270c8:	setg   BYTE PTR [ebp-0x1]
  4270cc:	cmp    BYTE PTR [ebp-0x1],0x0
  4270d0:	je     0x4270f8
  4270d2:	mov    eax,ds:0x42f820
  4270d7:	mov    eax,DWORD PTR [eax+edi*4-0x400]
  4270de:	mov    DWORD PTR [esi],eax
  4270e0:	cmp    DWORD PTR [esi],0x0
  4270e3:	je     0x4270ef
  4270e5:	mov    eax,DWORD PTR [esi]
  4270e7:	cmp    eax,DWORD PTR ds:0x42e318
  4270ed:	jne    0x4270f3
  4270ef:	xor    eax,eax
  4270f1:	jmp    0x4270f5
  4270f3:	mov    al,0x1
  4270f5:	mov    BYTE PTR [ebp-0x1],al
  4270f8:	xor    eax,eax
  4270fa:	pop    edx
  4270fb:	pop    ecx
  4270fc:	pop    ecx
  4270fd:	mov    DWORD PTR fs:[eax],edx
  427100:	push   0x427117
  427105:	push   0x42f824
  42710a:	call   0x405b48
  42710f:	ret    
  427110:	jmp    0x4036ac
  427115:	jmp    0x427105
  427117:	mov    al,BYTE PTR [ebp-0x1]
  42711a:	pop    edi
  42711b:	pop    esi
  42711c:	pop    ebx
  42711d:	pop    ecx
  42711e:	pop    ebp
  42711f:	ret    
  427120:	push   ebp
  427121:	mov    ebp,esp
  427123:	xor    eax,eax
  427125:	push   ebp
  427126:	push   0x42718f
  42712b:	push   DWORD PTR fs:[eax]
  42712e:	mov    DWORD PTR fs:[eax],esp
  427131:	inc    DWORD PTR ds:0x42f81c
  427137:	jne    0x427181
  427139:	call   0x426dc4
  42713e:	push   0x42f824
  427143:	call   0x405aa0
  427148:	mov    eax,0x42f820
  42714d:	mov    edx,DWORD PTR ds:0x426da0
  427153:	call   0x404b28
  427158:	mov    eax,0x42e31c
  42715d:	mov    ecx,0x15
  427162:	mov    edx,DWORD PTR ds:0x401000
  427168:	call   0x4045f4
  42716d:	mov    eax,0x42e310
  427172:	call   0x403cac
  427177:	mov    eax,0x42f7fc
  42717c:	call   0x4257c0
  427181:	xor    eax,eax
  427183:	pop    edx
  427184:	pop    ecx
  427185:	pop    ecx
  427186:	mov    DWORD PTR fs:[eax],edx
  427189:	push   0x427196
  42718e:	ret    
  42718f:	jmp    0x4036ac
  427194:	jmp    0x42718e
  427196:	pop    ebp
  427197:	ret    
  427198:	push   ebp
  427199:	mov    ebp,esp
  42719b:	xor    eax,eax
  42719d:	push   ebp
  42719e:	push   0x427239
  4271a3:	push   DWORD PTR fs:[eax]
  4271a6:	mov    DWORD PTR fs:[eax],esp
  4271a9:	sub    DWORD PTR ds:0x42f81c,0x1
  4271b0:	jae    0x42722b
  4271b2:	mov    eax,0x42f7fc
  4271b7:	call   0x426d94
  4271bc:	mov    eax,0x4254d4
  4271c1:	mov    ds:0x42f80c,eax
  4271c6:	mov    eax,0x4250fc
  4271cb:	mov    ds:0x42f810,eax
  4271d0:	mov    edx,0x42500c
  4271d5:	mov    DWORD PTR ds:0x42f814,edx
  4271db:	mov    ds:0x42f818,eax
  4271e0:	mov    eax,0x4257c0
  4271e5:	mov    edx,DWORD PTR ds:0x42e488
  4271eb:	mov    DWORD PTR [edx],eax
  4271ed:	mov    eax,0x426a88
  4271f2:	mov    edx,DWORD PTR ds:0x42e3c0
  4271f8:	mov    DWORD PTR [edx],eax
  4271fa:	mov    eax,0x425ae8
  4271ff:	mov    edx,DWORD PTR ds:0x42e4d0
  427205:	mov    DWORD PTR [edx],eax
  427207:	mov    eax,0x425e14
  42720c:	mov    edx,DWORD PTR ds:0x42e558
  427212:	mov    DWORD PTR [edx],eax
  427214:	mov    eax,0x426534
  427219:	mov    edx,DWORD PTR ds:0x42e4dc
  42721f:	mov    DWORD PTR [edx],eax
  427221:	push   0x42f824
  427226:	call   0x405b40
  42722b:	xor    eax,eax
  42722d:	pop    edx
  42722e:	pop    ecx
  42722f:	pop    ecx
  427230:	mov    DWORD PTR fs:[eax],edx
  427233:	push   0x427240
  427238:	ret    
  427239:	jmp    0x4036ac
  42723e:	jmp    0x427238
  427240:	pop    ebp
  427241:	ret    
  427242:	mov    eax,eax
  427244:	pusha  
  427245:	test   BYTE PTR [edx+0x0],0xaa
  427249:	inc    DWORD PTR [eax]
  42724b:	add    BYTE PTR [eax-0xa],ah
  42724e:	inc    edx
  42724f:	add    BYTE PTR [ebx+0x600000ff],ch
  427255:	test   BYTE PTR [edx+0x0],0xac
  427259:	inc    DWORD PTR [eax]
  42725b:	add    BYTE PTR [eax-0xa],ah
  42725e:	inc    edx
  42725f:	add    BYTE PTR [ebp+0x600000ff],ch
  427265:	test   BYTE PTR [edx+0x0],0xae
  427269:	inc    DWORD PTR [eax]
  42726b:	add    BYTE PTR [eax-0xa],ah
  42726e:	inc    edx
  42726f:	add    BYTE PTR [edi+0x600000ff],ch
  427275:	test   BYTE PTR [edx+0x0],0x90
  427279:	inc    DWORD PTR [eax]
  42727b:	add    BYTE PTR [eax-0xa],ah
  42727e:	inc    edx
  42727f:	add    BYTE PTR [ecx+0x600000ff],dl
  427285:	test   BYTE PTR [edx+0x0],0x92
  427289:	inc    DWORD PTR [eax]
  42728b:	add    BYTE PTR [eax-0xa],ah
  42728e:	inc    edx
  42728f:	add    BYTE PTR [ebx+0x600000ff],dl
  427295:	test   BYTE PTR [edx+0x0],0x94
  427299:	inc    DWORD PTR [eax]
  42729b:	add    BYTE PTR [eax-0xa],ah
  42729e:	inc    edx
  42729f:	add    BYTE PTR [ebp+0x550000ff],dl
  4272a5:	mov    ebp,esp
  4272a7:	xor    eax,eax
  4272a9:	push   ebp
  4272aa:	push   0x4272c9
  4272af:	push   DWORD PTR fs:[eax]
  4272b2:	mov    DWORD PTR fs:[eax],esp
  4272b5:	inc    DWORD PTR ds:0x42f83c
  4272bb:	xor    eax,eax
  4272bd:	pop    edx
  4272be:	pop    ecx
  4272bf:	pop    ecx
  4272c0:	mov    DWORD PTR fs:[eax],edx
  4272c3:	push   0x4272d0
  4272c8:	ret    
  4272c9:	jmp    0x4036ac
  4272ce:	jmp    0x4272c8
  4272d0:	pop    ebp
  4272d1:	ret    
  4272d2:	mov    eax,eax
  4272d4:	sub    DWORD PTR ds:0x42f83c,0x1
  4272db:	ret    
  4272dc:	(bad)  
  4272dd:	(bad)  
  4272de:	(bad)  
  4272df:	inc    DWORD PTR ds:0x46000000
  4272e5:	popa   
  4272e6:	ins    BYTE PTR es:[edi],dx
  4272e7:	jae    0x42734e
  4272e9:	add    BYTE PTR [eax],al
  4272eb:	add    bh,bh
  4272ed:	(bad)  
  4272ee:	(bad)  
  4272ef:	inc    DWORD PTR [eax+eax*1]
  4272f2:	add    BYTE PTR [eax],al
  4272f4:	push   esp
  4272f5:	jb     0x42736c
  4272f7:	add    BYTE PTR gs:[eax],al
  4272fa:	add    BYTE PTR [eax],al
  4272fc:	(bad)  
  4272fd:	(bad)  
  4272fe:	(bad)  
  4272ff:	inc    DWORD PTR [ecx]
  427301:	add    BYTE PTR [eax],al
  427303:	add    BYTE PTR [esi],ch
  427305:	add    BYTE PTR [eax],al
  427307:	add    BYTE PTR [ebp-0x75],dl
  42730a:	in     al,dx
  42730b:	xor    eax,eax
  42730d:	push   ebp
  42730e:	push   0x42734e
  427313:	push   DWORD PTR fs:[eax]
  427316:	mov    DWORD PTR fs:[eax],esp
  427319:	inc    DWORD PTR ds:0x42f840
  42731f:	jne    0x427340
  427321:	mov    eax,0x42e38c
  427326:	call   0x403cac
  42732b:	mov    eax,0x42e384
  427330:	mov    ecx,0x2
  427335:	mov    edx,DWORD PTR ds:0x401000
  42733b:	call   0x4045f4
  427340:	xor    eax,eax
  427342:	pop    edx
  427343:	pop    ecx
  427344:	pop    ecx
  427345:	mov    DWORD PTR fs:[eax],edx
  427348:	push   0x427355
  42734d:	ret    
  42734e:	jmp    0x4036ac
  427353:	jmp    0x42734d
  427355:	pop    ebp
  427356:	ret    
  427357:	nop
  427358:	sub    DWORD PTR ds:0x42f840,0x1
  42735f:	ret    
  427360:	push   ebp
  427361:	mov    ebp,esp
  427363:	xor    eax,eax
  427365:	push   ebp
  427366:	push   0x427385
  42736b:	push   DWORD PTR fs:[eax]
  42736e:	mov    DWORD PTR fs:[eax],esp
  427371:	inc    DWORD PTR ds:0x42f844
  427377:	xor    eax,eax
  427379:	pop    edx
  42737a:	pop    ecx
  42737b:	pop    ecx
  42737c:	mov    DWORD PTR fs:[eax],edx
  42737f:	push   0x42738c
  427384:	ret    
  427385:	jmp    0x4036ac
  42738a:	jmp    0x427384
  42738c:	pop    ebp
  42738d:	ret    
  42738e:	mov    eax,eax
  427390:	sub    DWORD PTR ds:0x42f844,0x1
  427397:	ret    
  427398:	in     al,0x73
  42739a:	inc    edx
	...
  4273b7:	add    ah,ah
  4273b9:	jae    0x4273fd
  4273bb:	add    BYTE PTR [eax+eax*1],cl
  4273be:	add    BYTE PTR [eax],al
  4273c0:	mov    dl,ah
  4273c2:	inc    ecx
  4273c3:	add    ah,bl
  4273c5:	xor    eax,DWORD PTR [eax+0x0]
  4273c8:	call   0xec42b400
  4273cd:	xor    eax,DWORD PTR [eax+0x0]
  4273d0:	lock xor eax,DWORD PTR [eax+0x0]
  4273d4:	in     al,0x33
  4273d6:	inc    eax
  4273d7:	add    BYTE PTR [ecx+esi*1+0x40],bl
  4273db:	add    BYTE PTR [eax+0x31],bh
  4273de:	inc    eax
  4273df:	add    BYTE PTR [ecx+esi*1+0x450c0040],dh
  4273e6:	push   ebx
  4273e7:	je     0x42745b
  4273e9:	gs popa 
  4273eb:	ins    DWORD PTR es:[edi],dx
  4273ec:	inc    ebp
  4273ed:	jb     0x427461
  4273ef:	outs   dx,DWORD PTR ds:[esi]
  4273f0:	jb     0x42737f
  4273f2:	inc    eax
  4273f3:	add    BYTE PTR [eax+0x74],al
  4273f6:	inc    edx
	...
  427413:	add    BYTE PTR [eax+0x74],al
  427416:	inc    edx
  427417:	add    BYTE PTR [eax+eax*1],cl
  42741a:	add    BYTE PTR [eax],al
  42741c:	cwde   
  42741d:	jae    0x427461
  42741f:	add    ah,bl
  427421:	xor    eax,DWORD PTR [eax+0x0]
  427424:	call   0xec42b45c
  427429:	xor    eax,DWORD PTR [eax+0x0]
  42742c:	lock xor eax,DWORD PTR [eax+0x0]
  427430:	in     al,0x33
  427432:	inc    eax
  427433:	add    BYTE PTR [ecx+esi*1+0x40],bl
  427437:	add    BYTE PTR [eax+0x31],bh
  42743a:	inc    eax
  42743b:	add    BYTE PTR [ecx+esi*1+0x45100040],dh
  427442:	inc    esi
  427443:	imul   ebp,DWORD PTR [ebp+eiz*2+0x53],0x61657274
  42744b:	ins    DWORD PTR es:[edi],dx
  42744c:	inc    ebp
  42744d:	jb     0x4274c1
  42744f:	outs   dx,DWORD PTR ds:[esi]
  427450:	jb     0x4273df
  427452:	inc    eax
  427453:	add    BYTE PTR [eax+0x4274],ah
	...
  427471:	add    BYTE PTR [eax],al
  427473:	add    BYTE PTR [eax+0xc004274],ah
  427479:	add    BYTE PTR [eax],al
  42747b:	add    ah,dh
  42747d:	jae    0x4274c1
  42747f:	add    ah,bl
  427481:	xor    eax,DWORD PTR [eax+0x0]
  427484:	call   0xec42b4bc
  427489:	xor    eax,DWORD PTR [eax+0x0]
  42748c:	lock xor eax,DWORD PTR [eax+0x0]
  427490:	in     al,0x33
  427492:	inc    eax
  427493:	add    BYTE PTR [ecx+esi*1+0x40],bl
  427497:	add    BYTE PTR [eax+0x31],bh
  42749a:	inc    eax
  42749b:	add    BYTE PTR [ecx+esi*1+0x450d0040],dh
  4274a2:	inc    esi
  4274a3:	inc    ebx
  4274a4:	jb     0x42750b
  4274a6:	popa   
  4274a7:	je     0x42750e
  4274a9:	inc    ebp
  4274aa:	jb     0x42751e
  4274ac:	outs   dx,DWORD PTR ds:[esi]
  4274ad:	jb     0x42743a
  4274af:	sar    ah,0x74
  4274b2:	inc    edx
	...
  4274cf:	add    ah,bh
  4274d1:	je     0x427515
  4274d3:	add    BYTE PTR [eax+eax*1],cl
  4274d6:	add    BYTE PTR [eax],al
  4274d8:	hlt    
  4274d9:	jae    0x42751d
  4274db:	add    ah,bl
  4274dd:	xor    eax,DWORD PTR [eax+0x0]
  4274e0:	call   0xec42b518
  4274e5:	xor    eax,DWORD PTR [eax+0x0]
  4274e8:	lock xor eax,DWORD PTR [eax+0x0]
  4274ec:	in     al,0x33
  4274ee:	inc    eax
  4274ef:	add    BYTE PTR [ecx+esi*1+0x40],bl
  4274f3:	add    BYTE PTR [eax+0x31],bh
  4274f6:	inc    eax
  4274f7:	add    BYTE PTR [ecx+esi*1+0x450b0040],dh
  4274fe:	inc    esi
  4274ff:	dec    edi
  427500:	jo     0x427567
  427502:	outs   dx,BYTE PTR ds:[esi]
  427503:	inc    ebp
  427504:	jb     0x427578
  427506:	outs   dx,DWORD PTR ds:[esi]
  427507:	jb     0x42755d
  427509:	jne    0x42754d
	...
  427527:	add    BYTE PTR [ebp+esi*2+0x42],dl
  42752b:	add    BYTE PTR [eax+eax*1],cl
  42752e:	add    BYTE PTR [eax],al
  427530:	cwde   
  427531:	jae    0x427575
  427533:	add    ah,bl
  427535:	xor    eax,DWORD PTR [eax+0x0]
  427538:	call   0xec42b570
  42753d:	xor    eax,DWORD PTR [eax+0x0]
  427540:	lock xor eax,DWORD PTR [eax+0x0]
  427544:	in     al,0x33
  427546:	inc    eax
  427547:	add    BYTE PTR [ecx+esi*1+0x40],bl
  42754b:	add    BYTE PTR [eax+0x31],bh
  42754e:	inc    eax
  42754f:	add    BYTE PTR [ecx+esi*1+0x450b0040],dh
  427556:	inc    esi
  427557:	imul   ebp,DWORD PTR [ebp+eiz*2+0x72],0x6f727245
  42755f:	jb     0x42750d
  427561:	jne    0x4275a5
	...
  42757f:	add    BYTE PTR [ebp+esi*2+0xc0042],ch
  427586:	add    BYTE PTR [eax],al
  427588:	or     BYTE PTR [ebp+0x42],dh
  42758b:	add    ah,bl
  42758d:	xor    eax,DWORD PTR [eax+0x0]
  427590:	call   0xec42b5c8
  427595:	xor    eax,DWORD PTR [eax+0x0]
  427598:	lock xor eax,DWORD PTR [eax+0x0]
  42759c:	in     al,0x33
  42759e:	inc    eax
  42759f:	add    BYTE PTR [ecx+esi*1+0x40],bl
  4275a3:	add    BYTE PTR [eax+0x31],bh
  4275a6:	inc    eax
  4275a7:	add    BYTE PTR [ecx+esi*1+0x450a0040],dh
  4275ae:	push   edx
  4275af:	gs popa 
  4275b1:	fs inc ebp
  4275b3:	jb     0x427627
  4275b5:	outs   dx,DWORD PTR ds:[esi]
  4275b6:	jb     0x427548
  4275b8:	add    al,0x76
  4275ba:	inc    edx
	...
  4275d7:	add    BYTE PTR [esi+esi*2],al
  4275da:	inc    edx
  4275db:	add    BYTE PTR [eax+eax*1],cl
  4275de:	add    BYTE PTR [eax],al
  4275e0:	or     BYTE PTR [ebp+0x42],dh
  4275e3:	add    ah,bl
  4275e5:	xor    eax,DWORD PTR [eax+0x0]
  4275e8:	call   0xec42b620
  4275ed:	xor    eax,DWORD PTR [eax+0x0]
  4275f0:	lock xor eax,DWORD PTR [eax+0x0]
  4275f4:	in     al,0x33
  4275f6:	inc    eax
  4275f7:	add    BYTE PTR [ecx+esi*1+0x40],bl
  4275fb:	add    BYTE PTR [eax+0x31],bh
  4275fe:	inc    eax
  4275ff:	add    BYTE PTR [ecx+esi*1+0x450b0040],dh
  427606:	push   edi
  427607:	jb     0x427672
  427609:	je     0x427670
  42760b:	inc    ebp
  42760c:	jb     0x427680
  42760e:	outs   dx,DWORD PTR ds:[esi]
  42760f:	jb     0x42766d
  427611:	jbe    0x427655
	...
  42762f:	add    BYTE PTR [esi+esi*2+0x42],bl
  427633:	add    BYTE PTR [eax+eax*1],cl
  427636:	add    BYTE PTR [eax],al
  427638:	mov    dl,ah
  42763a:	inc    ecx
  42763b:	add    ah,bl
  42763d:	xor    eax,DWORD PTR [eax+0x0]
  427640:	call   0xec42b678
  427645:	xor    eax,DWORD PTR [eax+0x0]
  427648:	lock xor eax,DWORD PTR [eax+0x0]
  42764c:	in     al,0x33
  42764e:	inc    eax
  42764f:	add    BYTE PTR [ecx+esi*1+0x40],bl
  427653:	add    BYTE PTR [eax+0x31],bh
  427656:	inc    eax
  427657:	add    BYTE PTR [ecx+esi*1+0x450a0040],dh
  42765e:	dec    esp
  42765f:	imul   esi,DWORD PTR [ebx+0x74],0x6f727245
  427666:	jb     0x4275f8
  427668:	mov    ah,0x76
  42766a:	inc    edx
	...
  427687:	add    BYTE PTR [esi+esi*2+0xc0042],dh
  42768e:	add    BYTE PTR [eax],al
  427690:	mov    dl,ah
  427692:	inc    ecx
  427693:	add    ah,bl
  427695:	xor    eax,DWORD PTR [eax+0x0]
  427698:	call   0xec42b6d0
  42769d:	xor    eax,DWORD PTR [eax+0x0]
  4276a0:	lock xor eax,DWORD PTR [eax+0x0]
  4276a4:	in     al,0x33
  4276a6:	inc    eax
  4276a7:	add    BYTE PTR [ecx+esi*1+0x40],bl
  4276ab:	add    BYTE PTR [eax+0x31],bh
  4276ae:	inc    eax
  4276af:	add    BYTE PTR [ecx+esi*1+0x45100040],dh
  4276b6:	push   ebx
  4276b7:	je     0x42772b
  4276b9:	imul   ebp,DWORD PTR [esi+0x67],0x7473694c
  4276c0:	inc    ebp
  4276c1:	jb     0x427735
  4276c3:	outs   dx,DWORD PTR ds:[esi]
  4276c4:	jb     0x427653
  4276c6:	inc    eax
  4276c7:	add    BYTE PTR [edi+esi*2],dl
  4276ca:	inc    edx
	...
  4276e7:	add    BYTE PTR [edi+esi*2],ah
  4276ea:	inc    edx
  4276eb:	add    BYTE PTR [eax],dl
  4276ed:	add    BYTE PTR [eax],al
  4276ef:	add    BYTE PTR [eax+edx*1],cl
  4276f2:	inc    eax
  4276f3:	add    ah,bl
  4276f5:	xor    eax,DWORD PTR [eax+0x0]
  4276f8:	call   0xec42b730
  4276fd:	xor    eax,DWORD PTR [eax+0x0]
  427700:	lock xor eax,DWORD PTR [eax+0x0]
  427704:	in     al,0x33
  427706:	inc    eax
  427707:	add    BYTE PTR [ecx+esi*1+0x40],bl
  42770b:	add    BYTE PTR [eax+0x31],bh
  42770e:	inc    eax
  42770f:	add    BYTE PTR [eax+0x4000427f],dh
  427715:	add    DWORD PTR [edx+0x0],0x428220
  42771c:	add    al,0x80
  42771e:	inc    edx
  42771f:	add    BYTE PTR [eax+eax*4+0x54050042],al
  427726:	dec    esp
  427727:	imul   esi,DWORD PTR [ebx+0x74],0x7778c08b
  42772e:	inc    edx
	...
  42774b:	add    BYTE PTR [eax+0x77],bh
  42774e:	inc    edx
  42774f:	add    BYTE PTR [eax+eax*1],ah
  427752:	add    BYTE PTR [eax],al
  427754:	or     al,0x10
  427756:	inc    eax
  427757:	add    ah,bl
  427759:	xor    eax,DWORD PTR [eax+0x0]
  42775c:	call   0xec42b794
  427761:	xor    eax,DWORD PTR [eax+0x0]
  427764:	lock xor eax,DWORD PTR [eax+0x0]
  427768:	in     al,0x33
  42776a:	inc    eax
  42776b:	add    BYTE PTR [ecx+esi*1+0x40],bl
  42776f:	add    BYTE PTR [eax+0x31],bh
  427772:	inc    eax
  427773:	add    BYTE PTR [eax-0x7e],bh
  427776:	inc    edx
  427777:	add    BYTE PTR [ebx],cl
  427779:	push   esp
  42777a:	push   esp
  42777b:	push   0x64616572
  427780:	dec    esp
  427781:	imul   esi,DWORD PTR [ebx+0x74],0x4277d0
	...
  427794:	cld    
  427795:	ja     0x4277d9
	...
  42779f:	add    ah,bl
  4277a1:	ja     0x4277e5
  4277a3:	add    dl,ch
  4277a5:	ja     0x4277e9
  4277a7:	add    BYTE PTR [eax+eax*1],al
  4277aa:	add    BYTE PTR [eax],al
  4277ac:	or     al,0x10
  4277ae:	inc    eax
  4277af:	add    ah,bl
  4277b1:	xor    eax,DWORD PTR [eax+0x0]
  4277b4:	call   0xec42b7ec
  4277b9:	xor    eax,DWORD PTR [eax+0x0]
  4277bc:	lock xor eax,DWORD PTR [eax+0x0]
  4277c0:	in     al,0x33
  4277c2:	inc    eax
  4277c3:	add    BYTE PTR [ecx+esi*1+0x40],bl
  4277c7:	add    BYTE PTR [eax+0x31],bh
  4277ca:	inc    eax
  4277cb:	add    BYTE PTR [ebx+eax*4],dl
  4277ce:	inc    edx
  4277cf:	add    BYTE PTR [esp+eax*4],ah
  4277d2:	inc    edx
  4277d3:	add    BYTE PTR [esp+eax*4],ch
  4277d6:	inc    edx
  4277d7:	add    BYTE PTR [eax-0x7d],al
  4277da:	inc    edx
  4277db:	add    BYTE PTR [edx],al
  4277dd:	add    bh,bh
  4277df:	(bad)  
  4277e0:	(bad)  
  4277e1:	jmp    eax
  4277e3:	test   BYTE PTR [edx+0x0],al
  4277e6:	xor    BYTE PTR [edx+eax*2+0x50540b00],al
  4277ed:	gs jb  0x427863
  4277f0:	imul   esi,DWORD PTR [ebx+0x74],0x8b746e65
  4277f7:	sar    ah,0x77
  4277fa:	inc    edx
  4277fb:	add    BYTE PTR [edi],al
  4277fd:	or     edx,DWORD PTR [eax+edx*2+0x65]
  427801:	jb     0x427876
  427803:	imul   esi,DWORD PTR [ebx+0x74],0xd0746e65
  42780a:	ja     0x42784e
  42780c:	add    BYTE PTR [eax+0x10],ah
  42780f:	inc    eax
  427810:	add    BYTE PTR [eax],al
  427812:	add    BYTE PTR [edi],al
  427814:	inc    ebx
  427815:	ins    BYTE PTR es:[edi],dx
  427816:	popa   
  427817:	jae    0x42788c
  427819:	gs jae 0x42781c
  42781c:	add    BYTE PTR [ebp+0x78240040],cl
  427822:	inc    edx
  427823:	add    BYTE PTR [edi],cl
  427825:	cmovns edx,DWORD PTR [ebx+0x74]
  427829:	jb     0x427894
  42782b:	outs   dx,BYTE PTR ds:[esi]
  42782c:	addr16 jae 0x427870
  42782f:	fs popa 
  427831:	jo     0x4278a7
  427833:	gs jb  0x4277b6
  427836:	adc    BYTE PTR [eax+0x0],al
  427839:	add    DWORD PTR [edi+ebp*1],esi
  42783c:	pushf  
  42783d:	jae    0x42782b
  42783f:	push   edx
  427840:	rcl    BYTE PTR [ecx],1
  427842:	sahf   
  427843:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427844:	add    BYTE PTR [eax],ah
  427846:	scas   eax,DWORD PTR es:[edi]
  427847:	cmp    eax,0x4307da82
  42784c:	ins    BYTE PTR es:[edi],dx
  42784d:	popa   
  42784e:	jae    0x4278c3
  427850:	gs jae 0x427855
  427853:	add    bh,bh
  427855:	dec    DWORD PTR [ebx+0x4278a4c0]
	...
  427863:	add    BYTE PTR [ecx+edi*2],ah
  427866:	inc    edx
  427867:	add    BYTE PTR [ecx+edi*2+0x42],al
	...
  427877:	add    BYTE PTR [esi],dh
  427879:	jns    0x4278bd
  42787b:	add    BYTE PTR [eax],dl
  42787d:	add    BYTE PTR [eax],al
  42787f:	add    BYTE PTR [edi+esi*2+0x33dc0042],al
  427886:	inc    eax
  427887:	add    al,ch
  427889:	xor    eax,DWORD PTR [eax+0x0]
  42788c:	in     al,dx
  42788d:	xor    eax,DWORD PTR [eax+0x0]
  427890:	lock xor eax,DWORD PTR [eax+0x0]
  427894:	in     al,0x33
  427896:	inc    eax
  427897:	add    BYTE PTR [ecx+esi*1+0x40],bl
  42789b:	add    BYTE PTR [eax+0x31],bh
  42789e:	inc    eax
  42789f:	add    ah,ah
  4278a1:	test   BYTE PTR [edx+0x0],al
  4278a4:	and    al,0x84
  4278a6:	inc    edx
  4278a7:	add    BYTE PTR [edi+eax*4],bl
  4278aa:	inc    edx
  4278ab:	add    BYTE PTR [esi+eax*4],dl
  4278ae:	inc    edx
  4278af:	add    BYTE PTR [ebx+ebp*1+0x40],ch
  4278b3:	add    BYTE PTR [eax+0x6c004289],ah
  4278b9:	sub    eax,DWORD PTR [eax+0x0]
  4278bc:	test   al,0x89
  4278be:	inc    edx
  4278bf:	add    BYTE PTR [eax],cl
  4278c1:	mov    al,BYTE PTR [edx+0x0]
  4278c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278c5:	mov    es,WORD PTR [edx+0x0]
  4278c8:	fmul   DWORD PTR [esi-0x6fbfffbe]
  4278ce:	inc    edx
  4278cf:	add    al,cl
  4278d1:	nop
  4278d2:	inc    edx
  4278d3:	add    BYTE PTR [eax+0x28004291],ah
  4278d9:	xchg   edx,eax
  4278da:	inc    edx
  4278db:	add    BYTE PTR [eax*4-0x7ac7ffbe],dl
  4278e2:	inc    edx
  4278e3:	add    BYTE PTR [ebp+eax*4+0x42],bl
  4278e7:	add    BYTE PTR [ebx+ebp*1+0x40],ch
  4278eb:	add    BYTE PTR [ebx+ebp*1+0x40],ch
  4278ef:	add    BYTE PTR [eax-0x53ffbd78],bh
  4278f5:	mov    DWORD PTR [edx+0x0],eax
  4278f8:	xor    BYTE PTR [ebx-0x7443ffbe],cl
  4278fe:	inc    edx
  4278ff:	add    BYTE PTR [eax+0x6c00428c],dl
  427905:	sub    eax,DWORD PTR [eax+0x0]
  427908:	les    ecx,FWORD PTR [edx+eax*2+0x428cf400]
  42790f:	add    BYTE PTR [eax-0x73],cl
  427912:	inc    edx
  427913:	add    ah,dh
  427915:	lea    eax,[edx+0x0]
  427918:	mov    WORD PTR [edi-0x701bffbe],cs
  42791e:	inc    edx
  42791f:	add    BYTE PTR [eax-0x70],bh
  427922:	inc    edx
  427923:	add    BYTE PTR [esi],cl
  427925:	add    BYTE PTR [eax],al
  427927:	add    BYTE PTR [eax],al
  427929:	add    BYTE PTR [ecx],al
  42792b:	add    BYTE PTR [eax],al
  42792d:	add    BYTE PTR [eax],ah
  42792f:	js     0x427973
  427931:	add    BYTE PTR [eax+eax*1],cl
  427934:	add    BYTE PTR [eax],al
  427936:	or     BYTE PTR [ebx+edx*2+0x74],dl
  42793a:	jb     0x4279a5
  42793c:	outs   dx,BYTE PTR ds:[esi]
  42793d:	addr16 jae 0x4278d0
  427940:	inc    esp
  427941:	jns    0x427985
  427943:	add    BYTE PTR [edi],al
  427945:	or     BYTE PTR [ebx+edx*2+0x74],dl
  427949:	jb     0x4279b4
  42794b:	outs   dx,BYTE PTR ds:[esi]
  42794c:	addr16 jae 0x4278f3
  42794f:	js     0x427993
  427951:	add    al,bh
  427953:	ja     0x427997
  427955:	add    BYTE PTR [eax],al
  427957:	add    BYTE PTR [edi],al
  427959:	inc    ebx
  42795a:	ins    BYTE PTR es:[edi],dx
  42795b:	popa   
  42795c:	jae    0x4279d1
  42795e:	gs jae 0x427961
  427961:	add    BYTE PTR [ebx+0x427968c0],cl
  427967:	add    BYTE PTR [esi],cl
  427969:	or     edx,DWORD PTR [ebx+edx*2+0x74]
  42796d:	jb     0x4279d8
  42796f:	outs   dx,BYTE PTR ds:[esi]
  427970:	addr16 dec ecx
  427972:	je     0x4279d9
  427974:	ins    DWORD PTR es:[edi],dx
  427975:	or     BYTE PTR [eax],al
  427977:	add    BYTE PTR [eax],al
  427979:	add    DWORD PTR [eax],eax
  42797b:	add    BYTE PTR [eax],al
  42797d:	add    BYTE PTR [eax],dl
  42797f:	inc    eax
  427980:	add    BYTE PTR [eax],al
  427982:	add    BYTE PTR [eax],al
  427984:	add    BYTE PTR [ebp+0x79d40040],cl
  42798a:	inc    edx
	...
  427997:	add    BYTE PTR [edx+edi*2+0x42],bh
	...
  4279a7:	add    BYTE PTR [edx+edi*2+0x42],ch
  4279ab:	add    BYTE PTR [eax],dh
  4279ad:	add    BYTE PTR [eax],al
  4279af:	add    BYTE PTR [eax+0x78],bl
  4279b2:	inc    edx
  4279b3:	add    ah,bl
  4279b5:	xor    eax,DWORD PTR [eax+0x0]
  4279b8:	call   0xec42b9f0
  4279bd:	xor    eax,DWORD PTR [eax+0x0]
  4279c0:	lock xor eax,DWORD PTR [eax+0x0]
  4279c4:	in     al,0x33
  4279c6:	inc    eax
  4279c7:	add    BYTE PTR [ecx+esi*1+0x40],bl
  4279cb:	add    BYTE PTR [eax+0x31],bh
  4279ce:	inc    eax
  4279cf:	add    BYTE PTR [eax-0x6e],ch
  4279d2:	inc    edx
  4279d3:	add    BYTE PTR [esp+eax*4],ah
  4279d6:	inc    edx
  4279d7:	add    BYTE PTR [edi+eax*4],bl
  4279da:	inc    edx
  4279db:	add    BYTE PTR [esi+eax*4],dl
  4279de:	inc    edx
  4279df:	add    BYTE PTR [ebp+edx*4+0x42],al
  4279e3:	add    BYTE PTR [eax-0x6b],bh
  4279e6:	inc    edx
  4279e7:	add    BYTE PTR [ebp+edx*4+0x42],bh
  4279eb:	add    BYTE PTR [eax+0x8004295],al
  4279f1:	mov    al,BYTE PTR [edx+0x0]
  4279f4:	hlt    
  4279f5:	xchg   esi,eax
  4279f6:	inc    edx
  4279f7:	add    BYTE PTR [eax-0x69],dl
  4279fa:	inc    edx
  4279fb:	add    BYTE PTR [eax+ebx*4],ah
  4279fe:	inc    edx
  4279ff:	add    al,cl
  427a01:	nop
  427a02:	inc    edx
  427a03:	add    BYTE PTR [eax-0x68],al
  427a06:	inc    edx
  427a07:	add    al,al
  427a09:	cwde   
  427a0a:	inc    edx
  427a0b:	add    ah,al
  427a0d:	xchg   edx,eax
  427a0e:	inc    edx
  427a0f:	add    ah,dl
  427a11:	xchg   edx,eax
  427a12:	inc    edx
  427a13:	add    BYTE PTR [ebp+eax*4+0x42],bl
  427a17:	add    BYTE PTR [eax-0x6d],dh
  427a1a:	inc    edx
  427a1b:	add    BYTE PTR [eax+0x1c004293],dh
  427a21:	xchg   esp,eax
  427a22:	inc    edx
  427a23:	add    BYTE PTR [ecx+ecx*4-0x6a23ffbe],ch
  427a2a:	inc    edx
  427a2b:	add    BYTE PTR [ebx+ecx*4-0x736fffbe],bh
  427a32:	inc    edx
  427a33:	add    BYTE PTR [eax],bl
  427a35:	xchg   esi,eax
  427a36:	inc    edx
  427a37:	add    BYTE PTR [eax],ch
  427a39:	xchg   esi,eax
  427a3a:	inc    edx
  427a3b:	add    ah,dh
  427a3d:	mov    WORD PTR [edx+0x0],es
  427a40:	dec    eax
  427a41:	lea    eax,[edx+0x0]
  427a44:	hlt    
  427a45:	lea    eax,[edx+0x0]
  427a48:	mov    WORD PTR [edi-0x701bffbe],cs
  427a4e:	inc    edx
  427a4f:	add    BYTE PTR [eax-0x70],bh
  427a52:	inc    edx
  427a53:	add    BYTE PTR [eax],bh
  427a55:	xchg   ebx,eax
  427a56:	inc    edx
  427a57:	add    BYTE PTR [ebx+edx*4+0x42],dl
  427a5b:	add    BYTE PTR [esi+edx*4+0x42],bh
  427a5f:	add    ah,al
  427a61:	xchg   esp,eax
  427a62:	inc    edx
  427a63:	add    BYTE PTR [eax-0x68],bh
  427a66:	inc    edx
  427a67:	add    BYTE PTR [eax+0xb004298],cl
  427a6d:	push   esp
  427a6e:	push   ebx
  427a6f:	je     0x427ae3
  427a71:	imul   ebp,DWORD PTR [esi+0x67],0x7473694c
  427a78:	jl     0x427af4
  427a7a:	inc    edx
  427a7b:	add    BYTE PTR [edi],al
  427a7d:	or     edx,DWORD PTR [ebx+edx*2+0x74]
  427a81:	jb     0x427aec
  427a83:	outs   dx,BYTE PTR ds:[esi]
  427a84:	addr16 dec esp
  427a86:	imul   esi,DWORD PTR [ebx+0x74],0x4279d4
  427a8d:	inc    eax
  427a8e:	jns    0x427ad2
  427a90:	add    BYTE PTR [eax],al
  427a92:	add    BYTE PTR [edi],al
  427a94:	inc    ebx
  427a95:	ins    BYTE PTR es:[edi],dx
  427a96:	popa   
  427a97:	jae    0x427b0c
  427a99:	gs jae 0x427a9c
  427a9c:	add    BYTE PTR [ebp+0x7aec0040],cl
  427aa2:	inc    edx
	...
  427abf:	add    BYTE PTR [eax],cl
  427ac1:	jnp    0x427b05
  427ac3:	add    BYTE PTR [eax+eax*1],al
  427ac6:	add    BYTE PTR [eax],al
  427ac8:	or     al,0x10
  427aca:	inc    eax
  427acb:	add    ah,bl
  427acd:	xor    eax,DWORD PTR [eax+0x0]
  427ad0:	call   0xec42bb08
  427ad5:	xor    eax,DWORD PTR [eax+0x0]
  427ad8:	lock xor eax,DWORD PTR [eax+0x0]
  427adc:	in     al,0x33
  427ade:	inc    eax
  427adf:	add    BYTE PTR [ecx+esi*1+0x40],bl
  427ae3:	add    BYTE PTR [eax+0x31],bh
  427ae6:	inc    eax
  427ae7:	add    BYTE PTR [ecx+esi*1-0x6703ffc0],dh
  427aee:	inc    edx
  427aef:	add    BYTE PTR [eax-0x67],cl
  427af2:	inc    edx
  427af3:	add    BYTE PTR [ecx+ebx*4+0x42],cl
  427af7:	add    BYTE PTR [ebx+ebp*1+0x40],ch
  427afb:	add    BYTE PTR [ebx+ebp*1+0x40],ch
  427aff:	add    ah,ch
  427b01:	cdq    
  427b02:	inc    edx
  427b03:	add    BYTE PTR [eax-0x66],dh
  427b06:	inc    edx
  427b07:	add    BYTE PTR [edi],al
  427b09:	push   esp
  427b0a:	push   ebx
  427b0b:	je     0x427b7f
  427b0d:	gs popa 
  427b0f:	ins    DWORD PTR es:[edi],dx
  427b10:	pop    esp
  427b11:	jnp    0x427b55
	...
  427b2f:	add    BYTE PTR [eax+0x7b],bh
  427b32:	inc    edx
  427b33:	add    BYTE PTR [eax],cl
  427b35:	add    BYTE PTR [eax],al
  427b37:	add    BYTE PTR [eax-0x23ffbd86],ah
  427b3d:	xor    eax,DWORD PTR [eax+0x0]
  427b40:	call   0xec42bb78
  427b45:	xor    eax,DWORD PTR [eax+0x0]
  427b48:	lock xor eax,DWORD PTR [eax+0x0]
  427b4c:	in     al,0x33
  427b4e:	inc    eax
  427b4f:	add    BYTE PTR [ecx+esi*1+0x40],bl
  427b53:	add    BYTE PTR [eax+0x31],bh
  427b56:	inc    eax
  427b57:	add    BYTE PTR [ecx+esi*1-0x6703ffc0],dh
  427b5e:	inc    edx
  427b5f:	add    BYTE PTR [eax-0x4bffbd65],ah
  427b65:	fwait
  427b66:	inc    edx
  427b67:	add    BYTE PTR [ebx+ebx*4+0x42],dl
  427b6b:	add    BYTE PTR [ebx+ebx*4+0x42],ah
  427b6f:	add    ah,ch
  427b71:	cdq    
  427b72:	inc    edx
  427b73:	add    BYTE PTR [ebx+ebx*4+0x42],dh
  427b77:	add    BYTE PTR ds:0x6e614854,cl
  427b7d:	fs ins BYTE PTR es:[edi],dx
  427b7f:	gs push ebx
  427b81:	je     0x427bf5
  427b83:	gs popa 
  427b85:	ins    DWORD PTR es:[edi],dx
  427b86:	mov    eax,eax
  427b88:	aam    0x7b
  427b8a:	inc    edx
	...
  427ba7:	add    al,dh
  427ba9:	jnp    0x427bed
  427bab:	add    BYTE PTR [eax],cl
  427bad:	add    BYTE PTR [eax],al
  427baf:	add    BYTE PTR [eax],dl
  427bb1:	jnp    0x427bf5
  427bb3:	add    ah,bl
  427bb5:	xor    eax,DWORD PTR [eax+0x0]
  427bb8:	call   0xec42bbf0
  427bbd:	xor    eax,DWORD PTR [eax+0x0]
  427bc0:	lock xor eax,DWORD PTR [eax+0x0]
  427bc4:	in     al,0x33
  427bc6:	inc    eax
  427bc7:	add    BYTE PTR [ecx+esi*1+0x40],bl
  427bcb:	add    BYTE PTR [eax+0x31],bh
  427bce:	inc    eax
  427bcf:	add    BYTE PTR [ebp+ebx*4+0x42],dh
  427bd3:	add    ah,bh
  427bd5:	cwde   
  427bd6:	inc    edx
  427bd7:	add    BYTE PTR [eax-0x4bffbd65],ah
  427bdd:	fwait
  427bde:	inc    edx
  427bdf:	add    BYTE PTR [ebx+ebx*4+0x42],dl
  427be3:	add    BYTE PTR [ebx+ebx*4+0x42],ah
  427be7:	add    ah,ch
  427be9:	cdq    
  427bea:	inc    edx
  427beb:	add    BYTE PTR [ebx+ebx*4+0x42],dh
  427bef:	add    BYTE PTR [ebx],cl
  427bf1:	push   esp
  427bf2:	inc    esi
  427bf3:	imul   ebp,DWORD PTR [ebp+eiz*2+0x53],0x61657274
  427bfb:	ins    DWORD PTR es:[edi],dx
  427bfc:	dec    eax
  427bfd:	jl     0x427c41
	...
  427c1b:	add    BYTE PTR [eax+0x7c],cl
  427c1e:	inc    edx
  427c1f:	add    BYTE PTR [eax+eax*1],dl
  427c22:	add    BYTE PTR [eax],al
  427c24:	or     al,0x10
  427c26:	inc    eax
  427c27:	add    ah,bl
  427c29:	xor    eax,DWORD PTR [eax+0x0]
  427c2c:	call   0xec42bc64
  427c31:	xor    eax,DWORD PTR [eax+0x0]
  427c34:	lock xor eax,DWORD PTR [eax+0x0]
  427c38:	in     al,0x33
  427c3a:	inc    eax
  427c3b:	add    BYTE PTR [ecx+esi*1+0x40],bl
  427c3f:	add    BYTE PTR [eax+0x31],bh
  427c42:	inc    eax
  427c43:	add    BYTE PTR [eax],ch
  427c45:	jge    0x427c89
  427c47:	add    BYTE PTR [ecx],cl
  427c49:	push   esp
  427c4a:	push   edx
  427c4b:	gs addr16 inc edi
  427c4e:	jb     0x427cbf
  427c50:	jne    0x427cc2
  427c52:	mov    eax,eax
  427c54:	mov    al,ds:0x427c
	...
  427c71:	add    BYTE PTR [eax],al
  427c73:	add    BYTE PTR [eax+0x2400427c],ah
  427c79:	add    BYTE PTR [eax],al
  427c7b:	add    BYTE PTR [eax+edx*1],cl
  427c7e:	inc    eax
  427c7f:	add    ah,bl
  427c81:	xor    eax,DWORD PTR [eax+0x0]
  427c84:	call   0xec42bcbc
  427c89:	xor    eax,DWORD PTR [eax+0x0]
  427c8c:	lock xor eax,DWORD PTR [eax+0x0]
  427c90:	in     al,0x33
  427c92:	inc    eax
  427c93:	add    BYTE PTR [ecx+esi*1+0x40],bl
  427c97:	add    BYTE PTR [eax+0x31],bh
  427c9a:	inc    eax
  427c9b:	add    BYTE PTR [eax+0xa00427e],ah
  427ca1:	push   esp
  427ca2:	push   edx
  427ca3:	gs addr16 inc edi
  427ca6:	jb     0x427d17
  427ca8:	jne    0x427d1a
  427caa:	jae    0x427c3c
  427cac:	push   ebp
  427cad:	mov    ebp,esp
  427caf:	push   ecx
  427cb0:	push   ebx
  427cb1:	push   esi
  427cb2:	push   edi
  427cb3:	test   dl,dl
  427cb5:	je     0x427cbf
  427cb7:	add    esp,0xfffffff0
  427cba:	call   0x403418
  427cbf:	mov    edi,ecx
  427cc1:	mov    BYTE PTR [ebp-0x1],dl
  427cc4:	mov    ebx,eax
  427cc6:	xor    edx,edx
  427cc8:	mov    eax,ebx
  427cca:	call   0x403194
  427ccf:	mov    dl,0x1
  427cd1:	mov    eax,ds:0x4276c8
  427cd6:	call   0x403194
  427cdb:	mov    DWORD PTR [ebx+0x4],eax
  427cde:	mov    dl,0x1
  427ce0:	mov    eax,ds:0x427988
  427ce5:	call   0x403194
  427cea:	mov    DWORD PTR [ebx+0x8],eax
  427ced:	mov    dl,0x1
  427cef:	mov    eax,ds:0x4276c8
  427cf4:	call   0x403194
  427cf9:	mov    esi,eax
  427cfb:	mov    DWORD PTR [ebx+0xc],esi
  427cfe:	mov    eax,esi
  427d00:	mov    edx,edi
  427d02:	call   0x427fd0
  427d07:	mov    eax,ebx
  427d09:	cmp    BYTE PTR [ebp-0x1],0x0
  427d0d:	je     0x427d1e
  427d0f:	call   0x403470
  427d14:	pop    DWORD PTR fs:0x0
  427d1b:	add    esp,0xc
  427d1e:	mov    eax,ebx
  427d20:	pop    edi
  427d21:	pop    esi
  427d22:	pop    ebx
  427d23:	pop    ecx
  427d24:	pop    ebp
  427d25:	ret    
  427d26:	mov    eax,eax
  427d28:	push   ebx
  427d29:	push   esi
  427d2a:	call   0x403480
  427d2f:	mov    ebx,edx
  427d31:	mov    esi,eax
  427d33:	mov    edx,ebx
  427d35:	and    dl,0xfc
  427d38:	mov    eax,esi
  427d3a:	call   0x4031b4
  427d3f:	mov    eax,DWORD PTR [esi+0x4]
  427d42:	call   0x4031c4
  427d47:	mov    eax,DWORD PTR [esi+0x8]
  427d4a:	call   0x4031c4
  427d4f:	mov    eax,DWORD PTR [esi+0xc]
  427d52:	call   0x4031c4
  427d57:	test   bl,bl
  427d59:	jle    0x427d62
  427d5b:	mov    eax,esi
  427d5d:	call   0x403468
  427d62:	pop    esi
  427d63:	pop    ebx
  427d64:	ret    
  427d65:	lea    eax,[eax+0x0]
  427d68:	push   ebx
  427d69:	push   esi
  427d6a:	mov    ebx,edx
  427d6c:	mov    esi,eax
  427d6e:	test   ebx,ebx
  427d70:	je     0x427d82
  427d72:	mov    eax,esi
  427d74:	call   0x404b8c
  427d79:	cmp    ebx,eax
  427d7b:	je     0x427d82
  427d7d:	xor    eax,eax
  427d7f:	pop    esi
  427d80:	pop    ebx
  427d81:	ret    
  427d82:	mov    al,0x1
  427d84:	pop    esi
  427d85:	pop    ebx
  427d86:	ret    
  427d87:	nop
  427d88:	push   ebx
  427d89:	push   esi
  427d8a:	push   edi
  427d8b:	mov    edi,edx
  427d8d:	mov    esi,eax
  427d8f:	mov    eax,DWORD PTR [esi+0xc]
  427d92:	mov    ebx,DWORD PTR [eax+0x8]
  427d95:	dec    ebx
  427d96:	cmp    ebx,0x0
  427d99:	jl     0x427dc0
  427d9b:	mov    edx,ebx
  427d9d:	mov    eax,DWORD PTR [esi+0xc]
  427da0:	call   0x428110
  427da5:	mov    edx,edi
  427da7:	call   0x427d68
  427dac:	test   al,al
  427dae:	je     0x427dba
  427db0:	mov    edx,ebx
  427db2:	mov    eax,DWORD PTR [esi+0xc]
  427db5:	call   0x42801c
  427dba:	dec    ebx
  427dbb:	cmp    ebx,0xffffffff
  427dbe:	jne    0x427d9b
  427dc0:	mov    eax,DWORD PTR [esi+0x4]
  427dc3:	mov    ebx,DWORD PTR [eax+0x8]
  427dc6:	dec    ebx
  427dc7:	cmp    ebx,0x0
  427dca:	jl     0x427df1
  427dcc:	mov    edx,ebx
  427dce:	mov    eax,DWORD PTR [esi+0x4]
  427dd1:	call   0x428110
  427dd6:	mov    edx,edi
  427dd8:	call   0x427d68
  427ddd:	test   al,al
  427ddf:	je     0x427deb
  427de1:	mov    edx,ebx
  427de3:	mov    eax,DWORD PTR [esi+0x4]
  427de6:	call   0x42801c
  427deb:	dec    ebx
  427dec:	cmp    ebx,0xffffffff
  427def:	jne    0x427dcc
  427df1:	mov    eax,DWORD PTR [esi+0x8]
  427df4:	mov    edx,DWORD PTR [eax]
  427df6:	call   DWORD PTR [edx+0x14]
  427df9:	mov    ebx,eax
  427dfb:	dec    ebx
  427dfc:	cmp    ebx,0x0
  427dff:	jl     0x427e26
  427e01:	mov    edx,ebx
  427e03:	mov    eax,DWORD PTR [esi+0x8]
  427e06:	mov    ecx,DWORD PTR [eax]
  427e08:	call   DWORD PTR [ecx+0x18]
  427e0b:	mov    edx,edi
  427e0d:	call   0x427d68
  427e12:	test   al,al
  427e14:	je     0x427e20
  427e16:	mov    edx,ebx
  427e18:	mov    eax,DWORD PTR [esi+0x8]
  427e1b:	mov    ecx,DWORD PTR [eax]
  427e1d:	call   DWORD PTR [ecx+0x48]
  427e20:	dec    ebx
  427e21:	cmp    ebx,0xffffffff
  427e24:	jne    0x427e01
  427e26:	pop    edi
  427e27:	pop    esi
  427e28:	pop    ebx
  427e29:	ret    
  427e2a:	mov    eax,eax
  427e2c:	push   ebx
  427e2d:	push   esi
  427e2e:	push   edi
  427e2f:	test   dl,dl
  427e31:	je     0x427e3b
  427e33:	add    esp,0xfffffff0
  427e36:	call   0x403418
  427e3b:	mov    ebx,edx
  427e3d:	mov    edi,eax
  427e3f:	xor    edx,edx
  427e41:	mov    eax,edi
  427e43:	call   0x403194
  427e48:	mov    dl,0x1
  427e4a:	mov    eax,ds:0x4276c8
  427e4f:	call   0x403194
  427e54:	mov    DWORD PTR [edi+0x4],eax
  427e57:	lea    eax,[edi+0x8]
  427e5a:	push   eax
  427e5b:	call   0x405b40
  427e60:	mov    ecx,DWORD PTR ds:0x427784
  427e66:	mov    dl,0x1
  427e68:	mov    eax,ds:0x427bfc
  427e6d:	call   0x427cac
  427e72:	mov    esi,eax
  427e74:	mov    eax,DWORD PTR [edi+0x4]
  427e77:	mov    edx,esi
  427e79:	call   0x427fd0
  427e7e:	mov    BYTE PTR [esi+0x10],0x1
  427e82:	mov    eax,edi
  427e84:	test   bl,bl
  427e86:	je     0x427e97
  427e88:	call   0x403470
  427e8d:	pop    DWORD PTR fs:0x0
  427e94:	add    esp,0xc
  427e97:	mov    eax,edi
  427e99:	pop    edi
  427e9a:	pop    esi
  427e9b:	pop    ebx
  427e9c:	ret    
  427e9d:	lea    eax,[eax+0x0]
  427ea0:	push   ebx
  427ea1:	push   esi
  427ea2:	push   edi
  427ea3:	push   ebp
  427ea4:	call   0x403480
  427ea9:	mov    ebx,edx
  427eab:	mov    esi,eax
  427ead:	lea    eax,[esi+0x8]
  427eb0:	push   eax
  427eb1:	call   0x405aa0
  427eb6:	mov    eax,DWORD PTR [esi+0x4]
  427eb9:	mov    ebp,DWORD PTR [eax+0x8]
  427ebc:	dec    ebp
  427ebd:	test   ebp,ebp
  427ebf:	jl     0x427ed7
  427ec1:	inc    ebp
  427ec2:	xor    edi,edi
  427ec4:	mov    eax,DWORD PTR [esi+0x4]
  427ec7:	mov    edx,edi
  427ec9:	call   0x428110
  427ece:	call   0x4031c4
  427ed3:	inc    edi
  427ed4:	dec    ebp
  427ed5:	jne    0x427ec4
  427ed7:	mov    eax,DWORD PTR [esi+0x4]
  427eda:	call   0x4031c4
  427edf:	mov    edx,ebx
  427ee1:	and    dl,0xfc
  427ee4:	mov    eax,esi
  427ee6:	call   0x4031b4
  427eeb:	test   bl,bl
  427eed:	jle    0x427ef6
  427eef:	mov    eax,esi
  427ef1:	call   0x403468
  427ef6:	pop    ebp
  427ef7:	pop    edi
  427ef8:	pop    esi
  427ef9:	pop    ebx
  427efa:	ret    
  427efb:	nop
  427efc:	add    eax,0x8
  427eff:	push   eax
  427f00:	call   0x405aa8
  427f05:	ret    
  427f06:	mov    eax,eax
  427f08:	add    eax,0x8
  427f0b:	push   eax
  427f0c:	call   0x405b48
  427f11:	ret    
  427f12:	mov    eax,eax
  427f14:	push   ebx
  427f15:	push   esi
  427f16:	push   edi
  427f17:	push   ebp
  427f18:	mov    ebp,edx
  427f1a:	mov    edi,eax
  427f1c:	mov    eax,DWORD PTR [edi+0x4]
  427f1f:	mov    ebx,DWORD PTR [eax+0x8]
  427f22:	dec    ebx
  427f23:	cmp    ebx,0x0
  427f26:	jl     0x427f5d
  427f28:	mov    eax,DWORD PTR [edi+0x4]
  427f2b:	mov    edx,ebx
  427f2d:	call   0x428110
  427f32:	mov    esi,eax
  427f34:	mov    edx,ebp
  427f36:	mov    eax,esi
  427f38:	call   0x427d88
  427f3d:	mov    eax,DWORD PTR [esi+0xc]
  427f40:	cmp    DWORD PTR [eax+0x8],0x0
  427f44:	jne    0x427f57
  427f46:	mov    eax,esi
  427f48:	call   0x4031c4
  427f4d:	mov    eax,DWORD PTR [edi+0x4]
  427f50:	mov    edx,ebx
  427f52:	call   0x42801c
  427f57:	dec    ebx
  427f58:	cmp    ebx,0xffffffff
  427f5b:	jne    0x427f28
  427f5d:	pop    ebp
  427f5e:	pop    edi
  427f5f:	pop    esi
  427f60:	pop    ebx
  427f61:	ret    
  427f62:	mov    eax,eax
  427f64:	push   ebp
  427f65:	mov    ebp,esp
  427f67:	push   ebx
  427f68:	mov    ebx,eax
  427f6a:	mov    eax,ds:0x42f858
  427f6f:	call   0x427efc
  427f74:	xor    eax,eax
  427f76:	push   ebp
  427f77:	push   0x427fa6
  427f7c:	push   DWORD PTR fs:[eax]
  427f7f:	mov    DWORD PTR fs:[eax],esp
  427f82:	mov    edx,ebx
  427f84:	mov    eax,ds:0x42f858
  427f89:	call   0x427f14
  427f8e:	xor    eax,eax
  427f90:	pop    edx
  427f91:	pop    ecx
  427f92:	pop    ecx
  427f93:	mov    DWORD PTR fs:[eax],edx
  427f96:	push   0x427fad
  427f9b:	mov    eax,ds:0x42f858
  427fa0:	call   0x427f08
  427fa5:	ret    
  427fa6:	jmp    0x4036ac
  427fab:	jmp    0x427f9b
  427fad:	pop    ebx
  427fae:	pop    ebp
  427faf:	ret    
  427fb0:	push   ebx
  427fb1:	push   esi
  427fb2:	call   0x403480
  427fb7:	mov    ebx,edx
  427fb9:	mov    esi,eax
  427fbb:	mov    eax,esi
  427fbd:	mov    edx,DWORD PTR [eax]
  427fbf:	call   DWORD PTR [edx+0x8]
  427fc2:	test   bl,bl
  427fc4:	jle    0x427fcd
  427fc6:	mov    eax,esi
  427fc8:	call   0x403468
  427fcd:	pop    esi
  427fce:	pop    ebx
  427fcf:	ret    
  427fd0:	push   ebx
  427fd1:	push   esi
  427fd2:	push   edi
  427fd3:	mov    edi,edx
  427fd5:	mov    ebx,eax
  427fd7:	mov    esi,DWORD PTR [ebx+0x8]
  427fda:	cmp    esi,DWORD PTR [ebx+0xc]
  427fdd:	jne    0x427fe5
  427fdf:	mov    eax,ebx
  427fe1:	mov    edx,DWORD PTR [eax]
  427fe3:	call   DWORD PTR [edx]
  427fe5:	mov    eax,DWORD PTR [ebx+0x4]
  427fe8:	mov    DWORD PTR [eax+esi*4],edi
  427feb:	inc    DWORD PTR [ebx+0x8]
  427fee:	test   edi,edi
  427ff0:	je     0x427ffd
  427ff2:	xor    ecx,ecx
  427ff4:	mov    edx,edi
  427ff6:	mov    eax,ebx
  427ff8:	mov    ebx,DWORD PTR [eax]
  427ffa:	call   DWORD PTR [ebx+0x4]
  427ffd:	mov    eax,esi
  427fff:	pop    edi
  428000:	pop    esi
  428001:	pop    ebx
  428002:	ret    
  428003:	nop
  428004:	push   ebx
  428005:	mov    ebx,eax
  428007:	xor    edx,edx
  428009:	mov    eax,ebx
  42800b:	call   0x4281b0
  428010:	xor    edx,edx
  428012:	mov    eax,ebx
  428014:	call   0x428174
  428019:	pop    ebx
  42801a:	ret    
  42801b:	nop
  42801c:	push   ebx
  42801d:	push   esi
  42801e:	push   ecx
  42801f:	mov    esi,edx
  428021:	mov    ebx,eax
  428023:	test   esi,esi
  428025:	jl     0x42802c
  428027:	cmp    esi,DWORD PTR [ebx+0x8]
  42802a:	jl     0x42803b
  42802c:	mov    edx,DWORD PTR ds:0x42e508
  428032:	mov    ecx,esi
  428034:	mov    eax,DWORD PTR [ebx]
  428036:	call   0x4280bc
  42803b:	mov    edx,esi
  42803d:	mov    eax,ebx
  42803f:	call   0x428110
  428044:	mov    DWORD PTR [esp],eax
  428047:	dec    DWORD PTR [ebx+0x8]
  42804a:	mov    eax,DWORD PTR [ebx+0x8]
  42804d:	cmp    esi,eax
  42804f:	jge    0x42806a
  428051:	sub    eax,esi
  428053:	mov    ecx,eax
  428055:	shl    ecx,0x2
  428058:	mov    eax,DWORD PTR [ebx+0x4]
  42805b:	lea    edx,[eax+esi*4]
  42805e:	mov    eax,DWORD PTR [ebx+0x4]
  428061:	lea    eax,[eax+esi*4+0x4]
  428065:	call   0x402b2c
  42806a:	cmp    DWORD PTR [esp],0x0
  42806e:	je     0x42807c
  428070:	mov    cl,0x2
  428072:	mov    edx,DWORD PTR [esp]
  428075:	mov    eax,ebx
  428077:	mov    ebx,DWORD PTR [eax]
  428079:	call   DWORD PTR [ebx+0x4]
  42807c:	pop    edx
  42807d:	pop    esi
  42807e:	pop    ebx
  42807f:	ret    
  428080:	mov    eax,DWORD PTR [ebp+0x4]
  428083:	ret    
  428084:	push   ebx
  428085:	push   esi
  428086:	add    esp,0xfffffff8
  428089:	mov    esi,ecx
  42808b:	mov    ebx,edx
  42808d:	call   0x428080
  428092:	push   eax
  428093:	mov    DWORD PTR [esp+0x4],esi
  428097:	mov    BYTE PTR [esp+0x8],0x0
  42809c:	lea    eax,[esp+0x4]
  4280a0:	push   eax
  4280a1:	push   0x0
  4280a3:	mov    ecx,ebx
  4280a5:	mov    dl,0x1
  4280a7:	mov    eax,ds:0x427610
  4280ac:	call   0x4224fc
  4280b1:	jmp    0x4036e4
  4280b6:	pop    ecx
  4280b7:	pop    edx
  4280b8:	pop    esi
  4280b9:	pop    ebx
  4280ba:	ret    
  4280bb:	nop
  4280bc:	push   ebp
  4280bd:	mov    ebp,esp
  4280bf:	push   0x0
  4280c1:	push   ebx
  4280c2:	push   esi
  4280c3:	mov    esi,ecx
  4280c5:	mov    ebx,edx
  4280c7:	xor    eax,eax
  4280c9:	push   ebp
  4280ca:	push   0x428104
  4280cf:	push   DWORD PTR fs:[eax]
  4280d2:	mov    DWORD PTR fs:[eax],esp
  4280d5:	lea    edx,[ebp-0x4]
  4280d8:	mov    eax,ebx
  4280da:	call   0x4056fc
  4280df:	mov    edx,DWORD PTR [ebp-0x4]
  4280e2:	mov    ecx,esi
  4280e4:	mov    eax,ds:0x4276c8
  4280e9:	call   0x428084
  4280ee:	xor    eax,eax
  4280f0:	pop    edx
  4280f1:	pop    ecx
  4280f2:	pop    ecx
  4280f3:	mov    DWORD PTR fs:[eax],edx
  4280f6:	push   0x42810b
  4280fb:	lea    eax,[ebp-0x4]
  4280fe:	call   0x403cac
  428103:	ret    
  428104:	jmp    0x4036ac
  428109:	jmp    0x4280fb
  42810b:	pop    esi
  42810c:	pop    ebx
  42810d:	pop    ecx
  42810e:	pop    ebp
  42810f:	ret    
  428110:	push   ebx
  428111:	push   esi
  428112:	push   ecx
  428113:	mov    esi,edx
  428115:	mov    ebx,eax
  428117:	test   esi,esi
  428119:	jl     0x428120
  42811b:	cmp    esi,DWORD PTR [ebx+0x8]
  42811e:	jl     0x42812f
  428120:	mov    edx,DWORD PTR ds:0x42e508
  428126:	mov    ecx,esi
  428128:	mov    eax,DWORD PTR [ebx]
  42812a:	call   0x4280bc
  42812f:	mov    eax,DWORD PTR [ebx+0x4]
  428132:	mov    eax,DWORD PTR [eax+esi*4]
  428135:	mov    DWORD PTR [esp],eax
  428138:	mov    eax,DWORD PTR [esp]
  42813b:	pop    edx
  42813c:	pop    esi
  42813d:	pop    ebx
  42813e:	ret    
  42813f:	nop
  428140:	mov    edx,DWORD PTR [eax+0xc]
  428143:	cmp    edx,0x40
  428146:	jle    0x428156
  428148:	mov    ecx,edx
  42814a:	test   ecx,ecx
  42814c:	jns    0x428151
  42814e:	add    ecx,0x3
  428151:	sar    ecx,0x2
  428154:	jmp    0x428167
  428156:	cmp    edx,0x8
  428159:	jle    0x428162
  42815b:	mov    ecx,0x10
  428160:	jmp    0x428167
  428162:	mov    ecx,0x4
  428167:	add    ecx,edx
  428169:	mov    edx,ecx
  42816b:	call   0x428174
  428170:	ret    
  428171:	lea    eax,[eax+0x0]
  428174:	push   ebx
  428175:	push   esi
  428176:	mov    esi,edx
  428178:	mov    ebx,eax
  42817a:	cmp    esi,DWORD PTR [ebx+0x8]
  42817d:	jl     0x428187
  42817f:	cmp    esi,0x7ffffff
  428185:	jle    0x428196
  428187:	mov    edx,DWORD PTR ds:0x42e49c
  42818d:	mov    ecx,esi
  42818f:	mov    eax,DWORD PTR [ebx]
  428191:	call   0x4280bc
  428196:	cmp    esi,DWORD PTR [ebx+0xc]
  428199:	je     0x4281ab
  42819b:	mov    edx,esi
  42819d:	shl    edx,0x2
  4281a0:	lea    eax,[ebx+0x4]
  4281a3:	call   0x4029e4
  4281a8:	mov    DWORD PTR [ebx+0xc],esi
  4281ab:	pop    esi
  4281ac:	pop    ebx
  4281ad:	ret    
  4281ae:	mov    eax,eax
  4281b0:	push   ebx
  4281b1:	push   esi
  4281b2:	push   edi
  4281b3:	push   ebp
  4281b4:	mov    esi,edx
  4281b6:	mov    ebx,eax
  4281b8:	test   esi,esi
  4281ba:	jl     0x4281c4
  4281bc:	cmp    esi,0x7ffffff
  4281c2:	jle    0x4281d3
  4281c4:	mov    edx,DWORD PTR ds:0x42e464
  4281ca:	mov    ecx,esi
  4281cc:	mov    eax,DWORD PTR [ebx]
  4281ce:	call   0x4280bc
  4281d3:	cmp    esi,DWORD PTR [ebx+0xc]
  4281d6:	jle    0x4281e1
  4281d8:	mov    edx,esi
  4281da:	mov    eax,ebx
  4281dc:	call   0x428174
  4281e1:	mov    eax,DWORD PTR [ebx+0x8]
  4281e4:	cmp    esi,eax
  4281e6:	jle    0x428201
  4281e8:	mov    edx,DWORD PTR [ebx+0x4]
  4281eb:	lea    edx,[edx+eax*4]
  4281ee:	mov    ecx,esi
  4281f0:	sub    ecx,eax
  4281f2:	mov    eax,ecx
  4281f4:	shl    eax,0x2
  4281f7:	xor    ecx,ecx
  4281f9:	xchg   edx,eax
  4281fa:	call   0x402c34
  4281ff:	jmp    0x428218
  428201:	mov    ebp,eax
  428203:	dec    ebp
  428204:	mov    edi,esi
  428206:	sub    edi,ebp
  428208:	jg     0x428218
  42820a:	dec    edi
  42820b:	mov    edx,ebp
  42820d:	mov    eax,ebx
  42820f:	call   0x42801c
  428214:	dec    ebp
  428215:	inc    edi
  428216:	jne    0x42820b
  428218:	mov    DWORD PTR [ebx+0x8],esi
  42821b:	pop    ebp
  42821c:	pop    edi
  42821d:	pop    esi
  42821e:	pop    ebx
  42821f:	ret    
  428220:	ret    
  428221:	lea    eax,[eax+0x0]
  428224:	push   ebx
  428225:	push   esi
  428226:	test   dl,dl
  428228:	je     0x428232
  42822a:	add    esp,0xfffffff0
  42822d:	call   0x403418
  428232:	mov    ebx,edx
  428234:	mov    esi,eax
  428236:	xor    edx,edx
  428238:	mov    eax,esi
  42823a:	call   0x403194
  42823f:	lea    eax,[esi+0x8]
  428242:	push   eax
  428243:	call   0x405b40
  428248:	mov    dl,0x1
  42824a:	mov    eax,ds:0x4276c8
  42824f:	call   0x403194
  428254:	mov    DWORD PTR [esi+0x4],eax
  428257:	mov    BYTE PTR [esi+0x20],0x0
  42825b:	mov    eax,esi
  42825d:	test   bl,bl
  42825f:	je     0x428270
  428261:	call   0x403470
  428266:	pop    DWORD PTR fs:0x0
  42826d:	add    esp,0xc
  428270:	mov    eax,esi
  428272:	pop    esi
  428273:	pop    ebx
  428274:	ret    
  428275:	lea    eax,[eax+0x0]
  428278:	push   ebp
  428279:	mov    ebp,esp
  42827b:	add    esp,0xfffffff8
  42827e:	call   0x403480
  428283:	mov    BYTE PTR [ebp-0x5],dl
  428286:	mov    DWORD PTR [ebp-0x4],eax
  428289:	mov    eax,DWORD PTR [ebp-0x4]
  42828c:	call   0x4282f4
  428291:	xor    eax,eax
  428293:	push   ebp
  428294:	push   0x4282da
  428299:	push   DWORD PTR fs:[eax]
  42829c:	mov    DWORD PTR fs:[eax],esp
  42829f:	mov    eax,DWORD PTR [ebp-0x4]
  4282a2:	mov    eax,DWORD PTR [eax+0x4]
  4282a5:	call   0x4031c4
  4282aa:	mov    dl,BYTE PTR [ebp-0x5]
  4282ad:	and    dl,0xfc
  4282b0:	mov    eax,DWORD PTR [ebp-0x4]
  4282b3:	call   0x4031b4
  4282b8:	xor    eax,eax
  4282ba:	pop    edx
  4282bb:	pop    ecx
  4282bc:	pop    ecx
  4282bd:	mov    DWORD PTR fs:[eax],edx
  4282c0:	push   0x4282e1
  4282c5:	mov    eax,DWORD PTR [ebp-0x4]
  4282c8:	call   0x428308
  4282cd:	mov    eax,DWORD PTR [ebp-0x4]
  4282d0:	add    eax,0x8
  4282d3:	push   eax
  4282d4:	call   0x405aa0
  4282d9:	ret    
  4282da:	jmp    0x4036ac
  4282df:	jmp    0x4282c5
  4282e1:	cmp    BYTE PTR [ebp-0x5],0x0
  4282e5:	jle    0x4282ef
  4282e7:	mov    eax,DWORD PTR [ebp-0x4]
  4282ea:	call   0x403468
  4282ef:	pop    ecx
  4282f0:	pop    ecx
  4282f1:	pop    ebp
  4282f2:	ret    
  4282f3:	nop
  4282f4:	push   ebx
  4282f5:	mov    ebx,eax
  4282f7:	lea    eax,[ebx+0x8]
  4282fa:	push   eax
  4282fb:	call   0x405aa8
  428300:	mov    eax,DWORD PTR [ebx+0x4]
  428303:	pop    ebx
  428304:	ret    
  428305:	lea    eax,[eax+0x0]
  428308:	add    eax,0x8
  42830b:	push   eax
  42830c:	call   0x405b48
  428311:	ret    
  428312:	mov    eax,eax
  428314:	push   ebx
  428315:	push   esi
  428316:	call   0x403480
  42831b:	mov    ebx,edx
  42831d:	mov    esi,eax
  42831f:	mov    eax,esi
  428321:	call   0x429e54
  428326:	mov    edx,ebx
  428328:	and    dl,0xfc
  42832b:	mov    eax,esi
  42832d:	call   0x4031b4
  428332:	test   bl,bl
  428334:	jle    0x42833d
  428336:	mov    eax,esi
  428338:	call   0x403468
  42833d:	pop    esi
  42833e:	pop    ebx
  42833f:	ret    
  428340:	test   edx,edx
  428342:	je     0x42834a
  428344:	xchg   edx,eax
  428345:	mov    ecx,DWORD PTR [eax]
  428347:	call   DWORD PTR [ecx]
  428349:	ret    
  42834a:	xor    edx,edx
  42834c:	call   0x428354
  428351:	ret    
  428352:	mov    eax,eax
  428354:	push   ebp
  428355:	mov    ebp,esp
  428357:	add    esp,0xfffffeec
  42835d:	push   ebx
  42835e:	push   esi
  42835f:	xor    ecx,ecx
  428361:	mov    DWORD PTR [ebp-0x4],ecx
  428364:	mov    esi,edx
  428366:	mov    ebx,eax
  428368:	xor    eax,eax
  42836a:	push   ebp
  42836b:	push   0x42840a
  428370:	push   DWORD PTR fs:[eax]
  428373:	mov    DWORD PTR fs:[eax],esp
  428376:	test   esi,esi
  428378:	je     0x428397
  42837a:	lea    edx,[ebp-0x104]
  428380:	mov    eax,DWORD PTR [esi]
  428382:	call   0x40313c
  428387:	lea    edx,[ebp-0x104]
  42838d:	lea    eax,[ebp-0x4]
  428390:	call   0x403f10
  428395:	jmp    0x4283a4
  428397:	lea    eax,[ebp-0x4]
  42839a:	mov    edx,0x428420
  42839f:	call   0x403d44
  4283a4:	mov    eax,DWORD PTR [ebp-0x4]
  4283a7:	mov    DWORD PTR [ebp-0x114],eax
  4283ad:	mov    BYTE PTR [ebp-0x110],0xb
  4283b4:	lea    edx,[ebp-0x104]
  4283ba:	mov    eax,DWORD PTR [ebx]
  4283bc:	call   0x40313c
  4283c1:	lea    eax,[ebp-0x104]
  4283c7:	mov    DWORD PTR [ebp-0x10c],eax
  4283cd:	mov    BYTE PTR [ebp-0x108],0x4
  4283d4:	lea    eax,[ebp-0x114]
  4283da:	push   eax
  4283db:	push   0x1
  4283dd:	mov    ecx,DWORD PTR ds:0x42e46c
  4283e3:	mov    dl,0x1
  4283e5:	mov    eax,ds:0x41e88c
  4283ea:	call   0x4225b8
  4283ef:	call   0x4036e4
  4283f4:	xor    eax,eax
  4283f6:	pop    edx
  4283f7:	pop    ecx
  4283f8:	pop    ecx
  4283f9:	mov    DWORD PTR fs:[eax],edx
  4283fc:	push   0x428411
  428401:	lea    eax,[ebp-0x4]
  428404:	call   0x403cac
  428409:	ret    
  42840a:	jmp    0x4036ac
  42840f:	jmp    0x428401
  428411:	pop    esi
  428412:	pop    ebx
  428413:	mov    esp,ebp
  428415:	pop    ebp
  428416:	ret    
  428417:	add    bh,bh
  428419:	(bad)  
  42841a:	(bad)  
  42841b:	inc    DWORD PTR [ebx]
  42841d:	add    BYTE PTR [eax],al
  42841f:	add    BYTE PTR [esi+0x69],ch
  428422:	ins    BYTE PTR es:[edi],dx
  428423:	add    BYTE PTR [edx-0xd518],dl
  428429:	inc    ebx
  42842b:	nop
  42842c:	ret    
  42842d:	lea    eax,[eax+0x0]
  428430:	push   ebp
  428431:	mov    ebp,esp
  428433:	add    esp,0xfffffefc
  428439:	push   ebx
  42843a:	push   esi
  42843b:	push   edi
  42843c:	xor    ecx,ecx
  42843e:	mov    DWORD PTR [ebp-0x4],ecx
  428441:	mov    edi,edx
  428443:	mov    ebx,eax
  428445:	xor    eax,eax
  428447:	push   ebp
  428448:	push   0x4284c5
  42844d:	push   DWORD PTR fs:[eax]
  428450:	mov    DWORD PTR fs:[eax],esp
  428453:	lea    edx,[ebp-0x104]
  428459:	mov    eax,DWORD PTR [ebx]
  42845b:	call   0x40313c
  428460:	lea    edx,[ebp-0x104]
  428466:	mov    eax,edi
  428468:	call   0x403f10
  42846d:	mov    eax,ebx
  42846f:	mov    si,0xffff
  428473:	call   0x4033b0
  428478:	test   eax,eax
  42847a:	je     0x4284af
  42847c:	mov    eax,ebx
  42847e:	mov    si,0xffff
  428482:	call   0x4033b0
  428487:	lea    edx,[ebp-0x4]
  42848a:	mov    si,0xfffe
  42848e:	call   0x4033b0
  428493:	cmp    DWORD PTR [ebp-0x4],0x0
  428497:	je     0x4284af
  428499:	push   DWORD PTR [ebp-0x4]
  42849c:	push   0x4284dc
  4284a1:	push   DWORD PTR [edi]
  4284a3:	mov    eax,edi
  4284a5:	mov    edx,0x3
  4284aa:	call   0x404008
  4284af:	xor    eax,eax
  4284b1:	pop    edx
  4284b2:	pop    ecx
  4284b3:	pop    ecx
  4284b4:	mov    DWORD PTR fs:[eax],edx
  4284b7:	push   0x4284cc
  4284bc:	lea    eax,[ebp-0x4]
  4284bf:	call   0x403cac
  4284c4:	ret    
  4284c5:	jmp    0x4036ac
  4284ca:	jmp    0x4284bc
  4284cc:	pop    edi
  4284cd:	pop    esi
  4284ce:	pop    ebx
  4284cf:	mov    esp,ebp
  4284d1:	pop    ebp
  4284d2:	ret    
  4284d3:	add    bh,bh
  4284d5:	(bad)  
  4284d6:	(bad)  
  4284d7:	inc    DWORD PTR [ecx]
  4284d9:	add    BYTE PTR [eax],al
  4284db:	add    BYTE PTR [esi],ch
  4284dd:	add    BYTE PTR [eax],al
  4284df:	add    BYTE PTR [ebx],dh
  4284e1:	rol    bl,0x90
  4284e4:	push   ebx
  4284e5:	push   esi
  4284e6:	call   0x403480
  4284eb:	mov    ebx,edx
  4284ed:	mov    esi,eax
  4284ef:	xor    edx,edx
  4284f1:	mov    eax,esi
  4284f3:	call   0x429044
  4284f8:	mov    edx,ebx
  4284fa:	and    dl,0xfc
  4284fd:	mov    eax,esi
  4284ff:	call   0x428314
  428504:	test   bl,bl
  428506:	jle    0x42850f
  428508:	mov    eax,esi
  42850a:	call   0x403468
  42850f:	pop    esi
  428510:	pop    ebx
  428511:	ret    
  428512:	mov    eax,eax
  428514:	push   ebx
  428515:	push   esi
  428516:	push   edi
  428517:	push   ebp
  428518:	mov    ebp,edx
  42851a:	mov    esi,eax
  42851c:	mov    eax,esi
  42851e:	mov    edx,DWORD PTR [eax]
  428520:	call   DWORD PTR [edx+0x14]
  428523:	mov    edi,eax
  428525:	mov    ecx,ebp
  428527:	mov    edx,edi
  428529:	mov    eax,esi
  42852b:	mov    ebx,DWORD PTR [eax]
  42852d:	call   DWORD PTR [ebx+0x60]
  428530:	mov    eax,edi
  428532:	pop    ebp
  428533:	pop    edi
  428534:	pop    esi
  428535:	pop    ebx
  428536:	ret    
  428537:	nop
  428538:	push   ebx
  428539:	push   esi
  42853a:	push   edi
  42853b:	mov    edi,ecx
  42853d:	mov    esi,eax
  42853f:	mov    eax,esi
  428541:	mov    ecx,DWORD PTR [eax]
  428543:	call   DWORD PTR [ecx+0x38]
  428546:	mov    ebx,eax
  428548:	mov    ecx,edi
  42854a:	mov    edx,ebx
  42854c:	mov    eax,esi
  42854e:	mov    esi,DWORD PTR [eax]
  428550:	call   DWORD PTR [esi+0x24]
  428553:	mov    eax,ebx
  428555:	pop    edi
  428556:	pop    esi
  428557:	pop    ebx
  428558:	ret    
  428559:	lea    eax,[eax+0x0]
  42855c:	push   ebp
  42855d:	mov    ebp,esp
  42855f:	add    esp,0xfffffff4
  428562:	push   ebx
  428563:	push   esi
  428564:	push   edi
  428565:	xor    ecx,ecx
  428567:	mov    DWORD PTR [ebp-0xc],ecx
  42856a:	mov    DWORD PTR [ebp-0x8],edx
  42856d:	mov    DWORD PTR [ebp-0x4],eax
  428570:	xor    eax,eax
  428572:	push   ebp
  428573:	push   0x428603
  428578:	push   DWORD PTR fs:[eax]
  42857b:	mov    DWORD PTR fs:[eax],esp
  42857e:	mov    eax,DWORD PTR [ebp-0x4]
  428581:	call   0x4286ac
  428586:	xor    eax,eax
  428588:	push   ebp
  428589:	push   0x4285e6
  42858e:	push   DWORD PTR fs:[eax]
  428591:	mov    DWORD PTR fs:[eax],esp
  428594:	mov    eax,DWORD PTR [ebp-0x8]
  428597:	mov    edx,DWORD PTR [eax]
  428599:	call   DWORD PTR [edx+0x14]
  42859c:	mov    esi,eax
  42859e:	dec    esi
  42859f:	test   esi,esi
  4285a1:	jl     0x4285d0
  4285a3:	inc    esi
  4285a4:	xor    ebx,ebx
  4285a6:	lea    ecx,[ebp-0xc]
  4285a9:	mov    edx,ebx
  4285ab:	mov    eax,DWORD PTR [ebp-0x8]
  4285ae:	mov    edi,DWORD PTR [eax]
  4285b0:	call   DWORD PTR [edi+0xc]
  4285b3:	mov    eax,DWORD PTR [ebp-0xc]
  4285b6:	push   eax
  4285b7:	mov    edx,ebx
  4285b9:	mov    eax,DWORD PTR [ebp-0x8]
  4285bc:	mov    ecx,DWORD PTR [eax]
  4285be:	call   DWORD PTR [ecx+0x18]
  4285c1:	mov    ecx,eax
  4285c3:	mov    eax,DWORD PTR [ebp-0x4]
  4285c6:	pop    edx
  4285c7:	mov    edi,DWORD PTR [eax]
  4285c9:	call   DWORD PTR [edi+0x3c]
  4285cc:	inc    ebx
  4285cd:	dec    esi
  4285ce:	jne    0x4285a6
  4285d0:	xor    eax,eax
  4285d2:	pop    edx
  4285d3:	pop    ecx
  4285d4:	pop    ecx
  4285d5:	mov    DWORD PTR fs:[eax],edx
  4285d8:	push   0x4285ed
  4285dd:	mov    eax,DWORD PTR [ebp-0x4]
  4285e0:	call   0x428768
  4285e5:	ret    
  4285e6:	jmp    0x4036ac
  4285eb:	jmp    0x4285dd
  4285ed:	xor    eax,eax
  4285ef:	pop    edx
  4285f0:	pop    ecx
  4285f1:	pop    ecx
  4285f2:	mov    DWORD PTR fs:[eax],edx
  4285f5:	push   0x42860a
  4285fa:	lea    eax,[ebp-0xc]
  4285fd:	call   0x403cac
  428602:	ret    
  428603:	jmp    0x4036ac
  428608:	jmp    0x4285fa
  42860a:	pop    edi
  42860b:	pop    esi
  42860c:	pop    ebx
  42860d:	mov    esp,ebp
  42860f:	pop    ebp
  428610:	ret    
  428611:	lea    eax,[eax+0x0]
  428614:	push   ebp
  428615:	mov    ebp,esp
  428617:	push   ecx
  428618:	push   ebx
  428619:	push   esi
  42861a:	mov    ebx,edx
  42861c:	mov    DWORD PTR [ebp-0x4],eax
  42861f:	mov    eax,ebx
  428621:	mov    edx,DWORD PTR ds:0x427858
  428627:	call   0x40335c
  42862c:	test   al,al
  42862e:	je     0x42869b
  428630:	mov    eax,DWORD PTR [ebp-0x4]
  428633:	call   0x4286ac
  428638:	xor    eax,eax
  42863a:	push   ebp
  42863b:	push   0x428694
  428640:	push   DWORD PTR fs:[eax]
  428643:	mov    DWORD PTR fs:[eax],esp
  428646:	mov    eax,DWORD PTR [ebp-0x4]
  428649:	mov    edx,DWORD PTR [eax]
  42864b:	call   DWORD PTR [edx+0x44]
  42864e:	mov    esi,ebx
  428650:	mov    al,BYTE PTR [esi+0x4]
  428653:	mov    edx,DWORD PTR [ebp-0x4]
  428656:	mov    BYTE PTR [edx+0x4],al
  428659:	mov    al,BYTE PTR [esi+0x7]
  42865c:	mov    edx,DWORD PTR [ebp-0x4]
  42865f:	mov    BYTE PTR [edx+0x7],al
  428662:	mov    al,BYTE PTR [esi+0x6]
  428665:	mov    edx,DWORD PTR [ebp-0x4]
  428668:	mov    BYTE PTR [edx+0x6],al
  42866b:	mov    al,BYTE PTR [esi+0x5]
  42866e:	mov    edx,DWORD PTR [ebp-0x4]
  428671:	mov    BYTE PTR [edx+0x5],al
  428674:	mov    edx,esi
  428676:	mov    eax,DWORD PTR [ebp-0x4]
  428679:	mov    ecx,DWORD PTR [eax]
  42867b:	call   DWORD PTR [ecx+0x40]
  42867e:	xor    eax,eax
  428680:	pop    edx
  428681:	pop    ecx
  428682:	pop    ecx
  428683:	mov    DWORD PTR fs:[eax],edx
  428686:	push   0x4286a5
  42868b:	mov    eax,DWORD PTR [ebp-0x4]
  42868e:	call   0x428768
  428693:	ret    
  428694:	jmp    0x4036ac
  428699:	jmp    0x42868b
  42869b:	mov    edx,ebx
  42869d:	mov    eax,DWORD PTR [ebp-0x4]
  4286a0:	call   0x428340
  4286a5:	pop    esi
  4286a6:	pop    ebx
  4286a7:	pop    ecx
  4286a8:	pop    ebp
  4286a9:	ret    
  4286aa:	mov    eax,eax
  4286ac:	push   ebx
  4286ad:	mov    ebx,eax
  4286af:	cmp    DWORD PTR [ebx+0x8],0x0
  4286b3:	jne    0x4286be
  4286b5:	mov    dl,0x1
  4286b7:	mov    eax,ebx
  4286b9:	mov    ecx,DWORD PTR [eax]
  4286bb:	call   DWORD PTR [ecx+0x30]
  4286be:	inc    DWORD PTR [ebx+0x8]
  4286c1:	pop    ebx
  4286c2:	ret    
  4286c3:	nop
  4286c4:	push   ebp
  4286c5:	mov    ebp,esp
  4286c7:	push   ebx
  4286c8:	push   esi
  4286c9:	mov    eax,DWORD PTR [ebp+0x8]
  4286cc:	mov    eax,DWORD PTR [eax-0x4]
  4286cf:	mov    esi,DWORD PTR [eax+0x20]
  4286d2:	test   esi,esi
  4286d4:	je     0x428703
  4286d6:	mov    bl,0x1
  4286d8:	mov    eax,DWORD PTR [ebp+0x8]
  4286db:	mov    eax,esi
  4286dd:	mov    edx,DWORD PTR ds:0x427858
  4286e3:	call   0x40335c
  4286e8:	test   al,al
  4286ea:	je     0x428713
  4286ec:	mov    eax,DWORD PTR [ebp+0x8]
  4286ef:	mov    edx,esi
  4286f1:	mov    eax,DWORD PTR [ebp+0x8]
  4286f4:	mov    eax,DWORD PTR [eax-0x8]
  4286f7:	call   0x42877c
  4286fc:	mov    ebx,eax
  4286fe:	xor    bl,0x1
  428701:	jmp    0x428713
  428703:	mov    eax,DWORD PTR [ebp+0x8]
  428706:	mov    eax,DWORD PTR [eax-0x8]
  428709:	mov    edx,DWORD PTR [eax]
  42870b:	call   DWORD PTR [edx+0x14]
  42870e:	test   eax,eax
  428710:	setg   bl
  428713:	mov    eax,ebx
  428715:	pop    esi
  428716:	pop    ebx
  428717:	pop    ebp
  428718:	ret    
  428719:	lea    eax,[eax+0x0]
  42871c:	push   ebp
  42871d:	mov    ebp,esp
  42871f:	add    esp,0xfffffff8
  428722:	push   ebx
  428723:	mov    DWORD PTR [ebp-0x4],edx
  428726:	mov    DWORD PTR [ebp-0x8],eax
  428729:	mov    eax,DWORD PTR [ebp-0x8]
  42872c:	push   eax
  42872d:	push   0x428edc
  428732:	mov    eax,DWORD PTR [ebp-0x8]
  428735:	push   eax
  428736:	push   0x4291a4
  42873b:	push   ebp
  42873c:	call   0x4286c4
  428741:	pop    ecx
  428742:	mov    ecx,eax
  428744:	mov    edx,0x428760
  428749:	mov    eax,DWORD PTR [ebp-0x4]
  42874c:	mov    ebx,DWORD PTR [eax]
  42874e:	call   DWORD PTR [ebx+0x4]
  428751:	pop    ebx
  428752:	pop    ecx
  428753:	pop    ecx
  428754:	pop    ebp
  428755:	ret    
  428756:	add    BYTE PTR [eax],al
  428758:	(bad)  
  428759:	(bad)  
  42875a:	(bad)  
  42875b:	inc    DWORD PTR [edi]
  42875d:	add    BYTE PTR [eax],al
  42875f:	add    BYTE PTR [ebx+0x74],dl
  428762:	jb     0x4287cd
  428764:	outs   dx,BYTE PTR ds:[esi]
  428765:	addr16 jae 0x428768
  428768:	dec    DWORD PTR [eax+0x8]
  42876b:	cmp    DWORD PTR [eax+0x8],0x0
  42876f:	jne    0x428778
  428771:	xor    edx,edx
  428773:	mov    ecx,DWORD PTR [eax]
  428775:	call   DWORD PTR [ecx+0x30]
  428778:	ret    
  428779:	lea    eax,[eax+0x0]
  42877c:	push   ebp
  42877d:	mov    ebp,esp
  42877f:	add    esp,0xffffffec
  428782:	push   ebx
  428783:	push   esi
  428784:	push   edi
  428785:	xor    ecx,ecx
  428787:	mov    DWORD PTR [ebp-0x10],ecx
  42878a:	mov    DWORD PTR [ebp-0x14],ecx
  42878d:	mov    DWORD PTR [ebp-0x8],edx
  428790:	mov    DWORD PTR [ebp-0x4],eax
  428793:	xor    eax,eax
  428795:	push   ebp
  428796:	push   0x428811
  42879b:	push   DWORD PTR fs:[eax]
  42879e:	mov    DWORD PTR fs:[eax],esp
  4287a1:	mov    BYTE PTR [ebp-0x9],0x0
  4287a5:	mov    eax,DWORD PTR [ebp-0x4]
  4287a8:	mov    edx,DWORD PTR [eax]
  4287aa:	call   DWORD PTR [edx+0x14]
  4287ad:	mov    ebx,eax
  4287af:	mov    eax,DWORD PTR [ebp-0x8]
  4287b2:	mov    edx,DWORD PTR [eax]
  4287b4:	call   DWORD PTR [edx+0x14]
  4287b7:	cmp    ebx,eax
  4287b9:	jne    0x4287f6
  4287bb:	mov    esi,ebx
  4287bd:	dec    esi
  4287be:	test   esi,esi
  4287c0:	jl     0x4287f2
  4287c2:	inc    esi
  4287c3:	xor    ebx,ebx
  4287c5:	lea    ecx,[ebp-0x10]
  4287c8:	mov    edx,ebx
  4287ca:	mov    eax,DWORD PTR [ebp-0x4]
  4287cd:	mov    edi,DWORD PTR [eax]
  4287cf:	call   DWORD PTR [edi+0xc]
  4287d2:	mov    eax,DWORD PTR [ebp-0x10]
  4287d5:	push   eax
  4287d6:	lea    ecx,[ebp-0x14]
  4287d9:	mov    edx,ebx
  4287db:	mov    eax,DWORD PTR [ebp-0x8]
  4287de:	mov    edi,DWORD PTR [eax]
  4287e0:	call   DWORD PTR [edi+0xc]
  4287e3:	mov    edx,DWORD PTR [ebp-0x14]
  4287e6:	pop    eax
  4287e7:	call   0x404094
  4287ec:	jne    0x4287f6
  4287ee:	inc    ebx
  4287ef:	dec    esi
  4287f0:	jne    0x4287c5
  4287f2:	mov    BYTE PTR [ebp-0x9],0x1
  4287f6:	xor    eax,eax
  4287f8:	pop    edx
  4287f9:	pop    ecx
  4287fa:	pop    ecx
  4287fb:	mov    DWORD PTR fs:[eax],edx
  4287fe:	push   0x428818
  428803:	lea    eax,[ebp-0x14]
  428806:	mov    edx,0x2
  42880b:	call   0x403cd0
  428810:	ret    
  428811:	jmp    0x4036ac
  428816:	jmp    0x428803
  428818:	mov    al,BYTE PTR [ebp-0x9]
  42881b:	pop    edi
  42881c:	pop    esi
  42881d:	pop    ebx
  42881e:	mov    esp,ebp
  428820:	pop    ebp
  428821:	ret    
  428822:	mov    eax,eax
  428824:	mov    eax,DWORD PTR [ebp+0x4]
  428827:	ret    
  428828:	push   ebx
  428829:	push   esi
  42882a:	add    esp,0xfffffff8
  42882d:	mov    esi,ecx
  42882f:	mov    ebx,edx
  428831:	call   0x428824
  428836:	push   eax
  428837:	mov    DWORD PTR [esp+0x4],esi
  42883b:	mov    BYTE PTR [esp+0x8],0x0
  428840:	lea    eax,[esp+0x4]
  428844:	push   eax
  428845:	push   0x0
  428847:	mov    ecx,ebx
  428849:	mov    dl,0x1
  42884b:	mov    eax,ds:0x427668
  428850:	call   0x4224fc
  428855:	jmp    0x4036e4
  42885a:	pop    ecx
  42885b:	pop    edx
  42885c:	pop    esi
  42885d:	pop    ebx
  42885e:	ret    
  42885f:	nop
  428860:	push   ebp
  428861:	mov    ebp,esp
  428863:	push   0x0
  428865:	push   ebx
  428866:	push   esi
  428867:	push   edi
  428868:	mov    edi,ecx
  42886a:	mov    esi,edx
  42886c:	mov    ebx,eax
  42886e:	xor    eax,eax
  428870:	push   ebp
  428871:	push   0x4288a8
  428876:	push   DWORD PTR fs:[eax]
  428879:	mov    DWORD PTR fs:[eax],esp
  42887c:	lea    edx,[ebp-0x4]
  42887f:	mov    eax,esi
  428881:	call   0x4056fc
  428886:	mov    edx,DWORD PTR [ebp-0x4]
  428889:	mov    ecx,edi
  42888b:	mov    eax,ebx
  42888d:	call   0x428828
  428892:	xor    eax,eax
  428894:	pop    edx
  428895:	pop    ecx
  428896:	pop    ecx
  428897:	mov    DWORD PTR fs:[eax],edx
  42889a:	push   0x4288af
  42889f:	lea    eax,[ebp-0x4]
  4288a2:	call   0x403cac
  4288a7:	ret    
  4288a8:	jmp    0x4036ac
  4288ad:	jmp    0x42889f
  4288af:	pop    edi
  4288b0:	pop    esi
  4288b1:	pop    ebx
  4288b2:	pop    ecx
  4288b3:	pop    ebp
  4288b4:	ret    
  4288b5:	lea    eax,[eax+0x0]
  4288b8:	push   ebp
  4288b9:	mov    ebp,esp
  4288bb:	add    esp,0xfffffff0
  4288be:	push   ebx
  4288bf:	push   esi
  4288c0:	push   edi
  4288c1:	xor    ebx,ebx
  4288c3:	mov    DWORD PTR [ebp-0x10],ebx
  4288c6:	mov    DWORD PTR [ebp-0xc],ebx
  4288c9:	mov    esi,ecx
  4288cb:	mov    ebx,edx
  4288cd:	mov    DWORD PTR [ebp-0x4],eax
  4288d0:	xor    eax,eax
  4288d2:	push   ebp
  4288d3:	push   0x428990
  4288d8:	push   DWORD PTR fs:[eax]
  4288db:	mov    DWORD PTR fs:[eax],esp
  4288de:	mov    eax,DWORD PTR [ebp-0x4]
  4288e1:	call   0x4286ac
  4288e6:	xor    eax,eax
  4288e8:	push   ebp
  4288e9:	push   0x42896e
  4288ee:	push   DWORD PTR fs:[eax]
  4288f1:	mov    DWORD PTR fs:[eax],esp
  4288f4:	lea    ecx,[ebp-0xc]
  4288f7:	mov    edx,ebx
  4288f9:	mov    eax,DWORD PTR [ebp-0x4]
  4288fc:	mov    edi,DWORD PTR [eax]
  4288fe:	call   DWORD PTR [edi+0xc]
  428901:	mov    edx,ebx
  428903:	mov    eax,DWORD PTR [ebp-0x4]
  428906:	mov    ecx,DWORD PTR [eax]
  428908:	call   DWORD PTR [ecx+0x18]
  42890b:	mov    DWORD PTR [ebp-0x8],eax
  42890e:	lea    ecx,[ebp-0x10]
  428911:	mov    edx,esi
  428913:	mov    eax,DWORD PTR [ebp-0x4]
  428916:	mov    edi,DWORD PTR [eax]
  428918:	call   DWORD PTR [edi+0xc]
  42891b:	mov    ecx,DWORD PTR [ebp-0x10]
  42891e:	mov    edx,ebx
  428920:	mov    eax,DWORD PTR [ebp-0x4]
  428923:	mov    edi,DWORD PTR [eax]
  428925:	call   DWORD PTR [edi+0x20]
  428928:	mov    edx,esi
  42892a:	mov    eax,DWORD PTR [ebp-0x4]
  42892d:	mov    ecx,DWORD PTR [eax]
  42892f:	call   DWORD PTR [ecx+0x18]
  428932:	mov    ecx,eax
  428934:	mov    edx,ebx
  428936:	mov    eax,DWORD PTR [ebp-0x4]
  428939:	mov    ebx,DWORD PTR [eax]
  42893b:	call   DWORD PTR [ebx+0x24]
  42893e:	mov    ecx,DWORD PTR [ebp-0xc]
  428941:	mov    edx,esi
  428943:	mov    eax,DWORD PTR [ebp-0x4]
  428946:	mov    ebx,DWORD PTR [eax]
  428948:	call   DWORD PTR [ebx+0x20]
  42894b:	mov    ecx,DWORD PTR [ebp-0x8]
  42894e:	mov    edx,esi
  428950:	mov    eax,DWORD PTR [ebp-0x4]
  428953:	mov    ebx,DWORD PTR [eax]
  428955:	call   DWORD PTR [ebx+0x24]
  428958:	xor    eax,eax
  42895a:	pop    edx
  42895b:	pop    ecx
  42895c:	pop    ecx
  42895d:	mov    DWORD PTR fs:[eax],edx
  428960:	push   0x428975
  428965:	mov    eax,DWORD PTR [ebp-0x4]
  428968:	call   0x428768
  42896d:	ret    
  42896e:	jmp    0x4036ac
  428973:	jmp    0x428965
  428975:	xor    eax,eax
  428977:	pop    edx
  428978:	pop    ecx
  428979:	pop    ecx
  42897a:	mov    DWORD PTR fs:[eax],edx
  42897d:	push   0x428997
  428982:	lea    eax,[ebp-0x10]
  428985:	mov    edx,0x2
  42898a:	call   0x403cd0
  42898f:	ret    
  428990:	jmp    0x4036ac
  428995:	jmp    0x428982
  428997:	pop    edi
  428998:	pop    esi
  428999:	pop    ebx
  42899a:	mov    esp,ebp
  42899c:	pop    ebp
  42899d:	ret    
  42899e:	mov    eax,eax
  4289a0:	mov    edx,DWORD PTR [eax]
  4289a2:	call   DWORD PTR [edx+0x14]
  4289a5:	ret    
  4289a6:	mov    eax,eax
  4289a8:	xor    eax,eax
  4289aa:	ret    
  4289ab:	nop
  4289ac:	push   ebp
  4289ad:	mov    ebp,esp
  4289af:	add    esp,0xfffffff8
  4289b2:	push   ebx
  4289b3:	xor    edx,edx
  4289b5:	mov    DWORD PTR [ebp-0x8],edx
  4289b8:	mov    ebx,eax
  4289ba:	xor    eax,eax
  4289bc:	push   ebp
  4289bd:	push   0x4289f8
  4289c2:	push   DWORD PTR fs:[eax]
  4289c5:	mov    DWORD PTR fs:[eax],esp
  4289c8:	lea    edx,[ebp-0x8]
  4289cb:	mov    eax,ebx
  4289cd:	mov    ecx,DWORD PTR [eax]
  4289cf:	call   DWORD PTR [ecx+0x1c]
  4289d2:	mov    eax,DWORD PTR [ebp-0x8]
  4289d5:	call   0x404148
  4289da:	call   0x41f770
  4289df:	mov    DWORD PTR [ebp-0x4],eax
  4289e2:	xor    eax,eax
  4289e4:	pop    edx
  4289e5:	pop    ecx
  4289e6:	pop    ecx
  4289e7:	mov    DWORD PTR fs:[eax],edx
  4289ea:	push   0x4289ff
  4289ef:	lea    eax,[ebp-0x8]
  4289f2:	call   0x403cac
  4289f7:	ret    
  4289f8:	jmp    0x4036ac
  4289fd:	jmp    0x4289ef
  4289ff:	mov    eax,DWORD PTR [ebp-0x4]
  428a02:	pop    ebx
  428a03:	pop    ecx
  428a04:	pop    ecx
  428a05:	pop    ebp
  428a06:	ret    
  428a07:	nop
  428a08:	push   ebp
  428a09:	mov    ebp,esp
  428a0b:	add    esp,0xffffffe0
  428a0e:	push   ebx
  428a0f:	push   esi
  428a10:	push   edi
  428a11:	xor    ecx,ecx
  428a13:	mov    DWORD PTR [ebp-0x20],ecx
  428a16:	mov    DWORD PTR [ebp-0x18],ecx
  428a19:	mov    DWORD PTR [ebp-0x1c],ecx
  428a1c:	mov    DWORD PTR [ebp-0x8],edx
  428a1f:	mov    DWORD PTR [ebp-0x4],eax
  428a22:	xor    eax,eax
  428a24:	push   ebp
  428a25:	push   0x428b13
  428a2a:	push   DWORD PTR fs:[eax]
  428a2d:	mov    DWORD PTR fs:[eax],esp
  428a30:	mov    eax,DWORD PTR [ebp-0x4]
  428a33:	mov    edx,DWORD PTR [eax]
  428a35:	call   DWORD PTR [edx+0x14]
  428a38:	mov    DWORD PTR [ebp-0x10],eax
  428a3b:	xor    ebx,ebx
  428a3d:	lea    eax,[ebp-0x1c]
  428a40:	mov    edx,0x428b2c
  428a45:	call   0x403d44
  428a4a:	mov    esi,DWORD PTR [ebp-0x10]
  428a4d:	dec    esi
  428a4e:	test   esi,esi
  428a50:	jl     0x428a84
  428a52:	inc    esi
  428a53:	mov    DWORD PTR [ebp-0xc],0x0
  428a5a:	lea    ecx,[ebp-0x20]
  428a5d:	mov    edx,DWORD PTR [ebp-0xc]
  428a60:	mov    eax,DWORD PTR [ebp-0x4]
  428a63:	mov    edi,DWORD PTR [eax]
  428a65:	call   DWORD PTR [edi+0xc]
  428a68:	mov    eax,DWORD PTR [ebp-0x20]
  428a6b:	call   0x403f48
  428a70:	mov    edi,eax
  428a72:	mov    eax,DWORD PTR [ebp-0x1c]
  428a75:	call   0x403f48
  428a7a:	add    edi,eax
  428a7c:	add    ebx,edi
  428a7e:	inc    DWORD PTR [ebp-0xc]
  428a81:	dec    esi
  428a82:	jne    0x428a5a
  428a84:	mov    eax,DWORD PTR [ebp-0x8]
  428a87:	mov    ecx,ebx
  428a89:	xor    edx,edx
  428a8b:	call   0x403d9c
  428a90:	mov    eax,DWORD PTR [ebp-0x8]
  428a93:	mov    eax,DWORD PTR [eax]
  428a95:	mov    DWORD PTR [ebp-0x14],eax
  428a98:	mov    esi,DWORD PTR [ebp-0x10]
  428a9b:	dec    esi
  428a9c:	test   esi,esi
  428a9e:	jl     0x428af8
  428aa0:	inc    esi
  428aa1:	mov    DWORD PTR [ebp-0xc],0x0
  428aa8:	lea    ecx,[ebp-0x18]
  428aab:	mov    edx,DWORD PTR [ebp-0xc]
  428aae:	mov    eax,DWORD PTR [ebp-0x4]
  428ab1:	mov    ebx,DWORD PTR [eax]
  428ab3:	call   DWORD PTR [ebx+0xc]
  428ab6:	mov    eax,DWORD PTR [ebp-0x18]
  428ab9:	call   0x403f48
  428abe:	mov    ebx,eax
  428ac0:	test   ebx,ebx
  428ac2:	je     0x428ad4
  428ac4:	mov    edx,DWORD PTR [ebp-0x14]
  428ac7:	mov    eax,DWORD PTR [ebp-0x18]
  428aca:	mov    ecx,ebx
  428acc:	call   0x402b2c
  428ad1:	add    DWORD PTR [ebp-0x14],ebx
  428ad4:	mov    eax,DWORD PTR [ebp-0x1c]
  428ad7:	call   0x403f48
  428adc:	mov    ebx,eax
  428ade:	test   ebx,ebx
  428ae0:	je     0x428af2
  428ae2:	mov    edx,DWORD PTR [ebp-0x14]
  428ae5:	mov    eax,DWORD PTR [ebp-0x1c]
  428ae8:	mov    ecx,ebx
  428aea:	call   0x402b2c
  428aef:	add    DWORD PTR [ebp-0x14],ebx
  428af2:	inc    DWORD PTR [ebp-0xc]
  428af5:	dec    esi
  428af6:	jne    0x428aa8
  428af8:	xor    eax,eax
  428afa:	pop    edx
  428afb:	pop    ecx
  428afc:	pop    ecx
  428afd:	mov    DWORD PTR fs:[eax],edx
  428b00:	push   0x428b1a
  428b05:	lea    eax,[ebp-0x20]
  428b08:	mov    edx,0x3
  428b0d:	call   0x403cd0
  428b12:	ret    
  428b13:	jmp    0x4036ac
  428b18:	jmp    0x428b05
  428b1a:	pop    edi
  428b1b:	pop    esi
  428b1c:	pop    ebx
  428b1d:	mov    esp,ebp
  428b1f:	pop    ebp
  428b20:	ret    
  428b21:	add    BYTE PTR [eax],al
  428b23:	add    bh,bh
  428b25:	(bad)  
  428b26:	(bad)  
  428b27:	inc    DWORD PTR [edx]
  428b29:	add    BYTE PTR [eax],al
  428b2b:	add    BYTE PTR ds:0x5500000a,cl
  428b31:	mov    ebp,esp
  428b33:	add    esp,0xfffffff4
  428b36:	push   ebx
  428b37:	push   esi
  428b38:	push   edi
  428b39:	xor    ecx,ecx
  428b3b:	mov    DWORD PTR [ebp-0xc],ecx
  428b3e:	mov    DWORD PTR [ebp-0x4],edx
  428b41:	mov    ebx,eax
  428b43:	xor    eax,eax
  428b45:	push   ebp
  428b46:	push   0x428ba8
  428b4b:	push   DWORD PTR fs:[eax]
  428b4e:	mov    DWORD PTR fs:[eax],esp
  428b51:	mov    eax,ebx
  428b53:	mov    edx,DWORD PTR [eax]
  428b55:	call   DWORD PTR [edx+0x14]
  428b58:	mov    esi,eax
  428b5a:	dec    esi
  428b5b:	test   esi,esi
  428b5d:	jl     0x428b8b
  428b5f:	inc    esi
  428b60:	mov    DWORD PTR [ebp-0x8],0x0
  428b67:	lea    ecx,[ebp-0xc]
  428b6a:	mov    edx,DWORD PTR [ebp-0x8]
  428b6d:	mov    eax,ebx
  428b6f:	mov    edi,DWORD PTR [eax]
  428b71:	call   DWORD PTR [edi+0xc]
  428b74:	mov    edx,DWORD PTR [ebp-0xc]
  428b77:	mov    ecx,DWORD PTR [ebp-0x4]
  428b7a:	mov    eax,ebx
  428b7c:	mov    edi,DWORD PTR [eax]
  428b7e:	call   DWORD PTR [edi+0x34]
  428b81:	test   eax,eax
  428b83:	je     0x428b92
  428b85:	inc    DWORD PTR [ebp-0x8]
  428b88:	dec    esi
  428b89:	jne    0x428b67
  428b8b:	mov    DWORD PTR [ebp-0x8],0xffffffff
  428b92:	xor    eax,eax
  428b94:	pop    edx
  428b95:	pop    ecx
  428b96:	pop    ecx
  428b97:	mov    DWORD PTR fs:[eax],edx
  428b9a:	push   0x428baf
  428b9f:	lea    eax,[ebp-0xc]
  428ba2:	call   0x403cac
  428ba7:	ret    
  428ba8:	jmp    0x4036ac
  428bad:	jmp    0x428b9f
  428baf:	mov    eax,DWORD PTR [ebp-0x8]
  428bb2:	pop    edi
  428bb3:	pop    esi
  428bb4:	pop    ebx
  428bb5:	mov    esp,ebp
  428bb7:	pop    ebp
  428bb8:	ret    
  428bb9:	lea    eax,[eax+0x0]
  428bbc:	push   ebp
  428bbd:	mov    ebp,esp
  428bbf:	add    esp,0xffffffe8
  428bc2:	push   ebx
  428bc3:	push   esi
  428bc4:	xor    ecx,ecx
  428bc6:	mov    DWORD PTR [ebp-0x18],ecx
  428bc9:	mov    DWORD PTR [ebp-0x14],ecx
  428bcc:	mov    DWORD PTR [ebp-0xc],ecx
  428bcf:	mov    DWORD PTR [ebp-0x4],edx
  428bd2:	mov    ebx,eax
  428bd4:	xor    eax,eax
  428bd6:	push   ebp
  428bd7:	push   0x428c7f
  428bdc:	push   DWORD PTR fs:[eax]
  428bdf:	mov    DWORD PTR fs:[eax],esp
  428be2:	mov    eax,ebx
  428be4:	mov    edx,DWORD PTR [eax]
  428be6:	call   DWORD PTR [edx+0x14]
  428be9:	dec    eax
  428bea:	test   eax,eax
  428bec:	jl     0x428c55
  428bee:	inc    eax
  428bef:	mov    DWORD PTR [ebp-0x10],eax
  428bf2:	mov    DWORD PTR [ebp-0x8],0x0
  428bf9:	lea    ecx,[ebp-0xc]
  428bfc:	mov    edx,DWORD PTR [ebp-0x8]
  428bff:	mov    eax,ebx
  428c01:	mov    esi,DWORD PTR [eax]
  428c03:	call   DWORD PTR [esi+0xc]
  428c06:	mov    eax,ebx
  428c08:	call   0x429234
  428c0d:	mov    edx,eax
  428c0f:	lea    eax,[ebp-0x14]
  428c12:	call   0x403e94
  428c17:	mov    eax,DWORD PTR [ebp-0x14]
  428c1a:	mov    edx,DWORD PTR [ebp-0xc]
  428c1d:	call   0x423030
  428c22:	mov    esi,eax
  428c24:	test   esi,esi
  428c26:	je     0x428c4d
  428c28:	lea    eax,[ebp-0x18]
  428c2b:	push   eax
  428c2c:	mov    ecx,esi
  428c2e:	dec    ecx
  428c2f:	mov    edx,0x1
  428c34:	mov    eax,DWORD PTR [ebp-0xc]
  428c37:	call   0x4041a0
  428c3c:	mov    edx,DWORD PTR [ebp-0x18]
  428c3f:	mov    ecx,DWORD PTR [ebp-0x4]
  428c42:	mov    eax,ebx
  428c44:	mov    esi,DWORD PTR [eax]
  428c46:	call   DWORD PTR [esi+0x34]
  428c49:	test   eax,eax
  428c4b:	je     0x428c5c
  428c4d:	inc    DWORD PTR [ebp-0x8]
  428c50:	dec    DWORD PTR [ebp-0x10]
  428c53:	jne    0x428bf9
  428c55:	mov    DWORD PTR [ebp-0x8],0xffffffff
  428c5c:	xor    eax,eax
  428c5e:	pop    edx
  428c5f:	pop    ecx
  428c60:	pop    ecx
  428c61:	mov    DWORD PTR fs:[eax],edx
  428c64:	push   0x428c86
  428c69:	lea    eax,[ebp-0x18]
  428c6c:	mov    edx,0x2
  428c71:	call   0x403cd0
  428c76:	lea    eax,[ebp-0xc]
  428c79:	call   0x403cac
  428c7e:	ret    
  428c7f:	jmp    0x4036ac
  428c84:	jmp    0x428c69
  428c86:	mov    eax,DWORD PTR [ebp-0x8]
  428c89:	pop    esi
  428c8a:	pop    ebx
  428c8b:	mov    esp,ebp
  428c8d:	pop    ebp
  428c8e:	ret    
  428c8f:	nop
  428c90:	push   ebx
  428c91:	push   esi
  428c92:	push   edi
  428c93:	push   ebp
  428c94:	mov    ebp,edx
  428c96:	mov    edi,eax
  428c98:	mov    eax,edi
  428c9a:	mov    edx,DWORD PTR [eax]
  428c9c:	call   DWORD PTR [edx+0x14]
  428c9f:	mov    ebx,eax
  428ca1:	dec    ebx
  428ca2:	test   ebx,ebx
  428ca4:	jl     0x428cba
  428ca6:	inc    ebx
  428ca7:	xor    esi,esi
  428ca9:	mov    edx,esi
  428cab:	mov    eax,edi
  428cad:	mov    ecx,DWORD PTR [eax]
  428caf:	call   DWORD PTR [ecx+0x18]
  428cb2:	cmp    ebp,eax
  428cb4:	je     0x428cbd
  428cb6:	inc    esi
  428cb7:	dec    ebx
  428cb8:	jne    0x428ca9
  428cba:	or     esi,0xffffffff
  428cbd:	mov    eax,esi
  428cbf:	pop    ebp
  428cc0:	pop    edi
  428cc1:	pop    esi
  428cc2:	pop    ebx
  428cc3:	ret    
  428cc4:	push   ebp
  428cc5:	mov    ebp,esp
  428cc7:	push   ecx
  428cc8:	push   ebx
  428cc9:	push   esi
  428cca:	push   edi
  428ccb:	mov    DWORD PTR [ebp-0x4],ecx
  428cce:	mov    edi,edx
  428cd0:	mov    esi,eax
  428cd2:	mov    ecx,DWORD PTR [ebp-0x4]
  428cd5:	mov    edx,edi
  428cd7:	mov    eax,esi
  428cd9:	mov    ebx,DWORD PTR [eax]
  428cdb:	call   DWORD PTR [ebx+0x60]
  428cde:	mov    ecx,DWORD PTR [ebp+0x8]
  428ce1:	mov    edx,edi
  428ce3:	mov    eax,esi
  428ce5:	mov    ebx,DWORD PTR [eax]
  428ce7:	call   DWORD PTR [ebx+0x24]
  428cea:	pop    edi
  428ceb:	pop    esi
  428cec:	pop    ebx
  428ced:	pop    ecx
  428cee:	pop    ebp
  428cef:	ret    0x4
  428cf2:	mov    eax,eax
  428cf4:	push   ebp
  428cf5:	mov    ebp,esp
  428cf7:	push   ecx
  428cf8:	push   esi
  428cf9:	mov    esi,eax
  428cfb:	push   0x20
  428cfd:	mov    ecx,edx
  428cff:	mov    eax,ds:0x427b88
  428d04:	mov    dl,0x1
  428d06:	call   0x429bdc
  428d0b:	mov    DWORD PTR [ebp-0x4],eax
  428d0e:	xor    eax,eax
  428d10:	push   ebp
  428d11:	push   0x428d3c
  428d16:	push   DWORD PTR fs:[eax]
  428d19:	mov    DWORD PTR fs:[eax],esp
  428d1c:	mov    edx,DWORD PTR [ebp-0x4]
  428d1f:	mov    eax,esi
  428d21:	mov    ecx,DWORD PTR [eax]
  428d23:	call   DWORD PTR [ecx+0x6c]
  428d26:	xor    eax,eax
  428d28:	pop    edx
  428d29:	pop    ecx
  428d2a:	pop    ecx
  428d2b:	mov    DWORD PTR fs:[eax],edx
  428d2e:	push   0x428d43
  428d33:	mov    eax,DWORD PTR [ebp-0x4]
  428d36:	call   0x4031c4
  428d3b:	ret    
  428d3c:	jmp    0x4036ac
  428d41:	jmp    0x428d33
  428d43:	pop    esi
  428d44:	pop    ecx
  428d45:	pop    ebp
  428d46:	ret    
  428d47:	nop
  428d48:	push   ebp
  428d49:	mov    ebp,esp
  428d4b:	add    esp,0xfffffff8
  428d4e:	push   ebx
  428d4f:	push   esi
  428d50:	xor    ecx,ecx
  428d52:	mov    DWORD PTR [ebp-0x8],ecx
  428d55:	mov    ebx,edx
  428d57:	mov    DWORD PTR [ebp-0x4],eax
  428d5a:	xor    eax,eax
  428d5c:	push   ebp
  428d5d:	push   0x428de5
  428d62:	push   DWORD PTR fs:[eax]
  428d65:	mov    DWORD PTR fs:[eax],esp
  428d68:	mov    eax,DWORD PTR [ebp-0x4]
  428d6b:	call   0x4286ac
  428d70:	xor    eax,eax
  428d72:	push   ebp
  428d73:	push   0x428dc8
  428d78:	push   DWORD PTR fs:[eax]
  428d7b:	mov    DWORD PTR fs:[eax],esp
  428d7e:	mov    eax,ebx
  428d80:	mov    edx,DWORD PTR [eax]
  428d82:	call   DWORD PTR [edx]
  428d84:	mov    esi,eax
  428d86:	mov    eax,ebx
  428d88:	call   0x4298dc
  428d8d:	sub    esi,eax
  428d8f:	lea    eax,[ebp-0x8]
  428d92:	mov    ecx,esi
  428d94:	xor    edx,edx
  428d96:	call   0x403d9c
  428d9b:	mov    edx,DWORD PTR [ebp-0x8]
  428d9e:	mov    ecx,esi
  428da0:	mov    eax,ebx
  428da2:	mov    ebx,DWORD PTR [eax]
  428da4:	call   DWORD PTR [ebx+0xc]
  428da7:	mov    edx,DWORD PTR [ebp-0x8]
  428daa:	mov    eax,DWORD PTR [ebp-0x4]
  428dad:	mov    ecx,DWORD PTR [eax]
  428daf:	call   DWORD PTR [ecx+0x2c]
  428db2:	xor    eax,eax
  428db4:	pop    edx
  428db5:	pop    ecx
  428db6:	pop    ecx
  428db7:	mov    DWORD PTR fs:[eax],edx
  428dba:	push   0x428dcf
  428dbf:	mov    eax,DWORD PTR [ebp-0x4]
  428dc2:	call   0x428768
  428dc7:	ret    
  428dc8:	jmp    0x4036ac
  428dcd:	jmp    0x428dbf
  428dcf:	xor    eax,eax
  428dd1:	pop    edx
  428dd2:	pop    ecx
  428dd3:	pop    ecx
  428dd4:	mov    DWORD PTR fs:[eax],edx
  428dd7:	push   0x428dec
  428ddc:	lea    eax,[ebp-0x8]
  428ddf:	call   0x403cac
  428de4:	ret    
  428de5:	jmp    0x4036ac
  428dea:	jmp    0x428ddc
  428dec:	pop    esi
  428ded:	pop    ebx
  428dee:	pop    ecx
  428def:	pop    ecx
  428df0:	pop    ebp
  428df1:	ret    
  428df2:	mov    eax,eax
  428df4:	push   ebp
  428df5:	mov    ebp,esp
  428df7:	add    esp,0xfffffff8
  428dfa:	push   ebx
  428dfb:	push   esi
  428dfc:	push   edi
  428dfd:	xor    ebx,ebx
  428dff:	mov    DWORD PTR [ebp-0x8],ebx
  428e02:	mov    esi,ecx
  428e04:	mov    ebx,edx
  428e06:	mov    DWORD PTR [ebp-0x4],eax
  428e09:	xor    eax,eax
  428e0b:	push   ebp
  428e0c:	push   0x428e95
  428e11:	push   DWORD PTR fs:[eax]
  428e14:	mov    DWORD PTR fs:[eax],esp
  428e17:	cmp    esi,ebx
  428e19:	je     0x428e7f
  428e1b:	mov    eax,DWORD PTR [ebp-0x4]
  428e1e:	call   0x4286ac
  428e23:	xor    eax,eax
  428e25:	push   ebp
  428e26:	push   0x428e78
  428e2b:	push   DWORD PTR fs:[eax]
  428e2e:	mov    DWORD PTR fs:[eax],esp
  428e31:	lea    ecx,[ebp-0x8]
  428e34:	mov    edx,ebx
  428e36:	mov    eax,DWORD PTR [ebp-0x4]
  428e39:	mov    edi,DWORD PTR [eax]
  428e3b:	call   DWORD PTR [edi+0xc]
  428e3e:	mov    edx,ebx
  428e40:	mov    eax,DWORD PTR [ebp-0x4]
  428e43:	mov    ecx,DWORD PTR [eax]
  428e45:	call   DWORD PTR [ecx+0x18]
  428e48:	mov    edi,eax
  428e4a:	mov    edx,ebx
  428e4c:	mov    eax,DWORD PTR [ebp-0x4]
  428e4f:	mov    ecx,DWORD PTR [eax]
  428e51:	call   DWORD PTR [ecx+0x48]
  428e54:	push   edi
  428e55:	mov    ecx,DWORD PTR [ebp-0x8]
  428e58:	mov    edx,esi
  428e5a:	mov    eax,DWORD PTR [ebp-0x4]
  428e5d:	mov    ebx,DWORD PTR [eax]
  428e5f:	call   DWORD PTR [ebx+0x64]
  428e62:	xor    eax,eax
  428e64:	pop    edx
  428e65:	pop    ecx
  428e66:	pop    ecx
  428e67:	mov    DWORD PTR fs:[eax],edx
  428e6a:	push   0x428e7f
  428e6f:	mov    eax,DWORD PTR [ebp-0x4]
  428e72:	call   0x428768
  428e77:	ret    
  428e78:	jmp    0x4036ac
  428e7d:	jmp    0x428e6f
  428e7f:	xor    eax,eax
  428e81:	pop    edx
  428e82:	pop    ecx
  428e83:	pop    ecx
  428e84:	mov    DWORD PTR fs:[eax],edx
  428e87:	push   0x428e9c
  428e8c:	lea    eax,[ebp-0x8]
  428e8f:	call   0x403cac
  428e94:	ret    
  428e95:	jmp    0x4036ac
  428e9a:	jmp    0x428e8c
  428e9c:	pop    edi
  428e9d:	pop    esi
  428e9e:	pop    ebx
  428e9f:	pop    ecx
  428ea0:	pop    ecx
  428ea1:	pop    ebp
  428ea2:	ret    
  428ea3:	nop
  428ea4:	push   ebx
  428ea5:	push   esi
  428ea6:	push   edi
  428ea7:	push   ebp
  428ea8:	push   ecx
  428ea9:	mov    DWORD PTR [esp],ecx
  428eac:	mov    edi,edx
  428eae:	mov    esi,eax
  428eb0:	mov    edx,edi
  428eb2:	mov    eax,esi
  428eb4:	mov    ecx,DWORD PTR [eax]
  428eb6:	call   DWORD PTR [ecx+0x18]
  428eb9:	mov    ebp,eax
  428ebb:	mov    edx,edi
  428ebd:	mov    eax,esi
  428ebf:	mov    ecx,DWORD PTR [eax]
  428ec1:	call   DWORD PTR [ecx+0x48]
  428ec4:	push   ebp
  428ec5:	mov    ecx,DWORD PTR [esp+0x4]
  428ec9:	mov    edx,edi
  428ecb:	mov    eax,esi
  428ecd:	mov    ebx,DWORD PTR [eax]
  428ecf:	call   DWORD PTR [ebx+0x64]
  428ed2:	pop    edx
  428ed3:	pop    ebp
  428ed4:	pop    edi
  428ed5:	pop    esi
  428ed6:	pop    ebx
  428ed7:	ret    
  428ed8:	ret    
  428ed9:	lea    eax,[eax+0x0]
  428edc:	push   ebp
  428edd:	mov    ebp,esp
  428edf:	add    esp,0xfffffff4
  428ee2:	xor    ecx,ecx
  428ee4:	mov    DWORD PTR [ebp-0xc],ecx
  428ee7:	mov    DWORD PTR [ebp-0x8],edx
  428eea:	mov    DWORD PTR [ebp-0x4],eax
  428eed:	xor    eax,eax
  428eef:	push   ebp
  428ef0:	push   0x428f80
  428ef5:	push   DWORD PTR fs:[eax]
  428ef8:	mov    DWORD PTR fs:[eax],esp
  428efb:	mov    eax,DWORD PTR [ebp-0x8]
  428efe:	call   0x429fcc
  428f03:	mov    eax,DWORD PTR [ebp-0x4]
  428f06:	call   0x4286ac
  428f0b:	xor    eax,eax
  428f0d:	push   ebp
  428f0e:	push   0x428f5b
  428f13:	push   DWORD PTR fs:[eax]
  428f16:	mov    DWORD PTR fs:[eax],esp
  428f19:	mov    eax,DWORD PTR [ebp-0x4]
  428f1c:	mov    edx,DWORD PTR [eax]
  428f1e:	call   DWORD PTR [edx+0x44]
  428f21:	jmp    0x428f39
  428f23:	lea    edx,[ebp-0xc]
  428f26:	mov    eax,DWORD PTR [ebp-0x8]
  428f29:	call   0x42a018
  428f2e:	mov    edx,DWORD PTR [ebp-0xc]
  428f31:	mov    eax,DWORD PTR [ebp-0x4]
  428f34:	mov    ecx,DWORD PTR [eax]
  428f36:	call   DWORD PTR [ecx+0x38]
  428f39:	mov    eax,DWORD PTR [ebp-0x8]
  428f3c:	call   0x429f20
  428f41:	test   al,al
  428f43:	je     0x428f23
  428f45:	xor    eax,eax
  428f47:	pop    edx
  428f48:	pop    ecx
  428f49:	pop    ecx
  428f4a:	mov    DWORD PTR fs:[eax],edx
  428f4d:	push   0x428f62
  428f52:	mov    eax,DWORD PTR [ebp-0x4]
  428f55:	call   0x428768
  428f5a:	ret    
  428f5b:	jmp    0x4036ac
  428f60:	jmp    0x428f52
  428f62:	mov    eax,DWORD PTR [ebp-0x8]
  428f65:	call   0x429fd4
  428f6a:	xor    eax,eax
  428f6c:	pop    edx
  428f6d:	pop    ecx
  428f6e:	pop    ecx
  428f6f:	mov    DWORD PTR fs:[eax],edx
  428f72:	push   0x428f87
  428f77:	lea    eax,[ebp-0xc]
  428f7a:	call   0x403cac
  428f7f:	ret    
  428f80:	jmp    0x4036ac
  428f85:	jmp    0x428f77
  428f87:	mov    esp,ebp
  428f89:	pop    ebp
  428f8a:	ret    
  428f8b:	nop
  428f8c:	push   ebp
  428f8d:	mov    ebp,esp
  428f8f:	push   ecx
  428f90:	push   esi
  428f91:	mov    esi,eax
  428f93:	push   0xffff
  428f98:	mov    ecx,edx
  428f9a:	mov    eax,ds:0x427b88
  428f9f:	mov    dl,0x1
  428fa1:	call   0x429bdc
  428fa6:	mov    DWORD PTR [ebp-0x4],eax
  428fa9:	xor    eax,eax
  428fab:	push   ebp
  428fac:	push   0x428fd7
  428fb1:	push   DWORD PTR fs:[eax]
  428fb4:	mov    DWORD PTR fs:[eax],esp
  428fb7:	mov    edx,DWORD PTR [ebp-0x4]
  428fba:	mov    eax,esi
  428fbc:	mov    ecx,DWORD PTR [eax]
  428fbe:	call   DWORD PTR [ecx+0x78]
  428fc1:	xor    eax,eax
  428fc3:	pop    edx
  428fc4:	pop    ecx
  428fc5:	pop    ecx
  428fc6:	mov    DWORD PTR fs:[eax],edx
  428fc9:	push   0x428fde
  428fce:	mov    eax,DWORD PTR [ebp-0x4]
  428fd1:	call   0x4031c4
  428fd6:	ret    
  428fd7:	jmp    0x4036ac
  428fdc:	jmp    0x428fce
  428fde:	pop    esi
  428fdf:	pop    ecx
  428fe0:	pop    ebp
  428fe1:	ret    
  428fe2:	mov    eax,eax
  428fe4:	push   ebp
  428fe5:	mov    ebp,esp
  428fe7:	push   0x0
  428fe9:	push   ebx
  428fea:	push   esi
  428feb:	mov    esi,edx
  428fed:	mov    ebx,eax
  428fef:	xor    eax,eax
  428ff1:	push   ebp
  428ff2:	push   0x429031
  428ff7:	push   DWORD PTR fs:[eax]
  428ffa:	mov    DWORD PTR fs:[eax],esp
  428ffd:	lea    edx,[ebp-0x4]
  429000:	mov    eax,ebx
  429002:	mov    ecx,DWORD PTR [eax]
  429004:	call   DWORD PTR [ecx+0x1c]
  429007:	mov    eax,DWORD PTR [ebp-0x4]
  42900a:	call   0x403f48
  42900f:	mov    ecx,eax
  429011:	mov    edx,DWORD PTR [ebp-0x4]
  429014:	mov    eax,esi
  429016:	call   0x429ae0
  42901b:	xor    eax,eax
  42901d:	pop    edx
  42901e:	pop    ecx
  42901f:	pop    ecx
  429020:	mov    DWORD PTR fs:[eax],edx
  429023:	push   0x429038
  429028:	lea    eax,[ebp-0x4]
  42902b:	call   0x403cac
  429030:	ret    
  429031:	jmp    0x4036ac
  429036:	jmp    0x429028
  429038:	pop    esi
  429039:	pop    ebx
  42903a:	pop    ecx
  42903b:	pop    ebp
  42903c:	ret    
  42903d:	lea    eax,[eax+0x0]
  429040:	ret    
  429041:	lea    eax,[eax+0x0]
  429044:	push   ebx
  429045:	push   esi
  429046:	mov    esi,edx
  429048:	mov    ebx,eax
  42904a:	cmp    DWORD PTR [ebx+0xc],0x0
  42904e:	je     0x429058
  429050:	mov    eax,DWORD PTR [ebx+0xc]
  429053:	mov    edx,DWORD PTR [eax]
  429055:	call   DWORD PTR [edx+0x10]
  429058:	lea    eax,[ebx+0xc]
  42905b:	mov    edx,esi
  42905d:	call   0x40528c
  429062:	cmp    DWORD PTR [ebx+0xc],0x0
  429066:	je     0x429072
  429068:	mov    edx,ebx
  42906a:	mov    eax,DWORD PTR [ebx+0xc]
  42906d:	mov    ecx,DWORD PTR [eax]
  42906f:	call   DWORD PTR [ecx+0xc]
  429072:	pop    esi
  429073:	pop    ebx
  429074:	ret    
  429075:	lea    eax,[eax+0x0]
  429078:	push   ebp
  429079:	mov    ebp,esp
  42907b:	push   0x0
  42907d:	push   ebx
  42907e:	push   esi
  42907f:	mov    esi,edx
  429081:	mov    ebx,eax
  429083:	xor    eax,eax
  429085:	push   ebp
  429086:	push   0x4290bb
  42908b:	push   DWORD PTR fs:[eax]
  42908e:	mov    DWORD PTR fs:[eax],esp
  429091:	lea    eax,[ebp-0x4]
  429094:	mov    edx,esi
  429096:	call   0x403ea4
  42909b:	mov    edx,DWORD PTR [ebp-0x4]
  42909e:	mov    eax,ebx
  4290a0:	mov    ecx,DWORD PTR [eax]
  4290a2:	call   DWORD PTR [ecx+0x2c]
  4290a5:	xor    eax,eax
  4290a7:	pop    edx
  4290a8:	pop    ecx
  4290a9:	pop    ecx
  4290aa:	mov    DWORD PTR fs:[eax],edx
  4290ad:	push   0x4290c2
  4290b2:	lea    eax,[ebp-0x4]
  4290b5:	call   0x403cac
  4290ba:	ret    
  4290bb:	jmp    0x4036ac
  4290c0:	jmp    0x4290b2
  4290c2:	pop    esi
  4290c3:	pop    ebx
  4290c4:	pop    ecx
  4290c5:	pop    ebp
  4290c6:	ret    
  4290c7:	nop
  4290c8:	push   ebp
  4290c9:	mov    ebp,esp
  4290cb:	add    esp,0xfffffff0
  4290ce:	push   ebx
  4290cf:	push   esi
  4290d0:	xor    ecx,ecx
  4290d2:	mov    DWORD PTR [ebp-0x10],ecx
  4290d5:	mov    esi,edx
  4290d7:	mov    DWORD PTR [ebp-0x4],eax
  4290da:	lea    ebx,[ebp-0x8]
  4290dd:	xor    eax,eax
  4290df:	push   ebp
  4290e0:	push   0x429192
  4290e5:	push   DWORD PTR fs:[eax]
  4290e8:	mov    DWORD PTR fs:[eax],esp
  4290eb:	mov    eax,DWORD PTR [ebp-0x4]
  4290ee:	call   0x4286ac
  4290f3:	xor    eax,eax
  4290f5:	push   ebp
  4290f6:	push   0x429175
  4290fb:	push   DWORD PTR fs:[eax]
  4290fe:	mov    DWORD PTR fs:[eax],esp
  429101:	mov    eax,DWORD PTR [ebp-0x4]
  429104:	mov    edx,DWORD PTR [eax]
  429106:	call   DWORD PTR [edx+0x44]
  429109:	mov    DWORD PTR [ebx],esi
  42910b:	cmp    DWORD PTR [ebx],0x0
  42910e:	je     0x42915f
  429110:	jmp    0x429158
  429112:	mov    eax,DWORD PTR [ebx]
  429114:	mov    DWORD PTR [ebp-0xc],eax
  429117:	jmp    0x42911b
  429119:	inc    DWORD PTR [ebx]
  42911b:	mov    eax,DWORD PTR [ebx]
  42911d:	mov    al,BYTE PTR [eax]
  42911f:	test   al,al
  429121:	je     0x42912b
  429123:	sub    al,0xa
  429125:	je     0x42912b
  429127:	sub    al,0x3
  429129:	jne    0x429119
  42912b:	mov    ecx,DWORD PTR [ebx]
  42912d:	sub    ecx,DWORD PTR [ebp-0xc]
  429130:	lea    eax,[ebp-0x10]
  429133:	mov    edx,DWORD PTR [ebp-0xc]
  429136:	call   0x403d9c
  42913b:	mov    edx,DWORD PTR [ebp-0x10]
  42913e:	mov    eax,DWORD PTR [ebp-0x4]
  429141:	mov    ecx,DWORD PTR [eax]
  429143:	call   DWORD PTR [ecx+0x38]
  429146:	mov    eax,DWORD PTR [ebx]
  429148:	cmp    BYTE PTR [eax],0xd
  42914b:	jne    0x42914f
  42914d:	inc    DWORD PTR [ebx]
  42914f:	mov    eax,DWORD PTR [ebx]
  429151:	cmp    BYTE PTR [eax],0xa
  429154:	jne    0x429158
  429156:	inc    DWORD PTR [ebx]
  429158:	mov    eax,DWORD PTR [ebx]
  42915a:	cmp    BYTE PTR [eax],0x0
  42915d:	jne    0x429112
  42915f:	xor    eax,eax
  429161:	pop    edx
  429162:	pop    ecx
  429163:	pop    ecx
  429164:	mov    DWORD PTR fs:[eax],edx
  429167:	push   0x42917c
  42916c:	mov    eax,DWORD PTR [ebp-0x4]
  42916f:	call   0x428768
  429174:	ret    
  429175:	jmp    0x4036ac
  42917a:	jmp    0x42916c
  42917c:	xor    eax,eax
  42917e:	pop    edx
  42917f:	pop    ecx
  429180:	pop    ecx
  429181:	mov    DWORD PTR fs:[eax],edx
  429184:	push   0x429199
  429189:	lea    eax,[ebp-0x10]
  42918c:	call   0x403cac
  429191:	ret    
  429192:	jmp    0x4036ac
  429197:	jmp    0x429189
  429199:	pop    esi
  42919a:	pop    ebx
  42919b:	mov    esp,ebp
  42919d:	pop    ebp
  42919e:	ret    
  42919f:	nop
  4291a0:	ret    
  4291a1:	lea    eax,[eax+0x0]
  4291a4:	push   ebp
  4291a5:	mov    ebp,esp
  4291a7:	add    esp,0xfffffff4
  4291aa:	push   ebx
  4291ab:	push   esi
  4291ac:	push   edi
  4291ad:	xor    ecx,ecx
  4291af:	mov    DWORD PTR [ebp-0xc],ecx
  4291b2:	mov    DWORD PTR [ebp-0x8],edx
  4291b5:	mov    DWORD PTR [ebp-0x4],eax
  4291b8:	xor    eax,eax
  4291ba:	push   ebp
  4291bb:	push   0x42921a
  4291c0:	push   DWORD PTR fs:[eax]
  4291c3:	mov    DWORD PTR fs:[eax],esp
  4291c6:	mov    eax,DWORD PTR [ebp-0x8]
  4291c9:	call   0x42a558
  4291ce:	mov    eax,DWORD PTR [ebp-0x4]
  4291d1:	mov    edx,DWORD PTR [eax]
  4291d3:	call   DWORD PTR [edx+0x14]
  4291d6:	mov    ebx,eax
  4291d8:	dec    ebx
  4291d9:	test   ebx,ebx
  4291db:	jl     0x4291fc
  4291dd:	inc    ebx
  4291de:	xor    esi,esi
  4291e0:	lea    ecx,[ebp-0xc]
  4291e3:	mov    edx,esi
  4291e5:	mov    eax,DWORD PTR [ebp-0x4]
  4291e8:	mov    edi,DWORD PTR [eax]
  4291ea:	call   DWORD PTR [edi+0xc]
  4291ed:	mov    edx,DWORD PTR [ebp-0xc]
  4291f0:	mov    eax,DWORD PTR [ebp-0x8]
  4291f3:	call   0x42a600
  4291f8:	inc    esi
  4291f9:	dec    ebx
  4291fa:	jne    0x4291e0
  4291fc:	mov    eax,DWORD PTR [ebp-0x8]
  4291ff:	call   0x42a560
  429204:	xor    eax,eax
  429206:	pop    edx
  429207:	pop    ecx
  429208:	pop    ecx
  429209:	mov    DWORD PTR fs:[eax],edx
  42920c:	push   0x429221
  429211:	lea    eax,[ebp-0xc]
  429214:	call   0x403cac
  429219:	ret    
  42921a:	jmp    0x4036ac
  42921f:	jmp    0x429211
  429221:	pop    edi
  429222:	pop    esi
  429223:	pop    ebx
  429224:	mov    esp,ebp
  429226:	pop    ebp
  429227:	ret    
  429228:	mov    eax,edx
  42922a:	mov    edx,ecx
  42922c:	call   0x41efd4
  429231:	ret    
  429232:	mov    eax,eax
  429234:	push   ebx
  429235:	mov    ebx,eax
  429237:	test   BYTE PTR [ebx+0x4],0x4
  42923b:	jne    0x429246
  42923d:	mov    dl,0x3d
  42923f:	mov    eax,ebx
  429241:	call   0x42924c
  429246:	mov    al,BYTE PTR [ebx+0x7]
  429249:	pop    ebx
  42924a:	ret    
  42924b:	nop
  42924c:	push   ebx
  42924d:	push   esi
  42924e:	mov    ebx,edx
  429250:	mov    esi,eax
  429252:	cmp    bl,BYTE PTR [esi+0x7]
  429255:	jne    0x42925d
  429257:	test   BYTE PTR [esi+0x4],0x4
  42925b:	jne    0x429264
  42925d:	or     BYTE PTR [esi+0x4],0x4
  429261:	mov    BYTE PTR [esi+0x7],bl
  429264:	pop    esi
  429265:	pop    ebx
  429266:	ret    
  429267:	nop
  429268:	push   ebx
  429269:	push   esi
  42926a:	call   0x403480
  42926f:	mov    ebx,edx
  429271:	mov    esi,eax
  429273:	xor    eax,eax
  429275:	mov    DWORD PTR [esi+0x20],eax
  429278:	mov    DWORD PTR [esi+0x24],eax
  42927b:	xor    eax,eax
  42927d:	mov    DWORD PTR [esi+0x28],eax
  429280:	mov    DWORD PTR [esi+0x2c],eax
  429283:	mov    edx,ebx
  429285:	and    dl,0xfc
  429288:	mov    eax,esi
  42928a:	call   0x4284e4
  42928f:	mov    eax,DWORD PTR [esi+0x14]
  429292:	test   eax,eax
  429294:	je     0x4292a6
  429296:	mov    ecx,eax
  429298:	mov    eax,DWORD PTR [esi+0x10]
  42929b:	mov    edx,DWORD PTR ds:0x427964
  4292a1:	call   0x4045f4
  4292a6:	xor    eax,eax
  4292a8:	mov    DWORD PTR [esi+0x14],eax
  4292ab:	xor    edx,edx
  4292ad:	mov    eax,esi
  4292af:	mov    ecx,DWORD PTR [eax]
  4292b1:	call   DWORD PTR [ecx+0x28]
  4292b4:	test   bl,bl
  4292b6:	jle    0x4292bf
  4292b8:	mov    eax,esi
  4292ba:	call   0x403468
  4292bf:	pop    esi
  4292c0:	pop    ebx
  4292c1:	ret    
  4292c2:	mov    eax,eax
  4292c4:	push   ebx
  4292c5:	push   esi
  4292c6:	mov    esi,eax
  4292c8:	xor    ecx,ecx
  4292ca:	mov    eax,esi
  4292cc:	mov    ebx,DWORD PTR [eax]
  4292ce:	call   DWORD PTR [ebx+0x3c]
  4292d1:	pop    esi
  4292d2:	pop    ebx
  4292d3:	ret    
  4292d4:	push   ebx
  4292d5:	push   esi
  4292d6:	push   edi
  4292d7:	push   ebp
  4292d8:	push   ecx
  4292d9:	mov    edi,ecx
  4292db:	mov    esi,edx
  4292dd:	mov    ebx,eax
  4292df:	cmp    BYTE PTR [ebx+0x1c],0x0
  4292e3:	jne    0x4292ed
  4292e5:	mov    eax,DWORD PTR [ebx+0x14]
  4292e8:	mov    DWORD PTR [esp],eax
  4292eb:	jmp    0x42931b
  4292ed:	mov    ecx,esp
  4292ef:	mov    edx,esi
  4292f1:	mov    eax,ebx
  4292f3:	mov    ebp,DWORD PTR [eax]
  4292f5:	call   DWORD PTR [ebp+0x8c]
  4292fb:	test   al,al
  4292fd:	je     0x42931b
  4292ff:	mov    al,BYTE PTR [ebx+0x1d]
  429302:	sub    al,0x1
  429304:	jb     0x42932c
  429306:	dec    al
  429308:	je     0x42930c
  42930a:	jmp    0x42931b
  42930c:	mov    edx,DWORD PTR ds:0x42e414
  429312:	xor    ecx,ecx
  429314:	mov    eax,ebx
  429316:	call   0x428860
  42931b:	push   edi
  42931c:	mov    ecx,esi
  42931e:	mov    edx,DWORD PTR [esp+0x4]
  429322:	mov    eax,ebx
  429324:	mov    ebx,DWORD PTR [eax]
  429326:	call   DWORD PTR [ebx+0x88]
  42932c:	mov    eax,DWORD PTR [esp]
  42932f:	pop    edx
  429330:	pop    ebp
  429331:	pop    edi
  429332:	pop    esi
  429333:	pop    ebx
  429334:	ret    
  429335:	lea    eax,[eax+0x0]
  429338:	push   ebx
  429339:	cmp    DWORD PTR [eax+0x8],0x0
  42933d:	jne    0x429350
  42933f:	cmp    WORD PTR [eax+0x22],0x0
  429344:	je     0x429350
  429346:	mov    ebx,eax
  429348:	mov    edx,eax
  42934a:	mov    eax,DWORD PTR [ebx+0x24]
  42934d:	call   DWORD PTR [ebx+0x20]
  429350:	pop    ebx
  429351:	ret    
  429352:	mov    eax,eax
  429354:	push   ebx
  429355:	cmp    DWORD PTR [eax+0x8],0x0
  429359:	jne    0x42936c
  42935b:	cmp    WORD PTR [eax+0x2a],0x0
  429360:	je     0x42936c
  429362:	mov    ebx,eax
  429364:	mov    edx,eax
  429366:	mov    eax,DWORD PTR [ebx+0x2c]
  429369:	call   DWORD PTR [ebx+0x28]
  42936c:	pop    ebx
  42936d:	ret    
  42936e:	mov    eax,eax
  429370:	push   ebx
  429371:	mov    ebx,eax
  429373:	cmp    DWORD PTR [ebx+0x14],0x0
  429377:	je     0x4293ac
  429379:	mov    eax,ebx
  42937b:	mov    edx,DWORD PTR [eax]
  42937d:	call   DWORD PTR [edx+0x84]
  429383:	mov    eax,DWORD PTR [ebx+0x10]
  429386:	mov    ecx,DWORD PTR [ebx+0x14]
  429389:	mov    edx,DWORD PTR ds:0x427964
  42938f:	call   0x4045f4
  429394:	xor    eax,eax
  429396:	mov    DWORD PTR [ebx+0x14],eax
  429399:	xor    edx,edx
  42939b:	mov    eax,ebx
  42939d:	mov    ecx,DWORD PTR [eax]
  42939f:	call   DWORD PTR [ecx+0x28]
  4293a2:	mov    eax,ebx
  4293a4:	mov    edx,DWORD PTR [eax]
  4293a6:	call   DWORD PTR [edx+0x80]
  4293ac:	pop    ebx
  4293ad:	ret    
  4293ae:	mov    eax,eax
  4293b0:	push   ebx
  4293b1:	push   esi
  4293b2:	mov    esi,edx
  4293b4:	mov    ebx,eax
  4293b6:	test   esi,esi
  4293b8:	jl     0x4293bf
  4293ba:	cmp    esi,DWORD PTR [ebx+0x14]
  4293bd:	jl     0x4293ce
  4293bf:	mov    edx,DWORD PTR ds:0x42e508
  4293c5:	mov    ecx,esi
  4293c7:	mov    eax,ebx
  4293c9:	call   0x428860
  4293ce:	mov    eax,ebx
  4293d0:	mov    edx,DWORD PTR [eax]
  4293d2:	call   DWORD PTR [edx+0x84]
  4293d8:	mov    eax,DWORD PTR [ebx+0x10]
  4293db:	lea    eax,[eax+esi*8]
  4293de:	mov    edx,DWORD PTR ds:0x427964
  4293e4:	call   0x4046e0
  4293e9:	dec    DWORD PTR [ebx+0x14]
  4293ec:	mov    eax,DWORD PTR [ebx+0x14]
  4293ef:	cmp    esi,eax
  4293f1:	jge    0x42940c
  4293f3:	sub    eax,esi
  4293f5:	mov    ecx,eax
  4293f7:	shl    ecx,0x3
  4293fa:	mov    eax,DWORD PTR [ebx+0x10]
  4293fd:	lea    edx,[eax+esi*8]
  429400:	mov    eax,DWORD PTR [ebx+0x10]
  429403:	lea    eax,[eax+esi*8+0x8]
  429407:	call   0x402b2c
  42940c:	mov    eax,ebx
  42940e:	mov    edx,DWORD PTR [eax]
  429410:	call   DWORD PTR [edx+0x80]
  429416:	pop    esi
  429417:	pop    ebx
  429418:	ret    
  429419:	lea    eax,[eax+0x0]
  42941c:	push   ebx
  42941d:	push   esi
  42941e:	push   edi
  42941f:	mov    edi,ecx
  429421:	mov    esi,edx
  429423:	mov    ebx,eax
  429425:	test   esi,esi
  429427:	jl     0x42942e
  429429:	cmp    esi,DWORD PTR [ebx+0x14]
  42942c:	jl     0x42943d
  42942e:	mov    edx,DWORD PTR ds:0x42e508
  429434:	mov    ecx,esi
  429436:	mov    eax,ebx
  429438:	call   0x428860
  42943d:	test   edi,edi
  42943f:	jl     0x429446
  429441:	cmp    edi,DWORD PTR [ebx+0x14]
  429444:	jl     0x429455
  429446:	mov    edx,DWORD PTR ds:0x42e508
  42944c:	mov    ecx,edi
  42944e:	mov    eax,ebx
  429450:	call   0x428860
  429455:	mov    eax,ebx
  429457:	mov    edx,DWORD PTR [eax]
  429459:	call   DWORD PTR [edx+0x84]
  42945f:	mov    ecx,edi
  429461:	mov    edx,esi
  429463:	mov    eax,ebx
  429465:	call   0x429478
  42946a:	mov    eax,ebx
  42946c:	mov    edx,DWORD PTR [eax]
  42946e:	call   DWORD PTR [edx+0x80]
  429474:	pop    edi
  429475:	pop    esi
  429476:	pop    ebx
  429477:	ret    
  429478:	push   ebx
  429479:	add    esp,0xfffffff8
  42947c:	mov    ebx,DWORD PTR [eax+0x10]
  42947f:	lea    edx,[ebx+edx*8]
  429482:	mov    DWORD PTR [esp],edx
  429485:	mov    eax,DWORD PTR [eax+0x10]
  429488:	lea    eax,[eax+ecx*8]
  42948b:	mov    DWORD PTR [esp+0x4],eax
  42948f:	mov    eax,DWORD PTR [esp]
  429492:	mov    eax,DWORD PTR [eax]
  429494:	mov    edx,DWORD PTR [esp+0x4]
  429498:	mov    edx,DWORD PTR [edx]
  42949a:	mov    ecx,DWORD PTR [esp]
  42949d:	mov    DWORD PTR [ecx],edx
  42949f:	mov    edx,DWORD PTR [esp+0x4]
  4294a3:	mov    DWORD PTR [edx],eax
  4294a5:	mov    eax,DWORD PTR [esp]
  4294a8:	mov    eax,DWORD PTR [eax+0x4]
  4294ab:	mov    edx,DWORD PTR [esp+0x4]
  4294af:	mov    edx,DWORD PTR [edx+0x4]
  4294b2:	mov    ecx,DWORD PTR [esp]
  4294b5:	mov    DWORD PTR [ecx+0x4],edx
  4294b8:	mov    edx,DWORD PTR [esp+0x4]
  4294bc:	mov    DWORD PTR [edx+0x4],eax
  4294bf:	pop    ecx
  4294c0:	pop    edx
  4294c1:	pop    ebx
  4294c2:	ret    
  4294c3:	nop
  4294c4:	push   ebx
  4294c5:	push   esi
  4294c6:	push   edi
  4294c7:	push   ebp
  4294c8:	add    esp,0xffffffec
  4294cb:	mov    DWORD PTR [esp+0x4],ecx
  4294cf:	mov    DWORD PTR [esp],edx
  4294d2:	mov    edi,eax
  4294d4:	mov    BYTE PTR [esp+0x8],0x0
  4294d9:	xor    esi,esi
  4294db:	mov    eax,DWORD PTR [edi+0x14]
  4294de:	dec    eax
  4294df:	mov    DWORD PTR [esp+0xc],eax
  4294e3:	cmp    esi,DWORD PTR [esp+0xc]
  4294e7:	jg     0x429532
  4294e9:	mov    ebx,DWORD PTR [esp+0xc]
  4294ed:	add    ebx,esi
  4294ef:	shr    ebx,1
  4294f1:	mov    eax,DWORD PTR [edi+0x10]
  4294f4:	mov    edx,DWORD PTR [eax+ebx*8]
  4294f7:	mov    ecx,DWORD PTR [esp]
  4294fa:	mov    eax,edi
  4294fc:	mov    ebp,DWORD PTR [eax]
  4294fe:	call   DWORD PTR [ebp+0x34]
  429501:	mov    DWORD PTR [esp+0x10],eax
  429505:	cmp    DWORD PTR [esp+0x10],0x0
  42950a:	jge    0x429511
  42950c:	lea    esi,[ebx+0x1]
  42950f:	jmp    0x42952c
  429511:	mov    eax,ebx
  429513:	dec    eax
  429514:	mov    DWORD PTR [esp+0xc],eax
  429518:	cmp    DWORD PTR [esp+0x10],0x0
  42951d:	jne    0x42952c
  42951f:	mov    BYTE PTR [esp+0x8],0x1
  429524:	cmp    BYTE PTR [edi+0x1d],0x1
  429528:	je     0x42952c
  42952a:	mov    esi,ebx
  42952c:	cmp    esi,DWORD PTR [esp+0xc]
  429530:	jle    0x4294e9
  429532:	mov    eax,DWORD PTR [esp+0x4]
  429536:	mov    DWORD PTR [eax],esi
  429538:	mov    al,BYTE PTR [esp+0x8]
  42953c:	add    esp,0x14
  42953f:	pop    ebp
  429540:	pop    edi
  429541:	pop    esi
  429542:	pop    ebx
  429543:	ret    
  429544:	push   ebx
  429545:	push   esi
  429546:	push   edi
  429547:	mov    edi,ecx
  429549:	mov    esi,edx
  42954b:	mov    ebx,eax
  42954d:	test   esi,esi
  42954f:	jl     0x429556
  429551:	cmp    esi,DWORD PTR [ebx+0x14]
  429554:	jl     0x429565
  429556:	mov    edx,DWORD PTR ds:0x42e508
  42955c:	mov    ecx,esi
  42955e:	mov    eax,ebx
  429560:	call   0x428860
  429565:	mov    eax,edi
  429567:	mov    edx,DWORD PTR [ebx+0x10]
  42956a:	mov    edx,DWORD PTR [edx+esi*8]
  42956d:	call   0x403d00
  429572:	pop    edi
  429573:	pop    esi
  429574:	pop    ebx
  429575:	ret    
  429576:	mov    eax,eax
  429578:	mov    eax,DWORD PTR [eax+0x18]
  42957b:	ret    
  42957c:	mov    eax,DWORD PTR [eax+0x14]
  42957f:	ret    
  429580:	push   ebx
  429581:	push   esi
  429582:	mov    esi,edx
  429584:	mov    ebx,eax
  429586:	test   esi,esi
  429588:	jl     0x42958f
  42958a:	cmp    esi,DWORD PTR [ebx+0x14]
  42958d:	jl     0x42959e
  42958f:	mov    edx,DWORD PTR ds:0x42e508
  429595:	mov    ecx,esi
  429597:	mov    eax,ebx
  429599:	call   0x428860
  42959e:	mov    eax,DWORD PTR [ebx+0x10]
  4295a1:	mov    eax,DWORD PTR [eax+esi*8+0x4]
  4295a5:	pop    esi
  4295a6:	pop    ebx
  4295a7:	ret    
  4295a8:	push   esi
  4295a9:	mov    edx,DWORD PTR [eax+0x18]
  4295ac:	cmp    edx,0x40
  4295af:	jle    0x4295bf
  4295b1:	mov    esi,edx
  4295b3:	test   esi,esi
  4295b5:	jns    0x4295ba
  4295b7:	add    esi,0x3
  4295ba:	sar    esi,0x2
  4295bd:	jmp    0x4295d0
  4295bf:	cmp    edx,0x8
  4295c2:	jle    0x4295cb
  4295c4:	mov    esi,0x10
  4295c9:	jmp    0x4295d0
  4295cb:	mov    esi,0x4
  4295d0:	add    esi,edx
  4295d2:	mov    edx,esi
  4295d4:	mov    ecx,DWORD PTR [eax]
  4295d6:	call   DWORD PTR [ecx+0x28]
  4295d9:	pop    esi
  4295da:	ret    
  4295db:	nop
  4295dc:	push   ebx
  4295dd:	push   esi
  4295de:	push   ecx
  4295df:	mov    esi,edx
  4295e1:	mov    ebx,eax
  4295e3:	cmp    BYTE PTR [ebx+0x1c],0x0
  4295e7:	jne    0x4295f7
  4295e9:	mov    edx,esi
  4295eb:	mov    eax,ebx
  4295ed:	call   0x428b30
  4295f2:	mov    DWORD PTR [esp],eax
  4295f5:	jmp    0x429610
  4295f7:	mov    ecx,esp
  4295f9:	mov    edx,esi
  4295fb:	mov    eax,ebx
  4295fd:	mov    ebx,DWORD PTR [eax]
  4295ff:	call   DWORD PTR [ebx+0x8c]
  429605:	test   al,al
  429607:	jne    0x429610
  429609:	mov    DWORD PTR [esp],0xffffffff
  429610:	mov    eax,DWORD PTR [esp]
  429613:	pop    edx
  429614:	pop    esi
  429615:	pop    ebx
  429616:	ret    
  429617:	nop
  429618:	push   ebx
  429619:	push   esi
  42961a:	mov    esi,eax
  42961c:	push   0x0
  42961e:	mov    eax,esi
  429620:	mov    ebx,DWORD PTR [eax]
  429622:	call   DWORD PTR [ebx+0x64]
  429625:	pop    esi
  429626:	pop    ebx
  429627:	ret    
  429628:	push   ebp
  429629:	mov    ebp,esp
  42962b:	push   ebx
  42962c:	push   esi
  42962d:	push   edi
  42962e:	mov    edi,ecx
  429630:	mov    esi,edx
  429632:	mov    ebx,eax
  429634:	cmp    BYTE PTR [ebx+0x1c],0x0
  429638:	je     0x429649
  42963a:	mov    edx,DWORD PTR ds:0x42e460
  429640:	xor    ecx,ecx
  429642:	mov    eax,ebx
  429644:	call   0x428860
  429649:	test   esi,esi
  42964b:	jl     0x429652
  42964d:	cmp    esi,DWORD PTR [ebx+0x14]
  429650:	jle    0x429661
  429652:	mov    edx,DWORD PTR ds:0x42e508
  429658:	mov    ecx,esi
  42965a:	mov    eax,ebx
  42965c:	call   0x428860
  429661:	mov    eax,DWORD PTR [ebp+0x8]
  429664:	push   eax
  429665:	mov    ecx,edi
  429667:	mov    edx,esi
  429669:	mov    eax,ebx
  42966b:	mov    ebx,DWORD PTR [eax]
  42966d:	call   DWORD PTR [ebx+0x88]
  429673:	pop    edi
  429674:	pop    esi
  429675:	pop    ebx
  429676:	pop    ebp
  429677:	ret    0x4
  42967a:	mov    eax,eax
  42967c:	push   ebp
  42967d:	mov    ebp,esp
  42967f:	push   ebx
  429680:	push   esi
  429681:	push   edi
  429682:	mov    edi,ecx
  429684:	mov    esi,edx
  429686:	mov    ebx,eax
  429688:	mov    eax,ebx
  42968a:	mov    edx,DWORD PTR [eax]
  42968c:	call   DWORD PTR [edx+0x84]
  429692:	mov    eax,DWORD PTR [ebx+0x14]
  429695:	cmp    eax,DWORD PTR [ebx+0x18]
  429698:	jne    0x4296a1
  42969a:	mov    eax,ebx
  42969c:	call   0x4295a8
  4296a1:	mov    eax,DWORD PTR [ebx+0x14]
  4296a4:	cmp    esi,eax
  4296a6:	jge    0x4296c5
  4296a8:	mov    edx,DWORD PTR [ebx+0x10]
  4296ab:	lea    edx,[edx+esi*8+0x8]
  4296af:	push   edx
  4296b0:	mov    edx,DWORD PTR [ebx+0x10]
  4296b3:	lea    edx,[edx+esi*8]
  4296b6:	sub    eax,esi
  4296b8:	mov    ecx,eax
  4296ba:	shl    ecx,0x3
  4296bd:	mov    eax,edx
  4296bf:	pop    edx
  4296c0:	call   0x402b2c
  4296c5:	mov    eax,DWORD PTR [ebx+0x10]
  4296c8:	lea    eax,[eax+esi*8]
  4296cb:	mov    esi,eax
  4296cd:	xor    eax,eax
  4296cf:	mov    DWORD PTR [esi],eax
  4296d1:	mov    eax,DWORD PTR [ebp+0x8]
  4296d4:	mov    DWORD PTR [esi+0x4],eax
  4296d7:	mov    eax,esi
  4296d9:	mov    edx,edi
  4296db:	call   0x403d00
  4296e0:	inc    DWORD PTR [ebx+0x14]
  4296e3:	mov    eax,ebx
  4296e5:	mov    edx,DWORD PTR [eax]
  4296e7:	call   DWORD PTR [edx+0x80]
  4296ed:	pop    edi
  4296ee:	pop    esi
  4296ef:	pop    ebx
  4296f0:	pop    ebp
  4296f1:	ret    0x4
  4296f4:	push   ebx
  4296f5:	push   esi
  4296f6:	push   edi
  4296f7:	mov    edi,ecx
  4296f9:	mov    esi,edx
  4296fb:	mov    ebx,eax
  4296fd:	cmp    BYTE PTR [ebx+0x1c],0x0
  429701:	je     0x429712
  429703:	mov    edx,DWORD PTR ds:0x42e460
  429709:	xor    ecx,ecx
  42970b:	mov    eax,ebx
  42970d:	call   0x428860
  429712:	test   esi,esi
  429714:	jl     0x42971b
  429716:	cmp    esi,DWORD PTR [ebx+0x14]
  429719:	jl     0x42972a
  42971b:	mov    edx,DWORD PTR ds:0x42e508
  429721:	mov    ecx,esi
  429723:	mov    eax,ebx
  429725:	call   0x428860
  42972a:	mov    eax,ebx
  42972c:	mov    edx,DWORD PTR [eax]
  42972e:	call   DWORD PTR [edx+0x84]
  429734:	mov    eax,DWORD PTR [ebx+0x10]
  429737:	lea    eax,[eax+esi*8]
  42973a:	mov    edx,edi
  42973c:	call   0x403d00
  429741:	mov    eax,ebx
  429743:	mov    edx,DWORD PTR [eax]
  429745:	call   DWORD PTR [edx+0x80]
  42974b:	pop    edi
  42974c:	pop    esi
  42974d:	pop    ebx
  42974e:	ret    
  42974f:	nop
  429750:	push   ebx
  429751:	push   esi
  429752:	push   edi
  429753:	mov    edi,ecx
  429755:	mov    esi,edx
  429757:	mov    ebx,eax
  429759:	test   esi,esi
  42975b:	jl     0x429762
  42975d:	cmp    esi,DWORD PTR [ebx+0x14]
  429760:	jl     0x429771
  429762:	mov    edx,DWORD PTR ds:0x42e508
  429768:	mov    ecx,esi
  42976a:	mov    eax,ebx
  42976c:	call   0x428860
  429771:	mov    eax,ebx
  429773:	mov    edx,DWORD PTR [eax]
  429775:	call   DWORD PTR [edx+0x84]
  42977b:	mov    eax,DWORD PTR [ebx+0x10]
  42977e:	mov    DWORD PTR [eax+esi*8+0x4],edi
  429782:	mov    eax,ebx
  429784:	mov    edx,DWORD PTR [eax]
  429786:	call   DWORD PTR [edx+0x80]
  42978c:	pop    edi
  42978d:	pop    esi
  42978e:	pop    ebx
  42978f:	ret    
  429790:	push   ebp
  429791:	mov    ebp,esp
  429793:	add    esp,0xfffffff0
  429796:	push   ebx
  429797:	push   esi
  429798:	mov    DWORD PTR [ebp-0xc],ecx
  42979b:	mov    DWORD PTR [ebp-0x8],edx
  42979e:	mov    DWORD PTR [ebp-0x4],eax
  4297a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4297a4:	mov    esi,DWORD PTR [ebp-0xc]
  4297a7:	mov    eax,DWORD PTR [ebp-0x8]
  4297aa:	add    eax,DWORD PTR [ebp-0xc]
  4297ad:	shr    eax,1
  4297af:	mov    DWORD PTR [ebp-0x10],eax
  4297b2:	jmp    0x4297b5
  4297b4:	inc    ebx
  4297b5:	mov    ecx,DWORD PTR [ebp-0x10]
  4297b8:	mov    edx,ebx
  4297ba:	mov    eax,DWORD PTR [ebp-0x4]
  4297bd:	call   DWORD PTR [ebp+0x8]
  4297c0:	test   eax,eax
  4297c2:	jl     0x4297b4
  4297c4:	jmp    0x4297c7
  4297c6:	dec    esi
  4297c7:	mov    ecx,DWORD PTR [ebp-0x10]
  4297ca:	mov    edx,esi
  4297cc:	mov    eax,DWORD PTR [ebp-0x4]
  4297cf:	call   DWORD PTR [ebp+0x8]
  4297d2:	test   eax,eax
  4297d4:	jg     0x4297c6
  4297d6:	cmp    esi,ebx
  4297d8:	jl     0x4297fa
  4297da:	mov    ecx,esi
  4297dc:	mov    edx,ebx
  4297de:	mov    eax,DWORD PTR [ebp-0x4]
  4297e1:	call   0x429478
  4297e6:	cmp    ebx,DWORD PTR [ebp-0x10]
  4297e9:	jne    0x4297f0
  4297eb:	mov    DWORD PTR [ebp-0x10],esi
  4297ee:	jmp    0x4297f8
  4297f0:	cmp    esi,DWORD PTR [ebp-0x10]
  4297f3:	jne    0x4297f8
  4297f5:	mov    DWORD PTR [ebp-0x10],ebx
  4297f8:	inc    ebx
  4297f9:	dec    esi
  4297fa:	cmp    esi,ebx
  4297fc:	jge    0x4297b5
  4297fe:	cmp    esi,DWORD PTR [ebp-0x8]
  429801:	jle    0x429814
  429803:	mov    eax,DWORD PTR [ebp+0x8]
  429806:	push   eax
  429807:	mov    ecx,esi
  429809:	mov    edx,DWORD PTR [ebp-0x8]
  42980c:	mov    eax,DWORD PTR [ebp-0x4]
  42980f:	call   0x429790
  429814:	mov    DWORD PTR [ebp-0x8],ebx
  429817:	cmp    ebx,DWORD PTR [ebp-0xc]
  42981a:	jl     0x4297a1
  42981c:	pop    esi
  42981d:	pop    ebx
  42981e:	mov    esp,ebp
  429820:	pop    ebp
  429821:	ret    0x4
  429824:	push   ebx
  429825:	push   esi
  429826:	mov    esi,edx
  429828:	mov    ebx,eax
  42982a:	mov    edx,esi
  42982c:	shl    edx,0x3
  42982f:	lea    eax,[ebx+0x10]
  429832:	call   0x4029e4
  429837:	mov    DWORD PTR [ebx+0x18],esi
  42983a:	pop    esi
  42983b:	pop    ebx
  42983c:	ret    
  42983d:	lea    eax,[eax+0x0]
  429840:	test   dl,dl
  429842:	je     0x42984d
  429844:	mov    edx,DWORD PTR [eax]
  429846:	call   DWORD PTR [edx+0x84]
  42984c:	ret    
  42984d:	mov    edx,DWORD PTR [eax]
  42984f:	call   DWORD PTR [edx+0x80]
  429855:	ret    
  429856:	mov    eax,eax
  429858:	push   ebx
  429859:	push   esi
  42985a:	push   edi
  42985b:	mov    edi,edx
  42985d:	mov    esi,eax
  42985f:	mov    eax,DWORD PTR [esi+0x10]
  429862:	mov    ecx,DWORD PTR [eax+ecx*8]
  429865:	mov    eax,DWORD PTR [esi+0x10]
  429868:	mov    edx,DWORD PTR [eax+edi*8]
  42986b:	mov    eax,esi
  42986d:	mov    ebx,DWORD PTR [eax]
  42986f:	call   DWORD PTR [ebx+0x34]
  429872:	pop    edi
  429873:	pop    esi
  429874:	pop    ebx
  429875:	ret    
  429876:	mov    eax,eax
  429878:	mov    edx,0x429858
  42987d:	mov    ecx,DWORD PTR [eax]
  42987f:	call   DWORD PTR [ecx+0x94]
  429885:	ret    
  429886:	mov    eax,eax
  429888:	push   ebx
  429889:	push   esi
  42988a:	mov    esi,edx
  42988c:	mov    ebx,eax
  42988e:	cmp    BYTE PTR [ebx+0x1c],0x0
  429892:	jne    0x4298bc
  429894:	cmp    DWORD PTR [ebx+0x14],0x1
  429898:	jle    0x4298bc
  42989a:	mov    eax,ebx
  42989c:	mov    edx,DWORD PTR [eax]
  42989e:	call   DWORD PTR [edx+0x84]
  4298a4:	push   esi
  4298a5:	mov    ecx,DWORD PTR [ebx+0x14]
  4298a8:	dec    ecx
  4298a9:	xor    edx,edx
  4298ab:	mov    eax,ebx
  4298ad:	call   0x429790
  4298b2:	mov    eax,ebx
  4298b4:	mov    edx,DWORD PTR [eax]
  4298b6:	call   DWORD PTR [edx+0x80]
  4298bc:	pop    esi
  4298bd:	pop    ebx
  4298be:	ret    
  4298bf:	nop
  4298c0:	cmp    BYTE PTR [eax+0x1e],0x0
  4298c4:	je     0x4298d0
  4298c6:	mov    eax,edx
  4298c8:	mov    edx,ecx
  4298ca:	call   0x41ef9c
  4298cf:	ret    
  4298d0:	mov    eax,edx
  4298d2:	mov    edx,ecx
  4298d4:	call   0x41efd4
  4298d9:	ret    
  4298da:	mov    eax,eax
  4298dc:	add    esp,0xfffffff8
  4298df:	push   0x0
  4298e1:	push   0x0
  4298e3:	mov    dl,0x1
  4298e5:	mov    ecx,DWORD PTR [eax]
  4298e7:	call   DWORD PTR [ecx+0x18]
  4298ea:	mov    DWORD PTR [esp],eax
  4298ed:	mov    DWORD PTR [esp+0x4],edx
  4298f1:	mov    eax,DWORD PTR [esp]
  4298f4:	mov    edx,DWORD PTR [esp+0x4]
  4298f8:	pop    ecx
  4298f9:	pop    edx
  4298fa:	ret    
  4298fb:	nop
  4298fc:	push   ebx
  4298fd:	add    esp,0xfffffff0
  429900:	mov    ebx,eax
  429902:	push   0x0
  429904:	push   0x0
  429906:	mov    dl,0x1
  429908:	mov    eax,ebx
  42990a:	mov    ecx,DWORD PTR [eax]
  42990c:	call   DWORD PTR [ecx+0x18]
  42990f:	mov    DWORD PTR [esp+0x8],eax
  429913:	mov    DWORD PTR [esp+0xc],edx
  429917:	push   0x0
  429919:	push   0x0
  42991b:	mov    dl,0x2
  42991d:	mov    eax,ebx
  42991f:	mov    ecx,DWORD PTR [eax]
  429921:	call   DWORD PTR [ecx+0x18]
  429924:	mov    DWORD PTR [esp],eax
  429927:	mov    DWORD PTR [esp+0x4],edx
  42992b:	push   DWORD PTR [esp+0xc]
  42992f:	push   DWORD PTR [esp+0xc]
  429933:	xor    edx,edx
  429935:	mov    eax,ebx
  429937:	mov    ecx,DWORD PTR [eax]
  429939:	call   DWORD PTR [ecx+0x18]
  42993c:	mov    eax,DWORD PTR [esp]
  42993f:	mov    edx,DWORD PTR [esp+0x4]
  429943:	add    esp,0x10
  429946:	pop    ebx
  429947:	ret    
  429948:	ret    
  429949:	lea    eax,[eax+0x0]
  42994c:	push   ebp
  42994d:	mov    ebp,esp
  42994f:	mov    ecx,eax
  429951:	cmp    DWORD PTR [ebp+0xc],0xffffffff
  429955:	jne    0x429962
  429957:	cmp    DWORD PTR [ebp+0x8],0x80000000
  42995e:	jb     0x429977
  429960:	jmp    0x429964
  429962:	jl     0x429977
  429964:	cmp    DWORD PTR [ebp+0xc],0x0
  429968:	jne    0x429975
  42996a:	cmp    DWORD PTR [ebp+0x8],0x7fffffff
  429971:	jbe    0x42998e
  429973:	jmp    0x429977
  429975:	jle    0x42998e
  429977:	mov    ecx,DWORD PTR ds:0x42e534
  42997d:	mov    dl,0x1
  42997f:	mov    eax,ds:0x41e568
  429984:	call   0x42257c
  429989:	call   0x4036e4
  42998e:	mov    eax,DWORD PTR [ebp+0x8]
  429991:	mov    edx,eax
  429993:	mov    eax,ecx
  429995:	mov    ecx,DWORD PTR [eax]
  429997:	call   DWORD PTR [ecx+0x4]
  42999a:	pop    ebp
  42999b:	ret    0x8
  42999e:	mov    eax,eax
  4299a0:	push   ebp
  4299a1:	mov    ebp,esp
  4299a3:	add    esp,0xfffffef8
  4299a9:	lea    edx,[ebp-0x108]
  4299af:	mov    eax,DWORD PTR [ebp+0x8]
  4299b2:	mov    eax,DWORD PTR [eax-0x4]
  4299b5:	mov    eax,DWORD PTR [eax]
  4299b7:	call   0x40313c
  4299bc:	lea    eax,[ebp-0x108]
  4299c2:	mov    DWORD PTR [ebp-0x8],eax
  4299c5:	mov    BYTE PTR [ebp-0x4],0x4
  4299c9:	lea    eax,[ebp-0x8]
  4299cc:	push   eax
  4299cd:	push   0x0
  4299cf:	mov    ecx,DWORD PTR ds:0x42e550
  4299d5:	mov    dl,0x1
  4299d7:	mov    eax,ds:0x427398
  4299dc:	call   0x4225b8
  4299e1:	call   0x4036e4
  4299e6:	mov    esp,ebp
  4299e8:	pop    ebp
  4299e9:	ret    
  4299ea:	mov    eax,eax
  4299ec:	push   ebp
  4299ed:	mov    ebp,esp
  4299ef:	add    esp,0xffffffe0
  4299f2:	push   ebx
  4299f3:	push   esi
  4299f4:	mov    WORD PTR [ebp-0x1a],cx
  4299f8:	mov    esi,edx
  4299fa:	mov    DWORD PTR [ebp-0x4],eax
  4299fd:	lea    ebx,[ebp-0x20]
  429a00:	mov    eax,DWORD PTR [ebp-0x4]
  429a03:	mov    DWORD PTR [ebp-0xc],eax
  429a06:	mov    eax,DWORD PTR [eax]
  429a08:	mov    eax,DWORD PTR [eax+0x18]
  429a0b:	mov    DWORD PTR [ebp-0x10],eax
  429a0e:	mov    eax,DWORD PTR [ebp-0x4]
  429a11:	call   0x403130
  429a16:	mov    DWORD PTR [ebx],eax
  429a18:	jmp    0x429a23
  429a1a:	mov    eax,DWORD PTR [ebx]
  429a1c:	call   0x403150
  429a21:	mov    DWORD PTR [ebx],eax
  429a23:	cmp    DWORD PTR [ebx],0x0
  429a26:	je     0x429a32
  429a28:	mov    eax,DWORD PTR [ebx]
  429a2a:	cmp    eax,DWORD PTR ds:0x427aa0
  429a30:	jne    0x429a1a
  429a32:	cmp    DWORD PTR [ebx],0x0
  429a35:	jne    0x429a3e
  429a37:	push   ebp
  429a38:	call   0x4299a0
  429a3d:	pop    ecx
  429a3e:	mov    DWORD PTR [ebp-0x14],ebx
  429a41:	mov    eax,DWORD PTR [ebx]
  429a43:	mov    eax,DWORD PTR [eax+0x18]
  429a46:	mov    DWORD PTR [ebp-0x18],eax
  429a49:	mov    eax,DWORD PTR [ebp-0x10]
  429a4c:	cmp    eax,DWORD PTR [ebp-0x18]
  429a4f:	jne    0x429a58
  429a51:	push   ebp
  429a52:	call   0x4299a0
  429a57:	pop    ecx
  429a58:	mov    eax,esi
  429a5a:	cdq    
  429a5b:	push   edx
  429a5c:	push   eax
  429a5d:	mov    dl,BYTE PTR [ebp-0x1a]
  429a60:	mov    eax,DWORD PTR [ebp-0x4]
  429a63:	mov    ecx,DWORD PTR [eax]
  429a65:	call   DWORD PTR [ecx+0x18]
  429a68:	pop    esi
  429a69:	pop    ebx
  429a6a:	mov    esp,ebp
  429a6c:	pop    ebp
  429a6d:	ret    
  429a6e:	mov    eax,eax
  429a70:	push   ebp
  429a71:	mov    ebp,esp
  429a73:	add    esp,0xfffffff8
  429a76:	push   ebx
  429a77:	push   esi
  429a78:	mov    ebx,edx
  429a7a:	mov    esi,eax
  429a7c:	cmp    DWORD PTR [ebp+0xc],0xffffffff
  429a80:	jne    0x429a8d
  429a82:	cmp    DWORD PTR [ebp+0x8],0x80000000
  429a89:	jb     0x429aa2
  429a8b:	jmp    0x429a8f
  429a8d:	jl     0x429aa2
  429a8f:	cmp    DWORD PTR [ebp+0xc],0x0
  429a93:	jne    0x429aa0
  429a95:	cmp    DWORD PTR [ebp+0x8],0x7fffffff
  429a9c:	jbe    0x429ab9
  429a9e:	jmp    0x429aa2
  429aa0:	jle    0x429ab9
  429aa2:	mov    ecx,DWORD PTR ds:0x42e534
  429aa8:	mov    dl,0x1
  429aaa:	mov    eax,ds:0x41e568
  429aaf:	call   0x42257c
  429ab4:	call   0x4036e4
  429ab9:	mov    eax,DWORD PTR [ebp+0x8]
  429abc:	mov    edx,eax
  429abe:	xor    ecx,ecx
  429ac0:	mov    cl,bl
  429ac2:	mov    eax,esi
  429ac4:	mov    ebx,DWORD PTR [eax]
  429ac6:	call   DWORD PTR [ebx+0x14]
  429ac9:	cdq    
  429aca:	mov    DWORD PTR [ebp-0x8],eax
  429acd:	mov    DWORD PTR [ebp-0x4],edx
  429ad0:	mov    eax,DWORD PTR [ebp-0x8]
  429ad3:	mov    edx,DWORD PTR [ebp-0x4]
  429ad6:	pop    esi
  429ad7:	pop    ebx
  429ad8:	pop    ecx
  429ad9:	pop    ecx
  429ada:	pop    ebp
  429adb:	ret    0x8
  429ade:	mov    eax,eax
  429ae0:	push   ebx
  429ae1:	push   esi
  429ae2:	push   edi
  429ae3:	mov    ebx,ecx
  429ae5:	mov    edi,edx
  429ae7:	mov    esi,eax
  429ae9:	test   ebx,ebx
  429aeb:	je     0x429b13
  429aed:	mov    edx,edi
  429aef:	mov    ecx,ebx
  429af1:	mov    eax,esi
  429af3:	mov    esi,DWORD PTR [eax]
  429af5:	call   DWORD PTR [esi+0x10]
  429af8:	cmp    ebx,eax
  429afa:	je     0x429b13
  429afc:	mov    ecx,DWORD PTR ds:0x42e484
  429b02:	mov    dl,0x1
  429b04:	mov    eax,ds:0x4275b8
  429b09:	call   0x42257c
  429b0e:	call   0x4036e4
  429b13:	pop    edi
  429b14:	pop    esi
  429b15:	pop    ebx
  429b16:	ret    
  429b17:	nop
  429b18:	push   ebx
  429b19:	push   esi
  429b1a:	push   edi
  429b1b:	test   dl,dl
  429b1d:	je     0x429b27
  429b1f:	add    esp,0xfffffff0
  429b22:	call   0x403418
  429b27:	mov    esi,ecx
  429b29:	mov    ebx,edx
  429b2b:	mov    edi,eax
  429b2d:	xor    edx,edx
  429b2f:	mov    eax,edi
  429b31:	call   0x403194
  429b36:	mov    DWORD PTR [edi+0x4],esi
  429b39:	mov    eax,edi
  429b3b:	test   bl,bl
  429b3d:	je     0x429b4e
  429b3f:	call   0x403470
  429b44:	pop    DWORD PTR fs:0x0
  429b4b:	add    esp,0xc
  429b4e:	mov    eax,edi
  429b50:	pop    edi
  429b51:	pop    esi
  429b52:	pop    ebx
  429b53:	ret    
  429b54:	mov    eax,DWORD PTR [eax+0x4]
  429b57:	call   0x41f46c
  429b5c:	cmp    eax,0xffffffff
  429b5f:	jne    0x429b63
  429b61:	xor    eax,eax
  429b63:	ret    
  429b64:	mov    eax,DWORD PTR [eax+0x4]
  429b67:	call   0x41f498
  429b6c:	cmp    eax,0xffffffff
  429b6f:	jne    0x429b73
  429b71:	xor    eax,eax
  429b73:	ret    
  429b74:	push   ebp
  429b75:	mov    ebp,esp
  429b77:	add    esp,0xfffffff8
  429b7a:	push   DWORD PTR [ebp+0xc]
  429b7d:	push   DWORD PTR [ebp+0x8]
  429b80:	and    edx,0x7f
  429b83:	mov    eax,DWORD PTR [eax+0x4]
  429b86:	call   0x41f4c4
  429b8b:	mov    DWORD PTR [ebp-0x8],eax
  429b8e:	mov    DWORD PTR [ebp-0x4],edx
  429b91:	mov    eax,DWORD PTR [ebp-0x8]
  429b94:	mov    edx,DWORD PTR [ebp-0x4]
  429b97:	pop    ecx
  429b98:	pop    ecx
  429b99:	pop    ebp
  429b9a:	ret    0x8
  429b9d:	lea    eax,[eax+0x0]
  429ba0:	push   ebx
  429ba1:	mov    ebx,edx
  429ba3:	mov    ecx,eax
  429ba5:	mov    eax,ebx
  429ba7:	cdq    
  429ba8:	push   edx
  429ba9:	push   eax
  429baa:	mov    eax,ecx
  429bac:	mov    edx,DWORD PTR [eax]
  429bae:	call   DWORD PTR [edx+0x8]
  429bb1:	pop    ebx
  429bb2:	ret    
  429bb3:	nop
  429bb4:	push   ebp
  429bb5:	mov    ebp,esp
  429bb7:	push   ebx
  429bb8:	mov    ebx,eax
  429bba:	push   DWORD PTR [ebp+0xc]
  429bbd:	push   DWORD PTR [ebp+0x8]
  429bc0:	xor    edx,edx
  429bc2:	mov    eax,ebx
  429bc4:	mov    ecx,DWORD PTR [eax]
  429bc6:	call   DWORD PTR [ecx+0x18]
  429bc9:	mov    eax,DWORD PTR [ebx+0x4]
  429bcc:	push   eax
  429bcd:	call   0x405b60
  429bd2:	call   0x42383c
  429bd7:	pop    ebx
  429bd8:	pop    ebp
  429bd9:	ret    0x8
  429bdc:	push   ebp
  429bdd:	mov    ebp,esp
  429bdf:	push   ebx
  429be0:	push   esi
  429be1:	test   dl,dl
  429be3:	je     0x429bed
  429be5:	add    esp,0xfffffff0
  429be8:	call   0x403418
  429bed:	mov    ebx,edx
  429bef:	mov    esi,eax
  429bf1:	mov    ax,WORD PTR [ebp+0x8]
  429bf5:	push   eax
  429bf6:	push   0x0
  429bf8:	xor    edx,edx
  429bfa:	mov    eax,esi
  429bfc:	call   0x429c20
  429c01:	mov    eax,esi
  429c03:	test   bl,bl
  429c05:	je     0x429c16
  429c07:	call   0x403470
  429c0c:	pop    DWORD PTR fs:0x0
  429c13:	add    esp,0xc
  429c16:	mov    eax,esi
  429c18:	pop    esi
  429c19:	pop    ebx
  429c1a:	pop    ebp
  429c1b:	ret    0x4
  429c1e:	mov    eax,eax
  429c20:	push   ebp
  429c21:	mov    ebp,esp
  429c23:	add    esp,0xffffffdc
  429c26:	push   ebx
  429c27:	push   esi
  429c28:	push   edi
  429c29:	xor    ebx,ebx
  429c2b:	mov    DWORD PTR [ebp-0x20],ebx
  429c2e:	mov    DWORD PTR [ebp-0x24],ebx
  429c31:	mov    DWORD PTR [ebp-0x18],ebx
  429c34:	mov    DWORD PTR [ebp-0x1c],ebx
  429c37:	test   dl,dl
  429c39:	je     0x429c43
  429c3b:	add    esp,0xfffffff0
  429c3e:	call   0x403418
  429c43:	mov    esi,ecx
  429c45:	mov    BYTE PTR [ebp-0x1],dl
  429c48:	mov    ebx,eax
  429c4a:	mov    edi,DWORD PTR [ebp+0xc]
  429c4d:	xor    eax,eax
  429c4f:	push   ebp
  429c50:	push   0x429d49
  429c55:	push   DWORD PTR fs:[eax]
  429c58:	mov    DWORD PTR fs:[eax],esp
  429c5b:	cmp    di,0xffff
  429c60:	jne    0x429ccb
  429c62:	mov    edx,DWORD PTR [ebp+0x8]
  429c65:	mov    eax,esi
  429c67:	call   0x41f464
  429c6c:	mov    ecx,eax
  429c6e:	xor    edx,edx
  429c70:	mov    eax,ebx
  429c72:	call   0x429b18
  429c77:	cmp    DWORD PTR [ebx+0x4],0x0
  429c7b:	jge    0x429d2e
  429c81:	lea    edx,[ebp-0x18]
  429c84:	mov    eax,esi
  429c86:	call   0x41f58c
  429c8b:	mov    eax,DWORD PTR [ebp-0x18]
  429c8e:	mov    DWORD PTR [ebp-0x14],eax
  429c91:	mov    BYTE PTR [ebp-0x10],0xb
  429c95:	call   0x405af0
  429c9a:	lea    edx,[ebp-0x1c]
  429c9d:	call   0x421ca8
  429ca2:	mov    eax,DWORD PTR [ebp-0x1c]
  429ca5:	mov    DWORD PTR [ebp-0xc],eax
  429ca8:	mov    BYTE PTR [ebp-0x8],0xb
  429cac:	lea    eax,[ebp-0x14]
  429caf:	push   eax
  429cb0:	push   0x1
  429cb2:	mov    ecx,DWORD PTR ds:0x42e56c
  429cb8:	mov    dl,0x1
  429cba:	mov    eax,ds:0x427454
  429cbf:	call   0x4225b8
  429cc4:	call   0x4036e4
  429cc9:	jmp    0x429d2e
  429ccb:	movzx  edx,di
  429cce:	mov    eax,esi
  429cd0:	call   0x41f3e8
  429cd5:	mov    ecx,eax
  429cd7:	xor    edx,edx
  429cd9:	mov    eax,ebx
  429cdb:	call   0x429b18
  429ce0:	cmp    DWORD PTR [ebx+0x4],0x0
  429ce4:	jge    0x429d2e
  429ce6:	lea    edx,[ebp-0x20]
  429ce9:	mov    eax,esi
  429ceb:	call   0x41f58c
  429cf0:	mov    eax,DWORD PTR [ebp-0x20]
  429cf3:	mov    DWORD PTR [ebp-0x14],eax
  429cf6:	mov    BYTE PTR [ebp-0x10],0xb
  429cfa:	call   0x405af0
  429cff:	lea    edx,[ebp-0x24]
  429d02:	call   0x421ca8
  429d07:	mov    eax,DWORD PTR [ebp-0x24]
  429d0a:	mov    DWORD PTR [ebp-0xc],eax
  429d0d:	mov    BYTE PTR [ebp-0x8],0xb
  429d11:	lea    eax,[ebp-0x14]
  429d14:	push   eax
  429d15:	push   0x1
  429d17:	mov    ecx,DWORD PTR ds:0x42e39c
  429d1d:	mov    dl,0x1
  429d1f:	mov    eax,ds:0x4274b0
  429d24:	call   0x4225b8
  429d29:	call   0x4036e4
  429d2e:	xor    eax,eax
  429d30:	pop    edx
  429d31:	pop    ecx
  429d32:	pop    ecx
  429d33:	mov    DWORD PTR fs:[eax],edx
  429d36:	push   0x429d50
  429d3b:	lea    eax,[ebp-0x24]
  429d3e:	mov    edx,0x4
  429d43:	call   0x403cd0
  429d48:	ret    
  429d49:	jmp    0x4036ac
  429d4e:	jmp    0x429d3b
  429d50:	mov    eax,ebx
  429d52:	cmp    BYTE PTR [ebp-0x1],0x0
  429d56:	je     0x429d67
  429d58:	call   0x403470
  429d5d:	pop    DWORD PTR fs:0x0
  429d64:	add    esp,0xc
  429d67:	mov    eax,ebx
  429d69:	pop    edi
  429d6a:	pop    esi
  429d6b:	pop    ebx
  429d6c:	mov    esp,ebp
  429d6e:	pop    ebp
  429d6f:	ret    0x8
  429d72:	mov    eax,eax
  429d74:	push   ebx
  429d75:	push   esi
  429d76:	call   0x403480
  429d7b:	mov    ebx,edx
  429d7d:	mov    esi,eax
  429d7f:	mov    eax,DWORD PTR [esi+0x4]
  429d82:	test   eax,eax
  429d84:	jl     0x429d8b
  429d86:	call   0x41f4fc
  429d8b:	mov    edx,ebx
  429d8d:	and    dl,0xfc
  429d90:	mov    eax,esi
  429d92:	call   0x4031b4
  429d97:	test   bl,bl
  429d99:	jle    0x429da2
  429d9b:	mov    eax,esi
  429d9d:	call   0x403468
  429da2:	pop    esi
  429da3:	pop    ebx
  429da4:	ret    
  429da5:	lea    eax,[eax+0x0]
  429da8:	push   ebp
  429da9:	mov    ebp,esp
  429dab:	add    esp,0xfffffff8
  429dae:	push   ebx
  429daf:	push   esi
  429db0:	push   edi
  429db1:	mov    DWORD PTR [ebp-0x8],edx
  429db4:	mov    DWORD PTR [ebp-0x4],eax
  429db7:	cmp    DWORD PTR ds:0x42f860,0x0
  429dbe:	je     0x429e4a
  429dc4:	mov    eax,ds:0x42f860
  429dc9:	call   0x4282f4
  429dce:	mov    edi,eax
  429dd0:	xor    eax,eax
  429dd2:	push   ebp
  429dd3:	push   0x429e43
  429dd8:	push   DWORD PTR fs:[eax]
  429ddb:	mov    DWORD PTR fs:[eax],esp
  429dde:	mov    ebx,DWORD PTR [edi+0x8]
  429de1:	dec    ebx
  429de2:	cmp    ebx,0x0
  429de5:	jl     0x429e2b
  429de7:	mov    edx,ebx
  429de9:	mov    eax,edi
  429deb:	call   0x428110
  429df0:	mov    esi,eax
  429df2:	cmp    DWORD PTR [ebp-0x4],0x0
  429df6:	je     0x429e00
  429df8:	mov    eax,DWORD PTR [esi+0x8]
  429dfb:	cmp    eax,DWORD PTR [ebp-0x4]
  429dfe:	jne    0x429e25
  429e00:	cmp    DWORD PTR [ebp-0x8],0x0
  429e04:	je     0x429e15
  429e06:	mov    edx,DWORD PTR [esi+0x10]
  429e09:	mov    eax,DWORD PTR [ebp-0x8]
  429e0c:	call   0x41ef78
  429e11:	test   al,al
  429e13:	je     0x429e25
  429e15:	mov    edx,ebx
  429e17:	mov    eax,edi
  429e19:	call   0x42801c
  429e1e:	mov    eax,esi
  429e20:	call   0x4031c4
  429e25:	dec    ebx
  429e26:	cmp    ebx,0xffffffff
  429e29:	jne    0x429de7
  429e2b:	xor    eax,eax
  429e2d:	pop    edx
  429e2e:	pop    ecx
  429e2f:	pop    ecx
  429e30:	mov    DWORD PTR fs:[eax],edx
  429e33:	push   0x429e4a
  429e38:	mov    eax,ds:0x42f860
  429e3d:	call   0x428308
  429e42:	ret    
  429e43:	jmp    0x4036ac
  429e48:	jmp    0x429e38
  429e4a:	pop    edi
  429e4b:	pop    esi
  429e4c:	pop    ebx
  429e4d:	pop    ecx
  429e4e:	pop    ecx
  429e4f:	pop    ebp
  429e50:	ret    
  429e51:	lea    eax,[eax+0x0]
  429e54:	push   ebp
  429e55:	mov    ebp,esp
  429e57:	push   ecx
  429e58:	push   ebx
  429e59:	push   esi
  429e5a:	push   edi
  429e5b:	mov    DWORD PTR [ebp-0x4],eax
  429e5e:	cmp    DWORD PTR ds:0x42f860,0x0
  429e65:	je     0x429ed2
  429e67:	mov    eax,ds:0x42f860
  429e6c:	call   0x4282f4
  429e71:	mov    edi,eax
  429e73:	xor    eax,eax
  429e75:	push   ebp
  429e76:	push   0x429ecb
  429e7b:	push   DWORD PTR fs:[eax]
  429e7e:	mov    DWORD PTR fs:[eax],esp
  429e81:	mov    ebx,DWORD PTR [edi+0x8]
  429e84:	dec    ebx
  429e85:	cmp    ebx,0x0
  429e88:	jl     0x429eb3
  429e8a:	mov    edx,ebx
  429e8c:	mov    eax,edi
  429e8e:	call   0x428110
  429e93:	mov    esi,eax
  429e95:	mov    eax,DWORD PTR [esi+0x4]
  429e98:	cmp    eax,DWORD PTR [ebp-0x4]
  429e9b:	jne    0x429ead
  429e9d:	mov    edx,ebx
  429e9f:	mov    eax,edi
  429ea1:	call   0x42801c
  429ea6:	mov    eax,esi
  429ea8:	call   0x4031c4
  429ead:	dec    ebx
  429eae:	cmp    ebx,0xffffffff
  429eb1:	jne    0x429e8a
  429eb3:	xor    eax,eax
  429eb5:	pop    edx
  429eb6:	pop    ecx
  429eb7:	pop    ecx
  429eb8:	mov    DWORD PTR fs:[eax],edx
  429ebb:	push   0x429ed2
  429ec0:	mov    eax,ds:0x42f860
  429ec5:	call   0x428308
  429eca:	ret    
  429ecb:	jmp    0x4036ac
  429ed0:	jmp    0x429ec0
  429ed2:	pop    edi
  429ed3:	pop    esi
  429ed4:	pop    ebx
  429ed5:	pop    ecx
  429ed6:	pop    ebp
  429ed7:	ret    
  429ed8:	push   ebx
  429ed9:	mov    ebx,eax
  429edb:	mov    ecx,ebx
  429edd:	mov    dl,0x1
  429edf:	mov    eax,ds:0x427560
  429ee4:	call   0x42257c
  429ee9:	call   0x4036e4
  429eee:	pop    ebx
  429eef:	ret    
  429ef0:	mov    eax,ds:0x42e4bc
  429ef5:	call   0x429ed8
  429efa:	ret    
  429efb:	nop
  429efc:	push   ebx
  429efd:	push   esi
  429efe:	mov    ebx,edx
  429f00:	mov    esi,eax
  429f02:	mov    eax,esi
  429f04:	call   0x42a1b8
  429f09:	cmp    bl,al
  429f0b:	je     0x429f1c
  429f0d:	dec    DWORD PTR [esi+0x10]
  429f10:	mov    eax,esi
  429f12:	call   0x42a2c8
  429f17:	call   0x429ef0
  429f1c:	pop    esi
  429f1d:	pop    ebx
  429f1e:	ret    
  429f1f:	nop
  429f20:	push   ebx
  429f21:	mov    ebx,eax
  429f23:	mov    eax,ebx
  429f25:	call   0x42a1b8
  429f2a:	test   al,al
  429f2c:	sete   al
  429f2f:	dec    DWORD PTR [ebx+0x10]
  429f32:	pop    ebx
  429f33:	ret    
  429f34:	push   ebx
  429f35:	mov    ebx,eax
  429f37:	mov    eax,ebx
  429f39:	call   0x42a1b8
  429f3e:	dec    DWORD PTR [ebx+0x10]
  429f41:	pop    ebx
  429f42:	ret    
  429f43:	nop
  429f44:	push   esi
  429f45:	push   edi
  429f46:	push   ebx
  429f47:	mov    edi,edx
  429f49:	mov    ebx,ecx
  429f4b:	mov    esi,eax
  429f4d:	jmp    0x429f85
  429f4f:	mov    ecx,DWORD PTR [esi+0x14]
  429f52:	sub    ecx,DWORD PTR [esi+0x10]
  429f55:	ja     0x429f61
  429f57:	mov    eax,esi
  429f59:	call   0x429f90
  429f5e:	mov    ecx,DWORD PTR [esi+0x14]
  429f61:	cmp    ecx,ebx
  429f63:	jb     0x429f67
  429f65:	mov    ecx,ebx
  429f67:	push   esi
  429f68:	sub    ebx,ecx
  429f6a:	mov    eax,DWORD PTR [esi+0x8]
  429f6d:	add    eax,DWORD PTR [esi+0x10]
  429f70:	add    DWORD PTR [esi+0x10],ecx
  429f73:	mov    esi,eax
  429f75:	mov    edx,ecx
  429f77:	shr    ecx,0x2
  429f7a:	cld    
  429f7b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429f7d:	mov    ecx,edx
  429f7f:	and    ecx,0x3
  429f82:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429f84:	pop    esi
  429f85:	or     ebx,ebx
  429f87:	jne    0x429f4f
  429f89:	pop    ebx
  429f8a:	pop    edi
  429f8b:	pop    esi
  429f8c:	ret    
  429f8d:	lea    eax,[eax+0x0]
  429f90:	push   ebx
  429f91:	push   esi
  429f92:	mov    ebx,eax
  429f94:	mov    edx,DWORD PTR [ebx+0x8]
  429f97:	mov    ecx,DWORD PTR [ebx+0xc]
  429f9a:	mov    eax,DWORD PTR [ebx+0x4]
  429f9d:	mov    esi,DWORD PTR [eax]
  429f9f:	call   DWORD PTR [esi+0xc]
  429fa2:	mov    esi,eax
  429fa4:	mov    DWORD PTR [ebx+0x14],esi
  429fa7:	test   esi,esi
  429fa9:	jne    0x429fc2
  429fab:	mov    ecx,DWORD PTR ds:0x42e528
  429fb1:	mov    dl,0x1
  429fb3:	mov    eax,ds:0x427560
  429fb8:	call   0x42257c
  429fbd:	call   0x4036e4
  429fc2:	xor    eax,eax
  429fc4:	mov    DWORD PTR [ebx+0x10],eax
  429fc7:	pop    esi
  429fc8:	pop    ebx
  429fc9:	ret    
  429fca:	mov    eax,eax
  429fcc:	mov    dl,0x1
  429fce:	call   0x429efc
  429fd3:	ret    
  429fd4:	xor    edx,edx
  429fd6:	call   0x429efc
  429fdb:	ret    
  429fdc:	push   ebx
  429fdd:	push   esi
  429fde:	push   ecx
  429fdf:	mov    esi,edx
  429fe1:	mov    ebx,eax
  429fe3:	mov    edx,esp
  429fe5:	mov    ecx,0x1
  429fea:	mov    eax,ebx
  429fec:	call   0x429f44
  429ff1:	xor    ecx,ecx
  429ff3:	mov    cl,BYTE PTR [esp]
  429ff6:	mov    eax,esi
  429ff8:	xor    edx,edx
  429ffa:	call   0x403d9c
  429fff:	mov    eax,esi
  42a001:	call   0x404198
  42a006:	mov    edx,eax
  42a008:	xor    ecx,ecx
  42a00a:	mov    cl,BYTE PTR [esp]
  42a00d:	mov    eax,ebx
  42a00f:	call   0x429f44
  42a014:	pop    edx
  42a015:	pop    esi
  42a016:	pop    ebx
  42a017:	ret    
  42a018:	push   ebp
  42a019:	mov    ebp,esp
  42a01b:	add    esp,0xfffffff8
  42a01e:	push   ebx
  42a01f:	push   esi
  42a020:	xor    ecx,ecx
  42a022:	mov    DWORD PTR [ebp-0x8],ecx
  42a025:	mov    esi,edx
  42a027:	mov    ebx,eax
  42a029:	xor    eax,eax
  42a02b:	push   ebp
  42a02c:	push   0x42a0c5
  42a031:	push   DWORD PTR fs:[eax]
  42a034:	mov    DWORD PTR fs:[eax],esp
  42a037:	mov    eax,ebx
  42a039:	call   0x429f34
  42a03e:	sub    al,0x12
  42a040:	je     0x42a046
  42a042:	sub    al,0x2
  42a044:	jne    0x42a05c
  42a046:	lea    edx,[ebp-0x8]
  42a049:	mov    eax,ebx
  42a04b:	call   0x42a0d4
  42a050:	mov    edx,DWORD PTR [ebp-0x8]
  42a053:	mov    eax,esi
  42a055:	call   0x403f34
  42a05a:	jmp    0x42a0af
  42a05c:	xor    eax,eax
  42a05e:	mov    DWORD PTR [ebp-0x4],eax
  42a061:	mov    eax,ebx
  42a063:	call   0x42a1b8
  42a068:	sub    al,0x6
  42a06a:	je     0x42a072
  42a06c:	sub    al,0x6
  42a06e:	je     0x42a083
  42a070:	jmp    0x42a094
  42a072:	lea    edx,[ebp-0x4]
  42a075:	mov    ecx,0x1
  42a07a:	mov    eax,ebx
  42a07c:	call   0x429f44
  42a081:	jmp    0x42a099
  42a083:	lea    edx,[ebp-0x4]
  42a086:	mov    ecx,0x4
  42a08b:	mov    eax,ebx
  42a08d:	call   0x429f44
  42a092:	jmp    0x42a099
  42a094:	call   0x429ef0
  42a099:	mov    eax,esi
  42a09b:	mov    edx,DWORD PTR [ebp-0x4]
  42a09e:	call   0x404284
  42a0a3:	mov    edx,DWORD PTR [esi]
  42a0a5:	mov    ecx,DWORD PTR [ebp-0x4]
  42a0a8:	mov    eax,ebx
  42a0aa:	call   0x429f44
  42a0af:	xor    eax,eax
  42a0b1:	pop    edx
  42a0b2:	pop    ecx
  42a0b3:	pop    ecx
  42a0b4:	mov    DWORD PTR fs:[eax],edx
  42a0b7:	push   0x42a0cc
  42a0bc:	lea    eax,[ebp-0x8]
  42a0bf:	call   0x404318
  42a0c4:	ret    
  42a0c5:	jmp    0x4036ac
  42a0ca:	jmp    0x42a0bc
  42a0cc:	pop    esi
  42a0cd:	pop    ebx
  42a0ce:	pop    ecx
  42a0cf:	pop    ecx
  42a0d0:	pop    ebp
  42a0d1:	ret    
  42a0d2:	mov    eax,eax
  42a0d4:	push   ebp
  42a0d5:	mov    ebp,esp
  42a0d7:	push   0x0
  42a0d9:	push   0x0
  42a0db:	push   0x0
  42a0dd:	push   ebx
  42a0de:	push   esi
  42a0df:	mov    esi,edx
  42a0e1:	mov    ebx,eax
  42a0e3:	xor    eax,eax
  42a0e5:	push   ebp
  42a0e6:	push   0x42a1ab
  42a0eb:	push   DWORD PTR fs:[eax]
  42a0ee:	mov    DWORD PTR fs:[eax],esp
  42a0f1:	mov    eax,ebx
  42a0f3:	call   0x429f34
  42a0f8:	sub    al,0x6
  42a0fa:	je     0x42a100
  42a0fc:	sub    al,0x6
  42a0fe:	jne    0x42a116
  42a100:	lea    edx,[ebp-0xc]
  42a103:	mov    eax,ebx
  42a105:	call   0x42a018
  42a10a:	mov    edx,DWORD PTR [ebp-0xc]
  42a10d:	mov    eax,esi
  42a10f:	call   0x404464
  42a114:	jmp    0x42a18d
  42a116:	xor    eax,eax
  42a118:	mov    DWORD PTR [ebp-0x4],eax
  42a11b:	mov    eax,ebx
  42a11d:	call   0x42a1b8
  42a122:	sub    al,0x12
  42a124:	je     0x42a12c
  42a126:	sub    al,0x2
  42a128:	je     0x42a155
  42a12a:	jmp    0x42a188
  42a12c:	lea    edx,[ebp-0x4]
  42a12f:	mov    ecx,0x4
  42a134:	mov    eax,ebx
  42a136:	call   0x429f44
  42a13b:	mov    eax,esi
  42a13d:	mov    edx,DWORD PTR [ebp-0x4]
  42a140:	call   0x404560
  42a145:	mov    ecx,DWORD PTR [ebp-0x4]
  42a148:	add    ecx,ecx
  42a14a:	mov    edx,DWORD PTR [esi]
  42a14c:	mov    eax,ebx
  42a14e:	call   0x429f44
  42a153:	jmp    0x42a18d
  42a155:	lea    edx,[ebp-0x4]
  42a158:	mov    ecx,0x4
  42a15d:	mov    eax,ebx
  42a15f:	call   0x429f44
  42a164:	lea    eax,[ebp-0x8]
  42a167:	mov    edx,DWORD PTR [ebp-0x4]
  42a16a:	call   0x404284
  42a16f:	mov    edx,DWORD PTR [ebp-0x8]
  42a172:	mov    ecx,DWORD PTR [ebp-0x4]
  42a175:	mov    eax,ebx
  42a177:	call   0x429f44
  42a17c:	mov    edx,esi
  42a17e:	mov    eax,DWORD PTR [ebp-0x8]
  42a181:	call   0x405608
  42a186:	jmp    0x42a18d
  42a188:	call   0x429ef0
  42a18d:	xor    eax,eax
  42a18f:	pop    edx
  42a190:	pop    ecx
  42a191:	pop    ecx
  42a192:	mov    DWORD PTR fs:[eax],edx
  42a195:	push   0x42a1b2
  42a19a:	lea    eax,[ebp-0xc]
  42a19d:	call   0x403cac
  42a1a2:	lea    eax,[ebp-0x8]
  42a1a5:	call   0x403cac
  42a1aa:	ret    
  42a1ab:	jmp    0x4036ac
  42a1b0:	jmp    0x42a19a
  42a1b2:	pop    esi
  42a1b3:	pop    ebx
  42a1b4:	mov    esp,ebp
  42a1b6:	pop    ebp
  42a1b7:	ret    
  42a1b8:	push   ecx
  42a1b9:	mov    edx,esp
  42a1bb:	mov    ecx,0x1
  42a1c0:	call   0x429f44
  42a1c5:	mov    al,BYTE PTR [esp]
  42a1c8:	pop    edx
  42a1c9:	ret    
  42a1ca:	mov    eax,eax
  42a1cc:	push   ebp
  42a1cd:	mov    ebp,esp
  42a1cf:	push   0x0
  42a1d1:	push   ebx
  42a1d2:	mov    ebx,eax
  42a1d4:	xor    eax,eax
  42a1d6:	push   ebp
  42a1d7:	push   0x42a208
  42a1dc:	push   DWORD PTR fs:[eax]
  42a1df:	mov    DWORD PTR fs:[eax],esp
  42a1e2:	lea    edx,[ebp-0x4]
  42a1e5:	mov    eax,ebx
  42a1e7:	call   0x429fdc
  42a1ec:	cmp    DWORD PTR [ebp-0x4],0x0
  42a1f0:	jne    0x42a1e2
  42a1f2:	xor    eax,eax
  42a1f4:	pop    edx
  42a1f5:	pop    ecx
  42a1f6:	pop    ecx
  42a1f7:	mov    DWORD PTR fs:[eax],edx
  42a1fa:	push   0x42a20f
  42a1ff:	lea    eax,[ebp-0x4]
  42a202:	call   0x403cac
  42a207:	ret    
  42a208:	jmp    0x4036ac
  42a20d:	jmp    0x42a1ff
  42a20f:	pop    ebx
  42a210:	pop    ecx
  42a211:	pop    ebp
  42a212:	ret    
  42a213:	nop
  42a214:	push   ebp
  42a215:	mov    ebp,esp
  42a217:	push   ebx
  42a218:	mov    ebx,DWORD PTR [ebp+0x8]
  42a21b:	add    ebx,0xfffffffc
  42a21e:	jmp    0x42a227
  42a220:	mov    eax,DWORD PTR [ebx]
  42a222:	call   0x42a2c8
  42a227:	mov    eax,DWORD PTR [ebx]
  42a229:	call   0x429f20
  42a22e:	test   al,al
  42a230:	je     0x42a220
  42a232:	mov    eax,DWORD PTR [ebx]
  42a234:	call   0x429fd4
  42a239:	pop    ebx
  42a23a:	pop    ebp
  42a23b:	ret    
  42a23c:	push   ebp
  42a23d:	mov    ebp,esp
  42a23f:	push   ecx
  42a240:	push   ebx
  42a241:	mov    ebx,eax
  42a243:	lea    edx,[ebp-0x4]
  42a246:	mov    eax,DWORD PTR [ebp+0x8]
  42a249:	mov    eax,DWORD PTR [eax-0x4]
  42a24c:	mov    ecx,0x4
  42a251:	call   0x429f44
  42a256:	mov    edx,DWORD PTR [ebp-0x4]
  42a259:	imul   edx,ebx
  42a25c:	mov    eax,DWORD PTR [ebp+0x8]
  42a25f:	mov    eax,DWORD PTR [eax-0x4]
  42a262:	call   0x42a4ac
  42a267:	pop    ebx
  42a268:	pop    ecx
  42a269:	pop    ebp
  42a26a:	ret    
  42a26b:	nop
  42a26c:	push   ebp
  42a26d:	mov    ebp,esp
  42a26f:	push   ebx
  42a270:	mov    ebx,DWORD PTR [ebp+0x8]
  42a273:	add    ebx,0xfffffffc
  42a276:	jmp    0x42a2b3
  42a278:	mov    eax,DWORD PTR [ebx]
  42a27a:	call   0x429f34
  42a27f:	add    al,0xfe
  42a281:	sub    al,0x3
  42a283:	jae    0x42a28c
  42a285:	mov    eax,DWORD PTR [ebx]
  42a287:	call   0x42a2c8
  42a28c:	mov    eax,DWORD PTR [ebx]
  42a28e:	mov    edx,0x1
  42a293:	call   0x42a4ac
  42a298:	jmp    0x42a2a1
  42a29a:	mov    eax,DWORD PTR [ebx]
  42a29c:	call   0x42a464
  42a2a1:	mov    eax,DWORD PTR [ebx]
  42a2a3:	call   0x429f20
  42a2a8:	test   al,al
  42a2aa:	je     0x42a29a
  42a2ac:	mov    eax,DWORD PTR [ebx]
  42a2ae:	call   0x429fd4
  42a2b3:	mov    eax,DWORD PTR [ebx]
  42a2b5:	call   0x429f20
  42a2ba:	test   al,al
  42a2bc:	je     0x42a278
  42a2be:	mov    eax,DWORD PTR [ebx]
  42a2c0:	call   0x429fd4
  42a2c5:	pop    ebx
  42a2c6:	pop    ebp
  42a2c7:	ret    
  42a2c8:	push   ebp
  42a2c9:	mov    ebp,esp
  42a2cb:	add    esp,0xfffffff8
  42a2ce:	xor    edx,edx
  42a2d0:	mov    DWORD PTR [ebp-0x8],edx
  42a2d3:	mov    DWORD PTR [ebp-0x4],eax
  42a2d6:	xor    eax,eax
  42a2d8:	push   ebp
  42a2d9:	push   0x42a457
  42a2de:	push   DWORD PTR fs:[eax]
  42a2e1:	mov    DWORD PTR fs:[eax],esp
  42a2e4:	mov    eax,DWORD PTR [ebp-0x4]
  42a2e7:	call   0x42a1b8
  42a2ec:	and    eax,0x7f
  42a2ef:	cmp    eax,0x14
  42a2f2:	ja     0x42a441
  42a2f8:	jmp    DWORD PTR [eax*4+0x42a2ff]
  42a2ff:	inc    ecx
  42a300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a301:	inc    edx
  42a302:	add    BYTE PTR [eax-0x5d],bl
  42a305:	inc    edx
  42a306:	add    BYTE PTR [ebx+eiz*4+0x42],ah
  42a30a:	add    BYTE PTR [esi-0x5d],dh
  42a30d:	inc    edx
  42a30e:	add    BYTE PTR [eax-0x65ffbd5d],cl
  42a314:	mov    ds:0xa3ac0042,eax
  42a319:	inc    edx
  42a31a:	add    BYTE PTR [ebx+eiz*4-0x5bbeffbe],ch
  42a321:	inc    edx
  42a322:	add    BYTE PTR [ecx-0x5c],al
  42a325:	inc    edx
  42a326:	add    BYTE PTR [ebx+eiz*4-0x5c35ffbe],bh
  42a32d:	inc    edx
  42a32e:	add    ah,dl
  42a330:	mov    ds:0xa4410042,eax
  42a335:	inc    edx
  42a336:	add    dl,ah
  42a338:	mov    ds:0xa3eb0042,eax
  42a33d:	inc    edx
  42a33e:	add    dl,bh
  42a340:	mov    ds:0xa4090042,eax
  42a345:	inc    edx
  42a346:	add    BYTE PTR [eax],bl
  42a348:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a349:	inc    edx
  42a34a:	add    BYTE PTR [esi],ah
  42a34c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a34d:	inc    edx
  42a34e:	add    BYTE PTR ds:0xe90042a4,dh
  42a354:	jmp    0x5542a359
  42a359:	call   0x42a214
  42a35e:	pop    ecx
  42a35f:	jmp    0x42a441
  42a364:	mov    edx,0x1
  42a369:	mov    eax,DWORD PTR [ebp-0x4]
  42a36c:	call   0x42a4ac
  42a371:	jmp    0x42a441
  42a376:	mov    edx,0x2
  42a37b:	mov    eax,DWORD PTR [ebp-0x4]
  42a37e:	call   0x42a4ac
  42a383:	jmp    0x42a441
  42a388:	mov    edx,0x4
  42a38d:	mov    eax,DWORD PTR [ebp-0x4]
  42a390:	call   0x42a4ac
  42a395:	jmp    0x42a441
  42a39a:	mov    edx,0xa
  42a39f:	mov    eax,DWORD PTR [ebp-0x4]
  42a3a2:	call   0x42a4ac
  42a3a7:	jmp    0x42a441
  42a3ac:	lea    edx,[ebp-0x8]
  42a3af:	mov    eax,DWORD PTR [ebp-0x4]
  42a3b2:	call   0x429fdc
  42a3b7:	jmp    0x42a441
  42a3bc:	push   ebp
  42a3bd:	mov    eax,0x1
  42a3c2:	call   0x42a23c
  42a3c7:	pop    ecx
  42a3c8:	jmp    0x42a441
  42a3ca:	mov    eax,DWORD PTR [ebp-0x4]
  42a3cd:	call   0x42a1cc
  42a3d2:	jmp    0x42a441
  42a3d4:	push   ebp
  42a3d5:	mov    eax,0x1
  42a3da:	call   0x42a23c
  42a3df:	pop    ecx
  42a3e0:	jmp    0x42a441
  42a3e2:	push   ebp
  42a3e3:	call   0x42a26c
  42a3e8:	pop    ecx
  42a3e9:	jmp    0x42a441
  42a3eb:	mov    edx,0x4
  42a3f0:	mov    eax,DWORD PTR [ebp-0x4]
  42a3f3:	call   0x42a4ac
  42a3f8:	jmp    0x42a441
  42a3fa:	mov    edx,0x8
  42a3ff:	mov    eax,DWORD PTR [ebp-0x4]
  42a402:	call   0x42a4ac
  42a407:	jmp    0x42a441
  42a409:	mov    edx,0x8
  42a40e:	mov    eax,DWORD PTR [ebp-0x4]
  42a411:	call   0x42a4ac
  42a416:	jmp    0x42a441
  42a418:	push   ebp
  42a419:	mov    eax,0x2
  42a41e:	call   0x42a23c
  42a423:	pop    ecx
  42a424:	jmp    0x42a441
  42a426:	mov    edx,0x8
  42a42b:	mov    eax,DWORD PTR [ebp-0x4]
  42a42e:	call   0x42a4ac
  42a433:	jmp    0x42a441
  42a435:	push   ebp
  42a436:	mov    eax,0x1
  42a43b:	call   0x42a23c
  42a440:	pop    ecx
  42a441:	xor    eax,eax
  42a443:	pop    edx
  42a444:	pop    ecx
  42a445:	pop    ecx
  42a446:	mov    DWORD PTR fs:[eax],edx
  42a449:	push   0x42a45e
  42a44e:	lea    eax,[ebp-0x8]
  42a451:	call   0x403cac
  42a456:	ret    
  42a457:	jmp    0x4036ac
  42a45c:	jmp    0x42a44e
  42a45e:	pop    ecx
  42a45f:	pop    ecx
  42a460:	pop    ebp
  42a461:	ret    
  42a462:	mov    eax,eax
  42a464:	push   ebp
  42a465:	mov    ebp,esp
  42a467:	push   0x0
  42a469:	push   ebx
  42a46a:	mov    ebx,eax
  42a46c:	xor    eax,eax
  42a46e:	push   ebp
  42a46f:	push   0x42a4a1
  42a474:	push   DWORD PTR fs:[eax]
  42a477:	mov    DWORD PTR fs:[eax],esp
  42a47a:	lea    edx,[ebp-0x4]
  42a47d:	mov    eax,ebx
  42a47f:	call   0x429fdc
  42a484:	mov    eax,ebx
  42a486:	call   0x42a2c8
  42a48b:	xor    eax,eax
  42a48d:	pop    edx
  42a48e:	pop    ecx
  42a48f:	pop    ecx
  42a490:	mov    DWORD PTR fs:[eax],edx
  42a493:	push   0x42a4a8
  42a498:	lea    eax,[ebp-0x4]
  42a49b:	call   0x403cac
  42a4a0:	ret    
  42a4a1:	jmp    0x4036ac
  42a4a6:	jmp    0x42a498
  42a4a8:	pop    ebx
  42a4a9:	pop    ecx
  42a4aa:	pop    ebp
  42a4ab:	ret    
  42a4ac:	push   ebx
  42a4ad:	push   esi
  42a4ae:	add    esp,0xffffff00
  42a4b4:	mov    ebx,edx
  42a4b6:	mov    esi,eax
  42a4b8:	test   ebx,ebx
  42a4ba:	jle    0x42a4eb
  42a4bc:	cmp    ebx,0x100
  42a4c2:	jle    0x42a4da
  42a4c4:	mov    edx,esp
  42a4c6:	mov    ecx,0x100
  42a4cb:	mov    eax,esi
  42a4cd:	call   0x429f44
  42a4d2:	sub    ebx,0x100
  42a4d8:	jmp    0x42a4e7
  42a4da:	mov    edx,esp
  42a4dc:	mov    ecx,ebx
  42a4de:	mov    eax,esi
  42a4e0:	call   0x429f44
  42a4e5:	xor    ebx,ebx
  42a4e7:	test   ebx,ebx
  42a4e9:	jg     0x42a4bc
  42a4eb:	add    esp,0x100
  42a4f1:	pop    esi
  42a4f2:	pop    ebx
  42a4f3:	ret    
  42a4f4:	push   esi
  42a4f5:	push   edi
  42a4f6:	push   ebx
  42a4f7:	mov    esi,edx
  42a4f9:	mov    ebx,ecx
  42a4fb:	mov    edi,eax
  42a4fd:	jmp    0x42a535
  42a4ff:	mov    ecx,DWORD PTR [edi+0xc]
  42a502:	sub    ecx,DWORD PTR [edi+0x10]
  42a505:	ja     0x42a511
  42a507:	mov    eax,edi
  42a509:	call   0x42a540
  42a50e:	mov    ecx,DWORD PTR [edi+0xc]
  42a511:	cmp    ecx,ebx
  42a513:	jb     0x42a517
  42a515:	mov    ecx,ebx
  42a517:	sub    ebx,ecx
  42a519:	push   edi
  42a51a:	mov    eax,DWORD PTR [edi+0x8]
  42a51d:	add    eax,DWORD PTR [edi+0x10]
  42a520:	add    DWORD PTR [edi+0x10],ecx
  42a523:	mov    edi,eax
  42a525:	mov    edx,ecx
  42a527:	shr    ecx,0x2
  42a52a:	cld    
  42a52b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a52d:	mov    ecx,edx
  42a52f:	and    ecx,0x3
  42a532:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a534:	pop    edi
  42a535:	or     ebx,ebx
  42a537:	jne    0x42a4ff
  42a539:	pop    ebx
  42a53a:	pop    edi
  42a53b:	pop    esi
  42a53c:	ret    
  42a53d:	lea    eax,[eax+0x0]
  42a540:	push   ebx
  42a541:	mov    ebx,eax
  42a543:	mov    edx,DWORD PTR [ebx+0x8]
  42a546:	mov    ecx,DWORD PTR [ebx+0x10]
  42a549:	mov    eax,DWORD PTR [ebx+0x4]
  42a54c:	call   0x429ae0
  42a551:	xor    eax,eax
  42a553:	mov    DWORD PTR [ebx+0x10],eax
  42a556:	pop    ebx
  42a557:	ret    
  42a558:	mov    dl,0x1
  42a55a:	call   0x42a654
  42a55f:	ret    
  42a560:	xor    edx,edx
  42a562:	call   0x42a654
  42a567:	ret    
  42a568:	push   ebx
  42a569:	push   esi
  42a56a:	push   edi
  42a56b:	push   ecx
  42a56c:	mov    edi,ecx
  42a56e:	mov    esi,edx
  42a570:	mov    ebx,eax
  42a572:	mov    eax,esi
  42a574:	mov    edx,edi
  42a576:	call   0x404094
  42a57b:	je     0x42a5ac
  42a57d:	mov    eax,edi
  42a57f:	call   0x403f48
  42a584:	mov    DWORD PTR [esp],eax
  42a587:	mov    dl,0x14
  42a589:	mov    eax,ebx
  42a58b:	call   0x42a654
  42a590:	mov    edx,esp
  42a592:	mov    ecx,0x4
  42a597:	mov    eax,ebx
  42a599:	call   0x42a4f4
  42a59e:	mov    edx,edi
  42a5a0:	mov    ecx,DWORD PTR [esp]
  42a5a3:	mov    eax,ebx
  42a5a5:	call   0x42a4f4
  42a5aa:	jmp    0x42a5fb
  42a5ac:	mov    eax,esi
  42a5ae:	call   0x403f48
  42a5b3:	mov    DWORD PTR [esp],eax
  42a5b6:	cmp    DWORD PTR [esp],0xff
  42a5bd:	jg     0x42a5d8
  42a5bf:	mov    dl,0x6
  42a5c1:	mov    eax,ebx
  42a5c3:	call   0x42a654
  42a5c8:	mov    edx,esp
  42a5ca:	mov    ecx,0x1
  42a5cf:	mov    eax,ebx
  42a5d1:	call   0x42a4f4
  42a5d6:	jmp    0x42a5ef
  42a5d8:	mov    dl,0xc
  42a5da:	mov    eax,ebx
  42a5dc:	call   0x42a654
  42a5e1:	mov    edx,esp
  42a5e3:	mov    ecx,0x4
  42a5e8:	mov    eax,ebx
  42a5ea:	call   0x42a4f4
  42a5ef:	mov    edx,esi
  42a5f1:	mov    ecx,DWORD PTR [esp]
  42a5f4:	mov    eax,ebx
  42a5f6:	call   0x42a4f4
  42a5fb:	pop    edx
  42a5fc:	pop    edi
  42a5fd:	pop    esi
  42a5fe:	pop    ebx
  42a5ff:	ret    
  42a600:	push   ebp
  42a601:	mov    ebp,esp
  42a603:	push   0x0
  42a605:	push   ebx
  42a606:	push   esi
  42a607:	mov    esi,edx
  42a609:	mov    ebx,eax
  42a60b:	xor    eax,eax
  42a60d:	push   ebp
  42a60e:	push   0x42a645
  42a613:	push   DWORD PTR fs:[eax]
  42a616:	mov    DWORD PTR fs:[eax],esp
  42a619:	lea    edx,[ebp-0x4]
  42a61c:	mov    eax,esi
  42a61e:	call   0x4056ac
  42a623:	mov    ecx,DWORD PTR [ebp-0x4]
  42a626:	mov    edx,esi
  42a628:	mov    eax,ebx
  42a62a:	call   0x42a568
  42a62f:	xor    eax,eax
  42a631:	pop    edx
  42a632:	pop    ecx
  42a633:	pop    ecx
  42a634:	mov    DWORD PTR fs:[eax],edx
  42a637:	push   0x42a64c
  42a63c:	lea    eax,[ebp-0x4]
  42a63f:	call   0x403cac
  42a644:	ret    
  42a645:	jmp    0x4036ac
  42a64a:	jmp    0x42a63c
  42a64c:	pop    esi
  42a64d:	pop    ebx
  42a64e:	pop    ecx
  42a64f:	pop    ebp
  42a650:	ret    
  42a651:	lea    eax,[eax+0x0]
  42a654:	push   ecx
  42a655:	mov    BYTE PTR [esp],dl
  42a658:	mov    edx,esp
  42a65a:	mov    ecx,0x1
  42a65f:	call   0x42a4f4
  42a664:	pop    edx
  42a665:	ret    
  42a666:	mov    eax,eax
  42a668:	push   0x42f864
  42a66d:	call   0x405b40
  42a672:	push   0x42a698
  42a677:	push   0x0
  42a679:	push   0xffffffff
  42a67b:	push   0x0
  42a67d:	call   0x405a90
  42a682:	mov    ds:0x42f84c,eax
  42a687:	cmp    DWORD PTR ds:0x42f84c,0x0
  42a68e:	jne    0x42a695
  42a690:	call   0x4237a0
  42a695:	ret    
  42a696:	add    BYTE PTR [eax],al
  42a698:	add    BYTE PTR [eax],al
  42a69a:	add    BYTE PTR [eax],al
  42a69c:	push   0x42f864
  42a6a1:	call   0x405aa0
  42a6a6:	mov    eax,ds:0x42f84c
  42a6ab:	push   eax
  42a6ac:	call   0x405a80
  42a6b1:	ret    
  42a6b2:	mov    eax,eax
  42a6b4:	push   ebp
  42a6b5:	mov    ebp,esp
  42a6b7:	push   ebx
  42a6b8:	push   esi
  42a6b9:	push   edi
  42a6ba:	mov    eax,ds:0x42f854
  42a6bf:	call   0x4282f4
  42a6c4:	mov    edi,eax
  42a6c6:	xor    eax,eax
  42a6c8:	push   ebp
  42a6c9:	push   0x42a709
  42a6ce:	push   DWORD PTR fs:[eax]
  42a6d1:	mov    DWORD PTR fs:[eax],esp
  42a6d4:	mov    ebx,DWORD PTR [edi+0x8]
  42a6d7:	dec    ebx
  42a6d8:	test   ebx,ebx
  42a6da:	jl     0x42a6f1
  42a6dc:	inc    ebx
  42a6dd:	xor    esi,esi
  42a6df:	mov    edx,esi
  42a6e1:	mov    eax,edi
  42a6e3:	call   0x428110
  42a6e8:	call   0x4031c4
  42a6ed:	inc    esi
  42a6ee:	dec    ebx
  42a6ef:	jne    0x42a6df
  42a6f1:	xor    eax,eax
  42a6f3:	pop    edx
  42a6f4:	pop    ecx
  42a6f5:	pop    ecx
  42a6f6:	mov    DWORD PTR fs:[eax],edx
  42a6f9:	push   0x42a710
  42a6fe:	mov    eax,ds:0x42f854
  42a703:	call   0x428308
  42a708:	ret    
  42a709:	jmp    0x4036ac
  42a70e:	jmp    0x42a6fe
  42a710:	mov    eax,ds:0x42f854
  42a715:	call   0x4031c4
  42a71a:	pop    edi
  42a71b:	pop    esi
  42a71c:	pop    ebx
  42a71d:	pop    ebp
  42a71e:	ret    
  42a71f:	nop
  42a720:	call   0x427f64
  42a725:	ret    
  42a726:	mov    eax,eax
  42a728:	push   ebp
  42a729:	mov    ebp,esp
  42a72b:	xor    eax,eax
  42a72d:	push   ebp
  42a72e:	push   0x42a7cc
  42a733:	push   DWORD PTR fs:[eax]
  42a736:	mov    DWORD PTR fs:[eax],esp
  42a739:	inc    DWORD PTR ds:0x42f850
  42a73f:	jne    0x42a7be
  42a741:	mov    eax,ds:0x42f660
  42a746:	call   0x427f64
  42a74b:	mov    eax,ds:0x42f848
  42a750:	mov    edx,DWORD PTR [eax]
  42a752:	call   DWORD PTR [edx+0x14]
  42a755:	call   0x42a6b4
  42a75a:	xor    edx,edx
  42a75c:	xor    eax,eax
  42a75e:	call   0x429da8
  42a763:	mov    eax,0x42f860
  42a768:	call   0x423d4c
  42a76d:	call   0x405980
  42a772:	lea    eax,[eax+0x8]
  42a778:	call   0x423d4c
  42a77d:	mov    eax,0x42f858
  42a782:	call   0x423d4c
  42a787:	mov    eax,0x42f848
  42a78c:	call   0x405274
  42a791:	mov    eax,0x42a720
  42a796:	call   0x4050d4
  42a79b:	mov    eax,0x42e390
  42a7a0:	call   0x423d4c
  42a7a5:	call   0x42a69c
  42a7aa:	mov    eax,0x42f85c
  42a7af:	call   0x423d4c
  42a7b4:	mov    eax,0x42f848
  42a7b9:	call   0x405274
  42a7be:	xor    eax,eax
  42a7c0:	pop    edx
  42a7c1:	pop    ecx
  42a7c2:	pop    ecx
  42a7c3:	mov    DWORD PTR fs:[eax],edx
  42a7c6:	push   0x42a7d3
  42a7cb:	ret    
  42a7cc:	jmp    0x4036ac
  42a7d1:	jmp    0x42a7cb
  42a7d3:	pop    ebp
  42a7d4:	ret    
  42a7d5:	lea    eax,[eax+0x0]
  42a7d8:	push   ebp
  42a7d9:	mov    ebp,esp
  42a7db:	xor    eax,eax
  42a7dd:	push   ebp
  42a7de:	push   0x42a861
  42a7e3:	push   DWORD PTR fs:[eax]
  42a7e6:	mov    DWORD PTR fs:[eax],esp
  42a7e9:	sub    DWORD PTR ds:0x42f850,0x1
  42a7f0:	jae    0x42a853
  42a7f2:	call   0x42a668
  42a7f7:	mov    eax,0x42a720
  42a7fc:	call   0x4050cc
  42a801:	mov    dl,0x1
  42a803:	mov    eax,ds:0x41edb0
  42a808:	call   0x423a78
  42a80d:	mov    edx,eax
  42a80f:	test   edx,edx
  42a811:	je     0x42a816
  42a813:	sub    edx,0xffffffd4
  42a816:	mov    eax,0x42f848
  42a81b:	call   0x40528c
  42a820:	mov    dl,0x1
  42a822:	mov    eax,ds:0x427c54
  42a827:	call   0x427e2c
  42a82c:	mov    ds:0x42f858,eax
  42a831:	mov    dl,0x1
  42a833:	mov    eax,ds:0x42772c
  42a838:	call   0x428224
  42a83d:	mov    ds:0x42f854,eax
  42a842:	mov    dl,0x1
  42a844:	mov    eax,ds:0x42772c
  42a849:	call   0x428224
  42a84e:	mov    ds:0x42f860,eax
  42a853:	xor    eax,eax
  42a855:	pop    edx
  42a856:	pop    ecx
  42a857:	pop    ecx
  42a858:	mov    DWORD PTR fs:[eax],edx
  42a85b:	push   0x42a868
  42a860:	ret    
  42a861:	jmp    0x4036ac
  42a866:	jmp    0x42a860
  42a868:	pop    ebp
  42a869:	ret    
  42a86a:	mov    eax,eax
  42a86c:	push   ebp
  42a86d:	mov    ebp,esp
  42a86f:	add    esp,0xffffffc4
  42a872:	push   ebx
  42a873:	xor    ebx,ebx
  42a875:	mov    DWORD PTR [ebp-0x28],ebx
  42a878:	mov    DWORD PTR [ebp-0x2c],ebx
  42a87b:	mov    DWORD PTR [ebp-0x30],ebx
  42a87e:	mov    DWORD PTR [ebp-0x34],ebx
  42a881:	mov    DWORD PTR [ebp-0xc],ecx
  42a884:	mov    DWORD PTR [ebp-0x8],edx
  42a887:	mov    DWORD PTR [ebp-0x4],eax
  42a88a:	mov    eax,DWORD PTR [ebp-0x4]
  42a88d:	call   0x404138
  42a892:	mov    eax,DWORD PTR [ebp-0x8]
  42a895:	call   0x404138
  42a89a:	xor    eax,eax
  42a89c:	push   ebp
  42a89d:	push   0x42b539
  42a8a2:	push   DWORD PTR fs:[eax]
  42a8a5:	mov    DWORD PTR fs:[eax],esp
  42a8a8:	lea    eax,[ebp-0x34]
  42a8ab:	mov    edx,0x42b550
  42a8b0:	call   0x403d44
  42a8b5:	mov    eax,DWORD PTR [ebp-0x24]
  42a8b8:	sub    eax,DWORD PTR [ebp-0x24]
  42a8bb:	sub    eax,DWORD PTR [ebp-0x24]
  42a8be:	sub    eax,DWORD PTR [ebp-0x1c]
  42a8c1:	mov    DWORD PTR [ebp-0x20],eax
  42a8c4:	lea    eax,[ebp-0x30]
  42a8c7:	mov    edx,0x42b560
  42a8cc:	call   0x403d44
  42a8d1:	lea    eax,[ebp-0x34]
  42a8d4:	mov    edx,0x42b56c
  42a8d9:	call   0x403d44
  42a8de:	mov    eax,DWORD PTR [ebp-0x1c]
  42a8e1:	sub    eax,DWORD PTR [ebp-0x1c]
  42a8e4:	sub    eax,DWORD PTR [ebp-0x1c]
  42a8e7:	sub    eax,DWORD PTR [ebp-0x20]
  42a8ea:	mov    DWORD PTR [ebp-0x20],eax
  42a8ed:	lea    eax,[ebp-0x2c]
  42a8f0:	mov    edx,0x42b550
  42a8f5:	call   0x403d44
  42a8fa:	lea    eax,[ebp-0x2c]
  42a8fd:	mov    edx,0x42b57c
  42a902:	call   0x403d44
  42a907:	lea    eax,[ebp-0x2c]
  42a90a:	mov    edx,0x42b588
  42a90f:	call   0x403d44
  42a914:	lea    eax,[ebp-0x2c]
  42a917:	mov    edx,0x42b594
  42a91c:	call   0x403d44
  42a921:	lea    eax,[ebp-0x30]
  42a924:	mov    edx,0x42b5a0
  42a929:	call   0x403d44
  42a92e:	mov    DWORD PTR [ebp-0x20],0xcbd98
  42a935:	lea    eax,[ebp-0x28]
  42a938:	mov    edx,0x42b5ac
  42a93d:	call   0x403d44
  42a942:	lea    eax,[ebp-0x2c]
  42a945:	mov    edx,0x42b550
  42a94a:	call   0x403d44
  42a94f:	lea    eax,[ebp-0x34]
  42a952:	mov    edx,0x42b5b8
  42a957:	call   0x403d44
  42a95c:	lea    eax,[ebp-0x30]
  42a95f:	mov    edx,0x42b5c8
  42a964:	call   0x403d44
  42a969:	lea    eax,[ebp-0x30]
  42a96c:	mov    edx,0x42b550
  42a971:	call   0x403d44
  42a976:	lea    eax,[ebp-0x28]
  42a979:	mov    edx,0x42b5d8
  42a97e:	call   0x403d44
  42a983:	lea    eax,[ebp-0x34]
  42a986:	mov    edx,0x42b56c
  42a98b:	call   0x403d44
  42a990:	lea    eax,[ebp-0x2c]
  42a993:	mov    edx,0x42b5e4
  42a998:	call   0x403d44
  42a99d:	mov    DWORD PTR [ebp-0x14],0x1
  42a9a4:	lea    eax,[ebp-0x2c]
  42a9a7:	mov    edx,0x42b56c
  42a9ac:	call   0x403d44
  42a9b1:	lea    eax,[ebp-0x28]
  42a9b4:	mov    edx,0x42b5f0
  42a9b9:	call   0x403d44
  42a9be:	lea    eax,[ebp-0x2c]
  42a9c1:	mov    edx,0x42b5fc
  42a9c6:	call   0x403d44
  42a9cb:	mov    eax,DWORD PTR [ebp-0x4]
  42a9ce:	call   0x403f48
  42a9d3:	test   eax,eax
  42a9d5:	jle    0x42b025
  42a9db:	mov    DWORD PTR [ebp-0x38],eax
  42a9de:	mov    DWORD PTR [ebp-0x10],0x1
  42a9e5:	lea    eax,[ebp-0x34]
  42a9e8:	mov    edx,0x42b608
  42a9ed:	call   0x403d44
  42a9f2:	mov    eax,DWORD PTR [ebp-0x20]
  42a9f5:	sub    eax,DWORD PTR [ebp-0x1c]
  42a9f8:	add    eax,DWORD PTR [ebp-0x20]
  42a9fb:	mov    DWORD PTR [ebp-0x24],eax
  42a9fe:	mov    eax,DWORD PTR [ebp-0x1c]
  42aa01:	sub    eax,DWORD PTR [ebp-0x1c]
  42aa04:	add    eax,DWORD PTR [ebp-0x24]
  42aa07:	mov    DWORD PTR [ebp-0x1c],eax
  42aa0a:	lea    eax,[ebp-0x30]
  42aa0d:	mov    edx,0x42b550
  42aa12:	call   0x403d44
  42aa17:	lea    eax,[ebp-0x30]
  42aa1a:	mov    edx,0x42b614
  42aa1f:	call   0x403d44
  42aa24:	lea    eax,[ebp-0x2c]
  42aa27:	mov    edx,0x42b620
  42aa2c:	call   0x403d44
  42aa31:	mov    eax,DWORD PTR [ebp-0x24]
  42aa34:	sub    eax,DWORD PTR [ebp-0x1c]
  42aa37:	add    eax,DWORD PTR [ebp-0x20]
  42aa3a:	sub    eax,DWORD PTR [ebp-0x1c]
  42aa3d:	mov    DWORD PTR [ebp-0x1c],eax
  42aa40:	mov    eax,DWORD PTR [ebp-0x1c]
  42aa43:	sub    eax,DWORD PTR [ebp-0x1c]
  42aa46:	add    eax,DWORD PTR [ebp-0x20]
  42aa49:	mov    DWORD PTR [ebp-0x1c],eax
  42aa4c:	mov    DWORD PTR [ebp-0x24],0x109d5
  42aa53:	mov    DWORD PTR [ebp-0x24],0x59977
  42aa5a:	lea    eax,[ebp-0x34]
  42aa5d:	mov    edx,0x42b620
  42aa62:	call   0x403d44
  42aa67:	mov    eax,DWORD PTR [ebp-0x4]
  42aa6a:	mov    edx,DWORD PTR [ebp-0x10]
  42aa6d:	mov    al,BYTE PTR [eax+edx*1-0x1]
  42aa71:	and    al,0xf
  42aa73:	mov    BYTE PTR [ebp-0x16],al
  42aa76:	lea    eax,[ebp-0x28]
  42aa79:	mov    edx,0x42b550
  42aa7e:	call   0x403d44
  42aa83:	lea    eax,[ebp-0x34]
  42aa86:	mov    edx,0x42b550
  42aa8b:	call   0x403d44
  42aa90:	lea    eax,[ebp-0x34]
  42aa93:	mov    edx,0x42b630
  42aa98:	call   0x403d44
  42aa9d:	lea    eax,[ebp-0x28]
  42aaa0:	mov    edx,0x42b620
  42aaa5:	call   0x403d44
  42aaaa:	mov    eax,DWORD PTR [ebp-0x20]
  42aaad:	sub    eax,DWORD PTR [ebp-0x1c]
  42aab0:	mov    DWORD PTR [ebp-0x1c],eax
  42aab3:	lea    eax,[ebp-0x34]
  42aab6:	mov    edx,0x42b63c
  42aabb:	call   0x403d44
  42aac0:	mov    eax,DWORD PTR [ebp-0x20]
  42aac3:	add    eax,DWORD PTR [ebp-0x1c]
  42aac6:	mov    DWORD PTR [ebp-0x24],eax
  42aac9:	mov    eax,DWORD PTR [ebp-0x20]
  42aacc:	add    DWORD PTR [ebp-0x24],eax
  42aacf:	mov    eax,DWORD PTR [ebp-0x24]
  42aad2:	add    eax,DWORD PTR [ebp-0x24]
  42aad5:	add    eax,DWORD PTR [ebp-0x24]
  42aad8:	sub    eax,DWORD PTR [ebp-0x20]
  42aadb:	mov    DWORD PTR [ebp-0x20],eax
  42aade:	lea    eax,[ebp-0x2c]
  42aae1:	mov    edx,0x42b64c
  42aae6:	call   0x403d44
  42aaeb:	mov    eax,DWORD PTR [ebp-0x24]
  42aaee:	sub    eax,DWORD PTR [ebp-0x20]
  42aaf1:	sub    eax,DWORD PTR [ebp-0x20]
  42aaf4:	sub    eax,DWORD PTR [ebp-0x24]
  42aaf7:	mov    DWORD PTR [ebp-0x24],eax
  42aafa:	lea    eax,[ebp-0x2c]
  42aafd:	mov    edx,0x42b620
  42ab02:	call   0x403d44
  42ab07:	lea    eax,[ebp-0x34]
  42ab0a:	mov    edx,0x42b620
  42ab0f:	call   0x403d44
  42ab14:	lea    eax,[ebp-0x30]
  42ab17:	mov    edx,0x42b658
  42ab1c:	call   0x403d44
  42ab21:	lea    eax,[ebp-0x30]
  42ab24:	mov    edx,0x42b620
  42ab29:	call   0x403d44
  42ab2e:	lea    eax,[ebp-0x30]
  42ab31:	mov    edx,0x42b664
  42ab36:	call   0x403d44
  42ab3b:	lea    eax,[ebp-0x30]
  42ab3e:	mov    edx,0x42b674
  42ab43:	call   0x403d44
  42ab48:	lea    eax,[ebp-0x28]
  42ab4b:	mov    edx,0x42b680
  42ab50:	call   0x403d44
  42ab55:	mov    eax,DWORD PTR [ebp-0x1c]
  42ab58:	add    eax,DWORD PTR [ebp-0x1c]
  42ab5b:	sub    eax,DWORD PTR [ebp-0x1c]
  42ab5e:	sub    eax,DWORD PTR [ebp-0x24]
  42ab61:	mov    DWORD PTR [ebp-0x1c],eax
  42ab64:	mov    DWORD PTR [ebp-0x20],0xb63aa
  42ab6b:	mov    eax,DWORD PTR [ebp-0x24]
  42ab6e:	add    eax,DWORD PTR [ebp-0x20]
  42ab71:	sub    eax,DWORD PTR [ebp-0x1c]
  42ab74:	sub    eax,DWORD PTR [ebp-0x24]
  42ab77:	mov    DWORD PTR [ebp-0x1c],eax
  42ab7a:	lea    eax,[ebp-0x30]
  42ab7d:	mov    edx,0x42b68c
  42ab82:	call   0x403d44
  42ab87:	mov    eax,DWORD PTR [ebp-0x8]
  42ab8a:	mov    edx,DWORD PTR [ebp-0x14]
  42ab8d:	mov    al,BYTE PTR [eax+edx*1-0x1]
  42ab91:	and    al,0xf
  42ab93:	mov    BYTE PTR [ebp-0x17],al
  42ab96:	lea    eax,[ebp-0x34]
  42ab99:	mov    edx,0x42b550
  42ab9e:	call   0x403d44
  42aba3:	lea    eax,[ebp-0x34]
  42aba6:	mov    edx,0x42b620
  42abab:	call   0x403d44
  42abb0:	mov    eax,DWORD PTR [ebp-0x20]
  42abb3:	add    eax,DWORD PTR [ebp-0x1c]
  42abb6:	mov    DWORD PTR [ebp-0x24],eax
  42abb9:	lea    eax,[ebp-0x28]
  42abbc:	mov    edx,0x42b620
  42abc1:	call   0x403d44
  42abc6:	lea    eax,[ebp-0x2c]
  42abc9:	mov    edx,0x42b620
  42abce:	call   0x403d44
  42abd3:	lea    eax,[ebp-0x34]
  42abd6:	mov    edx,0x42b620
  42abdb:	call   0x403d44
  42abe0:	lea    eax,[ebp-0x34]
  42abe3:	mov    edx,0x42b69c
  42abe8:	call   0x403d44
  42abed:	mov    DWORD PTR [ebp-0x1c],0xb58b7
  42abf4:	mov    eax,DWORD PTR [ebp-0x20]
  42abf7:	add    eax,DWORD PTR [ebp-0x24]
  42abfa:	mov    DWORD PTR [ebp-0x1c],eax
  42abfd:	lea    eax,[ebp-0x30]
  42ac00:	mov    edx,0x42b6a8
  42ac05:	call   0x403d44
  42ac0a:	mov    DWORD PTR [ebp-0x24],0x2c389
  42ac11:	lea    eax,[ebp-0x28]
  42ac14:	mov    edx,0x42b620
  42ac19:	call   0x403d44
  42ac1e:	lea    eax,[ebp-0x30]
  42ac21:	mov    edx,0x42b620
  42ac26:	call   0x403d44
  42ac2b:	mov    eax,DWORD PTR [ebp-0x24]
  42ac2e:	add    DWORD PTR [ebp-0x20],eax
  42ac31:	lea    eax,[ebp-0x28]
  42ac34:	mov    edx,0x42b6b8
  42ac39:	call   0x403d44
  42ac3e:	lea    eax,[ebp-0x34]
  42ac41:	mov    edx,0x42b6c4
  42ac46:	call   0x403d44
  42ac4b:	mov    DWORD PTR [ebp-0x1c],0x50b3f
  42ac52:	lea    eax,[ebp-0x30]
  42ac55:	mov    edx,0x42b56c
  42ac5a:	call   0x403d44
  42ac5f:	lea    eax,[ebp-0x2c]
  42ac62:	mov    edx,0x42b6d0
  42ac67:	call   0x403d44
  42ac6c:	mov    al,BYTE PTR [ebp-0x16]
  42ac6f:	xor    al,BYTE PTR [ebp-0x17]
  42ac72:	mov    BYTE PTR [ebp-0x15],al
  42ac75:	mov    eax,DWORD PTR [ebp-0x24]
  42ac78:	add    DWORD PTR [ebp-0x1c],eax
  42ac7b:	mov    eax,DWORD PTR [ebp-0x1c]
  42ac7e:	sub    eax,DWORD PTR [ebp-0x1c]
  42ac81:	sub    eax,DWORD PTR [ebp-0x1c]
  42ac84:	add    eax,DWORD PTR [ebp-0x24]
  42ac87:	mov    DWORD PTR [ebp-0x1c],eax
  42ac8a:	lea    eax,[ebp-0x34]
  42ac8d:	mov    edx,0x42b6e0
  42ac92:	call   0x403d44
  42ac97:	lea    eax,[ebp-0x2c]
  42ac9a:	mov    edx,0x42b56c
  42ac9f:	call   0x403d44
  42aca4:	mov    DWORD PTR [ebp-0x20],0x1181
  42acab:	lea    eax,[ebp-0x28]
  42acae:	mov    edx,0x42b6f0
  42acb3:	call   0x403d44
  42acb8:	mov    eax,DWORD PTR [ebp-0x1c]
  42acbb:	sub    eax,DWORD PTR [ebp-0x20]
  42acbe:	sub    eax,DWORD PTR [ebp-0x1c]
  42acc1:	mov    DWORD PTR [ebp-0x20],eax
  42acc4:	lea    eax,[ebp-0x30]
  42acc7:	mov    edx,0x42b550
  42accc:	call   0x403d44
  42acd1:	mov    eax,DWORD PTR [ebp-0x1c]
  42acd4:	add    eax,DWORD PTR [ebp-0x24]
  42acd7:	sub    eax,DWORD PTR [ebp-0x24]
  42acda:	mov    DWORD PTR [ebp-0x1c],eax
  42acdd:	lea    eax,[ebp-0x34]
  42ace0:	mov    edx,0x42b56c
  42ace5:	call   0x403d44
  42acea:	mov    DWORD PTR [ebp-0x24],0x4ef75
  42acf1:	lea    eax,[ebp-0x28]
  42acf4:	mov    edx,0x42b56c
  42acf9:	call   0x403d44
  42acfe:	lea    eax,[ebp-0x30]
  42ad01:	mov    edx,0x42b6fc
  42ad06:	call   0x403d44
  42ad0b:	mov    eax,DWORD PTR [ebp-0x1c]
  42ad0e:	add    DWORD PTR [ebp-0x20],eax
  42ad11:	mov    DWORD PTR [ebp-0x24],0x2939b
  42ad18:	lea    eax,[ebp-0x28]
  42ad1b:	mov    edx,0x42b620
  42ad20:	call   0x403d44
  42ad25:	lea    eax,[ebp-0x30]
  42ad28:	mov    edx,0x42b6b8
  42ad2d:	call   0x403d44
  42ad32:	lea    eax,[ebp-0x28]
  42ad35:	mov    edx,0x42b708
  42ad3a:	call   0x403d44
  42ad3f:	lea    eax,[ebp-0x2c]
  42ad42:	mov    edx,0x42b714
  42ad47:	call   0x403d44
  42ad4c:	mov    eax,DWORD PTR [ebp-0x4]
  42ad4f:	mov    edx,DWORD PTR [ebp-0x10]
  42ad52:	mov    al,BYTE PTR [eax+edx*1-0x1]
  42ad56:	and    al,0xf0
  42ad58:	mov    BYTE PTR [ebp-0x18],al
  42ad5b:	lea    eax,[ebp-0x30]
  42ad5e:	mov    edx,0x42b56c
  42ad63:	call   0x403d44
  42ad68:	lea    eax,[ebp-0x2c]
  42ad6b:	mov    edx,0x42b620
  42ad70:	call   0x403d44
  42ad75:	lea    eax,[ebp-0x34]
  42ad78:	mov    edx,0x42b720
  42ad7d:	call   0x403d44
  42ad82:	lea    eax,[ebp-0x2c]
  42ad85:	mov    edx,0x42b72c
  42ad8a:	call   0x403d44
  42ad8f:	lea    eax,[ebp-0x28]
  42ad92:	mov    edx,0x42b738
  42ad97:	call   0x403d44
  42ad9c:	lea    eax,[ebp-0x2c]
  42ad9f:	mov    edx,0x42b56c
  42ada4:	call   0x403d44
  42ada9:	mov    eax,DWORD PTR [ebp-0x24]
  42adac:	add    DWORD PTR [ebp-0x24],eax
  42adaf:	mov    eax,DWORD PTR [ebp-0x24]
  42adb2:	sub    eax,DWORD PTR [ebp-0x1c]
  42adb5:	mov    DWORD PTR [ebp-0x1c],eax
  42adb8:	mov    DWORD PTR [ebp-0x1c],0x3d43
  42adbf:	mov    eax,DWORD PTR [ebp-0x24]
  42adc2:	sub    eax,DWORD PTR [ebp-0x1c]
  42adc5:	sub    eax,DWORD PTR [ebp-0x20]
  42adc8:	sub    eax,DWORD PTR [ebp-0x20]
  42adcb:	mov    DWORD PTR [ebp-0x1c],eax
  42adce:	lea    eax,[ebp-0x28]
  42add1:	mov    edx,0x42b744
  42add6:	call   0x403d44
  42addb:	mov    eax,DWORD PTR [ebp-0x20]
  42adde:	sub    eax,DWORD PTR [ebp-0x20]
  42ade1:	add    eax,DWORD PTR [ebp-0x24]
  42ade4:	add    eax,DWORD PTR [ebp-0x24]
  42ade7:	mov    DWORD PTR [ebp-0x20],eax
  42adea:	mov    eax,DWORD PTR [ebp-0x24]
  42aded:	add    eax,DWORD PTR [ebp-0x1c]
  42adf0:	add    eax,DWORD PTR [ebp-0x24]
  42adf3:	mov    DWORD PTR [ebp-0x20],eax
  42adf6:	mov    DWORD PTR [ebp-0x20],0x8d69d
  42adfd:	lea    eax,[ebp-0x30]
  42ae00:	mov    edx,0x42b750
  42ae05:	call   0x403d44
  42ae0a:	lea    eax,[ebp-0x4]
  42ae0d:	call   0x404198
  42ae12:	mov    edx,DWORD PTR [ebp-0x10]
  42ae15:	mov    cl,BYTE PTR [ebp-0x18]
  42ae18:	mov    bl,BYTE PTR [ebp-0x15]
  42ae1b:	add    cl,bl
  42ae1d:	mov    BYTE PTR [eax+edx*1-0x1],cl
  42ae21:	lea    eax,[ebp-0x34]
  42ae24:	mov    edx,0x42b75c
  42ae29:	call   0x403d44
  42ae2e:	lea    eax,[ebp-0x28]
  42ae31:	mov    edx,0x42b768
  42ae36:	call   0x403d44
  42ae3b:	lea    eax,[ebp-0x2c]
  42ae3e:	mov    edx,0x42b778
  42ae43:	call   0x403d44
  42ae48:	lea    eax,[ebp-0x34]
  42ae4b:	mov    edx,0x42b788
  42ae50:	call   0x403d44
  42ae55:	lea    eax,[ebp-0x30]
  42ae58:	mov    edx,0x42b794
  42ae5d:	call   0x403d44
  42ae62:	lea    eax,[ebp-0x30]
  42ae65:	mov    edx,0x42b7a0
  42ae6a:	call   0x403d44
  42ae6f:	lea    eax,[ebp-0x34]
  42ae72:	mov    edx,0x42b7b0
  42ae77:	call   0x403d44
  42ae7c:	lea    eax,[ebp-0x28]
  42ae7f:	mov    edx,0x42b620
  42ae84:	call   0x403d44
  42ae89:	lea    eax,[ebp-0x30]
  42ae8c:	mov    edx,0x42b7c0
  42ae91:	call   0x403d44
  42ae96:	inc    DWORD PTR [ebp-0x14]
  42ae99:	lea    eax,[ebp-0x30]
  42ae9c:	mov    edx,0x42b7cc
  42aea1:	call   0x403d44
  42aea6:	mov    DWORD PTR [ebp-0x24],0x92179
  42aead:	mov    DWORD PTR [ebp-0x1c],0x2b81
  42aeb4:	lea    eax,[ebp-0x28]
  42aeb7:	mov    edx,0x42b7d8
  42aebc:	call   0x403d44
  42aec1:	mov    eax,DWORD PTR [ebp-0x20]
  42aec4:	sub    eax,DWORD PTR [ebp-0x24]
  42aec7:	add    eax,DWORD PTR [ebp-0x1c]
  42aeca:	add    DWORD PTR [ebp-0x1c],eax
  42aecd:	mov    eax,DWORD PTR [ebp-0x20]
  42aed0:	add    eax,DWORD PTR [ebp-0x20]
  42aed3:	add    eax,DWORD PTR [ebp-0x20]
  42aed6:	mov    DWORD PTR [ebp-0x24],eax
  42aed9:	lea    eax,[ebp-0x28]
  42aedc:	mov    edx,0x42b7e8
  42aee1:	call   0x403d44
  42aee6:	lea    eax,[ebp-0x28]
  42aee9:	mov    edx,0x42b56c
  42aeee:	call   0x403d44
  42aef3:	lea    eax,[ebp-0x34]
  42aef6:	mov    edx,0x42b620
  42aefb:	call   0x403d44
  42af00:	lea    eax,[ebp-0x30]
  42af03:	mov    edx,0x42b7f8
  42af08:	call   0x403d44
  42af0d:	lea    eax,[ebp-0x28]
  42af10:	mov    edx,0x42b804
  42af15:	call   0x403d44
  42af1a:	lea    eax,[ebp-0x34]
  42af1d:	mov    edx,0x42b56c
  42af22:	call   0x403d44
  42af27:	lea    eax,[ebp-0x34]
  42af2a:	mov    edx,0x42b810
  42af2f:	call   0x403d44
  42af34:	lea    eax,[ebp-0x34]
  42af37:	mov    edx,0x42b820
  42af3c:	call   0x403d44
  42af41:	lea    eax,[ebp-0x2c]
  42af44:	mov    edx,0x42b56c
  42af49:	call   0x403d44
  42af4e:	mov    eax,DWORD PTR [ebp-0x8]
  42af51:	call   0x403f48
  42af56:	cmp    eax,DWORD PTR [ebp-0x14]
  42af59:	jge    0x42af62
  42af5b:	mov    DWORD PTR [ebp-0x14],0x1
  42af62:	lea    eax,[ebp-0x28]
  42af65:	mov    edx,0x42b82c
  42af6a:	call   0x403d44
  42af6f:	lea    eax,[ebp-0x28]
  42af72:	mov    edx,0x42b838
  42af77:	call   0x403d44
  42af7c:	lea    eax,[ebp-0x2c]
  42af7f:	mov    edx,0x42b594
  42af84:	call   0x403d44
  42af89:	lea    eax,[ebp-0x28]
  42af8c:	mov    edx,0x42b844
  42af91:	call   0x403d44
  42af96:	lea    eax,[ebp-0x34]
  42af99:	mov    edx,0x42b850
  42af9e:	call   0x403d44
  42afa3:	mov    DWORD PTR [ebp-0x20],0xe81fa
  42afaa:	lea    eax,[ebp-0x30]
  42afad:	mov    edx,0x42b85c
  42afb2:	call   0x403d44
  42afb7:	mov    DWORD PTR [ebp-0x1c],0xae85f
  42afbe:	lea    eax,[ebp-0x34]
  42afc1:	mov    edx,0x42b56c
  42afc6:	call   0x403d44
  42afcb:	lea    eax,[ebp-0x2c]
  42afce:	mov    edx,0x42b868
  42afd3:	call   0x403d44
  42afd8:	lea    eax,[ebp-0x30]
  42afdb:	mov    edx,0x42b56c
  42afe0:	call   0x403d44
  42afe5:	lea    eax,[ebp-0x28]
  42afe8:	mov    edx,0x42b874
  42afed:	call   0x403d44
  42aff2:	mov    DWORD PTR [ebp-0x1c],0xe4acf
  42aff9:	lea    eax,[ebp-0x34]
  42affc:	mov    edx,0x42b880
  42b001:	call   0x403d44
  42b006:	mov    eax,DWORD PTR [ebp-0x20]
  42b009:	sub    eax,DWORD PTR [ebp-0x1c]
  42b00c:	sub    eax,DWORD PTR [ebp-0x1c]
  42b00f:	add    DWORD PTR [ebp-0x20],eax
  42b012:	mov    DWORD PTR [ebp-0x1c],0x62b7a
  42b019:	inc    DWORD PTR [ebp-0x10]
  42b01c:	dec    DWORD PTR [ebp-0x38]
  42b01f:	jne    0x42a9e5
  42b025:	lea    eax,[ebp-0x30]
  42b028:	mov    edx,0x42b550
  42b02d:	call   0x403d44
  42b032:	lea    eax,[ebp-0x34]
  42b035:	mov    edx,0x42b88c
  42b03a:	call   0x403d44
  42b03f:	lea    eax,[ebp-0x34]
  42b042:	mov    edx,0x42b898
  42b047:	call   0x403d44
  42b04c:	lea    eax,[ebp-0x2c]
  42b04f:	mov    edx,0x42b620
  42b054:	call   0x403d44
  42b059:	lea    eax,[ebp-0x30]
  42b05c:	mov    edx,0x42b56c
  42b061:	call   0x403d44
  42b066:	mov    eax,DWORD PTR [ebp-0xc]
  42b069:	mov    edx,DWORD PTR [ebp-0x4]
  42b06c:	call   0x403d00
  42b071:	mov    eax,DWORD PTR [ebp-0x1c]
  42b074:	sub    eax,DWORD PTR [ebp-0x1c]
  42b077:	sub    eax,DWORD PTR [ebp-0x24]
  42b07a:	add    eax,DWORD PTR [ebp-0x24]
  42b07d:	mov    DWORD PTR [ebp-0x1c],eax
  42b080:	mov    DWORD PTR [ebp-0x24],0xb9c96
  42b087:	lea    eax,[ebp-0x30]
  42b08a:	mov    edx,0x42b8a4
  42b08f:	call   0x403d44
  42b094:	mov    DWORD PTR [ebp-0x20],0x65961
  42b09b:	lea    eax,[ebp-0x34]
  42b09e:	mov    edx,0x42b56c
  42b0a3:	call   0x403d44
  42b0a8:	lea    eax,[ebp-0x34]
  42b0ab:	mov    edx,0x42b8b0
  42b0b0:	call   0x403d44
  42b0b5:	mov    DWORD PTR [ebp-0x24],0x2adc6
  42b0bc:	lea    eax,[ebp-0x34]
  42b0bf:	mov    edx,0x42b8bc
  42b0c4:	call   0x403d44
  42b0c9:	lea    eax,[ebp-0x30]
  42b0cc:	mov    edx,0x42b550
  42b0d1:	call   0x403d44
  42b0d6:	lea    eax,[ebp-0x34]
  42b0d9:	mov    edx,0x42b8c8
  42b0de:	call   0x403d44
  42b0e3:	lea    eax,[ebp-0x34]
  42b0e6:	mov    edx,0x42b550
  42b0eb:	call   0x403d44
  42b0f0:	lea    eax,[ebp-0x30]
  42b0f3:	mov    edx,0x42b550
  42b0f8:	call   0x403d44
  42b0fd:	mov    DWORD PTR [ebp-0x24],0x7f2b3
  42b104:	mov    eax,DWORD PTR [ebp-0x24]
  42b107:	sub    DWORD PTR [ebp-0x20],eax
  42b10a:	lea    eax,[ebp-0x28]
  42b10d:	mov    edx,0x42b550
  42b112:	call   0x403d44
  42b117:	lea    eax,[ebp-0x34]
  42b11a:	mov    edx,0x42b620
  42b11f:	call   0x403d44
  42b124:	mov    eax,DWORD PTR [ebp-0x1c]
  42b127:	add    eax,DWORD PTR [ebp-0x20]
  42b12a:	mov    DWORD PTR [ebp-0x24],eax
  42b12d:	mov    eax,DWORD PTR [ebp-0x24]
  42b130:	sub    eax,DWORD PTR [ebp-0x24]
  42b133:	mov    DWORD PTR [ebp-0x1c],eax
  42b136:	lea    eax,[ebp-0x28]
  42b139:	mov    edx,0x42b620
  42b13e:	call   0x403d44
  42b143:	lea    eax,[ebp-0x30]
  42b146:	mov    edx,0x42b8d8
  42b14b:	call   0x403d44
  42b150:	lea    eax,[ebp-0x34]
  42b153:	mov    edx,0x42b8e4
  42b158:	call   0x403d44
  42b15d:	lea    eax,[ebp-0x34]
  42b160:	mov    edx,0x42b8f0
  42b165:	call   0x403d44
  42b16a:	mov    DWORD PTR [ebp-0x24],0xefb20
  42b171:	lea    eax,[ebp-0x28]
  42b174:	mov    edx,0x42b8fc
  42b179:	call   0x403d44
  42b17e:	lea    eax,[ebp-0x34]
  42b181:	mov    edx,0x42b550
  42b186:	call   0x403d44
  42b18b:	lea    eax,[ebp-0x34]
  42b18e:	mov    edx,0x42b550
  42b193:	call   0x403d44
  42b198:	lea    eax,[ebp-0x2c]
  42b19b:	mov    edx,0x42b620
  42b1a0:	call   0x403d44
  42b1a5:	lea    eax,[ebp-0x34]
  42b1a8:	mov    edx,0x42b908
  42b1ad:	call   0x403d44
  42b1b2:	lea    eax,[ebp-0x34]
  42b1b5:	mov    edx,0x42b56c
  42b1ba:	call   0x403d44
  42b1bf:	lea    eax,[ebp-0x34]
  42b1c2:	mov    edx,0x42b914
  42b1c7:	call   0x403d44
  42b1cc:	mov    DWORD PTR [ebp-0x1c],0x202e3
  42b1d3:	lea    eax,[ebp-0x2c]
  42b1d6:	mov    edx,0x42b550
  42b1db:	call   0x403d44
  42b1e0:	lea    eax,[ebp-0x28]
  42b1e3:	mov    edx,0x42b550
  42b1e8:	call   0x403d44
  42b1ed:	mov    DWORD PTR [ebp-0x24],0x4b23a
  42b1f4:	lea    eax,[ebp-0x30]
  42b1f7:	mov    edx,0x42b924
  42b1fc:	call   0x403d44
  42b201:	lea    eax,[ebp-0x2c]
  42b204:	mov    edx,0x42b550
  42b209:	call   0x403d44
  42b20e:	mov    DWORD PTR [ebp-0x24],0x5b889
  42b215:	lea    eax,[ebp-0x30]
  42b218:	mov    edx,0x42b934
  42b21d:	call   0x403d44
  42b222:	lea    eax,[ebp-0x28]
  42b225:	mov    edx,0x42b940
  42b22a:	call   0x403d44
  42b22f:	lea    eax,[ebp-0x34]
  42b232:	mov    edx,0x42b950
  42b237:	call   0x403d44
  42b23c:	lea    eax,[ebp-0x2c]
  42b23f:	mov    edx,0x42b960
  42b244:	call   0x403d44
  42b249:	lea    eax,[ebp-0x30]
  42b24c:	mov    edx,0x42b620
  42b251:	call   0x403d44
  42b256:	lea    eax,[ebp-0x34]
  42b259:	mov    edx,0x42b550
  42b25e:	call   0x403d44
  42b263:	lea    eax,[ebp-0x34]
  42b266:	mov    edx,0x42b550
  42b26b:	call   0x403d44
  42b270:	lea    eax,[ebp-0x28]
  42b273:	mov    edx,0x42b56c
  42b278:	call   0x403d44
  42b27d:	lea    eax,[ebp-0x30]
  42b280:	mov    edx,0x42b550
  42b285:	call   0x403d44
  42b28a:	lea    eax,[ebp-0x30]
  42b28d:	mov    edx,0x42b970
  42b292:	call   0x403d44
  42b297:	mov    DWORD PTR [ebp-0x24],0xa0273
  42b29e:	mov    DWORD PTR [ebp-0x24],0x6805d
  42b2a5:	lea    eax,[ebp-0x30]
  42b2a8:	mov    edx,0x42b8a4
  42b2ad:	call   0x403d44
  42b2b2:	lea    eax,[ebp-0x28]
  42b2b5:	mov    edx,0x42b97c
  42b2ba:	call   0x403d44
  42b2bf:	lea    eax,[ebp-0x28]
  42b2c2:	mov    edx,0x42b620
  42b2c7:	call   0x403d44
  42b2cc:	mov    DWORD PTR [ebp-0x1c],0x2d789
  42b2d3:	lea    eax,[ebp-0x28]
  42b2d6:	mov    edx,0x42b56c
  42b2db:	call   0x403d44
  42b2e0:	mov    DWORD PTR [ebp-0x1c],0x940b5
  42b2e7:	lea    eax,[ebp-0x28]
  42b2ea:	mov    edx,0x42b988
  42b2ef:	call   0x403d44
  42b2f4:	lea    eax,[ebp-0x2c]
  42b2f7:	mov    edx,0x42b8a4
  42b2fc:	call   0x403d44
  42b301:	lea    eax,[ebp-0x34]
  42b304:	mov    edx,0x42b620
  42b309:	call   0x403d44
  42b30e:	lea    eax,[ebp-0x30]
  42b311:	mov    edx,0x42b550
  42b316:	call   0x403d44
  42b31b:	lea    eax,[ebp-0x30]
  42b31e:	mov    edx,0x42b994
  42b323:	call   0x403d44
  42b328:	lea    eax,[ebp-0x28]
  42b32b:	mov    edx,0x42b620
  42b330:	call   0x403d44
  42b335:	mov    eax,DWORD PTR [ebp-0x1c]
  42b338:	add    eax,DWORD PTR [ebp-0x1c]
  42b33b:	mov    DWORD PTR [ebp-0x20],eax
  42b33e:	lea    eax,[ebp-0x34]
  42b341:	mov    edx,0x42b9a0
  42b346:	call   0x403d44
  42b34b:	lea    eax,[ebp-0x28]
  42b34e:	mov    edx,0x42b620
  42b353:	call   0x403d44
  42b358:	lea    eax,[ebp-0x2c]
  42b35b:	mov    edx,0x42b9ac
  42b360:	call   0x403d44
  42b365:	mov    eax,DWORD PTR [ebp-0x1c]
  42b368:	sub    eax,DWORD PTR [ebp-0x1c]
  42b36b:	add    DWORD PTR [ebp-0x24],eax
  42b36e:	mov    DWORD PTR [ebp-0x1c],0x1b17d
  42b375:	lea    eax,[ebp-0x34]
  42b378:	mov    edx,0x42b56c
  42b37d:	call   0x403d44
  42b382:	lea    eax,[ebp-0x34]
  42b385:	mov    edx,0x42b9b8
  42b38a:	call   0x403d44
  42b38f:	mov    DWORD PTR [ebp-0x1c],0x168f2
  42b396:	lea    eax,[ebp-0x30]
  42b399:	mov    edx,0x42b620
  42b39e:	call   0x403d44
  42b3a3:	lea    eax,[ebp-0x28]
  42b3a6:	mov    edx,0x42b620
  42b3ab:	call   0x403d44
  42b3b0:	lea    eax,[ebp-0x34]
  42b3b3:	mov    edx,0x42b9c4
  42b3b8:	call   0x403d44
  42b3bd:	lea    eax,[ebp-0x34]
  42b3c0:	mov    edx,0x42b620
  42b3c5:	call   0x403d44
  42b3ca:	mov    DWORD PTR [ebp-0x20],0x22a7e
  42b3d1:	lea    eax,[ebp-0x28]
  42b3d4:	mov    edx,0x42b9d0
  42b3d9:	call   0x403d44
  42b3de:	lea    eax,[ebp-0x30]
  42b3e1:	mov    edx,0x42b9dc
  42b3e6:	call   0x403d44
  42b3eb:	lea    eax,[ebp-0x34]
  42b3ee:	mov    edx,0x42b550
  42b3f3:	call   0x403d44
  42b3f8:	lea    eax,[ebp-0x28]
  42b3fb:	mov    edx,0x42b550
  42b400:	call   0x403d44
  42b405:	mov    eax,DWORD PTR [ebp-0x20]
  42b408:	add    eax,DWORD PTR [ebp-0x20]
  42b40b:	add    eax,DWORD PTR [ebp-0x20]
  42b40e:	mov    DWORD PTR [ebp-0x1c],eax
  42b411:	lea    eax,[ebp-0x2c]
  42b414:	mov    edx,0x42b9e8
  42b419:	call   0x403d44
  42b41e:	mov    DWORD PTR [ebp-0x20],0x718fb
  42b425:	lea    eax,[ebp-0x34]
  42b428:	mov    edx,0x42b56c
  42b42d:	call   0x403d44
  42b432:	lea    eax,[ebp-0x34]
  42b435:	mov    edx,0x42b620
  42b43a:	call   0x403d44
  42b43f:	mov    DWORD PTR [ebp-0x24],0x352ea
  42b446:	lea    eax,[ebp-0x28]
  42b449:	mov    edx,0x42b9f4
  42b44e:	call   0x403d44
  42b453:	lea    eax,[ebp-0x34]
  42b456:	mov    edx,0x42ba00
  42b45b:	call   0x403d44
  42b460:	mov    eax,DWORD PTR [ebp-0x20]
  42b463:	add    DWORD PTR [ebp-0x24],eax
  42b466:	lea    eax,[ebp-0x2c]
  42b469:	mov    edx,0x42b550
  42b46e:	call   0x403d44
  42b473:	mov    eax,DWORD PTR [ebp-0x1c]
  42b476:	sub    eax,DWORD PTR [ebp-0x24]
  42b479:	mov    DWORD PTR [ebp-0x24],eax
  42b47c:	lea    eax,[ebp-0x28]
  42b47f:	mov    edx,0x42b56c
  42b484:	call   0x403d44
  42b489:	lea    eax,[ebp-0x28]
  42b48c:	mov    edx,0x42b56c
  42b491:	call   0x403d44
  42b496:	lea    eax,[ebp-0x34]
  42b499:	mov    edx,0x42ba0c
  42b49e:	call   0x403d44
  42b4a3:	lea    eax,[ebp-0x2c]
  42b4a6:	mov    edx,0x42ba18
  42b4ab:	call   0x403d44
  42b4b0:	lea    eax,[ebp-0x34]
  42b4b3:	mov    edx,0x42ba24
  42b4b8:	call   0x403d44
  42b4bd:	mov    eax,DWORD PTR [ebp-0x20]
  42b4c0:	sub    eax,DWORD PTR [ebp-0x1c]
  42b4c3:	sub    eax,DWORD PTR [ebp-0x20]
  42b4c6:	add    DWORD PTR [ebp-0x20],eax
  42b4c9:	lea    eax,[ebp-0x28]
  42b4cc:	mov    edx,0x42ba30
  42b4d1:	call   0x403d44
  42b4d6:	lea    eax,[ebp-0x28]
  42b4d9:	mov    edx,0x42ba40
  42b4de:	call   0x403d44
  42b4e3:	lea    eax,[ebp-0x34]
  42b4e6:	mov    edx,0x42b620
  42b4eb:	call   0x403d44
  42b4f0:	lea    eax,[ebp-0x30]
  42b4f3:	mov    edx,0x42b56c
  42b4f8:	call   0x403d44
  42b4fd:	mov    DWORD PTR [ebp-0x20],0x98d52
  42b504:	lea    eax,[ebp-0x34]
  42b507:	mov    edx,0x42ba4c
  42b50c:	call   0x403d44
  42b511:	xor    eax,eax
  42b513:	pop    edx
  42b514:	pop    ecx
  42b515:	pop    ecx
  42b516:	mov    DWORD PTR fs:[eax],edx
  42b519:	push   0x42b540
  42b51e:	lea    eax,[ebp-0x34]
  42b521:	mov    edx,0x4
  42b526:	call   0x403cd0
  42b52b:	lea    eax,[ebp-0x8]
  42b52e:	mov    edx,0x2
  42b533:	call   0x403cd0
  42b538:	ret    
  42b539:	jmp    0x4036ac
  42b53e:	jmp    0x42b51e
  42b540:	pop    ebx
  42b541:	mov    esp,ebp
  42b543:	pop    ebp
  42b544:	ret    
  42b545:	add    BYTE PTR [eax],al
  42b547:	add    bh,bh
  42b549:	(bad)  
  42b54a:	(bad)  
  42b54b:	inc    DWORD PTR [eax+eax*1]
  42b54e:	add    BYTE PTR [eax],al
  42b550:	pop    eax
  42b551:	push   ecx
  42b552:	push   ecx
  42b553:	jo     0x42b555
  42b555:	add    BYTE PTR [eax],al
  42b557:	add    bh,bh
  42b559:	(bad)  
  42b55a:	(bad)  
  42b55b:	inc    DWORD PTR [ecx]
  42b55d:	add    BYTE PTR [eax],al
  42b55f:	add    BYTE PTR [edx+0x0],dh
  42b562:	add    BYTE PTR [eax],al
  42b564:	(bad)  
  42b565:	(bad)  
  42b566:	(bad)  
  42b567:	inc    DWORD PTR [eax+eax*1]
  42b56a:	add    BYTE PTR [eax],al
  42b56c:	jae    0x42b5bb
  42b56e:	ins    DWORD PTR es:[edi],dx
  42b56f:	inc    esi
  42b570:	add    BYTE PTR [eax],al
  42b572:	add    BYTE PTR [eax],al
  42b574:	(bad)  
  42b575:	(bad)  
  42b576:	(bad)  
  42b577:	inc    DWORD PTR [ebx]
  42b579:	add    BYTE PTR [eax],al
  42b57b:	add    BYTE PTR [esi+0x47],dh
  42b57e:	outs   dx,DWORD PTR ds:[esi]
  42b57f:	add    bh,bh
  42b581:	(bad)  
  42b582:	(bad)  
  42b583:	inc    DWORD PTR [edx]
  42b585:	add    BYTE PTR [eax],al
  42b587:	add    BYTE PTR [ebp+0x63],dh
  42b58a:	add    BYTE PTR [eax],al
  42b58c:	(bad)  
  42b58d:	(bad)  
  42b58e:	(bad)  
  42b58f:	inc    DWORD PTR [ecx]
  42b591:	add    BYTE PTR [eax],al
  42b593:	add    BYTE PTR [ecx+0x0],cl
  42b596:	add    BYTE PTR [eax],al
  42b598:	(bad)  
  42b599:	(bad)  
  42b59a:	(bad)  
  42b59b:	inc    DWORD PTR [ebx]
  42b59d:	add    BYTE PTR [eax],al
  42b59f:	add    BYTE PTR [esi+0x4d],al
  42b5a2:	ss add bh,bh
  42b5a5:	(bad)  
  42b5a6:	(bad)  
  42b5a7:	inc    DWORD PTR [ebx]
  42b5a9:	add    BYTE PTR [eax],al
  42b5ab:	add    BYTE PTR [ecx+0x57],dh
  42b5ae:	pop    edx
  42b5af:	add    bh,bh
  42b5b1:	(bad)  
  42b5b2:	(bad)  
  42b5b3:	inc    DWORD PTR [eax+eax*1]
  42b5b6:	add    BYTE PTR [eax],al
  42b5b8:	dec    ecx
  42b5b9:	addr16 xor eax,0x4d
  42b5bf:	add    bh,bh
  42b5c1:	(bad)  
  42b5c2:	(bad)  
  42b5c3:	inc    DWORD PTR [eax+eax*1]
  42b5c6:	add    BYTE PTR [eax],al
  42b5c8:	jns    0x42b600
  42b5ca:	inc    edi
  42b5cb:	jo     0x42b5cd
  42b5cd:	add    BYTE PTR [eax],al
  42b5cf:	add    bh,bh
  42b5d1:	(bad)  
  42b5d2:	(bad)  
  42b5d3:	inc    DWORD PTR [ebx]
  42b5d5:	add    BYTE PTR [eax],al
  42b5d7:	add    BYTE PTR [edx+0x57],dh
  42b5da:	cmp    BYTE PTR [eax],al
  42b5dc:	(bad)  
  42b5dd:	(bad)  
  42b5de:	(bad)  
  42b5df:	inc    DWORD PTR [ebx]
  42b5e1:	add    BYTE PTR [eax],al
  42b5e3:	add    BYTE PTR [edx],dh
  42b5e5:	dec    esp
  42b5e6:	dec    ebx
  42b5e7:	add    bh,bh
  42b5e9:	(bad)  
  42b5ea:	(bad)  
  42b5eb:	inc    DWORD PTR [ebx]
  42b5ed:	add    BYTE PTR [eax],al
  42b5ef:	add    BYTE PTR [ebp+esi*1+0x68],dl
  42b5f3:	add    bh,bh
  42b5f5:	(bad)  
  42b5f6:	(bad)  
  42b5f7:	inc    DWORD PTR [edx]
  42b5f9:	add    BYTE PTR [eax],al
  42b5fb:	add    BYTE PTR [ecx],bh
  42b5fd:	push   ebp
  42b5fe:	add    BYTE PTR [eax],al
  42b600:	(bad)  
  42b601:	(bad)  
  42b602:	(bad)  
  42b603:	inc    DWORD PTR [ecx]
  42b605:	add    BYTE PTR [eax],al
  42b607:	add    BYTE PTR [esi+0x0],cl
  42b60a:	add    BYTE PTR [eax],al
  42b60c:	(bad)  
  42b60d:	(bad)  
  42b60e:	(bad)  
  42b60f:	inc    DWORD PTR [ecx]
  42b611:	add    BYTE PTR [eax],al
  42b613:	add    BYTE PTR [eax+0x0],dl
  42b616:	add    BYTE PTR [eax],al
  42b618:	(bad)  
  42b619:	(bad)  
  42b61a:	(bad)  
  42b61b:	inc    DWORD PTR [eax+eax*1]
  42b61e:	add    BYTE PTR [eax],al
  42b620:	jp     0x42b668
  42b622:	xor    eax,0x43
  42b627:	add    bh,bh
  42b629:	(bad)  
  42b62a:	(bad)  
  42b62b:	inc    DWORD PTR [edx]
  42b62d:	add    BYTE PTR [eax],al
  42b62f:	add    BYTE PTR [eax+0x61],bl
  42b632:	add    BYTE PTR [eax],al
  42b634:	(bad)  
  42b635:	(bad)  
  42b636:	(bad)  
  42b637:	inc    DWORD PTR [eax+eax*1]
  42b63a:	add    BYTE PTR [eax],al
  42b63c:	pop    eax
  42b63d:	inc    si
  42b63f:	xor    DWORD PTR [eax],eax
  42b641:	add    BYTE PTR [eax],al
  42b643:	add    bh,bh
  42b645:	(bad)  
  42b646:	(bad)  
  42b647:	inc    DWORD PTR [ecx]
  42b649:	add    BYTE PTR [eax],al
  42b64b:	add    BYTE PTR [ebp+0x0],al
  42b64e:	add    BYTE PTR [eax],al
  42b650:	(bad)  
  42b651:	(bad)  
  42b652:	(bad)  
  42b653:	inc    DWORD PTR [ecx]
  42b655:	add    BYTE PTR [eax],al
  42b657:	add    BYTE PTR [eax+0x0],bl
  42b65a:	add    BYTE PTR [eax],al
  42b65c:	(bad)  
  42b65d:	(bad)  
  42b65e:	(bad)  
  42b65f:	inc    DWORD PTR [eax+eax*1]
  42b662:	add    BYTE PTR [eax],al
  42b664:	xor    eax,0x526964
  42b669:	add    BYTE PTR [eax],al
  42b66b:	add    bh,bh
  42b66d:	(bad)  
  42b66e:	(bad)  
  42b66f:	inc    DWORD PTR [ebx]
  42b671:	add    BYTE PTR [eax],al
  42b673:	add    BYTE PTR [eax],bh
  42b675:	jne    0x42b6e7
  42b677:	add    bh,bh
  42b679:	(bad)  
  42b67a:	(bad)  
  42b67b:	inc    DWORD PTR [edx]
  42b67d:	add    BYTE PTR [eax],al
  42b67f:	add    BYTE PTR [ebx],dh
  42b681:	jp     0x42b683
  42b683:	add    bh,bh
  42b685:	(bad)  
  42b686:	(bad)  
  42b687:	inc    DWORD PTR [eax+eax*1]
  42b68a:	add    BYTE PTR [eax],al
  42b68c:	ja     0x42b6f5
  42b68e:	dec    esi
  42b68f:	dec    esp
  42b690:	add    BYTE PTR [eax],al
  42b692:	add    BYTE PTR [eax],al
  42b694:	(bad)  
  42b695:	(bad)  
  42b696:	(bad)  
  42b697:	inc    DWORD PTR [edx]
  42b699:	add    BYTE PTR [eax],al
  42b69b:	add    BYTE PTR [esi+0x39],ch
  42b69e:	add    BYTE PTR [eax],al
  42b6a0:	(bad)  
  42b6a1:	(bad)  
  42b6a2:	(bad)  
  42b6a3:	inc    DWORD PTR [eax+eax*1]
  42b6a6:	add    BYTE PTR [eax],al
  42b6a8:	outs   dx,BYTE PTR ds:[esi]
  42b6a9:	inc    ebp
  42b6aa:	pop    eax
  42b6ab:	add    BYTE PTR ss:[eax],al
  42b6ae:	add    BYTE PTR [eax],al
  42b6b0:	(bad)  
  42b6b1:	(bad)  
  42b6b2:	(bad)  
  42b6b3:	inc    DWORD PTR [ecx]
  42b6b5:	add    BYTE PTR [eax],al
  42b6b7:	add    BYTE PTR [ebx+0x0],ch
  42b6ba:	add    BYTE PTR [eax],al
  42b6bc:	(bad)  
  42b6bd:	(bad)  
  42b6be:	(bad)  
  42b6bf:	inc    DWORD PTR [ebx]
  42b6c1:	add    BYTE PTR [eax],al
  42b6c3:	add    BYTE PTR [ecx],bh
  42b6c5:	bound  esi,QWORD PTR [ebx]
  42b6c7:	add    bh,bh
  42b6c9:	(bad)  
  42b6ca:	(bad)  
  42b6cb:	inc    DWORD PTR [eax+eax*1]
  42b6ce:	add    BYTE PTR [eax],al
  42b6d0:	push   eax
  42b6d1:	gs push 0x38
  42b6d4:	add    BYTE PTR [eax],al
  42b6d6:	add    BYTE PTR [eax],al
  42b6d8:	(bad)  
  42b6d9:	(bad)  
  42b6da:	(bad)  
  42b6db:	inc    DWORD PTR [eax+eax*1]
  42b6de:	add    BYTE PTR [eax],al
  42b6e0:	arpl   WORD PTR [ecx+edi*1+0x4b],cx
  42b6e4:	add    BYTE PTR [eax],al
  42b6e6:	add    BYTE PTR [eax],al
  42b6e8:	(bad)  
  42b6e9:	(bad)  
  42b6ea:	(bad)  
  42b6eb:	inc    DWORD PTR [edx]
  42b6ed:	add    BYTE PTR [eax],al
  42b6ef:	add    BYTE PTR [esi],dh
  42b6f1:	push   ecx
  42b6f2:	add    BYTE PTR [eax],al
  42b6f4:	(bad)  
  42b6f5:	(bad)  
  42b6f6:	(bad)  
  42b6f7:	inc    DWORD PTR [ebx]
  42b6f9:	add    BYTE PTR [eax],al
  42b6fb:	add    BYTE PTR [edi+0x6d],ch
  42b6fe:	dec    esi
  42b6ff:	add    bh,bh
  42b701:	(bad)  
  42b702:	(bad)  
  42b703:	inc    DWORD PTR [ebx]
  42b705:	add    BYTE PTR [eax],al
  42b707:	add    BYTE PTR [ecx],bh
  42b709:	push   edx
  42b70a:	inc    ecx
  42b70b:	add    bh,bh
  42b70d:	(bad)  
  42b70e:	(bad)  
  42b70f:	inc    DWORD PTR [edx]
  42b711:	add    BYTE PTR [eax],al
  42b713:	add    BYTE PTR [edx+0x35],dl
  42b716:	add    BYTE PTR [eax],al
  42b718:	(bad)  
  42b719:	(bad)  
  42b71a:	(bad)  
  42b71b:	inc    DWORD PTR [ebx]
  42b71d:	add    BYTE PTR [eax],al
  42b71f:	add    BYTE PTR [eax+0x6f],bh
  42b722:	dec    esi
  42b723:	add    bh,bh
  42b725:	(bad)  
  42b726:	(bad)  
  42b727:	inc    DWORD PTR [ecx]
  42b729:	add    BYTE PTR [eax],al
  42b72b:	add    BYTE PTR [ecx],dh
  42b72d:	add    BYTE PTR [eax],al
  42b72f:	add    bh,bh
  42b731:	(bad)  
  42b732:	(bad)  
  42b733:	inc    DWORD PTR [ebx]
  42b735:	add    BYTE PTR [eax],al
  42b737:	add    BYTE PTR [ecx+0x33],cl
  42b73a:	dec    edi
  42b73b:	add    bh,bh
  42b73d:	(bad)  
  42b73e:	(bad)  
  42b73f:	inc    DWORD PTR [edx]
  42b741:	add    BYTE PTR [eax],al
  42b743:	add    BYTE PTR [ecx+eiz*2+0x0],cl
  42b747:	add    bh,bh
  42b749:	(bad)  
  42b74a:	(bad)  
  42b74b:	inc    DWORD PTR [ebx]
  42b74d:	add    BYTE PTR [eax],al
  42b74f:	add    BYTE PTR [esi+0x76],al
  42b752:	ins    DWORD PTR es:[edi],dx
  42b753:	add    bh,bh
  42b755:	(bad)  
  42b756:	(bad)  
  42b757:	inc    DWORD PTR [edx]
  42b759:	add    BYTE PTR [eax],al
  42b75b:	add    BYTE PTR [edi+0x39],cl
  42b75e:	add    BYTE PTR [eax],al
  42b760:	(bad)  
  42b761:	(bad)  
  42b762:	(bad)  
  42b763:	inc    DWORD PTR [eax+eax*1]
  42b766:	add    BYTE PTR [eax],al
  42b768:	jp     0x42b7d8
  42b76a:	ss inc ebp
  42b76c:	add    BYTE PTR [eax],al
  42b76e:	add    BYTE PTR [eax],al
  42b770:	(bad)  
  42b771:	(bad)  
  42b772:	(bad)  
  42b773:	inc    DWORD PTR [eax+eax*1]
  42b776:	add    BYTE PTR [eax],al
  42b778:	cmp    BYTE PTR [edx+0x34],al
  42b77b:	inc    esp
  42b77c:	add    BYTE PTR [eax],al
  42b77e:	add    BYTE PTR [eax],al
  42b780:	(bad)  
  42b781:	(bad)  
  42b782:	(bad)  
  42b783:	inc    DWORD PTR [ebx]
  42b785:	add    BYTE PTR [eax],al
  42b787:	add    BYTE PTR [ebx+0x37],dl
  42b78a:	xor    al,BYTE PTR [eax]
  42b78c:	(bad)  
  42b78d:	(bad)  
  42b78e:	(bad)  
  42b78f:	inc    DWORD PTR [edx]
  42b791:	add    BYTE PTR [eax],al
  42b793:	add    BYTE PTR [edx+0x62],cl
  42b796:	add    BYTE PTR [eax],al
  42b798:	(bad)  
  42b799:	(bad)  
  42b79a:	(bad)  
  42b79b:	inc    DWORD PTR [eax+eax*1]
  42b79e:	add    BYTE PTR [eax],al
  42b7a0:	xor    ah,BYTE PTR [esp+esi*1+0x79]
  42b7a4:	add    BYTE PTR [eax],al
  42b7a6:	add    BYTE PTR [eax],al
  42b7a8:	(bad)  
  42b7a9:	(bad)  
  42b7aa:	(bad)  
  42b7ab:	inc    DWORD PTR [eax+eax*1]
  42b7ae:	add    BYTE PTR [eax],al
  42b7b0:	js     0x42b7e5
  42b7b2:	xor    BYTE PTR [edx+0x0],dh
  42b7b5:	add    BYTE PTR [eax],al
  42b7b7:	add    bh,bh
  42b7b9:	(bad)  
  42b7ba:	(bad)  
  42b7bb:	inc    DWORD PTR [ecx]
  42b7bd:	add    BYTE PTR [eax],al
  42b7bf:	add    BYTE PTR [ebp+0x0],ah
  42b7c2:	add    BYTE PTR [eax],al
  42b7c4:	(bad)  
  42b7c5:	(bad)  
  42b7c6:	(bad)  
  42b7c7:	inc    DWORD PTR [ebx]
  42b7c9:	add    BYTE PTR [eax],al
  42b7cb:	add    BYTE PTR [edi+0x5a],ch
  42b7ce:	bound  eax,QWORD PTR [eax]
  42b7d0:	(bad)  
  42b7d1:	(bad)  
  42b7d2:	(bad)  
  42b7d3:	inc    DWORD PTR [eax+eax*1]
  42b7d6:	add    BYTE PTR [eax],al
  42b7d8:	jo     0x42b834
  42b7da:	push   0x43
  42b7dc:	add    BYTE PTR [eax],al
  42b7de:	add    BYTE PTR [eax],al
  42b7e0:	(bad)  
  42b7e1:	(bad)  
  42b7e2:	(bad)  
  42b7e3:	inc    DWORD PTR [eax+eax*1]
  42b7e6:	add    BYTE PTR [eax],al
  42b7e8:	push   0x335341
  42b7ed:	add    BYTE PTR [eax],al
  42b7ef:	add    bh,bh
  42b7f1:	(bad)  
  42b7f2:	(bad)  
  42b7f3:	inc    DWORD PTR [edx]
  42b7f5:	add    BYTE PTR [eax],al
  42b7f7:	add    BYTE PTR [ebp+0x33],ch
  42b7fa:	add    BYTE PTR [eax],al
  42b7fc:	(bad)  
  42b7fd:	(bad)  
  42b7fe:	(bad)  
  42b7ff:	inc    DWORD PTR [ecx]
  42b801:	add    BYTE PTR [eax],al
  42b803:	add    BYTE PTR [ecx+0x0],dh
  42b806:	add    BYTE PTR [eax],al
  42b808:	(bad)  
  42b809:	(bad)  
  42b80a:	(bad)  
  42b80b:	inc    DWORD PTR [eax+eax*1]
  42b80e:	add    BYTE PTR [eax],al
  42b810:	inc    ecx
  42b811:	dec    eax
  42b812:	popa   
  42b813:	push   eax
  42b814:	add    BYTE PTR [eax],al
  42b816:	add    BYTE PTR [eax],al
  42b818:	(bad)  
  42b819:	(bad)  
  42b81a:	(bad)  
  42b81b:	inc    DWORD PTR [ebx]
  42b81d:	add    BYTE PTR [eax],al
  42b81f:	add    BYTE PTR [edi+0x50],al
  42b822:	fs add bh,bh
  42b825:	(bad)  
  42b826:	(bad)  
  42b827:	inc    DWORD PTR [ebx]
  42b829:	add    BYTE PTR [eax],al
  42b82b:	add    BYTE PTR [esi+0x59],dh
  42b82e:	xor    eax,DWORD PTR [eax]
  42b830:	(bad)  
  42b831:	(bad)  
  42b832:	(bad)  
  42b833:	inc    DWORD PTR [edx]
  42b835:	add    BYTE PTR [eax],al
  42b837:	add    BYTE PTR [ebp+0x64],dh
  42b83a:	add    BYTE PTR [eax],al
  42b83c:	(bad)  
  42b83d:	(bad)  
  42b83e:	(bad)  
  42b83f:	inc    DWORD PTR [ebx]
  42b841:	add    BYTE PTR [eax],al
  42b843:	add    BYTE PTR [edx+0x73],dl
  42b846:	pop    edx
  42b847:	add    bh,bh
  42b849:	(bad)  
  42b84a:	(bad)  
  42b84b:	inc    DWORD PTR [edx]
  42b84d:	add    BYTE PTR [eax],al
  42b84f:	add    BYTE PTR [edx+0x4f],ah
  42b852:	add    BYTE PTR [eax],al
  42b854:	(bad)  
  42b855:	(bad)  
  42b856:	(bad)  
  42b857:	inc    DWORD PTR [edx]
  42b859:	add    BYTE PTR [eax],al
  42b85b:	add    BYTE PTR [ecx],dh
  42b85d:	inc    ebp
  42b85e:	add    BYTE PTR [eax],al
  42b860:	(bad)  
  42b861:	(bad)  
  42b862:	(bad)  
  42b863:	inc    DWORD PTR [ebx]
  42b865:	add    BYTE PTR [eax],al
  42b867:	add    BYTE PTR [edi+0x6a],ch
  42b86a:	imul   eax,DWORD PTR [eax],0xffffffff
  42b86d:	(bad)  
  42b86e:	(bad)  
  42b86f:	inc    DWORD PTR [ebx]
  42b871:	add    BYTE PTR [eax],al
  42b873:	add    BYTE PTR [esi],dh
  42b875:	cmp    BYTE PTR [edi+0x0],dl
  42b878:	(bad)  
  42b879:	(bad)  
  42b87a:	(bad)  
  42b87b:	inc    DWORD PTR [ebx]
  42b87d:	add    BYTE PTR [eax],al
  42b87f:	add    BYTE PTR [edx+0x47],bl
  42b882:	inc    ebx
  42b883:	add    bh,bh
  42b885:	(bad)  
  42b886:	(bad)  
  42b887:	inc    DWORD PTR [ebx]
  42b889:	add    BYTE PTR [eax],al
  42b88b:	add    BYTE PTR [esi],dh
  42b88d:	push   edx
  42b88e:	data16 add bh,bh
  42b891:	(bad)  
  42b892:	(bad)  
  42b893:	inc    DWORD PTR [ecx]
  42b895:	add    BYTE PTR [eax],al
  42b897:	add    BYTE PTR [ecx+0x0],dl
  42b89a:	add    BYTE PTR [eax],al
  42b89c:	(bad)  
  42b89d:	(bad)  
  42b89e:	(bad)  
  42b89f:	inc    DWORD PTR [ecx]
  42b8a1:	add    BYTE PTR [eax],al
  42b8a3:	add    BYTE PTR [edi+0x0],dh
  42b8a6:	add    BYTE PTR [eax],al
  42b8a8:	(bad)  
  42b8a9:	(bad)  
  42b8aa:	(bad)  
  42b8ab:	inc    DWORD PTR [ecx]
  42b8ad:	add    BYTE PTR [eax],al
  42b8af:	add    BYTE PTR [eax],dh
  42b8b1:	add    BYTE PTR [eax],al
  42b8b3:	add    bh,bh
  42b8b5:	(bad)  
  42b8b6:	(bad)  
  42b8b7:	inc    DWORD PTR [ecx]
  42b8b9:	add    BYTE PTR [eax],al
  42b8bb:	add    BYTE PTR [edi+0x0],ch
  42b8be:	add    BYTE PTR [eax],al
  42b8c0:	(bad)  
  42b8c1:	(bad)  
  42b8c2:	(bad)  
  42b8c3:	inc    DWORD PTR [eax+eax*1]
  42b8c6:	add    BYTE PTR [eax],al
  42b8c8:	jb     0x42b923
  42b8ca:	dec    esi
  42b8cb:	push   ebp
  42b8cc:	add    BYTE PTR [eax],al
  42b8ce:	add    BYTE PTR [eax],al
  42b8d0:	(bad)  
  42b8d1:	(bad)  
  42b8d2:	(bad)  
  42b8d3:	inc    DWORD PTR [edx]
  42b8d5:	add    BYTE PTR [eax],al
  42b8d7:	add    BYTE PTR [ecx+0x52],ch
  42b8da:	add    BYTE PTR [eax],al
  42b8dc:	(bad)  
  42b8dd:	(bad)  
  42b8de:	(bad)  
  42b8df:	inc    DWORD PTR [ecx]
  42b8e1:	add    BYTE PTR [eax],al
  42b8e3:	add    BYTE PTR [edx+0x0],bl
  42b8e6:	add    BYTE PTR [eax],al
  42b8e8:	(bad)  
  42b8e9:	(bad)  
  42b8ea:	(bad)  
  42b8eb:	inc    DWORD PTR [ebx]
  42b8ed:	add    BYTE PTR [eax],al
  42b8ef:	add    BYTE PTR [ebp+0x43],cl
  42b8f2:	push   eax
  42b8f3:	add    bh,bh
  42b8f5:	(bad)  
  42b8f6:	(bad)  
  42b8f7:	inc    DWORD PTR [ebx]
  42b8f9:	add    BYTE PTR [eax],al
  42b8fb:	add    BYTE PTR [eax+edi*1+0x69],ah
  42b8ff:	add    bh,bh
  42b901:	(bad)  
  42b902:	(bad)  
  42b903:	inc    DWORD PTR [ecx]
  42b905:	add    BYTE PTR [eax],al
  42b907:	add    BYTE PTR [ebx+0x0],cl
  42b90a:	add    BYTE PTR [eax],al
  42b90c:	(bad)  
  42b90d:	(bad)  
  42b90e:	(bad)  
  42b90f:	inc    DWORD PTR [eax+eax*1]
  42b912:	add    BYTE PTR [eax],al
  42b914:	push   ebx
  42b915:	xor    al,0x68
  42b917:	jbe    0x42b919
  42b919:	add    BYTE PTR [eax],al
  42b91b:	add    bh,bh
  42b91d:	(bad)  
  42b91e:	(bad)  
  42b91f:	inc    DWORD PTR [eax+eax*1]
  42b922:	add    BYTE PTR [eax],al
  42b924:	gs dec ebp
  42b926:	push   ebp
  42b927:	xor    al,0x0
  42b929:	add    BYTE PTR [eax],al
  42b92b:	add    bh,bh
  42b92d:	(bad)  
  42b92e:	(bad)  
  42b92f:	inc    DWORD PTR [edx]
  42b931:	add    BYTE PTR [eax],al
  42b933:	add    BYTE PTR [ecx+ecx*2+0x0],ah
  42b937:	add    bh,bh
  42b939:	(bad)  
  42b93a:	(bad)  
  42b93b:	inc    DWORD PTR [eax+eax*1]
  42b93e:	add    BYTE PTR [eax],al
  42b940:	inc    esi
  42b941:	aaa    
  42b942:	js     0x42b98a
  42b944:	add    BYTE PTR [eax],al
  42b946:	add    BYTE PTR [eax],al
  42b948:	(bad)  
  42b949:	(bad)  
  42b94a:	(bad)  
  42b94b:	inc    DWORD PTR [eax+eax*1]
  42b94e:	add    BYTE PTR [eax],al
  42b950:	dec    ebx
  42b951:	xor    dh,BYTE PTR [esi+0x76]
  42b954:	add    BYTE PTR [eax],al
  42b956:	add    BYTE PTR [eax],al
  42b958:	(bad)  
  42b959:	(bad)  
  42b95a:	(bad)  
  42b95b:	inc    DWORD PTR [eax+eax*1]
  42b95e:	add    BYTE PTR [eax],al
  42b960:	inc    ecx
  42b961:	push   ebp
  42b962:	xor    al,0x78
  42b964:	add    BYTE PTR [eax],al
  42b966:	add    BYTE PTR [eax],al
  42b968:	(bad)  
  42b969:	(bad)  
  42b96a:	(bad)  
  42b96b:	inc    DWORD PTR [ecx]
  42b96d:	add    BYTE PTR [eax],al
  42b96f:	add    BYTE PTR [eax+0x0],cl
  42b972:	add    BYTE PTR [eax],al
  42b974:	(bad)  
  42b975:	(bad)  
  42b976:	(bad)  
  42b977:	inc    DWORD PTR [ebx]
  42b979:	add    BYTE PTR [eax],al
  42b97b:	add    BYTE PTR [edi+0x71],ch
  42b97e:	dec    ebp
  42b97f:	add    bh,bh
  42b981:	(bad)  
  42b982:	(bad)  
  42b983:	inc    DWORD PTR [edx]
  42b985:	add    BYTE PTR [eax],al
  42b987:	add    BYTE PTR [edi+0x6f],dl
  42b98a:	add    BYTE PTR [eax],al
  42b98c:	(bad)  
  42b98d:	(bad)  
  42b98e:	(bad)  
  42b98f:	inc    DWORD PTR [ecx]
  42b991:	add    BYTE PTR [eax],al
  42b993:	add    BYTE PTR [esi+0x0],ch
  42b996:	add    BYTE PTR [eax],al
  42b998:	(bad)  
  42b999:	(bad)  
  42b99a:	(bad)  
  42b99b:	inc    DWORD PTR [edx]
  42b99d:	add    BYTE PTR [eax],al
  42b99f:	add    BYTE PTR [ebx+0x39],al
  42b9a2:	add    BYTE PTR [eax],al
  42b9a4:	(bad)  
  42b9a5:	(bad)  
  42b9a6:	(bad)  
  42b9a7:	inc    DWORD PTR [edx]
  42b9a9:	add    BYTE PTR [eax],al
  42b9ab:	add    BYTE PTR [edx+0x36],al
  42b9ae:	add    BYTE PTR [eax],al
  42b9b0:	(bad)  
  42b9b1:	(bad)  
  42b9b2:	(bad)  
  42b9b3:	inc    DWORD PTR [ecx]
  42b9b5:	add    BYTE PTR [eax],al
  42b9b7:	add    BYTE PTR [esi+0x0],dl
  42b9ba:	add    BYTE PTR [eax],al
  42b9bc:	(bad)  
  42b9bd:	(bad)  
  42b9be:	(bad)  
  42b9bf:	inc    DWORD PTR [edx]
  42b9c1:	add    BYTE PTR [eax],al
  42b9c3:	add    BYTE PTR [edx+eax*2+0x0],al
  42b9c7:	add    bh,bh
  42b9c9:	(bad)  
  42b9ca:	(bad)  
  42b9cb:	inc    DWORD PTR [edx]
  42b9cd:	add    BYTE PTR [eax],al
  42b9cf:	add    BYTE PTR [ecx+edx*2],dh
  42b9d2:	add    BYTE PTR [eax],al
  42b9d4:	(bad)  
  42b9d5:	(bad)  
  42b9d6:	(bad)  
  42b9d7:	inc    DWORD PTR [ecx]
  42b9d9:	add    BYTE PTR [eax],al
  42b9db:	add    BYTE PTR [eax+eax*1+0x0],dh
  42b9df:	add    bh,bh
  42b9e1:	(bad)  
  42b9e2:	(bad)  
  42b9e3:	inc    DWORD PTR [ebx]
  42b9e5:	add    BYTE PTR [eax],al
  42b9e7:	add    BYTE PTR [eax+0x70],dl
  42b9ea:	jno    0x42b9ec
  42b9ec:	(bad)  
  42b9ed:	(bad)  
  42b9ee:	(bad)  
  42b9ef:	inc    DWORD PTR [edx]
  42b9f1:	add    BYTE PTR [eax],al
  42b9f3:	add    BYTE PTR [edi+0x45],dh
  42b9f6:	add    BYTE PTR [eax],al
  42b9f8:	(bad)  
  42b9f9:	(bad)  
  42b9fa:	(bad)  
  42b9fb:	inc    DWORD PTR [ecx]
  42b9fd:	add    BYTE PTR [eax],al
  42b9ff:	add    BYTE PTR [edx],dh
  42ba01:	add    BYTE PTR [eax],al
  42ba03:	add    bh,bh
  42ba05:	(bad)  
  42ba06:	(bad)  
  42ba07:	inc    DWORD PTR [edx]
  42ba09:	add    BYTE PTR [eax],al
  42ba0b:	add    BYTE PTR [esi+0x4d],ch
  42ba0e:	add    BYTE PTR [eax],al
  42ba10:	(bad)  
  42ba11:	(bad)  
  42ba12:	(bad)  
  42ba13:	inc    DWORD PTR [ecx]
  42ba15:	add    BYTE PTR [eax],al
  42ba17:	add    BYTE PTR [edi+0x0],al
  42ba1a:	add    BYTE PTR [eax],al
  42ba1c:	(bad)  
  42ba1d:	(bad)  
  42ba1e:	(bad)  
  42ba1f:	inc    DWORD PTR [ebx]
  42ba21:	add    BYTE PTR [eax],al
  42ba23:	add    BYTE PTR [ecx+0x52],bh
  42ba26:	cmp    BYTE PTR [eax],al
  42ba28:	(bad)  
  42ba29:	(bad)  
  42ba2a:	(bad)  
  42ba2b:	inc    DWORD PTR [eax+eax*1]
  42ba2e:	add    BYTE PTR [eax],al
  42ba30:	push   ebx
  42ba31:	jp     0x42ba63
  42ba33:	push   esi
  42ba34:	add    BYTE PTR [eax],al
  42ba36:	add    BYTE PTR [eax],al
  42ba38:	(bad)  
  42ba39:	(bad)  
  42ba3a:	(bad)  
  42ba3b:	inc    DWORD PTR [ecx]
  42ba3d:	add    BYTE PTR [eax],al
  42ba3f:	add    BYTE PTR [eax+eax*1+0x0],al
  42ba43:	add    bh,bh
  42ba45:	(bad)  
  42ba46:	(bad)  
  42ba47:	inc    DWORD PTR [eax+eax*1]
  42ba4a:	add    BYTE PTR [eax],al
  42ba4c:	xor    BYTE PTR [ebx+0x68],dl
  42ba4f:	dec    eax
  42ba50:	add    BYTE PTR [eax],al
  42ba52:	add    BYTE PTR [eax],al
  42ba54:	push   ebp
  42ba55:	mov    ebp,esp
  42ba57:	add    esp,0xfffffff0
  42ba5a:	call   0x405dc8
  42ba5f:	call   0x405c00
  42ba64:	call   0x405c68
  42ba69:	call   0x405d58
  42ba6e:	call   0x405d38
  42ba73:	call   0x405c50
  42ba78:	call   0x405c70
  42ba7d:	call   0x405d88
  42ba82:	call   0x405d10
  42ba87:	call   0x405c08
  42ba8c:	call   0x405c48
  42ba91:	call   0x405c30
  42ba96:	call   0x405ca0
  42ba9b:	call   0x405db0
  42baa0:	call   0x405c58
  42baa5:	call   0x405dc0
  42baaa:	call   0x405c78
  42baaf:	call   0x405d48
  42bab4:	call   0x405d20
  42bab9:	call   0x405d80
  42babe:	call   0x405da8
  42bac3:	call   0x405d08
  42bac8:	call   0x405cc0
  42bacd:	call   0x405ce0
  42bad2:	call   0x405c10
  42bad7:	call   0x405cf8
  42badc:	call   0x405c38
  42bae1:	call   0x405bf8
  42bae6:	call   0x405ce8
  42baeb:	call   0x405cb8
  42baf0:	call   0x405c40
  42baf5:	call   0x405c28
  42bafa:	call   0x405d18
  42baff:	call   0x405c98
  42bb04:	call   0x405dd8
  42bb09:	call   0x405d70
  42bb0e:	call   0x405d40
  42bb13:	call   0x405bf0
  42bb18:	call   0x405de0
  42bb1d:	call   0x405c18
  42bb22:	call   0x405c80
  42bb27:	call   0x405db8
  42bb2c:	call   0x405cd0
  42bb31:	call   0x405d60
  42bb36:	call   0x405c90
  42bb3b:	call   0x405d30
  42bb40:	call   0x405dd0
  42bb45:	call   0x405d28
  42bb4a:	call   0x405cd8
  42bb4f:	call   0x405d98
  42bb54:	call   0x405d00
  42bb59:	call   0x405c60
  42bb5e:	call   0x405da0
  42bb63:	call   0x405d90
  42bb68:	call   0x405c88
  42bb6d:	call   0x405cc8
  42bb72:	call   0x405d50
  42bb77:	call   0x405d68
  42bb7c:	mov    al,BYTE PTR [ebp-0x1]
  42bb7f:	mov    esp,ebp
  42bb81:	pop    ebp
  42bb82:	ret    
  42bb83:	nop
  42bb84:	push   ebp
  42bb85:	mov    ebp,esp
  42bb87:	add    esp,0xffffffb8
  42bb8a:	xor    edx,edx
  42bb8c:	mov    DWORD PTR [ebp-0x34],edx
  42bb8f:	mov    DWORD PTR [ebp-0x38],edx
  42bb92:	mov    DWORD PTR [ebp-0x3c],edx
  42bb95:	mov    DWORD PTR [ebp-0x40],edx
  42bb98:	mov    DWORD PTR [ebp-0x44],edx
  42bb9b:	mov    DWORD PTR [ebp-0x4],eax
  42bb9e:	xor    eax,eax
  42bba0:	push   ebp
  42bba1:	push   0x42c4a1
  42bba6:	push   DWORD PTR fs:[eax]
  42bba9:	mov    DWORD PTR fs:[eax],esp
  42bbac:	mov    eax,DWORD PTR [ebp-0x30]
  42bbaf:	sub    eax,DWORD PTR [ebp-0x28]
  42bbb2:	sub    eax,DWORD PTR [ebp-0x28]
  42bbb5:	mov    DWORD PTR [ebp-0x30],eax
  42bbb8:	mov    eax,DWORD PTR [ebp-0x4]
  42bbbb:	mov    DWORD PTR [ebp-0xc],eax
  42bbbe:	mov    eax,DWORD PTR [ebp-0x28]
  42bbc1:	add    eax,DWORD PTR [ebp-0x28]
  42bbc4:	sub    eax,DWORD PTR [ebp-0x28]
  42bbc7:	sub    eax,DWORD PTR [ebp-0x28]
  42bbca:	mov    DWORD PTR [ebp-0x2c],eax
  42bbcd:	mov    eax,DWORD PTR [ebp-0x4]
  42bbd0:	xor    edx,edx
  42bbd2:	push   edx
  42bbd3:	push   eax
  42bbd4:	mov    eax,DWORD PTR [ebp-0xc]
  42bbd7:	mov    eax,DWORD PTR [eax+0x3c]
  42bbda:	cdq    
  42bbdb:	add    eax,DWORD PTR [esp]
  42bbde:	adc    edx,DWORD PTR [esp+0x4]
  42bbe2:	add    esp,0x8
  42bbe5:	mov    DWORD PTR [ebp-0x10],eax
  42bbe8:	lea    eax,[ebp-0x38]
  42bbeb:	mov    edx,0x42c4b8
  42bbf0:	call   0x403d44
  42bbf5:	lea    eax,[ebp-0x40]
  42bbf8:	mov    edx,0x42c4c4
  42bbfd:	call   0x403d44
  42bc02:	lea    eax,[ebp-0x34]
  42bc05:	mov    edx,0x42c4d4
  42bc0a:	call   0x403d44
  42bc0f:	mov    DWORD PTR [ebp-0x2c],0xb05fc
  42bc16:	lea    eax,[ebp-0x44]
  42bc19:	mov    edx,0x42c4e0
  42bc1e:	call   0x403d44
  42bc23:	lea    eax,[ebp-0x34]
  42bc26:	mov    edx,0x42c4ec
  42bc2b:	call   0x403d44
  42bc30:	mov    eax,DWORD PTR [ebp-0x28]
  42bc33:	sub    eax,DWORD PTR [ebp-0x2c]
  42bc36:	add    eax,DWORD PTR [ebp-0x28]
  42bc39:	mov    DWORD PTR [ebp-0x2c],eax
  42bc3c:	mov    edx,0x42c4ec
  42bc41:	lea    eax,[ebp-0x34]
  42bc44:	call   0x403d44
  42bc49:	lea    eax,[ebp-0x3c]
  42bc4c:	mov    edx,0x42c4fc
  42bc51:	call   0x403d44
  42bc56:	mov    DWORD PTR [ebp-0x28],0x8ea60
  42bc5d:	mov    eax,DWORD PTR [ebp-0x28]
  42bc60:	sub    eax,DWORD PTR [ebp-0x28]
  42bc63:	sub    eax,DWORD PTR [ebp-0x28]
  42bc66:	sub    eax,DWORD PTR [ebp-0x28]
  42bc69:	mov    DWORD PTR [ebp-0x28],eax
  42bc6c:	mov    eax,DWORD PTR [ebp-0x2c]
  42bc6f:	sub    eax,DWORD PTR [ebp-0x28]
  42bc72:	add    eax,DWORD PTR [ebp-0x28]
  42bc75:	add    eax,DWORD PTR [ebp-0x28]
  42bc78:	mov    DWORD PTR [ebp-0x30],eax
  42bc7b:	mov    eax,DWORD PTR [ebp-0x10]
  42bc7e:	mov    eax,DWORD PTR [eax+0x78]
  42bc81:	add    eax,DWORD PTR [ebp-0x4]
  42bc84:	mov    DWORD PTR [ebp-0x14],eax
  42bc87:	lea    eax,[ebp-0x3c]
  42bc8a:	mov    edx,0x42c50c
  42bc8f:	call   0x403d44
  42bc94:	lea    eax,[ebp-0x38]
  42bc97:	mov    edx,0x42c518
  42bc9c:	call   0x403d44
  42bca1:	mov    edx,0x42c4ec
  42bca6:	lea    eax,[ebp-0x34]
  42bca9:	call   0x403d44
  42bcae:	mov    DWORD PTR [ebp-0x28],0xc137
  42bcb5:	lea    eax,[ebp-0x44]
  42bcb8:	mov    edx,0x42c524
  42bcbd:	call   0x403d44
  42bcc2:	lea    eax,[ebp-0x40]
  42bcc5:	mov    edx,0x42c530
  42bcca:	call   0x403d44
  42bccf:	mov    DWORD PTR [ebp-0x2c],0x64ec3
  42bcd6:	lea    eax,[ebp-0x3c]
  42bcd9:	mov    edx,0x42c540
  42bcde:	call   0x403d44
  42bce3:	lea    eax,[ebp-0x40]
  42bce6:	mov    edx,0x42c4b8
  42bceb:	call   0x403d44
  42bcf0:	mov    eax,DWORD PTR [ebp-0x14]
  42bcf3:	mov    eax,DWORD PTR [eax+0x18]
  42bcf6:	test   eax,eax
  42bcf8:	jl     0x42c0e6
  42bcfe:	inc    eax
  42bcff:	mov    DWORD PTR [ebp-0x48],eax
  42bd02:	mov    DWORD PTR [ebp-0x18],0x0
  42bd09:	lea    eax,[ebp-0x38]
  42bd0c:	mov    edx,0x42c54c
  42bd11:	call   0x403d44
  42bd16:	lea    eax,[ebp-0x40]
  42bd19:	mov    edx,0x42c558
  42bd1e:	call   0x403d44
  42bd23:	mov    eax,DWORD PTR [ebp-0x28]
  42bd26:	add    eax,DWORD PTR [ebp-0x28]
  42bd29:	sub    eax,DWORD PTR [ebp-0x28]
  42bd2c:	mov    DWORD PTR [ebp-0x2c],eax
  42bd2f:	mov    eax,DWORD PTR [ebp-0x30]
  42bd32:	sub    eax,DWORD PTR [ebp-0x30]
  42bd35:	sub    eax,DWORD PTR [ebp-0x30]
  42bd38:	add    eax,DWORD PTR [ebp-0x2c]
  42bd3b:	mov    DWORD PTR [ebp-0x28],eax
  42bd3e:	mov    eax,DWORD PTR [ebp-0x28]
  42bd41:	add    DWORD PTR [ebp-0x28],eax
  42bd44:	lea    eax,[ebp-0x34]
  42bd47:	mov    edx,0x42c4b8
  42bd4c:	call   0x403d44
  42bd51:	mov    DWORD PTR [ebp-0x28],0x71fca
  42bd58:	lea    eax,[ebp-0x34]
  42bd5b:	mov    edx,0x42c564
  42bd60:	call   0x403d44
  42bd65:	lea    eax,[ebp-0x3c]
  42bd68:	mov    edx,0x42c574
  42bd6d:	call   0x403d44
  42bd72:	lea    eax,[ebp-0x34]
  42bd75:	mov    edx,0x42c580
  42bd7a:	call   0x403d44
  42bd7f:	lea    eax,[ebp-0x40]
  42bd82:	mov    edx,0x42c590
  42bd87:	call   0x403d44
  42bd8c:	lea    eax,[ebp-0x38]
  42bd8f:	mov    edx,0x42c54c
  42bd94:	call   0x403d44
  42bd99:	lea    eax,[ebp-0x34]
  42bd9c:	mov    edx,0x42c5a0
  42bda1:	call   0x403d44
  42bda6:	lea    eax,[ebp-0x40]
  42bda9:	mov    edx,0x42c5ac
  42bdae:	call   0x403d44
  42bdb3:	lea    eax,[ebp-0x44]
  42bdb6:	mov    edx,0x42c5b8
  42bdbb:	call   0x403d44
  42bdc0:	lea    eax,[ebp-0x3c]
  42bdc3:	mov    edx,0x42c5c4
  42bdc8:	call   0x403d44
  42bdcd:	mov    edx,0x42c4ec
  42bdd2:	lea    eax,[ebp-0x34]
  42bdd5:	call   0x403d44
  42bdda:	lea    eax,[ebp-0x40]
  42bddd:	mov    edx,0x42c5d0
  42bde2:	call   0x403d44
  42bde7:	lea    eax,[ebp-0x40]
  42bdea:	mov    edx,0x42c5e0
  42bdef:	call   0x403d44
  42bdf4:	mov    eax,DWORD PTR [ebp-0x28]
  42bdf7:	add    eax,DWORD PTR [ebp-0x2c]
  42bdfa:	add    eax,DWORD PTR [ebp-0x2c]
  42bdfd:	mov    DWORD PTR [ebp-0x28],eax
  42be00:	lea    eax,[ebp-0x38]
  42be03:	mov    edx,0x42c54c
  42be08:	call   0x403d44
  42be0d:	mov    eax,DWORD PTR [ebp-0x4]
  42be10:	xor    edx,edx
  42be12:	push   edx
  42be13:	push   eax
  42be14:	mov    eax,DWORD PTR [ebp-0x14]
  42be17:	mov    eax,DWORD PTR [eax+0x20]
  42be1a:	xor    edx,edx
  42be1c:	push   edx
  42be1d:	push   eax
  42be1e:	mov    eax,DWORD PTR [ebp-0x18]
  42be21:	shl    eax,0x2
  42be24:	cdq    
  42be25:	add    eax,DWORD PTR [esp]
  42be28:	adc    edx,DWORD PTR [esp+0x4]
  42be2c:	add    esp,0x8
  42be2f:	add    eax,DWORD PTR [esp]
  42be32:	adc    edx,DWORD PTR [esp+0x4]
  42be36:	add    esp,0x8
  42be39:	mov    eax,DWORD PTR [eax]
  42be3b:	add    eax,DWORD PTR [ebp-0x4]
  42be3e:	mov    DWORD PTR [ebp-0x1c],eax
  42be41:	lea    eax,[ebp-0x38]
  42be44:	mov    edx,0x42c5f0
  42be49:	call   0x403d44
  42be4e:	mov    DWORD PTR [ebp-0x28],0xa5fa3
  42be55:	lea    eax,[ebp-0x44]
  42be58:	mov    edx,0x42c564
  42be5d:	call   0x403d44
  42be62:	lea    eax,[ebp-0x40]
  42be65:	mov    edx,0x42c5fc
  42be6a:	call   0x403d44
  42be6f:	lea    eax,[ebp-0x40]
  42be72:	mov    edx,0x42c60c
  42be77:	call   0x403d44
  42be7c:	mov    eax,DWORD PTR [ebp-0x1c]
  42be7f:	cmp    DWORD PTR [eax],0x50746547
  42be85:	jne    0x42c052
  42be8b:	mov    eax,DWORD PTR [ebp-0x1c]
  42be8e:	add    eax,0x8
  42be91:	cmp    DWORD PTR [eax],0x65726464
  42be97:	jne    0x42c052
  42be9d:	lea    eax,[ebp-0x38]
  42bea0:	mov    edx,0x42c61c
  42bea5:	call   0x403d44
  42beaa:	lea    eax,[ebp-0x44]
  42bead:	mov    edx,0x42c61c
  42beb2:	call   0x403d44
  42beb7:	lea    eax,[ebp-0x3c]
  42beba:	mov    edx,0x42c628
  42bebf:	call   0x403d44
  42bec4:	lea    eax,[ebp-0x44]
  42bec7:	mov    edx,0x42c634
  42becc:	call   0x403d44
  42bed1:	mov    eax,DWORD PTR [ebp-0x28]
  42bed4:	sub    eax,DWORD PTR [ebp-0x28]
  42bed7:	mov    DWORD PTR [ebp-0x2c],eax
  42beda:	lea    eax,[ebp-0x3c]
  42bedd:	mov    edx,0x42c61c
  42bee2:	call   0x403d44
  42bee7:	lea    eax,[ebp-0x44]
  42beea:	mov    edx,0x42c640
  42beef:	call   0x403d44
  42bef4:	lea    eax,[ebp-0x3c]
  42bef7:	mov    edx,0x42c64c
  42befc:	call   0x403d44
  42bf01:	lea    eax,[ebp-0x44]
  42bf04:	mov    edx,0x42c54c
  42bf09:	call   0x403d44
  42bf0e:	mov    DWORD PTR [ebp-0x30],0xb84bd
  42bf15:	lea    eax,[ebp-0x44]
  42bf18:	mov    edx,0x42c65c
  42bf1d:	call   0x403d44
  42bf22:	mov    eax,DWORD PTR [ebp-0x28]
  42bf25:	add    eax,DWORD PTR [ebp-0x30]
  42bf28:	sub    eax,DWORD PTR [ebp-0x28]
  42bf2b:	mov    DWORD PTR [ebp-0x30],eax
  42bf2e:	mov    eax,DWORD PTR [ebp-0x14]
  42bf31:	mov    eax,DWORD PTR [eax+0x24]
  42bf34:	add    eax,DWORD PTR [ebp-0x4]
  42bf37:	xor    edx,edx
  42bf39:	push   edx
  42bf3a:	push   eax
  42bf3b:	mov    eax,DWORD PTR [ebp-0x18]
  42bf3e:	add    eax,eax
  42bf40:	cdq    
  42bf41:	add    eax,DWORD PTR [esp]
  42bf44:	adc    edx,DWORD PTR [esp+0x4]
  42bf48:	add    esp,0x8
  42bf4b:	mov    ax,WORD PTR [eax]
  42bf4e:	mov    WORD PTR [ebp-0x1e],ax
  42bf52:	mov    edx,0x42c4ec
  42bf57:	lea    eax,[ebp-0x3c]
  42bf5a:	call   0x403d44
  42bf5f:	mov    eax,DWORD PTR [ebp-0x14]
  42bf62:	mov    eax,DWORD PTR [eax+0x1c]
  42bf65:	add    eax,DWORD PTR [ebp-0x4]
  42bf68:	movzx  edx,WORD PTR [ebp-0x1e]
  42bf6c:	shl    edx,0x2
  42bf6f:	add    eax,edx
  42bf71:	mov    eax,DWORD PTR [eax]
  42bf73:	add    eax,DWORD PTR [ebp-0x4]
  42bf76:	mov    DWORD PTR [ebp-0x24],eax
  42bf79:	mov    eax,DWORD PTR [ebp-0x28]
  42bf7c:	add    DWORD PTR [ebp-0x30],eax
  42bf7f:	mov    DWORD PTR [ebp-0x30],0x90709
  42bf86:	lea    eax,[ebp-0x38]
  42bf89:	mov    edx,0x42c634
  42bf8e:	call   0x403d44
  42bf93:	lea    eax,[ebp-0x44]
  42bf96:	mov    edx,0x42c668
  42bf9b:	call   0x403d44
  42bfa0:	mov    eax,DWORD PTR [ebp-0x30]
  42bfa3:	add    eax,DWORD PTR [ebp-0x2c]
  42bfa6:	add    eax,DWORD PTR [ebp-0x28]
  42bfa9:	add    eax,DWORD PTR [ebp-0x30]
  42bfac:	mov    DWORD PTR [ebp-0x2c],eax
  42bfaf:	lea    eax,[ebp-0x34]
  42bfb2:	mov    edx,0x42c634
  42bfb7:	call   0x403d44
  42bfbc:	lea    eax,[ebp-0x40]
  42bfbf:	mov    edx,0x42c678
  42bfc4:	call   0x403d44
  42bfc9:	lea    eax,[ebp-0x34]
  42bfcc:	mov    edx,0x42c684
  42bfd1:	call   0x403d44
  42bfd6:	mov    DWORD PTR [ebp-0x2c],0xdc58c
  42bfdd:	mov    eax,DWORD PTR [ebp-0x24]
  42bfe0:	mov    DWORD PTR [ebp-0x8],eax
  42bfe3:	mov    edx,0x42c4ec
  42bfe8:	lea    eax,[ebp-0x38]
  42bfeb:	call   0x403d44
  42bff0:	mov    eax,DWORD PTR [ebp-0x30]
  42bff3:	sub    eax,DWORD PTR [ebp-0x28]
  42bff6:	sub    eax,DWORD PTR [ebp-0x28]
  42bff9:	mov    DWORD PTR [ebp-0x2c],eax
  42bffc:	mov    eax,DWORD PTR [ebp-0x2c]
  42bfff:	add    eax,DWORD PTR [ebp-0x2c]
  42c002:	add    eax,DWORD PTR [ebp-0x2c]
  42c005:	add    eax,DWORD PTR [ebp-0x28]
  42c008:	mov    DWORD PTR [ebp-0x2c],eax
  42c00b:	mov    DWORD PTR [ebp-0x28],0x91382
  42c012:	lea    eax,[ebp-0x40]
  42c015:	mov    edx,0x42c54c
  42c01a:	call   0x403d44
  42c01f:	lea    eax,[ebp-0x34]
  42c022:	mov    edx,0x42c690
  42c027:	call   0x403d44
  42c02c:	mov    eax,DWORD PTR [ebp-0x28]
  42c02f:	sub    eax,DWORD PTR [ebp-0x2c]
  42c032:	add    eax,DWORD PTR [ebp-0x28]
  42c035:	mov    DWORD PTR [ebp-0x2c],eax
  42c038:	lea    eax,[ebp-0x44]
  42c03b:	mov    edx,0x42c69c
  42c040:	call   0x403d44
  42c045:	lea    eax,[ebp-0x40]
  42c048:	mov    edx,0x42c564
  42c04d:	call   0x403d44
  42c052:	lea    eax,[ebp-0x38]
  42c055:	mov    edx,0x42c6a8
  42c05a:	call   0x403d44
  42c05f:	mov    DWORD PTR [ebp-0x28],0x5034d
  42c066:	mov    eax,DWORD PTR [ebp-0x28]
  42c069:	sub    eax,DWORD PTR [ebp-0x28]
  42c06c:	sub    eax,DWORD PTR [ebp-0x30]
  42c06f:	mov    DWORD PTR [ebp-0x28],eax
  42c072:	mov    edx,0x42c4ec
  42c077:	lea    eax,[ebp-0x34]
  42c07a:	call   0x403d44
  42c07f:	lea    eax,[ebp-0x44]
  42c082:	mov    edx,0x42c6b4
  42c087:	call   0x403d44
  42c08c:	lea    eax,[ebp-0x3c]
  42c08f:	mov    edx,0x42c54c
  42c094:	call   0x403d44
  42c099:	lea    eax,[ebp-0x40]
  42c09c:	mov    edx,0x42c6c0
  42c0a1:	call   0x403d44
  42c0a6:	mov    DWORD PTR [ebp-0x2c],0xe899f
  42c0ad:	lea    eax,[ebp-0x38]
  42c0b0:	mov    edx,0x42c61c
  42c0b5:	call   0x403d44
  42c0ba:	mov    edx,0x42c4ec
  42c0bf:	lea    eax,[ebp-0x34]
  42c0c2:	call   0x403d44
  42c0c7:	mov    DWORD PTR [ebp-0x30],0x13107
  42c0ce:	mov    eax,DWORD PTR [ebp-0x28]
  42c0d1:	sub    eax,DWORD PTR [ebp-0x2c]
  42c0d4:	add    eax,DWORD PTR [ebp-0x30]
  42c0d7:	mov    DWORD PTR [ebp-0x2c],eax
  42c0da:	inc    DWORD PTR [ebp-0x18]
  42c0dd:	dec    DWORD PTR [ebp-0x48]
  42c0e0:	jne    0x42bd09
  42c0e6:	lea    eax,[ebp-0x34]
  42c0e9:	mov    edx,0x42c4b8
  42c0ee:	call   0x403d44
  42c0f3:	mov    eax,DWORD PTR [ebp-0x30]
  42c0f6:	add    DWORD PTR [ebp-0x2c],eax
  42c0f9:	lea    eax,[ebp-0x40]
  42c0fc:	mov    edx,0x42c6cc
  42c101:	call   0x403d44
  42c106:	mov    DWORD PTR [ebp-0x28],0xba12
  42c10d:	lea    eax,[ebp-0x38]
  42c110:	mov    edx,0x42c640
  42c115:	call   0x403d44
  42c11a:	mov    DWORD PTR [ebp-0x30],0xc3a9b
  42c121:	lea    eax,[ebp-0x34]
  42c124:	mov    edx,0x42c634
  42c129:	call   0x403d44
  42c12e:	mov    DWORD PTR [ebp-0x28],0x24c4c
  42c135:	mov    eax,DWORD PTR [ebp-0x30]
  42c138:	add    eax,DWORD PTR [ebp-0x2c]
  42c13b:	add    eax,DWORD PTR [ebp-0x28]
  42c13e:	mov    DWORD PTR [ebp-0x30],eax
  42c141:	mov    eax,DWORD PTR [ebp-0x28]
  42c144:	sub    eax,DWORD PTR [ebp-0x30]
  42c147:	sub    eax,DWORD PTR [ebp-0x30]
  42c14a:	mov    DWORD PTR [ebp-0x2c],eax
  42c14d:	lea    eax,[ebp-0x38]
  42c150:	mov    edx,0x42c4b8
  42c155:	call   0x403d44
  42c15a:	mov    edx,0x42c4ec
  42c15f:	lea    eax,[ebp-0x40]
  42c162:	call   0x403d44
  42c167:	lea    eax,[ebp-0x34]
  42c16a:	mov    edx,0x42c6d8
  42c16f:	call   0x403d44
  42c174:	lea    eax,[ebp-0x3c]
  42c177:	mov    edx,0x42c6e4
  42c17c:	call   0x403d44
  42c181:	lea    eax,[ebp-0x44]
  42c184:	mov    edx,0x42c6f4
  42c189:	call   0x403d44
  42c18e:	lea    eax,[ebp-0x3c]
  42c191:	mov    edx,0x42c54c
  42c196:	call   0x403d44
  42c19b:	mov    DWORD PTR [ebp-0x2c],0xa374a
  42c1a2:	lea    eax,[ebp-0x44]
  42c1a5:	mov    edx,0x42c700
  42c1aa:	call   0x403d44
  42c1af:	lea    eax,[ebp-0x44]
  42c1b2:	mov    edx,0x42c70c
  42c1b7:	call   0x403d44
  42c1bc:	lea    eax,[ebp-0x38]
  42c1bf:	mov    edx,0x42c564
  42c1c4:	call   0x403d44
  42c1c9:	mov    eax,DWORD PTR [ebp-0x2c]
  42c1cc:	sub    eax,DWORD PTR [ebp-0x28]
  42c1cf:	sub    eax,DWORD PTR [ebp-0x2c]
  42c1d2:	sub    eax,DWORD PTR [ebp-0x28]
  42c1d5:	mov    DWORD PTR [ebp-0x28],eax
  42c1d8:	lea    eax,[ebp-0x44]
  42c1db:	mov    edx,0x42c718
  42c1e0:	call   0x403d44
  42c1e5:	lea    eax,[ebp-0x40]
  42c1e8:	mov    edx,0x42c564
  42c1ed:	call   0x403d44
  42c1f2:	lea    eax,[ebp-0x38]
  42c1f5:	mov    edx,0x42c4b8
  42c1fa:	call   0x403d44
  42c1ff:	lea    eax,[ebp-0x44]
  42c202:	mov    edx,0x42c61c
  42c207:	call   0x403d44
  42c20c:	lea    eax,[ebp-0x38]
  42c20f:	mov    edx,0x42c634
  42c214:	call   0x403d44
  42c219:	lea    eax,[ebp-0x34]
  42c21c:	mov    edx,0x42c724
  42c221:	call   0x403d44
  42c226:	lea    eax,[ebp-0x38]
  42c229:	mov    edx,0x42c61c
  42c22e:	call   0x403d44
  42c233:	lea    eax,[ebp-0x38]
  42c236:	mov    edx,0x42c734
  42c23b:	call   0x403d44
  42c240:	mov    eax,DWORD PTR [ebp-0x2c]
  42c243:	sub    eax,DWORD PTR [ebp-0x28]
  42c246:	sub    eax,DWORD PTR [ebp-0x2c]
  42c249:	mov    DWORD PTR [ebp-0x30],eax
  42c24c:	lea    eax,[ebp-0x44]
  42c24f:	mov    edx,0x42c744
  42c254:	call   0x403d44
  42c259:	lea    eax,[ebp-0x38]
  42c25c:	mov    edx,0x42c4b8
  42c261:	call   0x403d44
  42c266:	lea    eax,[ebp-0x3c]
  42c269:	mov    edx,0x42c54c
  42c26e:	call   0x403d44
  42c273:	mov    DWORD PTR [ebp-0x30],0x32e90
  42c27a:	lea    eax,[ebp-0x44]
  42c27d:	mov    edx,0x42c750
  42c282:	call   0x403d44
  42c287:	mov    eax,DWORD PTR [ebp-0x30]
  42c28a:	add    eax,DWORD PTR [ebp-0x2c]
  42c28d:	sub    eax,DWORD PTR [ebp-0x28]
  42c290:	add    eax,DWORD PTR [ebp-0x2c]
  42c293:	mov    DWORD PTR [ebp-0x28],eax
  42c296:	lea    eax,[ebp-0x38]
  42c299:	mov    edx,0x42c75c
  42c29e:	call   0x403d44
  42c2a3:	lea    eax,[ebp-0x34]
  42c2a6:	mov    edx,0x42c768
  42c2ab:	call   0x403d44
  42c2b0:	lea    eax,[ebp-0x40]
  42c2b3:	mov    edx,0x42c774
  42c2b8:	call   0x403d44
  42c2bd:	mov    DWORD PTR [ebp-0x28],0x37ccb
  42c2c4:	lea    eax,[ebp-0x44]
  42c2c7:	mov    edx,0x42c780
  42c2cc:	call   0x403d44
  42c2d1:	mov    DWORD PTR [ebp-0x30],0x4aab9
  42c2d8:	lea    eax,[ebp-0x34]
  42c2db:	mov    edx,0x42c78c
  42c2e0:	call   0x403d44
  42c2e5:	lea    eax,[ebp-0x3c]
  42c2e8:	mov    edx,0x42c54c
  42c2ed:	call   0x403d44
  42c2f2:	lea    eax,[ebp-0x3c]
  42c2f5:	mov    edx,0x42c79c
  42c2fa:	call   0x403d44
  42c2ff:	mov    edx,0x42c4ec
  42c304:	lea    eax,[ebp-0x38]
  42c307:	call   0x403d44
  42c30c:	mov    edx,0x42c4ec
  42c311:	lea    eax,[ebp-0x40]
  42c314:	call   0x403d44
  42c319:	lea    eax,[ebp-0x44]
  42c31c:	mov    edx,0x42c7a8
  42c321:	call   0x403d44
  42c326:	lea    eax,[ebp-0x40]
  42c329:	mov    edx,0x42c7b4
  42c32e:	call   0x403d44
  42c333:	lea    eax,[ebp-0x34]
  42c336:	mov    edx,0x42c7c0
  42c33b:	call   0x403d44
  42c340:	lea    eax,[ebp-0x38]
  42c343:	mov    edx,0x42c61c
  42c348:	call   0x403d44
  42c34d:	lea    eax,[ebp-0x44]
  42c350:	mov    edx,0x42c7cc
  42c355:	call   0x403d44
  42c35a:	mov    DWORD PTR [ebp-0x2c],0xb2080
  42c361:	lea    eax,[ebp-0x40]
  42c364:	mov    edx,0x42c7d8
  42c369:	call   0x403d44
  42c36e:	lea    eax,[ebp-0x3c]
  42c371:	mov    edx,0x42c564
  42c376:	call   0x403d44
  42c37b:	lea    eax,[ebp-0x38]
  42c37e:	mov    edx,0x42c7e8
  42c383:	call   0x403d44
  42c388:	mov    eax,DWORD PTR [ebp-0x28]
  42c38b:	sub    eax,DWORD PTR [ebp-0x30]
  42c38e:	mov    DWORD PTR [ebp-0x30],eax
  42c391:	lea    eax,[ebp-0x34]
  42c394:	mov    edx,0x42c54c
  42c399:	call   0x403d44
  42c39e:	lea    eax,[ebp-0x34]
  42c3a1:	mov    edx,0x42c634
  42c3a6:	call   0x403d44
  42c3ab:	mov    DWORD PTR [ebp-0x30],0x70f74
  42c3b2:	lea    eax,[ebp-0x34]
  42c3b5:	mov    edx,0x42c640
  42c3ba:	call   0x403d44
  42c3bf:	lea    eax,[ebp-0x40]
  42c3c2:	mov    edx,0x42c7f8
  42c3c7:	call   0x403d44
  42c3cc:	lea    eax,[ebp-0x3c]
  42c3cf:	mov    edx,0x42c804
  42c3d4:	call   0x403d44
  42c3d9:	lea    eax,[ebp-0x44]
  42c3dc:	mov    edx,0x42c4b8
  42c3e1:	call   0x403d44
  42c3e6:	lea    eax,[ebp-0x38]
  42c3e9:	mov    edx,0x42c814
  42c3ee:	call   0x403d44
  42c3f3:	lea    eax,[ebp-0x3c]
  42c3f6:	mov    edx,0x42c820
  42c3fb:	call   0x403d44
  42c400:	lea    eax,[ebp-0x44]
  42c403:	mov    edx,0x42c82c
  42c408:	call   0x403d44
  42c40d:	lea    eax,[ebp-0x3c]
  42c410:	mov    edx,0x42c838
  42c415:	call   0x403d44
  42c41a:	lea    eax,[ebp-0x3c]
  42c41d:	mov    edx,0x42c61c
  42c422:	call   0x403d44
  42c427:	lea    eax,[ebp-0x38]
  42c42a:	mov    edx,0x42c4b8
  42c42f:	call   0x403d44
  42c434:	mov    eax,DWORD PTR [ebp-0x28]
  42c437:	add    eax,DWORD PTR [ebp-0x30]
  42c43a:	mov    DWORD PTR [ebp-0x2c],eax
  42c43d:	mov    DWORD PTR [ebp-0x28],0x2f633
  42c444:	mov    DWORD PTR [ebp-0x2c],0x63e55
  42c44b:	lea    eax,[ebp-0x34]
  42c44e:	mov    edx,0x42c848
  42c453:	call   0x403d44
  42c458:	mov    DWORD PTR [ebp-0x2c],0x996e7
  42c45f:	mov    edx,0x42c4ec
  42c464:	lea    eax,[ebp-0x3c]
  42c467:	call   0x403d44
  42c46c:	lea    eax,[ebp-0x34]
  42c46f:	mov    edx,0x42c634
  42c474:	call   0x403d44
  42c479:	lea    eax,[ebp-0x3c]
  42c47c:	mov    edx,0x42c854
  42c481:	call   0x403d44
  42c486:	xor    eax,eax
  42c488:	pop    edx
  42c489:	pop    ecx
  42c48a:	pop    ecx
  42c48b:	mov    DWORD PTR fs:[eax],edx
  42c48e:	push   0x42c4a8
  42c493:	lea    eax,[ebp-0x44]
  42c496:	mov    edx,0x5
  42c49b:	call   0x403cd0
  42c4a0:	ret    
  42c4a1:	jmp    0x4036ac
  42c4a6:	jmp    0x42c493
  42c4a8:	mov    eax,DWORD PTR [ebp-0x8]
  42c4ab:	mov    esp,ebp
  42c4ad:	pop    ebp
  42c4ae:	ret    
  42c4af:	add    bh,bh
  42c4b1:	(bad)  
  42c4b2:	(bad)  
  42c4b3:	inc    DWORD PTR [ebx]
  42c4b5:	add    BYTE PTR [eax],al
  42c4b7:	add    BYTE PTR [eax+0x30],dl
  42c4ba:	bound  eax,QWORD PTR [eax]
  42c4bc:	(bad)  
  42c4bd:	(bad)  
  42c4be:	(bad)  
  42c4bf:	inc    DWORD PTR [eax+eax*1]
  42c4c2:	add    BYTE PTR [eax],al
  42c4c4:	push   eax
  42c4c5:	inc    esp
  42c4c6:	xor    al,0x32
  42c4c8:	add    BYTE PTR [eax],al
  42c4ca:	add    BYTE PTR [eax],al
  42c4cc:	(bad)  
  42c4cd:	(bad)  
  42c4ce:	(bad)  
  42c4cf:	inc    DWORD PTR [ebx]
  42c4d1:	add    BYTE PTR [eax],al
  42c4d3:	add    BYTE PTR [edx+0x63],al
  42c4d6:	xor    al,BYTE PTR [eax]
  42c4d8:	(bad)  
  42c4d9:	(bad)  
  42c4da:	(bad)  
  42c4db:	inc    DWORD PTR [ebx]
  42c4dd:	add    BYTE PTR [eax],al
  42c4df:	add    BYTE PTR [esi],dh
  42c4e1:	push   0x49
  42c4e3:	add    bh,bh
  42c4e5:	(bad)  
  42c4e6:	(bad)  
  42c4e7:	inc    DWORD PTR [eax+eax*1]
  42c4ea:	add    BYTE PTR [eax],al
  42c4ec:	dec    ebx
  42c4ed:	bound  edi,QWORD PTR [eax+0x57]
  42c4f0:	add    BYTE PTR [eax],al
  42c4f2:	add    BYTE PTR [eax],al
  42c4f4:	(bad)  
  42c4f5:	(bad)  
  42c4f6:	(bad)  
  42c4f7:	inc    DWORD PTR [eax+eax*1]
  42c4fa:	add    BYTE PTR [eax],al
  42c4fc:	inc    ebx
  42c4fd:	xor    eax,0x3435
  42c502:	add    BYTE PTR [eax],al
  42c504:	(bad)  
  42c505:	(bad)  
  42c506:	(bad)  
  42c507:	inc    DWORD PTR [edx]
  42c509:	add    BYTE PTR [eax],al
  42c50b:	add    BYTE PTR [ecx+0x70],ch
  42c50e:	add    BYTE PTR [eax],al
  42c510:	(bad)  
  42c511:	(bad)  
  42c512:	(bad)  
  42c513:	inc    DWORD PTR [ecx]
  42c515:	add    BYTE PTR [eax],al
  42c517:	add    BYTE PTR [ecx],bh
  42c519:	add    BYTE PTR [eax],al
  42c51b:	add    bh,bh
  42c51d:	(bad)  
  42c51e:	(bad)  
  42c51f:	inc    DWORD PTR [ecx]
  42c521:	add    BYTE PTR [eax],al
  42c523:	add    BYTE PTR [eax+0x0],ch
  42c526:	add    BYTE PTR [eax],al
  42c528:	(bad)  
  42c529:	(bad)  
  42c52a:	(bad)  
  42c52b:	inc    DWORD PTR [eax+eax*1]
  42c52e:	add    BYTE PTR [eax],al
  42c530:	arpl   WORD PTR [ebx+esi*1+0x55],ax
  42c534:	add    BYTE PTR [eax],al
  42c536:	add    BYTE PTR [eax],al
  42c538:	(bad)  
  42c539:	(bad)  
  42c53a:	(bad)  
  42c53b:	inc    DWORD PTR [ecx]
  42c53d:	add    BYTE PTR [eax],al
  42c53f:	add    BYTE PTR [eax],bh
  42c541:	add    BYTE PTR [eax],al
  42c543:	add    bh,bh
  42c545:	(bad)  
  42c546:	(bad)  
  42c547:	inc    DWORD PTR [ebx]
  42c549:	add    BYTE PTR [eax],al
  42c54b:	add    BYTE PTR [edx+0x57],ch
  42c54e:	addr16 add bh,bh
  42c551:	(bad)  
  42c552:	(bad)  
  42c553:	inc    DWORD PTR [ecx]
  42c555:	add    BYTE PTR [eax],al
  42c557:	add    BYTE PTR [edx+0x0],bl
  42c55a:	add    BYTE PTR [eax],al
  42c55c:	(bad)  
  42c55d:	(bad)  
  42c55e:	(bad)  
  42c55f:	inc    DWORD PTR [eax+eax*1]
  42c562:	add    BYTE PTR [eax],al
  42c564:	xor    al,0x70
  42c566:	xor    cl,BYTE PTR [edx+0x0]
  42c569:	add    BYTE PTR [eax],al
  42c56b:	add    bh,bh
  42c56d:	(bad)  
  42c56e:	(bad)  
  42c56f:	inc    DWORD PTR [edx]
  42c571:	add    BYTE PTR [eax],al
  42c573:	add    BYTE PTR [ebp+0x30],ah
  42c576:	add    BYTE PTR [eax],al
  42c578:	(bad)  
  42c579:	(bad)  
  42c57a:	(bad)  
  42c57b:	inc    DWORD PTR [eax+eax*1]
  42c57e:	add    BYTE PTR [eax],al
  42c580:	inc    esi
  42c581:	jb     0x42c5fd
  42c583:	add    BYTE PTR [bx+si],al
  42c586:	add    BYTE PTR [eax],al
  42c588:	(bad)  
  42c589:	(bad)  
  42c58a:	(bad)  
  42c58b:	inc    DWORD PTR [eax+eax*1]
  42c58e:	add    BYTE PTR [eax],al
  42c590:	ja     0x42c5d7
  42c592:	imul   ebp,DWORD PTR [esi+0x0],0x0
  42c596:	add    BYTE PTR [eax],al
  42c598:	(bad)  
  42c599:	(bad)  
  42c59a:	(bad)  
  42c59b:	inc    DWORD PTR [ecx]
  42c59d:	add    BYTE PTR [eax],al
  42c59f:	add    BYTE PTR [eax+eax*1+0x0],cl
  42c5a3:	add    bh,bh
  42c5a5:	(bad)  
  42c5a6:	(bad)  
  42c5a7:	inc    DWORD PTR [ebx]
  42c5a9:	add    BYTE PTR [eax],al
  42c5ab:	add    BYTE PTR [esi+0x53],cl
  42c5ae:	xor    DWORD PTR [eax],eax
  42c5b0:	(bad)  
  42c5b1:	(bad)  
  42c5b2:	(bad)  
  42c5b3:	inc    DWORD PTR [edx]
  42c5b5:	add    BYTE PTR [eax],al
  42c5b7:	add    BYTE PTR [edx+0x45],dh
  42c5ba:	add    BYTE PTR [eax],al
  42c5bc:	(bad)  
  42c5bd:	(bad)  
  42c5be:	(bad)  
  42c5bf:	inc    DWORD PTR [ecx]
  42c5c1:	add    BYTE PTR [eax],al
  42c5c3:	add    BYTE PTR [edi+0x0],ch
  42c5c6:	add    BYTE PTR [eax],al
  42c5c8:	(bad)  
  42c5c9:	(bad)  
  42c5ca:	(bad)  
  42c5cb:	inc    DWORD PTR [eax+eax*1]
  42c5ce:	add    BYTE PTR [eax],al
  42c5d0:	dec    edi
  42c5d1:	jbe    0x42c608
  42c5d3:	push   edx
  42c5d4:	add    BYTE PTR [eax],al
  42c5d6:	add    BYTE PTR [eax],al
  42c5d8:	(bad)  
  42c5d9:	(bad)  
  42c5da:	(bad)  
  42c5db:	inc    DWORD PTR [eax+eax*1]
  42c5de:	add    BYTE PTR [eax],al
  42c5e0:	inc    esp
  42c5e1:	push   0x38
  42c5e3:	add    BYTE PTR fs:[eax],al
  42c5e6:	add    BYTE PTR [eax],al
  42c5e8:	(bad)  
  42c5e9:	(bad)  
  42c5ea:	(bad)  
  42c5eb:	inc    DWORD PTR [ebx]
  42c5ed:	add    BYTE PTR [eax],al
  42c5ef:	add    BYTE PTR [eax],dh
  42c5f1:	dec    ecx
  42c5f2:	js     0x42c5f4
  42c5f4:	(bad)  
  42c5f5:	(bad)  
  42c5f6:	(bad)  
  42c5f7:	inc    DWORD PTR [eax+eax*1]
  42c5fa:	add    BYTE PTR [eax],al
  42c5fc:	jns    0x42c64e
  42c5fe:	xor    DWORD PTR [edx+0x0],ebp
  42c601:	add    BYTE PTR [eax],al
  42c603:	add    bh,bh
  42c605:	(bad)  
  42c606:	(bad)  
  42c607:	inc    DWORD PTR [eax+eax*1]
  42c60a:	add    BYTE PTR [eax],al
  42c60c:	jp     0x42c67a
  42c60e:	outs   dx,BYTE PTR ds:[esi]
  42c60f:	xor    al,BYTE PTR [eax]
  42c611:	add    BYTE PTR [eax],al
  42c613:	add    bh,bh
  42c615:	(bad)  
  42c616:	(bad)  
  42c617:	inc    DWORD PTR [edx]
  42c619:	add    BYTE PTR [eax],al
  42c61b:	add    BYTE PTR [ebx+0x33],ah
  42c61e:	add    BYTE PTR [eax],al
  42c620:	(bad)  
  42c621:	(bad)  
  42c622:	(bad)  
  42c623:	inc    DWORD PTR [ecx]
  42c625:	add    BYTE PTR [eax],al
  42c627:	add    BYTE PTR [edi+0x0],al
  42c62a:	add    BYTE PTR [eax],al
  42c62c:	(bad)  
  42c62d:	(bad)  
  42c62e:	(bad)  
  42c62f:	inc    DWORD PTR [edx]
  42c631:	add    BYTE PTR [eax],al
  42c633:	add    BYTE PTR [eax+edi*2+0x0],cl
  42c637:	add    bh,bh
  42c639:	(bad)  
  42c63a:	(bad)  
  42c63b:	inc    DWORD PTR [ebx]
  42c63d:	add    BYTE PTR [eax],al
  42c63f:	add    BYTE PTR [edi+0x44],ch
  42c642:	push   0x0
  42c644:	(bad)  
  42c645:	(bad)  
  42c646:	(bad)  
  42c647:	inc    DWORD PTR [eax+eax*1]
  42c64a:	add    BYTE PTR [eax],al
  42c64c:	xor    dh,BYTE PTR [ebp+0x76]
  42c64f:	pop    eax
  42c650:	add    BYTE PTR [eax],al
  42c652:	add    BYTE PTR [eax],al
  42c654:	(bad)  
  42c655:	(bad)  
  42c656:	(bad)  
  42c657:	inc    DWORD PTR [edx]
  42c659:	add    BYTE PTR [eax],al
  42c65b:	add    BYTE PTR [ebp+0x4a],dh
  42c65e:	add    BYTE PTR [eax],al
  42c660:	(bad)  
  42c661:	(bad)  
  42c662:	(bad)  
  42c663:	inc    DWORD PTR [eax+eax*1]
  42c666:	add    BYTE PTR [eax],al
  42c668:	xor    al,0x61
  42c66a:	xor    ah,BYTE PTR [ebx+0x0]
  42c66d:	add    BYTE PTR [eax],al
  42c66f:	add    bh,bh
  42c671:	(bad)  
  42c672:	(bad)  
  42c673:	inc    DWORD PTR [ebx]
  42c675:	add    BYTE PTR [eax],al
  42c677:	add    BYTE PTR [ebx+0x52],dl
  42c67a:	xor    al,BYTE PTR [eax]
  42c67c:	(bad)  
  42c67d:	(bad)  
  42c67e:	(bad)  
  42c67f:	inc    DWORD PTR [ebx]
  42c681:	add    BYTE PTR [eax],al
  42c683:	add    BYTE PTR [ebp+0x48],dl
  42c686:	outs   dx,DWORD PTR ds:[esi]
  42c687:	add    bh,bh
  42c689:	(bad)  
  42c68a:	(bad)  
  42c68b:	inc    DWORD PTR [edx]
  42c68d:	add    BYTE PTR [eax],al
  42c68f:	add    BYTE PTR [ecx+0x43],bl
  42c692:	add    BYTE PTR [eax],al
  42c694:	(bad)  
  42c695:	(bad)  
  42c696:	(bad)  
  42c697:	inc    DWORD PTR [ebx]
  42c699:	add    BYTE PTR [eax],al
  42c69b:	add    BYTE PTR [eax],bh
  42c69d:	imul   eax,DWORD PTR [bx+si],0xffffffff
  42c6a1:	(bad)  
  42c6a2:	(bad)  
  42c6a3:	inc    DWORD PTR [ebx]
  42c6a5:	add    BYTE PTR [eax],al
  42c6a7:	add    BYTE PTR [eax+0x36],bl
  42c6aa:	push   edi
  42c6ab:	add    bh,bh
  42c6ad:	(bad)  
  42c6ae:	(bad)  
  42c6af:	inc    DWORD PTR [ebx]
  42c6b1:	add    BYTE PTR [eax],al
  42c6b3:	add    BYTE PTR [esi],dh
  42c6b5:	bound  edi,QWORD PTR [edx+0x0]
  42c6b8:	(bad)  
  42c6b9:	(bad)  
  42c6ba:	(bad)  
  42c6bb:	inc    DWORD PTR [ebx]
  42c6bd:	add    BYTE PTR [eax],al
  42c6bf:	add    BYTE PTR [esi+0x4e],ah
  42c6c2:	xor    eax,0xffffff00
  42c6c7:	inc    DWORD PTR [ebx]
  42c6c9:	add    BYTE PTR [eax],al
  42c6cb:	add    BYTE PTR [ebp+0x6d],ah
  42c6ce:	jae    0x42c6d0
  42c6d0:	(bad)  
  42c6d1:	(bad)  
  42c6d2:	(bad)  
  42c6d3:	inc    DWORD PTR [edx]
  42c6d5:	add    BYTE PTR [eax],al
  42c6d7:	add    BYTE PTR [ebp+0x63],al
  42c6da:	add    BYTE PTR [eax],al
  42c6dc:	(bad)  
  42c6dd:	(bad)  
  42c6de:	(bad)  
  42c6df:	inc    DWORD PTR [eax+eax*1]
  42c6e2:	add    BYTE PTR [eax],al
  42c6e4:	jb     0x42c71d
  42c6e6:	pop    ecx
  42c6e7:	xor    DWORD PTR [eax],eax
  42c6e9:	add    BYTE PTR [eax],al
  42c6eb:	add    bh,bh
  42c6ed:	(bad)  
  42c6ee:	(bad)  
  42c6ef:	inc    DWORD PTR [ecx]
  42c6f1:	add    BYTE PTR [eax],al
  42c6f3:	add    BYTE PTR [ecx+0x0],bh
  42c6f6:	add    BYTE PTR [eax],al
  42c6f8:	(bad)  
  42c6f9:	(bad)  
  42c6fa:	(bad)  
  42c6fb:	inc    DWORD PTR [ecx]
  42c6fd:	add    BYTE PTR [eax],al
  42c6ff:	add    BYTE PTR [eax+eax*1+0x0],ch
  42c703:	add    bh,bh
  42c705:	(bad)  
  42c706:	(bad)  
  42c707:	inc    DWORD PTR [ebx]
  42c709:	add    BYTE PTR [eax],al
  42c70b:	add    BYTE PTR [eax],dh
  42c70d:	cmp    DWORD PTR [eax+eax*1-0x1],edx
  42c711:	(bad)  
  42c712:	(bad)  
  42c713:	inc    DWORD PTR [ecx]
  42c715:	add    BYTE PTR [eax],al
  42c717:	add    BYTE PTR [edi+0x0],cl
  42c71a:	add    BYTE PTR [eax],al
  42c71c:	(bad)  
  42c71d:	(bad)  
  42c71e:	(bad)  
  42c71f:	inc    DWORD PTR [eax+eax*1]
  42c722:	add    BYTE PTR [eax],al
  42c724:	ja     0x42c776
  42c726:	pop    edx
  42c727:	bound  eax,QWORD PTR [eax]
  42c729:	add    BYTE PTR [eax],al
  42c72b:	add    bh,bh
  42c72d:	(bad)  
  42c72e:	(bad)  
  42c72f:	inc    DWORD PTR [eax+eax*1]
  42c732:	add    BYTE PTR [eax],al
  42c734:	pop    edx
  42c735:	ja     0x42c768
  42c737:	push   eax
  42c738:	add    BYTE PTR [eax],al
  42c73a:	add    BYTE PTR [eax],al
  42c73c:	(bad)  
  42c73d:	(bad)  
  42c73e:	(bad)  
  42c73f:	inc    DWORD PTR [edx]
  42c741:	add    BYTE PTR [eax],al
  42c743:	add    BYTE PTR [eax],dh
  42c745:	dec    edi
  42c746:	add    BYTE PTR [eax],al
  42c748:	(bad)  
  42c749:	(bad)  
  42c74a:	(bad)  
  42c74b:	inc    DWORD PTR [ebx]
  42c74d:	add    BYTE PTR [eax],al
  42c74f:	add    BYTE PTR [eax+0x79],bl
  42c752:	inc    ebp
  42c753:	add    bh,bh
  42c755:	(bad)  
  42c756:	(bad)  
  42c757:	inc    DWORD PTR [ecx]
  42c759:	add    BYTE PTR [eax],al
  42c75b:	add    BYTE PTR [ebp+0x0],ch
  42c75e:	add    BYTE PTR [eax],al
  42c760:	(bad)  
  42c761:	(bad)  
  42c762:	(bad)  
  42c763:	inc    DWORD PTR [ebx]
  42c765:	add    BYTE PTR [eax],al
  42c767:	add    BYTE PTR [esi],dh
  42c769:	pop    eax
  42c76a:	pop    eax
  42c76b:	add    bh,bh
  42c76d:	(bad)  
  42c76e:	(bad)  
  42c76f:	inc    DWORD PTR [edx]
  42c771:	add    BYTE PTR [eax],al
  42c773:	add    BYTE PTR [ecx],dh
  42c775:	jne    0x42c777
  42c777:	add    bh,bh
  42c779:	(bad)  
  42c77a:	(bad)  
  42c77b:	inc    DWORD PTR [ecx]
  42c77d:	add    BYTE PTR [eax],al
  42c77f:	add    BYTE PTR [eax+eax*1+0x0],dl
  42c783:	add    bh,bh
  42c785:	(bad)  
  42c786:	(bad)  
  42c787:	inc    DWORD PTR [eax+eax*1]
  42c78a:	add    BYTE PTR [eax],al
  42c78c:	xor    BYTE PTR [eax+ebp*2+0x33],cl
  42c790:	add    BYTE PTR [eax],al
  42c792:	add    BYTE PTR [eax],al
  42c794:	(bad)  
  42c795:	(bad)  
  42c796:	(bad)  
  42c797:	inc    DWORD PTR [ecx]
  42c799:	add    BYTE PTR [eax],al
  42c79b:	add    BYTE PTR [edx+0x0],ch
  42c79e:	add    BYTE PTR [eax],al
  42c7a0:	(bad)  
  42c7a1:	(bad)  
  42c7a2:	(bad)  
  42c7a3:	inc    DWORD PTR [ecx]
  42c7a5:	add    BYTE PTR [eax],al
  42c7a7:	add    BYTE PTR [eax+eax*1],dh
  42c7aa:	add    BYTE PTR [eax],al
  42c7ac:	(bad)  
  42c7ad:	(bad)  
  42c7ae:	(bad)  
  42c7af:	inc    DWORD PTR [ebx]
  42c7b1:	add    BYTE PTR [eax],al
  42c7b3:	add    BYTE PTR [ecx+0x51],al
  42c7b6:	bound  eax,QWORD PTR [eax]
  42c7b8:	(bad)  
  42c7b9:	(bad)  
  42c7ba:	(bad)  
  42c7bb:	inc    DWORD PTR [ebx]
  42c7bd:	add    BYTE PTR [eax],al
  42c7bf:	add    BYTE PTR [ecx+eiz*2],dh
  42c7c2:	cmp    DWORD PTR [eax],eax
  42c7c4:	(bad)  
  42c7c5:	(bad)  
  42c7c6:	(bad)  
  42c7c7:	inc    DWORD PTR [ebx]
  42c7c9:	add    BYTE PTR [eax],al
  42c7cb:	add    BYTE PTR [edx+0x32],cl
  42c7ce:	dec    esp
  42c7cf:	add    bh,bh
  42c7d1:	(bad)  
  42c7d2:	(bad)  
  42c7d3:	inc    DWORD PTR [eax+eax*1]
  42c7d6:	add    BYTE PTR [eax],al
  42c7d8:	addr16 dec edi
  42c7da:	fs dec eax
  42c7dc:	add    BYTE PTR [eax],al
  42c7de:	add    BYTE PTR [eax],al
  42c7e0:	(bad)  
  42c7e1:	(bad)  
  42c7e2:	(bad)  
  42c7e3:	inc    DWORD PTR [eax+eax*1]
  42c7e6:	add    BYTE PTR [eax],al
  42c7e8:	jne    0x42c85b
  42c7ea:	push   eax
  42c7eb:	popa   
  42c7ec:	add    BYTE PTR [eax],al
  42c7ee:	add    BYTE PTR [eax],al
  42c7f0:	(bad)  
  42c7f1:	(bad)  
  42c7f2:	(bad)  
  42c7f3:	inc    DWORD PTR [edx]
  42c7f5:	add    BYTE PTR [eax],al
  42c7f7:	add    BYTE PTR [edx+0x45],bh
  42c7fa:	add    BYTE PTR [eax],al
  42c7fc:	(bad)  
  42c7fd:	(bad)  
  42c7fe:	(bad)  
  42c7ff:	inc    DWORD PTR [eax+eax*1]
  42c802:	add    BYTE PTR [eax],al
  42c804:	pop    eax
  42c805:	xor    ebp,DWORD PTR [ebp+0x72]
  42c808:	add    BYTE PTR [eax],al
  42c80a:	add    BYTE PTR [eax],al
  42c80c:	(bad)  
  42c80d:	(bad)  
  42c80e:	(bad)  
  42c80f:	inc    DWORD PTR [ecx]
  42c811:	add    BYTE PTR [eax],al
  42c813:	add    BYTE PTR [ebp+0x0],al
  42c816:	add    BYTE PTR [eax],al
  42c818:	(bad)  
  42c819:	(bad)  
  42c81a:	(bad)  
  42c81b:	inc    DWORD PTR [ebx]
  42c81d:	add    BYTE PTR [eax],al
  42c81f:	add    BYTE PTR [edx+0x39],bl
  42c822:	outs   dx,DWORD PTR ds:[esi]
  42c823:	add    bh,bh
  42c825:	(bad)  
  42c826:	(bad)  
  42c827:	inc    DWORD PTR [edx]
  42c829:	add    BYTE PTR [eax],al
  42c82b:	add    BYTE PTR [edx+0x79],dl
  42c82e:	add    BYTE PTR [eax],al
  42c830:	(bad)  
  42c831:	(bad)  
  42c832:	(bad)  
  42c833:	inc    DWORD PTR [eax+eax*1]
  42c836:	add    BYTE PTR [eax],al
  42c838:	jb     0x42c8a4
  42c83a:	bound  esi,QWORD PTR [edi]
  42c83c:	add    BYTE PTR [eax],al
  42c83e:	add    BYTE PTR [eax],al
  42c840:	(bad)  
  42c841:	(bad)  
  42c842:	(bad)  
  42c843:	inc    DWORD PTR [edx]
  42c845:	add    BYTE PTR [eax],al
  42c847:	add    BYTE PTR [edx],dh
  42c849:	cmp    BYTE PTR [eax],al
  42c84b:	add    bh,bh
  42c84d:	(bad)  
  42c84e:	(bad)  
  42c84f:	inc    DWORD PTR [ebx]
  42c851:	add    BYTE PTR [eax],al
  42c853:	add    BYTE PTR [edx+0x30],al
  42c856:	push   ebp
  42c857:	add    BYTE PTR [eax-0x77],ah
  42c85a:	(bad)  
  42c85b:	mov    esi,edx
  42c85d:	mov    ecx,ecx
  42c85f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c861:	popa   
  42c862:	ret    
  42c863:	nop
  42c864:	push   ebp
  42c865:	mov    ebp,esp
  42c867:	add    esp,0xffffffa8
  42c86a:	xor    eax,eax
  42c86c:	mov    DWORD PTR [ebp-0x58],eax
  42c86f:	mov    DWORD PTR [ebp-0x10],eax
  42c872:	mov    DWORD PTR [ebp-0x14],eax
  42c875:	mov    DWORD PTR [ebp-0x28],eax
  42c878:	mov    DWORD PTR [ebp-0x34],eax
  42c87b:	mov    DWORD PTR [ebp-0x38],eax
  42c87e:	mov    DWORD PTR [ebp-0x48],eax
  42c881:	mov    DWORD PTR [ebp-0x4c],eax
  42c884:	mov    DWORD PTR [ebp-0x50],eax
  42c887:	mov    DWORD PTR [ebp-0x54],eax
  42c88a:	xor    eax,eax
  42c88c:	push   ebp
  42c88d:	push   0x42d028
  42c892:	push   DWORD PTR fs:[eax]
  42c895:	mov    DWORD PTR fs:[eax],esp
  42c898:	xor    eax,eax
  42c89a:	mov    DWORD PTR [ebp-0x18],eax
  42c89d:	call   0x405cf0
  42c8a2:	call   0x405d78
  42c8a7:	call   0x405ca8
  42c8ac:	call   0x405c20
  42c8b1:	call   0x405cf0
  42c8b6:	call   0x405d78
  42c8bb:	call   0x405ca8
  42c8c0:	call   0x405c20
  42c8c5:	call   0x405cf0
  42c8ca:	call   0x405d78
  42c8cf:	call   0x405ca8
  42c8d4:	call   0x405c20
  42c8d9:	call   0x405cf0
  42c8de:	call   0x405d78
  42c8e3:	call   0x405ca8
  42c8e8:	call   0x405c20
  42c8ed:	inc    DWORD PTR [ebp-0x18]
  42c8f0:	cmp    DWORD PTR [ebp-0x18],0x1312d02
  42c8f7:	jne    0x42c89d
  42c8f9:	lea    eax,[ebp-0x50]
  42c8fc:	mov    edx,0x42d03c
  42c901:	call   0x403d44
  42c906:	mov    DWORD PTR [ebp-0x3c],0x1c564
  42c90d:	mov    eax,DWORD PTR [ebp-0x18]
  42c910:	sub    eax,0x1312d00
  42c915:	mov    DWORD PTR [ebp-0x1c],eax
  42c918:	lea    eax,[ebp-0x4c]
  42c91b:	mov    edx,0x42d048
  42c920:	call   0x403d44
  42c925:	lea    eax,[ebp-0x48]
  42c928:	mov    edx,0x42d054
  42c92d:	call   0x403d44
  42c932:	cmp    DWORD PTR [ebp-0x1c],0x2
  42c936:	jne    0x42c95f
  42c938:	lea    eax,[ebp-0x54]
  42c93b:	mov    edx,0x42d064
  42c940:	call   0x403d44
  42c945:	lea    eax,[ebp-0x34]
  42c948:	mov    edx,0x42d070
  42c94d:	call   0x403d44
  42c952:	lea    eax,[ebp-0x48]
  42c955:	mov    edx,0x42d07c
  42c95a:	call   0x403d44
  42c95f:	lea    eax,[ebp-0x50]
  42c962:	mov    edx,0x42d088
  42c967:	call   0x403d44
  42c96c:	cmp    DWORD PTR [ebp-0x1c],0x1
  42c970:	jne    0x42c999
  42c972:	lea    eax,[ebp-0x48]
  42c975:	mov    edx,0x42d094
  42c97a:	call   0x403d44
  42c97f:	lea    eax,[ebp-0x34]
  42c982:	mov    edx,0x42d0a0
  42c987:	call   0x403d44
  42c98c:	lea    eax,[ebp-0x54]
  42c98f:	mov    edx,0x42d0b0
  42c994:	call   0x403d44
  42c999:	lea    eax,[ebp-0x50]
  42c99c:	mov    edx,0x42d064
  42c9a1:	call   0x403d44
  42c9a6:	lea    eax,[ebp-0x4c]
  42c9a9:	mov    edx,0x42d0c0
  42c9ae:	call   0x403d44
  42c9b3:	mov    eax,DWORD PTR [ebp-0x3c]
  42c9b6:	add    eax,DWORD PTR [ebp-0x3c]
  42c9b9:	mov    DWORD PTR [ebp-0x40],eax
  42c9bc:	lea    ecx,[ebp-0x38]
  42c9bf:	mov    edx,DWORD PTR [ebp-0x34]
  42c9c2:	mov    eax,0x42d0d0
  42c9c7:	call   0x42a86c
  42c9cc:	lea    eax,[ebp-0x48]
  42c9cf:	mov    edx,0x42d0e8
  42c9d4:	call   0x403d44
  42c9d9:	mov    eax,DWORD PTR [ebp-0x38]
  42c9dc:	call   0x404148
  42c9e1:	push   eax
  42c9e2:	call   0x405cb0
  42c9e7:	mov    DWORD PTR [ebp-0x2c],eax
  42c9ea:	lea    eax,[ebp-0x48]
  42c9ed:	mov    edx,0x42d0f4
  42c9f2:	call   0x403d44
  42c9f7:	lea    eax,[ebp-0x50]
  42c9fa:	mov    edx,0x42d100
  42c9ff:	call   0x403d44
  42ca04:	mov    eax,DWORD PTR [ebp-0x2c]
  42ca07:	call   0x42bb84
  42ca0c:	mov    DWORD PTR [ebp-0x24],eax
  42ca0f:	lea    eax,[ebp-0x54]
  42ca12:	mov    edx,0x42d10c
  42ca17:	call   0x403d44
  42ca1c:	lea    ecx,[ebp-0x28]
  42ca1f:	mov    edx,DWORD PTR [ebp-0x34]
  42ca22:	mov    eax,0x42d118
  42ca27:	call   0x42a86c
  42ca2c:	lea    eax,[ebp-0x54]
  42ca2f:	mov    edx,0x42d07c
  42ca34:	call   0x403d44
  42ca39:	lea    eax,[ebp-0x50]
  42ca3c:	mov    edx,0x42d094
  42ca41:	call   0x403d44
  42ca46:	mov    eax,DWORD PTR [ebp-0x28]
  42ca49:	call   0x404148
  42ca4e:	push   eax
  42ca4f:	mov    eax,DWORD PTR [ebp-0x2c]
  42ca52:	push   eax
  42ca53:	call   DWORD PTR [ebp-0x24]
  42ca56:	mov    DWORD PTR [ebp-0x20],eax
  42ca59:	mov    eax,DWORD PTR [ebp-0x44]
  42ca5c:	add    eax,DWORD PTR [ebp-0x44]
  42ca5f:	sub    eax,DWORD PTR [ebp-0x3c]
  42ca62:	mov    DWORD PTR [ebp-0x3c],eax
  42ca65:	lea    eax,[ebp-0x48]
  42ca68:	mov    edx,0x42d094
  42ca6d:	call   0x403d44
  42ca72:	lea    eax,[ebp-0x48]
  42ca75:	mov    edx,0x42d130
  42ca7a:	call   0x403d44
  42ca7f:	lea    eax,[ebp-0x48]
  42ca82:	mov    edx,0x42d07c
  42ca87:	call   0x403d44
  42ca8c:	lea    eax,[ebp-0x4c]
  42ca8f:	mov    edx,0x42d13c
  42ca94:	call   0x403d44
  42ca99:	lea    eax,[ebp-0x14]
  42ca9c:	call   0x405de8
  42caa1:	lea    eax,[ebp-0x54]
  42caa4:	mov    edx,0x42d148
  42caa9:	call   0x403d44
  42caae:	mov    eax,DWORD PTR [ebp-0x3c]
  42cab1:	sub    eax,DWORD PTR [ebp-0x40]
  42cab4:	mov    DWORD PTR [ebp-0x40],eax
  42cab7:	mov    eax,DWORD PTR [ebp-0x14]
  42caba:	call   0x403f48
  42cabf:	sub    eax,0xfe
  42cac4:	mov    DWORD PTR [ebp-0x30],eax
  42cac7:	lea    eax,[ebp-0x48]
  42caca:	mov    edx,0x42d154
  42cacf:	call   0x403d44
  42cad4:	lea    eax,[ebp-0x10]
  42cad7:	push   eax
  42cad8:	mov    ecx,0xff
  42cadd:	mov    edx,DWORD PTR [ebp-0x30]
  42cae0:	mov    eax,DWORD PTR [ebp-0x14]
  42cae3:	call   0x4041a0
  42cae8:	mov    eax,DWORD PTR [ebp-0x40]
  42caeb:	add    eax,DWORD PTR [ebp-0x44]
  42caee:	sub    eax,DWORD PTR [ebp-0x44]
  42caf1:	mov    DWORD PTR [ebp-0x3c],eax
  42caf4:	lea    eax,[ebp-0x54]
  42caf7:	mov    edx,0x42d054
  42cafc:	call   0x403d44
  42cb01:	mov    eax,DWORD PTR [ebp-0x14]
  42cb04:	call   0x403f48
  42cb09:	sub    eax,0xff
  42cb0e:	mov    DWORD PTR [ebp-0x30],eax
  42cb11:	mov    DWORD PTR [ebp-0x40],0xc1ffc
  42cb18:	lea    eax,[ebp-0x14]
  42cb1b:	push   eax
  42cb1c:	mov    ecx,DWORD PTR [ebp-0x30]
  42cb1f:	mov    edx,0x1
  42cb24:	mov    eax,DWORD PTR [ebp-0x14]
  42cb27:	call   0x4041a0
  42cb2c:	lea    eax,[ebp-0x54]
  42cb2f:	mov    edx,0x42d094
  42cb34:	call   0x403d44
  42cb39:	lea    eax,[ebp-0x50]
  42cb3c:	mov    edx,0x42d094
  42cb41:	call   0x403d44
  42cb46:	lea    ecx,[ebp-0x58]
  42cb49:	mov    edx,DWORD PTR [ebp-0x10]
  42cb4c:	mov    eax,DWORD PTR [ebp-0x14]
  42cb4f:	call   0x42a86c
  42cb54:	mov    edx,DWORD PTR [ebp-0x58]
  42cb57:	lea    eax,[ebp-0x14]
  42cb5a:	call   0x403d44
  42cb5f:	mov    edx,0x42d0b0
  42cb64:	lea    eax,[ebp-0x48]
  42cb67:	call   0x403d44
  42cb6c:	lea    eax,[ebp-0x50]
  42cb6f:	mov    edx,0x42d160
  42cb74:	call   0x403d44
  42cb79:	lea    eax,[ebp-0x14]
  42cb7c:	call   0x404198
  42cb81:	mov    DWORD PTR [ebp-0xc],eax
  42cb84:	mov    DWORD PTR [ebp-0x3c],0xf12b6
  42cb8b:	lea    eax,[ebp-0x54]
  42cb8e:	mov    edx,0x42d094
  42cb93:	call   0x403d44
  42cb98:	lea    eax,[ebp-0x14]
  42cb9b:	call   0x404198
  42cba0:	add    eax,0x8
  42cba3:	mov    DWORD PTR [ebp-0x30],eax
  42cba6:	lea    eax,[ebp-0x48]
  42cba9:	mov    edx,0x42d16c
  42cbae:	call   0x403d44
  42cbb3:	push   0x40
  42cbb5:	push   0x3000
  42cbba:	mov    eax,DWORD PTR [ebp-0xc]
  42cbbd:	mov    eax,DWORD PTR [eax]
  42cbbf:	push   eax
  42cbc0:	push   0x0
  42cbc2:	call   DWORD PTR [ebp-0x20]
  42cbc5:	mov    DWORD PTR [ebp-0x8],eax
  42cbc8:	lea    eax,[ebp-0x50]
  42cbcb:	mov    edx,0x42d178
  42cbd0:	call   0x403d44
  42cbd5:	mov    eax,DWORD PTR [ebp-0xc]
  42cbd8:	mov    ecx,DWORD PTR [eax]
  42cbda:	mov    edx,DWORD PTR [ebp-0x30]
  42cbdd:	mov    eax,DWORD PTR [ebp-0x8]
  42cbe0:	call   0x42c858
  42cbe5:	lea    eax,[ebp-0x50]
  42cbe8:	mov    edx,0x42d054
  42cbed:	call   0x403d44
  42cbf2:	lea    eax,[ebp-0x54]
  42cbf5:	mov    edx,0x42d184
  42cbfa:	call   0x403d44
  42cbff:	lea    eax,[ebp-0x14]
  42cc02:	call   0x404198
  42cc07:	add    eax,0x8
  42cc0a:	mov    edx,DWORD PTR [ebp-0xc]
  42cc0d:	add    eax,DWORD PTR [edx]
  42cc0f:	mov    DWORD PTR [ebp-0x30],eax
  42cc12:	lea    eax,[ebp-0x48]
  42cc15:	mov    edx,0x42d094
  42cc1a:	call   0x403d44
  42cc1f:	push   0x4
  42cc21:	push   0x3000
  42cc26:	mov    eax,DWORD PTR [ebp-0xc]
  42cc29:	mov    eax,DWORD PTR [eax+0x4]
  42cc2c:	push   eax
  42cc2d:	push   0x0
  42cc2f:	call   DWORD PTR [ebp-0x20]
  42cc32:	mov    DWORD PTR [ebp-0x4],eax
  42cc35:	lea    eax,[ebp-0x4c]
  42cc38:	mov    edx,0x42d064
  42cc3d:	call   0x403d44
  42cc42:	mov    eax,DWORD PTR [ebp-0xc]
  42cc45:	mov    ecx,DWORD PTR [eax+0x4]
  42cc48:	mov    edx,DWORD PTR [ebp-0x30]
  42cc4b:	mov    eax,DWORD PTR [ebp-0x4]
  42cc4e:	call   0x42c858
  42cc53:	mov    DWORD PTR [ebp-0x3c],0xad2d5
  42cc5a:	lea    eax,[ebp-0x4c]
  42cc5d:	mov    edx,0x42d054
  42cc62:	call   0x403d44
  42cc67:	lea    eax,[ebp-0x54]
  42cc6a:	mov    edx,0x42d094
  42cc6f:	call   0x403d44
  42cc74:	lea    eax,[ebp-0x4c]
  42cc77:	mov    edx,0x42d094
  42cc7c:	call   0x403d44
  42cc81:	lea    eax,[ebp-0x4c]
  42cc84:	mov    edx,0x42d094
  42cc89:	call   0x403d44
  42cc8e:	lea    eax,[ebp-0x54]
  42cc91:	mov    edx,0x42d190
  42cc96:	call   0x403d44
  42cc9b:	mov    eax,DWORD PTR [ebp-0x40]
  42cc9e:	add    eax,DWORD PTR [ebp-0x3c]
  42cca1:	add    eax,DWORD PTR [ebp-0x40]
  42cca4:	sub    eax,DWORD PTR [ebp-0x40]
  42cca7:	mov    DWORD PTR [ebp-0x44],eax
  42ccaa:	lea    eax,[ebp-0x54]
  42ccad:	mov    edx,0x42d054
  42ccb2:	call   0x403d44
  42ccb7:	lea    eax,[ebp-0x50]
  42ccba:	mov    edx,0x42d19c
  42ccbf:	call   0x403d44
  42ccc4:	lea    eax,[ebp-0x54]
  42ccc7:	mov    edx,0x42d054
  42cccc:	call   0x403d44
  42ccd1:	mov    edx,0x42d0b0
  42ccd6:	lea    eax,[ebp-0x50]
  42ccd9:	call   0x403d44
  42ccde:	lea    eax,[ebp-0x48]
  42cce1:	mov    edx,0x42d054
  42cce6:	call   0x403d44
  42cceb:	lea    eax,[ebp-0x4c]
  42ccee:	mov    edx,0x42d1ac
  42ccf3:	call   0x403d44
  42ccf8:	lea    eax,[ebp-0x48]
  42ccfb:	mov    edx,0x42d1b8
  42cd00:	call   0x403d44
  42cd05:	lea    eax,[ebp-0x4c]
  42cd08:	mov    edx,0x42d1c4
  42cd0d:	call   0x403d44
  42cd12:	mov    edx,0x42d0b0
  42cd17:	lea    eax,[ebp-0x54]
  42cd1a:	call   0x403d44
  42cd1f:	lea    eax,[ebp-0x4c]
  42cd22:	mov    edx,0x42d064
  42cd27:	call   0x403d44
  42cd2c:	mov    eax,DWORD PTR [ebp-0x44]
  42cd2f:	add    eax,DWORD PTR [ebp-0x40]
  42cd32:	sub    eax,DWORD PTR [ebp-0x3c]
  42cd35:	add    DWORD PTR [ebp-0x44],eax
  42cd38:	lea    eax,[ebp-0x48]
  42cd3b:	mov    edx,0x42d1d0
  42cd40:	call   0x403d44
  42cd45:	mov    eax,DWORD PTR [ebp-0x3c]
  42cd48:	add    eax,DWORD PTR [ebp-0x44]
  42cd4b:	mov    DWORD PTR [ebp-0x40],eax
  42cd4e:	mov    DWORD PTR [ebp-0x40],0xa70b9
  42cd55:	lea    eax,[ebp-0x48]
  42cd58:	mov    edx,0x42d054
  42cd5d:	call   0x403d44
  42cd62:	lea    eax,[ebp-0x50]
  42cd65:	mov    edx,0x42d054
  42cd6a:	call   0x403d44
  42cd6f:	lea    eax,[ebp-0x50]
  42cd72:	mov    edx,0x42d054
  42cd77:	call   0x403d44
  42cd7c:	lea    eax,[ebp-0x50]
  42cd7f:	mov    edx,0x42d1e0
  42cd84:	call   0x403d44
  42cd89:	lea    eax,[ebp-0x48]
  42cd8c:	mov    edx,0x42d1ec
  42cd91:	call   0x403d44
  42cd96:	lea    eax,[ebp-0x50]
  42cd99:	mov    edx,0x42d094
  42cd9e:	call   0x403d44
  42cda3:	lea    eax,[ebp-0x48]
  42cda6:	mov    edx,0x42d1f8
  42cdab:	call   0x403d44
  42cdb0:	lea    eax,[ebp-0x4c]
  42cdb3:	mov    edx,0x42d07c
  42cdb8:	call   0x403d44
  42cdbd:	mov    DWORD PTR [ebp-0x3c],0x60b7e
  42cdc4:	mov    DWORD PTR [ebp-0x44],0xe0394
  42cdcb:	mov    edx,0x42d0b0
  42cdd0:	lea    eax,[ebp-0x50]
  42cdd3:	call   0x403d44
  42cdd8:	mov    DWORD PTR [ebp-0x44],0x63571
  42cddf:	lea    eax,[ebp-0x4c]
  42cde2:	mov    edx,0x42d064
  42cde7:	call   0x403d44
  42cdec:	lea    eax,[ebp-0x48]
  42cdef:	mov    edx,0x42d054
  42cdf4:	call   0x403d44
  42cdf9:	lea    eax,[ebp-0x50]
  42cdfc:	mov    edx,0x42d208
  42ce01:	call   0x403d44
  42ce06:	mov    eax,DWORD PTR [ebp-0x3c]
  42ce09:	sub    eax,DWORD PTR [ebp-0x40]
  42ce0c:	sub    eax,DWORD PTR [ebp-0x44]
  42ce0f:	add    eax,DWORD PTR [ebp-0x40]
  42ce12:	mov    DWORD PTR [ebp-0x44],eax
  42ce15:	lea    eax,[ebp-0x4c]
  42ce18:	mov    edx,0x42d064
  42ce1d:	call   0x403d44
  42ce22:	lea    eax,[ebp-0x4c]
  42ce25:	mov    edx,0x42d07c
  42ce2a:	call   0x403d44
  42ce2f:	lea    eax,[ebp-0x50]
  42ce32:	mov    edx,0x42d054
  42ce37:	call   0x403d44
  42ce3c:	lea    eax,[ebp-0x4c]
  42ce3f:	mov    edx,0x42d218
  42ce44:	call   0x403d44
  42ce49:	mov    eax,DWORD PTR [ebp-0x40]
  42ce4c:	add    eax,DWORD PTR [ebp-0x3c]
  42ce4f:	sub    eax,DWORD PTR [ebp-0x40]
  42ce52:	mov    DWORD PTR [ebp-0x40],eax
  42ce55:	mov    eax,DWORD PTR [ebp-0x3c]
  42ce58:	add    eax,DWORD PTR [ebp-0x40]
  42ce5b:	add    eax,DWORD PTR [ebp-0x3c]
  42ce5e:	add    eax,DWORD PTR [ebp-0x40]
  42ce61:	mov    DWORD PTR [ebp-0x3c],eax
  42ce64:	mov    DWORD PTR [ebp-0x40],0xaa1db
  42ce6b:	mov    DWORD PTR [ebp-0x40],0x36921
  42ce72:	mov    eax,DWORD PTR [ebp-0x3c]
  42ce75:	sub    eax,DWORD PTR [ebp-0x40]
  42ce78:	add    eax,DWORD PTR [ebp-0x44]
  42ce7b:	mov    DWORD PTR [ebp-0x3c],eax
  42ce7e:	mov    DWORD PTR [ebp-0x40],0x9053
  42ce85:	mov    DWORD PTR [ebp-0x40],0x8a1e7
  42ce8c:	lea    eax,[ebp-0x50]
  42ce8f:	mov    edx,0x42d054
  42ce94:	call   0x403d44
  42ce99:	mov    DWORD PTR [ebp-0x3c],0xb9823
  42cea0:	lea    eax,[ebp-0x50]
  42cea3:	mov    edx,0x42d224
  42cea8:	call   0x403d44
  42cead:	lea    eax,[ebp-0x4c]
  42ceb0:	mov    edx,0x42d234
  42ceb5:	call   0x403d44
  42ceba:	mov    DWORD PTR [ebp-0x44],0x203be
  42cec1:	mov    eax,DWORD PTR [ebp-0x44]
  42cec4:	sub    eax,DWORD PTR [ebp-0x40]
  42cec7:	add    eax,DWORD PTR [ebp-0x40]
  42ceca:	sub    eax,DWORD PTR [ebp-0x3c]
  42cecd:	mov    DWORD PTR [ebp-0x40],eax
  42ced0:	mov    DWORD PTR [ebp-0x40],0x964
  42ced7:	lea    eax,[ebp-0x48]
  42ceda:	mov    edx,0x42d064
  42cedf:	call   0x403d44
  42cee4:	lea    eax,[ebp-0x50]
  42cee7:	mov    edx,0x42d054
  42ceec:	call   0x403d44
  42cef1:	mov    edx,0x42d0b0
  42cef6:	lea    eax,[ebp-0x50]
  42cef9:	call   0x403d44
  42cefe:	lea    eax,[ebp-0x4c]
  42cf01:	mov    edx,0x42d244
  42cf06:	call   0x403d44
  42cf0b:	lea    eax,[ebp-0x4c]
  42cf0e:	mov    edx,0x42d254
  42cf13:	call   0x403d44
  42cf18:	lea    eax,[ebp-0x54]
  42cf1b:	mov    edx,0x42d07c
  42cf20:	call   0x403d44
  42cf25:	lea    eax,[ebp-0x48]
  42cf28:	mov    edx,0x42d094
  42cf2d:	call   0x403d44
  42cf32:	lea    eax,[ebp-0x4c]
  42cf35:	mov    edx,0x42d264
  42cf3a:	call   0x403d44
  42cf3f:	mov    eax,DWORD PTR [ebp-0x44]
  42cf42:	sub    eax,DWORD PTR [ebp-0x44]
  42cf45:	add    eax,DWORD PTR [ebp-0x44]
  42cf48:	sub    eax,DWORD PTR [ebp-0x3c]
  42cf4b:	mov    DWORD PTR [ebp-0x3c],eax
  42cf4e:	lea    eax,[ebp-0x50]
  42cf51:	mov    edx,0x42d054
  42cf56:	call   0x403d44
  42cf5b:	lea    eax,[ebp-0x4c]
  42cf5e:	mov    edx,0x42d270
  42cf63:	call   0x403d44
  42cf68:	mov    DWORD PTR [ebp-0x40],0xad30e
  42cf6f:	lea    eax,[ebp-0x50]
  42cf72:	mov    edx,0x42d27c
  42cf77:	call   0x403d44
  42cf7c:	lea    eax,[ebp-0x4c]
  42cf7f:	mov    edx,0x42d054
  42cf84:	call   0x403d44
  42cf89:	mov    eax,DWORD PTR [ebp-0x3c]
  42cf8c:	sub    eax,DWORD PTR [ebp-0x3c]
  42cf8f:	sub    eax,DWORD PTR [ebp-0x44]
  42cf92:	add    eax,DWORD PTR [ebp-0x40]
  42cf95:	mov    DWORD PTR [ebp-0x3c],eax
  42cf98:	lea    eax,[ebp-0x4c]
  42cf9b:	mov    edx,0x42d07c
  42cfa0:	call   0x403d44
  42cfa5:	lea    eax,[ebp-0x48]
  42cfa8:	mov    edx,0x42d288
  42cfad:	call   0x403d44
  42cfb2:	mov    eax,DWORD PTR [ebp-0x3c]
  42cfb5:	sub    eax,DWORD PTR [ebp-0x3c]
  42cfb8:	mov    DWORD PTR [ebp-0x44],eax
  42cfbb:	mov    eax,DWORD PTR [ebp-0x3c]
  42cfbe:	add    DWORD PTR [ebp-0x44],eax
  42cfc1:	lea    eax,[ebp-0x54]
  42cfc4:	mov    edx,0x42d07c
  42cfc9:	call   0x403d44
  42cfce:	push   DWORD PTR [ebp-0x4]
  42cfd1:	call   DWORD PTR [ebp-0x8]
  42cfd4:	call   0x42ba54
  42cfd9:	lea    edx,[ebp-0x14]
  42cfdc:	mov    ecx,0x2d
  42cfe1:	mov    eax,0x42d294
  42cfe6:	call   0x4041e0
  42cfeb:	xor    eax,eax
  42cfed:	pop    edx
  42cfee:	pop    ecx
  42cfef:	pop    ecx
  42cff0:	mov    DWORD PTR fs:[eax],edx
  42cff3:	push   0x42d02f
  42cff8:	lea    eax,[ebp-0x58]
  42cffb:	mov    edx,0x5
  42d000:	call   0x403cd0
  42d005:	lea    eax,[ebp-0x38]
  42d008:	mov    edx,0x2
  42d00d:	call   0x403cd0
  42d012:	lea    eax,[ebp-0x28]
  42d015:	call   0x403cac
  42d01a:	lea    eax,[ebp-0x14]
  42d01d:	mov    edx,0x2
  42d022:	call   0x403cd0
  42d027:	ret    
  42d028:	jmp    0x4036ac
  42d02d:	jmp    0x42cff8
  42d02f:	mov    esp,ebp
  42d031:	pop    ebp
  42d032:	ret    
  42d033:	add    bh,bh
  42d035:	(bad)  
  42d036:	(bad)  
  42d037:	inc    DWORD PTR [edx]
  42d039:	add    BYTE PTR [eax],al
  42d03b:	add    BYTE PTR [ebx+0x39],ah
  42d03e:	add    BYTE PTR [eax],al
  42d040:	(bad)  
  42d041:	(bad)  
  42d042:	(bad)  
  42d043:	inc    DWORD PTR [ecx]
  42d045:	add    BYTE PTR [eax],al
  42d047:	add    BYTE PTR [esi+0x0],ch
  42d04a:	add    BYTE PTR [eax],al
  42d04c:	(bad)  
  42d04d:	(bad)  
  42d04e:	(bad)  
  42d04f:	inc    DWORD PTR [eax+eax*1]
  42d052:	add    BYTE PTR [eax],al
  42d054:	imul   edx,DWORD PTR [esi+0x33],0x53
  42d05b:	add    bh,bh
  42d05d:	(bad)  
  42d05e:	(bad)  
  42d05f:	inc    DWORD PTR [edx]
  42d061:	add    BYTE PTR [eax],al
  42d063:	add    BYTE PTR [edi],dh
  42d065:	jne    0x42d067
  42d067:	add    bh,bh
  42d069:	(bad)  
  42d06a:	(bad)  
  42d06b:	inc    DWORD PTR [ebx]
  42d06d:	add    BYTE PTR [eax],al
  42d06f:	add    BYTE PTR [edi+0x66],al
  42d072:	dec    edi
  42d073:	add    bh,bh
  42d075:	(bad)  
  42d076:	(bad)  
  42d077:	inc    DWORD PTR [ebx]
  42d079:	add    BYTE PTR [eax],al
  42d07b:	add    BYTE PTR [eax+esi*1+0x6c],al
  42d07f:	add    bh,bh
  42d081:	(bad)  
  42d082:	(bad)  
  42d083:	inc    DWORD PTR [edx]
  42d085:	add    BYTE PTR [eax],al
  42d087:	add    BYTE PTR [ecx+0x44],al
  42d08a:	add    BYTE PTR [eax],al
  42d08c:	(bad)  
  42d08d:	(bad)  
  42d08e:	(bad)  
  42d08f:	inc    DWORD PTR [ecx]
  42d091:	add    BYTE PTR [eax],al
  42d093:	add    BYTE PTR [ecx+0x0],ah
  42d096:	add    BYTE PTR [eax],al
  42d098:	(bad)  
  42d099:	(bad)  
  42d09a:	(bad)  
  42d09b:	inc    DWORD PTR [eax+eax*1]
  42d09e:	add    BYTE PTR [eax],al
  42d0a0:	push   0x64736a
  42d0a5:	add    BYTE PTR [eax],al
  42d0a7:	add    bh,bh
  42d0a9:	(bad)  
  42d0aa:	(bad)  
  42d0ab:	inc    DWORD PTR [eax+eax*1]
  42d0ae:	add    BYTE PTR [eax],al
  42d0b0:	popa   
  42d0b1:	dec    edx
  42d0b2:	xor    eax,0x78
  42d0b7:	add    bh,bh
  42d0b9:	(bad)  
  42d0ba:	(bad)  
  42d0bb:	inc    DWORD PTR [eax+eax*1]
  42d0be:	add    BYTE PTR [eax],al
  42d0c0:	jns    0x42d131
  42d0c2:	push   ebp
  42d0c3:	dec    edi
  42d0c4:	add    BYTE PTR [eax],al
  42d0c6:	add    BYTE PTR [eax],al
  42d0c8:	(bad)  
  42d0c9:	(bad)  
  42d0ca:	(bad)  
  42d0cb:	dec    DWORD PTR [eax+eax*1]
  42d0ce:	add    BYTE PTR [eax],al
  42d0d0:	ins    BYTE PTR es:[edi],dx
  42d0d1:	arpl   WORD PTR [ebp+0x69],di
  42d0d4:	arpl   WORD PTR [ebx+0x34],sp
  42d0d7:	xor    al,0x21
  42d0d9:	arpl   WORD PTR [edx+0x63],bp
  42d0dc:	add    BYTE PTR [eax],al
  42d0de:	add    BYTE PTR [eax],al
  42d0e0:	(bad)  
  42d0e1:	(bad)  
  42d0e2:	(bad)  
  42d0e3:	inc    DWORD PTR [ecx]
  42d0e5:	add    BYTE PTR [eax],al
  42d0e7:	add    BYTE PTR [edi+0x0],dl
  42d0ea:	add    BYTE PTR [eax],al
  42d0ec:	(bad)  
  42d0ed:	(bad)  
  42d0ee:	(bad)  
  42d0ef:	inc    DWORD PTR [ebx]
  42d0f1:	add    BYTE PTR [eax],al
  42d0f3:	add    BYTE PTR [ecx+0x4e],cl
  42d0f6:	dec    esi
  42d0f7:	add    bh,bh
  42d0f9:	(bad)  
  42d0fa:	(bad)  
  42d0fb:	inc    DWORD PTR [ebx]
  42d0fd:	add    BYTE PTR [eax],al
  42d0ff:	add    BYTE PTR [ebx+0x38],al
  42d102:	push   esi
  42d103:	add    bh,bh
  42d105:	(bad)  
  42d106:	(bad)  
  42d107:	inc    DWORD PTR [ebx]
  42d109:	add    BYTE PTR [eax],al
  42d10b:	add    BYTE PTR [ecx+0x75],ah
  42d10e:	pop    eax
  42d10f:	add    bh,bh
  42d111:	(bad)  
  42d112:	(bad)  
  42d113:	dec    DWORD PTR [eax+eax*1]
  42d116:	add    BYTE PTR [eax],al
  42d118:	push   ecx
  42d119:	outs   dx,DWORD PTR ds:[esi]
  42d11a:	jge    0x42d18f
  42d11c:	jae    0x42d18c
  42d11e:	imul   eax,DWORD PTR [edi+0x63],0x6b
  42d122:	imul   ebp,DWORD PTR [eax+eax*1+0x0],0xffff0000
  42d12a:	(bad)  
  42d12b:	inc    DWORD PTR [ebx]
  42d12d:	add    BYTE PTR [eax],al
  42d12f:	add    BYTE PTR [edi+0x71],ah
  42d132:	dec    eax
  42d133:	add    bh,bh
  42d135:	(bad)  
  42d136:	(bad)  
  42d137:	inc    DWORD PTR [ebx]
  42d139:	add    BYTE PTR [eax],al
  42d13b:	add    BYTE PTR [esi+edx*2+0x79],al
  42d13f:	add    bh,bh
  42d141:	(bad)  
  42d142:	(bad)  
  42d143:	inc    DWORD PTR [edx]
  42d145:	add    BYTE PTR [eax],al
  42d147:	add    BYTE PTR [edi],dh
  42d149:	xor    al,0x0
  42d14b:	add    bh,bh
  42d14d:	(bad)  
  42d14e:	(bad)  
  42d14f:	inc    DWORD PTR [ebx]
  42d151:	add    BYTE PTR [eax],al
  42d153:	add    BYTE PTR [edi+0x69],ah
  42d156:	xor    al,BYTE PTR [eax]
  42d158:	(bad)  
  42d159:	(bad)  
  42d15a:	(bad)  
  42d15b:	inc    DWORD PTR [edx]
  42d15d:	add    BYTE PTR [eax],al
  42d15f:	add    BYTE PTR [edi+0x61],ah
  42d162:	add    BYTE PTR [eax],al
  42d164:	(bad)  
  42d165:	(bad)  
  42d166:	(bad)  
  42d167:	inc    DWORD PTR [ebx]
  42d169:	add    BYTE PTR [eax],al
  42d16b:	add    BYTE PTR [eax+0x61],ch
  42d16e:	aaa    
  42d16f:	add    bh,bh
  42d171:	(bad)  
  42d172:	(bad)  
  42d173:	inc    DWORD PTR [edx]
  42d175:	add    BYTE PTR [eax],al
  42d177:	add    BYTE PTR [ebp+0x4f],cl
  42d17a:	add    BYTE PTR [eax],al
  42d17c:	(bad)  
  42d17d:	(bad)  
  42d17e:	(bad)  
  42d17f:	inc    DWORD PTR [ebx]
  42d181:	add    BYTE PTR [eax],al
  42d183:	add    BYTE PTR [edx+0x4e],ah
  42d186:	push   edi
  42d187:	add    bh,bh
  42d189:	(bad)  
  42d18a:	(bad)  
  42d18b:	inc    DWORD PTR [edx]
  42d18d:	add    BYTE PTR [eax],al
  42d18f:	add    BYTE PTR [esi+0x65],ch
  42d192:	add    BYTE PTR [eax],al
  42d194:	(bad)  
  42d195:	(bad)  
  42d196:	(bad)  
  42d197:	inc    DWORD PTR [eax+eax*1]
  42d19a:	add    BYTE PTR [eax],al
  42d19c:	jae    0x42d1d2
  42d19e:	push   ecx
  42d19f:	push   esi
  42d1a0:	add    BYTE PTR [eax],al
  42d1a2:	add    BYTE PTR [eax],al
  42d1a4:	(bad)  
  42d1a5:	(bad)  
  42d1a6:	(bad)  
  42d1a7:	inc    DWORD PTR [ebx]
  42d1a9:	add    BYTE PTR [eax],al
  42d1ab:	add    BYTE PTR [ecx+0x30],ah
  42d1ae:	jp     0x42d1b0
  42d1b0:	(bad)  
  42d1b1:	(bad)  
  42d1b2:	(bad)  
  42d1b3:	inc    DWORD PTR [edx]
  42d1b5:	add    BYTE PTR [eax],al
  42d1b7:	add    BYTE PTR [eax+0x69],bl
  42d1ba:	add    BYTE PTR [eax],al
  42d1bc:	(bad)  
  42d1bd:	(bad)  
  42d1be:	(bad)  
  42d1bf:	inc    DWORD PTR [ecx]
  42d1c1:	add    BYTE PTR [eax],al
  42d1c3:	add    BYTE PTR [eax+0x0],bh
  42d1c6:	add    BYTE PTR [eax],al
  42d1c8:	(bad)  
  42d1c9:	(bad)  
  42d1ca:	(bad)  
  42d1cb:	inc    DWORD PTR [eax+eax*1]
  42d1ce:	add    BYTE PTR [eax],al
  42d1d0:	inc    esp
  42d1d1:	ins    DWORD PTR es:[edi],dx
  42d1d2:	xor    eax,0x41
  42d1d7:	add    bh,bh
  42d1d9:	(bad)  
  42d1da:	(bad)  
  42d1db:	inc    DWORD PTR [ecx]
  42d1dd:	add    BYTE PTR [eax],al
  42d1df:	add    BYTE PTR [ecx+0x0],dh
  42d1e2:	add    BYTE PTR [eax],al
  42d1e4:	(bad)  
  42d1e5:	(bad)  
  42d1e6:	(bad)  
  42d1e7:	inc    DWORD PTR [ebx]
  42d1e9:	add    BYTE PTR [eax],al
  42d1eb:	add    BYTE PTR [ecx+0x48],ch
  42d1ee:	inc    edx
  42d1ef:	add    bh,bh
  42d1f1:	(bad)  
  42d1f2:	(bad)  
  42d1f3:	inc    DWORD PTR [eax+eax*1]
  42d1f6:	add    BYTE PTR [eax],al
  42d1f8:	inc    edi
  42d1f9:	xor    al,0x30
  42d1fb:	jae    0x42d1fd
  42d1fd:	add    BYTE PTR [eax],al
  42d1ff:	add    bh,bh
  42d201:	(bad)  
  42d202:	(bad)  
  42d203:	inc    DWORD PTR [eax+eax*1]
  42d206:	add    BYTE PTR [eax],al
  42d208:	jo     0x42d264
  42d20a:	gs dec esp
  42d20c:	add    BYTE PTR [eax],al
  42d20e:	add    BYTE PTR [eax],al
  42d210:	(bad)  
  42d211:	(bad)  
  42d212:	(bad)  
  42d213:	inc    DWORD PTR [ecx]
  42d215:	add    BYTE PTR [eax],al
  42d217:	add    BYTE PTR [edi+0x0],cl
  42d21a:	add    BYTE PTR [eax],al
  42d21c:	(bad)  
  42d21d:	(bad)  
  42d21e:	(bad)  
  42d21f:	inc    DWORD PTR [eax+eax*1]
  42d222:	add    BYTE PTR [eax],al
  42d224:	inc    ebx
  42d225:	xor    eax,0x4541
  42d22a:	add    BYTE PTR [eax],al
  42d22c:	(bad)  
  42d22d:	(bad)  
  42d22e:	(bad)  
  42d22f:	inc    DWORD PTR [eax+eax*1]
  42d232:	add    BYTE PTR [eax],al
  42d234:	dec    esi
  42d235:	xor    ah,BYTE PTR [esi+0x51]
  42d238:	add    BYTE PTR [eax],al
  42d23a:	add    BYTE PTR [eax],al
  42d23c:	(bad)  
  42d23d:	(bad)  
  42d23e:	(bad)  
  42d23f:	inc    DWORD PTR [eax+eax*1]
  42d242:	add    BYTE PTR [eax],al
  42d244:	ins    BYTE PTR es:[edi],dx
  42d245:	dec    ebx
  42d246:	push   ebp
  42d247:	push   0x0
  42d249:	add    BYTE PTR [eax],al
  42d24b:	add    bh,bh
  42d24d:	(bad)  
  42d24e:	(bad)  
  42d24f:	inc    DWORD PTR [eax+eax*1]
  42d252:	add    BYTE PTR [eax],al
  42d254:	aaa    
  42d255:	xor    DWORD PTR [ecx+esi*1+0x0],edx
  42d259:	add    BYTE PTR [eax],al
  42d25b:	add    bh,bh
  42d25d:	(bad)  
  42d25e:	(bad)  
  42d25f:	inc    DWORD PTR [ecx]
  42d261:	add    BYTE PTR [eax],al
  42d263:	add    BYTE PTR [ebx+0x0],cl
  42d266:	add    BYTE PTR [eax],al
  42d268:	(bad)  
  42d269:	(bad)  
  42d26a:	(bad)  
  42d26b:	inc    DWORD PTR [ebx]
  42d26d:	add    BYTE PTR [eax],al
  42d26f:	add    BYTE PTR [edi+0x36],dh
  42d272:	jb     0x42d274
  42d274:	(bad)  
  42d275:	(bad)  
  42d276:	(bad)  
  42d277:	inc    DWORD PTR [ebx]
  42d279:	add    BYTE PTR [eax],al
  42d27b:	add    BYTE PTR [eax],dh
  42d27d:	xor    bh,BYTE PTR [edx+0x0]
  42d280:	(bad)  
  42d281:	(bad)  
  42d282:	(bad)  
  42d283:	inc    DWORD PTR [ebx]
  42d285:	add    BYTE PTR [eax],al
  42d287:	add    BYTE PTR [ebx+0x6a],dh
  42d28a:	push   edi
  42d28b:	add    bh,bh
  42d28d:	(bad)  
  42d28e:	(bad)  
  42d28f:	inc    DWORD PTR [ebx]
  42d291:	add    BYTE PTR [eax],al
  42d293:	add    BYTE PTR [ebx+0x64],dh
  42d296:	data16 add BYTE PTR [ebp-0x75],dl
  42d29a:	in     al,dx
  42d29b:	xor    eax,eax
  42d29d:	push   ebp
  42d29e:	push   0x42d2b7
  42d2a3:	push   DWORD PTR fs:[eax]
  42d2a6:	mov    DWORD PTR fs:[eax],esp
  42d2a9:	xor    eax,eax
  42d2ab:	pop    edx
  42d2ac:	pop    ecx
  42d2ad:	pop    ecx
  42d2ae:	mov    DWORD PTR fs:[eax],edx
  42d2b1:	push   0x42d2be
  42d2b6:	ret    
  42d2b7:	jmp    0x4036ac
  42d2bc:	jmp    0x42d2b6
  42d2be:	pop    ebp
  42d2bf:	ret    
  42d2c0:	sldt   WORD PTR [eax]
  42d2c3:	add    al,cl
  42d2c5:	rol    BYTE PTR [edx+0x0],cl
  42d2c8:	inc    eax
  42d2c9:	pop    edx
  42d2ca:	inc    eax
  42d2cb:	add    BYTE PTR [eax],dl
  42d2cd:	pop    edx
  42d2ce:	inc    eax
  42d2cf:	add    BYTE PTR [eax+ebx*2],bl
  42d2d2:	inc    eax
  42d2d3:	add    al,cl
  42d2d5:	push   edi
  42d2d6:	inc    eax
  42d2d7:	add    BYTE PTR [eax+0x5a],bh
  42d2da:	inc    eax
  42d2db:	add    BYTE PTR [eax+0x5a],cl
  42d2de:	inc    eax
  42d2df:	add    al,ch
  42d2e1:	pop    ebx
  42d2e2:	inc    eax
  42d2e3:	add    BYTE PTR [eax+0x4000405b],bh
  42d2e9:	fild   WORD PTR [ecx+0x0]
  42d2ec:	adc    bh,bl
  42d2ee:	inc    ecx
  42d2ef:	add    BYTE PTR [eax-0x21],bh
  42d2f2:	inc    ecx
  42d2f3:	add    BYTE PTR [eax-0x21],cl
  42d2f6:	inc    ecx
  42d2f7:	add    BYTE PTR [eax+0x60004273],dl
  42d2fd:	jae    0x42d341
  42d2ff:	add    BYTE PTR [eax+0x500041e2],al
  42d305:	loop   0x42d348
  42d307:	add    BYTE PTR [ecx+eax*2+0x402c0042],ch
  42d30e:	inc    edx
  42d30f:	add    BYTE PTR [edx+ecx*2],ah
  42d312:	inc    edx
  42d313:	add    ah,dh
  42d315:	dec    ecx
  42d316:	inc    edx
  42d317:	add    BYTE PTR [eax+0x20004271],bl
  42d31d:	jno    0x42d361
  42d31f:	add    ah,dl
  42d321:	jb     0x42d365
  42d323:	add    BYTE PTR [edx+esi*2+0x73580042],ah
  42d32a:	inc    edx
  42d32b:	add    BYTE PTR [eax],cl
  42d32d:	jae    0x42d371
  42d32f:	add    al,bl
  42d331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d332:	inc    edx
  42d333:	add    BYTE PTR [eax],ch
  42d335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d336:	inc    edx
  42d337:	add    BYTE PTR [eax],al
  42d339:	add    BYTE PTR [eax],al
  42d33b:	add    BYTE PTR [eax+0x550042d2],bl
  42d341:	mov    ebp,esp
  42d343:	add    esp,0xfffffff0
  42d346:	mov    eax,0x42d2c0
  42d34b:	call   0x4059cc
  42d350:	call   0x42c864
  42d355:	call   0x403bb4
  42d35a:	mov    eax,eax
