
a5af31b906e27be591ac943c6880e23c17e8b9725afd664b9d0418674825216f.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	pop    ebp
  401004:	ret    
  401005:	int3   
  401006:	int3   
  401007:	int3   
  401008:	int3   
  401009:	int3   
  40100a:	int3   
  40100b:	int3   
  40100c:	int3   
  40100d:	int3   
  40100e:	int3   
  40100f:	int3   
  401010:	push   ebp
  401011:	mov    ebp,esp
  401013:	push   ecx
  401014:	mov    DWORD PTR [ebp-0x4],0x1e4dc
  40101b:	push   0x40
  40101d:	push   0x3000
  401022:	mov    eax,DWORD PTR [ebp+0x8]
  401025:	push   eax
  401026:	push   0x0
  401028:	call   DWORD PTR ds:0x44658c
  40102e:	mov    esp,ebp
  401030:	pop    ebp
  401031:	ret    
  401032:	int3   
  401033:	int3   
  401034:	int3   
  401035:	int3   
  401036:	int3   
  401037:	int3   
  401038:	int3   
  401039:	int3   
  40103a:	int3   
  40103b:	int3   
  40103c:	int3   
  40103d:	int3   
  40103e:	int3   
  40103f:	int3   
  401040:	push   ebp
  401041:	mov    ebp,esp
  401043:	pop    ebp
  401044:	ret    
  401045:	int3   
  401046:	int3   
  401047:	int3   
  401048:	int3   
  401049:	int3   
  40104a:	int3   
  40104b:	int3   
  40104c:	int3   
  40104d:	int3   
  40104e:	int3   
  40104f:	int3   
  401050:	push   ebp
  401051:	mov    ebp,esp
  401053:	sub    esp,0x8
  401056:	mov    eax,DWORD PTR [ebp+0x8]
  401059:	mov    DWORD PTR [ebp-0x4],eax
  40105c:	mov    ecx,DWORD PTR [ebp+0xc]
  40105f:	mov    DWORD PTR [ebp-0x8],ecx
  401062:	mov    edx,DWORD PTR [ebp-0x4]
  401065:	cmp    edx,DWORD PTR [ebp-0x8]
  401068:	jae    0x401071
  40106a:	mov    eax,DWORD PTR [ebp-0x4]
  40106d:	jmp    0x401074
  40106f:	jmp    0x401074
  401071:	mov    eax,DWORD PTR [ebp-0x8]
  401074:	mov    esp,ebp
  401076:	pop    ebp
  401077:	ret    
  401078:	int3   
  401079:	int3   
  40107a:	int3   
  40107b:	int3   
  40107c:	int3   
  40107d:	int3   
  40107e:	int3   
  40107f:	int3   
  401080:	push   ebp
  401081:	mov    ebp,esp
  401083:	mov    DWORD PTR ds:0x446590,0x40199c
  40108d:	pop    ebp
  40108e:	ret    
  40108f:	int3   
  401090:	push   ebp
  401091:	mov    ebp,esp
  401093:	mov    DWORD PTR ds:0x446590,0x43f567
  40109d:	pop    ebp
  40109e:	ret    
  40109f:	int3   
  4010a0:	push   ebp
  4010a1:	mov    ebp,esp
  4010a3:	mov    eax,DWORD PTR [ebp+0x8]
  4010a6:	mov    eax,DWORD PTR [eax-0x4]
  4010a9:	pop    ebp
  4010aa:	ret    
  4010ab:	int3   
  4010ac:	int3   
  4010ad:	int3   
  4010ae:	int3   
  4010af:	int3   
  4010b0:	push   ebp
  4010b1:	mov    ebp,esp
  4010b3:	sub    esp,0xc
  4010b6:	mov    DWORD PTR [ebp-0x4],0x0
  4010bd:	jmp    0x4010c8
  4010bf:	mov    eax,DWORD PTR [ebp-0x4]
  4010c2:	add    eax,0x1
  4010c5:	mov    DWORD PTR [ebp-0x4],eax
  4010c8:	mov    ecx,DWORD PTR [ebp-0x4]
  4010cb:	cmp    ecx,DWORD PTR [ebp+0x8]
  4010ce:	jae    0x40111f
  4010d0:	mov    edx,DWORD PTR [ebp-0x4]
  4010d3:	mov    eax,DWORD PTR [ebp+0xc]
  4010d6:	movzx  ecx,WORD PTR [eax+edx*2]
  4010da:	sar    ecx,0xc
  4010dd:	cmp    ecx,0x3
  4010e0:	jne    0x40111d
  4010e2:	mov    DWORD PTR [ebp-0xc],0xfff
  4010e9:	mov    edx,DWORD PTR [ebp-0x4]
  4010ec:	mov    eax,DWORD PTR [ebp+0xc]
  4010ef:	movzx  ecx,WORD PTR [eax+edx*2]
  4010f3:	and    ecx,DWORD PTR [ebp-0xc]
  4010f6:	add    ecx,0x43
  4010f9:	mov    DWORD PTR [ebp-0x8],ecx
  4010fc:	mov    edx,DWORD PTR [ebp+0x18]
  4010ff:	mov    eax,DWORD PTR [ebp+0x10]
  401102:	add    eax,DWORD PTR [edx]
  401104:	mov    ecx,DWORD PTR [ebp-0x8]
  401107:	mov    edx,DWORD PTR [eax+ecx*1-0x43]
  40110b:	add    edx,DWORD PTR [ebp+0x14]
  40110e:	mov    eax,DWORD PTR [ebp+0x18]
  401111:	mov    ecx,DWORD PTR [ebp+0x10]
  401114:	add    ecx,DWORD PTR [eax]
  401116:	mov    eax,DWORD PTR [ebp-0x8]
  401119:	mov    DWORD PTR [ecx+eax*1-0x43],edx
  40111d:	jmp    0x4010bf
  40111f:	mov    esp,ebp
  401121:	pop    ebp
  401122:	ret    
  401123:	int3   
  401124:	int3   
  401125:	int3   
  401126:	int3   
  401127:	int3   
  401128:	int3   
  401129:	int3   
  40112a:	int3   
  40112b:	int3   
  40112c:	int3   
  40112d:	int3   
  40112e:	int3   
  40112f:	int3   
  401130:	push   ebp
  401131:	mov    ebp,esp
  401133:	sub    esp,0x14
  401136:	mov    eax,DWORD PTR [ebp+0x8]
  401139:	cmp    DWORD PTR [eax+0x4],0x0
  40113d:	je     0x401187
  40113f:	mov    DWORD PTR [ebp-0x14],0x2a1
  401146:	mov    ecx,DWORD PTR [ebp+0x8]
  401149:	mov    edx,DWORD PTR [ecx+0x4]
  40114c:	sub    edx,0x8
  40114f:	shr    edx,1
  401151:	mov    DWORD PTR [ebp-0xc],edx
  401154:	mov    eax,DWORD PTR [ebp+0x8]
  401157:	add    eax,0x8
  40115a:	mov    DWORD PTR [ebp-0x10],eax
  40115d:	mov    ecx,DWORD PTR [ebp+0x8]
  401160:	push   ecx
  401161:	mov    edx,DWORD PTR [ebp+0x10]
  401164:	push   edx
  401165:	mov    eax,DWORD PTR [ebp+0xc]
  401168:	push   eax
  401169:	mov    ecx,DWORD PTR [ebp-0x10]
  40116c:	push   ecx
  40116d:	mov    edx,DWORD PTR [ebp-0xc]
  401170:	push   edx
  401171:	call   0x4010b0
  401176:	add    esp,0x14
  401179:	mov    eax,DWORD PTR [ebp+0x8]
  40117c:	mov    ecx,DWORD PTR [ebp+0x8]
  40117f:	add    ecx,DWORD PTR [eax+0x4]
  401182:	mov    DWORD PTR [ebp+0x8],ecx
  401185:	jmp    0x401136
  401187:	mov    esp,ebp
  401189:	pop    ebp
  40118a:	ret    
  40118b:	int3   
  40118c:	int3   
  40118d:	int3   
  40118e:	int3   
  40118f:	int3   
  401190:	push   ebp
  401191:	mov    ebp,esp
  401193:	sub    esp,0x20
  401196:	mov    DWORD PTR [ebp-0x8],0x37
  40119d:	mov    DWORD PTR [ebp-0x10],0x0
  4011a4:	jmp    0x4011af
  4011a6:	mov    eax,DWORD PTR [ebp-0x10]
  4011a9:	add    eax,0x4
  4011ac:	mov    DWORD PTR [ebp-0x10],eax
  4011af:	mov    ecx,DWORD PTR [ebp-0x10]
  4011b2:	cmp    ecx,DWORD PTR [ebp+0xc]
  4011b5:	jae    0x40125b
  4011bb:	mov    DWORD PTR [ebp-0x8],0x1425
  4011c2:	mov    DWORD PTR [ebp-0x8],0x37
  4011c9:	mov    edx,DWORD PTR [ebp-0x10]
  4011cc:	add    edx,0xa4286
  4011d2:	mov    DWORD PTR ds:0x446594,edx
  4011d8:	mov    eax,DWORD PTR [ebp+0x8]
  4011db:	add    eax,DWORD PTR [ebp-0x10]
  4011de:	mov    ecx,DWORD PTR [eax]
  4011e0:	add    ecx,DWORD PTR [ebp-0x10]
  4011e3:	mov    edx,DWORD PTR [ebp+0x8]
  4011e6:	add    edx,DWORD PTR [ebp-0x10]
  4011e9:	mov    DWORD PTR [edx],ecx
  4011eb:	mov    eax,DWORD PTR [ebp-0xc]
  4011ee:	mov    DWORD PTR [ebp-0x14],eax
  4011f1:	mov    DWORD PTR [ebp-0x8],0x1425
  4011f8:	mov    ecx,DWORD PTR ds:0x446594
  4011fe:	mov    DWORD PTR [ebp-0x20],ecx
  401201:	mov    edx,DWORD PTR [ebp-0x20]
  401204:	mov    DWORD PTR [ebp-0x1c],edx
  401207:	mov    eax,DWORD PTR [ebp-0x1c]
  40120a:	mov    DWORD PTR [ebp-0x18],eax
  40120d:	cmp    DWORD PTR [ebp-0x10],0x0
  401211:	jne    0x401243
  401213:	push   0x0
  401215:	push   0x80
  40121a:	push   0x3
  40121c:	push   0x0
  40121e:	push   0x3
  401220:	push   0x1
  401222:	push   0x446598
  401227:	call   DWORD PTR ds:0x442d68
  40122d:	mov    DWORD PTR [ebp-0x4],eax
  401230:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  401234:	je     0x40123c
  401236:	cmp    DWORD PTR [ebp-0x4],0x0
  40123a:	jne    0x401243
  40123c:	mov    eax,0x42
  401241:	jmp    0x40125b
  401243:	mov    ecx,DWORD PTR [ebp+0x8]
  401246:	add    ecx,DWORD PTR [ebp-0x10]
  401249:	mov    edx,DWORD PTR [ecx]
  40124b:	xor    edx,DWORD PTR [ebp-0x18]
  40124e:	mov    eax,DWORD PTR [ebp+0x8]
  401251:	add    eax,DWORD PTR [ebp-0x10]
  401254:	mov    DWORD PTR [eax],edx
  401256:	jmp    0x4011a6
  40125b:	mov    esp,ebp
  40125d:	pop    ebp
  40125e:	ret    
  40125f:	int3   
  401260:	push   ebp
  401261:	mov    ebp,esp
  401263:	xor    eax,eax
  401265:	pop    ebp
  401266:	ret    0x10
  401269:	int3   
  40126a:	int3   
  40126b:	int3   
  40126c:	int3   
  40126d:	int3   
  40126e:	int3   
  40126f:	int3   
  401270:	push   ebp
  401271:	mov    ebp,esp
  401273:	sub    esp,0x1bc
  401279:	pusha  
  40127a:	mov    DWORD PTR ds:0x44669c,ebp
  401280:	push   0x0
  401282:	push   0x2
  401284:	push   0x0
  401286:	push   0x0
  401288:	push   0x80000000
  40128d:	push   0x80000000
  401292:	push   0x80000000
  401297:	push   0x80000000
  40129c:	push   0xcf0000
  4012a1:	push   0x442074
  4012a6:	push   0x44206c
  4012ab:	push   0x0
  4012ad:	call   DWORD PTR ds:0x442fbc
  4012b3:	mov    DWORD PTR [ebp-0x18c],eax
  4012b9:	lea    eax,[ebp-0x14c]
  4012bf:	push   eax
  4012c0:	call   DWORD PTR ds:0x442fc0
  4012c6:	push   0x104
  4012cb:	lea    ecx,[ebp-0x110]
  4012d1:	push   ecx
  4012d2:	call   DWORD PTR ds:0x442d6c
  4012d8:	mov    DWORD PTR [ebp-0x14c],0x30
  4012e2:	mov    DWORD PTR [ebp-0x148],0x3
  4012ec:	mov    DWORD PTR [ebp-0x144],0x401260
  4012f6:	mov    DWORD PTR [ebp-0x140],0x0
  401300:	mov    DWORD PTR [ebp-0x13c],0x0
  40130a:	mov    DWORD PTR [ebp-0x138],0x2
  401314:	push   0x7f00
  401319:	push   0x0
  40131b:	call   DWORD PTR ds:0x442fc4
  401321:	mov    DWORD PTR [ebp-0x134],eax
  401327:	push   0x7f00
  40132c:	push   0x0
  40132e:	call   DWORD PTR ds:0x442fc8
  401334:	mov    DWORD PTR [ebp-0x130],eax
  40133a:	push   0x0
  40133c:	call   DWORD PTR ds:0x443264
  401342:	mov    DWORD PTR [ebp-0x12c],eax
  401348:	mov    DWORD PTR [ebp-0x128],0x0
  401352:	mov    DWORD PTR [ebp-0x124],0x44206c
  40135c:	push   0x7f00
  401361:	push   0x0
  401363:	call   DWORD PTR ds:0x442fc4
  401369:	mov    DWORD PTR [ebp-0x120],eax
  40136f:	push   0x0
  401371:	push   0x2
  401373:	push   0x0
  401375:	push   0x0
  401377:	push   0x80000000
  40137c:	push   0x80000000
  401381:	push   0x80000000
  401386:	push   0x80000000
  40138b:	push   0xcf0000
  401390:	push   0x44207c
  401395:	push   0x44206c
  40139a:	push   0x0
  40139c:	call   DWORD PTR ds:0x442fbc
  4013a2:	mov    DWORD PTR [ebp-0x18c],eax
  4013a8:	lea    edx,[ebp-0x14c]
  4013ae:	push   edx
  4013af:	call   DWORD PTR ds:0x442fc0
  4013b5:	mov    DWORD PTR [ebp-0x194],0x0
  4013bf:	mov    eax,ds:0x442d68
  4013c4:	mov    DWORD PTR [ebp-0x1a8],eax
  4013ca:	push   0x442084
  4013cf:	push   0x442094
  4013d4:	call   DWORD PTR ds:0x442d70
  4013da:	push   eax
  4013db:	call   DWORD PTR ds:0x442d74
  4013e1:	mov    DWORD PTR [ebp-0x17c],eax
  4013e7:	lea    ecx,[ebp-0x158]
  4013ed:	push   ecx
  4013ee:	push   0x20019
  4013f3:	push   0x0
  4013f5:	push   0x44657c
  4013fa:	push   0x80000002
  4013ff:	call   DWORD PTR [ebp-0x17c]
  401405:	test   eax,eax
  401407:	je     0x401410
  401409:	xor    eax,eax
  40140b:	jmp    0x4018e0
  401410:	lea    edx,[ebp-0x158]
  401416:	push   edx
  401417:	push   0x20019
  40141c:	push   0x0
  40141e:	push   0x4420a0
  401423:	mov    eax,DWORD PTR [ebp-0x158]
  401429:	push   eax
  40142a:	call   DWORD PTR [ebp-0x17c]
  401430:	test   eax,eax
  401432:	je     0x40143b
  401434:	xor    eax,eax
  401436:	jmp    0x4018e0
  40143b:	lea    ecx,[ebp-0x158]
  401441:	push   ecx
  401442:	push   0x20019
  401447:	push   0x0
  401449:	push   0x4420b4
  40144e:	mov    edx,DWORD PTR [ebp-0x158]
  401454:	push   edx
  401455:	call   DWORD PTR [ebp-0x17c]
  40145b:	test   eax,eax
  40145d:	je     0x401466
  40145f:	xor    eax,eax
  401461:	jmp    0x4018e0
  401466:	lea    eax,[ebp-0x158]
  40146c:	push   eax
  40146d:	push   0x20019
  401472:	push   0x0
  401474:	push   0x4420c4
  401479:	mov    ecx,DWORD PTR [ebp-0x158]
  40147f:	push   ecx
  401480:	call   DWORD PTR [ebp-0x17c]
  401486:	test   eax,eax
  401488:	je     0x401491
  40148a:	xor    eax,eax
  40148c:	jmp    0x4018e0
  401491:	lea    edx,[ebp-0x158]
  401497:	push   edx
  401498:	push   0x20019
  40149d:	push   0x0
  40149f:	push   0x446580
  4014a4:	mov    eax,DWORD PTR [ebp-0x158]
  4014aa:	push   eax
  4014ab:	call   DWORD PTR [ebp-0x17c]
  4014b1:	test   eax,eax
  4014b3:	je     0x4014bc
  4014b5:	xor    eax,eax
  4014b7:	jmp    0x4018e0
  4014bc:	lea    ecx,[ebp-0x158]
  4014c2:	push   ecx
  4014c3:	push   0x20019
  4014c8:	push   0x0
  4014ca:	push   0x446584
  4014cf:	mov    edx,DWORD PTR [ebp-0x158]
  4014d5:	push   edx
  4014d6:	call   DWORD PTR [ebp-0x17c]
  4014dc:	test   eax,eax
  4014de:	je     0x4014e7
  4014e0:	xor    eax,eax
  4014e2:	jmp    0x4018e0
  4014e7:	lea    eax,[ebp-0x158]
  4014ed:	push   eax
  4014ee:	push   0x20019
  4014f3:	push   0x0
  4014f5:	push   0x4420d0
  4014fa:	mov    ecx,DWORD PTR [ebp-0x158]
  401500:	push   ecx
  401501:	call   DWORD PTR [ebp-0x17c]
  401507:	test   eax,eax
  401509:	je     0x40151f
  40150b:	push   0x104
  401510:	push   0x5
  401512:	call   DWORD PTR ds:0x442d6c
  401518:	xor    eax,eax
  40151a:	jmp    0x4018e0
  40151f:	lea    edx,[ebp-0x158]
  401525:	push   edx
  401526:	push   0x20019
  40152b:	push   0x0
  40152d:	push   0x446588
  401532:	mov    eax,DWORD PTR [ebp-0x158]
  401538:	push   eax
  401539:	call   DWORD PTR [ebp-0x17c]
  40153f:	test   eax,eax
  401541:	je     0x40154a
  401543:	xor    eax,eax
  401545:	jmp    0x4018e0
  40154a:	lea    ecx,[ebp-0x158]
  401550:	push   ecx
  401551:	push   0x20019
  401556:	push   0x0
  401558:	push   0x442120
  40155d:	mov    edx,DWORD PTR [ebp-0x158]
  401563:	push   edx
  401564:	call   DWORD PTR [ebp-0x17c]
  40156a:	test   eax,eax
  40156c:	je     0x401575
  40156e:	xor    eax,eax
  401570:	jmp    0x4018e0
  401575:	lea    eax,[ebp-0x158]
  40157b:	push   eax
  40157c:	push   0x20019
  401581:	push   0x0
  401583:	push   0x442130
  401588:	mov    ecx,DWORD PTR [ebp-0x158]
  40158e:	push   ecx
  40158f:	call   DWORD PTR [ebp-0x17c]
  401595:	test   eax,eax
  401597:	jne    0x4015a0
  401599:	xor    eax,eax
  40159b:	jmp    0x4018e0
  4015a0:	mov    DWORD PTR [ebp-0x114],0x0
  4015aa:	mov    DWORD PTR [ebp-0x188],0x64
  4015b4:	mov    DWORD PTR [ebp-0x11c],0x1
  4015be:	mov    DWORD PTR [ebp-0x194],0x0
  4015c8:	mov    DWORD PTR [ebp-0x154],0x0
  4015d2:	mov    DWORD PTR [ebp-0x184],0x1
  4015dc:	mov    DWORD PTR [ebp-0x118],0x3
  4015e6:	push   0x104
  4015eb:	push   0x446598
  4015f0:	call   DWORD PTR ds:0x442d6c
  4015f6:	push   0x442144
  4015fb:	push   0x446598
  401600:	call   DWORD PTR ds:0x442d78
  401606:	push   0x44215c
  40160b:	push   0x44216c
  401610:	call   DWORD PTR ds:0x442d7c
  401616:	push   eax
  401617:	call   DWORD PTR ds:0x442d74
  40161d:	mov    ds:0x44658c,eax
  401622:	call   0x401080
  401627:	mov    edx,DWORD PTR ds:0x446590
  40162d:	push   edx
  40162e:	call   0x4010a0
  401633:	add    esp,0x4
  401636:	mov    DWORD PTR [ebp-0x198],eax
  40163c:	mov    eax,DWORD PTR [ebp-0x198]
  401642:	push   eax
  401643:	call   0x401010
  401648:	add    esp,0x4
  40164b:	mov    DWORD PTR [ebp-0x190],eax
  401651:	mov    ecx,DWORD PTR [ebp-0x198]
  401657:	push   ecx
  401658:	push   0x0
  40165a:	mov    edx,DWORD PTR [ebp-0x190]
  401660:	push   edx
  401661:	call   0x401040
  401666:	add    esp,0xc
  401669:	mov    eax,DWORD PTR [ebp-0x198]
  40166f:	mov    DWORD PTR [ebp-0x1a0],eax
  401675:	mov    ecx,DWORD PTR [ebp-0x194]
  40167b:	cmp    ecx,DWORD PTR [ebp-0x198]
  401681:	jae    0x40170d
  401687:	mov    edx,DWORD PTR [ebp-0x1a0]
  40168d:	push   edx
  40168e:	mov    eax,DWORD PTR [ebp-0x188]
  401694:	push   eax
  401695:	call   0x401050
  40169a:	add    esp,0x8
  40169d:	mov    DWORD PTR [ebp-0x1a4],eax
  4016a3:	mov    ecx,DWORD PTR [ebp-0x1a4]
  4016a9:	push   ecx
  4016aa:	mov    edx,DWORD PTR ds:0x446590
  4016b0:	add    edx,DWORD PTR [ebp-0x154]
  4016b6:	push   edx
  4016b7:	mov    eax,DWORD PTR [ebp-0x190]
  4016bd:	add    eax,DWORD PTR [ebp-0x194]
  4016c3:	push   eax
  4016c4:	call   0x44152a
  4016c9:	add    esp,0xc
  4016cc:	mov    ecx,DWORD PTR [ebp-0x11c]
  4016d2:	add    ecx,DWORD PTR [ebp-0x188]
  4016d8:	add    ecx,DWORD PTR [ebp-0x154]
  4016de:	mov    DWORD PTR [ebp-0x154],ecx
  4016e4:	mov    edx,DWORD PTR [ebp-0x194]
  4016ea:	add    edx,DWORD PTR [ebp-0x188]
  4016f0:	mov    DWORD PTR [ebp-0x194],edx
  4016f6:	mov    eax,DWORD PTR [ebp-0x1a0]
  4016fc:	sub    eax,DWORD PTR [ebp-0x1a4]
  401702:	mov    DWORD PTR [ebp-0x1a0],eax
  401708:	jmp    0x401675
  40170d:	mov    ecx,DWORD PTR [ebp-0x198]
  401713:	push   ecx
  401714:	mov    edx,DWORD PTR [ebp-0x190]
  40171a:	push   edx
  40171b:	call   0x401190
  401720:	add    esp,0x8
  401723:	mov    DWORD PTR [ebp-0x154],0x0
  40172d:	mov    DWORD PTR [ebp-0x1ac],0x0
  401737:	call   0x401090
  40173c:	mov    eax,ds:0x446590
  401741:	push   eax
  401742:	call   0x4010a0
  401747:	add    esp,0x4
  40174a:	mov    DWORD PTR [ebp-0x1b0],eax
  401750:	mov    ecx,DWORD PTR [ebp-0x1b0]
  401756:	push   ecx
  401757:	call   0x401010
  40175c:	add    esp,0x4
  40175f:	mov    DWORD PTR [ebp-0x150],eax
  401765:	mov    edx,DWORD PTR [ebp-0x1b0]
  40176b:	push   edx
  40176c:	push   0x0
  40176e:	mov    eax,DWORD PTR [ebp-0x150]
  401774:	push   eax
  401775:	call   0x401040
  40177a:	add    esp,0xc
  40177d:	mov    ecx,DWORD PTR [ebp-0x1b0]
  401783:	mov    DWORD PTR [ebp-0x1b8],ecx
  401789:	mov    edx,DWORD PTR [ebp-0x1ac]
  40178f:	cmp    edx,DWORD PTR [ebp-0x1b0]
  401795:	jae    0x401820
  40179b:	mov    eax,DWORD PTR [ebp-0x1b8]
  4017a1:	push   eax
  4017a2:	mov    ecx,DWORD PTR [ebp-0x188]
  4017a8:	push   ecx
  4017a9:	call   0x401050
  4017ae:	add    esp,0x8
  4017b1:	mov    DWORD PTR [ebp-0x1bc],eax
  4017b7:	mov    edx,DWORD PTR [ebp-0x1bc]
  4017bd:	push   edx
  4017be:	mov    eax,ds:0x446590
  4017c3:	add    eax,DWORD PTR [ebp-0x154]
  4017c9:	push   eax
  4017ca:	mov    ecx,DWORD PTR [ebp-0x150]
  4017d0:	add    ecx,DWORD PTR [ebp-0x1ac]
  4017d6:	push   ecx
  4017d7:	call   0x44152a
  4017dc:	add    esp,0xc
  4017df:	mov    edx,DWORD PTR [ebp-0x11c]
  4017e5:	add    edx,DWORD PTR [ebp-0x188]
  4017eb:	add    edx,DWORD PTR [ebp-0x154]
  4017f1:	mov    DWORD PTR [ebp-0x154],edx
  4017f7:	mov    eax,DWORD PTR [ebp-0x1ac]
  4017fd:	add    eax,DWORD PTR [ebp-0x188]
  401803:	mov    DWORD PTR [ebp-0x1ac],eax
  401809:	mov    ecx,DWORD PTR [ebp-0x1b8]
  40180f:	sub    ecx,DWORD PTR [ebp-0x1bc]
  401815:	mov    DWORD PTR [ebp-0x1b8],ecx
  40181b:	jmp    0x401789
  401820:	mov    edx,DWORD PTR [ebp-0x1b0]
  401826:	push   edx
  401827:	mov    eax,DWORD PTR [ebp-0x150]
  40182d:	push   eax
  40182e:	call   0x401190
  401833:	add    esp,0x8
  401836:	mov    ecx,DWORD PTR [ebp-0x190]
  40183c:	mov    edx,DWORD PTR [ebp-0x150]
  401842:	mov    DWORD PTR [ecx],edx
  401844:	push   0x40000
  401849:	call   0x401010
  40184e:	add    esp,0x4
  401851:	mov    DWORD PTR [ebp-0x4],eax
  401854:	lea    eax,[ebp-0x158]
  40185a:	push   eax
  40185b:	push   0x20019
  401860:	push   0x0
  401862:	push   0x442178
  401867:	push   0x80000002
  40186c:	call   DWORD PTR ds:0x4432cc
  401872:	test   eax,eax
  401874:	je     0x40187a
  401876:	xor    eax,eax
  401878:	jmp    0x4018e0
  40187a:	push   0x3d200
  40187f:	mov    ecx,DWORD PTR [ebp-0x190]
  401885:	push   ecx
  401886:	mov    edx,DWORD PTR [ebp-0x4]
  401889:	add    edx,0x300
  40188f:	push   edx
  401890:	call   0x44152a
  401895:	add    esp,0xc
  401898:	mov    eax,DWORD PTR [ebp-0x4]
  40189b:	sub    eax,0x400000
  4018a0:	push   eax
  4018a1:	mov    ecx,DWORD PTR [ebp-0x4]
  4018a4:	push   ecx
  4018a5:	mov    edx,DWORD PTR [ebp-0x150]
  4018ab:	push   edx
  4018ac:	call   0x401130
  4018b1:	add    esp,0xc
  4018b4:	mov    esp,DWORD PTR ds:0x44669c
  4018ba:	pop    ecx
  4018bb:	mov    ecx,DWORD PTR [ebp-0x4]
  4018be:	add    ecx,0x3d190
  4018c4:	mov    edx,ecx
  4018c6:	call   0x4018cb
  4018cb:	pop    eax
  4018cc:	call   0x4018d1
  4018d1:	pop    eax
  4018d2:	call   0x4018d7
  4018d7:	pop    eax
  4018d8:	call   0x4018dd
  4018dd:	pop    eax
  4018de:	jmp    edx
  4018e0:	mov    esp,ebp
  4018e2:	pop    ebp
  4018e3:	ret    
  4018e4:	int3   
  4018e5:	int3   
  4018e6:	int3   
  4018e7:	int3   
  4018e8:	int3   
  4018e9:	int3   
  4018ea:	int3   
  4018eb:	int3   
  4018ec:	int3   
  4018ed:	int3   
  4018ee:	int3   
  4018ef:	int3   
  4018f0:	push   ebp
  4018f1:	mov    ebp,esp
  4018f3:	mov    eax,ds:0x442014
  4018f8:	mov    BYTE PTR [eax+0x3],0x73
  4018fc:	mov    ecx,DWORD PTR ds:0x442014
  401902:	mov    BYTE PTR [ecx+0x4],0x74
  401906:	mov    edx,DWORD PTR ds:0x442014
  40190c:	mov    BYTE PTR [edx+0x5],0x65
  401910:	mov    eax,ds:0x442014
  401915:	mov    BYTE PTR [eax+0x6],0x6d
  401919:	mov    ecx,DWORD PTR ds:0x442014
  40191f:	mov    BYTE PTR [ecx+0x7],0x33
  401923:	mov    edx,DWORD PTR ds:0x442014
  401929:	mov    BYTE PTR [edx+0x8],0x32
  40192d:	mov    eax,ds:0x442014
  401932:	mov    BYTE PTR [eax+0x9],0x5c
  401936:	mov    ecx,DWORD PTR ds:0x442014
  40193c:	mov    BYTE PTR [ecx+0xa],0x61
  401940:	mov    edx,DWORD PTR ds:0x442014
  401946:	mov    BYTE PTR [edx+0xb],0x74
  40194a:	mov    eax,ds:0x442014
  40194f:	mov    BYTE PTR [eax+0xc],0x6c
  401953:	mov    ecx,DWORD PTR ds:0x442014
  401959:	mov    BYTE PTR [ecx+0xd],0x2e
  40195d:	mov    edx,DWORD PTR ds:0x442014
  401963:	mov    BYTE PTR [edx+0xe],0x64
  401967:	mov    eax,ds:0x442014
  40196c:	mov    BYTE PTR [eax+0xf],0x6c
  401970:	mov    ecx,DWORD PTR ds:0x442014
  401976:	mov    BYTE PTR [ecx+0x10],0x6c
  40197a:	mov    edx,DWORD PTR ds:0x442014
  401980:	mov    BYTE PTR [edx],0x5c
  401983:	mov    eax,ds:0x442014
  401988:	mov    BYTE PTR [eax+0x1],0x73
  40198c:	mov    ecx,DWORD PTR ds:0x442014
  401992:	mov    BYTE PTR [ecx+0x2],0x79
  401996:	pop    ebp
  401997:	ret    
  401998:	add    dl,dl
  40199a:	add    eax,DWORD PTR [eax]
  40199c:	xchg   BYTE PTR [edi+0x27c90049],dl
  4019a2:	jle    0x4019f4
  4019a4:	hlt    
  4019a5:	sub    eax,0x26ea4169
  4019aa:	js     0x401a11
  4019ac:	aad    0x31
  4019ae:	or     al,BYTE PTR [eax]
  4019b0:	ret    0x6b2d
  4019b3:	fs mov edx,0xa772682b
  4019b9:	xor    BYTE PTR [ebx+0x45],dh
  4019bc:	mov    esi,0xc2000a03
  4019c1:	sub    eax,0x2bba646b
  4019c6:	push   0x7330a772
  4019cb:	inc    ebp
  4019cc:	sahf   
  4019cd:	adc    eax,0x27c9000a
  4019d2:	jle    0x401a21
  4019d4:	cdq    
  4019d5:	es jg  0x401a44
  4019d8:	imul   ecx,DWORD PTR [edx],0x6b
  4019db:	outs   dx,BYTE PTR ds:[esi]
  4019dc:	bound  ebp,QWORD PTR [esi]
  4019de:	outs   dx,DWORD PTR ds:[esi]
  4019df:	inc    ecx
  4019e0:	xchg   BYTE PTR [edx+0xa],al
  4019e3:	add    BYTE PTR [ebp+0x30],al
  4019e6:	outs   dx,DWORD PTR ds:[esi]
  4019e7:	popa   
  4019e8:	pop    edx
  4019e9:	daa    
  4019ea:	dec    esp
  4019eb:	imul   ebp,DWORD PTR [edx+0x27],0x3162004b
  4019f2:	jle    0x401a66
  4019f4:	and    edi,DWORD PTR gs:[esi+0x41]
  4019f8:	xchg   BYTE PTR [edx+0xa],al
  4019fb:	add    BYTE PTR [ecx+0x27],al
  4019fe:	jle    0x401a57
  401a00:	add    BYTE PTR [edi],bl
  401a02:	sub    al,0x6e
  401a04:	outs   dx,DWORD PTR ds:[esi]
  401a05:	xor    DWORD PTR [ecx],esi
  401a07:	dec    esi
  401a08:	imul   edx,DWORD PTR [edi+eiz*1],0x30297469
  401a0f:	jae    0x401a52
  401a11:	xchg   BYTE PTR [edx+0xa],al
  401a14:	add    BYTE PTR [ecx+0x27],al
  401a17:	jle    0x401a66
  401a19:	icebp  
  401a1a:	es jg  0x401a89
  401a1d:	jecxz  0x401a29
  401a1f:	imul   ebp,DWORD PTR [esi-0x16],0x2e
  401a23:	outs   dx,DWORD PTR ds:[esi]
  401a24:	push   edi
  401a25:	xchg   BYTE PTR [edx+0xa],al
  401a28:	add    BYTE PTR [edx+0x72004a3f],cl
  401a2e:	aas    
  401a2f:	dec    edx
  401a30:	add    BYTE PTR [edx-0x6dffb5c1],ch
  401a36:	aas    
  401a37:	dec    edx
  401a38:	add    dh,cl
  401a3a:	aas    
  401a3b:	dec    edx
  401a3c:	add    dl,dl
  401a3e:	aas    
  401a3f:	dec    edx
  401a40:	add    BYTE PTR [esi-0x51ffb5c1],ah
  401a46:	aas    
  401a47:	dec    edx
  401a48:	add    cl,cl
  401a4a:	and    eax,0x2b94507e
  401a4f:	imul   eax,DWORD PTR [ecx-0x56],0x95657826
  401a56:	das    
  401a57:	or     al,BYTE PTR [eax]
  401a59:	push   edx
  401a5a:	sub    ebp,DWORD PTR [ebx+0x64]
  401a5d:	dec    edx
  401a5e:	sub    DWORD PTR [eax+0x72],ebp
  401a61:	xor    BYTE PTR [bp+di+0x45],dh
  401a65:	add    BYTE PTR [esi+0x1],ch
  401a68:	or     al,BYTE PTR [eax]
  401a6a:	ins    DWORD PTR es:[edi],dx
  401a6b:	and    eax,0x2e636e78
  401a70:	cmp    DWORD PTR [edx],esi
  401a72:	mov    al,ds:0x866c6626
  401a77:	inc    edx
  401a78:	or     al,BYTE PTR [eax]
  401a7a:	xor    ebp,DWORD PTR [edi]
  401a7c:	jl     0x401ae1
  401a7e:	xor    al,0x36
  401a80:	and    al,0x64
  401a82:	and    ch,BYTE PTR [esi]
  401a84:	or     al,BYTE PTR [eax]
  401a86:	sbb    esp,DWORD PTR ds:0x362b7367
  401a8c:	or     al,BYTE PTR [eax]
  401a8e:	sub    ebp,DWORD PTR [edi]
  401a90:	jl     0x401af5
  401a92:	adc    al,0x36
  401a94:	and    al,0x64
  401a96:	sbb    ch,BYTE PTR [esi]
  401a98:	or     al,BYTE PTR [eax]
  401a9a:	repz and eax,0x39f66367
  401aa0:	or     al,BYTE PTR [eax]
  401aa2:	fsubr  DWORD PTR [ecx]
  401aa4:	js     0x401b1a
  401aa6:	repz and DWORD PTR [esi+0x41],esp
  401aaa:	repnz cs arpl WORD PTR gs:[esi-0x47fff5be],ax
  401ab3:	sub    DWORD PTR [eax+0x74],edi
  401ab6:	shl    DWORD PTR [ecx],cl
  401ab8:	inc    cx
  401aba:	mov    dl,0x2e
  401abc:	arpl   WORD PTR gs:[esi-0x24fff5be],ax
  401ac3:	sub    al,0x67
  401ac5:	popa   
  401ac6:	mov    dh,0x14
  401ac8:	arpl   WORD PTR [ebp+0x0],sp
  401acb:	cdq    
  401acc:	or     ebp,DWORD PTR [esi+eax*2-0x51]
  401ad0:	outs   dx,DWORD PTR cs:[esi]
  401ad2:	add    BYTE PTR [eax-0x6c8b87d7],bh
  401ad8:	and    DWORD PTR [esi+0x50],esp
  401adb:	je     0x401b08
  401add:	jle    0x401b44
  401adf:	gs or  al,BYTE PTR ss:[eax]
  401ae3:	ds and eax,0x2e47706b
  401ae9:	outs   dx,WORD PTR ds:[esi]
  401aeb:	gs inc edx
  401aed:	or     al,BYTE PTR [eax]
  401aef:	ins    DWORD PTR es:[edi],dx
  401af0:	and    eax,0x2e6b6e78
  401af5:	cmp    DWORD PTR [edx],esi
  401af7:	cwde   
  401af8:	es data16 ins BYTE PTR es:[edi],dx
  401afb:	xchg   BYTE PTR [edx+0xa],al
  401afe:	add    BYTE PTR [ecx+0x25],al
  401b01:	jle    0x401b53
  401b03:	xor    al,0x2b
  401b05:	imul   esp,DWORD PTR [ebp+0x35],0x2765422f
  401b0c:	xor    cl,BYTE PTR [edx]
  401b0e:	add    BYTE PTR [esi-0x79fc49be],al
  401b14:	out    0x53,al
  401b16:	add    BYTE PTR [esi-0x79fff657],al
  401b1c:	stos   DWORD PTR es:[edi],eax
  401b1d:	or     DWORD PTR [eax],eax
  401b1f:	xchg   BYTE PTR [ebx-0x5479fff7],ch
  401b25:	or     DWORD PTR [eax],eax
  401b27:	xchg   BYTE PTR [ebx-0x5479fff7],ch
  401b2d:	or     DWORD PTR [eax],eax
  401b2f:	add    BYTE PTR [esi-0x79fff655],al
  401b35:	stos   DWORD PTR es:[edi],eax
  401b36:	or     DWORD PTR [eax],eax
  401b38:	xchg   BYTE PTR [ebx-0x5479fff7],ch
  401b3e:	or     DWORD PTR [eax],eax
  401b40:	xchg   BYTE PTR [ebx-0x5479fff7],ch
  401b46:	or     DWORD PTR [eax],eax
  401b48:	xchg   BYTE PTR [ebx-0x5479fff7],ch
  401b4e:	or     DWORD PTR [eax],eax
  401b50:	xchg   bl,ah
  401b52:	push   cs
  401b53:	add    BYTE PTR [esi-0x79fff655],al
  401b59:	stos   DWORD PTR es:[edi],eax
  401b5a:	or     DWORD PTR [eax],eax
  401b5c:	xchg   BYTE PTR [ebx-0x5479fff7],ch
  401b62:	or     DWORD PTR [eax],eax
  401b64:	xchg   BYTE PTR [ebx-0x5479fff7],ch
  401b6a:	or     DWORD PTR [eax],eax
  401b6c:	xchg   BYTE PTR [ebx-0x5479fff7],ch
  401b72:	or     DWORD PTR [eax],eax
  401b74:	xchg   BYTE PTR [ebx-0x5479fff7],ch
  401b7a:	or     DWORD PTR [eax],eax
  401b7c:	xchg   BYTE PTR [ebx-0x5479fff7],ch
  401b82:	or     DWORD PTR [eax],eax
  401b84:	xchg   BYTE PTR [ebx-0x5479fff7],ch
  401b8a:	or     DWORD PTR [eax],eax
  401b8c:	xchg   BYTE PTR [edx-0x1d],al
  401b8f:	add    eax,DWORD PTR [esi+0x3e342]
  401b95:	xchg   BYTE PTR [edx-0x1d],al
  401b98:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  401b9e:	inc    edx
  401b9f:	jecxz  0x401ba4
  401ba1:	xchg   BYTE PTR [edx-0x1d],al
  401ba4:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  401baa:	inc    edx
  401bab:	jecxz  0x401bb0
  401bad:	xchg   BYTE PTR [edx-0x1d],al
  401bb0:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  401bb6:	inc    edx
  401bb7:	jecxz  0x401bbc
  401bb9:	xchg   BYTE PTR [edx-0x1d],al
  401bbc:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  401bc2:	inc    edx
  401bc3:	jecxz  0x401bc8
  401bc5:	xchg   BYTE PTR [edx-0x1d],al
  401bc8:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  401bce:	inc    edx
  401bcf:	jecxz  0x401bd4
  401bd1:	xchg   BYTE PTR [edx-0x1d],al
  401bd4:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  401bda:	inc    edx
  401bdb:	jecxz  0x401be0
  401bdd:	xchg   BYTE PTR [edx-0x1d],al
  401be0:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  401be6:	inc    edx
  401be7:	jecxz  0x401bec
  401be9:	xchg   BYTE PTR [edx-0x1d],al
  401bec:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  401bf2:	inc    edx
  401bf3:	jecxz  0x401bf8
  401bf5:	xchg   BYTE PTR [edx-0x1d],al
  401bf8:	add    eax,DWORD PTR [eax]
  401bfa:	xchg   BYTE PTR [edx-0x1d],al
  401bfd:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  401c03:	inc    edx
  401c04:	jecxz  0x401c09
  401c06:	xchg   BYTE PTR [edx+0xa],al
  401c09:	jmp    0xe94a5e93
  401c0e:	test   DWORD PTR [edx+0xa],eax
  401c11:	mov    ecx,0xad0a4246
  401c16:	mov    al,BYTE PTR [ebp+0xa]
  401c19:	or     BYTE PTR [edi-0x7a16bad2],al
  401c1f:	inc    edx
  401c20:	or     ch,cl
  401c22:	test   DWORD PTR [edx+0xa],eax
  401c25:	or     DWORD PTR [ebp-0x7d1df4bc],eax
  401c2b:	dec    esp
  401c2c:	or     ch,cl
  401c2e:	loope  0x401c73
  401c30:	or     ch,cl
  401c32:	mov    ch,0x42
  401c34:	or     ch,cl
  401c36:	test   DWORD PTR [edx+0xa],eax
  401c39:	nop
  401c3a:	adc    al,0x43
  401c3c:	or     ch,cl
  401c3e:	xchg   ebp,eax
  401c3f:	inc    edx
  401c40:	or     ch,cl
  401c42:	in     eax,0x43
  401c44:	or     ch,cl
  401c46:	test   DWORD PTR [edx],eax
  401c48:	or     ch,cl
  401c4a:	xchg   ebp,eax
  401c4b:	inc    edx
  401c4c:	or     ch,cl
  401c4e:	mov    eax,DWORD PTR [edx+0xa]
  401c51:	in     al,dx
  401c52:	test   DWORD PTR [ecx+0xa],eax
  401c55:	call   0xec4a5edf
  401c5a:	test   DWORD PTR [ecx+0xa],eax
  401c5d:	jmp    0xa82a162
  401c62:	jmp    0xe94a5aec
  401c67:	icebp  
  401c68:	mov    bh,0xf5
  401c6a:	jmp    0xeb4a5ef4
  401c6f:	test   DWORD PTR [edx-0x75],eax
  401c72:	jmp    0xe94a6efc
  401c77:	jne    0x401cbb
  401c79:	or     ch,cl
  401c7b:	test   DWORD PTR [edx+0xa],edx
  401c7e:	jmp    0x4a5f18
  401c83:	scas   eax,DWORD PTR es:[edi]
  401c84:	inc    ebx
  401c85:	or     al,BYTE PTR [eax]
  401c87:	iret   
  401c88:	inc    ebx
  401c89:	or     al,BYTE PTR [eax]
  401c8b:	lahf   
  401c8c:	inc    ebx
  401c8d:	or     al,BYTE PTR [eax]
  401c8f:	scas   eax,DWORD PTR es:[edi]
  401c90:	inc    ebx
  401c91:	or     al,BYTE PTR [eax]
  401c93:	jnp    0x401cc1
  401c95:	or     DWORD PTR [eax],eax
  401c97:	fild   WORD PTR [edx+ecx*1+0x0]
  401c9b:	lahf   
  401c9c:	inc    ebx
  401c9d:	or     al,BYTE PTR [eax]
  401c9f:	outs   dx,DWORD PTR ds:[esi]
  401ca0:	inc    ebx
  401ca1:	or     al,BYTE PTR [eax]
  401ca3:	outs   dx,DWORD PTR ds:[esi]
  401ca4:	inc    ebx
  401ca5:	or     al,BYTE PTR [eax]
  401ca7:	pop    edi
  401ca8:	inc    ebx
  401ca9:	or     al,BYTE PTR [eax]
  401cab:	pop    edi
  401cac:	inc    ebx
  401cad:	or     al,BYTE PTR [eax]
  401caf:	outs   dx,DWORD PTR ds:[esi]
  401cb0:	inc    ebx
  401cb1:	or     al,BYTE PTR [eax]
  401cb3:	outs   dx,DWORD PTR ds:[esi]
  401cb4:	xchg   ebx,eax
  401cb5:	or     DWORD PTR [eax],eax
  401cb7:	jg     0x401d15
  401cb9:	or     al,BYTE PTR [eax]
  401cbb:	pop    edi
  401cbc:	inc    ebx
  401cbd:	or     al,BYTE PTR [eax]
  401cbf:	das    
  401cc0:	inc    ebx
  401cc1:	or     al,BYTE PTR [eax]
  401cc3:	add    BYTE PTR [edi],ch
  401cc5:	inc    ebx
  401cc6:	or     al,BYTE PTR [eax]
  401cc8:	pop    ds
  401cc9:	inc    ebx
  401cca:	or     al,BYTE PTR [eax]
  401ccc:	pop    ds
  401ccd:	inc    ebx
  401cce:	or     al,BYTE PTR [eax]
  401cd0:	das    
  401cd1:	inc    ebx
  401cd2:	or     al,BYTE PTR [eax]
  401cd4:	das    
  401cd5:	inc    ebx
  401cd6:	or     al,BYTE PTR [eax]
  401cd8:	pop    ds
  401cd9:	inc    ebx
  401cda:	or     al,BYTE PTR [eax]
  401cdc:	pop    ds
  401cdd:	inc    ebx
  401cde:	or     al,BYTE PTR [eax]
  401ce0:	out    dx,eax
  401ce1:	inc    edx
  401ce2:	or     al,BYTE PTR [eax]
  401ce4:	out    dx,eax
  401ce5:	inc    edx
  401ce6:	or     al,BYTE PTR [eax]
  401ce8:	fild   WORD PTR [edx+0xa]
  401ceb:	add    bh,bl
  401ced:	push   edx
  401cee:	or     al,BYTE PTR [eax]
  401cf0:	push   ebx
  401cf1:	inc    ecx
  401cf2:	or     al,BYTE PTR [eax]
  401cf4:	out    dx,eax
  401cf5:	inc    edx
  401cf6:	or     al,BYTE PTR [eax]
  401cf8:	fild   WORD PTR [edx+0xa]
  401cfb:	add    BYTE PTR [esi-0x79fff657],al
  401d01:	test   eax,0xa9860009
  401d06:	or     DWORD PTR [eax],eax
  401d08:	xchg   BYTE PTR [ecx+0x3f860009],ch
  401d0e:	jp     0x401d75
  401d10:	push   ds
  401d11:	in     eax,dx
  401d12:	or     DWORD PTR [eax],eax
  401d14:	xchg   BYTE PTR [ecx-0x71],dl
  401d17:	add    eax,DWORD PTR [esi-0x79ffe657]
  401d1d:	test   eax,0xab860375
  401d22:	cmc    
  401d23:	(bad)  
  401d24:	jns    0x401cd2
  401d26:	or     DWORD PTR [eax],eax
  401d28:	add    BYTE PTR [esi-0x79fff655],al
  401d2e:	stos   DWORD PTR es:[edi],eax
  401d2f:	or     DWORD PTR [eax],eax
  401d31:	xchg   BYTE PTR [ebx+0x4de60009],cl
  401d37:	push   0x61
  401d39:	fimul  DWORD PTR [edx]
  401d3b:	push   cs
  401d3c:	add    BYTE PTR [esi-0x79ffeb9d],al
  401d42:	stos   DWORD PTR es:[edi],eax
  401d43:	test   eax,0x3ab8603
  401d48:	add    BYTE PTR [esi-0x79fc7e55],al
  401d4e:	stos   DWORD PTR es:[edi],eax
  401d4f:	or     DWORD PTR [eax],eax
  401d51:	xchg   BYTE PTR [ebx-0x5479fff7],ch
  401d57:	or     DWORD PTR [eax],eax
  401d59:	xchg   BYTE PTR [ebx+0xe],ch
  401d5c:	add    BYTE PTR [esi+0x7e],al
  401d5f:	jnp    0x401dc6
  401d61:	jb     0x401d17
  401d63:	push   0x15ed8600
  401d68:	add    BYTE PTR [esi-0x79fc2655],al
  401d6e:	stos   DWORD PTR es:[edi],eax
  401d6f:	and    DWORD PTR [eax],eax
  401d71:	xchg   BYTE PTR [ebx+0x4286039b],ch
  401d77:	jecxz  0x401d7c
  401d79:	xchg   BYTE PTR [edx-0x1d],al
  401d7c:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  401d82:	inc    edx
  401d83:	mov    ds:0xe3008603,eax
  401d88:	add    eax,DWORD PTR [esi+0x3e342]
  401d8e:	xchg   BYTE PTR [edx-0x1d],al
  401d91:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  401d97:	inc    edx
  401d98:	jecxz  0x401d9d
  401d9a:	xchg   BYTE PTR [edx-0x1d],al
  401d9d:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  401da3:	inc    edx
  401da4:	jecxz  0x401da9
  401da6:	xchg   BYTE PTR [edx-0x1d],al
  401da9:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  401daf:	inc    edx
  401db0:	jecxz  0x401db5
  401db2:	xchg   BYTE PTR [edx-0x1d],al
  401db5:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  401dbb:	inc    edx
  401dbc:	jecxz  0x401dc1
  401dbe:	xchg   BYTE PTR [edx-0x1d],al
  401dc1:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  401dc7:	inc    edx
  401dc8:	jecxz  0x401dcd
  401dca:	xchg   BYTE PTR [edx-0x1d],al
  401dcd:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  401dd3:	inc    edx
  401dd4:	jecxz  0x401dd9
  401dd6:	xchg   BYTE PTR [edx-0x1d],al
  401dd9:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  401ddf:	inc    edx
  401de0:	jecxz  0x401de5
  401de2:	xchg   BYTE PTR [edx-0x1d],al
  401de5:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  401deb:	inc    edx
  401dec:	jecxz  0x401df1
  401dee:	xchg   BYTE PTR [edx+0xa],al
  401df1:	jmp    0xa82a2f6
  401df6:	jmp    0xe94a6080
  401dfb:	test   DWORD PTR [edx+0xa],eax
  401dfe:	jmp    0xe94a6088
  401e03:	test   DWORD PTR [edx+0xa],eax
  401e06:	jmp    0xe94a6090
  401e0b:	test   DWORD PTR [edx+0xa],eax
  401e0e:	jmp    0xe94a6098
  401e13:	test   DWORD PTR [edx+0xa],eax
  401e16:	jmp    0xe94a60a0
  401e1b:	test   DWORD PTR [edx+0xa],eax
  401e1e:	jmp    0xe94a60a8
  401e23:	test   DWORD PTR [edx+0xa],eax
  401e26:	jmp    0xe94a60b0
  401e2b:	test   DWORD PTR [edx+0xa],eax
  401e2e:	jmp    0xe94a60b8
  401e33:	test   DWORD PTR [edx+0xa],eax
  401e36:	jmp    0xe94a60c0
  401e3b:	test   DWORD PTR [edx+0xa],eax
  401e3e:	jmp    0xe94a60c8
  401e43:	test   DWORD PTR [edx+0xa],eax
  401e46:	jmp    0xe94a60d0
  401e4b:	test   DWORD PTR [edx+0xa],eax
  401e4e:	jmp    0xe94a60d8
  401e53:	test   DWORD PTR [edx+0xa],eax
  401e56:	jmp    0xa82a35b
  401e5b:	jmp    0xe94a60e5
  401e60:	test   DWORD PTR [edx+0xa],eax
  401e63:	jmp    0xe94a60ed
  401e68:	test   DWORD PTR [edx+0xa],eax
  401e6b:	add    bh,bl
  401e6d:	aas    
  401e6e:	or     al,BYTE PTR [eax]
  401e70:	fistp  QWORD PTR [edi]
  401e72:	or     al,BYTE PTR [eax]
  401e74:	out    dx,eax
  401e75:	aas    
  401e76:	or     al,BYTE PTR [eax]
  401e78:	out    dx,eax
  401e79:	aas    
  401e7a:	or     al,BYTE PTR [eax]
  401e7c:	fistp  QWORD PTR [edi]
  401e7e:	or     al,BYTE PTR [eax]
  401e80:	fistp  QWORD PTR [edi]
  401e82:	or     al,BYTE PTR [eax]
  401e84:	scas   eax,DWORD PTR es:[edi]
  401e85:	aas    
  401e86:	or     al,BYTE PTR [eax]
  401e88:	scas   eax,DWORD PTR es:[edi]
  401e89:	aas    
  401e8a:	or     al,BYTE PTR [eax]
  401e8c:	lahf   
  401e8d:	aas    
  401e8e:	or     al,BYTE PTR [eax]
  401e90:	lahf   
  401e91:	aas    
  401e92:	or     al,BYTE PTR [eax]
  401e94:	scas   eax,DWORD PTR es:[edi]
  401e95:	aas    
  401e96:	or     al,BYTE PTR [eax]
  401e98:	scas   eax,DWORD PTR es:[edi]
  401e99:	aas    
  401e9a:	or     al,BYTE PTR [eax]
  401e9c:	lahf   
  401e9d:	aas    
  401e9e:	or     al,BYTE PTR [eax]
  401ea0:	lahf   
  401ea1:	aas    
  401ea2:	or     al,BYTE PTR [eax]
  401ea4:	outs   dx,DWORD PTR ds:[esi]
  401ea5:	aas    
  401ea6:	or     al,BYTE PTR [eax]
  401ea8:	outs   dx,DWORD PTR ds:[esi]
  401ea9:	aas    
  401eaa:	or     al,BYTE PTR [eax]
  401eac:	pop    edi
  401ead:	aas    
  401eae:	or     al,BYTE PTR [eax]
  401eb0:	pop    edi
  401eb1:	aas    
  401eb2:	or     al,BYTE PTR [eax]
  401eb4:	outs   dx,DWORD PTR ds:[esi]
  401eb5:	aas    
  401eb6:	or     al,BYTE PTR [eax]
  401eb8:	outs   dx,DWORD PTR ds:[esi]
  401eb9:	aas    
  401eba:	or     al,BYTE PTR [eax]
  401ebc:	add    BYTE PTR [edi+0x3f],bl
  401ebf:	or     al,BYTE PTR [eax]
  401ec1:	pop    edi
  401ec2:	aas    
  401ec3:	or     al,BYTE PTR [eax]
  401ec5:	das    
  401ec6:	aas    
  401ec7:	or     al,BYTE PTR [eax]
  401ec9:	das    
  401eca:	aas    
  401ecb:	or     al,BYTE PTR [eax]
  401ecd:	pop    ds
  401ece:	aas    
  401ecf:	or     al,BYTE PTR [eax]
  401ed1:	pop    ds
  401ed2:	aas    
  401ed3:	or     al,BYTE PTR [eax]
  401ed5:	das    
  401ed6:	aas    
  401ed7:	or     al,BYTE PTR [eax]
  401ed9:	das    
  401eda:	aas    
  401edb:	or     al,BYTE PTR [eax]
  401edd:	pop    ds
  401ede:	aas    
  401edf:	or     al,BYTE PTR [eax]
  401ee1:	pop    ds
  401ee2:	aas    
  401ee3:	or     al,BYTE PTR [eax]
  401ee5:	xchg   BYTE PTR [ecx-0x5679fff7],ch
  401eeb:	or     DWORD PTR [eax],eax
  401eed:	xchg   BYTE PTR [ecx-0x5679fff7],ch
  401ef3:	or     DWORD PTR [eax],eax
  401ef5:	xchg   BYTE PTR [ecx-0x5679fff7],ch
  401efb:	or     DWORD PTR [eax],eax
  401efd:	xchg   BYTE PTR [ecx-0x5679fff7],ch
  401f03:	or     DWORD PTR [eax],eax
  401f05:	xchg   BYTE PTR [ecx-0x5679fff7],ch
  401f0b:	or     DWORD PTR [eax],eax
  401f0d:	xchg   BYTE PTR [ecx-0x5679fff7],ch
  401f13:	or     DWORD PTR [eax],eax
  401f15:	xchg   BYTE PTR [ecx-0x5679fff7],ch
  401f1b:	or     DWORD PTR [eax],eax
  401f1d:	xchg   BYTE PTR [ecx-0x79fffff7],ch
  401f23:	test   eax,0xdd860009
  401f28:	jbe    0x401f2d
  401f2a:	xchg   bh,al
  401f2c:	jbe    0x401f31
  401f2e:	xchg   cl,cl
  401f30:	jbe    0x401f35
  401f32:	xchg   BYTE PTR ds:0x5860376,cl
  401f38:	jbe    0x401f3d
  401f3a:	xchg   BYTE PTR [ebx+0x76],bl
  401f3d:	add    eax,DWORD PTR [esi-0x79fc7e13]
  401f43:	mov    DWORD PTR [ecx-0x7e6e79fd],eax
  401f49:	add    eax,DWORD PTR [esi-0x79fc8e5b]
  401f4f:	cmp    esi,DWORD PTR [esi+0x3]
  401f52:	xchg   BYTE PTR [ebp+0x67860371],ch
  401f58:	jbe    0x401f5d
  401f5a:	xchg   ch,bh
  401f5c:	jne    0x401f61
  401f5e:	xchg   BYTE PTR [edx+0x29],al
  401f61:	jl     0x401ee8
  401f63:	inc    edx
  401f64:	jno    0x401fe2
  401f66:	test   DWORD PTR [edx+0x49],eax
  401f69:	jl     0x401ef0
  401f6b:	inc    edx
  401f6c:	mov    eax,ds:0x9542857c
  401f71:	jl     0x401ef8
  401f73:	inc    edx
  401f74:	fwait
  401f75:	jl     0x401efc
  401f77:	inc    edx
  401f78:	jns    0x401ff6
  401f7a:	test   DWORD PTR [edx-0x23],eax
  401f7d:	jl     0x401f04
  401f7f:	inc    edx
  401f80:	adc    eax,0xb142857d
  401f85:	jl     0x401f87
  401f87:	test   DWORD PTR [edx+0x69],eax
  401f8a:	jge    0x401f11
  401f8c:	inc    edx
  401f8d:	lea    edi,[ebp-0x7b]
  401f90:	inc    edx
  401f91:	and    DWORD PTR [ebp-0x7b],edi
  401f94:	inc    edx
  401f95:	pop    ds
  401f96:	jge    0x401f1d
  401f98:	inc    edx
  401f99:	dec    ebx
  401f9a:	jge    0x401f21
  401f9c:	inc    edx
  401f9d:	cmp    edi,DWORD PTR [ebp-0x7b]
  401fa0:	inc    edx
  401fa1:	in     eax,0x7d
  401fa3:	test   DWORD PTR [edx+0xb],eax
  401fa6:	jle    0x401f2d
  401fa8:	inc    edx
  401fa9:	mov    bh,0x8a
  401fab:	test   DWORD PTR [edx-0x1d],eax
  401fae:	add    eax,DWORD PTR [esi-0x7a7df6be]
  401fb4:	inc    edx
  401fb5:	pop    ss
  401fb6:	add    BYTE PTR [ebp-0x7a7dd6be],0x42
  401fbd:	xor    DWORD PTR [edx-0x7e8cbd7b],eax
  401fc3:	test   DWORD PTR [edx+0x69],eax
  401fc6:	add    BYTE PTR [ebp-0x7a7db8be],0x42
  401fcd:	out    0x82,eax
  401fcf:	test   DWORD PTR [edx-0x1d],eax
  401fd2:	add    eax,DWORD PTR [esi-0x7a7f9abe]
  401fd8:	inc    edx
  401fd9:	or     bl,bl
  401fdb:	push   es
  401fdc:	inc    ebp
  401fdd:	or     dh,BYTE PTR [ecx+0x6d0a4591]
  401fe3:	push   es
  401fe4:	inc    ebp
  401fe5:	or     ah,BYTE PTR [ecx]
  401fe7:	pop    es
  401fe8:	inc    ebp
  401fe9:	or     cl,BYTE PTR ds:0xa450700
  401fef:	xor    DWORD PTR [edi],eax
  401ff1:	inc    ebp
  401ff2:	or     dh,BYTE PTR [ebx]
  401ff4:	pop    es
  401ff5:	inc    ebp
  401ff6:	or     ch,BYTE PTR [ecx]
  401ff8:	pop    es
  401ff9:	inc    ebp
  401ffa:	or     bh,BYTE PTR [ebp-0x3ef5bafa]
  402000:	push   es
  402001:	inc    ebp
  402002:	or     dl,BYTE PTR [ecx+0x49]
  402005:	inc    ebp
  402006:	or     al,BYTE PTR [ebx+0x210a4506]
  40200c:	cmp    DWORD PTR [ebp+0xa],eax
  40200f:	xor    DWORD PTR [ecx],esi
  402011:	inc    ebp
  402012:	or     ch,cl
  402014:	test   DWORD PTR [edx+0xa],eax
  402017:	pop    ecx
  402018:	cli    
  402019:	inc    esp
  40201a:	or     ch,cl
  40201c:	test   DWORD PTR [edx+0xa],eax
  40201f:	scas   eax,DWORD PTR es:[edi]
  402020:	and    BYTE PTR [ebp+0xa],al
  402023:	jns    0x40203d
  402025:	inc    ebp
  402026:	or     al,BYTE PTR [edi-0x10]
  402029:	inc    ebx
  40202a:	or     dl,BYTE PTR [ebx-0x18]
  40202d:	inc    ebx
  40202e:	or     bl,BYTE PTR [edi]
  402030:	loopne 0x402075
  402032:	or     cl,BYTE PTR [edi]
  402034:	fadd   DWORD PTR [ebx+0xa]
  402037:	sti    
  402038:	repz inc ebx
  40203a:	or     dh,bh
  40203c:	jmp    0x402081
  40203e:	or     ah,bl
  402040:	loope  0x402085
  402042:	or     bh,bh
  402044:	fld    DWORD PTR [ebx+0xa]
  402047:	pop    es
  402048:	mov    dh,0x43
  40204a:	or     bl,BYTE PTR [edi]
  40204c:	mov    dh,0x43
  40204e:	or     ah,BYTE PTR [ebx]
  402050:	add    BYTE PTR [esi-0x44fff5bd],dh
  402056:	xor    cl,BYTE PTR [ecx]
  402058:	add    BYTE PTR [ecx+0x32],bl
  40205b:	or     DWORD PTR [eax],eax
  40205d:	stos   DWORD PTR es:[edi],eax
  40205e:	xor    cl,BYTE PTR [ecx]
  402060:	add    BYTE PTR [ebx-0x44fff6ce],bh
  402066:	xor    cl,BYTE PTR [ecx]
  402068:	add    BYTE PTR [edi],ch
  40206a:	xor    ecx,DWORD PTR [ecx]
  40206c:	add    BYTE PTR [ebx],dh
  40206e:	xor    ecx,DWORD PTR [ecx]
  402070:	add    BYTE PTR [ebx],bl
  402072:	xor    ecx,DWORD PTR [ecx]
  402074:	add    bh,cl
  402076:	and    BYTE PTR [ecx],cl
  402078:	add    BYTE PTR [ebp+0x11000920],dh
  40207e:	and    DWORD PTR [ecx],ecx
  402080:	add    BYTE PTR [ebp+0x1f],ch
  402083:	or     DWORD PTR [eax],eax
  402085:	mov    ebp,0xdd000920
  40208a:	and    BYTE PTR [ecx],cl
  40208c:	add    BYTE PTR [edi],ah
  40208e:	pop    ds
  40208f:	or     DWORD PTR [eax],eax
  402091:	cmp    ebx,DWORD PTR [edi]
  402093:	or     DWORD PTR [eax],eax
  402095:	and    DWORD PTR [edi],ebx
  402097:	or     DWORD PTR [eax],eax
  402099:	adc    esp,DWORD PTR [eax]
  40209b:	or     DWORD PTR [eax],eax
  40209d:	adc    eax,0x7100091f
  4020a2:	pop    ds
  4020a3:	or     DWORD PTR [eax],eax
  4020a5:	inc    ebx
  4020a6:	pop    ds
  4020a7:	or     DWORD PTR [eax],eax
  4020a9:	fwait
  4020aa:	pop    ds
  4020ab:	or     DWORD PTR [eax],eax
  4020ad:	add    DWORD PTR [esi],ebx
  4020af:	or     DWORD PTR [eax],eax
  4020b1:	ja     0x4020e4
  4020b3:	or     DWORD PTR [eax],eax
  4020b5:	add    BYTE PTR ds:0x2b000931,ch
  4020bb:	xor    DWORD PTR [ecx],ecx
  4020bd:	add    bh,bh
  4020bf:	xor    BYTE PTR [ecx],cl
  4020c1:	add    bh,bh
  4020c3:	xor    BYTE PTR [ecx],cl
  4020c5:	add    ch,ah
  4020c7:	xor    al,0x9
  4020c9:	add    BYTE PTR [edi-0x79fff6cf],dh
  4020cf:	aaa    
  4020d0:	jnp    0x4020d5
  4020d2:	xchg   BYTE PTR [edi],ch
  4020d4:	jnp    0x4020d9
  4020d6:	xchg   ch,dh
  4020d8:	jnp    0x4020dd
  4020da:	xchg   BYTE PTR [ecx+0x7b],bh
  4020dd:	add    eax,DWORD PTR [esi-0x79fc8415]
  4020e3:	fistp  QWORD PTR [ebx+0x3]
  4020e6:	xchg   BYTE PTR [edi-0x7479fc86],ch
  4020ec:	jp     0x4020f1
  4020ee:	xchg   BYTE PTR [ecx+0x7b],ah
  4020f1:	add    eax,DWORD PTR [esi-0x79fc84c7]
  4020f7:	scas   eax,DWORD PTR es:[edi]
  4020f8:	jp     0x4020fd
  4020fa:	xchg   BYTE PTR [ecx],dh
  4020fc:	jp     0x402101
  4020fe:	xchg   BYTE PTR [ebx],dl
  402100:	jp     0x402105
  402102:	xchg   BYTE PTR [ecx],al
  402104:	jp     0x402109
  402106:	xchg   cl,ah
  402108:	jp     0x40210d
  40210a:	xchg   BYTE PTR [ecx+0x7a],dh
  40210d:	add    eax,DWORD PTR [esi-0x79fc858b]
  402113:	add    edi,DWORD PTR [edx+0x3]
  402116:	xchg   BYTE PTR [ebx],al
  402118:	jp     0x40211d
  40211a:	add    BYTE PTR [esi-0x79fc7661],al
  402120:	xchg   ebp,eax
  402121:	mov    DWORD PTR [ebx],eax
  402123:	xchg   cl,bl
  402125:	mov    DWORD PTR [ebx],eax
  402127:	xchg   cl,ch
  402129:	mov    DWORD PTR [ebx],eax
  40212b:	xchg   BYTE PTR ds:0x3186039f,dl
  402131:	lahf   
  402132:	add    eax,DWORD PTR [esi-0x79fc60db]
  402138:	rcr    DWORD PTR [edi-0x603879fd],0x3
  40213f:	xchg   bl,ah
  402141:	add    ax,WORD PTR [esi-0x79fc9943]
  402148:	inc    edx
  402149:	sbb    DWORD PTR [ebx-0x7b],ebp
  40214c:	inc    edx
  40214d:	imul   DWORD PTR [edx-0x7b]
  402150:	inc    edx
  402151:	in     eax,dx
  402152:	push   0xffffff85
  402154:	inc    edx
  402155:	lds    ebp,FWORD PTR [edx-0x7b]
  402158:	inc    edx
  402159:	(bad)  [edx-0x7b]
  40215c:	inc    edx
  40215d:	test   eax,0xaf42856a
  402162:	push   0xffffff85
  402164:	inc    edx
  402165:	mov    ds:0x5942856a,eax
  40216a:	push   0xffffff85
  40216c:	inc    edx
  40216d:	jne    0x4021d9
  40216f:	test   DWORD PTR [edx+0x73],eax
  402172:	push   0xffffff85
  402174:	inc    edx
  402175:	pop    es
  402176:	push   0xffffff85
  402178:	inc    edx
  402179:	pop    ds
  40217a:	push   0xffffff85
  40217c:	inc    edx
  40217d:	sub    DWORD PTR [edx+0x0],ebp
  402180:	test   DWORD PTR [edx+0x29],eax
  402183:	push   0xffffff85
  402185:	inc    edx
  402186:	mov    ebx,0x1b428569
  40218b:	push   0xffffff85
  40218d:	inc    edx
  40218e:	or     DWORD PTR [edx-0x7b],ebp
  402191:	inc    edx
  402192:	jmp    0x4021fd
  402194:	test   DWORD PTR [edx+0x5f],eax
  402197:	ins    DWORD PTR es:[edi],dx
  402198:	test   DWORD PTR [edx+0x43],eax
  40219b:	ins    DWORD PTR es:[edi],dx
  40219c:	test   DWORD PTR [edx+0x25],eax
  40219f:	ins    DWORD PTR es:[edi],dx
  4021a0:	test   DWORD PTR [edx+0x7b],eax
  4021a3:	ins    DWORD PTR es:[edi],dx
  4021a4:	test   DWORD PTR [edx-0x7f],eax
  4021a7:	ins    DWORD PTR es:[edi],dx
  4021a8:	test   DWORD PTR [edx+0x75],eax
  4021ab:	ins    DWORD PTR es:[edi],dx
  4021ac:	test   DWORD PTR [edx+0x79],eax
  4021af:	ins    DWORD PTR es:[edi],dx
  4021b0:	test   DWORD PTR [edx-0x63],eax
  4021b3:	ins    BYTE PTR es:[edi],dx
  4021b4:	test   DWORD PTR [edx+0x75],eax
  4021b7:	ins    BYTE PTR es:[edi],dx
  4021b8:	test   DWORD PTR [edx-0x53],eax
  4021bb:	ins    BYTE PTR es:[edi],dx
  4021bc:	test   DWORD PTR [edx-0x39],eax
  4021bf:	ins    BYTE PTR es:[edi],dx
  4021c0:	test   DWORD PTR [edx+0xa],eax
  4021c3:	lods   eax,DWORD PTR ds:[esi]
  4021c4:	loop   0x402207
  4021c6:	or     dl,bh
  4021c8:	fiadd  DWORD PTR [ecx+0xa]
  4021cb:	repz mov dl,0x41
  4021ce:	or     dl,ch
  4021d0:	lods   eax,DWORD PTR ds:[esi]
  4021d1:	inc    ecx
  4021d2:	or     cl,bh
  4021d4:	popf   
  4021d5:	inc    ecx
  4021d6:	or     dh,BYTE PTR [ebp-0x50f5be63]
  4021dc:	lods   eax,DWORD PTR ds:[esi]
  4021dd:	inc    ecx
  4021de:	or     al,BYTE PTR [ebx-0x78f5be53]
  4021e4:	add    BYTE PTR [ebp-0x62aaf5bf],bl
  4021ea:	inc    ecx
  4021eb:	or     ch,BYTE PTR [ebp+0x6d]
  4021ee:	inc    ecx
  4021ef:	or     bl,BYTE PTR [ebx]
  4021f1:	push   0x41
  4021f3:	or     dh,BYTE PTR ds:0x1d0a4162
  4021f9:	pop    edx
  4021fa:	inc    ecx
  4021fb:	or     ch,BYTE PTR ds:0xb50a4172
  402201:	ins    DWORD PTR es:[edi],dx
  402202:	inc    ecx
  402203:	or     cl,cl
  402205:	pop    ebp
  402206:	inc    ecx
  402207:	or     dl,ch
  402209:	pop    ebp
  40220a:	inc    ecx
  40220b:	or     ch,cl
  40220d:	sub    eax,0x30590a41
  402212:	inc    ecx
  402213:	or     dh,BYTE PTR [edi]
  402215:	cmp    BYTE PTR [ecx+0xa],al
  402218:	cmp    DWORD PTR [eax],esi
  40221a:	inc    ecx
  40221b:	or     al,BYTE PTR [ecx-0x76f5bee8]
  402221:	adc    BYTE PTR [ecx+0xa],al
  402224:	popa   
  402225:	sbb    BYTE PTR [ecx+0xa],al
  402228:	mov    ebp,0xc70a4110
  40222d:	clc    
  40222e:	aas    
  40222f:	or     ch,BYTE PTR [ebp-0x56f5c010]
  402235:	clc    
  402236:	aas    
  402237:	or     dl,ch
  402239:	lock aas 
  40223b:	or     al,BYTE PTR [eax]
  40223d:	push   ecx
  40223e:	xor    eax,0x35310009
  402243:	or     DWORD PTR [eax],eax
  402245:	pop    edi
  402246:	xor    eax,0x87000009
  40224b:	xor    eax,0x1e370009
  402250:	or     DWORD PTR [eax],eax
  402252:	push   DWORD PTR [ecx+ecx*1]
  402255:	add    BYTE PTR [edi],bl
  402257:	inc    eax
  402258:	or     al,BYTE PTR [eax]
  40225a:	ror    edi,cl
  40225c:	or     DWORD PTR [eax],eax
  40225e:	iret   
  40225f:	iret   
  402260:	or     DWORD PTR [eax],eax
  402262:	imul   ecx,edi,0x401f0009
  402268:	or     al,BYTE PTR [eax]
  40226a:	daa    
  40226b:	inc    eax
  40226c:	or     al,BYTE PTR [eax-0x7ff5c00a]
  402272:	in     eax,dx
  402273:	aas    
  402274:	or     al,BYTE PTR [eax-0x7ff5c01f]
  40227a:	fistp  QWORD PTR [edi]
  40227c:	or     al,BYTE PTR [eax]
  40227e:	add    ebp,DWORD PTR [edx]
  402280:	or     DWORD PTR [eax],eax
  402282:	cdq    
  402283:	sub    DWORD PTR [ecx],ecx
  402285:	add    BYTE PTR [ebp+0x29],al
  402288:	or     DWORD PTR [eax],eax
  40228a:	fistp  QWORD PTR [edi]
  40228c:	or     al,BYTE PTR [eax]
  40228e:	cmp    eax,0xd9000929
  402293:	sub    cl,BYTE PTR [ecx]
  402295:	add    ch,al
  402297:	sub    cl,BYTE PTR [ecx]
  402299:	add    bl,dh
  40229b:	sub    cl,BYTE PTR [ecx]
  40229d:	add    bl,dh
  40229f:	sub    cl,BYTE PTR [ecx]
  4022a1:	add    BYTE PTR [ebp-0x7efff6d6],bl
  4022a7:	sub    DWORD PTR [ecx],ecx
  4022a9:	add    BYTE PTR [ecx+0x92a],dh
  4022af:	jae    0x4022db
  4022b1:	or     DWORD PTR [eax],eax
  4022b3:	mov    ebp,DWORD PTR [eax]
  4022b5:	or     DWORD PTR [eax],eax
  4022b7:	xchg   BYTE PTR [ebx+0x70],ch
  4022ba:	add    eax,DWORD PTR [esi-0x79fc8fa9]
  4022c0:	adc    esi,DWORD PTR [eax+0x3]
  4022c3:	xchg   bh,dh
  4022c5:	outs   dx,DWORD PTR ds:[esi]
  4022c6:	add    eax,DWORD PTR [esi-0x79fc8fdb]
  4022cc:	xor    DWORD PTR [ebx+0x3],esi
  4022cf:	xchg   BYTE PTR [edi],cl
  4022d1:	jo     0x4022d6
  4022d3:	xchg   BYTE PTR [ebx+0x70],ch
  4022d6:	add    eax,DWORD PTR [esi-0x79fc8f9d]
  4022dc:	mov    ecx,DWORD PTR [ecx]
  4022de:	add    BYTE PTR [esi],al
  4022e0:	pop    ecx
  4022e1:	jo     0x4022e6
  4022e3:	xchg   BYTE PTR [edi-0x6679fc8d],ah
  4022e9:	or     DWORD PTR [eax],eax
  4022eb:	xchg   cl,ch
  4022ed:	jb     0x4022f2
  4022ef:	xchg   BYTE PTR [ecx+0x69860009],bl
  4022f5:	add    BYTE PTR [ebx],0x86
  4022f8:	xchg   ecx,eax
  4022f9:	lea    eax,[ebx]
  4022fb:	xchg   BYTE PTR [ecx-0x5e79fc73],al
  402301:	lea    eax,[ebx]
  402303:	xchg   BYTE PTR [ebp-0x3c79fc73],ah
  402309:	mov    al,BYTE PTR [ebx]
  40230b:	xchg   BYTE PTR [ebp+0x5986038a],bh
  402311:	mov    al,BYTE PTR [ebx]
  402313:	add    BYTE PTR [esi-0x79fc7537],al
  402319:	mov    ebx,0x1f86038a
  40231e:	mov    al,BYTE PTR [ebx]
  402320:	xchg   BYTE PTR [ecx-0x7079fc76],al
  402326:	mov    al,BYTE PTR [ebx]
  402328:	xchg   bh,cl
  40232a:	mov    al,BYTE PTR [ebx]
  40232c:	xchg   ch,cl
  40232e:	mov    al,BYTE PTR [ebx]
  402330:	xchg   BYTE PTR [edx-0x17],al
  402333:	add    BYTE PTR [ebp-0x7a7f24be],0x42
  40233a:	cmc    
  40233b:	add    BYTE PTR [ebp-0x7a7f1cbe],0x42
  402342:	arpl   WORD PTR [edi-0x78a0bd7b],ax
  402348:	test   DWORD PTR [edx+0x47],eax
  40234b:	xchg   DWORD PTR [ebp-0x7a7870be],eax
  402351:	inc    edx
  402352:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402353:	add    BYTE PTR [ebp-0x7a7f42be],0x42
  40235a:	leave  
  40235b:	add    BYTE PTR [ebp-0x7a7f10be],0x42
  402362:	rol    DWORD PTR [eax-0x7efcbd7b],1
  402368:	test   DWORD PTR [edx+0xf],eax
  40236b:	add    DWORD PTR [ebp-0x7a7f18be],0x85813b42
  402375:	inc    edx
  402376:	dec    ebx
  402377:	add    DWORD PTR [eax],0x810b4285
  40237d:	test   DWORD PTR [edx+0x1f],eax
  402380:	add    DWORD PTR [ebp-0x7a7d38be],0x8582fb42
  40238a:	inc    edx
  40238b:	ja     0x40230f
  40238d:	test   DWORD PTR [edx-0x71],eax
  402390:	add    BYTE PTR [ebp-0x7a7db4be],0x42
  402397:	cmp    eax,DWORD PTR [edx-0x7d66bd7b]
  40239d:	test   DWORD PTR [edx-0x77],eax
  4023a0:	add    BYTE PTR [ebp-0x7a7d92be],0x42
  4023a7:	add    BYTE PTR [di+0xa42],0xb1
  4023ad:	pop    es
  4023ae:	inc    esi
  4023af:	or     bh,BYTE PTR [ebx+0x6]
  4023b2:	inc    ebp
  4023b3:	or     bl,BYTE PTR [edi-0x72f5ba07]
  4023b9:	pop    es
  4023ba:	inc    ebp
  4023bb:	or     cl,BYTE PTR [ecx-0x44f5baf9]
  4023c1:	pop    es
  4023c2:	inc    ebp
  4023c3:	or     ch,BYTE PTR [ebp+0x7f0a4507]
  4023c9:	add    eax,0x2670a45
  4023ce:	inc    ebp
  4023cf:	or     cl,BYTE PTR [ebp+0xa]
  4023d2:	inc    ebp
  4023d3:	or     bl,BYTE PTR [ecx-0x54f5bafb]
  4023d9:	add    eax,0xbb0a45
  4023de:	add    eax,0x5cb0a45
  4023e3:	inc    ebp
  4023e4:	or     bh,BYTE PTR [ebp-0x18f5bafb]
  4023ea:	or     al,BYTE PTR [ebp+0xa]
  4023ed:	rol    DWORD PTR [edx],1
  4023ef:	inc    ebp
  4023f0:	or     dh,BYTE PTR [ebp-0x6ef5baf5]
  4023f6:	add    eax,DWORD PTR [ebp+0xa]
  4023f9:	ret    
  4023fa:	or     eax,DWORD PTR [ebp+0xa]
  4023fd:	mov    ds:0x4d0a4503,eax
  402402:	or     eax,DWORD PTR [ebp+0xa]
  402405:	push   ecx
  402406:	add    eax,DWORD PTR [ebp+0xa]
  402409:	arpl   WORD PTR [ebx],cx
  40240b:	inc    ebp
  40240c:	or     ah,BYTE PTR [ebp+0x3]
  40240f:	inc    ebp
  402410:	or     ch,bh
  402412:	or     eax,DWORD PTR [ebp+0xa]
  402415:	xlat   BYTE PTR ds:[ebx]
  402416:	add    eax,DWORD PTR [ebp+0xa]
  402419:	ret    
  40241a:	or     eax,DWORD PTR [ebp+0xa]
  40241d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40241e:	add    eax,DWORD PTR [ebp+0xa]
  402421:	or     eax,0xa4508
  402426:	fwait
  402427:	mov    esi,0xc0890009
  40242c:	or     DWORD PTR [eax],eax
  40242e:	lods   eax,DWORD PTR ds:[esi]
  40242f:	mov    esi,0xbeb10009
  402434:	or     DWORD PTR [eax],eax
  402436:	xchg   ecx,eax
  402437:	mov    esi,0xbec50009
  40243c:	or     DWORD PTR [eax],eax
  40243e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40243f:	mov    esi,0x3f000009
  402444:	ret    0x9
  402447:	dec    ebp
  402448:	ret    0x9
  40244b:	das    
  40244c:	ret    0x9
  40244f:	dec    ecx
  402450:	sub    BYTE PTR [ecx],cl
  402452:	add    BYTE PTR [edi-0x8fff63e],cl
  402458:	daa    
  402459:	or     DWORD PTR [eax],eax
  40245b:	add    DWORD PTR [eax],ebp
  40245d:	or     DWORD PTR [eax],eax
  40245f:	mov    cl,0x27
  402461:	or     DWORD PTR [eax],eax
  402463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402464:	daa    
  402465:	or     DWORD PTR [eax],eax
  402467:	add    ebx,0x9
  40246a:	add    BYTE PTR [edi-0x3d],ch
  40246d:	or     DWORD PTR [eax],eax
  40246f:	jno    0x402434
  402471:	or     DWORD PTR [eax],eax
  402473:	rol    ebx,0x9
  402476:	add    BYTE PTR [ebp-0x3d],ch
  402479:	or     DWORD PTR [eax],eax
  40247b:	ins    DWORD PTR es:[edi],dx
  40247c:	ret    
  40247d:	or     DWORD PTR [eax],eax
  40247f:	cmp    eax,ebx
  402481:	or     DWORD PTR [eax],eax
  402483:	aas    
  402484:	ret    
  402485:	or     DWORD PTR [eax],eax
  402487:	das    
  402488:	les    ecx,FWORD PTR [ecx]
  40248a:	add    BYTE PTR [ebp-0x20fff63c],dh
  402490:	inc    ebx
  402491:	or     al,BYTE PTR [eax]
  402493:	aad    0xd4
  402495:	or     DWORD PTR [eax],eax
  402497:	lods   eax,DWORD PTR ds:[esi]
  402498:	aam    0x9
  40249a:	add    BYTE PTR [ebx-0x32],al
  40249d:	or     DWORD PTR [eax],eax
  40249f:	xchg   BYTE PTR [ecx-0x62],dh
  4024a2:	add    eax,DWORD PTR [esi+0x39e59]
  4024a8:	xchg   BYTE PTR [ecx],ch
  4024aa:	sahf   
  4024ab:	add    eax,DWORD PTR [esi-0x79fc61f1]
  4024b1:	sbb    ebx,DWORD PTR [esi-0x667c79fd]
  4024b7:	add    eax,DWORD PTR [esi-0x79fc6619]
  4024bd:	fstp   DWORD PTR [ecx-0x668279fd]
  4024c3:	add    eax,DWORD PTR [esi-0x79fc6679]
  4024c9:	inc    ebx
  4024ca:	jae    0x4024cf
  4024cc:	xchg   BYTE PTR ds:0x49860373,bh
  4024d2:	jae    0x4024d7
  4024d4:	xchg   BYTE PTR [ebx+0x73],dh
  4024d7:	add    eax,DWORD PTR [esi-0x79fc8d43]
  4024dd:	pop    es
  4024de:	jae    0x4024e3
  4024e0:	xchg   BYTE PTR [ecx],al
  4024e2:	jae    0x4024e7
  4024e4:	xchg   BYTE PTR [edi+0x73],ch
  4024e7:	add    eax,DWORD PTR [esi-0x79fc8ca7]
  4024ed:	cdq    
  4024ee:	or     DWORD PTR [eax],eax
  4024f0:	xchg   BYTE PTR [ebx-0x4af9fff7],cl
  4024f6:	jl     0x4024fb
  4024f8:	xchg   BYTE PTR [edx-0x61f9fff7],ch
  4024fe:	or     DWORD PTR [eax],eax
  402500:	push   es
  402501:	call   0x37c:0xc3060009
  402508:	xchg   BYTE PTR [esi+0x6000009],ch
  40250e:	mov    al,ds:0x61060009
  402513:	jo     0x402518
  402515:	xchg   ch,dl
  402517:	jae    0x40251c
  402519:	xchg   BYTE PTR [edx-0x19],al
  40251c:	add    eax,DWORD PTR [esi-0x79fc2f3e]
  402522:	ret    0x7a07
  402525:	test   DWORD PTR [edx-0xf],eax
  402528:	jns    0x4024af
  40252a:	inc    edx
  40252b:	aad    0x3
  40252d:	xchg   dl,al
  40252f:	fiadd  WORD PTR [ebx]
  402531:	xchg   dl,al
  402533:	mov    bh,0x3
  402535:	xchg   dl,al
  402537:	loope  0x40253c
  402539:	xchg   dl,al
  40253b:	hlt    
  40253c:	add    eax,DWORD PTR [esi-0x7a861c3e]
  402542:	inc    edx
  402543:	in     eax,0x3
  402545:	xchg   dl,al
  402547:	inc    DWORD PTR [ebx]
  402549:	xchg   dl,al
  40254b:	aas    
  40254c:	jbe    0x4024d3
  40254e:	inc    edx
  40254f:	and    DWORD PTR [esi-0x7b],esi
  402552:	inc    edx
  402553:	cmp    esi,DWORD PTR [esi-0x7b]
  402556:	inc    edx
  402557:	je     0x40255c
  402559:	xchg   dl,al
  40255b:	repz add eax,DWORD PTR [esi-0x79fc1f3e]
  402562:	ret    0x3f0
  402565:	xchg   dl,al
  402567:	push   ebx
  402568:	add    al,0x86
  40256a:	ret    0x3e3
  40256d:	xchg   BYTE PTR [edx+0x7d],al
  402570:	xchg   ebp,eax
  402571:	add    BYTE PTR [ebp-0x7a6a5cbe],al
  402577:	inc    edx
  402578:	test   eax,0xb7428595
  40257d:	xchg   ebp,eax
  40257e:	test   DWORD PTR [edx-0x4b],eax
  402581:	xchg   ebp,eax
  402582:	test   DWORD PTR [edx-0x75],eax
  402585:	xchg   ebp,eax
  402586:	test   DWORD PTR [edx-0x6d],eax
  402589:	xchg   ebp,eax
  40258a:	test   DWORD PTR [edx-0x73],eax
  40258d:	xchg   ebp,eax
  40258e:	test   DWORD PTR [edx-0x19],eax
  402591:	xchg   ecx,eax
  402592:	test   DWORD PTR [edx+0xa],eax
  402595:	fist   WORD PTR [edi]
  402597:	inc    edx
  402598:	or     cl,cl
  40259a:	pop    ss
  40259b:	inc    edx
  40259c:	or     dl,BYTE PTR [ebx]
  40259e:	adc    al,0x42
  4025a0:	or     dl,BYTE PTR ds:0xa90a4214
  4025a6:	test   DWORD PTR [ecx+0xa],0xa41f7bb
  4025ad:	sbb    eax,0xa30a41f4
  4025b2:	test   DWORD PTR [ecx+0xa],0xa4285e9
  4025b9:	arpl   si,di
  4025bb:	inc    ecx
  4025bc:	or     al,BYTE PTR [ebx+0x4d0a41ee]
  4025c2:	out    dx,al
  4025c3:	inc    ecx
  4025c4:	or     bl,BYTE PTR [ebx-0x50f5be27]
  4025ca:	rol    DWORD PTR [ecx+0xa],1
  4025cd:	mov    ch,0xd9
  4025cf:	inc    ecx
  4025d0:	or     dh,BYTE PTR [ebp-0x34f5be2f]
  4025d6:	add    BYTE PTR [ecx-0x4e20f5bf],bh
  4025dc:	inc    ecx
  4025dd:	or     ch,cl
  4025df:	test   DWORD PTR [edx+0xa],eax
  4025e2:	jmp    0xb24a686c
  4025e7:	push   es
  4025e8:	in     al,dx
  4025e9:	xor    al,0xd0
  4025eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025ec:	lods   al,BYTE PTR ds:[esi]
  4025ed:	inc    esi
  4025ee:	mov    DWORD PTR [edi-0x5f],ebx
  4025f1:	in     eax,0x44
  4025f3:	xchg   esp,eax
  4025f4:	lds    esi,FWORD PTR [edi]
  4025f6:	lea    ebp,[edx]
  4025f8:	bound  ebp,QWORD PTR [edi+0x45ac8869]
  4025fe:	fs jge 0x40264d
  402601:	jns    0x40262d
  402603:	(bad)  
  402604:	aam    0x1c
  402606:	push   ds
  402607:	cwde   
  402608:	adc    DWORD PTR [eax],0xffffff86
  40260b:	xchg   DWORD PTR [edi],eax
  40260d:	inc    esp
  40260e:	add    BYTE PTR [eax+0x39b12465],dl
  402614:	push   cs
  402615:	xchg   edx,eax
  402616:	mov    bh,0xb3
  402618:	xchg   esp,eax
  402619:	xor    ebx,0x42f83b6c
  40261f:	sub    al,0x42
  402621:	ins    DWORD PTR es:[edi],dx
  402622:	fidiv  WORD PTR [eax+ecx*2-0x3dd7dc0a]
  402629:	pop    si
  40262b:	lea    ebp,[ebp+edx*2-0x1f60dab9]
  402632:	xor    esi,DWORD PTR [eax-0x118c842a]
  402638:	fdivr  QWORD PTR [ecx]
  40263a:	sub    DWORD PTR [eax],eax
  40263c:	jno    0x402657
  40263e:	fcom   DWORD PTR [ecx]
  402640:	int    0xad
  402642:	cmc    
  402643:	mov    edi,0x6034b818
  402648:	loop   0x402626
  40264a:	cmp    DWORD PTR [ecx],ebp
  40264c:	xor    DWORD PTR [ecx],ebx
  40264e:	fcom   DWORD PTR [ecx]
  402650:	lea    ebp,[ebp-0x47e7400b]
  402656:	xor    al,0x60
  402658:	std    
  402659:	sub    al,0xd
  40265b:	cmc    
  40265c:	push   ds
  40265d:	sbb    ecx,0x11
  402660:	mov    dh,0xd7
  402662:	or     al,BYTE PTR [eax]
  402664:	daa    
  402665:	ds call 0x5f9bbd8c
  40266b:	lods   eax,DWORD PTR ds:[esi]
  40266c:	(bad)  
  40266d:	jl     0x4026af
  40266f:	inc    edi
  402670:	cdq    
  402671:	xor    eax,0x137f0cf6
  402676:	mov    ebp,0xd7461a38
  40267b:	jo     0x4026e7
  40267d:	cli    
  40267e:	loope  0x4026c6
  402680:	imul   ebp,DWORD PTR [esi+0x644cb629],0x868f22
  40268a:	mov    dh,0x65
  40268c:	push   edi
  40268d:	and    DWORD PTR [edi-0x12ecbb43],ebx
  402693:	push   ebx
  402694:	jbe    0x402703
  402696:	push   ss
  402697:	pop    edx
  402698:	test   cl,bh
  40269a:	and    cl,BYTE PTR [eax-0x5a]
  40269d:	adc    al,0x37
  40269f:	pushf  
  4026a0:	add    BYTE PTR [ebx-0x4d],al
  4026a3:	les    esi,FWORD PTR [edi+0x47]
  4026a6:	imul   edi,DWORD PTR [ecx+0x70069995],0xb05d9189
  4026b0:	xor    cl,BYTE PTR [eax-0x49]
  4026b3:	rcr    dl,cl
  4026b5:	cmp    dh,0x18
  4026b8:	sbb    dh,BYTE PTR [ebx+edx*2+0x35]
  4026bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026bd:	mov    ah,BYTE PTR [esi]
  4026bf:	daa    
  4026c0:	ins    BYTE PTR es:[edi],dx
  4026c1:	mov    esp,0xf09f981c
  4026c6:	test   eax,0xd75b7df7
  4026cb:	ror    BYTE PTR [esi+edx*4-0x6e],1
  4026cf:	pop    edi
  4026d0:	fadd   st,st(6)
  4026d2:	add    eax,0x5d75b920
  4026d7:	repnz fwait
  4026d9:	pop    edx
  4026da:	stos   DWORD PTR es:[edi],eax
  4026db:	xchg   ecx,eax
  4026dd:	mov    eax,0x97d1799e
  4026e2:	into   
  4026e3:	cdq    
  4026e4:	add    BYTE PTR [esi+0x54],al
  4026e7:	(bad)  
  4026e8:	std    
  4026e9:	and    DWORD PTR [edx],ebx
  4026eb:	xchg   edi,eax
  4026ec:	adc    bh,BYTE PTR [edx]
  4026ee:	hlt    
  4026ef:	jp     0x4026c0
  4026f1:	ja     0x402724
  4026f3:	cmp    al,0x0
  4026f5:	fcomp  QWORD PTR [eax+0xfaa2e32]
  4026fb:	sub    eax,0x59004f35
  402700:	rcl    DWORD PTR [edi+0x9d5d42],1
  402706:	xchg   BYTE PTR [edx+0x620eae24],al
  40270c:	arpl   WORD PTR [ebp+0x71048674],bx
  402712:	rcl    DWORD PTR [eax+0x7b],0x36
  402716:	xchg   al,bl
  402718:	jecxz  0x402752
  40271a:	jo     0x40277a
  40271c:	pop    edx
  40271d:	(bad)  
  40271e:	push   eax
  40271f:	int    0x57
  402721:	add    ecx,0x86658050
  402727:	fsub   st,st(3)
  402729:	xor    DWORD PTR [esi+0x7b],eax
  40272c:	fs popf 
  40272e:	je     0x4026b6
  402730:	les    esi,FWORD PTR [eax-0x3f]
  402733:	push   eax
  402734:	jnp    0x40276c
  402736:	xchg   al,bl
  402738:	jecxz  0x402772
  40273a:	mov    al,0x66
  40273c:	loop   0x4027a9
  40273e:	add    ebx,DWORD PTR [edi]
  402740:	bound  esi,QWORD PTR [eax+0x41]
  402743:	xor    al,0x7b
  402745:	ss xchg ah,ch
  402748:	jecxz  0x402782
  40274a:	mov    al,0x66
  40274c:	add    bh,BYTE PTR [edi+ebx*8]
  40274f:	inc    esp
  402750:	ror    ah,cl
  402752:	inc    eax
  402753:	xor    al,0x40
  402755:	dec    esp
  402756:	xchg   BYTE PTR [edx-0x1d],al
  402759:	add    eax,DWORD PTR [esi-0x156289bd]
  40275f:	push   es
  402760:	out    0xda,eax
  402762:	push   esi
  402763:	xor    al,0x83
  402765:	pusha  
  402766:	xchg   BYTE PTR [edx+0xe009a24],al
  40276c:	arpl   WORD PTR [edi-0x56],dx
  40276f:	jmp    0x8334:0x36ecc706
  402776:	pusha  
  402777:	xchg   BYTE PTR [edx+0x630e9a24],al
  40277d:	or     ah,BYTE PTR [ebp+0x18]
  402780:	popf   
  402781:	push   ss
  402782:	or     ch,bh
  402784:	jb     0x4027a1
  402786:	push   esp
  402787:	dec    ebx
  402788:	inc    edx
  402789:	retf   0x222e
  40278c:	mov    al,ds:0x1606edf5
  402791:	cmp    ebx,DWORD PTR [eax]
  402793:	outs   dx,BYTE PTR ds:[esi]
  402794:	xchg   esi,eax
  402795:	inc    esi
  402796:	arpl   WORD PTR [esi-0x7],sp
  402799:	lods   eax,DWORD PTR ds:[esi]
  40279a:	xor    ebp,DWORD PTR [ebp-0x5ccaa3c5]
  4027a0:	leave  
  4027a1:	loope  0x40275d
  4027a3:	fwait
  4027a4:	je     0x4027c1
  4027a6:	xchg   edi,eax
  4027a7:	mov    ebx,0xffaeca42
  4027ac:	retf   0x2e2a
  4027af:	jo     0x402771
  4027b1:	into   
  4027b2:	(bad)  
  4027b3:	out    0x74,al
  4027b5:	sbb    ebp,DWORD PTR [esi+ecx*8+0x42]
  4027b9:	sbb    ah,BYTE PTR [ebx+0x2c0ec584]
  4027bf:	inc    esp
  4027c0:	sti    
  4027c1:	test   al,0xda
  4027c3:	pop    ebp
  4027c4:	push   esi
  4027c5:	inc    edx
  4027c6:	jae    0x402760
  4027c8:	fdiv   QWORD PTR [ebp-0x4]
  4027cb:	mov    esp,0x707c1f
  4027d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027d1:	push   edi
  4027d2:	inc    ebx
  4027d3:	sbb    BYTE PTR [edx+0x1c571b73],0x42
  4027da:	retf   0x1fae
  4027dd:	retf   0x612a
  4027e0:	inc    eax
  4027e1:	inc    edi
  4027e2:	sub    eax,0x1b74d33f
  4027e7:	call   0xc385:0x431a42bd
  4027ee:	jge    0x40286b
  4027f0:	jns    0x402849
  4027f2:	inc    ebx
  4027f3:	inc    edx
  4027f4:	pop    ebx
  4027f5:	jae    0x402812
  4027f7:	add    cl,dh
  4027f9:	jmp    0x2082:0xbcb0c00a
  402800:	fidivr WORD PTR [edx+ebx*4+0x45]
  402804:	cmc    
  402805:	inc    ecx
  402806:	ficom  DWORD PTR [ecx]
  402808:	jbe    0x40284e
  40280a:	or     ch,BYTE PTR [edx+0x24240fef]
  402810:	push   edi
  402811:	sub    eax,DWORD PTR [ecx+0x67]
  402814:	dec    ebp
  402815:	xchg   ebx,eax
  402816:	ficom  DWORD PTR [ecx]
  402818:	xor    dh,dh
  40281a:	or     eax,eax
  40281c:	jo     0x4027fc
  40281e:	idiv   edi
  402820:	(bad)  
  402821:	fs mov bh,0x49
  402824:	mov    esp,0x1211da99
  402829:	dec    BYTE PTR [ecx]
  40282b:	shl    al,0xdc
  40282e:	idiv   edi
  402830:	sub    DWORD PTR ds:0xf0009a6f,esi
  402836:	fist   DWORD PTR [ecx]
  402839:	or     bh,BYTE PTR [esi+0xa]
  40283c:	adc    BYTE PTR [esp+esi*8],dh
  40283f:	xor    edi,ebp
  402841:	sbb    BYTE PTR ds:0x52786da5,bl
  402847:	fcom   DWORD PTR [ecx]
  402849:	ror    DWORD PTR [esi-0x45cf3ff6],1
  40284f:	and    BYTE PTR [eax],0xb2
  402852:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402853:	(bad)  
  402854:	jmp    0x402882
  402856:	fcom   DWORD PTR ss:[ecx]
  402859:	mov    cl,0x8e
  40285b:	or     al,al
  40285d:	lock mov ecx,0x35692082
  402863:	xchg   esp,eax
  402864:	les    esp,FWORD PTR [edi+edi*4-0x2565ee28]
  40286b:	or     dl,BYTE PTR [eax]
  40286d:	lds    eax,FWORD PTR [ecx-0x77]
  402870:	add    al,0x86
  402872:	jnp    0x4028d4
  402874:	adc    eax,0xd133b049
  402879:	ja     0x402831
  40287b:	add    DWORD PTR [eax],0xffffffc6
  40287e:	jo     0x402836
  402880:	std    
  402881:	stc    
  402882:	idiv   BYTE PTR [esp+ebx*1]
  402885:	add    ebx,edx
  402887:	xor    BYTE PTR [ebx+0x56bd103d],0x29
  40288e:	ins    DWORD PTR es:[edi],dx
  40288f:	xor    al,0x9b
  402891:	and    BYTE PTR [ebx-0x68e64d0b],dh
  402897:	mov    esp,0xa7700d3
  40289c:	or     al,BYTE PTR [eax]
  40289e:	xchg   esi,eax
  40289f:	arpl   WORD PTR [ebx],cx
  4028a1:	push   ecx
  4028a2:	pop    esp
  4028a3:	rol    DWORD PTR [ecx-0x3b470e41],cl
  4028a9:	rcl    DWORD PTR [edi-0x6e000836],cl
  4028af:	or     DWORD PTR [edx],0x51
  4028b2:	cmp    al,0xe7
  4028b4:	jb     0x402865
  4028b6:	and    edi,DWORD PTR [eax]
  4028b8:	cmp    dl,dl
  4028ba:	ja     0x402873
  4028bc:	rol    DWORD PTR [eax],0x46
  4028bf:	lock xchg ebx,eax
  4028c1:	mov    BYTE PTR [esi-0x1889841e],ah
  4028c7:	frstor [eax+0x64]
  4028ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028cb:	mov    ecx,0xcee77268
  4028d0:	ins    BYTE PTR es:[edi],dx
  4028d1:	je     0x4028b6
  4028d3:	mov    ebx,0xbce77029
  4028d8:	pop    esi
  4028d9:	gs loop 0x402865
  4028dc:	pop    ebp
  4028dd:	outs   dx,DWORD PTR ds:[esi]
  4028de:	data16 in al,dx
  4028e0:	sub    DWORD PTR [edx-0x4d],esi
  4028e3:	(bad)  
  4028e4:	pop    ebp
  4028e5:	imul   esp,DWORD PTR [ebx-0x4c99d63a],0x9a655d42
  4028ef:	sub    DWORD PTR [edx+esi*2+0x68],eax
  4028f3:	dec    esp
  4028f4:	jecxz  0x4028f9
  4028f6:	xchg   BYTE PTR [edx-0x5d],al
  4028f9:	stos   DWORD PTR es:[edi],eax
  4028fa:	lds    eax,FWORD PTR [edx-0x2d]
  4028fd:	stos   BYTE PTR es:[edi],al
  4028fe:	add    BYTE PTR [ebp+0x42],al
  402901:	jecxz  0x402906
  402903:	xchg   BYTE PTR [edx-0x1b],al
  402906:	add    DWORD PTR [esi],0xffffffc8
  402909:	arpl   WORD PTR [edx-0xc1cbdfa],ax
  40290f:	test   al,cl
  402911:	arpl   WORD PTR [ecx+0x6f7c204],cx
  402917:	mov    eax,DWORD PTR ds:0xc503472e
  40291d:	pushw  es
  40291f:	xchg   BYTE PTR [edx-0x4d],al
  402922:	adc    eax,DWORD PTR [esi]
  402924:	repnz bound eax,QWORD PTR [ebx+0x2be34a86]
  40292b:	popa   
  40292c:	pop    edx
  40292d:	mov    bl,0x38
  40292f:	push   es
  402930:	inc    edx
  402931:	in     al,dx
  402932:	add    edx,DWORD PTR [ecx+0x52]
  402935:	adc    esi,DWORD PTR [esi+esi*1]
  402938:	retf   0x3e3
  40293b:	xchg   BYTE PTR [edx+0x1b],ah
  40293e:	test   BYTE PTR [esi],cl
  402940:	ret    
  402941:	arpl   WORD PTR [ebx],ax
  402943:	xchg   BYTE PTR [edx-0x3d],al
  402946:	arpl   si,sp
  402948:	sub    cl,bl
  40294a:	imul   edi,DWORD PTR [esi+0x4a],0xffffffe4
  40294e:	pop    ebx
  40294f:	(bad)  
  402950:	adc    bl,BYTE PTR [ebx+edx*2+0x3eb4ad6]
  402957:	xchg   BYTE PTR [edx-0x1d],cl
  40295a:	or     eax,DWORD PTR [esi-0x79fc04bb]
  402960:	inc    edx
  402961:	jecxz  0x402966
  402963:	add    BYTE PTR [esi-0x7a16f5be],al
  402969:	inc    edx
  40296a:	or     ch,cl
  40296c:	test   DWORD PTR [edx+0xa],eax
  40296f:	(bad)  [esi-0x7a1af5ff]
  402975:	inc    esi
  402976:	or     ah,cl
  402978:	test   DWORD PTR [esi+0xa],eax
  40297b:	sbb    DWORD PTR [eax-0x7a12f5ff],eax
  402981:	inc    edi
  402982:	or     bl,cl
  402984:	test   DWORD PTR [edx+0xa],ecx
  402987:	stc    
  402988:	mov    eax,DWORD PTR [ecx]
  40298a:	or     ah,ch
  40298c:	test   DWORD PTR [edx+ecx*1-0x37],eax
  402990:	test   DWORD PTR [edx+0xa],esp
  402993:	fld    DWORD PTR [ebx-0x7a12f5ff]
  402999:	inc    esi
  40299a:	or     bh,cl
  40299c:	test   DWORD PTR [edx],esi
  40299e:	or     bl,cl
  4029a0:	xchg   edx,eax
  4029a1:	add    DWORD PTR [edx],ecx
  4029a3:	icebp  
  4029a4:	test   DWORD PTR [edx],esi
  4029a6:	or     cl,cl
  4029a8:	test   DWORD PTR [edx+0xa],esp
  4029ab:	fnstcw WORD PTR [edx+0x1]
  4029ae:	or     dh,cl
  4029b0:	test   DWORD PTR [edx],esi
  4029b2:	or     ch,BYTE PTR [ecx-0x7e]
  4029b5:	ret    0xf90a
  4029b8:	add    BYTE PTR [ecx],0xa
  4029bb:	loope  0x402942
  4029bd:	bound  ecx,QWORD PTR [edx]
  4029bf:	imul   ecx,DWORD PTR [edx-0x7526f4be],0x90a01
  4029c9:	mov    al,dl
  4029cb:	or     ch,bl
  4029cd:	add    BYTE PTR [edx+0xe],0xf9
  4029d1:	xchg   edx,eax
  4029d2:	add    DWORD PTR [edx],ecx
  4029d4:	leave  
  4029d5:	test   DWORD PTR [eax+0xb],eax
  4029d8:	jmp    0x402964
  4029da:	inc    edx
  4029db:	sbb    bh,cl
  4029dd:	jp     0x4029e0
  4029df:	or     al,BYTE PTR [eax]
  4029e1:	(bad)  
  4029e2:	outs   dx,BYTE PTR ds:[esi]
  4029e3:	cmp    BYTE PTR [esi],ch
  4029e5:	repnz inc eax
  4029e7:	or     al,BYTE PTR [eax]
  4029e9:	inc    DWORD PTR [ebx+0xa]
  4029ec:	add    BYTE PTR [edi],bl
  4029ee:	dec    ecx
  4029ef:	pop    edx
  4029f0:	add    BYTE PTR [edi],ch
  4029f2:	dec    ecx
  4029f3:	sbb    al,BYTE PTR [eax]
  4029f5:	adc    ecx,DWORD PTR [ecx+0x79]
  4029f8:	add    BYTE PTR ds:0x1f001544,cl
  4029fe:	dec    ecx
  4029ff:	jp     0x402a01
  402a01:	out    dx,eax
  402a02:	dec    eax
  402a03:	cmp    al,BYTE PTR [eax]
  402a05:	out    dx,eax
  402a06:	dec    ebp
  402a07:	retf   0xcf00
  402a0a:	inc    ebx
  402a0b:	add    BYTE PTR [eax],al
  402a0d:	fisttp WORD PTR [eax+0x6a]
  402a10:	add    bh,ch
  402a12:	dec    eax
  402a13:	sub    al,BYTE PTR [eax]
  402a15:	out    dx,eax
  402a16:	dec    ebp
  402a17:	stos   BYTE PTR es:[edi],al
  402a18:	add    bh,bl
  402a1a:	dec    eax
  402a1b:	or     al,BYTE PTR [eax]
  402a1d:	fisttp WORD PTR [eax-0x76]
  402a20:	add    BYTE PTR [edi-0x50ffb5b8],ch
  402a26:	dec    ebp
  402a27:	jmp    0x0:0xc43cf00
  402a2e:	lahf   
  402a2f:	dec    eax
  402a30:	push   edx
  402a31:	add    BYTE PTR [edi-0x50ffedb8],ch
  402a37:	dec    ebp
  402a38:	call   0x9f00:0x31438c00
  402a3f:	dec    eax
  402a40:	jb     0x402a42
  402a42:	outs   dx,DWORD PTR ds:[esi]
  402a43:	dec    eax
  402a44:	xor    al,BYTE PTR [eax]
  402a46:	outs   dx,DWORD PTR ds:[esi]
  402a47:	dec    edi
  402a48:	fiadd  DWORD PTR [eax]
  402a4a:	dec    esi
  402a4b:	inc    ebp
  402a4c:	sbb    eax,DWORD PTR [eax]
  402a4e:	pop    edi
  402a4f:	dec    eax
  402a50:	bound  eax,QWORD PTR [eax]
  402a52:	outs   dx,DWORD PTR ds:[esi]
  402a53:	dec    eax
  402a54:	and    al,BYTE PTR [eax]
  402a56:	outs   dx,DWORD PTR ds:[esi]
  402a57:	dec    edi
  402a58:	mov    edx,0x1a98600
  402a5d:	or     BYTE PTR [esi-0x7977fe57],al
  402a63:	test   eax,0xa9864801
  402a68:	push   es
  402a69:	lock xchg BYTE PTR [ecx+0xc],bh
  402a6d:	add    al,0x86
  402a6f:	test   eax,0xa9865401
  402a74:	add    DWORD PTR [esi+eax*4],edx
  402a77:	xchg   esi,eax
  402a78:	add    ebx,esp
  402a7a:	xchg   BYTE PTR [eax-0x5679d4f2],bl
  402a80:	add    DWORD PTR [esi+eax*4-0x57],esi
  402a84:	add    DWORD PTR [esi+eax*4],esi
  402a87:	test   eax,0x7a86c800
  402a8c:	push   cs
  402a8d:	or     eax,0x6401a986
  402a92:	add    BYTE PTR [esi-0x79dbfe57],al
  402a98:	test   eax,0xa986a800
  402a9d:	add    DWORD PTR [esi+eax*4],eax
  402aa0:	test   eax,0xa9868401
  402aa5:	add    DWORD PTR [esi+eax*4-0x57],eax
  402aa9:	add    al,ch
  402aab:	xchg   BYTE PTR [ecx+0xe],bh
  402aae:	or     BYTE PTR [esi-0x79a3fe57],al
  402ab4:	test   eax,0xa9861c01
  402ab9:	add    BYTE PTR [eax+0x530e9d86],bl
  402abf:	xchg   BYTE PTR [ecx-0x567983ff],ch
  402ac5:	add    DWORD PTR [esi+eax*4],edi
  402ac8:	test   eax,0x7786d800
  402acd:	push   cs
  402ace:	pop    ss
  402acf:	xchg   BYTE PTR [ecx+0x42866c01],ch
  402ad5:	jecxz  0x402ae2
  402ad7:	stos   BYTE PTR es:[edi],al
  402ad8:	inc    edx
  402ad9:	jecxz  0x402ae5
  402adb:	push   cs
  402adc:	inc    edx
  402add:	jecxz  0x402aea
  402adf:	jp     0x402b23
  402ae1:	jecxz  0x402aee
  402ae3:	adc    al,BYTE PTR [edx-0x1d]
  402ae6:	or     ecx,edx
  402ae8:	inc    edx
  402ae9:	jecxz  0x402af5
  402aeb:	cs inc edx
  402aed:	rol    DWORD PTR [eax*4-0x4bf41cbe],cl
  402af4:	inc    edx
  402af5:	jecxz  0x402b02
  402af7:	add    BYTE PTR [edx+eax*2-0x2],dh
  402afb:	or     esp,ebp
  402afd:	inc    ecx
  402afe:	lock add al,0x65
  402b01:	inc    edx
  402b02:	jecxz  0x402b0f
  402b04:	je     0x402b48
  402b06:	jecxz  0x402b13
  402b08:	mov    ah,0x42
  402b0a:	jecxz  0x402b16
  402b0c:	retf   0xd241
  402b0f:	add    al,0x7d
  402b11:	inc    edx
  402b12:	jecxz  0x402b1f
  402b14:	fs inc edx
  402b16:	jecxz  0x402b23
  402b18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b19:	inc    edx
  402b1a:	jecxz  0x402b26
  402b1c:	sub    al,BYTE PTR [edx-0x1d]
  402b1f:	or     eax,DWORD PTR [edx+eax*2+0x42040be3]
  402b26:	jecxz  0x402b33
  402b28:	inc    esp
  402b29:	inc    edx
  402b2a:	jecxz  0x402b36
  402b2c:	stos   BYTE PTR es:[edi],al
  402b2d:	inc    ecx
  402b2e:	rol    DWORD PTR [ecx+eax*4],cl
  402b31:	inc    edx
  402b32:	jecxz  0x402b3f
  402b34:	cmp    al,0x42
  402b36:	jecxz  0x402b43
  402b38:	jl     0x402b7c
  402b3a:	jecxz  0x402b46
  402b3c:	cli    
  402b3d:	inc    ecx
  402b3e:	test   DWORD PTR [eax*2-0x3f41cbe],0xbc0be342
  402b49:	inc    edx
  402b4a:	jecxz  0x402b56
  402b4c:	pop    edx
  402b4d:	inc    ebx
  402b4e:	or     bl,bl
  402b50:	xor    BYTE PTR ds:0x2c8de90a,0xa
  402b57:	jmp    0xe94a97e9
  402b5c:	add    BYTE PTR [esi+ecx*8+0xa],bh
  402b60:	jmp    0xe94a77e2
  402b65:	(bad)  
  402b66:	int3   
  402b67:	or     ch,cl
  402b69:	lea    ecx,[edx+ecx*1]
  402b6c:	jmp    0xd94ab9ed
  402b71:	cmp    BYTE PTR [edi],0xa
  402b74:	jmp    0xe94a1c06
  402b79:	lea    esi,[eax]
  402b7b:	or     ch,BYTE PTR [ecx]
  402b7d:	add    BYTE PTR [edx+0xa],0xfa
  402b81:	test   BYTE PTR [ebp+0xa],dl
  402b84:	jmp    0xe94a3c16
  402b89:	lea    edx,[eax+0xa]
  402b8c:	jmp    0xd84ab213
  402b91:	test   BYTE PTR [ecx+0xa],cl
  402b94:	jmp    0xe94a4c26
  402b99:	lea    esp,[eax+0xa]
  402b9c:	jmp    0xe94b1223
  402ba1:	jge    0x402be3
  402ba3:	or     ch,cl
  402ba5:	(bad)  
  402ba6:	ror    BYTE PTR [edx],0xe9
  402ba9:	lea    eax,[eax]
  402bab:	or     ch,cl
  402bad:	and    BYTE PTR [esi+0x4b84d90a],0xa
  402bb4:	jmp    0xe94a2446
  402bb9:	lea    edi,[eax]
  402bbb:	or     ch,cl
  402bbd:	xor    BYTE PTR [esi-0x7bff02f6],0x25
  402bc4:	or     ch,cl
  402bc6:	lea    ebx,[eax]
  402bc8:	or     al,BYTE PTR [eax]
  402bca:	outs   dx,DWORD PTR ds:[esi]
  402bcb:	dec    ebp
  402bcc:	xor    al,0x0
  402bce:	pop    edi
  402bcf:	inc    esi
  402bd0:	(bad)  
  402bd1:	add    BYTE PTR [ebp+0x44],cl
  402bd4:	adc    DWORD PTR [eax],eax
  402bd6:	outs   dx,DWORD PTR ds:[esi]
  402bd7:	dec    ebp
  402bd8:	add    BYTE PTR fs:[edi+0x4d],ch
  402bdc:	and    al,0x0
  402bde:	pop    edi
  402bdf:	inc    esi
  402be0:	mov    dh,0x0
  402be2:	pop    edi
  402be3:	dec    ebp
  402be4:	add    al,0x0
  402be6:	das    
  402be7:	dec    ebp
  402be8:	test   BYTE PTR [eax],al
  402bea:	das    
  402beb:	dec    ebp
  402bec:	inc    esp
  402bed:	add    BYTE PTR [edi],bl
  402bef:	inc    esi
  402bf0:	test   BYTE PTR [eax],0xff
  402bf3:	inc    ebx
  402bf4:	or     al,BYTE PTR [eax]
  402bf6:	das    
  402bf7:	dec    ebp
  402bf8:	pop    ebx
  402bf9:	add    BYTE PTR [edi],ch
  402bfb:	dec    ebp
  402bfc:	sbb    eax,DWORD PTR [eax]
  402bfe:	sbb    cl,BYTE PTR [ebp-0x77]
  402c01:	add    BYTE PTR ds:0xef001544,cl
  402c07:	dec    esp
  402c08:	jnp    0x402c0a
  402c0a:	out    dx,eax
  402c0b:	dec    esp
  402c0c:	cmp    eax,DWORD PTR [eax]
  402c0e:	fild   WORD PTR [ebp-0x38]
  402c11:	add    bh,cl
  402c13:	inc    ebx
  402c14:	add    BYTE PTR [eax],al
  402c16:	out    dx,eax
  402c17:	dec    esp
  402c18:	imul   eax,DWORD PTR [eax],0xffffffef
  402c1b:	dec    esp
  402c1c:	sub    eax,DWORD PTR [eax]
  402c1e:	fild   WORD PTR [ebp-0x58]
  402c21:	add    bh,bl
  402c23:	dec    esp
  402c24:	or     eax,DWORD PTR [eax]
  402c26:	add    BYTE PTR [edi-0x50ff74b4],ch
  402c2c:	dec    esp
  402c2d:	dec    ebx
  402c2e:	add    BYTE PTR [edi-0x30ff17bb],bl
  402c34:	inc    ebx
  402c35:	or     al,0x0
  402c37:	scas   eax,DWORD PTR es:[edi]
  402c38:	dec    esp
  402c39:	push   ebx
  402c3a:	add    BYTE PTR [edi-0x60ffecb4],ch
  402c40:	inc    ebp
  402c41:	cwde   
  402c42:	add    BYTE PTR [esi-0x79c4f764],al
  402c48:	test   eax,0xa9867901
  402c4d:	add    DWORD PTR [ecx],edi
  402c4f:	xchg   BYTE PTR [ecx+0x7a86d206],ch
  402c55:	or     BYTE PTR [ecx],dl
  402c57:	xchg   BYTE PTR [ecx-0x567996ff],ch
  402c5d:	add    DWORD PTR [ecx],ebp
  402c5f:	xchg   BYTE PTR [ecx-0x56794dfa],ch
  402c65:	add    DWORD PTR [ecx],ecx
  402c67:	xchg   BYTE PTR [ecx-0x567976ff],ch
  402c6d:	add    DWORD PTR [ecx-0x7a],ecx
  402c70:	test   eax,0x7986f206
  402c75:	or     BYTE PTR [esi+eax*4],al
  402c78:	test   eax,0xa9865501
  402c7d:	add    DWORD PTR ds:0x2019986,edx
  402c83:	xchg   DWORD PTR [edx+ecx*1+0x1a9862b],ebx
  402c8a:	jne    0x402c8c
  402c8c:	xchg   BYTE PTR [ecx-0x5679caff],ch
  402c92:	add    dl,cl
  402c94:	xchg   BYTE PTR [edx+0xa],bh
  402c97:	or     eax,0x6501a986
  402c9c:	xchg   BYTE PTR [ecx-0x5679daff],ch
  402ca2:	add    BYTE PTR [edx+0x501a986],ch
  402ca8:	xchg   BYTE PTR [ecx-0x56797aff],ch
  402cae:	add    DWORD PTR [ebp-0x7a],eax
  402cb1:	test   eax,0x7986ea00
  402cb6:	or     cl,BYTE PTR [eax]
  402cb8:	xchg   BYTE PTR [ecx+0x42865d01],ch
  402cbe:	jecxz  0x402ccb
  402cc0:	jae    0x402d04
  402cc2:	jecxz  0x402cce
  402cc4:	in     al,dx
  402cc5:	inc    edx
  402cc6:	test   DWORD PTR [eax],0xbe342d5
  402ccc:	sti    
  402ccd:	inc    edx
  402cce:	jecxz  0x402cdb
  402cd0:	mov    bl,0x42
  402cd2:	jecxz  0x402cde
  402cd4:	dec    esp
  402cd5:	inc    edx
  402cd6:	rol    DWORD PTR [eax],1
  402cd8:	jns    0x402d1c
  402cda:	jecxz  0x402ce7
  402cdc:	jmp    0x402d20
  402cde:	jecxz  0x402ceb
  402ce0:	mov    ds:0xc0ae342,eax
  402ce5:	inc    edx
  402ce6:	jecxz  0x402cf3
  402ce8:	xchg   ebx,eax
  402ce9:	inc    edx
  402cea:	jecxz  0x402cf7
  402cec:	or     eax,DWORD PTR [edx-0x1d]
  402cef:	or     eax,DWORD PTR [eax]
  402cf1:	ret    
  402cf2:	inc    edx
  402cf3:	jecxz  0x402cff
  402cf5:	sub    al,0x42
  402cf7:	rol    DWORD PTR [eax],cl
  402cf9:	test   DWORD PTR [edx-0x1d],eax
  402cfc:	or     esi,DWORD PTR [ebp+0x750be342]
  402d02:	inc    edx
  402d03:	dec    BYTE PTR [ebx]
  402d05:	inc    ebp
  402d06:	inc    edx
  402d07:	lock add BYTE PTR [ebp+0x750be342],ah
  402d0e:	inc    edx
  402d0f:	jecxz  0x402d1c
  402d11:	mov    ch,0x42
  402d13:	jecxz  0x402d1f
  402d15:	rol    BYTE PTR [ecx-0x2e],0x0
  402d19:	lea    eax,[edx-0x1d]
  402d1c:	or     esp,DWORD PTR [ebp+0x42]
  402d1f:	jecxz  0x402d2c
  402d21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d22:	inc    edx
  402d23:	jecxz  0x402d2f
  402d25:	and    BYTE PTR [edx-0x1d],al
  402d28:	or     eax,DWORD PTR [ebp+0x50be342]
  402d2e:	inc    edx
  402d2f:	jecxz  0x402d3c
  402d31:	inc    ebp
  402d32:	inc    edx
  402d33:	jecxz  0x402d3f
  402d35:	mov    al,ds:0x86d90a41
  402d3a:	aas    
  402d3b:	or     ch,cl
  402d3d:	(bad)  
  402d3e:	sti    
  402d3f:	or     ecx,ebp
  402d41:	jge    0x402d7e
  402d43:	or     ch,cl
  402d45:	jl     0x402cf7
  402d47:	or     bh,ch
  402d49:	xchg   BYTE PTR [ecx],al
  402d4b:	or     ch,cl
  402d4d:	lea    ebx,[ecx]
  402d4f:	or     ch,cl
  402d51:	jge    0x402dac
  402d53:	or     ch,cl
  402d55:	add    BYTE PTR [esp+ebp*2+0xa],bh
  402d59:	fild   DWORD PTR [esi-0x7216f5cf]
  402d5f:	sub    DWORD PTR [edx],ecx
  402d61:	jmp    0xe94a96e3
  402d66:	jl     0x402d34
  402d68:	or     ch,cl
  402d6a:	lea    ecx,[ecx+0xa]
  402d6d:	jmp    0xe94af6ff
  402d72:	jge    0x402d7d
  402d74:	or     ch,cl
  402d76:	jl     0x402d04
  402d78:	or     bl,cl
  402d7a:	xchg   BYTE PTR [edi],bh
  402d7c:	or     ch,cl
  402d7e:	(bad)  
  402d7f:	in     eax,dx
  402d80:	or     ecx,ebp
  402d82:	jge    0x402db1
  402d84:	or     ch,BYTE PTR [ecx]
  402d86:	jp     0x402dca
  402d88:	or     bh,dl
  402d8a:	add    BYTE PTR [ecx+0xa],dl
  402d8d:	jmp    0xe94a3b1f
  402d92:	jge    0x402de1
  402d94:	or     ch,cl
  402d96:	jp     0x402d1c
  402d98:	or     bl,al
  402d9a:	loopne 0x402de0
  402d9c:	or     ch,cl
  402d9e:	lea    ebx,ds:0x5d7de90a
  402da4:	or     ch,cl
  402da6:	jp     0x402d8c
  402da8:	or     ch,cl
  402daa:	lea    edi,ds:0xbd8de90a
  402db0:	or     al,BYTE PTR [eax]
  402db2:	lahf   
  402db3:	dec    ecx
  402db4:	dec    ebp
  402db5:	add    BYTE PTR [edi+0xe446],bl
  402dbb:	mov    edi,0xaf000294
  402dc0:	dec    ecx
  402dc1:	push   ebp
  402dc2:	add    BYTE PTR [edi-0x60ffeab7],bl
  402dc8:	inc    esi
  402dc9:	xchg   esp,eax
  402dca:	add    BYTE PTR [ebx+0x6f006894],al
  402dd0:	dec    ecx
  402dd1:	jne    0x402dd3
  402dd3:	pop    edi
  402dd4:	dec    ecx
  402dd5:	xor    eax,0xd4465f00
  402dda:	add    BYTE PTR ds:0x6f001094,bh
  402de0:	dec    ecx
  402de1:	add    BYTE PTR gs:[edi+0x49],bl
  402de5:	and    eax,0xb4465f00
  402dea:	add    BYTE PTR [edi],ch
  402dec:	dec    ecx
  402ded:	add    eax,0x85492f00
  402df2:	add    BYTE PTR [edi],bl
  402df4:	dec    ecx
  402df5:	inc    ebp
  402df6:	add    BYTE PTR [edi],bl
  402df8:	inc    esi
  402df9:	hlt    
  402dfa:	add    BYTE PTR [edi],cl
  402dfc:	xchg   esp,eax
  402dfd:	cmc    
  402dfe:	jmp    FWORD PTR [edi]
  402e00:	dec    ecx
  402e01:	pop    edx
  402e02:	add    BYTE PTR [edi],bl
  402e04:	dec    ecx
  402e05:	sbb    al,BYTE PTR [eax]
  402e07:	adc    ecx,DWORD PTR [ecx+0x79]
  402e0a:	add    ch,bh
  402e0c:	xchg   ebx,eax
  402e0d:	adc    al,0x0
  402e0f:	out    dx,eax
  402e10:	dec    eax
  402e11:	jp     0x402e13
  402e13:	fisttp WORD PTR [eax+0x3a]
  402e16:	add    bh,bl
  402e18:	inc    ebp
  402e19:	retf   
  402e1a:	add    BYTE PTR [edi+0x393],bh
  402e20:	out    dx,eax
  402e21:	dec    eax
  402e22:	push   0x0
  402e24:	fisttp WORD PTR [eax+0x2a]
  402e27:	add    bh,bl
  402e29:	inc    ebp
  402e2a:	stos   DWORD PTR es:[edi],eax
  402e2b:	add    BYTE PTR [esi-0x79fffe55],al
  402e31:	stos   DWORD PTR es:[edi],eax
  402e32:	add    DWORD PTR [eax+0x4001ab86],eax
  402e38:	xchg   BYTE PTR [ebx+0x7b86e106],ch
  402e3e:	hlt    
  402e3f:	add    eax,0x5801ab86
  402e44:	xchg   BYTE PTR [ebx-0x5479e7ff],ch
  402e4a:	push   es
  402e4b:	xchg   ecx,eax
  402e4c:	xchg   BYTE PTR [eax-0x5679c50c],bl
  402e52:	add    DWORD PTR [eax-0x7a],edi
  402e55:	test   eax,0xa9863801
  402e5a:	push   es
  402e5b:	rol    DWORD PTR [esi-0x79ef0b86],1
  402e61:	test   eax,0xa9866801
  402e66:	add    DWORD PTR [eax],ebp
  402e68:	xchg   BYTE PTR [ecx-0x56794efa],ch
  402e6e:	add    DWORD PTR [eax],ecx
  402e70:	xchg   BYTE PTR [ecx-0x567977ff],ch
  402e76:	add    DWORD PTR [eax-0x7a],ecx
  402e79:	test   eax,0x7986f106
  402e7e:	hlt    
  402e7f:	add    eax,DWORD PTR [esi+0x5401a9]
  402e85:	xchg   BYTE PTR [ecx-0x7179ebff],ch
  402e8b:	add    ebx,esp
  402e8d:	xchg   BYTE PTR [eax-0x5679d50a],bl
  402e93:	add    DWORD PTR [esi+eax*4-0x57],esi
  402e97:	add    DWORD PTR [esi+eax*4],esi
  402e9a:	test   eax,0x7a86c900
  402e9f:	test   BYTE PTR [esi+eax*4],0xa9
  402ea3:	add    DWORD PTR [esi+eax*4+0x42],esp
  402ea7:	jecxz  0x402eb4
  402ea9:	mov    ds:0xef0ae342,al
  402eae:	inc    edx
  402eaf:	jecxz  0x402ebc
  402eb1:	add    BYTE PTR [edx-0x1d],0xb
  402eb5:	or     al,BYTE PTR [ebx-0x1d]
  402eb8:	or     eax,DWORD PTR [edx+0x42]
  402ebb:	jecxz  0x402ec7
  402ebd:	scas   eax,DWORD PTR es:[edi]
  402ebe:	inc    edx
  402ebf:	sar    esp,cl
  402ec1:	add    DWORD PTR [edx-0x1d],0xe342320b
  402ec8:	or     ebp,DWORD PTR [edx+0x42]
  402ecb:	jecxz  0x402ed7
  402ecd:	pop    ds
  402ece:	inc    edx
  402ecf:	idiv   esp
  402ed1:	aam    0x42
  402ed3:	jecxz  0x402ee0
  402ed5:	repnz inc edx
  402ed7:	jecxz  0x402ee4
  402ed9:	stos   BYTE PTR es:[edi],al
  402eda:	inc    edx
  402edb:	jecxz  0x402ee7
  402edd:	aas    
  402ede:	inc    edx
  402edf:	sar    esp,1
  402ee1:	jo     0x402f25
  402ee3:	jecxz  0x402ef0
  402ee5:	loop   0x402f29
  402ee7:	jecxz  0x402ef4
  402ee9:	add    BYTE PTR [edx-0xf51cbe],bl
  402eef:	inc    ecx
  402ef0:	jecxz  0x402efd
  402ef2:	mov    al,BYTE PTR [edx-0x1d]
  402ef5:	or     eax,DWORD PTR [edx]
  402ef7:	inc    edx
  402ef8:	jecxz  0x402f05
  402efa:	mov    edx,0x1f0ae342
  402eff:	inc    edx
  402f00:	sar    esp,cl
  402f02:	test   BYTE PTR [edx-0x1d],al
  402f05:	or     esi,DWORD PTR [edx+eax*2+0x42740be3]
  402f0c:	dec    BYTE PTR [ebx]
  402f0e:	and    eax,0xa4fcf042
  402f13:	inc    edx
  402f14:	jecxz  0x402f21
  402f16:	je     0x402f5a
  402f18:	jecxz  0x402f25
  402f1a:	mov    ah,0x42
  402f1c:	jecxz  0x402f28
  402f1e:	retf   
  402f1f:	inc    ecx
  402f20:	or     bl,al
  402f22:	fiadd  DWORD PTR [edi+0xa]
  402f25:	jmp    0xe94a4fa7
  402f2a:	jge    0x402f8c
  402f2c:	or     ch,cl
  402f2e:	mov    ebp,ds
  402f30:	or     ch,cl
  402f32:	lea    eax,[eax+0xa]
  402f35:	jmp    0xe94aefb7
  402f3a:	jge    0x402f3c
  402f3c:	or     ch,cl
  402f3e:	mov    WORD PTR [ebp+0x3b9ad90a],ds
  402f44:	or     ch,cl
  402f46:	jge    0x402f40
  402f48:	or     ecx,ebp
  402f4a:	jge    0x402f84
  402f4c:	or     ch,cl
  402f4e:	add    BYTE PTR [edi+esi*4+0x57afd0a],cl
  402f55:	or     ch,cl
  402f57:	jge    0x402f65
  402f59:	or     ch,cl
  402f5b:	jge    0x402fa9
  402f5d:	or     ch,cl
  402f5f:	mov    WORD PTR [edi+0xa],?
  402f62:	fistp  DWORD PTR [edx+0x35]
  402f65:	or     ch,cl
  402f67:	jge    0x402f85
  402f69:	or     ch,cl
  402f6b:	jge    0x402fc9
  402f6d:	or     ch,cl
  402f6f:	mov    edi,ss
  402f71:	or     ch,cl
  402f73:	lea    edi,[edx+ecx*1]
  402f76:	jmp    0xe94aebf8
  402f7b:	jge    0x402f79
  402f7d:	or     ecx,ebp
  402f7f:	mov    WORD PTR [edi+0x471ad90a],ss
  402f85:	or     ch,cl
  402f87:	jge    0x402f81
  402f89:	or     ecx,ebp
  402f8b:	or     eax,0x2290a38
  402f90:	xchg   edx,eax
  402f91:	cmc    
  402f92:	cli    
  402f93:	mov    WORD PTR [ebp+0xa],ss
  402f96:	jmp    0x4a4788
  402f9b:	fisttp WORD PTR [ebp-0x7110ffc1]
  402fa1:	mov    BYTE PTR [eax],0xbe
  402fa4:	cmp    al,0x5
  402fa6:	add    bh,bl
  402fa8:	lea    ebp,[edi+0x0]
  402fab:	fisttp WORD PTR [ebp-0x7150ffd1]
  402fb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fb2:	add    BYTE PTR [eax],al
  402fb4:	scas   eax,DWORD PTR es:[edi]
  402fb5:	lea    ecx,[edi]
  402fb7:	add    BYTE PTR [edi-0x60ff7073],bl
  402fbd:	lea    ecx,[edi+0x0]
  402fc0:	scas   eax,DWORD PTR es:[edi]
  402fc1:	mov    fs,esi
  402fc3:	add    BYTE PTR [edi-0x60fffcc4],bh
  402fc9:	lea    edx,[edi+0x0]
  402fcc:	lahf   
  402fcd:	lea    edx,[edi]
  402fcf:	add    BYTE PTR [edi-0x72],ch
  402fd2:	xchg   esi,eax
  402fd3:	add    BYTE PTR [ebx+0x3c],bh
  402fd6:	imul   eax,DWORD PTR [eax],0x778d5f
  402fdc:	pop    edi
  402fdd:	lea    esi,[edi]
  402fdf:	add    BYTE PTR [edi-0x72],ch
  402fe2:	(bad)  
  402fe3:	add    BYTE PTR ds:0x5f00113c,bh
  402fe9:	lea    esp,[edi+0x0]
  402fec:	pop    edi
  402fed:	lea    esp,[edi]
  402fef:	add    BYTE PTR [edi],ch
  402ff1:	mov    ?,WORD PTR [esi+0x78d2f00]
  402ff7:	add    BYTE PTR [edi],bl
  402ff9:	lea    eax,[edi+0x478d1f00]
  402fff:	add    BYTE PTR [edi],ch
  403001:	mov    ?,esi
  403003:	add    BYTE PTR [edi],cl
  403005:	cmp    al,0xa
  403007:	add    BYTE PTR [edi],bl
  403009:	lea    ebx,[edx+0x0]
  40300c:	pop    ds
  40300d:	lea    ebx,[edx]
  40300f:	add    dl,bh
  403011:	mov    WORD PTR [eax+0x8d8600],cs
  403017:	pop    ds
  403018:	add    BYTE PTR [esi-0x798f0e65],al
  40301e:	fwait
  40301f:	icebp  
  403020:	xor    BYTE PTR [esi-0x793d0965],al
  403026:	imul   eax,DWORD PTR [eax],0xa
  403029:	xchg   BYTE PTR [ebx-0x64799f0f],bl
  40302f:	icebp  
  403030:	and    BYTE PTR [esi-0x795d0965],al
  403036:	fwait
  403037:	icebp  
  403038:	add    BYTE PTR [esi-0x797f0e65],al
  40303e:	fwait
  40303f:	icebp  
  403040:	inc    eax
  403041:	xchg   BYTE PTR [ebx+0x6b86e2f6],bl
  403047:	add    BYTE PTR [esi],al
  403049:	xchg   BYTE PTR [ebx-0x6479a70f],bl
  40304f:	icebp  
  403050:	sbb    BYTE PTR [esi-0x796d0967],al
  403056:	mov    WORD PTR [eax],es
  403058:	cmp    eax,DWORD PTR [esi-0x79870e67]
  40305e:	cdq    
  40305f:	icebp  
  403060:	cmp    BYTE PTR [esi-0x792d0967],al
  403066:	push   0x0
  403068:	adc    DWORD PTR [esi-0x79970e67],eax
  40306e:	cdq    
  40306f:	icebp  
  403070:	sub    BYTE PTR [esi-0x794d0967],al
  403076:	cdq    
  403077:	icebp  
  403078:	or     BYTE PTR [esi+0x88f199],al
  40307e:	xchg   BYTE PTR [ecx-0x6679b70f],bl
  403084:	div    dl
  403086:	xchg   BYTE PTR [ecx+0x0],ch
  403089:	add    al,0x86
  40308b:	cdq    
  40308c:	icebp  
  40308d:	push   esp
  40308e:	xchg   BYTE PTR [edx-0x1d],al
  403091:	sti    
  403092:	call   0xf041:0x87fbf342
  403099:	or     BYTE PTR [ebp+0x72fbe342],bl
  40309f:	inc    edx
  4030a0:	jecxz  0x40309d
  4030a2:	call   0xd242:0xccfae342
  4030a9:	or     BYTE PTR [ebx+0x62fbe342],al
  4030af:	inc    edx
  4030b0:	jecxz  0x4030ad
  4030b2:	push   0x42
  4030b4:	jecxz  0x4030b0
  4030b6:	in     al,dx
  4030b7:	inc    edx
  4030b8:	jecxz  0x4030b5
  4030ba:	mov    al,BYTE PTR [edx-0x1d]
  4030bd:	sti    
  4030be:	add    al,BYTE PTR [ebx-0x1d]
  4030c1:	sti    
  4030c2:	dec    edx
  4030c3:	inc    edx
  4030c4:	jecxz  0x4030c0
  4030c6:	lods   al,BYTE PTR ds:[esi]
  4030c7:	inc    edx
  4030c8:	ror    DWORD PTR [eax],cl
  4030ca:	jle    0x40310e
  4030cc:	jecxz  0x4030c9
  4030ce:	sub    al,BYTE PTR [edx-0x1d]
  4030d1:	sti    
  4030d2:	mov    ds:0x1cfae342,al
  4030d7:	inc    edx
  4030d8:	test   DWORD PTR [eax],0xfbe342d5
  4030de:	jmp    0x42a2:0xfbe342
  4030e5:	jecxz  0x4030e1
  4030e7:	cmp    al,0x42
  4030e9:	ror    DWORD PTR [eax],1
  4030eb:	jns    0x40312f
  4030ed:	jecxz  0x4030ea
  4030ef:	fiadd  DWORD PTR [edx-0x1d]
  4030f2:	sti    
  4030f3:	jb     0x403137
  4030f5:	jecxz  0x4030f1
  4030f7:	cld    
  4030f8:	inc    ecx
  4030f9:	jecxz  0x4030f6
  4030fb:	add    BYTE PTR [edx-0x1d],0xfb
  4030ff:	cli    
  403100:	inc    ecx
  403101:	jecxz  0x4030fe
  403103:	rol    BYTE PTR [edx-0x1d],cl
  403106:	cli    
  403107:	sbb    al,0x42
  403109:	or     bl,cl
  40310b:	jle    0x403150
  40310d:	or     ch,cl
  40310f:	or     eax,0xfde909f4
  403114:	xor    ecx,DWORD PTR [edx]
  403116:	hlt    
  403117:	std    
  403118:	or     DWORD PTR [edx],0xfffffffa
  40311b:	jle    0x403180
  40311d:	or     ch,cl
  40311f:	in     eax,dx
  403120:	adc    ecx,DWORD PTR [edx]
  403122:	jmp    0xe94a8504
  403127:	fadd   QWORD PTR [edi+0x3b7ed80a]
  40312d:	or     ch,cl
  40312f:	int    0x23
  403131:	or     ch,cl
  403133:	mov    ebp,0xbce90a63
  403138:	out    0xa,eax
  40313a:	jmp    0xe94a74ec
  40313f:	lods   eax,DWORD PTR ds:[esi]
  403140:	ret    
  403141:	or     ch,cl
  403143:	popf   
  403144:	add    ecx,DWORD PTR [edx]
  403146:	jmp    0xae7cd4b
  40314b:	fnstcw WORD PTR [esi+0x47]
  40314e:	or     ch,cl
  403150:	(bad)  
  403151:	jmp    0x40315c
  403153:	jmp    0xe94a5ad5
  403158:	jl     0x40310f
  40315a:	or     bh,ch
  40315c:	jle    0x40315f
  40315e:	or     ch,cl
  403160:	ins    DWORD PTR es:[edi],dx
  403161:	or     DWORD PTR [edx],ecx
  403163:	jmp    0xe94a7ac5
  403168:	pop    esp
  403169:	jne    0x403175
  40316b:	fstp   TBYTE PTR [esi+0x31]
  40316e:	or     ch,cl
  403170:	dec    ebp
  403171:	sbb    DWORD PTR [edx],ecx
  403173:	jmp    0xe94a8ab5
  403178:	cmp    al,0xd5
  40317a:	or     ch,cl
  40317c:	sub    eax,0x2de90a39
  403181:	mov    ecx,0x8a2f000a
  403186:	inc    eax
  403187:	add    BYTE PTR [edi],ch
  403189:	mov    esp,edi
  40318b:	add    BYTE PTR [edi],ch
  40318d:	cmp    ecx,DWORD PTR [edi]
  40318f:	add    BYTE PTR [edi],bl
  403191:	mov    bl,BYTE PTR [eax+eax*1-0x11]
  403195:	mov    DWORD PTR [eax+eax*1],ebx
  403198:	scas   eax,DWORD PTR es:[edi]
  403199:	mov    ?,ebp
  40319b:	(bad)  
  40319c:	in     al,dx
  40319d:	inc    esp
  40319e:	cmp    DWORD PTR [eax],eax
  4031a0:	fisttp WORD PTR [ecx-0x7610ff84]
  4031a6:	cmp    al,0x0
  4031a8:	out    dx,eax
  4031a9:	mov    es,esp
  4031ab:	add    BYTE PTR [eax],al
  4031ad:	scas   al,BYTE PTR es:[edi]
  4031ae:	inc    esp
  4031af:	add    eax,0x6c89df00
  4031b4:	add    BYTE PTR [edi-0x50ffd377],ch
  4031ba:	mov    fs,WORD PTR [eax+eax*1+0xc899f]
  4031c1:	lahf   
  4031c2:	mov    DWORD PTR [eax+eax*1+0x4c89af],ecx
  4031c9:	scas   eax,DWORD PTR es:[edi]
  4031ca:	mov    fs,esp
  4031cc:	add    BYTE PTR [edi-0x60fffcbc],ch
  4031d2:	mov    DWORD PTR [eax+eax*1+0x6f],edx
  4031d6:	mov    DWORD PTR [eax+eax*1],edx
  4031d9:	outs   dx,DWORD PTR ds:[esi]
  4031da:	mov    ss,WORD PTR [eax+eax*1+0x694473]
  4031e1:	pop    edi
  4031e2:	mov    DWORD PTR [eax+eax*1+0x6f],esi
  4031e6:	mov    DWORD PTR [eax+eax*1],esi
  4031e9:	outs   dx,DWORD PTR ds:[esi]
  4031ea:	mov    ss,esp
  4031ec:	add    BYTE PTR ds:0x5f001144,ch
  4031f2:	mov    DWORD PTR [eax+eax*1+0x2f],esp
  4031f6:	mov    DWORD PTR [eax+eax*1],esp
  4031f9:	das    
  4031fa:	mov    ?,WORD PTR [eax+eax*1+0xef19b86]
  403201:	xchg   BYTE PTR [ebx-0x6479710f],bl
  403207:	icebp  
  403208:	dec    esi
  403209:	xchg   BYTE PTR [ebx+0x6b86fef6],bl
  40320f:	add    al,BYTE PTR [ecx]
  403211:	add    BYTE PTR [esi-0x78fefd8c],al
  403217:	mov    BYTE PTR [edx],al
  403219:	adc    DWORD PTR [esi-0x69fefcc0],eax
  40321f:	mov    al,BYTE PTR [edx]
  403221:	add    eax,0x1029286
  403226:	mov    ch,BYTE PTR [esi+0x2]
  403229:	inc    ecx
  40322a:	xchg   BYTE PTR [esi+0x2],ch
  40322d:	add    DWORD PTR [esi+0x6b],eax
  403230:	add    al,BYTE PTR [ebx]
  403232:	xchg   BYTE PTR [ebx+0x2],dh
  403235:	add    DWORD PTR [edi+ecx*4-0x7079defe],eax
  40323c:	add    al,BYTE PTR [ecx]
  40323e:	mov    WORD PTR [edx],ax
  403241:	or     DWORD PTR [esi-0x71fefd6f],eax
  403247:	ins    DWORD PTR es:[edi],dx
  403248:	add    al,BYTE PTR [ecx+0x35b86]
  40324e:	xchg   BYTE PTR [ebx+0x2],ch
  403251:	add    al,BYTE PTR [esi-0x787efd8c]
  403257:	mov    BYTE PTR [edx],al
  403259:	sbb    DWORD PTR [esi-0x71fefcc0],eax
  40325f:	mov    al,BYTE PTR [edx]
  403261:	pop    es
  403262:	xchg   BYTE PTR [edx+0x6e880102],dl
  403268:	add    ah,BYTE PTR [ecx-0x7a]
  40326b:	outs   dx,BYTE PTR ds:[esi]
  40326c:	add    al,BYTE PTR [ecx]
  40326e:	out    0x69,al
  403270:	add    al,BYTE PTR [esi+eax*4]
  403273:	jno    0x403277
  403275:	add    DWORD PTR [eax],eax
  403277:	test   DWORD PTR [edx-0x9],eax
  40327a:	or     BYTE PTR [edi+0x42],dh
  40327d:	test   DWORD PTR [eax],0x8f15287
  403283:	jnp    0x4032c7
  403285:	stc    
  403286:	or     BYTE PTR [edi+0x4708d53e],al
  40328c:	inc    ebx
  40328d:	mov    ds:0xd3428608,eax
  403292:	add    esi,DWORD PTR [edi+0x42]
  403295:	rol    DWORD PTR [ebx],1
  403297:	xchg   BYTE PTR [edx-0x5],al
  40329a:	add    eax,DWORD PTR [ecx-0x77fc05be]
  4032a0:	inc    edx
  4032a1:	jmp    0xe882b5a9
  4032a6:	add    ecx,DWORD PTR [edx-0x7afc00be]
  4032ac:	inc    edx
  4032ad:	out    0x3,al
  4032af:	test   BYTE PTR [edx-0x13],al
  4032b2:	add    eax,DWORD PTR [edi-0x79fc2bbe]
  4032b8:	inc    edx
  4032b9:	jecxz  0x4032be
  4032bb:	xchg   BYTE PTR [edx+0x7d],al
  4032be:	adc    al,0x89
  4032c0:	adc    ecx,edi
  4032c2:	bound  edi,QWORD PTR [eax-0x64]
  4032c5:	pop    ecx
  4032c6:	xor    ecx,DWORD PTR [edi+0x2bc7eaa9]
  4032cc:	inc    ebx
  4032cd:	fcomp  DWORD PTR fs:[edx+edx*1]
  4032d1:	mov    dh,0xa6
  4032d3:	and    eax,0xea774099
  4032d8:	lods   al,BYTE PTR ds:[esi]
  4032d9:	adc    DWORD PTR [eax+eax*1+0x5d],edi
  4032dd:	cmp    al,0x8f
  4032df:	mov    WORD PTR [edx+0x9],ss
  4032e2:	std    
  4032e3:	ficom  DWORD PTR [ebx-0x5e]
  4032e6:	imul   ebp,DWORD PTR [ebx+0x4018b334],0x10
  4032ed:	cmp    DWORD PTR [esi+0x50],esi
  4032f0:	pop    ss
  4032f1:	or     al,0xa
  4032f3:	out    dx,al
  4032f4:	push   0x3158edca
  4032f9:	int3   
  4032fa:	call   0x6a1b:0x17d4358d
  403301:	shl    BYTE PTR [eax-0x5f],cl
  403304:	aam    0xc9
  403306:	stc    
  403307:	das    
  403308:	(bad)
  40330b:	test   cl,dl
  40330d:	adc    BYTE PTR [bp+si],dl
  403310:	push   ds
  403311:	ins    DWORD PTR es:[edi],dx
  403312:	addr16 cwde 
  403314:	lock jne 0x403315
  403317:	or     DWORD PTR es:[edi-0x77],ebp
  40331b:	aas    
  40331c:	push   0x1e
  40331e:	sbb    DWORD PTR [ecx+0x536e170d],ebp
  403324:	mov    ebp,0x1cbdf71f
  403329:	and    eax,0x41963680
  40332e:	push   ds
  40332f:	mov    al,ds:0x4a694431
  403334:	jns    0x403371
  403336:	lock mov ah,0xc0
  403339:	inc    edx
  40333a:	xchg   DWORD PTR [ecx+0x3f311c65],esi
  403340:	add    BYTE PTR [edx+0x448d4619],bh
  403346:	and    bl,bh
  403348:	sbb    esi,DWORD PTR ds:0xa198a823
  40334e:	ds ss es into 
  403352:	inc    ebp
  403353:	inc    ecx
  403354:	je     0x403356
  403356:	cmp    eax,0x3d1902d8
  40335b:	scas   eax,DWORD PTR es:[edi]
  40335c:	arpl   WORD PTR ds:0xddcd3fd0,bx
  403362:	aam    0x48
  403364:	aas    
  403365:	sub    al,0xce
  403367:	shr    DWORD PTR [ecx+0xa6c74c],1
  40336d:	int3   
  40336e:	jmp    0x5a5a6644
  403373:	aad    0x45
  403375:	mov    al,ds:0x16dcdf88
  40337a:	cmp    ebx,ebx
  40337c:	stos   DWORD PTR es:[edi],eax
  40337d:	shl    DWORD PTR ds:0x462526d3,cl
  403383:	aam    0x51
  403385:	lahf   
  403386:	push   esp
  403387:	(bad)  
  403389:	sbb    DWORD PTR ds:0x715abfda,esp
  40338f:	mov    esi,0xb9823c21
  403394:	push   esi
  403395:	mov    dh,0x10
  403397:	mov    al,0xcf
  403399:	loopne 0x40337b
  40339b:	mov    bh,0xb8
  40339d:	add    DWORD PTR [edi+0xdf72808],esi
  4033a3:	maxps  xmm0,XMMWORD PTR [eax]
  4033a6:	or     eax,0x8bc606d8
  4033ab:	add    DWORD PTR [bx+di-0x598],esi
  4033b0:	fs das 
  4033b2:	scas   al,BYTE PTR es:[edi]
  4033b3:	push   ecx
  4033b4:	bound  ebx,QWORD PTR [eax+0x4]
  4033b7:	pushf  
  4033b8:	push   0xffffffc1
  4033ba:	mov    dl,0x2a
  4033bc:	ins    BYTE PTR es:[edi],dx
  4033bd:	mov    dh,0x3f
  4033bf:	call   ebp
  4033c1:	jbe    0x40336c
  4033c3:	out    dx,al
  4033c4:	rol    BYTE PTR [ecx],1
  4033c6:	push   ebx
  4033c7:	pop    esi
  4033c8:	fcomp  DWORD PTR [eax-0x10216a3b]
  4033ce:	push   ss
  4033cf:	ret    
  4033d0:	mov    ebx,0xbcb2b071
  4033d5:	push   es
  4033d6:	cmp    ah,BYTE PTR [edx-0x26c3604b]
  4033dc:	mov    dl,0xe8
  4033de:	or     eax,0x9b780dc7
  4033e3:	ja     0x4033ef
  4033e5:	jbe    0xf849ca0c
  4033eb:	xchg   edx,eax
  4033ec:	popa   
  4033ed:	push   cs
  4033ee:	addr16 (bad) 
  4033f0:	repz imul edx,ecx,0x7e6d0336
  4033f7:	call   0x9a57984d
  4033fc:	sub    eax,0x3f272063
  403401:	imul   ebx,DWORD PTR [ebp-0x75939143],0x53
  403408:	push   ds
  403409:	add    BYTE PTR gs:[ebx],cl
  40340c:	test   eax,0x2e146209
  403411:	jnp    0x403419
  403413:	mov    ds:0x6d01aac4,al
  403418:	pop    edx
  403419:	fimul  DWORD PTR [eax]
  40341b:	add    al,0xb0
  40341d:	mov    ch,0xf
  40341f:	repz fsub DWORD PTR [esi-0x28b49450]
  403426:	mov    bh,0x94
  403428:	test   DWORD PTR [ecx+0x75f70dbe],eax
  40342e:	mov    ecx,0xdce2dfda
  403433:	fs push edx
  403435:	adc    ebx,edx
  403437:	jae    0x403405
  403439:	dec    ebp
  40343a:	rcl    DWORD PTR [edx],cl
  40343c:	(bad)  
  40343d:	xor    esp,edx
  40343f:	mov    ebp,0x43b26f02
  403444:	fnstcw WORD PTR [esi]
  403446:	mov    ch,0x6c
  403448:	daa    
  403449:	push   cs
  40344a:	mov    esp,0xbb19bce5
  40344f:	mov    dl,0x59
  403451:	stos   DWORD PTR es:[edi],eax
  403452:	fistp  QWORD PTR [eax+esi*4]
  403455:	jp     0x40342f
  403457:	dec    ebx
  403458:	ds retf 0x2ad1
  40345c:	adc    eax,0x4355d6c5
  403461:	(bad)  
  403463:	fild   WORD PTR [ebx]
  403465:	push   edi
  403466:	lods   al,BYTE PTR ds:[esi]
  403467:	fmul   DWORD PTR [esi-0x5b]
  40346a:	jnp    0x403455
  40346c:	aad    0x33
  40346e:	mov    eax,DWORD PTR [eax]
  403470:	out    0x6c,al
  403472:	mov    al,0x18
  403474:	mov    bh,dh
  403476:	dec    ebp
  403477:	call   0x37dc8800
  40347c:	mov    esp,ds
  40347e:	sub    al,BYTE PTR [edi-0x75]
  403481:	gs out dx,eax
  403483:	push   esp
  403484:	mov    esi,edx
  403486:	pop    eax
  403487:	inc    esp
  403488:	test   BYTE PTR [edi-0xd],bl
  40348b:	repz mov eax,cs
  40348e:	ins    DWORD PTR es:[edi],dx
  40348f:	and    ecx,DWORD PTR [edx-0x616f3987]
  403495:	out    dx,eax
  403496:	das    
  403497:	sbb    BYTE PTR [ecx+0x68afea62],0xc9
  40349e:	inc    esp
  40349f:	fbld   TBYTE PTR [edi+0x78]
  4034a2:	std    
  4034a3:	retf   0xe8d0
  4034a6:	mov    bh,BYTE PTR [ebx+0x6c0159cf]
  4034ac:	mov    dh,0xd2
  4034ae:	lahf   
  4034af:	pushf  
  4034b0:	mov    cl,0x7f
  4034b2:	aam    0x6
  4034b4:	adc    eax,0x15f761ea
  4034b9:	pop    ecx
  4034ba:	clc    
  4034bb:	daa    
  4034bc:	add    edx,eax
  4034be:	jbe    0x403518
  4034c0:	cld    
  4034c1:	add    bl,0x84
  4034c4:	out    dx,al
  4034c5:	xchg   ebp,eax
  4034c6:	pop    ebp
  4034c7:	xchg   ebp,eax
  4034c8:	jmp    0xd9262479
  4034cd:	inc    ebx
  4034ce:	jns    0x403486
  4034d0:	xlat   BYTE PTR ds:[ebx]
  4034d1:	push   cs
  4034d2:	retf   0x40
  4034d5:	mov    ebx,0xb451449c
  4034da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034db:	or     bl,ah
  4034dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034de:	imul   ecx,DWORD PTR [esi],0x6a
  4034e1:	je     0x40354e
  4034e3:	jns    0x4034e0
  4034e5:	jb     0x40350b
  4034e7:	jmp    0x9e5eb051
  4034ec:	pop    ss
  4034ed:	rcl    BYTE PTR ds:0x1ca88107,0x70
  4034f4:	repnz push cs
  4034f6:	cmp    dh,ch
  4034f8:	pop    esp
  4034f9:	aas    
  4034fa:	cmp    DWORD PTR [ecx+0x421c0e],ebx
  403500:	js     0x4034ae
  403502:	aas    
  403503:	ja     0x4034b2
  403505:	mov    edx,0xe33bfa37
  40350a:	cmp    DWORD PTR [ebp+0x14413b81],ecx
  403510:	cmovo  eax,DWORD PTR [eax+0x63]
  403514:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403515:	push   esi
  403516:	and    al,0xfd
  403518:	xor    ah,BYTE PTR [edi-0x688775e3]
  40351e:	push   ss
  40351f:	adc    eax,DWORD PTR [esi]
  403521:	test   BYTE PTR [ebx],bl
  403523:	fs pop edi
  403525:	jecxz  0x403599
  403527:	hlt    
  403528:	leave  
  403529:	mov    dh,BYTE PTR [ebx-0x7d]
  40352c:	xor    edx,DWORD PTR [eax+0x6c]
  40352f:	sbb    bl,BYTE PTR [ebp+0x566d659b]
  403535:	pop    ds
  403536:	leave  
  403537:	repz rol BYTE PTR [eax],0xae
  40353b:	mov    DWORD PTR [edx+ebp*1-0x6be230f4],0x916ad23f
  403546:	jmp    0xab71:0x331fdc6f
  40354d:	lods   eax,DWORD PTR ds:[esi]
  40354e:	retf   
  40354f:	imul   esi,DWORD PTR [edx],0x4566b03b
  403555:	add    BYTE PTR [esi],cl
  403557:	and    dh,BYTE PTR [ecx-0x49ae7f2f]
  40355d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40355e:	sbb    al,BYTE PTR [edi+edi*4+0x3f]
  403562:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403563:	xor    BYTE PTR [eax+0x726c548],bh
  403569:	fcomp  DWORD PTR [ebx]
  40356b:	xchg   edi,eax
  40356c:	add    ebp,DWORD PTR [edi+0x360947c1]
  403572:	dec    edi
  403573:	clc    
  403574:	or     eax,0x6a6a9c41
  403579:	fcomip st,st(2)
  40357b:	fisubr DWORD PTR [ebp-0x58]
  40357e:	enter  0x640b,0x31
  403582:	idiv   BYTE PTR [ebx-0x5144b99d]
  403588:	imul   ecx,ebx,0xffffff85
  40358b:	mov    edi,0xcfcfbc6c
  403590:	gs and eax,0x5262a031
  403596:	mov    dl,0xf2
  403598:	add    eax,0x1031ccc
  40359d:	mov    ebx,0xb93b600
  4035a2:	and    bh,BYTE PTR [eax]
  4035a4:	andnps xmm5,XMMWORD PTR fs:[ecx]
  4035a8:	cmp    dh,BYTE PTR [eax-0x4976683b]
  4035ae:	mov    dl,0x5d
  4035b0:	pop    eax
  4035b1:	mov    esi,0xb8ebe32b
  4035b6:	pop    esp
  4035b7:	add    BYTE PTR [esi-0x23],bh
  4035ba:	ret    0xccce
  4035bd:	fidiv  DWORD PTR [ebp+0x2cd31c24]
  4035c3:	retf   0xd4af
  4035c6:	pop    ebx
  4035c7:	dec    edi
  4035c8:	sub    BYTE PTR [esi-0x65],0xc1
  4035cc:	jae    0x403637
  4035ce:	in     al,dx
  4035cf:	xchg   BYTE PTR [edi],cl
  4035d1:	test   eax,0x78a1136a
  4035d6:	ins    DWORD PTR es:[edi],dx
  4035d7:	test   dl,dh
  4035d9:	repz or dl,ch
  4035dc:	les    eax,FWORD PTR [edi]
  4035de:	push   cs
  4035df:	ins    DWORD PTR es:[edi],dx
  4035e0:	push   ss
  4035e1:	push   ebp
  4035e2:	pop    es
  4035e3:	hlt    
  4035e4:	push   0x198b0024
  4035e9:	xor    BYTE PTR [edi-0x47bc70ed],bh
  4035ef:	fs mov ebp,0x33ddb111
  4035f5:	loope  0x4035ac
  4035f7:	and    BYTE PTR [eax],0x7c
  4035fa:	shl    ah,cl
  4035fc:	xchg   ebp,eax
  4035fd:	(bad)  
  4035fe:	aad    0x2b
  403600:	add    al,0xdd
  403602:	fadd   QWORD PTR [eax]
  403604:	mov    edx,0x7ddbad3a
  403609:	inc    edi
  40360a:	mov    eax,0xebd900d3
  40360f:	aam    0x17
  403611:	xor    ebx,DWORD PTR [ecx-0x77fa5123]
  403617:	fidiv  DWORD PTR [ecx+0x4e]
  40361a:	in     al,0xbd
  40361c:	pop    es
  40361d:	loopne 0x403636
  40361f:	mov    ecx,0xb04539f8
  403624:	imul   ecx,DWORD PTR [esp+esi*1],0x23758eb7
  40362b:	or     dh,bh
  40362d:	jmp    0x600:0xe0e10f4f
  403634:	pusha  
  403635:	push   edi
  403636:	icebp  
  403637:	add    BYTE PTR [edi+0x7c],dh
  40363a:	outs   dx,DWORD PTR ds:[esi]
  40363b:	gs stc 
  40363d:	icebp  
  40363e:	fwait
  40363f:	bound  edi,QWORD PTR [esi+0x276bcca7]
  403645:	pop    esi
  403646:	mov    ebp,0x2b42986c
  40364b:	loop   0x4036c9
  40364d:	loop   0x4035d4
  40364f:	mov    cl,0x93
  403651:	ins    DWORD PTR es:[edi],dx
  403652:	aaa    
  403653:	add    DWORD PTR [edx-0x7a6d5f0c],0x4b
  40365a:	add    bl,BYTE PTR [esi]
  40365c:	and    ebp,ebx
  40365e:	jl     0x40364d
  403660:	loope  0x4036d4
  403662:	cs aas 
  403664:	out    dx,eax
  403665:	stc    
  403666:	xchg   edi,eax
  403667:	dec    esi
  403668:	add    al,ah
  40366a:	inc    esp
  40366b:	mov    ecx,0x37d55759
  403670:	sub    DWORD PTR [eax],edi
  403672:	push   0xffffffc5
  403674:	cli    
  403675:	cmp    BYTE PTR [ebx],al
  403677:	push   ebx
  403678:	or     ch,BYTE PTR [esi]
  40367a:	dec    esp
  40367b:	nop
  40367c:	xchg   ebp,eax
  40367d:	or     bl,dl
  40367f:	cs gs std 
  403682:	fs mov esp,0x49fbf4b6
  403688:	(bad)  
  403689:	sti    
  40368a:	push   edx
  40368b:	psrld  mm5,mm3
  40368e:	lds    edi,FWORD PTR [ecx-0x3f]
  403691:	fdivr  QWORD PTR [eax-0x2d]
  403694:	jb     0x40366b
  403696:	out    dx,eax
  403697:	dec    esp
  403698:	mov    ds:0xde65eda,al
  40369d:	ss leave 
  40369f:	push   eax
  4036a0:	std    
  4036a1:	fdiv   DWORD PTR [ebp-0x36]
  4036a4:	cs fsubr st,st(6)
  4036a7:	and    ebx,DWORD PTR [esi-0x31]
  4036aa:	pop    edi
  4036ab:	sbb    eax,0xabcf604a
  4036b0:	cmp    ah,BYTE PTR [edi+0x7e]
  4036b3:	loope  0x40369d
  4036b5:	popa   
  4036b6:	in     eax,0x7e
  4036b8:	sbb    DWORD PTR [ecx+0x58],esp
  4036bb:	hlt    
  4036bc:	test   DWORD PTR [ebp-0x32],edi
  4036bf:	xor    BYTE PTR [esi-0x6e],0x7f
  4036c3:	or     dl,dl
  4036c5:	loop   0x403704
  4036c7:	push   eax
  4036c8:	pop    esp
  4036c9:	fild   DWORD PTR [eax+0x27]
  4036cc:	jmp    0xa82bbd1
  4036d1:	sub    BYTE PTR [ebp+0x27],dh
  4036d4:	adc    ebp,DWORD PTR [ebx+0x24]
  4036d7:	dec    esp
  4036d8:	cmp    BYTE PTR [edx-0x12deaaa9],ch
  4036de:	enter  0x6e16,0x24
  4036e2:	push   esi
  4036e3:	or     esi,DWORD PTR [edi+0x6f]
  4036e6:	sbb    ebp,eax
  4036e8:	pop    ebx
  4036e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036ea:	loopne 0x4036ed
  4036ec:	inc    ebp
  4036ed:	icebp  
  4036ee:	out    dx,eax
  4036ef:	imul   eax,edx,0xdb800eb0
  4036f5:	arpl   WORD PTR [edx],di
  4036f7:	xchg   ebx,eax
  4036f8:	lock and bl,BYTE PTR ds:0x92f5e98e
  4036ff:	int    0xa6
  403701:	lods   al,BYTE PTR ds:[esi]
  403702:	retf   
  403703:	aam    0xbf
  403705:	addr16 xchg ecx,eax
  403707:	mov    edi,0xab1e1e94
  40370c:	lea    edi,[eax-0x6bf7ec9]
  403712:	imul   bx,WORD PTR [ecx+0x3a],0x8eb2
  403718:	jb     0x403795
  40371a:	lds    edx,FWORD PTR [ebx-0x2c256395]
  403720:	and    al,0xd5
  403722:	jecxz  0x4036f0
  403724:	cmp    eax,0x16aa091e
  403729:	push   edi
  40372a:	push   es
  40372b:	mov    edi,0x275a400f
  403730:	mov    BYTE PTR [ecx],al
  403732:	add    ch,bh
  403734:	inc    ecx
  403735:	xchg   ecx,eax
  403736:	mov    dl,0xcf
  403738:	push   esp
  403739:	mov    edx,0xa34c0e73
  40373e:	add    BYTE PTR [edx-0x1c1982a5],ah
  403744:	jmp    0xd44b:0x3e10ff65
  40374b:	inc    ecx
  40374c:	lea    edx,[ebx-0x33]
  40374f:	cmp    eax,0xc958e23
  403754:	xchg   esp,eax
  403755:	xchg   esp,eax
  403756:	mov    edi,cs
  403758:	inc    esp
  403759:	mov    eax,0xa2f57ea7
  40375e:	mov    esi,0xf1e2a039
  403763:	or     BYTE PTR [esi-0x3cb41707],dh
  403769:	aam    0xc3
  40376b:	mov    dl,ah
  40376d:	iret   
  40376e:	ficom  DWORD PTR ds:0xb45d57d8
  403774:	out    0x4b,al
  403776:	inc    esp
  403777:	xchg   DWORD PTR [edx-0x76b9909f],edi
  40377d:	jp     0x4037f5
  40377f:	icebp  
  403780:	sbb    bh,BYTE PTR [ebx]
  403782:	cmp    eax,edx
  403784:	sub    esp,DWORD PTR [eax]
  403786:	and    BYTE PTR [ebx-0xdf4f383],al
  40378c:	dec    ebp
  40378d:	push   ss
  40378e:	adc    cl,BYTE PTR [edi+ecx*2+0x7ebddf4c]
  403795:	push   esi
  403796:	mov    BYTE PTR [eax],0xfe
  403799:	xor    DWORD PTR [edx-0x13],edi
  40379c:	das    
  40379d:	and    DWORD PTR [ecx-0xc],esp
  4037a0:	or     BYTE PTR [edx-0x7c4644e0],dl
  4037a6:	cmp    esp,DWORD PTR [edx-0x76ea0b86]
  4037ac:	cmp    esp,DWORD PTR [esi-0x3d1b6ff3]
  4037b2:	xchg   ebp,eax
  4037b3:	pop    ss
  4037b4:	and    eax,0x860e8ed4
  4037b9:	adc    ch,al
  4037bb:	test   eax,0xb2b953ab
  4037c0:	mov    cl,BYTE PTR [eax+0x135f337]
  4037c6:	inc    esi
  4037c7:	call   0xc5556df8
  4037cc:	inc    edi
  4037cd:	outs   dx,DWORD PTR ds:[esi]
  4037ce:	out    0xdd,eax
  4037d0:	dec    esi
  4037d1:	outs   dx,BYTE PTR ds:[esi]
  4037d2:	pop    eax
  4037d3:	jns    0x40376b
  4037d5:	daa    
  4037d6:	dec    eax
  4037d7:	bound  ebp,QWORD PTR [edi-0x3bb10510]
  4037dd:	test   eax,0x6aad542a
  4037e2:	xchg   DWORD PTR ds:0xe752b1a,edx
  4037e8:	or     ebp,esp
  4037ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037eb:	and    ebp,DWORD PTR [eax]
  4037ed:	lods   eax,DWORD PTR ds:[esi]
  4037ee:	xlat   BYTE PTR ds:[ebx]
  4037ef:	cmp    BYTE PTR [ecx],ch
  4037f1:	jbe    0x4037b5
  4037f3:	mov    al,ds:0xbbbdaf9e
  4037f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037f9:	call   0x7c40ce5e
  4037fe:	popa   
  4037ff:	nop
  403800:	lea    esi,[ebp+0x72]
  403803:	or     esp,ecx
  403805:	loop   0x4037ba
  403807:	(bad)  
  403808:	(bad)  
  403809:	ret    
  40380a:	in     al,0x2b
  40380c:	cli    
  40380d:	mov    al,ds:0xb1e15d25
  403812:	mov    edi,0x75dcbb6a
  403817:	and    eax,0x940e5a0
  40381c:	(bad)  
  40381d:	(bad)  
  40381e:	not    DWORD PTR [edi]
  403820:	xchg   esi,eax
  403821:	neg    edx
  403823:	xchg   ecx,eax
  403824:	xlat   BYTE PTR ds:[ebx]
  403825:	loopne 0x4037c0
  403827:	data16 int3 
  403829:	rcr    DWORD PTR [esp+esi*4-0x1f],0xe2
  40382e:	sbb    eax,ebp
  403830:	cli    
  403831:	repz inc ecx
  403833:	dec    edi
  403834:	(bad)  [esp+esi*8-0xb]
  403838:	test   eax,0x78bced5f
  40383d:	cmp    al,BYTE PTR [edx]
  40383f:	xchg   DWORD PTR fs:[ecx],edi
  403842:	sbb    ebp,DWORD PTR [ebx]
  403844:	push   ss
  403845:	nop
  403846:	pop    eax
  403847:	jmp    0x6e33:0x995192e6
  40384e:	es pop eax
  403850:	inc    esp
  403851:	gs aas 
  403853:	inc    esp
  403854:	mov    cs:0xa05d8ce6,eax
  40385a:	std    
  40385b:	lds    ecx,FWORD PTR [edi*4+0xfc0f18]
  403862:	mov    ecx,0x1771400f
  403867:	inc    edx
  403868:	and    DWORD PTR [edx-0x303da4f4],0xc1033429
  403872:	sub    ch,BYTE PTR ds:0xadaaa49c
  403878:	inc    ebp
  403879:	rcr    DWORD PTR [ecx+0x74870eb6],cl
  40387f:	fbstp  TBYTE PTR [edi-0x6737808b]
  403885:	out    0xc9,eax
  403887:	mov    DWORD PTR [ecx+0x18],ebx
  40388a:	aad    0x92
  40388c:	or     cl,BYTE PTR [edx-0x50]
  40388f:	jnp    0x40385c
  403891:	cmp    ah,BYTE PTR [ebx+0x613c1564]
  403897:	das    
  403898:	pop    esp
  403899:	dec    ebx
  40389a:	bound  edi,QWORD PTR [eax]
  40389c:	xchg   edi,eax
  40389d:	push   ds
  40389e:	jg     0x4038fd
  4038a0:	fsubp  st(5),st
  4038a2:	ja     0x4038ea
  4038a4:	icebp  
  4038a5:	jle    0x4038fc
  4038a7:	or     esi,DWORD PTR [eax]
  4038a9:	nop
  4038aa:	dec    esi
  4038ab:	adc    al,0xa
  4038ad:	jns    0x403896
  4038af:	in     eax,0x72
  4038b1:	mov    eax,0xe76a0134
  4038b6:	sbb    ebp,DWORD PTR [ecx-0x13]
  4038b9:	sahf   
  4038ba:	sar    BYTE PTR [ebp-0xc],0x55
  4038be:	cmc    
  4038bf:	xchg   edx,eax
  4038c0:	fisttp WORD PTR [edx+eiz*2]
  4038c3:	mov    eax,esi
  4038c5:	ret    
  4038c6:	add    BYTE PTR [ecx+ecx*8-0x2e707d77],bh
  4038cd:	nop
  4038ce:	xor    DWORD PTR [esi-0x42],ecx
  4038d1:	mov    ebx,0xa2a760f0
  4038d6:	xor    al,BYTE PTR [edx]
  4038d8:	les    esi,FWORD PTR [ecx]
  4038da:	repz sub al,0xda
  4038dd:	sub    BYTE PTR [eax+0x6103b5d0],ah
  4038e3:	mov    ebx,0xe1361ab0
  4038e8:	outs   dx,DWORD PTR ds:[esi]
  4038e9:	push   ebp
  4038ea:	out    dx,eax
  4038eb:	test   eax,0x87a44c76
  4038f0:	cdq    
  4038f1:	addr16 pop ebp
  4038f3:	xchg   esp,eax
  4038f4:	test   BYTE PTR [esi-0x56],bh
  4038f7:	jnp    0x403915
  4038f9:	stc    
  4038fa:	jmp    0x40395e
  4038fc:	add    ah,al
  4038fe:	sub    BYTE PTR [edx-0x3a963512],bl
  403904:	not    ecx
  403906:	scas   al,BYTE PTR es:[edi]
  403907:	pop    esi
  403908:	cmp    BYTE PTR [ebp-0x7bd31019],bl
  40390e:	sub    al,0xb9
  403910:	inc    edx
  403911:	scas   eax,DWORD PTR es:[edi]
  403912:	gs (bad) 
  403914:	pop    edx
  403915:	mov    dh,0x3
  403917:	adc    BYTE PTR [ecx],al
  403919:	jnp    0x4038dd
  40391b:	call   0x48f6:0xe271621c
  403922:	xor    BYTE PTR ds:0xe9004fee,ch
  403928:	adc    DWORD PTR [edi],esp
  40392a:	adc    eax,0x3c011800
  40392f:	or     al,0x5b
  403931:	outs   dx,DWORD PTR ds:[esi]
  403932:	adc    BYTE PTR [edi],ah
  403934:	jp     0x403958
  403936:	or     bh,BYTE PTR [esi]
  403938:	fld    QWORD PTR [edx-0x6e]
  40393b:	mov    ecx,0xa088739c
  403940:	dec    edi
  403941:	and    eax,0x160e8ba4
  403946:	mov    edi,0xfe87e192
  40394b:	fst    QWORD PTR [eax+0x53c4e5ba]
  403951:	jmp    0xf6d3:0xd912efc7
  403958:	idiv   dh
  40395a:	or     al,0xae
  40395c:	aaa    
  40395d:	rcl    BYTE PTR [esi],1
  40395f:	mov    bh,0x84
  403961:	cmp    ebx,DWORD PTR fs:[ebp+eax*8+0x1a8520b1]
  403969:	cmp    DWORD PTR [ecx-0x36],esp
  40396c:	retf   
  40396d:	or     DWORD PTR [edx-0x2d],edi
  403970:	mov    BYTE PTR [edi+0x57],bl
  403973:	clc    
  403974:	sub    DWORD PTR [eax+0x4f],esi
  403977:	loope  0x403947
  403979:	jnp    0x403952
  40397b:	cmovnp cx,di
  40397f:	jg     0x4039bd
  403981:	push   ss
  403982:	loop   0x4039d8
  403984:	jge    0x4039ab
  403986:	stc    
  403987:	dec    ebp
  403988:	shl    BYTE PTR [esi-0x77fcfd48],cl
  40398e:	mov    ds:0xd140001b,eax
  403993:	mov    ?,WORD PTR [eax]
  403995:	and    esi,0xf3a72994
  40399b:	into   
  40399c:	in     al,0x66
  40399e:	mov    ds:0x9186fdd4,al
  4039a3:	(bad)
  4039a6:	shl    DWORD PTR [eax+ebp*8-0x56d9f82f],1
  4039ad:	push   es
  4039ae:	jg     0x403a06
  4039b0:	mov    dl,0xf
  4039b2:	mov    dh,0x0
  4039b4:	lahf   
  4039b5:	xor    al,0xed
  4039b7:	lock sub DWORD PTR ds:0xaa1be2dc,0xffffff9a
  4039bf:	adc    eax,DWORD PTR [edi]
  4039c1:	fwait
  4039c2:	pop    ecx
  4039c3:	dec    esp
  4039c4:	sub    ch,BYTE PTR [eax+0x18]
  4039c7:	cmp    eax,0xaeff8931
  4039cc:	jo     0x403a1c
  4039ce:	mov    dh,0xde
  4039d0:	imul   edx,DWORD PTR [edi+0x7d],0xffffff88
  4039d4:	inc    esi
  4039d5:	sub    al,0x34
  4039d7:	js     0x403a36
  4039d9:	and    eax,0xcdfadd35
  4039de:	ins    BYTE PTR es:[edi],dx
  4039df:	scas   eax,DWORD PTR es:[edi]
  4039e0:	loope  0x403996
  4039e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039e3:	jae    0x4039b1
  4039e5:	(bad)  
  4039e6:	push   ds
  4039e7:	adc    bh,0x66
  4039ea:	xor    DWORD PTR [eax],ebx
  4039ec:	xchg   esi,eax
  4039ed:	sub    DWORD PTR [eax-0x18],esi
  4039f0:	mov    WORD PTR [eax],?
  4039f2:	mov    ds:0xb00a03e,eax
  4039f7:	loop   0x403a47
  4039f9:	mov    ebx,0x236aad0a
  4039fe:	test   DWORD PTR [ebp+eiz*1+0x38],esp
  403a02:	ins    BYTE PTR es:[edi],dx
  403a03:	das    
  403a04:	cmc    
  403a05:	adc    al,0x97
  403a07:	out    0x3,al
  403a09:	push   cs
  403a0a:	outs   dx,BYTE PTR ds:[esi]
  403a0b:	test   eax,0x68a14f91
  403a10:	push   sp
  403a12:	mov    al,0x2b
  403a14:	mov    al,0x79
  403a16:	shr    edx,cl
  403a18:	shl    BYTE PTR [edx-0x2e],0x42
  403a1c:	or     al,0xc9
  403a1e:	pop    esi
  403a1f:	ret    
  403a20:	mov    ch,0xb7
  403a22:	fidivr DWORD PTR gs:[esi+0x67]
  403a26:	js     0x4039d9
  403a28:	daa    
  403a29:	xchg   esi,eax
  403a2a:	fwait
  403a2b:	test   al,0xe8
  403a2d:	add    edx,DWORD PTR [edx+0x67]
  403a30:	test   eax,0x5a7e40f4
  403a35:	and    ah,BYTE PTR [ebp+edx*4+0x1b]
  403a39:	push   ebx
  403a3a:	pop    edi
  403a3b:	mov    esp,?
  403a3d:	dec    esi
  403a3e:	out    0xa,eax
  403a40:	cmp    eax,0x7611cc3e
  403a45:	lock mov al,0xf8
  403a48:	mov    esi,0xcfdfd21f
  403a4d:	mov    DWORD PTR [ebx],ecx
  403a4f:	das    
  403a50:	adc    DWORD PTR [ebx+0x18],edi
  403a53:	ss push edx
  403a55:	stos   DWORD PTR es:[edi],eax
  403a56:	in     eax,dx
  403a57:	pop    esp
  403a58:	xchg   ebx,eax
  403a59:	fadd   QWORD PTR [eax]
  403a5b:	out    0x43,al
  403a5d:	lahf   
  403a5e:	mov    dl,0x18
  403a60:	sbb    al,0x46
  403a62:	shr    DWORD PTR [ebx],0x5
  403a65:	or     eax,0xb3ee3e95
  403a6a:	arpl   bp,dx
  403a6c:	cmc    
  403a6d:	call   0x7f06:0x5a3897f5
  403a74:	pop    ds
  403a75:	or     DWORD PTR [eax-0x5e],ebx
  403a78:	dec    edx
  403a79:	enter  0xa128,0x51
  403a7d:	inc    edi
  403a7e:	cmp    al,0x21
  403a80:	aad    0x8e
  403a82:	dec    ebx
  403a83:	adc    cl,ah
  403a85:	lds    ebx,FWORD PTR [edx]
  403a87:	mul    DWORD PTR [esi-0x41f015f4]
  403a8d:	inc    ebx
  403a8e:	jg     0x403add
  403a90:	jno    0x403a14
  403a92:	nop
  403a93:	push   esi
  403a94:	push   0x7e4bcb0a
  403a99:	retf   0xf10a
  403a9c:	shl    DWORD PTR fs:[edx+eiz*8-0x42],cl
  403aa1:	push   ds
  403aa2:	sbb    eax,0xd607a435
  403aa7:	add    al,0xc9
  403aa9:	sub    al,0x8f
  403aab:	ja     0x403a7e
  403aad:	xor    eax,0x7a8be140
  403ab2:	add    DWORD PTR [esi+0x43b26387],ecx
  403ab8:	fs dec eax
  403aba:	jae    0x403a54
  403abc:	jge    0x403b0f
  403abe:	pushf  
  403abf:	add    BYTE PTR [edi+0x2cd5d5e5],ch
  403ac5:	cld    
  403ac6:	into   
  403ac7:	push   ds
  403ac8:	jge    0x403ad9
  403aca:	in     al,0x57
  403acc:	ret    0xfd03
  403acf:	js     0x403af9
  403ad1:	dec    ecx
  403ad2:	mov    dl,0xb9
  403ad4:	adc    edx,DWORD PTR [ecx-0x55]
  403ad7:	cli    
  403ad8:	mov    ecx,0xe13b803b
  403add:	es cdq 
  403adf:	jmp    0xd64a7d69
  403ae4:	pop    edi
  403ae5:	or     BYTE PTR [ebx],0x7
  403ae8:	scas   al,BYTE PTR es:[edi]
  403ae9:	(bad)  
  403aea:	or     DWORD PTR [eax],esi
  403aec:	add    BYTE PTR ds:0x49eaa508,al
  403af2:	or     eax,0xc874492
  403af7:	cmp    eax,esi
  403af9:	int    0xe
  403afb:	fs js  0x403b09
  403afe:	pop    fs
  403b00:	mov    ch,0x4f
  403b02:	add    al,0x6e
  403b04:	dec    edi
  403b05:	xchg   edx,eax
  403b06:	add    eax,0x7d3013f
  403b0b:	dec    eax
  403b0c:	repz adc al,0x6
  403b0f:	add    BYTE PTR [ebx-0x48],cl
  403b12:	adc    BYTE PTR [ecx],cl
  403b14:	or     al,0xd2
  403b16:	ror    BYTE PTR [eax],cl
  403b18:	and    eax,0x320a976c
  403b1d:	push   es
  403b1e:	push   esi
  403b1f:	or     edi,edi
  403b21:	loope  0x403b4e
  403b23:	sbb    al,0x0
  403b25:	call   0x115e29b1
  403b2a:	ss test al,0x1f
  403b2d:	(bad)  
  403b2e:	pop    ebx
  403b2f:	push   0x1e
  403b31:	push   ebx
  403b32:	dec    ecx
  403b33:	and    eax,0xe71f641b
  403b38:	sbb    bl,BYTE PTR [ebp-0x25e75e63]
  403b3e:	repz bound ebx,QWORD PTR [ecx]
  403b41:	pop    ss
  403b42:	mov    cl,0x3f
  403b44:	adc    dh,BYTE PTR [eax-0x6ec022a]
  403b4a:	fs mov edx,0x790b3e11
  403b50:	adc    bl,bl
  403b52:	sbb    BYTE PTR [esi],dh
  403b54:	adc    eax,0x14f7767c
  403b59:	jne    0x403b27
  403b5b:	mov    dl,0x16
  403b5d:	sub    BYTE PTR [edx+0x50f1770],0x47
  403b64:	cmp    al,bl
  403b66:	push   0xffffff84
  403b68:	cmp    DWORD PTR [ecx],esp
  403b6a:	rol    ebx,1
  403b6c:	cmp    edx,esi
  403b6e:	mov    ebp,0xa8433a01
  403b73:	dec    esi
  403b74:	aas    
  403b75:	je     0x403b39
  403b77:	mov    WORD PTR [esi],?
  403b79:	lea    edi,[ebp+esi*4+0x3c]
  403b7d:	mov    cl,BYTE PTR [esi]
  403b7f:	or     BYTE PTR ds:0x36544f47,bh
  403b85:	inc    eax
  403b86:	cmp    DWORD PTR [esi+0x59860037],edx
  403b8c:	retf   
  403b8d:	fidivr DWORD PTR [ebx+0x6a]
  403b90:	pusha  
  403b91:	sbb    BYTE PTR [edx-0x19],dh
  403b94:	jne    0x403bed
  403b96:	ja     0x403b94
  403b98:	fist   DWORD PTR [ebp-0x2cddfa8a]
  403b9e:	push   esp
  403b9f:	inc    esi
  403ba0:	or     BYTE PTR [ecx],dl
  403ba2:	push   ebp
  403ba3:	sti    
  403ba4:	stos   DWORD PTR es:[edi],eax
  403ba5:	imul   ebp,DWORD PTR [edx+0x0],0xffffff86
  403ba9:	test   eax,0xeef85163
  403bae:	test   eax,0xa02d5222
  403bb3:	scas   eax,DWORD PTR es:[edi]
  403bb4:	inc    esp
  403bb5:	bound  esp,QWORD PTR [ebp-0x5b60113c]
  403bbb:	lea    edx,[eax-0x4571591a]
  403bc1:	and    al,0xa7
  403bc3:	push   ebx
  403bc4:	jp     0x403c3e
  403bc6:	pushf  
  403bc7:	js     0x403b9c
  403bc9:	mov    edx,0xfc2e299d
  403bce:	outs   dx,DWORD PTR ds:[esi]
  403bcf:	sbb    al,BYTE PTR [esi+edi*1]
  403bd2:	outs   dx,BYTE PTR ds:[esi]
  403bd3:	mov    bh,0x12
  403bd5:	jno    0x403c3a
  403bd7:	lods   al,BYTE PTR ds:[esi]
  403bd8:	cmp    BYTE PTR [ebx-0xa39eaa6],dh
  403bde:	jo     0x403bd6
  403be0:	imul   esi,DWORD PTR [edi],0x69
  403be3:	stos   DWORD PTR es:[edi],eax
  403be4:	sbb    DWORD PTR [edx+0x58a9d016],0x17
  403beb:	add    DWORD PTR [edi+0x1e],edx
  403bee:	add    ch,dh
  403bf0:	repnz cld 
  403bf2:	fcomi  st,st(4)
  403bf4:	pop    edi
  403bf5:	jmp    0xf051:0x4094f992
  403bfc:	jge    0x403bbc
  403bfe:	pop    ss
  403bff:	ficomp DWORD PTR [esi]
  403c01:	xchg   ebp,eax
  403c02:	aad    0xd3
  403c04:	inc    edx
  403c05:	jmp    0x403bde
  403c07:	push   edi
  403c09:	mov    ds:0xf4f9bd71,eax
  403c0e:	or     edx,DWORD PTR [ebx+0x492601f7]
  403c14:	test   BYTE PTR [esi+0x4ffb0630],0x1a
  403c1b:	(bad)  
  403c1c:	cli    
  403c1d:	sub    BYTE PTR [edx+ecx*4-0x4],ah
  403c21:	and    eax,0x52fd40ce
  403c26:	jmp    0xe788:0x406be5cd
  403c2d:	cmp    al,0xbe
  403c2f:	mov    esi,0xfc9409e9
  403c34:	out    0x9e,eax
  403c36:	cmp    DWORD PTR [ebx],0x71a7a7ed
  403c3c:	in     al,dx
  403c3d:	loopne 0x403c94
  403c3f:	xchg   edi,eax
  403c40:	jmp    0x3afa:0xead4fbbd
  403c47:	and    esp,esp
  403c49:	adc    edx,DWORD PTR [ecx]
  403c4b:	pop    ebx
  403c4c:	in     eax,0x44
  403c4e:	outs   dx,DWORD PTR ds:[esi]
  403c4f:	ins    DWORD PTR es:[edi],dx
  403c50:	jecxz  0x403c83
  403c52:	lds    eax,FWORD PTR [eax]
  403c54:	scas   eax,DWORD PTR es:[edi]
  403c55:	loope  0x403bed
  403c57:	shr    al,cl
  403c59:	fidivr WORD PTR [edi+0x78de2278]
  403c5f:	push   es
  403c60:	fs loopne 0x403cb8
  403c63:	sub    al,0xa6
  403c65:	loopne 0x403c29
  403c67:	into   
  403c68:	mov    ecx,0x7364fc09
  403c6d:	or     ebp,DWORD PTR ds:0x1a0bd51b
  403c73:	xor    DWORD PTR [edi],edx
  403c75:	or     eax,0x850268f
  403c7a:	mov    eax,0xa088a0c
  403c7f:	pop    ebx
  403c80:	aam    0x1c
  403c82:	inc    esi
  403c83:	inc    esp
  403c84:	fild   DWORD PTR ds:[edi-0x7f]
  403c88:	repz jle 0x403cd7
  403c8b:	mov    ss,WORD PTR ds:0xcf5f4d41
  403c91:	add    cl,BYTE PTR [edi+0x28]
  403c94:	pop    ecx
  403c95:	ret    0xad4e
  403c98:	cmp    eax,DWORD PTR [edi+0x47cdba4b]
  403c9e:	dec    edx
  403c9f:	add    esp,esp
  403ca1:	or     DWORD PTR [eax-0x34],ecx
  403ca4:	add    esp,ecx
  403ca6:	dec    ecx
  403ca7:	mov    ecx,0x865e715d
  403cac:	xor    DWORD PTR [ebx],0x5f
  403caf:	xlat   BYTE PTR ds:[ebx]
  403cb0:	jns    0x403c9f
  403cb2:	pop    esp
  403cb3:	loopne 0x403c8c
  403cb5:	scas   eax,DWORD PTR es:[edi]
  403cb6:	pop    esp
  403cb7:	jne    0x403cb9
  403cb9:	lds    edi,FWORD PTR [edx+0x59]
  403cbc:	inc    edx
  403cbd:	pop    ebx
  403cbe:	cmp    al,0x58
  403cc0:	or     edx,DWORD PTR [ecx-0x60eba60a]
  403cc6:	mov    eax,0x61cdd15b
  403ccb:	push   eax
  403ccc:	mov    esi,0x6f512233
  403cd1:	jmp    0x7d88fb6
  403cd6:	lahf   
  403cd7:	push   edx
  403cd8:	std    
  403cd9:	adc    al,0x6c
  403cdb:	push   edi
  403cdc:	jmp    0xe761:0x135629ea
  403ce3:	push   ebx
  403ce4:	cmp    al,0xaf
  403ce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ce7:	push   ebp
  403ce8:	imul   esi,DWORD PTR [ebx+0x2d],0x6f5556eb
  403cef:	jmp    0xd9b0:0xe8b14f87
  403cf6:	repz call 0x362de7fc
  403cfc:	out    0x94,al
  403cfe:	fwait
  403cff:	hlt    
  403d00:	out    0x1d,eax
  403d02:	and    dh,BYTE PTR [edx+0x704062e5]
  403d08:	in     al,0xa7
  403d0a:	or     BYTE PTR [edi+ebp*8],ch
  403d0d:	pop    eax
  403d0e:	arpl   cx,bp
  403d10:	out    dx,al
  403d11:	add    ecx,ebx
  403d13:	test   al,0xec
  403d15:	dec    esi
  403d16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d17:	push   0xffffffed
  403d19:	ret    
  403d1a:	mov    al,ds:0x8c00e825
  403d1f:	(bad)  
  403d20:	out    0xe9,eax
  403d22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d23:	je     0x403cc5
  403d25:	jmp    0x403cd1
  403d27:	sbb    ah,BYTE PTR [ebx-0x16]
  403d2a:	outs   dx,DWORD PTR ds:[esi]
  403d2b:	neg    BYTE PTR [eax]
  403d2d:	std    
  403d2e:	pusha  
  403d2f:	nop
  403d30:	(bad)  
  403d32:	jns    0x403d5e
  403d34:	popf   
  403d35:	inc    BYTE PTR [esi+0x44]
  403d38:	pop    edi
  403d39:	(bad)  
  403d3a:	fist   DWORD PTR [edx+0x10]
  403d3d:	cli    
  403d3e:	in     al,0x34
  403d40:	sar    bl,cl
  403d42:	sub    eax,0x52f994b7
  403d47:	jmp    0xabd835a1
  403d4c:	or     dh,bl
  403d4e:	sub    BYTE PTR [ebp+0x6f91f2c8],bh
  403d54:	mov    eax,esi
  403d56:	mov    esi,0x53f14c11
  403d5b:	add    al,0x3
  403d5d:	hlt    
  403d5e:	cld    
  403d5f:	gs shl ch,0xd5
  403d63:	mov    DWORD PTR [edi+0x45b9faf7],0x720f7ff6
  403d6d:	fst    DWORD PTR [eax+0x71]
  403d70:	mov    bl,0xd8
  403d72:	xchg   BYTE PTR [ebp-0x80],bl
  403d75:	cld    
  403d76:	pop    esp
  403d77:	xchg   ebx,eax
  403d78:	scas   al,BYTE PTR es:[edi]
  403d79:	ds dec ebp
  403d7b:	add    BYTE PTR [ecx+esi*2-0x4c6e0eb8],ah
  403d82:	add    BYTE PTR [ecx-0x26],al
  403d85:	call   0x46ff797e
  403d8a:	aaa    
  403d8b:	xor    al,BYTE PTR [ecx*1+0x2b05316b]
  403d92:	test   eax,0xefd1d658
  403d97:	push   edx
  403d98:	jmp    0x403e18
  403d9a:	sub    eax,0x6255685b
  403d9f:	push   esi
  403da0:	jns    0x403d65
  403da2:	mov    al,ds:0xe6398237
  403da7:	xor    eax,0x342417c7
  403dac:	jl     0x403d61
  403dae:	pop    esi
  403daf:	inc    ebx
  403db0:	jge    0x403d37
  403db2:	pushf  
  403db3:	retf   0xe7cd
  403db6:	fld    st(0)
  403db8:	mov    ds:0x2fc91849,al
  403dbd:	pop    ebx
  403dbe:	push   edi
  403dbf:	les    eax,FWORD PTR [eax-0x3]
  403dc2:	xchg   esp,eax
  403dc3:	lds    ecx,FWORD PTR [ecx]
  403dc5:	(bad)  
  403dc6:	rol    edi,cl
  403dc8:	push   cs
  403dc9:	mov    eax,ds:0x6dd3c611
  403dce:	dec    ebp
  403dcf:	mov    ebp,0xcc8fcaf4
  403dd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dd5:	xor    ecx,ecx
  403dd7:	into   
  403dd8:	call   0x43f5:0x37bf0b1f
  403ddf:	mov    edx,0xd3862328
  403de4:	xchg   ecx,eax
  403de5:	fadd   st,st(0)
  403de7:	add    cl,cl
  403de9:	jbe    0x403e61
  403deb:	add    al,al
  403ded:	inc    edx
  403dee:	and    ecx,DWORD PTR [esi-0x47e32c27]
  403df4:	repz ror ch,cl
  403df7:	inc    ecx
  403df8:	lods   eax,DWORD PTR ds:[esi]
  403df9:	sar    dl,1
  403dfb:	jmp    0x403e5b
  403dfd:	shr    DWORD PTR [edi-0xa],1
  403e00:	and    ecx,esp
  403e02:	pop    eax
  403e03:	push   eax
  403e04:	jmp    0xaecf:0xa4aa71cd
  403e0b:	test   BYTE PTR [esi-0x32],ah
  403e0e:	imul   edi,DWORD PTR [edi+0x6924d50a],0xffffffc0
  403e15:	aam    0x75
  403e17:	adc    edi,DWORD PTR [esi-0x2a]
  403e1a:	cmp    BYTE PTR ds:0x2707d72c,0xf3
  403e21:	fnop   
  403e23:	add    BYTE PTR [ecx+0x577aa9db],bl
  403e29:	fldenv [esi-0x2c27ea2c]
  403e2f:	lock inc dh
  403e32:	in     al,dx
  403e33:	push   esi
  403e34:	dec    ebp
  403e35:	(bad)  
  403e36:	mov    ebp,0x8ac48ba4
  403e3b:	mov    al,cl
  403e3d:	les    ebx,FWORD PTR [edi]
  403e3f:	cdq    
  403e40:	push   es
  403e41:	enter  0xaf28,0x44
  403e45:	leave  
  403e46:	popa   
  403e47:	dec    ebp
  403e48:	or     bl,0x3e
  403e4b:	jecxz  0x403e4d
  403e4d:	retf   
  403e4e:	leave  
  403e4f:	jnp    0x403e70
  403e51:	in     al,dx
  403e52:	rcl    BYTE PTR [ebp+eax*1+0x73c5c05e],0x98
  403e5a:	ret    0xd9b2
  403e5d:	rol    dl,cl
  403e5f:	pop    ss
  403e60:	enter  0xbe15,0x40
  403e64:	pop    esi
  403e65:	aaa    
  403e66:	mov    edi,0x4d7df30a
  403e6b:	(bad)  
  403e6c:	fcom   QWORD PTR [edi-0x71]
  403e6f:	mov    WORD PTR [ecx-0x4b],cs
  403e72:	pop    edi
  403e73:	mov    ds:0xa222ff76,eax
  403e78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e79:	jns    0x403e59
  403e7b:	lahf   
  403e7c:	nop
  403e7d:	stos   DWORD PTR es:[edi],eax
  403e7e:	sahf   
  403e7f:	mov    eax,ds:0xa467aa05
  403e84:	xor    dh,BYTE PTR [ecx+ebp*1-0x5b]
  403e88:	fndisi(8087 only) 
  403e8a:	jecxz  0x403e32
  403e8c:	les    edx,FWORD PTR [ebx]
  403e8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e90:	add    DWORD PTR [ebx],eax
  403e92:	jb     0x403e41
  403e94:	push   cs
  403e95:	in     eax,dx
  403e96:	das    
  403e97:	lods   al,BYTE PTR ds:[esi]
  403e98:	(bad)  
  403e9a:	in     eax,dx
  403e9b:	lods   eax,DWORD PTR ds:[esi]
  403e9c:	test   al,0x38
  403e9e:	lods   eax,DWORD PTR ds:[esi]
  403e9f:	scas   eax,DWORD PTR es:[edi]
  403ea0:	sub    eax,0x3aaa6c1a
  403ea5:	les    edi,FWORD PTR [eax]
  403ea7:	stos   DWORD PTR es:[edi],eax
  403ea8:	sbb    esi,0xfffffff6
  403eab:	test   al,0x4c
  403ead:	add    BYTE PTR [ebp+0x540039a8],dh
  403eb3:	jle    0x403e74
  403eb5:	push   es
  403eb6:	mov    ds:0x5857be3c,al
  403ebb:	add    bh,BYTE PTR [eax+eiz*2-0xa423f42]
  403ec2:	int3   
  403ec3:	test   DWORD PTR [eax-0x46bca53e],edi
  403ec9:	mov    eax,DWORD PTR [eax-0x596b44f7]
  403ecf:	(bad)  
  403ed0:	mov    edx,0xb18ce451
  403ed5:	ds push edx
  403ed7:	dec    ebp
  403ed8:	mov    al,0xef
  403eda:	jmp    0x403eeb
  403edc:	mov    dl,0x18
  403ede:	push   cs
  403edf:	shl    BYTE PTR [ebx-0x2b37d500],cl
  403ee5:	mov    esp,0xbd169e2c
  403eea:	cmc    
  403eeb:	or     al,0x50
  403eed:	mov    edi,0xbe9d72d2
  403ef2:	lahf   
  403ef3:	aas    
  403ef4:	or     al,BYTE PTR [eax]
  403ef6:	mov    dl,BYTE PTR [ebp-0x4a]
  403ef9:	mov    eax,0xaa0386e4
  403efe:	icebp  
  403eff:	fnstsw WORD PTR [esi+0x68c58812]
  403f05:	(bad)  
  403f06:	sbb    eax,0xf337d4af
  403f0b:	or     al,0x61
  403f0d:	and    eax,0x9ddc7696
  403f12:	mov    al,0x66
  403f14:	mov    ecx,0xfdb500c5
  403f19:	add    DWORD PTR [ebp+0x4b],edi
  403f1c:	lahf   
  403f1d:	mov    bh,0x6f
  403f1f:	push   ds
  403f20:	test   BYTE PTR [edx],0xd7
  403f23:	pop    es
  403f24:	in     eax,dx
  403f25:	fisttp DWORD PTR [edx-0x7e]
  403f28:	xchg   esi,eax
  403f29:	pusha  
  403f2a:	repnz sbb al,0x26
  403f2d:	aad    0xe0
  403f2f:	stc    
  403f30:	dec    esi
  403f31:	imul   ebx,DWORD PTR [eax+0x0],0xa5501305
  403f38:	outs   dx,BYTE PTR ds:[esi]
  403f39:	scas   al,BYTE PTR es:[edi]
  403f3a:	call   0xfa5b0d3a
  403f3f:	push   cs
  403f40:	mov    bh,0xa6
  403f42:	inc    edx
  403f43:	mov    bh,0x7e
  403f45:	jno    0x403f26
  403f47:	push   edx
  403f48:	adc    eax,0x472c67cd
  403f4d:	js     0x403fc4
  403f4f:	leave  
  403f50:	sbb    eax,0x2d2fcdc4
  403f55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f56:	xchg   ebp,eax
  403f57:	mov    edx,0x862d1b56
  403f5c:	nop
  403f5d:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f5f:	jno    0x403f44
  403f61:	fcomp  DWORD PTR [eax]
  403f63:	add    DWORD PTR [esi+eiz*4-0x31],eax
  403f67:	jl     0x403f90
  403f69:	(bad)  
  403f6a:	jae    0x403f50
  403f6c:	mov    esp,0xa1d6c5e9
  403f71:	ss jp  0x403ff2
  403f74:	pop    ebx
  403f75:	outs   dx,BYTE PTR ds:[esi]
  403f76:	xor    ah,BYTE PTR [esi]
  403f78:	add    eax,0x9e008ec6
  403f7d:	push   cs
  403f7e:	push   ss
  403f7f:	cmp    edi,DWORD PTR [ebx+ebp*4+0x9]
  403f83:	xchg   DWORD PTR [ebx+edx*2],esi
  403f86:	test   BYTE PTR [edi-0x4f],0x5f
  403f8a:	pop    esi
  403f8b:	in     al,dx
  403f8c:	icebp  
  403f8d:	mov    ebp,0xe90b59b9
  403f92:	test   ebp,esp
  403f94:	mov    ebp,DWORD PTR [edx]
  403f96:	jbe    0x403f1e
  403f98:	stos   DWORD PTR es:[edi],eax
  403f99:	xlat   BYTE PTR ds:[ebx]
  403f9a:	test   eax,0x4eb65b3a
  403f9f:	pop    DWORD PTR [ecx+0x41]
  403fa2:	out    0x32,al
  403fa4:	mov    cl,0xe1
  403fa6:	sbb    ah,ah
  403fa8:	sub    al,0xfd
  403faa:	and    eax,0xd166b458
  403faf:	in     eax,dx
  403fb0:	mov    BYTE PTR [ebx-0x4f1ae82],0xb0
  403fb7:	sub    esi,esi
  403fb9:	daa    
  403fba:	sahf   
  403fbb:	xchg   edi,eax
  403fbc:	dec    esi
  403fbd:	test   ecx,edi
  403fbf:	and    DWORD PTR [eax+edx*8+0x46],ecx
  403fc3:	sahf   
  403fc4:	in     al,0x71
  403fc6:	sub    DWORD PTR [ecx+0x61],ecx
  403fc9:	or     al,0x1
  403fcb:	cmc    
  403fcc:	shl    esi,0x55
  403fcf:	inc    eax
  403fd0:	mov    ebx,0x5bfcc993
  403fd5:	inc    edx
  403fd6:	cmp    eax,0x183821d4
  403fdb:	jnp    0x404042
  403fdd:	mov    edi,0x18000ca6
  403fe2:	rol    BYTE PTR [ebx-0x15d6a3cd],cl
  403fe8:	dec    edx
  403fe9:	mov    ds:0x46e437ac,eax
  403fee:	inc    esp
  403fef:	push   ecx
  403ff0:	sbb    DWORD PTR [edx+0x3e9cbc52],0xffffff9a
  403ff7:	out    dx,al
  403ff8:	dec    ebx
  403ff9:	call   0x5525:0x21f34bcd
  404000:	xchg   esp,eax
  404001:	xchg   ebx,eax
  404002:	xor    esi,DWORD PTR [eax+0x19bb27bb]
  404008:	ret    
  404009:	fcom   DWORD PTR [esi-0x1c]
  40400c:	pop    ebx
  40400d:	dec    esp
  40400e:	sahf   
  40400f:	or     BYTE PTR [ebx],0xd1
  404012:	mov    al,0x6f
  404014:	and    al,0x45
  404016:	dec    eax
  404017:	xor    DWORD PTR [esi+eiz*8],esi
  40401a:	setl   BYTE PTR [ebx]
  40401d:	call   0x775:0xdf6bba68
  404024:	rcl    DWORD PTR [ebx+0x44ab65fe],cl
  40402a:	xchg   ebx,eax
  40402b:	inc    ebx
  40402c:	test   BYTE PTR [eax+0x3ce2ecdb],bl
  404032:	in     eax,dx
  404033:	(bad)  
  404034:	cmp    edx,DWORD PTR [ecx-0x6cfcbe7b]
  40403a:	jge    0x404068
  40403c:	sbb    al,0x37
  40403e:	cmc    
  40403f:	leave  
  404040:	retf   0xe38a
  404043:	xchg   esi,eax
  404044:	arpl   WORD PTR [eax],ax
  404046:	cs mov esi,esi
  404049:	mov    esi,DWORD PTR [ecx+0x6]
  40404c:	push   ebx
  40404d:	mov    bl,0xb5
  40404f:	ins    DWORD PTR es:[edi],dx
  404050:	or     dh,BYTE PTR [edi+0x35]
  404053:	call   0x8b0d133b
  404058:	pop    esp
  404059:	xor    al,0xad
  40405b:	test   eax,0x47421104
  404060:	mov    esp,0xaeb1e4af
  404065:	mov    ch,BYTE PTR ds:0x15e3163e
  40406b:	lea    ecx,[ebx+0x32e8bd3e]
  404071:	pop    eax
  404072:	pop    ebp
  404073:	xchg   esp,eax
  404074:	and    DWORD PTR [ebp-0x15671f8c],esi
  40407a:	cmp    al,0x29
  40407c:	xor    DWORD PTR [edi],eax
  40407e:	adc    cl,ch
  404080:	mov    DWORD PTR [ecx+0x74],esp
  404083:	and    DWORD PTR [ebx+0x23d3bd7c],ebx
  404089:	sbb    eax,0xb8be06aa
  40408e:	mov    WORD PTR [edx+0x6],gs
  404091:	xchg   esi,eax
  404092:	lods   eax,DWORD PTR ds:[esi]
  404093:	std    
  404094:	adc    esi,DWORD PTR [ebx]
  404096:	inc    esp
  404097:	jb     0x404045
  404099:	push   ebp
  40409a:	push   esp
  40409b:	aad    0xf4
  40409d:	jo     0x40404c
  40409f:	and    BYTE PTR [esi+ecx*8-0x74],cl
  4040a3:	retf   
  4040a4:	pop    esi
  4040a5:	jmp    0x40411c
  4040a7:	daa    
  4040a8:	out    0x82,al
  4040aa:	add    BYTE PTR [ebp+0x72],bl
  4040ad:	jnp    0x4040ce
  4040af:	and    al,0xfc
  4040b1:	ret    0x5f9
  4040b4:	push   0xffffffd1
  4040b6:	xchg   esp,eax
  4040b7:	fadd   QWORD PTR ds:0x2f658569
  4040bd:	popa   
  4040be:	and    ah,cl
  4040c0:	ret    
  4040c1:	fsin   
  4040c3:	lea    edi,[eax]
  4040c5:	retf   
  4040c6:	fwait
  4040c7:	test   BYTE PTR [ebx+esi*2+0x566c9400],bh
  4040ce:	in     al,0x49
  4040d0:	adc    ebp,ebx
  4040d2:	pop    esp
  4040d3:	pop    ds
  4040d4:	mov    ch,0x5e
  4040d6:	dec    esi
  4040d7:	ret    0xe2bb
  4040da:	neg    BYTE PTR [esi+ebp*8-0x80]
  4040de:	scas   al,BYTE PTR es:[edi]
  4040df:	mov    cl,0xa2
  4040e1:	cmp    eax,0x8806d716
  4040e6:	add    al,0x1a
  4040e8:	pop    ecx
  4040e9:	aaa    
  4040ea:	mov    esp,0x21e35193
  4040ef:	outs   dx,BYTE PTR ds:[esi]
  4040f0:	push   ds
  4040f1:	pop    edi
  4040f2:	cdq    
  4040f3:	or     BYTE PTR [edx-0x91a7416],cl
  4040f9:	push   ebp
  4040fa:	xor    esp,DWORD PTR [ecx+ebp*8+0x52]
  4040fe:	in     eax,dx
  4040ff:	mov    ecx,0xcf55ef93
  404104:	xor    al,0x5a
  404106:	inc    edi
  404107:	xor    bh,BYTE PTR [ebx]
  404109:	out    0xff,al
  40410b:	jnp    0x404170
  40410d:	xor    BYTE PTR [edx+0x0],ah
  404110:	push   esi
  404111:	stc    
  404112:	mov    edx,ds
  404114:	add    bl,cl
  404116:	cmp    al,cl
  404118:	ffree  st(4)
  40411a:	test   BYTE PTR [eax-0x7d],dh
  40411d:	aam    0xe7
  40411f:	sub    BYTE PTR [esi],bl
  404121:	fwait
  404122:	pop    ebx
  404123:	nop
  404124:	clc    
  404125:	or     dh,ch
  404127:	adc    BYTE PTR [ebp-0x53c5a28d],0x6b
  40412e:	test   BYTE PTR [edi+0x1f3924c1],ah
  404134:	daa    
  404135:	test   BYTE PTR [ebp+ecx*1-0x4ad02736],cl
  40413c:	push   ebx
  40413d:	mov    ds:0xbcaebd4a,eax
  404142:	test   BYTE PTR ds:0x48d08886,0x91
  404149:	mov    ds:0x6c31f54b,eax
  40414e:	xor    esp,DWORD PTR [edx]
  404150:	xchg   esp,eax
  404151:	pop    ss
  404152:	sbb    DWORD PTR [esi+0x2b7af0fc],ebx
  404158:	out    dx,al
  404159:	jge    0x40411b
  40415b:	xchg   edi,eax
  40415c:	data16 xor al,0xb1
  40415f:	hlt    
  404160:	ds aas 
  404162:	push   0x898c648
  404167:	std    
  404168:	aam    0xc5
  40416a:	and    eax,DWORD PTR [ecx+0x2c]
  40416d:	gs pop ebx
  40416f:	xchg   esi,eax
  404170:	xchg   ecx,eax
  404171:	add    ecx,esp
  404173:	sub    DWORD PTR [eax],eax
  404175:	inc    ecx
  404176:	adc    BYTE PTR [ebx-0x4754d461],dl
  40417c:	and    ebp,DWORD PTR [ebx+0x5f]
  40417f:	add    BYTE PTR [ebx-0x35],ch
  404182:	cmp    edi,DWORD PTR [eax]
  404184:	xlat   BYTE PTR ds:[ebx]
  404185:	jnp    0x40416d
  404187:	xlat   BYTE PTR ds:[ebx]
  404188:	bound  esp,QWORD PTR [ecx-0x3f]
  40418b:	jae    0x40416b
  40418d:	ror    DWORD PTR [ecx-0x78],0x9
  404191:	inc    esp
  404192:	mov    ch,0x90
  404194:	mov    ch,0xcc
  404196:	rol    BYTE PTR [ebx+0x0],cl
  404199:	ficomp WORD PTR [edi]
  40419b:	call   0xf852985b
  4041a0:	fimul  WORD PTR [esi]
  4041a2:	fst    QWORD PTR [edx+0x63]
  4041a5:	jbe    0x404221
  4041a7:	mov    al,ds:0x9b6764d6
  4041ac:	push   0xfffffffc
  4041ae:	(bad)  
  4041af:	arpl   WORD PTR [ebp+0x1c82381],di
  4041b5:	shr    DWORD PTR [ebp+0x2b],1
  4041b8:	mov    ah,0xdb
  4041ba:	enter  0x7f0,0x9b
  4041be:	inc    edx
  4041bf:	mov    DWORD PTR [ecx+0x74],eax
  4041c2:	dec    edi
  4041c3:	adc    al,0xda
  4041c5:	ret    
  4041c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041c7:	repnz mov DWORD PTR [ebp-0x4b],ebp
  4041cb:	lahf   
  4041cc:	mov    ds:0xca3e3dc9,al
  4041d1:	jbe    0x4041a3
  4041d3:	pop    ebx
  4041d4:	jno    0x4041f8
  4041d6:	sbb    DWORD PTR [ebp+0x2a6f0012],esp
  4041dc:	sar    BYTE PTR [ecx],0xeb
  4041df:	ret    0x2656
  4041e2:	ror    BYTE PTR [edx-0x1dd3fb0d],0xdc
  4041e9:	pop    esi
  4041ea:	mov    ecx,0x15bd77f0
  4041ef:	js     0x4041f2
  4041f1:	mov    ch,0xe2
  4041f3:	adc    eax,0x5d6e962c
  4041f8:	mov    ch,ch
  4041fa:	fisubr DWORD PTR [edi-0x69]
  4041fd:	dec    esi
  4041fe:	xchg   edi,eax
  4041ff:	pop    es
  404200:	in     eax,0x9d
  404202:	retf   
  404203:	hlt    
  404204:	(bad)  
  404205:	jl     0x40427e
  404207:	jl     0x404277
  404209:	out    0xc5,al
  40420b:	mov    cs,WORD PTR [ebx+0x11e65e45]
  404211:	sub    eax,0xdbf6ba9
  404216:	cmc    
  404217:	add    bl,BYTE PTR [ecx+0x2411a075]
  40421d:	(bad)  
  40421e:	sbb    al,0x59
  404220:	pop    edx
  404221:	(bad)  
  404222:	aas    
  404223:	mov    cl,0x67
  404225:	gs retf 
  404227:	cmp    ecx,eax
  404229:	std    
  40422a:	sbb    DWORD PTR [ebx-0x14],ecx
  40422d:	sbb    al,0xd2
  40422f:	mov    ds:0x2dfd558d,eax
  404234:	sub    dh,dh
  404236:	push   0xfafc0ac6
  40423b:	iret   
  40423c:	pushf  
  40423d:	cdq    
  40423e:	add    BYTE PTR [ebx],dh
  404240:	sbb    al,0x24
  404242:	sub    BYTE PTR [ebx+0x16],0x2c
  404246:	sbb    eax,0xfb9459c0
  40424b:	mov    dl,0xf
  40424d:	xchg   BYTE PTR [esi+0x373e637b],dl
  404253:	mov    eax,0x9352a336
  404258:	mov    eax,0x2d23ac1b
  40425d:	or     ecx,ecx
  40425f:	or     al,cl
  404261:	mov    cl,0x5f
  404263:	adc    esp,DWORD PTR [edx-0x17]
  404266:	cli    
  404267:	sti    
  404268:	or     eax,0x5b3ad451
  40426d:	inc    ebx
  40426e:	jno    0x404223
  404270:	adc    eax,0xc08008fb
  404275:	and    ax,0x2c6b
  404279:	fiadd  WORD PTR [ebx-0x61334735]
  40427f:	loop   0x4042b4
  404281:	je     0x404264
  404283:	ret    0xdbeb
  404286:	cmp    al,0x68
  404288:	and    DWORD PTR [edx+ebx*2-0x16],0x3b775f4
  404290:	jns    0x404260
  404292:	push   ss
  404293:	xor    BYTE PTR [esi+0x53],cl
  404296:	repz fisub DWORD PTR [ecx+0x567b8deb]
  40429d:	stc    
  40429e:	push   0x3e419a72
  4042a3:	add    BYTE PTR [edx+0x339b1977],bl
  4042a9:	cmc    
  4042aa:	mov    al,ds:0xb380a2b5
  4042af:	adc    BYTE PTR [eax-0x13],cl
  4042b2:	or     al,BYTE PTR [eax]
  4042b4:	scas   eax,DWORD PTR es:[edi]
  4042b5:	popf   
  4042b6:	mov    ds:0x1fbeca9c,eax
  4042bb:	and    al,0x24
  4042bd:	jbe    0x404254
  4042bf:	ss inc ecx
  4042c1:	pop    ss
  4042c2:	push   ss
  4042c3:	mov    cs,WORD PTR [eax+0x55]
  4042c6:	ins    BYTE PTR es:[edi],dx
  4042c7:	xchg   BYTE PTR [ebp-0x3cc12fca],bl
  4042cd:	jge    0x404334
  4042cf:	sub    al,0x26
  4042d1:	(bad)  
  4042d3:	xchg   esp,eax
  4042d4:	fistp  QWORD PTR [edi-0x5ac5f6f2]
  4042da:	mov    dl,0xb1
  4042dc:	push   esp
  4042dd:	cs pop es
  4042df:	mov    ds:0x1bba8dd1,eax
  4042e4:	ja     0x404342
  4042e6:	fild   DWORD PTR [ebx-0x7e]
  4042e9:	mul    DWORD PTR [ebx-0x5]
  4042ec:	fdiv   QWORD PTR [ecx+edx*8+0x6dd009e9]
  4042f3:	push   ecx
  4042f4:	mov    al,ds:0x45ccba08
  4042f9:	lods   al,BYTE PTR ds:[esi]
  4042fa:	push   es
  4042fb:	je     0x404328
  4042fd:	pop    ds
  4042fe:	mov    bl,0x66
  404300:	ds inc esp
  404302:	pmaxub mm5,QWORD PTR [edi+0x3f]
  404306:	or     al,BYTE PTR [eax]
  404308:	add    BYTE PTR [eax+0x1963a45],bl
  40430e:	ins    BYTE PTR es:[edi],dx
  40430f:	push   0x2c
  404311:	(bad)  
  404312:	addr16 pop edx
  404314:	mov    edx,0x19ce4c68
  404319:	dec    edi
  40431a:	dec    ecx
  40431b:	dec    BYTE PTR [edi+0x35af2106]
  404321:	rcr    DWORD PTR [edx],1
  404323:	lahf   
  404324:	mov    ds:0x32827a31,eax
  404329:	es jnp 0x4042de
  40432c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40432d:	xchg   cl,bh
  40432f:	fsub   st(1),st
  404331:	xor    ah,0xd7
  404334:	(bad)  [esi]
  404336:	jb     0x4043b7
  404338:	dec    esp
  404339:	pop    ebp
  40433a:	stos   DWORD PTR es:[edi],eax
  40433b:	js     0x4043b9
  40433d:	retf   
  40433e:	sti    
  40433f:	gs sub eax,0x1d670989
  404345:	pop    ss
  404346:	inc    esi
  404347:	jg     0x404359
  404349:	push   0xffffffcf
  40434b:	jns    0x40436d
  40434d:	hlt    
  40434e:	inc    edi
  40434f:	popa   
  404350:	jno    0x4043a0
  404352:	in     eax,0x63
  404354:	inc    ecx
  404355:	mov    eax,0x53d4c35e
  40435a:	mov    esi,0x6cdde4c4
  40435f:	fnsave [ebp-0x7a2527a9]
  404365:	shl    DWORD PTR [edi+0x15],0x98
  404369:	pop    eax
  40436a:	add    eax,0xc600a813
  40436f:	xchg   ebp,eax
  404370:	sub    edi,ecx
  404372:	sbb    al,0xdf
  404374:	sub    ecx,ecx
  404376:	stos   BYTE PTR es:[edi],al
  404377:	mov    WORD PTR [eax],cs
  404379:	pop    esp
  40437a:	inc    ecx
  40437b:	clc    
  40437c:	or     ebp,DWORD PTR [edi+ebp*4-0x52]
  404380:	idiv   BYTE PTR [eiz*8+0x730cf106]
  404387:	gs pop ss
  404389:	and    BYTE PTR [esi],bh
  40438b:	sbb    BYTE PTR [ecx],dl
  40438d:	adc    al,cl
  40438f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404390:	sub    DWORD PTR [ecx+0x6a],eax
  404393:	(bad)  
  404394:	sub    eax,0xa7fd471
  404399:	in     al,0x37
  40439b:	xor    eax,0xcdc1d402
  4043a0:	hlt    
  4043a1:	test   BYTE PTR [ebx-0x1],al
  4043a4:	repnz mov ah,0xad
  4043a7:	inc    edx
  4043a8:	push   ss
  4043a9:	ja     0x404389
  4043ab:	ins    BYTE PTR es:[edi],dx
  4043ac:	mov    eax,ds:0x37d70e71
  4043b1:	push   0x6f77914f
  4043b6:	pop    ds
  4043b7:	add    esi,ecx
  4043b9:	retf   
  4043ba:	mov    ds:0xaaccae65,al
  4043bf:	out    dx,eax
  4043c0:	push   ds
  4043c1:	aad    0x93
  4043c3:	jns    0x40434d
  4043c5:	sar    BYTE PTR [ebx-0x49353af5],cl
  4043cb:	xchg   esi,eax
  4043cc:	mov    dl,0xcd
  4043ce:	xchg   BYTE PTR [ebx+ebp*1],ch
  4043d1:	aam    0x0
  4043d3:	aaa    
  4043d4:	ret    0xd344
  4043d7:	addr16 push eax
  4043d9:	ret    0xda77
  4043dc:	scas   eax,DWORD PTR es:[edi]
  4043dd:	popf   
  4043de:	jo     0x4043a2
  4043e0:	and    eax,0xcc1b692c
  4043e5:	cmp    ebp,DWORD PTR [esi-0x1d]
  4043e8:	cmp    DWORD PTR [ebx],ebx
  4043ea:	push   es
  4043eb:	out    dx,al
  4043ec:	enter  0x134,0xfe
  4043f0:	cmp    ah,BYTE PTR [ebp-0x6d4b4108]
  4043f6:	jmp    FWORD PTR [esi+0x121b1c1e]
  4043fc:	shr    DWORD PTR [ebx],0x1c
  4043ff:	cmp    dl,BYTE PTR [ebx-0x5e]
  404402:	and    eax,0x227d9da3
  404407:	stos   DWORD PTR es:[edi],eax
  404408:	daa    
  404409:	adc    eax,0xe2d2c7c8
  40440e:	into   
  40440f:	test   DWORD PTR [eax+0x7b],0x74a6a6d6
  404416:	shl    DWORD PTR [esi+0x1c],1
  404419:	bnd je 0x404427
  40441c:	mov    ebx,0x491371ed
  404421:	or     dl,BYTE PTR [esi-0x53]
  404424:	pop    esi
  404425:	scas   eax,DWORD PTR es:[edi]
  404426:	sub    DWORD PTR [edx-0x7b1ec672],0x85eea87b
  404430:	imul   edi,DWORD PTR [esi],0x7f
  404433:	and    esp,DWORD PTR [ecx+0x1c004884]
  404439:	rcl    DWORD PTR [edx],1
  40443b:	(bad)  
  40443c:	jae    0x404475
  40443e:	mov    cl,0xf1
  404440:	outs   dx,BYTE PTR ds:[esi]
  404441:	daa    
  404442:	daa    
  404443:	pop    eax
  404444:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404445:	(bad)  
  404446:	pushf  
  404447:	inc    edi
  404448:	mov    eax,ds:0x90920b06
  40444d:	adc    edi,esi
  40444f:	std    
  404450:	xchg   ecx,eax
  404451:	jecxz  0x4044ba
  404453:	ins    BYTE PTR es:[edi],dx
  404454:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404455:	xor    dl,dl
  404457:	sbb    esp,DWORD PTR [eax-0x786abbbe]
  40445d:	iret   
  40445e:	out    0xe2,eax
  404460:	sbb    BYTE PTR [edi+0x74c26b71],0xcb
  404467:	hlt    
  404468:	mov    esp,0x3a4c5d84
  40446d:	mov    ecx,esp
  40446f:	sti    
  404470:	xor    al,0x5b
  404472:	pop    edx
  404473:	bound  ebp,QWORD PTR [edi]
  404475:	stos   BYTE PTR es:[edi],al
  404476:	loopne 0x404445
  404478:	sub    bh,BYTE PTR [edx+0x46bf4b76]
  40447e:	aad    0xd4
  404480:	mov    ebx,0x58654316
  404485:	out    0xf8,eax
  404487:	mov    dl,0x49
  404489:	imul   DWORD PTR [esi+0x34]
  40448c:	clc    
  40448d:	loope  0x4044e0
  40448f:	jecxz  0x404487
  404491:	adc    esp,eax
  404493:	dec    edx
  404494:	jmp    0xe8f5c2db
  404499:	xor    ch,al
  40449b:	add    BYTE PTR [eax],al
  40449d:	xchg   ebp,eax
  40449e:	jnp    0x40444f
  4044a0:	inc    ecx
  4044a1:	or     bh,BYTE PTR [edi+ebx*4-0x29]
  4044a5:	ror    DWORD PTR [esi-0x6de39232],cl
  4044ab:	(bad)  
  4044ac:	sti    
  4044ad:	fadd   QWORD PTR [esi-0x1d]
  4044b0:	push   0xffffff93
  4044b2:	dec    esp
  4044b3:	sar    esp,cl
  4044b5:	or     ah,BYTE PTR ds:0x23554682
  4044bb:	mov    dl,0xd0
  4044bd:	jecxz  0x404526
  4044bf:	es jae 0x4044ce
  4044c2:	inc    ecx
  4044c3:	pop    ss
  4044c4:	in     eax,0x5
  4044c6:	inc    cx
  4044c8:	pop    edi
  4044c9:	mov    ch,BYTE PTR [edx+0x71]
  4044cc:	leave  
  4044cd:	das    
  4044ce:	inc    ebx
  4044cf:	jnp    0x40450d
  4044d1:	sar    BYTE PTR ds:0x6839aa4b,0x5
  4044d8:	adc    BYTE PTR [esi-0xf79ea91],ah
  4044de:	dec    ebx
  4044df:	mov    edi,0x8f4cbf25
  4044e4:	mov    bl,0x76
  4044e6:	and    esi,ebx
  4044e8:	or     DWORD PTR [ecx+0x499fee1e],ebx
  4044ee:	jl     0x4044e3
  4044f0:	push   cs
  4044f1:	xchg   esi,eax
  4044f2:	jnp    0x4044b7
  4044f4:	cwde   
  4044f5:	dec    DWORD PTR [esi-0x6e1fdd6e]
  4044fb:	mov    ds:0x36ed66b4,al
  404500:	pop    ss
  404501:	add    BYTE PTR [ecx-0xe],bh
  404504:	push   es
  404505:	add    DWORD PTR [eax],0x2f3b55e0
  40450b:	fsub   DWORD PTR [ebp-0x53]
  40450e:	sbb    dl,dh
  404510:	mov    BYTE PTR [eax],ah
  404512:	add    eax,0x86b6b8d9
  404517:	pop    esp
  404518:	jnp    0x4044fc
  40451a:	mov    cl,BYTE PTR [ebp+0x79]
  40451d:	shr    ah,cl
  40451f:	rol    ch,cl
  404521:	inc    edi
  404522:	pop    DWORD PTR [esi]
  404524:	fdiv   QWORD PTR [edi-0xf]
  404527:	push   esp
  404528:	(bad)  
  404529:	es xchg ebx,eax
  40452b:	ins    BYTE PTR es:[edi],dx
  40452c:	int    0x16
  40452e:	add    eax,0x940b2efc
  404533:	in     eax,dx
  404534:	sub    DWORD PTR [ebx],edi
  404536:	or     bl,BYTE PTR [esi+0x1c]
  404539:	push   0x58
  40453b:	xchg   ebx,eax
  40453c:	pop    ss
  40453d:	pop    edx
  40453e:	fdivrp st(4),st
  404540:	out    dx,eax
  404541:	into   
  404542:	jge    0x404550
  404544:	icebp  
  404545:	(bad)  
  404546:	and    esp,DWORD PTR [ebx+0x9]
  404549:	scas   al,BYTE PTR es:[edi]
  40454a:	mov    eax,ds:0x379e0a96
  40454f:	dec    ecx
  404550:	repz xchg edx,eax
  404552:	inc    edx
  404553:	loopne 0x40454a
  404555:	mov    ds:0xf2086eb4,al
  40455a:	outs   dx,BYTE PTR ds:[esi]
  40455b:	ret    0xc20b
  40455e:	shl    BYTE PTR [edi+0x2f],1
  404561:	push   edi
  404562:	sub    ebx,ecx
  404564:	adc    al,0x67
  404566:	add    ch,cl
  404568:	xchg   ecx,eax
  404569:	sbb    eax,0x15e73736
  40456e:	push   es
  40456f:	test   eax,0x301bc55e
  404574:	repnz (bad) [ebx]
  404577:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404578:	push   0x3c7ac7
  40457d:	int    0x4a
  40457f:	ret    0x6081
  404582:	fistp  WORD PTR [ecx]
  404584:	xlat   BYTE PTR ds:[ebx]
  404585:	(bad)  
  404586:	out    dx,eax
  404587:	jg     0x40450e
  404589:	jp     0x404549
  40458b:	vhsubps xmm1,xmm0,XMMWORD PTR [esi-0x2e4abca5]
  404593:	and    eax,0xf5d2425b
  404598:	in     al,0xda
  40459a:	retf   
  40459b:	inc    esp
  40459c:	jg     0x4045b2
  40459e:	leave  
  40459f:	push   esp
  4045a0:	adc    DWORD PTR [edx+0x4d73e16c],edx
  4045a6:	addr16 (bad) 
  4045a9:	mov    ebx,0x2b87806e
  4045ae:	jbe    0x404628
  4045b0:	stc    
  4045b1:	dec    edx
  4045b2:	neg    BYTE PTR [eax+ecx*4-0x7c]
  4045b6:	std    
  4045b7:	jl     0x4045af
  4045b9:	adc    al,0x5
  4045bb:	int3   
  4045bc:	ins    BYTE PTR es:[edi],dx
  4045bd:	mov    ds:0x2be28fff,al
  4045c2:	and    ebx,DWORD PTR [ecx]
  4045c4:	sbb    BYTE PTR [ebx-0xdf01ee0],0x19
  4045cb:	add    BYTE PTR [eax],cl
  4045cd:	push   esi
  4045ce:	lods   eax,DWORD PTR ds:[esi]
  4045cf:	sbb    dh,BYTE PTR [eax]
  4045d1:	in     al,dx
  4045d2:	aaa    
  4045d3:	and    dh,BYTE PTR ds:0x52157b7
  4045d9:	dec    ecx
  4045da:	(bad)  
  4045db:	sbb    BYTE PTR [edx+eiz*4+0x2ce41bb1],dh
  4045e2:	aas    
  4045e3:	not    DWORD PTR [eax-0x31]
  4045e6:	dec    eax
  4045e7:	cld    
  4045e8:	dec    eax
  4045e9:	inc    ecx
  4045ea:	rol    DWORD PTR ds:0xfe9eab90,0x6b
  4045f1:	adc    eax,0xa46d6aa6
  4045f6:	xchg   ecx,eax
  4045f7:	imul   ecx,DWORD PTR [ebp+0x3c70081a],0x1c7327d0
  404601:	mov    eax,ds:0x7e9d89cf
  404607:	aam    0x51
  404609:	xor    ecx,DWORD PTR [edx]
  40460b:	add    eax,0x1281c44b
  404610:	dec    eax
  404611:	xchg   esp,eax
  404612:	pop    ss
  404613:	and    BYTE PTR [esi-0x5a724580],0x70
  40461a:	sub    al,0x1c
  40461c:	jl     0x4045bf
  40461e:	xchg   esi,eax
  40461f:	jmp    0x40468f
  404621:	rol    DWORD PTR [eax],1
  404623:	gs dec ebx
  404625:	aas    
  404626:	mov    ds:0x352f3892,eax
  40462b:	sti    
  40462c:	cmp    ah,bl
  40462e:	mov    fs,esp
  404630:	add    BYTE PTR [ebp-0x5e83e6f3],al
  404636:	clc    
  404637:	xchg   DWORD PTR [ebx-0x4e],ecx
  40463a:	call   0x19d3185c
  40463f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404640:	frstor [ebx+0x345b3249]
  404646:	mov    ah,0x91
  404648:	inc    esp
  404649:	xlat   BYTE PTR ds:[ebx]
  40464a:	mov    ds:0x54c1b507,eax
  40464f:	mov    ebp,0x2b84bce2
  404654:	outs   dx,DWORD PTR ds:[esi]
  404655:	aad    0x8f
  404657:	ficomp WORD PTR [eax]
  404659:	mov    dh,0x5f
  40465b:	dec    eax
  40465c:	or     esi,0xbfeef2b0
  404662:	shl    BYTE PTR [eax+ebp*2+0x60],0x4c
  404667:	(bad)  
  404668:	div    DWORD PTR [edx]
  40466a:	sbb    al,0x51
  40466c:	xchg   BYTE PTR ds:0x20d1eaed,dh
  404672:	std    
  404673:	jl     0x4046e6
  404675:	lods   eax,DWORD PTR ds:[esi]
  404676:	or     ch,ah
  404678:	ficomp WORD PTR [eax-0x67b08626]
  40467e:	daa    
  40467f:	sar    al,0x8a
  404682:	cmp    DWORD PTR [esi+0x0],edx
  404685:	adc    BYTE PTR [edx],ah
  404687:	xchg   esp,eax
  404688:	inc    DWORD PTR [edi+0x22]
  40468b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40468c:	imul   ecx,esi,0x59d3f547
  404692:	dec    esp
  404693:	lds    eax,FWORD PTR [ebp+0x0]
  404696:	mov    edi,0x1878eb69
  40469b:	imul   ebx,ebx,0xffffffee
  40469e:	mov    eax,ds:0x36548942
  4046a3:	inc    ecx
  4046a4:	mov    ecx,0x2c44b8c2
  4046a9:	popa   
  4046aa:	pop    ds
  4046ab:	and    BYTE PTR [edi+esi*8],bl
  4046ae:	inc    bp
  4046b0:	dec    ebp
  4046b1:	dec    ebp
  4046b2:	loope  0x404701
  4046b4:	jge    0x404691
  4046b6:	adc    DWORD PTR [edi+0x75c64a60],ecx
  4046bc:	push   eax
  4046bd:	fsub   st(7),st
  4046bf:	jl     0x4046c2
  4046c1:	data16 js 0x40473a
  4046c4:	xor    eax,esi
  4046c6:	neg    bl
  4046c8:	mov    ds:0x93d8a153,eax
  4046cd:	lds    ebp,FWORD PTR [eax]
  4046cf:	repnz les edi,FWORD PTR [edi-0x11]
  4046d3:	repnz hlt 
  4046d5:	jmp    0x1d38213c
  4046da:	xchg   ebp,eax
  4046db:	fld    st(7)
  4046dd:	mov    bl,BYTE PTR [ecx+esi*8]
  4046e0:	cwde   
  4046e1:	xor    bl,cl
  4046e3:	shr    DWORD PTR [eax+0x3c8f45a6],cl
  4046e9:	add    eax,0x930c7472
  4046ee:	sbb    edi,DWORD PTR [esi+0x5d]
  4046f1:	sub    DWORD PTR [esi+esi*2+0x450cbf6d],edi
  4046f8:	jo     0x404728
  4046fa:	add    bl,ch
  4046fc:	pop    ds
  4046fd:	inc    eax
  4046fe:	mov    eax,0x1b162e86
  404703:	test   BYTE PTR [edi],bh
  404705:	pop    ds
  404706:	sub    esi,edx
  404708:	in     eax,0xf2
  40470a:	mov    ebp,0x8df298b9
  40470f:	daa    
  404710:	dec    edi
  404711:	cmc    
  404712:	fimul  WORD PTR [ebp-0x410f49a]
  404718:	pop    eax
  404719:	or     DWORD PTR [eax],eax
  40471b:	xchg   BYTE PTR [edx+0x3],al
  40471e:	xor    edi,eax
  404720:	xchg   edi,esp
  404722:	popa   
  404723:	add    al,0x80
  404725:	fcom   QWORD PTR [edx+0x45]
  404728:	xor    eax,0x668ac512
  40472d:	es hlt 
  40472f:	ret    
  404730:	inc    ebx
  404731:	inc    eax
  404732:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404733:	or     BYTE PTR [ecx+ecx*2-0x6a],al
  404737:	inc    ecx
  404738:	xor    ecx,eax
  40473a:	mov    cl,BYTE PTR [esi-0x304437d6]
  404740:	setg   al
  404743:	cld    
  404744:	idiv   DWORD PTR [ecx+0x65cd3dd9]
  40474a:	dec    edi
  40474b:	xchg   edx,eax
  40474c:	out    dx,al
  40474d:	pop    ebx
  40474e:	jle    0x40479b
  404750:	or     ecx,DWORD PTR [ebx-0x7a23ffd3]
  404756:	sbb    al,0xb9
  404758:	scas   al,BYTE PTR es:[edi]
  404759:	retf   
  40475a:	adc    dh,BYTE PTR [edi]
  40475c:	test   al,0xc0
  40475e:	and    eax,DWORD PTR [eax]
  404760:	jbe    0x404733
  404762:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404763:	jo     0x40471a
  404765:	mov    ecx,0x8af4419e
  40476a:	pop    edi
  40476b:	xlat   BYTE PTR ds:[ebx]
  40476c:	pop    ebx
  40476d:	lods   al,BYTE PTR ds:[esi]
  40476e:	fs out 0x92,al
  404771:	lea    eax,[ecx-0x75a2264b]
  404777:	test   BYTE PTR [eax],dl
  404779:	inc    edx
  40477a:	popa   
  40477b:	or     dh,bh
  40477d:	or     BYTE PTR [eax-0x6cb610fd],cl
  404783:	(bad)  
  404784:	pop    DWORD PTR [esi-0x38431276]
  40478a:	lds    ebp,FWORD PTR [ebx+eiz*8]
  40478d:	push   DWORD PTR [ebx-0x68c115e9]
  404793:	inc    edx
  404794:	mov    cl,0x81
  404796:	xchg   esi,eax
  404797:	dec    ecx
  404798:	js     0x40475a
  40479a:	jbe    0x40481b
  40479c:	stos   BYTE PTR es:[edi],al
  40479d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40479e:	test   BYTE PTR [bp+di+0x65],dh
  4047a2:	inc    esp
  4047a3:	jno    0x40476d
  4047a5:	and    al,BYTE PTR [ebp+0x5a]
  4047a8:	shl    ebx,1
  4047aa:	jno    0x404747
  4047ac:	daa    
  4047ad:	test   eax,0x6a56b09b
  4047b2:	mov    al,ds:0x992705c5
  4047b7:	mov    esi,0x46cde7f4
  4047bc:	lock lods al,BYTE PTR ds:[esi]
  4047be:	scas   eax,DWORD PTR es:[edi]
  4047bf:	cmp    eax,0x18cc6df9
  4047c4:	add    BYTE PTR [edx+0x2b],al
  4047c7:	fnsave [ebx]
  4047c9:	or     ebp,esp
  4047cb:	or     ebx,esi
  4047cd:	ins    BYTE PTR es:[edi],dx
  4047ce:	mov    al,0x3
  4047d0:	ficomp DWORD PTR [edi+0x71]
  4047d3:	call   0xd16ec6d4
  4047d8:	pop    es
  4047d9:	scas   al,BYTE PTR es:[edi]
  4047da:	out    dx,eax
  4047db:	dec    ebx
  4047dc:	cmp    eax,0x462d5598
  4047e1:	adc    DWORD PTR [esi+ecx*1+0x1ed33a33],0x48126318
  4047ec:	fnstenv [ecx+ebx*2-0x67380dbf]
  4047f3:	or     ah,BYTE PTR [eax-0x77]
  4047f6:	mov    bl,0x7f
  4047f8:	pop    ecx
  4047f9:	stos   BYTE PTR es:[edi],al
  4047fa:	sar    DWORD PTR [esi],0xfe
  4047fd:	add    al,0x9f
  4047ff:	icebp  
  404800:	out    dx,eax
  404801:	add    eax,edx
  404803:	mov    al,0xc
  404805:	and    eax,DWORD PTR [eax+0x71300d73]
  40480b:	xor    bh,BYTE PTR [edx]
  40480d:	sbb    ebx,ebx
  40480f:	hlt    
  404810:	push   ebx
  404811:	sub    cl,BYTE PTR [edx]
  404813:	mov    ah,0x28
  404815:	aas    
  404816:	cmp    eax,0x2c441177
  40481b:	ss cdq 
  40481d:	adc    DWORD PTR [ecx],0xf
  404820:	nop
  404821:	mov    al,ds:0xb5ab4de0
  404826:	das    
  404827:	lea    esi,[edx-0x33c17200]
  40482d:	pop    ebp
  40482e:	aas    
  40482f:	retf   
  404830:	or     ebp,DWORD PTR [esp+edx*4-0x63]
  404834:	dec    edx
  404835:	dec    edi
  404836:	sub    DWORD PTR [ecx-0x77],ebp
  404839:	cs dec edx
  40483b:	jp     0x404805
  40483d:	and    DWORD PTR [edx-0x46f7f879],ebp
  404843:	push   esi
  404844:	inc    esi
  404845:	jecxz  0x4047d6
  404847:	test   eax,0xb7f6fa85
  40484c:	les    esp,FWORD PTR [ebp-0x5bfcbe2f]
  404852:	cmp    al,0x13
  404854:	inc    edx
  404855:	(bad)  
  404856:	adc    esp,esp
  404858:	xor    BYTE PTR [esi+0x63bff522],0x41
  40485f:	call   FWORD PTR [ebp+0x4a]
  404862:	(bad)  
  404863:	out    dx,al
  404864:	push   ds
  404865:	popa   
  404866:	mul    DWORD PTR [eax]
  404868:	fdivr  QWORD PTR [eax+0x4c]
  40486b:	push   eax
  40486c:	popf   
  40486d:	add    BYTE PTR [ecx-0x63],ch
  404870:	xchg   edx,eax
  404871:	push   eax
  404872:	pusha  
  404873:	jb     0x404818
  404875:	adc    DWORD PTR [ebx-0x4d2d0f59],ecx
  40487b:	mov    esi,0x283d93c1
  404880:	fstp   QWORD PTR [esp+esi*1+0x3f]
  404884:	in     al,dx
  404885:	sbb    eax,0xdebf1a5f
  40488a:	push   esi
  40488b:	cmc    
  40488c:	lea    ebx,[edi+0x18326100]
  404892:	pop    eax
  404893:	push   0x8319285b
  404898:	jle    0x4048ff
  40489a:	ficomp DWORD PTR [edx+0x69]
  40489d:	dec    edx
  40489e:	fwait
  40489f:	xchg   edx,eax
  4048a0:	mov    eax,ds:0xac7ba761
  4048a5:	push   eax
  4048a6:	out    0x90,al
  4048a8:	pop    DWORD PTR [ebx]
  4048aa:	and    eax,0x64329669
  4048af:	xlat   BYTE PTR cs:[ebx]
  4048b1:	mov    ds:0x95ce27a3,eax
  4048b6:	loop   0x4048a4
  4048b8:	in     al,dx
  4048b9:	lds    esp,FWORD PTR [ecx]
  4048bb:	inc    ebp
  4048bc:	add    bh,dh
  4048be:	pusha  
  4048bf:	cli    
  4048c0:	addr16 jmp 0x98ee:0xc564f3af
  4048c8:	push   ebp
  4048c9:	mov    BYTE PTR ds:0x6cb84ea1,ch
  4048cf:	mov    dh,0xb
  4048d1:	cs stos DWORD PTR es:[edi],eax
  4048d3:	lahf   
  4048d4:	sbb    BYTE PTR [edi],bl
  4048d6:	jmp    0x2a3d:0x294c21b4
  4048dd:	jge    0x404947
  4048df:	mov    eax,0xb1f67264
  4048e4:	addr16 dec ebp
  4048e6:	mov    bh,0x86
  4048e8:	push   esi
  4048e9:	push   es
  4048ea:	sbb    edx,DWORD PTR [edx+0x65]
  4048ed:	jmp    FWORD PTR [ecx]
  4048ef:	jnp    0x404885
  4048f1:	cmp    al,0xbc
  4048f3:	add    BYTE PTR [ebx+edi*4-0x2d0a72bf],dh
  4048fa:	and    esi,ebx
  4048fc:	ss leave 
  4048fe:	sub    ebp,edi
  404900:	push   edi
  404901:	nop
  404902:	mov    al,ds:0x957f98f3
  404907:	ret    0x9ed1
  40490a:	mov    esi,0xc7bd0a91
  40490f:	mov    al,ds:0x3683ecc3
  404914:	jl     0x4048f9
  404916:	js     0x40491f
  404918:	sub    eax,0xee5469da
  40491d:	shl    DWORD PTR [ebx+0x65],0x9f
  404921:	mov    ds,WORD PTR fs:[eax-0x568e7433]
  404928:	jl     0x40498c
  40492a:	pop    esp
  40492b:	cli    
  40492c:	aas    
  40492d:	pop    ecx
  40492e:	jnp    0x4048fb
  404930:	push   cs
  404931:	sub    BYTE PTR [ebx-0x6dd836a3],bh
  404937:	ins    BYTE PTR es:[edi],dx
  404938:	add    BYTE PTR [esi-0x4f],0x3f
  40493c:	cmp    edx,DWORD PTR [ebp-0x31]
  40493f:	push   cs
  404940:	adc    bh,ah
  404942:	xor    edx,DWORD PTR [edx]
  404944:	(bad)
  404947:	and    eax,DWORD PTR [edx+ebp*1+0x1147703a]
  40494e:	adc    eax,DWORD PTR [ecx+0x6]
  404951:	add    al,dl
  404953:	(bad)  
  404954:	inc    ecx
  404955:	out    dx,eax
  404956:	in     al,0xe5
  404958:	add    BYTE PTR [eax-0x3c4af132],cl
  40495e:	in     al,dx
  40495f:	test   BYTE PTR [ebx+0x4292420a],0xc
  404966:	cmp    al,0x9b
  404968:	cmp    eax,0x189ffb0d
  40496d:	fidivr WORD PTR [ecx+0x78df2fb9]
  404973:	(bad)  
  404974:	out    dx,al
  404975:	dec    eax
  404976:	inc    eax
  404977:	out    0xd9,eax
  404979:	xor    edi,edi
  40497b:	ret    
  40497c:	cld    
  40497d:	pop    edx
  40497e:	mov    esi,0x7d8203a5
  404983:	stos   BYTE PTR es:[edi],al
  404984:	jnp    0x40490c
  404986:	xor    al,0x83
  404988:	test   BYTE PTR [edi-0xd],dl
  40498b:	addr16 jno 0x4049b2
  40498e:	mov    dl,0x71
  404990:	push   esi
  404991:	aad    0x73
  404993:	scas   al,BYTE PTR es:[edi]
  404994:	xchg   edi,eax
  404995:	inc    ebx
  404996:	xor    eax,0xf67ab0af
  40499b:	retf   
  40499c:	lds    esp,FWORD PTR [ecx]
  40499e:	mov    bh,0xbd
  4049a0:	mov    edx,0x85d77f8
  4049a5:	sbb    ch,BYTE PTR [esp+ebx*2-0x1]
  4049a9:	add    ch,BYTE PTR [ebx-0x15d42d81]
  4049af:	ins    DWORD PTR es:[edi],dx
  4049b0:	in     eax,dx
  4049b1:	xor    BYTE PTR [ecx],ch
  4049b3:	mov    ecx,0x906fbf2c
  4049b8:	adc    edi,DWORD PTR [esi+0x3e7bae]
  4049be:	(bad)  
  4049bf:	in     eax,dx
  4049c0:	or     DWORD PTR [ecx+0x6c],0x50c1c52c
  4049c7:	arpl   sp,dx
  4049c9:	(bad)  
  4049ca:	mov    DWORD PTR [edx-0x1e4d5449],esp
  4049d0:	xchg   ebp,eax
  4049d1:	xchg   esp,eax
  4049d2:	imul   esp,DWORD PTR [eax],0xffffffe1
  4049d5:	push   ebp
  4049d6:	cmc    
  4049d7:	addr16 call 0xae70e47
  4049dd:	stc    
  4049de:	add    DWORD PTR [ebp+ebp*2+0x2ca30700],esi
  4049e5:	or     eax,0x1cb2acc0
  4049ea:	(bad)  
  4049eb:	mov    ebp,0x8ef23ff3
  4049f0:	xor    BYTE PTR [esi],bl
  4049f2:	in     eax,dx
  4049f3:	pop    edi
  4049f4:	jno    0x404a5f
  4049f6:	sub    al,0xe9
  4049f8:	mov    ch,0x60
  4049fa:	pop    ebx
  4049fb:	clc    
  4049fc:	idiv   BYTE PTR [ebx]
  4049fe:	push   es
  4049ff:	dec    esp
  404a00:	xor    al,0x42
  404a02:	or     DWORD PTR [ebx],ebx
  404a04:	jne    0x404a1b
  404a06:	xchg   BYTE PTR [esi],ah
  404a08:	mov    edx,0xfb378914
  404a0d:	neg    DWORD PTR [edi+0x5ae63807]
  404a13:	aam    0x78
  404a15:	xor    DWORD PTR [edx-0x62e7419d],edx
  404a1b:	jb     0x404a1c
  404a1d:	xor    eax,eax
  404a1f:	sar    DWORD PTR [edx+ecx*2],0x0
  404a23:	(bad)  
  404a24:	nop
  404a25:	jge    0x4049d9
  404a27:	cld    
  404a28:	je     0x404a6e
  404a2a:	mov    ebx,0x9005642b
  404a2f:	ss xchg edi,eax
  404a31:	(bad)  
  404a32:	mov    ecx,edi
  404a34:	lds    eax,FWORD PTR [edi+0x4030b056]
  404a3a:	aaa    
  404a3b:	pop    ss
  404a3c:	and    DWORD PTR [ecx],eax
  404a3e:	push   esp
  404a3f:	mov    ds:0xbd65c1d2,al
  404a44:	add    eax,DWORD PTR [ebx+0x4bfe24ea]
  404a4a:	add    esi,DWORD PTR [edx]
  404a4c:	jmp    0x1c4f625d
  404a51:	into   
  404a52:	add    DWORD PTR [eax-0x37ff70b4],edx
  404a58:	or     edx,DWORD PTR [edx-0x5ceacebe]
  404a5e:	add    ecx,DWORD PTR [edx]
  404a60:	lock rol BYTE PTR ds:[ebx],0x23
  404a65:	rol    DWORD PTR [ecx+0x1fce7e6e],0x7
  404a6c:	popa   
  404a6d:	stc    
  404a6e:	pop    esi
  404a6f:	sub    al,0x4c
  404a71:	lods   eax,DWORD PTR ds:[esi]
  404a72:	popf   
  404a73:	inc    ebp
  404a74:	pop    ebx
  404a75:	lahf   
  404a76:	fmul   QWORD PTR [edx-0x4ce4f5e6]
  404a7c:	or     edi,DWORD PTR [ebx]
  404a7e:	pop    edx
  404a7f:	mov    BYTE PTR [eax],ah
  404a81:	push   0x593f8199
  404a86:	fadd   DWORD PTR [eax]
  404a88:	push   esi
  404a89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a8a:	inc    ebp
  404a8b:	pop    ss
  404a8c:	dec    edi
  404a8d:	mov    eax,0x95345674
  404a92:	daa    
  404a93:	xchg   ebp,eax
  404a94:	int    0x72
  404a96:	push   ss
  404a97:	aam    0x92
  404a99:	mov    cl,0x80
  404a9b:	adc    edi,DWORD PTR [ebx-0x2a]
  404a9e:	mov    al,0x52
  404aa0:	push   eax
  404aa1:	stc    
  404aa2:	loope  0x404a35
  404aa4:	imul   esp,eax,0x3cc1d0d2
  404aaa:	stc    
  404aab:	in     al,dx
  404aac:	test   al,0x29
  404aae:	enter  0x83ad,0xe
  404ab2:	fwait
  404ab3:	outs   dx,BYTE PTR ds:[esi]
  404ab4:	call   0x3f52:0x452faa0f
  404abb:	call   0xa94d99fc
  404ac0:	daa    
  404ac1:	fs pop ecx
  404ac3:	push   0x3e
  404ac5:	jge    0x404b35
  404ac7:	sub    ebx,DWORD PTR [ecx-0x5f1b8d1c]
  404acd:	sti    
  404ace:	inc    ecx
  404acf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ad0:	xchg   ch,cl
  404ad2:	jle    0x404aef
  404ad4:	push   0xa12a83ce
  404ad9:	pop    ss
  404ada:	sar    BYTE PTR [esi+eiz*8+0x278db8f0],0x2a
  404ae2:	stos   BYTE PTR es:[edi],al
  404ae3:	fisub  WORD PTR [edx+esi*1-0x51]
  404ae7:	out    dx,eax
  404ae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ae9:	pop    ebp
  404aea:	push   ebp
  404aeb:	loope  0x404aed
  404aed:	adc    ebp,DWORD PTR [edi+0x6c]
  404af0:	ror    dl,1
  404af2:	mov    eax,DWORD PTR [ebx+0x7e8c8183]
  404af8:	mov    dl,0x38
  404afa:	fnstcw WORD PTR [eax-0x3f4d10dc]
  404b00:	adc    eax,0x46afa7ae
  404b05:	pop    ebp
  404b06:	mov    al,0xaa
  404b08:	ja     0x404b26
  404b0a:	test   DWORD PTR ds:0x14a6db6b,ebp
  404b10:	pop    edx
  404b11:	xchg   edx,eax
  404b12:	cmp    DWORD PTR [ebx],0x9
  404b15:	mov    ecx,0xf0384674
  404b1a:	rol    DWORD PTR [ecx],0xae
  404b1d:	aaa    
  404b1e:	retf   0x9ef8
  404b21:	jbe    0x404b02
  404b23:	(bad)  
  404b24:	retf   
  404b25:	xchg   ebp,eax
  404b26:	clc    
  404b27:	loope  0x404b25
  404b29:	aam    0x69
  404b2b:	or     DWORD PTR [eax],eax
  404b2d:	xchg   BYTE PTR [edx-0x35],ch
  404b30:	push   0xffffff91
  404b32:	push   0x67b0d48d
  404b37:	dec    edi
  404b38:	mov    esi,0xa8006cdf
  404b3d:	push   edx
  404b3e:	arpl   dx,ax
  404b40:	ret    0x6d1d
  404b43:	test   BYTE PTR [esp+edx*8+0x65],bh
  404b47:	inc    esi
  404b48:	push   ss
  404b49:	add    eax,DWORD PTR [edx-0x3]
  404b4c:	lock mov dh,0x9a
  404b4f:	in     al,0xb2
  404b51:	add    BYTE PTR [ebp-0x35],cl
  404b54:	out    dx,al
  404b55:	je     0x404b62
  404b57:	je     0x404b30
  404b59:	ss jmp 0xef3a45bf
  404b5f:	in     eax,0xfa
  404b61:	mov    ebx,0x7de8ef15
  404b66:	mov    bl,0x48
  404b68:	call   0xf5d8cac
  404b6d:	out    0x24,al
  404b6f:	shl    ch,cl
  404b71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b72:	mov    edi,0x3961fc02
  404b77:	cmp    al,0xe5
  404b79:	and    ebx,DWORD PTR [ebx+0x7cece829]
  404b7f:	scas   al,BYTE PTR es:[edi]
  404b80:	jmp    0xdbf77333
  404b85:	push   0x2ada7fc1
  404b8a:	rcl    DWORD PTR [ecx+esi*8-0x2a],cl
  404b8e:	xchg   edi,eax
  404b8f:	mov    eax,esi
  404b91:	xchg   esp,eax
  404b92:	out    dx,al
  404b93:	pop    edx
  404b94:	repnz push edx
  404b96:	test   al,0xa0
  404b98:	repz adc dl,cl
  404b9b:	mov    bl,0xd6
  404b9d:	(bad)  
  404b9f:	fistp  WORD PTR cs:[ebp+0x5bd525b6]
  404ba6:	adc    ch,bl
  404ba8:	fistp  DWORD PTR [ecx]
  404baa:	bound  ecx,QWORD PTR [eax]
  404bac:	jmp    0x404bfc
  404bae:	enter  0xea62,0x8c
  404bb2:	call   0xc914:0xcad871
  404bb9:	(bad)  [eax]
  404bbb:	ds pushf 
  404bbd:	int3   
  404bbe:	inc    edi
  404bbf:	and    BYTE PTR [edi],dl
  404bc1:	mov    ch,0x85
  404bc3:	add    cl,BYTE PTR [esi+0xa]
  404bc6:	mov    ch,0x45
  404bc8:	sbb    eax,0xf287ac58
  404bcd:	outs   dx,BYTE PTR ds:[esi]
  404bce:	pop    ds
  404bcf:	push   eax
  404bd0:	xor    DWORD PTR [edx+0x16],edx
  404bd3:	push   es
  404bd4:	fsub   DWORD PTR [esp+ebx*1+0x3c]
  404bd8:	xchg   BYTE PTR [edx*1-0x7f45506],bh
  404bdf:	mov    edx,0x70f98e99
  404be4:	outs   dx,DWORD PTR ds:[esi]
  404be5:	mov    ecx,0xdfee16fb
  404bea:	cli    
  404beb:	aam    0x42
  404bed:	xlat   BYTE PTR ds:[ebx]
  404bee:	int    0x9e
  404bf0:	pop    edi
  404bf1:	call   0xf2ce:0xadc95cc4
  404bf8:	adc    esi,esp
  404bfa:	(bad)  
  404bfb:	test   al,0xfc
  404bfd:	ret    0x67ca
  404c00:	pop    es
  404c01:	inc    esi
  404c02:	retf   
  404c03:	and    eax,0xebc97121
  404c08:	mov    ebx,0x54a1c828
  404c0d:	pop    ds
  404c0e:	adc    esi,DWORD PTR [edx-0x72]
  404c11:	and    dl,BYTE PTR [edx]
  404c13:	sub    BYTE PTR [eax+0x15],bh
  404c16:	add    BYTE PTR [esi],bl
  404c18:	loop   0x404c65
  404c1a:	add    DWORD PTR [eax],eax
  404c1c:	pop    esp
  404c1d:	dec    ebx
  404c1e:	jnp    0x404c34
  404c20:	fwait
  404c21:	dec    BYTE PTR ss:0x7c8d0d1
  404c28:	test   DWORD PTR [ecx-0x5ccb0170],0xc7d019a7
  404c32:	retf   0x8a18
  404c35:	popa   
  404c36:	std    
  404c37:	sbb    bh,BYTE PTR [edx+edi*8]
  404c3a:	mov    ds:0x9314fe1b,eax
  404c3f:	add    BYTE PTR [eax],dh
  404c41:	shr    BYTE PTR [esi],1
  404c43:	sbb    al,0x31
  404c45:	push   cs
  404c46:	inc    ebp
  404c47:	sub    esp,DWORD PTR [ebx]
  404c49:	push   esp
  404c4a:	cli    
  404c4b:	jb     0x404c5f
  404c4d:	xchg   edx,eax
  404c4e:	xchg   ecx,eax
  404c4f:	inc    ebp
  404c50:	sub    esi,eax
  404c52:	(bad)  
  404c53:	js     0x404c7d
  404c55:	or     BYTE PTR [edi+ecx*2+0x160249da],bh
  404c5c:	retf   
  404c5d:	mov    ebp,DWORD PTR [eax+0x21]
  404c60:	mov    ah,0x7e
  404c63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c64:	(bad)  
  404c65:	(bad)  
  404c66:	adc    edx,DWORD PTR [ebx-0x356aa6eb]
  404c6c:	adc    al,0x83
  404c6e:	sar    ch,0xfb
  404c71:	lock and esi,DWORD PTR [eax-0x78b1c506]
  404c78:	or     BYTE PTR [ebp-0xd],bh
  404c7b:	fidivr WORD PTR [ecx]
  404c7d:	mov    bh,0x9a
  404c7f:	jmp    0x8c326084
  404c84:	ins    BYTE PTR es:[edi],dx
  404c85:	adc    eax,0x75be634
  404c8a:	outs   dx,BYTE PTR ds:[esi]
  404c8b:	pop    ebx
  404c8c:	add    al,BYTE PTR [esi]
  404c8e:	mov    al,0x32
  404c90:	xor    eax,0x874ed3d
  404c95:	cmp    al,0x2b
  404c97:	pop    ds
  404c98:	aas    
  404c99:	into   
  404c9a:	addr16 mov al,ds:0xcf66
  404c9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c9f:	retf   
  404ca0:	push   ecx
  404ca1:	ret    0xdce4
  404ca4:	aam    0xc3
  404ca6:	and    dh,BYTE PTR [edi+0x860d1e3]
  404cac:	mov    edx,0x8d639ec0
  404cb1:	xchg   edi,eax
  404cb2:	xchg   ebx,eax
  404cb3:	shl    DWORD PTR [eax],0x96
  404cb6:	push   ecx
  404cb7:	stos   BYTE PTR es:[edi],al
  404cb8:	pop    ss
  404cb9:	xchg   BYTE PTR [edi*1+0x7f23c81f],ah
  404cc0:	jne    0x404c71
  404cc2:	adc    BYTE PTR [eax-0xdd7d59d],dh
  404cc8:	or     BYTE PTR [ebp+0x1e],cl
  404ccb:	xor    al,0xb7
  404ccd:	hlt    
  404cce:	ss jbe 0x404cae
  404cd1:	jmp    0x404c7a
  404cd3:	mov    ch,0x9a
  404cd5:	out    dx,al
  404cd6:	mov    al,ds:0xa731f00b
  404cdb:	dec    ecx
  404cdc:	dec    esi
  404cdd:	lock popf 
  404cdf:	(bad)  
  404ce0:	and    al,0xc7
  404ce2:	stos   BYTE PTR es:[edi],al
  404ce3:	ret    0x32
  404ce6:	inc    edx
  404ce7:	test   eax,0xab555800
  404cec:	inc    esi
  404ced:	out    0xac,al
  404cef:	lods   al,BYTE PTR ds:[esi]
  404cf0:	test   BYTE PTR [ebx+esi*2+0x36689e95],cl
  404cf7:	mov    ds,esp
  404cf9:	add    DWORD PTR [ecx],ebp
  404cfb:	cwde   
  404cfc:	sbb    bh,BYTE PTR [eax+edi*2+0x7fd6588f]
  404d03:	mov    esp,0xbbfac091
  404d08:	xlat   BYTE PTR ds:[ebx]
  404d09:	test   eax,0x141db9dd
  404d0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d0f:	mov    edx,0x3bb7e53
  404d14:	lods   al,BYTE PTR ds:[esi]
  404d15:	cmp    DWORD PTR [esi+0x6152ee04],ebx
  404d1b:	adc    ch,BYTE PTR [eax]
  404d1d:	in     eax,dx
  404d1e:	add    BYTE PTR [ecx],dl
  404d20:	push   0xffffff87
  404d22:	aaa    
  404d23:	push   ds
  404d24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d25:	xchg   ecx,eax
  404d26:	mov    dl,0x35
  404d28:	loope  0x404d24
  404d2a:	test   DWORD PTR [edi],ebp
  404d2c:	and    eax,DWORD PTR [ebp-0x44]
  404d2f:	dec    eax
  404d30:	ins    DWORD PTR es:[edi],dx
  404d31:	das    
  404d32:	jecxz  0x404d76
  404d34:	or     bh,0x6c
  404d37:	ret    0x9183
  404d3a:	mov    bh,0x8f
  404d3c:	adc    DWORD PTR [ebx+0x49],0xeb158068
  404d43:	js     0x404cca
  404d45:	fdiv   st,st(4)
  404d47:	cmc    
  404d48:	mov    ebx,DWORD PTR [edx-0x7a14c100]
  404d4e:	pop    esp
  404d4f:	mov    eax,ds:0x831e8f14
  404d54:	cmp    eax,0x1abfe25c
  404d59:	inc    ebp
  404d5a:	mov    al,ds:0x664f47a6
  404d5f:	sbb    al,dh
  404d61:	xor    eax,0x5ae0fa24
  404d66:	jmp    0xa79aab52
  404d6b:	push   cs
  404d6c:	jae    0x404db6
  404d6e:	ins    DWORD PTR es:[edi],dx
  404d6f:	nop
  404d70:	int3   
  404d71:	dec    ecx
  404d72:	sub    esi,DWORD PTR [edx]
  404d74:	xchg   ebp,eax
  404d75:	cs cmc 
  404d77:	adc    DWORD PTR [edx+0x17],edx
  404d7a:	mov    bl,0xd4
  404d7c:	jle    0x404d9b
  404d7e:	jno    0x404daa
  404d80:	mov    eax,0xa9882f04
  404d85:	or     esi,edi
  404d87:	jns    0x404daf
  404d89:	or     BYTE PTR [esp+ebx*1-0x3d8605c5],bh
  404d90:	add    edi,ebx
  404d92:	aaa    
  404d93:	loopne 0x404d61
  404d95:	iret   
  404d96:	add    ebx,DWORD PTR [edi+0x5c5d109]
  404d9c:	(bad)  
  404d9d:	sar    BYTE PTR [edi-0x45],cl
  404da0:	sbb    al,0xd2
  404da2:	inc    ecx
  404da3:	fnstenv [ebx]
  404da5:	mov    bh,0xa
  404da7:	(bad)  
  404da8:	scas   al,BYTE PTR es:[edi]
  404da9:	mov    esi,0xaa1adcc
  404dae:	mov    esi,0xf0b00000
  404db3:	mov    bh,0xbe
  404db5:	push   ebp
  404db6:	mov    eax,0xc169f76d
  404dbc:	jecxz  0x404dcb
  404dbe:	pop    ebp
  404dbf:	mov    bl,0x11
  404dc1:	int3   
  404dc2:	add    al,0xb2
  404dc4:	dec    edi
  404dc5:	popa   
  404dc6:	xor    esp,DWORD PTR [edi-0x6149b06c]
  404dcc:	mov    edx,0x89481b5
  404dd1:	and    al,0xd8
  404dd3:	lea    esi,[esi]
  404dd5:	or     edi,ebp
  404dd7:	ds pop edx
  404dd9:	inc    esi
  404dda:	shl    BYTE PTR [edi],cl
  404ddc:	ins    BYTE PTR es:[edi],dx
  404ddd:	fsubr  st(4),st
  404ddf:	cmp    eax,0x34bc7b2e
  404de4:	call   0xa359d97c
  404de9:	sahf   
  404dea:	push   cs
  404deb:	sbb    BYTE PTR [ebp-0x7c],ah
  404dee:	cmp    DWORD PTR [edx],ebx
  404df0:	daa    
  404df1:	rcr    DWORD PTR [edi+0x1b],cl
  404df4:	mov    cl,0x3b
  404df6:	push   edi
  404df7:	sub    al,0x8f
  404df9:	push   esp
  404dfa:	sbb    ah,BYTE PTR ds:0x2f2dae39
  404e00:	sti    
  404e01:	sub    BYTE PTR [esi+eiz*1-0x53],dh
  404e05:	adc    eax,0xec762b43
  404e0a:	lds    ebp,FWORD PTR [edx]
  404e0c:	xor    BYTE PTR [esi],dl
  404e0e:	icebp  
  404e0f:	sub    dl,dl
  404e11:	shr    BYTE PTR [eax+0x5d940029],0x9f
  404e18:	mov    dl,0x3f
  404e1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e1b:	mov    ds:0x957f09b3,al
  404e20:	mov    eax,ds:0xa0cbd94b
  404e25:	jge    0x404e5a
  404e27:	sti    
  404e28:	add    BYTE PTR [ebx],dh
  404e2a:	add    cl,BYTE PTR ds:0x66d43274
  404e30:	inc    ebx
  404e31:	and    BYTE PTR [esi-0x27],bh
  404e34:	sbb    dh,cl
  404e36:	aas    
  404e37:	mov    bl,0x2d
  404e39:	into   
  404e3a:	fstp   QWORD PTR [ebx-0x9d440c0]
  404e40:	ja     0x404dff
  404e42:	imul   ecx,DWORD PTR [ebx+0x2e],0x1922a7ac
  404e49:	leave  
  404e4a:	hlt    
  404e4b:	xor    ebx,DWORD PTR [eax+edi*4-0x4554a1de]
  404e52:	pusha  
  404e53:	jecxz  0x404e47
  404e55:	mov    ebx,0xc58a9e
  404e5a:	cli    
  404e5b:	int3   
  404e5c:	clc    
  404e5d:	sub    DWORD PTR [edi+eiz*4],0x187673cf
  404e64:	xchg   esi,eax
  404e65:	bound  edi,QWORD PTR [eax-0xc985e8d]
  404e6b:	fs and al,0x66
  404e6e:	inc    ebp
  404e6f:	movlps QWORD PTR [edi+ebp*2],xmm6
  404e73:	mov    al,0x4a
  404e75:	xor    eax,0x7ddbb1
  404e7a:	push   edx
  404e7b:	(bad)  
  404e7c:	aas    
  404e7d:	xor    BYTE PTR [ebx],dh
  404e7f:	or     DWORD PTR [ebp+0x7],edx
  404e82:	and    DWORD PTR [ebx-0x15],ecx
  404e85:	pop    esi
  404e86:	push   eax
  404e87:	jge    0x404e0a
  404e89:	imul   esi,DWORD PTR ds:0x14ec97be,0x26dbfd00
  404e93:	inc    edx
  404e94:	inc    ebx
  404e95:	and    BYTE PTR [edi],0x94
  404e98:	sub    DWORD PTR [ebp-0x779224e4],esi
  404e9e:	in     eax,dx
  404e9f:	pop    ss
  404ea0:	add    al,0xbf
  404ea2:	xchg   cl,ch
  404ea4:	(bad)  
  404ea5:	scas   eax,DWORD PTR es:[edi]
  404ea6:	push   0x57dabceb
  404eab:	out    0x77,al
  404ead:	int3   
  404eae:	mov    edx,0xe5a63dde
  404eb3:	in     al,0xe3
  404eb5:	pop    ss
  404eb6:	mov    ebx,ds
  404eb8:	mov    ecx,0xaaf27b72
  404ebd:	shl    dh,1
  404ebf:	icebp  
  404ec0:	call   0x1740607e
  404ec5:	add    al,0x40
  404ec7:	add    DWORD PTR [ebp+0x6e],edx
  404eca:	das    
  404ecb:	in     al,dx
  404ecc:	lahf   
  404ecd:	js     0x404e71
  404ecf:	add    al,0xe6
  404ed1:	adc    ebp,ecx
  404ed3:	(bad)  
  404ed4:	sub    ebp,DWORD PTR [esp+esi*2+0x63c66215]
  404edb:	les    ebx,FWORD PTR [esi-0x4461ff7f]
  404ee1:	fsubr  st,st(2)
  404ee3:	test   eax,0x78551ac5
  404ee8:	mov    esi,0xc9473f44
  404eed:	xchg   ecx,eax
  404eee:	sub    edx,ecx
  404ef0:	retf   0x42d3
  404ef3:	aad    0xc8
  404ef5:	sbb    eax,0x5fc81cfd
  404efa:	xchg   edi,eax
  404efb:	jmp    0x404ef3
  404efd:	mov    ah,0x73
  404eff:	(bad)  
  404f00:	in     eax,dx
  404f01:	neg    BYTE PTR [eax]
  404f03:	mov    eax,ds:0xf0a748f3
  404f08:	in     al,dx
  404f09:	mov    cl,ch
  404f0b:	call   DWORD PTR [edi]
  404f0d:	ret    0x92db
  404f10:	sbb    BYTE PTR [ecx+esi*4],cl
  404f13:	pop    ebp
  404f14:	sbb    al,BYTE PTR [esi+0xf]
  404f17:	and    al,0x19
  404f19:	and    BYTE PTR [ebp+0x33],0x42
  404f1d:	test   al,0xad
  404f1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f20:	jmp    0x319a:0xf3c1efa8
  404f27:	js     0x404f65
  404f29:	call   0xcb6:0x8f110a73
  404f30:	mov    ?,WORD PTR [esi-0x8]
  404f33:	cmp    DWORD PTR [edi+0x78b03a7c],edi
  404f39:	gs jl  0x404ece
  404f3c:	gs jecxz 0x404f42
  404f3f:	xchg   BYTE PTR [edx+0x6b],al
  404f42:	pop    eax
  404f43:	add    BYTE PTR [ecx+0x3e0b48dd],ah
  404f49:	(bad)  
  404f4a:	icebp  
  404f4b:	dec    esi
  404f4c:	fldenv [ebx+0x7c]
  404f4f:	and    bh,cl
  404f51:	jmp    0x28c6:0x1016b5bb
  404f58:	mov    cl,0x76
  404f5a:	inc    esi
  404f5b:	lods   eax,DWORD PTR ds:[esi]
  404f5c:	dec    esi
  404f5d:	cdq    
  404f5e:	es push eax
  404f60:	scas   al,BYTE PTR es:[edi]
  404f61:	arpl   si,dx
  404f63:	or     ecx,DWORD PTR [ecx-0x38]
  404f66:	int3   
  404f67:	push   esi
  404f68:	out    0xdd,al
  404f6a:	cmp    eax,DWORD PTR [ebx]
  404f6c:	add    DWORD PTR [ecx-0x47],eax
  404f6f:	lods   eax,DWORD PTR ds:[esi]
  404f70:	and    DWORD PTR [edx+0x74be2a31],ebx
  404f76:	inc    ebx
  404f77:	mov    ch,0x59
  404f79:	setnp  BYTE PTR [eax]
  404f7c:	jbe    0x404f6a
  404f7e:	mov    dl,0xfa
  404f80:	pop    eax
  404f81:	mov    bl,0x1b
  404f83:	pop    edi
  404f84:	jbe    0x404fde
  404f86:	sbb    esp,esi
  404f88:	adc    BYTE PTR [esi],ch
  404f8a:	mov    eax,ds:0x2bd0ae67
  404f8f:	sbb    esi,eax
  404f91:	mov    DWORD PTR [esp+edi*4+0x7c0aa4e1],ecx
  404f98:	ja     0x404fe4
  404f9a:	dec    ecx
  404f9b:	sbb    al,0xc0
  404f9d:	loop   0x404fca
  404f9f:	jl     0x404f89
  404fa1:	sar    DWORD PTR [ecx+0xc],1
  404fa4:	jne    0x404fe0
  404fa6:	pop    ds
  404fa7:	push   ss
  404fa8:	add    dh,ah
  404faa:	cdq    
  404fab:	icebp  
  404fac:	ins    WORD PTR es:[edi],dx
  404fae:	adc    BYTE PTR [ebx+eiz*8-0x74d2a4b6],0x76
  404fb6:	ror    DWORD PTR [eax+0x79],0x13
  404fba:	and    esp,DWORD PTR [esi-0x3cf6901f]
  404fc0:	dec    ecx
  404fc1:	push   edi
  404fc2:	mov    eax,ds:0x7b000134
  404fc7:	push   ecx
  404fc8:	jecxz  0x405018
  404fca:	jmp    0x42eaab8d
  404fcf:	fcmovbe st,st(6)
  404fd1:	push   ebp
  404fd2:	or     ah,BYTE PTR [ebx+0x56]
  404fd5:	loope  0x404fc8
  404fd7:	add    eax,0xe8524c6c
  404fdc:	lods   al,BYTE PTR ds:[esi]
  404fdd:	call   0x840cdd9b
  404fe2:	leave  
  404fe3:	fstp   TBYTE PTR [edi+ebx*8]
  404fe6:	jno    0x404fa6
  404fe8:	or     al,BYTE PTR es:[edx]
  404feb:	push   eax
  404fec:	(bad)  
  404fed:	(bad)  
  404fee:	sub    DWORD PTR ds:0x8c330153,esi
  404ff4:	fwait
  404ff5:	popf   
  404ff6:	fld1   
  404ff8:	test   eax,0x31076b28
  404ffd:	xchg   esp,eax
  404ffe:	xchg   ecx,eax
  404fff:	bound  ebx,QWORD PTR [ecx]
  405001:	scas   al,BYTE PTR es:[edi]
  405002:	pop    ecx
  405003:	stos   DWORD PTR es:[edi],eax
  405004:	mov    cl,0x2a
  405006:	mov    cl,0xce
  405008:	mov    bl,0xa7
  40500a:	and    DWORD PTR [eax],esp
  40500c:	or     eax,DWORD PTR [eax]
  40500e:	xor    edi,ecx
  405010:	inc    esp
  405011:	add    BYTE PTR [eax],cl
  405013:	std    
  405014:	mul    BYTE PTR fs:[eax-0x40]
  405018:	add    dl,BYTE PTR [ebx+0x7dad0572]
  40501e:	or     bh,BYTE PTR [ecx-0x2a5de736]
  405024:	(bad)  [esi-0x16]
  405027:	imul   edi,DWORD PTR [ebx+ebp*1-0x3aee3308],0xa0747080
  405032:	add    eax,0x6d194db3
  405037:	push   es
  405038:	sub    bh,BYTE PTR [edi+ebp*1-0x47]
  40503c:	test   DWORD PTR [edx-0x81df1f9],edx
  405042:	add    al,0x4a
  405044:	pop    ebp
  405045:	cmp    eax,0x5834ed4c
  40504a:	dec    esi
  40504b:	push   edx
  40504c:	test   DWORD PTR [esi-0x2c03185a],esi
  405052:	inc    ebx
  405053:	sub    eax,ebp
  405055:	push   0xffffffcb
  405057:	nop
  405058:	mov    ds:0xd35590f,al
  40505d:	loope  0x405080
  40505f:	mov    BYTE PTR [edx-0x7c],ch
  405062:	leave  
  405063:	in     al,0x79
  405065:	rol    BYTE PTR [ecx+0x52],cl
  405068:	sbb    al,0xb7
  40506a:	push   ebx
  40506b:	out    dx,eax
  40506c:	mov    cl,0x59
  40506e:	or     ecx,DWORD PTR [edx-0x2c]
  405071:	cmp    al,0x0
  405073:	jle    0x404ffd
  405075:	in     eax,dx
  405076:	test   DWORD PTR [esi+0x14e08a32],esi
  40507c:	nop
  40507d:	and    eax,0x422d9c0e
  405082:	imul   esi,DWORD PTR [ebx+eax*2+0x5],0xffffffa2
  405087:	sbb    al,0xf6
  405089:	popa   
  40508a:	mov    DWORD PTR [esi+0x5fc70dba],0x52a04612
  405094:	lahf   
  405095:	sub    BYTE PTR [eax-0x43b16d],bl
  40509b:	test   BYTE PTR [eax+0x20],0x50
  40509f:	or     BYTE PTR [ecx+0x579d37a7],bh
  4050a5:	inc    esi
  4050a6:	daa    
  4050a7:	retf   
  4050a8:	mov    bh,0x2
  4050aa:	inc    eax
  4050ab:	sahf   
  4050ac:	mov    ebp,0x5e40ef59
  4050b1:	cmc    
  4050b2:	xchg   DWORD PTR ds:0x7cb0a3db,esp
  4050b8:	inc    edx
  4050b9:	and    edi,edx
  4050bb:	rol    DWORD PTR [esp+edi*4+0x78],1
  4050bf:	imul   esp
  4050c1:	sub    bl,BYTE PTR [edi]
  4050c3:	cmp    ah,BYTE PTR [ebp-0x1d]
  4050c6:	test   BYTE PTR [ebp-0x576f9924],0xca
  4050cd:	out    0x3e,eax
  4050cf:	inc    BYTE PTR [edx+0xe33587c]
  4050d5:	dec    ebp
  4050d6:	pusha  
  4050d7:	add    BYTE PTR [edx+0x5707815d],dh
  4050dd:	ja     0x405129
  4050df:	test   al,0x29
  4050e1:	or     BYTE PTR [esi+0x7ee83ccf],bl
  4050e7:	fucomip st,st(2)
  4050e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050ea:	jmp    0x4050a3
  4050ec:	dec    DWORD PTR [ebp+0xd611764]
  4050f2:	loopne 0x405163
  4050f4:	test   BYTE PTR [edx+0x131d4899],cl
  4050fa:	xor    eax,0x8634b02f
  4050ff:	adc    BYTE PTR [esi+0x5be7427c],0x42
  405106:	cwde   
  405107:	rcr    BYTE PTR [ecx],cl
  405109:	scas   eax,DWORD PTR es:[edi]
  40510a:	xor    BYTE PTR [esi-0x26ddb637],al
  405110:	and    DWORD PTR [edi],esi
  405112:	call   0x5130:0x6d4917d
  405119:	jnp    0x4050b2
  40511b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40511c:	mov    al,ss:0x28937ad
  405122:	std    
  405123:	call   0xd30e:0x7d9d251e
  40512a:	cld    
  40512b:	fsub   DWORD PTR [eax+0x38]
  40512e:	out    0x85,eax
  405130:	(bad)  
  405131:	dec    edx
  405132:	xchg   edx,edx
  405134:	test   al,0xad
  405136:	add    bl,BYTE PTR [ebx+0x376a2679]
  40513c:	add    dh,cl
  40513e:	add    DWORD PTR [eax-0x5c],ebp
  405141:	xor    DWORD PTR [edi+0x7bf62ff0],ebx
  405147:	sahf   
  405148:	sub    esi,eax
  40514a:	or     bh,BYTE PTR [esi]
  40514c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40514d:	push   edi
  40514e:	lock and esi,DWORD PTR [eax+ebp*4]
  405152:	xchg   edx,eax
  405153:	test   BYTE PTR [eax-0x32fe8a81],ah
  405159:	data16 fisubr WORD PTR [eax-0x54c63777]
  405160:	(bad)  
  405161:	push   ds
  405162:	repz adc DWORD PTR [bx+si],0x189f1bc4
  40516a:	jbe    0x4051df
  40516c:	xor    ebp,edi
  40516e:	nop
  40516f:	popa   
  405170:	test   al,0x50
  405172:	out    dx,eax
  405173:	sbb    BYTE PTR [edi+edx*4],ch
  405176:	or     al,0x84
  405178:	or     DWORD PTR [edi+0x63d4d4c3],0xffe40a68
  405182:	add    BYTE PTR [edx],0x74
  405185:	shl    BYTE PTR [edi+eiz*2-0x519ebd9c],1
  40518c:	in     al,0x1
  40518e:	enter  0xfecb,0x6c
  405192:	sbb    DWORD PTR ds:0x3ffff93e,esp
  405198:	mov    ebx,0x73f8d4a3
  40519d:	adc    al,0x31
  40519f:	pushf  
  4051a0:	push   ecx
  4051a1:	add    BYTE PTR [ebx-0x1368d74],ch
  4051a7:	imul   edx,DWORD PTR [edi],0x61
  4051aa:	push   ds
  4051ab:	jl     0x4051ee
  4051ad:	test   eax,0xbb249cad
  4051b2:	clc    
  4051b3:	inc    ebx
  4051b4:	retf   0xc543
  4051b7:	in     al,0xae
  4051b9:	mov    esi,0x2e15ecdf
  4051be:	xor    BYTE PTR [ebx],cl
  4051c0:	jae    0x4051d6
  4051c2:	xlat   BYTE PTR ds:[ebx]
  4051c3:	mov    ah,0x9d
  4051c5:	les    ebp,FWORD PTR [edx]
  4051c7:	push   ebx
  4051c8:	clc    
  4051c9:	xor    al,0x9b
  4051cb:	sub    ecx,DWORD PTR [edi]
  4051cd:	xchg   esp,eax
  4051ce:	out    dx,al
  4051cf:	int3   
  4051d0:	imul   ecx,DWORD PTR [esi+0x2e847363],0xabe194d4
  4051da:	sbb    al,0xc0
  4051dc:	pop    eax
  4051dd:	add    edi,DWORD PTR [ecx-0x7dfec2a5]
  4051e3:	add    al,0xd3
  4051e5:	cdq    
  4051e6:	push   ecx
  4051e7:	and    esi,DWORD PTR [esi-0x1febc98f]
  4051ed:	sbb    DWORD PTR [ebx+0x2c0b84f4],ebp
  4051f3:	dec    esp
  4051f4:	imul   esi,DWORD PTR [ebx-0x7d],0xffffffac
  4051f8:	push   cs
  4051f9:	add    al,ch
  4051fb:	cld    
  4051fc:	stos   DWORD PTR es:[edi],eax
  4051fd:	mov    ebp,0xd8cb4050
  405202:	add    dh,dh
  405204:	arpl   WORD PTR [esi],si
  405206:	add    dl,bl
  405208:	dec    ecx
  405209:	add    dl,BYTE PTR [ebx-0x7e]
  40520c:	xor    al,0x44
  40520e:	call   0x3e48:0xff23834a
  405215:	mov    WORD PTR [ecx],ss
  405217:	sar    BYTE PTR [edx-0x15],0x74
  40521b:	cmp    eax,0xb5cdd251
  405220:	in     eax,dx
  405221:	mov    bl,0xa8
  405223:	xlat   BYTE PTR ds:[ebx]
  405224:	pop    eax
  405225:	sbb    al,BYTE PTR [esi-0x11]
  405228:	in     al,0x7b
  40522a:	and    eax,DWORD PTR [edi-0x7c]
  40522d:	ins    BYTE PTR es:[edi],dx
  40522e:	jne    0x4051ef
  405230:	cmp    BYTE PTR [ebx],cl
  405232:	adc    ch,cl
  405234:	lea    esp,[esi+edi*8-0x643ccedb]
  40523b:	js     0x405217
  40523d:	cli    
  40523e:	and    al,BYTE PTR [eax+0x5e]
  405241:	lahf   
  405242:	inc    edi
  405243:	adc    ah,bl
  405245:	xor    ch,BYTE PTR [ecx-0x33a8a896]
  40524b:	cdq    
  40524c:	add    esp,esp
  40524e:	push   es
  40524f:	loope  0x405207
  405251:	and    DWORD PTR [ebx-0xd],0xfffffff9
  405255:	sub    ecx,DWORD PTR [ebp-0x17b44175]
  40525b:	push   es
  40525c:	ins    DWORD PTR es:[edi],dx
  40525d:	jb     0x4052b0
  40525f:	pop    esi
  405260:	rcl    DWORD PTR [ebx],1
  405262:	xor    al,0x6c
  405264:	fs mov edx,0xdbd804da
  40526a:	mov    edi,0xccbf1c00
  40526f:	jmp    0x8ceb4c68
  405274:	xchg   BYTE PTR [edx-0x67],dl
  405277:	push   cs
  405278:	fs mov edx,0x4781694a
  40527e:	popa   
  40527f:	push   ecx
  405280:	adc    bh,ah
  405282:	in     al,dx
  405283:	xor    eax,0x9977ecad
  405288:	jnp    0x4052d7
  40528a:	xlat   BYTE PTR ds:[ebx]
  40528b:	std    
  40528c:	push   esi
  40528d:	jge    0x4052cc
  40528f:	mov    ecx,0xde95cd0f
  405294:	stos   BYTE PTR es:[edi],al
  405295:	out    0x3a,al
  405297:	jno    0x40530d
  405299:	ja     0x405249
  40529b:	push   ss
  40529c:	adc    edx,esi
  40529e:	fld    TBYTE PTR ds:0x497369c0
  4052a4:	fst    QWORD PTR [edi-0x3c]
  4052a7:	in     eax,0xcb
  4052a9:	adc    BYTE PTR [ecx-0x5687597f],cl
  4052af:	xchg   ecx,eax
  4052b0:	clc    
  4052b1:	add    BYTE PTR [edx],bh
  4052b3:	not    BYTE PTR [ebp+0x63599722]
  4052b9:	imul   esi,DWORD PTR [edx],0x3e
  4052bc:	(bad)  
  4052bd:	cmc    
  4052be:	xchg   DWORD PTR [esi],eax
  4052c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052c1:	mov    ch,0xc7
  4052c3:	pusha  
  4052c4:	ret    0x709b
  4052c7:	into   
  4052c8:	in     al,dx
  4052c9:	sbb    ebx,ebp
  4052cb:	test   al,0x49
  4052cd:	mov    WORD PTR [ecx+eax*2],es
  4052d0:	add    BYTE PTR [esi+0x3b],ch
  4052d3:	leave  
  4052d4:	es retf 
  4052d6:	xor    eax,0xa5d5891c
  4052db:	mov    bl,0xee
  4052dd:	xor    BYTE PTR [ebx],ah
  4052df:	sti    
  4052e0:	aad    0xa1
  4052e2:	mov    edx,0xc87cb16e
  4052e7:	cld    
  4052e8:	sbb    eax,0x795620ea
  4052ed:	pop    es
  4052ee:	inc    ebx
  4052ef:	lock mov edx,0x1698735f
  4052f5:	js     0x405287
  4052f7:	call   0xc00d:0xe1ef27c1
  4052fe:	or     DWORD PTR [edi+0x5c],ebp
  405301:	rol    dl,1
  405303:	psubw  mm5,mm6
  405306:	gs cmc 
  405308:	arpl   WORD PTR [eax+0x37],di
  40530b:	push   ebp
  40530c:	out    dx,eax
  40530d:	push   esi
  40530e:	fsub   QWORD PTR [ebp+eiz*1-0x68]
  405312:	mov    ds:0x8037a9d5,eax
  405317:	iret   
  405318:	push   ds
  405319:	rcr    BYTE PTR [esi],0x7f
  40531c:	mov    dl,0xdf
  40531e:	stc    
  40531f:	stc    
  405320:	pop    es
  405321:	pop    es
  405322:	push   ebx
  405323:	xor    cl,BYTE PTR [ebx-0x60]
  405326:	mov    ch,0x40
  405328:	add    bh,cl
  40532a:	(bad)  
  40532b:	xlat   BYTE PTR ds:[ebx]
  40532c:	push   esp
  40532d:	test   al,0x2c
  40532f:	and    BYTE PTR [edx+0x1ee7fab0],dh
  405335:	add    bh,cl
  405337:	sbb    eax,0x7f58a9ca
  40533c:	xor    ah,BYTE PTR ds:0x54bfa3f7
  405342:	pop    ds
  405343:	sub    edi,DWORD PTR [edi]
  405345:	add    BYTE PTR [eax],bh
  405347:	enter  0x4b44,0xa7
  40534b:	mov    dh,0x85
  40534d:	pop    es
  40534e:	adc    BYTE PTR [ecx-0x1d],0x3
  405352:	xchg   BYTE PTR [edx-0x1d],al
  405355:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  40535b:	inc    edx
  40535c:	jecxz  0x405361
  40535e:	xchg   BYTE PTR [edx-0x1d],al
  405361:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  405367:	inc    edx
  405368:	or     ch,cl
  40536a:	test   DWORD PTR [edx+0xa],eax
  40536d:	jmp    0xe84a95f7
  405372:	test   DWORD PTR [edx+0xa],eax
  405375:	call   0xe84a95ff
  40537a:	test   DWORD PTR [edx+0xa],eax
  40537d:	call   0xeb4a9607
  405382:	test   DWORD PTR [edx+0xa],eax
  405385:	jmp    0x40530c
  405387:	inc    edx
  405388:	or     ch,bl
  40538a:	test   DWORD PTR [edx+0xa],eax
  40538d:	jmp    0x405314
  40538f:	inc    edx
  405390:	or     ch,dl
  405392:	test   DWORD PTR [edx+0xa],eax
  405395:	jmp    0x8500:0xea0a4285
  40539c:	inc    edx
  40539d:	or     ch,dl
  40539f:	test   DWORD PTR [edx+0xa],eax
  4053a2:	in     eax,dx
  4053a3:	test   DWORD PTR [edx+0xa],eax
  4053a6:	in     eax,0x85
  4053a8:	inc    edx
  4053a9:	or     ch,ch
  4053ab:	test   DWORD PTR [edx+0xa],eax
  4053ae:	in     eax,0x85
  4053b0:	inc    edx
  4053b1:	or     ch,ah
  4053b3:	test   DWORD PTR [edx+0xa],eax
  4053b6:	in     al,0x85
  4053b8:	inc    edx
  4053b9:	or     ch,ah
  4053bb:	test   DWORD PTR [edx+0xa],eax
  4053be:	in     al,0x85
  4053c0:	inc    edx
  4053c1:	or     ch,cl
  4053c3:	test   DWORD PTR [edx+0xa],eax
  4053c6:	fst    DWORD PTR [esp+esi*1+0xa]
  4053ca:	loope  0x405356
  4053cc:	cmp    ecx,DWORD PTR [ebx+eiz*8]
  4053cf:	cmp    BYTE PTR ds:0x3786f50e,0x8
  4053d6:	out    dx,eax
  4053d7:	test   BYTE PTR [ecx],bh
  4053d9:	or     ch,cl
  4053db:	test   DWORD PTR [edx+0xa],eax
  4053de:	jmp    0x4a9668
  4053e3:	pop    ds
  4053e4:	inc    esi
  4053e5:	or     al,BYTE PTR [eax]
  4053e7:	pop    ds
  4053e8:	inc    esi
  4053e9:	or     al,BYTE PTR [eax]
  4053eb:	out    dx,al
  4053ec:	inc    ebp
  4053ed:	or     al,BYTE PTR [eax]
  4053ef:	out    dx,al
  4053f0:	inc    ebp
  4053f1:	or     al,BYTE PTR [eax]
  4053f3:	fld    QWORD PTR [ebp+0xa]
  4053f6:	add    ch,bl
  4053f8:	inc    ebp
  4053f9:	or     al,BYTE PTR [eax]
  4053fb:	in     al,dx
  4053fc:	inc    ebp
  4053fd:	or     al,BYTE PTR [eax]
  4053ff:	add    ah,ch
  405401:	inc    ebp
  405402:	or     al,BYTE PTR [eax]
  405404:	jecxz  0x40544b
  405406:	or     al,BYTE PTR [eax]
  405408:	jecxz  0x40544f
  40540a:	or     al,BYTE PTR [eax]
  40540c:	mov    dl,0x45
  40540e:	or     al,BYTE PTR [eax]
  405410:	mov    ds:0xa1000a45,al
  405415:	inc    ebp
  405416:	or     al,BYTE PTR [eax]
  405418:	mov    eax,ds:0xb0000a45
  40541d:	inc    ebp
  40541e:	or     al,BYTE PTR [eax]
  405420:	mov    al,ds:0x97000a45
  405425:	inc    ebp
  405426:	or     al,BYTE PTR [eax]
  405428:	xchg   edi,eax
  405429:	inc    ebp
  40542a:	or     al,BYTE PTR [eax]
  40542c:	inc    bp
  40542e:	or     al,BYTE PTR [eax]
  405430:	inc    bp
  405432:	or     al,BYTE PTR [eax]
  405434:	jne    0x40547b
  405436:	or     al,BYTE PTR [eax]
  405438:	jne    0x40547f
  40543a:	or     al,BYTE PTR [eax]
  40543c:	fs inc ebp
  40543e:	or     al,BYTE PTR [eax]
  405440:	fs inc ebp
  405442:	or     al,BYTE PTR [eax]
  405444:	pop    ebx
  405445:	inc    ebp
  405446:	or     al,BYTE PTR [eax]
  405448:	pop    ebx
  405449:	inc    ebp
  40544a:	or     al,BYTE PTR [eax]
  40544c:	sub    al,BYTE PTR [ebp+0xa]
  40544f:	add    BYTE PTR [edx+0x45],bl
  405452:	or     al,BYTE PTR [eax]
  405454:	pop    ds
  405455:	inc    ebp
  405456:	or     al,BYTE PTR [eax]
  405458:	pop    ds
  405459:	inc    ebp
  40545a:	or     al,BYTE PTR [eax]
  40545c:	xchg   BYTE PTR [ebx+0x9],bl
  40545f:	add    BYTE PTR [esi+0x95b],al
  405465:	xchg   BYTE PTR [ebx+0x9],bl
  405468:	add    BYTE PTR [esi-0x79fff6a5],al
  40546e:	pop    ebx
  40546f:	or     DWORD PTR [eax],eax
  405471:	xchg   BYTE PTR [ebx+0x9],bl
  405474:	add    BYTE PTR [esi-0x79fff6a5],al
  40547a:	pop    ebx
  40547b:	or     DWORD PTR [eax],eax
  40547d:	xchg   BYTE PTR [ebx+0x9],bl
  405480:	add    BYTE PTR [esi-0x79fff6a5],al
  405486:	pop    ebx
  405487:	or     DWORD PTR [eax],eax
  405489:	xchg   BYTE PTR [ebx+0x9],bl
  40548c:	add    BYTE PTR [esi-0x79fff6a5],al
  405492:	pop    ebx
  405493:	or     DWORD PTR [eax],eax
  405495:	xchg   BYTE PTR [ebp+0x9],bl
  405498:	add    BYTE PTR [esi-0x79fff6a4],al
  40549e:	pop    eax
  40549f:	or     DWORD PTR [eax],eax
  4054a1:	xchg   BYTE PTR [ebx+0x9],bl
  4054a4:	add    BYTE PTR [esi-0x79f7f6b1],al
  4054aa:	xlat   BYTE PTR ds:[ebx]
  4054ab:	or     eax,0x99d8608
  4054b0:	or     BYTE PTR [esi-0x79f7f1db],al
  4054b6:	sub    eax,0xb586080e
  4054bb:	or     DWORD PTR [eax],ecx
  4054bd:	xchg   ch,bh
  4054bf:	or     eax,0x9858608
  4054c4:	or     BYTE PTR [esi+0x8095d],al
  4054ca:	xchg   ch,ah
  4054cc:	or     BYTE PTR [eax],cl
  4054ce:	xchg   BYTE PTR ds:0xb586080e,ch
  4054d4:	or     DWORD PTR [eax],ecx
  4054d6:	xchg   BYTE PTR [edx-0x11],al
  4054d9:	add    edi,DWORD PTR [esi+0x42]
  4054dc:	push   edi
  4054dd:	add    ecx,DWORD PTR [esi-0x71fbe0be]
  4054e3:	inc    edx
  4054e4:	xchg   DWORD PTR [ebx],eax
  4054e6:	jle    0x40552a
  4054e8:	loope  0x4054ed
  4054ea:	jle    0x40552e
  4054ec:	popa   
  4054ed:	add    ecx,DWORD PTR [esi-0x71fbdebe]
  4054f3:	inc    edx
  4054f4:	mov    eax,ds:0x1427e03
  4054f9:	add    al,0x7e
  4054fb:	inc    edx
  4054fc:	add    DWORD PTR [ebx],0x3c1428e
  405502:	mov    es,WORD PTR [edx+0x41]
  405505:	add    edi,DWORD PTR [esi+0x42]
  405508:	rol    DWORD PTR [ebx],1
  40550a:	jle    0x40554e
  40550c:	push   ecx
  40550d:	add    ecx,DWORD PTR [esi-0x71fc6ebe]
  405513:	inc    edx
  405514:	adc    DWORD PTR [ebx],eax
  405516:	jle    0x40555a
  405518:	rol    DWORD PTR [ebx],1
  40551a:	jle    0x40555e
  40551c:	push   ecx
  40551d:	add    ecx,DWORD PTR [esi-0x71fc6ebe]
  405523:	inc    edx
  405524:	adc    DWORD PTR [ebx],eax
  405526:	jle    0x40556a
  405528:	stc    
  405529:	add    edi,DWORD PTR [esi+0x42]
  40552c:	jns    0x405531
  40552e:	add    BYTE PTR [esi-0x71fc56be],cl
  405534:	inc    edx
  405535:	sub    DWORD PTR [ebx],eax
  405537:	jle    0x40557b
  405539:	sbb    DWORD PTR [esi+edi*2],eax
  40553c:	inc    edx
  40553d:	cdq    
  40553e:	add    al,0x8e
  405540:	inc    edx
  405541:	dec    ecx
  405542:	add    al,0x8e
  405544:	inc    edx
  405545:	leave  
  405546:	add    al,0x7e
  405548:	inc    edx
  405549:	jmp    0x6982d351
  40554e:	add    al,0x8e
  405550:	inc    edx
  405551:	or     dl,BYTE PTR [ebx]
  405553:	cmp    BYTE PTR [edx],0xa
  405556:	xchg   ebx,eax
  405557:	mov    bh,BYTE PTR [edx]
  405559:	or     ah,bl
  40555b:	test   DWORD PTR [edx],edi
  40555d:	or     ah,BYTE PTR [ebx-0x76]
  405560:	cmp    cl,BYTE PTR [edx]
  405562:	adc    eax,DWORD PTR [edx-0x756cf5c6]
  405568:	cmp    cl,BYTE PTR [edx]
  40556a:	out    dx,eax
  40556b:	test   DWORD PTR [edx],edi
  40556d:	or     ah,BYTE PTR [edi-0x76]
  405570:	cmp    cl,BYTE PTR [edx]
  405572:	das    
  405573:	cmp    BYTE PTR [edx],0xa
  405576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405577:	mov    bh,BYTE PTR [edx]
  405579:	or     cl,BYTE PTR [edi]
  40557b:	cmp    BYTE PTR [edx],0xa
  40557e:	xchg   DWORD PTR [edx-0x7a30f5c6],ecx
  405584:	cmp    cl,BYTE PTR [edx]
  405586:	inc    edi
  405587:	mov    bh,BYTE PTR [edx]
  405589:	or     bl,bh
  40558b:	test   DWORD PTR [edx],edi
  40558d:	or     dl,BYTE PTR [edi-0x76]
  405590:	cmp    cl,BYTE PTR [edx]
  405592:	lahf   
  405593:	add    BYTE PTR [ebp-0x75e8f5c6],al
  405599:	cmp    cl,BYTE PTR [edx]
  40559b:	fild   WORD PTR [ebp-0x75a8f5c6]
  4055a1:	cmp    cl,BYTE PTR [edx]
  4055a3:	lahf   
  4055a4:	test   DWORD PTR [edx],edi
  4055a6:	or     dl,BYTE PTR [edi]
  4055a8:	mov    bh,BYTE PTR [edx]
  4055aa:	or     dh,bh
  4055ac:	test   DWORD PTR [edx],edi
  4055ae:	or     ch,BYTE PTR [edi-0x76]
  4055b1:	cmp    cl,BYTE PTR [edx]
  4055b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055b4:	test   DWORD PTR [edx],edi
  4055b6:	or     bl,BYTE PTR [edi]
  4055b8:	mov    bh,BYTE PTR [edx]
  4055ba:	or     dl,BYTE PTR [edi]
  4055bc:	cmp    BYTE PTR [edx],0xa
  4055bf:	pop    DWORD PTR [ebp-0x7db8f5c6]
  4055c5:	cmp    cl,BYTE PTR [edx]
  4055c7:	mov    edi,0xa3a85
  4055cc:	popa   
  4055cd:	inc    edx
  4055ce:	add    al,BYTE PTR [eax]
  4055d0:	loope  0x405613
  4055d2:	add    al,BYTE PTR [eax]
  4055d4:	xchg   ecx,eax
  4055d5:	add    al,BYTE PTR ds:[eax]
  4055d8:	add    DWORD PTR [edx+0x2],eax
  4055db:	add    BYTE PTR [ecx],ah
  4055dd:	inc    edx
  4055de:	add    al,BYTE PTR [eax]
  4055e0:	rol    DWORD PTR [ecx+0x2],0x0
  4055e4:	jno    0x405624
  4055e6:	add    al,BYTE PTR [eax]
  4055e8:	add    DWORD PTR [edx+0x2],eax
  4055eb:	add    BYTE PTR [esi],bl
  4055ed:	inc    edx
  4055ee:	add    al,BYTE PTR [eax]
  4055f0:	outs   dx,BYTE PTR ds:[esi]
  4055f1:	inc    ecx
  4055f2:	add    al,BYTE PTR [eax]
  4055f4:	scas   al,BYTE PTR es:[edi]
  4055f5:	add    al,BYTE PTR ds:[eax]
  4055f8:	add    BYTE PTR [esi],bl
  4055fa:	inc    edx
  4055fb:	add    al,BYTE PTR [eax]
  4055fd:	jle    0x40563d
  4055ff:	add    al,BYTE PTR [eax]
  405601:	push   cs
  405602:	inc    edx
  405603:	add    al,BYTE PTR [eax]
  405605:	into   
  405606:	inc    ecx
  405607:	add    al,BYTE PTR [eax]
  405609:	ds inc ecx
  40560b:	add    al,BYTE PTR [eax]
  40560d:	scas   al,BYTE PTR es:[edi]
  40560e:	inc    ecx
  40560f:	add    al,BYTE PTR [eax]
  405611:	pop    esi
  405612:	inc    ecx
  405613:	add    al,BYTE PTR [eax]
  405615:	push   ds
  405616:	inc    edx
  405617:	add    al,BYTE PTR [eax]
  405619:	mov    es,WORD PTR [ecx+0x2]
  40561c:	add    dh,cl
  40561e:	inc    ecx
  40561f:	add    al,BYTE PTR [eax]
  405621:	ds inc ecx
  405623:	add    al,BYTE PTR [eax]
  405625:	inc    BYTE PTR [ecx+0x2]
  405628:	add    BYTE PTR [esi+0x41],ch
  40562b:	add    al,BYTE PTR [eax]
  40562d:	xchg   esi,eax
  40562e:	inc    ecx
  40562f:	add    al,BYTE PTR [eax]
  405631:	test   BYTE PTR [ecx+0x2],0x0
  405635:	es inc ecx
  405637:	add    al,BYTE PTR [eax]
  405639:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40563a:	inc    ecx
  40563b:	add    al,BYTE PTR [eax]
  40563d:	xchg   esi,eax
  40563e:	add    al,BYTE PTR ds:[eax]
  405641:	idiv   BYTE PTR ds:0x2860002
  405647:	push   cs
  405648:	or     BYTE PTR [esi-0x79f7f17e],al
  40564e:	bound  ecx,QWORD PTR [ecx]
  405650:	or     BYTE PTR [esi-0x79f7f21e],al
  405656:	xor    cl,BYTE PTR [esi]
  405658:	or     BYTE PTR [esi+0x80eb2],al
  40565e:	xchg   BYTE PTR [edx+0x9],ah
  405661:	or     BYTE PTR [esi-0x79f7f21e],al
  405667:	xor    cl,BYTE PTR [esi]
  405669:	or     BYTE PTR [esi-0x79f7f14e],al
  40566f:	push   esi
  405670:	or     DWORD PTR [eax],ecx
  405672:	xchg   dh,bl
  405674:	or     eax,0xe168608
  405679:	or     BYTE PTR [esi-0x79f7f162],al
  40567f:	ss push cs
  405681:	or     BYTE PTR [esi-0x79f7f142],al
  405687:	jbe    0x405692
  405689:	or     BYTE PTR [esi-0x79f7f202],al
  40568f:	or     WORD PTR [eax],cx
  405692:	xchg   dh,ch
  405694:	or     eax,0x9a68608
  405699:	or     BYTE PTR [esi-0x79f7f1d2],al
  40569f:	or     WORD PTR [eax],cx
  4056a2:	xchg   dh,ch
  4056a4:	or     eax,0x9a68608
  4056a9:	or     BYTE PTR [esi-0x79f7f1d2],al
  4056af:	dec    esi
  4056b0:	or     DWORD PTR [eax],ecx
  4056b2:	xchg   dh,dl
  4056b4:	or     eax,0x99e8608
  4056b9:	or     BYTE PTR [esi-0x79f7f1da],al
  4056bf:	inc    edx
  4056c0:	push   ds
  4056c1:	add    al,0x0
  4056c3:	mov    es,WORD PTR [edx-0x7a]
  4056c6:	add    ecx,DWORD PTR [esi+0x7e044e42]
  4056cc:	inc    edx
  4056cd:	mov    dh,0x3
  4056cf:	jle    0x405713
  4056d1:	out    dx,al
  4056d2:	add    ecx,DWORD PTR [esi-0x71fca9be]
  4056d8:	inc    edx
  4056d9:	push   ds
  4056da:	add    al,0x7e
  4056dc:	inc    edx
  4056dd:	xchg   BYTE PTR [ebx],al
  4056df:	jle    0x405723
  4056e1:	out    dx,al
  4056e2:	add    ecx,DWORD PTR [esi-0x71fca9be]
  4056e8:	inc    edx
  4056e9:	push   ds
  4056ea:	add    al,0x7e
  4056ec:	inc    edx
  4056ed:	xchg   BYTE PTR [ebx],al
  4056ef:	jle    0x405733
  4056f1:	rol    BYTE PTR [ebx],1
  4056f3:	pop    DWORD PTR [edx-0x30]
  4056f6:	add    al,0x8f
  4056f8:	inc    edx
  4056f9:	push   eax
  4056fa:	add    edi,DWORD PTR [edi+0x42]
  4056fd:	push   eax
  4056fe:	add    al,0x7f
  405700:	inc    edx
  405701:	mov    al,0x3
  405703:	pop    DWORD PTR [edx-0x50]
  405706:	add    al,0x8f
  405708:	inc    edx
  405709:	xor    BYTE PTR [ebx],al
  40570b:	jg     0x40574f
  40570d:	xor    BYTE PTR [edi+edi*2],al
  405710:	inc    edx
  405711:	lock add ecx,DWORD PTR [edi-0x70fb0fbe]
  405718:	inc    edx
  405719:	jo     0x40571e
  40571b:	jg     0x40575f
  40571d:	jo     0x405723
  40571f:	jg     0x405763
  405721:	nop
  405722:	add    ecx,DWORD PTR [edi+0x49042]
  405728:	pop    DWORD PTR [edx+0x10]
  40572b:	add    edi,DWORD PTR [edi+0x42]
  40572e:	adc    BYTE PTR [edi+edi*2],al
  405731:	inc    edx
  405732:	clc    
  405733:	add    ecx,DWORD PTR [edi-0x70fb07be]
  405739:	inc    edx
  40573a:	or     ah,BYTE PTR [edx-0x7b]
  40573d:	cmp    DWORD PTR [edx],ecx
  40573f:	bound  eax,QWORD PTR [edx-0x75cdf5c7]
  405745:	cmp    DWORD PTR [edx],ecx
  405747:	xor    al,BYTE PTR [ebp-0x755df5c7]
  40574d:	cmp    DWORD PTR [edx],ecx
  40574f:	mov    ds:0x120a3985,al
  405754:	mov    bh,BYTE PTR [ecx]
  405756:	or     dl,BYTE PTR [edx]
  405758:	test   DWORD PTR [ecx],edi
  40575a:	or     al,BYTE PTR [edx-0x7df5c676]
  405760:	test   DWORD PTR [ecx],edi
  405762:	or     dl,BYTE PTR [edx]
  405764:	mov    bh,BYTE PTR [ecx]
  405766:	or     dl,BYTE PTR [edx]
  405768:	test   DWORD PTR [ecx],edi
  40576a:	or     al,BYTE PTR [edx-0x7df5c676]
  405770:	test   DWORD PTR [ecx],edi
  405772:	or     ah,dl
  405774:	test   DWORD PTR [ecx],edi
  405776:	or     ah,dl
  405778:	test   BYTE PTR [ecx],bh
  40577a:	or     dl,BYTE PTR [edx-0x76]
  40577d:	cmp    DWORD PTR [edx],ecx
  40577f:	push   edx
  405780:	test   DWORD PTR [ecx],edi
  405782:	or     al,dl
  405784:	test   DWORD PTR [ecx],edi
  405786:	or     al,dl
  405788:	test   BYTE PTR [ecx],bh
  40578a:	or     dh,BYTE PTR [edx]
  40578c:	add    BYTE PTR [edx-0x7acdf5c7],cl
  405792:	cmp    DWORD PTR [edx],ecx
  405794:	add    cl,BYTE PTR [edx-0x7afdf5c7]
  40579a:	cmp    DWORD PTR [edx],ecx
  40579c:	jb     0x405728
  40579e:	cmp    DWORD PTR [edx],ecx
  4057a0:	jb     0x405727
  4057a2:	cmp    DWORD PTR [edx],ecx
  4057a4:	mov    ds:0xa20a3985,al
  4057a9:	test   BYTE PTR [ecx],bh
  4057ab:	or     dl,BYTE PTR [edx]
  4057ad:	mov    bh,BYTE PTR [ecx]
  4057af:	or     dl,BYTE PTR [edx]
  4057b1:	test   DWORD PTR [ecx],edi
  4057b3:	or     al,BYTE PTR [eax]
  4057b5:	jo     0x4057fd
  4057b7:	add    eax,DWORD PTR [eax]
  4057b9:	pusha  
  4057ba:	inc    ebp
  4057bb:	add    eax,DWORD PTR [eax]
  4057bd:	loopne 0x405805
  4057bf:	add    eax,DWORD PTR [eax]
  4057c1:	loopne 0x405808
  4057c3:	add    eax,DWORD PTR [eax]
  4057c5:	mov    al,0x46
  4057c7:	add    eax,DWORD PTR [eax]
  4057c9:	mov    al,ds:0x20000345
  4057ce:	inc    esi
  4057cf:	add    eax,DWORD PTR [eax]
  4057d1:	and    BYTE PTR [ebp+0x3],al
  4057d4:	add    BYTE PTR [eax-0x7ffffcba],dl
  4057da:	inc    ebp
  4057db:	add    eax,DWORD PTR [eax]
  4057dd:	add    BYTE PTR [esi+0x3],al
  4057e0:	add    BYTE PTR [eax],al
  4057e2:	inc    ebp
  4057e3:	add    eax,DWORD PTR [eax]
  4057e5:	nop
  4057e6:	inc    esi
  4057e7:	add    eax,DWORD PTR [eax]
  4057e9:	add    BYTE PTR [ebp+0x3],0x0
  4057ed:	add    BYTE PTR [esi+0x3],al
  4057f0:	add    BYTE PTR [eax],al
  4057f2:	add    BYTE PTR [ebp+0x3],al
  4057f5:	add    al,ah
  4057f7:	inc    ebp
  4057f8:	add    eax,DWORD PTR [eax]
  4057fa:	rol    BYTE PTR [ebx+eax*1+0x0],1
  4057fe:	push   eax
  4057ff:	inc    ebp
  405800:	add    eax,DWORD PTR [eax]
  405802:	push   eax
  405803:	inc    esp
  405804:	add    eax,DWORD PTR [eax]
  405806:	and    BYTE PTR [esi+0x3],al
  405809:	add    BYTE PTR [eax],dl
  40580b:	inc    ebp
  40580c:	add    eax,DWORD PTR [eax]
  40580e:	nop
  40580f:	inc    ebp
  405810:	add    eax,DWORD PTR [eax]
  405812:	nop
  405813:	inc    esp
  405814:	add    eax,DWORD PTR [eax]
  405816:	rol    BYTE PTR [ebp+0x3],0x0
  40581a:	mov    al,0x44
  40581c:	add    eax,DWORD PTR [eax]
  40581e:	xor    BYTE PTR [ebp+0x3],al
  405821:	add    BYTE PTR [eax],dh
  405823:	inc    esp
  405824:	add    eax,DWORD PTR [eax]
  405826:	add    BYTE PTR [esi+0x3],al
  405829:	add    al,dh
  40582b:	inc    esp
  40582c:	add    eax,DWORD PTR [eax]
  40582e:	xchg   BYTE PTR [eax+0x9],ah
  405831:	or     DWORD PTR [esi-0x79f6f7a8],eax
  405837:	cmp    BYTE PTR [ecx],cl
  405839:	or     DWORD PTR [esi-0x79f6f7d0],eax
  40583f:	test   al,0x9
  405841:	or     DWORD PTR [esi-0x79f6f760],eax
  405847:	js     0x405857
  405849:	or     DWORD PTR [esi-0x79f6f090],eax
  40584f:	call   0xe0c66161
  405854:	push   cs
  405855:	or     DWORD PTR [eax],eax
  405857:	xchg   BYTE PTR [eax+0xe],bl
  40585a:	or     DWORD PTR [esi-0x79f6f0b0],eax
  405860:	enter  0x90d,0x86
  405864:	ror    BYTE PTR [edi],0x9
  405867:	xchg   BYTE PTR [eax+0xe],bl
  40586a:	or     DWORD PTR [esi-0x79f6f0b0],eax
  405870:	enter  0x90d,0x86
  405874:	ror    BYTE PTR [edi],0x9
  405877:	xchg   BYTE PTR [eax],ch
  405879:	or     DWORD PTR [ecx],ecx
  40587b:	xchg   BYTE PTR [eax],ah
  40587d:	push   cs
  40587e:	or     DWORD PTR [esi-0x79f6f168],eax
  405884:	nop
  405885:	wbinvd 
  405887:	xchg   BYTE PTR [eax],cl
  405889:	or     DWORD PTR [ecx],ecx
  40588b:	xchg   BYTE PTR [eax],al
  40588d:	push   cs
  40588e:	or     DWORD PTR [esi-0x79f6f188],eax
  405894:	jo     0x4058a5
  405896:	or     DWORD PTR [esi-0x79f6f1b8],eax
  40589c:	inc    eax
  40589d:	push   cs
  40589e:	or     DWORD PTR [esi-0x79f6f148],eax
  4058a4:	mov    al,0xf
  4058a6:	or     DWORD PTR [esi-0x70fc53be],eax
  4058ac:	inc    edx
  4058ad:	xchg   esp,eax
  4058ae:	add    al,0x7f
  4058b0:	inc    edx
  4058b1:	sbb    al,0x4
  4058b3:	jg     0x4058f7
  4058b5:	add    al,0x5
  4058b7:	pop    DWORD PTR [edx-0x1d]
  4058ba:	add    eax,DWORD PTR [eax]
  4058bc:	add    DWORD PTR [edx-0x5d],0xc3428903
  4058c3:	add    eax,DWORD PTR [ecx-0x76fc7cbe]
  4058c9:	inc    edx
  4058ca:	repz add eax,DWORD PTR [ecx-0x76fbccbe]
  4058d1:	inc    edx
  4058d2:	adc    eax,DWORD PTR [ecx+eax*4]
  4058d5:	inc    edx
  4058d6:	push   ebx
  4058d7:	add    al,0x89
  4058d9:	inc    edx
  4058da:	sti    
  4058db:	add    eax,DWORD PTR [ecx-0x76fbc4be]
  4058e1:	inc    edx
  4058e2:	or     eax,DWORD PTR [ecx+eax*4]
  4058e5:	inc    edx
  4058e6:	dec    ebx
  4058e7:	add    al,0x89
  4058e9:	inc    edx
  4058ea:	or     eax,DWORD PTR [ecx+eax*4]
  4058ed:	inc    edx
  4058ee:	dec    ebx
  4058ef:	add    al,0x89
  4058f1:	inc    edx
  4058f2:	fild   DWORD PTR [ebx]
  4058f4:	add    DWORD PTR [edx+0x1b],0xe7428904
  4058fb:	add    eax,DWORD PTR [ecx-0x76fbd0be]
  405901:	inc    edx
  405902:	mov    DWORD PTR [ebx],0x40f4281
  405908:	mov    DWORD PTR [edx-0x9],eax
  40590b:	add    eax,DWORD PTR [ecx-0x76fc40be]
  405911:	inc    edx
  405912:	pop    ss
  405913:	add    al,0x81
  405915:	inc    edx
  405916:	fild   WORD PTR [ebx]
  405918:	mov    DWORD PTR [edx-0x20],eax
  40591b:	add    ecx,DWORD PTR [esi+0x36042]
  405921:	jle    0x405965
  405923:	or     ch,BYTE PTR [edx+0x2a0a4a85]
  405929:	test   DWORD PTR [edx+0xa],ecx
  40592c:	retf   0x4a85
  40592f:	or     cl,BYTE PTR [edx-0x7b]
  405932:	dec    edx
  405933:	or     cl,BYTE PTR [edx+0xa0a4a85]
  405939:	test   DWORD PTR [edx+0xa],ecx
  40593c:	jmp    0xd94a9ec6
  405941:	test   DWORD PTR [ebp+0xa],eax
  405944:	loope  0x4058cb
  405946:	inc    ebp
  405947:	or     dl,cl
  405949:	test   DWORD PTR [ebp+0xa],eax
  40594c:	in     eax,dx
  40594d:	test   DWORD PTR [ebp+0xa],eax
  405950:	cmc    
  405951:	test   DWORD PTR [ebp+0xa],eax
  405954:	in     eax,0x85
  405956:	inc    ebp
  405957:	or     ch,ch
  405959:	test   DWORD PTR [ebp+0xa],eax
  40595c:	jmp    0x4058e3
  40595e:	inc    ebp
  40595f:	or     bl,bl
  405961:	test   DWORD PTR [ebp+0xa],eax
  405964:	jecxz  0x4058eb
  405966:	inc    ebp
  405967:	or     dl,bl
  405969:	test   DWORD PTR [ebp+0xa],eax
  40596c:	out    dx,eax
  40596d:	test   DWORD PTR [ebp+0xa],eax
  405970:	test   DWORD PTR [ebp-0x7a18f5bb],0x85ef0a45
  40597a:	inc    ebp
  40597b:	or     ch,al
  40597d:	test   DWORD PTR [ebp+0xa],eax
  405980:	fadd   DWORD PTR [ebp+0xe00a45]
  405986:	test   DWORD PTR [ebp+0xa],eax
  405989:	rol    BYTE PTR [ebp-0x7a13f5bb],1
  40598f:	inc    ebp
  405990:	or     dh,ah
  405992:	test   DWORD PTR [ebp+0xa],eax
  405995:	in     al,0x85
  405997:	inc    ebp
  405998:	or     ch,ah
  40599a:	test   DWORD PTR [ebp+0xa],eax
  40599d:	add    BYTE PTR [edx+eax*2+0x42cc000f],ch
  4059a4:	verr   WORD PTR [edx+eax*2+0x42b4000f]
  4059ac:	verw   WORD PTR [eax-0x67fff0be]
  4059b3:	inc    edx
  4059b4:	ltr    WORD PTR [edi+0x6b030843]
  4059bb:	inc    esi
  4059bc:	syscall 
  4059be:	imul   ecx,DWORD PTR [esp+ecx*1+0x6],0x70d4b68
  4059c6:	addr16 dec edx
  4059c8:	add    cl,BYTE PTR [eax]
  4059ca:	addr16 dec edx
  4059cc:	add    cl,BYTE PTR [eax]
  4059ce:	push   esi
  4059cf:	dec    ecx
  4059d0:	add    ecx,DWORD PTR [ecx]
  4059d2:	push   esi
  4059d3:	dec    ecx
  4059d4:	add    ecx,DWORD PTR [ecx]
  4059d6:	gs push eax
  4059d8:	add    BYTE PTR [edx],cl
  4059da:	and    eax,0x350a0050
  4059df:	push   eax
  4059e0:	add    BYTE PTR [edx],cl
  4059e2:	xor    eax,0x240a0050
  4059e7:	dec    edi
  4059e8:	add    DWORD PTR [ebx],ecx
  4059ea:	add    BYTE PTR [edi+ecx*2],ah
  4059ed:	add    DWORD PTR [ebx],ecx
  4059ef:	adc    al,0x4f
  4059f1:	add    DWORD PTR [ebx],ecx
  4059f3:	adc    al,0x4f
  4059f5:	add    DWORD PTR [ebx],ecx
  4059f7:	and    ecx,DWORD PTR [esi+0x6]
  4059fa:	or     al,0xe3
  4059fc:	dec    ebp
  4059fd:	push   es
  4059fe:	or     al,0xf3
  405a00:	dec    ebp
  405a01:	push   es
  405a02:	or     al,0xe3
  405a04:	dec    ebp
  405a05:	push   es
  405a06:	or     al,0xe3
  405a08:	dec    ebp
  405a09:	push   es
  405a0a:	or     al,0xc3
  405a0c:	dec    ebp
  405a0d:	push   es
  405a0e:	or     al,0xd3
  405a10:	dec    ebp
  405a11:	push   es
  405a12:	or     al,0xe3
  405a14:	dec    ebp
  405a15:	push   es
  405a16:	or     al,0x86
  405a18:	es add al,0xd
  405a1b:	xchg   ebx,eax
  405a1c:	push   ds
  405a1d:	add    al,0xd
  405a1f:	mov    esi,DWORD PTR [esi]
  405a21:	add    al,0xd
  405a23:	sub    DWORD PTR [esi],0x4
  405a26:	or     eax,0xd04267b
  405a2b:	xchg   ebx,eax
  405a2c:	push   ds
  405a2d:	add    al,0xd
  405a2f:	mov    esi,DWORD PTR [esi]
  405a31:	add    al,0xd
  405a33:	sub    DWORD PTR [esi],0x4
  405a36:	or     eax,0xe1b257b
  405a3b:	nop
  405a3c:	sbb    eax,0x35880e1b
  405a41:	sbb    ecx,DWORD PTR [esi]
  405a43:	sub    BYTE PTR ds:0x25780e1b,0x1b
  405a4a:	push   cs
  405a4b:	nop
  405a4c:	sbb    eax,0x88000e1b
  405a51:	xor    eax,0x2d800e07
  405a56:	pop    es
  405a57:	push   cs
  405a58:	js     0x405a7f
  405a5a:	pop    es
  405a5b:	push   cs
  405a5c:	nop
  405a5d:	sbb    eax,0x35880e07
  405a62:	pop    es
  405a63:	push   cs
  405a64:	sub    BYTE PTR ds:0x25780e07,0x7
  405a6b:	push   cs
  405a6c:	nop
  405a6d:	sbb    eax,0x35880e07
  405a72:	pop    es
  405a73:	push   cs
  405a74:	sub    BYTE PTR ds:0x24780e07,0x4
  405a7b:	setno  BYTE PTR [esp+eax*1]
  405a7f:	jns    0x814f5eb9
  405a85:	sub    al,0x4
  405a87:	vmwrite esp,DWORD PTR [esp+eax*1]
  405a8b:	setno  BYTE PTR [esp+eax*1]
  405a8f:	jns    0x814f56d7
  405a95:	dec    ebp
  405a96:	in     al,0xe
  405a98:	jns    0x405ae7
  405a9a:	in     al,dx
  405a9b:	push   cs
  405a9c:	xchg   ecx,eax
  405a9d:	dec    ebp
  405a9e:	aam    0xe
  405aa0:	mov    DWORD PTR [ebp-0x4],ecx
  405aa3:	push   cs
  405aa4:	or     DWORD PTR [ebp-0x1c],0xec4d790e
  405aab:	push   cs
  405aac:	xchg   ecx,eax
  405aad:	dec    ebp
  405aae:	aam    0xe
  405ab0:	mov    DWORD PTR [ebp-0x4],ecx
  405ab3:	push   cs
  405ab4:	add    BYTE PTR [ecx+0x790ee44d],al
  405aba:	dec    ebp
  405abb:	jecxz  0x405ac0
  405abd:	xchg   esi,eax
  405abe:	push   ecx
  405abf:	icebp  
  405ac0:	adc    DWORD PTR [ebp-0x65e828b1],edx
  405ac6:	push   esi
  405ac7:	ficomp WORD PTR [eax]
  405ac9:	xchg   ebx,eax
  405aca:	push   ebp
  405acb:	aad    0x15
  405acd:	js     0x405b23
  405acf:	fst    QWORD PTR ds:0x16f45470
  405ad5:	jns    0x405b2a
  405ad7:	cld    
  405ad8:	push   ss
  405ad9:	jno    0x405b2e
  405adb:	sti    
  405adc:	sbb    ebx,DWORD PTR [esi-0x61e404a6]
  405ae2:	pop    edx
  405ae3:	jmp    0x405b00
  405ae5:	mov    ds,WORD PTR [edx-0x15]
  405ae8:	sbb    ecx,DWORD PTR [esi+0x7f1cda5a]
  405aee:	pop    ecx
  405aef:	ficomp DWORD PTR [edi+edi*2]
  405af2:	pop    ecx
  405af3:	or     bl,BYTE PTR ds:0x1d0a596f
  405af9:	outs   dx,DWORD PTR ds:[esi]
  405afa:	pop    ecx
  405afb:	stc    
  405afc:	sbb    DWORD PTR [eax+ebx*2+0x589c19f9],ebx
  405b03:	jmp    0xe998e721
  405b08:	sbb    DWORD PTR [eax+ebx*2+0x587fd30a],ecx
  405b0f:	adc    bl,dl
  405b11:	jg     0x405b6b
  405b13:	adc    BYTE PTR [ebx],al
  405b15:	ins    BYTE PTR es:[edi],dx
  405b16:	pop    eax
  405b17:	adc    BYTE PTR [ebx],al
  405b19:	add    BYTE PTR [eax+ebx*2+0x10],ch
  405b1d:	repnz pushf 
  405b1f:	push   edi
  405b20:	adc    edx,esi
  405b22:	pushf  
  405b23:	push   edi
  405b24:	adc    edx,esp
  405b26:	mov    WORD PTR [edi+0x11],ss
  405b29:	loop   0x405ab7
  405b2b:	push   edi
  405b2c:	adc    edx,edx
  405b2e:	jl     0x405b87
  405b30:	adc    edx,edx
  405b32:	jl     0x405b8b
  405b34:	adc    DWORD PTR [edx],eax
  405b36:	ins    DWORD PTR es:[edi],dx
  405b37:	push   edi
  405b38:	adc    DWORD PTR [edx],eax
  405b3a:	ins    DWORD PTR es:[edi],dx
  405b3b:	push   edi
  405b3c:	adc    ebp,esi
  405b3e:	mov    eax,ds:0x99ed165e
  405b43:	pop    esi
  405b44:	push   ss
  405b45:	in     eax,0x91
  405b47:	pop    esi
  405b48:	push   ss
  405b49:	fisttp QWORD PTR [ecx-0x7e2ae9a2]
  405b4f:	pop    esi
  405b50:	push   ss
  405b51:	int    0x79
  405b53:	pop    esi
  405b54:	push   ss
  405b55:	add    eax,0xfd165ea6
  405b5a:	imul   ebx,DWORD PTR [esi+0x16],0x165ea1f5
  405b61:	in     eax,dx
  405b62:	cdq    
  405b63:	pop    esi
  405b64:	push   ss
  405b65:	in     eax,0x91
  405b67:	pop    esi
  405b68:	push   ss
  405b69:	fisttp QWORD PTR [ecx-0x7e2ae9a2]
  405b6f:	pop    esi
  405b70:	push   ss
  405b71:	int    0x79
  405b73:	pop    esi
  405b74:	push   ss
  405b75:	add    eax,0xfd165e66
  405b7a:	imul   ebx,DWORD PTR [esi+0x16],0x5da000f4
  405b81:	pop    ss
  405b82:	in     al,dx
  405b83:	cwde   
  405b84:	pop    ebp
  405b85:	pop    ss
  405b86:	add    dl,ch
  405b88:	pop    ebx
  405b89:	pop    ss
  405b8a:	sbb    eax,0x1d175bca
  405b8f:	mov    edx,0xca1d175b
  405b94:	pop    ebx
  405b95:	pop    ss
  405b96:	sbb    eax,0x1d175b8a
  405b9b:	retf   0x175b
  405b9e:	sbb    eax,0x1d175bba
  405ba3:	stos   BYTE PTR es:[edi],al
  405ba4:	pop    ebx
  405ba5:	pop    ss
  405ba6:	sbb    eax,0x1d175baa
  405bab:	retf   0x175b
  405bae:	sbb    eax,0x1d175bba
  405bb3:	retf   0x175b
  405bb6:	sbb    eax,0x1d175b8a
  405bbb:	mov    bl,BYTE PTR [ebx+0x17]
  405bbe:	sbb    eax,0x308456f
  405bc3:	arpl   WORD PTR [ecx+0xc],ax
  405bc6:	pop    es
  405bc7:	ja     0x405c17
  405bc9:	add    ecx,DWORD PTR [ecx]
  405bcb:	jne    0x405c19
  405bcd:	add    DWORD PTR [ebx],ecx
  405bcf:	imul   ecx,DWORD PTR [edx+0x6],0xc
  405bd3:	cmp    cl,BYTE PTR [ecx+0x7]
  405bd6:	or     eax,0xe044859
  405bdb:	pop    eax
  405bdc:	inc    edi
  405bdd:	add    eax,0x1a563f0f
  405be2:	adc    BYTE PTR [eax],al
  405be4:	aas    
  405be5:	push   esi
  405be6:	sbb    dl,BYTE PTR [eax]
  405be8:	dec    esi
  405be9:	push   ebp
  405bea:	sbb    edx,DWORD PTR [ecx]
  405bec:	dec    esi
  405bed:	push   ebp
  405bee:	sbb    edx,DWORD PTR [ecx]
  405bf0:	cmp    eax,0x3d121854
  405bf5:	push   esp
  405bf6:	sbb    BYTE PTR [edx],dl
  405bf8:	or     al,0x53
  405bfa:	sbb    DWORD PTR [ebx],edx
  405bfc:	or     al,0x53
  405bfe:	sbb    DWORD PTR [ebx],edx
  405c00:	xchg   BYTE PTR [edi],dh
  405c02:	sbb    eax,0x1d2f9214
  405c07:	adc    al,0x9a
  405c09:	pop    ss
  405c0a:	sbb    eax,0x1d0f9214
  405c0f:	adc    al,0x7a
  405c11:	push   ss
  405c12:	sbb    al,0x15
  405c14:	jae    0x405c24
  405c16:	sbb    al,0x15
  405c18:	jnp    0x405c50
  405c1a:	sbb    al,0x15
  405c1c:	jae    0x405c4c
  405c1e:	sbb    al,0x15
  405c20:	fwait
  405c21:	cmp    DWORD PTR [edi],ebx
  405c23:	push   ss
  405c24:	nop
  405c25:	xor    DWORD PTR [edi],ebx
  405c27:	push   ss
  405c28:	cwde   
  405c29:	sbb    DWORD PTR [edi],ebx
  405c2b:	push   ss
  405c2c:	nop
  405c2d:	adc    DWORD PTR [edi],ebx
  405c2f:	push   ss
  405c30:	js     0x405c4a
  405c32:	push   ds
  405c33:	pop    ss
  405c34:	jno    0x405c46
  405c36:	push   ds
  405c37:	pop    ss
  405c38:	jns    0x405c72
  405c3a:	push   ds
  405c3b:	pop    ss
  405c3c:	jno    0x405c6e
  405c3e:	push   ds
  405c3f:	pop    ss
  405c40:	cdq    
  405c41:	xor    edx,DWORD PTR [ecx]
  405c43:	sbb    BYTE PTR [esi+0x181133],bl
  405c49:	mov    fs,WORD PTR [ebx]
  405c4b:	adc    DWORD PTR [eax],ebx
  405c4d:	mov    fs,WORD PTR [ebx]
  405c4f:	adc    DWORD PTR [eax],ebx
  405c51:	jle    0x405c66
  405c53:	adc    DWORD PTR [eax],ebx
  405c55:	jle    0x405c6a
  405c57:	adc    DWORD PTR [eax],ebx
  405c59:	outs   dx,BYTE PTR ds:[esi]
  405c5a:	inc    ebx
  405c5b:	push   ss
  405c5c:	sbb    BYTE PTR [esi+0x43],ch
  405c5f:	push   ss
  405c60:	sbb    BYTE PTR [esi-0x60e6e9ce],bl
  405c66:	xor    dl,BYTE PTR [esi]
  405c68:	sbb    DWORD PTR [edi-0x70e6e9de],ecx
  405c6e:	and    dl,BYTE PTR [esi]
  405c70:	sbb    DWORD PTR [edi+0x12],edi
  405c73:	push   ss
  405c74:	sbb    DWORD PTR [edi+0x12],edi
  405c77:	push   ss
  405c78:	sbb    DWORD PTR [edi+0x42],ebp
  405c7b:	or     bl,BYTE PTR ds:0x1d0a5b6f
  405c81:	lahf   
  405c82:	pop    ebx
  405c83:	stc    
  405c84:	sbb    eax,0x1df95c9c
  405c89:	mov    WORD PTR [ecx+ebp*8+0x1d],ds
  405c8d:	mov    WORD PTR [ecx+ebp*8+0x1d],ds
  405c91:	jl     0x405cef
  405c93:	fstp   DWORD PTR ds:0x1dd95c7c
  405c99:	ins    BYTE PTR es:[edi],dx
  405c9a:	pop    esp
  405c9b:	or     DWORD PTR [esi],ebx
  405c9d:	ins    BYTE PTR es:[edi],dx
  405c9e:	pop    esp
  405c9f:	or     DWORD PTR [esi],ebx
  405ca1:	pushf  
  405ca2:	pop    esp
  405ca3:	clc    
  405ca4:	push   ds
  405ca5:	popf   
  405ca6:	pop    ebp
  405ca7:	clc    
  405ca8:	push   ds
  405ca9:	lea    ebx,[ebp-0x18]
  405cac:	push   ds
  405cad:	add    BYTE PTR [ebp+0x7d1ee85d],cl
  405cb3:	pop    ebp
  405cb4:	fcomp  DWORD PTR [esi]
  405cb6:	jge    0x405d15
  405cb8:	fcomp  DWORD PTR [esi]
  405cba:	ins    DWORD PTR es:[edi],dx
  405cbb:	pop    ebp
  405cbc:	or     BYTE PTR [edi],bl
  405cbe:	ins    DWORD PTR es:[edi],dx
  405cbf:	pop    ebp
  405cc0:	or     BYTE PTR [edi],bl
  405cc2:	popf   
  405cc3:	push   esi
  405cc4:	jecxz  0x405cc9
  405cc6:	xchg   BYTE PTR [edx-0x1e],al
  405cc9:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  405ccf:	inc    edx
  405cd0:	loopne 0x405cd5
  405cd2:	xchg   BYTE PTR [edx-0x19],al
  405cd5:	add    eax,DWORD PTR [esi-0x79fc11be]
  405cdb:	inc    edx
  405cdc:	in     eax,0x3
  405cde:	xchg   BYTE PTR [edx-0x14],al
  405ce1:	add    eax,DWORD PTR [esi-0x79fc14be]
  405ce7:	inc    edx
  405ce8:	jmp    0xff82e2f0
  405ced:	add    eax,DWORD PTR [esi-0x79fc1abe]
  405cf3:	inc    edx
  405cf4:	or     bl,cl
  405cf6:	test   DWORD PTR [edx+0xa],eax
  405cf9:	aad    0x85
  405cfb:	inc    edx
  405cfc:	or     al,BYTE PTR [ecx]
  405cfe:	add    BYTE PTR [edx+0xa],0xfd
  405d02:	test   DWORD PTR [edx+0xa],eax
  405d05:	leave  
  405d06:	test   DWORD PTR [edx+0xa],eax
  405d09:	rol    DWORD PTR [ebp-0x7a46f5be],0x42
  405d10:	or     al,cl
  405d12:	add    BYTE PTR [ebp-0x7dd6f5be],al
  405d18:	inc    edx
  405d19:	or     bl,BYTE PTR [ecx]
  405d1b:	mov    al,BYTE PTR [edx+0xa]
  405d1e:	leave  
  405d1f:	test   DWORD PTR [edx+0xa],eax
  405d22:	fld    DWORD PTR [ebp-0x7a96f5be]
  405d28:	inc    edx
  405d29:	or     cl,BYTE PTR [ecx+0x290a4285]
  405d2f:	test   DWORD PTR [edx+0xa],eax
  405d32:	dec    ecx
  405d33:	test   DWORD PTR [edx+0xa],eax
  405d36:	jmp    0xe94a9fc0
  405d3b:	test   DWORD PTR [edx+0xa],eax
  405d3e:	jmp    0xe84a9fc8
  405d43:	test   DWORD PTR [edx+0xa],eax
  405d46:	jmp    0x405ccd
  405d48:	inc    edx
  405d49:	or     ch,dl
  405d4b:	test   DWORD PTR [edx+0xa],eax
  405d4e:	in     eax,dx
  405d4f:	test   DWORD PTR [edx+0xa],eax
  405d52:	out    0x85,eax
  405d54:	inc    edx
  405d55:	or     ah,cl
  405d57:	test   DWORD PTR [edx+0xa],eax
  405d5a:	fld    QWORD PTR [ebp-0x7a06f5be]
  405d60:	inc    edx
  405d61:	or     al,BYTE PTR [ecx]
  405d63:	mov    al,BYTE PTR [edx+0xa]
  405d66:	or     DWORD PTR [edx-0x75e6f5be],eax
  405d6c:	inc    edx
  405d6d:	or     al,BYTE PTR [eax]
  405d6f:	pop    edi
  405d70:	or     al,BYTE PTR ds:[eax]
  405d73:	iret   
  405d74:	or     al,BYTE PTR ds:[eax]
  405d77:	add    BYTE PTR [edi-0x20fff5c2],ch
  405d7d:	cmp    eax,0x441f000a
  405d82:	or     al,BYTE PTR [eax]
  405d84:	outs   dx,DWORD PTR ds:[esi]
  405d85:	inc    ebx
  405d86:	or     al,BYTE PTR [eax]
  405d88:	out    dx,eax
  405d89:	cmp    al,0xa
  405d8b:	add    bh,bl
  405d8d:	cmp    eax,0x36df000a
  405d92:	cmc    
  405d93:	(bad)  
  405d94:	out    dx,eax
  405d95:	inc    eax
  405d96:	or     al,BYTE PTR [eax]
  405d98:	out    dx,eax
  405d99:	dec    edx
  405d9a:	or     al,BYTE PTR [eax]
  405d9c:	fistp  QWORD PTR [esi]
  405d9e:	or     al,BYTE PTR [eax]
  405da0:	fist   WORD PTR [edx+0xa]
  405da3:	add    BYTE PTR [edi-0x50fff5a6],ch
  405da9:	bound  ecx,QWORD PTR [edx]
  405dab:	add    BYTE PTR [edi-0x60fff58e],bl
  405db1:	add    dh,ch
  405db3:	jmp    FWORD PTR [edi-0x14000ade]
  405db9:	daa    
  405dba:	xor    eax,0x3527eb00
  405dbf:	add    bl,bl
  405dc1:	daa    
  405dc2:	xor    eax,0x35252b00
  405dc7:	add    BYTE PTR [ebx],ch
  405dc9:	and    eax,0x252b0035
  405dce:	xor    eax,0x35251b00
  405dd3:	add    BYTE PTR [ebx],ch
  405dd5:	and    eax,0x252b0035
  405dda:	xor    eax,0x252b0000
  405ddf:	xor    eax,0xe425c00
  405de4:	add    BYTE PTR [edx],ch
  405de6:	inc    edx
  405de7:	or     al,0x0
  405de9:	xchg   BYTE PTR [ecx+ecx*1],ah
  405dec:	or     BYTE PTR [esi-0x79f5f6de],al
  405df2:	xor    BYTE PTR [ecx],cl
  405df4:	or     eax,0x11092486
  405df9:	xchg   BYTE PTR [eax],bl
  405dfb:	or     DWORD PTR [edi],edx
  405dfd:	xchg   BYTE PTR [eax],dl
  405dff:	or     DWORD PTR [edi],ebx
  405e01:	xchg   BYTE PTR [eax],cl
  405e03:	or     DWORD PTR [ebx],ebp
  405e05:	xchg   BYTE PTR [eax],bl
  405e07:	or     DWORD PTR [ebx],edi
  405e09:	xchg   BYTE PTR [eax+0xe],ch
  405e0c:	push   ebx
  405e0d:	xchg   BYTE PTR [eax+0xe],cl
  405e10:	jae    0x405d98
  405e12:	test   al,0x9
  405e14:	mov    ds:0xe308e886,eax
  405e19:	xchg   BYTE PTR [ecx],ch
  405e1b:	or     BYTE PTR [eax],al
  405e1d:	xchg   BYTE PTR [ebx],ch
  405e1f:	or     DWORD PTR [eax],eax
  405e21:	xchg   BYTE PTR [ebx],bh
  405e23:	or     DWORD PTR [eax],edx
  405e25:	xchg   BYTE PTR [ebx],bh
  405e27:	or     DWORD PTR [eax],edx
  405e29:	xchg   BYTE PTR [ebx],bh
  405e2b:	or     DWORD PTR [eax],edx
  405e2d:	xchg   BYTE PTR [ebx],bh
  405e2f:	or     DWORD PTR [eax],edx
  405e31:	xchg   BYTE PTR [edx],bl
  405e33:	or     DWORD PTR [ecx],edx
  405e35:	xchg   BYTE PTR [edx],bl
  405e37:	or     DWORD PTR [ecx],edx
  405e39:	xchg   BYTE PTR [ecx],bl
  405e3b:	or     DWORD PTR [edx],edx
  405e3d:	xchg   BYTE PTR [ecx],bl
  405e3f:	or     DWORD PTR [edx],edx
  405e41:	add    BYTE PTR [esi-0x79ecf6c8],al
  405e47:	cmp    BYTE PTR [ecx],cl
  405e49:	adc    eax,DWORD PTR [esi-0x79ebf6c9]
  405e4f:	das    
  405e50:	or     DWORD PTR [esi+eax*4],edx
  405e53:	push   ss
  405e54:	or     DWORD PTR ds:0x15090e86,edx
  405e5a:	xchg   BYTE PTR [ebx],bl
  405e5c:	or     DWORD PTR [ecx-0x7a],ecx
  405e5f:	push   0x42860009
  405e64:	loop   0x405e69
  405e66:	test   BYTE PTR [edx-0x20],al
  405e69:	add    eax,DWORD PTR [edx-0x76fc19be]
  405e6f:	inc    edx
  405e70:	jmp    0x7f03:0xd2427b03
  405e77:	inc    edx
  405e78:	add    al,BYTE PTR [edi+edx*2]
  405e7b:	inc    edx
  405e7c:	and    al,BYTE PTR [edi+eiz*4]
  405e7f:	inc    edx
  405e80:	bound  eax,QWORD PTR [edi+eax*2]
  405e83:	inc    edx
  405e84:	loop   0x405e8a
  405e86:	pop    es
  405e87:	inc    ebx
  405e88:	loop   0x405e8b
  405e8a:	xchg   DWORD PTR [ecx-0x1e],eax
  405e8d:	inc    DWORD PTR [esi-0x78f41dc4]
  405e93:	inc    esi
  405e94:	loop   0x405ea9
  405e96:	xchg   DWORD PTR [edx-0x1e],ebx
  405e99:	and    eax,DWORD PTR [edi-0x793c1d8e]
  405e9f:	mov    ds:0x428603e3,al
  405ea4:	repz add eax,DWORD PTR [eax]
  405ea7:	xchg   esi,eax
  405ea8:	inc    edx
  405ea9:	repz add edx,DWORD PTR [esi-0x68fc0dbe]
  405eb0:	inc    edx
  405eb1:	icebp  
  405eb2:	add    edx,DWORD PTR [edx+eax*2+0x427503d0]
  405eb9:	fild   WORD PTR [ebx]
  405ebb:	jb     0x405eff
  405ebd:	(bad)  
  405ebe:	add    edi,DWORD PTR [ebx+0x42]
  405ec1:	fld    QWORD PTR [ebx]
  405ec3:	jo     0x405f07
  405ec5:	hlt    
  405ec6:	add    ebx,DWORD PTR [ecx-0x61fbf4be]
  405ecc:	inc    edx
  405ecd:	cli    
  405ece:	add    ecx,DWORD PTR [edi-0x73fc06be]
  405ed4:	inc    edx
  405ed5:	call   0xd782dbdd
  405eda:	add    edi,DWORD PTR [edx+0x42]
  405edd:	or     dl,ah
  405edf:	test   DWORD PTR [ebp+0xa],edx
  405ee2:	test   eax,0x90a8285
  405ee7:	pop    ss
  405ee8:	or     DWORD PTR [edx],0x19
  405eeb:	or     DWORD PTR [ebx-0x7ce49af6],eax
  405ef1:	or     bh,BYTE PTR [ecx+edi*8]
  405ef4:	or     BYTE PTR [edx],0x1a
  405ef7:	inc    BYTE PTR [edx+0x4285e90a]
  405efd:	or     cl,BYTE PTR [eax-0x74f4c176]
  405f03:	sbb    BYTE PTR [edx],0x8
  405f06:	dec    edx
  405f07:	mov    al,BYTE PTR [ecx-0x7dffbbf5]
  405f0d:	jne    0x405f1a
  405f0f:	dec    edi
  405f10:	mov    bl,BYTE PTR [eax-0x5d7dbff5]
  405f16:	or     edx,DWORD PTR [ebx-0x76]
  405f19:	xchg   esp,eax
  405f1a:	or     edx,DWORD PTR [edx-0x7e]
  405f1d:	sahf   
  405f1e:	or     eax,DWORD PTR [ebp-0x76]
  405f21:	mov    ecx,0xb5823f0b
  405f26:	or     edx,DWORD PTR [esi-0x67f44876]
  405f2c:	cmp    BYTE PTR ds:0x178a9b0b,0x8
  405f33:	call   0x748a:0x7c0b8082
  405f3a:	or     esi,DWORD PTR [edi-0x7e]
  405f3d:	xchg   edi,eax
  405f3e:	or     edi,DWORD PTR [esi-0x76]
  405f41:	sti    
  405f42:	pop    es
  405f43:	jo     0x405ec7
  405f45:	mov    eax,ds:0x938a630b
  405f4a:	or     esp,DWORD PTR [edx-0x7e]
  405f4d:	popf   
  405f4e:	or     edx,DWORD PTR [ebp-0x76]
  405f51:	mov    eax,0x15824c0b
  405f56:	or     BYTE PTR [eax],al
  405f58:	leave  
  405f59:	ds je  0x405f5d
  405f5c:	cwde   
  405f5d:	ds jbe 0x405f61
  405f60:	lahf   
  405f61:	ds pop esi
  405f63:	add    DWORD PTR [esi+edi*1+0x3ef20108],ebx
  405f6a:	xor    eax,DWORD PTR [ecx]
  405f6c:	loope  0x405fac
  405f6e:	or     al,0x1
  405f70:	add    bh,ah
  405f72:	ds push es
  405f74:	add    ebp,esp
  405f76:	adc    al,BYTE PTR ds:[ecx]
  405f79:	fstp   TBYTE PTR [esi]
  405f7b:	adc    BYTE PTR [ecx],al
  405f7d:	call   0xef4163c0
  405f82:	sbb    al,BYTE PTR ds:[ecx]
  405f85:	out    dx,al
  405f86:	ds dec ecx
  405f88:	add    DWORD PTR ds:0x32014d3f,edi
  405f8e:	aas    
  405f8f:	pop    edx
  405f90:	add    DWORD PTR [edi],esi
  405f92:	aas    
  405f93:	push   edx
  405f94:	add    DWORD PTR [esi],esi
  405f96:	aas    
  405f97:	add    DWORD PTR fs:[edi+edi*1],esp
  405f9b:	jp     0x405f9e
  405f9d:	stc    
  405f9e:	ds push 0x5f3eff01
  405fa4:	add    esp,edi
  405fa6:	or     DWORD PTR ds:[ecx],eax
  405fa9:	push   edx
  405faa:	aas    
  405fab:	xor    BYTE PTR [ecx],al
  405fad:	inc    ecx
  405fae:	aas    
  405faf:	or     eax,0x73f4701
  405fb4:	add    DWORD PTR [ebp+0x3f],eax
  405fb7:	adc    eax,DWORD PTR [ecx]
  405fb9:	cmp    edi,DWORD PTR [edi]
  405fbb:	adc    DWORD PTR [ecx],eax
  405fbd:	dec    eax
  405fbe:	aas    
  405fbf:	add    eax,0x1b3f4f01
  405fc4:	add    DWORD PTR [esi+0x3f],ecx
  405fc7:	dec    esi
  405fc8:	add    DWORD PTR [ebp-0x6dfebdbb],ebx
  405fce:	inc    ebp
  405fcf:	pop    ebx
  405fd0:	add    DWORD PTR [esi+0x590953],eax
  405fd6:	xchg   DWORD PTR [edx+0x9],edx
  405fd9:	outs   dx,DWORD PTR ds:[esi]
  405fda:	xchg   DWORD PTR [ecx+ecx*1+0x71],eax
  405fde:	xchg   DWORD PTR [ecx],esi
  405fe0:	or     BYTE PTR [ebx-0x79],ah
  405fe3:	cmp    BYTE PTR [eax],cl
  405fe5:	fld    DWORD PTR [edx+edi*2-0x3e78d9f8]
  405fec:	or     ah,BYTE PTR [edi+eax*4]
  405fef:	ror    BYTE PTR [edx],cl
  405ff1:	xor    BYTE PTR [edi-0x78e1f53c],al
  405ff7:	scas   eax,DWORD PTR es:[edi]
  405ff8:	or     esi,DWORD PTR [edi+eax*4]
  405ffb:	stos   BYTE PTR es:[edi],al
  405ffc:	or     esp,DWORD PTR [edi]
  405ffe:	xchg   DWORD PTR [ecx-0x4d78daf5],edi
  406004:	or     esi,DWORD PTR [ecx]
  406006:	xchg   DWORD PTR [ebx+ecx*1+0xba7871f],esi
  40600d:	xor    eax,0xa0ae687
  406012:	xchg   ecx,esp
  406014:	or     cl,BYTE PTR [eax]
  406016:	xchg   esi,esi
  406018:	or     ah,BYTE PTR [eax]
  40601a:	xchg   ebx,esp
  40601c:	or     bl,BYTE PTR [edi+eax*4]
  40601f:	into   
  406020:	or     ch,BYTE PTR [edi+eax*4-0x27]
  406024:	or     bl,BYTE PTR [edi+eax*4-0x3a]
  406028:	or     cl,BYTE PTR [ebx]
  40602a:	xchg   DWORD PTR [ecx-0x6978f6f5],eax
  406030:	or     esp,DWORD PTR [ecx]
  406032:	xchg   DWORD PTR [ebx+0x7e871d0b],edx
  406038:	or     ebp,DWORD PTR [ebp+0x0]
  40603b:	xchg   DWORD PTR [ecx-0x4278a2f5],ecx
  406041:	or     DWORD PTR [eax],edi
  406043:	xchg   DWORD PTR [ecx+ecx*1+0x9c68756],edi
  40604a:	sub    BYTE PTR [edi-0x42ffbabe],al
  406050:	inc    ebx
  406051:	pop    ecx
  406052:	add    BYTE PTR [ebx+eax*2+0x43a40048],dl
  406059:	aaa    
  40605a:	add    al,ch
  40605c:	inc    ebx
  40605d:	xor    BYTE PTR [eax],al
  40605f:	mov    cl,0x43
  406061:	add    BYTE PTR ds:[edi-0x75ffcabd],bl
  406068:	inc    ebx
  406069:	cmp    DWORD PTR [eax],eax
  40606b:	xchg   ebp,eax
  40606c:	inc    ebx
  40606d:	test   al,0x7
  40606f:	gs inc ebx
  406071:	xchg   edi,eax
  406072:	pop    es
  406073:	test   eax,0xbc079e43
  406078:	inc    ebx
  406079:	test   BYTE PTR [edi],al
  40607b:	int    0x43
  40607d:	mov    ds:0xac438607,eax
  406082:	pop    es
  406083:	pusha  
  406084:	inc    ebx
  406085:	scas   eax,DWORD PTR es:[edi]
  406086:	pop    es
  406087:	jo     0x4060cc
  406089:	xchg   esp,eax
  40608a:	pop    es
  40608b:	lods   al,BYTE PTR ds:[esi]
  40608c:	inc    ebx
  40608d:	mov    dl,0x7
  40608f:	inc    ebx
  406090:	inc    ebx
  406091:	mov    cl,0x7
  406093:	inc    edx
  406094:	inc    ebx
  406095:	mov    al,0x7
  406097:	mov    al,0x43
  406099:	mov    edx,0xae435407
  40609e:	pop    es
  40609f:	add    BYTE PTR [esi+0x43],ch
  4060a2:	xchg   ebp,eax
  4060a3:	pop    es
  4060a4:	pop    esp
  4060a5:	inc    ebx
  4060a6:	add    DWORD PTR [edi],0xffffff87
  4060a9:	inc    ebx
  4060aa:	mov    WORD PTR [edi],es
  4060ac:	jno    0x4060f1
  4060ae:	pop    edi
  4060af:	pop    es
  4060b0:	xchg   ecx,eax
  4060b1:	inc    ebx
  4060b2:	inc    esp
  4060b3:	pop    es
  4060b4:	pop    ebp
  4060b5:	inc    ebx
  4060b6:	push   edx
  4060b7:	pop    es
  4060b8:	inc    eax
  4060b9:	inc    ebx
  4060ba:	push   ecx
  4060bb:	pop    es
  4060bc:	push   ebx
  4060bd:	inc    ebx
  4060be:	xor    BYTE PTR [edi],al
  4060c0:	push   ecx
  4060c1:	inc    ebx
  4060c2:	dec    edx
  4060c3:	pop    es
  4060c4:	adc    eax,0x81340a43
  4060c9:	fwait
  4060ca:	or     ebp,DWORD PTR [edi]
  4060cc:	mov    DWORD PTR [ebx+0x7081a70b],ebx
  4060d2:	sub    cl,BYTE PTR [eax+0x7e]
  4060d5:	inc    esp
  4060d6:	cmp    cl,BYTE PTR [ebx+0x7e]
  4060d9:	cmp    cl,BYTE PTR ds:[edx-0x72]
  4060dd:	cmp    eax,0x418e4d3a
  4060e2:	cmp    al,BYTE PTR [esi+edi*2+0x2b]
  4060e6:	cmp    cl,BYTE PTR [edi+0x7e]
  4060e9:	xor    al,0x3a
  4060eb:	inc    esi
  4060ec:	mov    fs,ecx
  4060ee:	cmp    DWORD PTR [ecx-0x6fc61c7f],edx
  4060f4:	mov    ebp,esp
  4060f6:	cmp    DWORD PTR [ebx-0x7dc6187f],eax
  4060fc:	mov    ecx,ebx
  4060fe:	cmp    DWORD PTR [ebp-0x73c5dc7f],edx
  406104:	add    BYTE PTR [ecx-0x7e78c5db],cl
  40610a:	daa    
  40610b:	cmp    bh,BYTE PTR [esi-0x77]
  40610e:	add    edi,DWORD PTR [edx]
  406110:	pop    ecx
  406111:	sub    DWORD PTR [esi],0xe489583a
  406117:	cmp    DWORD PTR [ebx-0x7f],ebx
  40611a:	out    0x39,al
  40611c:	pop    edx
  40611d:	mov    eax,ebp
  40611f:	cmp    DWORD PTR ds:0x3439da81,edi
  406125:	mov    esp,ebx
  406127:	cmp    DWORD PTR [edi],edi
  406129:	sbb    ebx,0xdd893639
  40612f:	cmp    DWORD PTR [ecx-0x5fc6207f],esp
  406135:	mov    ecx,esi
  406137:	cmp    DWORD PTR [ebx-0x6dc60c7f],edx
  40613d:	mov    ebp,esi
  40613f:	cmp    DWORD PTR [eax],eax
  406141:	add    ecx,DWORD PTR [eax-0x43]
  406144:	xor    BYTE PTR [edx],dl
  406146:	inc    edi
  406147:	mov    bl,0x30
  406149:	adc    DWORD PTR [edi-0x4f],eax
  40614c:	xor    al,dh
  40614e:	inc    edi
  40614f:	mov    bh,0x30
  406151:	scas   eax,DWORD PTR es:[edi]
  406152:	inc    edi
  406153:	mov    ch,0x30
  406155:	sahf   
  406156:	inc    edi
  406157:	retf   
  406158:	xor    BYTE PTR [ebp-0x53cf31b9],bl
  40615e:	inc    edi
  40615f:	int3   
  406160:	xor    BYTE PTR [ebx-0x55cf3db9],ch
  406166:	inc    edi
  406167:	shl    BYTE PTR [eax],0x0
  40616a:	cdq    
  40616b:	inc    edi
  40616c:	shl    DWORD PTR [eax],0x68
  40616f:	inc    edi
  406170:	(bad)  
  406171:	xor    bh,dh
  406173:	cmp    edi,eax
  406175:	xor    dh,dh
  406177:	cmp    esp,eax
  406179:	xor    ch,ah
  40617b:	cmp    ebp,eax
  40617d:	xor    ah,ah
  40617f:	cmp    eax,ebx
  406181:	xor    bl,dl
  406183:	cmp    edi,ebx
  406185:	xor    dl,ah
  406187:	cmp    edx,edx
  406189:	xor    cl,ah
  40618b:	cmp    ecx,edx
  40618d:	xor    BYTE PTR [eax],ah
  40618f:	cmp    dl,ah
  406191:	xor    BYTE PTR [edi],bh
  406193:	cmp    dl,ch
  406195:	xor    BYTE PTR [esi],ch
  406197:	cmp    ch,dl
  406199:	xor    BYTE PTR ds:0x1c30eb3a,ch
  40619f:	cmp    ch,al
  4061a1:	xor    bl,bh
  4061a3:	cmp    esi,ebp
  4061a5:	xor    dl,bh
  4061a7:	cmp    esp,ebp
  4061a9:	xor    cl,ch
  4061ab:	cmp    edx,esp
  4061ad:	xor    BYTE PTR [eax],bl
  4061af:	cmp    ah,bl
  4061b1:	xor    BYTE PTR [edi+0x3a],al
  4061b4:	loopne 0x4061e6
  4061b6:	inc    esi
  4061b7:	cmp    ah,cl
  4061b9:	xor    BYTE PTR [esi+0x56ec0273],al
  4061bf:	je     0x4061c3
  4061c1:	in     eax,dx
  4061c2:	push   esi
  4061c3:	gs add ch,bh
  4061c6:	push   esi
  4061c7:	dec    esi
  4061c8:	add    dh,bl
  4061ca:	push   esi
  4061cb:	push   edi
  4061cc:	add    bl,BYTE PTR [ebx+0x23cb600]
  4061d2:	pushf  
  4061d3:	mov    dh,0x97
  4061d5:	or     eax,0xda0880c
  4061da:	sbb    eax,DWORD PTR [eax-0x77e0f26c]
  4061e0:	pop    edx
  4061e1:	or     eax,0xd598021
  4061e6:	and    cl,BYTE PTR [eax-0x7fdcf2a8]
  4061ec:	pop    edi
  4061ed:	or     eax,0xd668824
  4061f2:	and    eax,0x260bdd80
  4061f7:	mov    ah,ah
  4061f9:	or     esp,DWORD PTR [edi]
  4061fb:	and    bl,0xb
  4061fe:	sub    BYTE PTR [eax-0x7fd6f41e],cl
  406204:	icebp  
  406205:	or     ebp,DWORD PTR [edx]
  406207:	mov    al,dh
  406209:	or     ebp,DWORD PTR [ebx]
  40620b:	and    bh,0xb
  40620e:	sub    al,0x88
  406210:	into   
  406211:	or     ebp,DWORD PTR ds:0x2e0bf580
  406217:	mov    ah,bl
  406219:	or     ebp,DWORD PTR [edi]
  40621b:	sub    bl,0xb
  40621e:	xor    BYTE PTR [eax-0x7fcef416],cl
  406224:	leave  
  406225:	or     esi,DWORD PTR [edx]
  406227:	mov    al,cl
  406229:	or     esi,DWORD PTR [ebx]
  40622b:	or     bh,0xb
  40622e:	xor    al,0x88
  406230:	(bad)  
  406231:	or     esi,DWORD PTR ds:0x35428000
  406237:	push   es
  406238:	js     0x40627e
  40623a:	cmp    al,0x6
  40623c:	jno    0x406282
  40623e:	cmp    eax,DWORD PTR [esi]
  406240:	pop    esi
  406241:	inc    esp
  406242:	cmp    al,BYTE PTR [esi]
  406244:	pop    edi
  406245:	inc    esp
  406246:	sub    DWORD PTR [esi],eax
  406248:	dec    esp
  406249:	inc    esp
  40624a:	inc    ebx
  40624b:	push   es
  40624c:	inc    esi
  40624d:	inc    esp
  40624e:	inc    edx
  40624f:	push   es
  406250:	mov    DWORD PTR [ecx+eax*2+0x6],0x60044c4
  406258:	lds    eax,FWORD PTR [edi+ecx*1+0x6]
  40625c:	ret    0x644
  40625f:	push   es
  406260:	retf   
  406261:	inc    esp
  406262:	or     eax,0x444c006
  406267:	push   es
  406268:	leave  
  406269:	inc    esp
  40626a:	sbb    eax,DWORD PTR [esi]
  40626c:	mov    esi,0xcf060a44
  406271:	inc    esp
  406272:	or     DWORD PTR [esi],eax
  406274:	int3   
  406275:	inc    esp
  406276:	fmul   DWORD PTR [ecx]
  406278:	mov    ebp,0xba09c744
  40627d:	inc    esp
  40627e:	into   
  40627f:	or     ebx,edx
  406281:	inc    esp
  406282:	mov    ch,0x9
  406284:	enter  0xdc44,0x9
  406288:	rol    DWORD PTR [ebx+esi*4+0x9],0xb6
  40628d:	inc    esp
  40628e:	mov    dl,0x9
  406290:	push   edi
  406291:	inc    esp
  406292:	mov    cl,0x9
  406294:	push   esp
  406295:	inc    esp
  406296:	inc    edx
  406297:	push   es
  406298:	add    BYTE PTR [esi+eax*2+0x41],dl
  40629c:	push   es
  40629d:	push   ebp
  40629e:	inc    esi
  40629f:	inc    eax
  4062a0:	push   es
  4062a1:	aaa    
  4062a2:	inc    esi
  4062a3:	dec    edi
  4062a4:	push   es
  4062a5:	xor    al,BYTE PTR [esi+0x46]
  4062a8:	push   es
  4062a9:	cmp    eax,DWORD PTR [esi+0x4d]
  4062ac:	push   es
  4062ad:	xor    BYTE PTR [esi+0xa],al
  4062b0:	dec    esi
  4062b1:	mov    BYTE PTR [ebp-0x757fbef2],dl
  4062b7:	push   cs
  4062b8:	nop
  4062b9:	mov    BYTE PTR [ebx-0x777f6cf2],cl
  4062bf:	push   cs
  4062c0:	or     BYTE PTR [eax-0x7f82f177],0x8e
  4062c7:	push   cs
  4062c8:	xchg   esp,eax
  4062c9:	mov    bl,dl
  4062cb:	or     eax,0xe8c808f
  4062d0:	xchg   BYTE PTR [eax-0x7f86f175],cl
  4062d6:	push   esp
  4062d7:	sub    ebx,DWORD PTR [eax-0x78]
  4062da:	inc    eax
  4062db:	push   cs
  4062dc:	pop    ebx
  4062dd:	cmp    BYTE PTR [edi],0xe
  4062e0:	pop    edx
  4062e1:	mov    BYTE PTR [ecx+0xe],al
  4062e4:	push   ebp
  4062e5:	add    BYTE PTR [esi+0xe],0x3c
  4062e9:	mov    BYTE PTR [ebp+0xe],al
  4062ec:	aaa    
  4062ed:	add    BYTE PTR [esi+ecx*1+0x3e],0x88
  4062f2:	inc    ebx
  4062f3:	push   cs
  4062f4:	xor    DWORD PTR [eax-0x745ff1c6],eax
  4062fa:	cmp    DWORD PTR [esi],ecx
  4062fc:	mov    ds:0xe388300,eax
  406301:	xchg   edx,eax
  406302:	mov    esi,DWORD PTR [edi]
  406304:	push   cs
  406305:	lea    eax,[ebx-0x747bf1c2]
  40630b:	ror    BYTE PTR ds:0xe3c837f,cl
  406311:	jbe    0x40629e
  406313:	cmp    ecx,DWORD PTR [esi]
  406315:	test   eax,0xa80e7c83
  40631a:	mov    esi,DWORD PTR [edx+0xe]
  40631d:	stos   DWORD PTR es:[edi],eax
  40631e:	xor    DWORD PTR [ecx+0xe],0xffffffaa
  406322:	mov    eax,DWORD PTR [esi+ecx*1+0xe7683a5]
  406329:	add    BYTE PTR [edx],ah
  40632b:	inc    esi
  40632c:	aas    
  40632d:	add    al,0x21
  40632f:	inc    esi
  406330:	dec    esi
  406331:	add    al,0xf0
  406333:	inc    ebp
  406334:	cmp    DWORD PTR [edi+eiz*8],eax
  406337:	inc    ebp
  406338:	dec    edi
  406339:	add    al,0x76
  40633b:	inc    ebp
  40633c:	xor    al,BYTE PTR [esi*2+0x64043345]
  406343:	inc    ebp
  406344:	xor    BYTE PTR [ebx+edi*2],al
  406347:	inc    ebp
  406348:	xor    DWORD PTR [edx+ebx*2],eax
  40634b:	inc    ebp
  40634c:	ss add al,0x59
  40634f:	inc    ebp
  406350:	aaa    
  406351:	add    al,0xa8
  406353:	inc    ebp
  406354:	xor    al,0x4
  406356:	lahf   
  406357:	inc    ebp
  406358:	xor    eax,0x4545ae04
  40635d:	add    al,0xad
  40635f:	inc    ebp
  406360:	dec    edx
  406361:	add    al,0x0
  406363:	pushf  
  406364:	inc    ebp
  406365:	dec    ebx
  406366:	add    al,0x93
  406368:	inc    ebp
  406369:	dec    eax
  40636a:	add    al,0x72
  40636c:	inc    ebp
  40636d:	dec    ecx
  40636e:	add    al,0x71
  406370:	inc    ebp
  406371:	cmp    al,0x4
  406373:	mov    al,ds:0x97043845
  406378:	inc    ebp
  406379:	inc    esi
  40637a:	add    al,0x46
  40637c:	inc    esp
  40637d:	inc    ecx
  40637e:	add    al,0x45
  406380:	inc    esp
  406381:	cmp    eax,0x4243d404
  406386:	add    al,0xeb
  406388:	inc    ebx
  406389:	inc    edi
  40638a:	add    al,0xea
  40638c:	inc    ebx
  40638d:	inc    ebx
  40638e:	add    al,0xe9
  406390:	inc    ebx
  406391:	dec    ebp
  406392:	add    al,0x18
  406394:	inc    esp
  406395:	inc    eax
  406396:	add    al,0xcf
  406398:	inc    ebx
  406399:	and    al,0x4
  40639b:	inc    BYTE PTR [ebx+0x1a]
  40639e:	add    al,0xfd
  4063a0:	inc    ebx
  4063a1:	sbb    eax,DWORD PTR [esi+eax*4]
  4063a4:	mov    eax,0xc582260b
  4063a9:	or     edx,DWORD PTR [edx+ecx*4]
  4063ac:	mov    esi,0xc382150b
  4063b1:	or     esp,DWORD PTR [edx+ecx*4]
  4063b4:	mov    esp,0xc182130b
  4063b9:	or     esp,DWORD PTR ds:0x180c928a
  4063bf:	or     BYTE PTR [edi-0x7f75e6f4],0xc
  4063c6:	sbb    al,BYTE PTR [eax]
  4063c8:	sub    BYTE PTR [ebp+0xc],0x1b
  4063cc:	mov    dl,BYTE PTR [esi+0x7b821c0c]
  4063d2:	or     al,0x1d
  4063d4:	mov    al,BYTE PTR [eax+0x6b821e0c]
  4063da:	or     al,0x1f
  4063dc:	mov    cl,BYTE PTR [edx+0xc]
  4063df:	das    
  4063e0:	or     BYTE PTR [ebp+0xc],0x20
  4063e4:	mov    cl,BYTE PTR [esp+ecx*1+0x21]
  4063e8:	or     BYTE PTR [edi+0xc],0x22
  4063ec:	mov    ah,BYTE PTR [esi]
  4063ee:	mov    db0,edx
  4063f1:	xor    DWORD PTR [edi],ecx
  4063f3:	push   ss
  4063f4:	mov    ch,BYTE PTR [eax]
  4063f6:	movlps xmm0,QWORD PTR [edx-0x75d3f0cd]
  4063fd:	and    cl,BYTE PTR [edi]
  4063ff:	sub    eax,DWORD PTR [edx-0x75e8f0db]
  406405:	adc    al,0xf
  406407:	sub    BYTE PTR [edx-0x75d2f109],al
  40640d:	dec    BYTE PTR [esi]
  40640f:	sub    DWORD PTR [edx-0x75d8f117],eax
  406415:	lock push cs
  406417:	sub    al,BYTE PTR [edx-0x7a79f246]
  40641d:	inc    edx
  40641e:	inc    ecx
  40641f:	add    al,0xfe
  406421:	inc    ebp
  406422:	inc    eax
  406423:	add    al,0xf
  406425:	inc    esi
  406426:	inc    edi
  406427:	add    al,0xc
  406429:	inc    esi
  40642a:	dec    esi
  40642b:	add    al,0x0
  40642d:	sbb    al,0x46
  40642f:	inc    esp
  406430:	add    al,0xfa
  406432:	inc    ebp
  406433:	pop    ebx
  406434:	add    al,0x10
  406436:	inc    esi
  406437:	dec    edx
  406438:	add    al,0xed
  40643a:	inc    ebp
  40643b:	dec    eax
  40643c:	add    al,0x1
  40643e:	inc    esi
  40643f:	popf   
  406440:	add    al,0x3
  406442:	inc    esi
  406443:	test   BYTE PTR [ebx+edi*2],al
  406446:	bound  edx,QWORD PTR [edx-0x6eba15fc]
  40644c:	add    al,0xe3
  40644e:	inc    ebp
  40644f:	jo     0x406455
  406451:	fadd   DWORD PTR [ebp+0x7f]
  406454:	add    al,0x31
  406456:	inc    ebp
  406457:	jbe    0x40645d
  406459:	dec    esp
  40645a:	inc    ebp
  40645b:	jge    0x406461
  40645d:	push   ss
  40645e:	inc    ebp
  40645f:	push   esp
  406460:	add    al,0x3a
  406462:	inc    ebp
  406463:	imul   eax,DWORD PTR [ebx+edx*2],0x45
  406467:	pop    edx
  406468:	add    al,0x4d
  40646a:	inc    ebp
  40646b:	pop    ecx
  40646c:	add    al,0x16
  40646e:	inc    ebp
  40646f:	dec    eax
  406470:	add    al,0x38
  406472:	inc    ebp
  406473:	and    al,BYTE PTR [edi+edx*1]
  406476:	inc    ebp
  406477:	and    DWORD PTR [esp+edx*1],eax
  40647a:	inc    ebp
  40647b:	and    BYTE PTR [edx*1+0x1203a745],al
  406482:	inc    ebp
  406483:	scas   al,BYTE PTR es:[edi]
  406484:	add    edi,ebx
  406486:	inc    esp
  406487:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406488:	add    esi,eax
  40648a:	inc    esp
  40648b:	lods   al,BYTE PTR ds:[esi]
  40648c:	add    edi,ecx
  40648e:	inc    esp
  40648f:	mov    ebx,0x44ee0003
  406494:	mov    edx,0xa451f03
  406499:	mov    ds:0xa208cc85,eax
  40649e:	test   ebp,ecx
  4064a0:	or     BYTE PTR [ebp-0x53f7397b],dh
  4064a6:	test   edi,eax
  4064a8:	or     BYTE PTR [edi-0x61f7377b],ah
  4064ae:	test   ecx,ecx
  4064b0:	or     BYTE PTR [ecx-0x67f71d7b],bl
  4064b6:	test   ebx,esp
  4064b8:	or     BYTE PTR [ebx-0x6af71a7b],bl
  4064be:	test   esi,ebx
  4064c0:	or     BYTE PTR [eax*4-0x7ac8f721],bh
  4064c7:	loopne 0x4064d1
  4064c9:	ds test ecx,esp
  4064cc:	or     BYTE PTR [ecx],dh
  4064ce:	test   edx,ebx
  4064d0:	or     BYTE PTR [eax],ah
  4064d2:	test   ebx,ebx
  4064d4:	or     BYTE PTR [eax-0x7b],cl
  4064d7:	icebp  
  4064d8:	or     BYTE PTR [ebx-0x7b],cl
  4064db:	hlt    
  4064dc:	or     BYTE PTR [edx-0x7b],cl
  4064df:	repz or BYTE PTR ds:0x408ee85,cl
  4064e6:	test   ebp,ebp
  4064e8:	or     BYTE PTR [edi],cl
  4064ea:	test   eax,esi
  4064ec:	or     BYTE PTR [esi],al
  4064ee:	test   edi,ebp
  4064f0:	or     BYTE PTR [ecx],dl
  4064f2:	test   edx,ebp
  4064f4:	or     BYTE PTR [eax],dl
  4064f6:	add    BYTE PTR [ebp-0x7afcf717],al
  4064fc:	in     al,dx
  4064fd:	or     BYTE PTR [edx],al
  4064ff:	test   ebx,ebp
  406501:	or     ch,dl
  406503:	test   dh,ah
  406505:	or     ah,cl
  406507:	test   ch,ah
  406509:	or     bh,al
  40650b:	test   al,ch
  40650d:	or     BYTE PTR [esi+0x8e784],bh
  406513:	iret   
  406514:	inc    esp
  406515:	retf   0x3e03
  406518:	inc    ebp
  406519:	retf   
  40651a:	add    edi,DWORD PTR ds:0x2c03c945
  406520:	inc    ebp
  406521:	enter  0xb03,0x45
  406525:	into   
  406526:	add    edi,edx
  406528:	inc    esp
  406529:	iret   
  40652a:	add    edi,ecx
  40652c:	inc    esp
  40652d:	int3   
  40652e:	add    edi,eax
  406530:	inc    esp
  406531:	int    0x3
  406533:	pop    es
  406534:	inc    ebp
  406535:	ret    0x603
  406538:	inc    ebp
  406539:	ret    
  40653a:	add    ecx,DWORD PTR [esi+0x2b]
  40653d:	mov    esp,0x12b3d23
  406542:	and    eax,0x24f52bfc
  406547:	or     ebp,DWORD PTR [edx*1+0x2a2c0a23]
  40654e:	and    ecx,DWORD PTR [ecx]
  406550:	sub    al,0xb
  406552:	and    eax,0x23aa2bf8
  406557:	pop    ss
  406558:	sub    ebp,DWORD PTR [eax+0x2b060023]
  40655e:	test   eax,0xaf2b0523
  406563:	and    edx,esp
  406565:	sub    edx,DWORD PTR [eax-0x69d42cdd]
  40656b:	and    eax,edx
  40656d:	sub    edx,DWORD PTR [edi-0x6ad46edd]
  406573:	and    esi,DWORD PTR [eax+0x7f23ad2b]
  406579:	sub    esp,DWORD PTR [ecx+0x692b7323]
  40657f:	and    ah,BYTE PTR [edx+0x2b]
  406582:	push   ebp
  406583:	and    ah,cl
  406585:	and    eax,0x2600226e
  40658a:	and    BYTE PTR [edx],ah
  40658c:	xchg   cl,bl
  40658e:	cmc    
  40658f:	xor    esp,DWORD PTR [edx+ebx*8-0xb]
  406593:	sbb    al,0x64
  406595:	fcomi  st,st(5)
  406597:	sbb    eax,0x6f5dea4
  40659c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40659d:	loope  0x406594
  40659f:	cmp    esp,DWORD PTR [edx+eiz*8-0x115bbd0b]
  4065a6:	cmc    
  4065a7:	shl    DWORD PTR [edi-0x582e0a29],cl
  4065ad:	loopne 0x4065a4
  4065af:	pusha  
  4065b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065b1:	out    dx,eax
  4065b2:	cmc    
  4065b3:	sbb    DWORD PTR [ebx+eiz*8-0x1b9b7e0b],esp
  4065ba:	cmc    
  4065bb:	and    BYTE PTR [ebp+ecx*8-0xb],0x28
  4065c0:	add    BYTE PTR [esi+esi*4-0xb],ah
  4065c4:	sub    DWORD PTR [edi+edi*2-0xa],esp
  4065c8:	es fs push 0x806427f6
  4065cf:	test   BYTE PTR [ecx],0x64
  4065d2:	(bad)  
  4065d3:	not    BYTE PTR [ecx-0x70097b79]
  4065d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065da:	not    BYTE PTR [bx+si+0x6ea7]
  4065df:	not    BYTE PTR [ecx-0x6d09aa59]
  4065e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065e6:	jl     0x4065d9
  4065e8:	and    DWORD PTR [edx-0x5c3a0ec5],ebp
  4065ee:	cmp    dh,cl
  4065f0:	xchg   ecx,eax
  4065f1:	stos   DWORD PTR es:[edi],eax
  4065f2:	cmp    ecx,esi
  4065f4:	or     BYTE PTR [edx+0x6a0bf138],ah
  4065fa:	aas    
  4065fb:	icebp  
  4065fc:	or     al,0x62
  4065fe:	ss icebp 
  406600:	or     DWORD PTR [edx+0x43],ebp
  406603:	icebp  
  406604:	and    esp,DWORD PTR [edx+0x42]
  406607:	(bad)  
  406609:	mov    WORD PTR [esi-0x27],ds
  40660c:	cli    
  40660d:	jno    0x40666e
  40660f:	enter  0x81fa,0x5f
  406613:	mov    bh,0xfa
  406615:	jge    0x406676
  406617:	fdivp  st(2),st
  406619:	xchg   ebp,eax
  40661a:	pop    edi
  40661b:	(bad)  
  40661e:	pop    edi
  40661f:	int3   
  406620:	cli    
  406621:	das    
  406622:	bound  esi,QWORD PTR [ebx+0x622c00fa]
  406628:	xchg   edx,eax
  406629:	cli    
  40662a:	loope  0x40668a
  40662c:	xchg   ecx,eax
  40662d:	cli    
  40662e:	sbb    eax,0x12fa9062
  406633:	bound  ebx,QWORD PTR [edi+0x765f6dfa]
  406639:	cli    
  40663a:	gs pop edi
  40663c:	jge    0x406638
  40663e:	jne    0x40669f
  406640:	je     0x40663c
  406642:	pop    ebp
  406643:	pop    edi
  406644:	jnp    0x406640
  406646:	xchg   DWORD PTR [edi-0x7e],ebx
  406649:	std    
  40664a:	test   BYTE PTR [edx-0x7f],ah
  40664d:	std    
  40664e:	xchg   DWORD PTR [edx-0x80],esp
  406651:	std    
  406652:	test   DWORD PTR [edx-0x71],esp
  406655:	std    
  406656:	and    BYTE PTR [edx-0x7a],0xfd
  40665a:	mov    BYTE PTR [edx-0x73],ah
  40665d:	std    
  40665e:	and    DWORD PTR [edx-0x7c],0x8b627efd
  406665:	std    
  406666:	jg     0x4066ca
  406668:	pop    edx
  406669:	std    
  40666a:	jne    0x4066ce
  40666c:	pop    ecx
  40666d:	std    
  40666e:	je     0x4066d2
  406670:	dec    edi
  406671:	std    
  406672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406673:	pop    esi
  406674:	xor    eax,0x5c62a3fd
  406679:	std    
  40667a:	push   0x62
  40667c:	xor    edi,ebp
  40667e:	aam    0x63
  406680:	or     bh,BYTE PTR [eax]
  406682:	xor    edx,DWORD PTR [ecx-0x71d4c4d5]
  406688:	sub    ebx,DWORD PTR [edx+0x2b8f1c00]
  40668e:	xchg   ebp,eax
  40668f:	sbb    al,0x8c
  406691:	sub    ebx,DWORD PTR [esp+ecx*1+0xc972b8d]
  406698:	mov    ch,BYTE PTR [ebx]
  40669a:	jle    0x406698
  40669c:	mov    ch,BYTE PTR [ebx]
  40669e:	cmp    esp,0xec722b3d
  4066a4:	push   edx
  4066a5:	sub    ch,BYTE PTR [ebp-0x14]
  4066a8:	pop    ecx
  4066a9:	sub    DWORD PTR [esp+ebx*8+0x56],esp
  4066ad:	or     bl,BYTE PTR [edi-0x24]
  4066b0:	pop    edx
  4066b1:	sub    DWORD PTR [edx-0x5ad47834],ebp
  4066b7:	int3   
  4066b8:	mov    BYTE PTR [ebx],ch
  4066ba:	lods   al,BYTE PTR ds:[esi]
  4066bb:	mov    esp,0xbca72b85
  4066c0:	xchg   BYTE PTR [ebx],ch
  4066c2:	mov    al,ds:0xa32b62ac
  4066c7:	lods   al,BYTE PTR ds:[esi]
  4066c8:	dec    edi
  4066c9:	sub    al,0x35
  4066cb:	pushf  
  4066cc:	add    DWORD PTR [edi],ebp
  4066ce:	sub    al,0x9c
  4066d0:	jmp    0x406700
  4066d2:	daa    
  4066d3:	mov    edi,?
  4066d5:	cs push ds
  4066d7:	mov    ebx,ss
  4066d9:	sbb    DWORD PTR cs:[esp+ecx*2+0x2a],edi
  4066de:	sbb    BYTE PTR [ebx+ecx*2+0x2a],bh
  4066e2:	sbb    ebp,DWORD PTR [eax+ecx*2+0x2a]
  4066e6:	sbb    ch,BYTE PTR [edi+eax*2+0x2a]
  4066ea:	cmp    eax,0x372b465c
  4066ef:	add    BYTE PTR [edx+esi*2+0x2a],bl
  4066f3:	ds dec esp
  4066f5:	jno    0x406721
  4066f7:	xor    BYTE PTR [edi+eax*2+0x2d],cl
  4066fb:	add    BYTE PTR [eax+ebp*1-0x5f],ah
  4066ff:	and    eax,0x25b5289b
  406704:	call   0xc428:0x7925bf28
  40670b:	and    eax,0x25a72a48
  406710:	dec    edi
  406711:	sub    ch,bh
  406713:	and    eax,0x25a02a3e
  406718:	cmp    eax,0xcc25a62a
  40671d:	sub    DWORD PTR [eax-0x49d63cdb],edi
  406723:	and    eax,0x260f29c2
  406728:	shr    DWORD PTR [ecx],0x2b
  40672b:	and    BYTE PTR [eax],dl
  40672d:	sub    ah,BYTE PTR [ebx-0x44d608db]
  406733:	and    eax,0x25b12a06
  406738:	add    eax,0x1426112a
  40673d:	sub    dl,BYTE PTR [edi]
  40673f:	or     ebp,DWORD PTR es:[edx]
  406742:	push   0x6f2a0a26
  406747:	sub    DWORD PTR es:[ecx],ebp
  40674a:	outs   dx,BYTE PTR ds:[esi]
  40674b:	es aas 
  40674d:	sub    DWORD PTR ds:0x15293e27,edx
  406753:	and    BYTE PTR [eax],al
  406755:	sub    eax,0x2c202a29
  40675a:	sub    DWORD PTR [eax],ebx
  40675c:	daa    
  40675d:	ret    
  40675e:	sub    DWORD PTR [edi+eiz*1],ebx
  406761:	mov    dl,0x29
  406763:	fs es mov cl,0x29
  406767:	data16 es mov al,0x29
  40676b:	dec    ebx
  40676c:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40676e:	sub    DWORD PTR ds:0x729a626,esi
  406774:	xchg   BYTE PTR es:[edi-0xd],cl
  406778:	adc    al,0xa5
  40677a:	push   eax
  40677b:	repz push ss
  40677d:	addr16 cmp eax,0x266637f3
  406783:	repnz sbb DWORD PTR [esi+0x2b],esp
  406787:	repnz sbb eax,0x3bf07866
  40678d:	xchg   BYTE PTR [ebx-0x2e79c20e],dh
  406793:	repnz daa 
  406795:	fs ret 0x26f2
  406799:	fs fptan 
  40679c:	scas   al,BYTE PTR es:[edi]
  40679d:	xchg   bh,dl
  40679f:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067a2:	fdiv   st,st(2)
  4067a4:	sub    BYTE PTR [ebp+edx*8-0x245af60e],ah
  4067ab:	repnz pop esi
  4067ad:	xchg   bh,ch
  4067af:	repnz pop ss
  4067b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067b2:	aad    0xf2
  4067b4:	xchg   esp,eax
  4067b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067b6:	fcomi  st,st(2)
  4067b8:	mov    ds:0xf2c4a400,eax
  4067bd:	retf   0xc86b
  4067c0:	repnz pop es
  4067c2:	gs retf 
  4067c4:	repnz sub DWORD PTR [ecx+edx*8-0xe],esp
  4067c9:	and    BYTE PTR [edi+ecx*8-0xe],0x81
  4067ce:	fs jge 0x4067c4
  4067d1:	mov    eax,ds:0xa2f38564
  4067d6:	fs ins BYTE PTR es:[edi],dx
  4067d8:	repnz push ss
  4067da:	data16 jns 0x4067cf
  4067dd:	iret   
  4067de:	mov    ecx,DWORD PTR [edx-0x727c2f0e]
  4067e4:	repnz ror DWORD PTR [ebx-0x7c2d0d74],1
  4067eb:	xchg   edx,esi
  4067ed:	ror    DWORD PTR [ebx+0x32f80642],cl
  4067f3:	dec    eax
  4067f4:	or     eax,0x4483bf8
  4067f9:	clc    
  4067fa:	xor    BYTE PTR [eax+0xb],cl
  4067fd:	clc    
  4067fe:	pop    ecx
  4067ff:	dec    eax
  406800:	sbb    bh,al
  406802:	pop    esi
  406803:	dec    eax
  406804:	sbb    eax,edi
  406806:	dec    edi
  406807:	dec    eax
  406808:	or     al,bh
  40680a:	dec    esp
  40680b:	dec    eax
  40680c:	div    edi
  40680e:	cmp    eax,0x3af7de48
  406813:	dec    eax
  406814:	(bad)
  406817:	dec    eax
  406818:	int3   
  406819:	imul   DWORD PTR [eax]
  40681b:	dec    eax
  40681c:	shl    edi,cl
  40681e:	add    cl,ah
  406820:	inc    edi
  406821:	mov    dl,0xf7
  406823:	out    0x47,al
  406825:	mov    cl,0xf7
  406827:	out    0x47,eax
  406829:	mov    al,0xf7
  40682b:	in     al,0x47
  40682d:	mov    edi,0x9647e5f7
  406832:	mul    edx
  406834:	inc    edi
  406835:	popf   
  406836:	imul   ebx
  406838:	inc    edi
  406839:	xchg   esp,eax
  40683a:	mul    eax
  40683c:	inc    edi
  40683d:	fwait
  40683e:	imul   DWORD PTR [ecx-0x510875b9]
  406844:	inc    edi
  406845:	mov    edi,esi
  406847:	lahf   
  406848:	inc    edi
  406849:	inc    edx
  40684a:	test   BYTE PTR [esi-0x7809beb0],0x50
  406851:	xor    dh,0x84
  406854:	push   eax
  406855:	(bad)  
  406856:	test   BYTE PTR [ebp-0x7d0979b0],0x50
  40685d:	(bad)  
  40685e:	test   BYTE PTR [ebx-0x7f097bb0],0x50
  406865:	fwait
  406866:	test   BYTE PTR [ecx+0x70800a50],0x4a
  40686d:	add    al,0x83
  40686f:	pop    eax
  406870:	dec    ebx
  406871:	add    al,0x52
  406873:	push   eax
  406874:	dec    esp
  406875:	add    al,0x4d
  406877:	pop    eax
  406878:	dec    ebp
  406879:	add    al,0x44
  40687b:	push   eax
  40687c:	dec    esi
  40687d:	add    al,0x3f
  40687f:	cmp    BYTE PTR [edi+0x4],cl
  406882:	push   esi
  406883:	add    BYTE PTR [eax],dh
  406885:	push   eax
  406886:	add    al,0x39
  406888:	cmp    BYTE PTR [ecx+0x4],dl
  40688b:	cmp    BYTE PTR [eax],dh
  40688d:	xor    al,BYTE PTR [ebx+edi*1]
  406890:	sbb    BYTE PTR [ebx],dh
  406892:	add    al,0x9a
  406894:	ja     0x4068cb
  406896:	add    al,0x95
  406898:	ja     0x4068d0
  40689a:	add    al,0x9c
  40689c:	ja     0x4068d5
  40689e:	add    al,0x97
  4068a0:	xchg   edi,eax
  4068a1:	cmp    BYTE PTR [esi+edi*2],al
  4068a4:	xchg   edi,eax
  4068a5:	cmp    DWORD PTR [ecx+eax*4],eax
  4068a8:	xchg   edi,eax
  4068a9:	cmp    al,BYTE PTR [eax+esi*2]
  4068ac:	xchg   edi,eax
  4068ad:	cmp    eax,DWORD PTR [ebx+esi*2]
  4068b0:	ja     0x4068ee
  4068b2:	add    al,0x62
  4068b4:	ja     0x4068f3
  4068b6:	add    al,0x5d
  4068b8:	ja     0x4068f8
  4068ba:	add    al,0x54
  4068bc:	ja     0x4068fd
  4068be:	add    al,0x4f
  4068c0:	xchg   edi,eax
  4068c1:	inc    eax
  4068c2:	add    al,0x46
  4068c4:	xchg   edi,eax
  4068c5:	inc    ecx
  4068c6:	add    al,0xa9
  4068c8:	xchg   edi,eax
  4068c9:	bound  eax,QWORD PTR [eax+ebp*4]
  4068cc:	xchg   edi,eax
  4068cd:	arpl   WORD PTR [ebx+ebp*4],ax
  4068d0:	ja     0x406936
  4068d2:	add    al,0x2a
  4068d4:	ja     0x40693b
  4068d6:	add    al,0x25
  4068d8:	ja     0x406940
  4068da:	add    al,0x2c
  4068dc:	ja     0x406945
  4068de:	add    al,0x27
  4068e0:	xchg   edi,eax
  4068e1:	push   0x31a80004
  4068e6:	sub    eax,0x31b7000e
  4068eb:	and    cl,BYTE PTR [esi]
  4068ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068ee:	xor    DWORD PTR [ebx],esp
  4068f0:	push   cs
  4068f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068f2:	xor    DWORD PTR [eax],esp
  4068f4:	push   cs
  4068f5:	xchg   esp,eax
  4068f6:	xor    DWORD PTR [ecx],esp
  4068f8:	push   cs
  4068f9:	mov    ds:0xa20e2631,eax
  4068fe:	xor    DWORD PTR [edi],esp
  406900:	push   cs
  406901:	mov    eax,ds:0x700e2431
  406906:	xor    DWORD PTR ds:0x3a318f0e,esp
  40690c:	push   cs
  40690d:	mov    ?,WORD PTR [ecx]
  40690f:	cmp    ecx,DWORD PTR [esi]
  406911:	jge    0x406944
  406913:	cmp    BYTE PTR [esi],cl
  406915:	fdiv   QWORD PTR [edx]
  406917:	cmp    DWORD PTR [esi],ecx
  406919:	(bad)  [edx]
  40691b:	ds push cs
  40691d:	retf   0x3f32
  406920:	push   cs
  406921:	cmp    DWORD PTR [ebx],esi
  406923:	cmp    al,0xe
  406925:	sbb    BYTE PTR [ebx],dh
  406927:	cmp    eax,0x3233270e
  40692c:	push   cs
  40692d:	push   ss
  40692e:	xor    esi,DWORD PTR [ebx]
  406930:	push   cs
  406931:	cmc    
  406932:	xor    dh,BYTE PTR [eax]
  406934:	push   cs
  406935:	shl    DWORD PTR [edx],0x34
  406938:	push   cs
  406939:	adc    BYTE PTR [ebx],dh
  40693b:	xor    eax,0x4a32ff0e
  406940:	push   cs
  406941:	push   cs
  406942:	xor    ecx,DWORD PTR [ebx+0xe]
  406945:	or     eax,0xfc0e4833
  40694a:	xor    cl,BYTE PTR [ecx+0xe]
  40694d:	add    bl,bh
  40694f:	xor    cl,BYTE PTR [esi+0xe]
  406952:	or     dh,BYTE PTR [ebx]
  406954:	dec    edi
  406955:	push   cs
  406956:	dec    ecx
  406957:	xor    cl,BYTE PTR [esi+ecx*1+0x48]
  40695b:	xor    cl,BYTE PTR [ebp+0xe]
  40695e:	xchg   BYTE PTR [ecx-0x7d6fb7e6],al
  406964:	sbb    cl,BYTE PTR [ecx-0x78]
  406967:	jae    0x406983
  406969:	dec    edx
  40696a:	xor    BYTE PTR [edx+ebx*1+0x4b],0x78
  40696f:	test   DWORD PTR [edx],ebx
  406971:	dec    esp
  406972:	nop
  406973:	pop    esi
  406974:	sbb    cl,BYTE PTR [ebp-0x78]
  406977:	cmp    DWORD PTR [edx],ebx
  406979:	push   eax
  40697a:	cmp    BYTE PTR [edx],0x1a
  40697d:	push   ecx
  40697e:	js     0x4069bb
  406980:	sbb    dl,BYTE PTR [edx-0x70]
  406983:	cmp    al,0x1a
  406985:	push   ebx
  406986:	mov    BYTE PTR ds:0x16805405,bl
  40698c:	add    eax,0x51f7855
  406991:	push   esi
  406992:	nop
  406993:	sbb    BYTE PTR ds:0x5218857,al
  406999:	pop    eax
  40699a:	and    BYTE PTR [edx],0x5
  40699d:	pop    ecx
  40699e:	js     0x40696a
  4069a0:	pop    ss
  4069a1:	xor    DWORD PTR [edi-0x48cde835],esi
  4069a7:	int3   
  4069a8:	pop    ss
  4069a9:	xor    esi,DWORD PTR [edi-0x48cbe83b]
  4069af:	into   
  4069b0:	pop    ss
  4069b1:	xor    eax,0x17c79700
  4069b6:	ss xchg edi,eax
  4069b8:	nop
  4069b9:	sbb    BYTE PTR [edi],dh
  4069bb:	xchg   edi,eax
  4069bc:	jno    0x4069d6
  4069be:	cmp    BYTE PTR [edi+0x77391882],dl
  4069c4:	sbb    DWORD PTR [eax],0x3a
  4069c7:	ja     0x406a3d
  4069c9:	sbb    BYTE PTR [ebx],bh
  4069cb:	ja     0x40695a
  4069cd:	sbb    BYTE PTR [edi+esi*2],bh
  4069d0:	xchg   BYTE PTR [eax],bl
  4069d2:	cmp    eax,0x3e185f57
  4069d7:	push   edi
  4069d8:	inc    edx
  4069d9:	pushf  
  4069da:	adc    dl,BYTE PTR [ecx+0x51]
  4069dd:	xchg   ebx,eax
  4069de:	adc    al,BYTE PTR [esi+0x51]
  4069e1:	xchg   edx,eax
  4069e2:	adc    al,bh
  4069e4:	push   ebx
  4069e5:	xchg   ecx,eax
  4069e6:	adc    al,ah
  4069e8:	push   ebx
  4069e9:	jo     0x4069fd
  4069eb:	lds    edx,FWORD PTR [ebx+0x7f]
  4069ee:	adc    al,dl
  4069f0:	push   ebx
  4069f1:	jbe    0x406a05
  4069f3:	retf   
  4069f4:	push   ebx
  4069f5:	jge    0x406a09
  4069f7:	rcl    BYTE PTR [ebx+0x54],0x12
  4069fb:	leave  
  4069fc:	push   ebx
  4069fd:	imul   edx,DWORD PTR [edx],0xffffffbe
  406a00:	push   ebx
  406a01:	pop    edx
  406a02:	adc    cl,bh
  406a04:	push   ebx
  406a05:	pop    ecx
  406a06:	adc    cl,ah
  406a08:	push   ebx
  406a09:	dec    eax
  406a0a:	adc    bh,BYTE PTR [ebp-0x45edc8ad]
  406a10:	push   ebx
  406a11:	ds adc dl,bl
  406a14:	push   ebx
  406a15:	and    eax,0x53c80012
  406a1a:	lods   al,BYTE PTR ds:[esi]
  406a1b:	adc    ecx,eax
  406a1d:	push   ebx
  406a1e:	mov    ds:0xa253b611,eax
  406a23:	adc    DWORD PTR [edi+0x53],edx
  406a26:	mov    eax,ds:0xa0535411
  406a2b:	adc    DWORD PTR [ebp+0x53],edx
  406a2e:	scas   eax,DWORD PTR es:[edi]
  406a2f:	adc    DWORD PTR [edx+0x53],edx
  406a32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a33:	adc    DWORD PTR [ebx],edi
  406a35:	push   ebx
  406a36:	lods   eax,DWORD PTR ds:[esi]
  406a37:	adc    DWORD PTR [eax],esi
  406a39:	push   ebx
  406a3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a3b:	adc    DWORD PTR [ecx],edi
  406a3d:	push   ebx
  406a3e:	mov    ebx,0xaa532e11
  406a43:	adc    DWORD PTR [edi+0x53],ebx
  406a46:	test   eax,0xb8535c11
  406a4b:	adc    DWORD PTR [ebp+0x53],ecx
  406a4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a4f:	adc    DWORD PTR [edx+0x53],ecx
  406a52:	or     ah,BYTE PTR [edi+esi*2+0x779f3b7f]
  406a59:	jl     0x406a96
  406a5b:	ss ja  0x406adb
  406a5e:	cmp    edi,DWORD PTR [ecx]
  406a60:	ja     0x406a04
  406a62:	cmp    edi,DWORD PTR [eax]
  406a64:	xchg   edi,eax
  406a65:	mov    ds:0xa0973b3b,eax
  406a6a:	cmp    ebx,DWORD PTR [edx]
  406a6c:	xchg   edi,eax
  406a6d:	mov    eax,ds:0xea97153b
  406a72:	sbb    bl,BYTE PTR [edi+esi*2]
  406a75:	jmp    0x406a91
  406a77:	pop    ss
  406a78:	ja     0x406a62
  406a7a:	sbb    bh,BYTE PTR [esi]
  406a7c:	add    BYTE PTR [edi-0x17],dh
  406a7f:	sbb    al,BYTE PTR [ecx+0x77]
  406a82:	out    dx,al
  406a83:	sbb    dh,BYTE PTR [eax]
  406a85:	xchg   edi,eax
  406a86:	out    dx,eax
  406a87:	sbb    dh,BYTE PTR [ebx]
  406a89:	xchg   edi,eax
  406a8a:	in     al,dx
  406a8b:	sbb    ah,BYTE PTR [edx]
  406a8d:	xchg   edi,eax
  406a8e:	in     eax,dx
  406a8f:	sbb    bl,BYTE PTR ds:0x141ad297
  406a95:	ja     0x406a6a
  406a97:	sbb    cl,BYTE PTR [edi]
  406a99:	ja     0x406a6b
  406a9b:	sbb    al,dh
  406a9d:	adc    cl,0x1a
  406aa0:	leave  
  406aa1:	js     0x406a79
  406aa3:	sbb    cl,al
  406aa5:	nop
  406aa6:	xlat   BYTE PTR ds:[ebx]
  406aa7:	sbb    cl,bl
  406aa9:	mov    ah,dl
  406aab:	sbb    cl,dl
  406aad:	adc    ch,0x1a
  406ab0:	lds    edi,FWORD PTR [eax-0x26]
  406ab3:	sbb    cl,ah
  406ab5:	nop
  406ab6:	fistp  DWORD PTR [edx]
  406ab8:	(bad)  
  406ab9:	mov    al,bl
  406abb:	sbb    cl,BYTE PTR [esi-0x6ee52680]
  406ac1:	js     0x406aa1
  406ac3:	sbb    al,BYTE PTR [eax-0x7ce52070]
  406ac9:	mov    ah,bl
  406acb:	sbb    al,BYTE PTR [eax]
  406acd:	adc    al,0x4c
  406acf:	mov    ch,0x11
  406ad1:	sti    
  406ad2:	dec    ebx
  406ad3:	retf   0xa11
  406ad6:	dec    esp
  406ad7:	retf   
  406ad8:	adc    DWORD PTR [ecx],ebx
  406ada:	dec    esp
  406adb:	enter  0x3811,0x4c
  406adf:	xor    DWORD PTR [bx+si],eax
  406ae2:	das    
  406ae3:	dec    esp
  406ae4:	jnp    0x406b17
  406ae6:	fimul  WORD PTR [edx+esi*2+0x31]
  406aea:	fisttp QWORD PTR [ebp+esi*2+0x31]
  406aee:	lods   al,BYTE PTR ds:[esi]
  406aef:	dec    esp
  406af0:	mov    esi,DWORD PTR [ecx]
  406af2:	mov    bl,0x4c
  406af4:	mov    ?,WORD PTR [ecx]
  406af6:	mov    ds:0x91318c4c,al
  406afb:	dec    esp
  406afc:	xchg   DWORD PTR [ecx],esi
  406afe:	jo     0x406b4c
  406b00:	test   BYTE PTR [ecx],dh
  406b02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b03:	dec    esp
  406b04:	loope  0x406b17
  406b06:	xchg   esi,eax
  406b07:	dec    esp
  406b08:	cli    
  406b09:	adc    DWORD PTR [ebp-0x77ee0cb4],edx
  406b0f:	dec    esp
  406b10:	mov    ds:0xa10fc320,eax
  406b15:	and    BYTE PTR [ebx+0xf],bl
  406b18:	pop    ebx
  406b19:	add    DWORD PTR [edx+0xf],ebp
  406b1c:	pop    eax
  406b1d:	add    ecx,ebp
  406b1f:	adc    BYTE PTR [ebp+0x1],bh
  406b22:	call   FWORD PTR [edi-0x56]
  406b25:	and    BYTE PTR [esi],cl
  406b27:	pusha  
  406b28:	stos   DWORD PTR es:[edi],eax
  406b29:	and    BYTE PTR ds:0xfc20a860,cl
  406b2f:	pop    edi
  406b30:	test   eax,0xae600320
  406b35:	and    BYTE PTR [edx],dl
  406b37:	pusha  
  406b38:	scas   eax,DWORD PTR es:[edi]
  406b39:	and    BYTE PTR [ecx],al
  406b3b:	pusha  
  406b3c:	lods   al,BYTE PTR ds:[esi]
  406b3d:	and    BYTE PTR [eax+0x5f],al
  406b40:	lods   eax,DWORD PTR ds:[esi]
  406b41:	and    BYTE PTR [edi],dh
  406b43:	pop    edi
  406b44:	mov    ds:0x82860020,al
  406b49:	sub    DWORD PTR [ecx-0x55d6809a],ebp
  406b4f:	data16 jo 0x406b7b
  406b52:	stos   DWORD PTR es:[edi],eax
  406b53:	lea    bp,[ecx]
  406b56:	lods   al,BYTE PTR ds:[esi]
  406b57:	and    WORD PTR [eax+eax*1-0x7a],dx
  406b5c:	and    DWORD PTR [ecx],ecx
  406b5e:	add    BYTE PTR [esi-0x79ffabee],al
  406b64:	adc    cl,BYTE PTR [ecx]
  406b66:	add    BYTE PTR [esi-0x79ffabe0],al
  406b6c:	std    
  406b6d:	or     BYTE PTR [eax],al
  406b6f:	xchg   BYTE PTR [esi],dl
  406b71:	push   esp
  406b72:	add    BYTE PTR [esi-0x79fff6d2],al
  406b78:	clc    
  406b79:	push   ebx
  406b7a:	add    BYTE PTR [esi-0x79fff708],al
  406b80:	inc    eax
  406b81:	push   ebp
  406b82:	add    BYTE PTR [esi-0x79fff1c0],al
  406b88:	xor    al,0x54
  406b8a:	add    BYTE PTR [esi-0x79fff225],al
  406b90:	mov    ecx,0x5860053
  406b95:	push   cs
  406b96:	add    BYTE PTR [esi-0x79ffac46],al
  406b9c:	push   es
  406b9d:	push   cs
  406b9e:	add    BYTE PTR [esi-0x79ffa8a9],al
  406ba4:	inc    ebx
  406ba5:	or     DWORD PTR [eax],eax
  406ba7:	xchg   BYTE PTR [eax+0x57],bl
  406baa:	add    BYTE PTR [eax],al
  406bac:	xchg   BYTE PTR [ecx+ecx*1+0x0],al
  406bb0:	xchg   BYTE PTR ds:0x31860057,bh
  406bb6:	or     DWORD PTR [eax],eax
  406bb8:	xchg   BYTE PTR [esi],bh
  406bba:	push   edi
  406bbb:	add    BYTE PTR [esi-0x79fff6b6],al
  406bc1:	inc    edx
  406bc2:	xor    eax,0xc142865d
  406bc7:	add    al,BYTE PTR [esi-0x79a2cbbe]
  406bcd:	inc    edx
  406bce:	rol    BYTE PTR [edx],0x86
  406bd1:	inc    edx
  406bd2:	add    ebx,DWORD PTR [ebp-0x7a]
  406bd5:	inc    edx
  406bd6:	fiadd  DWORD PTR [ebx]
  406bd8:	xchg   BYTE PTR [edx+0x2],al
  406bdb:	pop    ebp
  406bdc:	xchg   BYTE PTR [edx-0x49],al
  406bdf:	add    eax,DWORD PTR [esi-0x79a33ebe]
  406be5:	inc    edx
  406be6:	sbb    BYTE PTR [esi+eax*4],al
  406be9:	inc    edx
  406bea:	rcr    BYTE PTR [esi+eax*4+0x42],0xf6
  406bef:	add    al,BYTE PTR [esi-0x79a326be]
  406bf5:	inc    edx
  406bf6:	add    al,0x4
  406bf8:	xchg   BYTE PTR [edx-0x38],al
  406bfb:	pop    esp
  406bfc:	xchg   BYTE PTR [edx-0x20],al
  406bff:	add    al,BYTE PTR [esi-0x79a29cbe]
  406c05:	inc    edx
  406c06:	ret    
  406c07:	add    eax,DWORD PTR [esi-0x79a295be]
  406c0d:	inc    edx
  406c0e:	jmp    0x5d7e:0x42860003
  406c15:	xchg   BYTE PTR [edx-0x1a],al
  406c18:	add    al,BYTE PTR [esi-0x79a2adbe]
  406c1e:	inc    edx
  406c1f:	jae    0x406c24
  406c21:	xchg   BYTE PTR [edx+0x71],al
  406c24:	pop    esp
  406c25:	xchg   BYTE PTR [edx+0x52],al
  406c28:	add    al,0x86
  406c2a:	inc    edx
  406c2b:	jo     0x406c89
  406c2d:	xchg   BYTE PTR [edx+0x51],al
  406c30:	add    al,0x86
  406c32:	inc    edx
  406c33:	push   edi
  406c34:	pop    esp
  406c35:	xchg   BYTE PTR [edx+0x30],al
  406c38:	add    al,0x86
  406c3a:	inc    edx
  406c3b:	or     bl,BYTE PTR [edx+edi*1+0x42]
  406c3f:	or     al,BYTE PTR ds:0x7f0a428a
  406c45:	sub    al,BYTE PTR [edx+0xa]
  406c48:	les    eax,FWORD PTR [ebp+0x5a7e0a42]
  406c4e:	inc    edx
  406c4f:	or     al,bh
  406c51:	test   DWORD PTR [edx+0xa],eax
  406c54:	popa   
  406c55:	dec    edx
  406c56:	inc    edx
  406c57:	or     al,dh
  406c59:	test   DWORD PTR [edx+0xa],eax
  406c5c:	push   eax
  406c5d:	cmp    al,BYTE PTR [edx+0xa]
  406c60:	rol    DWORD PTR [ebp+0x2a850a42],0x42
  406c67:	or     cl,BYTE PTR [edx]
  406c69:	mov    al,BYTE PTR [edx+0xa]
  406c6c:	jae    0x406c48
  406c6e:	inc    edx
  406c6f:	or     cl,BYTE PTR [eax]
  406c71:	mov    al,BYTE PTR [edx+0xa]
  406c74:	bound  eax,QWORD PTR [eax]
  406c76:	retf   0xa42
  406c79:	or     ecx,DWORD PTR [edx-0x45abf5be]
  406c7f:	inc    edx
  406c80:	or     bl,ch
  406c82:	test   DWORD PTR [edx+0xa],eax
  406c85:	xchg   DWORD PTR [edx-0x7a33f5be],ebp
  406c8b:	inc    edx
  406c8c:	or     dh,BYTE PTR [esi-0x26]
  406c8f:	inc    edx
  406c90:	or     bh,BYTE PTR [edi+0x530a4285]
  406c96:	retf   0xa42
  406c99:	xchg   ebx,eax
  406c9a:	test   DWORD PTR [edx+0xa],eax
  406c9d:	inc    edx
  406c9e:	mov    edx,0x85820a42
  406ca3:	inc    edx
  406ca4:	or     dl,BYTE PTR [ebp+0x4d0a42ad]
  406caa:	mov    al,BYTE PTR [edx+0xa]
  406cad:	test   BYTE PTR [ebp+0x42],bl
  406cb0:	or     bh,BYTE PTR [edx+ecx*4]
  406cb3:	inc    edx
  406cb4:	or     al,BYTE PTR [eax]
  406cb6:	adc    DWORD PTR [ebp+0xa],edi
  406cb9:	add    BYTE PTR [ecx+0x3e],dl
  406cbc:	or     al,BYTE PTR [eax]
  406cbe:	add    BYTE PTR [ebp+0xa],bh
  406cc1:	add    BYTE PTR [eax+0x2f000a3f],dl
  406cc7:	jge    0x406cd3
  406cc9:	add    BYTE PTR [edi+0x5e000a3e],cl
  406ccf:	jge    0x406cdb
  406cd1:	add    BYTE PTR [esi+0x3e],bh
  406cd4:	or     al,BYTE PTR [eax]
  406cd6:	ins    DWORD PTR es:[edi],dx
  406cd7:	jge    0x406ce3
  406cd9:	add    BYTE PTR [eax],al
  406cdb:	lea    edi,[esi]
  406cdd:	or     al,BYTE PTR [eax]
  406cdf:	pop    esp
  406ce0:	jge    0x406cec
  406ce2:	add    BYTE PTR [esi+edi*1+0xa],bh
  406ce6:	add    bl,ch
  406ce8:	jl     0x406cf4
  406cea:	add    BYTE PTR [ebx+0x44],cl
  406ced:	or     al,BYTE PTR [eax]
  406cef:	sbb    bh,BYTE PTR [edx+ecx*1+0x0]
  406cf3:	dec    edx
  406cf4:	inc    esp
  406cf5:	or     al,BYTE PTR [eax]
  406cf7:	jmp    0x49407777
  406cfc:	inc    esp
  406cfd:	or     al,BYTE PTR [eax]
  406cff:	fdivr  DWORD PTR [ebx+0xa]
  406d02:	add    BYTE PTR [eax+0x44],cl
  406d05:	or     al,BYTE PTR [eax]
  406d07:	out    0x7b,eax
  406d09:	or     al,BYTE PTR [eax]
  406d0b:	pop    ss
  406d0c:	inc    esp
  406d0d:	or     al,BYTE PTR [eax]
  406d0f:	(bad)  
  406d10:	jnp    0x406d1c
  406d12:	add    BYTE PTR [esi],al
  406d14:	inc    esp
  406d15:	or     al,BYTE PTR [eax]
  406d17:	sar    DWORD PTR [ebx+0xa],0x0
  406d1b:	lahf   
  406d1c:	inc    ebx
  406d1d:	or     al,BYTE PTR [eax]
  406d1f:	push   eax
  406d20:	jnp    0x406d2c
  406d22:	add    BYTE PTR [esi-0x20fff5bd],cl
  406d28:	jl     0x406d34
  406d2a:	add    BYTE PTR [ebp+0x3e],bl
  406d2d:	or     al,BYTE PTR [eax]
  406d2f:	xchg   dl,ch
  406d31:	dec    edi
  406d32:	add    BYTE PTR [esi-0x79fff184],al
  406d38:	jmp    0x406d89
  406d3a:	add    BYTE PTR [esi+0xe4d],al
  406d40:	xchg   ah,ch
  406d42:	dec    edi
  406d43:	add    BYTE PTR [esi-0x79fff1b2],al
  406d49:	in     eax,0x4f
  406d4b:	add    BYTE PTR [esi-0x79fff1d1],al
  406d51:	out    0x4f,al
  406d53:	add    BYTE PTR [esi-0x79fff1d0],al
  406d59:	out    0x4f,eax
  406d5b:	add    BYTE PTR [esi-0x79fff1bf],al
  406d61:	call   0x12c66db5
  406d66:	or     DWORD PTR [eax],eax
  406d68:	xchg   BYTE PTR [ecx+0x50],dl
  406d6b:	add    BYTE PTR [esi-0x79fff6dd],al
  406d71:	bound  edx,QWORD PTR [eax+0x0]
  406d74:	xchg   ah,dh
  406d76:	or     BYTE PTR [eax],al
  406d78:	xchg   BYTE PTR [ebx+0x50],dl
  406d7b:	add    BYTE PTR [esi-0x79fff72b],al
  406d81:	fs push eax
  406d83:	add    BYTE PTR [esi-0x79fff71a],al
  406d89:	dec    ebp
  406d8a:	push   eax
  406d8b:	add    BYTE PTR [esi-0x79fff749],al
  406d91:	pop    esi
  406d92:	push   eax
  406d93:	add    BYTE PTR [esi-0x79fff738],al
  406d99:	dec    edi
  406d9a:	push   eax
  406d9b:	add    BYTE PTR [esi-0x79fff657],al
  406da1:	pusha  
  406da2:	push   eax
  406da3:	add    BYTE PTR [eax],al
  406da5:	xchg   BYTE PTR [edx+0x42860009],ch
  406dab:	mov    bl,0x59
  406dad:	xchg   BYTE PTR [edx+0x61],al
  406db0:	add    al,0x86
  406db2:	inc    edx
  406db3:	mov    dl,0x59
  406db5:	xchg   BYTE PTR [edx+0x60],al
  406db8:	add    al,0x86
  406dba:	inc    edx
  406dbb:	xchg   ecx,eax
  406dbc:	pop    ecx
  406dbd:	xchg   BYTE PTR [edx+0x6f],al
  406dc0:	add    al,0x86
  406dc2:	inc    edx
  406dc3:	nop
  406dc4:	pop    ecx
  406dc5:	xchg   BYTE PTR [edx+0x6e],al
  406dc8:	add    al,0x86
  406dca:	inc    edx
  406dcb:	mov    bh,0x59
  406dcd:	xchg   BYTE PTR [edx+0x6d],al
  406dd0:	add    al,0x86
  406dd2:	inc    edx
  406dd3:	mov    dh,0x59
  406dd5:	xchg   BYTE PTR [edx+0x6c],al
  406dd8:	add    al,0x86
  406dda:	inc    edx
  406ddb:	sbb    BYTE PTR [ecx-0x7a],0x42
  406ddf:	inc    ebx
  406de0:	add    al,0x86
  406de2:	inc    edx
  406de3:	sbb    DWORD PTR [ecx-0x7a],0x86044242
  406dea:	inc    edx
  406deb:	inc    eax
  406dec:	pop    ecx
  406ded:	xchg   BYTE PTR [edx-0x7f],al
  406df0:	add    al,0x86
  406df2:	inc    edx
  406df3:	inc    edi
  406df4:	pop    ecx
  406df5:	xchg   BYTE PTR [edx-0x80],al
  406df8:	add    eax,DWORD PTR [esi-0x79a6a5be]
  406dfe:	inc    edx
  406dff:	pop    DWORD PTR [esi+eax*4]
  406e02:	inc    edx
  406e03:	dec    ecx
  406e04:	pop    ecx
  406e05:	xchg   BYTE PTR [edx-0x72],al
  406e08:	add    eax,DWORD PTR [eax]
  406e0a:	xchg   BYTE PTR [edx+0x18],al
  406e0d:	pop    ecx
  406e0e:	xchg   BYTE PTR [edx-0x38],al
  406e11:	add    eax,DWORD PTR [esi-0x79a6f0be]
  406e17:	inc    edx
  406e18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e19:	add    eax,DWORD PTR [esi-0x79a77bbe]
  406e1f:	inc    edx
  406e20:	xchg   esi,eax
  406e21:	add    eax,DWORD PTR [esi-0x7b17f5be]
  406e27:	inc    ebx
  406e28:	or     ebp,eax
  406e2a:	test   BYTE PTR [ebx+0xb],al
  406e2d:	call   0xe84bb1b6
  406e32:	test   BYTE PTR [ebx+0x9],al
  406e35:	jmp    0x4384:0xe80b4384
  406e3c:	or     ebp,eax
  406e3e:	mov    eax,DWORD PTR [ebx+0xb]
  406e41:	jmp    0x406dc6
  406e43:	inc    eax
  406e44:	or     bl,ch
  406e46:	mov    eax,DWORD PTR [eax+0x8]
  406e49:	jmp    0x406e14
  406e4b:	inc    ecx
  406e4c:	push   cs
  406e4d:	jmp    0x406dda
  406e4f:	inc    eax
  406e50:	push   cs
  406e51:	jmp    0x406dd6
  406e53:	inc    eax
  406e54:	or     bl,ch
  406e56:	mov    edi,DWORD PTR [esi]
  406e58:	push   cs
  406e59:	in     eax,0x83
  406e5b:	inc    eax
  406e5c:	or     ch,ch
  406e5e:	mov    eax,DWORD PTR [eax+0x8]
  406e61:	jmp    0x406de6
  406e63:	inc    eax
  406e64:	push   cs
  406e65:	in     eax,dx
  406e66:	xchg   ecx,eax
  406e67:	inc    ebx
  406e68:	or     bl,ch
  406e6a:	mov    DWORD PTR [edx+0xb],eax
  406e6d:	call   0xb83f272
  406e72:	in     al,0x78
  406e74:	bound  ebp,QWORD PTR [ebx]
  406e76:	jmp    0xea4cb005
  406e7b:	add    BYTE PTR [ecx+0x9],0xea
  406e7f:	mov    al,BYTE PTR [ecx+0x9]
  406e82:	jmp    0x3f8a:0xea0f4182
  406e89:	or     edx,ebp
  406e8b:	add    BYTE PTR [ecx+0x9],0xe8
  406e8f:	test   BYTE PTR [ebx+0x9],al
  406e92:	call   0xe849b219
  406e97:	mov    al,BYTE PTR [ebx+0xb]
  406e9a:	call   0x4ab221
  406e9f:	das    
  406ea0:	inc    ecx
  406ea1:	or     al,BYTE PTR [eax]
  406ea3:	das    
  406ea4:	inc    ecx
  406ea5:	or     al,BYTE PTR [eax]
  406ea7:	pop    ds
  406ea8:	inc    ecx
  406ea9:	or     al,BYTE PTR [eax]
  406eab:	pop    ds
  406eac:	inc    ecx
  406ead:	or     al,BYTE PTR [eax]
  406eaf:	out    dx,eax
  406eb0:	inc    eax
  406eb1:	or     al,BYTE PTR [eax]
  406eb3:	out    dx,eax
  406eb4:	inc    eax
  406eb5:	or     al,BYTE PTR [eax]
  406eb7:	fild   WORD PTR [eax+0xa]
  406eba:	add    bh,bl
  406ebc:	inc    eax
  406ebd:	or     al,BYTE PTR [eax]
  406ebf:	out    dx,eax
  406ec0:	pop    ebp
  406ec1:	or     ah,BYTE PTR [ebx]
  406ec3:	and    DWORD PTR [ebx+0x2c],0x27
  406ec7:	fild   WORD PTR [eax+0x20]
  406eca:	sub    ebx,edi
  406ecc:	imul   esp,DWORD PTR [eax+eax*1],0x33382ddf
  406ed3:	add    bl,dl
  406ed5:	xor    DWORD PTR [edi+esi*1],edi
  406ed8:	xlat   BYTE PTR ds:[ebx]
  406ed9:	xor    eax,0x409f000a
  406ede:	or     al,BYTE PTR [eax]
  406ee0:	scas   eax,DWORD PTR es:[edi]
  406ee1:	sbb    eax,0x2383636b
  406ee6:	outs   dx,DWORD PTR ds:[esi]
  406ee7:	xchg   DWORD PTR [bx],esp
  406eea:	arpl   WORD PTR [ebx-0x75],bp
  406eed:	sub    DWORD PTR [edi+0x6f],esp
  406ef0:	pop    edi
  406ef1:	out    dx,eax
  406ef2:	jp     0x406f67
  406ef4:	push   ebx
  406ef5:	repz jle 0x406f6f
  406ef8:	push   edi
  406ef9:	div    DWORD PTR [edx+0x0]
  406efc:	pop    edi
  406efd:	inc    eax
  406efe:	push   esp
  406eff:	pop    edi
  406f00:	dec    edi
  406f01:	pop    ds
  406f02:	imul   esp,DWORD PTR [ebx+0x43],0x23
  406f06:	outs   dx,DWORD PTR ds:[esi]
  406f07:	addr16 inc edi
  406f09:	daa    
  406f0a:	arpl   WORD PTR [ebx+0xb],bp
  406f0d:	sub    esp,DWORD PTR [edi+0x6f]
  406f10:	pop    ds
  406f11:	out    dx,eax
  406f12:	jp     0x406f87
  406f14:	adc    esi,ebx
  406f16:	jle    0x406f8f
  406f18:	xchg   BYTE PTR [ecx-0x3a79862b],dh
  406f1e:	or     BYTE PTR [esi-0x7a],bh
  406f21:	sub    DWORD PTR [ecx],ecx
  406f23:	add    BYTE PTR [esi-0x79fff6d7],al
  406f29:	sub    DWORD PTR [ecx],ecx
  406f2b:	add    BYTE PTR [esi-0x79fff6d7],al
  406f31:	sub    DWORD PTR [ecx],ecx
  406f33:	add    BYTE PTR [esi+0x929],al
  406f39:	xchg   BYTE PTR [ecx],ch
  406f3b:	or     DWORD PTR [eax],eax
  406f3d:	xchg   BYTE PTR [ecx],ch
  406f3f:	or     DWORD PTR [eax],eax
  406f41:	xchg   BYTE PTR [ecx],ch
  406f43:	or     DWORD PTR [eax],eax
  406f45:	xchg   BYTE PTR [ecx],ch
  406f47:	or     DWORD PTR [eax],eax
  406f49:	xchg   BYTE PTR [ecx],ch
  406f4b:	or     DWORD PTR [eax],eax
  406f4d:	xchg   BYTE PTR [ecx],ch
  406f4f:	or     DWORD PTR [eax],eax
  406f51:	xchg   BYTE PTR [ecx],ch
  406f53:	or     DWORD PTR [eax],eax
  406f55:	xchg   BYTE PTR [ecx],ch
  406f57:	or     DWORD PTR [eax],eax
  406f59:	xchg   BYTE PTR [ecx],ch
  406f5b:	or     DWORD PTR [eax],eax
  406f5d:	xchg   BYTE PTR [ecx],ch
  406f5f:	or     DWORD PTR [eax],eax
  406f61:	xchg   BYTE PTR [ecx],ch
  406f63:	or     DWORD PTR [eax],eax
  406f65:	xchg   BYTE PTR [ecx],ch
  406f67:	or     DWORD PTR [eax],eax
  406f69:	xchg   BYTE PTR [ecx],ch
  406f6b:	or     DWORD PTR [eax],eax
  406f6d:	xchg   BYTE PTR [ecx],ch
  406f6f:	or     DWORD PTR [eax],eax
  406f71:	xchg   BYTE PTR [ecx],ch
  406f73:	or     DWORD PTR [eax],eax
  406f75:	xchg   BYTE PTR [ecx],ch
  406f77:	or     DWORD PTR [eax],eax
  406f79:	xchg   BYTE PTR [ecx],ch
  406f7b:	or     DWORD PTR [eax],eax
  406f7d:	xchg   BYTE PTR [ecx],ch
  406f7f:	or     DWORD PTR [eax],eax
  406f81:	xchg   BYTE PTR [ecx],ch
  406f83:	or     DWORD PTR [eax],eax
  406f85:	xchg   BYTE PTR [ecx],ch
  406f87:	or     DWORD PTR [eax],eax
  406f89:	xchg   BYTE PTR [ecx],ch
  406f8b:	or     DWORD PTR [eax],eax
  406f8d:	xchg   BYTE PTR [ecx],ch
  406f8f:	or     DWORD PTR [eax],eax
  406f91:	xchg   BYTE PTR [edx-0x1d],al
  406f94:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  406f9a:	inc    edx
  406f9b:	jecxz  0x406fa0
  406f9d:	add    BYTE PTR [esi-0x79fc1cbe],al
  406fa3:	inc    edx
  406fa4:	or     al,0x56
  406fa6:	sbb    DWORD PTR [ebx],edx
  406fa8:	hlt    
  406fa9:	push   ebp
  406faa:	adc    DWORD PTR [ebx],edx
  406fac:	cld    
  406fad:	push   ebp
  406fae:	or     DWORD PTR [ebx],edx
  406fb0:	in     al,0x55
  406fb2:	add    DWORD PTR [ebx],edx
  406fb4:	in     al,dx
  406fb5:	push   ebp
  406fb6:	stc    
  406fb7:	adc    dl,ah
  406fb9:	push   ebp
  406fba:	icebp  
  406fbb:	adc    bl,ah
  406fbd:	push   ebp
  406fbe:	jmp    0xe19633d5
  406fc3:	adc    cl,ah
  406fc5:	push   ebp
  406fc6:	fst    DWORD PTR [edx]
  406fc8:	mov    ah,0x55
  406fca:	rcl    DWORD PTR [edx],1
  406fcc:	mov    esp,0xa412c955
  406fd1:	push   ebp
  406fd2:	rcl    DWORD PTR [edx],0xe3
  406fd5:	add    al,BYTE PTR [edi+edi*1+0x3b8bfeef]
  406fdc:	jmp    0x406fe8
  406fde:	test   eax,0xa1558412
  406fe3:	adc    cl,BYTE PTR [edx+ecx*1+0x5e6468d]
  406fea:	adc    DWORD PTR [ebx],0x1289557c
  406ff0:	fs push ebp
  406ff2:	adc    DWORD PTR [edx],0x1279556c
  406ff8:	push   esp
  406ff9:	push   ebp
  406ffa:	jno    0x40700e
  406ffc:	pop    esp
  406ffd:	push   ebp
  406ffe:	imul   edx,DWORD PTR [edx],0x61005544
  407004:	adc    cl,BYTE PTR [edx+ecx*1-0x73]
  407008:	ds out 0x5,al
  40700b:	adc    DWORD PTR [ecx],0x11b3360a
  407011:	cmc    
  407012:	fist   DWORD PTR cs:[ecx]
  407015:	cmc    
  407016:	rcl    DWORD PTR es:[ecx],cl
  407019:	cmc    
  40701a:	push   ds
  40701b:	fist   DWORD PTR [ecx]
  40701d:	cmc    
  40701e:	push   ss
  40701f:	rcl    DWORD PTR [ecx],cl
  407021:	cmc    
  407022:	push   cs
  407023:	mov    ebx,0x85e9f511
  407028:	inc    edx
  407029:	or     ch,cl
  40702b:	test   DWORD PTR [edx+0xa],eax
  40702e:	jmp    0xe94ab2b8
  407033:	test   DWORD PTR [edx+0xa],eax
  407036:	jmp    0xe94ab2c0
  40703b:	test   DWORD PTR [edx+0xa],eax
  40703e:	jmp    0xe94ab2c8
  407043:	test   DWORD PTR [edx+0xa],eax
  407046:	jmp    0xe94ab2d0
  40704b:	test   DWORD PTR [edx+0xa],eax
  40704e:	jmp    0xe94ab2d8
  407053:	test   DWORD PTR [edx+0xa],eax
  407056:	jmp    0xe94ab2e0
  40705b:	test   DWORD PTR [edx+0xa],eax
  40705e:	jmp    0xe94ab2e8
  407063:	test   DWORD PTR [edx+0xa],eax
  407066:	jmp    0xa82f56b
  40706b:	jmp    0xe94ab2f5
  407070:	test   DWORD PTR [edx+0xa],eax
  407073:	jmp    0xe94ab2fd
  407078:	test   DWORD PTR [edx+0xa],eax
  40707b:	jmp    0xe94ab305
  407080:	test   DWORD PTR [edx+0xa],eax
  407083:	jmp    0x4ab30d
  407088:	outs   dx,DWORD PTR ds:[esi]
  407089:	inc    ebp
  40708a:	or     al,BYTE PTR [eax]
  40708c:	pop    edi
  40708d:	inc    ebp
  40708e:	or     al,BYTE PTR [eax]
  407090:	pop    edi
  407091:	inc    ebp
  407092:	or     al,BYTE PTR [eax]
  407094:	das    
  407095:	inc    ebp
  407096:	or     al,BYTE PTR [eax]
  407098:	das    
  407099:	inc    ebp
  40709a:	or     al,BYTE PTR [eax]
  40709c:	pop    ds
  40709d:	inc    ebp
  40709e:	or     al,BYTE PTR [eax]
  4070a0:	pop    ds
  4070a1:	inc    ebp
  4070a2:	or     al,BYTE PTR [eax]
  4070a4:	das    
  4070a5:	inc    ebp
  4070a6:	or     al,BYTE PTR [eax]
  4070a8:	das    
  4070a9:	inc    ebp
  4070aa:	or     al,BYTE PTR [eax]
  4070ac:	pop    ds
  4070ad:	inc    ebp
  4070ae:	or     al,BYTE PTR [eax]
  4070b0:	pop    ds
  4070b1:	inc    ebp
  4070b2:	or     al,BYTE PTR [eax]
  4070b4:	out    dx,eax
  4070b5:	inc    esp
  4070b6:	or     al,BYTE PTR [eax]
  4070b8:	out    dx,eax
  4070b9:	inc    esp
  4070ba:	or     al,BYTE PTR [eax]
  4070bc:	fild   WORD PTR [edx+ecx*1+0x0]
  4070c0:	fild   WORD PTR [edx+ecx*1+0x0]
  4070c4:	out    dx,eax
  4070c5:	inc    esp
  4070c6:	or     al,BYTE PTR [eax]
  4070c8:	out    dx,eax
  4070c9:	inc    ebp
  4070ca:	or     eax,DWORD PTR [eax]
  4070cc:	add    dh,bl
  4070ce:	inc    ebp
  4070cf:	or     eax,DWORD PTR [ecx]
  4070d1:	fiadd  WORD PTR [ebp+0xb]
  4070d4:	add    DWORD PTR [esi-0x51fef4bb],ebp
  4070da:	inc    ebp
  4070db:	or     eax,DWORD PTR [ecx]
  4070dd:	sahf   
  4070de:	inc    ebp
  4070df:	or     eax,DWORD PTR [ecx]
  4070e1:	sahf   
  4070e2:	inc    ebp
  4070e3:	or     eax,DWORD PTR [ecx]
  4070e5:	scas   al,BYTE PTR es:[edi]
  4070e6:	inc    ebp
  4070e7:	or     eax,DWORD PTR [eax]
  4070e9:	scas   al,BYTE PTR es:[edi]
  4070ea:	inc    ebp
  4070eb:	or     eax,DWORD PTR [ecx]
  4070ed:	sahf   
  4070ee:	inc    ebp
  4070ef:	or     eax,DWORD PTR [ecx]
  4070f1:	sahf   
  4070f2:	inc    ebp
  4070f3:	or     eax,DWORD PTR [ecx]
  4070f5:	outs   dx,BYTE PTR ds:[esi]
  4070f6:	inc    edi
  4070f7:	or     eax,DWORD PTR [ecx]
  4070f9:	outs   dx,BYTE PTR ds:[esi]
  4070fa:	inc    edi
  4070fb:	or     eax,DWORD PTR [ecx]
  4070fd:	pop    esi
  4070fe:	inc    edi
  4070ff:	or     eax,DWORD PTR [ecx]
  407101:	xchg   BYTE PTR [edx],bl
  407103:	push   cs
  407104:	add    DWORD PTR [edi-0x78fef1e6],eax
  40710a:	sbb    cl,BYTE PTR [esi]
  40710c:	add    DWORD PTR [edi-0x78fef1e6],eax
  407112:	sbb    cl,BYTE PTR [esi]
  407114:	add    DWORD PTR [edi-0x78fef1e6],eax
  40711a:	sbb    cl,BYTE PTR [esi]
  40711c:	add    DWORD PTR [edi-0x78fef1e6],eax
  407122:	sbb    cl,BYTE PTR [esi]
  407124:	add    DWORD PTR [edi-0x79fef1e6],eax
  40712a:	sbb    DWORD PTR [ecx],ecx
  40712c:	add    BYTE PTR [esi+0x919],al
  407132:	xchg   BYTE PTR [ecx],bl
  407134:	or     DWORD PTR [eax],eax
  407136:	xchg   BYTE PTR [ecx],bl
  407138:	or     DWORD PTR [eax],eax
  40713a:	xchg   BYTE PTR [ecx],bl
  40713c:	or     DWORD PTR [eax],eax
  40713e:	xchg   BYTE PTR [ecx],bl
  407140:	or     DWORD PTR [eax],eax
  407142:	xchg   BYTE PTR [ecx],bl
  407144:	or     DWORD PTR [eax],eax
  407146:	xchg   BYTE PTR [ecx],bl
  407148:	or     DWORD PTR [eax],eax
  40714a:	xchg   BYTE PTR [ecx],bl
  40714c:	or     DWORD PTR [eax],eax
  40714e:	xchg   BYTE PTR [ecx],bl
  407150:	or     DWORD PTR [eax],eax
  407152:	xchg   BYTE PTR [ecx],bl
  407154:	or     DWORD PTR [eax],eax
  407156:	xchg   BYTE PTR [ecx],bl
  407158:	or     DWORD PTR [eax],eax
  40715a:	xchg   BYTE PTR [ecx],bl
  40715c:	or     DWORD PTR [eax],eax
  40715e:	xchg   BYTE PTR [ecx],bl
  407160:	or     DWORD PTR [eax],eax
  407162:	xchg   BYTE PTR [ecx],bl
  407164:	or     DWORD PTR [eax],eax
  407166:	xchg   BYTE PTR [ecx],bl
  407168:	or     DWORD PTR [eax],eax
  40716a:	xchg   BYTE PTR [ecx],bl
  40716c:	or     DWORD PTR [eax],eax
  40716e:	xchg   BYTE PTR [ecx],bl
  407170:	or     DWORD PTR [eax],eax
  407172:	xchg   BYTE PTR [ecx],bl
  407174:	or     DWORD PTR [eax],eax
  407176:	xchg   BYTE PTR [ecx],bl
  407178:	or     DWORD PTR [eax],eax
  40717a:	xchg   BYTE PTR [edx-0x1d],al
  40717d:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  407183:	inc    edx
  407184:	jecxz  0x407189
  407186:	xchg   BYTE PTR [edx-0x1d],al
  407189:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  40718f:	inc    edx
  407190:	jecxz  0x407195
  407192:	xchg   BYTE PTR [edx-0x1d],al
  407195:	add    eax,DWORD PTR [eax]
  407197:	xchg   BYTE PTR [edx-0x1d],al
  40719a:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  4071a0:	inc    edx
  4071a1:	jecxz  0x4071a6
  4071a3:	xchg   BYTE PTR [edx-0x1d],al
  4071a6:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  4071ac:	inc    edx
  4071ad:	push   ebx
  4071ae:	enter  0xc3d0,0x6d
  4071b2:	lahf   
  4071b3:	push   ebx
  4071b4:	adc    ch,BYTE PTR [ebx+0x2d]
  4071b7:	lds    eax,FWORD PTR [ebx]
  4071b9:	cwde   
  4071ba:	div    DWORD PTR [edi-0x4aec5e27]
  4071c0:	inc    ebp
  4071c1:	add    al,0xc2
  4071c3:	loop   0x4071cc
  4071c5:	(bad)  
  4071c6:	in     eax,0xf3
  4071c8:	xchg   ebx,eax
  4071c9:	mov    ebx,0x7081f7d9
  4071ce:	mov    bh,0xd1
  4071d0:	push   cs
  4071d1:	push   0x6aeb9a5f
  4071d6:	pop    ebx
  4071d7:	mov    al,0x6a
  4071d9:	inc    ebx
  4071da:	mov    edx,0x5962fb50
  4071df:	pop    esi
  4071e0:	push   ebp
  4071e1:	jno    0x4071e3
  4071e3:	cwde   
  4071e4:	shl    BYTE PTR [ebp+edi*4+0x0],cl
  4071e8:	pusha  
  4071e9:	(bad)
  4071ee:	and    eax,0x6806a87d
  4071f3:	fnstenv [eax-0x7bd0f4f7]
  4071f9:	or     bl,BYTE PTR [ecx+0xa428500]
  4071ff:	jns    0x40718d
  407201:	scas   al,BYTE PTR es:[edi]
  407202:	cmp    ecx,DWORD PTR [ecx-0x7ac42574]
  407208:	jl     0x4071e0
  40720a:	cmp    ecx,DWORD PTR [ebp-0x470f3e84]
  407210:	rcr    ah,cl
  407212:	mov    edi,0x2201bfe9
  407217:	xchg   esp,eax
  407218:	inc    edx
  407219:	fisubr WORD PTR [ecx+0x5880bf51]
  40721f:	jecxz  0x407240
  407221:	and    DWORD PTR ds:0x791517d,0x3d567ec5
  40722b:	int    0x7e
  40722d:	xchg   BYTE PTR ds:0x3d766eb5,bh
  407233:	popf   
  407234:	outs   dx,BYTE PTR ds:[esi]
  407235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407236:	cmp    eax,0xf6969e85
  40723b:	sar    BYTE PTR [ebp+0x5a],cl
  40723e:	xor    dl,bl
  407240:	lods   al,BYTE PTR ds:[esi]
  407241:	call   0xe360:0x48c224c0
  407248:	lahf   
  407249:	pushf  
  40724a:	push   ss
  40724b:	adc    al,0x70
  40724d:	pushf  
  40724e:	adc    BYTE PTR [edx-0x71c8eb96],0x6e
  407255:	es cmp eax,0x3d169ec5
  40725b:	lods   eax,DWORD PTR ds:[esi]
  40725c:	sahf   
  40725d:	inc    esi
  40725e:	xor    dh,ch
  407260:	add    BYTE PTR [ebp+0x36],bh
  407263:	xor    bh,ch
  407265:	jge    0x4072cd
  407267:	xor    al,BYTE PTR [eax+edx*1+0x1cf77261]
  40726e:	and    DWORD PTR [eax],ebp
  407270:	add    BYTE PTR [ebx+edx*2-0x3c107d34],ch
  407277:	sub    ebp,eax
  407279:	mov    esp,0x837b3479
  40727e:	in     al,0x97
  407280:	or     al,BYTE PTR [edi+0xd]
  407283:	cdq    
  407284:	cmp    bl,ch
  407286:	cmp    DWORD PTR [esi-0x41c6f4c8],ebp
  40728c:	cmp    BYTE PTR [ebx],cl
  40728e:	cmp    esi,ecx
  407290:	cmp    BYTE PTR [ebx+0x6b38de39],bl
  407296:	jg     0x4072d3
  407298:	sti    
  407299:	cli    
  40729a:	pop    esp
  40729b:	mov    edi,0xef9a2eed
  4072a0:	mov    ecx,0x1192f9c1
  4072a5:	add    eax,0x3d32f1a9
  4072aa:	in     eax,dx
  4072ab:	pop    esp
  4072ac:	or     esp,esi
  4072ae:	adc    al,0xf5
  4072b0:	cmp    bl,bl
  4072b2:	aaa    
  4072b3:	pop    esi
  4072b4:	cmp    ebx,ebp
  4072b6:	aaa    
  4072b7:	outs   dx,BYTE PTR ds:[esi]
  4072b8:	cmp    DWORD PTR [ebx],ecx
  4072ba:	cmp    BYTE PTR [esi+0x39],bh
  4072bd:	imul   edi,DWORD PTR [eax],0xffffff8e
  4072c0:	cmp    DWORD PTR [ebx+0x3f],edi
  4072c3:	sbb    eax,0x5e8a0044
  4072c8:	ss push 0xaf429a73
  4072ce:	cmp    DWORD PTR [eax+eax*2-0x29e9fa93],ecx
  4072d5:	std    
  4072d6:	cmp    bl,BYTE PTR [ebx-0x64]
  4072d9:	and    dh,ah
  4072db:	jbe    0x407313
  4072dd:	jns    0x4072ca
  4072df:	ds push cs
  4072e1:	cmp    bh,BYTE PTR [ebx-0x54c5e1c6]
  4072e7:	cmp    ch,BYTE PTR [esi]
  4072e9:	cmp    al,BYTE PTR [esi+0x5c340307]
  4072ef:	inc    DWORD PTR [edx]
  4072f1:	inc    esp
  4072f2:	int    0x54
  4072f4:	out    0xdd,al
  4072f6:	test   bl,bh
  4072f8:	or     eax,0x7d0d30c6
  4072fd:	cmc    
  4072fe:	das    
  4072ff:	fwait
  407300:	pop    eax
  407301:	mov    ah,0xa9
  407303:	test   al,0x46
  407305:	adc    esi,ebx
  407307:	call   0xb400:0x51eca1ba
  40730e:	pushf  
  40730f:	mov    ebp,0x558cc3ff
  407314:	add    ah,dl
  407316:	mov    WORD PTR ds:0x857ce400,gs
  40731c:	add    ah,dh
  40731e:	jl     0x40738c
  407320:	jmp    0x686c94c7
  407325:	jae    0x407358
  407327:	dec    ebp
  407328:	sub    al,0x34
  40732a:	add    BYTE PTR [esi+0x1f],ch
  40732d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40732e:	jle    0x407351
  407330:	fstp   TBYTE PTR [ebx+0x651801e1]
  407336:	mov    eax,0x63fe8391
  40733b:	mov    ebp,0xbd73ffc5
  407340:	popf   
  407341:	add    BYTE PTR [ebp+ebp*4-0x526bff6b],al
  407348:	lea    eax,[eax]
  40734a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40734b:	popf   
  40734c:	lds    edi,FWORD PTR [edi]
  40734e:	dec    ebx
  40734f:	call   0x1f859477
  407354:	pop    esp
  407355:	fwait
  407356:	retf   0x60b
  407359:	sahf   
  40735a:	mov    eax,ds:0xc8e07591
  40735f:	out    dx,al
  407360:	sti    
  407361:	sub    al,0xa
  407363:	repnz inc edx
  407365:	mov    ax,ds:0xff74e34
  40736b:	push   0x4e
  40736d:	iret   
  40736e:	rsqrtps xmm1,XMMWORD PTR [esi-0x39]
  407372:	cmovp  ecx,DWORD PTR [esi+0x3f]
  407376:	adc    BYTE PTR [edx],dh
  407378:	dec    esi
  407379:	pop    ss
  40737a:	adc    BYTE PTR ds:0xfbb4c451,ah
  407380:	das    
  407381:	mov    BYTE PTR [edx+0x77],cl
  407384:	fld    TBYTE PTR [esi-0x417b9daa]
  40738a:	push   eax
  40738b:	out    dx,al
  40738c:	sbb    al,0x81
  40738e:	cmp    DWORD PTR [eax],eax
  407390:	mov    fs,WORD PTR [esi+0x4f]
  407393:	retf   
  407394:	je     0x407410
  407396:	sub    ecx,DWORD PTR [edi]
  407398:	bound  ecx,QWORD PTR [esi+0x33]
  40739b:	cmovb  ecx,DWORD PTR [esi+0xf]
  40739f:	adc    DWORD PTR [edx+0x4d],esi
  4073a2:	out    0x10,eax
  4073a4:	retf   0xbf4d
  4073a7:	adc    dl,dl
  4073a9:	lea    ecx,[ecx]
  4073ab:	jno    0x407407
  4073ad:	loope  0x407380
  4073af:	imul   ecx,DWORD PTR [edi+0x1a],0x7f57033f
  4073b6:	mov    esp,0x649bd555
  4073bb:	int3   
  4073bc:	mov    eax,0x85b24a90
  4073c1:	jmp    0x407419
  4073c3:	adc    dl,cl
  4073c5:	dec    esp
  4073c6:	mov    edi,0xb74cd20f
  4073cb:	pminsw mm1,QWORD PTR [ebx+eiz*8-0x2d]
  4073d0:	(bad)  [edx]
  4073d2:	sbb    eax,DWORD PTR [esi+eax*4]
  4073d5:	inc    edx
  4073d6:	ss inc esi
  4073d8:	in     eax,dx
  4073d9:	inc    ebx
  4073da:	lods   eax,DWORD PTR ds:[esi]
  4073dc:	out    0x1f,eax
  4073de:	or     dh,ch
  4073e0:	pop    es
  4073e1:	push   ecx
  4073e2:	mov    ch,0xbc
  4073e4:	dec    edx
  4073e5:	jge    0x4073cf
  4073e7:	push   ecx
  4073e8:	add    DWORD PTR [eax+0x24393a8f],edi
  4073ee:	inc    edx
  4073ef:	daa    
  4073f0:	xlat   BYTE PTR ds:[ebx]
  4073f1:	idiv   BYTE PTR [esi]
  4073f3:	inc    ebp
  4073f4:	add    BYTE PTR [eax-0x26],bh
  4073f7:	cmp    edx,DWORD PTR [ebp+0x70]
  4073fa:	sar    BYTE PTR [ebx],cl
  4073fc:	xor    eax,0xa131fe98
  407401:	mov    cl,BYTE PTR [esi]
  407403:	xor    dh,BYTE PTR [ecx+0x5b]
  407406:	adc    bh,al
  407408:	add    al,0x46
  40740a:	out    0x5e,eax
  40740c:	pop    esp
  40740d:	sub    eax,0xe524656a
  407412:	sub    DWORD PTR [edi+esi*4+0x505ae9ca],ebp
  407419:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40741b:	sub    eax,DWORD PTR fs:[edi+0x52]
  40741f:	xor    ch,ah
  407421:	(bad)  
  407422:	out    dx,al
  407423:	das    
  407424:	adc    DWORD PTR [esi+eiz*8+0x2f],edi
  407428:	or     DWORD PTR [esi+ebx*1+0x30],edi
  40742c:	sbb    DWORD PTR [esi+ecx*1+0x268c1130],ecx
  407433:	call   0x403b:0x2451cb56
  40743a:	(bad)  
  40743b:	fst    QWORD PTR [eax]
  40743d:	dec    ecx
  40743e:	cmp    esi,DWORD PTR [esi+0x5b479904]
  407444:	sbb    BYTE PTR [esi-0x339ac1ab],0xc6
  40744b:	add    dh,BYTE PTR [ecx-0x72]
  40744e:	mov    dh,0x30
  407450:	jns    0x4073e0
  407452:	scas   al,BYTE PTR es:[edi]
  407453:	xor    BYTE PTR [ecx+0x7e],dh
  407456:	retf   0x30
  407459:	add    BYTE PTR [ebx],al
  40745b:	cmp    ecx,edx
  40745d:	cmp    esp,edi
  40745f:	cmp    ch,dh
  407461:	clc    
  407462:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407463:	add    BYTE PTR [esi+0x16cb0707],bh
  407469:	imul   ebx,DWORD PTR [ebx+0x56],0x7e
  40746d:	retf   0x6d8a
  407470:	xor    bl,BYTE PTR [eax]
  407472:	scas   eax,DWORD PTR es:[edi]
  407473:	inc    edi
  407474:	fadd   QWORD PTR [esi]
  407476:	push   0x55fb6656
  40747b:	cmp    DWORD PTR [esi],ebp
  40747d:	cmp    eax,0xa956f
  407482:	cmp    DWORD PTR [esi],0xa
  407485:	add    BYTE PTR [ebx+0x31],ah
  407488:	mov    dh,BYTE PTR [ebx+ebx*8]
  40748b:	xor    DWORD PTR [edx+0x48bc1634],eax
  407491:	dec    edi
  407492:	jmp    0x86bd:0xd00a2e52
  407499:	lods   eax,DWORD PTR ds:[esi]
  40749a:	dec    edx
  40749b:	dec    esi
  40749c:	add    cl,ch
  40749e:	stos   DWORD PTR es:[edi],eax
  40749f:	sub    dl,BYTE PTR [esi+edx*8]
  4074a2:	jnp    0x4074fe
  4074a4:	test   al,0x75
  4074a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074a7:	call   0x3c64ac03
  4074ac:	jecxz  0x4074e7
  4074ae:	daa    
  4074af:	cmp    edi,DWORD PTR [edi+0x6e3a713a]
  4074b5:	cmp    al,0xf6
  4074b7:	cmp    BYTE PTR [esp+edi*1+0x3042745f],bh
  4074be:	add    BYTE PTR [eax+ebx*1],cl
  4074c1:	bound  edi,QWORD PTR [esp+ebp*8+0x48]
  4074c5:	mov    ecx,DWORD PTR [ebp+0x4e]
  4074c8:	sub    al,0xed
  4074ca:	mov    ah,0x71
  4074cc:	push   ss
  4074cd:	xchg   edi,eax
  4074ce:	xchg   ebx,eax
  4074cf:	dec    esp
  4074d0:	sar    DWORD PTR [ebx],1
  4074d2:	dec    edi
  4074d3:	xchg   ah,al
  4074d5:	das    
  4074d6:	cs xchg ecx,eax
  4074d8:	sbb    DWORD PTR [eax],eax
  4074da:	and    al,0x89
  4074dc:	inc    eax
  4074dd:	add    DWORD PTR [ebp-0x7f],eax
  4074e0:	add    DWORD PTR es:[ebx+0x79],esp
  4074e4:	push   edx
  4074e5:	add    DWORD PTR [edi+0x71],edi
  4074e8:	int3   
  4074e9:	add    dh,ah
  4074eb:	aaa    
  4074ec:	push   esi
  4074ed:	mov    al,ds:0xe7737245
  4074f2:	xor    eax,esi
  4074f4:	mov    dl,0x68
  4074f6:	mov    ebp,0xda9a33a5
  4074fb:	xchg   BYTE PTR [ebp+0xda9a941],dh
  407501:	or     al,BYTE PTR [edx+0x5d1f5f9a]
  407507:	mov    bh,0x42
  407509:	pop    ds
  40750a:	outs   dx,DWORD PTR ds:[esi]
  40750b:	mov    bh,0x9c
  40750d:	pop    ds
  40750e:	nop
  40750f:	xchg   edi,eax
  407510:	test   al,0x1e
  407512:	retf   0x4797
  407515:	pop    ds
  407516:	fst    QWORD PTR [eax+edi*4+0x2f]
  40751a:	xchg   BYTE PTR [ebp-0x63f5a2b0],al
  407520:	sub    cl,bl
  407522:	sub    eax,DWORD PTR [eax]
  407524:	ss ss scas eax,DWORD PTR es:[edi]
  407527:	jmp    DWORD PTR [ebx-0x80]
  40752a:	cdq    
  40752b:	xor    al,0xc7
  40752d:	adc    DWORD PTR [ebx+0x4fdaf29],esi
  407533:	fwait
  407534:	push   edx
  407535:	sbb    ch,BYTE PTR ds:[ebx+ebx*2-0x53]
  40753a:	sbb    DWORD PTR [ebx+0x221b0d53],esp
  407540:	mov    eax,0xb0371af7
  407545:	ja     0x40750e
  407547:	fadd   QWORD PTR [edx]
  407549:	jno    0x4074e7
  40754b:	idiv   esi
  40754d:	inc    edx
  40754e:	out    dx,eax
  40754f:	inc    ebp
  407550:	in     al,dx
  407551:	add    bl,BYTE PTR [eax+0x50]
  407554:	xor    BYTE PTR [ebx+0x6f],bl
  407557:	cmp    ebx,0x4e
  40755a:	lods   eax,DWORD PTR ds:[esi]
  40755b:	push   ebx
  40755c:	das    
  40755d:	scas   al,BYTE PTR es:[edi]
  40755e:	outs   dx,BYTE PTR ds:[esi]
  40755f:	(bad)  
  407560:	retf   0xb950
  407563:	adc    edi,edx
  407565:	push   eax
  407566:	xchg   esp,eax
  407567:	adc    edx,edx
  407569:	push   eax
  40756a:	rcl    BYTE PTR [ecx],0x9f
  40756d:	push   eax
  40756e:	popf   
  40756f:	adc    DWORD PTR [ebx+0x12ba750],ebx
  407575:	push   cs
  407576:	adc    DWORD PTR [ebx+0x6920ed9a],eax
  40757c:	xor    dl,BYTE PTR [ebp-0x1d0ccb32]
  407582:	arpl   cx,bx
  407584:	xor    BYTE PTR [ecx+0x4b],dh
  407587:	fadd   QWORD PTR [eax]
  407589:	es inc ebp
  40758b:	stos   BYTE PTR es:[edi],al
  40758c:	scas   eax,DWORD PTR es:[edi]
  40758d:	mov    eax,0x1c3075cc
  407592:	sahf   
  407593:	and    DWORD PTR [esi+0x2c3504ba],0xfffffff5
  40759a:	lea    esp,[edx-0x5b]
  40759d:	xchg   esi,eax
  40759e:	adc    esp,ebx
  4075a0:	or     ebp,DWORD PTR [edx]
  4075a2:	dec    edx
  4075a3:	xor    cl,BYTE PTR [ebx]
  4075a5:	sbb    ecx,DWORD PTR [edx+0x78]
  4075a8:	or     edx,DWORD PTR [esi-0x2c]
  4075ab:	test   eax,0xf2d2f7df
  4075b0:	and    eax,0xb6e423b9
  4075b5:	(bad)  
  4075b6:	imul   edi,DWORD PTR [edx-0x5c],0x3742ed73
  4075bd:	pop    ss
  4075be:	leave  
  4075bf:	mov    BYTE PTR [ecx-0x6],dl
  4075c2:	out    dx,eax
  4075c3:	inc    eax
  4075c4:	ins    BYTE PTR es:[edi],dx
  4075c5:	popa   
  4075c6:	mov    dl,0x9
  4075c8:	aam    0xfc
  4075ca:	(bad)  
  4075cb:	out    0x60,al
  4075cd:	stos   BYTE PTR es:[edi],al
  4075ce:	cmp    dl,BYTE PTR [eax-0x1b10914b]
  4075d4:	hlt    
  4075d5:	gs (bad) 
  4075d7:	sahf   
  4075d8:	and    al,0x7
  4075da:	push   esi
  4075db:	fisttp DWORD PTR ds:0x6b1069dd
  4075e1:	les    edx,FWORD PTR [ebx+eiz*2-0xa0672ad]
  4075e8:	mov    eax,0xe13c0d1d
  4075ed:	add    BYTE PTR [edx-0x18cd8ca4],al
  4075f3:	jmp    0x4075ff
  4075f5:	fsubr  DWORD PTR [ebp+0x1b1a746e]
  4075fb:	stos   BYTE PTR es:[edi],al
  4075fc:	sub    al,bl
  4075fe:	jno    0x4075e7
  407600:	test   DWORD PTR [eax],esi
  407602:	inc    ecx
  407603:	mov    bl,0xea
  407605:	not    DWORD PTR [ebp+0x38]
  407608:	or     BYTE PTR [ebx],dh
  40760a:	gs mov ah,0x6b
  40760d:	xor    DWORD PTR [eax],edi
  40760f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407610:	or     cl,cl
  407612:	mov    ch,0x80
  407614:	fdiv   QWORD PTR [ecx]
  407616:	stc    
  407617:	pop    ebx
  407618:	loope  0x4075d9
  40761a:	sub    DWORD PTR cs:[eax],0xffffffe1
  40761e:	std    
  40761f:	mov    edi,ebp
  407621:	out    dx,eax
  407622:	pop    ebx
  407623:	js     0x407601
  407625:	int3   
  407626:	jmp    edi
  407628:	es push ebx
  40762a:	mov    ds:0xb05ddab2,al
  40762f:	xchg   DWORD PTR [esi],esi
  407631:	dec    ecx
  407632:	pop    ecx
  407633:	xchg   ebp,eax
  407634:	rol    BYTE PTR cs:[ebp-0x1e0fa82f],cl
  40763b:	enter  0xf1a5,0x6a
  40763f:	shl    DWORD PTR [eax+0x0],0x49
  407643:	jb     0x40768d
  407645:	pop    edx
  407646:	(bad)  
  407647:	popf   
  407648:	and    dl,BYTE PTR [ebp-0x699b55e0]
  40764e:	mov    dl,0x76
  407650:	cmp    eax,0x35200a8
  407655:	ficom  DWORD PTR [edx]
  407657:	cmp    al,0x4d
  407659:	out    dx,eax
  40765a:	lods   eax,DWORD PTR ds:[esi]
  40765b:	test   DWORD PTR [edx+0x54],ecx
  40765e:	sti    
  40765f:	jmp    0xcc107e1e
  407664:	mov    edx,ecx
  407666:	jbe    0x40767d
  407668:	mov    cl,0x3b
  40766a:	dec    ebx
  40766b:	mov    ch,0x1a
  40766d:	cmp    DWORD PTR [edx],edi
  40766f:	rol    esp,0x23
  407672:	loopne 0x4076b4
  407674:	stos   DWORD PTR es:[edi],eax
  407675:	aaa    
  407676:	sub    eax,0x51fa7f19
  40767b:	jns    0x40766e
  40767d:	retf   0xc698
  407680:	adc    eax,esp
  407682:	in     eax,dx
  407683:	push   0x62
  407685:	scas   al,BYTE PTR es:[edi]
  407686:	xchg   edx,eax
  407687:	mov    esp,0xc3ba3893
  40768c:	push   ecx
  40768d:	cli    
  40768e:	push   edi
  40768f:	stc    
  407690:	mov    WORD PTR [ecx],?
  407692:	out    0xa5,al
  407694:	mov    edi,0x2a87824c
  407699:	popf   
  40769a:	sub    DWORD PTR [ebx-0x4a],esp
  40769d:	mov    bl,0x58
  40769f:	adc    esi,edi
  4076a1:	push   ds
  4076a2:	loop   0x407657
  4076a4:	js     0x4076c7
  4076a6:	adc    BYTE PTR es:[ebp+0x3b],dh
  4076aa:	mov    bl,0xea
  4076ac:	add    ecx,DWORD PTR [ecx+ebp*8-0x2ea99964]
  4076b3:	xor    DWORD PTR [ecx-0x73],0xffffffe0
  4076b7:	add    BYTE PTR [ecx-0x2],bh
  4076ba:	pop    esi
  4076bb:	lea    eax,[esi-0xef37a47]
  4076c1:	popa   
  4076c2:	out    dx,eax
  4076c3:	dec    esp
  4076c4:	iret   
  4076c5:	stc    
  4076c6:	cmp    esi,esi
  4076c8:	cmp    eax,DWORD PTR [edx]
  4076ca:	test   dl,cl
  4076cc:	and    al,0x66
  4076ce:	lods   eax,DWORD PTR ds:[esi]
  4076cf:	mov    ecx,0xcd8fe334
  4076d4:	mov    bh,0x8
  4076d6:	xlat   BYTE PTR ds:[ebx]
  4076d7:	xchg   edx,eax
  4076d8:	fisub  DWORD PTR [eax-0x5192ae15]
  4076de:	jnp    0x407671
  4076e0:	dec    eax
  4076e1:	lods   eax,DWORD PTR ds:[esi]
  4076e2:	clc    
  4076e3:	out    0x77,eax
  4076e5:	sbb    ah,cl
  4076e7:	sub    edi,DWORD PTR [ecx+0x5f133d99]
  4076ed:	inc    edi
  4076ee:	add    cl,al
  4076f0:	fwait
  4076f1:	xchg   edi,eax
  4076f2:	ret    0x9be1
  4076f5:	in     eax,0x54
  4076f7:	pop    ss
  4076f8:	int3   
  4076f9:	pop    edx
  4076fa:	jae    0x407712
  4076fc:	and    al,0x5b
  4076fe:	and    eax,0x25e50d15
  407703:	mov    bh,cl
  407705:	ror    ebx,1
  407707:	(bad)  
  407708:	sbb    eax,0x31a8168b
  40770d:	mov    ds:0xde0975c4,eax
  407712:	mov    ebp,0x9e0e3ac5
  407717:	pop    eax
  407718:	test   eax,0x13b571
  40771d:	push   ss
  40771e:	stos   BYTE PTR es:[edi],al
  40771f:	pop    edx
  407720:	xlat   BYTE PTR ds:[ebx]
  407721:	stc    
  407722:	rcl    BYTE PTR [esi-0x6efa5845],0xc2
  407729:	dec    edi
  40772a:	mov    ebp,0xa327b968
  40772f:	popa   
  407730:	or     al,0x46
  407732:	call   0x8dc0:0x42a5d961
  407739:	retf   
  40773a:	outs   dx,DWORD PTR ds:[esi]
  40773b:	and    eax,0xd919d7c7
  407740:	xor    al,0xc3
  407742:	out    0xe5,eax
  407744:	ja     0x4076d7
  407746:	jge    0x40774b
  407748:	imul   ebx,DWORD PTR [edx-0x38],0xffffffce
  40774c:	loope  0x4076ff
  40774e:	iret   
  40774f:	fidiv  DWORD PTR [esi+0x3e34244]
  407755:	xchg   BYTE PTR [edx-0x1d],al
  407758:	add    eax,DWORD PTR [esi+0x47909c42]
  40775e:	inc    edx
  40775f:	cmp    al,0x8e
  407761:	inc    edi
  407762:	inc    edx
  407763:	jecxz  0x407768
  407765:	xchg   BYTE PTR [edx+0x73],al
  407768:	lea    eax,[edi+0x42]
  40776b:	xchg   ebp,eax
  40776c:	lea    eax,[edi+0x42]
  40776f:	cwde   
  407770:	add    ebp,DWORD PTR [ebx+0x42]
  407773:	ja     0x4077f1
  407775:	inc    esi
  407776:	inc    edx
  407777:	stos   BYTE PTR es:[edi],al
  407778:	add    eax,DWORD PTR [ebx+0x467c4f42]
  40777e:	inc    edx
  40777f:	jmp    0x42997787
  407784:	pop    ds
  407785:	jge    0x40774d
  407787:	inc    edx
  407788:	cmp    eax,DWORD PTR [ebx+eax*4]
  40778b:	inc    edx
  40778c:	pop    es
  40778d:	jge    0x407755
  40778f:	inc    edx
  407790:	lock add eax,DWORD PTR [ebx-0x3982f0be]
  407797:	inc    edx
  407798:	outs   dx,DWORD PTR ds:[esi]
  407799:	add    ecx,DWORD PTR [eax-0x398340be]
  40779f:	inc    edx
  4077a0:	or     al,0x4
  4077a2:	jb     0x4077e6
  4077a4:	pop    es
  4077a5:	jge    0x40776d
  4077a7:	inc    edx
  4077a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077a9:	add    ecx,DWORD PTR [edi-0x39830cbe]
  4077af:	inc    edx
  4077b0:	or     ch,BYTE PTR [eax+0x10a3c85]
  4077b6:	mov    ds:0x851e0a82,eax
  4077bb:	cmp    eax,0x8292c90a
  4077c0:	or     dl,BYTE PTR [ecx-0x12f5c07b]
  4077c6:	add    BYTE PTR [edx+0x2f85ac0a],0xa
  4077cd:	icebp  
  4077ce:	jb     0x407752
  4077d0:	or     bl,bh
  4077d2:	test   DWORD PTR [eax],edi
  4077d4:	or     ch,ch
  4077d6:	pop    esp
  4077d7:	or     BYTE PTR [edx],0x1e
  4077da:	cmp    BYTE PTR [edx+ecx*1],0xd5
  4077de:	push   edx
  4077df:	or     BYTE PTR [edx],0x47
  4077e2:	cmp    BYTE PTR [edx+ecx*1],0xbd
  4077e6:	add    BYTE PTR [edx-0x7e],al
  4077e9:	or     bh,BYTE PTR [ecx-0x36f5c67e]
  4077ef:	xor    al,BYTE PTR [edx+0x3e82cf0a]
  4077f5:	or     dl,BYTE PTR [ecx-0x34f57dde]
  4077fb:	test   DWORD PTR [edx],edi
  4077fd:	or     ch,BYTE PTR [ebp-0x60f57dee]
  407803:	xor    BYTE PTR [edx+ecx*1],0x4d
  407807:	add    al,BYTE PTR [ebx+0x4582350a]
  40780d:	or     al,BYTE PTR [ecx-0xe]
  407810:	or     BYTE PTR [edx],0xdb
  407813:	test   DWORD PTR [esi+0xa],eax
  407816:	cmp    edx,esp
  407818:	or     BYTE PTR [edx],0xb0
  40781b:	test   DWORD PTR [ebx+0xa],ecx
  40781e:	test   edx,edx
  407820:	or     BYTE PTR [edx],0x39
  407823:	xor    BYTE PTR [edx],0xa
  407826:	fnstcw WORD PTR [ebp+0x3c000a82]
  40782c:	inc    esi
  40782d:	or     eax,0x4a7e5700
  407832:	add    BYTE PTR [edx+0x13000346],dl
  407838:	jle    0x407884
  40783a:	add    BYTE PTR [edx-0x30ffffba],cl
  407840:	jge    0x40788c
  407842:	add    ah,dl
  407844:	inc    ebp
  407845:	sbb    BYTE PTR [eax],al
  407847:	sar    DWORD PTR [ebp+0x4a],cl
  40784a:	add    BYTE PTR [eax],al
  40784c:	inc    edx
  40784d:	inc    esi
  40784e:	sub    al,BYTE PTR [eax]
  407850:	out    0x7d,eax
  407852:	dec    edx
  407853:	add    BYTE PTR [ebx-0x40fff1bb],bh
  407859:	jge    0x4078a5
  40785b:	add    BYTE PTR [esi],ah
  40785d:	inc    esi
  40785e:	sub    eax,DWORD PTR [eax]
  407860:	ret    
  407861:	jle    0x4078ad
  407863:	add    BYTE PTR [eax+0x46],bh
  407866:	cmp    BYTE PTR [eax],al
  407868:	pop    ss
  407869:	jg     0x4078b5
  40786b:	add    BYTE PTR [eax+0x46],bh
  40786e:	sub    BYTE PTR [eax],al
  407870:	pop    ebx
  407871:	jle    0x4078bd
  407873:	add    BYTE PTR [edx],ah
  407875:	inc    ebp
  407876:	push   es
  407877:	add    BYTE PTR [ebx],ch
  407879:	jle    0x4078c5
  40787b:	add    BYTE PTR [ebx+0x77001145],bh
  407881:	jg     0x4078cd
  407883:	add    bh,ah
  407885:	inc    ebp
  407886:	add    eax,0x4a7fb700
  40788b:	add    BYTE PTR [ebp-0x5cfffdbb],bh
  407891:	jg     0x4078dd
  407893:	add    BYTE PTR [eax],bl
  407895:	inc    ebp
  407896:	verw   WORD PTR [ebx+0x37004a7f]
  40789d:	inc    ebp
  40789e:	or     BYTE PTR [eax],al
  4078a0:	pop    ds
  4078a1:	jle    0x4078ed
  4078a3:	add    BYTE PTR [esi-0x79ebf717],al
  4078a9:	inc    ebx
  4078aa:	ja     0x4078ec
  4078ac:	xchg   BYTE PTR [edx+0x9],dh
  4078af:	adc    DWORD PTR [eax],eax
  4078b1:	xchg   BYTE PTR [edi],dl
  4078b3:	jbe    0x4078f5
  4078b5:	xchg   BYTE PTR [esi-0x1479eef7],dl
  4078bb:	jne    0x4078fd
  4078bd:	xchg   BYTE PTR [ecx+ecx*1+0x77238607],cl
  4078c4:	inc    eax
  4078c5:	xchg   ch,bl
  4078c7:	or     BYTE PTR [esi],cl
  4078c9:	xchg   BYTE PTR [ebx+0x77],al
  4078cc:	inc    eax
  4078cd:	xchg   BYTE PTR [ebx+0x23860c08],ch
  4078d3:	ja     0x407915
  4078d5:	xchg   BYTE PTR [edi+0x9],cl
  4078d8:	add    al,0x86
  4078da:	pop    ebx
  4078db:	ja     0x40791d
  4078dd:	xchg   BYTE PTR [ebp+ecx*1+0x7fb38607],ah
  4078e4:	inc    eax
  4078e5:	xchg   dh,ah
  4078e7:	or     BYTE PTR ds:0x407fd386,cl
  4078ed:	xchg   BYTE PTR [ebx-0x3079f7f3],dh
  4078f3:	jg     0x407935
  4078f5:	xchg   BYTE PTR [ebx-0x3479f7f3],dh
  4078fb:	jg     0x40793d
  4078fd:	xchg   bh,dh
  4078ff:	or     BYTE PTR [edi],al
  407901:	xchg   bl,al
  407903:	jg     0x407945
  407905:	xchg   bh,bl
  407907:	or     eax,0x80698615
  40790c:	inc    eax
  40790d:	xchg   BYTE PTR [eax+0xe],al
  407910:	or     eax,DWORD PTR [esi+0x4082f5]
  407916:	xchg   BYTE PTR [ebp+0xe],al
  407919:	or     eax,DWORD PTR [esi-0x79bf7fbf]
  40791f:	inc    edx
  407920:	pop    edx
  407921:	add    al,0x74
  407923:	inc    edx
  407924:	mov    edi,0xa42c689
  407929:	add    al,0x8f
  40792b:	inc    edx
  40792c:	stos   DWORD PTR es:[edi],eax
  40792d:	mov    esi,eax
  40792f:	inc    edx
  407930:	or     DWORD PTR [edx*4-0x397600be],eax
  407937:	inc    edx
  407938:	xchg   esp,eax
  407939:	add    ecx,DWORD PTR [esi-0x3975f4be]
  40793f:	inc    edx
  407940:	cmp    DWORD PTR [ecx+eax*4],eax
  407943:	inc    edx
  407944:	or     ecx,DWORD PTR [edx+0x43242c6]
  40794a:	mov    DWORD PTR [edx-0xd],eax
  40794d:	mov    DWORD PTR [esi+0x42],eax
  407950:	pop    esp
  407951:	add    al,0x82
  407953:	inc    edx
  407954:	jecxz  0x4078df
  407956:	inc    esi
  407957:	inc    edx
  407958:	pop    ebx
  407959:	add    al,0x8f
  40795b:	inc    edx
  40795c:	dec    DWORD PTR [eax+0x3d54246]
  407962:	jl     0x4079a6
  407964:	fisttp DWORD PTR [eax+0x40e4246]
  40796a:	mov    al,BYTE PTR [edx-0x3d]
  40796d:	mov    BYTE PTR [esi+0x42],al
  407970:	mov    es,WORD PTR [ebx]
  407972:	dec    eax
  407973:	inc    ecx
  407974:	imul   eax,DWORD PTR [edi+0x3d64246],0x0
  40797b:	cmp    eax,DWORD PTR [edx+0x23]
  40797e:	mov    BYTE PTR [esi+0x42],al
  407981:	jp     0x407986
  407983:	pop    edi
  407984:	inc    edx
  407985:	inc    DWORD PTR [edi+0x3ad4246]
  40798b:	mov    WORD PTR [edx-0x15],es
  40798e:	xchg   esi,eax
  407990:	inc    edx
  407991:	arpl   WORD PTR [ebx],ax
  407993:	mov    ch,0x42
  407995:	lahf   
  407996:	xchg   dh,al
  407998:	inc    edx
  407999:	or     ah,BYTE PTR [edx-0x62f5b87b]
  40799f:	add    BYTE PTR [edx+0x4985b10a],al
  4079a5:	or     ch,BYTE PTR [ecx]
  4079a7:	add    BYTE PTR [edx+0x2e85660a],al
  4079ad:	or     bh,BYTE PTR [ecx+0x0]
  4079b0:	or     BYTE PTR [edx],0xef
  4079b3:	test   DWORD PTR [esi+0xa],ecx
  4079b6:	imul   eax,DWORD PTR [eax],0x859b0a82
  4079bc:	xchg   BYTE PTR [edx],cl
  4079be:	icebp  
  4079bf:	add    BYTE PTR [edx+0x4685ab0a],al
  4079c5:	or     bl,cl
  4079c7:	add    BYTE PTR [edx+0x4685d30a],al
  4079cd:	or     al,cl
  4079cf:	add    BYTE PTR [edx+0x4c85650a],al
  4079d5:	or     bl,ch
  4079d7:	add    BYTE PTR [edx+0x48850e0a],al
  4079dd:	or     dl,ch
  4079df:	add    BYTE PTR [eax],al
  4079e1:	or     BYTE PTR [edx],0xe8
  4079e4:	test   DWORD PTR [eax],ebp
  4079e6:	or     cl,ch
  4079e8:	add    BYTE PTR [edx+0x4585ec0a],al
  4079ee:	or     al,ch
  4079f0:	add    BYTE PTR [edx+0x478a400a],al
  4079f6:	or     bl,BYTE PTR [ebp+0x2f0a8200]
  4079fc:	mov    al,BYTE PTR [ebx+0xa]
  4079ff:	xchg   ecx,eax
  407a00:	add    BYTE PTR [edx+0x578a820a],al
  407a06:	or     ch,BYTE PTR [ecx-0x2ff57e00]
  407a0c:	test   DWORD PTR [ebp+0xa],ecx
  407a0f:	pop    ecx
  407a10:	add    BYTE PTR [ebx+0x423e000a],al
  407a16:	lldt   di
  407a19:	les    ecx,FWORD PTR [ecx+0x0]
  407a1c:	cmp    BYTE PTR [edx+0x1e],al
  407a1f:	add    BYTE PTR [edi-0x78ffb63c],bh
  407a25:	inc    esi
  407a26:	adc    al,0x0
  407a28:	das    
  407a29:	enter  0x49,0x70
  407a2d:	inc    esi
  407a2e:	or     eax,0x49c84700
  407a33:	add    BYTE PTR [edx+eax*2],dh
  407a36:	sbb    al,BYTE PTR [eax]
  407a38:	adc    ecx,eax
  407a3a:	dec    ecx
  407a3b:	add    BYTE PTR [edx+0x46],dh
  407a3e:	or     al,0x0
  407a40:	sti    
  407a41:	(bad)  
  407a42:	dec    ecx
  407a43:	add    BYTE PTR [eax],al
  407a45:	sub    al,BYTE PTR [edx+0x9]
  407a48:	add    bh,dl
  407a4a:	(bad)  
  407a4b:	dec    ecx
  407a4c:	add    BYTE PTR [ebx],bh
  407a4e:	inc    edx
  407a4f:	and    eax,0x49c7f700
  407a54:	add    BYTE PTR [esi+eax*2-0x3820ffe3],ah
  407a5b:	dec    ecx
  407a5c:	add    BYTE PTR [edx-0x7cffefba],ah
  407a62:	ror    DWORD PTR [ecx+0x0],0x34
  407a66:	inc    esi
  407a67:	add    eax,0x49c11300
  407a6c:	add    BYTE PTR [ecx+0xb001e41],dh
  407a72:	ror    DWORD PTR [ecx+0x0],0x4
  407a76:	inc    edx
  407a77:	adc    eax,0x49c04b00
  407a7c:	add    BYTE PTR [ebx+0x53002e41],ah
  407a82:	ror    DWORD PTR [ecx+0x0],0xec
  407a86:	inc    ecx
  407a87:	add    BYTE PTR [eax],al
  407a89:	ja     0x407a4c
  407a8b:	dec    ecx
  407a8c:	add    BYTE PTR [esi-0x79fbf744],al
  407a92:	dec    ebx
  407a93:	mov    DWORD PTR [eax-0x7a],eax
  407a96:	sbb    eax,0x23860409
  407a9b:	mov    DWORD PTR [eax-0x7a],eax
  407a9e:	loope  0x407aa8
  407aa0:	or     al,0x86
  407aa2:	and    ecx,DWORD PTR [ecx+0x90e8640]
  407aa8:	adc    DWORD PTR [eax],eax
  407aaa:	xchg   BYTE PTR [edi-0x77],dl
  407aad:	inc    eax
  407aae:	xchg   BYTE PTR [ecx+0x47860e09],dl
  407ab4:	mov    DWORD PTR [eax-0x7a],eax
  407ab7:	push   cs
  407ab8:	or     DWORD PTR [esi+eax*4],ecx
  407abb:	pop    ss
  407abc:	mov    BYTE PTR [eax-0x7a],al
  407abf:	dec    edi
  407ac0:	push   cs
  407ac1:	adc    al,BYTE PTR [esi-0x79bf7815]
  407ac7:	aam    0x8
  407ac9:	push   ds
  407aca:	xchg   BYTE PTR [ebx-0x77],cl
  407acd:	inc    eax
  407ace:	xchg   BYTE PTR [ebp+0x9],dh
  407ad1:	xor    DWORD PTR [esi-0x79bf76c1],eax
  407ad7:	pop    ebx
  407ad8:	or     DWORD PTR [ecx],ecx
  407ada:	xchg   BYTE PTR [ebx-0x3f79bf77],cl
  407ae0:	or     BYTE PTR [esi+eax*4],cl
  407ae3:	fwait
  407ae4:	mov    DWORD PTR [eax-0x7a],eax
  407ae7:	jns    0x407af7
  407ae9:	or     al,0x86
  407aeb:	imul   ecx,DWORD PTR [esi+0xe828640],0x7
  407af2:	xchg   BYTE PTR [ebx-0x7b79bf72],dl
  407af8:	push   cs
  407af9:	adc    al,0x86
  407afb:	mov    ecx,DWORD PTR [esi+0xe738640]
  407b01:	add    al,0x86
  407b03:	push   ebx
  407b04:	mov    es,WORD PTR [eax-0x7a]
  407b07:	inc    edx
  407b08:	in     eax,0x3
  407b0a:	add    BYTE PTR [edx+0x33],0x84
  407b0e:	add    dh,al
  407b10:	inc    edx
  407b11:	in     eax,0x3
  407b13:	add    BYTE PTR [edx+0x2b],0x84
  407b17:	mov    BYTE PTR [edx-0x23],0x3
  407b1b:	add    BYTE PTR [edx+0x23],0x84
  407b1f:	mov    BYTE PTR [edx-0x6d],0x4
  407b23:	mov    al,BYTE PTR [edx-0x4d]
  407b26:	add    esi,0x42
  407b29:	aam    0x3
  407b2b:	add    BYTE PTR [edx+0x1b],0x84
  407b2f:	mov    BYTE PTR [edx+0x50],0x4
  407b33:	cwde   
  407b34:	inc    edx
  407b35:	jmp    0x407aba
  407b37:	mov    BYTE PTR [edx-0x80],0x4
  407b3b:	add    DWORD PTR [edx-0x1d],0xd742c683
  407b42:	add    ecx,DWORD PTR [ecx+0x51bf3342]
  407b48:	inc    edx
  407b49:	lods   eax,DWORD PTR ds:[esi]
  407b4a:	add    edi,DWORD PTR [ebp+0x42]
  407b4d:	movsx  eax,cx
  407b50:	inc    edx
  407b51:	sub    BYTE PTR [edi+ecx*4],al
  407b54:	inc    edx
  407b55:	cmp    edi,DWORD PTR [edi+0x3a042b1]
  407b5b:	jnp    0x407b9f
  407b5d:	cmp    edi,DWORD PTR [edi+0x3e042a1]
  407b63:	mov    WORD PTR [edx+0x27],es
  407b66:	mov    edi,0x3964291
  407b6b:	jnp    0x407baf
  407b6d:	xchg   DWORD PTR [esi+0x3d04281],edi
  407b73:	add    BYTE PTR [eax+0x71be7f42],dl
  407b79:	inc    edx
  407b7a:	int    0x3
  407b7c:	xchg   ebx,eax
  407b7d:	inc    edx
  407b7e:	aaa    
  407b7f:	mov    edi,0x610a4261
  407b84:	test   DWORD PTR [eax+0xa],edx
  407b87:	inc    ecx
  407b88:	sar    DWORD PTR [ebx],1
  407b8a:	or     ch,BYTE PTR [ebp-0x7b]
  407b8d:	inc    edi
  407b8e:	or     bh,BYTE PTR ds:0x1e0a3b41
  407b94:	or     BYTE PTR [ebp+0xa],0x1d
  407b98:	xor    DWORD PTR [ebx],edi
  407b9a:	or     dh,BYTE PTR [esi-0x7b]
  407b9d:	push   edx
  407b9e:	or     al,cl
  407ba0:	and    BYTE PTR [ebx],bh
  407ba2:	or     bl,BYTE PTR [edi]
  407ba4:	or     BYTE PTR [esi+0xa],0xc1
  407ba8:	adc    BYTE PTR [ebx],bh
  407baa:	or     dh,dh
  407bac:	test   DWORD PTR [edi+0xa],eax
  407baf:	std    
  407bb0:	add    BYTE PTR [ebx],bh
  407bb2:	or     bl,BYTE PTR [ecx]
  407bb4:	or     BYTE PTR [esi+0xa],0xdd
  407bb8:	lock cmp cl,BYTE PTR [edx]
  407bbb:	rol    BYTE PTR [ebp-0x1cbef5ae],cl
  407bc1:	cmp    cl,BYTE PTR [edx]
  407bc3:	in     eax,dx
  407bc4:	test   DWORD PTR [edi+0xa],ecx
  407bc7:	inc    ebp
  407bc8:	sar    DWORD PTR [edx],cl
  407bca:	or     ch,BYTE PTR [ebx+0x350a4c85]
  407bd0:	inc    ebx
  407bd1:	cmp    ecx,DWORD PTR [edx]
  407bd3:	adc    BYTE PTR [ebp+0x290a51],al
  407bd9:	xor    edi,DWORD PTR [ebx]
  407bdb:	or     cl,BYTE PTR [ebp+eax*4+0x23390a4c]
  407be2:	cmp    ecx,DWORD PTR [edx]
  407be4:	pop    edx
  407be5:	test   DWORD PTR [edx+0xa],edx
  407be8:	dec    ebp
  407be9:	adc    edi,DWORD PTR [ebx]
  407beb:	or     bh,dh
  407bed:	test   DWORD PTR [ecx+0xa],edx
  407bf0:	jno    0x407bf2
  407bf2:	cmp    ecx,DWORD PTR [edx]
  407bf4:	xlat   BYTE PTR ds:[ebx]
  407bf5:	adc    BYTE PTR [ebp+0xa],0x59
  407bf9:	lock cmp cl,BYTE PTR [edx]
  407bfc:	add    bh,dl
  407bfe:	inc    ebp
  407bff:	push   ds
  407c00:	add    BYTE PTR [edi-0x44],ah
  407c03:	xor    al,0x0
  407c05:	mov    DWORD PTR [esi+0x1d],eax
  407c08:	add    BYTE PTR [edi-0x44],bl
  407c0b:	xor    al,0x0
  407c0d:	js     0x407c55
  407c0f:	sbb    BYTE PTR [eax],al
  407c11:	push   ebx
  407c12:	mov    eax,0x3ef00034
  407c17:	adc    al,BYTE PTR [eax]
  407c19:	outs   dx,DWORD PTR ds:[esi]
  407c1a:	mov    eax,0x3f330034
  407c1f:	sub    DWORD PTR [eax],eax
  407c21:	adc    edi,DWORD PTR [edx+0x46390034]
  407c27:	das    
  407c28:	add    BYTE PTR [ebx],ch
  407c2a:	mov    edx,0x3e920034
  407c2f:	adc    DWORD PTR [eax],eax
  407c31:	pop    ss
  407c32:	mov    edx,0x3eac0034
  407c37:	or     DWORD PTR [eax],eax
  407c39:	or     edi,DWORD PTR [edx+0x41000034]
  407c3f:	inc    esi
  407c40:	or     eax,0x34b9c300
  407c45:	add    BYTE PTR [ecx],dh
  407c47:	inc    esi
  407c48:	or     eax,0x34b9bb00
  407c4d:	add    BYTE PTR [ecx],dl
  407c4f:	inc    esi
  407c50:	push   ss
  407c51:	add    BYTE PTR [ebx],bl
  407c53:	mov    ecx,0x45ed0034
  407c58:	or     eax,0x34b87300
  407c5d:	add    BYTE PTR ds:0xf000046,dl
  407c63:	mov    ecx,0x45c00034
  407c68:	inc    esi
  407c69:	add    BYTE PTR [edi+0x3e0034b8],ch
  407c6f:	sub    BYTE PTR ds:[eax],al
  407c72:	xlat   BYTE PTR ds:[ebx]
  407c73:	mov    ecx,0xf2860034
  407c78:	or     BYTE PTR [esi],ch
  407c7a:	xchg   bl,dl
  407c7c:	mov    ah,0x3f
  407c7e:	xchg   BYTE PTR [ecx+0x7b860408],dh
  407c84:	mov    ch,0x3f
  407c86:	xchg   BYTE PTR [eax+0x9],dh
  407c89:	adc    eax,DWORD PTR [esi-0x79c04a79]
  407c8f:	sub    ecx,DWORD PTR [esi]
  407c91:	adc    al,0x86
  407c93:	pop    edi
  407c94:	mov    ch,0x3f
  407c96:	xchg   dl,dh
  407c98:	or     BYTE PTR [esi],bl
  407c9a:	xchg   BYTE PTR [edi],bh
  407c9c:	retf   0x863f
  407c9f:	fisttp DWORD PTR [eax]
  407ca1:	sbb    eax,0xca1f8600
  407ca6:	aas    
  407ca7:	xchg   BYTE PTR [ebx+0xb862009],cl
  407cad:	mov    ch,0x3f
  407caf:	xchg   BYTE PTR [ecx+ecx*1-0x4e5c7999],bl
  407cb6:	aas    
  407cb7:	xchg   BYTE PTR [esi+0x77860508],dh
  407cbd:	mov    dl,0x3f
  407cbf:	xchg   BYTE PTR [esi+ecx*1+0xa],dl
  407cc3:	xchg   bl,cl
  407cc5:	mov    cl,0x3f
  407cc7:	xchg   cl,ah
  407cc9:	or     BYTE PTR [ecx],bh
  407ccb:	xchg   bh,bh
  407ccd:	mov    cl,0x3f
  407ccf:	xchg   bh,dh
  407cd1:	or     BYTE PTR ds:0x3fb20f86,ch
  407cd7:	xchg   BYTE PTR [eax+0x9],cl
  407cda:	pop    es
  407cdb:	xchg   BYTE PTR [edi+0x4a863fb1],dh
  407ce1:	or     DWORD PTR [esi+eax*4],ecx
  407ce4:	pop    ss
  407ce5:	mov    dl,0x3f
  407ce7:	xchg   dl,dl
  407ce9:	or     BYTE PTR [ebx],cl
  407ceb:	xchg   BYTE PTR [ebx],bl
  407ced:	mov    dl,0x3f
  407cef:	xchg   BYTE PTR [edx+0x53],al
  407cf2:	add    al,0x8d
  407cf4:	inc    edx
  407cf5:	out    dx,eax
  407cf6:	mov    esi,0x4494279
  407cfb:	jl     0x407d3f
  407cfd:	fstp   TBYTE PTR [esi+0x4a04269]
  407d03:	lea    eax,[edx-0x39]
  407d06:	mov    esi,0xd5425900
  407d0b:	add    eax,DWORD PTR [edx+0x49be8742]
  407d11:	inc    edx
  407d12:	int3   
  407d13:	add    al,0xb2
  407d15:	inc    edx
  407d16:	inc    edi
  407d17:	mov    esi,0x3ff42b9
  407d1c:	jge    0x407d60
  407d1e:	inc    ebx
  407d1f:	mov    esi,0x44442a9
  407d24:	jbe    0x407d68
  407d26:	addr16 mov esi,0x3eb4299
  407d2c:	jge    0x407d70
  407d2e:	arpl   WORD PTR [esi+0x3b34289],di
  407d34:	lea    eax,[edx-0x21]
  407d37:	mov    ebp,0x3e44279
  407d3c:	mov    DWORD PTR [edx-0x49],eax
  407d3f:	mov    ebp,0x4234269
  407d44:	je     0x407d88
  407d46:	stos   DWORD PTR es:[edi],eax
  407d47:	mov    ebp,0x4254259
  407d4c:	push   0x49bdf342
  407d51:	inc    edx
  407d52:	test   DWORD PTR [ebx],eax
  407d54:	xchg   edx,eax
  407d55:	inc    edx
  407d56:	ret    
  407d57:	mov    ebp,0x3b442b9
  407d5c:	fwait
  407d5d:	inc    edx
  407d5e:	jmp    0x407d1d
  407d60:	test   eax,0x9303f842
  407d65:	inc    edx
  407d66:	or     edi,DWORD PTR [ebp-0x21f5bd67]
  407d6c:	add    BYTE PTR [ebp+0xb050a51],al
  407d72:	cmp    BYTE PTR [edx],cl
  407d74:	pop    es
  407d75:	mov    cl,BYTE PTR [ebx+0xa]
  407d78:	sar    edx,0x37
  407d7b:	or     cl,BYTE PTR [ebp+eax*4-0x156ef5a9]
  407d82:	aaa    
  407d83:	or     dl,BYTE PTR [ebp+eax*4-0x2572f5b7]
  407d8a:	aaa    
  407d8b:	or     ah,BYTE PTR [ebp+eax*4+0x43]
  407d8f:	or     al,BYTE PTR [ecx-0x16f5c836]
  407d95:	test   DWORD PTR [edx+0xa],eax
  407d98:	jmp    0x654ac022
  407d9d:	xor    dh,BYTE PTR [edi]
  407d9f:	or     ah,al
  407da1:	test   DWORD PTR [edx+0xa],eax
  407da4:	call   0xfd4ac02e
  407da9:	sbb    dh,BYTE PTR [edi]
  407dab:	or     ch,bh
  407dad:	test   DWORD PTR [edx+0xa],eax
  407db0:	add    DWORD PTR [edx+0x2bd0a42],eax
  407db6:	aaa    
  407db7:	or     bh,bl
  407db9:	test   DWORD PTR [edx+0xa],eax
  407dbc:	icebp  
  407dbd:	test   DWORD PTR [edx+0xa],eax
  407dc0:	sbb    ebx,ebp
  407dc2:	ss or  bl,cl
  407dc5:	test   DWORD PTR [edx+0xa],eax
  407dc8:	loope  0x407d4f
  407dca:	inc    edx
  407dcb:	or     dl,ch
  407dcd:	shl    BYTE PTR [esi],cl
  407dcf:	or     ah,al
  407dd1:	add    BYTE PTR [ebp-0x75fef5be],al
  407dd7:	inc    edx
  407dd8:	or     ch,cl
  407dda:	cmp    dh,BYTE PTR [edi]
  407ddc:	or     ah,ah
  407dde:	test   DWORD PTR [edx+0xa],eax
  407de1:	in     eax,0x85
  407de3:	inc    edx
  407de4:	or     al,BYTE PTR [eax]
  407de6:	out    dx,al
  407de7:	cmp    al,0xa
  407de9:	add    bh,ch
  407deb:	inc    edx
  407dec:	or     al,BYTE PTR [eax]
  407dee:	fnstsw WORD PTR [edx+ecx*1]
  407df1:	add    ch,bl
  407df3:	inc    edx
  407df4:	or     al,BYTE PTR [eax]
  407df6:	scas   al,BYTE PTR es:[edi]
  407df7:	inc    ebx
  407df8:	or     al,BYTE PTR [eax]
  407dfa:	mov    ds:0x9d000a42,eax
  407dff:	inc    ebx
  407e00:	or     al,BYTE PTR [eax]
  407e02:	mov    eax,ds:0x46000a42
  407e07:	or     al,BYTE PTR ds:[eax]
  407e0a:	ret    
  407e0b:	or     BYTE PTR [ebx+0x0],0x55
  407e0f:	or     al,BYTE PTR ds:[eax]
  407e12:	leave  
  407e13:	or     BYTE PTR [ebx+0x0],0xa4
  407e17:	or     al,BYTE PTR ds:[eax]
  407e1a:	daa    
  407e1b:	or     BYTE PTR [ebx+0x0],0x9b
  407e1f:	or     al,BYTE PTR ds:[eax]
  407e22:	aaa    
  407e23:	or     BYTE PTR [ebx+0x0],0x8a
  407e27:	or     al,BYTE PTR ds:[eax]
  407e2a:	sar    DWORD PTR [edi+0x4b],cl
  407e2d:	add    BYTE PTR [ecx+0x42],bl
  407e30:	or     al,BYTE PTR [eax]
  407e32:	das    
  407e33:	ss dec ebx
  407e35:	add    BYTE PTR [eax],al
  407e37:	sub    BYTE PTR [edx+0xa],al
  407e3a:	add    BYTE PTR [ebx],bh
  407e3c:	ss dec ebx
  407e3e:	add    BYTE PTR [edi-0x78fff5c2],bl
  407e44:	or     BYTE PTR [ebx+0x0],0xae
  407e48:	or     al,BYTE PTR ds:[eax]
  407e4b:	mov    bl,0x35
  407e4d:	dec    ebx
  407e4e:	add    BYTE PTR [ebp-0x4cfff5c2],bl
  407e54:	xor    eax,0x3e6c004b
  407e59:	or     al,BYTE PTR [eax]
  407e5b:	jae    0x407e92
  407e5d:	dec    ebx
  407e5e:	add    BYTE PTR [esi-0x79fff199],al
  407e64:	ins    BYTE PTR es:[edi],dx
  407e65:	xor    eax,0xe668641
  407e6a:	add    BYTE PTR [esi-0x79beca76],al
  407e70:	gs push cs
  407e72:	add    BYTE PTR [esi-0x79beca80],al
  407e78:	or     DWORD PTR fs:[eax],eax
  407e7b:	xchg   cl,ch
  407e7d:	dec    ecx
  407e7e:	inc    ecx
  407e7f:	xchg   BYTE PTR [ebx+0x9],ah
  407e82:	add    BYTE PTR [esi-0x79beb61f],al
  407e88:	jb     0x407e93
  407e8a:	add    BYTE PTR [esi-0x79beb620],al
  407e90:	popa   
  407e91:	or     DWORD PTR [eax],eax
  407e93:	xchg   BYTE PTR [ebx+0x4b],cl
  407e96:	inc    ecx
  407e97:	xchg   BYTE PTR [eax+0x9],dh
  407e9a:	add    BYTE PTR [eax],al
  407e9c:	xchg   BYTE PTR [ebx+0x4b],bl
  407e9f:	inc    ecx
  407ea0:	xchg   BYTE PTR [edi+0x9],bl
  407ea3:	add    BYTE PTR [esi-0x79beb4b9],al
  407ea9:	outs   dx,BYTE PTR ds:[esi]
  407eaa:	or     DWORD PTR [eax],eax
  407eac:	xchg   BYTE PTR [ebx+0x4a],dh
  407eaf:	inc    ecx
  407eb0:	xchg   BYTE PTR [ebp+0x9],bl
  407eb3:	add    BYTE PTR [esi-0x79beb9d5],al
  407eb9:	ins    BYTE PTR es:[edi],dx
  407eba:	or     DWORD PTR [eax],eax
  407ebc:	xchg   cl,ah
  407ebe:	inc    eax
  407ebf:	inc    ecx
  407ec0:	xchg   BYTE PTR [ebx+0x9],bh
  407ec3:	add    BYTE PTR [esi-0x79bebe97],al
  407ec9:	jmp    0x407ed3
  407ecb:	add    DWORD PTR [edi-0x79fff715],eax
  407ed1:	jmp    0x407edb
  407ed3:	add    BYTE PTR [esi-0x79fff816],al
  407ed9:	inc    edx
  407eda:	loope  0x407edf
  407edc:	xchg   BYTE PTR [edx-0x3d],al
  407edf:	leave  
  407ee0:	icebp  
  407ee1:	hlt    
  407ee2:	lods   eax,DWORD PTR ds:[esi]
  407ee3:	add    eax,DWORD PTR [esi-0x79fc1dbe]
  407ee9:	inc    edx
  407eea:	in     eax,0x3
  407eec:	xchg   BYTE PTR [edx-0x4d],al
  407eef:	scas   al,BYTE PTR es:[edi]
  407ef0:	shl    esp,1
  407ef2:	in     eax,0x3
  407ef4:	xchg   BYTE PTR [edx-0x4d],al
  407ef7:	scas   al,BYTE PTR es:[edi]
  407ef8:	shl    esp,0xe2
  407efb:	add    al,0x84
  407efd:	inc    ecx
  407efe:	out    dx,eax
  407eff:	add    BYTE PTR [eax],al
  407f01:	mov    BYTE PTR ds:0x497c0ceb,bh
  407f07:	xlat   BYTE PTR ds:[ebx]
  407f08:	or     BYTE PTR [eax+0x7414d345],dl
  407f0e:	push   ecx
  407f0f:	fist   WORD PTR [eax]
  407f11:	js     0x407f60
  407f13:	fistp  DWORD PTR [esp+ebp*2]
  407f16:	pop    ecx
  407f17:	(bad)  
  407f18:	sbb    BYTE PTR [eax-0x581b3cad],ah
  407f1e:	pop    ds
  407f1f:	iret   
  407f20:	loopne 0x407ecd
  407f22:	sbb    ecx,ebx
  407f24:	in     al,dx
  407f25:	lahf   
  407f26:	daa    
  407f27:	mov    bh,0xe8
  407f29:	mov    bl,0x23
  407f2b:	mov    bl,0xf4
  407f2d:	xchg   edi,eax
  407f2e:	das    
  407f2f:	mov    edi,0xbb2b9bf0
  407f34:	cld    
  407f35:	(bad)  
  407f36:	aaa    
  407f37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f38:	clc    
  407f39:	xor    DWORD PTR [ebx],0xffffffa3
  407f3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f3e:	pop    edi
  407f3f:	iret   
  407f40:	mov    al,ds:0xaccb5bab
  407f45:	lahf   
  407f46:	addr16 mov bh,0xa8
  407f49:	mov    bl,0x63
  407f4b:	mov    bl,0xb4
  407f4d:	xchg   edi,eax
  407f4e:	outs   dx,DWORD PTR ds:[esi]
  407f4f:	mov    edi,0xa6b9bb0
  407f54:	mov    cl,0xca
  407f56:	jns    0x407fa9
  407f58:	(bad)  
  407f59:	ficom  WORD PTR [ebp+0x62228955]
  407f5f:	imul   eax,DWORD PTR [ebp-0x7e92a1da],0x616a1a00
  407f69:	jge    0x407f99
  407f6b:	data16 gs jns 0x407f81
  407f6f:	jb     0x407fea
  407f71:	jne    0x407f89
  407f73:	outs   dx,BYTE PTR ds:[esi]
  407f74:	jge    0x407fe7
  407f76:	or     bh,BYTE PTR [edx+0x71]
  407f79:	ins    DWORD PTR es:[edi],dx
  407f7a:	(bad)  
  407f7b:	jne    0x407ff2
  407f7d:	imul   eax,DWORD PTR [edx],0x66588c1
  407f83:	mov    ebp,0xc8fa618c
  407f88:	sbb    BYTE PTR [ebp+0xe],0xc5
  407f8c:	test   BYTE PTR [ecx-0xe],bl
  407f8f:	rcr    BYTE PTR [eax-0x633309ab],1
  407f95:	push   ecx
  407f96:	jmp    0x94d4:0x1e4d90d8
  407f9d:	dec    ecx
  407f9e:	loop   0x407f40
  407fa0:	test   al,0x45
  407fa2:	out    0x9c,al
  407fa4:	lods   al,BYTE PTR ds:[esi]
  407fa5:	inc    ecx
  407fa6:	fisubr DWORD PTR [eax-0x5b11c260]
  407fac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fad:	cmp    edx,edx
  407faf:	mov    al,0xb8
  407fb1:	xor    eax,0x31bcacd6
  407fb6:	retf   0xb0b8
  407fb9:	sub    eax,0x29b4b4be
  407fbe:	ret    0xc900
  407fc1:	and    eax,0x21ccfcc6
  407fc6:	mov    edx,0x1dc108
  407fcb:	into   
  407fcc:	add    al,0xc5
  407fce:	add    BYTE PTR [edi-0x72],bh
  407fd1:	fcom   st(3)
  407fd3:	jnp    0x407f67
  407fd5:	(bad)  
  407fd7:	ja     0x407f6f
  407fd9:	rcr    bl,1
  407fdb:	xchg   ebx,eax
  407fdc:	call   0xe3e8:0x1e8fdfd4
  407fe3:	mov    esp,DWORD PTR [edx]
  407fe5:	in     al,dx
  407fe6:	out    0x87,eax
  407fe8:	es loopne 0x407fd6
  407feb:	jecxz  0x408007
  407fed:	in     al,0xef
  407fef:	fild   QWORD PTR [esi]
  407ff1:	clc    
  407ff2:	repz (bad) [edx]
  407ff5:	cld    
  407ff6:	not    edi
  407ff8:	ss lock sti 
  407ffb:	mov    bl,0x2a
  407ffd:	hlt    
  407ffe:	jmp    FWORD PTR [edi-0x54fcf7c1]
  408004:	repz push cs
  408006:	pop    es
  408007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408008:	inc    edi
  408009:	add    BYTE PTR [ebx],cl
  40800b:	ret    
  40800c:	cmp    eax,DWORD PTR [edi+ecx*1]
  40800f:	mov    edi,0xbb13184f
  408014:	inc    ebx
  408015:	sbb    al,0x17
  408017:	mov    bh,0x57
  408019:	adc    BYTE PTR [ebx],bl
  40801b:	push   ebx
  40801c:	pop    ecx
  40801d:	adc    al,0x1f
  40801f:	dec    edi
  408020:	in     eax,0x2a
  408022:	and    ecx,DWORD PTR [ebx+0x11]
  408025:	das    
  408026:	daa    
  408027:	inc    edi
  408028:	frstor [edx]
  40802a:	sub    esp,DWORD PTR [ebx]
  40802c:	jmp    0x1f40af57
  408031:	cmc    
  408032:	cmp    dh,BYTE PTR [ebx]
  408034:	sbb    esp,ecx
  408036:	ds aaa 
  408038:	pop    ss
  408039:	in     eax,dx
  40803a:	xor    bh,BYTE PTR [ebx]
  40803c:	repz clc 
  40803e:	ss aas 
  408040:	out    dx,eax
  408041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408042:	push   0x63
  408044:	dec    ebx
  408045:	shr    DWORD PTR [esi+0x67],1
  408048:	xchg   BYTE PTR [ebx],al
  40804a:	mov    al,ds:0xabafad69
  40804f:	ins    DWORD PTR es:[edi],dx
  408050:	test   eax,0x9571b7ab
  408055:	mov    bh,0xa3
  408057:	jne    0x407fea
  408059:	mov    bl,0xaf
  40805b:	jns    0x4080ba
  40805d:	mov    edi,0xbb595ddb
  408062:	mov    DWORD PTR [ecx+0x45],0x4145b3a7
  408069:	mov    ds:0xcf4d49bf,eax
  40806e:	retf   
  40806f:	dec    ebp
  408070:	dec    ecx
  408071:	retf   
  408072:	xlat   BYTE PTR ds:[ebx]
  408073:	push   ecx
  408074:	xor    eax,0x3155c3d7
  408079:	ror    edi,cl
  40807b:	pop    ecx
  40807c:	cmp    eax,0x397dbc5f
  408081:	pop    ebx
  408082:	mov    BYTE PTR [edx-0x798b97fb],al
  408088:	add    DWORD PTR [eax+eax*4-0x76],esp
  40808c:	or     eax,0x98e8c90
  408091:	mov    WORD PTR [eax-0x680aff6e],ds
  408097:	test   BYTE PTR [esi-0x656f6c0f],dl
  40809d:	sbb    eax,0x199e9c7f
  4080a2:	jnp    0x40810c
  4080a4:	mov    ds:0xa6548725,al
  4080a9:	and    DWORD PTR [ebx+0x2f2daa60],eax
  4080af:	ins    BYTE PTR es:[edi],dx
  4080b0:	scas   al,BYTE PTR es:[edi]
  4080b1:	sub    DWORD PTR [ebx],ebp
  4080b3:	js     0x408067
  4080b5:	adc    eax,0x11b66437
  4080ba:	xor    esi,DWORD PTR [eax-0x46]
  4080bd:	std    
  4080be:	push   ds
  4080bf:	jl     0x40807f
  4080c1:	stc    
  4080c2:	inc    ecx
  4080c3:	and    eax,DWORD PTR [edx+0x44]
  4080c6:	add    eax,0x9403e2f
  4080cb:	sub    ecx,DWORD PTR [edx+0x4c]
  4080ce:	std    
  4080cf:	push   ss
  4080d0:	inc    esi
  4080d1:	dec    eax
  4080d2:	add    DWORD PTR [ebx],edx
  4080d4:	push   edx
  4080d5:	xor    al,0x15
  4080d7:	pop    ds
  4080d8:	dec    esi
  4080d9:	xor    BYTE PTR [ecx],bl
  4080db:	sbb    ebx,DWORD PTR [edx-0x24]
  4080de:	or     al,0x7
  4080e0:	push   esi
  4080e1:	fcom   DWORD PTR [eax]
  4080e3:	add    esp,DWORD PTR [edx]
  4080e5:	in     al,0xe4
  4080e7:	push   cs
  4080e8:	push   ds
  4080e9:	loopne 0x4080d3
  4080eb:	or     ch,BYTE PTR [edx]
  4080ed:	in     al,dx
  4080ee:	fdivr  st(6),st
  4080f0:	and    eax,0x31f2e0e8
  4080f5:	aam    0xf4
  4080f7:	(bad)  
  4080f8:	sub    eax,0xfaf8d000
  4080fd:	cmp    DWORD PTR [esp+ebp*8-0xf47ca1a],edi
  408104:	loop   0x4080f7
  408106:	mov    cl,0xf0
  408108:	loope  0x40810d
  40810a:	xchg   BYTE PTR [edx-0x1d],al
  40810d:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  408113:	inc    edx
  408114:	jecxz  0x408119
  408116:	xchg   BYTE PTR [edx-0x1d],al
  408119:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  40811f:	inc    edx
  408120:	jecxz  0x408125
  408122:	xchg   BYTE PTR [edx-0x1d],al
  408125:	add    eax,DWORD PTR [esi+0x6903e342]
  40812b:	inc    esp
  40812c:	sbb    eax,0x5428604
  408131:	add    al,0x86
  408133:	inc    edx
  408134:	jecxz  0x408139
  408136:	xchg   BYTE PTR [edx-0x1d],al
  408139:	add    eax,DWORD PTR [esi-0x7a16f5be]
  40813f:	inc    edx
  408140:	or     ch,cl
  408142:	test   DWORD PTR [edx+0xa],eax
  408145:	jmp    0xe94ac3cf
  40814a:	test   edi,ebp
  40814c:	or     cl,ch
  40814e:	test   DWORD PTR [edx+0xa],eax
  408151:	jmp    0xe94ac3db
  408156:	test   DWORD PTR [edx+0xa],eax
  408159:	jmp    0xe94ac3e3
  40815e:	add    BYTE PTR [ebp-0x7a16f5be],al
  408164:	inc    edx
  408165:	or     ch,cl
  408167:	test   DWORD PTR [edx+0xa],eax
  40816a:	jmp    0x174ac3f4
  40816f:	xchg   ebp,eax
  408170:	out    dx,eax
  408171:	or     al,0xe9
  408173:	test   DWORD PTR [edx+0xa],eax
  408176:	jmp    0xe94ac400
  40817b:	test   DWORD PTR [edx+0xa],eax
  40817e:	jmp    0xe94ac408
  408183:	test   DWORD PTR [edx+0xa],eax
  408186:	jmp    0xe94ac410
  40818b:	test   DWORD PTR [edx+0xa],eax
  40818e:	jmp    0xcf4ac418
  408193:	push   esp
  408194:	out    dx,eax
  408195:	or     al,0xe9
  408197:	test   DWORD PTR [edx+0xa],eax
  40819a:	jmp    0xe94ac424
  40819f:	test   DWORD PTR [edx+0xa],eax
  4081a2:	jmp    0xe94ac42c
  4081a7:	test   DWORD PTR [edx+0xa],eax
  4081aa:	jmp    0x97497134
  4081af:	xchg   esp,eax
  4081b0:	out    dx,eax
  4081b1:	mov    WORD PTR [edi+0xcef94],cs
  4081b7:	pop    edi
  4081b8:	inc    ebx
  4081b9:	or     al,BYTE PTR [eax]
  4081bb:	pop    edi
  4081bc:	inc    ebx
  4081bd:	or     al,BYTE PTR [eax]
  4081bf:	das    
  4081c0:	inc    ebx
  4081c1:	or     al,BYTE PTR [eax]
  4081c3:	add    BYTE PTR [edi],ch
  4081c5:	inc    ebx
  4081c6:	or     al,BYTE PTR [eax]
  4081c8:	pop    ds
  4081c9:	inc    ebx
  4081ca:	or     al,BYTE PTR [eax]
  4081cc:	leave  
  4081cd:	xor    al,0xf5
  4081cf:	(bad)  
  4081d0:	mov    eax,0xc8fff534
  4081d5:	xor    al,0xf5
  4081d7:	jg     0x4081f8
  4081d9:	inc    ebx
  4081da:	or     al,BYTE PTR [eax]
  4081dc:	pop    ds
  4081dd:	inc    ebx
  4081de:	or     al,BYTE PTR [eax]
  4081e0:	out    dx,eax
  4081e1:	inc    edx
  4081e2:	or     al,BYTE PTR [eax]
  4081e4:	out    dx,eax
  4081e5:	inc    edx
  4081e6:	or     al,BYTE PTR [eax]
  4081e8:	fild   WORD PTR [edx+0xa]
  4081eb:	add    BYTE PTR [eax+0x78fff534],cl
  4081f1:	xor    al,0xf5
  4081f3:	dec    DWORD PTR [eax-0x20800acc]
  4081f9:	inc    edx
  4081fa:	or     al,BYTE PTR [eax]
  4081fc:	fild   WORD PTR [edx+0xa]
  4081ff:	add    BYTE PTR [edi-0x50fff5be],ch
  408205:	inc    edx
  408206:	or     al,BYTE PTR [eax]
  408208:	lahf   
  408209:	inc    edx
  40820a:	or     al,BYTE PTR [eax]
  40820c:	leave  
  40820d:	xor    BYTE PTR [edx],cl
  40820f:	cld    
  408210:	scas   al,BYTE PTR es:[edi]
  408211:	inc    edx
  408212:	or     bh,al
  408214:	scas   al,BYTE PTR es:[edi]
  408215:	inc    edx
  408216:	or     bh,BYTE PTR [eax-0x61]
  408219:	inc    edx
  40821a:	or     al,BYTE PTR [eax]
  40821c:	lahf   
  40821d:	inc    edx
  40821e:	or     al,BYTE PTR [eax]
  408220:	outs   dx,DWORD PTR ds:[esi]
  408221:	inc    edx
  408222:	or     al,BYTE PTR [eax]
  408224:	outs   dx,DWORD PTR ds:[esi]
  408225:	inc    edx
  408226:	or     al,BYTE PTR [eax]
  408228:	add    BYTE PTR [eax],ch
  40822a:	xor    al,0xf5
  40822c:	call   FWORD PTR [edi+0x42]
  40822f:	or     al,BYTE PTR [eax]
  408231:	xchg   bl,bl
  408233:	or     BYTE PTR [eax],al
  408235:	xchg   bl,bl
  408237:	or     BYTE PTR [eax],al
  408239:	push   es
  40823a:	fmul   QWORD PTR [eax]
  40823c:	add    BYTE PTR [esi-0x79fff725],al
  408242:	fisttp DWORD PTR [eax]
  408244:	add    BYTE PTR [esi-0x79fff725],al
  40824a:	pop    ebx
  40824b:	push   cs
  40824c:	add    BYTE PTR [esi-0x79fff725],al
  408252:	fild   DWORD PTR [edi]
  408254:	add    DWORD PTR [esi-0x79fff826],eax
  40825a:	fisttp DWORD PTR [eax]
  40825c:	add    BYTE PTR [esi-0x79fff725],al
  408262:	fisttp DWORD PTR [eax]
  408264:	add    BYTE PTR [esi-0x79fff725],al
  40826a:	fimul  DWORD PTR [eax]
  40826c:	add    BYTE PTR [esi-0x79fff1a5],al
  408272:	pop    ebx
  408273:	mov    es,WORD PTR [eax-0x7ff723fa]
  408279:	xchg   bh,ah
  40827b:	add    al,0x1c
  40827d:	push   0xf
  40827f:	add    eax,0x517a21c
  408284:	add    BYTE PTR [esi+0x60008db],al
  40828a:	fadd   QWORD PTR [esi]
  40828c:	sbb    al,BYTE PTR [eax]
  40828e:	mov    WORD PTR [ecx+0x4],es
  408291:	sbb    dh,BYTE PTR [ecx+ebp*8+0x1e]
  408295:	adc    dh,BYTE PTR [ecx+ebp*8+0x1e]
  408299:	adc    dh,BYTE PTR [ecx+ecx*1+0x1f]
  40829d:	adc    dh,BYTE PTR [ecx+ecx*1+0x1f]
  4082a1:	adc    dl,BYTE PTR [ecx+ecx*1+0x5b06121f]
  4082a8:	or     DWORD PTR [eax+0xde34296],eax
  4082ae:	mov    WORD PTR [eax+0x9],cs
  4082b1:	push   cs
  4082b2:	jl     0x408304
  4082b4:	icebp  
  4082b5:	adc    eax,0x15f15074
  4082ba:	je     0x40830c
  4082bc:	rcl    DWORD PTR ds:0x15d15074,1
  4082c2:	xchg   esp,eax
  4082c3:	push   eax
  4082c4:	rcl    DWORD PTR ds:0x362c294,1
  4082ca:	xchg   BYTE PTR [edx-0x1d],al
  4082cd:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  4082d3:	inc    edx
  4082d4:	jecxz  0x4082d9
  4082d6:	xchg   BYTE PTR [edx-0x1d],al
  4082d9:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  4082df:	inc    edx
  4082e0:	jecxz  0x4082e5
  4082e2:	xchg   BYTE PTR [edx-0x1d],al
  4082e5:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  4082eb:	inc    edx
  4082ec:	jecxz  0x4082f1
  4082ee:	xchg   BYTE PTR [edx-0x1d],al
  4082f1:	add    eax,DWORD PTR [eax]
  4082f3:	xchg   BYTE PTR [edx-0x1d],al
  4082f6:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  4082fc:	inc    edx
  4082fd:	jecxz  0x408302
  4082ff:	xchg   BYTE PTR [edx-0x1d],al
  408302:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  408308:	inc    edx
  408309:	jecxz  0x40830e
  40830b:	xchg   BYTE PTR [edx-0x1d],al
  40830e:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  408314:	inc    edx
  408315:	jecxz  0x40831a
  408317:	xchg   BYTE PTR [edx-0x1d],al
  40831a:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  408320:	inc    edx
  408321:	jecxz  0x408326
  408323:	xchg   BYTE PTR [edx+0xa],al
  408326:	jmp    0xe94ac5b0
  40832b:	test   DWORD PTR [edx+0xa],eax
  40832e:	jmp    0xe94ac5b8
  408333:	test   DWORD PTR [edx+0xa],eax
  408336:	jmp    0xe94ac5c0
  40833b:	test   DWORD PTR [edx+0xa],eax
  40833e:	jmp    0xe94ac5c8
  408343:	test   DWORD PTR [edx+0xa],eax
  408346:	jmp    0xe94ac5d0
  40834b:	test   DWORD PTR [edx+0xa],eax
  40834e:	push   ebp
  40834f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408350:	sar    BYTE PTR [ecx+0x53],cl
  408353:	push   cs
  408354:	sar    DWORD PTR [ecx-0x6f],cl
  408357:	add    BYTE PTR [ebp+0x11],dl
  40835a:	dec    ebx
  40835b:	inc    ebx
  40835c:	mov    dl,0xd2
  40835e:	jns    0x4083b2
  408360:	mov    ds:0x22879d1,al
  408365:	arpl   WORD PTR [esi],ax
  408367:	pop    esi
  408368:	sbb    ch,ah
  40836a:	aaa    
  40836b:	mov    eax,0x3dd2e9c0
  408370:	cmc    
  408371:	shl    BYTE PTR [eax+0x75],1
  408374:	imul   esi,DWORD PTR [ebp-0x37],0xf2ec8733
  40837b:	les    edi,FWORD PTR [edi+0x5ace4d30]
  408381:	(bad)  
  408382:	retf   
  408383:	sub    edx,ebx
  408385:	add    esi,DWORD PTR [ecx+0x7a092aed]
  40838b:	mov    bl,BYTE PTR [ebx-0x58]
  40838e:	outs   dx,DWORD PTR ds:[esi]
  40838f:	xchg   ebx,edi
  408391:	mov    dl,BYTE PTR [eax-0x4a41d3a6]
  408397:	mov    edx,0xf48a3ed2
  40839c:	in     al,dx
  40839d:	xor    DWORD PTR [eax+eax*1+0x1],esp
  4083a1:	in     eax,0x58
  4083a3:	fild   WORD PTR [edx]
  4083a5:	mov    eax,ds:0xac7ff0ec
  4083aa:	repz jae 0x4083f5
  4083ad:	shl    BYTE PTR [eax-0x4f030edf],0xc3
  4083b4:	mov    ch,0xaf
  4083b6:	lods   eax,DWORD PTR ds:[esi]
  4083b7:	sub    DWORD PTR [ecx+0x5c],edx
  4083ba:	sti    
  4083bb:	mov    dh,0x0
  4083bd:	icebp  
  4083be:	sbb    al,0x18
  4083c0:	lahf   
  4083c1:	sub    eax,0x2e64aba6
  4083c6:	out    dx,al
  4083c7:	push   edi
  4083c8:	nop
  4083c9:	jbe    0x4083cd
  4083cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083cc:	sbb    BYTE PTR [edi-0x2de6b9e1],0x1b
  4083d3:	jge    0x408433
  4083d5:	(bad)  
  4083d6:	ja     0x408358
  4083d8:	aaa    
  4083d9:	cmc    
  4083da:	adc    eax,0x9de22816
  4083df:	retf   
  4083e0:	fwait
  4083e1:	pop    ebx
  4083e2:	push   ebp
  4083e3:	fbld   TBYTE PTR [edx]
  4083e5:	mov    bl,0xec
  4083e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083e8:	popa   
  4083e9:	inc    esi
  4083ea:	sub    ch,cl
  4083ec:	ret    
  4083ed:	mov    DWORD PTR [edx+0x27],ebx
  4083f0:	in     al,0xb7
  4083f2:	push   ebx
  4083f3:	sbb    BYTE PTR [ecx],dl
  4083f5:	fst    QWORD PTR [edx-0x47]
  4083f8:	and    DWORD PTR [edx-0x49],esi
  4083fb:	mov    bl,0xed
  4083fd:	xor    bh,BYTE PTR [ecx-0x44]
  408400:	xchg   edi,eax
  408401:	test   eax,0x559b4f61
  408406:	gs (bad) 
  408408:	mov    dl,0xda
  40840a:	jbe    0x4083d3
  40840c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40840d:	scas   al,BYTE PTR es:[edi]
  40840e:	pop    ds
  40840f:	and    dl,BYTE PTR [esi+eiz*8+0x355b340]
  408416:	dec    esi
  408417:	repnz bound eax,QWORD PTR [esi+0x660a449c]
  40841e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40841f:	in     eax,0xde
  408421:	add    BYTE PTR [ebx],ah
  408423:	pushf  
  408424:	pop    ebp
  408425:	jns    0x40842c
  408427:	adc    esp,DWORD PTR ds:0x8bdeae23
  40842d:	mov    ecx,0x7f09e852
  408432:	add    eax,0x4ca0ea71
  408437:	stos   DWORD PTR es:[edi],eax
  408438:	and    al,0x3
  40843a:	(bad)  
  40843b:	shl    bl,cl
  40843d:	push   ds
  40843e:	jo     0x408434
  408440:	and    al,0x41
  408442:	jae    0x4083d9
  408444:	pop    ecx
  408445:	je     0x4083c8
  408447:	(bad)  
  408448:	fisubr DWORD PTR [ebp-0x78]
  40844b:	push   0x42fa7782
  408450:	jecxz  0x40842f
  408452:	inc    ebp
  408453:	popf   
  408454:	dec    esp
  408455:	push   ds
  408456:	xor    BYTE PTR ds:0x3a6aa73d,dl
  40845c:	mov    eax,0x4f4f0692
  408461:	(bad)  
  408462:	out    dx,eax
  408463:	mov    eax,ss
  408465:	shl    bl,0xdb
  408468:	or     BYTE PTR [eax],al
  40846a:	xchg   ch,al
  40846c:	or     eax,0x85b8600
  408471:	add    BYTE PTR [esi-0x79fff70a],al
  408477:	xchg   esp,eax
  408478:	push   cs
  408479:	add    BYTE PTR [esi-0x2e0008c5],al
  40847f:	dec    BYTE PTR [eax]
  408481:	add    BYTE PTR [esi+0xe8f],al
  408487:	xchg   BYTE PTR [ebx],bh
  408489:	idiv   edi
  40848b:	mov    ecx,0x860008f6
  408490:	es push cs
  408492:	add    BYTE PTR [esi-0x79fe9cbe],al
  408498:	inc    edx
  408499:	push   cs
  40849a:	add    al,0x86
  40849c:	inc    edx
  40849d:	lea    eax,[ebx]
  40849f:	xchg   BYTE PTR [edx+0x63],al
  4084a2:	add    DWORD PTR [esi-0x79fbf9be],eax
  4084a8:	inc    edx
  4084a9:	test   BYTE PTR [ebx],al
  4084ab:	xchg   BYTE PTR [edx+0x63],al
  4084ae:	add    DWORD PTR [esi-0x79fbf1be],eax
  4084b4:	inc    edx
  4084b5:	push   ebx
  4084b6:	add    eax,DWORD PTR [esi+0x59fc8342]
  4084bc:	jmp    0x42c68887
  4084c1:	sub    al,0xa7
  4084c3:	aad    0x92
  4084c5:	icebp  
  4084c6:	pushf  
  4084c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084c8:	or     DWORD PTR [edi],0xffffffa8
  4084cb:	mov    bh,0x5f
  4084cd:	lock mov al,0x31
  4084d0:	jmp    0x5ee721eb
  4084d5:	mov    edi,0xc274a79a
  4084da:	mov    cl,0x9e
  4084dc:	and    ebx,0x3
  4084df:	xchg   BYTE PTR [edx-0x6b],al
  4084e2:	mov    bh,0xc4
  4084e4:	je     0x4084ac
  4084e6:	mov    ds:0x9b9f5f75,al
  4084eb:	add    BYTE PTR [edi+0x5f],dh
  4084ee:	ret    0xf1a7
  4084f1:	call   0x74853c8a
  4084f6:	xchg   BYTE PTR [edx-0x4f41a0ab],ah
  4084fc:	bound  esi,QWORD PTR [ebx+esi*4-0x4f]
  408500:	pusha  
  408501:	mov    ?,WORD PTR gs:[eax-0x4842bdac]
  408508:	push   esi
  408509:	outs   dx,DWORD PTR ds:[esi]
  40850a:	mov    ?,WORD PTR [ecx-0x78f584c2]
  408510:	jmp    0x408569
  408512:	js     0x408590
  408514:	in     al,0x74
  408516:	arpl   WORD PTR [esi-0x4],dx
  408519:	js     0x408593
  40851b:	dec    esi
  40851c:	loope  0x40857b
  40851e:	jns    0x40857a
  408520:	mov    al,BYTE PTR [edx+0xa]
  408523:	cmp    edx,esi
  408525:	pop    esp
  408526:	pop    edi
  408527:	cmp    ah,BYTE PTR [edi]
  408529:	jb     0x408589
  40852b:	push   ecx
  40852c:	xor    BYTE PTR [edi+0x6b],bl
  40852f:	dec    ebp
  408530:	pop    ecx
  408531:	je     0x40859e
  408533:	cmp    esi,DWORD PTR [esi]
  408535:	call   0x7266bb2e
  40853a:	inc    esi
  40853b:	push   cs
  40853c:	and    esp,DWORD PTR [esi+ecx*2+0x5]
  408540:	out    dx,al
  408541:	out    0xf4,eax
  408543:	sbb    eax,0xc4d7226
  408548:	test   BYTE PTR [ebx+0x62fa0d66],0x64
  40854f:	or     eax,0xa5f0e00
  408554:	mov    edi,0xc80a5e85
  408559:	test   DWORD PTR [esi+0xa],ebp
  40855c:	jmp    0xba4ac7e6
  408561:	test   DWORD PTR [edi+0xa],esi
  408564:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408565:	test   DWORD PTR [esi-0x7e7a61f6],ecx
  40856b:	or     bl,BYTE PTR [ebx-0x6af5827b]
  408571:	test   DWORD PTR [ebp+0xa],esi
  408574:	rol    BYTE PTR [ebp-0x7a64f59d],0x57
  40857b:	or     bl,BYTE PTR [edx-0x70f5a87b]
  408581:	test   DWORD PTR [esi+0xa],ebp
  408584:	lods   eax,DWORD PTR ds:[esi]
  408585:	test   DWORD PTR [edi+0x4416000a],ecx
  40858b:	add    BYTE PTR fs:[ebx],al
  40858e:	inc    esp
  40858f:	add    BYTE PTR gs:[eax],dh
  408592:	inc    ebx
  408593:	jns    0x408595
  408595:	mov    edi,0x63004443
  40859a:	ds push esi
  40859c:	add    BYTE PTR [esi+edi*1+0x7f],ch
  4085a0:	add    BYTE PTR ds:0x4200783e,ch
  4085a6:	ds fs add bl,al
  4085aa:	ds pop esp
  4085ac:	add    dl,al
  4085ae:	ds js  0x4085b1
  4085b1:	lods   al,BYTE PTR ds:[esi]
  4085b2:	arpl   WORD PTR ds:[eax],ax
  4085b5:	add    BYTE PTR [eax-0x34ff9bc2],ch
  4085bb:	ds pop edx
  4085bd:	add    BYTE PTR [ebp+0x3e],bh
  4085c0:	add    BYTE PTR gs:[ecx+0x4b00633e],al
  4085c7:	inc    ebx
  4085c8:	outs   dx,DWORD PTR ds:[esi]
  4085c9:	add    BYTE PTR [ebx+0x3e],bh
  4085cc:	arpl   WORD PTR [eax],ax
  4085ce:	cmp    al,0x43
  4085d0:	jle    0x4085d2
  4085d2:	fwait
  4085d3:	ds das 
  4085d5:	add    BYTE PTR [ebx+eax*2],ch
  4085d8:	or     al,BYTE PTR [eax]
  4085da:	fild   WORD PTR [edx+0x78]
  4085dd:	add    BYTE PTR [eax+0x43],cl
  4085e0:	ins    BYTE PTR es:[edi],dx
  4085e1:	add    BYTE PTR [esi+0x43],al
  4085e4:	data16 add BYTE PTR [edx+0x43],al
  4085e8:	inc    ebx
  4085e9:	add    dl,bl
  4085eb:	inc    edx
  4085ec:	imul   eax,DWORD PTR [eax],0xffffffc0
  4085ef:	inc    edx
  4085f0:	outs   dx,DWORD PTR ds:[esi]
  4085f1:	add    BYTE PTR [edi],cl
  4085f3:	inc    ebx
  4085f4:	imul   eax,DWORD PTR [eax],0x33
  4085f7:	inc    ebx
  4085f8:	bound  eax,QWORD PTR [eax]
  4085fa:	out    dx,eax
  4085fb:	inc    edx
  4085fc:	or     al,BYTE PTR [eax]
  4085fe:	out    dx,eax
  4085ff:	xchg   esi,eax
  408600:	sbb    DWORD PTR ds:[esi+0x6f35a4da],eax
  408607:	in     al,dx
  408608:	dec    esi
  408609:	sar    BYTE PTR [esi],1
  40860b:	add    eax,0xb3ed04f
  408610:	in     al,dx
  408611:	cmp    esp,esp
  408613:	fisttp QWORD PTR [eax]
  408615:	add    BYTE PTR [esi+0xfff706],al
  40861b:	mov    eax,ds:0x99ffee22
  408620:	(bad)  
  408621:	jp     0x408663
  408623:	xchg   ch,bl
  408625:	pusha  
  408626:	inc    eax
  408627:	xchg   BYTE PTR [ecx+0x61],dl
  40862a:	inc    eax
  40862b:	xchg   BYTE PTR [edi-0x38],bh
  40862e:	inc    ecx
  40862f:	xchg   BYTE PTR [edx-0x479bf9f],al
  408635:	pusha  
  408636:	inc    eax
  408637:	xchg   ah,dl
  408639:	pop    edi
  40863a:	inc    eax
  40863b:	xchg   BYTE PTR [edi],bl
  40863d:	enter  0x8641,0x22
  408641:	enter  0x8641,0x60
  408645:	addr16 inc eax
  408647:	xchg   bl,bl
  408649:	or     BYTE PTR [eax],al
  40864b:	xchg   bl,bl
  40864d:	or     BYTE PTR [eax],al
  40864f:	xchg   BYTE PTR [esi-0x4579bfc2],al
  408655:	or     DWORD PTR [ebx-0x5],ecx
  408658:	stos   BYTE PTR es:[edi],al
  408659:	sbb    eax,0x665a77d0
  40865e:	add    BYTE PTR [esi-0x6b],al
  408661:	inc    eax
  408662:	pop    edx
  408663:	ficomp DWORD PTR [edx-0x26]
  408666:	inc    ebp
  408667:	or     esp,DWORD PTR [eax+0x1f]
  40866a:	rcl    BYTE PTR [edi-0x59ff9330],1
  408670:	mov    ah,0x42
  408672:	sar    DWORD PTR [esi+ecx*2-0x1e],1
  408676:	test   bl,ch
  408678:	pop    ebp
  408679:	mov    ds:0x614277cf,eax
  40867e:	(bad)  
  40867f:	add    cl,bl
  408681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408682:	mov    ds:0xb1ae2c4b,eax
  408687:	test   BYTE PTR [esi],ch
  408689:	jmp    FWORD PTR [ecx+ebp*4-0x2f]
  40868d:	push   ebx
  40868e:	popa   
  40868f:	(bad)  
  408690:	mov    ecx,0x4c4ba3a5
  408695:	scas   al,BYTE PTR es:[edi]
  408696:	adc    eax,0x6ce802e8
  40869b:	test   eax,0xd56153d1
  4086a0:	cdq    
  4086a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086a2:	and    ecx,DWORD PTR [esp+ebp*1-0x52]
  4086a6:	mov    DWORD PTR [ebp-0x433a2286],edx
  4086ac:	push   esi
  4086ad:	push   ebx
  4086ae:	jns    0x40863e
  4086b0:	xchg   BYTE PTR [edx],al
  4086b2:	and    al,0x6b
  4086b4:	xlat   BYTE PTR ds:[ebx]
  4086b5:	icebp  
  4086b6:	mov    BYTE PTR [ebp-0x435a2286],dl
  4086bc:	ss push ebx
  4086be:	jns    0x40864e
  4086c0:	xchg   BYTE PTR [edx],al
  4086c2:	and    al,0x6b
  4086c4:	mov    bh,0xf1
  4086c6:	call   0x7b830cce
  4086cb:	xor    eax,0x273342c6
  4086d0:	mov    BYTE PTR [edx-0x48],0x29
  4086d4:	mov    BYTE PTR [edx+0x8],0x4
  4086d8:	mov    ds:0xb003f142,eax
  4086dd:	inc    edx
  4086de:	mov    BYTE PTR [ebx],0xaa
  4086e1:	inc    edx
  4086e2:	adc    BYTE PTR [eax+eax*1],al
  4086e5:	push   esp
  4086e6:	inc    edx
  4086e7:	or     eax,0xb742a204
  4086ec:	add    esi,DWORD PTR [edx+0x42]
  4086ef:	jecxz  0x4086f4
  4086f1:	xchg   BYTE PTR [edx-0x54],al
  4086f4:	sahf   
  4086f5:	jne    0x408773
  4086f7:	or     al,al
  4086f9:	adc    DWORD PTR [esi+0x43],ebx
  4086fc:	mov    edi,0x94785427
  408701:	and    al,0x71
  408703:	arpl   WORD PTR [esi-0x5e8c7d11],cx
  408709:	and    al,0x57
  40870b:	outs   dx,BYTE PTR ds:[esi]
  40870c:	jge    0x40872e
  40870e:	jle    0x408782
  408710:	jmp    0x9a4ac99a
  408715:	adc    BYTE PTR [ecx+0x4c],dh
  408718:	adc    BYTE PTR [ecx],0x5e
  40871b:	inc    ebx
  40871c:	jg     0x408705
  40871e:	push   ebx
  40871f:	js     0x408775
  408721:	jecxz  0x408793
  408723:	arpl   WORD PTR [esi-0x8],cx
  408726:	xor    BYTE PTR [ebx+0x21],0xe3
  40872a:	push   esi
  40872b:	outs   dx,BYTE PTR ds:[esi]
  40872c:	cmp    eax,0x1bf4e427
  408731:	cmp    BYTE PTR [edx+0x3175f92a],al
  408737:	and    al,0xf9
  408739:	jne    0x40876c
  40873b:	add    cl,ch
  40873d:	test   DWORD PTR [edx+0xa],eax
  408740:	cmp    ebx,DWORD PTR [eax]
  408742:	sub    BYTE PTR [edx],0xe9
  408745:	test   DWORD PTR [edx+0xa],eax
  408748:	pop    es
  408749:	add    BYTE PTR [edx-0x75e6f591],al
  40874f:	jo     0x40875b
  408751:	mov    ebp,0x50a1485
  408756:	mov    dl,BYTE PTR [esi+0xa]
  408759:	add    eax,0x190a4282
  40875e:	xor    al,0x85
  408760:	inc    ebp
  408761:	(bad)  
  408763:	push   ebp
  408764:	pop    esi
  408765:	stos   BYTE PTR es:[edi],al
  408766:	xor    eax,0xecca6591
  40876b:	pop    esi
  40876c:	jle    0x408757
  40876e:	test   DWORD PTR [edx+0xa],eax
  408771:	add    BYTE PTR [edi],bl
  408773:	adc    dl,BYTE PTR [ebx+eax*2-0x3d]
  408777:	int3   
  408778:	ja     0x4087df
  40877a:	fistp  QWORD PTR [edi]
  40877c:	or     al,BYTE PTR [eax]
  40877e:	call   DWORD PTR [ecx]
  408780:	push   esp
  408781:	push   eax
  408782:	lock retf 
  408784:	pusha  
  408785:	add    BYTE PTR [edi],cl
  408787:	adc    dl,BYTE PTR [edx+edx*2-0x6]
  40878b:	sahf   
  40878c:	push   0x5411ff00
  408791:	push   edi
  408792:	cmp    eax,0x9f6578c6
  408797:	aas    
  408798:	or     al,BYTE PTR [eax]
  40879a:	lahf   
  40879b:	aas    
  40879c:	or     al,BYTE PTR [eax]
  40879e:	scas   eax,DWORD PTR es:[edi]
  40879f:	aas    
  4087a0:	or     al,BYTE PTR [eax]
  4087a2:	scas   eax,DWORD PTR es:[edi]
  4087a3:	aas    
  4087a4:	or     al,BYTE PTR [eax]
  4087a6:	lahf   
  4087a7:	aas    
  4087a8:	or     eax,DWORD PTR [eax]
  4087aa:	outs   dx,DWORD PTR ds:[esi]
  4087ab:	fsub   DWORD PTR [eax+eax*1]
  4087ae:	add    BYTE PTR [ebp-0x2c],bh
  4087b1:	dec    ecx
  4087b2:	add    BYTE PTR [edx-0x25],bh
  4087b5:	dec    ecx
  4087b6:	add    BYTE PTR ds:0x5a0049db,cl
  4087bc:	fimul  DWORD PTR [ecx+0x0]
  4087bf:	mov    ebx,0x320049da
  4087c4:	aas    
  4087c5:	or     al,BYTE PTR [eax]
  4087c7:	pop    esi
  4087c8:	inc    eax
  4087c9:	push   cs
  4087ca:	add    BYTE PTR [ebp+0xc],al
  4087cd:	and    eax,DWORD PTR [eax]
  4087cf:	jg     0x40877c
  4087d1:	push   edi
  4087d2:	push   esp
  4087d3:	das    
  4087d4:	aas    
  4087d5:	or     al,BYTE PTR [eax]
  4087d7:	push   0x67005901
  4087dc:	adc    bl,BYTE PTR [ecx+0x50]
  4087df:	loopne 0x4087ce
  4087e1:	xor    DWORD PTR es:[edi],ebp
  4087e4:	aas    
  4087e5:	or     al,BYTE PTR [eax]
  4087e7:	ficomp WORD PTR [edi+0x9866567]
  4087ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087ee:	sub    al,0x52
  4087f0:	cli    
  4087f1:	sahf   
  4087f2:	data16 jae 0x4087ef
  4087f5:	xchg   ebx,eax
  4087f6:	lods   al,BYTE PTR fs:[esi]
  4087f8:	cmp    DWORD PTR [esi],ecx
  4087fa:	add    BYTE PTR [esi+0x706d9b98],al
  408800:	(bad)  
  408801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408802:	jae    0x408873
  408804:	int3   
  408805:	sahf   
  408806:	cmp    DWORD PTR [esi+0x556e9c98],esp
  40880c:	mov    dh,0xf1
  40880e:	or     DWORD PTR [esi+0x6bbace],eax
  408814:	sub    ecx,esp
  408816:	sahf   
  408817:	sub    eax,0xff9cb52a
  40881c:	test   eax,0x2773aa9b
  408821:	ret    0x549e
  408824:	adc    eax,0x2940b876
  408829:	jle    0x4087c7
  40882b:	jae    0x408862
  40882d:	test   DWORD PTR [eax+0xe88f068],edi
  408833:	add    BYTE PTR [esi-0x59ac4ad0],al
  408839:	jmp    0x408843
  40883b:	add    BYTE PTR [esi-0x45ad40c5],al
  408841:	dec    ebx
  408842:	push   cs
  408843:	add    BYTE PTR [esi+0x51ff9137],al
  408849:	xor    al,0xe4
  40884b:	dec    DWORD PTR [ecx+0x44]
  40884e:	in     eax,0xff
  408850:	inc    ecx
  408851:	inc    esp
  408852:	cli    
  408853:	(bad)  
  408854:	cmp    DWORD PTR [ebx+edi*8],esi
  408857:	push   DWORD PTR [ecx]
  408859:	xor    al,0xf8
  40885b:	jmp    FWORD PTR [ecx]
  40885d:	inc    esp
  40885e:	stc    
  40885f:	jmp    DWORD PTR [ecx]
  408861:	dec    eax
  408862:	xchg   ecx,eax
  408863:	jne    0x4087eb
  408865:	inc    edx
  408866:	xlat   BYTE PTR ds:[ebx]
  408867:	lahf   
  408868:	adc    edx,esp
  40886a:	fidiv  WORD PTR [ecx-0x4e351df7]
  408870:	add    edx,esp
  408872:	shl    BYTE PTR [ecx+0x1e0e1f9],0x0
  408879:	test   BYTE PTR [eax+eiz*8+0x1],al
  40887d:	test   BYTE PTR [ecx+eiz*8+0x1],al
  408881:	test   BYTE PTR [ecx+ebp*8-0x7],al
  408885:	(bad)  
  408886:	and    bh,cl
  408888:	stc    
  408889:	jg     0x4088d7
  40888b:	stc    
  40888c:	stc    
  40888d:	jg     0x4088db
  40888f:	nop
  408890:	mov    al,ds:0xaf936b37
  408895:	mov    ecx,0x34a19ce1
  40889a:	push   edx
  40889b:	enter  0x8603,0x42
  40889f:	mov    eax,ds:0x806b14a2
  4088a4:	jecxz  0x40883f
  4088a6:	loope  0x4088e1
  4088a8:	mov    cl,0x38
  4088aa:	jno    0x408908
  4088ac:	out    dx,al
  4088ad:	push   ebp
  4088ae:	jb     0x408901
  4088b0:	xchg   ebp,eax
  4088b1:	in     al,0x67
  4088b3:	push   eax
  4088b4:	mov    cl,0x79
  4088b6:	loope  0x4088b8
  4088b8:	add    al,0xab
  4088ba:	inc    edx
  4088bb:	xor    BYTE PTR [esp+eiz*4],al
  4088be:	inc    edx
  4088bf:	jecxz  0x4088c4
  4088c1:	xchg   BYTE PTR [edx+0x1],al
  4088c4:	add    al,0xa3
  4088c6:	inc    edx
  4088c7:	adc    BYTE PTR [esp+eiz*4],al
  4088ca:	inc    edx
  4088cb:	ret    
  4088cc:	add    esp,DWORD PTR [ebx-0x79fbefbe]
  4088d2:	inc    edx
  4088d3:	push   ds
  4088d4:	mov    cl,0xa2
  4088d6:	push   esp
  4088d7:	push   es
  4088d8:	xchg   esi,eax
  4088d9:	mov    ebx,0x980f30
  4088de:	popf   
  4088df:	inc    edx
  4088e0:	or     ch,BYTE PTR [edx]
  4088e2:	aam    0x65
  4088e4:	imul   esi,ebp,0xfffffff8
  4088e7:	test   DWORD PTR [edi+ebx*8-0x14],esp
  4088eb:	push   edx
  4088ec:	gs iret 
  4088ee:	lock gs fs ffree st(7)
  4088f3:	ins    BYTE PTR es:[edi],dx
  4088f4:	gs retf 0xe11e
  4088f8:	hlt    
  4088f9:	lods   eax,DWORD PTR ds:[esi]
  4088fa:	adc    BYTE PTR [esi+edi*2-0x45],dl
  4088fe:	adc    bl,BYTE PTR [edx+0x4f]
  408901:	(bad)  
  408902:	xor    ebp,DWORD PTR [edx+0x78]
  408905:	mov    esi,0x976f6df3
  40890a:	and    DWORD PTR [ebx+0x6c268e66],eax
  408910:	or     bl,BYTE PTR [edx-0x7bf5957b]
  408916:	test   DWORD PTR [esi+0xa],ebp
  408919:	xchg   ebp,eax
  40891a:	test   DWORD PTR ds:0x3085bb0a,edx
  408920:	or     cl,BYTE PTR [ebp+0x7d0a6e85]
  408926:	test   DWORD PTR [edx+0xa],eax
  408929:	and    ebx,esi
  40892b:	dec    ebp
  40892c:	add    BYTE PTR [ebp-0x21],al
  40892f:	ins    BYTE PTR es:[edi],dx
  408930:	sub    cl,BYTE PTR [ebx]
  408932:	outs   dx,DWORD PTR ds:[esi]
  408933:	push   ebp
  408934:	sub    ah,bl
  408936:	mov    ebp,DWORD PTR [ecx+0x6c]
  408939:	or     DWORD PTR [edi],ebx
  40893b:	pop    eax
  40893c:	arpl   WORD PTR [edx],di
  40893e:	push   cs
  40893f:	inc    eax
  408940:	sub    BYTE PTR [eax+eax*1],cl
  408943:	stc    
  408944:	and    DWORD PTR [edx],ebp
  408946:	inc    esi
  408947:	adc    eax,0x29c96554
  40894c:	loopne 0x408942
  40894e:	or     eax,DWORD PTR [edx-0x75e2f59f]
  408954:	inc    edx
  408955:	or     ch,BYTE PTR [ecx]
  408957:	out    dx,eax
  408958:	bound  eax,QWORD PTR fs:[eax]
  40895b:	cwde   
  40895c:	out    0x63,al
  40895e:	xor    WORD PTR [ecx],0x2500
  408963:	sbb    al,0x33
  408965:	add    BYTE PTR [edx+eax*4-0x6e],ah
  408969:	adc    al,0x2f
  40896b:	loope  0x408950
  40896d:	sub    ah,BYTE PTR ds:0xa05e62c
  408973:	out    dx,eax
  408974:	inc    ebx
  408975:	or     al,BYTE PTR [eax]
  408977:	clc    
  408978:	inc    ebx
  408979:	imul   eax,DWORD PTR [eax],0x28467f
  40897f:	add    BYTE PTR [esi+0x79],0x0
  408983:	lea    eax,[esi+0xa]
  408986:	add    BYTE PTR [esp+eax*2],ch
  408989:	gs add dl,bh
  40898c:	inc    ebx
  40898d:	pop    ecx
  40898e:	add    bh,ch
  408990:	inc    ebx
  408991:	outs   dx,DWORD PTR ds:[esi]
  408992:	add    BYTE PTR [esp+eax*2],cl
  408995:	or     al,BYTE PTR [eax]
  408997:	fimul  DWORD PTR [ebp+0x7]
  40899a:	or     bl,BYTE PTR [edi-0x10fff5bd]
  4089a0:	xor    al,BYTE PTR [eax]
  4089a2:	or     eax,0xa43a5
  4089a7:	add    dl,al
  4089a9:	mov    ebx,0x464cfff4
  4089ae:	outs   dx,DWORD PTR ds:[esi]
  4089af:	add    BYTE PTR [esi+eax*2+0x62],cl
  4089b3:	add    dl,ah
  4089b5:	inc    esi
  4089b6:	jle    0x4089b8
  4089b8:	ret    
  4089b9:	inc    esi
  4089ba:	add    BYTE PTR gs:[eax-0x70ff9bba],dh
  4089c1:	inc    esi
  4089c2:	js     0x4089c4
  4089c4:	mov    BYTE PTR [esi+0x7c],0x0
  4089c8:	mov    BYTE PTR [esi+0x66],0x0
  4089cc:	add    BYTE PTR [esi+0x6d],0x0
  4089d0:	add    BYTE PTR [esi+0xa],0x0
  4089d4:	xchg   dh,dl
  4089d6:	or     BYTE PTR [eax],al
  4089d8:	xchg   BYTE PTR [ebx+0x41],ah
  4089db:	inc    ecx
  4089dc:	xchg   BYTE PTR [edx+0x46],dh
  4089df:	inc    ecx
  4089e0:	xchg   BYTE PTR [esi+ecx*1],bh
  4089e3:	cmp    al,BYTE PTR [esi-0x79b2f6ff]
  4089e9:	cmp    eax,0x24863b0e
  4089ee:	push   cs
  4089ef:	dec    esi
  4089f0:	xchg   BYTE PTR [ebx-0x5f79b1f8],bl
  4089f6:	or     BYTE PTR [esi-0x7a],cl
  4089f9:	xchg   ecx,eax
  4089fa:	or     BYTE PTR [ebx],bh
  4089fc:	xchg   BYTE PTR [esi+ecx*1+0x3b],al
  408a00:	xchg   BYTE PTR [ebp+0x42865708],ch
  408a06:	push   cs
  408a07:	add    BYTE PTR [esi+0x413151],al
  408a0d:	xchg   BYTE PTR [ebp+0x73864148],cl
  408a13:	dec    eax
  408a14:	inc    ecx
  408a15:	xchg   BYTE PTR [eax+ecx*1+0x8bc8679],bl
  408a1c:	dec    esp
  408a1d:	xchg   BYTE PTR [edx+0x55867308],dh
  408a23:	or     DWORD PTR [esi-0x7a],edx
  408a26:	ret    0x6508
  408a29:	xchg   BYTE PTR [eax+0x9],bl
  408a2c:	xor    eax,DWORD PTR [esi-0x79fff1c5]
  408a32:	cs push cs
  408a34:	inc    esp
  408a35:	xchg   BYTE PTR [edx],ah
  408a37:	push   cs
  408a38:	inc    ebx
  408a39:	xchg   BYTE PTR [edi],bl
  408a3b:	push   cs
  408a3c:	imul   eax,DWORD PTR [esi-0x7991f172],0x86000e17
  408a46:	sub    BYTE PTR [esi],cl
  408a48:	imul   eax,DWORD PTR [esi-0x799af178],0xd9041142
  408a52:	inc    edx
  408a53:	ds add al,0xcf
  408a56:	inc    edx
  408a57:	xor    al,0x4
  408a59:	test   al,0x42
  408a5b:	(bad)  
  408a5d:	enter  0xf142,0x3
  408a61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a62:	inc    edx
  408a63:	push   es
  408a64:	add    al,0xab
  408a66:	inc    edx
  408a67:	jecxz  0x408a6c
  408a69:	xchg   BYTE PTR [edx+0x20],al
  408a6c:	add    al,0xa1
  408a6e:	inc    edx
  408a6f:	fld    QWORD PTR [ebx]
  408a71:	add    BYTE PTR [ebp+0x7203c442],dl
  408a77:	inc    edx
  408a78:	mov    BYTE PTR [ebx],0x51
  408a7b:	inc    edx
  408a7c:	retf   0x6003
  408a7f:	inc    edx
  408a80:	mov    DWORD PTR [ebx],0x3bc4259
  408a86:	inc    ebp
  408a87:	inc    edx
  408a88:	iret   
  408a89:	add    esp,DWORD PTR [edi+0x42]
  408a8c:	mov    al,0x3
  408a8e:	push   ebp
  408a8f:	inc    edx
  408a90:	jecxz  0x408a95
  408a92:	xchg   BYTE PTR [edx-0x40],al
  408a95:	add    esi,DWORD PTR [ebp+0x42]
  408a98:	rol    DWORD PTR [ebx],1
  408a9a:	jno    0x408ade
  408a9c:	fld    QWORD PTR [ebx]
  408a9e:	outs   dx,BYTE PTR ds:[esi]
  408a9f:	inc    edx
  408aa0:	jecxz  0x408aa5
  408aa2:	xchg   BYTE PTR [edx-0x70],al
  408aa5:	add    ebx,DWORD PTR [edi]
  408aa7:	inc    edx
  408aa8:	jo     0x408aad
  408aaa:	xor    eax,0x27038b42
  408aaf:	inc    edx
  408ab0:	inc    edi
  408ab1:	add    al,0x19
  408ab3:	inc    edx
  408ab4:	pop    esp
  408ab5:	add    al,0x86
  408ab7:	inc    edx
  408ab8:	and    eax,0x2e8fd1cb
  408abd:	add    al,0x86
  408abf:	inc    edx
  408ac0:	retf   0x6922
  408ac3:	inc    edx
  408ac4:	mov    al,ds:0xa004d3b
  408ac9:	lods   al,BYTE PTR ds:[esi]
  408aca:	prefetchw (bad)
  408acb:	or     eax,0x4285a0cc
  408ad0:	or     cl,BYTE PTR [ebx-0x5a180e3c]
  408ad6:	add    bh,cl
  408ad8:	add    ch,bl
  408ada:	test   al,0x7d
  408adc:	fcom   st(6)
  408ade:	popf   
  408adf:	jae    0x408aba
  408ae1:	shl    DWORD PTR [ebx-0x6a30038d],1
  408ae7:	jns    0x408ae1
  408ae9:	leave  
  408aea:	xchg   ecx,eax
  408aeb:	(bad)  
  408aec:	or     ebx,ebx
  408aee:	mov    ds:0xd209eec4,al
  408af3:	fstp   DWORD PTR [ecx+0x65]
  408af6:	ficomp WORD PTR [eax]
  408af8:	outs   dx,DWORD PTR ds:[esi]
  408af9:	cmp    eax,0xa551adb
  408afe:	test   eax,0xcf4f86cb
  408b03:	push   cs
  408b04:	pusha  
  408b05:	arpl   WORD PTR [ebx-0x599baad0],si
  408b0b:	lock push edx
  408b0d:	ja     0x408acf
  408b0f:	test   DWORD PTR [edx+0xa],eax
  408b12:	(bad)
  408b15:	inc    esp
  408b16:	pushf  
  408b17:	repnz fs dec ebx
  408b1a:	(bad)  
  408b1b:	imul   BYTE PTR [esi+0x78]
  408b1e:	pop    DWORD PTR [ebp-0x7c16f5be]
  408b24:	inc    esp
  408b25:	sbb    edi,DWORD PTR [esi+ebp*4-0x593bc0e8]
  408b2c:	sub    DWORD PTR [ebx],esi
  408b2e:	loope  0x408ad6
  408b30:	sub    ah,BYTE PTR [ecx]
  408b32:	pop    ss
  408b33:	fwait
  408b34:	daa    
  408b35:	cmp    eax,0xa4285f5
  408b3a:	clc    
  408b3b:	add    BYTE PTR [ebp+esi*1+0xe],dh
  408b3f:	sti    
  408b40:	jg     0x408bb1
  408b42:	pop    ecx
  408b43:	add    BYTE PTR [edi+0x6f010a47],bl
  408b49:	inc    eax
  408b4a:	or     al,BYTE PTR [eax]
  408b4c:	mov    edx,0xdab1a86e
  408b51:	pusha  
  408b52:	mov    eax,0xb5cccda4
  408b57:	mov    ebp,0xa8b668b1
  408b5c:	mov    ch,0x7e
  408b5e:	test   eax,0xbc629e89
  408b63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b64:	(bad)  
  408b65:	jl     0x408b0b
  408b67:	mov    eax,0xbabb54a9
  408b6c:	mov    ebx,0xab8a9cce
  408b71:	push   ebx
  408b72:	or     al,BYTE PTR [eax]
  408b74:	mov    WORD PTR [esi+ebp*4-0x49],gs
  408b78:	sbb    al,0x6b
  408b7a:	mov    esi,0xa8ca7ba2
  408b7f:	test   al,0x1
  408b81:	popa   
  408b82:	mov    bh,0xa0
  408b84:	imul   ebp,DWORD PTR [ecx+0xa],0x66a81d00
  408b8b:	push   0xffffffc3
  408b8d:	mov    edx,0xefd90063
  408b92:	cs xor ah,bh
  408b95:	dec    ecx
  408b96:	cmp    DWORD PTR ds:0x2cf5d5,esp
  408b9c:	ret    0x5db9
  408b9f:	cs add bl,al
  408ba2:	cli    
  408ba3:	pop    esi
  408ba4:	sub    ch,bh
  408ba6:	(bad)  
  408ba7:	push   edx
  408ba8:	add    BYTE PTR [ebx+ecx*4+0x7f78cdc8],cl
  408baf:	(bad)  
  408bb0:	lock add BYTE PTR [ebp+0x1dd7d9c3],0xea
  408bb8:	int3   
  408bb9:	outs   dx,DWORD PTR ds:[esi]
  408bba:	aas    
  408bbb:	or     al,BYTE PTR [eax]
  408bbd:	xchg   BYTE PTR [esi],bl
  408bbf:	cdq    
  408bc0:	ins    BYTE PTR es:[edi],dx
  408bc1:	fnsave [edx-0x6d]
  408bc4:	jne    0x408b8f
  408bc6:	push   ds
  408bc7:	scas   eax,DWORD PTR es:[edi]
  408bc8:	jb     0x408b50
  408bca:	ins    DWORD PTR es:[edi],dx
  408bcb:	jle    0x408b68
  408bcd:	push   cs
  408bce:	gs jo  0x408b5c
  408bd1:	repz pop edi
  408bd3:	jo     0x408b91
  408bd5:	adc    DWORD PTR [edx+0x7201a26a],ecx
  408bdb:	push   ebx
  408bdc:	xchg   ecx,eax
  408bdd:	sbb    eax,0xe9ad6d87
  408be2:	js     0x408c36
  408be4:	in     eax,0xfc
  408be6:	jnp    0x408c5f
  408be8:	sbb    bl,0x6d
  408beb:	test   DWORD PTR [eax-0x639a9c0c],ebx
  408bf1:	cld    
  408bf2:	fs je  0x408b8f
  408bf5:	in     al,dx
  408bf6:	call   0xf8c68c03
  408bfb:	mov    ds:0xadf67f63,eax
  408c00:	je     0x408c67
  408c02:	cmp    DWORD PTR [eax-0x1691ff9d],edx
  408c08:	or     BYTE PTR [eax],al
  408c0a:	xchg   BYTE PTR [edx+0x6f],bl
  408c0d:	mov    cl,0x25
  408c0f:	shl    BYTE PTR [ebx-0x4b],0xdc
  408c13:	pop    edx
  408c14:	pop    ebx
  408c15:	lods   al,BYTE PTR ds:[esi]
  408c16:	xchg   dl,dl
  408c18:	repz or eax,0x420dea8a
  408c1e:	mov    cs,edi
  408c20:	push   cs
  408c21:	add    BYTE PTR [esi-0x74eef51c],al
  408c27:	jmp    0xfe7f9b23
  408c2c:	or     eax,0xd606861f
  408c31:	daa    
  408c32:	push   edi
  408c33:	xchg   ecx,eax
  408c34:	fidiv  DWORD PTR [edi]
  408c36:	push   ss
  408c37:	inc    edx
  408c38:	pop    ss
  408c39:	in     al,dx
  408c3a:	mov    ebx,0x16837e42
  408c3f:	int3   
  408c40:	ins    DWORD PTR es:[edi],dx
  408c41:	mov    DWORD PTR [edx],ebx
  408c43:	mov    ch,0xab
  408c45:	(bad)  
  408c46:	adc    eax,0x8603e2ca
  408c4b:	inc    edx
  408c4c:	pusha  
  408c4d:	jae    0x408c5d
  408c4f:	or     eax,0x430a7a65
  408c54:	sub    al,0x9a
  408c56:	fldenv [ebp+0x4]
  408c59:	xchg   esp,eax
  408c5a:	loope  0x408cac
  408c5c:	and    esi,DWORD PTR [eax+esi*4-0x6169f6aa]
  408c63:	dec    esi
  408c64:	add    DWORD PTR [ebx-0x52e58d31],edx
  408c6a:	add    BYTE PTR [ebx-0x4861f79a],ch
  408c70:	xchg   dh,bh
  408c72:	cwde   
  408c73:	cdq    
  408c74:	push   0x7449c319
  408c79:	mov    eax,ds:0xb1765cc1
  408c7e:	mov    ds:0x3b58c6d,al
  408c83:	xchg   BYTE PTR [edx+0xf],al
  408c86:	jecxz  0x408ce9
  408c88:	fimul  DWORD PTR fs:[eax]
  408c8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c8c:	and    ecx,eax
  408c8e:	stos   DWORD PTR es:[edi],eax
  408c8f:	pusha  
  408c90:	push   edi
  408c91:	loope  0x408c7d
  408c93:	mov    ds:0x6dafb15b,eax
  408c98:	adc    edi,edx
  408c9a:	mov    al,ds:0xf4856c35
  408c9f:	jnp    0x408cbe
  408ca1:	and    DWORD PTR [eax+0x2ef3325],0xb0ad774a
  408cab:	imul   eax,DWORD PTR [ebp-0x5],0xa733db0
  408cb2:	retf   
  408cb3:	jl     0x408cfd
  408cb5:	push   ebx
  408cb6:	call   0x7d4e:0xfd1d1dd6
  408cbd:	push   ebp
  408cbe:	pop    ss
  408cbf:	add    BYTE PTR [edx+0xa],0x29
  408cc3:	inc    ebx
  408cc4:	lea    edx,[edx-0x15]
  408cc7:	cmp    al,BYTE PTR [edx-0x26b4e3b1]
  408ccd:	hlt    
  408cce:	test   DWORD PTR [eax],0xfd2f113d
  408cd4:	test   DWORD PTR [edx+0xa],eax
  408cd7:	jmp    0x4a4acf61
  408cdc:	loopne 0x408c82
  408cde:	lods   eax,DWORD PTR ds:[esi]
  408cdf:	mov    dh,0x7c
  408ce1:	les    ecx,FWORD PTR [ebx-0x2e49fc85]
  408ce7:	push   esi
  408ce8:	lahf   
  408ce9:	stos   DWORD PTR es:[edi],eax
  408cea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ceb:	mov    ch,0x56
  408ced:	or     ebx,ebx
  408cef:	xchg   ebx,eax
  408cf0:	imul   esp,DWORD PTR [edi-0xa6cae80],0xccfe62c1
  408cfa:	xchg   BYTE PTR [edi+0x3cd69f63],cl
  408d00:	jb     0x408c92
  408d02:	mov    esp,0xfea75f97
  408d07:	jae    0x408d5e
  408d09:	cwde   
  408d0a:	mov    eax,0xaca96e8e
  408d0f:	cmp    al,0x4e
  408d11:	or     DWORD PTR [ebp-0x595e9673],ecx
  408d17:	jge    0x408d48
  408d19:	sahf   
  408d1a:	test   al,0x44
  408d1c:	or     eax,0x5e259eb3
  408d21:	cdq    
  408d22:	cld    
  408d23:	cmp    eax,0x38d70779
  408d28:	aas    
  408d29:	mov    dl,0xf9
  408d2b:	add    BYTE PTR [ecx-0x77],dh
  408d2e:	int3   
  408d2f:	aam    0x68
  408d31:	pop    ecx
  408d32:	pop    DWORD PTR [ecx-0x56a18700]
  408d38:	lock sbb eax,0x1c96e31e
  408d3e:	je     0x408d2e
  408d40:	popf   
  408d41:	cli    
  408d42:	push   edi
  408d43:	xchg   ebp,eax
  408d44:	add    BYTE PTR [ebx+eiz*1-0x1c],cl
  408d48:	out    0x40,al
  408d4a:	mov    WORD PTR cs:[ebp-0x1b0dd429],cs
  408d51:	dec    esi
  408d52:	retf   0xc1e4
  408d55:	and    edx,DWORD PTR [edi]
  408d57:	jmp    0x408d1c
  408d59:	jmp    0xc226:0x4ac5dd80
  408d60:	aam    0x47
  408d62:	xchg   edi,edx
  408d64:	retf   
  408d65:	pop    ds
  408d66:	inc    esp
  408d67:	or     al,BYTE PTR [eax]
  408d69:	pushf  
  408d6a:	push   edx
  408d6b:	xchg   esp,eax
  408d6c:	xchg   esi,eax
  408d6d:	sar    BYTE PTR [ebp+0x5c07fdfb],0x82
  408d74:	xchg   esp,eax
  408d75:	scas   al,BYTE PTR es:[edi]
  408d76:	cmp    DWORD PTR [edx-0x409db24a],edx
  408d7c:	mov    ds:0xb59c6617,al
  408d81:	add    BYTE PTR [edx-0x4b],ch
  408d84:	test   al,0x17
  408d86:	aas    
  408d87:	or     al,BYTE PTR [eax]
  408d89:	and    eax,0x295f5b9b
  408d8e:	or     al,0x34
  408d90:	xor    al,0xde
  408d92:	xchg   ecx,eax
  408d93:	dec    ecx
  408d94:	pop    ebp
  408d95:	test   DWORD PTR [edi],0x1a00785f
  408d9b:	lahf   
  408d9c:	push   ebp
  408d9d:	arpl   ax,bp
  408d9f:	mov    dh,0x70
  408da1:	pop    esi
  408da2:	sbb    al,0xad
  408da4:	imul   esi,DWORD PTR [edi-0x7a],0xffffffc7
  408da8:	cwde   
  408da9:	jmp    FWORD PTR [ecx+0x592ce2fb]
  408daf:	loope  0x408dab
  408db1:	and    ah,BYTE PTR [edx-0x6a]
  408db4:	shl    DWORD PTR [edx],cl
  408db6:	push   ecx
  408db7:	xchg   esi,eax
  408db8:	add    ch,BYTE PTR [ebx]
  408dba:	addr16 std 
  408dbc:	les    ebx,FWORD PTR [edi]
  408dbe:	out    0xe9,eax
  408dc0:	or     BYTE PTR [eax],al
  408dc2:	xchg   BYTE PTR [esi+0x83ed23d],ah
  408dc8:	fmul   QWORD PTR es:[ebp-0x55]
  408dcc:	xor    al,0xdc
  408dce:	inc    esi
  408dcf:	xchg   ebx,eax
  408dd0:	sbb    eax,0x43a438d4
  408dd5:	fild   WORD PTR [esi+0x11a48f59]
  408ddb:	jmp    0x1ac68de8
  408de0:	mov    bh,0x48
  408de2:	fcom   DWORD PTR [ebx]
  408de4:	mov    bl,0x4c
  408de6:	int    0x1e
  408de8:	mov    edx,0xc80fc755
  408ded:	pop    ebp
  408dee:	enter  0xcf1e,0x43
  408df2:	ret    0xb13a
  408df5:	jne    0x408d8a
  408df7:	(bad)  
  408df8:	test   eax,0xaf1fa86d
  408dfd:	push   0xb5947400
  408e02:	push   esi
  408e03:	ins    BYTE PTR es:[edi],dx
  408e04:	test   al,0xbb
  408e06:	pop    ebx
  408e07:	dec    ebp
  408e08:	stos   DWORD PTR es:[edi],eax
  408e09:	retf   
  408e0a:	pop    ebx
  408e0b:	inc    esi
  408e0c:	add    dh,ch
  408e0e:	jmp    ecx
  408e10:	das    
  408e11:	fisub  DWORD PTR [edi+edx*4]
  408e14:	(bad)  
  408e15:	fisub  DWORD PTR [ecx]
  408e17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e18:	shl    DWORD PTR [eax-0x4e2d62d4],cl
  408e1e:	pop    esp
  408e1f:	xor    BYTE PTR [edx-0x2c],al
  408e22:	aam    0x60
  408e24:	and    DWORD PTR [eax-0x31f08971],0xffffffce
  408e2b:	ds pop esp
  408e2d:	fcmovnu st,st(7)
  408e2f:	pop    esi
  408e30:	pop    ss
  408e31:	(bad)  
  408e32:	ret    
  408e33:	cdq    
  408e34:	(bad)  
  408e35:	loop   0x408e3a
  408e37:	xchg   BYTE PTR [edx-0x2a],al
  408e3a:	int    0x69
  408e3c:	and    BYTE PTR [edx+0x573d8ec9],bl
  408e42:	add    cl,BYTE PTR [edi+ecx*2+0x718a03e0]
  408e49:	(bad)  
  408e4a:	aam    0xb0
  408e4c:	test   BYTE PTR [esi+edi*8],ah
  408e4f:	jnp    0x408eba
  408e51:	aam    0xfa
  408e53:	in     eax,0x2e
  408e55:	shl    al,cl
  408e57:	(bad)  
  408e58:	xor    cl,ah
  408e5a:	jmp    ebp
  408e5c:	push   0x63b6a908
  408e61:	pop    ss
  408e62:	xchg   esi,eax
  408e63:	add    BYTE PTR [edx+0x1c],ah
  408e66:	int    0x92
  408e68:	and    bl,BYTE PTR fs:[ebx]
  408e6b:	xchg   ebx,eax
  408e6c:	sahf   
  408e6d:	push   ecx
  408e6e:	fcomp  DWORD PTR [ecx-0x6bf2cf8b]
  408e74:	push   edx
  408e75:	push   ebx
  408e76:	sbb    BYTE PTR [ebp-0x37d3a159],bl
  408e7c:	shl    DWORD PTR ds:0x3d93ce2a,0xf0
  408e83:	or     al,BYTE PTR [ebx+0x42]
  408e86:	jecxz  0x408e8b
  408e88:	xchg   BYTE PTR [edx-0x20],al
  408e8b:	add    DWORD PTR [edi+0x44],edi
  408e8e:	call   0xe4781a56
  408e93:	(bad)  
  408e94:	(bad)  
  408e96:	mov    ebx,0xa655ca6
  408e9b:	shl    ch,0x6b
  408e9e:	or     ch,BYTE PTR [ecx+ebp*8+0x18966257]
  408ea5:	pop    ecx
  408ea6:	imul   edx,DWORD PTR [eax-0x31acb2e6],0x15
  408ead:	jp     0x408edd
  408eaf:	mov    edi,0xc64861b2
  408eb4:	stos   BYTE PTR es:[edi],al
  408eb5:	xor    eax,0x61f8c16b
  408eba:	js     0x408ea5
  408ebc:	test   DWORD PTR [edx+0xa],eax
  408ebf:	jae    0x408ee4
  408ec1:	pop    ebx
  408ec2:	jbe    0x408f1a
  408ec4:	pop    ss
  408ec5:	imul   ecx,DWORD PTR [edx],0x33740010
  408ecb:	add    al,0xe7
  408ecd:	imul   edi,DWORD PTR [ebp+0xa],0xffffff9d
  408ed1:	int3   
  408ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ed3:	or     DWORD PTR [ecx-0x1d],esp
  408ed6:	sahf   
  408ed7:	test   eax,0xdf9fae87
  408edc:	(bad)  
  408edd:	fisubr DWORD PTR [eax-0x62507660]
  408ee3:	out    0x65,eax
  408ee5:	lods   eax,DWORD PTR ds:[esi]
  408ee6:	aad    0xb7
  408ee8:	pop    ecx
  408ee9:	xlat   BYTE PTR ds:[ebx]
  408eea:	xchg   esp,eax
  408eeb:	out    dx,eax
  408eec:	cdq    
  408eed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408eee:	fisttp DWORD PTR [ecx]
  408ef0:	cmp    esp,esi
  408ef2:	push   ebp
  408ef3:	jae    0x408ef3
  408ef5:	mul    BYTE PTR [edi+ebp*2]
  408ef8:	clc    
  408ef9:	cs pop edx
  408efb:	outs   dx,DWORD PTR ds:[esi]
  408efc:	imul   ch
  408efe:	gs addr16 or ah,bh
  408f02:	pop    ebx
  408f03:	pusha  
  408f04:	(bad)  
  408f05:	das    
  408f06:	bound  esp,QWORD PTR [ebp-0x2d]
  408f09:	fisub  WORD PTR [ebp+0x73]
  408f0c:	add    esp,DWORD PTR [edi]
  408f0e:	bound  ebp,QWORD PTR [ebp-0x46]
  408f11:	(bad)  
  408f12:	xor    DWORD PTR [edx+0x0],ecx
  408f15:	jecxz  0x408f57
  408f17:	or     al,BYTE PTR [eax]
  408f19:	push   ebp
  408f1a:	pop    ebp
  408f1b:	lods   eax,DWORD PTR ds:[esi]
  408f1c:	mov    ds:0xbfe05c02,eax
  408f21:	add    al,0x34
  408f23:	mov    al,ds:0xe8744ea8
  408f28:	scas   eax,DWORD PTR es:[edi]
  408f29:	dec    esp
  408f2a:	jnp    0x408ee1
  408f2c:	mov    bl,0x0
  408f2e:	xchg   edi,eax
  408f2f:	ja     0x408ef0
  408f31:	mov    ch,0x3d
  408f33:	ins    DWORD PTR es:[edi],dx
  408f34:	mov    ebx,0xac714da2
  408f39:	mov    edx,0xc9be1c
  408f3e:	arpl   WORD PTR [eiz*8-0x4cd67b0b],bp
  408f45:	stc    
  408f46:	fs and edi,edx
  408f49:	cmc    
  408f4a:	pop    eax
  408f4b:	sub    BYTE PTR [ebx-0x1bd7b70b],bh
  408f51:	stc    
  408f52:	push   eax
  408f53:	sbb    al,0xe7
  408f55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f56:	outs   dx,DWORD PTR ds:[esi]
  408f57:	inc    eax
  408f58:	or     al,BYTE PTR [eax]
  408f5a:	jbe    0x408fa1
  408f5c:	sbb    eax,DWORD PTR [ecx+ebx*2+0x3c]
  408f60:	add    al,0x15
  408f62:	daa    
  408f63:	(bad)  
  408f64:	inc    ebp
  408f65:	add    DWORD PTR [ecx],esi
  408f67:	aad    0xe
  408f69:	sbb    ah,BYTE PTR [ecx]
  408f6b:	cwde   
  408f6c:	hlt    
  408f6d:	jmp    FWORD PTR [edx+edx*4+0x49]
  408f71:	push   edi
  408f72:	xchg   edx,eax
  408f73:	add    DWORD PTR [ecx+0x40],eax
  408f76:	bound  edx,QWORD PTR [ebx-0x6fabbeb0]
  408f7c:	inc    ebp
  408f7d:	pop    ebx
  408f7e:	xchg   BYTE PTR [ecx],al
  408f80:	pop    edx
  408f81:	pop    eax
  408f82:	xchg   edx,eax
  408f83:	add    DWORD PTR [esi+0x0],ebx
  408f86:	add    bl,BYTE PTR [ecx-0x7b]
  408f89:	cdq    
  408f8a:	or     al,0xc8
  408f8c:	xchg   DWORD PTR [esi-0x6d78a77a],ecx
  408f92:	add    BYTE PTR [ecx],dl
  408f94:	pop    edi
  408f95:	jb     0x408f1a
  408f97:	repz les edi,FWORD PTR [ebx-0x61]
  408f9b:	add    edx,ebp
  408f9d:	or     BYTE PTR [eax],al
  408f9f:	xchg   BYTE PTR [eax-0x7e],ah
  408fa2:	cdq    
  408fa3:	adc    DWORD PTR [edi-0x42e16a85],edi
  408fa9:	jo     0x408f42
  408fab:	xadd   DWORD PTR [ebx-0x62],esp
  408faf:	add    ecx,DWORD PTR [edi+0x5e]
  408fb2:	mov    ecx,DWORD PTR [esi]
  408fb4:	fs push cs
  408fb6:	add    BYTE PTR [esi+0x286fa9c7],al
  408fbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fbd:	xchg   edx,eax
  408fbe:	jge    0x408fcb
  408fc0:	dec    edi
  408fc1:	scas   eax,DWORD PTR es:[edi]
  408fc2:	jnp    0x408fc1
  408fc4:	arpl   dx,cx
  408fc6:	imul   edi,ebx,0x86000e78
  408fcc:	sti    
  408fcd:	sub    eax,0x27a164f4
  408fd2:	out    0x5e,eax
  408fd4:	popf   
  408fd5:	sub    esi,edi
  408fd7:	pop    esp
  408fd8:	cwde   
  408fd9:	sbb    eax,0x8e959fe
  408fde:	add    BYTE PTR [esi-0x65fe1c07],al
  408fe4:	jecxz  0x408fdf
  408fe6:	adc    BYTE PTR [eax-0x78fcf109],cl
  408fec:	iret   
  408fed:	pop    es
  408fee:	add    BYTE PTR [esi+0xe9e805d],al
  408ff4:	xchg   DWORD PTR [edx+ebx*4+0x0],edi
  408ff8:	or     ah,BYTE PTR [esi-0x78]
  408ffb:	lods   al,BYTE PTR ds:[esi]
  408ffc:	push   es
  408ffd:	jns    0x409075
  408fff:	cwde   
  409000:	push   es
  409001:	pop    ebp
  409002:	or     DWORD PTR [eax],eax
  409004:	xchg   BYTE PTR [eax+ebx*8+0xa42b524],cl
  40900b:	loopne 0x408fb3
  40900d:	or     edx,DWORD PTR ds:0x82490dc
  409013:	fndisi(8087 only) 
  409015:	rcl    cl,cl
  409017:	lea    esp,[ebp+ecx*2-0x54]
  40901b:	mov    eax,ds:0x9fcc6662
  409020:	pop    esp
  409021:	push   esi
  409022:	xchg   esp,eax
  409023:	call   0x4234:0xa2b85c30
  40902a:	or     eax,0xd3387dfd
  40902f:	or     BYTE PTR [edi+edi*1+0x2f8a0aeb],al
  409036:	fild   DWORD PTR [esi+eax*4]
  409039:	xor    ah,bl
  40903b:	add    eax,DWORD PTR [esi+0x30c1ae42]
  409041:	or     DWORD PTR [eax-0x678b2c4d],0xe370cbc7
  40904b:	add    eax,DWORD PTR [esi-0x1e6896be]
  409051:	push   eax
  409052:	aaa    
  409053:	sahf   
  409054:	jmp    0x4090b7
  409056:	dec    ebx
  409057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409058:	in     al,0x42
  40905a:	add    al,ah
  40905c:	add    BYTE PTR [esi-0x6d3319d7],dl
  409062:	and    al,0x9
  409064:	out    0x74,eax
  409066:	es jecxz 0x40906c
  409069:	xchg   BYTE PTR [edx-0x66],al
  40906c:	pop    ss
  40906d:	push   esp
  40906e:	rol    BYTE PTR [ecx+ebp*1+0x3b8bde2d],cl
  409075:	sbb    esp,esp
  409077:	je     0x4090a0
  409079:	adc    eax,ebp
  40907b:	loop   0x409080
  40907d:	xchg   BYTE PTR [edx-0x2e],al
  409080:	(bad)  
  409081:	pop    edi
  409082:	dec    ecx
  409083:	or     bl,bh
  409085:	test   BYTE PTR [ecx+ebx*1-0x2a],0xe4
  40908a:	sub    eax,0x428a0612
  40908f:	or     cl,BYTE PTR [ebx+0x78]
  409092:	jmp    0x409090
  409094:	dec    eax
  409095:	xchg   ecx,eax
  409096:	(bad)  
  409098:	inc    edx
  409099:	stos   BYTE PTR es:[edi],al
  40909a:	int3   
  40909b:	or     DWORD PTR [edi+0x6c],edx
  40909e:	mul    esi
  4090a0:	inc    esp
  4090a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090a2:	(bad)  
  4090a4:	dec    ebx
  4090a5:	mov    ds:0x9e48e1ef,al
  4090aa:	shl    ecx,cl
  4090ac:	adc    ebx,DWORD PTR [ecx+0x327d0a42]
  4090b2:	mov    edx,0xbf0b7ba7
  4090b7:	sub    BYTE PTR [esi+0x1d],0xb0
  4090bb:	cdq    
  4090bc:	pop    eax
  4090bd:	adc    esp,DWORD PTR [ecx+0x699d]
  4090c3:	ror    DWORD PTR [edx+0xa428a66],0x58
  4090ca:	icebp  
  4090cb:	(bad)  
  4090cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090cd:	xchg   BYTE PTR [edi],al
  4090cf:	ret    
  4090d0:	lea    edi,[ebx-0x27]
  4090d3:	mov    ch,0x96
  4090d5:	jne    0x4090e6
  4090d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090d8:	xchg   ecx,eax
  4090d9:	arpl   sp,dx
  4090db:	ret    0x7287
  4090de:	push   es
  4090df:	inc    edx
  4090e0:	or     dl,BYTE PTR [esi-0x651cfa72]
  4090e6:	jbe    0x4090c6
  4090e8:	leave  
  4090e9:	xchg   ecx,eax
  4090ea:	je     0x4090de
  4090ec:	rol    ebp,0x85
  4090ef:	inc    edx
  4090f0:	or     cl,BYTE PTR [eax]
  4090f2:	loope  0x409149
  4090f4:	push   ebp
  4090f5:	or     al,0x1
  4090f7:	imul   ebp,DWORD PTR [edi-0x2],0xffffffe3
  4090fb:	shl    ah,1
  4090fd:	add    BYTE PTR [esi],bh
  4090ff:	call   0xdd0db041
  409104:	and    BYTE PTR [edx],ch
  409106:	aaa    
  409107:	imul   DWORD PTR [esp]
  40910a:	int3   
  40910b:	inc    esp
  40910c:	or     al,BYTE PTR [eax]
  40910e:	add    ebp,DWORD PTR [esp+ebx*4-0x46]
  409112:	adc    eax,0xa3a869
  409117:	inc    ebp
  409118:	or     al,BYTE PTR [eax]
  40911a:	fimul  WORD PTR [eax+0x29]
  40911d:	push   cs
  40911e:	lods   eax,DWORD PTR ds:[esi]
  40911f:	inc    esi
  409120:	push   es
  409121:	sbb    eax,0x1044e6
  409126:	add    dh,cl
  409128:	test   eax,0xaee87975
  40912d:	jo     0x40917e
  40912f:	push   ss
  409130:	mov    dl,0x7d
  409132:	jno    0x409144
  409134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409135:	js     0x409137
  409137:	jae    0x40914e
  409139:	retf   0x62c2
  40913c:	or     bl,0x0
  40913f:	das    
  409140:	pop    esi
  409141:	mov    DWORD PTR [ebx+eiz*1-0x2f7825a5],eax
  409148:	push   ss
  409149:	and    BYTE PTR [edi-0x763a7a6b],0x2b
  409150:	jl     0x40912d
  409152:	shr    ch,cl
  409154:	jge    0x409120
  409156:	aam    0x18
  409158:	push   esp
  409159:	int    0x98
  40915b:	out    0x4c,al
  40915d:	or     al,BYTE PTR [eax]
  40915f:	pusha  
  409160:	int    0xe
  409162:	pop    es
  409163:	pop    edi
  409164:	inc    esp
  409165:	or     al,BYTE PTR [eax]
  409167:	adc    ch,BYTE PTR [ecx-0x43]
  40916a:	mov    eax,ds:0xa3b57faa
  40916f:	adc    DWORD PTR [ebx-0x58],esi
  409172:	mov    esi,0xa441f
  409177:	xchg   bh,ah
  409179:	(bad)  
  40917a:	jle    0x409114
  40917c:	inc    edi
  40917d:	or     al,0x0
  40917f:	xchg   BYTE PTR [eax],bl
  409181:	mov    ah,0x44
  409183:	mov    bl,0xd9
  409185:	or     BYTE PTR [eax],al
  409187:	xchg   BYTE PTR [edi],ch
  409189:	mov    dh,0x53
  40918b:	add    BYTE PTR [eax-0x79fff727],dh
  409191:	je     0x4091a5
  409193:	out    dx,al
  409194:	fstp   st(1)
  409196:	or     BYTE PTR [eax],al
  409198:	xchg   BYTE PTR [ebx-0x2056ddf7],dl
  40919e:	in     eax,0xb
  4091a0:	jl     0x40918d
  4091a2:	aad    0x35
  4091a4:	ins    DWORD PTR es:[edi],dx
  4091a5:	out    dx,al
  4091a6:	in     al,0x13
  4091a8:	xchg   ebp,eax
  4091a9:	hlt    
  4091aa:	inc    DWORD PTR [ecx]
  4091ac:	test   cl,bl
  4091ae:	or     BYTE PTR [eax],al
  4091b0:	xchg   BYTE PTR [ebp-0x2493cc1d],dl
  4091b6:	cli    
  4091b7:	sbb    al,BYTE PTR [esi-0x3830d190]
  4091bd:	cmp    BYTE PTR [edx],ah
  4091bf:	out    0xa4,eax
  4091c1:	into   
  4091c2:	adc    eax,0x8d9ddfc
  4091c7:	add    BYTE PTR [esi-0x44ca1a59],al
  4091cd:	std    
  4091ce:	repz push ds
  4091d0:	mov    ch,0x36
  4091d2:	or     eax,0x8d9830c
  4091d7:	add    BYTE PTR [esi+0x68d6eee],al
  4091dd:	stos   BYTE PTR es:[edi],al
  4091de:	pop    edi
  4091df:	mov    al,ds:0x8b314
  4091e4:	xchg   ah,al
  4091e6:	adc    al,0xa6
  4091e8:	sbb    DWORD PTR [ecx+esi*1-0x3],ebp
  4091ec:	sub    eax,0xe61ef9
  4091f1:	loope  0x409234
  4091f3:	push   ecx
  4091f4:	pop    ecx
  4091f5:	and    eax,0xef0d579b
  4091fa:	iret   
  4091fb:	bound  eax,QWORD PTR [ebp+0x187fcc3b]
  409201:	sbb    al,0xe6
  409203:	fwait
  409204:	sub    esp,ecx
  409206:	mov    al,ds:0x96383f67
  40920b:	mov    BYTE PTR ds:0x2ba1fbcd,ch
  409211:	enter  0x7af0,0x76
  409215:	adc    eax,DWORD PTR [edi+ecx*4]
  409218:	add    eax,DWORD PTR [esi-0x520f56be]
  40921e:	aas    
  40921f:	jmp    0x409229
  409221:	jb     0x40926b
  409223:	ror    cl,1
  409225:	jl     0x40926c
  409227:	in     eax,0xa
  409229:	pop    ebp
  40922a:	sbb    BYTE PTR [ecx-0x62f6cf00],0xfa
  409231:	cdq    
  409232:	xor    DWORD PTR [eax],ecx
  409234:	rcl    BYTE PTR [edx+0x71],0xe3
  409238:	mov    esp,DWORD PTR [ecx+0x179b93ce]
  40923e:	push   edi
  40923f:	test   BYTE PTR [edi-0x3b597bc0],ah
  409245:	push   ss
  409246:	pusha  
  409247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409248:	rcr    cl,0x7c
  40924b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40924c:	leave  
  40924d:	jns    0x40921d
  40924f:	into   
  409250:	or     cl,BYTE PTR [edx+0x1f73b]
  409256:	xchg   ecx,eax
  409257:	(bad)  
  409259:	inc    DWORD PTR [edi-0x79fc1cc7]
  40925f:	inc    edx
  409260:	pushf  
  409261:	jb     0x409260
  409263:	mov    eax,0x8eef6c6b
  409268:	push   ecx
  409269:	je     0x40928c
  40926b:	(bad)  
  40926c:	or     DWORD PTR [ecx+0x3],edx
  40926f:	inc    ebx
  409270:	or     bh,bl
  409272:	xor    BYTE PTR [ebx],bh
  409274:	or     bh,dh
  409276:	cs ds dec eax
  409279:	enter  0x2b88,0x1
  40927d:	and    BYTE PTR [ecx],ah
  40927f:	cmp    al,0x9
  409281:	lock test DWORD PTR [edx+0xa],eax
  409285:	and    al,0xe0
  409287:	addr16 or BYTE PTR [bp+si],dl
  40928b:	dec    ebp
  40928c:	daa    
  40928d:	and    BYTE PTR es:[ebx+0x67],bl
  409291:	jmp    0xf4ad51b
  409296:	daa    
  409297:	adc    ebp,DWORD PTR [ecx+ebp*8-0x7b]
  40929b:	inc    edx
  40929c:	or     ch,BYTE PTR [ebp+0x3f]
  40929f:	mov    ebp,DWORD PTR [ecx+0xa4285e9]
  4092a5:	mov    esp,edi
  4092a7:	lods   al,BYTE PTR ds:[esi]
  4092a8:	xchg   DWORD PTR [ebx+0x7c],ebx
  4092ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092ac:	nop
  4092ad:	pop    ebp
  4092ae:	add    al,0x43
  4092b0:	or     al,dh
  4092b2:	jecxz  0x409331
  4092b4:	dec    ecx
  4092b5:	scas   al,BYTE PTR es:[edi]
  4092b6:	cmc    
  4092b7:	or     eax,0xf500895c
  4092bc:	je     0x409314
  4092be:	mov    ds:0xab5e7adf,eax
  4092c3:	aam    0x4b
  4092c5:	jp     0x409277
  4092c7:	mov    BYTE PTR [edi+0x3f37a246],0x69
  4092ce:	test   al,0x36
  4092d0:	jl     0x4092d3
  4092d2:	nop
  4092d3:	sbb    DWORD PTR [ecx+esi*2-0x17],ecx
  4092d7:	test   DWORD PTR [edx+0xa],eax
  4092da:	rcr    DWORD PTR [eax-0x695e3a13],1
  4092e0:	std    
  4092e1:	sar    BYTE PTR [esi+0xd8ea76],cl
  4092e7:	sbb    bl,BYTE PTR [eax]
  4092e9:	int3   
  4092ea:	fcomi  st,st(2)
  4092ec:	adc    bh,bh
  4092ee:	(bad)  
  4092ef:	jmp    0x1c045674
  4092f4:	adc    BYTE PTR [ebx-0x3c7e2613],cl
  4092fa:	add    BYTE PTR [eax+0x786a6b9a],cl
  409300:	lods   eax,DWORD PTR ds:[esi]
  409301:	js     0x40937d
  409303:	dec    ebx
  409304:	mov    bh,0x2a
  409306:	bound  esi,QWORD PTR [eax-0x54]
  409309:	pop    edi
  40930a:	push   0xffffff86
  40930c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40930d:	jb     0x409370
  40930f:	out    dx,eax
  409310:	inc    eax
  409311:	or     al,BYTE PTR [eax]
  409313:	retf   
  409314:	rcl    DWORD PTR ds:0xc3fdf04,1
  40931a:	dec    esp
  40931b:	mov    esp,ebx
  40931d:	sbb    DWORD PTR [edx],edx
  40931f:	add    ch,ch
  409321:	rcr    DWORD PTR [esi],cl
  409323:	add    BYTE PTR ds:0xa1dac980,dh
  409329:	adc    dl,dl
  40932b:	xchg   edx,eax
  40932c:	inc    edi
  40932d:	test   ebp,eax
  40932f:	int3   
  409330:	xchg   ebx,eax
  409331:	push   cs
  409332:	ret    0x789a
  409335:	or     dh,0xcf
  409338:	outs   dx,BYTE PTR ds:[esi]
  409339:	or     ah,cl
  40933b:	int3   
  40933c:	inc    esi
  40933d:	adc    cl,BYTE PTR [edx]
  40933f:	add    BYTE PTR [ebx],ah
  409341:	jbe    0x409300
  409343:	mov    esp,0xfca4682f
  409348:	and    DWORD PTR [esi-0x4e],esi
  40934b:	mov    esp,0xb7b9c578
  409350:	int    0x7d
  409352:	stos   BYTE PTR es:[edi],al
  409353:	lods   eax,DWORD PTR ds:[esi]
  409354:	mov    esi,0x8600b47d
  409359:	div    BYTE PTR [ebx]
  40935b:	ss jnp 0x40933c
  40935e:	ss aas 
  409360:	xchg   BYTE PTR [ebx],bh
  409362:	fisub  WORD PTR [edx+ebp*4]
  409365:	enter  0x3dc6,0x89
  409369:	xor    dl,ah
  40936b:	cmp    DWORD PTR [eax+0x44],ebp
  40936e:	in     eax,dx
  40936f:	mov    BYTE PTR fs:[edx-0x1e],al
  409373:	cs pop ebp
  409375:	(bad)  
  409377:	and    eax,0xcf44277
  40937c:	push   0xe
  40937e:	or     ah,BYTE PTR [edi]
  409380:	mov    dl,0xee
  409382:	std    
  409383:	adc    DWORD PTR [eax],eax
  409385:	mov    edx,esi
  409387:	or     al,BYTE PTR [ecx]
  409389:	xchg   ch,dl
  40938b:	cli    
  40938c:	push   cs
  40938d:	xchg   BYTE PTR [ebp+0x1a],ah
  409390:	div    eax
  409392:	dec    edx
  409393:	pop    DWORD PTR [eax]
  409395:	xchg   BYTE PTR ds:0xf95a66a9,bh
  40939b:	test   DWORD PTR [ebp-0x4e],edi
  40939e:	cdq    
  40939f:	test   eax,0xa1fb526e
  4093a4:	jo     0x4093ff
  4093a6:	(bad)  [eax]
  4093a8:	add    BYTE PTR [esi+0xd878d69],al
  4093ae:	dec    ecx
  4093af:	ins    DWORD PTR es:[edi],dx
  4093b0:	scas   eax,DWORD PTR es:[edi]
  4093b1:	xchg   BYTE PTR [eax-0x5fbea442],ah
  4093b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093b8:	dec    ebx
  4093b9:	dec    esp
  4093ba:	xchg   ebp,eax
  4093bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093bc:	jp     0x4093d4
  4093be:	ret    
  4093bf:	and    BYTE PTR [esi+ebx*1-0x3d],0x99
  4093c4:	push   ebp
  4093c5:	xor    ch,BYTE PTR [esi-0x6ac2ae4d]
  4093cb:	leave  
  4093cc:	push   ecx
  4093cd:	in     al,0x49
  4093cf:	stos   BYTE PTR es:[edi],al
  4093d0:	(bad)  
  4093d1:	jns    0x409374
  4093d3:	fwait
  4093d4:	jb     0x4093c4
  4093d6:	push   ebp
  4093d7:	stos   BYTE PTR es:[edi],al
  4093d8:	imul   ebp,DWORD PTR [esi-0x296dcabe],0xe7a55d64
  4093e2:	adc    ch,BYTE PTR [esi]
  4093e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093e5:	out    0x63,eax
  4093e7:	jecxz  0x4093ec
  4093e9:	add    BYTE PTR [esi-0x2e0207be],al
  4093ef:	jge    0x40942b
  4093f1:	add    al,0x86
  4093f3:	inc    edx
  4093f4:	sbb    al,0xb8
  4093f6:	iret   
  4093f7:	jns    0x409417
  4093f9:	rcl    ah,0x6b
  4093fc:	cmp    edi,DWORD PTR [ecx-0x46c2d13a]
  409402:	mov    dl,0x42
  409404:	mov    ch,0xa
  409406:	or     al,0xd8
  409408:	xchg   edx,eax
  409409:	adc    cl,BYTE PTR [esi]
  40940b:	retf   0x1288
  40940e:	shl    ebx,cl
  409410:	xchg   DWORD PTR [esi],edx
  409412:	loopne 0x4093e1
  409414:	inc    edi
  409415:	sub    ebx,ebp
  409417:	fdivr  DWORD PTR [edx+ebx*1-0x17]
  40941b:	inc    ecx
  40941c:	stc    
  40941d:	fist   DWORD PTR [edx+eax*2+0x7636cbb0]
  409424:	jmp    0x509c:0xa3427d07
  40942b:	push   eax
  40942c:	retf   
  40942d:	add    eax,DWORD PTR [esi+0x2a9c9d42]
  409433:	push   edi
  409434:	enter  0x34a4,0x1c
  409438:	mov    ds:0xac5b28a5,eax
  40943d:	mov    eax,ds:0xb8d2482f
  409442:	sub    al,0x60
  409444:	call   0x4cd4:0x884f2a8a
  40944b:	dec    ecx
  40944c:	jno    0x4093e0
  40944e:	add    ch,dh
  409450:	push   ecx
  409451:	scas   eax,DWORD PTR es:[edi]
  409452:	mov    dl,0x9e
  409454:	sbb    cl,BYTE PTR [edx]
  409456:	jmp    0x2c355e73
  40945b:	out    dx,al
  40945c:	jmp    0x770a:0x428279ca
  409463:	cdq    
  409464:	leave  
  409465:	loopne 0x409440
  409467:	out    0x8c,eax
  409469:	mov    bl,0xc6
  40946b:	fild   DWORD PTR [edx+0xa]
  40946e:	repnz inc eax
  409470:	inc    edx
  409471:	or     ch,cl
  409473:	test   DWORD PTR [edx+0xa],eax
  409476:	cmp    bl,BYTE PTR [ebx]
  409478:	pop    edx
  409479:	jge    0x409464
  40947b:	test   DWORD PTR [edx+0xa],eax
  40947e:	call   0xc86fa4d4
  409483:	xor    esp,DWORD PTR [eax]
  409485:	cmp    ch,bh
  409487:	sbb    edx,DWORD PTR [ebx]
  409489:	xor    BYTE PTR [ebp-0x32c7e6cb],bh
  40948f:	fisubr DWORD PTR ds:0x29dcce1c
  409495:	and    BYTE PTR [ebp+edi*4-0x474dffcb],dh
  40949c:	pop    es
  40949d:	and    al,BYTE PTR ds:0xe51e208b
  4094a3:	and    DWORD PTR [edi],0x12eafd10
  4094a9:	sbb    eax,0x1937dfe3
  4094ae:	out    dx,al
  4094af:	mov    edx,0xea3809
  4094b4:	mov    dh,0x39
  4094b6:	push   es
  4094b7:	in     eax,dx
  4094b8:	mov    cl,0x2c
  4094ba:	aas    
  4094bb:	cmc    
  4094bc:	test   DWORD PTR [edx+eax*1-0x78],eax
  4094c0:	loop   0x4094d0
  4094c2:	outs   dx,BYTE PTR ds:[esi]
  4094c3:	jmp    0xac4ad74d
  4094c8:	out    dx,al
  4094c9:	bound  ebp,QWORD PTR [esi+0x7d]
  4094cc:	lds    ebx,FWORD PTR [eax+0x64]
  4094cf:	add    BYTE PTR [edx],dl
  4094d1:	lahf   
  4094d2:	popa   
  4094d3:	jle    0x409544
  4094d5:	inc    ebp
  4094d6:	or     al,BYTE PTR [eax]
  4094d8:	fwait
  4094d9:	and    eax,0x2a5bf8e1
  4094de:	icebp  
  4094df:	in     eax,dx
  4094e0:	inc    esp
  4094e1:	or     ah,dh
  4094e3:	out    0x3e,eax
  4094e5:	sub    al,bh
  4094e7:	out    dx,eax
  4094e8:	ss sub ecx,ebx
  4094eb:	aad    0x32
  4094ed:	daa    
  4094ee:	imul   dl
  4094f0:	inc    esi
  4094f1:	xor    ch,bl
  4094f3:	mov    ah,0x11
  4094f5:	sub    ebp,ebx
  4094f7:	cld    
  4094f8:	fistp  WORD PTR [eax]
  4094fa:	ret    0xf0de
  4094fd:	cmp    dl,cl
  4094ff:	rcr    esi,0x7d
  409502:	int3   
  409503:	(bad)  [edi]
  409505:	inc    ebp
  409506:	or     al,BYTE PTR [eax]
  409508:	sub    bl,dh
  40950a:	pop    ds
  40950b:	sub    DWORD PTR [edi],edi
  40950d:	in     eax,dx
  40950e:	and    bl,BYTE PTR [ecx]
  409510:	xchg   DWORD PTR [esi],edi
  409512:	or     al,BYTE PTR [eax]
  409514:	imul   esp,DWORD PTR [ecx-0x5e],0x6a3c00aa
  40951b:	mov    ds:0xee270c00,eax
  409520:	idiv   DWORD PTR [ecx+eiz*1]
  409523:	(bad)  
  409524:	loop   0x4094b9
  409526:	sub    ecx,0xf72339e8
  40952c:	loopne 0x40955f
  40952e:	and    ah,al
  409530:	fiadd  DWORD PTR [ebp+0x24]
  409533:	stc    
  409534:	in     eax,0x71
  409536:	cmp    esp,esp
  409538:	mov    ebx,0xf3e42096
  40953d:	mov    BYTE PTR [edx],dl
  40953f:	int    0xd1
  409541:	addr16 xor ah,al
  409544:	into   
  409545:	inc    esp
  409546:	test   cl,cl
  409548:	lds    eax,FWORD PTR [esi-0x3a38eddc]
  40954e:	push   ds
  40954f:	cmp    eax,0x425e86c0
  409554:	lods   eax,DWORD PTR ds:[esi]
  409555:	cmp    DWORD PTR [eax],ecx
  409557:	adc    bl,BYTE PTR [eax+0x6b7b1e]
  40955d:	xchg   BYTE PTR [ebx],dh
  40955f:	cs in  eax,dx
  409561:	pusha  
  409562:	in     al,0x12
  409564:	std    
  409565:	ins    DWORD PTR es:[edi],dx
  409566:	xchg   DWORD PTR [edx],esi
  409568:	jmp    0xf95f:0xf414e967
  40956f:	adc    edi,eax
  409571:	push   ebp
  409572:	lea    edx,ds:0x1a892afa
  409578:	out    0xf4,eax
  40957a:	test   eax,0x2c00e711
  40957f:	mov    al,ds:0xab3ece23
  409584:	cs into 
  409586:	inc    ecx
  409587:	cdq    
  409588:	or     eax,0xa9398600
  40958d:	jno    0x409531
  40958f:	daa    
  409590:	scas   al,BYTE PTR es:[edi]
  409591:	pusha  
  409592:	jns    0x4095d8
  409594:	fidivr DWORD PTR [edx+edi*2]
  409597:	xor    al,0x99
  409599:	imul   ebx,DWORD PTR [edi+0x39],0xffffff98
  40959d:	sub    BYTE PTR [ebx-0x32],dh
  4095a0:	lods   eax,DWORD PTR ds:[esi]
  4095a1:	jo     0x4095fb
  4095a3:	loope  0x409531
  4095a5:	and    BYTE PTR [eax-0x1],ah
  4095a8:	test   eax,0xbb854c6d
  4095ad:	push   ecx
  4095ae:	jb     0x409586
  4095b0:	clc    
  4095b1:	adc    BYTE PTR [ecx-0x7cea1d71],bl
  4095b7:	int    0xde
  4095b9:	dec    ebp
  4095ba:	aas    
  4095bb:	cdq    
  4095bc:	mov    edx,0xc9ac5077
  4095c1:	inc    esp
  4095c2:	mov    WORD PTR [edx-0x4],es
  4095c5:	mov    ecx,0xaeb5813a
  4095ca:	inc    ebx
  4095cb:	push   0xffffff98
  4095cd:	loop   0x409633
  4095cf:	xadd   bh,bl
  4095d2:	stos   DWORD PTR es:[edi],eax
  4095d3:	and    al,0x70
  4095d5:	xlat   BYTE PTR ds:[ebx]
  4095d6:	mov    ebx,0xf88db709
  4095db:	dec    esp
  4095dc:	ja     0x409576
  4095de:	in     eax,dx
  4095df:	jnp    0x409589
  4095e1:	add    eax,DWORD PTR [eax]
  4095e3:	xchg   BYTE PTR [edx-0x45],al
  4095e6:	cmp    bh,BYTE PTR [esi+esi*8]
  4095e9:	int3   
  4095ea:	cmp    edi,DWORD PTR [edi]
  4095ec:	out    0xaf,eax
  4095ee:	addr16 repz jmp 0xe58ad5b3
  4095f5:	stos   DWORD PTR es:[edi],eax
  4095f6:	inc    edx
  4095f7:	pop    es
  4095f8:	cmc    
  4095f9:	lods   al,BYTE PTR ds:[esi]
  4095fa:	inc    edx
  4095fb:	inc    esi
  4095fc:	add    esp,DWORD PTR [ebx-0x6b06bd83]
  409602:	ds dec esp
  409604:	dec    ebx
  409606:	or     al,0x11
  409608:	mov    DWORD PTR [ebx+0x53da1a14],0x5a9fd14b
  409612:	pop    esi
  409613:	and    BYTE PTR [edx-0x3a13f576],ch
  409619:	pushf  
  40961a:	or     ebp,edi
  40961c:	(bad)  
  40961d:	jg     0x409676
  40961f:	and    edx,eax
  409621:	outs   dx,DWORD PTR ds:[esi]
  409622:	sbb    al,0xdb
  409624:	loop   0x4095b2
  409626:	xor    BYTE PTR [edi-0x1397825c],0xb9
  40962d:	cwde   
  40962e:	ins    DWORD PTR es:[edi],dx
  40962f:	and    ch,BYTE PTR [eax-0x5ae68092]
  409635:	push   0x6cb4c785
  40963a:	add    BYTE PTR [esi],0xc3
  40963d:	or     DWORD PTR [ecx+0x34],ebp
  409640:	std    
  409641:	mov    edi,0x83c40728
  409646:	push   edi
  409647:	add    BYTE PTR [edx-0x30],cl
  40964a:	out    dx,al
  40964b:	xor    eax,0x59a2985b
  409650:	daa    
  409651:	mov    edx,0x8fd64aab
  409656:	out    dx,eax
  409657:	push   ss
  409658:	int3   
  409659:	cwde   
  40965a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40965b:	cmp    eax,0x35b3a0c3
  409660:	mov    edx,DWORD PTR [edx-0x5940c554]
  409666:	mov    ebp,0x5d7e2d3d
  40966b:	ss pop ds
  40966d:	bound  ebx,QWORD PTR [ebp+0x35]
  409670:	push   cs
  409671:	je     0x4096cb
  409673:	cli    
  409674:	sub    DWORD PTR [ecx],esi
  409676:	pop    esi
  409677:	xor    eax,0xe9416a42
  40967c:	cmp    ah,BYTE PTR [eax]
  40967e:	sub    bl,BYTE PTR [ecx]
  409680:	test   DWORD PTR [ebx+0x72da2f5e],0x736224d
  40968a:	addr16 sbb eax,0x15625803
  409690:	loop   0x4096e9
  409692:	xor    al,BYTE PTR [edi]
  409694:	adc    eax,0x81b7663
  409699:	pusha  
  40969a:	popa   
  40969b:	jmp    DWORD PTR [edi+ebx*2]
  40969e:	adc    ecx,DWORD PTR [di]
  4096a1:	pop    eax
  4096a2:	je     0x4096a9
  4096a4:	es pop ss
  4096a6:	jnp    0x4096a4
  4096a8:	sar    BYTE PTR ds:0xd700f72b,cl
  4096ae:	sub    eax,0x6d1dbe15
  4096b3:	sbb    bh,cl
  4096b5:	test   eax,0xeb001bc5
  4096ba:	xchg   edx,eax
  4096bb:	push   0x64
  4096bd:	rcl    esi,cl
  4096bf:	push   es
  4096c0:	sbb    BYTE PTR [ebp-0x57fce22b],dh
  4096c6:	mov    DWORD PTR [ecx+0x11],ecx
  4096c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096ca:	cli    
  4096cb:	and    ch,BYTE PTR [edi+ebp*4]
  4096ce:	in     eax,dx
  4096cf:	sub    dh,BYTE PTR [ebp+edi*4-0xc]
  4096d3:	sub    eax,0x2ede6138
  4096d8:	xor    BYTE PTR [edi-0x1c],cl
  4096db:	das    
  4096dc:	adc    DWORD PTR [edi],edi
  4096de:	jecxz  0x40971c
  4096e0:	das    
  4096e1:	cmp    eax,esi
  4096e3:	cmp    eax,0x67ad0c23
  4096e8:	and    al,0x43
  4096ea:	adc    esi,eax
  4096ec:	fcmovne st,st(7)
  4096ee:	mov    esi,0x821fb0bb
  4096f3:	fadd   st,st(4)
  4096f5:	add    DWORD PTR [ecx+0x44f4d7cb],eax
  4096fb:	xchg   ebp,ebx
  4096fd:	jecxz  0x409704
  4096ff:	aam    0xd8
  409701:	jecxz  0x409713
  409703:	aam    0x88
  409705:	stc    
  409706:	jg     0x4096e3
  409708:	int3   
  409709:	in     eax,dx
  40970a:	sub    eax,esp
  40970c:	cld    
  40970d:	sti    
  40970e:	das    
  40970f:	in     eax,0xc5
  409711:	add    bl,dh
  409713:	ss out dx,al
  409715:	repz sbb eax,0x4cf7eb24
  40971b:	cmp    ch,ch
  40971d:	loope  0x409790
  40971f:	adc    ch,dh
  409721:	in     al,0xf9
  409723:	pop    ds
  409724:	scas   eax,DWORD PTR es:[edi]
  409725:	stos   BYTE PTR es:[edi],al
  409726:	dec    esi
  409727:	and    ebp,eax
  409729:	out    dx,al
  40972a:	push   ecx
  40972b:	pop    eax
  40972c:	fadd   st(5),st
  40972e:	cmp    ebp,DWORD PTR [edi]
  409730:	or     al,BYTE PTR [eax]
  409732:	xchg   dh,ch
  409734:	mov    ebx,0x8db485a
  409739:	add    BYTE PTR [esi+0x16a674bc],al
  40973f:	gs jg  0x4096c6
  409742:	push   cs
  409743:	arpl   WORD PTR [edi+0x0],sp
  409746:	xchg   BYTE PTR [ebx],ah
  409748:	push   ss
  409749:	cmc    
  40974a:	fwait
  40974b:	and    eax,0x3dccfb18
  409750:	or     DWORD PTR [eax],eax
  409752:	xchg   BYTE PTR [ebp*1+0x4b184cc2],cl
  409759:	int3   
  40975a:	pop    ebp
  40975b:	push   ebx
  40975c:	xor    cl,bl
  40975e:	inc    ebx
  40975f:	fimul  DWORD PTR [eax]
  409761:	add    BYTE PTR [esi+0x26b66e75],al
  409767:	rol    DWORD PTR [ecx-0x5c],1
  40976a:	xchg   BYTE PTR [edx+ebp*2-0x4e],dl
  40976e:	es mov eax,0x55f7ad68
  409774:	push   eax
  409775:	mov    dl,0x0
  409777:	jmp    0xa21f:0x86bc55b9
  40977e:	outs   dx,DWORD PTR ds:[esi]
  40977f:	imul   esi,DWORD PTR [edx-0x68],0x8d96573
  409786:	add    BYTE PTR [esi-0x509462f9],al
  40978c:	retf   0x48e2
  40978f:	jne    0x40975d
  409791:	mov    dh,0xf
  409793:	test   ebx,edx
  409795:	repz adc edi,DWORD PTR [edx+edi*1-0x2c]
  40979a:	and    DWORD PTR [esi+0x7c778134],eax
  4097a0:	sbb    dh,BYTE PTR [ebx+0xe283d55]
  4097a6:	add    BYTE PTR [esi+0x2bb44012],al
  4097ac:	inc    ebx
  4097ad:	jnp    0x40981b
  4097af:	adc    al,dl
  4097b1:	pusha  
  4097b2:	jnp    0x4097b4
  4097b4:	lods   eax,DWORD PTR ds:[esi]
  4097b5:	mov    BYTE PTR [eax+0x15],dh
  4097b8:	mov    ah,0x7c
  4097ba:	outs   dx,BYTE PTR ds:[esi]
  4097bb:	xchg   BYTE PTR [edx+0xf],al
  4097be:	(bad)  
  4097bf:	jbe    0x4097db
  4097c1:	out    0xe8,al
  4097c3:	pop    eax
  4097c4:	sub    ebp,edx
  4097c6:	stc    
  4097c7:	jne    0x40980b
  4097c9:	dec    esp
  4097ca:	and    BYTE PTR [ebx+ebx*8+0x9a3e34],ch
  4097d1:	es xor eax,0x5f4742b9
  4097d7:	das    
  4097d8:	xchg   edx,eax
  4097d9:	jge    0x40975c
  4097db:	add    BYTE PTR [edx],bh
  4097dd:	mov    al,0x51
  4097df:	ins    BYTE PTR es:[edi],dx
  4097e0:	cs mov dl,0x78
  4097e3:	push   esp
  4097e4:	or     BYTE PTR [eax+ebp*2+0x59af1175],ah
  4097eb:	add    al,0x86
  4097ed:	inc    edx
  4097ee:	inc    edi
  4097ef:	(bad)  
  4097f0:	iret   
  4097f1:	inc    ebx
  4097f2:	adc    esi,ebx
  4097f4:	mov    ds:0x10787342,al
  4097f9:	mov    bh,0x53
  4097fb:	ds push edi
  4097fd:	repnz loop 0x409803
  409800:	xchg   BYTE PTR [edx+0x63],al
  409803:	push   0x7bfa708
  409808:	(bad)
  40980d:	inc    edx
  40980e:	aas    
  40980f:	lea    ecx,[esp+ebx*2+0x52a78a0d]
  409816:	pop    es
  409817:	xchg   esp,eax
  409818:	jae    0x409873
  40981a:	hlt    
  40981b:	add    eax,DWORD PTR [esi-0x2ed965be]
  409821:	in     al,0xa5
  409823:	sub    bh,BYTE PTR [ecx+0x5f450a41]
  409829:	lods   eax,DWORD PTR ds:[esi]
  40982a:	cwde   
  40982b:	jmp    0xea4adab5
  409830:	mov    ebx,0xad083d16
  409835:	adc    BYTE PTR [eax-0xb],ah
  409838:	aad    0x8
  40983a:	and    al,0xe9
  40983c:	test   DWORD PTR [edx+0xa],eax
  40983f:	clc    
  409840:	add    BYTE PTR [ecx-0x6525f0dc],ch
  409846:	ret    0xff5c
  409849:	stos   DWORD PTR es:[edi],eax
  40984a:	sub    al,0x14
  40984c:	jecxz  0x4097f6
  40984e:	ret    0x29f4
  409851:	dec    edi
  409852:	out    dx,al
  409853:	ret    
  409854:	sub    eax,0x200a0144
  409859:	fwait
  40985a:	sar    cl,0x3
  40985d:	add    eax,0xffffffe1
  409860:	inc    ecx
  409861:	mov    edx,0x78fffebb
  409866:	mov    esp,0x428503f5
  40986b:	or     ch,BYTE PTR [ecx]
  40986d:	jae    0x409857
  40986f:	int3   
  409870:	retf   
  409871:	jb     0x40981b
  409873:	loope  0x409846
  409875:	imul   ebp,DWORD PTR [ecx-0x5466405c],0x4282cdee
  40987f:	or     ch,BYTE PTR [esi]
  409881:	or     eax,0x13444a63
  409886:	and    esp,DWORD PTR [ebp+0x46]
  409889:	in     al,0x21
  40988b:	and    bl,BYTE PTR [eax]
  40988d:	cld    
  40988e:	das    
  40988f:	push   0x1d533122
  409894:	jmp    0xd54adb1e
  409899:	fld    st(1)
  40989b:	hlt    
  40989c:	jp     0x4098a5
  40989e:	ret    0xc2
  4098a1:	ss inc edi
  4098a3:	or     al,BYTE PTR [eax]
  4098a5:	add    BYTE PTR [eax+esi*2],ah
  4098a8:	(bad)  
  4098aa:	sub    eax,0xefccca69
  4098af:	inc    ebp
  4098b0:	or     al,BYTE PTR [eax]
  4098b2:	push   esi
  4098b3:	sbb    al,0xa3
  4098b5:	scas   al,BYTE PTR es:[edi]
  4098b6:	jmp    0x4098c5
  4098b8:	jmp    0xa765a247
  4098bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098be:	cmp    bl,BYTE PTR [ebx]
  4098c0:	stos   DWORD PTR es:[edi],eax
  4098c1:	add    dl,dh
  4098c3:	out    dx,eax
  4098c4:	pop    ebp
  4098c5:	push   edx
  4098c6:	fild   WORD PTR [eax]
  4098c8:	adc    al,0x76
  4098ca:	std    
  4098cb:	out    0x59,eax
  4098cd:	pop    ebx
  4098ce:	(bad)  
  4098cf:	out    dx,al
  4098d0:	push   ebp
  4098d1:	add    DWORD PTR [ebx-0x26bdb507],esp
  4098d7:	lock aas 
  4098d9:	push   edi
  4098da:	inc    edx
  4098db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098dc:	sub    BYTE PTR [eax],al
  4098de:	retf   
  4098df:	or     BYTE PTR [edx-0x4edf3960],dh
  4098e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098e6:	mov    bl,0x8
  4098e8:	test   al,0xf3
  4098ea:	outs   dx,DWORD PTR ds:[esi]
  4098eb:	inc    ebp
  4098ec:	or     al,BYTE PTR [eax]
  4098ee:	sub    BYTE PTR [ebx-0x4c73dbd7],ah
  4098f4:	or     BYTE PTR [eax+edx*2],al
  4098f7:	stos   BYTE PTR es:[edi],al
  4098f8:	pop    ss
  4098f9:	or     BYTE PTR ds:0x590c1cac,bh
  4098ff:	mov    esp,0xbf7443ff
  409904:	add    eax,DWORD PTR [ebx]
  409906:	pop    ds
  409907:	mov    ebx,0x6d00080c
  40990c:	test   BYTE PTR [ecx+0x4d],0x23
  409910:	jmp    0xd4b99909
  409915:	jns    0x40998b
  409917:	sbb    al,0x82
  409919:	pop    eax
  40991a:	push   esp
  40991b:	xchg   BYTE PTR [eax-0x4d],dh
  40991e:	inc    edx
  40991f:	pop    esi
  409920:	ins    DWORD PTR es:[edi],dx
  409921:	mov    cl,0x47
  409923:	push   edx
  409924:	imul   esp,DWORD PTR [ecx-0x4a6387a6],0xbe663b41
  40992e:	pop    ebx
  40992f:	aaa    
  409930:	push   ecx
  409931:	neg    DWORD PTR [edx]
  409933:	jae    0x4098d4
  409935:	aam    0x28
  409937:	mov    ds:0x3571a99c,al
  40993c:	xchg   ebx,eax
  40993d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40993e:	jle    0x40996e
  409940:	pop    ecx
  409941:	(bad)  
  409942:	sub    ebp,DWORD PTR ds:0xa9ffecbe
  409948:	bound  esi,QWORD PTR [ecx]
  40994a:	retf   
  40994b:	mov    eax,0xccde2e5e
  409950:	push   edx
  409951:	cs (bad) 
  409954:	jne    0x4099b6
  409956:	rol    bh,0x80
  409959:	je     0x409928
  40995b:	dec    ebx
  40995c:	jns    0x4099a6
  40995e:	sbb    BYTE PTR [ebp+0x7d],0x3d
  409962:	mov    BYTE PTR [edx+0x70],0x32
  409966:	ret    
  409967:	inc    ebp
  409968:	mov    edi,0x35860007
  40996d:	icebp  
  40996e:	arpl   WORD PTR [eax],ax
  409970:	loop   0x40991b
  409972:	or     BYTE PTR [eax],al
  409974:	xchg   BYTE PTR [ebp-0xcd22418],ah
  40997a:	fst    DWORD PTR [ebp-0x282f0abf]
  409980:	push   esp
  409981:	repnz out 0xd3,eax
  409984:	(bad)  
  409985:	ss kandw k4,k5,k3
  40998a:	or     DWORD PTR [edx-0x353415b0],0xadc2d741
  409994:	fiadd  WORD PTR [edx-0x1d]
  409997:	add    eax,DWORD PTR [esi-0x46c6f4be]
  40999d:	outs   dx,BYTE PTR ds:[esi]
  40999e:	fnstenv [ebx]
  4099a0:	scas   eax,DWORD PTR es:[edi]
  4099a1:	xor    esp,ebp
  4099a3:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4099a5:	jne    0x4099c5
  4099a7:	jp     0x409a1f
  4099a9:	addr16 sub eax,0xa6428644
  4099af:	shl    BYTE PTR [edx],cl
  4099b1:	in     eax,dx
  4099b2:	xor    al,0xa7
  4099b4:	sub    eax,ebp
  4099b6:	cdq    
  4099b7:	retf   0xbfc9
  4099ba:	pop    ebx
  4099bb:	lea    edx,[esi]
  4099bd:	(bad)  
  4099be:	jae    0x40995b
  4099c0:	or     eax,0x860443d7
  4099c5:	inc    edx
  4099c6:	jmp    0x8172:0xc0222a7a
  4099cd:	inc    edx
  4099ce:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4099d0:	nop
  4099d1:	loop   0x4099d7
  4099d3:	mov    eax,DWORD PTR [eax]
  4099d5:	aam    0xf1
  4099d7:	ins    DWORD PTR es:[edi],dx
  4099d8:	scas   eax,DWORD PTR es:[edi]
  4099d9:	enter  0xce9,0x1
  4099dd:	jge    0x4099ad
  4099df:	sub    BYTE PTR [eax-0x16a317ca],bl
  4099e5:	and    cl,ch
  4099e7:	dec    edx
  4099e8:	shr    BYTE PTR [ebx],0xb1
  4099eb:	push   es
  4099ec:	in     al,dx
  4099ed:	and    al,BYTE PTR [ebp-0x1d879eb]
  4099f3:	dec    ebx
  4099f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099f5:	cmp    edx,ebx
  4099f7:	mov    DWORD PTR [eax-0x5237f14],edx
  4099fd:	pop    esp
  4099fe:	out    dx,al
  4099ff:	loop   0x409a04
  409a01:	xchg   BYTE PTR [edx+0xb],al
  409a04:	sub    ch,BYTE PTR [edx+0x66]
  409a07:	mul    DWORD PTR [esi+eiz*2]
  409a0a:	jnp    0x4099fd
  409a0c:	add    eax,DWORD PTR [esi+0x64b0a42]
  409a12:	and    ch,BYTE PTR [eax]
  409a14:	jmp    0xd34adc9e
  409a19:	dec    edx
  409a1a:	or     BYTE PTR [edx],0xba
  409a1d:	or     DWORD PTR [ebp-0x3c204b31],ecx
  409a23:	shl    BYTE PTR [edx+0x70d1fb01],0xd1
  409a2a:	mov    esi,0x5d3fe6f4
  409a2f:	push   cs
  409a30:	sbb    al,0x78
  409a32:	inc    ecx
  409a33:	pop    esp
  409a34:	jmp    0xa74adcbe
  409a39:	add    BYTE PTR [ebx-0x7a165513],bh
  409a3f:	inc    edx
  409a40:	or     al,BYTE PTR [ecx+0x749bded9]
  409a46:	adc    bl,BYTE PTR [ebx+esi*4+0xa428591]
  409a4d:	add    dh,BYTE PTR [ecx+0x7e]
  409a50:	inc    edi
  409a51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a52:	addr16 inc edx
  409a54:	or     cl,dl
  409a56:	push   cs
  409a57:	and    eax,0x423cff1e
  409a5c:	or     bl,BYTE PTR [edi-0x3e90dd18]
  409a62:	mov    ecx,0xb57c3e7d
  409a67:	inc    edx
  409a68:	or     ch,bl
  409a6a:	popf   
  409a6b:	push   0x2e
  409a6d:	leave  
  409a6e:	mov    cl,0x5d
  409a70:	ins    DWORD PTR es:[edi],dx
  409a71:	je     0x409a44
  409a73:	push   ebp
  409a74:	popa   
  409a75:	jo     0x409a4c
  409a77:	push   ecx
  409a78:	gs dec esp
  409a7a:	(bad)  
  409a7b:	dec    ebp
  409a7c:	or     ch,bh
  409a7e:	sahf   
  409a7f:	pop    ebx
  409a80:	or     ch,BYTE PTR [ebp+0x1d]
  409a83:	fcom   DWORD PTR [ecx+ebp*2+0xa428a]
  409a8a:	aam    0x30
  409a8c:	ins    BYTE PTR es:[edi],dx
  409a8d:	jb     0x409af1
  409a8f:	add    cl,BYTE PTR [edx]
  409a91:	add    bh,cl
  409a93:	cmp    dh,BYTE PTR [ebp+0x3e]
  409a96:	push   eax
  409a97:	and    eax,0x422a7a79
  409a9c:	or     al,BYTE PTR [eax]
  409a9e:	add    BYTE PTR [ebx-0x76869cd3],dl
  409aa4:	cmp    al,0x19
  409aa6:	or     ch,bl
  409aa8:	xor    al,0x25
  409aaa:	jo     0x409a3a
  409aac:	pop    es
  409aad:	pop    eax
  409aae:	dec    eax
  409aaf:	jmp    0xa41:0xef6f1263
  409ab6:	add    dh,dh
  409ab8:	rol    bh,1
  409aba:	ficom  DWORD PTR [esp+eax*4-0x2e]
  409abe:	mov    edi,DWORD PTR [edx]
  409ac0:	rcl    DWORD PTR [esi-0xb738f36],0xff
  409ac7:	mov    ds:0xce152962,al
  409acc:	inc    ecx
  409acd:	or     al,BYTE PTR [eax]
  409acf:	mov    DWORD PTR [edx+0x15],ebp
  409ad2:	add    ah,BYTE PTR [edi-0x42fff5bf]
  409ad8:	ret    0x7975
  409adb:	loop   0x409b51
  409add:	sub    DWORD PTR [edx],esp
  409adf:	push   edi
  409ae0:	ins    DWORD PTR es:[edi],dx
  409ae1:	outs   dx,DWORD PTR ds:[esi]
  409ae2:	arpl   WORD PTR [edx],cx
  409ae4:	sbb    DWORD PTR [ebx+0x67],ebp
  409ae7:	push   ss
  409ae8:	outs   dx,DWORD PTR ds:[esi]
  409ae9:	sub    ebp,DWORD PTR [edi]
  409aeb:	push   eax
  409aec:	jno    0x409b61
  409aee:	jg     0x409ace
  409af0:	and    esp,DWORD PTR [bx]
  409af3:	dec    eax
  409af4:	js     0x409b75
  409af6:	data16 cmc 
  409af8:	aas    
  409af9:	pop    ds
  409afa:	jnp    0x409a90
  409afc:	add    al,0x49
  409afe:	pop    ecx
  409aff:	push   0x464533
  409b04:	xchg   BYTE PTR [edx+0x41],ah
  409b07:	push   cs
  409b08:	xchg   BYTE PTR [esp+ebx*4],dh
  409b0b:	test   al,0x9
  409b0d:	and    BYTE PTR [ecx],cl
  409b0f:	add    BYTE PTR [esi-0x115344c8],al
  409b15:	(bad)  
  409b16:	in     al,dx
  409b17:	icebp  
  409b18:	adc    eax,0xe3b1b1cb
  409b1d:	or     eax,0x2226babe
  409b22:	mov    esi,0xcb1621a9
  409b27:	loop   0x409b11
  409b29:	mov    ?,WORD PTR ds:[ebx-0x5551ebce]
  409b30:	push   ss
  409b31:	sbb    DWORD PTR [eax-0x67e2f569],edx
  409b37:	xchg   edx,eax
  409b38:	mov    ch,0x21
  409b3a:	cdq    
  409b3b:	xchg   esi,eax
  409b3c:	test   eax,0x179090c4
  409b41:	cmp    ah,bl
  409b43:	ret    0x2b0a
  409b46:	mov    cs,WORD PTR [ebx-0x7b59e1f5]
  409b4c:	retf   
  409b4d:	jne    0x409b58
  409b4f:	add    BYTE PTR [esi-0x79bf0e14],al
  409b55:	repnz inc edx
  409b57:	inc    edx
  409b58:	xchg   bh,ch
  409b5a:	inc    edx
  409b5b:	inc    edx
  409b5c:	xchg   bh,ah
  409b5e:	inc    edx
  409b5f:	inc    edx
  409b60:	xchg   ch,bl
  409b62:	inc    edx
  409b63:	inc    edx
  409b64:	xchg   dl,dl
  409b66:	inc    edx
  409b67:	inc    edx
  409b68:	add    BYTE PTR [esi-0x79bf0e45],al
  409b6e:	mov    ds:0x908640f1,eax
  409b73:	icebp  
  409b74:	inc    eax
  409b75:	xchg   bh,al
  409b77:	or     BYTE PTR [ebx-0x7a],ah
  409b7a:	test   eax,0x42860008
  409b7f:	and    al,BYTE PTR [edx-0x3b]
  409b82:	push   es
  409b83:	cs inc esi
  409b85:	ror    DWORD PTR [edx],0x2a
  409b88:	dec    edx
  409b89:	mov    ebp,0xb94e160e
  409b8e:	adc    dl,BYTE PTR [edx]
  409b90:	push   edx
  409b91:	mov    ch,0x16
  409b93:	push   ds
  409b94:	push   esi
  409b95:	mov    cl,0x1a
  409b97:	sbb    bl,BYTE PTR [edx-0x59]
  409b9a:	and    BYTE PTR [eax+0x68],al
  409b9d:	mov    ds:0x6f6c0424,eax
  409ba2:	sub    BYTE PTR [eax],bl
  409ba4:	jo     0x409c11
  409ba6:	sub    al,0xc
  409ba8:	je     0x409c21
  409baa:	xor    BYTE PTR [eax],dl
  409bac:	js     0x409c21
  409bae:	xor    al,0xf4
  409bb0:	jnp    0x409c11
  409bb2:	cmp    BYTE PTR [ebx-0x48906bcc],dh
  409bb8:	cmp    BYTE PTR [eax-0x62c3448d],bl
  409bbe:	imul   esp,ebx,0x3
  409bc1:	xchg   BYTE PTR [edx-0x1d],al
  409bc4:	add    eax,DWORD PTR [esi+0x6a27df42]
  409bca:	data16 (bad) 
  409bcc:	jno    0x409bce
  409bce:	xor    eax,0x1975b636
  409bd3:	cmp    cl,dl
  409bd5:	jns    0x409bf4
  409bd7:	popw   es
  409bd9:	sub    BYTE PTR [edx+0x66],ch
  409bdc:	movaps xmm1,XMMWORD PTR [eax+0x7b]
  409be0:	mov    ds:0xaeffc444,eax
  409be5:	dec    eax
  409be6:	rol    BYTE PTR [ebx],0xab
  409be9:	dec    esp
  409bea:	mov    esp,0xb8509707
  409bef:	or     edx,DWORD PTR [ebx-0x60f04bac]
  409bf5:	pop    eax
  409bf6:	mov    al,0x13
  409bf8:	or     cl,ch
  409bfa:	test   eax,0xa1c52e66
  409bff:	sbb    dl,BYTE PTR [ebx+0x43]
  409c02:	fstp   QWORD PTR [esi]
  409c04:	push   edi
  409c05:	aas    
  409c06:	fldenv [edx]
  409c08:	imul   ecx,DWORD PTR [ebx-0x5b],0x26
  409c0c:	outs   dx,DWORD PTR ds:[esi]
  409c0d:	inc    edi
  409c0e:	mov    eax,ds:0xad53632a
  409c13:	cs addr16 dec edi
  409c16:	test   eax,0x85e97b32
  409c1b:	inc    edx
  409c1c:	or     al,BYTE PTR ds:0x365812a9
  409c22:	bound  ebx,QWORD PTR [ecx]
  409c24:	push   ebp
  409c25:	cmp    cl,BYTE PTR [edi+0x10]
  409c28:	pop    esp
  409c29:	sub    al,0x54
  409c2b:	sbb    eax,DWORD PTR [edx+0x1e]
  409c2e:	push   ebp
  409c2f:	push   ss
  409c30:	push   ebp
  409c31:	int    0x0
  409c33:	test   DWORD PTR [edx+0xa],eax
  409c36:	adc    BYTE PTR [eax+0x28],ch
  409c39:	outs   dx,DWORD PTR ds:[esi]
  409c3a:	or     cl,BYTE PTR [esi+0x42]
  409c3d:	or     al,BYTE PTR [edx-0x2df5ff5e]
  409c43:	add    BYTE PTR [bp+si],cl
  409c46:	test   DWORD PTR [edi+0x0],esp
  409c49:	or     dl,BYTE PTR [edx+0x67]
  409c4c:	add    BYTE PTR [edx],cl
  409c4e:	fwait
  409c4f:	add    BYTE PTR fs:[edx],cl
  409c52:	adc    al,0x8a
  409c54:	xor    al,0xa
  409c56:	jmp    0x654adee0
  409c5b:	repz jp 0x409c68
  409c5e:	pop    ebx
  409c5f:	push   ebp
  409c60:	add    BYTE PTR [edx],cl
  409c62:	push   esp
  409c63:	mov    ch,0x4
  409c65:	or     al,BYTE PTR [ebp-0x58]
  409c68:	add    al,0xa
  409c6a:	or     BYTE PTR [eax-0x4a75f5fc],ah
  409c70:	add    al,0xa
  409c72:	add    bl,dh
  409c74:	jne    0x409cbe
  409c76:	add    BYTE PTR [eax],bl
  409c78:	adc    cl,BYTE PTR [edx]
  409c7a:	add    BYTE PTR [eax],bl
  409c7c:	sbb    cl,BYTE PTR [ecx+0x0]
  409c7f:	sbb    BYTE PTR [edi],al
  409c81:	or     al,BYTE PTR [eax]
  409c83:	int3   
  409c84:	imul   eax,DWORD PTR ds:[eax],0xffffffcd
  409c88:	arpl   WORD PTR ds:[eax],ax
  409c8b:	leave  
  409c8c:	outs   dx,DWORD PTR ds:[esi]
  409c8e:	add    bl,dl
  409c90:	ds and al,0x0
  409c93:	sar    DWORD PTR [esi],cl
  409c95:	data16 add BYTE PTR [eax],al
  409c98:	retf   
  409c99:	or     al,BYTE PTR ds:[eax]
  409c9c:	popa   
  409c9d:	add    eax,DWORD PTR [ebx+0x43]
  409ca0:	dec    ebp
  409ca1:	and    DWORD PTR [ebx+0x74],ebp
  409ca4:	xchg   edx,eax
  409ca5:	or     al,BYTE PTR ds:[eax]
  409ca8:	mov    eax,ds:0x83414303
  409cad:	sub    cl,BYTE PTR [ecx+ebp*2-0x15]
  409cb1:	and    BYTE PTR [edx],cl
  409cb3:	add    BYTE PTR [ecx-0x74b9bcfd],dh
  409cb9:	xor    DWORD PTR [ecx+0x68],edi
  409cbc:	pushf  
  409cbd:	and    eax,0x20c96968
  409cc2:	jle    0x409cc4
  409cc4:	icebp  
  409cc5:	add    al,BYTE PTR [ebx+0x44]
  409cc8:	ret    0x7e32
  409ccb:	jb     0x409c95
  409ccd:	cmp    al,0xa
  409ccf:	add    BYTE PTR [edi],dh
  409cd1:	mov    ah,0x34
  409cd3:	add    BYTE PTR [edi],bh
  409cd5:	add    cl,BYTE PTR [eax+0x0]
  409cd8:	push   esp
  409cd9:	mov    eax,0xd82b0034
  409cde:	xor    al,0x0
  409ce0:	fnstenv [edi-0x48d6ffb6]
  409ce6:	dec    edx
  409ce7:	add    BYTE PTR [esi],ah
  409ce9:	inc    DWORD PTR [edi+0x0]
  409cec:	xchg   bh,cl
  409cee:	dec    esi
  409cef:	inc    edx
  409cf0:	xchg   bh,al
  409cf2:	dec    esi
  409cf3:	inc    edx
  409cf4:	xchg   BYTE PTR [edi-0x3d79bdb2],bh
  409cfa:	dec    esi
  409cfb:	inc    edx
  409cfc:	add    BYTE PTR [esi-0x79bdb0d1],al
  409d02:	xor    cl,BYTE PTR [edi+0x42]
  409d05:	xchg   dh,bh
  409d07:	dec    ebx
  409d08:	inc    edx
  409d09:	xchg   BYTE PTR ds:0x8a8646b,cl
  409d0f:	pushw  0xff9d
  409d12:	ja     0x409d79
  409d14:	outs   dx,BYTE PTR ds:[esi]
  409d15:	xchg   esi,eax
  409d16:	jp     0x409d90
  409d18:	jae    0x409cac
  409d1a:	jno    0x409d9b
  409d1c:	js     0x409caa
  409d1e:	or     ch,BYTE PTR [ebp+0x69]
  409d21:	cdq    
  409d22:	outs   dx,BYTE PTR ds:[esi]
  409d23:	jno    0x409d25
  409d25:	xchg   bl,al
  409d27:	cli    
  409d28:	aas    
  409d29:	xchg   BYTE PTR [edi+0x59],ch
  409d2c:	inc    edx
  409d2d:	xchg   ah,ah
  409d2f:	idiv   BYTE PTR [edi]
  409d31:	xchg   BYTE PTR [esi+0xe],dl
  409d34:	pop    ecx
  409d35:	xchg   BYTE PTR [ebx-0x7679fff8],ch
  409d3b:	or     BYTE PTR [esi+eax*4-0x4d],dh
  409d3f:	or     BYTE PTR [esi+eax*4-0x55],dh
  409d43:	or     BYTE PTR [eax],al
  409d45:	xchg   BYTE PTR [eax+0x6f],dl
  409d48:	inc    edx
  409d49:	xchg   al,dh
  409d4b:	or     BYTE PTR [ecx-0x7a],dl
  409d4e:	fisttp WORD PTR [eax]
  409d50:	add    BYTE PTR [esi-0x79bd9232],al
  409d56:	inc    ebp
  409d57:	push   cs
  409d58:	pop    esp
  409d59:	xchg   BYTE PTR [ebx-0x3279fff8],ch
  409d5f:	or     BYTE PTR [ebx+0x8bf8600],ah
  409d65:	add    BYTE PTR [esi-0x10fc78be],al
  409d6b:	inc    edx
  409d6c:	nop
  409d6d:	add    esi,esi
  409d6f:	inc    edx
  409d70:	pop    DWORD PTR [ebx]
  409d72:	out    0x42,eax
  409d74:	call   0xeb03:0x8242d003
  409d7b:	inc    edx
  409d7c:	mov    es,WORD PTR [ebx]
  409d7e:	xchg   BYTE PTR [edx-0x5c],al
  409d81:	data16 rcl BYTE PTR [edx],cl
  409d84:	jno    0x409df2
  409d86:	stos   BYTE PTR es:[edi],al
  409d87:	sub    eax,0x28cf7040
  409d8c:	dec    ebp
  409d8d:	imul   eax,DWORD PTR [esi-0x3b824cbe],0x42
  409d94:	xor    eax,DWORD PTR [esp+edx*4]
  409d97:	inc    edx
  409d98:	pop    esp
  409d99:	add    al,0xae
  409d9b:	inc    edx
  409d9c:	pop    edx
  409d9d:	add    al,0xa4
  409d9f:	inc    edx
  409da0:	dec    edx
  409da1:	add    al,0x92
  409da3:	inc    edx
  409da4:	das    
  409da5:	add    al,0x5a
  409da7:	inc    edx
  409da8:	daa    
  409da9:	add    al,0x86
  409dab:	inc    edx
  409dac:	or     al,0x60
  409dae:	pop    edi
  409daf:	xor    cl,BYTE PTR [edi]
  409db1:	jno    0x409e28
  409db3:	push   0x4272680f
  409db8:	and    al,0x60
  409dba:	outs   dx,DWORD PTR ds:[esi]
  409dbb:	xor    al,BYTE PTR [edi]
  409dbd:	jno    0x409e14
  409dbf:	adc    esi,edi
  409dc1:	fs push esp
  409dc3:	cs (bad) 
  409dc5:	jae    0x409dc7
  409dc7:	xchg   BYTE PTR [edx-0x5c],al
  409dca:	pop    edi
  409dcb:	das    
  409dcc:	xor    al,bh
  409dce:	jo     0x409e05
  409dd0:	adc    ecx,ebx
  409dd2:	jo     0x409e06
  409dd4:	push   ds
  409dd5:	mov    ah,0x72
  409dd7:	xor    BYTE PTR [edx-0x5c],al
  409dda:	pop    edi
  409ddb:	das    
  409ddc:	xor    ah,BYTE PTR [eax+0xa212b75]
  409de2:	mov    ebp,0xb5630426
  409de7:	out    dx,al
  409de8:	and    DWORD PTR [edx-0x51],edi
  409deb:	repz daa 
  409ded:	addr16 mov cl,0xcb
  409df0:	or     DWORD PTR [esi-0x5c],ebx
  409df3:	ret    0xa12
  409df6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409df7:	shr    DWORD PTR [ecx],0x7a
  409dfa:	lods   eax,DWORD PTR ds:[esi]
  409dfb:	jmp    0x431d:0xd88e7a33
  409e02:	test   dl,ah
  409e04:	pop    ds
  409e05:	outs   dx,DWORD PTR ds:[esi]
  409e06:	jmp    0x2e4ae090
  409e0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e0c:	sub    DWORD PTR [edx+0x26],edi
  409e0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e10:	cs inc ebx
  409e12:	inc    esp
  409e13:	mov    ds:0xac246f1f,eax
  409e18:	and    esp,DWORD PTR [ebp+0x4d]
  409e1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e1c:	xor    al,0x79
  409e1e:	sbb    ah,BYTE PTR [ebx-0x7a1690c4]
  409e24:	inc    edx
  409e25:	or     ah,BYTE PTR [esi]
  409e27:	sub    WORD PTR [edx+0x2e],di
  409e2b:	add    BYTE PTR [edi+0x2e],ah
  409e2e:	inc    ebx
  409e2f:	or     al,0x6b
  409e31:	pop    ds
  409e32:	outs   dx,DWORD PTR ds:[esi]
  409e33:	sub    al,0x5c
  409e35:	and    esp,DWORD PTR [ebp+0x5]
  409e38:	addr16 xor al,0x79
  409e3b:	jmp    0x264ae0c5
  409e40:	sub    WORD PTR [edx+0x1a],di
  409e44:	arpl   WORD PTR [eax],si
  409e46:	outs   dx,DWORD PTR ds:[esi]
  409e47:	and    BYTE PTR [edi],ch
  409e49:	and    DWORD PTR [ebp-0x34],ebp
  409e4c:	dec    ecx
  409e4d:	daa    
  409e4e:	pop    ecx
  409e4f:	aad    0x3b
  409e51:	sbb    eax,0x4285c46b
  409e56:	or     dl,BYTE PTR [ecx+eax*8-0x2affe8e5]
  409e5d:	mov    ah,0x25
  409e5f:	inc    ebp
  409e60:	xor    ebx,DWORD PTR [edx+0x41eeb355]
  409e66:	in     eax,dx
  409e67:	jmp    0x409dfa
  409e69:	mov    esp,0x3612004a
  409e6e:	dec    ebx
  409e6f:	add    BYTE PTR [esi+esi*1],cl
  409e72:	dec    ebx
  409e73:	add    BYTE PTR [esi-0x3d],cl
  409e76:	dec    edx
  409e77:	add    cl,ch
  409e79:	jle    0x409ec5
  409e7b:	add    BYTE PTR [ecx],cl
  409e7d:	ret    
  409e7e:	dec    edx
  409e7f:	add    BYTE PTR [ebp-0x3e],ch
  409e82:	dec    edx
  409e83:	add    dh,cl
  409e85:	jle    0x409ed1
  409e87:	add    BYTE PTR [ecx-0x43ffb582],ch
  409e8d:	xor    eax,0x8c00004b
  409e92:	mov    edi,0xc011004a
  409e97:	dec    edx
  409e98:	add    ah,ah
  409e9a:	mov    eax,0x3e6b0034
  409e9f:	inc    ebx
  409ea0:	add    BYTE PTR [esi+edi*1+0x5a],ch
  409ea4:	add    BYTE PTR [ebx+0x3e],ah
  409ea7:	dec    ebx
  409ea8:	add    BYTE PTR [esi+0x7f000a3e],dl
  409eae:	popa   
  409eaf:	or     al,BYTE PTR [eax]
  409eb1:	mov    edi,0xc2000a41
  409eb6:	inc    ecx
  409eb7:	addr16 add bh,ch
  409eba:	inc    ecx
  409ebb:	or     al,BYTE PTR [eax]
  409ebd:	iret   
  409ebe:	inc    ecx
  409ebf:	daa    
  409ec0:	add    BYTE PTR [ecx-0x3dfff5c2],cl
  409ec6:	inc    ecx
  409ec7:	addr16 add dl,cl
  409eca:	inc    ecx
  409ecb:	jp     0x409ecd
  409ecd:	mov    bh,BYTE PTR [esi]
  409ecf:	jns    0x409ed1
  409ed1:	lahf   
  409ed2:	inc    ecx
  409ed3:	or     al,BYTE PTR [eax]
  409ed5:	xchg   BYTE PTR [edi-0x647992f8],dl
  409edb:	or     BYTE PTR [eax],al
  409edd:	xchg   al,bl
  409edf:	inc    eax
  409ee0:	inc    edi
  409ee1:	sub    ebp,edi
  409ee3:	inc    ebp
  409ee4:	outs   dx,BYTE PTR ds:[esi]
  409ee5:	sbb    esp,esi
  409ee7:	bound  eax,QWORD PTR [esi-0xf]
  409eea:	not    DWORD PTR [ebp+eiz*2-0xc]
  409eee:	sti    
  409eef:	addr16 je 0x409ed0
  409ef2:	stos   DWORD PTR es:[edi],eax
  409ef3:	or     BYTE PTR [eax],al
  409ef5:	add    BYTE PTR [esi-0x79fff77f],al
  409efb:	jle    0x409f05
  409efd:	jae    0x409e85
  409eff:	xchg   BYTE PTR [eax],cl
  409f01:	xor    BYTE PTR [esi-0x7987f77d],al
  409f07:	jge    0x409f11
  409f09:	and    eax,0x93886
  409f0e:	xchg   BYTE PTR [esi+0xe],al
  409f11:	jae    0x409e99
  409f13:	ds push cs
  409f15:	xor    BYTE PTR [esi-0x7987f1ad],al
  409f1b:	stos   DWORD PTR es:[edi],eax
  409f1c:	or     BYTE PTR [eax],al
  409f1e:	xchg   BYTE PTR [edx-0x519fcdde],bh
  409f24:	or     BYTE PTR [eax],al
  409f26:	xchg   BYTE PTR [edx],cl
  409f28:	pusha  
  409f29:	and    BYTE PTR [ebx+0x75],bh
  409f2c:	outs   dx,BYTE PTR ds:[si]
  409f2e:	imul   edx,DWORD PTR [eax+eiz*2+0x20],0x6f7c596b
  409f36:	je     0x409ec3
  409f38:	popa   
  409f39:	arpl   WORD PTR [ebp+0x4e],sp
  409f3c:	jl     0x409fb0
  409f3e:	arpl   WORD PTR [edi+0xe],ax
  409f41:	add    BYTE PTR [esi+0x29455e73],al
  409f47:	push   esi
  409f48:	inc    eax
  409f49:	dec    ebx
  409f4a:	push   eax
  409f4b:	push   esp
  409f4c:	pop    ebx
  409f4d:	dec    esi
  409f4e:	xchg   BYTE PTR [edx-0x2d],al
  409f51:	bound  esi,QWORD PTR [ecx+esi*1]
  409f54:	into   
  409f55:	jne    0x409fbd
  409f57:	sub    edx,eax
  409f59:	and    eax,DWORD PTR [eax]
  409f5b:	push   ss
  409f5c:	and    ebx,esi
  409f5e:	je     0x409f83
  409f60:	push   ds
  409f61:	jecxz  0x409f66
  409f63:	xchg   BYTE PTR [edx-0x45],al
  409f66:	push   ebx
  409f67:	inc    ebx
  409f68:	adc    eax,0xfdb4293
  409f6d:	scas   al,BYTE PTR es:[edi]
  409f6e:	aas    
  409f6f:	xchg   BYTE PTR [edx-0x70],al
  409f72:	outs   dx,DWORD PTR ds:[esi]
  409f73:	hlt    
  409f74:	sub    DWORD PTR [eax-0x73da5991],eax
  409f7a:	pop    edi
  409f7b:	jmp    0x409fdf
  409f7d:	xor    BYTE PTR [ebp+edx*8+0x1d],0x71
  409f82:	outs   dx,DWORD PTR ds:[esi]
  409f83:	fbld   TBYTE PTR [ebx]
  409f85:	test   DWORD PTR [ebx],esp
  409f87:	loopne 0x409faa
  409f89:	mov    ah,BYTE PTR [edi-0x55]
  409f8c:	push   ds
  409f8d:	jecxz  0x409f92
  409f8f:	xchg   BYTE PTR [edx+0x3b],al
  409f92:	push   esp
  409f93:	retf   
  409f94:	adc    esi,DWORD PTR [eax]
  409f96:	push   eax
  409f97:	aam    0x9
  409f99:	and    BYTE PTR [eax-0x7a],dl
  409f9c:	inc    edx
  409f9d:	dec    esi
  409f9e:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  409fa0:	and    esi,DWORD PTR [esi]
  409fa2:	call   0xa261:0x311d
  409fa8:	bound  esi,QWORD PTR [esi]
  409faa:	imul   di,WORD PTR [edx],0x33
  409fae:	popa   
  409faf:	gs cs push es
  409fb2:	pusha  
  409fb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fb4:	sub    DWORD PTR ds:0xd306370,eax
  409fba:	gs jb  0x40a01f
  409fbd:	adc    BYTE PTR [eax+0x0],dh
  409fc0:	addr16 cs push es
  409fc3:	add    al,0x86
  409fc5:	inc    edx
  409fc6:	cmp    edx,DWORD PTR [ebx+eax*2+0x13]
  409fca:	or     ah,BYTE PTR [eax]
  409fcc:	dec    eax
  409fcd:	or     al,0x4b
  409fcf:	sbb    eax,0xb054fe4b
  409fd4:	dec    ebx
  409fd5:	push   cs
  409fd6:	dec    edi
  409fd7:	mov    ebx,0xb6460143
  409fdc:	xor    al,0xe
  409fde:	dec    ebx
  409fdf:	mov    ch,0x46
  409fe1:	inc    edx
  409fe2:	or     dl,al
  409fe4:	sub    ebp,DWORD PTR [ebx+ebp*2]
  409fe7:	int    0x1a
  409fe9:	push   ds
  409fea:	sub    cl,dl
  409fec:	call   0xe2f61915
  409ff1:	and    al,0x7e
  409ff3:	leave  
  409ff4:	hlt    
  409ff5:	cs js  0x409f88
  409ff8:	jecxz  0x40a015
  409ffa:	or     ah,BYTE PTR [ecx-0x5fab024b]
  40a000:	ret    
  40a001:	or     al,0x4b
  40a003:	mov    ch,0xc2
  40a005:	(bad)  
  40a006:	push   esp
  40a007:	stos   BYTE PTR es:[edi],al
  40a008:	rol    BYTE PTR [ecx+ebx*2],0x9d
  40a00c:	retf   0x5e04
  40a00f:	jmp    0x504ae299
  40a014:	test   al,0x2c
  40a016:	imul   ecx,DWORD PTR [ebp-0x65],0x1e
  40a01a:	sub    cl,BYTE PTR [edx-0x4e]
  40a01d:	and    DWORD PTR [eax+0x48],edi
  40a020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a021:	outs   dx,DWORD PTR cs:[esi]
  40a023:	cmp    eax,DWORD PTR [eax]
  40a025:	push   0x29
  40a027:	or     DWORD PTR fs:[ebp+0x6d477f2a],esp
  40a02e:	bound  edi,QWORD PTR [ecx+0x40]
  40a031:	jl     0x40a050
  40a033:	sub    dl,BYTE PTR [ecx]
  40a035:	and    DWORD PTR [bp+0x4],ebp
  40a039:	je     0x40a07d
  40a03b:	or     ah,BYTE PTR [ecx]
  40a03d:	cmp    bh,ch
  40a03f:	push   esp
  40a040:	and    BYTE PTR [eax+0xc],al
  40a043:	dec    ebx
  40a044:	add    BYTE PTR [ebx-0x63a0b1fb],bl
  40a04a:	push   es
  40a04b:	pop    edi
  40a04c:	dec    esi
  40a04d:	or     ebx,DWORD PTR fs:[ecx+0x49]
  40a051:	xchg   ebp,eax
  40a052:	add    DWORD PTR [edx],ecx
  40a054:	add    dh,dl
  40a056:	sbb    al,0x7c
  40a058:	popa   
  40a059:	mov    ebx,0xcc206e25
  40a05e:	imul   esi,DWORD PTR es:[edx-0x32],0x1f
  40a063:	jle    0x40a0ca
  40a065:	int    0x5e
  40a067:	arpl   WORD PTR [esi+0x7f],bp
  40a06a:	pop    ds
  40a06b:	outs   dx,BYTE PTR gs:[esi]
  40a06d:	inc    ebx
  40a06e:	and    esp,DWORD PTR [esp+esi*2+0x7a]
  40a072:	sub    ch,BYTE PTR [edi+0x6e]
  40a075:	add    BYTE PTR [edx],ah
  40a077:	bound  esp,QWORD PTR [eax]
  40a079:	pop    ss
  40a07a:	and    ebp,DWORD PTR [ebx+0x64]
  40a07d:	adc    dh,BYTE PTR [edx+ecx*1]
  40a080:	add    BYTE PTR [edi],ah
  40a082:	push   ss
  40a083:	dec    edi
  40a084:	pop    edi
  40a085:	push   ss
  40a086:	or     BYTE PTR [ecx+eax*2+0x0],bl
  40a08a:	sbb    edi,edi
  40a08c:	dec    ebp
  40a08d:	pop    edi
  40a08e:	in     al,dx
  40a08f:	or     BYTE PTR [esp+edx*2-0x1e],al
  40a093:	pop    es
  40a094:	pop    esi
  40a095:	pop    edi
  40a096:	jnp    0x40a109
  40a098:	inc    esp
  40a099:	inc    edi
  40a09a:	jae    0x40a09a
  40a09c:	or     DWORD PTR [eax],eax
  40a09e:	(bad)  
  40a09f:	sub    BYTE PTR [ecx+eiz*2+0x5b],bh
  40a0a3:	sbb    eax,0x1ebc206e
  40a0a8:	imul   esi,DWORD PTR [edx-0x42],0x23
  40a0ac:	jle    0x40a113
  40a0ae:	mov    ebp,0x8f6e6366
  40a0b3:	push   ds
  40a0b4:	outs   dx,DWORD PTR ds:[esi]
  40a0b5:	popa   
  40a0b6:	adc    DWORD PTR [ecx],0x78
  40a0b9:	add    BYTE PTR [edi-0x79a0b0ea],dh
  40a0bf:	bound  ecx,QWORD PTR [esi+edx*2+0x47]
  40a0c3:	dec    edi
  40a0c4:	inc    ecx
  40a0c5:	inc    esp
  40a0c6:	xor    DWORD PTR [ebx+0x35],esi
  40a0c9:	inc    ecx
  40a0ca:	inc    edx
  40a0cb:	pop    ax
  40a0cd:	pop    edi
  40a0ce:	pop    edx
  40a0cf:	push   0x9b484543
  40a0d4:	or     BYTE PTR [eax],al
  40a0d6:	xchg   bh,dh
  40a0d8:	and    BYTE PTR ss:0x27726793,ah
  40a0df:	jl     0x40a145
  40a0e1:	gs adc al,0x3b
  40a0e4:	push   ebp
  40a0e5:	js     0x40a0fd
  40a0e7:	jle    0x40a152
  40a0e9:	je     0x40a10e
  40a0eb:	xchg   DWORD PTR [eax],ecx
  40a0ed:	add    BYTE PTR [eax],al
  40a0ef:	xchg   bl,ah
  40a0f1:	pop    eax
  40a0f2:	inc    ebp
  40a0f3:	fxch   st(7)
  40a0f5:	ss pop edi
  40a0f7:	retf   
  40a0f8:	sbb    DWORD PTR [eax+0x45],0xffffffc5
  40a0fc:	div    DWORD PTR [ebx]
  40a0fe:	inc    esp
  40a0ff:	xchg   dl,al
  40a101:	outs   dx,BYTE PTR ds:[esi]
  40a102:	jbe    0x40a0eb
  40a104:	das    
  40a105:	pusha  
  40a106:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40a108:	sar    DWORD PTR [edx+0x61],0xe1
  40a10c:	mov    esi,0x9bba6e53
  40a111:	or     BYTE PTR [eax],al
  40a113:	xchg   bl,ah
  40a115:	pop    eax
  40a116:	inc    ebp
  40a117:	shl    DWORD PTR [edx+0x4c],1
  40a11a:	push   esi
  40a11b:	(bad)  
  40a11c:	pop    edi
  40a11d:	inc    ecx
  40a11e:	inc    esp
  40a11f:	shl    DWORD PTR [ecx+0x58],0x41
  40a123:	ror    DWORD PTR [esi+0x35],0x4e
  40a127:	mov    edx,0x8600089b
  40a12c:	adc    ch,BYTE PTR [esi+esi*2+0x67]
  40a130:	pop    es
  40a131:	popa   
  40a132:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40a134:	push   0x65
  40a136:	gs je  0x40a17b
  40a139:	sub    ah,BYTE PTR [esi*2+0x706b1136]
  40a140:	sub    ebx,esp
  40a142:	add    eax,DWORD PTR [esi+0x4b542b42]
  40a148:	adc    DWORD PTR [edx],edi
  40a14a:	inc    esi
  40a14b:	xor    BYTE PTR [ebx],al
  40a14d:	daa    
  40a14e:	dec    ebx
  40a14f:	dec    edx
  40a150:	adc    DWORD PTR [edx],edx
  40a152:	dec    edi
  40a153:	add    BYTE PTR [ebx+0x14],al
  40a156:	sbb    dl,BYTE PTR [ebp+0x55]
  40a159:	push   ss
  40a15a:	mov    cl,0x4a
  40a15c:	cmp    BYTE PTR [ecx],cl
  40a15e:	jecxz  0x40a163
  40a160:	xchg   BYTE PTR [edx-0x36],al
  40a163:	adc    BYTE PTR gs:[ebx],ah
  40a166:	mov    bh,0x6a
  40a168:	sub    ah,BYTE PTR [edx-0x4d]
  40a16b:	bound  edx,QWORD PTR [edx]
  40a16d:	sbb    ah,bl
  40a16f:	add    eax,DWORD PTR [esi-0x3cac54be]
  40a175:	rsm    
  40a177:	inc    ebp
  40a178:	fadd   DWORD PTR [ecx]
  40a17a:	mov    edi,0xb30fc24a
  40a17f:	inc    edx
  40a180:	mov    edx,0x8603e2fa
  40a185:	inc    edx
  40a186:	mov    ah,BYTE PTR [ebp-0x28]
  40a189:	and    DWORD PTR [edi+0x7362e26a],ebx
  40a18f:	fs mov ah,0x36
  40a192:	jecxz  0x40a197
  40a194:	xchg   BYTE PTR [edx-0x55],al
  40a197:	push   ebx
  40a198:	retf   
  40a199:	(bad)  
  40a19c:	rol    BYTE PTR [ecx],1
  40a19e:	daa    
  40a19f:	cmp    eax,0x43330fca
  40a1a4:	mov    ah,0x16
  40a1a6:	jecxz  0x40a1ab
  40a1a8:	xchg   BYTE PTR [edx+0x5a],al
  40a1ab:	bound  edx,QWORD PTR [eax+0x6a5d4721]
  40a1b1:	bound  ecx,QWORD PTR [edx]
  40a1b3:	inc    ecx
  40a1b4:	xor    edi,DWORD PTR gs:[esi-0x17]
  40a1b8:	add    BYTE PTR [ebp+0x52310a42],al
  40a1be:	add    eax,0x18443055
  40a1c3:	dec    ebx
  40a1c4:	and    eax,0x2155069b
  40a1c9:	inc    ebp
  40a1ca:	adc    ebx,DWORD PTR [esi-0x17]
  40a1cd:	test   DWORD PTR [edx+0xa],eax
  40a1d0:	adc    BYTE PTR [eax+edi*1],ah
  40a1d3:	imul   eax,DWORD PTR ds:0x142a265b,0x58
  40a1da:	dec    BYTE PTR [ecx]
  40a1dc:	mov    cl,0x55
  40a1de:	add    eax,0x1847b055
  40a1e3:	dec    ebx
  40a1e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1e5:	pop    edx
  40a1e6:	push   es
  40a1e7:	push   ebp
  40a1e8:	mov    ah,0x3b
  40a1ea:	dec    BYTE PTR [ecx]
  40a1ec:	shl    BYTE PTR [edi],1
  40a1ee:	cmp    BYTE PTR [ebx-0x33],ch
  40a1f1:	loop   0x40a219
  40a1f3:	sub    ah,BYTE PTR [ecx+0x95a16d1]
  40a1f9:	out    0x25,eax
  40a1fb:	jle    0x40a18e
  40a1fd:	in     al,0x26
  40a1ff:	or     dh,BYTE PTR [ecx-0x5faafa4b]
  40a205:	(bad)  
  40a206:	sbb    BYTE PTR [ebx-0x63],cl
  40a209:	xchg   edx,eax
  40a20a:	push   es
  40a20b:	push   ebp
  40a20c:	mov    ah,0xbe
  40a20e:	push   ss
  40a20f:	inc    edx
  40a210:	scas   al,BYTE PTR es:[edi]
  40a211:	leave  
  40a212:	inc    edx
  40a213:	or     al,BYTE PTR [eax+0x7d6b38a7]
  40a219:	shl    BYTE PTR [esi],cl
  40a21b:	sub    dh,BYTE PTR [ecx]
  40a21d:	add    dh,cl
  40a21f:	push   ss
  40a220:	pop    edx
  40a221:	or     DWORD PTR [ecx-0x60a294ca],ebx
  40a227:	xor    ebp,DWORD PTR [edx]
  40a229:	dec    edx
  40a22a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a22b:	outs   dx,DWORD PTR es:[esi]
  40a22d:	add    BYTE PTR [edi],bl
  40a22f:	inc    ebx
  40a230:	or     al,BYTE PTR [eax]
  40a232:	mov    bh,0x16
  40a234:	dec    edi
  40a235:	pop    edi
  40a236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a237:	add    al,0x5c
  40a239:	inc    ecx
  40a23a:	xchg   ebx,eax
  40a23b:	ins    DWORD PTR es:[edi],dx
  40a23c:	dec    esi
  40a23d:	pop    edi
  40a23e:	lods   al,BYTE PTR ds:[esi]
  40a23f:	or     cl,BYTE PTR [ebx+0x54]
  40a242:	call   0x7c24:0x86000a17
  40a249:	popa   
  40a24a:	ror    DWORD PTR ds:0xa97206e,cl
  40a250:	pop    esi
  40a251:	push   eax
  40a252:	iret   
  40a253:	sub    BYTE PTR [edi+0x72],ch
  40a256:	mov    esp,0x9f6e650d
  40a25b:	inc    edx
  40a25c:	or     al,BYTE PTR [eax]
  40a25e:	not    DWORD PTR [edx]
  40a260:	dec    edi
  40a261:	pop    edi
  40a262:	(bad)  
  40a263:	add    BYTE PTR [ecx+eax*2-0x1d],bl
  40a267:	ins    DWORD PTR es:[edi],dx
  40a268:	dec    esi
  40a269:	pop    edi
  40a26a:	fyl2xp1 
  40a26c:	push   edi
  40a26d:	push   ebx
  40a26e:	(bad)  
  40a26f:	add    eax,DWORD PTR [eax+eax*1+0x4b]
  40a273:	daa    
  40a274:	jle    0x40a2d7
  40a276:	(bad)  
  40a277:	xor    al,0x6f
  40a279:	arpl   WORD PTR [edx+0xf],cx
  40a27c:	jl     0x40a2e3
  40a27e:	sti    
  40a27f:	popa   
  40a280:	imul   esp,DWORD PTR [esi+0x0],0xfffffffb
  40a284:	sbb    bh,BYTE PTR [eax+0x20]
  40a287:	or     al,0x21
  40a289:	addr16 jo 0x40a25f
  40a28c:	sbb    bh,BYTE PTR [esi+0x65]
  40a28f:	sti    
  40a290:	popa   
  40a291:	imul   ebp,DWORD PTR [edi+0x11],0xbb636f24
  40a298:	push   cs
  40a299:	outs   dx,BYTE PTR gs:[esi]
  40a29b:	cmc    
  40a29c:	popa   
  40a29d:	imul   ebp,DWORD PTR [eax+edx*8+0x37],0x25d2206f
  40a2a5:	jns    0x40a31a
  40a2a7:	xchg   dl,bh
  40a2a9:	bound  esp,QWORD PTR [ebp-0x7a]
  40a2ac:	arpl   WORD PTR [esi+0x45],bx
  40a2af:	test   eax,0x554f4a58
  40a2b4:	inc    dx
  40a2b6:	pop    edi
  40a2b7:	inc    ebp
  40a2b8:	fs dec eax
  40a2ba:	dec    esi
  40a2bb:	dec    ebx
  40a2bc:	pop    eax
  40a2bd:	push   edx
  40a2be:	dec    ecx
  40a2bf:	cmp    DWORD PTR [ebp+0xe],esi
  40a2c2:	add    BYTE PTR [esi-0x599094a9],al
  40a2c8:	inc    esi
  40a2c9:	imul   ebp,DWORD PTR [esi+0x4f],0x6765507b
  40a2d0:	aas    
  40a2d1:	ins    DWORD PTR es:[edi],dx
  40a2d2:	jb     0x40a33a
  40a2d4:	cmp    DWORD PTR [ecx+0x74],esp
  40a2d7:	and    ebp,DWORD PTR [eax+0x462b7328]
  40a2dd:	push   0x7294663b
  40a2e2:	gs adc al,0x85
  40a2e5:	push   esp
  40a2e6:	outs   dx,DWORD PTR ds:[esi]
  40a2e7:	add    BYTE PTR [ecx],dl
  40a2e9:	cmp    esp,DWORD PTR [edx+0x65]
  40a2ec:	sbb    al,BYTE PTR [esi+0x7f23746d]
  40a2f2:	or     BYTE PTR [eax],al
  40a2f4:	xchg   bl,dh
  40a2f6:	pop    eax
  40a2f7:	inc    ebp
  40a2f8:	(bad)  
  40a2fa:	dec    ebx
  40a2fb:	inc    ecx
  40a2fc:	retf   0x5ee6
  40a2ff:	pop    edi
  40a300:	mov    ecx,0xc8524bed
  40a305:	fisttp WORD PTR [ecx+0x57]
  40a308:	xchg   al,cl
  40a30a:	jl     0x40a37e
  40a30c:	jmp    0x40a2c8
  40a30e:	push   ebx
  40a30f:	and    bl,ah
  40a311:	aad    0x6c
  40a313:	gs stos BYTE PTR es:[edi],al
  40a315:	jnp    0x40a37e
  40a317:	je     0x40a37f
  40a319:	mov    edx,0x2dbb206a
  40a31e:	ins    BYTE PTR es:[edi],dx
  40a31f:	js     0x40a2d7
  40a321:	inc    edx
  40a322:	inc    esi
  40a323:	gs call 0x4e1b:0x92244f27
  40a32b:	xchg   BYTE PTR [bp+si+0x2b],al
  40a32f:	push   esp
  40a330:	ret    
  40a331:	or     eax,0x358423a
  40a336:	daa    
  40a337:	cmp    eax,DWORD PTR [edx+0xd]
  40a33a:	es inc ecx
  40a33c:	dec    eax
  40a33d:	or     eax,0x16475810
  40a342:	es add al,0x86
  40a345:	inc    edx
  40a346:	pop    ds
  40a347:	pop    esp
  40a348:	arpl   WORD PTR [edx+0xc],sp
  40a34b:	bound  eax,QWORD PTR [eax]
  40a34d:	xor    DWORD PTR [edi],ebx
  40a34f:	push   cs
  40a350:	jne    0x40a3a7
  40a352:	and    eax,DWORD PTR [edi+eiz*2]
  40a355:	popa   
  40a356:	and    DWORD PTR [edi+ebx*2],eax
  40a359:	ss push ds
  40a35b:	push   es
  40a35c:	js     0x40a389
  40a35e:	bound  eax,QWORD PTR [eax]
  40a360:	arpl   WORD PTR [edx],bx
  40a362:	push   ds
  40a363:	shl    DWORD PTR [edx+0x25],0x19
  40a367:	add    ebp,DWORD PTR [edx+0x27]
  40a36a:	sbb    ecx,edi
  40a36c:	data16 sub al,BYTE PTR [edx-0x55]
  40a370:	push   ebx
  40a371:	inc    ebx
  40a372:	or     eax,0x1de145a0
  40a377:	into   
  40a378:	je     0x40a36f
  40a37a:	and    esp,eax
  40a37c:	rcr    WORD PTR [edi],1
  40a37f:	mov    ah,0x5e
  40a381:	neg    BYTE PTR [esi]
  40a383:	xchg   BYTE PTR [edi-0x15],dh
  40a386:	inc    edx
  40a387:	lahf   
  40a388:	pop    ebx
  40a389:	jecxz  0x40a3ed
  40a38b:	mov    WORD PTR [ecx-0x4f],fs
  40a38e:	and    BYTE PTR [edi+eiz*2-0x31],dh
  40a392:	bound  eax,QWORD PTR [eax-0x7ee14d9e]
  40a398:	bound  esp,QWORD PTR [ebp-0x6036f5e9]
  40a39e:	and    DWORD PTR [ebx+0x7d],esp
  40a3a1:	mov    al,ds:0xba310a26
  40a3a6:	add    eax,0xbc42a55
  40a3ab:	push   0xa299e46
  40a3b0:	push   ebp
  40a3b1:	add    BYTE PTR [edx+0x60562a25],ch
  40a3b7:	or     esp,DWORD PTR [edx+0x44]
  40a3ba:	arpl   WORD PTR [esi],sp
  40a3bc:	outs   dx,DWORD PTR ds:[esi]
  40a3bd:	cmp    esi,DWORD PTR [ebp+0xb]
  40a3c0:	imul   edi,DWORD PTR [esi],0xc663267
  40a3c6:	pop    esi
  40a3c7:	and    eax,0x1e630a2a
  40a3cc:	or     bp,WORD PTR [ebx+0x1f]
  40a3d0:	popa   
  40a3d1:	leave  
  40a3d2:	arpl   WORD PTR [ecx],sp
  40a3d4:	arpl   WORD PTR ds:0x310a262f,dx
  40a3da:	push   edx
  40a3db:	add    eax,0xb442a55
  40a3e0:	bound  eax,QWORD PTR [ebx+eiz*1]
  40a3e3:	outs   dx,DWORD PTR es:[esi]
  40a3e5:	fist   DWORD PTR [ebx+ecx*1]
  40a3e8:	imul   ecx,esi,0xcc663226
  40a3ee:	sbb    DWORD PTR ds:0x252dd50a,esp
  40a3f4:	sub    dl,dh
  40a3f6:	jecxz  0x40a403
  40a3f8:	(bad)  
  40a3f9:	(bad)
  40a3fd:	mov    ebx,0xbd6b34c0
  40a402:	out    dx,al
  40a403:	and    eax,0x1eea8a2a
  40a408:	mov    sp,dx
  40a40b:	pop    ds
  40a40c:	popa   
  40a40d:	leave  
  40a40e:	jmp    0x40a431
  40a410:	arpl   WORD PTR [ebp-0x22],di
  40a413:	or     al,BYTE PTR es:[eax]
  40a416:	add    bh,dh
  40a418:	push   cs
  40a419:	dec    edi
  40a41a:	pop    edi
  40a41b:	in     al,dx
  40a41c:	add    BYTE PTR [ebp+0x68],dl
  40a41f:	add    ah,BYTE PTR [esi]
  40a421:	outs   dx,BYTE PTR ds:[esi]
  40a422:	lods   eax,DWORD PTR gs:[esi]
  40a424:	cld    
  40a425:	jnp    0x40a488
  40a427:	mov    ebx,0xb3006f29
  40a42c:	push   cs
  40a42d:	outs   dx,DWORD PTR ds:[esi]
  40a42e:	and    al,cl
  40a430:	or     al,0x55
  40a432:	push   0x656e25c2
  40a437:	mov    ebp,0x42696bfb
  40a43c:	and    ch,BYTE PTR [esi+0x20]
  40a43f:	cmp    al,0x25
  40a441:	data16 ins BYTE PTR es:[edi],dx
  40a443:	cmp    eax,0xcf6b6925
  40a448:	and    al,0x6b
  40a44a:	imul   ecx,DWORD PTR [ebx-0x58ff91e7],0x9c5f4f16
  40a454:	add    BYTE PTR [ebp+0x68],dl
  40a457:	xchg   edx,eax
  40a458:	and    eax,0xfbbd656e
  40a45d:	imul   ebp,DWORD PTR [ecx-0x7e],0x22
  40a461:	outs   dx,BYTE PTR ds:[esi]
  40a462:	add    BYTE PTR [ebx-0x47df90fa],dh
  40a468:	or     al,0x55
  40a46a:	jne    0x40a429
  40a46c:	or     ch,BYTE PTR [edx]
  40a46e:	arpl   WORD PTR [esi-0x419d99f6],di
  40a474:	pop    ds
  40a475:	popa   
  40a476:	and    BYTE PTR [ecx+0x1f],dl
  40a479:	arpl   WORD PTR [eax+eax*1+0x42],bp
  40a47d:	and    cl,BYTE PTR [edx]
  40a47f:	add    BYTE PTR [edi],ah
  40a481:	push   ss
  40a482:	dec    edi
  40a483:	pop    edi
  40a484:	sbb    al,0x4
  40a486:	push   ebp
  40a487:	jne    0x40a486
  40a489:	or     DWORD PTR [edx],ecx
  40a48b:	add    bl,dh
  40a48d:	or     eax,0xc086206f
  40a492:	push   esi
  40a493:	pop    edi
  40a494:	fstp   TBYTE PTR [esi-0x47588c89]
  40a49a:	popa   
  40a49b:	pop    edi
  40a49c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a49d:	mov    esi,0x7ba0696b
  40a4a2:	addr16 popa 
  40a4a4:	call   0x2e14:0xa5616b27
  40a4ab:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40a4ad:	adc    ch,BYTE PTR [edx+0x65]
  40a4b0:	stos   BYTE PTR es:[edi],al
  40a4b1:	fwait
  40a4b2:	or     BYTE PTR [eax],al
  40a4b4:	xchg   BYTE PTR [ebx+0x5e],ah
  40a4b7:	inc    ebp
  40a4b8:	popa   
  40a4b9:	pop    esp
  40a4ba:	dec    eax
  40a4bb:	pop    edi
  40a4bc:	imul   edi,esi,0x7a
  40a4bf:	jae    0x40a528
  40a4c1:	clc    
  40a4c2:	ins    BYTE PTR es:[edi],dx
  40a4c3:	pop    edi
  40a4c4:	fs (bad) 
  40a4c6:	outs   dx,BYTE PTR ds:[esi]
  40a4c7:	imul   esi,DWORD PTR [eax-0x65],0x4c860008
  40a4ce:	jge    0x40a533
  40a4d0:	gs ss jnp 0x40a547
  40a4d4:	xchg   BYTE PTR [ebx+0x5e],ah
  40a4d7:	inc    ebp
  40a4d8:	popa   
  40a4d9:	jo     0x40a50e
  40a4db:	add    BYTE PTR [esi+0x54494b],al
  40a4e1:	inc    ebp
  40a4e2:	arpl   WORD PTR [esi],cx
  40a4e4:	add    BYTE PTR [esi+0x3b53344e],al
  40a4ea:	fstp   QWORD PTR [ecx+0x43]
  40a4ed:	xor    al,0xf2
  40a4ef:	dec    edx
  40a4f0:	inc    ebp
  40a4f1:	xchg   ah,ch
  40a4f3:	pop    ebx
  40a4f4:	inc    edx
  40a4f5:	xor    eax,0xc4495adc
  40a4fa:	(bad)  
  40a4fb:	or     BYTE PTR [eax],al
  40a4fd:	xchg   cl,bl
  40a4ff:	xor    eax,0x3fd9bf54
  40a504:	add    BYTE PTR [esi-0x34acec3a],al
  40a50a:	inc    edx
  40a50b:	mov    ds:0xe2fac551,al
  40a510:	add    eax,DWORD PTR [esi-0x4bb951be]
  40a516:	add    DWORD PTR [esi-0x5fbd79fd],ebp
  40a51c:	cmp    eax,ebx
  40a51e:	add    eax,0xedb3cb8
  40a523:	jecxz  0x40a528
  40a525:	xchg   BYTE PTR [edx-0x6a],al
  40a528:	cmp    bh,al
  40a52a:	add    eax,0xfbb03b37
  40a52f:	ds dec ebx
  40a531:	xchg   BYTE PTR [edx+0x31],al
  40a534:	inc    edi
  40a535:	mov    dh,0xf9
  40a537:	xor    BYTE PTR [eax-0x7a],bl
  40a53a:	inc    edx
  40a53b:	push   ss
  40a53c:	ds dec edx
  40a53e:	stc    
  40a53f:	pop    ds
  40a540:	cmp    DWORD PTR [esi+0x521342],eax
  40a546:	cmp    DWORD PTR [edx],edx
  40a548:	adc    eax,DWORD PTR [ebx+0x3a]
  40a54b:	add    eax,0x4286043b
  40a550:	xor    edx,DWORD PTR [edx+0x41]
  40a553:	adc    ah,BYTE PTR ds:0xe2fe383b
  40a559:	add    eax,DWORD PTR [esi+0x503d3e42]
  40a55f:	jmp    edx
  40a561:	add    eax,DWORD PTR [esi+0x45392e42]
  40a567:	stc    
  40a568:	push   ss
  40a569:	add    al,0x86
  40a56b:	inc    edx
  40a56c:	mov    edi,0xe2fd453c
  40a571:	add    eax,DWORD PTR [esi+0x363ca042]
  40a577:	or     esp,ebx
  40a579:	add    eax,DWORD PTR [esi-0x38ae68be]
  40a57f:	add    ebp,DWORD PTR [esi+0xa428603]
  40a585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a586:	aad    0xe
  40a588:	inc    ebx
  40a589:	sahf   
  40a58a:	mov    ds:0x9aaa0a13,eax
  40a58f:	clc    
  40a590:	inc    ebx
  40a591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a592:	(bad)  
  40a593:	push   cs
  40a594:	or     bh,BYTE PTR [ecx-0x5ef5f150]
  40a59a:	enter  0x4e01,0xe9
  40a59e:	test   DWORD PTR [edx+0xa],eax
  40a5a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5a2:	enter  0x4ef6,0x9d
  40a5a6:	rol    BYTE PTR [edx+0xa],0x8a
  40a5aa:	add    dl,al
  40a5ac:	sbb    BYTE PTR [esp+ecx*2-0x5f],ah
  40a5b0:	arpl   WORD PTR cs:[esi-0x54],cx
  40a5b4:	inc    edx
  40a5b5:	or     bl,BYTE PTR [ecx-0x70]
  40a5b8:	pop    ss
  40a5b9:	jb     0x40a60b
  40a5bb:	lahf   
  40a5bc:	and    esp,DWORD PTR [ebp+0x57]
  40a5bf:	pop    esp
  40a5c0:	sbb    eax,0x17533569
  40a5c5:	fs jmp 0x4a4ae850
  40a5cb:	cmp    eax,0x3c0c7e18
  40a5d0:	cs daa 
  40a5d2:	or     eax,0x1d6d1867
  40a5d7:	sub    al,BYTE PTR [edx+0xa]
  40a5da:	adc    eax,0xfa642138
  40a5df:	daa    
  40a5e0:	sbb    eax,0x1826cc78
  40a5e5:	imul   eax,DWORD PTR [esi],0x6641926
  40a5eb:	mov    al,BYTE PTR [edx+0xa]
  40a5ee:	fcom   QWORD PTR ds:0x31c8781f
  40a5f4:	sbb    eax,0x2d2dca0a
  40a5f9:	fs ret 0x1ee6
  40a5fd:	or     al,BYTE PTR [eax]
  40a5ff:	push   esp
  40a600:	and    ch,BYTE PTR [edi+0x70]
  40a603:	sbb    BYTE PTR ds:0x22296966,0xa
  40a60a:	add    BYTE PTR [edi+ecx*1+0x65],cl
  40a60e:	jae    0x40a610
  40a610:	or     al,BYTE PTR [ebx+0xa]
  40a613:	add    BYTE PTR [ebx],bl
  40a615:	fmul   DWORD PTR [edx+0x0]
  40a618:	in     al,dx
  40a619:	fisttp DWORD PTR [edx+0x0]
  40a61c:	pusha  
  40a61d:	or     DWORD PTR [edx+0x0],0xffffffbe
  40a621:	jle    0x40a66d
  40a623:	add    BYTE PTR [ecx-0x5affb583],ch
  40a629:	jge    0x40a675
  40a62b:	add    al,ch
  40a62d:	inc    edx
  40a62e:	data16 add BYTE PTR [eax-0x41ff97c2],dh
  40a635:	data16 add BYTE PTR ds:[ebx+0x3e],dl
  40a63a:	or     al,BYTE PTR [eax]
  40a63c:	mov    ds:0x4c00653e,eax
  40a641:	imul   eax,DWORD PTR ds:[eax],0x43
  40a645:	ds push esi
  40a647:	add    bh,bl
  40a649:	inc    edx
  40a64a:	or     al,BYTE PTR [eax]
  40a64c:	inc    edi
  40a64d:	xor    bh,BYTE PTR [esi+0x70]
  40a650:	in     eax,0x4b
  40a652:	and    eax,0x24337877
  40a657:	bound  eax,QWORD PTR [esi-0x73d192f4]
  40a65d:	or     esp,DWORD PTR [edi+0x2f]
  40a660:	scas   eax,DWORD PTR es:[edi]
  40a661:	inc    edx
  40a662:	or     al,BYTE PTR [eax]
  40a664:	xchg   edi,eax
  40a665:	xor    bh,BYTE PTR [esi+0x70]
  40a668:	cmc    
  40a669:	dec    ebx
  40a66a:	and    eax,0x24339877
  40a66f:	addr16 mov al,0xb
  40a672:	ins    DWORD PTR es:[edi],dx
  40a673:	ins    BYTE PTR es:[edi],dx
  40a674:	add    dl,cl
  40a676:	dec    eax
  40a677:	imul   ebp,DWORD PTR [edi-0x7a],0x86000f7e
  40a67e:	inc    edi
  40a67f:	test   DWORD PTR [edi],edi
  40a681:	xchg   BYTE PTR [edi],ah
  40a683:	test   DWORD PTR [edi],edi
  40a685:	xchg   al,cl
  40a687:	or     BYTE PTR [ebp-0x7a],ah
  40a68a:	(bad)  
  40a68b:	or     BYTE PTR [ebx-0x7a],ah
  40a68e:	jns    0x40a698
  40a690:	push   eax
  40a691:	xchg   cl,cl
  40a693:	or     BYTE PTR [ecx-0x7a],ch
  40a696:	int    0x8
  40a698:	imul   eax,DWORD PTR [esi-0x799af741],0x866508bc
  40a6a2:	fwait
  40a6a3:	or     BYTE PTR [eax],al
  40a6a5:	xchg   BYTE PTR [ebp+0x8],dh
  40a6a8:	xchg   BYTE PTR gs:[ebx],dh
  40a6ab:	or     DWORD PTR [ebp-0x7a],esp
  40a6ae:	fwait
  40a6af:	or     BYTE PTR [eax],al
  40a6b1:	xchg   dl,cl
  40a6b3:	stc    
  40a6b4:	inc    ecx
  40a6b5:	xchg   BYTE PTR [ebx+0x65860008],bl
  40a6bb:	ja     0x40a6ad
  40a6bd:	leave  
  40a6be:	popf   
  40a6bf:	or     BYTE PTR [ebp+0x46],0x9b
  40a6c3:	rol    BYTE PTR [eax-0x58],1
  40a6c6:	cdq    
  40a6c7:	or     dh,dh
  40a6c9:	inc    edx
  40a6ca:	aaa    
  40a6cb:	test   BYTE PTR [eax],0x5a
  40a6ce:	popf   
  40a6cf:	pop    edx
  40a6d0:	call   0x49587e
  40a6d5:	std    
  40a6d6:	fnstsw WORD PTR [edi]
  40a6d8:	ret    0x8200
  40a6db:	fwait
  40a6dc:	inc    ebx
  40a6dd:	mov    esi,DWORD PTR [edx-0x78f42de6]
  40a6e3:	fwait
  40a6e4:	or     BYTE PTR [ebx+0x58],dl
  40a6e7:	dec    esp
  40a6e8:	ja     0x40a6e1
  40a6ea:	add    eax,0x40f122d
  40a6ef:	femms  
  40a6f1:	add    BYTE PTR [esi+0x1e96242],al
  40a6f7:	inc    eax
  40a6f8:	jecxz  0x40a6fd
  40a6fa:	jns    0x40a6b1
  40a6fc:	imul   eax,DWORD PTR [esi+eax*4],0x8e476842
  40a703:	mov    edi,0x35837027
  40a708:	jl     0x40a70f
  40a70a:	add    eax,0x8b6fe0aa
  40a70f:	sar    DWORD PTR [edx],0x11
  40a712:	shr    DWORD PTR [edi],cl
  40a714:	js     0x40a785
  40a716:	cmp    BYTE PTR [ebp+0x6d],0xec
  40a71a:	dec    ebx
  40a71b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a71c:	sbb    eax,DWORD PTR [eax]
  40a71e:	xchg   BYTE PTR [edx-0x1d],al
  40a721:	jle    0x40a75b
  40a723:	cs cld 
  40a725:	jl     0x40a77f
  40a727:	mov    ecx,0xaa027724
  40a72c:	cld    
  40a72d:	call   0x75ea4152
  40a732:	xchg   DWORD PTR [edx+0x63],eax
  40a735:	sub    DWORD PTR [esi-0x2c06ccd2],eax
  40a73b:	sti    
  40a73c:	loopne 0x40a7b4
  40a73e:	add    BYTE PTR [eax-0x72],dl
  40a741:	pop    ss
  40a742:	mov    esp,0xbc5aff77
  40a747:	icebp  
  40a748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a749:	loop   0x40a726
  40a74b:	adc    DWORD PTR [ebx],edi
  40a74d:	jecxz  0x40a752
  40a74f:	or     eax,0x55f16db2
  40a754:	push   ecx
  40a755:	fwait
  40a756:	popa   
  40a757:	stos   DWORD PTR es:[edi],eax
  40a758:	inc    eax
  40a759:	jecxz  0x40a78f
  40a75b:	(bad)  
  40a75c:	jl     0x40a742
  40a75e:	mov    edx,DWORD PTR [ebx+0x2]
  40a761:	jecxz  0x40a7c4
  40a763:	paddb  mm7,QWORD PTR [edx]
  40a766:	fld    QWORD PTR [edi-0x4c81828f]
  40a76c:	sub    eax,0xa536d50a
  40a771:	jle    0x40a750
  40a773:	daa    
  40a774:	mov    ebx,0xaaadfd73
  40a779:	add    ch,cl
  40a77b:	test   DWORD PTR [ebx-0x1bff06b5],edi
  40a781:	jle    0x40a77b
  40a783:	cli    
  40a784:	cmp    eax,0x75f2e860
  40a789:	hlt    
  40a78a:	fnstenv [edx-0x2d68ab7e]
  40a790:	jns    0x40a759
  40a792:	loope  0x40a719
  40a794:	mov    bh,0x36
  40a796:	fnstenv [edi+0x2]
  40a799:	or     ah,BYTE PTR [edx+edi*1+0x30]
  40a79d:	sub    al,0x81
  40a79f:	add    eax,0xe9f4a4
  40a7a4:	mov    al,0x5
  40a7a6:	inc    edx
  40a7a7:	xchg   ebx,eax
  40a7a8:	test   DWORD PTR [edi],ecx
  40a7aa:	cmc    
  40a7ab:	aam    0x59
  40a7ad:	dec    esp
  40a7ae:	dec    edx
  40a7af:	jmp    0x6a42a656
  40a7b4:	fnstenv [edi]
  40a7b6:	loop   0x40a7bd
  40a7b8:	in     eax,0xa3
  40a7ba:	hlt    
  40a7bb:	cmp    DWORD PTR [ecx],esp
  40a7bd:	das    
  40a7be:	add    bh,BYTE PTR [edx]
  40a7c0:	jmp    0xfee63051
  40a7c5:	sbb    DWORD PTR [esi],esp
  40a7c7:	(bad)  
  40a7c8:	ja     0x40a800
  40a7ca:	xchg   DWORD PTR [edi],esp
  40a7cc:	js     0x40a7e0
  40a7ce:	cmc    
  40a7cf:	sahf   
  40a7d0:	add    eax,0x18620580
  40a7d5:	cdq    
  40a7d6:	mov    esp,0x5d0c373a
  40a7db:	jb     0x40a7af
  40a7dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7de:	jnp    0x40a7d9
  40a7e0:	cmp    al,0xaa
  40a7e2:	loope  0x40a7af
  40a7e4:	mov    edx,0x3400f4a3
  40a7e9:	arpl   WORD PTR [edx],bx
  40a7eb:	mov    edi,DWORD PTR [edx-0x50bfe391]
  40a7f1:	es dec edi
  40a7f3:	adc    BYTE PTR [ecx-0x3eebb3d9],al
  40a7f9:	es dec edi
  40a7fb:	adc    al,0x1c
  40a7fd:	add    ebx,DWORD PTR [edx]
  40a7ff:	add    BYTE PTR [esi+edi*2+0x3f6f806c],bl
  40a806:	or     ah,BYTE PTR [esi+0x0]
  40a809:	mul    BYTE PTR [ebx+0x1e]
  40a80c:	lea    ecx,[eax]
  40a80e:	xchg   DWORD PTR [bp+0x27],eax
  40a812:	adc    BYTE PTR [edx-0x1],bl
  40a815:	jb     0x40a886
  40a817:	retf   0x3b6a
  40a81a:	add    eax,0x14680383
  40a81f:	sbb    al,BYTE PTR [ebx-0xa3cb8f]
  40a825:	jb     0x40a82f
  40a827:	es push 0x1f
  40a82a:	ror    bl,0x16
  40a82d:	adc    BYTE PTR [ebp+ebx*1+0x9ff4134],bl
  40a834:	and    DWORD PTR [ebx+0x62],0x55
  40a838:	pop    esi
  40a839:	retf   0xc8f7
  40a83c:	push   ebp
  40a83d:	xchg   esp,eax
  40a83e:	mov    edi,DWORD PTR [edi+0x45]
  40a841:	out    0xbf,eax
  40a843:	loopne 0x40a851
  40a845:	mov    esp,0xf76a5cf4
  40a84a:	sub    DWORD PTR [esi-0x4],edi
  40a84d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a84e:	xchg   BYTE PTR [edx+0x393eed5b],cl
  40a854:	call   esp
  40a856:	jecxz  0x40a8d5
  40a858:	arpl   si,sp
  40a85a:	sbb    esi,esi
  40a85c:	jle    0x40a8a2
  40a85e:	daa    
  40a85f:	dec    esi
  40a860:	or     BYTE PTR [esi+0x338cf53f],al
  40a866:	sar    DWORD PTR [edi],1
  40a868:	call   0x49088c
  40a86d:	add    BYTE PTR [ebp-0x24],ch
  40a870:	jns    0x40a8be
  40a872:	or     eax,0x8f69f656
  40a877:	push   es
  40a878:	jp     0x40a882
  40a87a:	sub    eax,0x845b4411
  40a87f:	cdq    
  40a880:	pop    ds
  40a881:	(bad)  
  40a882:	sti    
  40a883:	xor    eax,0xad7a4471
  40a888:	mov    bl,0x98
  40a88a:	popf   
  40a88b:	ins    DWORD PTR es:[edi],dx
  40a88c:	jo     0x40a865
  40a88e:	push   edi
  40a88f:	add    eax,0xc891f270
  40a894:	jns    0x40a88e
  40a896:	test   esi,edx
  40a898:	lock mov eax,cs
  40a89b:	lods   eax,DWORD PTR ds:[esi]
  40a89c:	pop    eax
  40a89d:	call   ebx
  40a89f:	scas   eax,DWORD PTR es:[edi]
  40a8a0:	jmp    0x40a8b6
  40a8a2:	jle    0x40a845
  40a8a4:	dec    eax
  40a8a5:	add    bh,bl
  40a8a7:	ror    BYTE PTR [ecx+0x6ea2babf],cl
  40a8ad:	add    eax,0xeb0dc4fb
  40a8b2:	test   DWORD PTR [edx],esp
  40a8b4:	inc    edx
  40a8b5:	cld    
  40a8b6:	pop    edi
  40a8b7:	cs in  eax,dx
  40a8b9:	jle    0x40a8fa
  40a8bb:	mul    al
  40a8bd:	push   edi
  40a8be:	test   eax,0xc4c94361
  40a8c3:	mov    ds:0xaa300f08,eax
  40a8c8:	std    
  40a8c9:	mov    ch,0x40
  40a8cb:	stos   BYTE PTR es:[edi],al
  40a8cc:	(bad)  
  40a8cd:	fistp  QWORD PTR [esi-0x54]
  40a8d0:	(bad)  
  40a8d1:	jmp    0x8224:0x49e1ed00
  40a8d8:	stos   BYTE PTR es:[edi],al
  40a8d9:	inc    esi
  40a8da:	mov    edx,edi
  40a8dc:	inc    edx
  40a8dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8de:	(bad)  
  40a8df:	in     eax,dx
  40a8e0:	adc    BYTE PTR [ebx],ah
  40a8e2:	add    al,0x3a
  40a8e4:	dec    eax
  40a8e5:	xor    eax,0xe34a65dc
  40a8ea:	add    edi,ebp
  40a8ec:	mov    BYTE PTR [edx+eax*8],ch
  40a8ef:	test   DWORD PTR [edx+0x1c],eax
  40a8f2:	ja     0x40a93f
  40a8f4:	inc    esi
  40a8f5:	adc    esp,ebp
  40a8f7:	jb     0x40a92f
  40a8f9:	rol    BYTE PTR [ebx-0x7a],1
  40a8fc:	int    0x6a
  40a8fe:	jg     0x40a888
  40a900:	pop    ss
  40a901:	out    0x7e,eax
  40a903:	jnp    0x40a91b
  40a905:	jmp    0x40a97f
  40a907:	sub    DWORD PTR [edx+eiz*8],0x78
  40a90b:	inc    ebx
  40a90c:	mov    eax,ds:0x14078d2
  40a911:	and    BYTE PTR [ecx],dh
  40a913:	inc    esi
  40a914:	test   DWORD PTR [ebp+0x4ec56d78],edx
  40a91a:	in     al,dx
  40a91b:	add    al,0xae
  40a91d:	xchg   BYTE PTR [eax-0x3],dl
  40a920:	jnp    0x40a935
  40a922:	inc    ecx
  40a923:	xchg   edx,eax
  40a924:	ret    0xfb97
  40a927:	xchg   ch,cl
  40a929:	lahf   
  40a92a:	neg    ebx
  40a92c:	stc    
  40a92d:	ja     0x40a922
  40a92f:	mov    dl,0x4f
  40a931:	pusha  
  40a932:	in     al,dx
  40a933:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a934:	sbb    bl,ch
  40a936:	pop    ecx
  40a937:	add    BYTE PTR [edx+edi*8-0x5eee1bf7],al
  40a93e:	loop   0x40a999
  40a940:	jp     0x40a911
  40a942:	push   esi
  40a943:	and    BYTE PTR [esi+0x5bbacafa],ah
  40a949:	inc    ebx
  40a94a:	jecxz  0x40a999
  40a94c:	std    
  40a94d:	mov    BYTE PTR [edx],dl
  40a94f:	pop    edx
  40a950:	inc    esp
  40a951:	add    DWORD PTR [esi+0x6f],esp
  40a954:	stos   BYTE PTR es:[edi],al
  40a955:	push   edx
  40a956:	or     al,cl
  40a958:	ror    BYTE PTR [ebx],0xa
  40a95b:	jmp    0xa9cfa49c
  40a960:	bound  ecx,QWORD PTR [edx+0x39]
  40a963:	test   eax,0xe9bbab45
  40a968:	test   DWORD PTR [edx+0x39],eax
  40a96b:	mov    ?,WORD PTR [edx-0x7]
  40a96e:	xchg   BYTE PTR ds:0xba5a6e66,ch
  40a974:	mov    bl,0xcd
  40a976:	dec    ebp
  40a977:	int    0x79
  40a979:	repnz xor ch,0x71
  40a97d:	push   0xffffff83
  40a97f:	(bad)  [ecx+0x6e]
  40a982:	adc    ebp,0xffffffa1
  40a985:	push   edx
  40a986:	loop   0x40a97d
  40a988:	and    BYTE PTR [eax-0x30ba9a0c],ah
  40a98e:	dec    ebp
  40a98f:	or     eax,0x6b8e4f7e
  40a994:	test   DWORD PTR [edx+0xa],eax
  40a997:	ss xchg esi,eax
  40a999:	xacquire xchg BYTE PTR [ebp-0x1dc18f00],ah
  40a9a0:	mov    bl,BYTE PTR [esi]
  40a9a2:	mov    al,ds:0x144565f4
  40a9a7:	fs push ss
  40a9a9:	test   eax,0x71621e66
  40a9ae:	pushw  ss
  40a9b0:	adc    DWORD PTR [edx+0x3a],esp
  40a9b3:	or     ch,cl
  40a9b5:	jl     0x40a9bd
  40a9b7:	shr    DWORD PTR cs:[esi-0x78],1
  40a9bb:	jae    0x40a956
  40a9bd:	mov    es,WORD PTR [ebx]
  40a9bf:	add    DWORD PTR cs:[eax-0x3c44c693],ebx
  40a9c6:	xchg   edi,eax
  40a9c7:	cli    
  40a9c8:	adc    bh,BYTE PTR [edi+edx*1]
  40a9cb:	dec    ebx
  40a9cc:	pusha  
  40a9cd:	dec    esi
  40a9ce:	data16 sbb al,BYTE PTR [eax]
  40a9d1:	test   BYTE PTR [esi+edi*2+0x2e22541c],cl
  40a9d8:	adc    al,0x64
  40a9da:	jbe    0x40a9cf
  40a9dc:	jae    0x40a9c9
  40a9de:	stos   DWORD PTR es:[edi],eax
  40a9df:	int3   
  40a9e0:	fild   WORD PTR ss:[ebx-0x72]
  40a9e4:	rcr    BYTE PTR [ebx-0x34bb0ab6],0x93
  40a9eb:	xchg   edi,eax
  40a9ed:	repnz icebp 
  40a9ef:	jle    0x40a9db
  40a9f1:	add    bl,bh
  40a9f3:	sub    eax,0xb9df714
  40a9f8:	add    BYTE PTR [edi-0x3cdbb74e],ch
  40a9fe:	stos   DWORD PTR es:[edi],eax
  40a9ff:	imul   edi,DWORD PTR [ecx+0x39439f00],0xffffffc0
  40aa06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa07:	cli    
  40aa08:	sub    eax,0xb5176010
  40aa0d:	jmp    0x40aa8a
  40aa0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa10:	js     0x40aa36
  40aa12:	dec    ebx
  40aa13:	stos   DWORD PTR es:[edi],eax
  40aa14:	lock push es
  40aa16:	outs   dx,DWORD PTR ds:[esi]
  40aa17:	inc    ebx
  40aa18:	xchg   DWORD PTR [ebx+ecx*4+0x42],eax
  40aa1c:	loop   0x40aa68
  40aa1e:	(bad)  
  40aa1f:	inc    esi
  40aa20:	or     cl,BYTE PTR [ebx+0x5b540398]
  40aa26:	mov    ah,0xa9
  40aa28:	push   ebp
  40aa29:	ret    
  40aa2a:	cli    
  40aa2b:	iret   
  40aa2c:	loopne 0x40a9af
  40aa2e:	xor    ebx,DWORD PTR [edi+0xc]
  40aa31:	add    BYTE PTR [edi],bl
  40aa33:	pop    eax
  40aa34:	cmp    ebx,ebx
  40aa36:	stc    
  40aa37:	pop    ebx
  40aa38:	sbb    DWORD PTR [ebp-0x71],0xffffffcd
  40aa3c:	push   ebp
  40aa3d:	in     al,0xa6
  40aa3f:	add    edx,edi
  40aa41:	mov    edx,eax
  40aa43:	jp     0x40a9c6
  40aa45:	pop    ebp
  40aa46:	sub    ecx,esi
  40aa48:	push   ebp
  40aa49:	enter  0x2286,0x4a
  40aa4d:	aam    0xad
  40aa4f:	in     al,dx
  40aa50:	pop    esp
  40aa51:	dec    esi
  40aa52:	jns    0x40aa6b
  40aa54:	jb     0x40aa55
  40aa56:	loope  0x40aa00
  40aa58:	mov    esi,edi
  40aa5a:	test   BYTE PTR [edi-0x10],dl
  40aa5d:	or     dh,0xab
  40aa60:	pop    ss
  40aa61:	test   DWORD PTR [ecx],eax
  40aa63:	test   eax,0xc1000008
  40aa68:	xor    eax,0xb9438d1a
  40aa6d:	loopne 0x40aa85
  40aa6f:	jnp    0x40aa1a
  40aa71:	or     bl,ch
  40aa73:	sub    al,0x14
  40aa75:	pop    edx
  40aa76:	or     BYTE PTR ds:0xf8b0252,cl
  40aa7c:	and    eax,0x2c86000e
  40aa81:	rol    DWORD PTR [ecx],1
  40aa83:	jns    0x40aaa2
  40aa85:	leave  
  40aa86:	xchg   ebx,ecx
  40aa88:	mov    bh,0x99
  40aa8a:	inc    esp
  40aa8b:	sub    bl,ah
  40aa8d:	cdq    
  40aa8e:	push   esp
  40aa8f:	jbe    0x40aa6c
  40aa91:	test   DWORD PTR [edx+ebx*1+0x13],ecx
  40aa95:	xor    dh,BYTE PTR [eax-0x186f40f1]
  40aa9b:	adc    BYTE PTR [ebp-0x40a2fff2],0x99
  40aaa2:	mov    esp,0xfee8631e
  40aaa7:	cs add bl,dh
  40aaaa:	(bad)  
  40aaab:	cmp    DWORD PTR [edi],esp
  40aaad:	stos   BYTE PTR es:[edi],al
  40aaae:	xlat   BYTE PTR ds:[ebx]
  40aaaf:	das    
  40aab0:	dec    ebp
  40aab1:	call   0xfd746e7c
  40aab6:	jmp    DWORD PTR [ecx]
  40aab8:	lods   al,BYTE PTR ds:[esi]
  40aab9:	cdq    
  40aaba:	mov    ah,0xaa
  40aabc:	xchg   esp,eax
  40aabd:	jmp    0x8600:0x15fb1efe
  40aac4:	inc    edx
  40aac5:	pop    ecx
  40aac6:	add    ecx,DWORD PTR ds:0x4f6585
  40aacc:	imul   BYTE PTR [edx+0x4286176a]
  40aad2:	pusha  
  40aad3:	leave  
  40aad4:	call   0x5aa3:0x5aec3d9d
  40aadb:	mov    WORD PTR [edx+0xa8ee342],es
  40aae1:	jmp    0x40aa9c
  40aae3:	loope  0x40aaad
  40aae5:	icebp  
  40aae6:	xor    ah,cl
  40aae8:	call   0xa6c1:0x8643fd56
  40aaef:	adc    BYTE PTR [ebx+eax*2],bl
  40aaf2:	push   esi
  40aaf3:	inc    edi
  40aaf4:	mov    dh,0xf2
  40aaf6:	ja     0x40ab3f
  40aaf8:	mov    cs,ecx
  40aafa:	sub    cl,BYTE PTR [eax]
  40aafc:	scas   al,BYTE PTR es:[edi]
  40aafd:	or     al,0x27
  40aaff:	add    eax,DWORD PTR [esi+0x131b7d51]
  40ab05:	xchg   esi,eax
  40ab06:	aad    0xfc
  40ab08:	fld    TBYTE PTR [edx+0x428609f8]
  40ab0e:	pop    esp
  40ab0f:	push   edi
  40ab10:	jbe    0x40aabc
  40ab12:	loopne 0x40ab1d
  40ab14:	xchg   BYTE PTR [edx-0x6b],al
  40ab17:	jmp    0x40ab76
  40ab19:	inc    edi
  40ab1a:	jecxz  0x40ab1f
  40ab1c:	xchg   esp,eax
  40ab1d:	or     BYTE PTR [ecx-0x47],0x87
  40ab21:	inc    edx
  40ab22:	jecxz  0x40aaae
  40ab24:	sar    BYTE PTR [esi+0x79],cl
  40ab27:	push   edi
  40ab28:	xor    ch,BYTE PTR [edx+0x42861c3a]
  40ab2e:	push   0x47
  40ab30:	add    dl,dh
  40ab32:	rol    BYTE PTR [ebp-0x5a7b7919],0xe0
  40ab39:	and    DWORD PTR [esi],ebx
  40ab3b:	out    dx,al
  40ab3c:	mov    edx,es
  40ab3e:	xchg   esi,eax
  40ab3f:	or     DWORD PTR [edx],eax
  40ab41:	mov    ebp,DWORD PTR [eax]
  40ab43:	or     al,0x91
  40ab45:	cld    
  40ab46:	add    eax,0xaa5870da
  40ab4b:	xor    dl,BYTE PTR [esi+ebx*8+0x4b]
  40ab4f:	test   BYTE PTR [eax],ch
  40ab51:	mov    BYTE PTR [edx+0xa],al
  40ab54:	bound  ebp,QWORD PTR [eax-0x265d9f52]
  40ab5a:	leave  
  40ab5b:	push   esi
  40ab5c:	mov    eax,ds:0xf0c6160c
  40ab61:	cmp    BYTE PTR [edx+0x4],dh
  40ab64:	pop    edi
  40ab65:	cdq    
  40ab66:	inc    eax
  40ab67:	or     ch,cl
  40ab69:	adc    al,BYTE PTR [esi]
  40ab6b:	add    dh,BYTE PTR [edx+0x45]
  40ab6e:	inc    esi
  40ab6f:	loop   0x40ab33
  40ab71:	dec    eax
  40ab72:	inc    ebx
  40ab73:	or     ah,BYTE PTR [ebp-0x3b]
  40ab76:	dec    ebx
  40ab77:	mov    fs,eax
  40ab79:	mov    eax,DWORD PTR [edx+0xa]
  40ab7c:	jb     0x40abb6
  40ab7e:	mov    cs,WORD PTR [eax]
  40ab80:	hlt    
  40ab81:	mov    ch,0xc9
  40ab83:	jle    0x40abf6
  40ab85:	cld    
  40ab86:	sbb    eax,0xaed920ae
  40ab8b:	jnp    0x40ab93
  40ab8d:	or     edx,DWORD PTR [edi]
  40ab8f:	(bad)  
  40ab90:	ret    
  40ab91:	jns    0x40ab62
  40ab93:	dec    esp
  40ab94:	loope  0x40ab96
  40ab96:	scas   eax,DWORD PTR es:[edi]
  40ab97:	repnz hlt 
  40ab99:	fadd   QWORD PTR [ecx+0x2e94a34]
  40ab9f:	add    BYTE PTR ds:0x410456c,0x2e
  40aba6:	rcr    BYTE PTR [edx-0x3ea25380],0xcb
  40abad:	cmc    
  40abae:	call   0xfc51:0x479be605
  40abb5:	(bad)  
  40abb6:	shr    BYTE PTR [esi+0x77f20032],0x3
  40abbd:	test   DWORD PTR [ebp+0x40],ebp
  40abc0:	or     al,BYTE PTR [eax]
  40abc2:	ficomp DWORD PTR [ecx]
  40abc4:	cmc    
  40abc5:	call   FWORD PTR [edi]
  40abc7:	xor    ecx,DWORD PTR [ecx+0xa3feeca]
  40abcd:	lea    esi,[edx+ebx*4-0x50c48a7b]
  40abd4:	mov    al,BYTE PTR [edi+ebx*8]
  40abd7:	aas    
  40abd8:	mov    es,eax
  40abda:	mov    ds:0x6a14629c,eax
  40abdf:	add    eax,DWORD PTR [edx]
  40abe1:	push   eax
  40abe2:	fs or  esi,edx
  40abe5:	add    ebx,DWORD PTR [edi+edx*2]
  40abe8:	cmc    
  40abe9:	adc    eax,0x3495df
  40abee:	sub    al,0x8a
  40abf0:	add    bh,bh
  40abf2:	bound  edx,QWORD PTR [edx-0x314c3c79]
  40abf8:	push   ebp
  40abf9:	fadd   DWORD PTR [eax]
  40abfb:	sbb    bl,BYTE PTR [ebx+0x2]
  40abfe:	push   ebx
  40abff:	sub    bh,cl
  40ac01:	jmp    0xed2f268f
  40ac06:	je     0x40abd9
  40ac08:	aas    
  40ac09:	or     al,BYTE PTR [ebp+0x6e834baf]
  40ac0f:	outs   dx,BYTE PTR ds:[esi]
  40ac10:	aas    
  40ac11:	or     dl,BYTE PTR [ebx-0x39]
  40ac14:	arpl   WORD PTR [edx],si
  40ac16:	add    BYTE PTR [edi-0x3d],bl
  40ac19:	mov    ah,0xf
  40ac1b:	repnz or eax,DWORD PTR es:[eax]
  40ac1f:	outs   dx,DWORD PTR ds:[esi]
  40ac20:	enter  0x8bcb,0xa9
  40ac24:	scas   al,BYTE PTR es:[edi]
  40ac25:	out    0x32,eax
  40ac27:	pop    edi
  40ac28:	aas    
  40ac29:	mov    es,eax
  40ac2b:	cmp    dl,cl
  40ac2d:	inc    ebx
  40ac2e:	add    DWORD PTR [edi],ebp
  40ac30:	aas    
  40ac31:	mov    DWORD PTR [ebp-0x7a],ecx
  40ac34:	imul   edx,ebp,0x1845ab82
  40ac3a:	jl     0x40acb7
  40ac3c:	inc    esp
  40ac3d:	push   ebx
  40ac3e:	mov    esp,0xdee6680d
  40ac43:	pop    ebx
  40ac44:	test   eax,0x69c38908
  40ac49:	cmp    DWORD PTR [edi+0x1191191],0xffffff86
  40ac50:	test   eax,0x207e447f
  40ac55:	dec    ecx
  40ac56:	add    al,0xfd
  40ac58:	mov    eax,0xa9860088
  40ac5d:	ror    DWORD PTR [eax+eax*1-0x4a],cl
  40ac61:	out    dx,al
  40ac62:	icebp  
  40ac63:	mov    WORD PTR [ebx+0x21],cs
  40ac66:	cmp    BYTE PTR [eax-0x37],dl
  40ac69:	jne    0x40ac83
  40ac6b:	push   ss
  40ac6c:	inc    esi
  40ac6d:	test   eax,0x2f8ac387
  40ac72:	punpckhdq mm7,QWORD PTR [esi+0x26]
  40ac76:	inc    edx
  40ac77:	pushf  
  40ac78:	push   esi
  40ac79:	shr    DWORD PTR [esp+ebp*4+0x162a987],0x2c
  40ac81:	jge    0x40ac1c
  40ac83:	inc    esp
  40ac84:	(bad)  
  40ac85:	cmp    BYTE PTR [eax+0x0],ah
  40ac88:	sbb    al,0xa9
  40ac8a:	bound  eax,QWORD PTR [edx]
  40ac8c:	or     eax,0xdc03e169
  40ac91:	lods   eax,DWORD PTR ds:[esi]
  40ac92:	or     BYTE PTR [ebx+0xeb0274e],cl
  40ac98:	add    bh,bh
  40ac9a:	or     BYTE PTR [eax],al
  40ac9c:	xchg   BYTE PTR [ebx+0x70],dh
  40ac9f:	cmp    DWORD PTR [esi+0x5e35d3ab],eax
  40aca5:	mov    cs,WORD PTR [eax+0x1]
  40aca8:	xchg   BYTE PTR [edx],ah
  40acaa:	inc    edx
  40acab:	clc    
  40acac:	add    eax,0xbb042b43
  40acb1:	inc    esi
  40acb2:	js     0x40ac86
  40acb4:	sub    DWORD PTR [edi+ebx*1],ecx
  40acb7:	fisubr WORD PTR [eax]
  40acb9:	into   
  40acba:	lods   eax,DWORD PTR ds:[esi]
  40acbb:	fld    TBYTE PTR [esi+eiz*1]
  40acbe:	js     0x40ad0a
  40acc0:	xchg   esi,eax
  40acc1:	int    0xa1
  40acc3:	repz add BYTE PTR [edx],cl
  40acc6:	xor    DWORD PTR [ebp+0x7],0x55
  40acca:	nop
  40accb:	pop    es
  40accc:	add    dl,BYTE PTR [ebx]
  40acce:	adc    ebx,DWORD PTR [edi]
  40acd0:	in     al,dx
  40acd1:	adc    eax,0x8103e163
  40acd6:	shl    DWORD PTR [edx+0x70ef387],1
  40acdc:	push   0xffffffb3
  40acde:	push   ebp
  40acdf:	xchg   ecx,eax
  40ace0:	cmp    edx,ecx
  40ace2:	xchg   ebx,eax
  40ace3:	ins    DWORD PTR es:[edi],dx
  40ace4:	mov    dl,0x5a
  40ace6:	push   ebx
  40ace7:	in     al,dx
  40ace8:	xchg   esp,eax
  40ace9:	or     DWORD PTR [esi-0x56],edx
  40acec:	data16 jge 0x40ac79
  40acef:	(bad)  
  40acf1:	or     eax,0xae477999
  40acf6:	(bad)  
  40acf7:	push   ebp
  40acf8:	sbb    BYTE PTR [ecx+0x40ec8399],ch
  40acfe:	push   ecx
  40acff:	jecxz  0x40ad04
  40ad01:	sub    al,0x43
  40ad03:	js     0x40accb
  40ad05:	add    cl,BYTE PTR [eax]
  40ad07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad08:	in     al,dx
  40ad09:	xor    edx,DWORD PTR [ebp-0x1d]
  40ad0c:	add    eax,DWORD PTR ds:0xcadd1d81
  40ad12:	call   0x8987:0x16fce2dd
  40ad19:	je     0x40acc5
  40ad1b:	dec    esi
  40ad1c:	fldenv [eax-0x67]
  40ad1f:	out    dx,eax
  40ad20:	ret    
  40ad21:	cdq    
  40ad22:	push   ebp
  40ad23:	cmp    eax,0x9808d46
  40ad28:	mov    ch,0x0
  40ad2a:	mov    cs,ebp
  40ad2c:	dec    esi
  40ad2d:	loope  0x40ad3d
  40ad2f:	add    DWORD PTR [esi],ecx
  40ad31:	jb     0x40ad40
  40ad33:	sbb    DWORD PTR [ebx],ecx
  40ad35:	jmp    0x629d9dbf
  40ad3a:	inc    eax
  40ad3b:	mov    eax,ds:0x4287ba45
  40ad40:	xor    DWORD PTR [ebp+eax*2+0x3d64cccc],0xf89f011a
  40ad4b:	add    eax,0x53f701ea
  40ad50:	or     ch,cl
  40ad52:	out    dx,al
  40ad53:	inc    eax
  40ad54:	xchg   DWORD PTR [edx+ebp*8],edi
  40ad57:	mov    al,ds:0x42821a74
  40ad5c:	mov    gs,WORD PTR [ecx+0x3c816039]
  40ad62:	jbe    0x40ace4
  40ad64:	dec    esi
  40ad65:	mov    esi,0x3dfbbf84
  40ad6a:	jbe    0x40ad05
  40ad6c:	jle    0x40acef
  40ad6e:	lods   eax,DWORD PTR ds:[esi]
  40ad6f:	xor    DWORD PTR [edi],edi
  40ad71:	jmp    0x210a6cfb
  40ad76:	add    edi,0x46
  40ad79:	mov    DWORD PTR [ebp-0x7a16c62e],ebx
  40ad7f:	lds    ebp,FWORD PTR [esi-0xb]
  40ad82:	test   DWORD PTR [ecx-0xa016ab2],ebx
  40ad88:	sar    DWORD PTR [edx-0x7eb1684d],1
  40ad8e:	add    BYTE PTR [esi],cl
  40ad90:	jmp    ecx
  40ad92:	push   0xffffffc0
  40ad94:	xchg   BYTE PTR [ecx],dh
  40ad96:	and    cl,cl
  40ad98:	mov    es,WORD PTR [eiz*2+0x4ef4973e]
  40ad9f:	inc    edx
  40ada0:	psubd  mm0,QWORD PTR [eax]
  40ada3:	mov    bh,0xf8
  40ada5:	or     BYTE PTR [eax],al
  40ada7:	pop    edi
  40ada8:	retf   
  40ada9:	pop    ebp
  40adaa:	mov    esp,0x8bc200e4
  40adaf:	and    al,BYTE PTR [eax-0x3724aa7f]
  40adb5:	pop    ebp
  40adb6:	mov    ah,0xed
  40adb8:	sub    esi,DWORD PTR [edx+0x6043dfcd]
  40adbe:	cmp    bh,bl
  40adc0:	push   esp
  40adc1:	or     DWORD PTR [ebp+0x1f],0xffffffca
  40adc5:	dec    ebp
  40adc6:	hlt    
  40adc7:	xchg   esi,eax
  40adc8:	lock int 0x89
  40adcb:	mov    cl,BYTE PTR [ebx+0x44b745ce]
  40add1:	loop   0x40adc8
  40add3:	inc    ebx
  40add4:	inc    eax
  40add5:	or     al,BYTE PTR [ebx+0x7d74932b]
  40addb:	sar    BYTE PTR ds:0x79948405,1
  40ade1:	repz inc eax
  40ade4:	icebp  
  40ade5:	aad    0xe8
  40ade7:	test   DWORD PTR [edi],edi
  40ade9:	or     al,BYTE PTR [eax]
  40adeb:	imul   esp,DWORD PTR [esi+0x43af0338],0x1f0075f5
  40adf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adf6:	and    BYTE PTR [ebx],al
  40adf8:	lahf   
  40adf9:	inc    ebx
  40adfa:	cmc    
  40adfb:	jne    0x40adfc
  40adfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adfe:	sub    BYTE PTR [ebx],al
  40ae00:	scas   eax,DWORD PTR es:[edi]
  40ae01:	inc    ebx
  40ae02:	xor    esi,DWORD PTR [ebp-0x5]
  40ae05:	dec    ebx
  40ae06:	xchg   ebp,eax
  40ae07:	shl    BYTE PTR [eax+0x5c],0x51
  40ae0b:	leave  
  40ae0c:	fld    QWORD PTR [esi+0xa]
  40ae0f:	push   ebp
  40ae10:	in     al,0xaa
  40ae12:	xchg   esp,esp
  40ae14:	out    0xbf,eax
  40ae16:	loopne 0x40ae30
  40ae18:	sub    al,0x52
  40ae1a:	pop    esp
  40ae1b:	push   edi
  40ae1c:	xchg   BYTE PTR [edi+edx*8],ah
  40ae1f:	(bad)  
  40ae20:	jnp    0x40ae97
  40ae22:	sti    
  40ae23:	aas    
  40ae24:	xchg   BYTE PTR [edx],dl
  40ae26:	dec    edx
  40ae27:	and    al,0x72
  40ae29:	adc    al,0x49
  40ae2b:	add    al,0xd
  40ae2d:	stc    
  40ae2e:	push   cs
  40ae2f:	add    BYTE PTR [esi+0x394fcbac],al
  40ae35:	xchg   esi,eax
  40ae36:	in     al,dx
  40ae37:	adc    esi,eax
  40ae39:	test   eax,0xa95994e0
  40ae3e:	or     BYTE PTR [ebx+0x3ae17c16],cl
  40ae44:	adc    edx,DWORD PTR [esi]
  40ae46:	ds push ebp
  40ae48:	mov    ecx,0x1be7c8dc
  40ae4d:	xchg   esp,eax
  40ae4e:	iret   
  40ae4f:	dec    BYTE PTR [edx]
  40ae51:	imul   ebx,DWORD PTR [ebx+0x27],0x56ce3c53
  40ae58:	add    BYTE PTR [esi+0x71],al
  40ae5b:	scas   eax,DWORD PTR es:[edi]
  40ae5c:	cli    
  40ae5d:	jmp    0x5c0022d1
  40ae62:	xchg   edx,eax
  40ae63:	add    DWORD PTR [esi-0x7e],0x14
  40ae67:	mov    DWORD PTR [ebx+0x6808a987],ecx
  40ae6d:	mov    BYTE PTR [edi+0x7],0x0
  40ae71:	push   esi
  40ae72:	call   0x69d5be70
  40ae77:	push   cs
  40ae78:	test   esi,eax
  40ae7a:	sub    al,0xfb
  40ae7c:	(bad)  
  40ae7d:	xchg   ebx,eax
  40ae7e:	popf   
  40ae7f:	sti    
  40ae80:	aas    
  40ae81:	xchg   BYTE PTR [edx],ah
  40ae83:	xor    eax,0x46b17a24
  40ae88:	das    
  40ae89:	xchg   BYTE PTR [ecx+0x164def83],ch
  40ae8f:	inc    ebp
  40ae90:	mov    bh,0xbd
  40ae92:	push   cs
  40ae93:	add    BYTE PTR [ebx+ebx*1-0x79fc1dbd],al
  40ae9a:	leave  
  40ae9b:	sub    al,0xeb
  40ae9d:	sub    BYTE PTR [ebx-0x1d],dl
  40aea0:	add    edx,DWORD PTR [ebx]
  40aea2:	dec    DWORD PTR [esi]
  40aea4:	and    BYTE PTR [esi+0x6d1fa67c],dh
  40aeaa:	inc    edx
  40aeab:	jp     0x40af14
  40aead:	mov    ds:0xf1e64b5e,al
  40aeb2:	inc    edx
  40aeb3:	jecxz  0x40aed3
  40aeb5:	inc    ebx
  40aeb6:	psllw  mm6,QWORD PTR [ebx]
  40aeb9:	push   ds
  40aeba:	sub    ah,cl
  40aebc:	add    eax,DWORD PTR [eax]
  40aebe:	xchg   cl,al
  40aec0:	sahf   
  40aec1:	pop    ds
  40aec2:	push   0x3e
  40aec4:	aam    0x75
  40aec6:	fnstcw WORD PTR [esi+0x7d7e4f22]
  40aecc:	scas   al,BYTE PTR es:[edi]
  40aecd:	pop    ds
  40aece:	inc    bx
  40aed0:	jecxz  0x40aed5
  40aed2:	xchg   BYTE PTR [ebx+0x75],bl
  40aed5:	dec    DWORD PTR [eax-0x79fb6e3c]
  40aedb:	inc    edx
  40aedc:	jp     0x40af46
  40aede:	mov    ds:0x8a41683a,al
  40aee3:	stos   BYTE PTR es:[edi],al
  40aee4:	stos   DWORD PTR es:[edi],eax
  40aee5:	inc    ebx
  40aee6:	xchg   DWORD PTR [edx+0x67],eax
  40aee9:	les    eax,FWORD PTR [eax-0x79fbaa42]
  40aeef:	inc    edx
  40aef0:	push   0xef684fa
  40aef5:	cld    
  40aef6:	or     al,BYTE PTR [edx]
  40aef8:	sti    
  40aef9:	xor    ebx,DWORD PTR [esi-0x79fc21f9]
  40aeff:	mov    esi,0xca294fa2
  40af04:	and    BYTE PTR cs:[eax-0x3e],dh
  40af08:	push   cs
  40af09:	and    BYTE PTR [eax+0x42],bh
  40af0c:	std    
  40af0d:	cli    
  40af0e:	cld    
  40af0f:	std    
  40af10:	or     ebp,ebp
  40af12:	adc    dl,BYTE PTR ds:0x4285e886
  40af18:	bound  esi,QWORD PTR [ecx+0x7b]
  40af1b:	xchg   ebp,eax
  40af1c:	hlt    
  40af1d:	mov    ecx,0xfa1a2e4e
  40af22:	add    ch,al
  40af24:	inc    edx
  40af25:	(bad)
  40af29:	sub    DWORD PTR [esi+0x6981c851],0x620a4285
  40af33:	(bad)  
  40af34:	pop    esi
  40af35:	sub    al,bl
  40af37:	test   cl,dh
  40af39:	loope  0x40aef9
  40af3b:	je     0x40af7d
  40af3d:	or     ah,BYTE PTR [edx+eax*2+0x1a]
  40af41:	sbb    al,0x1
  40af43:	cwde   
  40af44:	push   ebp
  40af45:	or     cl,ch
  40af47:	cdq    
  40af48:	aad    0x7d
  40af4a:	jecxz  0x40af7b
  40af4c:	add    DWORD PTR [esi],ebp
  40af4e:	xlat   BYTE PTR ds:[ebx]
  40af4f:	add    eax,0xdf2e19
  40af54:	adc    edi,DWORD PTR [ecx-0xe557efe]
  40af5a:	add    al,0x8a
  40af5c:	inc    edx
  40af5d:	sub    DWORD PTR [edx],0xffffff86
  40af60:	jl     0x40afaf
  40af62:	or     eax,0x4d8a41d7
  40af67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af68:	sub    al,0xf
  40af6a:	cmp    al,0xd6
  40af6c:	(bad)  
  40af6d:	into   
  40af6e:	jb     0x40af2f
  40af70:	pushf  
  40af71:	mov    edi,ebx
  40af73:	test   DWORD PTR [edx+0x47],eax
  40af76:	push   0x21
  40af78:	pop    esi
  40af79:	adc    ah,cl
  40af7b:	mov    DWORD PTR [eax],0xc184f62e
  40af81:	dec    ebp
  40af82:	int    0x9d
  40af84:	dec    esp
  40af85:	dec    edi
  40af86:	rol    BYTE PTR [eax],cl
  40af88:	das    
  40af89:	ds add eax,0xf54e1b00
  40af8f:	dec    DWORD PTR [eax]
  40af91:	(bad)  
  40af92:	push   ebx
  40af93:	add    al,0x85
  40af95:	cmp    al,0x5c
  40af97:	call   0x4beac2
  40af9c:	jecxz  0x40b01d
  40af9e:	js     0x40afa5
  40afa0:	mov    eax,ds:0x6e172e53
  40afa5:	das    
  40afa6:	sar    DWORD PTR [eax],1
  40afa8:	sub    esi,DWORD PTR [ebx*1-0x39389f8c]
  40afaf:	call   0x4b198b
  40afb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afb5:	add    DWORD PTR [esi],ecx
  40afb7:	xor    DWORD PTR [edi+0x2d],0x77
  40afbb:	cmp    ebx,DWORD PTR [edi+esi*2+0x7adf7d11]
  40afc2:	sbb    eax,0xa001c0c
  40afc7:	sub    esp,ebx
  40afc9:	xor    edx,DWORD PTR [esi]
  40afcb:	cmp    eax,0xa8869f
  40afd0:	xchg   ecx,eax
  40afd1:	push   0x5c
  40afd3:	push   edi
  40afd4:	add    eax,0x7e8523f
  40afd9:	jbe    0x40afce
  40afdb:	jmp    DWORD PTR [ebx+0x7e]
  40afde:	jge    0x40aff7
  40afe0:	lods   al,BYTE PTR ds:[esi]
  40afe1:	arpl   WORD PTR [ecx],di
  40afe3:	rol    bh,0x57
  40afe6:	lock dec eax
  40afe9:	ret    0x75b4
  40afec:	add    ch,dl
  40afee:	push   eax
  40afef:	pop    ebp
  40aff0:	push   0xffffffdd
  40aff2:	push   edi
  40aff3:	loop   0x40b042
  40aff5:	cmc    
  40aff6:	imul   esi,ebx,0xffffffff
  40aff9:	sar    BYTE PTR [ebx],cl
  40affb:	sbb    DWORD PTR [eax-0x61],eax
  40affe:	(bad)  
  40afff:	dec    eax
  40b000:	and    al,0xab
  40b002:	ins    BYTE PTR es:[edi],dx
  40b003:	ds call 0x4e338f
  40b009:	xchg   BYTE PTR [ebx-0x1a],cl
  40b00c:	pop    ds
  40b00d:	xchg   DWORD PTR [ecx-0x62be74f8],ebp
  40b013:	or     DWORD PTR [eax+0x5008a987],edx
  40b019:	jns    0x40b089
  40b01b:	fcom   DWORD PTR [ecx]
  40b01d:	(bad)  
  40b01e:	test   eax,0x1082467f
  40b023:	mov    cs,WORD PTR [ebx+0x6808a987]
  40b029:	(bad)  
  40b02a:	ins    BYTE PTR es:[edi],dx
  40b02b:	out    dx,eax
  40b02c:	inc    ecx
  40b02e:	cld    
  40b02f:	cli    
  40b030:	pcmpeqw mm5,mm1
  40b033:	or     BYTE PTR [ebp-0xa7663ba],al
  40b039:	cmp    esp,DWORD PTR [ebp+ebx*8-0x16]
  40b03d:	adc    BYTE PTR [eax],0x35
  40b040:	add    al,0x85
  40b042:	push   0x397bff3e
  40b047:	clc    
  40b048:	aas    
  40b049:	xchg   ah,ah
  40b04b:	ds pop ebp
  40b04d:	lods   eax,DWORD PTR ds:[esi]
  40b04e:	adc    bl,ch
  40b050:	pop    esp
  40b051:	add    BYTE PTR [ebp-0x75],al
  40b054:	xor    al,0x24
  40b056:	mov    ch,BYTE PTR [edx+0x5bf78b26]
  40b05c:	hlt    
  40b05d:	outs   dx,DWORD PTR ds:[esi]
  40b05e:	std    
  40b05f:	push   0x4b80740e
  40b064:	out    0xc7,al
  40b066:	xchg   BYTE PTR [ecx+0x62c08b08],ch
  40b06c:	enter  0x8603,0x26
  40b070:	(bad)  
  40b071:	je     0x40b0ed
  40b073:	aam    0x6
  40b075:	call   0x495973
  40b07a:	add    eax,0x74eb0e3b
  40b07f:	inc    edx
  40b080:	js     0x40b07f
  40b082:	add    al,0x81
  40b084:	out    dx,al
  40b085:	xor    al,0xb
  40b087:	adc    BYTE PTR ds:0x844a2ff4,0x10
  40b08e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b08f:	out    0x1f,al
  40b091:	add    al,0x89
  40b093:	sub    al,0xef
  40b095:	repnz rol DWORD PTR [edx-0x78],0x6
  40b09a:	(bad)  
  40b09b:	sbb    al,0xeb
  40b09d:	(bad)  
  40b09e:	mov    edx,0x864297a2
  40b0a3:	xchg   ecx,eax
  40b0a4:	std    
  40b0a5:	or     esi,DWORD PTR [ebp+0x2]
  40b0a8:	jecxz  0x40b02a
  40b0aa:	sbb    DWORD PTR [eax],ebx
  40b0ac:	loopne 0x40b0bf
  40b0ae:	inc    esi
  40b0af:	xchg   BYTE PTR [ecx-0x3],bh
  40b0b2:	sbb    DWORD PTR [eax+eiz*1-0x7e],eax
  40b0b6:	add    BYTE PTR [ebp-0x4cfc189a],bh
  40b0bc:	ds and al,0xd
  40b0bf:	push   ds
  40b0c0:	and    ah,bl
  40b0c2:	add    eax,DWORD PTR [esi+0x2d03ccc5]
  40b0c8:	push   ebp
  40b0c9:	push   0xcf1718fd
  40b0ce:	dec    DWORD PTR [edx]
  40b0d0:	xor    DWORD PTR [ebp+0x6],0xffffffb6
  40b0d4:	xchg   ecx,eax
  40b0d5:	mov    ebp,0xe3062ce3
  40b0da:	(bad)  
  40b0db:	xchg   edx,eax
  40b0dc:	inc    esi
  40b0dd:	rol    BYTE PTR [ebx-0x7a],1
  40b0e0:	popf   
  40b0e1:	sti    
  40b0e2:	xor    ebx,DWORD PTR [edx+eax*2-0x2c]
  40b0e6:	(bad)  
  40b0e8:	fstp   QWORD PTR [edi]
  40b0ea:	add    al,0xd9
  40b0ec:	aaa    
  40b0ed:	jmp    0x40b0df
  40b0ef:	xchg   ecx,eax
  40b0f0:	inc    edx
  40b0f1:	les    dx,DWORD PTR [edx+0x46]
  40b0f5:	icebp  
  40b0f6:	ret    
  40b0f7:	lods   al,BYTE PTR ds:[esi]
  40b0f8:	inc    esi
  40b0f9:	or     ah,BYTE PTR [eax-0x48]
  40b0fc:	loope  0x40b108
  40b0fe:	stos   DWORD PTR es:[edi],eax
  40b0ff:	xchg   BYTE PTR [edx-0x77],al
  40b102:	test   eax,0xf15ff286
  40b107:	mov    edx,0x4742ea56
  40b10c:	inc    edx
  40b10d:	cmc    
  40b10e:	hlt    
  40b10f:	xchg   ecx,eax
  40b110:	xor    al,0x4a
  40b112:	jmp    0xc5b675dd
  40b117:	adc    DWORD PTR [ecx-0x69ff1283],0x5adbe082
  40b121:	adc    eax,0x42dfed2e
  40b126:	cmc    
  40b127:	adc    al,0x6a
  40b129:	fmul   QWORD PTR [eax-0x17]
  40b12c:	xor    dh,BYTE PTR [esi]
  40b12e:	push   cs
  40b12f:	cli    
  40b130:	lds    eax,FWORD PTR [edx-0x38]
  40b133:	in     eax,dx
  40b134:	test   ebp,eax
  40b136:	jne    0x40b13d
  40b138:	xchg   BYTE PTR [edx+0x7e],al
  40b13b:	fist   DWORD PTR [edx+0x15]
  40b13e:	cs in  eax,0x9f
  40b141:	inc    edx
  40b142:	cmc    
  40b143:	fsub   QWORD PTR ds:0x3ae948dc
  40b149:	ss or  bh,dl
  40b14c:	lds    eax,FWORD PTR [edx-0x38]
  40b14f:	in     eax,0x85
  40b151:	clc    
  40b152:	cmp    cl,0x88
  40b155:	nop
  40b156:	jge    0x40b12e
  40b158:	adc    BYTE PTR [edi-0x6ebc2583],0x3d
  40b15f:	ss loop 0x40b0e2
  40b162:	hlt    
  40b163:	out    0xd2,al
  40b165:	vandps xmm6,xmm0,XMMWORD PTR [edi-0x4d501e09]
  40b16d:	(bad)  
  40b16e:	hlt    
  40b16f:	das    
  40b170:	(bad)  
  40b171:	neg    BYTE PTR [eax+eax*1+0x6e]
  40b175:	mov    ebx,0xb9db2478
  40b17a:	jo     0x40b1a0
  40b17c:	fistp  QWORD PTR [ecx-0x28ffdbc0]
  40b182:	jno    0x40b12c
  40b184:	pop    ecx
  40b185:	inc    eax
  40b186:	pop    eax
  40b187:	enter  0xaf0c,0xf
  40b18b:	ret    0x9b74
  40b18e:	pop    esi
  40b18f:	xor    DWORD PTR [ebx+ecx*8+0x3c],0x59950487
  40b197:	clc    
  40b198:	dec    eax
  40b199:	mov    dh,0xbc
  40b19b:	sbb    BYTE PTR [esi],al
  40b19d:	out    0x93,eax
  40b19f:	jge    0x40b198
  40b1a1:	add    DWORD PTR [eax+ecx*1+0x78772900],0x6c9c7324
  40b1ac:	push   DWORD PTR [eax-0x150f808a]
  40b1b2:	jge    0x40b22c
  40b1b4:	adc    al,al
  40b1b6:	jmp    FWORD PTR ds:0x2dff800c
  40b1bc:	or     al,0x19
  40b1be:	ja     0x40b1dd
  40b1c0:	xor    BYTE PTR [ecx+0x4],bl
  40b1c3:	or     al,BYTE PTR [ebx-0x397eb8a5]
  40b1c9:	loope  0x40b14c
  40b1cb:	or     al,0x0
  40b1cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1ce:	inc    esi
  40b1cf:	pop    esp
  40b1d0:	mov    ebp,DWORD PTR [edi+0x42]
  40b1d3:	shr    eax,0xa3
  40b1d6:	jne    0x40b1cb
  40b1d8:	jmp    FWORD PTR [ebx-0x7d]
  40b1db:	js     0x40b1f6
  40b1dd:	fs cmp eax,0x770c3709
  40b1e3:	js     0x40b209
  40b1e5:	add    bl,dh
  40b1e7:	dec    ecx
  40b1e8:	cmc    
  40b1e9:	adc    eax,0x348c7f
  40b1ee:	xchg   BYTE PTR [edx+eax*8],bl
  40b1f1:	or     eax,DWORD PTR [edi-0x223a8c60]
  40b1f7:	fwait
  40b1f8:	sbb    eax,eax
  40b1fa:	pusha  
  40b1fb:	fild   DWORD PTR [ecx]
  40b1fd:	add    BYTE PTR [eax+0x30],dl
  40b200:	sbb    eax,0x225d6fff
  40b205:	or     al,0x30
  40b207:	mov    ?,WORD PTR [ebx-0x10]
  40b20a:	ins    DWORD PTR es:[edi],dx
  40b20b:	test   eax,0x23800b73
  40b210:	(bad)  
  40b211:	cmp    DWORD PTR [esi+esi*1-0x7bb9b8f7],edi
  40b218:	inc    esp
  40b219:	and    al,0x92
  40b21b:	mov    esp,edi
  40b21d:	xor    al,BYTE PTR [esi+0x38]
  40b220:	cmp    dl,al
  40b222:	mov    bl,BYTE PTR [ecx-0x67ab49f9]
  40b228:	xchg   edx,eax
  40b229:	shr    BYTE PTR [ebp+0x59f0d55b],0x6d
  40b230:	sub    al,0x8
  40b232:	fcomp  QWORD PTR [ecx-0x6a5d8c29]
  40b238:	xlat   BYTE PTR ds:[ebx]
  40b239:	adc    al,0x7a
  40b23b:	ja     0x40b285
  40b23d:	add    BYTE PTR ds:0x7ec20a5d,al
  40b243:	cdq    
  40b244:	xor    dl,BYTE PTR [edi+0x6f]
  40b247:	test   DWORD PTR [esp+ecx*1],ebp
  40b24a:	add    BYTE PTR [esp+edi*2-0x5a9da3eb],dl
  40b251:	sbb    edi,edi
  40b253:	std    
  40b254:	sub    BYTE PTR ds:0xfc7d92ff,bh
  40b25a:	push   ebp
  40b25b:	add    DWORD PTR [esi+0x4],esi
  40b25e:	push   ss
  40b25f:	inc    esi
  40b260:	cdq    
  40b261:	mov    eax,ebx
  40b263:	and    BYTE PTR [esi],0xce
  40b266:	jae    0x40b2e1
  40b268:	inc    edx
  40b269:	and    al,0x4a
  40b26b:	popf   
  40b26c:	push   cs
  40b26d:	lldt   WORD PTR [eax-0x5b]
  40b271:	pinsrw mm6,WORD PTR [eax],0xf0
  40b275:	mov    al,ds:0xa4bbc9fb
  40b27a:	fidivr WORD PTR [eax-0x7dd7d0b8]
  40b280:	adc    ebx,eax
  40b282:	push   cs
  40b283:	mov    esi,0x9757dc16
  40b288:	pop    ebx
  40b289:	mov    ds:0x1e8f3733,al
  40b28e:	sub    BYTE PTR [edx+0x7813f58f],cl
  40b294:	add    ah,bl
  40b296:	xchg   ch,al
  40b298:	cmp    eax,0x416d0433
  40b29d:	mov    cl,0xc3
  40b29f:	inc    edi
  40b2a0:	inc    edi
  40b2a1:	jecxz  0x40b321
  40b2a3:	add    BYTE PTR [esi+0x37],0x46
  40b2a7:	xchg   ah,dh
  40b2a9:	pinsrw mm7,WORD PTR [eax+0x5739c7],0xa6
  40b2b1:	mov    ecx,0x21cdc1d
  40b2b6:	jecxz  0x40b336
  40b2b8:	xor    BYTE PTR [edx+0x66ba0ef0],bh
  40b2be:	out    0x58,eax
  40b2c0:	add    ecx,0x3c
  40b2c3:	sar    BYTE PTR [edx+0x4784a330],cl
  40b2c9:	cmp    edi,ebx
  40b2cb:	add    eax,DWORD PTR [esi+0x2e552249]
  40b2d1:	push   edx
  40b2d2:	and    esi,DWORD PTR [edx]
  40b2d4:	mov    al,0x80
  40b2d6:	out    dx,al
  40b2d7:	add    ebx,DWORD PTR [edi+0x1fbfa82]
  40b2dd:	mov    ds,edi
  40b2df:	retf   0x93ec
  40b2e2:	or     DWORD PTR [edx-0x7a],esp
  40b2e5:	inc    esi
  40b2e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2e7:	stos   BYTE PTR es:[edi],al
  40b2e8:	test   esp,esi
  40b2ea:	pop    esp
  40b2eb:	sbb    dh,BYTE PTR [edi+0x1d64ca50]
  40b2f1:	adc    ch,BYTE PTR [edx+eiz*2]
  40b2f4:	fldenv [ebp-0x467dd560]
  40b2fa:	imul   DWORD PTR [edx-0x6c]
  40b2fd:	lea    edi,[ebp-0x14]
  40b300:	inc    ebp
  40b301:	ret    
  40b302:	retf   
  40b303:	loope  0x40b2b2
  40b305:	(bad)  
  40b306:	hlt    
  40b307:	repnz les edx,FWORD PTR [ebx]
  40b30a:	cli    
  40b30b:	xchg   edx,eax
  40b30c:	xchg   BYTE PTR [ebx],bl
  40b30e:	retf   0x9df1
  40b311:	(bad)  
  40b312:	hlt    
  40b313:	jmp    0x6714:0xf1b8cb00
  40b31a:	add    esp,DWORD PTR [ebx-0x50]
  40b31d:	add    BYTE PTR [ebp+0xa],0xe9
  40b321:	pop    ss
  40b322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b323:	mov    al,ds:0x5a9a8a2a
  40b328:	ins    BYTE PTR es:[edi],dx
  40b329:	push   edi
  40b32a:	mov    WORD PTR [ebp-0x7e9d41d7],cs
  40b330:	sbb    al,0x8e
  40b332:	fimul  WORD PTR [eax-0x17]
  40b335:	lods   al,BYTE PTR ds:[esi]
  40b336:	lea    eax,[ecx]
  40b338:	loope  0x40b2bf
  40b33a:	inc    edx
  40b33b:	cmc    
  40b33c:	in     al,dx
  40b33d:	mov    esi,ebx
  40b33f:	dec    eax
  40b340:	jmp    0x832302c7
  40b345:	retf   
  40b346:	inc    edx
  40b347:	jle    0x40b330
  40b349:	stos   BYTE PTR es:[edi],al
  40b34a:	add    DWORD PTR [esi],ebp
  40b34c:	cmc    
  40b34d:	pushf  
  40b34e:	inc    esp
  40b34f:	and    DWORD PTR [esi],0xedc7ec57
  40b355:	test   ebx,esp
  40b357:	or     eax,0x5d42c33d
  40b35c:	add    BYTE PTR [esi+edi*2-0x73],dh
  40b360:	shl    BYTE PTR [ebx+0x0],0x81
  40b364:	adc    eax,0x47af87
  40b369:	fs into 
  40b36b:	popa   
  40b36c:	leave  
  40b36d:	xlat   BYTE PTR ds:[ebx]
  40b36e:	mov    ah,dh
  40b370:	jmp    FWORD PTR [edx+0xd]
  40b373:	sbb    bh,al
  40b375:	mov    al,0x71
  40b377:	repz add DWORD PTR [eax],0x76
  40b37b:	jae    0x40b3fa
  40b37d:	or     DWORD PTR [esi],ebp
  40b37f:	push   0x40af080c
  40b384:	inc    ebp
  40b385:	jne    0x40b374
  40b387:	cmp    eax,0xdd574f2
  40b38c:	les    ebp,FWORD PTR [ecx-0x2a]
  40b38f:	mov    BYTE PTR [eax+eax*1],cl
  40b392:	scas   eax,DWORD PTR es:[edi]
  40b393:	dec    edx
  40b394:	mov    ah,0xe8
  40b396:	inc    esp
  40b397:	push   es
  40b398:	or     ch,al
  40b39a:	(bad)  
  40b39b:	jl     0x40b390
  40b39d:	push   esi
  40b39f:	cmp    al,0xe
  40b3a1:	lods   al,BYTE PTR ds:[esi]
  40b3a2:	lods   al,BYTE PTR ds:[esi]
  40b3a3:	inc    esi
  40b3a4:	push   esp
  40b3a5:	pop    edi
  40b3a6:	sbb    al,0x55
  40b3a8:	sub    esp,0xabe0bd8c
  40b3ae:	sub    al,0x40
  40b3b0:	pop    ecx
  40b3b1:	call   DWORD PTR [edx+0x6c]
  40b3b4:	sbb    al,BYTE PTR [eax+0x5f]
  40b3b7:	(bad)  
  40b3b8:	jne    0x40b3c2
  40b3ba:	mov    eax,0x2fd78e42
  40b3bf:	inc    eax
  40b3c0:	or     al,BYTE PTR [ebx+0xef48bfa]
  40b3c6:	mov    ds:0x1ffff4cc,eax
  40b3cb:	(bad)  
  40b3cc:	jne    0x40b3de
  40b3ce:	das    
  40b3cf:	inc    ebx
  40b3d0:	mov    es,ebx
  40b3d2:	das    
  40b3d3:	inc    eax
  40b3d4:	or     bh,bh
  40b3d6:	xchg   BYTE PTR [esi+0x3c3ce7f0],ch
  40b3dc:	(bad)  
  40b3de:	add    BYTE PTR [ebx],cl
  40b3e0:	pop    edx
  40b3e1:	pop    esp
  40b3e2:	adc    cl,bh
  40b3e4:	push   ss
  40b3e5:	icebp  
  40b3e6:	out    0xf3,eax
  40b3e8:	xchg   ebx,eax
  40b3e9:	(bad)  
  40b3ea:	inc    BYTE PTR [ebx]
  40b3ec:	pop    edx
  40b3ed:	or     al,BYTE PTR [ecx+ebp*1-0x2ffff766]
  40b3f4:	data16 repnz add BYTE PTR [eax],bh
  40b3f8:	dec    esp
  40b3f9:	push   edx
  40b3fa:	push   cs
  40b3fb:	sti    
  40b3fc:	mov    cl,0xb
  40b3fe:	add    al,0x86
  40b400:	cdq    
  40b401:	mov    DWORD PTR [edi+0x89180],ebp
  40b407:	popf   
  40b408:	mov    ds:0xee827789,al
  40b40d:	popf   
  40b40e:	add    ecx,DWORD PTR [edx+0x1b830899]
  40b414:	mov    DWORD PTR [eax],ecx
  40b416:	mov    ecx,DWORD PTR [ebx-0x5b]
  40b419:	jne    0x40b45f
  40b41b:	jle    0x40b450
  40b41d:	pop    edi
  40b41e:	mov    edx,0x89786
  40b423:	mov    edi,0x8a72fe36
  40b428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b429:	fwait
  40b42a:	push   esp
  40b42b:	xchg   esi,eax
  40b42c:	ins    BYTE PTR es:[edi],dx
  40b42d:	fwait
  40b42e:	add    eax,0x29fac91
  40b433:	inc    ebp
  40b434:	loop   0x40b443
  40b436:	add    al,0x86
  40b438:	cdq    
  40b439:	inc    eax
  40b43b:	rol    BYTE PTR [edi+0x32a8c10f],1
  40b441:	or     al,0xf
  40b443:	add    cl,dh
  40b445:	call   0xe83b:0xa949033d
  40b44c:	pop    ecx
  40b44d:	pop    esi
  40b44e:	(bad)  
  40b451:	inc    edx
  40b452:	push   esp
  40b453:	push   es
  40b454:	mov    ch,0x8b
  40b456:	popf   
  40b457:	sti    
  40b458:	test   BYTE PTR [ebx-0x7296244e],al
  40b45e:	add    ecx,edi
  40b460:	imul   eax,DWORD PTR [ecx-0x2b],0xffffffda
  40b464:	mov    DWORD PTR [edx+ebx*8],esp
  40b467:	add    eax,0x34ecd381
  40b46c:	test   DWORD PTR [ebx+0x36ee3692],eax
  40b472:	out    dx,al
  40b473:	into   
  40b474:	fdivr  DWORD PTR [edx]
  40b476:	pushf  
  40b477:	add    eax,0xdc34425c
  40b47c:	call   0x3582:0xb03e2e0
  40b483:	in     eax,0x86
  40b485:	in     eax,dx
  40b486:	cli    
  40b487:	sbb    al,0x53
  40b489:	xor    dh,BYTE PTR [esi]
  40b48b:	js     0x40b479
  40b48d:	popf   
  40b48e:	xchg   DWORD PTR [edx-0x7a],eax
  40b491:	out    dx,eax
  40b492:	stos   DWORD PTR es:[edi],eax
  40b493:	clc    
  40b494:	test   eax,0x3104232f
  40b499:	in     al,dx
  40b49a:	xchg   DWORD PTR [esi],eax
  40b49c:	xor    eax,0x97d3fd8b
  40b4a1:	add    ah,bl
  40b4a3:	sub    bl,bl
  40b4a5:	test   dl,dl
  40b4a7:	add    eax,DWORD PTR [eax]
  40b4a9:	fnstenv [edi+0x2b5d07fc]
  40b4af:	or     eax,0xe73f081d
  40b4b4:	add    eax,DWORD PTR [esi-0x7a8263c7]
  40b4ba:	ds jecxz 0x40b4c0
  40b4bd:	mov    bh,0x45
  40b4bf:	sub    al,0x33
  40b4c1:	fstp   DWORD PTR [edx-0x75c73078]
  40b4c7:	jecxz  0x40b45f
  40b4c9:	or     edi,DWORD PTR [edi]
  40b4cb:	or     ch,ch
  40b4cd:	test   DWORD PTR [edx+0x60],eax
  40b4d0:	call   0x49124f2d
  40b4d5:	test   DWORD PTR [edx-0x71],eax
  40b4d8:	sub    DWORD PTR [esi+0x502a546f],ebp
  40b4de:	leave  
  40b4df:	in     eax,0x42
  40b4e1:	inc    esp
  40b4e2:	inc    edx
  40b4e3:	pop    ebp
  40b4e4:	push   es
  40b4e5:	(bad)  
  40b4e6:	popf   
  40b4e7:	pop    ss
  40b4e8:	test   eax,0xcd75c585
  40b4ed:	in     eax,dx
  40b4ee:	mov    BYTE PTR [ebp-0x29],bh
  40b4f1:	rcl    BYTE PTR ds:0xd4bdf12e,1
  40b4f7:	neg    dh
  40b4f9:	ret    
  40b4fa:	mov    esi,0xefcd5dc9
  40b4ff:	sbb    cl,0xe2
  40b502:	in     eax,0xf4
  40b504:	(bad)  
  40b505:	retf   
  40b506:	out    0x5c,eax
  40b508:	mov    esi,0x291799b9
  40b50d:	add    BYTE PTR [edx-0x7a1a3817],al
  40b513:	call   0xa98e:0x4285f3ec
  40b51a:	cs add eax,0x9dfb3e5c
  40b520:	mov    al,ds:0xf4f18a2a
  40b525:	fcomp  QWORD PTR [ecx+0x33]
  40b528:	dec    edx
  40b529:	jmp    0xe56eca70
  40b52e:	dec    ebp
  40b52f:	or     al,0xf7
  40b531:	outs   dx,BYTE PTR ds:[esi]
  40b532:	push   ebx
  40b533:	mov    esp,0x15306cf9
  40b538:	pop    ss
  40b539:	push   ecx
  40b53a:	mov    cl,0x89
  40b53c:	hlt    
  40b53d:	push   esi
  40b53e:	pop    es
  40b53f:	aaa    
  40b540:	cmc    
  40b541:	sbb    cl,BYTE PTR [edx+0x1f]
  40b544:	add    DWORD PTR [eax],0xffffffa9
  40b547:	cmp    cl,BYTE PTR [esi]
  40b549:	add    BYTE PTR [edi],bl
  40b54b:	pop    ds
  40b54c:	add    DWORD PTR [esi-0xb72e7],0xffffffc7
  40b553:	(bad)  
  40b554:	idiv   bh
  40b556:	pusha  
  40b557:	dec    edi
  40b558:	cmc    
  40b559:	adc    eax,0x34946f
  40b55e:	rcl    BYTE PTR [esi-0xb],1
  40b561:	and    eax,0x348ef3
  40b566:	sbb    cl,BYTE PTR [edx]
  40b568:	loope  0x40b5c0
  40b56a:	lock out dx,eax
  40b56c:	sbb    eax,0xf3956aff
  40b571:	jne    0x40b573
  40b573:	ret    
  40b574:	jne    0x40b5f3
  40b576:	or     al,ah
  40b578:	(bad)  
  40b579:	adc    al,0x16
  40b57b:	lahf   
  40b57c:	ds xor eax,0x17766f5a
  40b583:	(bad)  
  40b584:	sti    
  40b585:	(bad)  
  40b586:	jmp    FWORD PTR [edi-0x5e8b4b40]
  40b58c:	jmp    0xff05:0xeff0560a
  40b593:	pop    edx
  40b594:	xchg   ah,ch
  40b596:	push   ss
  40b597:	loope  0x40b60e
  40b599:	repz mov ebp,ecx
  40b59c:	push   esi
  40b59d:	push   edi
  40b59e:	ret    0x448f
  40b5a1:	pop    edi
  40b5a2:	mov    eax,DWORD PTR [ebx]
  40b5a4:	dec    esi
  40b5a5:	xor    DWORD PTR [ebp+0x5b],0x3f75f54f
  40b5ac:	or     esi,DWORD PTR [esi+0xc]
  40b5af:	lock lock adc eax,0x5e9c5aff
  40b5b6:	(bad)  
  40b5b7:	cmp    dl,BYTE PTR [ebx+ebx*2-0xc73c501]
  40b5be:	adc    eax,0x3ffe8986
  40b5c3:	xchg   BYTE PTR [edx],ah
  40b5c5:	dec    esp
  40b5c6:	sbb    al,0x3
  40b5c8:	pop    edx
  40b5c9:	pop    esp
  40b5ca:	inc    eax
  40b5cb:	or     edx,DWORD PTR [eax+0x5d]
  40b5ce:	cmp    al,0x1e
  40b5d0:	inc    eax
  40b5d1:	lock jmp DWORD PTR [ecx]
  40b5d4:	push   ds
  40b5d5:	leave  
  40b5d6:	jae    0x40b5d8
  40b5d8:	push   ebp
  40b5d9:	adc    al,0x1f
  40b5db:	push   ebx
  40b5dc:	push   ebp
  40b5dd:	add    al,0x8c
  40b5df:	cmc    
  40b5e0:	xchg   edx,eax
  40b5e1:	add    BYTE PTR [ecx],0x5d
  40b5e4:	xchg   esi,eax
  40b5e5:	lods   al,BYTE PTR ds:[esi]
  40b5e6:	sub    al,0x8b
  40b5e8:	and    BYTE PTR [eax+0x70],0x44
  40b5ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5ed:	test   dh,cl
  40b5ef:	jno    0x40b576
  40b5f1:	and    bl,BYTE PTR [eax+eiz*1+0x6c]
  40b5f5:	call   0xdf59:0xa0a674c5
  40b5fc:	mov    ch,BYTE PTR [eax+0x5a]
  40b5ff:	or     dh,bl
  40b601:	mov    esi,0x5cc1fec2
  40b606:	adc    eax,0xb9466675
  40b60b:	pop    edx
  40b60c:	std    
  40b60d:	pop    esi
  40b60e:	loop   0x40b66e
  40b610:	dec    eax
  40b611:	cs int3 
  40b613:	sbb    eax,DWORD PTR [esi+0x30eb752e]
  40b619:	loopne 0x40b675
  40b61b:	adc    al,0x91
  40b61d:	cs (bad) 
  40b61f:	(bad)  
  40b620:	adc    ebx,DWORD PTR [ebp-0x47718b41]
  40b626:	cli    
  40b627:	pop    ss
  40b628:	nop
  40b629:	pop    ecx
  40b62a:	push   cs
  40b62b:	mov    esi,DWORD PTR [esi+0x1e]
  40b62e:	fdiv   DWORD PTR [edi-0x5d]
  40b631:	shl    DWORD PTR [edx+0x74998608],0xbf
  40b638:	rol    BYTE PTR [edx+0xf],cl
  40b63b:	add    DWORD PTR [eax],0xcaf90d5b
  40b641:	sar    BYTE PTR [edx],cl
  40b643:	dec    ebx
  40b644:	push   0xdf438743
  40b649:	mov    ebx,DWORD PTR [ebx+eiz*8]
  40b64c:	xor    DWORD PTR [ecx],esi
  40b64e:	or     eax,0x3ab2cae7
  40b653:	dec    ebx
  40b654:	sub    BYTE PTR [ebx],ah
  40b656:	xchg   DWORD PTR [ebx],esp
  40b658:	jg     0x40b69d
  40b65a:	call   0x42c27c2c
  40b65f:	mov    esi,0xb4f31d7e
  40b664:	jle    0x40b6e0
  40b666:	cs mov esp,0x786272ca
  40b66c:	dec    ecx
  40b66d:	add    BYTE PTR [edi+0xce8e77d],0xdb
  40b674:	xor    ecx,esp
  40b676:	or     al,0xd3
  40b678:	xor    bl,cl
  40b67a:	or     al,0xfb
  40b67c:	retf   0x367a
  40b67f:	std    
  40b680:	inc    ebx
  40b681:	xchg   BYTE PTR [ecx-0x7df517db],bh
  40b687:	pop    ebp
  40b688:	inc    esp
  40b689:	add    edx,DWORD PTR [eax+0x129e2b36]
  40b68f:	cli    
  40b690:	add    eax,DWORD PTR [esi+0x384fa2be]
  40b696:	mov    ebx,0xbcbd16fc
  40b69b:	xchg   esp,eax
  40b69c:	dec    edi
  40b69d:	inc    eax
  40b69e:	dec    ebx
  40b69f:	ss hlt 
  40b6a1:	add    BYTE PTR [ecx+edi*8],dl
  40b6a4:	jmp    DWORD PTR [bx+si-0x44]
  40b6a8:	sub    eax,0xf07cbd24
  40b6ad:	push   es
  40b6ae:	dec    DWORD PTR [edi]
  40b6b0:	ret    
  40b6b1:	pop    ebp
  40b6b2:	xchg   BYTE PTR [ebp-0x7a5a03f7],al
  40b6b8:	jge    0x40b648
  40b6ba:	pop    ecx
  40b6bb:	test   DWORD PTR [esi-0xf],edi
  40b6be:	sub    eax,0x3c5ef591
  40b6c3:	add    DWORD PTR [ecx],esp
  40b6c5:	fsub   QWORD PTR [ebp+0xf]
  40b6c8:	fld    QWORD PTR [edx+0x60]
  40b6cb:	shl    ecx,0x46
  40b6ce:	(bad)  
  40b6cf:	and    al,0xf5
  40b6d1:	aam    0x19
  40b6d3:	xor    BYTE PTR [edx-0x17],cl
  40b6d6:	mov    cs,WORD PTR [edi]
  40b6d8:	sub    eax,0x1b0f85e9
  40b6dd:	adc    DWORD PTR [esi+0x3b],esp
  40b6e0:	or     ch,cl
  40b6e2:	mov    ebp,eax
  40b6e4:	jge    0x40b6c7
  40b6e6:	int3   
  40b6e7:	push   cs
  40b6e8:	add    al,BYTE PTR [ecx]
  40b6ea:	int    0x86
  40b6ec:	hlt    
  40b6ed:	push   es
  40b6ee:	jo     0x40b6ee
  40b6f0:	adc    eax,0x56e99f9e
  40b6f5:	sub    ebp,ecx
  40b6f7:	test   DWORD PTR [edi-0x5a],edi
  40b6fa:	xor    ecx,0x4a36725b
  40b700:	jb     0x40b6ec
  40b702:	mov    dh,0x50
  40b704:	rcl    DWORD PTR [eax],1
  40b706:	add    BYTE PTR [edx+ebp*1+0x7c],ch
  40b70a:	add    eax,0xea954131
  40b70f:	inc    edi
  40b710:	bound  edi,QWORD PTR [esi-0x29]
  40b713:	sub    bh,BYTE PTR ds:0x11cfb660
  40b719:	fld    DWORD PTR cs:[edx-0x404e778b]
  40b720:	popf   
  40b721:	push   edx
  40b722:	fld    QWORD PTR [ebp-0x295670be]
  40b728:	aaa    
  40b729:	dec    ecx
  40b72a:	shr    BYTE PTR [edi+0x2b00782a],cl
  40b730:	das    
  40b731:	retf   0xa45e
  40b734:	jl     0x40b73e
  40b736:	add    ah,ah
  40b738:	add    BYTE PTR [esi],ch
  40b73a:	mov    edi,DWORD PTR [ecx-0x66]
  40b73d:	test   DWORD PTR [edi+eax*2],eax
  40b740:	mov    bh,BYTE PTR [ebx+0x90da704]
  40b746:	and    DWORD PTR [edx+eax*2+0x67600332],0x6ab455e8
  40b751:	pop    ds
  40b752:	add    eax,0x47ad33
  40b757:	cld    
  40b758:	push   edx
  40b759:	xor    DWORD PTR ds:0x348c03,0x3307e6d0
  40b763:	push   0xb78b5d53
  40b768:	or     eax,0x3f00104e
  40b76d:	jp     0x40b7ec
  40b76f:	or     BYTE PTR [eax-0x1795e60b],cl
  40b775:	jns    0x40b755
  40b777:	test   DWORD PTR [edi+0xa031ff2],ebp
  40b77d:	lea    ebx,[ebx+0x6a]
  40b780:	jecxz  0x40b78d
  40b782:	dec    esi
  40b783:	adc    BYTE PTR [edi-0x588a0ab1],cl
  40b789:	jns    0x40b7a8
  40b78b:	xchg   esp,eax
  40b78c:	mov    ebp,0xdf850a00
  40b791:	hlt    
  40b792:	or     eax,0x4659eb0
  40b797:	push   0xffffffae
  40b799:	push   ecx
  40b79a:	pop    ebp
  40b79b:	push   edi
  40b79c:	jo     0x40b819
  40b79e:	jge    0x40b7b0
  40b7a0:	call   0xd23fb998
  40b7a5:	cs retf 0x865f
  40b7a9:	dec    ebx
  40b7aa:	daa    
  40b7ab:	pop    ebp
  40b7ac:	inc    esp
  40b7ad:	data16 or BYTE PTR [esi-0x27],dl
  40b7b1:	mov    ebp,0xc9938b54
  40b7b6:	or     BYTE PTR [eax],al
  40b7b8:	xchg   BYTE PTR [eax],ah
  40b7ba:	aas    
  40b7bb:	or     al,0xd
  40b7bd:	sub    dl,bh
  40b7bf:	mov    dl,ah
  40b7c1:	xor    DWORD PTR [ecx+0x8998617],eax
  40b7c7:	xor    eax,DWORD PTR [ecx+0x29]
  40b7ca:	into   
  40b7cb:	stos   DWORD PTR es:[edi],eax
  40b7cc:	jp     0x40b848
  40b7ce:	dec    esp
  40b7cf:	add    al,BYTE PTR [eax]
  40b7d1:	bound  edi,QWORD PTR [ecx]
  40b7d3:	leave  
  40b7d4:	into   
  40b7d5:	jnp    0x40b76f
  40b7d7:	shl    cl,0x16
  40b7da:	sbb    eax,edx
  40b7dc:	pop    edx
  40b7dd:	fcmovu st,st(7)
  40b7df:	push   esi
  40b7e0:	mov    eax,esp
  40b7e2:	mov    DWORD PTR [ebp+0x11],esi
  40b7e5:	xchg   ebx,eax
  40b7e6:	add    ah,BYTE PTR [edx]
  40b7e8:	pop    esi
  40b7e9:	(bad)
  40b7ec:	jmp    0x40b7f3
  40b7ee:	xchg   bl,ah
  40b7f0:	out    0x2d,eax
  40b7f2:	cmp    eax,0x8225fec2
  40b7f7:	pushf  
  40b7f8:	inc    edx
  40b7f9:	xchg   BYTE PTR [esi],dl
  40b7fb:	leave  
  40b7fc:	je     0x40b77f
  40b7fe:	(bad)  
  40b7ff:	enter  0x7de8,0x9a
  40b803:	or     BYTE PTR [eax],al
  40b805:	rcr    BYTE PTR [esi-0xa],1
  40b808:	add    BYTE PTR [ebp+0x20],dl
  40b80b:	jecxz  0x40b7dc
  40b80d:	xchg   esp,eax
  40b80e:	pop    ecx
  40b80f:	push   cs
  40b810:	push   edi
  40b811:	cmp    ecx,DWORD PTR [esi-0x5756ffae]
  40b817:	test   al,0x33
  40b819:	repnz pop eax
  40b81b:	push   cs
  40b81c:	test   esi,eax
  40b81e:	adc    BYTE PTR [eax],0x68
  40b821:	retf   0x1042
  40b824:	inc    esp
  40b825:	xchg   BYTE PTR [edi-0x7ba92356],dh
  40b82b:	fwait
  40b82c:	(bad)  
  40b82d:	or     al,0x45
  40b82f:	fist   DWORD PTR [edi+0x5c1342c4]
  40b835:	add    BYTE PTR [edx+0xf],dl
  40b838:	and    eax,DWORD PTR [esi+ebp*2]
  40b83b:	cmp    BYTE PTR [edi+eax*8+0x58],0xb7
  40b840:	aad    0xf
  40b842:	and    bh,bh
  40b844:	loop   0x40b879
  40b846:	pop    esi
  40b847:	stc    
  40b848:	add    al,0x2
  40b84a:	xchg   BYTE PTR [esi+0x50815122],bh
  40b850:	and    ebx,ebp
  40b852:	out    dx,eax
  40b853:	inc    ecx
  40b854:	jecxz  0x40b859
  40b856:	shl    BYTE PTR [ebp-0x3d262843],1
  40b85c:	loop   0x40b861
  40b85e:	xchg   BYTE PTR [edx+0x428733f6],bl
  40b864:	js     0x40b824
  40b866:	mov    ecx,0x1132f83
  40b86b:	(bad)  
  40b86d:	xchg   edi,eax
  40b86e:	inc    esp
  40b86f:	inc    edx
  40b870:	fdivr  DWORD PTR [esi+0x455be80]
  40b876:	xchg   BYTE PTR [edx+0x78],al
  40b879:	adc    DWORD PTR [edx],esp
  40b87b:	xor    BYTE PTR [ebx+0x6f9e6e03],ah
  40b881:	inc    ebx
  40b882:	xchg   dl,dh
  40b884:	jmp    0x40b833
  40b886:	popa   
  40b887:	mov    cs,WORD PTR [edi+0x44]
  40b88a:	xchg   BYTE PTR [ebx-0x115f7eb],al
  40b890:	loop   0x40b834
  40b892:	jno    0x40b86a
  40b894:	pop    ds
  40b895:	add    al,0xa9
  40b897:	imul   ebx,DWORD PTR [edx-0x4],0x0
  40b89b:	adc    eax,0xc0e90a02
  40b8a0:	dec    ebp
  40b8a1:	ss jge 0x40b8e8
  40b8a4:	inc    edx
  40b8a5:	test   eax,0x9ffee2d
  40b8aa:	sahf   
  40b8ab:	xor    ebp,edx
  40b8ad:	sub    eax,0xf542c21d
  40b8b2:	aam    0x89
  40b8b4:	scas   al,BYTE PTR es:[edi]
  40b8b5:	dec    eax
  40b8b6:	jmp    0x2ae6c2df
  40b8bb:	mov    al,BYTE PTR [ecx-0x975fe25]
  40b8c1:	dec    ecx
  40b8c2:	jmp    0x9576f00f
  40b8c7:	les    eax,FWORD PTR [edx-0x57]
  40b8ca:	lods   eax,DWORD PTR ds:[esi]
  40b8cb:	sbb    DWORD PTR ds:0xe9eb560a,eax
  40b8d1:	dec    ebp
  40b8d2:	aad    0xc5
  40b8d4:	inc    edx
  40b8d5:	cmc    
  40b8d6:	cld    
  40b8d7:	sub    DWORD PTR [esi+0x11e4e948],0x8185aaa6
  40b8e1:	fisttp DWORD PTR [edx-0x16b7519f]
  40b8e7:	jp     0x40b928
  40b8e9:	dec    edx
  40b8ea:	dec    ebp
  40b8eb:	inc    esp
  40b8ec:	inc    edx
  40b8ed:	jg     0x40b8d0
  40b8ef:	mov    bh,BYTE PTR [edi]
  40b8f1:	dec    esi
  40b8f2:	cmp    eax,0xe17e4244
  40b8f7:	jp     0x40b938
  40b8f9:	inc    edx
  40b8fa:	dec    ebp
  40b8fb:	inc    esp
  40b8fc:	inc    edx
  40b8fd:	jle    0x40b8d8
  40b8ff:	add    BYTE PTR [edx+0x443d5a3f],cl
  40b905:	inc    edx
  40b906:	jle    0x40b8f9
  40b908:	jle    0x40b893
  40b90a:	jge    0x40b8f1
  40b90c:	adc    eax,0x97ebe143
  40b911:	adc    BYTE PTR [ebx+0x2e],0x5f
  40b915:	mov    eax,edi
  40b917:	add    BYTE PTR [ebx-0x1874a6bb],bl
  40b91d:	ret    
  40b91e:	out    0x1,eax
  40b920:	pop    edx
  40b921:	jbe    0x40b90f
  40b923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b924:	xlat   BYTE PTR ds:[ebx]
  40b925:	inc    esi
  40b926:	or     al,BYTE PTR [edi+ebx*8+0x72830d12]
  40b92d:	and    eax,0x446f43a6
  40b932:	pop    esp
  40b933:	push   edi
  40b934:	shl    dl,0xa5
  40b937:	inc    ebx
  40b938:	pop    edi
  40b939:	(bad)  
  40b93a:	pop    esp
  40b93b:	lods   al,BYTE PTR ds:[esi]
  40b93c:	lods   al,BYTE PTR ds:[esi]
  40b93d:	inc    esi
  40b93e:	loop   0x40b8f4
  40b940:	inc    edi
  40b941:	inc    esp
  40b942:	or     bl,BYTE PTR [edi-0x44]
  40b945:	push   cs
  40b946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b947:	inc    ebx
  40b948:	pop    edi
  40b949:	daa    
  40b94a:	pop    eax
  40b94c:	pop    edx
  40b94d:	cmp    DWORD PTR [edx],0x8d81f4c0
  40b953:	fistp  DWORD PTR [edx+0x7b]
  40b956:	ins    BYTE PTR es:[edi],dx
  40b957:	cwde   
  40b958:	scas   eax,DWORD PTR es:[edi]
  40b959:	add    ecx,DWORD PTR [edx]
  40b95b:	call   0x491730
  40b960:	mov    DWORD PTR [esi],0x1f0001db
  40b966:	dec    ecx
  40b967:	or     BYTE PTR [edx+0x7a],dh
  40b96a:	sahf   
  40b96b:	lods   al,BYTE PTR ds:[esi]
  40b96c:	imul   edi
  40b96e:	inc    esp
  40b96f:	test   al,0x90
  40b971:	pop    edi
  40b972:	add    ecx,DWORD PTR [edx]
  40b974:	test   BYTE PTR [edi-0x2917e5ef],bl
  40b97a:	mov    bl,0x9
  40b97c:	add    BYTE PTR [ebx],ah
  40b97e:	xor    DWORD PTR [edi-0x32],0x90a8449f
  40b985:	pop    DWORD PTR [ebx]
  40b987:	or     al,BYTE PTR [ebp+0x3c0e0fc4]
  40b98d:	lods   eax,DWORD PTR ds:[esi]
  40b98e:	adc    dh,BYTE PTR [ebp+0x216a86b0]
  40b994:	ret    
  40b995:	push   ds
  40b996:	pop    ebx
  40b997:	xchg   edx,eax
  40b998:	inc    edx
  40b999:	xchg   BYTE PTR ds:0xb95ce7cf,dl
  40b99f:	or     BYTE PTR [eax],al
  40b9a1:	in     eax,0x4e
  40b9a3:	xchg   edx,eax
  40b9a4:	inc    edx
  40b9a5:	xchg   dh,ah
  40b9a7:	enter  0x6173,0x40
  40b9ab:	iret   
  40b9ac:	das    
  40b9ad:	xor    DWORD PTR [edi-0x78],0x3869c60f
  40b9b4:	mov    ds:0x4a3d9e,eax
  40b9b9:	daa    
  40b9ba:	mov    ds,WORD PTR [edx+eax*2-0x40e6ff7a]
  40b9c1:	stos   BYTE PTR es:[edi],al
  40b9c2:	add    eax,0x6bdc004a
  40b9c7:	and    al,ch
  40b9c9:	add    BYTE PTR ds:0xf600087f,dh
  40b9cf:	push   0x2d
  40b9d1:	ret    
  40b9d2:	je     0x40b9fd
  40b9d4:	retf   0xfd54
  40b9d7:	cmp    eax,0x6b7eeb88
  40b9dc:	or     BYTE PTR [eax],al
  40b9de:	sbb    BYTE PTR [edi+0x4d9300f0],ah
  40b9e4:	push   esi
  40b9e5:	and    dl,0xac
  40b9e8:	or     BYTE PTR [edx-0x7a],ch
  40b9eb:	push   ecx
  40b9ec:	sub    ch,0x87
  40b9ef:	imul   esi,DWORD PTR [edi+edi*4+0x73],0xddc01a6d
  40b9f7:	xchg   ebx,eax
  40b9f8:	push   eax
  40b9f9:	mov    BYTE PTR [eax],bl
  40b9fb:	lods   eax,DWORD PTR ds:[esi]
  40b9fc:	or     BYTE PTR [edx-0x7c],ch
  40b9ff:	push   ecx
  40ba00:	xchg   esi,eax
  40ba01:	in     eax,dx
  40ba02:	xchg   DWORD PTR [ecx+0x74],ebp
  40ba05:	mov    edi,0x44f7d5a
  40ba0a:	xchg   DWORD PTR [edx-0x1d],eax
  40ba0d:	add    edx,DWORD PTR [ebx]
  40ba0f:	(bad)  
  40ba10:	jmp    0x862e:0x327fb8c1
  40ba17:	jg     0x40ba16
  40ba19:	ret    
  40ba1a:	xchg   edi,eax
  40ba1b:	add    ah,bl
  40ba1d:	nop
  40ba1e:	adc    bh,BYTE PTR [ebx-0x4b]
  40ba21:	ret    
  40ba22:	cwde   
  40ba23:	adc    ebx,ecx
  40ba25:	and    al,0x55
  40ba27:	inc    edx
  40ba28:	jecxz  0x40b9b2
  40ba2a:	leave  
  40ba2b:	mov    ds:0xc400702e,eax
  40ba30:	inc    edx
  40ba31:	in     al,0x98
  40ba33:	cmp    DWORD PTR [ecx+0x158608a0],ecx
  40ba39:	push   0x6a6e06b0
  40ba3e:	or     BYTE PTR [esi-0x71b682be],al
  40ba44:	inc    ecx
  40ba45:	adc    BYTE PTR [edx-0x47],bl
  40ba48:	dec    edi
  40ba49:	outs   dx,DWORD PTR ds:[esi]
  40ba4a:	mov    cl,BYTE PTR [ecx+0x7f]
  40ba4d:	loop   0x40b9d2
  40ba4f:	adc    dl,0x92
  40ba52:	inc    edi
  40ba53:	xchg   BYTE PTR [ecx-0x14],al
  40ba56:	mov    ebp,edi
  40ba58:	inc    ecx
  40ba59:	jecxz  0x40ba5e
  40ba5b:	jne    0x40b9f8
  40ba5d:	out    dx,eax
  40ba5e:	ret    0xcbab
  40ba61:	imul   esi,DWORD PTR [edx*4-0x256f1cfe],0xffffffe9
  40ba69:	aaa    
  40ba6a:	ret    
  40ba6b:	or     BYTE PTR [edx-0x26],ch
  40ba6e:	push   ecx
  40ba6f:	xchg   DWORD PTR [edx+0x66],eax
  40ba72:	mov    ecx,esi
  40ba74:	jl     0x40ba91
  40ba76:	ret    
  40ba77:	inc    ecx
  40ba78:	xor    esp,DWORD PTR [ebx]
  40ba7a:	push   esp
  40ba7b:	push   esi
  40ba7c:	jg     0x40bab1
  40ba7e:	cmp    al,0x55
  40ba80:	add    ah,bl
  40ba82:	push   ebx
  40ba83:	fst    DWORD PTR [edx+ecx*1-0x67]
  40ba87:	js     0x40ba8b
  40ba89:	or     ah,BYTE PTR [edx+eax*8-0xb]
  40ba8d:	and    BYTE PTR [edx-0x31],dh
  40ba90:	push   cs
  40ba91:	xchg   DWORD PTR [eax+eax*1-0x3],esp
  40ba95:	jge    0x40ba8b
  40ba97:	(bad)  
  40ba98:	push   ebp
  40ba99:	adc    ah,dl
  40ba9b:	adc    eax,0x6c0a41f5
  40baa0:	(bad)
  40baa3:	mov    esi,0x2aa5fa9e
  40baa8:	mov    cl,ch
  40baaa:	mov    ?,WORD PTR [ecx+0x39f47fc6]
  40bab0:	inc    ebp
  40bab1:	push   edi
  40bab2:	mov    edx,0x8f42c5fb
  40bab7:	test   eax,0xa68949b9
  40babc:	jns    0x40babf
  40babe:	mov    DWORD PTR [esi-0x6d6c0f47],eax
  40bac4:	popa   
  40bac5:	jmp    0xc141a09a
  40baca:	jge    0x40bac6
  40bacc:	lds    eax,FWORD PTR [edx+0x3]
  40bacf:	in     al,dx
  40bad0:	and    eax,0xe8e948aa
  40bad5:	push   eax
  40bad6:	cld    
  40bad7:	in     al,dx
  40bad8:	and    eax,0x82e948aa
  40badd:	idiv   bh
  40badf:	addr16 jbe 0x40bb04
  40bae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bae3:	stos   BYTE PTR es:[edi],al
  40bae4:	test   DWORD PTR [edx+0x4],esp
  40bae7:	jmp    0x7994d871
  40baec:	sbb    BYTE PTR [ecx],0xc3
  40baef:	sub    ecx,DWORD PTR [ecx+0x29725f42]
  40baf5:	ret    
  40baf6:	in     eax,0xfd
  40baf8:	add    BYTE PTR [edi+0x42],bh
  40bafb:	or     bh,BYTE PTR [edx+0x81154f]
  40bb01:	retf   0x1ab5
  40bb04:	inc    eax
  40bb05:	out    dx,eax
  40bb06:	sub    DWORD PTR [edx-0x3b],ebp
  40bb09:	sbb    al,0x42
  40bb0b:	cmc    
  40bb0c:	xlat   BYTE PTR ds:[ebx]
  40bb0d:	or     al,0x9d
  40bb0f:	bound  esp,QWORD PTR [eax]
  40bb11:	pushf  
  40bb12:	xchg   BYTE PTR [edi-0x42],dl
  40bb15:	ret    
  40bb16:	stc    
  40bb17:	inc    edi
  40bb18:	add    BYTE PTR [ecx-0x37],dh
  40bb1b:	adc    eax,0xa07e254
  40bb20:	data16 or al,0xe3
  40bb23:	into   
  40bb24:	inc    ebx
  40bb25:	scas   eax,DWORD PTR es:[edi]
  40bb26:	sub    ebp,DWORD PTR [ecx+0xa07e258]
  40bb2c:	mov    DWORD PTR [edx+0x6f43c86d],edi
  40bb32:	sbb    BYTE PTR ds:0xa017134,0x83
  40bb39:	and    edx,DWORD PTR [edx+0x5c]
  40bb3c:	push   DWORD PTR [eax]
  40bb3e:	int    0xbd
  40bb40:	in     al,dx
  40bb41:	push   es
  40bb42:	xor    ebx,0xffffffe8
  40bb45:	add    edi,DWORD PTR [edi+0x9]
  40bb48:	add    ah,ah
  40bb4a:	push   es
  40bb4b:	jbe    0x40baf0
  40bb4d:	arpl   di,di
  40bb4f:	inc    edi
  40bb50:	add    dh,ah
  40bb52:	scas   eax,DWORD PTR es:[edi]
  40bb53:	or     DWORD PTR [eax],eax
  40bb55:	das    
  40bb56:	into   
  40bb57:	into   
  40bb58:	mov    BYTE PTR [edi],dh
  40bb5a:	add    DWORD PTR [ebx+0x75],eax
  40bb5d:	add    ch,dl
  40bb5f:	int    0xbd
  40bb61:	fcmovb st,st(4)
  40bb63:	xor    ebx,0xffffffe8
  40bb66:	arpl   WORD PTR [edi+0x9],di
  40bb69:	add    BYTE PTR [edx],ah
  40bb6b:	test   DWORD PTR [ecx],0x1e2f1f00
  40bb71:	push   eax
  40bb72:	cmp    al,0xcc
  40bb74:	jge    0x40bb46
  40bb76:	ins    BYTE PTR es:[edi],dx
  40bb77:	mov    ?,ebx
  40bb79:	call   0x394204
  40bb7e:	jmp    0x83be8968
  40bb83:	lock mov edi,0x77f36e4f
  40bb89:	inc    edx
  40bb8a:	xchg   dh,ah
  40bb8c:	mov    edi,es
  40bb8e:	retf   
  40bb8f:	imul   ecx,ecx,0x4f
  40bb92:	scas   al,BYTE PTR es:[edi]
  40bb93:	sub    bh,BYTE PTR [eax-0x37197a00]
  40bb99:	push   cs
  40bb9a:	sbb    ebp,DWORD PTR [ebx+0x6233c2f6]
  40bba0:	std    
  40bba1:	mov    edi,0xc78bf228
  40bba6:	fwait
  40bba7:	mov    ebx,0x69a0b8c9
  40bbac:	or     BYTE PTR [eax],al
  40bbae:	sti    
  40bbaf:	in     eax,0xd6
  40bbb1:	cli    
  40bbb2:	and    DWORD PTR [ebp+0x32c61780],0x3ddefa3d
  40bbbc:	xor    al,BYTE PTR [eax-0x7a]
  40bbbf:	push   ds
  40bbc0:	mov    edi,es
  40bbc2:	add    BYTE PTR [ebx-0x3b],ah
  40bbc5:	leave  
  40bbc6:	dec    edi
  40bbc7:	pop    ecx
  40bbc8:	xchg   edi,eax
  40bbc9:	fs adc esi,eax
  40bbcc:	imul   ecx,DWORD PTR [ebp+0x5ded4e4c],0x5d68ac53
  40bbd6:	push   0xffffff87
  40bbd8:	xchg   ecx,eax
  40bbd9:	or     BYTE PTR [eax],al
  40bbdb:	xchg   cl,ch
  40bbdd:	add    DWORD PTR [esi+edi*1-0x490135f1],0x2c
  40bbe5:	dec    esp
  40bbe6:	cld    
  40bbe7:	sbb    BYTE PTR [ebx+0x8],ch
  40bbea:	add    BYTE PTR [ecx],dl
  40bbec:	lahf   
  40bbed:	clc    
  40bbee:	adc    esi,eax
  40bbf0:	imul   eax,DWORD PTR [ebp+0x2d4305ef],0xb02375c0
  40bbfa:	mov    cs,WORD PTR [edx+0x7e]
  40bbfd:	mov    dl,0xc0
  40bbff:	jb     0x40bc7f
  40bc01:	push   ebp
  40bc02:	xchg   cl,cl
  40bc04:	jge    0x40bc11
  40bc06:	ror    BYTE PTR [ecx+0x14],0xf4
  40bc0a:	adc    eax,0x3a3509a
  40bc0f:	add    eax,DWORD PTR [ebx+0x60d097e]
  40bc15:	out    dx,eax
  40bc16:	lea    eax,[edx+0x7a]
  40bc19:	cmp    al,0xbf
  40bc1b:	call   0x2dc7:0x8643f0a2
  40bc22:	mov    esp,0x38cb7b04
  40bc27:	add    BYTE PTR [edx-0x7bc81e56],al
  40bc2d:	das    
  40bc2e:	mov    ds:0xaa2fa1d5,eax
  40bc33:	es bswap esi
  40bc36:	and    eax,0x937b7acc
  40bc3b:	xchg   ecx,eax
  40bc3c:	or     cl,BYTE PTR [edx+0x6a68bf9d]
  40bc42:	arpl   WORD PTR [ebx-0x7a],sp
  40bc45:	inc    edx
  40bc46:	jle    0x40bbd1
  40bc48:	inc    ecx
  40bc49:	jge    0x40bcbe
  40bc4b:	mov    edi,0x4e2da69
  40bc50:	xchg   dl,ch
  40bc52:	jbe    0x40bcbf
  40bc54:	les    eax,FWORD PTR [edx+0x7a]
  40bc57:	and    DWORD PTR [esi],ebp
  40bc59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc5a:	lahf   
  40bc5b:	add    edi,edi
  40bc5d:	pop    esp
  40bc5e:	out    0x6f,eax
  40bc60:	les    eax,FWORD PTR [edx+0x44]
  40bc63:	xlat   BYTE PTR ds:[ebx]
  40bc64:	sub    eax,ebp
  40bc66:	lahf   
  40bc67:	add    al,0x86
  40bc69:	jmp    0x360a:0x42c635a2
  40bc70:	outs   dx,DWORD PTR ds:[esi]
  40bc71:	xchg   edx,eax
  40bc72:	pop    ss
  40bc73:	test   eax,0x9dc93785
  40bc78:	mov    al,bh
  40bc7a:	icebp  
  40bc7b:	adc    esp,ebp
  40bc7d:	ror    DWORD PTR [ecx],0xe9
  40bc80:	sbb    al,0x41
  40bc82:	cmp    BYTE PTR [ecx],ch
  40bc84:	fdivr  QWORD PTR [edi+0x7d]
  40bc87:	out    dx,al
  40bc88:	add    al,0x4e
  40bc8a:	pop    esi
  40bc8b:	inc    ecx
  40bc8c:	add    BYTE PTR [ebp+0x42],al
  40bc8f:	or     eax,DWORD PTR [ecx]
  40bc91:	mov    esp,0x60e909fc
  40bc96:	sbb    al,0xba
  40bc98:	call   0x350945f9
  40bc9d:	std    
  40bc9e:	data16 mov ch,cl
  40bca1:	in     eax,dx
  40bca2:	shl    ebp,0xed
  40bca5:	mov    BYTE PTR [edx+0xa],al
  40bca8:	sbb    dh,BYTE PTR [eax]
  40bcaa:	adc    eax,DWORD PTR [ecx-0x2ed07dc4]
  40bcb0:	push   0xffffffe0
  40bcb2:	inc    ecx
  40bcb3:	or     esp,0xffffff89
  40bcb6:	mov    ch,0x48
  40bcb8:	jmp    0xfcc3fd7b
  40bcbd:	gs scas al,BYTE PTR es:[edi]
  40bcbf:	dec    eax
  40bcc0:	jmp    0x8142abed
  40bcc5:	pop    eax
  40bcc6:	jge    0x40bcbc
  40bcc8:	xchg   BYTE PTR [ecx],al
  40bcca:	mov    edx,0xba57e67e
  40bccf:	loop   0x40bc88
  40bcd1:	add    BYTE PTR [edx+0xa],0x1a
  40bcd5:	jb     0x40bd19
  40bcd7:	or     dh,cl
  40bcd9:	test   DWORD PTR ds:0x53edf4f5,edx
  40bcdf:	dec    edx
  40bce0:	jmp    0xaae15689
  40bce5:	test   DWORD PTR ds:0x54da00c9,edi
  40bceb:	cmc    
  40bcec:	adc    eax,0x4a5353
  40bcf1:	add    ah,bh
  40bcf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcf4:	lahf   
  40bcf5:	inc    ebx
  40bcf6:	out    dx,eax
  40bcf7:	int    0x15
  40bcf9:	in     al,0x54
  40bcfb:	add    al,0xa
  40bcfd:	jmp    0x40bce7
  40bcff:	jg     0x40bd0e
  40bd01:	in     al,0x44
  40bd03:	add    al,0xa
  40bd05:	add    DWORD PTR ds:0xaa80b24d,eax
  40bd0b:	add    al,0xa
  40bd0d:	pop    ecx
  40bd0e:	push   edi
  40bd0f:	pop    ebp
  40bd10:	mov    eax,eax
  40bd12:	out    0x6,eax
  40bd14:	jg     0x40bd0e
  40bd16:	and    al,0x7a
  40bd18:	clc    
  40bd19:	adc    ch,BYTE PTR [edi+0x3e]
  40bd1c:	(bad)  
  40bd1d:	fsubr  st,st(2)
  40bd1f:	add    ecx,DWORD PTR [edx]
  40bd21:	(bad)  
  40bd22:	jmp    0x6cf8f34d
  40bd27:	ds cmc 
  40bd29:	(bad)  
  40bd2a:	adc    cl,BYTE PTR [edx]
  40bd2c:	adc    BYTE PTR cs:[edi+0x26],ch
  40bd30:	or     BYTE PTR [edx],al
  40bd32:	lahf   
  40bd33:	inc    ebp
  40bd34:	sbb    DWORD PTR ds:0x47f69b,0x20
  40bd3b:	push   ecx
  40bd3c:	(bad)  
  40bd3d:	adc    eax,0x45813e9f
  40bd42:	lods   eax,DWORD PTR ds:[si]
  40bd44:	call   0x88f7ce44
  40bd49:	rcr    BYTE PTR [ebx-0x3e],0x2f
  40bd4d:	sti    
  40bd4e:	pop    edx
  40bd4f:	bound  edx,QWORD PTR [edi+0x53]
  40bd52:	test   DWORD PTR [ebp+0x62],eax
  40bd55:	pop    eax
  40bd56:	add    BYTE PTR [ebx+0x3aff0a03],al
  40bd5c:	std    
  40bd5d:	sbb    al,BYTE PTR [eax+0x1f]
  40bd60:	ret    0x5
  40bd63:	xchg   ah,bl
  40bd65:	dec    edx
  40bd66:	add    BYTE PTR [ecx],ah
  40bd68:	int3   
  40bd69:	leave  
  40bd6a:	mov    cl,0xc5
  40bd6c:	imul   esi,ecx,0xffffffc2
  40bd6f:	sbb    edi,0x3009ff69
  40bd75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd76:	sub    al,0x2
  40bd78:	sub    BYTE PTR [edi-0x7390397d],dh
  40bd7e:	dec    esi
  40bd7f:	icebp  
  40bd80:	push   edi
  40bd81:	mov    bh,0xfe
  40bd83:	jae    0x40bde8
  40bd85:	mov    al,ds:0xb747e25b
  40bd8a:	add    esi,0x6f
  40bd8d:	mov    WORD PTR [esi],?
  40bd8f:	shl    DWORD PTR [edi-0x4b],1
  40bd92:	(bad)  
  40bd93:	jae    0x40bda4
  40bd95:	sbb    BYTE PTR [eax-0x7a],al
  40bd98:	or     al,0x92
  40bd9a:	scas   eax,DWORD PTR es:[edi]
  40bd9b:	inc    ebp
  40bd9c:	imul   esi,ecx,0xfffffffa
  40bd9f:	cmp    edi,DWORD PTR [edx]
  40bda1:	adc    DWORD PTR [edx+esi*2],0xffffffbf
  40bda5:	dec    ecx
  40bda6:	add    BYTE PTR [esi-0x79fe1291],ch
  40bdac:	inc    esp
  40bdad:	retf   
  40bdae:	push   cs
  40bdaf:	or     dl,BYTE PTR [esi+0x4389feb5]
  40bdb5:	or     eax,0xe2d3234
  40bdba:	mov    ds:0x4a1c7e00,eax
  40bdbf:	add    BYTE PTR [ebp-0x4d0c45c],ch
  40bdc5:	or     eax,0x69879fed
  40bdca:	or     al,ch
  40bdcc:	push   edi
  40bdcd:	ins    DWORD PTR es:[edi],dx
  40bdce:	or     BYTE PTR [eax],al
  40bdd0:	mov    ch,0xe6
  40bdd2:	mov    WORD PTR [ebx],fs
  40bdd4:	cmp    esp,DWORD PTR [edi+0x8]
  40bdd7:	add    dh,dl
  40bdd9:	call   0x432ae9d9
  40bdde:	mov    al,ds:0x90aaef03
  40bde3:	inc    eax
  40bde4:	xchg   dl,ch
  40bde6:	jp     0x40be5b
  40bde8:	les    eax,FWORD PTR [edx-0x65]
  40bdeb:	adc    ebp,esi
  40bded:	shl    DWORD PTR [esi-0x55],cl
  40bdf0:	addr16 and cl,ah
  40bdf3:	add    ecx,DWORD PTR [ecx]
  40bdf5:	out    dx,al
  40bdf6:	jmp    0x5bc:0x237652ab
  40bdfd:	cmp    ebx,0xffffff87
  40be00:	sar    BYTE PTR [eax+0x13],0xbc
  40be04:	repz std 
  40be06:	jmp    0xddb1:0xb3f5a01
  40be0d:	ja     0x40be1a
  40be0f:	test   al,0x87
  40be11:	mov    dl,0xe1
  40be13:	stc    
  40be14:	les    eax,FWORD PTR [edi+0x56]
  40be17:	ret    
  40be18:	pusha  
  40be19:	sbb    BYTE PTR [eax-0x5eea5d78],bl
  40be1f:	add    BYTE PTR [eax],al
  40be21:	xchg   BYTE PTR ds:0x5f04a878,cl
  40be27:	fiadd  DWORD PTR [ebp+0x3eb62ad]
  40be2d:	xchg   BYTE PTR [eax],dl
  40be2f:	adc    al,0x89
  40be31:	int    0x1e
  40be33:	inc    ebx
  40be34:	push   es
  40be35:	xchg   BYTE PTR [edx-0x35],al
  40be38:	add    DWORD PTR [edx+eax*2+0x1ef588e3],0x11
  40be40:	lods   al,BYTE PTR ds:[esi]
  40be41:	jnp    0x40be7d
  40be43:	loop   0x40be48
  40be45:	std    
  40be46:	rol    DWORD PTR [ebp+eax*1+0x6094286],0xb
  40be4e:	mov    dh,0x88
  40be51:	mov    eax,DWORD PTR [edx-0x1d]
  40be54:	push   esp
  40be55:	dec    ecx
  40be56:	in     eax,dx
  40be57:	or     ecx,esp
  40be59:	push   cs
  40be5a:	or     ebp,DWORD PTR [esi]
  40be5c:	aad    0x6d
  40be5e:	fidivr DWORD PTR [ecx-0x45957a56]
  40be64:	add    al,0x80
  40be66:	inc    edx
  40be67:	mov    bl,0x47
  40be69:	mov    eax,DWORD PTR [edx+0xa]
  40be6c:	bound  eax,QWORD PTR [ebp+edi*2+0x9]
  40be70:	jmp    0x40bfc83a
  40be75:	inc    DWORD PTR [edx]
  40be77:	cs loope 0x40becf
  40be7a:	in     al,dx
  40be7b:	or     al,cl
  40be7d:	pop    ebp
  40be7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be7f:	dec    eax
  40be80:	jmp    0xf8930cb1
  40be85:	add    BYTE PTR [ebp+0x42],al
  40be88:	sbb    DWORD PTR [ecx],0xf77d6d07
  40be8e:	sbb    al,0x4e
  40be90:	adc    bl,al
  40be92:	inc    ebp
  40be93:	inc    edx
  40be94:	aaa    
  40be95:	add    BYTE PTR ss:[edx+0xa],0x7c
  40be9a:	xchg   edx,eax
  40be9b:	adc    ch,dh
  40be9d:	aam    0x25
  40be9f:	push   ecx
  40bea0:	dec    edx
  40bea1:	jmp    0x72952b5e
  40bea6:	(bad)  
  40bea7:	adc    al,0x81
  40bea9:	int3   
  40beaa:	test   BYTE PTR ds:0xe5cb36e9,cl
  40beb1:	push   0xfffffff1
  40beb3:	outs   dx,BYTE PTR ds:[esi]
  40beb4:	mov    cl,ch
  40beb6:	add    DWORD PTR [esi],edi
  40beb8:	or     ch,cl
  40beba:	aam    0xc7
  40bebc:	jne    0x40bec3
  40bebe:	mov    ch,BYTE PTR [edx+0xa]
  40bec1:	jmp    0xc992:0x14f54285
  40bec8:	inc    esi
  40bec9:	in     eax,0xe
  40becb:	ret    0xd42d
  40bece:	pop    ecx
  40becf:	jbe    0x40bec5
  40bed1:	add    BYTE PTR [edi-0x47],ch
  40bed4:	cmp    eax,0x9fcbb2c
  40bed9:	mov    esi,DWORD PTR [edx+0x46]
  40bedc:	bound  ebx,QWORD PTR [eax-0x17f60381]
  40bee2:	xchg   ebx,eax
  40bee3:	arpl   WORD PTR [edx],cx
  40bee5:	add    al,ch
  40bee7:	(bad)  
  40bee8:	in     eax,dx
  40bee9:	pop    ebp
  40beea:	add    BYTE PTR [ebp+0x3d],ch
  40beed:	or     dl,BYTE PTR [ebp-0x5c]
  40bef0:	popf   
  40bef1:	xchg   esp,ebp
  40bef3:	aaa    
  40bef4:	adc    al,0xf5
  40bef6:	jne    0x40bf13
  40bef8:	retf   
  40bef9:	dec    ebp
  40befa:	cwde   
  40befb:	pop    ds
  40befc:	mov    ecx,0xdd47087d
  40bf01:	repz jmp FWORD PTR [eax+0x2f984dca]
  40bf08:	sub    BYTE PTR [edx],cl
  40bf0a:	push   0x47de17
  40bf0f:	mov    BYTE PTR [edx+0x52],dl
  40bf12:	adc    DWORD PTR [edi],ebx
  40bf14:	inc    edx
  40bf15:	xor    eax,0x1b78b362
  40bf1b:	add    eax,0xd2ff5eb9
  40bf20:	push   ecx
  40bf21:	sbb    DWORD PTR [eax-0x61],eax
  40bf24:	hlt    
  40bf25:	mov    ah,0x74
  40bf27:	mov    dl,0x6c
  40bf29:	je     0x40bf2b
  40bf2b:	scas   eax,DWORD PTR es:[edi]
  40bf2c:	inc    ecx
  40bf2d:	jle    0x40bf3d
  40bf2f:	push   ecx
  40bf30:	mov    ebx,0x1ada01d
  40bf35:	or     dh,BYTE PTR [ebx]
  40bf37:	fistp  WORD PTR [eax]
  40bf39:	ret    
  40bf3a:	ret    0x4167
  40bf3d:	add    esi,0x8b5db344
  40bf43:	sbb    edx,DWORD PTR [ecx]
  40bf45:	pop    ebx
  40bf46:	mov    ebx,DWORD PTR [edx+0x65]
  40bf49:	mov    al,ds:0x5d6b8643
  40bf4e:	push   edi
  40bf4f:	add    BYTE PTR [esi+0x1a],ch
  40bf52:	call   0xd5f94558
  40bf57:	mov    bl,al
  40bf59:	ret    
  40bf5a:	test   dl,0xbb
  40bf5d:	fs std 
  40bf5f:	mov    edi,0xd9e2f
  40bf64:	xchg   BYTE PTR [ecx-0x192aacf2],dl
  40bf6a:	xor    al,0x8
  40bf6c:	mov    dh,0xb4
  40bf6e:	mov    cl,0x74
  40bf70:	mov    fs,ebx
  40bf72:	pop    esp
  40bf73:	call   FWORD PTR [esp+edi*8-0x671deb4e]
  40bf7a:	dec    eax
  40bf7b:	add    BYTE PTR [ebx],cl
  40bf7d:	sub    esp,DWORD PTR ds:0xb19dc004
  40bf83:	add    BYTE PTR [edi],ah
  40bf85:	mov    ebp,DWORD PTR [edx+eax*2-0x7a]
  40bf89:	call   0xa6cfd33b
  40bf8e:	or     al,0x56
  40bf90:	or     eax,0x4611848e
  40bf95:	imul   ebx,DWORD PTR [ebp-0x48],0xffffffa6
  40bf99:	pop    es
  40bf9a:	dec    edi
  40bf9b:	add    BYTE PTR [ebp+0x66],ch
  40bf9e:	in     al,0xab
  40bfa0:	inc    ebp
  40bfa1:	imul   esp,DWORD PTR [esi],0x4
  40bfa4:	test   DWORD PTR [esi],esp
  40bfa6:	mov    dh,0x8c
  40bfa8:	cmp    esp,DWORD PTR [edi+0x57]
  40bfab:	push   eax
  40bfac:	cmp    DWORD PTR [edx+ebx*8+0xf0dc684],ecx
  40bfb3:	inc    BYTE PTR [eax]
  40bfb5:	dec    ebx
  40bfb6:	jl     0x40c015
  40bfb8:	mov    eax,0x4dc752
  40bfbd:	lods   eax,DWORD PTR ds:[esi]
  40bfbe:	data16 in al,0xab
  40bfc1:	lds    ebp,FWORD PTR [ecx+0x26]
  40bfc4:	add    al,0x85
  40bfc6:	inc    edx
  40bfc7:	es mov esp,0x52ab05fa
  40bfcd:	mov    dh,0xb
  40bfcf:	pushf  
  40bfd0:	sar    DWORD PTR [ebx-0x7ad15d43],1
  40bfd6:	je     0x40bffd
  40bfd8:	mov    ecx,0x75772e48
  40bfdd:	les    eax,FWORD PTR [edx+0x3b]
  40bfe0:	mov    bh,0xf7
  40bfe2:	jmp    edx
  40bfe4:	mov    eax,0xabb37aba
  40bfe9:	(bad)  
  40bfea:	imul   edx,DWORD PTR [ebx-0x48],0x5
  40bfee:	adc    ebp,0x4
  40bff1:	sbb    dh,bh
  40bff3:	inc    ebx
  40bff4:	mov    eax,0x4470425a
  40bff9:	xchg   BYTE PTR [edx+0x424474e2],bh
  40bfff:	cmp    al,0x2e
  40c001:	dec    BYTE PTR [ebx]
  40c003:	dec    ebx
  40c004:	sub    ecx,edi
  40c006:	jae    0x40c033
  40c008:	jg     0x40c033
  40c00a:	out    dx,al
  40c00b:	fistp  QWORD PTR [ecx+0x56da734a]
  40c011:	fldz   
  40c013:	std    
  40c014:	sub    eax,DWORD PTR [esi+0x3e2c2]
  40c01a:	xor    eax,0x58bb7d73
  40c01f:	jae    0x40bff6
  40c021:	(bad)  
  40c022:	xchg   edi,eax
  40c023:	add    ah,bl
  40c025:	stos   BYTE PTR es:[edi],al
  40c026:	js     0x40c09b
  40c028:	jmp    0x40bfe1
  40c02a:	cld    
  40c02b:	std    
  40c02c:	jmp    0x2c03:0xea80cf5b
  40c033:	inc    edx
  40c034:	(bad)  
  40c035:	icebp  
  40c036:	lea    esi,[eax+0x4d89041f]
  40c03c:	rcl    DWORD PTR [edx],cl
  40c03e:	mov    BYTE PTR [edx+0xa],0xbe
  40c042:	pop    edx
  40c043:	pop    eax
  40c044:	retf   0x52b6
  40c047:	sbb    BYTE PTR [esi+0x74],0x9e
  40c04b:	push   ds
  40c04c:	xchg   BYTE PTR [eax+0x2e],ch
  40c04f:	aas    
  40c050:	or     cl,ch
  40c052:	test   DWORD PTR [edi+eax*4],ecx
  40c055:	and    al,0xa6
  40c057:	adc    al,BYTE PTR [edi-0x32fce5d4]
  40c05d:	and    al,0x66
  40c05f:	sub    cl,BYTE PTR [edx]
  40c061:	jmp    0x915f33eb
  40c066:	xchg   esp,eax
  40c067:	add    cl,BYTE PTR [edx]
  40c069:	ins    BYTE PTR es:[edi],dx
  40c06a:	inc    edx
  40c06b:	out    dx,al
  40c06c:	push   es
  40c06d:	ins    BYTE PTR es:[edi],dx
  40c06e:	push   edi
  40c06f:	push   0xffffffb1
  40c071:	lahf   
  40c072:	add    BYTE PTR [edx+0xa],0x41
  40c076:	or     eax,0xfce90afb
  40c07b:	sub    eax,0x4500d73e
  40c080:	inc    edx
  40c081:	pop    ecx
  40c082:	sahf   
  40c083:	jl     0x40c0dc
  40c085:	or     ebp,ecx
  40c087:	test   DWORD PTR [edi],ecx
  40c089:	cmp    DWORD PTR [esi],esp
  40c08b:	(bad)  
  40c08c:	mov    ebp,0x74191f79
  40c091:	pop    esp
  40c092:	mov    ecx,0x25888d10
  40c097:	jle    0x40c05e
  40c099:	mov    ?,WORD PTR [ecx+0x13]
  40c09c:	je     0x40c092
  40c09e:	cdq    
  40c09f:	adc    dl,dh
  40c0a1:	jns    0x40c09a
  40c0a3:	lock jae 0x40c09a
  40c0a6:	aam    0xf1
  40c0a8:	push   eax
  40c0a9:	dec    edx
  40c0aa:	jmp    0xf0bf73b5
  40c0af:	xor    al,0xc5
  40c0b1:	mov    ds,WORD PTR [ecx-0x30]
  40c0b4:	jae    0x40c0aa
  40c0b6:	ret    0xea7c
  40c0b9:	or     DWORD PTR [eax],eax
  40c0bb:	sahf   
  40c0bc:	or     cl,BYTE PTR ds:[ebp-0x90e16]
  40c0c3:	xor    BYTE PTR [ecx],al
  40c0c5:	pop    edx
  40c0c6:	call   FWORD PTR [ecx]
  40c0c8:	(bad)
  40c0cb:	repnz xor al,BYTE PTR [esi+0xa45beb8]
  40c0d2:	add    BYTE PTR [edi],al
  40c0d4:	cdq    
  40c0d5:	dec    ebx
  40c0d6:	add    DWORD PTR [edi-0x45],ebx
  40c0d9:	jge    0x40c11b
  40c0db:	(bad)  
  40c0dc:	repz hlt 
  40c0de:	jmp    FWORD PTR [edi]
  40c0e0:	sahf   
  40c0e1:	fiadd  DWORD PTR [edi+0x0]
  40c0e4:	cs inc esi
  40c0e6:	add    esi,0x8c4dbb8f
  40c0ec:	out    dx,eax
  40c0ed:	clc    
  40c0ee:	or     al,BYTE PTR [eax]
  40c0f0:	das    
  40c0f1:	(bad)  
  40c0f2:	jg     0x40c0bb
  40c0f4:	(bad)  
  40c0f5:	mov    cl,0xd1
  40c0f7:	add    DWORD PTR [edi],ebx
  40c0f9:	mov    edi,0x32925c4d
  40c0fe:	xor    bh,BYTE PTR [eax+0xa457c]
  40c104:	inc    edi
  40c105:	call   0xbb1fc255
  40c10a:	dec    ebp
  40c10b:	jo     0x40c13c
  40c10d:	sbb    al,0xb
  40c10f:	xor    edi,DWORD PTR [ecx-0x1]
  40c112:	xchg   BYTE PTR [ebp+0x63],al
  40c115:	adc    eax,0x29fa895d
  40c11a:	cmp    DWORD PTR [ebp+0x4f],0xffffffbe
  40c11e:	jge    0x40c188
  40c120:	rol    BYTE PTR [ecx+0x7a],0x10
  40c124:	out    dx,eax
  40c125:	inc    ebp
  40c126:	pop    eax
  40c128:	cmp    dl,BYTE PTR [edi+eax*4+0x45]
  40c12c:	push   edi
  40c12d:	push   ss
  40c12e:	pop    esp
  40c12f:	lea    ebp,[edx+0x6e]
  40c132:	inc    esp
  40c133:	lea    eax,[esi+0x32e83e16]
  40c139:	mov    ch,0x8
  40c13b:	add    BYTE PTR [ebp-0x7e3876a4],bl
  40c141:	fdiv   QWORD PTR [ebp-0xe6b0d02]
  40c147:	lds    eax,FWORD PTR [eax]
  40c149:	clc    
  40c14a:	cwde   
  40c14b:	pop    eax
  40c14c:	push   ebx
  40c14e:	push   ebx
  40c14f:	lea    edi,[edx+esi*8+0x55]
  40c153:	or     BYTE PTR [eax+0x6e],bl
  40c156:	inc    ebp
  40c157:	or     al,0x0
  40c159:	xchg   al,al
  40c15b:	and    al,0x68
  40c15d:	pop    esi
  40c15e:	imul   edi,DWORD PTR [eax+0x34f441fe],0x2e1e0f6c
  40c168:	lea    edi,[ebx-0x794c89e5]
  40c16e:	pop    ebx
  40c16f:	or     al,ch
  40c171:	retf   
  40c172:	test   al,0x7
  40c174:	add    BYTE PTR [ebp+0x106f74e6],dh
  40c17a:	add    BYTE PTR [edi-0x74a263b1],bh
  40c180:	jl     0x40c1f8
  40c182:	mov    ds:0x5b883ba0,eax
  40c187:	or     BYTE PTR [edx+0x7e],ch
  40c18a:	push   cs
  40c18b:	xor    eax,0xad5565c
  40c190:	lea    esp,[ebx-0x41]
  40c193:	push   eax
  40c194:	call   0x492b46
  40c199:	rcl    ebp,1
  40c19b:	sub    al,0x8d
  40c19d:	inc    ebx
  40c19e:	push   ebx
  40c19f:	mov    edi,0x81cb3674
  40c1a4:	lds    ecx,FWORD PTR ds:0x1c503cee
  40c1aa:	lahf   
  40c1ab:	push   ecx
  40c1ac:	mov    eax,DWORD PTR [eax]
  40c1ae:	test   al,0x41
  40c1b0:	fld    TBYTE PTR [ecx+0x54]
  40c1b3:	inc    edx
  40c1b4:	jecxz  0x40c136
  40c1b6:	lds    edx,FWORD PTR [ecx+0x3c]
  40c1b9:	mov    ecx,DWORD PTR [edx-0x1a]
  40c1bc:	aaa    
  40c1bd:	adc    DWORD PTR [ecx+0x3e0a4e42],0x8603e2b6
  40c1c7:	pop    edx
  40c1c8:	mov    dl,0x3d
  40c1ca:	xchg   DWORD PTR [edx+0x5],eax
  40c1cd:	add    DWORD PTR [edx-0x9],0x4285c1b9
  40c1d4:	cmp    eax,0xe3460176
  40c1d9:	add    edi,DWORD PTR [eax-0x39dd1526]
  40c1df:	inc    edx
  40c1e0:	adc    al,0xb5
  40c1e2:	call   0xedbb:0x8643dd32
  40c1e9:	mov    ebx,0xe303f7
  40c1ee:	jnp    0x40c226
  40c1f0:	lahf   
  40c1f1:	inc    eax
  40c1f2:	xchg   bl,al
  40c1f4:	cs pop es
  40c1f6:	or     eax,0xffc50788
  40c1fb:	push   esi
  40c1fc:	loop   0x40c1f1
  40c1fe:	jns    0x40c202
  40c200:	mov    ebp,0x2010f92e
  40c205:	dec    esi
  40c206:	or     eax,0x81a7615f
  40c20b:	inc    ebx
  40c20c:	jecxz  0x40c211
  40c20e:	push   ebp
  40c20f:	fidivr DWORD PTR [edx-0x2]
  40c212:	add    cl,ah
  40c214:	outs   dx,DWORD PTR ds:[esi]
  40c215:	call   0xa86:0xe302670b
  40c21c:	ja     0x40c222
  40c21e:	mov    ah,0xc8
  40c220:	pop    edx
  40c221:	fimul  WORD PTR [ebp-0x79]
  40c224:	inc    edx
  40c225:	js     0x40c22c
  40c227:	push   esi
  40c228:	mov    ebx,0x5a7dac09
  40c22d:	and    DWORD PTR [edi-0x1032bd7b],edx
  40c233:	test   DWORD PTR [edx+ecx*1-0x17],eax
  40c237:	push   cs
  40c238:	mov    al,0x7d
  40c23a:	or     eax,0xcffdbf07
  40c23f:	aad    0x70
  40c241:	pop    edx
  40c242:	pop    ds
  40c243:	fidivr DWORD PTR [ebp+0x7036b596]
  40c249:	hlt    
  40c24a:	rcl    DWORD PTR [edx],0x13
  40c24d:	or     ch,cl
  40c24f:	add    DWORD PTR [edi+0x3514f57d],ebp
  40c255:	sub    DWORD PTR [edx-0x7961a54e],0xebe07015
  40c25f:	push   eax
  40c260:	scas   eax,DWORD PTR es:[edi]
  40c261:	push   eax
  40c262:	mov    al,0x48
  40c264:	inc    ebx
  40c265:	or     dl,BYTE PTR [ecx+edi*4]
  40c268:	pop    ebx
  40c269:	mov    al,BYTE PTR [ebp-0x16f5bdde]
  40c26f:	rcr    BYTE PTR [eax],1
  40c271:	pop    ebp
  40c272:	mov    ds:0xe90a417e,al
  40c277:	add    BYTE PTR [eax-0x423e0e45],dh
  40c27d:	hlt    
  40c27e:	dec    ecx
  40c27f:	jmp    0x4806888a
  40c284:	xor    eax,0x4f265970
  40c289:	push   0xffffffdf
  40c28b:	mov    DWORD PTR [edx],ebx
  40c28d:	(bad)  
  40c28f:	jmp    DWORD PTR [eax+esi*2]
  40c292:	hlt    
  40c293:	ficomp DWORD PTR [edi]
  40c295:	xor    al,0xca
  40c297:	jae    0x40c2df
  40c299:	inc    ebp
  40c29a:	repnz fst DWORD PTR [ecx+0x36]
  40c29e:	(bad)  
  40c29f:	unpckhps xmm6,XMMWORD PTR [eax+0x49]
  40c2a3:	add    BYTE PTR [esi+ebx*4],ch
  40c2a6:	or     BYTE PTR [ebp-0x53],dh
  40c2a9:	ja     0x40c25f
  40c2ab:	inc    esi
  40c2ac:	hlt    
  40c2ad:	mov    bh,0x7a
  40c2af:	call   0x8d7545a0
  40c2b4:	inc    edx
  40c2b5:	into   
  40c2b6:	in     al,dx
  40c2b7:	xchg   ebx,eax
  40c2b8:	xchg   esp,eax
  40c2b9:	inc    edx
  40c2ba:	or     al,BYTE PTR [ebx-0x730b55be]
  40c2c0:	and    ch,BYTE PTR [edi+0x1248fff6]
  40c2c6:	add    esi,0xf93d57
  40c2cc:	pop    edi
  40c2cd:	(bad)  
  40c2ce:	mov    ah,0x74
  40c2d0:	mov    ds:0xc4e8ceed,eax
  40c2d5:	mov    ch,0xf4
  40c2d7:	call   esp
  40c2d9:	mov    cl,0x81
  40c2db:	jne    0x40c2dd
  40c2dd:	idiv   DWORD PTR [edx+0x5d337efe]
  40c2e3:	div    BYTE PTR [esi-0x1]
  40c2e6:	mov    esi,?
  40c2e8:	push   edi
  40c2e9:	mov    eax,0x628d022a
  40c2ee:	into   
  40c2ef:	in     al,dx
  40c2f0:	fsub   DWORD PTR [edx+eax*2]
  40c2f3:	or     al,BYTE PTR [edi+ebp*2+0x3a031435]
  40c2fa:	push   0x7f
  40c2fc:	(bad)  
  40c2fd:	rol    dl,1
  40c2ff:	jne    0x40c2e9
  40c301:	(bad)  
  40c302:	aaa    
  40c303:	stc    
  40c304:	add    bh,ch
  40c306:	lds    esi,FWORD PTR [esp+esi*2-0x17041315]
  40c30d:	pushf  
  40c30e:	mov    bh,0xf4
  40c310:	jmp    DWORD PTR [edx+ebp*1-0xe]
  40c314:	jmp    0x40c2eb
  40c316:	ret    0xe87d
  40c319:	ja     0x40c306
  40c31b:	cli    
  40c31c:	add    BYTE PTR [esi+0x35f5fb5b],al
  40c322:	push   cs
  40c323:	or     bl,0xc0
  40c326:	inc    esp
  40c327:	mov    eax,0xb7cb8669
  40c32c:	adc    al,0x7a
  40c32e:	lea    ecx,[eax+0x0]
  40c331:	add    eax,0xd5ef528
  40c336:	sahf   
  40c337:	push   edi
  40c338:	pop    ebx
  40c339:	iret   
  40c33a:	cdq    
  40c33b:	add    DWORD PTR [eax],eax
  40c33d:	cmp    esp,eax
  40c33f:	test   eax,0xeb9a0080
  40c344:	or     al,0x0
  40c346:	xchg   BYTE PTR [eax+0x50],cl
  40c349:	push   edi
  40c34a:	in     al,dx
  40c34b:	inc    edi
  40c34c:	xchg   esi,eax
  40c34d:	pop    ss
  40c34e:	pusha  
  40c34f:	mov    ah,0xba
  40c351:	xor    cl,BYTE PTR [ebp+0x70]
  40c354:	int    0x73
  40c356:	(bad)  
  40c357:	lock mov ebp,0x8c414e7
  40c35d:	add    BYTE PTR [ebp+0x59],bl
  40c360:	std    
  40c361:	mov    edi,0x42546325
  40c366:	xchg   BYTE PTR [eax+0x67020ecd],al
  40c36c:	pop    es
  40c36d:	add    BYTE PTR [esi-0x3a541206],al
  40c373:	pop    ebx
  40c374:	dec    edi
  40c375:	fist   WORD PTR [ecx+0x20f085b]
  40c37b:	pop    ss
  40c37c:	push   cs
  40c37d:	add    BYTE PTR [esi-0x79f7f23e],al
  40c383:	pop    ebx
  40c384:	cmp    al,0x2b
  40c386:	outs   dx,BYTE PTR ds:[esi]
  40c387:	prefetch BYTE PTR [eax]
  40c38a:	xchg   BYTE PTR [ebx],dl
  40c38c:	shr    esp,0xf1
  40c38f:	xor    esp,edi
  40c391:	ret    0x8a72
  40c394:	mov    ecx,0x5141e234
  40c399:	inc    ebp
  40c39a:	xchg   BYTE PTR [ecx+0x244e9c12],bh
  40c3a0:	loop   0x40c3a5
  40c3a2:	std    
  40c3a3:	jno    0x40c3ac
  40c3a5:	push   es
  40c3a6:	add    BYTE PTR [ebp+0x74],dh
  40c3a9:	inc    ecx
  40c3aa:	cld    
  40c3ab:	in     eax,dx
  40c3ac:	add    bl,ah
  40c3ae:	fwait
  40c3af:	in     al,0xbd
  40c3b1:	loope  0x40c3b6
  40c3b3:	mov    al,0x46
  40c3b5:	ret    
  40c3b6:	pop    edi
  40c3b7:	inc    esp
  40c3b8:	inc    edx
  40c3b9:	add    edi,DWORD PTR [eax]
  40c3bb:	lea    edi,[edi+0x6c8c3795]
  40c3c1:	fistp  DWORD PTR [ebx-0x4f3c938d]
  40c3c7:	js     0x40c40f
  40c3c9:	add    esp,DWORD PTR [eax-0x3c]
  40c3cc:	inc    edx
  40c3cd:	jecxz  0x40c3d1
  40c3cf:	xchg   BYTE PTR [edx+0x37],al
  40c3d2:	adc    eax,0x5feb2dfd
  40c3d7:	les    eax,FWORD PTR [edx+0x30]
  40c3da:	push   ebp
  40c3db:	out    dx,al
  40c3dc:	push   esp
  40c3dd:	rol    BYTE PTR [edx-0x7a],1
  40c3e0:	jnp    0xe3832486
  40c3e6:	mov    ecx,0x445f228a
  40c3eb:	xchg   BYTE PTR [edx],al
  40c3ed:	(bad)  
  40c3ee:	aas    
  40c3ef:	pushf  
  40c3f0:	mov    esi,DWORD PTR ds:[esi]
  40c3f3:	sbb    ebp,DWORD PTR [ebx+eiz*2+0x70]
  40c3f7:	xor    DWORD PTR [ecx+0x7f5d03a2],edi
  40c3fd:	fdivp  st(7),st
  40c3ff:	(bad)  
  40c400:	sub    ch,BYTE PTR [ebx+0x4b]
  40c403:	cmp    BYTE PTR [ecx+0x730cfbba],0x57
  40c40a:	add    eax,0x8174b500
  40c40f:	sti    
  40c410:	sbb    eax,0xde90a00
  40c415:	sub    eax,0xd885e886
  40c41a:	add    eax,0xf45d9811
  40c41f:	push   ds
  40c420:	loop   0x40c3a2
  40c422:	jge    0x40c408
  40c424:	dec    esp
  40c425:	xor    ecx,esp
  40c427:	test   eax,0xa1834189
  40c42c:	mov    ebp,0x8b12f9b8
  40c431:	das    
  40c432:	cld    
  40c433:	dec    eax
  40c434:	lods   eax,DWORD PTR ds:[esi]
  40c435:	xchg   edi,eax
  40c436:	dec    eax
  40c437:	jmp    0xe8c70d39
  40c43c:	test   DWORD PTR [esi+ecx*1+0x9],esi
  40c440:	add    BYTE PTR es:[edx],cl
  40c443:	imul   ecx,DWORD PTR [esi+0x37],0x977ddc81
  40c44a:	dec    eax
  40c44b:	jmp    0xeb5bbe6d
  40c450:	test   DWORD PTR [edx],ebp
  40c452:	push   edi
  40c453:	loope  0x40c406
  40c455:	and    DWORD PTR [ecx+0x48975df4],eax
  40c45b:	jmp    0xe922f35d
  40c460:	test   DWORD PTR [ecx+0x42c54501],esp
  40c466:	sbb    DWORD PTR [ecx-0xd827fd3],0xe8eba91d
  40c470:	add    BYTE PTR [ebp-0x19201dec],al
  40c476:	imul   esi,esp,0xe
  40c479:	rol    BYTE PTR [edi],1
  40c47b:	ret    
  40c47c:	sub    ecx,DWORD PTR [esi-0x198da0be]
  40c482:	shl    ebp,0xe5
  40c485:	xchg   DWORD PTR [edx+0xa],eax
  40c488:	pop    esp
  40c489:	dec    edi
  40c48a:	cmp    bl,BYTE PTR [edx+0x0]
  40c48d:	inc    eax
  40c48e:	sub    DWORD PTR [edx],eax
  40c490:	(bad)  
  40c491:	sub    bl,BYTE PTR [esp+esi*8+0x1a42cafe]
  40c498:	inc    eax
  40c499:	out    dx,eax
  40c49a:	mov    ecx,0xff674b4
  40c49f:	pop    ebp
  40c4a0:	(bad)  
  40c4a1:	cli    
  40c4a2:	scas   ax,WORD PTR es:[edi]
  40c4a4:	add    al,0xde
  40c4a6:	or     ch,BYTE PTR ds:[eax+0xf]
  40c4aa:	xor    ecx,DWORD PTR [edx+0x0]
  40c4ad:	xor    dh,cl
  40c4af:	clc    
  40c4b0:	std    
  40c4b1:	mov    al,0x9b
  40c4b3:	in     al,dx
  40c4b4:	mov    ah,0xef
  40c4b6:	or     bl,BYTE PTR ds:[ecx-0xa]
  40c4ba:	mov    ecx,0x4e617eb4
  40c4bf:	shl    BYTE PTR [edi+ebx*2+0x46],cl
  40c4c3:	add    edi,0xade4f
  40c4c9:	outs   dx,DWORD PTR ds:[esi]
  40c4ca:	(bad)  
  40c4cb:	in     al,dx
  40c4cc:	inc    ebp
  40c4cd:	sbb    bh,BYTE PTR [edi]
  40c4cf:	or     al,BYTE PTR [ebp-0x7cddcde1]
  40c4d5:	add    BYTE PTR [edi],dh
  40c4d7:	cdq    
  40c4d8:	js     0x40c4fd
  40c4da:	in     al,0x80
  40c4dc:	inc    esp
  40c4dd:	call   FWORD PTR [edx+0x22]
  40c4e0:	sbb    DWORD PTR [eax+0x5f],eax
  40c4e3:	adc    eax,0xed6375f5
  40c4e8:	retf   
  40c4e9:	push   eax
  40c4ea:	adc    BYTE PTR [ebx+0x4e],cl
  40c4ed:	adc    DWORD PTR [edi+0x3e],ebp
  40c4f0:	inc    edx
  40c4f1:	lea    esi,[ecx+ebx*4+0x2f]
  40c4f5:	enter  0x8655,0xf6
  40c4f9:	shl    BYTE PTR [edi+0x3afff4fa],0x6e
  40c500:	repz adc eax,0x4a5407
  40c506:	xchg   BYTE PTR [eax-0x7b475c1],dh
  40c50c:	mov    ch,0xc1
  40c50e:	mov    ds,WORD PTR [ebx+0x51]
  40c511:	mov    esp,edx
  40c513:	fsubr  QWORD PTR [edi+esi*8-0x5a6fa3a4]
  40c51a:	fstp   DWORD PTR [eax]
  40c51c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c51d:	add    esi,0xffffffc7
  40c520:	sbb    BYTE PTR [edx-0x7a],ch
  40c523:	push   ebx
  40c524:	pop    es
  40c525:	dec    cl
  40c527:	push   eax
  40c528:	xchg   ecx,eax
  40c529:	mov    BYTE PTR [esi+0x5b],0x8
  40c52d:	mov    al,0x87
  40c52f:	push   esp
  40c530:	or     esi,DWORD PTR [edx]
  40c532:	(bad)  
  40c533:	hlt    
  40c534:	mov    eax,ds:0xdd43c55c
  40c539:	inc    BYTE PTR [eax]
  40c53b:	mov    eax,ds:0x12bf8b58
  40c540:	cmp    DWORD PTR [eax],edx
  40c542:	add    BYTE PTR [ecx+0x4611d86e],dl
  40c548:	pop    ebx
  40c549:	pop    edi
  40c54a:	dec    esp
  40c54b:	fcomp  QWORD PTR [ebx+0x8]
  40c54e:	mov    di,0x3b73
  40c552:	adc    al,0xfd
  40c554:	xor    bh,dl
  40c556:	sub    BYTE PTR [edx-0x79baa7a6],0x5b
  40c55d:	cmp    ecx,DWORD PTR [eax]
  40c55f:	or     eax,0x8528092f
  40c564:	mov    bl,0xa6
  40c566:	loopne 0x40c4fd
  40c568:	fwait
  40c569:	retf   0xe4e7
  40c56c:	mov    bh,0xa6
  40c56e:	(bad)  
  40c56f:	jne    0x40c50c
  40c571:	mov    DWORD PTR [ebx],0xeb734e86
  40c577:	add    eax,0xb85315bf
  40c57c:	lods   eax,DWORD PTR ds:[esi]
  40c57d:	ror    DWORD PTR [esi],0xd0
  40c580:	inc    ecx
  40c581:	push   eax
  40c582:	sbb    al,BYTE PTR [edi+esi*4-0x48467453]
  40c589:	push   ss
  40c58a:	ja     0x40c589
  40c58c:	in     eax,dx
  40c58d:	mov    ds:0x5b2ff903,al
  40c592:	in     al,dx
  40c593:	out    dx,al
  40c594:	push   0xca427f33
  40c599:	xchg   edx,eax
  40c59a:	fwait
  40c59b:	popf   
  40c59c:	inc    edi
  40c59d:	loope  0x40c5a2
  40c59f:	add    BYTE PTR [edx],al
  40c5a1:	adc    BYTE PTR [ebp+0x66435fe6],0x47
  40c5a8:	out    dx,al
  40c5a9:	adc    DWORD PTR [esi+esi*8],ebx
  40c5ac:	test   eax,0xb8ad1a47
  40c5b1:	mov    dh,0xa5
  40c5b3:	mov    eax,DWORD PTR [ecx+0x5a]
  40c5b6:	ror    BYTE PTR [esi],0x84
  40c5b9:	inc    edx
  40c5ba:	les    ebx,FWORD PTR [bp+si]
  40c5bd:	cmp    eax,0x6d19c0e5
  40c5c2:	in     eax,0x31
  40c5c4:	int    0x7
  40c5c6:	dec    eax
  40c5c7:	mov    ebx,0x98e1b1c4
  40c5cc:	jns    0x40c5dc
  40c5ce:	push   0xca5f049f
  40c5d3:	sbb    BYTE PTR [ebp+0x1f],0xf8
  40c5d7:	add    eax,DWORD PTR [esi+0x61551513]
  40c5dd:	cs daa 
  40c5df:	pusha  
  40c5e0:	les    eax,FWORD PTR [edx+0x7e]
  40c5e3:	aaa    
  40c5e4:	stos   BYTE PTR es:[edi],al
  40c5e5:	inc    esi
  40c5e6:	lods   eax,DWORD PTR ds:[esi]
  40c5e7:	inc    edi
  40c5e8:	mov    ds:0xad9be353,al
  40c5ed:	pop    ecx
  40c5ee:	loope  0x40c5f3
  40c5f0:	add    al,BYTE PTR [ebx-0x103220a]
  40c5f6:	into   
  40c5f7:	movaps xmm7,xmm5
  40c5fa:	or     ebp,ecx
  40c5fc:	lea    esi,[ebp-0x468e3a83]
  40c602:	dec    ebp
  40c603:	or     eax,0x35a6e00
  40c608:	pop    ebp
  40c609:	fisubr DWORD PTR [eax-0x80]
  40c60c:	push   ecx
  40c60d:	jl     0x40c5fa
  40c60f:	sub    eax,0x7e6900f5
  40c614:	in     eax,dx
  40c615:	in     al,0x3
  40c617:	fldcw  WORD PTR cs:[eax+0x3]
  40c61b:	cs sar ebp,1
  40c61e:	(bad)  
  40c61f:	loop   0x40c609
  40c621:	test   DWORD PTR [ebx+0xd],ebx
  40c624:	jb     0x40c5c7
  40c626:	push   ds
  40c627:	push   ds
  40c628:	push   0x71a1e99
  40c62d:	test   BYTE PTR [edx+0xa],al
  40c630:	fiadd  WORD PTR [eax]
  40c632:	and    DWORD PTR [ebx],ecx
  40c634:	jmp    0x9222d5be
  40c639:	retf   
  40c63a:	inc    ecx
  40c63b:	or     ch,BYTE PTR [ebp-0x3b]
  40c63e:	cmp    BYTE PTR [esi+0xa42875f],cl
  40c644:	push   ebx
  40c645:	mov    esi,DWORD PTR [ebp+0x1266054d]
  40c64b:	bound  ebx,QWORD PTR [ecx]
  40c64d:	fwait
  40c64e:	shl    BYTE PTR [ecx],cl
  40c650:	shr    DWORD PTR [esi-0x10390b96],0x3
  40c657:	cs dec ecx
  40c659:	rcr    ah,cl
  40c65b:	or     al,BYTE PTR [ecx-0x2e]
  40c65e:	xchg   esi,eax
  40c65f:	dec    eax
  40c660:	jmp    0xf8931491
  40c665:	lds    eax,FWORD PTR [edx-0x7f]
  40c668:	cdq    
  40c669:	add    BYTE PTR [edi],al
  40c66b:	ins    DWORD PTR es:[edi],dx
  40c66c:	add    al,0x6d
  40c66e:	imul   eax,DWORD PTR [edx+ecx*1-0x17],0xffffffec
  40c673:	dec    ebp
  40c674:	adc    al,BYTE PTR [eax]
  40c676:	dec    esi
  40c677:	add    ecx,DWORD PTR [edx]
  40c679:	mov    ecx,DWORD PTR [edx-0x1d]
  40c67c:	sbb    al,BYTE PTR [eax+0x2f]
  40c67f:	pop    edx
  40c680:	mov    ebx,0x7f432f00
  40c685:	add    eax,0x33d79bd1
  40c68a:	mov    cl,0xc1
  40c68c:	dec    BYTE PTR [edi]
  40c68e:	jae    0x40c68d
  40c690:	pop    es
  40c691:	add    bh,ch
  40c693:	retf   0x9573
  40c696:	fild   WORD PTR [edx-0x5e]
  40c699:	and    BYTE PTR [ebx],dh
  40c69b:	inc    esp
  40c69c:	mov    DWORD PTR ds:0x480a8f,ecx
  40c6a2:	mov    edi,0x9b2488e9
  40c6a7:	or     al,BYTE PTR ds:[eax]
  40c6aa:	bswap  ebx
  40c6ac:	pushf  
  40c6ad:	xchg   ebp,eax
  40c6ae:	scas   eax,DWORD PTR es:[edi]
  40c6af:	inc    edx
  40c6b0:	mov    es,eax
  40c6b2:	adc    ch,BYTE PTR [ebx]
  40c6b4:	xchg   DWORD PTR [ebx+eax*8-0x60fff6be],edi
  40c6bb:	retf   0xfb22
  40c6be:	cwde   
  40c6bf:	fwait
  40c6c0:	outs   dx,BYTE PTR ds:[esi]
  40c6c1:	sub    DWORD PTR [ebx+0x62],0xffffffd4
  40c6c5:	push   es
  40c6c6:	lahf   
  40c6c7:	inc    edx
  40c6c8:	or     dh,BYTE PTR [ecx+eax*4+0x48]
  40c6cc:	pop    ds
  40c6cd:	lea    eax,[eax]
  40c6cf:	add    eax,DWORD PTR [esi+0x426f06e8]
  40c6d5:	xchg   DWORD PTR [ebx+eax*4+0x56],ecx
  40c6d9:	in     al,dx
  40c6da:	dec    edi
  40c6db:	jge    0x40c71b
  40c6dd:	or     cl,BYTE PTR [ebp+0x503862b3]
  40c6e3:	sub    BYTE PTR [ebx-0x76],dl
  40c6e6:	adc    bl,BYTE PTR [edi+0x434c873e]
  40c6ec:	push   esi
  40c6ed:	pop    es
  40c6ee:	rol    BYTE PTR [esi-0x53fc6ad6],0x5b
  40c6f5:	sti    
  40c6f6:	mov    edi,0xba90599c
  40c6fb:	adc    al,0x5c
  40c6fd:	or     al,ch
  40c6ff:	in     eax,0xca
  40c701:	or     eax,0xe85f1000
  40c706:	stos   DWORD PTR es:[edi],eax
  40c707:	lds    ebx,FWORD PTR [ebx+0x18]
  40c70a:	je     0x40c787
  40c70c:	xchg   ebx,eax
  40c70d:	or     BYTE PTR [eax],al
  40c70f:	xchg   bl,bl
  40c711:	push   ss
  40c712:	adc    al,0xf9
  40c714:	outs   dx,BYTE PTR ds:[esi]
  40c715:	jl     0x40c72a
  40c717:	inc    esi
  40c718:	pop    ebx
  40c719:	push   ss
  40c71a:	add    ebx,edi
  40c71c:	lahf   
  40c71d:	aam    0x63
  40c71f:	ss sbb edi,0x52
  40c723:	inc    ebp
  40c724:	inc    ecx
  40c725:	xchg   esi,eax
  40c726:	stos   BYTE PTR es:[edi],al
  40c727:	fstp   DWORD PTR [eax+eiz*4]
  40c72a:	mov    WORD PTR [edx+0x7f],es
  40c72d:	sub    BYTE PTR [eax+0x2c],dl
  40c730:	pop    ebx
  40c731:	push   ss
  40c732:	add    al,BYTE PTR [eax]
  40c734:	mov    ecx,0x4611506e
  40c739:	pop    ebx
  40c73a:	jae    0x40c733
  40c73c:	add    esp,DWORD PTR [ebp+0x23]
  40c73f:	or     bh,BYTE PTR [ecx]
  40c741:	ins    BYTE PTR es:[edi],dx
  40c742:	add    al,0xd4
  40c744:	je     0x40c6e1
  40c746:	or     BYTE PTR [edi-0x6f],dl
  40c749:	test   al,0x13
  40c74b:	add    DWORD PTR [esi-0x7e01597c],ebx
  40c751:	and    eax,0x68a243c8
  40c756:	pop    es
  40c757:	call   DWORD PTR [ebp-0x10]
  40c75a:	and    DWORD PTR [edx+edx*4],esp
  40c75d:	xchg   edx,eax
  40c75e:	and    al,0x1
  40c760:	xchg   BYTE PTR [ebx-0x73],bl
  40c763:	jnp    0x40c707
  40c765:	mov    ebx,DWORD PTR [eax]
  40c767:	ud2    
  40c769:	inc    edx
  40c76a:	sbb    DWORD PTR [ebx],eax
  40c76c:	xchg   BYTE PTR [edx+0x19],al
  40c76f:	push   es
  40c770:	scas   al,BYTE PTR es:[edi]
  40c771:	jmp    0x5a41424c
  40c776:	ja     0x40c729
  40c778:	xor    BYTE PTR [ebp+0x79],ah
  40c77b:	inc    eax
  40c77c:	bound  edx,QWORD PTR [edx+0x6e]
  40c77f:	les    edx,FWORD PTR [eax-0x79fcde42]
  40c785:	inc    edx
  40c786:	push   esi
  40c787:	and    BYTE PTR [ebp+0x42],0xe0
  40c78b:	add    eax,DWORD PTR [esi-0x1632eeee]
  40c791:	loopne 0x40c7ca
  40c793:	add    eax,DWORD PTR [esi+0x3022be]
  40c799:	test   BYTE PTR [edi+ebx*1+0x63],ah
  40c79d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c79e:	xchg   esi,eax
  40c79f:	lahf   
  40c7a0:	add    ebp,DWORD PTR [esp+ecx*2+0x3c]
  40c7a4:	hlt    
  40c7a5:	fmul   DWORD PTR [esi-0x1d]
  40c7a8:	adc    eax,DWORD PTR [esi+0x42]
  40c7ab:	pusha  
  40c7ac:	lods   al,BYTE PTR ds:[esi]
  40c7ad:	xchg   bh,ch
  40c7af:	in     al,0x9b
  40c7b1:	cld    
  40c7b2:	push   ss
  40c7b3:	loope  0x40c7b8
  40c7b5:	push   cs
  40c7b6:	dec    dh
  40c7b8:	clc    
  40c7b9:	sahf   
  40c7ba:	inc    edx
  40c7bb:	loop   0x40c7c0
  40c7bd:	xchg   dl,al
  40c7bf:	pop    es
  40c7c0:	add    ebx,DWORD PTR [ebx]
  40c7c2:	pop    ss
  40c7c3:	cld    
  40c7c4:	xor    BYTE PTR [esi-0x22103a47],cl
  40c7ca:	add    bl,ah
  40c7cc:	test   al,0x50
  40c7ce:	(bad)  
  40c7d0:	xchg   ebp,eax
  40c7d1:	mov    DWORD PTR [edx-0x35],0xe342d6e0
  40c7d8:	test   al,0xfa
  40c7da:	cmp    bh,BYTE PTR [esi-0x71]
  40c7dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7de:	data16 loop 0x40c7e4
  40c7e1:	xchg   BYTE PTR [ebp+0x40396509],dh
  40c7e7:	or     ecx,ebp
  40c7e9:	test   DWORD PTR [edx+0x5e],ebx
  40c7ec:	lds    eax,FWORD PTR [edx+eax*2-0x45e2311f]
  40c7f3:	not    BYTE PTR [esi-0x21364012]
  40c7f9:	mov    al,0x81
  40c7fb:	or     ecx,ebp
  40c7fd:	add    BYTE PTR [ebp-0x5d0e839d],al
  40c803:	inc    esi
  40c804:	ds inc ebp
  40c806:	ret    0xf542
  40c809:	not    BYTE PTR [ecx]
  40c80b:	fdiv   QWORD PTR [eax]
  40c80d:	dec    eax
  40c80e:	ret    
  40c80f:	inc    edx
  40c810:	loop   0x40c85f
  40c812:	push   ebp
  40c813:	inc    edx
  40c814:	or     ah,BYTE PTR [ecx+esi*2+0x1f]
  40c818:	bnd jmp 0xb7230aa3
  40c81e:	retf   0xa41
  40c821:	jno    0x40c7c4
  40c823:	push   ds
  40c824:	add    eax,0x8f3384f5
  40c829:	push   ebp
  40c82a:	test   DWORD PTR [edx+0xa],eax
  40c82d:	je     0x40c7b8
  40c82f:	push   ds
  40c830:	cs mov ecx,0x815888ba
  40c836:	add    eax,0x5ae94898
  40c83b:	mov    ch,0x8d
  40c83d:	int    0xad
  40c83f:	inc    edx
  40c840:	or     ch,cl
  40c842:	xor    eax,0x8503995a
  40c847:	inc    edx
  40c848:	(bad)
  40c84c:	dec    ebp
  40c84d:	or     eax,0x5562b91
  40c852:	jns    0x40c843
  40c854:	gs inc ebx
  40c856:	xor    DWORD PTR [ebp+0x12a6054d],0x62
  40c85d:	add    BYTE PTR [eax+0x2a490f],al
  40c863:	aaa    
  40c864:	xor    bh,ah
  40c866:	call   DWORD PTR [eax]
  40c868:	jmp    0xeffecb5
  40c86d:	pop    ecx
  40c86e:	push   0x5e
  40c870:	inc    edi
  40c871:	push   edx
  40c872:	lods   al,BYTE PTR ds:[esi]
  40c873:	ins    BYTE PTR es:[edi],dx
  40c874:	ds cmc 
  40c876:	adc    eax,0x4a50d7
  40c87b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c87c:	xor    ch,BYTE PTR [esi]
  40c87e:	and    al,0xb6
  40c880:	add    ch,BYTE PTR [esi]
  40c882:	sbb    BYTE PTR [esi-0x7ae3d1ce],dl
  40c888:	fwait
  40c889:	das    
  40c88a:	ret    
  40c88b:	sbb    ah,BYTE PTR [esi+0x5e]
  40c88e:	dec    DWORD PTR [edx]
  40c890:	dec    edi
  40c891:	sbb    DWORD PTR [eax-0x11],eax
  40c894:	mov    DWORD PTR [esi],0x2e026253
  40c89a:	and    BYTE PTR [edi],ch
  40c89c:	dec    ecx
  40c89d:	or     bh,bh
  40c89f:	retf   0x1ad2
  40c8a2:	inc    eax
  40c8a3:	out    dx,eax
  40c8a4:	out    0x35,eax
  40c8a6:	mov    al,ds:0x3909febd
  40c8ab:	add    eax,DWORD PTR [ebx-0x64268be4]
  40c8b1:	js     0x40c8d7
  40c8b3:	xchg   DWORD PTR [ebx-0x7ce40025],ebx
  40c8b9:	sub    al,0xff
  40c8bb:	js     0x40c8b1
  40c8bd:	hlt    
  40c8be:	xlat   BYTE PTR ds:[ebx]
  40c8bf:	xor    al,0x1a
  40c8c1:	cs adc al,0xa0
  40c8c4:	adc    ch,BYTE PTR [esi]
  40c8c6:	adc    BYTE PTR [eax],al
  40c8c8:	xchg   DWORD PTR [ecx+0x12],ebp
  40c8cb:	add    bl,BYTE PTR [edi-0x61f38a42]
  40c8d1:	xor    DWORD PTR [ecx],eax
  40c8d3:	call   FWORD PTR [edx-0x79bc59d6]
  40c8d9:	imul   edx,DWORD PTR [eax+0x86c5d9a],0x57
  40c8e0:	pop    esi
  40c8e1:	retf   0xfe90
  40c8e4:	popa   
  40c8e5:	(bad)  
  40c8e6:	xor    al,0x24
  40c8e8:	mov    DWORD PTR [eax],edi
  40c8ea:	dec    esp
  40c8eb:	pop    ebx
  40c8ec:	std    
  40c8ed:	xchg   BYTE PTR [ecx-0x3e],al
  40c8f0:	jle    0x40c95d
  40c8f2:	pop    ecx
  40c8f3:	mov    esi,DWORD PTR [edx]
  40c8f5:	sbb    ebx,DWORD PTR [ecx+0x56]
  40c8f8:	jne    0x40c8bb
  40c8fa:	inc    esi
  40c8fb:	xor    cl,BYTE PTR [ebp-0x3c]
  40c8fe:	xlat   BYTE PTR ds:[ebx]
  40c8ff:	repnz sub ecx,ecx
  40c902:	je     0x40c8c3
  40c904:	xchg   ecx,eax
  40c905:	out    0xcb,eax
  40c907:	call   FWORD PTR [ecx]
  40c909:	ins    BYTE PTR es:[edi],dx
  40c90a:	inc    ebx
  40c90b:	push   0x8eb89
  40c910:	or     DWORD PTR [edi-0x34],ebx
  40c913:	adc    DWORD PTR [esi+0x6b],eax
  40c916:	jno    0x40c95c
  40c918:	cli    
  40c919:	fwait
  40c91a:	neg    edx
  40c91c:	icebp  
  40c91d:	push   esi
  40c91e:	test   al,0x11
  40c920:	inc    esi
  40c921:	imul   ebx,DWORD PTR [eax-0x1],0x7b
  40c925:	scas   eax,DWORD PTR es:[edi]
  40c926:	pop    ss
  40c927:	inc    eax
  40c928:	xchg   ah,ah
  40c92a:	mov    al,ds:0x97d0003a
  40c92f:	inc    edx
  40c930:	cmp    DWORD PTR [ebx],ebp
  40c932:	daa    
  40c933:	das    
  40c934:	dec    esi
  40c935:	or     eax,0xc6846368
  40c93a:	mov    edi,0x7405664d
  40c93f:	shl    DWORD PTR [ebp+ebp*2+0x58],1
  40c943:	arpl   WORD PTR [edi-0x7c],ax
  40c946:	in     al,dx
  40c947:	xchg   ebp,eax
  40c948:	adc    cl,BYTE PTR gs:[eax-0x28811779]
  40c94f:	jmp    0xe48368d6
  40c954:	das    
  40c955:	mov    cs,WORD PTR [ebx]
  40c957:	pop    esi
  40c958:	fild   WORD PTR [ecx*4-0x3a6e6720]
  40c95f:	mov    ds:0xac5e000,al
  40c964:	add    al,0xda
  40c966:	cmp    DWORD PTR [ebx],edx
  40c968:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c969:	jb     0x40c96d
  40c96b:	aad    0x43
  40c96d:	xchg   bl,bh
  40c96f:	jg     0x40c971
  40c971:	adc    eax,0x8998e305
  40c976:	lds    esi,FWORD PTR [edi+0x60452d14]
  40c97c:	mov    ecx,0x2ed80889
  40c981:	sub    bl,dh
  40c983:	xor    BYTE PTR [ebp+0x21],cl
  40c986:	aaa    
  40c987:	imul   edx,DWORD PTR [edx],0xffffffc6
  40c98a:	inc    edx
  40c98b:	sbb    al,0xae
  40c98d:	inc    esp
  40c98e:	inc    esp
  40c98f:	jmp    eax
  40c991:	add    BYTE PTR [ecx],ah
  40c993:	fcom   QWORD PTR [ebx+eax*1]
  40c996:	xchg   BYTE PTR [edx-0x29],ch
  40c999:	xchg   DWORD PTR cs:[edx+0x55],eax
  40c99d:	call   DWORD PTR [ecx-0x7dfc6052]
  40c9a3:	int3   
  40c9a4:	sub    dh,BYTE PTR [eax]
  40c9a6:	mov    dl,0xec
  40c9a8:	loop   0x40ca15
  40c9aa:	xor    DWORD PTR [edx+0x78de039f],ebx
  40c9b0:	inc    BYTE PTR [edx]
  40c9b2:	xchg   BYTE PTR [ebp+0xc],ch
  40c9b5:	jns    0x40c97b
  40c9b7:	sbb    BYTE PTR [edx],0x0
  40c9ba:	mov    al,0x71
  40c9bc:	mov    BYTE PTR [edx],0x81
  40c9bf:	cwde   
  40c9c0:	and    al,bl
  40c9c2:	pushf  
  40c9c3:	inc    esp
  40c9c4:	xchg   ebx,eax
  40c9c5:	and    DWORD PTR [edx+eax*2-0xe3b921c],0x9
  40c9cd:	add    DWORD PTR [eax+0xfeef45c],ebx
  40c9d3:	jns    0x40c962
  40c9d5:	ret    0x35b1
  40c9d8:	cld    
  40c9d9:	in     al,0x65
  40c9db:	lods   al,BYTE PTR ds:[esi]
  40c9dc:	dec    eax
  40c9dd:	jmp    0x4346a069
  40c9e2:	and    esp,DWORD PTR [ecx+0x1e]
  40c9e5:	mov    cl,0x77
  40c9e7:	add    cl,BYTE PTR [edx]
  40c9e9:	pop    ds
  40c9ea:	iret   
  40c9eb:	mov    eax,ecx
  40c9ed:	cli    
  40c9ee:	inc    ebp
  40c9ef:	(bad)  
  40c9f0:	rcr    dh,1
  40c9f2:	stc    
  40c9f3:	lahf   
  40c9f4:	pop    ecx
  40c9f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9f6:	add    BYTE PTR [eax-0x7dd6e89a],dl
  40c9fc:	mov    ?,WORD PTR [ecx+0xa5047e8]
  40ca02:	bound  edi,QWORD PTR [ebx+0x719b8ede]
  40ca08:	cmp    al,BYTE PTR [ecx+0x43cb7a27]
  40ca0e:	or     eax,0x815af2b4
  40ca13:	out    0x61,eax
  40ca15:	or     ecx,ebp
  40ca17:	out    dx,al
  40ca18:	add    eax,0xd8f8d562
  40ca1d:	and    ah,BYTE PTR [eax-0x4d]
  40ca20:	jmp    0xe9f4:0x60056780
  40ca27:	pusha  
  40ca28:	lahf   
  40ca29:	jge    0x40ca0b
  40ca2b:	pop    esi
  40ca2c:	int    0x8d
  40ca2e:	jmp    0x989e0cb8
  40ca33:	push   eax
  40ca34:	(bad)  [ebp-0x47]
  40ca37:	jmp    0x965:0x6b110dd8
  40ca3e:	jmp    0x960a8f8d
  40ca43:	xchg   BYTE PTR [edx+0x516c000a],dl
  40ca49:	mov    ah,0xc3
  40ca4b:	repnz (bad) 
  40ca4e:	mov    esp,edx
  40ca50:	pop    ebx
  40ca51:	push   edi
  40ca52:	push   esi
  40ca53:	and    al,0x94
  40ca55:	pop    ebx
  40ca56:	cmp    esi,DWORD PTR [ecx+0x85051e]
  40ca5c:	push   0xdc000a46
  40ca61:	and    al,0x7e
  40ca63:	add    BYTE PTR [eax-0x39],cl
  40ca66:	or     eax,0x81436f01
  40ca6b:	jge    0x40caac
  40ca6d:	ror    BYTE PTR [ebp+0x14],1
  40ca70:	in     al,0x5e
  40ca72:	cmp    DWORD PTR [ebp+0x67],0x2f00c1ae
  40ca79:	inc    ebx
  40ca7a:	pop    ecx
  40ca7b:	call   DWORD PTR [edx+0x5746874e]
  40ca81:	adc    eax,DWORD PTR [edi+0x2fab3746]
  40ca87:	out    dx,eax
  40ca88:	cs inc ebx
  40ca8a:	or     eax,DWORD PTR [ebp+0x17]
  40ca8d:	jo     0x40ca6b
  40ca8f:	mov    ah,BYTE PTR [ecx+0x53]
  40ca92:	sub    BYTE PTR [edi+0x13],bh
  40ca95:	dec    ebx
  40ca96:	ss sbb edi,eax
  40ca99:	leave  
  40ca9a:	lds    eax,FWORD PTR [eax]
  40ca9c:	out    dx,eax
  40ca9d:	inc    edx
  40ca9e:	mov    es,eax
  40caa0:	call   0xdf41606b
  40caa5:	inc    edx
  40caa6:	add    DWORD PTR [esi+0x23],0x1e74420b
  40caad:	or     eax,DWORD PTR [edx+0xf]
  40cab0:	(bad)  
  40cab1:	retf   0xfff4
  40cab4:	fistp  QWORD PTR [ebp+0x4e]
  40cab7:	push   0xa5c6b8
  40cabc:	scas   eax,DWORD PTR es:[edi]
  40cabd:	inc    edx
  40cabe:	pop    ecx
  40cabf:	inc    DWORD PTR [eax]
  40cac1:	xchg   BYTE PTR [esi+0x55a95700],bh
  40cac7:	fcom   DWORD PTR ds:0x44836946
  40cacd:	jb     0x40cabb
  40cacf:	ror    DWORD PTR [ebx],0xff
  40cad2:	jo     0x40ca59
  40cad4:	jl     0x40cb54
  40cad6:	inc    ecx
  40cad7:	in     eax,0xfe
  40cad9:	and    DWORD PTR [ebp-0x74],0x86e789bf
  40cae0:	push   DWORD PTR [ecx+0x6c]
  40cae3:	es add ebx,edi
  40cae6:	or     eax,0x1e766822
  40caeb:	dec    esi
  40caec:	add    BYTE PTR [ecx+0x15],bl
  40caef:	add    ch,al
  40caf1:	dec    edx
  40caf2:	nop
  40caf3:	or     BYTE PTR [eax],al
  40caf5:	add    ebp,DWORD PTR [esp+ebx*1+0x2e3e4174]
  40cafc:	mov    eax,eax
  40cafe:	xor    ebp,DWORD PTR [ecx-0x101f2d8b]
  40cb04:	mov    bh,BYTE PTR [ebx+0xa50a07f]
  40cb0a:	ins    BYTE PTR es:[edi],dx
  40cb0b:	or     BYTE PTR [esi+eax*2-0x567cb6a8],al
  40cb12:	outs   dx,DWORD PTR ds:[esi]
  40cb13:	or     BYTE PTR [ebx+0x45bf7b8b],cl
  40cb19:	jp     0x40cb89
  40cb1b:	or     BYTE PTR [eax],al
  40cb1d:	xchg   al,dh
  40cb1f:	repz mov cl,BYTE PTR [eax+0x73]
  40cb23:	jecxz  0x40caeb
  40cb25:	add    BYTE PTR [edx+0x57],dh
  40cb28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb29:	jne    0x40cb91
  40cb2b:	rcr    BYTE PTR [ecx+0xc],1
  40cb2e:	fst    DWORD PTR [ebp+0x3b98b34]
  40cb34:	jecxz  0x40cab9
  40cb36:	xchg   BYTE PTR [ebx-0x74],ch
  40cb39:	mov    edi,0x2dd1423a
  40cb3e:	xchg   bh,cl
  40cb40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb41:	sti    
  40cb42:	test   eax,0x8605e155
  40cb47:	(bad)  
  40cb48:	aaa    
  40cb49:	adc    cl,BYTE PTR [ebx]
  40cb4b:	cs or  al,0xa2
  40cb4e:	cwde   
  40cb4f:	leave  
  40cb50:	lods   al,BYTE PTR ds:[esi]
  40cb51:	pop    ss
  40cb52:	add    eax,0x7c21e15b
  40cb57:	sar    edx,0x7
  40cb5a:	add    ecx,DWORD PTR [eax+0x78]
  40cb5d:	inc    edi
  40cb5e:	xchg   edx,eax
  40cb5f:	and    ecx,DWORD PTR [ebx]
  40cb61:	pop    esp
  40cb62:	adc    DWORD PTR ds:0x4ad03e3,edi
  40cb68:	dec    ebx
  40cb69:	(bad)  
  40cb6a:	and    DWORD PTR [edx+eiz*4-0x53],ebx
  40cb6e:	adc    DWORD PTR [eax],0xffffffa3
  40cb71:	lods   eax,DWORD PTR ds:[esi]
  40cb72:	xchg   DWORD PTR [edx-0x657bf1f],edx
  40cb78:	add    eax,0xd04291c6
  40cb7d:	ret    
  40cb7e:	jns    0x40cb4b
  40cb80:	and    DWORD PTR [eax],esi
  40cb82:	inc    ebp
  40cb83:	hlt    
  40cb84:	addr16 xchg ebx,eax
  40cb86:	add    al,0xdc
  40cb88:	test   BYTE PTR [eax+eax*1],0x9b
  40cb8c:	ds adc al,0x2e
  40cb8f:	test   bh,cl
  40cb91:	hlt    
  40cb92:	aas    
  40cb93:	sahf   
  40cb94:	test   BYTE PTR ss:[ebx-0x7a],0x5d
  40cb99:	sti    
  40cb9a:	pop    es
  40cb9b:	out    dx,al
  40cb9c:	cmp    eax,0xfd860447
  40cba1:	ins    DWORD PTR es:[edi],dx
  40cba2:	les    edi,FWORD PTR [edx+0x46]
  40cba5:	adc    esp,eax
  40cba7:	dec    ebx
  40cba8:	or     eax,0xd30c1302
  40cbae:	enter  0xee43,0xee
  40cbb2:	add    eax,DWORD PTR [esi+0x1410a42]
  40cbb8:	inc    edx
  40cbb9:	or     cl,ch
  40cbbb:	push   ebp
  40cbbc:	inc    edx
  40cbbd:	push   esp
  40cbbe:	sub    bh,BYTE PTR [ecx+ecx*8-0x6]
  40cbc2:	jb     0x40cc00
  40cbc4:	out    dx,al
  40cbc5:	inc    ecx
  40cbc6:	mov    esi,0xa1422591
  40cbcb:	js     0x40cbe6
  40cbcd:	pusha  
  40cbce:	jmp    0x40cbd8
  40cbd0:	fist   WORD PTR [ebp-0x6f]
  40cbd3:	cdq    
  40cbd4:	aad    0x49
  40cbd6:	jmp    0x14e9fc1
  40cbdb:	inc    esp
  40cbdc:	popa   
  40cbdd:	or     ecx,ebp
  40cbdf:	add    BYTE PTR [esi+edi*2-0x1f63a41b],bl
  40cbe6:	adc    edi,DWORD PTR [edi]
  40cbe8:	push   es
  40cbe9:	data16 jmp 0x40cb71
  40cbec:	inc    edx
  40cbed:	or     dl,dl
  40cbef:	add    BYTE PTR [ebp-0x37],bl
  40cbf2:	dec    ebp
  40cbf3:	add    eax,0x640ae876
  40cbf8:	mov    bh,0x32
  40cbfa:	and    DWORD PTR [edi],0xffffff9a
  40cbfd:	or     DWORD PTR [ebx+0x15],0xffffff80
  40cc01:	inc    edx
  40cc02:	or     ch,cl
  40cc04:	fst    QWORD PTR [ebx]
  40cc06:	or     ebp,ebx
  40cc08:	test   DWORD PTR [ebx+0x7d],ebx
  40cc0b:	lds    edx,FWORD PTR ds:0xe72573cf
  40cc11:	iret   
  40cc12:	sub    eax,0xdd4e6d9
  40cc17:	and    DWORD PTR [ebx+0x1ee90960],0x1e291074
  40cc21:	je     0x40cc77
  40cc23:	mov    edi,0xbf0a43cb
  40cc28:	cli    
  40cc29:	push   edx
  40cc2a:	and    BYTE PTR [edi+0x420ab1],0xf8
  40cc31:	xor    al,0x2b
  40cc33:	push   0xffffffdd
  40cc35:	int3   
  40cc36:	jbe    0x40cc94
  40cc38:	(bad)  
  40cc39:	push   edi
  40cc3a:	jge    0x40cc7c
  40cc3c:	scas   eax,DWORD PTR es:[edi]
  40cc3d:	mov    ds:0x3d97047b,al
  40cc42:	jmp    0xb5056b47
  40cc47:	jne    0x40cbe4
  40cc49:	jne    0x40cbff
  40cc4b:	jmp    0x40cc1c
  40cc4d:	mov    cl,BYTE PTR [esi+0x6c]
  40cc50:	lods   al,BYTE PTR ds:[esi]
  40cc51:	aas    
  40cc52:	or     al,BYTE PTR [eax]
  40cc54:	add    BYTE PTR [eax+0x22102e34],dl
  40cc5a:	and    DWORD PTR [esi-0x1],edx
  40cc5d:	sti    
  40cc5e:	arpl   WORD PTR [edi+edi*8],ax
  40cc61:	fmul   DWORD PTR [edx-0x1e]
  40cc64:	pop    eax
  40cc65:	cmp    al,0x46
  40cc67:	or     dh,bh
  40cc69:	aaa    
  40cc6a:	push   edi
  40cc6b:	mov    ah,0xf7
  40cc6d:	pop    ss
  40cc6e:	sbb    edx,DWORD PTR [edx+eax*8+0x57]
  40cc72:	aas    
  40cc73:	pop    ebx
  40cc74:	push   ebx
  40cc75:	js     0x40cc28
  40cc77:	jbe    0x40cc81
  40cc79:	dec    esp
  40cc7a:	jg     0x40cc47
  40cc7c:	push   es
  40cc7d:	push   ebx
  40cc7e:	cmp    cl,BYTE PTR [edx+0x0]
  40cc81:	pop    ss
  40cc82:	cdq    
  40cc83:	jg     0x40cc86
  40cc85:	pop    ds
  40cc86:	enter  0x2448,0x2b
  40cc8a:	jo     0x40cc5b
  40cc8c:	(bad)  
  40cc8d:	sub    DWORD PTR [edi+0x7d],ebx
  40cc90:	inc    eax
  40cc91:	das    
  40cc92:	test   BYTE PTR [ebx],cl
  40cc94:	and    al,0x1a
  40cc96:	dec    DWORD PTR [ecx]
  40cc98:	mov    DWORD PTR [ecx+0x2a],esi
  40cc9b:	sbb    DWORD PTR [esi-0x79],0xffffffcd
  40cc9f:	push   esi
  40cca0:	ins    BYTE PTR es:[edi],dx
  40cca1:	test   al,0x4
  40cca3:	jp     0x40cca5
  40cca5:	jmp    0x40cce5
  40cca7:	or     ch,BYTE PTR [edx-0x7a]
  40ccaa:	outs   dx,BYTE PTR ds:[esi]
  40ccab:	test   DWORD PTR [ebp+0x3e],eax
  40ccae:	xchg   ecx,eax
  40ccaf:	test   DWORD PTR [ebp+0x52],eax
  40ccb2:	shl    BYTE PTR [ebx],cl
  40ccb4:	jl     0x40ccb5
  40ccb6:	cli    
  40ccb7:	(bad)  
  40ccb8:	inc    DWORD PTR [eax]
  40ccba:	leave  
  40ccbb:	push   0x690a9d85
  40ccc0:	or     BYTE PTR [eax],al
  40ccc2:	jg     0x40cc49
  40ccc4:	in     al,dx
  40ccc5:	(bad)  
  40ccc8:	push   DWORD PTR ds:[edx]
  40cccb:	(bad)  
  40cccc:	cld    
  40cccd:	mov    WORD PTR [ecx+0x79],cs
  40ccd0:	cmp    BYTE PTR [ebp-0x95f86bf],cl
  40ccd6:	mov    ds:0x8e830869,al
  40ccdb:	ins    DWORD PTR es:[edi],dx
  40ccdc:	sbb    al,0x3
  40ccde:	bswap  edx
  40cce0:	sbb    al,0x5f
  40cce2:	or     eax,0x44592faa
  40cce7:	push   esp
  40cce8:	or     BYTE PTR [esi-0x3],dl
  40cceb:	jp     0x40cc8d
  40cced:	adc    al,BYTE PTR [esi-0x3d09f795]
  40ccf3:	inc    edi
  40ccf4:	push   es
  40ccf5:	add    edx,ebx
  40ccf7:	popa   
  40ccf8:	ds call 0xfed4550f
  40ccfe:	or     eax,0x82c236a2
  40cd03:	imul   edx,DWORD PTR [ebx+0x86c06b5],0x0
  40cd0a:	inc    ecx
  40cd0b:	push   0xffffffe8
  40cd0d:	je     0x40ccd5
  40cd0f:	imul   ecx,ebx,0x45
  40cd12:	mov    es,WORD PTR [edi-0x4c79bfef]
  40cd18:	jne    0x40ccfd
  40cd1a:	or     ecx,edx
  40cd1c:	xchg   ebx,eax
  40cd1d:	jne    0x40cd1f
  40cd1f:	push   0xffffffc3
  40cd21:	jge    0x40cd06
  40cd23:	stc    
  40cd24:	inc    edx
  40cd25:	ins    BYTE PTR es:[edi],dx
  40cd26:	(bad)  
  40cd27:	dec    ebx
  40cd28:	dec    edx
  40cd29:	xlat   BYTE PTR ds:[ebx]
  40cd2a:	mov    ch,BYTE PTR [ecx+0xd382042]
  40cd30:	addr16 mov cl,0x34
  40cd33:	or     eax,0x3832ff08
  40cd38:	icebp  
  40cd39:	pop    edx
  40cd3a:	lods   al,BYTE PTR ds:[esi]
  40cd3b:	ins    BYTE PTR es:[edi],dx
  40cd3c:	inc    edx
  40cd3d:	jecxz  0x40ccc9
  40cd3f:	push   edx
  40cd40:	xor    ch,BYTE PTR [eax-0x6d]
  40cd43:	push   cs
  40cd44:	shr    BYTE PTR [esi],1
  40cd46:	stos   DWORD PTR es:[edi],eax
  40cd47:	int    0x3d
  40cd49:	jecxz  0x40cd4e
  40cd4b:	std    
  40cd4c:	xlat   BYTE PTR ds:[ebx]
  40cd4d:	jmp    0x1595:0x6d5a4a8c
  40cd54:	std    
  40cd55:	jge    0x40cd9e
  40cd57:	push   esi
  40cd58:	aas    
  40cd59:	data16 jle 0x40cd65
  40cd5c:	inc    edx
  40cd5d:	jecxz  0x40cd62
  40cd5f:	(bad)  
  40cd60:	int    0xef
  40cd62:	stos   BYTE PTR es:[edi],al
  40cd63:	push   esp
  40cd64:	gs jmp 0x40cd04
  40cd67:	add    eax,0x69475e82
  40cd6c:	iret   
  40cd6d:	fimul  WORD PTR [ecx+0x105d599c]
  40cd73:	or     eax,0x91f5f30f
  40cd78:	inc    edx
  40cd79:	sbb    al,0x9d
  40cd7b:	xor    eax,DWORD PTR [ebp+0x3e]
  40cd7e:	mov    al,ds:0x26bacf40
  40cd83:	add    BYTE PTR [ecx+0x41],al
  40cd86:	jmp    0xf30ffe6e
  40cd8b:	add    BYTE PTR [eax+0x44],0x34
  40cd8f:	popf   
  40cd90:	cmp    eax,DWORD PTR [ebp+0x6]
  40cd93:	pushf  
  40cd94:	or     al,0xff
  40cd96:	cli    
  40cd97:	and    eax,0x9e64149
  40cd9c:	add    eax,0x6d1097e
  40cda1:	add    BYTE PTR [edi],0xa7
  40cda4:	add    DWORD PTR [edx+0x21],0x22
  40cda8:	std    
  40cda9:	nop
  40cdaa:	(bad)  
  40cdab:	jmp    0xe8fb1035
  40cdb0:	cs and dh,ch
  40cdb3:	xchg   esi,eax
  40cdb4:	add    bl,BYTE PTR [ecx-0xc]
  40cdb7:	jmp    0x3f292ad9
  40cdbc:	jmp    0x40cdd1
  40cdbe:	retf   0xccfa
  40cdc1:	sbb    DWORD PTR [edi+0x2d],ecx
  40cdc4:	or     eax,0x85e989c0
  40cdc9:	inc    edx
  40cdca:	and    DWORD PTR [esi-0x2],0x58
  40cdce:	hlt    
  40cdcf:	jmp    0xaf0a7c66
  40cdd4:	pop    ebx
  40cdd5:	std    
  40cdd6:	ret    0x762b
  40cdd9:	inc    edx
  40cdda:	mov    DWORD PTR [eax],edx
  40cddc:	jp     0x40ce49
  40cdde:	add    dh,dh
  40cde0:	and    bl,BYTE PTR [ecx+0x5e]
  40cde3:	bound  esi,QWORD PTR [esi]
  40cde5:	vpsubw ymm0,ymm3,YMMWORD PTR [eax]
  40cde9:	add    bh,bh
  40cdeb:	stc    
  40cdec:	cmp    DWORD PTR [ebx],ecx
  40cdee:	das    
  40cdef:	mov    ?,ebx
  40cdf1:	lds    eax,FWORD PTR [edx-0x79]
  40cdf4:	and    al,0xf2
  40cdf6:	pop    es
  40cdf7:	loop   0x40cde4
  40cdf9:	test   DWORD PTR [edx+0xa],eax
  40cdfc:	mov    al,0x46
  40cdfe:	out    dx,eax
  40cdff:	add    ch,0x74
  40ce02:	icebp  
  40ce03:	xchg   BYTE PTR [edx+ebx*1],ah
  40ce06:	or     ch,dh
  40ce08:	sbb    al,0x82
  40ce0a:	push   edi
  40ce0b:	push   ds
  40ce0c:	ins    DWORD PTR es:[edi],dx
  40ce0d:	aaa    
  40ce0e:	sbb    BYTE PTR [edx],cl
  40ce10:	(bad)  
  40ce11:	enter  0x805a,0x1c
  40ce15:	out    0xe9,al
  40ce17:	or     DWORD PTR [eax],eax
  40ce19:	and    al,BYTE PTR [edx+ecx*4-0x3f]
  40ce1d:	xor    eax,0x57968a2c
  40ce22:	inc    ebx
  40ce23:	mov    edx,ecx
  40ce25:	into   
  40ce26:	add    eax,0x142efe68
  40ce2b:	loop   0x40cdbe
  40ce2d:	ins    BYTE PTR es:[edi],dx
  40ce2e:	inc    ecx
  40ce2f:	or     cl,cl
  40ce31:	lods   eax,DWORD PTR ds:[esi]
  40ce32:	aas    
  40ce33:	or     dh,BYTE PTR [ebx]
  40ce35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce36:	sub    DWORD PTR [edx],eax
  40ce38:	mov    ebx,DWORD PTR [esi+0x1301a219]
  40ce3e:	dec    ebp
  40ce3f:	fucomi st,st(0)
  40ce41:	ret    0x8763
  40ce44:	mov    eax,0xd10aaa7a
  40ce49:	xchg   edi,eax
  40ce4a:	or     DWORD PTR [edi-0x12],edi
  40ce4d:	add    BYTE PTR [esi],dh
  40ce4f:	aas    
  40ce50:	xchg   DWORD PTR [eax],ecx
  40ce52:	cmp    al,0x2
  40ce54:	or     al,BYTE PTR [ecx+0x2e]
  40ce57:	mov    esp,0x439f00f4
  40ce5c:	js     0x40ce37
  40ce5e:	dec    edi
  40ce5f:	inc    esp
  40ce60:	leave  
  40ce61:	cmp    DWORD PTR [ecx],0x43
  40ce64:	jg     0x40ce81
  40ce66:	pop    es
  40ce67:	add    ecx,DWORD PTR [edx]
  40ce69:	add    BYTE PTR [edi+0x28],cl
  40ce6c:	or     ebp,DWORD PTR [edx+0x5f]
  40ce6f:	and    eax,0x5138560a
  40ce74:	add    BYTE PTR [eax],dl
  40ce76:	scas   eax,DWORD PTR es:[edi]
  40ce77:	ds pop eax
  40ce7a:	xchg   edx,eax
  40ce7b:	inc    ecx
  40ce7c:	sub    eax,DWORD PTR [esi]
  40ce7e:	dec    ebp
  40ce7f:	add    edi,0xffffffb0
  40ce82:	add    BYTE PTR cs:[ecx+0x420b2746],0x74
  40ce8a:	shr    BYTE PTR ss:[esi],0x0
  40ce8e:	pushf  
  40ce8f:	and    al,0xe
  40ce91:	add    BYTE PTR [esi-0x777cb13c],al
  40ce97:	enter  0x3c8d,0xfe
  40ce9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce9c:	dec    esp
  40ce9d:	add    BYTE PTR [esi+0x4156d94e],al
  40cea3:	mov    cl,0xca
  40cea5:	inc    edx
  40cea6:	xchg   BYTE PTR [eax],dh
  40cea8:	xchg   ecx,eax
  40cea9:	adc    al,0xe2
  40ceab:	pop    edx
  40ceac:	dec    eax
  40cead:	add    BYTE PTR [esi],al
  40ceaf:	ss xchg ah,al
  40ceb2:	add    BYTE PTR [ebp+0x69],al
  40ceb5:	or     BYTE PTR [ebp+0x71],dh
  40ceb8:	add    DWORD PTR [edi+edi*8],edx
  40cebb:	sar    edi,1
  40cebd:	mov    DWORD PTR [edi+0x248b6752],edi
  40cec3:	adc    ah,BYTE PTR [esi]
  40cec5:	dec    ebp
  40cec6:	add    BYTE PTR [esi-0x3477f4e1],al
  40cecc:	stos   DWORD PTR es:[edi],eax
  40cecd:	or     BYTE PTR [ecx],al
  40cecf:	push   ecx
  40ced0:	cmp    bl,bh
  40ced2:	out    dx,eax
  40ced3:	je     0x40ce7e
  40ced5:	or     BYTE PTR [edi+0xd],bl
  40ced8:	pop    ds
  40ced9:	int    0x55
  40cedb:	std    
  40cedc:	pop    eax
  40cedd:	add    DWORD PTR [ebp+0x7e],0xffffff91
  40cee1:	inc    eax
  40cee2:	je     0x40ce87
  40cee4:	loopne 0x40cf2d
  40cee6:	add    al,0x3
  40cee8:	sub    al,0x1a
  40ceea:	pop    es
  40ceeb:	(bad)  
  40ceec:	pop    esp
  40ceed:	stc    
  40ceee:	pop    ss
  40ceef:	xchg   esi,eax
  40cef0:	sub    ecx,DWORD PTR [esi]
  40cef2:	mov    ebx,DWORD PTR [eax-0x708c651a]
  40cef8:	add    DWORD PTR [esi],ecx
  40cefa:	push   esi
  40cefb:	push   ecx
  40cefc:	ja     0x40cef6
  40cefe:	shufps xmm5,XMMWORD PTR [ebx+0x32],0xc3
  40cf03:	fneni(8087 only) 
  40cf05:	lods   al,BYTE PTR ds:[esi]
  40cf06:	push   eax
  40cf07:	aad    0x2d
  40cf09:	test   edi,ebp
  40cf0b:	std    
  40cf0c:	inc    edx
  40cf0d:	and    eax,0x3c0abe0c
  40cf12:	adc    bl,al
  40cf14:	push   0x27
  40cf16:	fwait
  40cf17:	add    BYTE PTR [eax],bl
  40cf19:	push   esi
  40cf1a:	outs   dx,BYTE PTR ds:[esi]
  40cf1b:	ret    
  40cf1c:	call   0x65d5:0x1cc3b13e
  40cf23:	sbb    DWORD PTR [edx-0x672367ef],ecx
  40cf29:	iret   
  40cf2a:	mov    dl,0x8e
  40cf2c:	dec    ebx
  40cf2d:	dec    edx
  40cf2e:	sbb    bh,al
  40cf30:	jne    0x40cf78
  40cf32:	mov    ebx,0xa57d7610
  40cf37:	xchg   edi,eax
  40cf38:	test   edx,eax
  40cf3a:	loop   0x40cf3f
  40cf3c:	fnstsw WORD PTR ds:0x41ca4024
  40cf42:	arpl   WORD PTR [ebx],ax
  40cf44:	xchg   ch,ch
  40cf46:	(bad)  
  40cf47:	ss mov ecx,0x7b9a26cf
  40cf4d:	push   ebp
  40cf4e:	cmc    
  40cf4f:	out    dx,eax
  40cf50:	jns    0x40cf54
  40cf52:	jecxz  0x40ced4
  40cf54:	loope  0x40cf25
  40cf56:	out    0x8c,al
  40cf58:	js     0x40cfc3
  40cf5a:	pop    ds
  40cf5b:	ss xchg ecx,eax
  40cf5d:	iret   
  40cf5e:	(bad)  
  40cf5f:	call   0x2f80:0xd1f44a12
  40cf66:	fcomip st,st(3)
  40cf68:	mov    ecx,0x5992ab42
  40cf6d:	cmp    DWORD PTR [ebx+0x78245d44],esp
  40cf73:	add    dl,BYTE PTR [ebp-0x6134f087]
  40cf79:	not    esi
  40cf7b:	adc    DWORD PTR [eax],eax
  40cf7d:	jno    0x40cf48
  40cf7f:	adc    eax,0xde8c790c
  40cf84:	bnd je 0x40cff9
  40cf87:	or     DWORD PTR [eax-0x20],ebp
  40cf8a:	push   ebx
  40cf8b:	or     ecx,ebp
  40cf8d:	test   DWORD PTR [ebx+0x4152f1e1],eax
  40cf93:	lahf   
  40cf94:	icebp  
  40cf95:	mov    edx,0x3b280a00
  40cf9a:	push   es
  40cf9b:	push   es
  40cf9c:	sbb    esp,ebp
  40cf9e:	leave  
  40cf9f:	or     edi,DWORD PTR [ecx]
  40cfa1:	test   ebp,esi
  40cfa3:	push   ebx
  40cfa4:	and    cl,ch
  40cfa6:	add    BYTE PTR [ecx],0xe9
  40cfa9:	test   al,0xc9
  40cfab:	in     eax,0x18
  40cfad:	add    eax,DWORD PTR ds:0x55387402
  40cfb3:	inc    edx
  40cfb4:	mov    bh,0x91
  40cfb6:	dec    BYTE PTR [eax+0x5ce8243]
  40cfbc:	mov    ds:0xaccd3280,eax
  40cfc1:	icebp  
  40cfc2:	xor    BYTE PTR [edx],cl
  40cfc4:	jmp    0x2e4d394e
  40cfc9:	jns    0x40d021
  40cfcb:	sbb    ecx,ebp
  40cfcd:	test   DWORD PTR [edx-0x7f],eax
  40cfd0:	test   eax,0x1d7ec7a9
  40cfd5:	and    DWORD PTR [ebp+0x426bf77d],edx
  40cfdb:	xchg   DWORD PTR [ecx+edi*8+0x935cf1],ebx
  40cfe2:	xor    edx,0xfffffff4
  40cfe5:	aam    0x8d
  40cfe7:	xor    cl,BYTE PTR [edx-0x17]
  40cfea:	add    cl,BYTE PTR [edx+ecx*1+0x74]
  40cfee:	jo     0x40d00b
  40cff0:	jg     0x40cfd7
  40cff2:	jns    0x40d026
  40cff4:	cmp    DWORD PTR [ecx-0x56c7b7ce],ebp
  40cffa:	sub    bh,BYTE PTR [ecx+eax*4]
  40cffd:	jmp    0xc353f8
  40d002:	pop    eax
  40d003:	lock or DWORD PTR [esi-0xa],ebx
  40d007:	jle    0x40d066
  40d009:	mov    eax,DWORD PTR [ebx-0x41]
  40d00c:	loopne 0x40d01a
  40d00e:	mov    WORD PTR [eax],ss
  40d010:	xchg   DWORD PTR [ebp+0xb],esi
  40d013:	test   al,0x78
  40d015:	inc    BYTE PTR [eax]
  40d017:	mov    ebx,0xc72375f3
  40d01c:	into   
  40d01d:	(bad)  
  40d01e:	jp     0x40d066
  40d020:	loop   0x40d006
  40d022:	add    DWORD PTR [ebx+0x442f84f3],edi
  40d028:	add    eax,0x6fa8298b
  40d02d:	jmp    DWORD PTR [eax-0x46]
  40d030:	mov    al,al
  40d032:	retf   
  40d033:	push   ebx
  40d034:	mov    bh,0x1
  40d036:	xor    al,0x3d
  40d038:	cmp    bl,bl
  40d03a:	bound  edx,QWORD PTR [esi+edi*8]
  40d03d:	call   0x3489a3
  40d042:	and    esi,eax
  40d044:	(bad)  
  40d045:	pop    ebx
  40d046:	add    BYTE PTR [esi+0x7d],dh
  40d049:	or     al,0x0
  40d04b:	push   ds
  40d04c:	test   al,0x58
  40d04e:	loope  0x40d0b0
  40d050:	mov    edx,0x1c9751c7
  40d055:	jmp    0x40d056
  40d057:	cmp    BYTE PTR [esi+0x5d],0x8b
  40d05b:	adc    DWORD PTR [eax],0x59
  40d05e:	push   esi
  40d05f:	sub    bh,BYTE PTR [edx-0x6933dd83]
  40d065:	aaa    
  40d066:	div    ah
  40d068:	adc    al,0x2
  40d06a:	push   esi
  40d06b:	sbb    al,0xba
  40d06d:	jge    0x40d07f
  40d06f:	pusha  
  40d070:	inc    ebp
  40d071:	push   es
  40d072:	call   0x354c47
  40d077:	aam    0xae
  40d079:	(bad)  
  40d07a:	test   BYTE PTR [esi+0x5e52c4f2],0x27
  40d081:	scas   eax,DWORD PTR es:[edi]
  40d082:	dec    BYTE PTR [ecx+0x70]
  40d085:	fimul  DWORD PTR [edx+0x22251cb]
  40d08b:	or     edx,DWORD PTR [esi]
  40d08d:	xchg   edx,eax
  40d08e:	pop    edx
  40d08f:	push   ds
  40d090:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d091:	fadd   DWORD PTR [ecx]
  40d093:	xchg   dh,ah
  40d095:	int    0x74
  40d097:	imul   edx,eax,0x1a
  40d09a:	cld    
  40d09b:	rol    BYTE PTR [eax-0x7c],0x2
  40d09f:	std    
  40d0a0:	call   0xfba6:0x3984dfce
  40d0a7:	out    0xd3,al
  40d0a9:	pushf  
  40d0aa:	mov    al,BYTE PTR [eax]
  40d0ac:	fsubrp st(5),st
  40d0ae:	mov    al,0x74
  40d0b0:	cs aas 
  40d0b2:	nop
  40d0b3:	push   edi
  40d0b4:	fst    QWORD PTR [eax-0x77]
  40d0b7:	(bad)  
  40d0b8:	pop    edx
  40d0b9:	test   DWORD PTR ds:0x230d,ebx
  40d0be:	cmp    al,0x5b
  40d0c0:	mov    edi,0x33000226
  40d0c5:	shl    BYTE PTR [ecx+0xdb0b280],1
  40d0cb:	add    BYTE PTR [esi-0x4ef3ed18],al
  40d0d1:	jae    0x40d147
  40d0d3:	pushf  
  40d0d4:	xchg   BYTE PTR [ecx+0x8],ch
  40d0d7:	test   BYTE PTR [ebx+0x4d],0xa
  40d0db:	lea    eax,[ebx+0x2d]
  40d0de:	lea    ecx,ds:[ebx]
  40d0e1:	xchg   ecx,eax
  40d0e2:	fwait
  40d0e3:	dec    BYTE PTR [ecx-0x6d8b6448]
  40d0e9:	sub    BYTE PTR [ebx-0x4],cl
  40d0ec:	push   es
  40d0ed:	pop    esp
  40d0ee:	or     BYTE PTR [eax],al
  40d0f0:	cli    
  40d0f1:	ins    DWORD PTR es:[edi],dx
  40d0f2:	fwait
  40d0f3:	adc    al,0x2a
  40d0f5:	inc    ebx
  40d0f6:	test   BYTE PTR [ebx-0x7a],0xc7
  40d0fa:	mov    ds:0xaac5760f,al
  40d0ff:	xchg   esi,eax
  40d100:	pop    esi
  40d101:	jne    0x40d0e5
  40d103:	add    eax,DWORD PTR [esi-0x67fc2aaf]
  40d109:	add    ah,bl
  40d10b:	stos   BYTE PTR es:[edi],al
  40d10c:	sub    eax,0x585fe9
  40d111:	fst    DWORD PTR [ecx-0x5d]
  40d114:	xchg   esi,eax
  40d115:	xchg   edi,edx
  40d117:	fsubr  DWORD PTR [ecx]
  40d119:	mov    bh,BYTE PTR [edi+0x5219376d]
  40d11f:	fwait
  40d120:	xor    eax,DWORD PTR [ebx]
  40d122:	or     BYTE PTR [ebx-0x3f7bfcd],al
  40d128:	add    al,0xee
  40d12a:	jns    0x40d0ae
  40d12c:	xchg   esi,eax
  40d12d:	clc    
  40d12e:	fsubr  st(0),st
  40d130:	mov    BYTE PTR [edx],cl
  40d132:	in     eax,dx
  40d133:	arpl   WORD PTR [esi+0x407df2e8],dx
  40d139:	jmp    0x5b51:0xb9c05af2
  40d140:	stos   BYTE PTR es:[edi],al
  40d141:	cmp    ebp,eax
  40d143:	pop    edi
  40d144:	pop    eax
  40d145:	xor    DWORD PTR [ecx+0x4b],edx
  40d148:	xchg   esi,eax
  40d149:	cwde   
  40d14a:	xlat   BYTE PTR ds:[ebx]
  40d14b:	jo     0x40d176
  40d14d:	xchg   esi,eax
  40d14e:	mov    edi,0x51b12365
  40d153:	and    esi,DWORD PTR [ebx]
  40d155:	sti    
  40d156:	pop    es
  40d157:	add    esi,DWORD PTR [ebx]
  40d159:	enter  0xe407,0xff
  40d15d:	mov    eax,ds:0x909602a5
  40d162:	fsubr  st(0),st
  40d164:	mov    BYTE PTR [edx],al
  40d166:	in     eax,dx
  40d167:	or     edx,DWORD PTR [esi+0x4065f280]
  40d16d:	jbe    0x40d161
  40d16f:	or     DWORD PTR [ecx],eax
  40d171:	cli    
  40d172:	jno    0x40d168
  40d174:	out    dx,al
  40d175:	add    BYTE PTR [edi],bl
  40d177:	ss pusha 
  40d179:	add    eax,0x39ea0609
  40d17e:	sub    cl,BYTE PTR [esi]
  40d180:	jmp    0x40d158
  40d182:	sti    
  40d183:	push   esi
  40d184:	dec    esi
  40d185:	cmc    
  40d186:	test   dh,dl
  40d188:	push   es
  40d189:	scas   eax,DWORD PTR es:[edi]
  40d18a:	add    DWORD PTR [ecx+0xe],0x174e79a6
  40d191:	jmp    0xe322141b
  40d196:	jmp    0x40d19d
  40d198:	add    eax,0xf605e2e8
  40d19d:	out    0x85,eax
  40d19f:	inc    edx
  40d1a0:	or     ah,BYTE PTR [ebx+0x51]
  40d1a3:	xor    al,BYTE PTR [edx+0xddc8124]
  40d1a9:	je     0x40d16c
  40d1ab:	ds pop edx
  40d1ad:	ins    BYTE PTR es:[edi],dx
  40d1ae:	mov    ecx,0xb1af596e
  40d1b3:	ds xcrypt-ofb (bad)
  40d1b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1b6:	test   eax,0x4d510a40
  40d1bb:	(bad)  
  40d1bc:	hlt    
  40d1bd:	pop    esi
  40d1be:	clts   
  40d1c0:	imul   BYTE PTR [edx-0x36]
  40d1c3:	inc    esp
  40d1c4:	pop    edx
  40d1c5:	pop    esp
  40d1c6:	mov    DWORD PTR [esi+0x59],ebp
  40d1c9:	inc    esi
  40d1ca:	xchg   ecx,eax
  40d1cb:	cmp    ah,dl
  40d1cd:	into   
  40d1ce:	push   ebx
  40d1cf:	inc    edx
  40d1d0:	or     bh,dl
  40d1d2:	mov    esp,0x18dec9c4
  40d1d7:	add    BYTE PTR [eax-0x7d32ffd8],0x19
  40d1de:	jmp    0x69268f4b
  40d1e3:	fisub  WORD PTR [eax+0xd]
  40d1e6:	jmp    0x9cc770
  40d1eb:	hlt    
  40d1ec:	aas    
  40d1ed:	add    dl,BYTE PTR [edi+0x11]
  40d1f0:	pushf  
  40d1f1:	cs jns 0x40d253
  40d1f4:	inc    esp
  40d1f5:	cmp    ecx,ecx
  40d1f7:	sbb    eax,DWORD PTR [edx+0x5]
  40d1fa:	xchg   esp,eax
  40d1fb:	cs jae 0x40d1cd
  40d1fe:	push   ebx
  40d1ff:	mov    ch,0x43
  40d201:	xchg   DWORD PTR [ebp+0x34],eax
  40d204:	adc    al,0x81
  40d206:	(bad)  
  40d207:	out    0x8,al
  40d209:	jmp    0xa300:0x9f782e8
  40d210:	add    DWORD PTR [ebx],0xffffff84
  40d213:	pop    ebp
  40d214:	inc    esp
  40d215:	or     al,BYTE PTR [eax]
  40d217:	aaa    
  40d218:	sbb    ecx,esi
  40d21a:	btr    DWORD PTR [edx+ecx*1+0x0],ebp
  40d21f:	das    
  40d220:	inc    edi
  40d221:	mov    esp,0x5a12f445
  40d226:	lea    esp,[edx+0x8fff0df]
  40d22c:	adc    al,0xe2
  40d22e:	push   edx
  40d22f:	mov    edx,0x1f840a44
  40d234:	inc    edi
  40d235:	mov    ds,WORD PTR [edi]
  40d237:	fld    QWORD PTR [ebx+0xa]
  40d23a:	lgdtd  [ecx]
  40d23d:	icebp  
  40d23e:	jmp    0x40d240
  40d240:	aad    0xfb
  40d242:	xor    DWORD PTR [edx+eiz*8+0x38fff0df],ebx
  40d249:	aas    
  40d24a:	aaa    
  40d24b:	cmp    ebp,DWORD PTR [eax+eax*2-0x8]
  40d24f:	xor    ebp,DWORD PTR [edi-0x42]
  40d252:	fcomp  QWORD PTR [ebx]
  40d254:	pop    edi
  40d255:	jo     0x40d24b
  40d257:	add    BYTE PTR [eax-0x4a],bl
  40d25a:	mov    bl,0x5
  40d25c:	push   0x60030a43
  40d261:	inc    esi
  40d262:	mov    ebp,0x33e286c0
  40d267:	in     al,0x1c
  40d269:	pop    ebx
  40d26a:	mov    eax,DWORD PTR [edx+ebp*2-0x57]
  40d26e:	es call 0x48e0ca
  40d274:	or     bl,BYTE PTR [ecx]
  40d276:	push   cs
  40d277:	test   BYTE PTR [ecx+0x5a],cl
  40d27a:	or     BYTE PTR [eax],al
  40d27c:	call   0xd424eda3
  40d281:	dec    ecx
  40d282:	pop    eax
  40d283:	add    BYTE PTR [edi-0x73],bl
  40d286:	push   cs
  40d287:	add    BYTE PTR [esi+0x1a0481ee],al
  40d28d:	test   DWORD PTR [eax+0x3c992dfe],ebx
  40d293:	push   0xffffff8a
  40d295:	out    0x42,al
  40d297:	(bad)  
  40d298:	(bad)  
  40d299:	in     al,0x97
  40d29b:	xchg   ebx,eax
  40d29d:	mov    al,0x95
  40d29f:	loop   0x40d27b
  40d2a1:	pop    ecx
  40d2a2:	or     BYTE PTR [eax+eax*1-0x507397ba],al
  40d2a9:	xchg   DWORD PTR [ecx+0x8],ebx
  40d2ac:	add    BYTE PTR [ebx+0x30f029d],0x7
  40d2b3:	sldt   WORD PTR [esi-0x781fbd31]
  40d2ba:	push   ebp
  40d2bb:	clc    
  40d2bc:	(bad)  
  40d2bd:	dec    ebx
  40d2be:	mov    eax,ds:0x58d9fff0
  40d2c3:	mov    edi,0x85b1244
  40d2c8:	add    BYTE PTR [esi+0x4bc70804],al
  40d2ce:	ror    DWORD PTR [ebx],0x0
  40d2d1:	xchg   BYTE PTR [ecx-0x41],bl
  40d2d4:	inc    esp
  40d2d5:	repnz outs dx,DWORD PTR ds:[esi]
  40d2d7:	or     BYTE PTR [eax],al
  40d2d9:	xchg   BYTE PTR [eax+0x52],dh
  40d2dc:	inc    esp
  40d2dd:	leave  
  40d2de:	inc    ecx
  40d2df:	mov    ebx,0xf046527e
  40d2e4:	inc    ebx
  40d2e5:	xchg   BYTE PTR [ecx-0x39875443],bh
  40d2eb:	lock add al,0x86
  40d2ee:	inc    edx
  40d2ef:	mov    ebx,0xbafcf23b
  40d2f4:	add    cl,BYTE PTR [ebx]
  40d2f6:	loop   0x40d2d9
  40d2f8:	add    eax,DWORD PTR [esi-0x4b049a47]
  40d2fe:	fdiv   st,st(2)
  40d300:	add    BYTE PTR [edx],0x2f
  40d303:	aam    0x92
  40d305:	push   eax
  40d306:	repz retf 0xf
  40d30a:	or     al,BYTE PTR [ebx+eiz*8-0x79]
  40d30e:	add    DWORD PTR [esi],edi
  40d310:	addr16 cmp al,0x87
  40d313:	inc    edx
  40d314:	jecxz  0x40d333
  40d316:	data16 fsubr st,st(2)
  40d319:	xchg   edx,eax
  40d31a:	jb     0x40d37e
  40d31c:	xchg   DWORD PTR [esi-0x7a],eax
  40d31f:	dec    ebp
  40d320:	mov    ah,0x7c
  40d322:	ret    0xe76a
  40d325:	mov    BYTE PTR [eax-0x79fc613a],0x42
  40d32c:	or     ebx,edi
  40d32e:	pop    esi
  40d32f:	in     al,0x79
  40d331:	sti    
  40d332:	outs   dx,DWORD PTR ds:[esi]
  40d333:	xor    ah,BYTE PTR [esi-0x80]
  40d336:	lea    ecx,[ebp+0x7b]
  40d339:	xchg   edx,eax
  40d33a:	add    al,0x83
  40d33c:	jmp    0xd03:0xe342df9c
  40d343:	sar    dl,1
  40d345:	ss pop esp
  40d347:	inc    ebx
  40d348:	outs   dx,BYTE PTR ds:[esi]
  40d349:	dec    eax
  40d34a:	shl    dl,1
  40d34c:	dec    edx
  40d34d:	retf   
  40d34e:	std    
  40d34f:	inc    ebx
  40d350:	jecxz  0x40d2d9
  40d352:	stc    
  40d353:	cmp    eax,0x4287086f
  40d358:	or     ch,cl
  40d35a:	mov    ebp,0x9defbee
  40d35f:	dec    edx
  40d360:	or     ecx,ebp
  40d362:	test   DWORD PTR ds:0xf0efa4bc,edi
  40d368:	pop    ecx
  40d369:	fs (bad) 
  40d36b:	xor    ecx,esi
  40d36d:	push   cs
  40d36e:	add    BYTE PTR [edi*8+0x42c9dce1],dl
  40d375:	or     ah,BYTE PTR [ebp+0x45]
  40d378:	cmp    al,0x8e
  40d37a:	or     eax,DWORD PTR [ebp-0x4021f5be]
  40d380:	push   es
  40d381:	cld    
  40d382:	jno    0x40d35a
  40d384:	inc    esi
  40d385:	push   ds
  40d386:	loop   0x40d37f
  40d388:	dec    ebx
  40d389:	xchg   BYTE PTR [edx+ecx*1],ch
  40d38c:	std    
  40d38d:	pop    eax
  40d38e:	cmp    al,cl
  40d390:	(bad)  
  40d391:	sbb    eax,0x594c17c2
  40d396:	jo     0x40d3f9
  40d398:	jp     0x40d38e
  40d39a:	(bad)  
  40d39c:	ss dec edx
  40d39e:	jmp    0xf0be60ab
  40d3a3:	dec    edi
  40d3a4:	push   es
  40d3a5:	std    
  40d3a6:	in     eax,0xec
  40d3a8:	test   eax,0x1085e909
  40d3ad:	fsub   DWORD PTR [edx+0x49]
  40d3b0:	jp     0x40d3e2
  40d3b2:	stos   BYTE PTR es:[edi],al
  40d3b3:	sahf   
  40d3b4:	xor    DWORD PTR ds:0x45b83037,eax
  40d3ba:	cmp    cl,BYTE PTR fs:[edx]
  40d3bd:	inc    edx
  40d3be:	in     eax,0x79
  40d3c0:	das    
  40d3c1:	sub    DWORD PTR [ecx-0x2b36f817],0x69c74ef9
  40d3cb:	clc    
  40d3cc:	inc    edx
  40d3cd:	js     0x40d3fd
  40d3cf:	int3   
  40d3d0:	add    eax,0xab0000fd
  40d3d5:	mov    cl,0x7d
  40d3d7:	enter  0x5570,0xc
  40d3db:	push   ss
  40d3dc:	fild   WORD PTR [eax-0x1f]
  40d3df:	addr16 jo 0x40d418
  40d3e2:	sbb    bh,bh
  40d3e4:	call   FWORD PTR [eax-0x14]
  40d3e7:	pop    ecx
  40d3e8:	push   ecx
  40d3e9:	mov    bl,0xf3
  40d3eb:	mov    edx,ebx
  40d3ed:	cwde   
  40d3ee:	das    
  40d3ef:	ret    
  40d3f0:	sbb    bh,BYTE PTR [edx]
  40d3f2:	int3   
  40d3f3:	inc    ebp
  40d3f4:	js     0x40d437
  40d3f6:	loope  0x40d3d5
  40d3f8:	or     edi,eax
  40d3fa:	cmp    al,0x17
  40d3fc:	jmp    0x5cc9:0x3758818a
  40d403:	add    al,0x34
  40d405:	cmp    DWORD PTR [edi+0x7d],0x57
  40d409:	pop    ss
  40d40a:	pusha  
  40d40b:	add    al,0xe2
  40d40d:	add    al,0xbe
  40d40f:	push   eax
  40d410:	inc    edi
  40d411:	cmp    BYTE PTR [ecx-0x4b3bd0ff],dh
  40d417:	je     0x40d48f
  40d419:	sub    al,0x1e
  40d41b:	push   0x27
  40d41d:	mov    bl,0x3d
  40d41f:	loopne 0x40d425
  40d421:	pop    es
  40d422:	or     bh,bh
  40d424:	fxch   st(0)
  40d426:	dec    ebp
  40d427:	fsub   DWORD PTR [edi+eax*4]
  40d42a:	jge    0x40d432
  40d42c:	fld    DWORD PTR [edi*8+0x62550401]
  40d433:	add    ah,BYTE PTR [esi+0x88318]
  40d439:	xchg   ebp,eax
  40d43a:	cmp    al,BYTE PTR [edi-0x4b3954b3]
  40d440:	add    al,0x7e
  40d442:	push   ss
  40d443:	loop   0x40d410
  40d445:	inc    edx
  40d446:	mov    dl,0xf3
  40d448:	mov    esi,DWORD PTR [edx-0x7995a8b9]
  40d44e:	push   edi
  40d44f:	jae    0x40d495
  40d451:	(bad)  
  40d452:	mov    DWORD PTR [eax+0x85afd36],edx
  40d458:	test   dh,al
  40d45a:	xchg   esi,eax
  40d45b:	idiv   esi
  40d45d:	xor    esi,DWORD PTR [ecx]
  40d45f:	xchg   ecx,eax
  40d460:	jae    0x40d425
  40d462:	sbb    al,0x9a
  40d464:	xor    esi,eax
  40d466:	test   BYTE PTR [edx],bh
  40d468:	pop    ebx
  40d469:	mov    edi,0xc0000d17
  40d46e:	sahf   
  40d46f:	test   DWORD PTR [eax],eax
  40d471:	mov    esi,0x30e919e
  40d476:	jns    0x40d47a
  40d478:	add    BYTE PTR [esi+0x464475c3],al
  40d47e:	loopne 0x40d49b
  40d480:	fsubr  st,st(0)
  40d482:	loop   0x40d4c6
  40d484:	add    cl,BYTE PTR [ecx-0x413abd55]
  40d48a:	pop    esp
  40d48b:	mov    WORD PTR [edi+0x48085983],?
  40d491:	xchg   ecx,eax
  40d492:	in     eax,0xf7
  40d494:	add    al,0x86
  40d496:	pop    ecx
  40d497:	xor    BYTE PTR [edi+edi*2-0x5d],dh
  40d49b:	inc    edx
  40d49c:	test   DWORD PTR [eax],0x49c8281
  40d4a2:	xchg   BYTE PTR [ecx+0x40],bl
  40d4a5:	jg     0x40d42d
  40d4a7:	pop    ecx
  40d4a8:	or     BYTE PTR [ecx+0x4476e9cb],cl
  40d4ae:	(bad)  
  40d4b0:	inc    edx
  40d4b1:	mov    al,0x56
  40d4b3:	out    dx,al
  40d4b4:	sub    BYTE PTR [ebx],0xf9
  40d4b7:	ret    
  40d4b8:	test   BYTE PTR [edi+0x59],cl
  40d4bb:	int3   
  40d4bc:	bnd call DWORD PTR [ebx-0x397af1e7]
  40d4c3:	imul   eax,DWORD PTR [ecx-0x1cbd7d29],0x3
  40d4ca:	add    eax,DWORD PTR ds:0xc4fb3487
  40d4d0:	test   BYTE PTR [edi+0x36b24ac0],0xb9
  40d4d7:	xor    al,0x8f
  40d4d9:	stc    
  40d4da:	jno    0x40d51e
  40d4dc:	outs   dx,BYTE PTR ds:[esi]
  40d4dd:	les    edi,FWORD PTR [eax-0x3b]
  40d4e0:	jl     0x40d4ea
  40d4e2:	xchg   BYTE PTR [edx-0x33],al
  40d4e5:	sbb    dl,0x1d
  40d4e8:	sub    al,0x8f
  40d4ea:	nop
  40d4eb:	xor    cl,BYTE PTR [ebp+0x1c1c027c]
  40d4f1:	pop    DWORD PTR [eax+0x1a7cd6d0]
  40d4f7:	dec    DWORD PTR [ebx]
  40d4f9:	(bad)  
  40d4fa:	jo     0x40d4b8
  40d4fc:	push   ebp
  40d4fd:	aam    0x68
  40d4ff:	dec    edx
  40d500:	sti    
  40d501:	add    BYTE PTR [eax],0x1a
  40d504:	pop    ss
  40d505:	in     al,0x8e
  40d507:	pop    eax
  40d508:	pop    ebx
  40d509:	imul   ecx,DWORD PTR [esi-0x7a],0x5e487a42
  40d510:	(bad)  
  40d511:	fimul  DWORD PTR [esi+0x768be90]
  40d517:	xchg   BYTE PTR [edx+0x5b],al
  40d51a:	add    eax,DWORD PTR [esi+0x7e19e343]
  40d520:	dec    ecx
  40d521:	cmc    
  40d522:	mov    ds:0x8ee305ec,eax
  40d527:	jb     0x40d567
  40d529:	lock inc ebx
  40d52b:	xchg   BYTE PTR [ebp-0x2ff33556],bh
  40d531:	jmp    0xe1921ffb
  40d536:	pushf  
  40d537:	pop    ecx
  40d538:	ds jecxz 0x40d53e
  40d53b:	icebp  
  40d53c:	iret   
  40d53d:	cmp    BYTE PTR [edx+0x72],0x3a
  40d541:	or     bl,BYTE PTR [edx]
  40d543:	adc    edi,ecx
  40d545:	loope  0x40d55e
  40d547:	cli    
  40d548:	mov    dh,0xf0
  40d54a:	data16 add ch,al
  40d54d:	icebp  
  40d54e:	call   0xed79941b
  40d553:	test   DWORD PTR [edx-0x7f],eax
  40d556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d557:	sbb    eax,0x5546c5
  40d55c:	lds    eax,FWORD PTR [esi-0xbb707f7]
  40d562:	ss and ah,dh
  40d565:	fldenv [eax+0x0]
  40d568:	push   esi
  40d569:	data16 add ah,0xe9
  40d56d:	or     BYTE PTR [esi-0xbb7040b],0xeb
  40d574:	test   DWORD PTR [edx+0xa],eax
  40d577:	pusha  
  40d578:	fidiv  WORD PTR [ecx]
  40d57a:	hlt    
  40d57b:	push   es
  40d57c:	add    BYTE PTR [edx+0x47fbdd8e],bh
  40d582:	hlt    
  40d583:	add    BYTE PTR [ebx],dh
  40d585:	inc    esp
  40d586:	or     ch,cl
  40d588:	or     dh,cl
  40d58a:	add    DWORD PTR [ecx+ecx*1+0x35],esi
  40d58e:	hlt    
  40d58f:	fdivp  st(3),st
  40d591:	pusha  
  40d592:	rcl    DWORD PTR [eax-0x5671bd7b],1
  40d598:	sahf   
  40d599:	sub    bl,BYTE PTR [ecx+0x51]
  40d59c:	add    ecx,DWORD PTR [eax+0x9]
  40d59f:	jmp    0xe1bf1f16
  40d5a4:	adc    ch,BYTE PTR [esi]
  40d5a6:	adc    dl,bh
  40d5a8:	lds    eax,FWORD PTR [edx-0x71]
  40d5ab:	test   eax,0xeac6b713
  40d5b0:	test   DWORD PTR [edx-0xb],eax
  40d5b3:	sbb    al,0x22
  40d5b5:	mov    dh,0x8e
  40d5b7:	cmc    
  40d5b8:	or     ecx,DWORD PTR [eax-0xc]
  40d5bb:	add    BYTE PTR [eax],ah
  40d5bd:	add    edx,edi
  40d5bf:	sbb    bh,0x44
  40d5c2:	or     ch,al
  40d5c4:	push   eax
  40d5c5:	std    
  40d5c6:	or     DWORD PTR [eax],eax
  40d5c8:	arpl   WORD PTR [esi+0x3],di
  40d5cb:	test   BYTE PTR [eax],al
  40d5cd:	inc    BYTE PTR [ebx+0xa]
  40d5d0:	add    BYTE PTR [edx+0x1],bl
  40d5d3:	cli    
  40d5d4:	push   eax
  40d5d5:	sub    al,cl
  40d5d7:	and    bh,bh
  40d5d9:	dec    eax
  40d5da:	mov    bh,0x44
  40d5dc:	push   ebx
  40d5dd:	xlat   BYTE PTR ds:[ebx]
  40d5de:	mov    ch,0xf3
  40d5e0:	add    BYTE PTR [edi+0x4775f50d],bl
  40d5e6:	mov    bh,0x1d
  40d5e8:	mov    eax,0x8b0a04b2
  40d5ed:	outs   dx,DWORD PTR ds:[esi]
  40d5ee:	int    0x7d
  40d5f0:	aam    0xa4
  40d5f2:	mov    cl,0x3
  40d5f4:	mov    fs,edi
  40d5f6:	inc    ecx
  40d5f7:	or     al,BYTE PTR [eax]
  40d5f9:	in     al,dx
  40d5fa:	mov    eax,0x2edd0f0e
  40d5ff:	or     BYTE PTR [eax],al
  40d601:	pop    edi
  40d602:	push   ds
  40d603:	add    DWORD PTR [ebp-0xc48b5],0x148d7d01
  40d60d:	imul   esi,DWORD PTR [edi+0x17e20ff3],0x8
  40d614:	add    BYTE PTR [edi],ch
  40d616:	push   ds
  40d617:	mov    eax,edi
  40d619:	sub    eax,0xa28b0431
  40d61e:	pop    ebx
  40d61f:	lock (bad) 
  40d621:	call   0xd87163a0
  40d626:	mov    dh,0xf3
  40d628:	jmp    0x40d65e
  40d62a:	push   ds
  40d62b:	mov    eax,edi
  40d62d:	adc    BYTE PTR [ecx],dh
  40d62f:	adc    DWORD PTR [edx+0x0],ebp
  40d632:	bswap  ecx
  40d634:	lea    esi,[esi+eax*4]
  40d637:	mov    al,0x85
  40d639:	dec    BYTE PTR [ebx]
  40d63b:	out    0xe4,eax
  40d63d:	sti    
  40d63e:	icebp  
  40d63f:	rcl    BYTE PTR [eax-0x7a3735a0],0x84
  40d646:	(bad)  
  40d647:	pusha  
  40d648:	mov    esp,DWORD PTR [esi]
  40d64a:	test   BYTE PTR [ecx+0x8],bl
  40d64d:	adc    BYTE PTR [ecx+0x5b],0x8
  40d651:	lsl    eax,WORD PTR [edi+0xa]
  40d655:	add    BYTE PTR [esi-0x76e14089],al
  40d65b:	fdivp  st(4),st
  40d65d:	add    DWORD PTR [esi-0x5da340a7],eax
  40d663:	mov    ds,edx
  40d665:	(bad)  
  40d666:	sbb    ecx,DWORD PTR [ecx]
  40d668:	je     0x40d5ee
  40d66a:	push   0x18
  40d66c:	xchg   dh,bh
  40d66e:	ss into 
  40d670:	mov    edx,DWORD PTR [ebx+0x4f86288b]
  40d676:	outs   dx,BYTE PTR ds:[esi]
  40d677:	sti    
  40d678:	mov    eax,ds:0x89bf79fe
  40d67d:	mov    esp,0xfe863e1a
  40d682:	xchg   ecx,eax
  40d683:	into   
  40d684:	hlt    
  40d685:	mov    BYTE PTR [ebx],al
  40d687:	std    
  40d688:	cmp    esi,0x59
  40d68b:	loop   0x40d6f0
  40d68d:	xchg   edi,eax
  40d68e:	push   ebx
  40d68f:	pusha  
  40d690:	or     BYTE PTR [edx+0x447669c3],0x0
  40d697:	sub    al,BYTE PTR [ecx]
  40d699:	mov    ?,edi
  40d69b:	cmp    DWORD PTR [ecx+0x71],ebx
  40d69e:	test   BYTE PTR [edx-0x80],ah
  40d6a1:	cmp    dh,0xd5
  40d6a4:	sub    DWORD PTR [ecx+0x48675a14],eax
  40d6aa:	add    BYTE PTR [ecx+0x50348cf],cl
  40d6b0:	inc    edx
  40d6b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6b2:	clc    
  40d6b3:	shl    DWORD PTR [edi],0x6f
  40d6b6:	nop
  40d6b7:	add    DWORD PTR [edi-0x1e],eax
  40d6ba:	cmp    ecx,DWORD PTR [esi-0x32]
  40d6bd:	fdivr  DWORD PTR [ebx]
  40d6bf:	cmp    DWORD PTR [ebp+0x42860531],0x377b8a60
  40d6c9:	ins    DWORD PTR es:[edi],dx
  40d6ca:	pop    esp
  40d6cb:	xchg   BYTE PTR [edx-0x1d],al
  40d6ce:	sbb    eax,0x7cc4ea79
  40d6d3:	add    dl,BYTE PTR [esi]
  40d6d5:	push   esp
  40d6d6:	mov    eax,eax
  40d6d8:	fcomi  st,st(2)
  40d6da:	js     0x40d71c
  40d6dc:	ds mov bl,0x78
  40d6df:	or     cl,BYTE PTR [esi]
  40d6e1:	dec    esp
  40d6e2:	mov    ebp,DWORD PTR [eax-0x69bed40f]
  40d6e8:	and    eax,0x5a8603e3
  40d6ed:	hlt    
  40d6ee:	scas   al,BYTE PTR es:[edi]
  40d6ef:	nop
  40d6f0:	inc    esi
  40d6f1:	cwde   
  40d6f2:	out    dx,eax
  40d6f3:	sahf   
  40d6f4:	pop    ebp
  40d6f5:	loop   0x40d6fa
  40d6f7:	xchg   BYTE PTR [eax+0x500ffa3],bh
  40d6fd:	adc    ebx,0x7f
  40d700:	hlt    
  40d701:	inc    ebx
  40d702:	jecxz  0x40d707
  40d704:	jns    0x40d692
  40d706:	and    bh,BYTE PTR [ecx-0x37]
  40d709:	cmp    eax,0xb48894b8
  40d70e:	lea    eax,[esi+eax*4]
  40d711:	inc    edx
  40d712:	xor    edi,DWORD PTR [ecx-0x48]
  40d715:	aas    
  40d716:	xor    bh,BYTE PTR [ecx+0x12]
  40d719:	scas   eax,DWORD PTR es:[edi]
  40d71a:	fimul  WORD PTR [edx-0x77350bc8]
  40d720:	dec    edi
  40d721:	inc    esi
  40d722:	retf   
  40d723:	rol    DWORD PTR ds:0x20875f40,0x46
  40d72a:	or     ecx,ebp
  40d72c:	sahf   
  40d72d:	in     eax,dx
  40d72e:	push   cs
  40d72f:	cli    
  40d730:	inc    ebp
  40d731:	mov    bh,0x46
  40d733:	mov    ch,0x52
  40d735:	repnz pop ecx
  40d737:	jo     0x40d77f
  40d739:	jbe    0x40d6c1
  40d73b:	ins    BYTE PTR es:[edi],dx
  40d73c:	imul   ecx,DWORD PTR [ecx-0xc],0x1e45b58e
  40d743:	cmp    eax,0x640a05f6
  40d748:	lds    esi,FWORD PTR [edi+ecx*4]
  40d74b:	rol    BYTE PTR [edx+0x1bbb0a42],0x11
  40d752:	cld    
  40d753:	jb     0x40d79b
  40d755:	jbe    0x40d787
  40d757:	daa    
  40d758:	xchg   ecx,eax
  40d759:	xor    DWORD PTR ds:0x45b8fb9f,eax
  40d75f:	pop    esp
  40d760:	add    BYTE PTR ds:0x79ed420a,bh
  40d766:	xor    DWORD PTR [ecx-0x33f75657],eax
  40d76c:	mov    esp,0x69c74809
  40d771:	add    eax,DWORD PTR [eax+edi*2+0x46]
  40d775:	jmp    0x41b9:0x85e90944
  40d77c:	stc    
  40d77d:	mov    dl,0xbb
  40d77f:	inc    esi
  40d780:	sbb    esp,edi
  40d782:	aam    0x11
  40d784:	je     0x40d78c
  40d786:	sbb    ebp,esi
  40d788:	dec    BYTE PTR [edi]
  40d78a:	cmc    
  40d78b:	loope  0x40d7e8
  40d78d:	sub    eax,DWORD PTR [esp+esi*8-0x79]
  40d791:	or     BYTE PTR [esi+0x43ffe625],al
  40d797:	sbb    al,0x54
  40d799:	ds mov edx,0x440f2dbe
  40d79f:	hlt    
  40d7a0:	pusha  
  40d7a1:	rcl    DWORD PTR ds:0xbb4000f5,0xf3
  40d7a8:	jne    0x40d79d
  40d7aa:	mov    edx,0x139081d
  40d7af:	or     ch,bl
  40d7b1:	adc    BYTE PTR [esi-0x34eff50a],bh
  40d7b7:	mov    bl,0x0
  40d7b9:	out    dx,eax
  40d7ba:	inc    eax
  40d7bb:	pusha  
  40d7bc:	add    dh,BYTE PTR [edi+0x33858320]
  40d7c2:	mov    edx,0x9500fff3
  40d7c7:	inc    edx
  40d7c8:	xchg   DWORD PTR [edi-0x15],eax
  40d7cb:	adc    BYTE PTR [edi-0xc45e07b],al
  40d7d1:	jmp    FWORD PTR [edi-0x7d]
  40d7d4:	dec    ebp
  40d7d5:	lock iret 
  40d7d7:	inc    eax
  40d7d8:	or     al,BYTE PTR [eax]
  40d7da:	push   edi
  40d7db:	add    eax,0x2450ffd0
  40d7e0:	add    bl,BYTE PTR [ebx-0x37]
  40d7e3:	lds    ecx,FWORD PTR [eax]
  40d7e5:	pop    ds
  40d7e6:	sbb    al,0x7f
  40d7e8:	or     al,BYTE PTR [ebx+0x66f3ace2]
  40d7ee:	lds    esp,FWORD PTR es:[esi]
  40d7f1:	jmp    DWORD PTR [eax-0x45]
  40d7f4:	jge    0x40d84b
  40d7f6:	test   eax,0xcd6ffff4
  40d7fc:	lea    edx,[edx+edx*4]
  40d7ff:	mov    ecx,0x105f6af3
  40d804:	cmc    
  40d805:	adc    eax,0x34522b
  40d80a:	or     edi,eax
  40d80c:	lea    ebp,[eax+edx*2]
  40d80f:	mov    ebx,0xc3e666f3
  40d814:	sbb    ch,bh
  40d816:	pusha  
  40d817:	mov    ebx,0xbeefb703
  40d81c:	enter  0x860c,0xde
  40d820:	inc    ebx
  40d821:	adc    esi,DWORD PTR [ebx]
  40d823:	jne    0x40d7a6
  40d825:	mov    bl,al
  40d827:	popf   
  40d828:	nop
  40d829:	data16 add ch,bl
  40d82c:	pop    edx
  40d82d:	or     BYTE PTR [ecx-0x872823d],cl
  40d833:	adc    DWORD PTR [ebp+0x74],esp
  40d836:	push   ecx
  40d837:	xchg   DWORD PTR [ecx+0x8],ebx
  40d83a:	xor    eax,esi
  40d83c:	fmul   DWORD PTR [ebx]
  40d83e:	fcom   QWORD PTR [ecx+0x3ebf635c]
  40d844:	fsubr  DWORD PTR [eax-0x965faf5]
  40d84a:	mov    BYTE PTR [ebx-0x57],cl
  40d84d:	mov    edi,0xd54bb25c
  40d852:	push   cs
  40d853:	sbb    edi,ebx
  40d855:	fdiv   st(6),st
  40d857:	leave  
  40d858:	fdivr  QWORD PTR [edi-0x1e911dbc]
  40d85e:	(bad)  
  40d85f:	xor    ebp,ecx
  40d861:	jnp    0x40d7e7
  40d863:	(bad)  
  40d864:	hlt    
  40d865:	cmp    esi,0xd433d056
  40d86b:	sub    al,0x59
  40d86d:	aad    0xc2
  40d86f:	ss fdivrp st(4),st
  40d872:	push   ds
  40d873:	ss adc al,0x4
  40d876:	in     al,dx
  40d877:	mov    DWORD PTR [esi-0xc],eax
  40d87a:	adc    eax,0x7c8d59c6
  40d87f:	push   0x2c
  40d881:	repnz xor DWORD PTR [eax],0x59
  40d885:	or     BYTE PTR [eax],al
  40d887:	imul   eax,esi,0x6d0b8c9c
  40d88d:	cmp    dh,0x0
  40d890:	pop    ecx
  40d891:	inc    ecx
  40d892:	stos   DWORD PTR es:[edi],eax
  40d893:	mov    ch,0x87
  40d895:	pop    ecx
  40d896:	je     0x40d857
  40d898:	jns    0x40d8dc
  40d89a:	addr16 pop esp
  40d89c:	inc    ecx
  40d89d:	inc    ebx
  40d89e:	loop   0x40d91a
  40d8a0:	mov    dl,0x72
  40d8a2:	ins    DWORD PTR es:[edi],dx
  40d8a3:	inc    ecx
  40d8a4:	ss repnz push ebp
  40d8a7:	sbb    DWORD PTR [ebp+0x43],0xfd187cb
  40d8ae:	test   al,0x33
  40d8b0:	fiadd  WORD PTR [edx-0x45]
  40d8b3:	add    al,0x86
  40d8b5:	pop    ss
  40d8b6:	lods   eax,DWORD PTR ds:[esi]
  40d8b7:	xor    al,0xfb
  40d8b9:	cmp    eax,0xcd0133d4
  40d8be:	xchg   BYTE PTR [edi+0x43f58a92],al
  40d8c4:	xchg   BYTE PTR [edi],al
  40d8c6:	mov    al,ds:0x34337a07
  40d8cb:	jns    0x40d87a
  40d8cd:	inc    ebx
  40d8ce:	jae    0x40d857
  40d8d0:	sahf   
  40d8d1:	cmc    
  40d8d2:	sahf   
  40d8d3:	adc    DWORD PTR [edx+0xf],ebx
  40d8d6:	stos   BYTE PTR es:[edi],al
  40d8d7:	push   ds
  40d8d8:	push   DWORD PTR [edx]
  40d8da:	jnp    0x40d913
  40d8dc:	test   ah,bl
  40d8de:	pop    edi
  40d8df:	dec    ecx
  40d8e0:	ins    DWORD PTR es:[edi],dx
  40d8e1:	inc    ebx
  40d8e2:	pop    ebx
  40d8e3:	xchg   DWORD PTR [eax-0x543a81cd],ebx
  40d8e9:	js     0x40d94d
  40d8eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8ec:	test   BYTE PTR [ecx+eiz*1-0x7d],al
  40d8f0:	sbb    ah,BYTE PTR [esi-0x2d]
  40d8f3:	jnp    0x40d8f5
  40d8f5:	inc    eax
  40d8f6:	aas    
  40d8f7:	mov    esi,0x7e321ff9
  40d8fc:	jns    0x40d8b3
  40d8fe:	inc    ecx
  40d8ff:	adc    eax,0x60516c87
  40d904:	or     DWORD PTR [edx+0x45],edx
  40d907:	sahf   
  40d908:	inc    esp
  40d909:	fadd   QWORD PTR [esi+0x7e]
  40d90c:	jns    0x40d8bf
  40d90e:	inc    ecx
  40d90f:	cmc    
  40d910:	xchg   BYTE PTR [esi+0x51a60acf],dh
  40d916:	xchg   ebx,eax
  40d917:	loop   0x40d8f8
  40d919:	sbb    al,BYTE PTR [ecx-0xc]
  40d91c:	push   ebx
  40d91d:	test   bh,cl
  40d91f:	test   DWORD PTR [edi],ecx
  40d921:	add    DWORD PTR [ecx-0xc],eax
  40d924:	cmp    BYTE PTR [edi+0x72cf3b8d],ch
  40d92a:	sub    dh,al
  40d92c:	mov    eax,ds:0x34f44108
  40d931:	out    0xce,al
  40d933:	test   DWORD PTR [ebp-0x2],ebx
  40d936:	inc    eax
  40d937:	hlt    
  40d938:	sbb    BYTE PTR [ebp+0x45],dl
  40d93b:	int3   
  40d93c:	cmp    DWORD PTR [ecx+0x917e41],esi
  40d942:	push   edi
  40d943:	push   cs
  40d944:	inc    DWORD PTR [ebp+0x42]
  40d947:	fucomip st,st(3)
  40d949:	aam    0x1c
  40d94b:	sub    BYTE PTR [esi+edi*8],0x74
  40d94f:	shr    DWORD PTR [edx+0xd],0x41
  40d953:	add    al,0x5c
  40d955:	retf   0x8dca
  40d958:	leave  
  40d959:	add    BYTE PTR [ebx],al
  40d95b:	inc    ecx
  40d95c:	hlt    
  40d95d:	push   0xffffffca
  40d95f:	inc    ebx
  40d960:	sub    DWORD PTR [ecx+ebp*4+0x3f],0x8e2c56f4
  40d968:	add    ah,BYTE PTR [eax+0x2e]
  40d96b:	pop    ecx
  40d96c:	hlt    
  40d96d:	inc    esi
  40d96e:	or     ch,cl
  40d970:	inc    ebp
  40d971:	push   ecx
  40d972:	sbb    cl,dh
  40d974:	push   ss
  40d975:	aaa    
  40d976:	or     BYTE PTR [ecx+0x58],al
  40d979:	call   0x400b:0xfd8dcf54
  40d980:	hlt    
  40d981:	mov    ecx,0x591e41b4
  40d986:	jbe    0x40d909
  40d988:	or     ah,BYTE PTR [ebp+eax*2+0x50]
  40d98c:	add    DWORD PTR [eax],0x56
  40d98f:	leave  
  40d990:	hlt    
  40d991:	call   esp
  40d993:	push   edx
  40d994:	out    0xe8,al
  40d996:	test   BYTE PTR [esi+0x3784000a],cl
  40d99c:	mov    eax,edi
  40d99e:	sub    BYTE PTR [ecx+0xc],dl
  40d9a1:	(bad)  
  40d9a2:	(bad)  
  40d9a3:	iret   
  40d9a4:	or     ch,bl
  40d9a6:	sbb    al,0xbd
  40d9a8:	push   esi
  40d9a9:	sti    
  40d9aa:	jo     0x40d98a
  40d9ac:	xor    ebx,eax
  40d9ae:	dec    eax
  40d9af:	mov    DWORD PTR [eax-0x122c88b],0xcc451f00
  40d9b9:	inc    ebp
  40d9ba:	rol    BYTE PTR [ecx+eiz*8-0xf],1
  40d9be:	add    bh,ch
  40d9c0:	inc    esp
  40d9c1:	or     dh,BYTE PTR [ebx]
  40d9c3:	das    
  40d9c4:	pusha  
  40d9c5:	xchg   DWORD PTR [esi],edi
  40d9c7:	lock pop esi
  40d9c9:	add    DWORD PTR [esi-0x23],0xbf6a054f
  40d9d0:	mov    bh,0x4d
  40d9d2:	or     BYTE PTR [edi-0x22],bh
  40d9d5:	push   es
  40d9d6:	fstp   DWORD PTR [eax-0x39]
  40d9d9:	loopne 0x40d9de
  40d9db:	pushw  0x8b0e
  40d9df:	jno    0x40d9bf
  40d9e1:	xchg   edx,eax
  40d9e2:	mov    bh,0xae
  40d9e4:	inc    esp
  40d9e5:	jg     0x40d9d7
  40d9e7:	es push ecx
  40d9e9:	fiadd  DWORD PTR [ebx-0x7bfb38c7]
  40d9ef:	xor    eax,DWORD PTR [esi+0xa]
  40d9f2:	add    BYTE PTR [eax+0x51],bl
  40d9f5:	jmp    0x51f0:0xe26df153
  40d9fc:	(bad)  
  40d9fd:	hlt    
  40d9fe:	mov    esp,DWORD PTR [edi+0x1201f4c1]
  40da04:	jnp    0x40d98b
  40da06:	inc    ebp
  40da07:	xchg   BYTE PTR [ecx],ah
  40da09:	cmp    BYTE PTR [ebp-0x17c1863d],cl
  40da0f:	retf   0x782
  40da12:	add    BYTE PTR ds:0x4e8ab7b7,cl
  40da18:	mov    ds:0xc95ed40b,eax
  40da1d:	inc    eax
  40da1e:	add    BYTE PTR [esi+0xfe8eac],al
  40da24:	mov    dl,0xb6
  40da26:	es call 0x4f7abb
  40da2c:	std    
  40da2d:	data16 scas al,BYTE PTR es:[edi]
  40da2f:	or     BYTE PTR [esi+0x2c],0x38
  40da33:	push   ebx
  40da34:	mov    cl,0x0
  40da36:	add    eax,0x85bd1e08
  40da3b:	dec    BYTE PTR [ecx]
  40da3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da3e:	jg     0x40d9c2
  40da40:	add    DWORD PTR [ebx],ebp
  40da42:	add    eax,0xba56f90b
  40da47:	mov    dl,BYTE PTR [ebx+0x21]
  40da4a:	nop
  40da4b:	xchg   ecx,eax
  40da4c:	xor    DWORD PTR [ebx],ebp
  40da4e:	or     BYTE PTR [ebx+0x308fdd5b],cl
  40da54:	pop    ds
  40da55:	sub    ecx,DWORD PTR [eax]
  40da57:	adc    ecx,0xffffffb8
  40da5a:	inc    BYTE PTR [ebx-0x1714fd3]
  40da60:	add    eax,0x567408a9
  40da65:	addr16 xor al,0xfb
  40da68:	xchg   BYTE PTR [ecx+esi*1-0x1c7e5775],al
  40da6f:	mov    ch,0x87
  40da71:	sub    DWORD PTR [ebx-0x11],esi
  40da74:	add    eax,0x88748e80
  40da79:	outs   dx,DWORD PTR ds:[esi]
  40da7a:	xor    al,0xf7
  40da7c:	add    DWORD PTR [ebp+eax*8+0x21426e55],0xd
  40da84:	xchg   BYTE PTR [edx+0x14],al
  40da87:	push   cs
  40da88:	add    BYTE PTR [esi-0x6d],ah
  40da8b:	mov    bl,0x84
  40da8d:	repnz dec edx
  40da8f:	or     DWORD PTR ds:0x800d3f58,esp
  40da95:	push   ecx
  40da96:	inc    ecx
  40da97:	jle    0x40da91
  40da99:	cld    
  40da9a:	pushf  
  40da9b:	jmp    0x3cc238cd
  40daa0:	add    al,BYTE PTR [esi+0x3186fc2b]
  40daa6:	aas    
  40daa7:	pop    edi
  40daa8:	or     cl,BYTE PTR [eax-0x7b]
  40daab:	aam    0x5
  40daad:	sbb    eax,0x1ce16943
  40dab2:	sub    dl,BYTE PTR [ecx-0x4bbd7944]
  40dab8:	stc    
  40dab9:	cmp    DWORD PTR [edx],ebp
  40dabb:	hlt    
  40dabc:	pop    edx
  40dabd:	or     BYTE PTR [edi],bh
  40dabf:	push   0xe27dfcc9
  40dac4:	adc    al,BYTE PTR [ebx]
  40dac6:	stc    
  40dac7:	stos   BYTE PTR es:[edi],al
  40dac8:	xor    eax,0xffffffc1
  40dacb:	push   ds
  40dacc:	jnp    0x40dab7
  40dace:	dec    edi
  40dacf:	ins    DWORD PTR es:[edi],dx
  40dad0:	mov    bl,0xde
  40dad2:	lea    eax,ds:[ebx-0x68addae]
  40dad9:	fsubr  DWORD PTR [ebx+0x4a52837c]
  40dadf:	mov    DWORD PTR [edx],edx
  40dae1:	mov    eax,0xf9896d3e
  40dae6:	dec    esi
  40dae7:	jle    0x40db2d
  40dae9:	sahf   
  40daea:	aam    0x5a
  40daec:	add    DWORD PTR [eax],0xffffffa8
  40daef:	xchg   esp,eax
  40daf0:	push   0x22e0470
  40daf5:	xchg   DWORD PTR [edx],ebx
  40daf7:	dec    esi
  40daf8:	xor    al,0xf8
  40dafa:	dec    esp
  40dafb:	cmp    BYTE PTR [ebx],cl
  40dafd:	lods   al,BYTE PTR ds:[esi]
  40dafe:	jno    0x40db44
  40db00:	test   DWORD PTR [ecx+eax*1-0x1e537a72],esp
  40db07:	(bad)  
  40db08:	repz xchg esp,eax
  40db0a:	add    DWORD PTR ds:0x4292154e,0x4d59e90a
  40db14:	repz fcomp QWORD PTR [ecx]
  40db17:	push   edi
  40db18:	dec    edx
  40db19:	jmp    0xe4bfd91c
  40db1e:	add    BYTE PTR [esi],al
  40db20:	hlt    
  40db21:	add    al,ch
  40db23:	cmp    eax,0x829fe91e
  40db28:	or     dl,dl
  40db2a:	mov    ah,0xc8
  40db2c:	dec    ebp
  40db2d:	sar    edx,0x86
  40db30:	repnz inc edi
  40db32:	adc    DWORD PTR [edi-0x3e702d14],eax
  40db38:	ins    DWORD PTR es:[edi],dx
  40db39:	rol    DWORD PTR [ebp-0x4b0358f],0x86
  40db40:	cld    
  40db41:	arpl   si,cx
  40db43:	dec    ebp
  40db44:	sub    BYTE PTR [edi+edi*2],0xab
  40db48:	add    ch,BYTE PTR [esi+edi*4+0x31]
  40db4c:	pop    ebx
  40db4d:	xchg   esi,eax
  40db4e:	out    dx,al
  40db4f:	inc    ebp
  40db50:	int3   
  40db51:	and    al,0x0
  40db53:	pop    esi
  40db54:	cmp    eax,0x431edaec
  40db59:	or     bh,BYTE PTR [edx-0x19353ebe]
  40db5f:	out    dx,al
  40db60:	add    al,BYTE PTR [eax+0x1b0352a8]
  40db66:	jmp    0x6927a449
  40db6b:	and    DWORD PTR [ebp+0x9],esi
  40db6e:	jmp    0xacc06cf8
  40db73:	lea    edx,[ebx+ebx*2-0x3e560400]
  40db7a:	outs   dx,DWORD PTR ds:[esi]
  40db7b:	lahf   
  40db7c:	inc    ecx
  40db7d:	aaa    
  40db7e:	leave  
  40db7f:	xchg   ebx,eax
  40db80:	inc    edi
  40db81:	add    edx,DWORD PTR [esi+ebp*4+0x1556fc74]
  40db88:	dec    eax
  40db89:	test   DWORD PTR [ebp-0x75],eax
  40db8c:	adc    DWORD PTR [ecx-0x1fed1905],eax
  40db92:	call   0x4bd0ed
  40db97:	jmp    0x40db1a
  40db99:	jle    0x40dbaa
  40db9b:	or     eax,0x5ea6e281
  40dba0:	inc    ecx
  40dba1:	or     al,BYTE PTR [eax+0x73f3bcb2]
  40dba7:	cmp    ecx,esi
  40dba9:	lock push esi
  40dbab:	aad    0x41
  40dbad:	test   DWORD PTR [ebp+0x54],eax
  40dbb0:	push   ss
  40dbb1:	in     al,dx
  40dbb2:	cli    
  40dbb3:	cld    
  40dbb4:	inc    eax
  40dbb5:	or     al,BYTE PTR [eax+eax*1-0x1413cb11]
  40dbbc:	lock into 
  40dbbe:	inc    esi
  40dbbf:	out    0xa4,eax
  40dbc1:	sub    DWORD PTR [esi],0xf3c1ef00
  40dbc7:	mov    bh,BYTE PTR [esi]
  40dbc9:	and    ecx,0x8086f410
  40dbcf:	rcr    DWORD PTR [esi-0x5c],1
  40dbd2:	repz (bad) 
  40dbd4:	out    dx,eax
  40dbd5:	inc    eax
  40dbd6:	leave  
  40dbd7:	loope  0x40db98
  40dbd9:	dec    ebp
  40dbda:	fld    st(1)
  40dbdc:	test   DWORD PTR [ebp-0x37],0xc84de7e2
  40dbe3:	dec    eax
  40dbe4:	jmp    0x629bd8ed
  40dbe9:	shl    bl,0xff
  40dbec:	lahf   
  40dbed:	push   ecx
  40dbee:	mov    eax,DWORD PTR [esi+eax*4+0x2c00082b]
  40dbf5:	sub    esp,esi
  40dbf7:	add    BYTE PTR [ebx],cl
  40dbf9:	out    dx,al
  40dbfa:	jbe    0x40dc4b
  40dbfc:	std    
  40dbfd:	jg     0x40dc65
  40dbff:	scas   al,BYTE PTR es:[edi]
  40dc00:	aad    0x29
  40dc02:	or     BYTE PTR [esi+eax*2-0x3c766e0a],al
  40dc09:	pusha  
  40dc0a:	xchg   BYTE PTR [ebx-0x1779245],al
  40dc10:	imul   ebp,DWORD PTR [esi-0x1c6f8cb2],0x2a59fd88
  40dc1a:	or     BYTE PTR [eax],al
  40dc1c:	add    al,dl
  40dc1e:	push   ebx
  40dc1f:	pop    edi
  40dc20:	jns    0x40dc6b
  40dc22:	xor    eax,0x39cb8c8b
  40dc27:	fdiv   DWORD PTR [edx]
  40dc29:	cmp    DWORD PTR [ebp-0x2f],edi
  40dc2c:	mov    WORD PTR [ebx],cs
  40dc2e:	out    dx,al
  40dc2f:	mov    esi,edi
  40dc31:	sub    DWORD PTR [edx+0x7f],edi
  40dc34:	jl     0x40dc4c
  40dc36:	or     eax,0x6973b41d
  40dc3b:	push   cs
  40dc3c:	test   DWORD PTR [esi+0x76],eax
  40dc3f:	add    dh,al
  40dc41:	ret    
  40dc42:	cld    
  40dc43:	(bad)  
  40dc44:	jmp    0x32ed:0xeffca0b5
  40dc4b:	(bad)  
  40dc4c:	jge    0x40dbd8
  40dc4e:	daa    
  40dc4f:	cld    
  40dc50:	or     ch,bh
  40dc52:	pop    ebx
  40dc53:	sub    bh,BYTE PTR [ebx]
  40dc55:	fst    DWORD PTR [esi+0x7d]
  40dc58:	jmp    0x255c:0x17c1b074
  40dc5f:	(bad)  
  40dc60:	mov    edi,0x44835982
  40dc65:	test   eax,0xd3cb6659
  40dc6a:	inc    edx
  40dc6b:	ins    BYTE PTR es:[edi],dx
  40dc6c:	xor    BYTE PTR [eax-0x6d7fae4b],0x4a
  40dc73:	repz ret 
  40dc75:	mov    eax,ds:0xc0f75c78
  40dc7a:	ret    0x78ce
  40dc7d:	das    
  40dc7e:	add    al,0xaf
  40dc80:	jl     0x40dc82
  40dc82:	xchg   BYTE PTR [ebx+0x66],cl
  40dc85:	sub    al,0x87
  40dc87:	inc    edx
  40dc88:	loope  0x40dc77
  40dc8a:	mov    ebp,ecx
  40dc8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc8d:	push   ebx
  40dc8e:	fild   WORD PTR [edx-0x4f]
  40dc91:	adc    BYTE PTR [edx+0x61c3f376],0xc0
  40dc98:	sub    eax,0xa940ec0f
  40dc9d:	jmp    0x105261a0
  40dca2:	adc    BYTE PTR [ebp-0x396f34fb],al
  40dca8:	dec    ecx
  40dca9:	add    eax,DWORD PTR [esi+0x7ef83942]
  40dcaf:	add    al,0x2f
  40dcb1:	ja     0x40dc7f
  40dcb3:	sub    esi,ebx
  40dcb5:	add    al,0x86
  40dcb7:	inc    edx
  40dcb8:	push   esi
  40dcb9:	leave  
  40dcba:	dec    ecx
  40dcbb:	sub    bh,BYTE PTR [ecx+0x784286b8]
  40dcc1:	je     0x40dcc1
  40dcc3:	mov    ah,0xb1
  40dcc5:	add    DWORD PTR [ebx],0x3b
  40dcc8:	ds imul edi,eax,0x4fea9db4
  40dccf:	xchg   esp,eax
  40dcd0:	xor    BYTE PTR [esi+eiz*4+0x3c],ch
  40dcd4:	popf   
  40dcd5:	jg     0x40dce3
  40dcd7:	cmp    ah,BYTE PTR [ecx+0x7f]
  40dcda:	xchg   BYTE PTR [ebp+0x4a4a9113],dh
  40dce0:	adc    DWORD PTR [ecx+0x190b3242],edx
  40dce6:	add    BYTE PTR [edx],dh
  40dce8:	mov    edx,0xc785e8bc
  40dced:	jge    0x40dd48
  40dcef:	std    
  40dcf0:	xor    al,BYTE PTR [edx-0x68dcda24]
  40dcf6:	lahf   
  40dcf7:	mov    eax,DWORD PTR [edx-0x79]
  40dcfa:	dec    esi
  40dcfb:	sbb    DWORD PTR [esi+0x42a77206],esi
  40dd01:	int3   
  40dd02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd03:	adc    BYTE PTR [eax+0x428a85e1],bl
  40dd09:	or     dl,BYTE PTR [esi-0x16817c13]
  40dd0f:	test   ebp,ecx
  40dd11:	dec    ebp
  40dd12:	or     eax,0x6a0296fd
  40dd17:	rol    BYTE PTR [ebx+0x5a],cl
  40dd1a:	cmp    DWORD PTR [edi],0xffffff91
  40dd1d:	push   edi
  40dd1e:	adc    DWORD PTR [eax-0x3010bca],edi
  40dd24:	xor    DWORD PTR [eax+0x2af8af6],ecx
  40dd2a:	out    dx,al
  40dd2b:	ds sbb ah,bl
  40dd2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd2f:	stc    
  40dd30:	inc    edx
  40dd31:	or     dh,BYTE PTR [edx+0x2e]
  40dd34:	sbb    ah,bl
  40dd36:	xor    bl,al
  40dd38:	inc    edx
  40dd39:	or     ch,BYTE PTR [edx-0x68]
  40dd3c:	cmp    BYTE PTR [ebp*2-0x410bc6dd],al
  40dd43:	add    al,0x39
  40dd45:	or     bh,BYTE PTR ds:0xb24e008e
  40dd4b:	add    BYTE PTR [ebp-0x2f5db234],al
  40dd51:	xchg   edi,eax
  40dd52:	dec    edi
  40dd53:	mov    al,0x47
  40dd55:	inc    ebp
  40dd56:	or     cl,BYTE PTR [edi]
  40dd58:	or     eax,0xb07ed7f
  40dd5d:	jg     0x40dd37
  40dd5f:	add    BYTE PTR [edx+ecx*1-0x13],dl
  40dd63:	(bad)  
  40dd64:	retf   0x8295
  40dd67:	inc    ebp
  40dd68:	and    ebp,DWORD PTR [esi+0x45aeb32c]
  40dd6e:	jg     0x40dd60
  40dd70:	sbb    al,0xb7
  40dd72:	hlt    
  40dd73:	mov    db7,ebx
  40dd76:	repz (bad) 
  40dd78:	cmp    BYTE PTR [edi],cl
  40dd7a:	in     al,dx
  40dd7b:	aad    0xbc
  40dd7d:	inc    ebp
  40dd7e:	or     bh,bh
  40dd80:	shr    BYTE PTR [ecx+0x14f15a61],cl
  40dd86:	in     al,dx
  40dd87:	jo     0x40dd43
  40dd89:	mov    eax,0x3eb783f4
  40dd8e:	jge    0x40dd98
  40dd90:	xor    DWORD PTR [ebp+0x455eb451],ebp
  40dd96:	fisttp WORD PTR [edi]
  40dd98:	in     al,dx
  40dd99:	mov    ebp,0x7f6175f4
  40dd9e:	dec    esi
  40dd9f:	mul    DWORD PTR [esp+ebp*4]
  40dda2:	pop    es
  40dda3:	(bad)  
  40dda4:	and    bh,BYTE PTR [ebx+esi*8+0xafa84e7]
  40ddab:	add    BYTE PTR [edi+0x1ef42],ch
  40ddb1:	shl    dl,cl
  40ddb3:	jae    0x40de32
  40ddb5:	push   eax
  40ddb6:	sbb    al,0x78
  40ddb8:	xchg   esi,eax
  40ddb9:	cmp    BYTE PTR [ecx],dh
  40ddbb:	loopne 0x40ddbc
  40ddbd:	mov    dl,0xaf
  40ddbf:	popa   
  40ddc0:	jmp    FWORD PTR [esi+eiz*4+0x3e]
  40ddc4:	std    
  40ddc5:	enter  0x8eb6,0xc0
  40ddc9:	call   0x642c919d
  40ddce:	adc    DWORD PTR [ecx+0x17b25cec],eax
  40ddd4:	add    DWORD PTR [edx-0x79a90c46],0xffffffa4
  40dddb:	hlt    
  40dddc:	add    eax,DWORD PTR [ebx]
  40ddde:	enter  0x8e05,0xee
  40dde2:	sub    cl,BYTE PTR [eax]
  40dde4:	add    BYTE PTR ds:0x54ff763e,al
  40ddea:	inc    ebp
  40ddeb:	ss pop ebx
  40dded:	rcr    DWORD PTR [ebp+0x7e],0x0
  40ddf1:	xchg   BYTE PTR [ebx],ch
  40ddf3:	or     BYTE PTR [ecx+0x581874b],cl
  40ddf9:	test   esi,esp
  40ddfb:	outs   dx,DWORD PTR ds:[esi]
  40ddfc:	out    0xf8,eax
  40ddfe:	sbb    eax,0x6b0a0008
  40de03:	sti    
  40de04:	pop    ss
  40de05:	std    
  40de06:	fnstsw WORD PTR [ebx-0x76]
  40de09:	push   eax
  40de0a:	add    BYTE PTR [edx+0x3],0x86
  40de0e:	sub    DWORD PTR [edi+0x4c],esi
  40de11:	jp     0x40de74
  40de13:	ret    
  40de14:	out    dx,eax
  40de15:	add    BYTE PTR [edi-0x3cd79c0a],bl
  40de1b:	push   ecx
  40de1c:	popa   
  40de1d:	inc    esi
  40de1e:	or     eax,0xcb8877df
  40de23:	cmp    eax,0xf6cbc731
  40de28:	cmp    BYTE PTR [edx+esi*1-0x5b],0xc
  40de2d:	mov    ecx,ebx
  40de2f:	xor    DWORD PTR [ebp-0x1dce78b5],eax
  40de35:	adc    edx,edi
  40de37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de38:	retf   
  40de39:	push   es
  40de3a:	mov    ?,WORD PTR [ecx+0x75]
  40de3d:	adc    al,0x5a
  40de3f:	das    
  40de40:	enter  0x4ff,0xe6
  40de44:	add    eax,DWORD PTR [ebp-0x74fa90ba]
  40de4a:	dec    ebx
  40de4b:	in     eax,dx
  40de4c:	or     ch,0xee
  40de4f:	stos   BYTE PTR es:[edi],al
  40de50:	or     eax,DWORD PTR [eax]
  40de52:	xchg   BYTE PTR [edx-0x54],al
  40de55:	into   
  40de56:	in     eax,dx
  40de57:	imul   ebp,DWORD PTR [eax+0x69364a7c],0xffffffc6
  40de5e:	fld    QWORD PTR [ebx-0x68]
  40de61:	cmp    BYTE PTR [eax+0x3e],cl
  40de64:	or     eax,0x7d7dc846
  40de69:	mov    BYTE PTR [ebx+0x3e],al
  40de6c:	jl     0x40de34
  40de6e:	test   eax,0x86700641
  40de73:	xchg   ebp,eax
  40de74:	imul   edi,DWORD PTR [edx],0x8fe52e2b
  40de7a:	add    BYTE PTR [edi+esi*1],bl
  40de7d:	pop    ebp
  40de7e:	jl     0x40debc
  40de80:	xchg   edi,eax
  40de81:	sub    al,BYTE PTR [eax+0x3b]
  40de84:	retf   
  40de85:	xor    DWORD PTR [eax+0x6df2ac0],ecx
  40de8b:	xchg   BYTE PTR [edx+0x65],al
  40de8e:	inc    ebx
  40de8f:	cmc    
  40de90:	push   edi
  40de91:	push   esi
  40de92:	les    ecx,FWORD PTR [ecx-0x7ab2e66e]
  40de98:	inc    edx
  40de99:	loope  0x40de21
  40de9b:	and    DWORD PTR [ecx-0x34bf7711],edi
  40dea1:	adc    ebp,DWORD PTR [ebx-0x40]
  40dea4:	inc    ecx
  40dea5:	loope  0x40deaa
  40dea7:	add    al,BYTE PTR [edx]
  40dea9:	jg     0x40deb1
  40deab:	jne    0x40deaf
  40dead:	mov    ds:0x217344dd,al
  40deb2:	fld    QWORD PTR [ebp+ecx*4+0x78]
  40deb6:	push   0xd33b93d6
  40debb:	adc    bh,BYTE PTR [ebp-0x23]
  40debe:	aam    0x21
  40dec0:	xchg   esp,eax
  40dec1:	pop    edi
  40dec2:	add    al,0x86
  40dec4:	retf   
  40dec5:	leave  
  40dec6:	aaa    
  40dec7:	adc    BYTE PTR [ebx-0x4d],bh
  40deca:	lock mov ebp,0x7e140acb
  40ded0:	(bad)  
  40ded1:	out    dx,eax
  40ded2:	call   0xf1a151d0
  40ded7:	pop    ebp
  40ded8:	dec    ebx
  40ded9:	xlat   BYTE PTR ds:[ebx]
  40deda:	sahf   
  40dedb:	pop    ebp
  40dedc:	jl     0x40deaa
  40dede:	sbb    eax,0x3ac98500
  40dee3:	pusha  
  40dee4:	fiadd  DWORD PTR [edx+0x7f]
  40dee7:	jns    0x40def0
  40dee9:	sub    eax,0x7512df7f
  40deee:	adc    DWORD PTR [edi],0x6fd52a86
  40def4:	sub    eax,0xa9e78838
  40def9:	inc    ecx
  40defa:	jne    0x40deef
  40defc:	sbb    al,0x6d
  40defe:	loop   0x40deef
  40df00:	xor    BYTE PTR [eax],bh
  40df02:	hlt    
  40df03:	mov    bh,0x20
  40df05:	ds jg  0x40df37
  40df08:	sbb    DWORD PTR [edi],edi
  40df0a:	pop    ebx
  40df0b:	push   ecx
  40df0c:	add    edx,DWORD PTR [esp+esi*8]
  40df0f:	ss mov cl,0x2
  40df12:	push   esp
  40df13:	(bad)  
  40df14:	push   eax
  40df15:	or     ecx,eax
  40df17:	jb     0x40df5c
  40df19:	inc    edx
  40df1a:	jg     0x40df0c
  40df1c:	cmp    BYTE PTR [eax-0x4e3493a5],dl
  40df22:	aaa    
  40df23:	fs retf 0x23b1
  40df27:	xchg   edx,eax
  40df28:	lds    ebp,FWORD PTR [ebp+0x7f]
  40df2b:	add    DWORD PTR [ebp-0x6d],edx
  40df2e:	loop   0x40dedd
  40df30:	shl    BYTE PTR [esp+esi*8],1
  40df33:	bound  edi,QWORD PTR [edx-0x79a30342]
  40df39:	jo     0x40df05
  40df3b:	shl    BYTE PTR [esp+ecx*4+0x62],cl
  40df3f:	jg     0x40dec6
  40df41:	inc    edx
  40df42:	or     ah,BYTE PTR [edx+0x0]
  40df45:	les    ebx,FWORD PTR ds:0x3ec500d5
  40df4b:	or     dl,BYTE PTR [esi+0x75]
  40df4e:	cdq    
  40df4f:	jmp    0x40df08
  40df51:	sbb    eax,0x1c8af4b9
  40df56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df57:	add    eax,0x9e29df6a
  40df5c:	add    bh,ch
  40df5e:	inc    ecx
  40df5f:	aaa    
  40df60:	rol    BYTE PTR [edi],0x76
  40df63:	jno    0x40df65
  40df65:	fistp  WORD PTR [eax]
  40df67:	push   esi
  40df68:	pop    ebx
  40df69:	sbb    al,0x13
  40df6b:	sub    esp,0x335d0d9e
  40df71:	xor    BYTE PTR [edi+ecx*8-0x77],ch
  40df75:	mov    ds:0x9b7e32ad,al
  40df7a:	cmp    esp,DWORD PTR [edi]
  40df7c:	mov    ebp,DWORD PTR [ecx+0x2c66cb3c]
  40df82:	cmp    DWORD PTR [eax+eax*1],edx
  40df85:	mov    ecx,0x1c046056
  40df8a:	or     DWORD PTR [edi],0xc32c050
  40df90:	call   FWORD PTR [edx+0x6d]
  40df93:	sbb    al,0x40
  40df95:	pop    edi
  40df96:	mov    esp,0x81da0cc7
  40df9b:	jle    0x40dfa0
  40df9d:	add    BYTE PTR [edx],0xf0
  40dfa0:	inc    ebx
  40dfa1:	in     al,dx
  40dfa2:	cmp    BYTE PTR [ebx],0x3b
  40dfa5:	and    DWORD PTR ds:0xd400d370,esi
  40dfab:	add    dh,al
  40dfad:	pop    edi
  40dfae:	in     al,0x85
  40dfb0:	leave  
  40dfb1:	add    al,0x2f
  40dfb3:	adc    al,BYTE PTR [ecx+0x5d0c0eec]
  40dfb9:	xor    esp,DWORD PTR [eax]
  40dfbb:	outs   dx,DWORD PTR ds:[esi]
  40dfbc:	iret   
  40dfbd:	mov    edx,eax
  40dfbf:	mov    edx,0x27867e32
  40dfc4:	repnz sub al,0xfd
  40dfc7:	sbb    al,0xf
  40dfc9:	(bad)  
  40dfca:	mov    al,ds:0x8633f6a8
  40dfcf:	ins    DWORD PTR es:[edi],dx
  40dfd0:	punpckhdq mm2,QWORD PTR [esi+0x56234ea8]
  40dfd7:	in     al,0xe3
  40dfd9:	pop    es
  40dfda:	jmp    0x46571c14
  40dfdf:	sub    ecx,DWORD PTR [edi+0x4ea68ac3]
  40dfe5:	je     0x40df6c
  40dfe7:	les    esi,FWORD PTR [ebx+0x49a845fb]
  40dfed:	aaa    
  40dfee:	jge    0x40e045
  40dff0:	or     bh,BYTE PTR [ebp+edx*8-0x61]
  40dff4:	mov    bl,0xfb
  40dff6:	push   ecx
  40dff7:	push   eax
  40dff8:	aas    
  40dff9:	rol    DWORD PTR [edx+0xd56da2b],0xa3
  40e000:	mov    eax,DWORD PTR [esi+0x7a]
  40e003:	mov    al,ds:0x99e4f77
  40e008:	jae    0x40e008
  40e00a:	mov    DWORD PTR [edi+0x3000176],esp
  40e010:	sbb    BYTE PTR [edi+0x5fd4a2c6],cl
  40e016:	call   0x286e:0x82716571
  40e01d:	std    
  40e01e:	add    edx,DWORD PTR [ebp-0x6afd9a97]
  40e024:	imul   ecx,esi,0x8568b05e
  40e02a:	inc    ebx
  40e02b:	mov    ds:0x6a4b8731,al
  40e030:	and    eax,0xa0823f87
  40e035:	mov    edi,0xe36a6d03
  40e03a:	add    dh,BYTE PTR [ebp+0x42]
  40e03d:	mov    eax,ds:0x61027c44
  40e042:	arpl   WORD PTR [ebx],bx
  40e044:	and    DWORD PTR [eax+0x6e9c11ed],0x46
  40e04b:	dec    ecx
  40e04c:	inc    edx
  40e04d:	push   edi
  40e04e:	cmp    al,0x1
  40e050:	mov    bl,0xed
  40e052:	js     0x40dffd
  40e054:	sub    bl,BYTE PTR [esi]
  40e056:	sub    eax,0x3f604284
  40e05b:	xchg   ebp,eax
  40e05c:	(bad)  
  40e05d:	js     0x40e01e
  40e05f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e060:	inc    esi
  40e061:	js     0x40e02a
  40e063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e064:	dec    edx
  40e065:	xor    ecx,DWORD PTR [ebp+0x78e95e55]
  40e06b:	xchg   ebx,eax
  40e06c:	mov    edi,0xbf560ba1
  40e071:	mov    ds:0xb5ae000b,al
  40e076:	loopne 0x40e07b
  40e078:	xchg   dl,al
  40e07a:	jecxz  0x40e07b
  40e07c:	test   eax,0x9905d695
  40e081:	sbb    ah,BYTE PTR [ecx]
  40e083:	into   
  40e084:	or     al,0x27
  40e086:	popa   
  40e087:	or     DWORD PTR [si+0x7368],0xd0e584fc
  40e090:	or     al,0xb5
  40e092:	stc    
  40e093:	add    al,0xc9
  40e095:	ds enter 0xb94a,0x2a
  40e09a:	jb     0x40e0ef
  40e09c:	push   0x90436633
  40e0a1:	mov    esi,0x4286037e
  40e0a6:	push   0xd08f85c1
  40e0ab:	pop    esp
  40e0ac:	(bad)  
  40e0ad:	jl     0x40e0a0
  40e0af:	mov    edx,esp
  40e0b1:	cs retf 
  40e0b3:	fadd   DWORD PTR [ebp-0x380f54c]
  40e0b9:	xchg   ebp,eax
  40e0ba:	repnz add al,BYTE PTR [ebx+0x5972cf6f]
  40e0c1:	aas    
  40e0c2:	jne    0x40e0a5
  40e0c4:	or     edx,DWORD PTR [esi+0x232f10f6]
  40e0ca:	jne    0x40e0cd
  40e0cc:	std    
  40e0cd:	cmp    al,0x85
  40e0cf:	sub    eax,0xd5604a85
  40e0d4:	aad    0xc5
  40e0d6:	dec    ebx
  40e0d7:	loope  0x40e0d9
  40e0d9:	aad    0x33
  40e0db:	push   ds
  40e0dc:	in     eax,dx
  40e0dd:	jnp    0x40e061
  40e0df:	or     ch,BYTE PTR [edx+0x46]
  40e0e2:	inc    edi
  40e0e3:	lea    ebp,[ecx+0x2cf396d6]
  40e0e9:	dec    esi
  40e0ea:	enter  0x8d4d,0x5
  40e0ee:	add    BYTE PTR [ebx],dh
  40e0f0:	ret    0x22c6
  40e0f3:	ja     0x40e096
  40e0f5:	or     eax,0x22a77ffc
  40e0fa:	inc    eax
  40e0fb:	rep outs dx,BYTE PTR ds:[esi]
  40e0fd:	xor    DWORD PTR [edi-0x38832336],edi
  40e103:	inc    esp
  40e104:	in     eax,0xc
  40e106:	add    ah,BYTE PTR [eax+0x29]
  40e109:	push   edx
  40e10a:	aas    
  40e10b:	or     al,0xc3
  40e10d:	dec    ebp
  40e10e:	sbb    DWORD PTR [ebx-0x67],0x3e0e8012
  40e115:	xchg   edi,eax
  40e116:	jb     0x40e134
  40e118:	test   eax,0xddcec585
  40e11d:	lock xchg dh,bh
  40e120:	jb     0x40e181
  40e122:	dec    edx
  40e123:	jg     0x40e0c9
  40e125:	jmp    0x92522eee
  40e12a:	ins    DWORD PTR es:[edi],dx
  40e12b:	dec    ebx
  40e12c:	in     eax,0x51
  40e12e:	sar    DWORD PTR [edi+0x0],0xf9
  40e132:	xor    DWORD PTR [ecx-0x37],esp
  40e135:	inc    edi
  40e136:	sahf   
  40e137:	sbb    eax,0xa3b938d0
  40e13c:	add    DWORD PTR [eax],eax
  40e13e:	adc    al,0x19
  40e140:	push   esi
  40e141:	leave  
  40e142:	in     eax,dx
  40e143:	xor    esp,esi
  40e145:	mov    ah,BYTE PTR [edx-0x56]
  40e148:	mov    es,eax
  40e14a:	mov    bh,0xdd
  40e14c:	popa   
  40e14d:	add    BYTE PTR [ecx-0x62],dl
  40e150:	stos   DWORD PTR es:[edi],eax
  40e151:	add    bh,ch
  40e153:	inc    ebp
  40e154:	(bad)  
  40e156:	outs   dx,DWORD PTR ds:[esi]
  40e157:	cmp    DWORD PTR [eax],ebp
  40e159:	add    al,0xdf
  40e15b:	call   FWORD PTR [ebx+ecx*4+0x37]
  40e15f:	mov    ebp,0x9dd774fa
  40e164:	fsubp  st(4),st
  40e166:	clc    
  40e167:	mov    eax,0xbce34782
  40e16c:	int    0xe8
  40e16e:	fldcw  WORD PTR [edx-0x7acc000c]
  40e174:	jle    0x40e17a
  40e176:	std    
  40e177:	test   eax,esp
  40e179:	sub    eax,0x41080724
  40e17e:	test   BYTE PTR [edi+0x3b],bh
  40e181:	call   0x3569e1
  40e186:	and    eax,DWORD PTR [ebp+0x724ec77]
  40e18c:	or     BYTE PTR [ebx+0x38b41c5e],cl
  40e192:	ins    BYTE PTR es:[edi],dx
  40e193:	das    
  40e194:	bound  edi,QWORD PTR [eax]
  40e196:	add    BYTE PTR cs:[ecx+ecx*4+0x29],al
  40e19b:	xor    ebp,esi
  40e19d:	adc    eax,0x4a3f6f
  40e1a2:	add    ah,ch
  40e1a4:	jno    0x40e1a5
  40e1a6:	scas   eax,DWORD PTR es:[edi]
  40e1a7:	outs   dx,BYTE PTR ds:[esi]
  40e1a8:	sbb    BYTE PTR [esi-0x3e],dl
  40e1ab:	xchg   BYTE PTR [edi],bl
  40e1ad:	or     BYTE PTR [ebp-0x3],dl
  40e1b0:	cs mov ch,bl
  40e1b3:	(bad)  
  40e1b4:	rol    DWORD PTR [edx-0x70acbd8c],1
  40e1ba:	add    al,BYTE PTR [esi+0x7e4c811b]
  40e1c0:	lds    ecx,FWORD PTR [esi]
  40e1c2:	mov    ecx,DWORD PTR [eax+0x13]
  40e1c5:	mov    ?,esi
  40e1c7:	sbb    DWORD PTR [eax],edx
  40e1c9:	(bad)  
  40e1cb:	inc    esp
  40e1cc:	pop    ds
  40e1cd:	or     BYTE PTR [esi-0x4f],dl
  40e1d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1d1:	jbe    0x40e15d
  40e1d3:	not    DWORD PTR [edx]
  40e1d5:	aad    0xeb
  40e1d7:	stc    
  40e1d8:	out    dx,eax
  40e1d9:	jg     0x40e221
  40e1db:	mov    ah,BYTE PTR [ecx+ecx*2+0x7ddf19e7]
  40e1e2:	dec    BYTE PTR [edx]
  40e1e4:	(bad)  
  40e1e6:	adc    ebp,DWORD PTR [ebp-0x27]
  40e1e9:	add    edx,DWORD PTR ss:[ebp+0x30573645]
  40e1f0:	rol    BYTE PTR [ebx],0x30
  40e1f3:	cwde   
  40e1f4:	pop    ebx
  40e1f5:	push   cs
  40e1f6:	add    edx,0x1e
  40e1f9:	mov    eax,0x49595100
  40e1fe:	push   esp
  40e1ff:	std    
  40e200:	scas   al,BYTE PTR es:[edi]
  40e201:	xlat   BYTE PTR ds:[ebx]
  40e202:	mov    dl,BYTE PTR [ebx+0x33]
  40e205:	jecxz  0x40e1c6
  40e207:	add    BYTE PTR [esi+0x1c],bl
  40e20a:	or     DWORD PTR [esi+0x5],esp
  40e20d:	sbb    BYTE PTR [eax],ch
  40e20f:	add    BYTE PTR ds:0x48d782f9,dh
  40e215:	fistp  QWORD PTR [esi-0x1]
  40e218:	cmc    
  40e219:	iret   
  40e21a:	loope  0x40e21f
  40e21c:	add    esi,ecx
  40e21e:	sbb    ecx,DWORD PTR [ebp+0x4fc5fdc5]
  40e224:	popa   
  40e225:	inc    ebx
  40e226:	div    BYTE PTR [edi]
  40e228:	jo     0x40e1ac
  40e22a:	loope  0x40e1ac
  40e22c:	inc    ebp
  40e22d:	aas    
  40e22e:	inc    sp
  40e230:	aad    0x5f
  40e232:	mov    ebx,0x193aba88
  40e237:	cmp    BYTE PTR [ebx],bh
  40e239:	xor    ch,dh
  40e23b:	cmp    BYTE PTR [ecx],0x45
  40e23e:	in     al,dx
  40e23f:	xchg   esi,eax
  40e240:	jmp    0x5630040b
  40e245:	push   0x26
  40e247:	or     BYTE PTR [ebx+0x3005753],dl
  40e24d:	mov    ch,bh
  40e24f:	sar    edx,cl
  40e251:	and    ebp,0xffffffd3
  40e254:	add    BYTE PTR [esi-0xf],dl
  40e257:	or     eax,0x3f604246
  40e25c:	jge    0x40e266
  40e25e:	daa    
  40e25f:	jne    0x40e1e7
  40e261:	aas    
  40e262:	jl     0x40e220
  40e264:	sub    DWORD PTR [eax-0x49863f16],0x520083e3
  40e26e:	ds loope 0x40e25f
  40e271:	test   DWORD PTR [eax+0x8a1c06a],ebp
  40e277:	daa    
  40e278:	jne    0x40e200
  40e27a:	test   al,0x60
  40e27c:	hlt    
  40e27d:	jne    0x40e2c1
  40e27f:	cmc    
  40e280:	aad    0x1f
  40e282:	push   edx
  40e283:	push   esi
  40e284:	in     al,dx
  40e285:	gs mov ebp,0x92301fa0
  40e28b:	push   esp
  40e28c:	push   cs
  40e28d:	push   edx
  40e28e:	pop    eax
  40e28f:	mov    eax,ds:0xd6070503
  40e294:	jle    0x40e2d7
  40e296:	mov    dh,0x1c
  40e298:	into   
  40e299:	or     al,0xb5
  40e29b:	stc    
  40e29c:	imul   edx,DWORD PTR [eax-0xdc9f4d3],0xffffffc4
  40e2a3:	bnd jmp 0x40e230
  40e2a6:	int    0xca
  40e2a8:	ins    DWORD PTR es:[edi],dx
  40e2a9:	lds    esi,FWORD PTR [esi+0x3b10e13e]
  40e2af:	jge    0x40e2ab
  40e2b1:	pop    edi
  40e2b2:	aas    
  40e2b3:	test   DWORD PTR [esi-0x557a6d5f],esp
  40e2b9:	cdq    
  40e2ba:	xchg   edx,eax
  40e2bb:	repz aam 0x75
  40e2be:	pop    eax
  40e2bf:	dec    edx
  40e2c0:	jmp    0x2747e5cb
  40e2c5:	loopne 0x40e2f6
  40e2c7:	or     dh,dh
  40e2c9:	fadd   QWORD PTR [edi-0x7c9cb8c2]
  40e2cf:	ds pop ebp
  40e2d1:	add    BYTE PTR [edx+eax*8-0x4a7a228b],al
  40e2d8:	push   cs
  40e2d9:	dec    edi
  40e2da:	jnp    0x40e260
  40e2dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2de:	mov    edi,0xbf630a2f
  40e2e3:	das    
  40e2e4:	push   ebp
  40e2e5:	adc    ah,BYTE PTR [ebx-0x4716fcff]
  40e2eb:	out    dx,al
  40e2ec:	xor    dh,BYTE PTR [edi]
  40e2ee:	push   ecx
  40e2ef:	xor    al,BYTE PTR [eax+0x95306e7]
  40e2f5:	(bad)  
  40e2f6:	int3   
  40e2f7:	inc    edx
  40e2f8:	pop    edi
  40e2f9:	test   eax,0xc2c9436a
  40e2fe:	pop    edx
  40e2ff:	mov    cl,0xff
  40e301:	arpl   ax,bp
  40e303:	jbe    0x40e35d
  40e305:	cmp    DWORD PTR [eax+0x3966f3fe],0xfe293841
  40e30f:	out    dx,al
  40e310:	jle    0x40e2f9
  40e312:	adc    al,0x7d
  40e314:	push   cs
  40e315:	bound  eax,QWORD PTR [edx+eax*2+0x5f]
  40e319:	add    BYTE PTR [esi-0x5ec61da2],dh
  40e31f:	mov    cl,0xf4
  40e321:	pop    esi
  40e322:	pushf  
  40e323:	or     eax,DWORD PTR [ecx+0xc03e4ec]
  40e329:	xor    DWORD PTR [ebx+0x4e],0x57
  40e32d:	push   edi
  40e32e:	loop   0x40e33b
  40e330:	fsub   st(0),st
  40e332:	lods   eax,DWORD PTR ds:[esi]
  40e333:	inc    esi
  40e334:	or     al,BYTE PTR [eax]
  40e336:	add    BYTE PTR [ebp+edi*2+0x32],bl
  40e33a:	pop    esi
  40e33b:	sub    esi,DWORD PTR [ecx+edi*1]
  40e33e:	xor    esi,DWORD PTR [eax]
  40e340:	lods   eax,DWORD PTR ds:[esi]
  40e341:	or     eax,0x8729e28b
  40e346:	inc    esp
  40e347:	sub    BYTE PTR [edx],ch
  40e349:	xchg   DWORD PTR [ebp+0x33],edx
  40e34c:	mov    bl,BYTE PTR [ebx+0x60421f00]
  40e352:	adc    al,0xa2
  40e354:	cli    
  40e355:	fist   WORD PTR [eax+0x62]
  40e358:	cli    
  40e359:	fist   DWORD PTR [eax-0x40]
  40e35c:	dec    edx
  40e35d:	ss push ss
  40e35f:	lahf   
  40e360:	inc    esi
  40e361:	xchg   esp,eax
  40e363:	jecxz  0x40e31f
  40e365:	mov    bl,0x78
  40e367:	mov    ebp,0xe7c78904
  40e36c:	pop    esp
  40e36d:	push   esp
  40e36e:	add    al,0x73
  40e370:	or     DWORD PTR [eax+0x5110f0c8],0xa45edc9
  40e37a:	mov    ebp,esp
  40e37c:	mov    ebp,?
  40e37e:	push   ebx
  40e37f:	in     al,dx
  40e380:	jl     0x40e3de
  40e382:	cmp    DWORD PTR [ecx-0x23da8bc6],edx
  40e388:	mov    al,0x80
  40e38a:	push   es
  40e38b:	mov    ch,0x55
  40e38d:	test   DWORD PTR [eax+ebp*4+0x29],eax
  40e391:	inc    esp
  40e392:	inc    DWORD PTR [esi-0x7eebd3f1]
  40e398:	ss and al,0x16
  40e39b:	add    dh,al
  40e39d:	sbb    ecx,DWORD PTR [ebp+0x47a682c3]
  40e3a3:	jae    0x40e33c
  40e3a5:	fmul   DWORD PTR [esi+eax*8+0x3da309e]
  40e3ac:	fiadd  DWORD PTR [esi-0x13ae3874]
  40e3b2:	(bad)
  40e3b6:	jne    0x40e37a
  40e3b8:	sub    eax,0x7fd23c54
  40e3bd:	retf   
  40e3be:	or     esi,DWORD PTR [ecx+ebp*2-0x3b]
  40e3c2:	es push eax
  40e3c4:	data16 scas al,BYTE PTR es:[edi]
  40e3c6:	add    DWORD PTR [esi+0x5f],esp
  40e3c9:	retf   
  40e3ca:	cmp    esi,DWORD PTR [ebp+edi*2+0x49]
  40e3ce:	das    
  40e3cf:	push   ebp
  40e3d0:	push   es
  40e3d1:	and    dl,BYTE PTR [ebx]
  40e3d3:	jae    0x40e44d
  40e3d5:	and    al,0xb2
  40e3d7:	lock add dl,bl
  40e3da:	es push esp
  40e3dc:	xor    BYTE PTR [ebx],0xfc
  40e3df:	out    dx,eax
  40e3e0:	push   es
  40e3e1:	add    dl,BYTE PTR [ebx]
  40e3e3:	(bad)  
  40e3e5:	fcmovnu st,st(0)
  40e3e7:	ret    0xdb94
  40e3ea:	dec    ebp
  40e3eb:	push   ebp
  40e3ec:	xor    DWORD PTR [eax+0x107a697c],esi
  40e3f2:	xor    BYTE PTR [edx],ch
  40e3f4:	(bad)  
  40e3f5:	jae    0x40e46b
  40e3f7:	adc    eax,DWORD PTR [edi-0x6d77e7f7]
  40e3fd:	sbb    eax,0x3b004ec8
  40e402:	mov    bh,0xd9
  40e404:	pop    ebp
  40e405:	lds    ecx,FWORD PTR [ebp+0x75]
  40e408:	jmp    0x40e417
  40e40a:	data16 or al,BYTE PTR [ebx+0x7f1941aa]
  40e411:	cmp    cl,BYTE PTR [edx]
  40e413:	pop    edx
  40e414:	push   edi
  40e415:	mov    BYTE PTR [ebx*2+0x683eca7d],ch
  40e41c:	mov    edi,0x5f96bd81
  40e421:	imul   eax,DWORD PTR [esi*1-0x2a66978f],0x921eca7e
  40e42c:	jle    0x40e3f0
  40e42e:	or     dh,BYTE PTR [edx-0x4918590]
  40e434:	ret    
  40e435:	dec    ecx
  40e436:	shl    DWORD PTR ds:0xea014f00,0x3
  40e43d:	shl    DWORD PTR [edi+0x2f1d831d],cl
  40e443:	jecxz  0x40e448
  40e445:	xchg   BYTE PTR [esp+edx*4-0x1cb92582],dl
  40e44c:	jo     0x40e466
  40e44e:	sbb    ecx,DWORD PTR [edx+0x10428714]
  40e454:	inc    esp
  40e455:	dec    ecx
  40e456:	mov    ebp,0xb7e97856
  40e45b:	(bad)  
  40e45c:	jo     0x40e456
  40e45e:	mov    ebp,0x2bf3fb66
  40e463:	mov    ch,0xd3
  40e465:	add    al,ch
  40e467:	push   ebp
  40e468:	popa   
  40e469:	adc    eax,0x43e04246
  40e46e:	dec    ecx
  40e46f:	mov    ebp,0x2bd3fb66
  40e474:	xchg   ebp,eax
  40e475:	sar    esp,cl
  40e477:	add    al,0x8a
  40e479:	pop    ebp
  40e47a:	scas   eax,DWORD PTR es:[edi]
  40e47b:	sub    eax,DWORD PTR [ebp+0x20de8db0]
  40e481:	add    al,0xa
  40e483:	add    edi,esi
  40e485:	das    
  40e486:	sbb    al,0x52
  40e488:	or     ah,BYTE PTR [eax+ecx*1-0x40]
  40e48c:	hlt    
  40e48d:	outs   dx,BYTE PTR ds:[esi]
  40e48e:	push   ss
  40e48f:	jnp    0x40e510
  40e491:	das    
  40e492:	sub    eax,0x165ee112
  40e497:	mov    edi,0xb79dddca
  40e49c:	int3   
  40e49d:	inc    ecx
  40e49e:	pop    ebp
  40e49f:	sbb    ah,dh
  40e4a1:	inc    esi
  40e4a2:	or     ebx,ebp
  40e4a4:	jle    0x40e482
  40e4a6:	jmp    0xf42c:0xc35be305
  40e4ad:	jo     0x40e496
  40e4af:	inc    edx
  40e4b0:	or     ch,cl
  40e4b2:	rol    dh,1
  40e4b4:	push   cs
  40e4b5:	pop    ds
  40e4b6:	(bad)  
  40e4b7:	sub    al,0xcd
  40e4b9:	jmp    0x94826743
  40e4be:	lods   al,BYTE PTR ds:[esi]
  40e4bf:	fisttp DWORD PTR [ecx]
  40e4c1:	adc    ah,BYTE PTR [ebx-0x68]
  40e4c4:	push   ds
  40e4c5:	xchg   ebx,eax
  40e4c6:	test   DWORD PTR [ebx+0x5900dcf3],edx
  40e4cc:	push   esp
  40e4cd:	dec    edx
  40e4ce:	jmp    0x6cc6200e
  40e4d3:	(bad)  
  40e4d4:	sub    al,0xf4
  40e4d6:	fidiv  WORD PTR [edx]
  40e4d8:	xchg   esp,eax
  40e4d9:	repz cld 
  40e4db:	mov    ch,0x54
  40e4dd:	dec    edx
  40e4de:	jmp    0x7453e3e7
  40e4e3:	mov    edi,0x4c17e32e
  40e4e8:	sub    al,0xf4
  40e4ea:	jo     0x40e52c
  40e4ec:	inc    edx
  40e4ed:	or     ch,cl
  40e4ef:	push   es
  40e4f0:	(bad)  
  40e4f1:	push   cs
  40e4f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4f3:	popa   
  40e4f4:	sub    al,0xcd
  40e4f6:	jmp    0x1c826780
  40e4fb:	xor    esi,DWORD PTR [ecx-0x36]
  40e4fe:	cs enter 0xc7f9,0x0
  40e503:	pop    ds
  40e504:	jno    0x40e4d0
  40e506:	lds    ebx,FWORD PTR [esi+eax*2+0xa]
  40e50a:	jne    0x40e4ee
  40e50c:	adc    al,0xb6
  40e50e:	fsub   st,st(2)
  40e510:	(bad)  
  40e511:	repz push ebp
  40e513:	sub    BYTE PTR [ecx-0x1a],cl
  40e516:	adc    bl,bh
  40e518:	mov    bh,BYTE PTR ds:0x487baf
  40e51f:	outs   dx,DWORD PTR ds:[esi]
  40e520:	sub    ebx,DWORD PTR ds:0xf49965e8
  40e526:	jmp    ebx
  40e528:	jle    0x40e5a1
  40e52a:	push   cs
  40e52b:	in     al,dx
  40e52c:	pop    ebx
  40e52d:	into   
  40e52e:	lds    eax,FWORD PTR [eax]
  40e530:	sub    al,0x46
  40e532:	or     al,dh
  40e534:	bound  eax,QWORD PTR [esi+0x3f5f43ce]
  40e53a:	pop    esp
  40e53b:	inc    DWORD PTR [edx-0x4a]
  40e53e:	sbb    DWORD PTR [eax+0x2f],eax
  40e541:	clc    
  40e542:	mov    ebx,0xf405db0c
  40e547:	ret    0x5215
  40e54a:	loop   0x40e501
  40e54c:	sbb    BYTE PTR [ecx+0x322850f4],bl
  40e552:	sub    BYTE PTR [eax+ebp*1],cl
  40e555:	dec    ebx
  40e556:	ss push ss
  40e558:	pop    edi
  40e559:	ds xchg esp,eax
  40e55c:	jmp    0x40e50e
  40e55e:	fistp  DWORD PTR [ebx]
  40e560:	das    
  40e561:	push   es
  40e562:	retf   0xdf04
  40e565:	adc    al,0x81
  40e567:	sbb    eax,0x4a4fef
  40e56c:	fadd   QWORD PTR [ebp-0x9999a2]
  40e572:	sub    DWORD PTR [esi+0x56],esp
  40e575:	(bad)  
  40e576:	cmp    eax,0x4cc2d36a
  40e57b:	add    DWORD PTR [esi-0x71ba7695],eax
  40e581:	or     al,0x6b
  40e583:	dec    edi
  40e584:	call   DWORD PTR [ecx]
  40e586:	ja     0x40e5f5
  40e588:	sub    BYTE PTR [eax+0x1fca8258],0xd2
  40e58f:	add    esp,DWORD PTR [eax]
  40e591:	repnz aam 0x18
  40e594:	add    BYTE PTR [edx],bl
  40e596:	das    
  40e597:	mov    eax,DWORD PTR [esi+0x73]
  40e59a:	jmp    0x40e526
  40e59c:	inc    ebp
  40e59d:	mov    ds:0x6dd264eb,al
  40e5a2:	and    al,0x8b
  40e5a4:	inc    ebp
  40e5a5:	xchg   edx,eax
  40e5a6:	(bad)  
  40e5a7:	xlat   BYTE PTR ds:[ebx]
  40e5a8:	(bad)  
  40e5a9:	xchg   ebx,eax
  40e5aa:	das    
  40e5ab:	push   ds
  40e5ac:	inc    eax
  40e5ad:	xchg   cl,bh
  40e5af:	jo     0x40e5f7
  40e5b1:	jg     0x40e54f
  40e5b3:	dec    ebx
  40e5b4:	or     ebp,eax
  40e5b6:	mov    dl,0xcd
  40e5b8:	pop    ds
  40e5b9:	push   eax
  40e5ba:	and    BYTE PTR [edx],cl
  40e5bc:	je     0x40e55b
  40e5be:	mov    ecx,0xcf6d6f26
  40e5c3:	adc    ch,BYTE PTR [edx-0x6a]
  40e5c6:	scas   al,BYTE PTR es:[edi]
  40e5c7:	int3   
  40e5c8:	sbb    dl,dh
  40e5ca:	xchg   esi,eax
  40e5cb:	int    0x23
  40e5cd:	mov    dh,0x30
  40e5cf:	pop    edx
  40e5d0:	gs or  eax,0x4a8310e0
  40e5d6:	das    
  40e5d7:	push   ebx
  40e5d8:	adc    DWORD PTR [ebx+ebp*1+0x66aa4575],ebx
  40e5df:	fdivp  st(6),st
  40e5e1:	xchg   ebx,eax
  40e5e2:	dec    edi
  40e5e3:	sbb    al,0x40
  40e5e5:	xchg   BYTE PTR [edx+eax*2-0x3c244af5],bl
  40e5ec:	mulps  xmm6,XMMWORD PTR gs:[edx]
  40e5f0:	pop    ebx
  40e5f1:	lds    ecx,FWORD PTR [ebx-0x25]
  40e5f4:	mov    ah,BYTE PTR [ebx+0x15d142]
  40e5fa:	inc    esi
  40e5fb:	inc    edx
  40e5fc:	pop    ss
  40e5fd:	sbb    BYTE PTR [ebx],dl
  40e5ff:	sub    ecx,0xe2800ad3
  40e605:	ror    ebx,cl
  40e607:	aas    
  40e608:	loope  0x40e676
  40e60a:	sar    BYTE PTR [esi+edx*8-0x1e7d87c9],cl
  40e611:	add    ch,0x35
  40e614:	or     eax,DWORD PTR [ecx-0x261e9df0]
  40e61a:	test   DWORD PTR [esi+0x46c87ee5],ebp
  40e620:	mov    cl,0x7e
  40e622:	ret    
  40e623:	dec    ebp
  40e624:	mov    cl,0x6c
  40e626:	pop    edx
  40e627:	sbb    al,0xfa
  40e629:	jle    0x40e5ee
  40e62b:	dec    ebp
  40e62c:	xlat   BYTE PTR ds:[ebx]
  40e62d:	add    esi,DWORD PTR [esi+0xce61127]
  40e633:	add    BYTE PTR [ecx],0x81
  40e636:	inc    ebp
  40e637:	aaa    
  40e638:	cmp    DWORD PTR [edx-0x3d],0x49
  40e63c:	mov    eax,DWORD PTR [eax-0x261e9140]
  40e642:	mov    DWORD PTR [esi+0x5ec87efb],ebp
  40e648:	xchg   ecx,eax
  40e649:	jle    0x40e60e
  40e64b:	dec    ebx
  40e64c:	xchg   ecx,eax
  40e64d:	ins    BYTE PTR es:[edi],dx
  40e64e:	cmp    ah,BYTE PTR [ecx-0x3caa3a98]
  40e654:	sub    eax,0xdf390600
  40e659:	pop    eax
  40e65a:	jp     0x40e611
  40e65c:	sub    ecx,DWORD PTR [ecx]
  40e65e:	add    BYTE PTR [edx+eax*2+0x31],ch
  40e662:	ins    DWORD PTR es:[edi],dx
  40e663:	aam    0xc3
  40e665:	lods   eax,DWORD PTR ds:[esi]
  40e666:	push   DWORD PTR [edx+eax*1-0x7f0119d1]
  40e66d:	sbb    cl,cl
  40e66f:	les    edx,FWORD PTR [ebx+0x6fbc1f0a]
  40e675:	pusha  
  40e676:	jmp    0xa73ba335
  40e67b:	jo     0x40e6eb
  40e67d:	sbb    al,0x29
  40e67f:	mov    bh,BYTE PTR [ebx+0x463ef94c]
  40e685:	cmp    dh,bh
  40e687:	lds    esp,FWORD PTR [edi]
  40e689:	std    
  40e68a:	mov    eax,ds:0x2f86027e
  40e68f:	js     0x40e6f4
  40e691:	leave  
  40e692:	push   0x45
  40e694:	dec    edi
  40e695:	pusha  
  40e696:	aad    0xb5
  40e698:	mov    dh,0x4b
  40e69a:	icebp  
  40e69b:	mov    ch,0x28
  40e69d:	fsubr  DWORD PTR [ebx+ecx*2+0x7f]
  40e6a1:	add    ebx,DWORD PTR [esi-0xe313c4b]
  40e6a7:	cli    
  40e6a8:	add    eax,0x32a63f10
  40e6ad:	add    al,0x76
  40e6af:	mov    edi,DWORD PTR [edx+0x42]
  40e6b2:	mov    ebp,0xd4e2c37c
  40e6b7:	pop    eax
  40e6b8:	jge    0x40e71a
  40e6ba:	stc    
  40e6bb:	enter  0x27d,0xb9
  40e6bf:	rol    BYTE PTR [eax-0x55ff46d2],0x14
  40e6c6:	ins    DWORD PTR es:[edi],dx
  40e6c7:	bound  ecx,QWORD PTR [ebx+0x41]
  40e6ca:	add    edi,DWORD PTR [edi]
  40e6cc:	jmp    0x40e711
  40e6ce:	ins    BYTE PTR es:[edi],dx
  40e6cf:	sub    BYTE PTR [ebp+0x192d873f],ah
  40e6d5:	popf   
  40e6d6:	jmp    DWORD PTR [edi]
  40e6d8:	sub    edi,DWORD PTR [edx+0x61a91d4b]
  40e6de:	pusha  
  40e6df:	in     eax,0x7e
  40e6e1:	jge    0x40e6f1
  40e6e3:	cmp    DWORD PTR [edi-0x80],edi
  40e6e6:	push   ss
  40e6e7:	cmp    DWORD PTR [ebp+0x14],ebx
  40e6ea:	ins    DWORD PTR es:[edi],dx
  40e6eb:	add    BYTE PTR [esp+eax*1+0xa],dh
  40e6ef:	mulps  xmm5,xmm4
  40e6f2:	or     BYTE PTR [esi+0x2e],ah
  40e6f5:	sahf   
  40e6f6:	or     eax,DWORD PTR [ebx+0xb6e2a2b]
  40e6fc:	push   ds
  40e6fd:	and    al,0x83
  40e6ff:	inc    edi
  40e700:	iret   
  40e701:	clc    
  40e702:	push   eax
  40e703:	ret    
  40e704:	js     0x40e6ad
  40e706:	sti    
  40e707:	push   ecx
  40e708:	js     0x40e690
  40e70a:	mov    edx,0x8d429f01
  40e70f:	rol    BYTE PTR [edi-0x652d70d3],0x41
  40e716:	mov    al,0x44
  40e718:	call   0x8f0f:0x5f32f402
  40e71f:	leave  
  40e720:	pop    edx
  40e721:	push   esp
  40e722:	xor    al,BYTE PTR [edx]
  40e724:	pop    ebx
  40e725:	adc    BYTE PTR [edi+0x415a00ff],cl
  40e72b:	mov    dl,0x57
  40e72d:	pop    edi
  40e72e:	inc    ecx
  40e72f:	mov    ch,bl
  40e731:	(bad)  
  40e732:	fnstenv [ecx+0x0]
  40e735:	push   0xf940e0c2
  40e73a:	cwde   
  40e73b:	ja     0x40e761
  40e73d:	dec    ebx
  40e73e:	stos   DWORD PTR es:[edi],eax
  40e73f:	jp     0x40e740
  40e741:	std    
  40e742:	adc    ebx,DWORD PTR [ebp+0x33]
  40e745:	je     0x40e6e0
  40e747:	push   ds
  40e748:	dec    eax
  40e749:	cmp    DWORD PTR [edx],eax
  40e74b:	hlt    
  40e74c:	sbb    BYTE PTR [ebx+0x4e],0xb1
  40e750:	jp     0x40e781
  40e752:	inc    ecx
  40e753:	mov    al,BYTE PTR [ebp+0x3b05166f]
  40e759:	imul   esi,DWORD PTR [ecx],0xaa1a7501
  40e75f:	(bad)  
  40e761:	aam    0x26
  40e763:	xor    eax,0x880b0086
  40e769:	xchg   edx,eax
  40e76a:	xor    eax,0xfd85d873
  40e76f:	je     0x40e733
  40e771:	inc    eax
  40e772:	sahf   
  40e773:	inc    esp
  40e774:	js     0x40e6f8
  40e776:	xor    BYTE PTR [edi+0x74],al
  40e779:	jl     0x40e71b
  40e77b:	mov    ebx,0x36967a23
  40e780:	jae    0x40e706
  40e782:	mov    dl,0x26
  40e784:	pop    ebx
  40e785:	pop    ecx
  40e786:	(bad)  
  40e788:	call   DWORD PTR [esp+ebp*2+0x73]
  40e78c:	test   DWORD PTR [eax],0x2c564457
  40e792:	xchg   DWORD PTR [ebx],ebx
  40e794:	or     BYTE PTR [ebx],dh
  40e796:	mov    ebp,0x237b4cf0
  40e79b:	lock pop esp
  40e79d:	je     0x40e722
  40e79f:	loope  0x40e750
  40e7a1:	je     0x40e769
  40e7a3:	sbb    edi,DWORD PTR ds:0xfa60bdc0
  40e7a9:	push   ss
  40e7aa:	call   0xb9b4ec01
  40e7af:	inc    eax
  40e7b0:	arpl   WORD PTR [ecx+ecx*4-0x3d],si
  40e7b4:	fdivr  st,st(7)
  40e7b6:	sbb    BYTE PTR [ebx-0xef1b2ac],0x7
  40e7bd:	pop    es
  40e7be:	push   es
  40e7bf:	push   eax
  40e7c0:	and    dl,BYTE PTR [esi+0x41]
  40e7c3:	iret   
  40e7c4:	adc    edx,DWORD PTR [ebx+ecx*1]
  40e7c7:	retf   0x5160
  40e7ca:	fsubr  st,st(4)
  40e7cc:	pusha  
  40e7cd:	adc    al,0xc2
  40e7cf:	add    eax,0x5f04ffc8
  40e7d4:	pop    ss
  40e7d5:	mov    ecx,0x80091b9c
  40e7da:	or     ebx,DWORD PTR [ebx-0x21]
  40e7dd:	or     DWORD PTR [ebp+0x42],ecx
  40e7e0:	mov    ds:0xebae8bf1,eax
  40e7e5:	jl     0x40e7d0
  40e7e7:	sbb    dl,ch
  40e7e9:	jl     0x40e7b9
  40e7eb:	jo     0x40e78e
  40e7ed:	loop   0x40e7ed
  40e7ef:	cmp    eax,0x9d007734
  40e7f4:	lods   eax,DWORD PTR ds:[esi]
  40e7f5:	js     0x40e83c
  40e7f7:	cmp    edi,DWORD PTR [edi+0x6985eb98]
  40e7fd:	call   0x9220:0x3db97fef
  40e804:	mov    edi,0xbb87f0ba
  40e809:	fcmove st,st(0)
  40e80b:	dec    esp
  40e80c:	add    dl,ch
  40e80e:	add    eax,DWORD PTR [ebx]
  40e810:	sti    
  40e811:	cmc    
  40e812:	xor    eax,0x697524de
  40e817:	sbb    BYTE PTR [ebp+0x25545468],cl
  40e81d:	bound  ebp,QWORD PTR [ebx]
  40e81f:	xchg   BYTE PTR [esi-0x52303d1b],ch
  40e825:	pop    esp
  40e826:	jg     0x40e87f
  40e828:	scas   al,BYTE PTR es:[edi]
  40e829:	out    0xa8,al
  40e82b:	fadd   DWORD PTR [edx-0x14]
  40e82e:	add    DWORD PTR [edx],0x2d
  40e831:	mov    dh,0xf6
  40e833:	or     ah,BYTE PTR [edx+ecx*8]
  40e836:	add    DWORD PTR [ebp+0x5d026b00],ebp
  40e83c:	inc    eax
  40e83d:	pusha  
  40e83e:	and    al,BYTE PTR [esi+0x2cc924b7]
  40e844:	ds imul edx,ecx,0x7f613d39
  40e84b:	icebp  
  40e84c:	test   eax,0xaf337eec
  40e851:	loopne 0x40e7d7
  40e853:	imul   eax,DWORD PTR [edx+0x20],0x7f
  40e857:	add    BYTE PTR [esi-0x51],cl
  40e85a:	or     bh,BYTE PTR [ebp-0x110bdb23]
  40e860:	push   ds
  40e861:	lea    edi,[edi-0x47]
  40e864:	mov    edx,0xad206d23
  40e869:	scas   al,BYTE PTR es:[edi]
  40e86a:	or     al,0x6a
  40e86c:	inc    esp
  40e86d:	inc    ecx
  40e86e:	inc    eax
  40e86f:	push   esp
  40e870:	pop    ecx
  40e871:	mov    esi,0xe4e13cd8
  40e876:	pop    ebx
  40e877:	jmp    0xbfceab02
  40e87c:	loope  0x40e8b4
  40e87e:	lea    ebp,[esi-0x54e0c223]
  40e884:	cmp    al,0x3d
  40e886:	fucomip st,st(2)
  40e888:	add    bl,BYTE PTR [esi+0xa]
  40e88b:	bound  eax,QWORD PTR [esi-0x7c]
  40e88e:	(bad)  
  40e890:	fisttp QWORD PTR [edx+ecx*1-0x3540fa12]
  40e897:	add    BYTE PTR [edi-0x75020343],al
  40e89d:	mov    edi,0x7042e92c
  40e8a2:	retf   0xc222
  40e8a5:	scas   eax,DWORD PTR es:[edi]
  40e8a6:	add    al,0x68
  40e8a8:	lods   al,BYTE PTR ds:[esi]
  40e8a9:	and    esi,esp
  40e8ab:	push   esi
  40e8ac:	pop    esi
  40e8ad:	mov    cl,0xc
  40e8af:	xchg   ecx,eax
  40e8b0:	push   esi
  40e8b1:	and    ecx,DWORD PTR ds:0x86aca69
  40e8b7:	mov    ah,0x51
  40e8b9:	cld    
  40e8ba:	or     BYTE PTR [ecx+0xa636000],ah
  40e8c0:	repnz lea ebp,[edi-0x7b8ff8]
  40e8c7:	aaa    
  40e8c8:	sub    DWORD PTR [esi+edi*2+0x2e],ebp
  40e8cc:	in     eax,dx
  40e8cd:	and    BYTE PTR ds:0x3a89a531,bh
  40e8d3:	jge    0x40e8d5
  40e8d5:	adc    eax,0x17246fc0
  40e8da:	call   0xb80f:0x3198fff4
  40e8e1:	lock or eax,DWORD PTR ds:[eax+0x52f4262d]
  40e8e9:	mov    cl,0xf3
  40e8eb:	popa   
  40e8ec:	xor    ah,BYTE PTR [eax+esi*4+0x38]
  40e8f0:	ror    BYTE PTR [edi+esi*2-0x56e1d4ac],0x9c
  40e8f8:	int3   
  40e8f9:	sbb    BYTE PTR [ebx+0x31ed8574],bl
  40e8ff:	push   es
  40e900:	mov    dh,BYTE PTR [ebx-0x5c2d77d4]
  40e906:	and    ecx,DWORD PTR [ecx+edx*1+0x7544ff6e]
  40e90d:	pop    es
  40e90e:	shl    esp,0x75
  40e911:	mov    al,ds:0x85b840e5
  40e916:	or     eax,DWORD PTR ds:[eax-0x74f5c31f]
  40e91d:	imul   esp,DWORD PTR [edx+0x1a],0xffffff85
  40e921:	add    dh,ah
  40e923:	xor    DWORD PTR [edx],ecx
  40e925:	mov    DWORD PTR [esi-0x52a4a9f7],eax
  40e92b:	inc    edx
  40e92c:	or     dl,BYTE PTR [ebp-0x1c]
  40e92f:	jp     0x40e98b
  40e931:	add    DWORD PTR [edx-0x56],0xfffffff3
  40e935:	push   edx
  40e936:	add    DWORD PTR [ebp-0x3c5bcc07],ebx
  40e93c:	std    
  40e93d:	je     0x40e9bb
  40e93f:	adc    DWORD PTR [ecx-0xec2d483],eax
  40e945:	test   DWORD PTR [edi+0x12],ebp
  40e948:	sbb    BYTE PTR [edi],cl
  40e94a:	shl    BYTE PTR [edx],1
  40e94c:	add    esp,DWORD PTR [esi-0x7a]
  40e94f:	scas   al,BYTE PTR es:[edi]
  40e950:	pop    eax
  40e951:	jae    0x40e9d0
  40e953:	leave  
  40e954:	jbe    0x40e966
  40e956:	add    eax,0xc548086b
  40e95b:	icebp  
  40e95c:	cli    
  40e95d:	out    0xb1,eax
  40e95f:	scas   al,BYTE PTR es:[edi]
  40e960:	fs je  0x40e9e0
  40e963:	lods   al,BYTE PTR ds:[esi]
  40e964:	push   ebp
  40e965:	add    DWORD PTR [ebp-0x10],ecx
  40e968:	retf   0x7cfb
  40e96b:	sub    esi,ebp
  40e96d:	jg     0x40e924
  40e96f:	jmp    0x40e946
  40e971:	mov    BYTE PTR [edi+0xb07caa4],al
  40e977:	in     al,dx
  40e978:	jecxz  0x40e97b
  40e97a:	(bad)  
  40e97c:	jno    0x40e9c2
  40e97e:	sar    BYTE PTR [ecx],cl
  40e980:	mov    edi,0x823c4c8
  40e985:	push   ebp
  40e986:	add    BYTE PTR ds:0xcf84deb8,cl
  40e98c:	or     dh,BYTE PTR ss:[ebx]
  40e98f:	(bad)  
  40e990:	loop   0x40e9da
  40e992:	push   ebp
  40e993:	sti    
  40e994:	ss (bad) 
  40e996:	out    0xc4,eax
  40e998:	leave  
  40e999:	ins    BYTE PTR es:[edi],dx
  40e99a:	(bad)  
  40e99b:	cmp    BYTE PTR [esi-0x53748cb9],ah
  40e9a1:	das    
  40e9a2:	(bad)  
  40e9a3:	mov    edi,0x824470ec
  40e9a8:	push   edx
  40e9a9:	dec    eax
  40e9aa:	push   esp
  40e9ab:	or     eax,0x3f84de8f
  40e9b0:	(bad)  
  40e9b1:	repz xor al,BYTE PTR [esi+0x62]
  40e9b5:	dec    eax
  40e9b6:	push   ebp
  40e9b7:	adc    ebx,esi
  40e9b9:	imul   esp,edi,0xffffffb1
  40e9bc:	popa   
  40e9bd:	ins    BYTE PTR es:[edi],dx
  40e9be:	(bad)  
  40e9bf:	mov    al,0xae
  40e9c1:	inc    edi
  40e9c2:	jae    0x40e947
  40e9c4:	lods   al,BYTE PTR ds:[esi]
  40e9c5:	das    
  40e9c6:	dec    BYTE PTR [edi+0x42]
  40e9c9:	and    BYTE PTR [edx-0x3e],bh
  40e9cc:	push   ds
  40e9cd:	cmp    eax,DWORD PTR [edx-0x26]
  40e9d0:	int    0xd
  40e9d2:	data16 mov dl,0x4a
  40e9d5:	mov    dl,0x5b
  40e9d7:	push   ss
  40e9d8:	and    BYTE PTR ds:0x8a020266,cl
  40e9de:	sub    eax,0x76f40b
  40e9e3:	int3   
  40e9e4:	mov    DWORD PTR [esi-0x3d],edi
  40e9e7:	add    DWORD PTR [ecx+eiz*4+0x2b],edx
  40e9eb:	add    BYTE PTR [ebx+0x4a],al
  40e9ee:	pop    esi
  40e9ef:	adc    BYTE PTR [eax+0x5b],ch
  40e9f2:	fucomip st,st(7)
  40e9f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9f5:	sbb    DWORD PTR [ebx-0x3d3b30f7],edi
  40e9fb:	and    DWORD PTR [ebx],ecx
  40e9fd:	ret    
  40e9fe:	sbb    al,0x4
  40ea00:	mov    edx,eax
  40ea02:	enter  0x3412,0xcd
  40ea06:	push   ds
  40ea07:	cld    
  40ea08:	adc    al,BYTE PTR [edi+0x1ff1d3f9]
  40ea0e:	xchg   ebp,eax
  40ea0f:	xor    BYTE PTR gs:[edx],ch
  40ea12:	stc    
  40ea13:	fs test al,0x20
  40ea16:	daa    
  40ea17:	inc    edx
  40ea18:	test   DWORD PTR [edx+0x16],eax
  40ea1b:	jns    0x40e9ca
  40ea1d:	jb     0x40ea3a
  40ea1f:	jnp    0x40ea6b
  40ea21:	push   ds
  40ea22:	imul   edi,DWORD PTR [edi+0x73687981],0xfba6c9db
  40ea2c:	popa   
  40ea2d:	mov    edi,0xc6706553
  40ea32:	and    esp,ebp
  40ea34:	mov    edx,0x126796cd
  40ea39:	jbe    0x40ea34
  40ea3b:	pop    ebx
  40ea3c:	loope  0x40ea5e
  40ea3e:	xor    eax,0xb030a65
  40ea43:	mov    cl,0x98
  40ea45:	(bad)
  40ea48:	mov    DWORD PTR [ecx+0x75],ebx
  40ea4b:	and    eax,0xac7f5736
  40ea50:	add    BYTE PTR ds:0x19d031a6,ch
  40ea56:	outs   dx,DWORD PTR ds:[esi]
  40ea57:	sti    
  40ea58:	das    
  40ea59:	(bad)  
  40ea5a:	sbb    BYTE PTR [eax-0x733298f1],cl
  40ea60:	xchg   esi,eax
  40ea61:	test   DWORD PTR [edi-0x76],eax
  40ea64:	add    al,BYTE PTR [eax+0x78e17e1f]
  40ea6a:	xchg   BYTE PTR [edx],al
  40ea6c:	cmp    DWORD PTR [edi-0x7a],edi
  40ea6f:	div    BYTE PTR [edx+0x42]
  40ea72:	int3   
  40ea73:	(bad)
  40ea77:	hlt    
  40ea78:	into   
  40ea79:	ds dec edx
  40ea7b:	(bad)  
  40ea7c:	(bad)  
  40ea7d:	jmp    0xb3f121c8
  40ea82:	retf   0x1704
  40ea85:	lea    eax,[ecx]
  40ea87:	psubsw mm7,QWORD PTR [esi]
  40ea8a:	jae    0x40eaba
  40ea8c:	cmc    
  40ea8d:	xor    BYTE PTR [ebx+0x20d5f92e],al
  40ea93:	jg     0x40ea62
  40ea95:	mov    cl,0xcc
  40ea97:	dec    esi
  40ea98:	lds    ebx,FWORD PTR [ecx+0x2285f327]
  40ea9e:	and    al,cl
  40eaa0:	jb     0x40ea63
  40eaa2:	arpl   WORD PTR [esi],ax
  40eaa4:	fs leave 
  40eaa6:	arpl   WORD PTR [edx],bx
  40eaa8:	sbb    ebx,ebp
  40eaaa:	xchg   ebx,eax
  40eaab:	cs cmc 
  40eaad:	inc    BYTE PTR [ebx+0x7dcded2e]
  40eab3:	not    BYTE PTR [esi+0x0]
  40eab6:	loop   0x40eabc
  40eab8:	pop    esi
  40eab9:	bound  edi,QWORD PTR [ecx-0x13ffa68e]
  40eabf:	sub    BYTE PTR [eax+eax*1],cl
  40eac2:	sbb    bl,BYTE PTR [esi]
  40eac4:	mov    esp,0x741e5f57
  40eac9:	jmp    0x40eac6
  40eacb:	cdq    
  40eacc:	inc    esi
  40eacd:	adc    ah,bh
  40eacf:	jp     0x40ea8c
  40ead1:	(bad)  
  40ead2:	nop
  40ead3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ead4:	sbb    al,0x9c
  40ead7:	stos   BYTE PTR es:[edi],al
  40ead8:	hlt    
  40ead9:	jne    0x40eb03
  40eadb:	jmp    0x40eb39
  40eadd:	add    BYTE PTR [eax],ch
  40eadf:	ret    
  40eae0:	loopne 0x40eb3e
  40eae2:	pushf  
  40eae3:	add    ah,bh
  40eae5:	add    BYTE PTR [ecx-0x20],bl
  40eae8:	hlt    
  40eae9:	add    BYTE PTR [ecx],bl
  40eaeb:	(bad)  
  40eaec:	enter  0xee00,0x42
  40eaf0:	or     bh,BYTE PTR [eax+0x7ff4a2d0]
  40eaf6:	xchg   esp,eax
  40eaf7:	pop    esi
  40eaf8:	jns    0x40eb00
  40eafa:	fs pop esi
  40eafc:	int    0x45
  40eafe:	rol    BYTE PTR [ebp+eax*4+0x4],0xe4
  40eb03:	rol    BYTE PTR [esi-0x4351e88b],cl
  40eb09:	(bad)  
  40eb0a:	lock mov ds:0x379bc087,al
  40eb10:	repz jne 0x40eace
  40eb13:	iret   
  40eb14:	pop    esi
  40eb15:	adc    BYTE PTR [eax],dl
  40eb17:	stc    
  40eb18:	dec    DWORD PTR [edx-0x7f819600]
  40eb1e:	retf   
  40eb1f:	idiv   ebx
  40eb21:	out    dx,eax
  40eb22:	call   DWORD PTR [eax]
  40eb24:	iret   
  40eb25:	jecxz  0x40eaa8
  40eb27:	adc    DWORD PTR [eax],eax
  40eb29:	hlt    
  40eb2a:	push   es
  40eb2b:	out    dx,eax
  40eb2c:	sti    
  40eb2d:	push   ss
  40eb2e:	and    BYTE PTR [edx-0x5f],0xf3
  40eb32:	jae    0x40eb5b
  40eb34:	mov    ds:0x8386f87e,al
  40eb39:	add    edi,eax
  40eb3b:	popa   
  40eb3c:	lea    eax,[ebx+0x46e0b8c5]
  40eb42:	shl    DWORD PTR [esi+0x2b],0xaa
  40eb46:	jns    0x40eace
  40eb48:	sub    al,0x88
  40eb4a:	jmp    0x9123:0x7450a72f
  40eb51:	shl    edi,0xfd
  40eb54:	out    dx,al
  40eb55:	dec    DWORD PTR [eax-0x15b80779]
  40eb5b:	and    eax,0xb7eb84d7
  40eb60:	mov    edx,0x2b7e7c8c
  40eb65:	rol    DWORD PTR [esi],cl
  40eb67:	into   
  40eb68:	mov    esp,0x41060707
  40eb6d:	fisttp QWORD PTR [edx-0x1842e4b5]
  40eb73:	lods   eax,DWORD PTR ds:[esi]
  40eb74:	std    
  40eb75:	push   0x8cd3fdfe
  40eb7a:	cli    
  40eb7b:	loope  0x40ebf3
  40eb7d:	push   DWORD PTR [edi+0x12b3100]
  40eb83:	sbb    ch,0x62
  40eb86:	mov    esp,DWORD PTR [esi+ecx*8+0x2b]
  40eb8a:	inc    edx
  40eb8b:	inc    esp
  40eb8c:	shr    DWORD PTR [ebx],0xb2
  40eb8f:	add    ch,0x2b
  40eb92:	sldt   WORD PTR [esi-0x5601975d]
  40eb99:	xor    al,0x13
  40eb9b:	fcom   DWORD PTR [eiz*1+0x6ec0d785]
  40eba2:	add    BYTE PTR [di],dh
  40eba5:	scas   al,BYTE PTR es:[edi]
  40eba6:	shl    bh,cl
  40eba8:	sahf   
  40eba9:	repnz inc ecx
  40ebab:	inc    BYTE PTR [ecx-0x4a8cb859]
  40ebb1:	inc    edx
  40ebb2:	ins    BYTE PTR es:[edi],dx
  40ebb3:	fcom   DWORD PTR [ebp+0x68f3bec9]
  40ebb9:	xchg   edi,eax
  40ebba:	in     eax,dx
  40ebbb:	mov    cs,edx
  40ebbd:	sbb    ch,BYTE PTR [ecx+0x4e]
  40ebc0:	popa   
  40ebc1:	ja     0x40ec0b
  40ebc3:	bound  edx,QWORD PTR [eax-0x37]
  40ebc6:	xor    DWORD PTR [ebx+ecx*2+0x60ae198],eax
  40ebcd:	xchg   edi,eax
  40ebce:	mov    BYTE PTR [ebx-0x281de246],0xec
  40ebd5:	sbb    al,0x9f
  40ebd7:	pop    ebx
  40ebd8:	and    DWORD PTR [ebp-0x36df9ddd],esp
  40ebde:	sub    eax,ecx
  40ebe0:	mov    esp,0xf3200b
  40ebe5:	adc    edi,ebx
  40ebe7:	xchg   DWORD PTR [ebx],eax
  40ebe9:	add    edx,0x140a6c08
  40ebef:	jg     0x40ec59
  40ebf1:	or     al,0x87
  40ebf3:	jmp    0x7a8b2e85
  40ebf8:	add    esi,DWORD PTR [ebp+0x1265c902]
  40ebfe:	xchg   BYTE PTR ds:0x361d49f4,cl
  40ec04:	sub    BYTE PTR [esi+0x1d],dh
  40ec07:	sub    BYTE PTR ds:[esi+0x1d],dh
  40ec0b:	sub    BYTE PTR ss:[esi-0x479ee9d6],dl
  40ec12:	sbb    al,0xa1
  40ec14:	out    dx,al
  40ec15:	jge    0x40ebc1
  40ec17:	dec    ecx
  40ec18:	mov    ah,0x44
  40ec1a:	inc    edx
  40ec1b:	mov    DWORD PTR [ecx],edi
  40ec1d:	sbb    al,BYTE PTR [eax-0x1f]
  40ec20:	test   BYTE PTR [edx],ah
  40ec22:	push   ds
  40ec23:	loop   0x40ec85
  40ec25:	sbb    cl,BYTE PTR [esi+0x74]
  40ec28:	xlat   BYTE PTR ds:[ebx]
  40ec29:	sbb    DWORD PTR ds:0x3215dc0b,0x870ce94a
  40ec33:	out    dx,al
  40ec34:	push   edx
  40ec35:	xchg   esp,eax
  40ec36:	dec    edi
  40ec37:	retf   0xc2a9
  40ec3a:	enter  0x416d,0xcf
  40ec3e:	xchg   dh,ch
  40ec40:	dec    edi
  40ec41:	out    0x1c,eax
  40ec43:	hlt    
  40ec44:	push   0x41
  40ec46:	sbb    ah,dh
  40ec48:	jb     0x40ec4a
  40ec4a:	inc    ecx
  40ec4b:	and    bl,ah
  40ec4d:	dec    edx
  40ec4e:	pop    ecx
  40ec4f:	inc    edx
  40ec50:	or     ch,BYTE PTR [ebx]
  40ec52:	mov    al,BYTE PTR [edx+0x60]
  40ec55:	cmc    
  40ec56:	sbb    eax,0x85aa5a84
  40ec5b:	sub    dl,BYTE PTR [edx-0x78bd7464]
  40ec61:	test   BYTE PTR [ecx-0x7e830ae5],bh
  40ec67:	sbb    edi,DWORD PTR [esi-0xf]
  40ec6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec6b:	ss jbe 0x40ec49
  40ec6e:	lds    ebx,FWORD PTR [ebx]
  40ec70:	and    DWORD PTR [ecx+eiz*2+0x66e545c0],0x28
  40ec78:	push   es
  40ec79:	sbb    al,BYTE PTR [edx+0x5b]
  40ec7c:	(bad)  
  40ec7d:	(bad)  
  40ec7e:	call   0x66e274a6
  40ec83:	retf   0xc54d
  40ec86:	pop    ebp
  40ec87:	jmp    0xe903:0x85eb7d
  40ec8e:	clc    
  40ec8f:	enter  0x6ae6,0x5d
  40ec93:	sbb    al,0x7e
  40ec95:	lock es xchg esi,eax
  40ec98:	push   es
  40ec99:	sahf   
  40ec9a:	mov    al,0x93
  40ec9c:	sbb    BYTE PTR [ecx],ch
  40ec9e:	mov    bl,BYTE PTR [ebx]
  40eca0:	jle    0x40ec9b
  40eca2:	fisttp WORD PTR [ebx+0x4b9200f3]
  40eca8:	pusha  
  40eca9:	add    BYTE PTR [eax],cl
  40ecab:	hlt    
  40ecac:	or     edi,edi
  40ecae:	add    BYTE PTR [edx-0xd],ah
  40ecb1:	sbb    DWORD PTR [eax+0x6f],eax
  40ecb4:	(bad)  
  40ecb5:	jbe    0x40ecc7
  40ecb7:	pop    edi
  40ecb8:	and    DWORD PTR [edi],eax
  40ecba:	cmp    esp,DWORD PTR [edx]
  40ecbc:	pshufw mm0,QWORD PTR [edx],0x7c
  40ecc0:	xchg   BYTE PTR [eax],bh
  40ecc2:	leave  
  40ecc3:	inc    ecx
  40ecc4:	enter  0x45ff,0x2a
  40ecc8:	test   edi,edi
  40ecca:	push   edx
  40eccc:	int    0xdf
  40ecce:	push   ebx
  40eccf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecd0:	push   edi
  40ecd1:	pop    ebp
  40ecd2:	push   edi
  40ecd3:	lods   al,BYTE PTR ds:[esi]
  40ecd4:	jle    0x40ecca
  40ecd6:	jne    0x40ed0c
  40ecd8:	mov    ds:0x14880c7e,al
  40ecdd:	jl     0x40ecf1
  40ecdf:	out    dx,eax
  40ece0:	ds jg  0x40ecbb
  40ece3:	add    eax,0x1b75f33f
  40ece8:	ss cld 
  40ecea:	call   DWORD PTR [edx-0x783c80b9]
  40ecf0:	fwait
  40ecf1:	hlt    
  40ecf2:	(bad)  
  40ecf3:	call   0xe8c6e8be
  40ecf8:	sti    
  40ecf9:	cs inc edi
  40ecfb:	pop    edx
  40ecfc:	dec    edx
  40ecfd:	xor    eax,DWORD PTR [ebp-0x17e905d1]
  40ed03:	mov    eax,0x54fff489
  40ed08:	jbe    0x40ec98
  40ed0a:	not    BYTE PTR [ebx-0x7d00a2f0]
  40ed10:	xor    bh,BYTE PTR [edi-0x3d]
  40ed13:	add    al,ch
  40ed15:	clc    
  40ed16:	or     ebp,eax
  40ed18:	xchg   edx,eax
  40ed19:	jnp    0x40ed0f
  40ed1b:	push   DWORD PTR [esp+eax*4]
  40ed1e:	loopne 0x40ed22
  40ed20:	xchg   al,bh
  40ed22:	inc    edi
  40ed23:	pop    esi
  40ed24:	cmp    BYTE PTR [eax-0x37],dl
  40ed27:	sar    DWORD PTR [esi+0x29],0xb3
  40ed2b:	mov    bl,BYTE PTR [edx-0x26aa48c7]
  40ed31:	nop
  40ed32:	rol    DWORD PTR [edi],1
  40ed34:	or     eax,0x71f07f94
  40ed39:	pop    ss
  40ed3a:	mov    BYTE PTR [ecx],dl
  40ed3c:	(bad)  
  40ed3d:	sub    eax,DWORD PTR [ecx+0x112813d7]
  40ed43:	(bad)  
  40ed44:	ret    0xa2b
  40ed47:	mov    ebx,ecx
  40ed49:	jg     0x40ecd8
  40ed4b:	inc    esp
  40ed4c:	dec    edx
  40ed4d:	sub    al,0xc
  40ed4f:	add    BYTE PTR [esi-0x7800b856],al
  40ed55:	sub    ecx,DWORD PTR [eax]
  40ed57:	sub    DWORD PTR ds:0x86a0082c,0xd38b0fb0
  40ed61:	das    
  40ed62:	and    WORD PTR [edx+0x49],ax
  40ed66:	push   ebx
  40ed67:	add    DWORD PTR [esi-0x68],0x23
  40ed6b:	call   DWORD PTR [ebx+0x1058127]
  40ed71:	xchg   edi,eax
  40ed72:	dec    DWORD PTR [edx+eax*4+0x4fb893]
  40ed79:	icebp  
  40ed7a:	push   ss
  40ed7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed7c:	adc    al,BYTE PTR [esi+0x2b]
  40ed7f:	cmp    DWORD PTR [edi+0x4a9ae35e],0xffffffd9
  40ed86:	xor    al,0x4d
  40ed88:	jl     0x40ed51
  40ed8a:	sub    al,0x50
  40ed8c:	mov    al,BYTE PTR [eax+0xf65471c]
  40ed92:	and    al,dl
  40ed94:	mov    al,cl
  40ed96:	add    al,0x9
  40ed98:	cmp    DWORD PTR [esi+0x4bbeac42],0x7d
  40ed9f:	mov    edx,0x33428941
  40eda4:	mov    bh,0x98
  40eda6:	mov    cs,ebp
  40eda8:	paddw  mm2,QWORD PTR [edx]
  40edab:	(bad)  
  40edac:	clc    
  40edad:	adc    DWORD PTR [ecx+eiz*1],esi
  40edb0:	add    al,0xd
  40edb2:	sbb    ah,BYTE PTR [ebx+0x46]
  40edb5:	jns    0x40edfa
  40edb7:	loope  0x40edbc
  40edb9:	pop    es
  40edba:	sbb    edx,esp
  40edbc:	add    esp,DWORD PTR [esi]
  40edbe:	inc    edx
  40edbf:	fcom   QWORD PTR [ebx]
  40edc1:	adc    ecx,DWORD PTR [ecx+0x5476be2]
  40edc7:	inc    ebp
  40edc8:	pop    esi
  40edc9:	add    eax,0x4927b602
  40edce:	mov    cs,WORD PTR ds:0x58e40f4
  40edd4:	hlt    
  40edd5:	rcr    BYTE PTR [ecx],1
  40edd7:	cld    
  40edd8:	pop    esi
  40edd9:	call   0xbe29:0xc3f0ea
  40ede0:	and    ebx,ebx
  40ede2:	ss (bad) 
  40ede4:	lods   al,BYTE PTR ds:[esi]
  40ede5:	pop    esi
  40ede6:	pop    esp
  40ede7:	add    eax,DWORD PTR [edi+0x2347fc49]
  40eded:	pop    es
  40edee:	jle    0x40ee32
  40edf0:	sbb    BYTE PTR [edx],al
  40edf2:	add    eax,0x5bbdfd0a
  40edf7:	add    al,0xea
  40edf9:	add    ebx,DWORD PTR [eax-0x34]
  40edfc:	mov    cl,0x44
  40edfe:	fistp  QWORD PTR ds:0xabb795e4
  40ee04:	jmp    0xd419:0x4b49a5bd
  40ee0b:	cmp    al,0xb3
  40ee0d:	and    ebx,0x71466040
  40ee13:	mov    al,ds:0x4857ea0a
  40ee18:	mov    esp,0x50499ca9
  40ee1d:	jg     0x7fbfe15
  40ee23:	and    ecx,DWORD PTR [edx+ebp*2]
  40ee26:	inc    esp
  40ee27:	imul   ebp,DWORD PTR [edx+ebp*8+0x55],0xa3b8819f
  40ee2f:	leave  
  40ee30:	pop    ecx
  40ee31:	jmp    0x40ee76
  40ee33:	add    eax,0x8edb7188
  40ee38:	add    BYTE PTR [esi+0x4e],ch
  40ee3b:	fs push cs
  40ee3d:	data16 jno 0x40edd8
  40ee40:	sbb    BYTE PTR [ecx-0x35bc7b00],ch
  40ee46:	mov    ecx,0xe12e93ba
  40ee4b:	sbb    esp,DWORD PTR [eax]
  40ee4d:	xor    BYTE PTR ds:0x303818ab,ch
  40ee53:	sub    bl,cl
  40ee55:	push   es
  40ee56:	stc    
  40ee57:	mov    DWORD PTR [ebx+0xa],0x7e18d26a
  40ee5e:	repz retf 0x2e93
  40ee62:	in     eax,0xc2
  40ee64:	cs jb  0x40ee62
  40ee67:	inc    ebp
  40ee68:	sbb    BYTE PTR [esi+ecx*1+0x2e],al
  40ee6c:	add    bl,BYTE PTR fs:[edi-0x131d063]
  40ee73:	(bad)  
  40ee74:	std    
  40ee75:	push   cs
  40ee76:	out    dx,eax
  40ee77:	test   DWORD PTR [edi+ecx*1],eax
  40ee7a:	jmp    0xed6f8a85
  40ee7f:	test   DWORD PTR [ebp+0x2c4a1a0e],ecx
  40ee85:	and    al,0x6a
  40ee87:	cmp    eax,0x32e37e18
  40ee8c:	xchg   ebx,eax
  40ee8d:	cs add bl,bl
  40ee90:	jbe    0x40eeb0
  40ee92:	sbb    ch,0x3
  40ee95:	hlt    
  40ee96:	push   ebp
  40ee97:	and    ch,BYTE PTR [edi]
  40ee99:	or     cl,BYTE PTR [ebp-0x3f72bb97]
  40ee9f:	mov    ebx,DWORD PTR [edx]
  40eea1:	in     al,dx
  40eea2:	js     0x40ee90
  40eea4:	jbe    0x40ee9a
  40eea6:	test   DWORD PTR [eax],eax
  40eea8:	out    dx,eax
  40eea9:	out    dx,eax
  40eeaa:	add    BYTE PTR [esi+0x0],dl
  40eead:	lock daa 
  40eeaf:	or     al,0x6f
  40eeb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeb2:	fcmovnb st,st(3)
  40eeb4:	add    BYTE PTR [edi+0x55],dh
  40eeb7:	ret    0x436b
  40eeba:	xchg   DWORD PTR [ebx+ecx*2+0x3f],edi
  40eebe:	or     dl,BYTE PTR [esi-0xc]
  40eec1:	jae    0x40ef41
  40eec3:	add    al,0x7c
  40eec5:	jle    0x40eea7
  40eec7:	sub    al,0xec
  40eec9:	jne    0x40eebf
  40eecb:	jne    0x40ef00
  40eecd:	jbe    0x40ef46
  40eecf:	and    al,0x57
  40eed1:	jbe    0x40eef1
  40eed3:	js     0x40ef32
  40eed5:	add    esi,esp
  40eed7:	mov    bh,BYTE PTR [edi-0x38]
  40eeda:	dec    ebp
  40eedb:	add    DWORD PTR [edx-0x681b887d],ebp
  40eee1:	cmp    edi,eax
  40eee3:	inc    DWORD PTR [eax+0x2474b3c0]
  40eee9:	int    0xf4
  40eeeb:	je     0x40ef38
  40eeed:	inc    edi
  40eeee:	pop    edx
  40eeef:	call   0x357199
  40eef4:	and    DWORD PTR [ecx-0x32e3fff9],eax
  40eefa:	xor    cl,0x18
  40eefd:	retf   0x85fb
  40ef00:	leave  
  40ef01:	icebp  
  40ef02:	xor    ecx,DWORD PTR [ebx+0x4019c2e2]
  40ef08:	xchg   BYTE PTR [ecx],ch
  40ef0a:	(bad)  
  40ef0b:	inc    BYTE PTR [eax]
  40ef0d:	shr    DWORD PTR [ebp+0x6],1
  40ef10:	call   DWORD PTR [edx+0x45]
  40ef13:	(bad)  
  40ef14:	(bad)  
  40ef15:	aad    0x93
  40ef17:	push   esi
  40ef18:	(bad)  
  40ef19:	jo     0x40eeeb
  40ef1b:	cmp    ecx,DWORD PTR [edx+0x3b0275ce]
  40ef21:	sti    
  40ef22:	dec    esp
  40ef23:	add    eax,0x4c30ae02
  40ef28:	(bad)  
  40ef29:	cdq    
  40ef2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef2b:	dec    esi
  40ef2c:	jae    0x40efa7
  40ef2e:	jbe    0x40ef3a
  40ef30:	aas    
  40ef31:	ss xchg esp,eax
  40ef33:	or     bh,bh
  40ef35:	cli    
  40ef36:	jmp    ebx
  40ef38:	mov    WORD PTR [edx-0x3e1841cd],es
  40ef3e:	call   0x2b77ed92
  40ef43:	add    DWORD PTR gs:[ebx+ebp*2+0x69bd5daf],edx
  40ef4b:	or     al,BYTE PTR [eax]
  40ef4d:	add    eax,0x86041408
  40ef52:	mov    eax,0x640d56b9
  40ef57:	xor    eax,0xffffffb2
  40ef5a:	adc    al,BYTE PTR [ebp-0x380651c4]
  40ef60:	inc    DWORD PTR [ecx+eiz*2]
  40ef63:	dec    edi
  40ef64:	je     0x40eef4
  40ef66:	xor    al,0xda
  40ef68:	and    esi,DWORD PTR [esi+0x2c]
  40ef6b:	aaa    
  40ef6c:	mov    ch,BYTE PTR [esi]
  40ef6e:	inc    ebp
  40ef6f:	sbb    bh,bh
  40ef71:	add    BYTE PTR [ecx],dh
  40ef73:	xchg   ecx,eax
  40ef74:	push   esi
  40ef75:	mov    WORD PTR [edx-0xc],ss
  40ef78:	push   cs
  40ef79:	call   0xfe905911
  40ef7e:	or     ch,BYTE PTR [edx+ebx*8+0x12]
  40ef82:	std    
  40ef83:	inc    edx
  40ef84:	jecxz  0x40ef3c
  40ef86:	loopne 0x40ef16
  40ef88:	or     eax,0x31fd84f0
  40ef8d:	ins    BYTE PTR es:[edi],dx
  40ef8e:	rol    DWORD PTR [eax],1
  40ef90:	lds    ebx,FWORD PTR [edx+0x19]
  40ef93:	inc    esp
  40ef94:	fadd   DWORD PTR ds:0xba150274
  40ef9a:	pop    esp
  40ef9b:	add    dh,ah
  40ef9d:	add    ebx,DWORD PTR [eax+0x15]
  40efa0:	fild   WORD PTR [ebx-0x7f1e7d69]
  40efa6:	loope  0x40ef3c
  40efa8:	ss pop ss
  40efaa:	iret   
  40efab:	push   ecx
  40efac:	scas   eax,DWORD PTR es:[edi]
  40efad:	mov    dl,0xa
  40efaf:	add    eax,DWORD PTR [esp+edi*8]
  40efb2:	js     0x40ef81
  40efb4:	int    0xb1
  40efb6:	add    al,0x15
  40efb8:	ret    0x8ecf
  40efbb:	shl    DWORD PTR [edx+edx*2-0x9b3e15],0xf0
  40efc3:	cmp    al,0xa2
  40efc5:	lds    ebx,FWORD PTR [edx+esi*8+0x3ac6bd5]
  40efcc:	outs   dx,DWORD PTR ds:[esi]
  40efcd:	out    dx,eax
  40efce:	ret    
  40efcf:	(bad)  
  40efd0:	test   eax,0xca0b025a
  40efd5:	icebp  
  40efd6:	add    BYTE PTR [eax+0x4cdf5cd],dl
  40efdc:	adc    eax,0xc17ed002
  40efe1:	sub    al,0x52
  40efe3:	mov    ds:0x98ff2cc1,eax
  40efe8:	ds mov ecx,0xbd289ecc
  40efee:	push   ds
  40efef:	cmp    BYTE PTR [esp+edx*8-0x76c3680],cl
  40eff6:	mov    BYTE PTR [ebp+0x53b59242],cl
  40effc:	sub    cl,BYTE PTR [ebx]
  40effe:	pop    ebx
  40efff:	dec    ebx
  40f000:	adc    al,0xf4
  40f002:	mov    edx,0xf5819f3a
  40f007:	(bad)  
  40f008:	call   DWORD PTR [edi+0x37]
  40f00b:	jo     0x40f006
  40f00d:	jg     0x40efe8
  40f00f:	jg     0x40efde
  40f011:	or     al,0x5c
  40f013:	adc    al,BYTE PTR ds:0x4a606a6d
  40f019:	jnp    0x40efff
  40f01b:	mov    cs,ebp
  40f01d:	enter  0xacc2,0xc5
  40f021:	pop    edx
  40f022:	outs   dx,BYTE PTR ds:[esi]
  40f023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f024:	mov    edi,0x3bb6ecf0
  40f029:	or     eax,0xf4153fb0
  40f02e:	cmp    BYTE PTR [edi+eax*8+0x5a],0x6e
  40f033:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f034:	mov    edi,0x3856ecf0
  40f039:	or     eax,0x13df0050
  40f03e:	hlt    
  40f03f:	ins    DWORD PTR es:[edi],dx
  40f040:	mov    bl,0x8f
  40f042:	or     esp,ecx
  40f044:	test   BYTE PTR [ecx+0x3cf34238],al
  40f04a:	retf   0x8649
  40f04d:	retf   0x9a09
  40f050:	test   DWORD PTR [edi-0x26251434],edi
  40f056:	ins    BYTE PTR es:[edi],dx
  40f057:	ins    BYTE PTR es:[edi],dx
  40f058:	retf   0x28e
  40f05b:	gs jnp 0x40efec
  40f05e:	push   cs
  40f05f:	jns    0x40efe6
  40f061:	daa    
  40f062:	or     ebx,edi
  40f064:	lds    esi,FWORD PTR [ebp+0x4f]
  40f067:	sub    dh,cl
  40f069:	enter  0x6ae6,0xae
  40f06d:	inc    edi
  40f06e:	xchg   DWORD PTR [ecx+edi*4-0x548a6ed],ecx
  40f075:	mov    es,WORD PTR [edx]
  40f077:	add    BYTE PTR [edx+0x4a],bh
  40f07a:	or     al,0x8b
  40f07c:	and    bh,BYTE PTR [edi+eax*4]
  40f07f:	and    bh,bl
  40f081:	rol    BYTE PTR [edx-0x6c908b3],cl
  40f087:	(bad)  
  40f089:	imul   esi,ebx,0xffffffff
  40f08c:	out    dx,eax
  40f08d:	(bad)  
  40f08e:	dec    esi
  40f08f:	adc    BYTE PTR [edi+ebx*4+0x9],bl
  40f093:	mov    DWORD PTR [edx+0x3405e072],esp
  40f099:	add    al,0xc
  40f09b:	mov    esi,edi
  40f09d:	mov    esi,0x9f00f476
  40f0a2:	(bad)  
  40f0a3:	aad    0x74
  40f0a5:	mov    ebx,0xfe3bcdc6
  40f0aa:	out    dx,al
  40f0ab:	dec    DWORD PTR [ecx+0x145d359f]
  40f0b1:	jae    0x40f0c6
  40f0b3:	xor    al,0x3b
  40f0b5:	fsubp  st(5),st
  40f0b7:	test   DWORD PTR [ebx+0x40f46607],0xeb0bd4f6
  40f0c1:	push   0xffffffd1
  40f0c3:	xchg   BYTE PTR [ebp+0x67],bh
  40f0c6:	(bad)  
  40f0c7:	cli    
  40f0c8:	call   0x4b3249
  40f0cd:	aam    0x77
  40f0cf:	or     BYTE PTR [ebp-0x45],0xc6
  40f0d3:	jle    0x40f0e1
  40f0d5:	stos   BYTE PTR es:[edi],al
  40f0d6:	cmp    eax,DWORD PTR [ebp+0xa3f2f04]
  40f0dc:	call   0x356fe8
  40f0e1:	mov    ds:0x484047f,eax
  40f0e6:	aas    
  40f0e7:	or     al,BYTE PTR [eax]
  40f0e9:	mov    dl,0x7a
  40f0eb:	ja     0x40f107
  40f0ed:	fadd   st(5),st
  40f0ef:	int3   
  40f0f0:	call   0xfe9d4c7b
  40f0f5:	or     DWORD PTR [eax+0x4b0dfba4],esp
  40f0fb:	xchg   BYTE PTR [eax],cl
  40f0fd:	nop    DWORD PTR [ecx-0x7c]
  40f101:	(bad)  
  40f102:	sbb    esi,DWORD PTR [esp+ecx*4+0x0]
  40f106:	xchg   BYTE PTR [ecx],ch
  40f108:	or     dh,dh
  40f10a:	dec    ebx
  40f10b:	sbb    DWORD PTR [edi],ecx
  40f10d:	je     0x40f177
  40f10f:	nop
  40f110:	sar    ebx,0xfd
  40f113:	loop   0x40f194
  40f115:	(bad)  
  40f116:	cli    
  40f117:	sbb    al,0x80
  40f119:	cmp    BYTE PTR [esi+0x29],0xc4
  40f11d:	pop    esi
  40f11e:	or     eax,0x9bfea619
  40f123:	push   ecx
  40f124:	clc    
  40f125:	aas    
  40f126:	xchg   BYTE PTR [esi-0x7cb82b2],bl
  40f12c:	cmp    DWORD PTR [edx],esi
  40f12e:	cdq    
  40f12f:	popf   
  40f130:	dec    esi
  40f131:	jge    0x40f1ab
  40f133:	lahf   
  40f134:	add    dh,BYTE PTR [edi]
  40f136:	push   es
  40f137:	mov    dl,0x2e
  40f139:	je     0x40f0c9
  40f13b:	fwait
  40f13c:	or     BYTE PTR gs:[esi],al
  40f13f:	ret    
  40f140:	or     dh,BYTE PTR [edi-0x78]
  40f143:	pop    ebp
  40f144:	mov    bl,0x3a
  40f146:	outs   dx,BYTE PTR ds:[esi]
  40f147:	and    BYTE PTR [edx+0x2a],ah
  40f14a:	inc    esp
  40f14b:	xchg   edi,eax
  40f14c:	adc    dh,BYTE PTR [edx]
  40f14e:	or     ecx,esp
  40f150:	pop    esp
  40f151:	test   BYTE PTR [esp+esi*8],dh
  40f154:	jecxz  0x40f0df
  40f156:	jp     0x40f18d
  40f158:	mov    ?,eax
  40f15a:	iretw  
  40f15c:	(bad)  
  40f15d:	jg     0x40f18e
  40f15f:	adc    ecx,DWORD PTR [eax-0xc2f7508]
  40f165:	inc    edi
  40f166:	mov    esp,0x3a6bd2
  40f16b:	and    BYTE PTR [ebx-0x6d],al
  40f16e:	pop    es
  40f16f:	add    eax,DWORD PTR [ebx]
  40f171:	xchg   esp,eax
  40f172:	or     esi,DWORD PTR [esi+0x696bb379]
  40f178:	add    eax,DWORD PTR ds:0xb146cb57
  40f17e:	add    ecx,DWORD PTR ds:0x4a570988
  40f184:	push   cs
  40f185:	mov    ebx,0x5f4181c0
  40f18a:	pop    es
  40f18b:	loope  0x40f19e
  40f18d:	in     eax,dx
  40f18e:	mov    al,BYTE PTR [edx+0xe]
  40f191:	xor    eax,0x9ffb2cb6
  40f196:	repz leave 
  40f198:	mov    esp,0x110c582e
  40f19d:	fidivr DWORD PTR [ecx+edi*8]
  40f1a0:	adc    DWORD PTR [ebp-0x36ee367e],esi
  40f1a6:	imul   edx,DWORD PTR [edx-0x43],0x3ead82b5
  40f1ad:	pusha  
  40f1ae:	loopne 0x40f141
  40f1b0:	inc    edx
  40f1b1:	xor    BYTE PTR [esi+0x1d6114fc],ch
  40f1b7:	xchg   BYTE PTR [edi-0x4426f403],bh
  40f1bd:	es pop eax
  40f1bf:	push   cs
  40f1c0:	ja     0x40f23f
  40f1c2:	sbb    al,BYTE PTR [ecx+eax*2+0x60]
  40f1c6:	inc    esp
  40f1c7:	imul   edx,DWORD PTR [ecx],0xc28989e2
  40f1cd:	push   0x23
  40f1cf:	add    dl,dl
  40f1d1:	cmp    al,0x61
  40f1d3:	pop    esp
  40f1d4:	jle    0x40f164
  40f1d6:	out    dx,al
  40f1d7:	or     DWORD PTR [esi+0x3f],0xffffffc4
  40f1db:	or     eax,esi
  40f1dd:	mov    ebx,0x47c57a6
  40f1e2:	mov    al,0x5e
  40f1e4:	ins    BYTE PTR es:[edi],dx
  40f1e5:	add    al,0xb
  40f1e7:	out    0x4,al
  40f1e9:	mov    cl,0xa
  40f1eb:	jmp    0x7453ae75
  40f1f0:	cmp    eax,0x70228a42
  40f1f5:	xchg   esi,eax
  40f1f6:	or     eax,0x7d63ac69
  40f1fb:	not    BYTE PTR [edx]
  40f1fd:	mov    ?,esi
  40f1ff:	adc    cl,BYTE PTR [ecx+0x526903bc]
  40f205:	xor    DWORD PTR [esi-0x1a],edi
  40f208:	add    eax,0x866d020a
  40f20d:	ret    0xf4f1
  40f210:	mov    bl,0x45
  40f212:	dec    ebx
  40f213:	and    ch,BYTE PTR [ebx+edx*4]
  40f216:	loopne 0x40f27a
  40f218:	xchg   ebx,eax
  40f219:	pop    esp
  40f21a:	rol    dl,cl
  40f21c:	jb     0x40f268
  40f21e:	adc    edi,DWORD PTR [edi+esi*4]
  40f221:	push   ebx
  40f222:	shr    DWORD PTR [ebx+esi*8+0xf],0xe0
  40f227:	jmp    0x40f1ed
  40f229:	mov    BYTE PTR [edx-0xe6b260f],cl
  40f22f:	lahf   
  40f230:	inc    ebp
  40f231:	inc    edx
  40f232:	jle    0x40f218
  40f234:	add    dl,dl
  40f236:	dec    ebx
  40f237:	lock sbb esp,DWORD PTR [esi]
  40f23a:	dec    esp
  40f23b:	lock adc al,0x87
  40f23e:	cmovbe eax,DWORD PTR [ebp+0x1c1ff10f]
  40f245:	into   
  40f246:	mov    esp,0x3c017145
  40f24b:	test   ebp,esp
  40f24d:	test   DWORD PTR [edx+0xa],eax
  40f250:	push   ecx
  40f251:	dec    edi
  40f252:	shl    ebx,1
  40f254:	pop    esi
  40f255:	push   es
  40f256:	sar    BYTE PTR [esi+0x13],1
  40f259:	leave  
  40f25a:	in     al,dx
  40f25b:	jge    0x40f240
  40f25d:	xchg   esi,eax
  40f25e:	add    ah,BYTE PTR [ebx+0x0]
  40f261:	jmp    0x40f263
  40f263:	xor    al,0x0
  40f265:	fistp  WORD PTR [edx+0x77eaff0e]
  40f26b:	add    bl,0xc7
  40f26e:	retf   
  40f26f:	out    dx,eax
  40f270:	jmp    DWORD PTR [eax-0x47]
  40f273:	add    eax,0x826bda8b
  40f278:	add    al,0x8e
  40f27a:	(bad)  
  40f27b:	mov    bl,0x74
  40f27d:	stc    
  40f27e:	jbe    0x40f2ce
  40f280:	clc    
  40f281:	je     0x40f262
  40f283:	test   DWORD PTR [edi+0x76],0x988beff7
  40f28a:	fwait
  40f28b:	cmp    al,0xff
  40f28d:	lock jbe 0x40f210
  40f290:	inc    ebp
  40f291:	out    0x9a,eax
  40f293:	push   es
  40f294:	mov    ebp,DWORD PTR [edx+0x3e806e]
  40f29a:	(bad)  
  40f29b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f29c:	mov    ah,0xff
  40f29e:	rol    dl,1
  40f2a0:	retf   
  40f2a1:	jmp    DWORD PTR [eax-0x28]
  40f2a4:	push   eax
  40f2a5:	leave  
  40f2a6:	fsubr  st(0),st
  40f2a8:	sub    ah,0x1c
  40f2ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2ac:	inc    DWORD PTR [edx+0x52f36e4a]
  40f2b2:	pop    ecx
  40f2b3:	mov    ecx,0x43c983f9
  40f2b8:	test   DWORD PTR [edi+eiz*2],ebx
  40f2bb:	fld    QWORD PTR [edx+0x56bc1345]
  40f2c1:	hlt    
  40f2c2:	inc    esp
  40f2c3:	add    BYTE PTR [ebx+eax*4],0x1a
  40f2c7:	inc    ebx
  40f2c8:	or     al,BYTE PTR [eax]
  40f2ca:	pusha  
  40f2cb:	mov    esi,0x63d6830b
  40f2d0:	jle    0x40f2dc
  40f2d2:	in     al,dx
  40f2d3:	ins    BYTE PTR es:[edi],dx
  40f2d4:	add    dh,BYTE PTR [edx+0x60]
  40f2d7:	ret    0xdf2
  40f2da:	xchg   al,dh
  40f2dc:	add    DWORD PTR [ebx+0x44811b46],eax
  40f2e2:	cmp    al,BYTE PTR [ecx+ecx*2+0x71]
  40f2e6:	sub    al,BYTE PTR [ecx+ecx*2+0xe]
  40f2ea:	add    eax,0x8600078a
  40f2ef:	lock xchg BYTE PTR [edi],al
  40f2f2:	or     esp,ecx
  40f2f4:	or     DWORD PTR [ebx+0x4c4080f],eax
  40f2fa:	add    eax,0x752932
  40f2ff:	mov    ds:0x7b8838a4,al
  40f304:	inc    ebp
  40f305:	bound  edi,QWORD PTR [ecx+eax*4]
  40f308:	pop    eax
  40f309:	push   cs
  40f30a:	sub    edi,0xfffffff8
  40f30d:	ret    
  40f30e:	adc    BYTE PTR ds:0x83720212,al
  40f314:	pushf  
  40f315:	inc    ebp
  40f316:	or     al,0x58
  40f318:	sub    BYTE PTR [ebp+0x433484c6],cl
  40f31e:	jno    0x40f2c9
  40f320:	mov    ds:0xf3de2a37,eax
  40f325:	daa    
  40f326:	outs   dx,WORD PTR ds:[esi]
  40f328:	clc    
  40f329:	rcl    BYTE PTR ds:0x4689e275,cl
  40f32f:	mov    al,ds:0x5410303
  40f334:	mov    cl,0xc
  40f336:	add    ax,0xa421
  40f33a:	jae    0x40f2cc
  40f33c:	scas   al,BYTE PTR es:[edi]
  40f33d:	dec    ebp
  40f33e:	add    dl,bh
  40f340:	and    al,0x8d
  40f342:	mov    BYTE PTR [eax+eax*1+0x1507145],0x45
  40f34a:	je     0x40f2ce
  40f34c:	cwde   
  40f34d:	jmp    0x37e1784d
  40f352:	sub    bh,BYTE PTR [ebx-0x3d8092be]
  40f358:	or     ah,BYTE PTR [edi+0x0]
  40f35b:	sti    
  40f35c:	inc    esi
  40f35d:	loope  0x40f362
  40f35f:	xchg   bl,dh
  40f361:	pop    eax
  40f362:	pop    esp
  40f363:	add    BYTE PTR [ebx-0x34],bh
  40f366:	dec    esp
  40f367:	push   ebx
  40f368:	add    eax,0x30fbe03
  40f36d:	jmp    0xbbca:0x254fdb6
  40f374:	xchg   edx,eax
  40f375:	and    cl,0xc3
  40f378:	sbb    al,0x48
  40f37a:	adc    al,0xd9
  40f37c:	or     eax,0x905c20ba
  40f381:	or     DWORD PTR ds:0x783d0c53,eax
  40f387:	mov    ecx,0x74edbbf9
  40f38c:	add    al,BYTE PTR [ebx]
  40f38e:	jbe    0x40f37b
  40f390:	loopne 0x40f319
  40f392:	stc    
  40f393:	jle    0x40f3cf
  40f395:	push   ss
  40f396:	popa   
  40f397:	dec    edx
  40f398:	xchg   DWORD PTR [ebx+0x5fc5056],edi
  40f39e:	retf   
  40f39f:	ror    DWORD PTR es:0xa427ec5,0xd9
  40f3a7:	add    ch,bh
  40f3a9:	xchg   ecx,ecx
  40f3ab:	jle    0x40f418
  40f3ad:	sbb    dl,BYTE PTR [eax+0x610da091]
  40f3b3:	cmp    ebx,DWORD PTR [eax-0x4150b493]
  40f3b9:	add    DWORD PTR [edi],edi
  40f3bb:	jg     0x40f35a
  40f3bd:	ror    DWORD PTR [ebp-0x2f8b2b09],0x2e
  40f3c4:	rcl    BYTE PTR [ecx-0x74],1
  40f3c7:	jl     0x40f3c9
  40f3c9:	rcl    BYTE PTR [esi],cl
  40f3cb:	jnp    0x40f37d
  40f3cd:	jno    0x40f41a
  40f3cf:	or     dl,BYTE PTR [esi+eax*4]
  40f3d2:	cmp    eax,0x4285428c
  40f3d7:	or     dh,BYTE PTR [edx+0x46]
  40f3da:	adc    eax,0xbe4da480
  40f3df:	push   cs
  40f3e0:	popa   
  40f3e1:	sar    BYTE PTR ds:0xdd4a4cc,0x83
  40f3e8:	lods   al,BYTE PTR ds:[esi]
  40f3e9:	sar    DWORD PTR [eax-0x58d1ad40],1
  40f3ef:	xchg   DWORD PTR [ecx],esi
  40f3f1:	gs xchg esi,eax
  40f3f3:	adc    edi,eax
  40f3f5:	add    BYTE PTR ds:0xa47f9b02,dl
  40f3fb:	xchg   DWORD PTR [ecx],esp
  40f3fd:	xchg   BYTE PTR [ebp+eax*1+0x3434a6a],dl
  40f404:	push   esi
  40f405:	and    BYTE PTR [ebp+ecx*4-0x1fe031d7],0xe5
  40f40d:	aas    
  40f40e:	xchg   bl,dh
  40f410:	call   0x695f0030
  40f415:	ror    DWORD PTR [edx+ecx*1+0x74],cl
  40f419:	xchg   BYTE PTR [edx-0x7b],cl
  40f41c:	sub    eax,0x5c8544cd
  40f421:	pop    esi
  40f422:	mov    edx,0x8f5ad94d
  40f427:	mov    ch,0xc6
  40f429:	push   edi
  40f42a:	ror    edx,0x35
  40f42d:	add    ah,dh
  40f42f:	mov    edi,0xb98ab175
  40f434:	push   ebp
  40f435:	mov    ch,0xbc
  40f437:	inc    esp
  40f438:	pusha  
  40f439:	leave  
  40f43a:	frstor [esi-0x7c451a7f]
  40f440:	mov    dl,BYTE PTR [edi+edx*8]
  40f443:	or     edi,DWORD PTR [eax-0x1f]
  40f446:	pop    ebx
  40f447:	bound  edx,QWORD PTR [edx+0x0]
  40f44a:	add    DWORD PTR [edi-0x725f84f9],0x36d8ec4e
  40f454:	jg     0x40f49b
  40f456:	fisttp WORD PTR [ebx+0x74b77b37]
  40f45c:	repnz jmp FWORD PTR [eax-0x500f8abb]
  40f463:	sti    
  40f464:	hlt    
  40f465:	add    BYTE PTR [ebx+0x42],dl
  40f468:	pusha  
  40f469:	and    ah,bh
  40f46b:	sbb    DWORD PTR [ebx+0x38fb4404],eax
  40f471:	rcl    BYTE PTR [ecx-0x77],0x7
  40f475:	jnp    0x40f4df
  40f477:	add    edi,esp
  40f479:	mov    esp,edx
  40f47b:	ja     0x40f4ad
  40f47d:	inc    ebp
  40f47e:	sbb    eax,DWORD PTR [ebx-0x78]
  40f481:	push   ebp
  40f482:	cwde   
  40f483:	jno    0x40f479
  40f485:	mov    ebp,DWORD PTR [ecx+edx*8-0x7b49a4ab]
  40f48c:	or     eax,DWORD PTR [eax]
  40f48e:	call   0x129ec87
  40f493:	cmp    DWORD PTR [ebx-0x7fe3000c],0x8d92ede0
  40f49d:	fist   WORD PTR [esi-0x70]
  40f4a0:	(bad)  
  40f4a1:	repnz mov ebp,DWORD PTR [edx+0xe]
  40f4a5:	xor    eax,0xc7e4822
  40f4ab:	and    dh,BYTE PTR [edx+0x77]
  40f4ae:	adc    al,0x1c
  40f4b0:	inc    edi
  40f4b1:	hlt    
  40f4b2:	jmp    0x4b33f2
  40f4b7:	and    dh,BYTE PTR [edx+0x7e]
  40f4ba:	shrd   DWORD PTR [edi+0x33],edi,0xe9
  40f4bf:	(bad)  
  40f4c1:	or     al,BYTE PTR [eax]
  40f4c3:	xchg   al,ch
  40f4c5:	inc    edi
  40f4c6:	call   0x490dda
  40f4cb:	aad    0x90
  40f4cd:	in     al,0x77
  40f4cf:	xchg   esp,eax
  40f4d0:	pop    ecx
  40f4d1:	push   cs
  40f4d2:	and    DWORD PTR [eax-0x6c],0xffffffdc
  40f4d6:	das    
  40f4d7:	add    eax,0xdbfef41e
  40f4dc:	aaa    
  40f4dd:	je     0x40f4e5
  40f4df:	jns    0x40f48c
  40f4e1:	sbb    BYTE PTR [edi],cl
  40f4e3:	add    BYTE PTR [ecx+0x16],cl
  40f4e6:	repnz mov bl,0xd4
  40f4e9:	push   ss
  40f4ea:	iret   
  40f4eb:	or     bl,BYTE PTR [ecx-0x25]
  40f4ee:	push   eax
  40f4ef:	ror    DWORD PTR [edi+0xce00f02],0x1
  40f4f6:	ltr    ax
  40f4f9:	sub    BYTE PTR [esi],dl
  40f4fb:	repnz call 0x3e2c:0xb7405633
  40f503:	mov    dl,BYTE PTR [ebx+0x21]
  40f506:	ja     0x40f4f7
  40f508:	add    eax,0x7bfef3be
  40f50d:	adc    dh,BYTE PTR [ebx-0x4b702a02]
  40f513:	pop    es
  40f514:	pmaxub mm6,mm3
  40f517:	mov    dh,BYTE PTR [ebx]
  40f519:	in     eax,dx
  40f51a:	push   es
  40f51b:	repnz pop ebx
  40f51d:	cmp    al,BYTE PTR [ecx-0x7cf1ad0b]
  40f523:	sar    DWORD PTR [edx],1
  40f525:	adc    bl,BYTE PTR [ecx]
  40f527:	rol    BYTE PTR [ebx],0xc7
  40f52a:	les    edx,FWORD PTR [ecx+eax*4]
  40f52d:	ret    
  40f52e:	sbb    eax,0x10ebe80f
  40f533:	repz sbb esp,DWORD PTR [eax]
  40f536:	iret   
  40f537:	inc    esi
  40f538:	inc    esi
  40f539:	adc    BYTE PTR [edx+0x7b],cl
  40f53c:	mov    eax,ds:0x5d029841
  40f541:	adc    cl,dl
  40f543:	cmp    al,0xa
  40f545:	adc    ebp,ebp
  40f547:	outs   dx,BYTE PTR ds:[esi]
  40f548:	inc    esi
  40f549:	mov    esi,0x2e5957ab
  40f54e:	mov    eax,ds:0xfa76faab
  40f553:	dec    esi
  40f554:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f555:	add    ebx,DWORD PTR ds:0xea04baae
  40f55b:	add    eax,DWORD PTR [eax]
  40f55d:	mov    ebx,0xb0b65dbd
  40f562:	mov    ebp,0x3ad27b6a
  40f567:	push   0xdefc0254
  40f56c:	dec    DWORD PTR [edx]
  40f56e:	or     dh,BYTE PTR [esi+0x34fb04f7]
  40f574:	pop    ebp
  40f575:	add    BYTE PTR [ebx-0x1f],al
  40f578:	add    eax,DWORD PTR [ebx]
  40f57a:	or     bh,BYTE PTR [edi-0x5dfdab02]
  40f580:	pop    esp
  40f581:	hlt    
  40f582:	inc    edx
  40f583:	loope  0x40f588
  40f585:	mov    ch,0x2
  40f587:	or     eax,DWORD PTR [eax-0x4d1df607]
  40f58d:	cld    
  40f58e:	daa    
  40f58f:	popa   
  40f590:	repnz test eax,0xe04e6042
  40f596:	(bad)  
  40f597:	int3   
  40f598:	sbb    BYTE PTR [edx+0x36],0xe4
  40f59c:	fsub   DWORD PTR [esi+0x79069439]
  40f5a2:	rcl    DWORD PTR [edx],1
  40f5a4:	sbb    esi,DWORD PTR [esi-0x36e4c271]
  40f5aa:	mov    al,ds:0x6f35436e
  40f5af:	pusha  
  40f5b0:	inc    esi
  40f5b1:	xchg   DWORD PTR [ecx],edi
  40f5b3:	jl     0x40f5bb
  40f5b5:	xchg   ecx,eax
  40f5b6:	ror    DWORD PTR [edx],1
  40f5b8:	std    
  40f5b9:	mov    bl,BYTE PTR [ebp-0x6]
  40f5bc:	xor    eax,0x384e1c27
  40f5c1:	add    BYTE PTR [ecx],bh
  40f5c3:	hlt    
  40f5c4:	jg     0x40f5f2
  40f5c6:	cmp    BYTE PTR [edx+edi*8-0xcc2a996],0x14
  40f5ce:	jae    0x40f640
  40f5d0:	repz call 0x3d4e:0x700276ec
  40f5d8:	jg     0x40f5f6
  40f5da:	xchg   BYTE PTR [ebp-0x8],cl
  40f5dd:	hlt    
  40f5de:	sahf   
  40f5df:	mov    edi,0xbfa2ddfc
  40f5e4:	fcom   st(5)
  40f5e6:	ss push esp
  40f5e8:	retf   0x776c
  40f5eb:	xchg   DWORD PTR [ecx],edx
  40f5ed:	ficomp WORD PTR [eax]
  40f5ef:	push   edx
  40f5f0:	add    edi,DWORD PTR [esi+0x18]
  40f5f3:	pop    esp
  40f5f4:	div    DWORD PTR [eax+eiz*1+0x4ebc9c4]
  40f5fb:	add    BYTE PTR [ecx],cl
  40f5fd:	test   eax,0x1277047c
  40f602:	lods   al,BYTE PTR ds:[esi]
  40f603:	inc    ebx
  40f604:	pop    ds
  40f605:	sbb    edx,DWORD PTR [ebx+edi*8-0x5807e073]
  40f60c:	leave  
  40f60d:	bound  ecx,QWORD PTR [ebx+0x10]
  40f610:	shl    edx,cl
  40f612:	inc    ebp
  40f613:	ins    BYTE PTR es:[edi],dx
  40f614:	test   DWORD PTR [ebp+0x282807e2],ebp
  40f61a:	sub    BYTE PTR [edi+0x55],ah
  40f61d:	sub    ecx,ebp
  40f61f:	or     cl,ah
  40f621:	in     al,dx
  40f622:	jg     0x40f620
  40f624:	jle    0x40f612
  40f626:	add    ch,al
  40f628:	mov    edx,0x8e7d6d02
  40f62d:	std    
  40f62e:	adc    ebp,DWORD PTR [ebp+edx*4+0x8]
  40f632:	add    BYTE PTR [esp+eax*4+0x1e96ebc8],ch
  40f639:	mov    ecx,edi
  40f63b:	outs   dx,DWORD PTR ds:[esi]
  40f63c:	jmp    0xb703:0x43df8318
  40f643:	xchg   edi,eax
  40f644:	push   ds
  40f645:	(bad)
  40f649:	ins    DWORD PTR es:[edi],dx
  40f64a:	adc    DWORD PTR [edi+0x4],0x78
  40f64e:	add    cl,BYTE PTR [esp+eax*4-0x38]
  40f652:	push   ebp
  40f653:	hlt    
  40f654:	mov    ds:0x6aa8b5a,al
  40f659:	add    DWORD PTR [ebp-0x2d],0xffffffbf
  40f65d:	sar    BYTE PTR [edi+0x6a],1
  40f660:	ret    
  40f661:	retf   
  40f662:	call   DWORD PTR [esi-0x6472a27f]
  40f668:	sbb    DWORD PTR [esi+0x57],ebx
  40f66b:	(bad)  
  40f66c:	jl     0x40f61d
  40f66e:	inc    eax
  40f670:	xchg   DWORD PTR [esi+0xc],ecx
  40f673:	emms   
  40f675:	jle    0x40f673
  40f677:	cld    
  40f678:	into   
  40f679:	hlt    
  40f67a:	adc    eax,0x341203
  40f67f:	or     al,0x4d
  40f681:	ins    DWORD PTR es:[edi],dx
  40f682:	mov    ebx,edx
  40f684:	xor    eax,0x766c5ef4
  40f689:	hlt    
  40f68a:	jne    0x40f68c
  40f68c:	out    0xce,al
  40f68e:	hlt    
  40f68f:	adc    eax,0x34145f
  40f694:	mov    dh,0x81
  40f696:	cmp    cl,cl
  40f698:	or     DWORD PTR [ebp-0x7e59b901],ecx
  40f69e:	pop    eax
  40f69f:	mov    eax,DWORD PTR [ebx]
  40f6a1:	pusha  
  40f6a2:	add    al,BYTE PTR [ebp-0x7cf10920]
  40f6a8:	div    DWORD PTR [esi+0x50]
  40f6ab:	ret    
  40f6ac:	xchg   BYTE PTR [eax-0x44],cl
  40f6af:	out    0xee,eax
  40f6b1:	mov    ch,0x46
  40f6b3:	(bad)  
  40f6b4:	sti    
  40f6b5:	push   ebp
  40f6b6:	and    cl,BYTE PTR [esi+esi*1]
  40f6b9:	sub    al,0xbd
  40f6bb:	push   ebp
  40f6bc:	cdq    
  40f6bd:	out    0x8f,al
  40f6bf:	adc    al,BYTE PTR [esi+0x19]
  40f6c2:	dec    esi
  40f6c3:	inc    ebx
  40f6c4:	dec    eax
  40f6c5:	loopne 0x40f6ce
  40f6c7:	cmp    DWORD PTR [esi-0x58],0xffffffdc
  40f6cb:	or     al,dl
  40f6cd:	mov    al,0xfc
  40f6cf:	ja     0x40f665
  40f6d1:	pop    ecx
  40f6d2:	push   cs
  40f6d3:	pop    ebx
  40f6d4:	inc    ebp
  40f6d5:	xlat   BYTE PTR ds:[ebx]
  40f6d6:	or     esi,DWORD PTR [eax]
  40f6d8:	xchg   BYTE PTR [ecx+ecx*2+0x54],ah
  40f6dc:	or     eax,0xeb82b8bd
  40f6e1:	xchg   ebp,eax
  40f6e2:	pop    es
  40f6e3:	push   esi
  40f6e4:	sti    
  40f6e5:	aad    0xf7
  40f6e7:	dec    edi
  40f6e8:	inc    ecx
  40f6e9:	out    dx,al
  40f6ea:	repz xor al,BYTE PTR [esi-0x62]
  40f6ee:	mov    ah,0xfb
  40f6f0:	add    BYTE PTR [esi],bl
  40f6f2:	cli    
  40f6f3:	pop    ebp
  40f6f4:	(bad)  
  40f6f5:	sub    DWORD PTR [edi+edx*2-0xdfde77c],edx
  40f6fc:	(bad)  
  40f6fd:	xchg   ebx,eax
  40f6fe:	dec    ebp
  40f6ff:	dec    edi
  40f700:	jae    0x40f6cf
  40f702:	push   edi
  40f703:	inc    esi
  40f704:	jmp    0xd60d:0xfbcc947e
  40f70b:	out    dx,eax
  40f70c:	mov    BYTE PTR [edi-0x40a2b25c],al
  40f712:	pop    ebx
  40f713:	mov    esp,0xbda9da8a
  40f718:	mov    dl,dh
  40f71a:	scas   eax,DWORD PTR es:[edi]
  40f71b:	jb     0x40f75a
  40f71d:	or     edx,esi
  40f71f:	repz dec edi
  40f721:	ror    DWORD PTR [ebp+0x41c58aef],1
  40f727:	js     0x40f763
  40f729:	test   eax,0xb84bdb5b
  40f72e:	mov    eax,0xa044826
  40f733:	(bad)
  40f736:	mov    ebp,0xbd92d1a8
  40f73b:	mov    ah,0xd1
  40f73d:	mov    es,WORD PTR [edi]
  40f73f:	hlt    
  40f740:	pop    ebx
  40f741:	push   ebp
  40f742:	retf   
  40f743:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f744:	dec    ebx
  40f745:	dec    ax
  40f747:	jle    0x40f701
  40f749:	pushf  
  40f74a:	inc    eax
  40f74b:	cdq    
  40f74c:	jecxz  0x40f78d
  40f74e:	push   es
  40f74f:	popf   
  40f750:	jg     0x40f71c
  40f752:	push   es
  40f753:	and    eax,0x23e00aa
  40f758:	pop    ss
  40f759:	jg     0x40f7c8
  40f75b:	je     0x40f7bd
  40f75d:	loope  0x40f7bc
  40f75f:	inc    ebx
  40f760:	adc    edi,DWORD PTR [ecx-0x36]
  40f763:	xor    dl,BYTE PTR [ecx]
  40f765:	dec    ebx
  40f766:	shl    BYTE PTR [esi],cl
  40f768:	jle    0x40f72b
  40f76a:	cmp    eax,0x3851c21b
  40f76f:	push   es
  40f770:	imul   edx,DWORD PTR [edx+ecx*1+0xd],0x9028fddb
  40f778:	dec    ebp
  40f779:	pop    esp
  40f77a:	sbb    eax,0x2c4b34c9
  40f77f:	cmp    ebp,DWORD PTR [eax-0x3f]
  40f782:	or     eax,0xfefb96ba
  40f787:	inc    ebx
  40f788:	js     0x40f7cc
  40f78a:	arpl   bx,di
  40f78c:	and    BYTE PTR [ebx-0x4d],cl
  40f78f:	sbb    al,BYTE PTR [esi+ecx*4]
  40f792:	lock add eax,0x1a53f788
  40f798:	adc    DWORD PTR [edi-0x4cdefa20],ecx
  40f79e:	or     al,0xb
  40f7a0:	or     ebp,DWORD PTR [edx+0x3d]
  40f7a3:	add    al,0x7e
  40f7a5:	fnstsw WORD PTR [ecx+edx*4]
  40f7a8:	cs icebp 
  40f7aa:	dec    esp
  40f7ab:	cs mov bh,bl
  40f7ae:	lds    eax,FWORD PTR ds:0x506d181
  40f7b4:	jne    0x40f7b7
  40f7b6:	enter  0x5d05,0xc6
  40f7ba:	add    cl,dl
  40f7bc:	popa   
  40f7bd:	sbb    dl,BYTE PTR [ecx+0x3b]
  40f7c0:	push   es
  40f7c1:	or     ebp,ecx
  40f7c3:	sub    eax,0x85e908eb
  40f7c8:	mov    ebx,0x91c56c0c
  40f7cd:	sbb    DWORD PTR [ecx],edi
  40f7cf:	sti    
  40f7d0:	xchg   DWORD PTR [esi],ecx
  40f7d2:	xchg   esi,eax
  40f7d3:	jbe    0x40f762
  40f7d5:	sbb    BYTE PTR [ecx],ch
  40f7d7:	cmp    BYTE PTR [ebx+0x41f5f14c],0xdf
  40f7de:	jmp    0x40f853
  40f7e0:	add    dl,BYTE PTR [ebx+ebp*4+0x51]
  40f7e4:	add    eax,0xc067bde1
  40f7e9:	repnz or edx,DWORD PTR [esi+0x32]
  40f7ed:	ins    BYTE PTR es:[edi],dx
  40f7ee:	push   0xffffffcd
  40f7f0:	pop    esp
  40f7f1:	jle    0x40f7d5
  40f7f3:	daa    
  40f7f4:	shl    dl,0xad
  40f7f7:	cmp    DWORD PTR [esi],edi
  40f7f9:	ins    BYTE PTR es:[edi],dx
  40f7fa:	ins    BYTE PTR es:[edi],dx
  40f7fb:	lds    ecx,FWORD PTR [esi+0x6ce1d301]
  40f801:	ins    BYTE PTR es:[edi],dx
  40f802:	pusha  
  40f803:	mov    eax,ecx
  40f805:	enter  0x27eb,0xb8
  40f809:	or     DWORD PTR [edi+0x2b874382],ecx
  40f80f:	add    ecx,0xffffffc9
  40f812:	jmp    0x40f800
  40f814:	retf   
  40f815:	or     DWORD PTR [edi+0x7dc506],eax
  40f81b:	fwait
  40f81c:	sub    al,0xca
  40f81e:	data16 add BYTE PTR [esi+0x3f],dl
  40f822:	(bad)  
  40f823:	mov    ebp,DWORD PTR [ebx]
  40f825:	and    eax,0x86e4eb0e
  40f82a:	or     bh,BYTE PTR [esi*4-0x55c3fd0c]
  40f831:	hlt    
  40f832:	push   cs
  40f833:	inc    ecx
  40f834:	xchg   esp,eax
  40f835:	dec    eax
  40f836:	jns    0x40f829
  40f838:	and    al,0x81
  40f83a:	and    BYTE PTR [ebx+edx*4+0x42],al
  40f83e:	das    
  40f83f:	into   
  40f840:	push   ebx
  40f841:	adc    al,BYTE PTR [edi-0x23ca61af]
  40f847:	jae    0x40f7f4
  40f849:	shl    BYTE PTR [edx],0xd
  40f84c:	mov    ds:0x753a8a41,al
  40f851:	cmc    
  40f852:	or     DWORD PTR [ebx+0xf830025],ecx
  40f858:	sbb    eax,0xd4550a43
  40f85d:	push   0xffffff88
  40f85f:	in     al,dx
  40f860:	adc    ecx,edi
  40f862:	pop    ebp
  40f863:	mov    ecx,esi
  40f865:	jo     0x40f8b4
  40f867:	sbb    al,0x2f
  40f869:	shl    DWORD PTR [edi+0x52],cl
  40f86c:	push   ebp
  40f86d:	pusha  
  40f86e:	pop    esp
  40f86f:	(bad)  
  40f870:	loop   0x40f8c1
  40f872:	inc    ebx
  40f873:	call   0x35ae55
  40f878:	pushf  
  40f879:	jecxz  0x40f85a
  40f87b:	out    dx,eax
  40f87c:	sbb    al,0x57
  40f87e:	cmp    bh,bh
  40f880:	xchg   al,bl
  40f882:	add    esi,DWORD PTR [esi+0x0]
  40f885:	jge    0x40f80c
  40f887:	dec    ebp
  40f888:	or     al,0x1c
  40f88a:	add    DWORD PTR [edx+0x4d854b45],0x10
  40f891:	aam    0x82
  40f893:	xchg   BYTE PTR [ebp-0x7a],cl
  40f896:	dec    ecx
  40f897:	outs   dx,DWORD PTR ds:[esi]
  40f898:	inc    esp
  40f899:	out    0x41,al
  40f89b:	cmp    dh,0xe1
  40f89e:	cmp    al,0x8a
  40f8a0:	mov    edi,0x3acb1353
  40f8a5:	push   eax
  40f8a6:	jmp    0xb440d688
  40f8ab:	jecxz  0x40f835
  40f8ad:	pusha  
  40f8ae:	inc    ecx
  40f8af:	push   ebp
  40f8b0:	inc    eax
  40f8b1:	or     eax,0xc902565f
  40f8b6:	mov    ds:0x5bff13c1,al
  40f8bb:	out    0xaf,al
  40f8bd:	xchg   eax,esi
  40f8bf:	add    esi,DWORD PTR [ebx]
  40f8c1:	(bad)  
  40f8c2:	or     BYTE PTR [ebx-0x78],al
  40f8c5:	dec    eax
  40f8c6:	in     eax,0x70
  40f8c8:	inc    esp
  40f8c9:	xchg   esi,eax
  40f8ca:	adc    cl,dl
  40f8cc:	pop    es
  40f8cd:	xchg   ecx,eax
  40f8ce:	xchg   ebp,eax
  40f8cf:	dec    esp
  40f8d0:	(bad)  
  40f8d1:	jns    0x40f8ec
  40f8d3:	pop    ds
  40f8d4:	leave  
  40f8d5:	(bad)  
  40f8d6:	mov    ds:0x25fff3bc,al
  40f8db:	inc    esi
  40f8dc:	mov    dl,al
  40f8de:	adc    eax,0xff8e1b76
  40f8e3:	loope  0x40f959
  40f8e5:	jne    0x40f8b7
  40f8e7:	ror    DWORD PTR [edi],0x0
  40f8ea:	jns    0x40f88a
  40f8ec:	cmp    al,0xff
  40f8ee:	inc    ecx
  40f8ef:	sbb    DWORD PTR [ecx+0x7d],esi
  40f8f2:	sahf   
  40f8f3:	daa    
  40f8f4:	dec    esi
  40f8f5:	pop    esi
  40f8f6:	rcl    al,1
  40f8f8:	xor    dl,al
  40f8fa:	ins    BYTE PTR es:[edi],dx
  40f8fb:	ror    DWORD PTR [eax],cl
  40f8fd:	(bad)  
  40f8ff:	jne    0x40f908
  40f901:	add    BYTE PTR [esi-0x65f03fc0],al
  40f907:	xor    DWORD PTR [esi+0x4d],0xee39f7a
  40f90e:	or     eax,0x1e7bb42
  40f913:	ins    DWORD PTR es:[edi],dx
  40f914:	adc    al,0x51
  40f916:	(bad)  
  40f917:	xor    eax,0xf3c595
  40f91c:	jmp    0x5988:0xb8b582cf
  40f923:	or     ebx,ebp
  40f925:	rol    BYTE PTR [edx+eax*8+0x77fb2320],1
  40f92c:	and    al,0x83
  40f92e:	mov    esi,0x6015428
  40f933:	add    BYTE PTR [edx],al
  40f935:	pop    ebx
  40f936:	push   0xffffffba
  40f938:	ss inc edi
  40f93a:	pushf  
  40f93b:	and    al,0xd4
  40f93d:	test   esp,eax
  40f93f:	jno    0x40f90d
  40f941:	icebp  
  40f942:	or     DWORD PTR [esi],ebp
  40f944:	and    DWORD PTR [esp+edi*8],eax
  40f947:	jmp    0x3837f38
  40f94c:	adc    al,BYTE PTR [edi+0x0]
  40f94f:	call   0x2eca:0x79c3f5d2
  40f956:	inc    edi
  40f957:	cld    
  40f958:	xchg   DWORD PTR [ecx-0x27fe2d86],edx
  40f95e:	sub    ebp,edx
  40f960:	mov    al,ds:0x447dbe73
  40f965:	std    
  40f966:	jp     0x40f939
  40f968:	std    
  40f969:	out    0xd0,eax
  40f96b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f96c:	ret    0xf977
  40f96f:	mov    edx,0x31b97861
  40f974:	mov    ds:0xd6c580f3,eax
  40f97a:	inc    esi
  40f97b:	sub    BYTE PTR [edx],al
  40f97d:	imul   esi,DWORD PTR [esi+0xcad3a8d],0xdc6e5187
  40f987:	adc    BYTE PTR [edx],al
  40f989:	or     esi,DWORD PTR [esi]
  40f98b:	leave  
  40f98c:	add    BYTE PTR [esi+0x31],cl
  40f98f:	pop    ebp
  40f990:	xor    BYTE PTR [edx-0x72af03dd],cl
  40f996:	ror    BYTE PTR [eax+0x0],0xf4
  40f99a:	imul   edi,DWORD PTR ds:0x1a64034e,0x5d06f401
  40f9a4:	mov    ?,esi
  40f9a6:	ret    0x4a1b
  40f9a9:	add    ebp,DWORD PTR [edx-0x3a]
  40f9ac:	add    ah,dh
  40f9ae:	out    dx,al
  40f9af:	cmp    al,0x8f
  40f9b1:	push   cs
  40f9b2:	and    DWORD PTR [eax],eax
  40f9b4:	test   BYTE PTR [edx+0x9],0xee
  40f9b8:	push   es
  40f9b9:	cmp    ebx,esi
  40f9bb:	(bad)  
  40f9bc:	inc    eax
  40f9bd:	inc    ecx
  40f9be:	repz and al,0x36
  40f9c1:	mov    bl,dh
  40f9c3:	sub    al,0x4a
  40f9c5:	inc    ecx
  40f9c6:	repz and al,0x36
  40f9c9:	retf   0xb94d
  40f9cc:	jl     0x40f956
  40f9ce:	add    bl,dh
  40f9d0:	push   es
  40f9d1:	dec    ebp
  40f9d2:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9d4:	shl    BYTE PTR [edx+ecx*8],0x97
  40f9d8:	xor    ebx,DWORD PTR [ebp+0x9]
  40f9db:	pusha  
  40f9dc:	inc    ebx
  40f9dd:	pop    ecx
  40f9de:	jle    0x40f9f5
  40f9e0:	lea    eax,[eax-0x3e1609e6]
  40f9e6:	loope  0x40f9d7
  40f9e8:	enter  0xf400,0x62
  40f9ec:	and    ecx,DWORD PTR [ecx-0x80]
  40f9ef:	pop    ds
  40f9f0:	mov    ecx,ebp
  40f9f2:	pop    esp
  40f9f3:	in     eax,dx
  40f9f4:	inc    ebp
  40f9f5:	cmp    al,0xc7
  40f9f7:	fidiv  DWORD PTR [eax]
  40f9f9:	cmp    DWORD PTR [esi],eax
  40f9fb:	jmp    0x40fa36
  40f9fd:	imul   DWORD PTR [edi]
  40f9ff:	sub    dh,BYTE PTR [esi]
  40fa01:	dec    ecx
  40fa02:	jg     0x40fa04
  40fa04:	jmp    0x51f5dcfd
  40fa09:	mov    ah,dh
  40fa0b:	push   0x7f
  40fa0d:	mov    al,0x86
  40fa0f:	dec    ebp
  40fa10:	lahf   
  40fa11:	mov    dh,0xeb
  40fa13:	stos   DWORD PTR es:[edi],eax
  40fa14:	addr16 mov ah,dh
  40fa17:	add    DWORD PTR [eax],eax
  40fa19:	sub    dh,BYTE PTR [ecx]
  40fa1b:	and    al,BYTE PTR [ebp-0x49]
  40fa1e:	jle    0x40fa95
  40fa20:	sbb    BYTE PTR [esi+ebx*2+0x43d3467f],al
  40fa27:	retf   
  40fa28:	mov    DWORD PTR [edx],ebp
  40fa2a:	sub    DWORD PTR [eax-0x34a450ba],eax
  40fa30:	lea    esp,[edx]
  40fa32:	xor    eax,0x9dcf4582
  40fa37:	and    bh,dh
  40fa39:	rol    BYTE PTR [esi+0x42c74d80],1
  40fa3f:	ret    
  40fa40:	mov    DWORD PTR [ecx-0x6f3f7812],eax
  40fa46:	jg     0x40fac3
  40fa48:	(bad)  
  40fa49:	rol    BYTE PTR [esi-0x9aec4b4],1
  40fa4f:	jns    0x40fa23
  40fa51:	inc    esi
  40fa52:	mov    ds:0x720fff5,al
  40fa57:	jecxz  0x40f9f8
  40fa59:	adc    DWORD PTR [esi-0x651baa0c],eax
  40fa5f:	mov    al,bh
  40fa61:	adc    BYTE PTR [eax],dl
  40fa63:	sbb    ecx,DWORD PTR [ebx+0x67ebfa92]
  40fa69:	add    BYTE PTR [esi-0x7a287c0c],al
  40fa6f:	jle    0x40fa75
  40fa71:	cld    
  40fa72:	and    eax,0x34
  40fa75:	cld    
  40fa76:	push   edx
  40fa77:	iret   
  40fa78:	push   ebx
  40fa79:	in     al,dx
  40fa7a:	xchg   BYTE PTR [esi+0x10],bh
  40fa7d:	add    BYTE PTR [esi-0x64014841],al
  40fa83:	sbb    eax,0xf193febb
  40fa88:	dec    esi
  40fa89:	adc    al,0x96
  40fa8b:	sbb    ecx,eax
  40fa8d:	dec    DWORD PTR [esp+ebp*1-0x34]
  40fa91:	adc    DWORD PTR [edi-0x6a820832],edi
  40fa97:	jbe    0x40fa8b
  40fa99:	das    
  40fa9a:	scas   al,BYTE PTR es:[edi]
  40fa9b:	add    cl,BYTE PTR [edi+0x73]
  40fa9e:	jge    0x40fab4
  40faa0:	mov    ch,0xf
  40faa2:	(bad)  
  40faa3:	in     eax,0x1a
  40faa5:	shr    ch,0xeb
  40faa8:	outs   dx,DWORD PTR ds:[esi]
  40faa9:	sbb    BYTE PTR ds:0x860b49de,ch
  40faaf:	fidiv  WORD PTR [edx-0x15]
  40fab2:	or     eax,0x5155f7a7
  40fab7:	xchg   ebx,eax
  40fab8:	push   cs
  40fab9:	(bad)  
  40faba:	cmp    ebp,ebp
  40fabc:	sbb    dh,dh
  40fabe:	test   eax,0xfee7f69e
  40fac3:	adc    BYTE PTR [edi-0x2],cl
  40fac6:	or     eax,0x11fe7502
  40facb:	in     eax,0x1a
  40facd:	rcr    BYTE PTR [ebp+0x6e56b6f3],0x9b
  40fad4:	xchg   dh,bh
  40fad6:	jns    0x40fb4c
  40fad8:	push   edi
  40fad9:	test   BYTE PTR [eax+0x55],bh
  40fadc:	pop    ebp
  40fadd:	mov    al,bl
  40fadf:	stc    
  40fae0:	mov    edx,0x56610056
  40fae5:	repnz mov WORD PTR [ecx+0x7e744ec8],?
  40faec:	rcr    ebp,1
  40faee:	dec    BYTE PTR [ecx+0x78]
  40faf1:	add    al,bl
  40faf3:	mov    edx,0x9e7a5e3
  40faf8:	inc    edx
  40faf9:	xchg   esp,eax
  40fafa:	inc    esp
  40fafb:	xor    BYTE PTR [ebx],dh
  40fafd:	and    DWORD PTR [eax+0x7c],ebx
  40fb00:	retf   
  40fb01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb02:	out    dx,eax
  40fb03:	or     al,BYTE PTR [edx]
  40fb05:	fiadd  WORD PTR [ecx]
  40fb07:	cvtps2pd xmm7,QWORD PTR [eax+0x3d]
  40fb0b:	lods   al,BYTE PTR ds:[esi]
  40fb0c:	lahf   
  40fb0d:	xchg   ebx,eax
  40fb0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb0f:	inc    edi
  40fb10:	push   edx
  40fb11:	loope  0x40fb8b
  40fb13:	inc    ebp
  40fb14:	es aad 0x78
  40fb17:	dec    ebp
  40fb18:	es stc 
  40fb1a:	lods   eax,DWORD PTR ds:[esi]
  40fb1b:	cld    
  40fb1c:	jne    0x40faeb
  40fb1e:	sti    
  40fb1f:	call   0x90845b5b
  40fb24:	xchg   edx,eax
  40fb25:	pusha  
  40fb26:	inc    edx
  40fb27:	mov    dl,ch
  40fb29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb2a:	pop    edx
  40fb2b:	sar    dh,1
  40fb2d:	popa   
  40fb2e:	lds    eax,FWORD PTR [ebp-0x783164be]
  40fb34:	neg    DWORD PTR [ecx]
  40fb36:	inc    eax
  40fb37:	push   edx
  40fb38:	retf   
  40fb39:	fst    st(5)
  40fb3b:	push   esi
  40fb3c:	leave  
  40fb3d:	cs cmp al,0xfa
  40fb40:	test   cl,bl
  40fb42:	aam    0x29
  40fb44:	icebp  
  40fb45:	int3   
  40fb46:	les    eax,FWORD PTR [eax]
  40fb48:	cdq    
  40fb49:	data16 test al,0x5
  40fb4c:	xchg   BYTE PTR [edx-0x4c],al
  40fb4f:	mov    ecx,0x4027087d
  40fb54:	xchg   ch,bh
  40fb56:	ds or  al,0x6e
  40fb59:	sbb    dl,dh
  40fb5b:	add    eax,0x18adc186
  40fb60:	aas    
  40fb61:	add    edx,ebp
  40fb63:	add    ebp,esp
  40fb65:	push   esi
  40fb66:	push   0xa
  40fb68:	or     eax,DWORD PTR [ebp-0x71ae521b]
  40fb6e:	je     0x40fb89
  40fb70:	xchg   edx,eax
  40fb71:	push   esp
  40fb72:	or     ch,BYTE PTR [ecx]
  40fb74:	mov    al,cl
  40fb76:	into   
  40fb77:	fst    QWORD PTR [esi]
  40fb79:	mov    BYTE PTR [edx],dl
  40fb7b:	mov    ecx,0xfbfe56c4
  40fb80:	inc    ebp
  40fb81:	inc    BYTE PTR [eax+0x7f96c92f]
  40fb87:	cmp    eax,0x6a068709
  40fb8c:	push   esi
  40fb8d:	push   ebp
  40fb8e:	push   edi
  40fb8f:	push   0xffffffc2
  40fb91:	or     eax,0xa2869e5d
  40fb96:	or     ecx,ebp
  40fb98:	test   DWORD PTR [ebp-0x75],ecx
  40fb9b:	or     ecx,DWORD PTR [edx-0x408df5be]
  40fba1:	inc    ebp
  40fba2:	xchg   DWORD PTR [ecx],ebp
  40fba4:	mov    gs,WORD PTR [eax+0x1e]
  40fba7:	mov    ecx,0x11fe870a
  40fbac:	add    BYTE PTR [ecx-0x16],dl
  40fbaf:	repz (bad) 
  40fbb1:	mov    ch,0xfc
  40fbb3:	sbb    eax,0xa829fb5
  40fbb8:	push   0x4e
  40fbba:	dec    ecx
  40fbbb:	lea    ebp,[ecx-0x164c396c]
  40fbc1:	test   DWORD PTR [edx-0x1e],eax
  40fbc4:	(bad)  
  40fbc5:	cmp    edi,esp
  40fbc7:	repz pusha 
  40fbc9:	into   
  40fbca:	cmc    
  40fbcb:	test   DWORD PTR [esi+edx*2],ebp
  40fbce:	xor    ah,bh
  40fbd0:	sbb    ebx,edi
  40fbd2:	jbe    0x40fbce
  40fbd4:	shr    DWORD PTR [eax+0x66],0xa
  40fbd8:	jmp    0xe33781e7
  40fbdd:	mov    edi,0xc4da0e76
  40fbe2:	call   0xe9875e65
  40fbe7:	xchg   DWORD PTR [esi+0x7708b],ecx
  40fbed:	jne    0x40fc3b
  40fbef:	push   ebx
  40fbf0:	cmp    ecx,ecx
  40fbf2:	mov    ebx,0x51978d25
  40fbf7:	pusha  
  40fbf8:	adc    al,0xa8
  40fbfa:	mov    edx,0x5aa853f7
  40fbff:	ss push ss
  40fc01:	fild   WORD PTR [eax-0x79]
  40fc04:	les    ebp,FWORD PTR [ebx]
  40fc06:	retf   0x74b3
  40fc09:	cmp    cl,BYTE PTR [ebx]
  40fc0b:	mov    eax,ebx
  40fc0d:	fs inc esi
  40fc0f:	or     al,BYTE PTR [eax]
  40fc11:	add    BYTE PTR [ecx+edi*1+0x4c44e279],al
  40fc18:	popa   
  40fc19:	not    BYTE PTR [esi+eax*2-0x4623fff6]
  40fc20:	out    dx,eax
  40fc21:	jne    0x40fc31
  40fc23:	hlt    
  40fc24:	fld    DWORD PTR [ebp-0x74c54a88]
  40fc2a:	and    bh,BYTE PTR ds:0xc0e3c088
  40fc30:	jnp    0x40fc36
  40fc32:	(bad)  
  40fc34:	arpl   sp,di
  40fc36:	inc    eax
  40fc37:	sbb    eax,0x8e220881
  40fc3c:	ja     0x40fc50
  40fc3e:	or     ax,0x76fc
  40fc42:	call   0x8a99:0x84f856cd
  40fc49:	sti    
  40fc4a:	das    
  40fc4b:	int    0x50
  40fc4d:	add    BYTE PTR [edx+ecx*1+0x4a],cl
  40fc51:	add    eax,0xa40e4
  40fc56:	je     0x40fbf3
  40fc58:	jns    0x40fc2f
  40fc5a:	in     al,0x61
  40fc5c:	(bad)  
  40fc5d:	fild   DWORD PTR [eax+eax*2+0xa]
  40fc61:	add    dl,bl
  40fc63:	int    0xd0
  40fc65:	add    DWORD PTR [esi-0x2c72f817],eax
  40fc6b:	int    0x26
  40fc6d:	pop    ebp
  40fc6e:	sbb    eax,ebp
  40fc70:	dec    ecx
  40fc71:	add    DWORD PTR [esi-0x9],0x10
  40fc75:	inc    DWORD PTR [eax]
  40fc77:	mov    ebx,0xf0132675
  40fc7c:	ins    BYTE PTR es:[edi],dx
  40fc7d:	dec    ecx
  40fc7e:	mov    WORD PTR [ebx-0x3508d967],?
  40fc84:	jmp    0xb5872e90
  40fc89:	jmp    0x1a694be8
  40fc8e:	add    ch,bh
  40fc90:	scas   al,BYTE PTR es:[edi]
  40fc91:	xor    ecx,DWORD PTR [edx+edx*2-0x22983d18]
  40fc98:	jmp    0xfed1:0xe96c0007
  40fc9f:	fwait
  40fca0:	sbb    eax,0xec864012
  40fca5:	jno    0x40fceb
  40fca7:	jbe    0x40fd11
  40fca9:	inc    edx
  40fcaa:	or     edx,ecx
  40fcac:	xor    DWORD PTR ds:0x2faea5c0,edx
  40fcb2:	lds    eax,FWORD PTR [eax-0xf]
  40fcb5:	pop    es
  40fcb6:	mov    DWORD PTR [eax-0x13],ecx
  40fcb9:	xchg   BYTE PTR [edx+ecx*4-0x27],al
  40fcbd:	dec    edx
  40fcbe:	je     0x40fd3e
  40fcc0:	mov    edi,DWORD PTR [edi+0x45]
  40fcc3:	jg     0x40fd2d
  40fcc5:	inc    ecx
  40fcc6:	or     bh,BYTE PTR [eax]
  40fcc8:	adc    al,0x1d
  40fcca:	xor    BYTE PTR [eax+0x29],dh
  40fccd:	push   cs
  40fcce:	or     edx,0xfffffff5
  40fcd1:	mov    ?,esi
  40fcd3:	xchg   DWORD PTR [ebx],esi
  40fcd5:	repz out 0x1b,eax
  40fcd8:	add    DWORD PTR [ebx-0x2],ecx
  40fcdb:	add    BYTE PTR ds:0xd8564a36,cl
  40fce1:	inc    edx
  40fce2:	cdq    
  40fce3:	fisubr DWORD PTR [ebx-0x5]
  40fce6:	xchg   esp,eax
  40fce7:	test   BYTE PTR [eax+0x48],ah
  40fcea:	adc    ebp,ebx
  40fcec:	out    dx,al
  40fced:	sti    
  40fcee:	mov    eax,0x17428602
  40fcf3:	sbb    BYTE PTR [ecx+0x75],cl
  40fcf6:	jge    0x40fc86
  40fcf8:	add    eax,0x3841b533
  40fcfd:	sti    
  40fcfe:	adc    DWORD PTR [ecx-0x66],eax
  40fd01:	ds repz ret 
  40fd04:	sub    eax,eax
  40fd06:	sub    eax,0xed020b0f
  40fd0b:	xchg   esi,eax
  40fd0c:	inc    esp
  40fd0d:	push   0xf791e0e7
  40fd12:	loop   0x40fcca
  40fd14:	jge    0x40fd11
  40fd16:	mov    esi,0x4a030c3f
  40fd1b:	in     al,dx
  40fd1c:	gs inc edx
  40fd1e:	loope  0x40fcad
  40fd20:	fsqrt  
  40fd22:	xchg   esi,eax
  40fd23:	aas    
  40fd24:	loope  0x40fd8c
  40fd26:	pop    esi
  40fd27:	inc    eax
  40fd28:	loopne 0x40fcf6
  40fd2a:	xchg   esi,eax
  40fd2b:	xor    esp,ecx
  40fd2d:	mov    ah,BYTE PTR [ebp+0x20c88603]
  40fd33:	sub    dh,BYTE PTR [edi]
  40fd35:	sti    
  40fd36:	hlt    
  40fd37:	aas    
  40fd38:	pop    edx
  40fd39:	(bad)  
  40fd3a:	or     eax,0x9051ad84
  40fd3f:	fld    DWORD PTR [eax]
  40fd41:	pop    eax
  40fd42:	int    0x26
  40fd44:	inc    eax
  40fd45:	cmp    edx,ebp
  40fd47:	test   eax,0x68faa1a3
  40fd4c:	cmp    al,0xe
  40fd4e:	jge    0x40fd2d
  40fd50:	mov    DWORD PTR [eax-0x360e1a8c],edx
  40fd56:	out    0x57,al
  40fd58:	mov    edi,edx
  40fd5a:	test   BYTE PTR [edx],0x62
  40fd5d:	dec    edi
  40fd5e:	dec    edx
  40fd5f:	pop    esp
  40fd60:	push   ss
  40fd61:	mov    ds:0xa9a6f61d,al
  40fd66:	(bad)  
  40fd67:	hlt    
  40fd68:	in     eax,0x17
  40fd6a:	inc    ebp
  40fd6b:	pusha  
  40fd6c:	in     eax,dx
  40fd6d:	cmp    eax,DWORD PTR [eax]
  40fd6f:	dec    esi
  40fd70:	cli    
  40fd71:	test   DWORD PTR [edi-0x38be0204],edi
  40fd77:	dec    ebx
  40fd78:	repnz adc bh,BYTE PTR [edi-0xe]
  40fd7c:	pusha  
  40fd7d:	(bad)  
  40fd7e:	std    
  40fd7f:	add    esi,DWORD PTR [esi]
  40fd81:	dec    ecx
  40fd82:	dec    ebx
  40fd83:	jg     0x40fd39
  40fd85:	jns    0x40fd19
  40fd87:	repz aam 0x5d
  40fd8a:	imul   ecx,DWORD PTR [edx],0xffffffc3
  40fd8d:	sub    edx,0x24
  40fd90:	loop   0x40fd19
  40fd92:	inc    edx
  40fd93:	jg     0x40fdce
  40fd95:	(bad)  
  40fd96:	out    dx,eax
  40fd97:	jle    0x40fd76
  40fd99:	or     al,0x7f
  40fd9b:	add    ah,BYTE PTR [edx-0x6]
  40fd9e:	int3   
  40fd9f:	aam    0x41
  40fda1:	scas   al,BYTE PTR es:[edi]
  40fda2:	out    0xa,eax
  40fda4:	jmp    0x7efafea9
  40fda9:	in     eax,0x4b
  40fdab:	jle    0x40fdc4
  40fdad:	call   0xee7fd5f
  40fdb2:	xchg   ecx,eax
  40fdb3:	int3   
  40fdb4:	jne    0x40fdb3
  40fdb6:	mov    BYTE PTR [esi-0x6fb18b0a],al
  40fdbc:	loop   0x40fddd
  40fdbe:	ds clc 
  40fdc0:	repz arpl WORD PTR [edi-0x32b8acac],di
  40fdc7:	or     cl,cl
  40fdc9:	in     eax,dx
  40fdca:	test   DWORD PTR [edi-0x6d4d3a81],ecx
  40fdd0:	push   edi
  40fdd1:	aaa    
  40fdd2:	mov    ecx,0xaf0070cc
  40fdd7:	int3   
  40fdd8:	cld    
  40fdd9:	mul    DWORD PTR [ecx]
  40fddb:	pop    esp
  40fddc:	cld    
  40fddd:	lea    ebp,[ebp-0x200fd8b0]
  40fde3:	mov    bh,0x8
  40fde5:	xor    dh,ah
  40fde7:	mov    eax,DWORD PTR [esp+edx*4]
  40fdea:	stos   BYTE PTR es:[edi],al
  40fdeb:	sub    bl,0xef
  40fdee:	pop    ds
  40fdef:	or     ah,BYTE PTR ds:[esi-0x24]
  40fdf3:	cmp    eax,0xf35b7323
  40fdf8:	mov    bl,0xeb
  40fdfa:	call   0xd0f4:0x2b75f4cb
  40fe01:	jmp    0x40fe1f
  40fe03:	rcl    BYTE PTR [esp+ebp*1-0x4c],cl
  40fe07:	mov    ebp,ebx
  40fe09:	rol    DWORD PTR [eax],cl
  40fe0b:	pop    edi
  40fe0c:	or     cl,BYTE PTR ds:[edi]
  40fe0f:	clc    
  40fe10:	cmp    al,0x58
  40fe12:	mov    ebp,DWORD PTR [eax+0x2d]
  40fe15:	imul   eax,ebp,0xc08e38c0
  40fe1b:	inc    ecx
  40fe1c:	pushf  
  40fe1d:	hlt    
  40fe1e:	jne    0x40fdd3
  40fe20:	adc    BYTE PTR [ecx-0x18],bl
  40fe23:	lds    eax,FWORD PTR [ecx+0x25ffff4]
  40fe29:	lock add edx,edi
  40fe2c:	loop   0x40fdaf
  40fe2e:	inc    esi
  40fe2f:	out    dx,al
  40fe30:	shl    BYTE PTR [ebx-0x34c92b8c],0x57
  40fe37:	shr    BYTE PTR [esi-0x4d],1
  40fe3a:	push   ebx
  40fe3b:	pop    ds
  40fe3c:	ror    BYTE PTR [ebp+0x4],cl
  40fe3f:	pop    ds
  40fe40:	dec    eax
  40fe41:	mov    esp,0x81149c46
  40fe46:	inc    ebp
  40fe47:	mov    bh,0x35
  40fe49:	and    ebp,eax
  40fe4b:	xor    esp,DWORD PTR [edi]
  40fe4d:	repz inc DWORD PTR [esi+0x305f07db]
  40fe54:	xor    al,0x3f
  40fe56:	rol    DWORD PTR [edx+0x728adceb],0x6b
  40fe5d:	cmp    ch,BYTE PTR [ebx+0x5307e985]
  40fe63:	fcom   DWORD PTR [eax-0x7d]
  40fe66:	inc    esp
  40fe67:	jbe    0x40fea3
  40fe69:	es cdq 
  40fe6b:	in     al,0xe9
  40fe6d:	pop    es
  40fe6e:	mov    DWORD PTR [eax],eax
  40fe70:	ret    
  40fe71:	mov    ebp,0xe0dbbf8b
  40fe76:	stc    
  40fe77:	mov    edi,0xc005f
  40fe7c:	xchg   BYTE PTR [ebx+edi*4-0x11],dh
  40fe80:	add    edi,DWORD PTR [eax-0x4e]
  40fe83:	or     eax,0xdc269ffd
  40fe88:	cmc    
  40fe89:	pusha  
  40fe8a:	xor    eax,0x8b7dcb88
  40fe8f:	mov    edi,0x7436e393
  40fe94:	and    al,BYTE PTR [edx-0x7ef64bf9]
  40fe9a:	and    ecx,ebx
  40fe9c:	add    eax,0x79ff53ff
  40fea1:	scas   al,BYTE PTR es:[edi]
  40fea2:	pop    ss
  40fea3:	add    BYTE PTR [edx-0x30],bh
  40fea6:	mov    bh,ch
  40fea8:	xchg   edi,edx
  40feaa:	(bad)  [edx+0x5e84f163]
  40feb0:	jle    0x40fe6e
  40feb2:	ss adc al,0xe2
  40feb5:	sti    
  40feb6:	(bad)  
  40feb7:	inc    DWORD PTR [edi+eax*8]
  40feba:	das    
  40febb:	dec    DWORD PTR [edx]
  40febd:	lock mov ebx,0x23770d32
  40fec3:	or     cl,0xdd
  40fec6:	mov    al,ch
  40fec8:	jns    0x40ff0c
  40feca:	push   edi
  40fecb:	sbb    BYTE PTR [eax],bh
  40fecd:	(bad)  
  40fece:	aam    0x16
  40fed0:	pop    edx
  40fed1:	push   eax
  40fed2:	and    DWORD PTR [eax+eax*1],eax
  40fed5:	add    eax,0xc986d5ff
  40feda:	outs   dx,BYTE PTR ds:[esi]
  40fedb:	sar    BYTE PTR [edx+ecx*8],1
  40fede:	cli    
  40fedf:	js     0x40fea7
  40fee1:	jno    0x40fea4
  40fee3:	mov    ds:0xe1428658,eax
  40fee8:	clc    
  40fee9:	ret    0xff2
  40feec:	pop    esi
  40feed:	ins    BYTE PTR es:[edi],dx
  40feee:	inc    eax
  40feef:	js     0x40feb7
  40fef1:	push   ecx
  40fef2:	leave  
  40fef3:	es pusha 
  40fef5:	mov    ah,0xf7
  40fef7:	(bad)  
  40fef8:	xor    esi,DWORD PTR [edi-0x7e]
  40fefb:	loope  0x40fe85
  40fefd:	mov    edx,0xd458b0f2
  40ff02:	push   0xffffffad
  40ff04:	add    eax,DWORD PTR [esi-0x3d70efbe]
  40ff0a:	retf   0x9359
  40ff0d:	push   ecx
  40ff0e:	inc    ecx
  40ff0f:	loope  0x40ff01
  40ff11:	fld    DWORD PTR [edx+0x53]
  40ff14:	sti    
  40ff15:	retf   0x2b52
  40ff18:	(bad)  
  40ff19:	(bad)  
  40ff1a:	cmp    eax,0xca4196fc
  40ff1f:	xchg   esi,eax
  40ff20:	cmp    al,0xe
  40ff22:	ins    DWORD PTR es:[edi],dx
  40ff23:	adc    DWORD PTR [edx+0xca1e252],ecx
  40ff29:	sbb    DWORD PTR [eax],eax
  40ff2b:	jnp    0x40fef3
  40ff2d:	mov    ecx,0xc203a
  40ff32:	outs   dx,BYTE PTR ds:[esi]
  40ff33:	loopne 0x40ff38
  40ff35:	xchg   bl,cl
  40ff37:	scas   al,BYTE PTR es:[edi]
  40ff38:	pop    edi
  40ff39:	add    BYTE PTR [ebx+eax*1+0x6cb851b1],al
  40ff40:	icebp  
  40ff41:	out    dx,eax
  40ff42:	stc    
  40ff43:	imul   ecx,DWORD PTR [edx],0xffffffef
  40ff46:	jmp    0x40ff11
  40ff48:	dec    ebp
  40ff49:	xor    eax,0x9f75c5cc
  40ff4e:	pop    ecx
  40ff4f:	lods   al,BYTE PTR ds:[esi]
  40ff50:	ins    BYTE PTR es:[edi],dx
  40ff51:	xchg   edx,eax
  40ff52:	xchg   ecx,eax
  40ff53:	idiv   DWORD PTR [edi-0x25]
  40ff56:	jecxz  0x40ff44
  40ff58:	iret   
  40ff59:	call   0x3c4841e3
  40ff5e:	scas   al,BYTE PTR es:[edi]
  40ff5f:	retf   0xb55d
  40ff62:	lea    ebp,[ebp+0x6f030e44]
  40ff68:	fiadd  WORD PTR [edi+0x69]
  40ff6b:	add    eax,0xf5e46c04
  40ff70:	repz jmp 0xd0b53a9d
  40ff76:	jl     0x40ff37
  40ff78:	xchg   esi,eax
  40ff79:	jmp    0x2cc04203
  40ff7e:	data16 jne 0x40ffb7
  40ff81:	fld    DWORD PTR [ebp-0x77f972bb]
  40ff87:	inc    edx
  40ff88:	or     ah,BYTE PTR [edi+0x74095286]
  40ff8e:	inc    edi
  40ff8f:	inc    esi
  40ff90:	pop    edx
  40ff91:	jo     0x40ff72
  40ff93:	icebp  
  40ff94:	loop   0x40ff73
  40ff96:	jmp    0xcfbe:0xaa62f3f5
  40ff9d:	mov    ebp,0x753b2900
  40ffa2:	fnstenv [edi]
  40ffa4:	arpl   WORD PTR [edi+0x7dcb7d2f],ax
  40ffaa:	inc    ecx
  40ffab:	push   DWORD PTR [eax+0x3]
  40ffae:	xchg   ebx,eax
  40ffaf:	xchg   ecx,eax
  40ffb0:	cmc    
  40ffb1:	jge    0x40ffc4
  40ffb3:	mov    ah,0xf4
  40ffb5:	sbb    eax,0xa8277d5
  40ffba:	push   0x46
  40ffbc:	dec    ecx
  40ffbd:	lea    eax,[eax]
  40ffbf:	outs   dx,DWORD PTR ds:[esi]
  40ffc0:	mov    dl,0x5
  40ffc2:	inc    edi
  40ffc3:	cs adc al,0x1
  40ffc7:	lahf   
  40ffc8:	inc    ecx
  40ffc9:	das    
  40ffca:	jge    0x40ff9b
  40ffcc:	scas   eax,DWORD PTR es:[edi]
  40ffcd:	jmp    0xaedb:0xf4a780eb
  40ffd4:	inc    ecx
  40ffd5:	or     al,BYTE PTR [ebx]
  40ffd7:	mov    ah,0xf4
  40ffd9:	lock jb 0x40ff72
  40ffdc:	les    ecx,FWORD PTR [esi+0x10]
  40ffdf:	(bad)  
  40ffe0:	jle    0x40ffb2
  40ffe2:	add    DWORD PTR [edi+0x41],ebp
  40ffe5:	pop    es
  40ffe6:	ret    
  40ffe7:	jmp    0x5b41:0x5f01d0c8
  40ffee:	call   0x356beb
  40fff3:	hlt    
  40fff4:	ds cmp al,al
  40fff7:	jecxz  0x40ff7a
  40fff9:	ja     0x410007
  40fffb:	clc    
  40fffc:	or     DWORD PTR [ebx+ecx*4],eax
  40ffff:	jb     0x41004f
  410001:	push   edi
  410002:	call   0xf3e09f07
  410007:	dec    DWORD PTR [esi+eiz*1+0x3898b297]
  41000e:	xchg   BYTE PTR [ebp-0x3d],dh
  410011:	sub    DWORD PTR [ebx+0x59],edi
  410014:	das    
  410015:	inc    ecx
  410016:	loope  0x40fff8
  410018:	push   ds
  410019:	inc    ecx
  41001a:	or     dh,BYTE PTR [ebx]
  41001c:	dec    ebp
  41001d:	(bad)  
  41001e:	enter  0x42f7,0x91
  410022:	xor    BYTE PTR [ebp-0x41],dl
  410025:	lods   al,BYTE PTR ds:[esi]
  410026:	and    eax,0x487f466
  41002b:	test   BYTE PTR [esi+edi*1+0x3ef5000a],ah
  410032:	push   edx
  410033:	push   si
  410035:	add    bh,BYTE PTR [eax-0x366a79f1]
  41003b:	daa    
  41003c:	pusha  
  41003d:	pusha  
  41003e:	shl    DWORD PTR [esi],0x28
  410041:	sub    ch,BYTE PTR [esi]
  410043:	pop    es
  410044:	and    al,dh
  410046:	dec    esi
  410047:	jmp    DWORD PTR gs:[ebp+0x8408c79]
  41004e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41004f:	add    esi,DWORD PTR [esi]
  410051:	outs   dx,BYTE PTR ds:[esi]
  410052:	mov    bl,0xb7
  410054:	lods   eax,DWORD PTR ds:[esi]
  410055:	inc    ebp
  410056:	test   al,0x38
  410058:	adc    BYTE PTR [edx+0x1],dl
  41005b:	test   dl,ch
  41005d:	jmp    0x152d0069
  410062:	shl    BYTE PTR [ebp+0xf],1
  410065:	pop    ds
  410066:	jp     0x410076
  410068:	add    BYTE PTR [eax],bh
  41006a:	and    al,0xf4
  41006c:	gs std 
  41006e:	push   ebx
  41006f:	out    dx,eax
  410070:	gs inc edi
  410072:	retf   
  410073:	push   es
  410074:	lea    bp,[edx-0x6c347758]
  41007b:	mov    eax,DWORD PTR [ebp-0x61]
  41007e:	aas    
  41007f:	push   ds
  410080:	push   eax
  410081:	adc    esp,DWORD PTR [edi]
  410083:	jb     0x4100d4
  410085:	cmp    DWORD PTR [edi],ecx
  410087:	clc    
  410088:	adc    eax,0xb702e9c6
  41008d:	ret    
  41008e:	sub    eax,0xf92c38d
  410093:	or     eax,ebp
  410095:	aam    0xb0
  410097:	pop    es
  410098:	add    BYTE PTR [ecx-0x4b0b12d],al
  41009e:	pop    esi
  41009f:	(bad)  
  4100a0:	sti    
  4100a1:	add    DWORD PTR [ebp+0x26],edi
  4100a4:	dec    ecx
  4100a5:	mov    dl,0xea
  4100a7:	pop    es
  4100a8:	mov    ecx,DWORD PTR [ebx-0x1f]
  4100ab:	xor    ch,BYTE PTR [edi]
  4100ad:	sti    
  4100ae:	rol    DWORD PTR [edx],cl
  4100b0:	push   0xffffff85
  4100b2:	inc    edx
  4100b3:	enter  0x1a86,0x9b
  4100b7:	adc    eax,0xaec9d039
  4100bc:	sub    esp,ecx
  4100be:	retf   
  4100bf:	fld    QWORD PTR [edx]
  4100c1:	xchg   bl,dh
  4100c3:	jbe    0x4100d4
  4100c5:	or     edi,DWORD PTR [esi+0x3d]
  4100c8:	lods   al,BYTE PTR ds:[esi]
  4100c9:	sbb    DWORD PTR [ecx],edi
  4100cb:	loope  0x4100d0
  4100cd:	add    ch,bh
  4100cf:	add    ecx,DWORD PTR [edx]
  4100d1:	dec    BYTE PTR [ebp+0x42]
  4100d4:	loope  0x410155
  4100d6:	fldcw  WORD PTR [esi+0x29]
  4100d9:	cmp    DWORD PTR [edx],ebx
  4100db:	dec    esi
  4100dc:	pushf  
  4100dd:	repz adc al,BYTE PTR [edx-0x1f]
  4100e1:	shr    bh,1
  4100e3:	sub    DWORD PTR es:[edi-0x7999352e],eax
  4100ea:	fdecstp 
  4100ec:	mov    esp,0x145e6138
  4100f1:	add    al,0x86
  4100f3:	mov    esi,0xf37fafa1
  4100f8:	push   ds
  4100f9:	adc    ch,bh
  4100fb:	test   ch,ch
  4100fd:	mov    WORD PTR [esi-0x2671a975],es
  410103:	test   BYTE PTR [eax+edi*1+0x7fd1f3d7],0xf1
  41010b:	inc    edx
  41010c:	data16 add al,0x87
  41010f:	inc    edx
  410110:	loope  0x41009e
  410112:	call   0x13c2:0x25aee0ee
  410119:	add    al,0x81
  41011b:	mov    ebp,0x42860335
  410120:	dec    ecx
  410121:	jmp    0x80224217
  410126:	cmp    DWORD PTR [ebx+0x6d],eax
  410129:	inc    eax
  41012a:	icebp  
  41012b:	repnz or ch,cl
  41012e:	add    BYTE PTR [esi-0xe],bh
  410131:	cli    
  410132:	add    BYTE PTR [esi-0x7b10337d],bl
  410138:	leave  
  410139:	jne    0x410150
  41013b:	popf   
  41013c:	or     eax,0xc785e954
  410141:	rcl    dl,cl
  410143:	pop    esi
  410144:	outs   dx,DWORD PTR ds:[esi]
  410145:	jns    0x410107
  410147:	lock jmp 0xdd60:0xf002877c
  41014f:	outs   dx,BYTE PTR ds:[esi]
  410150:	outs   dx,BYTE PTR ds:[esi]
  410151:	loop   0x4101af
  410153:	mov    DWORD PTR [ebx+0x5a],0x1c3677e6
  41015a:	sub    DWORD PTR [edx+0x6e5cebf],ecx
  410160:	mov    bl,0x7e
  410162:	fild   WORD PTR [eax-0x3d]
  410165:	int3   
  410166:	mov    ds:0x20a4283,al
  41016b:	das    
  41016c:	cli    
  41016d:	js     0x410106
  41016f:	popf   
  410170:	xor    esp,esi
  410172:	daa    
  410173:	xchg   edx,eax
  410174:	ret    0xf174
  410177:	test   BYTE PTR [eax+0x24],bh
  41017a:	adc    BYTE PTR [ecx-0x7a16f5f4],bl
  410180:	inc    ebp
  410181:	out    dx,eax
  410182:	sar    BYTE PTR [ebx+esi*2+0x11],cl
  410186:	jb     0x4101cf
  410188:	cli    
  410189:	popa   
  41018a:	test   eax,0xe90a42cd
  41018f:	test   BYTE PTR ds:0x42bd5e86,al
  410195:	or     ch,cl
  410197:	add    BYTE PTR [eax-0x16],cl
  41019a:	inc    esi
  41019b:	fwait
  41019c:	pop    ecx
  41019d:	lock fucomip st,st(3)
  4101a0:	pop    ss
  4101a1:	mov    dl,0x8e
  4101a3:	sub    DWORD PTR [esi],esi
  4101a5:	inc    ebp
  4101a6:	repz add BYTE PTR [edx],dh
  4101a9:	add    BYTE PTR cs:[ebp+0x47],0x15
  4101ae:	in     al,dx
  4101af:	lods   eax,DWORD PTR ds:[esi]
  4101b0:	adc    BYTE PTR [esi+0xa],al
  4101b3:	push   ebx
  4101b4:	inc    edi
  4101b5:	aaa    
  4101b6:	mov    ds:0x7ebba0ff,eax
  4101bb:	hlt    
  4101bc:	ja     0x410151
  4101be:	pop    esp
  4101bf:	add    bh,bl
  4101c1:	mov    esp,0xb862087e
  4101c6:	sbb    edx,DWORD PTR [edi-0x80]
  4101c9:	push   ebx
  4101ca:	out    0x12,al
  4101cc:	fild   WORD PTR [ebp+0x60]
  4101cf:	adc    al,0xb0
  4101d1:	mov    dl,0xeb
  4101d3:	sub    DWORD PTR [ecx+0x42],0x5c
  4101d7:	call   FWORD PTR [edx-0x60bfe207]
  4101dd:	(bad)  
  4101de:	(bad)  
  4101df:	or     al,0x1a
  4101e1:	test   DWORD PTR [esi+0xd],edi
  4101e4:	lds    edx,FWORD PTR [edx+0x5a]
  4101e7:	push   esi
  4101e8:	inc    eax
  4101e9:	push   edx
  4101ea:	ds push ss
  4101ec:	lahf   
  4101ed:	inc    esi
  4101ee:	xchg   esp,eax
  4101f0:	arpl   WORD PTR [eax],ax
  4101f2:	cmc    
  4101f3:	adc    eax,0x4a531f
  4101f8:	shl    BYTE PTR [edx+0x5b],cl
  4101fb:	cld    
  4101fc:	add    al,dh
  4101fe:	aaa    
  4101ff:	jmp    0x410244
  410201:	sub    al,0x46
  410203:	or     cl,BYTE PTR [ebx-0x76b7d98e]
  410209:	bound  esp,QWORD PTR [esi]
  41020b:	xor    BYTE PTR [ebp-0x19],bl
  41020e:	inc    edi
  41020f:	mov    BYTE PTR [eax],dh
  410211:	mov    dl,0x38
  410213:	hlt    
  410214:	jmp    0x4b47e9
  410219:	xchg   edx,eax
  41021a:	add    al,BYTE PTR [ebx+esi*1]
  41021d:	les    edx,FWORD PTR ds:0xe7865d83
  410223:	pop    ds
  410224:	icebp  
  410225:	pusha  
  410226:	fild   DWORD PTR [edi]
  410228:	mov    DWORD PTR [ebx+0xf],eax
  41022b:	icebp  
  41022c:	ret    0xb27a
  41022f:	neg    BYTE PTR [esi+edx*4-0x4f]
  410233:	sti    
  410234:	mov    WORD PTR [eax+0x10],fs
  410237:	sub    edi,0x4582ef6c
  41023d:	cmp    DWORD PTR [eax+0x1773fed7],0x5c864006
  410247:	xor    ecx,DWORD PTR [ebx]
  410249:	add    ebx,DWORD PTR [ebx]
  41024b:	mov    ds:0x355a450d,eax
  410250:	fiadd  DWORD PTR [edi+0x433b07db]
  410256:	or     edi,DWORD PTR [edx-0x78125221]
  41025c:	jge    0x4102dc
  41025e:	(bad)  [ebx-0x7276fff2]
  410264:	sbb    cl,BYTE PTR [ebx+0x4535e9cb]
  41026a:	mov    ds,ecx
  41026c:	pop    ds
  41026d:	icebp  
  41026e:	rcr    cl,1
  410270:	pop    es
  410271:	push   ebx
  410273:	or     eax,0xa1163320
  410278:	cmp    eax,0x1ff5d38c
  41027d:	pop    ss
  41027e:	mov    ecx,0xcb8b07d9
  410283:	loope  0x410211
  410285:	jbe    0x410225
  410287:	aaa    
  410288:	cmp    eax,0xc80c2a14
  41028d:	(bad)  
  41028e:	cld    
  41028f:	es pop edx
  410291:	imul   edx,DWORD PTR [edx-0x49f1b1a4],0xb103355c
  41029b:	inc    edx
  41029c:	ins    BYTE PTR es:[edi],dx
  41029d:	orps   xmm3,XMMWORD PTR [eax-0x5f]
  4102a1:	add    eax,DWORD PTR ds:0xcdee07
  4102a7:	push   esi
  4102a8:	push   ecx
  4102a9:	adc    al,BYTE PTR [esi+0x42]
  4102ac:	jle    0x41031d
  4102ae:	pop    ecx
  4102af:	out    dx,al
  4102b0:	xor    al,0x35
  4102b2:	ret    
  4102b3:	test   DWORD PTR [ebx+eax*1],edi
  4102b6:	out    dx,al
  4102b7:	mov    edi,0xef8602ef
  4102bc:	xchg   esi,eax
  4102bd:	daa    
  4102be:	jmp    0xc876479e
  4102c3:	out    dx,eax
  4102c4:	xchg   esi,eax
  4102c5:	pop    ds
  4102c6:	add    BYTE PTR [ecx-0x47cacb1d],ch
  4102cc:	mov    esp,0x905034a6
  4102d1:	test   al,0x4a
  4102d3:	(bad)  
  4102d4:	push   edx
  4102d5:	loope  0x4102a5
  4102d7:	or     al,0xdf
  4102d9:	bound  ebp,QWORD PTR [eax]
  4102db:	inc    ebp
  4102dc:	inc    esp
  4102dd:	loope  0x4102e2
  4102df:	xor    eax,0xd2873c98
  4102e4:	add    bl,bh
  4102e6:	xor    al,0x80
  4102e8:	ficom  DWORD PTR [ebp+0x2e]
  4102eb:	jns    0x4102dc
  4102ed:	lock pop eax
  4102ef:	add    al,BYTE PTR [ebp-0x73012c8f]
  4102f5:	mov    cl,0x8a
  4102f7:	ret    0x6ade
  4102fa:	(bad)  
  4102fb:	push   ebp
  4102fc:	mov    ecx,0x8cfe3c4e
  410301:	xchg   ebp,eax
  410302:	sub    ebp,ebp
  410304:	mov    esp,ecx
  410306:	add    ebp,DWORD PTR [eax-0x4a8bd9d7]
  41030c:	xor    bh,BYTE PTR [esi-0x42]
  41030f:	loope  0x4102a2
  410311:	mov    si,0x9235
  410315:	or     al,BYTE PTR [ecx-0x16f6c3d7]
  41031b:	cdq    
  41031c:	scas   eax,DWORD PTR es:[edi]
  41031d:	jle    0x410325
  41031f:	pop    ebx
  410320:	jbe    0x410318
  410322:	pop    esi
  410323:	fdiv   st,st(2)
  410325:	loop   0x410388
  410327:	ins    BYTE PTR es:[edi],dx
  410328:	out    dx,eax
  410329:	repz dec esi
  41032b:	add    BYTE PTR [eax],ch
  41032d:	repz sub DWORD PTR [ebp+esi*4-0x4d719019],0xb19481f0
  410339:	mov    edx,0x8e0c3155
  41033e:	div    BYTE PTR [eax+edx*2+0x3]
  410342:	neg    BYTE PTR [esi]
  410344:	xchg   edx,eax
  410345:	jg     0x4102cc
  410347:	lods   al,BYTE PTR ds:[esi]
  410348:	jno    0x4103c9
  41034a:	loop   0x41035c
  41034c:	pop    DWORD PTR [ecx+0xa]
  41034f:	ins    DWORD PTR es:[edi],dx
  410350:	inc    ebp
  410351:	jae    0x410366
  410353:	(bad)  
  410354:	fucomi st,st(2)
  410356:	repz jl 0x4103ca
  410359:	out    0x5d,eax
  41035b:	inc    eax
  41035c:	test   DWORD PTR [edx-0xd],eax
  41035f:	pop    esp
  410360:	dec    esi
  410361:	mov    edx,0x876acd4d
  410366:	mov    ds:0x55bab5d6,eax
  41036b:	aad    0xfb
  41036d:	mov    ?,edx
  41036f:	jo     0x4103c8
  410371:	jmp    0x863b:0xe5ae34f3
  410378:	xchg   ebp,eax
  410379:	in     al,dx
  41037a:	pusha  
  41037b:	fadd   DWORD PTR [esi]
  41037d:	outs   dx,DWORD PTR ds:[esi]
  41037e:	(bad)  
  41037f:	inc    ecx
  410380:	jb     0x41039f
  410382:	or     al,0xe8
  410384:	test   DWORD PTR [ecx-0x6ce7abb],edi
  41038a:	mov    dl,0x25
  41038c:	jmp    FWORD PTR ds:0x3800000a
  410392:	push   es
  410393:	int3   
  410394:	cmp    DWORD PTR [edx+0x720f5a36],ecx
  41039a:	sti    
  41039b:	jecxz  0x4103ed
  41039d:	test   al,0x6b
  41039f:	das    
  4103a0:	(bad)  
  4103a1:	test   al,0x31
  4103a3:	add    bh,0xcf
  4103a6:	ret    0xe84e
  4103a9:	cmp    al,0x12
  4103ab:	in     al,dx
  4103ac:	mov    ebx,0x83f43147
  4103b1:	mov    ds:0xaf75f33e,eax
  4103b6:	ins    DWORD PTR es:[edi],dx
  4103b7:	jecxz  0x4103a1
  4103b9:	mov    eax,ds:0xa8fff460
  4103be:	stos   DWORD PTR es:[edi],eax
  4103bf:	fucomip st,st(0)
  4103c1:	jns    0x410423
  4103c3:	hlt    
  4103c4:	push   DWORD PTR [eax-0x70]
  4103c7:	adc    dh,dh
  4103c9:	mov    al,ds:0x87752888
  4103ce:	pop    esp
  4103cf:	in     eax,0x1
  4103d1:	lahf   
  4103d2:	inc    ecx
  4103d3:	jg     0x41039b
  4103d5:	sbb    al,bl
  4103d7:	mov    bl,0xfd
  4103d9:	cwde   
  4103da:	xor    BYTE PTR [ebx+0x7eafee19],cl
  4103e0:	cli    
  4103e1:	dec    eax
  4103e2:	adc    BYTE PTR [ecx-0x37],dl
  4103e5:	fmul   QWORD PTR [edx]
  4103e7:	sub    esp,0x81fb25ec
  4103ed:	cmp    edx,ebp
  4103ef:	repz call FWORD PTR [edi+0x14]
  4103f3:	sbb    ecx,0x814f400
  4103f9:	push   esi
  4103fa:	cmp    BYTE PTR [ebx+0x303274d9],0x7e
  410401:	adc    ah,dl
  410403:	add    cl,BYTE PTR [edi+edi*8]
  410406:	jb     0x41044a
  410408:	pusha  
  410409:	add    eax,0x54163386
  41040e:	retf   0x7db
  410411:	test   BYTE PTR [esi-0x11],al
  410414:	mov    eax,ds:0xa35e9669
  410419:	and    edi,DWORD PTR [edx+0x53]
  41041c:	push   ss
  41041d:	xchg   edi,eax
  41041e:	sbb    edx,0x7
  410421:	call   DWORD PTR [ebp+0x62738af3]
  410427:	out    dx,eax
  410428:	cmp    BYTE PTR [edx-0x76],dh
  41042b:	add    edx,0xffffffc8
  41042e:	stc    
  41042f:	jnp    0x4104a5
  410431:	(bad)  
  410432:	call   FWORD PTR [esi-0x15]
  410435:	xchg   ebx,eax
  410436:	xchg   bl,bl
  410438:	pop    es
  410439:	call   0xfe79393e
  41043e:	or     eax,0x5af5822b
  410443:	out    dx,eax
  410444:	ror    DWORD PTR [edx+0x438aaac1],1
  41044a:	push   0xfffffffb
  41044c:	xlat   BYTE PTR ds:[ebx]
  41044d:	out    0xdc,eax
  41044f:	and    DWORD PTR [eax],edi
  410451:	(bad)  
  410452:	pop    eax
  410453:	push   ebx
  410454:	fisubr DWORD PTR [ebp+0x4373eba9]
  41045a:	add    BYTE PTR [edx+0x13],ch
  41045d:	fdivr  st,st(6)
  41045f:	adc    ecx,DWORD PTR [ebx]
  410461:	cmp    DWORD PTR [edx+eax*4-0x1c],esi
  410465:	mov    ebx,0xf6878907
  41046a:	out    0xa0,eax
  41046c:	sub    DWORD PTR [esi],ecx
  41046e:	add    BYTE PTR [ebx],cl
  410470:	xchg   esi,eax
  410471:	loop   0x41048a
  410473:	cld    
  410474:	mov    eax,ds:0xad3f8a16
  410479:	cmp    DWORD PTR [ecx+0x5ad85545],ecx
  41047f:	or     eax,0x82c1c407
  410484:	inc    edx
  410485:	loope  0x41045d
  410487:	cld    
  410488:	fisub  WORD PTR [eax+0x20]
  41048b:	popf   
  41048c:	xchg   esp,eax
  41048d:	xor    al,0x7d
  41048f:	sub    DWORD PTR [ecx-0x1b],ebx
  410492:	jle    0x41045e
  410494:	out    0x11,al
  410496:	ficomp DWORD PTR [edi+0x2030b0eb]
  41049c:	push   esi
  41049d:	or     eax,0x6e42c616
  4104a2:	inc    esp
  4104a3:	xchg   ebp,eax
  4104a4:	and    ah,BYTE PTR [edx-0x51]
  4104a7:	adc    eax,0x8603f143
  4104ac:	jne    0x4104a2
  4104ae:	cmp    BYTE PTR [edx-0x16],al
  4104b1:	loop   0x4104b5
  4104b3:	xchg   BYTE PTR [edx-0x4a],al
  4104b6:	add    DWORD PTR [ebp+0x4a7d4d75],ebx
  4104bc:	repnz clc 
  4104be:	dec    ecx
  4104bf:	add    BYTE PTR [ebx+0x46],dl
  4104c2:	or     BYTE PTR [edx-0x4],cl
  4104c5:	jmp    0x453a:0x8c284978
  4104cc:	pop    edx
  4104cd:	mov    bh,0xd
  4104cf:	test   DWORD PTR [ebp-0x440b44e2],ebp
  4104d5:	mov    bh,0x20
  4104d7:	jnp    0x41050b
  4104d9:	jmp    0x84fc:0xeba05c19
  4104e0:	xchg   ecx,eax
  4104e1:	dec    esp
  4104e2:	aam    0x85
  4104e4:	fwait
  4104e5:	inc    edx
  4104e6:	loope  0x4104eb
  4104e8:	sti    
  4104e9:	test   ebp,edx
  4104eb:	shr    edi,cl
  4104ed:	add    BYTE PTR [edi+0x12],0xd5
  4104f1:	pop    eax
  4104f2:	les    esi,FWORD PTR [eax]
  4104f4:	call   0xa1c6:0x69c3cf66
  4104fb:	add    BYTE PTR [edx],cl
  4104fd:	or     eax,0x4285e90b
  410502:	pusha  
  410503:	or     dl,cl
  410505:	xchg   dh,bl
  410507:	adc    esi,edx
  410509:	jp     0x4104fe
  41050b:	hlt    
  41050c:	cmp    DWORD PTR [ebp+0x4a],edx
  41050f:	jmp    0x37480416
  410514:	adc    BYTE PTR [ebp-0x7b],cl
  410517:	sub    al,0xce
  410519:	jnp    0x410572
  41051b:	adc    edx,DWORD PTR [edi-0x14]
  41051e:	sbb    eax,0xa827001
  410523:	fs add ch,al
  410526:	cmp    al,0x8e
  410528:	mov    eax,DWORD PTR [ebp-0x7f49f5be]
  41052e:	outs   dx,BYTE PTR ds:[esi]
  41052f:	fidivr WORD PTR [edi+0x425b047a]
  410535:	cmc    
  410536:	aas    
  410537:	cli    
  410538:	push   0xffffffb7
  41053a:	dec    ebp
  41053b:	add    esp,DWORD PTR [esi+0x61]
  41053e:	jmp    0x410533
  410540:	jmp    0x30cb41a0
  410545:	ins    BYTE PTR es:[edi],dx
  410546:	outs   dx,DWORD PTR ds:[esi]
  410547:	or     eax,0x7de39c69
  41054c:	in     al,dx
  41054d:	or     dh,bl
  41054f:	or     eax,0xc7b7bd9c
  410554:	ret    0x36c8
  410557:	or     DWORD PTR [esi+0x6a0a5884],ebp
  41055d:	push   edi
  41055e:	inc    esi
  41055f:	ja     0x410539
  410561:	sbb    BYTE PTR [edi+0x3d],ah
  410564:	adc    eax,0x479de2ae
  410569:	test   BYTE PTR [edx-0x79],al
  41056c:	loope  0x41051f
  41056e:	outs   dx,BYTE PTR ds:[esi]
  41056f:	int3   
  410570:	ret    0xbd4d
  410573:	mov    DWORD PTR [edx],0x853e3f
  410579:	sar    DWORD PTR [ebx],0x87
  41057c:	call   0x35886ceb
  410581:	cli    
  410582:	adc    DWORD PTR [edi-0xaf104bb],eax
  410588:	jne    0x41058a
  41058a:	push   ebx
  41058b:	add    BYTE PTR [edi+0x35],0xfb
  41058f:	inc    edi
  410590:	xor    BYTE PTR ds:0x4a54bb,0x85
  410597:	sbb    esp,esi
  410599:	(bad)  
  41059a:	call   0xbfb:0x9431777e
  4105a1:	sub    ebp,esp
  4105a3:	(bad)
  4105a6:	pushf  
  4105a7:	mov    bl,0x3
  4105a9:	add    BYTE PTR [ecx-0x5],bl
  4105ac:	xlat   BYTE PTR ds:[ebx]
  4105ad:	jmp    0x75200128
  4105b2:	out    0x6c,eax
  4105b4:	pop    esi
  4105b5:	or     al,0x64
  4105b7:	sub    eax,0xcbcf55f4
  4105bc:	repz imul ebp,edx,0xffd44ec2
  4105c3:	adc    al,0x62
  4105c5:	jmp    DWORD PTR [eax-0x143f7170]
  4105cb:	inc    esp
  4105cc:	cmp    DWORD PTR [ebp+0x67],0x934586f9
  4105d3:	push   cs
  4105d4:	cmc    
  4105d5:	jne    0x41055a
  4105d7:	int3   
  4105d8:	adc    eax,0xf4191553
  4105dd:	adc    eax,0x4a540b
  4105e2:	and    al,0xfb
  4105e4:	sti    
  4105e5:	pop    esi
  4105e6:	data16 test bh,bh
  4105e9:	jmp    FWORD PTR [esi+edi*2-0x37]
  4105ed:	or     BYTE PTR [eax],al
  4105ef:	outs   dx,DWORD PTR ds:[esi]
  4105f0:	or     al,BYTE PTR [ecx+0x135a86ec]
  4105f6:	mov    ds:0x5607db84,eax
  4105fb:	add    esp,DWORD PTR [ebx+edi*4-0x1fa317bd]
  410602:	call   ebp
  410604:	icebp  
  410605:	mov    dh,BYTE PTR [esi+eiz*8+0x5efe2496]
  41060c:	ror    DWORD PTR [eax],cl
  41060e:	add    DWORD PTR [esi-0x790c5da4],eax
  410614:	pop    esp
  410615:	mov    ds:0x892c86fb,al
  41061a:	inc    esp
  41061b:	xor    cl,BYTE PTR [ebx+0x16]
  41061e:	xor    cl,BYTE PTR [esi+0x468407da]
  410624:	out    0x12,eax
  410626:	call   FWORD PTR [ebx+0x9c57057]
  41062c:	push   es
  41062d:	cmp    al,0x69
  41062f:	xchg   BYTE PTR [ebx-0x24793471],ch
  410635:	pop    es
  410636:	call   0x500d59
  41063b:	jmp    0x5e2841e5
  410640:	mov    bh,0x24
  410642:	(bad)  
  410643:	xor    eax,0xd1abb283
  410648:	pop    ss
  410649:	(bad)
  41064c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41064d:	jo     0x41063a
  41064f:	add    eax,0x801f3f
  410654:	stos   BYTE PTR es:[edi],al
  410655:	outs   dx,BYTE PTR ds:[esi]
  410656:	add    al,BYTE PTR [eax]
  410658:	xchg   BYTE PTR [ebp+ebx*8-0x146904aa],ch
  41065f:	adc    edx,DWORD PTR [ebp-0xf]
  410662:	fmul   DWORD PTR [eax-0x180008ee]
  410668:	inc    ecx
  410669:	int3   
  41066a:	pop    es
  41066b:	add    BYTE PTR [edx],al
  41066d:	inc    edx
  41066e:	mov    eax,ds:0xe1cd05fd
  410673:	add    eax,DWORD PTR [esi+0x71d6a6da]
  410679:	call   0x873f52e6
  41067e:	add    eax,0xd870f0c
  410683:	adc    al,0x50
  410685:	add    al,0xd2
  410687:	mov    dh,0x6f
  410689:	fisubr DWORD PTR [esi-0x33]
  41068c:	xchg   BYTE PTR [edx+0x33],al
  41068f:	icebp  
  410690:	pop    esp
  410691:	xchg   ecx,eax
  410692:	and    BYTE PTR [ebx+eiz*8],bl
  410695:	mov    dl,ah
  410697:	add    eax,DWORD PTR ds:0x960bcd77
  41069d:	mov    ebx,0xdb79e82d
  4106a2:	adc    BYTE PTR [esi],dh
  4106a4:	inc    esp
  4106a5:	inc    edx
  4106a6:	not    BYTE PTR [eax]
  4106a8:	push   ds
  4106a9:	jmp    0xb5c7099f
  4106ae:	in     eax,dx
  4106af:	out    0xa1,eax
  4106b1:	fidiv  DWORD PTR [ebp+0x60e7f86f]
  4106b7:	cmp    DWORD PTR [eax],eax
  4106b9:	xchg   bl,bl
  4106bb:	sbb    BYTE PTR [esi],dh
  4106bd:	les    eax,FWORD PTR [ebp+esi*4-0x7]
  4106c1:	jmp    0x8644e8aa
  4106c6:	ret    
  4106c7:	inc    eax
  4106c8:	das    
  4106c9:	fcom   QWORD PTR [esi]
  4106cb:	cmp    eax,DWORD PTR [ecx-0x7b]
  4106ce:	outs   dx,BYTE PTR ds:[esi]
  4106cf:	neg    DWORD PTR [ebx]
  4106d1:	dec    edi
  4106d2:	inc    ecx
  4106d3:	loope  0x4106d8
  4106d5:	add    eax,0x921918e4
  4106da:	lock and ah,al
  4106dd:	xor    dh,BYTE PTR [ecx]
  4106df:	jle    0x410699
  4106e1:	gs dec edx
  4106e3:	sbb    DWORD PTR [esp+edx*1+0x41],edi
  4106e7:	or     ch,cl
  4106e9:	ins    DWORD PTR es:[edi],dx
  4106ea:	mov    ds,WORD PTR [edx]
  4106ec:	jmp    0x6b05c276
  4106f1:	mov    esi,0x3693e227
  4106f6:	inc    edx
  4106f7:	or     dl,BYTE PTR [edx]
  4106f9:	push   esi
  4106fa:	and    ebx,DWORD PTR [edx]
  4106fc:	push   ebp
  4106fd:	xchg   edi,eax
  4106fe:	mov    ch,0x4e
  410700:	or     eax,0xe860927a
  410705:	inc    DWORD PTR [edx+0x52]
  410708:	pusha  
  410709:	inc    ecx
  41070a:	and    edx,DWORD PTR [edx]
  41070c:	shl    DWORD PTR [ebp-0x3f16f56c],0x73
  410713:	cs cmc 
  410715:	popf   
  410716:	rcr    DWORD PTR [eax-0x17],cl
  410719:	test   DWORD PTR [edi-0x3aff25ac],eax
  41071f:	mov    WORD PTR [edi-0x74],?
  410722:	push   eax
  410723:	add    DWORD PTR [edi],ecx
  410725:	jmp    0x39db2d2f
  41072a:	inc    esi
  41072b:	out    0xa,eax
  41072d:	neg    DWORD PTR [esi]
  41072f:	lea    ebx,[ebx+0x1a]
  410732:	mov    bl,0x90
  410734:	pop    ebx
  410735:	mov    dh,0x1d
  410737:	out    dx,eax
  410738:	clc    
  410739:	test   eax,0x4e5b8f85
  41073e:	nop
  41073f:	xchg   edx,eax
  410740:	sbb    BYTE PTR [ecx+0x2fabb85],ch
  410746:	xchg   ebx,eax
  410747:	jae    0x41075c
  410749:	ror    DWORD PTR [ebp+0x54],0xa
  41074d:	jmp    0xf95eef05
  410752:	xchg   esi,eax
  410753:	or     BYTE PTR [edx],0x64
  410756:	inc    ebp
  410757:	jae    0x41075b
  410759:	mov    esi,0xb51de7db
  41075e:	xchg   edi,eax
  41075f:	or     BYTE PTR [edx],0x0
  410762:	add    DWORD PTR [esi],edx
  410764:	push   ds
  410765:	mov    al,ds:0x5ef402bd
  41076a:	stc    
  41076b:	sbb    DWORD PTR [esi-0x75],0x30df668b
  410772:	rol    esp,0x5a
  410775:	(bad)  
  410776:	ror    BYTE PTR [esi+0x3cdfe85b],cl
  41077c:	or     DWORD PTR [eax],eax
  41077e:	cmp    BYTE PTR [ebx+ecx*1+0x4a6f006a],dh
  410785:	and    DWORD PTR [edx-0x7babbd92],0x8d1bb31f
  41078f:	mov    ds:0xa2ff438e,al
  410794:	out    0xf4,al
  410796:	jne    0x4107cf
  410798:	dec    edx
  410799:	xchg   ecx,eax
  41079a:	mov    ds:0xc08d421e,eax
  41079f:	xchg   ebx,eax
  4107a0:	inc    ebx
  4107a1:	aaa    
  4107a2:	shr    BYTE PTR [edi+0x45],0x9
  4107a6:	xor    ebp,edi
  4107a8:	daa    
  4107a9:	leave  
  4107aa:	add    al,0x1f
  4107ac:	adc    eax,DWORD PTR [ecx-0x4dd6314]
  4107b2:	sbb    DWORD PTR [ebx+0x12],0x13ef000a
  4107b9:	bound  edx,QWORD PTR [ebx+0x6a]
  4107bc:	mov    dl,0x27
  4107be:	sub    BYTE PTR [edi],dh
  4107c0:	dec    edx
  4107c1:	xor    DWORD PTR [edx],eax
  4107c3:	out    dx,al
  4107c4:	inc    ecx
  4107c5:	jg     0x41078d
  4107c7:	mov    ch,0xf
  4107c9:	add    DWORD PTR [ebx+eax*4-0x16],0xffffff86
  4107ce:	je     0x410753
  4107d0:	repnz pop ebx
  4107d2:	call   0x4a47ae
  4107d7:	sub    al,BYTE PTR [edx]
  4107d9:	sub    BYTE PTR [eax-0x7a],dl
  4107dc:	stos   DWORD PTR es:[edi],eax
  4107dd:	jnp    0x83603c8c
  4107e3:	(bad)  
  4107e4:	addr16 out 0x82,al
  4107e7:	add    BYTE PTR [edx],ah
  4107e9:	(bad)  
  4107ea:	sti    
  4107eb:	inc    DWORD PTR [edx]
  4107ed:	cwde   
  4107ee:	ror    DWORD PTR [edi-0x1],cl
  4107f1:	lahf   
  4107f2:	ror    DWORD PTR [edi],cl
  4107f4:	adc    edx,DWORD PTR [edi]
  4107f6:	jmp    0xfd17:0xea1f0f07
  4107fd:	xchg   esp,eax
  4107fe:	xlat   BYTE PTR ds:[ebx]
  4107ff:	mov    edx,es
  410801:	aas    
  410802:	push   ds
  410803:	(bad)  
  410804:	retf   0x637
  410807:	add    eax,0xc707db86
  41080c:	retf   0xee37
  41080f:	add    BYTE PTR [esi-0x3538f825],al
  410815:	not    ebx
  410817:	add    DWORD PTR [esi-0x5317f825],eax
  41081d:	fimul  WORD PTR [esi]
  41081f:	add    al,cl
  410821:	pusha  
  410822:	sub    bl,BYTE PTR [ebp+eax*2+0x46]
  410826:	jae    0x410813
  410828:	pop    es
  410829:	mov    bh,0xef
  41082b:	add    DWORD PTR [esi+0xe8472db],eax
  410831:	push   esi
  410832:	and    dh,bh
  410834:	push   esi
  410835:	xchg   ebx,eax
  410836:	cli    
  410837:	(bad)  
  410838:	stc    
  410839:	xor    DWORD PTR [ebx-0x41],0x7a
  41083d:	loopne 0x4108b1
  41083f:	mov    esi,gs
  410841:	jne    0x410863
  410843:	(bad)  
  410844:	out    dx,al
  410845:	push   ss
  410846:	push   ebp
  410847:	add    BYTE PTR [esi+0x544c32],al
  41084d:	std    
  41084e:	jle    0x4107dc
  410850:	jmp    0x4108bc
  410852:	enter  0x8ad9,0x3b
  410856:	inc    edx
  410857:	stc    
  410858:	jle    0x4107dd
  41085a:	lea    edi,[edx-0x48]
  41085d:	mov    ch,0xb6
  41085f:	scas   al,BYTE PTR es:[edi]
  410860:	sti    
  410861:	push   esi
  410862:	in     eax,0x9e
  410864:	test   DWORD PTR [eax+ecx*1],0x422f2a98
  41086b:	xchg   edi,eax
  41086c:	add    al,0x38
  41086e:	mov    ebx,0x9188339e
  410873:	xchg   ecx,eax
  410874:	add    BYTE PTR [ecx+0x34],0x66
  410878:	inc    edi
  410879:	jns    0x41085f
  41087b:	loope  0x4108f9
  41087d:	mov    esi,DWORD PTR [ebp-0x4829d3d2]
  410883:	push   ss
  410884:	clc    
  410885:	jmp    0x5a053f5c
  41088a:	in     eax,0x32
  41088c:	cld    
  41088d:	mov    ebx,0x2dc11e3
  410892:	add    edx,ebp
  410894:	jle    0x4108af
  410896:	inc    ebx
  410897:	loope  0x41089c
  410899:	or     eax,0x897da97e
  41089e:	mov    ch,0x36
  4108a0:	sbb    al,0xd7
  4108a2:	pop    eax
  4108a3:	rcr    DWORD PTR [ebp-0x6c736d83],0x4d
  4108aa:	inc    ebx
  4108ab:	loope  0x4108b0
  4108ad:	or     eax,DWORD PTR [ebx]
  4108af:	div    DWORD PTR [eax+0x657d6600]
  4108b5:	jmp    0x410901
  4108b7:	fcmovbe st,st(3)
  4108b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108ba:	mov    ah,0x7
  4108bc:	jns    0x41087d
  4108be:	fnsave [edi-0x4275fb23]
  4108c4:	inc    esp
  4108c5:	mov    al,0x45
  4108c7:	mov    al,0xa1
  4108c9:	jl     0x41088b
  4108cb:	fimul  DWORD PTR [edi+edx*1+0x6c0ae3d0]
  4108d2:	inc    edx
  4108d3:	outs   dx,DWORD PTR ds:[esi]
  4108d4:	cmp    edx,DWORD PTR [esi+0x3188e423]
  4108da:	outs   dx,DWORD PTR ds:[esi]
  4108db:	(bad)  [ebp+0x5]
  4108de:	pop    edi
  4108df:	in     al,0x7f
  4108e1:	adc    DWORD PTR [ecx],ebp
  4108e3:	in     al,0x7e
  4108e5:	leave  
  4108e6:	and    dh,BYTE PTR [esi+0x1e]
  4108e9:	sahf   
  4108ea:	add    bh,ah
  4108ec:	repz adc edi,ebx
  4108ef:	(bad)  
  4108f1:	test   BYTE PTR [ecx],0xa3
  4108f4:	jle    0x4108cf
  4108f6:	add    dh,BYTE PTR [edi+0x1e]
  4108f9:	sbb    al,dl
  4108fb:	pop    ebx
  4108fc:	retf   0x4a54
  4108ff:	jecxz  0x410934
  410901:	ror    DWORD PTR [edx],0xdd
  410904:	repz into 
  410906:	(bad)  ss:[ebx-0xc1b5170]
  41090d:	and    al,0x9e
  41090f:	mov    eax,0x2b54d
  410914:	dec    ebx
  410915:	repnz add BYTE PTR [eax],al
  410918:	fstp   TBYTE PTR [eax+0x4a]
  41091b:	mov    edx,0xf072fa86
  410920:	out    dx,al
  410921:	jg     0x410904
  410923:	mov    al,0x8e
  410925:	loop   0x410962
  410927:	cmp    ah,ah
  410929:	pop    ecx
  41092a:	rcr    DWORD PTR [edx+0xd72f27e],1
  410930:	jae    0x410925
  410932:	sbb    BYTE PTR [edx],cl
  410934:	in     al,0x7d
  410936:	fld    QWORD PTR [edx-0x2a99a3c3]
  41093c:	dec    esi
  41093d:	repz aam 0xf9
  410940:	mov    bh,0xc
  410942:	ret    
  410943:	test   bl,ah
  410945:	jge    0x410928
  410947:	mov    bh,0xe3
  410949:	pop    edx
  41094a:	add    bl,bh
  41094c:	arpl   WORD PTR [ebx-0xaf494f1],si
  410952:	call   DWORD PTR [eax+0x24087e1a]
  410958:	inc    ecx
  410959:	pop    esp
  41095a:	(bad)  
  41095b:	push   esi
  41095d:	cmp    BYTE PTR [ebp-0x51],0x65
  410961:	or     eax,0x5c3f0557
  410966:	(bad)  
  410967:	fucomip st,st(2)
  410969:	mov    es,eax
  41096b:	sbb    bh,cl
  41096d:	xor    al,BYTE PTR [edi-0x69]
  410970:	cwde   
  410971:	push   edx
  410972:	mov    ebx,DWORD PTR [ebx+ebp*2-0xce1f7ba]
  410979:	hlt    
  41097a:	ja     0x41097c
  41097c:	imul   esi,ebp,0xfffffff4
  41097f:	push   eax
  410980:	lahf   
  410981:	ret    
  410982:	mov    bl,0x75
  410984:	cwde   
  410985:	pop    ebp
  410986:	or     BYTE PTR [ebp+0x6a593682],cl
  41098c:	outs   dx,DWORD PTR ds:[esi]
  41098d:	sub    DWORD PTR [esp+eax*1+0x6c],edi
  410991:	sub    DWORD PTR [ebx+0x18],eax
  410994:	fiadd  DWORD PTR [esi-0x6c0fe282]
  41099a:	pop    ss
  41099b:	mov    esi,DWORD PTR [edx+0x12]
  41099e:	pop    esp
  41099f:	call   FWORD PTR [edx+0x10d380da]
  4109a5:	xchg   esp,eax
  4109a6:	add    ebp,eax
  4109a8:	leave  
  4109a9:	sub    ah,dh
  4109ab:	call   DWORD PTR [ebx+eax*1-0x9e874fc]
  4109b2:	hlt    
  4109b3:	push   ecx
  4109b4:	daa    
  4109b5:	pop    ebp
  4109b6:	or     BYTE PTR [edi+0x70],dl
  4109b9:	xchg   ebx,eax
  4109ba:	or     edx,DWORD PTR [ebx+0x60]
  4109bd:	test   BYTE PTR [edi-0x7b],0x9f
  4109c1:	xchg   edx,eax
  4109c2:	leave  
  4109c3:	inc    DWORD PTR [esi-0x7a751002]
  4109c9:	pushf  
  4109ca:	sub    al,0x4f
  4109cc:	dec    esi
  4109cd:	test   al,0xcd
  4109cf:	pop    edx
  4109d0:	mov    edi,0x33001e2d
  4109d5:	adc    al,BYTE PTR fs:[eax+0xe9fb2]
  4109dc:	xchg   BYTE PTR [ebp+eax*8+0x7b1e0056],bl
  4109e3:	mov    ecx,0x67c3863f
  4109e8:	je     0x410a30
  4109ea:	jmp    0x4109fb
  4109ec:	cli    
  4109ed:	push   ss
  4109ee:	jmp    0x3a40:0x9c968b07
  4109f5:	xchg   ebp,eax
  4109f6:	call   0xebc7986e
  4109fb:	pop    es
  4109fc:	push   ebx
  4109fd:	aad    0x52
  4109ff:	ret    0xfdfb
  410a02:	call   0xe81808cc
  410a07:	mov    bh,BYTE PTR [edi+0x56f8adb]
  410a0d:	or     edx,DWORD PTR [esi]
  410a0f:	es push eax
  410a11:	mov    ch,0x75
  410a13:	or     BYTE PTR [esi+0x49],dl
  410a16:	cmp    ebx,DWORD PTR [edx]
  410a18:	test   DWORD PTR [esi+0x16],eax
  410a1b:	fisub  WORD PTR [edi+0x6]
  410a1e:	ds into 
  410a20:	jmp    FWORD PTR [ecx-0x79c046c5]
  410a26:	ret    
  410a27:	inc    edi
  410a28:	outs   dx,DWORD PTR ds:[esi]
  410a29:	xchg   ebx,ebp
  410a2b:	jo     0x410a24
  410a2d:	pop    ebp
  410a2e:	les    esp,FWORD PTR [ebx+0x22260331]
  410a34:	dec    edi
  410a35:	sti    
  410a36:	ins    DWORD PTR es:[edi],dx
  410a37:	jg     0x410a36
  410a39:	add    DWORD PTR [eax-0x29],esi
  410a3c:	mov    WORD PTR [ebx+0x42],es
  410a3f:	xchg   ecx,eax
  410a40:	shl    eax,cl
  410a42:	push   esi
  410a43:	imul   edi,DWORD PTR [edx+0x0],0x3e2cccd3
  410a4a:	dec    edx
  410a4b:	xchg   edx,eax
  410a4c:	lods   eax,DWORD PTR ds:[esi]
  410a4d:	add    eax,DWORD PTR [esi-0x67fdbbe]
  410a53:	fbstp  TBYTE PTR [esi+eiz*1]
  410a56:	jno    0x410a9b
  410a58:	loope  0x410a5d
  410a5a:	scas   al,BYTE PTR es:[edi]
  410a5b:	fsub   DWORD PTR [esi]
  410a5d:	es mov eax,0xb0cee4cc
  410a63:	jno    0x410a5e
  410a65:	jp     0x410aa9
  410a67:	fisubr DWORD PTR [eax-0x5]
  410a6a:	push   ecx
  410a6b:	loope  0x410a1f
  410a6d:	sti    
  410a6e:	or     al,0x48
  410a70:	xchg   ebx,eax
  410a71:	es inc ecx
  410a73:	dec    edx
  410a74:	sbb    DWORD PTR [edi+0x6],ebx
  410a77:	inc    ebx
  410a78:	loope  0x410af4
  410a7a:	loop   0x410a5a
  410a7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a7d:	call   FWORD PTR [edx+eax*1+0x3044cd5]
  410a84:	dec    ecx
  410a85:	cmc    
  410a86:	xor    BYTE PTR [ebx],al
  410a88:	retf   0x5cac
  410a8b:	loopne 0x410a51
  410a8d:	lds    edi,FWORD PTR [ebx-0x45be4585]
  410a93:	retf   
  410a94:	lds    eax,FWORD PTR [ebx+0x3e05f5d]
  410a9a:	xchg   BYTE PTR [ebx+0x1b],dh
  410a9d:	int    0xfc
  410a9f:	inc    edx
  410aa0:	loop   0x410aa5
  410aa2:	xchg   BYTE PTR [ebx+0x66],dh
  410aa5:	ja     0x410aac
  410aa7:	ficomp WORD PTR [ebp+eiz*1+0x1edfb600]
  410aae:	clc    
  410aaf:	or     al,0xd3
  410ab1:	js     0x410ab1
  410ab3:	mov    ebx,0x31011df
  410ab8:	add    ecx,DWORD PTR [ebx]
  410aba:	std    
  410abb:	add    eax,ebp
  410abd:	ins    DWORD PTR es:[edi],dx
  410abe:	fld    QWORD PTR [ebp+0x71741eeb]
  410ac4:	ret    
  410ac5:	cmc    
  410ac6:	pop    esi
  410ac7:	mov    ds:0x6e9608f,eax
  410acc:	or     ah,dh
  410ace:	inc    ecx
  410acf:	pop    es
  410ad0:	loop   0x410ac5
  410ad2:	inc    esi
  410ad3:	dec    ebp
  410ad4:	xchg   BYTE PTR [esi],al
  410ad6:	jb     0x410aa0
  410ad8:	je     0x410a5f
  410ada:	fs push es
  410adc:	fdivrp st(3),st
  410ade:	cs aad 0xe0
  410ae1:	jge    0x410ae4
  410ae3:	shl    al,0x5a
  410ae6:	cmc    
  410ae7:	mov    dh,0xe0
  410ae9:	lea    ebp,[ecx]
  410aeb:	(bad)  
  410aec:	inc    esi
  410aed:	or     DWORD PTR [ebp+ecx*4+0x117417eb],0x62fef4c3
  410af8:	(bad)  
  410af9:	pop    ebx
  410afa:	push   0xffffffc2
  410afc:	loopne 0x410ae0
  410afe:	xchg   ebp,eax
  410aff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b00:	loopne 0x410af5
  410b02:	jo     0x410b34
  410b04:	aaa    
  410b05:	jg     0x410aee
  410b07:	push   esi
  410b08:	into   
  410b09:	test   DWORD PTR [ebp-0x57],ebp
  410b0c:	loopne 0x410b01
  410b0e:	cmp    BYTE PTR [eax],al
  410b10:	mov    ds:0xab1f1656,eax
  410b15:	(bad)  
  410b16:	push   ds
  410b17:	lds    edx,FWORD PTR fs:[esi+0x18]
  410b1b:	fs rol bl,0xf6
  410b1f:	scas   al,BYTE PTR es:[edi]
  410b20:	bound  ecx,QWORD PTR [edi-0x1f9295a5]
  410b26:	loop   0x410af5
  410b28:	addr16 loopne 0x410b1e
  410b2b:	bound  ebp,QWORD PTR [ebp-0x34]
  410b2e:	or     al,0x5c
  410b30:	rcr    dl,1
  410b32:	pop    ecx
  410b33:	add    BYTE PTR [eax],cl
  410b35:	mov    al,0x3
  410b37:	push   esi
  410b38:	mov    bl,dh
  410b3a:	add    eax,DWORD PTR [ebp-0x7cf850d1]
  410b40:	sub    BYTE PTR [edx],0xf3
  410b43:	mov    ah,cl
  410b45:	push   edi
  410b46:	inc    esi
  410b47:	clc    
  410b48:	cs es jle 0x410b60
  410b4c:	and    DWORD PTR [esi],esp
  410b4e:	inc    ebx
  410b4f:	adc    BYTE PTR [edx-0x7d],ah
  410b52:	ja     0x410b58
  410b54:	pop    esp
  410b55:	sar    bl,0x0
  410b58:	mov    ch,0xb8
  410b5a:	xchg   BYTE PTR [ebp+0x33],dh
  410b5d:	or     ebp,esp
  410b5f:	lods   eax,DWORD PTR ds:[esi]
  410b60:	imul   eax,DWORD PTR [ebx+0xa],0x7e580c6a
  410b67:	call   0xfeea4633
  410b6c:	scas   eax,DWORD PTR es:[edi]
  410b6d:	inc    edx
  410b6e:	jg     0x410bc5
  410b70:	xchg   edi,eax
  410b71:	push   0x4b
  410b73:	jne    0x410b75
  410b75:	fild   WORD PTR [edx-0x73]
  410b78:	call   DWORD PTR [ebx+edx*1]
  410b7b:	add    al,0x45
  410b7d:	and    BYTE PTR [eax-0x27],0xf
  410b81:	and    esi,DWORD PTR [edx-0x78]
  410b84:	jge    0x410bed
  410b86:	inc    edi
  410b87:	jg     0x410b51
  410b89:	rol    DWORD PTR [ebp-0x7b],cl
  410b8c:	dec    ebp
  410b8d:	inc    edi
  410b8e:	(bad)  
  410b8f:	jbe    0x410b9d
  410b91:	outs   dx,DWORD PTR ds:[esi]
  410b92:	pushf  
  410b93:	add    al,0x45
  410b95:	mov    ds:0x7f757f32,al
  410b9a:	xchg   esp,eax
  410b9b:	pop    edx
  410b9c:	inc    DWORD PTR [edx+0x72ff4322]
  410ba2:	dec    esi
  410ba3:	test   DWORD PTR [ebp-0x5d],eax
  410ba6:	xchg   esi,eax
  410ba7:	hlt    
  410ba8:	ss or  ah,bl
  410bab:	jae    0x410bbf
  410bad:	xchg   BYTE PTR [ebx],ch
  410baf:	push   cs
  410bb0:	mov    edi,DWORD PTR [esi]
  410bb2:	popa   
  410bb3:	inc    eax
  410bb4:	out    0xcc,eax
  410bb6:	mov    al,0x27
  410bb8:	inc    BYTE PTR ds:0x7bff0aa8
  410bbe:	out    0x1f,eax
  410bc0:	adc    esp,DWORD PTR [ecx]
  410bc2:	ins    DWORD PTR es:[edi],dx
  410bc3:	daa    
  410bc4:	(bad)  
  410bc5:	jnp    0x410c0a
  410bc7:	or     esp,DWORD PTR es:[ecx]
  410bca:	jge    0x410bf3
  410bcc:	push   esi
  410bcd:	out    dx,al
  410bce:	in     eax,dx
  410bcf:	pusha  
  410bd0:	(bad)  
  410bd1:	fldcw  WORD PTR [ecx+ecx*8+0xa29bf5a]
  410bd8:	add    BYTE PTR [eax],al
  410bda:	xor    edx,DWORD PTR [eax+0x3a]
  410bdd:	xor    BYTE PTR [edx-0x79fff391],0xb8
  410be4:	mov    cl,0x56
  410be6:	push   ds
  410be7:	retf   
  410be8:	xchg   edx,eax
  410be9:	aas    
  410bea:	xchg   BYTE PTR [ebx-0x14b98b49],dh
  410bf0:	pop    ds
  410bf1:	(bad)  
  410bf2:	sub    dl,ch
  410bf4:	pop    es
  410bf5:	mov    edx,DWORD PTR [esi+0x13883498]
  410bfb:	xor    edx,ebx
  410bfd:	repnz xchg ecx,eax
  410bff:	outs   dx,DWORD PTR ds:[esi]
  410c00:	daa    
  410c01:	add    BYTE PTR [esi-0x23fa7b15],al
  410c07:	jmp    0xfe16:0x1dff55bc
  410c0e:	mov    dh,0x2b
  410c10:	cmp    DWORD PTR [edi+0x356689],0x584eb86
  410c1a:	sti    
  410c1b:	sub    eax,0xe5ac503a
  410c20:	mov    cl,0xfe
  410c22:	(bad)  
  410c23:	test   DWORD PTR [edx+0x664281bf],0xe1428649
  410c2d:	sub    al,0xe4
  410c2f:	inc    edx
  410c30:	loope  0x410c35
  410c32:	or     eax,0x898e8587
  410c37:	iret   
  410c38:	push   ss
  410c39:	sbb    BYTE PTR [edi+0xb47472],dh
  410c3f:	mov    ecx,0x312a1c7
  410c44:	(bad)  
  410c45:	loop   0x410c4a
  410c47:	xchg   BYTE PTR [ebx],bl
  410c49:	into   
  410c4a:	pop    ss
  410c4b:	js     0x410c13
  410c4d:	aad    0x4
  410c4f:	xchg   BYTE PTR [edx+0x68],al
  410c52:	enter  0xc8dd,0xe9
  410c56:	popa   
  410c57:	rol    DWORD PTR [ecx-0x1f],1
  410c5a:	add    esi,DWORD PTR [eax]
  410c5c:	iret   
  410c5d:	pop    esi
  410c5e:	add    ebx,0xffffffdc
  410c61:	cmp    al,0xb5
  410c63:	and    edx,edx
  410c65:	loopne 0x410c3f
  410c67:	xchg   edi,eax
  410c68:	jb     0x410c96
  410c6a:	mov    ah,0x95
  410c6c:	(bad)  
  410c6d:	and    DWORD PTR [edi+0x13becb8a],edx
  410c73:	lods   al,BYTE PTR ds:[esi]
  410c74:	xor    BYTE PTR [esi-0x78],dl
  410c77:	adc    esp,ebx
  410c79:	or     al,0x22
  410c7b:	cmp    DWORD PTR [ecx+0x60],esi
  410c7e:	dec    ebx
  410c7f:	sub    bl,0x19
  410c82:	and    edi,DWORD PTR [eax-0x24]
  410c85:	push   0xffffffc8
  410c87:	popa   
  410c88:	enter  0x2026,0xfc
  410c8c:	dec    edx
  410c8d:	cmp    ecx,DWORD PTR [edi+0x21dec2fa]
  410c93:	pop    eax
  410c94:	jno    0x410cdf
  410c96:	adc    al,0x84
  410c98:	adc    ch,dl
  410c9a:	mov    bl,0x48
  410c9c:	jb     0x410c7b
  410c9e:	xchg   BYTE PTR [ecx],al
  410ca0:	push   edi
  410ca1:	or     ch,ch
  410ca3:	add    BYTE PTR [edx-0x23],dl
  410ca6:	(bad)  
  410ca8:	add    bh,al
  410caa:	mov    ah,BYTE PTR [edi+eiz*2+0xb3a5adc]
  410cb1:	add    al,0xf4
  410cb3:	sub    DWORD PTR [edi+0x38ef3fb],0xf91060d4
  410cbd:	push   esi
  410cbe:	mov    fs,WORD PTR [ecx]
  410cc0:	mov    dl,0x71
  410cc2:	cmc    
  410cc3:	jmp    0xf483a74d
  410cc8:	(bad)
  410ccb:	cmp    ebx,ecx
  410ccd:	fdivr  DWORD PTR [esi-0x15]
  410cd0:	adc    dh,ch
  410cd2:	jg     0x410c78
  410cd4:	jne    0x410c9e
  410cd6:	jge    0x410d29
  410cd8:	mov    bl,0x8
  410cda:	add    al,0xad
  410cdc:	cmp    eax,0x93b5f718
  410ce1:	fs xor edi,edx
  410ce4:	adc    DWORD PTR [edi-0x4e],eax
  410ce7:	sub    DWORD PTR [ecx],ebx
  410ce9:	sbb    al,0xa
  410ceb:	mov    ebx,0xa4858bf4
  410cf0:	or     DWORD PTR [esp+ebx*2+0x185b9116],ecx
  410cf7:	test   eax,0x74d2c785
  410cfc:	rcl    ebx,0xe2
  410cff:	je     0x410cb4
  410d01:	fdivr  st(3),st
  410d03:	push   0xffffffce
  410d05:	dec    ebx
  410d06:	repz je 0x410d09
  410d09:	xchg   ebp,eax
  410d0a:	enter  0xd1fa,0xb8
  410d0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d0f:	repz ficomp WORD PTR [esi]
  410d12:	jecxz  0x410cdf
  410d14:	mov    WORD PTR [esi-0x59307824],fs
  410d1a:	push   esi
  410d1b:	push   cs
  410d1c:	add    ah,bl
  410d1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d1f:	test   DWORD PTR [eax],0x2f803f9
  410d25:	jnp    0x410d1c
  410d27:	popa   
  410d28:	jb     0x410cfc
  410d2a:	mov    ah,0xc7
  410d2c:	pop    eax
  410d2d:	pop    ss
  410d2e:	sub    ch,bh
  410d30:	add    BYTE PTR [edi],ch
  410d32:	int3   
  410d33:	dec    esi
  410d34:	clc    
  410d35:	pop    edi
  410d36:	scas   al,BYTE PTR es:[edi]
  410d37:	std    
  410d38:	add    edx,DWORD PTR [ebp+0x1cf06bd5]
  410d3e:	pop    eax
  410d3f:	sbb    DWORD PTR [eax+0x7a],ebp
  410d42:	inc    esi
  410d43:	xchg   esp,eax
  410d44:	adc    al,BYTE PTR [edi-0x3262f7d9]
  410d4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d4b:	jecxz  0x410d50
  410d4d:	pop    es
  410d4e:	aad    0x80
  410d50:	(bad)  
  410d51:	pop    ds
  410d52:	into   
  410d53:	dec    esi
  410d54:	cld    
  410d55:	inc    edi
  410d56:	add    al,0xf7
  410d58:	inc    DWORD PTR [eax+0x39]
  410d5b:	dec    esi
  410d5c:	hlt    
  410d5d:	(bad)  [edx-0x340195c8]
  410d63:	jle    0x410d35
  410d65:	pop    ss
  410d66:	daa    
  410d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d68:	cld    
  410d69:	lahf   
  410d6a:	test   DWORD PTR ds:[ebp+0x0],eax
  410d6e:	addr16 (bad) 
  410d70:	imul   esi,esi,0xffffffac
  410d73:	mov    BYTE PTR [eax],bl
  410d75:	push   0x13cd467f
  410d7a:	pop    es
  410d7b:	xor    al,0x8
  410d7d:	retf   0xa6ac
  410d80:	loop   0x410d85
  410d82:	mov    dh,0xce
  410d84:	imul   esi,eax,0x6c
  410d87:	sbb    BYTE PTR [eax],0x8b
  410d8a:	test   eax,0x63458095
  410d8f:	daa    
  410d90:	(bad)  
  410d91:	cld    
  410d92:	inc    eax
  410d93:	cmp    bh,ch
  410d95:	inc    ebp
  410d96:	xchg   bh,dh
  410d98:	push   es
  410d99:	je     0x410d30
  410d9b:	test   DWORD PTR [esi-0x49602c74],ebx
  410da1:	out    0xbb,eax
  410da3:	xchg   edi,eax
  410da4:	push   cs
  410da5:	add    BYTE PTR [ebx],cl
  410da7:	daa    
  410da8:	push   ss
  410da9:	dec    edi
  410daa:	sahf   
  410dab:	xchg   ecx,eax
  410dac:	pop    es
  410dad:	sub    dl,BYTE PTR [edx+0x6f021e33]
  410db3:	iret   
  410db4:	lahf   
  410db5:	hlt    
  410db6:	test   DWORD PTR [ecx],eax
  410db8:	cld    
  410db9:	addr16 pop ds
  410dbb:	in     eax,dx
  410dbc:	cli    
  410dbd:	adc    ebx,DWORD PTR [esi-0x65d7f8a5]
  410dc3:	push   esp
  410dc4:	dec    esp
  410dc5:	dec    edi
  410dc6:	or     eax,0xd5e72a27
  410dcb:	addr16 adc edi,esi
  410dce:	std    
  410dcf:	neg    BYTE PTR [edi]
  410dd1:	xor    al,BYTE PTR [eax]
  410dd3:	mov    ebp,0xdfbc154
  410dd8:	in     al,0xb7
  410dda:	(bad)  
  410ddb:	aaa    
  410ddc:	jecxz  0x410d5e
  410dde:	inc    esp
  410ddf:	ficom  DWORD PTR [esi+eax*1-0x73]
  410de3:	pop    ebx
  410de4:	pop    ss
  410de5:	mov    eax,0xfbbab94f
  410dea:	test   dh,al
  410dec:	clc    
  410ded:	mov    eax,DWORD PTR [edi-0x58]
  410df0:	and    BYTE PTR [ebx],dl
  410df2:	mov    cl,BYTE PTR [ebx+0x47]
  410df5:	jg     0x410dfe
  410df7:	xor    BYTE PTR ss:[ebp-0x421e02f9],bh
  410dfe:	(bad)  
  410dff:	rol    DWORD PTR ss:[eax-0x354a81a4],cl
  410e06:	push   edi
  410e07:	outs   dx,BYTE PTR ds:[esi]
  410e08:	loop   0x410e19
  410e0a:	(bad)  
  410e0b:	jno    0x410dd5
  410e0d:	mov    ch,0x5a
  410e0f:	aas    
  410e10:	inc    edx
  410e11:	mov    al,ds:0x62e60cb8
  410e16:	das    
  410e17:	or     eax,0xb503e142
  410e1c:	jo     0x410e5a
  410e1e:	xchg   ecx,eax
  410e1f:	sar    dh,cl
  410e21:	fst    DWORD PTR [esi]
  410e23:	cmp    al,0x42
  410e25:	loope  0x410e45
  410e27:	mov    dl,0x46
  410e29:	push   0x96cc145
  410e2e:	mov    ebx,0x1f1596fa
  410e33:	and    cl,bl
  410e35:	cdq    
  410e36:	test   DWORD PTR [eax],eax
  410e38:	and    ecx,ebx
  410e3a:	pushf  
  410e3b:	mov    esp,0x9da1bfae
  410e40:	data16 int 0x26
  410e43:	or     al,0xd
  410e45:	dec    edx
  410e46:	mov    ax,0x748d
  410e4a:	push   0x64725736
  410e4f:	je     0x410e66
  410e51:	inc    edx
  410e52:	loope  0x410e57
  410e54:	or     eax,DWORD PTR [edx]
  410e56:	fisttp WORD PTR [ecx]
  410e58:	or     eax,0xd52bed4f
  410e5d:	ret    0x3e2
  410e60:	fld    QWORD PTR [ebx-0x10]
  410e63:	inc    ebx
  410e64:	pusha  
  410e65:	js     0x410e0f
  410e67:	dec    esp
  410e68:	(bad)  
  410e69:	dec    ecx
  410e6a:	loope  0x410e24
  410e6c:	cld    
  410e6d:	in     eax,0x62
  410e6f:	das    
  410e70:	lds    eax,FWORD PTR [ecx-0x1f]
  410e73:	add    esi,DWORD PTR ds:0x1a8abc70
  410e79:	dec    edx
  410e7a:	mov    ah,0x8a
  410e7c:	mov    eax,ds:0x31aa876f
  410e81:	jmp    0xb59c:0xd8801e7e
  410e88:	out    dx,eax
  410e89:	push   0xec3e600a
  410e8e:	push   edx
  410e8f:	add    DWORD PTR ds:0x1be6f3d9,eax
  410e95:	outs   dx,BYTE PTR ds:[esi]
  410e96:	pusha  
  410e97:	dec    esi
  410e98:	or     eax,0x31fa7f
  410e9d:	mov    ds:0x6bcef354,al
  410ea2:	jo     0x410f00
  410ea4:	push   ebx
  410ea5:	test   dl,0x4d
  410ea8:	sar    edx,1
  410eaa:	fild   QWORD PTR [esi+esi*4-0x6d]
  410eae:	fcomp  DWORD PTR [ebx+0x17]
  410eb1:	fsub   QWORD PTR [esi-0x7f]
  410eb4:	sub    al,0xc6
  410eb6:	outs   dx,DWORD PTR ds:[esi]
  410eb7:	loop   0x410ef9
  410eb9:	jnp    0x410e93
  410ebb:	repz fimul DWORD PTR [esi+0x1a]
  410ebf:	push   ebp
  410ec0:	jge    0x410ebf
  410ec2:	jle    0x410eb6
  410ec4:	idiv   BYTE PTR [eax+0x7e]
  410ec7:	repz sar DWORD PTR [eax],0xd9
  410ecb:	add    ebp,DWORD PTR [ebp-0x2c]
  410ece:	inc    edx
  410ecf:	or     ch,cl
  410ed1:	cld    
  410ed2:	jbe    0x410ebe
  410ed4:	jo     0x410ef7
  410ed6:	in     al,0x31
  410ed8:	mov    esp,0x61ff53ad
  410edd:	sbb    eax,esp
  410edf:	test   DWORD PTR [ecx+eiz*4-0x7a0e4521],esp
  410ee6:	inc    edx
  410ee7:	sbb    DWORD PTR [ecx+edx*4+0xe39551a],0xf8ca602a
  410ef2:	dec    esi
  410ef3:	fcmovb st,st(1)
  410ef5:	ins    DWORD PTR es:[edi],dx
  410ef6:	sbb    eax,0xd785e9ef
  410efb:	jge    0x410f16
  410efd:	(bad)  
  410efe:	std    
  410eff:	pop    edx
  410f00:	add    DWORD PTR [eax],0x79
  410f03:	jnp    0x410e8a
  410f05:	add    BYTE PTR [edx],cl
  410f07:	arpl   bx,bp
  410f09:	mov    eax,0x59f43580
  410f0e:	push   ss
  410f0f:	enter  0xe04e,0xe4
  410f13:	or     eax,0x435780eb
  410f18:	or     dh,BYTE PTR [ebx]
  410f1a:	inc    esp
  410f1b:	ss jle 0x410f16
  410f1e:	in     al,0xf8
  410f20:	jae    0x410f34
  410f22:	lahf   
  410f23:	repz xlat BYTE PTR ds:[ebx]
  410f26:	xchg   BYTE PTR [edi-0x3e8f8b05],dl
  410f2c:	sti    
  410f2d:	add    DWORD PTR [ecx-0x4c],edi
  410f30:	or     al,0x9e
  410f33:	and    al,0xa
  410f35:	add    BYTE PTR [edi],ch
  410f37:	ret    
  410f38:	jb     0x410f3f
  410f3a:	push   esi
  410f3b:	rol    edx,0xfe
  410f3e:	pop    esi
  410f3f:	scas   eax,DWORD PTR es:[edi]
  410f40:	push   0xffffff99
  410f42:	inc    esp
  410f43:	sbb    edx,0xc40076f8
  410f49:	jne    0x410f2e
  410f4b:	icebp  
  410f4c:	mov    bl,0xeb
  410f4e:	loop   0x410f7a
  410f50:	push   0xffffffa3
  410f52:	pop    eax
  410f53:	add    BYTE PTR ss:[ebp-0x5d],0xfa
  410f58:	enter  0x2074,0xca
  410f5c:	retf   
  410f5d:	mov    esp,DWORD PTR [edx]
  410f5f:	cmp    ebp,ebx
  410f61:	xor    al,0x3e
  410f63:	ss hlt 
  410f65:	test   BYTE PTR [eax],al
  410f67:	outs   dx,DWORD PTR ds:[esi]
  410f68:	scas   eax,DWORD PTR es:[edi]
  410f69:	cmp    cl,BYTE PTR [ebp+0x53438ae2]
  410f6f:	or     al,0x92
  410f71:	hlt    
  410f72:	jne    0x410f3f
  410f74:	(bad)  
  410f75:	dec    esi
  410f76:	rcr    ah,1
  410f78:	xchg   edx,eax
  410f79:	hlt    
  410f7a:	adc    eax,0x33d34f
  410f7f:	xchg   BYTE PTR [edi+ecx*1+0x0],ch
  410f83:	adc    edx,eax
  410f85:	push   ss
  410f86:	je     0x410fda
  410f88:	push   ecx
  410f89:	int3   
  410f8a:	(bad)  
  410f8b:	outs   dx,BYTE PTR ds:[esi]
  410f8c:	pop    edi
  410f8d:	ss (bad) 
  410f8f:	jno    0x410f5e
  410f91:	popf   
  410f92:	retf   
  410f93:	call   FWORD PTR [esi-0x3c8401e5]
  410f99:	cld    
  410f9a:	aas    
  410f9b:	xchg   ah,dh
  410f9d:	cdq    
  410f9e:	rcr    DWORD PTR [esi+0x26],cl
  410fa1:	imul   edi,esi,0x49
  410fa4:	and    BYTE PTR [esp+ecx*4-0x1f0c005],0x39
  410fac:	and    al,0x26
  410fae:	jno    0x410fdc
  410fb0:	in     al,dx
  410fb1:	pop    es
  410fb2:	push   0xffffffb5
  410fb4:	jbe    0x410f4f
  410fb6:	mov    bh,0xbe
  410fb8:	mov    bl,0xa7
  410fba:	stc    
  410fbb:	xchg   bl,ch
  410fbd:	test   BYTE PTR [edx+ebx*1+0x61],dl
  410fc1:	rcr    ebx,0x4d
  410fc4:	cwde   
  410fc5:	push   esi
  410fc6:	inc    edi
  410fc7:	jnp    0x410ff4
  410fc9:	push   cs
  410fca:	sldt   WORD PTR [edx-0x45]
  410fce:	ror    edx,cl
  410fd0:	and    DWORD PTR [edi],0xbf4b3846
  410fd6:	call   0x7674:0x83260d01
  410fdd:	cdq    
  410fde:	mov    esi,0x27f6d14f
  410fe3:	mov    WORD PTR [ebx],es
  410fe5:	dec    eax
  410fe6:	paddd  mm0,mm1
  410fe9:	jl     0x410f84
  410feb:	jmp    0x410fa6
  410fed:	mov    ?,edi
  410fef:	dec    edi
  410ff0:	mov    cl,0xd5
  410ff2:	adc    dh,dl
  410ff4:	std    
  410ff5:	xor    eax,DWORD PTR [ebx+0x7a42aec5]
  410ffb:	and    ebx,DWORD PTR [eax+0x6d4060d5]
  411001:	aad    0x96
  411003:	pop    fs
  411005:	loope  0x411046
  411007:	sbb    eax,DWORD PTR [eax+0xc2776d5]
  41100d:	pop    fs
  41100f:	div    BYTE PTR [ecx+0x6831fc42]
  411015:	dec    edi
  411016:	icebp  
  411017:	sbb    bh,BYTE PTR [ebx]
  411019:	aad    0x56
  41101b:	sub    al,0x58
  41101d:	in     al,dx
  41101e:	aam    0x90
  411020:	sub    eax,0xd21ab3d5
  411025:	fcmovb st,st(4)
  411027:	xor    DWORD PTR [edi],ecx
  411029:	jg     0x410ff7
  41102b:	mov    edx,0x45ba79db
  411030:	add    BYTE PTR [ebp+0x42],bh
  411033:	push   ss
  411034:	(bad)  
  411035:	sbb    eax,0x875bb5c3
  41103a:	inc    edx
  41103b:	loope  0x410fcb
  41103d:	ret    0x3b46
  411040:	xchg   ecx,edx
  411042:	and    eax,0x4a921b31
  411047:	push   esi
  411048:	or     BYTE PTR [ecx-0x29],0x8c
  41104c:	sbb    cl,BYTE PTR [ecx-0x35]
  41104f:	es adc cl,ch
  411052:	dec    edx
  411053:	pop    eax
  411054:	add    al,0x86
  411056:	mov    edi,0xeb0a0aa1
  41105b:	loop   0x411060
  41105d:	xchg   bh,al
  41105f:	outs   dx,BYTE PTR ds:[esi]
  411060:	retf   
  411061:	rcl    ah,cl
  411063:	pop    esp
  411064:	mov    bl,0xe1
  411066:	push   edx
  411067:	les    eax,FWORD PTR [esi+eax*4]
  41106a:	leave  
  41106b:	xor    DWORD PTR [edx+esi*1-0x7fee912e],ecx
  411072:	mov    esi,0x4282190a
  411077:	or     ah,BYTE PTR [edx-0x79]
  41107a:	mov    DWORD PTR [ebp-0xb],0x79f36ed2
  411081:	inc    ecx
  411082:	aad    0xf3
  411084:	jmp    0x6444a58f
  411089:	(bad)  
  41108a:	inc    edx
  41108b:	or     ch,cl
  41108d:	or     BYTE PTR [edi+0x6],bh
  411090:	jb     0x41110f
  411092:	lds    ebx,FWORD PTR [ebp-0x1f]
  411095:	add    BYTE PTR [ebx],dh
  411097:	test   bl,dh
  411099:	cwde   
  41109a:	pop    ecx
  41109b:	mov    edi,0xacd8f6ca
  4110a0:	or     ecx,ebp
  4110a2:	test   DWORD PTR [edi+0x5b],ebp
  4110a5:	inc    ebx
  4110a6:	and    al,0xc7
  4110a8:	jge    0x41103b
  4110aa:	add    bl,ah
  4110ac:	jno    0x41106e
  4110ae:	add    BYTE PTR [edx+0x7f],0x2c
  4110b2:	sub    BYTE PTR [eax-0xd],0x62
  4110b6:	les    eax,FWORD PTR [ebx-0x242220a0]
  4110bc:	jl     0x1534e541
  4110c2:	add    bh,0x35
  4110c5:	sub    DWORD PTR [ebx],edx
  4110c7:	adc    al,0xa
  4110c9:	(bad)
  4110ce:	mov    edx,0x4b7fdbd4
  4110d3:	inc    esp
  4110d4:	mov    ss,WORD PTR ds:0x6a0a4285
  4110da:	add    DWORD PTR [edx+ecx*1],edi
  4110dd:	shl    DWORD PTR [esi],cl
  4110df:	(bad)  
  4110e0:	jge    0x41107f
  4110e2:	adc    bl,ah
  4110e4:	dec    ecx
  4110e5:	push   eax
  4110e6:	add    BYTE PTR [edx+0x7f],0xa4
  4110ea:	mov    edi,eax
  4110ec:	add    al,BYTE PTR [eax]
  4110ee:	xor    ah,BYTE PTR [ebx+0x103452db]
  4110f4:	pop    ecx
  4110f5:	push   eax
  4110f6:	jo     0x411147
  4110f8:	xchg   edi,eax
  4110f9:	add    BYTE PTR [eax],al
  4110fb:	scas   eax,DWORD PTR es:[edi]
  4110fc:	aas    
  4110fd:	(bad)  
  4110fe:	sar    dl,0x3c
  411101:	jg     0x411178
  411103:	inc    edi
  411104:	es pop ebx
  411106:	jg     0x4110a6
  411108:	aas    
  411109:	add    DWORD PTR [ebp-0x6d],0xa830725
  411110:	sub    esi,ebx
  411112:	imul   edx,DWORD PTR [edi],0x17907ebc
  411118:	daa    
  411119:	add    eax,0x7f3f6ff9
  41111e:	inc    ebp
  41111f:	push   ebx
  411120:	(bad)  
  411121:	or     ecx,DWORD PTR [ebp-0x74a6e166]
  411127:	or     DWORD PTR [ebp+0x63beff43],ecx
  41112d:	repz jmp FWORD PTR [edi]
  411130:	push   esp
  411131:	mov    bl,0x75
  411133:	and    al,dh
  411135:	jle    0x411117
  411137:	inc    edi
  411138:	hlt    
  411139:	je     0x41113c
  41113b:	das    
  41113c:	enter  0xf84e,0xf4
  411140:	ror    BYTE PTR [eax+0x603ee765],cl
  411146:	imul   esp,DWORD PTR [edx+0x10ff4384],0x27e85b3a
  411150:	aaa    
  411151:	repz push DWORD PTR [esp+eax*8-0x5]
  411156:	mov    ecx,DWORD PTR [edx+0x5b45803a]
  41115c:	push   esp
  41115d:	std    
  41115e:	mov    ecx,0x33c41700
  411163:	add    al,ah
  411165:	xchg   edx,eax
  411166:	cli    
  411167:	test   DWORD PTR [esi-0x28bbfde9],eax
  41116d:	addr16 inc edi
  41116f:	add    ecx,DWORD PTR [edi]
  411171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411172:	cmp    ecx,DWORD PTR [edx+0x73475e86]
  411178:	jge    0x41117d
  41117a:	(bad)  
  41117b:	aaa    
  41117c:	xchg   BYTE PTR [ebp-0x4a39470c],cl
  411182:	(bad)  
  411183:	(bad)  
  411184:	cmp    edx,DWORD PTR [edi-0x66fc7348]
  41118a:	adc    bh,dh
  41118c:	or     DWORD PTR [esp+ecx*4+0x1fab8e44],0x1bd16bbf
  411197:	add    BYTE PTR [edx-0x10],0x12
  41119b:	je     0x4111ff
  41119d:	gs pop ss
  41119f:	(bad)  
  4111a0:	xor    ecx,ebp
  4111a2:	cdq    
  4111a3:	not    DWORD PTR [ecx-0x67]
  4111a6:	mov    ebp,esi
  4111a8:	leave  
  4111a9:	fstp   st(1)
  4111ab:	fimul  DWORD PTR [edx]
  4111ad:	xchg   ebp,eax
  4111ae:	or     eax,DWORD PTR [ebx+eax*1-0x63fff824]
  4111b5:	or     eax,0x34227481
  4111ba:	fcomp  st(2)
  4111bc:	adc    BYTE PTR cs:[esi],dl
  4111bf:	call   FWORD PTR [ecx]
  4111c1:	push   ebp
  4111c2:	xchg   ecx,eax
  4111c3:	repz add BYTE PTR [ebx],al
  4111c6:	daa    
  4111c7:	push   es
  4111c8:	push   eax
  4111c9:	add    eax,0xd5706a1
  4111ce:	stos   BYTE PTR es:[edi],al
  4111cf:	mov    esi,0x1fd7438a
  4111d4:	mov    ds:0x831b50f2,al
  4111d9:	(bad)  
  4111da:	iret   
  4111db:	or     esi,edi
  4111dd:	lds    eax,FWORD PTR [ebp-0x63]
  4111e0:	mov    WORD PTR [ebx+0x42],ss
  4111e3:	inc    ebp
  4111e4:	mov    esp,0x46987e9
  4111e9:	xchg   BYTE PTR [edi+0x79560ba6],bh
  4111ef:	push   0xa6bd493e
  4111f4:	pop    es
  4111f5:	sahf   
  4111f6:	les    esi,FWORD PTR ds:0x21c6a817
  4111fc:	nop
  4111fd:	xchg   eax,edx
  4111ff:	and    BYTE PTR [edx+0x1f96bf29],ch
  411205:	cmp    edx,ebx
  411207:	int    0x1b
  411209:	mov    ecx,edx
  41120b:	outs   dx,BYTE PTR ds:[esi]
  41120c:	ror    DWORD PTR [ecx+0x438abc72],0x72
  411213:	js     0x4111d6
  411215:	jge    0x4111f1
  411217:	adc    BYTE PTR [edi],0x68
  41121a:	shl    DWORD PTR [ebp+0x44],1
  41121d:	aad    0x44
  41121f:	jecxz  0x411263
  411221:	add    eax,0x510655ed
  411226:	push   edi
  411227:	stc    
  411228:	mov    al,BYTE PTR [eax]
  41122a:	mov    edx,0x404b60ee
  41122f:	fimul  DWORD PTR [ecx+0x39]
  411232:	cmp    cl,dl
  411234:	int3   
  411235:	nop
  411236:	mov    edx,ebx
  411238:	xchg   DWORD PTR [ebx+0x28],esp
  41123b:	shr    DWORD PTR [eax-0x70],1
  41123e:	xor    DWORD PTR [ecx+0x18],esi
  411241:	mov    eax,edx
  411243:	ds js  0x411251
  411246:	mov    dh,0xd1
  411248:	xor    cl,BYTE PTR [edi*8+0x51173347]
  41124f:	cmp    dl,al
  411251:	inc    ebx
  411252:	pop    ebx
  411253:	sti    
  411254:	lahf   
  411255:	or     eax,DWORD PTR [esi-0x383c5eeb]
  41125b:	cmp    eax,0xbc16e90a
  411260:	out    0x68,al
  411262:	mov    eax,ds:0x85e908b9
  411267:	adc    eax,0x48c721ca
  41126c:	push   edi
  41126d:	out    0x36,al
  41126f:	xchg   ecx,eax
  411270:	pop    esp
  411271:	mov    dh,0xe
  411273:	xchg   esi,eax
  411274:	jle    0x4112bc
  411276:	cwde   
  411277:	ror    bl,1
  411279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41127a:	pop    ebp
  41127b:	add    eax,0xc585a97e
  411280:	retf   0x6d8e
  411283:	fwait
  411284:	sti    
  411285:	jmp    0x6caa6f0f
  41128a:	test   BYTE PTR [eax],0x53
  41128d:	add    DWORD PTR [eax],eax
  41128f:	clc    
  411290:	fmul   DWORD PTR [edx]
  411292:	jmp    0x749c18a3
  411297:	push   es
  411298:	push   esp
  411299:	repz (bad) 
  41129b:	xchg   ebx,eax
  41129c:	jg     0x41124d
  41129e:	call   0x5ccb5528
  4112a3:	mov    esi,0x7be6f55b
  4112a8:	mov    esp,0xc7c3d1c7
  4112ad:	or     ecx,ebp
  4112af:	push   esi
  4112b0:	shr    DWORD PTR [edi],1
  4112b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112b3:	add    esi,0xffffffc9
  4112b6:	jmp    0xc1c85540
  4112bb:	xchg   ebx,eax
  4112bc:	inc    eax
  4112bd:	mov    ?,WORD PTR [ecx-0x76]
  4112c0:	inc    edx
  4112c1:	or     al,BYTE PTR [ebx-0x1c]
  4112c4:	mov    esi,0xbad2ad7d
  4112c9:	jne    0x411258
  4112cb:	pop    edx
  4112cc:	popa   
  4112cd:	sti    
  4112ce:	jmp    0x918ed058
  4112d3:	xor    bl,BYTE PTR [edx+0x9]
  4112d6:	add    BYTE PTR [eax+0x68748ec7],dl
  4112dc:	xor    eax,0xbb7c50f4
  4112e1:	push   esi
  4112e2:	clc    
  4112e3:	data16 mov bh,0xf7
  4112e6:	call   edx
  4112e8:	mov    bl,0x3
  4112ea:	inc    eax
  4112eb:	fist   WORD PTR [eax-0x4d]
  4112ee:	jne    0x4112b3
  4112f0:	enter  0xf44e,0x0
  4112f4:	call   FWORD PTR [esi-0x36f03980]
  4112fa:	jbe    0x4112f4
  4112fc:	push   edi
  4112fd:	aam    0x81
  4112ff:	add    DWORD PTR [edi-0x53140b0e],ebp
  411305:	ret    0xffcb
  411308:	push   ss
  411309:	(bad)  
  41130a:	jecxz  0x41128f
  41130c:	addr16 xor eax,0x3b05107e
  411312:	test   DWORD PTR [ebp-0x61],eax
  411315:	popf   
  411316:	inc    ebx
  411317:	call   DWORD PTR [edx-0x1]
  41131a:	sbb    eax,0xc7c25f40
  41131f:	or     al,0x5
  411321:	xchg   ebp,eax
  411322:	xchg   BYTE PTR [ebp-0x4d],dh
  411325:	mov    gs,ebx
  411327:	or     DWORD PTR [eax],esi
  411329:	inc    ebx
  41132a:	or     cl,BYTE PTR [ebx-0x7b143df]
  411330:	stos   BYTE PTR es:[edi],al
  411331:	nop
  411332:	jmp    0x4112bd
  411334:	bound  edx,QWORD PTR [esi]
  411336:	xchg   BYTE PTR [ebp-0xbc825],al
  41133c:	mov    dh,0x90
  41133e:	xlat   BYTE PTR ds:[ebx]
  41133f:	lea    esi,[edx+0x2e]
  411342:	add    BYTE PTR [ebp+0xb],0xc8
  411346:	mov    gs,WORD PTR [edx+ebp*8+0x35]
  41134a:	hlt    
  41134b:	push   eax
  41134c:	call   0x361e:0x86c7c408
  411353:	add    al,0x86
  411355:	fld    DWORD PTR [edi]
  411357:	mov    DWORD PTR [eax],0x8b94b
  41135d:	xchg   cl,bl
  41135f:	ss inc esp
  411361:	jmp    0xf3c1:0x860007da
  411368:	call   0x2bda:0x5c82d987
  41136f:	dec    esi
  411370:	aaa    
  411371:	dec    ebx
  411372:	loope  0x411382
  411374:	xchg   ebp,eax
  411375:	(bad)  
  411376:	pop    ebx
  411377:	inc    edi
  411378:	arpl   WORD PTR [esi-0x5601e6b7],bx
  41137e:	scas   eax,DWORD PTR es:[edi]
  41137f:	mov    ebp,0xf31acf5a
  411384:	push   DWORD PTR [edx]
  411386:	sub    eax,DWORD PTR fs:[eax+0x954a2]
  41138d:	xchg   BYTE PTR [ebp+eiz*4-0x737113aa],cl
  411394:	je     0x41139c
  411396:	xchg   esp,eax
  411397:	pop    ds
  411398:	cdq    
  411399:	js     0x411377
  41139b:	pop    es
  41139c:	xor    esi,DWORD PTR [eax-0x4a]
  41139f:	mov    WORD PTR [esi+eax*1-0x54],es
  4113a3:	mov    WORD PTR [esi+ebx*8+0xefe17de],?
  4113aa:	fiadd  DWORD PTR [edi]
  4113ac:	add    BYTE PTR [esi],al
  4113ae:	hlt    
  4113af:	inc    edi
  4113b0:	xchg   BYTE PTR [edi+0x39f78cdb],al
  4113b6:	in     eax,dx
  4113b7:	mov    ecx,DWORD PTR [edx]
  4113b9:	test   bl,bl
  4113bb:	pop    es
  4113bc:	cmp    eax,DWORD PTR [eax]
  4113be:	inc    eax
  4113bf:	fisttp QWORD PTR [ebx+0x7db8402]
  4113c5:	mov    eax,DWORD PTR [ecx+0x2c]
  4113c8:	pop    ss
  4113c9:	adc    al,0xae
  4113cb:	inc    edx
  4113cc:	out    dx,eax
  4113cd:	ret    
  4113ce:	or     DWORD PTR [ebx+0x4bc342e],edi
  4113d4:	in     eax,dx
  4113d5:	xchg   eax,ebp
  4113d7:	inc    ebx
  4113d8:	loope  0x4113dd
  4113da:	pop    esp
  4113db:	je     0x41145b
  4113dd:	xchg   ecx,eax
  4113de:	lds    ebp,FWORD PTR [edx-0x67]
  4113e1:	icebp  
  4113e2:	fild   DWORD PTR [edx-0x1f]
  4113e5:	jle    0x4113a7
  4113e7:	jb     0x41144d
  4113e9:	cdq    
  4113ea:	ror    ebp,0xf6
  4113ed:	dec    edi
  4113ee:	ja     0x411372
  4113f0:	loope  0x4113c0
  4113f2:	retf   
  4113f3:	cmp    eax,0x42864b65
  4113f8:	loope  0x4113b3
  4113fa:	pop    ebx
  4113fb:	mov    edi,0xbf560fbe
  411400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411401:	and    esi,DWORD PTR [esi]
  411403:	int    0x11
  411405:	mov    ecx,ebx
  411407:	cmp    eax,0x4286576e
  41140c:	loope  0x41148c
  41140e:	inc    edx
  41140f:	loop   0x411489
  411411:	cld    
  411412:	adc    dh,BYTE PTR [edi+0x39]
  411415:	mov    dh,0xa
  411417:	ja     0x41142e
  411419:	mov    dh,0xc1
  41141b:	mov    ebx,0x73680b76
  411420:	lea    ecx,[eax+0x663d2100]
  411426:	mov    es,WORD PTR [esi-0x35811ebe]
  41142c:	loop   0x4114a6
  41142e:	sti    
  41142f:	cli    
  411430:	jbe    0x4113ef
  411432:	mov    ch,0x12
  411434:	ja     0x4113d7
  411436:	mov    ch,0xaf
  411438:	xor    bh,BYTE PTR [ebx]
  41143a:	adc    edi,DWORD PTR [edx+0x3d98ccea]
  411440:	jb     0x4113f6
  411442:	mov    ah,0x59
  411444:	(bad)  
  411445:	or     ch,BYTE PTR [ecx-0x17b9387c]
  41144b:	test   DWORD PTR [edx-0x79],eax
  41144e:	and    al,0xc2
  411450:	inc    ecx
  411451:	add    esp,DWORD PTR [edx+edx*8+0x41]
  411455:	or     ch,cl
  411457:	js     0x4113df
  411459:	fisub  WORD PTR [edx-0x13]
  41145c:	mov    ebp,0x6533915d
  411461:	or     ch,cl
  411463:	in     eax,0xcc
  411465:	inc    ebx
  411466:	jbe    0x41147a
  411468:	adc    eax,0xc784a98d
  41146d:	adc    ebp,eax
  41146f:	test   DWORD PTR [edx+0x7f],eax
  411472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411473:	popf   
  411474:	mov    eax,0x4fe6402
  411479:	pop    ecx
  41147a:	mov    bh,0xf5
  41147c:	retf   
  41147d:	pop    ecx
  41147e:	or     eax,0x64038cff
  411483:	test   DWORD PTR [ebx+0xa],eax
  411486:	jmp    0xe2c72c8b
  41148b:	bound  ecx,QWORD PTR [ebp-0x2cbaa243]
  411491:	jbe    0x411486
  411493:	xchg   esp,eax
  411494:	mov    ebp,0x39b8f37b
  411499:	(bad)  
  41149a:	retf   0xfede
  41149d:	in     al,0xa
  41149f:	jmp    0x1d8ecc29
  4114a4:	loop   0x4114fc
  4114a6:	cli    
  4114a7:	mov    al,0x35
  4114a9:	cmp    eax,0x42851e8c
  4114ae:	or     dh,BYTE PTR [eax-0xf]
  4114b1:	fistp  QWORD PTR [edi+0x2c]
  4114b4:	outs   dx,BYTE PTR ds:[esi]
  4114b5:	mov    esi,0xb981e876
  4114ba:	jge    0x411491
  4114bc:	cmp    eax,0x30000e55
  4114c1:	mov    edx,0x402f009b
  4114c6:	xor    DWORD PTR [ebp+0x43],0x1c084c4e
  4114cd:	add    eax,0x4e4432e0
  4114d2:	or     eax,DWORD PTR [ecx+0x2f3d116]
  4114d8:	fbstp  TBYTE PTR [ebx-0x5465b6d6]
  4114de:	adc    BYTE PTR [eax-0x9],0x4e
  4114e2:	leave  
  4114e3:	call   0x35350c
  4114e8:	push   0xffffff86
  4114ea:	ja     0x41154b
  4114ec:	add    BYTE PTR [ebp-0x3b],ch
  4114ef:	retf   
  4114f0:	call   DWORD PTR [edx-0x75]
  4114f3:	sti    
  4114f4:	call   0x353218
  4114f9:	and    eax,0x2437e01e
  4114fe:	mov    dh,0xb
  411500:	mov    dl,0xdf
  411502:	dec    esi
  411503:	int    0xe8
  411505:	or     BYTE PTR [eax],ah
  411507:	hlt    
  411508:	jmp    FWORD PTR [edx]
  41150a:	xchg   BYTE PTR [edi+0x3d],dh
  41150d:	stc    
  41150e:	lods   eax,DWORD PTR ds:[esi]
  41150f:	repz adc BYTE PTR [edi+0x31],0xeb
  411514:	ins    DWORD PTR es:[edi],dx
  411515:	(bad)  
  411516:	xor    esp,esi
  411518:	mov    ebx,DWORD PTR [edi+0x5174fdc3]
  41151e:	mov    DWORD PTR [eax+0x464b80c8],ecx
  411524:	clc    
  411525:	ja     0x4114d8
  411527:	sar    edi,1
  411529:	push   eax
  41152a:	dec    ebp
  41152b:	fist   DWORD PTR [esi-0x79]
  41152e:	setbe  bh
  411531:	pusha  
  411532:	idiv   ch
  411534:	test   BYTE PTR [ebx+esi*4+0x17],al
  411538:	xor    eax,DWORD PTR [esi-0x44407067]
  41153e:	sbb    DWORD PTR [esi],ecx
  411540:	inc    eax
  411541:	sti    
  411542:	adc    eax,0x9fa7e706
  411547:	sbb    bh,dh
  411549:	sub    eax,0x11f5ded7
  41154e:	adc    cl,BYTE PTR es:[edx-0x71523d00]
  411555:	inc    esp
  411556:	repnz enter 0x46c6,0x82
  41155b:	in     al,0x8d
  41155d:	push   0xfffffff1
  41155f:	mov    ebx,0xc5438a1a
  411564:	sbb    dh,BYTE PTR [esi-0x72]
  411567:	push   eax
  411568:	out    dx,eax
  411569:	dec    edi
  41156a:	fldcw  WORD PTR [ecx]
  41156c:	out    0xfe,al
  41156e:	dec    ebx
  41156f:	dec    ecx
  411570:	jbe    0x4115b6
  411572:	stos   BYTE PTR es:[edi],al
  411573:	dec    edi
  411574:	mov    ah,0xef
  411576:	add    eax,0x7d0b2ba6
  41157b:	loope  0x411587
  41157d:	cmp    BYTE PTR [edx+0x7c],0x1a
  411581:	(bad)  
  411582:	std    
  411583:	xchg   ebp,eax
  411584:	add    ecx,DWORD PTR [edx-0x1475689]
  41158a:	xor    al,0xf1
  41158c:	jbe    0x4115d2
  41158e:	sahf   
  41158f:	pop    edi
  411590:	out    dx,eax
  411591:	dec    edi
  411592:	mov    DWORD PTR [ecx+0xfcb8aef],ecx
  411598:	jbe    0x4115a1
  41159a:	(bad)  
  41159b:	xor    BYTE PTR [eax+0x39efd07],bh
  4115a1:	(bad)  
  4115a2:	repz and esi,DWORD PTR [esi+0x7]
  4115a6:	mov    dh,0xc8
  4115a8:	mov    ecx,0x27970d17
  4115ad:	mov    bh,BYTE PTR [esi-0x55]
  4115b0:	sbb    dl,BYTE PTR [eax+0x7e]
  4115b3:	inc    edx
  4115b4:	js     0x41157f
  4115b6:	add    BYTE PTR ds:0x38b3f9be,bh
  4115bc:	je     0x4115a7
  4115be:	jp     0x411592
  4115c0:	retf   0xb847
  4115c3:	rcr    edx,1
  4115c5:	xor    dl,BYTE PTR [eax+eiz*1]
  4115c8:	retf   0x99b4
  4115cb:	dec    ecx
  4115cc:	retf   0xafd6
  4115cf:	ja     0x411553
  4115d1:	loope  0x411581
  4115d3:	stos   DWORD PTR es:[edi],eax
  4115d4:	ins    DWORD PTR es:[edi],dx
  4115d5:	mov    edx,0x85bd5a43
  4115da:	test   ebp,ebp
  4115dc:	(bad)  
  4115dd:	loop   0x4115e2
  4115df:	xchg   BYTE PTR [ebp+0x3b],dh
  4115e2:	mov    bh,0x61
  4115e4:	and    dl,ah
  4115e6:	ret    
  4115e7:	loope  0x41164a
  4115e9:	and    edi,esi
  4115eb:	cdq    
  4115ec:	inc    edx
  4115ed:	mov    esp,edx
  4115ef:	push   0x43
  4115f1:	loope  0x41166d
  4115f3:	sar    DWORD PTR [ebx-0x35f5dc12],1
  4115f9:	in     al,0x87
  4115fb:	add    eax,0x1c03e144
  411600:	push   0x56
  411602:	cdq    
  411603:	mov    ecx,0x95d7596a
  411608:	inc    edx
  411609:	loope  0x4115a4
  41160b:	ds mov bh,0xb6
  41160e:	daa    
  41160f:	cmp    edx,ebx
  411611:	cmc    
  411612:	pop    ss
  411613:	mov    ecx,ecx
  411615:	js     0x41161e
  411617:	add    eax,0x41d5f
  41161c:	or     eax,0xc280b2f8
  411621:	repnz mov dl,0xb6
  411624:	push   0x2188fd72
  411629:	cmp    DWORD PTR [esi-0x38],ebp
  41162c:	xchg   BYTE PTR [edx+0xa],al
  41162f:	jmp    0x9cc65700
  411634:	jge    0x4116a8
  411636:	pop    ebx
  411637:	out    0xf5,al
  411639:	sub    BYTE PTR [ebp+0x38be38a9],cl
  41163f:	call   0x33a158c9
  411644:	pop    es
  411645:	mov    fs,WORD PTR [edx+0x52c890c7]
  41164b:	shl    DWORD PTR [esp+edx*8+0xa],1
  41164f:	jmp    0x633394e0
  411654:	or     eax,0x8638f379
  411659:	fcomi  st,st(6)
  41165b:	jmp    0x3cc658e5
  411660:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411661:	jae    0x4116bd
  411663:	mov    ?,WORD PTR [edx]
  411665:	xor    eax,0xbde0a98d
  41166a:	out    0xe9,al
  41166c:	test   DWORD PTR [edx+0x7f],eax
  41166f:	sub    al,0xa6
  411671:	mov    esp,0xd90e5c02
  411676:	pop    eax
  411677:	rcl    ebp,1
  411679:	das    
  41167a:	dec    edx
  41167b:	jmp    0x6c5ade75
  411680:	add    BYTE PTR [ebp+0x38],al
  411683:	lea    esp,[ebx]
  411685:	test   DWORD PTR [edx+0xa],eax
  411688:	das    
  411689:	into   
  41168a:	(bad)  
  41168b:	or     esi,ebp
  41168d:	xor    edi,DWORD PTR [esi-0xd]
  411690:	cdq    
  411691:	push   es
  411692:	mov    esi,0xc8782fa2
  411697:	pop    edx
  411698:	xchg   ebx,eax
  411699:	pop    ecx
  41169a:	ins    DWORD PTR es:[edi],dx
  41169b:	test   DWORD PTR [ebp+eax*2-0x3a],ebx
  41169f:	repz push ss
  4116a1:	lea    eax,[edx+0x6a780eea]
  4116a7:	push   ecx
  4116a8:	add    dl,dh
  4116aa:	add    DWORD PTR [esi+ecx*4],0xffffffb1
  4116ae:	inc    ebx
  4116af:	or     al,BYTE PTR [eax]
  4116b1:	in     al,0xfa
  4116b3:	jecxz  0x41171f
  4116b5:	add    ebx,DWORD PTR [ebp-0x6aa8aa7a]
  4116bb:	pop    eax
  4116bc:	lea    esi,[edx+0x58fff4c6]
  4116c2:	xchg   ebp,eax
  4116c3:	popa   
  4116c4:	add    BYTE PTR [ebp+ecx*1+0x266a8959],ah
  4116cb:	or     BYTE PTR [eax],0x7f
  4116ce:	xor    eax,0x7ea20c5a
  4116d3:	jle    0x411731
  4116d5:	rol    ecx,0xb6
  4116d8:	or     BYTE PTR [eax],ch
  4116da:	ss hlt 
  4116dc:	add    BYTE PTR [edx-0x41],ch
  4116df:	or     edi,edi
  4116e1:	sbb    BYTE PTR [esi],dh
  4116e3:	ja     0x4116fd
  4116e5:	add    al,cl
  4116e7:	outs   dx,BYTE PTR ds:[esi]
  4116e8:	xchg   BYTE PTR [eax],cl
  4116ea:	or     BYTE PTR [esi],dh
  4116ec:	hlt    
  4116ed:	data16 ins BYTE PTR es:[edi],dx
  4116ef:	cmp    esi,DWORD PTR [ebx]
  4116f1:	je     0x41169f
  4116f3:	ret    0x2b3
  4116f6:	test   al,0x6e
  4116f8:	or     esp,DWORD PTR [esi+0x32]
  4116fb:	or     edi,DWORD PTR [esi-0x11]
  4116fe:	rol    edx,0x3b
  411701:	inc    eax
  411702:	rol    DWORD PTR [ecx+0x37],cl
  411705:	shl    BYTE PTR [edx],0x7e
  411708:	ja     0x41173c
  41170a:	sbb    bh,BYTE PTR [edi+0x3558ff0b]
  411710:	inc    ebx
  411711:	and    DWORD PTR [edi+0x35],0xffffff86
  411715:	dec    ebp
  411716:	push   ebx
  411717:	es popf 
  411719:	fsubr  DWORD PTR [eax+0x13c08735]
  41171f:	xlat   BYTE PTR ds:[ebx]
  411720:	cmp    al,al
  411722:	xchg   cl,al
  411724:	inc    edi
  411725:	je     0x4116ed
  411727:	fld    st(7)
  411729:	mov    ebx,ss
  41172b:	lds    ecx,FWORD PTR [edi]
  41172d:	cmp    DWORD PTR [esi],0x7cea06c8
  411733:	pop    esp
  411734:	push   es
  411735:	jns    0x411709
  411737:	fimul  WORD PTR [edx+0xa6687f7]
  41173d:	inc    bl
  41173f:	call   0xe0727403
  411744:	lea    eax,[ebp+0x29]
  411747:	clc    
  411748:	push   es
  411749:	mov    al,BYTE PTR [eax]
  41174b:	retf   
  41174c:	mov    DWORD PTR [edx+0x7],esi
  41174f:	mov    dh,0x88
  411751:	mov    eax,0x2e0dfd07
  411756:	mov    al,bl
  411758:	test   DWORD PTR [edx+0x7],esi
  41175b:	push   esi
  41175c:	mov    al,ds:0x1e0d07b8
  411761:	push   es
  411762:	mov    bh,BYTE PTR [esi+0x9]
  411765:	add    eax,0x475e9650
  41176a:	mov    cl,BYTE PTR [ebx-0x3f]
  41176d:	jb     0x411776
  41176f:	mov    DWORD PTR [ebp+0x15],ebx
  411772:	std    
  411773:	ror    DWORD PTR [edi-0x49],1
  411776:	(bad)  
  411777:	aaa    
  411778:	loope  0x4117ec
  41177a:	push   es
  41177b:	pop    ecx
  41177c:	pusha  
  41177d:	mov    bh,0x7
  41177f:	or     eax,0x59691b86
  411784:	xchg   ecx,eax
  411785:	movzx  ebx,BYTE PTR [eax+0x405e0677]
  41178c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41178d:	xor    dl,al
  41178f:	aaa    
  411790:	jno    0x4117dd
  411792:	jae    0x41171b
  411794:	fld    st(3)
  411796:	add    edx,DWORD PTR [edi+eiz*8]
  411799:	xchg   ecx,eax
  41179a:	jmp    FWORD PTR [ecx+0x43]
  41179d:	or     DWORD PTR ss:[eax-0x3a],edi
  4117a1:	sbb    edx,ecx
  4117a3:	jae    0x41176b
  4117a5:	sbb    al,0x18
  4117a7:	jg     0x411783
  4117a9:	adc    BYTE PTR [edi],0x60
  4117ac:	(bad)  
  4117ad:	sbb    DWORD PTR ds:0xf4c65c00,esp
  4117b3:	sbb    dh,BYTE PTR [edx-0x20f40330]
  4117b9:	inc    ebx
  4117ba:	or     DWORD PTR [ebx+0x3f],ecx
  4117bd:	(bad)  
  4117be:	in     al,dx
  4117bf:	lods   eax,DWORD PTR ds:[esi]
  4117c0:	inc    esp
  4117c1:	outs   dx,BYTE PTR ds:[esi]
  4117c2:	js     0x4117d0
  4117c4:	or     dh,cl
  4117c6:	push   ebp
  4117c7:	fnstsw WORD PTR [eax-0x73]
  4117ca:	fbld   TBYTE PTR [ecx-0x1ac9fcf6]
  4117d0:	add    al,0xcb
  4117d2:	icebp  
  4117d3:	nop
  4117d4:	jp     0x41180b
  4117d6:	je     0x41179e
  4117d8:	xchg   ecx,eax
  4117da:	mov    ecx,0x603f758c
  4117df:	or     al,0x51
  4117e1:	dec    edi
  4117e2:	in     al,dx
  4117e3:	sbb    edx,DWORD PTR [esi+0x4903e142]
  4117e9:	add    DWORD PTR [edx-0x1e3a1e7c],ecx
  4117ef:	stos   BYTE PTR es:[edi],al
  4117f0:	(bad)
  4117f4:	pop    esp
  4117f5:	cmp    bl,BYTE PTR [ecx]
  4117f7:	stos   DWORD PTR es:[edi],eax
  4117f8:	les    edx,FWORD PTR [ecx]
  4117fa:	mov    eax,ds:0xd74ed1cf
  4117ff:	cli    
  411800:	lock cmp bl,cl
  411803:	into   
  411804:	leave  
  411805:	dec    esi
  411806:	mov    edi,0x60cc74b1
  41180b:	or     eax,0xfad04f71
  411810:	sar    BYTE PTR [eax-0x21],1
  411813:	xchg   BYTE PTR [eax],al
  411815:	mov    cs,WORD PTR [edx+0xa]
  411818:	mov    ebp,0x91f1c186
  41181d:	push   ss
  41181e:	ds pusha 
  411820:	in     eax,dx
  411821:	sub    eax,0x6cbada40
  411826:	mov    WORD PTR [eax],es
  411828:	fs sbb esi,ebp
  41182b:	ins    BYTE PTR es:[edi],dx
  41182c:	push   0xffffff91
  41182e:	cmp    bh,BYTE PTR [ebx-0xf]
  411831:	or     ah,0x85
  411834:	jne    0x4118b0
  411836:	cmc    
  411837:	(bad)  
  411839:	into   
  41183a:	push   0xffffffb3
  41183c:	xchg   DWORD PTR [eax],ecx
  41183e:	enter  0x5e0d,0x3a
  411842:	inc    eax
  411843:	cld    
  411844:	ins    BYTE PTR es:[edi],dx
  411845:	add    edx,edx
  411847:	rol    edx,0x2c
  41184a:	mov    dh,0x51
  41184c:	outs   dx,BYTE PTR ds:[esi]
  41184d:	out    0xbf,eax
  41184f:	out    dx,eax
  411850:	in     al,dx
  411851:	hlt    
  411852:	aaa    
  411853:	pop    es
  411854:	mov    bh,0x8e
  411856:	push   ecx
  411857:	stc    
  411858:	add    BYTE PTR [eax],0x3
  41185b:	or     edx,eax
  41185d:	inc    esp
  41185e:	push   0x51ba6c6c
  411863:	pop    es
  411864:	push   0xffffffad
  411866:	inc    edx
  411867:	sbb    esi,0xe161001f
  41186d:	bound  edi,QWORD PTR [edx+edx*2]
  411870:	stos   BYTE PTR es:[edi],al
  411871:	pop    ss
  411872:	adc    ah,bh
  411874:	ret    0x5197
  411877:	dec    esp
  411878:	out    0x0,al
  41187a:	xor    al,0x3b
  41187c:	ins    BYTE PTR es:[edi],dx
  41187d:	mov    dl,0x7f
  41187f:	push   ecx
  411880:	xor    al,0x1a
  411882:	inc    edx
  411883:	shl    cl,0xc
  411886:	pop    ss
  411887:	ds pusha 
  411889:	jmp    0x411868
  41188b:	xlat   BYTE PTR ds:[ebx]
  41188c:	sbb    ebp,DWORD PTR [edx-0x6e]
  41188f:	sbb    BYTE PTR [ebp+0x0],bh
  411892:	mov    edx,0x1c660323
  411897:	xor    dh,BYTE PTR ss:[edi-0x56]
  41189b:	mov    ds:0x71600afd,eax
  4118a0:	ret    0x1b8d
  4118a3:	retf   0x83c3
  4118a6:	popf   
  4118a7:	cmp    eax,0xbd65b703
  4118ac:	repnz xor ah,bh
  4118af:	and    ch,BYTE PTR [ebp-0x7b]
  4118b2:	xchg   esi,eax
  4118b3:	mov    bl,0x8
  4118b5:	adc    DWORD PTR [edi-0x34fd5dc2],0x40
  4118bc:	sti    
  4118bd:	fiadd  WORD PTR [esp+edi*1+0x47c70860]
  4118c4:	cmp    al,0x5e
  4118c6:	fcom   QWORD PTR [ebx-0x7c5b1380]
  4118cc:	inc    DWORD PTR [eax+0xacae3]
  4118d2:	das    
  4118d3:	xchg   edx,eax
  4118d4:	mov    ch,0x0
  4118d6:	sbb    eax,0x16570a40
  4118db:	lock jns 0x411957
  4118de:	add    BYTE PTR [ecx-0x43f781c7],bl
  4118e4:	imul   ebx,DWORD PTR es:[edx+0x7d883a10],0xffffffef
  4118ec:	aas    
  4118ed:	jle    0x411913
  4118ef:	adc    BYTE PTR [ebx+eax*1-0xacdb57d],dh
  4118f6:	call   DWORD PTR [eax+0x3e]
  4118f9:	test   DWORD PTR [ebp-0xbc7b5],eax
  4118ff:	pop    es
  411900:	add    BYTE PTR [ebx],cl
  411902:	add    DWORD PTR [edi+0x748bdd46],ebp
  411908:	dec    ebx
  411909:	mov    ?,esp
  41190b:	xchg   BYTE PTR [ebx+0x1],ch
  41190e:	(bad)  
  41190f:	scas   al,BYTE PTR es:[edi]
  411910:	repnz or eax,0xc55a8601
  411916:	inc    ebx
  411917:	inc    edi
  411918:	stos   DWORD PTR es:[edi],eax
  411919:	mov    ah,0x74
  41191b:	dec    ebx
  41191c:	add    DWORD PTR [eax],eax
  41191e:	add    BYTE PTR [esi-0x718d8327],al
  411924:	adc    DWORD PTR [ebp-0x1059fcff],0x57
  41192b:	pop    esi
  41192c:	(bad)  
  41192d:	aas    
  41192e:	(bad)  
  41192f:	popa   
  411930:	pusha  
  411931:	mov    bl,0x7
  411933:	popf   
  411934:	cwde   
  411935:	repz je 0x4118df
  411938:	sbb    DWORD PTR [eax],0xa9d98600
  41193e:	cmp    BYTE PTR [eax+0xefa4c],cl
  411944:	icebp  
  411945:	shl    BYTE PTR [esi+0x4c],cl
  411948:	or     BYTE PTR [ecx],0x6f
  41194b:	add    bl,bh
  41194d:	pop    ss
  41194e:	hlt    
  41194f:	dec    edi
  411950:	mov    ch,0x1
  411952:	or     eax,0x57fc1998
  411957:	add    BYTE PTR ds:0xa9bfddd7,bl
  41195d:	sub    ebp,DWORD PTR [edi]
  41195f:	rcl    DWORD PTR [edx-0x15755b27],0x59
  411966:	sbb    eax,DWORD PTR [edi]
  411968:	xchg   ecx,ebx
  41196a:	pop    es
  41196b:	push   esi
  41196c:	push   ecx
  41196d:	ins    BYTE PTR es:[edi],dx
  41196e:	sbb    DWORD PTR [eax],eax
  411970:	xchg   cl,bl
  411972:	jbe    0x411963
  411974:	or     eax,0xae3aa994
  411979:	retf   0x31f3
  41197c:	(bad)  
  41197d:	mov    edi,0x97f90eaa
  411982:	mov    bh,0xfe
  411984:	xor    eax,DWORD PTR [edx-0x7]
  411987:	jbe    0x4119e4
  411989:	cmp    BYTE PTR [edi+0x5ca8c51b],ch
  41198f:	or     BYTE PTR [edi],ch
  411991:	inc    edx
  411992:	or     BYTE PTR [eax+esi*1],cl
  411995:	aas    
  411996:	pop    ds
  411997:	mov    bl,0xa9
  411999:	inc    ebx
  41199a:	lahf   
  41199b:	add    al,BYTE PTR [esi-0x79fdc6a6]
  4119a1:	inc    edx
  4119a2:	push   esi
  4119a3:	rol    DWORD PTR [ecx+0x59712],0xe8
  4119aa:	retf   
  4119ab:	or     DWORD PTR [edi-0x15],esi
  4119ae:	inc    esi
  4119af:	mov    ecx,0xa2068b40
  4119b4:	mov    cl,0xc2
  4119b6:	stos   BYTE PTR es:[edi],al
  4119b7:	aas    
  4119b8:	push   eax
  4119b9:	push   eax
  4119ba:	ret    0x8660
  4119bd:	jge    0x411a01
  4119bf:	jne    0x41199f
  4119c1:	inc    eax
  4119c2:	cmp    ch,dl
  4119c4:	test   dl,ah
  4119c6:	mov    edx,0x433007eb
  4119cb:	xor    WORD PTR [ecx],0xdcc1
  4119d0:	pop    es
  4119d1:	sub    DWORD PTR [esi],esi
  4119d3:	loope  0x4119d9
  4119d5:	xchg   ah,bh
  4119d7:	loope  0x4119da
  4119d9:	xchg   BYTE PTR [edx+0x66],al
  4119dc:	adc    DWORD PTR [ecx],0xe907bcc1
  4119e2:	repz loope 0x4119e9
  4119e5:	xchg   dl,dh
  4119e7:	loop   0x41198f
  4119e9:	push   ebx
  4119ea:	mov    ebx,DWORD PTR [edi+0x6816e9fc]
  4119f0:	sbb    BYTE PTR [esi],al
  4119f2:	scas   eax,DWORD PTR es:[edi]
  4119f3:	in     eax,0x2
  4119f5:	xchg   BYTE PTR [edx+0x10],al
  4119f8:	scas   al,BYTE PTR es:[edi]
  4119f9:	push   es
  4119fa:	mov    esp,0x428601e1
  4119ff:	or     bh,bl
  411a01:	sbb    ecx,edi
  411a03:	xchg   cl,ah
  411a05:	test   eax,eax
  411a07:	repz sub ax,0x81b1
  411a0c:	lods   al,BYTE PTR ds:[esi]
  411a0d:	add    BYTE PTR [ecx+0x7c],bh
  411a10:	leave  
  411a11:	fsubp  st(3),st
  411a13:	les    esi,FWORD PTR [ebp-0x1f]
  411a16:	test   ebp,ecx
  411a18:	or     al,0x70
  411a1a:	(bad)  
  411a1b:	mov    ecx,0x3681077e
  411a20:	add    ch,BYTE PTR [edx-0x19]
  411a23:	test   eax,0xc1812ef4
  411a28:	xchg   BYTE PTR [edx+edx*4-0x41],ch
  411a2c:	repz push ds
  411a2e:	mov    bl,BYTE PTR [ecx+0xa]
  411a31:	call   0xb34f46bb
  411a36:	fimul  WORD PTR [esi]
  411a38:	bnd je 0x411a42
  411a3b:	test   eax,0xa980fef4
  411a40:	inc    esp
  411a41:	call   0x6cca5cd0
  411a46:	lea    eax,ds:0x36473f49
  411a4c:	adc    al,0xde
  411a4e:	push   ss
  411a4f:	dec    ecx
  411a50:	test   DWORD PTR [edx+edi*2],ebp
  411a53:	adc    DWORD PTR [esp+ebx*2-0x52],ebx
  411a57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a58:	test   dh,0x88
  411a5b:	mov    BYTE PTR [ebp-0x47],cl
  411a5e:	test   DWORD PTR [edx+ecx*1-0x17],eax
  411a62:	popf   
  411a63:	sub    ah,dh
  411a65:	scas   al,BYTE PTR es:[edi]
  411a66:	add    ch,0xca
  411a69:	sbb    al,0xf8
  411a6b:	push   es
  411a6c:	das    
  411a6d:	adc    al,0x96
  411a6f:	aaa    
  411a70:	test   al,0xda
  411a72:	add    BYTE PTR [ebp+0x1f],al
  411a75:	dec    edi
  411a76:	mov    al,ds:0xa4547
  411a7b:	push   esp
  411a7c:	jg     0x411a5e
  411a7e:	div    BYTE PTR [edx+0x3d]
  411a81:	fild   WORD PTR [ebx+0x4580b90b]
  411a87:	fucomi st,st(6)
  411a89:	xor    BYTE PTR [ebx+0x6b],0x3d
  411a8d:	push   edi
  411a8e:	push   ds
  411a8f:	xchg   ebx,eax
  411a90:	icebp  
  411a91:	cmp    BYTE PTR [ebp-0x59],0x9b
  411a95:	lock add esp,DWORD PTR [eax-0xb]
  411a99:	pop    esp
  411a9a:	push   ebx
  411a9b:	adc    al,0x7c
  411a9d:	add    BYTE PTR [ebp+0x53],0x5d
  411aa1:	cmp    esp,ecx
  411aa3:	outs   dx,BYTE PTR ds:[esi]
  411aa4:	inc    esp
  411aa5:	test   DWORD PTR [ebp-0x49],eax
  411aa8:	repz popa 
  411aaa:	inc    eax
  411aab:	test   al,0xd2
  411aad:	(bad)  
  411aae:	(bad)  
  411aaf:	adc    bh,BYTE PTR [esp+esi*8+0x33b22b15]
  411ab6:	add    dl,ah
  411ab8:	add    esi,DWORD PTR [edi+0x3e]
  411abb:	or     al,0x7f
  411abd:	mov    ecx,DWORD PTR [ebp+0x48]
  411ac0:	mov    WORD PTR [esi+0xc],es
  411ac3:	shl    DWORD PTR [esi+0x4912b604],0x80
  411aca:	inc    ebp
  411acb:	aaa    
  411acc:	cmp    dl,BYTE PTR [edi+0x15]
  411acf:	das    
  411ad0:	xchg   esp,eax
  411ad1:	pop    ss
  411ad2:	or     BYTE PTR [ecx],bh
  411ad4:	add    ch,dh
  411ad6:	add    BYTE PTR [eax],0xca
  411ad9:	inc    ebp
  411ada:	pop    es
  411adb:	jne    0x411b00
  411add:	jle    0x411b2d
  411adf:	call   FWORD PTR [edi]
  411ae1:	test   DWORD PTR [eax],esi
  411ae3:	dec    ebp
  411ae4:	jmp    0x411ab7
  411ae6:	aam    0x8d
  411ae8:	mov    ds:0x92ff434e,al
  411aed:	dec    esi
  411aee:	hlt    
  411aef:	jne    0x411acc
  411af1:	inc    esi
  411af2:	jle    0x411afc
  411af4:	xchg   al,bl
  411af6:	jecxz  0x411b43
  411af8:	je     0x411b63
  411afa:	push   cs
  411afb:	call   FWORD PTR [ebx+0x3d]
  411afe:	jno    0x411ad2
  411b00:	xor    DWORD PTR [eax-0x66],eax
  411b03:	sbb    eax,0xe731247a
  411b08:	retf   
  411b09:	in     al,0x7
  411b0b:	add    BYTE PTR [ecx-0x79],dl
  411b0e:	xor    cl,al
  411b10:	jp     0x411abb
  411b12:	jb     0x411b13
  411b14:	add    al,0x12
  411b16:	or     eax,0x4e268d73
  411b1b:	jae    0x411aa6
  411b1d:	(bad)  [esi]
  411b1f:	adc    al,0xe6
  411b21:	fwait
  411b22:	(bad)  
  411b23:	inc    DWORD PTR [esi+ebx*8+0x72]
  411b27:	jmp    0x411b2e
  411b29:	add    eax,0xb5628206
  411b2e:	mov    edx,0x26348669
  411b33:	mov    cl,bl
  411b35:	mov    cl,0xd4
  411b37:	(bad)  
  411b38:	pop    ecx
  411b39:	ror    BYTE PTR [esi],1
  411b3b:	dec    edi
  411b3c:	add    BYTE PTR [ecx+0x3e],dl
  411b3f:	jecxz  0x411baa
  411b41:	xchg   al,al
  411b43:	test   BYTE PTR [edi],cl
  411b45:	inc    ecx
  411b46:	ds sti 
  411b48:	(bad)  
  411b49:	mov    bl,0xa1
  411b4b:	push   cs
  411b4c:	adc    al,0x76
  411b4e:	mov    ebx,0xa104ffc7
  411b53:	push   cs
  411b54:	je     0x411ae0
  411b56:	pop    ebx
  411b57:	dec    esi
  411b58:	jmp    0xa986:0x17b49863
  411b5f:	xchg   edi,edi
  411b61:	(bad)  
  411b62:	stos   DWORD PTR es:[edi],eax
  411b63:	adc    DWORD PTR [edi],0x5
  411b66:	gs jmp 0x8223:0xbb2bf907
  411b6e:	inc    edx
  411b6f:	lods   al,BYTE PTR ds:[esi]
  411b70:	jbe    0x411bb7
  411b72:	data16 stc 
  411b74:	mov    bl,0x51
  411b76:	adc    al,BYTE PTR [edi]
  411b78:	add    al,0xee
  411b7a:	stos   DWORD PTR es:[edi],eax
  411b7b:	fild   WORD PTR [ebx]
  411b7d:	xchg   dl,dh
  411b7f:	loop   0x411b29
  411b81:	cld    
  411b82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b83:	push   ss
  411b84:	inc    edx
  411b85:	xchg   ebp,eax
  411b86:	inc    edx
  411b87:	push   ss
  411b88:	jns    0x411b37
  411b8a:	adc    BYTE PTR [edx],dl
  411b8c:	ja     0x411bd8
  411b8e:	mov    edx,0x4a4278b1
  411b93:	push   esp
  411b94:	shl    DWORD PTR [eax+0x59f20954],cl
  411b9a:	inc    edx
  411b9b:	outs   dx,BYTE PTR ds:[esi]
  411b9c:	inc    ebx
  411b9d:	sbb    al,BYTE PTR [esi-0x11]
  411ba0:	inc    ebx
  411ba1:	add    BYTE PTR [esp+ecx*2-0x33864188],bl
  411ba8:	jecxz  0x411c22
  411baa:	ret    0x6abe
  411bad:	mov    ebp,0x3ae2f285
  411bb2:	inc    edi
  411bb3:	inc    edi
  411bb4:	loope  0x411b64
  411bb6:	or     al,0xaf
  411bb8:	pusha  
  411bb9:	pop    ss
  411bba:	mov    ecx,eax
  411bbc:	mov    cs,WORD PTR [edi]
  411bbe:	push   ecx
  411bbf:	adc    eax,0x43df43b0
  411bc4:	data16 xchg BYTE PTR [ecx],bh
  411bc7:	jmp    0x8de4:0x1335be6e
  411bce:	cmp    edx,ecx
  411bd0:	es or  al,0x2b
  411bd3:	cmp    ch,bl
  411bd5:	add    edx,DWORD PTR [edi-0x43]
  411bd8:	test   BYTE PTR [edi+0x74],0x2
  411bdc:	loope  0x411b66
  411bde:	inc    esi
  411bdf:	cmp    ch,ah
  411be1:	xor    eax,0x8ee6aa46
  411be6:	inc    ebp
  411be7:	mov    dh,0xa
  411be9:	pusha  
  411bea:	mov    ebx,cs
  411bec:	dec    ebp
  411bed:	mov    cl,0x3
  411bef:	add    eax,0x1f83590e
  411bf4:	shr    DWORD PTR [ebx+0x1df3428e],0xae
  411bfb:	dec    esi
  411bfc:	pusha  
  411bfd:	jmp    0xd96f5386
  411c02:	test   BYTE PTR [edi],dh
  411c04:	fld    DWORD PTR cs:[eax]
  411c07:	test   BYTE PTR [ebx-0xd],dh
  411c0a:	fadd   QWORD PTR [ecx+0x50]
  411c0d:	dec    edx
  411c0e:	jmp    0x2950b6bf
  411c13:	lods   eax,DWORD PTR ds:[esi]
  411c14:	call   0x457f:0x1185edc8
  411c1b:	sub    BYTE PTR [edx-0x7b],al
  411c1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c1f:	jne    0x411c33
  411c21:	repz mov esp,0xf14dcb75
  411c27:	test   BYTE PTR [esi],dh
  411c29:	push   es
  411c2a:	ss mov dl,0xbf
  411c2d:	sbb    eax,0xa029bf5
  411c32:	ins    BYTE PTR es:[edi],dx
  411c33:	inc    edx
  411c34:	xor    DWORD PTR ds:0xdfbf526a,ecx
  411c3a:	jmp    0x4e4b:0xac1a0108
  411c41:	or     bl,BYTE PTR [edx-0x23cd6470]
  411c47:	sbb    eax,0xbee94781
  411c4c:	je     0x411caa
  411c4e:	das    
  411c4f:	push   edx
  411c50:	add    DWORD PTR [edi-0x17],0xcd1dbfcf
  411c57:	jnp    0x411c5b
  411c59:	or     dl,BYTE PTR [ecx]
  411c5b:	addr16 fcmove st,st(5)
  411c5e:	sub    cl,BYTE PTR [edx-0x69ffeecf]
  411c64:	bound  eax,QWORD PTR [esi]
  411c66:	mov    bh,0xac
  411c68:	inc    esi
  411c69:	mov    ebx,DWORD PTR ds:0x49f7e700
  411c6f:	add    BYTE PTR [esi+0x62],ah
  411c72:	xchg   esi,eax
  411c73:	lds    ebx,FWORD PTR [esi+eax*2-0x75f8fa34]
  411c7a:	dec    ecx
  411c7b:	add    dh,ch
  411c7d:	sbb    dh,ch
  411c7f:	adc    eax,0x4a56ef
  411c84:	mov    eax,ds:0x6cb702e7
  411c89:	inc    esi
  411c8a:	xor    ebx,eax
  411c8c:	mov    edx,0xbad06268
  411c91:	add    BYTE PTR [edx],cl
  411c93:	jmp    FWORD PTR [edx-0x50bfe770]
  411c99:	jnp    0x411c64
  411c9b:	je     0x411c37
  411c9d:	sub    dh,ah
  411c9f:	jne    0x411c80
  411ca1:	inc    eax
  411ca2:	pop    edx
  411ca3:	jmp    FWORD PTR [edx+0x6f4018fc]
  411ca9:	in     eax,0x2
  411cab:	mov    bh,0x2c
  411cad:	inc    eax
  411cae:	xor    ebx,eax
  411cb0:	cmp    al,BYTE PTR [eax+edi*1-0x40]
  411cb4:	xchg   esp,eax
  411cb5:	pop    edx
  411cb6:	or     DWORD PTR [ebx+ecx*2+0x48],0x33702860
  411cbe:	adc    BYTE PTR cs:[ecx+eax*2],cl
  411cc2:	cmp    bh,bh
  411cc4:	outs   dx,DWORD PTR ds:[esi]
  411cc5:	mov    eax,0xb86f1bd2
  411cca:	rcr    BYTE PTR [ebx+0x6d],cl
  411ccd:	inc    edi
  411cce:	or     dl,BYTE PTR [ebx+0x0]
  411cd1:	in     al,dx
  411cd2:	pushf  
  411cd3:	xor    bl,BYTE PTR ds:0x498407
  411cd9:	mov    edx,0x86be5c78
  411cde:	icebp  
  411cdf:	retf   
  411ce0:	inc    ecx
  411ce1:	xchg   BYTE PTR [ebx+0x9],dh
  411ce4:	adc    al,0x1a
  411ce6:	cwde   
  411ce7:	inc    edi
  411ce8:	add    BYTE PTR [esi+0x45c38f9e],bh
  411cee:	test   eax,0x8eff177c
  411cf3:	add    esi,DWORD PTR [ebp+0x1b80a945]
  411cf9:	mov    ss,WORD PTR [ecx*2-0x6c48f100]
  411d00:	ret    
  411d01:	inc    ebp
  411d02:	test   eax,0xeeee03c1
  411d07:	dec    ebp
  411d08:	add    BYTE PTR [edi-0x49ebf6ad],al
  411d0e:	xchg   edi,eax
  411d0f:	inc    edi
  411d10:	add    BYTE PTR [eax+0xa],dl
  411d13:	sbb    dh,BYTE PTR [ebp-0x3ec956bb]
  411d19:	sbb    edx,DWORD PTR [ecx+0x66]
  411d1c:	rcl    BYTE PTR [ebx],1
  411d1e:	jmp    0x79bd1a2a
  411d23:	sbb    al,0x40
  411d25:	xchg   BYTE PTR [eax-0x33],al
  411d28:	je     0x411cc5
  411d2a:	xchg   ecx,eax
  411d2b:	add    esi,DWORD PTR [esi-0x3a]
  411d2e:	test   eax,0x2d9bfd57
  411d33:	sbb    al,0x40
  411d35:	add    BYTE PTR [esi-0x3a4ae5f8],al
  411d3b:	test   eax,0xadd3c136
  411d40:	cmp    eax,0x86b65dc0
  411d45:	dec    esp
  411d46:	mov    ds:0x412865b1,al
  411d4b:	xor    eax,0xb4d5102b
  411d50:	cmp    ch,bh
  411d52:	push   esi
  411d53:	mov    ah,0xcf
  411d55:	sbb    DWORD PTR [esi+0x42],eax
  411d58:	aam    0xdb
  411d5a:	mov    edi,0xb503f980
  411d5f:	(bad)  
  411d60:	int    0x84
  411d62:	and    ch,BYTE PTR [esi+0x3b]
  411d65:	pop    ecx
  411d66:	(bad)  
  411d67:	cmp    al,0xd1
  411d69:	mov    esi,?
  411d6b:	les    esi,FWORD PTR [edi+esi*2+0x70e2aa65]
  411d72:	icebp  
  411d73:	mov    edx,0x1e7407e5
  411d78:	jle    0x411dc0
  411d7a:	mov    edx,0xc0ec3b11
  411d7f:	mov    ebx,0x820b009c
  411d84:	push   ds
  411d85:	or     BYTE PTR [edx+eax*4+0x3d077c98],dl
  411d8c:	stc    
  411d8d:	add    ecx,DWORD PTR [edi]
  411d8f:	jne    0x411d42
  411d91:	sbb    DWORD PTR [esi+0x42],eax
  411d94:	pop    es
  411d95:	or     al,0x4b
  411d97:	ss (bad) 
  411d99:	pop    eax
  411d9a:	add    BYTE PTR ds:0x9b533d05,cl
  411da0:	xor    al,0xe9
  411da2:	add    BYTE PTR [ecx+0x70f2dbe],bh
  411da8:	cmp    eax,0x47fa03fd
  411dad:	pushf  
  411dae:	mov    es,ebp
  411db0:	xchg   esi,eax
  411db1:	xchg   ecx,eax
  411db2:	add    dl,bh
  411db4:	inc    esi
  411db5:	and    al,0xd9
  411db7:	pop    es
  411db8:	jg     0x411db7
  411dba:	xchg   BYTE PTR [edi],bh
  411dbc:	das    
  411dbd:	clc    
  411dbe:	pop    eax
  411dbf:	or     eax,0xb7530500
  411dc4:	mov    ecx,0x4742843b
  411dc9:	xchg   esp,eax
  411dca:	mov    es,ebp
  411dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dcd:	xchg   ecx,eax
  411dce:	add    BYTE PTR [edx+0x4ef60a52],dh
  411dd4:	lods   al,BYTE PTR ds:[esi]
  411dd5:	es fs dec edx
  411dd8:	int3   
  411dd9:	retf   
  411dda:	test   dh,0x83
  411ddd:	pop    edx
  411dde:	ficomp WORD PTR [edi-0x7da30cba]
  411de4:	mov    bh,0x3c
  411de6:	into   
  411de7:	outs   dx,DWORD PTR ds:[esi]
  411de8:	bound  ebx,QWORD PTR [eax]
  411dea:	sub    DWORD PTR [edx+0x1a35cac5],ecx
  411df0:	(bad)  
  411df1:	repz cmp eax,0x35cfc59b
  411df7:	xchg   edi,eax
  411df8:	sub    al,0x2
  411dfa:	cmp    bh,BYTE PTR [ecx]
  411dfc:	mov    bh,0x1d
  411dfe:	fld    DWORD PTR [eax]
  411e00:	jae    0x411e04
  411e02:	or     ch,BYTE PTR [edx-0x42]
  411e05:	inc    esi
  411e06:	mov    edx,0xc11828e8
  411e0b:	stos   DWORD PTR es:[edi],eax
  411e0c:	xchg   esi,eax
  411e0d:	inc    edx
  411e0e:	pop    ebp
  411e0f:	jb     0x411dc7
  411e11:	or     DWORD PTR [edi+0x76],edx
  411e14:	das    
  411e15:	dec    edx
  411e16:	repz aam 0x6d
  411e19:	push   esp
  411e1a:	dec    edx
  411e1b:	jmp    0xd634d924
  411e20:	dec    ecx
  411e21:	ret    
  411e22:	inc    ebp
  411e23:	push   ebp
  411e24:	xchg   ecx,eax
  411e25:	ret    
  411e26:	jmp    0xef99:0x1da2c2f9
  411e2d:	inc    ebx
  411e2e:	pusha  
  411e2f:	out    0xed,al
  411e31:	inc    edx
  411e32:	or     ch,cl
  411e34:	add    eax,0x16e17db7
  411e39:	add    eax,0xb65511f6
  411e3e:	repz push ds
  411e40:	push   cs
  411e41:	cmp    BYTE PTR [esi-0x38],0xdf
  411e45:	inc    edx
  411e46:	pusha  
  411e47:	jmp    0x475394
  411e4c:	cld    
  411e4d:	fwait
  411e4e:	jg     0x411e95
  411e50:	cmp    ebp,DWORD PTR [ebp-0x47c700fa]
  411e56:	mov    es,eax
  411e58:	mov    bl,0x49
  411e5a:	jg     0x411ea1
  411e5c:	sub    ebp,DWORD PTR [ebp-0x47c7034b]
  411e62:	mov    edx,0x4b440001
  411e67:	jg     0x411eae
  411e69:	cmp    ebp,DWORD PTR [ebp-0x48370347]
  411e6f:	cmp    al,al
  411e71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e72:	xchg   eax,ecx
  411e74:	or     bh,bl
  411e76:	sbb    DWORD PTR [ecx+0x26a95cec],eax
  411e7c:	sub    DWORD PTR [edx+0x73560a5a],0x35
  411e83:	loop   0x411e77
  411e85:	mov    bh,BYTE PTR [edi]
  411e87:	or     bh,BYTE PTR [ebx+eiz*8]
  411e8a:	xor    ah,BYTE PTR [eax-0x73]
  411e8d:	jb     0x411e25
  411e8f:	pop    edx
  411e90:	push   ebx
  411e91:	pop    ss
  411e92:	lock out dx,eax
  411e94:	(bad)  
  411e95:	cmp    cl,al
  411e97:	retf   0xac74
  411e9a:	ret    
  411e9b:	outs   dx,DWORD PTR ds:[esi]
  411e9c:	or     BYTE PTR [edi-0x6ecfc835],ch
  411ea2:	add    al,0xa
  411ea4:	je     0x411e4f
  411ea6:	sub    al,BYTE PTR [edx]
  411ea8:	push   DWORD PTR [edx-0x58ba80b4]
  411eae:	adc    esi,ebp
  411eb0:	(bad)  
  411eb1:	in     al,dx
  411eb2:	jg     0x411eba
  411eb4:	cmp    DWORD PTR [edx],0x48
  411eb7:	or     dh,BYTE PTR [ecx+ecx*2+0x2a]
  411ebb:	add    bh,bh
  411ebd:	add    cl,BYTE PTR [eax+0x7f]
  411ec0:	inc    ebp
  411ec1:	(bad)  
  411ec2:	adc    esi,ebp
  411ec4:	(bad)  
  411ec5:	xchg   BYTE PTR [ebx+ecx*8],ch
  411ec8:	or     al,0x0
  411eca:	add    eax,0xba0017c7
  411ecf:	scas   eax,DWORD PTR es:[edi]
  411ed0:	popa   
  411ed1:	or     BYTE PTR [ecx],bh
  411ed3:	das    
  411ed4:	pop    ss
  411ed5:	mov    ecx,ebx
  411ed7:	inc    ecx
  411ed8:	push   edi
  411ed9:	std    
  411eda:	push   eax
  411edb:	sub    eax,0xb1ac0ccb
  411ee0:	div    BYTE PTR [ebx+0x72]
  411ee3:	es dec ebx
  411ee5:	lock mov dh,0x90
  411ee8:	fadd   QWORD PTR [ecx+0x43849642]
  411eee:	ficomp WORD PTR [ecx+0x59]
  411ef1:	call   0xfe3715d8
  411ef6:	fstp   QWORD PTR [eax-0x17698c0a]
  411efc:	jnp    0x411f0a
  411efe:	loope  0x411f56
  411f00:	push   es
  411f01:	std    
  411f02:	xchg   ebp,eax
  411f03:	fcomp  DWORD PTR [ebx]
  411f05:	inc    eax
  411f06:	je     0x411f71
  411f08:	push   cs
  411f09:	cmc    
  411f0a:	scas   al,BYTE PTR es:[edi]
  411f0b:	mov    ah,0xc7
  411f0d:	cmc    
  411f0e:	ficomp WORD PTR [edi-0x41]
  411f11:	ret    0xa996
  411f14:	pop    edi
  411f15:	add    BYTE PTR [esi+0x32fd07a9],0x7d
  411f1c:	(bad)  
  411f1d:	cld    
  411f1e:	jnp    0x411ed9
  411f20:	sbb    DWORD PTR [eax-0x7a],eax
  411f23:	sbb    BYTE PTR [edx+0x24],dh
  411f26:	mov    dl,BYTE PTR [eax]
  411f28:	sbb    ebx,DWORD PTR [esp+esi*2]
  411f2b:	jmp    0x5e421437
  411f30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f31:	(bad)  
  411f32:	cmc    
  411f33:	pop    esi
  411f34:	imul   eax,DWORD PTR [edx],0x0
  411f37:	(bad)  [edx+edi*8]
  411f3a:	sbb    DWORD PTR [edx-0x73],0x42624b8a
  411f41:	sub    al,0x51
  411f43:	mov    al,0x2a
  411f45:	popa   
  411f46:	add    al,0x86
  411f48:	inc    edx
  411f49:	xchg   DWORD PTR [eax],eax
  411f4b:	fadd   QWORD PTR [ebx-0x77]
  411f4e:	add    eax,DWORD PTR [esi-0x4a029ebe]
  411f54:	dec    edx
  411f55:	inc    di
  411f57:	xor    ch,BYTE PTR [edx-0x48d406e3]
  411f5d:	ins    DWORD PTR es:[edi],dx
  411f5e:	les    ebx,FWORD PTR [edx+0x1a467e22]
  411f64:	adc    ah,BYTE PTR [esi+0x76]
  411f67:	push   ss
  411f68:	stos   BYTE PTR es:[edi],al
  411f69:	or     eax,0x6db70800
  411f6e:	ret    
  411f6f:	jp     0x411f83
  411f71:	lock fdiv DWORD PTR [ecx+0x4974bd15]
  411f78:	retf   
  411f79:	ss hlt 
  411f7b:	je     0x411fc2
  411f7d:	(bad)  
  411f7e:	std    
  411f7f:	xchg   BYTE PTR [edx+0x41],al
  411f82:	add    edx,DWORD PTR [ebx+0x76]
  411f85:	jmp    0xd738:0xe52eda5e
  411f8c:	das    
  411f8d:	and    BYTE PTR [esi-0x52],dl
  411f90:	ss push eax
  411f92:	cld    
  411f93:	add    BYTE PTR [ebx-0x38c71338],bh
  411f99:	sub    eax,0x4fd50c4
  411f9e:	jmp    0x6c5357f5
  411fa3:	jbe    0x411f3f
  411fa5:	mov    dh,0xfe
  411fa7:	aaa    
  411fa8:	je     0x411fac
  411faa:	loope  0x411f32
  411fac:	(bad)  
  411fad:	sub    eax,0x4ac588d5
  411fb2:	or     dh,al
  411fb4:	cmc    
  411fb5:	aas    
  411fb6:	jp     0x411ffc
  411fb8:	mov    ch,BYTE PTR [ecx+0x706ad50a]
  411fbe:	loop   0x411f7b
  411fc0:	div    BYTE PTR [edi-0x493f8b0d]
  411fc6:	loop   0x411f84
  411fc8:	dec    esi
  411fc9:	mov    eax,0x1545dbf3
  411fce:	dec    edi
  411fcf:	and    BYTE PTR [edi+0x3f],al
  411fd2:	or     dh,BYTE PTR [eax-0x66]
  411fd5:	mov    ebp,0x200e553
  411fda:	test   BYTE PTR [ecx],0xbd
  411fdd:	mov    ebx,0xb5d4eef3
  411fe2:	loopne 0x411fb4
  411fe4:	or     BYTE PTR [ebx],cl
  411fe6:	dec    ecx
  411fe7:	imul   edx,DWORD PTR [ebx],0x5fd77b6
  411fed:	scas   al,BYTE PTR es:[edi]
  411fee:	or     BYTE PTR [ebp+eax*4+0x73],dl
  411ff2:	ror    DWORD PTR [edi+0xb],0x49
  411ff6:	fcomip st,st(1)
  411ff8:	add    BYTE PTR ds:0x813c0eae,al
  411ffe:	ret    
  411fff:	sub    cl,ch
  412001:	adc    ecx,DWORD PTR [ebx]
  412003:	cmp    dh,BYTE PTR [ebx+0x42]
  412006:	jne    0x412038
  412008:	mov    cl,0x59
  41200a:	inc    eax
  41200b:	sub    BYTE PTR [eax+0x39caec7d],0xbd
  412012:	cs cs icebp 
  412015:	push   ebx
  412016:	stos   BYTE PTR es:[edi],al
  412017:	pop    ebx
  412018:	pop    edx
  412019:	lods   eax,DWORD PTR ds:[esi]
  41201a:	mov    bh,0xc8
  41201c:	in     eax,dx
  41201d:	test   DWORD PTR [ecx],edx
  41201f:	jg     0x41209e
  412021:	cmp    eax,DWORD PTR ds:0x4a459e03
  412027:	push   edi
  412028:	jae    0x412057
  41202a:	jb     0x412088
  41202c:	out    0xd4,al
  41202e:	xor    DWORD PTR [edx],ebx
  412030:	fidiv  WORD PTR [edi*2+0x4b3b0085]
  412037:	cmc    
  412038:	sldt   WORD PTR [esi+0x49afaf05]
  41203f:	mov    ebp,0xf51be7d2
  412044:	ud1    eax,DWORD PTR [ebx]
  412047:	cmc    
  412048:	pushaw 
  41204a:	call   0xf3a12c96
  41204f:	rol    DWORD PTR [ebx],1
  412051:	popf   
  412052:	cmp    eax,0xadd00fc0
  412057:	add    eax,0x3fc774af
  41205c:	clc    
  41205d:	add    BYTE PTR [eax],ah
  41205f:	lock retf 0x813b
  412063:	dec    ecx
  412064:	lea    ebx,[eax+0xf0a412f]
  41206a:	clc    
  41206b:	or     BYTE PTR [ebx+0x55c40f45],0x14
  412072:	ins    BYTE PTR es:[edi],dx
  412073:	and    al,BYTE PTR [esi]
  412075:	add    ah,ch
  412077:	xchg   ebp,eax
  412078:	mov    DWORD PTR [ebp-0x31],edi
  41207b:	inc    eax
  41207c:	jl     0x4120a4
  41207e:	add    al,BYTE PTR fs:[esi]
  412081:	mov    edi,DWORD PTR [edx+0x46]
  412084:	or     ebx,eax
  412086:	lahf   
  412087:	vpsubsb ymm0,ymm6,YMMWORD PTR [esi-0x47]
  41208c:	cmc    
  41208d:	jmp    eax
  41208f:	repnz dec ebp
  412091:	inc    ecx
  412092:	scas   al,BYTE PTR es:[edi]
  412093:	add    DWORD PTR [edx],eax
  412095:	vmwrite eax,DWORD PTR [eax]
  412098:	cmp    al,BYTE PTR [ecx]
  41209a:	push   0x4a
  41209c:	add    DWORD PTR [ebp-0x5d],0x9d104773
  4120a3:	xchg   esi,eax
  4120a4:	or     DWORD PTR [edi-0x79],0x9c414dc4
  4120ab:	or     edx,esi
  4120ad:	cmp    al,0x86
  4120af:	stos   BYTE PTR es:[edi],al
  4120b0:	jp     0x4120c3
  4120b2:	or     eax,0x450117df
  4120b7:	adc    DWORD PTR [ecx],ecx
  4120b9:	mov    dl,BYTE PTR [ebp-0x3ac0e1cf]
  4120bf:	mov    al,0xcf
  4120c1:	jb     0x4120c3
  4120c3:	pop    eax
  4120c4:	add    DWORD PTR [ebx],ebp
  4120c6:	cmp    al,0x84
  4120c8:	(bad)  
  4120c9:	sbb    al,0x89
  4120cb:	retf   
  4120cc:	mov    ecx,0xa45dc10c
  4120d1:	test   DWORD PTR [ecx],edx
  4120d3:	push   cs
  4120d4:	mov    ebx,0x617d414e
  4120d9:	jge    0x4120d1
  4120db:	sbb    eax,0xb3043b8f
  4120e0:	call   0xe9cc:0xa8764384
  4120e7:	sub    BYTE PTR [edi],0x1d
  4120ea:	mov    BYTE PTR [edi+0x6a],dh
  4120ed:	dec    ebp
  4120ee:	cmp    DWORD PTR [esi],ebp
  4120f0:	sbb    al,bh
  4120f2:	mov    DWORD PTR [ebx-0x6f],edx
  4120f5:	or     eax,0x4b328a4d
  4120fa:	clc    
  4120fb:	lods   eax,DWORD PTR ds:[esi]
  4120fc:	jecxz  0x4120ff
  4120fe:	xchg   BYTE PTR [eax-0x14],bl
  412101:	icebp  
  412102:	std    
  412103:	inc    eax
  412104:	push   eax
  412105:	mov    edi,0x44a98ac2
  41210a:	mov    edx,esp
  41210c:	sub    dl,ah
  41210e:	xor    BYTE PTR ds:0xd4315973,dh
  412114:	cwde   
  412115:	repnz inc ebp
  412117:	jne    0x412102
  412119:	jg     0x41216e
  41211b:	sahf   
  41211c:	xor    al,BYTE PTR [ebx-0x10]
  41211f:	call   DWORD PTR [esi-0x2a]
  412122:	xchg   DWORD PTR [ebx],esp
  412124:	mov    ebp,0x7200532f
  412129:	inc    edx
  41212a:	cld    
  41212b:	mov    edi,edi
  41212d:	inc    ecx
  41212e:	loope  0x412133
  412130:	inc    DWORD PTR ds:0x96d58ae9
  412136:	push   0x47
  412138:	push   0xffffffc7
  41213a:	mov    esi,0x490d0913
  41213f:	cmp    eax,0x606b433c
  412144:	popa   
  412145:	mov    bl,0xe1
  412147:	mov    ebp,cs
  412149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41214a:	js     0x41219b
  41214c:	dec    esi
  41214d:	enter  0x12e5,0xfe
  412151:	add    al,0x1c
  412153:	ds int 0x5a
  412156:	aam    0x7f
  412158:	js     0x41219b
  41215a:	loope  0x41215f
  41215c:	std    
  41215d:	adc    esp,esi
  41215f:	rol    ch,0xa2
  412162:	loop   0x412167
  412164:	xchg   BYTE PTR [edx+0x68],al
  412167:	hlt    
  412168:	pop    edi
  412169:	std    
  41216a:	hlt    
  41216b:	jbe    0x412119
  41216d:	(bad)  
  41216e:	push   esi
  41216f:	call   0x8d165675
  412174:	pop    ebp
  412175:	scas   al,BYTE PTR es:[edi]
  412176:	push   0xfd79fe76
  41217b:	cmp    al,0x75
  41217d:	cld    
  41217e:	ja     0x412158
  412180:	scas   eax,DWORD PTR es:[edi]
  412181:	adc    eax,0xc79076d1
  412186:	push   es
  412187:	lock sahf 
  412189:	inc    esi
  41218a:	call   0xfbc921fd
  41218f:	out    0x76,eax
  412191:	jbe    0x4121c9
  412193:	(bad)  
  412197:	push   ds
  412198:	add    al,BYTE PTR [ecx]
  41219a:	xor    eax,0xb22d8a99
  41219f:	enter  0xb676,0x34
  4121a3:	or     ch,dl
  4121a5:	or     al,0x37
  4121a7:	cli    
  4121a8:	push   0x10
  4121aa:	mov    ds:0x797de70a,al
  4121af:	jne    0x412202
  4121b1:	adc    DWORD PTR [ecx+0x48],eax
  4121b4:	inc    edx
  4121b5:	add    ebx,0xbb85496d
  4121bb:	jne    0x412196
  4121bd:	test   BYTE PTR ds:0x35aaa7fe,ch
  4121c3:	push   ds
  4121c4:	mov    ch,0x2e
  4121c6:	mov    esp,0xfe0a4575
  4121cb:	loope  0x41219f
  4121cd:	enter  0x1faa,0x39
  4121d1:	les    eax,FWORD PTR [ecx+eax*4]
  4121d4:	mov    esp,0x195dbc61
  4121d9:	push   0x15
  4121db:	bnd jb 0x4121b6
  4121de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121df:	pop    ds
  4121e0:	stc    
  4121e1:	sbb    edi,0x360cabd1
  4121e7:	(bad)  
  4121e9:	out    dx,al
  4121ea:	mov    ah,0x2f
  4121ec:	(bad)  
  4121ed:	cwde   
  4121ee:	cmp    bh,BYTE PTR [edi+0x3c]
  4121f1:	add    BYTE PTR [esi],ah
  4121f3:	retf   0xc945
  4121f6:	in     eax,dx
  4121f7:	dec    eax
  4121f8:	jg     0x412226
  4121fa:	(bad)  
  4121fb:	leave  
  4121fc:	pop    ebp
  4121fd:	leave  
  4121fe:	or     ch,BYTE PTR [esi]
  412200:	push   ss
  412201:	jmp    0x3c492204
  412206:	test   DWORD PTR [ebp+0x160cea43],edi
  41220c:	sbb    dh,dh
  41220e:	sub    BYTE PTR [esi],dl
  412210:	push   ds
  412211:	loop   0x4121d2
  412213:	aas    
  412214:	sbb    DWORD PTR [edi-0x76],0x42
  412218:	or     cl,BYTE PTR [esi+0x8a8a47]
  41221e:	mov    cl,BYTE PTR [edx+0xa]
  412221:	mov    esi,DWORD PTR [edx+0x25077749]
  412227:	sti    
  412228:	hlt    
  412229:	mov    BYTE PTR [ebx-0x2575b2a0],bh
  41222f:	lods   eax,DWORD PTR ds:[esi]
  412230:	retf   0xa3e1
  412233:	cmp    eax,edx
  412235:	mov    BYTE PTR [ebx+0x60],ch
  412238:	or     BYTE PTR [ebp-0x31],0xb8
  41223c:	retf   
  41223d:	sar    BYTE PTR [esi-0x57ac80be],0x3c
  412244:	rol    BYTE PTR [ebx],0x77
  412247:	mov    esi,0xc46e3746
  41224c:	int    0x2
  41224e:	(bad)  
  41224f:	sub    ebp,esi
  412251:	mov    DWORD PTR [edx],esp
  412253:	mov    eax,ds:0x7f005d8b
  412258:	ins    DWORD PTR es:[edi],dx
  412259:	leave  
  41225a:	jge    0x412248
  41225c:	mov    ebx,0xfbb4e057
  412261:	icebp  
  412262:	add    ecx,DWORD PTR [esi-0x5b2ba841]
  412268:	adc    edx,esi
  41226a:	mov    edx,esi
  41226c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41226d:	loope  0x412289
  41226f:	xchg   esp,eax
  412270:	cli    
  412271:	icebp  
  412272:	jmp    0x412286
  412274:	les    ebp,FWORD PTR [edi-0xc]
  412277:	fsub   DWORD PTR [eax]
  412279:	push   ds
  41227a:	mov    esi,DWORD PTR [edx-0x88a7e5a]
  412280:	mov    edx,0x95dc184f
  412285:	sbb    BYTE PTR [ebx*8-0xcb2cefb],0x38
  41228d:	in     al,dx
  41228e:	mov    ebx,DWORD PTR [edx-0xcba0aaa]
  412294:	inc    ebp
  412295:	aas    
  412296:	loopne 0x41221e
  412298:	and    al,0x42
  41229a:	hlt    
  41229b:	jge    0x4122eb
  41229d:	fidivr WORD PTR [esi+edx*8-0x39]
  4122a1:	dec    edx
  4122a2:	clc    
  4122a3:	std    
  4122a4:	pop    ebp
  4122a5:	push   ds
  4122a6:	aaa    
  4122a7:	push   ebx
  4122a8:	xor    ecx,DWORD PTR [esp+ecx*4]
  4122ab:	clc    
  4122ac:	and    ah,bh
  4122ae:	std    
  4122af:	push   ebp
  4122b0:	ins    DWORD PTR es:[edi],dx
  4122b1:	push   cs
  4122b2:	dec    ebx
  4122b3:	stos   BYTE PTR es:[edi],al
  4122b4:	cdq    
  4122b5:	inc    edx
  4122b6:	in     al,dx
  4122b7:	(bad)  
  4122b8:	push   esp
  4122b9:	dec    ecx
  4122ba:	adc    al,0x0
  4122bc:	mov    DWORD PTR ds:0x971fe7d,ecx
  4122c2:	add    BYTE PTR [ebx+0x7a],0x33
  4122c6:	inc    edx
  4122c7:	fmul   DWORD PTR [esi]
  4122c9:	mov    ds:0xbfb9c580,al
  4122ce:	push   eax
  4122cf:	mov    DWORD PTR [edx+eax*2+0xe],0xfa554631
  4122d7:	push   ebx
  4122d8:	or     eax,0xceec8846
  4122dd:	and    al,0x42
  4122df:	or     ch,bh
  4122e1:	repnz sbb edx,DWORD PTR [esi-0x2f]
  4122e5:	xor    al,BYTE PTR [edx-0x10]
  4122e8:	or     eax,0x1c8903e7
  4122ed:	and    eax,0xf185105a
  4122f2:	or     edx,edi
  4122f4:	push   ebp
  4122f5:	xchg   edi,eax
  4122f6:	mov    ah,0x43
  4122f8:	add    ebx,DWORD PTR [edx-0x6607bc4b]
  4122fe:	or     BYTE PTR [ebx+0x2e],0x33
  412302:	jnp    0x4122c4
  412304:	jmp    DWORD PTR [esi-0x1a]
  412307:	cmp    edi,eax
  412309:	test   al,0x8c
  41230b:	mov    edx,0x29079987
  412310:	mov    esi,0x3d8b3042
  412315:	jle    0x4122af
  412317:	add    DWORD PTR [edi],ecx
  412319:	push   ss
  41231a:	icebp  
  41231b:	mov    BYTE PTR [ebp-0x7e],al
  41231e:	push   0x4f
  412320:	add    BYTE PTR [edx-0x2fa6e95],ah
  412326:	mov    esi,0x5b8603e2
  41232b:	lahf   
  41232c:	mov    eax,DWORD PTR [ebp-0x6e]
  41232f:	mov    BYTE PTR [ecx],al
  412331:	inc    DWORD PTR ds:0x9766a31
  412337:	jp     0x412380
  412339:	jp     0x4122f4
  41233b:	scas   al,BYTE PTR es:[edi]
  41233c:	xlat   BYTE PTR ds:[ebx]
  41233d:	mov    edi,0x900c681
  412342:	add    eax,0x7ec58935
  412347:	or     bl,al
  412349:	fld    QWORD PTR [ebx+0x6a]
  41234c:	aas    
  41234d:	cmp    bh,BYTE PTR [ebx-0x87c287a]
  412353:	mov    esi,0xbef77beb
  412358:	out    0xf,eax
  41235a:	sub    eax,0x353b50e9
  41235f:	sbb    eax,0x19b2b5f5
  412364:	mov    edi,0x4f4af2a
  412369:	repz or al,0xf5
  41236c:	mov    ch,cl
  41236e:	ds push 0x46c3163f
  412374:	loopne 0x4122fc
  412376:	ret    
  412377:	dec    esi
  412378:	in     al,0x86
  41237a:	mov    ebp,0x8840061d
  41237f:	in     al,dx
  412380:	add    ecx,DWORD PTR [ecx]
  412382:	xor    eax,0x4d008a8d
  412387:	mov    bh,BYTE PTR [edx+0x3e]
  41238a:	into   
  41238b:	xchg   DWORD PTR [edx],ecx
  41238d:	sub    al,0xd3
  41238f:	inc    ecx
  412390:	int3   
  412391:	and    al,0x83
  412393:	inc    edx
  412394:	int3   
  412395:	sub    al,0xb6
  412397:	scas   al,BYTE PTR es:[edi]
  412398:	int    0x24
  41239a:	mov    esi,0x33b28eae
  41239f:	adc    al,0x87
  4123a1:	or     al,0xa6
  4123a3:	inc    ecx
  4123a4:	jge    0x412392
  4123a6:	call   DWORD PTR [ecx-0x7e]
  4123a9:	adc    al,0x9b
  4123ab:	mov    ebx,0xad58b30a
  4123b0:	jge    0x412396
  4123b2:	call   0x75c1:0x7852ee02
  4123b9:	dec    ecx
  4123ba:	test   DWORD PTR [ecx],esi
  4123bc:	or     ebp,DWORD PTR [edi]
  4123be:	mov    eax,0xb0610aae
  4123c3:	push   edi
  4123c4:	xor    BYTE PTR [edx+edi*2-0x5fc1e2cf],ch
  4123cb:	mov    ds:0xb04dac7f,al
  4123d0:	inc    ebp
  4123d1:	adc    ebp,eax
  4123d3:	ret    
  4123d4:	jne    0x412417
  4123d6:	test   ebp,eax
  4123d8:	dec    ebp
  4123d9:	xor    DWORD PTR [edx-0x412207a],edi
  4123df:	add    esi,ebx
  4123e1:	jmp    0xc32f25e4
  4123e6:	push   0xf17ca2
  4123eb:	lar    esi,bx
  4123ee:	arpl   ax,cx
  4123f0:	push   edi
  4123f1:	(bad)  
  4123f3:	inc    DWORD PTR [ecx]
  4123f5:	sbb    esi,DWORD PTR [ebx-0x51]
  4123f8:	scas   eax,DWORD PTR es:[edi]
  4123f9:	mov    bl,BYTE PTR [edi+esi*8+0x42]
  4123fd:	cmp    BYTE PTR [ebx*4+0x3f130d36],0x86
  412405:	jle    0x412407
  412407:	icebp  
  412408:	rol    DWORD PTR ds:0x43a5702,0xc6
  41240f:	stos   BYTE PTR es:[edi],al
  412410:	mov    bl,0xf3
  412412:	xchg   DWORD PTR [edx-0x5d7fb386],ebp
  412418:	mov    dl,0xa
  41241a:	cvtpi2ps xmm7,QWORD PTR [eax-0x3e50fff6]
  412421:	add    eax,0xde331f08
  412426:	add    BYTE PTR ds:0x2f1f7e39,dh
  41242c:	xor    esi,esp
  41242e:	add    BYTE PTR ds:0xaa741d0b,ah
  412434:	pop    edi
  412435:	push   edi
  412436:	sti    
  412437:	stos   DWORD PTR es:[edi],eax
  412438:	ds push es
  41243a:	add    al,0xf7
  41243c:	cmp    DWORD PTR [edx+0x477b6114],eax
  412442:	(bad)  
  412443:	pop    esi
  412444:	sub    DWORD PTR [edi-0x5],edx
  412447:	sbb    DWORD PTR [edx+eax*1+0x477b3f0c],ecx
  41244e:	inc    BYTE PTR [eax]
  412450:	outs   dx,DWORD PTR ds:[esi]
  412451:	sub    DWORD PTR ds:0x7f951aff,ecx
  412457:	add    al,0x51
  412459:	mov    al,0x77
  41245b:	les    esp,FWORD PTR [eax+0x1affd62b]
  412461:	mov    ch,0x5a
  412463:	call   FWORD PTR [edx]
  412465:	mov    cl,0xe2
  412467:	scas   al,BYTE PTR es:[edi]
  412468:	xor    DWORD PTR [ecx-0x45e0fc0b],0xffffffca
  41246f:	jne    0x41244a
  412471:	scas   eax,DWORD PTR es:[edi]
  412472:	ja     0x412450
  412474:	xor    al,ch
  412476:	aas    
  412477:	call   0x103f4e9c
  41247c:	sbb    BYTE PTR [edx],cl
  41247e:	out    0xff,al
  412480:	xchg   BYTE PTR [esi],cl
  412482:	dec    BYTE PTR [ecx+0x5c1bf7b]
  412488:	xchg   DWORD PTR [eax],esi
  41248a:	jp     0x412494
  41248c:	push   cs
  41248d:	data16 stc 
  41248f:	mov    BYTE PTR [ebx-0xb],al
  412492:	iret   
  412493:	pushf  
  412494:	int    0xdb
  412496:	clc    
  412497:	mov    DWORD PTR [ebx-0x49],eax
  41249a:	pop    esp
  41249b:	std    
  41249c:	cmp    ecx,ebx
  41249e:	or     al,0xc6
  4124a0:	push   esi
  4124a1:	ret    
  4124a2:	out    dx,al
  4124a3:	mov    ?,WORD PTR [ecx+0x5f10cbb]
  4124a9:	pop    esi
  4124aa:	jmp    0x2b81:0xea660d10
  4124b1:	retf   
  4124b2:	pop    ss
  4124b3:	cmp    DWORD PTR [eax],eax
  4124b5:	dec    ebx
  4124b6:	fisttp DWORD PTR [eax]
  4124b8:	mov    WORD PTR ds:0x5fdf825,cs
  4124be:	out    0xcf,eax
  4124c0:	adc    BYTE PTR ds:0xe381cfdf,cl
  4124c6:	dec    ebp
  4124c7:	pop    ss
  4124c8:	cmp    ebx,eax
  4124ca:	ror    DWORD PTR [eax],0x8c
  4124cd:	shr    DWORD PTR [ebx-0x8],1
  4124d0:	std    
  4124d1:	mov    ebp,0xb0c674d4
  4124d6:	(bad)  
  4124d7:	int    0x10
  4124d9:	xchg   dh,ch
  4124db:	je     0x4124c9
  4124dd:	add    eax,0xd051133e
  4124e2:	in     al,dx
  4124e3:	cmp    al,0xd2
  4124e5:	jne    0x412523
  4124e7:	inc    eax
  4124e8:	xor    DWORD PTR [esi+0x33],eax
  4124eb:	push   edx
  4124ec:	in     al,dx
  4124ed:	pmovmskb edi,mm3
  4124f0:	xchg   DWORD PTR [ebx+0x1e7b7655],esi
  4124f6:	repz push edx
  4124f8:	adc    al,0x79
  4124fa:	inc    edx
  4124fb:	jnp    0x4124a6
  4124fd:	add    DWORD PTR [ecx+eiz*8+0x6a3a4d7c],ebp
  412504:	push   edi
  412505:	out    0xb9,al
  412507:	push   ss
  412508:	hlt    
  412509:	(bad)  
  41250a:	std    
  41250b:	sar    BYTE PTR [edx+0x35],1
  41250e:	scas   al,BYTE PTR es:[edi]
  41250f:	or     BYTE PTR [esi+0x33bbc8b],bh
  412515:	xchg   BYTE PTR [edx+0x68],al
  412518:	aas    
  412519:	add    dl,cl
  41251b:	mov    bh,0x36
  41251d:	hlt    
  41251e:	xchg   DWORD PTR [ecx+0x7a],edi
  412521:	aas    
  412522:	fidivr WORD PTR [ebx]
  412524:	push   esp
  412525:	add    BYTE PTR [esp-0x28],bh
  412529:	mov    ?,WORD PTR ds:[ebx]
  41252c:	gs pop eax
  41252e:	mov    eax,ds:0xb17ce1ab
  412533:	mov    ecx,0x12fdd81e
  412538:	fs leave 
  41253a:	inc    ebp
  41253b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41253c:	loop   0x412541
  41253e:	xchg   BYTE PTR [edx+0x78],al
  412541:	hlt    
  412542:	mov    edi,0xd16ef505
  412547:	mov    bh,0x96
  412549:	repz add ebp,edi
  41254c:	dec    eax
  41254d:	jge    0x41251c
  41254f:	mov    bh,BYTE PTR [eax+0x6f]
  412552:	pop    esi
  412553:	and    al,0xfa
  412555:	jae    0xcdbdba90
  41255b:	scas   al,BYTE PTR es:[edi]
  41255c:	js     0x41251f
  41255e:	jg     0x41255d
  412560:	lock outs dx,BYTE PTR ds:[esi]
  412562:	mov    esi,DWORD PTR [edi+0x69a8ebae]
  412568:	in     eax,0x6a
  41256a:	mov    ch,0x44
  41256c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41256d:	sub    al,0x9d
  41256f:	push   edx
  412570:	jne    0x412564
  412572:	retf   
  412573:	addr16 or bh,cl
  412576:	cwde   
  412577:	inc    esp
  412578:	sub    DWORD PTR [ecx+ebp*1-0x3d],0xb200dd75
  412580:	daa    
  412581:	(bad)  
  412582:	pop    esp
  412583:	add    ebx,0x75
  412586:	fisttp QWORD PTR [edx]
  412588:	daa    
  412589:	out    dx,al
  41258a:	jmp    0x44706006
  41258f:	out    0x2d,al
  412591:	pop    es
  412592:	sub    edi,DWORD PTR [ebx-0x21b378bb]
  412598:	inc    ecx
  412599:	jg     0x4125b7
  41259b:	jb     0x4125de
  41259d:	shr    eax,0x80
  4125a0:	stos   BYTE PTR es:[edi],al
  4125a1:	dec    esp
  4125a2:	loop   0x4125d4
  4125a4:	push   esi
  4125a5:	jbe    0x4125e8
  4125a7:	xor    ah,BYTE PTR [edi]
  4125a9:	loop   0x41260d
  4125ab:	push   0x96341f9e
  4125b0:	pop    eax
  4125b1:	fisubr DWORD PTR [eax]
  4125b3:	inc    eax
  4125b4:	ret    
  4125b5:	pop    ebp
  4125b6:	adc    DWORD PTR [edx],0x30c2fe0f
  4125bc:	scas   al,BYTE PTR es:[edi]
  4125bd:	jg     0x412583
  4125bf:	pop    ebp
  4125c0:	pop    esp
  4125c1:	cli    
  4125c2:	out    dx,al
  4125c3:	es xchg edx,eax
  4125c5:	dec    eax
  4125c6:	pusha  
  4125c7:	clc    
  4125c8:	mov    al,BYTE PTR [ebx]
  4125ca:	jle    0x41263f
  4125cc:	ins    BYTE PTR es:[edi],dx
  4125cd:	aam    0xc7
  4125cf:	pop    ebp
  4125d0:	mov    ebx,0xfddc5155
  4125d5:	in     eax,dx
  4125d6:	inc    edx
  4125d7:	jg     0x412594
  4125d9:	push   ebp
  4125da:	adc    esp,ecx
  4125dc:	adc    eax,0x46b069ee
  4125e1:	or     ch,BYTE PTR [eax+eax*1-0x3a]
  4125e5:	inc    esp
  4125e6:	jge    0x4125d2
  4125e8:	mov    al,0xf7
  4125ea:	or     eax,0x352d062
  4125ef:	add    BYTE PTR [eax+0x7d031e10],bh
  4125f5:	push   esi
  4125f6:	ror    BYTE PTR [edi],0xa8
  4125f9:	test   DWORD PTR [edx],ecx
  4125fb:	add    BYTE PTR [edi],bl
  4125fd:	mov    bl,0x47
  4125ff:	fsubr  QWORD PTR [edi+0x33]
  412602:	push   ss
  412603:	add    BYTE PTR [ebx+ebp*1+0x6],dh
  412607:	jne    0x4125f3
  412609:	sub    al,0x3f
  41260b:	aam    0x67
  41260d:	inc    edx
  41260e:	cmp    eax,0xf3713b88
  412613:	and    BYTE PTR [eax],0x45
  412616:	or     BYTE PTR [ebp+0x1b],0x7f
  41261a:	rol    DWORD PTR [eiz*8-0x1ff37d13],cl
  412621:	sub    edi,DWORD PTR [edi]
  412623:	in     al,0x19
  412625:	call   0xc2e507f4
  41262a:	pop    ecx
  41262b:	jmp    DWORD PTR [ebp+0x17d809eb]
  412631:	add    bh,BYTE PTR ds:0x8812c01
  412637:	mov    DWORD PTR [edx+0x17458b8d],ebx
  41263d:	daa    
  41263e:	dec    edi
  41263f:	aam    0xa4
  412641:	test   DWORD PTR [edi+0x45],ebp
  412644:	hlt    
  412645:	or     ebp,esi
  412647:	mov    eax,DWORD PTR [eax]
  412649:	sub    bl,BYTE PTR [ecx+0xbe6d109]
  41264f:	ror    BYTE PTR [ebx+0x558ba502],cl
  412655:	ret    
  412656:	lea    edx,[esi]
  412658:	mov    ebp,DWORD PTR [edx]
  41265a:	cdq    
  41265b:	loope  0x412674
  41265d:	fdiv   QWORD PTR [ebx]
  41265f:	bnd jmp DWORD PTR [ebx]
  412662:	dec    edi
  412663:	adc    DWORD PTR [ebp-0x7d],0x86758120
  41266a:	mov    bl,0x70
  41266c:	pop    ebx
  41266d:	jle    0x41260b
  41266f:	fisub  WORD PTR [esi+0xf]
  412672:	out    0x58,eax
  412674:	aas    
  412675:	pop    ebp
  412676:	(bad)  
  412677:	mov    edi,0x49242a7c
  41267c:	adc    BYTE PTR [ecx],cl
  41267e:	(bad)  
  412680:	call   DWORD PTR [edx+0x77]
  412683:	jo     0x4126d0
  412685:	(bad)  
  412686:	arpl   WORD PTR [ecx-0x2c],cx
  412689:	jb     0x41266c
  41268b:	in     al,0x43
  41268d:	jmp    0xfa6e:0x9f104a23
  412694:	or     eax,0xfde51f0a
  412699:	shr    DWORD PTR [ebx+0x7b3affd9],1
  41269f:	or     bh,al
  4126a1:	xchg   DWORD PTR [esi-0x2],ebp
  4126a4:	inc    eax
  4126a5:	jge    0x412705
  4126a7:	adc    cl,BYTE PTR ds:0xfde43d02
  4126ad:	add    BYTE PTR [ecx+0xc0c4223],ch
  4126b3:	outs   dx,BYTE PTR ds:[esi]
  4126b4:	fimul  DWORD PTR [eax+0x5dcc348e]
  4126ba:	xor    BYTE PTR [ebp+esi*4-0x3e],dl
  4126be:	outs   dx,BYTE PTR ds:[esi]
  4126bf:	fwait
  4126c0:	cmp    al,al
  4126c2:	ins    DWORD PTR es:[edi],dx
  4126c3:	pop    es
  4126c4:	push   edx
  4126c5:	mov    DWORD PTR [edx+0x1d],ebp
  4126c8:	rcl    DWORD PTR [eax-0x3],cl
  4126cb:	fsubp  st(7),st
  4126cd:	mov    BYTE PTR [edi+0xf555d95],bh
  4126d3:	out    dx,eax
  4126d4:	sti    
  4126d5:	mov    ebx,ecx
  4126d7:	lea    esi,[eax-0x6]
  4126da:	std    
  4126db:	(bad)  
  4126dc:	pop    ss
  4126dd:	add    DWORD PTR [esi],edi
  4126df:	popf   
  4126e0:	loope  0x412713
  4126e2:	cmp    BYTE PTR [ebx+0x23],al
  4126e5:	dec    eax
  4126e6:	cmp    BYTE PTR [ebx+0x2b],al
  4126e9:	dec    eax
  4126ea:	xor    eax,DWORD PTR [ebx+0x6a]
  4126ed:	inc    eax
  4126ee:	idiv   BYTE PTR [ecx-0x1f6507a]
  4126f4:	sbb    al,0x2a
  4126f6:	fnstenv [edi]
  4126f8:	data16 out 0x11,al
  4126fb:	test   al,0xe1
  4126fd:	sbb    bh,BYTE PTR [esi]
  4126ff:	adc    al,0x6a
  412701:	inc    eax
  412702:	into   
  412703:	fwait
  412704:	loopne 0x41277e
  412706:	push   ebp
  412707:	push   edx
  412708:	js     0x412751
  41270a:	xor    bh,BYTE PTR [edx-0x6d500bca]
  412710:	aam    0x7e
  412712:	add    BYTE PTR [ecx],bl
  412714:	inc    edx
  412715:	loope  0x41271a
  412717:	scas   eax,DWORD PTR es:[edi]
  412718:	test   BYTE PTR [edx+0x47],bh
  41271b:	ret    0xe09b
  41271e:	js     0x412765
  412720:	jbe    0x412769
  412722:	adc    al,0x59
  412724:	mov    ecx,0xf601ec3e
  412729:	enter  0xf129,0x25
  41272d:	loopne 0x4127a9
  41272f:	inc    ebp
  412730:	stos   BYTE PTR es:[edi],al
  412731:	push   0xa26bce47
  412736:	outs   dx,DWORD PTR ds:[esi]
  412737:	xchg   DWORD PTR [ecx+0x5ffcc2e],edi
  41273d:	cdq    
  41273e:	std    
  41273f:	shl    ch,cl
  412741:	je     0x412740
  412743:	cmp    cl,BYTE PTR ds:0x3afd7951
  412749:	mov    al,0xec
  41274b:	cmc    
  41274c:	stos   BYTE PTR es:[edi],al
  41274d:	pop    esp
  41274e:	ja     0x4127c2
  412750:	call   0x9cfc:0xa763ec47
  412757:	mov    ebp,0x823f78aa
  41275c:	mov    ebx,0xc151ac0a
  412761:	ins    DWORD PTR es:[edi],dx
  412762:	or     eax,0x96dc18a
  412767:	add    cl,0x6d
  41276a:	adc    DWORD PTR [edx-0x7df2923f],ecx
  412770:	mov    ebx,0x80cbdf36
  412775:	or     ebp,ecx
  412777:	add    BYTE PTR [ebx+esi*1-0x713e8f42],bl
  41277e:	sub    DWORD PTR [ecx+eax*2-0x7ae6b280],0x84fe4d80
  412789:	ret    
  41278a:	iret   
  41278b:	pop    edi
  41278c:	push   esi
  41278d:	shl    DWORD PTR [ebp-0x3f],0x85
  412791:	xor    ecx,DWORD PTR [esi+ebx*8]
  412794:	sbb    dl,BYTE PTR [edx-0x7f]
  412797:	sbb    al,0xb6
  412799:	xor    al,0xbb
  41279b:	jmp    0x958e910b
  4127a0:	push   eax
  4127a1:	inc    ebx
  4127a2:	repz and al,0xe2
  4127a5:	cwde   
  4127a6:	adc    ch,BYTE PTR [edx+0x28]
  4127a9:	sahf   
  4127aa:	or     dl,BYTE PTR [ebp*4+0x40afdab9]
  4127b1:	dec    ebp
  4127b2:	or     ah,BYTE PTR [eax+0x38]
  4127b5:	mov    ds:0xa240c26c,al
  4127ba:	jge    0x412792
  4127bc:	mov    ds:0x4062ee02,al
  4127c1:	jle    0x4127b6
  4127c3:	sbb    al,0x5e
  4127c5:	(bad)  
  4127c6:	retf   0x6eb
  4127c9:	sub    bl,dh
  4127cb:	jmp    0xd70f29bc
  4127d0:	sbb    DWORD PTR [esi+ecx*1+0xa92c827],ebx
  4127d7:	add    ah,dl
  4127d9:	cld    
  4127da:	loope  0x412817
  4127dc:	add    BYTE PTR [edx],ch
  4127de:	sahf   
  4127df:	jl     0x4127eb
  4127e1:	pusha  
  4127e2:	out    dx,eax
  4127e3:	inc    edi
  4127e4:	fsub   QWORD PTR [eax-0x11]
  4127e7:	push   edi
  4127e8:	loopne 0x41277e
  4127ea:	test   eax,0xa1eab706
  4127ef:	add    eax,0x8a75eab7
  4127f4:	jge    0x412787
  4127f6:	inc    ecx
  4127f7:	mov    edx,DWORD PTR [ebp+0x63]
  4127fa:	sub    eax,0xfd44660c
  4127ff:	leave  
  412800:	je     0x412837
  412802:	ret    0x205
  412805:	addr16 cmp eax,0x8f180f04
  41280b:	mov    bl,0xe8
  41280d:	imul   DWORD PTR [ecx]
  41280f:	dec    esi
  412810:	push   cs
  412811:	fiadd  WORD PTR [ebx+0x26eefe47]
  412817:	push   edi
  412818:	shr    BYTE PTR [eax+eax*4+0x8],0x80
  41281d:	xchg   edx,eax
  41281e:	push   ecx
  41281f:	or     cl,BYTE PTR [edi]
  412821:	pop    edx
  412822:	mov    ah,0xa
  412824:	add    BYTE PTR [edi+0x2f0805c1],ch
  41282a:	sbb    ebx,edx
  41282c:	add    BYTE PTR ds:0x1f317e41,dh
  412832:	sbb    esi,ebp
  412834:	add    BYTE PTR [ebx-0x5c],bh
  412837:	ins    DWORD PTR es:[edi],dx
  412838:	mov    edi,DWORD PTR [edx+0x7a]
  41283b:	ins    BYTE PTR es:[edi],dx
  41283c:	cmp    edi,DWORD PTR [edx-0x2a]
  41283f:	jle    0x41286a
  412841:	add    BYTE PTR [eax+0x63dc57f0],ah
  412847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412848:	mov    eax,DWORD PTR [edi]
  41284a:	hlt    
  41284b:	add    edx,esi
  41284d:	mov    BYTE PTR [ebx-0x55],ch
  412850:	mov    ah,0xe8
  412852:	xchg   BYTE PTR [ebx-0x656fbb91],ah
  412858:	leave  
  412859:	inc    ebx
  41285a:	pop    ecx
  41285b:	call   0x2c8:0x180e5376
  412862:	pop    ebp
  412863:	mov    ds:0xde480ffb,eax
  412868:	loopne 0x41286a
  41286a:	push   cs
  41286b:	xchg   esp,eax
  41286c:	loopne 0x4128e1
  41286e:	push   esi
  41286f:	push   ss
  412870:	or     cl,BYTE PTR [esi]
  412872:	sub    esi,eax
  412874:	(bad)  
  412875:	std    
  412876:	fwait
  412877:	jae    0x412858
  412879:	jae    0x412899
  41287b:	retf   
  41287c:	loopne 0x4128f1
  41287e:	sbb    dl,BYTE PTR [ebx+0x67]
  412881:	cld    
  412882:	or     DWORD PTR [esp+ecx*1+0x795b0bf0],ebp
  412889:	cmp    cl,bh
  41288b:	add    eax,0x56390dc6
  412890:	sar    ch,cl
  412892:	jae    0x412827
  412894:	lock mov ah,0x3b
  412897:	mov    esp,eax
  412899:	jae    0x41286d
  41289b:	das    
  41289c:	jp     0x412852
  41289e:	enter  0xe9b,0x89
  4128a2:	dec    ebx
  4128a3:	mov    ds:0xc000436f,eax
  4128a8:	and    cl,BYTE PTR [edx-0x3]
  4128ab:	scas   al,BYTE PTR es:[edi]
  4128ac:	and    al,0xf8
  4128ae:	std    
  4128af:	mov    cl,0x2f
  4128b1:	dec    edx
  4128b2:	or     al,0x85
  4128b4:	lock pop esp
  4128b6:	std    
  4128b7:	sbb    ecx,edi
  4128b9:	or     al,0xc6
  4128bb:	ss rol esi,cl
  4128be:	mov    dl,BYTE PTR [ecx+0x5f10c23]
  4128c4:	push   esi
  4128c5:	(bad)  
  4128c6:	adc    BYTE PTR ds:0xeb81fe5f,cl
  4128cc:	inc    edx
  4128cd:	cmp    eax,0x94fdaf13
  4128d2:	cli    
  4128d3:	std    
  4128d4:	hlt    
  4128d5:	pop    edx
  4128d6:	jmp    0xb776:0xd7aec063
  4128dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128de:	xlat   BYTE PTR ds:[ebx]
  4128df:	pop    es
  4128e0:	push   ss
  4128e1:	cmp    DWORD PTR [ebx],edx
  4128e3:	(bad)  
  4128e4:	std    
  4128e5:	jo     0x4128e1
  4128e7:	or     eax,0x3bea2361
  4128ec:	or     ah,cl
  4128ee:	jle    0x412938
  4128f0:	add    eax,0x4296c53a
  4128f5:	mov    dh,0x7e
  4128f7:	xor    al,al
  4128f9:	cmc    
  4128fa:	push   ss
  4128fb:	mov    bh,0xc
  4128fd:	xchg   esp,eax
  4128fe:	ss xor al,0x70
  412901:	hlt    
  412902:	inc    ecx
  412903:	push   edi
  412904:	sub    BYTE PTR [edx+0x50],0xf6
  412908:	mov    ecx,0x100ef9e
  41290d:	push   cs
  41290e:	int    0x7b
  412910:	ins    DWORD PTR es:[edi],dx
  412911:	xchg   esi,eax
  412912:	sub    cl,BYTE PTR [edi-0x6e]
  412915:	xor    ebp,DWORD PTR [ebx-0x62]
  412918:	loope  0x4128bd
  41291a:	loope  0x412998
  41291c:	dec    ebp
  41291d:	cmp    bh,BYTE PTR [edx+0x4f]
  412920:	jmp    0xd0f5:0xffe426b9
  412927:	jp     0x41297e
  412929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41292a:	clc    
  41292b:	mov    ebp,0x361b48b
  412930:	xchg   BYTE PTR [edx+0x78],al
  412933:	aaa    
  412934:	stos   BYTE PTR es:[edi],al
  412935:	mov    bh,0x3e
  412937:	in     al,0xe1
  412939:	mov    eax,ds:0x8a4d7adf
  41293e:	js     0x412938
  412940:	jle    0x4129a9
  412942:	es or  al,0x7b
  412945:	mov    esi,0x42851e0a
  41294a:	or     ah,BYTE PTR [eax-0x4f]
  41294d:	stos   BYTE PTR es:[edi],al
  41294e:	test   DWORD PTR [ecx+0x514d7d5e],edi
  412954:	test   DWORD PTR [edx+0xa],eax
  412957:	jmp    0xa470dc3e
  41295c:	mov    DWORD PTR [edi],esp
  41295e:	push   ecx
  41295f:	jb     0x4128fa
  412961:	mov    bh,BYTE PTR [edi-0x44]
  412964:	pop    ebp
  412965:	imul   esi,DWORD PTR [esi],0xffffffe2
  412968:	mov    al,0xf9
  41296a:	jle    0x412918
  41296c:	and    DWORD PTR [ecx+0x7800e2c3],edi
  412972:	push   edx
  412973:	jne    0x412964
  412975:	stos   BYTE PTR es:[edi],al
  412976:	div    ecx
  412978:	rcr    BYTE PTR [ecx],1
  41297a:	jmp    0xd975:0x69c6e77d
  412981:	test   eax,0x15c243b0
  412986:	das    
  412987:	or     al,0x60
  412989:	imul   esi,DWORD PTR [edx+0x68e96c81],0x4168dd75
  412993:	sbb    DWORD PTR [esi+esi*8-0x40],0x2485c175
  41299b:	add    dl,BYTE PTR [edx]
  41299d:	popa   
  41299e:	mov    dl,0x76
  4129a0:	jmp    0x9a28:0x6a0e994b
  4129a7:	or     ah,BYTE PTR [edx+0x28]
  4129aa:	push   edx
  4129ab:	leave  
  4129ac:	mov    BYTE PTR [ebx+0x62c606fc],0x2f
  4129b3:	push   ds
  4129b4:	sbb    eax,0x8575b908
  4129b9:	and    dh,bh
  4129bb:	stc    
  4129bc:	ret    0xa650
  4129bf:	pop    ds
  4129c0:	add    bh,ch
  4129c2:	inc    DWORD PTR [edi-0x77]
  4129c5:	jb     0x412951
  4129c7:	adc    DWORD PTR [ebp+0x3],0xe4fc573f
  4129ce:	or     dh,ah
  4129d0:	sub    ecx,edi
  4129d2:	call   0x771d:0x1d00d9a6
  4129d9:	fsubr  DWORD PTR [eax-0x45]
  4129dc:	clc    
  4129dd:	cmp    ebp,DWORD PTR [ecx+0x2a8b022b]
  4129e3:	jp     0x412970
  4129e5:	dec    ebp
  4129e6:	mov    bh,0x7e
  4129e8:	or     al,0x8b
  4129ea:	sbb    cl,BYTE PTR [esi-0x3a38aa75]
  4129f0:	outs   dx,DWORD PTR ds:[esi]
  4129f1:	sbb    al,0x1f
  4129f3:	sbb    DWORD PTR [ebp+0x2],eax
  4129f6:	adc    al,BYTE PTR [edi+0x7f]
  4129f9:	dec    edi
  4129fa:	xor    DWORD PTR [edi],ebx
  4129fc:	push   edi
  4129fd:	adc    BYTE PTR [eax],bh
  4129ff:	mov    ebx,0xa75e1457
  412a04:	or     BYTE PTR [ebx],bh
  412a06:	push   ebp
  412a07:	call   0xff0a:0x45efcd86
  412a0e:	and    cl,BYTE PTR [edx+0x468b7d8a]
  412a14:	xor    DWORD PTR [ebp-0x25],0xaa8b1112
  412a1b:	scas   al,BYTE PTR es:[edi]
  412a1c:	or     BYTE PTR [eax+esi*2],0x1c
  412a20:	aas    
  412a21:	cli    
  412a22:	push   edi
  412a23:	cli    
  412a24:	cmp    al,0x1
  412a26:	push   edi
  412a27:	pop    edx
  412a28:	cmp    eax,0xf15b2502
  412a2d:	mov    BYTE PTR [ebx-0x1f7cf68f],bl
  412a33:	inc    edx
  412a34:	or     BYTE PTR [ebp+0xb],0x87
  412a38:	rol    DWORD PTR [eax+eax*1],cl
  412a3b:	xchg   BYTE PTR [ebp+0x788a88af],ah
  412a41:	jno    0x412a8e
  412a43:	sahf   
  412a44:	leave  
  412a45:	mov    ch,0xc0
  412a47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a49:	jb     0x412a9c
  412a4b:	and    DWORD PTR [ebp+0x235e01b1],0x2c873532
  412a55:	mov    bl,0x2
  412a57:	(bad)  
  412a58:	jge    0x412a35
  412a5a:	xchg   ebx,ecx
  412a5c:	repz je 0x412aba
  412a5f:	xor    dh,BYTE PTR [edi+eax*8]
  412a62:	jnp    0x412a29
  412a64:	adc    al,0x59
  412a66:	call   0x22d1868
  412a6b:	push   edi
  412a6c:	and    bl,BYTE PTR [ecx-0x28]
  412a6f:	or     eax,0xdb87d3b6
  412a74:	xor    ecx,edi
  412a76:	sbb    bh,ch
  412a78:	in     eax,dx
  412a79:	jmp    0x412a64
  412a7b:	jnp    0x412aa9
  412a7d:	popa   
  412a7e:	clc    
  412a7f:	sbb    DWORD PTR [edi+0x33bb8903],esi
  412a85:	outs   dx,DWORD PTR ds:[esi]
  412a86:	jae    0x412af6
  412a88:	adc    al,0x41
  412a8a:	or     BYTE PTR [ebp+0x1534753a],al
  412a90:	jmp    0x89d4:0x26ce4b20
  412a97:	cmp    ebx,DWORD PTR [ebx-0x5621bc14]
  412a9d:	xor    ch,al
  412a9f:	add    BYTE PTR ds:0x4339e63e,cl
  412aa5:	mov    edi,0x65c9d06b
  412aaa:	loop   0x412a35
  412aac:	push   ebx
  412aad:	jnp    0x412ad5
  412aaf:	dec    ebx
  412ab0:	mov    edx,0xb0827b7f
  412ab5:	inc    ecx
  412ab6:	lods   al,BYTE PTR ds:[esi]
  412ab7:	out    0x77,al
  412ab9:	je     0x412a9d
  412abb:	cmp    BYTE PTR [edx-0x66fe7d7e],ch
  412ac1:	or     eax,0x74f4381
  412ac6:	aad    0xf6
  412ac8:	std    
  412ac9:	add    BYTE PTR [ebx-0x1a],dh
  412acc:	or     esp,0x26
  412acf:	clc    
  412ad0:	femms  
  412ad2:	test   DWORD PTR [ebx+0x7e],edi
  412ad5:	retf   
  412ad6:	and    al,0x46
  412ad8:	enter  0x39fb,0xc1
  412adc:	jle    0x412b20
  412ade:	adc    ah,al
  412ae0:	outs   dx,DWORD PTR ds:[esi]
  412ae1:	xchg   esi,eax
  412ae2:	mov    esi,0x5dc4627a
  412ae7:	push   ebx
  412ae8:	dec    DWORD PTR ds:0x3ec97af9
  412aee:	xchg   ebx,eax
  412aef:	dec    esi
  412af0:	add    DWORD PTR [esi],ecx
  412af2:	xor    DWORD PTR [edx-0x43],edi
  412af5:	xor    bh,BYTE PTR [eax-0x17]
  412af8:	push   ebp
  412afa:	in     al,0x2
  412afc:	dec    esi
  412afd:	inc    esp
  412afe:	pop    ss
  412aff:	xor    dl,BYTE PTR [eax]
  412b01:	mov    DWORD PTR [esi-0x7779ff1b],ebp
  412b07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b08:	out    0x86,al
  412b0a:	leave  
  412b0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b0c:	mov    bl,0x9
  412b0e:	push   ds
  412b0f:	and    DWORD PTR [ebp+eax*2-0x56],edi
  412b13:	mov    eax,0xc4cd83c4
  412b18:	add    eax,DWORD PTR [esi+0x9bc1842]
  412b1e:	push   cs
  412b1f:	test   eax,0x3ecb87d9
  412b24:	clc    
  412b25:	inc    BYTE PTR ds:0xae357ba1
  412b2b:	or     ah,dl
  412b2d:	xchg   ebx,eax
  412b2e:	int    0xa
  412b30:	jb     0x412ab7
  412b32:	inc    edx
  412b33:	or     al,BYTE PTR [edx]
  412b35:	(bad)  
  412b36:	(bad)  
  412b37:	dec    ebp
  412b38:	mov    ch,0xcf
  412b3a:	inc    ecx
  412b3b:	jg     0x412b61
  412b3d:	fisubr WORD PTR [edx+ebx*1]
  412b40:	xor    BYTE PTR ds:0x5960fe0b,bl
  412b46:	call   0x2481:0x4121a82f
  412b4d:	jbe    0x412b18
  412b4f:	dec    ebp
  412b50:	mov    eax,ds:0xea75dfaf
  412b55:	in     al,dx
  412b56:	add    esi,edx
  412b58:	data16 fstp DWORD PTR [edx-0x556669fd]
  412b5f:	repz fsubr QWORD PTR [ecx+0x4d]
  412b63:	mov    ebx,0x7d9d39b4
  412b68:	cmp    DWORD PTR [eax],eax
  412b6a:	iret   
  412b6b:	sbb    eax,DWORD PTR [edx]
  412b6d:	push   ecx
  412b6e:	and    eax,0xbf36f396
  412b73:	add    esi,edx
  412b75:	ficomp WORD PTR [edx]
  412b77:	add    edi,esi
  412b79:	push   0xffffffc9
  412b7b:	jp     0x412b87
  412b7d:	push   0xffffffc1
  412b7f:	jle    0x412b8b
  412b81:	push   0xffffffb9
  412b83:	mov    ds:0xa6b16a0a,al
  412b88:	or     dh,BYTE PTR [edx-0x47]
  412b8b:	xchg   edx,eax
  412b8c:	test   DWORD PTR [ebp-0x1133f775],edi
  412b92:	test   edi,eax
  412b94:	jge    0x412bc7
  412b96:	ins    DWORD PTR es:[edi],dx
  412b97:	add    edi,DWORD PTR [esi-0x33895790]
  412b9d:	and    al,0xba
  412b9f:	sahf   
  412ba0:	int    0x2c
  412ba2:	ja     0x412b43
  412ba4:	mov    gs,WORD PTR [ecx+0x87106b]
  412baa:	inc    edx
  412bab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bac:	or     dh,BYTE PTR [ebp-0x56]
  412baf:	sbb    DWORD PTR [eax],ecx
  412bb1:	mov    DWORD PTR [edx-0x72],ebp
  412bb4:	add    DWORD PTR [edx],0x75d25fb4
  412bba:	call   0x894f:0xf4e047a5
  412bc1:	jge    0x412bce
  412bc3:	inc    ebx
  412bc4:	ja     0x412bcd
  412bc6:	jmp    0x1641452a
  412bcb:	pusha  
  412bcc:	(bad)  
  412bcd:	cmp    eax,DWORD PTR [eax]
  412bcf:	stos   BYTE PTR es:[edi],al
  412bd0:	mov    dh,BYTE PTR [edi+0x11]
  412bd3:	lock pop esp
  412bd5:	out    dx,al
  412bd6:	call   DWORD PTR [edx+0x5bc28972]
  412bdc:	ret    
  412bdd:	outs   dx,DWORD PTR ds:[esi]
  412bde:	aam    0x6f
  412be0:	daa    
  412be1:	ret    0x6beb
  412be4:	loopne 0x412c2d
  412be6:	rcr    BYTE PTR [edi+0x1b],1
  412be9:	inc    edi
  412bea:	in     al,0x86
  412bec:	pop    ebp
  412bed:	jmp    0xa4d8:0x471b3776
  412bf4:	push   esp
  412bf5:	(bad)  
  412bf6:	jmp    0x412c21
  412bf8:	sbb    eax,DWORD PTR [edi-0x24]
  412bfb:	mov    ah,0x54
  412bfd:	rol    BYTE PTR [eax+0x740aa802],cl
  412c03:	sub    ch,BYTE PTR [ebx+0x47]
  412c06:	(bad)  
  412c07:	sti    
  412c08:	cmp    BYTE PTR [edx+0xe1a1d0f],cl
  412c0e:	push   ds
  412c0f:	je     0x412c82
  412c11:	mov    bl,0xea
  412c13:	out    0x19,eax
  412c15:	pop    esi
  412c16:	push   ds
  412c17:	ficomp WORD PTR [edx]
  412c19:	fcmovb st,st(1)
  412c1b:	aad    0x96
  412c1d:	mov    WORD PTR [ebp+0x2b],es
  412c20:	mov    dl,ah
  412c22:	sbb    BYTE PTR [esi-0x7be1cddd],al
  412c28:	and    eax,DWORD PTR [edx+0x1e]
  412c2b:	test   ebp,ebp
  412c2d:	inc    ecx
  412c2e:	inc    BYTE PTR [edi+0x4c028]
  412c34:	push   es
  412c35:	push   edi
  412c36:	sti    
  412c37:	inc    DWORD PTR [eax-0x79ff53da]
  412c3d:	stos   DWORD PTR es:[edi],eax
  412c3e:	xchg   DWORD PTR ds:0xd0692b8e,ecx
  412c44:	xchg   BYTE PTR [ecx],ah
  412c46:	push   DWORD PTR [ebx+0x59]
  412c49:	sub    ebp,DWORD PTR [ecx-0x3]
  412c4c:	xchg   BYTE PTR [edi+0x5fd33902],bl
  412c52:	push   edx
  412c53:	xor    al,0x8a
  412c55:	scas   eax,DWORD PTR es:[edi]
  412c56:	jg     0x412c5d
  412c58:	(bad)  
  412c59:	jle    0x412c64
  412c5b:	mov    DWORD PTR [edi+0x6a],eax
  412c5e:	out    0x8,al
  412c60:	push   cs
  412c61:	out    0x9,eax
  412c63:	dec    DWORD PTR [edx+ebp*2]
  412c66:	int    0xe8
  412c68:	jbe    0x412c8c
  412c6a:	pop    ecx
  412c6b:	mov    esp,0x87f5f247
  412c70:	retf   0xd7d
  412c73:	mov    dl,cl
  412c75:	jne    0x412c83
  412c77:	(bad)  
  412c78:	retf   
  412c79:	ins    BYTE PTR es:[edi],dx
  412c7a:	or     eax,0xe4af4081
  412c7f:	or     BYTE PTR [edx+0x1943c19b],dl
  412c85:	stos   DWORD PTR es:[edi],eax
  412c86:	jg     0x412c8d
  412c88:	adc    DWORD PTR [esi-0x5a7d7449],esi
  412c8e:	call   0x52dcf706
  412c93:	clc    
  412c94:	stc    
  412c95:	sbb    eax,0xf10050db
  412c9a:	adc    eax,0x4263e8d7
  412c9f:	in     eax,dx
  412ca0:	loop   0x412c85
  412ca2:	inc    eax
  412ca3:	ror    DWORD PTR [eax-0x1ce8e93a],1
  412ca9:	push   ebp
  412caa:	call   0x58cc:0xaa3d9ad4
  412cb1:	mov    edx,0xaa387c4c
  412cb6:	pushf  
  412cb7:	ss aam 0xff
  412cba:	push   ss
  412cbb:	jns    0x412c86
  412cbd:	add    DWORD PTR [ebx+0x78],0x60
  412cc1:	mov    cs,edx
  412cc3:	cs loop 0x412cd4
  412cc6:	pop    es
  412cc7:	pushf  
  412cc8:	jmp    0x412ccc
  412cca:	xchg   ecx,eax
  412ccb:	test   dl,ah
  412ccd:	inc    DWORD PTR [esi]
  412ccf:	xor    eax,0x114166c4
  412cd4:	jecxz  0x412ccb
  412cd6:	xchg   edx,eax
  412cd7:	outs   dx,BYTE PTR ds:[esi]
  412cd8:	seto   cl
  412cdb:	mov    al,dl
  412cdd:	add    BYTE PTR [esp+ebp*2-0x513fa9fa],bl
  412ce4:	out    dx,eax
  412ce5:	jbe    0x412cae
  412ce7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ce8:	out    dx,eax
  412ce9:	pop    es
  412cea:	cs adc eax,0x21058ef3
  412cf0:	adc    dl,BYTE PTR [edx]
  412cf2:	rdpmc  
  412cf4:	loop   0x412d31
  412cf6:	shl    BYTE PTR [esi-0x51386915],0xeb
  412cfd:	add    BYTE PTR [edi],al
  412cff:	cs cmp ebx,esi
  412d02:	pop    esi
  412d03:	add    eax,0x630a1251
  412d08:	sbb    esp,edx
  412d0a:	adc    edi,esp
  412d0c:	addr16 leave 
  412d0e:	test   al,0x89
  412d10:	pop    ds
  412d11:	jbe    0x1030a50c
  412d17:	push   es
  412d18:	or     ah,ch
  412d1a:	nop
  412d1b:	call   FWORD PTR [ecx]
  412d1d:	fdivp  st(4),st
  412d1f:	mov    dl,0xa
  412d21:	jmp    0x729d1eab
  412d26:	aas    
  412d27:	ss pop es
  412d29:	pop    esp
  412d2a:	jbe    0x412d7d
  412d2c:	iret   
  412d2d:	adc    BYTE PTR [ecx+0x13097c36],cl
  412d33:	lock add DWORD PTR [esi+ecx*4+0x51],ebp
  412d38:	pop    edx
  412d39:	bound  edi,QWORD PTR [edi-0x58441756]
  412d3f:	popf   
  412d40:	add    ebx,DWORD PTR [edi+0x4f]
  412d43:	pop    ebx
  412d44:	or     DWORD PTR [edx+ecx*4],esp
  412d47:	dec    ebp
  412d48:	mov    esp,0xd2417a2e
  412d4d:	ror    BYTE PTR [eax+0x36],cl
  412d50:	js     0x412cdb
  412d52:	adc    eax,DWORD PTR ds:0x36b17212
  412d58:	adc    BYTE PTR [esi],0xc5
  412d5b:	inc    ecx
  412d5c:	dec    ebp
  412d5d:	fld    QWORD PTR [edx+0x377f74]
  412d63:	or     bl,BYTE PTR [ecx+0x5a55d409]
  412d69:	clc    
  412d6a:	fidivr DWORD PTR [ecx-0x38]
  412d6d:	adc    DWORD PTR [ecx+0x4a],esp
  412d70:	pop    ebx
  412d71:	dec    ecx
  412d72:	add    dl,BYTE PTR [eax+0x10]
  412d75:	cld    
  412d76:	push   edx
  412d77:	push   0xffffffc2
  412d79:	out    dx,eax
  412d7a:	jmp    0x412d54
  412d7c:	xor    ch,BYTE PTR [edi]
  412d7e:	cmp    edx,ebx
  412d80:	cmp    eax,0x3a120080
  412d85:	dec    edx
  412d86:	test   al,0x7a
  412d88:	mov    BYTE PTR [eax+0x1f],bh
  412d8b:	and    esi,DWORD PTR [ecx]
  412d8d:	mov    dl,BYTE PTR [edx]
  412d8f:	jle    0x412da0
  412d91:	add    al,0x0
  412d93:	les    esi,FWORD PTR [ecx+edi*2+0xa]
  412d97:	jne    0x412d30
  412d99:	mov    ebx,DWORD PTR [eax]
  412d9b:	pop    ds
  412d9c:	add    BYTE PTR [ecx],dh
  412d9e:	retf   0x796d
  412da1:	add    DWORD PTR [ebp-0x25],0x560c4d45
  412da8:	add    al,0x6
  412daa:	cmp    esp,DWORD PTR [edx+0x33860696]
  412db0:	mov    eax,ds:0x5d69fff5
  412db5:	xchg   ebx,eax
  412db6:	adc    BYTE PTR [eax],dh
  412db8:	push   es
  412db9:	or     bl,BYTE PTR [ebp-0x23]
  412dbc:	mov    ?,ebx
  412dbe:	push   esp
  412dbf:	and    al,0xab
  412dc1:	or     DWORD PTR [ebp-0x65],0x51bd31
  412dc8:	mov    ds:0x4c44e6c5,al
  412dcd:	pop    eax
  412dce:	cmp    ebx,ebx
  412dd0:	push   eax
  412dd1:	int    0xf2
  412dd3:	inc    sp
  412dd5:	iret   
  412dd6:	add    eax,0xa3f4184
  412ddb:	add    BYTE PTR [eax-0x45],ch
  412dde:	arpl   WORD PTR [edi],ax
  412de0:	xor    DWORD PTR [edi],0x9cf30ff9
  412de6:	or     al,BYTE PTR [eax]
  412de8:	outs   dx,DWORD PTR ds:[esi]
  412de9:	xor    edi,DWORD PTR [ebp-0x25c0a1bf]
  412def:	(bad)  
  412df1:	iret   
  412df2:	mov    edx,DWORD PTR [ebp+0x77]
  412df5:	sub    eax,DWORD PTR [ecx+0x92c2c51]
  412dfb:	(bad)  
  412dfc:	sub    BYTE PTR [ebx-0x7ded7628],bh
  412e02:	mov    ebx,DWORD PTR [ebp-0x35]
  412e05:	int3   
  412e06:	dec    edi
  412e07:	in     al,dx
  412e08:	xchg   esi,eax
  412e09:	pop    eax
  412e0a:	(bad)  
  412e0b:	mov    eax,DWORD PTR [esi+0x3e43865b]
  412e11:	test   ebp,ecx
  412e13:	or     eax,0x60656c39
  412e18:	pop    eax
  412e19:	adc    bh,BYTE PTR [eax+eiz*8]
  412e1c:	push   0x8371d7d4
  412e21:	and    bl,BYTE PTR [eax+esi*8-0x13]
  412e25:	test   eax,0x12c6b504
  412e2a:	inc    ecx
  412e2b:	lock add BYTE PTR [eax+0x34],ch
  412e2f:	xor    eax,ecx
  412e31:	jns    0x412e5f
  412e33:	push   ebx
  412e34:	add    al,BYTE PTR [esi+0x3b816dab]
  412e3a:	fisttp DWORD PTR [esi]
  412e3c:	or     eax,0x8580a
  412e41:	xchg   BYTE PTR [eax-0x64],bh
  412e44:	push   ebx
  412e45:	xchg   esi,eax
  412e46:	nop
  412e47:	popf   
  412e48:	inc    ebp
  412e49:	push   esi
  412e4a:	test   al,0xa4
  412e4c:	ret    0x66ff
  412e4f:	out    0xd,al
  412e51:	shr    DWORD PTR [edx+0x7],1
  412e54:	xchg   ebx,ebx
  412e56:	mov    bh,0x85
  412e58:	inc    ebx
  412e59:	bound  edx,QWORD PTR [ecx+eax*2]
  412e5c:	(bad)  
  412e5d:	std    
  412e5e:	xchg   ebp,eax
  412e5f:	jmp    0x412e8a
  412e61:	inc    eax
  412e62:	js     0x412e00
  412e64:	shr    ah,0x8b
  412e67:	xor    DWORD PTR [esi-0x63],esp
  412e6a:	pop    ebx
  412e6b:	push   edi
  412e6c:	add    edi,edi
  412e6e:	aad    0xdb
  412e70:	jmp    0xc0dda6f5
  412e75:	(bad)  
  412e77:	(bad)  [esi+0x7d]
  412e7a:	into   
  412e7b:	retf   
  412e7c:	or     eax,0x84205
  412e81:	xchg   BYTE PTR [ecx+0x421a7b88],al
  412e87:	loope  0x412e97
  412e89:	add    bh,BYTE PTR [eax]
  412e8b:	fild   WORD PTR [ebx]
  412e8d:	xchg   BYTE PTR [ecx+0x54],cl
  412e90:	cmp    DWORD PTR [eax],eax
  412e92:	adc    cl,BYTE PTR [ecx+0x5c]
  412e95:	inc    edi
  412e96:	mov    cs,WORD PTR [ecx+0x34]
  412e99:	into   
  412e9a:	mov    edx,ecx
  412e9c:	jle    0x412e81
  412e9e:	std    
  412e9f:	cmc    
  412ea0:	rcr    esi,1
  412ea2:	jnp    0x412e8d
  412ea4:	sbb    DWORD PTR [edi],ecx
  412ea6:	xor    eax,DWORD PTR [ebx+0x48de587a]
  412eac:	fwait
  412ead:	push   esi
  412eae:	xchg   esi,eax
  412eaf:	inc    ebp
  412eb0:	fadd   QWORD PTR es:[edi-0xcf12709]
  412eb7:	jg     0x412f33
  412eb9:	push   eax
  412eba:	(bad)  
  412ebb:	dec    eax
  412ebc:	test   BYTE PTR [ebp-0x7c12f901],bh
  412ec2:	jno    0x412f06
  412ec4:	push   0x38
  412ec6:	mov    esi,0x8ba026ca
  412ecb:	mov    esi,0x428603be
  412ed0:	addr16 dec esi
  412ed2:	push   esi
  412ed3:	ret    0x49a
  412ed6:	cmc    
  412ed7:	push   edi
  412ed8:	js     0x412ead
  412eda:	mov    edi,0x2c86e483
  412edf:	inc    edx
  412ee0:	loope  0x412ee5
  412ee2:	(bad)  
  412ee3:	(bad)  
  412ee4:	fmul   DWORD PTR [edx-0x3a1f5533]
  412eea:	xchg   DWORD PTR [edx+0x5c46507a],ecx
  412ef0:	and    dl,BYTE PTR [edx+0x6e]
  412ef3:	retf   
  412ef4:	xchg   esp,eax
  412ef5:	test   DWORD PTR [eax],0xcde08a6e
  412efb:	or     al,0x2f
  412efd:	loop   0x412f18
  412eff:	xchg   esi,eax
  412f00:	inc    edi
  412f01:	or     ch,BYTE PTR [ebp+eiz*8+0x42]
  412f05:	or     ch,cl
  412f07:	lds    ebx,FWORD PTR [ecx+0x4d]
  412f0a:	sub    DWORD PTR [edi-0x7e69f85b],esi
  412f10:	pop    ecx
  412f11:	neg    DWORD PTR [edi-0x1772602b]
  412f17:	test   DWORD PTR [edx-0x76],eax
  412f1a:	add    BYTE PTR [edi-0x428db6ed],al
  412f20:	pop    ecx
  412f21:	(bad)  
  412f22:	out    0x0,al
  412f24:	adc    DWORD PTR [ecx],ecx
  412f26:	jmp    0x18cf8b0
  412f2b:	pmuludq mm4,mm1
  412f2e:	jmp    0x11c4:0x12da41c4
  412f35:	adc    eax,0x1f2e5b62
  412f3a:	mov    ecx,0x3481a787
  412f3f:	retf   0x7dc9
  412f42:	test   eax,0xe73ec920
  412f47:	sub    ebx,DWORD PTR [ecx+0x3a]
  412f4a:	sbb    al,0x5f
  412f4c:	ror    edx,0xeb
  412f4f:	outs   dx,BYTE PTR ds:[esi]
  412f50:	test   BYTE PTR [eax-0x7c],bh
  412f53:	xchg   DWORD PTR ds:0x104ed206,eax
  412f59:	les    edx,FWORD PTR [eax-0xc686500]
  412f5f:	jmp    0xe64fbe69
  412f64:	add    BYTE PTR [eax+0x9],dl
  412f67:	jmp    0x2303f8f1
  412f6c:	inc    edi
  412f6d:	inc    ebp
  412f6e:	mov    ecx,DWORD PTR ds:0x620a4285
  412f74:	ret    
  412f75:	cmp    bh,BYTE PTR [edi-0x4c]
  412f78:	sub    eax,0x2c00c941
  412f7d:	shl    DWORD PTR [ecx],cl
  412f7f:	ret    0x99ec
  412f82:	xor    BYTE PTR [edi+0x4b],0x6a
  412f86:	cli    
  412f87:	add    ebx,DWORD PTR [esi-0x35]
  412f8a:	ja     0x412f4c
  412f8c:	xchg   esp,eax
  412f8d:	out    dx,eax
  412f8e:	leave  
  412f8f:	mov    edi,DWORD PTR [ebx]
  412f91:	cmp    eax,0x91ea3031
  412f96:	mov    al,al
  412f98:	jmp    0x412fd3
  412f9a:	enter  0x9072,0x41
  412f9e:	inc    ebp
  412f9f:	or     al,0xc4
  412fa1:	mov    DWORD PTR [eax+edx*8-0x7a],edi
  412fa5:	ins    DWORD PTR es:[edi],dx
  412fa6:	or     al,BYTE PTR [eax]
  412fa8:	out    dx,eax
  412fa9:	inc    ebp
  412faa:	mov    esp,0xca2bae47
  412faf:	add    BYTE PTR [ebx+0x30830a3e],cl
  412fb5:	repnz push es
  412fb7:	je     0x412f5e
  412fb9:	inc    ebx
  412fba:	inc    edi
  412fbb:	cld    
  412fbc:	or     al,0x93
  412fbe:	mov    esi,0xa99f0043
  412fc3:	add    BYTE PTR [ebx+0x447fa262],cl
  412fc9:	scas   al,BYTE PTR es:[edi]
  412fca:	xor    ecx,DWORD PTR [ebx+0x47c9e345]
  412fd0:	in     al,dx
  412fd1:	adc    al,0x8
  412fd3:	test   BYTE PTR [ebp-0x72f9bc9d],0x9a
  412fda:	and    dl,0xdd
  412fdd:	in     eax,dx
  412fde:	jbe    0x412fd5
  412fe0:	test   BYTE PTR [edi],bl
  412fe2:	inc    edi
  412fe3:	mov    ?,WORD PTR [ecx-0x74f5bda1]
  412fe9:	stos   BYTE PTR es:[edi],al
  412fea:	xchg   edx,eax
  412feb:	or     DWORD PTR [ebp-0x3d],eax
  412fee:	pop    ds
  412fef:	adc    DWORD PTR [ebp-0x41],0x86c2b31f
  412ff6:	mov    ds:0x7d96876d,eax
  412ffb:	adc    BYTE PTR [ebx+0x22],0x86
  412fff:	enter  0x7ec2,0x7d
  413003:	adc    BYTE PTR [eax-0x7c],0x85
  413007:	adc    BYTE PTR [ebx+0x16],0x7e
  41300b:	enter  0x8ec2,0xc5
  41300f:	adc    BYTE PTR [eax-0x76],0xbd
  413013:	adc    BYTE PTR [ebx+0x12],0xc6
  413017:	enter  0x8ec2,0xbd
  41301b:	adc    BYTE PTR [eax-0x80],0x10
  41301f:	ds push eax
  413021:	(bad)  
  413022:	mov    ebx,0x690080ff
  413027:	fisttp WORD PTR [ebx+ecx*4]
  41302a:	dec    esi
  41302b:	ja     0x413088
  41302d:	or     eax,0x51e5f6d9
  413032:	shr    esi,1
  413034:	xchg   ecx,eax
  413035:	dec    edi
  413036:	fiadd  WORD PTR [edx+edx*8+0x3c80c1fd]
  41303d:	or     eax,0x484d64f0
  413042:	cmp    al,BYTE PTR [ebx+0x46]
  413045:	je     0x4130ad
  413047:	arpl   WORD PTR [esi+0x74],ax
  41304a:	mov    BYTE PTR [eax],ch
  41304c:	imul   edi,esp,0xfd3cb086
  413052:	sbb    eax,DWORD PTR [ebx-0x534dac7d]
  413058:	pop    ecx
  413059:	clc    
  41305a:	or     eax,0xd55be5e
  41305f:	loop   0x413047
  413061:	xchg   esi,eax
  413062:	ins    BYTE PTR es:[edi],dx
  413063:	adc    al,0xcf
  413065:	jmp    0xd89a3d08
  41306a:	or     eax,0xd3fdba2e
  41306f:	inc    edx
  413070:	imul   ecx,DWORD PTR [edi+0x32b272c5],0xdb530c5e
  41307a:	inc    ebx
  41307b:	test   eax,0x7ab5daf0
  413080:	js     0x4130b3
  413082:	pop    edx
  413083:	xchg   ebp,eax
  413084:	mov    esi,0x10feffdb
  413089:	xor    eax,0x6baabb00
  41308e:	(bad)  
  41308f:	sbb    edx,DWORD PTR [ebp-0x40edbe86]
  413095:	and    DWORD PTR [eax+0x7d],edx
  413098:	leave  
  413099:	scas   al,BYTE PTR es:[edi]
  41309a:	out    0x3,eax
  41309c:	call   DWORD PTR [ecx+ecx*4]
  41309f:	inc    edx
  4130a0:	inc    ebx
  4130a1:	std    
  4130a2:	mov    WORD PTR [ebp-0x5a],es
  4130a5:	js     0x4130e8
  4130a7:	repnz inc edx
  4130a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130aa:	fisttp WORD PTR [edi]
  4130ac:	pop    es
  4130ad:	aad    0x8e
  4130af:	cmp    eax,0xcdaada86
  4130b4:	xchg   esp,eax
  4130b5:	aam    0x8e
  4130b7:	xor    eax,0xb630e0a2
  4130bc:	stos   BYTE PTR es:[edi],al
  4130bd:	cmp    bl,cl
  4130bf:	mov    ebx,0x35be6694
  4130c4:	aas    
  4130c5:	push   edi
  4130c6:	push   es
  4130c7:	dec    eax
  4130c8:	test   eax,0x1bc616fa
  4130cd:	push   0x40
  4130cf:	mov    ch,BYTE PTR [eax]
  4130d1:	in     eax,0x88
  4130d3:	inc    ebp
  4130d4:	inc    esi
  4130d5:	xor    ebx,ebx
  4130d7:	adc    eax,0x47c5034a
  4130dc:	dec    ebx
  4130dd:	or     ecx,DWORD PTR [ebp-0xa66bb23]
  4130e3:	rol    BYTE PTR [ecx-0x1f],1
  4130e6:	jg     0x41312e
  4130e8:	(bad)  
  4130ea:	fidivr WORD PTR [eax+edx*1]
  4130ed:	out    0x6e,al
  4130ef:	add    BYTE PTR [esi+0x7ddcf376],dh
  4130f5:	stos   BYTE PTR es:[edi],al
  4130f6:	or     cl,al
  4130f8:	add    BYTE PTR [edx-0x72],0x29
  4130fc:	sar    DWORD PTR [edi],1
  4130fe:	aaa    
  4130ff:	push   edi
  413100:	(bad)  
  413101:	test   eax,0x9657fa08
  413106:	jge    0x413125
  413108:	sbb    eax,0x3c36881b
  41310d:	retf   0x42cc
  413110:	adc    DWORD PTR [ecx-0x36],0xffffffc6
  413114:	dec    edi
  413115:	stc    
  413116:	shr    BYTE PTR [ebx],0x7d
  413119:	inc    edx
  41311a:	cmp    BYTE PTR [eax],ah
  41311c:	lock fld DWORD PTR ds:[ecx]
  413120:	(bad)  
  413122:	mov    ds:0x7f9a41e8,al
  413127:	xchg   ebp,eax
  413128:	mov    DWORD PTR [esi],edi
  41312a:	ins    BYTE PTR es:[edi],dx
  41312b:	pusha  
  41312c:	mov    ecx,ecx
  41312e:	dec    esi
  41312f:	lds    ecx,FWORD PTR [ebp-0x7d54fd36]
  413135:	inc    edx
  413136:	pop    ebp
  413137:	jb     0x413117
  413139:	shl    esi,0xe5
  41313c:	jp     0x41312a
  41313e:	pop    edx
  41313f:	inc    ebx
  413140:	jp     0x41316a
  413142:	add    al,dh
  413144:	and    DWORD PTR [edx-0x367dd561],0x95dd62f2
  41314e:	sbb    eax,0xa5392e5
  413153:	jb     0x413155
  413155:	mov    edx,0x9eefcbf
  41315a:	es or  ecx,ebp
  41315d:	test   ecx,eax
  41315f:	jne    0x413142
  413161:	test   DWORD PTR [ebx-0x3a7effec],edi
  413167:	or     eax,0x200f666
  41316c:	push   fs
  41316e:	add    DWORD PTR [esi],ecx
  413170:	(bad)  
  413171:	mov    ds:0xd6660a79,al
  413176:	add    BYTE PTR [eax],al
  413178:	pavgw  mm7,mm5
  41317b:	repnz jmp FWORD PTR [edi]
  41317e:	dec    edx
  41317f:	mov    ebp,0x434f274e
  413184:	push   ebx
  413185:	enter  0xb7a3,0x10
  413189:	fistp  QWORD PTR [esi]
  41318b:	xchg   eax,eax
  41318d:	jecxz  0x413126
  41318f:	inc    ebx
  413190:	push   0xa3f87
  413195:	push   0xe18d0203
  41319a:	mov    ds:0x47328d43,al
  41319f:	pop    edx
  4131a0:	push   ebx
  4131a1:	xchg   DWORD PTR [ecx+esi*4+0x8a5df01],ecx
  4131a8:	xor    ebx,DWORD PTR [edi+0x72104cc7]
  4131ae:	jle    0x4131b5
  4131b0:	test   BYTE PTR [ebx+0x54000a3f],bh
  4131b6:	in     al,dx
  4131b7:	add    DWORD PTR [esi+0x0],esp
  4131ba:	push   esp
  4131bb:	add    al,BYTE PTR [edi+ecx*1]
  4131be:	and    BYTE PTR [ecx],cl
  4131c0:	add    ah,BYTE PTR [esi-0x12]
  4131c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131c4:	or     DWORD PTR [eax-0x49fad19f],ecx
  4131ca:	fisttp WORD PTR [ecx-0x5b]
  4131cd:	shl    DWORD PTR [esi],0x1
  4131d0:	push   es
  4131d1:	test   al,0xac
  4131d3:	add    cl,BYTE PTR [ebx+eax*4]
  4131d6:	jmp    FWORD PTR [edx-0x77]
  4131d9:	shl    BYTE PTR [ebx-0x79f3b339],0x25
  4131e0:	dec    edx
  4131e1:	push   cs
  4131e2:	or     esp,DWORD PTR [edx+0x2e]
  4131e5:	mov    BYTE PTR [ebp-0x1f1b5eb],al
  4131eb:	imul   esp,DWORD PTR [edi],0x77dc8c6
  4131f1:	add    ax,0x1a1
  4131f5:	or     BYTE PTR [ecx-0x3f7738f2],al
  4131fb:	cmp    al,0x12
  4131fd:	(bad)  
  4131fe:	mov    edx,0xc1b50285
  413203:	jno    0x413193
  413205:	clc    
  413206:	xchg   esi,eax
  413207:	into   
  413208:	cli    
  413209:	(bad)
  41320d:	jl     0x413195
  41320f:	fwait
  413210:	retf   0x1e43
  413213:	cld    
  413214:	or     eax,0x34608600
  413219:	hlt    
  41321a:	imul   ebx,DWORD PTR [ebx-0x12fffff9],0xa6f88e95
  413224:	mov    dh,0xe4
  413226:	les    ecx,FWORD PTR [ebx-0x6d]
  413229:	pop    es
  41322a:	add    cl,ch
  41322c:	fwait
  41322d:	retf   0xde43
  413230:	fwait
  413231:	rol    BYTE PTR [eax],cl
  413233:	xchg   BYTE PTR [eax+0x34],ch
  413236:	hlt    
  413237:	rcr    DWORD PTR [ebx+0x69fb0007],1
  41323d:	and    BYTE PTR [eax+0x13],dl
  413240:	bound  ebp,QWORD PTR [edx]
  413242:	push   eax
  413243:	or     eax,0xdae80667
  413248:	mov    ebx,ebx
  41324a:	std    
  41324b:	sti    
  41324c:	imul   ebx,DWORD PTR [edi],0x14621350
  413252:	push   eax
  413253:	or     eax,0xcae8d667
  413258:	inc    edx
  413259:	stos   DWORD PTR es:[edi],eax
  41325a:	xlat   BYTE PTR ds:[ebx]
  41325b:	mov    edi,DWORD PTR [edi-0x4029d7d5]
  413261:	and    ebp,DWORD PTR [esi+edx*8]
  413264:	mov    ebp,0xd65ed02e
  413269:	mov    edx,edi
  41326b:	imul   ebx,DWORD PTR [ecx+edx*8],0x32
  41326f:	or     eax,0x6e33b208
  413274:	add    DWORD PTR [edx-0x29],esp
  413277:	push   ebx
  413278:	mov    esp,0x7fe13a3
  41327d:	mov    ds:0xe707fb06,al
  413282:	push   es
  413283:	add    bl,ch
  413285:	pop    es
  413286:	aad    0xbd
  413288:	enter  0xe256,0x80
  41328c:	inc    esi
  41328d:	push   ss
  41328e:	out    dx,al
  41328f:	jmp    0x4132d6
  413291:	ret    0xd73c
  413294:	add    DWORD PTR [eax],ecx
  413296:	fld    DWORD PTR [eax-0x290ce9ba]
  41329c:	nop
  41329d:	xor    dl,BYTE PTR [esi+ecx*1]
  4132a0:	add    esi,DWORD PTR [edi]
  4132a2:	add    esp,esi
  4132a4:	mov    ecx,0x8a3e6a42
  4132a9:	(bad)  
  4132aa:	and    DWORD PTR [eax-0x7e],edx
  4132ad:	mov    BYTE PTR [esi+0x8f7e1d6],ch
  4132b3:	mov    cl,0x6
  4132b5:	xchg   ecx,eax
  4132b6:	in     al,0x83
  4132b8:	dec    ebp
  4132b9:	xchg   ecx,eax
  4132ba:	loope  0x41330c
  4132bc:	jns    0x41324f
  4132be:	pop    ebx
  4132bf:	hlt    
  4132c0:	ret    0xc536
  4132c3:	repz jns 0x413308
  4132c6:	cmp    ebp,esp
  4132c8:	mov    cl,0xcc
  4132cb:	(bad)  
  4132cc:	ja     0x413266
  4132ce:	js     0x41328d
  4132d0:	inc    ebx
  4132d1:	lock or DWORD PTR [edx],edx
  4132d4:	retf   
  4132d5:	or     DWORD PTR [esi],0xffffffe9
  4132d8:	mov    eax,0x7ba60e17
  4132dd:	(bad)  
  4132de:	sbb    eax,0xa507589
  4132e3:	xchg   esi,eax
  4132e4:	retf   
  4132e5:	xor    dh,bl
  4132e7:	hlt    
  4132e8:	add    BYTE PTR [ecx+0x33],dl
  4132eb:	dec    edx
  4132ec:	jmp    0x91574c41
  4132f1:	loop   0x4132b5
  4132f3:	repz jbe 0x413326
  4132f6:	sbb    DWORD PTR [edx],edx
  4132f8:	sbb    edx,0x3066f3c2
  4132fe:	sbb    DWORD PTR [esi+0x51],ecx
  413301:	adc    al,bl
  413303:	repz push esi
  413305:	imul   ebx,DWORD PTR [edx-0x71a79679],0xffffffc7
  41330c:	pushf  
  41330d:	cld    
  41330e:	sahf   
  41330f:	pop    ecx
  413310:	xchg   edi,eax
  413311:	cmp    BYTE PTR [esi+eax*1],dl
  413314:	ss push ss
  413316:	sbb    BYTE PTR [eax],bl
  413318:	test   eax,0xccfab985
  41331d:	test   DWORD PTR [edx-0xd],eax
  413320:	jmp    0x10ab431
  413325:	cmc    
  413326:	cmp    cl,cl
  413328:	(bad)  
  413329:	retf   
  41332a:	psubsw mm5,mm1
  41332d:	rol    BYTE PTR [edx+0xa],1
  413330:	jb     0x413365
  413332:	shr    al,1
  413334:	(bad)  [esp+edi*2-0x3082fe37]
  41333b:	jmp    0x8210b231
  413340:	and    al,0xde
  413342:	sbb    al,0xe
  413344:	fs jns 0x4132d5
  413347:	pop    edx
  413348:	into   
  413349:	inc    ecx
  41334a:	cmp    ah,dl
  41334c:	add    BYTE PTR [eax],al
  41334e:	sub    al,0x58
  413350:	repz jmp FWORD PTR [ebx]
  413353:	xchg   BYTE PTR [esi+0x18],bh
  413356:	sub    al,BYTE PTR [eax+0x7579107e]
  41335c:	ja     0x41336a
  41335e:	loopne 0x41335f
  413360:	add    eax,ebp
  413362:	add    BYTE PTR [ecx-0xd],bl
  413365:	(bad)  
  413366:	jmp    0x4132ee
  413368:	jle    0x41336e
  41336a:	iret   
  41336b:	inc    ebx
  41336c:	loope  0x413370
  41336e:	sub    eax,0x2dc95483
  413373:	or     dl,BYTE PTR ds:[ebp-0x1c]
  413377:	call   0xa:0x4163ec73
  41337e:	or     al,0xba
  413380:	dec    edi
  413381:	or     al,0xf9
  413383:	pop    ebp
  413384:	cmp    DWORD PTR [ebp+0x27],0x87680619
  41338b:	add    BYTE PTR [edx+0x0],cl
  41338e:	or     BYTE PTR [ebx+0x432e5e63],bl
  413394:	mov    es,eax
  413396:	and    BYTE PTR [edi],cl
  413398:	cmc    
  413399:	pop    es
  41339a:	pop    ds
  41339b:	inc    ebx
  41339c:	bound  eax,QWORD PTR [eax-0x18]
  41339f:	mov    ebx,esi
  4133a1:	imul   esi,ebx,0x3fc847c7
  4133a7:	fwait
  4133a8:	xchg   ecx,eax
  4133a9:	pop    ebp
  4133aa:	fiadd  WORD PTR [edx-0x72]
  4133ad:	shl    al,0xe
  4133b0:	in     eax,dx
  4133b1:	pop    es
  4133b2:	add    bh,ch
  4133b4:	inc    edx
  4133b5:	pusha  
  4133b6:	add    al,0xf7
  4133b8:	push   edx
  4133b9:	jg     0x413408
  4133bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133bc:	push   ebx
  4133bd:	mov    ebx,0xa062938
  4133c2:	call   0x36b76e
  4133c7:	xchg   BYTE PTR [esi],bl
  4133c9:	(bad)  
  4133ca:	or     eax,0xfff6ae0b
  4133cf:	test   eax,0xecd3410
  4133d4:	mov    cx,0x1b8b
  4133d8:	fmul   DWORD PTR [ebx+eax*2+0x5ca80c2]
  4133df:	xchg   BYTE PTR [ecx+0x1f6b7b8c],bl
  4133e5:	xor    al,0xd0
  4133e7:	outs   dx,BYTE PTR ds:[esi]
  4133e8:	hlt    
  4133e9:	cmc    
  4133ea:	push   DWORD PTR [ecx+0x6d]
  4133ed:	test   DWORD PTR [ebx+0x63],eax
  4133f0:	xchg   ebp,eax
  4133f1:	test   DWORD PTR [ebx+0x61],ecx
  4133f4:	inc    esi
  4133f5:	(bad)  
  4133f6:	loopne 0x413386
  4133f8:	cmp    eax,0x5481bf01
  4133fd:	mov    DWORD PTR [ebx],0xfdde284b
  413403:	call   FWORD PTR [ebx+0x7d86000a]
  413409:	adc    bh,BYTE PTR [edi+0x58b2481]
  41340f:	xchg   BYTE PTR [ebx-0x78faf67e],bl
  413415:	fild   WORD PTR [eax]
  413417:	add    BYTE PTR [ebp+0x54],dl
  41341a:	mov    WORD PTR [ebx+0x1e],es
  41341d:	in     eax,0x37
  41341f:	mov    esi,DWORD PTR [ebx-0xd847fc9]
  413425:	sub    al,0x3a
  413427:	add    al,0xd
  413429:	fucomip st,st(3)
  41342b:	mov    DWORD PTR [esi-0x234048e0],edi
  413431:	imul   ecx,DWORD PTR [eax-0x21647921],0x0
  413438:	lea    esp,[ecx-0x7e]
  41343b:	rcl    BYTE PTR [eax],1
  41343d:	pushf  
  41343e:	fiadd  WORD PTR [eax]
  413440:	xchg   BYTE PTR [edx+0x0],al
  413443:	mov    edx,0xfef1a301
  413448:	leave  
  413449:	sbb    ch,ah
  41344b:	add    BYTE PTR [ebp-0x5e],0xa2
  41344f:	fnstsw WORD PTR [esi-0x7d]
  413452:	mov    edi,0x3e8d51fc
  413457:	cld    
  413458:	mov    ?,WORD PTR [eax+0x6a]
  41345b:	inc    ecx
  41345c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41345d:	call   0xc465:0x8d89318c
  413464:	cmc    
  413465:	inc    esi
  413466:	pusha  
  413467:	inc    ecx
  413468:	push   0xffffff8d
  41346a:	push   0x89c16249
  41346f:	add    al,0x7b
  413471:	(bad)  
  413472:	jmp    0x41347e
  413474:	xchg   BYTE PTR [edx+0x39],al
  413477:	add    eax,DWORD PTR ds:0x3e460
  41347d:	xchg   BYTE PTR [edx],bl
  41347f:	and    DWORD PTR [ebx+0x6f],ebx
  413482:	inc    edx
  413483:	mov    ah,0x7e
  413485:	mov    ebp,0x3b49663a
  41348a:	repnz dec eax
  41348c:	nop
  41348d:	rol    BYTE PTR [ebx-0x1f],cl
  413490:	xchg   DWORD PTR [esi+0x3d],eax
  413493:	gs cld 
  413495:	mov    al,BYTE PTR [edx-0x1f]
  413498:	sbb    DWORD PTR [ebp+0x7f7ee18d],0x3d
  41349f:	pop    esi
  4134a0:	(bad)  
  4134a1:	or     esi,ecx
  4134a3:	clc    
  4134a4:	xchg   esi,eax
  4134a6:	cmp    al,0x6d
  4134a8:	fadd   DWORD PTR [eax+0x7f7ee142]
  4134ae:	ror    DWORD PTR [esi-0x5940791d],0x7b
  4134b5:	ss mov edi,0xf0dbe39e
  4134bb:	or     ebp,esp
  4134bd:	push   eax
  4134be:	jp     0x41344d
  4134c0:	and    BYTE PTR [ebp-0x7a102f3a],al
  4134c6:	inc    edx
  4134c7:	repz push esp
  4134c9:	mov    dl,0xb7
  4134cb:	dec    ebp
  4134cc:	popa   
  4134cd:	int    0x10
  4134cf:	test   dh,0xd4
  4134d2:	mov    edx,0x3ef06cd2
  4134d7:	mov    fs,WORD PTR [edi+ecx*4+0x2eb60a42]
  4134de:	mov    ds:0x3d00d4f3,al
  4134e3:	xor    BYTE PTR [edx-0x17],cl
  4134e6:	test   ah,dl
  4134e8:	aas    
  4134e9:	lock clc 
  4134eb:	mov    ch,BYTE PTR [edx+eiz*2-0x38]
  4134ef:	cmp    ch,BYTE PTR [eax+ebp*4+0x65]
  4134f3:	cmp    ebp,DWORD PTR [edx+esi*8+0x4a]
  4134f7:	and    eax,0x24d62481
  4134fc:	jg     0x413528
  4134fe:	push   eax
  4134ff:	aas    
  413500:	mov    esp,0xc9264922
  413505:	dec    ecx
  413506:	cmp    eax,0xaf27ff26
  41350b:	ret    
  41350c:	dec    ebp
  41350d:	ja     0x4134bf
  41350f:	test   DWORD PTR ds:0xa8d85e9,ebp
  413515:	jb     0x41355b
  413517:	int3   
  413518:	loope  0x4134f3
  41351a:	sbb    ch,cl
  41351c:	jg     0x413544
  41351e:	dec    edx
  41351f:	ins    BYTE PTR es:[edi],dx
  413520:	sbb    ah,BYTE PTR [edx-0x34]
  413523:	popa   
  413524:	fdivr  st(2),st
  413526:	inc    ebx
  413527:	int3   
  413528:	loop   0x41351b
  41352a:	ret    0x26b
  41352d:	loop   0x4134f9
  41352f:	ret    
  413530:	dec    ebp
  413531:	pop    ecx
  413532:	dec    ebx
  413533:	xor    al,BYTE PTR [ebp+0x5a602c00]
  413539:	lea    esp,[edx]
  41353b:	loopne 0x413597
  41353d:	call   0x36266f
  413542:	add    DWORD PTR [edi-0x48ff5bb9],eax
  413548:	sbb    DWORD PTR [ebx+0x6d8f0145],esi
  41354e:	shl    DWORD PTR [edx-0x52],0x2
  413552:	push   0xffffffb7
  413554:	or     al,0x47
  413556:	pushf  
  413557:	jg     0x4135ca
  413559:	ja     0x413563
  41355b:	mov    bh,0xe0
  41355d:	push   esi
  41355e:	add    DWORD PTR [edi+0x230fcac3],ebx
  413564:	cs or  al,0x0
  413567:	outs   dx,DWORD PTR ds:[esi]
  413568:	(bad)  
  413569:	cmc    
  41356a:	je     0x4135df
  41356c:	dec    edx
  41356d:	cmc    
  41356e:	jne    0x41356f
  413570:	jo     0x4135e9
  413572:	or     BYTE PTR [edi],al
  413574:	or     BYTE PTR [esi+0x1],dl
  413577:	outs   dx,DWORD PTR ds:[esi]
  413578:	ret    
  413579:	retf   0xe30f
  41357c:	xchg   esi,eax
  41357d:	or     eax,0x2f0e5f00
  413582:	xor    al,0x31
  413584:	dec    DWORD PTR [ecx]
  413586:	mov    eax,0xa71a8
  41358b:	sbb    DWORD PTR [ecx+0xa],esi
  41358e:	add    BYTE PTR [edi],bl
  413590:	push   cs
  413591:	ret    0x4156
  413594:	or     BYTE PTR [edi-0x25],al
  413597:	call   0x6071:0x58fe82c3
  41359e:	add    bh,ch
  4135a0:	js     0x4135e9
  4135a2:	fcomp  DWORD PTR [edi]
  4135a4:	sbb    DWORD PTR [ebx-0x228eb9b3],ecx
  4135aa:	push   esi
  4135ab:	add    ah,bl
  4135ad:	push   0x2186857f
  4135b2:	ret    
  4135b3:	std    
  4135b4:	jmp    0xba3e6d8b
  4135b9:	pop    ss
  4135ba:	ret    0xf18
  4135bd:	push   ss
  4135be:	mov    edi,0x8d455b87
  4135c3:	jnp    0x413593
  4135c5:	cwde   
  4135c6:	or     al,BYTE PTR [esi+0x798df]
  4135cc:	sub    al,0x99
  4135ce:	dec    edi
  4135cf:	sub    al,0x87
  4135d1:	cdq    
  4135d2:	pop    es
  4135d3:	mov    eax,DWORD PTR [ebx-0x5f]
  4135d6:	aaa    
  4135d7:	xor    esi,eax
  4135d9:	jo     0x413615
  4135db:	pop    esi
  4135dc:	xchg   DWORD PTR [ecx-0x5c6e0772],ebx
  4135e2:	mov    WORD PTR [esi-0x2f8667a],?
  4135e8:	fwait
  4135e9:	xchg   ecx,esi
  4135eb:	aas    
  4135ec:	xchg   BYTE PTR [esi+0x33],ah
  4135ef:	and    eax,0x830a9b86
  4135f4:	call   FWORD PTR [esi+0x3f050007]
  4135fa:	bnd call ebp
  4135fd:	xchg   esp,eax
  4135fe:	push   ebp
  4135ff:	std    
  413600:	push   ecx
  413601:	xchg   ebx,edi
  413603:	cld    
  413604:	jae    0x413671
  413606:	(bad)  
  413607:	aas    
  413608:	xchg   BYTE PTR [esp+ecx*2],dl
  41360b:	or     al,0xd
  41360d:	xchg   esp,eax
  41360e:	ficom  DWORD PTR [eax+0x0]
  413611:	xchg   esi,eax
  413612:	and    al,0x44
  413614:	clc    
  413615:	add    eax,0xafff77f
  41361a:	add    DWORD PTR [ebx+0x6f],ebx
  41361d:	add    eax,0x9d00cf7f
  413622:	push   eax
  413623:	lock mov bl,al
  413626:	inc    edi
  413627:	jbe    0x413674
  413629:	out    dx,al
  41362a:	inc    edx
  41362b:	jle    0x413644
  41362d:	stc    
  41362e:	pop    ds
  41362f:	pusha  
  413630:	push   ecx
  413631:	test   DWORD PTR [edx-0x6d],eax
  413634:	cmp    al,0x60
  413636:	lds    eax,FWORD PTR [ebx-0x5aef79f8]
  41363c:	cmp    ebx,ebx
  41363e:	psubw  mm7,QWORD PTR [edi+eax*8-0x66]
  413643:	pop    esp
  413644:	fmul   st,st(3)
  413646:	mov    DWORD PTR [eax-0x35],esp
  413649:	ret    
  41364a:	cmp    DWORD PTR [ebp-0x15],esp
  41364d:	test   BYTE PTR [edx-0x1f],al
  413650:	mov    dh,al
  413652:	cmp    DWORD PTR [ebp-0xd],esp
  413655:	test   BYTE PTR [edx-0x1f],al
  413658:	sbb    BYTE PTR [esi+0xf233643],0x0
  41365f:	rol    DWORD PTR [ebx+0x4f],1
  413662:	(bad)  
  413663:	mov    eax,0x16897459
  413668:	int3   
  413669:	pop    es
  41366a:	cdq    
  41366b:	cli    
  41366c:	jp     0x4136b9
  41366e:	mov    bh,0x1e
  413670:	loopne 0x4136d0
  413672:	pop    ds
  413673:	sbb    eax,0x9d6b00cf
  413678:	jmp    0x9931bfd6
  41367d:	repnz fisttp DWORD PTR [ecx+0x32c5cf74]
  413684:	push   0x2ec57649
  413689:	fmul   QWORD PTR [ecx-0x4b3459b3]
  41368f:	mov    al,0x60
  413691:	push   ecx
  413692:	call   0x4489:0x5f87ec42
  413699:	iret   
  41369a:	and    ecx,DWORD PTR [edi]
  41369c:	aad    0xce
  41369e:	jne    0x4136ce
  4136a0:	iret   
  4136a1:	inc    ebx
  4136a2:	xchg   BYTE PTR [ebx-0x78c72bf6],bl
  4136a8:	repz bound edx,QWORD PTR [edi+0x3a]
  4136ac:	bound  ebp,QWORD PTR [ecx-0x6cf5d4b0]
  4136b2:	mov    bh,BYTE PTR [ebp-0x654de9b3]
  4136b8:	nop
  4136b9:	mov    bl,0x8a
  4136bb:	inc    edx
  4136bc:	mov    gs,WORD PTR [ecx]
  4136be:	fld    st(4)
  4136c0:	leave  
  4136c1:	in     eax,0x85
  4136c3:	inc    edx
  4136c4:	add    edi,DWORD PTR [edi]
  4136c6:	aas    
  4136c7:	xchg   DWORD PTR [edi-0x71c875ff],eax
  4136cd:	add    eax,0x310a428e
  4136d2:	jb     0x41370b
  4136d4:	mov    gs,WORD PTR [edi+eax*4+0x210a42]
  4136db:	mov    eax,ds:0x85eb25c4
  4136e0:	inc    edx
  4136e1:	inc    edx
  4136e2:	out    dx,al
  4136e3:	or     DWORD PTR [ebp+0x9],edi
  4136e6:	jmp    0x65443170
  4136eb:	and    al,0x43
  4136ed:	or     ch,cl
  4136ef:	mov    ebp,0x89798d35
  4136f4:	inc    edx
  4136f5:	or     al,BYTE PTR [ecx]
  4136f7:	ret    0xf0d
  4136fa:	jmp    0x2cc678be
  4136ff:	shl    dl,cl
  413701:	loope  0x41371b
  413703:	pushf  
  413704:	xchg   ebx,esi
  413706:	ins    DWORD PTR es:[edi],dx
  413707:	inc    ebp
  413708:	ss mov ?,ecx
  41370b:	mov    DWORD PTR [edx+0xa],eax
  41370e:	rol    ebp,1
  413710:	or     eax,0x3ecfe90f
  413715:	test   DWORD PTR [ecx+eax*2+0x6c10e1f3],ebp
  41371c:	xchg   ebx,esi
  41371e:	add    BYTE PTR [ebx+0x3f840583],ch
  413724:	inc    eax
  413725:	or     al,BYTE PTR [eax]
  413727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413728:	add    cl,dh
  41372a:	mov    ebp,DWORD PTR [esi-0x5ffff5a6]
  413730:	inc    ebx
  413731:	adc    ecx,0xb1a699e
  413737:	popf   
  413738:	or     al,0xc3
  41373a:	ror    DWORD PTR [ebp+0xe17493],0xef
  413741:	js     0x41374d
  413743:	add    ah,dl
  413745:	into   
  413746:	mov    bl,0xe8
  413748:	out    0x7e,eax
  41374a:	call   0x8bc2db57
  41374f:	inc    ebp
  413750:	jmp    0x413750
  413752:	add    al,0x84
  413754:	xchg   esi,eax
  413755:	cmp    cl,BYTE PTR [edx]
  413757:	add    bh,al
  413759:	xchg   esp,eax
  41375a:	outs   dx,DWORD PTR ds:[esi]
  41375b:	call   eax
  41375d:	or     edx,edi
  41375f:	test   ecx,ebx
  413761:	test   DWORD PTR [edi+0xa43ab1a],eax
  413767:	push   0x10ed5f
  41376c:	xor    bh,ch
  41376e:	int    0x56
  413770:	pop    ss
  413771:	call   0xfca:0xbf5f015b
  413778:	fisttp DWORD PTR [ecx+0xa6f0007]
  41377e:	inc    edi
  41377f:	or     al,0xd4
  413781:	dec    edi
  413782:	into   
  413783:	mov    edx,DWORD PTR [edi+0x4d]
  413786:	cmc    
  413787:	push   eax
  413788:	xor    ecx,DWORD PTR [ebp-0x1e]
  41378b:	adc    esi,DWORD PTR [ebx]
  41378d:	jbe    0x413784
  41378f:	jmp    0x36b02e
  413794:	mov    ah,0xf7
  413796:	add    DWORD PTR [eax-0x7a],ebp
  413799:	fstp   DWORD PTR [esi+0x19]
  41379c:	xchg   BYTE PTR [ebx+0x49c38b0c],al
  4137a2:	ds call 0x9230ba8
  4137a8:	add    BYTE PTR [edx],al
  4137aa:	pop    ecx
  4137ab:	cmc    
  4137ac:	sbb    edi,0xffffff9b
  4137af:	pop    es
  4137b0:	add    BYTE PTR [eax+0x5a],ah
  4137b3:	dec    ebx
  4137b4:	out    dx,eax
  4137b5:	jle    0x413776
  4137b7:	enter  0xf543,0xa0
  4137bb:	push   ecx
  4137bc:	adc    eax,0x843895
  4137c1:	push   es
  4137c2:	cdq    
  4137c3:	pop    es
  4137c4:	std    
  4137c5:	jnp    0x4137b4
  4137c7:	icebp  
  4137c8:	aas    
  4137c9:	xchg   BYTE PTR [esi],dl
  4137cb:	into   
  4137cc:	or     ax,0xa0de
  4137d0:	or     eax,0x65f95613
  4137d5:	outs   dx,DWORD PTR ds:[esi]
  4137d6:	pop    esi
  4137d7:	xlat   BYTE PTR ds:[ebx]
  4137d8:	jae    0x413856
  4137da:	div    DWORD PTR [eax+0x43]
  4137dd:	mov    ebp,0x9542fefe
  4137e2:	inc    esp
  4137e3:	or     edi,DWORD PTR [esi+0x71987]
  4137e9:	cld    
  4137ea:	push   ebp
  4137eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137ec:	mov    dl,bl
  4137ee:	retf   
  4137ef:	jno    0x4137c1
  4137f1:	push   es
  4137f2:	mov    ebx,0x9b648008
  4137f7:	add    edx,ecx
  4137f9:	bnd jne 0x413787
  4137fc:	(bad)  
  4137fd:	fimul  DWORD PTR [edx+0x4e9ec71a]
  413803:	stc    
  413804:	or     al,0xfa
  413806:	fidiv  DWORD PTR [eax]
  413808:	add    DWORD PTR [eax],0xbf8a9667
  41380e:	test   al,al
  413810:	div    BYTE PTR [eax]
  413812:	dec    edi
  413813:	inc    ebx
  413814:	sub    DWORD PTR [edi],edi
  413816:	xchg   edi,eax
  413817:	xor    eax,0xc1c1c27d
  41381c:	inc    edx
  41381d:	inc    DWORD PTR [esi]
  41381f:	test   ch,ch
  413821:	clc    
  413822:	sub    BYTE PTR [ecx+0x72fcd3be],bh
  413828:	popa   
  413829:	loop   0x4137ad
  41382b:	ret    0x73f
  41382e:	mov    esp,0x225bd78
  413833:	jl     0x4137ca
  413835:	repnz mov dh,0x7b
  413838:	jmp    0x7576cf7b
  41383d:	ret    0xc149
  413840:	add    cl,cl
  413842:	pop    es
  413843:	test   cl,bh
  413845:	fadd   DWORD PTR [ebx+0x3d0b3a51]
  41384b:	xor    esp,ebp
  41384d:	ja     0x413850
  41384f:	cld    
  413850:	pop    edi
  413851:	loop   0x413805
  413853:	shl    DWORD PTR [edx+0x77937ef4],0x39
  41385a:	mov    dh,0xc2
  41385c:	ret    0x6a06
  41385f:	inc    eax
  413860:	pop    ss
  413861:	mov    esp,0xc3f03212
  413866:	or     bh,BYTE PTR [esp+eiz*8+0x6f]
  41386a:	(bad)  
  41386b:	cli    
  41386c:	pop    edi
  41386d:	in     al,0x0
  41386f:	shl    WORD PTR [ecx-0x6c6d70bc],0x41
  413877:	jbe    0x4138b3
  413879:	sbb    eax,0x620adffd
  41387e:	mov    edx,0x3e13a86
  413883:	mov    ebx,0x76d4268c
  413888:	push   cs
  413889:	cli    
  41388a:	pop    ebp
  41388b:	inc    dl
  41388d:	or     ah,BYTE PTR [edi-0x16f5c576]
  413893:	ins    BYTE PTR es:[edi],dx
  413894:	sbb    BYTE PTR ds:0x5a92c774,cl
  41389a:	ins    BYTE PTR es:[edi],dx
  41389b:	(bad)  
  41389c:	push   0x5a
  41389e:	inc    ecx
  41389f:	retf   
  4138a0:	or     esi,ebx
  4138a2:	dec    esi
  4138a3:	sbb    eax,0x553a4dce
  4138a8:	repnz add dh,BYTE PTR [esi-0x39]
  4138ac:	xchg   ebp,eax
  4138ad:	pop    edx
  4138ae:	bound  eax,QWORD PTR [edi+0x36]
  4138b1:	jg     0x413894
  4138b3:	js     0x413921
  4138b5:	repz mov ecx,0x1c189bdd
  4138bb:	mov    ebp,0xdd947f86
  4138c0:	sbb    al,0x4a
  4138c2:	xchg   esi,eax
  4138c3:	call   0x4f2f9a4c
  4138c8:	add    DWORD PTR [esi+0x52b6ad99],ebx
  4138ce:	call   0xdf0bf758
  4138d3:	add    BYTE PTR [ecx],bh
  4138d5:	int3   
  4138d6:	or     cl,ch
  4138d8:	test   edx,eax
  4138da:	jne    0x413951
  4138dc:	test   DWORD PTR [edi],esi
  4138de:	popf   
  4138df:	test   eax,0x39cace9c
  4138e4:	sbb    DWORD PTR [ecx],eax
  4138e6:	fwait
  4138e7:	jb     0x4138be
  4138e9:	mov    edx,0x31aaa8c2
  4138ee:	mov    ebx,ecx
  4138f0:	test   DWORD PTR [edx-0xd],eax
  4138f3:	jmp    0xb1c0ae70
  4138f8:	dec    edx
  4138f9:	fs sbb al,ah
  4138fc:	test   DWORD PTR [ebp+0x7c60e90a],eax
  413902:	jg     0x413928
  413904:	pop    esi
  413905:	(bad)
  413908:	push   edi
  413909:	jg     0x4138eb
  41390b:	or     BYTE PTR [edi+ecx*8-0x7f],dl
  41390f:	or     BYTE PTR [eax+0x76e91e4f],bh
  413915:	jnp    0x41390c
  413917:	push   DWORD PTR [edx+edi*8-0xf2097ff]
  41391e:	adc    BYTE PTR [eax],al
  413920:	inc    ebp
  413921:	xchg   DWORD PTR [eax-0x1db084bb],eax
  413927:	ss out 0x3e,eax
  41392a:	or     al,BYTE PTR [edi+ebx*2-0x12a27878]
  413931:	aas    
  413932:	or     ah,BYTE PTR [esi-0x52]
  413935:	add    bh,BYTE PTR [edi+0x7f010008]
  41393b:	inc    edi
  41393c:	iret   
  41393d:	mul    DWORD PTR [ecx]
  41393f:	mov    bl,0x45
  413941:	sahf   
  413942:	xchg   DWORD PTR [ebp-0x3f],ebp
  413945:	and    cl,ch
  413947:	add    al,BYTE PTR [eax+0xf0acc0a]
  41394d:	xor    bh,BYTE PTR [edi+0x39]
  413950:	leave  
  413951:	cld    
  413952:	js     0x4138d6
  413954:	inc    ebp
  413955:	fwait
  413956:	ss aas 
  413958:	clc    
  413959:	push   ecx
  41395a:	xchg   esp,eax
  41395b:	add    BYTE PTR [ebp-0x45],0xbd
  41395f:	retf   0x5107
  413962:	aaa    
  413963:	inc    edx
  413964:	(bad)  
  413965:	xor    al,BYTE PTR [ebx-0xc68c693]
  41396b:	or     al,BYTE PTR [edi+0x1c]
  41396e:	jle    0x41397b
  413970:	cmp    edi,DWORD PTR [edx+0x74ec7876]
  413976:	cld    
  413977:	icebp  
  413978:	jne    0x413900
  41397a:	jns    0x4139c3
  41397c:	clc    
  41397d:	hlt    
  41397e:	dec    ebx
  41397f:	repnz imul eax,DWORD PTR [esi-0x2c75101e],0x5
  413987:	(bad)  
  413988:	pop    esi
  413989:	iret   
  41398a:	mov    esp,0x944684c1
  41398f:	jae    0x41398f
  413991:	xchg   DWORD PTR [ecx-0x5dc696f9],ebx
  413997:	push   cs
  413998:	jnp    0x4139bc
  41399a:	outs   dx,DWORD PTR ds:[esi]
  41399b:	lock mov al,BYTE PTR [eax]
  41399e:	ret    
  41399f:	push   ebp
  4139a0:	ds push ebp
  4139a2:	xlat   BYTE PTR cs:[ebx]
  4139a4:	inc    ebp
  4139a5:	std    
  4139a6:	sbb    DWORD PTR [edx],eax
  4139a8:	push   ss
  4139a9:	cld    
  4139aa:	adc    esp,edi
  4139ac:	push   ebp
  4139ad:	inc    eax
  4139ae:	xchg   ecx,eax
  4139af:	mov    al,ds:0x4c876a07
  4139b4:	inc    ebx
  4139b5:	or     dh,ch
  4139b7:	mov    ebx,DWORD PTR [edi]
  4139b9:	push   ecx
  4139bb:	adc    al,0xce
  4139bd:	or     eax,0x74902
  4139c2:	xchg   BYTE PTR [eax],ah
  4139c4:	dec    ebx
  4139c5:	or     BYTE PTR [esi-0x27],ch
  4139c8:	pop    edx
  4139c9:	sbb    DWORD PTR [esi+0x438b0daf],eax
  4139cf:	cmp    eax,0xa410e83e
  4139d4:	or     BYTE PTR [eax],al
  4139d6:	add    bl,BYTE PTR [ecx-0xf]
  4139d9:	cmp    ebx,0xffffff99
  4139dc:	pop    es
  4139dd:	add    BYTE PTR [ecx-0x54],bh
  4139e0:	cmp    al,0xe4
  4139e2:	add    eax,0xd0031f8
  4139e7:	ficom  DWORD PTR [edi*8-0x40f8667a]
  4139ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139ef:	nop
  4139f0:	enter  0x8ee7,0x64
  4139f4:	enter  0xf66,0x2d
  4139f8:	or     ax,WORD PTR ss:[ebx-0x5f]
  4139fd:	clc    
  4139fe:	add    eax,0x3e1d1
  413a03:	xchg   BYTE PTR [ecx+0x54],dl
  413a06:	retf   
  413a07:	sbb    DWORD PTR [edx-0x21],ebp
  413a0a:	jbe    0x4139e3
  413a0c:	push   es
  413a0d:	js     0x4139c7
  413a0f:	pop    esi
  413a10:	pushf  
  413a11:	or     ecx,ecx
  413a13:	inc    ebx
  413a14:	(bad)  
  413a15:	mov    eax,ds:0xe1fc05f8
  413a1a:	add    eax,DWORD PTR [esi-0x70af5f16]
  413a20:	inc    edx
  413a21:	mov    esp,0xdecd58c8
  413a26:	sti    
  413a27:	and    DWORD PTR ds:0xc68602bc,edi
  413a2d:	and    eax,edi
  413a2f:	add    eax,0x8603e1e4
  413a34:	(bad)
  413a37:	stc    
  413a38:	xor    al,0x21
  413a3a:	lea    eax,[esi+0x6003e181]
  413a40:	cmp    eax,0x14573ba0
  413a45:	push   0x96b98b01
  413a4a:	repz adc BYTE PTR [edi+ebx*8+0x7a],ah
  413a4f:	cmp    eax,0xfbbe06a
  413a54:	inc    esp
  413a55:	push   0xd168f9d3
  413a5a:	jl     0x413a0a
  413a5c:	and    eax,0x51b2fbe7
  413a61:	fwait
  413a62:	dec    ebp
  413a63:	xchg   DWORD PTR [ebx-0x27ff033d],eax
  413a69:	push   0xffffffe9
  413a6b:	cli    
  413a6c:	call   0xf2cb:0x99fb9f25
  413a73:	jp     0x413a3c
  413a75:	push   es
  413a76:	or     ah,BYTE PTR [edx-0x29]
  413a79:	push   0x60
  413a7b:	in     al,0xa2
  413a7d:	cmp    DWORD PTR [esi],eax
  413a7f:	out    dx,eax
  413a80:	(bad)  
  413a81:	inc    ebx
  413a82:	xor    DWORD PTR [edx],0xf94d7f9e
  413a88:	mov    ebx,0xb3f945cb
  413a8d:	cmp    edi,DWORD PTR [edi]
  413a8f:	xor    DWORD PTR [edi+esi*4+0x420fe4df],esi
  413a96:	repz jmp 0x1d890621
  413a9c:	lods   eax,DWORD PTR ds:[esi]
  413a9d:	mov    cl,cl
  413a9f:	dec    eax
  413aa0:	xor    cl,dl
  413aa2:	cli    
  413aa3:	or     dh,BYTE PTR [ebx+ecx*2]
  413aa6:	les    esp,FWORD PTR [edx+0x32]
  413aa9:	shl    esp,0xe1
  413aac:	fs je  0x413ab2
  413aaf:	jg     0x413b06
  413ab1:	bswap  ecx
  413ab3:	dec    eax
  413ab4:	add    cl,BYTE PTR [edx-0x3c]
  413ab7:	loop   0x413af8
  413ab9:	leave  
  413aba:	aas    
  413abb:	cdq    
  413abc:	add    al,0x7a
  413abe:	or     eax,0x6fc38e9c
  413ac3:	std    
  413ac4:	test   DWORD PTR [edi-0x73],ecx
  413ac7:	in     al,0xcc
  413ac9:	jle    0x413abe
  413acb:	add    DWORD PTR [eax],0xe90a44d1
  413ad1:	das    
  413ad2:	dec    edx
  413ad3:	repz mov ah,0xa5
  413ad6:	stos   BYTE PTR es:[edi],al
  413ad7:	inc    edi
  413ad8:	jmp    0xda4f8f9d
  413add:	inc    ebp
  413ade:	inc    edx
  413adf:	sub    DWORD PTR [edx],0xeecac39e
  413ae5:	push   es
  413ae6:	outs   dx,DWORD PTR ds:[esi]
  413ae7:	lock (bad) 
  413ae9:	shr    BYTE PTR [eax-0x5f],0xe9
  413aed:	test   DWORD PTR [edx-0xd],eax
  413af0:	add    BYTE PTR [edx+ebp*2-0x15],cl
  413af4:	mov    ebx,0x83f587c7
  413af9:	int3   
  413afa:	push   0xfffffff3
  413afc:	call   0x36c517
  413b01:	xchg   edi,eax
  413b02:	push   es
  413b03:	jge    0x413b20
  413b05:	outs   dx,DWORD PTR ds:[esi]
  413b06:	sbb    cl,BYTE PTR [ecx]
  413b08:	(bad)  
  413b09:	jp     0x413b89
  413b0b:	jmp    0x413af5
  413b0d:	cdq    
  413b0e:	inc    ebp
  413b0f:	or     al,BYTE PTR [edi+ebx*1+0x2f818779]
  413b16:	inc    esp
  413b17:	or     cl,BYTE PTR [ebx+0x406b7c32]
  413b1d:	cmp    BYTE PTR [ebp-0xd],ch
  413b20:	imul   ebp,DWORD PTR [edi],0xdfb446fb
  413b26:	fwait
  413b27:	xor    eax,0x8e442e56
  413b2c:	sar    BYTE PTR [ebx],0x1a
  413b2f:	mov    bh,BYTE PTR [ebp+0x0]
  413b32:	mov    esp,DWORD PTR [ebx]
  413b34:	jle    0x413b42
  413b36:	outs   dx,DWORD PTR ds:[esi]
  413b37:	or     bh,BYTE PTR [esi+0x737e3b10]
  413b3d:	jge    0x413bba
  413b3f:	jnp    0x413bb9
  413b41:	pop    eax
  413b42:	pop    edi
  413b43:	or     bh,BYTE PTR [ebp+0x6c31fb00]
  413b49:	shr    DWORD PTR [edx],0xcc
  413b4c:	add    ah,BYTE PTR [esi-0x62]
  413b4f:	add    dh,BYTE PTR [eax+0x4786f908]
  413b55:	mov    esp,0xb66fc3b7
  413b5a:	scas   eax,DWORD PTR es:[edi]
  413b5b:	sbb    DWORD PTR [edx],ebx
  413b5d:	cvtps2pd xmm0,QWORD PTR [ebx-0x7f6ba7e]
  413b64:	inc    esi
  413b65:	mov    ah,0x5f
  413b67:	test   DWORD PTR [eax+0x31],0x43b43986
  413b6e:	fldcw  WORD PTR [edx-0x31]
  413b71:	jl     0x413b81
  413b73:	mov    ch,cl
  413b75:	mov    cl,bl
  413b77:	cmc    
  413b78:	int    0xe8
  413b7a:	test   ecx,esp
  413b7c:	dec    eax
  413b7d:	aas    
  413b7e:	pop    edi
  413b7f:	push   edx
  413b80:	sar    ch,0x69
  413b83:	in     al,dx
  413b84:	dec    edx
  413b85:	adc    al,0x86
  413b87:	push   ebp
  413b88:	clc    
  413b89:	cld    
  413b8a:	sar    DWORD PTR [ebp-0x32],cl
  413b8d:	adc    edi,DWORD PTR [edx+0x7b]
  413b90:	inc    edi
  413b91:	add    BYTE PTR [ebp+0x70],bl
  413b94:	push   ecx
  413b95:	add    BYTE PTR [eax],al
  413b97:	arpl   WORD PTR cs:[edi],di
  413b9a:	std    
  413b9b:	cmp    esp,esp
  413b9d:	fsubr  st,st(0)
  413b9f:	sar    al,1
  413ba1:	int3   
  413ba2:	std    
  413ba3:	sub    DWORD PTR [esi+0x618de8db],ebx
  413ba9:	into   
  413baa:	std    
  413bab:	sub    eax,0x1ef1727d
  413bb0:	faddp  st(6),st
  413bb2:	std    
  413bb3:	or     DWORD PTR [ecx+esi*8],edx
  413bb6:	cld    
  413bb7:	jnp    0x413bca
  413bb9:	int    0x73
  413bbb:	mov    es,WORD PTR [ecx]
  413bbd:	pop    ecx
  413bbe:	cmc    
  413bbf:	icebp  
  413bc0:	das    
  413bc1:	sub    eax,0xc8324d5e
  413bc6:	adc    BYTE PTR [esi+0x3f072b7],al
  413bcc:	pop    edi
  413bcd:	pop    edx
  413bce:	dec    edi
  413bcf:	cld    
  413bd0:	data16 jae 0x413b93
  413bd3:	push   edx
  413bd4:	mov    ah,0x1a
  413bd6:	rol    BYTE PTR [edx+0x2c03448e],cl
  413bdc:	imul   esp,DWORD PTR [ecx],0xffffffe9
  413bdf:	mov    ch,BYTE PTR [ebp+0x42877312]
  413be5:	and    edi,DWORD PTR [edx-0x70]
  413be8:	xor    al,0xa1
  413bea:	adc    DWORD PTR [ecx+0x36ed5d31],0xffffffc2
  413bf1:	fimul  DWORD PTR [edx]
  413bf3:	or     edx,DWORD PTR [edx+0x70]
  413bf6:	stc    
  413bf7:	jnp    0x413c63
  413bf9:	ffreep st(2)
  413bfb:	add    BYTE PTR [edx-0x7f85dcce],ch
  413c01:	ret    0x13ba
  413c04:	in     eax,dx
  413c05:	imul   ecx,DWORD PTR [eax-0x80],0x80dff749
  413c0c:	dec    esp
  413c0d:	inc    esp
  413c0e:	in     al,dx
  413c0f:	lea    eax,[esi+0x75]
  413c12:	lahf   
  413c13:	add    edx,edx
  413c15:	inc    esp
  413c16:	sbb    al,ah
  413c18:	inc    ebx
  413c19:	inc    ebx
  413c1a:	loope  0x413c1f
  413c1c:	push   cs
  413c1d:	inc    esi
  413c1e:	push   0x781d0c1
  413c23:	cld    
  413c24:	rol    DWORD PTR [esp+eiz*8-0x287e3ffd],1
  413c2b:	add    ebp,DWORD PTR [edx+eax*2+0x409c03c7]
  413c32:	mov    DWORD PTR [ebx],0xe804f70b
  413c38:	add    bl,BYTE PTR [eax+0x49]
  413c3b:	repz mov ecx,0xaa376842
  413c41:	inc    esi
  413c42:	push   0x42
  413c44:	xor    BYTE PTR [ecx],0x3a
  413c47:	jle    0x413c0f
  413c49:	dec    ebp
  413c4a:	jle    0x413c0f
  413c4c:	les    ecx,FWORD PTR [edx-0x1f]
  413c4f:	jmp    FWORD PTR cs:[esi+0x60]
  413c53:	xlat   BYTE PTR ds:[ebx]
  413c54:	jbe    0x413bda
  413c56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c57:	vshufpd xmm4,xmm7,XMMWORD PTR [ecx],0x4f
  413c5c:	cmp    edx,DWORD PTR [ecx]
  413c5e:	or     bl,BYTE PTR [edi+0x71c96200]
  413c64:	loope  0x413c92
  413c66:	add    esi,edi
  413c68:	jb     0x413bf7
  413c6a:	lds    ecx,FWORD PTR [ebp-0x27]
  413c6d:	jae    0xf84287f1
  413c73:	icebp  
  413c74:	fimul  WORD PTR [edi]
  413c76:	pop    ds
  413c77:	push   cs
  413c78:	jb     0x413cc6
  413c7a:	test   BYTE PTR [ebp-0x42],cl
  413c7d:	sub    BYTE PTR [edx+0xc],0xa0
  413c81:	inc    ebp
  413c82:	jg     0x413c0b
  413c84:	mov    cl,0xa4
  413c86:	lock dec edx
  413c88:	je     0x413c59
  413c8a:	jp     0x413ce6
  413c8c:	adc    eax,edx
  413c8e:	call   0x7fe17ba6
  413c93:	repz hlt 
  413c95:	mov    eax,ds:0xee94a50
  413c9a:	cmp    BYTE PTR [esi-0x45],0x6b
  413c9e:	inc    edx
  413c9f:	xchg   DWORD PTR [edx-0xb0ced0f],ebp
  413ca5:	cmc    
  413ca6:	adc    esp,DWORD PTR [eax+0x66]
  413ca9:	inc    ebp
  413caa:	push   ecx
  413cab:	sahf   
  413cac:	sti    
  413cad:	lds    eax,FWORD PTR [edx-0x73]
  413cb0:	sub    DWORD PTR [esi+0x46],ecx
  413cb3:	int3   
  413cb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cb5:	inc    esp
  413cb6:	jge    0x413c3e
  413cb8:	lods   al,BYTE PTR ds:[esi]
  413cb9:	cmp    eax,0x3db4f312
  413cbe:	call   0x7fe4dbd6
  413cc3:	repz aam 0x0
  413cc6:	mov    eax,ds:0x5e94a50
  413ccb:	stc    
  413ccc:	bnd jmp 0xad0d8370
  413cd2:	mov    DWORD PTR [ecx-0x79],0x457f7226
  413cd9:	add    bl,al
  413cdb:	cmp    DWORD PTR [edi+0x5f],edi
  413cde:	sbb    DWORD PTR [eax+eax*4],ebx
  413ce1:	inc    ebp
  413ce2:	mov    ecx,0x1056c98d
  413ce7:	int3   
  413ce8:	lock mov edi,DWORD PTR [esi+0xb33ffcb]
  413cef:	add    al,0xa
  413cf1:	push   edi
  413cf2:	push   ecx
  413cf3:	scas   al,BYTE PTR es:[edi]
  413cf4:	stos   BYTE PTR es:[edi],al
  413cf5:	lods   al,BYTE PTR ds:[esi]
  413cf6:	sahf   
  413cf7:	inc    eax
  413cf8:	cmp    ecx,ecx
  413cfa:	xchg   ch,dh
  413cfc:	dec    ecx
  413cfd:	lods   al,BYTE PTR ds:[esi]
  413cfe:	lods   al,BYTE PTR ds:[esi]
  413cff:	inc    esi
  413d00:	ja     0x413d08
  413d02:	out    0xfe,al
  413d04:	dec    ecx
  413d05:	lods   al,BYTE PTR ds:[esi]
  413d06:	pushf  
  413d07:	inc    esi
  413d08:	mov    ecx,eax
  413d0a:	jae    0x413cd1
  413d0c:	sti    
  413d0d:	sbb    BYTE PTR [ebp-0x54],bh
  413d10:	push   ebp
  413d11:	pop    esi
  413d12:	sbb    al,0x1b
  413d14:	sub    esp,0x8b5c138e
  413d1a:	inc    edx
  413d1b:	dec    esp
  413d1c:	cmp    ebx,ebx
  413d1e:	cld    
  413d1f:	mov    ?,WORD PTR [ecx]
  413d21:	repz xor DWORD PTR [eax-0x7f],ebx
  413d25:	inc    ebp
  413d26:	daa    
  413d27:	(bad)
  413d2a:	add    BYTE PTR [esi+0x1e],ah
  413d2d:	(bad)  
  413d2e:	je     0x413d7a
  413d30:	iret   
  413d31:	push   edx
  413d32:	cld    
  413d33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d34:	push   edi
  413d35:	xor    eax,DWORD PTR [ebx-0x31ceb0a1]
  413d3b:	cmp    eax,0xd4c681b2
  413d40:	jg     0x413d6b
  413d42:	push   edi
  413d43:	(bad)  
  413d46:	add    bh,ch
  413d48:	aas    
  413d49:	or     dl,BYTE PTR [eax+0x1c]
  413d4c:	cs cmc 
  413d4e:	call   edx
  413d50:	pop    ds
  413d51:	sbb    BYTE PTR [eax-0x7a],al
  413d54:	imul   eax,DWORD PTR [eax+edi*8+0x4d3b508d],0x39b3a70f
  413d5f:	mov    ch,0xf3
  413d61:	test   BYTE PTR [eax-0x39739ec5],0x7e
  413d68:	loopne 0x413dd2
  413d6a:	clc    
  413d6b:	cs clc 
  413d6d:	in     eax,0x3e
  413d6f:	xchg   BYTE PTR [ecx+ecx*8],dh
  413d72:	jbe    0x413d06
  413d74:	or     DWORD PTR [edi-0x38],0xc08b8c89
  413d7b:	cli    
  413d7c:	sahf   
  413d7d:	cmp    BYTE PTR [esi],0x85
  413d80:	or     ecx,0x3fe17243
  413d86:	add    al,0xfd
  413d88:	and    eax,0x794881ca
  413d8d:	test   BYTE PTR [edx+0x0],0x8a
  413d91:	push   edi
  413d92:	ror    BYTE PTR [ecx+0x42f065cb],1
  413d98:	dec    edx
  413d99:	push   esi
  413d9a:	push   es
  413d9b:	mov    al,0x87
  413d9d:	rcr    BYTE PTR [eax],1
  413d9f:	xor    al,BYTE PTR [esi-0x30]
  413da2:	add    eax,0x9f61c389
  413da7:	test   eax,0x32c8ec28
  413dac:	inc    esi
  413dad:	test   BYTE PTR [ecx+0x59],ch
  413db0:	dec    edi
  413db1:	daa    
  413db2:	push   es
  413db3:	add    bh,ah
  413db5:	lods   al,BYTE PTR ds:[esi]
  413db6:	arpl   WORD PTR [ecx-0x7a],ax
  413db9:	out    0xcd,al
  413dbb:	je     0x413d4f
  413dbd:	sub    al,0xb
  413dbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413dc0:	and    ch,BYTE PTR [eax-0x561a95f9]
  413dc6:	pop    es
  413dc7:	jmp    0xac900845
  413dcc:	inc    ebp
  413dcd:	inc    edx
  413dce:	loope  0x413d98
  413dd0:	test   DWORD PTR [esi-0x5079bab3],esp
  413dd6:	inc    DWORD PTR [edx-0x7a]
  413dd9:	lahf   
  413dda:	inc    ecx
  413ddb:	push   0x54424247
  413de0:	jmp    0xa0a5:0xf664e0fe
  413de7:	add    ecx,DWORD PTR [ecx]
  413de9:	retf   0x43de
  413dec:	xchg   BYTE PTR [edi+0x424767a1],bl
  413df2:	add    BYTE PTR [ebx-0x1efd8b00],0x64
  413df9:	mov    dh,0xa5
  413dfb:	and    BYTE PTR [ecx+eiz*1],al
  413dfe:	mov    ds:0xa58643d6,eax
  413e03:	shl    DWORD PTR [edi-0x39],0x42
  413e07:	sub    BYTE PTR [ebx-0x6b],0x2
  413e0b:	loope  0x413e71
  413e0d:	push   esi
  413e0e:	lahf   
  413e0f:	and    BYTE PTR [ecx+edi*8],al
  413e12:	idiv   ch
  413e14:	inc    ebx
  413e15:	xchg   BYTE PTR [ebp+0x42c766e1],ah
  413e1b:	inc    edx
  413e1c:	xchg   ebx,eax
  413e1d:	xchg   ebp,eax
  413e1e:	add    ah,cl
  413e20:	fs xchg esi,eax
  413e22:	lahf   
  413e23:	and    BYTE PTR [ecx+edx*1],al
  413e26:	iret   
  413e27:	(bad)  
  413e28:	inc    ebx
  413e29:	xchg   BYTE PTR [ebp+0x42c766c1],ah
  413e2f:	sbb    BYTE PTR [ebx+0x64e10275],0x56
  413e36:	lahf   
  413e37:	mov    al,ds:0xfe9ee903
  413e3c:	inc    ebx
  413e3d:	xchg   BYTE PTR [ebp+0x424766a1],ah
  413e43:	add    BYTE PTR [edi-0x16f5fd6b],0x62
  413e4a:	adc    ch,BYTE PTR [ebp-0x69267a56]
  413e50:	cld    
  413e51:	inc    ebp
  413e52:	inc    edx
  413e53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e54:	mov    DWORD PTR [eax+0x3],ebp
  413e57:	or     cl,BYTE PTR [eax+0x0]
  413e5a:	stc    
  413e5b:	push   ebp
  413e5c:	dec    edx
  413e5d:	jmp    0xaaee308c
  413e62:	test   ecx,ebx
  413e64:	push   ss
  413e65:	xlat   BYTE PTR ds:[ebx]
  413e66:	inc    ebp
  413e67:	inc    edx
  413e68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e69:	imul   esp,DWORD PTR [eax],0xa5480a03
  413e6f:	dec    edi
  413e70:	dec    edx
  413e71:	jmp    0x2aef109a
  413e76:	mov    bl,cl
  413e78:	sbb    bh,bh
  413e7a:	inc    ebp
  413e7b:	inc    edx
  413e7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e7d:	mov    edi,ebp
  413e7f:	add    ecx,DWORD PTR [edx]
  413e81:	mov    BYTE PTR [edx-0x1b16b5b0],bl
  413e87:	mov    dl,0xad
  413e89:	sub    al,BYTE PTR [edx-0x3a28f927]
  413e8f:	inc    edx
  413e90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e91:	test   eax,0x480a03ef
  413e96:	dec    si
  413e98:	dec    edx
  413e99:	jmp    0x2aeed182
  413e9e:	mov    bl,cl
  413ea0:	cmp    bl,ah
  413ea2:	lds    eax,FWORD PTR [edx-0x59]
  413ea5:	mov    DWORD PTR [edi-0x61b7f5fd],ebx
  413eab:	dec    esi
  413eac:	dec    edx
  413ead:	jmp    0xaaeeb156
  413eb2:	test   ecx,ebx
  413eb4:	ss hlt 
  413eb6:	lds    eax,FWORD PTR [edx-0x59]
  413eb9:	jmp    0x884b4261
  413ebe:	add    dh,bl
  413ec0:	dec    ebp
  413ec1:	dec    edx
  413ec2:	add    bh,ch
  413ec4:	jecxz  0x413edf
  413ec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ec7:	sbb    al,0x45
  413ec9:	xchg   ebx,eax
  413eca:	sub    al,0xca
  413ecc:	add    al,0xa
  413ece:	mov    ds:0x48e08f,eax
  413ed3:	dec    esi
  413ed4:	mov    ds:0xe3df401e,al
  413ed9:	cmp    DWORD PTR [esi-0x276cbae4],esp
  413edf:	mov    ebx,0xefa30a04
  413ee4:	fimul  WORD PTR [eax+0x0]
  413ee7:	ds jp  0x413f02
  413eea:	inc    eax
  413eeb:	lahf   
  413eec:	jecxz  0x413f47
  413eee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413eef:	in     al,dx
  413ef0:	inc    esp
  413ef1:	xchg   ebx,eax
  413ef2:	sub    BYTE PTR [edx+0x3fa30a04],bl
  413ef8:	loopne 0x413f42
  413efa:	add    dh,bh
  413efc:	in     al,dx
  413efd:	sbb    eax,0x79e56f40
  413f02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f03:	lods   al,BYTE PTR ds:[esi]
  413f04:	ds xchg ebx,eax
  413f06:	lods   al,BYTE PTR ds:[esi]
  413f07:	pop    ebx
  413f08:	add    al,0xa
  413f0a:	mov    ds:0x48dddf,eax
  413f0f:	push   cs
  413f10:	hlt    
  413f11:	sbb    eax,0x99e56f40
  413f16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f17:	pushf  
  413f18:	ds xchg ebx,eax
  413f1a:	cwde   
  413f1b:	dec    ebx
  413f1c:	add    al,0xa
  413f1e:	mov    ds:0x48ddcf,eax
  413f23:	add    dh,cl
  413f25:	scas   eax,DWORD PTR es:[edi]
  413f26:	push   ds
  413f27:	inc    eax
  413f28:	pop    ds
  413f29:	in     eax,0xb9
  413f2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f2c:	pop    esp
  413f2d:	ds xchg ebx,eax
  413f2f:	enter  0x43b,0xa
  413f33:	mov    ds:0x48dd6f,eax
  413f38:	(bad)  
  413f39:	mov    ds:0x6986401e,eax
  413f3e:	push   0x7ad28d0
  413f43:	lahf   
  413f44:	ds xchg esi,eax
  413f46:	inc    edi
  413f47:	add    BYTE PTR ds:0x86416d0a,ah
  413f4d:	retf   0x133f
  413f50:	inc    esi
  413f51:	imul   ebp,DWORD PTR [eax-0x10],0x9f07ad20
  413f58:	fisubr WORD PTR [ebp+0x47]
  413f5b:	add    BYTE PTR ds:0x86416c6a,ah
  413f61:	or     al,bl
  413f63:	adc    al,0x46
  413f65:	imul   ebp,DWORD PTR [eax+0x10],0x9f07ace9
  413f6c:	inc    esi
  413f6d:	xchg   esi,eax
  413f6e:	inc    edi
  413f6f:	add    ch,ah
  413f71:	mov    DWORD PTR [ecx+eax*2-0x7a],ebp
  413f75:	retf   0x14a2
  413f78:	inc    esi
  413f79:	imul   ebp,DWORD PTR [edx+0x30],0x9f0e2ce1
  413f80:	inc    esi
  413f81:	ins    DWORD PTR es:[edi],dx
  413f82:	inc    edi
  413f83:	add    BYTE PTR ds:0x416d29,ah
  413f89:	xchg   dl,cl
  413f8b:	outs   dx,BYTE PTR ds:[esi]
  413f8c:	adc    al,0xc6
  413f8e:	imul   ebp,DWORD PTR [edx+0x50],0x9f0e2c29
  413f95:	sahf   
  413f96:	jbe    0x413fdf
  413f98:	add    BYTE PTR ds:0x86416d49,ah
  413f9e:	or     dh,BYTE PTR [esi+0x6a69c614]
  413fa4:	jo     0x413f87
  413fa6:	sub    ecx,DWORD PTR [esi]
  413fa8:	lahf   
  413fa9:	push   esi
  413faa:	lea    eax,[edi+0x0]
  413fad:	in     eax,0xe8
  413faf:	ins    BYTE PTR es:[edi],dx
  413fb0:	inc    ecx
  413fb1:	xchg   BYTE PTR [edx],cl
  413fb3:	pop    edx
  413fb4:	adc    eax,esi
  413fb6:	inc    edx
  413fb7:	loope  0x414019
  413fb9:	neg    BYTE PTR [esi+0x65e903a0]
  413fbf:	cmc    
  413fc0:	inc    ebx
  413fc1:	xchg   BYTE PTR [ebx+0x42476581],ah
  413fc7:	or     al,0x9a
  413fca:	add    ah,cl
  413fcc:	pusha  
  413fcd:	ss lahf 
  413fcf:	mov    al,ds:0xddb60103
  413fd4:	inc    ebx
  413fd5:	xchg   BYTE PTR [ebx+0x42476521],ah
  413fdb:	inc    edx
  413fdc:	add    al,0x75
  413fde:	add    ah,cl
  413fe0:	pusha  
  413fe1:	(bad)  
  413fe2:	sahf   
  413fe3:	mov    al,ds:0xd5fe1903
  413fe8:	inc    ebx
  413fe9:	xchg   BYTE PTR [ebx+0x47006501],ah
  413fef:	inc    edx
  413ff0:	inc    edx
  413ff1:	mov    ah,0x7a
  413ff3:	add    ah,cl
  413ff5:	pusha  
  413ff6:	xchg   esi,eax
  413ff7:	sahf   
  413ff8:	and    BYTE PTR [ecx+esi*8],al
  413ffb:	jne    0x413ffa
  413ffd:	inc    ebx
  413ffe:	xchg   BYTE PTR [ebx+0x42c76be1],ah
  414004:	sbb    BYTE PTR [edi+0x29e10296],0xae
  41400b:	jmp    0x1380:0x42c76780
  414012:	cs add ah,cl
  414015:	stos   DWORD PTR es:[edi],eax
  414016:	xor    DWORD PTR [edi-0x54],0xffffffbc
  41401a:	inc    edi
  41401b:	adc    bh,BYTE PTR [ebx]
  41401d:	mov    DWORD PTR [ebp-0x79bc104a],edx
  414023:	jmp    0xbd14:0x42c6363c
  41402a:	pop    eax
  41402b:	jmp    0x414045
  41402d:	mov    BYTE PTR ss:[edx+0xa],0x1e
  414032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414033:	and    ah,BYTE PTR [edx-0x23887dd6]
  414039:	rcr    DWORD PTR [ecx-0x14],1
  41403c:	dec    ecx
  41403d:	jmp    0x817be3f4
  414042:	inc    esi
  414043:	inc    edx
  414044:	repz aaa 
  414046:	lods   eax,DWORD PTR ds:[esi]
  414047:	idiv   BYTE PTR [ebx-0x57]
  41404a:	test   DWORD PTR [edi],ecx
  41404c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41404d:	test   eax,0x360a035d
  414052:	add    BYTE PTR [ebx+0x45b78dea],bh
  414058:	inc    edx
  414059:	pop    ebx
  41405a:	dec    edx
  41405b:	xor    eax,0xae947aa
  414060:	lea    esp,[eax-0x14]
  414063:	ins    DWORD PTR es:[edi],dx
  414064:	and    ah,BYTE PTR [edx+0x6aa385aa]
  41406a:	push   ecx
  41406b:	inc    esi
  41406c:	inc    edx
  41406d:	loop   0x4140a7
  41406f:	jmp    0xbda533eb
  414074:	mov    esi,0x76a075cf
  414079:	cmp    eax,0xa032251
  41407e:	jb     0x414045
  414080:	ja     0x4140bf
  414082:	xor    edx,esi
  414084:	add    ecx,DWORD PTR [edx]
  414086:	into   
  414087:	ja     0x414086
  414089:	mov    eax,ds:0x3d778a2a
  41408e:	add    edx,ebx
  414090:	add    ecx,DWORD PTR [edx]
  414092:	mov    dh,0x57
  414094:	sbb    eax,0x6a822aa2
  414099:	popa   
  41409a:	mov    al,BYTE PTR es:[edx+0x54]
  41409e:	jae    0x4140e1
  4140a0:	sbb    eax,edi
  4140a2:	cmp    al,0x11
  4140a4:	pop    cx
  4140a6:	cmp    ch,dl
  4140a8:	call   0x3bfb40ad
  4140ad:	repnz pop eax
  4140af:	pop    ss
  4140b0:	pop    ebx
  4140b1:	rol    BYTE PTR [eax],0x2f
  4140b4:	(bad)  
  4140b5:	int    0x50
  4140b7:	add    BYTE PTR [eax-0x7b17fdcd],ch
  4140bd:	jmp    0x4140b3
  4140bf:	jmp    DWORD PTR [edx+0x1707777e]
  4140c5:	mov    ecx,0xa3ef00f5
  4140ca:	sub    DWORD PTR [edx-0xb],ebp
  4140cd:	leave  
  4140ce:	outs   dx,DWORD PTR ds:[esi]
  4140cf:	clc    
  4140d0:	daa    
  4140d1:	test   eax,0x40efc9f6
  4140d6:	add    edi,0x877b7ff
  4140dc:	ja     0x414092
  4140de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140df:	jmp    FWORD PTR [eax-0x3d]
  4140e2:	retf   0xb075
  4140e5:	clc    
  4140e6:	repz jmp FWORD PTR [edi-0x13fd1ec0]
  4140ed:	adc    BYTE PTR [ebp-0x37],0x5d
  4140f1:	inc    edx
  4140f2:	or     dl,BYTE PTR [ebp+0x24]
  4140f5:	stos   BYTE PTR es:[edi],al
  4140f6:	pusha  
  4140f7:	cmp    al,BYTE PTR ds:0x92ff5941
  4140fd:	fs sbb eax,0x57c39f40
  414103:	or     al,0xea
  414105:	add    al,0xe
  414107:	and    DWORD PTR [ebx],0x3c
  41410a:	xchg   ecx,ecx
  41410c:	mov    bl,0x4c
  41410e:	xchg   edx,edx
  414110:	mov    dl,0x41
  414112:	mov    al,0x44
  414114:	mov    ds:0xa28d09fe,al
  414119:	dec    edx
  41411a:	pop    edx
  41411b:	call   0xf5270920
  414120:	jmp    edx
  414122:	mov    cl,0x7e
  414124:	adc    eax,DWORD PTR [esi-0x4cd60f17]
  41412a:	xchg   ebx,eax
  41412b:	xchg   DWORD PTR [esi-0x79],edi
  41412e:	imul   edi,DWORD PTR [edx],0x29a97508
  414134:	xchg   ebp,eax
  414136:	mov    bl,0xa4
  414138:	cmp    cl,BYTE PTR [ebx]
  41413a:	sub    eax,edi
  41413c:	sbb    BYTE PTR [eax],0x96
  41413f:	loope  0x4140ca
  414141:	js     0x414120
  414143:	lds    esi,FWORD PTR [esi+ebp*4-0x17]
  414147:	mov    ch,0x30
  414149:	jae    0x4141b6
  41414b:	test   DWORD PTR [esi-0x79],ecx
  41414e:	jmp    0x5eb3ba08
  414153:	xchg   edi,esi
  414155:	ds mov dh,0x6
  414158:	mov    eax,ecx
  41415a:	add    DWORD PTR [edx-0x5b9679f8],ebx
  414160:	adc    dh,BYTE PTR [ecx]
  414162:	lock scas al,BYTE PTR es:[edi]
  414164:	mov    eax,ebx
  414166:	inc    ecx
  414167:	out    0x6,eax
  414169:	xchg   BYTE PTR [ecx+0x50],ch
  41416c:	jmp    0x6707f9fc
  414171:	push   DWORD PTR [ecx-0x7c]
  414174:	inc    ebx
  414175:	mov    fs,esi
  414177:	(bad)  
  414178:	je     0x414103
  41417a:	jmp    0x6f5c6b6d
  41417f:	xchg   DWORD PTR [eax+0x0],edi
  414182:	xchg   DWORD PTR [ecx+0x24],ebp
  414185:	add    al,0xb5
  414187:	test   eax,0x81d606a5
  41418c:	sbb    ebp,edi
  41418e:	jno    0x41420c
  414190:	sub    BYTE PTR [edi-0x3da4be3b],al
  414196:	mov    gs,WORD PTR [ecx+0x44]
  414199:	mov    DWORD PTR [edx-0x18],ebp
  41419c:	test   eax,0x9d4207f8
  4141a1:	add    BYTE PTR [edx+0xf54e142],0x15
  4141a8:	jmp    0x5c84c939
  4141ad:	dec    esp
  4141ae:	ret    0x600c
  4141b1:	retf   0xb82b
  4141b4:	je     0x41416f
  4141b6:	xchg   BYTE PTR [edx+0x14],al
  4141b9:	mov    edx,DWORD PTR [edx-0x657522e2]
  4141bf:	push   ds
  4141c0:	icebp  
  4141c1:	and    DWORD PTR [edi-0x78],ecx
  4141c4:	fnstsw WORD PTR [esi]
  4141c6:	dec    esp
  4141c7:	fcom   QWORD PTR [edi]
  4141c9:	into   
  4141ca:	jb     0x4141ff
  4141cc:	mov    DWORD PTR ds:0x4879dc59,0x71e45aa2
  4141d6:	dec    esi
  4141d7:	add    eax,0x6468cc3
  4141dc:	retf   
  4141dd:	ret    0x49e6
  4141e0:	or     DWORD PTR [esi+edi*4],0xffffffc4
  4141e4:	xchg   ebp,eax
  4141e5:	fild   WORD PTR [eax]
  4141e7:	cdq    
  4141e8:	fsubr  QWORD PTR [ecx+0x48]
  4141eb:	bound  ebx,QWORD PTR [eax+0x2c]
  4141ee:	inc    eax
  4141ef:	push   0x56
  4141f1:	mov    WORD PTR [ebx],es
  4141f3:	xchg   BYTE PTR [ecx+0x19],al
  4141f6:	sub    BYTE PTR [esi],dh
  4141f8:	inc    ecx
  4141f9:	loope  0x414185
  4141fb:	inc    edx
  4141fc:	push   ds
  4141fd:	(bad)  
  4141ff:	retf   
  414200:	inc    edx
  414201:	gs inc esp
  414203:	test   BYTE PTR [edx-0x1f],al
  414206:	push   ebx
  414207:	outs   dx,BYTE PTR ds:[esi]
  414208:	dec    esp
  414209:	repnz add eax,DWORD PTR [esi-0x41791f43]
  414210:	dec    edx
  414211:	inc    ebx
  414212:	(bad)  
  414213:	(bad)  
  414214:	cld    
  414215:	adc    DWORD PTR [edx+edx*1-0x7a17f5ed],ebp
  41421c:	leave  
  41421d:	dec    esi
  41421e:	add    eax,0xf6cc2b7a
  414223:	leave  
  414224:	and    al,0x8
  414226:	jmp    0x922354b0
  41422b:	xchg   ebp,eax
  41422c:	inc    edx
  41422d:	or     cl,BYTE PTR [esi-0x6ee5d99f]
  414233:	mov    al,ds:0x12e90a52
  414238:	inc    esp
  414239:	cld    
  41423a:	jmp    0x6a4e38c3
  41423f:	inc    ebp
  414240:	inc    edi
  414241:	fucomip st,st(3)
  414243:	adc    dh,BYTE PTR [edx+0x101b285]
  414249:	pop    edx
  41424a:	push   esi
  41424b:	add    BYTE PTR [ecx-0x7566edda],ch
  414251:	fmul   QWORD PTR ds:0x831a1da7
  414257:	call   0xe70c08e1
  41425c:	pop    ecx
  41425d:	pop    esp
  41425e:	or     ecx,ebp
  414260:	test   DWORD PTR [ebx+0x256f607],edi
  414266:	inc    esi
  414267:	int3   
  414268:	jmp    FWORD PTR [edi+0xa]
  41426b:	jmp    0x95834cd9
  414270:	fwait
  414271:	outs   dx,DWORD PTR ds:[esi]
  414272:	jle    0x414241
  414274:	jns    0x414231
  414276:	push   esi
  414277:	lds    edx,FWORD PTR [ecx-0x7b67b2a6]
  41427d:	inc    edx
  41427e:	loope  0x4142a4
  414280:	test   BYTE PTR [edx+0xa],al
  414283:	jb     0x4142db
  414285:	sbb    dl,BYTE PTR es:[ebx-0x76]
  414289:	fmul   QWORD PTR [eax]
  41428b:	fs (bad) 
  41428d:	sbb    edi,DWORD PTR es:[ecx]
  414290:	std    
  414291:	outs   dx,DWORD PTR ds:[esi]
  414292:	loop   0x414294
  414294:	sub    cl,BYTE PTR [eax]
  414296:	repz (bad) 
  414298:	jmp    0x414220
  41429a:	jle    0x4142b8
  41429c:	out    dx,eax
  41429d:	sub    ch,BYTE PTR [esi]
  41429f:	punpckhdq mm6,QWORD PTR [edx]
  4142a2:	add    dl,BYTE PTR [esi-0x9]
  4142a5:	add    eax,0x9d20ff83
  4142aa:	(bad)  
  4142ab:	jg     0x414240
  4142ad:	bound  eax,QWORD PTR [esi]
  4142af:	add    al,0x0
  4142b1:	call   0xf5cc:0xb2e85d70
  4142b8:	push   edi
  4142ba:	out    0x57,eax
  4142bc:	add    DWORD PTR [edi],ebp
  4142be:	les    eax,FWORD PTR [esi+0x24]
  4142c1:	das    
  4142c2:	mov    eax,0x451e85eb
  4142c7:	or     ch,BYTE PTR [edx-0x12]
  4142ca:	mov    bh,0x17
  4142cc:	cld    
  4142cd:	inc    DWORD PTR [edx+ecx*1]
  4142d0:	push   eax
  4142d1:	inc    eax
  4142d2:	push   ebx
  4142d3:	or     dl,BYTE PTR [ecx]
  4142d5:	pop    ds
  4142d6:	inc    ebp
  4142d7:	pusha  
  4142d8:	add    BYTE PTR [edx-0x3e],dh
  4142db:	cs xchg esp,eax
  4142dd:	out    dx,eax
  4142de:	inc    esp
  4142df:	or     dl,BYTE PTR [eax-0x39]
  4142e2:	mov    ecx,0x9cb6374b
  4142e7:	sub    eax,0x7fb9a07e
  4142ec:	test   bl,cl
  4142ee:	aam    0xa
  4142f0:	add    BYTE PTR [edi-0x64371dec],bl
  4142f6:	inc    ebp
  4142f7:	or     al,BYTE PTR [edi+ebp*2-0x51b271b7]
  4142fe:	inc    esp
  4142ff:	or     ch,BYTE PTR [edx-0x62]
  414302:	mov    ecx,0x44a32496
  414307:	or     al,BYTE PTR [eax]
  414309:	push   edi
  41430a:	jae    0x4142be
  41430c:	add    BYTE PTR [esi-0x7e3f8ca7],al
  414312:	in     eax,0xd4
  414314:	inc    BYTE PTR [eax]
  414316:	imul   ebx,DWORD PTR [edx-0x44],0x478d6e13
  41431d:	add    BYTE PTR [ebx],al
  41431f:	call   0x310b:0x45ca930c
  414326:	sub    eax,0x91245b62
  41432b:	pusha  
  41432c:	mov    dl,BYTE PTR [edi+0x6a075986]
  414332:	mov    edx,0x5a24230e
  414337:	and    DWORD PTR [esi+0x75a49d6],esp
  41433d:	mov    eax,DWORD PTR [edx]
  41433f:	jle    0x4143c0
  414341:	add    al,BYTE PTR [esi-0x7d95a8a7]
  414347:	adc    eax,edx
  414349:	xchg   DWORD PTR gs:[ecx+0x73],ebx
  41434d:	shl    BYTE PTR [edx-0x6d],0x80
  414351:	(bad)  
  414352:	push   esi
  414353:	push   cs
  414354:	jae    0x41437a
  414356:	cli    
  414357:	pop    ebx
  414358:	pop    es
  414359:	add    BYTE PTR [esi],dh
  41435b:	leave  
  41435c:	lahf   
  41435d:	jmp    0xb5c6:0x83075a6e
  414364:	sub    ch,BYTE PTR [edx+0x42]
  414367:	xchg   DWORD PTR [ebp-0x75],eax
  41436a:	dec    edx
  41436b:	test   DWORD PTR [ebx+0x51],ecx
  41436e:	push   esi
  41436f:	pop    eax
  414370:	sbb    dh,BYTE PTR [eax+ebx*4]
  414373:	cdq    
  414374:	pop    es
  414375:	add    edx,0x848275
  41437b:	push   0x9
  41437d:	pop    es
  41437e:	add    BYTE PTR [esi+0x362432e2],al
  414384:	push   cs
  414385:	xor    esp,DWORD PTR [esi+ebp*2]
  414388:	inc    edx
  414389:	xor    DWORD PTR [edi+0x542526ca],eax
  41438f:	xlat   BYTE PTR ds:[ebx]
  414390:	adc    ebp,DWORD PTR [esi-0x80]
  414393:	stos   BYTE PTR es:[edi],al
  414394:	retf   0x3df
  414397:	xchg   BYTE PTR [edx],dl
  414399:	jp     0x4143cb
  41439b:	stos   BYTE PTR es:[edi],al
  41439c:	push   cs
  41439d:	fnstenv [edx]
  41439f:	jmp    0x46c024e6
  4143a4:	test   BYTE PTR [edx],0x2c
  4143a7:	(bad)  
  4143a8:	push   edx
  4143a9:	loope  0x4143ae
  4143ab:	inc    ebx
  4143ac:	test   ah,0x17
  4143af:	cmp    edx,DWORD PTR [ebp-0xf]
  4143b2:	adc    dh,al
  4143b4:	inc    edx
  4143b5:	test   BYTE PTR [eax],dh
  4143b7:	bound  ecx,QWORD PTR [esi+0x78]
  4143ba:	out    dx,eax
  4143bb:	add    DWORD PTR [ecx+eiz*1+0x4],edx
  4143bf:	sbb    ebx,DWORD PTR [eax+0x4a6a307c]
  4143c5:	fs into 
  4143c7:	inc    eax
  4143c8:	push   es
  4143c9:	add    eax,0xb0140105
  4143ce:	push   eax
  4143cf:	outs   dx,BYTE PTR ds:[esi]
  4143d0:	inc    ebx
  4143d1:	icebp  
  4143d2:	add    eax,DWORD PTR [esi-0x683c0191]
  4143d8:	add    ah,cl
  4143da:	and    DWORD PTR [edx+0x26],0xffffffe4
  4143de:	add    al,BYTE PTR [eax]
  4143e0:	push   ebp
  4143e1:	(bad)  
  4143e3:	jo     0x41438f
  4143e5:	or     bl,bh
  4143e7:	add    eax,DWORD PTR [esi-0x421f9a43]
  4143ed:	inc    ecx
  4143ee:	loope  0x4143f3
  4143f0:	mov    ebx,0x86b7c5b5
  4143f5:	inc    edx
  4143f6:	loope  0x414382
  4143f8:	inc    edx
  4143f9:	es mov cl,0x86
  4143fc:	dec    edx
  4143fd:	es mov cl,0x53
  414400:	fwait
  414401:	cmc    
  414402:	or     ebp,ecx
  414404:	jns    0x41438b
  414406:	dec    esi
  414407:	lds    edx,FWORD PTR [ecx-0x75d71cae]
  41440d:	xchg   DWORD PTR [esi+0x5],ecx
  414410:	ret    0x4bf5
  414413:	sub    ecx,DWORD PTR [edx-0x39fab179]
  414419:	or     esp,esp
  41441b:	sub    BYTE PTR [edx-0x35fab179],cl
  414421:	in     eax,dx
  414422:	jecxz  0x41444c
  414424:	mov    al,BYTE PTR [edi+0x7abe054e]
  41442a:	in     al,0x28
  41442c:	mov    al,BYTE PTR [edi+0x69d5c54e]
  414432:	in     al,0x28
  414434:	mov    al,BYTE PTR [edi+0x56b9c54e]
  41443a:	jecxz  0x414464
  41443c:	mov    bl,BYTE PTR [edx-0x76]
  41443f:	mov    ss,edx
  414441:	outs   dx,DWORD PTR ds:[esi]
  414442:	pusha  
  414443:	call   0x2f084c48
  414448:	ins    DWORD PTR es:[edi],dx
  414449:	test   DWORD PTR [edx+0xa],eax
  41444c:	push   ecx
  41444d:	mov    ah,0xae
  41444f:	or     ch,cl
  414451:	push   cs
  414452:	or     al,BYTE PTR [edx]
  414454:	bound  esp,QWORD PTR [ecx+0x7b411a26]
  41445a:	std    
  41445b:	or     cl,ch
  41445d:	push   cs
  41445e:	imul   DWORD PTR ds:0x593a2dd5
  414464:	call   0xbc2357ee
  414469:	mov    ds:0x5bc6f36f,al
  41446e:	xor    ecx,edx
  414470:	ret    0x620e
  414473:	push   ebp
  414474:	sub    esi,DWORD PTR [ecx-0x1e9da193]
  41447a:	in     eax,dx
  41447b:	in     eax,0x0
  41447d:	mov    DWORD PTR [ebx+0xa],0x7efffc00
  414484:	jne    0x4144dd
  414486:	cdq    
  414487:	shr    DWORD PTR [eax-0x62],1
  41448a:	inc    ecx
  41448b:	sbb    DWORD PTR [ebp+0x77],0xab7b891b
  414492:	inc    esi
  414493:	int3   
  414494:	inc    ebp
  414495:	pop    eax
  414496:	inc    esi
  414497:	add    eax,0xa47c984
  41449c:	add    dl,bl
  41449e:	add    eax,0xcea28912
  4144a3:	pop    ebp
  4144a4:	call   DWORD PTR [edx+0x8b6cce]
  4144aa:	pushf  
  4144ab:	sub    al,0xe2
  4144ad:	add    edi,DWORD PTR [ecx+0x47]
  4144b0:	or     cl,BYTE PTR [ebx-0x7911119]
  4144b6:	pushf  
  4144b7:	mov    cl,0xf5
  4144b9:	jne    0x4144fe
  4144bb:	stos   DWORD PTR es:[edi],eax
  4144bc:	or     DWORD PTR [ecx],eax
  4144be:	sbb    ch,al
  4144c0:	ins    DWORD PTR es:[edi],dx
  4144c1:	add    DWORD PTR [edi],ebp
  4144c3:	inc    ecx
  4144c4:	bound  ecx,QWORD PTR [eax-0xf5bed4]
  4144ca:	rcr    BYTE PTR [eax+edi*4+0x17afef43],cl
  4144d1:	adc    ah,bh
  4144d3:	add    BYTE PTR [edx],cl
  4144d5:	cmp    eax,0xa45dd
  4144da:	inc    esi
  4144db:	pop    es
  4144dc:	repz (bad) 
  4144de:	out    dx,eax
  4144df:	pop    es
  4144e0:	loop   0x41452f
  4144e2:	jmp    0x47984f27
  4144e7:	cmp    eax,DWORD PTR [eax+eax*1]
  4144ea:	ffreep st(1)
  4144ec:	mov    bh,0xc8
  4144ee:	push   0xffffffb1
  4144f0:	cmc    
  4144f1:	call   0x4b2f49
  4144f6:	xchg   dh,ah
  4144f8:	or     ah,0xab
  4144fb:	cmp    esi,DWORD PTR [edi-0x3d11ecb0]
  414501:	or     esi,0xd5f98f6b
  414507:	jae    0x4144c1
  414509:	mov    BYTE PTR [ebx+0x5d],al
  41450c:	mov    eax,eax
  41450e:	add    dl,bh
  414510:	dec    edi
  414511:	jae    0x414514
  414513:	jns    0x41452c
  414515:	fimul  DWORD PTR [ecx-0x1148205]
  41451b:	js     0x4144f0
  41451d:	(bad)  
  41451e:	cmc    
  41451f:	ds popa 
  414521:	(bad)  
  414522:	mov    ecx,ebp
  414524:	gs in  al,dx
  414526:	mov    esi,0xff7e4cb6
  41452b:	popa   
  41452c:	or     eax,0xf741ff73
  414531:	xor    esp,ebx
  414533:	push   cs
  414534:	daa    
  414535:	mov    eax,0xb808ece8
  41453a:	std    
  41453b:	out    dx,eax
  41453c:	jmp    0x41454b
  41453e:	add    BYTE PTR [esi+0x1bc881f6],al
  414544:	in     eax,dx
  414545:	mov    bh,0xc6
  414547:	xchg   BYTE PTR [ecx+0x47],bl
  41454a:	inc    edi
  41454b:	xchg   ebx,eax
  41454c:	repnz fimul WORD PTR [edx+0x0]
  414550:	jne    0x4144dd
  414552:	rol    BYTE PTR [esi-0x7995f8a7],0x7f
  414559:	pop    es
  41455a:	mov    eax,DWORD PTR [ebx+0x11]
  41455d:	push   edi
  41455e:	xor    esi,eax
  414560:	adc    DWORD PTR [eax],ebx
  414562:	dec    ebp
  414563:	xchg   DWORD PTR [ecx-0x1c],ebx
  414566:	inc    edx
  414567:	into   
  414568:	sub    BYTE PTR fs:[eax-0x76f8a67a],0x43
  414570:	inc    edx
  414571:	sub    DWORD PTR [ebx],ebx
  414573:	add    BYTE PTR [esi-0xb],dh
  414576:	loopne 0x41457b
  414578:	sbb    al,0x45
  41457a:	outs   dx,BYTE PTR ds:[esi]
  41457b:	dec    eax
  41457c:	mov    dh,0x12
  41457e:	or     DWORD PTR [ebx],ecx
  414580:	push   edx
  414581:	inc    ecx
  414582:	loope  0x41450b
  414584:	(bad)  
  414585:	imul   cl
  414587:	sub    DWORD PTR [edi],eax
  414589:	out    dx,al
  41458a:	lock pop es
  41458c:	adc    eax,0xc57ad450
  414591:	jo     0x4145c7
  414593:	jg     0x414572
  414595:	pop    esi
  414596:	fldcw  WORD PTR [edi-0x1]
  414599:	inc    eax
  41459a:	loope  0x414618
  41459c:	int    0x3a
  41459e:	enter  0x9406,0x82
  4145a2:	gs (bad) 
  4145a4:	shl    al,cl
  4145a6:	jecxz  0x414621
  4145a8:	lds    esi,FWORD PTR [esi+0x29]
  4145ab:	cmp    al,0xd2
  4145ad:	cmp    BYTE PTR [ecx],ch
  4145af:	cmp    al,0xb5
  4145b1:	push   ss
  4145b2:	mov    ds:0x98413b47,eax
  4145b7:	inc    edx
  4145b8:	test   al,0xbf
  4145ba:	push   ds
  4145bb:	mov    dh,0x82
  4145bd:	cmc    
  4145be:	sub    edi,DWORD PTR [edi-0x3b]
  4145c1:	stos   BYTE PTR es:[edi],al
  4145c2:	cdq    
  4145c3:	popf   
  4145c4:	mov    ds:0x821de141,eax
  4145c9:	fsubr  st,st(0)
  4145cb:	mov    al,0x55
  4145cd:	bound  ecx,QWORD PTR [eax+0x45]
  4145d0:	xchg   BYTE PTR [ebx-0xa],ch
  4145d3:	pop    es
  4145d4:	xchg   edi,eax
  4145d5:	add    ah,cl
  4145d7:	jl     0x4145d9
  4145d9:	test   ah,0x53
  4145dc:	cmp    BYTE PTR [ecx+0x6c9faeb7],ah
  4145e2:	inc    edx
  4145e3:	xchg   ebx,eax
  4145e4:	jp     0x41465e
  4145e6:	mov    bh,0xe1
  4145e8:	sbb    esp,DWORD PTR [ecx-0x7a57f5e3]
  4145ee:	fimul  DWORD PTR [ecx]
  4145f0:	jmp    0xa4c68880
  4145f5:	sub    eax,0xde54cc3
  4145fa:	xor    BYTE PTR [edx-0x18],ah
  4145fd:	test   esi,eax
  4145ff:	retf   0x8f94
  414602:	adc    al,0xe2
  414604:	daa    
  414605:	jns    0x414674
  414607:	repz (bad) 
  414609:	pop    eax
  41460a:	pop    esi
  41460b:	loop   0x41462c
  41460d:	imul   ebp,DWORD PTR [ebp-0xd],0xa67b169
  414614:	test   BYTE PTR [ecx],0x3
  414617:	repz fidiv WORD PTR [esi]
  41461a:	mov    esp,0x120dd17d
  41461f:	inc    ebx
  414620:	call   0xc6b708aa
  414625:	test   ebp,esi
  414627:	add    BYTE PTR [edi+0x6c04698a],dh
  41462d:	fwait
  41462e:	push   0xbdd6aef3
  414633:	jge    0x414696
  414635:	sbb    eax,0x85e862af
  41463a:	addr16 ja 0x414676
  41463d:	add    BYTE PTR [edx],cl
  41463f:	xchg   DWORD PTR [eax+ebp*8+0x67e21385],edx
  414646:	js     0x4146af
  414648:	repz jb 0x41468a
  41464b:	pop    ebx
  41464c:	cmp    eax,0x5442850e
  414651:	mov    edx,0x2bc10bc5
  414656:	add    DWORD PTR [edx+0x5d],0xe6c41172
  41465d:	fst    QWORD PTR [edx+0x10]
  414660:	pop    ebx
  414661:	ret    
  414662:	loop   0x414620
  414664:	jge    0x414666
  414666:	xchg   ebx,eax
  414667:	std    
  414668:	loope  0x41461f
  41466a:	stos   DWORD PTR es:[edi],eax
  41466b:	inc    ebp
  41466c:	or     cl,BYTE PTR [ebx+0x658a6e0a]
  414672:	jae    0x4146b9
  414674:	cld    
  414675:	push   es
  414676:	scas   al,BYTE PTR es:[edi]
  414677:	inc    edi
  414678:	or     BYTE PTR [ebx+0x1b],bl
  41467b:	push   esi
  41467c:	pusha  
  41467d:	adc    BYTE PTR [edx],ah
  41467f:	sti    
  414680:	or     eax,0xf6184250
  414685:	mov    ebp,DWORD PTR [ebp+ecx*8-0x56]
  414689:	mov    edx,DWORD PTR [eax-0x48818067]
  41468f:	or     dh,ch
  414691:	adc    eax,0x4a4ff7
  414696:	mov    edi,0x5b7d7f11
  41469b:	in     eax,dx
  41469c:	enter  0xe5e8,0xed
  4146a0:	hlt    
  4146a1:	inc    DWORD PTR [eax]
  4146a3:	pushf  
  4146a4:	ret    
  4146a5:	dec    esp
  4146a6:	dec    edx
  4146a7:	jg     0x41466c
  4146a9:	outs   dx,DWORD PTR ds:[esi]
  4146aa:	clc    
  4146ab:	aam    0x85
  4146ad:	loop   0x41472a
  4146af:	in     al,0x99
  4146b1:	cmc    
  4146b2:	(bad)  
  4146b3:	jp     0x41464b
  4146b5:	jg     0x4146fc
  4146b7:	repz cwde 
  4146b9:	ja     0x4146af
  4146bb:	mov    ds:0x8aff8633,al
  4146c0:	mov    dl,0x5a
  4146c2:	push   0x4f
  4146c4:	cld    
  4146c5:	loope  0x4146c3
  4146c7:	pop    edi
  4146c8:	cdq    
  4146c9:	cmc    
  4146ca:	sub    ebx,0x4d
  4146cd:	mov    eax,edi
  4146cf:	xor    BYTE PTR [eax-0x78],ch
  4146d2:	mov    dh,0xef
  4146d4:	inc    esp
  4146d5:	or     cl,BYTE PTR [ebx+0x1600ea8]
  4146db:	xlat   BYTE PTR ds:[ebx]
  4146dc:	cld    
  4146dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146de:	inc    ebx
  4146df:	xchg   BYTE PTR [ebx-0x5c],bl
  4146e2:	adc    edi,DWORD PTR [esi]
  4146e4:	push   0x47
  4146e6:	add    BYTE PTR [edi],cl
  4146e8:	xchg   esi,eax
  4146e9:	out    dx,eax
  4146ea:	add    dh,0x57
  4146ed:	mov    ebx,DWORD PTR [ecx-0x2f8a47a]
  4146f3:	fwait
  4146f4:	xchg   ebx,eax
  4146f5:	push   ds
  4146f6:	inc    eax
  4146f7:	xchg   BYTE PTR [esi+0x7c],bl
  4146fa:	add    BYTE PTR [esi-0x56f4cda5],al
  414700:	(bad)
  414703:	jnp    0x414700
  414705:	pop    ss
  414706:	inc    eax
  414707:	add    BYTE PTR [esi-0x79f7df24],al
  41470d:	fdivr  QWORD PTR [eax]
  41470f:	or     BYTE PTR [esi-0x2195e019],al
  414715:	ret    
  414716:	out    dx,eax
  414717:	cld    
  414718:	mov    bl,0x79
  41471a:	push   eax
  41471b:	inc    ecx
  41471c:	xchg   BYTE PTR [eax+0x19950412],cl
  414722:	push   cs
  414723:	mov    DWORD PTR [esi-0x21],ebx
  414726:	mov    ds:0x19f4bb74,eax
  41472b:	xor    BYTE PTR [eax+0x19],bh
  41472e:	push   cs
  41472f:	push   0x76
  414731:	fimul  WORD PTR [esp+eax*1-0x2a]
  414735:	push   es
  414736:	dec    esp
  414737:	add    al,0xd6
  414739:	mov    al,ds:0x538889d8
  41473e:	loopne 0x4146c6
  414740:	sbb    esp,0x211314cc
  414746:	adc    dl,BYTE PTR [esi-0x4a]
  414749:	rcr    al,0x89
  41474c:	retf   
  41474d:	jno    0x4146d7
  41474f:	les    ebp,FWORD PTR [esi+0x37]
  414752:	xchg   DWORD PTR [ebp+0x52],edi
  414755:	pop    ecx
  414756:	jbe    0x41479d
  414758:	push   esi
  414759:	inc    edx
  41475a:	aad    0xe8
  41475c:	jno    0x414745
  41475e:	or     BYTE PTR [edx+esi*2],al
  414761:	inc    edi
  414762:	ret    
  414763:	and    BYTE PTR [ebx-0x4],0xe0
  414767:	aaa    
  414768:	jle    0x414779
  41476a:	fld    DWORD PTR [edx]
  41476c:	add    BYTE PTR [esi-0x79e41eff],dl
  414772:	inc    edx
  414773:	jmp    0xb48df57b
  414778:	add    eax,DWORD PTR [esi-0x75c8de43]
  41477e:	mov    dl,0xe2
  414780:	call   0x6732:0x28090f96
  414787:	add    al,0xae
  414789:	adc    eax,0xed98193a
  41478e:	inc    ecx
  41478f:	loope  0x414782
  414791:	leave  
  414792:	pop    es
  414793:	fwait
  414794:	dec    edx
  414795:	dec    ecx
  414796:	test   ch,ch
  414798:	add    edx,ebp
  41479a:	mov    ebx,0x6a6a81dd
  41479f:	pusha  
  4147a0:	mov    al,ds:0x553313da
  4147a5:	in     al,dx
  4147a6:	inc    esp
  4147a7:	dec    ecx
  4147a8:	jecxz  0x41481e
  4147aa:	es xor eax,0xb3e9159c
  4147b0:	lods   eax,DWORD PTR ds:[esi]
  4147b1:	add    esi,edi
  4147b3:	add    al,0x10
  4147b5:	add    eax,0xc6063e82
  4147ba:	pop    ecx
  4147bb:	sbb    al,0x3
  4147bd:	xchg   BYTE PTR [edx+0x17],al
  4147c0:	mov    bl,0x2b
  4147c2:	dec    ebp
  4147c3:	popf   
  4147c4:	adc    al,0xc6
  4147c6:	inc    edx
  4147c7:	xor    DWORD PTR [ebp+0x43d24275],ebp
  4147cd:	xchg   BYTE PTR [edx-0x71],bl
  4147d0:	sub    al,BYTE PTR [eax]
  4147d2:	or     esp,DWORD PTR [edi+0xa]
  4147d5:	ins    DWORD PTR es:[edi],dx
  4147d6:	retf   0x8e34
  4147d9:	and    DWORD PTR [ebp-0x14aff5be],eax
  4147df:	addr16 repz jmp 0xf96f3e54
  4147e6:	pusha  
  4147e7:	push   cs
  4147e8:	cs cmc 
  4147ea:	std    
  4147eb:	stc    
  4147ec:	sahf   
  4147ed:	inc    esi
  4147ee:	and    edi,DWORD PTR [edi-0x3e79fab2]
  4147f4:	bnd ss ret 
  4147f7:	ret    0xe9ae
  4147fa:	test   DWORD PTR [edx-0x79],eax
  4147fd:	lea    ebp,[ecx+0x55930a46]
  414803:	mov    ebx,0xd8bdcd4e
  414808:	or     DWORD PTR [ecx-0x173fa803],edi
  41480e:	test   DWORD PTR [ecx-0x3e5a3a8a],edi
  414814:	into   
  414815:	in     eax,0x6
  414817:	out    0x2d,eax
  414819:	fld    QWORD PTR [ecx+0x7ae66ff1]
  41481f:	addr16 sbb eax,0xa029461
  414825:	push   0x2d
  414827:	and    edi,DWORD PTR [ebp+0x3c]
  41482a:	fild   QWORD PTR [edi]
  41482c:	test   DWORD PTR ds:0xa238225e,esi
  414832:	iret   
  414833:	cmp    al,0x85
  414835:	sbb    DWORD PTR [eax],eax
  414837:	pop    edx
  414838:	ret    
  414839:	lock loopne 0x4148ae
  41483c:	sub    BYTE PTR ds:[ebx+0x39854d0e],0x9b
  414844:	ret    0xecf0
  414847:	pop    edx
  414848:	ds push cs
  41484a:	mov    al,ds:0x8538fe
  41484f:	outs   dx,DWORD PTR ds:[esi]
  414850:	mov    bh,0x8a
  414852:	cli    
  414853:	and    ch,BYTE PTR [edi]
  414855:	sbb    eax,0xd1bd4604
  41485a:	je     0x41483c
  41485c:	imul   esi,esp,0xe17b8d40
  414862:	pop    es
  414863:	lahf   
  414864:	mov    eax,ds:0xf2ee880e
  414869:	repnz inc ebp
  41486b:	inc    esp
  41486c:	jle    0x4147fc
  41486e:	rcl    BYTE PTR [edx],0x8a
  414871:	xchg   ebx,ebx
  414873:	adc    bl,BYTE PTR [esi-0x32]
  414876:	inc    esp
  414877:	xchg   ebx,eax
  414878:	pop    esi
  414879:	hlt    
  41487a:	jmp    FWORD PTR [edi-0x48880abf]
  414880:	jmp    0x8d0e:0x2e880c7c
  414887:	fistp  DWORD PTR [ebp+0x2f]
  41488a:	call   0x36e1af
  41488f:	sbb    bh,ch
  414891:	sub    eax,0xcbc9ef20
  414896:	std    
  414897:	js     0x414832
  414899:	add    DWORD PTR [eax+eax*1+0x43],0xd46beb65
  4148a1:	cdq    
  4148a2:	cmc    
  4148a3:	lea    esp,[ebx+0x47500362]
  4148a9:	cdq    
  4148aa:	add    DWORD PTR [ecx],eax
  4148ac:	outs   dx,DWORD PTR ds:[esi]
  4148ad:	ret    0xfca
  4148b0:	loop   0x414920
  4148b2:	idiv   bh
  4148b4:	or     bl,ch
  4148b6:	dec    ebp
  4148b7:	and    al,0x57
  4148b9:	adc    edx,esp
  4148bb:	test   DWORD PTR [ebp+0x41],edx
  4148be:	or     cl,BYTE PTR [ebx+0x74d1c347]
  4148c4:	pusha  
  4148c5:	in     eax,0x75
  4148c7:	and    al,0x86
  4148c9:	jae    0x414855
  4148cb:	std    
  4148cc:	xchg   edx,eax
  4148cd:	xchg   edx,eax
  4148ce:	je     0x4148c1
  4148d0:	add    eax,0x861fea37
  4148d5:	push   ecx
  4148d6:	pop    esi
  4148d7:	mov    ecx,DWORD PTR [edx+0x77]
  4148da:	iret   
  4148db:	imul   eax,DWORD PTR [esi-0x43e169b5],0xc2810759
  4148e5:	push   esi
  4148e6:	adc    eax,0xd397133a
  4148eb:	aaa    
  4148ec:	xor    BYTE PTR [ebx-0x7a69ec60],ch
  4148f2:	inc    edi
  4148f3:	add    BYTE PTR ds:0x4a8af21f,al
  4148f9:	aaa    
  4148fa:	out    dx,al
  4148fb:	dec    edi
  4148fc:	scas   al,BYTE PTR es:[edi]
  4148fd:	ja     0x4148a1
  4148ff:	std    
  414900:	add    BYTE PTR [ecx+0x393ac7d7],dh
  414906:	into   
  414907:	mov    dh,0x51
  414909:	scas   al,BYTE PTR es:[edi]
  41490a:	xor    al,0x14
  41490c:	std    
  41490d:	cdq    
  41490e:	ret    0x72f7
  414911:	xchg   BYTE PTR [ebx-0x60],bl
  414914:	xor    ecx,DWORD PTR [edx-0x7effb4d8]
  41491a:	xchg   DWORD PTR [edi],edx
  41491c:	adc    esi,eax
  41491e:	pop    ecx
  41491f:	loop   0x414922
  414921:	xchg   DWORD PTR [ecx+0x7],ebx
  414924:	or     eax,0xfd9ee102
  414929:	popa   
  41492a:	lea    esp,[ebx]
  41492c:	and    al,0x7a
  41492e:	and    DWORD PTR [esi-0x3a67867],0x4343a9bf
  414938:	mov    DWORD PTR [ebx],ebp
  41493a:	dec    edi
  41493b:	int3   
  41493c:	add    al,0x86
  41493e:	dec    esi
  41493f:	jae    0x41492d
  414941:	add    eax,0xd73f9d43
  414946:	or     al,0x3c
  414948:	stos   DWORD PTR es:[edi],eax
  414949:	xchg   ebp,eax
  41494a:	outs   dx,BYTE PTR ss:[esi]
  41494c:	dec    eax
  41494d:	fisub  DWORD PTR [ebx+0x1e]
  414950:	cld    
  414951:	(bad)  
  414952:	jb     0x4148ed
  414954:	lds    edx,FWORD PTR [ebx]
  414956:	fs je  0x4148df
  414959:	gs push 0xffffffe1
  41495c:	js     0x4149a3
  41495e:	adc    WORD PTR [esp+eiz*8+0x3e149],bx
  414966:	dec    DWORD PTR [edx-0x4271b786]
  41496c:	cmp    BYTE PTR [eax],dh
  41496e:	jnp    0x414925
  414970:	scas   al,BYTE PTR es:[edi]
  414971:	addr16 ss das 
  414974:	and    DWORD PTR [ebx-0x22],eax
  414977:	xor    eax,0xb88603e7
  41497c:	sbb    DWORD PTR [eax+0x35],edi
  41497f:	push   0x49
  414981:	dec    eax
  414982:	add    DWORD PTR [edx-0x1f],0x20b8484a
  414989:	dec    esi
  41498a:	leave  
  41498b:	sub    cl,0x3
  41498e:	pmaxsw mm0,QWORD PTR [esi+eax*4]
  414992:	and    eax,0x9080e136
  414997:	out    dx,al
  414998:	scas   al,BYTE PTR es:[edi]
  414999:	js     0x41499a
  41499b:	sub    al,0x6e
  41499d:	inc    eax
  41499e:	inc    esi
  41499f:	adc    dl,BYTE PTR [esi+0x42]
  4149a2:	inc    eax
  4149a3:	adc    bl,cl
  4149a5:	dec    esi
  4149a6:	and    ah,BYTE PTR [ebx-0x2c]
  4149a9:	jg     0x4149f1
  4149ab:	in     eax,dx
  4149ac:	out    dx,eax
  4149ad:	and    DWORD PTR [edi],ecx
  4149af:	cmp    ecx,DWORD PTR [ebx-0x13]
  4149b2:	les    esi,FWORD PTR [eax+0x36]
  4149b5:	(bad)  
  4149b6:	jecxz  0x41496f
  4149b8:	sub    al,0x6
  4149ba:	test   al,0x27
  4149bc:	or     ch,BYTE PTR [esi+esi*8]
  4149bf:	in     eax,dx
  4149c0:	inc    esp
  4149c1:	scas   al,BYTE PTR es:[edi]
  4149c2:	jno    0x4149fa
  4149c4:	xchg   DWORD PTR [esi-0x1282d3e8],ebp
  4149ca:	add    BYTE PTR [ebx+0x73],bl
  4149cd:	pop    edi
  4149ce:	lahf   
  4149cf:	sub    BYTE PTR [eax-0x2745b2b3],bh
  4149d5:	das    
  4149d6:	and    dl,BYTE PTR [ecx-0x3e930a19]
  4149dc:	cmp    cl,ah
  4149de:	sub    al,0xff
  4149e0:	bound  eax,QWORD PTR [edx-0x52a5d60c]
  4149e6:	rcr    DWORD PTR [esi],cl
  4149e8:	lea    ebp,gs:[ecx]
  4149eb:	xchg   esi,eax
  4149ec:	push   eax
  4149ed:	jg     0x41499b
  4149ef:	and    DWORD PTR [ecx],esi
  4149f1:	fcom   DWORD PTR [esi+0x1b]
  4149f4:	gs jge 0x4149e8
  4149f7:	in     eax,dx
  4149f8:	mov    bl,0x11
  4149fa:	jmp    0xe68f0484
  4149ff:	out    dx,al
  414a00:	out    dx,al
  414a01:	add    DWORD PTR [ecx-0xb],eax
  414a04:	(bad)  
  414a06:	sub    BYTE PTR es:[edi],al
  414a09:	add    edx,DWORD PTR [eax]
  414a0b:	pop    edx
  414a0c:	gs repz push ss
  414a0f:	xor    ebx,DWORD PTR [edx-0x19]
  414a12:	sbb    dh,0x64
  414a15:	cmp    BYTE PTR [edx],ah
  414a17:	in     eax,dx
  414a18:	loopne 0x414a0c
  414a1a:	(bad)  
  414a1b:	cs stc 
  414a1d:	jle    0x414a17
  414a1f:	clc    
  414a20:	pop    eax
  414a21:	add    esp,DWORD PTR [ebp+0x8]
  414a24:	inc    ebx
  414a25:	or     ch,cl
  414a27:	jmp    0x414a61
  414a29:	mov    ?,WORD PTR [ebx+0x1a5adeb1]
  414a2f:	add    BYTE PTR ds:0x2369f314,bl
  414a35:	adc    edi,DWORD PTR [ebp+0x0]
  414a38:	sub    al,0xe0
  414a3a:	pop    ebx
  414a3b:	add    DWORD PTR [edi+0x2a7472af],ebp
  414a41:	(bad)  
  414a42:	lock pop eax
  414a44:	jp     0x414a8a
  414a46:	pusha  
  414a47:	add    al,0x9c
  414a49:	or     DWORD PTR [eax],0x5f
  414a4c:	pop    esp
  414a4d:	loopne 0x414a6a
  414a4f:	lea    edx,[ebp+0x76]
  414a52:	mov    bh,bl
  414a54:	adc    ebx,DWORD PTR es:[edx]
  414a57:	data16 adc ah,ch
  414a5a:	xlat   BYTE PTR ds:[ebx]
  414a5b:	ror    DWORD PTR [esi],0x62
  414a5e:	ins    DWORD PTR es:[edi],dx
  414a5f:	add    esp,DWORD PTR ds:0x2fe98924
  414a65:	mov    edi,0xeac58d24
  414a6a:	mov    ebx,edi
  414a6c:	jmp    0xd7eb:0xe0661a12
  414a73:	sar    DWORD PTR [esi],0x61
  414a76:	ins    DWORD PTR es:[edi],dx
  414a77:	add    edx,DWORD PTR [ebp-0x471676dd]
  414a7d:	mov    esi,0xcb158d1c
  414a82:	mov    bh,bl
  414a84:	stos   BYTE PTR es:[edi],al
  414a85:	adc    bl,BYTE PTR [esi]
  414a87:	data16 mov al,0xeb
  414a8a:	xlat   BYTE PTR ds:[ebx]
  414a8b:	ror    DWORD PTR [esi+0x65036d61],0x23
  414a92:	mov    ecx,ebp
  414a94:	add    al,bl
  414a96:	pop    edx
  414a97:	mov    esi,0xb8bed9c9
  414a9c:	pop    ebx
  414a9d:	jmp    0x414b16
  414a9f:	jle    0x414aa4
  414aa1:	in     al,dx
  414aa2:	call   0xc782:0x5de665f3
  414aa9:	ror    BYTE PTR [eax],0xc9
  414aac:	xor    edx,DWORD PTR [esi]
  414aae:	cmp    al,0x2
  414ab0:	data16 xchg dl,ah
  414ab3:	cmc    
  414ab4:	push   edi
  414ab5:	mov    al,0xac
  414ab7:	mov    edx,edx
  414ab9:	sar    BYTE PTR [edi],cl
  414abb:	jo     0x414ac7
  414abd:	or     dl,BYTE PTR [edx-0x548ab1c6]
  414ac3:	mov    ?,edi
  414ac5:	arpl   WORD PTR [esi],dx
  414ac7:	or     DWORD PTR [edx-0x7c],ebp
  414aca:	add    ecx,DWORD PTR [edi-0x305df9fd]
  414ad0:	jb     0x414a59
  414ad2:	sub    eax,0xc4183144
  414ad7:	add    eax,DWORD PTR [eax+0x172c820f]
  414add:	ins    DWORD PTR es:[edi],dx
  414ade:	(bad)  
  414ae0:	mov    DWORD PTR gs:[ecx],ebx
  414ae3:	mov    ch,0x66
  414ae5:	test   edx,ebx
  414ae7:	adc    eax,DWORD PTR [ecx-0x4b04c528]
  414aed:	fsubr  DWORD PTR [ecx+esi*2-0x20df9f6]
  414af4:	jp     0x414ada
  414af6:	out    0xb4,al
  414af8:	je     0x414afa
  414afa:	test   esp,ebp
  414afc:	mov    ch,0xff
  414afe:	nop
  414aff:	fdivr  DWORD PTR [ebx-0xa607b58]
  414b05:	mov    di,0xab2f
  414b09:	add    BYTE PTR [esi+0x400d76d1],al
  414b0f:	sub    al,0xf7
  414b11:	mov    edi,0x8715632c
  414b16:	mov    DWORD PTR [ebx+0x36fd53c8],edx
  414b1c:	xchg   esp,esp
  414b1e:	jle    0x414b0b
  414b20:	xchg   ecx,eax
  414b21:	nop
  414b22:	xchg   DWORD PTR [ecx+0x7],ebp
  414b25:	mov    ecx,DWORD PTR [edx-0x7b97a87b]
  414b2b:	inc    edx
  414b2c:	fild   WORD PTR [ebx]
  414b2e:	xchg   BYTE PTR [edi-0x2],bl
  414b31:	(bad)  
  414b32:	jne    0x414b36
  414b34:	loope  0x414ae4
  414b36:	cs cmp al,0xa1
  414b39:	inc    ebx
  414b3a:	jmp    DWORD PTR [ebp+0x2e]
  414b3d:	ret    
  414b3e:	inc    ebx
  414b3f:	es mov cl,0x10
  414b42:	mov    BYTE PTR [edx-0x5c],0xfd
  414b46:	in     eax,0xd8
  414b48:	and    BYTE PTR [esi+eax*1],al
  414b4b:	push   ds
  414b4c:	pop    ecx
  414b4d:	rol    bh,0x42
  414b50:	loope  0x414b82
  414b52:	pop    esi
  414b53:	neg    DWORD PTR [ebx-0x35]
  414b56:	inc    ebp
  414b57:	add    al,0xe1
  414b59:	dec    esi
  414b5a:	or     esi,DWORD PTR [esi]
  414b5c:	popf   
  414b5d:	adc    DWORD PTR [eax],eax
  414b5f:	inc    esi
  414b60:	inc    edx
  414b61:	popa   
  414b62:	call   0x461d188
  414b67:	xchg   ch,dl
  414b69:	(bad)  
  414b6a:	fwait
  414b6b:	sbb    ah,BYTE PTR [eax+0x6c]
  414b6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b6f:	or     al,BYTE PTR [ebx+0x45c314dd]
  414b75:	(bad)  
  414b76:	rol    BYTE PTR [edi+0x42],0x87
  414b7a:	in     eax,dx
  414b7b:	mov    BYTE PTR [edx+0x23],al
  414b7e:	add    dh,ch
  414b80:	test   DWORD PTR [eax+0x3bf8b903],esp
  414b86:	adc    BYTE PTR [esi+0x4b03a134],dh
  414b8c:	int3   
  414b8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b8e:	fild   WORD PTR [ebp-0x65005c3d]
  414b94:	ret    
  414b95:	cmp    ebx,0xffffff91
  414b98:	(bad)  
  414b99:	stos   DWORD PTR es:[edi],eax
  414b9a:	idiv   edi
  414b9c:	push   es
  414b9d:	(bad)  
  414ba0:	or     dh,ah
  414ba2:	jp     0x414be4
  414ba4:	test   BYTE PTR [edx],cl
  414ba6:	loope  0x414b2d
  414ba8:	clc    
  414ba9:	jle    0x414ba3
  414bab:	or     al,0x80
  414bad:	or     ch,cl
  414baf:	test   DWORD PTR [eax+0x4e],ebx
  414bb2:	add    eax,0xef77605a
  414bb7:	ret    
  414bb8:	push   0x47
  414bba:	inc    ecx
  414bbb:	and    ebx,DWORD PTR [ebp+0x7f]
  414bbe:	scas   eax,DWORD PTR es:[edi]
  414bbf:	enter  0xe84,0xe9
  414bc3:	add    al,cl
  414bc5:	leave  
  414bc6:	out    0x68,al
  414bc8:	push   cs
  414bc9:	fimul  DWORD PTR [eax]
  414bcb:	jmp    0x4d4dd155
  414bd0:	jo     0x414bd4
  414bd2:	or     ch,BYTE PTR [ecx+0x21]
  414bd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bd6:	int    0x2a
  414bd8:	mov    al,BYTE PTR [edx+0x5b]
  414bdb:	adc    al,0x18
  414bdd:	sahf   
  414bde:	shr    BYTE PTR [edi+eax*2-0x7681a4be],cl
  414be5:	outs   dx,BYTE PTR ds:[esi]
  414be6:	sbb    BYTE PTR [ecx],ch
  414be8:	mov    al,dl
  414bea:	xor    eax,0xa012941
  414bef:	jmp    0x82388a4
  414bf4:	and    ebx,DWORD PTR [ebp-0xd]
  414bf7:	ins    DWORD PTR es:[edi],dx
  414bf8:	retf   0x18d5
  414bfb:	es leave 
  414bfd:	stos   BYTE PTR es:[edi],al
  414bfe:	int    0xaa
  414c00:	test   DWORD PTR [esp+edi*1+0xd8885a8],ebp
  414c07:	xor    ecx,0x3ae80a00
  414c0d:	pop    ebp
  414c0e:	sbb    eax,0xa027419
  414c13:	ins    BYTE PTR es:[edi],dx
  414c14:	pop    ecx
  414c15:	pop    esi
  414c16:	pop    edx
  414c17:	fs adc edx,ecx
  414c1a:	hlt    
  414c1b:	push   cs
  414c1c:	jecxz  0x414c0f
  414c1e:	popa   
  414c1f:	add    BYTE PTR [ebx+0x62],dh
  414c22:	repz call DWORD PTR [edi]
  414c25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c26:	cmc    
  414c27:	add    BYTE PTR [eax],al
  414c29:	pop    edi
  414c2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c2b:	ja     0x414c35
  414c2d:	cwde   
  414c2e:	adc    dh,bl
  414c30:	jmp    FWORD PTR [edi-0x27]
  414c33:	outs   dx,BYTE PTR ds:[esi]
  414c34:	cld    
  414c35:	cmp    BYTE PTR [ebp-0x3a],cl
  414c38:	adc    eax,0xc087469f
  414c3d:	mov    bl,0x33
  414c3f:	pop    ebp
  414c40:	lea    esi,[edx-0x7000c27]
  414c46:	cmp    ecx,DWORD PTR [edx]
  414c48:	push   eax
  414c49:	clc    
  414c4a:	dec    esp
  414c4b:	ds push ss
  414c4d:	pop    edi
  414c4e:	inc    esi
  414c4f:	mov    esp,eax
  414c51:	sbb    eax,ebx
  414c53:	scas   eax,DWORD PTR es:[edi]
  414c54:	in     al,0xf9
  414c56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c57:	cmc    
  414c58:	push   es
  414c59:	pop    eax
  414c5a:	adc    bl,BYTE PTR [ecx]
  414c5c:	cmp    DWORD PTR [edx+0x8fff4bd],0x31
  414c63:	add    eax,0xc2a82f95
  414c68:	and    al,0xdd
  414c6a:	(bad)  [ebx+0xd]
  414c6d:	add    al,0x5e
  414c6f:	int    0x46
  414c71:	fiadd  DWORD PTR [eax-0x7f]
  414c74:	test   DWORD PTR [ebx+0x47fff5a7],edx
  414c7a:	jne    0x414c70
  414c7c:	(bad)  
  414c7d:	ffreep st(2)
  414c7f:	ins    BYTE PTR es:[edi],dx
  414c80:	or     BYTE PTR [edi+0x340c4bd9],ch
  414c86:	sbb    al,0x2
  414c88:	mov    ecx,esp
  414c8a:	pop    ebp
  414c8b:	add    dh,0x0
  414c8e:	or     WORD PTR [esi],0x0
  414c92:	loope  0x414c6e
  414c94:	loop   0x414c5d
  414c96:	scas   al,BYTE PTR es:[edi]
  414c97:	std    
  414c98:	jnp    0x414cda
  414c9a:	xchg   BYTE PTR [ebx-0x71],ch
  414c9d:	jg     0x414c25
  414c9f:	imul   eax,DWORD PTR [edi],0x5e
  414ca2:	inc    ebp
  414ca3:	call   0xd7ba50d4
  414ca8:	or     DWORD PTR [eax-0x4a01d779],esi
  414cae:	sar    BYTE PTR [esi+0x2f],0x74
  414cb2:	xchg   ebx,eax
  414cb3:	adc    edx,DWORD PTR [edx]
  414cb5:	add    DWORD PTR [ebx+ebp*4+0x12846acb],edx
  414cbc:	and    al,0xf
  414cbe:	pop    ebp
  414cbf:	data16 fadd st(6),st
  414cc2:	(bad)  
  414cc3:	icebp  
  414cc4:	dec    DWORD PTR [ecx-0x17ca9040]
  414cca:	cmp    al,0x6b
  414ccc:	pop    es
  414ccd:	add    ah,dl
  414ccf:	cmp    bh,BYTE PTR [esi]
  414cd1:	std    
  414cd2:	jnp    0x414c77
  414cd4:	icebp  
  414cd5:	aas    
  414cd6:	xchg   BYTE PTR [eax-0x3a],bh
  414cd9:	or     DWORD PTR [esi],0x824685b4
  414cdf:	jl     0x414d53
  414ce1:	rol    ch,0xe7
  414ce4:	daa    
  414ce5:	or     BYTE PTR [esi+0x70370057],al
  414ceb:	jnp    0x414d05
  414ced:	xchg   esp,eax
  414cee:	(bad)  
  414cef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cf1:	adc    eax,DWORD PTR [eax]
  414cf3:	loop   0x414d52
  414cf5:	inc    edi
  414cf6:	add    BYTE PTR [edi],cl
  414cf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cf9:	inc    DWORD PTR [edx+0x54ed7ec6]
  414cff:	ss or  al,0x10
  414d02:	add    al,0xc1
  414d04:	jge    0x414cb1
  414d06:	adc    eax,DWORD PTR [esi+0x6b]
  414d09:	add    al,0x3b
  414d0c:	ins    DWORD PTR es:[edi],dx
  414d0d:	xchg   BYTE PTR [esi-0x6a],bh
  414d10:	fisttp DWORD PTR [ecx+eax*8]
  414d13:	mov    eax,ds:0x9b0b9341
  414d18:	ss xor ecx,edi
  414d1b:	push   ecx
  414d1c:	inc    edx
  414d1d:	pusha  
  414d1e:	sub    bh,BYTE PTR [esi+0x42]
  414d21:	iret   
  414d22:	ret    
  414d23:	inc    edi
  414d24:	enter  0x7a3,0x7
  414d28:	pop    ebx
  414d29:	hlt    
  414d2a:	pop    ss
  414d2b:	cwde   
  414d2c:	call   0x36ac810f
  414d31:	or     ecx,edi
  414d33:	mov    eax,ds:0x8219ec42
  414d38:	pop    ebx
  414d39:	(bad)  
  414d3a:	(bad)  
  414d3b:	jnp    0x414d3f
  414d3d:	loope  0x414cc5
  414d3f:	mov    eax,0xc88ec446
  414d44:	dec    edx
  414d45:	retw   
  414d47:	mov    dl,0x47
  414d49:	adc    DWORD PTR [ebx+0x43d67295],esp
  414d4f:	xchg   BYTE PTR [edi+0x7f860c4b],bh
  414d55:	pop    DWORD PTR ss:[eax]
  414d58:	sub    al,dl
  414d5a:	test   DWORD PTR [ebx],ebx
  414d5c:	adc    DWORD PTR [ecx+eiz*8-0x70],ebx
  414d60:	lds    ebx,FWORD PTR [esi+0x31]
  414d63:	xchg   ecx,eax
  414d64:	add    eax,0xfba28bcb
  414d69:	repnz sbb BYTE PTR [eax],cl
  414d6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d6d:	inc    edx
  414d6e:	loope  0x414d9b
  414d70:	jmp    0x414dcd
  414d72:	loope  0x414d77
  414d74:	jecxz  0x414d4b
  414d76:	clc    
  414d77:	retf   0x5e45
  414d7a:	fld    QWORD PTR [esi+eax*4]
  414d7d:	inc    edx
  414d7e:	pop    esp
  414d7f:	clc    
  414d80:	mov    ebp,0x503a135
  414d85:	xor    DWORD PTR [esi+0x1dc60f10],0xffffffa1
  414d8c:	mov    bl,0x5b
  414d8e:	or     al,BYTE PTR [ecx-0x57]
  414d91:	pop    ebx
  414d92:	repz jmp 0x29798e88
  414d98:	retf   0xe80
  414d9b:	jmp    0xa20be214
  414da0:	jno    0x414dea
  414da2:	inc    edx
  414da3:	xchg   ebp,eax
  414da4:	mov    BYTE PTR [ecx],dl
  414da6:	retf   0xab2a
  414da9:	xor    eax,0x40a32a52
  414dae:	push   edx
  414daf:	sub    bh,BYTE PTR [ebp+0x8e27e0a]
  414db5:	push   0x1d
  414db7:	pop    ebp
  414db8:	adc    DWORD PTR [eax],0xffffffca
  414dbb:	stos   BYTE PTR es:[edi],al
  414dbc:	add    BYTE PTR [edx-0x7a6638c0],bh
  414dc2:	add    DWORD PTR [ebx],0x424eca97
  414dc8:	cmp    eax,0xea7e0a88
  414dcd:	pop    edx
  414dce:	fwait
  414dcf:	mov    DWORD PTR [ebx-0x7a],0x1a43c6fa
  414dd6:	repz (bad) 
  414dd8:	idiv   BYTE PTR [esi+0x6e314242]
  414dde:	dec    esi
  414ddf:	xchg   DWORD PTR [ecx-0x25f930ef],eax
  414de5:	lds    eax,FWORD PTR [eax-0x7e421aa0]
  414deb:	pusha  
  414dec:	fldcw  WORD PTR [ebp+0x36625d81]
  414df2:	or     edi,DWORD PTR [edi-0x59]
  414df5:	xor    al,BYTE PTR [ebx-0xdd8990d]
  414dfb:	pop    edi
  414dfc:	jmp    0x60431d27
  414e01:	inc    ecx
  414e02:	pop    esi
  414e03:	repz hlt 
  414e05:	fnstenv [edx+ecx*2]
  414e08:	add    BYTE PTR [edi+0x220ccec5],ch
  414e0e:	add    esi,esi
  414e10:	push   eax
  414e11:	jo     0x414e46
  414e13:	add    bh,bh
  414e15:	fld    DWORD PTR [edx-0xb]
  414e18:	adc    eax,0x3358af
  414e1d:	js     0x414dbd
  414e1f:	adc    eax,eax
  414e21:	add    bh,bl
  414e23:	xchg   eax,ecx
  414e25:	add    al,0x6f
  414e27:	adc    DWORD PTR [ecx-0x3338e114],eax
  414e2d:	call   0x36f1fe
  414e32:	movaps xmm1,XMMWORD PTR [edx]
  414e35:	(bad)  
  414e36:	fimul  DWORD PTR [ebp-0x75]
  414e39:	inc    ebp
  414e3a:	arpl   WORD PTR [ebx+0x6593417],sp
  414e40:	or     al,BYTE PTR [ebx+0x457f4a1b]
  414e46:	push   ebx
  414e47:	push   ss
  414e48:	cmc    
  414e49:	jne    0x414e82
  414e4b:	mov    ds:0x50f0047c,eax
  414e50:	scas   eax,DWORD PTR es:[edi]
  414e51:	adc    eax,0xd8fd3e5f
  414e56:	xor    al,0x86
  414e58:	dec    edx
  414e59:	leave  
  414e5a:	in     eax,dx
  414e5b:	inc    ecx
  414e5c:	or     bh,bh
  414e5e:	jnp    0x414eca
  414e60:	pop    es
  414e61:	jmp    FWORD PTR [edi+0x46]
  414e64:	cmc    
  414e65:	jo     0x414e52
  414e67:	mov    ds:0x5dae017,al
  414e6c:	or     dh,bh
  414e6e:	daa    
  414e6f:	push   edi
  414e70:	mov    bl,0x40
  414e72:	sbb    eax,0x64550a42
  414e77:	test   eax,0xf7fec89
  414e7c:	pop    esp
  414e7d:	push   edi
  414e7e:	push   esp
  414e7f:	mov    ah,0x81
  414e81:	fadd   DWORD PTR [esi+0xfdee03]
  414e87:	ror    DWORD PTR [eax],0x8b
  414e8a:	shl    BYTE PTR [edx],0x59
  414e8d:	and    eax,0x31f35131
  414e92:	(bad)  
  414e93:	test   eax,0x1ac08b10
  414e98:	inc    ebp
  414e99:	sbb    DWORD PTR [ebp+0x28eec85],esi
  414e9f:	sbb    ebx,DWORD PTR [esi+0x25]
  414ea2:	adc    BYTE PTR [esi],ch
  414ea4:	inc    esp
  414ea5:	sbb    DWORD PTR [ecx],esi
  414ea7:	dec    edi
  414ea8:	in     al,dx
  414ea9:	mov    ss,WORD PTR ds:0x8bc7f689
  414eaf:	(bad)  
  414eb0:	pop    eax
  414eb1:	xchg   eax,esp
  414eb3:	mov    bh,BYTE PTR [ebx+0x5fd8fd3e]
  414eb9:	stos   BYTE PTR es:[edi],al
  414eba:	adc    edi,DWORD PTR [esi]
  414ebc:	push   esi
  414ebd:	inc    edi
  414ebe:	add    BYTE PTR [ebx],cl
  414ec0:	stos   DWORD PTR es:[edi],eax
  414ec1:	adc    ch,BYTE PTR [edx]
  414ec3:	std    
  414ec4:	sub    eax,0x6bc615f2
  414ec9:	xchg   esp,eax
  414eca:	aad    0xfd
  414ecc:	pop    ebx
  414ecd:	in     al,dx
  414ece:	push   DWORD PTR [ecx]
  414ed0:	rol    BYTE PTR [eax-0x4],cl
  414ed3:	ins    DWORD PTR es:[edi],dx
  414ed4:	lods   al,BYTE PTR ds:[esi]
  414ed5:	adc    cl,BYTE PTR [esi]
  414ed7:	cmp    BYTE PTR cs:[ebp+edi*8-0x3ee5fe7],dl
  414edf:	adc    DWORD PTR [esi-0x15],ecx
  414ee2:	adc    eax,0xd5946bc6
  414ee7:	mov    ebp,0x3211ac
  414eec:	in     eax,dx
  414eed:	push   esp
  414eee:	push   edi
  414eef:	(bad)  
  414ef0:	fmul   QWORD PTR [eax+0x7ad6439d]
  414ef6:	adc    dl,BYTE PTR ds:0x8aff4de1
  414efc:	inc    ebx
  414efd:	inc    edx
  414efe:	xor    DWORD PTR [edi+edi*8],esi
  414f01:	(bad)  
  414f02:	in     al,0x29
  414f04:	jbe    0x414f70
  414f06:	mov    bh,0x2
  414f08:	xchg   BYTE PTR [edx+0x6e],al
  414f0b:	les    esi,FWORD PTR [edx]
  414f0d:	pop    edi
  414f0e:	pop    eax
  414f0f:	sysret 
  414f11:	xlat   BYTE PTR ds:[ebx]
  414f12:	dec    esp
  414f13:	add    al,0x32
  414f15:	jnp    0x414f53
  414f17:	sbb    DWORD PTR [edx+0x73e7de58],ebp
  414f1d:	add    ah,cl
  414f1f:	rcl    ecx,1
  414f21:	clc    
  414f22:	mov    dl,0x3a
  414f24:	rol    DWORD PTR [ebx-0x3427fc17],0x11
  414f2b:	sar    DWORD PTR [ecx],cl
  414f2d:	ret    
  414f2e:	mov    edx,DWORD PTR [eax]
  414f30:	jno    0x414f23
  414f32:	jecxz  0x414fac
  414f34:	inc    esi
  414f35:	(bad)  
  414f36:	jns    0x414ed6
  414f38:	pop    es
  414f39:	pusha  
  414f3a:	out    dx,al
  414f3b:	nop
  414f3c:	fild   DWORD PTR [ebx-0x27]
  414f3f:	sub    cl,BYTE PTR [ebp+0x58]
  414f42:	aam    0x87
  414f44:	inc    esi
  414f45:	iret   
  414f46:	sub    al,0xac
  414f48:	in     al,0x55
  414f4a:	les    ebx,FWORD PTR [esi+0x43358302]
  414f50:	add    BYTE PTR [ebx+0x2e82e08f],al
  414f56:	inc    ebp
  414f57:	or     DWORD PTR ss:[edx+esi*1+0x1388ab19],ebp
  414f5f:	mov    edx,0xe4300e82
  414f64:	js     0x414f2f
  414f66:	lds    esp,FWORD PTR [edx]
  414f68:	lahf   
  414f69:	pop    es
  414f6a:	arpl   bp,sp
  414f6c:	xor    edx,DWORD PTR [edi+0x57]
  414f6f:	repz pop es
  414f71:	repz sub eax,0x42a9f87d
  414f77:	or     ch,BYTE PTR [ebp+eax*8-0x2d]
  414f7b:	adc    BYTE PTR [ecx+0x7b],ch
  414f7e:	dec    ebx
  414f7f:	or     esp,ebx
  414f81:	sub    ah,0x1d
  414f84:	pop    esi
  414f85:	jae    0x414fc5
  414f87:	repz cld 
  414f89:	int    0x33
  414f8b:	dec    edx
  414f8c:	jmp    0xedbed29f
  414f91:	push   ebp
  414f92:	push   edi
  414f93:	loopne 0x414f6c
  414f95:	or     BYTE PTR [esi+ebx*1],dh
  414f98:	fild   WORD PTR [ebp+0x42]
  414f9b:	jg     0x414fce
  414f9d:	in     eax,dx
  414f9e:	retf   
  414f9f:	cmc    
  414fa0:	es lock in eax,dx
  414fa3:	repnz hlt 
  414fa5:	mov    eax,ds:0x57e94a2d
  414faa:	xchg   edi,eax
  414fab:	push   ebx
  414fac:	scas   eax,DWORD PTR es:[edi]
  414fad:	inc    esp
  414fae:	repz jle 0x414fc6
  414fb1:	or     ah,BYTE PTR [esi-0x66]
  414fb4:	jmp    0x5783d4b9
  414fb9:	add    DWORD PTR [ebx-0x7887235],0x54
  414fc0:	repz push ebx
  414fc2:	mov    dh,dl
  414fc4:	loope  0x415007
  414fc6:	inc    edi
  414fc7:	push   edi
  414fc8:	repz (bad) 
  414fca:	leave  
  414fcb:	dec    edx
  414fcc:	sub    BYTE PTR [ecx],0x96
  414fcf:	ror    esi,0xf5
  414fd2:	fld    QWORD PTR [ebp+esi*8-0x7f1ff442]
  414fd9:	ins    BYTE PTR es:[edi],dx
  414fda:	jle    0x415031
  414fdc:	repz scas al,BYTE PTR es:[edi]
  414fde:	push   0x32
  414fe0:	sub    ebp,ecx
  414fe2:	test   DWORD PTR [edx+0x4282143a],ebx
  414fe8:	loop   0x414fd5
  414fea:	nop
  414feb:	push   edi
  414fec:	repz push 0xffffffa1
  414fef:	dec    esi
  414ff0:	or     al,BYTE PTR [eax]
  414ff2:	jbe    0x414ff3
  414ff4:	icebp  
  414ff5:	data16 je 0x414ff7
  414ff8:	icebp  
  414ff9:	data16 cs jle 0x414fff
  414ffd:	data16 mov di,0xff7c
  415002:	push   0xd74581b5
  415007:	(bad)  
  415008:	(bad)  
  415009:	je     0x415063
  41500b:	mov    ch,0xf5
  41500d:	call   0x3705c7
  415012:	and    edi,DWORD PTR [esi+0x77]
  415015:	xor    eax,0x16174f68
  41501a:	add    bh,ch
  41501c:	inc    edx
  41501d:	das    
  41501e:	inc    eax
  41501f:	cmp    BYTE PTR [esi],0xa
  415022:	jne    0x414fe2
  415024:	mov    ch,0x47
  415026:	clc    
  415027:	push   ds
  415028:	aaa    
  415029:	repnz xor BYTE PTR [edx],ah
  41502c:	inc    edx
  41502d:	or     dh,BYTE PTR [esi+0x60]
  415030:	jg     0x415079
  415032:	clc    
  415033:	dec    edi
  415034:	pop    edi
  415035:	repz jmp FWORD PTR [eax-0x3]
  415039:	std    
  41503a:	mov    eax,0xa084f
  41503f:	add    DWORD PTR [ecx+0x48],edi
  415042:	hlt    
  415043:	lods   eax,DWORD PTR ds:[esi]
  415044:	icebp  
  415045:	aaa    
  415046:	rol    ah,0x89
  415049:	enter  0x2f04,0xf2
  41504d:	repnz jmp 0x80b4:0x57591150
  415055:	loop   0x4150cb
  415057:	jmp    0x5912:0xf433f5b6
  41505e:	call   FWORD PTR [esi+0x4a]
  415061:	mov    eax,DWORD PTR [ebx+eax*2+0x4e]
  415065:	not    BYTE PTR ds:0x334cdf
  41506b:	xchg   al,ah
  41506d:	mov    es,WORD PTR [ecx+0x1f1bc4f9]
  415073:	push   ebp
  415074:	cmp    BYTE PTR ds:0xfcbf93fd,bh
  41507a:	aas    
  41507b:	xchg   BYTE PTR ds:0xee001420,dh
  415081:	pop    ecx
  415082:	sub    bh,ch
  415084:	shl    DWORD PTR [eax],1
  415086:	leave  
  415087:	je     0x4150ff
  415089:	mov    WORD PTR [edx-0x6d5d5110],es
  41508f:	std    
  415090:	mov    ecx,0x88e996e0
  415095:	pop    eax
  415096:	(bad)  
  415097:	jmp    0x39dea8df
  41509c:	xchg   ebp,eax
  41509d:	xchg   edi,eax
  41509e:	imul   DWORD PTR [ecx+0x65]
  4150a1:	les    ebx,FWORD PTR [edi-0x69e36db2]
  4150a7:	test   dh,al
  4150a9:	scas   eax,DWORD PTR es:[edi]
  4150aa:	lock mov BYTE PTR [eax+0x40],cl
  4150ae:	in     eax,0x69
  4150b0:	mov    ss,WORD PTR [eax+0x3cd90221]
  4150b6:	cld    
  4150b7:	out    0x93,eax
  4150b9:	stos   DWORD PTR es:[edi],eax
  4150ba:	pop    es
  4150bb:	push   ebp
  4150bc:	popa   
  4150bd:	jbe    0x4150b2
  4150bf:	adc    eax,0x10a26bc6
  4150c4:	push   ecx
  4150c5:	push   esi
  4150c6:	jecxz  0x4150dd
  4150c8:	(bad)  
  4150c9:	imul   eax,DWORD PTR [eax+ebx*8-0xda9af3],0xc
  4150d1:	mov    ch,0x8f
  4150d3:	adc    ch,dl
  4150d5:	jl     0x4150d0
  4150d7:	and    edx,DWORD PTR [eax+0x46310e2b]
  4150dd:	sub    eax,0xa8bf592f
  4150e2:	and    al,0x0
  4150e4:	add    BYTE PTR [ecx],dl
  4150e6:	inc    edx
  4150e7:	adc    eax,0x1d557de0
  4150ec:	loopne 0x41507b
  4150ee:	push   ebp
  4150ef:	adc    al,BYTE PTR [eax]
  4150f1:	sti    
  4150f2:	cs stc 
  4150f4:	icebp  
  4150f5:	mov    cl,0x42
  4150f7:	lahf   
  4150f8:	or     al,0x86
  4150fa:	out    dx,eax
  4150fb:	ja     0x4150a5
  4150fd:	pop    es
  4150fe:	data16 int 0x36
  415101:	xor    ch,ch
  415103:	addr16 pushf 
  415105:	call   DWORD PTR [edx+0x78]
  415108:	mov    esi,0x277f1df
  41510d:	pop    ebx
  41510e:	icebp  
  41510f:	addr16 retf 0xf1bb
  415113:	in     al,dx
  415114:	add    dh,0xd3
  415117:	loop   0x41511f
  415119:	into   
  41511a:	sub    BYTE PTR [ecx-0x51],cl
  41511d:	pop    ebp
  41511e:	into   
  41511f:	test   al,0x9a
  415121:	jne    0x415151
  415123:	fild   DWORD PTR [ebx-0x7a]
  415126:	pop    ss
  415127:	shl    dl,1
  415129:	mov    DWORD PTR [esi+ebx*4+0x41],edx
  41512d:	out    dx,al
  41512e:	adc    dl,BYTE PTR [esi-0x513a79fd]
  415134:	scas   eax,DWORD PTR es:[edi]
  415135:	(bad)  
  415136:	(bad)  
  415137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415138:	or     ebx,esp
  41513a:	and    DWORD PTR [ecx],ebx
  41513c:	jmp    0x8122a5a1
  415141:	inc    esi
  415142:	into   
  415143:	mov    bl,0x91
  415145:	lds    ebp,FWORD PTR [esi+0x1]
  415148:	adc    BYTE PTR [eax],al
  41514a:	test   DWORD PTR [ecx],ebx
  41514c:	cs test al,0xb5
  41514f:	sub    dl,bl
  415151:	inc    eax
  415152:	push   edx
  415153:	inc    edx
  415154:	pop    ebp
  415155:	add    al,BYTE PTR [edi]
  415157:	(bad)  
  415158:	test   al,0x3
  41515a:	mov    ch,0x21
  41515c:	outs   dx,BYTE PTR ds:[esi]
  41515d:	call   0xf582:0x790aa6a3
  415164:	push   ebx
  415165:	adc    al,BYTE PTR [ebx-0x7f]
  415168:	push   cs
  415169:	jmp    0xe96c20cb
  41516e:	test   DWORD PTR [ebp+0x1d],edx
  415171:	int    0xf7
  415173:	adc    ecx,DWORD PTR [edx]
  415175:	fcmovnb st,st(5)
  415177:	imul   esp,eax,0xdf669686
  41517d:	js     0x41517b
  41517f:	iret   
  415180:	rol    DWORD PTR [edx+0x7d7ef021],1
  415186:	call   0xf356:0x4751c9c9
  41518d:	pop    esi
  41518e:	adc    al,BYTE PTR [eax]
  415190:	mul    BYTE PTR [edx+0x46]
  415193:	dec    edx
  415194:	sti    
  415195:	xor    DWORD PTR [eax+0x119c8593],esi
  41519b:	and    cl,al
  41519d:	cdq    
  41519e:	cld    
  41519f:	iret   
  4151a0:	add    ebx,eax
  4151a2:	test   DWORD PTR [ebp+0x7d],edx
  4151a5:	fldlg2 
  4151a7:	iret   
  4151a8:	add    eax,0xf33e7226
  4151ad:	hlt    
  4151ae:	add    ch,bl
  4151b0:	das    
  4151b1:	dec    edx
  4151b2:	jmp    0xe947d201
  4151b7:	mov    ds:0x497df342,eax
  4151bc:	inc    edi
  4151bd:	repz jne 0x415201
  4151c0:	inc    edi
  4151c1:	repz js 0x41521d
  4151c4:	push   esi
  4151c5:	sbb    eax,0xa1357c9
  4151ca:	stos   DWORD PTR es:[edi],eax
  4151cb:	jp     0x41520f
  4151cd:	pop    ebp
  4151ce:	jb     0x4151be
  4151d0:	shl    dh,0x5
  4151d3:	jae    0x4151c1
  4151d5:	pop    edx
  4151d6:	bound  edx,QWORD PTR [edx]
  4151d8:	leave  
  4151d9:	stc    
  4151da:	add    BYTE PTR [esp+edx*4+0x50944ce1],dh
  4151e1:	mov    ebx,0xa3f2700
  4151e6:	cmp    edx,edi
  4151e8:	dec    eax
  4151e9:	inc    esp
  4151ea:	(bad)  
  4151eb:	dec    edi
  4151ec:	or     eax,0xc20ce81
  4151f1:	push   es
  4151f2:	test   DWORD PTR [edi],ebp
  4151f4:	cmp    BYTE PTR [ebx+eax*1],cl
  4151f7:	aaa    
  4151f8:	gs sti 
  4151fa:	jmp    0x4151cc
  4151fc:	inc    edx
  4151fd:	xor    bh,bh
  4151ff:	mov    edx,0xef401d62
  415204:	imul   edi,DWORD PTR [edx],0x27
  415207:	fistp  QWORD PTR [esi]
  415209:	ja     0x415238
  41520b:	pusha  
  41520c:	inc    ebx
  41520d:	add    cl,BYTE PTR [ebp-0x74a55d16]
  415213:	add    dl,ch
  415215:	cmp    ah,BYTE PTR [eax+0x2]
  415218:	inc    edi
  415219:	and    ecx,DWORD PTR [edx]
  41521b:	add    BYTE PTR [edi-0x588a362d],bl
  415221:	mov    al,0x47
  415223:	aam    0xad
  415225:	inc    edx
  415226:	pop    es
  415227:	cmp    edx,ebp
  415229:	mov    dh,BYTE PTR [edi+0x11]
  41522c:	sbb    bh,BYTE PTR [ecx+0x45dfb075]
  415232:	push   ebp
  415233:	pop    esi
  415234:	xor    al,0x7d
  415236:	enter  0x5f08,0x78
  41523a:	mov    bl,0xeb
  41523c:	push   0xffffffab
  41523e:	ja     0x41521c
  415240:	pusha  
  415241:	popa   
  415242:	daa    
  415243:	push   ss
  415244:	das    
  415245:	inc    esi
  415246:	loope  0x415239
  415248:	in     al,0x85
  41524a:	loop   0x4151d4
  41524c:	fs stos DWORD PTR es:[edi],eax
  41524e:	cmc    
  41524f:	push   eax
  415250:	pusha  
  415251:	inc    edx
  415252:	or     BYTE PTR cs:[esi-0x4502f1fb],al
  415259:	inc    edi
  41525a:	idiv   ah
  41525c:	mov    dl,0x3f
  41525e:	idiv   ah
  415260:	xchg   edi,eax
  415261:	addr16 xchg edx,eax
  415263:	adc    eax,DWORD PTR [edx+0x55004771]
  415269:	mov    ds:0x5909f88e,al
  41526e:	fs rol ah,0x5f
  415272:	pop    es
  415273:	push   ebx
  415274:	or     eax,0xec8ec8
  415279:	sbb    ah,0x13
  41527c:	cld    
  41527d:	xchg   BYTE PTR [ecx+edi*1],ch
  415280:	std    
  415281:	pop    ebx
  415282:	push   ebx
  415283:	xchg   BYTE PTR [ebx],bh
  415285:	loop   0x4152f5
  415287:	inc    edi
  415288:	add    cl,dl
  41528a:	pop    ecx
  41528b:	dec    DWORD PTR [eax+0x418e8ae]
  415291:	rcr    DWORD PTR [eax],0x74
  415294:	shl    BYTE PTR [edx],0x63
  415297:	mov    cs,ecx
  415299:	mov    cl,0x2
  41529b:	add    BYTE PTR [eax],0x86
  41529e:	pop    ebx
  41529f:	xchg   BYTE PTR [esi-0x72],cl
  4152a2:	retf   
  4152a3:	pop    es
  4152a4:	xchg   DWORD PTR [ebx+0xf],ecx
  4152a7:	je     0x415282
  4152a9:	sbb    ah,BYTE PTR [esi-0x80]
  4152ac:	pop    ebx
  4152ad:	mov    gs,WORD PTR [ecx]
  4152af:	(bad)  
  4152b0:	or     eax,0x43801b38
  4152b5:	mov    ?,WORD PTR [eax]
  4152b7:	add    al,0x10
  4152b9:	add    esp,DWORD PTR [esi-0x5479957d]
  4152bf:	xchg   edx,eax
  4152c0:	jae    0x415250
  4152c2:	push   eax
  4152c3:	in     eax,0xb3
  4152c5:	je     0x415262
  4152c7:	pop    es
  4152c8:	mov    DWORD PTR [esi],ebp
  4152ca:	out    0xb5,al
  4152cc:	jae    0x415338
  4152ce:	inc    edx
  4152cf:	in     al,dx
  4152d0:	adc    DWORD PTR [edx+0x11acabbd],edx
  4152d6:	dec    ebp
  4152d7:	fcom   QWORD PTR [edi+0xd5d820a]
  4152dd:	add    bh,bh
  4152df:	push   es
  4152e0:	std    
  4152e1:	fdivr  QWORD PTR [ecx-0x2a]
  4152e4:	(bad)  
  4152e5:	stos   DWORD PTR es:[edi],eax
  4152e6:	lds    ebp,FWORD PTR fs:[eax+0x602f1f97]
  4152ed:	fwait
  4152ee:	or     esi,edx
  4152f0:	stc    
  4152f1:	mov    esi,0x3804e45
  4152f6:	xchg   BYTE PTR [edx-0x78],al
  4152f9:	pop    es
  4152fa:	jno    0x415349
  4152fc:	fild   WORD PTR [esi+eax*4]
  4152ff:	inc    edx
  415300:	idiv   dh
  415302:	retf   0x7506
  415305:	dec    eax
  415306:	mov    ds:0x5896e142,eax
  41530b:	xor    ah,BYTE PTR [esi+ecx*1+0x7e]
  41530f:	push   ecx
  415310:	sar    edi,cl
  415312:	ret    0x6e78
  415315:	les    esi,FWORD PTR [edx]
  415317:	inc    ebp
  415318:	pusha  
  415319:	retf   
  41531a:	mov    bl,0xc4
  41531c:	(bad)  
  41531d:	xchg   edi,eax
  41531e:	xchg   dh,dl
  415320:	stc    
  415321:	xchg   esi,eax
  415322:	adc    eax,0x65f1344e
  415327:	cmp    BYTE PTR [ecx+0x20bd3303],ah
  41532d:	cmp    eax,ecx
  41532f:	cmp    ebp,0x3
  415332:	aad    0xbb
  415334:	add    eax,0xd03f6a83
  415339:	ret    
  41533a:	(bad)  
  41533b:	repnz push ebp
  41533d:	dec    ecx
  41533e:	jle    0x415331
  415340:	nop
  415341:	xor    eax,DWORD PTR [eax]
  415343:	in     al,dx
  415344:	ds inc cx
  415347:	push   edx
  415348:	repz or DWORD PTR [ecx+0x51f35051],eax
  41534f:	icebp  
  415350:	rol    DWORD PTR [ecx],cl
  415352:	scas   al,BYTE PTR es:[edi]
  415353:	(bad)  
  415354:	push   esi
  415355:	or     ecx,ebp
  415357:	test   DWORD PTR [edx-0x35],eax
  41535a:	sub    al,0x12
  41535c:	xor    ebp,DWORD PTR [ebx]
  41535e:	jmp    0xc58ed8e8
  415363:	or     eax,0xf0e90a32
  415368:	xor    ebx,esi
  41536a:	fadd   st(5),st
  41536c:	inc    edx
  41536d:	sti    
  41536e:	xchg   ecx,eax
  41536f:	or     al,0x90
  415371:	dec    edx
  415372:	mov    al,0xc7
  415374:	inc    esi
  415375:	or     dh,BYTE PTR [ecx*1-0x79fca6a1]
  41537c:	adc    edx,ecx
  41537e:	pop    esp
  41537f:	ds dec esi
  415381:	pop    ecx
  415382:	sub    DWORD PTR [edx+0x767e0bdc],ebx
  415388:	cmp    al,BYTE PTR [ecx+0x1d4dee2c]
  41538e:	jge    0x415366
  415390:	(bad)  
  415392:	pop    esi
  415393:	std    
  415394:	sub    edx,ecx
  415396:	test   eax,0xe90e84ca
  41539b:	je     0x415390
  41539d:	xor    bl,BYTE PTR ss:[ebx+0x1]
  4153a1:	mov    al,BYTE PTR [edx+esi*1]
  4153a4:	add    DWORD PTR [edi-0x17],0x0
  4153a8:	test   ebp,esi
  4153aa:	jl     0x4153a8
  4153ac:	cmp    ebp,DWORD PTR [edx-0x33]
  4153af:	stos   BYTE PTR es:[edi],al
  4153b0:	test   eax,edi
  4153b2:	repnz cld 
  4153b4:	sub    DWORD PTR [edx+ecx*2],esi
  4153b7:	jmp    0x2ce35ec1
  4153bc:	les    eax,FWORD PTR [edx+0xa]
  4153bf:	xchg   esp,eax
  4153c0:	push   0x67
  4153c2:	outs   dx,DWORD PTR ds:[esi]
  4153c3:	add    BYTE PTR [eax-0x4b],ah
  4153c6:	cmc    
  4153c7:	test   BYTE PTR [edi+0x62c71a3f],ch
  4153cd:	out    0xc6,eax
  4153cf:	inc    ebx
  4153d0:	pop    edi
  4153d1:	fnstcw WORD PTR [ebx]
  4153d3:	inc    ecx
  4153d4:	das    
  4153d5:	mov    ebx,0xe2a80f
  4153da:	or     dl,BYTE PTR [esi+0x58]
  4153dd:	pop    edi
  4153de:	jecxz  0x4153f2
  4153e0:	pop    edi
  4153e1:	inc    esi
  4153e2:	add    BYTE PTR [ebx+edx*4+0x52],0xeb
  4153e7:	into   
  4153e8:	inc    esi
  4153e9:	mov    ch,0xf5
  4153eb:	mov    edx,DWORD PTR [edx]
  4153ed:	stos   DWORD PTR es:[edi],eax
  4153ee:	pop    ss
  4153ef:	inc    eax
  4153f0:	pop    ds
  4153f1:	sbb    DWORD PTR [ebx+ecx*4],ecx
  4153f4:	daa    
  4153f5:	adc    DWORD PTR [ebp-0x1],ebx
  4153f8:	xor    DWORD PTR [ebx+eax*1],ebx
  4153fb:	push   0xffffffdd
  4153fd:	sbb    eax,0x9ff8e881
  415402:	cmp    eax,0x74f5b76c
  415408:	loop   0x4153cb
  41540a:	cmc    
  41540b:	inc    DWORD PTR [eax]
  41540d:	rol    BYTE PTR [eax+0x38],cl
  415410:	(bad)  [edi+edi*2+0xf]
  415414:	push   ss
  415415:	out    dx,eax
  415416:	inc    edx
  415417:	push   edi
  415418:	push   DWORD PTR [ecx+0x1d]
  41541b:	cmc    
  41541c:	(bad)  
  41541d:	clc    
  41541e:	adc    al,0x4f
  415420:	mov    bl,BYTE PTR [ecx+ecx*1-0x38]
  415424:	add    al,0xaf
  415426:	pop    ds
  415427:	sub    esp,0x531e9a2c
  41542d:	mov    WORD PTR [ecx-0x2545c7a4],cs
  415433:	mov    BYTE PTR [ebx+0x6f],0x3d
  415437:	aaa    
  415438:	mov    esi,0x498dc7
  41543d:	xchg   BYTE PTR [ebp+0x4a5a139e],cl
  415443:	inc    edi
  415444:	add    BYTE PTR [esi-0x3a3ca09a],bl
  41544a:	pop    ebx
  41544b:	add    al,0x1a
  41544d:	pop    esi
  41544e:	dec    edx
  41544f:	test   ebp,edi
  415451:	dec    ecx
  415452:	call   0x9cd8c924
  415457:	hlt    
  415458:	stos   DWORD PTR es:[edi],eax
  415459:	inc    ebx
  41545a:	sbb    DWORD PTR [esi],ecx
  41545c:	stos   BYTE PTR es:[edi],al
  41545d:	js     0x415479
  41545f:	push   cs
  415460:	mov    BYTE PTR [ebx-0x79be4b3d],0x5a
  415467:	and    eax,0xf98b73fd
  41546c:	aas    
  41546d:	xchg   cl,ah
  41546f:	xor    ecx,DWORD PTR [eax]
  415471:	add    BYTE PTR [ebp+0x44e80801],dh
  415477:	mov    ds:0xac56fd9e,al
  41547c:	in     al,0xf7
  41547e:	fwait
  41547f:	sbb    ecx,DWORD PTR [esi]
  415481:	xchg   DWORD PTR [ebx-0x4d],eax
  415484:	mov    bh,al
  415486:	loope  0x4154d6
  415488:	repz xor dh,al
  41548b:	mov    al,0xf
  41548d:	mov    DWORD PTR [ebx-0x79c01b51],ebx
  415493:	xor    al,0x39
  415495:	push   ecx
  415496:	adc    edx,DWORD PTR [edi-0x21aab065]
  41549c:	dec    ebx
  41549d:	in     al,dx
  41549e:	push   edi
  41549f:	mov    BYTE PTR [edx],bh
  4154a1:	mov    ebp,0x48075b90
  4154a6:	cmp    DWORD PTR [ebx-0x2d71a480],ebp
  4154ac:	cmp    edi,esp
  4154ae:	xchg   ecx,eax
  4154af:	sub    eax,0x9689f88a
  4154b4:	dec    edx
  4154b5:	std    
  4154b6:	fwait
  4154b7:	inc    edx
  4154b8:	cmc    
  4154b9:	in     eax,dx
  4154ba:	mov    ecx,0xaaf5d642
  4154bf:	inc    edx
  4154c0:	loope  0x4154d0
  4154c2:	mov    al,0xb9
  4154c4:	scas   al,BYTE PTR es:[edi]
  4154c5:	xchg   edi,eax
  4154c6:	lahf   
  4154c7:	xor    DWORD PTR [ebp-0x19],0x94941a61
  4154ce:	push   ebx
  4154cf:	mov    ebx,0x818f0ba6
  4154d4:	jge    0x4154b6
  4154d6:	add    dh,dl
  4154d8:	icebp  
  4154d9:	jge    0x415524
  4154db:	cmp    dh,dl
  4154dd:	rcr    DWORD PTR [ecx],cl
  4154df:	xor    cl,BYTE PTR [ebp+0x56]
  4154e2:	cld    
  4154e3:	(bad)  
  4154e4:	icebp  
  4154e5:	cmp    edx,DWORD PTR [ebx-0x4533b56b]
  4154eb:	add    eax,0x12ff3d82
  4154f0:	xlat   BYTE PTR ds:[ebx]
  4154f1:	call   0xa42ea791
  4154f6:	xchg   ebx,eax
  4154f7:	or     edi,ebp
  4154f9:	clc    
  4154fa:	xchg   edx,eax
  4154fb:	jne    0x415547
  4154fd:	xchg   esp,eax
  4154fe:	stc    
  4154ff:	lea    esi,[ecx+eiz*1]
  415502:	add    al,0xff
  415504:	push   es
  415505:	jmp    0xba2a953c
  41550a:	mov    BYTE PTR [edx-0x1d80e1be],0xc0
  415511:	lea    eax,[eax]
  415513:	aaa    
  415514:	hlt    
  415515:	sbb    edx,esi
  415517:	add    DWORD PTR [edx-0x7e],ebx
  41551a:	mov    WORD PTR [ebx-0x51d69fb4],?
  415520:	inc    ecx
  415521:	push   0x5d06c3ac
  415526:	add    al,0x8e
  415528:	inc    edx
  415529:	loope  0x4154f4
  41552b:	inc    ebp
  41552c:	dec    ebp
  41552d:	loope  0x4154c1
  41552f:	adc    eax,0x6f640a56
  415534:	dec    edx
  415535:	loop   0x4154eb
  415537:	mov    bh,0x4d
  415539:	repz jb 0x41553c
  41553c:	xchg   edi,eax
  41553d:	dec    edx
  41553e:	mov    gs,WORD PTR [ecx]
  415540:	mov    fs,WORD PTR [eax]
  415542:	test   DWORD PTR [ecx+edx*1-0x7a7ca50d],ebp
  415549:	fsub   DWORD PTR [ebx]
  41554b:	call   0x42c5:0xd9e62ff4
  415552:	jg     0x41554d
  415554:	add    BYTE PTR [ebp+0x63],cl
  415557:	je     0x4154e0
  415559:	dec    esp
  41555a:	dec    ebp
  41555b:	out    0x5,al
  41555d:	enter  0xeaf2,0x9b
  415561:	jl     0x415542
  415563:	out    dx,al
  415564:	mov    edi,DWORD PTR [edx]
  415566:	push   esp
  415567:	fs call esi
  41556a:	add    DWORD PTR [esi],ebx
  41556c:	cli    
  41556d:	mov    ss,WORD PTR [esi+edi*4-0xc]
  415571:	adc    ebx,esi
  415573:	pop    ds
  415574:	cmc    
  415575:	das    
  415576:	fild   DWORD PTR cs:[ebp+0x42]
  41557a:	jg     0x41552a
  41557c:	mov    ah,0xec
  41557e:	dec    esi
  41557f:	mov    al,0xc8
  415581:	out    dx,eax
  415582:	jle    0x415509
  415584:	mov    dl,0xc2
  415586:	xor    eax,0xa01ce41
  41558b:	jmp    0x3f9d600e
  415590:	sbb    eax,0x8fe94780
  415595:	dec    ebp
  415596:	sbb    eax,0xa0bbb7d
  41559b:	imul   edx,esi,0xaacda3
  4155a1:	test   DWORD PTR [edx+0x7d],eax
  4155a4:	repz or eax,0xf44efda3
  4155aa:	(bad)  
  4155ab:	retf   0xdb00
  4155ae:	push   esi
  4155af:	into   
  4155b0:	add    eax,0x497b03
  4155b5:	add    eax,0xa900346a
  4155ba:	cmp    ah,BYTE PTR [edx-0xcc0d33b]
  4155c0:	push   ebp
  4155c1:	nop
  4155c2:	dec    edx
  4155c3:	jecxz  0x4155d7
  4155c5:	pop    ds
  4155c6:	aas    
  4155c7:	push   esp
  4155c8:	lea    ebp,[edx]
  4155ca:	mov    ebx,0x4bdaff5a
  4155cf:	add    BYTE PTR [ebp+0x57],0x2d
  4155d3:	or     al,bh
  4155d5:	sbb    bh,BYTE PTR [ebx+0x3f2f003a]
  4155db:	loop   0x4155fa
  4155dd:	daa    
  4155de:	mov    cl,0xf5
  4155e0:	push   eax
  4155e1:	push   eax
  4155e2:	xor    eax,DWORD PTR [edx]
  4155e4:	jmp    FWORD PTR [edx]
  4155e6:	adc    DWORD PTR [edi],0x40
  4155e9:	das    
  4155ea:	(bad)  
  4155eb:	retf   0x3d74
  4155ee:	daa    
  4155ef:	stos   BYTE PTR es:[edi],al
  4155f0:	jbe    0x415651
  4155f2:	inc    esi
  4155f3:	cmc    
  4155f4:	jne    0x415619
  4155f6:	mov    dl,0x17
  4155f8:	or     al,0xde
  4155fa:	dec    BYTE PTR [ecx]
  4155fc:	xor    ch,BYTE PTR [edi]
  4155fe:	lods   eax,DWORD PTR ds:[esi]
  4155ff:	or     BYTE PTR [eax+0x8c887de],dh
  415605:	add    bh,bl
  415607:	adc    eax,DWORD PTR [ecx+0x5aa26cec]
  41560d:	push   0xfff346ef
  415612:	div    DWORD PTR [esi-0x38af00b1]
  415618:	inc    esi
  415619:	lock sub al,BYTE PTR [esi+0x46d50f77]
  415620:	not    BYTE PTR ds:0x33488b
  415626:	xchg   BYTE PTR [edi],ah
  415628:	into   
  415629:	out    0x21,eax
  41562b:	pop    edx
  41562c:	pop    es
  41562d:	add    BYTE PTR ds:0x3956c748,dh
  415633:	fiadd  WORD PTR [edx]
  415635:	test   eax,0x2c007f9d
  41563b:	in     eax,0x4a
  41563d:	or     BYTE PTR ds:0xcb86ef9c,cl
  415643:	pop    es
  415644:	jne    0x415689
  415646:	jp     0x41562c
  415648:	dec    ebp
  415649:	or     BYTE PTR [edi],cl
  41564b:	lahf   
  41564c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41564d:	mov    ebx,eax
  41564f:	addr16 ret 0x5e43
  415653:	pop    esi
  415654:	pop    es
  415655:	add    BYTE PTR [esi-0x738b322a],al
  41565b:	loop   0x4156a7
  41565d:	in     al,0x41
  41565f:	pop    ss
  415660:	xchg   esi,eax
  415661:	add    DWORD PTR [esi-0x5c7ef8a5],eax
  415667:	addr16 pop es
  415669:	mov    BYTE PTR [eax],0xcb
  41566c:	js     0x415675
  41566e:	out    0x3b,eax
  415670:	pop    esp
  415671:	pop    es
  415672:	add    BYTE PTR [ebx],cl
  415674:	pushf  
  415675:	sbb    edx,DWORD PTR [eax*1+0xb0d0894]
  41567c:	xchg   edx,eax
  41567d:	pop    es
  41567e:	add    BYTE PTR [esi-0x2f3e42c],al
  415684:	push   es
  415685:	test   BYTE PTR [edx+0x796b26b],0xd
  41568c:	das    
  41568d:	test   BYTE PTR [eax+0x7b744f3b],0xce
  415694:	(bad)  
  415695:	dec    ebx
  415696:	mov    al,0x36
  415698:	rcl    BYTE PTR [eax],1
  41569a:	or     cl,al
  41569c:	push   ecx
  41569d:	or     edi,ebp
  41569f:	xchg   ebx,eax
  4156a0:	inc    edx
  4156a1:	inc    ecx
  4156a2:	div    BYTE PTR [ecx+0x42]
  4156a5:	outs   dx,BYTE PTR ds:[esi]
  4156a6:	ret    
  4156a7:	jnp    0x415668
  4156a9:	inc    esi
  4156aa:	add    eax,DWORD PTR [esi-0x29b9a4be]
  4156b0:	inc    ebx
  4156b1:	mov    ch,0x20
  4156b3:	(bad)  
  4156b4:	(bad)  
  4156b5:	jl     0x41563d
  4156b7:	(bad)  
  4156b8:	into   
  4156b9:	lahf   
  4156ba:	jp     0x415681
  4156bc:	dec    esi
  4156bd:	dec    edx
  4156be:	mov    bl,0x86
  4156c0:	inc    edx
  4156c1:	loope  0x41573f
  4156c3:	mov    ebp,0xf2ba6e2a
  4156c8:	es push 0xf4ef0d02
  4156ce:	xor    al,0x0
  4156d0:	pop    ebx
  4156d1:	iret   
  4156d2:	lock xor edi,DWORD PTR [eax+0x4687d149]
  4156d9:	cmp    DWORD PTR [ebp+0x57],esp
  4156dc:	xchg   BYTE PTR [edx-0x1f],al
  4156df:	jl     0x4156a6
  4156e1:	push   esi
  4156e2:	les    si,DWORD PTR [eax-0x6de62bd6]
  4156e9:	mov    ebp,0xcf239436
  4156ee:	lock jp 0x415740
  4156f1:	pop    edx
  4156f2:	fmul   QWORD PTR [edx-0x3b92b6ed]
  4156f8:	jnp    0x4156b8
  4156fa:	push   esi
  4156fb:	add    al,0x86
  4156fd:	inc    edx
  4156fe:	push   0xf9426e06
  415703:	add    eax,DWORD PTR [esi-0x6be1b7]
  415709:	ja     0x4156a7
  41570b:	xor    al,0x8a
  41570d:	mov    ebx,0x8205a02e
  415712:	or     al,0x5f
  415714:	pop    ecx
  415715:	aaa    
  415716:	je     0x415711
  415718:	jne    0x41574a
  41571a:	or     ch,BYTE PTR [ecx]
  41571c:	mov    cl,BYTE PTR ds:0x4285c637
  415722:	jge    0x4156fd
  415724:	sbb    eax,DWORD PTR ds:0x2d8e09ba
  41572a:	jg     0x4156d8
  41572c:	ffree  st(4)
  41572e:	retf   0x1cd4
  415731:	or     cl,BYTE PTR [ebx]
  415733:	mov    esp,0x8da9000
  415738:	ds jne 0x415779
  41573b:	repz fcomp QWORD PTR ds:0xee94a34
  415742:	cmp    DWORD PTR [ebp-0x47],0x4b
  415746:	or     DWORD PTR ds:[ecx-0x69],ebp
  41574a:	dec    edx
  41574b:	or     DWORD PTR [ebx+ecx*4-0x7cef8a3e],ebx
  415752:	into   
  415753:	xor    al,0x6
  415755:	outs   dx,DWORD PTR ds:[esi]
  415756:	xor    al,BYTE PTR [ebp+0x9dd19a4]
  41575c:	cdq    
  41575d:	adc    ah,dl
  41575f:	loope  0x41574f
  415761:	ds xchg esp,eax
  415763:	sbb    BYTE PTR [ecx],ch
  415765:	mov    cl,BYTE PTR [ebx]
  415767:	or     al,ch
  415769:	test   DWORD PTR [edx+0x3],eax
  41576c:	ins    BYTE PTR es:[edi],dx
  41576d:	mov    eax,DWORD PTR [ebp-0xd]
  415770:	into   
  415771:	inc    eax
  415772:	add    al,0xfe
  415774:	xor    eax,0xd2f34829
  415779:	sbb    al,0x13
  41577b:	shr    DWORD PTR [edx+0xd],0x45
  41577f:	add    edx,DWORD PTR [edx+eax*8-0x1]
  415783:	mov    BYTE PTR [eax-0x16f5bdca],cl
  415789:	add    al,0x88
  41578b:	or     al,0x60
  41578d:	inc    esi
  41578e:	dec    esi
  41578f:	(bad)  
  415791:	ret    
  415792:	add    esi,ebx
  415794:	add    dh,bl
  415796:	mov    eax,0xf700f077
  41579b:	(bad)  
  41579c:	push   ebp
  41579d:	(bad)  
  41579e:	cmp    ah,al
  4157a0:	outs   dx,DWORD PTR ds:[esi]
  4157a1:	hlt    
  4157a2:	scas   eax,DWORD PTR es:[edi]
  4157a3:	sbb    BYTE PTR [ebx+ebx*2-0x2d],dl
  4157a7:	inc    esi
  4157a8:	div    BYTE PTR [ebp+0x53]
  4157ab:	mov    eax,0x3a12417
  4157b0:	or     cl,BYTE PTR [edx-0x3d34471e]
  4157b6:	mov    bl,0x43
  4157b8:	pop    esp
  4157b9:	mov    edx,DWORD PTR [edx+0x6f401def]
  4157bf:	adc    BYTE PTR [eax+0x1],ah
  4157c2:	test   al,0x2f
  4157c4:	cs adc al,0x94
  4157c7:	push   ecx
  4157c8:	adc    BYTE PTR [ebx+eax*2+0x47],0x82
  4157cd:	iret   
  4157ce:	xchg   DWORD PTR [ecx+eiz*8-0x35409100],ecx
  4157d5:	je     0x41582b
  4157d7:	sub    DWORD PTR [ecx],ecx
  4157d9:	push   edi
  4157da:	dec    eax
  4157db:	mov    es,WORD PTR [ecx+0x77b8b2f8]
  4157e1:	out    0x8,al
  4157e3:	adc    eax,0x101f08c8
  4157e8:	sub    esp,0x83f29a9c
  4157ee:	dec    ebx
  4157ef:	dec    edx
  4157f0:	pop    edx
  4157f1:	push   esi
  4157f2:	push   eax
  4157f3:	mov    ch,0x77
  4157f5:	or     al,0x94
  4157f7:	mov    ah,0xf5
  4157f9:	jne    0x415812
  4157fb:	int3   
  4157fc:	jge    0x415822
  4157fe:	add    BYTE PTR [ebx-0x28dbba35],dl
  415804:	mov    ch,0x17
  415806:	clc    
  415807:	in     al,dx
  415808:	add    cl,BYTE PTR [edx]
  41580a:	mov    eax,edi
  41580c:	mov    esi,0xd5860fd1
  415811:	jo     0x415813
  415813:	xchg   BYTE PTR [ecx-0xa],bl
  415816:	mov    ah,0x43
  415818:	push   ecx
  415819:	je     0x41585f
  41581b:	mov    ds:0x3afd3761,al
  415820:	jne    0x41581d
  415822:	or     al,0xf1
  415824:	sbb    eax,0x1a846a0a
  415829:	scas   al,BYTE PTR es:[edi]
  41582a:	adc    BYTE PTR [ebp+0x1a],bh
  41582d:	ds push 0xffffff86
  415830:	or     DWORD PTR [ebx+0x3a598600],0xfb557bfd
  41583a:	aas    
  41583b:	xchg   dh,bl
  41583d:	int    0x73
  41583f:	mov    cl,BYTE PTR [eax-0x5e]
  415842:	jmp    0x24833921
  415847:	mov    ds,eax
  415849:	test   ebp,edi
  41584b:	repz xchg esi,eax
  41584d:	jb     0x415882
  41584f:	bound  ecx,QWORD PTR [ecx+0x47]
  415852:	add    ah,ch
  415854:	sub    edi,DWORD PTR [ecx]
  415856:	xchg   DWORD PTR [edx+0x30fce377],esi
  41585c:	rol    edx,1
  41585e:	call   DWORD PTR [ebp+0xb079b]
  415864:	xchg   BYTE PTR [ebx+0x7],bl
  415867:	or     dh,dl
  415869:	icebp  
  41586a:	popf   
  41586b:	push   ecx
  41586c:	sub    DWORD PTR [ebp-0x1f6d8c7a],ecx
  415872:	cmp    ah,BYTE PTR [esi+eiz*2]
  415875:	je     0x415893
  415877:	or     ch,bh
  415879:	psrad  mm2,QWORD PTR [edi]
  41587c:	push   ds
  41587d:	repz test ch,bh
  415880:	add    DWORD PTR [edx],eax
  415882:	sahf   
  415883:	std    
  415884:	jb     0x4158c5
  415886:	out    0x88,al
  415888:	into   
  415889:	inc    edx
  41588a:	lods   al,BYTE PTR ds:[esi]
  41588b:	mov    ch,0xa5
  41588d:	inc    ebp
  41588e:	xchg   esp,eax
  41588f:	mov    ebx,ds
  415891:	repnz push es
  415893:	xchg   esp,eax
  415894:	fcmovne st,st(6)
  415896:	int3   
  415897:	out    dx,eax
  415898:	shr    BYTE PTR [ebp-0x68],cl
  41589b:	add    eax,0x1fd4d05
  4158a0:	or     DWORD PTR ds:0x820f2e1c,edi
  4158a6:	sbb    BYTE PTR [ecx-0x5b],bh
  4158a9:	out    0x1e,eax
  4158ab:	sti    
  4158ac:	test   eax,0x973b65f0
  4158b1:	in     al,dx
  4158b2:	mov    bl,0x80
  4158b4:	xchg   ecx,eax
  4158b5:	cmp    al,0xdc
  4158b7:	cmp    eax,0xa8ef4c57
  4158bc:	std    
  4158bd:	cli    
  4158be:	xor    ebx,DWORD PTR [eax-0x185a4650]
  4158c4:	mov    DWORD PTR [eax-0x5dfffd13],edi
  4158ca:	adc    ch,ch
  4158cc:	cli    
  4158cd:	repnz or ch,BYTE PTR [ebp-0x58]
  4158d1:	fisubr DWORD PTR [esi]
  4158d3:	ffreep st(3)
  4158d5:	call   0x2184:0x82ff833b
  4158dc:	push   0xffffffdc
  4158de:	cmp    BYTE PTR [esp+edx*4+0x29fb743],dl
  4158e5:	add    ch,BYTE PTR [ecx-0x2c]
  4158e8:	dec    ebp
  4158e9:	inc    esi
  4158ea:	xor    eax,0x5287c775
  4158ef:	cmp    al,BYTE PTR [edi-0x46a3bae7]
  4158f5:	push   edi
  4158f6:	jo     0x41593f
  4158f8:	(bad)  
  4158f9:	(bad)  
  4158fa:	jnp    0x415926
  4158fc:	xchg   ebx,eax
  4158fd:	sbb    DWORD PTR [ecx+0x28de939f],edi
  415903:	or     ch,BYTE PTR [ecx-0x4f7a4be]
  415909:	vrcpss xmm0,xmm3,DWORD PTR [edx-0x40]
  41590e:	cmp    eax,0xebda130a
  415913:	cs test al,0x71
  415916:	inc    ebx
  415917:	aaa    
  415918:	test   eax,0xe584f2c9
  41591d:	test   BYTE PTR [eax-0x2f2742f5],bh
  415923:	inc    esp
  415925:	leave  
  415926:	or     BYTE PTR [eax],cl
  415928:	test   DWORD PTR [edi+0xc2ca13],0xb70394c0
  415932:	push   ds
  415933:	iret   
  415934:	or     BYTE PTR [edx-0x67],al
  415937:	mov    edx,0xd2ba0d0c
  41593c:	add    BYTE PTR ds:0xa70ccdbb,al
  415942:	push   eax
  415943:	push   ebx
  415944:	js     0x41597e
  415946:	dec    ecx
  415947:	push   ebx
  415948:	jle    0x4158da
  41594a:	add    eax,0x999c5405
  41594f:	xor    eax,0x74e128bc
  415954:	pop    ds
  415955:	es dec ecx
  415957:	jl     0x4159d6
  415959:	mov    al,ds:0x65a5a94
  41595e:	std    
  41595f:	inc    ebp
  415960:	mov    gs,WORD PTR [ecx]
  415962:	xchg   esi,eax
  415963:	add    eax,0x5a44624c
  415968:	or     al,0x69
  41596a:	cmp    al,0xe6
  41596c:	jge    0x41595a
  41596e:	(bad)  
  41596f:	or     edi,esi
  415971:	pop    ebx
  415972:	hlt    
  415973:	or     edi,esi
  415975:	pop    ebp
  415976:	ds mov ebx,0xc1d202c4
  41597c:	icebp  
  41597d:	add    BYTE PTR ds:0x7446292e,bl
  415983:	mov    ecx,esp
  415985:	or     esp,DWORD PTR [ebp+0x41]
  415988:	xor    BYTE PTR ss:[ebp-0x77c6d0bb],ch
  41598f:	inc    ecx
  415990:	dec    esp
  415991:	cmp    eax,DWORD PTR [eax]
  415993:	cld    
  415994:	sub    eax,0x65298be3
  415999:	mov    ah,0x83
  41599b:	test   DWORD PTR [ebx+0x79],0x21815406
  4159a2:	(bad)  
  4159a3:	adc    al,0x3e
  4159a5:	cmp    eax,eax
  4159a7:	xchg   ecx,eax
  4159a8:	adc    ecx,ecx
  4159aa:	push   ebp
  4159ab:	and    al,0xab
  4159ad:	mov    esp,ebp
  4159af:	mov    ecx,DWORD PTR [ebx]
  4159b1:	pop    esp
  4159b2:	mov    edi,DWORD PTR [edi]
  4159b4:	les    eax,FWORD PTR [esi+0x8]
  4159b7:	fadd   st,st(6)
  4159b9:	inc    esi
  4159ba:	clc    
  4159bb:	inc    esp
  4159bc:	push   ebx
  4159bd:	cmp    BYTE PTR [ebp+0x47],0xc4
  4159c1:	retf   
  4159c2:	call   0x3711fa
  4159c7:	in     al,0x97
  4159c9:	xchg   ebx,ebx
  4159cb:	cmp    cl,BYTE PTR [ebp-0xa]
  4159ce:	inc    ebp
  4159cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159d0:	or     DWORD PTR [ecx-0x12cfa002],ecx
  4159d6:	xor    ebp,DWORD PTR [edi-0x59a4abe8]
  4159dc:	jge    0x4159e0
  4159de:	add    BYTE PTR [esp+ebp*4],dh
  4159e1:	mov    bh,BYTE PTR [ebp+0x33]
  4159e4:	aas    
  4159e5:	mov    esi,DWORD PTR [ebp+0x33]
  4159e8:	clc    
  4159e9:	rol    DWORD PTR [eax],0x1f
  4159ec:	aas    
  4159ed:	ja     0x4159f3
  4159ef:	fs scas al,BYTE PTR es:[edi]
  4159f1:	js     0x4159d6
  4159f3:	xchg   esp,eax
  4159f4:	or     esi,edx
  4159f6:	add    DWORD PTR [eax],0xffffff86
  4159f9:	div    cl
  4159fb:	inc    DWORD PTR [edx]
  4159fd:	sub    eax,0x7dc336f5
  415a02:	sbb    al,0x1
  415a04:	nop    DWORD PTR [edx+0xe8d7b81]
  415a0b:	jbe    0x41599e
  415a0d:	loopne 0x415a49
  415a0f:	or     al,0xfd
  415a11:	adc    eax,0xd5c72982
  415a16:	shr    DWORD PTR [esi],0xee
  415a19:	mov    al,0x80
  415a1b:	std    
  415a1c:	rcr    ebp,1
  415a1e:	int    0x73
  415a20:	jge    0x4159de
  415a22:	xor    ecx,DWORD PTR [ecx*1+0x4338f21e]
  415a29:	int    0x1b
  415a2b:	fbstp  TBYTE PTR [ecx-0x61aa04b3]
  415a31:	dec    eax
  415a32:	and    eax,DWORD PTR [eax]
  415a34:	xchg   ah,ah
  415a36:	add    bh,al
  415a38:	or     eax,0x9ec174f1
  415a3d:	jle    0x415ab8
  415a3f:	std    
  415a40:	mov    DWORD PTR [esi+0x9],ebp
  415a43:	xchg   ebx,ecx
  415a45:	jg     0x415ac2
  415a47:	jae    0x415a93
  415a49:	aam    0x8e
  415a4b:	cs aaa 
  415a4d:	sub    al,0x7
  415a4f:	xor    DWORD PTR [esp+eiz*4+0x46],edx
  415a53:	jbe    0x415a1b
  415a55:	sub    esi,DWORD PTR [esi-0x38]
  415a58:	popf   
  415a59:	push   ebp
  415a5a:	icebp  
  415a5b:	inc    edx
  415a5c:	add    BYTE PTR [ecx+0x13],al
  415a5f:	and    al,0xfc
  415a61:	mov    bh,0x38
  415a63:	xor    al,0x43
  415a65:	inc    edx
  415a66:	fdiv   QWORD PTR [ebp-0x3a]
  415a69:	(bad)  
  415a6a:	fnstsw WORD PTR [eax+ebp*2]
  415a6d:	cmp    al,0x2c
  415a6f:	pop    es
  415a70:	add    BYTE PTR [esi],bl
  415a72:	inc    ebx
  415a73:	ret    
  415a74:	dec    esp
  415a75:	xchg   BYTE PTR [edx+0x60],al
  415a78:	mov    edi,0xbec9997e
  415a7d:	mov    ecx,0x9588c441
  415a82:	fld    DWORD PTR ds:[esi+0x59]
  415a86:	inc    ecx
  415a87:	mov    ah,0x7c
  415a89:	inc    ebp
  415a8a:	dec    esi
  415a8b:	or     BYTE PTR [edi],bh
  415a8d:	jle    0x415ad4
  415a8f:	mov    al,ds:0x9a3a4504
  415a94:	aas    
  415a95:	jecxz  0x415ad8
  415a97:	xchg   esp,eax
  415a98:	comiss xmm4,DWORD PTR cs:[edx-0x69]
  415a9d:	inc    esi
  415a9e:	inc    esp
  415a9f:	loope  0x415aa4
  415aa1:	xor    BYTE PTR [ecx+0x4286ae19],bl
  415aa7:	loope  0x415ac6
  415aa9:	xchg   BYTE PTR [ecx],al
  415aab:	fst    DWORD PTR [eax+0x47]
  415aae:	inc    edx
  415aaf:	sbb    al,0x89
  415ab1:	xchg   ebp,eax
  415ab2:	jbe    0x415aa7
  415ab4:	inc    ebx
  415ab5:	xchg   ch,al
  415ab7:	sub    al,0xf7
  415ab9:	das    
  415aba:	inc    esp
  415abb:	leave  
  415abc:	jns    0x415a99
  415abe:	test   ecx,esp
  415ac0:	sbb    eax,DWORD PTR [eax]
  415ac2:	push   ecx
  415ac3:	arpl   WORD PTR [ecx-0xb],bx
  415ac6:	imul   edi,eax,0xcf7b88ca
  415acc:	jne    0x415a93
  415ace:	ins    DWORD PTR es:[edi],dx
  415acf:	inc    ecx
  415ad0:	and    al,0x9b
  415ad2:	lods   al,BYTE PTR ds:[esi]
  415ad3:	loope  0x415ab5
  415ad5:	add    eax,DWORD PTR [ebp-0x79fc1dec]
  415adb:	lods   al,BYTE PTR ds:[esi]
  415adc:	cmc    
  415add:	xor    ebx,esp
  415adf:	inc    edx
  415ae0:	push   esi
  415ae1:	push   cs
  415ae2:	push   ss
  415ae3:	lds    edi,FWORD PTR [eax]
  415ae5:	mov    BYTE PTR [esi],ch
  415ae7:	in     al,0x4f
  415ae9:	mov    BYTE PTR [ebx],bh
  415aeb:	(bad)  
  415aec:	or     DWORD PTR [ecx],ebp
  415aee:	jg     0x415b53
  415af0:	test   DWORD PTR [ebp+ebx*8-0x7],esi
  415af4:	mov    edx,0xe24285e9
  415af9:	gs mov dl,0x42
  415afc:	or     ah,BYTE PTR [edi+eax*8-0xe]
  415b00:	pop    ecx
  415b01:	(bad)  
  415b02:	enter  0x5b91,0xd1
  415b06:	pop    ecx
  415b07:	xchg   ecx,eax
  415b08:	or     ecx,ebp
  415b0a:	push   es
  415b0b:	add    al,BYTE PTR [ebx]
  415b0d:	pop    esp
  415b0e:	retf   0xc9c5
  415b11:	xor    al,0xea
  415b13:	jno    0x415adf
  415b15:	pcmpgtw mm3,QWORD PTR [edx-0x45]
  415b19:	sub    al,BYTE PTR [edx-0x74784e61]
  415b1f:	inc    edx
  415b20:	or     bl,BYTE PTR [edi+eax*1+0x4]
  415b24:	cmc    
  415b25:	xchg   BYTE PTR [eax],al
  415b27:	or     DWORD PTR [eax-0x7d7a1634],esp
  415b2d:	inc    ecx
  415b2e:	cld    
  415b2f:	add    dh,dl
  415b31:	or     BYTE PTR [eax+0x6c0bcac5],ah
  415b37:	retf   0x1b5
  415b3a:	mov    ecx,0xe88081fd
  415b3f:	test   ebx,eax
  415b41:	sub    ebp,ecx
  415b43:	(bad)
  415b47:	inc    edi
  415b48:	or     BYTE PTR [edx],0xe9
  415b4b:	stos   DWORD PTR es:[edi],eax
  415b4c:	mov    bl,0x37
  415b4e:	ja     0x415b72
  415b50:	add    al,0x47
  415b52:	jmp    0x155e98f2
  415b57:	push   esp
  415b58:	or     BYTE PTR [edx],0x69
  415b5b:	dec    edi
  415b5c:	clc    
  415b5d:	int3   
  415b5e:	stos   BYTE PTR es:[edi],al
  415b5f:	test   DWORD PTR [edx+0x7d],eax
  415b62:	imul   ch
  415b64:	jno    0x415b59
  415b66:	add    BYTE PTR [eax-0x4c3f7239],cl
  415b6c:	xor    eax,0x17b258a
  415b71:	dec    ecx
  415b72:	add    BYTE PTR [edi],bl
  415b74:	inc    BYTE PTR [esi]
  415b76:	mov    eax,0x10a84f2
  415b7b:	push   ecx
  415b7c:	(bad)  
  415b7d:	push   ss
  415b7e:	lock or eax,0xa9680a84
  415b84:	nop
  415b85:	dec    ecx
  415b86:	add    BYTE PTR [ebp+0x46],dl
  415b89:	bound  ebx,QWORD PTR [eax+0x0]
  415b8c:	or     eax,DWORD PTR [ebp+0x6bd2ff0a]
  415b92:	add    eax,DWORD PTR [eax-0x21]
  415b95:	mov    esp,0x500185fa
  415b9a:	adc    DWORD PTR [edx-0x8],ebp
  415b9d:	ins    DWORD PTR es:[edi],dx
  415b9e:	cmc    
  415b9f:	adc    eax,0x3334cf
  415ba4:	bound  eax,QWORD PTR [ebx]
  415ba6:	jle    0x415bc7
  415ba8:	retf   0x9c3
  415bab:	add    BYTE PTR [edi+0x3856124f],ch
  415bb1:	xor    dl,BYTE PTR [ebx+0x39465f12]
  415bb7:	ror    cl,0xc2
  415bba:	leave  
  415bbb:	je     0x415b66
  415bbd:	mov    esp,0xbea32446
  415bc2:	repz scas eax,DWORD PTR es:[edi]
  415bc4:	sahf   
  415bc5:	fmul   QWORD PTR [ebx]
  415bc7:	mov    esi,DWORD PTR [ecx-0x50cd2124]
  415bcd:	add    DWORD PTR [esi],ecx
  415bcf:	add    BYTE PTR [edx],dl
  415bd1:	mov    esp,0x33ab83e6
  415bd6:	jae    0x415c15
  415bd8:	out    0x2,eax
  415bda:	dec    ecx
  415bdb:	add    BYTE PTR [edi+0x6d],ch
  415bde:	pop    ebp
  415bdf:	jne    0x415b67
  415be1:	sbb    al,0x4d
  415be3:	fadd   DWORD PTR [ebx-0x14]
  415be6:	push   es
  415be7:	push   esi
  415be8:	inc    ecx
  415be9:	push   ds
  415bea:	fwait
  415beb:	adc    al,dh
  415bed:	sub    DWORD PTR [edi+0x6dee003b],eax
  415bf3:	dec    eax
  415bf4:	add    BYTE PTR [esi-0x1b181b4a],al
  415bfa:	es (bad) 
  415bfc:	std    
  415bfd:	add    ch,cl
  415bff:	sbb    DWORD PTR [esi],ecx
  415c01:	add    eax,0xc5c3424e
  415c06:	sub    DWORD PTR [edi],eax
  415c08:	(bad)  
  415c09:	mov    eax,ecx
  415c0b:	mov    dl,0x41
  415c0d:	xchg   BYTE PTR [edx],ch
  415c0f:	and    eax,0xf7f99bfd
  415c14:	aas    
  415c15:	xchg   BYTE PTR [ebx+0x5e135808],al
  415c1b:	sahf   
  415c1c:	call   0xfdceb0f6
  415c21:	std    
  415c22:	ins    DWORD PTR es:[edi],dx
  415c23:	test   BYTE PTR [edx],0xf6
  415c26:	sub    BYTE PTR [edi],al
  415c28:	add    BYTE PTR [esi],ch
  415c2a:	sub    ecx,DWORD PTR [eax]
  415c2c:	add    BYTE PTR [esi-0x61398ea7],al
  415c32:	push   ebx
  415c33:	add    edi,ebp
  415c35:	test   eax,0x4b8b0a42
  415c3a:	xor    eax,0x90c08937
  415c3f:	cmp    al,0x73
  415c41:	xchg   ecx,eax
  415c42:	xchg   edi,eax
  415c43:	jnp    0x415cc0
  415c45:	mov    ah,BYTE PTR [ebx-0x97174c]
  415c4b:	(bad)  
  415c4c:	std    
  415c4d:	in     al,dx
  415c4e:	pop    ss
  415c4f:	mov    ?,WORD PTR [ebx-0x6a]
  415c52:	je     0x415c57
  415c54:	cld    
  415c55:	add    BYTE PTR [ecx+0x17],ch
  415c58:	cmp    edx,DWORD PTR [esi]
  415c5a:	mov    BYTE PTR [edx-0x1f],0x80
  415c5e:	inc    edx
  415c5f:	dec    edi
  415c60:	js     0x415c20
  415c62:	pop    esi
  415c63:	inc    edx
  415c64:	xchg   esi,eax
  415c65:	test   BYTE PTR [ebx-0x62],cl
  415c68:	mov    ds:0xe14f44ba,eax
  415c6d:	comiss xmm4,DWORD PTR cs:[edx-0x68]
  415c72:	retf   0xe146
  415c75:	add    eax,DWORD PTR [esi]
  415c77:	adc    BYTE PTR [ecx+0x54],0xc7
  415c7b:	inc    edx
  415c7c:	loop   0x415cae
  415c7e:	mov    al,0x95
  415c80:	js     0x415c2d
  415c82:	fwait
  415c83:	inc    ebp
  415c84:	pinsrw mm4,WORD PTR [ecx],0x58
  415c88:	loop   0x415c8d
  415c8a:	xchg   bh,cl
  415c8c:	jne    0x415c41
  415c8e:	std    
  415c8f:	cmp    eax,0xe0049bb4
  415c94:	loopne 0x415c99
  415c96:	std    
  415c97:	xchg   DWORD PTR [ebp-0x6481ccd],ebp
  415c9d:	js     0x415c5f
  415c9f:	xchg   edx,eax
  415ca0:	cdq    
  415ca1:	aam    0xd2
  415ca3:	cmp    eax,0xb7af7e9c
  415ca8:	mov    dh,0x76
  415caa:	inc    ebp
  415cab:	push   es
  415cac:	adc    DWORD PTR [esi+ebx*4],ebx
  415caf:	cmc    
  415cb0:	pop    ds
  415cb1:	add    al,0x1e
  415cb3:	inc    ebx
  415cb4:	loope  0x415cb9
  415cb6:	push   es
  415cb7:	fimul  WORD PTR ds:[ebx]
  415cba:	add    BYTE PTR [edi-0x7e],dh
  415cbd:	loope  0x415c4b
  415cbf:	mov    esi,0xc6852158
  415cc4:	clc    
  415cc5:	dec    edx
  415cc6:	add    al,BYTE PTR [esi+0x48b56842]
  415ccc:	inc    ebx
  415ccd:	loope  0x415d11
  415ccf:	int3   
  415cd0:	mov    bh,0x4a
  415cd2:	call   0xc385:0xe90a423c
  415cd9:	lods   al,BYTE PTR ds:[esi]
  415cda:	and    DWORD PTR [ecx],ecx
  415cdc:	aas    
  415cdd:	repz jmp 0x1fab1eb3
  415ce3:	or     bh,BYTE PTR [edi]
  415ce5:	pop    edx
  415ce6:	fs enter 0xf60a,0xe
  415ceb:	or     ch,BYTE PTR [edx]
  415ced:	add    DWORD PTR [edi-0x7b],0x42
  415cf1:	jg     0x415d67
  415cf3:	cmp    edx,ecx
  415cf5:	(bad)  
  415cf6:	fs test al,0xa
  415cf9:	imul   dh
  415cfb:	add    eax,0x82a7c52a
  415d00:	inc    edx
  415d01:	mov    edx,esp
  415d03:	mov    cl,BYTE PTR [edx]
  415d05:	or     ch,cl
  415d07:	cmovo  esp,DWORD PTR [eax-0x16]
  415d0b:	in     al,0x29
  415d0d:	push   ebp
  415d0e:	cli    
  415d0f:	dec    edx
  415d10:	ret    
  415d11:	out    dx,al
  415d12:	in     eax,0x94
  415d14:	ror    eax,1
  415d16:	inc    ebx
  415d17:	sbb    BYTE PTR [edi+edi*2+0x203cf0a7],0xa8
  415d1f:	add    BYTE PTR [edx+0x4a],ch
  415d22:	or     ch,al
  415d24:	test   DWORD PTR [edi-0x44],ecx
  415d27:	push   ecx
  415d28:	(bad)  
  415d29:	mov    bl,0x4a
  415d2b:	jmp    0xfc4a9c38
  415d30:	jge    0x415cfb
  415d32:	dec    esp
  415d33:	icebp  
  415d34:	aad    0xc7
  415d36:	mov    WORD PTR [ecx+0x19f33f29],gs
  415d3c:	adc    DWORD PTR [ebx],eax
  415d3e:	jg     0x415d04
  415d40:	mov    ebp,eax
  415d42:	mov    esp,0xf33f1129
  415d47:	inc    ecx
  415d48:	imul   edi,edi,0x3310e909
  415d4e:	lea    eax,[eax]
  415d50:	mov    ecx,0xc1b91039
  415d55:	inc    ebp
  415d56:	or     al,BYTE PTR [eax]
  415d58:	loop   0x415d23
  415d5a:	fscale 
  415d5c:	mov    al,0xbf
  415d5e:	retf   
  415d5f:	add    BYTE PTR [edi+0x0],ch
  415d62:	dec    esp
  415d63:	jne    0x415d0b
  415d65:	lods   eax,DWORD PTR ds:[esi]
  415d66:	adc    al,0xff
  415d68:	jo     0x415d29
  415d6a:	xor    BYTE PTR [ebp+0x63],0xcf
  415d6e:	dec    esi
  415d6f:	or     BYTE PTR [eax-0x1572f4c7],al
  415d75:	sbb    DWORD PTR [edi+edx*2+0xf],0x28
  415d7a:	sbb    esi,DWORD PTR [edi-0x6b1dc014]
  415d80:	outs   dx,DWORD PTR ds:[esi]
  415d81:	inc    ebp
  415d82:	or     cl,BYTE PTR [edx+0x777d4700]
  415d88:	or     al,0xab
  415d8a:	dec    eax
  415d8b:	pop    esp
  415d8c:	call   0x3777be
  415d91:	push   es
  415d92:	mov    dl,0xf3
  415d94:	(bad)  
  415d95:	(bad)  
  415d97:	xchg   al,dl
  415d99:	xor    al,cl
  415d9b:	hlt    
  415d9c:	(bad)  
  415d9d:	out    dx,eax
  415d9e:	aas    
  415d9f:	dec    edx
  415da0:	dec    ecx
  415da1:	jp     0x415d60
  415da3:	add    bl,0x90
  415da6:	and    BYTE PTR [edx-0x37],dl
  415da9:	sbb    eax,0x24550a48
  415dae:	stos   DWORD PTR es:[edi],eax
  415daf:	mov    esp,esp
  415db1:	pop    es
  415db2:	(bad)  
  415db3:	in     eax,0x4c
  415db5:	stos   DWORD PTR es:[edi],eax
  415db6:	aas    
  415db7:	or     dl,BYTE PTR [ebx-0x77]
  415dba:	pop    ss
  415dbb:	xor    BYTE PTR [ebx+ecx*8-0x50000be1],0xa7
  415dc3:	pop    esp
  415dc4:	pushf  
  415dc5:	lahf   
  415dc6:	aas    
  415dc7:	jg     0x415e0d
  415dc9:	xchg   BYTE PTR [ebp+0x2a],cl
  415dcc:	push   eax
  415dcd:	adc    DWORD PTR [esi],0xd94088ff
  415dd3:	pop    esi
  415dd4:	add    dh,BYTE PTR [eax+0x7c]
  415dd7:	mov    BYTE PTR [ebx+0x4f1e4dba],cl
  415ddd:	in     al,dx
  415dde:	sub    bh,BYTE PTR [ecx+ebx*8]
  415de1:	mov    ch,0xa1
  415de3:	push   cs
  415de4:	add    BYTE PTR [esi+0x17dfa9],al
  415dea:	adc    eax,ebp
  415dec:	push   es
  415ded:	push   eax
  415dee:	pmulhw mm5,QWORD PTR [edx]
  415df1:	and    al,0xf
  415df3:	in     eax,0x2a
  415df5:	and    BYTE PTR [ecx],dh
  415df7:	push   ss
  415df8:	test   DWORD PTR [edi],0xc08229c6
  415dfe:	fwait
  415dff:	setp   BYTE PTR [edx+eiz*2+0x35]
  415e04:	xlat   BYTE PTR ds:[ebx]
  415e05:	mov    cl,dl
  415e07:	inc    ebp
  415e08:	sub    dl,BYTE PTR [eax-0x5]
  415e0b:	ins    BYTE PTR es:[edi],dx
  415e0c:	and    ah,BYTE PTR [esi+edx*2]
  415e0f:	sahf   
  415e10:	or     ah,BYTE PTR [edx+ebx*4]
  415e13:	adc    eax,edx
  415e15:	aas    
  415e16:	xchg   DWORD PTR [ecx],ebp
  415e18:	add    WORD PTR ds:0x4a8788e1,ax
  415e1f:	inc    ebp
  415e20:	adc    al,BYTE PTR [ecx-0x7be71c22]
  415e26:	add    ebp,DWORD PTR [ecx]
  415e28:	pop    es
  415e29:	add    BYTE PTR [ebp+0xb8418e8],cl
  415e2f:	sub    DWORD PTR [edi],eax
  415e31:	add    BYTE PTR ds:0x87182245,al
  415e37:	cmp    BYTE PTR ss:[eax-0x57],dl
  415e3b:	cmp    al,0x2b
  415e3d:	adc    BYTE PTR [ebx],dl
  415e3f:	dec    ebp
  415e40:	and    bl,BYTE PTR [ebx+ecx*1]
  415e43:	inc    edx
  415e44:	xchg   ebp,eax
  415e45:	sub    BYTE PTR [esi],ch
  415e47:	aas    
  415e48:	loope  0x415e4d
  415e4a:	ret    
  415e4b:	lds    eax,FWORD PTR [esp+ebx*8]
  415e4e:	add    BYTE PTR [esi-0x79fa1ebe],al
  415e54:	inc    edx
  415e55:	loope  0x415ec2
  415e57:	cdq    
  415e58:	stc    
  415e59:	loopne 0x415e5e
  415e5b:	imul   ebp,DWORD PTR [edi+0x330f1005],0x49
  415e62:	jae    0x415e19
  415e64:	cmp    DWORD PTR [ebx+ecx*4],ebp
  415e67:	ficomp DWORD PTR [esi-0x1b]
  415e6a:	xor    al,0x2f
  415e6c:	enter  0x2864,0x36
  415e70:	inc    esp
  415e71:	loope  0x415e76
  415e73:	(bad)  
  415e74:	(bad)  
  415e75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e76:	daa    
  415e77:	ror    bl,cl
  415e79:	xchg   esp,eax
  415e7a:	daa    
  415e7b:	retf   0xe32a
  415e7e:	mov    esi,0xf8684286
  415e83:	gs dec esi
  415e85:	sub    BYTE PTR [ebp-0x66],dh
  415e88:	dec    ecx
  415e89:	js     0x415e5a
  415e8b:	gs inc esi
  415e8d:	push   0xd7f0d59
  415e92:	fsubr  st(1),st
  415e94:	jo     0x415e21
  415e96:	add    eax,DWORD PTR [esi-0x50efd233]
  415e9c:	add    eax,0x73090635
  415ea1:	jp     0x415f14
  415ea3:	fnstcw WORD PTR [ecx]
  415ea5:	loope  0x415e35
  415ea7:	or     bl,BYTE PTR [edi+0x1]
  415eaa:	add    eax,DWORD PTR [esi+0x461b6942]
  415eb0:	mov    ebx,DWORD PTR [esi]
  415eb2:	jle    0x415eb4
  415eb4:	movq   mm5,mm0
  415eb7:	setg   BYTE PTR [esi+0x4a]
  415ebb:	jno    0x415e66
  415ebd:	cmp    DWORD PTR [edx],ecx
  415ebf:	jmp    0x96f1dd4
  415ec4:	test   DWORD PTR [edx+0xa],eax
  415ec7:	jno    0x415f36
  415ec9:	add    BYTE PTR [ecx-0x2c],0xb
  415ecd:	jae    0x415e99
  415ecf:	mov    dh,0x67
  415ed1:	call   0xe902:0x358447f
  415ed8:	pop    eax
  415ed9:	retf   0x98e5
  415edc:	dec    edi
  415edd:	int3   
  415ede:	dec    esp
  415edf:	xor    eax,0x4109ab35
  415ee4:	retf   
  415ee5:	cmp    bl,dh
  415ee7:	or     BYTE PTR es:[edx],al
  415eea:	jle    0x415ee7
  415eec:	add    bh,BYTE PTR [ebp+0x4d38edf6]
  415ef2:	jg     0x415ecd
  415ef4:	push   ebp
  415ef5:	and    DWORD PTR [ebx-0x64],edx
  415ef8:	push   es
  415ef9:	aaa    
  415efa:	jg     0x415f23
  415efc:	call   0xf394:0x38015a4a
  415f03:	out    dx,al
  415f04:	push   ebp
  415f05:	add    dl,BYTE PTR [eax+esi*4-0x3b]
  415f09:	xchg   ebp,eax
  415f0a:	jg     0x415ed9
  415f0c:	xor    ecx,DWORD PTR [edi+0x3ccf645b]
  415f12:	pop    edx
  415f13:	inc    ebx
  415f14:	test   BYTE PTR [edx],ch
  415f16:	xchg   edx,eax
  415f17:	mov    DWORD PTR [eax],0xb97f3771
  415f1d:	jmp    FWORD PTR [edi]
  415f1f:	jle    0x415ef7
  415f21:	or     al,0x85
  415f23:	test   BYTE PTR [ecx+0x7212b583],0xb7
  415f2a:	inc    eax
  415f2b:	pop    esp
  415f2c:	adc    ebp,DWORD PTR [edi+0x9]
  415f2f:	loop   0x415f67
  415f31:	xor    al,BYTE PTR [ebp+eax*4-0x72]
  415f35:	cmp    DWORD PTR [eax+0x19a900e2],edx
  415f3b:	idiv   bh
  415f3d:	outs   dx,DWORD PTR ds:[esi]
  415f3e:	aas    
  415f3f:	loope  0x415f49
  415f41:	and    DWORD PTR [esi-0x46d7aae2],0x16c8c038
  415f4b:	int3   
  415f4c:	ret    0x44a3
  415f4f:	push   edi
  415f50:	mov    ecx,ebx
  415f52:	ret    
  415f53:	in     eax,dx
  415f54:	clc    
  415f55:	out    dx,al
  415f56:	mov    dl,0x86
  415f58:	add    eax,0xff5d445f
  415f5d:	xor    cl,BYTE PTR [edx+eiz*8-0x59]
  415f61:	cwde   
  415f62:	mov    bh,0xf5
  415f64:	test   BYTE PTR [edi+0x2b8d3a39],ch
  415f6a:	pusha  
  415f6b:	add    ch,al
  415f6d:	sub    ebp,DWORD PTR [ebx]
  415f6f:	idiv   bh
  415f71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f72:	adc    DWORD PTR [ebx],ecx
  415f74:	lea    esp,[ebx+0x1f03e26a]
  415f7a:	inc    esp
  415f7b:	pop    edx
  415f7c:	push   0x0
  415f7e:	push   edx
  415f7f:	sbb    DWORD PTR [edx-0x7a0c7839],eax
  415f85:	jmp    FWORD PTR [eax]
  415f87:	sub    al,0x8b
  415f89:	add    eax,0x447f441f
  415f8e:	adc    DWORD PTR [edx+0x60],0x0
  415f92:	mov    edi,0xf13417b7
  415f97:	add    esi,ebx
  415f99:	and    BYTE PTR [ebx],0x48
  415f9c:	push   ebp
  415f9d:	mov    eax,edx
  415f9f:	and    cl,cl
  415fa1:	add    al,0xef
  415fa3:	sbb    al,BYTE PTR [edx+0x5d0d7eec]
  415fa9:	push   0xffffffdb
  415fab:	mov    eax,0xd5f70877
  415fb0:	push   esi
  415fb1:	inc    DWORD PTR [esi-0x45bc6630]
  415fb7:	jns    0x415f99
  415fb9:	bound  ebx,QWORD PTR [esi-0x56027548]
  415fbf:	mov    ah,0x77
  415fc1:	sbb    DWORD PTR [eax-0x39cdf4ca],0xffffffc4
  415fc8:	sub    eax,0x889d4b89
  415fcd:	clc    
  415fce:	jp     0x415fdf
  415fd0:	or     BYTE PTR [edx-0x6e],ch
  415fd3:	icebp  
  415fd4:	(bad)  
  415fd5:	push   ebp
  415fd6:	jns    0x415fe6
  415fd8:	(bad)  
  415fd9:	cld    
  415fda:	fwait
  415fdb:	cmp    DWORD PTR ds:0x4bac8640,ebx
  415fe1:	or     al,0x0
  415fe3:	mov    eax,0x5953f281
  415fe8:	push   0x72b3ffb7
  415fed:	dec    ecx
  415fee:	add    al,0x86
  415ff0:	out    dx,al
  415ff1:	jg     0x415fdf
  415ff3:	xlat   BYTE PTR ds:[ebx]
  415ff4:	cli    
  415ff5:	fcom   QWORD PTR [ebx+ecx*1-0x22]
  415ff9:	jb     0x41604b
  415ffb:	sahf   
  415ffc:	jno    0x416005
  415ffe:	add    BYTE PTR [esi+0x21fbb951],al
  416004:	xor    BYTE PTR [ecx-0x3d0fc10],al
  41600a:	sbb    edi,ebp
  41600c:	mov    ch,BYTE PTR gs:[edx-0x79]
  416010:	xchg   ebx,eax
  416011:	push   cs
  416012:	mov    eax,edx
  416014:	add    BYTE PTR [ebx],cl
  416016:	xchg   edx,eax
  416017:	xchg   DWORD PTR [ecx],ebp
  416019:	cmp    al,0xb
  41601c:	add    bl,bh
  41601e:	add    eax,0x542f1150
  416023:	loope  0x416014
  416025:	add    ch,0x39
  416028:	inc    edi
  416029:	aas    
  41602a:	sar    DWORD PTR [ebx],0x42
  41602d:	js     0x41609f
  41602f:	pop    es
  416030:	mov    ch,0xf9
  416032:	add    edx,DWORD PTR [edi-0x53]
  416035:	icebp  
  416036:	jmp    0x4eafef4
  41603b:	xchg   BYTE PTR [edx-0x50],al
  41603e:	inc    ebx
  41603f:	sahf   
  416040:	jnp    0x4160b7
  416042:	jge    0x415fe7
  416044:	sub    dh,BYTE PTR [edx+0x4a45008e]
  41604a:	adc    edx,ebp
  41604c:	xchg   ecx,eax
  41604d:	test   al,0xe2
  41604f:	jl     0x416066
  416051:	dec    edx
  416052:	pop    ecx
  416053:	xchg   edx,eax
  416054:	adc    eax,DWORD PTR [ecx+eiz*8-0x7a]
  416058:	inc    esi
  416059:	mov    al,0xed
  41605b:	xor    DWORD PTR [esi+0x2a],eax
  41605e:	jmp    0x864b:0xd94af57c
  416065:	inc    edx
  416066:	loope  0x4160d3
  416068:	ja     0x4160a0
  41606a:	and    al,0x7d
  41606c:	push   ebx
  41606d:	mov    al,0xf9
  41606f:	mov    DWORD PTR [esi],ebp
  416071:	sub    edx,DWORD PTR [edi]
  416073:	rol    DWORD PTR [edx+0x36],1
  416076:	addr16 inc ecx
  416078:	fist   WORD PTR [edi-0x3e79f7e1]
  41607e:	sbb    BYTE PTR [edx+esi*4],al
  416081:	dec    eax
  416082:	mov    ecx,0x217186f7
  416087:	inc    ecx
  416088:	lods   al,BYTE PTR ds:[esi]
  416089:	jno    0x416024
  41608b:	inc    eax
  41608c:	pushf  
  41608d:	jo     0x4160d8
  41608f:	inc    ecx
  416090:	mov    ch,0xc9
  416092:	les    eax,FWORD PTR [eax-0x3997a90e]
  416098:	lea    edx,[ecx-0x72a7a6f0]
  41609e:	jp     0x41607e
  4160a0:	in     eax,dx
  4160a1:	jp     0x41608c
  4160a3:	or     al,0xa
  4160a5:	cli    
  4160a6:	or     ecx,ebp
  4160a8:	test   DWORD PTR [edx-0x7b],eax
  4160ab:	and    al,0x0
  4160ad:	push   es
  4160ae:	xchg   ebx,eax
  4160af:	loop   0x416104
  4160b1:	dec    edi
  4160b2:	aaa    
  4160b3:	repz gs inc ebp
  4160b6:	inc    edi
  4160b7:	mov    es,WORD PTR [ebx-0x7b]
  4160ba:	inc    edx
  4160bb:	or     ah,BYTE PTR [edx-0x38]
  4160be:	cmp    eax,0x372a42e2
  4160c3:	rep ins BYTE PTR es:[edi],dx
  4160c5:	sar    BYTE PTR ds:0x820d1959,1
  4160cb:	repnz sbb DWORD PTR [edi],0xfe66f336
  4160d2:	mov    ecx,0x8ff57202
  4160d7:	jg     0x416100
  4160d9:	in     eax,dx
  4160da:	retf   0xe906
  4160dd:	test   DWORD PTR [esi-0x73804337],edi
  4160e3:	loop   0x4160a8
  4160e5:	ss ss repz cli 
  4160e9:	shl    DWORD PTR [ebx-0xd],cl
  4160ec:	cli    
  4160ed:	vandps xmm2,xmm6,XMMWORD PTR [ecx]
  4160f1:	cld    
  4160f2:	mov    eax,0x253870e6
  4160f7:	xor    DWORD PTR [ecx+esi*4-0x6b6a0885],0x837c147a
  416102:	xor    BYTE PTR [edx],0x9f
  416105:	test   BYTE PTR [esi+0x33aeaf07],ch
  41610b:	das    
  41610c:	sub    dl,BYTE PTR [edx]
  41610e:	je     0x416103
  416110:	pop    esp
  416111:	add    BYTE PTR [esi-0x37],bh
  416114:	je     0x4160e7
  416116:	jb     0x416168
  416118:	push   cs
  416119:	jmp    0x560b1fa3
  41611e:	retf   0x7d35
  416121:	add    BYTE PTR [edi],ch
  416123:	lds    eax,FWORD PTR [esi-0x14]
  416126:	and    BYTE PTR [ebx],dh
  416128:	sti    
  416129:	call   0x3716a8
  41612e:	gs xchg esi,eax
  416130:	jg     0x4161a7
  416132:	mul    DWORD PTR [ebp+0x40af031e]
  416138:	jg     0x4161af
  41613a:	adc    esp,DWORD PTR [esi-0x46ff05e6]
  416140:	add    bl,0x14
  416143:	push   0x10b375f5
  416148:	not    BYTE PTR ds:0x4a4dbf
  41614e:	sub    bh,BYTE PTR [esi+0x7e]
  416151:	ficom  WORD PTR [edx]
  416153:	add    ebp,ebx
  416155:	call   0x4b9d53
  41615a:	xchg   esp,eax
  41615b:	jnp    0x4161d4
  41615d:	out    0xc4,al
  41615f:	in     eax,dx
  416160:	jle    0x4161d7
  416162:	xlat   BYTE PTR ds:[ebx]
  416163:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416164:	out    dx,al
  416165:	add    ch,BYTE PTR [edi+0x40]
  416168:	jg     0x4161df
  41616a:	xchg   ebx,eax
  41616b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41616c:	jmp    0x40c0:0x38b7a0f9
  416173:	sbb    dl,BYTE PTR [edx-0x37]
  416176:	add    BYTE PTR [ebp+0x46],ch
  416179:	or     dl,BYTE PTR [ebp-0x5c]
  41617c:	stos   BYTE PTR es:[edi],al
  41617d:	inc    ebx
  41617e:	push   ecx
  41617f:	in     al,dx
  416180:	adc    DWORD PTR [esi-0x73],ebx
  416183:	fidiv  DWORD PTR [edi+0x3eb8685a]
  416189:	or     al,BYTE PTR [eax]
  41618b:	xchg   DWORD PTR [eax-0xa],ebp
  41618e:	jmp    DWORD PTR [eax]
  416190:	vshufpd xmm3,xmm0,XMMWORD PTR [edx-0x49],0xa
  416196:	test   ecx,ebx
  416198:	and    ebp,DWORD PTR [edi]
  41619a:	mov    eax,DWORD PTR [esi-0x719589a2]
  4161a0:	pop    eax
  4161a1:	pop    esp
  4161a2:	mov    edi,eax
  4161a4:	pop    esp
  4161a5:	ja     0x41619c
  4161a7:	or     ebx,eax
  4161a9:	stc    
  4161aa:	sub    ecx,DWORD PTR [ebx]
  4161ac:	push   cs
  4161ad:	ds mov eax,edx
  4161b0:	xor    BYTE PTR [ecx+esi*2-0x5b],bh
  4161b4:	dec    edi
  4161b5:	sbb    bh,ch
  4161b7:	cmp    esi,DWORD PTR [ecx]
  4161b9:	add    BYTE PTR [ebp-0x7e],0x79
  4161bd:	outs   dx,DWORD PTR ds:[esi]
  4161be:	adc    esi,DWORD PTR [edx+0x2b]
  4161c1:	(bad)  
  4161c2:	inc    DWORD PTR [esi+eiz*8]
  4161c5:	or     al,BYTE PTR [ebx-0x7ef9d23a]
  4161cb:	rcl    DWORD PTR [ecx],0x34
  4161ce:	stc    
  4161cf:	adc    al,0xc8
  4161d1:	arpl   WORD PTR [eax+eax*8],ax
  4161d4:	out    0x6f,al
  4161d6:	(bad)  
  4161d7:	fist   DWORD PTR [ecx+0x79005286]
  4161dd:	mov    WORD PTR [ebp-0x2f1b8ebd],es
  4161e3:	pop    eax
  4161e4:	aas    
  4161e5:	addr16 repz (bad) 
  4161e8:	mov    edx,0xdb816bb0
  4161ed:	and    DWORD PTR [edi],eax
  4161ef:	push   ecx
  4161f0:	mov    eax,0xcb8139ed
  4161f5:	sub    eax,0x54717607
  4161fa:	cli    
  4161fb:	or     edi,DWORD PTR [ecx]
  4161fd:	(bad)  
  4161fe:	(bad)  
  4161ff:	out    0x57,eax
  416201:	imul   DWORD PTR [edi-0x3]
  416204:	std    
  416205:	cmp    BYTE PTR [ebx-0xa],dh
  416208:	fwait
  416209:	sbb    eax,0x12dc03d
  41620e:	test   BYTE PTR [ebx-0x7e],al
  416211:	retf   
  416212:	ficom  WORD PTR [edi+0x3e14286]
  416218:	out    dx,al
  416219:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41621a:	out    0x79,eax
  41621c:	sti    
  41621d:	mov    esp,DWORD PTR [edi+0x5c]
  416220:	fidivr WORD PTR [esi+0x2f]
  416223:	jns    0x416210
  416225:	(bad)  
  416226:	lahf   
  416227:	ins    DWORD PTR es:[edi],dx
  416228:	nop
  416229:	test   al,0xe1
  41622b:	jmp    0x41621e
  41622d:	inc    ecx
  41622e:	loope  0x416233
  416230:	xchg   edi,eax
  416231:	add    cl,cl
  416233:	aam    0xcf
  416235:	xor    ch,BYTE PTR [edx+ebx*8+0xc9f955e]
  41623c:	xchg   BYTE PTR [ebp+0x41006868],cl
  416242:	xchg   ecx,eax
  416243:	cmp    eax,DWORD PTR [edi-0x13eec9bb]
  416249:	clc    
  41624a:	inc    ecx
  41624b:	loope  0x416250
  41624d:	scas   al,BYTE PTR es:[edi]
  41624e:	mov    cl,0x78
  416250:	jns    0x4161e5
  416252:	(bad)  
  416253:	test   al,0x7f
  416255:	shr    DWORD PTR [ebp+0x2ec58d0d],0xd7
  41625c:	adc    BYTE PTR [edi+0x7870bb14],dh
  416262:	enter  0xef2e,0x7b
  416266:	imul   esi,DWORD PTR [esi+0x783bd477],0xffffffcf
  41626d:	cmp    DWORD PTR [ebx+0x1e118cde],0x2261d2e9
  416277:	mov    dl,0x78
  416279:	inc    ebx
  41627a:	jbe    0x41629d
  41627c:	fiadd  DWORD PTR [eax+0x5]
  41627f:	in     eax,0x3
  416281:	rol    ebp,0x84
  416284:	pop    ds
  416285:	jle    0x4162c9
  416287:	nop
  416288:	sar    DWORD PTR [edx+0x467ebbb6],1
  41628e:	mov    bh,0xa
  416290:	mov    ebx,0x621af222
  416295:	mov    dl,BYTE PTR [edi+0x4aa65df3]
  41629b:	loop   0x4162be
  41629d:	shr    BYTE PTR [esi],1
  41629f:	repz bound esi,QWORD PTR [ebp-0x3b]
  4162a3:	sti    
  4162a4:	push   esp
  4162a5:	add    BYTE PTR [esi-0x592d358c],al
  4162ab:	cwde   
  4162ac:	bound  esp,QWORD PTR [eax-0x7b]
  4162af:	inc    edx
  4162b0:	or     ah,BYTE PTR [edx+0x46]
  4162b3:	sbb    bl,al
  4162b5:	mov    al,0x4e
  4162b7:	das    
  4162b8:	pop    esp
  4162b9:	jae    0x416318
  4162bb:	sbb    bl,BYTE PTR [edi-0x7fd0c0c8]
  4162c1:	stos   BYTE PTR es:[edi],al
  4162c2:	and    al,BYTE PTR [eax+0x60]
  4162c5:	jmp    0xe94b3b67
  4162ca:	test   DWORD PTR [ebx-0x36],esi
  4162cd:	xchg   ecx,eax
  4162ce:	fnstsw WORD PTR [ecx]
  4162d0:	repz jbe 0x416281
  4162d3:	(bad)  
  4162d4:	dec    edi
  4162d5:	adc    BYTE PTR [eax+0x46],al
  4162d8:	or     bh,BYTE PTR [edx+edx*1+0x56b7591e]
  4162df:	mov    esp,0xa955554c
  4162e4:	nop
  4162e5:	jmp    0x1f23a56f
  4162ea:	jecxz  0x41631b
  4162ec:	repz jb 0x4162c4
  4162ef:	(bad)  
  4162f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162f3:	mov    ebx,0xb0c2d4c
  4162f8:	or     ecx,ebp
  4162fa:	test   DWORD PTR [ebx-0x28],esi
  4162fd:	jb     0x4162bb
  4162ff:	aaa    
  416300:	sti    
  416301:	ins    BYTE PTR es:[edi],dx
  416302:	(bad)  [ebp+0x2d40d004]
  416308:	js     0x41630a
  41630a:	add    BYTE PTR [esi],dl
  41630c:	mov    esi,0x4496083e
  416311:	add    esi,0xe85c3d84
  416317:	in     eax,dx
  416318:	adc    esi,esi
  41631a:	call   FWORD PTR [esi+eax*4-0x7bc9a1ab]
  416321:	push   cs
  416322:	add    BYTE PTR [esi-0x18db8a3b],ch
  416328:	inc    esp
  416329:	pop    ecx
  41632a:	push   esi
  41632b:	xor    BYTE PTR [edx],0x3c
  41632e:	test   DWORD PTR [edi],ebp
  416330:	xor    bh,BYTE PTR [eax]
  416332:	imul   ebx,DWORD PTR [edi],0xdffff38d
  416338:	mov    ebx,0x31e857f1
  41633d:	daa    
  41633e:	sbb    BYTE PTR [edi],dl
  416340:	rol    DWORD PTR [edx-0x1],0x18
  416344:	mov    ebp,0x331185f9
  416349:	pop    es
  41634a:	xor    ch,bh
  41634c:	pushf  
  41634d:	sub    eax,0x9cc7756
  416352:	add    BYTE PTR [edi-0x31173345],bl
  416358:	lods   eax,DWORD PTR ds:[esi]
  416359:	cmc    
  41635a:	inc    DWORD PTR [ecx-0x46]
  41635d:	shr    eax,1
  41635f:	jne    0x416378
  416361:	idiv   bh
  416363:	in     eax,0x83
  416365:	loope  0x416375
  416367:	inc    ebp
  416368:	inc    esp
  416369:	bound  ebx,QWORD PTR [edx+0x330a446f]
  41636f:	add    BYTE PTR [edi-0x6706e262],ch
  416375:	mov    bh,0x55
  416377:	pop    esi
  416378:	hlt    
  416379:	push   cs
  41637a:	leave  
  41637b:	add    al,0x2f
  41637d:	adc    eax,DWORD PTR [edx+0x5d16feec]
  416383:	lea    eax,[esi-0x61af8522]
  416389:	mov    bh,0xe
  41638b:	add    BYTE PTR [esi+0x19fa2451],al
  416391:	xor    DWORD PTR [eax-0x59cf438],eax
  416397:	sbb    edi,ebp
  416399:	out    0x7a,al
  41639b:	push   0xffffffbe
  41639d:	dec    esp
  41639e:	pop    eax
  41639f:	pop    esi
  4163a0:	icebp  
  4163a1:	pop    ss
  4163a2:	mov    dl,dl
  4163a4:	jnp    0x4163cd
  4163a6:	ss jae 0x416393
  4163a9:	mov    eax,DWORD PTR ds:0x86313b89
  4163af:	add    cl,BYTE PTR ds:0x37085fdb
  4163b5:	add    DWORD PTR [edx+0x37e0c950],edi
  4163bb:	shl    BYTE PTR [eax-0xe],0x48
  4163bf:	add    al,0x86
  4163c1:	jbe    0x416442
  4163c3:	in     al,dx
  4163c4:	push   edi
  4163c5:	push   0xffffffc4
  4163c7:	mov    al,BYTE PTR [ebx-0x43]
  4163ca:	(bad)  
  4163cb:	imul   ebp,DWORD PTR [edx],0x99f764d1
  4163d1:	mov    al,0x80
  4163d3:	enter  0xb00,0xe3
  4163d7:	loop   0x4163f4
  4163d9:	std    
  4163da:	data16 jb 0x416447
  4163dd:	mov    esp,0x715e584c
  4163e2:	xchg   edi,eax
  4163e3:	mov    dl,dl
  4163e5:	sti    
  4163e6:	daa    
  4163e7:	ss jae 0x416454
  4163ea:	or     eax,DWORD PTR [esi]
  4163ec:	mov    DWORD PTR [ebx+0xd028631],edi
  4163f2:	pop    edx
  4163f3:	pusha  
  4163f4:	or     BYTE PTR [edi+0x494ffa81],dh
  4163fa:	pusha  
  4163fb:	cmp    al,al
  4163fd:	loopne 0x416441
  4163ff:	cmp    al,BYTE PTR [ecx-0x7e]
  416402:	inc    edx
  416403:	mov    esi,0x4c3228a
  416408:	jnp    0x4163c3
  41640a:	ret    
  41640b:	test   DWORD PTR [ebx],ecx
  41640d:	xchg   BYTE PTR [ebx+0x7495ce93],dl
  416413:	outs   dx,BYTE PTR ds:[esi]
  416414:	inc    ebx
  416415:	call   0xf8bb:0x4c438860
  41641c:	int    0x2
  41641e:	mov    ch,0xf9
  416420:	imul   edi,DWORD PTR [edx+edx*4],0xffffffd4
  416424:	jne    0x416425
  416426:	xor    DWORD PTR [esi+0x6e],esp
  416429:	jne    0x416471
  41642b:	cmove  ebp,edi
  41642e:	pusha  
  41642f:	adc    ebp,edx
  416431:	gs mov ebx,0x2a3b6cab
  416437:	mov    esp,0xbc300075
  41643c:	cwde   
  41643d:	ins    BYTE PTR es:[edi],dx
  41643e:	jbe    0x4163d2
  416440:	lods   al,BYTE PTR ds:[esi]
  416441:	jne    0x41644f
  416443:	add    ebx,DWORD PTR [eax+0x7421c09]
  416449:	loopne 0x4164c1
  41644b:	add    cl,BYTE PTR [ecx-0x73d1663c]
  416451:	aad    0x3b
  416453:	mov    edi,DWORD PTR [eax+0x5f]
  416456:	sub    eax,0x3703e504
  41645b:	jae    0x4163f5
  41645d:	cmp    al,0xa0
  41645f:	mov    bh,0xf9
  416461:	je     0x416453
  416463:	cmp    bl,BYTE PTR [ecx+0xb]
  416466:	(bad)  
  416467:	sub    eax,0xbb888c5c
  41646c:	mov    ds:0xf98d08ff,al
  416471:	mov    bh,BYTE PTR [eax-0x23bf57c2]
  416477:	ds or  al,cl
  41647a:	lea    edx,[edx-0x1f5216b9]
  416480:	bnd call 0xe319d80b
  416486:	mov    edi,0x316a2fb6
  41648b:	inc    esi
  41648c:	or     BYTE PTR [edi+0x55cc570],cl
  416492:	push   edi
  416493:	add    al,BYTE PTR [ecx+0x4d6bb1a4]
  416499:	loope  0x4164ab
  41649b:	bound  esi,QWORD PTR [edx]
  41649d:	aad    0x0
  41649f:	lea    esi,[ecx+0x45d6211d]
  4164a5:	or     DWORD PTR [ebx+ecx*4-0x3d],edx
  4164a9:	leave  
  4164aa:	jmp    0x41645a
  4164ac:	add    DWORD PTR [edx],0x870311de
  4164b2:	xor    al,0x5e
  4164b4:	das    
  4164b5:	(bad)  
  4164b7:	lds    ebx,FWORD PTR [edx]
  4164b9:	iret   
  4164ba:	cli    
  4164bb:	inc    ebp
  4164bc:	add    bh,0x62
  4164bf:	loopne 0x4164e6
  4164c1:	xchg   DWORD PTR [esi+edi*1],esi
  4164c4:	das    
  4164c5:	cmp    BYTE PTR [ecx-0x170d2ee3],ch
  4164cb:	test   DWORD PTR [eax],eax
  4164cd:	push   cs
  4164ce:	jmp    0x1d727529
  4164d3:	inc    si
  4164d5:	jle    0x4164a1
  4164d7:	(bad)  
  4164d8:	ins    DWORD PTR es:[edi],dx
  4164d9:	add    dh,BYTE PTR [edx-0x45e949b9]
  4164df:	int3   
  4164e0:	push   0x1a
  4164e2:	fadd   QWORD PTR [ecx+0x61e85a6a]
  4164e8:	cmp    ecx,DWORD PTR [ecx+0x12]
  4164eb:	ds popa 
  4164ed:	push   cs
  4164ee:	aad    0x62
  4164f0:	ins    DWORD PTR es:[edi],dx
  4164f1:	fild   WORD PTR [eax]
  4164f3:	mov    dl,0x72
  4164f5:	retf   0x69eb
  4164f8:	add    edx,esp
  4164fa:	add    esp,esp
  4164fc:	add    BYTE PTR [ebx],cl
  4164fe:	ret    0x412b
  416501:	or     DWORD PTR [eax+0x0],0x75cbac33
  416508:	aaa    
  416509:	mov    edx,0xf9a60841
  41650e:	(bad)  
  41650f:	jmp    0x7b44:0x859ba44
  416516:	js     0x416538
  416518:	stc    
  416519:	mov    ecx,0xb31c0479
  41651e:	xor    esi,ecx
  416520:	adc    DWORD PTR [edx],esi
  416522:	sbb    BYTE PTR [edx+0x488c05fe],cl
  416528:	jecxz  0x4164ee
  41652a:	xlat   BYTE PTR ds:[ebx]
  41652b:	jne    0x4164f6
  41652d:	pop    ebp
  41652e:	add    esi,DWORD PTR [ebp-0x1c]
  416531:	add    eax,0x73d3488c
  416536:	retf   0x5cc3
  416539:	es (bad) 
  41653b:	jmp    DWORD PTR [esi+eax*1-0x1]
  41653f:	ret    0x712f
  416542:	or     dh,BYTE PTR [eax+ebp*4+0x76]
  416546:	retf   0x34e9
  416549:	inc    esi
  41654a:	or     al,BYTE PTR [eax]
  41654c:	ins    BYTE PTR es:[edi],dx
  41654d:	mov    cl,0x7e
  41654f:	and    al,0xa7
  416551:	scas   eax,DWORD PTR es:[edi]
  416552:	pop    ss
  416553:	js     0x416512
  416555:	add    bl,dh
  416557:	mov    ah,bh
  416559:	mov    edx,0x769b7fd0
  41655e:	retf   0x7aeb
  416561:	or     al,BYTE PTR [eax+0x33c57777]
  416567:	add    BYTE PTR [eax],al
  416569:	pop    edx
  41656a:	gs jg  0x4165b0
  41656d:	xchg   BYTE PTR [edi],dl
  41656f:	xlat   BYTE PTR ds:[ebx]
  416570:	out    0x65,eax
  416572:	int3   
  416573:	ja     0x416572
  416575:	cldemote BYTE PTR [edx-0x24ba2540]
  41657c:	cld    
  41657d:	sar    BYTE PTR ds:0x1741501e,cl
  416583:	aaa    
  416584:	push   ss
  416585:	(bad)  
  416586:	sbb    DWORD PTR [esp+eax*8+0x3d7b282],ecx
  41658d:	sbb    eax,0x8a457404
  416592:	mov    cs,edx
  416594:	pop    ss
  416595:	xchg   DWORD PTR [ecx+0x3],edx
  416598:	dec    esi
  416599:	adc    DWORD PTR ds:0x1d93c08b,ebp
  41659f:	cmp    eax,0x73f5edc0
  4165a4:	push   cs
  4165a5:	stc    
  4165a6:	je     0x4165aa
  4165a8:	add    DWORD PTR [ecx+0x25],eax
  4165ab:	fdiv   st(4),st
  4165ad:	jb     0x4165ec
  4165af:	push   ds
  4165b0:	dec    edi
  4165b1:	loope  0x4165e9
  4165b3:	aaa    
  4165b4:	push   ss
  4165b5:	inc    esi
  4165b6:	sbb    DWORD PTR [esp+eax*8+0x3d81a82],ecx
  4165bd:	std    
  4165be:	pop    esp
  4165bf:	add    cl,BYTE PTR [ecx+0x80ae390]
  4165c5:	xchg   ah,ah
  4165c7:	mov    edi,0x264fd03
  4165cc:	mov    DWORD PTR [eax],eax
  4165ce:	js     0x4165ab
  4165d0:	or     cl,BYTE PTR [eax]
  4165d2:	xchg   BYTE PTR [edi+edi*4-0x26e529fd],bh
  4165d9:	pop    eax
  4165da:	les    esp,FWORD PTR ds:0xc5fd5307
  4165e0:	xchg   BYTE PTR ds:0x320b3586,bh
  4165e6:	inc    esi
  4165e7:	inc    edx
  4165e8:	pop    eax
  4165e9:	in     al,0xdb
  4165eb:	sub    ebx,esi
  4165ed:	sti    
  4165ee:	(bad)  
  4165ef:	cli    
  4165f0:	dec    eax
  4165f1:	arpl   WORD PTR [eax+0x2b],sp
  4165f4:	inc    esp
  4165f5:	jle    0x41664d
  4165f7:	mov    ecx,0x3404fbb5
  4165fc:	mov    esi,0x48029407
  416601:	mov    ebx,0x182494d6
  416606:	mov    esi,0xff03a150
  41660b:	jp     0x4165fa
  41660d:	or     dh,0x41
  416610:	outs   dx,BYTE PTR ds:[esi]
  416611:	pop    es
  416612:	push   edi
  416613:	push   edi
  416614:	sub    DWORD PTR [eax+0x1e03a93],eax
  41661a:	rcl    DWORD PTR [edx+0x2b81f7f4],0xd6
  416621:	xor    ebx,DWORD PTR [eax+0x5b1ce182]
  416627:	inc    esi
  416628:	js     0x4165eb
  41662a:	test   DWORD PTR [edi-0x40b0ff54],edi
  416630:	fld    DWORD PTR [ebx]
  416632:	add    BYTE PTR [ebp+0x3b],dl
  416635:	les    edi,FWORD PTR [edx]
  416637:	out    dx,al
  416638:	push   0x3b
  41663a:	jno    0x41660f
  41663c:	mov    esi,0x7acb040a
  416641:	in     eax,0x5c
  416643:	test   DWORD PTR [edx],ebx
  416645:	xor    DWORD PTR [edi+0x3512aba],edi
  41664b:	push   eax
  41664c:	lea    ebx,[edi+0x68958608]
  416652:	pusha  
  416653:	aaa    
  416654:	xchg   ebx,eax
  416655:	push   0xe1b3ae4a
  41665a:	add    eax,DWORD PTR [esi-0x79f815e6]
  416660:	inc    edx
  416661:	or     bh,BYTE PTR [edx+0x1a5793d2]
  416667:	div    DWORD PTR [ebp-0x701d8de6]
  41666d:	repz hlt 
  41666f:	dec    ebp
  416670:	push   ebp
  416671:	dec    edx
  416672:	jmp    0x414d27b5
  416677:	test   DWORD PTR [eax-0xd],edi
  41667a:	inc    esi
  41667b:	popf   
  41667c:	dec    eax
  41667d:	jge    0x416664
  41667f:	xchg   ebx,eax
  416680:	add    bl,bh
  416682:	mov    ds:0xa9652af6,eax
  416687:	test   edi,edi
  416689:	dec    esp
  41668a:	stc    
  41668b:	mov    DWORD PTR [edx+0xa],eax
  41668e:	jmp    0xaec6acde
  416693:	mov    DWORD PTR [edx-0x69ff290d],edx
  416699:	jo     0x41668e
  41669b:	fcom   QWORD PTR [ecx+0x2e94a55]
  4166a1:	add    BYTE PTR [edx],al
  4166a3:	test   BYTE PTR [eax+0x3a],0x7d
  4166a7:	add    ebx,edx
  4166a9:	xchg   edx,eax
  4166aa:	pusha  
  4166ab:	jmp    0x2786:0x54f392da
  4166b2:	jge    0x416695
  4166b4:	push   esi
  4166b5:	jo     0x4166aa
  4166b7:	hlt    
  4166b8:	in     eax,dx
  4166b9:	push   esp
  4166ba:	dec    edx
  4166bb:	jmp    0x24fe70c
  4166c0:	inc    ebx
  4166c1:	mov    ch,0x1
  4166c3:	bound  ecx,QWORD PTR [edi+0x1a]
  4166c6:	add    cl,ch
  4166c8:	test   DWORD PTR [edx-0x21],eax
  4166cb:	pop    ebp
  4166cc:	cmc    
  4166cd:	sub    DWORD PTR [edx+eax*2-0x47],edx
  4166d1:	add    eax,DWORD PTR [esi]
  4166d3:	jmp    0x99c0f597
  4166d8:	cmp    eax,0x9f000a63
  4166dd:	inc    ebp
  4166de:	add    DWORD PTR [esi-0x5d],0x627c2fa6
  4166e5:	add    eax,0x312f84f3
  4166ea:	push   cs
  4166eb:	push   eax
  4166ec:	call   0x63a7f07b
  4166f1:	inc    ebp
  4166f2:	add    DWORD PTR [esi],0x67e85f2
  4166f8:	pop    ds
  4166f9:	mov    dl,0xdd
  4166fb:	add    DWORD PTR [eax],0xffffff81
  4166fe:	ds push ebp
  416700:	pop    esi
  416701:	pushf  
  416702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416703:	dec    esp
  416704:	or     BYTE PTR [edx+0x1f0b7e85],dh
  41670a:	mov    dl,0x17
  41670c:	jl     0x416740
  41670e:	add    eax,0x2d0182f3
  416713:	repz ret 0xa5e2
  416717:	out    0x81,al
  416719:	sbb    edi,DWORD PTR [ebx+esi*8]
  41671c:	call   FWORD PTR [edi]
  41671e:	push   cs
  41671f:	pop    ebp
  416720:	mov    edx,esp
  416722:	cwde   
  416723:	mov    DWORD PTR [ebp-0x5],esp
  416726:	cmp    eax,0xdcfe8b5d
  41672b:	or     edi,edi
  41672d:	sti    
  41672e:	sar    BYTE PTR [ebp+0x5],0x24
  416732:	ds cmc 
  416734:	dec    esp
  416735:	jae    0x4166fd
  416737:	or     eax,0xc0bde174
  41673c:	add    bh,bl
  41673e:	les    ecx,FWORD PTR [ecx]
  416740:	mov    edi,0x333023
  416745:	pop    es
  416746:	aas    
  416747:	ja     0x41674e
  416749:	sub    BYTE PTR [edx-0x7360bf84],al
  41674f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416750:	dec    DWORD PTR [eax]
  416752:	cdq    
  416753:	pusha  
  416754:	add    BYTE PTR [esi-0x11882994],al
  41675a:	pop    ebx
  41675b:	push   cs
  41675c:	push   0xffffff86
  41675e:	push   ebx
  41675f:	pop    esi
  416760:	jbe    0x416762
  416762:	inc    esi
  416763:	sbb    esp,DWORD PTR [ebx+esi*2-0x72]
  416767:	dec    eax
  416768:	arpl   WORD PTR [esi-0x7e],si
  41676b:	cwde   
  41676c:	adc    DWORD PTR [eax-0x65],esi
  41676f:	fld    DWORD PTR [esi]
  416771:	xchg   eax,eax
  416773:	xor    DWORD PTR [edx+0x7d9591c0],eax
  416779:	add    BYTE PTR [esi+0x303d119],al
  41677f:	out    dx,eax
  416780:	out    dx,al
  416781:	dec    esi
  416782:	(bad)  
  416784:	(bad)  
  416785:	(bad)  
  416786:	retf   
  416787:	and    DWORD PTR [esi],ecx
  416789:	add    BYTE PTR [esi+0x2136419],al
  41678f:	daa    
  416790:	(bad)  
  416791:	jmp    DWORD PTR [ecx]
  416793:	cvtps2pi mm7,xmm7
  416796:	and    DWORD PTR [ebp-0x268c93c7],esp
  41679c:	push   es
  41679d:	mov    ecx,0xa0071986
  4167a2:	dec    edx
  4167a3:	sbb    eax,0xb6ee0af2
  4167a8:	sub    al,0xff
  4167aa:	stc    
  4167ab:	popf   
  4167ac:	dec    esi
  4167ad:	or     eax,0x7970a
  4167b2:	xchg   BYTE PTR [esi-0x61c9f83e],dl
  4167b8:	xor    bh,0xd8
  4167bb:	clc    
  4167bc:	arpl   WORD PTR [eax-0x37],dx
  4167bf:	push   esi
  4167c0:	idiv   bh
  4167c2:	xchg   BYTE PTR [ecx],bl
  4167c4:	pop    es
  4167c5:	std    
  4167c6:	add    BYTE PTR [ebx-0x79bfe84b],bl
  4167cc:	sahf   
  4167cd:	inc    edi
  4167ce:	jae    0x4167ef
  4167d0:	inc    edx
  4167d1:	imul   ebp,DWORD PTR [esi-0x7a],0x452ce142
  4167d8:	cmp    ch,ah
  4167da:	rol    DWORD PTR [edx+edi*1-0x55],0x87
  4167df:	test   DWORD PTR [ecx],ebp
  4167e1:	mov    ebp,DWORD PTR [esi-0x75]
  4167e4:	inc    edx
  4167e5:	data16 mov BYTE PTR [ecx+0x28],bh
  4167e9:	jl     0x416859
  4167eb:	(bad)  
  4167ec:	daa    
  4167ed:	fsubp  st(3),st
  4167ef:	xchg   edi,eax
  4167f0:	and    cl,0x7c
  4167f3:	lds    edi,FWORD PTR [edx]
  4167f5:	outs   dx,BYTE PTR ds:[esi]
  4167f6:	inc    ebx
  4167f7:	fiadd  DWORD PTR [ecx-0x42f2eb39]
  4167fd:	dec    eax
  4167fe:	ins    DWORD PTR es:[edi],dx
  4167ff:	push   ebx
  416800:	daa    
  416801:	(bad)  [edi-0x30]
  416804:	and    cl,0xd3
  416807:	inc    edx
  416808:	dec    ebp
  416809:	icebp  
  41680a:	adc    eax,0xc86842c6
  41680f:	mov    ebx,eax
  416811:	and    al,0xff
  416813:	mov    eax,ds:0x21c39e4e
  416818:	mov    dh,0x64
  41681a:	or     BYTE PTR [ecx],dl
  41681c:	sub    BYTE PTR [esi+ebp*2],al
  41681f:	mov    dh,0x27
  416821:	(bad)  
  416822:	(bad)  
  416823:	js     0x4167a7
  416825:	loope  0x4168a1
  416827:	inc    ebp
  416828:	cmp    dl,BYTE PTR [eax+0x52c60082]
  41682e:	xchg   ecx,eax
  41682f:	add    BYTE PTR ds:0xeb6deb1a,0x91
  416836:	aam    0xf6
  416838:	mov    DWORD PTR [edi],esp
  41683a:	mov    ah,0x81
  41683c:	pop    ebp
  41683d:	es loope 0x416836
  416840:	ja     0x4167d5
  416842:	push   edi
  416843:	adc    DWORD PTR [esi+0x32],ebx
  416846:	cmp    eax,esp
  416848:	shl    DWORD PTR [edi],0xa
  41684b:	aas    
  41684c:	mov    edx,0x226adb25
  416851:	daa    
  416852:	jle    0x416855
  416854:	ja     0x416858
  416856:	pop    edx
  416857:	cmp    DWORD PTR [edx-0x65e00c8a],edi
  41685d:	and    eax,0x8279691d
  416862:	or     ch,BYTE PTR [edx+0x1a]
  416865:	daa    
  416866:	jle    0x41684d
  416868:	inc    DWORD PTR [edx]
  41686a:	fucomip st,st(6)
  41686c:	(bad)  
  41686e:	rep outs dx,BYTE PTR ds:[esi]
  416870:	jecxz  0x4168e2
  416872:	retf   0x3bc6
  416875:	mov    eax,ecx
  416877:	sub    ecx,DWORD PTR [esi-0x199da2be]
  41687d:	jne    0x4168d8
  41687f:	mov    edx,0x9ef9bb3b
  416884:	add    BYTE PTR ds:0x3e5fef7e,ch
  41688a:	pusha  
  41688b:	jmp    0xf55e8fe3
  416890:	add    BYTE PTR [ebx-0x4195f57e],bl
  416896:	xchg   DWORD PTR ss:[ebp+ebp*4+0x75e9b342],eax
  41689e:	inc    edx
  41689f:	or     dh,BYTE PTR [esi+0x63f02ad]
  4168a5:	fwait
  4168a6:	mov    ebx,0x374f64d1
  4168ab:	mov    fs,WORD PTR [ebp-0x7e]
  4168ae:	inc    edx
  4168af:	or     ch,BYTE PTR [edx-0x1f]
  4168b2:	cmp    DWORD PTR [edx],ecx
  4168b4:	pop    ebp
  4168b5:	xchg   esp,eax
  4168b6:	cwde   
  4168b7:	or     bl,dh
  4168b9:	fdivr  DWORD PTR [ecx]
  4168bb:	repz cld 
  4168bd:	jne    0x416912
  4168bf:	dec    edx
  4168c0:	jmp    0x4aa965
  4168c5:	fild   WORD PTR [ecx+0x77]
  4168c8:	arpl   WORD PTR [edx],si
  4168ca:	cld    
  4168cb:	out    dx,al
  4168cc:	push   eax
  4168cd:	and    al,0xfc
  4168cf:	or     dl,BYTE PTR [edi-0x74]
  4168d2:	xchg   edi,eax
  4168d3:	jp     0x4168dd
  4168d5:	ss adc al,0xef
  4168d8:	call   FWORD PTR [edx-0x50bfe92f]
  4168de:	mov    esp,0xab6574c9
  4168e3:	inc    edi
  4168e4:	cld    
  4168e5:	sbb    al,BYTE PTR [ecx-0x391c682]
  4168eb:	cli    
  4168ec:	xor    DWORD PTR [edx-0x67],0x415f0cc0
  4168f3:	jge    0x41692c
  4168f5:	add    dl,bl
  4168f7:	scas   eax,DWORD PTR es:[edi]
  4168f8:	jle    0x4168b2
  4168fa:	aam    0xe7
  4168fc:	push   es
  4168fd:	add    esp,DWORD PTR [edi-0x3fb53777]
  416903:	xchg   esi,eax
  416904:	mov    es,eax
  416906:	or     ebx,DWORD PTR [ebp+esi*8+0x75]
  41690a:	sub    DWORD PTR [edx+0x3ce9030c],0x59
  416911:	push   eax
  416912:	pusha  
  416913:	dec    esp
  416914:	cmp    dl,BYTE PTR [esi]
  416916:	fild   WORD PTR [eax-0x7f]
  416919:	inc    ebp
  41691a:	add    edx,0xffffffcd
  41691d:	or     al,0x2e
  41691f:	inc    DWORD PTR [esi]
  416921:	jmp    0x4168d3
  416923:	adc    ch,bl
  416925:	pop    edi
  416926:	aam    0x95
  416928:	cmc    
  416929:	mov    al,0xee
  41692b:	mov    DWORD PTR [ecx],ebx
  41692d:	push   ebx
  41692e:	xchg   DWORD PTR [edx+eax*2],ecx
  416931:	jmp    eax
  416933:	mov    esi,0x97d874fb
  416938:	cmp    al,0xe8
  41693a:	xchg   ebp,eax
  41693b:	in     eax,0xf5
  41693d:	inc    DWORD PTR [esi+0x305d4e49]
  416943:	jo     0x41697a
  416945:	ret    0x1b7e
  416948:	fimul  DWORD PTR [eax+0x145297b2]
  41694e:	push   ebp
  41694f:	inc    esp
  416950:	cmp    ebx,ecx
  416952:	push   ebp
  416953:	or     DWORD PTR [esi-0x2ae47a00],0x1
  41695a:	add    BYTE PTR ds:0x86680d51,dh
  416960:	sbb    eax,DWORD PTR [edi]
  416962:	inc    eax
  416963:	xchg   ecx,eax
  416964:	dec    ebp
  416965:	xacquire xchg DWORD PTR [ebx],ebp
  416968:	mov    esp,0x7b6135e
  41696d:	(bad)  
  41696e:	dec    DWORD PTR [edx+esi*4]
  416971:	mov    edi,ebp
  416973:	jno    0x41697a
  416975:	jae    0x416912
  416977:	xchg   BYTE PTR [ecx],bl
  416979:	pop    es
  41697a:	push   esi
  41697b:	and    BYTE PTR [edx],bl
  41697d:	pop    ss
  41697e:	add    BYTE PTR [esi-0x431bb11d],al
  416984:	je     0x4169e5
  416986:	xchg   ebx,eax
  416988:	gs and eax,ecx
  41698b:	mov    edx,0x3e5b75ee
  416990:	xor    eax,edx
  416992:	(bad)  
  416994:	or     bl,ah
  416996:	cld    
  416997:	mov    bl,0x29
  416999:	pusha  
  41699a:	adc    esi,DWORD PTR [esi+0x28]
  41699d:	(bad)  
  41699e:	call   FWORD PTR [edx+0x17]
  4169a1:	push   cs
  4169a2:	add    BYTE PTR [esi-0x3c753d32],al
  4169a8:	sub    edi,edx
  4169aa:	mov    BYTE PTR [ebx+0x31],cl
  4169ad:	frndint 
  4169af:	jae    0x4169d6
  4169b1:	pusha  
  4169b2:	jo     0x416a32
  4169b4:	adc    al,0x1a
  4169b6:	nop
  4169b7:	xchg   ebx,eax
  4169b8:	inc    edx
  4169b9:	and    DWORD PTR [eax*1+0x285d03],eax
  4169c0:	movd   ecx,mm2
  4169c3:	cs (bad) 
  4169c5:	scas   al,BYTE PTR es:[edi]
  4169c6:	pop    es
  4169c7:	add    eax,0xe8622a45
  4169cc:	mov    ecx,0x86a3e142
  4169d1:	stos   DWORD PTR es:[edi],eax
  4169d2:	or     dl,bh
  4169d4:	cld    
  4169d5:	jne    0x41698c
  4169d7:	aam    0x39
  4169d9:	and    edx,DWORD PTR [esi]
  4169db:	jo     0x416a18
  4169dd:	and    edi,esi
  4169df:	daa    
  4169e0:	je     0x416964
  4169e2:	loope  0x416964
  4169e4:	(bad)  
  4169e5:	scas   al,BYTE PTR es:[edi]
  4169e6:	(bad)  
  4169e7:	jle    0x416a2e
  4169e9:	xor    cl,al
  4169eb:	shr    BYTE PTR [ebp-0x52],0x40
  4169ef:	pop    esi
  4169f0:	(bad)  
  4169f1:	mov    edi,DWORD PTR [eax+edx*1-0x5e]
  4169f5:	push   eax
  4169f6:	and    DWORD PTR [eax+eax*2],eax
  4169f9:	jge    0x416a67
  4169fb:	add    al,0x63
  4169fd:	lods   eax,DWORD PTR ds:[esi]
  4169fe:	pop    ebp
  4169ff:	pop    ebx
  416a00:	push   cs
  416a01:	js     0x416a5f
  416a03:	push   0xffffffbb
  416a05:	and    edi,esi
  416a07:	mov    ds:0xc9e18274,eax
  416a0c:	jns    0x416993
  416a0e:	xor    al,0xf0
  416a10:	and    DWORD PTR [ebx],0x8c29f7b6
  416a16:	jnp    0x416a82
  416a18:	sub    edi,DWORD PTR [eax-0x783c955b]
  416a1e:	cmp    al,BYTE PTR [ebp-0x76]
  416a21:	inc    edx
  416a22:	mov    dh,0x7e
  416a24:	add    BYTE PTR [edx],ah
  416a26:	mov    edi,0x8cb70af4
  416a2b:	xchg   esp,eax
  416a2c:	push   0x75
  416a2e:	ss lock in ax,dx
  416a32:	sbb    DWORD PTR [edx],ecx
  416a34:	jno    0x4169fb
  416a36:	and    dh,bl
  416a38:	gs inc ebp
  416a3a:	scas   al,BYTE PTR es:[edi]
  416a3b:	inc    eax
  416a3c:	imul   ebp,ecx,0xd9540828
  416a42:	cwde   
  416a43:	push   cs
  416a44:	xor    eax,DWORD PTR ss:[eax+0x37]
  416a48:	into   
  416a49:	pop    edi
  416a4a:	scas   eax,DWORD PTR es:[edi]
  416a4b:	sbb    dh,BYTE PTR [edx-0x4f]
  416a4e:	cmp    dh,bl
  416a50:	xor    al,0x2a
  416a52:	and    eax,0x3b52c57d
  416a57:	imul   BYTE PTR [esi+0x1dc9be1f]
  416a5d:	jbe    0x416a84
  416a5f:	jge    0x4169fa
  416a61:	sbb    edi,ebp
  416a63:	jle    0x416a0c
  416a65:	xor    ch,al
  416a67:	cmc    
  416a68:	mov    ds,WORD PTR [edi]
  416a6a:	mov    esi,0xd381fdc9
  416a6f:	or     BYTE PTR [edx+0x76cf5480],dl
  416a75:	popa   
  416a76:	cs loop 0x416a54
  416a79:	sub    ebx,DWORD PTR [edi]
  416a7b:	repz data16 jno 0x416ab1
  416a7f:	loop   0x416a74
  416a81:	sbb    ebx,DWORD PTR [edi]
  416a83:	repz arpl bx,cx
  416a86:	jg     0x416adc
  416a88:	mov    dl,0x0
  416a8a:	mov    WORD PTR [esi+eax*1],es
  416a8d:	jmp    0x992735e2
  416a92:	push   esp
  416a93:	stos   BYTE PTR es:[edi],al
  416a94:	push   cs
  416a95:	mov    esi,0xd4f42245
  416a9a:	adc    DWORD PTR [ecx+0x4a],0xf2859ce9
  416aa1:	fs ret 0x895
  416aa5:	and    bl,cl
  416aa7:	jae    0x416b04
  416aa9:	xor    DWORD PTR [ebp-0x69],0xf5ef004a
  416ab0:	cmp    edi,edi
  416ab2:	clc    
  416ab3:	push   eax
  416ab4:	mov    dh,0x12
  416ab6:	pop    ds
  416ab7:	inc    esi
  416ab8:	sbb    eax,0x447e8f62
  416abe:	aaa    
  416abf:	inc    edx
  416ac0:	sbb    al,BYTE PTR [eax]
  416ac2:	out    dx,eax
  416ac3:	dec    DWORD PTR [edx]
  416ac5:	push   DWORD PTR [edx-0x5a]
  416ac8:	mov    eax,ds:0x17aadf43
  416acd:	add    al,0xdc
  416acf:	add    eax,0xa0c78af3
  416ad4:	cmc    
  416ad5:	je     0x416a5b
  416ad7:	hlt    
  416ad8:	jg     0x416b1f
  416ada:	fcomi  st,st(5)
  416adc:	pop    ebp
  416add:	mov    esi,0xfff31ae8
  416ae2:	jne    0x416b2a
  416ae4:	mov    esi,DWORD PTR [ebp-0x5]
  416ae7:	stos   BYTE PTR es:[edi],al
  416ae8:	fld    DWORD PTR [ebp-0x74facf21]
  416aee:	add    BYTE PTR [edx+0x68c631aa],dh
  416af4:	push   es
  416af5:	int    0xc6
  416af7:	arpl   WORD PTR [edx+0xa],ax
  416afa:	jmp    0x416b5d
  416afc:	repnz jmp 0xb85e:0xf5aa168f
  416b04:	xor    bl,bh
  416b06:	call   DWORD PTR [edx+0x9]
  416b09:	sbb    DWORD PTR [eax+0x5f],eax
  416b0c:	sahf   
  416b0d:	int    0x5f
  416b0f:	in     al,0x5b
  416b11:	leave  
  416b12:	push   ebp
  416b13:	mov    ah,0x79
  416b15:	inc    ebx
  416b16:	add    DWORD PTR [edx-0x57],0xa
  416b1a:	push   esi
  416b1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b1c:	jo     0x416b8c
  416b1e:	adc    eax,0x8d5d44ef
  416b23:	loop   0x416acd
  416b25:	pop    edx
  416b26:	push   0xffffff86
  416b28:	sub    edx,ebp
  416b2a:	and    DWORD PTR [ecx],ecx
  416b2c:	mov    dh,0xee
  416b2e:	cld    
  416b2f:	fsubr  DWORD PTR [ebp+0x24e7347]
  416b35:	mov    ah,0xfb
  416b37:	jp     0x416b25
  416b39:	popa   
  416b3a:	adc    ecx,DWORD PTR [esi+0x4ffc6fa]
  416b40:	and    esp,eax
  416b42:	jb     0x416ae2
  416b44:	xchg   esp,eax
  416b45:	leave  
  416b46:	sti    
  416b47:	inc    esi
  416b48:	jg     0x416b82
  416b4a:	call   0xfdaccdc5
  416b4f:	or     eax,0xfd8903
  416b54:	xor    cl,BYTE PTR [eax+0x71]
  416b57:	inc    ebx
  416b58:	mov    dl,0x3a
  416b5a:	ret    
  416b5b:	imul   esp,DWORD PTR [eax+esi*8-0x8],0x86e0a107
  416b63:	clc    
  416b64:	xchg   DWORD PTR [esi],esi
  416b66:	push   ds
  416b67:	mov    DWORD PTR [ebx+0x27],ecx
  416b6a:	mov    al,al
  416b6c:	adc    ah,BYTE PTR [esi]
  416b6e:	jo     0x416bbb
  416b70:	adc    BYTE PTR [ebx-0x4abe770a],0xf5
  416b77:	push   esp
  416b78:	pop    esi
  416b79:	add    BYTE PTR [esi+0x46dd69fc],dh
  416b7f:	pop    ebp
  416b80:	rcl    BYTE PTR [edx+0x48],0x8
  416b84:	xchg   dh,dl
  416b86:	outs   dx,DWORD PTR ds:[esi]
  416b87:	in     al,dx
  416b88:	mov    bh,0xac
  416b8a:	jmp    0x7018f28a
  416b8f:	xor    edi,DWORD PTR [edx-0x2f003902]
  416b95:	scas   al,BYTE PTR es:[edi]
  416b96:	leave  
  416b97:	sti    
  416b98:	(bad)  
  416b99:	add    eax,DWORD PTR [edi]
  416b9b:	std    
  416b9c:	mov    bl,0xfd
  416b9e:	imul   esi,DWORD PTR [ebx-0x72],0x42
  416ba2:	sub    al,0x4e
  416ba4:	add    eax,0x59269e03
  416ba9:	test   DWORD PTR ds:0xfe1f4ff0,ebx
  416baf:	or     edx,DWORD PTR [ecx-0x17d1e7e]
  416bb5:	pushf  
  416bb6:	jle    0x416bce
  416bb8:	add    bh,bh
  416bba:	test   ebp,edi
  416bbc:	add    dh,0x44
  416bbf:	jge    0x416bdf
  416bc1:	out    dx,al
  416bc2:	mov    esi,0xcbdb6738
  416bc7:	call   0xfdd83f4c
  416bcc:	js     0x416c13
  416bce:	push   ds
  416bcf:	xor    edi,ecx
  416bd1:	ret    0xfd95
  416bd4:	xor    ax,0xb44a
  416bd8:	dec    ebp
  416bd9:	pop    es
  416bda:	sbb    esp,edx
  416bdc:	lock test ebx,ecx
  416bdf:	stos   DWORD PTR es:[edi],eax
  416be0:	pop    edx
  416be1:	mov    ?,WORD PTR [edi-0x67]
  416be4:	cwde   
  416be5:	dec    esi
  416be6:	pop    ds
  416be7:	xchg   esp,eax
  416be8:	xor    al,dh
  416bea:	jg     0x416c27
  416bec:	cmp    eax,0xd0e14ac4
  416bf1:	push   cs
  416bf2:	cs adc dl,ch
  416bf5:	push   es
  416bf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bf7:	jne    0x416bfc
  416bf9:	xlat   BYTE PTR ds:[ebx]
  416bfa:	js     0x416c10
  416bfc:	addr16 cmc 
  416bfe:	dec    esi
  416bff:	fs adc dh,bl
  416c02:	xor    al,0xa1
  416c04:	add    ebx,DWORD PTR [ebx-0x6b]
  416c07:	std    
  416c08:	jp     0x416b9f
  416c0a:	out    0xf5,al
  416c0c:	ret    
  416c0d:	dec    ecx
  416c0e:	int3   
  416c0f:	cmp    BYTE PTR [eax-0x3b],bh
  416c12:	push   ds
  416c13:	xchg   ecx,eax
  416c14:	data16 mov ch,0x4e
  416c17:	je     0x416c7f
  416c19:	xor    eax,DWORD PTR [edx+0xa]
  416c1c:	jmp    0x7d5fa421
  416c21:	loope  0x416bcb
  416c23:	clc    
  416c24:	mov    WORD PTR [ecx],gs
  416c26:	push   ss
  416c27:	jnp    0x416c1c
  416c29:	hlt    
  416c2a:	jge    0x416c7b
  416c2c:	dec    edx
  416c2d:	jmp    0x94b18636
  416c32:	fcmove st,st(1)
  416c34:	dec    esp
  416c35:	add    eax,0xa602faac
  416c3a:	inc    esp
  416c3b:	cmp    BYTE PTR [esi-0x51],0x4d
  416c3f:	aas    
  416c40:	inc    edx
  416c41:	out    dx,al
  416c42:	imul   eax,edi,0x4c
  416c45:	loope  0x416ca0
  416c47:	add    bh,BYTE PTR [esi+0x23]
  416c4a:	(bad)  
  416c4b:	jno    0x416c40
  416c4d:	pop    esp
  416c4e:	into   
  416c4f:	mov    ?,ebx
  416c51:	hlt    
  416c52:	xchg   ecx,eax
  416c53:	dec    edi
  416c54:	dec    edx
  416c55:	jmp    0x6c5fff7c
  416c5a:	icebp  
  416c5b:	sbb    bl,BYTE PTR [edx-0x4a]
  416c5e:	cdq    
  416c5f:	push   ss
  416c60:	pop    ebx
  416c61:	scas   al,BYTE PTR es:[edi]
  416c62:	mov    cl,0x46
  416c64:	repz mov edi,0x14091a07
  416c6a:	jne    0x416c35
  416c6c:	dec    esp
  416c6d:	stc    
  416c6e:	or     BYTE PTR [edx],al
  416c70:	jle    0x416c56
  416c72:	dec    BYTE PTR [ecx-0x34858f0a]
  416c78:	dec    esp
  416c79:	or     edi,0xddfcf348
  416c7f:	sub    dl,BYTE PTR [edi]
  416c81:	and    DWORD PTR [eax],eax
  416c83:	jmp    0x416ca4
  416c85:	aaa    
  416c86:	sub    DWORD PTR [ebx-0x80],eax
  416c89:	dec    edi
  416c8a:	xor    ah,al
  416c8c:	xor    cl,BYTE PTR [edx]
  416c8e:	mov    esp,0x3d872ece
  416c93:	ds jae 0x416cf2
  416c96:	add    BYTE PTR [ebp+ebp*2+0x41df156e],dh
  416c9d:	pop    ebp
  416c9e:	push   0x1b
  416ca0:	or     eax,DWORD PTR [eax+0x7ff67345]
  416ca6:	inc    ebp
  416ca7:	jnp    0x416c9f
  416ca9:	pusha  
  416caa:	adc    eax,0x890b2d70
  416caf:	shl    BYTE PTR [ebp+0x6564d6f5],cl
  416cb5:	jbe    0x416ccc
  416cb7:	das    
  416cb8:	inc    edx
  416cb9:	loope  0x416cd5
  416cbb:	je     0x416c9a
  416cbd:	test   BYTE PTR [ebp-0x72ebed61],0x2
  416cc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cc5:	inc    ebx
  416cc6:	lea    edx,[edx-0x2595bc6e]
  416ccc:	icebp  
  416ccd:	mov    eax,DWORD PTR [ebp-0x19]
  416cd0:	cwde   
  416cd1:	dec    edi
  416cd2:	cld    
  416cd3:	ror    BYTE PTR [edi-0x67488a0b],1
  416cd9:	inc    edi
  416cda:	clc    
  416cdb:	lock mov cs,WORD PTR [ecx+0x7741f77d]
  416ce2:	fcom   DWORD PTR [eax+0xc95204]
  416ce8:	in     eax,dx
  416ce9:	sbb    eax,0x751454f3
  416cee:	inc    ebx
  416cef:	push   ecx
  416cf0:	call   0x70416bd1
  416cf5:	inc    ecx
  416cf6:	push   0x74
  416cf8:	imul   edx,DWORD PTR [edx-0x36],0xffffffeb
  416cfc:	add    ebx,0x66
  416cff:	clc    
  416d00:	pop    edi
  416d01:	repnz pop esp
  416d03:	mov    ebx,DWORD PTR [edx]
  416d05:	mov    ebp,0xfb6f4016
  416d0a:	repnz mov WORD PTR [edx],gs
  416d0d:	test   eax,0xee868d5a
  416d12:	ins    DWORD PTR es:[edi],dx
  416d13:	push   eax
  416d14:	inc    ecx
  416d15:	idiv   dl
  416d17:	cld    
  416d18:	mov    bl,0x13
  416d1a:	outs   dx,BYTE PTR ds:[esi]
  416d1b:	(bad)  
  416d1c:	or     ebp,DWORD PTR [ebx-0x1c]
  416d1f:	inc    ebp
  416d20:	sub    esi,edi
  416d22:	dec    BYTE PTR [esi]
  416d24:	(bad)  
  416d25:	sub    ecx,DWORD PTR [edx+0x21be9cf8]
  416d2b:	mov    ebx,ecx
  416d2d:	arpl   di,ax
  416d2f:	jae    0x416d84
  416d31:	inc    ebx
  416d32:	cmp    DWORD PTR [ebp+0x1],eax
  416d35:	dec    esp
  416d36:	jb     0x416d10
  416d38:	add    esp,DWORD PTR [eax-0x1d]
  416d3b:	sub    DWORD PTR [ebx+ebp*1+0x7c],ebx
  416d3f:	inc    ebx
  416d40:	out    dx,al
  416d41:	mov    edx,0xff5bfcd9
  416d46:	ins    DWORD PTR es:[edi],dx
  416d47:	jae    0x416cd7
  416d49:	and    al,0x30
  416d4b:	add    DWORD PTR [eax],0xfd229ce
  416d51:	std    
  416d52:	ins    DWORD PTR es:[edi],dx
  416d53:	inc    BYTE PTR [edx-0x76fe893a]
  416d59:	dec    ebx
  416d5a:	add    eax,DWORD PTR [ebp+0x62e7fd08]
  416d60:	or     BYTE PTR [ebp+0x3],dl
  416d63:	adc    DWORD PTR [ebp-0x5f],eax
  416d66:	jmp    0x416d82
  416d68:	sar    BYTE PTR [eax],0x80
  416d6b:	inc    ebp
  416d6c:	ret    0x2b82
  416d6f:	mov    dl,0x88
  416d71:	call   0xaf53:0xd5107aa7
  416d78:	xor    BYTE PTR [ecx-0x6f],bh
  416d7b:	pop    esi
  416d7c:	aaa    
  416d7d:	repz adc ebx,ebx
  416d80:	dec    ecx
  416d81:	rol    DWORD PTR [ecx+0x46],1
  416d84:	add    BYTE PTR [esi-0x718c97d7],al
  416d8a:	inc    edx
  416d8b:	jle    0x416d4e
  416d8d:	dec    ebp
  416d8e:	sub    ecx,edx
  416d90:	test   DWORD PTR [ecx+0x1c],ecx
  416d93:	push   0xffffffc9
  416d95:	xor    eax,0x2132c58
  416d9a:	shl    ecx,cl
  416d9c:	add    eax,DWORD PTR [esi+0x75fadc7]
  416da2:	sbb    edx,esp
  416da4:	adc    al,BYTE PTR [edi+eiz*8]
  416da7:	loope  0x416dac
  416da9:	xchg   BYTE PTR [eax+0x7a3416f4],ch
  416daf:	sbb    al,0x55
  416db1:	add    BYTE PTR [edi-0xd],cl
  416db4:	jmp    0x416d3e
  416db6:	adc    eax,0x5303e142
  416dbb:	test   al,0x85
  416dbd:	bound  esi,QWORD PTR [ebp+0x4a]
  416dc0:	shl    cx,0xc9
  416dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dc5:	pop    edi
  416dc6:	out    dx,al
  416dc7:	pusha  
  416dc8:	pop    edi
  416dc9:	add    eax,0x90ff2786
  416dce:	inc    ebp
  416dcf:	push   ds
  416dd0:	xor    DWORD PTR [ebp+ebp*8+0x16],ebp
  416dd4:	fsub   QWORD PTR [edx+0x9]
  416dd7:	xchg   ch,bl
  416dd9:	push   ds
  416dda:	ret    
  416ddb:	dec    ebx
  416ddc:	gs icebp 
  416dde:	mov    al,0x1b
  416de0:	loope  0x416d72
  416de2:	inc    ebp
  416de3:	sbb    dl,BYTE PTR [ecx]
  416de5:	in     al,dx
  416de6:	stc    
  416de7:	inc    edx
  416de8:	loope  0x416ded
  416dea:	scas   al,BYTE PTR es:[edi]
  416deb:	dec    edx
  416dec:	xchg   ecx,eax
  416ded:	bound  edx,QWORD PTR [ebx-0x74775739]
  416df3:	dec    ebx
  416df4:	gs retf 
  416df6:	sbb    BYTE PTR [ebx],0xe1
  416df9:	xchg   ch,bh
  416dfb:	sbb    dh,BYTE PTR [ecx-0x1da3fbee]
  416e01:	add    eax,DWORD PTR [esi-0x3dd3f639]
  416e07:	jne    0x416deb
  416e09:	cmc    
  416e0a:	sbb    al,0x1e
  416e0c:	rep ins BYTE PTR es:[edi],dx
  416e0e:	lds    ecx,FWORD PTR [ebp-0x7c]
  416e11:	or     al,0x83
  416e13:	inc    edx
  416e14:	or     ch,BYTE PTR [edx+0x0]
  416e17:	es inc ebx
  416e19:	or     dl,ch
  416e1b:	sahf   
  416e1c:	je     0x416e00
  416e1e:	and    DWORD PTR [edi+0x42],edi
  416e21:	or     ah,BYTE PTR [ebp-0x3b]
  416e24:	(bad)  
  416e25:	sbb    edi,edx
  416e27:	mov    edi,0xad357d1d
  416e2c:	xchg   edx,eax
  416e2d:	dec    esp
  416e2e:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  416e30:	jne    0x416e14
  416e32:	xchg   ebx,eax
  416e33:	aas    
  416e34:	push   ds
  416e35:	repz bound ecx,QWORD PTR [edi+0x23]
  416e39:	sbb    ebp,eax
  416e3b:	test   DWORD PTR [edx-0xd],eax
  416e3e:	jl     0x416e99
  416e40:	leave  
  416e41:	dec    esp
  416e42:	std    
  416e43:	pop    esp
  416e44:	xchg   edx,eax
  416e45:	(bad)  
  416e46:	mul    BYTE PTR [edi+0x1d]
  416e49:	jge    0x416e3c
  416e4b:	pop    ds
  416e4c:	and    ebx,edx
  416e4e:	fisub  DWORD PTR [edi+0x1d]
  416e51:	jg     0x416e77
  416e53:	test   ax,0xe5ca
  416e57:	or     BYTE PTR [edx],al
  416e59:	jle    0x416e38
  416e5b:	sub    eax,0x27c64c47
  416e60:	ret    
  416e61:	dec    esp
  416e62:	icebp  
  416e63:	add    BYTE PTR [edx],al
  416e65:	jge    0x416e53
  416e67:	mov    bl,0x1c
  416e69:	push   esp
  416e6a:	ret    0xc6e6
  416e6d:	push   ebx
  416e6e:	icebp  
  416e6f:	ficomp DWORD PTR ds:0x5a908d1d
  416e75:	or     ah,BYTE PTR [edx-0x34]
  416e78:	sub    ch,BYTE PTR [esi]
  416e7a:	jmp    0xa200:0x7f428500
  416e81:	jp     0x416e0e
  416e83:	inc    esi
  416e84:	push   edi
  416e85:	mov    DWORD PTR [esi-0x4],0x8b1f0ce6
  416e8c:	mov    ds:0x6f468b46,al
  416e91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e92:	sub    dh,0x5f
  416e95:	inc    esi
  416e96:	cmp    edx,edx
  416e98:	loopne 0x416e8b
  416e9a:	out    dx,al
  416e9b:	mov    esp,edx
  416e9d:	jge    0x416ef8
  416e9f:	mov    DWORD PTR [ecx+0x66],ecx
  416ea2:	mov    eax,DWORD PTR [esi-0x7d]
  416ea5:	int    0x5b
  416ea7:	xor    al,0x58
  416ea9:	adc    ebx,esp
  416eab:	adc    ch,bh
  416ead:	inc    ebp
  416eae:	cmp    edi,edi
  416eb0:	es and al,0x2f
  416eb3:	jne    0x416ef2
  416eb5:	fistp  DWORD PTR [ebp+0x57]
  416eb8:	inc    eax
  416eb9:	mov    ds:0x5fdb817,eax
  416ebe:	xrelease mov BYTE PTR [ecx],ah
  416ec1:	cmp    dh,BYTE PTR [ecx]
  416ec3:	(bad)  
  416ec4:	jb     0x416eda
  416ec6:	pop    esi
  416ec7:	call   0x37704d
  416ecc:	lock lods eax,DWORD PTR ds:[esi]
  416ece:	fiadd  DWORD PTR [ebp-0x18]
  416ed1:	mov    ds:0xa747fe60,al
  416ed6:	jne    0x416ed7
  416ed8:	popa   
  416ed9:	(bad)  
  416eda:	cmc    
  416edb:	adc    eax,0x330ff3
  416ee0:	add    BYTE PTR [edx],bh
  416ee2:	add    edi,DWORD PTR [ebx]
  416ee4:	mov    ebx,DWORD PTR [esi+esi*1-0x36728b33]
  416eeb:	or     BYTE PTR ds:[esi-0x32],bh
  416eef:	cmc    
  416ef0:	adc    eax,0x3314bf
  416ef5:	and    al,BYTE PTR [ebp-0x5579ec82]
  416efb:	aam    0x7
  416efd:	test   DWORD PTR [edx],ebp
  416eff:	pop    es
  416f00:	add    dl,bh
  416f02:	adc    eax,0xee69316a
  416f07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f08:	adc    al,dh
  416f0a:	sub    eax,DWORD PTR [eax-0x242b60c7]
  416f10:	and    bh,ch
  416f12:	and    BYTE PTR [ebx],cl
  416f14:	push   ecx
  416f15:	mov    al,0xf3
  416f17:	mov    ch,0x5b
  416f19:	(bad)  
  416f1a:	sub    ebx,edi
  416f1c:	(bad)  
  416f1d:	cmp    DWORD PTR [ebx],esp
  416f1f:	pop    es
  416f20:	call   0x48af64
  416f25:	add    ch,BYTE PTR [ebx-0x24]
  416f28:	or     BYTE PTR [ebx+ebp*1+0x68c3745f],ch
  416f2f:	push   0x6a
  416f31:	xchg   BYTE PTR [esi+esi*2],dh
  416f34:	xor    DWORD PTR [ecx],ecx
  416f36:	rcr    BYTE PTR [esi+0x68],1
  416f39:	dec    ebx
  416f3a:	xor    BYTE PTR [edx+0x55],ch
  416f3d:	out    dx,al
  416f3e:	int3   
  416f3f:	retf   
  416f40:	cld    
  416f41:	icebp  
  416f42:	fild   DWORD PTR [esi+0x40]
  416f45:	add    ch,bl
  416f47:	stc    
  416f48:	imul   esi,DWORD PTR [ebx-0x26],0xd942bc42
  416f4f:	daa    
  416f50:	mov    ebx,0x536641e7
  416f55:	std    
  416f56:	add    eax,0x605d52d3
  416f5b:	push   esp
  416f5c:	inc    ebp
  416f5d:	ret    0x2b82
  416f60:	mov    dl,0x88
  416f62:	mov    ds:0x5150bd39,al
  416f67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f68:	aam    0x7
  416f6a:	cmp    DWORD PTR [edx-0x12660817],esp
  416f70:	bound  edx,QWORD PTR [edx]
  416f72:	inc    esi
  416f73:	inc    edx
  416f74:	loope  0x416f88
  416f76:	scas   eax,DWORD PTR es:[edi]
  416f77:	pop    edx
  416f78:	xor    ebp,DWORD PTR [edx+edi*8]
  416f7b:	mov    gs,WORD PTR [eax-0x3a]
  416f7e:	lods   eax,DWORD PTR ds:[esi]
  416f7f:	pop    ebx
  416f80:	mov    al,ds:0x2dc9dcd8
  416f85:	pusha  
  416f86:	lock push eax
  416f88:	je     0x416f50
  416f8a:	xchg   ebp,eax
  416f8b:	retf   
  416f8c:	and    bl,BYTE PTR [eax]
  416f8e:	xchg   edi,eax
  416f8f:	hlt    
  416f90:	jnp    0x416f68
  416f92:	popf   
  416f93:	leave  
  416f94:	mov    dl,0x17
  416f96:	fcomip st,st(4)
  416f98:	in     al,0x2
  416f9a:	fcom   DWORD PTR [edx+0x68]
  416f9d:	pop    edx
  416f9e:	jno    0x417017
  416fa0:	jmp    0xd658d97c
  416fa5:	seta   BYTE PTR [edx-0x34ffd51f]
  416fac:	dec    edx
  416fad:	(bad)  
  416fae:	arpl   di,si
  416fb0:	ds loope 0x416f85
  416fb3:	adc    DWORD PTR [edi],0x7dff5fa6
  416fb9:	adc    eax,0x8f66481b
  416fbe:	dec    ecx
  416fbf:	sti    
  416fc0:	lea    ebx,[ecx]
  416fc2:	imul   esp,DWORD PTR [eax+0x4b8cebc9],0x3e
  416fc9:	jp     0x416f8a
  416fcb:	mov    ebx,ecx
  416fcd:	mov    ds:0xdc026f17,al
  416fd2:	add    cl,BYTE PTR [eax+0x6a]
  416fd5:	push   edi
  416fd6:	idiv   DWORD PTR [ecx]
  416fd8:	pop    ss
  416fd9:	pop    esi
  416fda:	or     al,0xc3
  416fdc:	sub    eax,0x4279f611
  416fe1:	pusha  
  416fe2:	inc    edi
  416fe3:	adc    BYTE PTR [edi],0x36
  416fe6:	pop    esp
  416fe7:	stos   DWORD PTR es:[edi],eax
  416fe8:	sub    eax,0x4261f1b1
  416fed:	or     bh,BYTE PTR [ecx-0x7e]
  416ff0:	sub    DWORD PTR [ecx],eax
  416ff2:	push   ss
  416ff3:	xor    DWORD PTR [ebx],esi
  416ff5:	cli    
  416ff6:	sti    
  416ff7:	lds    edx,FWORD PTR [edi]
  416ff9:	cmp    DWORD PTR [ecx-0x543e85c0],ebp
  416fff:	add    DWORD PTR [edx+0x5d],0xe5c1e162
  417006:	fnstenv [esi+ebp*2]
  417009:	int3   
  41700a:	and    al,0xc1
  41700c:	inc    edx
  41700d:	repz fadd QWORD PTR [eax]
  417010:	mov    DWORD PTR [ecx],esi
  417012:	dec    edx
  417013:	jmp    0xafc68a14
  417018:	jge    0x41708c
  41701a:	and    DWORD PTR [ebp+edx*8+0x37451d15],0x6d1a0a57
  417025:	mov    edi,0x788a4154
  41702a:	es mov bh,0x40
  41702d:	retf   0xe14c
  417030:	add    al,0x2
  417032:	push   cs
  417033:	pusha  
  417034:	adc    eax,DWORD PTR ds:[ecx+0x4bc97dc4]
  41703b:	shr    edi,1
  41703d:	xor    DWORD PTR [ebp+0x5a42fdad],eax
  417043:	push   cs
  417044:	into   
  417045:	adc    dh,bl
  417047:	fmul   QWORD PTR [ecx+0x4e94a30]
  41704d:	inc    BYTE PTR ds:0x4b93456c
  417053:	(bad)  
  417054:	retf   
  417055:	popw   es
  417057:	sub    al,0x7a
  417059:	ret    0xed74
  41705c:	test   DWORD PTR [ebx-0x40b2e5fa],edx
  417062:	add    DWORD PTR [eax-0x3e],esp
  417065:	inc    edx
  417066:	add    DWORD PTR [eax],0x2be14677
  41706c:	adc    al,0x46
  41706e:	xchg   ecx,ecx
  417070:	pop    ebx
  417071:	xor    al,BYTE PTR [ecx+0x538400d7]
  417077:	jae    0x417073
  417079:	pop    ss
  41707a:	adc    ebx,esi
  41707c:	call   FWORD PTR [ebp+0x6b40f615]
  417082:	sub    al,0x8
  417084:	pop    ecx
  417085:	out    0x36,al
  417087:	cmp    ecx,DWORD PTR [eax+0x5b]
  41708a:	hlt    
  41708b:	or     cl,BYTE PTR [ecx+0x488b4687]
  417091:	imul   ebp,DWORD PTR [ebx+0x467f830e],0xa
  417098:	(bad)  
  417099:	sbb    dh,BYTE PTR [edi-0xd]
  41709c:	(bad)  
  41709d:	jmp    0x46c3:0xd7458179
  4170a4:	or     BYTE PTR [ebx-0x3d],dl
  4170a7:	enter  0x8417,0xfc
  4170ab:	push   ds
  4170ac:	jb     0x417060
  4170ae:	ja     0x417127
  4170b0:	lock push eax
  4170b2:	or     eax,0x41df12e3
  4170b7:	add    BYTE PTR [ebp+0x60],0xd7
  4170bb:	push   ecx
  4170bc:	leave  
  4170bd:	lods   eax,DWORD PTR ds:[esi]
  4170be:	inc    esi
  4170bf:	or     dl,BYTE PTR [ebp+0x64]
  4170c2:	xchg   edx,eax
  4170c3:	mov    esp,esp
  4170c5:	xchg   edi,eax
  4170c6:	ret    
  4170c7:	in     eax,0x10
  4170c9:	je     0x41710e
  4170cb:	add    DWORD PTR [eax+0xa4173],0x244dc8f9
  4170d5:	mov    bl,0xca
  4170d7:	dec    eax
  4170d8:	cmp    al,0x0
  4170da:	mov    cl,cl
  4170dc:	dec    ebp
  4170dd:	and    al,0xbb
  4170df:	ret    0xffc3
  4170e2:	xchg   BYTE PTR [ebp-0x20],dl
  4170e5:	inc    DWORD PTR [edx]
  4170e7:	pusha  
  4170e8:	and    bl,BYTE PTR [eax]
  4170ea:	push   esi
  4170eb:	jno    0x4170f5
  4170ed:	std    
  4170ee:	jnp    0x41707f
  4170f0:	stc    
  4170f1:	aas    
  4170f2:	xchg   BYTE PTR [esi],cl
  4170f4:	or     edi,edi
  4170f6:	xchg   ecx,eax
  4170f7:	sub    ebx,ebx
  4170f9:	push   es
  4170fa:	add    eax,0xb0d07e4
  4170ff:	mov    es,WORD PTR [edi]
  417101:	add    BYTE PTR [esi+0x7e23eba8],al
  417107:	sub    ebx,DWORD PTR [edx]
  417109:	sar    bl,0x3e
  41710c:	and    cl,BYTE PTR [ebp*1-0x49f8355a]
  417113:	mov    esp,?
  417115:	jmp    0x41718b
  417117:	imul   ecx,DWORD PTR [esi],0xffffff89
  41711a:	lds    ecx,FWORD PTR [ebx-0x75]
  41711d:	sar    BYTE PTR [edx+0x62498149],0xa6
  417124:	inc    eax
  417125:	je     0x4170b4
  417127:	fidiv  DWORD PTR [esi+0x55e81be7]
  41712d:	std    
  41712e:	or     eax,0x62418283
  417133:	mov    ds:0x9e8223cb,al
  417138:	push   esi
  417139:	jae    0x4171b3
  41713b:	popf   
  41713c:	xchg   DWORD PTR [ebp+0x0],ecx
  41713f:	xchg   esp,eax
  417140:	sub    esp,DWORD PTR [edx+0x5]
  417143:	or     eax,0x5082aaf
  417148:	xor    eax,0x13458b56
  41714d:	mov    bh,0xfc
  41714f:	jnp    0x41716c
  417151:	cli    
  417152:	aas    
  417153:	xchg   BYTE PTR [esi-0x47fd8baa],ah
  417159:	pop    esi
  41715a:	stos   BYTE PTR es:[edi],al
  41715b:	test   DWORD PTR [edx-0x1f],eax
  41715e:	add    ecx,DWORD PTR [edx]
  417160:	add    bl,BYTE PTR [esi+0x3]
  417163:	clc    
  417164:	shr    DWORD PTR [ebx],0xf6
  417167:	mov    cl,0x27
  417169:	push   cs
  41716a:	pop    ebx
  41716b:	xor    bl,BYTE PTR [esi-0x3]
  41716e:	mov    dl,0x2f
  417170:	ds push edi
  417172:	add    al,0x2c
  417174:	push   eax
  417175:	mov    esp,0x238e9e17
  41717a:	add    al,0x86
  41717c:	inc    ebp
  41717d:	push   ebx
  41717e:	push   esp
  41717f:	jnp    0x417176
  417181:	pop    es
  417182:	push   edx
  417183:	stc    
  417184:	sbb    al,0xe1
  417186:	jp     0x417132
  417188:	inc    edx
  417189:	bound  eax,QWORD PTR [edx+0x6]
  41718c:	test   bh,cl
  41718e:	add    edi,DWORD PTR [ebx+0x5ac6e72a]
  417194:	adc    al,0x8a
  417196:	iret   
  417197:	push   edx
  417198:	adc    al,0x64
  41719a:	mov    ebx,0xb945c7ab
  41719f:	inc    esi
  4171a0:	jo     0x41721a
  4171a2:	mov    eax,0x494a6500
  4171a7:	(bad)  
  4171a8:	xor    dl,BYTE PTR [esp+eax*2]
  4171ab:	pop    ss
  4171ac:	inc    esi
  4171ad:	js     0x4171ce
  4171af:	add    BYTE PTR [esi+0x168e9b6f],al
  4171b5:	ins    BYTE PTR es:[edi],dx
  4171b6:	outs   dx,BYTE PTR ds:[esi]
  4171b7:	mov    edx,0xf1246f89
  4171bc:	sbb    eax,0xd03a131
  4171c1:	xchg   ebp,eax
  4171c2:	fstp   DWORD PTR [edx-0x4d]
  4171c5:	sub    al,BYTE PTR [ebx]
  4171c7:	(bad)  
  4171c8:	repnz adc eax,DWORD PTR [edx+edx*8]
  4171cc:	cdq    
  4171cd:	sub    ch,BYTE PTR [ebx]
  4171cf:	(bad)  
  4171d0:	loop   0x4171e5
  4171d2:	xchg   edi,eax
  4171d3:	repz xor esp,edi
  4171d6:	or     esi,ebp
  4171d8:	test   DWORD PTR [ebp+0x42],edi
  4171db:	je     0x417207
  4171dd:	ror    ebx,0x9
  4171e0:	pop    ebp
  4171e1:	dec    esp
  4171e2:	loop   0x417197
  4171e4:	ret    
  4171e5:	push   ss
  4171e6:	repz inc ebx
  4171e8:	cmp    BYTE PTR [edx-0x34],0xe7
  4171ec:	test   DWORD PTR [edx+eax*2+0x3c],edi
  4171f0:	inc    ebx
  4171f1:	jno    0x4171e6
  4171f3:	aam    0x35
  4171f5:	xor    BYTE PTR [edx-0x17],cl
  4171f8:	int3   
  4171f9:	jne    0x41724a
  4171fb:	stos   BYTE PTR es:[edi],al
  4171fc:	(bad)  
  4171fd:	retf   0x68e5
  417200:	jmp    0x862a7b5f
  417205:	jno    0x417263
  417207:	add    BYTE PTR ds:[ecx],al
  41720a:	xchg   edi,eax
  41720b:	add    ah,BYTE PTR [edx-0x7c]
  41720e:	leave  
  41720f:	mov    DWORD PTR [ebp-0x76],esi
  417212:	inc    edx
  417213:	or     dh,BYTE PTR [eax+0x46]
  417216:	bswap  esp
  417218:	sub    al,0xb1
  41721a:	inc    edx
  41721b:	scas   eax,DWORD PTR es:[edi]
  41721c:	mov    ecx,0x74f31336
  417221:	inc    esi
  417222:	neg    DWORD PTR [ecx+0x72]
  417225:	aam    0x2a
  417227:	dec    eax
  417228:	push   esp
  417229:	int3   
  41722a:	adc    eax,0xbe7c298e
  41722f:	ret    
  417230:	jmp    0xa4c1b4ba
  417235:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417236:	sub    al,BYTE PTR [eax]
  417238:	adc    eax,0x397f15ac
  41723d:	add    BYTE PTR [eax+ecx*1],dl
  417240:	pushf  
  417241:	add    DWORD PTR [ecx-0x3e7bede6],ebp
  417247:	repz (bad) 
  417249:	(bad)  
  41724a:	aas    
  41724b:	pusha  
  41724c:	in     eax,dx
  41724d:	sub    eax,0x1c00082a
  417252:	jg     0x4172ae
  417254:	lea    esp,[edx]
  417256:	fistp  WORD PTR [edi+0x0]
  417259:	out    dx,eax
  41725a:	ja     0x417273
  41725c:	xor    al,0xb1
  41725e:	(bad)  
  41725f:	repnz xor bl,0x49
  417263:	ins    BYTE PTR es:[edi],dx
  417264:	mov    DWORD PTR [edx-0x22],edx
  417267:	inc    ebx
  417268:	dec    esi
  417269:	push   ebx
  41726a:	sbb    BYTE PTR [edx+0x49b200ee],cl
  417270:	xchg   DWORD PTR [edi+0x6a0a3eaf],edx
  417276:	mov    edi,0x6fe146bb
  41727b:	mov    ebx,0x796fa846
  417280:	pop    ss
  417281:	xor    BYTE PTR [ecx+0x2382f306],al
  417287:	cmp    esp,ecx
  417289:	push   es
  41728a:	in     al,0xd1
  41728c:	ror    DWORD PTR [ecx-0x74941d5e],cl
  417292:	mov    dl,0x75
  417294:	pusha  
  417295:	add    eax,ebx
  417297:	add    ebx,edx
  417299:	pushw  ds
  41729b:	xchg   DWORD PTR [edx],eax
  41729d:	lea    edx,[edx+0x7e]
  4172a0:	ins    BYTE PTR es:[edi],dx
  4172a1:	mov    edx,esi
  4172a3:	out    0xe1,eax
  4172a5:	push   ecx
  4172a6:	(bad)  
  4172a7:	imul   esi,ebp,0xffffffff
  4172aa:	push   edx
  4172ab:	cmp    BYTE PTR [edi+0x45],0xff
  4172af:	push   ds
  4172b0:	add    esp,DWORD PTR [edi]
  4172b2:	das    
  4172b3:	inc    esi
  4172b4:	or     esi,0xffcf28b7
  4172ba:	pop    eax
  4172bb:	ret    0x74c9
  4172be:	xor    al,0xc7
  4172c0:	outs   dx,BYTE PTR ds:[esi]
  4172c1:	or     al,0xef
  4172c3:	add    DWORD PTR [ebp-0x1],ebx
  4172c6:	adc    al,BYTE PTR [edx+0x27865581]
  4172cc:	mov    esi,0x85d38369
  4172d1:	into   
  4172d2:	add    dh,ch
  4172d4:	cwde   
  4172d5:	xor    ebp,edi
  4172d7:	fldenv [edi-0x3ab88cb2]
  4172dd:	pop    es
  4172de:	mov    eax,DWORD PTR [ebx+0x3f]
  4172e1:	mov    esi,0x28f3b988
  4172e6:	sti    
  4172e7:	mov    ecx,0xbe738bf0
  4172ec:	loopne 0x4172a1
  4172ee:	(bad)  
  4172ef:	loop   0x41736a
  4172f1:	into   
  4172f2:	jmp    FWORD PTR [ecx-0x6602cb1c]
  4172f8:	shl    DWORD PTR [ebx+0x555706f8],1
  4172fe:	add    edi,DWORD PTR [ecx-0x63]
  417301:	repnz cld 
  417303:	sub    eax,0x51d9c01c
  417309:	mov    ch,0xc6
  41730b:	inc    esp
  41730c:	daa    
  41730d:	pop    es
  41730e:	push   0xffffff87
  417310:	outs   dx,BYTE PTR ds:[esi]
  417311:	mov    ah,0xdb
  417313:	mov    dh,0x94
  417315:	pop    edx
  417316:	call   0xfd94026d
  41731b:	pop    ebp
  41731c:	mov    ah,0xe4
  41731e:	or     al,0xfb
  417320:	sbb    eax,0x8d2e589b
  417325:	outs   dx,DWORD PTR ds:[esi]
  417326:	add    BYTE PTR [esi+0x30fc470],al
  41732c:	scas   al,BYTE PTR es:[edi]
  41732d:	dec    edx
  41732e:	(bad)  
  41732f:	sub    DWORD PTR [eax+0x73927352],eax
  417335:	sbb    al,0x5c
  417337:	add    BYTE PTR [ecx],bl
  417339:	push   eax
  41733a:	xchg   BYTE PTR [ebx+0x76],dh
  41733d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41733e:	dec    edx
  41733f:	xchg   DWORD PTR [ebx],eax
  417341:	jecxz  0x417394
  417343:	std    
  417344:	add    DWORD PTR [edx+0x7e],eax
  417347:	mov    esi,0x7f197205
  41734c:	iret   
  41734d:	adc    BYTE PTR [edi+edi*2],bl
  417350:	(bad)  
  417351:	xchg   ebp,eax
  417352:	ret    
  417353:	or     BYTE PTR [ebx],bl
  417355:	xchg   DWORD PTR [ebp-0x35],esp
  417358:	inc    ecx
  417359:	xchg   esi,eax
  41735a:	out    dx,al
  41735b:	test   dh,bl
  41735d:	ss jbe 0x417361
  417360:	xchg   edi,eax
  417361:	add    cl,BYTE PTR [ebx+0x7dc8458a]
  417367:	adc    DWORD PTR [edx+0x11],0xbf5657d4
  41736e:	and    eax,0x7b1a5680
  417373:	bound  esp,QWORD PTR [ebx+0x12446510]
  417379:	cmp    DWORD PTR [esi-0x7f],esp
  41737c:	cmp    dl,BYTE PTR [ecx]
  41737e:	mov    esp,0x2dbf3657
  417383:	cwde   
  417384:	(bad)  
  417385:	mov    ebp,0x10784865
  41738a:	xchg   esp,eax
  41738b:	mov    ah,0x69
  41738d:	mov    cl,0x3c
  41738f:	push   edi
  417390:	imul   edi,DWORD PTR [esi+0x1060486d],0xffffff8c
  417397:	mov    ah,0x5a
  417399:	xchg   esi,eax
  41739a:	jge    0x417325
  41739c:	add    ch,al
  41739e:	cli    
  41739f:	clflush BYTE PTR [ecx+0x43628a1a]
  4173a6:	adc    BYTE PTR [esi-0x6f],bh
  4173a9:	dec    edx
  4173aa:	adc    DWORD PTR [edi+edx*2-0x4],edx
  4173ae:	jmp    0x8b44:0xfcdb048
  4173b5:	xchg   ebp,eax
  4173b6:	cmp    dl,bh
  4173b8:	add    ecx,DWORD PTR ds:0x29b41586
  4173be:	jae    0x4173ca
  4173c0:	xor    eax,0xb4850db1
  4173c5:	dec    ebp
  4173c6:	add    eax,0x9926314d
  4173cb:	dec    edx
  4173cc:	jmp    0x1711b72e
  4173d1:	push   ecx
  4173d2:	mov    esp,0xd7400c6
  4173d7:	repz push es
  4173d9:	pop    ss
  4173da:	mov    ebx,0xe65e68e5
  4173df:	or     al,0xe9
  4173e1:	test   DWORD PTR [ecx+0x5b],esi
  4173e4:	out    dx,al
  4173e5:	mov    dh,0x3b
  4173e7:	pop    ss
  4173e8:	sub    DWORD PTR [edx+0x2f144b9],eax
  4173ee:	test   dh,ah
  4173f0:	bound  ebp,QWORD PTR [ebx-0x75a245f2]
  4173f6:	inc    edx
  4173f7:	or     dh,BYTE PTR [esi+edx*8+0x1b]
  4173fb:	(bad)  
  4173fc:	stc    
  4173fd:	mov    dh,0xf
  4173ff:	repz inc ebx
  417401:	add    BYTE PTR [esi-0x47b51d96],al
  417407:	or     eax,0x93c56df3
  41740c:	or     ebx,ebx
  41740e:	lds    esp,FWORD PTR [edi]
  417410:	out    dx,eax
  417411:	jmp    0xe7c0b69b
  417416:	mov    eax,0x5720293
  41741b:	ret    0xe908
  41741e:	test   ecx,eax
  417420:	inc    esp
  417421:	jno    0x4173d3
  417423:	mov    ebx,0xfdad7954
  417428:	xchg   edi,eax
  417429:	call   0xd60b3ab3
  41742e:	jnp    0x41743d
  417430:	jge    0x41748b
  417432:	cld    
  417433:	cmp    dh,0x41
  417436:	and    al,0x80
  417438:	repz add al,al
  41743b:	xor    al,0xd1
  41743d:	mov    edx,ebp
  41743f:	call   0xad:0xc520c331
  417446:	out    dx,eax
  417447:	inc    edx
  417448:	jg     0x417407
  41744a:	ret    
  41744b:	push   0xac97fff5
  417450:	pop    ecx
  417451:	call   DWORD PTR [eax+0x5f03ebc]
  417457:	inc    esi
  417458:	jg     0x4173df
  41745a:	push   0x75
  41745c:	cmc    
  41745d:	(bad)  
  41745e:	out    dx,eax
  41745f:	mov    ebx,0x1c4f446
  417464:	jmp    0x41744e
  417466:	add    ch,bl
  417468:	hlt    
  417469:	repz push DWORD PTR [esi+ebp*2]
  41746d:	xor    ebx,edi
  41746f:	pop    ebx
  417470:	jmp    0x890f:0x6240781
  417477:	jb     0x4174ef
  417479:	xor    DWORD PTR [ebp-0x4d],eax
  41747c:	icebp  
  41747d:	or     al,0x83
  41747f:	bound  ebp,QWORD PTR [esi-0xb]
  417482:	jmp    0x4174f7
  417484:	shr    DWORD PTR [edx-0x38],1
  417487:	outs   dx,DWORD PTR ds:[esi]
  417488:	inc    edx
  417489:	or     dl,BYTE PTR [edi+0x17]
  41748c:	mov    bl,0x6f
  41748e:	add    DWORD PTR [edi+0x2b],ebx
  417491:	leave  
  417492:	je     0x4174ee
  417494:	sub    DWORD PTR [edx+0xc],edx
  417497:	jp     0x4174a9
  417499:	pop    edx
  41749a:	push   0xffffff8b
  41749c:	fucomip st,st(2)
  41749e:	mov    ds:0x3b0a4185,al
  4174a3:	sbb    al,0xf3
  4174a5:	sbb    BYTE PTR [ecx],bh
  4174a7:	xchg   edi,eax
  4174a8:	cmp    bh,BYTE PTR [esi+0xd]
  4174ab:	clc    
  4174ac:	mov    edx,0x6e72e8cb
  4174b1:	cmc    
  4174b2:	inc    DWORD PTR [esi+0x2df7b3a2]
  4174b8:	inc    esp
  4174b9:	add    esi,0xfd52852e
  4174bf:	adc    DWORD PTR [ecx+0x1b8696de],ebp
  4174c5:	pop    es
  4174c6:	xor    esi,eax
  4174c8:	cmp    esi,0xffffffe7
  4174cb:	add    cl,bh
  4174cd:	fs mov ecx,0x71c0e67
  4174d3:	add    BYTE PTR [ebp-0x11fe99a5],dh
  4174d9:	cmp    al,0x5d
  4174db:	lds    eax,FWORD PTR [ebx+0x43]
  4174de:	pop    es
  4174df:	add    BYTE PTR [esi-0x21caa1e5],al
  4174e5:	sub    eax,0xb4c1fd1d
  4174ea:	pop    esi
  4174eb:	sar    BYTE PTR [ecx+0x24],1
  4174ee:	pop    esi
  4174ef:	std    
  4174f0:	cmp    ebp,ebx
  4174f2:	pop    esi
  4174f3:	enter  0xf469,0x5d
  4174f7:	mov    DWORD PTR [eax+0xdf7c3fc],ecx
  4174fd:	push   edi
  4174fe:	push   es
  4174ff:	mov    DWORD PTR [esi],eax
  417501:	pushf  
  417502:	or     BYTE PTR [eax],al
  417504:	xchg   BYTE PTR [ebx],al
  417506:	mov    ebp,0x1a1b8791
  41750b:	rol    BYTE PTR ds:0x80ff5666,0x97
  417512:	inc    edi
  417513:	pop    ebp
  417514:	int    0xe2
  417516:	dec    eax
  417517:	add    al,0x86
  417519:	inc    ecx
  41751a:	cli    
  41751b:	out    0xdb,eax
  41751d:	or     DWORD PTR [esi-0x3],ebx
  417520:	mov    dh,0x9e
  417522:	mov    dh,0x3
  417524:	mov    dh,0x94
  417526:	in     al,0x3b
  417528:	cwde   
  417529:	pop    ebx
  41752a:	push   cs
  41752b:	add    DWORD PTR [edx+0x42],0x46007efd
  417532:	xchg   esi,eax
  417533:	in     al,dx
  417534:	adc    DWORD PTR [esi+0x1b],eax
  417537:	and    eax,DWORD PTR [ebx]
  417539:	xchg   BYTE PTR [edx-0x2c],al
  41753c:	mov    ebx,es
  41753e:	cs nop
  417540:	scas   al,BYTE PTR es:[edi]
  417541:	push   esi
  417542:	pop    ds
  417543:	fisttp QWORD PTR [esi+0x7]
  417547:	mov    ch,0xaf
  417549:	push   cs
  41754a:	jle    0x417559
  41754c:	hlt    
  41754d:	push   cs
  41754e:	cmp    eax,DWORD PTR [ebx-0x1dd18ee6]
  417554:	add    eax,DWORD PTR [esi-0x1f165969]
  41755a:	and    al,0x82
  41755c:	xor    al,0xdb
  41755e:	or     al,0x78
  417560:	push   ebx
  417561:	(bad)  
  417562:	pop    ss
  417563:	jge    0x417580
  417565:	xchg   ecx,eax
  417566:	pop    esp
  417567:	jnp    0x41758e
  417569:	or     eax,0x3f80ed6c
  41756e:	inc    esi
  41756f:	icebp  
  417570:	fmul   DWORD PTR [ecx+edi*4-0x6a397721]
  417577:	hlt    
  417578:	xchg   dh,al
  41757a:	inc    ebp
  41757b:	inc    edi
  41757c:	or     BYTE PTR [esi],dh
  41757e:	mov    edi,0xd41ec23
  417583:	fimul  WORD PTR [edi]
  417585:	jo     0x417509
  417587:	loope  0x41750f
  417589:	dec    edx
  41758a:	aas    
  41758b:	outs   dx,BYTE PTR ds:[esi]
  41758c:	inc    esp
  41758d:	repnz xchg ebp,eax
  41758f:	xchg   DWORD PTR es:[edi+0x3b],eax
  417593:	call   0xf62b75b9
  417598:	xor    bl,BYTE PTR [edx+ebp*4+0x4b]
  41759c:	test   BYTE PTR [ebx-0x75],dl
  41759f:	shl    DWORD PTR [ebx],cl
  4175a1:	and    dl,BYTE PTR [edi+0x450f0b1d]
  4175a7:	xchg   edi,eax
  4175a8:	or     bl,BYTE PTR ds:0xd92e7ec1
  4175ae:	mov    eax,0xb206c43
  4175b3:	sub    eax,0x8f85e909
  4175b8:	dec    ebp
  4175b9:	ret    
  4175ba:	mov    ebx,DWORD PTR [edx]
  4175bc:	or     BYTE PTR [esi],ch
  4175be:	mov    ch,0xd
  4175c0:	jg     0x4175fb
  4175c2:	or     DWORD PTR [edi],0x5c7b017e
  4175c8:	je     0x4175d1
  4175ca:	pop    es
  4175cb:	ins    DWORD PTR es:[edi],dx
  4175cc:	push   cs
  4175cd:	push   0xffffffc9
  4175cf:	aas    
  4175d0:	push   ss
  4175d1:	pushf  
  4175d2:	idiv   BYTE PTR [edx-0x69bd9bfa]
  4175d8:	sbb    ebp,DWORD PTR [edx+0x4a]
  4175db:	cmp    ah,BYTE PTR [eax-0x7]
  4175de:	adc    eax,0x15e74ab9
  4175e3:	nop    DWORD PTR [ebp+0x6a0a4bcf]
  4175ea:	dec    esi
  4175eb:	lea    ebp,ds:[ecx]
  4175ee:	fidiv  WORD PTR ds:0x3a486a4d
  4175f4:	das    
  4175f5:	(bad)  
  4175f7:	lock pop ebx
  4175f9:	rol    DWORD PTR [eax],0x4e
  4175fc:	dec    esp
  4175fd:	repz into 
  4175ff:	jae    0x417603
  417601:	push   esp
  417602:	and    al,0xe1
  417604:	add    DWORD PTR [esi],ecx
  417606:	jmp    0xf7fc99da
  41760b:	aam    0xd
  41760d:	mov    edx,0x5c12d8e8
  417612:	jb     0x41766d
  417614:	pop    edi
  417615:	add    dh,BYTE PTR [esi]
  417617:	jmp    0x867af524
  41761c:	mov    ecx,0x92d85b1d
  417621:	bound  eax,QWORD PTR [eax]
  417623:	pop    esp
  417624:	jne    0x4175a7
  417626:	push   eax
  417627:	jnp    0x417654
  417629:	ret    
  41762a:	cmp    esi,DWORD PTR [ebp-0x10ccf90f]
  417630:	imul   esp,DWORD PTR [eax],0xfffffff6
  417633:	jecxz  0x417697
  417635:	sbb    al,BYTE PTR [ecx]
  417637:	in     al,dx
  417638:	repnz cmp BYTE PTR [ebp-0x74ef0e48],al
  41763f:	out    dx,eax
  417640:	cs and ecx,esi
  417643:	sbb    BYTE PTR [ecx+0x13910f1a],ch
  417649:	add    eax,0x4543db8a
  41764e:	inc    ecx
  41764f:	neg    DWORD PTR [edx]
  417651:	or     DWORD PTR [ebp-0x77],esi
  417654:	mov    ecx,0x34947ff4
  417659:	retf   0x1440
  41765c:	rcl    BYTE PTR [edx+eax*8+0x0],1
  417660:	out    0x3e,eax
  417662:	adc    BYTE PTR [ecx],0x55
  417665:	cmp    DWORD PTR [ebp+0x41],eax
  417668:	and    DWORD PTR ds:0xb9b175c8,edi
  41766e:	hlt    
  41766f:	jg     0x41762f
  417671:	ins    BYTE PTR es:[edi],dx
  417672:	in     al,dx
  417673:	xor    ebx,edi
  417675:	ins    BYTE PTR es:[edi],dx
  417676:	out    0x55,eax
  417678:	xor    al,0xa2
  41767a:	jae    0x417668
  41767c:	mov    ds:0x5c000a3f,eax
  417681:	enter  0x7581,0xb3
  417685:	leave  
  417686:	cmp    edx,0x2ceb5714
  41768c:	pop    eax
  41768d:	inc    esi
  41768e:	or     cl,BYTE PTR [ebx+0x46315aa2]
  417694:	ja     0x4176d9
  417696:	mov    DWORD PTR [eax+ebp*2],esi
  417699:	inc    esi
  41769a:	or     dh,dh
  41769c:	xchg   BYTE PTR [esi+0x2e],dl
  41769f:	add    cl,BYTE PTR ds:0xcb86e65f
  4176a5:	mov    bl,0xd1
  4176a7:	or     al,0xfd
  4176a9:	pop    esi
  4176aa:	cli    
  4176ab:	xchg   bl,cl
  4176ad:	jecxz  0x417721
  4176af:	inc    ebx
  4176b0:	dec    esi
  4176b1:	mov    ds:0xd6ffcba3,eax
  4176b6:	loop   0x417641
  4176b8:	jns    0x417656
  4176ba:	jmp    0x4176ab
  4176bc:	xchg   BYTE PTR [ebx+ebp*8-0x6f177915],bl
  4176c3:	mov    edi,0x42d6ff00
  4176c8:	or     DWORD PTR [esi],0x338509d2
  4176ce:	inc    ebx
  4176cf:	push   cs
  4176d0:	add    BYTE PTR [ecx+0x2517e91],cl
  4176d6:	fild   DWORD PTR [esi]
  4176d8:	std    
  4176d9:	mov    ds:0x4789158e,al
  4176de:	sbb    ecx,DWORD PTR [edx]
  4176e0:	mov    dh,0x41
  4176e2:	sbb    cl,BYTE PTR [edx]
  4176e4:	mov    dh,0x41
  4176e6:	sbb    eax,0x147ee048
  4176eb:	dec    eax
  4176ec:	add    BYTE PTR [ecx+0x1c],0xbe
  4176f0:	xchg   BYTE PTR [ebx-0x11],al
  4176f3:	or     DWORD PTR [ebx+0x71c1b],eax
  4176f9:	add    eax,0x45c35e27
  4176fe:	sbb    eax,DWORD PTR [edi]
  417700:	or     eax,0x79f02
  417705:	xchg   BYTE PTR [eax],dl
  417707:	xchg   ecx,eax
  417708:	inc    ebp
  417709:	adc    BYTE PTR [ecx+ecx*8+0x7a560f6b],0x89
  417711:	shl    bh,0x6f
  417714:	inc    ebx
  417715:	es inc edx
  417717:	js     0x4176e2
  417719:	loope  0x417778
  41771b:	mov    ecx,0x67dacd7a
  417720:	mov    esi,0x7aa95d81
  417725:	(bad)
  417728:	mov    esi,0xb7bd1d00
  41772d:	sbb    al,0x4e
  41772f:	cmp    DWORD PTR [ebx],esi
  417731:	enter  0x384,0x81
  417735:	sti    
  417736:	or     BYTE PTR [edi-0x6f],dh
  417739:	add    al,dh
  41773b:	js     0x417728
  41773d:	cld    
  41773e:	loopne 0x417778
  417740:	xchg   ebx,eax
  417741:	rol    BYTE PTR [ecx-0x7cbc5245],0xd0
  417748:	mov    ds:0xf921c908,eax
  41774d:	cld    
  41774e:	inc    eax
  41774f:	mov    ebx,0x7f0f47a5
  417754:	shr    DWORD PTR [edx-0x61],1
  417757:	add    al,0x32
  417759:	dec    ebx
  41775a:	add    DWORD PTR [edi+0x5d],edi
  41775d:	jl     0x417767
  41775f:	mov    esi,0xbb8603e0
  417764:	lods   eax,DWORD PTR ds:[esi]
  417765:	mov    edi,edi
  417767:	mov    edi,0x42860368
  41776c:	mov    si,0x119
  417770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417771:	imul   edi,DWORD PTR [ecx+0x903e108],0x7f
  417778:	lods   eax,DWORD PTR ds:[esi]
  417779:	dec    edi
  41777a:	xchg   ebp,eax
  41777b:	adc    ch,BYTE PTR [esi-0x5f425e3d]
  417781:	dec    DWORD PTR [edx]
  417783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417784:	out    0x3,al
  417786:	xchg   BYTE PTR [ecx],bh
  417788:	jns    0x4177e0
  41778a:	pop    esi
  41778b:	inc    edx
  41778c:	loope  0x417710
  41778e:	add    BYTE PTR [ebx+0x41],cl
  417791:	or     ah,BYTE PTR [ecx+esi*1+0x43]
  417795:	add    esi,DWORD PTR [edi+0x6c]
  417798:	rol    DWORD PTR [ecx+ebx*4+0x5],0x10
  41779d:	ins    BYTE PTR es:[edi],dx
  41779e:	out    dx,al
  41779f:	or     DWORD PTR [eax],esp
  4177a1:	or     ecx,ebp
  4177a3:	test   ecx,eax
  4177a5:	lock push es
  4177a7:	push   ecx
  4177a8:	(bad)  
  4177a9:	jmp    0x8783fd96
  4177ae:	sub    BYTE PTR [esi],0x94
  4177b1:	dec    edi
  4177b2:	push   0xffffffcb
  4177b4:	mov    ds:0x1005177e,eax
  4177b9:	(bad)  
  4177ba:	fdiv   QWORD PTR [ecx]
  4177bc:	aaa    
  4177bd:	mov    esp,0xbc358aa6
  4177c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177c3:	xchg   edi,eax
  4177c5:	jmp    0x70a84ab
  4177ca:	inc    ecx
  4177cb:	stos   DWORD PTR es:[edi],eax
  4177cc:	les    ecx,FWORD PTR [eax]
  4177ce:	jmp    0xd8e3158
  4177d3:	ret    0x6077
  4177d6:	call   0x9d357faa
  4177db:	fnstsw WORD PTR [edx-0x6caf4842]
  4177e1:	sbb    dl,BYTE PTR [esi]
  4177e3:	mov    edi,0xcd94f33b
  4177e8:	pop    ds
  4177e9:	call   0x8b01:0x87053907
  4177f0:	xor    eax,0xb6004f8e
  4177f5:	pop    es
  4177f6:	repz fs dec edx
  4177f9:	mov    ?,edi
  4177fb:	and    ebx,DWORD PTR [eax-0x5f210cf5]
  417801:	les    ecx,FWORD PTR [ecx+0x7428201]
  417807:	dec    esp
  417808:	mov    fs,WORD PTR [eax]
  41780a:	dec    ebp
  41780b:	add    BYTE PTR [esi-0x6f0f5bd],bl
  417811:	add    BYTE PTR [edi],al
  417813:	psubw  mm2,mm0
  417816:	pop    es
  417817:	sar    DWORD PTR [edi],0xb
  41781a:	add    al,dl
  41781c:	pop    esp
  41781d:	xor    DWORD PTR [ecx],0x45
  417820:	pop    edi
  417821:	repnz dec DWORD PTR [edx+0x3c894299]
  417828:	fld    QWORD PTR [ebx+0x5]
  41782b:	(bad)  
  41782c:	loopne 0x41786f
  41782e:	or     al,BYTE PTR [eax]
  417830:	lods   al,BYTE PTR ds:[esi]
  417831:	sbb    dh,bh
  417833:	add    BYTE PTR [esi+esi*2+0x41aa0f67],ch
  41783a:	repz call FWORD PTR [edi]
  41783d:	mov    WORD PTR [eax+ebp*1-0x54],es
  417841:	sbb    dl,BYTE PTR [edi]
  417843:	add    BYTE PTR [esi+0x7b],bl
  417846:	mov    DWORD PTR [esi+0x7f],edi
  417849:	mov    eax,DWORD PTR ds:[ebp+0x4f]
  41784d:	xchg   BYTE PTR [edi],bh
  41784f:	in     al,dx
  417850:	inc    ecx
  417851:	popa   
  417852:	add    eax,0xbd07eeb6
  417857:	push   ecx
  417858:	add    dh,bl
  41785a:	jge    0x417846
  41785c:	or     ah,dh
  41785e:	xor    BYTE PTR [ecx],0x45
  417861:	jg     0x417852
  417863:	add    eax,DWORD PTR [ebx]
  417865:	and    DWORD PTR [edi-0xb],ebx
  417868:	inc    ebp
  417869:	fisttp DWORD PTR [ebx+0x2561447]
  41786f:	fistp  QWORD PTR [ebx]
  417871:	jmp    0x251feed8
  417876:	cli    
  417877:	push   ss
  417878:	cmp    ebp,ecx
  41787a:	bound  eax,QWORD PTR ds:0xa3de08d
  417880:	add    BYTE PTR [edi+edi*8],dl
  417883:	fimul  WORD PTR [ecx+0x395e5686]
  417889:	dec    eax
  41788a:	inc    ecx
  41788b:	fmul   QWORD PTR [ebx-0x3]
  41788e:	push   ebp
  41788f:	pop    esi
  417890:	sub    eax,ecx
  417892:	aas    
  417893:	outs   dx,DWORD PTR ds:[esi]
  417894:	inc    ebx
  417895:	jbe    0x417830
  417897:	dec    esi
  417898:	add    dl,dh
  41789a:	mov    al,ds:0xdc05ebcb
  41789f:	pop    es
  4178a0:	push   eax
  4178a1:	popa   
  4178a2:	ud0    edx,DWORD PTR ds:0x56a01bc6
  4178a9:	or     ebx,esp
  4178ab:	fisubr DWORD PTR [ebx]
  4178ad:	std    
  4178ae:	dec    esi
  4178af:	pop    esi
  4178b0:	or     eax,0xb5f61af8
  4178b5:	xlat   BYTE PTR ds:[ebx]
  4178b6:	sbb    cl,BYTE PTR [eax-0x20]
  4178b9:	jle    0x4178db
  4178bb:	dec    ecx
  4178bc:	add    DWORD PTR [eax],eax
  4178be:	inc    esi
  4178bf:	popa   
  4178c0:	retf   
  4178c1:	bt     DWORD PTR [esi],edx
  4178c4:	jb     0x41791c
  4178c6:	mov    bl,BYTE PTR [eax-0x1b797de6]
  4178cc:	jae    0x4178cd
  4178ce:	xchg   DWORD PTR [ebx],ebx
  4178d0:	pop    es
  4178d1:	sub    DWORD PTR [ebx+0x4f],0x4348390e
  4178d8:	fnsave [ebx-0x2ad2103]
  4178de:	inc    ebx
  4178df:	pop    es
  4178e0:	jo     0x417925
  4178e2:	(bad)  
  4178e3:	nop
  4178e4:	retf   
  4178e5:	adc    ebx,DWORD PTR [ebp+0x397b26d5]
  4178eb:	mov    al,ds:0x5c05ebcb
  4178f0:	or     BYTE PTR [edi+0x4371374b],al
  4178f6:	mov    dh,0x18
  4178f8:	int    0x23
  4178fa:	(bad)  
  4178fb:	ficom  WORD PTR [esi-0x7f]
  4178fe:	mov    BYTE PTR [edx-0x21],0xb3
  417902:	mov    ds:0x754cc58f,al
  417907:	dec    edx
  417908:	repz ret 
  41790a:	xchg   ecx,eax
  41790b:	push   0x3a
  41790d:	xchg   esi,eax
  41790f:	(bad)  
  417910:	out    dx,eax
  417911:	js     0x4178e0
  417913:	adc    ah,ah
  417915:	xchg   ebp,eax
  417916:	jns    0x41794c
  417918:	jae    0x4178d4
  41791a:	jo     0x41791e
  41791c:	sar    ebx,0x7e
  41791f:	add    esp,eax
  417921:	inc    ebx
  417922:	add    BYTE PTR [edi-0x73310e81],bl
  417928:	mov    ecx,0x4607002a
  41792d:	bound  eax,QWORD PTR [ebx]
  41792f:	jnp    0x4178e8
  417931:	imul   eax,DWORD PTR [edx],0xffffff86
  417934:	inc    edx
  417935:	pusha  
  417936:	out    0x35,al
  417938:	inc    edx
  417939:	jl     0x417901
  41793b:	xchg   ebp,eax
  41793c:	mov    ecx,0x7c6ef82d
  417941:	add    eax,edx
  417943:	xlat   BYTE PTR ds:[ebx]
  417944:	xor    al,0x9b
  417946:	les    ebx,FWORD PTR [eax]
  417948:	xor    al,0x93
  41794a:	mov    esp,0xfb410387
  41794f:	jle    0x417954
  417951:	loopne 0x41799e
  417953:	pop    es
  417954:	xchg   DWORD PTR ds:0x613b7503,edi
  41795a:	or     al,0x5a
  41795c:	xor    eax,0x4286a96e
  417961:	loope  0x4178e3
  417963:	retf   
  417964:	inc    eax
  417965:	pusha  
  417966:	into   
  417967:	frstor [eax+0x263586ec]
  41796d:	loope  0x417972
  41796f:	(bad)  
  417970:	jle    0x417937
  417972:	ret    
  417973:	push   ecx
  417974:	cwde   
  417975:	fisttp WORD PTR [ebp+esi*1+0x26]
  417979:	or     ah,BYTE PTR [edx+0x7a]
  41797c:	pop    es
  41797d:	jge    0x417950
  41797f:	repz add eax,0xfb20f97d
  417985:	repnz push esp
  417987:	add    BYTE PTR [esi+0x2de17d05],bl
  41798d:	adc    esi,esi
  41798f:	into   
  417990:	cmp    eax,0x8a0ff21d
  417995:	inc    edx
  417996:	jg     0x4179ef
  417998:	test   BYTE PTR [edx+0xa],0xe9
  41799c:	push   es
  41799d:	icebp  
  41799e:	add    ah,BYTE PTR [ebp-0x5d]
  4179a1:	add    al,0xf3
  4179a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179a4:	pop    ebp
  4179a5:	into   
  4179a6:	dec    edx
  4179a7:	in     eax,0x5c
  4179a9:	into   
  4179aa:	inc    edx
  4179ab:	in     al,dx
  4179ac:	retf   0x222
  4179af:	loop   0x417973
  4179b1:	mov    ebx,0x58f814c
  4179b6:	repz jmp 0xdecfaf41
  4179bc:	mov    al,BYTE PTR [edx+0xa]
  4179bf:	mov    dl,0x43
  4179c1:	inc    eax
  4179c2:	add    ebp,DWORD PTR [ebp+0x1c]
  4179c5:	add    eax,0xa000e9f3
  4179ca:	(bad)  
  4179cb:	jmp    0xc73c01d8
  4179d0:	or     al,0xc1
  4179d2:	jns    0x417a1a
  4179d4:	dec    ebp
  4179d5:	add    eax,0xc19da77f
  4179da:	ins    BYTE PTR es:[edi],dx
  4179db:	fld    QWORD PTR [ebp-0x7df68c3f]
  4179e1:	mov    ebx,0x61cc154c
  4179e6:	add    edx,DWORD PTR [edi-0x26]
  4179e9:	ss mov esp,0xc38a00b9
  4179ef:	call   0x2f3b42d5
  4179f4:	add    dl,bh
  4179f6:	ja     0x417a76
  4179f8:	adc    DWORD PTR [ecx+eax*1+0x13e2ff27],ebp
  4179ff:	or     BYTE PTR [ebp-0x2d],0x86
  417a03:	inc    edi
  417a04:	in     al,dx
  417a05:	fs enter 0x7c12,0xd9
  417a0a:	test   BYTE PTR [edi+0x14],al
  417a0d:	je     0x417a0f
  417a0f:	adc    ecx,DWORD PTR [edi]
  417a11:	sub    ch,BYTE PTR ds:0x8448fff5
  417a17:	inc    edi
  417a18:	in     al,dx
  417a19:	test   BYTE PTR [edx],0xe3
  417a1c:	cmp    esp,DWORD PTR [ecx-0x1bb883da]
  417a22:	add    ah,bl
  417a24:	sub    esi,DWORD PTR [ecx-0xba749e]
  417a2a:	mov    ebx,0x838f02c9
  417a2f:	inc    edi
  417a30:	in     al,dx
  417a31:	fdivr  QWORD PTR [edi+0x8]
  417a34:	push   eax
  417a35:	or     BYTE PTR [edx],dl
  417a37:	cmp    edx,DWORD PTR [esi]
  417a39:	outs   dx,DWORD PTR ds:[esi]
  417a3a:	ds pop ebx
  417a3c:	pop    ecx
  417a3d:	mov    ds:0xa427777f,al
  417a42:	retf   0xfe2
  417a45:	add    DWORD PTR [esi],ecx
  417a47:	push   es
  417a48:	mov    dh,0xee
  417a4a:	cmp    eax,0x427e2b3
  417a4f:	leave  
  417a50:	mov    eax,DWORD PTR [eax]
  417a52:	xchg   ecx,eax
  417a53:	xchg   ebx,eax
  417a54:	or     al,BYTE PTR [eax]
  417a56:	out    dx,eax
  417a57:	and    ecx,DWORD PTR [eax+0x4]
  417a5a:	mov    al,0x57
  417a5c:	adc    eax,eax
  417a5e:	pop    ds
  417a5f:	xchg   BYTE PTR [edi-0xc],al
  417a62:	xor    bh,bl
  417a64:	xor    DWORD PTR [esi-0x49],ecx
  417a67:	out    dx,eax
  417a68:	mov    ebx,0xf56b228b
  417a6d:	inc    ebp
  417a6e:	xchg   BYTE PTR ds:0x9fd64376,al
  417a74:	retf   0x7d13
  417a77:	shl    DWORD PTR [esi],cl
  417a79:	or     eax,0xfd41500b
  417a7e:	mov    cl,0x9f
  417a80:	retf   0x5eb
  417a83:	pop    ecx
  417a84:	or     eax,0x74ed4b87
  417a89:	inc    ebx
  417a8a:	xchg   esi,eax
  417a8b:	pop    ss
  417a8c:	leave  
  417a8d:	and    edi,edi
  417a8f:	push   ebp
  417a90:	pop    esi
  417a91:	add    esi,0xfbfcb716
  417a97:	pop    ss
  417a98:	inc    ecx
  417a99:	adc    edi,DWORD PTR [esi-0x310038e7]
  417a9f:	push   edx
  417aa0:	jae    0x417a62
  417aa2:	jns    0x417b0a
  417aa4:	lods   al,BYTE PTR ds:[esi]
  417aa5:	(bad)  
  417aa6:	popa   
  417aa7:	test   eax,0xf1564b74
  417aac:	cwde   
  417aad:	aas    
  417aae:	xchg   eax,ebp
  417ab0:	cwde   
  417ab1:	pop    es
  417ab2:	inc    edi
  417ab3:	retf   
  417ab4:	cmc    
  417ab5:	or     BYTE PTR [eax],al
  417ab7:	inc    edi
  417ab8:	jne    0x417b2a
  417aba:	xchg   esp,eax
  417abb:	xchg   bl,ch
  417abd:	push   es
  417abe:	sub    edi,eax
  417ac0:	out    dx,eax
  417ac1:	pop    ecx
  417ac2:	fmul   DWORD PTR [ebp-0x34793255]
  417ac8:	lahf   
  417ac9:	ret    
  417aca:	adc    al,0x19
  417acc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417acd:	loop   0x417a57
  417acf:	retf   
  417ad0:	inc    DWORD PTR ds:0x9e0f6646
  417ad6:	out    0x76,eax
  417ad8:	mov    DWORD PTR [ecx-0x3],eax
  417adb:	shl    DWORD PTR [esi-0x140e00be],0x6
  417ae2:	push   0xffffff85
  417ae4:	ror    DWORD PTR [edi+0x6e],cl
  417ae7:	loopne 0x417b2b
  417ae9:	sub    al,0x49
  417aeb:	mov    edi,DWORD PTR [eax-0x477cfd55]
  417af1:	stos   DWORD PTR es:[edi],eax
  417af2:	add    eax,0xfce8e309
  417af7:	add    al,dl
  417af9:	aam    0x3
  417afb:	add    DWORD PTR [eax-0x38f7850f],ebx
  417b01:	loopne 0x417b06
  417b03:	xchg   BYTE PTR ds:0x4e1def9b,bh
  417b09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b0a:	rcl    DWORD PTR [ecx+0x43],0xe1
  417b0e:	add    eax,DWORD PTR [esi-0x79fd7415]
  417b14:	inc    edx
  417b15:	push   0xbf038db9
  417b1a:	add    eax,0xdd970100
  417b1f:	jl     0x417af9
  417b21:	push   edx
  417b22:	or     BYTE PTR [edi+edi*8],dh
  417b25:	push   ebp
  417b26:	push   edx
  417b27:	jl     0x417aee
  417b29:	push   esi
  417b2a:	jp     0x417b1b
  417b2c:	or     ebp,0xcfef83a
  417b32:	enter  0xe1b9,0xcb
  417b36:	adc    al,0xf4
  417b38:	test   ebp,ecx
  417b3a:	and    eax,0xd1877154
  417b3f:	clc    
  417b40:	add    al,dl
  417b42:	loope  0x417b47
  417b44:	xchg   ch,al
  417b46:	mov    al,ds:0xf1870905
  417b4b:	pop    edx
  417b4c:	xchg   ebp,eax
  417b4d:	inc    ebx
  417b4e:	loope  0x417b53
  417b50:	(bad)  
  417b51:	mov    edi,0x42860374
  417b56:	adc    BYTE PTR [ebx],bh
  417b58:	mov    edi,0xe37ffbfb
  417b5d:	pop    esi
  417b5e:	loope  0x417b63
  417b60:	mov    ecx,0xeeed0a91
  417b65:	ret    
  417b66:	ror    esp,cl
  417b68:	test   DWORD PTR [edx+0x7f],eax
  417b6b:	neg    BYTE PTR [eax+edx*8-0x63]
  417b6f:	jmp    0xaec0bdf9
  417b74:	aad    0xbf
  417b76:	jmp    0x7b3f7166
  417b7b:	cmc    
  417b7c:	dec    esi
  417b7d:	js     0x417b85
  417b7f:	inc    BYTE PTR [eax]
  417b81:	mov    ds:0x85a91c90,eax
  417b86:	retf   
  417b87:	dec    edx
  417b88:	aad    0x22
  417b8a:	jg     0x417b8e
  417b8c:	jo     0x417b55
  417b8e:	push   eax
  417b8f:	jg     0x417bb5
  417b91:	xor    al,bl
  417b93:	int    0xe5
  417b95:	or     al,BYTE PTR [ebp-0x6643fee]
  417b9b:	repnz (bad) 
  417b9d:	jno    0x417b55
  417b9f:	dec    edx
  417ba0:	call   0x6a53ff97
  417ba5:	test   eax,0xcd0be144
  417baa:	std    
  417bab:	bnd jb 0x417bf5
  417bae:	and    al,0x4a
  417bb0:	cmp    DWORD PTR [eax+eax*1],ebp
  417bb3:	popa   
  417bb4:	jmp    0x5c53ef79
  417bb9:	icebp  
  417bba:	inc    edx
  417bbb:	pop    esp
  417bbc:	xchg   BYTE PTR [edi+0x50],dl
  417bbf:	jg     0x417b73
  417bc1:	leave  
  417bc2:	jae    0x417bca
  417bc4:	jbe    0x417c1d
  417bc6:	dec    eax
  417bc7:	loop   0x417b73
  417bc9:	int3   
  417bca:	std    
  417bcb:	repnz push 0xffffffca
  417bce:	push   DWORD PTR [esi+0xd]
  417bd1:	jg     0x417c2a
  417bd3:	not    BYTE PTR [esi-0x3f]
  417bd6:	jbe    0x417c05
  417bd8:	fs dec edx
  417bda:	jbe    0x417bdb
  417bdc:	inc    DWORD PTR [edx-0x4f001118]
  417be2:	test   DWORD PTR [edi+0x467b00b0],0xbf590f0a
  417bec:	repz push cs
  417bee:	cmp    DWORD PTR [edi-0x1803ef8],esi
  417bf4:	add    ecx,eax
  417bf6:	fmul   QWORD PTR [ebx+0xffb3f8a]
  417bfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bfd:	jmp    0x417ba8
  417bff:	jl     0x417c4d
  417c01:	jo     0x417c39
  417c03:	add    DWORD PTR [ebx],ecx
  417c05:	xor    al,0xb2
  417c08:	add    eax,0xf2e79a84
  417c0d:	(bad)  
  417c0e:	mov    ecx,0xa0011302
  417c13:	ret    0x1d6e
  417c16:	lahf   
  417c17:	inc    ebx
  417c18:	add    eax,0x545a8b6
  417c1d:	mov    dh,0xb0
  417c1f:	inc    esp
  417c20:	mov    bl,0xe0
  417c22:	ja     0x417c20
  417c24:	mov    bl,0x3
  417c26:	aaa    
  417c27:	ret    
  417c28:	xor    al,0x54
  417c2a:	fwait
  417c2b:	call   0xa:0x43ef8681
  417c32:	fadd   QWORD PTR [eax+0x9]
  417c35:	mov    DWORD PTR [edx+0x1593ebf6],ebx
  417c3b:	mov    ch,dh
  417c3d:	mov    ebp,DWORD PTR [edx+0x22]
  417c40:	dec    edx
  417c41:	push   eax
  417c42:	xchg   ebp,eax
  417c43:	inc    esi
  417c44:	pusha  
  417c45:	add    BYTE PTR [eax+0x8d1b12],dh
  417c4b:	js     0x417c90
  417c4d:	pop    esp
  417c4e:	(bad)  
  417c4f:	cmp    dh,bl
  417c51:	or     ebx,0xfeff12b0
  417c57:	xchg   BYTE PTR [esi],bl
  417c59:	out    dx,eax
  417c5a:	out    0xba,eax
  417c5c:	xchg   ebx,eax
  417c5d:	dec    esp
  417c5e:	std    
  417c5f:	add    eax,0xa0d0e81
  417c64:	sahf   
  417c65:	jmp    0x417c66
  417c67:	jmp    0xe23d6261
  417c6c:	das    
  417c6d:	cld    
  417c6e:	xor    esp,0x44
  417c71:	push   cs
  417c72:	add    BYTE PTR [ebx-0x3602b503],dl
  417c78:	fcom   QWORD PTR [edi]
  417c7a:	cmp    ebx,DWORD PTR [ebp+0x32fd4c4d]
  417c80:	adc    eax,0xffb21a02
  417c85:	dec    esp
  417c86:	je     0x417ceb
  417c88:	outs   dx,BYTE PTR ds:[esi]
  417c89:	inc    edi
  417c8a:	je     0x417c19
  417c8c:	scas   al,BYTE PTR es:[edi]
  417c8d:	in     al,dx
  417c8e:	sti    
  417c8f:	cdq    
  417c90:	out    0xfc,eax
  417c92:	or     BYTE PTR [edx+0x79000e45],0xdf
  417c99:	mov    ah,0xfe
  417c9b:	nop
  417c9c:	aad    0xbc
  417c9e:	add    DWORD PTR [edi+0xc],eax
  417ca1:	test   BYTE PTR [eax],0x47
  417ca4:	jmp    0x5feafce7
  417ca9:	ficom  DWORD PTR [ebx-0x4a01e793]
  417caf:	add    cl,al
  417cb1:	jmp    0xe047:0xe9c1b5fd
  417cb8:	jle    0x417c9a
  417cba:	inc    edi
  417cbb:	add    DWORD PTR [esi],edi
  417cbd:	ins    BYTE PTR es:[edi],dx
  417cbe:	or     eax,0x43d7b254
  417cc3:	inc    ebx
  417cc4:	jmp    0x183a:0x82fd
  417cca:	pop    es
  417ccb:	add    BYTE PTR ds:0x19e708a5,al
  417cd1:	inc    ebx
  417cd2:	push   0x45
  417cd4:	adc    ecx,DWORD PTR [esi-0x65]
  417cd7:	mov    ebp,0xb5934d08
  417cdc:	xchg   DWORD PTR [ebx],eax
  417cde:	inc    ecx
  417cdf:	cld    
  417ce0:	mov    es,WORD PTR [ebx]
  417ce2:	sbb    BYTE PTR [edi+ebp*4],ch
  417ce5:	pushf  
  417ce6:	fxtract 
  417ce8:	pop    es
  417ce9:	pop    ecx
  417cea:	fld    QWORD PTR [ebx]
  417cec:	xchg   BYTE PTR [ecx],bh
  417cee:	or     ebx,0x56
  417cf1:	sbb    DWORD PTR [edx-0x5a],edi
  417cf4:	pop    ecx
  417cf5:	jmp    0xf2cefe34
  417cfa:	and    eax,0xd3fdc1c1
  417cff:	jg     0x417d1d
  417d01:	inc    ebx
  417d02:	loope  0x417d07
  417d04:	xor    DWORD PTR [ebx+ebp*4-0x727300fe],0x7a
  417d0c:	add    eax,0x9b44e46f
  417d11:	leave  
  417d12:	and    bh,al
  417d14:	add    BYTE PTR [eax],cl
  417d16:	enter  0x4550,0x8b
  417d1a:	std    
  417d1b:	addr16 mov ebp,0x7aa929e9
  417d21:	or     eax,0x7344cc7a
  417d26:	leave  
  417d27:	and    eax,0x6a0a9efc
  417d2c:	jle    0x417d08
  417d2e:	std    
  417d2f:	mov    ds:0x2ccf0144,eax
  417d34:	inc    ebp
  417d35:	push   ebx
  417d36:	std    
  417d37:	ja     0x417d71
  417d39:	lahf   
  417d3a:	or     ch,ah
  417d3c:	(bad)  
  417d3d:	retf   
  417d3e:	inc    eax
  417d3f:	mov    ds:0x3dcb8e63,al
  417d44:	test   BYTE PTR [ebx+0x7f0123b4],al
  417d4a:	add    ecx,DWORD PTR [edx]
  417d4c:	out    0x13,al
  417d4e:	(bad)  
  417d4f:	or     eax,0x2ccd860
  417d54:	lahf   
  417d55:	rol    BYTE PTR [eax-0x37],cl
  417d58:	dec    ecx
  417d59:	or     eax,0x4060c94a
  417d5e:	sar    DWORD PTR [esi-0x5c],1
  417d61:	cmc    
  417d62:	rcr    DWORD PTR [esi],cl
  417d64:	sub    esi,DWORD PTR [edx+edi*8-0x34965b80]
  417d6b:	mov    ebp,DWORD PTR [ebp-0x7b]
  417d6e:	inc    edx
  417d6f:	or     ah,BYTE PTR [eax+0x18]
  417d72:	lds    edi,FWORD PTR [esi+0x6f]
  417d75:	pop    ebp
  417d76:	inc    edx
  417d77:	or     ch,cl
  417d79:	add    BYTE PTR [eax-0x37],dl
  417d7c:	popa   
  417d7d:	push   ss
  417d7e:	dec    edx
  417d7f:	dec    edx
  417d81:	fs (bad) 
  417d84:	repnz push es
  417d86:	test   BYTE PTR [edx+0xa],al
  417d89:	jmp    0xf6c7feba
  417d8e:	mov    bl,0xec
  417d90:	int3   
  417d91:	stos   BYTE PTR es:[edi],al
  417d92:	test   ecx,eax
  417d94:	leave  
  417d95:	div    ah
  417d97:	mov    ds:0x4f85e90d,eax
  417d9c:	adc    dh,0x68
  417d9f:	cld    
  417da0:	repnz push 0xffffffcd
  417da3:	inc    esp
  417da4:	loope  0x417dbd
  417da6:	mov    bl,0xfd
  417da8:	bnd jo 0x417df2
  417dab:	push   eax
  417dac:	adc    DWORD PTR [edx+ebx*4],0x42054cc9
  417db3:	mov    WORD PTR [eax-0x17],fs
  417db6:	les    ebp,FWORD PTR [edi+0x16]
  417db9:	ins    BYTE PTR es:[edi],dx
  417dba:	sub    eax,0xa21cf343
  417dbf:	leave  
  417dc0:	mov    esi,0x1a6fc537
  417dc5:	add    BYTE PTR [eax],cl
  417dc7:	mov    edx,0x4832fefe
  417dcc:	loop   0x417d96
  417dce:	xchg   edi,eax
  417dcf:	jg     0x417dc6
  417dd1:	adc    DWORD PTR [edi-0x5dda81bb],0xffffff86
  417dd8:	jle    0x417de5
  417dda:	push   0x20
  417ddc:	idiv   bh
  417dde:	add    BYTE PTR [eax+0x4f],bl
  417de1:	xchg   DWORD PTR [ebp+ecx*4+0x710f0a46],edi
  417de8:	pop    es
  417de9:	hlt    
  417dea:	push   cs
  417deb:	jno    0x417dfc
  417ded:	or     ecx,eax
  417def:	dec    edi
  417df0:	dec    esi
  417df1:	add    ecx,eax
  417df3:	in     al,dx
  417df4:	aaa    
  417df5:	mov    bh,BYTE PTR [edi]
  417df7:	adc    esi,DWORD PTR [ebp+edi*4+0x4bcce1eb]
  417dfe:	jo     0x417e26
  417e00:	or     DWORD PTR [ebx],ecx
  417e02:	mov    ah,BYTE PTR [eax-0x488bb005]
  417e08:	sti    
  417e09:	push   esi
  417e0a:	mov    cr1,ecx
  417e0d:	adc    DWORD PTR [eax],eax
  417e0f:	scas   eax,DWORD PTR es:[edi]
  417e10:	push   eax
  417e11:	mov    esp,0xbc50ae47
  417e16:	dec    edi
  417e17:	popf   
  417e18:	xchg   dl,ch
  417e1a:	or     BYTE PTR [esi+eax*4+0x40eff809],dl
  417e21:	pop    esi
  417e22:	je     0x417e5f
  417e24:	mov    edi,0xc9f45534
  417e29:	mov    DWORD PTR [eax],eax
  417e2b:	pop    edi
  417e2c:	aas    
  417e2d:	sbb    DWORD PTR [esi-0x5d],0x381046cd
  417e34:	ret    
  417e35:	call   0xef5d:0x318028fe
  417e3c:	dec    edi
  417e3d:	mov    ss,WORD PTR [eax-0x2b82c7a]
  417e43:	add    BYTE PTR [ebx],cl
  417e45:	and    al,0xb
  417e47:	sub    BYTE PTR [esi-0x1e],0x85
  417e4b:	inc    ebx
  417e4c:	data16 not BYTE PTR [edi]
  417e4f:	mov    ebx,edx
  417e51:	adc    DWORD PTR [eax],ebx
  417e53:	mov    dh,0xc1
  417e55:	in     eax,0x8b
  417e57:	fisttp WORD PTR [esi]
  417e59:	lock dec ebp
  417e5b:	xchg   ebx,eax
  417e5d:	inc    ecx
  417e5e:	add    DWORD PTR [ebx-0x56],0xffffffa9
  417e62:	xchg   BYTE PTR ds:0x50446051,bh
  417e68:	sub    DWORD PTR [esi+0x13],0x83e98615
  417e6f:	push   ebx
  417e70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e71:	inc    DWORD PTR [esi]
  417e73:	std    
  417e74:	push   ebx
  417e75:	or     eax,0xbb6e7348
  417e7a:	inc    edi
  417e7b:	jae    0x417ef3
  417e7d:	pop    esp
  417e7e:	mov    dl,0xb
  417e80:	rcr    ebp,0xfe
  417e83:	out    0x92,eax
  417e85:	push   ecx
  417e86:	dec    eax
  417e87:	std    
  417e88:	or     ebp,DWORD PTR [ecx]
  417e8a:	sbb    BYTE PTR [ebx+0x70792],al
  417e90:	or     eax,0x42e71b76
  417e95:	adc    al,0x7
  417e97:	add    BYTE PTR [ecx+0x78fec0db],al
  417e9d:	rcr    eax,cl
  417e9f:	add    DWORD PTR [edi+0xc],eax
  417ea2:	push   es
  417ea3:	or     DWORD PTR [edi-0x13],eax
  417ea6:	add    BYTE PTR cs:[eax],0xb1
  417eaa:	push   edi
  417eab:	mov    dl,0xeb
  417ead:	pop    edi
  417eae:	push   esi
  417eaf:	ss std 
  417eb1:	popa   
  417eb2:	gs retf 
  417eb4:	and    eax,ecx
  417eb6:	sub    ebx,esi
  417eb8:	imul   eax,DWORD PTR [esi+0x6db7ac42],0xb541bbcd
  417ec2:	pop    edx
  417ec3:	push   0x1df9d04d
  417ec8:	adc    al,0x33
  417eca:	jo     0x417ec9
  417ecc:	inc    eax
  417ecd:	mov    ch,0x4a
  417ecf:	cdq    
  417ed0:	dec    esi
  417ed1:	sbb    edi,edx
  417ed3:	jnp    0x417e5c
  417ed5:	inc    esi
  417ed6:	dec    edx
  417ed7:	outs   dx,BYTE PTR ds:[esi]
  417ed8:	dec    esi
  417ed9:	jno    0x417f1d
  417edb:	loope  0x417eed
  417edd:	rol    BYTE PTR [ecx-0x75c7ef1e],1
  417ee3:	fild   WORD PTR [edx-0x1a]
  417ee6:	dec    edx
  417ee7:	call   0x613c062e
  417eec:	add    DWORD PTR [edx+0x6e],edx
  417eef:	inc    ebp
  417ef0:	sub    eax,ecx
  417ef2:	idiv   DWORD PTR [ebx]
  417ef4:	inc    ecx
  417ef5:	inc    ebx
  417ef6:	int    0x2b
  417ef8:	adc    DWORD PTR [eax],ebx
  417efa:	mov    esp,edx
  417efc:	adc    BYTE PTR [eax],dl
  417efe:	xchg   ebx,eax
  417eff:	fild   WORD PTR [edx-0x1f]
  417f02:	dec    edx
  417f03:	call   0x61450655
  417f08:	cld    
  417f09:	push   ebp
  417f0a:	outs   dx,BYTE PTR ds:[esi]
  417f0b:	sbb    eax,0x1e3d008d
  417f10:	mov    ds:0xfc422fd2,al
  417f15:	mov    dh,0x7d
  417f17:	(bad)  
  417f18:	nop
  417f19:	add    al,0x93
  417f1b:	outs   dx,DWORD PTR ds:[esi]
  417f1c:	or     DWORD PTR [ebp-0x492b6f41],ecx
  417f22:	xchg   ecx,eax
  417f23:	stc    
  417f24:	push   ebp
  417f25:	adc    BYTE PTR [ebx+0x6f],bh
  417f28:	jmp    0xcc336058
  417f2d:	inc    eax
  417f2e:	add    eax,0xf186e402
  417f33:	and    ecx,DWORD PTR [edx]
  417f35:	jmp    0xb6e860bf
  417f3a:	(bad)  
  417f3b:	test   DWORD PTR [edx-0xa],0xee097fcf
  417f42:	mov    edi,0x65a80887
  417f47:	dec    edx
  417f48:	jmp    DWORD PTR [edi-0x39760576]
  417f4e:	push   ecx
  417f4f:	jne    0x417f37
  417f51:	nop
  417f52:	or     edi,ebp
  417f54:	bnd jbe 0x417fcd
  417f57:	mov    al,0x42
  417f59:	call   0xeb8c2fd4
  417f5e:	les    ebx,FWORD PTR [ecx]
  417f60:	add    dh,dl
  417f62:	dec    ebp
  417f63:	retf   
  417f64:	retf   0x4502
  417f67:	ret    0xc831
  417f6a:	cld    
  417f6b:	test   BYTE PTR [esi],bl
  417f6d:	mov    ebx,0xdd44cb95
  417f72:	add    BYTE PTR [edx],dl
  417f74:	mov    DWORD PTR [esi],ecx
  417f76:	bound  ecx,QWORD PTR [ecx+eax*8-0x7303c6a4]
  417f7d:	push   ss
  417f7e:	adc    al,BYTE PTR [ecx-0x7ae6933d]
  417f84:	int3   
  417f85:	add    DWORD PTR [ecx+0x7c],ebp
  417f88:	call   0xe90a:0x5b3d6503
  417f8f:	add    eax,0x9ee50f1
  417f94:	mov    bh,0xe
  417f96:	jmp    0x94324220
  417f9b:	jbe    0x417f5b
  417f9d:	mov    ebx,0x8a428202
  417fa2:	loopne 0x418001
  417fa4:	inc    edi
  417fa5:	mov    es,WORD PTR [ebp+ebx*4-0x4c96f5be]
  417fac:	fwait
  417fad:	add    eax,DWORD PTR [eax]
  417faf:	fld    TBYTE PTR [edx+0x11]
  417fb2:	add    BYTE PTR [edi-0x3c],ch
  417fb5:	cli    
  417fb6:	pop    edi
  417fb7:	fwait
  417fb8:	inc    ebp
  417fb9:	mov    bh,cl
  417fbb:	mov    ebp,0x5f9b8747
  417fc0:	inc    esp
  417fc1:	or     cl,BYTE PTR [edi]
  417fc3:	fld    DWORD PTR [esi]
  417fc5:	or     cl,BYTE PTR [edi]
  417fc7:	fsin   
  417fc9:	push   es
  417fca:	sar    esi,0x46
  417fcd:	add    eax,ecx
  417fcf:	mov    dl,0x5a
  417fd1:	or     ecx,DWORD PTR [ecx-0x7174c58e]
  417fd7:	add    BYTE PTR [ebx-0x2bfff5c2],ch
  417fdd:	or     eax,0x81167c17
  417fe2:	dec    esp
  417fe3:	cmp    dh,ch
  417fe5:	inc    ebx
  417fe6:	or     al,BYTE PTR [eax]
  417fe8:	inc    esp
  417fe9:	call   0xcd14c66f
  417fee:	mov    edi,0x2154098b
  417ff3:	push   ebp
  417ff4:	fwait
  417ff5:	retf   
  417ff6:	sbb    eax,0x825a6690
  417ffb:	mov    edi,ecx
  417ffd:	inc    edi
  417ffe:	add    ebx,0x896afdb4
  418004:	jmp    0x417fcf
  418006:	or     eax,0x7f2fe28b
  41800b:	add    al,0xa6
  41800d:	test   BYTE PTR [edi+0x10],0x0
  418011:	ds mov eax,eax
  418014:	lods   eax,DWORD PTR ds:[esi]
  418015:	mov    BYTE PTR [esi+0x10],0x24
  418019:	rcr    BYTE PTR [ebp-0x78bc6100],1
  41801f:	shr    BYTE PTR [ebx],cl
  418021:	cmc    
  418022:	cmp    ecx,DWORD PTR [edx+0x6b]
  418025:	mov    edx,0x13868b36
  41802a:	or     BYTE PTR ds:0x9b96ff,0x86
  418031:	jmp    0xaab7c5b5
  418036:	add    dh,BYTE PTR es:[esi+0xbbbb0]
  41803d:	push   ecx
  41803e:	das    
  41803f:	sbb    bh,ch
  418041:	jae    0x41805c
  418043:	sbb    eax,0xcc748640
  418048:	adc    ecx,DWORD PTR ds:0xcb870650
  41804e:	stc    
  41804f:	jg     0x418094
  418051:	push   ds
  418052:	ins    BYTE PTR es:[edi],dx
  418053:	dec    ebx
  418054:	or     al,0xf
  418056:	push   ds
  418057:	push   ss
  418058:	out    0x1,eax
  41805a:	ja     0x418090
  41805c:	std    
  41805d:	std    
  41805e:	sbb    eax,0xb6498012
  418063:	jg     0x4180b0
  418065:	out    dx,al
  418066:	jno    0x418042
  418068:	pop    ss
  418069:	mov    DWORD PTR [ebp-0x5b],esp
  41806c:	sti    
  41806d:	icebp  
  41806e:	xchg   eax,esi
  418070:	pop    edx
  418071:	imul   bh
  418073:	mov    ah,BYTE PTR [ebx-0x1e]
  418076:	aaa    
  418077:	xor    al,0x80
  418079:	sahf   
  41807a:	or     dl,BYTE PTR [eax]
  41807c:	rol    BYTE PTR ds:0xc6813589,0xea
  418083:	xchg   BYTE PTR ds:0x1fc27259,bh
  418089:	mov    DWORD PTR [esi-0x20],esp
  41808c:	adc    al,BYTE PTR [esi+0x62437fe9]
  418092:	test   eax,0xf88669d6
  418097:	mov    edx,0x7d80b1b
  41809c:	dec    edi
  41809d:	cmp    al,ch
  41809f:	mov    edx,0x41fd000f
  4180a4:	mov    eax,0xd446f53d
  4180a9:	mov    bh,0x81
  4180ab:	jmp    0x446d:0xf67337d3
  4180b2:	jnp    0x418073
  4180b4:	mov    bl,0x1d
  4180b6:	xchg   BYTE PTR [edx+0xa],al
  4180b9:	(bad)  
  4180ba:	jns    0x418101
  4180bc:	data16 xchg BYTE PTR [edx+eax*2-0x1f],ch
  4180c1:	mov    ch,cl
  4180c3:	dec    esi
  4180c4:	call   0xb880:0xe14294e2
  4180cb:	ss loope 0x418085
  4180ce:	mov    BYTE PTR [ecx],bh
  4180d0:	and    ebp,DWORD PTR [edx+edi*2-0x79e3de42]
  4180d7:	inc    edx
  4180d8:	jnp    0x4180a1
  4180da:	jno    0x41811c
  4180dc:	cmc    
  4180dd:	test   eax,0xf90984fe
  4180e2:	xor    BYTE PTR [edi-0x32],ch
  4180e5:	clc    
  4180e6:	arpl   WORD PTR [esi-0x1c],sp
  4180e9:	xchg   DWORD PTR [edi-0xfc1ea6],ebp
  4180ef:	jl     0x4180ea
  4180f1:	xchg   dh,al
  4180f3:	outs   dx,BYTE PTR ds:[esi]
  4180f4:	add    ecx,edi
  4180f6:	mov    eax,0x7e206b45
  4180fb:	inc    edx
  4180fc:	loope  0x4180a7
  4180fe:	rcl    DWORD PTR [edx+0x56308e91],1
  418104:	js     0x418147
  418106:	add    BYTE PTR [esi-0x79fb888e],ch
  41810c:	mov    edi,0x3d0a0d20
  418111:	stc    
  418112:	add    eax,DWORD PTR [esi+0x4888dde9]
  418118:	push   esi
  418119:	loopne 0x418166
  41811b:	pop    edi
  41811c:	sbb    ecx,DWORD PTR [edx]
  41811e:	out    0x7,al
  418120:	lock sbb ch,cl
  418123:	test   ebx,ecx
  418125:	mov    esi,0x18c8d212
  41812a:	and    edx,DWORD PTR [eax+0x29]
  41812d:	add    ebp,DWORD PTR [ebp+ebx*4+0x4f]
  418131:	or     ch,cl
  418133:	push   es
  418134:	cli    
  418135:	or     BYTE PTR ds:0xe848c876,bh
  41813b:	pop    edi
  41813c:	jg     0x418163
  41813e:	out    0x8,al
  418140:	nop    ecx
  418143:	test   DWORD PTR [edi-0x1f],edi
  418146:	xchg   DWORD PTR [eax-0x9],edi
  418149:	repnz loop 0x4181a7
  41814c:	pop    ebp
  41814d:	fild   WORD PTR [esi-0x167e4402]
  418153:	test   DWORD PTR [edx+0x7],eax
  418156:	das    
  418157:	repnz cmp edx,edx
  41815a:	xchg   edx,eax
  41815b:	addr16 mov ebp,0xe35ee154
  418161:	sti    
  418162:	and    al,0x6a
  418164:	inc    eax
  418165:	jle    0x418113
  418167:	push   cs
  418168:	test   BYTE PTR [esi+0x22],ah
  41816b:	add    BYTE PTR [ebp+0x73],bl
  41816e:	xor    ah,BYTE PTR [edx-0x35]
  418171:	dec    esp
  418172:	lea    ebp,[ecx]
  418174:	xor    DWORD PTR [esi+0x60],eax
  418177:	jmp    0xdd9d4931
  41817c:	push   cs
  41817d:	add    esp,edx
  41817f:	push   0x420a41fc
  418184:	cld    
  418185:	retf   0x54b
  418188:	scas   eax,DWORD PTR es:[edi]
  418189:	cld    
  41818a:	cs inc eax
  41818c:	mov    bh,BYTE PTR [edi+0x4285fe7f]
  418192:	and    dl,0xaf
  418195:	xchg   BYTE PTR [esi],ah
  418197:	add    BYTE PTR [eax-0x50e88b45],bl
  41819d:	inc    eax
  41819e:	mov    eax,edi
  4181a0:	sahf   
  4181a1:	lods   al,BYTE PTR ds:[esi]
  4181a2:	test   eax,0xe13fdc8a
  4181a7:	xchg   ebp,eax
  4181a8:	in     al,dx
  4181a9:	mov    eax,0xcd540032
  4181ae:	mov    BYTE PTR [esi-0x61],bh
  4181b1:	ds add eax,0xa4fc285
  4181b7:	add    ah,ch
  4181b9:	mov    eax,0x9d920042
  4181be:	or     DWORD PTR [esi-0x35],0xde74dbf3
  4181c5:	ret    
  4181c6:	dec    ebx
  4181c7:	sbb    BYTE PTR [edx+0x241f7e7e],dh
  4181cd:	xchg   edi,eax
  4181ce:	add    eax,0x4f660083
  4181d3:	or     al,BYTE PTR [eax]
  4181d5:	test   DWORD PTR [esi],edi
  4181d7:	pop    edx
  4181d8:	lea    eax,[ecx-0x83c7ea6]
  4181de:	loop   0x41816b
  4181e0:	add    BYTE PTR [edi],bl
  4181e2:	ret    
  4181e3:	leave  
  4181e4:	bt     edx,esi
  4181e7:	sbb    eax,0x2b24ef00
  4181ec:	mov    esp,DWORD PTR [ecx]
  4181ee:	dec    esp
  4181ef:	and    eax,ecx
  4181f1:	xchg   esp,eax
  4181f2:	xchg   ebp,eax
  4181f3:	add    eax,0xa4f8287
  4181f8:	add    BYTE PTR [ebp+0x43],dl
  4181fb:	xor    BYTE PTR [esi-0x75],cl
  4181fe:	inc    edi
  4181ff:	xchg   DWORD PTR [edx],ebx
  418201:	mov    al,0x3f
  418203:	or     al,BYTE PTR [ebx+0xc7e3d97]
  418209:	xor    eax,0xe139f3fb
  41820e:	jmp    0x17:0xe2868505
  418215:	xchg   BYTE PTR [eax-0x38],ah
  418218:	imul   ebp,DWORD PTR [ebp-0x5d],0x1a
  41821c:	out    0x5d,eax
  41821e:	hlt    
  41821f:	das    
  418220:	std    
  418221:	dec    ebp
  418222:	retf   
  418223:	stos   BYTE PTR es:[edi],al
  418224:	or     al,0x4
  418226:	out    dx,eax
  418227:	sbb    BYTE PTR [eax],al
  418229:	xchg   BYTE PTR [edx],dl
  41822b:	push   ss
  41822c:	std    
  41822d:	jns    0x418243
  41822f:	test   BYTE PTR [esi-0x1e],cl
  418232:	push   eax
  418233:	push   ebp
  418234:	or     eax,0x30130200
  418239:	std    
  41823a:	popa   
  41823b:	jo     0x418206
  41823d:	pop    ss
  41823e:	add    ebp,DWORD PTR [ecx-0x2d72dd5e]
  418244:	mov    ebx,0xd6e9dc0e
  418249:	mov    bl,al
  41824b:	cmp    eax,0x8e2ec183
  418250:	jg     0x418252
  418252:	xchg   BYTE PTR [esi+0x47],ah
  418255:	jae    0x4182b2
  418257:	sbb    BYTE PTR [edi-0x77],al
  41825a:	shr    ebp,cl
  41825c:	test   DWORD PTR [esi+0x6e8fa],ecx
  418262:	pop    ds
  418263:	sbb    al,0x10
  418265:	add    BYTE PTR [esi-0x52e436a0],al
  41826b:	xor    esp,esi
  41826d:	(bad)  
  41826e:	jno    0x4182ec
  418270:	test   DWORD PTR [ecx],ecx
  418272:	lods   al,BYTE PTR ds:[esi]
  418273:	fwait
  418274:	jmp    0x55ff:0x2f67e672
  41827b:	icebp  
  41827c:	test   BYTE PTR [ecx-0x79],al
  41827f:	aas    
  418280:	enter  0x5b2a,0x58
  418284:	test   BYTE PTR [esi+0x5a],al
  418287:	inc    eax
  418288:	enter  0x7d1b,0x42
  41828c:	dec    ecx
  41828d:	mov    al,0xc0
  41828f:	call   0xf2f4bbee
  418294:	xlat   BYTE PTR ds:[ebx]
  418295:	fldenv [ecx]
  418297:	ins    DWORD PTR es:[edi],dx
  418298:	in     eax,dx
  418299:	test   BYTE PTR [eax],0xc8
  41829c:	out    0xec,al
  41829e:	(bad)  
  41829f:	cmp    edi,DWORD PTR [edx+0x7c]
  4182a2:	add    ebp,edi
  4182a4:	jle    0x4182a2
  4182a6:	mov    eax,DWORD PTR [eax+0x7a]
  4182a9:	aam    0x71
  4182ab:	(bad)  
  4182ac:	icebp  
  4182ad:	ja     0x418279
  4182af:	mov    ch,0x41
  4182b1:	fwait
  4182b2:	or     BYTE PTR [esi+0x3],bh
  4182b5:	retf   0x700
  4182b8:	in     al,0xe1
  4182ba:	cld    
  4182bb:	ret    
  4182bc:	pop    esi
  4182bd:	das    
  4182be:	sbb    cl,BYTE PTR [edi]
  4182c0:	mov    DWORD PTR ds:0xd077467f,esi
  4182c6:	cld    
  4182c7:	lods   al,BYTE PTR ds:[esi]
  4182c8:	cmp    bh,BYTE PTR [ebx]
  4182ca:	or     dh,BYTE PTR [edi+0x14]
  4182cd:	pop    ds
  4182ce:	mov    edx,eax
  4182d0:	mov    gs,eax
  4182d2:	inc    ebp
  4182d3:	add    ecx,0x4f
  4182d6:	add    al,0x86
  4182d8:	inc    edx
  4182d9:	rol    BYTE PTR [ebx+0x2f],1
  4182dc:	push   ebx
  4182dd:	cld    
  4182de:	jno    0x418267
  4182e0:	mov    ebp,0xb882f01a
  4182e5:	in     al,0x5
  4182e7:	leave  
  4182e8:	(bad)  
  4182ea:	test   dh,ah
  4182ec:	inc    ebx
  4182ed:	ja     0x418300
  4182ef:	inc    ebx
  4182f0:	ret    0xff66
  4182f3:	je     0x418330
  4182f5:	adc    BYTE PTR [esi-0x51],dl
  4182f8:	add    edx,esp
  4182fa:	pop    esp
  4182fc:	fucom  st(3)
  4182fe:	hlt    
  4182ff:	add    BYTE PTR [edi-0xaf6ddd3],dh
  418305:	add    al,0xa
  418307:	bound  eax,QWORD PTR [eax-0x3b]
  41830a:	leave  
  41830b:	fiadd  WORD PTR [ecx-0x1e]
  41830e:	mul    BYTE PTR [esi]
  418310:	jg     0x4182fb
  418312:	dec    esp
  418313:	push   ds
  418314:	outs   dx,DWORD PTR ds:[esi]
  418315:	out    dx,eax
  418316:	jle    0x4182c7
  418318:	lea    edi,[ebx+0x2207d43]
  41831e:	jle    0x418302
  418320:	call   0x42f1:0xe3bd7718
  418327:	fs mov ah,0x4d
  41832a:	jg     0x418356
  41832c:	mov    dl,0xb
  41832e:	mov    ebp,ecx
  418330:	test   ebp,eax
  418332:	leave  
  418333:	out    dx,al
  418334:	lock and al,0xf3
  418337:	(bad)  
  418338:	scas   al,BYTE PTR es:[edi]
  418339:	fld    TBYTE PTR [edx+eiz*2]
  41833c:	inc    edi
  41833d:	dec    ebp
  41833e:	pop    ds
  41833f:	mov    cl,0x5a
  418341:	sbb    BYTE PTR [ebx-0x23],bh
  418344:	add    edi,DWORD PTR [ebx]
  418346:	xor    BYTE PTR [edi],ah
  418348:	pop    esi
  418349:	je     0x418368
  41834b:	push   0x7d
  41834d:	icebp  
  41834e:	add    ebp,DWORD PTR [ebp-0x7a]
  418351:	out    dx,eax
  418352:	repnz sahf 
  418354:	add    eax,DWORD PTR [ebx+0x1c47d309]
  41835a:	add    esp,DWORD PTR [ebp+0x62]
  41835d:	lock xacquire xchg BYTE PTR [edx],cl
  418361:	add    eax,DWORD PTR [edi-0x3e]
  418364:	add    BYTE PTR [edi+0x5d],al
  418367:	add    ebp,DWORD PTR [ebx+0x64]
  41836a:	in     eax,dx
  41836b:	repnz outs dx,BYTE PTR ds:[esi]
  41836d:	adc    cl,BYTE PTR [eax+0x3f456c76]
  418373:	mov    es,WORD PTR [ebp-0x51]
  418376:	out    dx,eax
  418377:	repnz adc dl,cl
  41837a:	dec    eax
  41837b:	add    esp,DWORD PTR [edi+0x42]
  41837e:	lock xacquire add BYTE PTR [eax-0xa],al
  418383:	retf   
  418384:	inc    ecx
  418385:	push   esi
  418386:	sti    
  418387:	dec    esi
  418388:	cmp    ebx,DWORD PTR [esi+0x71cd843a]
  41838e:	sub    dh,ch
  418390:	push   0xffffff9b
  418392:	or     eax,0x2a91c7ec
  418397:	cmc    
  418398:	cmp    esi,ecx
  41839a:	test   al,0x79
  41839c:	rol    eax,1
  41839e:	jb     0x4183a9
  4183a0:	mov    edx,ecx
  4183a2:	loopne 0x4183ed
  4183a4:	imul   BYTE PTR [ebx+0x7ae90e3c]
  4183aa:	sub    esi,ebp
  4183ac:	push   DWORD PTR [edx+ecx*1]
  4183af:	pop    edi
  4183b0:	jae    0x4183d5
  4183b2:	dec    eax
  4183b3:	mov    esp,0x3708f403
  4183b8:	inc    ebx
  4183b9:	dec    ecx
  4183ba:	inc    ebx
  4183bb:	add    al,BYTE PTR [eax+eax*2]
  4183be:	jo     0x418350
  4183c0:	inc    BYTE PTR [eax+0x38]
  4183c3:	jmp    0x41834c
  4183c5:	adc    bh,BYTE PTR [eax]
  4183c7:	cmc    
  4183c8:	cmp    eax,DWORD PTR [eax]
  4183ca:	jno    0x418366
  4183cc:	jns    0x41836f
  4183ce:	pusha  
  4183cf:	pop    esi
  4183d0:	or     DWORD PTR [ebx-0x9b60d8f],ecx
  4183d6:	sub    edi,DWORD PTR [ebx+esi*8]
  4183d9:	call   0x36bca8
  4183de:	xor    al,0x16
  4183e0:	pop    edi
  4183e1:	jae    0x418376
  4183e3:	inc    edi
  4183e4:	mov    esp,0x37089403
  4183e9:	inc    ebx
  4183ea:	mov    DWORD PTR [edx+0x2],eax
  4183ed:	add    DWORD PTR [ecx+ecx*4],eax
  4183f0:	xor    DWORD PTR [esi-0x2d],ebx
  4183f3:	dec    eax
  4183f4:	mov    DWORD PTR [esi+0x50],esi
  4183f7:	aaa    
  4183f8:	cmc    
  4183f9:	jbe    0x50ca8ace
  4183ff:	push   ebp
  418400:	(bad)  
  418401:	cmc    
  418402:	xor    cl,0x16
  418405:	out    0xfc,eax
  418407:	das    
  418408:	cmp    edi,ebp
  41840a:	(bad)  
  41840b:	xlat   BYTE PTR ds:[ebx]
  41840c:	stos   BYTE PTR es:[edi],al
  41840d:	or     al,0x5
  41840f:	mov    edi,0xf8b9fd3b
  418414:	fs add ebp,edi
  418417:	lahf   
  418418:	loop   0x41845a
  41841a:	mov    al,0xdd
  41841c:	dec    BYTE PTR [edi]
  41841e:	lods   eax,DWORD PTR ds:[esi]
  41841f:	pusha  
  418420:	jg     0x418470
  418422:	sub    al,BYTE PTR [esi+edx*2]
  418425:	or     eax,0xfd3ba705
  41842a:	mov    eax,ebp
  41842c:	add    DWORD PTR fs:[eax],eax
  41842f:	lds    ebx,FWORD PTR [esi+esi*1+0xa]
  418433:	mov    DWORD PTR [ebp+0x16],ebx
  418436:	sti    
  418437:	jno    0x418449
  418439:	or     al,0x86
  41843b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41843c:	pop    ss
  41843d:	cmp    al,0xfd
  41843f:	add    eax,0xa4760b11
  418444:	pop    esp
  418445:	das    
  418446:	or     ebx,edx
  418448:	ds icebp 
  41844a:	add    BYTE PTR [esi-0x678bf927],0xde
  418451:	rcr    DWORD PTR [edi],cl
  418453:	xchg   cl,bl
  418455:	or     eax,DWORD PTR [esi-0x2c43075]
  41845b:	imul   eax,DWORD PTR [edx],0xffffffe7
  41845e:	jmp    DWORD PTR [ecx]
  418460:	adc    BYTE PTR [edx+edi*8+0x1b],dh
  418464:	enter  0x313b,0x46
  418468:	add    dh,BYTE PTR [ebp+0x3e5e795f]
  41846e:	sti    
  41846f:	add    DWORD PTR [eax+0x26],esp
  418472:	fdiv   st(2),st
  418474:	inc    ecx
  418475:	ins    BYTE PTR es:[edi],dx
  418476:	ss scas eax,DWORD PTR es:[edi]
  418478:	or     esp,esp
  41847a:	adc    dl,0xed
  41847d:	pop    ebx
  41847e:	ss push es
  418480:	sub    esp,edi
  418482:	push   es
  418483:	add    eax,0xd3364cfb
  418488:	sbb    BYTE PTR [edx+0x40],0xca
  41848c:	out    dx,al
  41848d:	cmp    edi,edx
  41848f:	arpl   WORD PTR [esi-0x2c],bx
  418492:	add    BYTE PTR [eax],0xdf
  418495:	out    dx,eax
  418496:	sub    esi,DWORD PTR [esi]
  418498:	cmp    DWORD PTR [eax+0x4a787cdf],0xffffffe1
  41849f:	add    eax,DWORD PTR [edi+0x2b]
  4184a2:	and    ch,BYTE PTR [esi+0x6e653f6c]
  4184a8:	(bad)  
  4184a9:	out    dx,al
  4184aa:	repz or DWORD PTR [esi+0x307fec38],0x735e3f0
  4184b5:	jmp    0x4184b7
  4184b7:	add    eax,0x35d5a80a
  4184bc:	imul   esi,DWORD PTR [eax],0xffffff81
  4184bf:	add    al,0x86
  4184c1:	inc    edx
  4184c2:	aam    0x7f
  4184c4:	cld    
  4184c5:	out    dx,eax
  4184c6:	retf   
  4184c7:	xor    eax,0x3dac28d
  4184cc:	xchg   bl,bl
  4184ce:	mov    al,0x36
  4184d0:	inc    ebx
  4184d1:	out    dx,al
  4184d2:	in     eax,0x3
  4184d4:	inc    dx
  4184d6:	loope  0x4184dc
  4184d8:	add    al,0x76
  4184da:	xchg   ebp,eax
  4184db:	xor    eax,0xe3e7302b
  4184e0:	and    esi,ebp
  4184e2:	sar    DWORD PTR [ebp-0x64],cl
  4184e5:	out    dx,eax
  4184e6:	mov    esi,DWORD PTR ds:0x3c11d4d
  4184ec:	xchg   BYTE PTR ds:0xe92b6d0a,bh
  4184f2:	repnz outs dx,BYTE PTR ds:[esi]
  4184f4:	icebp  
  4184f5:	mov    gs,WORD PTR [edx]
  4184f7:	jmp    0x8e8109fc
  4184fc:	lds    esi,FWORD PTR [eax-0x75eb0d11]
  418502:	xor    cl,BYTE PTR [edx]
  418504:	jmp    0x47352db5
  418509:	fwait
  41850a:	sub    edx,DWORD PTR [ebp+ecx*8-0x7e]
  41850e:	ret    
  41850f:	addr16 aaa 
  418511:	jnp    0x418502
  418513:	add    dh,BYTE PTR [edi-0x79]
  418516:	mov    ch,0x3
  418518:	add    DWORD PTR [edx+0x44e24742],ecx
  41851e:	ja     0x418545
  418520:	out    0x21,al
  418522:	xor    dh,dh
  418524:	push   cs
  418525:	push   ebx
  418526:	ret    
  418527:	icebp  
  418528:	lock mov al,dh
  41852b:	sub    bh,ch
  41852d:	push   edx
  41852e:	out    dx,eax
  41852f:	xchg   cl,dh
  418531:	gs ds mov cs,edi
  418535:	mov    cl,0xef
  418537:	repnz and al,0xea
  41853a:	inc    edx
  41853b:	or     ch,cl
  41853d:	add    dh,0x16
  418540:	aad    0x9a
  418542:	out    dx,eax
  418543:	xor    al,0x69
  418545:	mov    eax,DWORD PTR [edx+0xa]
  418548:	ror    BYTE PTR [ecx-0x18],1
  41854b:	repnz mov esi,0xe912ed50
  418551:	test   DWORD PTR [edi],edi
  418553:	mov    ch,bl
  418555:	jo     0x418546
  418557:	repnz in al,0x7f
  41855a:	and    cl,BYTE PTR [edx]
  41855c:	jmp    0xf7060761
  418561:	xchg   edx,eax
  418562:	pop    edx
  418563:	out    dx,eax
  418564:	xor    al,0xbe
  418566:	and    eax,0x1800f2ed
  41856b:	ins    DWORD PTR es:[edi],dx
  41856c:	loop   0x418569
  41856e:	mov    BYTE PTR [esi],dh
  418570:	das    
  418571:	pop    edi
  418572:	iret   
  418573:	inc    eax
  418574:	or     cl,BYTE PTR [edi]
  418576:	arpl   WORD PTR [ecx+esi*8-0xd0b9701],dx
  41857d:	das    
  41857e:	fild   WORD PTR [eax-0x15]
  418581:	push   ss
  418582:	cmp    dh,BYTE PTR [esi]
  418584:	cmc    
  418585:	cmp    ebp,DWORD PTR [ecx]
  418587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418588:	add    eax,0xf5343683
  41858d:	(bad)  
  41858e:	fcomp  DWORD PTR [esi+0x9]
  418591:	inc    ebx
  418592:	sub    al,0x29
  418594:	add    BYTE PTR [edi],cl
  418596:	sub    eax,0x68fff174
  41859b:	ret    0xdf1
  41859e:	cwde   
  41859f:	outs   dx,BYTE PTR ds:[esi]
  4185a0:	enter  0x78fc,0x36
  4185a4:	das    
  4185a5:	test   DWORD PTR [edi+0x230f0a40],ebp
  4185ab:	pop    esi
  4185ac:	idiv   bh
  4185ae:	mov    dh,dh
  4185b0:	sub    eax,0x5406f20
  4185b5:	xchg   cl,cl
  4185b7:	sub    dh,ch
  4185b9:	jmp    FWORD PTR [edx+0x5f00130d]
  4185bf:	inc    ecx
  4185c0:	mov    WORD PTR [ecx-0xacfc500],fs
  4185c6:	jmp    0x36a184
  4185cb:	test   BYTE PTR [eax],dl
  4185cd:	pop    edi
  4185ce:	paddusb mm3,QWORD PTR [edx-0x11]
  4185d2:	(bad)  
  4185d3:	clc    
  4185d4:	aas    
  4185d5:	mov    esp,0xf1c36c03
  4185da:	or     bh,BYTE PTR [eax]
  4185dc:	(bad)  
  4185dd:	mov    edi,esp
  4185df:	or     BYTE PTR [eax],dh
  4185e1:	mov    eax,edi
  4185e3:	xchg   dh,ah
  4185e5:	pop    es
  4185e6:	xchg   BYTE PTR [ecx+0x53fd36d0],ch
  4185ec:	pop    esi
  4185ed:	push   cs
  4185ee:	add    BYTE PTR [esi-0x29b7524],al
  4185f4:	je     0x41862d
  4185f6:	cmp    esp,DWORD PTR [ecx-0x7efff907]
  4185fc:	pop    ebx
  4185fd:	lahf   
  4185fe:	sti    
  4185ff:	jmp    0xa6687f90
  418604:	fld    DWORD PTR [esi]
  418606:	or     eax,0xfd229e01
  41860b:	rcl    DWORD PTR [edx+0x2cc9f8b5],1
  418611:	pop    es
  418612:	mov    dh,0x49
  418614:	fiadd  DWORD PTR [edi]
  418616:	mov    dh,0x49
  418618:	xlat   BYTE PTR ds:[ebx]
  418619:	dec    ebp
  41861a:	loopne 0x41869a
  41861c:	lock dec ebp
  41861e:	add    esi,eax
  418620:	pop    eax
  418621:	aas    
  418622:	add    DWORD PTR [edi],ecx
  418624:	lahf   
  418625:	cmp    DWORD PTR ss:[eax],eax
  418628:	inc    ebx
  418629:	jmp    0xb43e96e7
  41862e:	repnz mov al,BYTE PTR [edx+0xb08735a]
  418635:	and    ah,BYTE PTR [esi+0xac90d04]
  41863b:	sub    DWORD PTR [edi+0x10],edx
  41863e:	or     dh,BYTE PTR [ecx]
  418640:	push   esp
  418641:	and    dl,al
  418643:	inc    edi
  418644:	fcmovnu st,st(3)
  418646:	jae    0x41869e
  418648:	jmp    0x75db:0xfc425b40
  41864f:	push   ebx
  418650:	push   edx
  418651:	in     eax,dx
  418652:	ror    BYTE PTR [esp+eax*1],0xcf
  418656:	push   es
  418657:	add    BYTE PTR [esi-0x358a4c23],al
  41865d:	inc    edx
  41865e:	in     eax,dx
  41865f:	sar    BYTE PTR [edx-0x3d],0xa2
  418663:	add    eax,DWORD PTR [esi-0x4c8613be]
  418669:	inc    esi
  41866a:	sar    BYTE PTR [edx+edx*2],1
  41866d:	jge    0x41866b
  41866f:	jns    0x418634
  418671:	inc    eax
  418672:	in     al,0x97
  418674:	inc    ecx
  418675:	mov    ecx,0xb48b202d
  41867a:	adc    eax,DWORD PTR ds:0xfef8e131
  418680:	sar    DWORD PTR [edx],0x9b
  418683:	retf   0x186
  418686:	inc    ecx
  418687:	sti    
  418688:	mov    es,WORD PTR [eax]
  41868a:	push   0xffffffc0
  41868c:	add    ch,cl
  41868e:	mov    eax,0x3a552ba5
  418693:	mov    DWORD PTR [edx],esi
  418695:	ret    
  418696:	jmp    0xd867:0xea457cbb
  41869d:	mov    ch,0xbe
  41869f:	and    ecx,DWORD PTR [eax]
  4186a1:	lahf   
  4186a2:	sbb    al,0xe4
  4186a4:	jns    0x41866c
  4186a6:	mov    esp,0xe1076da8
  4186ab:	loope  0x418729
  4186ad:	cmp    eax,0xfe71fbde
  4186b2:	lahf   
  4186b3:	test   ebx,eax
  4186b5:	cmp    DWORD PTR [ecx],0x582c833b
  4186bb:	mov    eax,ds:0x3dbbcb03
  4186c0:	xor    BYTE PTR [ecx],al
  4186c2:	sub    cl,0x87
  4186c5:	inc    esi
  4186c6:	jo     0x4186b1
  4186c8:	imul   ebx,DWORD PTR [ebx-0x16],0xffffffc3
  4186cc:	mov    cl,0x8
  4186ce:	or     cl,0x87
  4186d1:	xor    al,0x3a
  4186d3:	ins    DWORD PTR es:[edi],dx
  4186d4:	(bad)  [ecx]
  4186d6:	jmp    0x6048:0x1433b609
  4186dd:	pop    ecx
  4186de:	push   esi
  4186df:	das    
  4186e0:	mov    bl,0xf6
  4186e2:	pop    ss
  4186e3:	repz adc al,0x92
  4186e6:	mov    ebx,0x75579d5c
  4186eb:	cli    
  4186ec:	bound  edi,QWORD PTR [ebx+edi*4-0x17ff6e42]
  4186f3:	(bad)  
  4186f4:	bnd jle 0x418700
  4186f7:	add    eax,DWORD PTR [ebx]
  4186f9:	ins    DWORD PTR es:[edi],dx
  4186fa:	xor    DWORD PTR [ebp+0xa],edx
  4186fd:	jmp    0x6740148c
  418702:	rcl    DWORD PTR [ebp+0x7f],0xa4
  418706:	jns    0x418733
  418708:	dec    ebp
  418709:	push   ebp
  41870a:	adc    al,0x12
  41870c:	jg     0x4186aa
  41870e:	mov    eax,ds:0xdb414cbb
  418713:	add    DWORD PTR [ebx],eax
  418715:	gs popf 
  418717:	xlat   BYTE PTR ds:[ebx]
  418718:	repnz add ebp,DWORD PTR ss:[esi-0x1a]
  41871d:	jmp    0xfdf645a8
  418722:	test   DWORD PTR [edx+0x7f],eax
  418725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418726:	jno    0x4186e9
  418728:	dec    esp
  418729:	std    
  41872a:	sbb    al,BYTE PTR [ebp-0x7af356d2]
  418730:	cs cdq 
  418732:	ins    BYTE PTR es:[edi],dx
  418733:	rcr    BYTE PTR ds:0x7ce785e9,0xd1
  41873a:	cli    
  41873b:	xchg   ebp,eax
  41873c:	(bad)  
  41873d:	out    dx,al
  41873e:	cmp    cl,bl
  418740:	jle    0x4186f1
  418742:	jmp    0xf2e7:0xa6f6e1fb
  418749:	ins    BYTE PTR es:[edi],dx
  41874a:	lds    esi,FWORD PTR [edi]
  41874c:	mov    cs,WORD PTR [ebx]
  41874e:	jns    0x418792
  418750:	or     al,BYTE PTR [eax]
  418752:	pop    esp
  418753:	clc    
  418754:	imul   cl
  418756:	add    BYTE PTR ds:0xa2fff522,dl
  41875c:	cli    
  41875d:	repz sub al,0xe3
  418761:	mov    eax,DWORD PTR [ebp+0xb]
  418764:	addr16 or eax,0x5fb0693c
  41876a:	cmp    al,0x64
  41876c:	lods   al,BYTE PTR ds:[esi]
  41876d:	das    
  41876e:	cmp    al,0x72
  418770:	stos   DWORD PTR es:[edi],eax
  418771:	cmovns ecx,DWORD PTR [bp+si]
  418775:	pop    es
  418776:	xor    esi,DWORD PTR [esi]
  418778:	fnstcw WORD PTR [edi]
  41877a:	ud1    edi,edx
  41877d:	or     BYTE PTR [edi],cl
  41877f:	pop    ebx
  418780:	test   BYTE PTR [ebx-0x43bdacb3],cl
  418786:	dec    edi
  418787:	out    dx,al
  418788:	adc    ebx,0x8
  41878b:	in     al,0x2c
  41878d:	add    eax,0xb33e28b6
  418792:	loopne 0x41876b
  418794:	in     eax,0xc8
  418796:	mov    edx,esi
  418798:	sbb    BYTE PTR [ebx+0xab07745],cl
  41879e:	mov    eax,0x7ff53260
  4187a3:	ss add bl,bh
  4187a6:	sub    DWORD PTR [eax+0x40],0xffffffe1
  4187aa:	aaa    
  4187ab:	mov    al,ds:0xe78dca6a
  4187b0:	push   esi
  4187b1:	mov    ecx,esp
  4187b3:	sahf   
  4187b4:	imul   edi,DWORD PTR [edi],0xffffffec
  4187b7:	jo     0x41882b
  4187b9:	and    BYTE PTR [edx-0xcfbfe00],0xe
  4187c0:	mov    eax,ds:0x9f6d9fc3
  4187c5:	ds dec ebp
  4187c7:	mov    DWORD PTR [edx-0x79ba74ce],esi
  4187cd:	adc    DWORD PTR [ecx+0x5eebdbc0],eax
  4187d3:	std    
  4187d4:	dec    ecx
  4187d5:	add    DWORD PTR [ebx+0x35ec8ee8],esp
  4187db:	aas    
  4187dc:	or     eax,0x324b749b
  4187e1:	arpl   cx,ax
  4187e3:	div    DWORD PTR [ebp-0x55]
  4187e6:	mov    DWORD PTR [esi-0x36201245],0x5de0079a
  4187f0:	mov    ds:0xd898808,al
  4187f5:	shl    DWORD PTR [edx],0xd
  4187f8:	cmp    ch,bl
  4187fa:	outs   dx,DWORD PTR ds:[esi]
  4187fb:	enter  0xcbb5,0x86
  4187ff:	fisttp WORD PTR [ecx-0x21da8e5]
  418805:	scas   al,BYTE PTR es:[edi]
  418806:	cmp    bh,BYTE PTR [edi+0x470dcee]
  41880c:	mov    ds,WORD PTR [edx+ecx*4-0x40a27e30]
  418813:	stc    
  418814:	leave  
  418815:	and    BYTE PTR [ebx],0x43
  418818:	call   0x1a9e:0x7ffbc974
  41881f:	jle    0x418821
  418821:	ret    
  418822:	fs shl edi,0x6d
  418826:	xor    ebx,esi
  418828:	cmp    DWORD PTR [ebp+0x5fd2337],0xffffffcf
  41882f:	adc    al,BYTE PTR [eax]
  418831:	inc    esi
  418833:	sbb    cl,BYTE PTR ds:0x121802
  418839:	xchg   BYTE PTR [ecx+eax*8+0x23],dh
  41883d:	(bad)  
  41883e:	(bad)  
  418840:	and    edx,esi
  418842:	inc    edx
  418843:	xchg   ecx,eax
  418844:	adc    al,0x86
  418846:	inc    edx
  418847:	loope  0x4188c3
  418849:	enter  0x1056,0x3d
  41884d:	scas   eax,DWORD PTR es:[edi]
  41884e:	add    esp,DWORD PTR [edx]
  418850:	jmp    0x418862
  418852:	aaa    
  418853:	push   ebp
  418854:	jmp    0x4188ca
  418856:	inc    edx
  418857:	loope  0x4188d2
  418859:	xchg   DWORD PTR [ebx+0x3838c709],eax
  41885f:	data16 (bad) 
  418861:	das    
  418862:	out    0xa3,eax
  418864:	sbb    al,0xb0
  418866:	rep stos DWORD PTR es:[edi],eax
  418868:	cs jo  0x1b827b74
  41886f:	mov    al,ds:0xd4014ec4
  418874:	jg     0x4188e9
  418876:	dec    ebp
  418877:	loope  0x41887c
  418879:	xchg   ebx,eax
  41887a:	mov    al,0xcf
  41887c:	jp     0x4188be
  41887e:	xor    ch,ah
  418880:	jne    0x4188c5
  418882:	inc    ecx
  418883:	addr16 pop ss
  418885:	add    BYTE PTR [ebx+eax*4-0x241ee7d7],al
  41888c:	cs (bad) 
  41888e:	adc    edi,DWORD PTR [edi-0x1e]
  418891:	(bad)  
  418892:	sbb    esi,DWORD PTR [edi-0x21]
  418895:	inc    esp
  418896:	out    0x39,al
  418898:	clc    
  418899:	inc    esp
  41889a:	or     DWORD PTR [ebp+0x35],edi
  41889d:	add    bl,0x42
  4188a0:	dec    eax
  4188a1:	mov    cl,0xca
  4188a3:	jl     0x4188d6
  4188a5:	add    al,0x86
  4188a7:	inc    edx
  4188a8:	loope  0x4188a8
  4188aa:	fstp   TBYTE PTR [esi-0x1e]
  4188ad:	(bad)  
  4188ae:	ror    DWORD PTR [esi-0x19da7d21],cl
  4188b4:	loopne 0x4188fa
  4188b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188b7:	cmp    eax,edi
  4188b9:	inc    ecx
  4188ba:	mov    bh,0x10
  4188bc:	popa   
  4188bd:	sub    al,0xa0
  4188bf:	xor    eax,0xbdc75d0a
  4188c4:	pop    esp
  4188c5:	std    
  4188c6:	(bad)  
  4188c7:	or     al,0x87
  4188c9:	dec    esp
  4188ca:	xchg   esi,eax
  4188cb:	inc    edx
  4188cc:	retf   
  4188cd:	and    al,0x92
  4188cf:	in     eax,0xf2
  4188d1:	jmp    0x1421085b
  4188d6:	push   edi
  4188d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188d8:	dec    ecx
  4188d9:	jo     0x418924
  4188db:	(bad)  
  4188dc:	and    BYTE PTR [esi+esi*2],0xdb
  4188e0:	imul   DWORD PTR [edx-0x17]
  4188e3:	jmp    0x830782f1
  4188e8:	sub    DWORD PTR [eax+eax*1],0xc6df7f5a
  4188ef:	cwde   
  4188f0:	jp     0x4188db
  4188f2:	push   0x65
  4188f4:	in     eax,0x81
  4188f6:	sbb    al,0x66
  4188f8:	aaa    
  4188f9:	mov    ah,0x71
  4188fb:	mov    ebp,0xfae94a59
  418900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418901:	mov    DWORD PTR [eax+0x260a2611],ebx
  418907:	ins    DWORD PTR es:[edi],dx
  418908:	jns    0x418900
  41890a:	jo     0x4188d5
  41890c:	in     eax,dx
  41890d:	mov    WORD PTR [ecx],gs
  41890f:	adc    DWORD PTR [esi],edi
  418911:	mov    dl,0x56
  418913:	mov    ds:0xc16072e7,eax
  418918:	in     eax,dx
  418919:	add    bh,BYTE PTR [edi-0x65]
  41891c:	jg     0x41891a
  41891e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41891f:	(bad)  
  418920:	in     eax,0x81
  418922:	pushf  
  418923:	jns    0x41895c
  418925:	mov    es,WORD PTR [ebp-0x7e]
  418928:	inc    edx
  418929:	or     dh,BYTE PTR [edx-0x20]
  41892c:	adc    eax,0x35865703
  418931:	aaa    
  418932:	cmp    ecx,DWORD PTR ds:0xc962fe79
  418938:	jmp    0xe378984
  41893d:	pop    ss
  41893e:	cmp    esi,DWORD PTR [ebp+0x5ceb1fb2]
  418944:	repnz fadd DWORD PTR [edx+0x34]
  418948:	neg    DWORD PTR [esi+0xf]
  41894b:	in     al,dx
  41894c:	hlt    
  41894d:	push   ss
  41894e:	add    BYTE PTR [eax],al
  418950:	outs   dx,DWORD PTR ds:[esi]
  418951:	out    0xbc,al
  418953:	adc    esp,esp
  418955:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418956:	and    cl,BYTE PTR [edi]
  418958:	icebp  
  418959:	in     al,0x0
  41895b:	inc    ebx
  41895c:	xchg   BYTE PTR [ebp+0x52a20ff6],ah
  418962:	sti    
  418963:	(bad)  
  418964:	clc    
  418965:	adc    eax,0xa4a41447
  41896a:	out    dx,al
  41896b:	cmp    DWORD PTR [edx+0x4a],ebx
  41896e:	je     0x418945
  418970:	and    al,0x29
  418972:	add    eax,0xf5449184
  418977:	call   FWORD PTR [esp+edx*4-0x4407ff22]
  41897e:	aas    
  41897f:	adc    al,0xef
  418981:	inc    eax
  418982:	mov    ebx,DWORD PTR [ebp+0x7b]
  418985:	fcmove st,st(2)
  418987:	jge    0x4189a4
  418989:	push   0xf4a4143f
  41898e:	pop    esi
  41898f:	jae    0x418916
  418991:	out    0xbc,eax
  418993:	adc    esp,DWORD PTR [edi+eiz*4+0x22]
  418997:	psllw  mm4,mm4
  41899a:	add    BYTE PTR [ecx],bh
  41899c:	cli    
  41899d:	sub    al,0x77
  41899f:	and    eax,0x144715ec
  4189a4:	mov    dh,0xfb
  4189a6:	push   ss
  4189a7:	jl     0x4189e5
  4189a9:	dec    edx
  4189aa:	adc    BYTE PTR [ebx-0x3f786b0f],cl
  4189b0:	repz push ecx
  4189b2:	xor    DWORD PTR [ebp+0x0],ebx
  4189b5:	xchg   bl,ah
  4189b7:	mov    esp,0xc822550d
  4189bc:	xchg   al,dl
  4189be:	popf   
  4189bf:	loope  0x41897f
  4189c1:	mov    DWORD PTR [ebp+ebp*1-0x9],edx
  4189c5:	jno    0x4189b4
  4189c7:	jb     0x418a44
  4189c9:	jbe    0x4189a5
  4189cb:	cmc    
  4189cc:	and    BYTE PTR [ecx-0x6202e0f2],0x26
  4189d3:	and    cl,BYTE PTR ds:0xfd25ba04
  4189d9:	dec    ecx
  4189da:	popa   
  4189db:	leave  
  4189dc:	and    eax,esi
  4189de:	jb     0x4189a9
  4189e0:	and    edi,DWORD PTR [ecx]
  4189e2:	das    
  4189e3:	jmp    0xb3fd:0xe805988
  4189ea:	cmc    
  4189eb:	jae    0x4189b6
  4189ed:	and    DWORD PTR [edi+0x6],eax
  4189f0:	push   esi
  4189f1:	sbb    DWORD PTR [edi+0x1e],ecx
  4189f4:	std    
  4189f5:	fstp   QWORD PTR [edi]
  4189f8:	jae    0x418a78
  4189fa:	rcr    DWORD PTR [ebx-0x14],0x1
  4189fe:	mov    ebp,0xd4c682b2
  418a03:	mov    edi,ecx
  418a05:	cwde   
  418a06:	fld    DWORD PTR [esi]
  418a08:	cmp    DWORD PTR [ebx+0x55],ecx
  418a0b:	mov    ebx,0x1f11efd3
  418a10:	std    
  418a11:	fnstenv [eax-0x4f]
  418a14:	sti    
  418a15:	leave  
  418a16:	xchg   esi,eax
  418a17:	add    bh,bh
  418a19:	add    cl,cl
  418a1b:	fld    DWORD PTR [esi]
  418a1d:	cmp    DWORD PTR [edi+0x7d1eaada],0x50c9ac3
  418a27:	sti    
  418a28:	and    eax,0x7904a9fd
  418a2d:	or     DWORD PTR [ebp+0x42],eax
  418a30:	jmp    0x99c7:0x6e3395b8
  418a37:	jecxz  0x418a54
  418a39:	sub    eax,DWORD PTR [ebp+0x4e]
  418a3c:	push   0xbe297db9
  418a41:	psubb  mm0,QWORD PTR [ebx]
  418a44:	enter  0x833b,0xbe
  418a48:	and    bl,BYTE PTR [eax]
  418a4a:	imul   esp,ebx,0x5f
  418a4d:	test   eax,0xb87a426d
  418a52:	jne    0x418a87
  418a54:	outs   dx,BYTE PTR ds:[esi]
  418a55:	push   edx
  418a56:	ja     0x418a9a
  418a58:	loope  0x418ad6
  418a5a:	lods   eax,DWORD PTR ds:[esi]
  418a5b:	out    0x17,al
  418a5d:	cmp    al,0xbd
  418a5f:	xor    BYTE PTR [eax],cl
  418a61:	retf   0x6fad
  418a64:	sar    dl,1
  418a66:	sti    
  418a67:	ss cli 
  418a69:	mov    eax,0xc70e6d35
  418a6e:	and    bh,BYTE PTR [ebp-0xb]
  418a71:	in     al,dx
  418a72:	les    ecx,FWORD PTR [esi+0x15]
  418a75:	push   ds
  418a76:	pop    ds
  418a77:	dec    eax
  418a78:	push   0xa0bd8dc1
  418a7d:	scas   eax,DWORD PTR es:[edi]
  418a7e:	add    BYTE PTR [esi+0x73fc2e27],dl
  418a84:	xor    al,0xb0
  418a86:	cmp    al,0xb1
  418a88:	mov    ecx,0x1aec82a
  418a8d:	aam    0x7a
  418a8f:	jge    0x418a7a
  418a91:	imul   ebp,DWORD PTR [edx],0x7
  418a94:	gs push ecx
  418a96:	add    eax,DWORD PTR [ebx-0x34e82d43]
  418a9c:	loop   0x418ab5
  418a9e:	leave  
  418a9f:	mov    ebp,0xb3525f32
  418aa4:	loop   0x418ad9
  418aa6:	jle    0x418aed
  418aa8:	push   ds
  418aa9:	or     ch,BYTE PTR [ecx+0x2e2e7f2a]
  418aaf:	(bad)  
  418ab0:	push   ds
  418ab1:	jg     0x418af1
  418ab3:	sti    
  418ab4:	loop   0x418aa9
  418ab6:	xchg   esp,eax
  418ab7:	mov    DWORD PTR [ecx+0x4ad616be],edi
  418abd:	pop    esp
  418abe:	push   cs
  418abf:	ss push edx
  418ac1:	repz jl 0x418b35
  418ac4:	fistp  QWORD PTR [ecx+esi*8-0x73]
  418ac8:	dec    ecx
  418ac9:	out    0xf6,al
  418acb:	lahf   
  418acc:	mov    ecx,DWORD PTR [ebp+0x1c55c29]
  418ad2:	inc    DWORD PTR [ebp-0x61c3d0be]
  418ad8:	push   ebx
  418ad9:	faddp  st(0),st
  418adb:	call   edi
  418add:	repnz into 
  418adf:	xor    eax,DWORD PTR [eax+0x200f666]
  418ae5:	test   al,0xf1
  418ae7:	mov    esi,0xe2bc4f5f
  418aec:	inc    edx
  418aed:	fmul   DWORD PTR [ecx+edx*8-0x7c]
  418af1:	push   esi
  418af2:	(bad)  
  418af4:	inc    esp
  418af5:	xor    al,BYTE PTR [ebx]
  418af7:	push   edi
  418af8:	aaa    
  418af9:	loope  0x418a7b
  418afb:	in     eax,0xd
  418afd:	ret    
  418afe:	retf   0xedeb
  418b01:	dec    ebp
  418b02:	or     dh,dh
  418b04:	js     0x418b54
  418b06:	out    0x7e,al
  418b08:	lahf   
  418b09:	jmp    0xdfe10986
  418b0e:	add    dh,BYTE PTR [edi]
  418b10:	(bad)  
  418b11:	loopne 0x418a9a
  418b13:	sbb    BYTE PTR cs:[ebx],0xc9
  418b17:	push   edx
  418b18:	jo     0x418b69
  418b1a:	mov    esp,0xbc4f84ae
  418b1f:	sahf   
  418b20:	mov    esp,DWORD PTR [ecx-0x2148ff17]
  418b26:	mov    bl,0x89
  418b28:	jmp    0x873c:0x9cc78929
  418b2f:	add    BYTE PTR [edi-0x1749fabb],ch
  418b35:	inc    esp
  418b36:	add    eax,0x8947d8b6
  418b3b:	gs jae 0x418b84
  418b3e:	mov    bl,0xe0
  418b40:	addr16 fmulp st(0),st
  418b43:	xor    ebx,DWORD PTR [ebp+0x33fac6]
  418b49:	pusha  
  418b4a:	rol    edi,1
  418b4c:	mov    DWORD PTR [edx],ecx
  418b4e:	cmp    ecx,esp
  418b50:	(bad)  
  418b52:	shr    esi,0x0
  418b55:	sub    BYTE PTR [eax+0x455f01e2],ah
  418b5b:	or     al,BYTE PTR [edi+0x44]
  418b5e:	adc    DWORD PTR [edx],edi
  418b60:	shr    BYTE PTR [edi+0x5d],0x47
  418b64:	lock mov dh,0xa0
  418b67:	out    dx,al
  418b68:	jmp    0x418b57
  418b6a:	lds    esp,FWORD PTR [esi-0x4]
  418b6d:	pop    ds
  418b6e:	(bad)  
  418b6f:	mov    dl,0x40
  418b71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b72:	mov    al,ds:0x3f447e2
  418b77:	push   es
  418b78:	mov    dh,0x68
  418b7a:	inc    ebp
  418b7b:	add    eax,0x894860b6
  418b80:	adc    eax,DWORD PTR gs:[ebp-0x4d]
  418b84:	loopne 0x418b7d
  418b86:	add    DWORD PTR [edi-0x10],0xa44de
  418b8d:	in     al,0x83
  418b8f:	loope  0x418b2b
  418b91:	inc    edx
  418b92:	popf   
  418b93:	(bad)  
  418b94:	or     DWORD PTR [esi+0x44],0xffffff8b
  418b98:	dec    ebp
  418b99:	inc    ebx
  418b9a:	fidiv  DWORD PTR [eax+ecx*4+0x3f9bb786]
  418ba1:	xchg   BYTE PTR [eax],al
  418ba3:	popa   
  418ba4:	add    dl,0xf5
  418ba7:	(bad)  
  418ba8:	dec    DWORD PTR [eax+0x52]
  418bab:	mov    esp,0xadff00fb
  418bb0:	push   ds
  418bb1:	add    esi,0xffffff95
  418bb4:	out    dx,al
  418bb5:	mov    bh,0x99
  418bb7:	daa    
  418bb8:	and    bh,BYTE PTR [ebp-0x1]
  418bbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bbc:	push   ds
  418bbd:	or     eax,0xf5c9dfd0
  418bc2:	retf   
  418bc3:	rol    DWORD PTR [edi],1
  418bc5:	xchg   ebx,edx
  418bc7:	(bad)  
  418bc9:	sub    DWORD PTR [edx-0x16],0x6
  418bcd:	add    ch,bh
  418bcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bd0:	test   BYTE PTR [eax+ebx*1],0xfe
  418bd4:	pop    ss
  418bd5:	xor    DWORD PTR [ebx+edx*2],esi
  418bd8:	mov    cl,0xf3
  418bda:	std    
  418bdb:	and    al,BYTE PTR cs:[edx-0x1]
  418bdf:	push   ds
  418be0:	sbb    bh,BYTE PTR [ecx]
  418be2:	dec    esp
  418be3:	mov    ss,ecx
  418be5:	call   0x429a686f
  418bea:	ins    DWORD PTR es:[edi],dx
  418beb:	aas    
  418bec:	xchg   edx,eax
  418bed:	or     al,0x5
  418bef:	mov    al,0x1c
  418bf1:	add    BYTE PTR [esi+0xd116500],al
  418bf7:	sbb    dh,bh
  418bf9:	or     al,0xd8
  418bfb:	in     eax,dx
  418bfc:	lock inc eax
  418bfe:	dec    edi
  418bff:	cmp    cl,BYTE PTR es:0xfd244e0a
  418c06:	stc    
  418c07:	enter  0x13c8,0xfd
  418c0b:	and    dh,BYTE PTR cs:[edi]
  418c0e:	cmp    edi,ebp
  418c10:	lods   al,BYTE PTR ds:[esi]
  418c11:	rol    BYTE PTR [eax],cl
  418c13:	popf   
  418c14:	mov    eax,ds:0x42d983fa
  418c19:	push   edi
  418c1a:	daa    
  418c1b:	rol    ebx,cl
  418c1d:	aad    0x17
  418c1f:	xchg   cl,cl
  418c21:	lods   eax,DWORD PTR ds:[esi]
  418c22:	setae  ch
  418c25:	retf   0x8611
  418c28:	inc    edx
  418c29:	jp     0x418bf4
  418c2b:	lods   eax,DWORD PTR ds:[esi]
  418c2c:	sbb    edi,DWORD PTR [ecx]
  418c2e:	test   eax,0x979b1b70
  418c33:	push   ss
  418c34:	cmp    al,0xd4
  418c36:	ins    DWORD PTR es:[edi],dx
  418c37:	ja     0x418c04
  418c39:	mov    edx,0xe49882f3
  418c3e:	stc    
  418c3f:	push   eax
  418c40:	lea    edx,ds:0x483a4b0
  418c46:	rcl    DWORD PTR [ebp-0xdf059e7],0xe3
  418c4d:	pop    ss
  418c4e:	or     bh,bh
  418c50:	xchg   DWORD PTR [ebp-0x80],edi
  418c53:	inc    esi
  418c54:	push   esi
  418c55:	shr    dl,1
  418c57:	mov    esp,0x96f6534a
  418c5c:	or     DWORD PTR [edx],esp
  418c5e:	jge    0x418c18
  418c60:	jle    0x418c7a
  418c62:	inc    ebp
  418c63:	xchg   ebx,eax
  418c64:	iret   
  418c65:	adc    ebp,DWORD PTR [edi]
  418c67:	cmp    ebx,edi
  418c69:	pop    edi
  418c6a:	test   al,0x21
  418c6c:	inc    edx
  418c6d:	in     al,0x80
  418c6f:	fsubp  st(3),st
  418c71:	mov    ebx,0xa57d5f26
  418c76:	test   BYTE PTR [eax],0x7
  418c79:	dec    ecx
  418c7a:	xchg   ebx,eax
  418c7b:	es adc ecx,ebx
  418c7e:	sub    eax,0x25c949e0
  418c83:	loopne 0x418c87
  418c85:	push   ebp
  418c86:	int    0x7a
  418c88:	shr    DWORD PTR [ebx-0x1f],cl
  418c8b:	es jne 0x418ccc
  418c8e:	js     0x418cca
  418c90:	jmp    0x418ce6
  418c92:	or     dl,cl
  418c94:	rcr    ebp,cl
  418c96:	jl     0x418c71
  418c98:	mov    al,ds:0x16660653
  418c9d:	inc    edi
  418c9e:	loop   0x418cc2
  418ca0:	ins    BYTE PTR es:[edi],dx
  418ca1:	(bad)  
  418ca3:	ins    BYTE PTR es:[edi],dx
  418ca4:	inc    ebp
  418ca5:	dec    ebp
  418ca6:	lea    edx,[edx]
  418ca8:	xchg   esi,eax
  418ca9:	inc    edx
  418caa:	or     dh,BYTE PTR [edx-0x45098464]
  418cb0:	cmp    edi,esp
  418cb2:	fdivr  DWORD PTR [eax+ebp*2]
  418cb5:	fnstsw WORD PTR [esi-0x64]
  418cb8:	popa   
  418cb9:	add    eax,0x428afd4d
  418cbe:	or     ch,cl
  418cc0:	add    al,0xd7
  418cc2:	or     BYTE PTR [ebp+0x7d541b6a],dl
  418cc8:	jo     0x418c8d
  418cca:	mov    edi,0x2dfabff
  418ccf:	aaa    
  418cd0:	ins    BYTE PTR es:[edi],dx
  418cd1:	xor    DWORD PTR [ecx],0xffffffa4
  418cd4:	mov    cl,0x4f
  418cd6:	mov    ?,WORD PTR ds:0xe6f2df96
  418cdc:	add    BYTE PTR [ecx],dl
  418cde:	xor    bh,BYTE PTR [edi+0x2c]
  418ce1:	sahf   
  418ce2:	adc    eax,0xfeebfd45
  418ce7:	mov    eax,cs:0xd322c233
  418ced:	imul   ebx,edi,0xffffff86
  418cf0:	cmp    al,0x8e
  418cf2:	inc    edx
  418cf3:	and    DWORD PTR [esi+esi*2],0x75ba8d4f
  418cfa:	inc    edx
  418cfb:	or     dh,BYTE PTR [eax+0x49]
  418cfe:	fisubr DWORD PTR [esi]
  418d00:	mov    cl,0xe1
  418d02:	adc    ebp,DWORD PTR [edi]
  418d04:	aaa    
  418d05:	push   ds
  418d06:	push   ebx
  418d07:	pop    ss
  418d08:	fisubr WORD PTR [ebx+0x4b]
  418d0b:	xor    DWORD PTR [eax],eax
  418d0d:	mov    edx,0x9c257e12
  418d12:	daa    
  418d13:	inc    edi
  418d14:	adc    al,0x16
  418d16:	popf   
  418d17:	push   ss
  418d18:	jl     0x418d1f
  418d1a:	cmp    al,0x10
  418d1c:	mov    esp,DWORD PTR [ecx]
  418d1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d1f:	xchg   eax,eax
  418d21:	mov    bl,0x32
  418d23:	xor    DWORD PTR [ebp-0x59],ebx
  418d26:	scas   eax,DWORD PTR es:[edi]
  418d27:	add    al,0x33
  418d29:	add    WORD PTR [esi+ecx*2+0xfb3eaeb],cx
  418d31:	sbb    BYTE PTR [esp+edi*8-0x1],bl
  418d35:	pop    eax
  418d36:	ret    
  418d37:	outs   dx,BYTE PTR ds:[esi]
  418d38:	lock scas eax,DWORD PTR es:[edi]
  418d3a:	(bad)  
  418d3b:	xchg   edi,ebx
  418d3d:	jbe    0x418d66
  418d3f:	cmc    
  418d40:	cmp    eax,DWORD PTR [eax]
  418d42:	retf   0x525
  418d45:	sub    BYTE PTR [edi],0x2c
  418d48:	cmc    
  418d49:	jmp    esp
  418d4b:	popf   
  418d4c:	es inc eax
  418d4e:	neg    BYTE PTR [ebp-0x20d00da]
  418d54:	adc    edi,0x75f54105
  418d5a:	dec    ebx
  418d5b:	pop    edx
  418d5c:	sar    edi,0xb2
  418d5f:	dec    esi
  418d60:	pop    esp
  418d61:	push   DWORD PTR [edx+0x2b75f536]
  418d67:	es ja  0x418d72
  418d6a:	inc    edi
  418d6b:	xchg   ebx,eax
  418d6c:	jmp    0x418d6d
  418d6e:	dec    eax
  418d6f:	pop    esp
  418d70:	retf   0xa20f
  418d73:	xchg   ebx,eax
  418d74:	sbb    DWORD PTR [eax],eax
  418d76:	das    
  418d77:	call   0xe9d6:0x91eb5d31
  418d7e:	pop    ss
  418d7f:	sub    al,0xf5
  418d81:	call   FWORD PTR [eax]
  418d83:	outs   dx,DWORD PTR ds:[esi]
  418d84:	inc    ebp
  418d85:	add    DWORD PTR [esi-0x7bba9b1c],eax
  418d8b:	stos   BYTE PTR es:[edi],al
  418d8c:	daa    
  418d8d:	or     BYTE PTR [ebp-0x6d],bh
  418d90:	jno    0x418d51
  418d92:	shl    DWORD PTR ds:0xeae1ff12,0x6
  418d99:	xchg   DWORD PTR [ebx+0x6f],eax
  418d9c:	mov    al,ch
  418d9e:	test   DWORD PTR [edx+0x7d],esi
  418da1:	add    BYTE PTR [esi+0xb5fdeb],al
  418da7:	push   ecx
  418da8:	jmp    0xdf47:0xe951b5fd
  418daf:	jle    0x418d81
  418db1:	xor    BYTE PTR [edi-0x39057cc5],al
  418db7:	push   ebp
  418db8:	sub    eax,DWORD PTR [edi-0x4b9db9c3]
  418dbe:	sti    
  418dbf:	sbb    DWORD PTR [edi+0x48],0x6fe7c181
  418dc6:	dec    ebx
  418dc7:	jb     0x418e2a
  418dc9:	mov    esp,0x35c36df7
  418dce:	inc    ebx
  418dcf:	jbe    0x418dbc
  418dd1:	push   es
  418dd2:	add    BYTE PTR [esi-0x3478b968],al
  418dd8:	aad    0xae
  418dda:	call   0x40882693
  418ddf:	jmp    FWORD PTR [esi]
  418de1:	push   ds
  418de2:	jmp    0x3f86c73b
  418de7:	jne    0x418d92
  418de9:	test   BYTE PTR [ebx+0x36],cl
  418dec:	arpl   cx,ax
  418dee:	sti    
  418def:	leave  
  418df0:	lock int3 
  418df2:	or     al,0xf0
  418df4:	sub    al,0xd
  418df6:	or     eax,0xbf0c3cd8
  418dfb:	daa    
  418dfc:	loop   0x418dd9
  418dfe:	mov    edi,0x14264349
  418e03:	or     esp,ebx
  418e05:	loopne 0x418e0a
  418e07:	(bad)
  418e0b:	add    BYTE PTR ds:0x318fac8b,cl
  418e11:	rol    BYTE PTR [eax-0x7a79fefb],0x13
  418e18:	and    dl,al
  418e1a:	mov    BYTE PTR [ecx+0x61d44299],dh
  418e20:	or     ebx,edx
  418e22:	ffree  st(3)
  418e24:	leave  
  418e25:	test   BYTE PTR [edx-0x37],bh
  418e28:	mov    ebp,0x51badc9
  418e2d:	or     bl,dh
  418e2f:	or     edi,ecx
  418e31:	fisttp DWORD PTR [ebx+0x23]
  418e34:	sub    ecx,ecx
  418e36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e37:	sbb    edx,DWORD PTR [ebx+0xcad394]
  418e3d:	jbe    0x418e7c
  418e3f:	mov    esi,eax
  418e41:	dec    ebx
  418e42:	jnp    0x418def
  418e44:	xchg   BYTE PTR [edx-0x1f],al
  418e47:	xchg   BYTE PTR [eax+ebx*8+0x5f],al
  418e4b:	push   ds
  418e4c:	mov    ecx,DWORD PTR [ebx+0x6c]
  418e4f:	sbb    al,0x96
  418e51:	inc    edx
  418e52:	loope  0x418e76
  418e54:	mov    ds:0xa19037b5,al
  418e59:	inc    edx
  418e5a:	mov    al,0x35
  418e5c:	les    edx,FWORD PTR [edi]
  418e5e:	pop    ds
  418e5f:	adc    eax,DWORD PTR [edx]
  418e61:	mov    eax,esp
  418e63:	add    eax,DWORD PTR [esi+0x2ef83dc9]
  418e69:	aas    
  418e6a:	adc    BYTE PTR [esi],dh
  418e6c:	(bad)  
  418e6d:	(bad)  
  418e6e:	adc    dh,BYTE PTR [eax-0x4069200]
  418e74:	xchg   BYTE PTR [edx+0x703e14b],bh
  418e7a:	pop    esp
  418e7b:	or     dl,cl
  418e7d:	test   DWORD PTR [esi+0x16],edx
  418e80:	inc    ebx
  418e81:	mov    bl,ch
  418e83:	jnp    0x418e86
  418e85:	div    DWORD PTR [ebx+0x16]
  418e88:	jb     0x418ed2
  418e8a:	jmp    0xa98d:0x428215b7
  418e91:	xchg   esp,eax
  418e92:	mov    edi,0xdda47af0
  418e97:	jle    0x418ebd
  418e99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e9a:	jmp    0x3760f0cb
  418e9f:	pop    ds
  418ea0:	mov    ds:0x57af3b0,eax
  418ea5:	clc    
  418ea6:	dec    eax
  418ea7:	xor    BYTE PTR [edi+0x6a1d4fb1],ch
  418ead:	fild   DWORD PTR [ebx]
  418eb0:	gs jo  0x418e84
  418eb3:	repnz inc esi
  418eb5:	sti    
  418eb6:	mov    BYTE PTR [ecx],cl
  418eb8:	add    esi,DWORD PTR [edi+eiz*1-0x2ecb92fd]
  418ebf:	repnz add BYTE PTR cs:[edi+0x7f64aaf2],al
  418ec7:	push   ds
  418ec8:	loopne 0x418f18
  418eca:	ss je  0x418f43
  418ecd:	stos   BYTE PTR es:[edi],al
  418ece:	clc    
  418ecf:	pop    es
  418ed0:	jmp    0x959d5a5a
  418ed5:	add    BYTE PTR [eax+0xa],bl
  418ed8:	das    
  418ed9:	and    esi,DWORD PTR [edi+edi*4-0x39]
  418edd:	std    
  418ede:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418edf:	xlat   BYTE PTR ds:[ebx]
  418ee0:	push   es
  418ee1:	adc    DWORD PTR [edx-0x7a16f7f4],esp
  418ee7:	dec    DWORD PTR [ebp+esi*8-0x7c]
  418eeb:	inc    edx
  418eec:	or     ch,cl
  418eee:	add    bl,bl
  418ef0:	or     dh,bl
  418ef2:	add    DWORD PTR [ebp+0x461f0007],ebx
  418ef8:	xor    DWORD PTR [esi-0x2d],ebx
  418efb:	xor    ecx,DWORD PTR [ecx-0xadc245e]
  418f01:	setns  bh
  418f04:	dec    ecx
  418f05:	and    ebp,0x48
  418f08:	jle    0x418f30
  418f0a:	lock mov bl,0x87
  418f0d:	repz adc BYTE PTR [ecx+ecx*4],ah
  418f11:	cli    
  418f12:	shl    DWORD PTR [ebx+0x4a058303],cl
  418f18:	jle    0x418f3d
  418f1a:	outs   dx,BYTE PTR ds:[esi]
  418f1b:	cmp    BYTE PTR [edi+0x545ef00],al
  418f21:	test   ebx,edx
  418f23:	cs cmc 
  418f25:	call   FWORD PTR [esp+eiz*4+0x52]
  418f29:	add    BYTE PTR [eax+0x50f367c0],dh
  418f2f:	and    esi,ebp
  418f31:	inc    ebp
  418f32:	mov    ebx,0xc11447fc
  418f37:	test   ebx,ebp
  418f39:	jne    0x418f3b
  418f3b:	lods   eax,DWORD PTR ds:[esi]
  418f3c:	inc    ebp
  418f3d:	or     bh,BYTE PTR [ebx]
  418f3f:	icebp  
  418f40:	test   eax,0xf71fee79
  418f45:	add    BYTE PTR [ebp+0x76],dh
  418f48:	jmp    ecx
  418f4a:	out    0xa8,al
  418f4c:	add    DWORD PTR [edi],edx
  418f4e:	add    DWORD PTR [edi+0x45],ebp
  418f51:	or     al,BYTE PTR [ebx-0x73faba69]
  418f57:	daa    
  418f58:	aas    
  418f59:	or     al,BYTE PTR [eax]
  418f5b:	inc    esp
  418f5c:	add    ebx,DWORD PTR [edi+0xf]
  418f5f:	in     al,dx
  418f60:	(bad)  
  418f61:	idiv   bh
  418f63:	pusha  
  418f64:	xor    bh,BYTE PTR [ebx+edx*1+0x9efbf9c]
  418f6b:	xor    cl,al
  418f6d:	daa    
  418f6e:	repz xchg al,dh
  418f71:	sub    DWORD PTR [ecx-0x7be6b4d4],eax
  418f77:	(bad)  
  418f78:	pushf  
  418f79:	sub    ebp,edi
  418f7b:	pop    es
  418f7c:	add    eax,0xeb860067
  418f81:	sbb    DWORD PTR [ebx+eax*4+0x9fd299c],eax
  418f88:	es repnz ss dec ebx
  418f8c:	iret   
  418f8d:	test   al,0xca
  418f8f:	out    dx,eax
  418f90:	or     cl,BYTE PTR ds:0xcba08600
  418f96:	adc    eax,DWORD PTR [edi+0x50006eb]
  418f9c:	ret    
  418f9d:	pop    es
  418f9e:	or     eax,0xcfb0a00
  418fa3:	add    BYTE PTR [esi+0x796bc894],al
  418fa9:	ins    BYTE PTR es:[edi],dx
  418faa:	psllw  mm0,mm1
  418fad:	ja     0x418fc9
  418faf:	mov    dh,0x95
  418fb1:	lods   al,BYTE PTR ds:[esi]
  418fb2:	(bad)  
  418fb3:	cli    
  418fb4:	jg     0x418fa5
  418fb6:	test   DWORD PTR [eax+0xb924aac],0x678507
  418fc0:	xchg   bl,ch
  418fc2:	sbb    DWORD PTR [ebx-0x2d5e33d],eax
  418fc8:	mov    DWORD PTR [ebp-0x3234c906],esp
  418fce:	test   al,0xd2
  418fd0:	outs   dx,DWORD PTR ds:[esi]
  418fd1:	dec    edx
  418fd2:	or     BYTE PTR [eax],al
  418fd4:	xchg   BYTE PTR [eax],ah
  418fd6:	int3   
  418fd7:	adc    eax,DWORD PTR [edi+0x50006e9]
  418fdd:	inc    edx
  418fde:	or     BYTE PTR ds:0x83a0a,cl
  418fe4:	xchg   BYTE PTR [eax+ecx*8+0x6042796b],dl
  418feb:	pop    esp
  418fec:	aaa    
  418fed:	fcom   st(3)
  418fef:	(bad)  
  418ff1:	xor    esp,DWORD PTR [eax]
  418ff3:	sub    DWORD PTR [ecx*2-0x22f906bb],0xfffffffd
  418ffb:	push   cs
  418ffc:	adc    BYTE PTR [esi-0x3de4e052],ch
  419002:	mov    dh,0x89
  419004:	add    BYTE PTR [esi+0x20ee142],al
  41900a:	retf   0x1f8e
  41900d:	add    ebx,eax
  41900f:	sub    eax,0xf57db0f8
  419014:	popf   
  419015:	shr    cl,0x64
  419018:	add    eax,0xc9a44286
  41901d:	jne    0x419060
  41901f:	loope  0x419024
  419021:	xchg   bl,al
  419023:	js     0x41902a
  419025:	add    esi,0x54
  419028:	add    eax,0xbe284286
  41902d:	sub    eax,0xb6986047
  419032:	xlat   BYTE PTR ds:[ebx]
  419033:	pop    ebx
  419034:	psubb  mm6,QWORD PTR [ebx]
  419037:	mov    al,ds:0xfc4cac82
  41903c:	(bad)  
  41903d:	cmp    ah,dl
  41903f:	xor    ebx,DWORD PTR [edi]
  419041:	pop    es
  419042:	fucomp st(5)
  419044:	popf   
  419045:	jge    0x419008
  419047:	mov    DWORD PTR ss:[esi+0x50ee142],eax
  41904e:	jge    0x41905f
  419050:	pop    ds
  419051:	jnp    0x41902a
  419053:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419054:	idiv   DWORD PTR [eax+0x389dfd7d]
  41905a:	jmp    0x42c79507
  41905f:	mov    al,0x31
  419061:	(bad)  
  419062:	leave  
  419063:	or     DWORD PTR [ecx+ebx*2+0xdec81a],ebx
  41906a:	stc    
  41906b:	mov    ecx,DWORD PTR [ecx]
  41906d:	jmp    0x1a4879f7
  419072:	je     0x418ff8
  419074:	das    
  419075:	aaa    
  419076:	test   BYTE PTR [ebp-0x79],0x3b
  41907a:	xchg   edi,eax
  41907b:	inc    edx
  41907c:	or     dh,dh
  41907e:	mov    ebx,0x3e177f49
  419083:	leave  
  419084:	add    eax,0xe95744d8
  419089:	in     eax,0x78
  41908b:	ret    
  41908c:	add    BYTE PTR [ebx+0x24f2d5a0],bl
  419092:	dec    BYTE PTR [edi]
  419094:	dec    ebp
  419095:	std    
  419096:	adc    esi,eax
  419098:	loopne 0x41908a
  41909a:	add    BYTE PTR [edx+0xa],0xba
  41909e:	xchg   edi,eax
  41909f:	test   BYTE PTR [ecx-0x37e621ec],al
  4190a5:	out    0x1,al
  4190a7:	dec    eax
  4190a8:	or     ecx,ebp
  4190aa:	test   ecx,ebp
  4190ac:	push   es
  4190ad:	sbb    dh,BYTE PTR [esp+eax*4+0x2f]
  4190b1:	mov    edi,0xff8745e9
  4190b6:	xchg   esi,eax
  4190b7:	inc    edx
  4190b8:	or     bl,dh
  4190ba:	push   ebx
  4190bb:	dec    ecx
  4190bc:	jg     0x41905d
  4190be:	mov    ecx,0xc4d805c8
  4190c3:	push   esi
  4190c4:	jmp    0xc50011b6
  4190c9:	cmp    BYTE PTR [eax-0x2b],ch
  4190cc:	repnz lods al,BYTE PTR ds:[esi]
  4190ce:	add    BYTE PTR [ecx+0xd],bh
  4190d1:	dec    ebp
  4190d2:	cmc    
  4190d3:	sbb    ebp,ebp
  4190d5:	loopne 0x41910b
  4190d7:	test   DWORD PTR [edx+0xa],eax
  4190da:	fidiv  DWORD PTR [edi+0x2008180]
  4190e0:	into   
  4190e1:	xor    edx,eax
  4190e3:	push   0x5f00d7c6
  4190e8:	inc    edx
  4190e9:	loope  0x4190ee
  4190eb:	or     al,0x14
  4190ed:	dec    eax
  4190ee:	cmp    ecx,ecx
  4190f0:	xchg   edx,eax
  4190f1:	add    eax,0xa334583
  4190f6:	add    BYTE PTR [eax],ch
  4190f8:	jo     0x4190fb
  4190fa:	mov    esi,DWORD PTR [ecx-0x6]
  4190fd:	or     BYTE PTR [esi+edi*1],0x3
  419101:	jae    0x4190e4
  419103:	cs inc edi
  419105:	xchg   DWORD PTR [ecx-0xac832],edx
  41910b:	(bad)  
  41910c:	fidivr DWORD PTR [ebx]
  41910e:	inc    ebp
  41910f:	add    edi,DWORD PTR [eax+0x3e4ee9db]
  419115:	or     al,BYTE PTR [eax]
  419117:	int3   
  419118:	adc    ecx,DWORD PTR [eax-0x77]
  41911b:	mov    dl,0xda
  41911d:	xor    edx,eax
  41911f:	fadd   st,st(5)
  419121:	fwait
  419122:	add    bh,ch
  419124:	inc    ecx
  419125:	loope  0x41912a
  419127:	or     al,0x14
  419129:	dec    eax
  41912a:	cmp    edi,DWORD PTR [ecx-0x6e]
  41912d:	add    eax,0xa330983
  419132:	add    BYTE PTR [eax],al
  419134:	test   al,0x6f
  419136:	add    DWORD PTR [ebx+0xc80edf1],ecx
  41913c:	scas   al,BYTE PTR es:[edi]
  41913d:	add    dh,BYTE PTR [ebx-0x1f]
  419140:	scas   al,BYTE PTR es:[edi]
  419141:	inc    esi
  419142:	mov    ss,WORD PTR [ebp+0x5e]
  419145:	aaa    
  419146:	cmc    
  419147:	jmp    edx
  419149:	int    0x3b
  41914b:	inc    ebp
  41914c:	mov    bl,0xb7
  41914e:	fucomi st,st(3)
  419150:	pop    ss
  419151:	repnz fadd DWORD PTR [edx-0xa]
  419155:	lea    edx,[esi]
  419157:	cmp    eax,DWORD PTR [esi+0x5d5eaa29]
  41915d:	call   0x106633b
  419162:	mov    ch,0x6b
  419164:	mov    DWORD PTR [eax-0x61],ebp
  419167:	or     eax,DWORD PTR [esi+0x7db605eb]
  41916d:	pusha  
  41916e:	mov    esp,0xf7cf0c33
  419173:	inc    eax
  419174:	push   es
  419175:	or     dh,bh
  419177:	or     al,0xb
  419179:	dec    ebx
  41917a:	pop    ss
  41917b:	std    
  41917c:	sub    DWORD PTR [esp+ecx*8],eax
  41917f:	adc    ebx,DWORD PTR [edi+0x26]
  419182:	bnd jge 0x4191c4
  419185:	lock fnstenv [eax]
  419188:	xor    al,0x29
  41918a:	jg     0x4191df
  41918c:	jb     0x41915e
  41918e:	dec    eax
  41918f:	jl     0x419143
  419191:	mov    al,0x9
  419193:	xor    esp,edx
  419195:	sub    cl,dl
  419197:	pop    ebp
  419198:	add    BYTE PTR [edx-0x24],ah
  41919b:	mov    DWORD PTR [edx+edi*2],esi
  41919e:	jmp    0x4191a6
  4191a0:	or     eax,0x5681d018
  4191a5:	xchg   edx,eax
  4191a6:	push   ecx
  4191a7:	add    ecx,DWORD PTR [edi]
  4191a9:	inc    ebp
  4191aa:	imul   ebp,DWORD PTR [eax],0x10
  4191ad:	jns    0x41920e
  4191af:	and    dh,al
  4191b1:	rcr    DWORD PTR [ebx+0x16],0x43
  4191b5:	xchg   edx,eax
  4191b6:	and    cl,bl
  4191b8:	adc    esi,DWORD PTR [eax]
  4191ba:	adc    al,BYTE PTR [edx+0x472fae4b]
  4191c0:	or     eax,0xfd2bed0a
  4191c5:	cdq    
  4191c6:	addr16 xchg esp,eax
  4191c8:	jmp    0x419150
  4191ca:	fmul   QWORD PTR [ebx+0x6eb7b92]
  4191d0:	mov    ebx,ebx
  4191d2:	inc    edx
  4191d3:	adc    eax,0x79d94480
  4191d8:	mov    esi,0xc16c06d
  4191dd:	jnp    0x41919a
  4191df:	cdq    
  4191e0:	push   cs
  4191e1:	xchg   BYTE PTR [edx+0xc],al
  4191e4:	out    0xf4,eax
  4191e6:	inc    edi
  4191e7:	retw   0xcb51
  4191eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191ec:	test   DWORD PTR [esi+0xe9b6601],0x51df5d7d
  4191f6:	push   eax
  4191f7:	cmp    al,0x87
  4191f9:	mov    al,0x3a
  4191fb:	loope  0x41918c
  4191fd:	add    BYTE PTR [edi-0x67e51e98],cl
  419203:	cmp    bh,BYTE PTR [eax+0x4c]
  419206:	or     eax,0x478ed56d
  41920b:	jmp    0x41922e
  41920d:	popf   
  41920e:	or     esp,edx
  419210:	ins    DWORD PTR es:[edi],dx
  419211:	inc    esp
  419212:	jne    0x419280
  419214:	js     0x4191df
  419216:	icebp  
  419217:	out    0xf5,eax
  419219:	mov    ds,WORD PTR [eax+0x36]
  41921c:	enter  0xaf45,0xfa
  419220:	sbb    esi,eax
  419222:	cmovo  eax,edi
  419225:	shr    DWORD PTR [ebp-0x337919b3],0x41
  41922c:	cmc    
  41922d:	xlat   BYTE PTR ds:[ebx]
  41922e:	(bad)  
  41922f:	jg     0x419213
  419231:	fisttp QWORD PTR [ebx+0x25]
  419234:	aad    0xcf
  419236:	inc    esi
  419237:	shr    DWORD PTR [ebp-0xa7a8711],cl
  41923d:	xchg   edi,eax
  41923e:	mul    bh
  419240:	or     edi,ebp
  419242:	leave  
  419243:	(bad)  
  419244:	mov    ds:0x17f30ea7,al
  419249:	aaa    
  41924a:	dec    edi
  41924b:	or     BYTE PTR [edx],cl
  41924d:	mov    edi,0x62d1cae4
  419252:	inc    esp
  419253:	push   edi
  419254:	lea    ebp,[ecx]
  419256:	push   ss
  419257:	xor    ch,BYTE PTR [edi]
  419259:	mov    esp,0xda044c7d
  41925e:	mov    edx,0x9f8113
  419263:	sbb    DWORD PTR [edx],ebx
  419265:	leave  
  419266:	test   BYTE PTR [ebx+ebx*2],0xf9
  41926a:	(bad)  
  41926b:	ins    BYTE PTR es:[edi],dx
  41926c:	shl    DWORD PTR [ecx+edi*8-0x7b],0x45
  419271:	lea    ebp,[ebx]
  419273:	data16 aad 0xf2
  419276:	and    bh,bh
  419278:	(bad)  
  419279:	add    ch,BYTE PTR [ebx+0x28]
  41927c:	jecxz  0x419270
  41927e:	(bad)  
  41927f:	clc    
  419280:	jle    0x4192b0
  419282:	sub    DWORD PTR [ebx],edx
  419284:	jg     0x4192b4
  419286:	(bad)  
  419287:	neg    BYTE PTR [esi]
  419289:	jg     0x419221
  41928b:	jecxz  0x41925f
  41928d:	repz cmp al,0xe
  419290:	retf   0xaebe
  419293:	push   ss
  419294:	sub    ebx,DWORD PTR [esi+eiz*4+0x16]
  419298:	inc    ebx
  419299:	repz adc al,0x7e
  41929c:	aad    0x7c
  41929e:	loope  0x41923d
  4192a0:	outs   dx,DWORD PTR ds:[esi]
  4192a1:	out    dx,al
  4192a2:	mov    ?,WORD PTR [ecx+ecx*4-0x73]
  4192a6:	test   eax,0xef5dbf8c
  4192ab:	test   DWORD PTR [edx+0x2f],eax
  4192ae:	adc    al,0x6e
  4192b0:	push   ecx
  4192b1:	fiadd  WORD PTR [eax+0x66f2e570]
  4192b7:	sub    bl,0xde
  4192ba:	cwde   
  4192bb:	add    bh,BYTE PTR [edi+0x1e]
  4192be:	adc    al,BYTE PTR [ebx+0x57]
  4192c1:	mov    al,ds:0x2f66c762
  4192c6:	add    BYTE PTR [eax],al
  4192c8:	lods   al,BYTE PTR ds:[si]
  4192ca:	mov    ecx,DWORD PTR [edi]
  4192cc:	sbb    esp,ecx
  4192ce:	mov    edx,edi
  4192d0:	mov    ds:0x7442feb1,al
  4192d5:	push   cs
  4192d6:	jns    0x41926e
  4192d8:	out    dx,eax
  4192d9:	lock add BYTE PTR [ebp+0x4b],dh
  4192dd:	and    DWORD PTR [ebx],edx
  4192df:	adc    DWORD PTR [ebp-0x13e381c1],0xffffffab
  4192e6:	push   edx
  4192e7:	add    dl,bl
  4192e9:	push   ecx
  4192ea:	mov    edx,edi
  4192ec:	push   esp
  4192ed:	ret    0x8303
  4192f0:	push   ebp
  4192f1:	dec    ecx
  4192f2:	jle    0x419300
  4192f4:	scas   al,BYTE PTR es:[edi]
  4192f5:	das    
  4192f6:	xchg   DWORD PTR [eax],eax
  4192f8:	das    
  4192f9:	inc    esi
  4192fa:	add    eax,0xf52bc185
  4192ff:	call   FWORD PTR [ebx+ebp*1+0x47]
  419303:	adc    al,0x76
  419305:	or     DWORD PTR [edi],edx
  419307:	jl     0x41930a
  419309:	push   ds
  41930a:	push   0xffffffff
  41930c:	shr    BYTE PTR [ebx],1
  41930e:	xor    DWORD PTR [esi-0x3d],ebx
  419311:	cmp    ecx,DWORD PTR [ecx-0xad3cfc3]
  419317:	mulps  xmm2,xmm7
  41931a:	mov    edx,edi
  41931c:	idiv   BYTE PTR [edx]
  41931e:	mov    cs,WORD PTR [ebx+0x10]
  419321:	sub    al,0xf5
  419323:	xor    ebp,0xffffffe6
  419326:	add    eax,0xf52bad84
  41932b:	inc    DWORD PTR [eax]
  41932d:	pop    esi
  41932e:	xor    BYTE PTR [edx+0x545df00],ch
  419334:	test   cl,bh
  419336:	sub    dh,ch
  419338:	(bad)  
  419339:	in     al,dx
  41933a:	add    eax,0x15d3c132
  41933f:	jmp    0x41936c
  419341:	xchg   BYTE PTR [eax+0x11],bh
  419344:	std    
  419345:	pop    ebp
  419346:	mov    eax,ds:0xd4050caa
  41934b:	adc    ebp,edi
  41934d:	xchg   ecx,eax
  41934e:	loopne 0x4193a8
  419350:	adc    DWORD PTR ds:0x9773ff16,eax
  419356:	pop    esp
  419357:	adc    al,0x20
  419359:	repnz xlat BYTE PTR ds:[ebx]
  41935b:	xchg   edx,edi
  41935d:	fild   DWORD PTR es:[esi]
  419360:	add    BYTE PTR [ecx+0x5e],bh
  419363:	(bad)  
  419364:	cld    
  419365:	popa   
  419366:	inc    eax
  419367:	int    0x3f
  419369:	popf   
  41936a:	sbb    dl,BYTE PTR [edx+0x10d15fd7]
  419370:	std    
  419371:	dec    ecx
  419372:	xchg   esp,eax
  419373:	mov    al,0x6b
  419375:	xchg   ecx,eax
  419376:	pop    esp
  419377:	xor    eax,0x1e839fe
  41937c:	mov    dh,0x95
  41937e:	pop    esp
  41937f:	adc    eax,0x205f790a
  419384:	(bad)  
  419385:	and    DWORD PTR [eax],eax
  419387:	mov    ?,edx
  419389:	(bad)  
  41938a:	fdiv   DWORD PTR [edx-0x20]
  41938d:	adc    BYTE PTR [eax+0xc008111],dl
  419393:	out    0x1,eax
  419395:	test   cl,bl
  419397:	mov    al,ds:0xa505fd11
  41939c:	or     ecx,DWORD PTR ds:0xfd10a10a
  4193a2:	jmp    0x86c4a900
  4193a7:	fild   DWORD PTR [esi]
  4193a9:	or     eax,0xfd109d02
  4193ae:	rcr    DWORD PTR [ebx],1
  4193b0:	into   
  4193b1:	cmp    bh,al
  4193b3:	(bad)  
  4193b4:	push   eax
  4193b5:	out    0xf9,eax
  4193b7:	pusha  
  4193b8:	adc    bh,ch
  4193ba:	jge    0x4193fe
  4193bc:	retf   
  4193bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193be:	add    ch,0x7c
  4193c1:	sbb    DWORD PTR [ebx+0x7751ebd0],ebp
  4193c7:	lds    edx,FWORD PTR [esi+0xd]
  4193ca:	adc    ch,BYTE PTR ds:0x567f1d60
  4193d0:	fild   DWORD PTR [esp+ecx*4+0x6f2b53d]
  4193d7:	int    0xd5
  4193d9:	(bad)  
  4193da:	(bad)  
  4193db:	shl    DWORD PTR [esi],0x7e
  4193de:	xchg   BYTE PTR [edx-0x1f],al
  4193e1:	or     BYTE PTR ds:0x63181abc,al
  4193e7:	test   BYTE PTR [ecx+0x3b4f18dc],ah
  4193ed:	sub    al,BYTE PTR [esi]
  4193ef:	shl    ebx,1
  4193f1:	pop    ss
  4193f2:	add    DWORD PTR [esi+0xdcd5],eax
  4193f8:	inc    eax
  4193f9:	push   esi
  4193fa:	mov    ?,WORD PTR [ebx]
  4193fc:	shr    bl,1
  4193fe:	fcmovnbe st,st(3)
  419400:	pop    esi
  419401:	in     al,0x82
  419403:	aam    0xd0
  419405:	fist   DWORD PTR [edi]
  419407:	xchg   ebx,eax
  419408:	cwde   
  419409:	fisttp WORD PTR [edx+0xb316b0]
  41940f:	jbe    0x419457
  419411:	in     al,0x80
  419413:	stos   BYTE PTR es:[edi],al
  419414:	sar    BYTE PTR [ebx+0x2dcf4717],1
  41941a:	lock mov al,0x7d
  41941d:	cmc    
  41941e:	xchg   edi,eax
  41941f:	rcr    ecx,cl
  419421:	and    dl,BYTE PTR [esi]
  419423:	jmp    0x4193f4
  419425:	imul   eax,ecx,0x7a20b75
  41942b:	or     eax,0xd3178b84
  419430:	or     edx,DWORD PTR [ebx]
  419432:	test   al,0x7a
  419434:	ret    
  419435:	or     ecx,ecx
  419437:	fwait
  419438:	int    0xf2
  41943a:	fimul  WORD PTR [ebx+0x41]
  41943d:	jg     0x4193fe
  41943f:	rcl    ebp,0xd
  419442:	stc    
  419443:	test   eax,0x78038e3e
  419448:	int    0xf2
  41944a:	stos   BYTE PTR es:[edi],al
  41944b:	jo     0x4193d0
  41944d:	push   ds
  41944e:	add    BYTE PTR [edi+0x5b1f7633],bh
  419454:	cs hlt 
  419456:	ss cdq 
  419458:	(bad)  
  419459:	dec    esp
  41945a:	aad    0x0
  41945c:	pop    esp
  41945d:	nop
  41945e:	add    dh,BYTE PTR [ebx+edi*2-0x33]
  419462:	repnz push ds
  419464:	dec    ebp
  419465:	ins    DWORD PTR es:[edi],dx
  419466:	data16 out 0x4,al
  419469:	loopne 0x41945f
  41946b:	push   cs
  41946c:	jno    0x4194ab
  41946e:	mov    esp,0x3e77fcea
  419473:	test   DWORD PTR [ecx+0x3f],0xca06e609
  41947a:	hlt    
  41947b:	out    dx,al
  41947c:	nop
  41947d:	xor    ebx,0x4518362c
  419483:	cmc    
  419484:	adc    ebp,ebp
  419486:	loopne 0x41944b
  419488:	jle    0x419457
  41948a:	repnz pusha 
  41948c:	inc    esi
  41948d:	xor    ebp,DWORD PTR [edi]
  41948f:	test   al,0x88
  419491:	mov    ebx,0xcd70bcd2
  419496:	cs pop ss
  419498:	cs xchg DWORD PTR ds:[ebp-0x62],ebp
  41949d:	int    0xf2
  41949f:	test   BYTE PTR [ebx+0x41],0x7f
  4194a3:	aaa    
  4194a4:	(bad)  
  4194a5:	aam    0xd
  4194a7:	stc    
  4194a8:	mov    bh,BYTE PTR ds:0xcd7ea78e
  4194ae:	repnz add BYTE PTR [edi+esi*1-0x639ebb9],bl
  4194b6:	push   ss
  4194b7:	jl     0x4194d2
  4194b9:	push   ds
  4194ba:	mov    dl,0xfd
  4194bc:	sub    BYTE PTR [eax],bh
  4194be:	mov    eax,DWORD PTR [ebp+0x0]
  4194c1:	mov    bl,0xeb
  4194c3:	mov    bl,0xf
  4194c5:	sbb    bl,BYTE PTR [edx-0x11]
  4194c8:	(bad)  
  4194c9:	cmp    ah,ch
  4194cb:	push   esp
  4194cc:	ins    BYTE PTR es:[edi],dx
  4194cd:	mov    eax,0x48fd7fc3
  4194d2:	cmp    BYTE PTR ds:0x5bbb9cb6,al
  4194d8:	xor    al,0xc1
  4194da:	int    0x2
  4194dc:	adc    BYTE PTR [eax-0x3d],bl
  4194df:	popf   
  4194e0:	std    
  4194e1:	test   al,0x34
  4194e3:	dec    ecx
  4194e4:	jmp    DWORD PTR [edx]
  4194e6:	fidivr WORD PTR [ebx]
  4194e8:	dec    ebp
  4194e9:	arpl   WORD PTR [esi+0x2ae1e9d4],si
  4194ef:	cmc    
  4194f0:	call   esi
  4194f2:	add    dl,BYTE PTR [edi]
  4194f4:	cmp    ebx,DWORD PTR [esi+0x3a7b7f44]
  4194fa:	cmp    ch,dh
  4194fc:	cmp    ecx,DWORD PTR [ecx]
  4194fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194ff:	add    eax,0xf535c783
  419504:	call   FWORD PTR [eax]
  419506:	or     BYTE PTR [ecx],0x8b
  419509:	popa   
  41950a:	repnz cld 
  41950c:	add    al,0x1f
  41950e:	rol    BYTE PTR ds:0xf535bd84,cl
  419514:	call   FWORD PTR [edi+esi*1+0x47]
  419518:	adc    al,0xf6
  41951a:	add    al,0x17
  41951c:	jl     0x419527
  41951e:	sbb    bl,BYTE PTR [esi-0x3]
  419521:	sub    BYTE PTR [eax],bh
  419523:	add    eax,0x42a000b6
  419528:	add    eax,0xf32486b6
  41952d:	mov    esi,0xbf01e3e6
  419532:	add    ecx,DWORD PTR [eax-0xb]
  419535:	add    ch,bl
  419537:	fmul   QWORD PTR ds:0xdda49b6
  41953d:	mov    dh,0x49
  41953f:	fld    DWORD PTR [edi-0x20]
  419542:	jle    0x419514
  419544:	inc    edi
  419545:	add    DWORD PTR [esi+0x1a53dd5b],ebp
  41954b:	xchg   DWORD PTR [edi],ebx
  41954d:	xchg   ecx,eax
  41954e:	mov    ds:0xd80d1d7c,al
  419553:	xchg   esp,eax
  419554:	or     DWORD PTR ds:0xbef2b4d0,ecx
  41955a:	jcxz   0x41955e
  41955d:	retf   0xae0f
  419560:	add    al,BYTE PTR [ecx]
  419562:	aas    
  419563:	loopne 0x419531
  419565:	adc    edi,DWORD PTR [ecx+0x5f]
  419568:	fild   DWORD PTR [eax]
  41956a:	xchg   bl,bl
  41956c:	mov    eax,edi
  41956e:	out    0xbf,eax
  419570:	inc    esp
  419572:	retf   
  419573:	sti    
  419574:	or     BYTE PTR [eax],al
  419576:	xchg   bl,bl
  419578:	and    DWORD PTR [ebp+0x5],ecx
  41957b:	mov    esi,0xa22cffe6
  419580:	add    DWORD PTR [ebx+0x6a],0xb3fcbe1b
  419587:	cmp    ecx,DWORD PTR ds:0xf48900b6
  41958d:	sbb    DWORD PTR [ebx],0xffffff89
  419590:	mov    ch,0x76
  419592:	nop
  419593:	mov    bl,0x1b
  419595:	push   cs
  419596:	std    
  419597:	xchg   ebx,eax
  419598:	jecxz  0x4195a3
  41959a:	aad    0x58
  41959c:	xchg   esp,eax
  41959d:	or     DWORD PTR [edi],0xd
  4195a0:	mov    al,ds:0x4282731d
  4195a5:	lods   al,BYTE PTR ds:[esi]
  4195a6:	mov    es,WORD PTR [ecx-0x1cdcb826]
  4195ac:	int3   
  4195ad:	gs inc ebx
  4195af:	push   edx
  4195b0:	cmp    esi,eax
  4195b2:	cmc    
  4195b3:	int    0xcc
  4195b5:	mov    eax,DWORD PTR [eax*1-0x79fc078a]
  4195bc:	cmp    eax,0x3bb8bc33
  4195c1:	cmp    eax,esp
  4195c3:	xchg   DWORD PTR [ebx],eax
  4195c5:	inc    ecx
  4195c6:	or     edi,DWORD PTR [edi+0x3]
  4195c9:	loopne 0x4195e6
  4195cb:	xchg   ebx,eax
  4195cc:	xchg   esp,eax
  4195cd:	mov    ds:0x93948b02,eax
  4195d2:	add    ecx,edx
  4195d4:	loope  0x4195ce
  4195d6:	or     cl,cl
  4195d8:	shl    esp,0xdb
  4195db:	aad    0x56
  4195dd:	test   DWORD PTR [eax+0x4e122fd],eax
  4195e3:	add    eax,0x8603dfa1
  4195e8:	cmp    ebx,DWORD PTR [ebx-0x4]
  4195eb:	xchg   edx,eax
  4195ec:	xchg   esp,eax
  4195ed:	pusha  
  4195ee:	jae    0x4195f0
  4195f0:	mov    ebp,0x4e00e182
  4195f5:	fcom   DWORD PTR [edx-0x68c94a78]
  4195fb:	add    DWORD PTR [ebx+0x56],eax
  4195fe:	fst    QWORD PTR [esi*4-0x4aeb64d6]
  419605:	xor    ch,ah
  419607:	cdq    
  419608:	jge    0x4195d5
  41960a:	pop    ebp
  41960b:	cld    
  41960c:	sub    ebx,ecx
  41960e:	rcl    BYTE PTR [ebx],0x1b
  419611:	(bad)  
  419612:	mov    al,ds:0xf6cb0503
  419617:	add    eax,DWORD PTR [esi-0x111bca49]
  41961d:	pop    ss
  41961e:	or     ah,BYTE PTR [edx-0x39]
  419621:	pop    ds
  419622:	jg     0x419638
  419624:	out    dx,al
  419625:	or     al,0x59
  419627:	cmp    DWORD PTR [ebp-0x5e8de9b1],edx
  41962d:	int    0x7c
  41962f:	sbb    DWORD PTR [edi+ecx*8],0x4f74f97c
  419636:	push   es
  419637:	xchg   bh,ch
  419639:	inc    ebx
  41963a:	loop   0x4195ee
  41963c:	push   0xffffffcd
  41963e:	repnz ins BYTE PTR es:[edi],dx
  419640:	inc    edx
  419641:	cmp    eax,0xcbb0a28d
  419646:	repnz push 0x3d
  419649:	inc    ecx
  41964a:	xchg   esp,eax
  41964c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41964d:	retf   
  41964e:	jg     0x41963f
  419650:	enter  0xe85,0x4e
  419654:	add    BYTE PTR [ebp+edi*1-0x78],bh
  419658:	cs (bad) 
  41965a:	int    0xf2
  41965c:	ror    DWORD PTR [ebp-0x7a1c5d1d],cl
  419662:	inc    edx
  419663:	pusha  
  419664:	inc    edx
  419665:	xchg   ebx,eax
  419666:	call   0xc544:0xb985e8ff
  41966d:	test   BYTE PTR [edx+ebx*2-0xc83bd18],dl
  419674:	xchg   esp,eax
  419675:	gs mov eax,0x4f74eb4a
  41967b:	push   ss
  41967c:	jo     0x4196cd
  41967e:	aaa    
  41967f:	repz jl 0x4196af
  419682:	mov    edx,0x4f9497be
  419687:	sbb    bh,BYTE PTR [ecx]
  419689:	test   DWORD PTR [edx+ecx*1-0x663d4012],edx
  419690:	xor    al,0x42
  419692:	retf   
  419693:	repz push esp
  419695:	adc    al,BYTE PTR [edx-0x35]
  419698:	add    BYTE PTR [edi+ecx*1],bl
  41969b:	loop   0x419709
  41969d:	iret   
  41969e:	das    
  41969f:	cmc    
  4196a0:	mov    esi,DWORD PTR [edi]
  4196a2:	(bad)  
  4196a3:	hlt    
  4196a4:	sbb    eax,0x75f53023
  4196a9:	sub    BYTE PTR [edi],0x7c
  4196ac:	jo     0x4196ae
  4196ae:	stos   BYTE PTR es:[edi],al
  4196af:	(bad)  
  4196b0:	(bad)  
  4196b1:	(bad)  
  4196b3:	sbb    al,0x40
  4196b5:	fistp  WORD PTR [ebp+0x1f00855b]
  4196bb:	stos   BYTE PTR es:[edi],al
  4196bc:	add    DWORD PTR [ecx+0x477fb6a1],ecx
  4196c2:	xor    BYTE PTR [esi],ch
  4196c4:	aas    
  4196c5:	or     bl,BYTE PTR [edi+0x3be893e]
  4196cb:	aas    
  4196cc:	or     al,BYTE PTR [eax]
  4196ce:	scas   eax,DWORD PTR es:[edi]
  4196cf:	test   eax,0xcaea8b0b
  4196d4:	mov    eax,DWORD PTR [esi+0xa3f23]
  4196da:	adc    al,0x78
  4196dc:	jmp    0x419712
  4196de:	jne    0x419726
  4196e0:	or     cl,BYTE PTR [ebx+0x5032e22a]
  4196e6:	mov    al,ds:0xc90f12aa
  4196eb:	cmp    al,0xf5
  4196ed:	jne    0x419752
  4196ef:	inc    ebp
  4196f0:	mov    esp,0x3292df90
  4196f5:	add    BYTE PTR [eax+0x68031aaa],al
  4196fb:	mov    esi,ebp
  4196fd:	jne    0x41975e
  4196ff:	dec    ecx
  419700:	sar    edi,0xba
  419703:	leave  
  419704:	cmc    
  419705:	jne    0x41972e
  419707:	repz fbld TBYTE PTR cs:[eax]
  41970b:	xor    al,0x87
  41970d:	shl    BYTE PTR [eax],0xc1
  419710:	repnz or DWORD PTR [esi+0x6cb806db],eax
  419717:	neg    DWORD PTR [eax]
  419719:	std    
  41971a:	pop    ds
  41971b:	adc    ax,0xfd
  41971f:	add    DWORD PTR [ebp-0x35],edx
  419722:	and    eax,DWORD PTR [esi+0x2b]
  419725:	sbb    DWORD PTR [ebx-0x5a],esi
  419728:	call   0x272a9c7d
  41972d:	cli    
  41972e:	or     al,0x18
  419730:	dec    esp
  419731:	jle    0x41978e
  419733:	inc    esi
  419734:	fistp  DWORD PTR [ecx]
  419736:	jae    0x4197a6
  419738:	fdiv   QWORD PTR [ecx]
  41973a:	push   esi
  41973b:	leave  
  41973c:	(bad)  
  41973d:	test   BYTE PTR [eax+0xb9b48cd],0xb9
  419744:	(bad)  
  419745:	out    dx,al
  419746:	out    0xca,eax
  419748:	mov    eax,0x1c03fd18
  41974d:	or     DWORD PTR [ebx+0x6d2ca],eax
  419753:	(bad)  
  419755:	add    bh,ch
  419757:	xchg   ecx,eax
  419758:	and    BYTE PTR [ebx+0x758089e8],0x43
  41975f:	stos   BYTE PTR es:[edi],al
  419760:	fcom   DWORD PTR [eax+0x55]
  419763:	xchg   DWORD PTR [ebx+0x3bfbfcb6],ebx
  419769:	or     DWORD PTR [esi+0x1b9b2081],esi
  41976f:	xchg   ecx,eax
  419770:	jno    0x419700
  419772:	nop
  419773:	mov    ebx,0xdbfd069b
  419778:	ror    DWORD PTR ds:0x9b40b0c5,cl
  41977e:	jne    0xb4b0af
  419784:	mov    ah,BYTE PTR [ebp+esi*1-0x3]
  419788:	mov    ebx,0x497f0ee3
  41978d:	inc    edx
  41978e:	in     al,dx
  41978f:	adc    BYTE PTR ds:0x9986e402,al
  419795:	cmp    esp,ecx
  419797:	add    ecx,esi
  419799:	sub    al,0xc5
  41979b:	adc    BYTE PTR [ebx],cl
  41979d:	lds    esp,FWORD PTR [ebx+0x54880905]
  4197a3:	add    eax,DWORD PTR [esi-0x775e35be]
  4197a9:	inc    edx
  4197aa:	loope  0x419828
  4197ac:	inc    ebp
  4197ad:	push   ds
  4197ae:	and    DWORD PTR [edx+eiz*8+0x1000c14e],esi
  4197b5:	inc    ecx
  4197b6:	pushf  
  4197b7:	xchg   esi,eax
  4197b8:	ins    DWORD PTR es:[edi],dx
  4197b9:	cmp    DWORD PTR [ebx+0x73],ebx
  4197bc:	mul    BYTE PTR [esi+0x21]
  4197bf:	add    al,0xc3
  4197c1:	dec    esi
  4197c2:	jmp    0x7cb16acb
  4197c7:	xchg   esi,eax
  4197c8:	cmp    DWORD PTR [ebp+0x363510a7],0xda89966c
  4197d2:	daa    
  4197d3:	xor    DWORD PTR [ebx-0x7cbc9a38],ebx
  4197d9:	mov    edi,0xc889fb17
  4197de:	jns    0x419791
  4197e0:	icebp  
  4197e1:	mov    dl,ah
  4197e3:	(bad)  
  4197e5:	enter  0x3249,0x0
  4197e9:	pop    esp
  4197ea:	enter  0x7c23,0xc5
  4197ee:	push   ds
  4197ef:	cld    
  4197f0:	pop    ecx
  4197f1:	mov    ebx,0x5ab3a141
  4197f6:	dec    esi
  4197f7:	rol    DWORD PTR [eax],0x18
  4197fa:	inc    eax
  4197fb:	add    al,0x96
  4197fd:	ins    DWORD PTR es:[edi],dx
  4197fe:	aaa    
  4197ff:	xor    eax,DWORD PTR [ebx+0x3a16616]
  419805:	cmp    ecx,DWORD PTR [esi+0xa]
  419808:	ror    DWORD PTR [edx+0x13ee5bfd],1
  41980e:	cmp    BYTE PTR [edi],al
  419810:	mov    ecx,0x72065391
  419815:	pop    ebp
  419816:	lds    edi,FWORD PTR [ecx+eiz*8+0x6d]
  41981a:	rcl    ebx,cl
  41981c:	into   
  41981d:	jns    0x4197e2
  41981f:	leave  
  419820:	test   BYTE PTR [esi],0xd4
  419823:	add    ecx,ebp
  419825:	test   ecx,eax
  419827:	retf   0x72eb
  41982a:	dec    eax
  41982b:	jp     0x41989e
  41982d:	test   ebx,0xe383a6f2
  419833:	add    ecx,ebp
  419835:	test   DWORD PTR [ecx+0x77c5cd4c],edi
  41983b:	repz adc al,0xe2
  41983e:	ss mov esp,0x165390ee
  419844:	out    dx,al
  419845:	push   ebx
  419846:	mov    dl,0x99
  419848:	adc    al,0xca
  41984a:	(bad)  
  41984b:	repz hlt 
  41984d:	add    BYTE PTR [ebp-0x6f4024be],bl
  419853:	push   ebx
  419854:	sbb    dh,BYTE PTR [edx+0x5d]
  419857:	lds    edi,FWORD PTR [ebp+eiz*8-0x80]
  41985b:	push   ebx
  41985c:	add    al,BYTE PTR [ecx+0x34]
  41985f:	call   0x250df56
  419864:	add    esp,DWORD PTR [esp+edx*8+0x3a]
  419868:	or     ch,cl
  41986a:	mov    ebp,0x792ef628
  41986f:	fistp  QWORD PTR [esi]
  419871:	adc    edx,DWORD PTR [ecx+0x61a47ec5]
  419877:	ss mov esp,0x5a828abe
  41987d:	push   cs
  41987e:	out    dx,eax
  41987f:	add    eax,DWORD PTR es:[eax]
  419882:	cmp    DWORD PTR [edi],0xc85b75f5
  419888:	mov    esp,0x3291cf80
  41988d:	add    BYTE PTR [eax],bl
  41988f:	stos   BYTE PTR es:[edi],al
  419890:	sbb    al,BYTE PTR [ebx]
  419892:	lock mov ebp,?
  419895:	jne    0x4198b6
  419897:	inc    esp
  419898:	(bad)  
  41989a:	mov    dl,0x42
  41989c:	or     ebx,0xe80aaa38
  4198a2:	pop    eax
  4198a3:	sbb    ch,dh
  4198a5:	jmp    DWORD PTR [edx-0x7d]
  4198a8:	add    eax,0xf2c64885
  4198ad:	push   DWORD PTR [edi-0x2b]
  4198b0:	out    dx,al
  4198b1:	inc    DWORD PTR [eax]
  4198b3:	sub    BYTE PTR [esi],ah
  4198b5:	jmp    0x4198b5
  4198b7:	clc    
  4198b8:	aaa    
  4198b9:	add    DWORD PTR [esi-0x15],0x6402d37d
  4198c0:	iret   
  4198c1:	xrelease mov BYTE PTR [edx-0x36],bh
  4198c5:	or     DWORD PTR [esi+ebp*4+0x3e],0x4c0b4d8b
  4198cd:	inc    esp
  4198ce:	adc    ah,al
  4198d0:	add    edi,esi
  4198d2:	mov    edx,esp
  4198d4:	xor    bh,BYTE PTR [edi+0x4]
  4198d7:	pop    ss
  4198d8:	dec    esp
  4198d9:	add    cl,BYTE PTR [ecx-0x717ec516]
  4198df:	and    eax,DWORD PTR [ebx+0xa]
  4198e2:	add    dh,dh
  4198e4:	add    ch,bl
  4198e6:	mov    esi,DWORD PTR [eax+ebp*8-0x4d2397bc]
  4198ed:	out    dx,al
  4198ee:	(bad)  
  4198ef:	out    0xc9,al
  4198f1:	ja     0x4198fc
  4198f3:	mov    al,0xfa
  4198f5:	adc    al,BYTE PTR [edx]
  4198f7:	outs   dx,DWORD PTR ds:[esi]
  4198f8:	inc    edx
  4198f9:	or     ch,bl
  4198fb:	xchg   bh,dl
  4198fd:	xchg   DWORD PTR [ebx-0x5a],esp
  419900:	fld    TBYTE PTR [edi+0x43]
  419903:	push   0xffffff9b
  419905:	jne    0x41994a
  419907:	(bad)  
  419908:	les    ebx,FWORD PTR [edx+0xc058123]
  41990e:	std    
  41990f:	mov    bl,0xfb
  419911:	repz mov ch,0xf6
  419914:	dec    ebx
  419915:	mov    ds:0xe486003f,eax
  41991a:	call   0x6e73:0x484851b
  419921:	pusha  
  419922:	xor    DWORD PTR [esi+0x1],edx
  419925:	pop    es
  419926:	(bad)  
  419927:	cld    
  419928:	jae    0x419901
  41992a:	add    eax,0x2c037e73
  41992f:	fucomi st,st(1)
  419931:	xchg   esp,eax
  419932:	mov    al,al
  419934:	pop    edx
  419935:	rol    bl,1
  419937:	sbb    eax,0xd04a4da
  41993c:	or     ecx,DWORD PTR [ebp+0x6086000c]
  419942:	mov    bl,0xe7
  419944:	cmovle eax,DWORD PTR [edx-0xa247a00]
  41994b:	mov    ch,0x41
  41994d:	(bad)  
  41994f:	mov    ch,0x51
  419951:	fld    DWORD PTR [edi-0x21]
  419954:	mov    ss,eax
  419956:	xor    BYTE PTR [ecx],al
  419958:	lahf   
  419959:	pop    ebx
  41995a:	lds    edx,FWORD PTR [ebx+0x1a]
  41995d:	shl    BYTE PTR [eax+0x56],0x7a
  419961:	pusha  
  419962:	mov    bl,0x13
  419964:	or     eax,0xba8716fe
  419969:	jmp    0xeb83:0x60825671
  419970:	call   DWORD PTR [esi+0x420d03f7]
  419976:	mov    ebx,0x1d77aef3
  41997b:	jns    0x41997d
  41997d:	mov    eax,0x518f6836
  419982:	mov    ebx,0x247d79c4
  419987:	or     eax,0xfa4e3b0d
  41998c:	js     0x419953
  41998e:	ss push 0xffffff86
  419991:	or     al,BYTE PTR [edx-0x1f]
  419994:	add    edx,DWORD PTR [edi+0x2]
  419997:	fiadd  DWORD PTR [ebp+0x78e14283]
  41999d:	lds    ebx,FWORD PTR [esi]
  41999f:	and    DWORD PTR [edx+ecx*1+0x3bfd014f],esi
  4199a6:	cmp    eax,0x359d96cc
  4199ab:	jnp    0x419a20
  4199ad:	push   ss
  4199ae:	and    DWORD PTR [si],eax
  4199b1:	jmp    0x419a01
  4199b3:	fld    DWORD PTR [eax]
  4199b5:	mov    ebx,0x8996ac6b
  4199ba:	mov    ecx,0x36550cb7
  4199bf:	pushf  
  4199c0:	xchg   esi,eax
  4199c1:	sbb    edx,0xc4c32f2f
  4199c7:	gs inc ebx
  4199c9:	mov    edi,DWORD PTR [edi+0x4286050f]
  4199cf:	mov    dl,BYTE PTR [edx]
  4199d1:	sahf   
  4199d2:	les    esp,FWORD PTR [ebx-0x38]
  4199d5:	cmp    al,0x3a
  4199d7:	(bad)  
  4199d8:	jmp    0x419a2a
  4199da:	je     0x419999
  4199dc:	xchg   esi,eax
  4199dd:	jecxz  0x4199e9
  4199df:	stos   DWORD PTR es:[edi],eax
  4199e0:	stos   DWORD PTR es:[edi],eax
  4199e1:	add    BYTE PTR ds:0xe856834,dl
  4199e7:	inc    ebx
  4199e8:	loope  0x4199ed
  4199ea:	xchg   DWORD PTR [ecx+ebx*8-0x36],edi
  4199ee:	les    edi,FWORD PTR [edx]
  4199f0:	or     bh,BYTE PTR [ebp-0x26b34622]
  4199f6:	fdivr  QWORD PTR [ecx+ecx*4+0x7f4285e9]
  4199fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199fe:	dec    ebp
  4199ff:	mov    ebp,0x7fce994b
  419a04:	push   es
  419a05:	pusha  
  419a06:	or     esp,DWORD PTR [edi-0x467a16f7]
  419a0c:	dec    esp
  419a0d:	std    
  419a0e:	xchg   ebp,eax
  419a0f:	jmp    0xeef6:0x2c20290e
  419a16:	lea    edi,[ebx-0x22bda2ad]
  419a1c:	or     eax,0x374285e6
  419a21:	test   eax,0xe7f5dd42
  419a26:	test   DWORD PTR [edx+0x3],eax
  419a29:	jg     0x4199f0
  419a2b:	les    eax,FWORD PTR [ebx]
  419a2d:	ja     0x419a64
  419a2f:	inc    edx
  419a30:	jg     0x419a59
  419a32:	es test ecx,ebp
  419a35:	loope  0x419a17
  419a37:	add    DWORD PTR [edi],eax
  419a39:	test   al,0x5b
  419a3b:	jg     0x419a67
  419a3d:	loop   0x419a89
  419a3f:	dec    edi
  419a40:	or     al,0x6a
  419a42:	daa    
  419a43:	lock or DWORD PTR [edx-0x43c94600],eax
  419a4a:	xor    DWORD PTR [ecx-0x79d643cb],eax
  419a50:	sub    eax,0xffffffe1
  419a53:	test   al,0xfb
  419a55:	sbb    BYTE PTR [esi+edx*2],0xb9
  419a59:	mov    edi,DWORD PTR [ebp-0x7e]
  419a5c:	inc    edx
  419a5d:	or     dh,BYTE PTR [eax-0x39]
  419a60:	repz test BYTE PTR [ebp+edx*2-0x758a7445],ch
  419a68:	inc    edx
  419a69:	or     al,BYTE PTR [eax]
  419a6b:	hlt    
  419a6c:	add    BYTE PTR [ebx],al
  419a6e:	sub    DWORD PTR [eax-0x688274c5],0x45
  419a75:	inc    edi
  419a76:	loopne 0x419a64
  419a78:	ss adc al,0x7f
  419a7b:	push   esp
  419a7c:	dec    edx
  419a7d:	jg     0x419a6f
  419a7f:	jno    0x419ab8
  419a81:	cmc    
  419a82:	mov    DWORD PTR [edx],esp
  419a84:	sbb    esp,ecx
  419a86:	sbb    al,0xa4
  419a88:	push   es
  419a89:	mov    bl,0xe1
  419a8b:	sub    eax,0xd7701738
  419a90:	sti    
  419a91:	repnz mov dl,bl
  419a94:	sbb    al,BYTE PTR [edi+0x60409ac0]
  419a9a:	cli    
  419a9b:	ss ret 0xb
  419a9f:	pop    ds
  419aa0:	inc    esp
  419aa1:	inc    edi
  419aa2:	loopne 0x419a82
  419aa4:	push   ds
  419aa5:	or     BYTE PTR [eax-0x30],dl
  419aa8:	mov    al,0xfe
  419aaa:	inc    BYTE PTR [eax]
  419aac:	mov    edx,0xef15f51a
  419ab1:	shl    BYTE PTR [edx],1
  419ab3:	add    BYTE PTR [edx+eax*1+0x3],ah
  419ab7:	mov    eax,DWORD PTR [edx+0xb458be2]
  419abd:	inc    esp
  419abe:	inc    edi
  419abf:	and    BYTE PTR [ebp+0x3f],dl
  419ac2:	mov    esp,eax
  419ac4:	jecxz  0x419ac0
  419ac6:	push   ebx
  419ac7:	sbb    edx,DWORD PTR [eax]
  419ac9:	mov    esp,0x802cfeec
  419ace:	or     BYTE PTR [ecx+0x36],al
  419ad1:	mov    ah,BYTE PTR [esi]
  419ad3:	jmp    FWORD PTR [edx-0x1049fa1e]
  419ad9:	(bad)  
  419ada:	mov    esp,0x329a1f90
  419adf:	add    BYTE PTR [ecx+edx*4+0x6c865712],bl
  419ae6:	call   0x9e73:0x650d1b
  419aed:	loope  0x419aee
  419aef:	jb     0x419a87
  419af1:	sbb    BYTE PTR [edx-0x110096f5],0xe7
  419af8:	stos   BYTE PTR es:[edi],al
  419af9:	dec    edi
  419afa:	add    ch,bh
  419afc:	pxor   mm4,mm2
  419aff:	or     BYTE PTR [esi-0x55],0xef
  419b03:	xor    edx,0xffffffab
  419b06:	push   es
  419b07:	add    BYTE PTR [ebx+0x39fd0ab2],al
  419b0d:	mov    ecx,0x86008772
  419b12:	stos   DWORD PTR es:[edi],eax
  419b13:	push   es
  419b14:	add    DWORD PTR [esi+0x40],0x8
  419b18:	cmp    eax,DWORD PTR [eax-0x6c02ff51]
  419b1e:	or     al,0x7b
  419b20:	inc    ebx
  419b21:	xor    ecx,DWORD PTR ss:[eax+0x6ab8694]
  419b28:	mov    DWORD PTR [ebx-0x75],ecx
  419b2b:	inc    esi
  419b2c:	loopne 0x419ab2
  419b2e:	pop    ebx
  419b2f:	add    DWORD PTR [ebx-0x2e],esi
  419b32:	add    BYTE PTR [eax-0x296116f5],bl
  419b38:	adc    eax,0x4375ab46
  419b3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b3e:	mov    eax,0xb0874858
  419b43:	pop    eax
  419b44:	push   eax
  419b45:	test   dl,ch
  419b47:	or     BYTE PTR es:[ebp+0xfbf0ce5],cl
  419b4e:	outs   dx,DWORD PTR ds:[esi]
  419b4f:	out    dx,al
  419b50:	mov    DWORD PTR [esi+0x6a0c4a2c],eax
  419b56:	pop    edi
  419b57:	icebp  
  419b58:	sbb    DWORD PTR [esi],0x30
  419b5b:	add    ebp,edi
  419b5d:	or     eax,0xff33a643
  419b62:	sysexit 
  419b64:	jnp    0x419b66
  419b66:	xlat   BYTE PTR ds:[ebx]
  419b67:	loopne 0x419b6c
  419b69:	xchg   bh,cl
  419b6b:	ins    DWORD PTR es:[edi],dx
  419b6c:	adc    al,0x78
  419b6e:	ror    DWORD PTR [ebx-0x33],0x49
  419b72:	push   ecx
  419b73:	ins    DWORD PTR es:[edi],dx
  419b74:	mov    ch,0x0
  419b76:	(bad)  
  419b78:	cmp    ecx,DWORD PTR [ecx]
  419b7a:	jne    0x419bb2
  419b7c:	mov    ebp,eax
  419b7e:	pop    ecx
  419b7f:	stos   BYTE PTR es:[edi],al
  419b80:	mov    eax,0x77c15320
  419b85:	mov    bh,0x2d
  419b87:	iret   
  419b88:	gs adc al,0x40
  419b8b:	rol    DWORD PTR [ebx],0xcd
  419b8e:	inc    ecx
  419b8f:	ss jecxz 0x419b9a
  419b92:	xchg   ebp,eax
  419b93:	ss pop ecx
  419b95:	lds    ebp,FWORD PTR [ecx]
  419b97:	int3   
  419b98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b99:	out    dx,eax
  419b9a:	sub    dh,cl
  419b9c:	in     eax,dx
  419b9d:	add    eax,DWORD PTR [esi-0xcbda33]
  419ba3:	push   cs
  419ba4:	mov    ch,0x7a
  419ba6:	add    dh,dl
  419ba8:	loopne 0x419bad
  419baa:	xchg   bh,cl
  419bac:	ins    DWORD PTR es:[edi],dx
  419bad:	adc    edi,eax
  419baf:	ror    bl,0xcc
  419bb2:	leave  
  419bb3:	xor    eax,0x369508eb
  419bb8:	mov    esp,eax
  419bba:	loope  0x419c2f
  419bbc:	mov    eax,ds:0x844ce0c3
  419bc1:	or     bl,dl
  419bc3:	int3   
  419bc4:	sub    eax,0xf516fee0
  419bc9:	ret    
  419bca:	push   ecx
  419bcb:	rcr    DWORD PTR ds:0xed36bae4,0x8
  419bd2:	xor    eax,0xcbbf99aa
  419bd7:	ror    BYTE PTR [ecx],0x76
  419bda:	add    BYTE PTR [edx],ah
  419bdc:	add    eax,0xc207601a
  419be1:	or     ecx,ebp
  419be3:	test   ebx,ecx
  419be5:	dec    esp
  419be6:	icebp  
  419be7:	or     al,0x20
  419be9:	jle    0x419c4b
  419beb:	inc    edi
  419bec:	xor    bh,bl
  419bee:	pop    ds
  419bef:	cli    
  419bf0:	add    esi,edx
  419bf2:	add    BYTE PTR [ecx],dh
  419bf4:	push   esp
  419bf5:	add    ebp,DWORD PTR [edx+esi*4-0x58]
  419bf9:	repnz mov ?,WORD PTR ss:[ebx]
  419bfd:	adc    ah,BYTE PTR [edx+0x28]
  419c00:	mov    ah,0xf2
  419c02:	pushf  
  419c03:	jne    0x419bce
  419c05:	retf   
  419c06:	jb     0x419b92
  419c08:	stos   BYTE PTR es:[edi],al
  419c09:	mov    ebp,0x8cbd8e33
  419c0e:	sub    DWORD PTR [esi],edi
  419c10:	les    esi,FWORD PTR [edx+0x74285e9]
  419c16:	pushf  
  419c17:	jns    0x419bd6
  419c19:	dec    esp
  419c1a:	fisttp QWORD PTR [esi-0x7a7cd1cd]
  419c20:	mov    ebp,0x958d057c
  419c25:	repnz push esp
  419c27:	sbb    cl,bl
  419c29:	mov    esi,0x1a33893f
  419c2e:	into   
  419c2f:	pop    ss
  419c30:	dec    esp
  419c31:	repz cmp al,0xf2
  419c34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c35:	in     eax,0xa3
  419c37:	cmp    DWORD PTR [ebp-0xe095674],0x8600c2e0
  419c41:	inc    edx
  419c42:	or     dh,BYTE PTR [eax+0x1f]
  419c45:	mov    esp,0x7ad62c80
  419c4a:	ret    0xf814
  419c4d:	mov    esi,0x133cf17c
  419c52:	inc    BYTE PTR [eax]
  419c54:	or     dl,dl
  419c56:	loop   0x419be3
  419c58:	loope  0x419c95
  419c5a:	shr    eax,0x8c
  419c5d:	ins    BYTE PTR es:[edi],dx
  419c5e:	cmc    
  419c5f:	jmp    DWORD PTR [edx]
  419c61:	push   es
  419c62:	jle    0x419c74
  419c64:	pushf  
  419c65:	jmp    0x4581:0xafe2fff6
  419c6c:	or     DWORD PTR [edi+eax*2-0x1e98b408],0x1f
  419c74:	hlt    
  419c75:	clc    
  419c76:	outs   dx,BYTE PTR ds:[esi]
  419c77:	test   DWORD PTR [esi-0x6c4e52e],esi
  419c7d:	(bad)  
  419c7e:	js     0x419c93
  419c80:	push   esp
  419c81:	jmp    0x40b2:0x9459760a
  419c88:	(bad)  
  419c89:	add    BYTE PTR [edi+0x3b],cl
  419c8c:	addr16 mov bh,0x85
  419c8f:	jo     0x419c11
  419c91:	inc    edi
  419c92:	cmc    
  419c93:	cmp    ebp,edx
  419c95:	inc    esi
  419c96:	add    eax,0xf55cf382
  419c9b:	jmp    DWORD PTR [ecx+eax*4-0x7e59bfda]
  419ca2:	inc    DWORD PTR es:[eax]
  419ca5:	mov    dl,0xa2
  419ca7:	adc    edi,0x75f546b5
  419cad:	sti    
  419cae:	cmp    eax,ecx
  419cb0:	call   DWORD PTR [edx-0x52]
  419cb3:	pop    esp
  419cb4:	push   DWORD PTR [edx-0x248a0a4a]
  419cba:	inc    edi
  419cbb:	ja     0x419cc5
  419cbd:	(bad)  
  419cbe:	(bad)  
  419cc0:	jmp    FWORD PTR [eax]
  419cc2:	ret    0xfc9
  419cc5:	(bad)  
  419cc6:	fld    QWORD PTR [esi]
  419cc8:	add    bh,bl
  419cca:	fwait
  419ccb:	dec    edi
  419ccc:	hlt    
  419ccd:	xchg   BYTE PTR [ecx+eiz*4+0x15fb35fb],dl
  419cd4:	cli    
  419cd5:	stos   DWORD PTR es:[edi],eax
  419cd6:	(bad)  
  419cd7:	or     ecx,DWORD PTR [ecx-0x387642c8]
  419cdd:	xchg   ecx,eax
  419cde:	sub    eax,0x2f99e31c
  419ce3:	rcr    BYTE PTR [ebp+0x22],0xb8
  419ce7:	mov    dh,ah
  419ce9:	mov    ds:0xe3390c1f,eax
  419cee:	mov    ds:0x75b85fb,eax
  419cf3:	or     al,0xfd
  419cf5:	mov    ch,0x6b
  419cf7:	mov    DWORD PTR [esi-0x38402040],0xfd15776f
  419d01:	pop    ecx
  419d02:	and    edx,ecx
  419d04:	test   DWORD PTR [edi+0xce2ee],0xfd2a67fb
  419d0e:	inc    ecx
  419d0f:	xchg   ecx,eax
  419d10:	lods   al,BYTE PTR ds:[esi]
  419d11:	imul   ecx,DWORD PTR [ecx+0x31e63b28],0x45
  419d18:	cld    
  419d19:	mov    ch,0x85
  419d1b:	xor    BYTE PTR [edi],ch
  419d1d:	xor    DWORD PTR [ecx+ebp*1],esi
  419d20:	cs add eax,0x892958c4
  419d26:	ret    
  419d27:	lahf   
  419d28:	inc    esi
  419d29:	call   0x84bceb3
  419d2e:	inc    ebp
  419d2f:	das    
  419d30:	ds or  eax,0xfd133002
  419d36:	icebp  
  419d37:	test   BYTE PTR [edx-0x158916ed],dh
  419d3d:	imul   eax,DWORD PTR [esi+0xd1b82f4],0x6e730cd5
  419d47:	inc    edx
  419d48:	js     0x419d83
  419d4a:	xor    BYTE PTR [ebp+0x37c2f41d],bh
  419d50:	in     eax,dx
  419d51:	add    al,0x35
  419d53:	dec    edx
  419d54:	mov    DWORD PTR [edx],esi
  419d56:	fnstcw WORD PTR [ebp+0x36c67f8b]
  419d5c:	dec    esp
  419d5d:	sbb    edx,ecx
  419d5f:	inc    ecx
  419d60:	loope  0x419d65
  419d62:	add    DWORD PTR [eax],esp
  419d64:	gs leave 
  419d66:	leave  
  419d67:	aas    
  419d68:	mov    cl,0xc8
  419d6a:	sub    ebp,DWORD PTR [esi]
  419d6c:	rcr    bl,1
  419d6e:	add    BYTE PTR [edx+0x4e78dff4],dl
  419d74:	jno    0x419da5
  419d76:	adc    DWORD PTR [ecx+0x45],0xc964309f
  419d7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d7e:	mov    edx,db5
  419d81:	fistp  QWORD PTR [ecx-0x7e]
  419d84:	dec    edx
  419d85:	ins    DWORD PTR es:[edi],dx
  419d86:	xor    al,0xda
  419d88:	push   0xffffffa0
  419d8a:	add    al,0xc5
  419d8c:	push   esi
  419d8d:	js     0x419d4e
  419d8f:	xchg   ebp,eax
  419d90:	jns    0x419d38
  419d92:	or     edi,DWORD PTR [edx-0x115f869]
  419d98:	add    ecx,DWORD PTR [ebp-0x2fc9b982]
  419d9e:	enter  0x4abc,0x73
  419da2:	cmc    
  419da3:	push   esi
  419da4:	mov    esp,DWORD PTR [ecx+0x281ec07a]
  419daa:	inc    ebx
  419dab:	jnp    0x419d7a
  419dad:	cmp    ebx,DWORD PTR [esi]
  419daf:	add    edi,DWORD PTR [ebp+0x4cfda717]
  419db5:	pop    edi
  419db6:	call   0x790d5a9f
  419dbb:	inc    ebp
  419dbc:	and    WORD PTR [ebx+0x45],di
  419dc0:	data16 or dh,BYTE PTR [esi-0x69809ef8]
  419dc7:	out    dx,eax
  419dc8:	mov    esp,0xc9de1cf3
  419dcd:	mov    esi,0x5c55109e
  419dd2:	xchg   esi,eax
  419dd3:	add    BYTE PTR [eax],cl
  419dd5:	dec    ebp
  419dd6:	repz adc al,0xae
  419dd9:	mov    ebp,0x98df17c
  419dde:	sar    DWORD PTR [esi-0x76],1
  419de1:	ror    ecx,0xe6
  419de4:	sbb    BYTE PTR [ecx],cl
  419de6:	pop    es
  419de7:	jmp    0xc470a971
  419dec:	xor    DWORD PTR [ebx],0xa6a650de
  419df2:	repnz push esi
  419df4:	inc    BYTE PTR [esi+esi*2]
  419df7:	lds    ecx,FWORD PTR fs:[ebp-0x72]
  419dfb:	and    DWORD PTR [ecx+0x2902f2bd],ecx
  419e01:	inc    esp
  419e02:	add    ebp,DWORD PTR [edi-0x6e]
  419e05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e06:	repnz cs ins BYTE PTR es:[edi],dx
  419e09:	mov    al,0xec
  419e0b:	es or  cl,0x4b
  419e0f:	popf   
  419e10:	rol    BYTE PTR [edx-0x593d92fe],0xf2
  419e17:	push   cs
  419e18:	sbb    DWORD PTR ds:[edx],eax
  419e1b:	imul   BYTE PTR [ebx-0x7a01120c]
  419e21:	ret    
  419e22:	pop    ebx
  419e23:	xchg   ebp,eax
  419e24:	dec    esi
  419e25:	and    al,0x10
  419e28:	jo     0x419de7
  419e2a:	bnd jb 0x419dec
  419e2d:	dec    dx
  419e2f:	jo     0x419e88
  419e31:	push   esi
  419e32:	sub    DWORD PTR [esi+ebp*4],0xfedf12
  419e39:	add    BYTE PTR [ecx],al
  419e3b:	repnz add BYTE PTR [esi+0x720f1e09],al
  419e42:	shl    esi,cl
  419e44:	call   DWORD PTR [eax]
  419e46:	jl     0x419e9c
  419e48:	ins    BYTE PTR es:[edi],dx
  419e49:	mov    al,0xc4
  419e4b:	xchg   ecx,eax
  419e4c:	in     eax,0x20
  419e4e:	inc    eax
  419e4f:	add    eax,0x44ccacb6
  419e54:	xor    BYTE PTR [eax+0x5c0806f9],ah
  419e5a:	jge    0x419ea3
  419e5c:	hlt    
  419e5d:	mov    al,0xca
  419e5f:	jl     0x419e45
  419e61:	and    BYTE PTR [edi],bh
  419e63:	cmc    
  419e64:	inc    ebp
  419e65:	mov    ebx,0x85247740
  419e6a:	inc    esi
  419e6b:	cmc    
  419e6c:	jne    0x419df1
  419e6e:	retf   
  419e6f:	(bad)  
  419e71:	pop    edx
  419e72:	push   edi
  419e73:	or     ebx,0x10774039
  419e79:	sar    BYTE PTR [ecx],0x6
  419e7c:	jmp    FWORD PTR [edx]
  419e7e:	inc    edi
  419e7f:	loop   0x419e2d
  419e81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e82:	aas    
  419e83:	cmc    
  419e84:	test   DWORD PTR [edi+0x4e9b83a],ebp
  419e8a:	inc    esp
  419e8b:	or     al,BYTE PTR [eax]
  419e8d:	aam    0x9
  419e8f:	cs inc eax
  419e91:	mov    dh,0x9
  419e93:	cs push eax
  419e95:	test   BYTE PTR [esi-0x7f],ch
  419e98:	inc    ebp
  419e99:	xchg   edi,eax
  419e9a:	jge    0x419ee3
  419e9c:	adc    al,0x0
  419e9e:	xor    dl,dl
  419ea0:	cmp    al,0xe4
  419ea2:	and    BYTE PTR [eax+0x31],al
  419ea5:	pop    esi
  419ea6:	add    edx,DWORD PTR [eax-0x77]
  419ea9:	mov    bh,BYTE PTR ds:[edi]
  419eac:	cmc    
  419ead:	psubsw mm0,QWORD PTR [ebx+0x49]
  419eb1:	cmp    DWORD PTR [edx-0x797afa46],ebp
  419eb7:	dec    ecx
  419eb8:	loop   0x419eb6
  419eba:	icebp  
  419ebb:	mov    eax,DWORD PTR [ecx+0x14]
  419ebe:	jmp    0x86abc140
  419ec3:	cld    
  419ec4:	jno    0x419ee2
  419ec6:	or     eax,0x6e7307dc
  419ecb:	and    ah,al
  419ecd:	push   ebp
  419ece:	leave  
  419ecf:	pop    ebp
  419ed0:	push   ds
  419ed1:	std    
  419ed2:	cmp    ebp,DWORD PTR [ebp-0x3e718cf9]
  419ed8:	push   eax
  419ed9:	fdiv   DWORD PTR [ecx+0x32bf81cb]
  419edf:	add    ah,dh
  419ee1:	push   edx
  419ee2:	test   BYTE PTR [ecx-0x72bc76fa],ch
  419ee8:	inc    esi
  419ee9:	xchg   DWORD PTR [ebx-0x7b],ecx
  419eec:	push   esi
  419eed:	jmp    0xf883cf4b
  419ef2:	mov    edi,0xb0d1ade
  419ef7:	or     al,0xec
  419ef9:	cld    
  419efa:	jno    0x419f51
  419efc:	push   0xdf2c796c
  419f01:	jecxz  0x419f03
  419f03:	popa   
  419f04:	jns    0x419f1e
  419f06:	mov    dh,0x85
  419f08:	and    al,0x59
  419f0a:	xor    BYTE PTR [ecx-0x3af7f4cf],al
  419f10:	mov    ds:0x1f91f441,al
  419f15:	int3   
  419f16:	loopne 0x419f51
  419f18:	push   ecx
  419f19:	or     BYTE PTR [ebx-0x66],al
  419f1c:	dec    eax
  419f1d:	jb     0x419f43
  419f1f:	pushf  
  419f20:	stos   DWORD PTR es:[edi],eax
  419f21:	pop    es
  419f22:	jae    0x419ea6
  419f24:	xor    al,0xd0
  419f26:	cld    
  419f27:	xchg   ebx,eax
  419f28:	xchg   ebx,eax
  419f29:	or     eax,0xffffffb8
  419f2c:	test   al,0x7a
  419f2e:	adc    BYTE PTR [ecx],cl
  419f30:	inc    ebx
  419f31:	push   esi
  419f32:	adc    BYTE PTR [ebx],al
  419f34:	xor    cl,bh
  419f36:	jmp    0x419f28
  419f38:	xchg   ecx,eax
  419f39:	fild   DWORD PTR [ecx]
  419f3b:	add    eax,0xe0b65c83
  419f40:	mov    edx,0xcd8603e1
  419f45:	sub    eax,0x25cb4628
  419f4a:	sub    BYTE PTR [esi],dh
  419f4c:	lods   eax,DWORD PTR ds:[esi]
  419f4d:	or     BYTE PTR [ebp+0x46e9ba44],cl
  419f53:	call   0x9bb9:0xa6856649
  419f5a:	cmp    eax,0x84d42650
  419f5f:	(bad)  
  419f60:	sahf   
  419f61:	mov    eax,DWORD PTR [ecx]
  419f63:	xchg   ebx,eax
  419f64:	lock fild WORD PTR [eax+eax*1+0x51]
  419f69:	push   DWORD PTR [ecx+edx*1+0xa]
  419f6d:	sub    BYTE PTR [eax-0x5a4674ff],al
  419f73:	pop    ss
  419f74:	sub    DWORD PTR [edi],0xd
  419f77:	outs   dx,BYTE PTR ds:[esi]
  419f78:	xchg   BYTE PTR [ecx-0x6f00e02b],bh
  419f7e:	inc    ebx
  419f7f:	ja     0x419f0f
  419f81:	int    0x37
  419f83:	pop    edx
  419f84:	arpl   WORD PTR [edi],bp
  419f86:	rol    DWORD PTR [eax],1
  419f88:	aad    0x46
  419f8a:	cmp    al,0x77
  419f8c:	jle    0x419f38
  419f8e:	jg     0x419f69
  419f90:	dec    edx
  419f91:	mov    ecx,0xfbb5c465
  419f96:	sbb    DWORD PTR [esi+0x6de0b938],esp
  419f9c:	xor    al,0xab
  419f9e:	jbe    0x419fa3
  419fa0:	xchg   BYTE PTR [edx+0x78],al
  419fa3:	inc    edi
  419fa4:	and    cl,bl
  419fa6:	lods   eax,DWORD PTR ds:[esi]
  419fa7:	pop    ss
  419fa8:	ud0    ecx,DWORD PTR [ecx]
  419fab:	int    0xc5
  419fad:	ror    DWORD PTR [ebp+eax*8-0x4b],0xa1
  419fb2:	imul   ebp,eax,0x247f4285
  419fb8:	cli    
  419fb9:	outs   dx,DWORD PTR ds:[esi]
  419fba:	dec    ebp
  419fbb:	std    
  419fbc:	xchg   esi,eax
  419fbd:	int    0x14
  419fbf:	retf   0xb786
  419fc2:	jle    0x419ffb
  419fc4:	push   esi
  419fc5:	jnp    0x419f98
  419fc7:	out    dx,al
  419fc8:	add    ah,BYTE PTR [edx-0x12]
  419fcb:	mov    dh,0x0
  419fcd:	xchg   bl,al
  419fcf:	je     0x419f86
  419fd1:	jns    0x41a008
  419fd3:	inc    edi
  419fd4:	jb     0x41a025
  419fd6:	pop    edx
  419fd7:	lea    ebp,[ecx-0x169fb0cf]
  419fdd:	push   ebp
  419fde:	int    0x5b
  419fe0:	in     eax,dx
  419fe1:	cli    
  419fe2:	and    ecx,0xa423250
  419fe8:	lds    eax,FWORD PTR fs:[ebp-0x73]
  419fec:	jns    0x419f99
  419fee:	mov    ch,0xf2
  419ff0:	and    BYTE PTR [eax-0x35],0x4b
  419ff4:	add    eax,0x402e8ab3
  419ff9:	(bad)  
  419ffa:	push   esi
  419ffb:	and    dl,0xb3
  419ffe:	or     BYTE PTR [esi],ah
  41a000:	aam    0x90
  41a002:	shl    ecx,0xe8
  41a005:	jbe    0x419fc5
  41a007:	fmul   QWORD PTR [ebx-0x7a]
  41a00a:	mov    ch,0x7f
  41a00c:	stos   BYTE PTR es:[edi],al
  41a00d:	test   BYTE PTR [esp+ecx*2-0x4],bh
  41a011:	jbe    0x419fd1
  41a013:	ror    BYTE PTR [ebx],0x86
  41a016:	mov    ch,0x7e
  41a018:	lods   al,BYTE PTR ds:[esi]
  41a019:	xor    DWORD PTR [edi-0x44],eax
  41a01c:	jmp    0xb102:0xaaeff90a
  41a023:	add    al,BYTE PTR [eax]
  41a025:	sbb    bl,cl
  41a027:	jns    0x41a028
  41a029:	sbb    BYTE PTR [eax+0x6aa24f5],bh
  41a02f:	jg     0x41a072
  41a031:	add    BYTE PTR [edi],bl
  41a033:	mov    edi,0xbff80afa
  41a038:	fld    QWORD PTR [eax]
  41a03a:	out    dx,eax
  41a03b:	inc    ebx
  41a03c:	add    eax,0xf5a4ff86
  41a041:	call   FWORD PTR [esi+esi*4-0x2]
  41a045:	jne    0x41a006
  41a047:	(bad)  
  41a048:	cli    
  41a049:	or     eax,0x852f5b93
  41a04e:	fild   WORD PTR [ebx+0xa]
  41a051:	punpckldq mm1,mm3
  41a054:	call   0xcab58958
  41a059:	cmp    DWORD PTR [ecx+0x1e],esp
  41a05c:	add    eax,0xf5a41d85
  41a061:	inc    DWORD PTR [esi]
  41a063:	repz repnz jmp FWORD PTR [edi-0x5793ab84]
  41a06b:	les    ebp,FWORD PTR [ecx-0x75bc6100]
  41a071:	cmp    esp,DWORD PTR [ebp+0x6f9a8748]
  41a077:	inc    ebx
  41a078:	or     al,BYTE PTR [ebx-0x2a]
  41a07b:	(bad)  
  41a07d:	call   FWORD PTR [edi-0x3c]
  41a080:	cli    
  41a081:	or     DWORD PTR [eax-0x41],ecx
  41a084:	push   eax
  41a085:	loop   0x41a04f
  41a087:	mov    bh,0x89
  41a089:	clc    
  41a08a:	pop    DWORD PTR [edi-0x72]
  41a08d:	push   ecx
  41a08e:	mov    ebp,0xff3df5b7
  41a093:	cmp    eax,0x9400000a
  41a098:	cmp    DWORD PTR [ecx+0x7c2f36f8],ecx
  41a09e:	add    DWORD PTR [esi-0x488bd1af],0xffffff86
  41a0a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0a6:	jmp    DWORD PTR [ecx]
  41a0a8:	test   eax,0x4b538303
  41a0ad:	repz cld 
  41a0af:	sbb    eax,0x7cf787c5
  41a0b4:	cmp    edx,DWORD PTR [ecx+eax*4-0x2]
  41a0b8:	lods   eax,DWORD PTR ds:[esi]
  41a0b9:	add    eax,DWORD PTR [esi-0x30c745d]
  41a0bf:	mov    bl,0x26
  41a0c1:	pop    es
  41a0c2:	add    BYTE PTR [esi-0x217eba7c],al
  41a0c8:	mov    dl,0x3
  41a0ca:	xor    BYTE PTR [ebx-0x75],0xf3
  41a0ce:	cld    
  41a0cf:	add    eax,0x477619f1
  41a0d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0d5:	cmp    edi,0xcddfa8c1
  41a0db:	or     eax,0x8af63267
  41a0e0:	mov    eax,ds:0x23c3e90a
  41a0e5:	inc    ebp
  41a0e6:	xor    al,0x98
  41a0e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0e9:	inc    BYTE PTR [ebx]
  41a0eb:	lods   eax,DWORD PTR ds:[esi]
  41a0ec:	mov    bh,BYTE PTR [edi+0x4d]
  41a0ef:	pop    edx
  41a0f0:	aaa    
  41a0f1:	or     ecx,DWORD PTR [eax]
  41a0f3:	xchg   esp,eax
  41a0f5:	mov    bh,0x88
  41a0f7:	rcl    BYTE PTR [edi-0x4],1
  41a0fa:	add    eax,DWORD PTR [eax]
  41a0fc:	mov    gs,WORD PTR [edx-0x2202f021]
  41a102:	cmp    dh,dh
  41a104:	and    BYTE PTR [ebx+0x3127e916],0x45
  41a10b:	xor    al,0x50
  41a10d:	mov    al,ds:0x27810ffe
  41a112:	(bad)  
  41a113:	fimul  WORD PTR [ecx+0x65]
  41a116:	hlt    
  41a117:	inc    edx
  41a118:	call   0xe128:0x62782c42
  41a11f:	(bad)  
  41a120:	mov    ah,0x56
  41a122:	push   0xf9302ad6
  41a127:	mov    cl,BYTE PTR [esi+0xd]
  41a12a:	or     al,0x78
  41a12c:	jbe    0x41a0e3
  41a12e:	jge    0x41a13f
  41a130:	adc    esi,DWORD PTR [eax]
  41a132:	jmp    0xe3ce2622
  41a137:	std    
  41a138:	add    al,0x83
  41a13a:	sti    
  41a13b:	xchg   DWORD PTR [esp+esi*4-0x2d],edi
  41a13f:	std    
  41a140:	fiadd  WORD PTR [ecx+0x47]
  41a143:	stc    
  41a144:	push   ecx
  41a145:	adc    eax,0x80c95923
  41a14a:	add    BYTE PTR [esi+esi*8],al
  41a14d:	xchg   esp,eax
  41a14e:	dec    ebp
  41a14f:	inc    ebx
  41a150:	xchg   dh,dh
  41a152:	inc    edi
  41a153:	inc    ebx
  41a154:	xchg   BYTE PTR [ebx-0x7b79bcb9],al
  41a15a:	pop    ss
  41a15b:	inc    ebx
  41a15c:	xchg   BYTE PTR [edx+0x6],al
  41a15f:	inc    ebx
  41a160:	add    BYTE PTR [esi-0x79bcf24b],al
  41a166:	dec    esi
  41a167:	repz inc edx
  41a169:	xchg   BYTE PTR [ebp+0x1b],ah
  41a16c:	inc    ebx
  41a16d:	xchg   dh,bh
  41a16f:	add    al,BYTE PTR [ebx-0x7a]
  41a172:	or     al,0xb
  41a174:	inc    ebx
  41a175:	xchg   BYTE PTR ds:0x358642f3,ah
  41a17b:	fiadd  WORD PTR [edx-0x7a]
  41a17e:	mov    eax,ebp
  41a180:	inc    edx
  41a181:	xchg   BYTE PTR [edi-0x4c79bd36],bh
  41a187:	mov    dl,0x42
  41a189:	xchg   BYTE PTR [eax],ch
  41a18b:	fadd   QWORD PTR [edx-0x7a]
  41a18e:	mov    eax,ds:0x6a8642c3
  41a193:	or     bh,BYTE PTR [ecx-0x426abd3c]
  41a199:	les    eax,FWORD PTR [edx-0x7d]
  41a19c:	xchg   ebp,eax
  41a19d:	les    eax,FWORD PTR [edx+0x21]
  41a1a0:	xchg   esp,eax
  41a1a2:	inc    edx
  41a1a3:	xor    eax,0xd742c482
  41a1a8:	add    ah,0x42
  41a1ab:	xchg   ecx,eax
  41a1ac:	jnp    0x41a172
  41a1ae:	inc    edx
  41a1af:	mov    al,0x7b
  41a1b1:	les    eax,FWORD PTR [edx+0x2d]
  41a1b4:	jl     0x41a17a
  41a1b6:	inc    edx
  41a1b7:	xor    eax,0xf142447a
  41a1bc:	pop    ebx
  41a1bd:	inc    ebp
  41a1be:	inc    edx
  41a1bf:	aad    0x5b
  41a1c1:	inc    ebp
  41a1c2:	inc    edx
  41a1c3:	sbb    ebx,DWORD PTR [edx+0x0]
  41a1c6:	inc    ebp
  41a1c7:	inc    edx
  41a1c8:	sub    eax,0x3a42455a
  41a1cd:	cmp    al,BYTE PTR [ebp+0x42]
  41a1d0:	clc    
  41a1d1:	cmp    eax,DWORD PTR [ebp+0x42]
  41a1d4:	fidivr WORD PTR [eax*2+0x45347c42]
  41a1db:	inc    edx
  41a1dc:	push   esp
  41a1dd:	sbb    al,0x45
  41a1df:	inc    edx
  41a1e0:	sahf   
  41a1e1:	adc    al,0x45
  41a1e3:	inc    edx
  41a1e4:	test   al,0x1c
  41a1e6:	inc    ebp
  41a1e7:	inc    edx
  41a1e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1e9:	adc    al,0x45
  41a1eb:	inc    edx
  41a1ec:	mov    al,0xfc
  41a1ee:	inc    esp
  41a1ef:	inc    edx
  41a1f0:	dec    eax
  41a1f1:	add    DWORD PTR [ebp+0x42],eax
  41a1f4:	aad    0xfe
  41a1f6:	inc    esp
  41a1f7:	inc    edx
  41a1f8:	mov    dh,0xf6
  41a1fa:	les    eax,FWORD PTR [edx+0xd]
  41a1fd:	loope  0x41a1c3
  41a1ff:	inc    edx
  41a200:	push   ds
  41a201:	loope  0x41a1c7
  41a203:	inc    edx
  41a204:	push   ss
  41a205:	rol    esp,1
  41a207:	inc    edx
  41a208:	and    cl,dl
  41a20a:	les    eax,FWORD PTR [edx-0x46]
  41a20d:	add    BYTE PTR [esi],bl
  41a20f:	add    DWORD PTR [edx],ecx
  41a211:	ins    DWORD PTR es:[edi],dx
  41a212:	sidtd  [edx]
  41a215:	daa    
  41a216:	fild   DWORD PTR [eax]
  41a218:	or     bh,BYTE PTR [ebp+0x48]
  41a21b:	add    DWORD PTR [edx],ecx
  41a21d:	pop    ss
  41a21e:	push   ss
  41a21f:	add    DWORD PTR [edx],ecx
  41a221:	rcl    DWORD PTR [esi],1
  41a223:	add    DWORD PTR [edx],ecx
  41a225:	cmp    cl,bh
  41a227:	add    BYTE PTR [edx],cl
  41a229:	mov    DWORD PTR [eax],0x5b0a0109
  41a22f:	or     BYTE PTR [ecx],al
  41a231:	or     ch,BYTE PTR [edi+esi*8]
  41a234:	add    BYTE PTR [edx],cl
  41a236:	adc    DWORD PTR [eax+0x70660a00],0x4e810a00
  41a240:	std    
  41a241:	or     DWORD PTR [eax],esi
  41a243:	push   esi
  41a244:	std    
  41a245:	or     DWORD PTR [edx+0x46],esi
  41a248:	std    
  41a249:	or     DWORD PTR [edx+0x6f],edi
  41a24c:	std    
  41a24d:	or     DWORD PTR [esi+ebp*2],ebp
  41a250:	std    
  41a251:	or     DWORD PTR [ecx+0x5e],ebp
  41a254:	std    
  41a255:	or     DWORD PTR [ebp-0xaf602a2],esi
  41a25b:	cs std 
  41a25d:	or     DWORD PTR [esi],edi
  41a25f:	sub    eax,0x1d7b09fd
  41a264:	std    
  41a265:	or     edi,ebp
  41a267:	pop    ds
  41a268:	std    
  41a269:	or     esp,eax
  41a26b:	mov    ds:0x8a7a09fe,eax
  41a270:	std    
  41a271:	or     DWORD PTR [edi+0x2009fd76],esi
  41a277:	and    al,0xfd
  41a279:	or     DWORD PTR [eax],eax
  41a27b:	outs   dx,BYTE PTR ds:[esi]
  41a27c:	cmp    eax,0x426b0409
  41a281:	or     al,0x7
  41a283:	ja     0x41a2cb
  41a285:	add    BYTE PTR [ebx],cl
  41a287:	xchg   BYTE PTR [ebp-0x6930b8f6],bl
  41a28d:	add    BYTE PTR ds:0x459a7600,cl
  41a293:	adc    dh,BYTE PTR [ebp-0x73]
  41a296:	sbb    DWORD PTR [esi],edx
  41a298:	jno    0x41a22b
  41a29a:	adc    eax,0x148f9c1a
  41a29f:	sbb    bl,BYTE PTR [eax+eax*2-0x4c6ce3ed]
  41a2a6:	mov    edi,cr4
  41a2a9:	mov    ch,BYTE PTR ds:0x2c8a671f
  41a2af:	and    ah,BYTE PTR [ebp-0x7b]
  41a2b2:	sub    DWORD PTR [esi],esp
  41a2b4:	imul   edx,DWORD PTR [ecx-0x7ea1d7e2],0x7faf271e
  41a2be:	and    ebp,DWORD PTR [ebx+ebp*4]
  41a2c1:	dec    ebx
  41a2c2:	inc    ebp
  41a2c3:	inc    edi
  41a2c4:	aas    
  41a2c5:	jb     0x41a30c
  41a2c7:	inc    edi
  41a2c8:	aas    
  41a2c9:	bound  ebx,QWORD PTR [edi]
  41a2cb:	sub    eax,0x323d594f
  41a2d0:	xchg   ebp,eax
  41a2d1:	mov    ch,0x22
  41a2d3:	xor    al,0x9b
  41a2d5:	stos   DWORD PTR es:[edi],eax
  41a2d6:	cmp    DWORD PTR [esi],esi
  41a2d8:	xchg   ecx,eax
  41a2d9:	mov    cl,0x35
  41a2db:	cmp    bh,BYTE PTR [ebp-0x4e]
  41a2de:	xor    al,0x39
  41a2e0:	dec    edi
  41a2e1:	jb     0x41a328
  41a2e3:	inc    edi
  41a2e4:	aas    
  41a2e5:	xchg   ebp,eax
  41a2e6:	xor    DWORD PTR [esi],edi
  41a2e8:	imul   ebp,DWORD PTR [ecx+0x4d],0x495d4542
  41a2ef:	inc    esi
  41a2f0:	xchg   BYTE PTR [esi+eax*2-0x70],ah
  41a2f4:	add    BYTE PTR [edx],al
  41a2f6:	aas    
  41a2f7:	dec    ebp
  41a2f8:	add    BYTE PTR [esi-0x75ffb252],bh
  41a2fe:	mov    ah,0x4d
  41a300:	add    dh,al
  41a302:	inc    edx
  41a303:	call   0xe86d294c
  41a308:	inc    esp
  41a309:	xchg   al,ah
  41a30b:	xlat   BYTE PTR ds:[ebx]
  41a30c:	inc    esp
  41a30d:	xchg   dl,dl
  41a30f:	fadd   DWORD PTR [esi+eax*4+0x48]
  41a313:	retf   0x8644
  41a316:	dec    eax
  41a317:	retf   0x8644
  41a31a:	ret    
  41a31b:	imul   eax,DWORD PTR [esi+eax*4-0x3d],0x4c864469
  41a323:	stos   BYTE PTR es:[edi],al
  41a324:	inc    esp
  41a325:	xchg   BYTE PTR [esi],ch
  41a327:	stos   BYTE PTR es:[edi],al
  41a328:	inc    esp
  41a329:	xchg   BYTE PTR [esi+0x46864499],al
  41a32f:	xchg   edi,eax
  41a330:	inc    esp
  41a331:	xchg   dl,bh
  41a333:	xchg   BYTE PTR [esi+eax*4+0x40],al
  41a337:	jae    0x41a37d
  41a339:	xchg   BYTE PTR [edx],al
  41a33b:	jnp    0x41a381
  41a33d:	xchg   BYTE PTR [ebx+eiz*2],dh
  41a340:	inc    esp
  41a341:	xchg   dh,ah
  41a343:	push   0x43
  41a345:	xchg   BYTE PTR [eax+0x3a864352],bl
  41a34b:	pop    esp
  41a34c:	inc    ebx
  41a34d:	xchg   BYTE PTR [ecx+0x45],al
  41a350:	inc    ebx
  41a351:	xchg   BYTE PTR [edi],ah
  41a353:	dec    ebp
  41a354:	inc    ebx
  41a355:	xchg   BYTE PTR [edi],ah
  41a357:	xor    eax,0xc3860043
  41a35c:	imul   eax,DWORD PTR [ebx-0x7a],0x864369c3
  41a363:	(bad)  
  41a364:	sub    al,0x43
  41a366:	xchg   BYTE PTR [esi+edx*1],cl
  41a369:	inc    ebx
  41a36a:	xchg   cl,cl
  41a36c:	sbb    eax,0x5808643
  41a371:	inc    ebx
  41a372:	xchg   BYTE PTR [edi+0xb],al
  41a375:	inc    ebx
  41a376:	xchg   ch,ch
  41a378:	jbe    0x41a3bd
  41a37a:	xchg   BYTE PTR [esi+0x42c56309],al
  41a380:	lds    esp,FWORD PTR [ebx-0x3b]
  41a383:	inc    edx
  41a384:	fdiv   QWORD PTR [ebx-0x3b]
  41a387:	inc    edx
  41a388:	shl    DWORD PTR [ebx-0x3b],cl
  41a38b:	inc    edx
  41a38c:	loop   0x41a3f1
  41a38e:	lds    eax,FWORD PTR [edx-0x3]
  41a391:	arpl   bp,ax
  41a393:	inc    edx
  41a394:	std    
  41a395:	jae    0x41a35c
  41a397:	inc    edx
  41a398:	std    
  41a399:	jae    0x41a360
  41a39b:	inc    edx
  41a39c:	mov    DWORD PTR [eax-0x3b],esp
  41a39f:	inc    edx
  41a3a0:	mov    DWORD PTR [eax-0x3b],esp
  41a3a3:	inc    edx
  41a3a4:	sbb    eax,0x6942c573
  41a3a9:	jae    0x41a370
  41a3ab:	inc    edx
  41a3ac:	jo     0x41a411
  41a3ae:	lds    eax,FWORD PTR [edx-0x67]
  41a3b1:	arpl   bp,ax
  41a3b3:	inc    edx
  41a3b4:	lods   al,BYTE PTR ds:[esi]
  41a3b5:	jae    0x41a37c
  41a3b7:	inc    edx
  41a3b8:	pop    ebp
  41a3b9:	jb     0x41a3d9
  41a3bb:	xor    dh,ah
  41a3bd:	mov    ebp,0xa428400
  41a3c2:	push   0x41
  41a3c4:	mov    dh,0xf2
  41a3c6:	push   0x48
  41a3c8:	mov    dl,0xf2
  41a3ca:	push   0x40
  41a3cc:	jle    0x41a3c0
  41a3ce:	cmp    dl,BYTE PTR [ebx]
  41a3d0:	or     al,0x2
  41a3d2:	aaa    
  41a3d3:	xchg   ebx,eax
  41a3d4:	xchg   esp,eax
  41a3d5:	pop    edx
  41a3d6:	jb     0x41a3a5
  41a3d8:	mov    ebx,0x13fcbe46
  41a3dd:	jmp    0xde14:0x807a5060
  41a3e4:	(bad)  
  41a3e5:	push   esp
  41a3e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3e7:	cld    
  41a3e8:	adc    esp,edx
  41a3ea:	jo     0x41a454
  41a3ec:	xchg   edx,eax
  41a3ed:	jle    0x41a38d
  41a3ef:	bound  ebp,QWORD PTR [edx+eax*1+0xa477965]
  41a3f6:	add    BYTE PTR [edi+0x230fd06d],bl
  41a3fc:	pop    ecx
  41a3fd:	or     eax,0x576d6f00
  41a402:	adc    BYTE PTR [edx+0x3d],dh
  41a405:	cmp    edx,DWORD PTR [ebp+0x73]
  41a408:	cmp    eax,DWORD PTR [ebp+0xa44600e]
  41a40e:	cmp    DWORD PTR [edx],esp
  41a410:	inc    eax
  41a411:	outs   dx,DWORD PTR ds:[esi]
  41a412:	pop    es
  41a413:	inc    ebp
  41a414:	mov    ch,0xeb
  41a416:	add    al,0x60
  41a418:	inc    esp
  41a419:	or     cl,BYTE PTR [edi]
  41a41b:	rol    BYTE PTR [edx],1
  41a41d:	adc    al,BYTE PTR [ebx]
  41a41f:	jo     0x41a3dd
  41a421:	xchg   DWORD PTR [eax+0x0],edx
  41a424:	push   0xd00ff5aa
  41a429:	add    dl,BYTE PTR [esi]
  41a42b:	mov    DWORD PTR [edx+0x78fff4fb],esp
  41a431:	cmp    bh,BYTE PTR [ebp-0x7842eab9]
  41a437:	dec    esp
  41a438:	mov    BYTE PTR [edx+0x5dfb8f5],ch
  41a43e:	add    eax,0x1f306600
  41a443:	(bad)  
  41a444:	call   0x8fc73000
  41a449:	mov    bh,0xf5
  41a44b:	push   DWORD PTR [edi+ebp*2+0x2a]
  41a44f:	mov    DWORD PTR [edx-0x48ba747a],esp
  41a455:	imul   ecx,eax,0x75
  41a458:	loopne 0x41a44a
  41a45a:	inc    edi
  41a45b:	clc    
  41a45c:	out    0x25,eax
  41a45e:	dec    edx
  41a45f:	add    BYTE PTR [esi],ch
  41a461:	ja     0x41a4aa
  41a463:	push   edx
  41a464:	ins    BYTE PTR es:[edi],dx
  41a465:	push   ss
  41a466:	jle    0x41a48e
  41a468:	cmp    al,cl
  41a46a:	mov    esi,0x42b808fe
  41a46f:	push   0xffffff86
  41a471:	cdq    
  41a472:	add    DWORD PTR [edx-0x3054062],0xe7b33436
  41a47c:	push   0xd000df7
  41a481:	sub    DWORD PTR [ecx+0x60a8f3f5],ecx
  41a487:	cld    
  41a488:	add    BYTE PTR [edi+0x2c],bl
  41a48b:	hlt    
  41a48c:	jmp    FWORD PTR [ecx+0x4c]
  41a48f:	fmul   DWORD PTR [eax-0x38805e38]
  41a495:	inc    edi
  41a496:	add    DWORD PTR [eax],ebx
  41a498:	mov    edi,0xdf879d5f
  41a49d:	xchg   DWORD PTR [ebp*8-0x3d21f102],ebx
  41a4a4:	or     al,0xf1
  41a4a6:	out    0x10,al
  41a4a8:	xchg   ebx,eax
  41a4aa:	add    DWORD PTR [ebx],ecx
  41a4ac:	mov    ch,0xb8
  41a4ae:	popf   
  41a4af:	int    0xe6
  41a4b1:	test   DWORD PTR [ebp*8+0x2a0e0efe],ebx
  41a4b8:	std    
  41a4b9:	adc    DWORD PTR [eax+0xb],ecx
  41a4bc:	mov    ch,0xb8
  41a4be:	lea    ecx,[ebx]
  41a4c0:	lods   eax,DWORD PTR ds:[esi]
  41a4c1:	into   
  41a4c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4c3:	mov    ds:0x51229e45,eax
  41a4c8:	nop
  41a4c9:	test   DWORD PTR [esi],eax
  41a4cb:	add    al,BYTE PTR [ecx]
  41a4cd:	mov    ecx,0x4b86cd9b
  41a4d2:	and    eax,0x22165286
  41a4d7:	push   edx
  41a4d8:	xchg   esp,eax
  41a4d9:	std    
  41a4da:	pop    esi
  41a4db:	push   es
  41a4dc:	mov    edi,0xc737a5de
  41a4e1:	inc    edi
  41a4e2:	cmp    al,0xcd
  41a4e4:	xchg   BYTE PTR [ebx],al
  41a4e6:	jno    0x41a4e3
  41a4e8:	cld    
  41a4e9:	mov    cl,0x41
  41a4eb:	js     0x41a52a
  41a4ed:	add    BYTE PTR [esi-0x7f],bh
  41a4f0:	cwde   
  41a4f1:	or     ah,BYTE PTR [edi-0x7f]
  41a4f4:	imul   eax,DWORD PTR [eax-0x5e],0x93676db8
  41a4fb:	scas   al,BYTE PTR es:[edi]
  41a4fc:	mov    ecx,DWORD PTR [edx-0x145dc5bd]
  41a502:	pushf  
  41a503:	popa   
  41a504:	mov    ds:0x6437048c,al
  41a509:	div    BYTE PTR [edx-0x46]
  41a50c:	mov    ds:0x99b290b,al
  41a511:	and    esp,DWORD PTR [ecx]
  41a513:	mov    esp,0xae5b7365
  41a518:	inc    ebx
  41a519:	mov    al,ah
  41a51b:	stos   BYTE PTR es:[edi],al
  41a51c:	jns    0x41a49e
  41a51e:	mov    cl,0xad
  41a520:	xor    esi,esi
  41a522:	test   BYTE PTR [edx],al
  41a524:	loopne 0x41a529
  41a526:	xchg   BYTE PTR [ebx-0x51cca0a3],bh
  41a52c:	sub    ecx,DWORD PTR [esp+edx*1+0x22f6141b]
  41a533:	mov    esp,0xae1b7775
  41a538:	add    ecx,DWORD PTR [esp+esi*4-0x1daf863e]
  41a53f:	mov    ebx,0x18087f9d
  41a544:	and    eax,0x69ee548c
  41a549:	or     BYTE PTR [ebp-0x53],0xeb
  41a54d:	cmc    
  41a54e:	inc    BYTE PTR [ecx+edi*8]
  41a551:	mov    al,BYTE PTR [eax]
  41a553:	cmp    al,0x3e
  41a555:	mov    al,BYTE PTR [esi+eax*4]
  41a558:	ret    0x6fe1
  41a55b:	jl     0x41a4e0
  41a55d:	fmul   DWORD PTR ds:0x3f7983a7
  41a563:	push   cs
  41a564:	call   0x6282:0x110cea09
  41a56b:	jo     0x41a5a7
  41a56d:	sub    eax,0xa3285e9
  41a572:	adc    eax,DWORD PTR [edi+ecx*1+0x42510f7e]
  41a579:	or     bh,cl
  41a57b:	test   DWORD PTR [esi],esi
  41a57d:	push   edi
  41a57e:	les    eax,FWORD PTR [ebp-0xe16d5be]
  41a584:	pop    es
  41a585:	xor    eax,0xa7285e9
  41a58a:	cmc    
  41a58b:	sub    BYTE PTR [ecx+0xa],0xe9
  41a58f:	lds    eax,FWORD PTR [edx+0x7e]
  41a592:	mov    bl,0x98
  41a594:	inc    edx
  41a595:	or     bh,BYTE PTR [ecx-0x3cd0c97b]
  41a59b:	pop    esp
  41a59c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a59d:	(bad)  
  41a59e:	in     al,dx
  41a59f:	test   DWORD PTR [edx-0x4e],eax
  41a5a2:	xrelease mov BYTE PTR [edx+0xa],al
  41a5a6:	pusha  
  41a5a7:	or     DWORD PTR [ebp-0xd],ebp
  41a5aa:	cmp    ebp,DWORD PTR cs:[eax-0xd]
  41a5ae:	jmp    0xdbb5e838
  41a5b3:	push   cs
  41a5b4:	test   eax,ecx
  41a5b6:	adc    BYTE PTR [eax],al
  41a5b8:	mov    al,ch
  41a5ba:	mov    ah,0xa5
  41a5bc:	sbb    ch,BYTE PTR [esi+0x110171f2]
  41a5c2:	repz (bad) 
  41a5c4:	cli    
  41a5c5:	les    ecx,FWORD PTR [esp+ebx*4+0x2f2adf2]
  41a5cc:	xchg   ecx,eax
  41a5cd:	sbb    BYTE PTR [eax],al
  41a5cf:	inc    ecx
  41a5d0:	fisttp WORD PTR [edi-0x4c1113a1]
  41a5d6:	adc    BYTE PTR [ebp+eax*2-0x21310d51],0x50
  41a5de:	add    DWORD PTR [eax],0xfff50152
  41a5e4:	add    BYTE PTR [edx+0x6d2288fe],bl
  41a5ea:	cmc    
  41a5eb:	jmp    eax
  41a5ed:	mov    eax,0xb5e05487
  41a5f2:	cmc    
  41a5f3:	mov    ebp,DWORD PTR [ecx+0x3e]
  41a5f6:	cmp    DWORD PTR [ebp-0x65],0x2607d2c1
  41a5fd:	sub    al,0x13
  41a5ff:	inc    DWORD PTR [eax]
  41a601:	mov    dh,0x81
  41a603:	(bad)  
  41a604:	out    0x19,al
  41a606:	or     DWORD PTR [ecx-0x8],ebx
  41a609:	test   al,0x5
  41a60b:	mov    bh,0xa9
  41a60d:	push   eax
  41a60e:	and    edx,edi
  41a610:	cmp    DWORD PTR ds:0xb9a474b3,ebp
  41a616:	retf   0xa88b
  41a619:	sbb    DWORD PTR [ecx],ecx
  41a61b:	cdq    
  41a61c:	add    BYTE PTR [edi+ebx*4],dl
  41a61f:	icebp  
  41a620:	cmp    edx,DWORD PTR [edi+0x468d1f33]
  41a626:	inc    ecx
  41a627:	popa   
  41a628:	jmp    FWORD PTR [ebx+edi*4]
  41a62b:	(bad)
  41a62e:	inc    ecx
  41a62f:	cmc    
  41a630:	adc    eax,0x49d80f
  41a635:	xchg   esp,eax
  41a636:	xchg   DWORD PTR [ebx-0xa48c463],ecx
  41a63c:	jmp    FWORD PTR [edx-0xaf88876]
  41a642:	test   eax,0x3febe0eb
  41a647:	or     al,bh
  41a649:	sub    ah,BYTE PTR [eax+0x3fdffff3]
  41a64f:	loope  0x41a65c
  41a651:	je     0x41a64c
  41a653:	sbb    DWORD PTR [ecx-0xa9596],ecx
  41a659:	xchg   BYTE PTR [edx+esi*2+0x37a603d7],dl
  41a660:	xchg   edi,eax
  41a661:	pop    esp
  41a662:	cwde   
  41a663:	inc    ebp
  41a664:	cmc    
  41a665:	mov    edi,0xb95fa118
  41a66a:	hlt    
  41a66b:	idiv   bh
  41a66d:	add    al,0x4f
  41a66f:	stos   BYTE PTR es:[edi],al
  41a670:	cld    
  41a671:	jmp    DWORD PTR [esi]
  41a673:	es std 
  41a675:	mov    eax,ds:0x5a8274cc
  41a67a:	aam    0xf6
  41a67c:	cld    
  41a67d:	adc    DWORD PTR [eax+eax*2],0x5dfb0010
  41a684:	push   cs
  41a685:	add    cl,BYTE PTR [edi]
  41a687:	jmp    0x788d:0xc338
  41a68d:	add    edi,edi
  41a68f:	popf   
  41a690:	rol    BYTE PTR [edx-0x76eb72b3],cl
  41a696:	retf   
  41a697:	std    
  41a698:	test   BYTE PTR [eax],ch
  41a69a:	inc    esp
  41a69b:	dec    eax
  41a69c:	fmul   st(6),st
  41a69e:	dec    esi
  41a69f:	xlat   BYTE PTR ds:[ebx]
  41a6a0:	mov    DWORD PTR [ebx],ecx
  41a6a2:	or     eax,0x8a8ade50
  41a6a7:	or     cl,BYTE PTR [ebx-0x514f7d1a]
  41a6ad:	jno    0x41a645
  41a6af:	sbb    ch,dh
  41a6b1:	cld    
  41a6b2:	add    eax,0x4e390252
  41a6b7:	enter  0x88f0,0xfb
  41a6bb:	mov    edi,?
  41a6bd:	cld    
  41a6be:	adc    DWORD PTR [eax],ebx
  41a6c0:	jns    0x41a69a
  41a6c2:	xchg   BYTE PTR [esi],ch
  41a6c4:	sub    dh,dh
  41a6c6:	dec    eax
  41a6c7:	popf   
  41a6c8:	or     al,0x74
  41a6ca:	mov    eax,ds:0x9a45afa4
  41a6cf:	and    BYTE PTR [esi-0x13be1882],dh
  41a6d5:	add    eax,DWORD PTR [esi-0x7e245dbe]
  41a6db:	mov    edi,0xfd0904c0
  41a6e0:	fdivr  QWORD PTR [esp+eax*2+0x7a]
  41a6e4:	xor    al,0x1
  41a6e6:	add    BYTE PTR [edi],cl
  41a6e8:	lds    ebp,FWORD PTR [eax]
  41a6ea:	repz mov edx,0x85b9ebaa
  41a6f0:	cmp    ch,BYTE PTR [edx+0x48]
  41a6f3:	mov    dl,0xb3
  41a6f5:	and    al,BYTE PTR [eax]
  41a6f7:	mov    dh,BYTE PTR [esi]
  41a6f9:	retf   
  41a6fa:	add    dl,bl
  41a6fc:	add    esi,ebx
  41a6fe:	jle    0x41a6c9
  41a700:	or     BYTE PTR [eax-0x745ef705],0x3
  41a707:	xchg   BYTE PTR [edx+0x60],al
  41a70a:	jecxz  0x41a784
  41a70c:	mov    ebx,0xfffed025
  41a711:	js     0x41a715
  41a713:	xor    BYTE PTR [edi-0x559efc08],bh
  41a719:	loopne 0x41a797
  41a71b:	int3   
  41a71c:	mov    dl,0x69
  41a71e:	dec    eax
  41a71f:	inc    edx
  41a720:	mov    esi,0xffeffad
  41a725:	dec    ebp
  41a726:	jl     0x41a6ec
  41a728:	stos   BYTE PTR es:[edi],al
  41a729:	ins    DWORD PTR es:[edi],dx
  41a72a:	into   
  41a72b:	mov    ch,0x4a
  41a72d:	push   0xd4b82248
  41a732:	xchg   BYTE PTR [esi-0x75],ch
  41a735:	pop    DWORD PTR [ecx]
  41a737:	outs   dx,DWORD PTR ds:[esi]
  41a738:	jge    0x41a6f3
  41a73a:	les    esp,FWORD PTR [eax]
  41a73c:	inc    ebp
  41a73d:	mov    ds:0x67aa4986,al
  41a742:	out    dx,al
  41a743:	push   ss
  41a744:	ficomp WORD PTR [edi+0x70]
  41a747:	fiadd  DWORD PTR [edx+0x7d]
  41a74a:	imul   eax,DWORD PTR [eax],0xb209ad0f
  41a750:	dec    esi
  41a751:	into   
  41a752:	jbe    0x41a6e1
  41a754:	add    ch,ch
  41a756:	dec    ecx
  41a757:	out    0xd7,al
  41a759:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a75a:	or     DWORD PTR [ebp-0x60],edx
  41a75d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a75e:	jl     0x41a72d
  41a760:	push   ebx
  41a761:	cld    
  41a762:	popf   
  41a763:	into   
  41a764:	adc    DWORD PTR [edx-0xd],ebp
  41a767:	(bad)  
  41a768:	mov    bh,0xbc
  41a76a:	pushf  
  41a76b:	and    eax,0x62f2a6b7
  41a770:	mov    edi,0x824533a1
  41a775:	inc    edx
  41a776:	jg     0x41a7b4
  41a778:	xchg   esi,eax
  41a779:	(bad)  
  41a77a:	leave  
  41a77b:	adc    al,0x53
  41a77d:	fwait
  41a77e:	push   ds
  41a77f:	bound  ecx,QWORD PTR [ecx-0x32]
  41a782:	push   ds
  41a783:	fs cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a786:	xacquire xchg BYTE PTR [ebx-0x4208556],dh
  41a78d:	xor    BYTE PTR ds:[esi+ecx*8-0x59],ch
  41a792:	repnz outs dx,BYTE PTR ds:[esi]
  41a794:	icebp  
  41a795:	dec    esi
  41a796:	xchg   DWORD PTR [esi+ecx*8-0x7aa10d59],esp
  41a79d:	sbb    DWORD PTR cs:[ebx-0x41],esp
  41a7a1:	test   eax,0xa7b16430
  41a7a6:	repnz inc esi
  41a7a8:	mov    esi,0xa9024b40
  41a7ad:	into   
  41a7ae:	ja     0x41a73d
  41a7b0:	add    BYTE PTR [ebp+0x45fa062c],ch
  41a7b6:	jo     0x41a805
  41a7b8:	sbb    eax,0xa4310596
  41a7bd:	fnsave [esp+edi*1]
  41a7c0:	add    al,BYTE PTR [eax-0x751443c9]
  41a7c6:	mov    esp,0xb3880051
  41a7cb:	cmc    
  41a7cc:	cmpxchg DWORD PTR [edx],edi
  41a7cf:	add    bh,BYTE PTR [ebx]
  41a7d1:	and    dh,BYTE PTR [ecx+0x3e8b8405]
  41a7d7:	or     al,BYTE PTR [eax]
  41a7d9:	lods   eax,DWORD PTR ds:[esi]
  41a7da:	sub    eax,0x11a4fc58
  41a7df:	push   es
  41a7e0:	jb     0x41a7a0
  41a7e2:	mov    esi,DWORD PTR [eax+eax*1-0x49fabb21]
  41a7e9:	lods   eax,DWORD PTR ds:[esi]
  41a7ea:	push   ebp
  41a7eb:	inc    edi
  41a7ec:	hlt    
  41a7ed:	test   al,0xc0
  41a7ef:	mov    eax,0x48449f00
  41a7f4:	mov    DWORD PTR [edx-0x64aace4e],edx
  41a7fa:	cs loope 0x41a7e6
  41a7fd:	inc    ebx
  41a7fe:	inc    ebp
  41a7ff:	or     al,BYTE PTR [eax]
  41a801:	mov    dh,0xbf
  41a803:	es (bad) 
  41a805:	clc    
  41a806:	mov    cl,0x5
  41a808:	test   bh,ah
  41a80a:	inc    ebx
  41a80b:	or     al,BYTE PTR [eax]
  41a80d:	inc    esp
  41a80e:	adc    DWORD PTR [edx-0xd3d1ef1],ebx
  41a814:	inc    DWORD PTR [eax]
  41a816:	pop    edi
  41a817:	xchg   DWORD PTR [eax-0x7d],ebp
  41a81a:	sub    al,BYTE PTR [esi*8+0x7e43b8ff]
  41a821:	sub    BYTE PTR [edi+ecx*1-0x66],dh
  41a825:	jbe    0x41a836
  41a827:	mov    bl,0x77
  41a829:	in     al,0xb4
  41a82b:	add    dh,dh
  41a82d:	push   edx
  41a82f:	sar    DWORD PTR [edi-0x6b],cl
  41a832:	jecxz  0x41a7e6
  41a834:	cmc    
  41a835:	call   FWORD PTR [eax-0x10]
  41a838:	xor    bh,bh
  41a83a:	push   0xcf0eab2
  41a83f:	inc    esp
  41a840:	or     cl,BYTE PTR [ebx-0x7d1d197a]
  41a846:	inc    esi
  41a847:	iret   
  41a848:	push   ds
  41a849:	jmp    0x43e5dd01
  41a84e:	stc    
  41a84f:	test   al,0xe2
  41a851:	mov    BYTE PTR [ebx+0x9],cl
  41a854:	push   cs
  41a855:	lds    ebp,FWORD PTR [ebp+0xc1e7d49]
  41a85b:	das    
  41a85c:	push   edx
  41a85d:	std    
  41a85e:	(bad)  [eax-0x27623e92]
  41a864:	and    eax,0x87a95308
  41a869:	cld    
  41a86a:	xchg   DWORD PTR [ebp+0x12],esp
  41a86d:	mov    cl,BYTE PTR [ebx]
  41a86f:	dec    edi
  41a870:	jecxz  0x41a86e
  41a872:	mov    cl,0xb1
  41a874:	push   DWORD PTR cs:0x8748a2
  41a87b:	cmp    ebx,ebp
  41a87d:	push   ds
  41a87e:	push   ebx
  41a87f:	mov    cl,BYTE PTR [ebx-0x7b]
  41a882:	jg     0x41a890
  41a884:	ror    BYTE PTR [eax],1
  41a886:	jae    0x41a8ee
  41a888:	sbb    al,0xb9
  41a88a:	aas    
  41a88b:	add    eax,0xb2f5fee2
  41a891:	xchg   DWORD PTR [edx-0x31ccf3a],edi
  41a897:	test   BYTE PTR [esi-0x5244c70c],ch
  41a89d:	ja     0x41a8a6
  41a89f:	push   es
  41a8a0:	arpl   ax,si
  41a8a2:	jb     0x41a82e
  41a8a4:	(bad)  [ebp+0x52]
  41a8a7:	dec    edx
  41a8a8:	and    al,0x79
  41a8aa:	clc    
  41a8ab:	jne    0x41a91f
  41a8ad:	jne    0x41a929
  41a8af:	mov    al,BYTE PTR [edx+0x49]
  41a8b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8b3:	mov    ebx,0x364b257c
  41a8b8:	aad    0x44
  41a8ba:	mov    DWORD PTR [ecx+0x42],ecx
  41a8bd:	fadd   st,st(1)
  41a8bf:	pop    esp
  41a8c0:	call   0x32b0:0x258603df
  41a8c7:	inc    esi
  41a8c8:	imul   edx,DWORD PTR [esi+0x20c592f7],0xae6ac403
  41a8d2:	sar    DWORD PTR [ebx-0x2],cl
  41a8d5:	mov    ecx,0xc52dca40
  41a8da:	sub    cl,bl
  41a8dc:	ss pusha 
  41a8de:	je     0x41a8e0
  41a8e0:	fldenv [esi+0x3a1bfee0]
  41a8e6:	and    DWORD PTR [ebx],ebp
  41a8e8:	cmp    eax,0x7f225cb2
  41a8ed:	cmc    
  41a8ee:	mov    esp,0xac6b9d77
  41a8f3:	jno    0x41a895
  41a8f5:	call   0x5860:0x36c32ad8
  41a8fc:	mov    eax,ds:0xd3fee0a6
  41a901:	cmp    DWORD PTR [ecx],esp
  41a903:	sub    edi,DWORD PTR ds:0x4f0614b2
  41a909:	jg     0x41a919
  41a90b:	rep outs dx,BYTE PTR ds:[esi]
  41a90d:	inc    esp
  41a90e:	cmp    DWORD PTR [ebx],ebp
  41a910:	inc    ebx
  41a911:	ss pusha 
  41a913:	xor    BYTE PTR [ecx-0x5a],dh
  41a916:	loopne 0x41a994
  41a918:	les    edx,FWORD PTR [edx-0x459d8f99]
  41a91e:	mov    ch,0x7f
  41a920:	xchg   esi,eax
  41a921:	xor    BYTE PTR [eax-0x6a5a49ad],0x23
  41a928:	dec    ebx
  41a929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a92a:	inc    ebx
  41a92b:	or     BYTE PTR [ebx+ebx*2],0x4c
  41a92f:	out    dx,al
  41a930:	cmp    dl,BYTE PTR [edi+edx*8]
  41a933:	add    esi,edx
  41a935:	or     eax,0xbce8620a
  41a93a:	je     0x41a98d
  41a93c:	mov    ds:0xe70aa28,al
  41a941:	pop    esi
  41a942:	repz push ds
  41a944:	add    BYTE PTR [eax],ah
  41a946:	sahf   
  41a947:	adc    DWORD PTR [edi],esp
  41a949:	sbb    BYTE PTR [edi-0x7283dfca],ah
  41a94f:	xor    BYTE PTR [ecx+eax*1+0x46bfff32],dh
  41a956:	call   0x60aa:0x6cef7c
  41a95d:	dec    esi
  41a95e:	call   0xdef2:0xa68ce288
  41a965:	rol    ecx,cl
  41a967:	loop   0x41a952
  41a969:	test   DWORD PTR [edx-0x77],eax
  41a96c:	ror    BYTE PTR [edi+0x3ec6f2a6],cl
  41a972:	inc    edi
  41a973:	mov    dl,0xdd
  41a975:	mov    eax,ds:0xbdf2f2a6
  41a97a:	xor    DWORD PTR [eax-0x22],ebx
  41a97d:	and    ecx,DWORD PTR [ebx+0x2585e909]
  41a983:	out    dx,eax
  41a984:	jmp    DWORD PTR [ecx-0x75e80d5a]
  41a98a:	push   0xffffffd1
  41a98c:	fimul  WORD PTR [eax]
  41a98e:	jnp    0x41a999
  41a990:	jmp    0x7db6651a
  41a995:	retf   
  41a996:	jae    0x41a967
  41a998:	mov    al,0xb8
  41a99a:	mov    ?,WORD PTR [ebp+0x0]
  41a99d:	fild   WORD PTR [eax]
  41a99f:	mul    BYTE PTR [eax]
  41a9a1:	or     DWORD PTR [ebp-0xd],esp
  41a9a4:	pop    esi
  41a9a5:	arpl   WORD PTR [ecx],si
  41a9a7:	cmp    dl,BYTE PTR [edx]
  41a9a9:	add    cl,al
  41a9ab:	into   
  41a9ac:	jbe    0x41a95e
  41a9ae:	xor    dh,BYTE PTR [eax]
  41a9b0:	out    dx,al
  41a9b1:	add    BYTE PTR [ebp+eiz*2-0x1450062],dh
  41a9b8:	hlt    
  41a9b9:	push   DWORD PTR [eax+0x25]
  41a9bc:	cwde   
  41a9bd:	inc    esp
  41a9be:	jo     0x41a957
  41a9c0:	cmc    
  41a9c1:	call   0x4bcb2c
  41a9c6:	stos   BYTE PTR es:[edi],al
  41a9c7:	jle    0x41a9ce
  41a9c9:	test   DWORD PTR [eax-0x7bfff5c2],edx
  41a9cf:	push   esi
  41a9d0:	cmp    edi,DWORD PTR [ebp+0x67]
  41a9d3:	sub    dh,BYTE PTR [ebp-0x1e468d75]
  41a9d9:	mov    esi,0x2b9e6564
  41a9de:	inc    edx
  41a9df:	cli    
  41a9e0:	hlt    
  41a9e1:	jmp    eax
  41a9e3:	pop    ecx
  41a9e4:	mov    bl,0x77
  41a9e6:	jle    0x41aa10
  41a9e8:	adc    BYTE PTR [eax+esi*4-0x6b],0xf5
  41a9ed:	cmp    BYTE PTR [edi+0x2831d2b],ah
  41a9f3:	std    
  41a9f4:	hlt    
  41a9f5:	push   eax
  41a9f7:	aas    
  41a9f8:	jle    0x41aa6d
  41a9fa:	and    eax,0xf0ff57bc
  41a9ff:	xchg   ebp,eax
  41aa00:	or     DWORD PTR [ebp-0x1d],0x7b013358
  41aa07:	sbb    eax,0x57f37d8b
  41aa0c:	dec    edi
  41aa0d:	fadd   DWORD PTR [eax]
  41aa0f:	call   0x522f:0x77d30f3
  41aa16:	xor    BYTE PTR [eax-0x69],0xff
  41aa1a:	je     0x41aa5c
  41aa1c:	pop    ebx
  41aa1d:	outs   dx,DWORD PTR ds:[esi]
  41aa1e:	clc    
  41aa1f:	pop    esp
  41aa20:	dec    edx
  41aa21:	mov    bh,BYTE PTR [edi]
  41aa23:	push   ebp
  41aa24:	sub    eax,0xa429f627
  41aa29:	adc    dh,BYTE PTR [ebp-0x7a]
  41aa2c:	lods   al,BYTE PTR ds:[esi]
  41aa2d:	mov    DWORD PTR [edx-0x31a0b3a],edi
  41aa33:	xchg   ebp,esp
  41aa35:	sbb    BYTE PTR [ecx-0x31a260d],al
  41aa3b:	sub    DWORD PTR [eax+0x1705077a],ebx
  41aa41:	dec    ebx
  41aa42:	std    
  41aa43:	sbb    DWORD PTR [ebp+0x9],ebx
  41aa46:	jae    0x41a9d2
  41aa48:	fsubr  QWORD PTR [edi+0x7a]
  41aa4b:	or     bh,BYTE PTR [ebx+0x43]
  41aa4e:	les    ecx,FWORD PTR ds:0xf9fd3b17
  41aa54:	cmp    al,0xd0
  41aa56:	shl    dl,cl
  41aa58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa59:	fidiv  WORD PTR [eax]
  41aa5b:	int    0x40
  41aa5d:	sbb    BYTE PTR [ecx],dh
  41aa5f:	mov    ebp,0x9d44e5e8
  41aa64:	jl     0x41aadf
  41aa66:	pop    eax
  41aa67:	pop    es
  41aa68:	mov    eax,ds:0x8cc9fc04
  41aa6d:	jns    0x41aabf
  41aa6f:	add    eax,0xffedf7
  41aa74:	xor    eax,0x7a8a73ad
  41aa79:	in     al,0xde
  41aa7b:	cld    
  41aa7c:	test   eax,0x45a86286
  41aa81:	cdq    
  41aa82:	push   esp
  41aa83:	hlt    
  41aa84:	ds push ss
  41aa86:	ret    
  41aa87:	jae    0x41ab06
  41aa89:	mov    al,ds:0x208173be
  41aa8e:	retf   
  41aa8f:	out    0x2f,al
  41aa91:	cdq    
  41aa92:	push   es
  41aa93:	add    BYTE PTR ds:0x3f82d66e,cl
  41aa99:	lods   eax,DWORD PTR ds:[esi]
  41aa9a:	es sub ebx,0x100d0d85
  41aaa1:	adc    DWORD PTR [esi],ecx
  41aaa3:	add    BYTE PTR [esi+0x7e391842],al
  41aaa9:	mov    bh,0xbd
  41aaab:	adc    eax,DWORD PTR [ecx]
  41aaad:	cmp    BYTE PTR [eax+0x39],ch
  41aab0:	ds push edi
  41aab2:	xchg   esi,eax
  41aab3:	sti    
  41aab4:	add    al,bh
  41aab6:	in     al,0xdc
  41aab8:	pop    es
  41aab9:	inc    edx
  41aaba:	loope  0x41aabf
  41aabc:	pop    es
  41aabd:	jp     0x41aafa
  41aabf:	fistp  WORD PTR [edi+esi*4-0xaaef043]
  41aac6:	add    BYTE PTR [eax+0x50],dh
  41aac9:	mov    edi,0x608a0012
  41aace:	outs   dx,BYTE PTR ds:[esi]
  41aacf:	add    BYTE PTR ds:0xfaeb03aa,dh
  41aad5:	adc    DWORD PTR [eax-0x7f],edi
  41aad8:	add    BYTE PTR [ebp+0x6eaf3a3],dh
  41aade:	sub    al,0x53
  41aae1:	paddw  mm2,mm0
  41aae4:	xchg   BYTE PTR [ecx],bl
  41aae6:	cmp    dh,BYTE PTR [ecx]
  41aae8:	jmp    0x41ab5e
  41aaea:	jb     0x41aae7
  41aaec:	inc    ebx
  41aaed:	xchg   BYTE PTR [edi+0x2d78f7a4],bh
  41aaf3:	mov    DWORD PTR [ecx-0x80],ebp
  41aaf6:	mov    ecx,0xa2b3638d
  41aafb:	mov    bl,0x7e
  41aafd:	cld    
  41aafe:	ins    DWORD PTR es:[edi],dx
  41aaff:	mov    esp,0xdda2a2ea
  41ab04:	outs   dx,DWORD PTR ds:[esi]
  41ab05:	out    dx,al
  41ab06:	(bad)  
  41ab07:	loopne 0x41aa8f
  41ab09:	int3   
  41ab0a:	and    DWORD PTR [edx+ebp*8+0x15418a],edx
  41ab11:	mov    bh,0x82
  41ab13:	xchg   ebx,edi
  41ab15:	push   cs
  41ab16:	or     BYTE PTR [ecx-0x74],bl
  41ab19:	sahf   
  41ab1a:	test   BYTE PTR [ecx+0x9a106eb],dl
  41ab20:	jmp    0x41ab10
  41ab22:	inc    esi
  41ab23:	aaa    
  41ab24:	test   eax,0xbc7f3938
  41ab29:	std    
  41ab2a:	push   0x5d
  41ab2c:	jns    0x41aaf6
  41ab2e:	or     al,0x1a
  41ab30:	pusha  
  41ab31:	call   0x99f5:0x986d5ccb
  41ab38:	jo     0x41ab14
  41ab3a:	inc    esi
  41ab3b:	fucomip st,st(2)
  41ab3d:	add    bl,cl
  41ab3f:	mov    al,ds:0xfbcf9651
  41ab44:	shr    BYTE PTR [ebx],0x75
  41ab47:	inc    edx
  41ab48:	pop    ebp
  41ab49:	jb     0x41ab84
  41ab4b:	adc    DWORD PTR [edi-0x49],edx
  41ab4e:	mov    BYTE PTR [edx+eax*1],dl
  41ab51:	mov    esi,0xfb7234ec
  41ab56:	inc    ebp
  41ab57:	inc    edx
  41ab58:	sub    DWORD PTR [ecx+ebp*8+0x68e93321],0x63bd7d8f
  41ab63:	aas    
  41ab64:	mov    ss,WORD PTR [edx]
  41ab66:	imul   ebp,DWORD PTR [esi+0x1f],0x8d7653de
  41ab6d:	ret    0x3756
  41ab70:	xor    bl,0x41
  41ab73:	jp     0x41abf2
  41ab75:	or     DWORD PTR [edi-0x5120f221],edi
  41ab7b:	(bad)  
  41ab7d:	adc    al,bl
  41ab7f:	adc    al,0xc
  41ab81:	sub    esi,DWORD PTR [edx+0x46]
  41ab84:	sbb    al,0x34
  41ab86:	mov    ebp,0x21e93021
  41ab8b:	dec    esp
  41ab8c:	dec    ecx
  41ab8d:	jae    0x41ac0c
  41ab8f:	or     BYTE PTR [esi+0x3678f1b2],cl
  41ab95:	mov    al,ds:0x7d88f9
  41ab9a:	inc    esp
  41ab9b:	push   ds
  41ab9c:	dec    eax
  41ab9d:	cld    
  41ab9e:	ficom  DWORD PTR [edx-0xd]
  41aba1:	jg     0x41aba3
  41aba3:	sbb    DWORD PTR [eax+0x77],ebp
  41aba6:	mov    dh,0x14
  41aba8:	pop    eax
  41aba9:	add    dh,BYTE PTR [ecx+eiz*2-0x3b]
  41abad:	jnp    0x41abae
  41abaf:	xor    DWORD PTR [ecx],0x44638da1
  41abb5:	repz mov cl,0x81
  41abb8:	pop    ds
  41abb9:	int    0xe8
  41abbb:	adc    al,0x59
  41abbd:	cmc    
  41abbe:	jmp    DWORD PTR [edx+0x1097786]
  41abc4:	stos   BYTE PTR es:[edi],al
  41abc5:	pop    ss
  41abc6:	js     0x41ac05
  41abc8:	add    eax,0x3e1deb0a
  41abcd:	int3   
  41abce:	mov    ebx,edx
  41abd0:	cwde   
  41abd1:	mov    eax,DWORD PTR [ecx]
  41abd3:	fs test cl,ah
  41abd6:	add    bl,ah
  41abd8:	test   BYTE PTR [ebx+ebx*2-0x4a],dl
  41abdc:	mov    BYTE PTR [edx],cl
  41abde:	add    BYTE PTR [edx],dl
  41abe0:	push   ds
  41abe1:	fild   WORD PTR [ebx+0x57596a8b]
  41abe7:	add    eax,0x6c575569
  41abec:	(bad)  
  41abed:	jg     0x41ac34
  41abef:	and    esi,esi
  41abf1:	pop    ecx
  41abf2:	inc    edx
  41abf4:	jo     0x41ac12
  41abf6:	inc    eax
  41abf7:	scas   eax,DWORD PTR es:[edi]
  41abf8:	push   ebp
  41abf9:	retf   0x1c40
  41abfc:	loope  0x41abfc
  41abfe:	mov    BYTE PTR [edx-0x72],ah
  41ac01:	mov    eax,DWORD PTR [ebp-0x1d]
  41ac04:	sbb    ecx,DWORD PTR [eax-0x4]
  41ac07:	add    BYTE PTR [edx],bh
  41ac09:	pusha  
  41ac0a:	into   
  41ac0b:	push   eax
  41ac0c:	dec    esp
  41ac0d:	div    esp
  41ac0f:	jne    0x41aba8
  41ac11:	sbb    esi,DWORD PTR [eax-0x3c]
  41ac14:	xchg   BYTE PTR [eax+0x69936003],bh
  41ac1a:	push   cs
  41ac1b:	add    DWORD PTR [esi-0x61],0x9
  41ac1f:	xor    al,BYTE PTR [esi-0x4d]
  41ac22:	mov    esp,0x54aa61ff
  41ac27:	adc    BYTE PTR [eax+0x510988c1],dh
  41ac2d:	sub    edx,esp
  41ac2f:	jb     0x41ac63
  41ac31:	adc    eax,0x82ed834
  41ac36:	xor    al,0xfd
  41ac38:	cmp    DWORD PTR [ebx],esp
  41ac3a:	or     DWORD PTR [ecx],edi
  41ac3c:	inc    ebp
  41ac3d:	fsubrp st(6),st
  41ac3f:	call   0xf075c0bc
  41ac44:	push   es
  41ac45:	xchg   edx,eax
  41ac46:	adc    DWORD PTR [ebx-0x73],esi
  41ac49:	jo     0x41ac87
  41ac4b:	hlt    
  41ac4c:	adc    edi,ebp
  41ac4e:	div    BYTE PTR [esi]
  41ac50:	stos   DWORD PTR es:[edi],eax
  41ac51:	xor    eax,0xef0deb7a
  41ac56:	jmp    0x7e7b:0x7c354b88
  41ac5d:	stos   BYTE PTR es:[edi],al
  41ac5e:	jnp    0x41aca4
  41ac60:	xchg   DWORD PTR [ebp+ecx*8-0x3923758e],eax
  41ac67:	call   0x742edef
  41ac6c:	add    cl,dl
  41ac6e:	test   al,0x74
  41ac70:	inc    ebp
  41ac71:	and    BYTE PTR [edi+eax*8+0x72],0x8f
  41ac76:	js     0x41ac9b
  41ac78:	call   0xfd2d4ec2
  41ac7d:	popf   
  41ac7e:	retf   0x72ea
  41ac81:	mov    dl,0x69
  41ac83:	jmp    0x41acf7
  41ac85:	xchg   esi,eax
  41ac86:	cmp    esi,edx
  41ac88:	outs   dx,DWORD PTR ds:[esi]
  41ac89:	(bad)  
  41ac8a:	lock jmp 0x437b:0xad421bfc
  41ac92:	inc    esi
  41ac93:	js     0x41acce
  41ac95:	jp     0x41ac36
  41ac97:	adc    eax,0xe9060cec
  41ac9c:	add    al,0xd6
  41ac9e:	stos   BYTE PTR es:[edi],al
  41ac9f:	es std 
  41aca1:	push   0xffffff9f
  41aca3:	ja     0x41ace3
  41aca5:	mov    cl,BYTE PTR [eax+0x80f16e0]
  41acab:	in     eax,dx
  41acac:	jnp    0x41ad1b
  41acae:	inc    edi
  41acaf:	js     0x41acf2
  41acb1:	push   edx
  41acb2:	add    bh,BYTE PTR [edx+0x3e]
  41acb5:	mov    gs,WORD PTR [eax]
  41acb7:	push   0x6a285a41
  41acbc:	ds or  bl,0xa5
  41acc0:	rol    DWORD PTR [esi],cl
  41acc2:	stos   BYTE PTR es:[edi],al
  41acc3:	fild   QWORD PTR [edi-0x70]
  41acc6:	or     dh,BYTE PTR [ebp-0x2cfff200]
  41accc:	fidivr DWORD PTR [edi-0x78]
  41accf:	mov    ds:0xab8700f5,al
  41acd4:	in     al,dx
  41acd5:	mov    ebp,0xb3e2504b
  41acda:	clc    
  41acdb:	push   DWORD PTR [edi-0x1eba3844]
  41ace1:	push   eax
  41ace2:	jmp    FWORD PTR [ebp-0x76e27a1]
  41ace8:	xchg   ebx,eax
  41ace9:	out    0x54,al
  41aceb:	dec    edx
  41acec:	push   esi
  41aced:	jno    0x41acc5
  41acef:	push   edx
  41acf0:	in     al,dx
  41acf1:	fcmovnu st,st(3)
  41acf3:	lahf   
  41acf4:	shl    esi,cl
  41acf6:	add    eax,0xf6d5482
  41acfb:	add    eax,0x9a3c7add
  41ad00:	mov    ds:0x779ea8ff,al
  41ad05:	inc    eax
  41ad06:	call   0xc0c6:0x45e109cb
  41ad0d:	xor    al,0xa3
  41ad0f:	push   es
  41ad10:	das    
  41ad11:	sub    al,0x96
  41ad13:	adc    cl,BYTE PTR ds:0x7d6fad69
  41ad19:	pushf  
  41ad1a:	add    eax,0x84152356
  41ad1f:	push   ebx
  41ad20:	retf   0x456c
  41ad23:	adc    dh,BYTE PTR [ebx]
  41ad25:	imul   ebp,ebp,0xaafdf29d
  41ad2b:	xacquire xchg BYTE PTR [ecx-0x52055998],ah
  41ad32:	pusha  
  41ad33:	lahf   
  41ad34:	jle    0x41ad8f
  41ad36:	add    BYTE PTR [esi],al
  41ad38:	cwde   
  41ad39:	jge    0x41ad3e
  41ad3b:	fiadd  DWORD PTR [edx+0xa]
  41ad3e:	stc    
  41ad3f:	test   DWORD PTR [eax],ebp
  41ad41:	or     dl,bl
  41ad43:	test   esp,esi
  41ad45:	repnz aam 0xe5
  41ad48:	xor    cl,BYTE PTR [edx-0x17]
  41ad4b:	push   es
  41ad4c:	fidivr WORD PTR [ecx+ebx*8-0x3d]
  41ad50:	sub    ah,cl
  41ad52:	and    al,0x85
  41ad54:	inc    edx
  41ad55:	xchg   DWORD PTR [ecx],esi
  41ad57:	call   0xe0ed8e01
  41ad5c:	sahf   
  41ad5d:	jle    0x41ad70
  41ad5f:	inc    ebx
  41ad60:	stos   BYTE PTR es:[edi],al
  41ad61:	push   edx
  41ad62:	icebp  
  41ad63:	loopne 0x41ad03
  41ad65:	bnd je 0x41ad3d
  41ad68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad69:	pop    edx
  41ad6a:	loope  0x41ad4c
  41ad6c:	sahf   
  41ad6d:	bnd je 0x41ad51
  41ad70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad71:	inc    edx
  41ad72:	icebp  
  41ad73:	loop   0x41ad13
  41ad75:	jle    0x41ad1d
  41ad77:	dec    ebx
  41ad78:	cld    
  41ad79:	shr    BYTE PTR [ebx+0x625c4286],0xba
  41ad80:	sbb    eax,0x2d830034
  41ad85:	repz inc ebp
  41ad87:	das    
  41ad88:	fs and eax,0x5d5fae75
  41ad8e:	call   FWORD PTR [ebx+0x62]
  41ad91:	push   es
  41ad92:	push   esi
  41ad93:	loopne 0x41ade2
  41ad95:	xchg   esi,eax
  41ad96:	adc    ebp,DWORD PTR [edi+0xc08746]
  41ad9c:	call   0xb31d:0x41048047
  41ada3:	je     0x41adf0
  41ada5:	sub    dh,BYTE PTR gs:[edi+edi*1+0x65]
  41adaa:	or     esi,DWORD PTR [edx+0x6b]
  41adad:	push   DWORD PTR gs:[ebp+0x67]
  41adb1:	gs xor al,0x74
  41adb4:	pop    ebx
  41adb5:	gs and eax,0xf3d12b75
  41adbb:	jmp    0x425d:0x5eca532d
  41adc2:	or     dl,BYTE PTR [ebp-0x4c]
  41adc5:	jp     0x41ad50
  41adc7:	in     al,dx
  41adc8:	aas    
  41adc9:	push   edx
  41adca:	retf   
  41adcb:	push   edi
  41adcc:	sbb    al,0xa6
  41adce:	mov    ecx,DWORD PTR [ebp+0x5b]
  41add1:	push   ds
  41add2:	inc    eax
  41add3:	(bad)  
  41add4:	xchg   esi,eax
  41add5:	and    eax,0xa93289fa
  41adda:	cmp    ecx,DWORD PTR [ebp-0x19]
  41addd:	xchg   ebp,eax
  41adde:	mov    WORD PTR [esi],?
  41ade0:	fiadd  WORD PTR [eax+0xa]
  41ade3:	push   esi
  41ade4:	xchg   esp,eax
  41ade5:	inc    eax
  41ade6:	cmp    ecx,ecx
  41ade8:	(bad)  
  41ade9:	push   ebx
  41adea:	(bad)  
  41adeb:	je     0x41adce
  41aded:	shr    BYTE PTR [esi],0x1f
  41adf0:	and    DWORD PTR [edx+eax*1],ebp
  41adf3:	call   DWORD PTR [edx-0x51f2146e]
  41adf9:	inc    eax
  41adfa:	or     cl,BYTE PTR [ebp-0x75f2c07a]
  41ae00:	add    BYTE PTR [eax+0x30d224f],cl
  41ae06:	mov    dh,0x6
  41ae08:	add    BYTE PTR [esi-0x660bcbf0],al
  41ae0e:	ins    DWORD PTR es:[edi],dx
  41ae0f:	cli    
  41ae10:	add    dh,0x7b
  41ae13:	jae    0x41ae06
  41ae15:	xchg   BYTE PTR [ebx-0x6e0476fa],ch
  41ae1b:	adc    ebp,esi
  41ae1d:	push   es
  41ae1e:	aaa    
  41ae1f:	in     al,dx
  41ae20:	inc    DWORD PTR [edx]
  41ae22:	or     ax,0xf5ff
  41ae26:	fimul  DWORD PTR [ecx+0x74ac89fd]
  41ae2c:	fld    DWORD PTR [esi-0x717ff957]
  41ae32:	fdiv   st(5),st
  41ae34:	xor    BYTE PTR [edi],0xaa
  41ae37:	push   es
  41ae38:	add    BYTE PTR [esi-0x79bf99d7],ch
  41ae3e:	jg     0x41ae34
  41ae40:	aas    
  41ae41:	rol    DWORD PTR [ecx],1
  41ae43:	and    ebp,edi
  41ae45:	sub    DWORD PTR ds:0x2591bf73,eax
  41ae4b:	mov    ds:0xb4aa19ff,al
  41ae50:	inc    edx
  41ae51:	adc    BYTE PTR [edx-0x56794e31],ch
  41ae57:	push   es
  41ae58:	push   0xffffff88
  41ae5a:	fsub   QWORD PTR [ecx]
  41ae5c:	cmc    
  41ae5d:	jo     0x41adfb
  41ae5f:	dec    esi
  41ae60:	cmp    BYTE PTR [ecx-0x17],0x6
  41ae64:	call   0xee863c69
  41ae69:	cld    
  41ae6a:	or     ch,BYTE PTR [edx+0x63]
  41ae6d:	pop    es
  41ae6e:	shr    dh,0xec
  41ae71:	(bad)  
  41ae72:	fdivrp st(5),st
  41ae74:	push   es
  41ae75:	add    BYTE PTR [esi-0x3cb65cbe],al
  41ae7b:	inc    edx
  41ae7c:	in     al,0x99
  41ae7e:	inc    esp
  41ae7f:	fwait
  41ae80:	jmp    0x41ae1b
  41ae82:	stc    
  41ae83:	sub    bl,BYTE PTR [esp+eax*2-0x7a]
  41ae87:	push   edi
  41ae88:	mov    ah,0x5a
  41ae8a:	jnp    0x41ae27
  41ae8c:	cld    
  41ae8d:	mov    BYTE PTR [ecx],bl
  41ae8f:	jmp    0x91b1:0x5ff041f
  41ae96:	inc    ebp
  41ae97:	cmp    ah,dl
  41ae99:	jmp    0x41aeff
  41ae9b:	pushf  
  41ae9c:	xchg   ebx,eax
  41ae9d:	jecxz  0x41aea4
  41ae9f:	adc    BYTE PTR ds:0x8405700f,0x84
  41aea6:	in     al,dx
  41aea7:	fwait
  41aea8:	cld    
  41aea9:	push   ebp
  41aeaa:	push   ecx
  41aeab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aeac:	adc    edx,DWORD PTR [ebx]
  41aeae:	adc    BYTE PTR ds:0x16d18e7c,al
  41aeb4:	cld    
  41aeb5:	inc    ebx
  41aeb6:	xchg   BYTE PTR [edi-0x6932e34a],ah
  41aebc:	fst    QWORD PTR [ecx+0x6]
  41aebf:	sbb    eax,0xab5045b
  41aec4:	add    eax,0xd06b211
  41aec9:	push   cs
  41aeca:	add    BYTE PTR [edx-0x6df30afe],bl
  41aed0:	pop    esi
  41aed1:	std    
  41aed2:	sub    DWORD PTR [ebp+0x7e49686d],edx
  41aed8:	addr16 and al,0x87
  41aedb:	stc    
  41aedc:	inc    esp
  41aedd:	fwait
  41aede:	es ins BYTE PTR es:[edi],dx
  41aee0:	inc    ebp
  41aee1:	mov    DWORD PTR [ebx-0x6f1efd86],ecx
  41aee7:	inc    ebp
  41aee8:	cmp    esp,edx
  41aeea:	xor    esp,ebx
  41aeec:	xor    al,0x55
  41aeee:	neg    DWORD PTR [ecx-0x3593f5be]
  41aef4:	syscall 
  41aef6:	bound  edi,QWORD PTR [edi]
  41aef8:	call   0xe5cc:0x3fda2c86
  41aeff:	mov    ebp,0x3e1df3a
  41af04:	inc    ebp
  41af05:	jg     0x41af23
  41af07:	retf   0xdc2
  41af0a:	loopne 0x41aeb0
  41af0c:	push   ecx
  41af0e:	jb     0x41af36
  41af10:	xchg   edx,eax
  41af11:	dec    edx
  41af12:	pusha  
  41af13:	es xchg edx,eax
  41af15:	cs sub al,0x7a
  41af18:	dec    ebp
  41af19:	mov    BYTE PTR [edi+0x3ff29767],dh
  41af1f:	or     DWORD PTR ds:0x433cc2f2,eax
  41af25:	dec    ebp
  41af26:	loope  0x41aeec
  41af28:	add    edi,0x7ef085ed
  41af2e:	jns    0x41af30
  41af30:	pushf  
  41af31:	push   ebx
  41af32:	retf   0x64ba
  41af35:	push   ecx
  41af36:	dec    esi
  41af37:	lds    edx,FWORD PTR [ebp+0x47]
  41af3a:	mov    WORD PTR [esi-0x7b],gs
  41af3d:	inc    edx
  41af3e:	or     bh,BYTE PTR [edx-0x6d1f1f8]
  41af44:	add    ecx,DWORD PTR [esi+0x3]
  41af47:	imul   ecx,DWORD PTR [edx+0x3a],0x464fef7d
  41af4e:	cmp    dl,BYTE PTR [edx]
  41af50:	sub    DWORD PTR [edi],ebx
  41af52:	mov    dh,BYTE PTR [eax]
  41af54:	jne    0x41af69
  41af56:	add    BYTE PTR [ecx+0x2a],ch
  41af59:	ins    DWORD PTR es:[edi],dx
  41af5a:	jle    0x41af48
  41af5c:	add    eax,0xf9942391
  41af61:	sbb    ecx,esi
  41af63:	test   al,0x58
  41af65:	inc    ebp
  41af66:	mov    dl,BYTE PTR [eax]
  41af68:	mov    cl,BYTE PTR [edi]
  41af6a:	sbb    BYTE PTR [eax],al
  41af6c:	pop    edx
  41af6d:	dec    esi
  41af6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af6f:	add    BYTE PTR [ebp+0x5f057d4a],0x76
  41af76:	push   ebp
  41af77:	jne    0x41af5b
  41af79:	(bad)  
  41af7c:	popa   
  41af7d:	cmp    eax,0xa8efd180
  41af82:	push   es
  41af83:	cmp    BYTE PTR [esi-0x590575cd],0x32
  41af8a:	xchg   esp,eax
  41af8b:	ret    
  41af8c:	leave  
  41af8d:	xchg   DWORD PTR [edx-0x1d],esi
  41af90:	mov    al,ds:0x30c9c5
  41af95:	popf   
  41af96:	xlat   BYTE PTR ds:[ebx]
  41af97:	jb     0x41af92
  41af99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af9a:	xor    dl,BYTE PTR [edx+eax*8-0x1d8d77d7]
  41afa1:	pusha  
  41afa2:	(bad)
  41afa5:	and    DWORD PTR [edx+0x3a],ecx
  41afa8:	and    eax,0x5c8ad45d
  41afad:	pop    ds
  41afae:	inc    esp
  41afaf:	adc    BYTE PTR [edi+ebx*1+0x3f],0x89
  41afb4:	rcr    BYTE PTR [ebp-0x5a],0x9
  41afb8:	mov    BYTE PTR [ebx],ch
  41afba:	xor    eax,0x2264404d
  41afbf:	cs adc al,0x28
  41afc2:	mov    edi,0xa3d8ff71
  41afc7:	push   ecx
  41afc8:	pop    edi
  41afc9:	popa   
  41afca:	dec    edx
  41afcb:	or     al,0x0
  41afcd:	jmp    0x9441ba50
  41afd2:	or     ch,BYTE PTR [esi]
  41afd4:	or     BYTE PTR [ebp+eax*4+0x9],al
  41afd8:	inc    eax
  41afd9:	icebp  
  41afda:	lock adc eax,0xf54164e8
  41afe0:	push   DWORD PTR [esi+ebp*2-0x79]
  41afe4:	test   BYTE PTR [esi+0x72fcf7b7],0x7f
  41afeb:	add    bh,ch
  41afed:	pop    edx
  41afee:	xchg   DWORD PTR [edx],eax
  41aff0:	call   0xfd2b4892
  41aff5:	std    
  41aff6:	push   0x950001e5
  41affb:	imul   ecx,DWORD PTR [eax-0x3e],0xffffff8e
  41afff:	stos   DWORD PTR es:[edi],eax
  41b000:	cmp    ecx,DWORD PTR [ecx+0xbe32baa]
  41b006:	add    eax,0x3003fdee
  41b00b:	jns    0x41aff6
  41b00d:	jb     0x41b085
  41b00f:	cmp    bl,0x77
  41b012:	je     0x41b07f
  41b014:	push   cs
  41b015:	xchg   DWORD PTR [ebx-0x31],ecx
  41b018:	in     eax,0x3
  41b01a:	add    eax,0xcffe9fe
  41b01f:	addr16 push es
  41b021:	mov    ebx,ecx
  41b023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b024:	cmp    eax,0xfe760356
  41b029:	mov    BYTE PTR [ebx-0x79e17273],bh
  41b02f:	adc    al,0xaf
  41b031:	push   esp
  41b032:	getsec 
  41b034:	(bad)  
  41b035:	cmp    BYTE PTR [eax-0x63],cl
  41b038:	inc    ebx
  41b039:	push   ecx
  41b03a:	sti    
  41b03b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b03c:	into   
  41b03d:	out    0x7a,eax
  41b03f:	aam    0xe9
  41b041:	cld    
  41b042:	or     eax,0x6dd21e22
  41b047:	repz pop edx
  41b049:	inc    ebx
  41b04a:	ins    DWORD PTR es:[edi],dx
  41b04b:	out    0xfe,al
  41b04d:	jb     0x41b0c6
  41b04f:	inc    edx
  41b050:	cmp    edx,DWORD PTR [eax]
  41b052:	xchg   edx,eax
  41b053:	out    0x8d,al
  41b055:	jp     0x41b0cd
  41b057:	stos   BYTE PTR es:[edi],al
  41b058:	pop    edx
  41b059:	inc    ebp
  41b05a:	add    eax,0x1f6e7
  41b05f:	jp     0x41b0a3
  41b061:	mov    ds:0x9a967d1c,al
  41b066:	std    
  41b067:	repnz or eax,0xdeb341d
  41b06d:	icebp  
  41b06e:	loopne 0x41b0e4
  41b070:	mov    dh,0xcf
  41b072:	inc    ebx
  41b073:	xchg   BYTE PTR [ebp-0x3476a9e0],bh
  41b079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b07a:	fisttp WORD PTR [ecx+0x56]
  41b07d:	loopne 0x41b09c
  41b07f:	cmp    dl,BYTE PTR ds:0x5bbe4178
  41b085:	mov    bl,0x52
  41b087:	not    DWORD PTR [ebx-0x5f]
  41b08a:	aas    
  41b08b:	dec    eax
  41b08c:	sti    
  41b08d:	test   eax,0x604291c2
  41b092:	popa   
  41b093:	jbe    0x41b0d8
  41b095:	ds aad 0xfe
  41b098:	std    
  41b099:	mov    eax,0x82e3c8b
  41b09e:	aam    0x8
  41b0a0:	push   ecx
  41b0a1:	cwde   
  41b0a2:	out    0xc,eax
  41b0a4:	ds hlt 
  41b0a6:	mov    dh,BYTE PTR [esi+0x5b]
  41b0a9:	mov    ecx,0xd2cc4a53
  41b0ae:	sbb    DWORD PTR [eax+0x62],0xfffffff5
  41b0b2:	or     DWORD PTR [esi],eax
  41b0b4:	cdq    
  41b0b5:	stc    
  41b0b6:	pop    edi
  41b0b7:	add    edx,0x79
  41b0ba:	adc    ebx,ecx
  41b0bc:	dec    esp
  41b0bd:	pusha  
  41b0be:	fiadd  DWORD PTR [edi+0x8ce513]
  41b0c4:	mov    ch,0xad
  41b0c6:	pop    esp
  41b0c7:	inc    edx
  41b0c8:	enter  0x515b,0x52
  41b0cc:	es ret 
  41b0ce:	push   esi
  41b0cf:	add    dl,BYTE PTR [edi+ecx*8+0x4276615f]
  41b0d6:	mov    ebp,0xa1506fa
  41b0db:	fld    DWORD PTR [edx+0x676a060e]
  41b0e1:	xor    cl,BYTE PTR [eax]
  41b0e3:	pushf  
  41b0e4:	test   ecx,0xa9452154
  41b0ea:	add    eax,0x7e8e4762
  41b0ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0f0:	mov    ebp,0xceadf01
  41b0f5:	add    al,0xfe
  41b0f7:	jb     0x41b130
  41b0f9:	cs pop ds
  41b0fb:	sub    bh,bl
  41b0fd:	xchg   edi,eax
  41b0fe:	(bad)  
  41b100:	push   ss
  41b101:	dec    ebx
  41b102:	adc    esi,DWORD PTR [ecx+edi*2+0x41]
  41b106:	or     DWORD PTR [ebx-0x7c],esi
  41b109:	push   esi
  41b10a:	sub    bl,BYTE PTR [ebp+0x7a]
  41b10d:	push   esi
  41b10e:	add    DWORD PTR [ebp-0x77],ecx
  41b111:	push   esi
  41b112:	add    eax,0xdf018546
  41b117:	into   
  41b118:	cld    
  41b119:	add    ebx,DWORD PTR [esi]
  41b11b:	add    bh,BYTE PTR [ebp+0x446201bf]
  41b121:	popf   
  41b122:	imul   esp,DWORD PTR [esi+0x725c9758],0x0
  41b129:	popa   
  41b12a:	add    eax,0x97b13f59
  41b12f:	jl     0x41b12a
  41b131:	inc    eax
  41b132:	xor    DWORD PTR [edx-0x25],esi
  41b135:	lds    eax,FWORD PTR [edx+0x7f]
  41b138:	hlt    
  41b139:	jge    0x41b0f8
  41b13b:	dec    esp
  41b13c:	jno    0x41b13a
  41b13e:	add    BYTE PTR [esi],al
  41b140:	pop    esp
  41b141:	mov    eax,ds:0xd45e2f3c
  41b146:	sbb    dl,BYTE PTR [edi+0x72]
  41b149:	dec    eax
  41b14a:	imul   ecx,esp,0xffffffb9
  41b14d:	lahf   
  41b14e:	dec    eax
  41b14f:	pop    esp
  41b150:	dec    esi
  41b151:	push   ds
  41b152:	repnz sbb eax,DWORD PTR [eax]
  41b155:	out    dx,eax
  41b156:	inc    ecx
  41b157:	mov    esp,eax
  41b159:	and    eax,edi
  41b15b:	inc    edi
  41b15c:	cld    
  41b15d:	call   0xf622:0x66057781
  41b164:	jmp    0x41b152
  41b166:	je     0x41b1af
  41b168:	cld    
  41b169:	je     0x41b16d
  41b16b:	imul   BYTE PTR [ebx]
  41b16d:	mov    cl,0xc0
  41b16f:	icebp  
  41b170:	add    ebx,edi
  41b172:	add    eax,0xfaedfb89
  41b177:	push   es
  41b178:	adc    BYTE PTR [ecx],0x33
  41b17b:	jle    0x41b1bf
  41b17d:	fs or  dh,dl
  41b180:	(bad)  
  41b181:	out    0x3e,eax
  41b183:	xor    ecx,ebx
  41b185:	pop    ecx
  41b186:	xor    DWORD PTR [edx+0x773ba93c],ecx
  41b18c:	sub    eax,DWORD PTR [eax]
  41b18e:	outs   dx,DWORD PTR ds:[esi]
  41b18f:	dec    esp
  41b190:	cmc    
  41b191:	jne    0x41b132
  41b193:	jbe    0x41b1ac
  41b195:	pushf  
  41b196:	mov    esp,0xdf850a01
  41b19b:	in     eax,dx
  41b19c:	adc    eax,0x5da2522b
  41b1a1:	(bad)  
  41b1a2:	mov    edx,0x7aff5ca2
  41b1a7:	xor    DWORD PTR [eax+eax*2],ebx
  41b1aa:	pop    edi
  41b1ab:	push   0xf5e40c4f
  41b1b0:	add    DWORD PTR [ebx+0x7d09322b],eax
  41b1b6:	push   ebx
  41b1b7:	stos   BYTE PTR es:[edi],al
  41b1b8:	or     DWORD PTR [ebx-0x8ce8aa6],ecx
  41b1be:	dec    ebp
  41b1bf:	retf   
  41b1c0:	push   ecx
  41b1c1:	mov    ebp,DWORD PTR [edx+0x32]
  41b1c4:	push   ebp
  41b1c5:	pop    esi
  41b1c6:	jbe    0x41b148
  41b1c8:	(bad)  
  41b1c9:	(bad)  
  41b1ca:	cli    
  41b1cb:	leave  
  41b1cc:	fiadd  WORD PTR [ebx+0x50fdff86]
  41b1d2:	mov    eax,0xd145b04
  41b1d7:	xchg   esi,eax
  41b1d8:	dec    esi
  41b1d9:	adc    al,dh
  41b1db:	stos   DWORD PTR es:[edi],eax
  41b1dc:	aad    0xd5
  41b1de:	or     esi,edx
  41b1e0:	test   BYTE PTR [esi-0x2a2a98b5],0xd
  41b1e7:	into   
  41b1e8:	add    al,BYTE PTR [edi+0x42813b4b]
  41b1ee:	jle    0x41b20e
  41b1f0:	adc    cl,BYTE PTR [eax]
  41b1f2:	add    BYTE PTR ds:0xd25a7f53,cl
  41b1f8:	jg     0x41b1c6
  41b1fa:	or     al,0x5
  41b1fc:	or     BYTE PTR [esi],cl
  41b1fe:	add    BYTE PTR [esi+0x438b39b4],al
  41b204:	(bad)  
  41b205:	fidiv  WORD PTR [edx+0x4f]
  41b208:	pushf  
  41b209:	aad    0x86
  41b20b:	dec    ebx
  41b20c:	mov    ds:0x2779bf8b,eax
  41b211:	test   bh,bh
  41b213:	mov    eax,ds:0x967a81aa
  41b218:	aas    
  41b219:	int    0x75
  41b21b:	or     eax,0x13fd392c
  41b220:	jnp    0x41b1f7
  41b222:	adc    ah,BYTE PTR [edx]
  41b224:	jns    0x41b26c
  41b226:	add    BYTE PTR [ebx],al
  41b228:	jmp    0x3a11:0x76066c5b
  41b22f:	repz inc ebx
  41b231:	or     DWORD PTR [edx+0x5e],0xad44c1a9
  41b238:	sbb    bl,BYTE PTR [ebx+0x29]
  41b23b:	std    
  41b23c:	cs jmp 0x8a73:0xb9274188
  41b244:	test   BYTE PTR [edx+0x15],0x87
  41b248:	inc    edx
  41b249:	sub    BYTE PTR [edi+0x2e],al
  41b24c:	or     eax,0x2efd32e6
  41b251:	stc    
  41b252:	mov    BYTE PTR [ebx-0x55],dl
  41b255:	cmp    eax,0x941b0000
  41b25a:	push   edi
  41b25b:	seta   BYTE PTR [eax-0x65]
  41b25f:	xor    al,BYTE PTR [edi+0x31eb907f]
  41b265:	inc    eax
  41b266:	and    al,0xdc
  41b268:	push   es
  41b269:	push   ss
  41b26a:	sub    eax,0x142b7803
  41b26f:	push   esi
  41b270:	jmp    0x9d93:0x81fce47c
  41b277:	test   DWORD PTR [edx-0x3b],0xaa41fce4
  41b27e:	pop    edx
  41b27f:	add    bl,cl
  41b281:	xchg   ebx,eax
  41b282:	fistp  WORD PTR [esi-0x3e]
  41b285:	(bad)  
  41b286:	lods   eax,DWORD PTR ds:[esi]
  41b287:	or     ebp,DWORD PTR [edi-0x6e]
  41b28a:	(bad)  
  41b28c:	pop    esi
  41b28d:	adc    eax,0xc9b707e9
  41b292:	push   ebp
  41b293:	or     BYTE PTR [edi-0x6da71e6e],al
  41b299:	(bad)  
  41b29a:	sub    eax,0xe3744ed0
  41b29f:	test   DWORD PTR [edx],ebp
  41b2a1:	xchg   ebx,eax
  41b2a2:	mov    ebx,0x2dc7e2db
  41b2a7:	or     al,bl
  41b2a9:	idiv   DWORD PTR [ecx+0x3e4281c6]
  41b2af:	(bad)  
  41b2b0:	pop    ebp
  41b2b1:	icebp  
  41b2b2:	das    
  41b2b3:	xor    cl,BYTE PTR [edi]
  41b2b5:	dec    ebp
  41b2b6:	sbb    esi,esi
  41b2b8:	cdq    
  41b2b9:	inc    edx
  41b2ba:	adc    al,0xdb
  41b2bc:	add    ah,dl
  41b2be:	inc    esi
  41b2bf:	je     0x41b273
  41b2c1:	dec    edx
  41b2c2:	or     eax,0x8b10e10a
  41b2c7:	repnz xchg edi,eax
  41b2c9:	pop    es
  41b2ca:	xchg   esi,eax
  41b2cb:	jae    0x41b294
  41b2cd:	push   es
  41b2ce:	shl    DWORD PTR [ebx-0x3d],cl
  41b2d1:	clc    
  41b2d2:	inc    DWORD PTR [ecx]
  41b2d4:	fwait
  41b2d5:	jge    0x41b281
  41b2d7:	mov    ecx,0x8c963ca7
  41b2dc:	sub    DWORD PTR [esi-0x566b5fa],esi
  41b2e2:	inc    DWORD PTR [ecx]
  41b2e4:	ss xor al,0xbc
  41b2e7:	dec    esp
  41b2e8:	sub    eax,0xeb31ff0f
  41b2ed:	push   es
  41b2ee:	sar    DWORD PTR [ebp-0x1d],cl
  41b2f1:	(bad)  
  41b2f3:	pop    es
  41b2f4:	push   ss
  41b2f5:	mov    ebp,0x1964d1c9
  41b2fa:	mov    db6,edx
  41b2fd:	inc    edi
  41b2fe:	inc    esi
  41b2ff:	pop    ebx
  41b300:	cdq    
  41b301:	nop
  41b302:	stos   BYTE PTR es:[edi],al
  41b303:	push   ss
  41b304:	jmp    0x4f0e:0xaeb795dc
  41b30b:	das    
  41b30c:	rcl    DWORD PTR [ebx-0x4],1
  41b30f:	repnz fmulp st(4),st
  41b312:	lar    ebx,si
  41b315:	fnstsw WORD PTR [eax]
  41b317:	retf   0xa505
  41b31a:	inc    eax
  41b31b:	enter  0x8771,0xc9
  41b31f:	dec    esp
  41b320:	mov    ebp,0xc8aa4700
  41b325:	neg    DWORD PTR [edi+ecx*4+0x7e]
  41b329:	stos   BYTE PTR es:[edi],al
  41b32a:	push   0x7e1cf33c
  41b32f:	mov    ebx,0x4f7291ca
  41b334:	repz xchg esi,eax
  41b336:	pushf  
  41b337:	lock dec esi
  41b339:	mov    al,ds:0xa4a43
  41b33e:	jb     0x41b301
  41b340:	fiadd  WORD PTR [ecx-0xc6a05]
  41b346:	das    
  41b347:	pop    ecx
  41b348:	pop    esp
  41b349:	push   edi
  41b34a:	test   DWORD PTR [ecx+eax*4-0x10],eax
  41b34e:	inc    edi
  41b34f:	test   BYTE PTR [edi-0x5],al
  41b352:	pop    ds
  41b353:	das    
  41b354:	inc    edi
  41b355:	or     BYTE PTR [eax],ch
  41b357:	les    ecx,FWORD PTR [ebp+0x5a462f00]
  41b35d:	push   0x49f4af
  41b362:	xchg   esp,eax
  41b363:	jnp    0x41b34f
  41b365:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b366:	xor    ebp,DWORD PTR [ebp-0xb]
  41b369:	test   DWORD PTR [edi+0x218d7bf2],ebp
  41b36f:	inc    esp
  41b370:	or     BYTE PTR [eax],0x5f
  41b373:	outs   dx,BYTE PTR ds:[esi]
  41b374:	adc    dh,BYTE PTR [ebp+eiz*8-0x3b]
  41b378:	sti    
  41b379:	or     DWORD PTR [ebx],ecx
  41b37b:	ds mov bh,cl
  41b37e:	(bad)  
  41b380:	or     BYTE PTR [eax+0x74],al
  41b383:	test   eax,0xac00f021
  41b388:	repnz add DWORD PTR [ebp+0x505c3e0a],ecx
  41b38f:	cmp    al,cl
  41b391:	loop   0x41b391
  41b393:	enter  0xcd6b,0x85
  41b397:	mov    edi,0xacfff56c
  41b39c:	inc    ebp
  41b39d:	or     al,BYTE PTR [eax]
  41b39f:	mov    bh,0x50
  41b3a1:	popa   
  41b3a2:	add    BYTE PTR [edi+0x1485dabe],bl
  41b3a8:	repnz das 
  41b3aa:	mov    dl,0x75
  41b3ac:	popf   
  41b3ad:	iret   
  41b3ae:	inc    ebp
  41b3af:	sub    BYTE PTR [ebx-0x7f],ch
  41b3b2:	clc    
  41b3b3:	loop   0x41b420
  41b3b5:	jbe    0x41b3de
  41b3b7:	xchg   BYTE PTR [eax+edx*4-0x1a],cl
  41b3bb:	pop    ebx
  41b3bc:	fwait
  41b3bd:	push   es
  41b3be:	sub    DWORD PTR [ebp+0x31],eax
  41b3c1:	out    0x9d,al
  41b3c3:	mov    dl,BYTE PTR [eax]
  41b3c5:	ror    DWORD PTR [eax+0x5549a7d3],1
  41b3cb:	setp   BYTE PTR [eax]
  41b3ce:	cmp    DWORD PTR [esi],0x6a8de628
  41b3d4:	lock ror BYTE PTR [eax-0x180742d],1
  41b3db:	inc    ebx
  41b3dc:	out    0xd5,al
  41b3de:	(bad)  
  41b3df:	mov    ah,0xf3
  41b3e1:	(bad)  
  41b3e3:	or     BYTE PTR [eax-0x7c],dl
  41b3e6:	inc    edx
  41b3e7:	std    
  41b3e8:	mov    bh,0x30
  41b3ea:	pop    ecx
  41b3eb:	add    bh,cl
  41b3ed:	pop    esp
  41b3ee:	add    al,BYTE PTR [eax]
  41b3f0:	pop    ebx
  41b3f1:	adc    al,0xe2
  41b3f3:	push   eax
  41b3f4:	std    
  41b3f5:	int    0xfe
  41b3f7:	add    BYTE PTR [ebx-0x75],al
  41b3fa:	test   esp,eax
  41b3fc:	or     eax,0x862de64c
  41b401:	fwait
  41b402:	push   es
  41b403:	test   dh,al
  41b405:	adc    eax,0x43c630f3
  41b40a:	daa    
  41b40b:	push   esi
  41b40c:	mov    ecx,0x7988f715
  41b411:	pushf  
  41b412:	inc    ebx
  41b413:	or     BYTE PTR [ecx-0x5ea9fe0b],ch
  41b419:	lea    edx,[esi]
  41b41b:	push   ss
  41b41c:	inc    esi
  41b41d:	fwait
  41b41e:	(bad)  
  41b41f:	ret    
  41b420:	add    BYTE PTR [ecx+esi*1+0x4],0x10
  41b425:	pushf  
  41b426:	jg     0x41b484
  41b428:	mov    ah,BYTE PTR [ecx+ecx*8]
  41b42b:	pop    ebp
  41b42c:	fnstsw WORD PTR [esi]
  41b42e:	int3   
  41b42f:	or     eax,DWORD PTR [esi+0x598d3342]
  41b435:	clc    
  41b436:	out    0x31,eax
  41b438:	mov    ds,WORD PTR [eax]
  41b43a:	ror    BYTE PTR [ebx+ecx*8+0x5342563e],0xc6
  41b442:	sahf   
  41b443:	dec    edi
  41b444:	jl     0x41b3dd
  41b446:	nop
  41b447:	and    al,0x44
  41b449:	inc    esp
  41b44a:	mov    ds:0xde9c318c,al
  41b44f:	mov    WORD PTR [eax],es
  41b451:	das    
  41b452:	clc    
  41b453:	pop    eax
  41b454:	repz sub BYTE PTR [ecx+0x16e17f53],dl
  41b45b:	out    0x8a,al
  41b45d:	fwait
  41b45e:	cmp    dl,BYTE PTR [ecx+0x1ff0b302]
  41b464:	call   FWORD PTR cs:[esi+0x60d3191]
  41b46b:	jmp    0x247c20a3
  41b470:	dec    esi
  41b471:	jle    0x41b4c6
  41b473:	adc    ebx,eax
  41b475:	xchg   esp,eax
  41b476:	(bad)  
  41b478:	inc    ebx
  41b479:	xchg   ch,al
  41b47b:	and    BYTE PTR [edi-0x63],cl
  41b47e:	(bad)  
  41b47f:	popf   
  41b480:	or     ebx,esi
  41b482:	shr    BYTE PTR [esi-0xf4479fd],0x7d
  41b489:	mov    ebx,0x3c84c316
  41b48e:	ds loope 0x41b4e0
  41b491:	mov    bp,0xd825
  41b495:	cmp    DWORD PTR [ebp*8+0x473e14d6],ebx
  41b49c:	or     BYTE PTR [ebx+0x74d6e915],bl
  41b4a2:	push   edx
  41b4a3:	rol    DWORD PTR [ebx-0x7a],1
  41b4a6:	lds    esp,FWORD PTR [eax+0x9f88e51]
  41b4ac:	rcl    DWORD PTR [edi-0x6a510c71],0x98
  41b4b3:	repnz sbb al,0x0
  41b4b6:	jp     0x41b445
  41b4b8:	sbb    al,0x49
  41b4ba:	push   esp
  41b4bb:	dec    edi
  41b4bc:	or     ah,BYTE PTR [edx+0x18]
  41b4bf:	in     eax,dx
  41b4c0:	shr    BYTE PTR [ebx+0x725d4282],0x5e
  41b4c7:	ret    0xdde5
  41b4ca:	jae    0x41b4c1
  41b4cc:	ss jbe 0x41b538
  41b4cf:	sbb    al,0xe
  41b4d1:	outs   dx,BYTE PTR ds:[esi]
  41b4d2:	aaa    
  41b4d3:	push   edi
  41b4d4:	sbb    DWORD PTR [ecx+0x6af9b985],ebp
  41b4da:	push   edx
  41b4db:	mov    gs,WORD PTR [esi]
  41b4dd:	pop    ecx
  41b4de:	mov    dh,0x53
  41b4e0:	test   DWORD PTR [ecx+esi*1-0x38d1a401],esp
  41b4e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4e8:	adc    eax,0xf34285e9
  41b4ed:	fcom   QWORD PTR [ebp-0x2316b5c1]
  41b4f3:	xor    bh,BYTE PTR [edi-0x54]
  41b4f6:	aad    0x49
  41b4f8:	dec    ebp
  41b4f9:	icebp  
  41b4fa:	ss (bad) 
  41b4fc:	dec    ebx
  41b4fd:	fs inc edi
  41b4ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b500:	pop    ecx
  41b501:	mov    bh,0xb8
  41b503:	xor    edi,DWORD PTR [esi]
  41b505:	fadd   DWORD PTR [ebp+0x42]
  41b508:	lea    ebp,[ecx]
  41b50a:	push   edi
  41b50b:	call   0xa917:0xaeb6f65b
  41b512:	test   DWORD PTR [ecx-0x788fb936],edi
  41b518:	(bad)  
  41b519:	in     eax,0x0
  41b51b:	test   ebx,esi
  41b51d:	jle    0x41b4e4
  41b51f:	add    al,0x9b
  41b521:	adc    DWORD PTR [edx],edi
  41b523:	inc    DWORD PTR [ebx]
  41b525:	repnz add BYTE PTR [edi+0x33],ch
  41b529:	rcl    DWORD PTR [ebx-0x2b],1
  41b52c:	data16 cmc 
  41b52e:	adc    eax,0x329233
  41b533:	(bad)  
  41b534:	jne    0x41b54d
  41b536:	sub    BYTE PTR [edi+0x2],ch
  41b539:	or     al,BYTE PTR [ebp-0x72e40cd1]
  41b53f:	stos   BYTE PTR es:[edi],al
  41b540:	outs   dx,BYTE PTR ds:[esi]
  41b541:	inc    edx
  41b542:	push   0x3f
  41b544:	sbb    al,0xf5
  41b546:	jmp    FWORD PTR [edx]
  41b548:	bound  ebx,QWORD PTR [edx]
  41b54a:	inc    eax
  41b54b:	das    
  41b54c:	ret    
  41b54d:	mov    dl,0x75
  41b54f:	sub    esi,DWORD PTR [edx+ecx*8]
  41b552:	jmp    0x41b4e7
  41b554:	mov    ebx,0x74efec47
  41b559:	ja     0x41b563
  41b55b:	push   0x2f01e202
  41b560:	inc    edx
  41b561:	or     dl,BYTE PTR [ebx+0x68]
  41b564:	add    bh,dh
  41b566:	add    bl,BYTE PTR [edi]
  41b568:	inc    edx
  41b569:	or     bh,bh
  41b56b:	fisubr DWORD PTR [ecx]
  41b56d:	sbb    al,BYTE PTR [eax-0x11]
  41b570:	ret    0x74b2
  41b573:	jle    0x41b5c6
  41b575:	pop    ecx
  41b576:	push   ebx
  41b577:	jb     0x41b57b
  41b579:	loop   0x41b5cb
  41b57b:	sbb    al,0x75
  41b57d:	ja     0x41b577
  41b57f:	add    BYTE PTR [eax-0x6e],dh
  41b582:	adc    BYTE PTR cs:[edi],bl
  41b585:	inc    edx
  41b586:	xchg   eax,eax
  41b588:	dec    ebx
  41b589:	inc    ebp
  41b58a:	cmc    
  41b58b:	adc    eax,0x3296a7
  41b590:	sub    al,BYTE PTR [ecx+0x466c0277]
  41b596:	cmc    
  41b597:	jne    0x41b540
  41b599:	ja     0x41b5b2
  41b59b:	mov    al,ds:0x8a0a019d
  41b5a0:	xchg   al,bl
  41b5a2:	xor    bh,al
  41b5a4:	les    esp,FWORD PTR [edi+0x77fd5306]
  41b5aa:	ss dec edi
  41b5ac:	aad    0x1e
  41b5ae:	xor    edi,eax
  41b5b0:	(bad)  
  41b5b1:	add    DWORD PTR [esi],eax
  41b5b3:	push   0x71
  41b5b5:	mov    BYTE PTR [ecx-0x9846c04],dh
  41b5bb:	aas    
  41b5bc:	xchg   BYTE PTR [esi],ah
  41b5be:	into   
  41b5bf:	or     al,0x2
  41b5c1:	femms  
  41b5c3:	add    BYTE PTR [esi-0x69c57eac],al
  41b5c9:	imul   eax,DWORD PTR [esi+0x0],0x13
  41b5cd:	data16 ror BYTE PTR [edi-0x2b],cl
  41b5d1:	sub    BYTE PTR [eax+0x17],ah
  41b5d4:	xor    DWORD PTR [esi+0x1e51fcce],edx
  41b5da:	into   
  41b5db:	jb     0x41b571
  41b5dd:	in     al,dx
  41b5de:	loop   0x41b5f7
  41b5e0:	ja     0x41b5bd
  41b5e2:	push   es
  41b5e3:	add    DWORD PTR [eax],0x6543710e
  41b5e9:	std    
  41b5ea:	fstp   st(2)
  41b5ec:	cmp    ch,al
  41b5ee:	(bad)  
  41b5ef:	push   si
  41b5f1:	out    dx,al
  41b5f2:	push   edi
  41b5f3:	(bad)  
  41b5f5:	icebp  
  41b5f6:	pop    ds
  41b5f7:	fidivr WORD PTR [eax]
  41b5f9:	cmc    
  41b5fa:	scas   al,BYTE PTR es:[edi]
  41b5fb:	cmp    DWORD PTR [ebx-0x2c1d0b5],ecx
  41b601:	push   ebx
  41b602:	aaa    
  41b603:	and    al,0x6a
  41b605:	outs   dx,DWORD PTR ds:[esi]
  41b606:	cmp    al,0x43
  41b608:	clc    
  41b609:	leave  
  41b60a:	sub    esi,DWORD PTR [ebx-0x41]
  41b60d:	cmp    al,BYTE PTR [ecx+0x6db935dd]
  41b613:	sub    dl,BYTE PTR [eax]
  41b615:	inc    esi
  41b616:	fwait
  41b617:	adc    ecx,eax
  41b619:	xor    al,BYTE PTR [edx+0x1b]
  41b61c:	mov    ah,BYTE PTR [ecx+0x6e4da04a]
  41b622:	cmp    eax,0xf249c393
  41b627:	ret    
  41b628:	or     eax,0xf405368b
  41b62d:	rol    DWORD PTR [edx+0x8],0xc1
  41b631:	cmc    
  41b632:	xor    ebp,DWORD PTR [eax+0x3]
  41b635:	lods   eax,DWORD PTR ds:[esi]
  41b636:	inc    edx
  41b637:	add    DWORD PTR [esi+eax*4],eax
  41b63a:	pmulhw mm2,QWORD PTR [eax+0x16f69960]
  41b641:	xchg   BYTE PTR [edx-0x1f],dl
  41b644:	add    ebp,DWORD PTR [edi+eiz*2+0x60]
  41b648:	rol    BYTE PTR [eax],0x86
  41b64b:	hlt    
  41b64c:	cwde   
  41b64d:	jbe    0x41b691
  41b64f:	lea    esi,[ebx+0x35]
  41b652:	cmp    edx,DWORD PTR [esi]
  41b654:	jns    0x41b62a
  41b656:	xchg   esp,eax
  41b657:	loop   0x41b627
  41b659:	inc    ebx
  41b65a:	xchg   bl,ch
  41b65c:	jbe    0x41b61e
  41b65e:	mov    esi,0xf2e1f79
  41b663:	lahf   
  41b664:	mov    cl,0x80
  41b666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b667:	mov    fs,eax
  41b669:	imul   esi,DWORD PTR [esi],0x16
  41b66c:	mov    eax,ds:0x11360303
  41b671:	icebp  
  41b672:	mov    ecx,0x75c36642
  41b677:	(bad)  
  41b678:	leave  
  41b679:	jnp    0x41b6ed
  41b67b:	add    ah,cl
  41b67d:	xor    esp,ebx
  41b67f:	xor    eax,0x4299f155
  41b684:	retw   
  41b686:	push   ebp
  41b687:	xor    dl,BYTE PTR [esi+0x46]
  41b68a:	retf   0x96f1
  41b68d:	aam    0xc2
  41b68f:	jb     0x41b6fe
  41b691:	ret    
  41b692:	xor    al,0x46
  41b694:	or     bh,BYTE PTR [ebx+0x6ac684c5]
  41b69a:	push   eax
  41b69b:	mov    cs,WORD PTR [ecx]
  41b69d:	neg    BYTE PTR [esi]
  41b69f:	retf   
  41b6a0:	shr    BYTE PTR [edx+0x6ae5b95f],0xa6
  41b6a7:	repz pop ebx
  41b6a9:	sbb    cl,bl
  41b6ab:	push   edx
  41b6ac:	cld    
  41b6ad:	dec    edi
  41b6ae:	add    BYTE PTR [ebx],al
  41b6b0:	stc    
  41b6b1:	cmc    
  41b6b2:	add    cl,BYTE PTR [eax+edx*1+0x10]
  41b6b6:	inc    ebx
  41b6b7:	mov    esi,0xac814cb7
  41b6bc:	repnz repnz cld 
  41b6bf:	jns    0x41b6f5
  41b6c1:	dec    edx
  41b6c2:	jmp    0xae4735c7
  41b6c7:	mov    edi,0x85e94dda
  41b6cc:	inc    edx
  41b6cd:	test   DWORD PTR [edx+eiz*1],ebp
  41b6d0:	mov    eax,0xf8b7d44
  41b6d5:	add    bh,ch
  41b6d7:	mov    BYTE PTR [ecx-0xff91ebc],bh
  41b6dd:	in     eax,0xbb
  41b6df:	push   ebp
  41b6e0:	lea    edi,[ebp+ebp*8+0x5f]
  41b6e4:	sbb    cl,BYTE PTR [edx]
  41b6e6:	jmp    0xb79dfd70
  41b6eb:	dec    edi
  41b6ec:	sti    
  41b6ed:	pop    ebx
  41b6ee:	inc    esi
  41b6ef:	jmp    DWORD PTR [edx+0x19]
  41b6f2:	test   eax,0xbdc9bf85
  41b6f7:	xchg   ebx,eax
  41b6f8:	push   ebx
  41b6f9:	jge    0x41b6d4
  41b6fb:	push   ecx
  41b6fc:	xor    ah,BYTE PTR [eax-0x7]
  41b6ff:	push   es
  41b700:	add    dh,ah
  41b702:	mov    ecx,0x11a0fb4
  41b707:	stos   DWORD PTR es:[edi],eax
  41b708:	(bad)  
  41b709:	repz push cs
  41b70b:	test   eax,0x4200f33a
  41b710:	outs   dx,DWORD PTR ds:[esi]
  41b711:	xor    DWORD PTR ds:0x32944f00,0xf5c8b800
  41b71b:	jne    0x41b6c8
  41b71d:	outs   dx,DWORD PTR ds:[esi]
  41b71e:	fmul   QWORD PTR [ebx+0x2e16a72]
  41b724:	jl     0x41b6ac
  41b726:	push   esp
  41b727:	leave  
  41b728:	fisttp QWORD PTR [edx+0x6b2454f2]
  41b72e:	pop    esp
  41b72f:	xor    eax,DWORD PTR [ecx-0x3d]
  41b732:	inc    edi
  41b733:	or     al,0x86
  41b735:	jmp    0x41b73c
  41b737:	jne    0x41b785
  41b739:	jne    0x41b7b2
  41b73b:	or     bh,al
  41b73d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b73e:	jge    0x41b780
  41b740:	outs   dx,DWORD PTR ds:[esi]
  41b741:	push   esi
  41b742:	loop   0x41b753
  41b744:	lods   al,BYTE PTR ds:[esi]
  41b745:	jne    0x41b73c
  41b747:	and    DWORD PTR [ebx],0xffffff8a
  41b74a:	loope  0x41b760
  41b74c:	clc    
  41b74d:	jmp    0xb46a:0x8e42ff05
  41b754:	xor    BYTE PTR [esi],al
  41b756:	or     dl,BYTE PTR [eax+0x7]
  41b759:	ja     0x41b7a3
  41b75b:	call   FWORD PTR [eax+0x6410c6c0]
  41b761:	jl     0x41b7d7
  41b763:	sbb    edi,DWORD PTR [eax-0x1d74ee16]
  41b769:	xchg   ecx,eax
  41b76a:	cmc    
  41b76b:	jne    0x41b77c
  41b76d:	jne    0x41b7e6
  41b76f:	or     al,0x57
  41b771:	xor    eax,0x74b8fff5
  41b776:	ja     0x41b784
  41b778:	add    BYTE PTR [ebp+esi*2-0x16],ah
  41b77c:	jae    0x41b717
  41b77e:	jae    0x41b775
  41b780:	mov    esi,DWORD PTR [ecx-0x2c3db0ad]
  41b786:	inc    ebp
  41b787:	push   edi
  41b788:	mov    eax,DWORD PTR [esi+0x5eeb8c3f]
  41b78e:	rcr    BYTE PTR [ebx],1
  41b790:	std    
  41b791:	cs push edi
  41b793:	push   eax
  41b794:	inc    eax
  41b795:	xchg   BYTE PTR [edx],dl
  41b797:	pop    edx
  41b798:	lock mov cl,0x66
  41b79b:	loop   0x41b7ab
  41b79d:	inc    esi
  41b79e:	fwait
  41b79f:	jne    0x41b7e3
  41b7a1:	call   0xddf:0x20cc164
  41b7a8:	add    BYTE PTR [esi+0x5389304c],al
  41b7ae:	mov    bh,0xfb
  41b7b0:	aas    
  41b7b1:	xchg   bl,dh
  41b7b3:	mov    ebp,0x369bc674
  41b7b8:	std    
  41b7b9:	pop    eax
  41b7ba:	add    edx,esi
  41b7bc:	je     0x41b784
  41b7be:	fstenv [edx+0x5a]
  41b7c2:	adc    al,0xa6
  41b7c4:	cld    
  41b7c5:	xor    BYTE PTR [edx],dl
  41b7c7:	dec    ebx
  41b7c8:	in     al,dx
  41b7c9:	(bad)  
  41b7ca:	ror    BYTE PTR [eax],1
  41b7cc:	test   ch,dh
  41b7ce:	call   0x8408:0xd87d0006
  41b7d5:	or     eax,0xd900069b
  41b7da:	adc    BYTE PTR [ebx+0x8],bl
  41b7dd:	add    bl,bh
  41b7df:	pop    ebp
  41b7e0:	(bad)  
  41b7e1:	dec    edi
  41b7e2:	setle  BYTE PTR [esi-0x31e1ca04]
  41b7e9:	jb     0x41b770
  41b7eb:	and    al,BYTE PTR [ebx-0x8]
  41b7ee:	pushf  
  41b7ef:	fistp  QWORD PTR [eax]
  41b7f1:	xor    esi,eax
  41b7f3:	test   al,0x60
  41b7f5:	xchg   DWORD PTR [ebx+0x47],eax
  41b7f8:	jae    0x41b83c
  41b7fa:	push   cs
  41b7fb:	test   al,0x36
  41b7fd:	std    
  41b7fe:	xchg   ebx,eax
  41b7ff:	(bad)  
  41b800:	lock aas 
  41b802:	xchg   BYTE PTR [edx+0x78],al
  41b805:	aas    
  41b806:	mov    al,ch
  41b808:	sub    al,0x0
  41b80a:	or     DWORD PTR [edi],ecx
  41b80c:	jns    0x41b889
  41b80e:	dec    esp
  41b80f:	loop   0x41b7e8
  41b811:	shl    BYTE PTR [eax*2-0x4945c082],0xad
  41b819:	scas   eax,DWORD PTR es:[edi]
  41b81a:	inc    ecx
  41b81b:	mov    bh,0xa5
  41b81d:	imul   edi,DWORD PTR [ecx],0xffffffbd
  41b820:	lods   eax,DWORD PTR ds:[esi]
  41b821:	retf   
  41b822:	cmp    dh,dl
  41b824:	shr    DWORD PTR [ebx+0x40d827e],cl
  41b82a:	mov    al,BYTE PTR [edx-0x1f]
  41b82d:	dec    BYTE PTR [ecx-0x29f81f78]
  41b833:	out    dx,eax
  41b834:	adc    edi,DWORD PTR [ecx]
  41b836:	leave  
  41b837:	out    dx,eax
  41b838:	mov    bl,0x56
  41b83a:	jle    0x41b7c3
  41b83c:	aad    0x17
  41b83e:	xchg   esi,eax
  41b83f:	add    ah,cl
  41b841:	xchg   BYTE PTR [eax],al
  41b843:	and    DWORD PTR [edi],ecx
  41b845:	repz rcl ah,1
  41b848:	mov    ds:0x35261677,al
  41b84d:	and    DWORD PTR [ebx+ecx*2],eax
  41b850:	jno    0x41b7d5
  41b852:	push   esi
  41b853:	bound  ecx,QWORD PTR [eax-0x613b836e]
  41b859:	jns    0x41b8a1
  41b85b:	ss dec edx
  41b85d:	dec    bl
  41b85f:	mov    ch,0x40
  41b861:	fs push esi
  41b863:	push   ds
  41b864:	mov    BYTE PTR [ebp+0x5d0e1adf],dh
  41b86a:	shl    BYTE PTR [esi+eiz*8-0x12],1
  41b86e:	inc    ebx
  41b86f:	xchg   al,ch
  41b871:	mov    bh,0x7c
  41b873:	inc    esp
  41b874:	xchg   edx,eax
  41b875:	stos   DWORD PTR es:[edi],eax
  41b876:	mov    edx,0x7ce13ac7
  41b87b:	dec    ebx
  41b87c:	or     bl,BYTE PTR ds:[esi-0x2455b396]
  41b883:	inc    ebp
  41b884:	inc    edx
  41b885:	lea    ebp,[ecx]
  41b887:	xor    DWORD PTR [ecx+0x5a],eax
  41b88a:	push   ds
  41b88b:	push   cs
  41b88c:	mov    ebx,0x13c56c0b
  41b891:	pop    es
  41b892:	mov    ecx,0xd95f6ed6
  41b897:	jg     0x41b833
  41b899:	pop    ecx
  41b89a:	call   esi
  41b89c:	xchg   BYTE PTR [edx+0x2a],dl
  41b89f:	jo     0x41b85a
  41b8a1:	in     eax,0x5c
  41b8a3:	dec    eax
  41b8a4:	xor    bl,BYTE PTR [edx+0x53]
  41b8a7:	add    BYTE PTR [edx-0x3f06837b],al
  41b8ad:	adc    al,0x6
  41b8af:	(bad)  
  41b8b0:	das    
  41b8b1:	cmp    ah,BYTE PTR [eax-0x17]
  41b8b4:	push   eax
  41b8b5:	xor    al,0x5a
  41b8b7:	fcmovnb st,st(5)
  41b8b9:	inc    edx
  41b8ba:	lea    ebp,[ecx-0x49a5c932]
  41b8c0:	outs   dx,DWORD PTR ds:[esi]
  41b8c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8c2:	pop    ss
  41b8c3:	sub    DWORD PTR [edx+0x3cf94cb9],ecx
  41b8c9:	inc    ecx
  41b8ca:	aaa    
  41b8cb:	test   eax,0xe9058497
  41b8d0:	mov    ?,WORD PTR [ecx+0x172668e5]
  41b8d6:	pop    es
  41b8d7:	jmp    0x6c9ca961
  41b8dc:	dec    DWORD PTR [edx-0x8c6890d]
  41b8e2:	repnz hlt 
  41b8e4:	sbb    eax,0x15551c86
  41b8e9:	inc    edi
  41b8ea:	or     ch,BYTE PTR [edi+edi*8-0x76]
  41b8ee:	repz push esi
  41b8f0:	cmp    edi,esi
  41b8f2:	pop    ecx
  41b8f3:	shr    ebp,0xe
  41b8f6:	dec    edx
  41b8f7:	add    bh,ch
  41b8f9:	mov    bh,0x5e
  41b8fb:	add    bl,bh
  41b8fd:	inc    edx
  41b8fe:	jg     0x41b8b5
  41b900:	dec    edi
  41b901:	jb     0x41b8f8
  41b903:	inc    DWORD PTR [edi-0x6b]
  41b906:	xor    edi,edi
  41b908:	mov    al,ds:0xcc6c3
  41b90d:	adc    BYTE PTR [ebp-0x79],dl
  41b910:	shl    cl,0x8e
  41b913:	jg     0x41b89a
  41b915:	aas    
  41b916:	jb     0x41b90d
  41b918:	call   FWORD PTR [edi]
  41b91a:	imul   eax,DWORD PTR [eax+eax*1],0xffffff9f
  41b91e:	inc    edx
  41b91f:	mov    es,eax
  41b921:	sub    edi,DWORD PTR [edi]
  41b923:	mov    edx,0x38448401
  41b928:	rcl    dh,0x80
  41b92b:	push   es
  41b92c:	add    BYTE PTR [edx+0xb],bl
  41b92f:	fild   WORD PTR [ecx+0x6e6c3]
  41b935:	outs   dx,DWORD PTR ds:[esi]
  41b936:	push   ecx
  41b937:	pop    ebp
  41b938:	(bad)  
  41b939:	jmp    0x6252:0x30ffefad
  41b940:	cmp    al,0xb7
  41b942:	dec    BYTE PTR [ecx]
  41b944:	call   0x3432bb
  41b949:	jmp    0x41b8cc
  41b94b:	add    eax,0xa420084
  41b950:	add    dl,ah
  41b952:	mov    edx,0x7510fca2
  41b957:	inc    edx
  41b958:	lea    ebp,[edx-0x4f001053]
  41b95e:	push   ecx
  41b95f:	cmc    
  41b960:	adc    eax,0x329103
  41b965:	ret    0xa2ba
  41b968:	cld    
  41b969:	mov    al,ds:0x3aff4274
  41b96e:	mov    bh,BYTE PTR [edi+0x45]
  41b971:	add    BYTE PTR [esi+0x7e444ea3],al
  41b977:	fild   DWORD PTR [esi]
  41b979:	push   eax
  41b97a:	out    dx,al
  41b97b:	fisttp WORD PTR [ebp-0x3]
  41b97e:	icebp  
  41b97f:	sbb    bl,cl
  41b981:	syscall 
  41b983:	push   esp
  41b984:	les    ecx,FWORD PTR [edx+ecx*1]
  41b987:	rol    DWORD PTR [esi],0x0
  41b98a:	xchg   bl,cl
  41b98c:	ret    
  41b98d:	jb     0x41ba0d
  41b98f:	push   ss
  41b990:	xor    BYTE PTR [ebx+0x4fc42ccb],0xae
  41b997:	pop    esi
  41b998:	(bad)  
  41b999:	(bad)  
  41b99a:	mov    ecx,0xfc08523c
  41b99f:	arpl   di,cx
  41b9a1:	push   edi
  41b9a2:	stos   BYTE PTR es:[edi],al
  41b9a3:	(bad)  
  41b9a4:	les    eax,FWORD PTR [ebx-0x79759b43]
  41b9aa:	xchg   BYTE PTR [ebx-0x4ff474fa],bl
  41b9b0:	ret    0x89fc
  41b9b3:	dec    ebx
  41b9b4:	push   esi
  41b9b5:	fs (bad) 
  41b9b7:	pop    ebx
  41b9b8:	push   cs
  41b9b9:	mov    ecx,0x69a88
  41b9be:	add    eax,DWORD PTR [esi]
  41b9c0:	jb     0x41b9bb
  41b9c2:	imul   ecx,esp,0xd4c60ed5
  41b9c8:	les    edx,FWORD PTR [esi-0x41]
  41b9cb:	sbb    dh,al
  41b9cd:	cld    
  41b9ce:	sar    BYTE PTR ds:0x9b870456,1
  41b9d4:	push   es
  41b9d5:	mov    eax,DWORD PTR [eax]
  41b9d7:	or     ebp,edi
  41b9d9:	ret    0x39fc
  41b9dc:	sub    edx,DWORD PTR [esi+0x74]
  41b9df:	scas   al,BYTE PTR es:[edi]
  41b9e0:	pop    ebx
  41b9e1:	push   cs
  41b9e2:	std    
  41b9e3:	xchg   ebx,eax
  41b9e4:	ja     0x41b9dd
  41b9e6:	aas    
  41b9e7:	xchg   BYTE PTR [ebx+0x3],ah
  41b9ea:	add    al,BYTE PTR [edi-0x64fc1ebe]
  41b9f0:	std    
  41b9f1:	(bad)  
  41b9f2:	inc    edi
  41b9f3:	push   edi
  41b9f4:	test   DWORD PTR [ebp+0x47],ebp
  41b9f7:	inc    edx
  41b9f8:	in     eax,dx
  41b9f9:	mov    al,0xcc
  41b9fb:	xchg   esp,eax
  41b9fc:	dec    esi
  41b9fd:	rol    DWORD PTR [ebx-0x7a],cl
  41ba00:	shr    DWORD PTR [eax+eax*1],0xb7
  41ba04:	add    dl,0x7a
  41ba07:	inc    esp
  41ba08:	xchg   esi,eax
  41ba09:	fwait
  41ba0a:	jle    0x41ba50
  41ba0c:	(bad)  
  41ba0d:	mov    al,0x34
  41ba0f:	std    
  41ba10:	mov    esi,0x84caca7c
  41ba15:	mov    al,0x7e
  41ba17:	add    al,0xce
  41ba19:	add    eax,0x23f1bacd
  41ba1e:	inc    edi
  41ba1f:	repnz std 
  41ba21:	loopne 0x41ba26
  41ba23:	xchg   BYTE PTR [ebp-0x5b],bh
  41ba26:	(bad)  [eax-0x51fc1f7c]
  41ba2c:	cmp    esi,ebp
  41ba2e:	int3   
  41ba2f:	xchg   edx,eax
  41ba30:	mov    eax,cs
  41ba32:	call   0xd8fa4700
  41ba37:	xchg   ebx,eax
  41ba38:	mov    ch,0x6d
  41ba3a:	xchg   edi,eax
  41ba3b:	add    BYTE PTR [esp+eax*4-0x35],bh
  41ba3f:	xor    ebx,DWORD PTR [esi-0x5b]
  41ba42:	dec    ebx
  41ba43:	int    0x6a
  41ba45:	push   ecx
  41ba46:	mov    eax,ds:0x9e79bf2c
  41ba4b:	pop    es
  41ba4c:	xchg   BYTE PTR [edi-0x7cfaffde],dh
  41ba52:	sbb    al,0x5
  41ba54:	mov    dh,0x83
  41ba56:	cmc    
  41ba57:	aas    
  41ba58:	xchg   esi,eax
  41ba59:	add    ah,cl
  41ba5b:	js     0x41baa0
  41ba5d:	call   0x791a:0x8432eb46
  41ba64:	sbb    DWORD PTR [ebx-0x78d24df7],ebx
  41ba6a:	repnz gs inc ebp
  41ba6d:	adc    BYTE PTR [edi],ch
  41ba6f:	mov    esi,0x72060590
  41ba74:	cmp    BYTE PTR [edi-0xd752237],0xf2
  41ba7b:	hlt    
  41ba7c:	mov    ecx,0x6e94a32
  41ba81:	or     BYTE PTR [esi],ch
  41ba83:	in     eax,dx
  41ba84:	test   DWORD PTR [esi],ecx
  41ba86:	sub    bl,BYTE PTR [esi-0x169fbdc1]
  41ba8c:	cmp    eax,0x85e9092e
  41ba91:	test   DWORD PTR [ebp-0x3b],edi
  41ba94:	fld    DWORD PTR [esi-0x447e9c5]
  41ba9a:	sbb    DWORD PTR [ecx+0x7cc9bf85],ebp
  41baa0:	add    BYTE PTR [ebx-0x3a44f4dd],cl
  41baa6:	call   0x2b53:0xe5843907
  41baad:	add    DWORD PTR [edx+0x5d],0x58f4ae72
  41bab4:	jb     0x41baf8
  41bab6:	ss retf 
  41bab8:	sub    al,0x4e
  41baba:	aas    
  41babb:	or     ch,cl
  41babd:	test   DWORD PTR [edi+0x18a63dc9],edi
  41bac3:	or     ch,BYTE PTR [edi+ebp*4-0x7a]
  41bac7:	pop    eax
  41bac8:	fs lahf 
  41baca:	mov    bl,BYTE PTR [eax+0x43]
  41bacd:	pop    ebx
  41bace:	repz repnz cld 
  41bad1:	xchg   ecx,eax
  41bad2:	xor    cl,BYTE PTR [edx-0x17]
  41bad5:	push   es
  41bad6:	ret    
  41bad7:	jge    0x41babd
  41bad9:	or     BYTE PTR [eax],cl
  41badb:	mul    ch
  41badd:	(bad)  
  41bade:	cmp    eax,0x7662007f
  41bae3:	stos   BYTE PTR es:[edi],al
  41bae4:	pop    es
  41bae5:	xor    edi,DWORD PTR ds:0xbbb6c039
  41baeb:	call   0xb3bee6f7
  41baf0:	clc    
  41baf1:	sbb    al,0xc6
  41baf3:	leave  
  41baf4:	push   ebp
  41baf5:	xchg   esp,eax
  41baf6:	push   0x59
  41baf8:	mov    esi,DWORD PTR [edi+0x78e8ce03]
  41bafe:	ja     0x41baf5
  41bb00:	inc    DWORD PTR [esi+edx*8-0x12fffb8a]
  41bb07:	jle    0x41baea
  41bb09:	push   esi
  41bb0a:	add    DWORD PTR [ebp+esi*8+0x75],ecx
  41bb0e:	out    0x66,eax
  41bb10:	push   esp
  41bb11:	sti    
  41bb12:	test   eax,0x62f08177
  41bb17:	jo     0x41bb90
  41bb19:	add    al,0xdd
  41bb1b:	jle    0x41bafe
  41bb1d:	inc    ecx
  41bb1e:	pop    edx
  41bb1f:	add    dl,BYTE PTR [edi+edi*8]
  41bb22:	xor    al,0xc8
  41bb24:	xor    eax,esi
  41bb26:	sub    al,0x93
  41bb28:	adc    BYTE PTR [ecx],0x27
  41bb2b:	push   ecx
  41bb2c:	add    DWORD PTR [edx-0x75fbf941],ecx
  41bb32:	push   edx
  41bb33:	xor    DWORD PTR [ebx],0xffffff88
  41bb36:	pop    DWORD PTR [esi+0x31]
  41bb39:	enter  0x9add,0x60
  41bb3d:	add    ch,al
  41bb3f:	inc    esi
  41bb40:	cmc    
  41bb41:	ja     0x41bbbe
  41bb43:	cmp    DWORD PTR [edi+edi*8-0x50],ebx
  41bb47:	inc    edx
  41bb48:	cmc    
  41bb49:	adc    eax,0x3276af
  41bb4e:	mov    edx,0x44f7f52d
  41bb53:	jo     0x41bb26
  41bb55:	push   esi
  41bb56:	jmp    0x86e9a5e3
  41bb5b:	aad    0xc0
  41bb5d:	cld    
  41bb5e:	or     al,0xad
  41bb60:	and    BYTE PTR [ecx-0x2d],bl
  41bb63:	lods   eax,DWORD PTR ds:[esi]
  41bb64:	bnd call edx
  41bb67:	hlt    
  41bb68:	fidivr DWORD PTR [esi+0x0]
  41bb6b:	xor    dl,BYTE PTR [ebp+ecx*1+0x0]
  41bb6f:	xchg   BYTE PTR [ebx+ebx*1-0x27],bl
  41bb73:	mov    eax,0x92142123
  41bb78:	jne    0x41bb39
  41bb7a:	jb     0x41bb12
  41bb7c:	add    edx,edx
  41bb7e:	xor    eax,0x6d410f9
  41bb83:	push   esi
  41bb84:	or     BYTE PTR [edx+0x10],bl
  41bb87:	fidivr WORD PTR [edi-0x1b1e033e]
  41bb8d:	(bad)  
  41bb8e:	cmp    ch,dl
  41bb90:	mov    bh,0x2a
  41bb92:	mov    DWORD PTR [ebx+0x77],ecx
  41bb95:	aaa    
  41bb96:	mov    ecx,DWORD PTR [ebx]
  41bb98:	adc    al,0xc1
  41bb9a:	cld    
  41bb9b:	rol    DWORD PTR [ebx+0x56],0x4f
  41bb9f:	xchg   BYTE PTR [ebx+0x54],ch
  41bba2:	add    eax,DWORD PTR [ebx]
  41bba4:	(bad)  
  41bba5:	(bad)  
  41bba6:	push   edi
  41bba7:	sahf   
  41bba8:	loope  0x41bbe7
  41bbaa:	add    BYTE PTR [esi-0x117d8e1f],al
  41bbb0:	jno    0x41bb72
  41bbb2:	cld    
  41bbb3:	ss hlt 
  41bbb5:	enter  0xfb4f,0x26
  41bbb9:	cli    
  41bbba:	dec    edi
  41bbbb:	outs   dx,BYTE PTR ds:[esi]
  41bbbc:	dec    edi
  41bbbd:	add    ebp,edi
  41bbbf:	jns    0x41bbad
  41bbc1:	leave  
  41bbc2:	psrlw  mm5,mm4
  41bbc5:	(bad)  
  41bbc8:	mov    al,ds:0xe47a72c1
  41bbcd:	xor    cl,BYTE PTR [eax]
  41bbcf:	add    BYTE PTR [ebp+0x51085db0],dh
  41bbd5:	inc    edx
  41bbd6:	mul    BYTE PTR [edi]
  41bbd8:	jne    0x41bbdc
  41bbda:	loope  0x41bb60
  41bbdc:	cmp    DWORD PTR [ebx+0x16],eax
  41bbdf:	push   es
  41bbe0:	or     al,0x9a
  41bbe2:	or     DWORD PTR [edi-0x66],0x6a
  41bbe6:	jmp    0x79dc:0x1a812bcd
  41bbed:	jl     0x41bc69
  41bbef:	leave  
  41bbf0:	mov    ebx,0x492d9fcc
  41bbf5:	test   al,dh
  41bbf7:	add    esi,DWORD PTR [ebp-0x127abb33]
  41bbfd:	or     eax,0x528e3f53
  41bc02:	mov    al,0x7c
  41bc04:	mov    edx,?
  41bc06:	into   
  41bc07:	inc    ebx
  41bc08:	xchg   BYTE PTR [ecx],bl
  41bc0a:	mov    ebp,0xed000758
  41bc0f:	adc    eax,0x23aeb50
  41bc14:	shl    esp,1
  41bc16:	test   BYTE PTR [ebp-0x7c],bl
  41bc19:	iret   
  41bc1a:	xchg   ebp,eax
  41bc1b:	ret    
  41bc1c:	pop    ecx
  41bc1d:	push   0x6
  41bc1f:	xor    al,0x86
  41bc21:	inc    edx
  41bc22:	add    al,0x52
  41bc24:	or     ch,0x23
  41bc27:	leave  
  41bc28:	xor    ecx,DWORD PTR [edx-0x6f]
  41bc2b:	enter  0x11b6,0x87
  41bc2f:	sti    
  41bc30:	xor    ebp,ecx
  41bc32:	adc    ebx,esp
  41bc34:	add    BYTE PTR [ebx-0x1b],al
  41bc37:	loopne 0x41bc3c
  41bc39:	add    al,BYTE PTR [edx+0x43ec095c]
  41bc3f:	outs   dx,BYTE PTR ds:[esi]
  41bc40:	inc    esi
  41bc41:	jb     0x41bc5e
  41bc43:	leave  
  41bc44:	mov    esi,0x76e142c1
  41bc49:	les    ecx,FWORD PTR [edx+0x11]
  41bc4c:	leave  
  41bc4d:	(bad)  [esi]
  41bc4f:	or     al,cl
  41bc51:	ret    
  41bc52:	ins    DWORD PTR es:[edi],dx
  41bc53:	repnz scas al,BYTE PTR es:[edi]
  41bc55:	sar    BYTE PTR [edi-0x2fcf583],1
  41bc5b:	add    ecx,ebp
  41bc5d:	xlat   BYTE PTR ds:[ebx]
  41bc5e:	sbb    esp,DWORD PTR [eax-0x18]
  41bc61:	jne    0x41bc2c
  41bc63:	dec    esp
  41bc64:	loope  0x41bc39
  41bc66:	inc    ecx
  41bc67:	pop    esp
  41bc68:	xchg   ecx,eax
  41bc69:	aas    
  41bc6a:	jle    0x41bc5e
  41bc6c:	jle    0x41bc10
  41bc6e:	add    eax,0xf4456c1e
  41bc73:	inc    ecx
  41bc74:	add    ecx,DWORD PTR [edx-0x54068483]
  41bc7a:	inc    esi
  41bc7b:	fbld   TBYTE PTR [eax]
  41bc7d:	or     bh,dh
  41bc7f:	adc    ecx,ebp
  41bc81:	dec    eax
  41bc82:	aaa    
  41bc83:	cld    
  41bc84:	out    0x84,eax
  41bc86:	idiv   BYTE PTR ds:0x36b64074
  41bc8c:	sub    DWORD PTR [ebp-0x7a16a605],edi
  41bc92:	jge    0x41bd0f
  41bc94:	fst    QWORD PTR [edx-0x7a]
  41bc97:	repnz lahf 
  41bc99:	add    ch,cl
  41bc9b:	psllq  mm7,QWORD PTR [edx]
  41bc9e:	jne    0x41bc8c
  41bca0:	add    DWORD PTR [ecx+0x9e18e3a],esi
  41bca6:	sub    eax,DWORD PTR [edx+0xa]
  41bca9:	ins    DWORD PTR es:[edi],dx
  41bcaa:	(bad)
  41bcad:	jb     0x41bcf6
  41bcaf:	dec    esi
  41bcb0:	pusha  
  41bcb1:	jmp    0x8343b284
  41bcb6:	test   BYTE PTR [eax],bl
  41bcb8:	loop   0x41bc50
  41bcba:	sar    BYTE PTR [esi-0xe],0x3e
  41bcbe:	lods   eax,DWORD PTR ds:[esi]
  41bcbf:	xchg   edi,eax
  41bcc1:	in     eax,dx
  41bcc2:	test   ebx,eax
  41bcc4:	sti    
  41bcc5:	push   ebp
  41bcc6:	stos   DWORD PTR es:[edi],eax
  41bcc7:	leave  
  41bcc8:	add    al,0x0
  41bcca:	xchg   ebx,eax
  41bccb:	into   
  41bccc:	dec    ecx
  41bccd:	add    BYTE PTR [ebx+eax*4-0x79],bl
  41bcd1:	leave  
  41bcd2:	fwait
  41bcd3:	jno    0x41bc56
  41bcd5:	adc    eax,0x49ce87
  41bcda:	push   cx
  41bcdc:	jle    0x41bcec
  41bcde:	outs   dx,DWORD PTR ds:[esi]
  41bcdf:	(bad)
  41bce2:	das    
  41bce3:	inc    ebx
  41bce4:	or     bh,BYTE PTR [ebx]
  41bce6:	ficom  WORD PTR [ebx]
  41bce8:	jecxz  0x41bc6d
  41bcea:	test   DWORD PTR [esi+0x57328bc9],0x342f43b2
  41bcf4:	push   edi
  41bcf5:	push   esi
  41bcf6:	pushf  
  41bcf7:	mov    ecx,0x2f5f33f5
  41bcfc:	mov    cl,0x88
  41bcfe:	add    bh,ch
  41bd00:	inc    edx
  41bd01:	or     al,BYTE PTR [ebp-0x74d1ed5a]
  41bd07:	call   0xdcfb:0xdf43b25e
  41bd0e:	add    DWORD PTR [ebp+0x2f097e46],0x44
  41bd15:	fnstcw WORD PTR [ebx]
  41bd17:	sahf   
  41bd18:	adc    al,0xfe
  41bd1a:	jmp    0x41bced
  41bd1c:	sti    
  41bd1d:	cli    
  41bd1e:	imul   esp,DWORD PTR [eax-0x50000d02],0x878bf443
  41bd28:	adc    DWORD PTR [ebx],esp
  41bd2a:	inc    ecx
  41bd2b:	push   ss
  41bd2c:	mov    esi,0x42af008a
  41bd31:	mov    ah,0x28
  41bd33:	push   edi
  41bd34:	add    ecx,DWORD PTR [edx]
  41bd36:	call   0x3647ea
  41bd3b:	sbb    eax,DWORD PTR [ebx+0x5af44276]
  41bd41:	es mov eax,0xfd0e2886
  41bd47:	mov    edi,DWORD PTR [edi+0x7e]
  41bd4a:	inc    eax
  41bd4b:	xchg   al,dh
  41bd4d:	shl    DWORD PTR [esi+0x61],0xf4
  41bd51:	push   es
  41bd52:	add    BYTE PTR [esi+0xe280168],al
  41bd58:	sub    DWORD PTR [esi],ecx
  41bd5a:	je     0x41bcfc
  41bd5c:	cmp    BYTE PTR [ebx],ah
  41bd5e:	call   0xfd0e6049
  41bd63:	add    BYTE PTR ds:0x75142a30,cl
  41bd69:	mov    al,0x47
  41bd6b:	push   0xffffff86
  41bd6d:	test   BYTE PTR [ebx+0x18],0xf
  41bd71:	gs jne 0x41bdd0
  41bd74:	add    bl,0xed
  41bd77:	adc    BYTE PTR [edi-0x6e74c895],al
  41bd7d:	and    edx,esi
  41bd7f:	xlat   BYTE PTR ds:[ebx]
  41bd80:	xchg   ebp,eax
  41bd81:	push   0x6
  41bd83:	pop    ebp
  41bd84:	pop    eax
  41bd85:	loopne 0x41bd50
  41bd87:	pop    edx
  41bd88:	dec    ebp
  41bd89:	sub    ebx,esi
  41bd8b:	(bad)  
  41bd8c:	cld    
  41bd8d:	mov    al,0xf6
  41bd8f:	push   ebp
  41bd90:	cmp    DWORD PTR [eax-0x35],edi
  41bd93:	xor    dh,al
  41bd95:	out    dx,al
  41bd96:	mov    ch,0x73
  41bd98:	jae    0x41bd7a
  41bd9a:	push   edi
  41bd9b:	or     al,0xfd
  41bd9d:	cmp    eax,0xd68401c5
  41bda2:	lock aas 
  41bda4:	add    eax,0xc739172a
  41bda9:	(bad)  
  41bdab:	call   0x30088e2f
  41bdb0:	test   DWORD PTR ds:0x8913f770,esp
  41bdb6:	dec    ebp
  41bdb7:	imul   edi,DWORD PTR [edi+0x7a7071bb],0x7a79d942
  41bdc1:	jl     0x41bd96
  41bdc3:	cmp    BYTE PTR [ecx],0xf6
  41bdc6:	idiv   DWORD PTR [eax+0x0]
  41bdc9:	(bad)  
  41bdca:	push   edx
  41bdcb:	push   0xf07ddecc
  41bdd0:	add    BYTE PTR [eax+0x10320cf],ah
  41bdd6:	add    ecx,edx
  41bdd8:	dec    edi
  41bdd9:	mov    ecx,ecx
  41bddb:	pop    ds
  41bddc:	cld    
  41bddd:	add    BYTE PTR ds:0x408abde5,al
  41bde3:	js     0x41bda2
  41bde5:	ficomp DWORD PTR [eax+eiz*4]
  41bde8:	cs push edx
  41bdeb:	lock adc BYTE PTR [esi+0x15],al
  41bdef:	data16 into 
  41bdf1:	xchg   ebp,eax
  41bdf2:	pop    eax
  41bdf3:	js     0x41be40
  41bdf5:	or     cl,0x29
  41bdf8:	clc    
  41bdf9:	(bad)  
  41bdfa:	xchg   edx,eax
  41bdfb:	mov    ecx,0xe5f78249
  41be00:	int    0x87
  41be02:	inc    eax
  41be03:	(bad)  
  41be05:	mov    ecx,0xaf141ec1
  41be0a:	test   dh,cl
  41be0c:	aad    0xb6
  41be0e:	sub    BYTE PTR [ebx+0x20e8c725],0x14
  41be15:	xchg   DWORD PTR [ebx+0x43ffce47],eax
  41be1b:	mov    DWORD PTR [edx],eax
  41be1d:	push   ebp
  41be1e:	or     ebx,DWORD PTR [ecx+0x3]
  41be21:	cmp    cl,BYTE PTR [ebp+0x78]
  41be24:	ds mov es,edi
  41be27:	and    BYTE PTR [eax+0x77],dl
  41be2a:	adc    cl,BYTE PTR [ecx]
  41be2c:	lods   eax,DWORD PTR ds:[esi]
  41be2d:	add    dl,bl
  41be2f:	jl     0x41be3c
  41be31:	fldcw  WORD PTR [esi+0x7d]
  41be34:	jp     0x41be2d
  41be36:	push   cs
  41be37:	add    al,0xa
  41be39:	fldcw  WORD PTR [ebp-0x7a168486]
  41be3f:	jg     0x41bebc
  41be41:	icebp  
  41be42:	pop    ebp
  41be43:	mov    dl,bh
  41be45:	fild   WORD PTR [edx+0x7f]
  41be48:	jnp    0x41be47
  41be4a:	dec    ebp
  41be4b:	cmp    dl,0xcf
  41be4e:	inc    edx
  41be4f:	jg     0x41becc
  41be51:	or     DWORD PTR [edx-0x48],eax
  41be54:	cli    
  41be55:	mov    edi,0x17b7f42
  41be5a:	xor    dh,BYTE PTR [eax-0x15bd5006]
  41be60:	cmp    DWORD PTR [edi],edi
  41be62:	(bad)  
  41be63:	(bad)  
  41be65:	lahf   
  41be66:	inc    edx
  41be67:	xchg   BYTE PTR [ebx],cl
  41be69:	jmp    0x41beb1
  41be6b:	adc    ebx,DWORD PTR [ebp+0x37]
  41be6e:	pop    ebx
  41be6f:	leave  
  41be70:	icebp  
  41be71:	adc    BYTE PTR [ebx-0x3c],cl
  41be74:	or     ecx,ebp
  41be76:	test   DWORD PTR [ecx+0x35],eax
  41be79:	sar    ebp,0x2
  41be7c:	or     bh,BYTE PTR [edx-0x3e8580d0]
  41be82:	jl     0x41beb2
  41be84:	loop   0x41bef9
  41be86:	retf   0xf27d
  41be89:	push   esi
  41be8a:	inc    edx
  41be8b:	repnz loope 0x41bef9
  41be8e:	mov    edx,0x46f27d
  41be93:	adc    bh,ah
  41be95:	or     ecx,ebp
  41be97:	test   DWORD PTR [edx+0x7a],ebp
  41be9a:	ds retf 
  41be9c:	jle    0x41bed4
  41be9e:	adc    bh,BYTE PTR [ebp+ebp*8+0x19]
  41bea2:	lahf   
  41bea3:	mov    dh,0xca
  41bea5:	jp     0x41be94
  41bea7:	xchg   BYTE PTR [edi-0x1f],ch
  41beaa:	xchg   edx,ecx
  41beac:	jle    0x41bea0
  41beae:	stos   BYTE PTR es:[edi],al
  41beaf:	push   es
  41beb0:	cmp    DWORD PTR [ecx],0x1a26c400
  41beb6:	jb     0x41be42
  41beb8:	xchg   BYTE PTR [ebp+0xc],bh
  41bebb:	xchg   DWORD PTR [edi*8+0x1ea198fe],ebp
  41bec2:	mov    eax,0xf88146ac
  41bec7:	loop   0x41be4f
  41bec9:	jbe    0x41bf1c
  41becb:	in     al,0x59
  41becd:	and    bh,BYTE PTR [eax-0x377eb964]
  41bed3:	mov    dh,0x8d
  41bed5:	mov    al,BYTE PTR [eax]
  41bed7:	outs   dx,DWORD PTR ds:[esi]
  41bed8:	aas    
  41bed9:	jg     0x41be67
  41bedb:	cs aaa 
  41bedd:	cmc    
  41bede:	call   FWORD PTR [eax]
  41bee0:	ret    
  41bee1:	cmp    eax,DWORD PTR [eax]
  41bee3:	mov    ds:0xb7e9734d,al
  41bee8:	inc    esi
  41bee9:	or     al,BYTE PTR [eax]
  41beeb:	push   0x173bf839
  41bef0:	cmp    ah,BYTE PTR [eax]
  41bef2:	test   DWORD PTR [eax],ecx
  41bef4:	cmp    DWORD PTR [edx+edx*2],eax
  41bef7:	add    bh,dh
  41bef9:	pop    esp
  41befa:	std    
  41befb:	(bad)  
  41befc:	cwde   
  41befd:	gs das 
  41beff:	sub    BYTE PTR [edi+0x3],dl
  41bf02:	or     ch,bl
  41bf04:	std    
  41bf05:	retf   
  41bf06:	lds    ebp,FWORD PTR [ecx-0x4a]
  41bf09:	into   
  41bf0a:	repnz (bad) 
  41bf0c:	ffreep st(0)
  41bf0e:	sub    bh,BYTE PTR [eax+0x3de23f1c]
  41bf14:	mov    eax,ds:0xda89f580
  41bf19:	push   0xffffffba
  41bf1b:	inc    ebx
  41bf1c:	(bad)  
  41bf1e:	push   ebx
  41bf1f:	pop    ebp
  41bf20:	hlt    
  41bf21:	adc    DWORD PTR [edi-0x75],0xffffff9b
  41bf25:	(bad)
  41bf28:	mov    bh,0x3e
  41bf2a:	or     dl,BYTE PTR [esi-0x7a]
  41bf2d:	mov    edi,0xd4f38af5
  41bf32:	(bad)  
  41bf33:	cld    
  41bf34:	mov    eax,ds:0x48159ea0
  41bf39:	imul   eax,DWORD PTR [esi],0xb3cd0b8b
  41bf3f:	cld    
  41bf40:	mov    eax,ebx
  41bf42:	and    al,0x0
  41bf44:	outs   dx,BYTE PTR ds:[esi]
  41bf45:	inc    eax
  41bf46:	mov    eax,0xc6e079ff
  41bf4b:	or     al,0xa
  41bf4d:	aaa    
  41bf4e:	or     eax,0xc0e48600
  41bf53:	dec    edi
  41bf54:	adc    esp,edi
  41bf56:	sub    bh,cl
  41bf58:	pop    ecx
  41bf59:	mov    ecx,0x5e005056
  41bf5e:	inc    esp
  41bf5f:	mov    bh,0xff
  41bf61:	dec    ecx
  41bf62:	ffreep st(6)
  41bf64:	or     al,0xa
  41bf66:	pop    edi
  41bf67:	or     eax,0xf3558600
  41bf6c:	mov    bh,BYTE PTR [ebx+0x4be84ef7]
  41bf72:	push   edi
  41bf73:	push   cs
  41bf74:	add    BYTE PTR ds:0x38b56aa,cl
  41bf7a:	inc    eax
  41bf7b:	mov    bl,0xfc
  41bf7d:	adc    DWORD PTR [ecx+ebx*4-0x7e],ebx
  41bf81:	stos   BYTE PTR es:[edi],al
  41bf82:	repnz (bad) 
  41bf84:	cld    
  41bf85:	push   esi
  41bf86:	adc    ecx,eax
  41bf88:	in     eax,dx
  41bf89:	xchg   BYTE PTR [ebx-0x7f],ch
  41bf8c:	mov    edi,0xff1ae781
  41bf91:	jmp    0x42c45901
  41bf96:	add    cl,al
  41bf98:	cld    
  41bf99:	cmp    BYTE PTR ss:[edx],dl
  41bf9c:	cmp    BYTE PTR [ebx+ebp*4+0x6],dh
  41bfa0:	or     esi,0xc0841828
  41bfa6:	inc    edx
  41bfa7:	loope  0x41bfac
  41bfa9:	xchg   ah,ch
  41bfab:	aam    0x90
  41bfad:	xor    al,0x8a
  41bfaf:	mov    eax,0xe1080bab
  41bfb4:	add    ebp,DWORD PTR [edi+esi*1]
  41bfb7:	jle    0x41bff1
  41bfb9:	(bad)  
  41bfba:	sbb    bl,BYTE PTR [ecx]
  41bfbc:	xchg   esi,eax
  41bfbd:	cmp    al,0x42
  41bfbf:	loope  0x41bfee
  41bfc1:	add    BYTE PTR [eax-0x39],cl
  41bfc4:	jge    0x41bf79
  41bfc6:	fldcw  WORD PTR [edx+0x78]
  41bfc9:	dec    edi
  41bfca:	xchg   BYTE PTR [edx+0x30],al
  41bfcd:	retf   0x79c4
  41bfd0:	loopne 0x41c02a
  41bfd2:	jnp    0x41bf84
  41bfd4:	sub    eax,0x25c7d1c1
  41bfd9:	int3   
  41bfda:	leave  
  41bfdb:	in     al,dx
  41bfdc:	neg    BYTE PTR [ebp+edi*8-0xa]
  41bfe0:	pushf  
  41bfe1:	lods   al,BYTE PTR ds:[esi]
  41bfe2:	js     0x41c020
  41bfe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfe5:	rcr    eax,0x1b
  41bfe8:	pusha  
  41bfe9:	mov    esp,0x7a654838
  41bfee:	xor    DWORD PTR [ecx-0x20],edi
  41bff1:	mov    es,WORD PTR [esi+edx*1]
  41bff4:	call   0xcc1:0x171222c1
  41bffb:	push   DWORD PTR [eax]
  41bffd:	push   esp
  41bffe:	inc    DWORD PTR [eax+0x274c110]
  41c004:	rol    BYTE PTR [ebx-0x7a],cl
  41c007:	int    0x68
  41c009:	test   edx,edi
  41c00b:	js     0x41bff0
  41c00d:	xchg   DWORD PTR [edx+eax*2],edx
  41c010:	loope  0x41c015
  41c012:	std    
  41c013:	mov    esi,0x78e2baa4
  41c018:	nop
  41c019:	sub    eax,DWORD PTR [edx-0x2fc1ebd]
  41c01f:	mov    esi,0x7608c509
  41c024:	repnz cdq 
  41c026:	add    BYTE PTR [edx+0x41745b6e],bh
  41c02c:	jb     0x41c087
  41c02e:	ins    BYTE PTR es:[edi],dx
  41c02f:	dec    ecx
  41c030:	xchg   esi,eax
  41c031:	pop    ecx
  41c032:	push   ss
  41c033:	xchg   ecx,eax
  41c034:	sbb    DWORD PTR ss:[ecx+0x7dc9c585],ebp
  41c03b:	gs int 0x8c
  41c03e:	(bad)  
  41c03f:	shl    BYTE PTR [ebp-0xe],1
  41c042:	(bad)  
  41c043:	mov    WORD PTR [ebx+0x7746ec65],?
  41c049:	jge    0x41c048
  41c04b:	scas   eax,DWORD PTR es:[edi]
  41c04c:	shl    DWORD PTR [ecx],0xe
  41c04f:	mov    ecx,0xcd356040
  41c054:	loopne 0x41bfd6
  41c056:	loope  0x41c062
  41c058:	mov    eax,0x285d4f07
  41c05d:	jge    0x41c02c
  41c05f:	or     dh,BYTE PTR [edi+0x8]
  41c062:	cmp    al,0x5c
  41c064:	int    0x8c
  41c066:	cmp    eax,0x39f27701
  41c06b:	or     ebp,eax
  41c06d:	ins    DWORD PTR es:[edi],dx
  41c06e:	mov    ds:0x64597746,al
  41c073:	add    BYTE PTR [ebx+edi*8],dl
  41c076:	mov    es,WORD PTR [esi+0x8]
  41c079:	loop   0x41c054
  41c07b:	xlat   BYTE PTR ds:[ebx]
  41c07c:	ja     0x41c070
  41c07e:	fs inc ebp
  41c080:	hlt    
  41c081:	pcmpgtb mm7,mm0
  41c084:	adc    edi,ebx
  41c086:	outs   dx,BYTE PTR ds:[esi]
  41c087:	(bad)  
  41c088:	push   0xb
  41c08a:	je     0x41c08c
  41c08c:	or     ah,ch
  41c08e:	hlt    
  41c08f:	pop    esi
  41c090:	(bad)  
  41c091:	retf   0xe15c
  41c094:	sbb    eax,0x85e90a50
  41c099:	mov    esi,0x491b00c9
  41c09e:	hlt    
  41c09f:	inc    ebp
  41c0a0:	nop
  41c0a1:	ret    
  41c0a2:	outs   dx,DWORD PTR ds:[esi]
  41c0a3:	call   DWORD PTR [ebp+0x702b8852]
  41c0a9:	xor    ch,0x5f
  41c0ac:	vcmpss xmm5,xmm6,DWORD PTR [ebx-0x7c74a8bd],0xc4
  41c0b6:	fisubr WORD PTR [esp+ebp*4+0x43]
  41c0ba:	or     dl,BYTE PTR [esi-0x8]
  41c0bd:	and    eax,0x9f1a8d30
  41c0c2:	pop    edx
  41c0c3:	mov    edx,ebp
  41c0c5:	scas   eax,DWORD PTR es:[edi]
  41c0c6:	cmp    ecx,0x3ec687
  41c0cc:	outs   dx,DWORD PTR ds:[esi]
  41c0cd:	int3   
  41c0ce:	int3   
  41c0cf:	push   eax
  41c0d0:	mov    eax,0x539487d1
  41c0d5:	mov    bh,0xf5
  41c0d7:	push   eax
  41c0d8:	inc    edi
  41c0d9:	repz fild WORD PTR [eax]
  41c0dc:	outs   dx,DWORD PTR ds:[esi]
  41c0dd:	retf   0xfb2
  41c0e0:	jmp    0x41c0dc
  41c0e2:	repnz call FWORD PTR [edi+0x74]
  41c0e6:	cld    
  41c0e7:	push   esi
  41c0e8:	(bad)  
  41c0e9:	mov    esi,0x292ffff2
  41c0ee:	or     BYTE PTR [esi+0x0],dl
  41c0f1:	xchg   ebp,eax
  41c0f2:	cmp    eax,0x431f0062
  41c0f7:	dec    edx
  41c0f8:	lea    ebp,[edx+0xffeeda]
  41c0fe:	push   cs
  41c0ff:	cmc    
  41c100:	adc    eax,0x4a50cf
  41c105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c106:	or     esi,esi
  41c108:	xor    DWORD PTR [edi-0x49],0x5
  41c10c:	test   BYTE PTR [esi+0x3e],dh
  41c10f:	or     al,BYTE PTR [eax]
  41c111:	sub    al,0x29
  41c113:	xor    eax,0xa9ce868d
  41c118:	std    
  41c119:	loope  0x41c122
  41c11b:	push   esi
  41c11c:	xor    bh,BYTE PTR [ebp-0x79b3f2f0]
  41c122:	imul   ebx,DWORD PTR [ecx+ecx*4-0x6d],0x8640186d
  41c12a:	push   ss
  41c12b:	inc    ecx
  41c12c:	clc    
  41c12d:	push   esi
  41c12e:	loopne 0x41c17b
  41c130:	push   DWORD PTR [ecx+0x38b5b68]
  41c136:	in     eax,dx
  41c137:	mov    bl,0xfc
  41c139:	mov    eax,ds:0x9a72b3b8
  41c13e:	aas    
  41c13f:	fadd   QWORD PTR [edx+0x36faecc6]
  41c145:	or     esi,DWORD PTR [ecx+0x31]
  41c148:	sub    eax,0xffbae705
  41c14d:	cmc    
  41c14e:	dec    eax
  41c14f:	mov    bl,0x72
  41c151:	jp     0x41c0e8
  41c153:	adc    DWORD PTR [eax+0x0],edi
  41c156:	xchg   esp,eax
  41c157:	sub    ecx,DWORD PTR [esi]
  41c159:	push   0xffffff86
  41c15b:	loopne 0x41c10b
  41c15d:	mov    al,bl
  41c15f:	adc    DWORD PTR [esi+0x55],0x51
  41c163:	das    
  41c164:	mov    dl,0xfc
  41c166:	shr    DWORD PTR [edi-0x53f42a4d],cl
  41c16c:	cmp    al,BYTE PTR [edi]
  41c16e:	jg     0x41c18e
  41c170:	mov    dh,0x72
  41c172:	mov    bl,BYTE PTR [eax]
  41c174:	push   cs
  41c175:	jmp    0xfd115afe
  41c17a:	fwait
  41c17b:	(bad)  
  41c17c:	mov    bl,0x12
  41c17e:	push   0xffffff99
  41c180:	inc    esi
  41c181:	add    BYTE PTR [ecx],dl
  41c183:	outs   dx,DWORD PTR ds:[esi]
  41c184:	mov    dl,0xfc
  41c186:	jae    0x41c193
  41c188:	sbb    DWORD PTR [eax-0x7a],eax
  41c18b:	(bad)  
  41c18d:	pop    eax
  41c18e:	jae    0x41c1d2
  41c190:	std    
  41c191:	nop
  41c192:	add    al,0xcf
  41c194:	push   esp
  41c195:	mov    esi,0x2b4912ea
  41c19a:	data16 jne 0x41c1e0
  41c19d:	pop    esi
  41c19e:	push   ss
  41c19f:	inc    esp
  41c1a0:	stos   DWORD PTR es:[edi],eax
  41c1a1:	int3   
  41c1a2:	(bad)  
  41c1a3:	vmread DWORD PTR [edi-0x7c3798fa],ebp
  41c1aa:	jl     0x41c17e
  41c1ac:	jo     0x41c1f0
  41c1ae:	xchg   BYTE PTR [ebx-0x50],al
  41c1b1:	push   ebp
  41c1b2:	pop    ebx
  41c1b3:	leave  
  41c1b4:	adc    BYTE PTR [esi],cl
  41c1b6:	add    bh,dl
  41c1b8:	loopne 0x41c1bd
  41c1ba:	add    BYTE PTR [esi+0x4635a0ea],al
  41c1c0:	inc    edx
  41c1c1:	or     al,0x18
  41c1c3:	mov    dh,0x50
  41c1c5:	mov    eax,ds:0xeb830503
  41c1ca:	xchg   DWORD PTR [eax],ecx
  41c1cc:	inc    edx
  41c1cd:	loope  0x41c1d2
  41c1cf:	add    eax,0xe83e546c
  41c1d4:	rcl    DWORD PTR [edx],0x4
  41c1d7:	repnz cli 
  41c1d9:	xor    bh,BYTE PTR [ebp+0x43eec274]
  41c1df:	xchg   bh,al
  41c1e1:	in     al,0x86
  41c1e3:	xchg   DWORD PTR [edx-0x1f],eax
  41c1e6:	add    esi,DWORD PTR [esi+0x43b7d26a]
  41c1ec:	jne    0x41c255
  41c1ee:	mov    esp,0x27147504
  41c1f3:	dec    DWORD PTR [edi+esi*2-0x262dde32]
  41c1fa:	mov    esp,0x37560d22
  41c1ff:	push   ss
  41c200:	sar    DWORD PTR [eax-0x35cbd643],0xbc
  41c207:	or     cl,BYTE PTR ds:0x5ce2630a
  41c20d:	push   ss
  41c20e:	jne    0x41c248
  41c210:	jbe    0x41c19f
  41c212:	inc    edx
  41c213:	scas   al,BYTE PTR es:[edi]
  41c214:	(bad)  
  41c215:	pop    edi
  41c216:	test   eax,0xb191f7f8
  41c21b:	sub    eax,0xe93f3d
  41c220:	test   DWORD PTR [edi+0x7c],esi
  41c223:	cmp    edi,edi
  41c225:	jge    0x41c280
  41c227:	ins    BYTE PTR es:[edi],dx
  41c228:	inc    ecx
  41c229:	jbe    0x41c284
  41c22b:	inc    ecx
  41c22c:	xlat   BYTE PTR ds:[ebx]
  41c22d:	sub    al,0xf3
  41c22f:	cs pop es
  41c231:	add    DWORD PTR ds:0x9345ca6c,0x3179da2a
  41c23b:	push   ss
  41c23c:	jecxz  0x41c1fe
  41c23e:	into   
  41c23f:	xchg   ebp,eax
  41c240:	jl     0x41c2b9
  41c242:	jl     0x41c249
  41c244:	loop   0x41c2a2
  41c246:	cmc    
  41c247:	dec    dl
  41c249:	jne    0x41c2c7
  41c24b:	cmc    
  41c24c:	sub    eax,0x3aeff690
  41c251:	imul   ecx,DWORD PTR [edx],0x53
  41c254:	mov    ch,BYTE PTR [edx-0x26]
  41c257:	(bad)  [edx]
  41c259:	ja     0x41c2ad
  41c25b:	aaa    
  41c25c:	mov    edi,0xf34c67b
  41c261:	push   0x116dd586
  41c266:	pop    esp
  41c267:	push   ss
  41c268:	push   edi
  41c269:	fwait
  41c26a:	popa   
  41c26b:	in     eax,0xbd
  41c26d:	add    cl,BYTE PTR [edx]
  41c26f:	(bad)  
  41c270:	cmc    
  41c271:	mov    esp,0x2add114
  41c276:	or     dh,BYTE PTR [eax-0x78]
  41c279:	es mov dl,0x2a
  41c27c:	mov    dh,BYTE PTR [ebp+0x1c]
  41c27f:	xchg   ebp,eax
  41c280:	ja     0x41c284
  41c282:	or     al,BYTE PTR [eax]
  41c284:	add    BYTE PTR [esp+edi*8-0x7bc5cff],dl
  41c28b:	dec    ecx
  41c28c:	add    BYTE PTR [esp+edi*8+0x5],ah
  41c290:	mov    ds:0x49ee6b,eax
  41c295:	je     0x41c293
  41c297:	sbb    DWORD PTR [ebx+0x49f7df],esp
  41c29d:	fs cld 
  41c29f:	sbb    eax,0x49f673a3
  41c2a4:	add    BYTE PTR [esp+edi*8+0x11],dl
  41c2a8:	push   0xffffffcd
  41c2aa:	loop   0x41c2a6
  41c2ac:	mov    bh,0xec
  41c2ae:	aas    
  41c2af:	jg     0x41c32e
  41c2b1:	inc    edi
  41c2b2:	pop    ss
  41c2b3:	mov    esi,DWORD PTR ds:0x49f7a3
  41c2b9:	xchg   edi,eax
  41c2ba:	and    al,0x40
  41c2bc:	add    BYTE PTR [edi-0x2eaf3236],ch
  41c2c2:	retf   0xbc37
  41c2c5:	lods   eax,DWORD PTR ds:[esi]
  41c2c6:	dec    DWORD PTR [ecx]
  41c2c8:	push   DWORD PTR [ecx+0x29]
  41c2cb:	cmp    DWORD PTR [ebx+0x49ef83],esp
  41c2d1:	fidiv  DWORD PTR [edx+edi*8]
  41c2d4:	pop    eax
  41c2d5:	push   edi
  41c2d6:	or     eax,0xc45f0040
  41c2db:	int    0x50
  41c2dd:	cmp    BYTE PTR [ecx+0x6],dh
  41c2e0:	mov    eax,0xd6f53eac
  41c2e5:	mov    ch,0x72
  41c2e7:	test   eax,0xfb070008
  41c2ec:	or     DWORD PTR [ebp-0x17a55186],ecx
  41c2f2:	xor    DWORD PTR ds:0x7fb4000a,eax
  41c2f8:	inc    edx
  41c2f9:	call   DWORD PTR [edx+0x73]
  41c2fc:	mov    edx,0xaf698643
  41c301:	aad    0xac
  41c303:	mov    gs,WORD PTR [ebx+0x13]
  41c306:	fldenv [edi]
  41c308:	push   cs
  41c309:	mov    ecx,DWORD PTR [ebx-0x6217aa2f]
  41c30f:	pop    ds
  41c310:	push   cs
  41c311:	add    BYTE PTR ds:0xbbfd5d9c,cl
  41c317:	outs   dx,BYTE PTR gs:[esi]
  41c319:	inc    eax
  41c31a:	xchg   BYTE PTR [eax+ebx*8],dl
  41c31d:	mov    al,ds:0x4ad196
  41c322:	lahf   
  41c323:	data16 mov ds:0x226945b4,al
  41c329:	sbb    DWORD PTR [edi+0x45b7fe96],ecx
  41c32f:	imul   esp,DWORD PTR [edx],0x2867f11
  41c335:	mov    ch,0x45
  41c337:	imul   esp,DWORD PTR [edx],0xa95dc009
  41c33d:	test   al,0x45
  41c33f:	imul   ecx,DWORD PTR ds:0x8cdc539,0x63467388
  41c349:	inc    eax
  41c34a:	xchg   ah,dl
  41c34c:	push   eax
  41c34d:	pop    ecx
  41c34e:	add    BYTE PTR [edi+0x1e],cl
  41c351:	sbb    al,BYTE PTR [eax]
  41c353:	shl    esp,cl
  41c355:	mov    eax,ds:0x58186280
  41c35a:	push   ebp
  41c35b:	fsub   QWORD PTR [edi]
  41c35d:	pop    ebx
  41c35e:	call   0xfcf25085
  41c363:	in     al,dx
  41c364:	jo     0x41c2e7
  41c366:	jp     0x41c382
  41c368:	and    al,0xa6
  41c36a:	mov    edi,0x6a065bbf
  41c36f:	jb     0x41c357
  41c371:	xor    eax,eax
  41c373:	fiadd  WORD PTR [ebx+0x42864679]
  41c379:	loope  0x41c309
  41c37b:	mov    ah,0x52
  41c37d:	js     0x41c3b7
  41c37f:	xchg   edx,eax
  41c380:	mov    edi,0xdcc9a425
  41c385:	ficom  WORD PTR [ecx-0x45]
  41c388:	pop    edx
  41c389:	mov    ebp,0x6d720aa7
  41c38e:	ret    
  41c38f:	xchg   edx,eax
  41c390:	(bad)  
  41c391:	pushf  
  41c392:	add    eax,0xc074286
  41c397:	push   esi
  41c398:	mov    ebp,0xfffca3a5
  41c39d:	pushf  
  41c39e:	stos   DWORD PTR es:[edi],eax
  41c39f:	sbb    esi,DWORD PTR [edi]
  41c3a1:	pop    esp
  41c3a2:	mov    edx,0x80d38304
  41c3a7:	retf   
  41c3a8:	inc    esp
  41c3a9:	loope  0x41c3ae
  41c3ab:	std    
  41c3ac:	pop    es
  41c3ad:	inc    ebp
  41c3ae:	push   ebx
  41c3af:	sub    al,0x43
  41c3b1:	xchg   ebx,eax
  41c3b2:	push   edx
  41c3b3:	add    BYTE PTR [esi-0x4d45cb5c],ch
  41c3b9:	mov    ebx,0x8304cfa5
  41c3be:	jecxz  0x41c43f
  41c3c0:	repz inc esp
  41c3c2:	loope  0x41c3c7
  41c3c4:	pop    es
  41c3c5:	lock hlt 
  41c3c7:	add    al,BYTE PTR [ebx-0x79fabb3a]
  41c3cd:	inc    edx
  41c3ce:	inc    ax
  41c3d0:	outs   dx,BYTE PTR ds:[esi]
  41c3d1:	adc    al,BYTE PTR [edi+0x919d003]
  41c3d7:	sbb    DWORD PTR [ebp+0x71],0xffffffeb
  41c3db:	mov    eax,esp
  41c3dd:	jle    0x41c44c
  41c3df:	les    edx,FWORD PTR [edx-0x79f9933a]
  41c3e5:	inc    edx
  41c3e6:	pusha  
  41c3e7:	aaa    
  41c3e8:	pop    esi
  41c3e9:	inc    edx
  41c3ea:	cld    
  41c3eb:	jg     0x41c3f4
  41c3ed:	inc    esp
  41c3ee:	loope  0x41c3f3
  41c3f0:	or     eax,0xd2b90a07
  41c3f5:	mov    ebp,0x18daa94c
  41c3fa:	pop    ebx
  41c3fb:	xchg   ecx,eax
  41c3fc:	into   
  41c3fd:	pop    esi
  41c3fe:	repnz sahf 
  41c400:	or     eax,0x426cd204
  41c405:	mov    es,WORD PTR ds:[ecx]
  41c408:	mov    BYTE PTR [edx+0xa],al
  41c40b:	push   0x51
  41c40d:	jb     0x41c418
  41c40f:	out    dx,al
  41c410:	or     DWORD PTR [edi],0xbd85e908
  41c416:	dec    esp
  41c417:	test   DWORD PTR [eax],eax
  41c419:	pop    edx
  41c41a:	fadd   QWORD PTR [esi]
  41c41c:	mov    edi,0x4d2f5a56
  41c421:	pop    ds
  41c422:	outs   dx,BYTE PTR ds:[esi]
  41c423:	sub    BYTE PTR [ebp+ecx*8+0x51dec9c3],0x7
  41c42b:	or     cl,ch
  41c42d:	test   ebx,eax
  41c42f:	ins    BYTE PTR es:[edi],dx
  41c430:	xor    eax,0x641fdc8a
  41c435:	jno    0x41c40d
  41c437:	push   ecx
  41c438:	inc    ecx
  41c439:	loope  0x41c443
  41c43b:	or     ch,cl
  41c43d:	add    BYTE PTR [edx+esi*8],al
  41c440:	mov    ecx,0xbf598612
  41c445:	fdivrp st(3),st
  41c447:	add    eax,0xf25e7a01
  41c44c:	push   es
  41c44d:	or     DWORD PTR [ecx-0x12f55583],esi
  41c453:	icebp  
  41c454:	jmp    0xeb528ae7
  41c459:	test   DWORD PTR [edx-0x79],eax
  41c45c:	sub    bh,BYTE PTR fs:[edx]
  41c45f:	add    esp,DWORD PTR [esi-0x72]
  41c462:	inc    esp
  41c463:	or     ch,cl
  41c465:	mov    ch,0xb9
  41c467:	dec    esp
  41c468:	ror    DWORD PTR [eax],1
  41c46a:	cmc    
  41c46b:	lods   eax,DWORD PTR ds:[esi]
  41c46c:	add    BYTE PTR [edi],dh
  41c46e:	sbb    DWORD PTR [edi],0xffffffff
  41c471:	add    cl,cl
  41c473:	outs   dx,DWORD PTR ds:[esi]
  41c474:	hlt    
  41c475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c476:	xchg   ecx,eax
  41c477:	jmp    0xa8:0xa444d42
  41c47e:	sbb    eax,0x2ef1873b
  41c483:	inc    esp
  41c484:	or     cl,BYTE PTR [ebx+0x453ba26a]
  41c48a:	sti    
  41c48b:	cmp    cl,BYTE PTR [eax+0xa441ee5]
  41c491:	sub    DWORD PTR [edx+0x6c0ae1b2],ebp
  41c497:	cmp    dh,ch
  41c499:	add    al,dl
  41c49b:	lock fadd QWORD PTR [ecx]
  41c49e:	fild   WORD PTR [ebx-0x7f]
  41c4a1:	inc    ebp
  41c4a2:	xlat   BYTE PTR ds:[ebx]
  41c4a3:	or     BYTE PTR [ecx],0x2
  41c4a6:	out    dx,eax
  41c4a7:	inc    ebx
  41c4a8:	or     cl,BYTE PTR [ebx+0x760401f]
  41c4ae:	cwde   
  41c4af:	xor    dl,ch
  41c4b1:	xor    DWORD PTR [edi+0x2a5e0a43],ebp
  41c4b7:	xor    DWORD PTR [esp+esi*1+0xf],0xffffffab
  41c4bc:	pop    ss
  41c4bd:	hlt    
  41c4be:	dec    eax
  41c4bf:	push   es
  41c4c0:	or     bl,BYTE PTR [ecx+0x16]
  41c4c3:	xor    dh,dl
  41c4c5:	test   DWORD PTR [edi+0x1f],ebp
  41c4c8:	daa    
  41c4c9:	push   0xffffffb9
  41c4cb:	enter  0xa86f,0xe7
  41c4cf:	fwait
  41c4d0:	push   edx
  41c4d1:	dec    eax
  41c4d2:	outs   dx,DWORD PTR ds:[esi]
  41c4d3:	inc    ebx
  41c4d4:	or     DWORD PTR [ebp-0x6d],0xa88b0b1d
  41c4db:	fwait
  41c4dc:	pop    ss
  41c4dd:	repnz popa 
  41c4df:	mov    bh,0x87
  41c4e1:	rol    BYTE PTR [eax],0xba
  41c4e4:	cmp    al,0x60
  41c4e6:	or     BYTE PTR [esi-0x691fb760],al
  41c4ec:	pop    ecx
  41c4ed:	push   es
  41c4ee:	add    BYTE PTR [eax+0xdf048f4],ch
  41c4f4:	push   ds
  41c4f5:	mov    ds:0x6aef10c,al
  41c4fa:	mov    BYTE PTR [ebx],0x25
  41c4fd:	push   es
  41c4fe:	inc    DWORD PTR [edx]
  41c500:	cdq    
  41c501:	cmp    DWORD PTR [ebx],eax
  41c503:	fdivr  DWORD PTR cs:[ebp+0x46e219fd]
  41c50a:	or     BYTE PTR [ebx],cl
  41c50c:	cdq    
  41c50d:	cmp    BYTE PTR [eax],cl
  41c50f:	std    
  41c510:	sbb    eax,0x5a6ae6ba
  41c515:	push   es
  41c516:	add    BYTE PTR ds:0xe6427ef1,cl
  41c51c:	rcr    BYTE PTR [eax],0x48
  41c51f:	xchg   BYTE PTR [ecx+0x7f],bl
  41c522:	inc    edx
  41c523:	(bad)  
  41c524:	repz or BYTE PTR ds:[esi],dh
  41c528:	sbb    BYTE PTR [ecx],bh
  41c52a:	fadd   DWORD PTR [ebp+0x55875d4f]
  41c530:	jne    0x41c4d0
  41c532:	aaa    
  41c533:	mov    bh,0x2e
  41c535:	mov    ebx,0x7f6544fe
  41c53a:	dec    edx
  41c53b:	fcmovu st,st(0)
  41c53d:	hlt    
  41c53e:	sub    al,0xfd
  41c540:	fwait
  41c541:	or     dh,BYTE PTR [esp+ecx*4-0xc]
  41c545:	push   esi
  41c546:	or     BYTE PTR [eax],al
  41c548:	rcr    BYTE PTR [esi+edx*1+0x2d],0x91
  41c54d:	fwait
  41c54e:	or     cl,BYTE PTR [ecx+0x4f5e5543]
  41c554:	or     eax,0xcd010ab1
  41c559:	arpl   WORD PTR [ebp-0x18],bx
  41c55c:	sub    DWORD PTR [edx-0x44],0x204287fc
  41c563:	or     BYTE PTR [edi],cl
  41c565:	add    ah,ch
  41c567:	mov    cl,dh
  41c569:	cmp    al,BYTE PTR [edi-0x17]
  41c56c:	dec    ebx
  41c56d:	inc    edi
  41c56e:	jmp    0x9131c276
  41c573:	pop    ebx
  41c574:	cs scas al,BYTE PTR es:[edi]
  41c576:	sub    eax,DWORD PTR [esi+eax*4]
  41c579:	mov    edi,0xb9c1bc25
  41c57e:	stos   DWORD PTR es:[edi],eax
  41c57f:	push   ebx
  41c580:	sub    edi,eax
  41c582:	lock mov dh,0x94
  41c585:	ds cdq 
  41c587:	fld    TBYTE PTR [edi]
  41c589:	outs   dx,BYTE PTR ds:[esi]
  41c58a:	fwait
  41c58b:	adc    cl,0xf6
  41c58e:	std    
  41c58f:	mov    dl,BYTE PTR [edx+ebp*2+0x3c75ad65]
  41c596:	adc    DWORD PTR [ebx-0x1885a53d],ecx
  41c59c:	repnz ins DWORD PTR es:[edi],dx
  41c59e:	imul   eax,DWORD PTR [edx-0x6a],0xf0fcfbb
  41c5a5:	or     BYTE PTR ds:0xb129d989,ah
  41c5ab:	xor    BYTE PTR [eax],al
  41c5ad:	add    cl,0xc5
  41c5b0:	stos   DWORD PTR es:[edi],eax
  41c5b1:	test   edi,esi
  41c5b3:	loop   0x41c572
  41c5b5:	inc    esi
  41c5b6:	dec    edx
  41c5b7:	loop   0x41c563
  41c5b9:	xchg   ebx,eax
  41c5ba:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41c5bc:	push   es
  41c5bd:	add    eax,0xaab62413
  41c5c2:	shr    DWORD PTR [ebp+0x6e3d86ab],0x3d
  41c5c9:	fwait
  41c5ca:	ins    DWORD PTR es:[edi],dx
  41c5cb:	sbb    edi,DWORD PTR [ebp+0x29e14a46]
  41c5d1:	pop    edi
  41c5d2:	mov    edi,0x5ad95f8d
  41c5d7:	xchg   edx,eax
  41c5d8:	xchg   BYTE PTR ds:[edx+0xa],al
  41c5dc:	fs (bad) 
  41c5de:	push   0x59
  41c5e0:	bound  ebp,QWORD PTR [eax]
  41c5e2:	std    
  41c5e3:	repnz pop esp
  41c5e5:	jp     0x41c656
  41c5e7:	jl     0x41c5d6
  41c5e9:	sub    eax,0x1bd6dff6
  41c5ee:	ror    cl,0x55
  41c5f1:	jns    0x41c5ae
  41c5f3:	jl     0x41c5b6
  41c5f5:	shl    DWORD PTR [edi+0x7d],0xef
  41c5f9:	aad    0xbb
  41c5fb:	retf   
  41c5fc:	rcr    DWORD PTR [ecx],0x19
  41c5ff:	repz scas al,BYTE PTR es:[edi]
  41c601:	std    
  41c602:	add    DWORD PTR [esi],edx
  41c604:	jo     0x41c65d
  41c606:	and    bh,BYTE PTR [edi+0x24]
  41c609:	out    0xb7,al
  41c60b:	inc    ecx
  41c60c:	xchg   esi,eax
  41c60d:	add    eax,0x8ef274
  41c612:	add    DWORD PTR [edx+0x7b],0xfffffff0
  41c616:	push   cs
  41c617:	clc    
  41c618:	shl    DWORD PTR [eax+0x4f],0x26
  41c61c:	sub    DWORD PTR [edx],0x5c23dae2
  41c622:	mov    cl,0xa6
  41c624:	push   ecx
  41c625:	push   ecx
  41c626:	jne    0x41c62f
  41c628:	or     ch,cl
  41c62a:	add    BYTE PTR [eax],al
  41c62c:	repnz mov ecx,0x4e5985fe
  41c632:	cdq    
  41c633:	push   edx
  41c634:	repz mov esp,0x531f5a89
  41c63a:	rep ins DWORD PTR es:[edi],dx
  41c63c:	jle    0x41c677
  41c63e:	xor    DWORD PTR [edi+0x7d],esi
  41c641:	add    DWORD PTR [edi],eax
  41c643:	call   0x20b5b039
  41c648:	test   DWORD PTR [edx-0x557b036b],ebp
  41c64e:	test   eax,0xcd94f2fc
  41c653:	mov    ecx,0x699700cb
  41c658:	(bad)  
  41c65a:	js     0x41c648
  41c65c:	mov    dl,0x75
  41c65e:	imul   edi,DWORD PTR [ebx-0x67ee07b9],0x3a
  41c665:	sub    al,0x68
  41c667:	mov    bh,0x8b
  41c669:	inc    ebx
  41c66a:	jae    0x41c60a
  41c66c:	push   eax
  41c66d:	fwait
  41c66e:	cmp    BYTE PTR [edi-0x4660bc75],dh
  41c674:	inc    edi
  41c675:	or     BYTE PTR [eax],al
  41c677:	mov    dh,0x2
  41c679:	push   cs
  41c67a:	jmp    0x377c4f
  41c67f:	pushf  
  41c680:	ja     0x41c677
  41c682:	pop    edi
  41c683:	jns    0x41c6fc
  41c685:	enter  0x2f0c,0xfd
  41c689:	sub    ah,0xac
  41c68c:	mov    ds:0x87a45326,eax
  41c691:	add    DWORD PTR [ebp+0xf],0x356c943
  41c698:	cmp    esp,edx
  41c69a:	push   0x8bf5b608
  41c69f:	outs   dx,DWORD PTR ds:[esi]
  41c6a0:	in     al,dx
  41c6a1:	cld    
  41c6a2:	jne    0x41c684
  41c6a4:	jb     0x41c658
  41c6a6:	jmp    0x4c06a6
  41c6ab:	adc    BYTE PTR [edx],bl
  41c6ad:	and    BYTE PTR [ebp-0x17a56c46],cl
  41c6b3:	popa   
  41c6b4:	sub    eax,0x2c3a000a
  41c6b9:	not    BYTE PTR [eax+0x34]
  41c6bc:	scas   al,BYTE PTR es:[edi]
  41c6bd:	inc    edx
  41c6be:	push   ebx
  41c6bf:	js     0x41c6dd
  41c6c1:	add    ch,al
  41c6c3:	(bad)  
  41c6c4:	cwde   
  41c6c5:	cmc    
  41c6c6:	call   DWORD PTR [esi]
  41c6c8:	sub    al,0xf2
  41c6ca:	test   DWORD PTR [edi+0x1b],ebp
  41c6cd:	addr16 push 0xffffff86
  41c6d0:	pop    edi
  41c6d1:	mov    eax,DWORD PTR [edx-0x66]
  41c6d4:	test   eax,0x449672bd
  41c6d9:	add    al,0x58
  41c6db:	add    BYTE PTR [eax+0x4a810699],dl
  41c6e1:	mov    eax,DWORD PTR gs:[edx+0x5a]
  41c6e5:	leave  
  41c6e6:	mov    ebp,0x4667de12
  41c6eb:	add    BYTE PTR ds:0xbb28a636,cl
  41c6f1:	popa   
  41c6f2:	pop    esp
  41c6f3:	std    
  41c6f4:	shl    DWORD PTR [ecx+0x50],cl
  41c6f7:	call   0xfcf95bb9
  41c6fc:	(bad)  
  41c6fd:	fimul  WORD PTR [eax-0x14]
  41c700:	xlat   BYTE PTR ds:[ebx]
  41c701:	out    0x9,al
  41c703:	xor    dl,bh
  41c705:	sub    DWORD PTR [eax],0x88a420ed
  41c70b:	cmp    eax,DWORD PTR [eax+esi*8-0x50a203c0]
  41c712:	rcl    bh,cl
  41c714:	test   DWORD PTR [esi],esp
  41c716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c717:	push   eax
  41c718:	push   esi
  41c719:	test   BYTE PTR [ecx],0x3e
  41c71c:	push   esi
  41c71d:	rcl    DWORD PTR [eax-0x13],1
  41c720:	lock xrelease mov BYTE PTR [edx-0x16],al
  41c725:	dec    eax
  41c726:	adc    al,0x1
  41c728:	test   eax,esp
  41c72a:	dec    esi
  41c72b:	push   esi
  41c72c:	out    dx,al
  41c72d:	and    DWORD PTR [ebp-0x32222e04],edx
  41c733:	jb     0x41c7b1
  41c735:	mov    bl,0x8e
  41c737:	push   DWORD PTR [eax-0x39cf48fe]
  41c73d:	syscall 
  41c73f:	std    
  41c740:	add    BYTE PTR [ebx],bh
  41c742:	mov    DWORD PTR [edi-0x7136858e],esi
  41c748:	sub    esi,DWORD PTR [ecx+0xeb32b41]
  41c74e:	add    eax,0xb7617cfd
  41c753:	and    ebx,edi
  41c755:	inc    esp
  41c756:	outs   dx,BYTE PTR ds:[esi]
  41c757:	fisttp WORD PTR [eax-0x6a]
  41c75a:	or     DWORD PTR [ebx-0x2f7abeb2],ebp
  41c760:	add    edx,ebp
  41c762:	mov    ebp,0xe75d870c
  41c767:	pop    edi
  41c768:	sub    DWORD PTR [edx],ecx
  41c76a:	inc    ebx
  41c76b:	jle    0x41c7b5
  41c76d:	add    dl,BYTE PTR [ebx]
  41c76f:	aam    0x38
  41c771:	jle    0x41c7dc
  41c773:	cmc    
  41c774:	repz adc DWORD PTR [esi],eax
  41c777:	loope  0x41c7c5
  41c779:	fnstcw WORD PTR [edi+0x28038a0]
  41c77f:	or     cl,BYTE PTR [ecx+0x2]
  41c782:	out    dx,eax
  41c783:	fdivrp st(6),st
  41c785:	jmp    0x86496605
  41c78a:	adc    DWORD PTR [edi+esi*1+0x18943a62],ebp
  41c791:	push   0xffffffaa
  41c793:	pop    ds
  41c794:	add    al,0xff
  41c796:	push   0x39
  41c798:	mov    DWORD PTR [edx],eax
  41c79a:	out    dx,eax
  41c79b:	fld    QWORD PTR [ebx+0x46575fbc]
  41c7a1:	xchg   BYTE PTR [edx-0xb],al
  41c7a4:	out    0x0,eax
  41c7a6:	loope  0x41c7a5
  41c7a8:	gs mov cl,0xe2
  41c7ab:	mov    esi,0x107f3720
  41c7b0:	xchg   ebx,eax
  41c7b1:	call   FWORD PTR [ecx]
  41c7b3:	push   es
  41c7b4:	loope  0x41c80f
  41c7b6:	retf   
  41c7b7:	dec    edi
  41c7b8:	xor    eax,0x94424615
  41c7bd:	fwait
  41c7be:	pop    esp
  41c7bf:	outs   dx,DWORD PTR ds:[esi]
  41c7c0:	xor    esi,DWORD PTR [edx-0x23f696a5]
  41c7c6:	cmc    
  41c7c7:	push   ebx
  41c7c8:	dec    edx
  41c7c9:	jmp    0xc70c8305
  41c7ce:	rcl    BYTE PTR [edx],0x5c
  41c7d1:	jb     0x41c82c
  41c7d3:	push   ds
  41c7d4:	push   es
  41c7d5:	mov    edi,0x56f654d4
  41c7da:	enter  0x7f42,0x21
  41c7de:	retf   0xcec5
  41c7e1:	je     0x41c845
  41c7e3:	(bad)  
  41c7e4:	sti    
  41c7e5:	jge    0x41c855
  41c7e7:	xor    DWORD PTR ds:0xa02c004,ecx
  41c7ed:	pop    ebp
  41c7ee:	cmp    DWORD PTR [ecx+0x6],esp
  41c7f1:	fcom   QWORD PTR [esi+eiz*2]
  41c7f4:	lea    ebp,[ecx-0x71a4e172]
  41c7fa:	xchg   BYTE PTR [edx+0x67dee946],ch
  41c800:	sbb    al,0xcd
  41c802:	cwde   
  41c803:	add    cl,BYTE PTR [edx]
  41c805:	ror    DWORD PTR [ecx],0x75
  41c808:	repnz scas al,BYTE PTR es:[edi]
  41c80a:	add    BYTE PTR [ebx],cl
  41c80c:	jno    0x41c800
  41c80e:	sbb    eax,0x97865a81
  41c813:	xlat   BYTE PTR ds:[ebx]
  41c814:	gs pop edx
  41c816:	xchg   esi,eax
  41c817:	jno    0x41c88b
  41c819:	pop    ss
  41c81a:	sub    DWORD PTR [edx-0x3c8dabf9],ecx
  41c820:	or     edi,eax
  41c822:	push   ss
  41c823:	jae    0x41c816
  41c825:	jge    0x41c7e9
  41c827:	popf   
  41c828:	jmp    0xf52d:0xecf2b17d
  41c82f:	pop    edx
  41c830:	add    DWORD PTR [edx-0x12],edi
  41c833:	nop
  41c834:	out    0x2d,al
  41c836:	in     eax,0x82
  41c838:	cli    
  41c839:	jno    0x41c7f1
  41c83b:	push   esp
  41c83c:	addr16 jge 0x41c83f
  41c83f:	mov    ecx,DWORD PTR [esi-0x1e]
  41c842:	aaa    
  41c843:	inc    ecx
  41c844:	mov    ah,0xf5
  41c846:	add    edi,esi
  41c848:	sbb    al,0x81
  41c84a:	dec    eax
  41c84b:	xlat   BYTE PTR ds:[ebx]
  41c84c:	push   ebp
  41c84d:	dec    edx
  41c84e:	je     0x41c84a
  41c850:	cmp    cl,BYTE PTR [edx+0x7e44f278]
  41c856:	or     eax,0x43ba6907
  41c85b:	outs   dx,DWORD PTR ds:[esi]
  41c85c:	mov    bl,0x17
  41c85e:	lock pop ebp
  41c860:	add    al,0xa
  41c862:	jmp    0x41c8ab
  41c864:	les    edi,FWORD PTR [edx+0x7c]
  41c867:	pop    edi
  41c868:	or     bh,BYTE PTR [esi+0x13]
  41c86b:	in     al,0x6e
  41c86d:	jmp    0x83f5:0xb33b0087
  41c874:	addr16 mov bl,0x76
  41c877:	sbb    DWORD PTR [edi+0x39],eax
  41c87a:	cld    
  41c87b:	call   DWORD PTR [eax-0x39]
  41c87e:	sbb    BYTE PTR [ebp+0x36f52e7f],cl
  41c884:	push   edi
  41c885:	fstp   st(7)
  41c887:	(bad)  
  41c888:	lock inc ebp
  41c88a:	sbb    dl,BYTE PTR [esi+0x47]
  41c88d:	(bad)  
  41c88f:	(bad)  
  41c890:	loopne 0x41c8dd
  41c892:	push   es
  41c893:	mov    eax,0x15f53e5c
  41c898:	out    dx,eax
  41c899:	dec    ebp
  41c89a:	dec    edx
  41c89b:	add    BYTE PTR [ecx+0x2d5fcde5],dh
  41c8a1:	ins    BYTE PTR es:[edi],dx
  41c8a2:	repnz mov bl,dh
  41c8a5:	shl    BYTE PTR [edx-0x7ed42b8c],0x54
  41c8ac:	retf   
  41c8ad:	aas    
  41c8ae:	adc    BYTE PTR [edi+ebx*8],0xc3
  41c8b2:	lock or eax,0xfa8a40bb
  41c8b8:	xchg   BYTE PTR [ebx+0x3b],ah
  41c8bb:	pop    es
  41c8bc:	shl    DWORD PTR [edx+0x75],0xcf
  41c8c0:	dec    esi
  41c8c1:	(bad)  
  41c8c2:	fdiv   QWORD PTR [edx-0x58]
  41c8c5:	sbb    ecx,DWORD PTR [ebx]
  41c8c7:	add    BYTE PTR [ebx-0x1c],dl
  41c8ca:	xchg   edx,eax
  41c8cb:	sub    BYTE PTR [edx-0xd1477cf],0x59
  41c8d2:	push   es
  41c8d3:	add    BYTE PTR [eax],al
  41c8d5:	xor    eax,0x7e7275af
  41c8da:	in     al,0x40
  41c8dc:	or     cl,bl
  41c8de:	test   eax,0x5da2436f
  41c8e3:	mov    ecx,0x468bee12
  41c8e8:	add    bh,bh
  41c8ea:	xchg   esp,eax
  41c8eb:	jmp    0xc286:0xe69f0d1b
  41c8f2:	xor    eax,0x3dc888d6
  41c8f7:	adc    BYTE PTR [ecx],ch
  41c8f9:	call   DWORD PTR [edx+eiz*8]
  41c8fc:	das    
  41c8fd:	adc    esi,ebp
  41c8ff:	loope  0x41c950
  41c901:	ficom  WORD PTR [ecx+0x5986444c]
  41c907:	mov    DWORD PTR [ebx+0x62],eax
  41c90a:	xor    eax,0x649895e
  41c90f:	inc    esp
  41c910:	sbb    BYTE PTR [esi+0x4880f6a0],dh
  41c916:	ins    DWORD PTR es:[edi],dx
  41c917:	mov    ds:0xe22cff35,eax
  41c91c:	pop    ds
  41c91d:	cmovge esp,edx
  41c920:	and    ebp,esi
  41c922:	sub    eax,0xdbf1fcab
  41c927:	cmp    DWORD PTR [esi+ebx*4],esp
  41c92a:	pop    ecx
  41c92b:	jne    0x41c970
  41c92d:	stos   BYTE PTR es:[edi],al
  41c92e:	jns    0x41c99f
  41c930:	inc    edx
  41c931:	mov    es,WORD PTR [edx+0x78]
  41c934:	cmp    al,0x82
  41c936:	mov    ebx,0x10013a0
  41c93b:	test   BYTE PTR [esp+esi*8],0x8
  41c93f:	dec    BYTE PTR [eax+edi*8]
  41c942:	mov    bh,BYTE PTR [esi+0x42860491]
  41c948:	dec    ax
  41c94a:	bound  ecx,QWORD PTR [edx-0x6f]
  41c94d:	(bad)  
  41c950:	loopne 0x41c955
  41c952:	add    al,BYTE PTR [edx+0x415287fb]
  41c958:	loope  0x41c95d
  41c95a:	sbb    al,0x1a
  41c95c:	outs   dx,BYTE PTR ds:[esi]
  41c95d:	xor    BYTE PTR [edx+0x659bb926],ch
  41c963:	add    ah,cl
  41c965:	add    edi,edi
  41c967:	jge    0x41c8f9
  41c969:	scas   al,BYTE PTR es:[edi]
  41c96a:	mov    dh,0x65
  41c96c:	mov    dl,0x9b
  41c96e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c96f:	pop    edx
  41c970:	jecxz  0x41c920
  41c972:	pop    edx
  41c973:	sub    eax,0x4208ba78
  41c978:	(bad)  
  41c97a:	dec    edx
  41c97b:	data16 fistp DWORD PTR [ecx]
  41c97e:	mov    WORD PTR [edi+0x12a5e82c],?
  41c984:	int3   
  41c985:	aaa    
  41c986:	push   0x2e
  41c988:	mov    ah,0x18
  41c98a:	into   
  41c98b:	dec    esp
  41c98c:	and    DWORD PTR [edi+eax*1],eax
  41c98f:	jg     0x41c965
  41c991:	sbb    DWORD PTR [edi+esi*4+0x2c],ebp
  41c995:	call   0x60dad3e7
  41c99a:	mov    BYTE PTR [edx-0x1f],0x80
  41c99e:	add    BYTE PTR [ebp+0x1e],al
  41c9a1:	and    eax,0x107e0f54
  41c9a6:	scas   eax,DWORD PTR es:[edi]
  41c9a7:	mov    dh,0x65
  41c9a9:	mov    edx,0x95cc29b
  41c9ae:	jbe    0x41c9e0
  41c9b0:	ror    ecx,0xf5
  41c9b3:	out    dx,eax
  41c9b4:	mov    eax,0x12aa0d4d
  41c9b9:	repz hlt 
  41c9bb:	popf   
  41c9bc:	push   eax
  41c9bd:	dec    edx
  41c9be:	jmp    0xe24846ff
  41c9c3:	sbb    eax,0xe047dea8
  41c9c8:	ror    ecx,0xee
  41c9cb:	add    DWORD PTR [ebx+0x9],edi
  41c9ce:	jmp    0x58f8358
  41c9d3:	bound  edx,QWORD PTR [edx]
  41c9d5:	jg     0x41ca05
  41c9d7:	xor    eax,0x931e3667
  41c9dc:	pop    ebp
  41c9dd:	push   eax
  41c9de:	add    DWORD PTR [eax],esi
  41c9e0:	data16 repnz xlat BYTE PTR ds:[ebx]
  41c9e3:	cld    
  41c9e4:	jp     0x41c966
  41c9e6:	jmp    0x5a1b:0xfef3a80d
  41c9ed:	sub    DWORD PTR ds:[ebp-0x48],0x75
  41c9f2:	lds    esi,FWORD PTR [ebp-0x38c41df6]
  41c9f8:	inc    edx
  41c9f9:	or     ch,BYTE PTR [esi+edi*4+0x1e]
  41c9fd:	push   0x39
  41c9ff:	rol    DWORD PTR [ecx],0x2e
  41ca02:	or     eax,0xcabbd200
  41ca07:	sbb    DWORD PTR [esi+edx*1+0x21ae6c53],ecx
  41ca0e:	mov    ch,cl
  41ca10:	test   DWORD PTR [edx-0x1e],eax
  41ca13:	adc    edx,DWORD PTR [edx]
  41ca15:	repnz pushw 0x3e
  41ca19:	cmp    DWORD PTR [ebp+0x7ee44ea9],ecx
  41ca1f:	adc    eax,0x9f7f34ee
  41ca24:	jg     0x41c9b3
  41ca26:	jle    0x41ca28
  41ca28:	mov    ds:0x1751165a,eax
  41ca2d:	pop    es
  41ca2e:	(bad)  
  41ca30:	pop    eax
  41ca31:	mov    ebp,0xeb8774b2
  41ca36:	jbe    0x41ca5c
  41ca38:	shr    ecx,cl
  41ca3a:	aad    0x8b
  41ca3c:	fsub   st(1),st
  41ca3e:	outs   dx,BYTE PTR ds:[esi]
  41ca3f:	and    al,0x8b
  41ca41:	in     eax,0x3e
  41ca43:	cmp    BYTE PTR [ebx+0x49eb34c8],ah
  41ca49:	xchg   edi,eax
  41ca4a:	xchg   al,al
  41ca4c:	repz and eax,0x3eac0381
  41ca52:	pusha  
  41ca53:	add    al,0xc7
  41ca55:	mov    esp,0x109f407a
  41ca5a:	loop   0x41ca83
  41ca5c:	jnp    0x41c9f2
  41ca5e:	cmc    
  41ca5f:	mov    ebp,DWORD PTR [ecx-0x3d]
  41ca62:	or     DWORD PTR [esp+ebp*2],eax
  41ca65:	imul   ebx,DWORD PTR [ebp-0x1],0x0
  41ca69:	repz pop ebx
  41ca6b:	push   ds
  41ca6c:	push   ecx
  41ca6d:	xchg   edi,eax
  41ca6e:	dec    ebx
  41ca6f:	out    0xfe,al
  41ca71:	pop    eax
  41ca72:	inc    ecx
  41ca73:	xor    DWORD PTR [ebx+0x77f567ea],ecx
  41ca79:	ja     0x41ca41
  41ca7b:	mov    esi,0x819729eb
  41ca80:	push   es
  41ca81:	pop    eax
  41ca82:	sub    al,0x2e
  41ca84:	sub    BYTE PTR [esi+0x1c8b21fe],ah
  41ca8a:	jmp    0xd998f6dc
  41ca8f:	loope  0x41ca8f
  41ca91:	fmul   DWORD PTR [ecx+0x1e]
  41ca94:	push   esi
  41ca95:	inc    edi
  41ca96:	(bad)  
  41ca98:	(bad)  
  41ca99:	call   0x1e2cbe8d
  41ca9e:	jb     0x41ca52
  41caa0:	pop    edi
  41caa1:	xchg   BYTE PTR [ebx],ch
  41caa3:	inc    ecx
  41caa4:	mov    ebx,esp
  41caa6:	push   ss
  41caa7:	enter  0x8603,0x46
  41caab:	jno    0x41ca98
  41caad:	add    eax,0x38512ab6
  41cab2:	loopne 0x41caef
  41cab4:	or     al,0x6
  41cab6:	push   esp
  41cab7:	repnz (bad) 
  41cab9:	cmp    BYTE PTR [ebx+ecx*4-0x10],ch
  41cabd:	xchg   BYTE PTR [ecx+0x6],bl
  41cac0:	mov    DWORD PTR [eax],edi
  41cac2:	popa   
  41cac3:	mov    DWORD PTR [edx-0x46],esp
  41cac6:	pop    ecx
  41cac7:	jae    0x41cb0b
  41cac9:	mov    dl,0xc9
  41cacb:	adc    BYTE PTR [esi],dl
  41cacd:	add    BYTE PTR [eax+0x11],dl
  41cad0:	mov    cl,0xa0
  41cad2:	mov    eax,ds:0xfd7722c
  41cad7:	mov    bh,0x9e
  41cad9:	sub    BYTE PTR [ebp-0x39cdf23a],0x52
  41cae0:	cdq    
  41cae1:	inc    BYTE PTR [ecx+0xb2a1059]
  41cae7:	mov    dh,0xda
  41cae9:	push   edi
  41caea:	pop    esi
  41caeb:	mov    bh,0x48
  41caed:	add    BYTE PTR [esi-0x1c753131],al
  41caf3:	sbb    DWORD PTR [edi],edi
  41caf5:	call   0x4862ab
  41cafa:	add    edx,DWORD PTR [esi]
  41cafc:	fimul  DWORD PTR [edi+0x49]
  41caff:	push   cs
  41cb00:	mov    ds:0xa7e42e50,al
  41cb05:	cld    
  41cb06:	cmp    eax,esp
  41cb08:	scas   al,BYTE PTR es:[edi]
  41cb09:	dec    esi
  41cb0a:	(bad)  
  41cb0b:	dec    eax
  41cb0c:	xchg   esi,eax
  41cb0d:	mov    ah,BYTE PTR [eax]
  41cb0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb10:	sahf   
  41cb11:	push   eax
  41cb12:	adc    ebx,DWORD PTR [esi]
  41cb14:	mov    ds:0x9595c386,al
  41cb19:	mov    ss,WORD PTR [ebx]
  41cb1b:	inc    edx
  41cb1c:	lods   al,BYTE PTR ds:[esi]
  41cb1d:	stos   DWORD PTR es:[edi],eax
  41cb1e:	mov    DWORD PTR [edi],esp
  41cb20:	loope  0x41cb52
  41cb22:	mov    cs,WORD PTR [edi]
  41cb24:	mov    ecx,esp
  41cb26:	out    dx,al
  41cb27:	arpl   WORD PTR [ebx-0x3727c961],ax
  41cb2d:	js     0x41cb9b
  41cb2f:	pop    esi
  41cb30:	sub    BYTE PTR [eax+eax*1+0x3e1007d],bl
  41cb37:	ins    BYTE PTR es:[edi],dx
  41cb38:	sbb    DWORD PTR [esi+0x29],edx
  41cb3b:	(bad)  
  41cb3c:	or     DWORD PTR [ecx+0x15],ebx
  41cb3f:	inc    esp
  41cb40:	inc    edx
  41cb41:	loope  0x41cbc1
  41cb43:	retf   0x6e11
  41cb46:	inc    ecx
  41cb47:	(bad)  
  41cb48:	adc    DWORD PTR [esi+0x41],edx
  41cb4b:	stos   BYTE PTR es:[edi],al
  41cb4c:	adc    edi,edx
  41cb4e:	out    0x4a,al
  41cb50:	mov    ch,0xbd
  41cb52:	xchg   DWORD PTR [ecx-0x6554f3be],ebp
  41cb58:	mov    esi,0x8204f82c
  41cb5d:	xchg   esp,eax
  41cb5e:	sar    dh,0x73
  41cb61:	ja     0x41cb2f
  41cb63:	ror    bh,1
  41cb65:	popf   
  41cb66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb67:	or     al,0x8
  41cb69:	sbb    DWORD PTR [ebx+edi*8+0x4ab0a6d],ebx
  41cb70:	cmp    DWORD PTR [esi+ebp*8-0x17],0xffffffc6
  41cb75:	js     0x41cbba
  41cb77:	xchg   ah,ch
  41cb79:	in     al,dx
  41cb7a:	dec    esi
  41cb7b:	std    
  41cb7c:	pop    es
  41cb7d:	jmp    0xd2afb31d
  41cb82:	stos   BYTE PTR es:[edi],al
  41cb83:	add    al,0x83
  41cb85:	push   esp
  41cb86:	jecxz  0x41cb96
  41cb88:	or     cl,ch
  41cb8a:	jle    0x41cb48
  41cb8c:	pop    edx
  41cb8d:	ja     0x41cbdf
  41cb8f:	sub    dl,BYTE PTR [esi]
  41cb91:	test   al,0x7b
  41cb93:	jge    0x41cbc8
  41cb95:	or     ah,BYTE PTR [eax+0x0]
  41cb98:	pop    ebp
  41cb99:	rol    BYTE PTR [eax+0x51c95619],cl
  41cb9f:	and    DWORD PTR [ecx+ecx*8+0x51],esp
  41cba3:	sbb    eax,0xaf060481
  41cba8:	inc    ebp
  41cba9:	dec    esi
  41cbaa:	or     DWORD PTR [eax-0x160d9dd3],eax
  41cbb0:	push   0x7f90f1fc
  41cbb5:	pop    edi
  41cbb6:	bnd jbe 0x41cc36
  41cbb9:	dec    edx
  41cbba:	sbb    ch,cl
  41cbbc:	test   DWORD PTR [edx+0x62],ebp
  41cbbf:	push   ebx
  41cbc0:	pop    ds
  41cbc1:	pop    edi
  41cbc2:	jle    0x41cc05
  41cbc4:	push   es
  41cbc5:	jnp    0x41cbc9
  41cbc7:	ins    DWORD PTR es:[edi],dx
  41cbc8:	xchg   esi,eax
  41cbc9:	pop    edi
  41cbca:	repnz dec esi
  41cbcc:	cs or  al,0x6
  41cbcf:	cwde   
  41cbd0:	lea    eax,[edx+0x1a]
  41cbd3:	jmp    0xef88995d
  41cbd8:	xor    eax,0xdce17b5f
  41cbdd:	xor    al,0x9a
  41cbdf:	cld    
  41cbe0:	inc    ebp
  41cbe1:	inc    edx
  41cbe2:	xchg   DWORD PTR [ecx],esp
  41cbe4:	mov    cl,BYTE PTR [edi-0x73]
  41cbe7:	shr    BYTE PTR [esi+ebx*2],cl
  41cbea:	repnz push 0xffffff9e
  41cbed:	dec    esi
  41cbee:	or     bh,BYTE PTR [esp+edi*2-0x14]
  41cbf2:	or     al,0xa1
  41cbf4:	mov    ch,0xea
  41cbf6:	test   DWORD PTR [ecx-0x3b],esi
  41cbf9:	inc    edx
  41cbfa:	push   edi
  41cbfb:	add    DWORD PTR [eax],eax
  41cbfd:	into   
  41cbfe:	imul   esi,ebx,0xffffffe6
  41cc01:	int    0x4
  41cc03:	push   es
  41cc04:	rcl    ebp,1
  41cc06:	push   esp
  41cc07:	repnz (bad) 
  41cc09:	mov    ebx,0xcace0204
  41cc0e:	inc    esi
  41cc0f:	fild   WORD PTR [eax]
  41cc11:	mov    ch,BYTE PTR [ebx-0x686bf389]
  41cc17:	push   0xffffff94
  41cc19:	push   edi
  41cc1a:	push   es
  41cc1b:	or     ch,BYTE PTR [edx+0x2a]
  41cc1e:	or     ah,dl
  41cc20:	push   edi
  41cc21:	xor    DWORD PTR [edx-0x38b9a60b],ebp
  41cc27:	cli    
  41cc28:	jmp    eax
  41cc2a:	loopne 0x41cc27
  41cc2c:	inc    BYTE PTR [eax]
  41cc2e:	stos   DWORD PTR es:[edi],eax
  41cc2f:	ins    BYTE PTR es:[edi],dx
  41cc30:	(bad)  
  41cc31:	fisttp DWORD PTR [edi+edi*8+0x9]
  41cc35:	ins    BYTE PTR es:[edi],dx
  41cc36:	xchg   BYTE PTR [eax],cl
  41cc38:	adc    DWORD PTR [edi+0x44],0x7e
  41cc3c:	adc    BYTE PTR [eax+0x31],ah
  41cc3f:	push   es
  41cc40:	lea    edx,[ebx+eax*2]
  41cc43:	inc    ebx
  41cc44:	lea    esi,[ebx-0x1217bcb4]
  41cc4a:	mov    esi,0x1f9efff4
  41cc4f:	push   es
  41cc50:	mov    ebx,edx
  41cc52:	pop    eax
  41cc53:	int3   
  41cc54:	add    al,0xa7
  41cc56:	push   edi
  41cc57:	cmc    
  41cc58:	inc    ebp
  41cc59:	mov    ds:0x690c47dd,eax
  41cc5e:	inc    edx
  41cc5f:	adc    cl,BYTE PTR [edx]
  41cc61:	add    BYTE PTR [eax+0x21],ah
  41cc64:	push   es
  41cc65:	mov    ebp,DWORD PTR [edx]
  41cc67:	pop    esp
  41cc68:	or     DWORD PTR [ebp+0x63],0x5f7852c7
  41cc6f:	fstp   QWORD PTR [edx+0x70]
  41cc72:	neg    BYTE PTR [esi]
  41cc74:	jle    0x41ccdc
  41cc76:	test   al,0x6
  41cc78:	jbe    0x41cc7a
  41cc7a:	outs   dx,DWORD PTR ds:[esi]
  41cc7b:	aam    0xf3
  41cc7d:	pop    esi
  41cc7e:	add    DWORD PTR [edi],ecx
  41cc80:	retf   
  41cc81:	ret    0x4457
  41cc84:	add    DWORD PTR [eax+0x2b],0x8674f4f3
  41cc8b:	dec    ebp
  41cc8c:	test   BYTE PTR [edx-0x4072ae52],0x92
  41cc93:	jno    0x41ccf2
  41cc95:	jmp    0xa97d:0xd7b9a120
  41cc9c:	mov    ecx,0xf2abb1d7
  41cca1:	push   DWORD PTR [edx-0xd7f652c]
  41cca7:	jne    0x41cd06
  41cca9:	push   esi
  41ccaa:	or     eax,0x8e4575bb
  41ccaf:	in     al,0x2e
  41ccb1:	add    al,0x51
  41ccb3:	rol    BYTE PTR [ebx-0x8],cl
  41ccb6:	(bad)  
  41ccb8:	mov    ds:0x7268cf82,al
  41ccbd:	jg     0x41cc45
  41ccbf:	imul   eax,DWORD PTR [esi],0x65d4f81
  41ccc5:	jae    0x41ccc7
  41ccc7:	inc    esi
  41ccc8:	jae    0x41ccc3
  41ccca:	mov    bh,BYTE PTR [ebx]
  41cccc:	or     eax,0xaa09e83f
  41ccd1:	push   es
  41ccd2:	add    BYTE PTR [ecx-0x20],bh
  41ccd5:	dec    eax
  41ccd6:	adc    dh,BYTE PTR [esi]
  41ccd8:	jo     0x41cd53
  41ccda:	inc    ebp
  41ccdb:	jbe    0x41cc96
  41ccdd:	jne    0x41cca3
  41ccdf:	ss cmp esi,0x5c
  41cce3:	sti    
  41cce4:	mov    esi,0x8e15e7ba
  41cce9:	mov    eax,ds:0xfb2d05fc
  41ccee:	add    BYTE PTR [esi-0x4b],0x17
  41ccf2:	mov    DWORD PTR [eax],edi
  41ccf4:	aam    0xbe
  41ccf6:	mov    bl,cl
  41ccf8:	pop    ebp
  41ccf9:	pop    eax
  41ccfa:	call   0xfcec2500
  41ccff:	or     ch,BYTE PTR [ecx]
  41cd01:	and    al,0x21
  41cd03:	add    eax,0x2ea7b942
  41cd08:	push   ds
  41cd09:	push   edi
  41cd0a:	add    bl,bh
  41cd0c:	sbb    bh,BYTE PTR [edx]
  41cd0e:	or     BYTE PTR [ebp-0x33a97c7],dh
  41cd14:	fld1   
  41cd16:	sbb    edi,DWORD PTR [edx-0x2b]
  41cd19:	and    BYTE PTR [edi+eax*1],al
  41cd1c:	adc    ah,0x9b
  41cd1f:	aas    
  41cd20:	imul   esp,DWORD PTR [edx-0x687dfb59],0x95050ecb
  41cd2a:	jnp    0x41cd2c
  41cd2c:	mov    ecx,0xee319c46
  41cd31:	retf   0xfc25
  41cd34:	ret    
  41cd35:	add    ebp,ebp
  41cd37:	add    al,0xf
  41cd39:	add    eax,0x5f419c75
  41cd3e:	jnp    0x41cce7
  41cd40:	add    eax,0x96c4fc82
  41cd45:	or     bl,0x45
  41cd48:	pop    edi
  41cd49:	mov    DWORD PTR [esi],ebx
  41cd4b:	add    BYTE PTR [esi-0xb24a0d],al
  41cd51:	sar    al,1
  41cd53:	jp     0x41cd98
  41cd55:	inc    esi
  41cd56:	js     0x41ccf2
  41cd58:	add    al,0x82
  41cd5a:	mov    esp,0xdcda19e9
  41cd5f:	add    al,0x1c
  41cd61:	inc    esp
  41cd62:	cwde   
  41cd63:	xor    BYTE PTR [edi-0x9],ch
  41cd66:	jge    0x41cd94
  41cd68:	sahf   
  41cd69:	jmp    0xc460:0x42c63108
  41cd70:	xchg   ebp,eax
  41cd71:	push   0xffffff98
  41cd73:	pushf  
  41cd74:	imul   ebx,DWORD PTR [esi-0x55],0xffffff80
  41cd78:	and    eax,ebx
  41cd7a:	in     eax,dx
  41cd7b:	add    BYTE PTR [ecx+0x5e],0x9
  41cd7f:	add    al,BYTE PTR [edx-0x321ab435]
  41cd85:	cmc    
  41cd86:	adc    eax,0x1a26c972
  41cd8b:	xor    al,0xbd
  41cd8d:	xchg   ecx,esp
  41cd8f:	fild   WORD PTR [eax]
  41cd91:	jmp    0x41cdf1
  41cd93:	repnz gs inc ebp
  41cd96:	shr    ah,cl
  41cd98:	cli    
  41cd99:	inc    ebp
  41cd9a:	add    BYTE PTR [ebp+0x22],dl
  41cd9d:	inc    esp
  41cd9e:	inc    edx
  41cd9f:	or     ah,BYTE PTR [edx-0x36]
  41cda2:	cmp    al,BYTE PTR [edi+0x7e428631]
  41cda8:	leave  
  41cda9:	jl     0x41cdc8
  41cdab:	push   cs
  41cdac:	cmp    bh,BYTE PTR [ebp-0x7]
  41cdaf:	sub    eax,0x71c940e1
  41cdb4:	lds    edx,FWORD PTR [edi-0x3d]
  41cdb7:	leave  
  41cdb8:	leave  
  41cdb9:	std    
  41cdba:	adc    esp,ecx
  41cdbc:	jg     0x41cdde
  41cdbe:	dec    DWORD PTR [esi+0x6c]
  41cdc1:	(bad)
  41cdc4:	push   0xd
  41cdc6:	pop    edi
  41cdc7:	fsubp  st(3),st
  41cdc9:	mov    ah,0x9d
  41cdcb:	(bad)  
  41cdcc:	in     eax,0x85
  41cdce:	dec    edi
  41cdcf:	mov    ebx,0x48cb81b8
  41cdd4:	icebp  
  41cdd5:	cmp    ebx,DWORD PTR [ecx+eax*8+0x6c4285e9]
  41cddc:	add    cl,al
  41cdde:	push   DWORD PTR [esi-0x14]
  41cde1:	add    al,0x5c
  41cde3:	ins    DWORD PTR es:[edi],dx
  41cde4:	mov    edx,0x2619cb86
  41cde9:	mov    DWORD PTR [esi+0x6c],0x6036d272
  41cdf0:	call   0xe19b9388
  41cdf5:	add    BYTE PTR ds:0x6e00066d,cl
  41cdfb:	inc    ecx
  41cdfc:	cmp    eax,eax
  41cdfe:	lods   al,BYTE PTR ds:[esi]
  41cdff:	repnz sub ah,0xdc
  41ce03:	mov    ch,0x16
  41ce05:	sbb    BYTE PTR [edx],0xa2
  41ce08:	mov    eax,ds:0x59412f43
  41ce0d:	push   esi
  41ce0e:	jo     0x41ce67
  41ce10:	xchg   BYTE PTR [ebx-0x17f5bee4],al
  41ce16:	push   ebp
  41ce17:	lods   al,BYTE PTR ds:[esi]
  41ce18:	hlt    
  41ce19:	push   DWORD PTR [ebx+0x51840586]
  41ce1f:	inc    ebx
  41ce20:	or     al,BYTE PTR [eax]
  41ce22:	pushf  
  41ce23:	and    eax,0xdd280006
  41ce28:	pop    esi
  41ce29:	add    ebp,edi
  41ce2b:	inc    eax
  41ce2c:	mov    DWORD PTR [ebp-0x1],edi
  41ce2f:	inc    eax
  41ce30:	add    eax,0xa437d8e
  41ce35:	add    BYTE PTR [ebp+ebp*1+0x2],ah
  41ce39:	push   esi
  41ce3a:	test   DWORD PTR [eax],0xc258fffb
  41ce40:	mov    dl,0xf
  41ce42:	arpl   cx,si
  41ce44:	or     BYTE PTR [eax],al
  41ce46:	(bad)  
  41ce48:	das    
  41ce49:	in     al,dx
  41ce4a:	mov    ebp,0xabbb0a00
  41ce4f:	call   0xa62dce9d
  41ce54:	fucomp st(0)
  41ce56:	adc    eax,0xfff5b4
  41ce5b:	push   ss
  41ce5c:	sbb    eax,0xa74783f6
  41ce61:	add    eax,0xa438484
  41ce66:	add    dh,al
  41ce68:	or     BYTE PTR [edx+0x9406f00],0x5
  41ce6f:	push   edi
  41ce70:	call   0xe8c7cebe
  41ce75:	and    eax,0xf4b68674
  41ce7a:	jg     0x41ce5a
  41ce7c:	mov    BYTE PTR [esi],0x74
  41ce7f:	jbe    0x41cedd
  41ce81:	and    edx,DWORD PTR [eax]
  41ce83:	push   ecx
  41ce84:	(bad)  
  41ce86:	out    0x13,eax
  41ce88:	push   ebx
  41ce89:	lods   eax,DWORD PTR ds:[esi]
  41ce8a:	cld    
  41ce8b:	das    
  41ce8c:	inc    esi
  41ce8d:	or     DWORD PTR [eax],eax
  41ce8f:	xchg   al,dl
  41ce91:	mov    esi,0x4be33d88
  41ce96:	in     al,dx
  41ce97:	push   ds
  41ce98:	rcr    DWORD PTR [ebp+0x33d321fc],cl
  41ce9e:	lock push ebp
  41cea0:	test   eax,0x9dcb8714
  41cea5:	jnp    0x41cee9
  41cea7:	sbb    ah,bl
  41cea9:	dec    ecx
  41ceaa:	push   eax
  41ceab:	or     eax,0xf030be2f
  41ceb0:	pusha  
  41ceb1:	mov    ah,0x73
  41ceb3:	lea    edi,[ebx+0x5375ff06]
  41ceb9:	push   esi
  41ceba:	std    
  41cebb:	pop    ebx
  41cebc:	mov    ch,0x8e
  41cebe:	stc    
  41cebf:	add    ch,bl
  41cec1:	fsubr  QWORD PTR [ebp+0x7264c683]
  41cec7:	test   eax,0x89066984
  41cecc:	dec    ebx
  41cecd:	cmc    
  41cece:	xchg   ecx,eax
  41cecf:	scas   al,BYTE PTR es:[edi]
  41ced0:	or     eax,0xe889aa7
  41ced5:	out    dx,al
  41ced6:	push   es
  41ced7:	add    BYTE PTR [esi+0x3e75cc30],al
  41cedd:	inc    edx
  41cede:	dec    ebx
  41cedf:	adc    BYTE PTR [ecx+0x35104ba7],cl
  41cee5:	adc    al,0x77
  41cee7:	jg     0x41ce6f
  41cee9:	imul   eax,DWORD PTR [esi],0xfd42fbfd
  41ceef:	fwait
  41cef0:	and    DWORD PTR [ebx+0x12],esp
  41cef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cef4:	inc    BYTE PTR [ecx*1-0x1f39ee26]
  41cefb:	add    eax,DWORD PTR [esi+0xe97a5c7]
  41cf01:	retf   0x36c
  41cf04:	xchg   BYTE PTR [edx-0x48],al
  41cf07:	mov    ch,0xd4
  41cf09:	xor    al,0xe4
  41cf0b:	jb     0x41cece
  41cf0d:	inc    edx
  41cf0e:	loope  0x41cf13
  41cf10:	cs pop es
  41cf12:	int3   
  41cf13:	mov    ds:0xb025c732,al
  41cf18:	add    BYTE PTR [edx+0x42860460],dl
  41cf1e:	fdiv   st,st(5)
  41cf20:	push   cs
  41cf21:	ret    0x460
  41cf24:	add    BYTE PTR [esi+0x7d911242],al
  41cf2a:	cmp    dl,BYTE PTR [edx]
  41cf2c:	xor    al,0xee
  41cf2e:	out    0x83,al
  41cf30:	mov    ds:0xb02dc6fa,al
  41cf35:	(bad)  
  41cf37:	pop    edx
  41cf38:	adc    BYTE PTR [esi],ch
  41cf3a:	jmp    eax
  41cf3c:	cmp    ebx,esp
  41cf3e:	xor    al,0x71
  41cf40:	neg    BYTE PTR [ecx+0x76197442]
  41cf46:	pop    ebx
  41cf47:	cmc    
  41cf48:	bswap  ebx
  41cf4a:	aam    0xe8
  41cf4c:	mov    ds:0x47a91694,al
  41cf51:	xchg   bh,al
  41cf53:	dec    eax
  41cf54:	xchg   ebp,eax
  41cf56:	dec    ebp
  41cf57:	mov    di,0xca7a
  41cf5b:	mov    al,0x5
  41cf5d:	xchg   BYTE PTR [edx-0x6d],al
  41cf60:	mov    ds:0xbbdc6b2,al
  41cf65:	sahf   
  41cf66:	stos   BYTE PTR es:[edi],al
  41cf67:	or     DWORD PTR [ebp+eiz*8+0x5d],eax
  41cf6b:	jle    0x41cf9e
  41cf6d:	adc    ebx,ebp
  41cf6f:	cmc    
  41cf70:	push   0x25
  41cf72:	push   edi
  41cf73:	add    ah,BYTE PTR [ebp+0x25]
  41cf76:	pop    ecx
  41cf77:	bnd jmp 0xea3bac7d
  41cf7d:	adc    BYTE PTR ds:0x42c14122,dl
  41cf83:	jle    0x41cf68
  41cf85:	add    BYTE PTR [edi-0x5ffdfa0],al
  41cf8b:	pop    ecx
  41cf8c:	bnd jmp 0x8d23581a
  41cf92:	not    DWORD PTR [esi-0xe]
  41cf95:	jo     0x41cf55
  41cf97:	push   edx
  41cf98:	mov    WORD PTR [ecx-0x172f416c],gs
  41cf9e:	test   DWORD PTR [edx+0x7f],eax
  41cfa1:	scas   al,BYTE PTR es:[edi]
  41cfa2:	push   0xffffff82
  41cfa4:	sub    ecx,0xaf074285
  41cfaa:	cli    
  41cfab:	add    al,0xe6
  41cfad:	cli    
  41cfae:	pop    ds
  41cfaf:	repz repnz sbb al,0x96
  41cfb3:	ret    
  41cfb4:	leave  
  41cfb5:	loope  0x41cf54
  41cfb7:	scas   al,BYTE PTR es:[edi]
  41cfb8:	imul   ebp,DWORD PTR [ecx],0xffffff82
  41cfbb:	push   0xffffffb3
  41cfbd:	jg     0x41cf44
  41cfbf:	inc    edx
  41cfc0:	jg     0x41cf43
  41cfc2:	or     bl,ch
  41cfc4:	icebp  
  41cfc5:	pop    es
  41cfc6:	mov    bl,0xd4
  41cfc8:	std    
  41cfc9:	call   DWORD PTR [edi+0x7f7d44cb]
  41cfcf:	ret    
  41cfd0:	enter  0xea21,0x3d
  41cfd4:	or     al,ch
  41cfd6:	test   DWORD PTR [ebx],ebp
  41cfd8:	rcr    ebp,cl
  41cfda:	imul   ecx,ebx,0xc2103d4c
  41cfe0:	lea    eax,[eax]
  41cfe2:	scas   eax,DWORD PTR es:[edi]
  41cfe3:	inc    ebp
  41cfe4:	or     al,BYTE PTR [ebx]
  41cfe6:	push   esp
  41cfe7:	mov    dl,0xa2
  41cfe9:	sbb    BYTE PTR [edi+0xe80a45],0xff
  41cff0:	stos   BYTE PTR es:[edi],al
  41cff1:	hlt    
  41cff2:	(bad)  
  41cff3:	jmp    0x41cf7a
  41cff5:	add    eax,0xa3edf84
  41cffa:	add    ah,ah
  41cffc:	or     ah,dh
  41cffe:	mov    esp,edi
  41d000:	shl    edx,0xff
  41d003:	outs   dx,DWORD PTR ds:[esi]
  41d004:	retf   0x74cb
  41d007:	cmp    ecx,eax
  41d009:	jb     0x41cf8b
  41d00b:	pop    edi
  41d00c:	inc    ebp
  41d00d:	or     cl,BYTE PTR [ebp-0x74a7a2a5]
  41d013:	jmp    DWORD PTR [ebp-0x5cae196b]
  41d019:	add    DWORD PTR [ebp+0x43],0x5c0c3fc7
  41d020:	aas    
  41d021:	lds    edx,FWORD PTR [ecx+0x40]
  41d024:	out    dx,al
  41d025:	jb     0x41d027
  41d027:	pop    ds
  41d028:	inc    ebp
  41d029:	loop   0x41d09e
  41d02b:	cmp    DWORD PTR [ebp+esi*8-0xc6d5575],esp
  41d032:	xchg   edi,eax
  41d033:	imul   edi,DWORD PTR [esi],0xa
  41d036:	add    ah,cl
  41d038:	mov    edx,0x164df81
  41d03d:	cli    
  41d03e:	cmp    ebp,DWORD PTR [ecx]
  41d040:	cmp    ch,BYTE PTR [eax]
  41d042:	cmp    esp,DWORD PTR [ecx]
  41d044:	and    al,0x14
  41d046:	(bad)  
  41d047:	fimul  DWORD PTR [eax+0x7f]
  41d04a:	js     0x41d00f
  41d04c:	mov    ebp,0xeb0728b2
  41d051:	in     al,dx
  41d052:	inc    BYTE PTR [eax]
  41d054:	and    cl,al
  41d056:	mov    dl,0xf
  41d058:	sub    eax,DWORD PTR [ebx-0xd]
  41d05b:	inc    DWORD PTR [esi-0x69bd7a95]
  41d061:	jecxz  0x41d075
  41d063:	clc    
  41d064:	push   ebp
  41d065:	sbb    DWORD PTR [eax],esp
  41d067:	aaa    
  41d068:	sbb    ecx,DWORD PTR [edi]
  41d06a:	sbb    DWORD PTR [esi+0x66afe],eax
  41d070:	mov    ebp,0x684191f
  41d075:	push   0x6
  41d077:	add    BYTE PTR [edi],ch
  41d079:	adc    cl,BYTE PTR [esi]
  41d07b:	add    BYTE PTR [esi+0x5a4acfc7],al
  41d081:	scas   eax,DWORD PTR es:[edi]
  41d082:	dec    DWORD PTR [edi+0x6e]
  41d085:	int    0x8e
  41d087:	cld    
  41d088:	push   ecx
  41d089:	aad    0x4a
  41d08b:	lock std 
  41d08d:	test   eax,0x55d388de
  41d092:	jg     0x41d0d2
  41d094:	mov    dh,0xd4
  41d096:	dec    ebx
  41d097:	lock std 
  41d099:	sub    edx,edi
  41d09b:	mov    BYTE PTR [ebx-0x65c18083],bh
  41d0a1:	in     al,0x4b
  41d0a3:	in     al,dx
  41d0a4:	bndldx bnd2,[esi]
  41d0a7:	mov    ebx,ecx
  41d0a9:	test   eax,eax
  41d0ab:	aas    
  41d0ac:	mov    ch,BYTE PTR [ecx-0x7b]
  41d0af:	dec    edx
  41d0b0:	repnz push esp
  41d0b2:	enter  0x120c,0xaa
  41d0b6:	jle    0x41d0f6
  41d0b8:	add    BYTE PTR [ebx-0x2c],dh
  41d0bb:	dec    ebx
  41d0bc:	lock (bad) 
  41d0be:	cmp    esi,esp
  41d0c0:	mov    BYTE PTR [ebx-0x53],cl
  41d0c3:	lea    edi,[edi-0x872b806]
  41d0c9:	gs push 0x69868981
  41d0cf:	push   es
  41d0d0:	mov    DWORD PTR [ebx-0x27],ecx
  41d0d3:	test   eax,0x5942666f
  41d0d8:	mov    fs,WORD PTR [eax+ebx*2+0x52448c53]
  41d0df:	pop    ebx
  41d0e0:	adc    edi,DWORD PTR [edx+0x6a]
  41d0e3:	pop    esi
  41d0e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0e5:	fwait
  41d0e6:	push   edi
  41d0e7:	ja     0x41d12f
  41d0e9:	xchg   esi,eax
  41d0ea:	in     al,dx
  41d0eb:	fadd   QWORD PTR [ecx+ecx*8-0x17546ed2]
  41d0f2:	pusha  
  41d0f3:	and    ah,BYTE PTR [eax-0x5fd284a0]
  41d0f9:	jb     0x41d0c6
  41d0fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0fc:	scas   eax,DWORD PTR es:[edi]
  41d0fd:	jae    0x41d100
  41d0ff:	lods   al,BYTE PTR ds:[esi]
  41d100:	adc    esp,0x37
  41d103:	fcomp  DWORD PTR [esp+edx*8-0x2a3637c5]
  41d10a:	ffree  st(7)
  41d10c:	ror    ebx,0xe1
  41d10f:	xchg   edx,eax
  41d110:	sub    edx,DWORD PTR [edx+ebp*2]
  41d113:	jecxz  0x41d0b4
  41d115:	cmp    ch,BYTE PTR ds:0x42c65bf9
  41d11b:	dec    edx
  41d11c:	cmp    eax,0xdb8b0700
  41d121:	stos   DWORD PTR es:[edi],eax
  41d122:	rcr    DWORD PTR [ebx],cl
  41d124:	stos   DWORD PTR es:[edi],eax
  41d125:	sbb    ah,al
  41d127:	sbb    DWORD PTR [ecx],esi
  41d129:	lock fwait
  41d12b:	adc    eax,0xc95e4478
  41d130:	and    DWORD PTR [edi+ecx*1],edx
  41d133:	std    
  41d134:	mov    al,0x8b
  41d136:	mov    ecx,0xe2517826
  41d13b:	enter  0x1821,0xff
  41d13f:	cld    
  41d140:	mov    WORD PTR [ebp+0x4967da71],cs
  41d146:	jmp    0x25cb:0xd120207f
  41d14d:	mov    al,0x8e
  41d14f:	js     0x41d15a
  41d151:	out    0x39,al
  41d153:	xchg   edi,eax
  41d154:	sub    DWORD PTR [eax],0x594cc967
  41d15a:	add    esp,edi
  41d15c:	and    DWORD PTR [edx-0x71],esi
  41d15f:	push   edx
  41d160:	loope  0x41d149
  41d162:	(bad)  
  41d163:	push   ebp
  41d164:	repnz inc eax
  41d166:	push   edi
  41d167:	pop    ebx
  41d168:	repnz inc esi
  41d16a:	std    
  41d16b:	add    esi,esi
  41d16d:	push   ecx
  41d16e:	push   ebx
  41d16f:	imul   esi,edx,0x36
  41d172:	mov    dl,0x46
  41d174:	mov    dl,0xaa
  41d176:	test   DWORD PTR [edi+0x1c],edx
  41d179:	sbb    DWORD PTR [esi+edx*1+0xa],esi
  41d17d:	jb     0x41d1c4
  41d17f:	imul   esi,DWORD PTR [ecx],0xffffff81
  41d182:	add    BYTE PTR [ecx-0x716b966],dl
  41d188:	xor    dl,bh
  41d18a:	fcmovnb st,st(5)
  41d18c:	inc    edx
  41d18d:	pusha  
  41d18e:	icebp  
  41d18f:	popf   
  41d190:	mov    dl,0xe1
  41d192:	mul    BYTE PTR [eax]
  41d194:	push   edi
  41d195:	sbb    al,0xe1
  41d197:	fld    QWORD PTR [edx]
  41d199:	or     al,BYTE PTR [eax+0x73]
  41d19c:	ret    
  41d19d:	rcr    esi,0xdc
  41d1a0:	sub    al,0x57
  41d1a2:	(bad)  
  41d1a3:	push   ds
  41d1a4:	popw   ss
  41d1a6:	sub    DWORD PTR [edx-0xf2683a9],eax
  41d1ac:	rol    BYTE PTR ds:0xf34a6ebe,1
  41d1b2:	(bad)  
  41d1b4:	lea    eax,[esi-0x17]
  41d1b7:	add    al,0x82
  41d1b9:	add    eax,0xc0fbb046
  41d1be:	stos   BYTE PTR es:[edi],al
  41d1bf:	cld    
  41d1c0:	std    
  41d1c1:	imul   edi,DWORD PTR [edx],0x197eec9f
  41d1c7:	call   0xaf02:0x87007eef
  41d1ce:	or     al,0x47
  41d1d0:	add    BYTE PTR [edx],cl
  41d1d2:	push   ebp
  41d1d3:	lods   al,BYTE PTR ds:[esi]
  41d1d4:	scas   al,BYTE PTR es:[edi]
  41d1d5:	and    ecx,edi
  41d1d7:	sub    BYTE PTR [edx-0x1e],bl
  41d1da:	adc    bl,bh
  41d1dc:	inc    ecx
  41d1dd:	pop    ebp
  41d1de:	push   esi
  41d1df:	xor    al,0x2d
  41d1e1:	cs sbb al,0xe1
  41d1e4:	mov    ah,0x17
  41d1e6:	clc    
  41d1e7:	add    al,dh
  41d1e9:	add    BYTE PTR [edx],cl
  41d1eb:	mov    esp,DWORD PTR [edi-0x40]
  41d1ee:	(bad)  
  41d1ef:	or     al,0x1c
  41d1f1:	mov    eax,0x1a1474f5
  41d1f6:	cmc    
  41d1f7:	adc    eax,0x3253bb
  41d1fc:	xchg   edi,eax
  41d1fd:	push   0xffffffe1
  41d1ff:	dec    DWORD PTR [eax+0x2fffac0]
  41d205:	push   eax
  41d206:	pusha  
  41d207:	or     BYTE PTR [edi],al
  41d209:	shr    edx,1
  41d20b:	dec    DWORD PTR [eax+0x32ffd248]
  41d211:	dec    ecx
  41d212:	mov    dl,0x43
  41d214:	das    
  41d215:	push   ss
  41d216:	pop    ebx
  41d217:	jmp    0x41d218
  41d219:	and    eax,0x411f88ca
  41d21e:	or     al,BYTE PTR [ebx]
  41d220:	and    ch,BYTE PTR [ecx-0x46]
  41d223:	inc    ebx
  41d224:	das    
  41d225:	jp     0x41d1fc
  41d227:	jne    0x41d239
  41d229:	retf   0x645a
  41d22c:	call   0x3aa9:0x11ff522e
  41d233:	in     al,0x39
  41d235:	mov    bh,0x60
  41d237:	adc    BYTE PTR [ecx+0x29e527a6],dl
  41d23d:	mov    bh,0xe1
  41d23f:	or     esi,ebx
  41d241:	sbb    BYTE PTR [edx-0x1],ch
  41d244:	xchg   BYTE PTR [ebx],ah
  41d246:	and    dh,BYTE PTR [ecx]
  41d248:	mov    ebp,0xfd3b27
  41d24d:	jnp    0x41d22a
  41d24f:	idiv   DWORD PTR [edi]
  41d251:	xchg   BYTE PTR [esp+esi*1],dh
  41d254:	pop    ebx
  41d255:	or     eax,0x82c230a8
  41d25a:	imul   edi,DWORD PTR [ecx],0x56
  41d25d:	std    
  41d25e:	cli    
  41d25f:	lea    edi,[ebp+0x1a]
  41d262:	imul   eax,DWORD PTR [ecx-0x7eb5e52a],0x45
  41d269:	xor    BYTE PTR cs:[esi-0x36cf768c],dh
  41d270:	xchg   BYTE PTR [eax+0x73],al
  41d273:	mov    eax,ds:0x8931ad05
  41d278:	gs out dx,al
  41d27a:	imul   ebx,DWORD PTR [esi],0x6a92e0c
  41d280:	std    
  41d281:	xchg   ebx,eax
  41d282:	cmp    eax,edi
  41d284:	aas    
  41d285:	xchg   BYTE PTR [eax+0x20],al
  41d288:	push   ebp
  41d289:	sbb    DWORD PTR [esi+0x4e],esi
  41d28c:	inc    eax
  41d28d:	xchg   BYTE PTR [ebp+edx*4+0x46785612],dh
  41d294:	add    BYTE PTR ds:0x58391ed4,cl
  41d29a:	jne    0x41d2e4
  41d29c:	icebp  
  41d29d:	fcomp  DWORD PTR [edx+ebx*1+0x24]
  41d2a1:	mov    ss,eax
  41d2a3:	sbb    ah,BYTE PTR [esi+edi*2]
  41d2a6:	adc    edx,DWORD PTR [ebp+0x49ad1e12]
  41d2ac:	add    ch,bh
  41d2ae:	mov    eax,ds:0x7a00c389
  41d2b3:	call   0x4fbccf49
  41d2b8:	cmp    eax,0xf89593fd
  41d2bd:	aas    
  41d2be:	xchg   BYTE PTR [edx-0x67],al
  41d2c1:	fcom   QWORD PTR es:[ebx-0x6d]
  41d2c5:	sbb    cl,0x53
  41d2c8:	adc    eax,0x94a6ff1
  41d2cd:	je     0x41d2b8
  41d2cf:	push   ebx
  41d2d0:	mov    ecx,DWORD PTR [eax]
  41d2d2:	scas   al,BYTE PTR es:[edi]
  41d2d3:	push   ebx
  41d2d4:	fisttp QWORD PTR [ebx]
  41d2d6:	(bad)  
  41d2d7:	jmp    eax
  41d2d9:	cmp    dl,BYTE PTR [ecx+0x67]
  41d2dc:	shr    DWORD PTR [edx],cl
  41d2de:	(bad)  
  41d2df:	retf   0x3e0
  41d2e2:	xchg   BYTE PTR [edi],bh
  41d2e4:	out    dx,al
  41d2e5:	jmp    0x41d2c0
  41d2e7:	jmp    eax
  41d2e9:	jmp    0x5274:0x9cbbea31
  41d2f0:	into   
  41d2f1:	inc    ebx
  41d2f2:	xchg   bl,dh
  41d2f4:	xchg   edx,eax
  41d2f5:	mov    BYTE PTR [esi-0x9],al
  41d2f8:	push   ds
  41d2f9:	or     eax,DWORD PTR [esi+0x6af67ed]
  41d2ff:	pop    esi
  41d300:	sub    BYTE PTR [edx+0x3e0be5d],al
  41d306:	xchg   bh,ch
  41d308:	iret   
  41d309:	mov    eax,0xfed8ebb3
  41d30e:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41d310:	lahf   
  41d311:	add    edi,DWORD PTR [ebx-0x42]
  41d314:	add    eax,DWORD PTR cs:[eax]
  41d317:	xchg   BYTE PTR [edx+0x9],al
  41d31a:	push   cs
  41d31b:	xor    al,0x54
  41d31d:	jecxz  0x41d2a5
  41d31f:	icebp  
  41d320:	inc    edx
  41d321:	gs popa 
  41d323:	sub    DWORD PTR [ebx-0x20],edx
  41d326:	fdivr  QWORD PTR [esi+eax*2+0x41fd7fec]
  41d32d:	loope  0x41d332
  41d32f:	pop    ecx
  41d330:	cmc    
  41d331:	ror    BYTE PTR [edx],1
  41d333:	clc    
  41d334:	scas   al,BYTE PTR es:[edi]
  41d335:	loopne 0x41d33a
  41d337:	xchg   bh,al
  41d339:	or     DWORD PTR [edx+ecx*4],edi
  41d33c:	in     al,dx
  41d33d:	loope  0x41d356
  41d33f:	push   ss
  41d340:	push   esi
  41d341:	repnz ins DWORD PTR es:[edi],dx
  41d343:	ret    0x8e45
  41d346:	imul   ecx,DWORD PTR [edx-0x71a9f5be],0xffffff9a
  41d34d:	inc    esi
  41d34e:	jmp    0x955e28e7
  41d353:	rcl    BYTE PTR [edx],1
  41d355:	or     dl,BYTE PTR [ecx+0x76f25bfb]
  41d35b:	or     DWORD PTR [ebx-0x80],esp
  41d35e:	cmc    
  41d35f:	shr    DWORD PTR [edx],1
  41d361:	xchg   DWORD PTR [edi+0xd],esp
  41d364:	iret   
  41d365:	push   edx
  41d366:	shl    bh,1
  41d368:	mov    edx,0x4185e909
  41d36d:	cmp    eax,0xa023201
  41d372:	add    BYTE PTR [esi+esi*8+0x7b],cl
  41d376:	in     eax,dx
  41d377:	sbb    al,0xd5
  41d379:	add    DWORD PTR [edx+0x0],esp
  41d37c:	inc    esp
  41d37d:	push   0x4b
  41d37f:	das    
  41d380:	or     eax,0x4ac2de4f
  41d385:	lock popa 
  41d387:	xchg   edi,eax
  41d388:	pop    ebx
  41d389:	mov    ebx,0xd4fcf944
  41d38e:	add    eax,0x7c4f4462
  41d393:	icebp  
  41d394:	sbb    eax,0x1cfef387
  41d399:	pop    ebx
  41d39a:	dec    ebp
  41d39b:	not    BYTE PTR [esi+0x518d8532]
  41d3a1:	(bad)  
  41d3a2:	repnz pop esp
  41d3a4:	jle    0x41d3f5
  41d3a6:	jl     0x41d399
  41d3a8:	in     eax,dx
  41d3a9:	pusha  
  41d3aa:	loop   0x41d382
  41d3ac:	cld    
  41d3ad:	enter  0x54d,0xe
  41d3b1:	ret    
  41d3b2:	icebp  
  41d3b3:	add    BYTE PTR [eax+0x33],al
  41d3b6:	cmp    cl,BYTE PTR [ebx-0x17e59d55]
  41d3bc:	loope  0x41d35e
  41d3be:	cmc    
  41d3bf:	jmp    DWORD PTR [eax+ecx*4-0x16]
  41d3c3:	jae    0x41d443
  41d3c5:	inc    esi
  41d3c6:	or     dl,BYTE PTR [edi+0x0]
  41d3c9:	push   ebx
  41d3ca:	loop   0x41d3de
  41d3cc:	scas   eax,DWORD PTR es:[edi]
  41d3cd:	inc    esi
  41d3ce:	cmc    
  41d3cf:	jne    0x41d3a0
  41d3d1:	lods   al,BYTE PTR ds:[esi]
  41d3d2:	ja     0x41d3e0
  41d3d4:	add    BYTE PTR [ebx],dh
  41d3d6:	add    bh,bh
  41d3d8:	fisubr DWORD PTR [ebp-0x3750bc43]
  41d3de:	(bad)  
  41d3df:	or     al,0x0
  41d3e1:	or     BYTE PTR [ecx+edx*2],0x8b
  41d3e5:	cmp    cl,BYTE PTR [edx]
  41d3e7:	leave  
  41d3e8:	(bad)  
  41d3e9:	jmp    0x771d0d2b
  41d3ee:	or     ch,BYTE PTR [esi]
  41d3f0:	dec    esp
  41d3f1:	mov    al,0xd1
  41d3f3:	dec    eax
  41d3f4:	add    bl,BYTE PTR [edi-0x74bb80bb]
  41d3fa:	(bad)  
  41d3fb:	pop    ecx
  41d3fc:	call   0x4bf5e9
  41d401:	out    0x11,al
  41d403:	cs and bh,dl
  41d406:	inc    esi
  41d407:	jle    0x41d42c
  41d409:	repnz adc DWORD PTR [esi],ebp
  41d40c:	dec    eax
  41d40d:	xchg   DWORD PTR [esi+0x53],ebx
  41d410:	add    BYTE PTR [edi+0x14],bl
  41d413:	cmc    
  41d414:	adc    eax,0x32564f
  41d419:	sbb    al,0x1d
  41d41b:	test   eax,0xf5ab30e8
  41d420:	adc    eax,0x49ed27
  41d425:	(bad)  
  41d426:	or     eax,0x9f40c889
  41d42b:	mov    bh,0x89
  41d42d:	xchg   BYTE PTR [edi],dl
  41d42f:	jmp    0xde13:0xea1eff17
  41d436:	pop    esp
  41d437:	add    DWORD PTR [esp+ebp*2+0xd00065a],eax
  41d43e:	mov    ecx,0x9fdfaea5
  41d443:	nop
  41d444:	mov    BYTE PTR [eax],al
  41d446:	into   
  41d447:	fnsave [esp+ecx*1+0xdf70a]
  41d44e:	xchg   ah,bl
  41d450:	push   ecx
  41d451:	and    ecx,DWORD PTR [edx]
  41d453:	pop    ebx
  41d454:	push   es
  41d455:	add    BYTE PTR [edi-0x796f8ca8],al
  41d45b:	pop    ebx
  41d45c:	push   es
  41d45d:	mov    DWORD PTR [edx],ecx
  41d45f:	jg     0x41d3e7
  41d461:	push   DWORD PTR [ecx-0x7d8972a6]
  41d467:	pop    ebx
  41d468:	add    DWORD PTR [esp+eax*1+0xb00065b],eax
  41d46f:	lahf   
  41d470:	rol    BYTE PTR [edi+0x3],cl
  41d473:	jg     0x41d447
  41d475:	and    ebx,DWORD PTR [esi-0x79ffd330]
  41d47b:	adc    BYTE PTR [edx+0x23],bl
  41d47e:	push   es
  41d47f:	pop    edx
  41d480:	push   es
  41d481:	add    dh,bh
  41d483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d484:	rcl    BYTE PTR [edi*8-0x79781623],cl
  41d48b:	pop    ecx
  41d48c:	push   es
  41d48d:	call   0x488f1d
  41d492:	push   es
  41d493:	mov    esi,0x588610d2
  41d498:	jb     0x41d4a2
  41d49a:	xchg   DWORD PTR [ecx+0x6],ebx
  41d49d:	push   0x39
  41d49f:	pop    ecx
  41d4a0:	add    ah,BYTE PTR [edx+edi*2]
  41d4a3:	pusha  
  41d4a4:	jecxz  0x41d4b5
  41d4a6:	xchg   ebp,eax
  41d4a7:	inc    edx
  41d4a8:	and    DWORD PTR [eax+eax*1],eax
  41d4ab:	and    edx,edi
  41d4ad:	or     al,0xec
  41d4af:	and    DWORD PTR [eax+0x501299c1],ecx
  41d4b5:	pop    esp
  41d4b6:	loopne 0x41d511
  41d4b8:	dec    edi
  41d4b9:	aad    0x63
  41d4bb:	xchg   edi,eax
  41d4bc:	add    ah,cl
  41d4be:	mov    WORD PTR [ebp+0x26],?
  41d4c1:	or     eax,0x6d3ff27f
  41d4c6:	mov    ds:0x86e04fe9,eax
  41d4cb:	inc    ebp
  41d4cc:	cmp    DWORD PTR es:[ebp+ebp*2-0xfc1f1e],ebp
  41d4d4:	std    
  41d4d5:	lock mov WORD PTR [ebp+0x26],es
  41d4d9:	in     eax,dx
  41d4da:	rol    DWORD PTR [esi+0x3e],0xe1
  41d4de:	mov    bh,BYTE PTR [esi]
  41d4e0:	cmp    ah,BYTE PTR [ebx-0x5dbb4efc]
  41d4e6:	mov    al,BYTE PTR [ebx-0x26]
  41d4e9:	and    al,BYTE PTR [ecx+0x32]
  41d4ec:	inc    ecx
  41d4ed:	pop    edx
  41d4ee:	arpl   WORD PTR [ebx+0x14985b4f],bx
  41d4f4:	xor    al,BYTE PTR [esi+ecx*1+0x7a]
  41d4f8:	pop    edx
  41d4f9:	pop    esp
  41d4fa:	mov    ds:0x3f794f83,al
  41d4ff:	mov    ds:0xf4c3662a,al
  41d504:	sub    ah,BYTE PTR [edi+ecx*2]
  41d507:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d508:	ret    0x3e0
  41d50b:	xchg   BYTE PTR [ebx+0x100df6c],bh
  41d511:	inc    edx
  41d512:	loope  0x41d517
  41d514:	pop    esi
  41d515:	mov    ecx,0x59860380
  41d51a:	jge    0x41d51f
  41d51c:	xchg   BYTE PTR [edx+0x2b],al
  41d51f:	add    al,0x86
  41d521:	dec    edi
  41d522:	or     DWORD PTR [ebp+0x51],edi
  41d525:	(bad)  
  41d526:	jle    0x41d4cd
  41d528:	dec    ecx
  41d529:	mul    ecx
  41d52b:	lahf   
  41d52c:	pop    ds
  41d52d:	dec    esi
  41d52e:	bnd jo 0x41d4f6
  41d531:	cmp    bh,BYTE PTR [edi+0x6d]
  41d534:	es iret 
  41d536:	or     ecx,ebp
  41d538:	test   edi,eax
  41d53a:	inc    esi
  41d53b:	cmc    
  41d53c:	or     al,0xc3
  41d53e:	sub    eax,0xa428265
  41d543:	inc    ebx
  41d544:	in     al,0xc7
  41d546:	inc    esi
  41d547:	fsin   
  41d549:	retf   0xe12d
  41d54c:	popf   
  41d54d:	pop    edx
  41d54e:	and    ah,cl
  41d550:	test   DWORD PTR [edx+0x60],eax
  41d553:	retf   0xcafe
  41d556:	sub    eax,0x265a8dc1
  41d55b:	rol    DWORD PTR [ebp+0x72a67f42],0xbb
  41d562:	dec    ebp
  41d563:	int    0xcd
  41d565:	(bad)  
  41d566:	repnz hlt 
  41d568:	mov    ch,0x4d
  41d56a:	jge    0x41d579
  41d56c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d56d:	data16 hlt 
  41d56f:	cmp    eax,0xc5f4df1
  41d574:	add    ch,bh
  41d576:	jbe    0x41d4fc
  41d578:	int    0xa9
  41d57a:	ss push edx
  41d57c:	push   ecx
  41d57d:	mov    ecx,DWORD PTR [edx]
  41d57f:	or     ch,cl
  41d581:	or     al,0x87
  41d583:	pop    ecx
  41d584:	call   0xd1a:0x92dd218
  41d58b:	(bad)  
  41d58c:	es stc 
  41d58e:	fld    TBYTE PTR [edx]
  41d590:	jb     0x41d5ac
  41d592:	mov    ecx,0xf62dcd75
  41d597:	loope  0x41d5a0
  41d599:	cmp    DWORD PTR [esi-0xe],ecx
  41d59c:	add    BYTE PTR [ebp+ecx*4+0x3e385342],dh
  41d5a3:	and    BYTE PTR cs:[edi+0x18ffce6c],al
  41d5aa:	mov    edi,0xc0232446
  41d5af:	inc    esi
  41d5b0:	and    al,0x8f
  41d5b2:	inc    edx
  41d5b3:	jle    0x41d60c
  41d5b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5b6:	xor    eax,0xb4a2182e
  41d5bb:	ja     0x41d5c5
  41d5bd:	je     0x41d5e9
  41d5bf:	push   es
  41d5c0:	mov    ebx,DWORD PTR [edx+0x6404e156]
  41d5c6:	adc    eax,0xd4a142e
  41d5cb:	sbb    BYTE PTR cs:[edi+0x732476b5],bl
  41d5d2:	mov    ecx,0x6273ffc9
  41d5d7:	jbe    0x41d630
  41d5d9:	add    BYTE PTR [edi],al
  41d5db:	mov    dl,0xe2
  41d5dd:	dec    DWORD PTR [eax]
  41d5df:	mov    ch,0x76
  41d5e1:	and    al,0x8b
  41d5e3:	mov    edi,0x99d72446
  41d5e8:	xchg   esi,eax
  41d5e9:	loopne 0x41d604
  41d5eb:	mov    ah,0x89
  41d5ed:	jl     0x41d582
  41d5ef:	push   edx
  41d5f0:	bnd je 0x41d59b
  41d5f3:	push   0xfbb30c6f
  41d5f8:	mov    bh,BYTE PTR [ebx+eax*4+0x4e]
  41d5fc:	mov    ebx,DWORD PTR [ebx+edx*4+0x52]
  41d600:	loope  0x41d60d
  41d602:	test   BYTE PTR [ebx],ch
  41d604:	push   es
  41d605:	je     0x41d668
  41d607:	sbb    al,0xe2
  41d609:	jae    0x41d5ca
  41d60b:	mov    bh,0xf5
  41d60d:	mov    ebp,DWORD PTR [ebx]
  41d60f:	ins    DWORD PTR es:[edi],dx
  41d610:	sbb    al,BYTE PTR [ebp-0x72e0c288]
  41d616:	xchg   BYTE PTR [edi-0x7aa1b82e],bl
  41d61c:	cmp    eax,DWORD PTR [eax]
  41d61e:	xchg   al,dl
  41d620:	xor    ah,BYTE PTR [edx+ebx*4]
  41d623:	fcom   DWORD PTR [eax+eiz*2]
  41d626:	xchg   dl,ah
  41d628:	xor    al,0x68
  41d62a:	std    
  41d62b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d62c:	rcl    BYTE PTR [ebx],cl
  41d62e:	nop    DWORD PTR [edx]
  41d631:	mov    ebx,eax
  41d633:	dec    ebx
  41d634:	mov    ah,0x45
  41d636:	mov    ds:0xae7d7f5b,al
  41d63b:	loop   0x41d670
  41d63d:	fs add bh,ch
  41d640:	sbb    DWORD PTR [ebx+0x49ddf9fc],ebx
  41d646:	and    al,0x3e
  41d648:	or     DWORD PTR [esi-0x7ea479a3],0x43
  41d64f:	stos   BYTE PTR es:[edi],al
  41d650:	inc    edi
  41d651:	or     DWORD PTR [edx+0x76],0x4886c758
  41d658:	inc    ebx
  41d659:	mov    ah,0x45
  41d65b:	pop    edx
  41d65c:	pop    ebx
  41d65d:	lahf   
  41d65e:	xor    al,0xc3
  41d660:	ret    
  41d661:	pushf  
  41d662:	push   edx
  41d663:	or     eax,0xab3a8dbf
  41d668:	dec    DWORD PTR [eax+0x0]
  41d66b:	xchg   BYTE PTR [eax],ch
  41d66d:	sbb    DWORD PTR [edx-0x72],0x1774258d
  41d674:	sub    BYTE PTR [ebp+0x216eb138],bl
  41d67a:	aaa    
  41d67b:	or     ebp,DWORD PTR [edi+0x1c]
  41d67e:	data16 outs dx,BYTE PTR ds:[esi]
  41d680:	int3   
  41d681:	stos   DWORD PTR es:[edi],eax
  41d682:	std    
  41d683:	jns    0x41d66b
  41d685:	int    0x73
  41d687:	rol    DWORD PTR [ecx+0x59c5b80a],cl
  41d68d:	popf   
  41d68e:	adc    dh,BYTE PTR [edx+0x43]
  41d691:	out    dx,eax
  41d692:	inc    ebx
  41d693:	xchg   BYTE PTR [ecx],cl
  41d695:	xchg   esi,eax
  41d696:	pop    es
  41d697:	rol    BYTE PTR [eax],1
  41d699:	adc    eax,DWORD PTR [eax+0x4f]
  41d69c:	inc    edi
  41d69d:	loop   0x41d6ae
  41d69f:	jne    0x41d658
  41d6a1:	mov    ah,0x98
  41d6a3:	add    BYTE PTR [ecx],ah
  41d6a5:	mov    al,0xa
  41d6a7:	xchg   ebp,eax
  41d6a8:	xor    al,al
  41d6aa:	clc    
  41d6ab:	xchg   esp,eax
  41d6ac:	mov    ch,0x1a
  41d6ae:	mov    al,bl
  41d6b0:	or     DWORD PTR [ebx-0x1f],eax
  41d6b3:	add    eax,DWORD PTR [edi-0x39a3e6bb]
  41d6b9:	inc    edx
  41d6ba:	pusha  
  41d6bb:	sbb    edx,DWORD PTR [edx-0x7e27a1be]
  41d6c1:	retf   0x44d
  41d6c4:	jne    0x41d6da
  41d6c6:	js     0x41d693
  41d6c8:	jmp    0xead69a89
  41d6cd:	lds    esp,FWORD PTR [eax-0x1fab7af1]
  41d6d3:	add    dl,BYTE PTR [ebp+0x24]
  41d6d6:	sub    al,0xd9
  41d6d8:	dec    esp
  41d6d9:	ds sbb eax,0x593e6156
  41d6df:	inc    eax
  41d6e0:	xchg   BYTE PTR [ebx-0x2b],cl
  41d6e3:	xchg   ebx,eax
  41d6e4:	xchg   edi,eax
  41d6e5:	add    ah,cl
  41d6e7:	xchg   esp,eax
  41d6e8:	xor    al,0x32
  41d6ea:	jl     0x41d6fa
  41d6ec:	jp     0x41d6dd
  41d6ee:	arpl   si,bp
  41d6f0:	mov    eax,ds:0x7039f93
  41d6f5:	xchg   esp,esp
  41d6f7:	xor    al,0x30
  41d6f9:	out    0xbd,eax
  41d6fb:	shl    BYTE PTR [ecx],0x3e
  41d6fe:	cdq    
  41d6ff:	inc    eax
  41d700:	xchg   BYTE PTR [ebx-0x2b],cl
  41d703:	xchg   ebx,eax
  41d704:	xchg   edi,eax
  41d705:	add    ah,cl
  41d707:	rol    BYTE PTR [eax],1
  41d709:	xor    DWORD PTR [edx],eax
  41d70b:	or     cl,bh
  41d70d:	cld    
  41d70e:	(bad)  
  41d70f:	out    dx,al
  41d710:	out    0xe,eax
  41d712:	xchg   dh,bl
  41d714:	or     eax,0xa47d71d8
  41d719:	(bad)  
  41d71a:	cmp    BYTE PTR [esi+0x370d7920],cl
  41d720:	sub    DWORD PTR ds:0x387c2454,eax
  41d726:	fld    DWORD PTR [edi]
  41d728:	mov    eax,ds:0xf08a3fde
  41d72d:	and    eax,edx
  41d72f:	or     BYTE PTR [ebx-0x2d03ee8d],ch
  41d735:	adc    cl,bl
  41d737:	lock and BYTE PTR [ebp+0x30],dh
  41d73b:	pop    edi
  41d73c:	fisttp WORD PTR [eax]
  41d73e:	ds mov ah,0xa0
  41d741:	pop    es
  41d742:	iret   
  41d743:	add    ebx,DWORD PTR [ecx+0x68ffb840]
  41d749:	add    ebx,DWORD PTR [ebx]
  41d74b:	jne    0x41d70d
  41d74d:	inc    BYTE PTR [ebx-0x7cf71583]
  41d753:	or     BYTE PTR [ecx-0x80],dl
  41d756:	(bad)  
  41d757:	pop    es
  41d758:	xchg   esi,eax
  41d759:	adc    al,0xc4
  41d75b:	cmp    dh,BYTE PTR [edi]
  41d75d:	rol    ecx,0x2a
  41d760:	jmp    0xaa941208
  41d765:	jg     0x41d720
  41d767:	in     eax,0x6a
  41d769:	ficom  WORD PTR [edx-0x7a]
  41d76c:	test   DWORD PTR [eax],eax
  41d76e:	into   
  41d76f:	icebp  
  41d770:	pop    ebx
  41d771:	push   ss
  41d772:	mov    ecx,0x91e4864d
  41d777:	dec    ebx
  41d778:	sbb    ebp,0x6b0332a9
  41d77e:	imul   ecx,DWORD PTR [ebx-0xe],0x2e0606e9
  41d785:	add    BYTE PTR [edi+0x16],ah
  41d788:	loop   0x41d781
  41d78a:	jmp    0x8e45:0x9f84f5b5
  41d791:	pop    ecx
  41d792:	outs   dx,BYTE PTR ds:[esi]
  41d793:	inc    esi
  41d794:	or     dh,BYTE PTR [ebx]
  41d796:	scas   eax,DWORD PTR es:[edi]
  41d797:	dec    BYTE PTR [edx+0x3b624b44]
  41d79d:	inc    ebp
  41d79e:	dec    ebx
  41d79f:	inc    ebp
  41d7a0:	mov    WORD PTR [esi+ebp*1],?
  41d7a3:	inc    esi
  41d7a4:	or     cl,BYTE PTR [ebx+0x40183e22]
  41d7aa:	pop    ds
  41d7ab:	leave  
  41d7ac:	aas    
  41d7ad:	adc    BYTE PTR [eax],cl
  41d7af:	sub    ch,dh
  41d7b1:	(bad)  
  41d7b2:	fstp   TBYTE PTR [esi+0x5c3be85d]
  41d7b8:	cmc    
  41d7b9:	call   DWORD PTR [ebp+esi*4+0x5e7b748b]
  41d7c0:	xor    edi,esi
  41d7c2:	loopne 0x41d785
  41d7c4:	sub    al,0x1
  41d7c6:	out    dx,eax
  41d7c7:	inc    ebp
  41d7c8:	mov    bh,BYTE PTR [ebp-0x1d]
  41d7cb:	inc    ebp
  41d7cc:	jle    0x41d7dc
  41d7ce:	mov    DWORD PTR [ebp-0x38fff789],esi
  41d7d4:	sahf   
  41d7d5:	cmp    bh,0x20
  41d7d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7d9:	loopne 0x41d7db
  41d7db:	fild   WORD PTR [ebp-0x7f]
  41d7de:	inc    ebp
  41d7df:	out    0xad,eax
  41d7e1:	mov    bl,0x8a
  41d7e3:	adc    BYTE PTR [ebp+0x59cb448b],dh
  41d7e9:	jg     0x41d82f
  41d7eb:	retf   
  41d7ec:	push   ecx
  41d7ed:	inc    edx
  41d7ee:	mov    DWORD PTR [ebx+0x41e81a61],esi
  41d7f4:	mov    edx,0x852bfff5
  41d7f9:	add    eax,0xa45f084
  41d7fe:	add    BYTE PTR [esi-0x51dbb522],al
  41d804:	mov    edx,DWORD PTR [edi-0x69c45d8d]
  41d80a:	ror    BYTE PTR [ecx],cl
  41d80c:	or     BYTE PTR [eax-0x29c84578],bl
  41d812:	xchg   dl,dl
  41d814:	aas    
  41d815:	ror    BYTE PTR [esi+0xd],cl
  41d818:	adc    eax,ecx
  41d81a:	inc    ebx
  41d81b:	stos   BYTE PTR es:[edi],al
  41d81c:	outs   dx,DWORD PTR ds:[esi]
  41d81d:	push   es
  41d81e:	xchg   edx,eax
  41d820:	ja     0x41d7e4
  41d822:	xchg   dl,al
  41d824:	jg     0x41d86c
  41d826:	call   0xfcd9a9d0
  41d82b:	or     bl,BYTE PTR [ebx]
  41d82d:	or     BYTE PTR [ebp+eax*1-0x47fff9a5],al
  41d834:	and    DWORD PTR [ebx+0x24],ecx
  41d837:	add    BYTE PTR [ebp+0x5b],dh
  41d83a:	cdq    
  41d83b:	sar    BYTE PTR [ecx+0x522449d6],1
  41d841:	loop   0x41d884
  41d843:	and    al,0xb6
  41d845:	loop   0x41d860
  41d847:	and    al,0x92
  41d849:	jae    0x41d8b0
  41d84b:	(bad)  
  41d84c:	icebp  
  41d84d:	xchg   DWORD PTR [edi+ebp*8-0x53],esi
  41d851:	mov    BYTE PTR [ecx],dl
  41d853:	popa   
  41d854:	cmp    BYTE PTR [eax+0x774a88bc],bl
  41d85a:	out    0x4f,al
  41d85c:	cmp    BYTE PTR [eax+0x6c922411],ch
  41d862:	(bad)  
  41d863:	out    0xe7,eax
  41d865:	pop    ds
  41d866:	push   cs
  41d867:	add    BYTE PTR [edx],al
  41d869:	fwait
  41d86a:	adc    DWORD PTR [ecx+esi*4],ebx
  41d86d:	dec    esi
  41d86e:	jmp    0xae33:0xea4efb0f
  41d875:	push   eax
  41d876:	mov    esp,edi
  41d878:	cdq    
  41d879:	inc    ecx
  41d87a:	les    edx,FWORD PTR gs:0x6240543b
  41d881:	xor    ah,BYTE PTR [ebx]
  41d883:	dec    eax
  41d884:	stos   BYTE PTR es:[edi],al
  41d885:	aaa    
  41d886:	loop   0x41d85c
  41d888:	jp     0x41d8d2
  41d88a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d88b:	out    0x81,eax
  41d88d:	inc    edi
  41d88e:	mov    esp,0xacb579e7
  41d893:	out    0x95,eax
  41d895:	pop    edx
  41d896:	xchg   ebp,eax
  41d897:	sbb    DWORD PTR [edx+0x48],0x8e009477
  41d89e:	dec    edi
  41d89f:	popf   
  41d8a0:	push   esi
  41d8a1:	leave  
  41d8a2:	mov    ah,0x0
  41d8a5:	xchg   dh,cl
  41d8a7:	icebp  
  41d8a8:	nop
  41d8a9:	mov    ch,0x1e
  41d8ab:	leave  
  41d8ac:	jl     0x41d873
  41d8ae:	push   ds
  41d8af:	leave  
  41d8b0:	nop
  41d8b1:	mov    ch,0x1e
  41d8b3:	rcr    DWORD PTR [ebx-0x6f1c41ea],0xc
  41d8ba:	iret   
  41d8bb:	add    al,0xd4
  41d8bd:	sub    DWORD PTR [ebp+eiz*2+0x54b60a90],edx
  41d8c4:	call   0x87b4335e
  41d8c9:	cli    
  41d8ca:	inc    edi
  41d8cb:	retf   
  41d8cc:	pop    ss
  41d8cd:	stos   BYTE PTR es:[edi],al
  41d8ce:	and    bl,cl
  41d8d0:	dec    edx
  41d8d1:	int3   
  41d8d2:	dec    eax
  41d8d3:	mov    ebx,0xd1e457c
  41d8d8:	inc    esp
  41d8d9:	add    edi,edi
  41d8db:	(bad)  
  41d8dc:	out    0x8e,eax
  41d8de:	std    
  41d8df:	cld    
  41d8e0:	add    BYTE PTR [edi*2-0x4a3d6f66],al
  41d8e7:	sbb    al,0xe8
  41d8e9:	xchg   ecx,eax
  41d8ea:	pop    edx
  41d8eb:	jbe    0x41d874
  41d8ed:	mov    dl,0x47
  41d8ef:	xor    BYTE PTR [edx],al
  41d8f1:	lahf   
  41d8f2:	cmp    ecx,DWORD PTR [edx]
  41d8f4:	fs jns 0x41d915
  41d8f7:	adc    al,BYTE PTR [ecx+0x66f2be88]
  41d8fd:	mov    ebx,0xbf5287
  41d902:	pop    edx
  41d903:	mov    ecx,0x374bb4ec
  41d908:	or     bl,BYTE PTR [edx]
  41d90a:	inc    edx
  41d90b:	pop    es
  41d90c:	add    esp,ebp
  41d90e:	cmp    eax,0x42e9468f
  41d913:	ret    0xf104
  41d916:	int    0x2
  41d918:	or     ch,bl
  41d91a:	mov    ch,0x48
  41d91c:	(bad)  
  41d91d:	push   0x50
  41d91f:	lss    ebp,FWORD PTR [edx-0x1745c57b]
  41d926:	dec    edx
  41d927:	hlt    
  41d928:	jle    0x41d927
  41d92a:	add    eax,0x1168f163
  41d92f:	ret    
  41d930:	or     ecx,ebp
  41d932:	test   ecx,esi
  41d934:	pop    ebx
  41d935:	sahf   
  41d936:	cmp    ch,BYTE PTR [edx+0x56]
  41d939:	xor    esi,0xffffffb9
  41d93c:	stc    
  41d93d:	out    0x78,al
  41d93f:	ds push edi
  41d941:	shr    DWORD PTR [ecx+0x23],1
  41d944:	repz (bad) 
  41d946:	mov    ch,0xdc
  41d948:	repnz into 
  41d94a:	nop
  41d94b:	cmp    al,BYTE PTR [ecx+0x571ade2d]
  41d951:	rcr    DWORD PTR [ecx-0x6a490cdd],1
  41d957:	fdivr  st(2),st
  41d959:	scas   al,BYTE PTR es:[edi]
  41d95a:	jo     0x41d992
  41d95c:	sub    DWORD PTR ds:0x915712de,0x96f32389
  41d966:	add    BYTE PTR ds:0xae158057,bh
  41d96c:	push   ss
  41d96d:	xor    DWORD PTR [eax],eax
  41d96f:	imul   ebx,DWORD PTR [edx+0x12],0xf
  41d973:	and    ebx,DWORD PTR ds:0x75affff3
  41d979:	dec    esi
  41d97a:	and    al,0xc7
  41d97c:	inc    edi
  41d97d:	xchg   BYTE PTR [edi-0x62],dl
  41d980:	inc    edx
  41d981:	or     bh,BYTE PTR [ebx]
  41d983:	sub    al,0x47
  41d985:	xchg   BYTE PTR [edi+0x6e],cl
  41d988:	inc    edx
  41d989:	or     bh,BYTE PTR [eax]
  41d98b:	sub    cl,BYTE PTR [edx+0x76]
  41d98e:	adc    al,0xc8
  41d990:	sub    ch,BYTE PTR [esi]
  41d992:	sub    BYTE PTR [eax-0x38dbd1d6],ch
  41d998:	jne    0x41da12
  41d99a:	jmp    FWORD PTR [eax+0x31e9dac8]
  41d9a0:	aas    
  41d9a1:	or     al,BYTE PTR [eax]
  41d9a3:	(bad)  
  41d9a5:	sub    eax,0x4ec6ff24
  41d9aa:	and    al,0x5f
  41d9ac:	stos   BYTE PTR es:[edi],al
  41d9ad:	cmp    BYTE PTR [eax+ecx*4-0x49077e4b],cl
  41d9b4:	xor    ch,BYTE PTR [esi]
  41d9b6:	sbb    al,0xd4
  41d9b8:	mov    eax,0x3f3e8405
  41d9bd:	or     al,BYTE PTR [eax]
  41d9bf:	sub    BYTE PTR [esi],ch
  41d9c1:	sub    BYTE PTR cs:[edx-0x27a7d1eb],bl
  41d9c8:	sub    eax,0xc700242e
  41d9cd:	lahf   
  41d9ce:	imul   edi,edi,0xffffffc8
  41d9d1:	enter  0x2476,0x83
  41d9d5:	shl    DWORD PTR [esi+0x24],0xb7
  41d9d9:	inc    ecx
  41d9da:	int3   
  41d9db:	inc    esp
  41d9dc:	add    DWORD PTR [ebp-0xe],0xffffff84
  41d9e0:	icebp  
  41d9e1:	inc    esp
  41d9e2:	xchg   bh,bl
  41d9e4:	fild   WORD PTR [ecx+0xa]
  41d9e7:	imul   eax,DWORD PTR [esi-0x3e773f5b],0xffffffe6
  41d9ee:	cmp    al,BYTE PTR cs:[ebp-0x7d40783c]
  41d9f5:	xor    eax,eax
  41d9f7:	xchg   BYTE PTR [edx+0x77],dl
  41d9fa:	fiadd  WORD PTR [esi+0x58fa7f42]
  41da00:	sub    al,dl
  41da02:	mov    ah,BYTE PTR [ebx]
  41da04:	cld    
  41da05:	pop    ebx
  41da06:	push   es
  41da07:	add    al,ch
  41da09:	(bad)  
  41da0a:	(bad)  
  41da0b:	jae    0x41d999
  41da0d:	jge    0x41d9d4
  41da0f:	inc    esp
  41da10:	mov    eax,0x867f814c
  41da15:	pop    ebx
  41da16:	push   es
  41da17:	or     ax,0xead7
  41da1b:	mov    eax,DWORD PTR [esi+0xb66065b]
  41da21:	sbb    ebx,DWORD PTR [ebx]
  41da23:	push   es
  41da24:	loopne 0x41da88
  41da26:	dec    ebx
  41da27:	cmp    BYTE PTR [ebx+0x624389be],bh
  41da2d:	xchg   ebx,eax
  41da2e:	data16 add BYTE PTR ss:[ecx-0x69],cl
  41da33:	jmp    0x6a43:0x75716937
  41da3a:	pop    DWORD PTR [ebx+0x46699e12]
  41da40:	add    bh,bh
  41da42:	push   ss
  41da43:	loop   0x41da80
  41da45:	std    
  41da46:	push   ds
  41da47:	loop   0x41da58
  41da49:	push   esi
  41da4a:	loop   0x41da8d
  41da4c:	and    al,0x42
  41da4e:	je     0x41da4a
  41da50:	ja     0x41d9e6
  41da52:	sbb    ecx,DWORD PTR [esi]
  41da54:	mov    edi,DWORD PTR [edx]
  41da56:	aas    
  41da57:	rol    BYTE PTR [esi-0x3abdc8b6],cl
  41da5d:	inc    edx
  41da5e:	aas    
  41da5f:	ds add eax,0x3e14286
  41da65:	fidivr WORD PTR [ecx]
  41da67:	mov    edi,0xa0bdc28c
  41da6c:	sbb    BYTE PTR [edi+0x9],ch
  41da6f:	add    eax,0xfcd08de8
  41da74:	js     0x41dab3
  41da76:	push   ds
  41da77:	fnsave [edi+ecx*1]
  41da7a:	jl     0x41da04
  41da7c:	ss mov ebp,0x3d8d6343
  41da82:	push   ds
  41da83:	add    eax,0xf11e2ddb
  41da88:	fdiv   DWORD PTR [esi+0x44]
  41da8b:	lods   al,BYTE PTR ds:[esi]
  41da8c:	out    0x91,eax
  41da8e:	pop    ss
  41da8f:	pop    eax
  41da90:	fcmovne st,st(5)
  41da92:	push   ds
  41da93:	aad    0xc5
  41da95:	add    ch,al
  41da97:	push   ds
  41da98:	in     al,0x2
  41da9a:	arpl   di,di
  41da9c:	add    al,0xec
  41da9e:	push   cs
  41da9f:	dec    DWORD PTR [eax+ebp*8]
  41daa2:	push   eax
  41daa3:	call   0xe88ace6c
  41daa8:	int3   
  41daa9:	test   DWORD PTR [esi+0x6247d947],0xbc81d42a
  41dab3:	inc    ebx
  41dab4:	or     ecx,DWORD PTR [ebp-0x3333957]
  41daba:	and    eax,edx
  41dabc:	in     eax,dx
  41dabd:	mov    WORD PTR [ebp-0x58643ae2],ss
  41dac3:	mov    bh,0xeb
  41dac5:	mov    edi,?
  41dac7:	push   0xffffffd7
  41dac9:	add    DWORD PTR [edi+eiz*2+0x26a217db],esi
  41dad0:	leave  
  41dad1:	ret    0x44ce
  41dad4:	retf   
  41dad5:	jle    0x41db4c
  41dad7:	push   ds
  41dad8:	add    eax,0x9c1259c
  41dadd:	mov    dh,0xa
  41dadf:	inc    edi
  41dae0:	jge    0x41dae7
  41dae2:	jmp    0xf246:0xfbc2a25b
  41dae9:	adc    eax,0x4fe21bae
  41daee:	out    dx,al
  41daef:	inc    ebp
  41daf0:	repnz mov ds,WORD PTR [ecx+0x18913a1e]
  41daf7:	push   0xfffffff3
  41daf9:	jle    0x41dafb
  41dafb:	jb     0x41dae1
  41dafd:	jg     0x41daa9
  41daff:	outs   dx,BYTE PTR ds:[esi]
  41db00:	mov    ecx,0x3fc40cec
  41db05:	or     bh,BYTE PTR [esi+ecx*1+0xd458657]
  41db0c:	mov    edx,0x3f0f6ac8
  41db11:	js     0x41daf3
  41db13:	pop    DWORD PTR [ebx-0x16]
  41db16:	(bad)  
  41db18:	inc    ebp
  41db19:	repnz push edx
  41db1b:	xchg   DWORD PTR [eax],edx
  41db1d:	retf   0x2062
  41db20:	call   0x58106feb
  41db25:	xchg   BYTE PTR ds:0x6ac8b9fd,cl
  41db2b:	(bad)  
  41db2d:	js     0x41db0f
  41db2f:	lahf   
  41db30:	inc    edx
  41db31:	loop   0x41db46
  41db33:	add    BYTE PTR [esi-0xe],al
  41db36:	adc    al,BYTE PTR [edi-0x178d35f0]
  41db3c:	out    0xc6,eax
  41db3e:	fwait
  41db3f:	push   esp
  41db40:	fmul   DWORD PTR [eax]
  41db42:	add    DWORD PTR [edx+ebx*2+0x45fde523],0xffffffc6
  41db4a:	cmp    edi,DWORD PTR [ebx-0x7cbcf628]
  41db50:	pop    edx
  41db51:	daa    
  41db52:	int    0xfd
  41db54:	inc    ebp
  41db55:	mov    BYTE PTR [eax],0x8a
  41db58:	ret    
  41db59:	fiadd  WORD PTR [ebx-0x138c4a35]
  41db5f:	add    BYTE PTR [ebx+0x6c000a3c],bh
  41db65:	adc    BYTE PTR [ebp-0x77],bl
  41db68:	mov    esp,DWORD PTR [edx+0x2]
  41db6b:	mov    DWORD PTR [ebx+0x62],esi
  41db6e:	push   ss
  41db6f:	adc    DWORD PTR ds:0x1386053d,0x3e
  41db76:	or     al,BYTE PTR [eax]
  41db78:	xchg   edi,eax
  41db79:	fdivrp st(2),st
  41db7b:	jmp    FWORD PTR [edi+0x11dafaa6]
  41db81:	mov    bh,0x39
  41db83:	not    ah
  41db85:	xor    BYTE PTR [esi+0xb],0x14
  41db89:	mov    dh,0xea
  41db8b:	dec    edi
  41db8c:	out    0x46,al
  41db8e:	or     cl,BYTE PTR [ebx+0x330be1b7]
  41db94:	mov    ah,0x11
  41db96:	ror    BYTE PTR [edi],1
  41db98:	(bad)  [ebp+0x196ffff1]
  41db9e:	out    dx,eax
  41db9f:	inc    edi
  41dba0:	push   esi
  41dba1:	dec    edx
  41dba2:	adc    BYTE PTR es:[ecx],bl
  41dba5:	cmp    DWORD PTR [ebx-0x10cdc4bc],eax
  41dbab:	xor    al,0xa7
  41dbad:	fimul  WORD PTR [ecx+edi*8+0x3b47462f]
  41dbb4:	add    esp,DWORD PTR [edx]
  41dbb6:	add    dh,BYTE PTR [edx-0x6e]
  41dbb9:	mov    ebx,0x47940442
  41dbbe:	out    dx,eax
  41dbbf:	push   eax
  41dbc0:	sub    eax,ebx
  41dbc2:	mov    cl,0x74
  41dbc4:	add    BYTE PTR [ebp-0xe17eda1],dl
  41dbca:	out    dx,eax
  41dbcb:	out    dx,eax
  41dbcc:	jmp    DWORD PTR [esp+eax*1-0xf79e182]
  41dbd3:	or     eax,0x66c02f4
  41dbd8:	xchg   DWORD PTR [esi+0x37],esi
  41dbdb:	outs   dx,DWORD PTR ds:[esi]
  41dbdc:	outs   dx,DWORD PTR ds:[esi]
  41dbdd:	jbe    0x41dbc7
  41dbdf:	dec    ebp
  41dbe0:	or     BYTE PTR [esi-0x37ffb25a],al
  41dbe6:	imul   edi,edx,0xfffffffe
  41dbe9:	inc    BYTE PTR [ebx-0x2b4176f6]
  41dbef:	pop    es
  41dbf0:	xor    DWORD PTR [ecx+0x3d738414],edi
  41dbf6:	sahf   
  41dbf7:	xor    DWORD PTR [esi+ecx*4],esp
  41dbfa:	pop    ebx
  41dbfb:	adc    BYTE PTR [ebx],al
  41dbfd:	scas   al,BYTE PTR es:[edi]
  41dbfe:	shl    DWORD PTR [esi-0x32506601],cl
  41dc04:	jae    0x41dc82
  41dc06:	sahf   
  41dc07:	xor    DWORD PTR [esi+ebp*2],esp
  41dc0a:	sti    
  41dc0b:	xchg   ebp,eax
  41dc0c:	xor    DWORD PTR [ecx+0x2b],eax
  41dc0f:	push   cs
  41dc10:	push   esi
  41dc11:	rol    BYTE PTR [eax],1
  41dc13:	push   ss
  41dc14:	loope  0x41dbc9
  41dc16:	in     eax,dx
  41dc17:	or     eax,0xfa88d056
  41dc1c:	dec    edi
  41dc1d:	je     0x41dc0a
  41dc1f:	or     eax,0xf7fe4039
  41dc24:	mov    BYTE PTR [ecx+0x890705],cl
  41dc2a:	cmp    DWORD PTR [eax-0x3],ebp
  41dc2d:	mov    BYTE PTR [ecx+0x498906d5],cl
  41dc33:	pop    eax
  41dc34:	std    
  41dc35:	call   0x12c6d7d0
  41dc3a:	out    0x1c,al
  41dc3c:	dec    esi
  41dc3d:	add    dh,dl
  41dc3f:	sub    DWORD PTR [ecx+0xe222e04],edx
  41dc45:	add    BYTE PTR [esi-0x57a33203],al
  41dc4b:	inc    edx
  41dc4c:	dec    esp
  41dc4d:	jge    0x41dc33
  41dc4f:	sahf   
  41dc50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc51:	das    
  41dc52:	ucomiss xmm6,DWORD PTR [ebx]
  41dc55:	xor    edi,edi
  41dc57:	test   bh,ah
  41dc59:	test   BYTE PTR [edx+edi*1-0x1c],ah
  41dc5d:	xor    DWORD PTR [ebx],edi
  41dc5f:	iret   
  41dc60:	cmp    al,0x0
  41dc62:	ret    
  41dc63:	inc    esp
  41dc64:	arpl   WORD PTR [eax-0x6f],si
  41dc67:	inc    edx
  41dc68:	mov    al,ds:0xa3c78234
  41dc6d:	adc    BYTE PTR [eax-0x3b],bh
  41dc70:	push   es
  41dc71:	mov    BYTE PTR [ecx-0x7903eb35],bh
  41dc77:	mov    bh,0x7f
  41dc79:	mov    DWORD PTR [ebx+0x2a],esi
  41dc7c:	jmp    0x8e12:0x7140a3ad
  41dc83:	sub    dl,dl
  41dc85:	lods   eax,DWORD PTR ds:[esi]
  41dc86:	xchg   ebx,eax
  41dc87:	inc    eax
  41dc88:	popa   
  41dc89:	adc    dh,BYTE PTR [esi+0x2a]
  41dc8c:	cli    
  41dc8d:	lods   eax,DWORD PTR ds:[esi]
  41dc8e:	add    BYTE PTR [ebx-0x7dba82c0],al
  41dc94:	aas    
  41dc95:	lahf   
  41dc96:	mov    eax,DWORD PTR [esi]
  41dc98:	xchg   BYTE PTR [edi],bh
  41dc9a:	in     al,dx
  41dc9b:	cld    
  41dc9c:	mov    ebx,edi
  41dc9e:	mov    cl,dl
  41dca0:	inc    esi
  41dca1:	or     bh,BYTE PTR [edi]
  41dca3:	pop    esi
  41dca4:	mov    ch,0x29
  41dca6:	ja     0x41dc7e
  41dca8:	pop    esi
  41dca9:	dec    ebx
  41dcaa:	stos   DWORD PTR es:[edi],eax
  41dcab:	add    BYTE PTR [eax+0x29],al
  41dcae:	mov    DWORD PTR [esi-0x7dbad7b6],esi
  41dcb4:	retf   0x446f
  41dcb7:	xchg   BYTE PTR [edx],ch
  41dcb9:	push   es
  41dcba:	stos   DWORD PTR es:[edi],eax
  41dcbb:	sub    eax,DWORD PTR [eax-0x6b]
  41dcbe:	fwait
  41dcbf:	cmp    eax,0xba88f21a
  41dcc4:	retf   
  41dcc5:	or     ch,BYTE PTR [edx]
  41dcc7:	pop    esp
  41dcc8:	pop    es
  41dcc9:	into   
  41dcca:	mov    ebx,0xf48e0345
  41dccf:	int    0xf7
  41dcd1:	dec    ebp
  41dcd2:	jmp    0xaa4dcccc
  41dcd7:	or     cl,BYTE PTR [ebp+0x32]
  41dcda:	xchg   ecx,eax
  41dcdb:	inc    edx
  41dcdc:	inc    edx
  41dcdd:	push   es
  41dcde:	jns    0x41dc64
  41dce0:	add    DWORD PTR [eax+0x72],ebx
  41dce3:	icebp  
  41dce4:	rcr    dh,0x1
  41dce7:	mov    BYTE PTR [edx+0xa],al
  41dcea:	sbb    dh,BYTE PTR [ebx+0x70705a1a]
  41dcf0:	xchg   BYTE PTR cs:[eax-0xe63c300],ah
  41dcf7:	push   0x3
  41dcf9:	inc    ecx
  41dcfa:	add    DWORD PTR [edi-0x2d],esp
  41dcfd:	inc    eax
  41dcfe:	bnd jmp 0x7486326
  41dd04:	int    0x57
  41dd06:	add    DWORD PTR [ebp-0x59],ebp
  41dd09:	inc    eax
  41dd0a:	bnd jmp 0xfd336f67
  41dd10:	in     eax,dx
  41dd11:	push   edx
  41dd12:	dec    edx
  41dd13:	jmp    0xe64e141a
  41dd18:	lock ror BYTE PTR [edx],1
  41dd1b:	jmp    0xedbc1aa5
  41dd20:	fdiv   DWORD PTR [edx+ebp*8-0x1cc1e296]
  41dd27:	push   eax
  41dd28:	pop    edi
  41dd29:	ds repnz gs inc ebp
  41dd2d:	dec    esi
  41dd2e:	xchg   BYTE PTR [edi],ah
  41dd30:	test   DWORD PTR [edx+0xa],eax
  41dd33:	ins    BYTE PTR es:[edi],dx
  41dd34:	mov    eax,0xfe16f017
  41dd39:	mov    fs,edx
  41dd3b:	jp     0x41dd1a
  41dd3d:	repnz add BYTE PTR ds:[ebx+0x18617e03],dh
  41dd45:	dec    ebp
  41dd46:	jmp    0xa4ff:0xeef392e8
  41dd4d:	shl    DWORD PTR [edx],cl
  41dd4f:	repz arpl WORD PTR [ecx+0x58],di
  41dd53:	lea    esp,[edx-0x12]
  41dd56:	hlt    
  41dd57:	inc    DWORD PTR [eax]
  41dd59:	fdiv   DWORD PTR [ebp+0x5a]
  41dd5c:	call   0x33d274
  41dd61:	jb     0x41dd69
  41dd63:	jle    0x41dda0
  41dd65:	jl     0x41dd2e
  41dd67:	jl     0x41dd49
  41dd69:	push   0xffffff81
  41dd6b:	cli    
  41dd6c:	push   eax
  41dd6d:	imul   di,dx,0x4a89
  41dd72:	ror    BYTE PTR [eax-0x502218a3],cl
  41dd78:	mov    ds,WORD PTR [eax]
  41dd7a:	(bad)  
  41dd7b:	(bad)  
  41dd7c:	rcl    BYTE PTR [ebx+0xb35ef2d],0x94
  41dd83:	dec    edx
  41dd84:	add    BYTE PTR [edx],ch
  41dd86:	rcr    ecx,0xfd
  41dd89:	sbb    bh,al
  41dd8b:	inc    ecx
  41dd8c:	lea    esp,[edx-0x2a]
  41dd8f:	inc    ecx
  41dd90:	call   0x30994f
  41dd95:	test   DWORD PTR [ebx-0x2ddd7211],0xc5e45ae9
  41dd9f:	out    dx,al
  41dda0:	push   esi
  41dda1:	mov    bh,0xcb
  41dda3:	fsin   
  41dda5:	cwde   
  41dda6:	mov    ebx,0x3ec7e07c
  41ddab:	adc    bh,bh
  41ddad:	cwde   
  41ddae:	fst    DWORD PTR [eax]
  41ddb0:	push   0xa4733
  41ddb5:	stos   BYTE PTR es:[edi],al
  41ddb6:	ret    
  41ddb7:	fscale 
  41ddb9:	xchg   BYTE PTR [ecx+ecx*4+0x4f],dl
  41ddbd:	add    BYTE PTR [ecx],ch
  41ddbf:	aad    0xf1
  41ddc1:	cld    
  41ddc2:	jnp    0x41ddb3
  41ddc4:	idiv   BYTE PTR [edi]
  41ddc6:	xchg   bl,dh
  41ddc8:	ret    0x8701
  41ddcb:	sub    ecx,DWORD PTR [esi]
  41ddcd:	jne    0x41dd6f
  41ddcf:	gs dec ebx
  41ddd1:	std    
  41ddd2:	xchg   DWORD PTR [ebx+0x23],esp
  41ddd5:	std    
  41ddd6:	jb     0x41de56
  41ddd8:	jne    0x41de1c
  41ddda:	loop   0x41de34
  41dddc:	add    BYTE PTR [eax+0x180029ee],0x5
  41dde3:	in     al,dx
  41dde4:	xchg   DWORD PTR [edi+0x5],ecx
  41dde7:	in     eax,0xf5
  41dde9:	push   esp
  41ddea:	fisub  WORD PTR [ebx]
  41ddec:	in     al,0xfc
  41ddee:	leave  
  41ddef:	mov    al,ds:0x5eb5389d
  41ddf4:	or     ecx,DWORD PTR [eax+0x3894dc5b]
  41ddfa:	sbb    al,0x2a
  41ddfc:	cmp    eax,0xa5a6fb56
  41de01:	cli    
  41de02:	mov    eax,ds:0x35513dc4
  41de07:	mov    esp,0x6b7547fa
  41de0c:	push   es
  41de0d:	or     DWORD PTR [esi-0x346306f5],0x795ac5a4
  41de17:	push   ss
  41de18:	loopne 0x41de6a
  41de1a:	aad    0xf8
  41de1c:	pop    ds
  41de1d:	mov    eax,DWORD PTR [ebx]
  41de1f:	jae    0x41dda3
  41de21:	cld    
  41de22:	add    BYTE PTR [ecx-0x25],ah
  41de25:	xchg   ebp,eax
  41de26:	mov    dl,0x3f
  41de28:	jl     0x41ddb2
  41de2a:	add    BYTE PTR [esi+0x24],0x7b
  41de2e:	inc    edx
  41de2f:	dec    ecx
  41de30:	aad    0x95
  41de32:	outs   dx,DWORD PTR ds:[esi]
  41de33:	pop    esi
  41de34:	inc    edx
  41de35:	sub    DWORD PTR [esi-0x79593725],eax
  41de3b:	rcr    BYTE PTR [ecx-0xbde3dd6],cl
  41de41:	ins    BYTE PTR es:[edi],dx
  41de42:	add    eax,DWORD PTR [esi-0x493d1d0e]
  41de48:	test   al,0xe3
  41de4a:	shr    BYTE PTR [esi],cl
  41de4c:	test   al,0xe3
  41de4e:	inc    edx
  41de4f:	push   ds
  41de50:	adc    ebp,DWORD PTR [esi+0x3]
  41de53:	xchg   al,cl
  41de55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de56:	sub    edi,eax
  41de58:	sub    dl,BYTE PTR [edi]
  41de5a:	addr16 icebp 
  41de5c:	cmp    al,0x35
  41de5e:	sub    eax,0x446d065e
  41de63:	xchg   BYTE PTR [eax+0x3cbed1e3],ch
  41de69:	xlat   BYTE PTR ds:[ebx]
  41de6a:	outs   dx,DWORD PTR ds:[esi]
  41de6b:	add    DWORD PTR [edx-0x392e871d],0x977a10a0
  41de75:	jl     0x41de4e
  41de77:	or     eax,0x58042352
  41de7c:	test   al,0xe3
  41de7e:	cwde   
  41de7f:	xchg   esi,eax
  41de80:	xchg   esp,eax
  41de81:	sub    bh,0x9
  41de84:	push   edx
  41de85:	and    eax,DWORD PTR [eax+eax*1]
  41de88:	add    eax,0x41fcf802
  41de8d:	cmp    eax,0x82796bcf
  41de92:	jecxz  0x41dec1
  41de94:	fstp   TBYTE PTR [ebx]
  41de96:	das    
  41de97:	jns    0x41df02
  41de99:	(bad)  
  41de9a:	pop    ecx
  41de9b:	punpckhdq mm2,QWORD PTR [ebx+0x3d6850b0]
  41dea2:	div    DWORD PTR [ebx-0x6f]
  41dea5:	and    bl,0x25
  41dea8:	mov    ebp,0xaec17d9b
  41dead:	dec    DWORD PTR [edx]
  41deaf:	fwait
  41deb0:	xchg   esp,eax
  41deb1:	test   al,0xb
  41deb3:	ret    
  41deb4:	test   DWORD PTR [edx],ebp
  41deb6:	shl    DWORD PTR [ecx],0x3
  41deb9:	aas    
  41deba:	into   
  41debb:	mov    ebx,0x830aa874
  41dec0:	test   DWORD PTR [edx],ebp
  41dec2:	int    0x11
  41dec4:	or     edi,DWORD PTR [edi]
  41dec6:	into   
  41dec7:	pushf  
  41dec8:	sahf   
  41dec9:	daa    
  41deca:	mov    WORD PTR ds:0xe90a4026,cs
  41ded0:	pop    ebx
  41ded1:	xchg   ebp,eax
  41ded2:	jg     0x41df08
  41ded4:	sub    BYTE PTR [ebx],bh
  41ded6:	repnz out 0x7c,al
  41ded9:	nop
  41deda:	out    dx,al
  41dedb:	jb     0x41ded9
  41dedd:	and    ebx,DWORD PTR [esp+esi*8-0x64f8bd7b]
  41dee4:	test   BYTE PTR [edx+0xa],al
  41dee7:	push   ebx
  41dee8:	(bad)  
  41dee9:	mov    esp,DWORD PTR [ecx+ebp*8+0x0]
  41deed:	pop    eax
  41deee:	mov    al,0xd6
  41def0:	push   0xd
  41def2:	aas    
  41def3:	jecxz  0x41dea5
  41def5:	mov    ah,0x3e
  41def7:	repnz ins BYTE PTR es:[edi],dx
  41def9:	lds    edi,FWORD PTR [ebp-0x740c8df1]
  41deff:	bound  esp,QWORD PTR [ecx+0x53]
  41df02:	or     BYTE PTR [edx],0x5c
  41df05:	and    BYTE PTR [edi],al
  41df07:	lock xchg BYTE PTR [edx],al
  41df0a:	mov    edx,fs
  41df0c:	in     eax,dx
  41df0d:	aad    0x3b
  41df0f:	repnz ins BYTE PTR es:[edi],dx
  41df11:	lds    ecx,FWORD PTR [esi-0x69]
  41df14:	test   eax,0xf077fc01
  41df19:	push   esi
  41df1a:	sti    
  41df1b:	push   0xf007f070
  41df20:	push   esi
  41df21:	add    dh,ah
  41df23:	loopne 0x41df0d
  41df25:	test   DWORD PTR [edx+0x7f],eax
  41df28:	add    dl,ch
  41df2a:	in     eax,0xf2
  41df2c:	call   DWORD PTR [eax+0x1ffff1fd]
  41df32:	js     0x41dfb1
  41df34:	stc    
  41df35:	inc    edi
  41df36:	imul   esi,DWORD PTR [esi+0x40],0x2f
  41df3a:	mov    ah,0x8c
  41df3c:	int3   
  41df3d:	xchg   edx,eax
  41df3e:	(bad)  
  41df3f:	out    dx,al
  41df40:	push   eax
  41df41:	nop
  41df42:	sub    al,0xa6
  41df44:	adc    ch,bh
  41df46:	mov    edi,DWORD PTR ds:[ebp-0x7d]
  41df4a:	inc    eax
  41df4b:	js     0x41df71
  41df4d:	xchg   esp,eax
  41df4e:	jle    0x41df56
  41df50:	data16 add BYTE PTR [edi+eax*1+0x6ed473f2],bl
  41df58:	out    dx,eax
  41df59:	adc    eax,0x4a546f
  41df5e:	fdivr  QWORD PTR [esi+0x41]
  41df61:	dec    DWORD PTR [eax+0x4a]
  41df64:	test   DWORD PTR [ebp-0x113efd],eax
  41df6a:	jg     0x41df1a
  41df6c:	mov    ss,esp
  41df6e:	fistp  QWORD PTR [esi]
  41df70:	jecxz  0x41df7e
  41df72:	(bad)  
  41df73:	leave  
  41df74:	(bad)  
  41df77:	mov    esi,0x3bee841
  41df7c:	out    dx,eax
  41df7d:	push   DWORD PTR [eax+0x20]
  41df80:	leave  
  41df81:	ret    
  41df82:	push   0xffffffcb
  41df84:	in     eax,0x83
  41df86:	or     edi,DWORD PTR [esi+0x187c5140]
  41df8c:	test   DWORD PTR [ebx+ecx*8+0x46],esi
  41df90:	loop   0x41df58
  41df92:	xor    DWORD PTR [esi+0xa],eax
  41df95:	mov    ebp,DWORD PTR [ecx]
  41df97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df98:	add    BYTE PTR [edi-0x3f79b991],bl
  41df9e:	pop    ebx
  41df9f:	pop    esi
  41dfa0:	loop   0x41df2a
  41dfa2:	xchg   BYTE PTR [ebp+ecx*4-0x4],dl
  41dfa6:	adc    eax,0xa24b9b2b
  41dfab:	xor    esp,DWORD PTR [esi-0x25]
  41dfae:	lock sub ecx,DWORD PTR [esi]
  41dfb1:	pop    esi
  41dfb2:	cld    
  41dfb3:	ins    BYTE PTR es:[edi],dx
  41dfb4:	ror    DWORD PTR [eax+0x48c72b00],1
  41dfba:	xor    DWORD PTR [ebp+0x55],ebx
  41dfbd:	popa   
  41dfbe:	out    0x54,eax
  41dfc0:	adc    eax,0x2af6fc8d
  41dfc5:	dec    ecx
  41dfc6:	out    0xc7,eax
  41dfc8:	test   DWORD PTR [esp+edi*8+0x52492ad6],0xeb8747fd
  41dfd3:	out    0x2d,al
  41dfd5:	push   cs
  41dfd6:	add    BYTE PTR [ebp-0x5c],dl
  41dfd9:	dec    edi
  41dfda:	or     al,0x31
  41dfdc:	ins    DWORD PTR es:[edi],dx
  41dfdd:	add    dl,BYTE PTR [esi+0x59]
  41dfe0:	add    DWORD PTR [ebx-0x49d78c41],0xe2b8695
  41dfea:	jmp    0x8328c7f
  41dfef:	shr    DWORD PTR [edi+0x36],1
  41dff2:	mov    ecx,DWORD PTR [ebx]
  41dff4:	mov    WORD PTR [ebx-0x4cfc3e04],cs
  41dffa:	sub    al,BYTE PTR [esi+0x7e708d2b]
  41e000:	mov    ah,0x44
  41e002:	dec    edi
  41e003:	sti    
  41e004:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e006:	std    
  41e007:	mov    eax,ds:0x49ffdfc8
  41e00c:	adc    dh,0xfe
  41e00f:	xchg   ecx,eax
  41e010:	sub    esp,DWORD PTR [esi-0x7]
  41e013:	js     0x41dfc5
  41e015:	mov    WORD PTR [eax-0x407ce4b6],es
  41e01b:	add    dl,dh
  41e01d:	inc    edx
  41e01e:	repz mov ebx,0x3e34200
  41e024:	std    
  41e025:	test   BYTE PTR [ebx+0x4c396281],0x88
  41e02c:	lods   al,BYTE PTR ds:[esi]
  41e02d:	inc    edx
  41e02e:	jecxz  0x41e09b
  41e030:	dec    edi
  41e031:	mov    eax,0x2ab603e3
  41e036:	inc    ebx
  41e037:	push   ss
  41e038:	inc    ecx
  41e039:	cmp    DWORD PTR [ebp-0x8],ebp
  41e03c:	(bad)  
  41e03d:	retf   
  41e03e:	loope  0x41dfc8
  41e040:	icebp  
  41e041:	dec    eax
  41e042:	addr16 mov ds:0x3929,al
  41e046:	in     al,0x8c
  41e048:	les    eax,FWORD PTR [esi-0x2c]
  41e04b:	inc    ebx
  41e04c:	mov    ds:0xfd07a47b,eax
  41e051:	mov    dh,0xdf
  41e053:	adc    dh,ch
  41e055:	add    DWORD PTR [ebx-0x38],ebp
  41e058:	std    
  41e059:	sub    esp,eax
  41e05b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e05c:	stc    
  41e05d:	cmp    BYTE PTR [eax+0x44],ah
  41e060:	jne    0x41e015
  41e062:	pop    ebp
  41e063:	or     BYTE PTR [esi+0x2],bl
  41e066:	pop    esp
  41e067:	(bad)
  41e06b:	add    al,0x86
  41e06d:	inc    edx
  41e06e:	enter  0xde3a,0xa
  41e072:	loope  0x41e076
  41e074:	xchg   BYTE PTR [esi-0x53a0075d],bh
  41e07a:	rol    DWORD PTR [eax+0x4c1b4636],cl
  41e080:	add    BYTE PTR [ecx+0x7380e438],dh
  41e086:	sub    dl,BYTE PTR [eax+0x11]
  41e089:	mov    eax,ds:0x15446838
  41e08e:	jg     0x41e0ad
  41e090:	or     ch,bh
  41e092:	jle    0x41e103
  41e094:	aam    0x21
  41e096:	or     al,0xb
  41e098:	jmp    0xb8332322
  41e09d:	in     eax,dx
  41e09e:	aad    0x1
  41e0a0:	call   0xd60c9f2a
  41e0a5:	mov    dh,0xcb
  41e0a7:	xchg   DWORD PTR [ecx-0x460dc8fc],eax
  41e0ad:	push   es
  41e0ae:	push   ebp
  41e0af:	jb     0x41e08c
  41e0b1:	inc    ebp
  41e0b2:	cmp    BYTE PTR [edx+0x6c],al
  41e0b5:	add    eax,esp
  41e0b7:	lock ss pop es
  41e0ba:	mov    BYTE PTR [edx+0x22],ah
  41e0bd:	add    BYTE PTR [edx+0xa],0x26
  41e0c1:	ins    BYTE PTR es:[edi],dx
  41e0c2:	sub    dh,BYTE PTR [esi+ebp*8-0x7c]
  41e0c6:	inc    edx
  41e0c7:	xchg   BYTE PTR [ecx],ch
  41e0c9:	push   ds
  41e0ca:	dec    edx
  41e0cb:	test   DWORD PTR [ebp+esi*2-0x2a17f500],esp
  41e0d2:	cmp    ch,ah
  41e0d4:	aam    0xfa
  41e0d6:	ins    DWORD PTR es:[edi],dx
  41e0d7:	xchg   edi,edi
  41e0d9:	stc    
  41e0da:	dec    esp
  41e0db:	icebp  
  41e0dc:	mov    bh,0x6d
  41e0de:	pop    es
  41e0df:	fsub   st,st(7)
  41e0e1:	push   es
  41e0e2:	mov    fs,edx
  41e0e4:	mov    bl,0x0
  41e0e6:	push   eax
  41e0e7:	xor    eax,0x964a1bf2
  41e0ec:	push   eax
  41e0ed:	xor    cl,BYTE PTR [ebp+0x1]
  41e0f0:	(bad)  
  41e0f1:	call   0xe60e1a0b
  41e0f6:	test   DWORD PTR [ebx+0x2c0ac585],edx
  41e0fc:	inc    ebx
  41e0fd:	sbb    bl,ah
  41e0ff:	retf   0xd937
  41e102:	pop    DWORD PTR [edx+0x4798360a]
  41e108:	icebp  
  41e109:	sbb    al,0x92
  41e10b:	retf   
  41e10c:	inc    edi
  41e10d:	mov    ch,0xb5
  41e10f:	fld    DWORD PTR ss:[eax]
  41e112:	sbb    al,0x7f
  41e114:	add    eax,0x4cc8a36a
  41e119:	in     al,0x9f
  41e11b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e11c:	mov    dh,dl
  41e11e:	jmp    0xdba76be5
  41e123:	inc    ebx
  41e124:	test   DWORD PTR [ebp-0x45],eax
  41e127:	adc    ebp,edx
  41e129:	cmp    DWORD PTR [ebx],0xffffffc2
  41e12c:	out    dx,al
  41e12d:	test   BYTE PTR [edi+0x128d1c30],ch
  41e133:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e134:	jmp    0xef03eca0
  41e139:	mov    eax,0xa43dc
  41e13e:	(bad)  
  41e13f:	shl    al,1
  41e141:	call   FWORD PTR [edi]
  41e143:	enter  0xd44c,0xef
  41e147:	stos   BYTE PTR es:[edi],al
  41e148:	je     0x41e0cc
  41e14a:	add    BYTE PTR [eax-0x3e],bh
  41e14d:	(bad)  
  41e14e:	shl    bl,0x4c
  41e151:	test   DWORD PTR [ebp+0x7b],esi
  41e154:	stos   DWORD PTR es:[edi],eax
  41e155:	dec    ecx
  41e156:	jl     0x41e160
  41e158:	mov    bh,0xb9
  41e15a:	xchg   edx,eax
  41e15b:	out    dx,eax
  41e15c:	inc    edx
  41e15d:	or     ch,cl
  41e15f:	jno    0x41e1a5
  41e161:	or     al,BYTE PTR [eax]
  41e163:	pop    esp
  41e164:	sub    edx,esp
  41e166:	add    BYTE PTR [edx+0x9],bl
  41e169:	loop   0x41e1bb
  41e16b:	(bad)  
  41e16c:	cld    
  41e16d:	jne    0x41e16e
  41e16f:	enter  0xb1c9,0x75
  41e173:	fcmovbe st,st(1)
  41e175:	jl     0x41e167
  41e177:	mov    bh,0x68
  41e179:	outs   dx,BYTE PTR ds:[esi]
  41e17a:	(bad)  
  41e17b:	clc    
  41e17c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e17d:	add    DWORD PTR cs:[edi+0x3a146442],ebp
  41e184:	or     esi,ebx
  41e186:	push   eax
  41e187:	sbb    cl,BYTE PTR [ecx]
  41e189:	mov    dl,0x50
  41e18b:	xchg   al,dl
  41e18d:	pop    eax
  41e18e:	add    dl,0x14
  41e191:	inc    si
  41e193:	xchg   edi,eax
  41e194:	mov    esi,0x75438671
  41e199:	fwait
  41e19a:	inc    edx
  41e19b:	jp     0x41e1f9
  41e19d:	ficom  WORD PTR [esi+eax*4-0x2117f1d5]
  41e1a4:	sbb    eax,0x9bfdfc71
  41e1a9:	jg     0x41e21d
  41e1ab:	outs   dx,BYTE PTR ds:[esi]
  41e1ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1ad:	js     0x41e1bb
  41e1af:	add    BYTE PTR [edx],al
  41e1b1:	pop    ebp
  41e1b2:	push   es
  41e1b3:	add    BYTE PTR [esi-0x230c1450],al
  41e1b9:	and    edi,DWORD PTR ds:0xcf690dd2
  41e1bf:	hlt    
  41e1c0:	aaa    
  41e1c1:	lahf   
  41e1c2:	pop    esp
  41e1c3:	or     al,0xb
  41e1c5:	cdq    
  41e1c6:	push   es
  41e1c7:	add    BYTE PTR [esi-0x4478afd8],al
  41e1cd:	and    BYTE PTR [ebp+0x1585dfd],al
  41e1d3:	add    DWORD PTR [edi],0xfb000e2c
  41e1d9:	fst    QWORD PTR ds:0x8e334b87
  41e1df:	jp     0x41e16e
  41e1e1:	sub    esi,ebx
  41e1e3:	and    DWORD PTR [edi+esi*1-0x65],ebx
  41e1e7:	inc    edx
  41e1e8:	sar    BYTE PTR [ebx-0x65],cl
  41e1eb:	inc    esp
  41e1ec:	mov    bh,BYTE PTR [ebx+0x71]
  41e1ef:	adc    bl,BYTE PTR [edx+0x4ffce2d]
  41e1f5:	call   0x6f0864fb
  41e1fa:	add    eax,0x7eaf4b89
  41e1ff:	add    al,0xc0
  41e201:	pop    esi
  41e202:	add    eax,0x25429cff
  41e207:	mov    eax,DWORD PTR [edx+0x1ac02679]
  41e20d:	inc    edi
  41e20e:	ins    BYTE PTR es:[edi],dx
  41e20f:	rcr    ch,1
  41e211:	imul   ebp,DWORD PTR [ebx-0x3d67ff7c],0xac860ccd
  41e21b:	sar    DWORD PTR [ebx*8+0xf1ff53a],0x1
  41e223:	int    0xc8
  41e225:	jns    0x41e1cf
  41e227:	or     ebx,ebp
  41e229:	adc    BYTE PTR ds:0x5a21ea6b,ch
  41e22f:	mov    bl,0x7e
  41e231:	aam    0x3a
  41e233:	mov    ecx,0xd172747e
  41e238:	ret    
  41e239:	dec    ecx
  41e23a:	shl    BYTE PTR [edi],0xf
  41e23d:	lods   al,BYTE PTR ds:[esi]
  41e23e:	pop    edx
  41e23f:	fwait
  41e240:	sub    al,0xc5
  41e242:	cs or  eax,0xdb3a5e5c
  41e248:	enter  0xc131,0xa6
  41e24c:	jnp    0x41e2c7
  41e24e:	shl    DWORD PTR [eax],0x1b
  41e251:	pop    edi
  41e252:	cmp    DWORD PTR [esi-0x3486e76],edx
  41e258:	add    edx,DWORD PTR [ebp+0x3dc85e7d]
  41e25e:	xchg   edx,eax
  41e25f:	lea    ebx,[ebx]
  41e261:	pop    edi
  41e262:	(bad)  
  41e263:	pop    esi
  41e264:	ja     0x41e262
  41e266:	jle    0x41e243
  41e268:	ins    BYTE PTR es:[edi],dx
  41e269:	out    0xd,eax
  41e26b:	sar    BYTE PTR [ebp+0x4],cl
  41e26e:	add    cl,BYTE PTR [edi+0x2e]
  41e271:	fld    TBYTE PTR [esi+0xe916ccb]
  41e277:	retf   0x7d
  41e27a:	loopne 0x41e2b3
  41e27c:	mov    dl,0x7d
  41e27e:	ret    0xa8b
  41e281:	shl    DWORD PTR [ecx+0xe],0xf1
  41e285:	scas   al,BYTE PTR es:[edi]
  41e286:	pushf  
  41e287:	dec    esp
  41e288:	push   edx
  41e289:	cmp    ebp,edi
  41e28b:	jg     0x41e283
  41e28d:	ins    BYTE PTR es:[edi],dx
  41e28e:	leave  
  41e28f:	clc    
  41e290:	pop    edx
  41e291:	xor    edi,0xff8ef110
  41e297:	and    al,0x88
  41e299:	jg     0x41e22c
  41e29b:	cmp    al,0xe3
  41e29d:	mov    al,ds:0x62f23700
  41e2a2:	jno    0x41e2c0
  41e2a4:	xchg   BYTE PTR [esi+ebp*8],ah
  41e2a7:	lea    esp,[edx+0x7e]
  41e2aa:	add    BYTE PTR [edx+0xa],0x51
  41e2ae:	mov    dl,0xb6
  41e2b0:	icebp  
  41e2b1:	push   esi
  41e2b2:	xor    dl,cl
  41e2b4:	rol    BYTE PTR [ecx-0x7b],cl
  41e2b7:	push   cs
  41e2b8:	icebp  
  41e2b9:	inc    esi
  41e2ba:	stc    
  41e2bb:	mov    al,0xfa
  41e2bd:	push   ecx
  41e2be:	test   eax,0xe36f1b9
  41e2c3:	sbb    edi,DWORD PTR [eax-0x22]
  41e2c6:	add    BYTE PTR [ecx-0x4632ee22],dh
  41e2cc:	icebp  
  41e2cd:	push   ds
  41e2ce:	loop   0x41e294
  41e2d0:	or     ch,cl
  41e2d2:	test   DWORD PTR [ecx],ebp
  41e2d4:	add    eax,0xe328195c
  41e2d9:	xor    ecx,DWORD PTR [edi+esi*1]
  41e2dc:	repnz mov edx,0x50964500
  41e2e2:	xchg   edx,eax
  41e2e3:	dec    esp
  41e2e4:	add    DWORD PTR [edi],eax
  41e2e6:	jmp    0x6920adc3
  41e2eb:	pop    ecx
  41e2ec:	fisttp DWORD PTR [ecx+ebp*8]
  41e2ef:	test   DWORD PTR [ecx+0x240f3e58],edx
  41e2f5:	ds into 
  41e2f7:	mov    ebx,0xf006fbc
  41e2fc:	leave  
  41e2fd:	jl     0x41e2fb
  41e2ff:	add    BYTE PTR [ebp-0x76],cl
  41e302:	adc    ch,BYTE PTR [edi+0x3e]
  41e305:	test   DWORD PTR [ecx+ebp*2],ebx
  41e308:	(bad)  
  41e309:	je     0x41e303
  41e30b:	ss xor al,0xfe
  41e30e:	cmp    edi,esp
  41e310:	inc    esi
  41e311:	mov    esi,DWORD PTR [ebp-0x74f5c051]
  41e317:	push   0xffffffc2
  41e319:	mov    BYTE PTR [ebp-0x9],al
  41e31c:	stos   BYTE PTR es:[edi],al
  41e31d:	add    DWORD PTR [edi],ecx
  41e31f:	mov    eax,0x65f98b47
  41e324:	sub    eax,DWORD PTR [esi]
  41e326:	xor    esi,0x44
  41e329:	jbe    0x41e332
  41e32b:	fdivr  QWORD PTR [edi+0xb]
  41e32e:	cmp    ebp,DWORD PTR [ecx+esi*1+0x6ab78be6]
  41e335:	jne    0x41e333
  41e337:	mov    ?,WORD PTR [esi+0x570bc332]
  41e33d:	test   DWORD PTR [eax+0x2d],ecx
  41e340:	jp     0x41e305
  41e342:	jae    0x41e344
  41e344:	and    DWORD PTR ds:0x2c52388b,ebx
  41e34a:	or     ah,BYTE PTR [esi-0x64]
  41e34d:	js     0x41e353
  41e34f:	jne    0x41e37e
  41e351:	retf   0x83b0
  41e354:	outs   dx,DWORD PTR ds:[esi]
  41e355:	inc    ecx
  41e356:	or     DWORD PTR [ebp+0x77],0xffffffc4
  41e35a:	add    eax,0xa3f1b8d
  41e35f:	add    BYTE PTR [edx+0x2c],dh
  41e362:	dec    BYTE PTR [ecx-0x6e164cd6]
  41e368:	lea    esi,[ebp+0x321f84ee]
  41e36e:	inc    eax
  41e36f:	test   eax,eax
  41e371:	xor    DWORD PTR [edi],edx
  41e373:	inc    DWORD PTR [esi-0x3677a16a]
  41e379:	add    bl,ah
  41e37b:	or     al,0xc9
  41e37d:	sti    
  41e37e:	or     DWORD PTR [edx-0x46],0xff7dbaf
  41e385:	and    eax,0x6cc68297
  41e38a:	cmp    DWORD PTR [ecx+0x4a81e143],ecx
  41e390:	call   0xe11:0x57f0aa5
  41e397:	je     0x41e322
  41e399:	mov    al,ds:0x1921e836
  41e39e:	jne    0x41e39c
  41e3a0:	and    DWORD PTR [edi+0x6e],0x5b7db36
  41e3a7:	add    BYTE PTR [eax],0xe2
  41e3aa:	mov    al,ds:0x2705fc75
  41e3af:	jbe    0x41e3ad
  41e3b1:	fild   DWORD PTR [edx+0x4d]
  41e3b4:	inc    edx
  41e3b5:	push   esi
  41e3b6:	stos   DWORD PTR es:[edi],eax
  41e3b7:	push   es
  41e3b8:	add    BYTE PTR [esi+0x49ff0682],al
  41e3be:	sbb    al,0x81
  41e3c0:	inc    edx
  41e3c1:	ds lahf 
  41e3c3:	repz repz cs push cs
  41e3c7:	pop    ecx
  41e3c8:	std    
  41e3c9:	xor    DWORD PTR [ebp+0x2329306d],eax
  41e3cf:	repz not DWORD PTR [ecx+0x19ff53a9]
  41e3d6:	sbb    al,0x4d
  41e3d8:	inc    edx
  41e3d9:	adc    bl,BYTE PTR [ebx]
  41e3db:	push   cs
  41e3dc:	add    BYTE PTR [esi+0xdebf3b2],al
  41e3e2:	out    0x61,eax
  41e3e4:	mov    BYTE PTR [ebx+0x47],cl
  41e3e7:	das    
  41e3e8:	cmp    al,0x7e
  41e3ea:	adc    BYTE PTR [edx-0x5c],dh
  41e3ed:	xchg   BYTE PTR [edx-0x1d],al
  41e3f0:	add    ecx,DWORD PTR [edi]
  41e3f2:	inc    edi
  41e3f3:	sti    
  41e3f4:	loope  0x41e386
  41e3f6:	push   0xffffffe8
  41e3f8:	jg     0x41e3e8
  41e3fa:	inc    edx
  41e3fb:	jecxz  0x41e400
  41e3fd:	ss xor edi,ecx
  41e400:	adc    DWORD PTR [edi+0x348ee382],0x1e
  41e407:	ins    DWORD PTR es:[edi],dx
  41e408:	dec    ebx
  41e409:	inc    BYTE PTR [edi-0x7aff7149]
  41e40f:	dec    eax
  41e410:	jbe    0x41e3e2
  41e412:	test   eax,0x9b157f1a
  41e417:	xor    DWORD PTR [ebp+0x5b],ebp
  41e41a:	push   es
  41e41b:	or     DWORD PTR cs:[edx],0x3e3bf02
  41e422:	xchg   BYTE PTR [ebp-0x70],ch
  41e425:	icebp  
  41e426:	fisubr DWORD PTR [eax+0x5a6cff6c]
  41e42c:	out    dx,al
  41e42d:	ret    
  41e42e:	imul   edi,DWORD PTR [esi+0x315cdb8e],0x5b476b51
  41e438:	jecxz  0x41e43d
  41e43a:	inc    DWORD PTR [edi]
  41e43c:	ins    DWORD PTR es:[edi],dx
  41e43d:	lock popa 
  41e43f:	xchg   edx,eax
  41e440:	dec    eax
  41e441:	xor    DWORD PTR [ebx+0x57],eax
  41e444:	jae    0x41e45b
  41e446:	mov    BYTE PTR [edx+0x5e],0x43
  41e44a:	mov    ch,0x3a
  41e44c:	test   al,0x86
  41e44e:	sub    cl,BYTE PTR [edx-0x6b]
  41e451:	push   eax
  41e452:	cs push eax
  41e454:	jl     0x41e4ac
  41e456:	push   cs
  41e457:	add    BYTE PTR [ecx],bl
  41e459:	prefetch BYTE PTR [esi+0x6e]
  41e45d:	ret    
  41e45e:	or     ebp,eax
  41e460:	and    esi,eax
  41e462:	xchg   edx,eax
  41e463:	mov    ebp,0x7f0e77a6
  41e468:	or     ah,cl
  41e46a:	inc    esp
  41e46b:	test   dl,bh
  41e46d:	push   ebp
  41e46e:	test   DWORD PTR [edx+0xa],eax
  41e471:	jo     0x41e473
  41e473:	test   ebx,eax
  41e475:	icebp  
  41e476:	add    ecx,ebp
  41e478:	cmp    eax,0xba4e2c85
  41e47d:	aas    
  41e47e:	loope  0x41e4c6
  41e480:	test   dl,bh
  41e482:	pop    esp
  41e483:	mov    al,BYTE PTR [edx+0xa]
  41e486:	jo     0x41e40d
  41e488:	mov    ebx,0x203c16f
  41e48d:	jecxz  0x41e4ae
  41e48f:	push   eax
  41e490:	das    
  41e491:	repnz ud2 
  41e494:	lods   al,BYTE PTR ds:[esi]
  41e495:	cli    
  41e496:	jmp    0x967f3243
  41e49b:	or     eax,DWORD PTR [esi+ebx*8-0x117bf11b]
  41e4a2:	jb     0x41e4e5
  41e4a4:	sub    al,0x43
  41e4a6:	ret    0x3838
  41e4a9:	add    ch,BYTE PTR [ebx-0x4c]
  41e4ac:	sub    eax,0x46db6ef2
  41e4b1:	leave  
  41e4b2:	lods   al,BYTE PTR ds:[esi]
  41e4b3:	aad    0xc0
  41e4b5:	or     ch,cl
  41e4b7:	test   DWORD PTR [ecx-0x52fcaeb9],edi
  41e4bd:	test   BYTE PTR [ecx+0x71],0x14
  41e4c1:	icebp  
  41e4c2:	inc    esi
  41e4c3:	and    al,0xbb
  41e4c5:	inc    edi
  41e4c6:	cmp    DWORD PTR [edi-0x72],ebx
  41e4c9:	push   ebp
  41e4ca:	and    al,cl
  41e4cc:	inc    ebx
  41e4cd:	or     dl,BYTE PTR [edx+edi*8-0x5df271e5]
  41e4d4:	ret    0x85de
  41e4d7:	add    BYTE PTR [edx],dh
  41e4d9:	xchg   esi,eax
  41e4da:	pop    ecx
  41e4db:	or     DWORD PTR [ebx+0x74a939a],0xffffffc3
  41e4e2:	loop   0x41e4e4
  41e4e4:	and    BYTE PTR [ebx-0x54c30011],cl
  41e4ea:	mov    BYTE PTR [ebx+eax*8+0x4b],al
  41e4ee:	xor    eax,edi
  41e4f0:	jb     0x41e52d
  41e4f2:	cmp    eax,eax
  41e4f4:	scas   eax,DWORD PTR es:[edi]
  41e4f5:	fwait
  41e4f6:	aam    0x1
  41e4f8:	out    dx,eax
  41e4f9:	inc    ebx
  41e4fa:	cmp    eax,eax
  41e4fc:	push   0x1f
  41e4fe:	cs inc eax
  41e500:	data16 js 0x41e535
  41e503:	mov    eax,0x93e2466c
  41e508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e509:	stos   BYTE PTR es:[edi],al
  41e50a:	out    dx,al
  41e50b:	mov    esi,DWORD PTR [edx+0x3e]
  41e50e:	test   DWORD PTR [ebx+eax*4+0x4a],eax
  41e512:	mov    DWORD PTR [ebx+edx*8+0x77],eax
  41e516:	cmp    eax,eax
  41e518:	adc    al,0x79
  41e51a:	mov    BYTE PTR [ebx+eax*8+0x57],0xc6
  41e51f:	js     0x41e580
  41e521:	inc    esi
  41e522:	mov    DWORD PTR [ebx+edx*2+0x67],0x46af89de
  41e52a:	loop   0x41e514
  41e52c:	fs inc esp
  41e52e:	or     ch,cl
  41e530:	cdq    
  41e531:	inc    ebx
  41e532:	or     al,BYTE PTR [eax]
  41e534:	in     al,dx
  41e535:	cs push es
  41e537:	adc    BYTE PTR [eax-0x3f],ch
  41e53a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e53b:	add    BYTE PTR [eax],al
  41e53d:	pop    edi
  41e53e:	inc    ebx
  41e53f:	pop    eax
  41e540:	mov    ebp,DWORD PTR [ebx+ebx*4+0x432e0c3b]
  41e547:	cmp    eax,0xffffffa2
  41e54a:	stos   BYTE PTR es:[edi],al
  41e54b:	inc    BYTE PTR [ebx+0xa43d3]
  41e551:	adc    BYTE PTR [ebx-0x55970443],bl
  41e557:	mov    cl,BYTE PTR [ebx+eax*2+0x53]
  41e55b:	out    dx,eax
  41e55c:	jbe    0x3a762f2
  41e562:	push   edi
  41e563:	loopne 0x41e59b
  41e565:	or     eax,0x498b09dc
  41e56a:	or     ebp,ebx
  41e56c:	sbb    dh,0x8
  41e56f:	out    0xe6,al
  41e571:	jmp    0x41e58b
  41e573:	push   cs
  41e574:	call   0xfcbb1930
  41e579:	pcmpgtw mm5,QWORD PTR [edx]
  41e57c:	adc    al,0xb
  41e57e:	fsincos 
  41e580:	add    al,0x8
  41e582:	stos   BYTE PTR es:[edi],al
  41e583:	push   es
  41e584:	add    BYTE PTR [esi+0x4a8b0414],al
  41e58a:	inc    ebp
  41e58b:	push   ss
  41e58c:	dec    edi
  41e58d:	sahf   
  41e58e:	jns    0x41e603
  41e590:	cld    
  41e591:	test   eax,0xa1efa10f
  41e596:	dec    esp
  41e597:	sub    dl,BYTE PTR [esi+ebp*4]
  41e59a:	adc    dl,BYTE PTR [edi-0x3]
  41e59d:	xchg   ecx,eax
  41e59e:	mov    ds:0x760023ca,eax
  41e5a3:	inc    edi
  41e5a4:	jg     0x41e619
  41e5a6:	stos   BYTE PTR es:[edi],al
  41e5a7:	sti    
  41e5a8:	jle    0x41e5ed
  41e5aa:	mov    ds:0xaa7b7f07,al
  41e5af:	add    esi,DWORD PTR [eax]
  41e5b1:	inc    ebx
  41e5b2:	mov    ds:0x866a0e0c,al
  41e5b7:	adc    DWORD PTR [edi],eax
  41e5b9:	mov    eax,edx
  41e5bb:	inc    edi
  41e5bc:	mov    esi,0x1210034f
  41e5c1:	cmp    BYTE PTR [esi-0x79],bl
  41e5c4:	and    eax,0x469f8600
  41e5c9:	jb     0x41e55b
  41e5cb:	adc    eax,DWORD PTR [esi+0x791b8610]
  41e5d1:	adc    bh,BYTE PTR [esi]
  41e5d3:	or     cl,dh
  41e5d5:	jmp    DWORD PTR [ebx]
  41e5d7:	inc    ebx
  41e5d8:	lahf   
  41e5d9:	pop    ds
  41e5da:	mov    eax,edx
  41e5dc:	(bad)  
  41e5dd:	pop    ds
  41e5de:	add    DWORD PTR [eax-0x6b],0x4f
  41e5e2:	mov    dl,0x1a
  41e5e4:	push   es
  41e5e5:	push   esp
  41e5e6:	add    ebp,DWORD PTR [esi]
  41e5e8:	jge    0x41e5db
  41e5ea:	cmp    DWORD PTR [ecx+0x1ac38b24],0x2de90ac1
  41e5f4:	mov    ch,0x76
  41e5f6:	push   cs
  41e5f7:	or     ebp,DWORD PTR ds:0x2bc78a57
  41e5fd:	ja     0x41e5d1
  41e5ff:	sub    eax,0x3f556f1d
  41e604:	shr    BYTE PTR ds:0x93edae00,0x75
  41e60b:	mov    edx,0xc1bcdb94
  41e610:	sub    al,0xb9
  41e612:	mov    ds:0x424ea71,eax
  41e617:	out    dx,al
  41e618:	push   edx
  41e619:	paddusw mm1,QWORD PTR [edi+eax*4]
  41e61d:	(bad)  
  41e61e:	adc    esi,DWORD PTR [esi]
  41e620:	mov    ebx,0x1a722017
  41e625:	(bad)  
  41e626:	out    dx,al
  41e627:	sub    BYTE PTR ds:0x6ef54360,0x9b
  41e62e:	sbb    ebp,edi
  41e630:	sub    eax,0x62418279
  41e635:	push   0xffffffbf
  41e637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e638:	push   esi
  41e639:	jbe    0x41e5fa
  41e63b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e63c:	push   esi
  41e63d:	mov    bl,0xe9
  41e63f:	push   eax
  41e640:	(bad)  
  41e643:	popa   
  41e644:	loopne 0x41e621
  41e646:	jbe    0x41e68a
  41e648:	sub    eax,0x1a961fb0
  41e64d:	jbe    0x41e653
  41e64f:	xor    DWORD PTR ds:0x627e6a0b,ebp
  41e655:	sahf   
  41e656:	stos   BYTE PTR es:[edi],al
  41e657:	test   DWORD PTR [edx+0x62],edx
  41e65a:	jmp    0x93cc28e4
  41e65f:	add    ebp,0x2f6dcd6e
  41e665:	sbb    BYTE PTR [ebp-0x6f],bl
  41e668:	or     BYTE PTR [edx],0x74
  41e66b:	add    cl,ch
  41e66d:	pusha  
  41e66e:	sbb    dl,BYTE PTR [ecx]
  41e670:	(bad)  
  41e671:	mov    ch,0xf1
  41e673:	neg    BYTE PTR [edi+0x7b]
  41e676:	mov    ds:0xe23af1e1,al
  41e67b:	pop    edx
  41e67c:	mov    BYTE PTR ds:0xea9289f2,ch
  41e682:	dec    ebp
  41e683:	jmp    0x6b828a5
  41e688:	mov    dl,0xd4
  41e68a:	jb     0x41e6b5
  41e68c:	sbb    BYTE PTR [edx],0x62
  41e68f:	scas   al,BYTE PTR es:[edi]
  41e690:	cmp    ebp,DWORD PTR [esi]
  41e692:	lods   al,BYTE PTR ds:[esi]
  41e693:	icebp  
  41e694:	in     eax,dx
  41e695:	or     DWORD PTR [edx],0xa428a41
  41e69b:	imul   esi,DWORD PTR ds:0x85898e25,0xbae86492
  41e6a5:	xchg   ebp,eax
  41e6a6:	pop    ecx
  41e6a7:	mov    ss,WORD PTR [ecx-0x7dd6e56e]
  41e6ad:	sbb    DWORD PTR [ecx+edx*2],ebx
  41e6b0:	xchg   BYTE PTR [esi+0x428200ff],dh
  41e6b6:	or     ch,BYTE PTR [ecx+0x6c]
  41e6b9:	push   eax
  41e6ba:	icebp  
  41e6bb:	cld    
  41e6bc:	add    DWORD PTR [eax+0x4a],edx
  41e6bf:	jmp    0xf168969e
  41e6c4:	frstor [edi+0xb]
  41e6c7:	call   0x889e51
  41e6cc:	mov    ecx,DWORD PTR [esi]
  41e6ce:	inc    edx
  41e6cf:	mov    DWORD PTR [eax],0xec3a4beb
  41e6d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6d6:	push   es
  41e6d7:	repnz (bad) 
  41e6d9:	cmp    bl,BYTE PTR [eax+0x732f401b]
  41e6df:	retf   0xd15f
  41e6e2:	or     al,BYTE PTR [ebx+0xd81d2e5]
  41e6e8:	add    BYTE PTR [ecx],bh
  41e6ea:	mov    ebx,0x803c57e1
  41e6ef:	or     dh,0x2c
  41e6f2:	mov    bh,0xe9
  41e6f4:	sub    ch,ah
  41e6f6:	inc    eax
  41e6f7:	or     al,BYTE PTR [ebp-0x749ccd51]
  41e6fd:	adc    edi,ebp
  41e6ff:	jmp    0xa82bc20
  41e704:	test   DWORD PTR [edi],ebx
  41e706:	sbb    eax,0x1bd085fe
  41e70b:	push   ebx
  41e70c:	mov    ebp,DWORD PTR [ecx-0x70eb9e4a]
  41e712:	sahf   
  41e713:	daa    
  41e714:	shl    cl,1
  41e716:	mov    dh,0x82
  41e718:	lock sub bl,BYTE PTR [ebp+0x4275227d]
  41e71f:	loop   0x41e6ac
  41e721:	loopne 0x41e6d8
  41e723:	out    dx,al
  41e724:	test   edi,ebx
  41e726:	sbb    ecx,DWORD PTR ds:0xe33f4f83
  41e72c:	add    bh,BYTE PTR [edi+edi*2]
  41e72f:	mov    eax,es
  41e731:	jnp    0x41e760
  41e733:	mov    DWORD PTR [eax],esi
  41e735:	add    ah,ah
  41e737:	scas   eax,DWORD PTR es:[edi]
  41e738:	loop   0x41e742
  41e73a:	jns    0x41e6da
  41e73c:	or     edi,0xf63ab6e1
  41e742:	sbb    DWORD PTR [edi],edx
  41e744:	jle    0x41e713
  41e746:	xchg   dl,bl
  41e748:	or     eax,0x2581866a
  41e74d:	sar    BYTE PTR [ecx],cl
  41e74f:	test   BYTE PTR [eax-0x41],dh
  41e752:	mov    ebx,0xb2f57116
  41e757:	es ja  0x41e78f
  41e75a:	cs out 0x46,eax
  41e75d:	std    
  41e75e:	sbb    ebx,ebp
  41e760:	imul   eax,DWORD PTR gs:[ecx+0x4b],0x76
  41e765:	xor    DWORD PTR [esi+0x40],eax
  41e768:	or     esi,DWORD PTR [eax-0x3f282379]
  41e76e:	push   ebx
  41e76f:	mov    al,0x69
  41e771:	and    dl,0x8
  41e774:	fld    TBYTE PTR [ecx-0x79]
  41e777:	int3   
  41e778:	jbe    0x41e78c
  41e77a:	cmp    cl,BYTE PTR [ecx]
  41e77c:	into   
  41e77d:	inc    DWORD PTR [edx]
  41e77f:	fptan  
  41e781:	jbe    0x41e718
  41e783:	add    dl,bl
  41e785:	push   eax
  41e786:	pop    esp
  41e787:	sbb    dl,ch
  41e789:	cld    
  41e78a:	fwait
  41e78b:	jno    0x41e7a3
  41e78d:	inc    eax
  41e78e:	xchg   BYTE PTR [esi+0x481e7346],bl
  41e794:	mov    eax,DWORD PTR [edx-0x56]
  41e797:	dec    eax
  41e798:	sar    dh,1
  41e79a:	add    BYTE PTR [ecx],ch
  41e79c:	int    0xde
  41e79e:	aas    
  41e79f:	xchg   ah,ah
  41e7a1:	adc    ebx,DWORD PTR [esi+esi*2+0x59]
  41e7a5:	push   es
  41e7a6:	add    esi,0x4c
  41e7a9:	pop    ds
  41e7aa:	mov    ecx,ebx
  41e7ac:	iret   
  41e7ad:	(bad)  
  41e7ae:	mov    al,bl
  41e7b0:	ret    
  41e7b1:	(bad)  
  41e7b2:	mov    cl,bl
  41e7b4:	stos   DWORD PTR es:[edi],eax
  41e7b5:	(bad)  
  41e7b6:	cld    
  41e7b7:	repz scas eax,DWORD PTR es:[edi]
  41e7b9:	outs   dx,DWORD PTR ds:[esi]
  41e7ba:	pop    edx
  41e7bb:	pop    esi
  41e7bc:	cdq    
  41e7bd:	adc    esp,DWORD PTR [eax+0x76]
  41e7c0:	inc    edx
  41e7c1:	mov    ds:0xd8030503,eax
  41e7c6:	pop    ss
  41e7c7:	dec    ebx
  41e7c8:	mov    al,0x4f
  41e7ca:	jae    0x41e780
  41e7cc:	sub    al,BYTE PTR [ecx-0x7]
  41e7cf:	sub    DWORD PTR [edx+0x52aa1948],edx
  41e7d5:	mov    ds:0xaf030503,eax
  41e7da:	add    BYTE PTR [ebx],ah
  41e7dc:	mov    al,0x1f
  41e7de:	jae    0x41e854
  41e7e0:	retf   0xc3f5
  41e7e3:	adc    ebp,eax
  41e7e5:	sahf   
  41e7e6:	outs   dx,DWORD PTR ds:[esi]
  41e7e7:	or     ch,BYTE PTR [esi+0x14]
  41e7ea:	clc    
  41e7eb:	lea    eax,[ecx]
  41e7ed:	jmp    0x737c:0xe429f9ff
  41e7f4:	ds jp  0x41e7c9
  41e7f7:	cmp    DWORD PTR [ebp+0x44ee6f9e],0x3e0043b4
  41e801:	sti    
  41e802:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e803:	fdivr  st,st(6)
  41e805:	push   ss
  41e806:	xor    ebx,edx
  41e808:	(bad)  
  41e809:	outs   dx,DWORD PTR ds:[esi]
  41e80a:	adc    edx,DWORD PTR [esi+eax*2]
  41e80d:	inc    edx
  41e80e:	cmp    BYTE PTR [ecx-0x21ebd9bc],al
  41e814:	mov    cl,0x9b
  41e816:	jecxz  0x41e7f5
  41e818:	test   al,0x28
  41e81a:	das    
  41e81b:	cld    
  41e81c:	mov    ds:0x14436710,al
  41e821:	ins    BYTE PTR es:[edi],dx
  41e822:	test   al,0x18
  41e824:	outs   dx,BYTE PTR ds:[esi]
  41e825:	push   ebx
  41e826:	and    eax,DWORD PTR [edi+eax*1]
  41e829:	sub    ebx,DWORD PTR [esi]
  41e82b:	stc    
  41e82c:	mov    dl,0xbd
  41e82e:	es jo  0x41e835
  41e831:	add    dh,al
  41e833:	sbb    ebx,DWORD PTR [esi-0x66]
  41e836:	mov    eax,ds:0xabd6a71
  41e83b:	jno    0x41e84b
  41e83d:	es ja  0x41e80c
  41e840:	push   es
  41e841:	test   dh,ch
  41e843:	mov    ecx,0xb6eeb4d4
  41e848:	sub    ebp,DWORD PTR [eax]
  41e84a:	icebp  
  41e84b:	fdivr  QWORD PTR ds:0xc564d926
  41e851:	mov    ch,0x6
  41e853:	jb     0x41e811
  41e855:	sbb    al,BYTE PTR [ebx]
  41e857:	xchg   esi,eax
  41e858:	int    0xb1
  41e85a:	shl    BYTE PTR [edi],0x94
  41e85d:	jb     0x41e829
  41e85f:	mov    ?,WORD PTR [edi]
  41e861:	add    ch,cl
  41e863:	in     eax,dx
  41e864:	add    BYTE PTR [ebp+0x11570190],al
  41e86a:	add    bh,BYTE PTR gs:[esi-0x1e4212fa]
  41e871:	add    BYTE PTR [edx+0xa],0x72
  41e875:	test   ch,al
  41e877:	ret    
  41e878:	jne    0x41e8f9
  41e87a:	mov    ebx,0x278a830b
  41e87f:	sbb    ebp,DWORD PTR [edx-0x54]
  41e882:	inc    edx
  41e883:	cmp    eax,0x839eb7a9
  41e888:	rcl    DWORD PTR gs:[eax+0xb],cl
  41e88c:	jmp    0xe60e7116
  41e891:	test   DWORD PTR [ebp+0x1d05d585],edx
  41e897:	repz jmp 0x1f9f2b22
  41e89d:	mov    edi,0xb28147bb
  41e8a2:	inc    BYTE PTR [edi-0x5e]
  41e8a5:	mov    bl,BYTE PTR [edx]
  41e8a7:	jge    0x41e8c9
  41e8a9:	pop    ss
  41e8aa:	sbb    BYTE PTR es:[esi+eax*8],0x1f
  41e8af:	fnsave [edx+eax*4+0x42]
  41e8b3:	lea    eax,[eax]
  41e8b5:	or     BYTE PTR [edx+0x7a098af1],0x4c
  41e8bc:	int3   
  41e8bd:	dec    edi
  41e8be:	test   al,0x31
  41e8c0:	add    BYTE PTR [edi],al
  41e8c2:	out    dx,eax
  41e8c3:	test   eax,0x54a75f00
  41e8c8:	or     BYTE PTR [eax],al
  41e8ca:	fidivr DWORD PTR [ebp+0x442f0119]
  41e8d0:	mov    DWORD PTR [ebp-0x31],eax
  41e8d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8d4:	mov    cl,BYTE PTR [eax]
  41e8d6:	push   ds
  41e8d7:	inc    esp
  41e8d8:	or     al,dh
  41e8da:	loop   0x41e863
  41e8dc:	icebp  
  41e8dd:	(bad)  
  41e8de:	repnz scas eax,DWORD PTR es:[edi]
  41e8e0:	or     BYTE PTR [ebp-0x11],ch
  41e8e3:	inc    ebx
  41e8e4:	mov    DWORD PTR [ebp+0x63],eax
  41e8e7:	stos   DWORD PTR es:[edi],eax
  41e8e8:	dec    esp
  41e8e9:	call   0x8c2be882
  41e8ee:	fbld   TBYTE PTR [esi+0x1664f44c]
  41e8f4:	or     ecx,DWORD PTR [ebp-0x765da6f5]
  41e8fa:	push   0xffffffb3
  41e8fc:	mov    esi,?
  41e8fe:	arpl   si,di
  41e900:	test   BYTE PTR [ebp-0x7d],al
  41e903:	push   cs
  41e904:	test   DWORD PTR [ebp+0x17],eax
  41e907:	adc    al,0x6a
  41e909:	or     bh,cl
  41e90b:	inc    ebx
  41e90c:	or     ch,BYTE PTR [eax-0x28]
  41e90f:	mov    dl,0xf1
  41e911:	dec    eax
  41e913:	sub    DWORD PTR [esi],ecx
  41e915:	(bad)  
  41e916:	bound  ebx,QWORD PTR [edx+0x439f000d]
  41e91c:	out    dx,eax
  41e91d:	adc    eax,0x4a50eb
  41e922:	and    al,BYTE PTR [ebx+0x1a157c]
  41e928:	retf   0xe850
  41e92b:	sub    DWORD PTR [edx],ecx
  41e92d:	inc    DWORD PTR [eax]
  41e92f:	xchg   BYTE PTR [esi],ah
  41e931:	or     cl,BYTE PTR [edi]
  41e933:	(bad)  
  41e934:	sbb    DWORD PTR [ecx+0x689681bf],ecx
  41e93a:	(bad)  
  41e93b:	imul   ebx,DWORD PTR [ecx],0xc172727b
  41e941:	sub    ch,bh
  41e943:	pop    ecx
  41e944:	cwde   
  41e945:	outs   dx,BYTE PTR ds:[esi]
  41e946:	inc    edx
  41e947:	pop    edx
  41e948:	xor    BYTE PTR [edi+edi*1-0x3aa16b7],dh
  41e94f:	mov    dl,0x90
  41e951:	jp     0x41e8d6
  41e953:	inc    esi
  41e954:	push   cs
  41e955:	push   es
  41e956:	add    ax,0x640
  41e95a:	or     eax,0xc5b02
  41e95f:	xchg   BYTE PTR [esi+ecx*2],ch
  41e962:	gs mov esp,cr0
  41e966:	inc    edx
  41e967:	or     eax,0x87b3551a
  41e96c:	sbb    DWORD PTR [esi],ecx
  41e96e:	push   0xffffff9a
  41e970:	inc    ecx
  41e971:	enter  0xf8ca,0x37
  41e975:	mov    BYTE PTR [edi+0x4a6f087a],bh
  41e97b:	repnz pop ss
  41e97d:	mov    ah,0xe
  41e97f:	xchg   ecx,eax
  41e980:	addr16 mov ah,0xfc
  41e983:	xor    al,0xca
  41e985:	outs   dx,BYTE PTR ds:[esi]
  41e986:	out    dx,eax
  41e987:	fisub  WORD PTR [edx+eiz*8+0x76b3c9fc]
  41e98e:	call   0x82ba3617
  41e993:	add    BYTE PTR [eax-0x787875f9],dh
  41e999:	sbb    DWORD PTR [esi],ecx
  41e99b:	mov    DWORD PTR [ebx],ebp
  41e99d:	int    0x48
  41e99f:	inc    edx
  41e9a0:	pushf  
  41e9a1:	sbb    BYTE PTR [ebx+0x754412fc],al
  41e9a7:	add    al,0x3
  41e9a9:	inc    edx
  41e9aa:	ss push eax
  41e9ac:	cmp    BYTE PTR [edi-0x404e2b70],cl
  41e9b2:	mov    ds:0x649c9cf9,eax
  41e9b7:	icebp  
  41e9b8:	dec    ebp
  41e9b9:	es stc 
  41e9bb:	xchg   edi,eax
  41e9bc:	sub    DWORD PTR [edi-0x466f065d],edi
  41e9c2:	loopne 0x41e99d
  41e9c4:	pop    edx
  41e9c5:	mov    fs,WORD PTR [eax-0x2c]
  41e9c8:	xchg   ebp,eax
  41e9c9:	sub    eax,0x25460a4c
  41e9ce:	and    al,0x7c
  41e9d0:	les    ebp,FWORD PTR [eax]
  41e9d2:	ins    DWORD PTR es:[edi],dx
  41e9d3:	leave  
  41e9d4:	sub    DWORD PTR [esi],esi
  41e9d6:	cwde   
  41e9d7:	or     al,0xee
  41e9d9:	push   edx
  41e9da:	add    BYTE PTR [esi+eax*4],al
  41e9dd:	pushf  
  41e9de:	or     al,0x4c
  41e9e0:	xchg   edi,eax
  41e9e1:	jp     0x41ea5e
  41e9e3:	xor    al,0x95
  41e9e5:	inc    edx
  41e9e6:	jecxz  0x41e9cd
  41e9e8:	dec    esi
  41e9e9:	or     dl,BYTE PTR [ecx+0x5ea49c2d]
  41e9ef:	mov    DWORD PTR [ebx+0x6f6f1925],edx
  41e9f5:	inc    edx
  41e9f6:	mov    bl,0x5b
  41e9f8:	add    bl,ah
  41e9fa:	pop    ecx
  41e9fb:	loop   0x41ea00
  41e9fd:	cld    
  41e9fe:	jl     0x41e9df
  41ea00:	add    ch,0x36
  41ea03:	or     ebx,esp
  41ea05:	arpl   WORD PTR ds:0x210e5e1,sp
  41ea0b:	cld    
  41ea0c:	in     eax,0x0
  41ea0e:	rcr    bh,0x6e
  41ea11:	ret    0x4225
  41ea14:	jge    0x41ea32
  41ea16:	xor    eax,0xb7b26ec0
  41ea1b:	jmp    DWORD PTR [edx-0x34854edb]
  41ea22:	sbb    cl,BYTE PTR [ebx]
  41ea24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea25:	mov    al,ds:0x4565f226
  41ea2a:	mov    al,0x5b
  41ea2c:	aas    
  41ea2d:	sub    bh,BYTE PTR [ebp+0x62]
  41ea30:	sahf   
  41ea31:	lock ror edx,0x1c
  41ea35:	xchg   DWORD PTR [ebx-0x4474fcf8],edi
  41ea3b:	rol    BYTE PTR [esi-0x1614e26b],0x85
  41ea42:	inc    edx
  41ea43:	jg     0x41eab1
  41ea45:	pop    ecx
  41ea46:	repnz outs dx,BYTE PTR es:[esi]
  41ea49:	xor    eax,0x5751d572
  41ea4e:	lahf   
  41ea4f:	icebp  
  41ea50:	pop    esi
  41ea51:	or     ebp,esp
  41ea53:	jbe    0x41ea4c
  41ea55:	cmp    dh,ch
  41ea57:	xchg   ebp,ebx
  41ea59:	mov    al,ds:0xb1f226
  41ea5e:	in     eax,dx
  41ea5f:	mov    al,0x7
  41ea61:	push   0xffffffbd
  41ea63:	push   eax
  41ea64:	ja     0x41ea54
  41ea66:	sbb    dh,ch
  41ea68:	(bad)  
  41ea69:	fbld   TBYTE PTR [eax-0x3d700dda]
  41ea6f:	add    al,BYTE PTR [ebx]
  41ea71:	out    dx,al
  41ea72:	cmp    BYTE PTR [edx],cl
  41ea74:	xchg   BYTE PTR [ebp+esi*2+0x4bf1839f],ch
  41ea7b:	xor    ch,0xe8
  41ea7e:	ins    BYTE PTR es:[edi],dx
  41ea7f:	and    dl,0x72
  41ea82:	mov    BYTE PTR [esp+eax*4],0xb9
  41ea86:	pop    esp
  41ea87:	cmp    dl,0x87
  41ea8a:	dec    esp
  41ea8b:	and    eax,0xc1857068
  41ea90:	icebp  
  41ea91:	out    dx,al
  41ea92:	or     DWORD PTR [eax-0x447a16f6],edi
  41ea98:	or     DWORD PTR [ecx+esi*8+0xc],ebx
  41ea9c:	pop    esp
  41ea9d:	add    BYTE PTR [eax+0x2a284197],cl
  41eaa3:	jle    0x41eb21
  41eaa5:	adc    al,0x49
  41eaa7:	ret    
  41eaa8:	je     0x41ea82
  41eaaa:	loopne 0x41ead2
  41eaac:	sahf   
  41eaad:	shl    BYTE PTR [ebx-0xbf782c1],0x3d
  41eab4:	add    BYTE PTR fs:[eax-0x1bd3be6b],bh
  41eabb:	sti    
  41eabc:	std    
  41eabd:	pop    gs
  41eabf:	ds inc edx
  41eac1:	je     0x41eac3
  41eac3:	jno    0x41eaad
  41eac5:	jl     0x41eb18
  41eac7:	test   DWORD PTR [edi+eax*8],esp
  41eaca:	inc    ebp
  41eacb:	or     edx,DWORD PTR [eax+0xa]
  41eace:	add    BYTE PTR [edi-0x75],bl
  41ead1:	or     BYTE PTR [edx+0x32],ch
  41ead4:	jg     0x41eb22
  41ead6:	in     al,0x29
  41ead8:	inc    eax
  41ead9:	or     al,BYTE PTR [eax]
  41eadb:	mul    DWORD PTR [esp+edi*2+0x2b6dd7b4]
  41eae2:	add    BYTE PTR [edi],ch
  41eae4:	stos   DWORD PTR es:[edi],eax
  41eae5:	dec    esp
  41eae6:	lock and bh,ch
  41eae9:	icebp  
  41eaea:	dec    edi
  41eaeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eaec:	jl     0x41eb2f
  41eaee:	push   0x13
  41eaf0:	sti    
  41eaf1:	test   BYTE PTR [ebp+0x7f],bh
  41eaf4:	xchg   ah,cl
  41eaf6:	seto   BYTE PTR [ebp+0x7e6a5958]
  41eafd:	outs   dx,DWORD PTR ds:[esi]
  41eafe:	push   ss
  41eaff:	sub    BYTE PTR [ebx],0xee
  41eb02:	mov    ebp,DWORD PTR [edx]
  41eb04:	mov    al,0xfe
  41eb06:	mov    dh,0xef
  41eb08:	jae    0x4ce6dad5
  41eb0e:	int3   
  41eb0f:	pop    DWORD PTR [esi+0x3fafa77a]
  41eb15:	cmp    DWORD PTR [ebp-0x7a],0xffffffe5
  41eb19:	lea    edi,[edx-0x54]
  41eb1c:	sbb    edx,edi
  41eb1e:	pop    es
  41eb1f:	std    
  41eb20:	adc    al,0xd4
  41eb22:	(bad)  
  41eb23:	cmp    ah,ah
  41eb25:	fnsave [ebx]
  41eb27:	add    BYTE PTR ds:0x4bfdee4f,cl
  41eb2d:	in     eax,0x8a
  41eb2f:	inc    edx
  41eb30:	sahf   
  41eb31:	adc    eax,0x1766428b
  41eb36:	mov    eax,DWORD PTR [edx+0x72]
  41eb39:	and    DWORD PTR [esi-0x10e29d86],ecx
  41eb3f:	xor    DWORD PTR [edi],0xdfc5ebe
  41eb45:	pop    esi
  41eb46:	push   edx
  41eb47:	add    BYTE PTR [esi+0x25],0xf4
  41eb4b:	mov    BYTE PTR [esi+0x49],bh
  41eb4e:	pop    edi
  41eb4f:	dec    esi
  41eb50:	jle    0x41eaea
  41eb52:	call   0x8af2722a
  41eb57:	mov    eax,DWORD PTR [edi+0x5870e19]
  41eb5d:	cmp    DWORD PTR ds:0x4ab08600,ecx
  41eb63:	lds    eax,FWORD PTR ds:0x86000d41
  41eb69:	sbb    dl,BYTE PTR [esi+0x7a]
  41eb6c:	xchg   BYTE PTR [ecx],bl
  41eb6e:	push   cs
  41eb6f:	test   BYTE PTR [esi-0x3b],al
  41eb72:	add    ecx,DWORD PTR ds:0xff259838
  41eb78:	stc    
  41eb79:	sbb    BYTE PTR [ebx-0x78],dh
  41eb7c:	push   edx
  41eb7d:	sbb    cl,BYTE PTR [esi]
  41eb7f:	add    bh,bh
  41eb81:	lods   al,BYTE PTR ds:[esi]
  41eb82:	mov    bl,BYTE PTR [edi]
  41eb84:	xchg   DWORD PTR [ecx],ebx
  41eb86:	push   cs
  41eb87:	inc    BYTE PTR ds:0xcf1
  41eb8d:	xchg   BYTE PTR [eax+0x425cc3b0],ah
  41eb93:	(bad)  
  41eb95:	push   cs
  41eb96:	inc    ecx
  41eb97:	inc    sp
  41eb99:	xor    eax,0xf6b1e84b
  41eb9e:	imul   esp,edx,0x23b78603
  41eba4:	cld    
  41eba5:	or     BYTE PTR [esi+0x22992474],bh
  41ebab:	in     al,0x69
  41ebad:	push   es
  41ebae:	push   0xffffffe2
  41ebb0:	add    eax,DWORD PTR [esi-0x33ff5d41]
  41ebb6:	xchg   edi,eax
  41ebb7:	scas   al,BYTE PTR es:[edi]
  41ebb8:	test   ah,bh
  41ebba:	sbb    eax,0xac90f0e3
  41ebbf:	iret   
  41ebc0:	js     0x41eb86
  41ebc2:	jmp    0x6b13:0xd6c47913
  41ebc9:	je     0x41ec1d
  41ebcb:	rol    ebx,1
  41ebcd:	push   ecx
  41ebce:	lds    esp,FWORD PTR [edi-0x70780308]
  41ebd4:	aam    0xaf
  41ebd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebd7:	(bad)  
  41ebd9:	shr    DWORD PTR [edx],1
  41ebdb:	push   esi
  41ebdd:	xor    ah,BYTE PTR [edx]
  41ebdf:	dec    edi
  41ebe0:	icebp  
  41ebe1:	cmp    eax,0x21a0c92b
  41ebe6:	and    dl,BYTE PTR [ecx+0x260bbec9]
  41ebec:	add    BYTE PTR [esi+0x7e9878],al
  41ebf2:	sbb    DWORD PTR [esi+0x28],edx
  41ebf5:	sub    eax,0x3e27f40
  41ebfa:	xchg   BYTE PTR [edi+0x795ad2fb],dl
  41ec00:	mov    eax,0xd5da946a
  41ec05:	ret    
  41ec06:	loope  0x41ebd2
  41ec08:	imul   ecx,eax,0xe90b21d8
  41ec0e:	mov    al,ds:0x93e57807
  41ec13:	add    ah,dh
  41ec15:	jmp    0x41ec0c
  41ec17:	and    BYTE PTR [ecx+0x3f],dl
  41ec1a:	inc    ecx
  41ec1b:	je     0x41eba2
  41ec1d:	lds    ecx,FWORD PTR [eax]
  41ec1f:	cs pop ds
  41ec21:	cmp    ch,BYTE PTR [ecx]
  41ec23:	stc    
  41ec24:	test   DWORD PTR [edx-0x63],ebp
  41ec27:	and    dl,dh
  41ec29:	jmp    0x63107048
  41ec2e:	or     BYTE PTR [esi+0xb],cl
  41ec31:	jmp    0x2cc564bb
  41ec36:	out    0xcc,al
  41ec38:	(bad)  
  41ec39:	fld    QWORD PTR [edx-0x46c1f5be]
  41ec3f:	sbb    BYTE PTR [ebx+0x60],bl
  41ec42:	jbe    0x41ec3d
  41ec44:	leave  
  41ec45:	sub    al,0xea
  41ec47:	and    dl,dh
  41ec49:	jmp    0x8189b5d3
  41ec4e:	fdiv   QWORD PTR [esi+ebx*8]
  41ec51:	fild   DWORD PTR [ebp+0x21]
  41ec54:	sbb    esp,0x0
  41ec57:	lods   eax,DWORD PTR ds:[esi]
  41ec58:	pop    eax
  41ec59:	mov    ebp,0xa4282c1
  41ec5e:	out    0x7,al
  41ec60:	lahf   
  41ec61:	or     ebp,ecx
  41ec63:	test   ebx,ecx
  41ec65:	lea    ebx,[ebp+0x720a428a]
  41ec6b:	ficomp WORD PTR [eax]
  41ec6d:	xchg   ch,bh
  41ec6f:	lea    eax,[edi]
  41ec71:	dec    eax
  41ec72:	das    
  41ec73:	test   ebp,eax
  41ec75:	clc    
  41ec76:	test   BYTE PTR [ecx-0x7a16f48b],0xcb
  41ec7d:	dec    eax
  41ec7e:	loope  0x41ec86
  41ec80:	loope  0x41ecf8
  41ec82:	clc    
  41ec83:	retf   
  41ec84:	and    BYTE PTR [edx+0x0],al
  41ec87:	mov    BYTE PTR [edx],dh
  41ec89:	sbb    dl,BYTE PTR [ebx]
  41ec8b:	das    
  41ec8c:	inc    ebp
  41ec8d:	(bad)  
  41ec8e:	shr    al,0xa0
  41ec91:	xor    eax,0xc844df01
  41ec96:	inc    ebp
  41ec97:	stos   BYTE PTR es:[edi],al
  41ec98:	inc    ebp
  41ec99:	enter  0xd845,0x45
  41ec9d:	push   DWORD PTR [ebp-0x1f4f549e]
  41eca3:	pushf  
  41eca4:	popf   
  41eca5:	inc    ebp
  41eca6:	add    eax,0xec4c9ceb
  41ecab:	and    bl,BYTE PTR [ebp-0x2]
  41ecae:	and    ebx,0x45
  41ecb1:	or     al,BYTE PTR [eax]
  41ecb3:	test   al,0xd2
  41ecb5:	xor    BYTE PTR [edi+esi*4],cl
  41ecb8:	adc    al,BYTE PTR [esi]
  41ecba:	dec    eax
  41ecbb:	add    BYTE PTR [edx-0x4cb97acf],dl
  41ecc1:	and    al,0x8b
  41ecc3:	cmp    BYTE PTR [eax+0x7f],dh
  41ecc6:	push   es
  41ecc7:	lea    esi,[ecx+0x47836802]
  41eccd:	inc    esi
  41ecce:	jge    0x41ecd5
  41ecd0:	out    0xdf,al
  41ecd2:	std    
  41ecd3:	jmp    0x41ed38
  41ecd5:	(bad)  
  41ecd6:	ins    BYTE PTR es:[edi],dx
  41ecd7:	hlt    
  41ecd8:	das    
  41ecd9:	(bad)  
  41ecda:	je     0x41ecd0
  41ecdc:	das    
  41ecdd:	sbb    ecx,DWORD PTR [esi+0xa441f95]
  41ece3:	movups xmm0,XMMWORD PTR ds:0x34018b1e
  41ecea:	cmp    DWORD PTR [ecx],0xffffffff
  41eced:	cmc    
  41ecee:	out    dx,al
  41ecef:	jne    0x41ed44
  41ecf1:	test   eax,0x86a31056
  41ecf6:	jge    0x41ed02
  41ecf8:	ins    BYTE PTR es:[edi],dx
  41ecf9:	jmp    ecx
  41ecfb:	add    BYTE PTR [ecx-0x79fe1021],ah
  41ed01:	inc    esp
  41ed02:	in     eax,0xfc
  41ed04:	xchg   ebx,eax
  41ed05:	adc    eax,0x8286401c
  41ed0a:	int    0x24
  41ed0c:	xchg   BYTE PTR [ecx],ch
  41ed0e:	pop    ds
  41ed0f:	mov    edi,0x55e1d551
  41ed14:	std    
  41ed15:	popa   
  41ed16:	(bad)  
  41ed17:	out    0xa3,al
  41ed19:	push   eax
  41ed1a:	push   es
  41ed1b:	add    BYTE PTR [edx],dh
  41ed1d:	ins    DWORD PTR es:[edi],dx
  41ed1e:	xchg   esi,esp
  41ed20:	add    BYTE PTR [eax-0x79428dd8],bl
  41ed26:	sub    DWORD PTR [esi],ecx
  41ed28:	sub    DWORD PTR [edi+0xd3de215],0xd80c5267
  41ed32:	ins    DWORD PTR es:[edi],dx
  41ed33:	icebp  
  41ed34:	xlat   BYTE PTR ds:[ebx]
  41ed35:	ss add ebp,ecx
  41ed38:	clc    
  41ed39:	sub    eax,0xe4e1e7d6
  41ed3f:	(bad)  
  41ed40:	cld    
  41ed41:	jno    0x41edbf
  41ed43:	leave  
  41ed44:	(bad)  
  41ed45:	imul   ebp,DWORD PTR [ecx],0xfb3a1263
  41ed4b:	int    0xff
  41ed4d:	ins    BYTE PTR es:[edi],dx
  41ed4e:	movaps XMMWORD PTR [ecx-0x57],xmm0
  41ed52:	sub    DWORD PTR [esi],ecx
  41ed54:	jl     0x41ed87
  41ed56:	out    dx,al
  41ed57:	mov    cl,0x24
  41ed59:	xchg   BYTE PTR [ecx],ch
  41ed5b:	in     al,0xd
  41ed5d:	jnp    0x41ed46
  41ed5f:	sub    al,BYTE PTR [eax]
  41ed61:	xchg   ch,bh
  41ed63:	or     bh,BYTE PTR [ebx]
  41ed65:	xlat   BYTE PTR ds:[ebx]
  41ed66:	dec    eax
  41ed67:	push   es
  41ed68:	add    BYTE PTR [ebx+0x187a8d6b],bl
  41ed6e:	sub    ecx,esp
  41ed70:	or     ecx,DWORD PTR [eax-0x12]
  41ed73:	arpl   si,di
  41ed75:	(bad)  
  41ed76:	in     eax,0x7d
  41ed78:	call   0xbe6b3002
  41ed7d:	cld    
  41ed7e:	pop    ds
  41ed7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed80:	push   0x5189d71
  41ed85:	add    BYTE PTR [ebx-0x3c],bh
  41ed88:	stc    
  41ed89:	push   0xe6641ee2
  41ed8e:	fadd   QWORD PTR [ebx+0x76]
  41ed91:	adc    edi,edi
  41ed93:	xchg   ebx,ebp
  41ed95:	jle    0x41eda0
  41ed97:	xchg   esi,eax
  41ed98:	sahf   
  41ed99:	inc    eax
  41ed9a:	dec    ebx
  41ed9b:	dec    esi
  41ed9c:	sub    BYTE PTR [edi],bl
  41ed9e:	xchg   BYTE PTR [edx-0x24],al
  41eda1:	sbb    DWORD PTR [esi],eax
  41eda3:	popf   
  41eda4:	fld    DWORD PTR [edx+esi*1]
  41eda7:	jo     0x41ee0d
  41eda9:	out    0x31,al
  41edab:	inc    edx
  41edac:	adc    BYTE PTR cs:[esi-0x6d995dc4],ch
  41edb3:	retf   0xd064
  41edb6:	mov    BYTE PTR [esi],bl
  41edb8:	in     al,0x7a
  41edba:	int3   
  41edbb:	sbb    ah,BYTE PTR [ebp+0x20]
  41edbe:	push   cs
  41edbf:	inc    ebx
  41edc0:	pushf  
  41edc1:	adc    bh,bh
  41edc3:	test   bl,ch
  41edc5:	sub    BYTE PTR [ecx],0x97
  41edc8:	into   
  41edc9:	jp     0x41ed97
  41edcb:	adc    bh,BYTE PTR [ebx-0x4a]
  41edce:	lea    esi,[edx+0x70]
  41edd1:	adc    DWORD PTR [edx],edi
  41edd3:	xor    DWORD PTR [ebx],esp
  41edd5:	add    al,0x4b
  41edd7:	mov    BYTE PTR [ebx+0x7b],bh
  41edda:	les    ebx,FWORD PTR [edx]
  41eddc:	sub    eax,0xe343d183
  41ede1:	add    eax,DWORD PTR [ebx+0x2a6665c0]
  41ede7:	push   ds
  41ede8:	ins    DWORD PTR es:[edi],dx
  41ede9:	imul   eax,DWORD PTR [eax],0x29
  41edec:	mov    fs,edx
  41edee:	add    eax,DWORD PTR [esi+0x125bb71d]
  41edf4:	cmp    BYTE PTR [edx],cl
  41edf6:	cmp    DWORD PTR [edx+eax*4+0xa],esi
  41edfa:	mov    cs,ebx
  41edfc:	jp     0x41edc1
  41edfe:	sub    dl,bh
  41ee00:	retf   0x6ade
  41ee03:	dec    esi
  41ee04:	xor    eax,0x156cbe58
  41ee09:	xchg   BYTE PTR [edx-0x9353e8b],ch
  41ee0f:	pop    ecx
  41ee10:	sub    eax,0x1485e90b
  41ee15:	dec    esi
  41ee16:	rol    BYTE PTR [edx-0x75f879b1],1
  41ee1c:	inc    edx
  41ee1d:	or     dh,BYTE PTR [ebx-0x3c]
  41ee20:	xor    al,0x8d
  41ee22:	inc    esp
  41ee23:	and    bl,BYTE PTR ds:0x802da1f0
  41ee29:	icebp  
  41ee2a:	pop    esp
  41ee2b:	and    BYTE PTR [ecx+0xb],bl
  41ee2e:	jmp    0x24c560b8
  41ee33:	cs push ds
  41ee35:	sbb    ch,al
  41ee37:	ja     0x41edbb
  41ee39:	or     ch,BYTE PTR [edx+0x28]
  41ee3c:	jne    0x41ee49
  41ee3e:	jmp    0x674330c8
  41ee43:	daa    
  41ee44:	sbb    eax,0xc6ece9f2
  41ee49:	push   esi
  41ee4a:	call   0x34c730d4
  41ee4f:	add    dl,ch
  41ee51:	retf   0x7136
  41ee54:	rcl    BYTE PTR [eax-0x6e24930a],cl
  41ee5a:	bound  eax,QWORD PTR ds:[ebx]
  41ee5d:	inc    ebp
  41ee5e:	xchg   DWORD PTR [ecx],ebp
  41ee60:	sub    DWORD PTR [eax+0x1e55e964],eax
  41ee66:	sbb    cl,bh
  41ee68:	xchg   esp,eax
  41ee69:	or     BYTE PTR [edx],0x64
  41ee6c:	lds    edx,FWORD PTR [eax-0x206bffce]
  41ee72:	popa   
  41ee73:	mov    edx,ebp
  41ee75:	nop
  41ee76:	mov    eax,es
  41ee78:	retf   
  41ee79:	xor    DWORD PTR ss:[esi-0x21],0xffffff97
  41ee7e:	dec    esp
  41ee7f:	hlt    
  41ee80:	ins    BYTE PTR es:[edi],dx
  41ee81:	adc    DWORD PTR [edi],0xf848b1f7
  41ee87:	and    ecx,DWORD PTR [edi+0x298d1dfb]
  41ee8d:	sbb    eax,0x4b2c8d42
  41ee92:	pop    edx
  41ee93:	(bad)  
  41ee94:	mov    edx,0xdf401864
  41ee99:	mov    edi,0x812a0ccd
  41ee9e:	jl     0x41eea8
  41eea0:	xor    eax,0x6938eedd
  41eea5:	inc    ebx
  41eea6:	jbe    0x41eeb8
  41eea8:	rcr    ah,1
  41eeaa:	stc    
  41eeab:	mov    ebp,DWORD PTR [edx-0x52]
  41eeae:	xor    al,BYTE PTR [edi+0xa4167]
  41eeb4:	add    BYTE PTR [ebp-0x4d],cl
  41eeb7:	loop   0x41eeec
  41eeb9:	and    al,0x2d
  41eebb:	loop   0x41ee48
  41eebd:	sub    DWORD PTR [edx-0x1adc173e],ebx
  41eec3:	out    dx,eax
  41eec4:	push   esp
  41eec6:	fmul   QWORD PTR [ecx]
  41eec8:	test   DWORD PTR [edi],ebx
  41eeca:	adc    eax,DWORD PTR [ebx]
  41eecc:	or     DWORD PTR [ecx+0x4ff21a],0x4c
  41eed3:	(bad)  
  41eed4:	adc    bl,BYTE PTR [edi-0x348a7cba]
  41eeda:	jle    0x41eed3
  41eedc:	mov    edi,0x8782a5b1
  41eee1:	sti    
  41eee2:	inc    eax
  41eee3:	or     al,BYTE PTR [eax]
  41eee5:	mov    ah,0xd3
  41eee7:	stc    
  41eee8:	add    DWORD PTR [esi+0xcff6e4d],0xffffffe7
  41eeef:	cmp    BYTE PTR gs:[ecx],al
  41eef2:	loop   0x41ef00
  41eef4:	add    BYTE PTR [esi-0x3e180f2b],al
  41eefa:	sub    DWORD PTR [esi],ecx
  41eefc:	add    BYTE PTR [ecx],al
  41eefe:	xlat   BYTE PTR ds:[ebx]
  41eeff:	pop    ecx
  41ef00:	cld    
  41ef01:	xchg   ebx,eax
  41ef02:	cmp    DWORD PTR [eax+eax*2],ebx
  41ef05:	xchg   BYTE PTR [eax],dh
  41ef07:	push   ds
  41ef08:	cmc    
  41ef09:	into   
  41ef0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef0b:	mov    bl,0x15
  41ef0d:	jge    0x41ef78
  41ef0f:	sub    edi,DWORD PTR [edi-0x7ff52df4]
  41ef15:	(bad)  
  41ef17:	loopne 0x41ef25
  41ef19:	add    BYTE PTR ds:0xd500a6a,al
  41ef1f:	adc    eax,0x29816956
  41ef24:	push   cs
  41ef25:	test   dh,al
  41ef27:	jne    0x41ef27
  41ef29:	push   eax
  41ef2a:	test   eax,0xa1fe8dbc
  41ef2f:	sub    DWORD PTR [esi-0x3f],edx
  41ef32:	ja     0x41ef5e
  41ef34:	push   cs
  41ef35:	test   dh,al
  41ef37:	push   ebp
  41ef38:	out    dx,al
  41ef39:	push   esp
  41ef3a:	std    
  41ef3b:	call   0x29cc1495
  41ef40:	push   cs
  41ef41:	pop    ebp
  41ef42:	fcom   st(2)
  41ef44:	dec    edx
  41ef45:	xor    BYTE PTR [edi],bh
  41ef47:	clc    
  41ef48:	pop    ebx
  41ef49:	ss stc 
  41ef4b:	push   eax
  41ef4c:	or     eax,0x3a338600
  41ef51:	push   esi
  41ef52:	or     ebx,DWORD PTR [ecx+eax*8-0x2]
  41ef56:	push   ecx
  41ef57:	sub    ebx,ebx
  41ef59:	mov    BYTE PTR [eax-0x796fd658],al
  41ef5f:	adc    eax,0x429a88ef
  41ef64:	jae    0x41efe0
  41ef66:	(bad)  
  41ef67:	retf   0xc1a2
  41ef6a:	outs   dx,BYTE PTR ds:[esi]
  41ef6b:	mov    bl,0xbb
  41ef6d:	add    al,BYTE PTR [esi-0x41a42abe]
  41ef73:	push   edi
  41ef74:	adc    ch,bh
  41ef76:	or     ecx,0x60
  41ef79:	retf   
  41ef7a:	or     BYTE PTR [ebx],bl
  41ef7c:	in     al,0xd8
  41ef7e:	add    al,cl
  41ef80:	xchg   ebp,eax
  41ef81:	dec    ebx
  41ef82:	xchg   esp,eax
  41ef83:	ret    
  41ef84:	sbb    ebp,DWORD PTR [ecx]
  41ef86:	(bad)
  41ef89:	mov    dh,0xcc
  41ef8b:	(bad)  
  41ef8c:	pop    esp
  41ef8d:	iret   
  41ef8e:	or     eax,0x48d44246
  41ef93:	outs   dx,DWORD PTR ds:[esi]
  41ef94:	xor    dh,BYTE PTR [esi+0x7d]
  41ef97:	mov    DWORD PTR [ecx-0x1d],eax
  41ef9a:	add    eax,ebx
  41ef9c:	inc    ebx
  41ef9d:	out    dx,eax
  41ef9e:	jmp    0xbc00:0xd3944281
  41efa5:	inc    ebx
  41efa6:	add    eax,0x827a4286
  41efab:	and    eax,0xa303e341
  41efb0:	repnz dec ebp
  41efb2:	or     al,0xd
  41efb4:	(bad)  
  41efb5:	jmp    0x41efbb
  41efb7:	xchg   BYTE PTR [edx+0x14],al
  41efba:	mov    ah,0x8a
  41efbc:	repnz dec ebp
  41efbe:	cld    
  41efbf:	or     al,0xc1
  41efc1:	add    eax,DWORD PTR ds:0xb4344286
  41efc7:	jb     0x41efbb
  41efc9:	fs dec eax
  41efcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efcc:	lods   al,BYTE PTR ds:[esi]
  41efcd:	out    dx,eax
  41efce:	mov    eax,DWORD PTR [ebx]
  41efd0:	pop    ebx
  41efd1:	loop   0x41efd6
  41efd3:	xchg   BYTE PTR [edx],ch
  41efd5:	mov    BYTE PTR [ebp+0x53],bl
  41efd8:	sbb    dl,BYTE PTR [ecx+edx*4]
  41efdb:	ret    
  41efdc:	or     al,BYTE PTR ds:[ecx-0x16f59357]
  41efe3:	add    BYTE PTR [eax],cl
  41efe5:	ins    DWORD PTR es:[edi],dx
  41efe6:	idiv   bl
  41efe8:	inc    ebp
  41efe9:	sbb    bh,BYTE PTR [edi+0x67]
  41efec:	sbb    dx,si
  41efef:	jmp    0x5d1a06c9
  41eff4:	or     al,0xa2
  41eff6:	or     ebp,ecx
  41eff8:	test   DWORD PTR [edx-0x7d],esi
  41effb:	pop    edi
  41effc:	into   
  41effd:	sbb    dl,dh
  41efff:	jmp    0xe894a816
  41f004:	test   DWORD PTR [edx-0x7d],eax
  41f007:	xchg   esi,eax
  41f009:	sbb    dl,dh
  41f00b:	jmp    0xadc7e474
  41f010:	test   eax,0xf6678332
  41f015:	sbb    dl,dh
  41f017:	jmp    0xe8dcb012
  41f01c:	test   DWORD PTR [edx+0x5a],eax
  41f01f:	pusha  
  41f020:	add    al,0x9a
  41f022:	or     ebp,ecx
  41f024:	test   ecx,eax
  41f026:	nop
  41f027:	ins    DWORD PTR es:[edi],dx
  41f028:	mov    al,BYTE PTR [edx+0xa]
  41f02b:	fisubr WORD PTR [esi-0x5f]
  41f02e:	in     al,0xea
  41f030:	test   DWORD PTR [edx+0x7f],eax
  41f033:	addr16 in eax,dx
  41f035:	sbb    dl,dh
  41f037:	jmp    0x97337a14
  41f03c:	add    BYTE PTR [esi],al
  41f03e:	call   DWORD PTR ds:0x12c8ca47
  41f044:	rol    BYTE PTR [ebp+0xa],0x3e
  41f048:	add    BYTE PTR [ecx],al
  41f04a:	adc    bl,ah
  41f04c:	cli    
  41f04d:	test   DWORD PTR [edx+0xa],eax
  41f050:	lahf   
  41f051:	dec    ecx
  41f052:	gs add ch,al
  41f055:	xor    DWORD PTR [edi],edi
  41f057:	pop    ecx
  41f058:	add    bh,dh
  41f05a:	rol    edi,0xfe
  41f05d:	enter  0xc6c8,0x5f
  41f061:	in     eax,dx
  41f062:	inc    eax
  41f063:	or     dl,BYTE PTR [ebx-0x6f]
  41f066:	sub    BYTE PTR [esi],cl
  41f068:	(bad)  
  41f069:	and    BYTE PTR [ecx+0x79],dh
  41f06c:	inc    eax
  41f06d:	pop    ds
  41f06e:	mov    dl,0xb6
  41f070:	or     BYTE PTR [esi],ch
  41f072:	inc    ebp
  41f073:	or     bl,BYTE PTR [ebx-0x5c]
  41f076:	xor    ecx,DWORD PTR [ebp-0x7cb52c37]
  41f07c:	add    DWORD PTR ds:0x6c10ef3e,esi
  41f082:	mov    ecx,DWORD PTR ds:0x3893324b
  41f088:	lahf   
  41f089:	(bad)  
  41f08a:	cmp    eax,0x4311000a
  41f08f:	add    DWORD PTR [edi+0xa3e23],0x3a
  41f096:	inc    ecx
  41f097:	xchg   edx,eax
  41f098:	add    edi,0x44
  41f09b:	jbe    0x41f0a4
  41f09d:	push   esp
  41f09e:	xor    eax,0xa37939e2
  41f0a3:	out    dx,al
  41f0a4:	inc    ebx
  41f0a5:	hlt    
  41f0a6:	ret    
  41f0a7:	pop    ecx
  41f0a8:	add    DWORD PTR [edi+0xe27c44],ebx
  41f0ae:	xor    al,0x31
  41f0b0:	loop   0x41f0c4
  41f0b2:	outs   dx,DWORD PTR ds:[esi]
  41f0b3:	test   DWORD PTR ds:[edi+0xa458b],eax
  41f0ba:	outs   dx,DWORD PTR ds:[esi]
  41f0bb:	mov    ds:0xda10ffd7,eax
  41f0c0:	lock jmp FWORD PTR [edi-0x54]
  41f0c4:	cmp    eax,0x82a229c6
  41f0c9:	xchg   ebx,ecx
  41f0cb:	inc    ebx
  41f0cc:	or     al,BYTE PTR [eax]
  41f0ce:	loop   0x41f14e
  41f0d0:	jge    0x41f0d9
  41f0d2:	xchg   BYTE PTR [ecx+0x6b],bl
  41f0d5:	adc    ah,BYTE PTR [esi]
  41f0d7:	sbb    al,0xce
  41f0d9:	inc    DWORD PTR [edx]
  41f0db:	test   eax,0x2a49fede
  41f0e0:	mov    esi,0x839f58fc
  41f0e5:	pop    DWORD PTR [edi+0x31500e29]
  41f0eb:	pop    eax
  41f0ec:	imul   esi,DWORD PTR [esi+eiz*4+0x2e000e2a],0x28
  41f0f4:	inc    esp
  41f0f5:	std    
  41f0f6:	sbb    eax,ebp
  41f0f8:	inc    edx
  41f0f9:	add    al,0x96
  41f0fb:	xchg   esp,eax
  41f0fc:	(bad)  
  41f0fd:	jmp    FWORD PTR [esp+ebp*2-0x450d7747]
  41f104:	mov    esp,0xd26018a
  41f109:	add    BYTE PTR [esi-0x16bdbc27],al
  41f10f:	sub    DWORD PTR [ebp+0x30de0042],eax
  41f115:	stc    
  41f116:	jmp    0x41f18c
  41f118:	jmp    0xe253702a
  41f11d:	or     al,0x0
  41f11f:	xchg   BYTE PTR [eax],bl
  41f121:	imul   edi,edi,0xffffffc1
  41f124:	cwde   
  41f125:	mov    esp,0x3041c188
  41f12a:	stc    
  41f12b:	mov    cl,0x20
  41f12d:	mov    bh,BYTE PTR [edi-0x7380a0ce]
  41f133:	sub    cl,BYTE PTR ds:[esi]
  41f136:	add    BYTE PTR [edi-0x7c],al
  41f139:	inc    ebp
  41f13a:	jae    0x41f174
  41f13c:	mov    ss,WORD PTR [edx+0xe298753]
  41f142:	call   0xfcadd6c2
  41f147:	add    ch,cl
  41f149:	fldcw  WORD PTR [eax]
  41f14b:	add    eax,DWORD PTR [edx+0x24]
  41f14e:	or     dh,dl
  41f150:	pop    ss
  41f151:	idiv   edi
  41f153:	jbe    0x41f0d7
  41f155:	jecxz  0x41f0e3
  41f157:	add    bh,BYTE PTR [edx-0x1e]
  41f15a:	add    eax,DWORD PTR [esi+0x6d8af9cb]
  41f160:	shl    DWORD PTR [eax-0x68],0xdd
  41f164:	inc    ecx
  41f165:	jecxz  0x41f16a
  41f167:	cmp    edi,DWORD PTR [edi+0x4286031b]
  41f16d:	push   0xa33455f6
  41f172:	add    ecx,DWORD PTR [eax+0x7d]
  41f175:	pop    eax
  41f176:	add    al,BYTE PTR [eax]
  41f178:	mov    eax,0x125bd717
  41f17d:	sub    eax,0x4249f533
  41f182:	jge    0x41f14a
  41f184:	add    cl,BYTE PTR [ecx]
  41f186:	and    eax,0x65260eb6
  41f18b:	outs   dx,DWORD PTR ds:[esi]
  41f18c:	jge    0x41f159
  41f18e:	sahf   
  41f18f:	or     edx,DWORD PTR [eax+0x6f]
  41f192:	jl     0x41f16f
  41f194:	xchg   ecx,eax
  41f195:	ret    
  41f196:	and    edi,ecx
  41f198:	shl    dh,cl
  41f19a:	cld    
  41f19b:	pusha  
  41f19c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f19d:	sbb    dh,BYTE PTR [edi-0x7c]
  41f1a0:	lea    eax,[ecx-0x1d]
  41f1a3:	add    edx,DWORD PTR [esi+0x0]
  41f1a6:	lahf   
  41f1a7:	pusha  
  41f1a8:	mov    ecx,0x90728c3
  41f1ad:	jge    0x41f17e
  41f1af:	pop    edi
  41f1b0:	xchg   esp,eax
  41f1b1:	es test bl,0xa1
  41f1b5:	push   ebx
  41f1b6:	ror    DWORD PTR [ebp-0x6ce4e5ec],1
  41f1bc:	cmp    DWORD PTR [ecx-0x1d],eax
  41f1bf:	add    edx,DWORD PTR [eax]
  41f1c1:	test   al,0x7c
  41f1c3:	adc    ebp,0x43
  41f1c6:	or     ch,cl
  41f1c8:	test   ecx,ecx
  41f1ca:	push   es
  41f1cb:	jns    0x41f1ca
  41f1cd:	cmp    eax,0x804eb087
  41f1d2:	xor    ebp,DWORD PTR [edx+edx*4]
  41f1d5:	mov    gs,WORD PTR [edx]
  41f1d7:	bound  eax,QWORD PTR [ebx+0x46]
  41f1da:	lea    ebp,[eax-0x2cf0a800]
  41f1e0:	loop   0x41f1a7
  41f1e2:	(bad)  
  41f1e3:	retf   
  41f1e4:	adc    edi,DWORD PTR [esi]
  41f1e6:	ret    
  41f1e7:	retf   0xf5ed
  41f1ea:	outs   dx,BYTE PTR ds:[esi]
  41f1eb:	icebp  
  41f1ec:	aam    0x91
  41f1ee:	sub    al,0x4a
  41f1f0:	jmp    0x6440f3f9
  41f1f5:	retf   0x2b90
  41f1f8:	bound  eax,QWORD PTR ds:0x85e90b72
  41f1fe:	retf   
  41f1ff:	ss jns 0x41f19c
  41f202:	imul   DWORD PTR [esi+0x3fca613f]
  41f208:	xor    DWORD PTR ds:0x85e856c3,ecx
  41f20e:	inc    edx
  41f20f:	(bad)  
  41f210:	int    0xfd
  41f212:	adc    eax,0x1440a4c8
  41f217:	test   DWORD PTR [eax],ebx
  41f219:	sar    BYTE PTR [edi+esi*2+0x52d36d11],0xe8
  41f221:	test   DWORD PTR [edx+0x7c],eax
  41f224:	pop    esi
  41f225:	or     bl,BYTE PTR [ecx+0x3ed1e9f1]
  41f22b:	test   edx,esi
  41f22d:	sbb    eax,0x48e6ef35
  41f232:	push   ss
  41f233:	js     0x41f20a
  41f235:	inc    eax
  41f236:	xor    dl,bh
  41f238:	sti    
  41f239:	lds    edx,FWORD PTR ds:0x76312484
  41f23f:	push   eax
  41f240:	add    BYTE PTR [eax],al
  41f242:	(bad)  
  41f243:	or     DWORD PTR ds:0xe5c99a00,0xffffff83
  41f24a:	inc    ebx
  41f24b:	pop    ebp
  41f24c:	pop    ebx
  41f24d:	push   esi
  41f24e:	cwde   
  41f24f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f250:	push   esp
  41f251:	icebp  
  41f252:	and    DWORD PTR [edx+eax*4-0x8],esi
  41f256:	(bad)  
  41f257:	and    ah,dl
  41f259:	test   eax,esi
  41f25b:	stc    
  41f25c:	push   es
  41f25d:	xor    bl,BYTE PTR [edi]
  41f25f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f260:	mov    WORD PTR [eax],es
  41f262:	pop    edi
  41f263:	inc    ecx
  41f264:	mov    edi,DWORD PTR [ebp+0x5f]
  41f267:	inc    ecx
  41f268:	sbb    DWORD PTR [edi+0x2b],0x7f
  41f26c:	dec    esp
  41f26d:	call   FWORD PTR [edi]
  41f26f:	cli    
  41f270:	dec    DWORD PTR [edx+ebx*8-0x301616ac]
  41f277:	inc    ecx
  41f278:	or     cl,BYTE PTR [ebp+0x458854ea]
  41f27e:	pcmpeqb mm7,QWORD PTR [eax+edx*1-0x6c]
  41f283:	cli    
  41f284:	or     eax,ebp
  41f286:	fstp   TBYTE PTR [edx+ecx*1]
  41f289:	add    BYTE PTR [edx+0x58],ch
  41f28c:	outs   dx,DWORD PTR ds:[esi]
  41f28d:	dec    ebx
  41f28e:	pop    esp
  41f28f:	sub    bh,dl
  41f291:	add    BYTE PTR [esi+0x2],dh
  41f294:	dec    BYTE PTR [ebx-0x7b2c018]
  41f29a:	add    eax,0xe375ef41
  41f29f:	jae    0x41f31d
  41f2a1:	sbb    BYTE PTR [eax+0xff1dfa],al
  41f2a7:	cmp    dl,BYTE PTR [ecx]
  41f2a9:	out    dx,eax
  41f2aa:	jne    0x41f24f
  41f2ac:	test   al,0xc5
  41f2ae:	sbb    DWORD PTR [esi+0x1af08340],ebx
  41f2b4:	ins    BYTE PTR es:[edi],dx
  41f2b5:	jge    0x41f2d1
  41f2b7:	adc    al,0xf5
  41f2b9:	or     DWORD PTR [ebx+0x445ecd86],ecx
  41f2bf:	nop
  41f2c0:	add    edx,DWORD PTR [eax-0x7d]
  41f2c3:	(bad)  
  41f2c4:	push   esi
  41f2c5:	add    al,dh
  41f2c7:	retf   
  41f2c8:	aam    0xd
  41f2ca:	call   0xfc92806e
  41f2cf:	std    
  41f2d0:	push   si
  41f2d2:	add    bl,0xe1
  41f2d5:	push   cs
  41f2d6:	std    
  41f2d7:	shr    DWORD PTR [ebp-0xaa64427],cl
  41f2dd:	and    ecx,DWORD PTR gs:[edx-0x3c]
  41f2e1:	dec    edi
  41f2e2:	push   esp
  41f2e3:	pop    esi
  41f2e4:	sbb    al,0x4a
  41f2e6:	std    
  41f2e7:	inc    ecx
  41f2e8:	nop
  41f2e9:	leave  
  41f2ea:	cld    
  41f2eb:	fldcw  WORD PTR [ebx]
  41f2ed:	mov    bl,0xc6
  41f2ef:	inc    esp
  41f2f0:	repnz or eax,0x8b6dfd53
  41f2f6:	jmp    0x41f28a
  41f2f8:	test   al,0xe9
  41f2fa:	sti    
  41f2fb:	xchg   al,bl
  41f2fd:	mov    dh,0x88
  41f2ff:	xchg   ebx,eax
  41f300:	and    DWORD PTR [ebx-0x655b0229],eax
  41f306:	inc    BYTE PTR [ecx]
  41f308:	sub    al,BYTE PTR [ebp-0x5f0dffbe]
  41f30e:	retf   
  41f30f:	pop    es
  41f310:	(bad)  
  41f311:	ficom  WORD PTR [ebp-0x19]
  41f314:	hlt    
  41f315:	pop    esi
  41f316:	dec    edi
  41f317:	cld    
  41f318:	or     ch,BYTE PTR [edx-0x2e]
  41f31b:	push   ebx
  41f31c:	fnstenv [esi+0x6d938901]
  41f322:	cld    
  41f323:	aas    
  41f324:	xchg   BYTE PTR [edi+0xd4b8b0d],ch
  41f32a:	mov    esi,0x370c8469
  41f32f:	sub    BYTE PTR [esi+0x530d92a],0x43
  41f336:	ins    BYTE PTR es:[edi],dx
  41f337:	adc    BYTE PTR [esi+0x4688ee8d],al
  41f33d:	xchg   edx,eax
  41f33e:	fcom   st(6)
  41f340:	jge    0x41f309
  41f342:	and    ecx,DWORD PTR [ecx+eax*1]
  41f345:	jle    0x41f312
  41f347:	jmp    0x5868b9cd
  41f34c:	leave  
  41f34d:	test   al,0xe5
  41f34f:	pop    esp
  41f350:	pop    edx
  41f351:	push   ebp
  41f352:	in     eax,0x2
  41f354:	xchg   BYTE PTR [edx+0xe],al
  41f357:	push   es
  41f358:	pop    es
  41f359:	test   DWORD PTR [edi-0x2bb791a4],ecx
  41f35f:	dec    edx
  41f360:	nop
  41f361:	push   edi
  41f362:	mov    ds:0x36c986d6,al
  41f367:	pusha  
  41f368:	(bad)  
  41f369:	(bad)  
  41f36a:	push   cs
  41f36b:	or     al,0x2e
  41f36d:	xor    al,0x79
  41f36f:	pop    esp
  41f370:	add    BYTE PTR [edx],dh
  41f372:	(bad)  
  41f373:	es pusha 
  41f375:	retf   0x3a77
  41f378:	inc    ecx
  41f379:	mov    DWORD PTR [edx-0x4a],eax
  41f37c:	mov    BYTE PTR ds:0xb6c347bf,ch
  41f382:	ins    BYTE PTR es:[edi],dx
  41f383:	ins    BYTE PTR es:[edi],dx
  41f384:	push   ebx
  41f385:	(bad)  
  41f386:	jnp    0x41f35b
  41f388:	push   esp
  41f389:	fnstenv [esi]
  41f38b:	and    ecx,DWORD PTR [esi+0x43042c4b]
  41f391:	pop    edx
  41f392:	mov    edi,0x2a39fb23
  41f397:	je     0x41f3ee
  41f399:	jecxz  0x41f3ad
  41f39b:	push   0xd53b5543
  41f3a0:	inc    ebx
  41f3a1:	call   0x8645d654
  41f3a6:	lds    eax,FWORD PTR [esi+0x1bfc0e43]
  41f3ac:	jge    0x41f360
  41f3ae:	adc    ecx,DWORD PTR [ebx]
  41f3b0:	imul   BYTE PTR [edx-0x7af6903f]
  41f3b6:	ficomp DWORD PTR [edx]
  41f3b8:	push   cs
  41f3b9:	mov    al,BYTE PTR [edx-0x4d]
  41f3bc:	sbb    DWORD PTR [edi+0x7e5df212],esi
  41f3c2:	pushf  
  41f3c3:	xor    esp,DWORD PTR [edx+eiz*1]
  41f3c6:	xchg   ecx,eax
  41f3c7:	ror    BYTE PTR [edi-0x5d],cl
  41f3ca:	jge    0x41f3b6
  41f3cc:	ss mov al,0xa7
  41f3cf:	lea    esi,[esi+edx*8]
  41f3d2:	adc    DWORD PTR [esi-0x23],edi
  41f3d5:	add    BYTE PTR [edi+0x59],ah
  41f3d8:	inc    edi
  41f3d9:	popf   
  41f3da:	cmp    BYTE PTR ds:0x164ee069,al
  41f3e0:	jp     0x41f438
  41f3e2:	add    DWORD PTR [ebp-0x3dfaa3fe],ecx
  41f3e8:	or     ebp,ecx
  41f3ea:	test   DWORD PTR [edx-0x38],esi
  41f3ed:	and    al,0xd9
  41f3ef:	adc    eax,ecx
  41f3f1:	sub    al,0xd3
  41f3f3:	adc    cl,dh
  41f3f5:	aam    0x3d
  41f3f7:	inc    ecx
  41f3f8:	dec    edx
  41f3f9:	jmp    0x7443c604
  41f3fe:	inc    edi
  41f3ff:	or     al,0xe3
  41f401:	call   0xc44a:0x62f20f9d
  41f408:	aad    0xf6
  41f40a:	add    edx,0xbd85e90a
  41f410:	inc    edi
  41f411:	and    DWORD PTR [edx],edi
  41f413:	mov    ebx,0x163041fd
  41f418:	icebp  
  41f419:	es pop es
  41f41b:	shl    BYTE PTR [edx-0x23],cl
  41f41e:	or     BYTE PTR [edx],ah
  41f420:	popw   ds
  41f422:	jb     0x41f467
  41f424:	cmp    eax,0xb0baf69
  41f429:	add    BYTE PTR [edx],bh
  41f42b:	jmp    0x41f3de
  41f42d:	je     0x41f40a
  41f42f:	pop    ds
  41f430:	repnz push edx
  41f432:	xchg   DWORD PTR [ebx-0x62670105],ebp
  41f438:	clc    
  41f439:	fiadd  WORD PTR [eax]
  41f43b:	test   eax,0x16cb826c
  41f440:	add    ecx,DWORD PTR [esi]
  41f442:	call   0x31911a
  41f447:	daa    
  41f448:	add    dh,bl
  41f44a:	jmp    0x41f4c0
  41f44c:	pop    ds
  41f44d:	icebp  
  41f44e:	push   edx
  41f44f:	push   edi
  41f450:	out    0xfb,al
  41f452:	(bad)  
  41f453:	cmp    BYTE PTR [ebp-0x151b06b4],bh
  41f459:	or     ebx,ebp
  41f45b:	xor    al,0xc5
  41f45d:	je     0x41f459
  41f45f:	outs   dx,DWORD PTR ds:[esi]
  41f460:	add    DWORD PTR ds:0x3c427483,ebp
  41f466:	jge    0x41f4c0
  41f468:	pop    ds
  41f469:	icebp  
  41f46a:	mov    WORD PTR [edx-0x7a],?
  41f46d:	or     bl,0x17
  41f470:	push   eax
  41f471:	loopne 0x41f471
  41f473:	mov    eax,0x4874b191
  41f478:	rol    dl,0xe8
  41f47b:	or     ebx,DWORD PTR [edi+ebp*8+0x7d85a3ff]
  41f482:	add    al,0x61
  41f484:	add    dh,bl
  41f486:	add    DWORD PTR [eax-0x52801dc8],edi
  41f48c:	imul   ebp,esi,0x53
  41f48f:	push   edi
  41f490:	out    dx,al
  41f491:	retf   
  41f492:	(bad)  
  41f493:	mov    eax,0xdffa74c5
  41f498:	add    BYTE PTR ds:0xf095708d,al
  41f49e:	inc    DWORD PTR [eax]
  41f4a0:	out    dx,eax
  41f4a1:	aam    0xee
  41f4a3:	adc    eax,0x3ff72b86
  41f4a8:	xchg   BYTE PTR [ebx-0x7079072e],bl
  41f4ae:	or     al,0xb0
  41f4b0:	xchg   DWORD PTR [edx],esi
  41f4b2:	jle    0x41f4b3
  41f4b4:	mov    cl,0x1a
  41f4b6:	mov    ?,WORD PTR [edx-0x51]
  41f4b9:	sbb    al,BYTE PTR ds:0x5428ab84
  41f4bf:	cld    
  41f4c0:	or     ebp,DWORD PTR [eax+0x1a91fede]
  41f4c6:	mov    esi,0x53234386
  41f4cb:	adc    dh,BYTE PTR [edx-0x14]
  41f4ce:	int    0xff
  41f4d0:	or     ah,BYTE PTR [edi+0x3e]
  41f4d3:	mov    dl,BYTE PTR [ecx]
  41f4d5:	jp     0x41f4e4
  41f4d7:	add    BYTE PTR [esi+0x6ef07f29],al
  41f4dd:	cdq    
  41f4de:	push   edi
  41f4df:	std    
  41f4e0:	pop    ecx
  41f4e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4e2:	inc    esi
  41f4e3:	ja     0x41f48d
  41f4e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4e6:	push   esi
  41f4e7:	push   0x3106f250
  41f4ec:	lods   al,BYTE PTR ds:[esi]
  41f4ed:	sbb    DWORD PTR [edi+0x5ed9bb8a],esi
  41f4f3:	push   DWORD PTR [edi]
  41f4f5:	cwde   
  41f4f6:	push   ebx
  41f4f7:	xchg   ebx,eax
  41f4f9:	xchg   esp,eax
  41f4fa:	pop    esi
  41f4fb:	ss inc eax
  41f4fd:	test   al,0x53
  41f4ff:	xchg   al,al
  41f501:	and    eax,0x1e00c07f
  41f506:	aaa    
  41f507:	push   esi
  41f508:	std    
  41f509:	or     DWORD PTR [ebp-0x697895e2],eax
  41f50f:	mov    cl,0xbf
  41f511:	or     eax,0xf7395e55
  41f516:	push   edi
  41f517:	push   ebx
  41f518:	xchg   DWORD PTR [ebx+0x54],eax
  41f51b:	mov    bh,BYTE PTR [edi-0x7d11bda6]
  41f521:	sbb    ah,BYTE PTR [edi-0x4d79fc1e]
  41f527:	loop   0x41f52c
  41f529:	xchg   BYTE PTR [eax-0x4439eb16],dl
  41f52f:	cmp    al,0x6c
  41f531:	out    dx,al
  41f532:	adc    al,0xf2
  41f534:	pop    eax
  41f535:	mov    dl,0x95
  41f537:	jmp    0x41f591
  41f539:	xchg   esp,eax
  41f53a:	adc    dl,dh
  41f53c:	ret    
  41f53d:	mov    eax,ds:0x3a5d1eb9
  41f542:	jo     0x41f590
  41f544:	dec    ebx
  41f545:	mov    DWORD PTR [esi-0x1d],0x651efeae
  41f54c:	addr16 leave 
  41f54e:	js     0x41f5c6
  41f550:	test   cl,ah
  41f552:	inc    ecx
  41f553:	jecxz  0x41f558
  41f555:	(bad)  [edx-0x5f]
  41f558:	mov    esi,0xbe6a426a
  41f55d:	jno    0x41f56e
  41f55f:	out    dx,eax
  41f560:	addr16 ja 0x41f4e5
  41f563:	jecxz  0x41f579
  41f565:	inc    esi
  41f566:	mov    ecx,0x90005c1e
  41f56b:	ret    
  41f56c:	pop    es
  41f56d:	add    eax,DWORD PTR [esi+0x3889f842]
  41f573:	inc    edx
  41f574:	jecxz  0x41f579
  41f576:	or     DWORD PTR [ebp-0x5e117391],eax
  41f57c:	loop   0x41f581
  41f57e:	xchg   BYTE PTR [ebx-0x1a],al
  41f581:	dec    edi
  41f582:	push   cs
  41f583:	xchg   ebp,eax
  41f584:	sti    
  41f585:	xchg   dl,cl
  41f587:	cmp    dh,BYTE PTR [ebx+0x4214246b]
  41f58d:	pop    eax
  41f58e:	add    al,0x2
  41f590:	stc    
  41f591:	mov    cl,BYTE PTR [edx+eax*2]
  41f594:	jecxz  0x41f599
  41f596:	clc    
  41f597:	test   BYTE PTR [edx],cl
  41f599:	in     eax,0x84
  41f59b:	xchg   ebx,eax
  41f59c:	(bad)  
  41f59d:	popa   
  41f59e:	inc    edi
  41f59f:	ret    0xed72
  41f5a2:	jae    0x41f5e1
  41f5a4:	jg     0x41f606
  41f5a6:	test   DWORD PTR [edx+0xa],eax
  41f5a9:	pop    ds
  41f5aa:	or     BYTE PTR [ebx],bh
  41f5ac:	or     al,0x95
  41f5ae:	loope  0x41f548
  41f5b0:	xor    dh,BYTE PTR [eax+edi*8-0x2a]
  41f5b4:	pop    ecx
  41f5b5:	cdq    
  41f5b6:	dec    esi
  41f5b7:	xor    al,0x3a
  41f5b9:	ffreep st(5)
  41f5bb:	push   cs
  41f5bc:	test   DWORD PTR [ebp+edi*1+0xef5c6c2],esp
  41f5c3:	mov    edx,0x4285e86a
  41f5c8:	loop   0x41f5c6
  41f5ca:	aaa    
  41f5cb:	or     eax,0x5700cef2
  41f5d0:	push   ds
  41f5d1:	repnz xor al,0xda
  41f5d4:	ret    0xb55f
  41f5d7:	xchg   edx,eax
  41f5d8:	nop/reserved BYTE PTR [ecx+0x620a4e74]
  41f5df:	or     eax,0x85e90b8e
  41f5e4:	cwde   
  41f5e5:	or     ch,BYTE PTR [edi+eax*2-0x2a]
  41f5e9:	pop    edx
  41f5ea:	fcmovb st,st(5)
  41f5ec:	and    eax,0x428af97f
  41f5f1:	xchg   DWORD PTR [ecx-0x179bcdb0],ebp
  41f5f7:	inc    BYTE PTR [eax+0x25c062b2]
  41f5fd:	pop    eax
  41f5fe:	jns    0x41f5b8
  41f600:	push   cs
  41f601:	xchg   DWORD PTR [ecx],ebp
  41f603:	ss inc edx
  41f605:	enter  0xb8a4,0xc
  41f609:	icebp  
  41f60a:	fdiv   QWORD PTR [ebp-0xbc2e7f2]
  41f610:	dec    ebp
  41f611:	or     al,BYTE PTR [eax]
  41f613:	push   esp
  41f614:	add    eax,0x4d740064
  41f619:	or     dh,0x47
  41f61c:	cmp    eax,0xc2b0fefa
  41f621:	mov    cl,0x74
  41f623:	mov    ah,0x98
  41f625:	sub    al,0x8b
  41f627:	and    bh,BYTE PTR [edx]
  41f629:	xor    eax,0x4
  41f62c:	cmp    BYTE PTR [ecx],0x3
  41f62f:	ficomp WORD PTR [ebx]
  41f631:	repnz push eax
  41f633:	add    BYTE PTR [edi-0x4f011e7d],dl
  41f639:	lea    esi,[ecx+0x4c4f9b74]
  41f63f:	jmp    FWORD PTR [esi+0x66046eb8]
  41f645:	hlt    
  41f646:	or     eax,0x6fbea873
  41f64b:	add    al,0xd9
  41f64d:	add    ch,bh
  41f64f:	add    esp,esp
  41f651:	add    bh,dl
  41f653:	(bad)  
  41f654:	hlt    
  41f655:	and    ecx,esi
  41f657:	call   FWORD PTR [edi-0x67]
  41f65a:	xchg   cl,dh
  41f65c:	xor    DWORD PTR [esi+ebp*8+0x4d],esi
  41f660:	pop    ss
  41f661:	shl    BYTE PTR [esp+esi*8+0x67],0x74
  41f666:	dec    esp
  41f667:	clc    
  41f668:	aam    0x2
  41f66a:	cli    
  41f66b:	sbb    DWORD PTR [edx-0x53c4c68e],0xffffffed
  41f672:	lock jmp FWORD PTR [edi]
  41f675:	inc    esp
  41f676:	jle    0x41f67a
  41f678:	mov    al,0x74
  41f67a:	out    dx,al
  41f67b:	jmp    FWORD PTR [edx]
  41f67d:	jno    0x41f66d
  41f67f:	adc    eax,0x32139f
  41f684:	scas   eax,DWORD PTR es:[edi]
  41f685:	jmp    0x4583:0x393b00ee
  41f68c:	xchg   BYTE PTR [ebx],ah
  41f68e:	mov    ax,0x7cf0
  41f692:	pop    eax
  41f693:	mov    DWORD PTR [ebx-0x7c],eax
  41f696:	mov    eax,0x58bf005d
  41f69b:	add    eax,0x591b5c00
  41f6a0:	scas   eax,DWORD PTR es:[edi]
  41f6a1:	adc    bl,BYTE PTR [edx]
  41f6a3:	push   cs
  41f6a4:	add    cl,bl
  41f6a6:	or     eax,0x1b4610fe
  41f6ab:	inc    ecx
  41f6ac:	xlat   BYTE PTR ds:[ebx]
  41f6ad:	ins    DWORD PTR es:[edi],dx
  41f6ae:	pop    ebx
  41f6af:	inc    eax
  41f6b0:	xlat   BYTE PTR ds:[ebx]
  41f6b1:	(bad)
  41f6b4:	std    
  41f6b5:	push   es
  41f6b6:	test   DWORD PTR [ebp+0xe1ab1fe],esp
  41f6bc:	jbe    0x41f726
  41f6be:	and    al,0x80
  41f6c0:	test   edi,ebp
  41f6c2:	sbb    DWORD PTR [esi],ecx
  41f6c4:	add    BYTE PTR [ecx-0x78587753],cl
  41f6ca:	sbb    ecx,DWORD PTR [esi]
  41f6cc:	add    ecx,eax
  41f6ce:	daa    
  41f6cf:	cmp    al,0xf4
  41f6d1:	ja     0x41f653
  41f6d3:	cli    
  41f6d4:	cld    
  41f6d5:	repnz cmp eax,0xf6546902
  41f6db:	mov    BYTE PTR [ebx+0xdbfb4],al
  41f6e1:	xchg   BYTE PTR [ecx],ch
  41f6e3:	push   edi
  41f6e4:	adc    bl,BYTE PTR [edx+0x4ffce0b]
  41f6ea:	out    0x2,al
  41f6ec:	add    DWORD PTR [esi+0x2e],0x2a
  41f6f0:	or     eax,0xfe9ea3f8
  41f6f5:	cmp    DWORD PTR [edx],ebx
  41f6f7:	scas   eax,DWORD PTR es:[edi]
  41f6f8:	cmp    BYTE PTR [esi],ch
  41f6fa:	or     BYTE PTR [ecx+ecx*4+0x0],cl
  41f6fe:	adc    BYTE PTR [edx-0x6679fff3],al
  41f704:	push   esp
  41f705:	xor    DWORD PTR [ebp-0x27fb0dbe],edx
  41f70b:	clc    
  41f70c:	push   ecx
  41f70d:	inc    edx
  41f70e:	add    DWORD PTR [ebp+0x4286038b],esi
  41f714:	dec    esp
  41f715:	div    BYTE PTR [edi-0x3f1a2fe]
  41f71b:	les    ebx,FWORD PTR [edx-0x17bd79fd]
  41f721:	(bad)  
  41f722:	leave  
  41f723:	or     al,0x24
  41f725:	add    eax,0x8df90310
  41f72a:	iret   
  41f72b:	test   eax,0xb5015518
  41f730:	dec    edx
  41f731:	add    eax,DWORD PTR [esi-0x6ab573be]
  41f737:	cwde   
  41f738:	iret   
  41f739:	push   esp
  41f73a:	xor    eax,0x586df66
  41f73f:	push   edx
  41f740:	dec    ebp
  41f741:	add    eax,DWORD PTR [esi+0x74549342]
  41f747:	push   edx
  41f748:	icebp  
  41f749:	ret    
  41f74a:	xchg   ecx,eax
  41f74b:	shl    BYTE PTR [edi+0x3841d607],0x42
  41f752:	test   DWORD PTR [edx-0x65],eax
  41f755:	icebp  
  41f756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f757:	dec    eax
  41f758:	test   DWORD PTR [eax-0x2c],eax
  41f75b:	mov    bh,0xbf
  41f75d:	and    BYTE PTR [ebp+0xa],0x63
  41f761:	add    BYTE PTR [di+0x43],bh
  41f765:	jecxz  0x41f76a
  41f767:	mov    bh,0x74
  41f769:	xor    ah,ch
  41f76b:	stc    
  41f76c:	inc    edi
  41f76d:	jecxz  0x41f772
  41f76f:	dec    DWORD PTR [eax]
  41f771:	cdq    
  41f772:	out    dx,al
  41f773:	dec    ecx
  41f774:	xor    BYTE PTR [ebx],ah
  41f776:	add    al,0xd
  41f778:	xchg   esi,eax
  41f779:	mov    edi,0x4a6029b3
  41f77e:	add    eax,DWORD PTR [esi-0x2e43f549]
  41f784:	xor    DWORD PTR [edx-0x17],ecx
  41f787:	add    BYTE PTR [edi+0x42853926],bh
  41f78d:	or     bh,BYTE PTR [ecx-0x72720a4e]
  41f793:	mov    eax,ds:0x85e90ade
  41f798:	inc    edx
  41f799:	fs jmp 0x297f037e
  41f79f:	add    BYTE PTR [edi+0x42857126],ah
  41f7a5:	or     ah,BYTE PTR [eax-0xf]
  41f7a8:	pop    esi
  41f7a9:	mov    edx,0xe24285e9
  41f7ae:	adc    eax,0x83f20ab0
  41f7b3:	test   DWORD PTR [eax-0x47ba25f4],ebx
  41f7b9:	mov    cs,ebp
  41f7bb:	cmp    eax,0x1de9f20b
  41f7c0:	and    DWORD PTR [eax-0x17],esi
  41f7c3:	test   DWORD PTR [edi-0x2aff3aba],esi
  41f7c9:	ret    
  41f7ca:	xchg   BYTE PTR ds:0xe9f20ade,cl
  41f7d0:	or     bh,BYTE PTR [edi+0x26]
  41f7d3:	std    
  41f7d4:	push   es
  41f7d5:	xchg   BYTE PTR [esi],ah
  41f7d7:	icebp  
  41f7d8:	xor    eax,0x1e0daec1
  41f7dd:	or     dh,dl
  41f7df:	jmp    0xdd6885ce
  41f7e4:	mov    ah,0xef
  41f7e6:	test   esp,esi
  41f7e8:	jno    0x41f81a
  41f7ea:	dec    edx
  41f7eb:	jmp    0xc27f3a23
  41f7f0:	pop    es
  41f7f1:	xchg   BYTE PTR [esi],ah
  41f7f3:	(bad)  
  41f7f5:	jns    0x41f7e8
  41f7f7:	mov    bh,0x1
  41f7f9:	push   es
  41f7fa:	(bad)  
  41f7fb:	call   DWORD PTR [ebp+0x4344850e]
  41f801:	cmp    bl,BYTE PTR [ebx+0x50]
  41f804:	cwde   
  41f805:	dec    esp
  41f806:	mov    al,ah
  41f808:	cmp    edx,ecx
  41f80a:	test   BYTE PTR [ebx+eax*4+0xa],al
  41f80e:	mov    DWORD PTR [ebx+eax*4+0x2],ebx
  41f812:	mov    DWORD PTR [ebx+edx*4-0x32],ebx
  41f816:	jmp    0xeeb6c8f1
  41f81b:	mov    esp,DWORD PTR [eax+0x5724bdc3]
  41f821:	or     al,BYTE PTR ds:[eax]
  41f824:	inc    edi
  41f825:	add    DWORD PTR [esi],0xffffffff
  41f828:	test   al,0xc3
  41f82a:	lea    esp,[eax+eax*1]
  41f82d:	aas    
  41f82e:	or     al,BYTE PTR ds:[eax]
  41f831:	push   esi
  41f832:	mov    ebp,0x45af0171
  41f837:	test   DWORD PTR [ebx+eax*8+0x15],eax
  41f83b:	mov    DWORD PTR [edi+0xa3f23],eax
  41f841:	xor    al,0x7c
  41f843:	push   esi
  41f844:	mov    DWORD PTR [eax],esi
  41f846:	xchg   al,dh
  41f848:	jmp    FWORD PTR [edi-0x570f7a93]
  41f84e:	je     0x41f8b3
  41f850:	or     BYTE PTR [edi+0x58feafa6],dh
  41f856:	cmp    bl,cl
  41f858:	je     0x41f8b4
  41f85a:	jl     0x41f84d
  41f85c:	lahf   
  41f85d:	mov    ecx,0xc788f1fe
  41f862:	cmp    al,BYTE PTR [ebx+0x3b3f44f0]
  41f868:	idiv   BYTE PTR [edx-0x8afd1ff]
  41f86e:	cld    
  41f86f:	push   esp
  41f870:	add    BYTE PTR [edi-0x3f],bl
  41f873:	mov    cl,0x75
  41f875:	xchg   BYTE PTR [ecx+esi*2],ah
  41f878:	les    ebp,FWORD PTR [esi]
  41f87a:	add    BYTE PTR [esp+edi*8+0x31],bl
  41f87e:	xchg   edi,eax
  41f87f:	dec    ebp
  41f880:	jb     0x41f8ba
  41f882:	xor    esp,esi
  41f884:	jmp    0x8afb140f
  41f889:	add    ebx,edi
  41f88b:	push   es
  41f88c:	add    BYTE PTR [esi+0xb60ccb],al
  41f892:	add    DWORD PTR [ebx+0x7],esp
  41f895:	add    BYTE PTR [esi+0x32125ccb],al
  41f89b:	or     eax,0x8304ffce
  41f8a0:	pop    esp
  41f8a1:	jae    0x41f837
  41f8a3:	push   es
  41f8a4:	or     bh,bh
  41f8a6:	loope  0x41f8c2
  41f8a8:	fimul  DWORD PTR [eax]
  41f8aa:	mov    DWORD PTR [ecx+0x1b87378c],edx
  41f8b0:	push   cs
  41f8b1:	cmp    edi,eax
  41f8b3:	lods   al,BYTE PTR ds:[esi]
  41f8b4:	not    BYTE PTR [esi+ebp*4-0x4]
  41f8b8:	pop    ebp
  41f8b9:	cld    
  41f8ba:	mov    ecx,0x5623c965
  41f8bf:	xor    edx,DWORD PTR [eax]
  41f8c1:	mov    eax,0xba511b86
  41f8c6:	or     eax,0x871f849f
  41f8cb:	sbb    ecx,DWORD PTR [esi]
  41f8cd:	cmp    DWORD PTR [ecx],eax
  41f8cf:	(bad)  
  41f8d0:	or     eax,0x8a188600
  41f8d5:	sub    eax,0x890e1987
  41f8da:	add    DWORD PTR [esi+0xd],edx
  41f8dd:	add    BYTE PTR [esi+0x7b722e44],al
  41f8e3:	inc    esp
  41f8e4:	inc    edi
  41f8e5:	jae    0x41f876
  41f8e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8e8:	inc    ebx
  41f8e9:	out    0xe1,eax
  41f8eb:	int3   
  41f8ec:	pop    ebx
  41f8ed:	cld    
  41f8ee:	pop    ebp
  41f8ef:	inc    ebx
  41f8f0:	je     0x41f96e
  41f8f2:	lods   eax,DWORD PTR ds:[esi]
  41f8f3:	pop    esi
  41f8f4:	fild   WORD PTR [eax]
  41f8f6:	add    al,bh
  41f8f8:	jle    0x41f8b9
  41f8fa:	dec    DWORD PTR [esi]
  41f8fc:	mov    edi,0x830fc68
  41f901:	in     al,0xc
  41f903:	inc    edi
  41f904:	(bad)  
  41f905:	out    0xa,al
  41f907:	into   
  41f908:	cmp    ch,bh
  41f90a:	repz sbb edi,DWORD PTR [edi-0x39]
  41f90e:	call   DWORD PTR [ecx-0x7d00007a]
  41f914:	xchg   esp,eax
  41f915:	inc    ebx
  41f916:	pop    ebx
  41f917:	out    0x42,al
  41f919:	jecxz  0x41f91e
  41f91b:	mov    edx,eax
  41f91d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f91e:	daa    
  41f91f:	cmp    BYTE PTR [ebx+0x4181896f],0xe3
  41f926:	add    ebx,DWORD PTR [edi-0x357816ed]
  41f92c:	inc    edx
  41f92d:	jecxz  0x41f932
  41f92f:	std    
  41f930:	jle    0x41f8f1
  41f932:	xlat   BYTE PTR ds:[ebx]
  41f933:	cmp    DWORD PTR [edi],eax
  41f935:	call   0x9450:0xdf90c2fb
  41f93c:	and    dh,bh
  41f93e:	ret    
  41f93f:	mov    cl,0xbe
  41f941:	and    eax,DWORD PTR [ecx]
  41f943:	add    eax,0x8603e3da
  41f948:	adc    BYTE PTR [eax+0x773a1227],ah
  41f94e:	sbb    al,0x59
  41f950:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f951:	inc    DWORD PTR [edi+0xe40789]
  41f957:	adc    eax,0x451e02
  41f95c:	mov    bh,BYTE PTR [ebp+0x42860373]
  41f962:	fdiv   st(7),st
  41f964:	mov    ecx,0x608368bb
  41f969:	pop    es
  41f96a:	or     ebp,ecx
  41f96c:	mov    ebp,0x85e7fec1
  41f971:	mov    ecx,0x70ad91c0
  41f976:	icebp  
  41f977:	sahf   
  41f978:	xchg   edx,eax
  41f979:	add    DWORD PTR [eax-0x80],edi
  41f97c:	fild   WORD PTR [ebx-0x717aeada]
  41f982:	pop    eax
  41f983:	rcr    cl,0x62
  41f986:	jb     0x41f976
  41f988:	cwde   
  41f989:	(bad)  
  41f98a:	xor    al,0xaa
  41f98c:	xor    BYTE PTR [ebp+eax*4+0x7b72de7],ah
  41f993:	jmp    0x5c0b51d
  41f998:	jbe    0x41f9a2
  41f99a:	bnd jmp 0x5c0b5d4
  41f9a0:	stos   BYTE PTR es:[edi],al
  41f9a1:	pop    es
  41f9a2:	bnd jmp 0x3f02b3dc
  41f9a8:	adc    eax,0xb72a353f
  41f9ad:	pop    ecx
  41f9ae:	jg     0x41fa0d
  41f9b0:	test   eax,0x85e90baa
  41f9b5:	ja     0x41fa36
  41f9b7:	ins    DWORD PTR es:[edi],dx
  41f9b8:	imul   esp,DWORD PTR [esi],0x7785e90b
  41f9be:	loop   0x41f990
  41f9c0:	add    BYTE PTR [edx],bl
  41f9c2:	add    eax,0x4a5572f2
  41f9c7:	std    
  41f9c8:	jne    0x41f95f
  41f9ca:	mov    ecx,0x1f4e62d0
  41f9cf:	ins    DWORD PTR es:[edi],dx
  41f9d0:	cmc    
  41f9d1:	inc    ecx
  41f9d2:	push   es
  41f9d3:	jecxz  0x41f9ee
  41f9d5:	out    dx,eax
  41f9d6:	add    al,0xf2
  41f9d8:	sbb    ch,BYTE PTR [ebp+0x5e0d470f]
  41f9de:	inc    esp
  41f9df:	add    DWORD PTR [ebp+0x25],esp
  41f9e2:	or     dl,dh
  41f9e4:	add    BYTE PTR [eax+0x38],al
  41f9e7:	dec    esi
  41f9e8:	and    al,0xa3
  41f9ea:	add    eax,0x8155c09d
  41f9ef:	inc    BYTE PTR [ebx-0x118ae9]
  41f9f5:	and    bl,ch
  41f9f7:	sub    eax,0xe955b40c
  41f9fc:	mov    bh,0x1
  41f9fe:	jbe    0x41f9ee
  41fa00:	xor    esi,esp
  41fa02:	int    0xe9
  41fa04:	fist   DWORD PTR [ecx]
  41fa06:	jbe    0x41f9f6
  41fa08:	jmp    0x307230
  41fa0d:	mov    ds:0x7502dea,al
  41fa12:	sbb    BYTE PTR [edx+0x3c891f00],bh
  41fa18:	call   0x8d33fc1a
  41fa1d:	imul   ebx,DWORD PTR [edx+0xa],0x1
  41fa21:	fild   WORD PTR [ecx+0x5a]
  41fa24:	inc    DWORD PTR [eax]
  41fa26:	mov    DWORD PTR [ecx+0x1bda034],ecx
  41fa2c:	repnz cmp bl,dh
  41fa2f:	pop    ebp
  41fa30:	ds je  0x41fa1c
  41fa33:	je     0x41fab2
  41fa35:	and    al,0x13
  41fa37:	jne    0x41fa0f
  41fa39:	cmp    DWORD PTR [ebx],eax
  41fa3b:	pop    esi
  41fa3c:	inc    edx
  41fa3d:	je     0x41f9e8
  41fa3f:	je     0x41fabe
  41fa41:	and    al,0xe7
  41fa43:	je     0x41fa1b
  41fa45:	(bad)  
  41fa46:	fistp  DWORD PTR [ebp+0x1a]
  41fa49:	call   0x30f1b2
  41fa4e:	and    bh,dl
  41fa50:	sub    eax,0xd774ef18
  41fa55:	lea    ebx,[ebx]
  41fa57:	pop    ebp
  41fa58:	mov    ds:0xe2416f00,al
  41fa5d:	lods   al,BYTE PTR ds:[esi]
  41fa5e:	xchg   BYTE PTR [ebp+0x6],ch
  41fa61:	add    BYTE PTR [ebx],al
  41fa63:	pop    edi
  41fa64:	and    dl,BYTE PTR [eax+0x5e]
  41fa67:	pop    edi
  41fa68:	cwde   
  41fa69:	jmp    DWORD PTR [ecx+0x24]
  41fa6c:	mov    al,ds:0xbaf60d58
  41fa71:	sar    BYTE PTR [ebx+0x628051a0],0xe3
  41fa78:	mov    ebx,gs
  41fa7a:	dec    ax
  41fa7c:	mov    ecx,0x3fe0d9e7
  41fa81:	cld    
  41fa82:	std    
  41fa83:	xor    eax,0x74683f2
  41fa88:	ret    0x8a
  41fa8b:	retf   0xf1ff
  41fa8e:	dec    edi
  41fa8f:	lods   al,BYTE PTR ds:[esi]
  41fa90:	repz mov al,BYTE PTR [ebx+0x6a]
  41fa94:	repz mov ebp,0x40c48669
  41fa9a:	adc    cl,BYTE PTR [esi-0x49]
  41fa9d:	int3   
  41fa9e:	inc    DWORD PTR [edx]
  41faa0:	pop    ebx
  41faa1:	lds    esp,FWORD PTR [eax+0x5]
  41faa4:	imul   DWORD PTR [ecx]
  41faa6:	adc    al,0x86
  41faa8:	(bad)  
  41faa9:	mov    eax,ds:0x263f6280
  41faae:	add    BYTE PTR [edx+0x1e],dl
  41fab1:	inc    ecx
  41fab2:	jae    0x41fa5e
  41fab4:	cmp    ecx,DWORD PTR [esi+0x4a]
  41fab7:	or     eax,0xc682405c
  41fabc:	lods   eax,DWORD PTR ds:[esi]
  41fabd:	mov    ch,0xfc
  41fabf:	xor    dh,bh
  41fac1:	sub    eax,0x3f629ae8
  41fac6:	cld    
  41fac7:	std    
  41fac8:	bound  eax,QWORD PTR [edx-0x2bfde528]
  41face:	push   DWORD PTR [ebx+eax*2]
  41fad1:	es retf 0x1390
  41fad5:	mov    bh,BYTE PTR [edi+0x19014212]
  41fadb:	test   DWORD PTR [esi+0x7f],ecx
  41fade:	sar    DWORD PTR [ecx+0x3f],0xf3
  41fae2:	nop
  41fae3:	mov    cl,0x42
  41fae5:	fld    DWORD PTR [edi]
  41fae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fae8:	(bad)  
  41fae9:	and    al,0x4
  41faeb:	jbe    0x41fa7b
  41faed:	cli    
  41faee:	js     0x41faf0
  41faf0:	int3   
  41faf1:	es hlt 
  41faf3:	and    BYTE PTR [ecx],0x43
  41faf6:	jecxz  0x41fafb
  41faf8:	push   DWORD PTR [ebp+0x7]
  41fafb:	jnp    0x41fabd
  41fafd:	shl    bl,cl
  41faff:	add    eax,DWORD PTR [esi+0x11f7986f]
  41fb05:	xor    DWORD PTR [ebx],esp
  41fb07:	add    al,0x2b
  41fb09:	mov    ?,WORD PTR [edi+0x7062944c]
  41fb0f:	xlat   BYTE PTR ds:[ebx]
  41fb10:	jge    0x41fb15
  41fb12:	out    dx,eax
  41fb13:	jmp    0x41facf
  41fb15:	add    esi,edi
  41fb17:	repz or cl,BYTE PTR [esi+0x3a744cf7]
  41fb1e:	push   eax
  41fb1f:	idiv   DWORD PTR [ecx+0x5303a4d6]
  41fb25:	ins    BYTE PTR es:[di],dx
  41fb27:	addr16 dec esp
  41fb29:	add    BYTE PTR [esp+eax*1],al
  41fb2c:	xor    eax,0xed833fb7
  41fb31:	mul    ch
  41fb33:	add    eax,DWORD PTR [esi-0x6628df91]
  41fb39:	mov    bh,0xc6
  41fb3b:	sti    
  41fb3c:	ret    0xbf8d
  41fb3f:	dec    esp
  41fb40:	xor    al,0x5a
  41fb42:	sbb    bh,dl
  41fb44:	add    edx,DWORD PTR gs:[edi-0x187254dd]
  41fb4b:	dec    esp
  41fb4c:	adc    al,0x2a
  41fb4e:	lock (bad) 
  41fb50:	jne    0x41fb55
  41fb52:	or     edi,DWORD PTR [eax+eax*1-0x6b]
  41fb56:	push   es
  41fb57:	js     0x41fb36
  41fb59:	(bad)  
  41fb5a:	push   es
  41fb5b:	sbb    BYTE PTR ds:0x700a8226,ch
  41fb61:	inc    eax
  41fb62:	push   edi
  41fb63:	xchg   DWORD PTR [ecx-0x161d448e],ebp
  41fb69:	test   DWORD PTR [edx-0x8],eax
  41fb6c:	sub    al,0xae
  41fb6e:	add    eax,DWORD PTR [ecx]
  41fb70:	gs stos DWORD PTR es:[edi],eax
  41fb72:	add    esi,edx
  41fb74:	jmp    0x6543e581
  41fb79:	xchg   ebx,eax
  41fb7a:	add    esi,edx
  41fb7c:	jmp    0xe9408387
  41fb81:	cmp    bh,BYTE PTR [edi+0x4285e9be]
  41fb87:	loop   0x41fbbc
  41fb89:	ins    BYTE PTR es:[edi],dx
  41fb8a:	add    eax,0x36c56df2
  41fb8f:	xchg   BYTE PTR [esi],bh
  41fb91:	test   DWORD PTR [edx+0xa],eax
  41fb94:	jbe    0x41fc0c
  41fb96:	add    eax,0x43151518
  41fb9b:	or     ch,BYTE PTR [ebp+eax*2+0x36]
  41fb9f:	xchg   BYTE PTR [esi-0x46f5bd7b],cl
  41fba5:	dec    ebp
  41fba6:	push   eax
  41fba7:	ret    0x3a4f
  41fbaa:	mov    esp,0xc308f947
  41fbaf:	add    DWORD PTR [ebp+0x6b],esp
  41fbb2:	add    esi,edx
  41fbb4:	jmp    0xf2c769d4
  41fbb9:	add    BYTE PTR [edi-0x73eebdfe],ch
  41fbbf:	sti    
  41fbc0:	lock push ds
  41fbc2:	adc    eax,DWORD PTR ds:[esp+ebx*4-0x6a074097]
  41fbca:	mov    ebx,0xe3003759
  41fbcf:	mov    ds:0xf414004a,al
  41fbd4:	add    eax,0xf52b228d
  41fbd9:	call   FWORD PTR [eax-0x11c81131]
  41fbdf:	test   BYTE PTR [ecx],al
  41fbe1:	mov    bl,0xaf
  41fbe3:	inc    esi
  41fbe4:	mov    DWORD PTR [ebp-0x11746d],0xfff1465c
  41fbee:	dec    eax
  41fbef:	hlt    
  41fbf0:	inc    ebp
  41fbf1:	adc    DWORD PTR [edi-0x6c3f72ba],ebp
  41fbf7:	push   es
  41fbf8:	add    DWORD PTR [ebp-0x1173f5],0x24
  41fbff:	inc    ebx
  41fc00:	lods   al,BYTE PTR ds:[esi]
  41fc02:	ins    BYTE PTR es:[edi],dx
  41fc03:	inc    esi
  41fc04:	jge    0x41fc38
  41fc06:	adc    DWORD PTR [edx+ebp*1-0x54],eax
  41fc0a:	pop    esp
  41fc0b:	inc    esi
  41fc0c:	sbb    dh,BYTE PTR [ecx+esi*1+0x59]
  41fc10:	mov    ebp,0xee8d9ae4
  41fc15:	lea    esp,[edx-0x67000aae]
  41fc1b:	mov    dh,0xee
  41fc1d:	aaa    
  41fc1e:	add    BYTE PTR [esi-0x2d],dh
  41fc21:	in     eax,dx
  41fc22:	std    
  41fc23:	pop    eax
  41fc24:	(bad)  
  41fc25:	mov    BYTE PTR [ebp-0x11746d],0xdd
  41fc2c:	inc    ebp
  41fc2d:	icebp  
  41fc2e:	dec    DWORD PTR [eax-0xd]
  41fc31:	inc    ecx
  41fc32:	adc    DWORD PTR [edi],ebp
  41fc34:	inc    esi
  41fc35:	(bad)  
  41fc36:	rcl    BYTE PTR [edx],0xf8
  41fc39:	imul   eax,DWORD PTR [eax],0x6a0a465f
  41fc3f:	scas   eax,DWORD PTR es:[edi]
  41fc40:	mov    WORD PTR [esp-0x68],?
  41fc44:	pop    ecx
  41fc45:	out    dx,eax
  41fc46:	adc    eax,0x3ff82786
  41fc4b:	xchg   BYTE PTR [eax-0x25],dl
  41fc4e:	das    
  41fc4f:	mov    eax,ds:0x4611ae1e
  41fc54:	jmp    0x41fbfa
  41fc56:	pop    ebp
  41fc57:	std    
  41fc58:	scas   al,BYTE PTR es:[edi]
  41fc59:	sbb    DWORD PTR [ecx-0x41],ebx
  41fc5c:	sub    eax,0x74db0012
  41fc61:	pop    ecx
  41fc62:	out    0x5,eax
  41fc64:	mov    dl,0x43
  41fc66:	cld    
  41fc67:	or     ch,BYTE PTR [ebx+0x10cb04da]
  41fc6d:	sub    edx,DWORD PTR [eax+0x32]
  41fc70:	sub    al,0x6
  41fc72:	push   ecx
  41fc73:	mov    al,0x74
  41fc75:	ficom  DWORD PTR [ebx]
  41fc77:	mov    ecx,0x76724561
  41fc7c:	test   DWORD PTR [esi],eax
  41fc7e:	std    
  41fc7f:	mov    ebx,0x1244f3
  41fc84:	ror    BYTE PTR [edi-0x27240038],cl
  41fc8a:	fimul  DWORD PTR [edi]
  41fc8c:	std    
  41fc8d:	rol    BYTE PTR [edx+esi*2-0x6e],cl
  41fc91:	enter  0x7da,0x19
  41fc95:	push   ss
  41fc96:	mov    esi,0x70ebc5ab
  41fc9b:	xlat   BYTE PTR ds:[ebx]
  41fc9c:	add    esi,DWORD PTR [eax-0x42]
  41fc9f:	push   ebx
  41fca0:	or     eax,DWORD PTR [ebp+eax*8-0x3e66fcb1]
  41fca7:	dec    ebx
  41fca8:	add    eax,0x41740659
  41fcad:	ins    BYTE PTR es:[edi],dx
  41fcae:	ret    0x860f
  41fcb1:	mov    edi,0xc39abdc6
  41fcb6:	enter  0x3bff,0x38
  41fcba:	cli    
  41fcbb:	jmp    0x41fd31
  41fcbd:	stos   DWORD PTR es:[edi],eax
  41fcbe:	or     eax,0xaf428bf6
  41fcc3:	mov    eax,DWORD PTR [esi+0x42]
  41fcc6:	loop   0x41fc98
  41fcc8:	fs push 0xffffffa3
  41fccb:	shr    DWORD PTR [ecx+0x42],1
  41fcce:	add    al,dh
  41fcd0:	rcl    DWORD PTR [ebx-0x5d],1
  41fcd3:	add    eax,DWORD PTR ds:0xfefc7802
  41fcd9:	stc    
  41fcda:	or     esp,DWORD PTR [ecx+0x5de10143]
  41fce0:	xchg   DWORD PTR [ebx+eiz*4],esi
  41fce3:	cmp    BYTE PTR [ecx],0x77
  41fce6:	call   0x96bdfd6f
  41fceb:	fwait
  41fcec:	lds    ebp,FWORD PTR [ecx+0x43]
  41fcef:	cmp    DWORD PTR [ecx+0x74],ecx
  41fcf2:	repnz aad 0xc3
  41fcf5:	pop    ecx
  41fcf6:	mov    eax,ds:0x9c467d11
  41fcfb:	push   ss
  41fcfc:	inc    esi
  41fcfd:	jns    0x41fd41
  41fcff:	dec    ebx
  41fd00:	pop    edx
  41fd01:	inc    eax
  41fd02:	add    ah,ah
  41fd04:	fndisi(8087 only) 
  41fd06:	mov    dl,0x24
  41fd08:	add    al,0xd8
  41fd0a:	(bad)  
  41fd0b:	out    dx,al
  41fd0c:	adc    edx,DWORD PTR [eax+0x4584e382]
  41fd12:	dec    edi
  41fd13:	adc    DWORD PTR [edi+eax*2+0x45],ebx
  41fd17:	jecxz  0x41fd1c
  41fd19:	dec    DWORD PTR [eax]
  41fd1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd1c:	scas   eax,DWORD PTR es:[edi]
  41fd1d:	(bad)  
  41fd1e:	out    dx,al
  41fd1f:	fs pop eax
  41fd21:	test   eax,0xeb88b093
  41fd26:	inc    ecx
  41fd27:	jecxz  0x41fd2c
  41fd29:	pop    ebx
  41fd2a:	ins    BYTE PTR es:[edi],dx
  41fd2b:	jecxz  0x41fcde
  41fd2d:	jmp    0x6442:0xa1f21755
  41fd34:	inc    eax
  41fd35:	(bad)  
  41fd36:	int    0xa9
  41fd38:	inc    DWORD PTR [ecx-0x37]
  41fd3b:	or     dh,bh
  41fd3d:	sub    eax,0x4f2fc2c0
  41fd42:	retf   0xf147
  41fd45:	cmp    al,0x85
  41fd47:	outs   dx,BYTE PTR ds:[esi]
  41fd48:	ins    BYTE PTR es:[edi],dx
  41fd49:	add    al,0x80
  41fd4b:	or     ch,cl
  41fd4d:	add    BYTE PTR [ebp+0x4336e292],al
  41fd53:	push   ecx
  41fd55:	xchg   ebx,eax
  41fd56:	test   DWORD PTR [edx+eiz*1+0x6c],ebp
  41fd5a:	rcl    DWORD PTR [edi],1
  41fd5c:	pop    ebx
  41fd5d:	add    DWORD PTR [edx+0x61],ebx
  41fd60:	or     ch,cl
  41fd62:	arpl   WORD PTR [edi],sp
  41fd64:	jg     0x41fd9a
  41fd66:	stos   BYTE PTR es:[edi],al
  41fd67:	int3   
  41fd68:	mov    BYTE PTR [ecx-0x7b],bh
  41fd6b:	inc    edx
  41fd6c:	or     bh,BYTE PTR [eax]
  41fd6e:	retf   0x2ad1
  41fd71:	jmp    0xc733bafb
  41fd76:	test   DWORD PTR [edx+0x64],eax
  41fd79:	call   0x5c250450
  41fd7e:	arpl   di,di
  41fd80:	icebp  
  41fd81:	ficom  WORD PTR [esi]
  41fd83:	pop    ss
  41fd84:	gs call 0x8b0e0444
  41fd8a:	xor    eax,0x820b8de7
  41fd8f:	inc    edx
  41fd90:	add    DWORD PTR [esi-0x3b],edx
  41fd93:	dec    edx
  41fd94:	int    0x70
  41fd96:	pop    es
  41fd97:	in     eax,0xb
  41fd99:	jmp    0x624d6a23
  41fd9e:	(bad)  
  41fd9f:	out    0x61,eax
  41fda1:	or     ecx,DWORD PTR [edx-0x5261febe]
  41fda7:	imul   ecx,DWORD PTR [ebx],0xedc04672
  41fdad:	stc    
  41fdae:	dec    ebp
  41fdaf:	lahf   
  41fdb0:	ins    BYTE PTR es:[edi],dx
  41fdb1:	jmp    0xb98f82b6
  41fdb6:	add    BYTE PTR [edi+0x565fcafe],ch
  41fdbc:	shl    ebx,0x1
  41fdbf:	fild   WORD PTR [edx-0x7d]
  41fdc2:	(bad)  
  41fdc3:	adc    al,0x3c
  41fdc5:	retf   
  41fdc6:	add    al,0xaf
  41fdc8:	scas   eax,DWORD PTR es:[edi]
  41fdc9:	sub    ah,0xee
  41fdcc:	mov    cl,0xae
  41fdce:	out    dx,al
  41fdcf:	sahf   
  41fdd0:	inc    edx
  41fdd1:	or     dl,BYTE PTR [edi+0x5]
  41fdd4:	inc    ebx
  41fdd5:	pop    ebx
  41fdd6:	(bad)  
  41fdd7:	mov    edx,0x9f40184e
  41fddc:	(bad)
  41fddf:	and    al,BYTE PTR [ecx]
  41fde1:	inc    esi
  41fde2:	push   eax
  41fde3:	add    eax,0xc03b8946
  41fde8:	jnp    0x41fe2c
  41fdea:	add    al,0xf4
  41fdec:	cmp    eax,0x854e25e9
  41fdf1:	out    dx,al
  41fdf2:	mov    ebp,ecx
  41fdf4:	xor    cl,0xff
  41fdf7:	outs   dx,DWORD PTR ds:[esi]
  41fdf8:	jns    0x41fe2e
  41fdfa:	xor    BYTE PTR [ecx],bh
  41fdfc:	add    dh,dl
  41fdfe:	mov    BYTE PTR [edx+ecx*1+0x7ce21064],bl
  41fe05:	leave  
  41fe06:	add    BYTE PTR [edi],ch
  41fe08:	inc    edx
  41fe09:	pop    edx
  41fe0a:	lea    ebx,[esi+eax*8-0x4de0000f]
  41fe11:	out    dx,al
  41fe12:	xlat   BYTE PTR ds:[ebx]
  41fe13:	xchg   DWORD PTR [eax-0xf],eax
  41fe16:	inc    DWORD PTR [eax]
  41fe18:	das    
  41fe19:	jnp    0x41fda2
  41fe1b:	fcomp  DWORD PTR [edi]
  41fe1d:	inc    edx
  41fe1e:	or     dl,BYTE PTR [eax-0x5e]
  41fe21:	rol    DWORD PTR [ecx+0x5a41ef00],0xff
  41fe28:	mov    eax,0x5018cdc1
  41fe2d:	int3   
  41fe2e:	in     eax,0x3
  41fe30:	xchg   bl,ch
  41fe32:	or     eax,0xd88088b
  41fe37:	add    BYTE PTR [esi-0x4d7a8d25],al
  41fe3d:	jmp    0xe745:0x6036000d
  41fe44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe45:	jmp    0x5ee:0x9db9000d
  41fe4c:	xchg   bl,ch
  41fe4e:	jb     0x41fdd5
  41fe50:	xchg   ch,ch
  41fe52:	or     eax,0x709e3600
  41fe57:	test   DWORD PTR [ebp-0x61aff215],0x86000c0c
  41fe61:	data16 jo 0x41fe77
  41fe64:	mov    bl,ch
  41fe66:	or     eax,0x55a80d50
  41fe6b:	xchg   BYTE PTR [ebx+ebp*8+0x1469bd0d],al
  41fe72:	push   cs
  41fe73:	add    ah,ch
  41fe75:	jmp    0xffe6:0x616ec474
  41fe7c:	add    BYTE PTR [ecx-0x14],dl
  41fe7f:	cmp    BYTE PTR [edi-0x7901f4b9],0xcb
  41fe86:	scas   eax,DWORD PTR es:[edi]
  41fe87:	sar    esi,cl
  41fe89:	or     al,0xac
  41fe8b:	push   ebp
  41fe8c:	xchg   DWORD PTR [edi-0xef2f215],esp
  41fe92:	stos   BYTE PTR es:[edi],al
  41fe93:	hlt    
  41fe94:	inc    edx
  41fe95:	and    ch,BYTE PTR [edi+ebp*2]
  41fe98:	and    BYTE PTR [eax],0xea
  41fe9b:	or     eax,0xe964fd00
  41fea0:	pop    es
  41fea1:	xchg   bl,ch
  41fea3:	outs   dx,BYTE PTR ds:[esi]
  41fea4:	sub    ah,0xe9
  41fea7:	or     eax,0x24420d00
  41feac:	cmp    al,0xc6
  41feae:	xchg   esi,eax
  41feaf:	jl     0x41fe88
  41feb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41feb2:	dec    edx
  41feb3:	mov    cl,0xae
  41feb5:	or     al,0x87
  41feb7:	out    0xb3,eax
  41feb9:	outs   dx,DWORD PTR ds:[esi]
  41feba:	ds test al,0x78
  41febd:	mov    ?,WORD PTR ds:[esi+edi*1-0x1f]
  41fec2:	xchg   esi,eax
  41fec3:	xor    eax,DWORD PTR [ebp-0x3e]
  41fec6:	enter  0xc7a6,0xe
  41feca:	aas    
  41fecb:	shr    ebp,cl
  41fecd:	jno    0x41ff11
  41fecf:	jp     0x41fe53
  41fed1:	lds    eax,FWORD PTR [ecx-0x1d]
  41fed4:	add    ebp,DWORD PTR [edx+edx*2]
  41fed7:	dec    esi
  41fed8:	sbb    BYTE PTR [ecx],0x42
  41fedb:	jecxz  0x41fee0
  41fedd:	ss iret 
  41fedf:	cmp    eax,DWORD PTR fs:[eax]
  41fee2:	mov    esp,edi
  41fee4:	jecxz  0x41fe99
  41fee6:	adc    BYTE PTR [esp+ecx*4],0x1
  41feea:	jns    0x41fee8
  41feec:	jecxz  0x41ff64
  41feee:	add    al,0xd3
  41fef0:	jecxz  0x41fef5
  41fef2:	xchg   BYTE PTR [edx+0x43398166],dl
  41fef8:	jecxz  0x41fefd
  41fefa:	mov    dh,0xfb
  41fefc:	nop
  41fefd:	add    DWORD PTR [ebp+0x5b],0xfc49005b
  41ff04:	jecxz  0x41ff7c
  41ff06:	add    al,0xd1
  41ff08:	loop   0x41ff0d
  41ff0a:	xchg   BYTE PTR [edx+0x424d9176],dl
  41ff10:	jecxz  0x41ff15
  41ff12:	pushf  
  41ff13:	inc    edx
  41ff14:	fs cmp al,0x22
  41ff17:	jmp    0x41ff23
  41ff19:	push   edx
  41ff1a:	sbb    edi,esp
  41ff1c:	jl     0x41ff9d
  41ff1e:	jecxz  0x41ff61
  41ff20:	jecxz  0x41ff25
  41ff22:	add    eax,eax
  41ff24:	or     al,BYTE PTR [ebp+0x30a4287]
  41ff2a:	cli    
  41ff2b:	enter  0x8f87,0x85
  41ff2f:	inc    edx
  41ff30:	or     bh,BYTE PTR [ecx-0x15193d90]
  41ff36:	test   DWORD PTR [edx+0x5a],eax
  41ff39:	dec    esi
  41ff3a:	stos   DWORD PTR es:[edi],eax
  41ff3b:	ret    0xf5c6
  41ff3e:	lods   eax,DWORD PTR ds:[esi]
  41ff3f:	aas    
  41ff40:	or     ebp,ecx
  41ff42:	test   edi,eax
  41ff44:	xchg   DWORD PTR [ebx+0x0],edi
  41ff47:	test   DWORD PTR [edx+0xa],eax
  41ff4a:	cdq    
  41ff4b:	xor    BYTE PTR [edx+0x4285eaf2],dh
  41ff51:	fs jmp 0x234035d
  41ff57:	jle    0x41ff49
  41ff59:	lock push cs
  41ff5b:	pop    ds
  41ff5c:	rol    al,0xe8
  41ff5f:	test   DWORD PTR [edx-0x7d],eax
  41ff62:	push   0xffffff8a
  41ff64:	inc    ebp
  41ff65:	or     ch,cl
  41ff67:	pop    edi
  41ff68:	inc    ebx
  41ff69:	jg     0x41ffcf
  41ff6b:	mov    eax,0x35e9f1fc
  41ff70:	enter  0xe98d,0x6b
  41ff74:	sti    
  41ff75:	icebp  
  41ff76:	cmp    ebx,ecx
  41ff78:	push   ss
  41ff79:	mov    fs,WORD PTR [ebp-0x17f99caf]
  41ff7f:	test   DWORD PTR [edx+0x7f],eax
  41ff82:	fs xchg edi,eax
  41ff84:	cld    
  41ff85:	icebp  
  41ff86:	jmp    0xd5ffc780
  41ff8b:	cmp    edi,ebx
  41ff8d:	icebp  
  41ff8e:	adc    ecx,DWORD PTR [edx-0x32613d3f]
  41ff94:	out    dx,al
  41ff95:	sti    
  41ff96:	xchg   edi,eax
  41ff97:	retf   0x87ca
  41ff9a:	add    DWORD PTR [edx+eax*2-0x5b97fff6],0xffffff88
  41ffa2:	sub    DWORD PTR [ebx],0xfffffff7
  41ffa5:	icebp  
  41ffa6:	call   FWORD PTR [edx+0xd80]
  41ffac:	xchg   edx,eax
  41ffad:	jns    0x41ff94
  41ffaf:	sbb    DWORD PTR [ebx-0x9],0xc1dffff0
  41ffb6:	lods   al,BYTE PTR ds:[esi]
  41ffb7:	clc    
  41ffb8:	cmp    DWORD PTR [esi+0x6ee200ee],eax
  41ffbe:	icebp  
  41ffbf:	(bad)  
  41ffc0:	fild   QWORD PTR [esi-0x7ab87a7c]
  41ffc6:	out    dx,al
  41ffc7:	inc    DWORD PTR [edi-0x24]
  41ffca:	verw   WORD PTR [edi-0x60f38b3f]
  41ffd1:	or     al,BYTE PTR [ecx]
  41ffd3:	mov    esi,edx
  41ffd5:	repnz or BYTE PTR [ebp-0x59],0x73
  41ffda:	mov    eax,?
  41ffdc:	mov    DWORD PTR [esi-0x198d1712],eax
  41ffe2:	icebp  
  41ffe3:	call   DWORD PTR [esi-0x7f]
  41ffe6:	or     DWORD PTR [eax],eax
  41ffe8:	and    bh,BYTE PTR [ebx-0x1b]
  41ffeb:	add    DWORD PTR [ebx-0xc138f73],0x4c
  41fff2:	or     al,BYTE PTR [eax]
  41fff4:	mov    al,0xd3
  41fff6:	mov    ch,0x24
  41fff8:	pop    edi
  41fff9:	aas    
  41fffa:	or     al,BYTE PTR [eax]
  41fffc:	inc    edi
  41fffd:	rol    dh,cl
  41ffff:	dec    BYTE PTR [eax-0x3e]
  420002:	ins    DWORD PTR es:[edi],dx
  420003:	and    al,0x57
  420005:	inc    esi
  420006:	test   DWORD PTR [ebx+edx*4+0x2f000cf7],eax
  42000d:	push   ss
  42000e:	test   DWORD PTR [eax+eax*1+0x43],eax
  420012:	dec    edx
  420013:	loop   0x420070
  420015:	sub    DWORD PTR [esi+0xa],eax
  420018:	mov    eax,DWORD PTR [esi+0x28b9fe1e]
  42001e:	jmp    0x42002d
  420020:	add    BYTE PTR [ebx],al
  420022:	sub    dl,ah
  420024:	pop    es
  420025:	push   ds
  420026:	fwait
  420027:	sub    eax,0x81508600
  42002c:	loop   0x420089
  42002e:	lods   eax,DWORD PTR ds:[esi]
  42002f:	add    al,BYTE PTR [eax]
  420031:	std    
  420032:	scas   eax,DWORD PTR es:[edi]
  420033:	jmp    0x9af3553b
  420038:	mov    ah,0xf4
  42003a:	jmp    0xfd3b:0xd9ee000d
  420041:	shr    DWORD PTR [esi+ebp*1-0x4],1
  420045:	push   edx
  420046:	test   eax,0xdc55d8f8
  42004b:	lahf   
  42004c:	adc    edx,DWORD PTR [eax-0x25]
  42004f:	dec    esp
  420050:	jae    0x4200bc
  420052:	or     ebx,ecx
  420054:	push   eax
  420055:	test   eax,0x4611bdee
  42005a:	jmp    0x42004c
  42005c:	rcr    BYTE PTR [eax],0x11
  42005f:	fwait
  420060:	or     edx,DWORD PTR [esi+0x3]
  420063:	iret   
  420064:	cld    
  420065:	adc    ah,al
  420067:	mov    bh,dh
  420069:	call   0x5c5:0x9f87de6e
  420070:	std    
  420071:	cli    
  420072:	inc    edi
  420073:	adc    cl,BYTE PTR [ebx+0x6c10100]
  420079:	add    BYTE PTR [esi-0x69edb2c5],al
  42007f:	icebp  
  420080:	int    0xff
  420082:	cld    
  420083:	es loop 0x4200a5
  420086:	call   FWORD PTR [edi+0x7b]
  420089:	inc    BYTE PTR [ecx-0x15]
  42008c:	mov    bl,al
  42008e:	mov    bh,BYTE PTR [ebx+0x6]
  420091:	pop    esi
  420092:	int    0x42
  420094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420095:	jbe    0x1a70a3cf
  42009b:	int    0x27
  42009d:	call   0x917b9627
  4200a2:	fidiv  DWORD PTR [ebx-0x1579fc1e]
  4200a8:	mov    DWORD PTR [eax],esi
  4200aa:	add    edi,ecx
  4200ac:	fs cmp edi,edx
  4200af:	ins    DWORD PTR es:[edi],dx
  4200b0:	adc    edi,esi
  4200b2:	into   
  4200b3:	xchg   esp,eax
  4200b4:	mov    ah,0xad
  4200b6:	xchg   ebp,eax
  4200b7:	nop
  4200b8:	mov    bl,0x42
  4200ba:	push   ebp
  4200bb:	push   ds
  4200bc:	add    edx,edi
  4200be:	ss stc 
  4200c0:	div    BYTE PTR [ebx-0x11c7d89]
  4200c6:	(bad)  
  4200c7:	ja     0x4200c2
  4200c9:	nop
  4200ca:	lea    esi,[edx]
  4200cc:	sti    
  4200cd:	fdivr  QWORD PTR [edx-0x46791793]
  4200d3:	dec    ebp
  4200d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200d5:	in     al,dx
  4200d6:	add    DWORD PTR [ebx-0x63],ebx
  4200d9:	or     eax,DWORD PTR [eax]
  4200db:	mov    ds:0xd17bf6d,eax
  4200e0:	shr    DWORD PTR [ecx],0x4
  4200e3:	xchg   BYTE PTR [edx-0x6d],al
  4200e6:	inc    edx
  4200e7:	je     0x42011b
  4200e9:	fld    st(3)
  4200eb:	or     ebp,0xc999e79f
  4200f1:	push   0xe3f87051
  4200f6:	test   BYTE PTR [ebp+0x47],al
  4200f9:	xchg   ebx,eax
  4200fa:	add    eax,eax
  4200fc:	fwait
  4200fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200fe:	adc    BYTE PTR [esi+0x5a2da334],al
  420104:	int3   
  420105:	aaa    
  420106:	call   0x8f5b9490
  42010b:	icebp  
  42010c:	adc    al,0xb
  42010e:	call   0x30244398
  420113:	popa   
  420114:	cmc    
  420115:	icebp  
  420116:	push   0x6a
  420118:	div    BYTE PTR [esi-0x31]
  42011b:	sbb    bl,BYTE PTR [ebx]
  42011d:	pop    esi
  42011e:	cmp    ch,al
  420120:	push   ebx
  420121:	pop    eax
  420122:	cmp    edi,eax
  420124:	jae    0x42014c
  420126:	leave  
  420127:	xor    dl,BYTE PTR [ebx+0x5235d4f1]
  42012d:	dec    edx
  42012e:	jmp    0xd7b3042d
  420133:	add    BYTE PTR [edx+edi*1+0x21],cl
  420137:	int    0xf6
  420139:	jbe    0x420121
  42013b:	or     dh,al
  42013d:	push   ss
  42013e:	aam    0x0
  420140:	mov    edx,cs
  420142:	adc    ebx,DWORD PTR [ecx+0x2b559885]
  420148:	jle    0x42018c
  42014a:	cmp    al,0x29
  42014c:	jae    0x42013c
  42014e:	push   edi
  42014f:	bound  esi,QWORD PTR [esi+0x78]
  420152:	fsubrp st(5),st
  420154:	mov    eax,DWORD PTR [edx+0xa]
  420157:	mov    edx,0xe8628ecf
  42015c:	test   BYTE PTR [edx+0xa],al
  42015f:	fs add esp,edi
  420162:	out    dx,eax
  420163:	push   cs
  420164:	inc    edi
  420165:	xchg   ecx,esi
  420167:	jl     0x4201e6
  420169:	cmc    
  42016a:	pop    ss
  42016b:	and    eax,0x620a829b
  420170:	fcmovb st,st(4)
  420172:	aad    0x6f
  420174:	bound  esi,QWORD PTR [edx]
  420176:	icebp  
  420177:	sbb    ch,BYTE PTR [esi+esi*8+0x3731a5b8]
  42017e:	or     ah,BYTE PTR [edx-0x9]
  420181:	mov    dh,0x5e
  420183:	sub    DWORD PTR [edx+0x430087cb],ecx
  420189:	cmp    dh,ch
  42018b:	call   FWORD PTR [edi+0xde8cac5]
  420191:	cmp    ebp,edi
  420193:	jmp    FWORD PTR [edx-0x63ed827d]
  420199:	mov    DWORD PTR ds:0x4981ac47,eax
  42019f:	jb     0x420177
  4201a1:	in     eax,dx
  4201a2:	mov    cl,0x5f
  4201a4:	add    BYTE PTR [ecx+0x15],ah
  4201a7:	leave  
  4201a8:	ret    0x431b
  4201ab:	arpl   di,di
  4201ad:	repz test al,0x82
  4201b0:	xchg   DWORD PTR [edi],esp
  4201b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201b3:	xor    DWORD PTR [eax],eax
  4201b5:	add    al,0x28
  4201b7:	pop    esp
  4201b8:	mov    edx,DWORD PTR [ebx-0x3c]
  4201bb:	in     eax,0xf4
  4201bd:	call   0x18980c04
  4201c2:	stos   DWORD PTR es:[edi],eax
  4201c3:	test   DWORD PTR [ecx],eax
  4201c5:	fild   WORD PTR [edx+0x5b]
  4201c8:	call   0x317ad9
  4201cd:	adc    BYTE PTR [eax+0x6a],0x11
  4201d1:	out    dx,eax
  4201d2:	inc    edx
  4201d3:	mov    DWORD PTR [ebx-0x55],eax
  4201d6:	mov    ebp,0x4a0afff9
  4201db:	cmp    al,0xc0
  4201dd:	jbe    0x4201e9
  4201df:	or     al,0x0
  4201e1:	scas   eax,DWORD PTR es:[edi]
  4201e2:	in     eax,dx
  4201e3:	not    DWORD PTR [esi+0x32]
  4201e6:	add    BYTE PTR [esi-0x66ac08b0],cl
  4201ec:	mov    bl,ch
  4201ee:	sub    DWORD PTR [edx-0x7bc98e3e],ebx
  4201f4:	inc    ebp
  4201f5:	jmp    0x420208
  4201f7:	out    dx,eax
  4201f8:	adc    eax,0x4a5a7f
  4201fd:	(bad)  
  4201fe:	add    DWORD PTR [edx],ecx
  420200:	cmp    eax,DWORD PTR [esi-0x232b4d5b]
  420206:	jmp    0x9e5c:0x200429a
  42020d:	adc    DWORD PTR [edi],ebx
  42020f:	je     0x420193
  420211:	out    0xb4,eax
  420213:	test   eax,0x1f03fc30
  420218:	or     BYTE PTR [edi-0x30],0x51
  42021c:	pop    es
  42021d:	mov    ebp,0xffcd87be
  420222:	mov    al,0xcc
  420224:	adc    edi,DWORD PTR [eax-0x78f9d48c]
  42022a:	(bad)
  42022d:	lds    edi,FWORD PTR [edx-0x7a]
  420230:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420231:	dec    BYTE PTR [edx]
  420233:	daa    
  420234:	or     BYTE PTR [edi+0x5e],0x9
  420238:	out    0x77,al
  42023a:	mov    ss,WORD PTR [ebx-0x6b1f3e42]
  420240:	fwait
  420241:	inc    edx
  420242:	add    bh,BYTE PTR [edi+edx*8-0x2a112eac]
  420249:	push   cs
  42024a:	inc    esi
  42024b:	jmp    0x4202cb
  42024d:	inc    eax
  42024e:	call   0x702:0xc734840
  420255:	mov    ecx,DWORD PTR [ebx+0x5f]
  420258:	(bad)  
  420259:	mov    DWORD PTR fs:[bp-0x5169],ebp
  42025f:	dec    BYTE PTR [ebx-0x3]
  420262:	cdq    
  420263:	pop    esi
  420264:	ret    
  420265:	xor    DWORD PTR [esi],0xffffffc3
  420268:	in     eax,0x8e
  42026a:	mov    dh,0xe8
  42026c:	xlat   BYTE PTR ds:[ebx]
  42026d:	imul   eax,DWORD PTR [eax],0xfcd7cc8a
  420273:	xchg   ebx,eax
  420274:	repz sbb eax,0xd628640
  42027a:	cmp    DWORD PTR [eax+0x42],eax
  42027d:	clc    
  42027e:	xchg   DWORD PTR [ebp-0x4cc12f0b],edi
  420284:	mov    WORD PTR [ecx],?
  420286:	stos   BYTE PTR es:[edi],al
  420287:	xchg   DWORD PTR [edx+0x530618c0],edx
  42028d:	and    eax,DWORD PTR [edi+edi*2]
  420290:	cld    
  420291:	loopne 0x42021a
  420293:	shl    ebp,0xb8
  420296:	or     BYTE PTR ds:[ecx+0x435e08d3],al
  42029d:	jecxz  0x4202a2
  42029f:	mov    eax,0x401c24cb
  4202a4:	jg     0x420242
  4202a6:	add    edx,DWORD PTR [ebx]
  4202a8:	dec    edi
  4202a9:	mov    edx,DWORD PTR [edi]
  4202ab:	mov    BYTE PTR [edx+0x7a],0xc8
  4202af:	cmc    
  4202b0:	cmp    BYTE PTR [ecx-0x1d8ffdf2],ch
  4202b6:	add    eax,DWORD PTR [esi+0x795b9ec9]
  4202bc:	and    bl,0xa9
  4202bf:	mov    DWORD PTR [edx-0x345a4d86],edx
  4202c5:	aam    0xeb
  4202c7:	ror    BYTE PTR [esi+ecx*8],cl
  4202ca:	or     ebx,ecx
  4202cc:	outs   dx,BYTE PTR ds:[esi]
  4202cd:	das    
  4202ce:	mov    WORD PTR [esi+0x26],es
  4202d1:	xor    BYTE PTR [esi+0x0],dl
  4202d4:	push   cs
  4202d5:	mov    DWORD PTR [edi],eax
  4202d7:	aam    0x40
  4202d9:	cmc    
  4202da:	mov    dh,0x37
  4202dc:	add    BYTE PTR [ecx-0x518bc12d],al
  4202e2:	repz ret 
  4202e4:	cdq    
  4202e5:	aaa    
  4202e6:	and    DWORD PTR [edi-0x2a466d8c],esi
  4202ec:	cld    
  4202ed:	add    bl,0xd3
  4202f0:	or     al,0x7e
  4202f2:	repz sar BYTE PTR [edx+0x6e],cl
  4202f6:	or     bh,ch
  4202f8:	pushf  
  4202f9:	rcr    dh,0xe9
  4202fc:	test   ecx,ebp
  4202fe:	or     al,0x1a
  420300:	retf   0x77f6
  420303:	aad    0xd
  420305:	or     DWORD PTR [esi],0x3f
  420308:	xchg   ebx,eax
  420309:	push   eax
  42030a:	dec    edx
  42030b:	hlt    
  42030c:	inc    ebp
  42030d:	hlt    
  42030e:	xor    bh,BYTE PTR [edx]
  420310:	inc    bp
  420312:	xchg   ah,dl
  420314:	test   BYTE PTR [edx+0xa],al
  420317:	bound  eax,QWORD PTR [ecx-0x1c]
  42031a:	push   0x68464562
  42031f:	test   al,0x72
  420321:	inc    edx
  420322:	sub    BYTE PTR [edx],0x1a
  420325:	inc    edi
  420326:	mov    eax,0x4da583a9
  42032b:	mov    ebp,0x513682fc
  420330:	xchg   DWORD PTR [esi+0x8],ebp
  420333:	push   0xffffffa2
  420335:	test   DWORD PTR [ebp-0x7c81ff57],0xdbee2a83
  42033f:	add    DWORD PTR [ebp-0x23750960],ebx
  420345:	(bad)  
  420346:	repz (bad) 
  420348:	lods   al,BYTE PTR ds:[esi]
  420349:	mov    ?,esp
  42034b:	add    BYTE PTR [esi+eiz*2-0xd],ah
  42034f:	icebp  
  420350:	jmp    0x4140bc65
  420355:	jnp    0x42034d
  420357:	enter  0x6eac,0xf3
  42035b:	jmp    0xf2374505
  420360:	xchg   ebx,eax
  420361:	jne    0x4203cd
  420363:	xchg   edx,eax
  420364:	pop    ecx
  420365:	(bad)  
  420366:	repz jle 0x420313
  420369:	xchg   ecx,eax
  42036a:	and    edx,0xffffffef
  42036d:	adc    ebp,esi
  42036f:	icebp  
  420370:	add    dl,bh
  420372:	imul   edx,DWORD PTR [edi-0x16c98703],0xffffffa1
  420379:	jbe    0x4203b1
  42037b:	out    dx,al
  42037c:	mov    ebx,edi
  42037e:	sbb    al,0xf0
  420380:	jmp    FWORD PTR [edi-0x38]
  420383:	dec    edx
  420384:	dec    esp
  420385:	es and eax,0xca5ffff0
  42038b:	mov    esi,0x494a3f5f
  420391:	xor    BYTE PTR [edi],0x69
  420394:	add    ch,BYTE PTR [esi]
  420396:	aas    
  420397:	or     cl,BYTE PTR [ebp-0xa135e]
  42039d:	add    al,bl
  42039f:	push   cs
  4203a0:	test   DWORD PTR [ebx+0x5f],eax
  4203a3:	push   cs
  4203a4:	jmp    0x1e6a:0xee35bce7
  4203ab:	les    ecx,FWORD PTR [esp+eax*4+0x4f]
  4203af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203b0:	sub    esi,DWORD PTR [ecx-0x291da899]
  4203b6:	das    
  4203b7:	xor    eax,0xcaa28dee
  4203bc:	inc    ecx
  4203bd:	xor    ebx,DWORD PTR [eax+0xe]
  4203c0:	push   0x58
  4203c2:	sti    
  4203c3:	add    edx,esi
  4203c5:	(bad)  
  4203c6:	rcl    BYTE PTR [esi],cl
  4203c8:	add    DWORD PTR [eax-0x21],eax
  4203cb:	(bad)  
  4203cc:	mov    ah,BYTE PTR [eax-0x22]
  4203cf:	or     bh,BYTE PTR ds:[ebx]
  4203d2:	jo     0x42041a
  4203d4:	xchg   BYTE PTR [ebx],cl
  4203d6:	jns    0x42040e
  4203d8:	out    dx,al
  4203d9:	push   edi
  4203da:	js     0x420428
  4203dc:	loop   0x4203f2
  4203de:	fistp  QWORD PTR [esi]
  4203e0:	xor    eax,0xffffffa4
  4203e3:	sub    eax,0x35d1497d
  4203e8:	sbb    al,0xb0
  4203ea:	xchg   cl,bh
  4203ec:	int    0xff
  4203ee:	(bad)  
  4203ef:	addr16 fsin 
  4203f2:	sbb    esp,0xabf2c4f2
  4203f8:	mov    ds:0xd7dadffe,eax
  4203fd:	cld    
  4203fe:	xchg   ebx,eax
  4203ff:	aaa    
  420400:	sbb    eax,0x72860040
  420405:	mov    DWORD PTR [ebx-0x79],ebx
  420408:	fisttp DWORD PTR ds:0x11904939
  42040e:	push   eax
  42040f:	dec    ecx
  420410:	int    0xda
  420412:	inc    BYTE PTR [ecx-0x24]
  420415:	xor    al,0x12
  420417:	es or  al,0xce
  42041a:	(bad)  
  42041b:	(bad)  
  42041c:	pop    esp
  42041d:	into   
  42041e:	(bad)  
  42041f:	sub    esp,ebx
  420421:	lock les ebx,FWORD PTR [edx+0x1d424bdf]
  420428:	fcmovnu st,st(3)
  42042a:	push   esp
  42042b:	adc    edi,ebp
  42042d:	int    0x12
  42042f:	(bad)  
  420430:	fstp   TBYTE PTR [edi+0x42]
  420433:	std    
  420434:	sub    ah,dl
  420436:	mov    ah,0xe7
  420439:	or     eax,0x1216fd51
  42043e:	cmovbe ebx,ebx
  420441:	fisttp DWORD PTR [eax+0x1bcc74d6]
  420447:	xor    DWORD PTR [esi+0x46],esp
  42044a:	jae    0x4203d1
  42044c:	stos   DWORD PTR es:[edi],eax
  42044d:	xor    al,0xd0
  42044f:	std    
  420450:	test   eax,0xbb838909
  420455:	sbb    BYTE PTR [eax-0x7a],al
  420458:	inc    si
  42045a:	jae    0x4203e1
  42045c:	retf   
  42045d:	xor    al,0xd4
  42045f:	std    
  420460:	test   eax,0x429e80f1
  420465:	sub    BYTE PTR [eax+0x10928200],dh
  42046b:	adc    DWORD PTR [edx],ebp
  42046d:	push   ebx
  42046e:	mov    ds:0xf788ff03,eax
  420473:	add    BYTE PTR [ecx+0x76],0xe4
  420477:	sar    DWORD PTR [edx+0x19],cl
  42047a:	jge    0x42043e
  42047c:	add    edi,0x9282b023
  420482:	loopne 0x420494
  420484:	pop    edx
  420485:	push   edx
  420486:	and    eax,DWORD PTR [edi+ecx*1]
  420489:	dec    eax
  42048a:	inc    bx
  42048c:	aad    0x45
  42048e:	xor    edi,DWORD PTR [ebx]
  420490:	xor    al,dl
  420492:	aas    
  420493:	loopne 0x420426
  420495:	inc    edx
  420496:	das    
  420497:	mov    ebp,0x52bc80e
  42049c:	xchg   BYTE PTR [edx+0x5e],al
  42049f:	inc    ebx
  4204a0:	mov    ch,0x3f
  4204a2:	adc    edi,DWORD PTR [ebx]
  4204a4:	fist   DWORD PTR [ebp-0xe79fc1e]
  4204aa:	mul    BYTE PTR [ebx]
  4204ac:	add    DWORD PTR [edx-0x71fc711d],0xc78603e2
  4204b6:	mov    ds:0x709286af,eax
  4204bb:	push   esi
  4204bc:	inc    bh
  4204be:	syscall 
  4204c0:	xchg   BYTE PTR [edx+0x66],al
  4204c3:	inc    ebx
  4204c4:	push   ebp
  4204c5:	dec    ecx
  4204c6:	mov    bl,0x3a
  4204c8:	je     0x4204e0
  4204ca:	hlt    
  4204cb:	ret    
  4204cc:	add    cl,dl
  4204ce:	mov    ebx,0xf0c8a361
  4204d3:	jecxz  0x420455
  4204d5:	add    DWORD PTR [esi-0x1c],esi
  4204d8:	sar    DWORD PTR [edx+0x31817d18],cl
  4204de:	inc    ebx
  4204df:	or     ch,cl
  4204e1:	test   ebp,eax
  4204e3:	retf   0xabb5
  4204e6:	pop    edx
  4204e7:	or     bh,BYTE PTR [ecx-0x5e5aba4]
  4204ed:	(bad)
  4204f0:	jmp    0x420474
  4204f2:	inc    edx
  4204f3:	or     dl,BYTE PTR [ebp-0x6cf5a365]
  4204f9:	test   DWORD PTR [esp+ebx*1-0x2],ebx
  4204fd:	test   bh,0xb
  420500:	jmp    0x1959f28a
  420505:	js     0x420489
  420507:	or     ch,BYTE PTR [eax-0x3c]
  42050a:	imul   ecx,DWORD PTR [ebx],0xffffffe9
  42050d:	test   edx,ebx
  42050f:	les    ebx,FWORD PTR [ebp+0x2f51ee8f]
  420515:	arpl   WORD PTR [edx],ax
  420517:	pop    es
  420518:	jmp    0x835c8e27
  42051d:	or     dh,al
  42051f:	icebp  
  420520:	jmp    0x34b8b4ce
  420525:	or     ch,BYTE PTR [esi+eiz*1-0x13]
  420529:	test   DWORD PTR [ecx-0x6a348aff],edx
  42052f:	lock mov ds:0xfab87f00,al
  420535:	retf   
  420536:	arpl   di,ax
  420538:	push   cs
  420539:	neg    edi
  42053b:	mov    ch,BYTE PTR [esi]
  42053d:	dec    ecx
  42053e:	cmp    BYTE PTR [ebx+0x2e34482e],cl
  420544:	cs dec edx
  420546:	adc    al,0x4f
  420548:	mov    WORD PTR cs:[edi],ss
  42054b:	jg     0x4204d3
  42054d:	js     0x4205b5
  42054f:	out    dx,eax
  420550:	icebp  
  420551:	jmp    0x78c8416e
  420556:	popa   
  420557:	out    dx,eax
  420558:	icebp  
  420559:	add    BYTE PTR [edi+0x5f330da0],ch
  42055f:	sbb    eax,0xbe5d8b0b
  420564:	xor    BYTE PTR [edx],dl
  420566:	inc    esp
  420567:	repnz lea edx,[ecx+0xa464d]
  42056e:	cli    
  42056f:	inc    edi
  420570:	xchg   BYTE PTR [ecx+0xa463c],dl
  420576:	sbb    ch,bh
  420578:	cmp    al,al
  42057a:	xchg   esp,eax
  42057b:	dec    eax
  42057c:	add    edx,0xfffffff7
  42057f:	add    eax,DWORD PTR [ecx]
  420581:	jmp    0x4205d9
  420583:	outs   dx,DWORD PTR ds:[esi]
  420584:	and    BYTE PTR [eax+0x750a436f],0x53
  42058b:	outs   dx,DWORD PTR ds:[esi]
  42058c:	and    BYTE PTR [ecx+0x750a435f],0x5b
  420593:	div    BYTE PTR [ecx-0x41d2ff15]
  420599:	retf   
  42059a:	mov    BYTE PTR [esi+0x56],ch
  42059d:	cmp    eax,eax
  42059f:	stos   DWORD PTR es:[edi],eax
  4205a0:	adc    al,0xf1
  4205a2:	jae    0x4205c2
  4205a4:	add    ecx,DWORD PTR [esi+0xa9f2d51]
  4205aa:	adc    edi,0x44
  4205ad:	xchg   BYTE PTR [ecx+0x2b],dl
  4205b0:	lahf   
  4205b1:	or     al,BYTE PTR [ebx+0x518652e7]
  4205b7:	call   FWORD PTR [esi-0x10c87cf6]
  4205bd:	lea    edx,[ecx-0x32]
  4205c0:	sahf   
  4205c1:	or     al,BYTE PTR [ebx+0x4cc3b27]
  4205c7:	out    dx,eax
  4205c8:	inc    DWORD PTR [edx-0x6b09314]
  4205ce:	add    DWORD PTR [ebx+0x7f],0xd986fff1
  4205d5:	(bad)  
  4205d6:	cld    
  4205d7:	fwait
  4205d8:	popf   
  4205d9:	sbb    al,0x40
  4205db:	xchg   cl,cl
  4205dd:	xor    dl,BYTE PTR [edx]
  4205df:	xchg   edx,eax
  4205e0:	adc    eax,0x1902ffce
  4205e5:	mov    eax,ds:0xd1cd1362
  4205ea:	add    esi,DWORD PTR [edi]
  4205ec:	rcl    DWORD PTR [ecx-0x49fabd76],cl
  4205f2:	dec    esi
  4205f3:	sbb    al,0xdb
  4205f5:	(bad)  
  4205f7:	fwait
  4205f8:	xor    edx,DWORD PTR [esi]
  4205fa:	inc    eax
  4205fb:	add    BYTE PTR [esi-0x3d8cb2a2],al
  420601:	pop    eax
  420602:	mov    ecx,0xa0a58223
  420607:	inc    edx
  420608:	in     al,dx
  420609:	fisttp DWORD PTR [eax-0x22085dbd]
  42060f:	add    esi,DWORD PTR [bp+di]
  420612:	loope  0x42063a
  420614:	pop    esi
  420615:	pop    ebx
  420616:	js     0x420615
  420618:	inc    ecx
  420619:	add    dl,0x8a
  42061c:	ret    0x23f
  42061f:	mov    eax,edx
  420621:	inc    edi
  420622:	mov    edx,0x386b2ae7
  420627:	cld    
  420628:	or     ebx,DWORD PTR [ebx+edi*4-0x319f49e2]
  42062f:	mov    bh,0xc5
  420631:	(bad)  ds:0x39d50d93
  420637:	add    esi,0x57
  42063a:	inc    DWORD PTR [eax+0x4069fb8b]
  420640:	xchg   bh,ah
  420642:	and    al,0x6
  420644:	pop    esp
  420645:	fild   DWORD PTR [eax+eax*8-0x3cc8a12]
  42064c:	fld    DWORD PTR [edx-0x34]
  42064f:	mov    ah,ah
  420651:	(bad)  
  420652:	and    al,0x8b
  420654:	inc    ebp
  420655:	fistp  QWORD PTR es:[esi]
  420658:	xchg   DWORD PTR [edx-0x47463c26],esp
  42065e:	xchg   edx,eax
  42065f:	out    0x0,eax
  420661:	pop    esi
  420662:	xchg   ebx,eax
  420663:	pop    es
  420664:	lea    edi,[ecx-0x47]
  420667:	xchg   edx,eax
  420668:	rep outs dx,BYTE PTR ds:[esi]
  42066a:	xchg   ebx,eax
  42066b:	or     ecx,DWORD PTR [ebp-0x7a83b9b7]
  420671:	xor    eax,0xc403e343
  420676:	inc    esi
  420677:	jecxz  0x420649
  420679:	push   cs
  42067a:	fisub  WORD PTR [eax+ebp*1-0x2f]
  42067e:	mov    ecx,0x9ebc8922
  420683:	popf   
  420684:	adc    eax,DWORD PTR [ecx]
  420686:	jg     0x42067f
  420688:	mov    cl,dl
  42068a:	es xchg ebp,eax
  42068c:	mov    ah,cl
  42068e:	fidiv  WORD PTR [edx]
  420690:	(bad)  
  420691:	(bad)  
  420692:	fcmovu st,st(3)
  420694:	add    BYTE PTR [ecx],bl
  420696:	in     al,dx
  420697:	fsubr  DWORD PTR [ecx+0x73c09087]
  42069d:	aad    0x43
  42069f:	jecxz  0x4206a4
  4206a1:	xor    edx,DWORD PTR [edi+0x23]
  4206a4:	adc    dh,al
  4206a6:	inc    edx
  4206a7:	dec    ebp
  4206a8:	add    al,0x23
  4206aa:	push   edi
  4206ab:	mov    bl,0x12
  4206ad:	mov    BYTE PTR [edx+0x5e],0x43
  4206b1:	xchg   ebp,eax
  4206b2:	cmp    BYTE PTR [ebx],dh
  4206b4:	mov    esp,eax
  4206b6:	fidiv  DWORD PTR [ebx]
  4206b8:	sub    al,0xa5
  4206ba:	xchg   esi,eax
  4206bb:	xor    BYTE PTR [esi],0xc0
  4206be:	add    BYTE PTR [edx],dl
  4206c0:	iret   
  4206c1:	(bad)  
  4206c2:	bnd jl 0x420682
  4206c5:	add    BYTE PTR [ecx-0x13],bh
  4206c8:	or     bh,BYTE PTR [ecx]
  4206ca:	loope  0x4206b7
  4206cc:	icebp  
  4206cd:	jmp    0xe84ccbde
  4206d2:	test   DWORD PTR [edx+0x5b],eax
  4206d5:	shr    ecx,cl
  4206d7:	mov    ecx,0x94541af4
  4206dc:	loop   0x4206f6
  4206de:	(bad)  
  4206df:	in     eax,dx
  4206e0:	icebp  
  4206e1:	ins    BYTE PTR es:[edi],dx
  4206e2:	inc    ebp
  4206e3:	jno    0x4206e3
  4206e5:	cmp    eax,0x98fe20d9
  4206ea:	or     al,0x6
  4206ec:	jecxz  0x420760
  4206ee:	cdq    
  4206ef:	jmp    0x4206e2
  4206f1:	(bad)  
  4206f2:	mov    ebx,0x50e90702
  4206f7:	jno    0x42071f
  4206f9:	in     eax,0xc
  4206fb:	lods   eax,DWORD PTR ds:[esi]
  4206fc:	icebp  
  4206fd:	xchg   ebp,eax
  4206fe:	pop    ecx
  4206ff:	cmp    cl,dh
  420701:	jge    0x420754
  420703:	cmp    BYTE PTR [ecx+edx*1+0x2e],bl
  420707:	or     ecx,DWORD PTR [ebx]
  420709:	jmp    0x2b4c3ed5
  42070e:	pop    ecx
  42070f:	in     al,dx
  420710:	push   esi
  420711:	jb     0x4206b1
  420713:	ret    0xe1e6
  420716:	inc    DWORD PTR [eax+0x476e69fe]
  42071c:	pop    ebp
  42071d:	aaa    
  42071e:	dec    ebx
  42071f:	ret    
  420720:	repnz les ecx,FWORD PTR [ebx-0x7a17823a]
  420727:	inc    edx
  420728:	add    DWORD PTR [edi+0x0],ebp
  42072b:	push   ds
  42072c:	in     eax,dx
  42072d:	icebp  
  42072e:	jmp    0xf733fb39
  420733:	xchg   edx,eax
  420734:	xor    cl,BYTE PTR [ebx]
  420736:	jmp    0xe1b9f4c0
  42073b:	mov    edx,0xc5f57250
  420740:	jmp    0x4206c6
  420742:	add    BYTE PTR [edi],al
  420744:	ins    BYTE PTR es:[edi],dx
  420745:	out    dx,al
  420746:	packsswb mm2,QWORD PTR [ebx]
  420749:	icebp  
  42074a:	(bad)  
  42074b:	out    dx,eax
  42074c:	ret    0x2445
  42074f:	mov    bl,0x36
  420751:	push   esi
  420752:	call   edx
  420754:	sbb    DWORD PTR [edx],0x40
  420757:	fcomip st,st(2)
  420759:	ror    BYTE PTR [ecx-0x41fdf40d],cl
  42075f:	scas   eax,DWORD PTR es:[edi]
  420760:	jmp    0x420753
  420762:	jmp    DWORD PTR [edx]
  420764:	xchg   BYTE PTR [edi+0x24],ch
  420767:	adc    DWORD PTR [ebx],edx
  420769:	push   edi
  42076a:	inc    edx
  42076c:	ja     0x420788
  42076e:	inc    eax
  42076f:	scas   eax,DWORD PTR es:[edi]
  420770:	imul   esi,DWORD PTR [ecx+0x5afd8f79],0x57
  420777:	push   0x82ff099b
  42077c:	jnp    0x420798
  42077e:	inc    eax
  42077f:	outs   dx,DWORD PTR ds:[esi]
  420780:	mov    eax,0x2532455
  420785:	xor    ebx,DWORD PTR [ebx+eax*2+0x4f]
  420789:	outs   dx,BYTE PTR ds:[esi]
  42078a:	fmul   st(6),st
  42078c:	sahf   
  42078d:	mov    ecx,0x366f0043
  420792:	mov    eax,ds:0xa3f5e04
  420797:	(bad)  
  420798:	out    dx,eax
  420799:	ds icebp 
  42079b:	jmp    FWORD PTR [edi]
  42079d:	(bad)  
  42079e:	out    dx,al
  42079f:	jne    0x4207c8
  4207a1:	ss sbb al,0x8
  4207a4:	push   ebx
  4207a5:	push   ecx
  4207a7:	mov    ah,bh
  4207a9:	shl    edx,0xff
  4207ac:	sub    BYTE PTR [ebx-0x7],ch
  4207af:	add    BYTE PTR [edi],ch
  4207b1:	aas    
  4207b2:	pop    eax
  4207b3:	push   ebx
  4207b4:	push   eax
  4207b5:	xor    eax,0xff0cc81c
  4207ba:	icebp  
  4207bb:	mov    BYTE PTR [esi-0x40f015e3],al
  4207c1:	sbb    eax,0xdb7a13ea
  4207c6:	ss adc ah,dh
  4207c9:	pop    es
  4207ca:	into   
  4207cb:	jmp    FWORD PTR [ecx+0x59]
  4207ce:	icebp  
  4207cf:	(bad)  
  4207d0:	fld    DWORD PTR [edi-0x41]
  4207d3:	cld    
  4207d4:	pop    ebx
  4207d5:	icebp  
  4207d6:	adc    dh,BYTE PTR ss:[edx+0x4ffcde7]
  4207dd:	push   ss
  4207de:	or     bh,dh
  4207e0:	mov    DWORD PTR [ebp+0x30],esp
  4207e3:	push   DWORD PTR [ecx+0x62431fd8]
  4207e9:	or     DWORD PTR [ebx],ecx
  4207eb:	or     eax,0xd6f0b
  4207f0:	xchg   BYTE PTR [ebx],dh
  4207f2:	mov    cl,0x23
  4207f4:	add    BYTE PTR [esi-0x17],dh
  4207f7:	mov    eax,ds:0x36b43542
  4207fc:	adc    dl,BYTE PTR [esi+0xcffcde7]
  420802:	dec    esp
  420803:	jo     0x4207fa
  420805:	adc    DWORD PTR [edi+0x6c],0x88dc69ff
  42080c:	inc    ebx
  42080d:	stos   BYTE PTR es:[edi],al
  42080e:	adc    ebx,esi
  420810:	push   eax
  420811:	mov    cl,0xd8
  420813:	lahf   
  420814:	pop    es
  420815:	push   ecx
  420816:	out    0x19,eax
  420818:	adc    al,0xc6
  42081a:	fild   DWORD PTR [edx+0x6f5791bf]
  420820:	(bad)  
  420821:	cmp    esp,ebx
  420823:	(bad)  
  420824:	push   DWORD PTR [eax]
  420826:	daa    
  420827:	out    dx,al
  420828:	cld    
  420829:	mov    dl,0x3f
  42082b:	jmp    0x8667:0xe2379afc
  420832:	sbb    eax,DWORD PTR [esi]
  420834:	add    BYTE PTR [eax-0x35e657be],bh
  42083a:	push   ebp
  42083b:	and    eax,DWORD PTR [edi+ebp*8]
  42083e:	pop    eax
  42083f:	nop
  420840:	enter  0x52a5,0xe3
  420844:	sti    
  420845:	icebp  
  420846:	jmp    0x2f9103a
  42084b:	popf   
  42084c:	add    DWORD PTR [edi],esi
  42084e:	xchg   ecx,eax
  42084f:	js     0x42086a
  420851:	jle    0x4208a1
  420853:	and    eax,DWORD PTR [edi+eax*1]
  420856:	jmp    0x4208c0
  420858:	mov    eax,0xe35c3600
  42085d:	add    bh,bl
  42085f:	add    dh,BYTE PTR [ebx+ebx*4+0x3e34388]
  420866:	mov    bl,0x6f
  420868:	sti    
  420869:	xor    dl,BYTE PTR [esi+eax*1-0x235e3c2b]
  420870:	test   BYTE PTR [edx],0xd3
  420873:	adc    ah,BYTE PTR [ebx]
  420875:	sbb    al,0x81
  420877:	mov    ebx,0x396de79f
  42087c:	pop    eax
  42087d:	inc    ebp
  42087e:	out    dx,eax
  42087f:	inc    edx
  420880:	sbb    BYTE PTR [ecx-0x1858447f],bh
  420886:	test   eax,0xde141b03
  42088b:	mov    cl,BYTE PTR [ebx-0x39]
  42088e:	popa   
  42088f:	mov    dh,0x9f
  420891:	out    0xa5,eax
  420893:	mov    ebx,0xbba5e797
  420898:	aaa    
  420899:	call   0xf7abe337
  42089e:	inc    ecx
  42089f:	jmp    0x2f7d0870
  4208a4:	dec    ebx
  4208a5:	ins    BYTE PTR es:[edi],dx
  4208a6:	mov    BYTE PTR [edx-0x38],0x18
  4208aa:	mov    dl,0x4e
  4208ac:	and    eax,DWORD PTR [ebx+eiz*1]
  4208af:	das    
  4208b0:	or     cl,BYTE PTR [ebp-0x56]
  4208b3:	or     BYTE PTR [edx],0xae
  4208b6:	outs   dx,BYTE PTR ds:[esi]
  4208b7:	push   cs
  4208b8:	sbb    eax,0x50878229
  4208bd:	fiadd  DWORD PTR [eax]
  4208bf:	inc    ebp
  4208c0:	mov    al,BYTE PTR [ebp+0x302d68c]
  4208c6:	jmp    0x6b20c299
  4208cb:	mov    DWORD PTR [ebp-0x8],esp
  4208ce:	in     al,0xe5
  4208d0:	pushf  
  4208d1:	dec    ebp
  4208d2:	jmp    0x81627758
  4208d7:	adc    ch,BYTE PTR [eax+esi*8+0x76a90166]
  4208de:	add    al,0x20
  4208e0:	jmp    0x794bb563
  4208e5:	bound  ebx,QWORD PTR [edx+esi*8+0x2d]
  4208e9:	and    edx,DWORD PTR [ecx+0x1d]
  4208ec:	stos   BYTE PTR es:[edi],al
  4208ed:	lock ds push esp
  4208f0:	je     0x42090c
  4208f2:	fs into 
  4208f4:	int3   
  4208f5:	icebp  
  4208f6:	mov    ah,0x91
  4208f8:	in     eax,0x77
  4208fa:	icebp  
  4208fb:	mov    ch,0xe5
  4208fd:	pop    ss
  4208fe:	in     eax,dx
  4208ff:	cdq    
  420900:	or     BYTE PTR [edx],0x2
  420903:	test   ch,ah
  420905:	ja     0x420900
  420907:	mov    ah,0x74
  420909:	inc    BYTE PTR ds:0xd4f1402e
  42090f:	rcl    DWORD PTR [ebx+0x4a],1
  420912:	jmp    0xe9410ab1
  420917:	pop    DWORD PTR [edx+ebp*1-0x6b]
  42091b:	inc    ebx
  42091c:	call   0xdac95e2e
  420921:	icebp  
  420922:	xchg   ebp,eax
  420923:	add    BYTE PTR [esi+eiz*8-0x7a],dh
  420927:	test   eax,0x3d3dee
  42092c:	(bad)  
  42092e:	retf   
  42092f:	add    al,0x2f
  420931:	xor    ebp,DWORD PTR [eax+esi*1]
  420934:	cmp    al,BYTE PTR [edx+esi*8]
  420937:	push   esp
  420938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420939:	and    dh,bh
  42093b:	add    eax,0x4a883f
  420940:	jmp    0x42094b
  420942:	xor    DWORD PTR [ebp-0x1d],0xffffffaf
  420946:	adc    al,ch
  420948:	xor    eax,0x5bffef73
  42094d:	jle    0x4209cc
  42094f:	sbb    ah,al
  420951:	lock push ecx
  420953:	mov    eax,0x107d3eac
  420958:	pusha  
  420959:	scas   eax,DWORD PTR es:[edi]
  42095a:	add    DWORD PTR [ebx+0x75ef5012],ecx
  420960:	mov    bh,0x4b
  420962:	mov    esp,0xe23150fd
  420967:	adc    BYTE PTR [eax-0x51],al
  42096a:	sbb    eax,0x5853eaff
  42096f:	(bad)  
  420970:	(bad)  
  420972:	out    dx,al
  420973:	adc    eax,0x4a4b0b
  420978:	add    ecx,edi
  42097a:	retf   
  42097b:	adc    BYTE PTR [edi-0x66137cf0],bl
  420981:	aas    
  420982:	sub    ch,BYTE PTR [esp+ebp*1+0x560643]
  420989:	in     al,0xaf
  42098b:	add    eax,0x9d4b3e74
  420990:	mov    esp,0xc08d3261
  420995:	fstp   TBYTE PTR [ebx]
  420997:	xor    esi,DWORD PTR ds:0x4a5aff
  42099d:	stos   BYTE PTR es:[edi],al
  42099e:	dec    esi
  42099f:	out    dx,eax
  4209a0:	jne    0x4209e1
  4209a2:	inc    sp
  4209a4:	adc    al,0x86
  4209a6:	adc    BYTE PTR [ecx+0x21281e07],bh
  4209ac:	cld    
  4209ad:	sub    DWORD PTR [esi+ebx*1],edx
  4209b0:	std    
  4209b1:	fwait
  4209b2:	or     eax,0x4776723b
  4209b7:	cmp    esi,DWORD PTR [edx+0x7e]
  4209ba:	cwde   
  4209bb:	sbb    BYTE PTR [ebx+esi*2],bh
  4209be:	sbb    DWORD PTR [esi],eax
  4209c0:	pop    esi
  4209c1:	arpl   WORD PTR [ebx+0x6453001d],bx
  4209c7:	adc    ebp,esi
  4209c9:	mov    edi,ecx
  4209cb:	push   ecx
  4209cc:	inc    eax
  4209cd:	xchg   ch,dl
  4209cf:	ror    DWORD PTR [eax+0x1eb9d55b],cl
  4209d5:	out    dx,al
  4209d6:	push   ds
  4209d7:	jp     0x4209d6
  4209d9:	rcr    DWORD PTR [ebp+ecx*2+0x73],1
  4209dd:	outs   dx,BYTE PTR ds:[esi]
  4209de:	and    al,0xf9
  4209e0:	pop    edi
  4209e1:	(bad)  
  4209e2:	fwait
  4209e3:	or     eax,0xb8909673
  4209e8:	paddw  mm0,mm5
  4209eb:	sbb    ebp,edi
  4209ed:	add    BYTE PTR [ebx],dh
  4209ef:	icebp  
  4209f0:	adc    eax,0x3a27a326
  4209f5:	call   0x13fa3a70
  4209fa:	xchg   ecx,eax
  4209fb:	lods   eax,DWORD PTR ds:[esi]
  4209fc:	sbb    eax,0xf5c58956
  420a01:	cld    
  420a02:	fwait
  420a03:	das    
  420a04:	sbb    DWORD PTR [eax-0x7a],eax
  420a07:	lods   eax,DWORD PTR ds:[esi]
  420a08:	rol    cl,0x96
  420a0b:	fcmovnu st,st(0)
  420a0d:	mov    BYTE PTR [edx-0x1a],bl
  420a10:	pop    es
  420a11:	and    BYTE PTR [edx],dh
  420a13:	cdq    
  420a14:	or     eax,0xb860b004
  420a19:	or     ebx,edx
  420a1b:	cli    
  420a1c:	adc    eax,0xe9430a07
  420a21:	das    
  420a22:	add    eax,0x7f0c5803
  420a27:	das    
  420a28:	inc    ebx
  420a29:	ins    BYTE PTR es:[edi],dx
  420a2a:	mov    BYTE PTR [edx+0x56],0x14
  420a2e:	sub    esi,DWORD PTR [eax-0x2d]
  420a31:	jp     0x4209ff
  420a33:	dec    esi
  420a34:	mov    al,0xb9
  420a36:	sbb    edx,0xe61230c4
  420a3c:	int3   
  420a3d:	adc    al,0xb
  420a3f:	jo     0x420a30
  420a41:	cs je  0x420a96
  420a44:	cmp    DWORD PTR [edi],ebp
  420a46:	je     0x420a82
  420a48:	cwde   
  420a49:	sbb    DWORD PTR [edx+0x4804234f],esp
  420a4f:	xchg   DWORD PTR [ebp-0x7079ffec],esp
  420a55:	jl     0x420a77
  420a57:	sar    DWORD PTR [edi],cl
  420a59:	ret    
  420a5a:	pop    edi
  420a5b:	inc    esi
  420a5c:	inc    edx
  420a5d:	out    0xd5,eax
  420a5f:	(bad)  
  420a60:	outs   dx,DWORD PTR ds:[esi]
  420a61:	repz mov bh,0xa0
  420a64:	fisub  DWORD PTR ds:0x5fe5bb6b
  420a6a:	inc    esp
  420a6b:	xor    eax,0x49f91c4a
  420a70:	stos   BYTE PTR es:[edi],al
  420a71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a72:	add    edx,DWORD PTR ds:0x75b93052
  420a78:	mov    ecx,0x6f930ba6
  420a7d:	jmp    0x420a9a
  420a7f:	in     al,dx
  420a80:	out    0x28,al
  420a82:	das    
  420a83:	outs   dx,BYTE PTR ds:[esi]
  420a84:	push   ecx
  420a85:	adc    BYTE PTR [ecx+0x178ee591],bh
  420a8b:	fsub   st,st(5)
  420a8d:	xchg   esi,eax
  420a8e:	jmp    FWORD PTR [edx+0x6f]
  420a91:	sti    
  420a92:	cs je  0x420a5b
  420a95:	xlat   BYTE PTR ds:[ebx]
  420a96:	ret    
  420a97:	pop    ecx
  420a98:	xchg   DWORD PTR [edx],ecx
  420a9a:	xchg   esp,eax
  420a9b:	(bad)  
  420a9c:	push   ecx
  420a9d:	or     dl,BYTE PTR [esp+ecx*8+0x25ecf8d9]
  420aa4:	cdq    
  420aa5:	dec    ebp
  420aa6:	jmp    0x5cc7972c
  420aab:	call   0xf0a9:0xdac12b6e
  420ab2:	(bad)  
  420ab3:	or     DWORD PTR [ebp+0x2c00e176],esp
  420ab9:	xor    BYTE PTR [edx+0x71],ch
  420abc:	inc    esp
  420abd:	in     eax,0x76
  420abf:	fstp   DWORD PTR [eax+0x70]
  420ac2:	push   ss
  420ac3:	jb     0x420a8b
  420ac5:	dec    esp
  420ac6:	icebp  
  420ac7:	adc    al,0xfa
  420ac9:	fcom   QWORD PTR [esi-0x6b]
  420acc:	mov    al,ds:0x98fae5e6
  420ad1:	jo     0x420ae5
  420ad3:	xchg   BYTE PTR [esi],bl
  420ad5:	push   ecx
  420ad6:	pop    eax
  420ad7:	jle    0x420af7
  420ad9:	cmp    ecx,esi
  420adb:	cld    
  420adc:	int    0xe5
  420ade:	pop    ss
  420adf:	xchg   ecx,eax
  420ae0:	jno    0x420a64
  420ae2:	or     al,bh
  420ae4:	(bad)  
  420ae5:	add    dl,BYTE PTR [edi]
  420ae7:	jmp    0x6020c4ca
  420aec:	jle    0x420b10
  420aee:	sahf   
  420aef:	stos   BYTE PTR es:[edi],al
  420af0:	test   DWORD PTR [esi],edi
  420af2:	pop    eax
  420af3:	jb     0x420ad3
  420af5:	cmp    BYTE PTR [esi+0x8],dh
  420af8:	jp     0x420b0f
  420afa:	mov    ch,0x37
  420afc:	pusha  
  420afd:	ror    edx,0xb5
  420b00:	jge    0x420b2d
  420b02:	aaa    
  420b03:	mov    ebp,ebp
  420b05:	or     BYTE PTR [edx],0x94
  420b08:	xchg   ebp,eax
  420b09:	in     eax,0x77
  420b0b:	stc    
  420b0c:	in     al,dx
  420b0d:	js     0x420b25
  420b0f:	push   cs
  420b10:	cs cmp al,0xe2
  420b13:	add    BYTE PTR [esp+edx*1-0x12],dl
  420b17:	push   DWORD PTR [edi+ecx*2-0x11]
  420b1b:	jne    0x420b1d
  420b1d:	xor    edx,DWORD PTR ds:0x14f1107c
  420b23:	jl     0x420b2d
  420b25:	sub    BYTE PTR [esi+esi*1+0x15],cl
  420b29:	outs   dx,DWORD PTR ds:[esi]
  420b2a:	ds push eax
  420b2c:	pop    ebp
  420b2d:	fisttp QWORD PTR [esi+0xa]
  420b30:	push   ebp
  420b31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b32:	and    dh,bh
  420b34:	add    eax,0x4a628f
  420b39:	and    ecx,DWORD PTR [esi]
  420b3b:	xor    DWORD PTR [ebp+0x2b],0xffffffac
  420b3f:	adc    al,ch
  420b41:	inc    ebp
  420b42:	pop    ecx
  420b43:	out    dx,eax
  420b44:	push   DWORD PTR [ebx+0x7e]
  420b47:	jge    0x420b61
  420b49:	in     al,0xec
  420b4b:	push   ecx
  420b4c:	mov    eax,0x107d3e9c
  420b51:	clc    
  420b52:	stos   DWORD PTR es:[edi],eax
  420b53:	add    DWORD PTR [ebx+0x75ef4a9a],ecx
  420b59:	xlat   BYTE PTR ds:[ebx]
  420b5a:	inc    edi
  420b5b:	int3   
  420b5c:	sti    
  420b5d:	pop    eax
  420b5e:	adc    eax,0xab5810e2
  420b63:	sbb    eax,0x584fe2ff
  420b68:	call   edx
  420b6a:	out    0xee,eax
  420b6c:	adc    eax,0x4a4b87
  420b71:	fxtract 
  420b73:	retf   
  420b74:	adc    BYTE PTR [edi+0x51ec830c],ch
  420b7a:	cmp    ebp,DWORD PTR [edx]
  420b7c:	lods   al,BYTE PTR ds:[esi]
  420b7d:	fdivr  QWORD PTR [edi]
  420b7f:	push   es
  420b80:	push   esi
  420b81:	add    BYTE PTR [ebx+ebp*4],ah
  420b84:	add    DWORD PTR [esi+ecx*2+0x47],esi
  420b88:	lods   eax,DWORD PTR ds:[esi]
  420b89:	mov    edx,0xc08d1599
  420b8e:	xchg   ch,al
  420b90:	add    eax,0x65b9b339
  420b95:	inc    eax
  420b96:	xchg   BYTE PTR [esi+0x1d],ah
  420b99:	std    
  420b9a:	ror    DWORD PTR ds:0xec6e4a73,cl
  420ba0:	mov    eax,0x22545e0b
  420ba5:	cld    
  420ba6:	inc    ecx
  420ba7:	adc    BYTE PTR [ebx],bl
  420ba9:	std    
  420baa:	mov    bl,0x41
  420bac:	pop    ds
  420bad:	jb     0x420b49
  420baf:	and    ebx,DWORD PTR [edi]
  420bb1:	jb     0x420c2d
  420bb3:	hlt    
  420bb4:	mov    eax,0x56062107
  420bb9:	adc    eax,esi
  420bbb:	fnstcw WORD PTR [edi+0xe05445a]
  420bc1:	push   ebx
  420bc2:	std    
  420bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bc4:	aaa    
  420bc5:	add    ah,BYTE PTR [esi-0x7a003573]
  420bcb:	sub    esi,DWORD PTR [ebx+0x72]
  420bce:	xchg   esi,eax
  420bcf:	inc    ebp
  420bd0:	in     eax,dx
  420bd1:	out    0x4d,eax
  420bd3:	(bad)  
  420bd4:	pop    ds
  420bd5:	cld    
  420bd6:	or     bl,BYTE PTR [ecx-0x5162e847]
  420bdc:	lods   eax,DWORD PTR ds:[esi]
  420bdd:	mov    bh,0x45
  420bdf:	fnstcw WORD PTR [eax+0x19edc90f]
  420be5:	mov    DWORD PTR [eax],eax
  420be7:	push   ebx
  420be8:	inc    ecx
  420be9:	pop    ds
  420bea:	jb     0x420b76
  420bec:	xchg   ecx,eax
  420bed:	idiv   eax
  420bef:	mov    cl,0x8b
  420bf1:	adc    dl,BYTE PTR [eax]
  420bf3:	test   eax,0x1bfd060d
  420bf8:	add    eax,0xd513fcd8
  420bfd:	push   ds
  420bfe:	jb     0x420c7e
  420c00:	sub    al,0x18
  420c02:	lods   al,BYTE PTR ds:[esi]
  420c03:	jb     0x420b9e
  420c05:	or     eax,0x2542e35e
  420c0a:	pop    ss
  420c0b:	xchg   BYTE PTR ds:0x829567e6,bl
  420c11:	jecxz  0x420bc9
  420c13:	sbb    DWORD PTR [edx+0x42a032d4],0x24
  420c1a:	call   0xc4182aa3
  420c1f:	push   ecx
  420c20:	push   edi
  420c21:	loope  0x420c8e
  420c23:	rcl    bl,1
  420c25:	mov    ds:0xde1e4703,al
  420c2a:	out    dx,eax
  420c2b:	xchg   esp,eax
  420c2c:	and    bl,0xb0
  420c2f:	mov    ebx,DWORD PTR [edx+0x426836b6]
  420c35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c36:	fild   WORD PTR [edx+ebp*1-0x26e63c32]
  420c3d:	stos   DWORD PTR es:[edi],eax
  420c3e:	cmovbe ebx,edx
  420c41:	xchg   ebx,eax
  420c42:	loope  0x420caa
  420c44:	aad    0x22
  420c46:	add    al,0xc7
  420c48:	ja     0x420cc6
  420c4a:	sbb    BYTE PTR [eax],al
  420c4c:	push   es
  420c4d:	out    dx,eax
  420c4e:	(bad)  [ecx]
  420c50:	test   BYTE PTR [edx],ah
  420c52:	inc    edi
  420c53:	(bad)  
  420c54:	jmp    0x54c1459e
  420c59:	dec    edx
  420c5a:	out    dx,eax
  420c5b:	fabs   
  420c5d:	cmc    
  420c5e:	dec    edx
  420c5f:	sub    dl,dl
  420c61:	(bad)  
  420c62:	mov    ds:0x79c7a4b0,eax
  420c67:	mov    al,0xa0
  420c69:	int    0xa1
  420c6b:	jmp    DWORD PTR [ecx-0x4dd4af42]
  420c71:	(bad)  
  420c72:	and    esi,DWORD PTR [eax-0x2df4936c]
  420c78:	or     al,0x90
  420c7a:	sub    edx,ebp
  420c7c:	mov    eax,ds:0x922a9c19
  420c81:	retf   
  420c82:	or     ch,BYTE PTR [ecx+eax*2+0x5a1147cc]
  420c89:	jmp    0xf5ba:0x34acbf0b
  420c90:	inc    ebp
  420c91:	loope  0x420ce2
  420c93:	and    al,al
  420c95:	inc    ebp
  420c96:	or     dh,BYTE PTR [eax+eiz*8+0x3a158ded]
  420c9d:	xlat   BYTE PTR ds:[ebx]
  420c9e:	pop    es
  420c9f:	leave  
  420ca0:	mov    ecx,0x37ed0a82
  420ca5:	retf   0xe177
  420ca8:	icebp  
  420ca9:	cs loop 0x420d1b
  420cac:	stos   BYTE PTR es:[edi],al
  420cad:	fcomip st,st(1)
  420caf:	gs add ch,al
  420cb2:	push   ebp
  420cb3:	daa    
  420cb4:	ins    BYTE PTR es:[edi],dx
  420cb5:	ja     0x420d0c
  420cb7:	sub    esp,DWORD PTR [edx+0x47]
  420cba:	inc    ebp
  420cbb:	loop   0x420cf3
  420cbd:	ins    DWORD PTR es:[edi],dx
  420cbe:	fdivrp st(1),st
  420cc0:	lds    edx,FWORD PTR fs:[ebp+0x17]
  420cc4:	inc    ebx
  420cc5:	sub    dh,BYTE PTR [edi+0x7f]
  420cc8:	sbb    al,0x52
  420cca:	nop
  420ccb:	loop   0x420c60
  420ccd:	pop    ebx
  420cce:	fcomip st,st(1)
  420cd0:	jo     0x420c98
  420cd2:	cld    
  420cd3:	jg     0x420d01
  420cd5:	cmp    dl,BYTE PTR [ecx-0x2248171b]
  420cdb:	pop    ss
  420cdc:	popa   
  420cdd:	mov    DWORD PTR [edx+0x3931f0a],eax
  420ce3:	pop    es
  420ce4:	jmp    0x6b20d69f
  420ce9:	cdq    
  420cea:	xor    eax,edi
  420cec:	in     al,dx
  420ced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cee:	lods   al,BYTE PTR ds:[esi]
  420cef:	dec    ebp
  420cf0:	jmp    0xdcc783a6
  420cf5:	lods   eax,DWORD PTR ds:[esi]
  420cf6:	push   esp
  420cf7:	cmp    eax,0xf097b241
  420cfc:	add    BYTE PTR [eax+0x61],al
  420cff:	mov    cl,0x74
  420d01:	jne    0x420cc6
  420d03:	div    DWORD PTR [ecx+edi*2-0x37]
  420d07:	das    
  420d08:	xor    BYTE PTR [edx],bh
  420d0a:	out    0x82,eax
  420d0c:	inc    esi
  420d0d:	ja     0x420d4b
  420d0f:	hlt    
  420d10:	(bad)  
  420d11:	nop
  420d12:	sub    al,0x8c
  420d14:	rol    BYTE PTR [eax],0xb
  420d17:	xor    esp,DWORD PTR [eax+esi*1+0x19]
  420d1b:	pop    ebx
  420d1c:	inc    esp
  420d1d:	sar    dh,1
  420d1f:	cmp    ebx,DWORD PTR [ecx-0x77d5ae56]
  420d25:	inc    ebp
  420d26:	ja     0x420d82
  420d28:	dec    esp
  420d29:	rcr    BYTE PTR [edi],1
  420d2b:	inc    ecx
  420d2c:	lock push ebp
  420d2e:	and    BYTE PTR [eax-0xa],dl
  420d31:	adc    al,0x5f
  420d33:	inc    esi
  420d34:	push   eax
  420d35:	leave  
  420d36:	fld    QWORD PTR [edx+0xa]
  420d39:	push   ebp
  420d3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d3b:	cmp    cl,BYTE PTR [edx+0xc121fec]
  420d41:	and    BYTE PTR [ebx],al
  420d43:	push   es
  420d44:	repnz add ebp,DWORD PTR [ecx+0x5d]
  420d48:	jl     0x420d52
  420d4a:	mov    ebx,0x67e7e9d5
  420d4f:	sub    al,0xee
  420d51:	test   BYTE PTR [edi],bl
  420d53:	xchg   ebx,eax
  420d54:	and    eax,DWORD PTR [ebp-0x7cd86cf7]
  420d5a:	rcl    ebx,1
  420d5c:	jl     0x420d7f
  420d5e:	push   esp
  420d5f:	add    al,0xa
  420d61:	call   0x30399a
  420d66:	pop    edx
  420d67:	xchg   BYTE PTR [ebp+0x15],bh
  420d6a:	test   esi,edx
  420d6c:	push   edi
  420d6d:	(bad)  
  420d6e:	bnd jae 0x420db1
  420d71:	call   0x318b5f
  420d76:	xchg   BYTE PTR [edx-0x4f],ah
  420d79:	xlat   BYTE PTR ds:[ebx]
  420d7a:	add    BYTE PTR [ebx],dl
  420d7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d7d:	pop    ebp
  420d7e:	dec    edi
  420d7f:	lods   eax,DWORD PTR ds:[esi]
  420d80:	jmp    0x401a:0x117bfcdb
  420d87:	xchg   BYTE PTR [edi-0x16753ecc],dh
  420d8d:	xchg   BYTE PTR [ebx-0x5e],bh
  420d90:	in     eax,dx
  420d91:	pop    es
  420d92:	push   esi
  420d93:	std    
  420d94:	cmp    ebx,esi
  420d96:	mov    ch,0x7e
  420d98:	mov    esi,0xe35f80d9
  420d9d:	mov    eax,ds:0xf942051b
  420da2:	jb     0x420d57
  420da4:	scas   eax,DWORD PTR es:[edi]
  420da5:	faddp  st(5),st
  420da7:	aad    0xe4
  420da9:	lea    esi,[edi-0x79]
  420dac:	jecxz  0x420d4e
  420dae:	add    ch,BYTE PTR [ebx+ebp*8+0x3c85e8c5]
  420db5:	inc    esi
  420db6:	aas    
  420db7:	(bad)  
  420db8:	jmp    0xc:0xeb49050e
  420dbf:	xchg   cl,ch
  420dc1:	idiv   BYTE PTR [edi-0x7f170b3a]
  420dc7:	pavgw  mm5,QWORD PTR [ecx-0x66dfacb]
  420dce:	jge    0x420dbd
  420dd0:	imul   esp,DWORD PTR [edx+ecx*1],0x7a
  420dd4:	mov    al,0x8c
  420dd6:	test   BYTE PTR [ebx],0xe9
  420dd9:	or     eax,0x8cd15a00
  420dde:	test   BYTE PTR [eax],0xa1
  420de1:	or     DWORD PTR [esi],ecx
  420de3:	add    BYTE PTR [eax-0x3],dl
  420de6:	mov    esi,?
  420de8:	lahf   
  420de9:	or     DWORD PTR [esi],ecx
  420deb:	add    BYTE PTR [ecx-0xb],al
  420dee:	dec    edx
  420def:	add    DWORD PTR [ebp-0x79fc1cbe],eax
  420df5:	jmp    0x420e16
  420df7:	hlt    
  420df8:	jmp    0x8e21ad15
  420dfd:	dec    edi
  420dfe:	jbe    0x420e43
  420e00:	pop    ecx
  420e01:	jmp    0x420e74
  420e03:	hlt    
  420e04:	sar    DWORD PTR [edi+0x25],1
  420e07:	sti    
  420e08:	mov    DWORD PTR [esi+0x46a5a764],eax
  420e0e:	in     eax,0xf8
  420e10:	xor    ecx,DWORD PTR [ebx-0x72]
  420e13:	sysret 
  420e15:	fdiv   st(5),st
  420e17:	scas   eax,DWORD PTR es:[edi]
  420e18:	(bad)  
  420e19:	adc    DWORD PTR [ebx],esp
  420e1b:	test   BYTE PTR [eax+0x50],bl
  420e1e:	xchg   esi,eax
  420e1f:	sahf   
  420e20:	inc    edx
  420e21:	inc    ecx
  420e22:	loop   0x420e27
  420e24:	xchg   BYTE PTR [edx+0x1c],al
  420e27:	mov    DWORD PTR [esi],0x82afeddc
  420e2d:	pop    esp
  420e2e:	mov    edx,0x69503084
  420e33:	fdiv   DWORD PTR [eax-0x79fb9925]
  420e39:	inc    edx
  420e3a:	dec    edi
  420e3b:	or     al,0xa1
  420e3d:	fisttp DWORD PTR [eax]
  420e3f:	in     al,0x19
  420e41:	fimul  WORD PTR [ecx-0x20]
  420e44:	add    BYTE PTR [eax+0x9e41adb],dl
  420e4a:	fidivr WORD PTR [eax]
  420e4c:	or     bl,cl
  420e4e:	inc    eax
  420e4f:	in     al,0x3
  420e51:	xchg   BYTE PTR [edx-0x64],al
  420e54:	(bad)  
  420e55:	mov    dh,0x2
  420e57:	jmp    0x420e18
  420e59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e5a:	dec    esi
  420e5b:	call   0x8cc52ff0
  420e60:	in     al,0xc2
  420e62:	inc    eax
  420e63:	loop   0x420e68
  420e65:	xchg   BYTE PTR [edx-0x64],al
  420e68:	or     dl,BYTE PTR [edi-0x6c7df4fe]
  420e6e:	sbb    eax,DWORD PTR [esi-0x3b]
  420e71:	mov    ebp,0xe2690557
  420e76:	fdivp  st(7),st
  420e78:	rol    DWORD PTR [esi+0x7cb10c68],cl
  420e7e:	inc    edx
  420e7f:	cmp    eax,0xcc4c229
  420e84:	cli    
  420e85:	inc    ebp
  420e86:	sbb    eax,0x4f85edcc
  420e8b:	mov    ecx,0xc741ff29
  420e90:	jns    0x420eaa
  420e92:	sbb    eax,0x12d7da0a
  420e97:	ret    
  420e98:	xchg   DWORD PTR [ebp+ecx*4+0xc],ebx
  420e9c:	call   0x4e59:0xb9857492
  420ea3:	mov    ecx,0x3c31cff8
  420ea8:	mov    ebx,0xdb107500
  420ead:	test   al,0xbd
  420eaf:	xor    DWORD PTR [eax],esi
  420eb1:	xchg   DWORD PTR [eax*4+0x7f935b0c],ebp
  420eb8:	add    DWORD PTR [esi-0x1237bcbb],edx
  420ebe:	sub    eax,0xa8deccdd
  420ec3:	popf   
  420ec4:	jg     0x420eb3
  420ec6:	(bad)  
  420ec7:	lods   eax,DWORD PTR ds:[esi]
  420ec8:	push   0xc3138229
  420ecd:	cli    
  420ece:	push   edi
  420ecf:	addr16 xor eax,0x25538421
  420ed5:	cmp    al,cl
  420ed7:	leave  
  420ed8:	jb     0x420ebf
  420eda:	lock xchg esi,eax
  420edc:	adc    ah,dh
  420ede:	jo     0x420eeb
  420ee0:	imul   ebx,esi,0x11963
  420ee6:	adc    ecx,0x2b0c66f2
  420eec:	mov    dl,0xff
  420eee:	scas   eax,DWORD PTR es:[edi]
  420eef:	inc    eax
  420ef0:	or     ah,BYTE PTR [esi-0x34]
  420ef3:	daa    
  420ef4:	dec    ebx
  420ef5:	ss in  ax,0x3f
  420ef9:	data16 test BYTE PTR fs:[ebx],0x72
  420efe:	push   esi
  420eff:	add    al,0x53
  420f01:	(bad)  
  420f03:	add    BYTE PTR [ebx+esi*1],cl
  420f06:	push   esi
  420f07:	mov    edi,0x7fe10c88
  420f0c:	add    BYTE PTR [ecx+0x0],0x23
  420f10:	inc    ecx
  420f11:	inc    esi
  420f12:	and    al,0x67
  420f14:	jmp    0x420f07
  420f16:	(bad)  
  420f17:	mov    edi,0x301d773f
  420f1c:	and    eax,0x5b6b247d
  420f21:	js     0x420f73
  420f23:	mov    BYTE PTR [ebx-0x5377f3d3],ch
  420f29:	or     eax,0xee7e00e8
  420f2e:	call   FWORD PTR [eax]
  420f30:	ret    
  420f31:	mov    cl,0x74
  420f33:	and    edx,DWORD PTR [eax-0x10]
  420f36:	jmp    0x4037:0xc2b1d21d
  420f3d:	add    DWORD PTR fs:[edi+edi*2-0x7e2217ff],ebp
  420f45:	icebp  
  420f46:	dec    DWORD PTR [edi-0x6ba934c1]
  420f4c:	pmaxsw mm6,QWORD PTR [esi-0x61]
  420f50:	ds cmp eax,0xf72629a8
  420f56:	inc    esp
  420f57:	ret    
  420f58:	xlat   BYTE PTR ds:[ebx]
  420f59:	lock (bad) 
  420f5b:	loope  0x420f00
  420f5d:	add    BYTE PTR [eax-0x7a],0xe9
  420f61:	mov    eax,ds:0xedc13005
  420f66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f67:	rol    ah,1
  420f69:	jae    0x420f30
  420f6b:	sub    BYTE PTR [edi+0x605b000a],ah
  420f71:	adc    al,BYTE PTR [eax-0x72ae5e00]
  420f77:	jmp    0x420efb
  420f79:	ror    BYTE PTR ds:0xfa935500,1
  420f7f:	mov    edi,0x7b78a939
  420f84:	bound  edi,QWORD PTR [ecx]
  420f86:	jae    0x420f5e
  420f88:	sahf   
  420f89:	retf   
  420f8a:	mov    eax,0x4dd889ff
  420f8f:	(bad)  
  420f90:	retf   0xf64d
  420f93:	out    dx,eax
  420f94:	pop    gs
  420f96:	or     eax,0x8e0d0a87
  420f9b:	jmp    FWORD PTR [ecx-0x17]
  420f9e:	je     0x420f23
  420fa0:	stos   BYTE PTR es:[edi],al
  420fa1:	ins    DWORD PTR es:[edi],dx
  420fa2:	push   es
  420fa3:	add    BYTE PTR [esi-0x1dc759e],al
  420fa9:	call   0x65830fbb
  420fae:	jmp    0x8700:0xde9868b
  420fb5:	jmp    0xd9ff98c7
  420fba:	jb     0x420fba
  420fbc:	cli    
  420fbd:	pop    edi
  420fbe:	out    dx,al
  420fbf:	push   esp
  420fc0:	adc    ebx,DWORD PTR ds:0x60b41bea
  420fc6:	fiadd  DWORD PTR [ebx]
  420fc8:	les    esi,FWORD PTR [edi]
  420fca:	xor    BYTE PTR [ebx+0x62],al
  420fcd:	loopne 0x420fdc
  420fcf:	std    
  420fd0:	xchg   esi,eax
  420fd1:	ins    DWORD PTR es:[edi],dx
  420fd2:	dec    ebp
  420fd3:	or     al,0x2
  420fd5:	sub    ecx,DWORD PTR [eax+eax*1]
  420fd8:	add    BYTE PTR [esi-0x5a4089be],al
  420fde:	xor    ebx,DWORD PTR ds:[edx+0x24e268e1]
  420fe5:	push   ebp
  420fe6:	es (bad) 
  420fe8:	sbb    ebp,DWORD PTR [eax+0x103e3df]
  420fee:	xchg   bh,al
  420ff0:	adc    ecx,DWORD PTR [edi]
  420ff2:	xchg   BYTE PTR [edi+0x6c4a0f0b],bh
  420ff8:	mov    edx,0xf7bcc98d
  420ffd:	stos   BYTE PTR es:[edi],al
  420ffe:	adc    DWORD PTR [ebx+esi*1-0x57],edi
  421002:	ret    0x2580
  421005:	call   0x48db:0xea824b73
  42100c:	or     BYTE PTR ds:0x9303d326,0xbe
  421013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421014:	add    DWORD PTR [esi+0x71e46342],eax
  42101a:	(bad)  
  42101b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42101c:	fbld   TBYTE PTR [ebp-0x79fcb666]
  421022:	inc    edx
  421023:	mov    es,WORD PTR [edx]
  421025:	(bad)  
  421026:	jmp    0x6776:0xda522589
  42102d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42102e:	add    ah,ah
  421030:	add    eax,DWORD PTR [esi-0x79fcc166]
  421036:	inc    edx
  421037:	or     ecx,esi
  421039:	xor    ebx,edx
  42103b:	call   0x1f3710d1
  421040:	sbb    eax,0xcb428605
  421045:	adc    ebp,DWORD PTR ds:0xa123c0da
  42104b:	push   esi
  42104c:	jbe    0x421016
  42104e:	sub    dh,BYTE PTR gs:[eax+0xa2ea598]
  421055:	sbb    DWORD PTR [ecx],ecx
  421057:	call   FWORD PTR [edx+0x5c]
  42105a:	mov    esi,0x17393a25
  42105f:	xchg   BYTE PTR [esi],ah
  421061:	rcl    DWORD PTR ds:0xa489d1e2,1
  421067:	(bad)  
  421068:	lea    esp,[ebp-0x9353b2e]
  42106e:	dec    esi
  42106f:	add    esi,DWORD PTR [edi+ecx*4+0x620a428b]
  421076:	dec    esp
  421077:	dec    DWORD PTR [edx]
  421079:	jmp    0x60b99143
  42107e:	stc    
  42107f:	push   esp
  421080:	add    ah,BYTE PTR [ebp+0x58]
  421083:	push   esp
  421084:	inc    esi
  421085:	push   esi
  421086:	dec    DWORD PTR [ecx-0x7b]
  421089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42108a:	test   eax,0xa1ad2525
  42108f:	xor    ecx,esi
  421091:	mov    ah,0x91
  421093:	retf   
  421094:	push   esi
  421095:	or     eax,0x41c0cb86
  42109a:	call   0xfe690224
  42109f:	cwde   
  4210a0:	jbe    0x4210a1
  4210a2:	add    BYTE PTR [esp+edx*2+0x254e621a],ah
  4210a9:	push   ss
  4210aa:	push   cs
  4210ab:	out    dx,eax
  4210ac:	dec    esp
  4210ad:	test   DWORD PTR [ebp+0x2f852561],ebx
  4210b3:	jb     0x421075
  4210b5:	inc    esi
  4210b6:	mul    BYTE PTR [ebp+eax*8-0x36]
  4210ba:	jne    0x42113a
  4210bc:	add    BYTE PTR [edi+0xd],al
  4210bf:	xchg   ebp,eax
  4210c0:	f2xm1  
  4210c2:	push   ebp
  4210c3:	cs xor eax,0xd7afafe2
  4210c9:	icebp  
  4210ca:	into   
  4210cb:	stc    
  4210cc:	and    al,0xe
  4210ce:	add    BYTE PTR [edi],dh
  4210d0:	bound  esp,QWORD PTR [edi+0x75c540fe]
  4210d6:	and    al,0xe0
  4210d8:	inc    esp
  4210d9:	inc    DWORD PTR [ebx+0xa3fa1]
  4210df:	push   ss
  4210e0:	ins    BYTE PTR es:[edi],dx
  4210e1:	icebp  
  4210e2:	(bad)  
  4210e3:	out    dx,eax
  4210e4:	cmp    cl,BYTE PTR [ebp+0xa455b24]
  4210ea:	add    dh,bl
  4210ec:	mov    al,0xff
  4210ee:	add    BYTE PTR [ebx-0x1f],0x99
  4210f2:	add    BYTE PTR [edi+0x2a0f0a44],ch
  4210f8:	sahf   
  4210f9:	lock call FWORD PTR [edi+0x2b248d3a]
  421100:	inc    ebp
  421101:	or     al,BYTE PTR [eax]
  421103:	(bad)  
  421104:	mov    edx,0xf30082ff
  421109:	loopne 0x4210b0
  42110b:	add    BYTE PTR [edi+0x1a0f0a44],bl
  421111:	push   es
  421112:	icebp  
  421113:	jmp    FWORD PTR [edi+0x65]
  421116:	icebp  
  421117:	pop    es
  421118:	outs   dx,DWORD PTR ds:[esi]
  421119:	inc    esp
  42111a:	jecxz  0x421163
  42111c:	mov    al,ds:0xf2102daf
  421121:	mov    edi,0x446c1c2d
  421126:	or     dl,BYTE PTR [eax-0x1e]
  421129:	jmp    FWORD PTR ds:0x4db30f68
  42112f:	and    al,0x13
  421131:	sub    al,0x76
  421133:	scas   al,BYTE PTR es:[edi]
  421134:	das    
  421135:	inc    esp
  421136:	xor    eax,DWORD PTR [ebx+ecx*2-0x2c]
  42113a:	inc    BYTE PTR [ecx+eax*2-0x4afff5c1]
  421141:	or     ch,BYTE PTR [esi]
  421143:	push   edi
  421144:	mov    esp,DWORD PTR [ecx+0x2d86087d]
  42114a:	out    dx,eax
  42114b:	or     al,0xb
  42114d:	clc    
  42114e:	or     al,0x0
  421150:	xchg   BYTE PTR ds:0xa20a0cef,bh
  421156:	push   es
  421157:	add    BYTE PTR [esi-0x69dc5594],al
  42115d:	jmp    0xea2f957c
  421162:	or     eax,0xb2e00d00
  421167:	mov    cl,BYTE PTR [edx]
  421169:	push   es
  42116a:	repnz add BYTE PTR [eax],al
  42116d:	xchg   cl,ch
  42116f:	mov    esp,0xb6c0b888
  421174:	add    ecx,DWORD PTR [edi]
  421176:	push   ds
  421177:	loop   0x421188
  421179:	add    ebp,DWORD PTR [edx-0x114e616b]
  42117f:	stc    
  421180:	adc    eax,0x30d0e946
  421185:	imul   ebp,ecx,0x1c030d0d
  42118b:	push   es
  42118c:	add    BYTE PTR [esi-0x4f46678],al
  421192:	gs loop 0x42112c
  421195:	xchg   cl,ch
  421197:	or     eax,0xfda60d50
  42119c:	imul   esp,DWORD PTR [edi+0x6943c981],0x91bf8920
  4211a6:	pop    ebp
  4211a7:	jmp    0xc6bf:0xd73059fc
  4211ae:	cld    
  4211af:	adc    edi,DWORD PTR [eax]
  4211b1:	inc    eax
  4211b2:	ror    BYTE PTR [eax+0xde986a7],1
  4211b8:	mov    edx,edi
  4211ba:	add    al,0x8e
  4211bc:	push   DWORD PTR [ecx]
  4211be:	jmp    0x42a49541
  4211c3:	pop    edi
  4211c4:	add    eax,DWORD PTR [esi-0x4ffca2be]
  4211ca:	retf   
  4211cb:	test   al,0x8a
  4211cd:	aad    0x1d
  4211cf:	imul   eax,DWORD PTR [ebx],0x0
  4211d2:	xchg   BYTE PTR [edx+0x7a],al
  4211d5:	push   edi
  4211d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211d7:	(bad)  
  4211d8:	jecxz  0x4211dd
  4211da:	xchg   cl,cl
  4211dc:	outs   dx,DWORD PTR ds:[esi]
  4211dd:	out    0x1,eax
  4211df:	inc    edx
  4211e0:	jecxz  0x4211e5
  4211e2:	fisub  WORD PTR [esi-0x7c]
  4211e5:	add    eax,DWORD PTR [esi-0x2c796c35]
  4211eb:	dec    ebp
  4211ec:	or     BYTE PTR [ebp+0x102ccb8b],cl
  4211f2:	(bad)
  4211f6:	cs retf 
  4211f8:	cmp    al,0xf4
  4211fa:	push   cs
  4211fb:	inc    ecx
  4211fc:	adc    DWORD PTR [ecx],esp
  4211fe:	inc    ecx
  4211ff:	ds pusha 
  421201:	fld    DWORD PTR [ecx]
  421203:	jle    0x421204
  421205:	hlt    
  421206:	test   eax,0x9a2186ca
  42120b:	outs   dx,DWORD PTR ds:[esi]
  42120c:	dec    ebx
  42120d:	xchg   ah,ah
  42120f:	xlat   BYTE PTR ds:[ebx]
  421210:	inc    eax
  421211:	or     DWORD PTR ds:0xfa03f81e,0xffffff88
  421218:	xor    ah,al
  42121a:	test   edx,eax
  42121c:	mov    esp,0xa24f860b
  421221:	mov    es,ebp
  421223:	push   ds
  421224:	mov    ds:0xe4030c2b,eax
  421229:	add    eax,DWORD PTR ds:0x190e903
  42122f:	fadd   DWORD PTR [eax]
  421231:	and    BYTE PTR [esi+0x25],bl
  421234:	mov    ah,0x19
  421236:	add    bl,bl
  421238:	(bad)  
  421239:	lahf   
  42123a:	out    0xc5,eax
  42123c:	jmp    0x87f1:0xd5c50f0a
  421243:	cli    
  421244:	mov    DWORD PTR [esi],esp
  421246:	cmp    eax,0xe90afdc2
  42124b:	test   DWORD PTR [ebp+eiz*1-0x5f],ebx
  42124f:	or     DWORD PTR [edi+0x3a4ad6cb],0x43aa6aca
  421259:	jecxz  0x421272
  42125b:	cdq    
  42125c:	(bad)  
  42125d:	icebp  
  42125e:	push   ds
  42125f:	mov    ds:0x89afa711,al
  421264:	(bad)  
  421265:	mov    dh,0xcd
  421267:	add    eax,0xade9f1d6
  42126c:	sbb    eax,0x767197a7
  421271:	push   eax
  421272:	pop    ecx
  421273:	cmp    DWORD PTR [ebx-0x7b],0xffffff8c
  421277:	mov    DWORD PTR [ebx],0x5198e8ff
  42127d:	es in  eax,0x4
  421280:	pusha  
  421281:	push   es
  421282:	jmp    0xf568640f
  421287:	dec    ebx
  421288:	jg     0x42128c
  42128a:	call   0xdb8e962
  42128f:	call   0x86d6:0x6859ccdd
  421296:	sub    DWORD PTR [esi],ebx
  421298:	cmp    al,0x3d
  42129a:	sub    DWORD PTR [eax],eax
  42129c:	pop    ebp
  42129d:	jg     0x4212a5
  42129f:	rol    ch,cl
  4212a1:	into   
  4212a2:	shr    BYTE PTR [ebx],cl
  4212a4:	xchg   esi,eax
  4212a5:	inc    edx
  4212a6:	push   edi
  4212a7:	jb     0x42123f
  4212a9:	test   BYTE PTR [ebp-0x26],bl
  4212ac:	pushf  
  4212ad:	or     al,0x4f
  4212af:	stc    
  4212b0:	out    dx,al
  4212b1:	inc    ebp
  4212b2:	test   DWORD PTR [ebp+edi*2-0x49ffed43],esp
  4212b9:	xchg   esi,eax
  4212ba:	or     eax,0xba48e789
  4212bf:	add    DWORD PTR [eax+ebp*4-0x1c5ba8a9],eax
  4212c6:	popa   
  4212c7:	adc    ch,BYTE PTR [edi+0x3e]
  4212ca:	pop    ebx
  4212cb:	push   ebx
  4212cc:	pop    esp
  4212cd:	xchg   ecx,eax
  4212ce:	out    dx,al
  4212cf:	jne    0x4212e0
  4212d1:	xor    al,0x7c
  4212d3:	or     al,0x4c
  4212d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212d6:	call   0xef8302d8
  4212db:	xlat   BYTE PTR ds:[ebx]
  4212dc:	je     0x42130f
  4212de:	xor    dh,bl
  4212e0:	mov    ecx,0xde4684e4
  4212e5:	nop
  4212e6:	jmp    0xee79667a
  4212eb:	mov    DWORD PTR [edx+0x73c33222],esp
  4212f1:	aam    0x5a
  4212f3:	push   ebx
  4212f4:	xchg   ecx,eax
  4212f5:	mov    gs,esi
  4212f7:	jne    0x4212d8
  4212f9:	xor    edi,DWORD PTR [esp+ecx*1-0x64]
  4212fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212fe:	call   0x40e11400
  421303:	out    dx,eax
  421304:	xlat   BYTE PTR ds:[ebx]
  421305:	hlt    
  421306:	jle    0x421385
  421308:	or     al,0x28
  42130a:	mov    edx,0x5d15e8f5
  42130f:	out    dx,eax
  421310:	jmp    FWORD PTR [ebp+0x7e]
  421313:	loop   0x42132b
  421315:	and    al,0xf2
  421317:	cmc    
  421318:	mov    esi,DWORD PTR [edx]
  42131a:	dec    eax
  42131b:	sbb    BYTE PTR [esi+edi*2],0xc7
  42131f:	or     DWORD PTR [ebx+0x4888d02a],ecx
  421325:	arpl   di,ax
  421327:	popa   
  421328:	or     BYTE PTR [edi+0x445e4f3e],bh
  42132e:	xchg   ebx,ecx
  421330:	or     al,0x86
  421332:	jmp    0xe1e45ebb
  421337:	and    eax,0x103c5dab
  42133c:	cmp    BYTE PTR [esi],0xd5
  42133f:	cdq    
  421340:	add    esi,DWORD PTR [ecx+ebp*1+0x24]
  421344:	or     eax,0x2398e4d6
  421349:	xchg   edx,eax
  42134a:	fcom   QWORD PTR [edx-0x470e75dd]
  421350:	cld    
  421351:	adc    ebp,ebp
  421353:	dec    esp
  421354:	pop    es
  421355:	xchg   BYTE PTR [esi],cl
  421357:	sub    ebx,0x7
  42135a:	out    dx,al
  42135b:	push   es
  42135c:	add    al,BYTE PTR [esi+0x5955bae9]
  421362:	jg     0x421370
  421364:	push   0x7b53f600
  421369:	test   BYTE PTR ds:0x17a21ea2,cl
  42136f:	mov    ah,0xf
  421371:	xor    BYTE PTR [ebp-0x72f8389e],ch
  421377:	test   al,0xff
  421379:	or     DWORD PTR [eax+0xb000dea],0xf
  421380:	push   es
  421381:	(bad)  
  421382:	mov    cl,0x4c
  421384:	push   ds
  421385:	fstp   QWORD PTR [edi+0x4b880f64]
  42138b:	or     ecx,DWORD PTR [ebx+0x1749a4a]
  421391:	add    BYTE PTR [esi+0x55500669],al
  421397:	sub    esi,ecx
  421399:	pop    edx
  42139a:	mov    cs,esp
  42139c:	js     0x42135d
  42139e:	add    eax,0xdc500b29
  4213a3:	jmp    0x8a4d:0xe969ffa5
  4213aa:	leave  
  4213ab:	inc    edx
  4213ac:	repz mov bl,0xc
  4213af:	jge    0x4213c0
  4213b1:	sub    al,0x63
  4213b3:	inc    edi
  4213b4:	sbb    BYTE PTR ds:0x87d10205,bl
  4213ba:	repz inc ecx
  4213bc:	jecxz  0x4213c1
  4213be:	or     eax,0xfcb3ef7d
  4213c3:	dec    esp
  4213c4:	repz sub ebp,DWORD PTR [edi+0x46]
  4213c8:	loopne 0x4213e6
  4213ca:	add    BYTE PTR ds:0xff87f902,al
  4213d0:	inc    ecx
  4213d1:	jecxz  0x4213d6
  4213d3:	pop    ecx
  4213d4:	jne    0x4213a5
  4213d6:	xchg   esp,eax
  4213d7:	add    cl,0x3e
  4213da:	adc    al,0x1
  4213dc:	shl    ebx,cl
  4213de:	repz ja 0x4213ec
  4213e1:	adc    al,0xb1
  4213e3:	push   esi
  4213e4:	lds    ebx,FWORD PTR [esi]
  4213e6:	and    cl,ah
  4213e8:	leave  
  4213e9:	iret   
  4213ea:	sbb    al,0xe2
  4213ec:	mov    ebp,0xd38c97a3
  4213f1:	push   ss
  4213f2:	and    dl,dl
  4213f4:	sub    al,0x2b
  4213f6:	repnz mov DWORD PTR [edx+0x66],eax
  4213fa:	inc    ebx
  4213fb:	xor    al,0x37
  4213fd:	jbe    0x4213c5
  4213ff:	mov    ebp,0xb3085ee9
  421404:	sar    BYTE PTR [edx],cl
  421406:	sub    eax,0x8ee3d2a8
  42140b:	add    al,0x42
  42140d:	imul   ebx,DWORD PTR [edx+ebx*4],0x48c40bc9
  421414:	dec    ebp
  421415:	pop    ebp
  421416:	sub    BYTE PTR [ebx],bl
  421418:	(bad)  
  421419:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42141a:	pop    ds
  42141b:	sbb    BYTE PTR [eax+0x5d],0x80
  42141f:	int3   
  421420:	into   
  421421:	xor    BYTE PTR [ebx-0x70f57697],dh
  421427:	test   DWORD PTR [edx+0x35],eax
  42142a:	sub    bh,al
  42142c:	xor    BYTE PTR [ebp+0x11],bl
  42142f:	add    BYTE PTR [eax],bl
  421431:	shl    cl,cl
  421433:	jmp    0x2309938
  421438:	or     eax,0xdc0ef13b
  42143d:	fisttp WORD PTR [ebx]
  42143f:	jmp    0xe9c9d1c9
  421444:	xchg   ebx,eax
  421445:	into   
  421446:	icebp  
  421447:	popa   
  421448:	sub    eax,0x7f744312
  42144d:	fidiv  DWORD PTR [ebx]
  42144f:	jo     0x421496
  421451:	ds jg  0x421478
  421454:	outs   dx,BYTE PTR ds:[esi]
  421455:	jmp    0xceaef68e
  42145a:	mov    bl,0xbf
  42145c:	mov    eax,DWORD PTR [edx+0xa]
  42145f:	je     0x421468
  421461:	shr    bh,cl
  421463:	mov    esi,0x2912c98d
  421468:	mov    ebx,0x8b79f454
  42146d:	fist   DWORD PTR ds:0xe2cdc774
  421473:	cld    
  421474:	or     bh,0xf1
  421477:	push   eax
  421478:	pushf  
  421479:	shl    cl,1
  42147b:	jmp    0x874cd98e
  421480:	popf   
  421481:	into   
  421482:	and    cl,0xc5
  421485:	mov    BYTE PTR [edi+0x73],dh
  421488:	rcl    BYTE PTR [ecx+0x8e10f51],1
  42148e:	int    0xed
  421490:	test   DWORD PTR [ebp-0x7b],esi
  421493:	dec    ebp
  421494:	add    BYTE PTR [ebx],cl
  421496:	fdivrp st(6),st
  421498:	call   0x1a9f5722
  42149d:	shl    DWORD PTR [edi+0x33],0x0
  4214a1:	and    BYTE PTR [ecx+0x76],cl
  4214a4:	pop    ecx
  4214a5:	xchg   DWORD PTR [ebx-0x45978af7],ecx
  4214ab:	mov    esp,0xee2db110
  4214b0:	call   0x30339c
  4214b5:	data16 mov dl,bl
  4214b8:	ja     0x421514
  4214ba:	out    dx,al
  4214bb:	push   esp
  4214bc:	(bad)  
  4214bd:	sbb    esi,edx
  4214bf:	sbb    BYTE PTR [edi+0x33],0xba
  4214c3:	dec    esp
  4214c4:	(bad)  
  4214c5:	setne  BYTE PTR [ecx+0x50]
  4214c9:	xchg   edx,ecx
  4214cb:	(bad)  
  4214cc:	(bad)  
  4214cd:	xor    al,bh
  4214cf:	sar    BYTE PTR [ecx+0xa4631],cl
  4214d5:	mov    ds:0x30fe01c2,al
  4214da:	sub    al,0x89
  4214dc:	sbb    BYTE PTR [edi+0x74fa7cff],ch
  4214e2:	mov    ah,0x5
  4214e4:	cmp    ebp,DWORD PTR [ecx+eax*8]
  4214e7:	or     al,0xe8
  4214e9:	js     0x421531
  4214eb:	or     al,BYTE PTR [eax]
  4214ed:	data16 mov WORD PTR ds:0x763e4238,es
  4214f4:	or     DWORD PTR [edx+0x4],esp
  4214f7:	add    dl,BYTE PTR [eax+0x0]
  4214fa:	pop    es
  4214fb:	mov    ebp,0xc010feff
  421500:	inc    esi
  421501:	or     ah,al
  421503:	xchg   DWORD PTR [ebp+0x9],edi
  421506:	(bad)  
  421507:	push   ds
  421508:	rcl    ebx,0x9f
  42150b:	inc    esp
  42150c:	mov    DWORD PTR [edi-0x59],ebx
  42150f:	mov    dl,BYTE PTR [edx-0x37]
  421512:	ins    DWORD PTR es:[edi],dx
  421513:	shl    ecx,1
  421515:	mov    ch,BYTE PTR [ecx-0x79000639]
  42151b:	out    dx,eax
  42151c:	add    BYTE PTR [ebx+0x500cf646],al
  421522:	jns    0x421513
  421524:	jmp    0x811bdb3a
  421529:	lds    ebx,FWORD PTR [esi+0x3]
  42152c:	add    ch,bh
  42152e:	popa   
  42152f:	mov    eax,0x28246f25
  421534:	adc    al,0x88
  421536:	dec    eax
  421537:	sbb    eax,0x5d5a88ba
  42153c:	lods   al,BYTE PTR ds:[esi]
  42153d:	pop    es
  42153e:	xchg   BYTE PTR [esp+ebp*4+0xb],bl
  421542:	xchg   BYTE PTR [edx+0x29],bl
  421545:	pop    ss
  421546:	test   cl,bl
  421548:	or     eax,0x5a66d051
  42154d:	jmp    0x8a55f675
  421552:	mov    ecx,0x1e1525c9
  421557:	icebp  
  421558:	adc    eax,DWORD PTR [edx]
  42155a:	aam    0xda
  42155c:	or     eax,0xd56c0000
  421561:	mov    ebp,0x81568669
  421566:	xlat   BYTE PTR ds:[ebx]
  421567:	add    eax,0x68e71392
  42156c:	mov    ch,0x14
  42156e:	cld    
  42156f:	or     ebx,DWORD PTR [edx-0x5ff2eb6c]
  421575:	mov    dh,0x67
  421577:	(bad)  
  421578:	jg     0x421541
  42157a:	push   DWORD PTR [ecx+eax*8]
  42157d:	jnp    0x421518
  42157f:	xchg   cl,bl
  421581:	jo     0x421542
  421583:	mov    DWORD PTR [esi+0x46],ebp
  421586:	add    esi,0xffffffd6
  421589:	lock xor dh,al
  42158c:	aas    
  42158d:	test   DWORD PTR [eax],eax
  42158f:	fisttp WORD PTR [edi+0xd]
  421592:	add    BYTE PTR [esi-0x608089be],al
  421598:	int    0x50
  42159a:	sbb    ebx,eax
  42159c:	inc    edx
  42159d:	jecxz  0x421562
  42159f:	enter  0x5a55,0xba
  4215a3:	push   cs
  4215a4:	pop    es
  4215a5:	lods   eax,DWORD PTR ds:[esi]
  4215a6:	dec    edx
  4215a7:	inc    esi
  4215a8:	jne    0x421626
  4215aa:	sub    BYTE PTR [esi],al
  4215ac:	out    0x3b,al
  4215ae:	sub    DWORD PTR [ebp+0x42],0xffffffe5
  4215b2:	add    eax,DWORD PTR [esi-0x68f46145]
  4215b8:	stc    
  4215b9:	mov    ecx,0xbf7e00b0
  4215be:	pop    es
  4215bf:	jg     0x4215c2
  4215c1:	cwde   
  4215c2:	add    eax,0x923a0100
  4215c7:	mov    WORD PTR [esi-0x26],es
  4215ca:	push   edi
  4215cb:	pop    ss
  4215cc:	sub    cl,bh
  4215ce:	pop    edi
  4215cf:	inc    esp
  4215d0:	xchg   edx,eax
  4215d1:	mov    BYTE PTR [eax+0x4],0x86
  4215d5:	inc    edx
  4215d6:	jbe    0x421567
  4215d8:	sub    ch,BYTE PTR gs:[ecx-0x1ccd9a41]
  4215df:	sub    edx,DWORD PTR [ebx]
  4215e1:	out    0xc0,eax
  4215e3:	sbb    BYTE PTR [esi],cl
  4215e5:	push   ebx
  4215e6:	imul   DWORD PTR [ebx]
  4215e8:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4215ea:	jecxz  0x4215ef
  4215ec:	add    al,BYTE PTR [edx]
  4215ee:	xor    BYTE PTR [edi-0x7930b4f2],bl
  4215f4:	add    eax,0x86035b26
  4215f9:	inc    edx
  4215fa:	xor    eax,DWORD PTR [edi-0x4c0cd9bb]
  421600:	test   eax,0x8603493e
  421605:	(bad)  
  421606:	mov    ds:0xf7bb3d8f,eax
  42160b:	fistp  QWORD PTR [ebp-0x43]
  42160e:	or     dh,ch
  421610:	shl    DWORD PTR [edx],0x83
  421613:	cmc    
  421614:	mov    ecx,0xe9c5e232
  421619:	into   
  42161a:	icebp  
  42161b:	gs inc ebp
  42161d:	push   esp
  42161e:	adc    ch,BYTE PTR [edi+edx*4+0x51]
  421622:	dec    DWORD PTR [ebp+0x57]
  421625:	out    0x71,al
  421627:	mov    BYTE PTR [eax],al
  421629:	(bad)  
  42162a:	into   
  42162b:	pop    eax
  42162c:	push   ecx
  42162d:	or     al,0xad
  42162f:	lock or ah,BYTE PTR ss:[edx+0x26]
  421634:	fld    QWORD PTR [ebp+0x107226db]
  42163a:	inc    esi
  42163b:	xchg   DWORD PTR [ecx],ebp
  42163d:	stc    
  42163e:	inc    ebp
  42163f:	test   DWORD PTR [edx-0x3ebc4477],esp
  421645:	or     al,0x46
  421647:	test   DWORD PTR [edx-0xebd4477],ebp
  42164d:	cld    
  42164e:	cmp    al,BYTE PTR [ebp+0x4dc589a9]
  421654:	in     eax,0x6a
  421656:	inc    eax
  421657:	enter  0x262d,0x3e
  42165b:	or     ebx,esi
  42165d:	mul    BYTE PTR [ecx]
  42165f:	sbb    ah,BYTE PTR [edx-0x63]
  421662:	in     eax,0x3d
  421664:	iret   
  421665:	xchg   ecx,eax
  421666:	into   
  421667:	mov    bl,0xd7
  421669:	mov    eax,DWORD PTR [edx+0xa]
  42166c:	ins    BYTE PTR es:[edi],dx
  42166d:	(bad)  
  42166e:	and    DWORD PTR [edx],edx
  421670:	scas   eax,DWORD PTR es:[edi]
  421671:	mov    al,BYTE PTR [edx+0x4a]
  421674:	and    bh,dh
  421676:	aam    0x85
  421678:	sub    eax,0x3f5139e6
  42167d:	std    
  42167e:	loopne 0x4216cf
  421680:	stos   DWORD PTR es:[edi],eax
  421681:	xchg   BYTE PTR [edx+0x57],al
  421684:	bound  ebp,QWORD PTR [esi-0x3e]
  421687:	out    0x0,al
  421689:	pop    es
  42168a:	ret    0x3ce5
  42168d:	add    BYTE PTR [esp+ebx*4-0xbc17aa],cl
  421694:	icebp  
  421695:	(bad)  
  421696:	jg     0x4216b6
  421698:	jb     0x421678
  42169a:	lahf   
  42169b:	inc    ecx
  42169c:	sbb    eax,0x22
  42169f:	or     esi,edi
  4216a1:	or     DWORD PTR [edi-0x25fff5b9],0xffffffaa
  4216a8:	sub    eax,0x2d8af610
  4216ad:	adc    bh,dl
  4216af:	or     eax,0x4d6f0062
  4216b4:	mov    cl,0xf
  4216b6:	jecxz  0x4216ec
  4216b8:	icebp  
  4216b9:	call   FWORD PTR [edi-0x46]
  4216bc:	jge    0x4216e2
  4216be:	inc    ebx
  4216bf:	sbb    DWORD PTR [esi+0x64412f6c],esi
  4216c5:	and    DWORD PTR [esp+ecx*1-0x6fe895bf],esp
  4216cc:	jmp    0xa887c3a
  4216d1:	test   BYTE PTR [edi+0x45],ch
  4216d4:	xchg   al,ah
  4216d6:	das    
  4216d7:	inc    ecx
  4216d8:	or     cl,BYTE PTR [ebx+0x1be990e0]
  4216de:	mov    ebx,0x2f840a46
  4216e3:	inc    esp
  4216e4:	xchg   al,dl
  4216e6:	out    dx,eax
  4216e7:	inc    eax
  4216e8:	or     cl,BYTE PTR [ebp-0x17e21d4d]
  4216ee:	fldenv [ebx+0x4500fff1]
  4216f4:	cmp    eax,DWORD PTR [ebx+0x64987fc6]
  4216fa:	push   ebx
  4216fb:	mul    edi
  4216fd:	rol    DWORD PTR [eax],cl
  4216ff:	fisttp WORD PTR [ecx+esi*4+0xf]
  421703:	xchg   BYTE PTR [edi+0x5b],bl
  421706:	(bad)  
  421707:	mov    ecx,0x6a4382da
  42170c:	jmp    0x4216cb
  42170e:	out    0x80,eax
  421710:	leave  
  421711:	or     eax,0x8a4b0d00
  421716:	cmc    
  421717:	adc    bh,cl
  421719:	sbb    BYTE PTR [ebx+0x6a],dh
  42171c:	retf   
  42171d:	lahf   
  42171e:	imul   ebx,DWORD PTR [ecx],0x5c152588
  421724:	fimul  DWORD PTR ds:0xd1a60e56
  42172a:	adc    BYTE PTR [esi+0x4],bl
  42172d:	outs   dx,BYTE PTR ds:[esi]
  42172e:	std    
  42172f:	imul   ebx,DWORD PTR [edx-0x67],0x8d99123
  421736:	test   BYTE PTR [esi],al
  421738:	fimul  DWORD PTR ds:0x5a70600
  42173e:	add    dl,dl
  421740:	mov    bl,0x82
  421742:	inc    ebx
  421743:	push   0xffffffc9
  421745:	mov    ebp,0xd4ca2e7
  42174a:	add    ch,bh
  42174c:	leave  
  42174d:	jno    0x421744
  42174f:	mov    dl,0xeb
  421751:	sbb    BYTE PTR [ebx+0x6a],dh
  421754:	jmp    0xa84280f8
  421759:	test   al,0x25
  42175b:	(bad)  [edi]
  42175d:	fimul  DWORD PTR ds:0xea25fe56
  421763:	adc    dh,ch
  421765:	sbb    esp,DWORD PTR [esi-0x3]
  421768:	stc    
  421769:	pop    ecx
  42176a:	xchg   edx,eax
  42176b:	and    eax,DWORD PTR [ecx-0x4b47e27]
  421771:	or     eax,0xe7ee13ea
  421776:	cmp    edi,0x88f67fd9
  42177c:	leave  
  42177d:	inc    edx
  42177e:	xor    ebp,DWORD PTR [edx+0x4d9b6f59]
  421784:	fadd   DWORD PTR [edx-0x1d]
  421787:	jg     0x421782
  421789:	push   esi
  42178a:	aad    0x86
  42178c:	inc    ebp
  42178d:	shl    DWORD PTR es:[ebx+0x3f7f9a1],cl
  421794:	xchg   BYTE PTR [edi+0x56937f73],dh
  42179a:	rcl    DWORD PTR [edx*1+0x1fadf326],0x51
  4217a2:	mov    ah,0x2b
  4217a4:	sbb    ebp,ecx
  4217a6:	jecxz  0x4217ab
  4217a8:	sar    BYTE PTR [edx-0x25692059],1
  4217ae:	dec    ecx
  4217af:	jne    0x42181c
  4217b1:	retf   
  4217b2:	arpl   WORD PTR [eax-0x701cc45b],bx
  4217b8:	test   DWORD PTR [edi-0x7dffd6dc],esi
  4217be:	retf   
  4217bf:	aam    0x2b
  4217c1:	pop    ebp
  4217c2:	stos   DWORD PTR es:[edi],eax
  4217c3:	adc    DWORD PTR ds:0x7501dad6,edx
  4217c9:	cmp    ecx,ebx
  4217cb:	aam    0x43
  4217cd:	shr    BYTE PTR [esp+ebp*4-0x78],cl
  4217d1:	and    al,0x6d
  4217d3:	and    eax,0x6c758600
  4217d8:	sub    BYTE PTR [esi],al
  4217da:	out    0xfb,al
  4217dc:	sbb    BYTE PTR ds:0x8603df26,0xc1
  4217e3:	dec    esi
  4217e4:	cld    
  4217e5:	add    ebx,ecx
  4217e7:	add    DWORD PTR [ebx],0x57
  4217ea:	je     0x421824
  4217ec:	add    eax,0x3e25f07
  4217f1:	xchg   dl,bl
  4217f3:	or     ecx,esp
  4217f5:	loope  0x4217c1
  4217f7:	or     bl,BYTE PTR [ecx]
  4217f9:	stos   BYTE PTR es:[edi],al
  4217fa:	cs iret 
  4217fc:	jmp    0xdb14d186
  421801:	jb     0x42180d
  421803:	shr    esi,1
  421805:	inc    ecx
  421806:	ja     0x421813
  421808:	jmp    0xc588cf92
  42180d:	mov    eax,ds:0xa625837a
  421812:	xor    ah,dl
  421814:	xchg   ebx,eax
  421815:	out    dx,eax
  421816:	retf   0x6df1
  421819:	inc    ebp
  42181a:	ds xchg al,al
  42181d:	test   BYTE PTR [edx+0xa],al
  421820:	je     0x421822
  421822:	leave  
  421823:	push   ds
  421824:	sbb    bh,BYTE PTR [ecx-0x16a1d053]
  42182a:	test   DWORD PTR [ebx+0x558312fa],edi
  421830:	sub    al,0x46
  421832:	stc    
  421833:	and    eax,0x5e2f971a
  421838:	pop    ebp
  421839:	inc    ecx
  42183a:	xchg   cl,dh
  42183c:	or     ch,cl
  42183e:	and    eax,edx
  421840:	inc    esi
  421841:	int    0x56
  421843:	loop   0x4218aa
  421845:	jle    0x4217e2
  421847:	(bad)  
  421848:	mov    dl,BYTE PTR [ebp-0x21f5c8a7]
  42184e:	mov    cl,0xce
  421850:	or     ch,cl
  421852:	test   DWORD PTR [ebp-0x1de23a8a],edi
  421858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421859:	test   BYTE PTR [ebp-0x1239bbe],al
  42185f:	call   FWORD PTR [edx+0x53]
  421862:	out    0x72,eax
  421864:	loop   0x421827
  421866:	mov    dl,0xc9
  421868:	icebp  
  421869:	ins    DWORD PTR es:[edi],dx
  42186a:	inc    edx
  42186b:	xchg   BYTE PTR ss:[eax+0xa428a],dh
  421872:	push   ebp
  421873:	cmp    ah,BYTE PTR [edx-0x40]
  421876:	inc    edi
  421877:	(bad)  
  421878:	icebp  
  421879:	imul   ebx,DWORD PTR [edx-0x83e166f],0x1f840a3e
  421883:	inc    esi
  421884:	xchg   dl,al
  421886:	add    BYTE PTR [edi-0x5495f5bb],ch
  42188c:	ret    0x84c
  42188f:	outs   dx,DWORD PTR ds:[esi]
  421890:	test   al,0x77
  421892:	push   ebx
  421893:	pop    ss
  421894:	push   0xffffffd9
  421896:	add    BYTE PTR [edi+0x2b0fb1c1],ch
  42189c:	(bad)  {k7}{z}
  4218a1:	je     0x4218bb
  4218a3:	test   eax,0x8775eecb
  4218a8:	xor    eax,0xac45147c
  4218ad:	pop    edx
  4218ae:	call   0x332fa2
  4218b3:	fstp   TBYTE PTR [esi-0x2]
  4218b6:	cmp    DWORD PTR [esi+0x56000a3e],0xffffffb2
  4218bd:	add    eax,0x7c343074
  4218c2:	or     al,0xf5
  4218c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218c5:	pop    edx
  4218c6:	call   0x332f32
  4218cb:	stos   DWORD PTR es:[edi],eax
  4218cc:	jle    0x42194b
  4218ce:	jge    0x421926
  4218d0:	mov    dl,0x1
  4218d2:	je     0x421904
  4218d4:	xor    al,0x7c
  4218d6:	adc    ch,dh
  4218d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218d9:	pop    edx
  4218da:	call   0x332f6a
  4218df:	stos   DWORD PTR es:[edi],eax
  4218e0:	jle    0x42195f
  4218e2:	imul   edx,DWORD PTR [edx+0x29282db9],0xf2e01
  4218ec:	xchg   bl,bl
  4218ee:	adc    eax,0x1cf7f254
  4218f3:	imul   eax,DWORD PTR [edi+0x5be74454],0x2fc1d05
  4218fd:	fwait
  4218fe:	cdq    
  4218ff:	das    
  421900:	add    ecx,DWORD PTR [edi-0x17]
  421903:	aas    
  421904:	test   bl,bl
  421906:	or     eax,0x1cbf3be8
  42190b:	cld    
  42190c:	or     eax,0x333e22f
  421911:	pop    edi
  421912:	jmp    0xe1d9de6
  421917:	push   eax
  421918:	xor    eax,0x869e5bb3
  42191d:	(bad)  [ebp+0x43]
  421920:	push   0xffffffe8
  421922:	ds in  eax,dx
  421924:	xchg   ebx,ebx
  421926:	or     eax,0xd204889
  42192b:	add    dh,al
  42192d:	mov    ds:0xd9dcf692,al
  421932:	mov    bh,BYTE PTR [ebx-0x5e]
  421935:	sub    eax,0x95d6b0e
  42193a:	sbb    al,0xfc
  42193c:	xchg   ebp,eax
  42193d:	adc    DWORD PTR [edx-0x47e6af63],0x1bbfd9e7
  421947:	cld    
  421948:	or     al,0x9e
  42194a:	jmp    0x1d23465b
  42194f:	xor    BYTE PTR [eax],al
  421951:	push   ds
  421952:	mov    esp,0xad29fd7b
  421957:	adc    eax,0x1bc8005b
  42195c:	xor    DWORD PTR [esi-0x4f],eax
  42195f:	mov    ebx,0xba3efd58
  421964:	shl    DWORD PTR [edx+0x42],0xe3
  421968:	mov    dh,0xe
  42196a:	xlat   BYTE PTR ds:[ebx]
  42196b:	jl     0x421977
  42196d:	pop    es
  42196e:	xlat   BYTE PTR ds:[ebx]
  42196f:	das    
  421970:	mov    ch,0x5a
  421972:	pop    esp
  421973:	loop   0x4219f3
  421975:	cmp    al,0x96
  421977:	adc    bh,BYTE PTR [edx-0x4b4f146a]
  42197d:	test   eax,0x4a97a3bd
  421982:	mov    ebx,0x428c5826
  421987:	jecxz  0x4219ec
  421989:	rcl    DWORD PTR [esi+ecx*8-0x36],0x5c
  42198e:	mov    cl,BYTE PTR [esi]
  421990:	int3   
  421991:	inc    ecx
  421992:	mov    ecx,0xc7a10c26
  421997:	data16 adc ah,BYTE PTR [edx-0x61327445]
  42199e:	dec    esi
  42199f:	retf   0x8b7c
  4219a2:	mov    ch,0xe
  4219a4:	or     al,0x38
  4219a6:	(bad)  
  4219a7:	into   
  4219a8:	or     ebx,edx
  4219aa:	jo     0x4219fc
  4219ac:	mov    ah,0x8d
  4219ae:	mov    ebp,0xc7809723
  4219b3:	(bad)  
  4219b4:	or     eax,DWORD PTR [eax]
  4219b6:	rol    bh,cl
  4219b8:	scas   al,BYTE PTR es:[edi]
  4219b9:	sti    
  4219ba:	mov    dh,0x5c
  4219bc:	in     eax,0x1b
  4219be:	jl     0x421988
  4219c0:	cmp    BYTE PTR [ecx],dl
  4219c2:	(bad)  
  4219c3:	jmp    0xa59b3560
  4219c8:	sub    DWORD PTR [ecx],edx
  4219ca:	loop   0x421988
  4219cc:	and    al,0xad
  4219ce:	inc    eax
  4219cf:	add    al,0xe0
  4219d1:	add    edx,ebp
  4219d3:	mov    ebx,0x2e1d84ef
  4219d8:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4219da:	sbb    eax,0xc47e9442
  4219df:	sub    cl,BYTE PTR [edx]
  4219e1:	cdq    
  4219e2:	jbe    0x421a38
  4219e4:	push   ss
  4219e5:	pop    esp
  4219e6:	inc    ecx
  4219e7:	iret   
  4219e8:	pop    edx
  4219e9:	je     0x4219b3
  4219eb:	retf   0xd15a
  4219ee:	ret    
  4219ef:	in     al,dx
  4219f0:	lock (bad) 
  4219f2:	or     BYTE PTR [edi-0x792c1a8a],al
  4219f8:	in     eax,0x32
  4219fa:	arpl   WORD PTR [edx+esi*8-0x72353eee],ax
  421a01:	dec    esp
  421a02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a03:	(bad)  
  421a04:	mov    WORD PTR [esi+ebp*2-0x39],es
  421a08:	fisub  DWORD PTR [ecx-0x62883a0b]
  421a0e:	cmp    BYTE PTR [esi+ebx*8-0xd676dc7],al
  421a15:	mov    ss,WORD PTR [esi+0x8577c6]
  421a1b:	and    ebp,edi
  421a1d:	loop   0x421a82
  421a1f:	sub    ch,al
  421a21:	icebp  
  421a22:	ins    DWORD PTR es:[edi],dx
  421a23:	bound  edx,QWORD PTR [ebx+0x18]
  421a26:	outs   dx,BYTE PTR ds:[esi]
  421a27:	lock shl cl,cl
  421a2a:	fsub   QWORD PTR [ecx-0x6906883a]
  421a30:	push   eax
  421a31:	(bad)  
  421a32:	push   ebp
  421a33:	sbb    BYTE PTR [esi],bh
  421a35:	loop   0x4219bd
  421a37:	js     0x4219ff
  421a39:	icebp  
  421a3a:	jae    0x4219e9
  421a3c:	(bad)  
  421a3d:	ja     0x421a8c
  421a3f:	jge    0x421a8e
  421a41:	(bad)  
  421a42:	aaa    
  421a43:	jbe    0x421a00
  421a45:	int    0x92
  421a47:	mov    WORD PTR [edx],es
  421a49:	pop    eax
  421a4a:	jb     0x4219ed
  421a4c:	ret    0xedde
  421a4f:	repnz outs dx,BYTE PTR ds:[esi]
  421a51:	icebp  
  421a52:	pushf  
  421a53:	sub    eax,0x52156fb9
  421a58:	jmp    0x421a3c
  421a5a:	add    BYTE PTR [ecx+ecx*8],cl
  421a5d:	out    dx,al
  421a5e:	jmp    DWORD PTR [ebx+0x18257d81]
  421a64:	mov    al,0xf9
  421a66:	cmp    edx,edi
  421a68:	(bad)
  421a6b:	jecxz  0x421ab6
  421a6d:	dec    esp
  421a6e:	or     al,bl
  421a70:	stos   DWORD PTR es:[edi],eax
  421a71:	add    DWORD PTR [edi],ecx
  421a73:	mov    ds:0x455005fb,al
  421a78:	inc    eax
  421a79:	loop   0x421adf
  421a7b:	retf   0xee35
  421a7e:	inc    DWORD PTR [eax]
  421a80:	xchg   edx,eax
  421a81:	sub    al,BYTE PTR [ebx-0x6b143828]
  421a87:	(bad)  
  421a88:	sbb    BYTE PTR [esi+0x744c383],dl
  421a8e:	retf   
  421a8f:	or     al,0xaf
  421a91:	mov    al,BYTE PTR [edx+0x1d221eec]
  421a97:	add    al,0x9f
  421a99:	inc    ecx
  421a9a:	pop    ebx
  421a9b:	push   edi
  421a9c:	adc    al,0x36
  421a9e:	test   BYTE PTR [ebp-0x11c5f5],al
  421aa4:	outs   dx,DWORD PTR ds:[esi]
  421aa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421aa6:	test   DWORD PTR [eax],0xdb3b419f
  421aac:	call   0x2f55347c
  421ab1:	inc    ecx
  421ab2:	inc    edx
  421ab3:	cmp    eax,0xa3ed2
  421ab8:	push   eax
  421ab9:	xchg   esp,eax
  421aba:	test   BYTE PTR [ebp-0x11cc5d],al
  421ac0:	dec    DWORD PTR [edi-0x11aef97]
  421ac6:	icebp  
  421ac7:	mov    edx,fs
  421ac9:	and    dh,dl
  421acb:	jmp    FWORD PTR [eax-0x72]
  421ace:	out    dx,al
  421acf:	adc    eax,0x31ce1b
  421ad4:	xchg   BYTE PTR [esi+0x46],dl
  421ad7:	jae    0x421aa0
  421ad9:	xor    bx,0x23
  421add:	cmp    al,0x1
  421adf:	dec    edi
  421ae0:	cs push es
  421ae2:	out    dx,al
  421ae3:	cld    
  421ae4:	add    BYTE PTR [ecx],dl
  421ae6:	push   edi
  421ae7:	inc    esi
  421ae8:	jae    0x421b41
  421aea:	xor    bx,0x3
  421aee:	fadd   QWORD PTR [eax]
  421af0:	dec    edi
  421af1:	out    dx,al
  421af2:	sbb    al,ah
  421af4:	push   ecx
  421af6:	push   esi
  421af7:	dec    ebp
  421af8:	jae    0x421aa1
  421afa:	hlt    
  421afb:	xchg   edx,eax
  421afc:	pop    es
  421afd:	or     eax,0xb500214
  421b02:	pop    esi
  421b03:	sbb    edx,edi
  421b05:	ror    DWORD PTR [ebx-0x6bb91843],1
  421b0b:	add    ah,bh
  421b0d:	or     al,0x3
  421b0f:	mov    eax,DWORD PTR [edx-0x3ff5a4e]
  421b15:	push   esi
  421b16:	ret    
  421b17:	jne    0x421b20
  421b19:	test   eax,0xc589a0b3
  421b1e:	pop    ds
  421b1f:	das    
  421b20:	rol    DWORD PTR [edx-0x5d774d25],0x59
  421b27:	adc    DWORD PTR [ebx],esp
  421b29:	test   bl,bl
  421b2b:	or     eax,0xf471d956
  421b30:	inc    edx
  421b31:	xchg   cl,bl
  421b33:	xchg   ebx,eax
  421b34:	add    BYTE PTR [ebp+0x77f49e07],dh
  421b3a:	pop    ecx
  421b3b:	adc    edi,edi
  421b3d:	aad    0xe6
  421b3f:	mov    bl,0x73
  421b41:	(bad)  
  421b42:	sbb    al,0xc2
  421b44:	test   DWORD PTR [eax+0xdd9],0x4248ea5d
  421b4e:	ds inc ebx
  421b50:	fild   WORD PTR [ebx]
  421b52:	xchg   BYTE PTR [edx+0x1c],al
  421b55:	push   es
  421b56:	dec    ebx
  421b57:	jle    0x421b74
  421b59:	add    DWORD PTR [esi-0x79661cbe],eax
  421b5f:	mov    ch,0x9e
  421b61:	and    eax,0x99e358c9
  421b66:	xchg   BYTE PTR [edx+0xb],ch
  421b69:	mov    ah,al
  421b6b:	inc    edx
  421b6c:	jecxz  0x421b07
  421b6e:	mov    bl,0x6a
  421b70:	inc    ecx
  421b71:	jnp    0x421bb7
  421b73:	ficomp WORD PTR [esi-0x79]
  421b76:	int    0xc5
  421b78:	fmul   DWORD PTR ds:0xc26b739
  421b7e:	mov    WORD PTR [edx-0x1d],es
  421b81:	add    eax,DWORD PTR [edx-0x1a38a18e]
  421b87:	jb     0x421c02
  421b89:	jl     0x421ba6
  421b8b:	and    bl,0xb5
  421b8e:	das    
  421b8f:	inc    edx
  421b90:	fwait
  421b91:	(bad)  
  421b92:	jp     0x421bd6
  421b94:	jecxz  0x421c0e
  421b96:	mov    ecx,0x859798bd
  421b9b:	adc    BYTE PTR [ebx+0x1eb57219],ah
  421ba1:	adc    al,0x49
  421ba3:	ins    BYTE PTR es:[edi],dx
  421ba4:	fwait
  421ba5:	or     cl,BYTE PTR [ebx-0x3677873d]
  421bab:	dec    ebp
  421bac:	rcr    BYTE PTR [ecx-0x614a7700],cl
  421bb2:	adc    ebp,edi
  421bb4:	inc    edx
  421bb5:	mov    bl,0xc
  421bb7:	xchg   esp,eax
  421bb8:	push   cs
  421bb9:	icebp  
  421bba:	ret    
  421bbb:	imul   eax,eax,0x4d630027
  421bc1:	dec    ebx
  421bc2:	jg     0x421b88
  421bc4:	rcl    BYTE PTR [ebx+0xa44feb4],cl
  421bca:	loope  0x421c39
  421bcc:	jl     0x421bb5
  421bce:	cs xchg ebx,eax
  421bd0:	push   ax
  421bd2:	xor    ah,al
  421bd4:	aas    
  421bd5:	or     dh,BYTE PTR [esi+ebp*4-0xd47a429]
  421bdc:	mov    ecx,0xc3a263f3
  421be1:	or     ch,cl
  421be3:	test   DWORD PTR [edx-0x447001c1],edi
  421be9:	or     ebp,eax
  421beb:	test   DWORD PTR [edx-0x7e],eax
  421bee:	pushf  
  421bef:	xchg   ebx,eax
  421bf0:	rcr    ah,0x5d
  421bf3:	cmp    eax,0xcef13fba
  421bf8:	cmc    
  421bf9:	pop    ebp
  421bfa:	pusha  
  421bfb:	sub    bl,cl
  421bfd:	xor    DWORD PTR [edx+eiz*8],0x6c
  421c01:	lock sub al,0x8b
  421c04:	ss mov eax,0x16b98334
  421c0a:	out    dx,eax
  421c0b:	test   DWORD PTR [edi-0x10],ebp
  421c0e:	ficomp WORD PTR [ebx+0x78]
  421c11:	lock jae 0x421c14
  421c14:	test   eax,0x8bfd89c3
  421c19:	mov    edx,0x8caae816
  421c1e:	(bad)  
  421c1f:	out    0xa2,al
  421c21:	mov    esp,ds
  421c23:	jmp    0xe404:0x8157ba5f
  421c2a:	icebp  
  421c2b:	jmp    0xddc65eb5
  421c30:	test   BYTE PTR [esi+edi*8+0x22],dh
  421c34:	cli    
  421c35:	dec    esi
  421c36:	dec    ecx
  421c37:	pop    esi
  421c38:	xor    BYTE PTR [edx+0x77],cl
  421c3b:	das    
  421c3c:	sbb    ebx,DWORD PTR [ebx]
  421c3e:	test   BYTE PTR [edx+edx*4+0x6f0082c9],bl
  421c45:	inc    ebp
  421c46:	or     al,BYTE PTR [eax]
  421c48:	aad    0x0
  421c4a:	lock mov bh,ah
  421c4d:	inc    esp
  421c4e:	icebp  
  421c4f:	jmp    FWORD PTR [edi]
  421c51:	out    dx,eax
  421c52:	enter  0x2bc2,0x46
  421c56:	push   edi
  421c57:	mov    esp,DWORD PTR [esi-0x6e]
  421c5a:	enter  0x9085,0xd9
  421c5e:	adc    BYTE PTR [ebx-0x27],dl
  421c61:	cmp    bh,bl
  421c63:	sub    ebx,DWORD PTR [edi]
  421c65:	cmp    ebx,DWORD PTR ds:0x2df19406
  421c6b:	adc    ch,cl
  421c6d:	mov    ecx,0xb5674118
  421c72:	xor    cl,BYTE PTR [ebx+ecx*4-0x4e]
  421c76:	jl     0x421c7a
  421c78:	add    BYTE PTR [edi+edi*2+0x654a4f31],cl
  421c7f:	dec    edi
  421c80:	pop    ebx
  421c81:	mov    al,0x8
  421c83:	or     DWORD PTR [eax],eax
  421c85:	jp     0x421cc8
  421c87:	in     eax,0x8b
  421c89:	stos   BYTE PTR es:[edi],al
  421c8a:	mov    esi,0xc8e3ec8a
  421c8f:	je     0x421c9d
  421c91:	scas   eax,DWORD PTR es:[edi]
  421c92:	mov    esp,0x45afd587
  421c97:	or     dl,BYTE PTR [ebx+0x22]
  421c9a:	repz stc 
  421c9c:	push   esi
  421c9d:	les    edi,FWORD PTR [edi+0x56]
  421ca0:	mov    esi,esi
  421ca2:	loopne 0x421cae
  421ca4:	(bad)  
  421ca5:	push   0x4d
  421ca7:	icebp  
  421ca8:	mov    WORD PTR [edx+0x4e],fs
  421cab:	dec    edi
  421cac:	adc    DWORD PTR [edx+0x6275f1b9],0x3f
  421cb3:	sbb    eax,0x5fbe00f
  421cb8:	(bad)  
  421cb9:	sub    cl,BYTE PTR [ecx+ecx*4+0x11]
  421cbd:	xchg   BYTE PTR [ecx+ecx*1],al
  421cc0:	mov    BYTE PTR [edi-0x2cb23955],0x11
  421cc7:	cmc    
  421cc8:	mov    ch,0xc3
  421cca:	add    esi,DWORD PTR [ecx-0x32]
  421ccd:	inc    edi
  421cce:	add    eax,0x931c8a08
  421cd3:	outs   dx,DWORD PTR ds:[esi]
  421cd4:	aas    
  421cd5:	xchg   BYTE PTR [eax+0x2c2f525b],bh
  421cdb:	daa    
  421cdc:	add    BYTE PTR [eax],al
  421cde:	std    
  421cdf:	pop    esp
  421ce0:	inc    edi
  421ce1:	fimul  WORD PTR [edx-0x72fceb96]
  421ce7:	mov    edx,0x356e8d6f
  421cec:	(bad)  
  421ced:	inc    DWORD PTR [eax+esi*2]
  421cf0:	or     DWORD PTR [eax-0x77f94f7d],eax
  421cf6:	dec    ebx
  421cf7:	sahf   
  421cf8:	fwait
  421cf9:	adc    al,0x81
  421cfb:	fnstenv [edx-0xb72fa07]
  421d01:	mov    esi,0xe646ace4
  421d06:	xor    BYTE PTR [edi+ebp*1+0x6fa2f789],0x3f
  421d0e:	xchg   BYTE PTR [edi+eax*1-0x7dd47c4e],al
  421d15:	cld    
  421d16:	test   BYTE PTR [ecx-0xb],ah
  421d19:	or     al,0xf8
  421d1b:	ins    DWORD PTR es:[edi],dx
  421d1c:	add    BYTE PTR [eax-0x79906859],al
  421d22:	jle    0x421d49
  421d24:	int    0xff
  421d26:	lods   al,BYTE PTR ds:[esi]
  421d27:	lods   al,BYTE PTR ds:[esi]
  421d28:	push   esi
  421d29:	cmp    al,BYTE PTR [esi]
  421d2b:	mov    esi,0x8a15fffd
  421d30:	hlt    
  421d31:	mov    ch,0x75
  421d33:	dec    eax
  421d34:	outs   dx,DWORD PTR ds:[esi]
  421d35:	das    
  421d36:	mov    DWORD PTR [edx-0x6f],eax
  421d39:	nop
  421d3a:	je     0x421d8c
  421d3c:	cdq    
  421d3d:	xor    eax,0xa12af87a
  421d42:	add    BYTE PTR [eax],cl
  421d44:	xor    esp,ebp
  421d46:	mov    eax,ds:0xa1df1300
  421d4b:	or     BYTE PTR [ebx],cl
  421d4d:	jmp    0x4c8d26d8
  421d52:	hlt    
  421d53:	or     DWORD PTR [ebx+0x6d],ebx
  421d56:	test   al,0x34
  421d58:	retf   
  421d59:	retf   
  421d5a:	add    al,0xfe
  421d5c:	adc    ah,ch
  421d5e:	jnp    0x421d21
  421d60:	inc    ebx
  421d61:	fs inc ebx
  421d63:	test   ebx,eax
  421d65:	jle    0x421d5e
  421d67:	sbb    DWORD PTR [ecx+0x60],edx
  421d6a:	retf   
  421d6b:	adc    al,al
  421d6d:	lock test eax,0xc0cc1bab
  421d73:	mov    DWORD PTR [ecx+0x16f9f725],ecx
  421d79:	jl     0x421d93
  421d7b:	push   es
  421d7c:	scas   eax,DWORD PTR es:[edi]
  421d7d:	fbstp  TBYTE PTR [edx+edx*2+0xf0317cd]
  421d84:	push   es
  421d85:	jmp    0x421e03
  421d87:	mov    al,0xc9
  421d89:	push   ds
  421d8a:	adc    BYTE PTR [esi+0x1a84e08f],cl
  421d90:	inc    ebx
  421d91:	jecxz  0x421d96
  421d93:	pop    eax
  421d94:	jae    0x421d4f
  421d96:	aad    0xd7
  421d98:	jnp    0x421d62
  421d9a:	xchg   ebp,eax
  421d9b:	inc    ebx
  421d9c:	je     0x421d58
  421d9e:	add    al,0x35
  421da1:	fadd   QWORD PTR [ebx+0x7de34e1c]
  421da7:	add    BYTE PTR [esi-0x397b21ca],cl
  421dad:	inc    esp
  421dae:	pushf  
  421daf:	add    eax,DWORD PTR [edi-0x33]
  421db2:	or     ch,BYTE PTR [eax]
  421db4:	mov    cl,0x7b
  421db6:	inc    ecx
  421db7:	idiv   BYTE PTR [edx+0x4e]
  421dba:	mov    eax,0x37c7f028
  421dbf:	jae    0x421e03
  421dc1:	mov    edi,0x883bebe4
  421dc6:	xchg   BYTE PTR [eax],ah
  421dc8:	test   BYTE PTR [ebx-0x76],0x40
  421dcc:	data16 int3 
  421dce:	dec    ebx
  421dcf:	sub    cl,BYTE PTR [edi-0x2d]
  421dd2:	retf   
  421dd3:	aaa    
  421dd4:	jge    0x421e37
  421dd6:	ret    0x6ef2
  421dd9:	xor    edi,eax
  421ddb:	ins    DWORD PTR es:[edi],dx
  421ddc:	ins    DWORD PTR es:[edi],dx
  421ddd:	xor    ecx,DWORD PTR [ecx]
  421ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421de0:	jg     0x421d6a
  421de2:	and    BYTE PTR [ebp+0x6a4cb730],0x88
  421de9:	inc    ebx
  421dea:	outs   dx,BYTE PTR ds:[esi]
  421deb:	push   edi
  421dec:	xchg   ecx,eax
  421ded:	mov    ch,0x76
  421def:	mov    dl,0x8b
  421df1:	or     al,0xf2
  421df3:	arpl   WORD PTR [ecx-0x48],ax
  421df6:	test   BYTE PTR [esp+ecx*4+0x45ebebff],dl
  421dfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dfe:	push   es
  421dff:	repz inc esp
  421e01:	leave  
  421e02:	aas    
  421e03:	rcr    DWORD PTR [ebp+0x4],cl
  421e06:	out    dx,al
  421e07:	arpl   WORD PTR [edi+edi*8-0x15],ax
  421e0b:	out    dx,eax
  421e0c:	add    bl,dl
  421e0e:	or     esi,ebp
  421e10:	test   eax,0xc1ca43a3
  421e15:	mov    ecx,DWORD PTR [esp+ecx*8+0x61]
  421e19:	lock mov esp,0x727f3f7f
  421e1f:	ret    
  421e20:	jno    0x421e0a
  421e22:	mov    ebx,0x540fbb87
  421e27:	test   DWORD PTR [esi+esi*2],edx
  421e2a:	leave  
  421e2b:	inc    esi
  421e2c:	add    BYTE PTR [edx+0x1345ee46],bl
  421e32:	cmp    eax,DWORD PTR [edi]
  421e34:	test   DWORD PTR [esi],esp
  421e36:	int    0xf1
  421e38:	inc    eax
  421e39:	xor    al,0x80
  421e3b:	jne    0x421e28
  421e3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e3e:	imul   edi,esi,0xffffff81
  421e41:	sub    al,0x4b
  421e43:	out    dx,al
  421e44:	call   FWORD PTR [ecx]
  421e46:	aas    
  421e47:	dec    esp
  421e48:	hlt    
  421e49:	test   ch,bh
  421e4b:	or     DWORD PTR [edi+0x24],ebx
  421e4e:	jns    0x421e1b
  421e50:	or     BYTE PTR [edi-0xc],bl
  421e53:	xor    al,0xa5
  421e56:	inc    ebx
  421e57:	add    BYTE PTR [ecx],0xac
  421e5a:	dec    edi
  421e5b:	lock jne 0x421e91
  421e5e:	xor    eax,0x51540130
  421e63:	test   BYTE PTR [edx+0x78],cl
  421e66:	aas    
  421e67:	sbb    eax,0xeef23d06
  421e6c:	mov    BYTE PTR [edi],ch
  421e6e:	or     BYTE PTR [eax+0x75],0x0
  421e72:	adc    ebp,ebx
  421e74:	retf   0x8339
  421e77:	popf   
  421e78:	or     eax,0xeef2d874
  421e7d:	je     0x421e02
  421e7f:	mov    esi,0x91f2ff57
  421e84:	pop    ss
  421e85:	inc    eax
  421e86:	out    dx,eax
  421e87:	ror    ch,0xc
  421e8a:	cmp    bh,ch
  421e8c:	out    dx,al
  421e8d:	test   DWORD PTR [edi],ebx
  421e8f:	rol    DWORD PTR [ebx],cl
  421e91:	mov    bl,BYTE PTR [ebx-0x54cf116a]
  421e97:	xchg   ecx,eax
  421e98:	dec    ecx
  421e99:	jne    0x421e8c
  421e9b:	add    BYTE PTR ds:0xe5397200,cl
  421ea1:	push   ecx
  421ea2:	ins    BYTE PTR es:[edi],dx
  421ea3:	xchg   ecx,eax
  421ea4:	enter  0x8656,0x7c
  421ea8:	outs   dx,BYTE PTR ds:[esi]
  421ea9:	dec    edx
  421eaa:	cdq    
  421eab:	and    esi,DWORD PTR [ebx+0x6e3228fd]
  421eb1:	inc    DWORD PTR [esi+0x76890dab]
  421eb7:	jno    0x421ebf
  421eb9:	(bad)  
  421eba:	jns    0x421e67
  421ebc:	jne    0x421ecb
  421ebe:	(bad)  
  421ebf:	in     eax,dx
  421ec0:	(bad)  
  421ec1:	cmp    BYTE PTR [ecx+ebx*4],bh
  421ec4:	add    BYTE PTR [eax+0xc042056],cl
  421eca:	adc    dh,bl
  421ecc:	or     BYTE PTR [eax+0xb73b3b3],cl
  421ed2:	outs   dx,DWORD PTR ds:[esi]
  421ed3:	xor    eax,esp
  421ed5:	add    DWORD PTR [eax],eax
  421ed7:	dec    esp
  421ed8:	stos   DWORD PTR es:[edi],eax
  421ed9:	mov    dl,0xfd
  421edb:	mov    DWORD PTR ds:0x46fcfdb3,esi
  421ee1:	pop    es
  421ee2:	inc    bl
  421ee4:	pop    esp
  421ee5:	outs   dx,BYTE PTR ds:[esi]
  421ee6:	sbb    eax,0xd06bf0e
  421eeb:	rcr    ch,1
  421eed:	or     BYTE PTR [eax],bh
  421eef:	ret    
  421ef0:	mov    bh,0x9a
  421ef2:	add    eax,DWORD PTR [eax-0x1a]
  421ef5:	or     bh,bh
  421ef7:	dec    ebx
  421ef8:	in     al,0x9a
  421efa:	int3   
  421efb:	pop    ecx
  421efc:	int    0xa4
  421efe:	mov    ah,0xb2
  421f01:	or     eax,0xdaa8468
  421f06:	add    cl,ah
  421f08:	push   ds
  421f09:	jmp    0xd14f:0xf1eb0507
  421f10:	popf   
  421f11:	fst    QWORD PTR ds:0xc38cab46
  421f17:	xchg   edx,eax
  421f18:	jmp    0xa9641f0e
  421f1d:	push   es
  421f1e:	add    BYTE PTR [esi-0x7abc9bbe],al
  421f24:	adc    dl,BYTE PTR [eax-0x67b19a71]
  421f2a:	lock imul edx,DWORD PTR [ebx+eiz*1+0x4],0x41f78607
  421f33:	test   DWORD PTR [edx+0x7c],eax
  421f36:	sti    
  421f37:	push   es
  421f38:	stos   BYTE PTR es:[edi],al
  421f39:	jecxz  0x421eca
  421f3b:	add    BYTE PTR [edi+0x8f4f609],cl
  421f41:	xor    ebx,edi
  421f43:	jl     0x421efe
  421f45:	dec    edx
  421f46:	and    al,0xb1
  421f48:	push   es
  421f49:	sbb    edi,0xffffffad
  421f4c:	popa   
  421f4d:	adc    al,BYTE PTR [eax+0x6]
  421f50:	push   edx
  421f51:	cmp    BYTE PTR [ebx+edi*8+0x6],0xaa
  421f56:	jecxz  0x421ee7
  421f58:	push   0x6f2af09
  421f5d:	stos   BYTE PTR es:[edi],al
  421f5e:	in     al,0x8f
  421f60:	xchg   BYTE PTR [eax+0x23],dh
  421f63:	inc    edx
  421f64:	dec    BYTE PTR [esp+edi*2+0x19a9293d]
  421f6b:	push   es
  421f6c:	sbb    ch,BYTE PTR [eax+0x4aa106e1]
  421f72:	jl     0x421fad
  421f74:	or     dh,BYTE PTR [ebx]
  421f76:	out    0x7a,eax
  421f78:	retf   
  421f79:	(bad)  
  421f7a:	adc    DWORD PTR [ebx],ebx
  421f7c:	in     eax,0xbe
  421f7e:	loopne 0x421f85
  421f80:	fiadd  WORD PTR [edi+0x64]
  421f83:	inc    esp
  421f84:	test   DWORD PTR [esp+edi*2],edx
  421f87:	ss jmp 0xda47f6a6
  421f8d:	repnz loop 0x421fd0
  421f90:	add    al,0xb5
  421f92:	add    DWORD PTR cs:[edi-0x76865b7e],edx
  421f99:	mov    edi,0x3682c00a
  421f9e:	and    BYTE PTR cs:[eax],al
  421fa1:	push   ss
  421fa2:	inc    bx
  421fa4:	sbb    eax,0xf976049b
  421fa9:	fdiv   QWORD PTR [eax]
  421fab:	in     al,0x62
  421fad:	push   0x4762c1ca
  421fb2:	mov    ds:0xbe8387ac,eax
  421fb7:	in     eax,0xb9
  421fb9:	pop    ds
  421fba:	mov    ebx,0xbc1febe4
  421fbf:	push   edi
  421fc0:	push   ss
  421fc1:	out    dx,eax
  421fc2:	mov    ah,dl
  421fc4:	xor    eax,0x2af1be7e
  421fc9:	mov    ebp,DWORD PTR [ebx]
  421fcb:	add    ah,BYTE PTR [edx-0x70]
  421fce:	mov    esi,0x86cee57a
  421fd3:	test   DWORD PTR [edx],ebx
  421fd5:	push   0xffffffc7
  421fd7:	out    dx,al
  421fd8:	mov    ebp,DWORD PTR ds:[edx+0x3fc269ff]
  421fdf:	pop    ebp
  421fe0:	bound  esp,QWORD PTR [eax-0x36]
  421fe3:	rcl    DWORD PTR [ecx],0x83
  421fe6:	mov    edx,0x859f1ef1
  421feb:	int    0x62
  421fed:	ficomp WORD PTR [esi+0x6]
  421ff0:	bound  ecx,QWORD PTR ds:0xdab04315
  421ff6:	leave  
  421ff7:	cli    
  421ff8:	jne    0x421ff1
  421ffa:	add    esi,DWORD PTR [edi-0x2b]
  421ffd:	pop    ds
  421ffe:	inc    edx
  421fff:	cmp    eax,0xc05791b
  422004:	inc    eax
  422005:	add    BYTE PTR [ebx-0x54],bh
  422008:	retf   
  422009:	leave  
  42200a:	xchg   DWORD PTR [ecx+0x718742ff],ebp
  422010:	fcomp  QWORD PTR [ebx+edx*1+0x41]
  422014:	push   ebx
  422015:	add    BYTE PTR [eax],cl
  422017:	push   eax
  422018:	mov    al,0xe0
  42201a:	lods   al,BYTE PTR ds:[esi]
  42201b:	out    dx,al
  42201c:	jmp    0xee8778b8
  422021:	mov    esi,edi
  422023:	cmp    ebp,esi
  422025:	je     0x421fab
  422027:	cmp    DWORD PTR [ebp+0x24],ecx
  42202a:	mov    bl,0x56
  42202c:	ins    DWORD PTR es:[edi],dx
  42202d:	push   eax
  42202f:	inc    ebp
  422030:	mov    eax,es
  422032:	jnp    0x421fe8
  422034:	or     BYTE PTR [ebx+edi*4-0x52],0x8c
  422039:	leave  
  42203a:	jnp    0x422080
  42203c:	mov    DWORD PTR [ecx],eax
  42203e:	in     al,0x76
  422040:	loop   0x42204a
  422042:	cwde   
  422043:	push   esi
  422044:	adc    DWORD PTR [edi-0x3fc5c11f],0x8cbe020
  42204e:	outs   dx,DWORD PTR ds:[esi]
  42204f:	call   0xbe2711d6
  422054:	mov    ch,cl
  422056:	pop    edi
  422057:	retf   0x4922
  42205a:	sti    
  42205b:	test   al,0x8a
  42205d:	jmp    0x324fea8e
  422062:	pop    edi
  422063:	(bad)  
  422065:	push   edi
  422066:	jmp    0x12b13a5
  42206b:	xor    BYTE PTR [eax-0x12],al
  42206e:	call   eax
  422070:	pop    edx
  422071:	ud0    ebp,edi
  422074:	mov    ebp,0xd580ca82
  422079:	or     eax,0xd73aa98b
  42207e:	call   0x306b0c
  422083:	test   BYTE PTR [edx+0x1bdbc08a],bh
  422089:	mov    esi,ecx
  42208b:	mov    bh,0x19
  42208d:	stc    
  42208e:	inc    DWORD PTR [esi+0x3001b690]
  422094:	in     al,dx
  422095:	push   esp
  422096:	push   ebx
  422097:	std    
  422098:	jmp    DWORD PTR [ecx]
  42209a:	or     al,0xd
  42209c:	sti    
  42209d:	cmp    ebx,0x33
  4220a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220a1:	cmp    al,al
  4220a3:	popf   
  4220a4:	push   esi
  4220a5:	or     DWORD PTR [eax],0x7406d305
  4220ab:	pop    ecx
  4220ac:	jb     0x422120
  4220ae:	pop    ds
  4220af:	dec    edi
  4220b0:	push   edi
  4220b1:	sbb    BYTE PTR [ecx+0x1a],cl
  4220b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220b5:	ds jne 0x422057
  4220b8:	pop    ebp
  4220b9:	faddp  st(1),st
  4220bb:	cmp    DWORD PTR [eax],0xd
  4220be:	call   0xe7486679
  4220c3:	test   BYTE PTR [ebp+0x7],al
  4220c6:	push   edx
  4220c7:	std    
  4220c8:	addr16 add esi,0xfc0ad06e
  4220cf:	add    BYTE PTR [ecx+0x4],bl
  4220d2:	es sti 
  4220d4:	(bad)  
  4220d5:	mov    ds:0xfb49cb80,eax
  4220da:	or     DWORD PTR [edi-0x880ecb8],eax
  4220e0:	cmp    DWORD PTR [eax-0x1f],esi
  4220e3:	or     eax,0x4c62cd4
  4220e8:	std    
  4220e9:	ja     0x42206c
  4220eb:	retf   0x572e
  4220ee:	lock sti 
  4220f0:	sbb    DWORD PTR [eax*8+0x26db05b],esp
  4220f7:	add    ch,bh
  4220f9:	test   al,0x80
  4220fb:	dec    esp
  4220fc:	stos   BYTE PTR es:[edi],al
  4220fd:	mov    bl,0x45
  4220ff:	dec    eax
  422100:	jae    0x4220af
  422102:	(bad)  
  422103:	jmp    0xb127fb61
  422108:	adc    BYTE PTR [edx-0x17],al
  42210b:	add    cl,BYTE PTR [esi]
  42210d:	mov    edx,0x59530266
  422112:	fdiv   DWORD PTR [edi-0x56]
  422115:	inc    esi
  422116:	ins    BYTE PTR es:[edi],dx
  422117:	push   edi
  422118:	mov    ds:0x9d27c46,al
  42211d:	sbb    bl,0x77
  422120:	mov    ebp,0xc688b8b8
  422125:	sub    eax,0x2dd188ed
  42212a:	in     eax,0x8c
  42212c:	mov    eax,ds:0x8eeea8cb
  422131:	adc    DWORD PTR [ebx-0x480bff58],ecx
  422137:	xor    BYTE PTR [esi],0xc6
  42213a:	sbb    BYTE PTR [ebp-0x494879f5],ah
  422140:	(bad)  
  422141:	aas    
  422142:	add    al,0xe3
  422144:	jmp    0x422160
  422146:	shl    DWORD PTR [ecx+0x2],1
  422149:	mov    dh,0x82
  42214b:	test   bh,bh
  42214d:	pop    ds
  42214e:	add    al,0xe3
  422150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422151:	xchg   ah,bh
  422153:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422154:	add    esi,ecx
  422156:	dec    edx
  422157:	popf   
  422158:	inc    esi
  422159:	xchg   BYTE PTR [ebx-0x3bcd7172],al
  42215f:	aas    
  422160:	daa    
  422161:	clts   
  422163:	inc    ebx
  422164:	mov    es,ebx
  422166:	dec    edx
  422167:	push   0x50
  422169:	and    cl,ah
  42216b:	mov    dh,0xf
  42216d:	clts   
  42216f:	sbb    ecx,DWORD PTR [esi+0x506a52cb]
  422175:	and    al,ah
  422177:	sub    eax,DWORD PTR [ebx+edi*8]
  42217a:	add    eax,0xfdc56927
  42217f:	push   cs
  422180:	mov    al,es:0xedac0ac9
  422186:	stos   BYTE PTR es:[edi],al
  422187:	cmp    cl,BYTE PTR ds:0xabc3b687
  42218d:	jbe    0x4221d1
  42218f:	push   edi
  422190:	jb     0x422168
  422192:	aaa    
  422193:	fdivp  st(5),st
  422195:	or     bl,BYTE PTR [esi]
  422197:	cli    
  422198:	jmp    0xfe78239d
  42219d:	lock pop edi
  42219f:	adc    eax,DWORD PTR [ebp+0x47848a3c]
  4221a5:	mov    dh,0x8a
  4221a7:	sub    eax,0x463f6211
  4221ac:	lea    ecx,[edx+eiz*4]
  4221af:	inc    edx
  4221b0:	xchg   DWORD PTR [ecx+0x26854e1e],ebp
  4221b6:	cmp    BYTE PTR [edi+0x77029177],0x3b
  4221bd:	ret    0x4af9
  4221c0:	icebp  
  4221c1:	and    al,0x7a
  4221c3:	jns    0x42220c
  4221c5:	jno    0x4221bf
  4221c7:	stos   DWORD PTR es:[edi],eax
  4221c8:	test   esp,esi
  4221ca:	xchg   ebp,eax
  4221cb:	leave  
  4221cc:	push   edi
  4221cd:	pop    ebp
  4221ce:	or     esi,DWORD PTR [eax+0x4503edfe]
  4221d4:	or     ebp,ecx
  4221d6:	test   DWORD PTR [edi+0x464a6a08],edi
  4221dc:	add    DWORD PTR [ebx+0x39],ebp
  4221df:	inc    edx
  4221e0:	or     ch,cl
  4221e2:	jp     0x4221e1
  4221e4:	cmc    
  4221e5:	out    0xfe,al
  4221e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221e8:	or     ch,cl
  4221ea:	test   DWORD PTR [edi+0x508ed40],edi
  4221f0:	(bad)  
  4221f1:	in     eax,dx
  4221f2:	add    DWORD PTR [ebx-0x4c7a16f6],ecx
  4221f8:	retf   
  4221f9:	jmp    0x10c6483
  4221fe:	add    al,bh
  422200:	mov    esi,0x42ef00b1
  422205:	mov    bh,BYTE PTR [ebp-0x8]
  422208:	inc    edx
  422209:	jbe    0x422217
  42220b:	lock or DWORD PTR [edx],0x0
  42220f:	out    dx,eax
  422210:	add    al,BYTE PTR ds:0xa42fe84
  422216:	add    BYTE PTR [esp+edx*4-0x75],ah
  42221a:	loop   0x4221fb
  42221c:	inc    edx
  42221d:	or     al,BYTE PTR [eax+0x45f53d83]
  422223:	inc    ebp
  422225:	inc    edi
  422226:	or     al,0x67
  422228:	cmp    al,BYTE PTR [edx+0x48]
  42222b:	jae    0x4222a4
  42222d:	inc    edx
  42222e:	dec    eax
  42222f:	xor    DWORD PTR [ebx+0x71],0xffffffe8
  422233:	mov    ds:0x783262e,eax
  422238:	dec    ebx
  422239:	jbe    0x422252
  42223b:	sbb    al,0xab
  42223d:	sbb    cl,BYTE PTR [edi]
  42223f:	repnz mov ebp,0xe16f000a
  422245:	push   es
  422246:	mov    edx,0x46393e9c
  42224b:	addr16 sub eax,0xa69d8578
  422251:	jp     0x4221de
  422253:	and    BYTE PTR [edx-0x77],dl
  422256:	dec    edi
  422257:	push   ebx
  422258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422259:	xor    ecx,DWORD PTR [ebx+0x4d894a20]
  42225f:	(bad)  
  422260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422261:	cmp    ecx,DWORD PTR [ebx-0x76a21400]
  422267:	dec    ebx
  422268:	xchg   DWORD PTR [edi+0x51dc8b23],esp
  42226e:	mov    DWORD PTR [ebx+0x23],ecx
  422271:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422272:	sub    ecx,DWORD PTR [edx-0x3f79a614]
  422278:	xchg   dh,dl
  42227a:	add    eax,0x1dac47f3
  42227f:	add    BYTE PTR [esi-0x78c3feca],al
  422285:	cs inc esi
  422287:	repz (bad) 
  422289:	stos   DWORD PTR es:[edi],eax
  42228a:	sub    eax,0x2e2f8600
  42228f:	xchg   DWORD PTR [ebp-0x4d],eax
  422292:	test   BYTE PTR [edi-0x76],al
  422295:	xor    BYTE PTR [eax],bl
  422297:	jg     0x422265
  422299:	lahf   
  42229a:	jns    0x4222bd
  42229c:	add    eax,0x6f721292
  4222a1:	sub    ah,cl
  4222a3:	hlt    
  4222a4:	jg     0x4222f3
  4222a6:	push   ss
  4222a7:	jne    0x422310
  4222a9:	pop    edx
  4222aa:	push   esi
  4222ab:	lea    eax,[eax-0x69]
  4222ae:	pop    ebp
  4222af:	das    
  4222b0:	mov    eax,ds:0x98afc7d3
  4222b5:	aam    0x85
  4222b7:	jge    0x422337
  4222b9:	es (bad) 
  4222bb:	js     0x422338
  4222bd:	int3   
  4222be:	dec    eax
  4222bf:	add    al,0x86
  4222c1:	stos   DWORD PTR es:[edi],eax
  4222c2:	or     eax,0xc790f280
  4222c7:	inc    ebp
  4222c8:	add    BYTE PTR [ecx-0x56],dh
  4222cb:	test   BYTE PTR [edx],al
  4222cd:	lahf   
  4222ce:	pop    esi
  4222cf:	repnz push DWORD PTR [ecx+0x28]
  4222d3:	mov    esi,esp
  4222d5:	mov    ah,BYTE PTR [esp+ecx*4-0xef3af00]
  4222dc:	or     bl,0x4
  4222df:	push   es
  4222e0:	jne    0x42226b
  4222e2:	mov    eax,0x7bc339cd
  4222e7:	jae    0x4222e8
  4222e9:	je     0x422356
  4222eb:	inc    esi
  4222ec:	pop    ebx
  4222ed:	enter  0xcc62,0xc
  4222f1:	xchg   BYTE PTR [edx-0x2b],al
  4222f4:	ret    
  4222f5:	and    DWORD PTR [esi+esi*4+0x7c3228a],ebp
  4222fc:	pop    esp
  4222fd:	add    DWORD PTR [edx-0x1d],0x52
  422301:	push   esp
  422302:	or     eax,0xc98e817c
  422307:	test   al,0x43
  422309:	or     eax,DWORD PTR [edx-0x7d67f992]
  42230f:	or     bh,BYTE PTR [ebp-0x76]
  422312:	inc    edx
  422313:	jecxz  0x422380
  422315:	xchg   BYTE PTR [edx-0x1d],al
  422318:	adc    ebx,DWORD PTR [esi-0x50]
  42231b:	cs add al,0x86
  42231e:	adc    cl,BYTE PTR [esi+0x60]
  422321:	mov    dl,0xa9
  422323:	not    bl
  422325:	xchg   BYTE PTR [edx+0x7a],al
  422328:	dec    eax
  422329:	repnz mov esi,0xcd0077a3
  42232f:	rcr    BYTE PTR [esi],0xf0
  422332:	mov    cs,ebx
  422334:	push   ds
  422335:	in     al,dx
  422336:	(bad)  
  422337:	shl    BYTE PTR [edx],0x8
  42233a:	xchg   BYTE PTR [edx-0x74],al
  42233d:	add    al,BYTE PTR [ecx]
  42233f:	dec    DWORD PTR [edx-0x75407176]
  422345:	or     ecx,DWORD PTR [ebp-0x79f84d40]
  42234b:	inc    edx
  42234c:	mov    esp,0x68445a50
  422351:	sub    ecx,DWORD PTR [edx+0x4682e342]
  422357:	dec    ebx
  422358:	mov    bl,0x8a
  42235a:	push   edi
  42235b:	ror    BYTE PTR [ecx+0xb],0xe0
  42235f:	(bad)  
  422360:	int    0x3
  422362:	or     DWORD PTR [ebp+0x2e0fde7c],ecx
  422368:	inc    ebx
  422369:	mov    ebx,cs
  42236b:	sahf   
  42236c:	or     al,BYTE PTR [ecx+0x63]
  42236f:	mov    eax,0x83092ef1
  422374:	add    DWORD PTR [ebp-0x12],ebp
  422377:	mov    bl,0xf1
  422379:	jmp    0x6328518e
  42237e:	xor    ebx,DWORD PTR ds:0xaa85830b
  422384:	sbb    al,BYTE PTR [edi]
  422386:	clc    
  422387:	mov    bh,0x86
  422389:	sub    DWORD PTR [eax-0x7a157e42],eax
  42238f:	inc    edx
  422390:	icebp  
  422391:	je     0x422393
  422393:	jmp    0x8495fc53
  422398:	sbb    al,0xa
  42239a:	ror    esp,1
  42239c:	mov    ch,0xf1
  42239e:	(bad)  
  42239f:	inc    BYTE PTR [edx-0x4cc29aff]
  4223a5:	icebp  
  4223a6:	jmp    0x73285165
  4223ab:	fcomp  DWORD PTR [esi+eax*1]
  4223ae:	inc    ebx
  4223af:	sub    BYTE PTR [edx-0x485c531a],0x86
  4223b6:	test   eax,0xea6dbe8b
  4223bb:	test   DWORD PTR [edx-0x7b],eax
  4223be:	ss jbe 0x42237c
  4223c1:	dec    ecx
  4223c2:	loope  0x4223d0
  4223c4:	std    
  4223c5:	cmc    
  4223c6:	ins    BYTE PTR es:[edi],dx
  4223c7:	pop    edi
  4223c8:	cmp    DWORD PTR ds:0x724d7319,eax
  4223ce:	fcmovnb st,st(5)
  4223d0:	inc    edx
  4223d1:	test   DWORD PTR [ecx+0x1e708b09],edx
  4223d7:	or     ebp,edi
  4223d9:	fnstcw WORD PTR [ecx-0x491d9c21]
  4223df:	mov    BYTE PTR [edi-0x6d2e9d0f],dh
  4223e5:	lea    eax,[eax]
  4223e7:	dec    edx
  4223e8:	or     DWORD PTR [edx],0xffffff89
  4223eb:	loop   0x422467
  4223ed:	pop    ebx
  4223ee:	mov    esp,DWORD PTR [edi+0x7c]
  4223f1:	inc    edi
  4223f2:	shr    BYTE PTR [edi],0xc8
  4223f5:	inc    edi
  4223f6:	enter  0x7700,0xaf
  4223fa:	xor    edi,edi
  4223fc:	jo     0x4223c8
  4223fe:	retf   0x9a0f
  422401:	inc    edx
  422402:	or     eax,DWORD PTR [eax]
  422404:	out    dx,eax
  422405:	ret    
  422406:	ja     0x4223c8
  422408:	xchg   edi,eax
  422409:	jnp    0x42243c
  42240b:	push   eax
  42240d:	leave  
  42240e:	ja     0x4223f0
  422410:	fs adc esp,esi
  422413:	(bad)  
  422414:	sub    bh,BYTE PTR [edx-0x4e5539f6]
  42241a:	or     cl,BYTE PTR [ecx-0x18e45c6]
  422420:	jecxz  0x422467
  422422:	jo     0x422449
  422424:	lods   eax,DWORD PTR ds:[esi]
  422425:	or     cl,BYTE PTR ds:[ebx+0xcf2c1ac]
  42242c:	mov    al,ds:0x9f0218c0
  422431:	cmp    DWORD PTR ds:[ebp-0x25],eax
  422435:	inc    ebp
  422436:	lea    edx,[ecx]
  422438:	lods   eax,DWORD PTR ds:[esi]
  422439:	or     cl,BYTE PTR ds:[ebx-0x3e02b5ac]
  422440:	lahf   
  422441:	or     ah,BYTE PTR ds:[eax]
  422444:	pusha  
  422445:	retf   0x1fb
  422448:	outs   dx,DWORD PTR ds:[esi]
  422449:	inc    esi
  42244a:	jno    0x422444
  42244c:	arpl   WORD PTR [edi],di
  42244e:	mov    eax,gs
  422450:	pop    esi
  422451:	inc    esi
  422452:	or     dh,dh
  422454:	cs inc ebp
  422456:	add    eax,0xa44c084
  42245b:	add    BYTE PTR [eax],al
  42245d:	aad    0x6
  42245f:	adc    al,BYTE PTR [esi+eax*4+0x3908785b]
  422466:	pop    ebx
  422467:	or     eax,0x789b8610
  42246c:	adc    al,0x72
  42246e:	call   0xd:0x9b3e84fe
  422475:	sbb    DWORD PTR [ebx+0xd],ebx
  422478:	and    BYTE PTR [esi-0x2d7c0165],al
  42247e:	call   0xfa:0xd706000d
  422485:	xchg   ecx,eax
  422486:	test   DWORD PTR es:[eax],0xff639b86
  42248d:	push   eax
  42248e:	push   ds
  42248f:	mov    eax,0xf5b8ecaa
  422494:	call   0xfc30771c
  422499:	or     eax,0x6293de8c
  42249e:	fwait
  42249f:	or     eax,0x90c823c
  4224a4:	data16 test BYTE PTR [eax-0x7d],ah
  4224a8:	adc    ah,0x9a
  4224ab:	or     eax,0x5d971c00
  4224b0:	data16 xchg BYTE PTR [esi],ah
  4224b3:	mov    ebx,0xf5e0a168
  4224b8:	jg     0x422488
  4224ba:	call   0xd205949d
  4224bf:	cmc    
  4224c0:	test   DWORD PTR [eax],eax
  4224c2:	(bad)  
  4224c3:	test   al,0x83
  4224c5:	xchg   esi,eax
  4224c6:	xchg   BYTE PTR [ebx-0x628680f3],bl
  4224cc:	jp     0x422520
  4224ce:	add    esi,DWORD PTR [esi+0x46]
  4224d1:	sti    
  4224d2:	imul   edi,DWORD PTR [eax],0x9b86b3ae
  4224d8:	or     eax,0x5d42cfe8
  4224dd:	sti    
  4224de:	dec    ebp
  4224df:	mov    edi,0xb14d6c66
  4224e4:	pop    eax
  4224e5:	push   esp
  4224e6:	or     DWORD PTR [eax+0x15a2eeb3],ecx
  4224ec:	dec    eax
  4224ed:	jno    0x422529
  4224ef:	sbb    BYTE PTR [eax],dh
  4224f1:	adc    DWORD PTR [esi-0x49fc5cac],ebp
  4224f7:	sbb    al,0xeb
  4224f9:	pop    ebx
  4224fa:	add    DWORD PTR [eax-0x4eed90e5],eax
  422500:	adc    BYTE PTR [eax-0x770bc8ba],al
  422506:	dec    ebx
  422507:	or     BYTE PTR [ebx],0x69
  42250a:	mov    ecx,0xf68f08b1
  42250f:	(bad)  
  422510:	stc    
  422511:	jo     0x4224e1
  422513:	call   0x714e:0xb0ddf9f2
  42251a:	(bad)  
  42251b:	cdq    
  42251c:	xchg   ecx,eax
  42251d:	inc    ebp
  42251e:	int    0xb0
  422520:	fiadd  DWORD PTR [eax+ecx*8]
  422523:	mov    al,0xe3
  422525:	xchg   BYTE PTR [eax],al
  422527:	mov    ebp,0xb1f5644
  42252c:	idiv   DWORD PTR [edi-0x7]
  42252f:	lods   eax,DWORD PTR ds:[esi]
  422530:	mov    al,0x8b
  422532:	mov    ebx,0xebe34286
  422537:	lods   al,BYTE PTR ds:[esi]
  422538:	call   0xfb1b:0xc70bfaa0
  42253f:	lea    esi,[eax-0x633b70cd]
  422545:	inc    esp
  422546:	mov    BYTE PTR [ebx],cl
  422548:	sbb    eax,DWORD PTR [eax-0x77ec8206]
  42254e:	jo     0x4225ce
  422550:	mov    ebp,0xb06a9766
  422555:	or     dh,BYTE PTR [esi-0x4b]
  422558:	call   0x2987:0x42856207
  42255f:	jl     0x422536
  422561:	retf   0x4565
  422564:	add    ebx,DWORD PTR ss:[edx]
  422567:	dec    edx
  422568:	and    eax,0xaf116483
  42256d:	icebp  
  42256e:	inc    esi
  42256f:	repnz pushf 
  422571:	or     ebp,ecx
  422573:	test   DWORD PTR [ebp-0x53dc7879],edi
  422579:	icebp  
  42257a:	daa    
  42257b:	test   DWORD PTR [edx+0x4a],eax
  42257e:	mov    al,0x96
  422580:	test   eax,0x4210a4c8
  422585:	test   edx,ebp
  422587:	or     BYTE PTR [ebx+0xe00b8fe],bl
  42258d:	jo     0x42258d
  42258f:	cwde   
  422590:	(bad)  
  422591:	sub    eax,0x9ac5ba9a
  422596:	xchg   ebp,eax
  422597:	cmp    edi,ebx
  422599:	stos   DWORD PTR es:[edi],eax
  42259a:	xchg   BYTE PTR [ecx],ch
  42259c:	mov    esi,es
  42259e:	xchg   al,ch
  4225a0:	test   DWORD PTR [edx+0x3d],eax
  4225a3:	fiadd  WORD PTR [ecx]
  4225a5:	mov    esi,0xabbfd7f6
  4225aa:	cmp    eax,0x370708d7
  4225af:	pop    ecx
  4225b0:	mov    ds:0xafbfbf9a,al
  4225b5:	add    al,0x8d
  4225b7:	test   al,0x86
  4225b9:	das    
  4225ba:	lock fst DWORD PTR [ebx]
  4225bd:	pushf  
  4225be:	cmp    eax,0xbb924a9
  4225c3:	ins    BYTE PTR es:[edi],dx
  4225c4:	inc    ecx
  4225c5:	mov    ds,WORD PTR [ebx+0x3]
  4225c8:	test   DWORD PTR [ebx],edx
  4225ca:	jg     0x422628
  4225cc:	push   ds
  4225cd:	scas   al,BYTE PTR es:[edi]
  4225ce:	icebp  
  4225cf:	add    BYTE PTR [eax],cl
  4225d1:	out    dx,al
  4225d2:	or     eax,DWORD PTR [eax]
  4225d4:	pop    edi
  4225d5:	ret    
  4225d6:	pop    ebx
  4225d7:	push   eax
  4225d8:	xor    BYTE PTR [edi-0x2e],ch
  4225db:	add    al,0x6f
  4225dd:	inc    ebx
  4225de:	or     cl,BYTE PTR [ecx-0x318e68de]
  4225e4:	test   al,0xa9
  4225e6:	pop    ss
  4225e7:	jo     0x422628
  4225e9:	add    ecx,DWORD PTR [edx]
  4225eb:	test   DWORD PTR [edi+0x1f],ebp
  4225ee:	dec    eax
  4225ef:	lea    eax,[eax]
  4225f1:	loop   0x42257d
  4225f3:	pop    edx
  4225f4:	(bad)  
  4225f5:	loop   0x4225e1
  4225f7:	pop    edx
  4225f8:	push   edi
  4225f9:	add    al,cl
  4225fb:	xchg   esp,esi
  4225fd:	imul   ebp,DWORD PTR [ecx+0x1f6850f5],0x2712ffce
  422607:	sbb    al,BYTE PTR [eax-0x11]
  42260a:	test   eax,0x8662dc77
  42260f:	add    eax,0xf58b7244
  422614:	adc    eax,0x4a5373
  422619:	ins    BYTE PTR es:[edi],dx
  42261a:	lods   al,BYTE PTR ds:[esi]
  42261b:	push   es
  42261c:	jne    0x4225e9
  42261e:	imul   edi,DWORD PTR [ecx+0x8],0xffffffd8
  422622:	or     eax,DWORD PTR cs:[ecx]
  422625:	fild   WORD PTR [edx-0x1e]
  422628:	lock or ch,BYTE PTR [ecx+0x3e648bf5]
  42262f:	icebp  
  422630:	dec    esp
  422631:	pop    es
  422632:	outs   dx,BYTE PTR ds:[esi]
  422633:	ret    0x200f
  422636:	cdq    
  422637:	or     al,BYTE PTR [eax]
  422639:	scas   eax,DWORD PTR es:[edi]
  42263a:	mov    ebp,0x2024086f
  42263f:	jmp    0x9c8b:0xbad62c6
  422646:	pop    ebx
  422647:	inc    edi
  422648:	hlt    
  422649:	xchg   BYTE PTR [eax-0x2804802b],bl
  42264f:	or     DWORD PTR [ebx],ecx
  422651:	add    eax,0xfbf8e1
  422656:	imul   esi,DWORD PTR [ecx],0x6c91e830
  42265c:	dec    ebp
  42265d:	add    ch,dh
  42265f:	fwait
  422660:	or     eax,0xf2ebc600
  422665:	jae    0x42262d
  422667:	push   ds
  422668:	pop    eax
  422669:	aam    0x2e
  42266b:	outs   dx,DWORD PTR ds:[esi]
  42266c:	leave  
  42266d:	add    BYTE PTR [esi-0x3c763ae0],al
  422673:	sti    
  422674:	outs   dx,DWORD PTR ds:[esi]
  422675:	leave  
  422676:	jns    0x42269f
  422678:	mov    esp,0x7e9b8600
  42267d:	pop    ebp
  42267e:	xor    ch,BYTE PTR [ecx+0x4fcb89cd]
  422684:	ficom  WORD PTR ds:0xf686aafd
  42268a:	mov    cl,cl
  42268c:	adc    esi,DWORD PTR [edi]
  42268e:	aad    0xd4
  422690:	pslld  mm0,QWORD PTR [edi-0x61]
  422694:	or     al,0x75
  422696:	jge    0x422628
  422698:	iret   
  422699:	dec    edi
  42269b:	sbb    dh,ch
  42269d:	add    dl,BYTE PTR [ebp+0x45]
  4226a0:	fimul  WORD PTR [ecx]
  4226a2:	add    ebx,DWORD PTR [ebx-0x10]
  4226a5:	mov    BYTE PTR [ebx-0x69],al
  4226a8:	cmp    DWORD PTR [esi],0xffffffbc
  4226ab:	xchg   esp,eax
  4226ac:	jnp    0x4226a2
  4226ae:	jne    0x422692
  4226b0:	cs dec ebp
  4226b2:	lods   eax,DWORD PTR ds:[esi]
  4226b3:	mov    ah,0x9a
  4226b5:	sar    edi,0x5e
  4226b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226b9:	call   0xf92927be
  4226be:	sti    
  4226bf:	xor    ah,bl
  4226c1:	jnp    0x4226a7
  4226c3:	inc    DWORD PTR [edx+0x1e]
  4226c6:	mov    al,ds:0xf672cb9e
  4226cb:	jge    0x422686
  4226cd:	es in  al,0xf
  4226d0:	call   DWORD PTR [edx-0x75]
  4226d3:	ret    
  4226d4:	xchg   esi,eax
  4226d5:	mov    ah,0xda
  4226d7:	inc    DWORD PTR [esi]
  4226d9:	pop    ebx
  4226da:	(bad)  
  4226db:	fcmovnu st,st(6)
  4226dd:	push   0x49
  4226df:	adc    ch,BYTE PTR [ebx-0x2]
  4226e2:	lahf   
  4226e3:	fild   DWORD PTR [edi+0x2a]
  4226e6:	pop    ecx
  4226e7:	push   edx
  4226e8:	aaa    
  4226e9:	out    0x3a,eax
  4226eb:	add    DWORD PTR [edi],esi
  4226ed:	in     eax,dx
  4226ee:	mov    BYTE PTR [ebx-0x69f9b41e],dh
  4226f4:	inc    edx
  4226f5:	jecxz  0x4226e1
  4226f7:	jne    0x422764
  4226f9:	mov    gs,edi
  4226fb:	fwait
  4226fc:	sti    
  4226fd:	imul   eax,DWORD PTR [edi+0x5a],0x3
  422701:	int3   
  422702:	int3   
  422703:	outs   dx,BYTE PTR ds:[esi]
  422704:	mov    edi,0x5b1e3b90
  422709:	jae    0x422701
  42270b:	std    
  42270c:	lds    esp,FWORD PTR [ebx]
  42270e:	jo     0x422773
  422710:	mov    ecx,0x83093790
  422715:	pushf  
  422716:	ret    
  422717:	mov    es,WORD PTR [ecx-0x17]
  42271a:	inc    esp
  42271b:	paddw  mm6,QWORD PTR [esi-0x4081ff97]
  422722:	mov    fs,WORD PTR [ebx+0xcdb1237]
  422728:	imul   DWORD PTR [ebx-0x483e1530]
  42272e:	push   esi
  42272f:	or     al,0x1
  422731:	pop    es
  422732:	retf   
  422733:	mov    al,BYTE PTR [esi-0x7817e1a5]
  422739:	pop    es
  42273a:	fild   DWORD PTR [edx-0x1ef561dd]
  422740:	sub    BYTE PTR ds:0xa898ad05,0xe5
  422747:	xor    DWORD PTR [ecx-0x3f8dcdd0],edx
  42274d:	outs   dx,BYTE PTR ds:[esi]
  42274e:	loop   0x4226f5
  422750:	add    BYTE PTR [edx+0xa],0x3
  422754:	xchg   edx,eax
  422755:	mov    ebp,0xb9d54947
  42275a:	push   ecx
  42275b:	mov    ebp,0x779b416d
  422760:	push   eax
  422761:	mov    edx,0xeb8cb149
  422766:	jbe    0x422754
  422768:	push   eax
  422769:	add    BYTE PTR [esi],ch
  42276b:	push   edx
  42276c:	fs mov ebp,0xd22d8977
  422772:	add    ecx,ebp
  422774:	test   DWORD PTR [ebx-0x1d498bed],esp
  42277a:	loop   0x4227e2
  42277c:	mov    BYTE PTR [edx+0xa],al
  42277f:	ss test al,0x6a
  422782:	test   DWORD PTR [esi-0x6865a700],esp
  422788:	test   BYTE PTR [ebp-0x42417cbe],0xb9
  42278f:	push   ecx
  422790:	aad    0xf0
  422792:	xor    eax,0xd26a01ae
  422797:	lock push es
  422799:	mov    ah,0x82
  42279b:	xor    eax,0xca5399a6
  4227a0:	(bad)  
  4227a1:	mov    esp,0xc2925007
  4227a6:	in     al,dx
  4227a7:	push   es
  4227a8:	jmp    0x6b20eae5
  4227ad:	scas   al,BYTE PTR es:[edi]
  4227ae:	or     bl,BYTE PTR [ebp+0x3f]
  4227b1:	dec    ebx
  4227b2:	ret    
  4227b3:	outs   dx,DWORD PTR ds:[esi]
  4227b4:	loope  0x4227b4
  4227b6:	dec    DWORD PTR [ecx+0x0]
  4227b9:	sbb    al,BYTE PTR [esi+0x406d8405]
  4227bf:	or     al,BYTE PTR [eax]
  4227c1:	sub    al,0x35
  4227c3:	and    al,BYTE PTR [eax]
  4227c5:	mov    al,0x2b
  4227c7:	xor    al,BYTE PTR [edx]
  4227c9:	lahf   
  4227ca:	aas    
  4227cb:	bound  eax,QWORD PTR [eax]
  4227cd:	outs   dx,DWORD PTR ds:[esi]
  4227ce:	aas    
  4227cf:	sbb    ch,BYTE PTR [eax+0x1b]
  4227d2:	sti    
  4227d3:	or     DWORD PTR [eax],eax
  4227d5:	scas   eax,DWORD PTR es:[edi]
  4227d6:	ret    
  4227d7:	dec    edi
  4227d8:	fcom   DWORD PTR [edi]
  4227da:	sbb    cl,cl
  4227dc:	add    BYTE PTR [edi-0x3e],ch
  4227df:	addr16 aam 0x6f
  4227e2:	mov    edx,0x8eaa8bfa
  4227e7:	pop    edx
  4227e8:	mov    eax,DWORD PTR [eax]
  4227ea:	xchg   ecx,eax
  4227eb:	in     al,dx
  4227ec:	inc    edi
  4227ed:	enter  0xb82f,0x47
  4227f1:	int3   
  4227f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227f3:	sbb    ebx,edx
  4227f5:	call   0x372723
  4227fa:	fwait
  4227fb:	xchg   BYTE PTR ds:0xa3fc584,al
  422801:	add    BYTE PTR [edi+edi*2],bl
  422804:	xchg   esi,esi
  422806:	fild   DWORD PTR [ebp-0x76]
  422809:	ds pop ds
  42280b:	sbb    al,0xd
  42280d:	inc    eax
  42280e:	outs   dx,DWORD PTR ds:[esi]
  42280f:	xor    al,0xb
  422811:	add    BYTE PTR [ebx],bl
  422813:	inc    edx
  422814:	dec    esp
  422815:	jmp    0x4227a5
  422817:	dec    ebx
  422818:	or     eax,DWORD PTR [eax]
  42281a:	fistp  QWORD PTR [esi-0x3de8fa8d]
  422820:	ret    0x2ffe
  422823:	inc    esi
  422824:	xchg   ebx,edx
  422826:	fidivr WORD PTR [esi]
  422828:	or     al,dh
  42282a:	call   0x47c3:0x9feb0aa9
  422831:	enter  0x8186,0x5c
  422835:	inc    eax
  422836:	mov    cl,0x7b
  422838:	test   BYTE PTR [ebp-0x5e],al
  42283b:	sbb    eax,0xbe0a0bcd
  422840:	or     al,0x0
  422842:	xchg   ah,dh
  422844:	pop    esi
  422845:	or     al,0xfd
  422847:	mov    ch,0x75
  422849:	push   cs
  42284a:	inc    esi
  42284b:	cdq    
  42284c:	div    BYTE PTR [ebx+0x0]
  42284f:	mov    gs,WORD PTR [edi+esi*8-0x2e]
  422853:	(bad)  
  422854:	mov    ebp,cs
  422856:	xchg   DWORD PTR ds:0x69f916c4,edi
  42285c:	shl    DWORD PTR [ecx-0x40],0xdb
  422860:	mov    WORD PTR [eax+0x2cc44e45],cs
  422866:	inc    eax
  422867:	push   ecx
  422868:	sbb    DWORD PTR [edx+0x600503d8],eax
  42286e:	mov    esi,0xc872f
  422873:	xchg   BYTE PTR [ebp+0x684660f],al
  422879:	xor    al,dh
  42287b:	(bad)  
  42287c:	add    BYTE PTR [esi+0x24],bl
  42287f:	or     eax,0xe825e1
  422884:	pop    edi
  422885:	idiv   ebx
  422887:	(bad)  
  422888:	fsubp  st(5),st
  42288a:	jg     0x42289a
  42288c:	popa   
  42288d:	push   es
  42288e:	test   BYTE PTR [eax-0x66],ah
  422891:	or     eax,0x63946c00
  422896:	inc    BYTE PTR [edx]
  422898:	(bad)  
  42289a:	push   eax
  42289b:	jmp    0xb93df9c6
  4228a0:	test   al,0x5f
  4228a2:	in     al,0xee
  4228a4:	mov    dh,0xc8
  4228a6:	cli    
  4228a7:	shl    DWORD PTR [edx],1
  4228a9:	xor    ah,ah
  4228ab:	add    eax,0x8df3eb43
  4228b0:	mov    esi,0x86000515
  4228b5:	inc    edx
  4228b6:	ins    BYTE PTR es:[edi],dx
  4228b7:	dec    ebx
  4228b8:	pop    esi
  4228b9:	jne    0x422877
  4228bb:	das    
  4228bc:	jmp    0x43bf06f0
  4228c1:	scas   al,BYTE PTR es:[edi]
  4228c2:	fdiv   st(4),st
  4228c4:	mov    eax,ds:0x8df2683e
  4228c9:	mov    ebx,0x8259f826
  4228ce:	jp     0x422921
  4228d0:	outs   dx,BYTE PTR ds:[esi]
  4228d1:	imul   esp,DWORD PTR [esi],0xfffffff8
  4228d4:	lea    edi,[esi+0x428604e4]
  4228da:	push   0x49
  4228dc:	pop    edx
  4228dd:	imul   ebx,DWORD PTR [esi],0xffffffe4
  4228e0:	(bad)  
  4228e1:	rcr    BYTE PTR [edi+0x6c428604],0x79
  4228e8:	bound  edi,QWORD PTR [ebp+0x66c9f426]
  4228ee:	xchg   ebx,eax
  4228ef:	add    al,0x8d
  4228f1:	mov    esi,0x4286047e
  4228f6:	ins    BYTE PTR es:[edi],dx
  4228f7:	or     dh,dh
  4228f9:	mov    ebx,0x393f87eb
  4228fe:	pop    edi
  4228ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422900:	xchg   BYTE PTR [edx-0x1d],al
  422903:	ss sbb eax,0x3f87eb9d
  422909:	cs jmp 0xff83:0xeb36004a
  422911:	xchg   si,ax
  422913:	imul   BYTE PTR [ecx+0x496a82]
  422919:	shr    BYTE PTR [edx-0x5a],cl
  42291c:	out    0x74,eax
  42291e:	adc    eax,0xb6be417c
  422923:	out    0x84,eax
  422925:	pop    ecx
  422926:	push   0xa
  422928:	jmp    0xe9c78f86
  42292d:	add    eax,0x7f5d0a6a
  422932:	sar    DWORD PTR [edi],0xd9
  422935:	cmp    BYTE PTR [esi-0x45],al
  422938:	cmp    DWORD PTR [eax*4+0x60748147],ebx
  42293f:	sub    DWORD PTR [esi+eiz*8],0xffffffac
  422943:	pop    ss
  422944:	inc    ecx
  422945:	jo     0x422949
  422947:	or     ah,BYTE PTR [esi+eax*2-0x26]
  42294b:	and    DWORD PTR [edx+edx*8],0xffffffba
  42294f:	dec    edi
  422950:	pop    ebp
  422951:	add    ah,BYTE PTR [esi]
  422953:	mov    dl,0xa6
  422955:	into   
  422956:	jle    0x422965
  422958:	jmp    0xf246be2
  42295d:	dec    esi
  42295e:	lods   eax,DWORD PTR ds:[esi]
  42295f:	icebp  
  422960:	jb     0x422918
  422962:	call   0x2c85:0x6fdea986
  422969:	add    eax,DWORD PTR ss:[ebx+0x47703624]
  422970:	dec    ebp
  422971:	mov    ebx,0xb14287d5
  422976:	cmp    al,BYTE PTR [ebp+0x68539ac]
  42297c:	jmp    0x15ac:0x85675f00
  422983:	lods   al,BYTE PTR ds:[esi]
  422984:	ss jns 0x42299b
  422987:	dec    esi
  422988:	jb     0x422965
  42298a:	lds    eax,FWORD PTR [edx-0x7b]
  42298d:	pushf  
  42298e:	adc    eax,0x3addf113
  422993:	sar    BYTE PTR [edi],0x15
  422996:	cmp    BYTE PTR [edi+0x5b],0x1
  42299a:	sub    bh,BYTE PTR [ebp-0x757ff110]
  4229a0:	add    DWORD PTR [eax],0x2a
  4229a3:	mov    WORD PTR [ecx+0x47b4d77d],cs
  4229a9:	in     al,dx
  4229aa:	fs cli 
  4229ac:	fnstsw WORD PTR [ebx]
  4229ae:	and    ah,BYTE PTR [ebp+eax*1-0xa4e5c7e]
  4229b5:	jmp    DWORD PTR [ecx+edx*1+0x22]
  4229b9:	jne    0x422960
  4229bb:	mov    dl,0x77
  4229bd:	hlt    
  4229be:	mov    DWORD PTR [ebx],0x85c8fe84
  4229c4:	push   cs
  4229c5:	test   esp,esp
  4229c7:	das    
  4229c8:	or     edi,edi
  4229ca:	push   edx
  4229cb:	stos   BYTE PTR es:[edi],al
  4229cc:	loop   0x422a01
  4229ce:	sub    DWORD PTR [ebp+esi*8-0x765535df],esi
  4229d5:	inc    ebp
  4229d6:	adc    ebp,DWORD PTR [ebx]
  4229d8:	dec    ebp
  4229d9:	and    al,0xe6
  4229db:	adc    DWORD PTR [edx],esp
  4229dd:	(bad)  
  4229de:	mov    ds:0x8b0b95,al
  4229e3:	mov    dl,0x9a
  4229e5:	mov    DWORD PTR [ebp+0x27],edi
  4229e8:	xchg   BYTE PTR [esi],dh
  4229ea:	mov    ds,ecx
  4229ec:	mov    cl,0x89
  4229ee:	inc    ebp
  4229ef:	jmp    DWORD PTR [edi+ebp*2]
  4229f2:	lock xlat BYTE PTR ds:[ebx]
  4229f4:	dec    ebx
  4229f5:	test   dh,bh
  4229f7:	fsub   DWORD PTR [edi]
  4229f9:	ja     0x4229c3
  4229fb:	mov    DWORD PTR [edi+0x28b8ff2f],0xa8b4fb47
  422a05:	jle    0x422a7c
  422a07:	push   edi
  422a08:	xchg   dl,ch
  422a0a:	cmp    eax,0xc020b158
  422a0f:	clc    
  422a10:	adc    BYTE PTR [ecx-0x37],bl
  422a13:	lods   eax,DWORD PTR ds:[esi]
  422a14:	cmp    cl,BYTE PTR [edx]
  422a16:	push   ebp
  422a17:	je     0x4229bb
  422a19:	mov    ebp,esp
  422a1b:	xchg   BYTE PTR [ecx-0xb],bh
  422a1e:	(bad)  
  422a1f:	jmp    0x873a933f
  422a24:	int3   
  422a25:	push   ebx
  422a26:	push   ebx
  422a27:	outs   dx,BYTE PTR ds:[esi]
  422a28:	cmp    eax,0x57863fa5
  422a2d:	dec    ecx
  422a2e:	repz leave 
  422a30:	xchg   edi,eax
  422a31:	sbb    ah,ch
  422a33:	xchg   esp,eax
  422a34:	pop    ecx
  422a35:	push   es
  422a36:	mov    eax,ds:0x46e386
  422a3b:	std    
  422a3c:	inc    ebp
  422a3d:	cli    
  422a3e:	mov    ecx,0x45749945
  422a43:	xchg   esi,eax
  422a44:	sbb    esp,ebp
  422a46:	or     al,0x0
  422a48:	lods   eax,DWORD PTR ds:[esi]
  422a49:	lods   eax,DWORD PTR ds:[esi]
  422a4a:	outs   dx,BYTE PTR ds:[esi]
  422a4b:	add    al,BYTE PTR ds:0x556df1f1
  422a51:	mov    ah,0x48
  422a53:	lock stc 
  422a55:	(bad)  
  422a56:	repz inc edx
  422a58:	sbb    BYTE PTR [edx+0x6efd1879],0xee
  422a5f:	cli    
  422a60:	cmc    
  422a61:	xchg   DWORD PTR [eax+0x42],esi
  422a64:	xchg   edx,eax
  422a65:	mov    esp,0x24950876
  422a6a:	pop    ebp
  422a6b:	call   0xfc3d2a0d
  422a70:	add    ebx,esp
  422a72:	fs pop esi
  422a74:	or     eax,0x36451496
  422a79:	cdq    
  422a7a:	std    
  422a7b:	jg     0x422a30
  422a7d:	or     esi,ecx
  422a7f:	mov    BYTE PTR [ebx+0xdc27603],dh
  422a85:	fcomip st,st(5)
  422a87:	addr16 and al,bl
  422a8a:	inc    esi
  422a8b:	add    BYTE PTR [ecx],dl
  422a8d:	xchg   ebp,edi
  422a8f:	push   cs
  422a90:	(bad)  
  422a91:	fwait
  422a92:	outs   dx,BYTE PTR ds:[esi]
  422a93:	aas    
  422a94:	inc    esi
  422a95:	inc    edx
  422a96:	pop    esi
  422a97:	ret    
  422a98:	lea    edi,[esi+0x4286024a]
  422a9e:	mov    eax,DWORD PTR [ebx]
  422aa0:	xchg   BYTE PTR [edx-0xd],al
  422aa3:	pop    ebx
  422aa4:	icebp  
  422aa5:	pavgw  mm0,QWORD PTR [ebx]
  422aa8:	ss mov bh,0x8e
  422aab:	mov    edi,0x2bdcde00
  422ab0:	add    eax,DWORD PTR [esi+0x41bf8eb9]
  422ab6:	pop    ds
  422ab7:	mov    ebx,0xa2f80f04
  422abc:	push   ebp
  422abd:	or     DWORD PTR [ebx-0x5f],edi
  422ac0:	dec    ecx
  422ac1:	jmp    0x259a:0xca496a42
  422ac8:	xor    DWORD PTR [ebp+0x7dc467a5],ebx
  422ace:	mov    esi,0x4286055d
  422ad3:	retf   0x8787
  422ad6:	inc    edx
  422ad7:	jecxz  0x422b32
  422ad9:	jns    0x422adf
  422adb:	pop    esi
  422adc:	mov    ecx,0xef98ad64
  422ae1:	pop    esi
  422ae2:	xchg   edi,eax
  422ae3:	mov    ch,0xef
  422ae5:	pop    ebp
  422ae6:	mov    ecx,0x1ce5dc73
  422aeb:	jecxz  0x422af0
  422aed:	xchg   edx,eax
  422aee:	ds hlt 
  422af0:	add    ah,al
  422af2:	inc    eax
  422af3:	add    BYTE PTR [ecx+0x3e29004],al
  422af9:	xchg   BYTE PTR [eax],bl
  422afb:	not    DWORD PTR [ebx-0x58]
  422afe:	inc    edx
  422aff:	mov    cx,0xa572
  422b03:	inc    eax
  422b04:	out    dx,eax
  422b05:	mov    eax,ds:0x59dc487a
  422b0a:	jge    0x422b3d
  422b0c:	out    dx,eax
  422b0d:	or     eax,DWORD PTR [edx-0x5aff48f6]
  422b13:	and    eax,0x467eebf1
  422b18:	jg     0x422b76
  422b1a:	push   ds
  422b1b:	test   al,0xf1
  422b1d:	push   ds
  422b1e:	and    dh,cl
  422b20:	or     ch,cl
  422b22:	test   DWORD PTR [edx-0x570efaf1],ebx
  422b28:	jg     0x422b96
  422b2a:	sahf   
  422b2b:	test   eax,0xbd35fef1
  422b30:	enter  0xac99,0x5b
  422b34:	(bad)  
  422b35:	out    dx,al
  422b36:	test   BYTE PTR [edi],ch
  422b38:	adc    eax,0xefedfe74
  422b3d:	fisub  WORD PTR [eax-0x7a164d17]
  422b43:	inc    edx
  422b44:	loop   0x422b13
  422b46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b47:	test   al,0xf1
  422b49:	je     0x422b59
  422b4b:	outs   dx,BYTE PTR ds:[esi]
  422b4c:	icebp  
  422b4d:	mov    esi,0xaf8511a0
  422b52:	lods   al,BYTE PTR ds:[esi]
  422b53:	xchg   BYTE PTR [edi+0x64],bh
  422b56:	mov    ecx,0xd5a6f1a7
  422b5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b5c:	ja     0x422b4f
  422b5e:	push   es
  422b5f:	mov    esi,0xa85893ce
  422b64:	pop    edx
  422b65:	xor    DWORD PTR [ebp+edi*4+0xa],0x1830ee9
  422b6d:	push   esp
  422b6e:	inc    ebp
  422b6f:	mov    edi,0x554afcca
  422b74:	retf   0x7
  422b77:	ret    
  422b78:	mov    ebp,0xa82863ce
  422b7d:	mov    bl,0x4f
  422b7f:	mov    al,BYTE PTR [edx+0xa]
  422b82:	fs (bad) 
  422b84:	mov    al,ds:0x81304ef9
  422b89:	or     al,BYTE PTR [eax]
  422b8b:	das    
  422b8c:	add    BYTE PTR [ebx+0x75],al
  422b8f:	(bad)  
  422b90:	sub    BYTE PTR [edi-0x18],al
  422b93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b95:	jo     0x422b80
  422b97:	jecxz  0x422b59
  422b99:	retf   0x3e0c
  422b9c:	adc    BYTE PTR [edi+0x7d],bh
  422b9f:	pop    es
  422ba0:	jno    0x422b6c
  422ba2:	call   0x36f4ec
  422ba7:	imul   edi,DWORD PTR [edi+0x76],0x42
  422bab:	push   edx
  422bac:	ret    0xfe3e
  422baf:	rcl    BYTE PTR [ebp-0x49a09df],1
  422bb5:	ss cwde 
  422bb7:	xchg   DWORD PTR [edx-0x35f0133],esi
  422bbd:	jo     0x422b80
  422bbf:	stos   DWORD PTR es:[edi],eax
  422bc0:	ret    0x10f4
  422bc3:	dec    ebp
  422bc4:	test   BYTE PTR [ecx],ah
  422bc6:	ror    BYTE PTR [ecx+0x27],0xb
  422bca:	call   0x36f217
  422bcf:	push   ss
  422bd0:	sti    
  422bd1:	stc    
  422bd2:	push   0xffffff9b
  422bd4:	and    al,0x47
  422bd6:	lock lahf 
  422bd8:	or     BYTE PTR [esi],al
  422bda:	lea    eax,[eax]
  422bdc:	jmp    0x7f0e:0x10fff402
  422be3:	test   DWORD PTR [ebx],esi
  422be5:	cwde   
  422be6:	cmc    
  422be7:	call   FWORD PTR [edi+0x6f75e786]
  422bed:	aas    
  422bee:	loop   0x422c6c
  422bf0:	ficom  DWORD PTR [ebp-0x6b56160b]
  422bf6:	cmc    
  422bf7:	jmp    DWORD PTR [ebp+0x5b212e3d]
  422bfd:	xor    ebp,DWORD PTR [esi]
  422bff:	sub    eax,0x402e4b5b
  422c04:	xchg   BYTE PTR [ebp-0x723fc40f],al
  422c0a:	or     DWORD PTR [esi],ebp
  422c0c:	cmp    eax,0x8aaeef10
  422c11:	adc    ah,dh
  422c13:	scas   al,BYTE PTR es:[edi]
  422c14:	test   BYTE PTR [eax],al
  422c16:	or     BYTE PTR [edi-0x50f3ff7b],ch
  422c1c:	xchg   esp,edx
  422c1e:	jb     0x422c95
  422c20:	jle    0x422c66
  422c22:	js     0x422c30
  422c24:	jmp    0xe19521eb
  422c29:	lods   eax,DWORD PTR ds:[esi]
  422c2a:	gs push cs
  422c2c:	inc    esi
  422c2d:	cdq    
  422c2e:	pop    ebp
  422c2f:	das    
  422c30:	(bad)  
  422c31:	das    
  422c32:	scas   eax,DWORD PTR es:[edi]
  422c33:	call   0xfc20d26b
  422c38:	or     bl,BYTE PTR [ecx+0x72]
  422c3b:	sub    DWORD PTR [ecx+0x7fcadb],ecx
  422c41:	sahf   
  422c42:	cwde   
  422c43:	jns    0x422c5d
  422c45:	ds pushf 
  422c47:	mov    esi,edi
  422c49:	xchg   BYTE PTR [ecx+0x1589480d],bl
  422c4f:	jo     0x422c51
  422c51:	xchg   BYTE PTR [ecx+0x61857435],bl
  422c57:	jns    0x422c61
  422c59:	add    eax,0x4001de3f
  422c5e:	outs   dx,DWORD PTR ds:[esi]
  422c5f:	test   DWORD PTR [ecx],0x750be506
  422c65:	js     0x422c8d
  422c67:	dec    eax
  422c68:	mov    esp,0xfb21e26e
  422c6d:	pop    ecx
  422c6e:	adc    eax,0x975185e5
  422c73:	xchg   DWORD PTR [ebp+0x7cd557d3],ecx
  422c79:	jge    0x422cab
  422c7b:	fiadd  WORD PTR [edi-0xa04bd25]
  422c81:	retf   
  422c82:	call   0x3e2:0x4902fce2
  422c89:	xchg   ch,cl
  422c8b:	aam    0xff
  422c8d:	add    BYTE PTR [esi],al
  422c8f:	sti    
  422c90:	jp     0x422c5d
  422c92:	dec    edx
  422c93:	data16 cmc 
  422c95:	(bad)  
  422c96:	dec    ebp
  422c97:	xchg   ebx,eax
  422c98:	in     al,dx
  422c99:	fwait
  422c9a:	sbb    dl,ch
  422c9c:	inc    ebx
  422c9d:	xchg   ch,cl
  422c9f:	adc    eax,DWORD PTR [esi-0x249eae0c]
  422ca5:	add    BYTE PTR [esi+0x4b7ee342],al
  422cab:	jb     0x422c60
  422cad:	pop    ecx
  422cae:	test   al,0xaa
  422cb0:	xor    BYTE PTR [edi],dh
  422cb2:	int    0xa1
  422cb4:	jl     0x422cf4
  422cb6:	mov    dh,0xc5
  422cb8:	jle    0x422c9d
  422cba:	xchg   bl,cl
  422cbc:	mov    cs,ebx
  422cbe:	push   edi
  422cbf:	int    0xbb
  422cc1:	ret    0x764b
  422cc4:	jecxz  0x422d42
  422cc6:	inc    ebx
  422cc7:	jle    0x422c94
  422cc9:	cmp    eax,0x80c0a159
  422cce:	(bad)  
  422ccf:	push   ecx
  422cd0:	pop    esi
  422cd1:	mov    DWORD PTR [esi+0x1378e342],eax
  422cd7:	jbe    0x422ca4
  422cd9:	or     DWORD PTR [ecx+0x2ddda0a1],edi
  422cdf:	inc    edx
  422ce0:	jecxz  0x422ce5
  422ce2:	call   0xfb955d45
  422ce7:	(bad)  
  422ce8:	aaa    
  422ce9:	jmp    0x422d48
  422ceb:	mov    eax,ds:0xa1b6040d
  422cf0:	into   
  422cf1:	das    
  422cf2:	je     0x422cf6
  422cf4:	jecxz  0x422c7c
  422cf6:	inc    edx
  422cf7:	dec    esi
  422cf8:	or     ah,BYTE PTR [edi+eax*1+0x76]
  422cfc:	rep outs dx,BYTE PTR ds:[esi]
  422cfe:	sub    eax,0x1cd587cb
  422d03:	popf   
  422d04:	icebp  
  422d05:	ins    BYTE PTR es:[edi],dx
  422d06:	pop    es
  422d07:	(bad)  
  422d08:	lock push esi
  422d0a:	add    BYTE PTR ds:0x2ce963f2,ch
  422d10:	adc    al,0xfe
  422d12:	outs   dx,DWORD PTR ds:[esi]
  422d13:	(bad)  
  422d15:	lock ds sbb eax,0xc4e1789d
  422d1c:	(bad)  
  422d1d:	jp     0x422d4d
  422d1f:	in     eax,dx
  422d20:	pushf  
  422d21:	or     eax,0xf14285e8
  422d26:	hlt    
  422d27:	gs aaa 
  422d29:	dec    edx
  422d2a:	jmp    0xde4dc737
  422d2f:	push   es
  422d30:	push   ebx
  422d31:	icebp  
  422d32:	push   es
  422d33:	frstor [eax]
  422d35:	scas   eax,DWORD PTR es:[edi]
  422d36:	jns    0x422d14
  422d38:	pushf  
  422d39:	icebp  
  422d3a:	jmp    0xee68effb
  422d3f:	lods   al,BYTE PTR ds:[esi]
  422d40:	pushf  
  422d41:	jg     0x422daf
  422d43:	rcr    DWORD PTR [edx-0x55aa210f],0x25
  422d4a:	push   ecx
  422d4b:	mov    al,BYTE PTR [edx-0x1d]
  422d4e:	cli    
  422d4f:	lods   al,BYTE PTR ds:[esi]
  422d50:	pushf  
  422d51:	icebp  
  422d52:	scas   eax,DWORD PTR es:[edi]
  422d53:	inc    esi
  422d54:	xchg   ebp,eax
  422d55:	or     dl,al
  422d57:	mov    ebx,DWORD PTR [ebx-0x6428490f]
  422d5d:	ja     0x422d40
  422d5f:	aam    0x9b
  422d61:	pop    ss
  422d62:	and    DWORD PTR [eax-0x4ec6f5fe],ebx
  422d68:	add    BYTE PTR [ebp-0x9bec25a],0x8e
  422d6f:	add    BYTE PTR [edi+eax*8-0x36],ch
  422d73:	add    BYTE PTR [edx+0x39],dl
  422d76:	jg     0x422dbd
  422d78:	repz jnp 0x422da1
  422d7b:	cmp    edi,DWORD PTR [eax-0x5d077654]
  422d81:	lods   al,BYTE PTR ds:[esi]
  422d82:	ja     0x422d5d
  422d84:	(bad)  
  422d85:	repz hlt 
  422d87:	dec    eax
  422d89:	sbb    dh,BYTE PTR [edi-0x2c]
  422d8c:	(bad)  
  422d8d:	cli    
  422d8e:	aaa    
  422d8f:	dec    eax
  422d91:	enter  0xf83f,0x1e
  422d95:	leave  
  422d96:	jns    0x422db8
  422d98:	jle    0x422db2
  422d9a:	and    eax,0xaf1ada6a
  422d9f:	mov    esp,0x58f5aca9
  422da4:	xchg   edi,eax
  422da5:	push   ss
  422da6:	jmp    0x422da7
  422da8:	mov    BYTE PTR [eax],ah
  422daa:	popa   
  422dab:	sbb    al,0x5
  422dad:	addr16 mov edi,eax
  422db0:	fs (bad) 
  422db3:	and    al,0x54
  422db5:	test   eax,0x129f85f5
  422dba:	add    eax,0x2e66f18a
  422dbf:	cmp    esi,DWORD PTR [ebx]
  422dc1:	lahf   
  422dc2:	(bad)  
  422dc3:	rcl    BYTE PTR [edx+0x42],0x71
  422dc7:	dec    ebp
  422dc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422dc9:	mov    DWORD PTR ss:[ebx-0x75],eax
  422dcd:	push   ebp
  422dce:	cmc    
  422dcf:	mov    DWORD PTR [edx+0x7a],ecx
  422dd2:	cmp    edi,eax
  422dd4:	add    BYTE PTR [ebx+0x54],dl
  422dd7:	ins    BYTE PTR es:[edi],dx
  422dd8:	cmp    DWORD PTR [edi-0x5374c4ee],eax
  422dde:	push   esi
  422ddf:	cmp    edi,eax
  422de1:	mov    bl,0x40
  422de3:	ins    BYTE PTR es:[edi],dx
  422de4:	cmp    DWORD PTR [edi+0x2f],esp
  422de7:	daa    
  422de8:	push   0x69
  422dea:	sbb    BYTE PTR [edi-0x1c4a791c],dh
  422df0:	sti    
  422df1:	mov    esi,0x51e13fc1
  422df6:	enter  0x6fe3,0x96
  422dfa:	adc    al,0xcc
  422dfc:	sti    
  422dfd:	mov    ch,0x85
  422dff:	pop    ebp
  422e00:	(bad)  
  422e01:	ret    
  422e02:	sbb    eax,0x57b5e856
  422e07:	in     al,0xfb
  422e09:	add    eax,0x72e71665
  422e0e:	and    al,0x47
  422e10:	xor    al,0x5d
  422e12:	push   0x41065c7a
  422e17:	push   es
  422e18:	je     0x422dcb
  422e1a:	jae    0x422e1e
  422e1c:	lea    edi,[ebx]
  422e1e:	lods   eax,DWORD PTR ds:[esi]
  422e1f:	jecxz  0x422e1c
  422e21:	stc    
  422e22:	mov    al,0xd5
  422e24:	es out 0x67,eax
  422e27:	jecxz  0x422e24
  422e29:	jne    0x422ea0
  422e2b:	outs   dx,BYTE PTR ds:[esi]
  422e2c:	ret    0x2636
  422e2f:	xor    esp,ebp
  422e31:	ss inc ecx
  422e33:	xor    edx,ecx
  422e35:	rol    BYTE PTR [edi-0x79],1
  422e38:	les    eax,FWORD PTR [eax]
  422e3a:	jp     0x422dc0
  422e3c:	retf   0x757a
  422e3f:	lods   al,BYTE PTR ds:[esi]
  422e40:	int    0x50
  422e42:	mov    ecx,0x338dd915
  422e47:	lea    ecx,[edi-0x2]
  422e4a:	push   ecx
  422e4b:	jno    0x422e45
  422e4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e4e:	mov    al,ds:0xa2456e77
  422e53:	xor    ecx,esi
  422e55:	pop    es
  422e56:	int3   
  422e57:	imul   eax,DWORD PTR [esi],0x75
  422e5a:	js     0x422e3c
  422e5c:	pusha  
  422e5d:	in     al,dx
  422e5e:	outs   dx,BYTE PTR ds:[esi]
  422e5f:	push   ds
  422e60:	je     0x422e5c
  422e62:	jns    0x422e8d
  422e64:	push   eax
  422e65:	in     al,dx
  422e66:	xchg   BYTE PTR [edx-0x64],al
  422e69:	cli    
  422e6a:	call   0x165d97e
  422e6f:	dec    ebx
  422e70:	pop    ebp
  422e71:	inc    esp
  422e72:	xchg   dl,al
  422e74:	(bad)  
  422e75:	lock dec ebp
  422e77:	sbb    bh,cl
  422e79:	adc    ecx,0x3a
  422e7c:	loop   0x422eec
  422e7e:	test   cl,al
  422e80:	cld    
  422e81:	sbb    eax,DWORD PTR [esi-0x340e2eeb]
  422e87:	call   0x83e9:0xa97a7003
  422e8e:	mov    ds:0x826ee295,eax
  422e93:	ror    DWORD PTR [esi-0x616b8115],0xeb
  422e9a:	jle    0x422ee9
  422e9c:	addr16 aam 0x0
  422e9f:	xchg   DWORD PTR [edx-0x1d],eax
  422ea2:	jl     0x422e5d
  422ea4:	push   0x29
  422ea6:	mov    DWORD PTR ds:[edx+0x5e],eax
  422eaa:	ret    
  422eab:	jae    0x422edd
  422ead:	popf   
  422eae:	adc    BYTE PTR [ebx],dl
  422eb0:	and    BYTE PTR [edi+0x4b],cl
  422eb3:	out    dx,al
  422eb4:	and    eax,0xc9cde803
  422eb9:	and    BYTE PTR [ebx+0x60],dl
  422ebc:	inc    ebp
  422ebd:	sbb    al,0x4c
  422ebf:	mov    ah,0x7
  422ec1:	sti    
  422ec2:	adc    dh,BYTE PTR [edx]
  422ec4:	pop    ecx
  422ec5:	loopne 0x422f3a
  422ec7:	push   0xffffffaa
  422ec9:	xchg   ecx,eax
  422eca:	shr    DWORD PTR [ebp+ebx*4-0x7f02b84],0xd2
  422ed2:	or     eax,0x878f674d
  422ed8:	inc    edx
  422ed9:	jecxz  0x422f0d
  422edb:	(bad)  
  422edc:	pop    ebx
  422edd:	and    al,0x1c
  422edf:	hlt    
  422ee0:	add    BYTE PTR [edx],cl
  422ee2:	arpl   WORD PTR [esi+0x4d],di
  422ee5:	mov    dh,BYTE PTR [eax-0x50f7e870]
  422eeb:	xchg   BYTE PTR [edx],dh
  422eed:	add    al,0x92
  422eef:	arpl   WORD PTR ds:0x46d6c2f3,bx
  422ef5:	enter  0x75e5,0x62
  422ef9:	dec    edx
  422efa:	ret    0x6ac4
  422efd:	jl     0x422e89
  422eff:	pop    ebp
  422f00:	cmp    eax,0x6500f28d
  422f05:	inc    edx
  422f06:	add    DWORD PTR [ecx+edx*8+0x43],esp
  422f0a:	or     ch,cl
  422f0c:	iret   
  422f0d:	cmp    bh,BYTE PTR [edi-0x24]
  422f10:	std    
  422f11:	stc    
  422f12:	loope  0x422ef7
  422f14:	and    eax,0xd162f199
  422f19:	icebp  
  422f1a:	arpl   ax,si
  422f1c:	mov    ebp,0xe8246daa
  422f21:	cwde   
  422f22:	sub    DWORD PTR [ebp+esi*8-0x75c690e4],0x49
  422f2a:	xchg   BYTE PTR [ebp+0x6a0a4282],ch
  422f30:	stos   BYTE PTR es:[di],al
  422f32:	or     dl,BYTE PTR [edi+0x62]
  422f35:	xchg   DWORD PTR [ebp-0x17],ecx
  422f38:	inc    ebx
  422f39:	cdq    
  422f3a:	pop    ss
  422f3b:	adc    eax,0x870a0274
  422f40:	jmp    0x8720:0x85aac6fd
  422f47:	sub    DWORD PTR [esi],esi
  422f49:	add    eax,DWORD PTR [ebp+0x4d8739f4]
  422f4f:	jmp    0x1eb8ba5a
  422f54:	xchg   ecx,eax
  422f55:	iret   
  422f56:	retf   0xb238
  422f59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f5a:	mov    BYTE PTR [eax],0xc1
  422f5d:	mov    ds:0x38bbc087,eax
  422f62:	add    eax,0xc7045ab7
  422f67:	inc    ebx
  422f68:	add    BYTE PTR [edi+0x51],bl
  422f6b:	ret    
  422f6c:	mov    DWORD PTR [edx+0x7bd2877e],ebx
  422f72:	dec    eax
  422f73:	ins    BYTE PTR es:[edi],dx
  422f74:	xor    DWORD PTR [ebx],0x58
  422f77:	sub    dh,BYTE PTR [ebx+0x68]
  422f7a:	cli    
  422f7b:	sub    DWORD PTR [edx+0x79],ebx
  422f7e:	sbb    eax,0xed304816
  422f83:	pop    ss
  422f84:	pop    esp
  422f85:	jmp    0x60d9:0xf4410a00
  422f8c:	out    0xe9,al
  422f8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f8f:	pop    ss
  422f90:	lock sbb eax,0x3cff0a00
  422f96:	cwde   
  422f97:	mov    BYTE PTR [ebx+0x33],al
  422f9a:	cli    
  422f9b:	or     eax,ebp
  422f9d:	pop    ds
  422f9e:	xor    esp,0x87a774ff
  422fa4:	jmp    eax
  422fa6:	sbb    esi,DWORD PTR [esi+0x683fdf00]
  422fac:	cmp    al,0xc1
  422fae:	or     eax,0xa58f857f
  422fb3:	cmc    
  422fb4:	inc    DWORD PTR ds:0xdaff5a40
  422fba:	imul   ebx,DWORD PTR [eax+eax*2],0xffffffdf
  422fbe:	rol    dh,0xc
  422fc1:	xor    al,dl
  422fc3:	jmp    0x9f6a:0x5aa5b0fe
  422fca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fcb:	popa   
  422fcc:	or     al,0x0
  422fce:	ss jmp 0x422fbb
  422fd1:	inc    al
  422fd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422fd4:	cmc    
  422fd5:	jae    0x422f5d
  422fd7:	mov    eax,ds:0x962615e6
  422fdc:	dec    ebp
  422fdd:	add    BYTE PTR ds:0xfe750d82,al
  422fe3:	out    dx,eax
  422fe4:	dec    DWORD PTR [ebx+esi*1+0x71fbe965]
  422feb:	xor    esi,ecx
  422fed:	dec    cx
  422fef:	in     al,0xe7
  422ff1:	data16 jg 0x423022
  422ff4:	mov    eax,ds:0xe7b4591c
  422ff9:	pop    eax
  422ffa:	pop    esi
  422ffb:	ins    DWORD PTR es:[edi],dx
  422ffc:	(bad)  
  422ffd:	sti    
  422ffe:	dec    ecx
  422fff:	sub    BYTE PTR [ecx-0x14],ch
  423002:	xchg   BYTE PTR [eax],dl
  423004:	inc    ecx
  423005:	call   0xb8589017
  42300a:	mov    esi,0xfd004d96
  42300f:	clc    
  423010:	test   BYTE PTR [ebx+ebx*4+0xd],0x71
  423015:	into   
  423016:	mov    ebp,ebp
  423018:	fld    QWORD PTR [ebp-0x470f89c1]
  42301e:	into   
  42301f:	fimul  DWORD PTR [ebp+0x0]
  423022:	clc    
  423023:	in     eax,0xe5
  423025:	add    DWORD PTR [edx-0x55],esi
  423028:	js     0x422faf
  42302a:	xchg   edx,eax
  42302b:	ins    BYTE PTR es:[edi],dx
  42302c:	out    0xfb,eax
  42302e:	jmp    0x952df0
  423033:	xor    al,0xda
  423035:	pop    ebp
  423036:	push   ebx
  423037:	or     ebp,DWORD PTR [esi]
  423039:	xor    bh,ch
  42303b:	ror    DWORD PTR [ebx+0x56],1
  42303e:	das    
  42303f:	(bad)  
  423040:	daa    
  423041:	test   eax,0xe69bc0ec
  423046:	add    al,0x2c
  423048:	test   eax,0xb3c693f6
  42304d:	mov    al,al
  42304f:	jge    0x423093
  423051:	xor    ebx,esp
  423053:	stos   BYTE PTR es:[edi],al
  423054:	test   al,0xd0
  423056:	in     al,0x19
  423058:	xchg   BYTE PTR [ebx],cl
  42305a:	jl     0x4230a7
  42305c:	inc    edi
  42305d:	cmp    ah,bl
  42305f:	mov    dl,0xc9
  423062:	in     al,0x7d
  423064:	adc    bl,bl
  423066:	fstp   TBYTE PTR [esi]
  423068:	ret    0xe4b9
  42306b:	ins    DWORD PTR es:[edi],dx
  42306c:	adc    BYTE PTR [ebx-0x563dc925],dh
  423072:	in     al,0x6
  423074:	sbb    ah,bh
  423076:	add    edx,ebx
  423078:	ds fs pop esi
  42307b:	dec    esi
  42307c:	xchg   edx,eax
  42307d:	sub    BYTE PTR [esi+0x5a],0xab
  423081:	imul   edi,DWORD PTR [esp+edi*1-0x66],0x443e3e79
  423089:	out    dx,al
  42308a:	xor    al,cl
  42308c:	stos   BYTE PTR es:[edi],al
  42308d:	inc    edi
  42308e:	icebp  
  42308f:	sub    eax,0x9ac35f9a
  423094:	ds fs add BYTE PTR ss:[esi],bl
  423099:	inc    ebp
  42309a:	push   ecx
  42309b:	ds push cs
  42309d:	xor    edx,edi
  42309f:	push   es
  4230a0:	mov    DWORD PTR ds:0x4b7b0307,ebx
  4230a6:	jl     0x4230e8
  4230a8:	mov    esi,0xf1ffbbc5
  4230ad:	push   cs
  4230ae:	rcl    DWORD PTR [eax-0x22],1
  4230b1:	cmp    BYTE PTR [eax],dl
  4230b3:	in     al,0xdd
  4230b5:	mov    esi,0xc5826f23
  4230ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230bb:	jmp    0x423047
  4230bd:	cdq    
  4230be:	xchg   esi,eax
  4230bf:	jmp    0x4230c2
  4230c1:	xchg   esi,eax
  4230c2:	sbb    esi,DWORD PTR [esi]
  4230c4:	adc    ebx,DWORD PTR [edx-0x65bc8810]
  4230ca:	or     dl,BYTE PTR [esi+0x2bc2f14b]
  4230d0:	test   eax,0x96725699
  4230d5:	rol    DWORD PTR [edi+0x1],0x1
  4230d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230da:	push   ss
  4230db:	cmp    cl,BYTE PTR [ecx+eax*8+0x3a]
  4230df:	bound  edi,QWORD PTR [edi]
  4230e1:	ss test ecx,ebp
  4230e4:	mov    esp,0x64e76ec7
  4230e9:	stos   DWORD PTR es:[edi],eax
  4230ea:	sub    al,ch
  4230ec:	test   DWORD PTR [edx-0x76],eax
  4230ef:	out    dx,eax
  4230f0:	sahf   
  4230f1:	dec    ebp
  4230f2:	xchg   DWORD PTR ds:0x730a428b,eax
  4230f8:	pushf  
  4230f9:	inc    ebx
  4230fa:	mov    dl,BYTE PTR [ebx-0x73b28600]
  423100:	stc    
  423101:	add    BYTE PTR [edx+0xa],0x69
  423105:	pusha  
  423106:	pop    ebx
  423107:	add    DWORD PTR [esi-0x73],esp
  42310a:	inc    ebx
  42310b:	or     ch,cl
  42310d:	add    BYTE PTR [edi],al
  42310f:	adc    ah,BYTE PTR [edx+0x7b]
  423112:	imul   edx,ebp,0xe59dcc74
  423118:	out    0x5,al
  42311a:	pop    edx
  42311b:	daa    
  42311c:	fdivr  QWORD PTR [edi+0x59]
  42311f:	inc    edx
  423120:	adc    bh,BYTE PTR [edx]
  423122:	adc    al,0xf7
  423124:	aas    
  423125:	leave  
  423126:	inc    edx
  423127:	add    DWORD PTR [ebp+ebp*8+0x41],esp
  42312b:	or     ch,cl
  42312d:	add    eax,0x81b43a90
  423132:	imul   ecx,edx,0x47c7af12
  423138:	sbb    eax,0xe1779d92
  42313d:	std    
  42313e:	out    dx,al
  42313f:	in     eax,dx
  423140:	daa    
  423141:	aas    
  423142:	xchg   edi,eax
  423143:	or     al,BYTE PTR [eax]
  423145:	xchg   edi,eax
  423146:	xor    al,0x74
  423148:	(bad)  
  423149:	mov    eax,0xa801f2bf
  42314e:	enter  0xb0,0x9f
  423152:	inc    esp
  423153:	cmp    DWORD PTR [ebp-0x61],eax
  423156:	xor    esi,DWORD PTR [ecx-0x47]
  423159:	scas   eax,DWORD PTR es:[edi]
  42315a:	inc    esp
  42315b:	or     cl,BYTE PTR [ebx+0x47f326a]
  423161:	add    dh,bl
  423163:	mov    DWORD PTR [edx],0x294ac78b
  423169:	stc    
  42316a:	ins    BYTE PTR es:[edi],dx
  42316b:	repz adc eax,0x10a68e57
  423171:	xchg   DWORD PTR [ecx],ebx
  423173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423174:	add    DWORD PTR [ebp+0x27],0xffffffcb
  423178:	cmc    
  423179:	je     0x4231d2
  42317b:	retf   
  42317c:	retf   0xe30f
  42317f:	jmp    0xd889:0x5d5f000a
  423186:	pop    ss
  423187:	push   ss
  423188:	je     0x423189
  42318a:	mov    eax,0xa41c57c8
  42318f:	lea    ecx,[eax+0xe0aa4d8]
  423195:	mov    ebp,DWORD PTR [edi]
  423197:	mov    bl,0x6e
  423199:	sbb    BYTE PTR [ecx-0x5be7b838],bh
  42319f:	inc    ebx
  4231a0:	mov    eax,ecx
  4231a2:	test   BYTE PTR [edi+edi*2+0x4c],dh
  4231a6:	fisub  WORD PTR [ecx-0xd890fd7]
  4231ac:	cmc    
  4231ad:	mov    DWORD PTR [edx],esi
  4231af:	je     0x42313a
  4231b1:	jne    0x42318a
  4231b3:	mov    dl,0x45
  4231b5:	add    DWORD PTR [edi-0x18],esi
  4231b8:	xchg   esi,edi
  4231ba:	js     0x42317b
  4231bc:	retf   0x8674
  4231bf:	mov    esi,0x79fdc280
  4231c4:	or     BYTE PTR [ebp+0x0],dh
  4231c7:	mov    dh,0x2c
  4231c9:	sar    dh,1
  4231cb:	xor    al,0x7b
  4231cd:	in     al,dx
  4231ce:	jne    0x42318a
  4231d0:	push   ds
  4231d1:	inc    ebx
  4231d2:	(bad)  
  4231d3:	cmp    esi,esi
  4231d5:	or     BYTE PTR [edi],ch
  4231d7:	ss jno 0x42315f
  4231da:	sbb    BYTE PTR [eax+0x1811df78],0xa0
  4231e1:	jle    0x423230
  4231e3:	xchg   edx,eax
  4231e4:	test   BYTE PTR [ebx-0x2],0xd1
  4231e8:	push   cs
  4231e9:	repnz outs dx,BYTE PTR cs:[esi]
  4231ec:	es test dl,bh
  4231ef:	jno    0x42322d
  4231f1:	jmp    0x423268
  4231f3:	outs   dx,BYTE PTR ds:[esi]
  4231f4:	das    
  4231f5:	jmp    0x42320c
  4231f7:	xchg   esi,eax
  4231f8:	xchg   edi,eax
  4231f9:	dec    ebp
  4231fa:	add    BYTE PTR ds:0xdbfb1add,al
  423200:	mov    cl,0xde
  423202:	and    al,0x0
  423204:	(bad)  
  423205:	jmp    0x42318e
  423207:	retf   
  423208:	popf   
  423209:	test   BYTE PTR [eax],bh
  42320b:	or     eax,0x8686ee5e
  423210:	push   ds
  423211:	push   edx
  423212:	sbb    ch,BYTE PTR [ecx]
  423214:	imul   BYTE PTR [ecx+0x38]
  423217:	and    edi,esp
  423219:	push   cs
  42321a:	xrelease mov DWORD PTR [ebx],ebp
  42321d:	mov    eax,0x95f011fa
  423222:	add    DWORD PTR [ecx-0x3b36d119],ebp
  423228:	mov    al,ds:0xc6002e0d
  42322d:	repz fdivr st,st(3)
  423230:	jnp    0x423283
  423232:	fdivrp st(4),st
  423234:	add    esp,DWORD PTR [edi-0x15]
  423237:	out    0xd4,eax
  423239:	inc    ecx
  42323a:	scas   al,BYTE PTR es:[edi]
  42323b:	mov    edx,gs
  42323d:	ret    0x3fff
  423240:	or     ebp,edi
  423242:	jmp    0x3b8c:0xb8f3868c
  423249:	inc    esi
  42324a:	jl     0x42325e
  42324c:	push   ebp
  42324d:	inc    ebx
  42324e:	cmp    ebp,DWORD PTR [edx+edi*8-0x35]
  423252:	mov    ds:0xfb04ff03,eax
  423257:	sub    al,0xce
  423259:	lock pop esp
  42325b:	div    DWORD PTR [eax]
  42325d:	and    BYTE PTR [esi],0xe1
  423260:	xchg   BYTE PTR [edx-0x6973764e],ch
  423266:	ins    BYTE PTR es:[edi],dx
  423267:	mov    ebx,0x87f87a0b
  42326c:	sbb    eax,DWORD PTR [ebx-0x1d]
  42326f:	add    ecx,DWORD PTR [ecx]
  423271:	sbb    bh,ah
  423273:	sub    ebx,0xffffff95
  423276:	jecxz  0x4232ce
  423278:	sahf   
  423279:	sub    bl,al
  42327b:	mov    ds,ebx
  42327d:	jp     0x4232ca
  42327f:	in     al,dx
  423280:	and    dh,BYTE PTR [edi-0x68]
  423283:	loopne 0x423280
  423285:	dec    DWORD PTR [edx-0x4c62d1cd]
  42328b:	loopne 0x4232ca
  42328d:	mov    edi,0x8c0057a3
  423292:	inc    ebp
  423293:	xor    BYTE PTR [esi+0x1a],al
  423296:	repz imul ecx,eax,0xffffffb6
  42329a:	sub    BYTE PTR [ebx],dl
  42329c:	inc    ecx
  42329d:	or     edx,DWORD PTR [eax]
  42329f:	fwait
  4232a0:	jmp    0x423278
  4232a2:	mov    ebx,DWORD PTR [ecx-0x20]
  4232a5:	add    DWORD PTR [eax],edx
  4232a7:	iret   
  4232a8:	mov    esi,?
  4232aa:	sti    
  4232ab:	test   eax,0xe515fd86
  4232b0:	adc    al,0xed
  4232b2:	leave  
  4232b3:	or     ah,BYTE PTR [ebp+ecx*8-0x13953aa3]
  4232ba:	das    
  4232bb:	pop    ebx
  4232bc:	je     0x423308
  4232be:	das    
  4232bf:	jg     0x4232a6
  4232c1:	xchg   bl,dh
  4232c3:	pop    ecx
  4232c4:	pusha  
  4232c5:	inc    eax
  4232c6:	mov    ?,ecx
  4232c8:	hlt    
  4232c9:	jne    0x4232fb
  4232cb:	dec    edx
  4232cc:	jmp    0x9640b1d3
  4232d1:	add    BYTE PTR [eax],al
  4232d3:	mov    ds:0x17997299,al
  4232d8:	mov    ecx,0x720a559f
  4232dd:	aaa    
  4232de:	dec    edx
  4232df:	test   eax,esi
  4232e1:	test   BYTE PTR [ecx],0xe5
  4232e4:	call   0x6241c86c
  4232e9:	iret   
  4232ea:	mov    cs,WORD PTR [ebp-0x49d56953]
  4232f0:	jae    0x4232bc
  4232f2:	inc    edx
  4232f3:	and    DWORD PTR [eax+eax*1],0x4a
  4232f7:	pop    ebp
  4232f8:	ret    0xec18
  4232fb:	das    
  4232fc:	push   ebp
  4232fd:	scas   eax,DWORD PTR es:[edi]
  4232fe:	iret   
  4232ff:	cdq    
  423300:	or     edx,DWORD PTR [ecx-0x690f3f92]
  423306:	std    
  423307:	jns    0x423290
  423309:	mov    dl,0x91
  42330b:	mov    edi,0x99598668
  423310:	test   BYTE PTR [ecx+edx*2],ah
  423313:	stc    
  423314:	dec    edi
  423315:	adc    bh,BYTE PTR [ebx]
  423317:	aam    0x2
  423319:	jmp    0x6b20f07c
  42331e:	push   ss
  42331f:	xor    bl,BYTE PTR [ebp-0x49]
  423322:	pop    eax
  423323:	mov    ebp,0xbd83c3fa
  423328:	aam    0xb3
  42332a:	adc    cl,BYTE PTR [edi]
  42332c:	test   BYTE PTR [eax],0x74
  42332f:	jg     0x42336a
  423331:	repnz sub eax,0xf4308894
  423337:	jb     0x423399
  423339:	sbb    esp,edx
  42333b:	stc    
  42333c:	cmc    
  42333d:	ja     0x42331a
  42333f:	push   ds
  423340:	mov    DWORD PTR [ebp-0x31],edi
  423343:	push   ds
  423344:	xchg   DWORD PTR [eax-0x25],edi
  423347:	stc    
  423348:	sbb    ch,BYTE PTR [ecx]
  42334a:	sbb    ch,BYTE PTR [ebp-0xf]
  42334d:	vmulss xmm6,xmm7,xmm6
  423351:	jae    0x4233d1
  423353:	xor    dl,cl
  423355:	jmp    0x4c72a6
  42335a:	add    BYTE PTR [edi+edi*2],ch
  42335d:	or     al,0x8b
  42335f:	mov    eax,ds:0x6ac6f867
  423364:	jne    0x423370
  423366:	mov    DWORD PTR [edx+0x6e],esp
  423369:	cmp    DWORD PTR [ebp+0x5b],0xffffffec
  42336d:	add    al,0x57
  42336f:	in     al,dx
  423370:	jg     0x42337e
  423372:	push   eax
  423373:	push   edi
  423374:	pop    ebp
  423375:	xchg   esi,edi
  423377:	xor    bh,al
  423379:	inc    edi
  42337a:	clc    
  42337b:	inc    esp
  42337c:	cmp    al,0x71
  42337e:	gs daa 
  423380:	inc    eax
  423381:	xchg   edi,edi
  423383:	jnp    0x42338c
  423385:	jno    0x423404
  423387:	idiv   DWORD PTR [edi]
  423389:	jbe    0x42339b
  42338b:	loop   0x423397
  42338d:	not    BYTE PTR [eax-0x4e]
  423390:	or     dh,dl
  423392:	push   eax
  423393:	pop    ss
  423394:	(bad)  
  423396:	push   DWORD PTR [eax-0x550b9038]
  42339c:	je     0x423414
  42339e:	xor    DWORD PTR [edx+eiz*1-0x43dfff0e],ebp
  4233a5:	cmp    BYTE PTR [ecx],al
  4233a7:	xchg   BYTE PTR [ecx-0x5e8478f3],ch
  4233ad:	call   0xee45:0x9ab9f245
  4233b4:	mov    ecx,0x4c966fd0
  4233b9:	push   edx
  4233ba:	or     al,0x38
  4233bc:	fs push edx
  4233be:	lock add dh,ch
  4233c1:	inc    eax
  4233c2:	jmp    0x4233bf
  4233c4:	rcr    DWORD PTR ds:0x92020bcd,1
  4233ca:	push   es
  4233cb:	add    BYTE PTR [esi-0x520b95e0],al
  4233d1:	test   al,0x84
  4233d3:	jne    0x423453
  4233d5:	mov    ebx,0xa1967d8c
  4233da:	add    BYTE PTR [ebp+0xda9e8],al
  4233e0:	cs int 0x84
  4233e3:	inc    eax
  4233e4:	xchg   BYTE PTR [ecx+ebx*2-0x10],dh
  4233e8:	sahf   
  4233e9:	hlt    
  4233ea:	push   edx
  4233eb:	cli    
  4233ec:	sub    DWORD PTR [eax],0xa7f3f9ce
  4233f2:	sbb    al,al
  4233f4:	or     ebp,ecx
  4233f6:	inc    DWORD PTR [edi+0xda95f]
  4233fc:	popf   
  4233fd:	pop    esi
  4233fe:	sbb    cl,BYTE PTR [ebx]
  423400:	add    eax,0x860006c9
  423405:	adc    BYTE PTR [ebx+0x14],dl
  423408:	sti    
  423409:	je     0x4233d2
  42340b:	daa    
  42340c:	rcr    BYTE PTR [ebp+0x3e853a0a],0xd2
  423413:	or     ecx,DWORD PTR [edx]
  423415:	in     eax,0x6
  423417:	add    BYTE PTR [esi+0x26e8c720],al
  42341d:	sub    al,dl
  42341f:	sti    
  423420:	cmovb  ebx,DWORD PTR [esi-0x7df5ff0d]
  423427:	loopne 0x4233b0
  423429:	rol    BYTE PTR [ecx-0x1d],1
  42342c:	add    edi,ebp
  42342e:	dec    ebx
  42342f:	inc    eax
  423430:	push   ecx
  423431:	xchg   esi,eax
  423432:	repnz inc edi
  423434:	mul    DWORD PTR [ecx+0x103a32c]
  42343a:	cmp    al,0xe4
  42343c:	inc    esi
  42343d:	jbe    0x4233fe
  42343f:	daa    
  423440:	adc    ch,bl
  423442:	or     al,0xf
  423444:	fstp   QWORD PTR [ebx-0x66]
  423447:	mov    bl,0xdc
  423449:	jae    0x42349d
  42344b:	icebp  
  42344c:	inc    ebx
  42344d:	xchg   bh,al
  42344f:	test   eax,0xcf070107
  423454:	sub    BYTE PTR [esi+0x571027be],bh
  42345a:	(bad)  
  42345b:	lods   al,BYTE PTR ds:[esi]
  42345c:	repz mov al,ds:0x1066c7a
  423462:	or     eax,0x3ec400f3
  423467:	fdiv   DWORD PTR es:[edi]
  42346a:	repnz xlat BYTE PTR ds:[ebx]
  42346c:	div    BYTE PTR [ecx-0x6fbdcc8]
  423472:	xchg   bh,dh
  423474:	fsubr  st(1),st
  423476:	xor    bl,bl
  423478:	call   0x32f1:0x8ab890e9
  42347f:	push   0x58
  423481:	jb     0x42340b
  423483:	push   ds
  423484:	fld    QWORD PTR [edi+0x81309d]
  42348a:	retf   
  42348b:	mov    ah,bl
  42348d:	push   esi
  42348e:	gs mov ebp,0x46bc88e9
  423494:	jl     0x4234de
  423496:	xchg   esi,eax
  423497:	pop    ebp
  423498:	mov    esi,DWORD PTR [ecx+ebp*1]
  42349b:	mov    cl,BYTE PTR [edx]
  42349d:	sbb    BYTE PTR [edx],dh
  42349f:	xchg   ecx,eax
  4234a0:	lea    ebp,[edi+0x3a]
  4234a3:	mov    esp,0x83086147
  4234a8:	jbe    0x4234c8
  4234aa:	push   ebx
  4234ab:	leave  
  4234ac:	rol    BYTE PTR [ecx+0x7],cl
  4234af:	sbb    dh,cl
  4234b1:	dec    esi
  4234b2:	or     al,0x8
  4234b4:	div    BYTE PTR [edx-0x33]
  4234b7:	leave  
  4234b8:	dec    edi
  4234b9:	loope  0x4234b9
  4234bb:	xchg   ecx,eax
  4234bc:	test   BYTE PTR [ecx+ebx*8-0x7b0ec142],bh
  4234c3:	call   0x2986:0x8db36b9f
  4234ca:	xor    DWORD PTR [edi],ebp
  4234cc:	test   edi,ebp
  4234ce:	xchg   BYTE PTR [ecx-0x75aff1a8],dl
  4234d4:	pop    edx
  4234d5:	push   es
  4234d6:	mov    eax,0x85a91861
  4234db:	xchg   ecx,eax
  4234dc:	xor    al,0x62
  4234de:	mov    edx,DWORD PTR [ecx]
  4234e0:	(bad)  
  4234e1:	ffree  st(3)
  4234e3:	inc    esi
  4234e4:	or     ebx,esi
  4234e6:	inc    esp
  4234e7:	mov    ebx,0x8a37de35
  4234ec:	loop   0x42351d
  4234ee:	add    BYTE PTR [ecx],cl
  4234f0:	mov    ecx,?
  4234f2:	arpl   di,ax
  4234f4:	lea    edx,[ecx+0x27]
  4234f7:	mov    cl,0x7b
  4234f9:	int3   
  4234fa:	aad    0x85
  4234fc:	test   DWORD PTR [ebp+eax*8+0x1a2a9e09],0x3eca6194
  423507:	add    DWORD PTR [edi],ecx
  423509:	add    dh,BYTE PTR [eax-0x39]
  42350c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42350d:	sub    DWORD PTR [edx+esi*1],0x4b
  423511:	dec    ecx
  423512:	in     eax,dx
  423513:	mov    esp,es
  423515:	fld    QWORD PTR [eax]
  423517:	push   ds
  423518:	inc    ebp
  423519:	or     cl,BYTE PTR [ecx+0x77899a62]
  42351f:	aaa    
  423520:	dec    eax
  423521:	ja     0x42350f
  423523:	fmul   st(7),st
  423525:	cmc    
  423526:	jbe    0x42353f
  423528:	rcr    BYTE PTR [esp+ecx*1+0x35],0x3d
  42352d:	pop    ebp
  42352e:	call   0x37cf53
  423533:	arpl   WORD PTR [esi+0x47688405],ax
  423539:	or     al,BYTE PTR [eax]
  42353b:	test   al,0xf4
  42353d:	add    DWORD PTR [ebx+0x10684901],ecx
  423543:	lock pushf 
  423545:	stos   DWORD PTR es:[edi],eax
  423546:	in     al,dx
  423547:	test   al,0x6d
  423549:	xchg   al,al
  42354b:	fcom   DWORD PTR [eax]
  42354d:	add    DWORD PTR [ecx],0xffffffaf
  423550:	inc    esp
  423551:	mov    DWORD PTR [esi+0x0],eax
  423554:	mov    bl,0x65
  423556:	dec    edi
  423557:	lock mov esi,0x98bf649
  42355d:	xchg   ebp,eax
  42355e:	add    BYTE PTR [ebp-0x65],0xc7
  423562:	repnz push es
  423564:	mov    eax,0x9f00ddc6
  423569:	inc    esp
  42356a:	mov    DWORD PTR [ebx],eax
  42356c:	sbb    al,0x6d
  42356e:	or     al,0xf
  423570:	in     eax,dx
  423571:	adc    ecx,DWORD PTR [edx]
  423573:	add    BYTE PTR [edi+0x31],ch
  423576:	inc    edi
  423577:	cld    
  423578:	js     0x42353f
  42357a:	lea    eax,[eax]
  42357c:	pop    edi
  42357d:	inc    esp
  42357e:	add    eax,0xfc42a4b7
  423583:	shl    DWORD PTR [ebx],0x0
  423586:	pop    edi
  423587:	cmp    dh,0x8f
  42358a:	add    al,0xb6
  42358c:	push   ss
  42358d:	jne    0x423562
  42358f:	sbb    eax,DWORD PTR [esi+0x2ee188e2]
  423595:	sbb    eax,0x508120c6
  42359a:	mov    esi,0x88b9bb89
  42359f:	clc    
  4235a0:	nop
  4235a1:	(bad)  
  4235a2:	aaa    
  4235a3:	jg     0x4235eb
  4235a5:	adc    al,0xe
  4235a7:	aas    
  4235a8:	jl     0x423618
  4235aa:	aas    
  4235ab:	sti    
  4235ac:	xchg   ecx,eax
  4235ad:	xchg   ebp,eax
  4235ae:	cmp    BYTE PTR [edi],0x88
  4235b1:	clc    
  4235b2:	pop    ebx
  4235b3:	adc    BYTE PTR [ebx],cl
  4235b5:	jg     0x42358c
  4235b7:	push   eax
  4235b8:	add    dh,bl
  4235ba:	imul   esp,DWORD PTR [esi-0x2ae31606],0x1
  4235c1:	bound  ecx,QWORD PTR [ecx-0x1171aa80]
  4235c7:	inc    ecx
  4235c8:	hlt    
  4235c9:	aaa    
  4235ca:	push   ss
  4235cb:	inc    edx
  4235cc:	lock aaa 
  4235ce:	xor    BYTE PTR [edx-0x20],bl
  4235d1:	or     eax,0x33fb3d65
  4235d6:	xor    DWORD PTR [eax+0x4531b245],eax
  4235dc:	std    
  4235dd:	test   eax,0x1ac07090
  4235e2:	pushf  
  4235e3:	aam    0x45
  4235e5:	mov    ds:0xcef841a0,al
  4235ea:	cdq    
  4235eb:	lea    eax,[eax]
  4235ed:	xchg   BYTE PTR [ecx+0x45],dh
  4235f0:	jle    0x423572
  4235f2:	js     0x423673
  4235f4:	jge    0x423584
  4235f6:	and    al,0x7
  4235f8:	sub    ebx,ecx
  4235fa:	test   DWORD PTR [edi],eax
  4235fc:	fadd   DWORD PTR ds:0x9102d24e
  423602:	sbb    al,0x51
  423604:	sti    
  423605:	pop    ecx
  423606:	loopne 0x42358f
  423608:	jge    0x423664
  42360a:	inc    edx
  42360b:	jecxz  0x42365e
  42360d:	xchg   esp,eax
  42360e:	(bad)  
  42360f:	fmul   DWORD PTR [ebp+eax*8+0x3beb0b46]
  423616:	inc    edx
  423617:	jecxz  0x423604
  423619:	adc    dh,cl
  42361b:	mov    ecx,ebx
  42361d:	add    BYTE PTR [ecx],al
  42361f:	push   0x66
  423621:	mov    ebp,0x4f78299a
  423626:	adc    cl,BYTE PTR [edi+0x42a8d3f6]
  42362c:	mov    ah,0x6b
  42362e:	aas    
  42362f:	inc    edx
  423630:	jecxz  0x423635
  423632:	out    dx,al
  423633:	pop    ebp
  423634:	inc    ebp
  423635:	fscale 
  423637:	repnz dec edx
  423639:	add    esi,DWORD PTR [eax-0x70]
  42363c:	dec    eax
  42363d:	fnstenv [ebx-0x6e]
  423640:	pop    ebx
  423641:	fild   DWORD PTR [edi]
  423643:	nop
  423644:	cmp    dl,dl
  423646:	test   BYTE PTR [ecx-0x30],al
  423649:	jg     0x423642
  42364b:	inc    ecx
  42364c:	jecxz  0x423651
  42364e:	pop    esi
  42364f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423650:	push   0x45
  423652:	xchg   BYTE PTR [edi+0x288e7ee],cl
  423658:	jecxz  0x423645
  42365a:	inc    edi
  42365b:	fwait
  42365c:	or     cl,bl
  42365e:	add    DWORD PTR [eax],ecx
  423660:	fisttp WORD PTR [esp+edi*1-0x65c095c6]
  423667:	ret    0x7fb
  42366a:	and    BYTE PTR [edx],bl
  42366c:	jl     0x423672
  42366e:	or     DWORD PTR [edx+0x49e755df],ecx
  423674:	push   ds
  423675:	fdiv   st,st(5)
  423677:	out    dx,al
  423678:	imul   ecx,DWORD PTR [edx+ecx*4-0x6b],0xffffffa2
  42367d:	add    eax,DWORD PTR [esi+0x500342]
  423683:	retf   0xac1
  423686:	mov    cl,0x81
  423688:	adc    BYTE PTR [ecx],dh
  42368a:	mov    bh,0x44
  42368c:	inc    esp
  42368d:	jbe    0x423672
  42368f:	cli    
  423690:	aas    
  423691:	or     ah,BYTE PTR [ebx-0x36]
  423694:	inc    edx
  423695:	or     eax,0xb38f1fa1
  42369a:	sub    cl,BYTE PTR [edx+0x4f69cf9a]
  4236a0:	mov    al,BYTE PTR [esi-0xe9c2e57]
  4236a6:	mov    edx,0x30ee400a
  4236ab:	retf   0xd42
  4236ae:	hlt    
  4236af:	test   esp,edx
  4236b1:	dec    ebp
  4236b2:	jmp    0xfd332a71
  4236b7:	xchg   ebp,eax
  4236b8:	xor    BYTE PTR [edx-0x17],cl
  4236bb:	add    cl,BYTE PTR [esi+0x43812d8c]
  4236c1:	pop    es
  4236c2:	jmp    0x624c84ca
  4236c7:	xor    BYTE PTR [edx],bh
  4236c9:	test   edx,ebp
  4236cb:	pushf  
  4236cc:	pop    es
  4236cd:	out    dx,al
  4236ce:	jmp    0x1d89:0x1d6f0e0d
  4236d5:	xchg   edx,eax
  4236d6:	sbb    ecx,0xcee94dcb
  4236dc:	aaa    
  4236dd:	cli    
  4236de:	fild   DWORD PTR [ebp+0x42]
  4236e1:	icebp  
  4236e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236e3:	lods   eax,DWORD PTR ds:[esi]
  4236e4:	lds    eax,FWORD PTR [edi+0x1]
  4236e7:	add    BYTE PTR [edx],al
  4236e9:	or     dh,bl
  4236eb:	shl    DWORD PTR [edx+0x1],1
  4236ee:	push   cs
  4236ef:	test   BYTE PTR [edi],0x53
  4236f2:	lock ficomp WORD PTR [ecx+0x5d]
  4236f6:	retf   0xc712
  4236f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236fa:	push   ecx
  4236fb:	repnz inc ebp
  4236fd:	call   0x496937fa
  423702:	ret    
  423703:	ret    0x416b
  423706:	pop    esp
  423707:	mov    ebx,DWORD PTR [edi]
  423709:	jne    0x423787
  42370b:	or     BYTE PTR [edi+0x37],al
  42370e:	mov    edi,esi
  423710:	and    BYTE PTR [ebp+0x7c],dh
  423713:	adc    BYTE PTR [edi],dl
  423715:	pop    edi
  423716:	mov    edi,esi
  423718:	adc    BYTE PTR [ebp+0x7c],dh
  42371b:	sbb    al,0x7
  42371d:	addr16 mov edi,esi
  423720:	add    BYTE PTR [ebp+0x7c],dh
  423723:	sub    al,0xf7
  423725:	mov    cs,WORD PTR [edx+0x7c7590fe]
  42372b:	xor    BYTE PTR [edi],al
  42372d:	xchg   edi,eax
  42372e:	mov    bh,dh
  423730:	mov    al,ds:0x57347c75
  423735:	aas    
  423736:	mov    edi,esi
  423738:	push   eax
  423739:	mov    ecx,0x7c6a407c
  42373e:	jbe    0x42374d
  423740:	inc    eax
  423741:	cmp    al,0xe2
  423743:	sti    
  423744:	outs   dx,DWORD PTR ds:[esi]
  423745:	je     0x42373c
  423747:	push   esi
  423748:	inc    edi
  423749:	jae    0x4236d5
  42374b:	inc    BYTE PTR [eax]
  42374d:	mov    al,ds:0xe9ffb154
  423752:	mov    ecx,gs
  423754:	jmp    0x423785
  423756:	je     0x42374d
  423758:	call   FWORD PTR [ecx]
  42375a:	cmp    edx,esp
  42375c:	jecxz  0x42377d
  42375e:	je     0x423755
  423760:	jmp    FWORD PTR [ecx]
  423762:	xchg   ecx,eax
  423763:	jmp    0xf5b66743
  423768:	ret    
  423769:	clc    
  42376a:	mov    bh,0xf2
  42376c:	test   DWORD PTR [eax+0x14561bfc],esp
  423772:	jl     0x4237dd
  423774:	test   BYTE PTR [edi-0x79db89c1],0xa5
  42377b:	mov    edx,gs
  42377d:	mov    es,WORD PTR [ecx-0x7a960439]
  423783:	dec    eax
  423784:	jne    0x4237e1
  423786:	sub    al,0x39
  423788:	jmp    0xfc19519e
  42378d:	mov    ebx,0x627fe920
  423792:	loop   0x423718
  423794:	inc    ebp
  423795:	mov    ds,WORD PTR [eax]
  423797:	jmp    0x218e0cf8
  42379c:	sti    
  42379d:	mov    dh,0xa5
  42379f:	xor    BYTE PTR [edx+eiz*2-0x7f],0xe5
  4237a4:	mov    edx,0x84d80c98
  4237a9:	inc    esi
  4237aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237ab:	jno    0x423749
  4237ad:	xchg   DWORD PTR [ecx+0x2d002f0d],ebx
  4237b3:	jl     0x423765
  4237b5:	inc    esp
  4237b6:	stos   BYTE PTR es:[edi],al
  4237b7:	xchg   ebp,eax
  4237b8:	or     eax,0x11d60e01
  4237bd:	pmaxub mm3,QWORD PTR [edx]
  4237c0:	(bad)  
  4237c1:	cli    
  4237c2:	jmp    0x204e14d7
  4237c7:	out    0x11,al
  4237c9:	jns    0x7a4668e2
  4237cf:	test   al,0x3c
  4237d1:	dec    edi
  4237d2:	ss retf 
  4237d4:	fcom   DWORD PTR ds:0x4d962e
  4237da:	push   eax
  4237db:	and    dh,BYTE PTR [ecx]
  4237dd:	and    al,0x92
  4237df:	inc    ecx
  4237e0:	data16 sub BYTE PTR [eax+0x6a5c0e44],0xa1
  4237e8:	or     BYTE PTR [eax+ebx*2+0x35000d9a],al
  4237ef:	test   al,0x63
  4237f1:	push   DWORD PTR [edx+eax*2]
  4237f4:	xor    al,0xd5
  4237f6:	cli    
  4237f7:	data16 aaa 
  4237f9:	aad    0xf2
  4237fb:	data16 daa 
  4237fd:	aad    0xfa
  4237ff:	popw   ss
  423801:	aad    0x93
  423803:	or     cl,dh
  423805:	inc    ebx
  423806:	xchg   BYTE PTR [ecx+0x47a22027],bh
  42380c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42380d:	add    eax,0x3e2320a
  423812:	xchg   BYTE PTR [edi+0x9000c1e],dh
  423818:	inc    edx
  423819:	arpl   WORD PTR [esi+ebx*4+0x41],bx
  42381d:	pop    ecx
  42381e:	shl    BYTE PTR [edx+eax*1-0x337cb01d],0xb7
  423826:	dec    esi
  423827:	mov    BYTE PTR [edx-0x4c],0xca
  42382b:	push   es
  42382c:	push   cs
  42382d:	mov    edi,0xcff01041
  423832:	outs   dx,BYTE PTR ds:[esi]
  423833:	inc    edi
  423834:	stc    
  423835:	popa   
  423836:	jecxz  0x4237be
  423838:	inc    edx
  423839:	arpl   WORD PTR [edi+eax*1],ax
  42383c:	jns    0x423821
  42383e:	int3   
  42383f:	add    dh,0xb2
  423842:	xor    ch,ch
  423844:	adc    ebx,edi
  423846:	imul   esi,DWORD PTR [esi-0x22fc5ced],0x15
  42384d:	inc    DWORD PTR [edi+0x34]
  423850:	mov    esi,DWORD PTR [edi-0x1174b9e1]
  423856:	push   ebx
  423857:	fwait
  423858:	add    ah,bl
  42385a:	mov    BYTE PTR [esi+0xa051446],dh
  423860:	aam    0xe3
  423862:	add    eax,DWORD PTR [esi+0x2286ec18]
  423868:	mov    bx,0xae3b
  42386c:	data16 or bl,BYTE PTR [edi]
  42386f:	mov    ebx,0x85e96286
  423874:	inc    edx
  423875:	stos   BYTE PTR es:[edi],al
  423876:	push   ebx
  423877:	pop    ebx
  423878:	ret    0x39c9
  42387b:	add    BYTE PTR [eax+0x6145178d],ch
  423881:	dec    edx
  423882:	or     al,BYTE PTR [ebx+0x6c]
  423885:	mov    bh,0x6e
  423887:	or     eax,0x7fe1ead2
  42388c:	sub    ecx,DWORD PTR [esi+0x3ab862f1]
  423892:	test   esi,esp
  423894:	ins    BYTE PTR es:[edi],dx
  423895:	jmp    0xfd7a:0x8d961f29
  42389c:	add    bh,bh
  42389e:	and    eax,0x46b77a21
  4238a3:	lds    ecx,FWORD PTR [ecx+0x4605e1f2]
  4238a9:	(bad)  
  4238aa:	icebp  
  4238ab:	push   0xffffffd9
  4238ad:	xchg   DWORD PTR ss:[ecx-0x169dce45],ebp
  4238b4:	test   DWORD PTR [edx-0x56],eax
  4238b7:	rcr    edx,cl
  4238b9:	lea    esi,[esi+0x5]
  4238bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238bd:	hlt    
  4238be:	lock cld 
  4238c0:	imul   ebp,DWORD PTR [edi],0xed2e94a
  4238c6:	es in  eax,0xed
  4238c9:	push   es
  4238ca:	jno    0x42390b
  4238cc:	mov    dl,0xc1
  4238ce:	or     DWORD PTR [esi],esi
  4238d0:	xor    eax,0x69b9f15a
  4238d5:	stc    
  4238d6:	pop    esp
  4238d7:	mov    edi,0xf48a2fda
  4238dc:	inc    ebp
  4238dd:	inc    edx
  4238de:	lea    edx,[ecx]
  4238e0:	add    BYTE PTR [edi+ecx*1-0xff45c4],al
  4238e7:	and    eax,0x7f55bb00
  4238ec:	inc    esp
  4238ed:	ret    
  4238ee:	pop    ebp
  4238ef:	pop    edx
  4238f0:	push   0x200a45ac
  4238f5:	icebp  
  4238f6:	mov    BYTE PTR [esi+0x24],0xab
  4238fa:	cmp    cl,BYTE PTR [edx]
  4238fc:	add    BYTE PTR [edi+0x6],ch
  4238ff:	dec    esi
  423900:	and    al,0x93
  423902:	jne    0x42391b
  423904:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423905:	jb     0x42390c
  423907:	or     al,BYTE PTR [ebx+0xa773f47]
  42390d:	out    dx,al
  42390e:	repnz and eax,0xa3e2720
  423914:	add    BYTE PTR [ebx+0x42ff5bfd],dl
  42391a:	stc    
  42391b:	push   ss
  42391c:	inc    eax
  42391d:	das    
  42391e:	je     0x423996
  423920:	and    al,0x43
  423922:	je     0x42393b
  423924:	jl     0x423958
  423926:	add    eax,0x6123ff0a
  42392b:	adc    bh,bh
  42392d:	xor    bh,cl
  42392f:	push   ss
  423930:	inc    eax
  423931:	pop    ds
  423932:	jae    0x42397a
  423934:	and    al,0x2c
  423936:	lds    ebp,FWORD PTR [esi+0x24]
  423939:	cld    
  42393a:	ds add eax,0xf5746c82
  423940:	call   FWORD PTR [eax-0x16]
  423943:	and    eax,0x3f470034
  423948:	jne    0x423948
  42394a:	dec    eax
  42394b:	jne    0x4239c3
  42394d:	and    al,0x87
  42394f:	data16 bnd jle 0x4238ec
  423953:	jne    0x4239aa
  423955:	pop    esi
  423956:	int3   
  423957:	test   BYTE PTR [ecx-0x75],bl
  42395a:	xchg   edx,eax
  42395b:	push   ebx
  42395c:	mov    al,0x4
  42395e:	scas   eax,DWORD PTR es:[edi]
  42395f:	jae    0x4239d7
  423961:	and    al,0x86
  423963:	addr16 aad 0xe4
  423966:	sub    BYTE PTR [ecx],bh
  423968:	(bad)  
  42396a:	sbb    dh,BYTE PTR [edi+0x5]
  42396d:	call   0xfc1d422f
  423972:	sbb    al,0x6f
  423974:	outs   dx,BYTE PTR ds:[esi]
  423975:	jae    0x4239f5
  423977:	out    0x59,al
  423979:	and    al,0xb6
  42397b:	add    esi,ecx
  42397d:	rcl    BYTE PTR [ebx+0x69],1
  423980:	fmul   QWORD PTR [ecx-0x1905ca2e]
  423986:	enter  0x2a03,0x66
  42398a:	test   DWORD PTR [esi],ecx
  42398c:	dec    ecx
  42398d:	and    al,0xa6
  42398f:	sub    DWORD PTR [ecx+0x44],esi
  423992:	stos   BYTE PTR es:[edi],al
  423993:	cmp    DWORD PTR ds:0xdb1644e8,esi
  423999:	sti    
  42399a:	fst    DWORD PTR [edx]
  42399c:	dec    ecx
  42399d:	and    al,0x6e
  42399f:	mov    cl,0x8e
  4239a1:	jp     0x4239d3
  4239a3:	mov    cl,0x70
  4239a5:	inc    esp
  4239a6:	bound  edi,QWORD PTR [ebp-0x78]
  4239a9:	clc    
  4239aa:	add    BYTE PTR [ecx],ah
  4239ac:	xchg   BYTE PTR ds:0xc885192f,al
  4239b2:	jb     0x423a13
  4239b4:	and    al,0x49
  4239b6:	and    al,0x6e
  4239b8:	out    0x8,al
  4239ba:	mov    eax,0x155241bf
  4239bf:	stc    
  4239c0:	sub    ebp,ebx
  4239c2:	adc    eax,0x4d8b6e
  4239c7:	push   esi
  4239c8:	and    al,0x49
  4239ca:	and    al,0x82
  4239cc:	add    BYTE PTR [ecx],bl
  4239ce:	mov    eax,0xfff9ecee
  4239d3:	shl    DWORD PTR [ecx+ecx*2],1
  4239d6:	and    al,0xa2
  4239d8:	loopne 0x4239da
  4239da:	clc    
  4239db:	xor    al,0x42
  4239dd:	xor    BYTE PTR [esi+0x3a],bh
  4239e0:	pop    esi
  4239e1:	or     ebx,esp
  4239e3:	or     cl,BYTE PTR [ecx]
  4239e5:	sbb    edx,edx
  4239e7:	sti    
  4239e8:	inc    dh
  4239ea:	out    dx,eax
  4239eb:	push   ecx
  4239ec:	mov    ch,0x9f
  4239ee:	daa    
  4239ef:	jle    0x4239e3
  4239f1:	pop    ebp
  4239f2:	inc    edi
  4239f3:	push   0x4e
  4239f5:	xchg   ebx,eax
  4239f6:	cmp    DWORD PTR [esi+0x7dd2b6d8],ebx
  4239fc:	mov    ebx,0xd710deb
  423a01:	push   0xd887d6db
  423a06:	rcl    ebx,1
  423a08:	mov    ebx,0xf3b733af
  423a0d:	adc    BYTE PTR [ebx+0x0],bh
  423a10:	test   DWORD PTR [ebx-0x54],edx
  423a13:	jnp    0x4239c2
  423a15:	cmp    bh,BYTE PTR [eax+0x33878253]
  423a1b:	cld    
  423a1c:	sub    DWORD PTR [ecx+0x2c],eax
  423a1f:	sar    DWORD PTR ds:0xd60818b5,1
  423a25:	mov    ecx,0xa93d0e1
  423a2a:	cmc    
  423a2b:	inc    ebx
  423a2c:	xchg   BYTE PTR [ecx-0x2f42fe2],bh
  423a32:	outs   dx,BYTE PTR ds:[esi]
  423a33:	xor    al,0xb4
  423a35:	call   0xa6c:0x870dcbbf
  423a3c:	or     ebp,esi
  423a3e:	data16 jl 0x4239db
  423a41:	inc    ecx
  423a42:	sub    dh,dl
  423a44:	jne    0x423aaa
  423a46:	mov    ah,0x34
  423a48:	push   ebp
  423a49:	sbb    dl,BYTE PTR [edx+esi*8+0x349442a3]
  423a50:	(bad)  [ebx+edx*4]
  423a53:	cmc    
  423a54:	xchg   ecx,eax
  423a55:	inc    edx
  423a56:	or     ah,BYTE PTR [eax+0x3f]
  423a59:	ss xor eax,0xba3e5e2a
  423a5f:	call   0xd833733e
  423a64:	int    0x99
  423a66:	outs   dx,DWORD PTR ds:[esi]
  423a67:	pop    ss
  423a68:	xlat   BYTE PTR ds:[ebx]
  423a69:	push   edi
  423a6a:	retf   0x72af
  423a6d:	jns    0x423a3c
  423a6f:	lahf   
  423a70:	sbb    dl,BYTE PTR [edx+0x5e003f8d]
  423a76:	mov    cl,dh
  423a78:	jmp    0x816c4802
  423a7d:	test   DWORD PTR [edx],edi
  423a7f:	or     ch,cl
  423a81:	pop    ebp
  423a82:	xlat   BYTE PTR ds:[ebx]
  423a83:	outs   dx,DWORD PTR ds:[esi]
  423a84:	fist   WORD PTR [esi-0x44]
  423a87:	mov    BYTE PTR ds:0x640a4280,cl
  423a8d:	inc    ebp
  423a8e:	adc    dh,bh
  423a90:	push   edx
  423a91:	pop    edx
  423a92:	mov    DWORD PTR [edi],edx
  423a94:	add    eax,0xfb0a464c
  423a99:	inc    ebp
  423a9a:	jmp    0xe8c6b46b
  423a9f:	int3   
  423aa0:	aas    
  423aa1:	push   edi
  423aa2:	mov    tr5,ebp
  423aa5:	mov    dl,0x92
  423aa7:	icebp  
  423aa8:	sbb    eax,0x81e2365e
  423aad:	sbb    DWORD PTR [ecx-0x7dba450f],ecx
  423ab3:	or     BYTE PTR [ebp+0x600a0293],dl
  423ab9:	mov    edi,0xf167832e
  423abe:	inc    edx
  423abf:	or     ch,cl
  423ac1:	jl     0x423a83
  423ac3:	es jmp 0x423a4b
  423ac6:	inc    edx
  423ac7:	sub    DWORD PTR [edi-0x73],0xffffff84
  423acb:	icebp  
  423acc:	jmp    0x92bb33
  423ad1:	lods   eax,DWORD PTR ds:[esi]
  423ad2:	mov    ecx,esi
  423ad4:	push   ebp
  423ad5:	push   esp
  423ad6:	jo     0x423aba
  423ad8:	adc    eax,DWORD PTR [eax]
  423ada:	fild   WORD PTR [ecx+0xa]
  423add:	imul   bl
  423adf:	pop    ebp
  423ae0:	add    al,BYTE PTR [ecx]
  423ae2:	sbb    edi,DWORD PTR [esp+ebx*2]
  423ae5:	call   0x362fff
  423aea:	and    al,0x7b
  423aec:	push   esp
  423aed:	ret    0x41ab
  423af0:	cmc    
  423af1:	mov    dh,0xcb
  423af3:	aas    
  423af4:	or     al,BYTE PTR [eax]
  423af6:	push   0xdf8ad63b
  423afb:	inc    ecx
  423afc:	loop   0x423b51
  423afe:	bnd jae 0x423af6
  423b01:	mov    esi,DWORD PTR [ecx]
  423b03:	fcom   DWORD PTR [di]
  423b06:	push   eax
  423b07:	jne    0x423b65
  423b09:	neg    BYTE PTR [edi+edi*1]
  423b0c:	jbe    0x423b1e
  423b0e:	lds    ecx,FWORD PTR [edx+0x3e63877e]
  423b14:	or     al,BYTE PTR [eax]
  423b16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b17:	or     ebx,edi
  423b19:	call   0x37d5d5
  423b1e:	stc    
  423b1f:	xor    al,0x73
  423b22:	push   edi
  423b23:	or     BYTE PTR [esi+0x24],al
  423b26:	aaa    
  423b27:	mov    edx,0xc02174ca
  423b2c:	retf   0x5f04
  423b2f:	ret    
  423b30:	dec    ebp
  423b31:	adc    al,0xf7
  423b33:	add    ah,dh
  423b35:	call   DWORD PTR [eax-0x7417ff97]
  423b3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b3c:	hlt    
  423b3d:	inc    DWORD PTR [eax]
  423b3f:	test   DWORD PTR [edx-0x3e3a0f78],ecx
  423b45:	dec    ebp
  423b46:	adc    al,0x57
  423b48:	jmp    0xecc93b32
  423b4d:	outs   dx,BYTE PTR ds:[esi]
  423b4e:	fwait
  423b4f:	scas   al,BYTE PTR es:[edi]
  423b50:	cdq    
  423b51:	or     eax,0x2593800
  423b56:	add    BYTE PTR [eax],bh
  423b58:	lods   al,BYTE PTR ds:[esi]
  423b59:	shl    BYTE PTR [edx+eiz*4+0x6b],0x74
  423b5e:	icebp  
  423b5f:	ror    esi,0x29
  423b62:	adc    BYTE PTR [esi-0x4e0520df],ch
  423b68:	movsx  eax,BYTE PTR [ebp-0xe1b5357]
  423b6f:	or     BYTE PTR [ebx-0x6679fff5],al
  423b75:	pop    ecx
  423b76:	push   cs
  423b77:	or     eax,DWORD PTR [ecx+ebx*2+0x29defd0a]
  423b7e:	or     al,0x13
  423b80:	fdiv   st(1),st
  423b82:	xchg   BYTE PTR [ecx+0x72],dl
  423b85:	dec    ecx
  423b86:	in     eax,0x71
  423b88:	gs je  0x423b4e
  423b8b:	leave  
  423b8c:	dec    ebx
  423b8d:	int3   
  423b8e:	or     BYTE PTR [esi-0x2d04c7b8],al
  423b94:	xor    eax,0xc55786f2
  423b99:	pop    ecx
  423b9a:	and    al,0x72
  423b9c:	int3   
  423b9d:	pop    ecx
  423b9e:	and    al,0x9a
  423ba0:	sbb    esi,0xdd390015
  423ba6:	je     0x423b80
  423ba8:	or     eax,DWORD PTR [ecx+0x1430353f]
  423bae:	adc    eax,0xb9a21fe
  423bb3:	je     0x423c1f
  423bb5:	and    al,0x8b
  423bb7:	mov    edx,0xd9762
  423bbc:	add    eax,0xd52f9d4
  423bc1:	(bad)  
  423bc3:	fxam   
  423bc5:	inc    edx
  423bc6:	push   0xd7680bce
  423bcb:	add    BYTE PTR [ecx],al
  423bcd:	idiv   esi
  423bcf:	test   DWORD PTR [eax],0xeec56c70
  423bd5:	mov    WORD PTR [edi],?
  423bd7:	into   
  423bd8:	int    0xeb
  423bda:	jnp    0x423ba1
  423bdc:	(bad)  
  423bde:	inc    esp
  423bdf:	into   
  423be0:	mov    ebp,0xf97a80e3
  423be5:	out    0x24,eax
  423be7:	push   DWORD PTR [ecx+0x57df7bee]
  423bed:	icebp  
  423bee:	mov    al,0x7a
  423bf0:	sbb    esi,DWORD PTR [esi]
  423bf2:	mov    eax,0x608c9f7a
  423bf7:	sbb    edx,DWORD PTR [eax-0xfb1c7d]
  423bfd:	add    eax,0xb605fdf7
  423c02:	jecxz  0x423c07
  423c04:	xchg   BYTE PTR [ebp-0xff022f],bh
  423c0a:	mov    ebp,0xb78603e3
  423c0f:	mov    al,ds:0xc084c0dc
  423c14:	int    0x2
  423c16:	sub    BYTE PTR [esi],0x7
  423c19:	sar    DWORD PTR [edx-0x50],1
  423c1c:	fxch   st(3)
  423c1e:	mov    ch,0x68
  423c20:	and    BYTE PTR [eax-0x7d],al
  423c23:	jecxz  0x423ca3
  423c25:	add    eax,0x8603e226
  423c2a:	icebp  
  423c2b:	jns    0x423c6c
  423c2d:	cs mov ecx,0x162e001e
  423c33:	test   ch,cl
  423c35:	sbb    eax,0x102848b7
  423c3a:	and    ebx,0xffffff8b
  423c3d:	xchg   BYTE PTR [edx],bh
  423c3f:	or     ch,cl
  423c41:	test   DWORD PTR [ebx-0x6],ecx
  423c44:	fidivr WORD PTR [eax-0xe537a6e]
  423c4a:	repz test BYTE PTR [ebp+ebp*8-0x2cb53266],bh
  423c52:	xchg   BYTE PTR [ebp-0xf103634],al
  423c58:	jle    0x423bf8
  423c5a:	test   cl,dh
  423c5c:	jmp    0x5924b3af
  423c61:	lods   eax,DWORD PTR ds:[esi]
  423c62:	xchg   ecx,esi
  423c64:	pusha  
  423c65:	inc    ecx
  423c66:	cmp    dh,BYTE PTR ds:0xf1244e2f
  423c6c:	xchg   esp,eax
  423c6d:	add    BYTE PTR [ebp-0x421ab846],bh
  423c73:	sub    eax,0x2cb0eed
  423c78:	outs   dx,DWORD PTR ds:[esi]
  423c79:	icebp  
  423c7a:	test   DWORD PTR [eax],ecx
  423c7c:	sbb    esi,DWORD PTR [edx-0x5]
  423c7f:	pop    ebp
  423c80:	or     al,0xe9
  423c82:	test   ecx,ecx
  423c84:	ja     0x423c67
  423c86:	inc    BYTE PTR [edi]
  423c88:	(bad)  
  423c89:	shr    ah,1
  423c8b:	mov    eax,ds:0x7eedef1
  423c90:	add    dh,BYTE PTR [edx]
  423c92:	aas    
  423c93:	dec    esp
  423c94:	pop    eax
  423c95:	into   
  423c96:	mov    al,0x4a
  423c98:	loop   0x423cba
  423c9a:	pop    ebp
  423c9b:	jge    0x423c8e
  423c9d:	push   ds
  423c9e:	cwde   
  423c9f:	mov    ecx,esp
  423ca1:	loope  0x423c28
  423ca3:	pop    ss
  423ca4:	test   DWORD PTR [ebp+0x3efe6f06],edi
  423caa:	scas   eax,DWORD PTR es:[edi]
  423cab:	neg    DWORD PTR [ecx]
  423cad:	ss scas eax,DWORD PTR es:[edi]
  423caf:	jnp    0x423ca9
  423cb1:	outs   dx,BYTE PTR ds:[esi]
  423cb2:	jge    0x423c34
  423cb4:	icebp  
  423cb5:	jmp    0xb2083e
  423cba:	xchg   ebx,eax
  423cbb:	sbb    DWORD PTR [ebp-0x7b],ebp
  423cbe:	xchg   ecx,eax
  423cbf:	sqrtps xmm1,XMMWORD PTR [ebx-0x25f61d0]
  423cc6:	push   0xd3c0868e
  423ccb:	jmp    0x46393d81
  423cd0:	or     bh,BYTE PTR [ebx]
  423cd2:	add    BYTE PTR [edi],bh
  423cd4:	add    BYTE PTR [ebp+0xa45ed2c],al
  423cda:	bndldx bnd2,[esi+0x71608d41]
  423ce1:	or     al,BYTE PTR [eax]
  423ce3:	scas   eax,DWORD PTR es:[edi]
  423ce4:	xor    al,0x83
  423ce6:	dec    ebp
  423ce7:	imul   edi,esp,0x46
  423cea:	adc    BYTE PTR [edi-0x77002f29],dl
  423cf0:	cli    
  423cf1:	dec    esi
  423cf2:	or     al,0x2a
  423cf4:	(bad)  
  423cf5:	add    ch,BYTE PTR es:[edi+0x16388945]
  423cfc:	or     dl,dh
  423cfe:	mov    esp,edx
  423d00:	jne    0x423ceb
  423d02:	adc    ecx,DWORD PTR [esi+ecx*4-0x6e0d000b]
  423d09:	mov    DWORD PTR [ebp+0x6f],eax
  423d0c:	popf   
  423d0d:	outs   dx,BYTE PTR ds:[esi]
  423d0e:	loop   0x423d58
  423d10:	lea    ecx,[ecx+0x3f013745]
  423d16:	hlt    
  423d17:	xchg   ecx,eax
  423d18:	lea    edi,[edx]
  423d1a:	call   DWORD PTR [edx+0x6665e97e]
  423d20:	mov    ebp,?
  423d22:	pop    ebx
  423d23:	inc    esp
  423d24:	jp     0x423d81
  423d26:	push   DWORD PTR [edx+0x7a]
  423d29:	hlt    
  423d2a:	jne    0x423d63
  423d2c:	popf   
  423d2d:	pop    esp
  423d2e:	sbb    DWORD PTR [eax],ecx
  423d30:	lea    edx,[ebp+0x5e]
  423d33:	xchg   BYTE PTR [edx-0x79fff338],ah
  423d39:	ss jno 0x423d28
  423d3c:	add    eax,0xb786f2d7
  423d41:	jae    0x423d7b
  423d43:	xchg   DWORD PTR [edi-0x178c29f],ebx
  423d49:	lahf   
  423d4a:	fwait
  423d4b:	inc    ebx
  423d4c:	scas   al,BYTE PTR es:[edi]
  423d4d:	hlt    
  423d4e:	pop    esp
  423d4f:	xor    al,0x9d
  423d51:	cmp    al,0xf5
  423d53:	stos   BYTE PTR es:[edi],al
  423d54:	mov    dh,0x67
  423d56:	xchg   esp,eax
  423d57:	mov    edi,0x756f1dad
  423d5c:	shl    bl,cl
  423d5e:	push   esi
  423d5f:	add    al,0xff
  423d61:	mov    ch,0xc1
  423d63:	or     esi,ecx
  423d65:	mov    edi,0x6ba9ff01
  423d6a:	pop    esp
  423d6b:	sbb    BYTE PTR [esi],al
  423d6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d6e:	cmc    
  423d6f:	(bad)  
  423d70:	(bad)  
  423d71:	mov    ch,0xc5
  423d73:	je     0x423d03
  423d75:	in     al,0x4c
  423d77:	and    BYTE PTR [edi],cl
  423d79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d7a:	cmc    
  423d7b:	out    0x88,al
  423d7d:	repnz pop edx
  423d7f:	or     ch,bh
  423d81:	imul   DWORD PTR [edi+eax*4]
  423d84:	fbld   TBYTE PTR [ebp+0x10]
  423d87:	pop    ebp
  423d88:	jb     0x423d2b
  423d8a:	xchg   esp,eax
  423d8b:	pop    ebx
  423d8c:	mov    edx,0x6908226c
  423d91:	ja     0x423d44
  423d93:	adc    dh,al
  423d95:	imul   ebp,DWORD PTR [edi+0x43],0x75074d9e
  423d9c:	add    BYTE PTR [ebp+0x5d0849f4],ah
  423da2:	bound  esi,QWORD PTR [eax+0x4d]
  423da5:	ds out 0x8,eax
  423da8:	or     BYTE PTR ds:0xfe086f68,ch
  423dae:	inc    edx
  423daf:	stc    
  423db0:	inc    ecx
  423db1:	(bad)  
  423db2:	cmp    ebp,DWORD PTR [eax+0xe441455]
  423db8:	enter  0x719,0x7f
  423dbc:	push   cs
  423dbd:	shl    esp,1
  423dbf:	jle    0x423d9f
  423dc1:	mov    dl,0x3e
  423dc3:	in     eax,0x50
  423dc5:	scas   al,BYTE PTR es:[edi]
  423dc6:	retf   
  423dc7:	push   ds
  423dc8:	cld    
  423dc9:	loopne 0x423e28
  423dcb:	ins    BYTE PTR es:[edi],dx
  423dcc:	cmp    dh,ch
  423dce:	inc    ebx
  423dcf:	cmp    ebx,esi
  423dd1:	jp     0x423dbb
  423dd3:	jnp    0x423dc8
  423dd5:	addr16 leave 
  423dd7:	icebp  
  423dd8:	xchg   ah,al
  423dda:	inc    esp
  423ddb:	fs ret 
  423ddd:	sar    BYTE PTR [edx+eiz*1],1
  423de0:	push   ebp
  423de1:	(bad)  
  423de2:	inc    ebx
  423de3:	mov    dh,0xc7
  423de5:	rol    DWORD PTR [esi],0x37
  423de8:	push   cs
  423de9:	stc    
  423dea:	hlt    
  423deb:	(bad)  
  423dec:	fstp   QWORD PTR [esi+0x3e]
  423def:	fist   WORD PTR [eax+0x62]
  423df2:	retf   
  423df3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423df4:	sti    
  423df5:	test   al,0x5b
  423df7:	ins    BYTE PTR es:[edi],dx
  423df8:	cmp    BYTE PTR [esi-0x7721d4bd],bl
  423dfe:	retf   
  423dff:	sar    DWORD PTR [eax+eax*1+0x74],cl
  423e03:	ret    
  423e04:	sub    edi,edi
  423e06:	add    BYTE PTR [ebx-0xbb8f121],al
  423e0c:	hlt    
  423e0d:	add    eax,0x3ee47efb
  423e12:	push   0x3b
  423e14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e15:	push   esi
  423e16:	addr16 pop ds
  423e18:	cmp    DWORD PTR ds:0x3e7844f,ebp
  423e1e:	mov    ebx,0x5a83d7cb
  423e23:	mov    ds:0x138603e3,al
  423e28:	or     bl,BYTE PTR [edi]
  423e2a:	ja     0x423ea7
  423e2c:	ja     0x423e0b
  423e2e:	mov    dl,0x7a
  423e30:	loop   0x423e0c
  423e32:	jmp    0xf7312fb1
  423e37:	add    DWORD PTR [ebx+0xbaa362c],0xbb28715
  423e41:	nop
  423e42:	data16 jg 0x423e36
  423e45:	jmp    0xb2aad5e4
  423e4a:	ret    0x3f4
  423e4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e4e:	mov    cl,0x76
  423e50:	or     al,0xe9
  423e52:	test   DWORD PTR [edx-0x7b],eax
  423e55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e56:	sar    DWORD PTR [ecx],1
  423e58:	dec    edi
  423e59:	stc    
  423e5a:	dec    ecx
  423e5b:	dec    ebx
  423e5c:	mov    ds:0x274741eb,al
  423e61:	inc    esp
  423e62:	mov    edi,0x6a0a41
  423e67:	add    cl,BYTE PTR [edx-0x7d]
  423e6a:	lods   al,BYTE PTR ds:[esi]
  423e6b:	leave  
  423e6c:	int3   
  423e6d:	xchg   ecx,ecx
  423e6f:	mov    esi,0xbeb9f17a
  423e74:	hlt    
  423e75:	std    
  423e76:	outs   dx,DWORD PTR ds:[esi]
  423e77:	imul   ebp,DWORD PTR [esi-0x7d],0x4fc8b5b4
  423e7e:	add    DWORD PTR ds:0x92ee61d,ecx
  423e84:	loop   0x423e76
  423e86:	dec    BYTE PTR [esi+0x3f]
  423e89:	or     ch,cl
  423e8b:	test   DWORD PTR [ecx+0x17],edi
  423e8e:	mov    cl,0x61
  423e90:	or     ch,BYTE PTR ds:[ebp+eax*2-0x8]
  423e95:	or     BYTE PTR [ebx],bl
  423e97:	dec    edx
  423e98:	ins    BYTE PTR es:[edi],dx
  423e99:	shr    bl,0x85
  423e9c:	inc    edx
  423e9d:	test   DWORD PTR [edx+edi*2],edx
  423ea0:	push   esi
  423ea1:	dec    edx
  423ea2:	add    BYTE PTR [edi+0x33],bl
  423ea5:	jg     0x423e2c
  423ea7:	retf   
  423ea8:	mov    esi,ebp
  423eaa:	call   FWORD PTR [edi-0x703bb90b]
  423eb0:	mov    ebx,esp
  423eb2:	test   edi,ebx
  423eb4:	jp     0x423e4c
  423eb6:	ret    0x2c97
  423eb9:	clc    
  423eba:	cmp    bl,ah
  423ebc:	or     eax,0x42708b11
  423ec1:	mov    DWORD PTR [ebp-0xa7489],eax
  423ec7:	les    eax,FWORD PTR [eax-0x3bfffa91]
  423ecd:	add    BYTE PTR [ebx+0x4fe6f45],0x8b
  423ed4:	pop    edx
  423ed5:	sbb    eax,0x4e40fff5
  423eda:	retf   
  423edb:	jge    0x423ec7
  423edd:	pop    esi
  423ede:	retf   
  423edf:	mov    DWORD PTR [edx],ebp
  423ee1:	xchg   esi,eax
  423ee2:	mov    DWORD PTR [ebp-0x75],eax
  423ee5:	(bad)  
  423ee6:	jmp    0xe374:0xae3c3602
  423eed:	xchg   edx,eax
  423eee:	inc    edi
  423eef:	test   BYTE PTR [edi+0xb200a41],bl
  423ef5:	jge    0x423e80
  423ef7:	pop    ebp
  423ef8:	pushf  
  423ef9:	sahf   
  423efa:	dec    ebx
  423efb:	push   edi
  423efc:	and    bh,ah
  423efe:	jne    0x423eff
  423f00:	or     BYTE PTR [edx-0x522572a6],0x5a
  423f07:	call   FWORD PTR [ecx-0x25f03604]
  423f0d:	cmp    al,0x1
  423f0f:	cmp    BYTE PTR [edx],al
  423f11:	jbe    0x423f90
  423f13:	sub    ah,dh
  423f15:	xor    eax,0xeea8b06
  423f1a:	cmc    
  423f1b:	inc    DWORD PTR [esi-0x2c3efa6c]
  423f21:	data16 adc al,0xc1
  423f24:	jmp    FWORD PTR ds:0xf09187ea
  423f2a:	mov    dh,BYTE PTR [ecx+edi*1-0x4c]
  423f2e:	leave  
  423f2f:	aaa    
  423f30:	add    BYTE PTR [edi+0x2e],al
  423f33:	hlt    
  423f34:	es inc edi
  423f36:	repnz dec edx
  423f38:	call   0x55b7a76a
  423f3d:	jne    0x423ed2
  423f3f:	and    dh,dh
  423f41:	fwait
  423f42:	bound  eax,QWORD PTR ds:0x7174755d
  423f48:	clc    
  423f49:	add    ah,bh
  423f4b:	enter  0xf94f,0x9d
  423f4f:	aad    0x14
  423f51:	inc    esi
  423f52:	imul   esi,DWORD PTR [eax+edi*8-0x53],0xffffffe0
  423f57:	clc    
  423f58:	and    DWORD PTR [ebx+0x31fbc91c],0x14
  423f5f:	sti    
  423f60:	scas   eax,DWORD PTR es:[edi]
  423f61:	jbe    0x423f0e
  423f63:	or     eax,0xd5f03553
  423f68:	sti    
  423f69:	fwait
  423f6a:	stos   DWORD PTR es:[edi],eax
  423f6b:	cli    
  423f6c:	aas    
  423f6d:	xchg   BYTE PTR [eax-0x24],dh
  423f70:	or     ecx,DWORD PTR [edx]
  423f72:	inc    edi
  423f73:	leave  
  423f74:	sti    
  423f75:	test   eax,0xa10842ef
  423f7a:	shr    ecx,cl
  423f7c:	push   ecx
  423f7d:	cdq    
  423f7e:	jge    0x423f6d
  423f80:	adc    BYTE PTR [esi+0x6b],al
  423f83:	outs   dx,BYTE PTR ds:[esi]
  423f84:	inc    ebp
  423f85:	(bad)  
  423f86:	jg     0x423f54
  423f88:	jne    0x423f1c
  423f8a:	ror    eax,cl
  423f8c:	adc    eax,0x4d9a52
  423f91:	pop    edi
  423f92:	enterw 0xfb,0x69
  423f97:	inc    ebx
  423f98:	mov    eax,ds:0x49425940
  423f9d:	or     eax,0x7fe8bebb
  423fa2:	xlat   BYTE PTR ds:[ebx]
  423fa3:	inc    ecx
  423fa4:	jecxz  0x423fa9
  423fa6:	add    DWORD PTR [esi],eax
  423fa8:	idiv   DWORD PTR [ebx+ecx*8-0x5e]
  423fac:	jl     0x423fee
  423fae:	pop    edx
  423faf:	sub    BYTE PTR [esi],bl
  423fb1:	mov    al,0xff
  423fb3:	cmc    
  423fb4:	xchg   BYTE PTR [ebx+eax*8-0x4e],bh
  423fb8:	jl     0x423ffa
  423fba:	sub    BYTE PTR es:[esi],ah
  423fbd:	lods   al,BYTE PTR ds:[esi]
  423fbe:	inc    ebp
  423fbf:	push   es
  423fc0:	pop    ebx
  423fc1:	add    al,0x86
  423fc3:	inc    edx
  423fc4:	jecxz  0x424042
  423fc6:	ret    
  423fc7:	mov    dh,0x76
  423fc9:	inc    eax
  423fca:	and    dl,BYTE PTR [ebx]
  423fcc:	jo     0x423fde
  423fce:	pop    edx
  423fcf:	mov    edx,0x1dff0424
  423fd4:	dec    ebx
  423fd5:	jl     0x424022
  423fd7:	scas   al,BYTE PTR es:[edi]
  423fd8:	push   0xa3516df0
  423fdd:	add    eax,DWORD PTR [esi]
  423fdf:	(bad)  
  423fe0:	pop    esp
  423fe1:	add    al,0x9
  423fe3:	ds pop ds
  423fe5:	repnz mov DWORD PTR [edx-0x52],eax
  423fe9:	dec    eax
  423fea:	adc    eax,DWORD PTR [esi]
  423fec:	daa    
  423fed:	xor    ecx,DWORD PTR [ebx]
  423fef:	push   es
  423ff0:	rdpmc  
  423ff2:	lods   eax,DWORD PTR ds:[esi]
  423ff3:	push   ebp
  423ff4:	out    dx,eax
  423ff5:	out    dx,eax
  423ff6:	imul   eax,DWORD PTR [edx+0x5e],0xe71b00c3
  423ffd:	mov    eax,0xf38e73c6
  424002:	inc    ebx
  424003:	xchg   cl,cl
  424005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424006:	iret   
  424007:	dec    edi
  424008:	sbb    eax,0x398b5017
  42400d:	mov    ss,ebx
  42400f:	repnz dec esp
  424011:	or     bl,BYTE PTR [edx-0x11060ab8]
  424017:	mov    ecx,0x71e6586e
  42401c:	mov    ebx,0xc382291a
  424021:	inc    edi
  424022:	loope  0x423fba
  424024:	int    0x3f
  424026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424027:	sub    dl,BYTE PTR [edi+ebp*8-0x3a]
  42402b:	dec    ebx
  42402c:	or     esp,DWORD PTR [eax+ebp*8-0x23]
  424030:	lds    ecx,FWORD PTR [edx]
  424032:	jmp    0xddb9b7bc
  424037:	lods   eax,DWORD PTR ds:[esi]
  424038:	sbb    eax,0x39f3a68e
  42403d:	dec    edi
  42403e:	jge    0x424009
  424040:	push   ecx
  424041:	fs jmp 0x4240a7
  424044:	jmp    0xfcf1:0x4285ea18
  42404b:	stc    
  42404c:	ja     0x424065
  42404e:	inc    ebp
  42404f:	idiv   BYTE PTR [edx]
  424051:	or     ah,BYTE PTR [edx-0x4f]
  424054:	dec    edx
  424055:	fs call 0x52084dcb
  42405b:	ret    
  42405c:	jge    0x42404f
  42405e:	pop    esi
  42405f:	add    bl,al
  424061:	hlt    
  424062:	cmc    
  424063:	mov    edi,0xf9da54ca
  424068:	inc    ebp
  424069:	inc    edx
  42406a:	mov    al,ah
  42406c:	mov    dh,0x41
  42406e:	add    DWORD PTR [ebx+ebp*1+0x42],esp
  424072:	or     ch,cl
  424074:	jl     0x424093
  424076:	loop   0x42402c
  424078:	lods   eax,DWORD PTR ds:[esi]
  424079:	ret    0xfa4f
  42407c:	mov    WORD PTR ds:0x809995e6,ds
  424082:	inc    edi
  424083:	cli    
  424084:	test   BYTE PTR [eax],dl
  424086:	icebp  
  424087:	hlt    
  424088:	rcl    DWORD PTR [ecx+0x4a],1
  42408b:	add    BYTE PTR [edi-0x3],ch
  42408e:	inc    esi
  42408f:	hlt    
  424090:	inc    edi
  424091:	and    DWORD PTR [ecx],eax
  424093:	je     0x4240fe
  424095:	xor    esi,ebp
  424097:	jne    0x42401c
  424099:	jg     0x424112
  42409b:	call   0xc059c041
  4240a0:	pop    edi
  4240a1:	push   es
  4240a2:	or     cl,BYTE PTR [ebx-0x72bf895e]
  4240a8:	push   0xffffffb2
  4240aa:	loop   0x424045
  4240ac:	dec    ebx
  4240ad:	jg     0x4240a4
  4240af:	push   ebx
  4240b0:	xchg   ecx,eax
  4240b1:	sbb    al,0x16
  4240b3:	push   DWORD PTR [edx+0x7a]
  4240b6:	hlt    
  4240b7:	xlat   BYTE PTR ds:[ebx]
  4240b8:	fmul   DWORD PTR [eax]
  4240ba:	div    bh
  4240bc:	inc    edi
  4240bd:	imul   esi,DWORD PTR [ecx+0x46fd5140],0xffffffb8
  4240c4:	add    al,bh
  4240c6:	push   0x3e5f10c1
  4240cb:	xor    bl,BYTE PTR [ebp-0x24]
  4240ce:	or     DWORD PTR [ebx+edx*2],eax
  4240d1:	js     0x4240db
  4240d3:	out    0xff,al
  4240d5:	repnz popf 
  4240d7:	pop    esp
  4240d8:	call   edx
  4240da:	test   DWORD PTR [edx],ebx
  4240dc:	inc    eax
  4240dd:	out    dx,eax
  4240de:	xor    al,BYTE PTR [ecx+0x6a]
  4240e1:	call   0x674eb864
  4240e6:	and    BYTE PTR [esi+0x4f4d90ff],cl
  4240ec:	pushf  
  4240ed:	add    dh,BYTE PTR [ebp+0x67]
  4240f0:	add    al,0x11
  4240f2:	push   ds
  4240f3:	sbb    eax,0xf5459f03
  4240f8:	jne    0x4240c5
  4240fa:	jle    0x424113
  4240fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240fd:	mov    ds:0xe28b0a05,eax
  424102:	jge    0x42416b
  424104:	add    DWORD PTR [esi-0x612bc822],eax
  42410a:	xchg   ecx,ecx
  42410c:	sti    
  42410d:	sbb    esp,0x3da35c6
  424113:	dec    edx
  424114:	add    BYTE PTR [ecx-0x6a],dh
  424117:	pop    ecx
  424118:	adc    esi,eax
  42411a:	imul   edx,edx,0x42
  42411d:	pop    eax
  42411e:	es mov dl,0x4
  424121:	rol    BYTE PTR [edi+ebp*8],cl
  424124:	pop    esp
  424125:	bound  edx,QWORD PTR [esi]
  424127:	add    edi,DWORD PTR [ecx]
  424129:	add    BYTE PTR [ebx-0x2af5cd65],ch
  42412f:	xor    BYTE PTR [ebx],0xf0
  424132:	cmp    DWORD PTR [esi],ebp
  424134:	mov    edx,0xcd963152
  424139:	adc    dh,al
  42413b:	imul   ebx,DWORD PTR [eax-0x73],0xffffffd3
  42413f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424140:	add    ebx,0xfbb15f2e
  424146:	adc    DWORD PTR [ebp+0x1c],eax
  424149:	push   edx
  42414a:	sahf   
  42414b:	jo     0x424155
  42414d:	add    BYTE PTR [esi-0x6f3cc40],al
  424153:	lea    ebp,[ecx+0x14]
  424156:	inc    esi
  424157:	imul   ebx,DWORD PTR [edi],0x1
  42415a:	sti    
  42415b:	push   ebp
  42415c:	ret    0xc987
  42415f:	adc    ah,BYTE PTR [ebp-0x32e82609]
  424165:	jne    0x42412d
  424167:	mov    eax,0x7ae615cc
  42416c:	dec    ebp
  42416d:	add    BYTE PTR [eax+0x0],bl
  424170:	adc    edx,esp
  424172:	xchg   esi,eax
  424173:	stos   DWORD PTR es:[edi],eax
  424174:	or     eax,0x6d344b86
  424179:	pop    edx
  42417a:	dec    ebp
  42417b:	and    cl,al
  42417d:	or     al,0x86
  42417f:	inc    edx
  424180:	adc    DWORD PTR [ecx-0x6e],ecx
  424183:	dec    ecx
  424184:	xchg   edi,eax
  424185:	loop   0x4241d6
  424187:	pop    ss
  424188:	pop    es
  424189:	cmp    DWORD PTR [ebx+0xb39e3b],eax
  42418f:	cli    
  424190:	dec    eax
  424191:	xchg   esp,eax
  424192:	ret    0x72f3
  424195:	lock cmp BYTE PTR [edx+0x11],ah
  424199:	clc    
  42419a:	sbb    BYTE PTR [esi+0x53],al
  42419d:	mov    ds:0x36c5d103,eax
  4241a2:	enter  0x8001,0xdb
  4241a6:	pop    cx
  4241a8:	js     0x424182
  4241aa:	push   esi
  4241ab:	mov    ah,0x77
  4241ad:	push   esi
  4241ae:	adc    BYTE PTR ds:0xc6181b4e,bh
  4241b4:	inc    edx
  4241b5:	retw   
  4241b7:	mov    ebx,0x31606ba1
  4241bc:	ins    BYTE PTR es:[edi],dx
  4241bd:	mov    edi,DWORD PTR [ecx+0x4657228b]
  4241c3:	xchg   BYTE PTR [esi],bh
  4241c5:	xor    al,0x8f
  4241c7:	mov    dl,0x1e
  4241c9:	jmp    0x424224
  4241cb:	mov    ch,0xcb
  4241cd:	jmp    edi
  4241cf:	xchg   ebp,eax
  4241d0:	out    dx,al
  4241d1:	cmp    BYTE PTR [edx+edx*2+0xac271bd],ch
  4241d8:	sub    edi,0x48
  4241db:	add    edi,DWORD PTR [eax-0x9]
  4241de:	inc    esp
  4241df:	(bad)  ds:0x42997bc7
  4241e5:	push   eax
  4241e6:	sbb    BYTE PTR [esi+0x51],bl
  4241e9:	mov    ds:0x66730103,eax
  4241ee:	mov    ecx,0x620c273a
  4241f3:	add    BYTE PTR [edx+0x462e1ced],al
  4241f9:	(bad)  
  4241fb:	inc    ecx
  4241fc:	pop    ebx
  4241fd:	repz out dx,eax
  4241ff:	adc    BYTE PTR cs:0xbf8c7002,al
  424206:	dec    eax
  424207:	std    
  424208:	add    al,BYTE PTR [esi+eax*1]
  42420b:	xor    DWORD PTR [ebp-0x3b],0x48
  42420f:	fst    st(5)
  424211:	test   eax,0x996adcf1
  424217:	ja     0x424260
  424219:	jnp    0x4241a0
  42421b:	scas   eax,DWORD PTR es:[edi]
  42421c:	jge    0x4241a2
  42421e:	or     al,ch
  424220:	xor    BYTE PTR [edx+0x59],cl
  424223:	cmp    al,BYTE PTR [edi+0x4d]
  424226:	jmp    0xab37:0x5142c5f5
  42422d:	mov    eax,0x3cffe902
  424232:	sub    dl,BYTE PTR [ebp+0x170642c3]
  424238:	add    ebp,esi
  42423a:	and    eax,0xe25771e1
  42423f:	ret    
  424240:	push   cs
  424241:	jl     0x424234
  424243:	ins    DWORD PTR es:[edi],dx
  424244:	inc    edx
  424245:	out    dx,al
  424246:	adc    ebx,DWORD PTR [esi+0x2ab21b19]
  42424c:	cmp    BYTE PTR [ebx+0x17],0x1
  424250:	xchg   ebp,eax
  424251:	add    cl,BYTE PTR [edx]
  424253:	ins    BYTE PTR es:[edi],dx
  424254:	ret    0x3ed
  424257:	ret    0xb500
  42425a:	ds ja  0x424249
  42425d:	repnz mov dh,0x4a
  424260:	adc    BYTE PTR [ebx+0x760d767b],0x14
  424267:	icebp  
  424268:	hlt    
  424269:	dec    ebp
  42426a:	dec    esi
  42426b:	dec    edx
  42426c:	jmp    0xe944fad8
  424271:	pop    eax
  424272:	mov    edi,0x3f7900de
  424277:	sub    ch,BYTE PTR [esp+ebx*8+0x8560642]
  42427e:	(bad)  
  42427f:	outs   dx,DWORD PTR ds:[esi]
  424280:	or     bl,bl
  424282:	jns    0x42426d
  424284:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424285:	sub    eax,DWORD PTR [ebp+esi*8+0x243a5f84]
  42428c:	jmp    FWORD PTR [edx+0x6f43b216]
  424292:	adc    DWORD PTR [edi],0x68
  424295:	pop    esi
  424296:	add    cl,BYTE PTR [edx]
  424298:	mov    ebp,DWORD PTR [edi-0x43]
  42429b:	cld    
  42429c:	je     0x4242f1
  42429e:	ja     0x424313
  4242a0:	add    al,0xda
  4242a2:	pop    edx
  4242a3:	cld    
  4242a4:	inc    ebp
  4242a5:	pop    edi
  4242a6:	xor    BYTE PTR [esi+0x9],0x30
  4242aa:	sub    eax,0x9e4afefe
  4242af:	sbb    al,BYTE PTR [eax+0x2f]
  4242b2:	(bad)  
  4242b3:	dec    esp
  4242b4:	or     cl,ch
  4242b6:	dec    ebx
  4242b7:	or     ebp,ebx
  4242b9:	and    al,BYTE PTR [ebx-0xfffef89]
  4242bf:	sub    al,0xfe
  4242c1:	push   esi
  4242c2:	lock dec esp
  4242c4:	inc    edx
  4242c5:	adc    eax,0x5e553e6f
  4242ca:	push   edx
  4242cb:	jl     0x4242cb
  4242cd:	(bad)  
  4242ce:	jmp    0xacee6d0f
  4242d3:	ds push es
  4242d5:	push   esi
  4242d6:	je     0x424305
  4242d8:	es or  bl,bh
  4242db:	imul   ebp,ecx,0x4f
  4242de:	pop    ebx
  4242df:	xor    ebp,0xffffff84
  4242e2:	das    
  4242e3:	ud0    edi,DWORD PTR cs:[edx-0x1e]
  4242e8:	mov    cl,0x43
  4242ea:	fild   WORD PTR [edx+0x7a866817]
  4242f0:	dec    ebp
  4242f1:	add    BYTE PTR [ebx],cl
  4242f3:	sub    al,0x39
  4242f5:	or     eax,0x7509bb7d
  4242fa:	jle    0x424319
  4242fc:	or     eax,0x5abfd01
  424301:	out    0x89,eax
  424303:	int    0xca
  424305:	adc    eax,0x4d77ae
  42430a:	xor    BYTE PTR [ecx],ch
  42430c:	or     DWORD PTR [eax],eax
  42430e:	nop
  42430f:	in     ax,dx
  424311:	stos   DWORD PTR es:[edi],eax
  424312:	lds    ebp,FWORD PTR [ebx+0x9]
  424315:	push   edx
  424316:	or     eax,0xfa07e8f7
  42431b:	jge    0x4242c2
  42431d:	adc    BYTE PTR [edx],al
  42431f:	ins    DWORD PTR es:[edi],dx
  424320:	mov    cl,0x84
  424322:	add    BYTE PTR [esi-0x11],al
  424325:	psubq  mm2,QWORD PTR [ebx-0x79c09201]
  42432c:	xchg   esp,eax
  42432d:	adc    ebp,DWORD PTR [eax+0x77]
  424330:	sub    eax,DWORD PTR [esi]
  424332:	test   DWORD PTR [esi+0xf],eax
  424335:	sbb    esi,DWORD PTR [edi]
  424337:	mov    dh,0x67
  424339:	xor    cl,BYTE PTR [eax]
  42433b:	dec    eax
  42433c:	imul   eax,DWORD PTR [esi],0xffffff87
  42433f:	(bad)  
  424340:	arpl   WORD PTR [ebx+eax*1-0x33ec5b48],sp
  424347:	jb     0x424374
  424349:	push   es
  42434a:	pop    edx
  42434b:	inc    esp
  42434c:	pop    edi
  42434d:	or     eax,0x618b83f2
  424352:	aas    
  424353:	xchg   BYTE PTR [edi+0x57],bl
  424356:	xchg   DWORD PTR [edx-0x79],esi
  424359:	add    DWORD PTR [ebp+eiz*4-0x2d],esi
  42435d:	xlat   BYTE PTR ds:[ebx]
  42435e:	jg     0x424348
  424360:	jmp    0x4242e3
  424362:	rcr    BYTE PTR [edx-0x6f],0xb0
  424366:	xor    eax,0x43ab423a
  42436b:	xchg   BYTE PTR [ebp-0xa],dh
  42436e:	sub    esi,DWORD PTR [edi+0x2]
  424371:	jecxz  0x4242fb
  424373:	(bad)  
  424374:	in     eax,dx
  424375:	in     al,dx
  424376:	cli    
  424377:	sub    DWORD PTR [edx-0x52],ecx
  42437a:	or     BYTE PTR [ecx-0x7e],ah
  42437d:	mov    ds:0x380c81aa,eax
  424382:	cmp    BYTE PTR [edx+0x46],ch
  424385:	and    BYTE PTR [ecx],bl
  424387:	add    BYTE PTR [esi+0x4f],al
  42438a:	mov    ds:0xfb802c03,eax
  42438f:	add    esi,DWORD PTR [ebx]
  424391:	leave  
  424392:	pop    es
  424393:	mov    dh,0x8b
  424395:	and    ch,BYTE PTR [edi]
  424397:	inc    ebx
  424398:	xchg   BYTE PTR [esi],bh
  42439a:	xchg   esp,eax
  42439b:	mov    dl,bl
  42439d:	dec    edx
  42439e:	cdq    
  42439f:	aaa    
  4243a0:	(bad)  [edx+0x69]
  4243a3:	sbb    DWORD PTR [esp+esi*2+0x67],0xffffffc4
  4243a8:	rcr    ah,cl
  4243aa:	out    0xf8,eax
  4243ac:	lods   eax,DWORD PTR ds:[esi]
  4243ad:	mov    edx,0x4e4d0424
  4243b2:	dec    ebx
  4243b3:	adc    eax,0xb36c42c6
  4243b8:	add    ebp,DWORD PTR [ebp+0x2f]
  4243bb:	pop    eax
  4243bc:	jns    0x4243d2
  4243be:	out    0x38,eax
  4243c0:	mov    ebp,0x861036bf
  4243c5:	out    dx,al
  4243c6:	iret   
  4243c7:	sub    DWORD PTR [esi-0x3b],esi
  4243ca:	and    DWORD PTR [eax],edx
  4243cc:	mov    dh,0xc5
  4243ce:	adc    BYTE PTR es:[esi-0x3c87a96],dh
  4243d5:	jae    0x42443b
  4243d7:	inc    eax
  4243d8:	xchg   esi,eax
  4243d9:	inc    edx
  4243da:	out    dx,eax
  4243db:	lock push esp
  4243dd:	jae    0x4243d8
  4243df:	or     ebp,ebp
  4243e1:	dec    ebp
  4243e2:	or     ah,BYTE PTR [ebp+0x30a0275]
  4243e8:	xor    BYTE PTR [edi+0x78],0xf1
  4243ec:	add    ah,bh
  4243ee:	jp     0x424454
  4243f0:	cmc    
  4243f1:	xor    al,0x77
  4243f3:	pop    ss
  4243f4:	xor    eax,0x560a0294
  4243f9:	fisttp QWORD PTR [ebx-0x36]
  4243fc:	sahf   
  4243fd:	lock lock add DWORD PTR [ecx+0x360e00fa],ebp
  424405:	jle    0x424399
  424407:	sbb    ch,BYTE PTR [ecx+0x293d1785]
  42440d:	inc    ebp
  42440e:	retf   0x1208
  424411:	jbe    0x42448a
  424413:	ja     0x42440e
  424415:	inc    eax
  424416:	in     eax,dx
  424417:	std    
  424418:	mov    ecx,0xdde64d38
  42441d:	lds    eax,FWORD PTR [edx+0x50]
  424420:	mov    ds:0xe8feb4e6,al
  424425:	mov    esi,0x81f7debb
  42442a:	and    bl,BYTE PTR [esi+0x5d3e8a2a]
  424430:	jb     0x4243db
  424432:	dec    edx
  424433:	pop    eax
  424434:	pop    ebp
  424435:	jp     0x4244a1
  424437:	cmc    
  424438:	imul   edi,eax,0x76
  42443b:	xchg   BYTE PTR [ecx-0xb0f2092],ch
  424441:	leave  
  424442:	mov    edx,0x4ce2e94d
  424447:	(bad)  
  424448:	fadd   st,st(5)
  42444a:	inc    edx
  42444b:	test   DWORD PTR [ecx+0x34767009],ebx
  424451:	add    BYTE PTR [edi],cl
  424453:	sbb    DWORD PTR [esi],eax
  424455:	sbb    al,0x5a
  424457:	ja     0x4244d1
  424459:	icebp  
  42445a:	cmp    dh,al
  42445c:	adc    eax,0x1a2c0800
  424461:	push   ecx
  424463:	inc    edx
  424464:	cmc    
  424465:	jne    0x424452
  424467:	mov    ch,0x17
  424469:	enter  0xfebf,0x9
  42446d:	sub    edx,0x4e
  424470:	or     dh,BYTE PTR [edx+edi*2+0xd]
  424474:	cmc    
  424475:	jbe    0x42441e
  424477:	mov    ch,0x17
  424479:	int3   
  42447a:	mov    edi,0x9f6a09fe
  42447f:	mov    ch,0x7c
  424481:	or     BYTE PTR [esi+esi*4],dh
  424484:	push   0x17b5fc14
  424489:	fdivr  QWORD PTR [esi+edi*8+0x5947f709]
  424490:	retf   0x6857
  424493:	sub    al,0x2
  424495:	inc    eax
  424496:	out    0x8,al
  424498:	push   cs
  424499:	push   DWORD PTR [edx-0x6a]
  42449c:	sbb    al,BYTE PTR [eax+0x5f]
  42449f:	punpckhbw mm0,QWORD PTR [edx]
  4244a2:	mov    eax,ds:0x84580b48
  4244a7:	inc    ecx
  4244a8:	cmc    
  4244a9:	jne    0x4244ea
  4244ab:	scas   eax,DWORD PTR es:[edi]
  4244ac:	ja     0x4244ba
  4244ae:	mov    WORD PTR [edi+0x653c017],gs
  4244b4:	or     bl,BYTE PTR [esi+0x0]
  4244b7:	je     0x4244ca
  4244b9:	mov    al,0xc
  4244bb:	das    
  4244bc:	sbb    DWORD PTR [ecx-0x75394b14],ecx
  4244c2:	add    DWORD PTR [edi],ebx
  4244c4:	inc    esi
  4244c5:	mov    ebp,esp
  4244c7:	dec    edi
  4244c8:	dec    edx
  4244c9:	or     al,BYTE PTR [eax]
  4244cb:	jl     0x4244e5
  4244cd:	xchg   eax,eax
  4244cf:	jae    0x42451b
  4244d1:	push   0x17af4f00
  4244d6:	adc    BYTE PTR [esi-0x44ffb294],al
  4244dc:	pop    ebp
  4244dd:	or     al,0x0
  4244df:	xchg   BYTE PTR [eax-0x77],bh
  4244e2:	xrelease xchg BYTE PTR [ebx+0xd],bl
  4244e6:	lea    eax,[ecx]
  4244e8:	js     0x4244f6
  4244ea:	add    BYTE PTR [esi+0x74e8b9e4],al
  4244f0:	xchg   ecx,eax
  4244f1:	scas   al,BYTE PTR es:[edi]
  4244f2:	sti    
  4244f3:	sti    
  4244f4:	(bad)  
  4244f5:	jmp    0x4244ed
  4244f7:	rcr    DWORD PTR [eax],0xa5
  4244fa:	dec    edx
  4244fb:	inc    DWORD PTR [eax]
  4244fd:	scas   al,BYTE PTR es:[edi]
  4244fe:	add    eax,0xd5b14
  424503:	sbb    al,0x97
  424505:	pop    ebp
  424506:	data16 xchg dh,ah
  424509:	aaa    
  42450a:	add    BYTE PTR ds:0xd8e8ae24,0x16
  424511:	scas   eax,DWORD PTR es:[edi]
  424512:	sti    
  424513:	add    ebx,DWORD PTR [edi+ebp*1]
  424516:	sbb    eax,0x685d210d
  42451b:	add    BYTE PTR [esi],al
  42451d:	das    
  42451e:	dec    edx
  42451f:	add    BYTE PTR [ebx],al
  424521:	ficomp WORD PTR [edi*8-0x17a38f97]
  424528:	dec    edi
  424529:	les    ecx,FWORD PTR ds:0xfe1b0300
  42452f:	xchg   esp,eax
  424530:	inc    esi
  424531:	ffreep st(5)
  424533:	jne    0x4245b4
  424535:	dec    esp
  424536:	(bad)  
  424537:	bound  ecx,QWORD PTR [edi]
  424539:	ficom  WORD PTR ds:0x6f8039fd
  42453f:	jmp    0x3d03:0x8d0d5b87
  424546:	mov    cl,0xfb
  424548:	and    DWORD PTR [ecx+0x22c60006],esp
  42454e:	cmp    edi,ecx
  424550:	mov    bh,0x42
  424552:	jbe    0x4244d5
  424554:	outs   dx,BYTE PTR ds:[esi]
  424555:	jno    0x4244e7
  424557:	mov    ebx,0x4d65da56
  42455c:	mov    ch,0x1b
  42455e:	mov    ebx,DWORD PTR [eax+0x6]
  424561:	jo     0x4244eb
  424563:	cs inc edx
  424565:	adc    BYTE PTR [ecx],bl
  424567:	mov    DWORD PTR [ebx-0x66],ecx
  42456a:	or     eax,0xd6713604
  42456f:	out    dx,eax
  424570:	ja     0x424574
  424572:	jecxz  0x4244fa
  424574:	ret    0x503d
  424577:	xor    edx,DWORD PTR [edx-0x42e3a141]
  42457d:	jo     0x4245bf
  42457f:	lea    eax,[eax]
  424581:	cmp    ebx,DWORD PTR [edx+0x70f6417a]
  424587:	(bad)  
  424588:	das    
  424589:	ja     0x42458d
  42458b:	jecxz  0x424515
  42458d:	inc    ebx
  42458e:	jb     0x424523
  424590:	mov    BYTE PTR [ebx-0x66],cl
  424593:	mov    bl,0x2d
  424595:	xchg   dl,bl
  424597:	sbb    cl,BYTE PTR [esi-0x7e99bd3a]
  42459d:	xchg   esi,eax
  42459e:	ins    DWORD PTR es:[edi],dx
  42459f:	add    BYTE PTR [ebx+0x2fd05ad6],bh
  4245a5:	ins    DWORD PTR es:[edi],dx
  4245a6:	jo     0x42460e
  4245a8:	(bad)  
  4245a9:	fild   DWORD PTR [esi-0x4b]
  4245ac:	ret    
  4245ad:	popa   
  4245ae:	xor    al,0x8d
  4245b0:	adc    eax,DWORD PTR [ebx]
  4245b2:	push   es
  4245b3:	rcl    DWORD PTR [ebx-0x47],cl
  4245b6:	pop    edx
  4245b7:	jmp    0x4bb281f2
  4245bc:	lods   al,BYTE PTR ds:[esi]
  4245bd:	cmp    DWORD PTR [eax-0x1d],esi
  4245c0:	mov    edx,0x10c83eb5
  4245c5:	xchg   esi,eax
  4245c6:	push   ebx
  4245c7:	and    eax,DWORD PTR [ebx+ecx*1]
  4245ca:	or     DWORD PTR [edx],0x3d
  4245cd:	jno    0x4245b7
  4245cf:	or     DWORD PTR [esi+0x19176d18],ebp
  4245d5:	jae    0x4245d9
  4245d7:	or     dh,BYTE PTR [edx+0x38]
  4245da:	pop    ebx
  4245db:	and    al,0x1c
  4245dd:	cmp    eax,0x75a2e56c
  4245e2:	inc    ecx
  4245e3:	push   eax
  4245e4:	and    al,BYTE PTR [eax]
  4245e6:	mov    ebx,0x297257af
  4245eb:	lock in eax,0x71
  4245ee:	add    BYTE PTR [edi+0x2a],bl
  4245f1:	pop    ss
  4245f2:	xor    eax,0x76660ae8
  4245f7:	outs   dx,BYTE PTR ds:[esi]
  4245f8:	sbb    ch,BYTE PTR [ecx-0x30eed7b]
  4245fe:	test   DWORD PTR [ecx+0x4a],edx
  424601:	jmp    0x81a87bf2
  424606:	inc    eax
  424607:	inc    edx
  424608:	test   esp,edi
  42460a:	rol    DWORD PTR [eax+0x4a],1
  42460d:	jmp    0xf4c7d9ee
  424612:	rcl    DWORD PTR [esi+0x4a],1
  424615:	jmp    0x29c94bf2
  42461a:	mov    cl,0xff
  42461c:	test   BYTE PTR [ebp-0x1bcac0a7],ch
  424622:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424623:	stos   BYTE PTR es:[edi],al
  424624:	dec    ebp
  424625:	jmp    0x7dcf7be0
  42462a:	inc    ecx
  42462b:	push   ebx
  42462c:	out    dx,al
  42462d:	jl     0x42469e
  42462f:	mov    ds:0x42c83162,al
  424634:	fs call 0xfd683c48
  42463a:	inc    eax
  42463b:	push   ebx
  42463c:	or     ebp,ecx
  42463e:	test   edx,ebx
  424640:	push   ecx
  424641:	xchg   ecx,eax
  424642:	retf   
  424643:	inc    edx
  424644:	loop   0x424646
  424646:	inc    ebp
  424647:	mov    cl,0xf5
  424649:	inc    DWORD PTR [eax]
  42464b:	xchg   esp,eax
  42464c:	inc    edi
  42464d:	bound  edi,QWORD PTR [eax-0x7e7db994]
  424653:	mov    eax,DWORD PTR [ebx+0xa]
  424656:	add    al,ah
  424658:	pop    esi
  424659:	ins    DWORD PTR es:[edi],dx
  42465a:	mov    eax,0xd7f546ac
  42465f:	test   DWORD PTR [esi+0x68],eax
  424662:	add    BYTE PTR [ebp-0x44bb8057],al
  424668:	dec    edx
  424669:	pop    edx
  42466a:	(bad)  
  42466b:	stc    
  42466c:	(bad)  
  42466d:	repnz (bad) 
  42466f:	fcmovu st,st(3)
  424671:	and    cl,cl
  424673:	push   0xffffff86
  424675:	push   ebp
  424676:	cmovnp eax,DWORD PTR [esi+0x174a8b54]
  42467d:	mov    cl,0x55
  42467f:	and    al,0x9a
  424681:	mov    ebp,esp
  424683:	daa    
  424684:	inc    esi
  424685:	or     al,BYTE PTR [eax]
  424687:	or     DWORD PTR [edx],edx
  424689:	cmc    
  42468a:	jne    0x424623
  42468c:	mov    ebp,0xed54e8f2
  424691:	hlt    
  424692:	push   DWORD PTR [eax-0x2576360f]
  424698:	sahf   
  424699:	mov    ds:0x4bed7001,al
  42469e:	add    DWORD PTR [edi+0x42],ebp
  4246a1:	jg     0x4246e8
  4246a3:	xchg   edi,eax
  4246a4:	push   ss
  4246a5:	cmc    
  4246a6:	jne    0x42471f
  4246a8:	stos   DWORD PTR es:[edi],eax
  4246a9:	pop    ss
  4246aa:	in     al,0x3c
  4246ac:	add    cl,BYTE PTR [edx]
  4246ae:	test   DWORD PTR [eax],eax
  4246b0:	scas   eax,DWORD PTR es:[edi]
  4246b1:	xor    bl,BYTE PTR [esi]
  4246b3:	push   0x5d
  4246b5:	lds    ecx,FWORD PTR [ebp+0x50]
  4246b8:	(bad)  
  4246b9:	stos   DWORD PTR es:[edi],eax
  4246ba:	ja     0x4246b4
  4246bc:	mov    dl,0x2
  4246be:	cs push eax
  4246c0:	xchg   al,ah
  4246c2:	dec    ecx
  4246c3:	dec    esp
  4246c4:	add    ecx,DWORD PTR [edi]
  4246c6:	xor    eax,0xa58529fb
  4246cb:	pop    esi
  4246cc:	jmp    0xb334:0x38d0d5b
  4246d3:	sti    
  4246d4:	adc    DWORD PTR [esi+ebx*4-0x8],ecx
  4246d8:	in     al,0x5b
  4246da:	or     eax,0x9ecc4b88
  4246df:	add    al,0xc0
  4246e1:	push   ds
  4246e2:	mov    bl,0x0
  4246e4:	push   es
  4246e5:	aas    
  4246e6:	mov    bl,0x0
  4246e8:	std    
  4246e9:	scas   al,BYTE PTR es:[edi]
  4246ea:	and    DWORD PTR [ecx],edx
  4246ec:	inc    esi
  4246ed:	pop    ebx
  4246ee:	and    DWORD PTR [ecx-0x30],ecx
  4246f1:	push   ds
  4246f2:	mov    edx,0xb3185b10
  4246f7:	jae    0x424773
  4246f9:	in     al,0xda
  4246fb:	or     edi,ecx
  4246fd:	cwde   
  4246fe:	or     DWORD PTR [ebx],ecx
  424700:	icebp  
  424701:	mov    al,ds:0x6ba6c105
  424706:	inc    al
  424708:	jns    0x4246f6
  42470a:	std    
  42470b:	dec    edi
  42470c:	xchg   ecx,eax
  42470d:	hlt    
  42470e:	inc    ebp
  42470f:	add    al,0xc7
  424711:	sti    
  424712:	sbb    al,0x7
  424714:	add    bh,al
  424716:	retf   
  424717:	mov    dl,0x73
  424719:	jle    0x42473f
  42471b:	and    BYTE PTR [eax],cl
  42471d:	xor    DWORD PTR [esi-0x7],0x705bc613
  424724:	sar    dl,0x68
  424727:	pop    ds
  424728:	fs imul ebp,esp,0x8b7bfb08
  42472f:	push   ss
  424730:	inc    eax
  424731:	xchg   dh,bl
  424733:	int3   
  424734:	or     ecx,DWORD PTR [edx]
  424736:	sub    ecx,DWORD PTR ds:0xdb428600
  42473c:	mov    WORD PTR [ebx+0x6d],es
  42473f:	rol    BYTE PTR [eax-0x74bf09ba],1
  424745:	lds    edx,FWORD PTR [edx+0x4d]
  424748:	adc    al,0xb9
  42474a:	inc    edi
  42474b:	iret   
  42474c:	add    al,0x86
  42474e:	inc    edx
  42474f:	adc    ebp,DWORD PTR [edx+edx*4+0xdb7b8f3]
  424756:	cmc    
  424757:	into   
  424758:	mov    dh,0x34
  42475a:	ins    DWORD PTR es:[edi],dx
  42475b:	push   cs
  42475c:	or     al,0x68
  42475e:	outs   dx,BYTE PTR ds:[esi]
  42475f:	nop
  424760:	das    
  424761:	mov    gs,WORD PTR [ebp+0x50]
  424764:	mov    WORD PTR [edi-0x6c491cbe],es
  42476a:	xchg   edx,eax
  42476b:	aam    0x43
  42476d:	xchg   bh,al
  42476f:	mov    ds:0x8ada9e30,eax
  424774:	add    eax,DWORD PTR [esi+0x2f6042]
  42477a:	jp     0x4247e9
  42477c:	out    dx,al
  42477d:	adc    edx,DWORD PTR [ecx-0x397f1cfe]
  424783:	div    cl
  424785:	mov    al,BYTE PTR [ebp+0x52]
  424788:	arpl   WORD PTR [edx+eiz*2+0x43],di
  42478c:	jecxz  0x424791
  42478e:	xchg   edi,esi
  424790:	in     al,dx
  424791:	mov    DWORD PTR [ebx+0x6d],eax
  424794:	dec    esp
  424795:	pop    esp
  424796:	sub    BYTE PTR [edx+0x4e],al
  424799:	outs   dx,DWORD PTR ds:[esi]
  42479a:	or     al,BYTE PTR [ebx-0x1d]
  42479d:	add    edi,DWORD PTR [ebp+0x35]
  4247a0:	adc    BYTE PTR [ecx],dl
  4247a2:	not    BYTE PTR [ecx-0x5d]
  4247a5:	add    ebx,DWORD PTR [esi-0x1b]
  4247a8:	xchg   ebx,eax
  4247a9:	mov    dh,0x6d
  4247ab:	mov    eax,0x355079e
  4247b0:	mov    DWORD PTR [ebx],0xa90a4286
  4247b6:	xchg   esi,eax
  4247b7:	xor    eax,0x47426a5d
  4247bc:	pop    edx
  4247bd:	je     0x424785
  4247bf:	pop    dx
  4247c1:	ficom  WORD PTR [esi-0x75d6e9ce]
  4247c7:	in     al,0x7
  4247c9:	pop    esp
  4247ca:	(bad)  
  4247cb:	pop    dx
  4247cd:	(bad)  
  4247ce:	mov    al,0x16
  4247d0:	or     ebp,ecx
  4247d2:	test   DWORD PTR [edi+0x17],esp
  4247d5:	sub    DWORD PTR [esi+0x2],esi
  4247d8:	or     al,BYTE PTR [ebx-0x7f]
  4247db:	in     al,0x3
  4247dd:	je     0x4247df
  4247df:	inc    esi
  4247e0:	pop    dx
  4247e2:	sahf   
  4247e3:	push   0x85e90b16
  4247e8:	addr16 pop ss
  4247ea:	aad    0x79
  4247ec:	add    cl,BYTE PTR [edx]
  4247ee:	cmp    DWORD PTR [edx-0x384faff9],ecx
  4247f4:	cmp    cl,BYTE PTR [edx]
  4247f6:	sbb    al,0xfd
  4247f8:	pop    esi
  4247f9:	lea    eax,[ebp+0x5ddec0d]
  4247ff:	push   ebp
  424800:	adc    BYTE PTR [ebp+0x16010c5b],al
  424806:	mov    esi,0xe92e42f0
  42480b:	test   DWORD PTR [edx-0xf],eax
  42480e:	mov    edi,0x53eb991
  424813:	jb     0x424826
  424815:	icebp  
  424816:	fmul   QWORD PTR [ebp+0x6e94a4f]
  42481c:	add    DWORD PTR [ecx],0x6d
  42481f:	sbb    eax,DWORD PTR [edx+0xa]
  424822:	jmp    0x62584833
  424827:	mov    ebp,0x8528f926
  42482c:	inc    edx
  42482d:	or     al,BYTE PTR [eax]
  42482f:	das    
  424830:	sbb    eax,DWORD PTR [edi]
  424832:	(bad)  
  424833:	fldcw  WORD PTR [ebx-0x18]
  424836:	add    eax,0xc77075e4
  42483b:	inc    ebx
  42483c:	pushf  
  42483d:	retf   
  42483e:	add    BYTE PTR [edi],ch
  424840:	aas    
  424841:	sbb    dh,BYTE PTR [eax+eax*1+0x6d]
  424845:	mov    ecx,0xff33300f
  42484a:	or     DWORD PTR [edi-0x64],edx
  42484d:	xchg   BYTE PTR [esi],dl
  42484f:	push   eax
  424850:	call   0xc1b5:0x7f1c2602
  424857:	test   edi,ebx
  424859:	inc    esp
  42485a:	xchg   edi,eax
  42485b:	shl    BYTE PTR [ebx+0x742d7786],0x2c
  424862:	push   ss
  424863:	sub    DWORD PTR [edi],0x52
  424866:	pop    edx
  424867:	push   edx
  424869:	mov    bl,BYTE PTR ds:0xc9ebdf40
  42486f:	je     0x4248ee
  424871:	mov    ecx,0xc170144c
  424876:	retf   0x6f04
  424879:	ret    
  42487a:	inc    esi
  42487b:	and    al,0xbb
  42487d:	push   cs
  42487e:	cmc    
  42487f:	shl    DWORD PTR [edx],cl
  424881:	xchg   BYTE PTR ds:0xf0996f95,al
  424887:	xor    DWORD PTR [edi-0x3e],ebx
  42488a:	retf   0x9174
  42488d:	mov    ch,0x7c
  42488f:	adc    al,0x14
  424891:	ins    BYTE PTR es:[edi],dx
  424892:	hlt    
  424893:	je     0x424818
  424895:	push   esi
  424896:	mov    edi,ebx
  424898:	inc    edi
  424899:	cwde   
  42489a:	out    dx,eax
  42489b:	call   FWORD PTR [eax-0x47]
  42489e:	or     al,0xff
  4248a0:	and    ecx,DWORD PTR [edx-0x75dc76fb]
  4248a6:	sbb    eax,0x9986008b
  4248ab:	add    DWORD PTR [ecx-0x51a803e],ecx
  4248b1:	jnp    0x42491e
  4248b3:	sbb    al,BYTE PTR [eax-0x7a]
  4248b6:	faddp  st(5),st
  4248b8:	je     0x424937
  4248ba:	retf   
  4248bb:	mov    BYTE PTR [edx+eiz*4-0x71],al
  4248bf:	pop    ebp
  4248c0:	call   0xfbf8b596
  4248c5:	fldcw  WORD PTR [ecx]
  4248c7:	jbe    0x4248ca
  4248c9:	int    0xe4
  4248cb:	(bad)  
  4248cc:	pop    ebp
  4248cd:	inc    ebp
  4248ce:	das    
  4248cf:	sub    esp,0xffffffb7
  4248d2:	dec    esp
  4248d3:	mov    DWORD PTR [ebp+0x1a],eax
  4248d6:	dec    esp
  4248d7:	mov    DWORD PTR [ecx+0x7e],ebx
  4248da:	sbb    DWORD PTR [edi-0x33],0x9
  4248de:	cdq    
  4248df:	or     BYTE PTR [ebp-0x6e],0xf2
  4248e3:	or     edx,DWORD PTR [edi+0x3]
  4248e6:	pushf  
  4248e7:	and    BYTE PTR [esp+esi*4],al
  4248ea:	fwait
  4248eb:	mov    ds:0xb2370516,al
  4248f0:	add    DWORD PTR [eax+0x75],ebx
  4248f3:	mov    bh,BYTE PTR [ebp-0x72]
  4248f6:	lods   eax,DWORD PTR ds:[esi]
  4248f7:	cmp    al,BYTE PTR [edx*4-0x6b005d65]
  4248fe:	fwait
  4248ff:	dec    ebp
  424900:	xchg   DWORD PTR [ebx+0x6b],edx
  424903:	test   DWORD PTR [ecx],eax
  424905:	neg    BYTE PTR [edx-0x3c]
  424908:	mov    esi,0x87405b82
  42490d:	add    BYTE PTR [edx+0x5f890dc],bl
  424913:	adc    BYTE PTR [ecx],cl
  424915:	dec    edi
  424916:	xor    ah,dh
  424918:	mov    ebx,0x5d20353
  42491d:	data16 xchg ah,ah
  424920:	leave  
  424921:	mov    edx,edi
  424923:	inc    edx
  424924:	mov    edi,0x3c1f6e1b
  424929:	mov    ah,0x6d
  42492b:	mov    esi,0x69c22f23
  424930:	xchg   esp,eax
  424931:	dec    DWORD PTR [eax]
  424933:	in     eax,dx
  424934:	div    BYTE PTR [ecx+ebp*4-0x79d042a6]
  42493b:	inc    edx
  42493c:	pop    edi
  42493d:	ret    
  42493e:	rcl    BYTE PTR [ebx+0x6c],cl
  424941:	xor    BYTE PTR [edx-0x79c721a6],dl
  424947:	inc    edx
  424948:	test   eax,0xe2556a48
  42494d:	xchg   DWORD PTR [esi-0x11],eax
  424950:	in     eax,0xc9
  424952:	retf   0xd41e
  424955:	add    eax,DWORD PTR [ecx]
  424957:	add    eax,0x1a8e86df
  42495c:	jecxz  0x4249dc
  42495e:	adc    DWORD PTR [ecx],edi
  424960:	push   edi
  424961:	les    edx,FWORD PTR [esi+0x5a]
  424964:	or     eax,eax
  424966:	std    
  424967:	push   0x55aa3063
  42496c:	jecxz  0x4249a6
  42496e:	jnp    0x42492d
  424970:	pop    ss
  424971:	call   0xa207be76
  424976:	or     al,0x34
  424978:	pop    edx
  424979:	outs   dx,BYTE PTR ds:[esi]
  42497a:	into   
  42497b:	int3   
  42497c:	push   0x5a7e496c
  424981:	scas   eax,DWORD PTR es:[edi]
  424982:	xchg   edx,eax
  424983:	mov    ebp,0xf651c868
  424988:	inc    edx
  424989:	int3   
  42498a:	jle    0x424937
  42498c:	push   es
  42498d:	and    eax,0x99398608
  424992:	inc    ebp
  424993:	mov    dl,BYTE PTR [edx]
  424995:	pop    ebx
  424996:	fcmove st,st(3)
  424998:	push   0x1e427f30
  42499d:	or     ah,cl
  42499f:	or     al,BYTE PTR [ebx-0x7b]
  4249a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4249a3:	imul   edi,DWORD PTR [eax+ecx*8],0xca1782e9
  4249aa:	loopne 0x424936
  4249ac:	cmp    edx,DWORD PTR [edi+0xa374029]
  4249b2:	(bad)  
  4249b3:	into   
  4249b4:	push   ds
  4249b5:	push   es
  4249b6:	adc    DWORD PTR ds:0xd5fef1cd,ebx
  4249bc:	inc    ecx
  4249bd:	int3   
  4249be:	in     eax,dx
  4249bf:	test   DWORD PTR [ebx],edi
  4249c1:	mov    eax,0xe1e789a8
  4249c6:	jmp    0x5584803c
  4249cb:	mov    DWORD PTR [edi],edx
  4249cd:	retf   0x9daa
  4249d0:	dec    esi
  4249d1:	int3   
  4249d2:	mov    ecx,0xdab2a76d
  4249d7:	add    BYTE PTR [ebx-0x6d],al
  4249da:	jb     0x424986
  4249dc:	scas   al,BYTE PTR es:[edi]
  4249dd:	mov    edi,0x6ae16ade
  4249e2:	mov    edi,DWORD PTR [ebp-0x16f5c0e7]
  4249e8:	push   eax
  4249e9:	adc    al,0x59
  4249eb:	jb     0x424a0f
  4249ed:	cmp    al,0xb8
  4249ef:	cs jle 0x4249d9
  4249f2:	loope  0x4249dd
  4249f4:	(bad)  
  4249f5:	out    0x25,al
  4249f7:	loope  0x42498a
  4249f9:	dec    ebp
  4249fa:	inc    edx
  4249fb:	hlt    
  4249fc:	mov    bl,0x84
  4249fe:	inc    esi
  4249ff:	int    0xc9
  424a01:	dec    ecx
  424a02:	or     ch,cl
  424a04:	test   DWORD PTR [ebx+0x329e0d46],eax
  424a0a:	ja     0x4249f5
  424a0c:	test   DWORD PTR [edi+0x1a],ebx
  424a0f:	cs inc ecx
  424a11:	push   ds
  424a12:	(bad)  
  424a13:	hlt    
  424a14:	test   DWORD PTR [edx+0xa],eax
  424a17:	add    BYTE PTR [eax-0x1],ch
  424a1a:	and    eax,0xac5bf14
  424a1f:	add    BYTE PTR [eax-0x1],bl
  424a22:	and    eax,0xa436510
  424a27:	add    ah,dh
  424a29:	jmp    DWORD PTR ds:0x6a83160c
  424a2f:	jmp    0x674b:0x4483435f
  424a36:	mov    BYTE PTR [ebx+ecx*2+0x53],al
  424a3a:	arpl   ax,ax
  424a3c:	add    bh,bh
  424a3e:	les    ecx,FWORD PTR [edx]
  424a40:	add    dh,ah
  424a42:	jmp    DWORD PTR ds:0x7f82fc10
  424a48:	je     0x4249d5
  424a4a:	push   esi
  424a4b:	jmp    0xf5f66273
  424a50:	dec    ebx
  424a52:	pop    edx
  424a53:	sbb    eax,0xa4420e9
  424a58:	add    BYTE PTR [edx+0x6f1425fa],dl
  424a5e:	(bad)  
  424a5f:	lods   al,BYTE PTR ds:[esi]
  424a60:	sbb    al,0xd0
  424a62:	mov    al,0x87
  424a64:	sar    BYTE PTR [ebx-0x2e17be99],0x20
  424a6b:	hlt    
  424a6c:	call   FWORD PTR [edx+esi*1+0x26]
  424a70:	adc    al,0xdf
  424a72:	das    
  424a73:	or     BYTE PTR [eax-0xea7a9],bh
  424a79:	imul   BYTE PTR [edx+0xa]
  424a7c:	add    bh,bl
  424a7e:	ret    0x475
  424a81:	fild   WORD PTR [ecx-0x79]
  424a84:	sahf   
  424a85:	scas   eax,DWORD PTR es:[edi]
  424a86:	inc    edx
  424a87:	or     cl,BYTE PTR [ebp+0x32695ea3]
  424a8d:	inc    esp
  424a8e:	(bad)  
  424a8f:	cdq    
  424a90:	retf   
  424a91:	xchg   BYTE PTR [eax],dl
  424a93:	mov    ebx,0x6eae982f
  424a98:	ret    
  424a99:	scas   al,BYTE PTR es:[edi]
  424a9a:	shl    BYTE PTR [ebp-0x3a236e05],0x74
  424aa1:	add    BYTE PTR [esi-0x1c],ch
  424aa4:	inc    ecx
  424aa5:	and    al,0xfa
  424aa7:	jb     0x424ae6
  424aa9:	sub    BYTE PTR [ecx+0x4d84c6e4],cl
  424aaf:	push   ebp
  424ab0:	cdq    
  424ab1:	sar    BYTE PTR [ecx+0x5],0xc6
  424ab5:	push   eax
  424ab6:	outs   dx,BYTE PTR ds:[esi]
  424ab7:	sub    dh,BYTE PTR [eax+0x70c659fb]
  424abd:	jl     0x424a69
  424abf:	mov    bh,0x95
  424ac1:	enter  0x6d3c,0xba
  424ac5:	test   BYTE PTR [ebp-0x11],bl
  424ac8:	repz xchg dl,al
  424acb:	aaa    
  424acc:	or     ch,cl
  424ace:	cmc    
  424acf:	pop    ebx
  424ad0:	or     eax,0xe9cffb00
  424ad5:	xchg   DWORD PTR [ebx+ebx*2+0x3802c30d],eax
  424adc:	xchg   dh,bh
  424ade:	adc    DWORD PTR [ecx+eiz*4-0x7a],ebx
  424ae2:	(bad)  
  424ae3:	pop    ebx
  424ae4:	xchg   ebp,eax
  424ae5:	inc    ebx
  424ae6:	int    0x94
  424ae8:	mov    edx,0x779fb3fb
  424aed:	aas    
  424aee:	xchg   dh,dl
  424af0:	mov    BYTE PTR [edx+eax*1],ah
  424af3:	pop    edx
  424af4:	or     eax,0xe2200f00
  424af9:	aaa    
  424afa:	xor    dh,ch
  424afc:	dec    eax
  424afd:	and    al,0x46
  424aff:	and    al,0x91
  424b01:	mov    DWORD PTR [esi+0x5b],eax
  424b04:	pop    ebp
  424b05:	lea    eax,[eax]
  424b07:	cmp    bh,BYTE PTR [edi-0x3]
  424b0a:	mov    BYTE PTR [edx],bh
  424b0c:	inc    edx
  424b0d:	push   ebx
  424b0f:	test   eax,0xadb03ad4
  424b14:	mov    ebx,0xd865e7d7
  424b19:	loop   0x424b99
  424b1b:	ficomp DWORD PTR [esi]
  424b1d:	ja     0x424b24
  424b1f:	xchg   BYTE PTR [edx+0x7d],al
  424b22:	retf   
  424b23:	sahf   
  424b24:	(bad)  [eax+esi*4]
  424b27:	jge    0x424b82
  424b29:	xchg   edx,eax
  424b2a:	mov    al,0x93
  424b2c:	ss hlt 
  424b2e:	inc    ebx
  424b2f:	xchg   BYTE PTR [ecx+0x7b02fba0],bh
  424b35:	(bad)  
  424b36:	dec    DWORD PTR [eax]
  424b38:	xchg   edx,eax
  424b39:	int3   
  424b3a:	rol    BYTE PTR [edi],cl
  424b3c:	push   0x3fa44fe3
  424b41:	jns    0x424b47
  424b43:	(bad)  
  424b44:	cld    
  424b45:	jmp    0x8644:0x35667bb0
  424b4c:	mov    bh,0x1f
  424b4e:	call   0xe86a06e4
  424b53:	jno    0x424b2d
  424b55:	loope  0x424ad7
  424b57:	retf   0x231e
  424b5a:	push   esp
  424b5b:	or     ebp,esi
  424b5d:	(bad)  
  424b5e:	repz inc esp
  424b60:	inc    BYTE PTR [esi]
  424b62:	fadd   QWORD PTR [ebp-0x3bfbdc47]
  424b68:	std    
  424b69:	push   es
  424b6a:	loopne 0x424b6c
  424b6c:	stc    
  424b6d:	jnp    0x424b8e
  424b6f:	call   0x44bca215
  424b74:	xchg   BYTE PTR [edx-0x16],bl
  424b77:	mov    ebx,0xcc6d64dd
  424b7c:	add    esi,edi
  424b7e:	mov    esi,0xf68905ff
  424b83:	pop    es
  424b84:	add    esi,edi
  424b86:	or     ebp,ecx
  424b88:	xchg   ebp,eax
  424b89:	mov    ebp,0x128dc56e
  424b8e:	icebp  
  424b8f:	sbb    al,0xf6
  424b91:	xchg   ebx,eax
  424b92:	dec    ebp
  424b93:	jmp    0xfa5c9a70
  424b98:	inc    ebp
  424b99:	inc    edx
  424b9a:	das    
  424b9b:	jmp    0x424b1f
  424b9d:	inc    edx
  424b9e:	or     dh,dh
  424ba0:	or     DWORD PTR [eax+esi*8+0x46b6d93e],ebp
  424ba7:	or     eax,0xd4f112da
  424bac:	sbb    eax,0xc0e94a35
  424bb1:	or     BYTE PTR [ebp+0x72],dl
  424bb4:	pop    ds
  424bb5:	push   es
  424bb6:	int    0xbc
  424bb8:	fcom   QWORD PTR [esi+0x5b]
  424bbb:	mov    eax,0xe9f1de04
  424bc0:	mov    eax,0x96c0f113
  424bc5:	cmp    dh,BYTE PTR [esi-0x59]
  424bc8:	fstp   TBYTE PTR [ebx+0x2951137]
  424bce:	or     dh,BYTE PTR [eax+eax*1-0x42]
  424bd2:	push   0x5a
  424bd4:	ss pop es
  424bd6:	(bad)  
  424bd7:	in     eax,dx
  424bd8:	cmp    DWORD PTR [esp+eiz*2-0x10],edi
  424bdc:	push   esp
  424bdd:	sbb    ch,BYTE PTR [ecx-0x28]
  424be0:	ins    BYTE PTR es:[edi],dx
  424be1:	inc    ebp
  424be2:	out    dx,al
  424be3:	cmp    esi,DWORD PTR [edx-0x42]
  424be6:	push   0xffffff87
  424be8:	test   eax,0xa98d1bb9
  424bed:	xchg   esi,ebp
  424bef:	and    eax,0xefd69f91
  424bf4:	sahf   
  424bf5:	ins    BYTE PTR es:[edi],dx
  424bf6:	push   0xffffff87
  424bf8:	xchg   esi,eax
  424bf9:	cdq    
  424bfa:	dec    ebx
  424bfb:	jg     0x424c21
  424bfd:	(bad)  
  424bff:	lock add dl,dl
  424c02:	xchg   edi,eax
  424c03:	pop    ebp
  424c04:	push   0xffffffdd
  424c06:	xchg   esp,eax
  424c07:	ja     0x424c11
  424c09:	cmp    BYTE PTR [ebp+0x67b2c087],cl
  424c0f:	pop    esp
  424c10:	call   0x368f4e
  424c15:	mov    WORD PTR [ebx-0xb8f74ac],ss
  424c1b:	ret    0xa3c2
  424c1e:	aas    
  424c1f:	inc    ecx
  424c20:	push   edi
  424c21:	dec    eax
  424c22:	sub    esp,DWORD PTR [esi]
  424c24:	or     al,0x8d
  424c26:	js     0x424c0a
  424c28:	lea    edi,[eax-0x48740a6c]
  424c2e:	mov    edx,0xd5474f5
  424c33:	cmc    
  424c34:	je     0x424c36
  424c36:	inc    ebx
  424c37:	dec    ebx
  424c38:	loop   0x424cb7
  424c3a:	js     0x424bd0
  424c3c:	cmc    
  424c3d:	mov    edi,DWORD PTR [edi-0x46]
  424c40:	cld    
  424c41:	je     0x424c76
  424c43:	or     eax,0xef32ff5d
  424c48:	(bad)  
  424c49:	aas    
  424c4a:	das    
  424c4b:	mov    edx,0x952d75ca
  424c50:	mov    cl,0x56
  424c52:	push   edi
  424c53:	and    ebx,DWORD PTR [esi-0x2]
  424c56:	dec    eax
  424c57:	or     eax,0x94cb47e2
  424c5c:	cmc    
  424c5d:	pop    esi
  424c5e:	push   0xdd5bb0e8
  424c63:	gs icebp 
  424c65:	(bad)  
  424c66:	push   ebx
  424c67:	pop    edx
  424c68:	or     eax,0x1732e2ff
  424c6d:	inc    eax
  424c6e:	out    dx,eax
  424c6f:	push   cs
  424c70:	loop   0x424c1d
  424c72:	sub    BYTE PTR [ebp+0x2b1f84f5],dl
  424c78:	add    al,0xff
  424c7a:	xchg   BYTE PTR [ebp-0x1e],al
  424c7d:	add    ebx,ecx
  424c7f:	ins    DWORD PTR es:[edi],dx
  424c80:	sbb    eax,0x88594615
  424c85:	rcl    BYTE PTR [edx+0x58],0xfa
  424c89:	mov    edi,0x29746
  424c8e:	push   ebx
  424c8f:	loopne 0x424c3a
  424c91:	jg     0x424c35
  424c93:	dec    esp
  424c94:	pop    ebx
  424c95:	push   edx
  424c96:	jne    0x424c98
  424c98:	push   edi
  424c99:	lea    eax,[eax]
  424c9b:	sbb    esi,ebp
  424c9d:	pop    ebp
  424c9e:	xchg   ebx,eax
  424c9f:	xchg   BYTE PTR [ecx+0xd],bl
  424ca2:	mov    BYTE PTR [ebx],dh
  424ca4:	cld    
  424ca5:	lea    esi,[edx]
  424ca7:	lds    esp,FWORD PTR [ebx]
  424ca9:	lahf   
  424caa:	mov    ebx,0x100d6b86
  424caf:	sar    DWORD PTR [edx+esi*2+0x1928d6c2],1
  424cb6:	inc    esp
  424cb7:	xchg   edx,eax
  424cb8:	stos   DWORD PTR es:[edi],eax
  424cb9:	or     eax,0xe333cb89
  424cbe:	mov    esi,0x535a58d3
  424cc3:	mov    ch,0xd4
  424cc5:	(bad)  
  424cc6:	push   eax
  424cc7:	dec    ecx
  424cc8:	ja     0x424ccf
  424cca:	adc    eax,0x45746bc6
  424ccf:	ds xchg ebp,eax
  424cd1:	retf   0xa0b
  424cd4:	ror    DWORD PTR ds:0x18808600,1
  424cda:	sbb    al,0x7b
  424cdc:	sub    eax,DWORD PTR [esi]
  424cde:	sti    
  424cdf:	xchg   ebx,eax
  424ce0:	jae    0x424d56
  424ce2:	inc    ebp
  424ce3:	sbb    dh,BYTE PTR [edi+ebx*1-0x5]
  424ce7:	or     DWORD PTR [ecx-0x106e3f77],esp
  424ced:	xchg   DWORD PTR [eax],eax
  424cef:	xchg   BYTE PTR [ebx+0x72],ch
  424cf2:	inc    ebp
  424cf3:	jle    0x424d37
  424cf5:	jp     0x424d3d
  424cf7:	jle    0x424d16
  424cf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424cfa:	ss nop
  424cfc:	iret   
  424cfd:	push   ds
  424cfe:	fadd   DWORD PTR [eax]
  424d00:	invd   
  424d02:	jmp    0x424d7c
  424d04:	(bad)  
  424d05:	call   0xd09b:0x4286036b
  424d0c:	add    BYTE PTR [edx+0x78],ah
  424d0f:	push   esp
  424d10:	dec    ecx
  424d11:	cmc    
  424d12:	pop    edi
  424d13:	ss jle 0x424d77
  424d16:	out    dx,al
  424d17:	call   DWORD PTR [ebp-0x69871cfe]
  424d1d:	sbb    eax,0xf5723654
  424d22:	mov    bh,0x50
  424d24:	inc    ecx
  424d25:	cmc    
  424d26:	inc    edi
  424d27:	ss jle 0x424d8b
  424d2a:	(bad)  
  424d2b:	call   FWORD PTR [edx+0x7678e302]
  424d31:	sbb    eax,0x61b43734
  424d36:	out    dx,al
  424d37:	dec    edi
  424d38:	xchg   edi,eax
  424d39:	add    ah,bl
  424d3b:	push   ebx
  424d3c:	pop    ebp
  424d3d:	aaa    
  424d3e:	not    DWORD PTR [edi]
  424d40:	mov    BYTE PTR [edx-0x47],0x53
  424d44:	pop    esi
  424d45:	jge    0x424d50
  424d47:	lods   al,BYTE PTR ds:[esi]
  424d48:	dec    ebp
  424d49:	(bad)  
  424d4a:	and    esi,DWORD PTR [esi]
  424d4c:	mov    eax,?
  424d4e:	not    DWORD PTR ds:0x3a33762
  424d54:	(bad)  
  424d55:	(bad)  
  424d56:	out    0x81,eax
  424d58:	inc    esi
  424d59:	(bad)  
  424d5a:	out    0xc1,al
  424d5c:	retf   
  424d5d:	popa   
  424d5e:	loop   0x424db1
  424d60:	sbb    eax,0x110337
  424d65:	mov    BYTE PTR [edx+0xb],0x49
  424d69:	or     eax,0x62ecddd7
  424d6e:	push   esi
  424d6f:	or     bh,BYTE PTR ds:0xb5775bfa
  424d75:	adc    dl,BYTE PTR [ebx-0x10]
  424d78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d79:	sbb    eax,0x2da1775d
  424d7e:	aaa    
  424d7f:	push   ss
  424d80:	cld    
  424d81:	inc    ebp
  424d82:	inc    edx
  424d83:	test   BYTE PTR [ebx*1+0xb224ffd],ah
  424d8a:	mov    al,ds:0xd5ece906
  424d8f:	and    eax,0x64561ded
  424d94:	outs   dx,DWORD PTR ds:[esi]
  424d95:	frstor [eax+0x44c9ddf1]
  424d9b:	loop   0x424d90
  424d9d:	sbb    BYTE PTR [ecx+esi*8+0x2a],0x37
  424da2:	leave  
  424da3:	fidivr WORD PTR [eax-0x6601f8f0]
  424da9:	aaa    
  424daa:	cmc    
  424dab:	arpl   dx,bp
  424dad:	sar    BYTE PTR [edi],1
  424daf:	int    0x6a
  424db1:	sbb    al,BYTE PTR [ebx+0x76]
  424db4:	jmp    FWORD PTR [ebp-0x664ed42a]
  424dba:	xor    al,0x85
  424dbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424dbd:	jne    0x424d84
  424dbf:	retf   0xd9e6
  424dc2:	inc    edx
  424dc3:	or     ebp,ecx
  424dc5:	test   DWORD PTR [ebx-0x7aff61f6],eax
  424dcb:	inc    edx
  424dcc:	or     dl,BYTE PTR [eax]
  424dce:	test   DWORD PTR [edx+0xa],0xee0644e9
  424dd5:	jmp    0xd30c905f
  424dda:	xchg   ebp,eax
  424ddb:	add    DWORD PTR [edi-0x23],0xffffff85
  424ddf:	inc    edx
  424de0:	or     ch,BYTE PTR [ecx]
  424de2:	stc    
  424de3:	inc    ebx
  424de4:	leave  
  424de5:	and    al,0xde
  424de7:	inc    edx
  424de8:	or     al,BYTE PTR [eax]
  424dea:	pop    ds
  424deb:	les    ecx,FWORD PTR [ecx+0x9edf345]
  424df1:	pop    es
  424df2:	out    dx,eax
  424df3:	inc    ebx
  424df4:	adc    edx,eax
  424df6:	jbe    0x424e3b
  424df8:	push   es
  424df9:	add    bh,bl
  424dfb:	jo     0x424dc7
  424dfd:	jg     0x424dca
  424dff:	das    
  424e00:	cmp    eax,0x21302f85
  424e05:	cmp    eax,0xa46df
  424e0a:	retf   
  424e0b:	xor    eax,0x43ad002f
  424e10:	or     dh,BYTE PTR [eax+esi*8+0x6a]
  424e14:	icebp  
  424e15:	add    bl,BYTE PTR [edi-0x2a5c88bd]
  424e1b:	inc    ebp
  424e1c:	jmp    0x58a20323
  424e21:	jmp    0x424dbd
  424e23:	push   0xfffffff1
  424e25:	add    al,0x9f
  424e27:	inc    ebx
  424e28:	jbe    0x424e35
  424e2a:	add    BYTE PTR [esi+0xc],0x0
  424e2e:	add    BYTE PTR [edi+0x2f],ch
  424e31:	sub    edi,DWORD PTR [ebx]
  424e33:	lods   eax,DWORD PTR ds:[esi]
  424e34:	adc    al,BYTE PTR [edx+0x68089433]
  424e3a:	or     BYTE PTR [eax-0xc],al
  424e3d:	loope  0x424e8a
  424e3f:	cmc    
  424e40:	test   al,0xf5
  424e42:	mov    edi,DWORD PTR [edi-0x3e]
  424e45:	cld    
  424e46:	jne    0x424e78
  424e48:	loopne 0x424e90
  424e4a:	adc    dl,bl
  424e4c:	xor    DWORD PTR [esi+0x7a],0xffffffb6
  424e50:	imul   ebp,eax,0x76
  424e53:	add    eax,0x5cae942
  424e58:	pop    edi
  424e59:	jmp    0xf5ef238d
  424e5e:	test   edi,ebp
  424e60:	adc    DWORD PTR [edi],eax
  424e62:	add    DWORD PTR [esi-0x7b185d9f],0x3c
  424e69:	mov    BYTE PTR [edi-0x1633aa45],0x85
  424e70:	jmp    0x6f515021
  424e75:	jne    0x424ec1
  424e77:	mov    ah,dh
  424e79:	lds    esi,FWORD PTR [ebp+0x7d]
  424e7c:	aam    0x30
  424e7e:	adc    BYTE PTR [ebx],cl
  424e80:	test   eax,0x710f413a
  424e85:	mov    ?,WORD PTR ds:0x5e95e
  424e8b:	xchg   BYTE PTR [eax+edx*1],bh
  424e8e:	inc    eax
  424e90:	push   ebp
  424e91:	test   eax,0x613300fb
  424e96:	xchg   ebp,eax
  424e97:	push   ss
  424e98:	aam    0xee
  424e9a:	mov    ds:0xf17cc684,al
  424e9f:	xchg   al,cl
  424ea1:	repz into 
  424ea3:	xchg   BYTE PTR [ebx],bl
  424ea5:	pop    ecx
  424ea6:	jo     0x424ea3
  424ea8:	sbb    ah,BYTE PTR [ecx-0x5e]
  424eab:	adc    eax,0x4d7a6e
  424eb0:	pcmpgtw mm5,QWORD PTR [esi+0x3a]
  424eb4:	add    edx,DWORD PTR ds:0x24fd0d3a
  424eba:	mov    ds,edi
  424ebc:	push   edi
  424ebd:	mov    es:0x15326e53,eax
  424ec3:	cli    
  424ec4:	pop    ecx
  424ec5:	sahf   
  424ec6:	xchg   ebp,eax
  424ec7:	in     al,0xdf
  424ec9:	dec    ebp
  424eca:	mov    ds:0x43453e7f,eax
  424ecf:	pop    edx
  424ed0:	fst    QWORD PTR [edx]
  424ed2:	enter  0x860c,0xee
  424ed6:	lds    esi,FWORD PTR [ecx+esi*2-0x18]
  424eda:	popf   
  424edb:	sti    
  424edc:	mov    dl,0x42
  424ede:	sub    eax,0xe726a285
  424ee3:	add    edx,DWORD PTR [edx+0x6a276411]
  424ee9:	dec    edx
  424eea:	jecxz  0x424f68
  424eec:	xchg   bh,bl
  424eee:	cld    
  424eef:	sbb    eax,0xdfd65d55
  424ef4:	mov    eax,DWORD PTR [edx]
  424ef6:	jecxz  0x424e94
  424ef8:	add    BYTE PTR [eax-0x7e1fc8a3],al
  424efe:	pop    ebp
  424eff:	pavgb  mm1,QWORD PTR [ecx-0x3779650e]
  424f06:	pop    esp
  424f07:	cwde   
  424f08:	jle    0x424ed0
  424f0a:	(bad)  
  424f0c:	jle    0x424ee2
  424f0e:	(bad)  
  424f0f:	into   
  424f10:	test   al,0x9b
  424f12:	cmp    dl,dl
  424f14:	inc    ebx
  424f15:	xchg   bl,cl
  424f17:	loope  0x424eb5
  424f19:	mov    bh,al
  424f1b:	jns    0x424f4c
  424f1d:	test   BYTE PTR [ebp+0x428650e1],al
  424f23:	jecxz  0x424ea9
  424f25:	into   
  424f26:	pop    ebp
  424f27:	and    eax,0x6bf691fb
  424f2c:	xchg   edi,eax
  424f2d:	cmp    esp,esi
  424f2f:	jnp    0x424ee4
  424f31:	mov    cl,0x79
  424f33:	or     al,0xb5
  424f35:	repnz or DWORD PTR [ecx+ebp*4+0x6d],esp
  424f3a:	(bad)  
  424f3b:	test   al,0xea
  424f3d:	retf   0x8f4a
  424f40:	inc    edx
  424f41:	sahf   
  424f42:	cld    
  424f43:	out    0x2f,al
  424f45:	or     ecx,0xf0501de1
  424f4b:	mov    bl,0x9b
  424f4d:	xchg   ebx,eax
  424f4e:	jo     0x424f59
  424f50:	test   al,0x9
  424f52:	adc    al,0x94
  424f54:	jbe    0x424f19
  424f56:	dec    edx
  424f57:	or     bl,BYTE PTR [ecx-0x1e88a62a]
  424f5d:	add    dh,bl
  424f5f:	psllw  mm7,mm4
  424f62:	sub    DWORD PTR [edi+0x4a],ecx
  424f65:	jmp    0xecb8d170
  424f6a:	and    bl,dh
  424f6c:	add    DWORD PTR [ebp+0x73],edx
  424f6f:	lds    esi,FWORD PTR [edi-0xb]
  424f72:	in     al,dx
  424f73:	imul   esi,DWORD PTR [esi-0x1e],0x20
  424f77:	aaa    
  424f78:	adc    bl,al
  424f7a:	inc    ebp
  424f7b:	inc    edx
  424f7c:	and    edi,0xc
  424f7f:	xor    eax,DWORD PTR [ebp-0x7ace0252]
  424f85:	and    al,0xde
  424f87:	adc    ecx,ebp
  424f89:	sbb    eax,0x360a7fd0
  424f8e:	add    BYTE PTR [edx+0xa],0x6a
  424f92:	add    bl,BYTE PTR [ecx+0x50]
  424f95:	and    cl,BYTE PTR [edi-0x64]
  424f98:	add    ch,cl
  424f9a:	push   esi
  424f9b:	(bad)
  424f9e:	push   ebx
  424f9f:	lock test BYTE PTR [eax+0x7],bl
  424fa3:	push   eax
  424fa4:	jbe    0x424f54
  424fa6:	add    al,0x58
  424fa8:	icebp  
  424fa9:	fisttp QWORD PTR [edi-0x23]
  424fac:	loope  0x424f97
  424fae:	pop    ecx
  424faf:	xor    al,BYTE PTR [edx-0x43]
  424fb2:	jge    0x424fb8
  424fb4:	ja     0x424fb4
  424fb6:	lahf   
  424fb7:	pop    esp
  424fb8:	pop    ecx
  424fb9:	inc    edx
  424fba:	jno    0x424fe9
  424fbc:	retf   0xca9
  424fbf:	pop    ebp
  424fc0:	cmp    al,0x29
  424fc2:	add    BYTE PTR [edx+0xaf147c3],bh
  424fc8:	or     eax,0x6450625a
  424fcd:	mov    dl,0x38
  424fcf:	and    BYTE PTR [eax-0x7a],bl
  424fd2:	add    BYTE PTR [edi+0x12],ch
  424fd5:	add    edi,edi
  424fd7:	icebp  
  424fd8:	fidiv  DWORD PTR [esi-0x8]
  424fdb:	xchg   DWORD PTR [esi],edi
  424fdd:	(bad)  
  424fdf:	sbb    ah,bl
  424fe1:	leave  
  424fe2:	je     0x425016
  424fe4:	fld    DWORD PTR [esi-0x8]
  424fe7:	xor    al,0x49
  424fe9:	xchg   edi,edi
  424feb:	mov    bl,0x32
  424fed:	cmc    
  424fee:	adc    eax,0x4a3717
  424ff3:	jbe    0x425051
  424ff5:	call   0x76e6b204
  424ffa:	push   es
  424ffb:	and    BYTE PTR [ebp+0x5c],bl
  424ffe:	add    bh,bl
  425000:	aas    
  425001:	jno    0x424fcb
  425003:	sub    BYTE PTR [esi],al
  425005:	ret    
  425006:	ret    0x3fe3
  425009:	xchg   esi,esi
  42500b:	jae    0x42506c
  42500d:	jo     0x42500d
  42500f:	clc    
  425010:	sub    edx,DWORD PTR [edi+edx*2]
  425013:	xor    al,0x65
  425015:	xchg   bh,bh
  425017:	mov    bl,0x5a
  425019:	mov    bh,al
  42501b:	pop    es
  42501c:	fcomp  st(1)
  42501e:	(bad)  
  42501f:	sbb    BYTE PTR [edx+eiz*8],cl
  425022:	(bad)  
  425023:	mov    bh,0xa5
  425025:	cmc    
  425026:	push   esi
  425027:	add    BYTE PTR [edi],dh
  425029:	fisub  WORD PTR [ecx-0x2]
  42502c:	cmp    BYTE PTR [eax-0x4f],dl
  42502f:	pop    edi
  425030:	pop    esp
  425031:	ret    0x74ca
  425034:	jno    0x424fd2
  425036:	or     dl,BYTE PTR [edi+0x6f]
  425039:	aas    
  42503a:	or     al,BYTE PTR [ebx+0x55b1a4a7]
  425040:	in     al,0xb3
  425042:	mov    ebp,esp
  425044:	push   edi
  425045:	inc    ecx
  425046:	or     al,BYTE PTR [eax]
  425048:	adc    al,bl
  42504a:	outs   dx,BYTE PTR ds:[esi]
  42504b:	sbb    BYTE PTR [esi+0x4bf889e6],al
  425051:	dec    esp
  425052:	test   al,0x50
  425054:	or     eax,0x68e7f5ae
  425059:	addr16 or eax,0xccedd100
  42505f:	je     0x424ff3
  425061:	ins    BYTE PTR es:[edi],dx
  425062:	and    DWORD PTR [ebx+edx*1],edx
  425065:	out    dx,al
  425066:	popf   
  425067:	std    
  425068:	sbb    DWORD PTR [edi+eiz*4+0x75],edi
  42506c:	sbb    BYTE PTR [ecx],0x8e
  42506f:	aaa    
  425070:	or     ecx,DWORD PTR [edi+eiz*4+0x30cfc5c9]
  425077:	adc    al,0x3
  425079:	test   eax,0x68c9023a
  42507e:	add    BYTE PTR ds:[esi-0x1e377597],al
  425085:	xchg   ecx,eax
  425086:	retf   
  425087:	xchg   DWORD PTR [edx-0x7b],eax
  42508a:	icebp  
  42508b:	push   ecx
  42508c:	add    cl,dl
  42508e:	cmp    al,0xea
  425090:	paddw  mm6,QWORD PTR [edx+ebp*8]
  425094:	pop    ss
  425095:	rcr    DWORD PTR [ecx+edx*8+0xf],0xae
  42509a:	sub    BYTE PTR [eax-0x34cd4e05],ch
  4250a0:	xchg   DWORD PTR [edx-0x7b],eax
  4250a3:	icebp  
  4250a4:	push   edx
  4250a5:	mov    eax,ds:0xd13d17c
  4250aa:	jge    0x42507d
  4250ac:	adc    edx,DWORD PTR [ecx-0x61f02e84]
  4250b2:	outs   dx,DWORD PTR ds:[esi]
  4250b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4250b4:	sti    
  4250b5:	and    DWORD PTR [ecx+0x3fc287ca],0x97fd51ee
  4250bf:	rol    DWORD PTR [edi],1
  4250c1:	pop    esi
  4250c2:	mov    ds:0x4361fba6,al
  4250c7:	leave  
  4250c8:	rol    BYTE PTR [ecx],0xff
  4250cb:	(bad)  
  4250cc:	test   DWORD PTR [eax],0xb4ffbf07
  4250d2:	pop    ecx
  4250d3:	xchg   edi,eax
  4250d4:	fisttp WORD PTR [ebp-0x6e207833]
  4250da:	push   0x22
  4250dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250dd:	sub    eax,0xd3c0985a
  4250e2:	int    0xef
  4250e4:	xor    BYTE PTR [edx],0x4b
  4250e7:	in     eax,0x3
  4250e9:	xchg   cl,dh
  4250eb:	jnp    0x425113
  4250ed:	jbe    0x4250b6
  4250ef:	pop    esi
  4250f0:	stos   DWORD PTR es:[edi],eax
  4250f1:	add    BYTE PTR [ebx],cl
  4250f3:	pop    edx
  4250f4:	rcl    BYTE PTR [ebx+0x9],0x0
  4250f8:	sti    
  4250f9:	fwait
  4250fa:	or     eax,0x4d03e344
  4250ff:	mov    esi,0xc7922fa3
  425104:	stos   WORD PTR es:[edi],ax
  425106:	jecxz  0x425161
  425108:	test   al,0x53
  42510a:	out    dx,al
  42510b:	enter  0xa5b4,0xcd
  42510f:	mov    esi,0x15822fa3
  425114:	mov    ds:0xbbc601ba,eax
  425119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42511a:	iret   
  42511b:	test   DWORD PTR [esi],edx
  42511d:	jns    0x4250c1
  42511f:	ret    
  425120:	xchg   DWORD PTR [ebx],edx
  425122:	test   al,0x59
  425124:	jecxz  0x425176
  425126:	xor    al,0xf1
  425128:	fadd   QWORD PTR [eax]
  42512a:	or     edx,eax
  42512c:	push   0x44
  42512e:	sub    bl,ah
  425130:	int3   
  425131:	sub    DWORD PTR [esi],ebp
  425133:	push   0xffffffa1
  425135:	adc    eax,DWORD PTR [esi-0x7b853ebe]
  42513b:	lds    ebp,FWORD PTR [ecx]
  42513d:	add    DWORD PTR [ebp+0x764409cf],edi
  425143:	cdq    
  425144:	push   0x855ca060
  425149:	lods   al,BYTE PTR ds:[esi]
  42514a:	jne    0x425175
  42514c:	aad    0x6a
  42514e:	popf   
  42514f:	or     ebx,DWORD PTR ds:[eax+ecx*2+0xe17ac0]
  425157:	push   ds
  425158:	pop    eax
  425159:	cmp    al,0xff
  42515b:	mov    bl,0xbf
  42515d:	cli    
  42515e:	cld    
  42515f:	in     eax,0x5c
  425161:	pop    edx
  425162:	add    DWORD PTR [esi+0x4d],edx
  425165:	or     ch,cl
  425167:	mov    ch,0xc7
  425169:	inc    edi
  42516a:	loope  0x4251be
  42516c:	ret    
  42516d:	enter  0x7e07,0x42
  425171:	or     bh,BYTE PTR [edi]
  425173:	in     eax,0x2e
  425175:	outs   dx,BYTE PTR ds:[esi]
  425176:	clc    
  425177:	inc    ebp
  425178:	inc    edx
  425179:	xchg   DWORD PTR [ecx+0x647ed29e],ebp
  42517f:	sbb    dl,BYTE PTR [edi-0xf]
  425182:	mov    dh,0xb2
  425184:	pop    ebp
  425185:	pop    ss
  425186:	push   ebp
  425187:	fstp   DWORD PTR [eax]
  425189:	or     dh,BYTE PTR [edx-0x36]
  42518c:	mov    BYTE PTR [edi-0xea2d867],0x60
  425193:	aaa    
  425194:	xor    dh,BYTE PTR ds:0x84ee9ea1
  42519a:	add    al,0x96
  42519c:	shl    DWORD PTR [edi-0xf],0x8
  4251a0:	test   eax,esi
  4251a2:	push   0xffffffbc
  4251a4:	push   edi
  4251a5:	jmp    0xf19e55b9
  4251aa:	push   0xfffffffa
  4251ac:	pop    esp
  4251ad:	jbe    0x4251ce
  4251af:	pop    ecx
  4251b0:	or     DWORD PTR [ecx-0x41],ebx
  4251b3:	push   ebp
  4251b4:	pop    ebp
  4251b5:	ja     0x4251b0
  4251b7:	mov    eax,0xf107
  4251bc:	pop    edx
  4251bd:	xor    al,0x0
  4251bf:	inc    eax
  4251c0:	pop    edi
  4251c1:	jns    0x425173
  4251c3:	jle    0x42514a
  4251c5:	ja     0x4251bf
  4251c7:	jle    0x42520a
  4251c9:	mov    bl,0xfe
  4251cb:	das    
  4251cc:	addr16 pop ss
  4251ce:	cmc    
  4251cf:	je     0x42523a
  4251d1:	jns    0x42519f
  4251d3:	jge    0x42522a
  4251d5:	int3   
  4251d6:	adc    ebp,DWORD PTR [edx+0x2d]
  4251d9:	sub    al,0xfe
  4251db:	mov    ch,bh
  4251dd:	inc    ebx
  4251de:	cmc    
  4251df:	jne    0x425218
  4251e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4251e2:	pop    ss
  4251e3:	xor    BYTE PTR [ecx+0x4],cl
  4251e6:	or     dh,BYTE PTR [ebx]
  4251e8:	outs   dx,DWORD PTR ds:[esi]
  4251e9:	mov    edi,0xa76f0cc6
  4251ee:	lock xor bl,bh
  4251f1:	add    al,0x54
  4251f3:	pop    ebx
  4251f4:	out    0x80,al
  4251f6:	and    eax,eax
  4251f8:	scas   eax,DWORD PTR es:[edi]
  4251f9:	jg     0x425252
  4251fb:	mov    edx,ebx
  4251fd:	rcr    dh,0x3c
  425200:	cdq    
  425201:	sbb    ecx,DWORD PTR [ecx-0xae32c83]
  425207:	jne    0x4251c0
  425209:	and    eax,0xa4ef6a0a
  42520e:	ja     0x425218
  425210:	imul   DWORD PTR [ebp-0xd]
  425213:	push   eax
  425215:	enter  0x83fa,0xeb
  425219:	dec    edi
  42521a:	xchg   dh,dh
  42521c:	mov    ebx,0xfe7114
  425221:	xor    BYTE PTR [edi],ch
  425223:	push   0x3fb2998b
  425228:	les    edi,FWORD PTR [esi-0x5d]
  42522b:	cmp    bh,bh
  42522d:	call   0xcaca:0x9f3fff5b
  425234:	jne    0x4251bc
  425236:	pop    esi
  425237:	add    BYTE PTR [ebp-0x62],0x1
  42523b:	mov    dl,0xfd
  42523d:	jns    0x42523f
  42523f:	mov    al,cl
  425241:	jno    0x425237
  425243:	aas    
  425244:	(bad)  
  425245:	ret    
  425246:	adc    DWORD PTR ds:0x3d31cb8d,edi
  42524c:	sti    
  42524d:	jae    0x425234
  42524f:	cmc    
  425250:	aas    
  425251:	xchg   dh,bl
  425253:	int3   
  425254:	je     0x4252cc
  425256:	xor    BYTE PTR [edx],dl
  425258:	adc    BYTE PTR [ebx],dl
  42525a:	sahf   
  42525b:	xchg   ebp,eax
  42525c:	sti    
  42525d:	mov    bl,0x4d
  42525f:	cmp    eax,0xf6c19bfb
  425264:	aas    
  425265:	xchg   ah,ah
  425267:	inc    ecx
  425268:	les    ecx,FWORD PTR ds:0x267ef9b6
  42526e:	dec    eax
  42526f:	and    al,0x89
  425271:	xchg   esp,ebp
  425273:	sub    al,BYTE PTR [edi+eax*4]
  425276:	test   BYTE PTR [eax],0x87
  425279:	and    DWORD PTR [ecx-0x62],0x8680b4fe
  425280:	jnp    0x42521c
  425282:	push   0x18
  425284:	or     BYTE PTR [eax],al
  425286:	jnp    0x425271
  425288:	add    eax,0x84ff8600
  42528d:	add    DWORD PTR ds:0xbf5a4ba7,ecx
  425293:	stos   DWORD PTR es:[edi],eax
  425294:	cmp    DWORD PTR [edi+0x8b9e9da],eax
  42529a:	test   BYTE PTR [ecx+0xd],ch
  42529d:	dec    edi
  42529e:	push   eax
  42529f:	aam    0xd8
  4252a1:	seta   BYTE PTR [ecx]
  4252a4:	push   es
  4252a5:	xchg   esi,ecx
  4252a7:	inc    eax
  4252a8:	test   BYTE PTR [esi-0x4c996ba],0xb0
  4252af:	inc    ecx
  4252b0:	pop    esi
  4252b1:	les    ebx,FWORD PTR [ebx]
  4252b3:	xor    BYTE PTR [ecx+ecx*2+0x7e],bh
  4252b7:	cmp    eax,0x428605f9
  4252bc:	mov    bl,0xa0
  4252be:	repz dec edx
  4252c0:	dec    eax
  4252c1:	test   DWORD PTR [ecx+0x3603a333],0xee404c44
  4252cb:	cs ins BYTE PTR es:[edi],dx
  4252cd:	inc    esp
  4252ce:	xchg   cl,dh
  4252d0:	daa    
  4252d1:	mov    edx,0xb96830b
  4252d6:	add    esi,edi
  4252d8:	jmp    0xa0c2:0xc2d4684
  4252df:	inc    eax
  4252e0:	fwait
  4252e1:	wbinvd 
  4252e3:	add    esp,ebx
  4252e5:	xor    al,0x2d
  4252e7:	xor    BYTE PTR [edi-0xb],ah
  4252ea:	add    BYTE PTR [ecx+0x42],ah
  4252ed:	les    dx,DWORD PTR [ebx-0x78f7a4f2]
  4252f4:	inc    edx
  4252f5:	jecxz  0x42527b
  4252f7:	leave  
  4252f8:	inc    eax
  4252f9:	xor    al,0x34
  4252fb:	adc    edx,DWORD PTR [eax+0x55fd9edb]
  425301:	fs retf 
  425303:	in     eax,dx
  425304:	push   0xffffffe2
  425306:	arpl   sp,bp
  425308:	push   ebp
  425309:	pop    esi
  42530a:	ret    
  42530b:	pop    esp
  42530c:	cmp    ch,BYTE PTR [ecx+ecx*8+0x36]
  425310:	leave  
  425311:	and    BYTE PTR [ebx+ecx*4],cl
  425314:	sbb    al,0xe7
  425316:	add    eax,DWORD PTR [esi-0x71e9680e]
  42531c:	push   0xfffffff7
  42531e:	inc    ecx
  42531f:	xchg   BYTE PTR [edx+0x5e],al
  425322:	ret    
  425323:	cmp    esp,DWORD PTR [eax-0x6b33c4b]
  425329:	or     DWORD PTR [eax+0x1a0a3ecb],esp
  42532f:	mov    bl,0x6c
  425331:	xor    eax,edi
  425333:	mov    DWORD PTR [ecx-0x79],ecx
  425336:	test   BYTE PTR [ebp+0x7dc10a42],al
  42533c:	mov    esp,0x2f26e94a
  425341:	push   edx
  425342:	fcmovnb st,st(5)
  425344:	inc    edx
  425345:	and    edi,0x4a
  425348:	xchg   esp,eax
  425349:	add    DWORD PTR [ebp-0x2b],ebp
  42534c:	inc    edx
  42534d:	or     ch,cl
  42534f:	add    BYTE PTR [ebp-0x7a16fd06],ch
  425355:	fadd   QWORD PTR [ecx]
  425357:	push   ds
  425358:	xor    BYTE PTR [ebp-0x5b],dh
  42535b:	stos   BYTE PTR es:[edi],al
  42535c:	test   DWORD PTR [ecx+0x17],ebx
  42535f:	in     eax,0x32
  425361:	adc    eax,0x4abf700a
  425366:	xor    eax,0x58e6912a
  42536b:	bound  eax,QWORD PTR [eax-0x67]
  42536e:	sbb    al,0xa9
  425370:	test   edx,ebp
  425372:	cmp    DWORD PTR [edx-0x36],esi
  425375:	inc    edx
  425376:	icebp  
  425377:	pop    ss
  425378:	jmp    0x9269d8ed
  42537d:	jmp    0x2883:0x4242622d
  425384:	jle    0x4253df
  425386:	cmp    BYTE PTR [esi-0x1ebf42cf],bh
  42538c:	lods   eax,DWORD PTR ds:[esi]
  42538d:	or     al,BYTE PTR [ebp+0x4bcb8229]
  425393:	icebp  
  425394:	lock psllw mm6,QWORD PTR [esi+0x10207fd]
  42539c:	cmp    BYTE PTR [ebp+0x30ae94a],0xfe
  4253a3:	dec    DWORD PTR [eax]
  4253a5:	ins    BYTE PTR es:[edi],dx
  4253a6:	hlt    
  4253a7:	xlat   BYTE PTR ds:[ebx]
  4253a8:	xor    al,0x4
  4253aa:	add    cl,BYTE PTR [ecx+0x46884e6e]
  4253b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253b1:	adc    esi,DWORD PTR [ebx]
  4253b3:	pop    eax
  4253b4:	add    BYTE PTR [ebx-0x38c6e2d4],ah
  4253ba:	dec    eax
  4253bb:	jbe    0x4253cf
  4253bd:	xchg   esi,eax
  4253be:	push   ss
  4253bf:	(bad)  
  4253c0:	jae    0x42541c
  4253c2:	ja     0x42541d
  4253c4:	adc    BYTE PTR [ebx],dh
  4253c6:	dec    eax
  4253c7:	and    eax,eax
  4253c9:	pop    ds
  4253ca:	(bad)  
  4253cb:	dec    esp
  4253cc:	add    al,0xf4
  4253ce:	sbb    BYTE PTR [edx-0x18],0x9d
  4253d2:	sub    dh,ah
  4253d4:	call   esi
  4253d6:	adc    al,0x2
  4253d8:	push   DWORD PTR [ecx]
  4253da:	mov    ch,0x17
  4253dc:	pop    esp
  4253dd:	cmp    eax,0x29890a00
  4253e2:	jb     0x425395
  4253e4:	pop    ebx
  4253e5:	pop    esp
  4253e6:	(bad)  
  4253e7:	dec    esp
  4253e8:	or     BYTE PTR [eax],dl
  4253ea:	dec    ebx
  4253eb:	sub    al,0x4
  4253ed:	das    
  4253ee:	inc    eax
  4253ef:	pop    edx
  4253f0:	mov    edi,0xa3f23
  4253f5:	push   eax
  4253f6:	mov    bl,0x17
  4253f8:	sbb    BYTE PTR [eax+eax*1],cl
  4253fb:	or     al,BYTE PTR [ebp+0x320d3b2f]
  425401:	das    
  425402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425403:	repnz add bh,bl
  425406:	aas    
  425407:	mov    DWORD PTR [esi-0x9],ecx
  42540a:	enter  0x2456,0xe7
  42540e:	or     al,0x8b
  425410:	ror    ecx,0x41
  425413:	or     al,BYTE PTR [eax]
  425415:	idiv   esi
  425417:	(bad)  
  425418:	inc    BYTE PTR [eax]
  42541a:	call   0x86b81ee9
  42541f:	mov    DWORD PTR [edx+ecx*2-0x4700e72],0x817f3cb1
  42542a:	jbe    0x425487
  42542c:	or     eax,0xfe1c0d00
  425431:	mov    BYTE PTR [edi],al
  425433:	mov    es,WORD PTR [edi]
  425435:	add    BYTE PTR [esi+0x350846d0],al
  42543b:	cmp    BYTE PTR [ebp+0x8311e89],dh
  425441:	add    BYTE PTR [esi-0xf7b920],al
  425447:	loopne 0x425419
  425449:	add    DWORD PTR [esi-0x71bd7b97],eax
  42544f:	loop   0x4254c5
  425451:	inc    eax
  425452:	sub    BYTE PTR [ecx+0xd],0x87
  425456:	enter  0xc851,0x80
  42545a:	ret    0xd5b
  42545d:	add    BYTE PTR [edi+0xd000d69],al
  425463:	fwait
  425464:	add    eax,0x7910e89
  425469:	add    BYTE PTR [esi+0x550846d0],al
  42546f:	and    ah,BYTE PTR [edi]
  425471:	mov    DWORD PTR [esi],ecx
  425473:	mov    ecx,0xd0860007
  425478:	inc    edi
  425479:	or     dh,bh
  42547b:	sar    BYTE PTR [edx+eax*1],0x0
  42547f:	xchg   BYTE PTR [ecx-0x7e],ch
  425482:	inc    edx
  425483:	mov    es,WORD PTR [ecx]
  425485:	cld    
  425486:	xchg   BYTE PTR [esi+0x69],al
  425489:	or     BYTE PTR [esi-0x7f],cl
  42548c:	imul   ecx,DWORD PTR ds:0x175e150,0x82694611
  425496:	inc    edx
  425497:	jle    0x4254db
  425499:	sbb    eax,0x7c325e01
  42549e:	inc    esp
  42549f:	xchg   BYTE PTR ds:0x42860c35,bh
  4254a5:	xor    ebx,DWORD PTR [ebp+0x43d22e9b]
  4254ab:	xchg   bh,al
  4254ad:	sub    DWORD PTR [esp+esi*1],ecx
  4254b0:	lds    ebp,FWORD PTR [ebx-0x2c]
  4254b3:	xchg   DWORD PTR [edx-0x1d],eax
  4254b6:	xor    bl,BYTE PTR [esi]
  4254b8:	xchg   BYTE PTR [eax],dl
  4254ba:	inc    edx
  4254bb:	xchg   dl,ch
  4254bd:	je     0x425494
  4254bf:	ret    
  4254c0:	inc    edx
  4254c1:	retf   
  4254c2:	sbb    DWORD PTR [ebp-0x17d41cfc],esi
  4254c8:	sbb    DWORD PTR [ebp-0x80b21fd],esp
  4254ce:	inc    ecx
  4254cf:	xchg   dl,bl
  4254d1:	cld    
  4254d2:	aam    0x9b
  4254d4:	inc    edx
  4254d5:	retf   
  4254d6:	nop
  4254d7:	xchg   esp,eax
  4254d8:	add    al,0xe3
  4254da:	sub    esi,DWORD PTR [ebp-0x51fc5aea]
  4254e0:	dec    esi
  4254e2:	inc    ecx
  4254e3:	add    BYTE PTR [esi-0x61f06e41],al
  4254e9:	fisttp WORD PTR [edi+0x44]
  4254ec:	xchg   bl,dh
  4254ee:	out    dx,eax
  4254ef:	xor    ecx,DWORD PTR [edx+0xf0ba9bd]
  4254f5:	inc    esp
  4254f6:	ins    BYTE PTR es:[edi],dx
  4254f7:	inc    esi
  4254f8:	jle    0x4254bf
  4254fa:	lahf   
  4254fb:	xlat   BYTE PTR ds:[ebx]
  4254fc:	pop    eax
  4254fd:	jnp    0x425529
  4254ff:	cld    
  425500:	pop    eax
  425501:	inc    ecx
  425502:	outs   dx,BYTE PTR ds:[esi]
  425503:	ret    
  425504:	pop    ebp
  425505:	test   bh,ah
  425507:	add    ecx,DWORD PTR [ecx]
  425509:	or     edi,ebx
  42550b:	dec    ebx
  42550c:	jb     0x425553
  42550e:	cmp    edx,DWORD PTR [edi]
  425510:	jp     0x4254cf
  425512:	or     ch,BYTE PTR [edi]
  425514:	mov    dl,cl
  425516:	xor    ecx,ebp
  425518:	jns    0x425558
  42551a:	icebp  
  42551b:	fldl2e 
  42551d:	repnz sbb DWORD PTR [edx+0x4b],esi
  425521:	cmp    cl,BYTE PTR [ebp-0x33147a37]
  425527:	xor    al,0xff
  425529:	pop    esi
  42552a:	lea    edx,[ebp+0x7e590179]
  425530:	js     0x425570
  425532:	icebp  
  425533:	fadd   QWORD PTR ds:0xfee94a41
  425539:	dec    edx
  42553a:	cmp    eax,0xf105f842
  42553f:	jo     0x425501
  425541:	push   esi
  425542:	xor    DWORD PTR [ecx+ebx*1+0xe9f00f],0xffffff85
  42554a:	inc    edx
  42554b:	add    DWORD PTR [esi-0xa],ebp
  42554e:	inc    edx
  42554f:	or     ch,cl
  425551:	push   cs
  425552:	cld    
  425553:	add    DWORD PTR [edx-0x70],esp
  425556:	cmp    ah,BYTE PTR [edx-0x1b]
  425559:	test   BYTE PTR [edx+0xa],al
  42555c:	push   0x44
  42555e:	xor    al,0xe2
  425560:	pop    ds
  425561:	mov    edi,0x456cf14c
  425566:	xlat   BYTE PTR ds:[ebx]
  425567:	ins    DWORD PTR es:[edi],dx
  425568:	mov    dh,0x12
  42556a:	xlat   BYTE PTR ds:[ebx]
  42556b:	std    
  42556c:	jae    0x42552e
  42556e:	push   esi
  42556f:	pop    edx
  425570:	adc    DWORD PTR [ebx-0x74],ebp
  425573:	icebp  
  425574:	test   BYTE PTR [eax],0x82
  425577:	jbe    0x4254fb
  425579:	add    al,0xcf
  42557b:	in     eax,dx
  42557c:	jmp    0x5b4c9803
  425581:	idiv   edi
  425583:	pop    eax
  425584:	(bad)  
  425585:	xchg   edi,eax
  425586:	ds pop ebp
  425588:	shl    DWORD PTR [ebp-0x3fff0f57],0xc0
  42558f:	repnz mov ebp,DWORD PTR [ecx-0x44a77dc2]
  425596:	lahf   
  425597:	or     BYTE PTR [ebx+0x7d893ea9],cl
  42559d:	jmp    0x425522
  42559f:	dec    edx
  4255a0:	adc    al,0xae
  4255a2:	outs   dx,DWORD PTR ds:[esi]
  4255a3:	clc    
  4255a4:	je     0x42556d
  4255a6:	mov    edi,0x4785084c
  4255ab:	bound  esp,QWORD PTR [esi+0xa06c700]
  4255b1:	push   0x49d592
  4255b6:	xchg   eax,ebp
  4255b8:	xor    DWORD PTR [edx-0x61],eax
  4255bb:	pop    ss
  4255bc:	pop    ebp
  4255bd:	push   0x4abf8b
  4255c2:	loopne 0x42563a
  4255c4:	hlt    
  4255c5:	push   eax
  4255c6:	addr16 leave 
  4255c8:	(bad)  
  4255c9:	and    dl,ch
  4255cb:	xchg   BYTE PTR ds:0x6e6f9c95,al
  4255d1:	hlt    
  4255d2:	sbb    eax,DWORD PTR [edx+0x5d]
  4255d5:	call   0x367e73
  4255da:	mov    al,ds:0x71e8f631
  4255df:	sub    ah,dh
  4255e1:	push   DWORD PTR [ebp-0x6ff51679]
  4255e7:	xor    esi,esi
  4255e9:	call   0x367e6b
  4255ee:	in     eax,dx
  4255ef:	adc    DWORD PTR [ebp+0x5b],0x56
  4255f3:	mov    BYTE PTR [edx],al
  4255f5:	add    dl,bh
  4255f7:	rcr    dh,0x8b
  4255fa:	jmp    0xa46:0x17ec8b47
  425601:	add    BYTE PTR [eax-0x79d33539],bh
  425607:	or     DWORD PTR [ebp-0x7611818b],edx
  42560d:	clc    
  42560e:	jmp    0x425598
  425610:	xchg   esp,eax
  425611:	push   eax
  425612:	add    BYTE PTR ds:0x3d26a583,cl
  425618:	pop    ecx
  425619:	or     eax,0xe915c685
  42561e:	xchg   BYTE PTR [ecx+0x55],al
  425621:	cmp    eax,DWORD PTR [edi-0x7b7d9ac7]
  425627:	inc    ebx
  425628:	mov    cl,0x92
  42562a:	sti    
  42562b:	mov    cl,0x9
  42562d:	add    DWORD PTR [ebp-0x46b3952],0x36
  425634:	mov    cl,0x98
  425636:	cli    
  425637:	cdq    
  425638:	fdiv   DWORD PTR [edx]
  42563a:	test   dh,al
  42563c:	push   ebp
  42563d:	or     bl,bh
  42563f:	inc    ecx
  425640:	push   ecx
  425641:	fdivr  DWORD PTR [edi+0x8c712e1]
  425647:	xchg   BYTE PTR [esi+0xd05ec80],cl
  42564d:	ror    DWORD PTR [esi-0x30],0x4c
  425651:	mov    al,0x66
  425653:	xchg   edx,eax
  425654:	fimul  WORD PTR [ecx-0x24]
  425657:	mov    ch,0xa9
  425659:	jle    0x4256b8
  42565b:	ss loop 0x42568f
  42565e:	aam    0xff
  425660:	test   DWORD PTR [ebp-0x48a6405],esi
  425666:	aas    
  425667:	xchg   ah,bl
  425669:	mov    al,0xc
  42566b:	add    esi,DWORD PTR [esi+0x31cb89bd]
  425671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425672:	ret    0x5022
  425675:	xchg   ebx,eax
  425676:	test   BYTE PTR [eax],al
  425678:	inc    esi
  425679:	push   0x59869a71
  42567e:	or     eax,0xfb4293fb
  425683:	stos   DWORD PTR es:[edi],eax
  425684:	imul   ecx,DWORD PTR [ebp-0x30],0xe8820299
  42568b:	jg     0x425689
  42568d:	inc    ecx
  42568e:	jecxz  0x425693
  425690:	add    edi,edx
  425692:	fiadd  WORD PTR [esi-0x3ee68db5]
  425698:	inc    ebx
  425699:	pop    esi
  42569a:	aas    
  42569b:	lea    eax,[esi+0x42]
  42569e:	push   0x3f
  4256a0:	(bad)  
  4256a1:	mov    eax,0x34bd9046
  4256a6:	arpl   si,si
  4256a8:	jns    0x4256ec
  4256aa:	push   0x3f
  4256ac:	scas   al,BYTE PTR es:[edi]
  4256ad:	or     ah,BYTE PTR [edx+edx*1+0x1863e87a]
  4256b4:	inc    esp
  4256b5:	push   eax
  4256b6:	movups xmm0,XMMWORD PTR [edx-0x71c095fe]
  4256bd:	dec    esi
  4256be:	clc    
  4256bf:	(bad)  
  4256c0:	cli    
  4256c1:	add    al,0x57
  4256c3:	lea    ecx,[ebp-0x44]
  4256c6:	call   0xe3324876
  4256cb:	add    ebp,DWORD PTR [edi-0x73eda911]
  4256d1:	mov    ecx,0xdfeebb9e
  4256d6:	push   edi
  4256d7:	inc    esp
  4256d8:	xchg   dl,bl
  4256da:	test   ah,bl
  4256dc:	add    BYTE PTR [ebx-0x69676bbe],dl
  4256e2:	dec    ebp
  4256e3:	mov    bl,0x7
  4256e5:	rol    DWORD PTR [esi+0x39c3c1f3],0xe2
  4256ec:	jle    0x425734
  4256ee:	fsub   st,st(3)
  4256f0:	mov    ecx,ebx
  4256f2:	cmp    DWORD PTR [esi+0xf],esi
  4256f5:	ss pop ebx
  4256f7:	fstp   DWORD PTR [ecx+0x620a4e1d]
  4256fd:	push   ecx
  4256fe:	jbe    0x425742
  425700:	jne    0x425684
  425702:	cli    
  425703:	jbe    0x4256f6
  425705:	push   ds
  425706:	fcom   st(1)
  425708:	ror    esp,1
  42570a:	jecxz  0x4256fb
  42570c:	(bad)  
  42570d:	int3   
  42570e:	out    dx,al
  42570f:	fst    DWORD PTR [ebp+0x7d]
  425712:	dec    ecx
  425713:	ja     0x4256ae
  425715:	(bad)  
  425716:	aaa    
  425717:	dec    esi
  425718:	fild   DWORD PTR [ebp+0x42]
  42571b:	test   BYTE PTR [ebx+eax*4],ch
  42571e:	and    ebx,DWORD PTR gs:[eax+edi*2+0x72]
  425723:	loop   0x4256b8
  425725:	sbb    BYTE PTR [edx-0xf],cl
  425728:	jb     0x4257a2
  42572a:	jbe    0x42576e
  42572c:	sbb    eax,0xe176fa8b
  425731:	push   cs
  425732:	fcom   st(1)
  425734:	xchg   ecx,eax
  425735:	sbb    bl,ah
  425737:	out    dx,eax
  425738:	jle    0x4256f6
  42573a:	out    dx,al
  42573b:	fscale 
  42573d:	jl     0x425788
  42573f:	ja     0x4256da
  425741:	add    dh,ch
  425743:	aaa    
  425744:	dec    esi
  425745:	sti    
  425746:	lds    eax,FWORD PTR [edx+0x3c]
  425749:	sub    DWORD PTR [edi+0x712bc2f5],edi
  42574f:	dec    ebp
  425750:	push   edi
  425751:	bound  edi,QWORD PTR [ecx+0x26]
  425754:	add    dh,BYTE PTR [edx-0x79]
  425757:	icebp  
  425758:	test   BYTE PTR [edi],ch
  42575a:	(bad)  
  42575b:	icebp  
  42575c:	add    eax,0x6d7456c
  425761:	push   0x3e
  425763:	dec    ecx
  425764:	in     eax,0xf7
  425766:	jae    0x4257b4
  425768:	inc    ecx
  425769:	adc    ebx,esp
  42576b:	xlat   BYTE PTR ds:[ebx]
  42576c:	out    dx,eax
  42576d:	push   ss
  42576e:	add    cl,BYTE PTR [edx-0x79]
  425771:	push   cs
  425772:	jns    0x4257a6
  425774:	loop   0x425776
  425776:	inc    ecx
  425777:	xor    esp,esi
  425779:	jmp    DWORD PTR [ebx-0x5bf8897f]
  42577f:	inc    ebx
  425780:	mov    esi,ecx
  425782:	sbb    BYTE PTR [eax],dl
  425784:	add    al,BYTE PTR [ebx+0xa76b4e8]
  42578a:	bound  esi,QWORD PTR [ebp-0x614ff98a]
  425790:	outs   dx,BYTE PTR ds:[esi]
  425791:	xchg   edx,eax
  425792:	fild   WORD PTR [eax-0x77]
  425795:	push   es
  425796:	xor    eax,0x18ce8947
  42579b:	push   esi
  42579c:	push   esp
  42579d:	xor    ebx,DWORD PTR [edi]
  42579f:	adc    al,0xb0
  4257a1:	add    al,0xdf
  4257a3:	adc    DWORD PTR [ecx+0x1d7e00ec],ecx
  4257a9:	mov    eax,edi
  4257ab:	and    bh,BYTE PTR [edi+esi*2-0x167f32fc]
  4257b2:	cmp    al,0x22
  4257b4:	mov    ch,0x76
  4257b6:	adc    al,0x75
  4257b8:	inc    esi
  4257b9:	pop    esp
  4257ba:	push   0x2f6b0c
  4257bf:	test   DWORD PTR [esi-0x1e],eax
  4257c2:	pop    ebp
  4257c3:	je     0x42580b
  4257c5:	or     cl,BYTE PTR [eax+0x13e9b532]
  4257cb:	xor    DWORD PTR [eax],ebx
  4257cd:	sar    DWORD PTR ds:0x68401d,1
  4257d3:	(bad)  
  4257d4:	ficom  WORD PTR [eax-0x1]
  4257d7:	enter  0xcac1,0xf
  4257db:	mov    dl,0x1
  4257dd:	cmc    
  4257de:	sbb    BYTE PTR [edx],0xb5
  4257e1:	or     dh,BYTE PTR [ebp+0x67]
  4257e4:	mov    ecx,0xb92e6a0c
  4257e9:	(bad)  
  4257ea:	(bad)  
  4257eb:	aas    
  4257ec:	mov    edx,0x9486ff47
  4257f1:	mov    esi,0xa1e0d3bf
  4257f6:	xor    DWORD PTR [edx],0x19ffeece
  4257fc:	test   eax,0xf03531f
  425801:	data16 std 
  425803:	or     DWORD PTR [ebp-0x5b],ebx
  425806:	xchg   esi,eax
  425807:	sub    BYTE PTR [ebp-0x68],ah
  42580a:	sti    
  42580b:	add    BYTE PTR [ebx+0x5d],dh
  42580e:	test   BYTE PTR [ebp-0x4],bh
  425811:	je     0x42582d
  425813:	or     BYTE PTR [edi],al
  425815:	jne    0x4257f3
  425817:	cwde   
  425818:	ja     0x42579e
  42581a:	jle    0x425899
  42581c:	shl    BYTE PTR [ecx-0x30],cl
  42581f:	pusha  
  425820:	rcl    BYTE PTR [esp+ebx*8-0x71d9002a],1
  425827:	aaa    
  425828:	lds    ebp,FWORD PTR ds:0x5d33fb28
  42582e:	cmp    eax,0x8c1c887
  425833:	test   eax,0x1423bca9
  425838:	adc    ebx,edi
  42583a:	cmp    bh,bl
  42583c:	cdq    
  42583d:	int3   
  42583e:	cmp    al,0x4f
  425840:	add    ecx,DWORD PTR [edi+0x55]
  425843:	jg     0x425803
  425845:	fsub   QWORD PTR [ebx+edx*8-0x7a681ce4]
  42584c:	inc    esi
  42584d:	imul   esi,edx,0xffffff86
  425850:	dec    eax
  425851:	mov    DWORD PTR ds:0xd981888,esp
  425857:	lea    ecx,[ebx]
  425859:	loope  0x4257ee
  42585b:	sti    
  42585c:	pop    ecx
  42585d:	test   eax,0x59aee6a5
  425862:	or     eax,0x7a6c4685
  425867:	sar    BYTE PTR [edx+eax*2+0x24],0x10
  42586c:	(bad)  
  42586d:	mov    db3,ebp
  425870:	add    bh,bh
  425872:	les    edi,FWORD PTR [ebx-0x66]
  425875:	sub    eax,0xfe804e4b
  42587a:	inc    esi
  42587b:	or     BYTE PTR [esi+0x73d64bb6],dl
  425881:	add    DWORD PTR [edx],0xbd8529e3
  425887:	jbe    0x42582c
  425889:	pop    esi
  42588a:	pop    edx
  42588b:	jnp    0x4258da
  42588d:	std    
  42588e:	dec    edx
  42588f:	jnp    0x4258c8
  425891:	mov    DWORD PTR [ebx+0x4287981e],eax
  425897:	jecxz  0x42589c
  425899:	jmp    0x87e8e2c4
  42589e:	inc    edx
  42589f:	jecxz  0x425827
  4258a1:	or     esp,DWORD PTR [edx-0x46326a4a]
  4258a7:	fild   DWORD PTR [ebx+0x4f]
  4258aa:	aad    0xac
  4258ac:	sar    cl,cl
  4258ae:	pop    eax
  4258af:	scas   al,BYTE PTR es:[edi]
  4258b0:	add    al,0x86
  4258b2:	inc    edx
  4258b3:	ins    BYTE PTR es:[edi],dx
  4258b4:	pop    ss
  4258b5:	mov    dl,0xf2
  4258b7:	jg     0x4258c8
  4258b9:	mov    ds:0x36a41ebc,al
  4258be:	fcom   st(6)
  4258c0:	cmp    BYTE PTR [ebx],al
  4258c2:	int    0x52
  4258c4:	lods   al,BYTE PTR ds:[esi]
  4258c5:	xchg   edi,eax
  4258c6:	sahf   
  4258c7:	popa   
  4258c8:	xchg   ebp,eax
  4258c9:	add    DWORD PTR [edi-0x9],edi
  4258cc:	cmp    BYTE PTR [esi+0x4a],0xe0
  4258d0:	jg     0x4258de
  4258d2:	inc    ebx
  4258d3:	jecxz  0x4258d8
  4258d5:	add    BYTE PTR [ecx],al
  4258d7:	xor    BYTE PTR [ebx+0x4cab0b86],0x95
  4258de:	pop    ebp
  4258df:	repz pop ebp
  4258e1:	jg     0x4258d9
  4258e3:	dec    ebx
  4258e4:	or     dh,BYTE PTR [esi]
  4258e6:	repz repnz loope 0x4258af
  4258ea:	jge    0x42592e
  4258ec:	or     ch,BYTE PTR [edx+eax*2+0x3e]
  4258f0:	xchg   BYTE PTR [ecx-0x76],ch
  4258f3:	inc    edx
  4258f4:	or     bl,dl
  4258f6:	out    dx,al
  4258f7:	stc    
  4258f8:	popa   
  4258f9:	imul   ecx,DWORD PTR [edx-0x7b6cf5be],0x85915cf9
  425903:	inc    edx
  425904:	or     ch,BYTE PTR [ecx]
  425906:	add    eax,eax
  425908:	call   0xe8e6:0x5a4e1af0
  42590f:	sbb    DWORD PTR [ecx+ebp*1],ebx
  425912:	mov    al,cl
  425914:	cli    
  425915:	push   0x13
  425917:	dec    esi
  425918:	ja     0x42590a
  42591a:	cli    
  42591b:	das    
  42591c:	adc    bl,al
  42591e:	inc    ebp
  42591f:	inc    edx
  425920:	(bad)  
  425921:	rcl    DWORD PTR [ebp-0x7749a631],0x46
  425928:	mov    ebp,DWORD PTR [esi+ebx*1]
  42592b:	pop    ebx
  42592c:	or     eax,0x85d885e9
  425931:	xchg   edx,eax
  425932:	inc    edi
  425933:	shr    DWORD PTR [edi-0x1b],0x76
  425937:	mov    bh,0x47
  425939:	lea    eax,[eax]
  42593b:	push   ebp
  42593c:	cmc    
  42593d:	lock cld 
  42593f:	std    
  425940:	hlt    
  425941:	lock aam 0xb9
  425944:	aaa    
  425945:	dec    edx
  425946:	jmp    0xe0b8db53
  42594b:	inc    ebx
  42594c:	inc    DWORD PTR [eax+ebp*8]
  42594f:	pop    esp
  425950:	(bad)  
  425951:	in     eax,dx
  425952:	aad    0x86
  425954:	mov    edx,0x4d9be24f
  425959:	pop    ss
  42595a:	std    
  42595b:	push   edi
  42595c:	or     DWORD PTR [edx],ecx
  42595e:	add    cl,bh
  425960:	lods   eax,DWORD PTR ds:[esi]
  425961:	pop    ss
  425962:	mov    al,ds:0x380a052d
  425967:	repnz cmp DWORD PTR [edi+0xc],esi
  42596b:	loop   0x425935
  42596d:	cdq    
  42596e:	stc    
  42596f:	pusha  
  425970:	scas   al,BYTE PTR es:[edi]
  425971:	pop    edx
  425972:	call   0x36d359
  425977:	nop
  425978:	cmp    dl,dh
  42597a:	call   0x36678c
  42597f:	(bad)  
  425980:	lahf   
  425981:	or     eax,DWORD PTR [eax]
  425983:	pop    ds
  425984:	rol    BYTE PTR [edi-0xa4aed60],0xc6
  42598b:	out    dx,eax
  42598c:	inc    esp
  42598d:	dec    edx
  42598e:	dec    ecx
  42598f:	pop    edx
  425990:	mov    bh,0x88
  425992:	inc    ebp
  425993:	hlt    
  425994:	adc    edx,DWORD PTR [ebx+ebx*2+0x26]
  425998:	add    BYTE PTR [edx],0x0
  42599b:	call   0x8db3:0x81ddc9
  4259a2:	add    al,BYTE PTR [eax]
  4259a4:	fisttp WORD PTR [edi]
  4259a6:	pop    esp
  4259a7:	push   edi
  4259a8:	(bad)  
  4259a9:	jmp    0x425940
  4259ab:	std    
  4259ac:	lock mov ah,0xe2
  4259af:	stc    
  4259b0:	dec    ebx
  4259b1:	mov    ch,0xf5
  4259b3:	push   0xffffffbb
  4259b5:	pop    ss
  4259b6:	inc    ecx
  4259b7:	lea    ebx,[edx]
  4259b9:	cld    
  4259ba:	hlt    
  4259bb:	call   DWORD PTR [eax]
  4259bd:	push   cs
  4259be:	push   0x9e2b1200
  4259c3:	adc    edi,0xffffffb4
  4259c6:	loop   0x425a26
  4259c8:	ss mov ah,0xf5
  4259cb:	test   DWORD PTR [edi],ebp
  4259cd:	xor    eax,0xea98b0f
  4259d2:	bound  ecx,QWORD PTR [eax-0x72f5ffff]
  4259d8:	xchg   dh,dl
  4259da:	mov    edi,esi
  4259dc:	popa   
  4259dd:	stc    
  4259de:	xor    eax,0xda8d7e8
  4259e3:	add    BYTE PTR [ebx],cl
  4259e5:	sbb    cl,BYTE PTR ds:0xc5d64695
  4259eb:	jne    0x42597c
  4259ed:	dec    esp
  4259ee:	int    0x62
  4259f0:	(bad)  
  4259f2:	mov    edi,esi
  4259f4:	xor    DWORD PTR [ecx],ebp
  4259f6:	mov    eax,DWORD PTR [ebp-0x462cb06]
  4259fc:	mov    dh,0x38
  4259fe:	repz (bad) 
  425a00:	jne    0x42599b
  425a02:	or     eax,0xc7d30087
  425a07:	fwait
  425a08:	sti    
  425a09:	or     esp,eax
  425a0b:	cmc    
  425a0c:	mov    WORD PTR [ebx+0x2d],?
  425a0f:	push   ds
  425a10:	call   0xfbdf01a4
  425a15:	pop    es
  425a16:	jno    0x4259f0
  425a18:	cwde   
  425a19:	xchg   edi,eax
  425a1a:	jo     0x425a50
  425a1c:	xchg   eax,ecx
  425a1e:	or     DWORD PTR [ebx+0x5f72027d],ecx
  425a24:	sahf   
  425a25:	ror    BYTE PTR [eax-0x6dfaa6e2],1
  425a2b:	pushf  
  425a2c:	or     ecx,DWORD PTR [edx]
  425a2e:	adc    DWORD PTR [edi],eax
  425a30:	add    BYTE PTR [esi+0x350c3d4],al
  425a36:	fbstp  TBYTE PTR [eax-0x9]
  425a39:	test   eax,0xb8d3db0
  425a3e:	fidivr WORD PTR [ebp-0x5]
  425a41:	cdq    
  425a42:	sub    DWORD PTR [esi+0xd59390a],ecx
  425a48:	test   esi,eax
  425a4a:	pusha  
  425a4b:	mov    DWORD PTR [ecx-0x79],ebx
  425a4e:	pop    ecx
  425a4f:	or     eax,0xf42038d
  425a54:	fwait
  425a55:	ins    DWORD PTR es:[edi],dx
  425a56:	inc    edi
  425a57:	mov    bl,0x80
  425a59:	add    edi,DWORD PTR [esi-0xda26da6]
  425a5f:	aas    
  425a60:	clc    
  425a61:	add    DWORD PTR [ecx],esi
  425a63:	mov    ds:0x36ddd103,eax
  425a68:	add    eax,DWORD PTR [eax]
  425a6a:	(bad)  
  425a6b:	cld    
  425a6c:	xor    al,BYTE PTR [esi-0x782fb8c2]
  425a72:	pushf  
  425a73:	inc    ecx
  425a74:	jecxz  0x425a79
  425a76:	mov    cl,0xf5
  425a78:	sub    dl,BYTE PTR [edx-0x657c4305]
  425a7e:	sbb    eax,0x380b347
  425a83:	mov    dh,0xc
  425a85:	xchg   edx,eax
  425a86:	or     eax,0x2885df2
  425a8b:	dec    ecx
  425a8c:	clc    
  425a8d:	xchg   ecx,eax
  425a8e:	push   esi
  425a8f:	pop    edx
  425a90:	daa    
  425a91:	cmp    DWORD PTR [esi+0x7dc45e42],eax
  425a97:	mov    esi,0x4286048e
  425a9c:	dec    ebx
  425a9d:	test   BYTE PTR [esi-0x26e21cbe],al
  425aa3:	fsub   st,st(3)
  425aa5:	sbb    eax,DWORD PTR [esi-0x47c1cbe]
  425aab:	mov    esp,0x46bd8b5f
  425ab0:	adc    edi,DWORD PTR [edi+0x43]
  425ab3:	dec    edx
  425ab4:	fwait
  425ab5:	aad    0xc7
  425ab7:	inc    edi
  425ab8:	nop
  425ab9:	mov    dh,al
  425abb:	ss pop edi
  425abd:	ins    BYTE PTR es:[edi],dx
  425abe:	xchg   BYTE PTR [edx-0x1d],al
  425ac1:	jle    0x425b06
  425ac3:	dec    edx
  425ac4:	adc    edi,DWORD PTR [edi+0x1b]
  425ac7:	pop    esi
  425ac8:	mov    ch,0xac
  425aca:	sahf   
  425acb:	les    ecx,FWORD PTR [ecx]
  425acd:	scas   eax,DWORD PTR es:[edi]
  425ace:	add    BYTE PTR [edx+ecx*2],dl
  425ad1:	xchg   BYTE PTR [ecx-0x237b1c62],ch
  425ad7:	sub    DWORD PTR [esi+0x5ac0f2c8],edi
  425add:	jbe    0x425a9d
  425adf:	or     cl,al
  425ae1:	loope  0x425acc
  425ae3:	jle    0x425ad8
  425ae5:	jnp    0x425ad8
  425ae7:	add    al,0x49
  425ae9:	or     ch,cl
  425aeb:	in     eax,0x42
  425aed:	jns    0x425a9d
  425aef:	rol    BYTE PTR [eax],0xc
  425af2:	fs inc edx
  425af4:	iret   
  425af5:	dec    ebx
  425af6:	adc    eax,eax
  425af8:	out    0xef,eax
  425afa:	push   ds
  425afb:	stos   DWORD PTR es:[edi],eax
  425afc:	dec    edx
  425afd:	xchg   DWORD PTR [esi],edx
  425aff:	jle    0x425b12
  425b01:	xchg   DWORD PTR [edi],edx
  425b03:	lea    esi,[edi]
  425b05:	fs sahf 
  425b07:	imul   BYTE PTR [edi]
  425b09:	es fcmovnb st,st(5)
  425b0c:	inc    edx
  425b0d:	lea    esp,[ecx]
  425b0f:	pop    ss
  425b10:	pop    esi
  425b11:	add    eax,0x47b7be97
  425b16:	loope  0x425acd
  425b18:	pop    edx
  425b19:	mov    cl,0xa7
  425b1b:	pop    ss
  425b1c:	dec    edx
  425b1d:	xor    eax,0x57e678af
  425b22:	ss pop ecx
  425b24:	mov    edi,0x49f6c496
  425b29:	loop   0x425b30
  425b2b:	pop    esp
  425b2c:	dec    ecx
  425b2d:	icebp  
  425b2e:	bound  ecx,QWORD PTR [eax+0x3a]
  425b31:	cmp    ecx,0x0
  425b34:	cmp    al,0xc7
  425b36:	cmc    
  425b37:	pop    edx
  425b38:	test   BYTE PTR [ecx+0x77],cl
  425b3b:	mov    eax,ds:0xfbaa3016
  425b40:	inc    ebp
  425b41:	inc    edx
  425b42:	lea    ebx,[edx+ecx*1]
  425b45:	dec    edx
  425b46:	xchg   BYTE PTR [eax],al
  425b48:	in     al,0x2d
  425b4a:	dec    BYTE PTR [edx+eiz*1-0x7000c43]
  425b51:	adc    edx,esp
  425b53:	jbe    0x425b7b
  425b55:	mov    bl,0xf5
  425b57:	sub    DWORD PTR [edx-0x53],0xa
  425b5b:	jne    0x425af2
  425b5d:	lds    eax,FWORD PTR [esi-0x8]
  425b60:	(bad)  
  425b61:	cmp    edi,eax
  425b63:	dec    al
  425b65:	les    eax,FWORD PTR [esi-0xa4d6fcc]
  425b6b:	push   eax
  425b6c:	mov    BYTE PTR [edx+edi*8],ch
  425b6f:	jmp    DWORD PTR [edx-0x2f]
  425b72:	sbb    al,BYTE PTR [eax+0x2f]
  425b75:	mov    esp,0xb4a20fca
  425b7a:	hlt    
  425b7b:	dec    DWORD PTR [eax-0x78a8e55a]
  425b81:	sbb    al,0x4f
  425b83:	dec    BYTE PTR [eax-0x1d725e5a]
  425b89:	mov    eax,0xb3624ee2
  425b8e:	cmc    
  425b8f:	inc    DWORD PTR [edx+0x5b15f5b1]
  425b95:	push   eax
  425b96:	xor    DWORD PTR [eax],eax
  425b98:	add    BYTE PTR [esi],ah
  425b9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b9b:	or     eax,DWORD PTR [eax]
  425b9d:	ffreep st(1)
  425b9f:	xchg   DWORD PTR [edx+edi*4-0x10390a4c],edx
  425ba6:	inc    eax
  425ba7:	dec    edx
  425ba8:	dec    ecx
  425ba9:	xchg   edx,eax
  425baa:	mov    bh,0x89
  425bac:	inc    ebp
  425bad:	adc    ebp,DWORD PTR [ecx+0x3ec9b916]
  425bb3:	or     al,BYTE PTR [eax]
  425bb5:	pop    edx
  425bb6:	mov    ebx,0xb4e8fd96
  425bbb:	int3   
  425bbc:	add    BYTE PTR [edi-0x798abd00],bl
  425bc2:	mov    dl,0xdd
  425bc4:	mov    edi,0xc9251539
  425bc9:	les    edx,FWORD PTR [esi+0xd]
  425bcc:	push   ebp
  425bcd:	std    
  425bce:	mov    dh,0x87
  425bd0:	in     al,dx
  425bd1:	call   0x7e27:0x5000d57
  425bd8:	sti    
  425bd9:	aad    0x83
  425bdb:	fcmovnbe st,st(6)
  425bdd:	fcomp  QWORD PTR [ebp-0x76]
  425be0:	test   DWORD PTR [edx-0x11],esi
  425be3:	cmp    bl,0xb6
  425be6:	hlt    
  425be7:	adc    cl,BYTE PTR [eax]
  425be9:	fcom   QWORD PTR [ebx+0x25]
  425bec:	call   0x4fb78e
  425bf1:	adc    edx,edi
  425bf3:	test   eax,0x361539fd
  425bf8:	sti    
  425bf9:	mov    ebx,0x75804d
  425bfe:	mov    ?,WORD PTR [ecx]
  425c00:	and    eax,0x74598655
  425c05:	lock add ebp,DWORD PTR [edx+edx*1]
  425c09:	aas    
  425c0a:	add    eax,0x95fffdbf
  425c0f:	imul   eax,DWORD PTR [eax+0x124c9675],0x896ef918
  425c19:	cmovbe ebx,DWORD PTR [ecx-0x7e]
  425c1d:	shl    BYTE PTR [edx+0x2d],0x81
  425c21:	jne    0x425c9d
  425c23:	fiadd  WORD PTR [ecx-0x8]
  425c26:	ins    BYTE PTR es:[edi],dx
  425c27:	pop    edx
  425c28:	adc    eax,DWORD PTR [eax]
  425c2a:	pop    esi
  425c2b:	pop    ecx
  425c2c:	or     eax,0x1284c600
  425c31:	sbb    BYTE PTR [esi-0x46053733],ch
  425c37:	(bad)  
  425c39:	jne    0x425bc8
  425c3b:	inc    edx
  425c3c:	test   al,0xf8
  425c3e:	xchg   ecx,eax
  425c3f:	xor    DWORD PTR [ebx],esp
  425c41:	add    al,0x21
  425c43:	dec    edx
  425c44:	xor    ebx,DWORD PTR [eax]
  425c46:	test   DWORD PTR ds:0x42860358,eax
  425c4c:	out    dx,al
  425c4d:	push   es
  425c4e:	mov    WORD PTR [edi+0x63],?
  425c51:	mov    ch,dl
  425c53:	shr    BYTE PTR [edx+edx*8+0x77],1
  425c57:	mov    ch,0x26
  425c59:	mov    WORD PTR [esi-0x40],ds
  425c5c:	pop    ds
  425c5d:	lea    ebp,[ebp-0x49]
  425c60:	sub    DWORD PTR ds:0x2579b900,ebp
  425c66:	neg    DWORD PTR [ecx-0x12]
  425c69:	imul   ebx,DWORD PTR [edi+0x3dcf1b7],0xe
  425c70:	ret    
  425c71:	or     al,0xfd
  425c73:	inc    ecx
  425c74:	pop    ebx
  425c75:	xchg   ebp,eax
  425c76:	or     BYTE PTR [esi+0x319b7a42],al
  425c7c:	inc    ebx
  425c7d:	jecxz  0x425cf9
  425c7f:	push   edi
  425c80:	dec    ebx
  425c81:	add    eax,0x8d4acb7c
  425c86:	add    eax,DWORD PTR [ecx]
  425c88:	sub    DWORD PTR [edx+0x38],0x8cd5a12
  425c8f:	xchg   BYTE PTR [edx-0x4c],al
  425c92:	mov    esp,0x18fafe01
  425c97:	xchg   BYTE PTR [edi],ch
  425c99:	mov    cs,WORD PTR [edi+0x400325e]
  425c9f:	xchg   cl,dh
  425ca1:	xor    bl,BYTE PTR [esp+edi*2-0x26fc1c7c]
  425ca8:	cmp    esi,esp
  425caa:	xor    al,0x8a
  425cac:	mov    ecx,0x3e347ae1
  425cb1:	mov    edx,0x9fe09c1
  425cb6:	or     eax,0x5460bb2
  425cbb:	mov    dl,0xcf
  425cbd:	sbb    bl,BYTE PTR [ebx]
  425cbf:	lods   al,BYTE PTR ds:[esi]
  425cc0:	mov    ebx,0xba1c546
  425cc5:	inc    esi
  425cc6:	int    0x0
  425cc8:	or     edi,0x1c5da06
  425cce:	in     eax,0xeb
  425cd0:	mov    dh,0x82
  425cd2:	int3   
  425cd3:	fld    DWORD PTR [ebp+0x7858597]
  425cd9:	das    
  425cda:	cmp    bl,BYTE PTR [edx]
  425cdc:	mov    eax,0x31ac7f95
  425ce1:	xchg   ebx,eax
  425ce2:	jg     0x425c88
  425ce4:	sub    DWORD PTR [ebx-0x6d065381],edx
  425cea:	test   DWORD PTR [ebp+ecx*2-0x15dab131],esp
  425cf1:	jb     0x425cbb
  425cf3:	aas    
  425cf4:	adc    eax,edi
  425cf6:	leave  
  425cf7:	out    0x1,al
  425cf9:	inc    eax
  425cfa:	or     ch,cl
  425cfc:	test   ecx,ecx
  425cfe:	inc    esi
  425cff:	cmc    
  425d00:	scas   al,BYTE PTR es:[edi]
  425d01:	pop    edx
  425d02:	test   DWORD PTR [ecx+0x62c8c989],esp
  425d08:	idiv   eax
  425d0a:	or     DWORD PTR [ecx+0x69b36ae9],ebp
  425d10:	add    DWORD PTR [edx+0xa],0x7c3248c0
  425d17:	rcl    DWORD PTR [edx+0x11743347],cl
  425d1d:	mov    cl,0x1d
  425d1f:	out    0x90,al
  425d21:	xor    cl,BYTE PTR ds:0xdeb812db
  425d27:	cli    
  425d28:	les    edx,FWORD PTR [edx+0x800c158]
  425d2e:	ds icebp 
  425d30:	add    al,al
  425d32:	(bad)  
  425d34:	xor    edi,ebp
  425d36:	leave  
  425d37:	leave  
  425d38:	(bad)  
  425d3a:	ror    BYTE PTR [edx],0x0
  425d3d:	lahf   
  425d3e:	mov    edx,0xd0c8bcd
  425d43:	inc    esi
  425d44:	call   0x5be89c6
  425d49:	mov    dh,0x58
  425d4b:	out    0x72,al
  425d4d:	mov    esi,cs
  425d4f:	jbe    0x425d39
  425d51:	pushf  
  425d52:	shl    esp,cl
  425d54:	jne    0x425d61
  425d56:	xor    cl,dl
  425d58:	push   eax
  425d59:	cdq    
  425d5a:	ficom  WORD PTR [ecx-0x1]
  425d5d:	loopne 0x425d2d
  425d5f:	call   0x8648ea66
  425d64:	sar    BYTE PTR [ebx],0x69
  425d67:	mov    edi,eax
  425d69:	in     al,0xd2
  425d6b:	xor    al,BYTE PTR [ebp-0x41]
  425d6e:	push   ebx
  425d6f:	sbb    BYTE PTR [edi+0x5a],dh
  425d72:	or     al,0x76
  425d74:	fdiv   st(5),st
  425d76:	xor    esp,esi
  425d78:	jne    0x425d49
  425d7a:	inc    edx
  425d7b:	loopne 0x425d7c
  425d7d:	cli    
  425d7e:	lock add cl,al
  425d81:	out    dx,eax
  425d82:	jbe    0x425d66
  425d84:	das    
  425d85:	or     dh,0xf4
  425d88:	jmp    0x425db7
  425d8a:	adc    esi,DWORD PTR [ecx+0x39595f84]
  425d90:	mov    eax,DWORD PTR [eax]
  425d92:	pop    eax
  425d93:	mov    edx,0xed2a39e1
  425d98:	pop    edi
  425d99:	sbb    bh,BYTE PTR [eax+0x48]
  425d9c:	xor    esi,DWORD PTR [ebp-0x65]
  425d9f:	push   ebx
  425da0:	add    edi,edi
  425da2:	dec    edx
  425da3:	out    dx,al
  425da4:	lock icebp 
  425da6:	rcl    BYTE PTR [edx-0x2a],0x13
  425daa:	xchg   dl,ch
  425dac:	xor    eax,0x8428de52
  425db1:	sti    
  425db2:	leave  
  425db3:	adc    ecx,DWORD PTR [eax]
  425db5:	cs (bad) 
  425db7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425db8:	(bad)  
  425db9:	je     0x425d4f
  425dbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425dbc:	dec    ebx
  425dbd:	adc    BYTE PTR [ebx],cl
  425dbf:	jmp    0x425dda
  425dc1:	add    eax,DWORD PTR ds:0x4e7f8433
  425dc7:	daa    
  425dc8:	test   BYTE PTR [eax-0x79293b79],dh
  425dce:	adc    ebx,DWORD PTR [edi]
  425dd0:	jb     0x425e47
  425dd2:	xchg   edx,eax
  425dd3:	sar    BYTE PTR [ebx-0x6],cl
  425dd6:	add    ecx,0x29967d89
  425ddc:	add    DWORD PTR [ecx],edx
  425dde:	fsub   QWORD PTR [ecx]
  425de0:	jo     0x425da4
  425de2:	(bad)  
  425de3:	test   al,0x1b
  425de5:	adc    BYTE PTR [ecx+0x37],ah
  425de8:	fst    QWORD PTR [ecx]
  425dea:	(bad)  
  425deb:	sub    DWORD PTR [eax+0x23a482c4],ecx
  425df1:	or     bl,bh
  425df3:	out    dx,al
  425df4:	adc    BYTE PTR [eax+0x0],0xd6
  425df8:	fnstcw WORD PTR [eax+ebp*8]
  425dfb:	js     0x425e6c
  425dfd:	test   bl,bh
  425dff:	ror    edi,1
  425e01:	pop    ds
  425e02:	leave  
  425e03:	inc    esp
  425e04:	ss or  eax,0x874e0d55
  425e0a:	in     al,dx
  425e0b:	jle    0x425e38
  425e0d:	or     eax,0x3bf7b500
  425e12:	sti    
  425e13:	xchg   ebx,eax
  425e14:	xor    eax,0x3ef28572
  425e19:	test   bl,bh
  425e1b:	stc    
  425e1c:	mov    esi,0xe5de4ff5
  425e21:	aaa    
  425e22:	add    BYTE PTR [esi+0xb937c42],al
  425e28:	cmp    eax,esp
  425e2a:	jg     0x425df1
  425e2c:	inc    edx
  425e2d:	jecxz  0x425e32
  425e2f:	fs ret 
  425e31:	add    BYTE PTR [edi*2-0x79fc7a3a],al
  425e38:	inc    edx
  425e39:	cmp    BYTE PTR fs:[edx+0xb8af43f],cl
  425e40:	inc    eax
  425e41:	ss cmc 
  425e43:	cli    
  425e44:	lds    edx,FWORD PTR [esi+0x333f9d88]
  425e4a:	mov    esi,DWORD PTR [ebx-0x36]
  425e4d:	repz inc ebx
  425e4f:	xchg   ch,al
  425e51:	mov    ds:0xe2fa830f,al
  425e56:	add    eax,DWORD PTR [esi+0x1e1344]
  425e5c:	jns    0x425e07
  425e5e:	loopne 0x425e7b
  425e60:	xchg   BYTE PTR [edx-0x1d],al
  425e63:	inc    ebx
  425e64:	sti    
  425e65:	les    edx,FWORD PTR [esi-0x78]
  425e68:	pop    ebp
  425e69:	aas    
  425e6a:	mov    bl,0x78
  425e6c:	ret    
  425e6d:	dec    esi
  425e6e:	dec    ebx
  425e6f:	jle    0x425e81
  425e71:	inc    eax
  425e72:	inc    eax
  425e73:	jg     0x425ebb
  425e75:	mov    dh,0xcb
  425e77:	js     0x425e44
  425e79:	ss xchg ebx,eax
  425e7b:	cmp    BYTE PTR ds:0xbb8b08b5,0x52
  425e82:	dec    esi
  425e83:	inc    eax
  425e84:	jp     0x425e18
  425e86:	sbb    esi,DWORD PTR [esp+ebx*1]
  425e89:	aas    
  425e8a:	adc    BYTE PTR [edi+0x46],bh
  425e8d:	mov    dh,0x83
  425e8f:	xchg   BYTE PTR [ebx+0x61100036],dl
  425e95:	ret    
  425e96:	test   DWORD PTR [ebx+0x32c6b4fd],ecx
  425e9c:	push   ebp
  425e9d:	int    0x9
  425e9f:	lods   al,BYTE PTR ds:[esi]
  425ea0:	add    DWORD PTR [edx+0x3bf174f1],edx
  425ea6:	pop    ss
  425ea7:	or     eax,ebx
  425ea9:	jle    0x425eb5
  425eab:	fs ret 0x1a26
  425eaf:	fs xchg ecx,eax
  425eb1:	ss pop edx
  425eb3:	cmp    DWORD PTR [edx+0x1df54ecd],edx
  425eb9:	mov    edi,0xc60fbfc7
  425ebe:	leave  
  425ebf:	cmp    eax,0x773bcf00
  425ec4:	(bad)  
  425ec6:	push   esp
  425ec7:	stos   BYTE PTR es:[edi],al
  425ec8:	sti    
  425ec9:	inc    ebp
  425eca:	inc    edx
  425ecb:	lea    ebp,[esi+ebx*4]
  425ece:	cmp    ebx,DWORD PTR [eax+0x2e]
  425ed1:	call   DWORD PTR [edx+ebx*4-0x6]
  425ed5:	inc    ebp
  425ed6:	inc    edx
  425ed7:	xchg   DWORD PTR [ecx+0x6a684496],ebp
  425edd:	dec    esp
  425ede:	add    BYTE PTR ds:[ecx+ebp*4+0x39],ch
  425ee3:	icebp  
  425ee4:	outs   dx,BYTE PTR ds:[esi]
  425ee5:	icebp  
  425ee6:	xchg   esi,edi
  425ee8:	push   eax
  425ee9:	mov    bh,ah
  425eeb:	out    dx,eax
  425eec:	pop    esi
  425eed:	mov    dl,0x43
  425eef:	in     eax,0xe3
  425ef1:	fadd   DWORD PTR [edi+0x3f640fe]
  425ef7:	lock inc esi
  425ef9:	pop    eax
  425efa:	(bad)  
  425efb:	push   eax
  425efc:	lahf   
  425efd:	push   0xb
  425eff:	int3   
  425f00:	in     eax,0x85
  425f02:	lds    eax,FWORD PTR [edx-0x2f]
  425f05:	stos   BYTE PTR es:[edi],al
  425f06:	inc    ebx
  425f07:	icebp  
  425f08:	stc    
  425f09:	cmp    cl,BYTE PTR [ebx]
  425f0b:	xchg   BYTE PTR [ecx],ch
  425f0d:	pop    ds
  425f0e:	xlat   BYTE PTR ds:[ebx]
  425f0f:	retf   0xc564
  425f12:	cmp    ebp,ecx
  425f14:	push   cs
  425f15:	jbe    0x425f7d
  425f17:	push   es
  425f18:	add    BYTE PTR [ecx+edi*2+0x12],dh
  425f1c:	mov    ebp,esi
  425f1e:	ja     0x425f15
  425f20:	push   eax
  425f21:	jecxz  0x425f39
  425f23:	ret    0x84
  425f26:	lahf   
  425f27:	cmp    edx,DWORD PTR [esi-0xa7fa53f]
  425f2d:	ret    0x41e3
  425f30:	cmc    
  425f31:	je     0x425eb6
  425f33:	inc    edx
  425f34:	mov    DWORD PTR [ecx-0x29],ecx
  425f37:	mov    esi,0x71c8520b
  425f3c:	add    dh,BYTE PTR [ebx]
  425f3e:	idiv   BYTE PTR [ebp+0x520fca]
  425f44:	jg     0x425f87
  425f46:	fadd   DWORD PTR [edi]
  425f48:	push   es
  425f49:	add    al,ch
  425f4b:	dec    ebp
  425f4c:	es add al,0x14
  425f4f:	js     0x425f63
  425f51:	mov    ebx,DWORD PTR [esi-0x54af0a89]
  425f57:	push   ss
  425f58:	ret    0x2f84
  425f5b:	cmp    dl,BYTE PTR [esi-0xa7f153f]
  425f61:	ret    0x4163
  425f64:	mov    DWORD PTR [ecx+0x57],ecx
  425f67:	mov    esi,0x311fff0b
  425f6c:	and    cl,cl
  425f6e:	jecxz  0x425f71
  425f70:	add    eax,0x4bb49e95
  425f75:	call   FWORD PTR [edx+ecx*8-0x41ccdb8b]
  425f7c:	inc    ebx
  425f7d:	sbb    BYTE PTR [eax+eax*2+0x2d0fff40],dh
  425f84:	and    cl,cl
  425f86:	mov    ds:0x950501,eax
  425f8b:	outs   dx,BYTE PTR ds:[esi]
  425f8c:	mov    ah,0x4b
  425f8e:	jmp    FWORD PTR [ebp+0x3d]
  425f91:	icebp  
  425f92:	mov    al,BYTE PTR [esi-0x78791b1e]
  425f98:	dec    esp
  425f99:	cmp    eax,0x7172b518
  425f9e:	ror    BYTE PTR [ecx+0x478dcc96],0x34
  425fa5:	int    0x52
  425fa7:	push   esi
  425fa8:	sahf   
  425fa9:	sbb    dl,BYTE PTR [eax]
  425fab:	leave  
  425fac:	sub    ecx,DWORD PTR [ecx]
  425fae:	xchg   DWORD PTR [esi+0x2b],eax
  425fb1:	outs   dx,BYTE PTR ds:[esi]
  425fb2:	inc    ebx
  425fb3:	jle    0x425fb8
  425fb5:	ja     0x42602b
  425fb7:	xchg   BYTE PTR [ebx],ch
  425fb9:	outs   dx,BYTE PTR ds:[esi]
  425fba:	jnp    0x42602a
  425fbc:	in     al,dx
  425fbd:	xor    BYTE PTR [eax],dh
  425fbf:	xor    al,0x66
  425fc1:	dec    esp
  425fc2:	add    cl,cl
  425fc4:	imul   ebx,edx,0xffffff83
  425fc7:	inc    ebx
  425fc8:	imul   eax,DWORD PTR [esi],0x672349c3
  425fce:	inc    ebp
  425fcf:	inc    esp
  425fd0:	sub    esi,DWORD PTR [eax+0x4b935243]
  425fd6:	ds xchg ah,ah
  425fd9:	xor    BYTE PTR [eax+0x54],al
  425fdc:	outs   dx,DWORD PTR ds:[esi]
  425fdd:	dec    esp
  425fde:	add    BYTE PTR [ecx+0x65],al
  425fe1:	dec    edx
  425fe2:	in     eax,0xcb
  425fe4:	addr16 push es
  425fe6:	ret    
  425fe7:	shl    DWORD PTR [ecx-0x77],0x45
  425feb:	les    ebp,FWORD PTR [ecx]
  425fed:	je     0x425fb2
  425fef:	add    BYTE PTR [eax-0x55bb7f98],bh
  425ff5:	sub    eax,0x9afd5206
  425ffa:	mov    cl,0x2
  425ffc:	ret    0x46b0
  425fff:	add    BYTE PTR [edx+0x39e81f23],dh
  426005:	rol    BYTE PTR [esi+0x2863fdfb],cl
  42600b:	mov    esi,0x53e3428a
  426010:	xchg   edi,edi
  426012:	push   edx
  426013:	add    eax,0xd2e34ad0
  426018:	ds loopne 0x42600d
  42601b:	dec    ecx
  42601c:	rol    DWORD PTR [edx-0x5e],0x4b
  426020:	xchg   esi,eax
  426021:	clc    
  426022:	mov    ds:0xd2c75403,eax
  426027:	jp     0x426001
  426029:	add    ecx,esi
  42602b:	in     eax,0xb0
  42602d:	xor    BYTE PTR [edx-0x72],bl
  426030:	arpl   cx,cx
  426032:	out    0x17,eax
  426034:	shl    DWORD PTR [edx],1
  426036:	push   0x13
  426038:	cmp    BYTE PTR [edi+0x7d46ffa2],0xb7
  42603f:	ret    0x4279
  426042:	das    
  426043:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426044:	dec    DWORD PTR [ebp-0x19]
  426047:	dec    ecx
  426048:	imul   eax,DWORD PTR [edx+0x1],0x6d4ee7c3
  42604f:	inc    edx
  426050:	xchg   BYTE PTR [ebp+0x13],bh
  426053:	add    al,BYTE PTR [eax]
  426055:	xchg   BYTE PTR [edx-0x18],al
  426058:	ja     0x426030
  42605a:	inc    edx
  42605b:	jecxz  0x426060
  42605d:	aam    0x93
  42605f:	mov    ah,0xb1
  426061:	cmp    al,0x3b
  426063:	jo     0x425feb
  426065:	in     eax,dx
  426066:	(bad)  
  426067:	lods   al,BYTE PTR ds:[esi]
  426068:	jp     0x425fec
  42606a:	int    0xd6
  42606c:	dec    ecx
  42606d:	mov    eax,ds:0xb001442
  426072:	push   edx
  426073:	lods   eax,DWORD PTR ds:[esi]
  426074:	inc    edx
  426075:	xchg   BYTE PTR [edi+0x21],bl
  426078:	rol    BYTE PTR [ebp-0x7eb60d33],cl
  42607e:	inc    edx
  42607f:	jl     0x42600c
  426081:	push   edi
  426082:	sub    ah,BYTE PTR [esi+ebx*4-0x79]
  426086:	outs   dx,DWORD PTR ds:[esi]
  426087:	or     ch,ch
  426089:	mov    esi,0x85aaa1f2
  42608e:	imul   eax,DWORD PTR [esi],0x74
  426091:	pop    ecx
  426092:	add    cl,BYTE PTR [ebp-0x17]
  426095:	(bad)  
  426096:	leave  
  426097:	add    eax,0x4cf51564
  42609c:	jmp    0xea2f94ab
  4260a1:	test   DWORD PTR [edx+0x6e],eax
  4260a4:	sub    ecx,DWORD PTR [edx]
  4260a6:	xor    al,0x61
  4260a8:	jmp    0x42602f
  4260aa:	inc    edx
  4260ab:	outs   dx,DWORD PTR ds:[esi]
  4260ac:	mov    edx,0xf9974e5e
  4260b1:	dec    edi
  4260b2:	jnp    0x4260be
  4260b4:	jb     0x42603b
  4260b6:	imul   ecx,DWORD PTR [ebx-0x13],0x0
  4260ba:	out    0x0,al
  4260bc:	cmp    eax,0x8d3a3ee8
  4260c1:	into   
  4260c2:	test   ebx,eax
  4260c4:	sub    eax,0x4cea5a7c
  4260c9:	jmp    0xadb85aa4
  4260ce:	or     esi,DWORD PTR [edi]
  4260d0:	fist   DWORD PTR [ecx-0x1f7ccd49]
  4260d6:	push   es
  4260d7:	add    DWORD PTR [esi],eax
  4260d9:	push   0x2acd0dfd
  4260de:	mov    dh,BYTE PTR [esi+0xe7172d6]
  4260e4:	int    0x2a
  4260e6:	mov    ah,bl
  4260e8:	sbb    DWORD PTR [ebx],esi
  4260ea:	mov    DWORD PTR [edx+0x3d],0x3d0467a8
  4260f1:	sub    bh,bl
  4260f3:	or     bl,bl
  4260f5:	push   ecx
  4260f6:	pop    es
  4260f7:	and    al,0xb
  4260f9:	sbb    al,BYTE PTR [esi-0x387e4639]
  4260ff:	inc    edx
  426100:	push   ecx
  426101:	add    BYTE PTR [ecx+edi*1],bh
  426104:	xor    eax,eax
  426106:	fadd   QWORD PTR [ebp+0x54]
  426109:	mov    ds:0x310363,eax
  42610e:	sbb    al,0x6
  426110:	mov    DWORD PTR [edx+ebp*4],ecx
  426113:	cs mov bh,0x43
  426116:	pop    ds
  426117:	xchg   BYTE PTR [ecx+0xa83b50c],dl
  42611d:	mov    eax,DWORD PTR [eax]
  42611f:	scas   al,BYTE PTR es:[edi]
  426120:	add    eax,0xfe3c0be2
  426125:	mov    cl,al
  426127:	retf   0x5290
  42612a:	cmp    dh,al
  42612c:	add    al,0xea
  42612e:	pop    es
  42612f:	sbb    al,0xfe
  426131:	mov    cl,al
  426133:	mov    bh,BYTE PTR [edx+0x4b0ffd5]
  426139:	jmp    0xeec1:0x88f66c0f
  426140:	(bad)  
  426142:	xor    ch,dh
  426144:	add    dl,BYTE PTR [edi-0x75]
  426147:	ret    
  426148:	je     0x4261a5
  42614a:	push   0x31030f
  42614f:	lock sub ch,bh
  426152:	adc    ch,BYTE PTR [edi+0x3e]
  426155:	jg     0x42619c
  426157:	out    0x75,eax
  426159:	cmc    
  42615a:	adc    eax,0x31340b
  42615f:	jmp    0x528:0x87705
  426166:	adc    ebx,DWORD PTR [edi-0x1bfc16c2]
  42616c:	js     0x426160
  42616e:	call   0x372139
  426173:	inc    DWORD PTR [ebx-0x3d]
  426176:	ret    
  426177:	aaa    
  426178:	cmc    
  426179:	mov    al,0x43
  42617b:	xchg   BYTE PTR [ebx],ch
  42617d:	xchg   BYTE PTR ds:0x4d3d2e,dl
  426183:	add    BYTE PTR [ebp-0x55],al
  426186:	enter  0x4b8f,0xec
  42618a:	or     al,0x0
  42618c:	aad    0xa4
  42618e:	call   0xd2dd682
  426193:	push   edx
  426194:	mov    cl,0xb4
  426196:	enter  0x74eb,0xeb
  42619a:	or     al,0x75
  42619c:	pop    eax
  42619d:	xchg   ecx,eax
  42619e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42619f:	lds    eax,FWORD PTR [ebp+0x2b]
  4261a2:	pop    ds
  4261a3:	sti    
  4261a4:	shr    DWORD PTR [edx-0x14347038],1
  4261aa:	or     al,0x0
  4261ac:	jae    0x4261c3
  4261ae:	xchg   ebp,eax
  4261af:	xchg   esp,eax
  4261b0:	loope  0x4261d9
  4261b2:	lea    eax,[esi+eax*8-0x743ce86a]
  4261b9:	scas   eax,DWORD PTR es:[edi]
  4261ba:	inc    ebx
  4261bb:	aas    
  4261bc:	xchg   bh,ch
  4261be:	les    edi,FWORD PTR ds:0x9002e186
  4261c4:	ret    
  4261c5:	imul   eax,DWORD PTR [esi],0x1
  4261c8:	pop    eax
  4261c9:	clc    
  4261ca:	pop    eax
  4261cb:	mov    edx,0xffc8ebd6
  4261d0:	cmp    ebp,eax
  4261d2:	push   esp
  4261d3:	call   0xfbcf42f5
  4261d8:	cmp    BYTE PTR [esi+ebp*2+0x45a3b5fb],dh
  4261df:	pop    ebx
  4261e0:	loopne 0x426256
  4261e2:	dec    ecx
  4261e3:	aaa    
  4261e4:	ret    0x905
  4261e7:	jb     0x4261e9
  4261e9:	nop
  4261ea:	adc    al,0xc9
  4261ec:	and    eax,DWORD PTR [edx+0x5686c657]
  4261f2:	das    
  4261f3:	or     DWORD PTR [edi],ebp
  4261f5:	inc    esi
  4261f6:	inc    ebx
  4261f7:	pop    esp
  4261f8:	adc    ebx,DWORD PTR [esi-0x36]
  4261fb:	dec    edi
  4261fc:	or     DWORD PTR [ebp+0x74],0x35
  426200:	jnp    0x426236
  426202:	int3   
  426203:	and    al,0x7
  426205:	ret    0xfb5e
  426208:	loope  0x4261fd
  42620a:	ds jecxz 0x4261e6
  42620d:	pop    eax
  42620e:	xor    dl,bh
  426210:	mul    DWORD PTR [ebp+0x46]
  426213:	mov    ecx,0x5147b523
  426218:	add    BYTE PTR [edx+0x4e],ch
  42621b:	mov    eax,0xe3430dbb
  426220:	add    ebp,esi
  426222:	idiv   edi
  426224:	cmp    ch,0xcb
  426227:	mov    dh,0x27
  426229:	or     dl,0xe6
  42622c:	adc    DWORD PTR [ebx+edi*2+0x6f],eax
  426230:	daa    
  426231:	jbe    0x4261e7
  426233:	or     bl,ah
  426235:	aas    
  426236:	add    al,0xf7
  426238:	add    edi,DWORD PTR [ebx]
  42623a:	retf   
  42623b:	mov    esi,0x314eda86
  426240:	cmp    DWORD PTR [ebx],0x52
  426243:	retf   
  426244:	mov    al,ds:0x8ec837bd
  426249:	mov    dh,0xc9
  42624b:	xor    eax,0x6d9e007c
  426250:	mov    eax,0xe2e99d82
  426255:	add    al,0x86
  426257:	inc    edx
  426258:	unpcklps xmm0,xmm5
  42625b:	jge    0x4262dc
  42625d:	lahf   
  42625e:	add    DWORD PTR [ebx+0x32cb4ae3],eax
  426264:	push   ebx
  426265:	mov    es,esi
  426267:	inc    edx
  426268:	pushf  
  426269:	adc    DWORD PTR [ebp+0x7d],eax
  42626c:	jg     0x426221
  42626e:	add    DWORD PTR [edx+0x7dcce90a],eax
  426274:	cli    
  426275:	dec    ebp
  426276:	or     BYTE PTR [edx+0xf98ba0a],al
  42627c:	cmp    DWORD PTR [ecx+ecx*8-0x7f06b137],0x27
  426284:	add    DWORD PTR [edi-0x68],esp
  426287:	inc    ecx
  426288:	or     ch,cl
  42628a:	add    BYTE PTR [ebp+0x2],bh
  42628d:	push   0xffffffa5
  42628f:	push   edx
  426290:	sub    DWORD PTR [ecx+ebx*4+0x75ac8d93],0x38
  426298:	jbe    0x426271
  42629a:	popf   
  42629b:	and    al,dh
  42629d:	push   ds
  42629e:	add    al,0xe9
  4262a0:	or     eax,ebp
  4262a2:	test   DWORD PTR [edx+0x76],eax
  4262a5:	stc    
  4262a6:	dec    esp
  4262a7:	jge    0x426287
  4262a9:	add    BYTE PTR gs:[edx+0x26be260a],al
  4262b0:	mov    edx,0x36c50062
  4262b5:	in     al,0xdf
  4262b7:	dec    esp
  4262b8:	jge    0x426298
  4262ba:	cdq    
  4262bb:	add    eax,DWORD PTR [edx+0x26c1a60a]
  4262c1:	mov    fs,WORD PTR [edx-0x36]
  4262c4:	mov    WORD PTR ss:[edx+edx*4+0x42],es
  4262c9:	lea    eax,[esi+ebp*1+0x42]
  4262cd:	jbe    0x4262de
  4262cf:	sti    
  4262d0:	mul    BYTE PTR [esp+ebp*1]
  4262d3:	push   es
  4262d4:	mov    bh,0xf2
  4262d6:	call   0x5624c57a
  4262db:	add    al,0x3b
  4262dd:	icebp  
  4262de:	jb     0x42631a
  4262e0:	cli    
  4262e1:	or     ch,al
  4262e3:	test   DWORD PTR [edx+0x2d],eax
  4262e6:	mov    eax,ds:0x770abb
  4262eb:	dec    ebp
  4262ec:	(bad)  
  4262ed:	ds or  al,0x95
  4262f0:	pop    esi
  4262f1:	push   edx
  4262f2:	data16 out 0x4a,al
  4262f5:	push   ebx
  4262f6:	mov    DWORD PTR [edx+0x5f9ce2c2],ecx
  4262fc:	inc    edx
  4262fd:	or     dh,dh
  4262ff:	and    cl,BYTE PTR [edx+0x2a]
  426302:	je     0x4262a0
  426304:	mov    ebp,0xbc2175d8
  426309:	inc    edi
  42630a:	or     BYTE PTR [edi+0x47e8223a],bl
  426310:	(bad)  
  426311:	hlt    
  426312:	inc    DWORD PTR [ebp+0x3d]
  426315:	and    edx,edx
  426317:	add    dh,dh
  426319:	mov    edx,0x2d4d85fb
  42631e:	adc    dl,BYTE PTR [edx-0xb]
  426321:	dec    eax
  426322:	push   edx
  426323:	call   0x3723d5
  426328:	fs add eax,0x7eb10f05
  42632e:	ins    BYTE PTR es:[edi],dx
  42632f:	sbb    DWORD PTR [edi-0xc769392],0x18
  426336:	call   0x13fc79e
  42633b:	mov    esi,DWORD PTR [ebx]
  42633d:	mov    ebp,0x52a28bdd
  426342:	jg     0x426380
  426344:	ja     0x4263b5
  426346:	retf   0xc981
  426349:	aad    0x88
  42634b:	inc    eax
  42634c:	lahf   
  42634d:	push   edx
  42634e:	xchg   edi,eax
  42634f:	rcl    BYTE PTR [ebp+0x3e],0x42
  426353:	or     edi,0x53
  426356:	jno    0x426318
  426358:	mov    ds:0xe8fe7ea9,al
  42635d:	ret    0x45fb
  426360:	xchg   edi,eax
  426361:	inc    eax
  426362:	ins    BYTE PTR es:[edi],dx
  426363:	jbe    0xe0726cf6
  426369:	mov    ds:0xb5aa7502,al
  42636e:	enter  0x8407,0x2f
  426372:	sbb    al,BYTE PTR [ebp-0x7901c8c3]
  426378:	ret    
  426379:	pop    ss
  42637a:	jecxz  0x4263fa
  42637c:	add    dl,dl
  42637e:	add    ecx,DWORD PTR [ebx+0x7324d220]
  426384:	inc    ebp
  426385:	mov    fs,WORD PTR [ebx]
  426387:	stc    
  426388:	adc    BYTE PTR [esi],ch
  42638a:	sub    ecx,DWORD PTR [ebx+0xbd331fb]
  426390:	je     0x426410
  426392:	ret    
  426393:	ins    BYTE PTR es:[edi],dx
  426394:	sti    
  426395:	xchg   BYTE PTR [ebx],ch
  426397:	jecxz  0x426399
  426399:	and    DWORD PTR [eax+0x5cc5f7f8],0x754d0fc8
  4263a3:	sbb    bh,BYTE PTR [esi-0xa]
  4263a6:	dec    esp
  4263a7:	mov    bh,bl
  4263a9:	pop    ecx
  4263aa:	dec    ebp
  4263ab:	enter  0x9607,0xe0
  4263af:	clc    
  4263b0:	sbb    BYTE PTR [ebx],al
  4263b2:	sub    eax,0xe60d14f8
  4263b7:	add    BYTE PTR [ebp+0x628bbb4a],cl
  4263bd:	add    eax,0x7d752662
  4263c2:	test   al,0x5f
  4263c4:	(bad)  
  4263c5:	push   ebx
  4263c6:	xchg   esi,eax
  4263c7:	jb     0x4263b0
  4263c9:	test   DWORD PTR [eax-0xd8af43d],esp
  4263cf:	ja     0x426416
  4263d1:	jle    0x4263f0
  4263d3:	out    0x88,eax
  4263d5:	xchg   edx,eax
  4263d6:	jnp    0x4263ca
  4263d8:	push   cs
  4263d9:	mov    DWORD PTR [esi+edi*8+0x2418f7e],ebp
  4263e0:	repnz add BYTE PTR [eax-0xb05563f],al
  4263e7:	cmp    al,0x64
  4263e9:	inc    ebp
  4263ea:	popfw  
  4263ec:	push   0xc
  4263ee:	or     ebp,edi
  4263f0:	sub    BYTE PTR [ebp+0x28],cl
  4263f3:	inc    edi
  4263f4:	jecxz  0x42637e
  4263f6:	push   esp
  4263f7:	scas   eax,DWORD PTR es:[edi]
  4263f8:	(bad)  [edx-0x3c589575]
  4263fe:	push   ecx
  4263ff:	jno    0x426424
  426401:	mov    DWORD PTR [edi],edi
  426403:	scas   eax,DWORD PTR es:[edi]
  426404:	cmc    
  426405:	mov    bl,BYTE PTR [ebx+0x39c31f5e]
  42640b:	jnp    0x426422
  42640d:	clc    
  42640e:	mov    BYTE PTR [edx+0x775e4264],al
  426414:	and    dh,dl
  426416:	adc    eax,0xd97f2ac0
  42641b:	(bad)  
  42641c:	xchg   esi,eax
  42641d:	mov    ah,BYTE PTR [edx+0x3e82f75e]
  426423:	xor    al,0xd4
  426425:	pop    edx
  426426:	push   ebp
  426427:	(bad)  
  426428:	sbb    bh,BYTE PTR [ebx]
  42642a:	loope  0x42646f
  42642c:	mov    BYTE PTR [bp-0x1cbe],al
  426431:	mov    bh,BYTE PTR [ebx+0x6a]
  426434:	daa    
  426435:	ret    
  426436:	loope  0x4264a8
  426438:	and    edx,esi
  42643a:	nop
  42643b:	pop    es
  42643c:	jns    0x426462
  42643e:	or     DWORD PTR [esi-0x1],ecx
  426441:	inc    edi
  426442:	mov    DWORD PTR [edx+0x7c],eax
  426445:	jno    0x426447
  426447:	jg     0x42649d
  426449:	dec    edi
  42644a:	or     al,BYTE PTR [esi-0x41]
  42644d:	test   al,0x2b
  42644f:	jns    0x426452
  426451:	xor    eax,0x7c47a178
  426456:	jae    0x426481
  426458:	sub    al,0xa
  42645a:	add    DWORD PTR [ebp-0x714e7adc],eax
  426460:	pop    esp
  426461:	dec    ebx
  426462:	adc    bh,BYTE PTR [ebx]
  426464:	push   0xffffffb0
  426466:	(bad)
  426469:	or     al,BYTE PTR [ecx-0x710f7c1c]
  42646f:	or     DWORD PTR [edx],eax
  426471:	jbe    0x42649b
  426473:	std    
  426474:	je     0x426498
  426476:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426477:	inc    esp
  426478:	xor    esi,eax
  42647a:	in     al,dx
  42647b:	lods   eax,DWORD PTR ds:[esi]
  42647c:	dec    BYTE PTR [ecx+ebp*8-0x4]
  426480:	cs gs pop edi
  426483:	popf   
  426484:	xor    esi,DWORD PTR [esi]
  426486:	add    eax,0xdd0a73ce
  42648b:	ins    DWORD PTR es:[edi],dx
  42648c:	sbb    DWORD PTR [ebp-0x46],0x54
  426490:	retf   0x711f
  426493:	dec    ebx
  426494:	aas    
  426495:	icebp  
  426496:	aam    0xdd
  426498:	inc    ebx
  426499:	dec    edx
  42649a:	jmp    0x2e50eca3
  42649f:	add    al,BYTE PTR [eax+0x472b7002]
  4264a5:	cmp    DWORD PTR [edi-0x2b0366b],0x0
  4264ac:	or     bl,BYTE PTR [eax+0x52d36012]
  4264b2:	and    DWORD PTR [edi-0x6037445f],0xffffffc0
  4264b9:	xchg   ebp,eax
  4264ba:	push   ebp
  4264bb:	sub    eax,DWORD PTR [ecx+0x55625842]
  4264c1:	fwait
  4264c2:	clc    
  4264c3:	adc    DWORD PTR [edi-0x385ad993],eax
  4264c9:	xor    bl,BYTE PTR [eax-0x2a]
  4264cc:	mov    al,0x3a
  4264ce:	lea    eax,[edi]
  4264d0:	mov    dh,BYTE PTR [edi]
  4264d2:	pop    ss
  4264d3:	add    bh,bh
  4264d5:	dec    edi
  4264d6:	dec    edx
  4264d7:	add    al,ah
  4264d9:	sub    eax,DWORD PTR ds:0xf30a99e8
  4264df:	jmp    eax
  4264e1:	sub    eax,DWORD PTR [ecx]
  4264e3:	mov    ebx,DWORD PTR [ecx+0x5a]
  4264e6:	loop   0x426539
  4264e8:	cmp    al,0xb0
  4264ea:	cmc    
  4264eb:	call   FWORD PTR [ecx-0x44dc1db2]
  4264f1:	mov    al,0xf5
  4264f3:	mov    ebp,DWORD PTR [ecx+0x6a]
  4264f6:	xchg   esi,esi
  4264f8:	pop    ebx
  4264f9:	dec    eax
  4264fa:	pop    esp
  4264fb:	call   0x37a763
  426500:	mov    esi,0x5f43c65e
  426505:	mov    ebx,0x2a6f85f1
  42650a:	inc    esi
  42650b:	mov    edi,DWORD PTR [edx]
  42650d:	push   0xffffffc6
  42650f:	inc    ebx
  426510:	add    BYTE PTR [edi],bl
  426512:	mov    ebx,0x5e766bc1
  426517:	jg     0x426565
  426519:	mov    ?,WORD PTR ds:[ecx+0x39]
  42651d:	das    
  42651e:	cmp    DWORD PTR [ebx],ecx
  426520:	add    esi,0x5e
  426523:	inc    ebp
  426524:	jne    0x426590
  426526:	imul   esi,edx,0x74
  426529:	enter  0xf4c8,0x75
  42652d:	loope  0x426542
  42652f:	jmp    0xf5f29217
  426534:	and    edx,eax
  426536:	imul   eax,esi,0x59aef43
  42653c:	mov    esp,DWORD PTR [eax-0x5ed73de5]
  426542:	pop    edx
  426543:	mov    BYTE PTR [ebx-0x21],0x9d
  426547:	or     BYTE PTR [ebx-0x1f],dl
  42654a:	scas   al,BYTE PTR es:[edi]
  42654b:	cmp    DWORD PTR ds:0x3f424386,0xffffff86
  426552:	pusha  
  426553:	sar    BYTE PTR [esi+0x5161b453],1
  426559:	aaa    
  42655a:	pop    ecx
  42655b:	scas   al,BYTE PTR es:[edi]
  42655c:	sbb    BYTE PTR [ecx+0x5c],cl
  42655f:	push   es
  426560:	sti    
  426561:	mov    dh,0xa2
  426563:	enter  0x9ef7,0x41
  426567:	in     al,dx
  426568:	stc    
  426569:	xor    DWORD PTR [eax+edi*8-0x224fdf9],0xd1b0983
  426574:	add    BYTE PTR [eax],al
  426576:	std    
  426577:	pop    ebp
  426578:	push   ss
  426579:	jg     0x4265d9
  42657b:	in     al,dx
  42657c:	clc    
  42657d:	xor    al,BYTE PTR ds:0x9473c7b3
  426583:	pushf  
  426584:	jne    0x4265ea
  426586:	rcl    BYTE PTR [esi-0x75],cl
  426589:	clc    
  42658a:	mov    al,0x16
  42658c:	std    
  42658d:	xchg   bl,cl
  42658f:	das    
  426590:	mov    ah,BYTE PTR [ebp+0x32]
  426593:	sbb    ecx,DWORD PTR [edx-0x7fe4819b]
  426599:	inc    ebp
  42659a:	mov    cs,ebx
  42659c:	jg     0x4265e3
  42659e:	sbb    cl,bl
  4265a0:	ins    DWORD PTR es:[edi],dx
  4265a1:	jne    0x426611
  4265a3:	fldenv [edi+eiz*8+0x7d]
  4265a7:	sbb    ecx,DWORD PTR ds:0xdcd5c685
  4265ad:	push   ecx
  4265ae:	out    dx,al
  4265af:	fistp  DWORD PTR [eax+eax*1]
  4265b2:	xchg   BYTE PTR [ebp+eax*8+0x4e],al
  4265b6:	push   ecx
  4265b7:	mov    BYTE PTR [ecx],al
  4265b9:	les    eax,FWORD PTR [ebp+0x1b]
  4265bc:	(bad)  
  4265bd:	cli    
  4265be:	jae    0x426607
  4265c0:	sbb    eax,DWORD PTR [eax-0x7a]
  4265c3:	inc    ebx
  4265c4:	cmp    edx,edi
  4265c6:	leave  
  4265c7:	inc    ecx
  4265c8:	call   0xeb073f03
  4265cd:	jnp    0x426601
  4265cf:	dec    ebp
  4265d0:	ins    BYTE PTR es:[edi],dx
  4265d1:	or     DWORD PTR [edx+0x6],ebp
  4265d4:	and    al,0x4
  4265d6:	and    DWORD PTR [edx],eax
  4265d8:	sbb    edi,DWORD PTR [eax+eax*1]
  4265db:	inc    edx
  4265dc:	cmp    ah,bh
  4265de:	out    dx,eax
  4265df:	lea    esi,[ecx]
  4265e1:	das    
  4265e2:	or     al,0x7e
  4265e4:	xor    esi,edx
  4265e6:	dec    edi
  4265e7:	js     0x42656b
  4265e9:	jecxz  0x426664
  4265eb:	inc    ecx
  4265ec:	cwde   
  4265ed:	nop
  4265ee:	adc    DWORD PTR [esi+0x55],esi
  4265f1:	and    eax,DWORD PTR [ecx*8-0xa20443a]
  4265f8:	dec    eax
  4265f9:	fs stc 
  4265fb:	xchg   ecx,eax
  4265fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4265fd:	not    DWORD PTR [ebx]
  4265ff:	pop    ebp
  426600:	mov    dh,0xdb
  426602:	jp     0x4265df
  426604:	push   esi
  426605:	pusha  
  426606:	icebp  
  426607:	jns    0x426638
  426609:	into   
  42660a:	pop    es
  42660b:	aam    0x2f
  42660d:	mov    dh,0x7b
  42660f:	fdiv   st(1),st
  426611:	and    al,0x10
  426613:	xchg   BYTE PTR [ecx+0xa00d0b4],dl
  426619:	hlt    
  42661a:	push   0x2b60d59
  42661f:	push   0x87084a02
  426624:	inc    edx
  426625:	jecxz  0x426612
  426627:	and    DWORD PTR [esp+eiz*4],eax
  42662a:	add    edi,ebp
  42662c:	push   ebp
  42662d:	call   DWORD PTR ds:0xc0214246
  426633:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426634:	cmp    esp,ebx
  426636:	cmp    al,0x9b
  426638:	inc    edx
  426639:	pop    ds
  42663a:	(bad)  
  42663b:	loope  0x4265f3
  42663d:	in     eax,dx
  42663e:	rol    BYTE PTR [eax],1
  426640:	xor    bl,BYTE PTR [edx+0x4685e80a]
  426646:	or     ch,dh
  426648:	jbe    0x426674
  42664a:	sbb    al,0x29
  42664c:	mov    cl,bh
  42664e:	or     DWORD PTR [ebp-0x53cbd040],esp
  426654:	jl     0x42661c
  426656:	(bad)  
  426657:	jmp    0xf4c7a8e1
  42665c:	lea    eax,[esi]
  42665e:	dec    ebp
  42665f:	jmp    0xa47768b4
  426664:	xchg   edi,eax
  426665:	push   ebx
  426666:	test   esp,edx
  426668:	mov    DWORD PTR [ebx],eax
  42666a:	dec    ebp
  42666b:	jmp    0xeeceb532
  426670:	stc    
  426671:	(bad)  
  426672:	or     ecx,ebp
  426674:	test   DWORD PTR [edx+0x1b73a835],eax
  42667a:	pop    eax
  42667b:	je     0x426606
  42667d:	mov    ebp,0x4285e905
  426682:	mov    al,0xed
  426684:	xchg   ecx,eax
  426685:	outs   dx,DWORD PTR ds:[esi]
  426686:	or     al,BYTE PTR [ecx+0x66f091bc]
  42668c:	rol    DWORD PTR [edx],0x1
  42668f:	gs adc eax,0xeae90a42
  426695:	cmp    esi,eax
  426697:	stos   BYTE PTR es:[edi],al
  426698:	test   edi,eax
  42669a:	(bad)  
  42669b:	in     al,dx
  42669c:	popa   
  42669d:	outs   dx,DWORD PTR ds:[esi]
  42669e:	or     dh,BYTE PTR [edx+0x56]
  4266a1:	inc    esi
  4266a2:	sbb    eax,0x938500a9
  4266a7:	fs or  bh,bl
  4266aa:	dec    ebp
  4266ab:	mov    esp,DWORD PTR [esi]
  4266ad:	xchg   BYTE PTR [edx],bh
  4266af:	(bad)  
  4266b0:	stos   BYTE PTR es:[edi],al
  4266b1:	test   DWORD PTR [ebp+0x685dcf1],edx
  4266b7:	dec    ebp
  4266b8:	jmp    0xc77b29
  4266bd:	xchg   DWORD PTR [eax-0x11],esi
  4266c0:	je     0x4266bc
  4266c2:	sbb    al,0x8
  4266c4:	push   ebp
  4266c5:	fcomp  DWORD PTR [esi+0xa]
  4266c8:	les    ebx,FWORD PTR [ebx+eax*2]
  4266cb:	cmc    
  4266cc:	(bad)  
  4266cd:	xor    al,0xb6
  4266cf:	cmp    ebp,esi
  4266d1:	xor    al,0x67
  4266d3:	or     dl,BYTE PTR [ebx]
  4266d5:	pop    edi
  4266d6:	inc    esi
  4266d7:	jbe    0x426714
  4266d9:	inc    ebp
  4266da:	inc    esi
  4266db:	pop    ebp
  4266dc:	push   esi
  4266dd:	icebp  
  4266de:	inc    ebx
  4266df:	mov    eax,0xcc435989
  4266e4:	inc    esi
  4266e5:	mov    ds:0xa146cc1a,al
  4266ea:	loope  0x426734
  4266ec:	inc    edx
  4266ed:	outs   dx,DWORD PTR ds:[esi]
  4266ee:	test   BYTE PTR [edx+ecx*1+0x2c],cl
  4266f2:	lahf   
  4266f3:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4266f5:	sbb    DWORD PTR [edi+eax*4-0x33c76c40],ebp
  4266fc:	inc    esp
  4266fd:	push   ebx
  4266fe:	push   edi
  4266ff:	or     ebp,ebx
  426701:	dec    esp
  426702:	test   BYTE PTR [esi+0x24],al
  426705:	fs inc ecx
  426707:	jmp    0x1cb3672a
  42670c:	icebp  
  42670d:	(bad)  
  42670e:	mov    ds:0x2f43c646,al
  426713:	stos   DWORD PTR es:[edi],eax
  426714:	xlat   BYTE PTR ds:[ebx]
  426715:	push   edi
  426716:	inc    ebp
  426717:	inc    edx
  426718:	cmc    
  426719:	xor    eax,0x316e1f
  42671e:	enter  0xf57d,0xd
  426722:	pop    ss
  426723:	outs   dx,BYTE PTR ds:[esi]
  426724:	xor    DWORD PTR [eax],eax
  426726:	clc    
  426727:	or     ebp,DWORD PTR [ecx-0x18]
  42672a:	pop    esp
  42672b:	pop    es
  42672c:	icebp  
  42672d:	inc    BYTE PTR [edx]
  42672f:	mov    dl,0x0
  426731:	inc    eax
  426732:	out    dx,eax
  426733:	mov    edi,0x20862445
  426738:	fcom   DWORD PTR [esi+0x4f]
  42673b:	pop    eax
  42673c:	rol    DWORD PTR [esi+0xc6298f2],0x35
  426743:	aad    0x7d
  426745:	xor    eax,0xffcd0e6a
  42674a:	xor    cl,al
  42674c:	lock xchg dh,bl
  42674f:	test   BYTE PTR [ecx-0x769445bb],cl
  426755:	inc    ebp
  426756:	mov    edx,0x5500e06b
  42675b:	mov    ds:0xcda1fbf8,al
  426760:	outs   dx,DWORD PTR ds:[esi]
  426761:	rcl    BYTE PTR [edx],0xb
  426764:	jle    0x4267b3
  426766:	call   0x9f03:0x7f74449e
  42676d:	cli    
  42676e:	add    BYTE PTR [ecx-0xd3f8f1c],al
  426774:	sub    al,0x88
  426776:	inc    ebp
  426777:	jb     0x4267e4
  426779:	mov    DWORD PTR [ebp+0x6e],eax
  42677c:	imul   esp,eax,0x14
  42677f:	mov    ch,0xb2
  426781:	clc    
  426782:	sti    
  426783:	pop    ecx
  426784:	aad    0x6f
  426786:	rcr    dl,0x24
  426789:	xchg   BYTE PTR [ebp+0x4e],bh
  42678c:	sbb    esp,ecx
  42678e:	or     BYTE PTR ds:0xfbe77506,cl
  426794:	dec    eax
  426795:	inc    esi
  426796:	out    0x84,eax
  426798:	retf   
  426799:	or     ebx,DWORD PTR [ebx-0x38]
  42679c:	lock inc ebx
  42679e:	mov    edi,0x23e9b6bb
  4267a3:	push   cs
  4267a4:	call   0x4f0d:0x1b877469
  4267ab:	mov    al,0xa0
  4267ad:	and    ah,dh
  4267af:	xchg   esp,eax
  4267b0:	inc    edx
  4267b1:	mov    ds:0x10715503,eax
  4267b6:	jmp    0x426835
  4267b8:	push   es
  4267b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267ba:	add    eax,DWORD PTR [ecx]
  4267bc:	or     ch,BYTE PTR [edx+0x36]
  4267bf:	stos   BYTE PTR es:[edi],al
  4267c0:	push   es
  4267c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267c2:	add    ecx,DWORD PTR [edi]
  4267c4:	outs   dx,DWORD PTR ds:[esi]
  4267c5:	fstp   TBYTE PTR [edi]
  4267c7:	xchg   ecx,eax
  4267c8:	inc    edx
  4267c9:	clc    
  4267ca:	push   eax
  4267cb:	pusha  
  4267cc:	cbw    
  4267ce:	mov    eax,0x42400ae
  4267d3:	add    BYTE PTR [ebp+0x2d],dl
  4267d6:	imul   BYTE PTR [edi]
  4267d8:	xchg   esp,eax
  4267d9:	and    bl,0x82
  4267dc:	ret    0x383d
  4267df:	ja     0x426795
  4267e1:	rol    DWORD PTR ds:0xe380d694,0x4
  4267e8:	jge    0x4267ae
  4267ea:	mov    eax,DWORD PTR ds:0x5b664286
  4267f0:	cli    
  4267f1:	jae    0x4267f4
  4267f3:	xor    DWORD PTR [ecx-0x17cae8be],0xffffff80
  4267fa:	data16 icebp 
  4267fc:	mov    ecx,0x29db8b8a
  426801:	sub    al,0x88
  426803:	jmp    0x1aae:0x5bf5bdc6
  42680a:	adc    ebp,DWORD PTR [ebp+ecx*2-0x6488ebd4]
  426811:	ret    0xc3f4
  426814:	cmp    DWORD PTR [edi+0x7c3003a6],edi
  42681a:	mov    ah,0xe9
  42681c:	xchg   BYTE PTR [ebp-0x482e2c5b],bh
  426822:	and    ah,dl
  426824:	and    DWORD PTR [ebx],eax
  426826:	or     eax,0xa988604
  42682b:	stos   BYTE PTR es:[edi],al
  42682c:	(bad)  
  42682d:	mov    ch,0xc6
  42682f:	xchg   ecx,eax
  426830:	ins    DWORD PTR es:[edi],dx
  426831:	mov    fs:0x46a47126,al
  426837:	ins    BYTE PTR es:[edi],dx
  426838:	add    bh,dh
  42683a:	(bad)  
  42683b:	push   edx
  42683c:	add    DWORD PTR [ecx-0x13f10f26],edx
  426842:	xchg   BYTE PTR [edi+0x7c],bh
  426845:	xchg   ebp,eax
  426846:	mov    ah,dl
  426848:	aad    0x1d
  42684a:	sub    cl,dh
  42684c:	fs (bad) 
  42684e:	pop    DWORD PTR [ebx-0x383b525c]
  426854:	jo     0x42681c
  426856:	xchg   edi,eax
  426857:	jg     0x4268ad
  426859:	mov    ds:0x845d4700,al
  42685e:	inc    edx
  42685f:	or     ch,cl
  426861:	or     al,0x49
  426863:	pop    ebp
  426864:	je     0x42682c
  426866:	call   FWORD PTR [ecx+0x7e]
  426869:	mov    al,BYTE PTR [edx+0xa]
  42686c:	imul   edi,esp,0xc2b8e1ff
  426872:	inc    edx
  426873:	or     ch,BYTE PTR [ebp+eax*8-0x4a]
  426877:	sbb    BYTE PTR [edx+0x66],ch
  42687a:	fwait
  42687b:	or     al,BYTE PTR [ebx]
  42687d:	xchg   BYTE PTR [ebp-0x5ac5e6ba],bh
  426883:	push   es
  426884:	sbb    cl,BYTE PTR [edi]
  426886:	test   esi,eax
  426888:	sbb    edx,esp
  42688a:	lea    esi,[ecx+ebp*8]
  42688d:	test   DWORD PTR [ebx+0x7db8e5c8],ebp
  426893:	jbe    0x426871
  426895:	int3   
  426896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426897:	dec    eax
  426898:	ins    BYTE PTR es:[edi],dx
  426899:	rsqrtps xmm0,XMMWORD PTR ss:[ecx+0x0]
  42689e:	lock fdivrp st(0),st
  4268a1:	dec    esi
  4268a2:	das    
  4268a3:	cmp    BYTE PTR [edi+0x0],0xda
  4268a7:	add    bl,BYTE PTR [ecx-0x18]
  4268aa:	fwait
  4268ab:	int3   
  4268ac:	hlt    
  4268ad:	jmp    DWORD PTR [edx-0x3aaf82fe]
  4268b3:	inc    ebp
  4268b4:	and    ebx,ebx
  4268b6:	cmp    al,0xba
  4268b8:	inc    esi
  4268b9:	aam    0x2f
  4268bb:	cld    
  4268bc:	cmp    DWORD PTR [ebp+0xb],0xdf7017b4
  4268c3:	(bad)  
  4268c4:	lock test BYTE PTR [edi-0x567501ce],ch
  4268cb:	movd   DWORD PTR [ebp+0x4b],mm6
  4268cf:	xchg   edi,eax
  4268d0:	idiv   BYTE PTR [edx]
  4268d2:	scas   eax,DWORD PTR es:[edi]
  4268d3:	ds jmp 0x86c905db
  4268d9:	rcr    BYTE PTR [ebx+0x51],0x7f
  4268dd:	inc    ebp
  4268de:	arpl   WORD PTR [esi],dx
  4268e0:	jle    0x426927
  4268e2:	fist   DWORD PTR ds:0x29b7c788
  4268e8:	xor    al,BYTE PTR [eax]
  4268ea:	lahf   
  4268eb:	stos   DWORD PTR es:[edi],eax
  4268ec:	retf   0xb774
  4268ef:	sbb    BYTE PTR ds:0x412eaa8d,cl
  4268f5:	push   0x6b
  4268f7:	rol    DWORD PTR [esi+0x4c],0xaf
  4268fb:	rol    DWORD PTR [esi-0x2c],0xaf
  4268ff:	mov    ebp,0x700704e
  426904:	mov    DWORD PTR [ebx],esi
  426906:	add    BYTE PTR [edi+0x1c],ch
  426909:	dec    ecx
  42690a:	lea    ebx,[edx-0x36]
  42690d:	push   ecx
  42690e:	call   0x373082
  426913:	test   ebp,edi
  426915:	jge    0x42698c
  426917:	addr16 push es
  426919:	jmp    0xf5f27163
  42691e:	push   0xffffff86
  426920:	in     eax,0x87
  426922:	jne    0x4268e6
  426924:	repz fs ss loope 0x4268a9
  426929:	ja     0x4268b8
  42692b:	retf   
  42692c:	inc    ebx
  42692d:	test   DWORD PTR [ebp-0x3e],eax
  426930:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426931:	xor    BYTE PTR [ecx+0x5d83e34b],cl
  426937:	jb     0x426991
  426939:	mov    cl,0x6f
  42693b:	mov    ebx,DWORD PTR [ebx]
  42693d:	or     eax,0xe0c6e900
  426942:	mov    WORD PTR [ebx+0x7f],cs
  426945:	(bad)  
  426946:	gs dec ecx
  426948:	in     al,0x87
  42694a:	mov    ebp,0xfb76288a
  42694f:	fisubr WORD PTR [ebx+ebx*4-0x6]
  426953:	rcl    edx,0xd3
  426956:	test   dh,al
  426958:	mov    eax,ds:0x96846639
  42695d:	clc    
  42695e:	inc    ebx
  42695f:	dec    eax
  426960:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426961:	push   ss
  426962:	dec    edi
  426963:	adc    ebx,DWORD PTR [edi-0x66ff050f]
  426969:	add    ch,bl
  42696b:	mov    bh,0x87
  42696d:	sbb    ecx,DWORD PTR ds:0x34e69e80
  426973:	add    BYTE PTR [esi-0x608bb262],al
  426979:	pushf  
  42697a:	shr    BYTE PTR [ebx-0x7a],1
  42697d:	push   ebp
  42697e:	or     cl,BYTE PTR [ebp+0x65d63fc3]
  426984:	mov    ch,BYTE PTR [ecx+ecx*4-0x7b]
  426988:	add    al,0x75
  42698b:	sti    
  42698c:	mov    dh,0xd3
  42698e:	(bad)  
  42698f:	cmp    BYTE PTR [esi-0x753c75e5],al
  426995:	dec    ecx
  426996:	loope  0x426960
  426998:	cmp    DWORD PTR [edx-0x62],eax
  42699b:	out    dx,eax
  42699c:	sub    al,0x77
  42699e:	shr    esi,cl
  4269a0:	or     DWORD PTR [ecx-0x5f2747],ecx
  4269a6:	fimul  DWORD PTR [edx-0x27]
  4269a9:	mov    ?,WORD PTR [edi+eiz*2+0x7]
  4269ad:	push   ss
  4269ae:	ret    
  4269af:	or     eax,DWORD PTR [esi-0x3326bbe]
  4269b5:	scas   al,BYTE PTR es:[edi]
  4269b6:	jmp    0x4269e8
  4269b8:	shl    DWORD PTR [esi-0x7900a073],1
  4269be:	packssdw mm6,QWORD PTR [esi+0xa03e377]
  4269c5:	add    dl,al
  4269c7:	jg     0x426a10
  4269c9:	inc    ebx
  4269ca:	jecxz  0x4269cf
  4269cc:	add    BYTE PTR [ecx-0x64],al
  4269cf:	loop   0x426957
  4269d1:	inc    ebx
  4269d2:	cs xchg ebx,eax
  4269d4:	je     0x426a11
  4269d6:	push   ds
  4269d7:	ins    BYTE PTR es:[edi],dx
  4269d8:	mov    esi,0x814619a1
  4269dd:	lods   al,BYTE PTR ds:[esi]
  4269de:	sub    BYTE PTR [esp+esi*2-0x5],bh
  4269e2:	jle    0x4269a3
  4269e4:	jge    0x426a01
  4269e6:	sub    cl,bl
  4269e8:	test   eax,0x86e3424b
  4269ed:	mov    WORD PTR [eax],gs
  4269ef:	loopne 0x426978
  4269f1:	outs   dx,DWORD PTR ds:[esi]
  4269f2:	inc    ebx
  4269f3:	jecxz  0x4269f8
  4269f5:	aad    0x9c
  4269f7:	jmp    0x74cd:0xa0bc4836
  4269fe:	xor    ah,BYTE PTR [esi+0x56]
  426a01:	jge    0x4269c0
  426a03:	fwait
  426a04:	add    al,0x86
  426a06:	inc    edx
  426a07:	or     eax,0x7fa60abf
  426a0c:	int3   
  426a0d:	imul   ecx,DWORD PTR [eax+0x49],0xa9d4d73
  426a14:	and    eax,0x11d2a607
  426a19:	fimul  DWORD PTR [esi-0x58]
  426a1c:	data16 mov ch,0x57
  426a1f:	fdiv   QWORD PTR [eax+0x57]
  426a22:	inc    eax
  426a23:	xor    eax,0xd1c4855a
  426a28:	jmp    0xb4c7acb2
  426a2d:	or     eax,0x3546c1
  426a32:	mov    DWORD PTR [esi-0x7e],ebp
  426a35:	pusha  
  426a36:	call   DWORD PTR [edi]
  426a38:	xchg   DWORD PTR [edi],esi
  426a3a:	test   DWORD PTR [esi+0x4285e9b1],edi
  426a40:	mov    bl,bh
  426a42:	test   DWORD PTR [ebx],edi
  426a44:	xchg   BYTE PTR [esi-0x76],al
  426a47:	inc    edx
  426a48:	or     ah,BYTE PTR [edx-0x2a]
  426a4b:	mov    edi,0x7d77005
  426a50:	xchg   esi,edi
  426a52:	test   BYTE PTR [esi+0x4285e9a9],bh
  426a58:	mov    ch,BYTE PTR [esi+0x7e863b85]
  426a5e:	test   DWORD PTR [edx+0xa],eax
  426a61:	jb     0x426a1c
  426a63:	mov    edi,0x3b506c01
  426a68:	xchg   BYTE PTR [edx-0x7b],ah
  426a6b:	inc    edx
  426a6c:	or     ch,BYTE PTR [ecx+0x60]
  426a6f:	inc    edx
  426a70:	add    DWORD PTR [ebp+0x3],esp
  426a73:	inc    ebx
  426a74:	or     ch,cl
  426a76:	or     dl,bh
  426a78:	lock sbb DWORD PTR [eax-0x40],edx
  426a7c:	les    edx,FWORD PTR [ecx-0x61102d40]
  426a82:	inc    BYTE PTR [ecx]
  426a84:	jbe    0x426a5e
  426a86:	push   es
  426a87:	jge    0x426a6f
  426a89:	cmp    dh,BYTE PTR [edx]
  426a8b:	in     al,dx
  426a8c:	xor    DWORD PTR [eax],eax
  426a8e:	push   edi
  426a8f:	inc    ebx
  426a90:	or     cl,BYTE PTR [ebp-0x31c6e]
  426a96:	add    BYTE PTR [eax-0x566d5175],bh
  426a9c:	mov    ah,0x53
  426a9e:	pop    ecx
  426a9f:	pushf  
  426aa0:	fwait
  426aa1:	cmc    
  426aa2:	je     0x426a8d
  426aa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426aa5:	les    edx,FWORD PTR [ecx-0x56]
  426aa8:	add    dh,ch
  426aaa:	call   0x3712e3
  426aaf:	mov    ds:0x944f7683,eax
  426ab4:	sub    ah,cl
  426ab6:	mov    edi,DWORD PTR [edx]
  426ab8:	mov    ds:0xfa5a565d,eax
  426abd:	fcom   DWORD PTR [eax+0x68]
  426ac0:	pop    ebx
  426ac1:	add    al,BYTE PTR [eax]
  426ac3:	ffreep st(1)
  426ac5:	mov    dh,0xa0
  426ac7:	xor    BYTE PTR [ebp+esi*8-0xc329a18],0xff
  426acf:	pop    esp
  426ad0:	jg     0x426ad0
  426ad2:	add    BYTE PTR [edi+0x242b76b4],0x81
  426ad9:	pop    ebx
  426ada:	lea    ebx,[edx]
  426adc:	xchg   edi,eax
  426add:	loop   0x426b27
  426adf:	xor    al,0xb4
  426ae1:	cmc    
  426ae2:	test   bh,bl
  426ae4:	sub    DWORD PTR ds:0x2267283,edx
  426aea:	mov    esp,DWORD PTR [edx+0x26]
  426aed:	mov    bl,dl
  426aef:	test   bh,bh
  426af1:	clc    
  426af2:	nop    DWORD PTR [ebp+esi*8-0x1]
  426af7:	cmp    BYTE PTR [eax-0x4dff0102],cl
  426afd:	mov    dl,0xe2
  426aff:	das    
  426b00:	mov    ecx,0x8283f5b0
  426b05:	mov    dl,0xa
  426b07:	mov    eax,DWORD PTR [esi-0x2478a1aa]
  426b0d:	iret   
  426b0e:	dec    ebp
  426b0f:	cmp    al,0xc0
  426b11:	mov    ebp,0x5efd5b7a
  426b16:	jp     0x426b72
  426b18:	fucom  st(2)
  426b1a:	inc    edi
  426b1b:	add    al,0x86
  426b1d:	dec    esi
  426b1e:	outs   dx,DWORD PTR ds:[esi]
  426b1f:	in     al,dx
  426b20:	std    
  426b21:	(bad)  
  426b22:	lock sbb BYTE PTR [edx],0x34
  426b26:	pop    es
  426b27:	add    BYTE PTR [esi+0x6ac085e4],al
  426b2d:	jmp    0x426ba8
  426b2f:	jne    0x426baf
  426b31:	scas   al,BYTE PTR es:[edi]
  426b32:	mov    eax,edi
  426b34:	or     esp,DWORD PTR [ebp+0x7b]
  426b37:	push   eax
  426b38:	or     eax,0x40624e73
  426b3d:	sbb    ecx,DWORD PTR ds:0xe1c7c685
  426b43:	icebp  
  426b44:	inc    ecx
  426b45:	pop    ds
  426b46:	pop    es
  426b47:	je     0x426b9a
  426b49:	sahf   
  426b4a:	mov    eax,edi
  426b4c:	(bad)  [ebx+edi*2]
  426b4f:	push   eax
  426b50:	fsubrp st(0),st
  426b52:	jp     0x426b4f
  426b54:	leave  
  426b55:	mov    dl,0xc9
  426b57:	or     ecx,DWORD PTR [ebx]
  426b59:	pop    esp
  426b5a:	repnz cmp edx,DWORD PTR [ebp-0x33]
  426b5e:	fdiv   st(2),st
  426b60:	add    BYTE PTR [ebx-0x79bfe75d],bl
  426b66:	mov    al,0xca
  426b68:	or     ecx,DWORD PTR ds:0x8e736ff4
  426b6e:	sbb    BYTE PTR [esi],ch
  426b70:	call   0xfbbedb08
  426b75:	add    bl,ah
  426b77:	clc    
  426b78:	adc    DWORD PTR ds:0x83ff0a54,ecx
  426b7e:	dec    eax
  426b7f:	jnp    0x426bf6
  426b81:	add    BYTE PTR [edx+0x33],0x71
  426b85:	xchg   ebx,eax
  426b86:	jb     0x426b81
  426b88:	ret    
  426b89:	popa   
  426b8a:	rcr    BYTE PTR [esi-0x307a7901],0x70
  426b91:	(bad)  [esi]
  426b93:	fwait
  426b94:	mov    ?,WORD PTR [ebx-0x272e8fdc]
  426b9a:	sub    al,0x20
  426b9c:	or     BYTE PTR [edi+0xb7ecfae],al
  426ba2:	sub    ah,BYTE PTR [esi+0x70]
  426ba5:	sub    eax,0xdedf5b92
  426baa:	and    ebx,DWORD PTR [eax+0x34]
  426bad:	inc    esi
  426bae:	test   DWORD PTR [edx],ebp
  426bb0:	inc    ebp
  426bb1:	jle    0x426bf5
  426bb3:	mov    ?,WORD PTR [edx+ebx*1-0x3f]
  426bb7:	inc    esi
  426bb8:	imul   eax,DWORD PTR [edi],0x16
  426bbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426bbc:	add    eax,0xdd994286
  426bc1:	cmp    al,0xb7
  426bc3:	mov    fs,WORD PTR [edi]
  426bc5:	add    BYTE PTR [edx+0x2aa41b8a],ch
  426bcb:	and    eax,0xb6c47c18
  426bd0:	mov    fs,WORD PTR [edi]
  426bd2:	ds xchg ebx,eax
  426bd4:	jp     0x426b9d
  426bd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426bd7:	cmp    dh,BYTE PTR [ebx+eax*2+0x228d9256]
  426bde:	push   esi
  426bdf:	std    
  426be0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426be1:	daa    
  426be2:	xchg   edx,eax
  426be3:	jmp    0x282e:0xb9a9c47b
  426bea:	mov    bx,0x281e
  426bee:	bound  edi,QWORD PTR [ebx+0x255e2826]
  426bf4:	into   
  426bf5:	sar    DWORD PTR [eax-0x7e],cl
  426bf8:	jecxz  0x426b82
  426bfa:	inc    esi
  426bfb:	scas   al,BYTE PTR es:[edi]
  426bfc:	or     al,BYTE PTR [edi+0x5c]
  426bff:	je     0x426c80
  426c01:	xor    eax,0x91526e9e
  426c06:	popa   
  426c07:	loopne 0x426bf9
  426c09:	sahf   
  426c0a:	pop    es
  426c0b:	jg     0x426c33
  426c0d:	loope  0x426be9
  426c0f:	jle    0x426c37
  426c11:	icebp  
  426c12:	push   es
  426c13:	jg     0x426c3b
  426c15:	xor    ebx,ecx
  426c17:	jle    0x426c3f
  426c19:	fld    QWORD PTR [esi]
  426c1b:	jg     0x426c43
  426c1d:	in     eax,dx
  426c1e:	mov    edx,0x6c5267e
  426c23:	jg     0x426c4b
  426c25:	mov    cl,0x55
  426c27:	mov    bh,0x3d
  426c29:	add    eax,0x45ff7600
  426c2e:	or     eax,0xe90a3e6e
  426c33:	test   edi,edi
  426c35:	inc    ebp
  426c36:	or     eax,0xe90a4166
  426c3b:	test   edi,edi
  426c3d:	inc    ebp
  426c3e:	or     eax,0xe9f124b2
  426c43:	test   DWORD PTR [edx],ebx
  426c45:	ins    BYTE PTR es:[edi],dx
  426c46:	mov    cl,0x85
  426c48:	inc    edx
  426c49:	test   DWORD PTR [edi],esp
  426c4b:	mov    edx,0x19cd45b6
  426c50:	je     0x426cac
  426c52:	add    DWORD PTR [ebp-0x116f582],esi
  426c58:	add    dh,BYTE PTR [esi-0x25]
  426c5b:	push   es
  426c5c:	jg     0x426c84
  426c5e:	mov    eax,ds:0xc53db6d5
  426c63:	cmp    DWORD PTR [ecx+0x1a620d45],0x428a3130
  426c6d:	clc    
  426c6e:	stos   BYTE PTR es:[edi],al
  426c6f:	xchg   DWORD PTR [esi+0x5fc9621c],ebp
  426c75:	sbb    al,BYTE PTR [eax]
  426c77:	adc    al,0x2
  426c79:	or     DWORD PTR [ecx+0x2446a86e],ecx
  426c7f:	pop    ebx
  426c80:	test   al,0x3f
  426c82:	or     al,0xe6
  426c84:	ds push esp
  426c86:	mov    edi,edx
  426c88:	adc    DWORD PTR [edi-0x77f590f8],ebp
  426c8e:	in     al,dx
  426c8f:	add    ah,ch
  426c91:	and    DWORD PTR [esi+0x53],0xffffff99
  426c95:	or     edi,DWORD PTR [esi+0x45]
  426c98:	add    ecx,DWORD PTR [edi]
  426c9a:	jle    0x426ce1
  426c9c:	mov    ebx,0x9402670f
  426ca1:	xchg   BYTE PTR [eax],al
  426ca3:	jmp    DWORD PTR [eax+0x66db2194]
  426ca9:	adc    ebp,esi
  426cab:	push   0xfffffff2
  426cad:	and    eax,DWORD PTR [esi+0x5d]
  426cb0:	mov    ebx,0xd7a076c2
  426cb5:	xchg   BYTE PTR [eax+0x6894c0a3],bh
  426cbb:	dec    esi
  426cbc:	jb     0x426cf0
  426cbe:	std    
  426cbf:	pop    eax
  426cc0:	inc    edi
  426cc1:	push   ss
  426cc2:	nop
  426cc3:	jmp    DWORD PTR [eax+0x4485cda8]
  426cc9:	sub    ebp,edi
  426ccb:	mov    ch,BYTE PTR [edi+ecx*1+0xf4f457e]
  426cd2:	add    BYTE PTR [di],al
  426cd5:	aas    
  426cd6:	push   0xa32a7701
  426cdb:	inc    eax
  426cdd:	rol    ch,0x14
  426ce0:	sbb    al,0x87
  426ce2:	push   esi
  426ce3:	dec    esp
  426ce4:	mov    eax,ds:0x445e5594
  426ce9:	addr16 mov cl,0x55
  426cec:	adc    al,0xa2
  426cee:	jno    0x426cdc
  426cf0:	xchg   BYTE PTR [ecx-0x25],dl
  426cf3:	push   ecx
  426cf4:	add    BYTE PTR [ecx],bh
  426cf6:	add    DWORD PTR [edx],0x72198610
  426cfc:	clc    
  426cfd:	or     eax,0xa67f1667
  426d02:	sub    ecx,DWORD PTR [edx-0x117a79dd]
  426d08:	cli    
  426d09:	mov    bl,0xcb
  426d0b:	xchg   edx,eax
  426d0c:	aas    
  426d0d:	xchg   al,al
  426d0f:	sbb    BYTE PTR [esi*2+0x2e87066b],al
  426d16:	mov    ds:0xe503f3c1,eax
  426d1b:	clc    
  426d1c:	add    dh,BYTE PTR [ebx+ebp*8+0x54]
  426d20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d21:	xchg   BYTE PTR [ebx],ch
  426d23:	or     eax,0x5dffbbfb
  426d28:	adc    eax,0xffcd1ab2
  426d2d:	scas   eax,DWORD PTR es:[edi]
  426d2e:	xor    eax,eax
  426d30:	push   ecx
  426d31:	or     ebp,edi
  426d33:	xor    BYTE PTR [esi-0x7a],ah
  426d36:	fild   DWORD PTR [esi+0x45]
  426d39:	or     eax,0xba155e2b
  426d3e:	stc    
  426d3f:	int3   
  426d40:	dec    DWORD PTR [esi]
  426d42:	fbstp  TBYTE PTR [eax]
  426d44:	jg     0x426d10
  426d46:	push   DWORD PTR [ebx+0x5d]
  426d49:	out    0xa9,al
  426d4b:	push   es
  426d4c:	adc    BYTE PTR [esi+0x727d8d2b],al
  426d52:	sub    edi,eax
  426d54:	push   cs
  426d55:	add    esp,edi
  426d57:	push   0x48300050
  426d5c:	stc    
  426d5d:	repz rcl DWORD PTR [esi+0x7b93faf5],0x19
  426d65:	inc    eax
  426d66:	xchg   BYTE PTR [ecx+ebx*1-0x5],al
  426d6a:	xor    eax,DWORD PTR [edx+0xb]
  426d6d:	jg     0x426dba
  426d6f:	push   cs
  426d70:	pop    ebp
  426d71:	cld    
  426d72:	dec    ecx
  426d73:	and    DWORD PTR [esi-0x4],ecx
  426d76:	(bad)  
  426d77:	xchg   edi,eax
  426d78:	(bad)  
  426d79:	ins    BYTE PTR es:[edi],dx
  426d7a:	jae    0x426d32
  426d7c:	int    0xc3
  426d7e:	add    esi,0x2191f6a2
  426d84:	into   
  426d85:	or     edx,DWORD PTR [edi+0x632ee382]
  426d8b:	inc    ebp
  426d8c:	jecxz  0x426d91
  426d8e:	(bad)  [ebx+0x5e]
  426d91:	(bad)  
  426d92:	lea    esi,[edx-0x75]
  426d95:	in     eax,dx
  426d96:	int    0x42
  426d98:	jecxz  0x426df2
  426d9a:	adc    al,0xcd
  426d9c:	and    eax,0xf6fd0b68
  426da1:	adc    BYTE PTR ds:0xcb786f97,bh
  426da7:	xor    cl,BYTE PTR [ebx+0x6820ba24]
  426dad:	xchg   BYTE PTR [esi-0x69],al
  426db0:	add    DWORD PTR [ebp-0x3d],0x1d
  426db4:	jecxz  0x426e22
  426db6:	fwait
  426db7:	push   ss
  426db8:	dec    ebx
  426db9:	add    cl,0x20
  426dbc:	dec    eax
  426dbd:	add    DWORD PTR [eax],0xffffff83
  426dc0:	sbb    eax,0xcd83f6e3
  426dc5:	popf   
  426dc6:	adc    ebp,ebp
  426dc8:	push   ecx
  426dc9:	dec    ebx
  426dca:	repnz inc eax
  426dcc:	and    BYTE PTR [eax],ch
  426dce:	jns    0x426e1b
  426dd0:	sbb    eax,0xb30cdb0
  426dd5:	and    eax,0x6c778617
  426dda:	pop    edi
  426ddb:	dec    ecx
  426ddc:	or     eax,DWORD PTR es:[eax-0x409baa4e]
  426de3:	gs dec edx
  426de5:	or     dh,dh
  426de7:	rol    edi,0xe
  426dea:	std    
  426deb:	xchg   esi,eax
  426dec:	or     BYTE PTR [edx],0x3f
  426def:	mov    ch,0xa8
  426df1:	(bad)  
  426df2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426df3:	shl    DWORD PTR [eax],0x84
  426df6:	rcr    DWORD PTR ds:0x2a168511,1
  426dfc:	inc    ecx
  426dfd:	clc    
  426dfe:	(bad)  
  426dff:	in     eax,dx
  426e00:	lahf   
  426e01:	repnz mov esi,0xeb09c47d
  426e07:	test   DWORD PTR [edx-0x7b],eax
  426e0a:	fmul   QWORD PTR [ecx+0x40e94d06]
  426e10:	loopne 0x426e33
  426e12:	ins    BYTE PTR es:[edi],dx
  426e13:	xchg   esi,eax
  426e14:	dec    edx
  426e15:	cmp    eax,0x168ca3a0
  426e1a:	fiadd  WORD PTR [edi]
  426e1c:	sub    cl,BYTE PTR [ebx]
  426e1e:	jmp    0xd5b30da8
  426e23:	add    BYTE PTR [edx+0x44621c95],al
  426e29:	push   eax
  426e2a:	xor    esp,DWORD PTR [ecx]
  426e2c:	xchg   BYTE PTR [esi+0x64447204],dl
  426e32:	and    esi,0xffffffba
  426e35:	icebp  
  426e36:	or     ch,cl
  426e38:	test   edi,eax
  426e3a:	inc    esi
  426e3b:	stc    
  426e3c:	pop    eax
  426e3d:	add    DWORD PTR [esi-0x15],esi
  426e40:	or     BYTE PTR [edx-0x73],0xbf
  426e44:	sbb    DWORD PTR [ebx],0x42e46c01
  426e4a:	or     ch,cl
  426e4c:	push   0xc42f0284
  426e51:	inc    ebx
  426e52:	or     ebx,DWORD PTR [edi-0x22]
  426e55:	add    ecx,DWORD PTR [ebp-0x17]
  426e58:	mov    bh,0xca
  426e5a:	inc    ebp
  426e5b:	lds    eax,FWORD PTR [ecx-0x40ffe8e5]
  426e61:	xor    eax,0x12b8004a
  426e66:	sbb    DWORD PTR [ebp-0xc9c01d],ecx
  426e6c:	xor    cl,BYTE PTR [edi+0x5a]
  426e6f:	inc    DWORD PTR [ebx+0x62]
  426e72:	lea    esp,es:[ebx+0x62]
  426e76:	inc    esi
  426e77:	push   DWORD PTR [eax+0x7e]
  426e7a:	ja     0x426e7a
  426e7c:	mov    eax,0xb3885cac
  426e81:	bound  ebx,QWORD PTR ds:0x3da01cff
  426e87:	call   0xf5d5448c
  426e8c:	jmp    esp
  426e8e:	xchg   ebx,eax
  426e8f:	jno    0x426e8f
  426e91:	sub    BYTE PTR [ecx*4+0xa436e8c],bl
  426e98:	cmp    BYTE PTR [ebx+0x62],0x1
  426e9c:	add    BYTE PTR [eax],ch
  426e9e:	lahf   
  426e9f:	fwait
  426ea0:	add    DWORD PTR [edi],ebp
  426ea2:	inc    ebx
  426ea3:	imul   esi,esi,0x24374857
  426ea9:	jecxz  0x426eb2
  426eab:	icebp  
  426eac:	mov    WORD PTR [ebx+0x62],fs
  426eaf:	es push eax
  426eb1:	jno    0x426eb4
  426eb3:	or     eax,0xe254b800
  426eb8:	or     BYTE PTR [esi],bl
  426eba:	lods   al,BYTE PTR ds:[esi]
  426ebb:	cmc    
  426ebc:	(bad)  
  426ebd:	jmp    0x426efd
  426ebf:	push   ds
  426ec0:	push   ecx
  426ec1:	jbe    0x426ea2
  426ec3:	sub    al,0x24
  426ec5:	je     0x426f0b
  426ec7:	push   0xc77b0f01
  426ecc:	add    bl,BYTE PTR [eax-0x2cbb7c54]
  426ed2:	cmp    cl,BYTE PTR [ecx+0x469ddf46]
  426ed8:	and    al,0x86
  426eda:	icebp  
  426edb:	outs   dx,DWORD PTR ds:[esi]
  426edc:	inc    edx
  426edd:	jb     0x426edb
  426edf:	aas    
  426ee0:	mov    DWORD PTR [edx+0xd],ecx
  426ee3:	sub    DWORD PTR [ecx],edi
  426ee5:	pop    edx
  426ee6:	add    eax,0x900a0b2d
  426eeb:	or     eax,0x7e860000
  426ef0:	mov    cl,0x23
  426ef2:	pop    cx
  426ef4:	dec    esi
  426ef5:	adc    cl,al
  426ef7:	jmp    DWORD PTR [edx-0x7c]
  426efa:	(bad)  
  426efb:	daa    
  426efc:	jno    0x426e93
  426efe:	xchg   BYTE PTR [ecx],ch
  426f00:	or     eax,0x3b04a766
  426f05:	call   0xfba499b5
  426f0a:	std    
  426f0b:	rcr    DWORD PTR [esi],cl
  426f0d:	div    edx
  426f0f:	repnz jmp 0xd2fa:0xf43f8138
  426f17:	pop    es
  426f18:	and    ebx,edi
  426f1a:	fimul  DWORD PTR [edi]
  426f1c:	and    DWORD PTR [ebx+0x5e],edx
  426f1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f20:	retf   
  426f21:	inc    DWORD PTR [ecx+0x3d]
  426f24:	dec    esi
  426f25:	sbb    al,0xcc
  426f27:	popf   
  426f28:	arpl   bx,di
  426f2a:	mov    edx,0xc2872d0f
  426f2f:	pop    es
  426f30:	adc    eax,0x8a9c2e4f
  426f35:	cli    
  426f36:	sbb    DWORD PTR [ebx+0x306e23ca],edx
  426f3c:	inc    edi
  426f3d:	je     0x426ef0
  426f3f:	mov    bl,0x5
  426f41:	adc    BYTE PTR [esi-0x5dbb8bd5],al
  426f47:	call   DWORD PTR [ebp+eax*8+0x3f]
  426f4b:	push   ebp
  426f4c:	arpl   WORD PTR [edi+0x745e10ee],ax
  426f52:	add    BYTE PTR [edx+eax*2+0x3ea5c076],bl
  426f59:	mov    bl,0xd0
  426f5b:	int3   
  426f5c:	xchg   esi,eax
  426f5d:	mov    edi,0xb345c523
  426f62:	add    eax,DWORD PTR [esi+0x5e0f0842]
  426f68:	aaa    
  426f69:	mov    ds:0x6f030b03,eax
  426f6e:	or     eax,0x2ceb8601
  426f73:	loope  0x426f0b
  426f75:	hlt    
  426f76:	loope  0x426fd6
  426f78:	cmp    dl,BYTE PTR [edi-0x6]
  426f7b:	mov    WORD PTR [esi-0x6972d001],ss
  426f81:	pop    es
  426f82:	xor    dh,dl
  426f84:	sub    al,BYTE PTR [edx]
  426f86:	sar    DWORD PTR [ecx+0x1d],0x18
  426f8a:	pop    esp
  426f8b:	mov    edi,DWORD PTR cs:[ecx+0x7966d68]
  426f92:	or     al,0x6e
  426f94:	in     eax,dx
  426f95:	cmp    DWORD PTR [edx+0x5d],ebp
  426f98:	sbb    eax,0x2aa62017
  426f9d:	inc    ecx
  426f9e:	mov    edx,0xef801d4f
  426fa3:	gs push 0xffffff9b
  426fa6:	xchg   bh,cl
  426fa8:	sbb    al,0x70
  426faa:	jl     0x426f76
  426fac:	data16 mov bl,0x7a
  426faf:	les    edi,FWORD PTR [edx]
  426fb1:	ins    BYTE PTR es:[edi],dx
  426fb2:	mov    edi,0xc17a5665
  426fb7:	add    BYTE PTR [ebp-0x37],bh
  426fba:	test   al,0x7
  426fbc:	xchg   ecx,eax
  426fbd:	sbb    bl,BYTE PTR [eax-0x11]
  426fc0:	mov    ecx,0x923a969
  426fc5:	sbb    ch,BYTE PTR [edi-0x46086d5]
  426fcb:	add    edi,DWORD PTR [ebx+0x30]
  426fce:	or     al,cl
  426fd0:	test   DWORD PTR [edx],esi
  426fd2:	or     ch,cl
  426fd4:	sub    eax,0x85e92a42
  426fd9:	sub    cl,BYTE PTR [ecx+0x1b]
  426fdc:	pop    esi
  426fdd:	sbb    DWORD PTR [ebx+0x6f59d1ac],eax
  426fe3:	fnstsw WORD PTR [esi+0x2f56f5e]
  426fe9:	lahf   
  426fea:	add    ch,cl
  426fec:	mov    eax,ds:0x7daf854b
  426ff1:	sbb    eax,0x8cb6c947
  426ff6:	icebp  
  426ff7:	pop    esp
  426ff8:	call   0xb19:0x28308924
  426fff:	push   edi
  427000:	(bad)  
  427001:	lds    eax,FWORD PTR [esi-0x7]
  427004:	push   es
  427005:	add    esi,DWORD PTR [esi-0x15]
  427008:	cli    
  427009:	pop    edx
  42700a:	leave  
  42700b:	and    eax,0xe90b36a6
  427010:	test   DWORD PTR [edx+0x62],eax
  427013:	frstor [ecx+0x77a60a5b]
  427019:	adc    bl,BYTE PTR [ecx+ebp*1]
  42701c:	add    BYTE PTR [edx+0x79cd45c3],cl
  427022:	ja     0x427074
  427024:	xor    bh,BYTE PTR [ebp-0x6954b0db]
  42702a:	inc    edx
  42702b:	mov    bh,ch
  42702d:	xchg   ecx,eax
  42702e:	dec    ebx
  42702f:	or     bh,ch
  427031:	jl     0x42704a
  427033:	jbe    0x426ffa
  427035:	push   ebp
  427036:	sub    al,BYTE PTR [ecx]
  427038:	mov    al,0xa3
  42703a:	pop    ss
  42703b:	lea    ebx,[edi-0x57]
  42703e:	xchg   esi,eax
  42703f:	inc    DWORD PTR [edi-0x16b2f99a]
  427045:	fcom   QWORD PTR [ecx]
  427047:	and    al,BYTE PTR [eax]
  427049:	test   eax,0xdf040b02
  42704e:	shl    BYTE PTR [ebp+0x24],0xcb
  427052:	aas    
  427053:	(bad)  
  427054:	in     al,0xe1
  427056:	aas    
  427057:	or     bh,bh
  427059:	fidivr DWORD PTR [ebx]
  42705b:	add    BYTE PTR [eax-0x21],al
  42705e:	js     0x427016
  427060:	push   ebp
  427061:	fs jp  0x4270d5
  427064:	in     al,dx
  427065:	mov    edi,0x194466f0
  42706a:	cdq    
  42706b:	shr    al,cl
  42706d:	pusha  
  42706e:	(bad)  
  427070:	jmp    DWORD PTR [ecx+eax*1]
  427073:	or     edi,eax
  427075:	test   eax,0xaf000a46
  42707a:	sahf   
  42707b:	dec    esp
  42707c:	add    al,0x2a
  42707e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42707f:	jbe    0x4270b4
  427081:	add    BYTE PTR [ecx-0x708af480],ch
  427087:	mov    edi,0x47b904f8
  42708c:	mov    edi,DWORD PTR [edi]
  42708e:	xlat   BYTE PTR ds:[ebx]
  42708f:	inc    esi
  427090:	jbe    0x427092
  427092:	stos   BYTE PTR es:[edi],al
  427093:	das    
  427094:	fucomi st,st(3)
  427096:	lds    eax,FWORD PTR [esi+0x49]
  427099:	push   ebx
  42709a:	cwde   
  42709b:	clc    
  42709c:	lock mov BYTE PTR [ecx-0x303216e6],dl
  4270a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270a4:	cmc    
  4270a5:	jmp    0x4270de
  4270a7:	call   0xc4c:0x9d98ff31
  4270ae:	pop    ss
  4270af:	inc    esi
  4270b0:	xchg   esi,edi
  4270b2:	mov    al,0x78
  4270b4:	or     BYTE PTR [ebp+0x505a1a81],cl
  4270ba:	mov    bh,0x15
  4270bc:	hlt    
  4270bd:	(bad)  
  4270be:	mov    al,0x9e
  4270c0:	dec    esp
  4270c1:	or     BYTE PTR [esi-0x768ab252],al
  4270c7:	aaa    
  4270c8:	inc    esi
  4270c9:	jmp    0x4f99c1
  4270ce:	add    esp,ebx
  4270d0:	add    BYTE PTR [eax+0x3],dl
  4270d3:	push   esp
  4270d4:	clc    
  4270d5:	test   BYTE PTR [ebx],ch
  4270d7:	sub    DWORD PTR ds:0xd086e00,ecx
  4270dd:	add    BYTE PTR [esi],al
  4270df:	cmp    al,0xfa
  4270e1:	pop    es
  4270e2:	fidivr WORD PTR [ebx+0xd]
  4270e5:	sti    
  4270e6:	add    cl,al
  4270e8:	shr    DWORD PTR [ebp+0x42],cl
  4270eb:	xchg   esi,eax
  4270ec:	xchg   esi,eax
  4270ed:	retf   0x56fb
  4270f0:	scas   al,BYTE PTR es:[edi]
  4270f1:	retf   0x56ef
  4270f4:	mov    edi,0x211bfb11
  4270f9:	xor    BYTE PTR [ebp-0x66],al
  4270fc:	adc    DWORD PTR ds:0xfc8600,ecx
  427102:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427103:	jae    0x42716e
  427105:	push   es
  427106:	jg     0x427186
  427108:	sub    esp,eax
  42710a:	adc    edi,DWORD PTR [edi-0x7e8d9d9a]
  427110:	stos   DWORD PTR es:[edi],eax
  427111:	jmp    0xe3994805
  427116:	jle    0x4270fb
  427118:	out    0x9,eax
  42711a:	jne    0x427146
  42711c:	xchg   esp,eax
  42711d:	mov    al,0x17
  42711f:	add    esp,DWORD PTR [edx+0x26]
  427122:	push   eax
  427123:	fisubr WORD PTR [edx]
  427125:	or     eax,0xe0c90600
  42712a:	pop    es
  42712b:	xor    DWORD PTR cs:[esi],eax
  42712e:	sti    
  42712f:	xor    DWORD PTR [ebx+0x66fd1bb0],edx
  427135:	push   ss
  427136:	(bad)  
  427137:	into   
  427138:	test   al,0x8d
  42713a:	stc    
  42713b:	sbb    DWORD PTR [ebx+0x68],eax
  42713e:	cmc    
  42713f:	adc    DWORD PTR [ecx+0x46bb78de],edx
  427145:	pop    esi
  427146:	cmp    edi,DWORD PTR [edx+0x40]
  427149:	push   0xffffffb6
  42714b:	add    BYTE PTR [ebp+0x681ba0cb],ah
  427151:	ss xor bh,ch
  427154:	sub    DWORD PTR [edx],0x19dc664b
  42715a:	ins    BYTE PTR es:[edi],dx
  42715b:	dec    esp
  42715c:	add    edi,esi
  42715e:	mov    cs,ebp
  427160:	(bad)
  427164:	push   edx
  427165:	jb     0x4270f4
  427167:	push   es
  427168:	mov    ebp,0xc85beb8f
  42716d:	sbb    BYTE PTR [ecx],cl
  42716f:	or     eax,DWORD PTR gs:[ebx]
  427172:	ja     0x42719b
  427174:	and    al,0xc5
  427176:	mov    edx,0x6a501a03
  42717b:	(bad)  
  42717c:	ins    DWORD PTR es:[edi],dx
  42717d:	retf   
  42717e:	and    BYTE PTR [ecx+ebp*4],dh
  427181:	pop    esp
  427182:	shr    dh,1
  427184:	sub    DWORD PTR [edx],0x197c6620
  42718a:	push   0xffffffbd
  42718c:	mov    DWORD PTR [eax],eax
  42718e:	and    DWORD PTR [esi+eax*4],ecx
  427191:	sub    eax,0x12eb836e
  427196:	and    ch,dh
  427198:	or     ah,BYTE PTR [edi-0x60]
  42719b:	fs pop ebp
  42719d:	lds    esp,FWORD PTR ds:0x66485168
  4271a3:	and    BYTE PTR [ebp+0x19],cl
  4271a6:	cwde   
  4271a7:	cmp    eax,0x5ae33ac4
  4271ac:	mov    bh,0x19
  4271ae:	mov    BYTE PTR [eax+eax*1-0x2a],ah
  4271b2:	sub    ch,BYTE PTR [ebp-0x44]
  4271b5:	das    
  4271b6:	sbb    DWORD PTR [edx],ecx
  4271b8:	sbb    al,dl
  4271ba:	scas   al,BYTE PTR es:[edi]
  4271bb:	dec    eax
  4271bc:	outs   dx,DWORD PTR ds:[esi]
  4271bd:	mov    ds:0xab5a2b2a,al
  4271c2:	sbb    eax,0xe945a783
  4271c7:	or     dh,BYTE PTR [edx-0x17022744]
  4271cd:	enter  0xddbf,0x6a
  4271d1:	push   ecx
  4271d2:	sbb    cl,BYTE PTR [ebp+0x46bfe14d]
  4271d8:	fnsave [esi-0x6ad1a68e]
  4271de:	rol    DWORD PTR [esi-0x7],0x6a
  4271e2:	push   edx
  4271e3:	test   DWORD PTR [ecx+edx*8+0x6e1771b],esp
  4271ea:	add    ecx,esi
  4271ec:	bound  ebp,QWORD PTR [edi+eax*8]
  4271ef:	jne    0x4271be
  4271f1:	stc    
  4271f2:	leave  
  4271f3:	dec    ebp
  4271f4:	lds    esp,FWORD PTR [ebp+0x2a]
  4271f7:	pop    esi
  4271f8:	mul    DWORD PTR ds:0x9229861d
  4271fe:	les    ecx,FWORD PTR [edi]
  427200:	jmp    0x427187
  427202:	inc    edx
  427203:	test   DWORD PTR [edx+edi*2],esp
  427206:	sub    ch,BYTE PTR [esp+ebx*8-0x1b]
  42720a:	sbb    eax,DWORD PTR [edx-0x7ab451db]
  427210:	scas   eax,DWORD PTR es:[edi]
  427211:	cmp    ah,BYTE PTR [eax]
  427213:	add    BYTE PTR ds:[eax],0xe5
  427217:	sbb    eax,DWORD PTR [ebx-0x5dc551d3]
  42721d:	call   0x21a4a153
  427222:	xchg   ebp,eax
  427223:	inc    edx
  427224:	or     bl,BYTE PTR [esi+0x291c644f]
  42722a:	mov    dl,BYTE PTR [edi+0x1831c566]
  427230:	loop   0x427232
  427232:	sbb    bh,BYTE PTR [esi]
  427234:	or     al,BYTE PTR [eax]
  427236:	xlat   BYTE PTR ds:[ebx]
  427237:	inc    eax
  427238:	add    eax,0xa3dad84
  42723d:	add    BYTE PTR [edx+ebp*1+0x311f102d],ch
  427244:	cld    
  427245:	inc    esi
  427246:	popa   
  427247:	or     ch,BYTE PTR ds:0x7636ee0e
  42724d:	and    al,0xcb
  42724f:	cli    
  427250:	inc    esi
  427251:	mov    edi,DWORD PTR [ebx]
  427253:	pusha  
  427254:	jb     0x4271d9
  427256:	(bad)  
  427257:	aas    
  427258:	or     dh,BYTE PTR [edi+ebp*1-0x4d]
  42725c:	inc    ebp
  42725d:	and    al,0x2f
  42725f:	mov    bl,0x6d
  427261:	and    al,0xc3
  427263:	stos   DWORD PTR es:[edi],eax
  427264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427265:	enter  0xa368,0x86
  427269:	shl    BYTE PTR [ebx],0x3a
  42726c:	jg     0x4272b2
  42726e:	ret    
  42726f:	xor    ebx,DWORD PTR [edx-0x18]
  427272:	jo     0x42726f
  427274:	lock jmp FWORD PTR [eax+0x282cef]
  42727b:	xchg   DWORD PTR [ecx+0x4c],ebx
  42727e:	(bad)  
  42727f:	test   al,0xa4
  427281:	jbe    0x4272a7
  427283:	outs   dx,DWORD PTR ds:[esi]
  427284:	mov    ds:0x38da017,eax
  427289:	icebp  
  42728a:	mov    dh,BYTE PTR [ebx-0x5c76e196]
  427290:	push   0x1a
  427292:	test   DWORD PTR [edi],ebx
  427294:	out    dx,eax
  427295:	std    
  427296:	mov    BYTE PTR [ebx-0x2c14e996],dh
  42729c:	mov    esi,0x4338246d
  4272a1:	ja     0x4272aa
  4272a3:	and    edi,edi
  4272a5:	sub    al,0xe
  4272a7:	pop    edi
  4272a8:	test   al,0x5c
  4272aa:	push   0xffffff86
  4272ac:	or     bl,BYTE PTR [edx-0x4afe9d84]
  4272b2:	out    0xe5,eax
  4272b4:	popf   
  4272b5:	ins    BYTE PTR es:[edi],dx
  4272b6:	sti    
  4272b7:	std    
  4272b8:	int    0xe0
  4272ba:	adc    al,0xc6
  4272bc:	sub    ebp,esp
  4272be:	call   FWORD PTR [ecx]
  4272c0:	sub    DWORD PTR [ebp-0x429802b1],ebp
  4272c6:	cli    
  4272c7:	xchg   ebx,eax
  4272c8:	adc    DWORD PTR [edx+edx*8+0x6c],ebp
  4272cc:	inc    ebp
  4272cd:	fwait
  4272ce:	jl     0x427272
  4272d0:	dec    ecx
  4272d1:	scas   al,BYTE PTR es:[edi]
  4272d2:	out    0x5,eax
  4272d4:	sahf   
  4272d5:	ins    BYTE PTR es:[edi],dx
  4272d6:	sti    
  4272d7:	sub    eax,0x6000d29
  4272dc:	mov    esp,0xd00fade
  4272e1:	pusha  
  4272e2:	mov    ebp,0x6c115bfa
  4272e7:	rcr    BYTE PTR [edi+edi*8-0x67],cl
  4272eb:	jl     0x427357
  4272ed:	add    DWORD PTR [ebp+0x6ca621e7],esi
  4272f3:	sti    
  4272f4:	push   ebp
  4272f5:	mov    bl,0x6b
  4272f7:	xchg   ecx,eax
  4272f9:	mov    eax,0x108e756b
  4272fe:	xor    bh,BYTE PTR [edi-0x33]
  427301:	daa    
  427302:	stos   DWORD PTR es:[edi],eax
  427303:	or     al,0xca
  427305:	imul   eax,DWORD PTR [esi],0x53
  427308:	mov    DWORD PTR ds:0x2bc60e61,ecx
  42730e:	lea    edi,[edx+eiz*4-0xb]
  427312:	or     al,0xb
  427314:	or     ch,BYTE PTR [ebx-0x6f79fffa]
  42731a:	fld    DWORD PTR [edi]
  42731c:	outs   dx,BYTE PTR ds:[esi]
  42731d:	repz pop ebx
  42731f:	sti    
  427320:	pop    ecx
  427321:	adc    DWORD PTR [esi+0x75],eax
  427324:	jl     0x427368
  427326:	xor    DWORD PTR [ebx+edx*4+0x13],ebp
  42732a:	nop
  42732b:	popa   
  42732c:	jns    0x42732f
  42732e:	paddsw mm0,QWORD PTR [eax]
  427331:	adc    eax,DWORD PTR [edx+0x28]
  427334:	dec    edx
  427335:	and    bl,0xec
  427338:	aaa    
  427339:	imul   esi,DWORD PTR [eax-0x28],0x71
  42733d:	xor    ch,BYTE PTR [eax+ecx*8+0x69]
  427341:	mov    ebx,DWORD PTR cs:[ecx]
  427344:	add    BYTE PTR [ebx+0x16],cl
  427347:	push   0xa3fe62a3
  42734c:	add    edi,ebp
  42734e:	mov    fs,ecx
  427350:	sti    
  427351:	loope  0x427394
  427353:	test   eax,0xfee3ed61
  427358:	inc    edi
  427359:	test   eax,0x87e86442
  42735e:	cmp    ah,bl
  427360:	mov    ds:0x3a3fea2,al
  427365:	push   ecx
  427366:	sahf   
  427367:	loope  0x42738c
  427369:	xchg   bl,ah
  42736b:	mov    BYTE PTR [edi-0x7f],0x42
  42736f:	push   0xffffffc0
  427371:	xchg   DWORD PTR [esi],esi
  427373:	inc    edx
  427374:	sub    dl,cl
  427376:	and    ebx,0x8b5e3a8c
  42737c:	mov    dl,BYTE PTR [edx+0x3c]
  42737f:	shl    DWORD PTR [edx+0x3a3fe62],cl
  427385:	or     DWORD PTR [edi-0x79012001],eax
  42738b:	jmp    0x9fa09a87
  427390:	les    edi,FWORD PTR [ecx-0x38]
  427393:	push   cs
  427394:	sub    BYTE PTR [esi-0x5df5c935],dl
  42739a:	sub    DWORD PTR [ebx],eax
  42739c:	popa   
  42739d:	ficomp DWORD PTR [esi+0xa]
  4273a0:	xor    DWORD PTR [ebx],ecx
  4273a2:	mov    esi,0x42856925
  4273a7:	or     dl,BYTE PTR [ecx-0xf016e00]
  4273ad:	sahf   
  4273ae:	or     dl,BYTE PTR [esi-0x717a06da]
  4273b4:	add    ecx,DWORD PTR [esi-0x6ee59ea7]
  4273ba:	mov    dl,0x17
  4273bc:	lock jle 0x42739d
  4273bf:	pop    ss
  4273c0:	pop    ss
  4273c1:	jns    0x4273d6
  4273c3:	push   ebp
  4273c4:	or     al,BYTE PTR [edx+0x2cfdd988]
  4273ca:	inc    edx
  4273cb:	adc    eax,0x3aa9a5f7
  4273d0:	push   es
  4273d1:	fnstsw WORD PTR [esi]
  4273d3:	mov    esp,0xbbde0545
  4273d8:	ds frndint 
  4273db:	inc    edx
  4273dc:	test   DWORD PTR [ebp-0x5b7a5557],esp
  4273e2:	shr    DWORD PTR [edi-0x7d],1
  4273e5:	call   0xfc20a350
  4273ea:	lds    edx,FWORD PTR [esp+eax*4]
  4273ed:	xchg   esp,eax
  4273ee:	lea    ebp,[edx]
  4273f0:	inc    esp
  4273f1:	sbb    DWORD PTR [esi],esp
  4273f3:	sbb    DWORD PTR ds:0x583ed82a,esi
  4273f9:	adc    DWORD PTR [edi+0x7dfef124],ebx
  4273ff:	aad    0x75
  427401:	enter  0x120a,0xab
  427405:	lds    ecx,FWORD PTR [ecx+0x55]
  427408:	or     dl,BYTE PTR [edx+0x30]
  42740b:	push   0xfffffff1
  42740d:	push   ebp
  42740e:	add    BYTE PTR [eax+0x4f2fe246],cl
  427414:	sbb    dh,cl
  427416:	bound  edi,QWORD PTR [esi]
  427418:	pusha  
  427419:	data16 add ah,dh
  42741c:	xor    DWORD PTR [esi],esp
  42741e:	les    ebp,FWORD PTR [esi+edi*1+0x44614483]
  427425:	pop    ebp
  427426:	(bad)  
  427427:	cmp    dh,BYTE PTR [eax+0x0]
  42742a:	inc    eax
  42742b:	pop    edi
  42742c:	mov    bl,0x45
  42742e:	and    al,0x6f
  427430:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427431:	faddp  st(3),st
  427433:	adc    BYTE PTR [ecx+ecx*4+0x44],dh
  427437:	dec    ebx
  427438:	or     al,0x54
  42743a:	pop    esi
  42743b:	fs (bad) 
  42743d:	out    0x5d,al
  42743f:	in     eax,dx
  427440:	push   cs
  427441:	icebp  
  427442:	push   esp
  427443:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427444:	xchg   edx,eax
  427445:	loop   0x427412
  427447:	ins    BYTE PTR es:[edi],dx
  427448:	je     0x42743f
  42744a:	test   BYTE PTR [edi-0x6],bl
  42744d:	xor    BYTE PTR [esi-0x64],dl
  427450:	ins    BYTE PTR es:[edi],dx
  427451:	xor    esi,DWORD PTR [ebp-0x1]
  427454:	jmp    0x427469
  427456:	cmp    edx,ebx
  427458:	inc    ebx
  427459:	jbe    0x427475
  42745b:	xlat   BYTE PTR ds:[ebx]
  42745c:	aas    
  42745d:	or     al,BYTE PTR [eax]
  42745f:	pcmpeqb mm6,QWORD PTR [edi+0x10]
  427463:	nop
  427464:	stc    
  427465:	add    al,0xff
  427467:	sbb    cl,BYTE PTR [eax-0xb]
  42746a:	adc    eax,0x311b0b
  42746f:	ss stc 
  427471:	add    BYTE PTR [ecx+0x7f441a00],cl
  427477:	inc    ebp
  427478:	mov    bh,0xcf
  42747a:	jge    0x4274c1
  42747c:	retf   
  42747d:	iret   
  42747e:	pop    edx
  42747f:	call   FWORD PTR [edx]
  427481:	inc    edi
  427482:	and    ecx,ecx
  427484:	xchg   esi,ecx
  427486:	in     eax,dx
  427487:	jmp    DWORD PTR [eax-0x5f07902b]
  42748d:	cli    
  42748e:	or     ebx,DWORD PTR [ebp+0x60]
  427491:	push   0xffffff82
  427493:	adc    eax,0x5d066986
  427498:	inc    esp
  427499:	or     eax,0xecfd550d
  42749e:	fs je  0x427456
  4274a1:	ror    DWORD PTR [edi-0x7c],cl
  4274a4:	inc    esi
  4274a5:	push   ebp
  4274a6:	(bad)  
  4274a7:	push   ecx
  4274a8:	xchg   ebp,eax
  4274a9:	retf   
  4274aa:	or     eax,0xf1357675
  4274af:	cmp    BYTE PTR [ebx-0x51ea26db],bh
  4274b5:	sub    DWORD PTR ds:0xd1c3e600,ecx
  4274bb:	movaps XMMWORD PTR [esi],xmm2
  4274be:	add    ebx,edi
  4274c0:	fwait
  4274c1:	adc    DWORD PTR [eax+0x15],edx
  4274c4:	stos   BYTE PTR es:[edi],al
  4274c5:	test   ah,0xff
  4274c8:	dec    BYTE PTR ds:0xd9388fd
  4274ce:	call   0x9245:0x99d99e45
  4274d5:	fnstenv [esi+0x217b00fa]
  4274db:	sbb    al,0xc9
  4274dd:	fiadd  WORD PTR [ecx-0x4d1e04af]
  4274e3:	mov    edi,eax
  4274e5:	(bad)  
  4274e7:	pop    es
  4274e8:	pop    ebp
  4274e9:	sar    DWORD PTR ds:0x29461586,1
  4274ef:	retf   0x9abd
  4274f2:	sub    DWORD PTR [edx+0x69a7aa86],esi
  4274f8:	clc    
  4274f9:	add    eax,0x9e522015
  4274fe:	repnz mov ebx,0x4d9ca1f9
  427504:	je     0x427519
  427506:	fcom   DWORD PTR [esi+0x66]
  427509:	pop    esi
  42750a:	jbe    0x4274d5
  42750c:	and    edi,DWORD PTR [edx+0x42]
  42750f:	sub    dl,bh
  427511:	lea    edx,[edi+0x11c9b5f6]
  427517:	out    dx,al
  427518:	pop    ss
  427519:	xchg   esp,eax
  42751a:	and    bl,0x80
  42751d:	inc    edx
  42751e:	aas    
  42751f:	mov    al,ds:0x1b3aa5c8
  427524:	add    al,0x86
  427526:	inc    edx
  427527:	int3   
  427528:	adc    DWORD PTR [ebp-0x68],ecx
  42752b:	iret   
  42752c:	mov    bl,0x61
  42752e:	sahf   
  42752f:	pop    ds
  427530:	pop    esi
  427531:	cmp    eax,0x9228174c
  427536:	xchg   esi,eax
  427537:	mov    edi,0xf366ba1a
  42753c:	xlat   BYTE PTR ds:[ebx]
  42753d:	add    BYTE PTR [edi-0x79fc1c66],cl
  427543:	loop   0x4275b4
  427545:	fsub   DWORD PTR [ebp+0x2a]
  427548:	js     0x427522
  42754a:	sub    ah,BYTE PTR gs:[eax-0x29]
  42754e:	adc    DWORD PTR [ecx],0x829ab7ee
  427554:	jecxz  0x4274e0
  427556:	jb     0x4275be
  427558:	repz mov bh,BYTE PTR [edx+0x66]
  42755c:	test   DWORD PTR [esi-0x4bfc99be],0x24078712
  427566:	ss js  0x4275a1
  427569:	xlat   BYTE PTR ds:[ebx]
  42756a:	mov    DWORD PTR [ebp+0x2a],edx
  42756d:	ins    BYTE PTR es:[edi],dx
  42756e:	popa   
  42756f:	push   cs
  427570:	sub    BYTE PTR [ebp+0x41],bl
  427573:	or     dl,BYTE PTR [eax]
  427575:	xlat   BYTE PTR ds:[ebx]
  427576:	popf   
  427577:	mov    edi,0x1d7e279e
  42757c:	in     al,0x88
  42757e:	inc    ebx
  42757f:	ds or  bh,dl
  427582:	jns    0x427595
  427584:	jbe    0x42757d
  427586:	pushf  
  427587:	xchg   edi,eax
  427588:	or     bl,cl
  42758a:	aad    0xc
  42758c:	ja     0x42756f
  42758e:	sub    dh,BYTE PTR [edi]
  427590:	stos   BYTE PTR es:[edi],al
  427591:	cld    
  427592:	inc    ebp
  427593:	adc    DWORD PTR [edi+0x72],ecx
  427596:	loopne 0x427607
  427598:	int3   
  427599:	std    
  42759a:	test   DWORD PTR [edi-0x7b],esi
  42759d:	mov    ebp,0x6af22606
  4275a2:	add    cl,dh
  4275a4:	pop    esi
  4275a5:	pop    eax
  4275a6:	shl    DWORD PTR [edi+edi*2],1
  4275a9:	lock mov dh,0x9
  4275ac:	add    dh,BYTE PTR [esi+0x34]
  4275af:	ja     0x4275c5
  4275b1:	rcl    DWORD PTR fs:[eax],1
  4275b4:	xchg   BYTE PTR [esi],ah
  4275b6:	in     eax,dx
  4275b7:	pushf  
  4275b8:	xchg   edi,eax
  4275b9:	(bad)  
  4275ba:	sbb    edi,DWORD PTR [ecx]
  4275bc:	jae    0x427618
  4275be:	mov    ?,WORD PTR [eax]
  4275c0:	push   ebp
  4275c1:	sbb    BYTE PTR [ecx],ch
  4275c3:	mov    dl,BYTE PTR [ecx-0x793d123a]
  4275c9:	es loope 0x427629
  4275cc:	inc    edx
  4275cd:	or     ch,cl
  4275cf:	sahf   
  4275d0:	popa   
  4275d1:	icebp  
  4275d2:	fcom   QWORD PTR [ecx-0x39d81d8e]
  4275d8:	or     dh,cl
  4275da:	adc    dh,cl
  4275dc:	fs push ss
  4275de:	aad    0xa1
  4275e0:	dec    ebx
  4275e1:	jbe    0x4275f0
  4275e3:	ficom  DWORD PTR [eax+edx*1+0xa4285d1]
  4275ea:	mov    DWORD PTR [edx],esi
  4275ec:	xchg   esi,eax
  4275ed:	shr    DWORD PTR es:[edx],1
  4275f0:	xchg   esi,eax
  4275f1:	add    DWORD PTR es:[ebx-0x69],esp
  4275f5:	add    bl,BYTE PTR [esi]
  4275f7:	mov    al,0x9c
  4275f9:	pop    ss
  4275fa:	test   eax,0xc575bb85
  4275ff:	mov    ch,0xb9
  427601:	jne    0x427603
  427603:	rcr    DWORD PTR [eax],cl
  427605:	jle    0x42764b
  427607:	add    bl,al
  427609:	fs pop edx
  42760b:	(bad)  
  42760c:	jecxz  0x427676
  42760e:	sub    dl,BYTE PTR [eax-0xf]
  427611:	ins    DWORD PTR es:[edi],dx
  427612:	ja     0x42761c
  427614:	pushf  
  427615:	jge    0x4275f9
  427617:	(bad)  
  427618:	fs ins BYTE PTR es:[edi],dx
  42761a:	cmc    
  42761b:	adc    DWORD PTR [edi+0x6c],0x77
  42761f:	sbb    al,0xca
  427621:	add    ch,BYTE PTR ds:0x89483408
  427627:	inc    ebp
  427628:	imul   ebp,DWORD PTR [ebp+0x77],0x18
  42762c:	sbb    dl,dh
  42762e:	sbb    al,0xff
  427630:	xchg   edx,eax
  427631:	push   ss
  427632:	inc    ecx
  427633:	jmp    DWORD PTR [edx-0x28ea0ac2]
  427639:	adc    DWORD PTR [ecx],esi
  42763b:	add    BYTE PTR [ecx-0x41],bh
  42763e:	out    0x5d,al
  427640:	fst    QWORD PTR [edx]
  427642:	icebp  
  427643:	push   edx
  427644:	cmp    DWORD PTR [edi-0x2dd4db8b],0x131b15f3
  42764e:	xor    DWORD PTR [eax],eax
  427650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427651:	dec    esi
  427652:	loop   0x42761b
  427654:	ds push 0xfffffff5
  427657:	test   BYTE PTR [edi+0x18572cf2],ch
  42765d:	cmp    eax,esi
  42765f:	inc    ebx
  427660:	(bad)  
  427662:	repz adc eax,0x31183b
  427668:	aaa    
  427669:	dec    edx
  42766a:	(bad)  
  42766c:	add    BYTE PTR [eax+0x13fff1c7],bl
  427672:	inc    ebx
  427673:	loop   0x42760d
  427675:	cdq    
  427676:	imul   esi,ebp,0x57
  427679:	cwde   
  42767a:	adc    ecx,esp
  42767c:	adc    al,BYTE PTR [esi+0x485b0cd9]
  427682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427683:	dec    ecx
  427684:	push   edi
  427685:	les    ebx,FWORD PTR ds:0x3e0d550d
  42768b:	pop    esi
  42768c:	nop
  42768d:	aaa    
  42768e:	pop    ss
  42768f:	push   esp
  427690:	test   dh,al
  427692:	xchg   ebp,eax
  427693:	push   ds
  427694:	das    
  427695:	inc    esi
  427696:	(bad)  
  427697:	retf   
  427698:	or     esi,edx
  42769a:	cmp    ecx,DWORD PTR [edi]
  42769c:	inc    ebp
  42769d:	xchg   esi,eax
  42769e:	outs   dx,DWORD PTR ds:[esi]
  42769f:	repz cmp bl,al
  4276a2:	adc    eax,0x29b617c1
  4276a7:	push   ebp
  4276a8:	jne    0x42771c
  4276aa:	sahf   
  4276ab:	retf   0x5107
  4276ae:	dec    esi
  4276af:	idiv   dl
  4276b1:	shr    ebp,cl
  4276b3:	fs dec ecx
  4276b5:	cmp    eax,ebp
  4276b7:	push   ebx
  4276b8:	jg     0x4276f8
  4276ba:	mov    al,0xd9
  4276bc:	add    dl,bl
  4276be:	mov    eax,0x59939029
  4276c3:	push   es
  4276c4:	pop    ebp
  4276c5:	inc    esp
  4276c6:	jmp    0xbd4fcbd7
  4276cb:	mov    edx,0x542ac1e7
  4276d0:	sti    
  4276d1:	add    ch,bh
  4276d3:	adc    eax,0xecc68409
  4276d8:	sbb    eax,0x29f4f085
  4276dd:	xchg   DWORD PTR [eax+0xd],ebx
  4276e0:	mov    cl,dh
  4276e2:	jb     0x427703
  4276e4:	add    BYTE PTR [edx+0x7e],0x94
  4276e8:	add    eax,0xf9d4cf85
  4276ed:	cli    
  4276ee:	pop    ebx
  4276ef:	in     eax,dx
  4276f0:	fiadd  WORD PTR [eax]
  4276f2:	ss stos BYTE PTR es:[edi],al
  4276f4:	mov    dh,0x8c
  4276f6:	dec    ebx
  4276f7:	inc    edx
  4276f8:	sti    
  4276f9:	imul   eax,DWORD PTR [ebx+0x315a1017],0xa
  427700:	sbb    al,dl
  427702:	jns    0x427713
  427704:	xchg   esi,eax
  427705:	out    dx,eax
  427706:	pushf  
  427707:	xchg   esp,eax
  427708:	shl    DWORD PTR [ecx+0x5afb949c],cl
  42770e:	jnp    0x4276c6
  427710:	int    0xc3
  427712:	mov    DWORD PTR [esi+edi*2+0x45],ebp
  427716:	xchg   esi,eax
  427717:	inc    edx
  427718:	lea    ebp,cs:[edx+0x1b]
  42771c:	in     eax,0xb2
  42771e:	outs   dx,DWORD PTR ds:[esi]
  42771f:	push   cs
  427720:	pop    edi
  427721:	inc    esp
  427722:	repnz sub eax,eax
  427725:	iret   
  427726:	jne    0x4276e7
  427728:	sbb    eax,0xb040e00c
  42772d:	iret   
  42772e:	jge    0x4276c8
  427730:	jecxz  0x42771f
  427732:	dec    ecx
  427733:	lods   al,BYTE PTR es:[esi]
  427735:	push   edx
  427736:	add    BYTE PTR ds:0x3d5c640e,bh
  42773c:	cwde   
  42773d:	call   0x7baaa3f8
  427742:	out    dx,eax
  427743:	imul   eax,DWORD PTR [edx+0x1e],0xe427646
  42774a:	lea    ebp,[edx]
  42774c:	sbb    edx,DWORD PTR [ebp+0x5f0e0fb4]
  427752:	inc    esp
  427753:	xchg   edx,eax
  427754:	sbb    BYTE PTR [ecx],0xb1
  427757:	cmp    al,0x3f
  427759:	pop    ds
  42775a:	vpcmpeqb xmm2,xmm0,XMMWORD PTR [eax-0x11]
  42775f:	fnsave [eax]
  427761:	mov    ds:0xeb980103,eax
  427766:	imul   eax,ecx,0x1e
  427769:	dec    eax
  42776a:	pop    ecx
  42776b:	pop    ecx
  42776c:	or     dh,BYTE PTR [eax]
  42776e:	shr    BYTE PTR [edi-0x67],1
  427771:	or     ch,BYTE PTR [ecx]
  427773:	call   0xa4d:0x4605060d
  42777a:	push   0xffffffda
  42777c:	xor    DWORD PTR [ebx],ecx
  42777e:	xchg   esp,eax
  42777f:	jle    0x427746
  427781:	inc    ecx
  427782:	stc    
  427783:	add    cl,BYTE PTR [esi+eax*1-0x7abc2e17]
  42778a:	test   eax,0xf146bb79
  42778f:	(bad)  
  427790:	or     BYTE PTR [edi],dl
  427792:	stc    
  427793:	xchg   ebx,eax
  427794:	dec    ebp
  427795:	or     cl,BYTE PTR [esi+0xcf16e3f]
  42779b:	add    BYTE PTR [esi],ah
  42779d:	aaa    
  42779e:	dec    edx
  42779f:	jmp    0xd79c3a81
  4277a4:	into   
  4277a5:	(bad)  
  4277a6:	leave  
  4277a7:	push   ebp
  4277a8:	(bad)  
  4277a9:	lds    edi,FWORD PTR ds:0xb61a8a0d
  4277af:	iret   
  4277b0:	scas   al,BYTE PTR es:[edi]
  4277b1:	or     ecx,esi
  4277b3:	or     al,0x6
  4277b5:	aaa    
  4277b6:	dec    edx
  4277b7:	jmp    0xa79d1269
  4277bc:	faddp  st(6),st
  4277be:	leave  
  4277bf:	adc    eax,0xcd3dc57d
  4277c4:	jge    0x4277e0
  4277c6:	mov    ?,WORD PTR [edi-0x42]
  4277c9:	or     ecx,esi
  4277cb:	int3   
  4277cc:	xchg   ecx,eax
  4277cd:	aaa    
  4277ce:	dec    edx
  4277cf:	jmp    0x6b203bb4
  4277d4:	xor    BYTE PTR [ecx],bh
  4277d6:	or     esi,esp
  4277d8:	test   BYTE PTR [ebx-0x6a060291],0x1b
  4277df:	push   ecx
  4277e0:	les    edi,FWORD PTR [eax+esi*8+0x56]
  4277e4:	imul   eax,DWORD PTR [edx],0x7f12e176
  4277ea:	sbb    al,BYTE PTR [eax]
  4277ec:	aaa    
  4277ed:	repz loop 0x4277ef
  4277f0:	nop
  4277f1:	aam    0xf3
  4277f3:	and    eax,0x311c63
  4277f8:	sbb    bh,BYTE PTR [esi-0x6e6c7e23]
  4277fe:	pop    es
  4277ff:	add    BYTE PTR [eax],al
  427801:	lahf   
  427802:	rcr    BYTE PTR [ebx+0x6a],cl
  427805:	scas   eax,DWORD PTR es:[edi]
  427806:	push   ds
  427807:	icebp  
  427808:	push   edx
  427809:	and    al,0x69
  42780b:	cmc    
  42780c:	adc    eax,0x3112db
  427811:	sbb    al,0x4d
  427813:	(bad)  
  427814:	jg     0x427828
  427816:	cmp    DWORD PTR [edx],ecx
  427818:	jne    0x427855
  42781a:	(bad)  
  42781b:	outs   dx,BYTE PTR ds:[esi]
  42781c:	or     al,0x6f
  42781e:	cld    
  42781f:	sub    eax,DWORD PTR [ebp-0xf00cb0]
  427825:	retf   0x893a
  427828:	mov    DWORD PTR [edi+0x60],0xbe40fe40
  42782f:	inc    esi
  427830:	cld    
  427831:	jmp    0x7773:0x68127486
  427838:	or     al,0x47
  42783a:	xchg   esp,eax
  42783b:	dec    ebx
  42783c:	(bad)  
  42783d:	loopne 0x4277f6
  42783f:	stc    
  427840:	mov    DWORD PTR [edx-0x750978c6],edx
  427846:	(bad)  
  427847:	pop    ds
  427848:	rol    BYTE PTR [esi],0xae
  42784b:	or     DWORD PTR [eax],eax
  42784d:	das    
  42784e:	inc    ebp
  42784f:	mov    esp,0x7cf81745
  427854:	push   cs
  427855:	addr16 icebp 
  427857:	jecxz  0x4277e6
  427859:	stos   BYTE PTR es:[edi],al
  42785a:	cmp    bl,BYTE PTR [edx+0x68]
  42785d:	mov    dh,0x46
  42785f:	or     al,BYTE PTR [eax]
  427861:	push   esp
  427862:	cmp    eax,0x8600457f
  427867:	and    eax,0x19cc67bd
  42786c:	or     eax,0x62acee00
  427871:	cli    
  427872:	rcl    DWORD PTR [eax-0x322f7aaa],1
  427878:	cmp    al,0x87
  42787a:	dec    ebx
  42787b:	in     eax,dx
  42787c:	sahf   
  42787d:	out    0xd7,eax
  42787f:	retf   0xfb56
  427882:	jmp    esi
  427884:	pop    eax
  427885:	test   esi,eax
  427887:	mov    ah,0x4
  427889:	push   edx
  42788a:	scas   al,BYTE PTR es:[edi]
  42788b:	aaa    
  42788c:	(bad)  
  42788d:	stc    
  42788e:	cdq    
  42788f:	xor    BYTE PTR [esi+0x5389d38d],cl
  427895:	sti    
  427896:	mov    DWORD PTR [ecx+0x11],eax
  427899:	push   ecx
  42789a:	sbb    BYTE PTR [ebx+eiz*8],0xff
  42789e:	or     bl,BYTE PTR [esi-0x138e0592]
  4278a4:	mov    esp,0x2425c386
  4278a9:	inc    ebp
  4278aa:	bound  esp,QWORD PTR [eax-0x7c2617b9]
  4278b0:	push   es
  4278b1:	add    ch,bh
  4278b3:	add    BYTE PTR [esi+0x7d],bh
  4278b6:	dec    edx
  4278b7:	sahf   
  4278b8:	pop    eax
  4278b9:	je     0x42790b
  4278bb:	cdq    
  4278bc:	rol    BYTE PTR [edi],cl
  4278be:	xchg   BYTE PTR [eax+0xdc686f0],dl
  4278c4:	jle    0x4278c5
  4278c6:	mov    ch,0xa
  4278c8:	pop    eax
  4278c9:	xor    eax,DWORD PTR [eax]
  4278cb:	cs ja  0x42789b
  4278ce:	stc    
  4278cf:	sbb    DWORD PTR [esi+ebx*2],ebp
  4278d2:	pushf  
  4278d3:	(bad)  
  4278d4:	mov    ebx,DWORD PTR [eax+0x7f]
  4278d7:	mov    ds:0xe680d95,eax
  4278dc:	es or  eax,0x5e420b00
  4278e2:	sar    ebx,cl
  4278e4:	or     dl,BYTE PTR [eax-0x17]
  4278e7:	jmp    0x9632d166
  4278ec:	xor    al,0xa3
  4278ee:	add    eax,DWORD PTR [ecx]
  4278f0:	test   edi,esi
  4278f2:	or     dl,0x3d
  4278f5:	xchg   ebx,eax
  4278f6:	lods   eax,DWORD PTR ds:[esi]
  4278f7:	arpl   WORD PTR [eax+0x6a],ax
  4278fa:	ret    0xbd89
  4278fd:	mov    ebx,0x93b951ff
  427902:	pop    es
  427903:	sahf   
  427904:	fidiv  DWORD PTR [eax-0x624952ab]
  42790a:	push   edi
  42790b:	cmp    eax,0x8e412a6c
  427910:	inc    edx
  427911:	or     ch,cl
  427913:	jge    0x42792f
  427915:	lods   eax,DWORD PTR ds:[esi]
  427916:	ret    
  427917:	(bad)
  42791b:	jmp    0x42795f
  42791d:	cdq    
  42791e:	push   esi
  42791f:	xchg   ebx,eax
  427920:	dec    esi
  427921:	icebp  
  427922:	ret    
  427923:	jno    0x4278ea
  427925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427926:	or     BYTE PTR [ecx],ch
  427928:	jno    0x427996
  42792a:	shl    BYTE PTR [ebp+0xc66c3a],1
  427930:	popf   
  427931:	mov    bh,0x20
  427933:	(bad)
  427937:	sbb    al,0xb4
  427939:	sbb    al,BYTE PTR [ebp+0x4]
  42793c:	xchg   BYTE PTR [edx+0x19],al
  42793f:	ins    BYTE PTR es:[edi],dx
  427940:	jbe    0x4278c4
  427942:	test   eax,0x31026155
  427947:	inc    edx
  427948:	add    BYTE PTR [edx+0x2e],0x89
  42794c:	xor    dh,BYTE PTR [edx+esi*1-0x77]
  427950:	test   BYTE PTR [ebp+0x42878462],bh
  427956:	jecxz  0x427908
  427958:	mov    ah,0x9
  42795a:	or     bh,ah
  42795c:	lea    esi,[edi+0x7d6a714e]
  427962:	pushf  
  427963:	jmp    0xd60c37ed
  427968:	xchg   edi,eax
  427969:	or     eax,0x50f5577
  42796e:	icebp  
  42796f:	aam    0x3d
  427971:	or     eax,0xfc5df577
  427976:	or     ecx,ebp
  427978:	test   DWORD PTR ds:0xb0f3177,ecx
  42797e:	loop   0x4279bb
  427980:	xchg   ebx,eax
  427981:	or     al,0xf1
  427983:	jb     0x427935
  427985:	sar    BYTE PTR [esi],0xf1
  427988:	inc    dl
  42798a:	mov    eax,ebp
  42798c:	test   DWORD PTR [edx+0x59],eax
  42798f:	add    DWORD PTR [ecx+edi*4],ecx
  427992:	or     ecx,ebp
  427994:	add    BYTE PTR [esi+0x2],dh
  427997:	xchg   esi,edi
  427999:	sub    BYTE PTR [ebp-0x5c16937],0xcb
  4279a0:	loope  0x427927
  4279a2:	outs   dx,DWORD PTR ds:[esi]
  4279a3:	test   ebp,edx
  4279a5:	push   es
  4279a6:	push   ss
  4279a7:	cmp    bh,BYTE PTR [edx]
  4279a9:	(bad)  
  4279aa:	jmp    0x7b0918af
  4279af:	pop    eax
  4279b0:	movlps QWORD PTR ss:[esi-0x10],xmm6
  4279b5:	cmp    eax,0x8a7048e
  4279ba:	or     eax,0x341c264
  4279bf:	inc    edi
  4279c0:	lods   eax,DWORD PTR ds:[esi]
  4279c1:	sub    eax,0x40a60a9f
  4279c6:	or     eax,0xa072247f
  4279cb:	or     al,BYTE PTR [ecx-0x16f59a13]
  4279d1:	push   cs
  4279d2:	inc    esp
  4279d3:	test   DWORD PTR [eax],eax
  4279d5:	lahf   
  4279d6:	lds    ecx,FWORD PTR [edx]
  4279d8:	add    BYTE PTR [edi],bl
  4279da:	sar    BYTE PTR [esi],0xd0
  4279dd:	sahf   
  4279de:	outs   dx,DWORD PTR ds:[esi]
  4279df:	ja     0x4279ed
  4279e1:	push   0x99e808f8
  4279e6:	xchg   ebp,eax
  4279e7:	or     al,BYTE PTR [eax]
  4279e9:	je     0x427a58
  4279eb:	xchg   edi,edi
  4279ed:	ret    
  4279ee:	pop    ss
  4279ef:	inc    eax
  4279f0:	push   edi
  4279f1:	inc    edi
  4279f2:	(bad)  
  4279f3:	repz dec DWORD PTR [eax-0x45]
  4279f7:	ror    DWORD PTR [ebx+0xa1ae000],1
  4279fd:	mov    ebp,DWORD PTR [eax+0x6e]
  427a00:	sbb    cl,BYTE PTR [edx-0x74cb6594]
  427a06:	mov    eax,ds:0x9e8089b9
  427a0b:	inc    esp
  427a0c:	or     cl,BYTE PTR [ebp-0x72a4bf16]
  427a12:	cli    
  427a13:	cmp    al,0x5b
  427a15:	call   DWORD PTR [edx]
  427a17:	cmp    eax,0x9d5c8a5a
  427a1c:	jp     0x4279ad
  427a1e:	outs   dx,DWORD PTR ds:[esi]
  427a1f:	inc    esp
  427a20:	xchg   al,al
  427a22:	repz adc ah,dh
  427a25:	jne    0x427aa2
  427a27:	mov    esp,ecx
  427a29:	call   edx
  427a2b:	push   es
  427a2c:	inc    eax
  427a2d:	call   0x4cbe89
  427a32:	dec    eax
  427a33:	jmp    0xc395:0x441f8508
  427a3a:	aaa    
  427a3b:	ss xor eax,0xca67f8fe
  427a41:	xor    ch,bh
  427a43:	rcl    DWORD PTR [edx+0x5b],cl
  427a46:	test   BYTE PTR [eax-0x788dfffe],0xde
  427a4d:	add    DWORD PTR [esi+0x2a7f3db5],0x16
  427a54:	mov    eax,0xd2c0b951
  427a59:	or     edi,ebp
  427a5b:	mov    DWORD PTR [ecx+0x45],esi
  427a5e:	add    BYTE PTR [esi+0x5a8d0643],dl
  427a64:	std    
  427a65:	sub    al,0xe8
  427a67:	setg   BYTE PTR [ebp-0x5]
  427a6b:	(bad)  
  427a6c:	(bad)  [eax]
  427a6e:	or     al,0xb
  427a70:	pop    edx
  427a71:	rol    DWORD PTR [edi],cl
  427a73:	add    eax,0xade95d62
  427a78:	sbb    DWORD PTR ds:0x14c7fb00,ecx
  427a7e:	das    
  427a7f:	(bad)  [eax-0x129da38c]
  427a85:	pop    ebx
  427a86:	adc    eax,0xffcd0ba2
  427a8b:	js     0x427afc
  427a8d:	ret    
  427a8e:	pop    es
  427a8f:	dec    esi
  427a90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a91:	sub    DWORD PTR [eax+0x13],ecx
  427a94:	mov    BYTE PTR [eax+0x4946ec2],cl
  427a9a:	aaa    
  427a9b:	inc    edx
  427a9c:	std    
  427a9d:	in     al,0x6e
  427a9f:	jmp    0xfcde:0xd0bd210
  427aa6:	addr16 aas 
  427aa8:	sbb    DWORD PTR ds:0x62f25e00,ecx
  427aae:	cli    
  427aaf:	popa   
  427ab0:	xchg   ebp,eax
  427ab1:	dec    ebp
  427ab2:	je     0x427a6a
  427ab4:	xor    bh,ah
  427ab6:	or     bh,bl
  427ab8:	fdiv   DWORD PTR [esp+eax*2-0x5e]
  427abc:	jmp    0xd747a710
  427ac1:	hlt    
  427ac2:	xchg   BYTE PTR [eax],al
  427ac4:	adc    BYTE PTR [ecx+ecx*8],0x23
  427ac8:	mov    es,WORD PTR [edx+0x14]
  427acb:	push   cs
  427acc:	sub    eax,0x29ffc78e
  427ad1:	mov    cs,WORD PTR [ebp-0x5d41e2af]
  427ad7:	xlat   BYTE PTR ds:[ebx]
  427ad8:	bound  eax,QWORD PTR [edi]
  427ada:	out    dx,al
  427adb:	inc    DWORD PTR [eax]
  427add:	jge    0x427ab2
  427adf:	fcmovne st,st(3)
  427ae1:	inc    ecx
  427ae2:	jecxz  0x427ae7
  427ae4:	out    dx,al
  427ae5:	ror    DWORD PTR [eax+0x22bded51],cl
  427aeb:	xlat   BYTE PTR ds:[ebx]
  427aec:	mov    ds,WORD PTR [edx]
  427aee:	sbb    edx,DWORD PTR [edx-0x23]
  427af1:	push   es
  427af2:	int    0xf3
  427af4:	or     bh,BYTE PTR [esi+0x7]
  427af7:	lock inc ecx
  427af9:	jo     0x427b43
  427afb:	clc    
  427afc:	cdq    
  427afd:	xor    BYTE PTR [ebx+0x63eb7103],ah
  427b03:	inc    edi
  427b04:	mov    al,BYTE PTR [ebx+0x129b5298]
  427b0a:	cmc    
  427b0b:	ret    
  427b0c:	test   eax,0xe65be398
  427b11:	xchg   esi,eax
  427b12:	jecxz  0x427b17
  427b14:	sbb    DWORD PTR [esi-0x3c6e0839],ebx
  427b1a:	or     eax,DWORD PTR [ebx+edx*1]
  427b1d:	sub    eax,0x4089d063
  427b22:	outs   dx,BYTE PTR ds:[esi]
  427b23:	jmp    0x427ba1
  427b25:	pop    edi
  427b27:	repz add BYTE PTR [edi+ecx*4-0x1],ch
  427b2c:	repz popa 
  427b2e:	ja     0x427b44
  427b30:	add    al,0x86
  427b32:	sbb    edx,ebp
  427b34:	jle    0x427b08
  427b36:	pop    esi
  427b37:	sti    
  427b38:	pop    ebx
  427b39:	sub    al,0x8
  427b3b:	enter  0x151,0x8f
  427b3f:	pop    es
  427b40:	add    BYTE PTR ds:0x91c10a4d,bh
  427b46:	dec    eax
  427b47:	lock scas al,BYTE PTR es:[edi]
  427b49:	in     al,dx
  427b4a:	sbb    eax,0x9d7e721
  427b4f:	jg     0x427b66
  427b51:	outs   dx,BYTE PTR ds:[esi]
  427b52:	cs loop 0x427b50
  427b55:	mov    al,ds:0xcb62f108
  427b5a:	imul   edx,DWORD PTR [eax+0x22],0xab4f1f8b
  427b61:	xchg   BYTE PTR [edx+0x58],al
  427b64:	push   ds
  427b65:	jnp    0x427b71
  427b67:	jg     0x427b5f
  427b69:	in     eax,dx
  427b6a:	sbb    eax,0x957649f
  427b6f:	jg     0x427b47
  427b71:	in     eax,dx
  427b72:	sbb    eax,0x93754a7
  427b77:	jg     0x427b1f
  427b79:	ins    DWORD PTR es:[edi],dx
  427b7a:	jb     0x427b6d
  427b7c:	fsubr  QWORD PTR ds:0x42e94a34
  427b82:	mov    DWORD PTR [esi],eax
  427b84:	ins    BYTE PTR es:[edi],dx
  427b85:	push   edi
  427b86:	mov    cs,WORD PTR [ecx]
  427b88:	xchg   esi,eax
  427b89:	push   esi
  427b8a:	das    
  427b8b:	stos   BYTE PTR es:[edi],al
  427b8c:	sti    
  427b8d:	add    ch,al
  427b8f:	add    eax,0x394abf50
  427b94:	mov    eax,0x291dce1
  427b99:	mov    al,ds:0xb37f39b8
  427b9e:	popf   
  427b9f:	sbb    al,0xd
  427ba1:	ins    BYTE PTR es:[edi],dx
  427ba2:	inc    eax
  427ba3:	cmp    eax,0x41512087
  427ba8:	cmp    al,0x29
  427baa:	sar    DWORD PTR [edi-0x7b],cl
  427bad:	cmp    BYTE PTR [esi+0x70],bh
  427bb0:	test   DWORD PTR [ebp-0x52],edx
  427bb3:	cmp    al,BYTE PTR [ebx+0x79d186ff]
  427bb9:	jmp    0x865e:0x49d186
  427bc0:	pop    ebx
  427bc1:	or     al,0x30
  427bc3:	loop   0x427b90
  427bc5:	test   DWORD PTR ds:0x668b0fed,ebx
  427bcb:	push   es
  427bcc:	cmp    cl,al
  427bce:	mov    BYTE PTR [edx],dl
  427bd0:	sub    al,cl
  427bd2:	and    al,0x83
  427bd4:	add    eax,0xefcafe42
  427bd9:	iret   
  427bda:	dec    ebp
  427bdb:	jae    0x427c53
  427bdd:	and    al,0x2b
  427bdf:	mov    BYTE PTR ds:0x1c30daff,bh
  427be5:	inc    eax
  427be6:	out    dx,eax
  427be7:	mov    ebp,0x3e040cc5
  427bec:	jno    0x427c15
  427bee:	fbstp  TBYTE PTR [eax-0x52ffa1f6]
  427bf4:	or     ecx,esi
  427bf6:	push   esp
  427bf7:	fs gs pop ebx
  427bfa:	push   ecx
  427bfb:	mov    al,0xaa
  427bfd:	inc    edx
  427bfe:	add    ebx,DWORD PTR [eax+ebp*2+0x62]
  427c02:	push   esi
  427c03:	sti    
  427c04:	adc    BYTE PTR [edx+0x49],al
  427c07:	sti    
  427c08:	cmp    DWORD PTR [eax],esp
  427c0a:	rol    BYTE PTR [esi-0x26],0x9
  427c0e:	add    BYTE PTR [edi+0x74187a83],bl
  427c14:	ds jg  0x427c87
  427c17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c18:	test   DWORD PTR [edx],eax
  427c1a:	or     DWORD PTR [edx],0x79
  427c1d:	or     dl,BYTE PTR [ebx-0x18]
  427c20:	test   DWORD PTR [ebx+0xa406e8c],esi
  427c26:	lea    edx,[edi]
  427c28:	sub    BYTE PTR [ecx-0x1],al
  427c2b:	pop    edx
  427c2c:	add    BYTE PTR fs:[eax+0x5f],al
  427c30:	mov    DWORD PTR [esp+ecx*1-0x16],ecx
  427c34:	jle    0x427cac
  427c36:	adc    al,BYTE PTR [esi-0x49f82814]
  427c3c:	add    DWORD PTR [ecx+0x6efd483d],edx
  427c42:	inc    ebp
  427c43:	ds xchg ecx,eax
  427c45:	enter  0xf07,0x57
  427c49:	pop    edx
  427c4a:	dec    edi
  427c4b:	xor    edi,ebp
  427c4d:	pop    esp
  427c4e:	push   cs
  427c4f:	(bad)  
  427c50:	sbb    DWORD PTR [ebp+edi*2+0x4d741a1e],ecx
  427c57:	add    BYTE PTR [esi+0x12558b44],cl
  427c5d:	das    
  427c5e:	repz jle 0x427c04
  427c61:	mov    ebp,0xeb66805
  427c66:	or     eax,0xa5156c00
  427c6b:	out    0xca,eax
  427c6d:	scas   eax,DWORD PTR es:[edi]
  427c6e:	aas    
  427c6f:	sti    
  427c70:	mov    ah,0x59
  427c72:	push   ebp
  427c73:	aas    
  427c74:	and    BYTE PTR [edx],ch
  427c76:	sar    edi,cl
  427c78:	fld    st(3)
  427c7a:	rol    BYTE PTR [ebx],cl
  427c7c:	cs daa 
  427c7e:	and    eax,0x406016e8
  427c83:	sti    
  427c84:	or     bl,BYTE PTR [edx-0x2e]
  427c87:	and    al,0xd
  427c89:	xlat   BYTE PTR ds:[ebx]
  427c8a:	inc    eax
  427c8b:	xchg   DWORD PTR [ebx+0x51],ebx
  427c8e:	jne    0x427cdd
  427c90:	jle    0x427c56
  427c92:	mov    dh,0xe7
  427c94:	add    al,BYTE PTR [eax+0x5a02fb40]
  427c9a:	rcl    BYTE PTR [eax],cl
  427c9c:	std    
  427c9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c9e:	hlt    
  427c9f:	push   edx
  427ca0:	sbb    al,0x15
  427ca2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ca3:	mov    ebx,ds
  427ca5:	adc    DWORD PTR [ebp-0x47],edx
  427ca8:	pop    edi
  427ca9:	or     eax,DWORD PTR [eax-0x7a]
  427cac:	dec    esi
  427cad:	adc    al,0xd2
  427caf:	neg    DWORD PTR [esi+0x42]
  427cb2:	mov    ecx,0x7d035c0f
  427cb7:	inc    edx
  427cb8:	mov    ebp,0x3d3967
  427cbd:	adc    BYTE PTR [esi],bh
  427cbf:	jecxz  0x427c75
  427cc1:	mov    dh,0x6d
  427cc3:	jl     0x427ca4
  427cc5:	sub    bl,BYTE PTR gs:[ecx]
  427cc8:	mov    bh,0x0
  427cca:	or     ah,BYTE PTR [esi-0x2a]
  427ccd:	imul   ebp,DWORD PTR [edx+ebp*2-0x29],0xf8a83265
  427cd5:	sub    eax,0x1042330
  427cda:	jge    0x427cbb
  427cdc:	or     al,ch
  427cde:	cmp    bl,BYTE PTR [ecx]
  427ce0:	or     al,BYTE PTR [esi+edi*2-0x41]
  427ce4:	and    eax,DWORD PTR [edi+0x107f7b5]
  427cea:	cmp    al,0x14
  427cec:	jge    0x427d68
  427cee:	pop    esi
  427cef:	xlat   BYTE PTR ds:[ebx]
  427cf0:	mov    dh,al
  427cf2:	lea    esi,[edi+0x5072e1d9]
  427cf8:	clc    
  427cf9:	mov    DWORD PTR [edi],ebp
  427cfb:	mov    ds:0xe2409303,eax
  427d00:	add    eax,DWORD PTR [esi-0x26ee0d73]
  427d06:	add    dh,BYTE PTR [edi-0x31fc69d9]
  427d0c:	push   ebx
  427d0d:	add    BYTE PTR [edx+0x66e979e3],0xc8
  427d14:	lods   eax,DWORD PTR ds:[esi]
  427d15:	inc    edx
  427d16:	imul   ecx,edx,0x6c427641
  427d1c:	enter  0x4791,0xa8
  427d20:	jmp    0x427d22
  427d22:	pop    ss
  427d23:	cmp    esp,DWORD PTR [ecx]
  427d25:	(bad)  
  427d26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d27:	and    ah,ch
  427d29:	pop    edx
  427d2a:	cmp    bl,BYTE PTR [ecx-0xd8609f6]
  427d30:	sbb    ebp,DWORD PTR [ecx-0x2d35cf7b]
  427d36:	mov    al,0xfd
  427d38:	aaa    
  427d39:	ficom  WORD PTR [ecx-0x1e]
  427d3c:	sbb    ebp,DWORD PTR [ecx]
  427d3e:	mov    al,BYTE PTR [ecx-0x3dd216d8]
  427d44:	or     ecx,ebp
  427d46:	test   edx,ebp
  427d48:	adc    al,0xfd
  427d4a:	retf   
  427d4b:	std    
  427d4c:	test   BYTE PTR [ecx+0x7575f509],bh
  427d52:	scas   eax,DWORD PTR es:[edi]
  427d53:	pop    edi
  427d54:	cmp    bh,bh
  427d56:	inc    ebp
  427d57:	add    ah,BYTE PTR [ebx-0x1f]
  427d5a:	retf   0x2676
  427d5d:	leave  
  427d5e:	(bad)  
  427d60:	fsub   QWORD PTR [ebx+0x3e]
  427d63:	cmp    dl,BYTE PTR es:[ecx]
  427d66:	or     al,BYTE PTR [ebx+0xa]
  427d69:	jmp    0x6470f9ea
  427d6e:	rol    BYTE PTR [ecx+0x64],0xe9
  427d72:	xor    cl,dl
  427d74:	inc    edi
  427d75:	and    DWORD PTR [ebx+0x57],edx
  427d78:	ss test ebp,0xa9a58401
  427d7f:	cmp    cl,BYTE PTR [ebp-0x3d3925db]
  427d85:	mov    ebp,0x8d63fb00
  427d8a:	mov    esp,0xa67701bd
  427d8f:	mov    dl,0xb3
  427d91:	inc    esi
  427d92:	loopne 0x427d37
  427d94:	enter  0xf156,0xab
  427d98:	add    ch,ah
  427d9a:	icebp  
  427d9b:	mov    ds:0xfae6cc48,eax
  427da0:	jmp    0x87:0xea855600
  427da7:	mov    ds:0x2388f590,al
  427dac:	sub    DWORD PTR [esi],esp
  427dae:	mov    ebx,DWORD PTR [esi+0x59d5909e]
  427db4:	mov    ds,WORD PTR [edx+0x51]
  427db7:	mov    al,ds:0xf10fc18f
  427dbc:	or     BYTE PTR ds:0xfe89dc30,ch
  427dc2:	inc    edi
  427dc3:	mov    bl,0xf8
  427dc5:	dec    eax
  427dc6:	je     0x427e24
  427dc8:	sbb    eax,0x452f0071
  427dcd:	push   0x178f9000
  427dd2:	xor    al,0x51
  427dd4:	add    eax,0xf382f1
  427dd9:	call   0x64bffee2
  427dde:	inc    edx
  427ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427de0:	adc    DWORD PTR ds:0xe286a428,ebp
  427de6:	ins    DWORD PTR es:[edi],dx
  427de7:	inc    edx
  427de8:	inc    ebp
  427de9:	or     cl,BYTE PTR [ebx+0x162a9b00]
  427def:	push   ebx
  427df0:	xchg   ecx,eax
  427df1:	push   ds
  427df2:	adc    al,0x5f
  427df4:	popf   
  427df5:	inc    esi
  427df6:	bound  eax,QWORD PTR [eax]
  427df8:	out    dx,eax
  427df9:	cld    
  427dfa:	lock out 0x93,eax
  427dfd:	pop    eax
  427dfe:	or     al,BYTE PTR [eax]
  427e00:	arpl   WORD PTR [ebp+0x43ec0776],ax
  427e06:	jecxz  0x427e08
  427e08:	dec    eax
  427e09:	mov    ?,ebp
  427e0b:	push   esi
  427e0c:	push   edi
  427e0d:	or     al,0x38
  427e0f:	(bad)  
  427e10:	js     0x427dd4
  427e12:	adc    BYTE PTR [eax],al
  427e14:	inc    esi
  427e15:	xchg   ebp,eax
  427e16:	hlt    
  427e17:	jmp    FWORD PTR [eax-0x48]
  427e1a:	xchg   esp,ebp
  427e1c:	fidiv  WORD PTR [esi+0x6686f087]
  427e22:	enter  0x36fb,0xb9
  427e26:	sar    ch,cl
  427e28:	dec    eax
  427e29:	scas   eax,DWORD PTR es:[edi]
  427e2a:	inc    eax
  427e2b:	add    al,0x87
  427e2d:	jmp    0x3dde793e
  427e32:	cli    
  427e33:	aas    
  427e34:	xchg   BYTE PTR [ebp+0x4d],ah
  427e37:	je     0x427dcd
  427e39:	je     0x427e06
  427e3b:	sti    
  427e3c:	add    ebp,DWORD PTR [edx-0x5d6ad927]
  427e42:	jmp    0x427dcc
  427e44:	jp     0x427e6d
  427e46:	jno    0x427e0a
  427e48:	test   al,0x42
  427e4a:	hlt    
  427e4b:	jae    0x427ead
  427e4d:	lock fwait
  427e4f:	or     BYTE PTR [eax],al
  427e51:	add    eax,0x837414b3
  427e56:	ins    BYTE PTR es:[edi],dx
  427e57:	aas    
  427e58:	pop    esp
  427e59:	fwait
  427e5a:	out    dx,eax
  427e5b:	into   
  427e5c:	jnp    0x427e1d
  427e5e:	inc    edi
  427e5f:	outs   dx,DWORD PTR ds:[esi]
  427e60:	or     BYTE PTR ds:0x56207aa,al
  427e66:	adc    cl,BYTE PTR ds:0xedd4ea75
  427e6c:	gs jle 0x427e90
  427e6f:	dec    esi
  427e70:	dec    esi
  427e71:	adc    al,0x79
  427e73:	inc    ebp
  427e74:	pop    edx
  427e75:	mov    edi,0xf286baac
  427e7a:	ins    BYTE PTR es:[edi],dx
  427e7b:	push   0xfffffff8
  427e7d:	pop    es
  427e7e:	mov    ds,edx
  427e80:	(bad)  
  427e81:	shr    ecx,1
  427e83:	mov    bh,0x51
  427e85:	xor    DWORD PTR [ecx+eiz*1+0x68],ebx
  427e89:	retf   0xc674
  427e8c:	call   DWORD PTR [ecx+esi*2-0x5e]
  427e90:	and    ebx,DWORD PTR [ecx-0x696c04c8]
  427e96:	test   eax,0x424a890c
  427e9b:	mov    edi,0xe00350f3
  427ea0:	jg     0x427ef3
  427ea2:	inc    ecx
  427ea3:	jecxz  0x427ea8
  427ea5:	add    DWORD PTR [esi],esi
  427ea7:	dec    edi
  427ea8:	hlt    
  427ea9:	rol    DWORD PTR [edx-0x6c],0xb3
  427ead:	test   al,0xff
  427eaf:	out    dx,eax
  427eb0:	xor    DWORD PTR [ecx+0xf36f03],edi
  427eb6:	mov    ecx,0x7a1f76ff
  427ebb:	xchg   eax,ebp
  427ebd:	xor    DWORD PTR [ecx-0x66afa9fd],edx
  427ec3:	sti    
  427ec4:	dec    ebp
  427ec5:	inc    BYTE PTR [edi-0x7a]
  427ec8:	pop    es
  427ec9:	sti    
  427eca:	xchg   cl,ch
  427ecc:	clc    
  427ecd:	add    al,0x86
  427ecf:	inc    edx
  427ed0:	pop    ebp
  427ed1:	rol    DWORD PTR [edx],1
  427ed3:	jbe    0x427ed4
  427ed5:	and    ecx,esi
  427ed7:	leave  
  427ed8:	(bad)  
  427ed9:	pop    ds
  427eda:	jle    0x427ea5
  427edc:	inc    esi
  427edd:	and    BYTE PTR [edx-0x16],dh
  427ee0:	xchg   BYTE PTR [ebp+ecx*1-0x1],dh
  427ee4:	or     al,0x0
  427ee6:	mov    ecx,0xbb7ea8cb
  427eeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427eec:	rol    bl,cl
  427eee:	stc    
  427eef:	mov    ds,WORD PTR [esi-0x41]
  427ef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ef3:	and    dl,BYTE PTR [ebx]
  427ef5:	dec    ebx
  427ef6:	jb     0x427f1e
  427ef8:	ret    
  427ef9:	dec    edx
  427efa:	mov    ah,0xc4
  427efc:	and    bh,dl
  427efe:	add    eax,0x8603e31b
  427f03:	retf   
  427f04:	sahf   
  427f05:	pop    ds
  427f06:	jb     0x427f43
  427f08:	and    al,0xd0
  427f0a:	test   DWORD PTR [ebx],esi
  427f0c:	and    ebx,DWORD PTR [esi-0x7d]
  427f0f:	jmp    0x6009:0xfeac0da7
  427f16:	jmp    0x134913d
  427f1b:	dec    eax
  427f1c:	dec    ebx
  427f1d:	xchg   BYTE PTR [edi-0x7b],ah
  427f20:	inc    edx
  427f21:	or     dl,BYTE PTR [ebx-0x5280706f]
  427f27:	imul   esp,DWORD PTR [esi],0x22415c5a
  427f2d:	sub    bl,BYTE PTR [ecx-0x36d98934]
  427f33:	mov    esp,0x6c298710
  427f38:	ret    0xe993
  427f3b:	test   DWORD PTR [edx+0x62],eax
  427f3e:	lods   eax,DWORD PTR ds:[esi]
  427f3f:	fild   DWORD PTR [edx-0x66d95f6]
  427f45:	jle    0x427fa4
  427f47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427f48:	jle    0x427f2c
  427f4a:	push   es
  427f4b:	push   esp
  427f4c:	cld    
  427f4d:	lock jb 0x427f14
  427f50:	xchg   edx,eax
  427f51:	icebp  
  427f52:	aam    0x2d
  427f54:	push   edi
  427f55:	dec    edx
  427f56:	jmp    0x169060b
  427f5b:	(bad)  
  427f5d:	push   ss
  427f5e:	ins    DWORD PTR es:[edi],dx
  427f5f:	adc    BYTE PTR [esi],bh
  427f61:	or     dl,BYTE PTR [ebx]
  427f63:	xor    al,0xcf
  427f65:	jne    0x427f34
  427f67:	sbb    DWORD PTR [edx-0x68ad21e],0x270674f0
  427f71:	jb     0x427f5b
  427f73:	test   DWORD PTR [edx-0x1e],eax
  427f76:	dec    esp
  427f77:	cmp    al,0xf9
  427f79:	lock fdivrp st(6),st
  427f7c:	xchg   BYTE PTR [esi],ah
  427f7e:	adc    DWORD PTR [eax],eax
  427f80:	adc    cl,BYTE PTR [ecx-0x47]
  427f83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f84:	jno    0x427fae
  427f86:	pop    edx
  427f87:	out    0xf6,al
  427f89:	xchg   BYTE PTR [esi],ah
  427f8b:	pop    ss
  427f8c:	cli    
  427f8d:	into   
  427f8e:	test   DWORD PTR [eax],eax
  427f90:	mov    eax,edx
  427f92:	or     DWORD PTR [eax],eax
  427f94:	lahf   
  427f95:	mov    cl,0x7d
  427f97:	test   BYTE PTR [ebx+0x7e],bh
  427f9a:	or     eax,DWORD PTR [eax]
  427f9c:	scas   eax,DWORD PTR es:[edi]
  427f9d:	mov    cl,0x87
  427f9f:	(bad)  
  427fa0:	fistp  WORD PTR [edi]
  427fa2:	xor    ebx,DWORD PTR [ebx+0x22]
  427fa5:	retf   0x1025
  427fa8:	sahf   
  427fa9:	inc    ecx
  427faa:	or     ch,al
  427fac:	rol    BYTE PTR ds:0x82ecfff3,1
  427fb2:	adc    al,BYTE PTR [ebp-0xeef761]
  427fb8:	jmp    0x428017
  427fba:	push   ss
  427fbb:	mov    ebp,DWORD PTR [eax-0x7cdb8975]
  427fc1:	mov    dh,0x68
  427fc3:	(bad)  
  427fc4:	aam    0x1
  427fc6:	icebp  
  427fc7:	imul   ebx,DWORD PTR [ebp-0x67],0x8a5099e3
  427fce:	xchg   al,al
  427fd0:	jnp    0x427fcf
  427fd2:	retf   0x8b44
  427fd5:	sti    
  427fd6:	or     DWORD PTR [ebx],esi
  427fd8:	adc    al,0x8a
  427fda:	jbe    0x428000
  427fdc:	aaa    
  427fdd:	cdq    
  427fde:	mov    edx,0x4189e139
  427fe3:	inc    DWORD PTR [eax]
  427fe5:	jnp    0x428009
  427fe7:	push   ss
  427fe8:	dec    DWORD PTR [edx]
  427fea:	jno    0x428006
  427fec:	inc    eax
  427fed:	out    dx,eax
  427fee:	jle    0x428036
  427ff0:	and    al,0xf0
  427ff2:	test   eax,0x9c745b52
  427ff7:	dec    edi
  427ff8:	ret    
  427ff9:	mov    bh,BYTE PTR [edi-0x22]
  427ffc:	or     DWORD PTR [ebx],0xffffff89
  427fff:	mov    ebp,esp
  428001:	arpl   WORD PTR [edi+0xa],ax
  428004:	add    BYTE PTR [ebx+esi*4],cl
  428007:	xchg   DWORD PTR [ebp-0x7a],esi
  42800a:	jecxz  0x427fc5
  42800c:	cli    
  42800d:	cmp    edi,ebx
  42800f:	inc    ecx
  428010:	jne    0x427f9c
  428012:	fld    QWORD PTR [ecx+0x15]
  428015:	adc    bl,BYTE PTR [ebx]
  428017:	int    0xff
  428019:	(bad)  
  42801a:	scas   al,BYTE PTR es:[edi]
  42801b:	adc    BYTE PTR [eax],dl
  42801d:	or     ebp,DWORD PTR [ebx]
  42801f:	repnz xor DWORD PTR [edi-0x16],0xc
  428024:	add    BYTE PTR [ecx-0x7600035b],bl
  42802a:	jmp    0xb:0xe60b0afc
  428031:	xchg   BYTE PTR [esi+0x5b],ch
  428034:	or     ecx,DWORD PTR [edx]
  428036:	dec    BYTE PTR [ebx]
  428038:	add    BYTE PTR [esi-0x6efffc98],al
  42803e:	arpl   WORD PTR [esi+0x0],dx
  428041:	xchg   cl,ch
  428043:	mov    edi,DWORD PTR [edx-0x76]
  428046:	jmp    0x5f430442
  42804b:	jmp    0xf9b1:0x102e000c
  428052:	cmp    DWORD PTR [esi+0x46],ebp
  428055:	or     ecx,DWORD PTR [edx]
  428057:	fiadd  WORD PTR ds:0xca668600
  42805d:	and    esp,DWORD PTR [esi+0x59]
  428060:	dec    ecx
  428061:	adc    eax,0xffccf802
  428066:	lahf   
  428067:	push   ebx
  428068:	jae    0x42801e
  42806a:	bound  ebp,QWORD PTR [ebp+0x31860005]
  428070:	dec    esi
  428071:	push   esi
  428072:	push   ss
  428073:	lds    ecx,FWORD PTR [eax+0x66]
  428076:	jns    0x4280e6
  428078:	fisub  DWORD PTR [ebx]
  42807a:	mov    dl,0x51
  42807c:	dec    esi
  42807d:	dec    edx
  42807e:	imul   BYTE PTR [ecx+ecx*2-0x73]
  428082:	add    al,BYTE PTR [ebx-0x1]
  428085:	add    eax,DWORD PTR [edi-0xaa41cbe]
  42808b:	std    
  42808c:	push   edi
  42808d:	inc    edi
  42808e:	lea    esi,[ebx-0x6d99e05a]
  428094:	clc    
  428095:	mov    cs,WORD PTR [edx+0x26]
  428098:	or     DWORD PTR [esp+edi*2+0x6c1f9eb3],esi
  42809f:	xchg   edx,eax
  4280a0:	ins    BYTE PTR es:[edi],dx
  4280a1:	ds ss int 0x5e
  4280a5:	and    BYTE PTR [esi+0x41],dh
  4280a8:	jecxz  0x4280ad
  4280aa:	ss int 0x5e
  4280ad:	and    BYTE PTR [eax],al
  4280af:	pop    edx
  4280b0:	inc    edx
  4280b1:	jecxz  0x4280b6
  4280b3:	(bad)  
  4280b4:	push   0x7e02aac9
  4280b9:	(bad)  
  4280ba:	stos   DWORD PTR es:[edi],eax
  4280bb:	popa   
  4280bc:	mov    dh,0x76
  4280be:	inc    ebp
  4280bf:	pop    ebp
  4280c0:	mov    edi,0x202ec26
  4280c5:	imul   edx,edx,0x46fb8508
  4280cb:	xchg   esi,eax
  4280cc:	sti    
  4280cd:	push   edx
  4280ce:	add    BYTE PTR [ecx],cl
  4280d0:	add    esi,DWORD PTR [ebx]
  4280d2:	adc    edi,DWORD PTR ds:0x1e025d93
  4280d8:	loop   0x428144
  4280da:	inc    esi
  4280db:	sub    eax,0xbecfa2c6
  4280e0:	(bad)  
  4280e1:	xor    eax,0xef350f8
  4280e6:	mov    dl,0xa7
  4280e8:	cmp    ecx,edx
  4280ea:	iret   
  4280eb:	mov    edx,0x46201ecd
  4280f0:	xchg   edx,eax
  4280f1:	xor    al,0x79
  4280f4:	push   eax
  4280f5:	and    eax,DWORD PTR [eax+ebp*2]
  4280f8:	dec    edx
  4280f9:	sbb    edi,DWORD PTR [eax]
  4280fb:	add    DWORD PTR [edx-0x79a116f6],eax
  428101:	inc    esi
  428102:	and    DWORD PTR [edx],edx
  428104:	jecxz  0x4280ca
  428106:	and    DWORD PTR [eax-0x9],ecx
  428109:	cmp    al,0x30
  42810b:	stos   DWORD PTR es:[edi],eax
  42810c:	leave  
  42810d:	inc    ecx
  42810e:	loope  0x428103
  428110:	int    0x75
  428112:	add    eax,0xc27baa00
  428117:	inc    esi
  428118:	dec    ebp
  428119:	xlat   BYTE PTR ds:[ebx]
  42811a:	outs   dx,BYTE PTR ds:[esi]
  42811b:	aas    
  42811c:	inc    eax
  42811d:	(bad)  
  42811e:	leave  
  42811f:	mov    ebp,0x575f7af
  428124:	scas   al,BYTE PTR es:[edi]
  428125:	int    0x45
  428127:	int    0xd1
  428129:	div    DWORD PTR [ebp-0x3b]
  42812c:	popf   
  42812d:	mov    bl,BYTE PTR [ecx-0x7d]
  428130:	xchg   edx,ebp
  428132:	xor    DWORD PTR [ecx-0x40],0x3e78e1fd
  428139:	cld    
  42813a:	lock jb 0x428166
  42813d:	sbb    dl,BYTE PTR es:[esi+0x485912b]
  428144:	cs mov eax,0xfa2fe8fd
  42814a:	(bad)  
  42814b:	jmp    0x6314c5da
  428150:	dec    edx
  428151:	cli    
  428152:	out    dx,eax
  428153:	hlt    
  428154:	mov    ebp,0xace94a54
  428159:	test   BYTE PTR [esi],al
  42815b:	jb     0x4281c5
  42815d:	mov    ecx,0xeab56257
  428162:	sbb    al,0xe9
  428164:	test   DWORD PTR [edx-0x8],eax
  428167:	sub    eax,0x150b4a66
  42816c:	or     BYTE PTR [edx+eiz*8-0xf037231],dl
  428173:	bound  edi,QWORD PTR [eax+0xcc9c]
  428179:	jecxz  0x4281c0
  42817b:	pop    esp
  42817c:	mov    ebp,DWORD PTR [esi+0x7b]
  42817f:	dec    esp
  428180:	add    al,0x30
  428182:	stc    
  428183:	fmul   DWORD PTR [ebx-0x3f78c151]
  428189:	mov    bl,0xf8
  42818b:	outs   dx,DWORD PTR ds:[esi]
  42818c:	clc    
  42818d:	fimul  WORD PTR [eax]
  42818f:	pop    es
  428190:	inc    edx
  428192:	jne    0x4281b0
  428194:	inc    eax
  428195:	scas   eax,DWORD PTR es:[edi]
  428196:	ret    0x443
  428199:	dec    eax
  42819a:	mov    al,ds:0xf9df8baf
  42819f:	test   eax,eax
  4281a1:	jecxz  0x428191
  4281a3:	outs   dx,DWORD PTR ds:[esi]
  4281a4:	clc    
  4281a5:	scas   al,BYTE PTR es:[edi]
  4281a6:	or     DWORD PTR [edi],eax
  4281a8:	cmp    eax,0x800b44a1
  4281ad:	repz inc edx
  4281af:	and    eax,eax
  4281b1:	lods   al,BYTE PTR ds:[esi]
  4281b2:	push   ebx
  4281b3:	retf   0xac40
  4281b6:	test   eax,0xc20eec87
  4281bb:	data16 cld 
  4281bd:	pop    edi
  4281be:	jo     0x428207
  4281c0:	cld    
  4281c1:	(bad)  
  4281c2:	jge    0x42823b
  4281c4:	or     al,0x7
  4281c6:	inc    esp
  4281c7:	inc    esi
  4281c8:	add    BYTE PTR [edi+0x1b],bl
  4281cb:	icebp  
  4281cc:	(bad)  
  4281cd:	mov    dl,0xf6
  4281cf:	repz adc eax,0x30e7c3
  4281d5:	mov    ds:0xb4077285,al
  4281da:	mov    eax,0xdf0085f4
  4281df:	pop    es
  4281e0:	out    dx,eax
  4281e1:	xor    ch,bh
  4281e3:	cmp    esi,DWORD PTR [eax-0x7858d0f8]
  4281e9:	icebp  
  4281ea:	div    ecx
  4281ec:	lock call FWORD PTR [edi]
  4281ef:	xchg   DWORD PTR [esi+0x24],eax
  4281f2:	xchg   bl,ah
  4281f4:	or     esi,DWORD PTR [eax+eax*4+0x31]
  4281f8:	dec    esi
  4281f9:	mov    al,ds:0x8745c1b9
  4281fe:	rcr    BYTE PTR [eax+0x4c],0x4
  428202:	xchg   BYTE PTR [edi+ebp*4+0x7],ah
  428206:	shl    eax,0x50
  428209:	xchg   DWORD PTR [esi-0x15],eax
  42820c:	outs   dx,DWORD PTR ds:[esi]
  42820d:	rcl    BYTE PTR [edx-0xb],0x71
  428211:	or     BYTE PTR [esi-0x70],dl
  428214:	mov    esp,0xf5010507
  428219:	push   DWORD PTR [eax-0x6c050748]
  42821f:	stos   DWORD PTR es:[edi],eax
  428220:	stc    
  428221:	aas    
  428222:	xchg   BYTE PTR [edi+esi*1-0x17],ah
  428226:	xor    eax,0x3bfb4628
  42822b:	je     0x428286
  42822d:	push   ecx
  42822e:	xor    BYTE PTR [edi+edi*1],bl
  428231:	push   edx
  428232:	fdiv   DWORD PTR [edi-0x502c012e]
  428238:	sahf   
  428239:	gs jno 0x428214
  42823c:	inc    ebp
  42823d:	adc    eax,0xffcd0ffa
  428242:	add    BYTE PTR [edi+eiz*1+0x129b06c1],bl
  428249:	or     al,0x1
  42824b:	push   es
  42824c:	xchg   esi,eax
  42824d:	add    ch,BYTE PTR [esi]
  42824f:	inc    esi
  428250:	adc    eax,0x9ae52f2
  428255:	adc    eax,0x76818640
  42825a:	sbb    dh,al
  42825c:	jmp    0xb96bd585
  428261:	dec    esp
  428262:	xchg   DWORD PTR [esi],ebx
  428264:	cmc    
  428265:	dec    edx
  428266:	jne    0x4281ea
  428268:	sti    
  428269:	dec    esp
  42826a:	out    0x6f,eax
  42826c:	inc    edx
  42826d:	xor    al,0x43
  42826f:	xchg   ebx,eax
  428270:	inc    esi
  428271:	nop
  428272:	sbb    edx,eax
  428274:	push   ebx
  428275:	and    eax,DWORD PTR [ecx+eax*1]
  428278:	sbb    ebp,DWORD PTR [ebx+ecx*1-0x47]
  42827c:	sbb    dh,ch
  42827e:	adc    BYTE PTR [ebp-0x9],dl
  428281:	adc    cl,BYTE PTR [eax+esi*4]
  428284:	add    bl,BYTE PTR [ebx+eiz*8]
  428287:	aas    
  428288:	or     DWORD PTR [ebp-0x4a3a79f4],esp
  42828e:	aas    
  42828f:	aaa    
  428290:	nop
  428291:	mov    ecx,0xb19057d9
  428296:	(bad)  
  428297:	push   esp
  428298:	div    DWORD PTR [edx-0x88200f1]
  42829e:	mov    es,WORD PTR [ebp-0x762bcf71]
  4282a4:	xchg   ebx,eax
  4282a5:	cmp    BYTE PTR [ecx],bl
  4282a7:	add    BYTE PTR [esi+0x53],al
  4282aa:	mov    ds:0xf76d4f03,eax
  4282af:	mov    eax,0x3f9639b8
  4282b4:	cli    
  4282b5:	or     BYTE PTR [ecx-0x72bc1c27],dh
  4282bb:	push   es
  4282bc:	aam    0x90
  4282be:	popf   
  4282bf:	or     eax,0x42ef6d6d
  4282c4:	jnp    0x428284
  4282c6:	rol    bl,1
  4282c8:	pop    ecx
  4282c9:	mov    esi,0xf6cb8f22
  4282ce:	dec    esi
  4282cf:	or     al,0x1
  4282d1:	dec    edx
  4282d2:	xor    eax,DWORD PTR [ebx-0x29]
  4282d5:	dec    edx
  4282d6:	int3   
  4282d7:	outs   dx,DWORD PTR ds:[esi]
  4282d8:	add    DWORD PTR [ebp+0x4ac78ceb],eax
  4282de:	jae    0x4282e4
  4282e0:	and    DWORD PTR [esi-0x3ecd70eb],ebx
  4282e6:	or     ebp,eax
  4282e8:	jns    0x428328
  4282ea:	or     ch,cl
  4282ec:	cmp    BYTE PTR [ecx-0x3d33dc4],dl
  4282f2:	push   ss
  4282f3:	loope  0x428290
  4282f5:	or     BYTE PTR [edx],0x6a
  4282f8:	mov    ebp,0x620d75fb
  4282fd:	push   edx
  4282fe:	jbe    0x4282f0
  428300:	clc    
  428301:	or     ah,dl
  428303:	mov    edi,ebx
  428305:	div    al
  428307:	or     BYTE PTR [edi+0xf4e293],0x6b
  42830e:	cld    
  42830f:	lock ins DWORD PTR es:[edi],dx
  428311:	inc    ebp
  428312:	ins    DWORD PTR es:[edi],dx
  428313:	ror    DWORD PTR [bx+di+0xa41],1
  428318:	jmp    0x5cc19625
  42831d:	popa   
  42831e:	cmc    
  42831f:	lock inc esi
  428321:	pop    ebp
  428322:	push   edx
  428323:	pusha  
  428324:	aas    
  428325:	inc    esp
  428326:	lds    eax,FWORD PTR [esi-0xf04b9bb]
  42832c:	cdq    
  42832d:	inc    esp
  42832e:	dec    ebp
  42832f:	call   0xb994:0x7df6c5fa
  428336:	mov    edx,0x4285e9c9
  42833b:	loop   0x4283aa
  42833d:	push   ss
  42833e:	cli    
  42833f:	lock je 0x428340
  428342:	fdivrp st(4),st
  428344:	inc    bh
  428346:	xchg   edx,eax
  428347:	fs jmp 0x5c9c8455
  42834d:	(bad)  
  42834e:	out    0xee,al
  428350:	out    0xc7,al
  428352:	xchg   edx,eax
  428353:	icebp  
  428354:	hlt    
  428355:	add    DWORD PTR [ebx+0x4a],edx
  428358:	jmp    0xedb8865d
  42835d:	jecxz  0x4283a1
  42835f:	jg     0x428361
  428361:	call   0x5c0e:0xe0fff92a
  428368:	(bad)  
  428369:	cmp    bl,dl
  42836b:	sbb    al,BYTE PTR [eax+0x1f]
  42836e:	lds    eax,FWORD PTR [esi-0x7c1bff1c]
  428374:	cmc    
  428375:	push   eax
  428376:	pop    ss
  428377:	push   ebx
  428378:	nop
  428379:	(bad)  
  42837a:	adc    BYTE PTR [edi+esi*2+0x8ae000c],al
  428381:	push   edi
  428382:	pop    ss
  428383:	mov    edi,0xbdef0020
  428388:	leave  
  428389:	jne    0x42833e
  42838b:	stc    
  42838c:	inc    ebp
  42838d:	adc    dl,bl
  42838f:	cmp    al,0x8a
  428391:	sti    
  428392:	aad    0xad
  428394:	sbb    ch,BYTE PTR [eax-0x41]
  428397:	jmp    0x12c2:0x4d50fff0
  42839e:	fild   WORD PTR [ecx-0xc]
  4283a1:	ret    
  4283a2:	push   esi
  4283a3:	adc    dh,ah
  4283a5:	jmp    DWORD PTR [eax+0x6e]
  4283a8:	or     ebp,ebx
  4283aa:	lods   eax,DWORD PTR ds:[esi]
  4283ab:	out    dx,eax
  4283ac:	mov    al,0x5e
  4283ae:	hlt    
  4283af:	mov    BYTE PTR [eax-0x77f360f4],dh
  4283b5:	in     al,dx
  4283b6:	out    dx,al
  4283b7:	xor    dl,BYTE PTR [edx]
  4283b9:	add    DWORD PTR [edi+0x41],ebp
  4283bc:	inc    ecx
  4283bd:	push   esi
  4283be:	cmp    BYTE PTR [edx-0x2c83c9],al
  4283c4:	lock mov edx,ds
  4283c7:	xor    edx,esp
  4283c9:	lahf   
  4283ca:	sbb    al,0x41
  4283cc:	or     al,BYTE PTR [edi+ebx*4+0x5f968653]
  4283d3:	inc    ecx
  4283d4:	or     al,BYTE PTR [ebx+0xa46e200]
  4283da:	mov    BYTE PTR [esi-0x44ffb4da],0xe5
  4283e1:	dec    ecx
  4283e2:	jne    0x42837a
  4283e4:	jo     0x428396
  4283e6:	or     esp,DWORD PTR [ecx]
  4283e8:	cs xor bh,bl
  4283eb:	xchg   ebx,eax
  4283ec:	mov    ebx,0xa410f224
  4283f1:	dec    ecx
  4283f2:	mov    bl,al
  4283f4:	pushf  
  4283f5:	jg     0x42843c
  4283f7:	not    dl
  4283f9:	push   DWORD PTR [ebx]
  4283fb:	xchg   bl,ch
  4283fd:	sbb    eax,0x3245fd67
  428402:	push   ebx
  428403:	jmp    0x902ac0fd
  428408:	lods   eax,DWORD PTR ds:[esi]
  428409:	dec    edx
  42840a:	sti    
  42840b:	or     eax,0xd645807b
  428410:	ret    0x2f37
  428413:	xchg   bl,ch
  428415:	xchg   edx,esi
  428417:	cmp    bh,BYTE PTR [edx-0x147c785c]
  42841d:	or     al,0x68
  42841f:	jle    0x42842b
  428421:	int    0xff
  428423:	cli    
  428424:	gs and eax,0x2533a1fa
  42842a:	inc    edx
  42842b:	cli    
  42842c:	sub    ecx,DWORD PTR [edx+0x50]
  42842f:	std    
  428430:	push   ebx
  428431:	jle    0x4283f5
  428433:	sahf   
  428434:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428435:	nop
  428436:	cli    
  428437:	sbb    DWORD PTR [edi+0x4d],0x5eae0074
  42843e:	sub    al,0x70
  428441:	inc    ebp
  428442:	dec    edx
  428443:	push   ecx
  428444:	imul   esi,DWORD PTR [edi+0x5],0xceb70b7
  42844b:	add    BYTE PTR [esi-0x75],ch
  42844e:	mov    ?,edx
  428450:	push   ecx
  428451:	pop    esi
  428452:	dec    ebp
  428453:	je     0x4284cb
  428455:	inc    edx
  428456:	call   0x7cce1614
  42845b:	ror    DWORD PTR [ebp+0x2c87cb8c],0xf4
  428462:	mov    edi,0x10f3c38c
  428467:	sub    al,0x62
  428469:	sub    eax,0x7e003fb1
  42846e:	mov    eax,0xaa97afdf
  428473:	inc    edx
  428474:	jp     0x4284b8
  428476:	cs mov esi,edx
  428479:	sar    DWORD PTR [esi-0x18],0xfb
  42847d:	repz loop 0x428455
  428480:	add    ch,BYTE PTR [esi-0xc12be7e]
  428486:	call   0x391:0x6ff35827
  42848d:	fbstp  TBYTE PTR [ebp+0x3f]
  428490:	int    0x92
  428492:	or     eax,0x5b2bcca9
  428497:	sbb    ebp,DWORD PTR ds:0xc687e342
  42849d:	mov    ecx,0x86000548
  4284a2:	inc    edx
  4284a3:	ins    BYTE PTR es:[edi],dx
  4284a4:	inc    esi
  4284a5:	xor    eax,DWORD PTR [edi+0x21]
  4284a8:	add    al,0x86
  4284aa:	cmp    BYTE PTR [edx+0x23309eb8],0x2b
  4284b1:	dec    edx
  4284b2:	cld    
  4284b3:	loop   0x4284b8
  4284b5:	inc    esi
  4284b6:	mov    DWORD PTR [esi-0x77f691c4],ecx
  4284bc:	cmp    eax,0x2bef687d
  4284c1:	xor    BYTE PTR [ebx+0x1],bl
  4284c4:	aas    
  4284c5:	(bad)  
  4284c6:	push   0xea953e81
  4284cb:	call   0xca6d:0x9f359ad
  4284d2:	outs   dx,BYTE PTR ds:[esi]
  4284d3:	aad    0x5c
  4284d5:	aas    
  4284d6:	cvtps2pd xmm2,xmm1
  4284d9:	retf   0xf017
  4284dc:	fsubrp st(3),st
  4284de:	jae    0x42854f
  4284e0:	mov    ebp,0x5c1b6e85
  4284e5:	cvtps2pd xmm2,QWORD PTR ds:[ebx-0x17]
  4284ea:	idiv   DWORD PTR [eax]
  4284ec:	rol    eax,1
  4284ee:	push   0x209e90a
  4284f3:	jbe    0x428568
  4284f5:	xchg   ebp,eax
  4284f6:	inc    ecx
  4284f7:	push   eax
  4284f8:	mov    al,0x44
  4284fa:	lea    eax,[ebp-0x1e19fd73]
  428500:	jmp    0x8e9ac78a
  428505:	add    BYTE PTR [esi-0x75d6e2ba],cl
  42850b:	mov    ebx,0xeece6cf9
  428510:	pop    ecx
  428511:	scas   al,BYTE PTR es:[edi]
  428512:	mov    esi,0x85e901ee
  428517:	inc    edx
  428518:	icebp  
  428519:	cld    
  42851a:	mov    DWORD PTR [ebp+0x4a],ecx
  42851d:	jmp    0xecb88730
  428522:	cld    
  428523:	jmp    DWORD PTR [esp+eiz*4]
  428526:	ins    DWORD PTR es:[edi],dx
  428527:	leave  
  428528:	inc    esi
  428529:	inc    ecx
  42852a:	adc    bh,BYTE PTR [ebp-0x19]
  42852d:	ins    BYTE PTR es:[edi],dx
  42852e:	into   
  42852f:	add    bl,BYTE PTR [edx+0x2f]
  428532:	mov    esi,0xce600b12
  428537:	loope  0x428529
  428539:	cld    
  42853a:	or     eax,0x16e94a41
  42853f:	mov    dl,bl
  428541:	mov    ecx,0xf599a9d
  428546:	test   al,0xbb
  428548:	inc    esi
  428549:	add    BYTE PTR [esi-0x2e],dh
  42854c:	xchg   BYTE PTR [eax+ebx*2],bl
  42854f:	xor    ch,dh
  428551:	push   eax
  428552:	pop    eax
  428553:	pop    edx
  428554:	call   0x8b85:0x89461f12
  42855b:	das    
  42855c:	cmc    
  42855d:	call   esp
  42855f:	xchg   dh,al
  428561:	mov    DWORD PTR [edx+0x21],esp
  428564:	push   0xd109ca11
  428569:	push   eax
  42856a:	add    BYTE PTR [ecx+ecx*1+0x2fb46a09],dl
  428571:	cmp    ch,al
  428573:	jecxz  0x428516
  428575:	lock (bad) 
  428577:	jns    0x4285f6
  428579:	mov    al,0x4
  42857b:	out    dx,eax
  42857c:	sbb    BYTE PTR [eax+0x1a326cec],cl
  428582:	push   edi
  428583:	test   ebp,esp
  428585:	data16 add BYTE PTR [ecx-0x3ecbe8d1],dh
  42858c:	add    eax,0x532382f1
  428591:	push   0x81a8771d
  428596:	inc    esi
  428597:	faddp  st(0),st
  428599:	inc    esi
  42859a:	lock inc DWORD PTR [edi+0x1657010c]
  4285a1:	aam    0xfe
  4285a3:	pop    eax
  4285a4:	test   al,0x87
  4285a6:	inc    ebp
  4285a7:	dec    edi
  4285a8:	test   al,0x81
  4285aa:	inc    esi
  4285ab:	mov    dl,0xa7
  4285ad:	xchg   DWORD PTR [ebp+0x5d],eax
  4285b0:	test   al,0x81
  4285b2:	inc    esi
  4285b3:	mov    al,ds:0xeffc46c0
  4285b8:	sbb    eax,0x2fa9e2f5
  4285bd:	mov    ch,0xff
  4285bf:	cwde   
  4285c0:	inc    esi
  4285c1:	or     al,BYTE PTR [ebp+0xdb21b86]
  4285c7:	std    
  4285c8:	int    0x30
  4285ca:	aaa    
  4285cb:	push   ecx
  4285cc:	clc    
  4285cd:	(bad)
  4285d0:	mov    dh,0xc9
  4285d2:	or     DWORD PTR [edx+0x7f],0x43
  4285d6:	pop    ecx
  4285d7:	das    
  4285d8:	dec    eax
  4285d9:	loopne 0x42865a
  4285db:	inc    ebp
  4285dc:	inc    edx
  4285dd:	sub    ebx,DWORD PTR [esi]
  4285df:	ss and al,0x11
  4285e2:	test   DWORD PTR cs:[esi-0x71],eax
  4285e6:	sbb    al,0x87
  4285e8:	mov    ebx,0x91caf1ff
  4285ed:	and    BYTE PTR [edi],bh
  4285ef:	push   eax
  4285f0:	mov    al,ds:0x1e06bf72
  4285f5:	jno    0x4285f1
  4285f7:	stc    
  4285f8:	or     DWORD PTR [esi-0x2ca90438],ecx
  4285fe:	mov    ah,cl
  428600:	clc    
  428601:	iret   
  428602:	xchg   eax,eax
  428604:	jp     0x4285f0
  428606:	repz jl 0x4285f3
  428609:	sub    bh,bh
  42860b:	inc    ecx
  42860c:	arpl   di,ax
  42860e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42860f:	mov    BYTE PTR [eax-0x22],bl
  428612:	and    al,0x98
  428614:	xchg   ebp,eax
  428615:	jns    0x428645
  428617:	lea    eax,[ebx+0x5f]
  42861a:	frstor [edi+0x1e]
  42861d:	fisttp DWORD PTR [eax+eax*1]
  428620:	scas   al,BYTE PTR es:[edi]
  428621:	jnp    0x428674
  428623:	cli    
  428624:	mov    cl,0xb7
  428626:	xchg   eax,eax
  428628:	xor    ch,dl
  42862a:	mov    DWORD PTR [ebp-0x5e],edi
  42862d:	jmp    0xfebf:0x5c2004ba
  428634:	add    BYTE PTR [esi+0x557424cb],al
  42863a:	and    DWORD PTR [esi],ebp
  42863c:	leave  
  42863d:	inc    ebp
  42863e:	inc    ebx
  42863f:	scas   al,BYTE PTR es:[edi]
  428640:	mov    BYTE PTR [edx-0x3e],ch
  428643:	(bad)  
  428644:	fidiv  DWORD PTR [ebx-0x10]
  428647:	loop   0x428619
  428649:	xlat   BYTE PTR ds:[ebx]
  42864a:	xchg   edi,eax
  42864b:	pop    esp
  42864c:	pop    es
  42864d:	xchg   DWORD PTR [edx-0x1d],eax
  428650:	ror    BYTE PTR [edx],1
  428652:	(bad)  
  428653:	ds ds dec ebp
  428656:	lock xchg edx,eax
  428658:	test   eax,0x43d5f149
  42865d:	nop
  42865e:	and    bl,0x8e
  428661:	jnp    0x428699
  428663:	stc    
  428664:	ret    
  428665:	xor    DWORD PTR [ebx+0x3033c1d],edi
  42866b:	push   edi
  42866c:	pop    ss
  42866d:	adc    edi,DWORD PTR [esi-0xfe2c66a]
  428673:	adc    DWORD PTR [ecx-0x2334e965],ecx
  428679:	xchg   ecx,eax
  42867a:	lock lahf 
  42867c:	add    dh,0x75
  42867f:	imul   BYTE PTR [ebp+0x5025bd8d]
  428685:	push   0xd53b3342
  42868a:	ret    
  42868b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42868c:	or     ch,bl
  42868e:	push   ebp
  42868f:	adc    DWORD PTR [esi],0x46
  428692:	inc    edx
  428693:	jl     0x4286c9
  428695:	xor    al,0xef
  428697:	int    0x83
  428699:	add    BYTE PTR [eax-0x7e],bh
  42869c:	jecxz  0x42871a
  42869e:	rol    DWORD PTR [edx-0x1d],0x3
  4286a2:	jno    0x4286a5
  4286a4:	mov    ecx,0xe7de3b88
  4286a9:	enter  0xdac6,0x5
  4286ad:	mov    esp,0x445eef9f
  4286b2:	adc    edi,DWORD PTR [esi]
  4286b4:	fld    QWORD PTR [edi]
  4286b6:	or     DWORD PTR [ecx],ecx
  4286b8:	or     al,bl
  4286ba:	test   DWORD PTR [edx+0x60916f1],edx
  4286c0:	(bad)  
  4286c1:	jae    0x42870a
  4286c3:	neg    DWORD PTR [ecx+0x6c]
  4286c6:	pop    es
  4286c7:	sahf   
  4286c8:	out    dx,al
  4286c9:	push   ss
  4286ca:	lods   eax,DWORD PTR ds:[esi]
  4286cb:	xchg   edx,eax
  4286cc:	fs jmp 0x4286e1
  4286cf:	(bad)  
  4286d0:	repnz push es
  4286d2:	ja     0x42868a
  4286d4:	sbb    al,0xa9
  4286d6:	test   esi,eax
  4286d8:	leave  
  4286d9:	jge    0x428752
  4286db:	mov    ebp,0xeb7f3d86
  4286e0:	lock cmp DWORD PTR [ecx],ecx
  4286e3:	test   edx,esi
  4286e5:	ins    BYTE PTR es:[edi],dx
  4286e6:	test   BYTE PTR [esi],0xe2
  4286e9:	shl    ah,0xe8
  4286ec:	lock lds esi,FWORD PTR gs:[ebp-0x1]
  4286f1:	push   edx
  4286f2:	mov    ?,WORD PTR [ebp-0x111c36ba]
  4286f8:	inc    eax
  4286f9:	mov    dh,0xb4
  4286fb:	outs   dx,DWORD PTR ds:[esi]
  4286fc:	(bad)  
  4286fd:	fld    QWORD PTR [eax]
  4286ff:	push   cs
  428700:	test   DWORD PTR [esi-0x397af0c7],edi
  428706:	cmp    edi,edi
  428708:	test   BYTE PTR [esi-0x497b00c7],ch
  42870e:	cmp    DWORD PTR [eax],esi
  428710:	in     al,dx
  428711:	lock fsub QWORD PTR [ecx+0x51]
  428715:	dec    edx
  428716:	jmp    0xedb98921
  42871b:	shl    al,1
  42871d:	in     al,0xc8
  42871f:	adc    BYTE PTR [ebp-0x49318d4a],al
  428725:	arpl   cx,bp
  428727:	xchg   BYTE PTR [edx-0x76],al
  42872a:	sub    BYTE PTR [ebx-0x288759a],bl
  428730:	inc    ecx
  428731:	mov    eax,DWORD PTR [eax]
  428733:	jle    0x42871b
  428735:	inc    edx
  428736:	bound  edx,QWORD PTR [ecx+0x16]
  428739:	inc    ecx
  42873a:	call   0x4cac12
  42873f:	in     al,0x31
  428741:	mov    DWORD PTR [ebp-0x69],ecx
  428744:	inc    esp
  428745:	aas    
  428746:	hlt    
  428747:	hlt    
  428748:	add    dl,ch
  42874a:	lea    esi,[ebx]
  42874c:	inc    edi
  42874d:	add    BYTE PTR [ecx-0x2478d5ce],cl
  428753:	fiadd  DWORD PTR [eax+0x21]
  428756:	push   DWORD PTR [esi-0x40]
  428759:	or     DWORD PTR [eax],eax
  42875b:	pop    edi
  42875c:	mov    ebp,0xf850e8b0
  428761:	repnz inc DWORD PTR [eax]
  428764:	mov    ah,0x2e
  428766:	xchg   edi,edi
  428768:	fld    TBYTE PTR [edx+ecx*8-0x699ee1f9]
  42876f:	mov    al,0x6c
  428771:	inc    esi
  428772:	add    DWORD PTR [edi+0x2e],0x62
  428776:	call   0x2d5f:0x7f465cb0
  42877d:	mov    edx,0x3e30054c
  428782:	mov    dl,0x11
  428784:	scas   eax,DWORD PTR es:[edi]
  428785:	inc    esi
  428786:	ins    BYTE PTR es:[edi],dx
  428787:	mov    DWORD PTR [eax-0x18887cc0],ebp
  42878d:	mov    ds:0xc0334587,eax
  428792:	xor    BYTE PTR ss:[ecx+0x5665f101],bh
  428799:	add    eax,DWORD PTR ds:0xfcad6466
  42879f:	add    ax,WORD PTR es:[ebx]
  4287a3:	data16 xor al,0xad
  4287a6:	call   0x145be11
  4287ab:	jbe    0x364e527d
  4287b1:	jl     0x428754
  4287b3:	shl    DWORD PTR ds:0xd90b5c84,cl
  4287b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4287ba:	or     bh,bh
  4287bc:	mov    cl,0xe4
  4287be:	jns    0x428803
  4287c0:	nop
  4287c1:	pop    eax
  4287c2:	dec    edx
  4287c3:	or     al,0xd6
  4287c5:	and    al,0xa1
  4287c7:	jmp    0x4287c9
  4287c9:	aad    0x4c
  4287cb:	pop    esp
  4287cc:	or     esi,DWORD PTR [ecx]
  4287ce:	pushf  
  4287cf:	sbb    al,0x7f
  4287d1:	dec    edx
  4287d2:	paddusw mm1,QWORD PTR [edx]
  4287d5:	adc    DWORD PTR [edx+eax*1+0x73bdbfb],ebx
  4287dc:	mov    edi,0x875af4b6
  4287e1:	jecxz  0x4287d6
  4287e3:	test   esp,eax
  4287e5:	mov    dh,BYTE PTR [esi-0x60]
  4287e8:	rcr    DWORD PTR [esi],cl
  4287ea:	scas   al,BYTE PTR es:[edi]
  4287eb:	mov    edx,0xa06629f9
  4287f0:	jmp    0x428820
  4287f2:	mov    dh,0xba
  4287f4:	stc    
  4287f5:	sbb    DWORD PTR [esi-0x60],esi
  4287f8:	fistp  WORD PTR [esi]
  4287fa:	sahf   
  4287fb:	mov    edx,0xb06009f9
  428800:	pop    es
  428801:	movlps QWORD PTR [esi-0x3d],xmm7
  428805:	pop    ecx
  428806:	test   edi,ecx
  428808:	enter  0xe6c4,0xc
  42880c:	dec    edi
  42880d:	push   ebx
  42880e:	sub    al,0x4c
  428810:	add    al,BYTE PTR [edi-0x79f9d73d]
  428816:	fstp   TBYTE PTR [ebp+0x2d]
  428819:	loop   0x428823
  42881b:	int    0xff
  42881d:	xchg   esp,eax
  42881e:	rol    BYTE PTR [edx+eax*2-0x3aaae379],1
  428825:	inc    ebp
  428826:	inc    edx
  428827:	jecxz  0x428824
  428829:	xchg   edx,eax
  42882a:	cli    
  42882b:	and    eax,0x75a900c4
  428830:	or     edx,ecx
  428832:	pushf  
  428833:	push   ss
  428834:	sbb    edx,DWORD PTR [edi]
  428836:	into   
  428837:	push   es
  428838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428839:	add    ebx,DWORD PTR [ebx]
  42883b:	push   esp
  42883c:	pop    ebx
  42883d:	(bad)  
  42883e:	jle    0x428882
  428840:	jecxz  0x4288c1
  428842:	inc    esi
  428843:	ja     0x428813
  428845:	mov    bl,BYTE PTR [ebx+0x71c41dfe]
  42884b:	push   es
  42884c:	out    0x4b,al
  42884e:	inc    ebx
  42884f:	and    bl,0x2
  428852:	mov    ch,0xeb
  428854:	cmc    
  428855:	xor    ecx,DWORD PTR [eax+0x26a1e382]
  42885b:	xor    DWORD PTR [edi],esp
  42885d:	les    ecx,FWORD PTR [ecx+0x66]
  428860:	push   0xffffffc1
  428862:	inc    ebx
  428863:	in     al,0x1
  428865:	or     eax,0xbe7b4286
  42886a:	test   DWORD PTR [edx],ebp
  42886c:	out    dx,al
  42886d:	dec    ebx
  42886e:	inc    ebx
  42886f:	and    bl,0xb0
  428872:	imul   edx,DWORD PTR [ebx+0x4d5e51c0],0x425141bb
  42887c:	ss push cs
  42887e:	push   ds
  42887f:	dec    eax
  428880:	jmp    0x8ab0:0xa2c68603
  428887:	mov    ecx,0x7fcb4805
  42888c:	jecxz  0x4288cb
  42888e:	cmp    edx,0xffffff9d
  428891:	ret    
  428892:	add    cl,ah
  428894:	inc    edx
  428895:	cmp    BYTE PTR [edi],dh
  428897:	jae    0x42888b
  428899:	aam    0xc3
  42889b:	shl    DWORD PTR [ebp+0x42],1
  42889e:	out    dx,al
  42889f:	lds    edi,FWORD PTR [edi+0xa]
  4288a2:	jmp    0xe48a43ca
  4288a7:	ins    DWORD PTR es:[edi],dx
  4288a8:	or     eax,DWORD PTR [ecx+ebp*8]
  4288ab:	test   DWORD PTR [ecx+0x5570e647],edi
  4288b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4288b2:	clc    
  4288b3:	(bad)
  4288b6:	lods   al,BYTE PTR ds:[esi]
  4288b7:	sti    
  4288b8:	mov    edx,0xacacf247
  4288bd:	push   esi
  4288be:	jb     0x42891e
  4288c0:	imul   esp,esi,0x31
  4288c3:	or     ebx,esi
  4288c5:	xchg   ebp,eax
  4288c6:	jmp    0x42884d
  4288c8:	inc    edx
  4288c9:	pop    ebp
  4288ca:	mov    edi,0x5116e840
  4288cf:	xchg   ebx,eax
  4288d0:	or     BYTE PTR [edx],0xda
  4288d3:	mov    esp,0x69c545b9
  4288d8:	xor    al,0xcd
  4288da:	jl     0x42892c
  4288dc:	sbb    al,0xca
  4288de:	adc    BYTE PTR [ebp-0x13],cl
  4288e1:	lock jmp 0xe94d9dd4
  4288e7:	test   DWORD PTR [edx+eax*1-0x1a],esp
  4288eb:	or     esp,DWORD PTR ss:[ebp+0x45ff822a]
  4288f2:	or     eax,0xe9f0ed2a
  4288f7:	add    BYTE PTR [ebp+0x74ed16e7],al
  4288fd:	or     BYTE PTR [edx],0x72
  428900:	dec    ebp
  428901:	xor    esi,ebp
  428903:	cmp    eax,0x585bd62
  428908:	adc    al,BYTE PTR [edx+0xa]
  42890b:	jmp    0x11a004e5
  428910:	out    0x8a,al
  428912:	or     ch,cl
  428914:	mov    ah,0x0
  428916:	or     eax,ebp
  428918:	or     cl,BYTE PTR [esi+0x33bb0026]
  42891e:	pop    ss
  42891f:	push   eax
  428920:	lods   al,BYTE PTR ds:[esi]
  428921:	(bad)  
  428922:	lock test bh,ch
  428925:	mov    cl,0xfe
  428927:	mov    WORD PTR [ebx],fs
  428929:	or     eax,DWORD PTR [ecx+0x5a3e9f00]
  42892f:	push   DWORD PTR [edx-0x50bfff42]
  428935:	mov    ebp,0x96972445
  42893a:	call   0x7f8168ca
  42893f:	inc    esp
  428940:	and    eax,0x40
  428943:	jmp    DWORD PTR [edx+0x3e]
  428946:	sbb    eax,DWORD PTR [eax+0x6f]
  428949:	mov    ebx,0x6e372475
  42894e:	pop    DWORD PTR [eax]
  428950:	pop    edi
  428951:	inc    esi
  428952:	loop   0x4288f5
  428954:	lock xor ch,dh
  428957:	mov    esp,DWORD PTR [ecx+0x244627]
  42895d:	inc    ebx
  42895e:	aas    
  42895f:	int    0x44
  428961:	inc    ebx
  428962:	fimul  WORD PTR [edi]
  428964:	add    BYTE PTR [edi],ch
  428966:	inc    esi
  428967:	add    DWORD PTR [ebx+eax*2-0x1e],0xffffff81
  42896c:	pop    esp
  42896d:	sub    esi,0xffffff88
  428970:	pop    esp
  428971:	cmp    DWORD PTR [edi],0xffffff83
  428974:	pop    esp
  428975:	xchg   ebx,eax
  428976:	dec    esi
  428977:	mov    DWORD PTR [ebx+eax*4+0x4e],ecx
  42897b:	and    eax,eax
  42897d:	pop    edi
  42897e:	xchg   ebx,eax
  42897f:	jmp    0x730f:0x3ce26385
  428986:	popf   
  428987:	or     DWORD PTR [eax],eax
  428989:	out    dx,eax
  42898a:	mov    edx,0x2ff32445
  42898f:	dec    ebp
  428990:	add    DWORD PTR [edx+eax*1+0x2d],ebx
  428994:	adc    al,0x86
  428996:	in     eax,dx
  428997:	xchg   DWORD PTR [ecx+eax*4],esi
  42899a:	gs retf 0x8123
  42899e:	jae    0x428990
  4289a0:	or     dl,BYTE PTR [eax]
  4289a2:	pushf  
  4289a3:	(bad)  
  4289a4:	jle    0x42896c
  4289a6:	sbb    dl,BYTE PTR [eax+0x18ff4288]
  4289ac:	lea    ecx,[edx+0x37]
  4289af:	adc    dl,BYTE PTR [eax-0x40]
  4289b2:	lahf   
  4289b3:	rcl    BYTE PTR [eax],1
  4289b5:	xchg   BYTE PTR [eax-0x64885fff],dl
  4289bb:	or     al,0x48
  4289bd:	ds lock jo 0x42897f
  4289c1:	add    BYTE PTR [esi-0x6eb7f325],al
  4289c7:	push   edi
  4289c8:	jge    0x4289ca
  4289ca:	xchg   bl,bl
  4289cc:	les    ecx,FWORD PTR [edx]
  4289ce:	or     bh,BYTE PTR [esi+eax*1+0x0]
  4289d2:	xchg   BYTE PTR [ebx-0x25047bfb],dh
  4289d8:	or     al,0x0
  4289da:	into   
  4289db:	or     BYTE PTR [eax-0x59],dh
  4289de:	xchg   bl,bl
  4289e0:	or     al,0xc2
  4289e2:	ret    0x7ff
  4289e5:	add    eax,0x442ed9f6
  4289ea:	bound  ecx,QWORD PTR [ecx]
  4289ec:	or     eax,0x70f04684
  4289f1:	loop   0x428979
  4289f3:	fisttp DWORD PTR [eax+ebp*2]
  4289f6:	mov    ebx,edx
  4289f8:	or     al,0x0
  4289fa:	or     ebx,DWORD PTR [edi-0x2f]
  4289fd:	xchg   ebx,eax
  4289fe:	xchg   bl,bl
  428a00:	or     al,0x50
  428a02:	mov    ch,0x4c
  428a04:	fisttp DWORD PTR [esi+0x55]
  428a07:	pop    esi
  428a08:	mov    cl,0x23
  428a0a:	mov    esi,0xc615374b
  428a0f:	inc    ecx
  428a10:	bnd ret 
  428a12:	jmp    0xa472cd4
  428a17:	mov    ebp,0x358603e2
  428a1c:	mov    ds:0xbebdfe9d,eax
  428a21:	fwait
  428a22:	enter  0xe2e8,0x86
  428a26:	add    BYTE PTR [edx],cl
  428a28:	push   ds
  428a29:	push   ebx
  428a2a:	add    eax,DWORD PTR [esi-0x64caecbe]
  428a30:	mov    edx,0xb9a9c3ee
  428a35:	scas   al,BYTE PTR es:[edi]
  428a36:	fbstp  TBYTE PTR [ecx+0x34]
  428a39:	cmp    al,0x86
  428a3b:	inc    edx
  428a3c:	push   ds
  428a3d:	pop    es
  428a3e:	sub    al,0x6c
  428a40:	inc    ecx
  428a41:	jecxz  0x428a46
  428a43:	add    eax,DWORD PTR [edx]
  428a45:	mov    bh,0xd5
  428a47:	shl    DWORD PTR [ebp+0x4315df5e],1
  428a4d:	jecxz  0x428a52
  428a4f:	(bad)  
  428a50:	out    0xed,eax
  428a52:	jae    0x4289eb
  428a54:	and    bl,0x7e
  428a57:	inc    esi
  428a58:	outs   dx,BYTE PTR ds:[esi]
  428a59:	mov    al,ds:0xc16f317f
  428a5e:	sbb    DWORD PTR [ecx+0x42],0x6f
  428a62:	icebp  
  428a63:	cli    
  428a64:	xor    ecx,0xfffffff6
  428a67:	inc    eax
  428a68:	jno    0x428a1a
  428a6a:	cmp    eax,0x13d11ec2
  428a6f:	sub    DWORD PTR [ebx],esi
  428a71:	mov    eax,ds:0xe73565c8
  428a76:	push   ds
  428a77:	je     0x428a79
  428a79:	pop    ds
  428a7a:	call   0x40ece09
  428a7f:	inc    esp
  428a80:	jg     0x428a81
  428a82:	add    BYTE PTR [eax],cl
  428a84:	fisttp DWORD PTR [edi]
  428a86:	xor    edi,ebp
  428a88:	out    0x9,eax
  428a8a:	scas   eax,DWORD PTR es:[edi]
  428a8b:	add    dh,cl
  428a8d:	and    edi,edi
  428a8f:	out    0xfb,eax
  428a91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428a92:	loop   0x428ad0
  428a94:	mov    ch,0xeb
  428a96:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428a98:	into   
  428a99:	and    eax,DWORD PTR [eax]
  428a9b:	fnstcw WORD PTR [eax+0x3d]
  428a9e:	enter  0xde25,0x39
  428aa2:	sub    al,BYTE PTR [edi-0x456920bf]
  428aa8:	push   eax
  428aa9:	mov    ch,0x45
  428aab:	int    0xc5
  428aad:	ja     0x428b2e
  428aaf:	and    eax,0xba5a2b9e
  428ab4:	push   es
  428ab5:	jg     0x428add
  428ab7:	adc    DWORD PTR [edx+0x739516ec],edi
  428abd:	or     BYTE PTR [edx],0x64
  428ac0:	dec    edx
  428ac1:	outs   dx,BYTE PTR ds:[esi]
  428ac2:	push   cs
  428ac3:	jb     0x428a83
  428ac5:	and    esi,DWORD PTR [edx]
  428ac7:	jo     0x428b15
  428ac9:	in     eax,0x83
  428acb:	lods   eax,DWORD PTR ds:[esi]
  428acc:	popa   
  428acd:	sub    eax,DWORD PTR [ebx+0x45bf7fa7]
  428ad3:	int    0x45
  428ad5:	mov    edx,0x7ee0f347
  428ada:	lods   eax,DWORD PTR es:[esi]
  428adc:	fiadd  DWORD PTR [eax+eax*1+0x233e63]
  428ae3:	repz inc ecx
  428ae5:	and    edi,edi
  428ae7:	jno    0x428b2f
  428ae9:	and    ebx,DWORD PTR [edx]
  428aeb:	popa   
  428aec:	dec    esp
  428aed:	inc    edx
  428aee:	xor    ebx,DWORD PTR [ebp+0x774f2900]
  428af4:	in     al,dx
  428af5:	sub    DWORD PTR [edi-0x7e],esp
  428af8:	daa    
  428af9:	mov    ebp,esp
  428afb:	inc    ebp
  428afc:	or     eax,0x545eb85
  428b01:	jp     0x428ac5
  428b03:	ins    DWORD PTR es:[edi],dx
  428b04:	add    BYTE PTR [ebx+0x43],bh
  428b07:	sbb    BYTE PTR [edi],cl
  428b09:	ins    DWORD PTR es:[edi],dx
  428b0a:	scas   al,BYTE PTR es:[edi]
  428b0b:	repnz push DWORD PTR [eax]
  428b0e:	ret    
  428b0f:	ins    DWORD PTR es:[edi],dx
  428b10:	and    al,0x8b
  428b12:	mov    DWORD PTR ds:[ebp-0x9],eax
  428b16:	addr16 ds and al,0xdb
  428b1a:	add    dh,BYTE PTR gs:[ebp-0x1a]
  428b1e:	xor    esi,DWORD PTR [esi+0x24]
  428b21:	adc    ecx,DWORD PTR [ebx-0x56]
  428b24:	add    DWORD PTR cs:[ecx+ecx*4],esi
  428b28:	(bad)  
  428b29:	mov    al,ds:0xa8b5814
  428b2e:	adc    ch,BYTE PTR [edi-0x77f660fc]
  428b34:	in     al,dx
  428b35:	sbb    al,0x1f
  428b37:	repnz adc DWORD PTR [ebx-0x29],0x3f
  428b3c:	push   esi
  428b3d:	fadd   st,st(4)
  428b3f:	or     BYTE PTR [ebx],dh
  428b41:	push   esp
  428b42:	adc    DWORD PTR [eax+0x2cff12d6],ecx
  428b48:	sbb    al,0xf6
  428b4a:	cmc    
  428b4b:	sub    al,0x1c
  428b4d:	out    0xf5,al
  428b4f:	sub    al,0x20
  428b51:	out    0xf5,al
  428b53:	sub    al,0x24
  428b55:	add    BYTE PTR [eax+0x2f282cfd],bl
  428b5b:	inc    edx
  428b5c:	or     al,BYTE PTR [eax]
  428b5e:	xchg   DWORD PTR [esi+ebx*1-0x1],ebp
  428b62:	and    BYTE PTR [esi+edi*1+0x24],0x63
  428b67:	mov    esi,0x653174c9
  428b6c:	inc    esi
  428b6d:	and    al,0x4f
  428b6f:	cmp    eax,0xddbb89cb
  428b74:	adc    BYTE PTR [ebx],bh
  428b76:	fsubr  QWORD PTR [ebp-0x55c8af03]
  428b7c:	and    bh,dh
  428b7e:	xchg   BYTE PTR [edi+esi*8],cl
  428b81:	mov    edi,0x6ef1f
  428b86:	xchg   al,ch
  428b88:	dec    esp
  428b89:	lea    eax,[edx+0x60a7193f]
  428b8f:	ror    BYTE PTR [edi-0x3e],0x4a
  428b93:	aas    
  428b94:	adc    al,BYTE PTR [ecx]
  428b96:	fsubp  st(3),st
  428b98:	dec    ecx
  428b99:	cli    
  428b9a:	loope  0x428c0c
  428b9c:	mov    DWORD PTR ss:[edx-0x9],edx
  428ba0:	sbb    al,0x37
  428ba2:	aad    0x4
  428ba4:	mov    DWORD PTR [ebx],ebx
  428ba6:	xchg   ebx,ebx
  428ba8:	or     al,0x87
  428baa:	mov    ds:0x864012ab,eax
  428baf:	pusha  
  428bb0:	les    edi,FWORD PTR [edi]
  428bb2:	add    eax,0x20afe74
  428bb7:	test   DWORD PTR [esi],eax
  428bb9:	add    BYTE PTR [eax],al
  428bbb:	xchg   BYTE PTR [esi-0x79],al
  428bbe:	add    BYTE PTR [esi-0x5d7bf625],al
  428bc4:	fisttp DWORD PTR [eax+eax*1]
  428bc7:	add    eax,0x9100c8fe
  428bcc:	pop    esi
  428bcd:	sub    BYTE PTR [eax],al
  428bcf:	xchg   bl,bl
  428bd1:	adc    al,0x3b
  428bd3:	mov    ebx,ebx
  428bd5:	or     al,0x3c
  428bd7:	or     cl,0xf3
  428bda:	repnz enter 0x8ce3,0x1
  428bdf:	xchg   bl,bl
  428be1:	or     eax,0x8b50506
  428be6:	add    bl,dl
  428be8:	icebp  
  428be9:	test   DWORD PTR [edx-0x32],edi
  428bec:	fisttp DWORD PTR [ecx]
  428bee:	test   BYTE PTR [esi-0x25],al
  428bf1:	or     al,0x0
  428bf3:	jne    0x428c10
  428bf5:	nop
  428bf6:	add    DWORD PTR [eax+0x65c77a42],esp
  428bfc:	xor    cl,BYTE PTR [edx+0x7f]
  428bff:	call   0x6b97:0xe935091e
  428c06:	mov    cl,0x79
  428c08:	(bad)  [edi]
  428c0a:	jge    0x428c51
  428c0c:	ss inc bx
  428c0f:	jb     0x428c88
  428c11:	ins    BYTE PTR es:[edi],dx
  428c12:	rol    BYTE PTR [ecx+0x7313b9c1],0x44
  428c19:	add    DWORD PTR [ebp+0xc16409e],eax
  428c1f:	add    BYTE PTR [eax],al
  428c21:	jbe    0x428be2
  428c23:	repnz iret 
  428c25:	jge    0x428bee
  428c27:	repnz add eax,0x40f4edfb
  428c2d:	add    ah,bh
  428c2f:	popf   
  428c30:	test   DWORD PTR [edx+0x2965c766],edx
  428c36:	mov    edx,fs
  428c38:	sub    bl,ch
  428c3a:	push   es
  428c3b:	mov    bh,0x83
  428c3d:	pop    esp
  428c3e:	fs jmp 0x428cb5
  428c41:	outs   dx,DWORD PTR ds:[esi]
  428c42:	idiv   DWORD PTR [ebp+0x42]
  428c45:	push   ds
  428c46:	adc    eax,0xf51e4232
  428c4b:	xchg   DWORD PTR [edi+0x6e],ecx
  428c4e:	rol    DWORD PTR [esi+eax*2-0x29ec32c5],cl
  428c55:	mov    ch,0xa6
  428c57:	out    0xac,eax
  428c59:	xchg   edx,eax
  428c5a:	sub    BYTE PTR [ecx+eiz*8-0x2],dl
  428c5e:	fidivr WORD PTR [ebp+ebx*8+0x3a]
  428c62:	pop    esi
  428c63:	xor    bl,bl
  428c65:	popf   
  428c66:	mov    BYTE PTR [esp+eax*8+0x2a],bh
  428c6a:	cmp    DWORD PTR [edx-0x36],0xc47cbf1e
  428c71:	or     BYTE PTR [edx],0x30
  428c74:	jbe    0x428cb8
  428c76:	or     ch,cl
  428c78:	sbb    bh,ah
  428c7a:	adc    esi,DWORD PTR [eax-0x4ed3eea8]
  428c80:	popf   
  428c81:	sub    BYTE PTR [esi],0x61
  428c84:	add    BYTE PTR [esi+0x20],al
  428c87:	and    BYTE PTR [eax-0x16f618a7],dl
  428c8d:	sub    edi,DWORD PTR [ebx+0x2cd9053d]
  428c93:	retf   
  428c94:	ds jg  0x428cf7
  428c97:	and    DWORD PTR ds:0x26418de,0x7
  428c9e:	jg     0x428cc6
  428ca0:	fnstenv [ebp-0x52328a18]
  428ca6:	mov    dh,0x6d
  428ca8:	lds    ebp,FWORD PTR [ebp+0x70d21ddb]
  428cae:	out    0x86,eax
  428cb0:	test   eax,0x2df03ffe
  428cb5:	sahf   
  428cb6:	dec    edx
  428cb7:	test   edi,esi
  428cb9:	lods   eax,DWORD PTR ds:[esi]
  428cba:	mov    esi,0xd50ef6f7
  428cbf:	out    dx,eax
  428cc0:	pop    esi
  428cc1:	imul   esp,edi,0xda7a0d75
  428cc7:	or     al,0xfc
  428cc9:	pop    ebx
  428cca:	out    0x3c,eax
  428ccc:	and    bl,BYTE PTR [edx+eax*2]
  428ccf:	loop   0x428d11
  428cd1:	(bad)  
  428cd2:	call   0x2bfcefc7
  428cd7:	std    
  428cd8:	mov    ch,0x2a
  428cda:	mov    edx,0x2975cd4d
  428cdf:	adc    BYTE PTR [edi-0x12b04994],bl
  428ce5:	add    al,0x6b
  428ce7:	push   es
  428ce8:	stc    
  428ce9:	add    BYTE PTR [esi],cl
  428ceb:	and    al,BYTE PTR [ebp-0x3645d400]
  428cf1:	je     0x428d17
  428cf3:	leave  
  428cf4:	or     al,0x83
  428cf6:	pop    edi
  428cf7:	cmp    bl,BYTE PTR [edx-0x1]
  428cfa:	mov    bl,0xdb
  428cfc:	sub    BYTE PTR [ebp-0x17d72555],cl
  428d02:	ror    BYTE PTR [eax],1
  428d04:	hlt    
  428d05:	jmp    DWORD PTR [edx+0x3904767f]
  428d0b:	sti    
  428d0c:	sub    al,0x1a
  428d0e:	enter  0x2cfa,0x10
  428d12:	je     0x428d0f
  428d14:	sub    al,0x10
  428d16:	pop    esp
  428d17:	add    BYTE PTR [edx],0x3b
  428d1a:	loope  0x428cae
  428d1c:	(bad)  
  428d1d:	xor    eax,esp
  428d1f:	or     al,0xe9
  428d21:	stos   DWORD PTR es:[edi],eax
  428d22:	retf   
  428d23:	adc    al,0xf5
  428d25:	push   0xffffffdd
  428d27:	inc    esi
  428d28:	xchg   ecx,eax
  428d29:	int3   
  428d2a:	stc    
  428d2b:	adc    ecx,DWORD PTR [ecx+0x762fc4f0]
  428d31:	dec    ecx
  428d32:	ss repz sub al,0x10
  428d36:	div    BYTE PTR [esp+esi*2]
  428d39:	cmp    ecx,DWORD PTR [edx-0xb]
  428d3c:	or     al,0x83
  428d3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428d3f:	cmp    cl,BYTE PTR [esi]
  428d41:	jne    0x428cd1
  428d43:	addr16 icebp 
  428d45:	test   BYTE PTR [edi-0x55],bl
  428d48:	pop    ss
  428d49:	push   0xffffff8f
  428d4b:	mov    edi,0x1f0008c9
  428d50:	xor    DWORD PTR [esi+0x24],esi
  428d53:	xchg   edi,eax
  428d54:	ret    
  428d55:	ins    DWORD PTR es:[edi],dx
  428d56:	and    al,0x87
  428d58:	mov    ebp,DWORD PTR ds:[edx]
  428d5b:	cwde   
  428d5c:	xor    BYTE PTR [edi-0xbb5fc40],al
  428d62:	inc    esp
  428d63:	inc    ebx
  428d64:	dec    ebp
  428d65:	cmc    
  428d66:	inc    esp
  428d67:	xchg   BYTE PTR [edi],cl
  428d69:	sbb    eax,0x1d07c287
  428d6e:	jg     0x428db5
  428d70:	aam    0xe3
  428d72:	add    DWORD PTR [edx-0x272903eb],edi
  428d78:	inc    ebx
  428d79:	shr    BYTE PTR [ebx],cl
  428d7b:	sub    cl,dh
  428d7d:	xchg   ecx,eax
  428d7e:	pop    es
  428d7f:	adc    esi,DWORD PTR [eax]
  428d81:	loop   0x428d9a
  428d83:	mov    dh,0x1c
  428d85:	jno    0x428e03
  428d87:	push   0x43
  428d89:	jne    0x428de7
  428d8b:	bound  ecx,QWORD PTR [edx+0xe]
  428d8e:	dec    ebp
  428d8f:	lods   al,BYTE PTR ds:[esi]
  428d90:	or     BYTE PTR [edi],bl
  428d92:	xchg   DWORD PTR [edx+0x47],eax
  428d95:	out    0x86,al
  428d97:	inc    ebx
  428d98:	jecxz  0x428d73
  428d9a:	mov    BYTE PTR [edi-0x1fd402fd],al
  428da0:	test   al,0x72
  428da2:	inc    esp
  428da3:	mov    ds:0x2d59bddf,al
  428da8:	sub    DWORD PTR fs:[ebp-0x3c],ebx
  428dac:	out    0xc,eax
  428dae:	push   ebp
  428daf:	or     eax,0xec8ab8
  428db4:	ss cmp al,0xd8
  428db7:	gs xchg esi,eax
  428db9:	inc    ebp
  428dba:	push   es
  428dbb:	push   ebx
  428dbc:	test   eax,0x4611f8f6
  428dc1:	jmp    0x428d4c
  428dc3:	les    ecx,FWORD PTR [edx+0x36a7c96e]
  428dc9:	xor    DWORD PTR [edi],eax
  428dcb:	add    ecx,eax
  428dcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428dce:	push   esp
  428dcf:	inc    eax
  428dd0:	xchg   bl,ch
  428dd2:	or     al,0xfb
  428dd4:	xchg   ebx,eax
  428dd5:	push   edi
  428dd6:	sbb    eax,0x466e8640
  428ddb:	je     0x428d82
  428ddd:	fs leave 
  428ddf:	mov    bl,0xd
  428de1:	inc    edx
  428de2:	mov    dh,0x73
  428de4:	lea    ebp,[esi-0x15b8e7df]
  428dea:	out    dx,al
  428deb:	xchg   BYTE PTR [esi+0x57],al
  428dee:	out    0x80,al
  428df0:	aas    
  428df1:	loope  0x428e63
  428df3:	add    al,0x69
  428df5:	or     eax,edx
  428df7:	mov    esi,0x7ae3ed35
  428dfc:	ret    
  428dfd:	(bad)  
  428dfe:	imul   edi,DWORD PTR [ebp+0x3c1dcf86],0x8ff5e1b6
  428e08:	ja     0x428d8c
  428e0a:	jecxz  0x428e77
  428e0c:	or     eax,0xb903e2e1
  428e11:	xchg   DWORD PTR [edi-0x144d8c82],esp
  428e17:	inc    ebx
  428e18:	add    ch,dh
  428e1a:	icebp  
  428e1b:	add    eax,edi
  428e1d:	int    0x67
  428e1f:	push   0xffffffc4
  428e21:	mov    bl,BYTE PTR [edx+0x42860388]
  428e27:	fwait
  428e28:	and    BYTE PTR [eax-0x1f],dl
  428e2b:	xchg   edi,eax
  428e2c:	jle    0x428e81
  428e2e:	rcr    BYTE PTR [edx-0x74],cl
  428e31:	xchg   BYTE PTR [edx-0x1d],al
  428e34:	sbb    edx,esp
  428e36:	ret    
  428e37:	outs   dx,DWORD PTR ds:[esi]
  428e38:	sub    al,0x9
  428e3a:	or     BYTE PTR [ebx],dl
  428e3c:	jg     0x428e81
  428e3e:	mov    dl,0x12
  428e40:	ins    BYTE PTR es:[edi],dx
  428e41:	mov    al,ds:0xae83e2e0
  428e46:	or     esi,edi
  428e48:	add    eax,DWORD PTR [esi+0x72980dcd]
  428e4e:	and    bl,0x99
  428e51:	ror    ecx,1
  428e53:	lahf   
  428e54:	add    al,0x7d
  428e56:	stc    
  428e57:	fdivr  QWORD PTR [ebp-0x1df577f7]
  428e5d:	call   0xf0fa:0xde9e63f4
  428e64:	aas    
  428e65:	fmul   DWORD PTR [edi-0x245f9f0f]
  428e6b:	or     ecx,ebp
  428e6d:	pop    esi
  428e6e:	repz js 0x428e4f
  428e71:	shl    BYTE PTR [edx-0xf],0xc2
  428e75:	aam    0x53
  428e77:	add    al,BYTE PTR [edi-0x71018454]
  428e7d:	add    BYTE PTR [ebx+eax*4+0xb4e8f00],ch
  428e84:	int    0x3c
  428e86:	cdq    
  428e87:	out    dx,al
  428e88:	mov    ebp,es
  428e8a:	(bad)
  428e8f:	inc    edx
  428e90:	or     bh,BYTE PTR [edx]
  428e92:	aam    0x74
  428e94:	cmp    eax,0x82f8f1a9
  428e99:	sbb    eax,0x357f87e6
  428e9e:	out    0x8b,al
  428ea0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428ea1:	sbb    cl,0x9f
  428ea4:	add    BYTE PTR [ebp-0x1a],0x73
  428ea8:	jg     0x428ec7
  428eaa:	out    0x77,al
  428eac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428ead:	inc    edx
  428eae:	dec    ebx
  428eaf:	jle    0x428ed7
  428eb1:	or     DWORD PTR [ecx-0x59fa8161],edi
  428eb7:	arpl   WORD PTR [ebp+0x3223f66c],sp
  428ebd:	pusha  
  428ebe:	mov    esi,0x82423a23
  428ec3:	fwait
  428ec4:	sti    
  428ec5:	ins    WORD PTR es:[edi],dx
  428ec7:	int    0xb5
  428ec9:	add    eax,0xe90a4306
  428ece:	sbb    eax,0x85e909a2
  428ed3:	add    eax,DWORD PTR [esi+0x0]
  428ed6:	mov    ebp,esi
  428ed8:	in     al,dx
  428ed9:	mov    ebx,DWORD PTR [edi]
  428edb:	inc    ebx
  428edc:	sbb    DWORD PTR [ebx+edi*2+0x6],0xffffff82
  428ee1:	pop    esp
  428ee2:	add    BYTE PTR [ebx-0x12d616fe],cl
  428ee8:	sub    esi,ebp
  428eea:	lea    edi,[ebx+0x5f00a4e2]
  428ef0:	inc    ebx
  428ef1:	mov    dl,0xa1
  428ef3:	das    
  428ef4:	inc    ebx
  428ef5:	or     ch,al
  428ef7:	daa    
  428ef8:	(bad)
  428efb:	mov    ah,0x84
  428efd:	pop    edx
  428efe:	(bad)  
  428eff:	(bad)  
  428f01:	xor    al,0x50
  428f03:	xchg   DWORD PTR [eax+eiz*8],ecx
  428f06:	jmp    DWORD PTR [eax]
  428f08:	pop    edi
  428f09:	retf   0x8575
  428f0c:	pop    ecx
  428f0d:	xchg   BYTE PTR [ebx+ebx*4],ah
  428f10:	inc    ebx
  428f11:	or     al,BYTE PTR [eax]
  428f13:	mov    edi,0x83244659
  428f18:	imul   al
  428f1a:	dec    eax
  428f1b:	sub    al,0x2c
  428f1d:	cmc    
  428f1e:	test   BYTE PTR [edi],bl
  428f20:	fmul   QWORD PTR [eax+eax*2-0x74f5bd12]
  428f27:	loop   0x428f0f
  428f29:	(bad)  
  428f2a:	aas    
  428f2b:	fistp  WORD PTR [ecx+0x46]
  428f2e:	and    al,0xa7
  428f30:	pop    ebp
  428f31:	inc    esi
  428f32:	and    al,0xcf
  428f34:	pop    ecx
  428f35:	inc    esi
  428f36:	and    al,0x9b
  428f38:	pop    ebp
  428f39:	inc    esi
  428f3a:	and    al,0xcb
  428f3c:	pop    ecx
  428f3d:	inc    esi
  428f3e:	and    al,0x7f
  428f40:	pop    ebp
  428f41:	inc    esi
  428f42:	and    al,0xc7
  428f44:	pop    ecx
  428f45:	inc    esi
  428f46:	and    al,0x0
  428f48:	(bad)  
  428f49:	pop    ebp
  428f4a:	inc    esi
  428f4b:	and    al,0x9b
  428f4d:	add    DWORD PTR [esi+0x24],0xffffff86
  428f51:	aad    0x3c
  428f53:	xchg   esi,eax
  428f55:	jmp    0x428fa2
  428f57:	inc    esp
  428f58:	mov    ds:0x86000937,al
  428f5d:	jmp    0x428fce
  428f5f:	inc    esp
  428f60:	mov    ds:0x8686aaf7,al
  428f65:	jle    0x428fc8
  428f67:	and    al,0x3e
  428f69:	in     al,dx
  428f6a:	or     al,0x0
  428f6c:	pop    esi
  428f6d:	mov    BYTE PTR [esi-0x370cb605],al
  428f73:	and    ecx,edx
  428f75:	mov    dh,0x17
  428f77:	push   0xffcd515a
  428f7c:	xor    BYTE PTR ds:0xaf62446e,dh
  428f82:	fistp  QWORD PTR [esi+0x2f6791]
  428f88:	xchg   bl,ch
  428f8a:	ja     0x428f10
  428f8c:	push   0x3
  428f8e:	push   es
  428f8f:	add    BYTE PTR [esi-0x55a38ae5],al
  428f95:	xlat   BYTE PTR ds:[ebx]
  428f96:	and    ebx,edx
  428f98:	or     eax,0x7aeede9c
  428f9d:	cld    
  428f9e:	ins    DWORD PTR es:[edi],dx
  428f9f:	inc    esp
  428fa0:	mov    ds:0x13086f2b,al
  428fa5:	cmp    dl,ch
  428fa7:	sysenter 
  428fa9:	sbb    BYTE PTR [eax-0x43c7ffd1],dl
  428faf:	mov    ecx,0x231b3223
  428fb4:	push   ecx
  428fb5:	push   esi
  428fb6:	inc    si
  428fb8:	je     0x428f3c
  428fba:	push   edx
  428fbb:	ret    0x9623
  428fbe:	xor    eax,0xf8461523
  428fc3:	int3   
  428fc4:	dec    DWORD PTR [eax+ebp*1]
  428fc7:	jmp    0x79df:0x9f430f0f
  428fce:	sbb    DWORD PTR [ecx+edi*8],esp
  428fd1:	add    eax,0x8603e2c3
  428fd6:	leave  
  428fd7:	jmp    0x2d5:0xd726d276
  428fde:	jbe    0x428fe7
  428fe0:	in     al,dx
  428fe1:	mov    ebx,0x919be268
  428fe6:	and    eax,0xddb603e3
  428feb:	mov    cl,0x13
  428fed:	or     eax,DWORD PTR [edx]
  428fef:	xchg   esi,eax
  428ff0:	int3   
  428ff1:	enter  0xbf5e,0x97
  428ff5:	xchg   BYTE PTR [edi-0x49],dl
  428ff8:	jl     0x428fbc
  428ffa:	es scas eax,DWORD PTR es:[edi]
  428ffc:	jl     0x42907c
  428ffe:	jno    0x428f94
  429000:	jbe    0x428fd4
  429002:	es jnp 0x428fda
  429005:	shr    BYTE PTR [edx-0x5],1
  429008:	jl     0x428fd0
  42900a:	inc    edx
  42900b:	xor    ebp,DWORD PTR [ecx]
  42900d:	mov    bh,0x32
  42900f:	inc    bx
  429011:	add    BYTE PTR [ebx-0x7d7abed3],dl
  429017:	es push ebx
  429019:	cld    
  42901a:	jb     0x42905a
  42901c:	jl     0x428fdd
  42901e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42901f:	pop    edx
  429020:	or     al,0x45
  429022:	jb     0x42905a
  429024:	inc    ecx
  429025:	jmp    0x4290a0
  429027:	push   esi
  429028:	rcl    bl,1
  42902a:	add    BYTE PTR [esi+0x12090bbf],al
  429030:	fs cmp ecx,ebp
  429033:	jmp    0xdd0229e1
  429038:	dec    ebp
  429039:	mov    edi,0x29135265
  42903e:	fwait
  42903f:	sbb    dl,ah
  429041:	ret    
  429042:	test   eax,0xa62d09c7
  429047:	adc    BYTE PTR [ebp+0x5ad7b5e1],al
  42904d:	icebp  
  42904e:	adc    al,BYTE PTR [esi+0x4a0b0126]
  429054:	pop    edx
  429055:	push   esi
  429056:	push   esp
  429057:	inc    esp
  429058:	lea    esp,[ebp+0x6a0c3859]
  42905e:	xor    DWORD PTR [eax],esp
  429060:	push   ss
  429061:	in     eax,0x9e
  429063:	mov    fs,WORD PTR [esi]
  429065:	add    eax,0x2ff7c75f
  42906a:	scas   al,BYTE PTR es:[edi]
  42906b:	xlat   BYTE PTR ds:[ebx]
  42906c:	jle    0x42900b
  42906e:	xor    DWORD PTR [edx+eiz*8],edx
  429071:	cmp    DWORD PTR [edi+edx*8-0xeff9b10],edx
  429078:	pop    ds
  429079:	sub    al,BYTE PTR [ecx]
  42907b:	xchg   ebp,eax
  42907c:	shl    eax,1
  42907e:	push   es
  42907f:	lods   al,BYTE PTR ds:[esi]
  429080:	jle    0x4290a8
  429082:	shr    DWORD PTR [edx+0x41adc8f8],1
  429088:	cmp    al,0x2a
  42908a:	pop    ebp
  42908b:	inc    ebp
  42908c:	fsub   st(0),st
  42908e:	aam    0x85
  429090:	inc    edx
  429091:	or     ah,BYTE PTR [ebp-0x3e]
  429094:	push   esi
  429095:	push   ds
  429096:	(bad)  
  429097:	(bad)  
  429098:	pop    ds
  429099:	and    ah,BYTE PTR [edx-0x6]
  42909c:	into   
  42909d:	push   ebp
  42909e:	or     eax,0xbe5a8c9a
  4290a3:	sar    DWORD PTR [ebx],cl
  4290a5:	xchg   DWORD PTR [ecx+0x6a684517],ebp
  4290ab:	and    BYTE PTR cs:[edx],bl
  4290ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4290af:	fldcw  WORD PTR [edi+0x2c8492c9]
  4290b5:	retf   0x4a6d
  4290b8:	push   esi
  4290b9:	add    ah,BYTE PTR [esi+0x3a1fc6]
  4290bf:	sahf   
  4290c0:	aas    
  4290c1:	or     al,BYTE PTR [eax]
  4290c3:	sbb    dl,BYTE PTR [edx-0x32f8dfd4]
  4290c9:	lock jmp FWORD PTR [edi-0x48dbc1a8]
  4290d0:	inc    eax
  4290d1:	ds and al,0xcb
  4290d4:	pop    eax
  4290d5:	inc    esi
  4290d6:	and    al,0x3f
  4290d8:	pop    edx
  4290d9:	dec    esi
  4290da:	add    DWORD PTR [eax],eax
  4290dc:	addr16 pop esi
  4290de:	dec    esi
  4290df:	and    al,0x67
  4290e1:	ret    0x75d8
  4290e4:	arpl   ax,dx
  4290e6:	repz jmp 0x429134
  4290e9:	pop    eax
  4290ea:	mov    cl,0xe8
  4290ec:	call   0xd54283ef
  4290f1:	cs xchg edi,edi
  4290f4:	repz add ecx,DWORD PTR [eax-0x7830acbc]
  4290fb:	xor    eax,0x4a4d5f
  429100:	mov    dh,0x9b
  429102:	or     esi,eax
  429104:	and    BYTE PTR [esi-0x78],al
  429107:	inc    esp
  429108:	push   ebx
  429109:	out    dx,eax
  42910a:	mov    BYTE PTR [edi+0x22],al
  42910d:	pop    ecx
  42910e:	inc    esi
  42910f:	and    al,0xcb
  429111:	pop    esi
  429112:	dec    ebp
  429113:	push   es
  429114:	xchg   ebp,eax
  429115:	fwait
  429116:	sub    al,0x68
  429118:	addr16 pushf 
  42911a:	or     ecx,DWORD PTR [edi]
  42911c:	adc    DWORD PTR [ebp+eax*1+0x2caac850],ebx
  429123:	dec    esp
  429124:	pop    edx
  429125:	add    al,0x9
  429127:	push   ebx
  429128:	sbb    BYTE PTR [ebp+0x41a0b605],cl
  42912e:	icebp  
  42912f:	xlat   BYTE PTR ds:[ebx]
  429130:	fsubr  DWORD PTR [ebp+ecx*2+0x6]
  429134:	(bad)  
  429135:	and    esi,DWORD PTR [esi+0x24]
  429138:	xchg   BYTE PTR [ebp-0x23],cl
  42913b:	cli    
  42913c:	sar    bl,1
  42913e:	pop    esi
  42913f:	inc    ebx
  429140:	add    BYTE PTR [ecx+0x41b1f939],cl
  429146:	jecxz  0x42916f
  429148:	je     0x4291b4
  42914a:	aad    0xb
  42914c:	mov    edi,0x873f6c36
  429151:	xor    cl,BYTE PTR [ebp-0x1e]
  429154:	jle    0x429118
  429156:	inc    esp
  429157:	jae    0x4291cd
  429159:	stos   BYTE PTR es:[edi],al
  42915a:	mov    ds:0x89eb9314,eax
  42915f:	sub    BYTE PTR [ebp-0x1825b806],cl
  429165:	clc    
  429166:	push   es
  429167:	daa    
  429168:	sti    
  429169:	adc    ebx,DWORD PTR [eax+0x5f6e5fd0]
  42916f:	xchg   edx,eax
  429170:	stc    
  429171:	push   ecx
  429172:	push   ebp
  429173:	retf   0xff07
  429176:	inc    ebx
  429177:	jne    0x42913c
  429179:	loope  0x42910c
  42917b:	ret    
  42917c:	xchg   BYTE PTR [ebx],ah
  42917e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42917f:	dec    edx
  429180:	add    al,0x86
  429182:	push   esp
  429183:	mov    ch,0xb
  429185:	add    edx,DWORD PTR [ebx]
  429187:	mov    edx,0xf4a40d07
  42918c:	mov    dh,cl
  42918e:	not    DWORD PTR [ebx]
  429190:	das    
  429191:	std    
  429192:	sbb    ebp,esi
  429194:	ss cmp al,0x7e
  429197:	into   
  429198:	push   ecx
  429199:	or     eax,0x928d0a7c
  42919e:	jge    0x429168
  4291a0:	ss mov esp,0x62021c
  4291a6:	std    
  4291a7:	cli    
  4291a8:	mov    ecx,eax
  4291aa:	test   BYTE PTR [edx-0x52],ah
  4291ad:	or     esp,DWORD PTR [eax+0x5e]
  4291b0:	pop    esp
  4291b1:	jne    0x429187
  4291b3:	inc    edx
  4291b4:	add    ebx,ebp
  4291b6:	jbe    0x429207
  4291b8:	fiadd  WORD PTR [eax-0x4395bb39]
  4291be:	lea    edx,ds:0x623141a3
  4291c4:	test   DWORD PTR [ebx],0x40df8301
  4291ca:	cmp    ecx,ebp
  4291cc:	xchg   BYTE PTR [ecx+0x66191eaa],al
  4291d2:	dec    esi
  4291d3:	(bad)  
  4291d4:	mov    ds:0xe6013403,eax
  4291d9:	jmp    0x429220
  4291db:	test   ebx,esp
  4291dd:	pop    es
  4291de:	xchg   DWORD PTR [edx-0x1d],eax
  4291e1:	and    al,0x9b
  4291e3:	(bad)  
  4291e4:	aam    0xc3
  4291e6:	imul   edi,DWORD PTR [esi+0x4605f522],0x6c8603e2
  4291f0:	in     eax,0xca
  4291f2:	mov    es,WORD PTR [edi-0x45]
  4291f5:	aas    
  4291f6:	mov    DWORD PTR [edx-0x20],eax
  4291f9:	jle    0x42923e
  4291fb:	inc    edx
  4291fc:	jecxz  0x429201
  4291fe:	out    0x73,al
  429200:	shl    DWORD PTR es:[ecx],0x14
  429204:	adc    eax,0x954f86e8
  429209:	bound  eax,QWORD PTR [eax]
  42920b:	(bad)  
  42920c:	(bad)  
  42920d:	mov    ds:0xe5da9903,eax
  429212:	scas   al,BYTE PTR es:[edi]
  429213:	jo     0x4291b8
  429215:	and    al,BYTE PTR [eax+0x49]
  429218:	inc    edx
  429219:	sub    al,0x42
  42921b:	jnp    0x429268
  42921d:	mov    eax,ds:0x23fea9fe
  429222:	add    al,0x87
  429224:	in     eax,dx
  429225:	inc    esi
  429226:	sub    esi,0x99003742
  42922c:	add    ecx,DWORD PTR [edx]
  42922e:	cmp    al,0x17
  429230:	sar    esi,0xf8
  429233:	xchg   ecx,eax
  429234:	sbb    DWORD PTR [edx],ecx
  429236:	xchg   edx,eax
  429237:	out    dx,al
  429238:	push   edi
  429239:	repnz out 0xf0,eax
  42923c:	bound  ebp,QWORD PTR [ebx+0xa194629]
  429242:	rol    BYTE PTR [edi+0x4f],cl
  429245:	add    ebp,DWORD PTR [edi+0x2ac628a8]
  42924b:	mov    bh,BYTE PTR [esi]
  42924d:	in     eax,0x1d
  42924f:	pop    es
  429250:	fimul  DWORD PTR [edx]
  429252:	hlt    
  429253:	fiadd  DWORD PTR [edx]
  429255:	pop    es
  429256:	sbb    DWORD PTR [esi+0x19],eax
  429259:	or     ah,bh
  42925b:	sahf   
  42925c:	test   BYTE PTR [eax+ebp*1],dh
  42925f:	sub    DWORD PTR [esi+ebp*1-0x16],eax
  429263:	and    BYTE PTR [edx],bl
  429265:	stos   DWORD PTR es:[edi],eax
  429266:	add    eax,0x6a0a17c6
  42926b:	lods   eax,DWORD PTR ds:[esi]
  42926c:	cmp    eax,0x6c00d877
  429271:	inc    edi
  429272:	dec    edx
  429273:	and    eax,0xd575d846
  429278:	mov    edi,DWORD PTR ds:0xd846253a
  42927e:	or     eax,DWORD PTR [edx]
  429280:	es pop ecx
  429282:	repnz out 0xe0,eax
  429285:	cmp    DWORD PTR [ebx+0xa1769a9],ebp
  42928b:	ret    0x4dc7
  42928e:	add    ebp,DWORD PTR [edi]
  429290:	sbb    BYTE PTR [eax],ch
  429292:	(bad)  
  429293:	stos   BYTE PTR es:[edi],al
  429294:	test   DWORD PTR ds:0xdb00f5e5,edi
  42929a:	or     dl,BYTE PTR [ebp+ecx*4+0x4]
  42929e:	pop    es
  42929f:	sbb    DWORD PTR [esi+0x17],ecx
  4292a2:	or     ah,dh
  4292a4:	push   0x7e
  4292a6:	mov    BYTE PTR [eax],0x9c
  4292a9:	ds mov bl,0xff
  4292ac:	and    BYTE PTR [edi],bh
  4292ae:	or     bh,BYTE PTR [ebx]
  4292b0:	daa    
  4292b1:	fadd   st,st(1)
  4292b3:	imul   esi
  4292b5:	(bad)  
  4292b7:	mov    eax,0xa3f20
  4292bc:	mov    ebp,eax
  4292be:	(bad)  
  4292bf:	xor    ebx,ebp
  4292c1:	push   eax
  4292c3:	gs (bad) 
  4292c5:	dec    edx
  4292c6:	lds    ebx,FWORD PTR ds:[esi+edi*1+0x7d]
  4292cb:	adc    eax,0x4e15f589
  4292d0:	jmp    0x63b3:0x74f0ff
  4292d7:	(bad)
  4292db:	nop
  4292dc:	xor    al,0xab
  4292de:	push   eax
  4292e0:	jmp    0xffab:0x3416cb69
  4292e7:	lock mov WORD PTR [edx],ds
  4292ea:	pop    ss
  4292eb:	pop    edx
  4292ec:	(bad)  
  4292ed:	cmp    dl,BYTE PTR [edi+0x1b]
  4292f0:	inc    eax
  4292f1:	outs   dx,DWORD PTR ds:[esi]
  4292f2:	test   eax,0xac834587
  4292f7:	(bad)  
  4292f8:	ss fwait
  4292fa:	push   eax
  4292fc:	scas   eax,DWORD PTR es:[edi]
  4292fd:	sub    BYTE PTR cs:[ecx],ah
  429300:	xor    edi,DWORD PTR [ebp-0x11]
  429303:	mov    al,0x68
  429305:	and    edi,DWORD PTR [esi]
  429307:	or     al,BYTE PTR [eax]
  429309:	stc    
  42930a:	pop    edi
  42930b:	and    ah,al
  42930d:	in     al,dx
  42930e:	inc    edx
  42930f:	inc    eax
  429310:	mov    eax,0xa2410
  429315:	stc    
  429316:	retf   0x3016
  429319:	(bad)  
  42931b:	lock xchg edx,edi
  42931e:	out    dx,al
  42931f:	int3   
  429320:	inc    ebx
  429321:	xchg   cl,ch
  429323:	mov    ds:0xc79db89e,al
  429328:	(bad)  
  429329:	call   0x46546c23
  42932e:	jmp    0xdbcd57ba
  429333:	dec    esp
  429334:	pop    edx
  429335:	mov    edi,0x3d8cab
  42933a:	mov    esi,0xc1ffc7a5
  42933f:	sub    eax,0x90f851d3
  429344:	inc    ecx
  429345:	aas    
  429346:	xchg   BYTE PTR [edi],cl
  429348:	sub    eax,0xccfa9a15
  42934d:	jmp    DWORD PTR [ecx]
  42934f:	xchg   esi,eax
  429350:	inc    esp
  429351:	lds    eax,FWORD PTR [ebp-0x17]
  429354:	or     al,0x75
  429356:	jns    0x429319
  429358:	xchg   ecx,eax
  429359:	stc    
  42935a:	mov    DWORD PTR [edi-0x77],ebx
  42935d:	sar    dl,0xe5
  429360:	xchg   DWORD PTR ds:0xffc8274a,esp
  429366:	jno    0x429386
  429368:	add    cl,al
  42936a:	inc    ebx
  42936b:	test   eax,0x14b8010c
  429370:	repnz out dx,eax
  429372:	je     0x42931f
  429374:	or     al,0x5a
  429376:	fmul   QWORD PTR es:[eax+0x3f]
  42937a:	xchg   BYTE PTR [eax],ch
  42937c:	lea    edi,ds:0xffc81f4e
  429382:	cmp    DWORD PTR [edi+0x13f051d1],esi
  429388:	inc    edx
  429389:	aas    
  42938a:	xchg   BYTE PTR [ebp-0x5cdead5],dh
  429390:	int3   
  429391:	call   FWORD PTR [ecx-0x3a3abb72]
  429397:	jmp    0x4293a5
  429399:	jne    0x42940c
  42939b:	inc    edx
  42939c:	fcmovnbe st,st(3)
  42939e:	add    bh,bh
  4293a0:	aad    0xcf
  4293a2:	mov    dh,al
  4293a4:	dec    esi
  4293a5:	jmp    0xa6493f2e
  4293aa:	vpmullw xmm4,xmm2,XMMWORD PTR [eax+0x23ffce07]
  4293b2:	add    al,0x87
  4293b4:	ins    BYTE PTR es:[edi],dx
  4293b5:	mov    eax,0x2330e1f7
  4293ba:	add    al,0x2c
  4293bc:	mov    ds:0x428147ce,al
  4293c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4293c2:	mov    bh,0x0
  4293c4:	out    0x31,eax
  4293c6:	mov    ch,0x60
  4293c8:	stc    
  4293c9:	(bad)  
  4293cb:	sar    edi,0x23
  4293ce:	add    al,0x1b
  4293d0:	adc    DWORD PTR [ecx],ebx
  4293d2:	bound  edi,QWORD PTR [esi+0x340423ff]
  4293d8:	aad    0xd5
  4293da:	das    
  4293db:	js     0x42935f
  4293dd:	jecxz  0x4293ba
  4293df:	mov    ds:0x79c5260a,al
  4293e4:	dec    esi
  4293e5:	icebp  
  4293e6:	sub    ebx,DWORD PTR [esi-0x29]
  4293e9:	aas    
  4293ea:	and    DWORD PTR [edx],eax
  4293ec:	add    ch,BYTE PTR [edi+0x1f370f0e]
  4293f2:	inc    edi
  4293f3:	cdq    
  4293f4:	inc    edx
  4293f5:	and    DWORD PTR [edi],eax
  4293f7:	notrack jmp DWORD PTR [ebx+0x286c8703]
  4293fe:	div    DWORD PTR [ecx]
  429400:	xor    BYTE PTR [ebx+0x6adc0003],ah
  429406:	xor    edx,DWORD PTR [edi-0x4095bd8f]
  42940c:	sub    eax,0x9033cdd5
  429411:	and    bl,0xdc
  429414:	fmul   DWORD PTR [ebp+0xa]
  429417:	mov    al,0xdd
  429419:	inc    esp
  42941a:	jle    0x4293c5
  42941c:	test   DWORD PTR [edx-0xf],esi
  42941f:	cld    
  429420:	popa   
  429421:	inc    esp
  429422:	dec    edx
  429423:	jmp    0xb82802
  429428:	add    DWORD PTR [edi-0x6e68c712],eax
  42942e:	(bad)  
  42942f:	ss dec ecx
  429431:	adc    eax,0x9177180a
  429436:	(bad)  
  429437:	and    al,0x49
  429439:	adc    eax,0xfa7180a
  42943e:	dec    edx
  42943f:	lods   eax,DWORD PTR ds:[esi]
  429440:	retf   0xefd4
  429443:	aam    0xd9
  429445:	add    BYTE PTR [ebp-0x17],cl
  429448:	data16 xacquire xchg BYTE PTR [ecx+0x2481d410],ch
  429450:	mov    bp,0x7d46
  429454:	fimul  DWORD PTR [ecx]
  429456:	int    0x1f
  429458:	add    edx,ebx
  42945a:	loope  0x429436
  42945c:	test   DWORD PTR [edx+0xa],eax
  42945f:	pop    edi
  429460:	dec    ecx
  429461:	and    BYTE PTR [edx],al
  429463:	call   0x419ad679
  429468:	add    BYTE PTR [eax],cl
  42946a:	push   ds
  42946b:	lock dec esi
  42946d:	cli    
  42946e:	add    BYTE PTR [eax+0x2b],dl
  429471:	mov    DWORD PTR [edx-0x7b],eax
  429474:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429475:	(bad)  
  429476:	inc    DWORD PTR [edi]
  429478:	or     esi,esi
  42947a:	or     BYTE PTR [edx],0x64
  42947d:	lds    ecx,FWORD PTR [esi+0x4]
  429480:	jb     0x42940f
  429482:	jb     0x429475
  429484:	mov    eax,0xe168538d
  429489:	test   DWORD PTR [ebx-0x18bbff41],edi
  42948f:	lock add BYTE PTR [eax-0x1137874],cl
  429496:	nop
  429497:	outs   dx,DWORD PTR ds:[esi]
  429498:	jnp    0x4294c1
  42949a:	inc    eax
  42949b:	jbe    0x4294a1
  42949d:	dec    edi
  42949e:	inc    eax
  42949f:	ret    
  4294a0:	ret    
  4294a1:	ins    BYTE PTR es:[edi],dx
  4294a2:	test   eax,0xa6b100f8
  4294a7:	push   eax
  4294a8:	pop    ss
  4294a9:	lahf   
  4294aa:	bound  eax,QWORD PTR ds:[eax-0x180f0010]
  4294b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4294b2:	adc    ebp,esi
  4294b4:	call   DWORD PTR [esi+ebp*1-0x79]
  4294b8:	not    BYTE PTR [ebx+0x5c0687f8]
  4294be:	test   eax,0xf13a00f4
  4294c3:	hlt    
  4294c4:	push   ecx
  4294c5:	jno    0x4294fa
  4294c7:	pop    edx
  4294c8:	sbb    al,0x22
  4294ca:	jle    0x429543
  4294cc:	and    al,BYTE PTR [eax]
  4294ce:	and    al,0x9
  4294d0:	cmc    
  4294d1:	test   edi,ebp
  4294d3:	mov    edx,0xb2978b17
  4294d8:	push   esi
  4294d9:	clc    
  4294da:	ins    DWORD PTR es:[edi],dx
  4294db:	mov    ?,ebx
  4294dd:	push   ecx
  4294de:	mov    ebx,0x7374c9ca
  4294e3:	shl    BYTE PTR [esi-0x8],0x6f
  4294e7:	enter  0xfc46,0xe4
  4294eb:	inc    esi
  4294ec:	pop    edx
  4294ed:	jmp    FWORD PTR [esi]
  4294ef:	inc    edi
  4294f0:	mov    DWORD PTR [esi],eax
  4294f2:	add    DWORD PTR [edx+ebx*2],esi
  4294f5:	or     ah,dl
  4294f7:	or     ecx,edi
  4294f9:	pop    esi
  4294fa:	loop   0x42957a
  4294fc:	jbe    0x429503
  4294fe:	out    0xff,al
  429500:	or     bl,ch
  429502:	add    al,0xf0
  429504:	mov    al,0xc9
  429506:	ins    BYTE PTR es:[edi],dx
  429507:	cdq    
  429508:	xchg   esp,ebp
  42950a:	xchg   BYTE PTR [edx+0x687e4083],bl
  429510:	mov    ds:0xfe5086fb,eax
  429515:	mov    WORD PTR [ebx+0x114fbad5],?
  42951b:	mov    edx,0x4d4684c4
  429520:	or     DWORD PTR [edi+0x6b],edi
  429523:	fisttp QWORD PTR [edi+eax*4]
  429526:	inc    ebx
  429527:	cmc    
  429528:	cmp    eax,0xb68158bf
  42952d:	adc    al,BYTE PTR [esi-0x17]
  429530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429531:	outs   dx,DWORD PTR ds:[esi]
  429532:	add    BYTE PTR [ecx+0x29],bh
  429535:	push   es
  429536:	call   0xfb5299eb
  42953b:	std    
  42953c:	cwde   
  42953d:	xor    edx,0xfab93152
  429543:	cmp    al,BYTE PTR ds:0xf593fb01
  429549:	sti    
  42954a:	aas    
  42954b:	xchg   BYTE PTR [eax+0x15],ah
  42954e:	test   DWORD PTR [ecx-0x77792cd4],ebp
  429554:	xor    al,0xb8
  429556:	cli    
  429557:	or     DWORD PTR ss:[edx-0xe440],eax
  42955e:	mov    dl,0x3a
  429560:	std    
  429561:	cld    
  429562:	xchg   BYTE PTR [eax-0x29054976],cl
  429568:	and    eax,DWORD PTR [ebx+0xfd5fbc0]
  42956e:	je     0x429512
  429570:	xlat   BYTE PTR ds:[ebx]
  429571:	add    DWORD PTR [edx],0xffffffb8
  429574:	mov    BYTE PTR [ebp-0x6de3fcd1],bh
  42957a:	or     edi,ebp
  42957c:	loope  0x429520
  42957e:	push   DWORD PTR [ebx+0xb3fbd20]
  429584:	inc    ebx
  429585:	and    edx,DWORD PTR [edi-0x4a17427f]
  42958b:	sub    al,0x73
  42958d:	jmp    0x429561
  42958f:	aaa    
  429590:	jp     0x429592
  429592:	clc    
  429593:	popa   
  429594:	xor    eax,0x10003a3
  429599:	or     DWORD PTR [eax-0x1cc12c43],edx
  42959f:	mov    eax,0x8a91df00
  4295a4:	dec    ebx
  4295a5:	cmp    dh,BYTE PTR [ecx]
  4295a7:	mov    ch,0xe1
  4295a9:	jo     0x42957b
  4295ab:	sbb    eax,0x87d2bded
  4295b0:	hlt    
  4295b1:	push   esi
  4295b2:	sub    DWORD PTR [ecx-0x771d3195],eax
  4295b8:	test   BYTE PTR [edi-0x2ec8dfe3],bh
  4295be:	sub    eax,0xd997cf8
  4295c3:	hlt    
  4295c4:	push   esi
  4295c5:	js     0x42956f
  4295c7:	mov    ah,0x61
  4295c9:	(bad)  
  4295ca:	mov    ds:0xfdc58598,al
  4295cf:	pop    ds
  4295d0:	xchg   BYTE PTR [ebp+0x729cb5e8],bh
  4295d6:	sti    
  4295d7:	mov    BYTE PTR [ebx-0x32],al
  4295da:	jnp    0x4295f0
  4295dc:	or     eax,DWORD PTR [ebx]
  4295de:	out    dx,eax
  4295df:	cli    
  4295e0:	add    BYTE PTR [ebx],bh
  4295e2:	or     eax,0xb1d1d61d
  4295e7:	mov    bl,0x0
  4295e9:	retf   0x67b
  4295ec:	aam    0xd1
  4295ee:	mov    dl,0xb
  4295f0:	cdq    
  4295f1:	add    ah,BYTE PTR [esi+0x1d]
  4295f4:	lea    esi,[esi-0x2e31d6de]
  4295fa:	mov    ch,0xf7
  4295fc:	add    BYTE PTR [edi+edx*2+0xa],cl
  429600:	fldcw  WORD PTR [edx+0x57]
  429603:	inc    BYTE PTR [eax+0x28]
  429606:	int3   
  429607:	lock es bswap edx
  42960b:	xchg   BYTE PTR [esi],bl
  42960d:	sbb    DWORD PTR [ebp+0x3c],eax
  429610:	sub    DWORD PTR [edi+0x12],ebx
  429613:	test   DWORD PTR [ebp+ecx*4+0x7bf8e281],esp
  42961a:	int    0xf0
  42961c:	jb     0x429698
  42961e:	(bad)  
  42961f:	idiv   DWORD PTR [ecx+eax*4+0x20]
  429623:	aad    0x2
  429625:	inc    bh
  429627:	pop    es
  429628:	ds xor ah,cl
  42962b:	pop    ecx
  42962c:	or     edi,edi
  42962e:	jmp    0xcc7685b7
  429633:	pop    ecx
  429634:	loope  0x42963e
  429636:	stc    
  429637:	add    BYTE PTR [ebp+0x46],bl
  42963a:	leave  
  42963b:	or     BYTE PTR [esi],dl
  42963d:	jae    0x4296b1
  42963f:	add    ah,BYTE PTR [ebx+0x46]
  429642:	jns    0x429695
  429644:	cmovge edx,DWORD PTR [eax-0x380f16e7]
  42964b:	(bad)  [edx+0x61]
  42964e:	ss pop ebp
  429650:	aas    
  429651:	repz push 0xd0c5f7fa
  429657:	push   0xa1092d9
  42965c:	xchg   ecx,eax
  42965d:	cmp    ecx,ebp
  42965f:	lock jbe 0x429662
  429662:	(bad)  
  429663:	jmp    0xeaa10da4
  429668:	jne    0x42964b
  42966a:	push   cs
  42966b:	rcl    BYTE PTR [esi-0x46],1
  42966e:	xchg   edx,eax
  42966f:	mov    dl,0xed
  429671:	jmp    0xeac7d8fb
  429676:	sbb    eax,DWORD PTR [ecx-0x1c40ff0f]
  42967c:	or     DWORD PTR [eax],eax
  42967e:	pop    edi
  42967f:	mov    ebx,0x929069f0
  429684:	pause  
  429686:	push   edi
  429687:	inc    ebp
  429688:	or     al,BYTE PTR [eax]
  42968a:	mov    ah,0x42
  42968c:	pop    esp
  42968d:	push   ebx
  42968e:	nop
  42968f:	push   ebx
  429690:	sbb    al,BYTE PTR [ecx]
  429692:	pop    ds
  429693:	inc    esp
  429694:	mov    DWORD PTR [ebx],eax
  429696:	ret    0xf500
  429699:	push   ecx
  42969a:	test   DWORD PTR [ebx+0x1d],0xf3931f40
  4296a1:	adc    BYTE PTR [edx+0x623d7783],bl
  4296a7:	or     ch,ah
  4296a9:	push   eax
  4296aa:	loopne 0x42967d
  4296ac:	cmp    al,0x13
  4296ae:	lahf   
  4296af:	inc    esi
  4296b0:	push   0x81a4b70b
  4296b5:	inc    ebp
  4296b6:	and    ecx,eax
  4296b8:	fst    QWORD PTR [eax]
  4296ba:	fadd   QWORD PTR [ebx+0x32aa896c]
  4296c0:	mov    DWORD PTR [ebp+0x13],eax
  4296c3:	rol    BYTE PTR [ecx],0x8b
  4296c6:	add    bl,dh
  4296c8:	mov    ecx,0x614aec76
  4296cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4296ce:	push   0x49c7cb
  4296d3:	outs   dx,DWORD PTR ds:[esi]
  4296d4:	popa   
  4296d5:	cmc    
  4296d6:	xchg   ecx,eax
  4296d7:	outs   dx,DWORD PTR ds:[esi]
  4296d8:	inc    ebp
  4296d9:	or     al,BYTE PTR [eax]
  4296db:	adc    al,0x1
  4296dd:	cmc    
  4296de:	mov    edx,DWORD PTR [edi-0x58ae0c6d]
  4296e4:	mov    WORD PTR [edx-0x75],ss
  4296e7:	sub    al,0x8f
  4296e9:	rol    ebx,0x3a
  4296ec:	rcr    ch,0x83
  4296ef:	ret    
  4296f0:	into   
  4296f1:	aas    
  4296f2:	push   esi
  4296f3:	xchg   BYTE PTR [eax-0x269ebab6],dl
  4296f9:	and    al,0x4b
  4296fb:	pop    ecx
  4296fc:	mov    BYTE PTR ds:0x31662e87,dl
  429702:	je     0x4296eb
  429704:	retfw  
  429706:	out    0xd6,eax
  429708:	and    bl,bh
  42970a:	xor    edx,DWORD PTR [ebp+0x7e660c99]
  429710:	add    DWORD PTR [esi*2+0x457dbf7e],edx
  429717:	cs inc eax
  429719:	sti    
  42971a:	cmp    esi,DWORD PTR [ebp-0x67]
  42971d:	or     al,0x89
  42971f:	retf   
  429720:	leave  
  429721:	mov    eax,eax
  429723:	xchg   edx,eax
  429724:	xchg   ecx,eax
  429725:	jg     0x429726
  429727:	adc    ch,BYTE PTR [esi+0x5005114]
  42972d:	cmc    
  42972e:	cld    
  42972f:	xchg   dl,dh
  429731:	pop    ebp
  429732:	call   0x2b4f:0x69be23e7
  429739:	add    BYTE PTR [ebp-0x18],bh
  42973c:	xchg   cl,bl
  42973e:	or     al,0x85
  429740:	(bad)  
  429741:	adc    eax,0x16056201
  429746:	push   cs
  429747:	sti    
  429748:	cmp    esp,ebp
  42974a:	dec    edx
  42974b:	inc    ebp
  42974c:	mov    ecx,0x9e4581d9
  429751:	or     BYTE PTR ds:0xcccc6e15,dl
  429757:	jmp    DWORD PTR [ecx]
  429759:	ds adc eax,0x7fd11300
  42975f:	push   DWORD PTR [eax+edx*2]
  429762:	mov    ebp,0xb3b45507
  429767:	pop    ecx
  429768:	or     eax,0x44c8af99
  42976d:	inc    ebx
  42976e:	fild   WORD PTR [ebx]
  429770:	fstp   TBYTE PTR [ecx+0x4500b43e]
  429776:	enterw 0x745d,0xb9
  42977b:	sbb    dh,BYTE PTR [esi-0x25bca1a6]
  429781:	inc    esi
  429782:	mov    al,fs:0x16c434d
  429788:	aam    0xcd
  42978a:	xchg   edx,eax
  42978b:	or     eax,DWORD PTR [ecx]
  42978d:	mov    BYTE PTR [edi],ah
  42978f:	dec    esp
  429790:	add    cl,dh
  429792:	mov    ecx,0x753bd6fa
  429797:	pop    esi
  429798:	dec    esp
  429799:	call   0xb2b9:0x82436431
  4297a0:	ficom  WORD PTR [ebp+0x7f8ffb26]
  4297a6:	and    BYTE PTR [ebx+eax*2-0x76],0x9
  4297ab:	adc    dl,BYTE PTR [ebp-0x455cef17]
  4297b1:	xor    eax,DWORD PTR [edi-0x1d]
  4297b4:	push   ebx
  4297b5:	xchg   ecx,ebx
  4297b7:	fisubr DWORD PTR [edi+0x2861df08]
  4297bd:	mov    al,BYTE PTR [ebx-0x1d]
  4297c0:	add    esi,DWORD PTR [ecx+edx*1]
  4297c3:	mov    ecx,0xfc32438d
  4297c8:	inc    ecx
  4297c9:	xor    al,0x7f
  4297cb:	fs sbb al,0xbd
  4297ce:	push   esi
  4297cf:	out    dx,al
  4297d0:	aam    0xc3
  4297d2:	mov    ebx,DWORD PTR [edx-0x6fbd79fb]
  4297d8:	adc    ebp,DWORD PTR [edi]
  4297da:	lock mov al,BYTE PTR ds:0xbf7a4286
  4297e1:	cdq    
  4297e2:	mov    ebx,0x88011815
  4297e7:	or     bl,cl
  4297e9:	inc    ebp
  4297ea:	rcl    cl,1
  4297ec:	rol    ch,cl
  4297ee:	mov    edi,0x26b613e
  4297f3:	pop    edx
  4297f4:	mov    bh,0x0
  4297f6:	aaa    
  4297f7:	mov    esi,0xc97c5d86
  4297fc:	lock mov ecx,0x3d870017
  429802:	ins    BYTE PTR es:[edi],dx
  429803:	leave  
  429804:	lock call 0x604cda8f
  42980a:	fxch   st(2)
  42980c:	out    dx,eax
  42980d:	cs lahf 
  42980f:	leave  
  429810:	push   ss
  429811:	pop    ecx
  429812:	and    DWORD PTR ds:0x438a6a0a,ecx
  429818:	ja     0x4297dd
  42981a:	xlat   BYTE PTR ds:[ebx]
  42981b:	(bad)  
  42981c:	jbe    0x4297fb
  42981e:	jle    0x429877
  429820:	add    bl,BYTE PTR [esi-0x28edc892]
  429826:	inc    ebp
  429827:	int    0x33
  429829:	das    
  42982a:	sbb    al,0x35
  42982c:	and    esp,DWORD PTR [ecx+eax*4-0x330eb8bd]
  429833:	push   ebp
  429834:	(bad)  
  429835:	pop    ebp
  429836:	call   FWORD PTR [edx+ecx*8]
  429839:	adc    BYTE PTR [ecx],dl
  42983b:	cmp    DWORD PTR [ecx],eax
  42983d:	jne    0x429884
  42983f:	push   0x4289abc3
  429844:	cmp    al,0xa9
  429846:	call   0x5973:0x696256d1
  42984d:	ret    0xc7bd
  429850:	jbe    0x42984b
  429852:	add    cl,BYTE PTR [edi+0x2]
  429855:	sahf   
  429856:	sar    BYTE PTR [eax],0x64
  429859:	call   0xf1c9a05e
  42985e:	cmp    DWORD PTR [edx+0x71],ebp
  429861:	icebp  
  429862:	add    BYTE PTR [eax],cl
  429864:	sub    al,BYTE PTR [esi+0x714393c0]
  42986a:	jge    0x4298d7
  42986c:	inc    eax
  42986d:	ja     0x429851
  42986f:	mov    edi,0x9dc95540
  429874:	inc    ebx
  429875:	or     dh,BYTE PTR [edx]
  429877:	lahf   
  429878:	push   ds
  429879:	std    
  42987a:	push   0x6f
  42987c:	sub    esi,DWORD PTR [esi+0x24]
  42987f:	pop    edi
  429880:	sub    esi,DWORD PTR [esi+0x24]
  429883:	das    
  429884:	sub    esi,DWORD PTR [esi+0x24]
  429887:	das    
  429888:	sub    edx,DWORD PTR [edi]
  42988a:	and    BYTE PTR [ecx+0x0],ah
  42988d:	icebp  
  42988e:	cmp    ah,bl
  429890:	jmp    0x429896
  429892:	btr    DWORD PTR [edi-0x50],edi
  429896:	or     al,0x1f
  429898:	cmp    edi,DWORD PTR [ebp+0xa9de107]
  42989e:	push   0x2e
  4298a0:	nop
  4298a1:	repz adc eax,0x30dc87
  4298a7:	xchg   esp,eax
  4298a8:	das    
  4298a9:	jno    0x4298a9
  4298ab:	clc    
  4298ac:	mov    esp,0xa1af332b
  4298b1:	outs   dx,DWORD PTR ds:[esi]
  4298b2:	aas    
  4298b3:	fld    QWORD PTR [edi+edx*4-0x40]
  4298b7:	mov    bh,0xbf
  4298b9:	jmp    0xec905b2
  4298be:	push   eax
  4298bf:	add    BYTE PTR [eax+0x2715f39c],dl
  4298c5:	shl    BYTE PTR [eax],cl
  4298c7:	add    BYTE PTR [edx-0x7a],ah
  4298ca:	jbe    0x4298d6
  4298cc:	mov    eax,ds:0xd11c1733
  4298d1:	push   eax
  4298d3:	cmp    cl,0x33
  4298d6:	mov    esi,eax
  4298d8:	imul   edi,DWORD PTR [edi+0x57],0xb6c5868b
  4298df:	push   eax
  4298e0:	xor    eax,0xc6c09014
  4298e5:	rol    DWORD PTR [edi],1
  4298e7:	mov    bl,0xae
  4298e9:	mov    BYTE PTR [edi],dl
  4298eb:	(bad)  
  4298ec:	retf   
  4298ed:	loope  0x4298ab
  4298ef:	push   edx
  4298f0:	rcr    DWORD PTR [ebx+ebx*4+0x7],1
  4298f4:	jmp    ebp
  4298f6:	sbb    BYTE PTR [ecx+0x151961eb],cl
  4298fc:	sbb    cl,dh
  4298fe:	int3   
  4298ff:	inc    DWORD PTR [edx]
  429901:	sbb    DWORD PTR [edx+0x19110507],ebx
  429907:	jmp    0x4f7210
  42990c:	fsub   DWORD PTR [eax-0x65]
  42990f:	pop    es
  429910:	sub    eax,0x8a4283cb
  429915:	pop    eax
  429916:	push   cs
  429917:	(bad)  
  429918:	mov    dl,0xc9
  42991a:	pop    ss
  42991b:	jb     0x429993
  42991d:	xor    al,0x80
  42991f:	pop    ss
  429920:	cs mov ebp,esp
  429923:	stc    
  429924:	add    BYTE PTR [ecx],dl
  429926:	push   edx
  429927:	retf   
  429928:	sti    
  429929:	sbb    eax,0x99f88be8
  42992e:	dec    esi
  42992f:	pop    es
  429930:	sti    
  429931:	jo     0x42991c
  429933:	pop    ss
  429934:	jb     0x4298c4
  429936:	icebp  
  429937:	shl    DWORD PTR [eax],cl
  429939:	call   0xde881729
  42993e:	pop    edi
  42993f:	jg     0x42995c
  429941:	popf   
  429942:	hlt    
  429943:	cdq    
  429944:	leave  
  429945:	ror    DWORD PTR ds:0xd173fafe,1
  42994b:	fidivr WORD PTR [edi]
  42994d:	xchg   BYTE PTR [eax-0x36],ah
  429950:	sti    
  429951:	add    eax,0xc93717ab
  429956:	inc    ecx
  429957:	wbinvd 
  429959:	add    edx,ecx
  42995b:	or     BYTE PTR [ebp-0x2474bfc2],cl
  429961:	pushf  
  429962:	retf   0x8a7f
  429965:	xchg   esi,eax
  429966:	mov    dh,0x5
  429968:	sbb    al,0x3
  42996a:	retf   
  42996b:	div    bl
  42996d:	add    cl,cl
  42996f:	ja     0x429901
  429971:	and    BYTE PTR [eax+0x6a],0xb6
  429975:	jae    0x429959
  429977:	add    DWORD PTR [edi],edx
  429979:	ins    DWORD PTR es:[edi],dx
  42997a:	retf   0x137b
  42997d:	pop    ebp
  42997e:	push   eax
  42997f:	push   edi
  429980:	sub    eax,DWORD PTR [edx]
  429982:	and    eax,DWORD PTR [ecx+0x16]
  429985:	dec    ebp
  429986:	push   eax
  429987:	dec    ebx
  429988:	sub    eax,DWORD PTR [eax]
  42998a:	retf   0x3122
  42998d:	push   ss
  42998e:	or     DWORD PTR [ecx],eax
  429990:	cdq    
  429991:	mov    dh,0xd0
  429993:	sti    
  429994:	and    al,0xff
  429996:	xor    DWORD PTR [eax-0x50],esi
  429999:	mov    ch,BYTE PTR [esi]
  42999b:	cmp    bl,BYTE PTR [eax-0x2]
  42999e:	stos   DWORD PTR es:[edi],eax
  42999f:	inc    eax
  4299a0:	lea    eax,[esi+esi*4]
  4299a3:	leave  
  4299a4:	cmc    
  4299a5:	sbb    edi,DWORD PTR [ebx-0x7e]
  4299a8:	jecxz  0x429934
  4299aa:	push   ss
  4299ab:	(bad)  
  4299ac:	lock adc eax,0x43b4857a
  4299b2:	lds    ebx,FWORD PTR fs:[edi-0x5d5082ff]
  4299b9:	int3   
  4299ba:	push   0xc681d6e2
  4299bf:	xor    ebp,DWORD PTR es:[ebp+0xff5c937]
  4299c6:	jnp    0x42994a
  4299c8:	jecxz  0x429a48
  4299ca:	(bad)  
  4299cb:	dec    edi
  4299cc:	fisubr WORD PTR [ecx-0x49f58f7a]
  4299d2:	test   eax,0x8a291701
  4299d7:	mov    edi,0xccad1dc9
  4299dc:	push   ss
  4299dd:	cmc    
  4299de:	mov    bl,0x9
  4299e0:	or     bh,BYTE PTR [edi]
  4299e2:	bswap  ebx
  4299e4:	lock hlt 
  4299e6:	cdq    
  4299e7:	xor    ecx,DWORD PTR [edx-0x17]
  4299ea:	fcmove st,st(4)
  4299ec:	push   ss
  4299ed:	lds    eax,FWORD PTR [eax]
  4299ef:	jae    0x4299fa
  4299f1:	or     ch,BYTE PTR [edx-0x40]
  4299f4:	int    0x50
  4299f6:	bound  esi,QWORD PTR [eax+0xbccd6c]
  4299fc:	push   esi
  4299fd:	es ins DWORD PTR es:[edi],dx
  4299ff:	add    eax,0x85ec19d6
  429a04:	inc    edx
  429a05:	pop    eax
  429a06:	mov    dh,0xfe
  429a08:	push   es
  429a09:	mov    edx,0x3bc945dc
  429a0e:	aaa    
  429a0f:	outs   dx,DWORD PTR ds:[esi]
  429a10:	pop    edi
  429a11:	cmp    DWORD PTR [ebp+edx*1-0x653a48f6],0xffffffcd
  429a19:	lock lahf 
  429a1b:	out    dx,eax
  429a1c:	mov    edi,0xbe0e9946
  429a21:	xchg   BYTE PTR [ecx-0x2d0f328e],al
  429a27:	(bad)  
  429a28:	dec    edi
  429a29:	add    dh,BYTE PTR [edx+0x41]
  429a2c:	dec    ebp
  429a2d:	sub    DWORD PTR [ecx+ebp*1+0x31600ce0],0x5d
  429a35:	pop    eax
  429a36:	add    DWORD PTR [ebp+0xe90a3e],0x7ae265b7
  429a40:	int    0x5a
  429a42:	cmp    DWORD PTR [ebx+0x2f],esi
  429a45:	adc    dh,bh
  429a47:	(bad)
  429a4a:	add    BYTE PTR [edx-0x5107906a],bl
  429a50:	mov    al,0x5c
  429a52:	push   esi
  429a53:	add    BYTE PTR [edi-0xb9b793f],bl
  429a59:	sub    eax,0xb7e050f5
  429a5e:	call   FWORD PTR fs:[edx-0x50bfe51c]
  429a65:	jmp    0xf1bd02af
  429a6a:	repz inc ebp
  429a6c:	(bad)  
  429a6d:	mov    ecx,0x49447046
  429a72:	push   ax
  429a75:	cs pusha 
  429a77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a78:	in     al,0x88
  429a7a:	je     0x429ad2
  429a7c:	sub    DWORD PTR [ebp+0x2ec06c86],edi
  429a82:	cmc    
  429a83:	push   esi
  429a84:	loop   0x429ace
  429a86:	inc    ax
  429a89:	cs pop edx
  429a8b:	push   esi
  429a8c:	cwde   
  429a8d:	dec    eax
  429a8e:	inc    WORD PTR [eax+0x2ffff02e]
  429a95:	inc    esp
  429a96:	sbb    DWORD PTR [ebp-0xad0b9],0x60
  429a9d:	push   ss
  429a9e:	jno    0x429a98
  429aa0:	cs aas 
  429aa2:	jg     0x429b10
  429aa4:	jo     0x429ad4
  429aa6:	cmc    
  429aa7:	pop    edi
  429aa8:	loope  0x429a6c
  429aaa:	(bad)  
  429aab:	je     0x429b03
  429aad:	add    DWORD PTR [esi],0xddbb1a00
  429ab3:	add    DWORD PTR [ebx+0xb3f],0x5d8792df
  429abd:	test   DWORD PTR [ecx-0x6ab0f79],0x1f868d04
  429ac7:	pop    es
  429ac8:	jg     0x429a99
  429aca:	sbb    DWORD PTR [ecx-0x6e65fc88],ebx
  429ad0:	pop    ss
  429ad1:	jne    0x429a7e
  429ad3:	inc    eax
  429ad4:	call   0xf34f745e
  429ad9:	mov    ch,0x64
  429adb:	mov    ebx,0xd8b1f07
  429ae0:	jmp    DWORD PTR [ecx-0x61ba9227]
  429ae6:	bound  esi,QWORD PTR [ebx-0x4822e305]
  429aec:	mov    WORD PTR [ebx],es
  429aee:	ret    0xfb1b
  429af1:	sub    DWORD PTR [ecx],0x4f728d6f
  429af7:	sbb    eax,0xfd275efb
  429afc:	stc    
  429afd:	imul   edx,DWORD PTR [esi+0x14],0x44547b74
  429b04:	shl    DWORD PTR [esi-0x25],0xbc
  429b08:	cli    
  429b09:	fcmovne st,st(1)
  429b0b:	mov    DWORD PTR [ebp-0x4e280b6],eax
  429b11:	(bad)  
  429b12:	jno    0x429ae7
  429b14:	sbb    bh,BYTE PTR [eax]
  429b16:	adc    cl,bl
  429b18:	mov    edi,0x8cf09e6d
  429b1d:	add    BYTE PTR [ebx+0x65bfe121],bh
  429b23:	sbb    dh,BYTE PTR [esi+0xcc38665]
  429b29:	lea    ecx,[ebx]
  429b2b:	sub    eax,0xa909fb1c
  429b30:	mov    ?,edi
  429b32:	add    dh,ch
  429b34:	pop    esp
  429b35:	adc    eax,0xc081d946
  429b3a:	jnp    0x429b29
  429b3c:	xchg   esp,eax
  429b3d:	dec    ebx
  429b3e:	mov    eax,ds:0xdd03e342
  429b43:	sub    al,0x7
  429b45:	cli    
  429b46:	cdq    
  429b47:	inc    edx
  429b48:	fs cmp ecx,ebp
  429b4b:	addr16 cmp al,0x3d
  429b4e:	or     BYTE PTR [esi],dh
  429b50:	jecxz  0x429ad8
  429b52:	mov    esi,0x691636c6
  429b57:	shl    BYTE PTR [edi+0x65b4e0d7],1
  429b5d:	pop    ss
  429b5e:	lods   al,BYTE PTR ds:[esi]
  429b5f:	(bad)  
  429b60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429b61:	sbb    esp,DWORD PTR [ebx-0x3a]
  429b64:	(bad)  
  429b65:	adc    al,BYTE PTR [edx]
  429b67:	add    cl,BYTE PTR [esi]
  429b69:	cld    
  429b6a:	inc    edi
  429b6b:	ret    
  429b6c:	add    BYTE PTR [eax+ebx*1],0xda
  429b70:	fwait
  429b71:	cmp    DWORD PTR [ecx],ecx
  429b73:	aas    
  429b74:	xor    al,0x1e
  429b76:	push   edx
  429b77:	jo     0x429be5
  429b79:	pop    ds
  429b7a:	ins    DWORD PTR es:[edi],dx
  429b7b:	push   eax
  429b7c:	iret   
  429b7d:	(bad)  
  429b7e:	sub    DWORD PTR [ecx-0x1d],ebx
  429b81:	adc    al,BYTE PTR [eax]
  429b83:	fstp   TBYTE PTR [edx]
  429b85:	mov    ds:0x57c5a01b,eax
  429b8a:	adc    dl,cl
  429b8c:	retf   0x973f
  429b8f:	jne    0x429b48
  429b91:	mov    ch,0xff
  429b93:	(bad)  
  429b94:	pop    eax
  429b95:	jecxz  0x429b4a
  429b97:	inc    esp
  429b98:	and    bh,0x83
  429b9b:	xchg   BYTE PTR [edx-0x1d],al
  429b9e:	adc    dl,BYTE PTR [ebx+0x21c3ee02]
  429ba4:	addr16 and eax,0x18c119fb
  429baa:	adc    bl,BYTE PTR [edx-0x4bfa72ce]
  429bb0:	(bad)
  429bb3:	fwait
  429bb4:	and    bl,0xb9
  429bb7:	cld    
  429bb8:	das    
  429bb9:	or     dl,ch
  429bbb:	out    dx,eax
  429bbc:	add    eax,0x91842a0a
  429bc1:	pop    es
  429bc2:	add    BYTE PTR ds:[ebx],dh
  429bc5:	fs jmp 0x429bdd
  429bc8:	leave  
  429bc9:	push   ss
  429bca:	rcr    ecx,1
  429bcc:	add    eax,0x457a620a
  429bd1:	icebp  
  429bd2:	(bad)  
  429bd3:	push   ds
  429bd4:	and    DWORD PTR ds:0x3044eca9,edi
  429bda:	jmp    0x429b62
  429bdc:	scas   eax,DWORD PTR es:[edi]
  429bdd:	leave  
  429bde:	and    DWORD PTR [ebx],eax
  429be0:	jecxz  0x429bd7
  429be2:	push   0x4a
  429be4:	es pop edx
  429be6:	aaa    
  429be7:	add    bh,bl
  429be9:	enter  0x9d16,0x99
  429bed:	add    eax,0x4e42640a
  429bf2:	add    al,0x1e
  429bf4:	xchg   edi,eax
  429bf5:	das    
  429bf6:	push   cs
  429bf7:	xlat   BYTE PTR ds:[ebx]
  429bf8:	inc    ebp
  429bf9:	lds    ecx,FWORD PTR [ebx-0x3742685a]
  429bff:	push   cs
  429c00:	ret    
  429c01:	outs   dx,DWORD PTR ds:[esi]
  429c02:	test   DWORD PTR [ebp+0x15],edx
  429c05:	jb     0x429c64
  429c07:	mov    bh,0xda
  429c09:	(bad)  
  429c0b:	sti    
  429c0c:	inc    ebp
  429c0d:	lds    ebp,FWORD PTR [eax-0x3f]
  429c10:	leave  
  429c11:	or     BYTE PTR [edx],0x46
  429c14:	pop    edi
  429c15:	enter  0xd1d7,0x1
  429c19:	mov    dh,0x49
  429c1b:	jmp    0x11c7adb6
  429c20:	xchg   edi,eax
  429c21:	lock mov WORD PTR [ebp+ecx*4+0x1198542],cs
  429c29:	in     eax,dx
  429c2a:	jne    0x429bed
  429c2c:	or     al,dl
  429c2e:	jne    0x429bf5
  429c30:	mov    BYTE PTR [edi-0x12],bh
  429c33:	add    BYTE PTR [edi],bl
  429c35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429c36:	lock (bad) 
  429c38:	jb     0x429c03
  429c3a:	repz shl DWORD PTR [edx+0x7e],cl
  429c3e:	ja     0x429c55
  429c40:	fsubr  DWORD PTR [ebx+0x32308b04]
  429c46:	ja     0x429c44
  429c48:	mov    bh,0xcf
  429c4a:	lock inc DWORD PTR [eax]
  429c4d:	fbstp  TBYTE PTR [ecx]
  429c4f:	ja     0x429c4d
  429c51:	data16 cld 
  429c53:	clc    
  429c54:	jmp    DWORD PTR [ecx]
  429c56:	inc    esi
  429c57:	inc    edi
  429c58:	clc    
  429c59:	cdq    
  429c5a:	xchg   edi,eax
  429c5b:	rol    edx,0xa7
  429c5e:	inc    eax
  429c5f:	push   edi
  429c60:	mov    ebp,ebx
  429c62:	mov    ebp,0x885c4cdd
  429c67:	xchg   DWORD PTR ds:0x30cf3b,esi
  429c6d:	push   eax
  429c6e:	inc    edi
  429c6f:	repnz push 0x4a4517
  429c75:	or     bl,ch
  429c77:	retf   
  429c78:	inc    ebp
  429c79:	or     edx,edx
  429c7b:	lock call FWORD PTR [edi+0x33]
  429c7f:	fsubr  QWORD PTR [eax-0x4d]
  429c82:	inc    ebx
  429c83:	dec    edx
  429c84:	add    al,ch
  429c86:	jmp    0xcc62:0x9b8d887
  429c8d:	jmp    0x429c8e
  429c8f:	lock (bad) 
  429c91:	jo     0x429cda
  429c93:	inc    edi
  429c94:	lock enter 0x2109,0xf6
  429c99:	mov    dh,0xfc
  429c9b:	call   0x868535db
  429ca0:	xor    ebx,DWORD PTR [esi]
  429ca2:	inc    eax
  429ca3:	or     bh,BYTE PTR [ecx]
  429ca5:	add    dh,BYTE PTR [eax]
  429ca7:	add    eax,0xa413584
  429cac:	add    BYTE PTR [esi+0xb42f0],al
  429cb2:	add    bh,al
  429cb4:	or     eax,DWORD PTR [eax]
  429cb6:	xchg   BYTE PTR [esi-0x38],cl
  429cb9:	repz push esi
  429cbb:	push   esi
  429cbc:	enter  0x56fb,0x62
  429cc0:	cwde   
  429cc1:	idiv   edi
  429cc3:	dec    esi
  429cc4:	add    DWORD PTR [ecx-0x30ff1aa5],ecx
  429cca:	add    ebx,DWORD PTR [edx-0x257b7b10]
  429cd0:	or     al,0x0
  429cd2:	std    
  429cd3:	push   ds
  429cd4:	adc    dh,BYTE PTR [edi]
  429cd6:	enter  0x88cc,0xf3
  429cda:	xchg   cl,bl
  429cdc:	or     al,0x39
  429cde:	cmp    ecx,DWORD PTR [ebp-0x26677c10]
  429ce4:	or     al,0x0
  429ce6:	scas   al,BYTE PTR es:[edi]
  429ce7:	mov    al,ds:0x5099f9f9
  429cec:	push   ds
  429ced:	aaa    
  429cee:	mov    al,0xdc
  429cf0:	mov    bl,bl
  429cf2:	xchg   cl,bl
  429cf4:	or     al,0x4f
  429cf6:	add    esi,0x45f3fb18
  429cfc:	add    DWORD PTR [ebp+0x76],edx
  429cff:	push   esi
  429d00:	inc    esi
  429d01:	jne    0x429cb2
  429d03:	xchg   edx,eax
  429d04:	xchg   ecx,eax
  429d05:	sti    
  429d06:	fsub   DWORD PTR ds:0x6496778b
  429d0c:	fsqrt  
  429d0e:	fcmovnu st,st(5)
  429d10:	call   DWORD PTR [esi+edx*1]
  429d13:	(bad)  
  429d14:	int3   
  429d15:	inc    DWORD PTR [eax]
  429d17:	or     bl,BYTE PTR [ecx]
  429d19:	xchg   edx,eax
  429d1a:	push   es
  429d1b:	rcr    BYTE PTR [eax+0x49],0x4c
  429d1f:	ins    DWORD PTR es:[edi],dx
  429d20:	xchg   BYTE PTR [eax],al
  429d22:	outs   dx,BYTE PTR ds:[esi]
  429d23:	push   ds
  429d24:	xor    bl,0x66
  429d27:	sbb    BYTE PTR [edx-0x49],al
  429d2a:	cdq    
  429d2b:	mov    DWORD PTR [edi],edi
  429d2d:	adc    al,0xb6
  429d2f:	add    bh,BYTE PTR [ebp+0x3b]
  429d32:	mov    ah,0x21
  429d34:	and    ebx,esi
  429d36:	or     eax,0xf7dbefd
  429d3b:	xchg   BYTE PTR [edi],cl
  429d3d:	stc    
  429d3e:	mov    dl,0xe9
  429d40:	jmp    0xf76:0x8ed0dd6
  429d47:	lea    edi,[ebp+0x42860379]
  429d4d:	pop    esi
  429d4e:	enter  0x71d9,0x14
  429d52:	cmovne ebp,DWORD PTR [ebx+0x39]
  429d56:	setnp  dl
  429d59:	rol    bl,1
  429d5b:	mov    ecx,0x3798a2bd
  429d60:	or     DWORD PTR [esi],ebp
  429d62:	or     al,0x32
  429d64:	push   ecx
  429d65:	push   0xffffff98
  429d67:	(bad)  [eax]
  429d69:	push   cs
  429d6a:	and    BYTE PTR [edx+ecx*1],dl
  429d6d:	sbb    eax,0x66de29f4
  429d72:	ret    
  429d73:	mov    DWORD PTR [ebp-0x5529afdb],esi
  429d79:	lods   al,BYTE PTR ds:[esi]
  429d7a:	out    dx,eax
  429d7b:	add    BYTE PTR [edi-0x3e],bh
  429d7e:	jnp    0x429d48
  429d80:	cmp    DWORD PTR [esi],ebp
  429d82:	mov    ds:0xe60744ef,eax
  429d87:	xor    ecx,DWORD PTR [edx+0x103e342]
  429d8d:	or     BYTE PTR [ebx+0x6a5f119a],ch
  429d93:	pop    DWORD PTR [edx-0x6379472]
  429d99:	sub    eax,0x100aef23
  429d9e:	aas    
  429d9f:	jl     0x429d63
  429da1:	inc    edi
  429da2:	or     bl,BYTE PTR ds:0x5cb20778
  429da8:	dec    esi
  429da9:	cli    
  429daa:	pop    ecx
  429dab:	je     0x429dfb
  429dad:	call   0x9cf0:0xb9ee1e59
  429db4:	or     eax,0xe0156bd
  429db9:	add    DWORD PTR [esp+ebp*4+0x7205368d],0xffffffed
  429dc1:	adc    ecx,esi
  429dc3:	cwde   
  429dc4:	in     eax,dx
  429dc5:	retf   0xf176
  429dc8:	jg     0x429e16
  429dca:	test   DWORD PTR [ecx],esp
  429dcc:	adc    BYTE PTR [edi*1-0x238eea50],dl
  429dd3:	cmp    edx,DWORD PTR [edx]
  429dd5:	mov    ebp,0x73ef558
  429dda:	repnz rol BYTE PTR [ecx+esi*2-0x1fffe136],cl
  429de2:	sbb    bl,al
  429de4:	stos   DWORD PTR es:[edi],eax
  429de5:	stos   BYTE PTR es:[edi],al
  429de6:	rcl    DWORD PTR [ebp+0x62],0x66
  429dea:	leave  
  429deb:	inc    esi
  429dec:	cmc    
  429ded:	add    al,0xaf
  429def:	add    ebx,ebp
  429df1:	test   DWORD PTR [edx+0x5d],eax
  429df4:	aas    
  429df5:	btr    DWORD PTR [eax+eiz*4],edi
  429df9:	cwde   
  429dfa:	inc    edx
  429dfb:	sbb    bl,BYTE PTR [esi]
  429dfd:	push   ds
  429dfe:	adc    DWORD PTR [ebp-0xeee9957],ecx
  429e04:	cld    
  429e05:	ins    DWORD PTR es:[edi],dx
  429e06:	into   
  429e07:	xchg   BYTE PTR [ecx-0x6f],dh
  429e0a:	mov    ebp,0x3c7db9f0
  429e0f:	push   ss
  429e10:	jmp    0xde0c659a
  429e15:	adc    cl,al
  429e17:	outs   dx,DWORD PTR ds:[esi]
  429e18:	in     eax,0xbe
  429e1a:	add    eax,0xffb20002
  429e1f:	or     BYTE PTR [ebx],dh
  429e21:	fs dec edi
  429e23:	pop    edx
  429e24:	add    al,0x9a
  429e26:	push   es
  429e27:	jbe    0x429e4d
  429e29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429e2a:	xchg   DWORD PTR [edi+edi*8],eax
  429e2d:	cmp    ebp,DWORD PTR ds:0x5167857f
  429e33:	cmc    
  429e34:	dec    edi
  429e36:	pop    esp
  429e37:	mov    eax,ds:0x874f9155
  429e3c:	sar    BYTE PTR [ebx-0x62],0x87
  429e40:	inc    edi
  429e41:	idiv   DWORD PTR [edi]
  429e43:	inc    ebp
  429e44:	or     BYTE PTR [eax],al
  429e46:	sbb    al,0x4e
  429e48:	pop    edx
  429e49:	add    al,0x14
  429e4b:	ins    DWORD PTR es:[edi],dx
  429e4c:	pusha  
  429e4d:	fdiv   QWORD PTR ds:0xb051519e
  429e53:	xchg   edi,eax
  429e54:	hlt    
  429e55:	mov    dl,0x9c
  429e57:	inc    esi
  429e58:	cmc    
  429e59:	adc    eax,0x30b1bf
  429e5e:	clc    
  429e5f:	ins    BYTE PTR es:[edi],dx
  429e60:	sbb    eax,eax
  429e62:	sbb    al,0x65
  429e64:	hlt    
  429e65:	sbb    edi,0x42
  429e68:	push   ebp
  429e69:	pop    esi
  429e6a:	je     0x429ee9
  429e6c:	mov    al,0x8
  429e6e:	scas   eax,DWORD PTR es:[edi]
  429e6f:	xchg   ecx,eax
  429e70:	mov    al,0x40
  429e72:	hlt    
  429e73:	pop    eax
  429e74:	cmc    
  429e75:	je     0x429e32
  429e77:	mov    esp,0x4f674987
  429e7c:	jbe    0x429ea2
  429e7e:	ja     0x429ebb
  429e80:	or     edi,edi
  429e82:	(bad)
  429e86:	pop    ds
  429e87:	push   edi
  429e88:	rcr    BYTE PTR [ebx],cl
  429e8a:	das    
  429e8b:	ret    
  429e8c:	jmp    0xf0468b8f
  429e91:	rcl    DWORD PTR [edi+0x44],0x5c
  429e95:	mov    eax,DWORD PTR [esi-0x758e01e6]
  429e9b:	push   0xea0af407
  429ea0:	or     al,0xe8
  429ea2:	lods   eax,DWORD PTR ds:[esi]
  429ea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429ea4:	(bad)  
  429ea5:	cli    
  429ea6:	sti    
  429ea7:	out    0xf4,eax
  429ea9:	out    0x0,eax
  429eab:	sub    BYTE PTR [edx-0x11effff4],0xe8
  429eb2:	pop    es
  429eb3:	xchg   DWORD PTR [eax+0x7],ebp
  429eb6:	jo     0x429eb5
  429eb8:	jmp    0xf7cb12c9
  429ebd:	adc    al,0x60
  429ebf:	popf   
  429ec0:	inc    edi
  429ec1:	inc    BYTE PTR [esi+0x44adfc8]
  429ec7:	xchg   BYTE PTR [ecx+esi*4],ah
  429eca:	and    ecx,DWORD PTR [edx-0x2184924]
  429ed0:	jnp    0x429ed6
  429ed2:	sti    
  429ed3:	add    eax,0x407404a2
  429ed8:	cs inc esi
  429eda:	je     0x429f20
  429edc:	nop
  429edd:	cdq    
  429ede:	and    ecx,DWORD PTR [edx-0x4fad726f]
  429ee4:	add    BYTE PTR [ecx-0x28],dh
  429ee7:	add    edx,ebp
  429ee9:	cdq    
  429eea:	cs xor eax,0x757bfaf0
  429ef0:	imul   eax,DWORD PTR [esi],0x71b94987
  429ef6:	add    al,0x3
  429ef8:	scas   al,BYTE PTR es:[edi]
  429ef9:	or     al,0x0
  429efb:	xchg   BYTE PTR [esi],bl
  429efd:	popf   
  429efe:	or     edx,esi
  429f00:	shl    DWORD PTR [ebp+0x16],1
  429f03:	jo     0x429f45
  429f05:	mov    al,al
  429f07:	repnz test al,0x6f
  429f0a:	inc    ebx
  429f0b:	jbe    0x429f31
  429f0d:	hlt    
  429f0e:	mov    BYTE PTR [eax],al
  429f10:	jp     0x429f54
  429f12:	bound  ecx,QWORD PTR [ebx]
  429f14:	lds    edx,FWORD PTR [edx-0x6d]
  429f17:	add    eax,0x1bb44a61
  429f1c:	mov    bl,BYTE PTR [ebx+0x41]
  429f1f:	or     ebp,DWORD PTR [eax-0x7e]
  429f22:	test   al,0xae
  429f24:	repz inc ebp
  429f26:	jecxz  0x429f73
  429f28:	and    al,0x52
  429f2a:	and    DWORD PTR [eax-0x1f],ebx
  429f2d:	adc    al,0x6c
  429f2f:	sbb    BYTE PTR [ecx+0x22872aa6],bl
  429f35:	data16 aam 0x43
  429f38:	mov    ecx,0xf156c18
  429f3d:	push   es
  429f3e:	(bad)  
  429f3f:	out    dx,eax
  429f40:	push   cs
  429f41:	push   es
  429f42:	mov    edi,0xc705feeb
  429f47:	out    0xfe,eax
  429f49:	add    eax,0x808dbbf
  429f4e:	out    0xb2,eax
  429f50:	push   cs
  429f51:	push   es
  429f52:	(bad)  
  429f53:	out    dx,eax
  429f54:	imul   edi,edx,0xfa8603fb
  429f5a:	push   edx
  429f5b:	repz sar DWORD PTR [esi+0x5265bfa7],0xe7
  429f63:	js     0x429fab
  429f65:	inc    edx
  429f66:	jp     0x429ef7
  429f68:	gs push esi
  429f6a:	retf   
  429f6b:	je     0x429f4e
  429f6d:	mov    esi,0x525b7e9f
  429f72:	hlt    
  429f73:	ret    
  429f74:	add    BYTE PTR [ecx-0x722f6ff2],dl
  429f7a:	repz and eax,DWORD PTR [edi*2-0x78faa46a]
  429f82:	inc    edx
  429f83:	jecxz  0x429fa3
  429f85:	mov    bl,0xc9
  429f87:	and    BYTE PTR [eax],al
  429f89:	add    DWORD PTR [edx+ecx*1+0x64],eax
  429f8d:	xor    DWORD PTR [edx+0x12],esp
  429f90:	sbb    ecx,DWORD PTR [ebp+0x1298652]
  429f96:	jae    0x429f89
  429f98:	aad    0x29
  429f9a:	pop    edx
  429f9b:	jg     0x429f4a
  429f9d:	popa   
  429f9e:	dec    esi
  429f9f:	jg     0x429f3e
  429fa1:	pop    ecx
  429fa2:	pop    edx
  429fa3:	sub    DWORD PTR [ebp+0x4ce25a51],0x36
  429faa:	mov    esi,0x45cdc1f0
  429faf:	or     ch,cl
  429fb1:	int    0x32
  429fb3:	sbb    ecx,ebp
  429fb5:	test   DWORD PTR [edx-0x4683d5b8],ebp
  429fbb:	pop    ecx
  429fbc:	push   ss
  429fbd:	(bad)  
  429fbe:	mov    ecx,0xb985aabb
  429fc3:	fadd   st,st(2)
  429fc5:	dec    eax
  429fc6:	ss mov cl,0x9e
  429fc9:	pop    ds
  429fca:	adc    eax,0xfd2e0c85
  429fcf:	push   edi
  429fd0:	bound  esi,QWORD PTR [edx-0x7f]
  429fd3:	pop    es
  429fd4:	jmp    0xd14ca231
  429fd9:	add    dl,dl
  429fdb:	mov    ebp,0x308ee9f0
  429fe0:	push   es
  429fe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429fe2:	test   BYTE PTR [edx+0x7f],dl
  429fe5:	sub    DWORD PTR [edx+0x7fe334aa],ecx
  429feb:	mov    ecx,0xc4d4aa4f
  429ff0:	cli    
  429ff1:	imul   ecx,DWORD PTR [edx+ecx*2],0x10a01d0a
  429ff8:	cmp    eax,0x23bbd9e
  429ffd:	pop    ds
  429ffe:	jne    0x429fc4
  42a000:	inc    edi
  42a001:	in     eax,0x8e
  42a003:	jbe    0x429fb7
  42a005:	add    BYTE PTR [edi],dl
  42a007:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a008:	push   ss
  42a009:	(bad)  
  42a00a:	call   0x67c0d792
  42a00f:	xlat   BYTE PTR ds:[ebx]
  42a010:	jecxz  0x42a071
  42a012:	call   0x5a2aace7
  42a017:	scas   eax,DWORD PTR es:[edi]
  42a018:	repnz (bad) 
  42a01a:	fsubr  st(0),st
  42a01c:	or     al,0x0
  42a01e:	lods   al,BYTE PTR ds:[esi]
  42a01f:	loopne 0x42a029
  42a021:	add    cl,ch
  42a023:	add    eax,0xc66e8b5c
  42a028:	jae    0x42a036
  42a02a:	pop    ds
  42a02b:	xacquire xchg DWORD PTR [ebx+edx*4-0x46],edi
  42a030:	jl     0x42a044
  42a032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a033:	or     BYTE PTR [edi+edi*8],0x33
  42a037:	or     edx,esp
  42a039:	jmp    0x429fc1
  42a03b:	dec    eax
  42a03c:	cmc    
  42a03d:	mov    eax,DWORD PTR [eax]
  42a03f:	xor    DWORD PTR [ebp+0x4657246f],edi
  42a045:	pop    ebp
  42a046:	mov    edi,DWORD PTR [ecx-0x20fff8a2]
  42a04c:	inc    eax
  42a04d:	push   ebp
  42a04e:	pop    esi
  42a04f:	lods   eax,DWORD PTR ds:[esi]
  42a050:	inc    edx
  42a051:	or     cl,BYTE PTR [ebx+0x560c9d23]
  42a057:	nop
  42a058:	aas    
  42a059:	repz lea esi,[eax]
  42a05c:	inc    edx
  42a05d:	mov    DWORD PTR [esi],ecx
  42a05f:	sub    ch,BYTE PTR [ebp-0x419f7477]
  42a065:	jge    0x42a06b
  42a067:	push   ds
  42a068:	mov    ds,ecx
  42a06a:	jb     0x42a020
  42a06c:	xor    ecx,DWORD PTR [eax+0x4]
  42a06f:	jge    0x42a0cf
  42a071:	neg    DWORD PTR [edx]
  42a073:	jmp    0xad4589c1
  42a078:	add    BYTE PTR [esi-0xc448c40],al
  42a07e:	dec    edi
  42a07f:	xchg   BYTE PTR [ecx-0x1571bc93],ah
  42a085:	sub    al,0xfe
  42a087:	rcl    ecx,0xec
  42a08a:	sbb    BYTE PTR [eax+0x3d],ch
  42a08d:	mov    ds:0xcae4459,al
  42a092:	push   edx
  42a093:	or     eax,0x5139153b
  42a098:	and    eax,0x45c2f202
  42a09d:	out    dx,al
  42a09e:	add    BYTE PTR [edx+0xe7baab],bh
  42a0a4:	add    eax,0xfdfb02b3
  42a0a9:	imul   esp,DWORD PTR [ebx-0x60567d43],0xffffff86
  42a0b0:	xor    bl,bl
  42a0b2:	mov    ch,0x52
  42a0b4:	sbb    edi,esi
  42a0b6:	hlt    
  42a0b7:	cs sub eax,0x827594f9
  42a0bd:	test   eax,0x5463880c
  42a0c2:	add    dl,BYTE PTR ds:0xffccbaaa
  42a0c8:	cld    
  42a0c9:	inc    ecx
  42a0ca:	mov    esi,0xbac972f6
  42a0cf:	dec    esi
  42a0d0:	loope  0x42a110
  42a0d2:	stc    
  42a0d3:	out    0x79,eax
  42a0d5:	test   BYTE PTR [edx],al
  42a0d7:	sti    
  42a0d8:	std    
  42a0d9:	cdq    
  42a0da:	(bad)  
  42a0db:	out    dx,al
  42a0dc:	push   edx
  42a0dd:	jno    0x42a0b4
  42a0df:	add    al,0x7a
  42a0e1:	(bad)
  42a0e4:	push   esp
  42a0e5:	js     0x42a0a4
  42a0e7:	add    al,0x44
  42a0e9:	cmp    dh,al
  42a0eb:	(bad)  
  42a0ec:	cmp    DWORD PTR [eax-0x43],ebx
  42a0ef:	push   edx
  42a0f0:	mov    eax,ds:0x4611309e
  42a0f5:	test   eax,0x427e456d
  42a0fa:	in     al,dx
  42a0fb:	inc    edx
  42a0fc:	adc    dl,BYTE PTR [edi+0x1b]
  42a0ff:	hlt    
  42a100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a101:	inc    edx
  42a102:	jecxz  0x42a0b7
  42a104:	jl     0x42a15b
  42a106:	repz repnz add BYTE PTR [ecx-0x7e6e77be],dh
  42a10e:	mov    ebx,0x29063d5
  42a113:	jecxz  0x42a152
  42a115:	ret    
  42a116:	mov    ebx,0x2a7c1ae1
  42a11b:	jecxz  0x42a0a0
  42a11d:	xchg   BYTE PTR [edx-0x4c],al
  42a120:	lods   eax,DWORD PTR ds:[esi]
  42a121:	aam    0xbb
  42a123:	in     eax,dx
  42a124:	aaa    
  42a125:	mov    BYTE PTR [edx],al
  42a127:	jecxz  0x42a0d7
  42a129:	sub    al,0x55
  42a12b:	xor    edx,0x69
  42a12e:	inc    edx
  42a12f:	xchg   ecx,eax
  42a130:	jns    0x42a0fd
  42a132:	mov    ebx,0x804eaa97
  42a137:	jmp    0x1a85:0x16c7bb03
  42a13e:	adc    ah,ch
  42a140:	add    eax,DWORD PTR [esi+0x19e96c0f]
  42a146:	push   eax
  42a147:	mov    ds:0xb4135403,eax
  42a14c:	push   es
  42a14d:	les    eax,FWORD PTR [eax+esi*8]
  42a150:	add    ecx,DWORD PTR [edi]
  42a152:	cmp    eax,0xba5b7cef
  42a157:	xchg   edi,eax
  42a158:	cdq    
  42a159:	sar    DWORD PTR [ebx+0x276cbed],cl
  42a15f:	jecxz  0x42a1dd
  42a161:	dec    ebx
  42a162:	mov    dl,0x69
  42a164:	mov    BYTE PTR [ebp+0x7d06dabe],ch
  42a16a:	(bad)  
  42a16b:	out    dx,al
  42a16c:	add    al,0x0
  42a16e:	xchg   BYTE PTR [edx+0x5e],al
  42a171:	adc    dh,0xbc
  42a174:	or     DWORD PTR [esi+0x34f11280],esi
  42a17a:	jp     0x42a1fb
  42a17c:	xchg   BYTE PTR [ecx+0x7e],bl
  42a17f:	mov    bh,0xf0
  42a181:	int    0x87
  42a183:	inc    edx
  42a184:	or     dl,BYTE PTR [esi+0x291a8276]
  42a18a:	mov    ch,BYTE PTR [ebx+0x4285e9f0]
  42a190:	test   DWORD PTR [ebp+ecx*8-0x49],ebp
  42a194:	lock jbe 0x42a1e3
  42a197:	lea    eax,[eax]
  42a199:	stos   BYTE PTR es:[di],al
  42a19b:	inc    edx
  42a19c:	or     ch,cl
  42a19e:	cmp    al,0x47
  42a1a0:	xchg   esi,eax
  42a1a1:	cdq    
  42a1a2:	inc    esp
  42a1a3:	mov    edx,0x42766cff
  42a1a8:	or     ch,cl
  42a1aa:	push   esp
  42a1ab:	cli    
  42a1ac:	xor    al,ah
  42a1ae:	jge    0x42a1e4
  42a1b0:	sbb    al,0x72
  42a1b2:	(bad)  
  42a1b3:	mov    ch,0x32
  42a1b5:	in     eax,0x7
  42a1b7:	dec    esi
  42a1b8:	xchg   BYTE PTR [ebx],ch
  42a1ba:	test   DWORD PTR [edx+0xa],eax
  42a1bd:	test   eax,0x9bf1ff3c
  42a1c2:	fwait
  42a1c3:	adc    esp,edx
  42a1c5:	(bad)  
  42a1c6:	out    0xbb,al
  42a1c8:	lock pusha 
  42a1ca:	(bad)  
  42a1cb:	mov    eax,ds:0xc5f02e34
  42a1d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a1d1:	jmp    0xf18526d6
  42a1d6:	cmp    al,0x4d
  42a1d8:	mov    bh,0xf0
  42a1da:	out    dx,al
  42a1db:	and    esp,DWORD PTR [edx]
  42a1dd:	or     ch,ch
  42a1df:	test   DWORD PTR [edx-0xf],eax
  42a1e2:	hlt    
  42a1e3:	fst    DWORD PTR [edx+0x4a]
  42a1e6:	jmp    0xd6775429
  42a1eb:	mov    ebx,0x9f0083c5
  42a1f0:	inc    ebp
  42a1f1:	or     cl,BYTE PTR [ebp+0x565a626a]
  42a1f7:	(bad)  
  42a1f8:	adc    bl,BYTE PTR [edi+edi*8]
  42a1fb:	loopne 0x42a1e5
  42a1fd:	xchg   eax,edi
  42a1ff:	loopne 0x42a274
  42a201:	xchg   edi,edi
  42a203:	fwait
  42a204:	leave  
  42a205:	xchg   DWORD PTR [ebp+0xb],eax
  42a208:	mov    eax,DWORD PTR ds:0xf083b330
  42a20e:	je     0x42a28b
  42a210:	aas    
  42a211:	cmp    eax,0x19c53aff
  42a216:	inc    eax
  42a217:	outs   dx,DWORD PTR ds:[esi]
  42a218:	mov    al,BYTE PTR ds:0xf0839328
  42a21e:	je     0x42a22b
  42a220:	cmp    al,BYTE PTR ds:0xa4a20e50
  42a226:	inc    ebx
  42a227:	das    
  42a228:	cmp    cl,BYTE PTR [edx]
  42a22a:	call   0x354897
  42a22f:	call   0xf8f1:0x944176fe
  42a236:	lea    eax,[eax]
  42a238:	and    esi,DWORD PTR [eax]
  42a23a:	push   es
  42a23b:	add    BYTE PTR [edi],bl
  42a23d:	inc    ebp
  42a23e:	jg     0x42a2b5
  42a240:	imul   edx,DWORD PTR [esi+0x28],0x17
  42a244:	mov    eax,ds:0x1bc0863f
  42a249:	call   0xb887:0x3b975587
  42a250:	cmp    BYTE PTR [edi],0xf5
  42a253:	mov    esi,DWORD PTR [edx]
  42a255:	dec    ecx
  42a256:	cmc    
  42a257:	jne    0x42a1e0
  42a259:	aas    
  42a25a:	inc    edi
  42a25b:	clc    
  42a25c:	loopne 0x42a255
  42a25e:	in     al,0x89
  42a260:	(bad)  [ebx]
  42a262:	cmc    
  42a263:	mov    ch,0xe7
  42a265:	aas    
  42a266:	cmc    
  42a267:	inc    DWORD PTR [esi-0x4e064b7d]
  42a26d:	xchg   DWORD PTR [eax-0x40],esi
  42a270:	xor    ah,BYTE PTR [edi-0x565ebad2]
  42a276:	popf   
  42a277:	out    0xd1,eax
  42a279:	xchg   edi,eax
  42a27a:	push   es
  42a27b:	sti    
  42a27c:	push   ebp
  42a27d:	call   0xdfe11787
  42a282:	cmp    DWORD PTR [ebp-0x4f7e5f5],ecx
  42a288:	jns    0x42a304
  42a28a:	pop    es
  42a28b:	jne    0x42a303
  42a28d:	leave  
  42a28e:	(bad)  
  42a290:	xchg   edi,eax
  42a291:	imul   eax,DWORD PTR [esi],0x6fa94685
  42a297:	stc    
  42a298:	pop    eax
  42a299:	xor    DWORD PTR [esi],eax
  42a29b:	sti    
  42a29c:	add    bl,bl
  42a29e:	cmp    DWORD PTR [esi],eax
  42a2a0:	iret   
  42a2a1:	(bad)  
  42a2a2:	sahf   
  42a2a3:	sbb    BYTE PTR [ebx],cl
  42a2a5:	or     ecx,esi
  42a2a7:	push   es
  42a2a8:	sti    
  42a2a9:	cmp    DWORD PTR [ecx],edx
  42a2ab:	xor    bl,0x1e
  42a2ae:	sub    al,0xde
  42a2b0:	stc    
  42a2b1:	sub    DWORD PTR [eax+esi*4],esi
  42a2b4:	cli    
  42a2b5:	rcl    edi,0xa1
  42a2b8:	enter  0xd745,0x71
  42a2bc:	in     al,dx
  42a2bd:	mov    bh,0xdc
  42a2bf:	sahf   
  42a2c0:	mov    WORD PTR [ebx-0x789a43a3],?
  42a2c6:	ror    DWORD PTR [ebx+edi*8],cl
  42a2c9:	jae    0x42a26c
  42a2cb:	jae    0x42a312
  42a2cd:	repnz stc 
  42a2cf:	add    eax,0xcc997615
  42a2d4:	dec    DWORD PTR [edx]
  42a2d6:	push   0xffffff80
  42a2d8:	sbb    BYTE PTR [esi-0x5f],ch
  42a2db:	or     al,BYTE PTR [eax]
  42a2dd:	xchg   al,dl
  42a2df:	ja     0x42a326
  42a2e1:	jle    0x42a325
  42a2e3:	xor    eax,DWORD PTR [ebx]
  42a2e5:	cmp    eax,DWORD PTR [esi+0x5e]
  42a2e8:	jns    0x42a2a4
  42a2ea:	stos   BYTE PTR es:[edi],al
  42a2eb:	mov    edx,0x6c428604
  42a2f0:	fsub   QWORD PTR [eax-0x63309bbd]
  42a2f6:	ret    
  42a2f7:	retf   
  42a2f8:	add    edx,DWORD PTR [edx]
  42a2fa:	xor    dh,BYTE PTR [ecx+0x4c2d86c7]
  42a300:	xchg   DWORD PTR [eax],eax
  42a302:	or     cl,BYTE PTR [edx-0x1e]
  42a305:	ja     0x42a28b
  42a307:	ret    
  42a308:	or     eax,0x382e780c
  42a30d:	mov    DWORD PTR [eax+0x2d],ebx
  42a310:	call   0x7a62e94b
  42a315:	or     ebp,DWORD PTR [ecx+0x12]
  42a318:	xchg   edx,eax
  42a319:	out    dx,eax
  42a31a:	or     al,BYTE PTR [ebx]
  42a31c:	js     0x42a388
  42a31e:	shl    DWORD PTR [esi+0x28],1
  42a321:	add    al,0xd3
  42a323:	inc    ebx
  42a324:	mov    esp,0xe0291ee
  42a329:	or     BYTE PTR [edi+0x7376e342],al
  42a32f:	jae    0x42a35b
  42a331:	push   0xffffffff
  42a333:	inc    ebp
  42a334:	mov    al,ds:0x4ac3398e
  42a339:	push   es
  42a33a:	xchg   esp,eax
  42a33b:	cmp    WORD PTR fs:[esi+0x44],0x29b6
  42a342:	mov    ch,0xaa
  42a344:	or     DWORD PTR [edi-0x4],edx
  42a347:	mov    dh,0x7b
  42a349:	hlt    
  42a34a:	add    dh,BYTE PTR [eax+0x3e5e148e]
  42a350:	loop   0x42a355
  42a352:	xchg   BYTE PTR [edi],cl
  42a354:	xchg   ecx,eax
  42a355:	add    bh,BYTE PTR [ebx-0x2]
  42a358:	rol    DWORD PTR [ebx-0x7a],1
  42a35b:	mov    ebp,0xb74f2909
  42a360:	mov    esp,DWORD PTR [edx]
  42a362:	test   DWORD PTR [edx+eiz*8],edx
  42a365:	mov    bh,0x0
  42a367:	lahf   
  42a368:	mov    esp,0x9fc072f0
  42a36d:	or     al,0x6a
  42a36f:	mov    ebp,0xbb324fbb
  42a374:	hlt    
  42a375:	add    ecx,ebp
  42a377:	ds mov edi,0x373318dd
  42a37d:	addr16 mov ch,0x85
  42a380:	lds    edi,FWORD PTR [esi]
  42a382:	mov    cl,0x32
  42a384:	and    BYTE PTR [ebx],cl
  42a386:	adc    ecx,DWORD PTR [edx+0xaf176b9]
  42a38c:	push   ecx
  42a38e:	cmp    DWORD PTR [ebp-0x3a0685b1],eax
  42a394:	inc    edx
  42a395:	xchg   DWORD PTR [ecx+0x13585bde],ebp
  42a39b:	mov    es,edi
  42a39d:	inc    esi
  42a39e:	jne    0x42a355
  42a3a0:	mov    DWORD PTR [esi-0x1f],0xf576b9b5
  42a3a7:	push   ss
  42a3a8:	das    
  42a3a9:	repnz push ecx
  42a3ab:	cwde   
  42a3ac:	inc    edx
  42a3ad:	or     ch,cl
  42a3af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a3b0:	popf   
  42a3b1:	or     al,0x6a
  42a3b3:	cmp    eax,0x89418cb9
  42a3b8:	das    
  42a3b9:	pop    es
  42a3ba:	add    bh,cl
  42a3bc:	dec    edx
  42a3bd:	jbe    0x42a3ac
  42a3bf:	or     BYTE PTR [edi],bl
  42a3c1:	out    dx,al
  42a3c2:	jmp    0x3130a2bf
  42a3c7:	retf   
  42a3c8:	cmp    eax,0x800b40a
  42a3cd:	stos   BYTE PTR es:[edi],al
  42a3ce:	pop    eax
  42a3cf:	fs ds dec esi
  42a3d2:	pop    edx
  42a3d3:	push   cs
  42a3d4:	outs   dx,BYTE PTR ds:[esi]
  42a3d5:	push   edx
  42a3d6:	lea    eax,[eax]
  42a3d8:	cwde   
  42a3d9:	inc    eax
  42a3da:	cmc    
  42a3db:	jne    0x42a3c8
  42a3dd:	daa    
  42a3de:	or     bh,bh
  42a3e0:	push   edx
  42a3e1:	dec    ecx
  42a3e2:	cmc    
  42a3e3:	fmul   DWORD PTR ss:[ebp+0x5e]
  42a3e7:	adc    BYTE PTR [edi+0x3e],ch
  42a3ea:	cmc    
  42a3eb:	and    bh,BYTE PTR ss:[esi+0x3]
  42a3ef:	inc    esp
  42a3f0:	pop    edx
  42a3f1:	pop    edx
  42a3f2:	cmc    
  42a3f3:	adc    eax,0x4a4e53
  42a3f8:	adc    al,0x8b
  42a3fa:	push   ebx
  42a3fb:	pop    ebp
  42a3fc:	in     eax,dx
  42a3fd:	dec    esi
  42a3fe:	or     dl,BYTE PTR [ebp+0x24]
  42a401:	mov    dl,0x59
  42a403:	push   ebx
  42a404:	mov    WORD PTR [esi+0x42ba8d3f],ss
  42a40a:	pop    ebx
  42a40b:	push   ebx
  42a40c:	xchg   ebp,eax
  42a40d:	cmp    al,0x41
  42a40f:	push   ebx
  42a410:	lods   al,BYTE PTR ds:[esi]
  42a411:	inc    ebx
  42a412:	ja     0x42a41c
  42a414:	xlat   BYTE PTR ds:[ebx]
  42a415:	inc    ecx
  42a416:	or     al,BYTE PTR [eax]
  42a418:	out    dx,eax
  42a419:	push   cs
  42a41a:	add    DWORD PTR [ebp-0x25],0x43
  42a41e:	pop    ss
  42a41f:	push   0x850a012f
  42a424:	pop    ds
  42a425:	sub    eax,0x5962ff27
  42a42a:	cmc    
  42a42b:	jne    0x42a460
  42a42d:	inc    edx
  42a42e:	ja     0x42a440
  42a430:	add    ah,ch
  42a432:	inc    ecx
  42a433:	ja     0x42a441
  42a435:	mov    eax,0x42ffee2d
  42a43a:	cmp    DWORD PTR [edx],ebx
  42a43c:	inc    eax
  42a43d:	das    
  42a43e:	mov    esp,0xee1d75b0
  42a443:	or     edi,edi
  42a445:	shl    BYTE PTR [ebx+esi*8+0x4a512315],cl
  42a44c:	add    BYTE PTR [ebp+0x7f],dh
  42a44f:	push   edi
  42a450:	leave  
  42a451:	xchg   BYTE PTR [ecx+0x12],ch
  42a454:	add    BYTE PTR [ebx+0x20],dl
  42a457:	cli    
  42a458:	jle    0x42a44c
  42a45a:	scas   al,BYTE PTR es:[edi]
  42a45b:	test   DWORD PTR [esi+ebx*8-0x4d],ecx
  42a45f:	push   ebp
  42a460:	push   edx
  42a461:	std    
  42a462:	cmc    
  42a463:	pusha  
  42a464:	adc    BYTE PTR [esi-0x55],al
  42a467:	jg     0x42a4ad
  42a469:	ret    0x377a
  42a46c:	xlat   BYTE PTR ds:[ebx]
  42a46d:	push   ebp
  42a46e:	xchg   esp,eax
  42a46f:	ja     0x42a47d
  42a471:	jmp    FWORD PTR [ebp+0xa]
  42a474:	dec    edi
  42a475:	test   eax,0x59fafe0d
  42a47a:	jl     0x42a44e
  42a47c:	test   dh,al
  42a47e:	ins    DWORD PTR es:[edi],dx
  42a47f:	aas    
  42a480:	xchg   DWORD PTR [ebx-0x11],ecx
  42a483:	sub    eax,0x839e13bf
  42a488:	pop    esp
  42a489:	jle    0x42a45c
  42a48b:	dec    ecx
  42a48c:	jg     0x42a4d4
  42a48e:	sahf   
  42a48f:	sub    eax,0xe491fabf
  42a494:	jo     0x42a496
  42a496:	xchg   ebx,eax
  42a497:	ret    
  42a498:	or     DWORD PTR [ecx-0x40d1ca35],ecx
  42a49e:	rol    BYTE PTR [ebp+0x5b524c7f],cl
  42a4a4:	push   esi
  42a4a5:	sti    
  42a4a6:	rcl    DWORD PTR [ebp-0x4e4404ab],cl
  42a4ac:	or     DWORD PTR [ebx],esi
  42a4ae:	cmp    DWORD PTR [eax+ecx*4-0x41],ebp
  42a4b2:	mov    ebx,0x96447db9
  42a4b7:	and    BYTE PTR [eax-0xc],al
  42a4ba:	lss    edi,FWORD PTR [ebp+0x44]
  42a4be:	sbb    dh,BYTE PTR [ebx]
  42a4c0:	dec    eax
  42a4c1:	clc    
  42a4c2:	sbb    eax,0x127509a2
  42a4c7:	add    bh,BYTE PTR [ebp+edx*1+0x0]
  42a4cb:	inc    ebx
  42a4cc:	sub    BYTE PTR [eax],al
  42a4ce:	mov    ch,0xb3
  42a4d0:	cmc    
  42a4d1:	ja     0x42a469
  42a4d3:	add    ah,bl
  42a4d5:	mov    WORD PTR [edx-0x46],es
  42a4d8:	mov    al,ds:0xf680cf5c
  42a4dd:	add    ecx,DWORD PTR [ecx+0x6f]
  42a4e0:	and    edx,DWORD PTR [ebx+0x36]
  42a4e3:	adc    dl,BYTE PTR [ebx-0x24a1ae00]
  42a4e9:	add    BYTE PTR [ebx+esi*4-0x13],dh
  42a4ed:	outs   dx,DWORD PTR ds:[esi]
  42a4ee:	xchg   esi,eax
  42a4ef:	add    ah,bl
  42a4f1:	(bad)  
  42a4f2:	ja     0x42a4bb
  42a4f4:	mov    edx,0xbc58d0f7
  42a4f9:	inc    BYTE PTR [eax]
  42a4fb:	loopne 0x42a4b0
  42a4fd:	int    0x77
  42a4ff:	jbe    0x42a503
  42a501:	jecxz  0x42a48c
  42a503:	rcl    BYTE PTR [edi],1
  42a505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a506:	or     BYTE PTR [esi+0xf06c0d],al
  42a50c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a50d:	xor    dl,BYTE PTR [ebx-0x2c]
  42a510:	or     edx,esp
  42a512:	fucompp 
  42a514:	jbe    0x42a57d
  42a516:	inc    esp
  42a517:	xchg   cl,cl
  42a519:	sbb    eax,0xe74d5cec
  42a51e:	adc    al,0xc6
  42a520:	inc    edx
  42a521:	jp     0x42a56c
  42a523:	cmp    dh,BYTE PTR [edi-0x5c]
  42a526:	lar    ebp,WORD PTR [ebx]
  42a529:	loop   0x42a52e
  42a52b:	xchg   BYTE PTR [edx],ch
  42a52d:	mov    ebx,0xb342798f
  42a532:	(bad)  
  42a533:	call   0xa57b:0x8643f4f6
  42a53a:	mov    DWORD PTR [esi+0xf03e342],0xb28d3b15
  42a544:	xchg   BYTE PTR [ecx],cl
  42a546:	pusha  
  42a547:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a548:	xchg   edx,eax
  42a549:	xor    al,0x2a
  42a54b:	xchg   ecx,eax
  42a54c:	mov    esi,0x4285e843
  42a551:	pop    ebp
  42a552:	ins    BYTE PTR es:[edi],dx
  42a553:	push   edi
  42a554:	jle    0x42a5b0
  42a556:	fs push edi
  42a558:	call   0xf6c9:0xbdba0e5a
  42a55f:	add    BYTE PTR [esi],cl
  42a561:	jo     0x42a56e
  42a563:	jmp    0x9a9fa8ed
  42a568:	pop    ebp
  42a569:	push   0x7f
  42a56b:	test   eax,0xa516b785
  42a570:	xchg   ebp,eax
  42a571:	add    cl,BYTE PTR [edx]
  42a573:	jb     0x42a522
  42a575:	leave  
  42a576:	outs   dx,BYTE PTR ds:[esi]
  42a577:	leave  
  42a578:	ins    BYTE PTR es:[edi],dx
  42a579:	stos   DWORD PTR es:[edi],eax
  42a57a:	add    BYTE PTR [ebp-0x7b],ah
  42a57d:	inc    ecx
  42a57e:	or     ch,cl
  42a580:	xor    BYTE PTR [edi+0x2757916],dh
  42a586:	or     ah,BYTE PTR [eax+0x3e]
  42a589:	mov    edx,0xc690aa34
  42a58e:	call   0x62852b7c
  42a593:	sub    DWORD PTR [edx],ecx
  42a595:	mov    dl,0xf0
  42a597:	cmp    dl,ch
  42a599:	sub    BYTE PTR [ecx+eax*1],cl
  42a59c:	mov    ch,BYTE PTR ds:0xadb4e90a
  42a5a2:	push   ss
  42a5a3:	jne    0x42a619
  42a5a5:	add    cl,BYTE PTR [edx]
  42a5a7:	pusha  
  42a5a8:	mov    esi,0xb9aa34b6
  42a5ad:	bound  edi,QWORD PTR [edi-0x4c]
  42a5b0:	cmc    
  42a5b1:	adc    bl,BYTE PTR [edx+0x5e]
  42a5b4:	mov    es,esi
  42a5b6:	adc    eax,0xc9c785a9
  42a5bb:	aad    0x93
  42a5bd:	mov    edi,0x15530046
  42a5c2:	cmc    
  42a5c3:	adc    eax,0x4a4b8700
  42a5c8:	add    BYTE PTR [edx+0x66037585],bl
  42a5ce:	and    dh,dh
  42a5d0:	mov    ebx,edx
  42a5d2:	lea    eax,[eax]
  42a5d4:	inc    eax
  42a5d5:	fistp  WORD PTR [ebx]
  42a5d7:	add    dl,BYTE PTR [edi-0x70]
  42a5da:	xchg   edi,eax
  42a5db:	data16 or bl,BYTE PTR [eax]
  42a5de:	mov    edi,0x9780f045
  42a5e3:	inc    eax
  42a5e4:	call   FWORD PTR [edx-0x4b]
  42a5e7:	add    DWORD PTR [ebp+0x7b],0x7b15f518
  42a5ee:	push   ebp
  42a5ef:	dec    edx
  42a5f0:	add    BYTE PTR [esi],dh
  42a5f2:	or     esi,ebx
  42a5f4:	cmp    ebx,esp
  42a5f6:	sub    bh,BYTE PTR [eax-0x75]
  42a5f9:	mov    ah,BYTE PTR [esi+0x15af4000]
  42a5ff:	cmc    
  42a600:	jne    0x42a5c9
  42a602:	scas   eax,DWORD PTR es:[edi]
  42a603:	fimul  DWORD PTR [ecx-0x3cc85d96]
  42a609:	dec    ebx
  42a60a:	adc    BYTE PTR [edx+0x20],ah
  42a60d:	outs   dx,DWORD PTR ds:[esi]
  42a60e:	xor    DWORD PTR [eax],0xf517bc53
  42a614:	jne    0x42a621
  42a616:	scas   eax,DWORD PTR es:[edi]
  42a617:	jne    0x42a609
  42a619:	lods   al,BYTE PTR ds:[esi]
  42a61a:	adc    esi,ebp
  42a61c:	jne    0x42a615
  42a61e:	scas   al,BYTE PTR es:[edi]
  42a61f:	adc    eax,0xa053fb8
  42a624:	test   DWORD PTR [edi],ebx
  42a626:	sub    dh,BYTE PTR [ebx]
  42a628:	cmp    DWORD PTR [eax],eax
  42a62a:	jb     0x42a5d6
  42a62c:	jl     0x42a64e
  42a62e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a62f:	add    DWORD PTR [esi-0x78070dd5],edi
  42a635:	inc    ebp
  42a636:	outs   dx,DWORD PTR ds:[esi]
  42a637:	scas   eax,DWORD PTR es:[edi]
  42a638:	jne    0x42a62e
  42a63a:	xchg   BYTE PTR [eax-0x199238bc],ch
  42a640:	mov    ah,0xa
  42a642:	into   
  42a643:	pop    esp
  42a644:	push   esi
  42a645:	push   ecx
  42a646:	adc    esi,esi
  42a648:	hlt    
  42a649:	cli    
  42a64a:	jae    0x42a667
  42a64c:	adc    al,BYTE PTR [eax-0x7a]
  42a64f:	pusha  
  42a650:	jns    0x42a65a
  42a652:	or     esp,esi
  42a654:	fdivr  st,st(2)
  42a656:	jnp    0x42a697
  42a658:	(bad)  
  42a65a:	repz push edi
  42a65c:	out    dx,eax
  42a65d:	xchg   BYTE PTR [ebx+0x3b],ah
  42a660:	test   DWORD PTR [esi+ebp*8+0x47],eax
  42a664:	jns    0x42a642
  42a666:	shl    DWORD PTR ds:0xb7b0faf5,1
  42a66c:	ja     0x42a65a
  42a66e:	rcl    DWORD PTR [ebp-0x64b9f018],0xed
  42a675:	je     0x42a625
  42a677:	(bad)  
  42a678:	pop    ss
  42a679:	aam    0x96
  42a67b:	pop    ebx
  42a67c:	push   es
  42a67d:	push   ebx
  42a67e:	mov    eax,ds:0x460fd8b5
  42a683:	fwait
  42a684:	xor    ebx,DWORD PTR [ebp-0x46]
  42a687:	jbe    0x42a6af
  42a689:	push   0x4d272e
  42a68e:	add    BYTE PTR [ecx-0x6c052d89],al
  42a694:	and    eax,0xa486401b
  42a699:	leave  
  42a69a:	jae    0x42a61f
  42a69c:	fdiv   DWORD PTR [edi-0x28]
  42a69f:	popa   
  42a6a0:	jmp    0x5c17:0xc93274ed
  42a6a7:	je     0x42a702
  42a6a9:	push   es
  42a6aa:	xchg   ebx,eax
  42a6ac:	ror    DWORD PTR [ebp+0x5a],0xdd
  42a6b0:	loop   0x42a67c
  42a6b2:	add    eax,DWORD PTR [esi-0x2aaa51be]
  42a6b8:	scas   eax,DWORD PTR es:[edi]
  42a6b9:	(bad)  
  42a6ba:	daa    
  42a6bb:	xchg   esi,eax
  42a6bc:	scas   eax,DWORD PTR es:[edi]
  42a6bd:	in     eax,dx
  42a6be:	adc    DWORD PTR [ebx+0x1188e302],0xffffffee
  42a6c5:	pop    edx
  42a6c6:	add    BYTE PTR [esi-0x7000f3be],al
  42a6cc:	je     0x42a747
  42a6ce:	arpl   bx,cx
  42a6d0:	add    esp,ebx
  42a6d2:	push   ebp
  42a6d3:	std    
  42a6d4:	push   ebp
  42a6d5:	pop    ss
  42a6d6:	adc    DWORD PTR [esi+0x42],eax
  42a6d9:	adc    BYTE PTR [esi],dh
  42a6db:	push   edx
  42a6dc:	test   DWORD PTR [ebx-0xbdc11fd],esp
  42a6e2:	std    
  42a6e3:	fadd   st(3),st
  42a6e5:	mov    ebp,0xe303cb57
  42a6ea:	add    ebx,DWORD PTR [ecx+0x21659082]
  42a6f0:	(bad)  
  42a6f2:	inc    eax
  42a6f3:	add    BYTE PTR [esi-0x7c0c1251],al
  42a6f9:	add    ah,bl
  42a6fb:	in     al,dx
  42a6fc:	out    0x42,eax
  42a6fe:	jecxz  0x42a703
  42a700:	push   ecx
  42a701:	sbb    al,BYTE PTR [ebx-0x3f]
  42a704:	pop    eax
  42a705:	inc    edx
  42a706:	enter  0xa211,0x54
  42a70a:	and    eax,DWORD PTR [edi*2+0x4b57d5f7]
  42a711:	add    esp,ebx
  42a713:	push   es
  42a714:	pop    ebp
  42a715:	lock shl DWORD PTR cs:[eax-0x82713be],0xfb
  42a71e:	pop    ecx
  42a71f:	aam    0x84
  42a721:	inc    edx
  42a722:	jecxz  0x42a70f
  42a724:	mov    edi,0x5fb8954
  42a729:	xor    dh,0x69
  42a72c:	jge    0x42a725
  42a72e:	or     esp,esp
  42a730:	fld    DWORD PTR [ebp-0x79f716b4]
  42a736:	and    al,0x2e
  42a738:	popa   
  42a739:	jp     0x42a7b9
  42a73b:	cmc    
  42a73c:	test   ecx,esp
  42a73e:	push   ebp
  42a73f:	sub    al,0xc9
  42a741:	inc    edx
  42a742:	pop    esp
  42a743:	pop    esp
  42a744:	mov    ?,edx
  42a746:	pop    edx
  42a747:	cdq    
  42a748:	sbb    eax,0xd3f1d77
  42a74d:	mov    al,0x15
  42a74f:	popf   
  42a750:	(bad)  
  42a751:	outs   dx,DWORD PTR ds:[esi]
  42a752:	or     bl,BYTE PTR [esi+eax*4+0x6b]
  42a756:	pop    edx
  42a757:	add    BYTE PTR es:[esi+0x66],dh
  42a75b:	adc    bh,BYTE PTR [ebx+0x171d62dd]
  42a761:	frstor [eax]
  42a763:	cmp    DWORD PTR [ecx+esi*1-0x1f16b37b],0x71
  42a76b:	jg     0x42a75a
  42a76d:	push   0xbfdb169a
  42a772:	stos   DWORD PTR es:[edi],eax
  42a773:	test   DWORD PTR [ecx],ebp
  42a775:	ss gs test esp,esi
  42a779:	inc    ecx
  42a77a:	test   DWORD PTR [ecx+ebp*8-0x2],ecx
  42a77e:	inc    edx
  42a77f:	xor    DWORD PTR [ecx],edi
  42a781:	(bad)  
  42a782:	repz push es
  42a784:	sub    eax,0xc60a6fc7
  42a789:	and    DWORD PTR [esi+0x12],esp
  42a78c:	ins    BYTE PTR es:[edi],dx
  42a78d:	mov    DWORD PTR [ecx],eax
  42a78f:	pop    edx
  42a790:	sar    DWORD PTR [edx+0x40],0xf0
  42a794:	scas   al,BYTE PTR es:[edi]
  42a795:	out    0xbb,eax
  42a797:	push   cs
  42a798:	inc    ebp
  42a799:	inc    edi
  42a79a:	ins    DWORD PTR es:[edi],dx
  42a79b:	or     dl,BYTE PTR [ecx]
  42a79d:	loop   0x42a726
  42a79f:	dec    esp
  42a7a0:	jmp    0xfc3cff01
  42a7a5:	lds    eax,FWORD PTR [edx+0x55]
  42a7a8:	add    BYTE PTR [eax+0x63c24f08],ch
  42a7ae:	inc    edx
  42a7af:	pop    esp
  42a7b0:	mov    esi,0x2f838f
  42a7b5:	xchg   ecx,eax
  42a7b6:	test   eax,0x22dec15
  42a7bb:	or     ch,BYTE PTR [edx+0x0]
  42a7be:	xor    ecx,DWORD PTR [edx]
  42a7c0:	cmc    
  42a7c1:	xor    eax,0x2f828b
  42a7c6:	inc    ecx
  42a7c7:	in     eax,0x58
  42a7c9:	kandw  k4,k4,k2
  42a7cd:	jnp    0x42a7fc
  42a7cf:	lods   al,BYTE PTR ds:[esi]
  42a7d0:	repz xor ebp,DWORD PTR [edi-0x18dbb992]
  42a7d7:	sbb    eax,0x4e13feff
  42a7dc:	add    dl,BYTE PTR [eax+0x5c]
  42a7df:	jns    0x42a7d4
  42a7e1:	call   0x36ad6d
  42a7e6:	adc    ebp,esp
  42a7e8:	and    al,0xc4
  42a7ea:	sbb    al,0x42
  42a7ec:	cmc    
  42a7ed:	adc    eax,0x4a56cf
  42a7f2:	sbb    DWORD PTR [eax-0x42edfff4],ecx
  42a7f8:	in     al,0x83
  42a7fa:	ret    
  42a7fb:	scas   al,BYTE PTR es:[edi]
  42a7fc:	mov    esp,ebp
  42a7fe:	push   ebx
  42a7ff:	inc    edi
  42a800:	or     al,BYTE PTR [eax]
  42a802:	pop    esp
  42a803:	adc    BYTE PTR [ebp-0x75],bl
  42a806:	dec    edx
  42a807:	ds xchg edi,edi
  42a80a:	cwde   
  42a80b:	sub    eax,0x419f0134
  42a810:	loop   0x42a801
  42a812:	(bad)
  42a816:	das    
  42a817:	cmp    eax,DWORD PTR [esi+0xa415e32]
  42a81d:	mov    esp,DWORD PTR [eax+0x12f42]
  42a823:	xchg   BYTE PTR [ecx+0x2689000c],bl
  42a829:	mov    bh,0xff
  42a82b:	push   ecx
  42a82c:	fwait
  42a82d:	fs pusha 
  42a82f:	inc    ebx
  42a830:	pop    eax
  42a831:	push   es
  42a832:	sti    
  42a833:	fwait
  42a834:	(bad)  
  42a835:	pop    ss
  42a836:	inc    eax
  42a837:	xchg   BYTE PTR [ebp-0x79],al
  42a83a:	cmp    al,0xce
  42a83c:	pop    esi
  42a83d:	inc    edi
  42a83e:	add    BYTE PTR [esi-0x79737564],al
  42a844:	fwait
  42a845:	or     al,0xb8
  42a847:	sbb    esp,edi
  42a849:	add    eax,0xef9aa800
  42a84e:	push   edi
  42a84f:	inc    ebx
  42a850:	fmul   DWORD PTR [ecx*4-0x47d5c086]
  42a857:	sbb    eax,0xde000c9b
  42a85c:	xchg   edx,eax
  42a85d:	arpl   bx,di
  42a85f:	jmp    0xee927493
  42a864:	add    esi,edx
  42a866:	cli    
  42a867:	fldenv [ecx]
  42a869:	dec    edx
  42a86a:	and    al,0x82
  42a86c:	push   ds
  42a86d:	(bad)  
  42a86e:	jae    0x42a8d5
  42a870:	push   ds
  42a871:	jp     0x42a897
  42a873:	xor    BYTE PTR [ebx-0x6b],0xff
  42a877:	mov    ecx,0x1f05e49a
  42a87c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a87d:	icebp  
  42a87e:	mov    WORD PTR [edx],?
  42a880:	inc    edi
  42a881:	push   ss
  42a882:	mov    eax,0xc9afc
  42a887:	add    BYTE PTR [esi-0x6e049b82],ch
  42a88d:	mov    ecx,0x9b45c428
  42a892:	outs   dx,DWORD PTR ds:[esi]
  42a893:	mov    edi,0xef7d97fa
  42a898:	jns    0x42a831
  42a89a:	or     BYTE PTR [edi],cl
  42a89c:	mov    BYTE PTR [edx-0x1d],0x53
  42a8a0:	ins    DWORD PTR es:[edi],dx
  42a8a1:	jbe    0x42a91a
  42a8a3:	mov    bl,0xa0
  42a8a5:	inc    edx
  42a8a6:	data16 aas 
  42a8a8:	mov    ds:0x19543906,al
  42a8ad:	inc    edi
  42a8ae:	loop   0x42a8b3
  42a8b0:	xchg   BYTE PTR [ebp+0x420e1f2e],bh
  42a8b6:	jecxz  0x42a8bb
  42a8b8:	xor    edx,DWORD PTR cs:[esi]
  42a8bb:	cli    
  42a8bc:	sub    al,0xb8
  42a8be:	into   
  42a8bf:	pop    ds
  42a8c0:	mov    bh,BYTE PTR [edi-0x7bf6ecda]
  42a8c6:	mov    dl,0xeb
  42a8c8:	push   0x8f8402f
  42a8cd:	inc    ebp
  42a8ce:	xchg   ecx,eax
  42a8cf:	clc    
  42a8d0:	mov    ecx,0x8e767c3a
  42a8d5:	sbb    al,bl
  42a8d7:	mov    esi,0xe2042b8
  42a8dc:	not    BYTE PTR [eax-0x5d]
  42a8df:	add    esp,ecx
  42a8e1:	xor    esi,ecx
  42a8e3:	add    eax,DWORD PTR [edi+0x606ee342]
  42a8e9:	mov    edi,0x79000b7f
  42a8ee:	ss jg  0x42a877
  42a8f1:	inc    ebp
  42a8f2:	mov    dx,WORD PTR [ebx-0x43]
  42a8f6:	push   ebp
  42a8f7:	jae    0x42a908
  42a8f9:	inc    esi
  42a8fa:	inc    edx
  42a8fb:	retw   
  42a8fd:	xor    eax,0x20045d15
  42a902:	cmp    DWORD PTR [esi+0x40],ebx
  42a905:	push   0x4a
  42a907:	xor    ecx,DWORD PTR [ecx+0x4676705]
  42a90d:	xchg   BYTE PTR [edx+0x13],al
  42a910:	pop    es
  42a911:	int    0x3
  42a913:	loope  0x42a935
  42a915:	jge    0x42a959
  42a917:	or     ch,cl
  42a919:	test   DWORD PTR [edx],edx
  42a91b:	icebp  
  42a91c:	and    BYTE PTR ss:[edi+0x2962516],0xa
  42a924:	fs dec edx
  42a926:	sub    DWORD PTR [edi],ebx
  42a928:	push   0x5a
  42a92a:	inc    edx
  42a92b:	ja     0x42a909
  42a92d:	add    al,0x28
  42a92f:	add    dh,cl
  42a931:	(bad)  
  42a932:	cmp    DWORD PTR [edx-0x3f],esp
  42a935:	push   cs
  42a936:	imul   ecx,DWORD PTR [edx],0xffffff82
  42a939:	mov    BYTE PTR [edi],ah
  42a93b:	add    al,BYTE PTR [edi]
  42a93d:	add    eax,0x65f92627
  42a942:	sbb    al,0x1b
  42a944:	sbb    dl,BYTE PTR [ebx+0x21]
  42a947:	and    DWORD PTR [ebp-0x5a80ada7],0x71
  42a94e:	push   edx
  42a94f:	pop    edx
  42a950:	push   ecx
  42a951:	add    BYTE PTR [ebp+0x513ef0ad],bl
  42a957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a958:	push   ss
  42a959:	cmp    DWORD PTR [esi+0x5b8e0a02],edx
  42a95f:	adc    eax,DWORD PTR [ebp+0x5ec4f0c]
  42a965:	jmp    0xc0206ca0
  42a96a:	or     al,0x36
  42a96c:	add    dh,BYTE PTR [esi+0x516a743]
  42a972:	jbe    0x42a976
  42a974:	or     dh,BYTE PTR [edx-0x3e]
  42a977:	mov    ecx,0xb6ade16e
  42a97c:	adc    bh,ch
  42a97e:	mov    eax,0xa95cc9be
  42a983:	ret    
  42a984:	enter  0xed0,0xab
  42a988:	lock jmp 0x65435194
  42a98e:	pop    es
  42a98f:	stos   DWORD PTR es:[edi],eax
  42a990:	lock add BYTE PTR [edi-0x44fe0d41],bl
  42a997:	cmp    al,0x71
  42a999:	(bad)  
  42a99a:	bound  ebx,QWORD PTR [edx]
  42a99c:	pop    es
  42a99d:	and    DWORD PTR [ecx],0xffffffa9
  42a9a0:	jne    0x42aa15
  42a9a2:	lods   al,BYTE PTR ds:[esi]
  42a9a3:	stc    
  42a9a4:	hlt    
  42a9a5:	adc    eax,0x4a4f1f
  42a9aa:	in     al,0x8d
  42a9ac:	test   ebx,ebx
  42a9ae:	jnp    0x42a9d2
  42a9b0:	mov    esi,eax
  42a9b2:	xchg   edi,eax
  42a9b3:	xor    cl,BYTE PTR [edi]
  42a9b5:	add    DWORD PTR [eax],0x17
  42a9b8:	test   al,0x7c
  42a9ba:	or     DWORD PTR [ebp+ebx*4-0x42a88af6],ebp
  42a9c1:	imul   ebx
  42a9c3:	sub    BYTE PTR ds:0x7dac0168,dl
  42a9c9:	repz call 0x36a6f6
  42a9cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a9d0:	lods   eax,DWORD PTR ds:[esi]
  42a9d1:	out    0x8,eax
  42a9d3:	in     al,dx
  42a9d4:	sbb    ecx,DWORD PTR [edx]
  42a9d6:	jmp    0x42aa28
  42a9d8:	mov    esp,0xb06a086d
  42a9dd:	jl     0x42aa0c
  42a9df:	popa   
  42a9e0:	and    eax,0xf7df43c7
  42a9e5:	hlt    
  42a9e6:	adc    eax,0x4a5393
  42a9eb:	pop    es
  42a9ec:	jb     0x42aa6d
  42a9ee:	inc    eax
  42a9ef:	fistp  WORD PTR [ebp-0x4f7f033e]
  42a9f5:	pop    ebx
  42a9f6:	call   0x365b72
  42a9fb:	sbb    DWORD PTR [ecx+0x5cdf015],esi
  42aa01:	or     bh,BYTE PTR [ebx]
  42aa03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa04:	xor    cl,BYTE PTR [edi+edx*2]
  42aa07:	mov    bh,0xfd
  42aa09:	sbb    esi,edi
  42aa0b:	xchg   BYTE PTR [eax+0x787e74f6],dl
  42aa11:	add    ah,dl
  42aa13:	ja     0x42aa70
  42aa15:	push   es
  42aa16:	push   edi
  42aa17:	or     eax,0x5afe5e
  42aa1c:	fmul   DWORD PTR [esi-0x34]
  42aa1f:	add    eax,DWORD PTR [esi+0x3043024]
  42aa25:	fstp   TBYTE PTR [ecx+0x7]
  42aa28:	mov    dh,0xc8
  42aa2a:	add    ah,dh
  42aa2c:	jbe    0x42aa89
  42aa2e:	push   es
  42aa2f:	jg     0x42aa19
  42aa31:	lahf   
  42aa32:	or     al,0x87
  42aa34:	adc    BYTE PTR [esi],0xc6
  42aa37:	jae    0x42a9c5
  42aa39:	dec    ebx
  42aa3a:	not    DWORD PTR [esi+eiz*8]
  42aa3d:	mov    WORD PTR [eax+eax*1+0x5],cs
  42aa41:	or     DWORD PTR [edi+edi*4],0x9ab9e
  42aa48:	xchg   BYTE PTR [ebx-0x643ab06c],dl
  42aa4e:	in     al,0xb1
  42aa50:	rcr    DWORD PTR [edx+0x32092f0c],1
  42aa56:	jns    0x42aa38
  42aa58:	(bad)  
  42aa5a:	fsub   DWORD PTR [ebp-0x7c]
  42aa5d:	enter  0x8d3d,0x4b
  42aa61:	sti    
  42aa62:	push   ebp
  42aa63:	sti    
  42aa64:	jae    0x42aa15
  42aa66:	cmc    
  42aa67:	xor    al,0xe2
  42aa69:	or     al,0x4b
  42aa6b:	add    BYTE PTR [eax+edx*2-0x7d],ch
  42aa6f:	xor    al,0x2a
  42aa71:	lods   eax,DWORD PTR ds:[esi]
  42aa72:	dec    esp
  42aa73:	add    cl,cl
  42aa75:	dec    eax
  42aa76:	jno    0x42aa37
  42aa78:	cmp    esp,DWORD PTR [eax+0x44afc03a]
  42aa7e:	push   es
  42aa7f:	add    BYTE PTR [eax],al
  42aa81:	xchg   ch,al
  42aa83:	or     dl,BYTE PTR [ebx+0x51]
  42aa86:	inc    edx
  42aa87:	jbe    0x42aac7
  42aa89:	ret    0xd011
  42aa8c:	outs   dx,BYTE PTR ds:[esi]
  42aa8d:	mov    ch,BYTE PTR [ecx+0x4e1040d]
  42aa93:	jecxz  0x42aafe
  42aa95:	lea    ebp,[eax+0x2f417e90]
  42aa9b:	ret    
  42aa9c:	imul   esi,DWORD PTR [edx-0x17fc1cc6],0x3a
  42aaa3:	mov    al,ds:0x23dc662e
  42aaa8:	add    al,0x5d
  42aaaa:	dec    esi
  42aaab:	out    0x10,eax
  42aaad:	mov    BYTE PTR [edx+0x6c],0xdb
  42aab1:	inc    BYTE PTR ds:0x2f2d38bb
  42aab7:	lahf   
  42aab8:	imul   eax,DWORD PTR [edi-0x79fc9016],0xee728b42
  42aac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aac3:	pop    edi
  42aac4:	mov    ebp,DWORD PTR [eax]
  42aac6:	jmp    0x42c8b6dd
  42aacb:	jp     0x42ab45
  42aacd:	cmp    BYTE PTR [edi-0x5d],0x7
  42aad1:	jae    0x42ab15
  42aad3:	jecxz  0x42aad8
  42aad5:	sti    
  42aad6:	add    edx,ebx
  42aad8:	push   ebx
  42aad9:	out    dx,al
  42aada:	pop    ss
  42aadb:	(bad)  
  42aadc:	cmc    
  42aadd:	cld    
  42aade:	mov    ebx,0x3fee39d
  42aae3:	fisttp WORD PTR [eax+0x79864200]
  42aae9:	inc    eax
  42aaea:	inc    esi
  42aaeb:	mov    ch,0x55
  42aaed:	loope  0x42aacc
  42aaef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aaf0:	pop    ss
  42aaf1:	jmp    0x42aa92
  42aaf3:	or     eax,0x9a39f400
  42aaf8:	aaa    
  42aaf9:	dec    ebp
  42aafa:	mov    ebp,0x86e549a7
  42aaff:	inc    edx
  42ab00:	or     ch,cl
  42ab02:	inc    BYTE PTR [ecx+0x285e9c7]
  42ab08:	inc    ebx
  42ab09:	pop    esp
  42ab0a:	mov    bl,0x84
  42ab0c:	xchg   BYTE PTR [ecx-0x120f536c],bh
  42ab12:	test   DWORD PTR [edx+0xa],eax
  42ab15:	bound  ebp,QWORD PTR [ebp+0xf74fcc0]
  42ab1b:	ja     0x42ab0c
  42ab1d:	mov    esi,0x3fb69f75
  42ab22:	jne    0x42aad0
  42ab24:	(bad)  
  42ab25:	and    al,0x85
  42ab27:	inc    ecx
  42ab28:	lea    ecx,[esi+edx*2]
  42ab2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ab2c:	adc    DWORD PTR [edx+ebx*2],0xffffffac
  42ab30:	ja     0x42ab13
  42ab32:	mov    bl,0x42
  42ab34:	icebp  
  42ab35:	pop    ss
  42ab36:	jle    0x42aae3
  42ab38:	push   ss
  42ab39:	mov    ebp,0x6a0a029f
  42ab3e:	dec    esi
  42ab3f:	cmp    ebx,DWORD PTR [ecx+0x1a]
  42ab42:	xor    eax,0x8f6e0631
  42ab47:	jb     0x42ab61
  42ab49:	test   eax,0xc6278500
  42ab4e:	in     eax,dx
  42ab4f:	add    dh,dh
  42ab51:	in     eax,dx
  42ab52:	push   esi
  42ab53:	xor    DWORD PTR ds:0xe7c2293d,esi
  42ab59:	test   ah,cl
  42ab5b:	fld    QWORD PTR [eax+0x2785ee46]
  42ab61:	aas    
  42ab62:	xor    eax,0x114ebff5
  42ab67:	push   ecx
  42ab68:	call   0xa483:0xabd7f7e0
  42ab6f:	test   BYTE PTR [edx+0x428a57d5],bl
  42ab75:	int3   
  42ab76:	loope  0x42aafd
  42ab78:	or     eax,0xbd9b0085
  42ab7d:	in     al,0x88
  42ab7f:	mov    ds:0x10560a42,al
  42ab84:	ret    0x78ad
  42ab87:	mov    ch,0xb3
  42ab89:	repz call 0x36ff1e
  42ab8f:	adc    al,0xea
  42ab91:	cwde   
  42ab92:	cli    
  42ab93:	mov    eax,0xa28868b3
  42ab98:	inc    edx
  42ab99:	or     cl,BYTE PTR [ebx+0x500a0830]
  42ab9f:	cmp    BYTE PTR [ebx+0x36],cl
  42aba2:	push   ss
  42aba3:	lahf   
  42aba4:	ds jno 0x42ab6b
  42aba7:	dec    ebx
  42aba8:	mov    ebx,0x276d74d7
  42abad:	and    BYTE PTR [ebx],dh
  42abaf:	add    BYTE PTR [edi],ch
  42abb1:	mov    ebx,0xce685ffa
  42abb6:	mov    al,0x5e
  42abb8:	es jge 0x42ac23
  42abbb:	and    al,0x2e
  42abbd:	inc    edx
  42abbe:	or     ch,BYTE PTR [eax-0x49]
  42abc1:	adc    DWORD PTR [ecx],esi
  42abc3:	add    BYTE PTR [edi],al
  42abc5:	stc    
  42abc6:	mov    bl,0x0
  42abc8:	pop    ds
  42abc9:	ins    DWORD PTR es:[edi],dx
  42abca:	(bad)  [ecx+0x457da24a]
  42abd0:	push   ebx
  42abd1:	adc    ebp,esi
  42abd3:	adc    eax,0x4a4fbf
  42abd8:	iret   
  42abd9:	mov    al,0x15
  42abdb:	dec    esp
  42abdc:	fadd   QWORD PTR [ecx]
  42abde:	or     cl,BYTE PTR [ecx-0x3cc889de]
  42abe4:	call   0xdf43aca6
  42abe9:	inc    ecx
  42abea:	xor    ebx,DWORD PTR [ebp-0x5d]
  42abed:	xor    ebp,DWORD PTR [edi]
  42abef:	mov    esp,DWORD PTR [edx]
  42abf1:	jbe    0x42ab7a
  42abf3:	xor    al,0x86
  42abf5:	xor    eax,DWORD PTR [edx+0x4e8352f1]
  42abfb:	(bad)  
  42abfc:	sub    ebx,ebx
  42abfe:	mov    DWORD PTR [edi],edi
  42ac00:	xchg   ch,cl
  42ac02:	sti    
  42ac03:	adc    al,0x36
  42ac05:	mov    BYTE PTR [eax+eax*1+0x3],cl
  42ac09:	pop    esp
  42ac0a:	jb     0x42ac1e
  42ac0c:	adc    esp,DWORD PTR [esi+0x2]
  42ac0f:	lea    ebx,[ebx]
  42ac11:	or     ebp,0x30
  42ac14:	add    BYTE PTR ds:0xc684fa8d,dl
  42ac1a:	push   cs
  42ac1b:	add    eax,DWORD PTR [edi-0x40771c35]
  42ac21:	repz mov bl,0x45
  42ac24:	aaa    
  42ac25:	rol    edi,cl
  42ac27:	jns    0x42abf1
  42ac29:	pop    ebp
  42ac2a:	cwde   
  42ac2b:	jae    0x42ac71
  42ac2d:	data16 fdivr QWORD PTR [eax-0x24]
  42ac31:	pop    ecx
  42ac32:	scas   al,BYTE PTR es:[edi]
  42ac33:	test   BYTE PTR ds:0x7c859bc6,cl
  42ac39:	data16 fwait
  42ac3b:	or     DWORD PTR [ebp+edi*8+0x5000c9a],eax
  42ac42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ac43:	in     al,dx
  42ac44:	cli    
  42ac45:	adc    DWORD PTR [edi],0x9b29ffbd
  42ac4b:	mov    edx,0xc9b91ff
  42ac50:	push   edx
  42ac51:	cs adc ecx,esi
  42ac54:	stc    
  42ac55:	adc    DWORD PTR [eax],esp
  42ac57:	fimul  WORD PTR [eax-0x5768c75]
  42ac5d:	xchg   ecx,eax
  42ac5e:	pop    ss
  42ac5f:	test   edi,edi
  42ac61:	stc    
  42ac62:	call   0x660c:0x81866652
  42ac69:	adc    al,0x55
  42ac6c:	sti    
  42ac6d:	pop    ebx
  42ac6e:	inc    edx
  42ac6f:	add    esi,ecx
  42ac71:	jb     0x42ac35
  42ac73:	icebp  
  42ac74:	inc    ebx
  42ac75:	xchg   BYTE PTR [ebx+0x200cf9d],bh
  42ac7b:	adc    BYTE PTR [esi+0x71f4145],0x4
  42ac82:	push   esp
  42ac83:	adc    bl,BYTE PTR [eax-0x2e8d6510]
  42ac89:	inc    ebx
  42ac8a:	xchg   cl,al
  42ac8c:	add    BYTE PTR es:[edi],cl
  42ac8f:	(bad)  
  42ac90:	mov    dh,0xf1
  42ac92:	pushf  
  42ac93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ac94:	jnp    0x42ac6f
  42ac96:	or     BYTE PTR [ebp+0x65],dh
  42ac99:	xchg   BYTE PTR [ebp+0x69f0bfa3],bh
  42ac9f:	ins    DWORD PTR es:[edi],dx
  42aca0:	xor    ecx,esi
  42aca2:	jl     0x42ac64
  42aca4:	sbb    eax,0xe8986cf0
  42aca9:	xor    al,0x46
  42acab:	add    esp,DWORD PTR [esp+edi*2+0x3e639aea]
  42acb2:	pop    edx
  42acb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42acb4:	jnp    0x42ad24
  42acb6:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  42acb8:	or     eax,0x974e4cd0
  42acbd:	adc    eax,esi
  42acbf:	inc    edx
  42acc0:	dec    ebx
  42acc1:	xor    ecx,DWORD PTR [esi-0x3ad51cbe]
  42acc7:	ds out dx,eax
  42acc9:	(bad)  
  42acca:	aam    0xb7
  42accc:	std    
  42accd:	sti    
  42acce:	sub    DWORD PTR ds:0xb88603e4,ecx
  42acd4:	dec    edx
  42acd5:	fadd   QWORD PTR [ecx-0x6d0f4fee]
  42acdb:	cmp    al,BYTE PTR [eax+0x16]
  42acde:	add    BYTE PTR [esi+0x7903a34c],dh
  42ace4:	jle    0x42acc4
  42ace6:	mov    ah,0x86
  42ace8:	or     ecx,DWORD PTR [edx]
  42acea:	inc    ecx
  42aceb:	jo     0x42ad22
  42aced:	lock or DWORD PTR cs:[ebp+0x2ed6f475],ecx
  42acf5:	jmp    0x85a9:0x1be2781e
  42acfc:	repnz or al,BYTE PTR [edx]
  42acff:	mov    edx,DWORD PTR [edx+ecx*8+0x11]
  42ad03:	jnp    0x42acea
  42ad05:	or     ecx,ebp
  42ad07:	retf   
  42ad08:	aas    
  42ad09:	or     bl,ch
  42ad0b:	in     al,dx
  42ad0c:	outs   dx,DWORD PTR ds:[esi]
  42ad0d:	loopne 0x42ad53
  42ad0f:	repz or cl,BYTE PTR [ebx+0x5e8a424c]
  42ad16:	sti    
  42ad17:	jns    0x42acd0
  42ad19:	dec    edi
  42ad1a:	jae    0x42ace9
  42ad1c:	mov    bh,0x42
  42ad1e:	cmp    BYTE PTR [ebx+0x62],al
  42ad21:	xchg   edx,esp
  42ad23:	sub    DWORD PTR [eax-0x64],esp
  42ad26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ad27:	add    al,0xd6
  42ad29:	arpl   WORD PTR [edx],di
  42ad2b:	add    al,0x72
  42ad2d:	cwde   
  42ad2e:	sub    ah,al
  42ad30:	mov    bl,dh
  42ad32:	in     eax,0x9f
  42ad34:	mov    DWORD PTR [ecx],edx
  42ad36:	es dec ebx
  42ad38:	loopne 0x42ada4
  42ad3a:	xor    eax,0xcfdf888e
  42ad3f:	cmp    DWORD PTR [ebp+0xf],0x4f
  42ad43:	add    bl,bh
  42ad45:	(bad)  
  42ad46:	pop    edx
  42ad47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ad48:	add    al,0xd7
  42ad4a:	arpl   ax,bx
  42ad4c:	div    BYTE PTR [ebp-0x4e]
  42ad4f:	sbb    al,BYTE PTR [edx+ecx*4+0x587efe7]
  42ad56:	lahf   
  42ad57:	adc    al,0xc6
  42ad59:	or     edx,DWORD PTR [edi+0x8915097]
  42ad5f:	(bad)  
  42ad60:	xchg   esp,eax
  42ad61:	pop    edi
  42ad62:	jb     0x42ad64
  42ad64:	push   ds
  42ad65:	push   cs
  42ad66:	xchg   edx,eax
  42ad67:	ins    DWORD PTR es:[edi],dx
  42ad68:	mov    ch,0xe9
  42ad6a:	push   ebp
  42ad6b:	xor    DWORD PTR [edx-0x4210c5c0],edi
  42ad71:	icebp  
  42ad72:	sub    eax,DWORD PTR [edi]
  42ad74:	sbb    ah,ah
  42ad76:	push   esp
  42ad77:	dec    ecx
  42ad78:	pop    eax
  42ad79:	call   ecx
  42ad7b:	ins    DWORD PTR es:[edi],dx
  42ad7c:	into   
  42ad7d:	sub    eax,0x6ca33df1
  42ad82:	out    dx,al
  42ad83:	dec    ecx
  42ad84:	ins    DWORD PTR es:[edi],dx
  42ad85:	sub    BYTE PTR [eax*4-0x6dd3c601],ch
  42ad8c:	mov    al,0x80
  42ad8e:	jl     0x42adbe
  42ad90:	out    dx,al
  42ad91:	jnp    0x42adab
  42ad93:	adc    eax,DWORD PTR [esi-0x1d]
  42ad96:	xchg   esp,eax
  42ad97:	dec    ecx
  42ad98:	inc    esi
  42ad99:	push   eax
  42ad9a:	test   BYTE PTR [edx-0x7a35e396],dl
  42ada0:	fimul  DWORD PTR [ecx]
  42ada2:	shr    BYTE PTR [ebp+0x2b],cl
  42ada5:	(bad)  
  42ada6:	(bad)  
  42ada8:	add    dh,bl
  42adaa:	sub    eax,0xdfa71819
  42adaf:	pushf  
  42adb0:	dec    ecx
  42adb1:	jle    0x42adca
  42adb3:	adc    cl,BYTE PTR [ebx]
  42adb5:	pop    ss
  42adb6:	add    eax,0x448a2957
  42adbb:	add    BYTE PTR [ebp-0x6dd2c69e],0x44
  42adc2:	add    eax,0xf88a192d
  42adc7:	push   esi
  42adc8:	sub    DWORD PTR [edx-0x47a7764],ecx
  42adce:	mov    ecx,0xc3ea922b
  42add3:	popf   
  42add4:	jns    0x42ad7d
  42add6:	rcl    ecx,0x6d
  42add9:	fsubrp st(0),st
  42addb:	xchg   esp,eax
  42addc:	dec    ecx
  42addd:	xchg   BYTE PTR [edx-0x5c4c404e],ch
  42ade3:	aaa    
  42ade4:	push   ds
  42ade5:	add    ch,BYTE PTR [edi+0x701422b9]
  42adeb:	pop    es
  42adec:	cld    
  42aded:	imul   edi,DWORD PTR [edx+0x18],0x30
  42adf1:	lahf   
  42adf2:	cdq    
  42adf3:	mov    al,ds:0x372aef22
  42adf8:	(bad)  
  42adf9:	out    0xa6,al
  42adfb:	enterw 0x6b8b,0x82
  42ae00:	add    esi,DWORD PTR [edx]
  42ae02:	jmp    0x690f:0xf27d8b4a
  42ae09:	adc    al,0x62
  42ae0b:	loope  0x42ae3e
  42ae0d:	add    BYTE PTR [edx],bl
  42ae0f:	jmp    0x9c66:0xa6a68a4a
  42ae16:	pop    ebx
  42ae17:	xor    dl,ah
  42ae19:	addr16 pusha 
  42ae1b:	push   0xffffffa1
  42ae1d:	int3   
  42ae1e:	sub    esp,DWORD PTR [eax+0xc]
  42ae21:	fdiv   DWORD PTR [eax+0x26]
  42ae24:	xor    BYTE PTR [ebp-0x51],dl
  42ae27:	push   cs
  42ae28:	or     al,0x50
  42ae2a:	sti    
  42ae2b:	stos   BYTE PTR es:[edi],al
  42ae2c:	lock lods al,BYTE PTR ds:[esi]
  42ae2e:	adc    edx,ebx
  42ae30:	dec    edx
  42ae31:	adc    DWORD PTR [ebp-0x69c34c8b],0xffffffed
  42ae38:	add    DWORD PTR [eax],eax
  42ae3a:	mov    ebx,0x5a80ea14
  42ae3f:	pop    es
  42ae40:	push   es
  42ae41:	add    BYTE PTR [esi-0x53aca7a4],al
  42ae47:	xchg   edi,eax
  42ae48:	outs   dx,DWORD PTR ds:[esi]
  42ae49:	inc    esp
  42ae4a:	dec    esi
  42ae4b:	xor    edi,DWORD PTR [esi]
  42ae4d:	lods   al,BYTE PTR ds:[esi]
  42ae4e:	lds    ebp,FWORD PTR [ebx-0x551f28c7]
  42ae54:	sbb    al,0x0
  42ae56:	xchg   BYTE PTR [edx-0x4d],al
  42ae59:	jp     0x42ae0d
  42ae5b:	call   0x33ed:0xa10a7779
  42ae62:	xchg   esp,eax
  42ae63:	add    ah,bl
  42ae65:	add    ch,0x4d
  42ae68:	xchg   esp,eax
  42ae69:	push   ebp
  42ae6a:	inc    ecx
  42ae6b:	sub    ah,bh
  42ae6d:	add    eax,DWORD PTR [esi+0x47664a]
  42ae73:	mov    esi,0xc4ecccf1
  42ae78:	push   es
  42ae79:	add    eax,DWORD PTR [ebx]
  42ae7b:	xchg   BYTE PTR [edx-0x1d],al
  42ae7e:	in     al,dx
  42ae7f:	jb     0x42ae1b
  42ae81:	repnz inc ebx
  42ae83:	xchg   ch,cl
  42ae85:	sbb    bh,BYTE PTR [ebx+0x3a]
  42ae88:	xchg   esi,eax
  42ae89:	retf   
  42ae8a:	call   0x50dbebc4
  42ae8f:	cmp    DWORD PTR [ecx+eiz*8],ebp
  42ae92:	push   esp
  42ae93:	popf   
  42ae94:	arpl   WORD PTR ss:[ebx],dx
  42ae97:	inc    esi
  42ae98:	inc    edx
  42ae99:	jp     0x42aee1
  42ae9b:	mov    ds,WORD PTR [esp+eiz*4+0x76]
  42ae9f:	outs   dx,DWORD PTR ds:[esi]
  42aea0:	iret   
  42aea1:	dec    ebp
  42aea2:	clc    
  42aea3:	imul   ecx,esi,0xce7cecdb
  42aea9:	sub    eax,0xcbc669f8
  42aeae:	in     al,dx
  42aeaf:	ins    BYTE PTR es:[edi],dx
  42aeb0:	push   ebp
  42aeb1:	mov    ds:0xa9fbbc4c,eax
  42aeb6:	rol    DWORD PTR [ecx+0x33b6b42],0x3
  42aebd:	jecxz  0x42aeea
  42aebf:	stos   DWORD PTR es:[edi],eax
  42aec0:	dec    esi
  42aec1:	push   cs
  42aec2:	pop    es
  42aec3:	dec    BYTE PTR [edx]
  42aec5:	push   ss
  42aec6:	inc    esp
  42aec7:	xchg   dl,dh
  42aec9:	subps  xmm2,xmm6
  42aecc:	int    0x22
  42aece:	add    al,0xb9
  42aed0:	int    0x9
  42aed2:	ins    BYTE PTR es:[edi],dx
  42aed3:	mov    ecx,0x6ef09b
  42aed8:	mov    ch,0x28
  42aeda:	adc    al,al
  42aedc:	sub    eax,0x1a5f4c75
  42aee1:	and    esi,eax
  42aee3:	std    
  42aee4:	or     al,ah
  42aee6:	jbe    0x42af13
  42aee8:	pop    edi
  42aee9:	add    bh,BYTE PTR [edi-0x54]
  42aeec:	sbb    DWORD PTR [ecx],edx
  42aeee:	pop    edx
  42aeef:	push   ecx
  42aef0:	add    ah,BYTE PTR [esi]
  42aef2:	or     ch,cl
  42aef4:	xchg   esi,eax
  42aef5:	add    BYTE PTR [edx+0x6ecee18c],0x11
  42aefc:	out    dx,al
  42aefd:	and    dh,al
  42aeff:	in     eax,dx
  42af00:	out    dx,al
  42af01:	call   0xfec5b84
  42af06:	jg     0x42aeac
  42af08:	adc    eax,0x4f9a5d10
  42af0d:	inc    esi
  42af0e:	fs call 0x6cc1be6a
  42af14:	cmp    DWORD PTR [ebx-0x64cb1110],ebx
  42af1a:	jbe    0x42af0d
  42af1c:	les    eax,FWORD PTR [esi]
  42af1e:	call   0x97d6:0xa428225
  42af25:	push   0x1b
  42af27:	sub    DWORD PTR [edx+0x6d3cc9c5],eax
  42af2d:	into   
  42af2e:	jbe    0x42aee5
  42af30:	dec    edx
  42af31:	popf   
  42af32:	repz mov dh,0x6d
  42af35:	(bad)
  42af38:	jmp    0x165d:0xa6f09b
  42af3f:	out    0x6c,al
  42af41:	(bad)  
  42af42:	xchg   esi,eax
  42af43:	pop    ecx
  42af44:	sbb    DWORD PTR [eax+0x68ef097],0x4f0075df
  42af4e:	lods   al,BYTE PTR ds:[esi]
  42af4f:	jne    0x42af39
  42af51:	test   al,0x31
  42af53:	rcl    BYTE PTR [ecx],cl
  42af55:	outs   dx,DWORD PTR ds:[esi]
  42af56:	inc    esi
  42af57:	jno    0x42af51
  42af59:	test   al,0x12
  42af5b:	lock mov dl,0x1e
  42af5e:	lods   al,BYTE PTR ds:[esi]
  42af5f:	jne    0x42af45
  42af61:	xchg   esp,eax
  42af62:	push   ecx
  42af63:	stos   BYTE PTR es:[edi],al
  42af64:	adc    ch,BYTE PTR [edi]
  42af66:	inc    ebx
  42af67:	cmc    
  42af68:	(bad)  
  42af69:	dec    eax
  42af6a:	adc    edx,esp
  42af6c:	call   DWORD PTR [ecx+0x7455b37f]
  42af72:	jp     0x42aefb
  42af74:	dec    ebp
  42af75:	out    0xc5,eax
  42af77:	in     al,0xc
  42af79:	in     eax,dx
  42af7a:	inc    edx
  42af7b:	or     dl,BYTE PTR [ebx+0x11]
  42af7e:	hlt    
  42af7f:	and    al,al
  42af81:	lods   al,BYTE PTR ds:[esi]
  42af82:	nop
  42af83:	call   0xa85a1c0
  42af88:	test   DWORD PTR [edi+0x12],ebp
  42af8b:	sub    bh,dh
  42af8d:	fistp  WORD PTR [esi+0x329ffff0]
  42af93:	jbe    0x42afa6
  42af95:	and    al,0x9e
  42af97:	outs   dx,DWORD PTR ds:[esi]
  42af98:	stc    
  42af99:	retf   0x814
  42af9c:	test   DWORD PTR [ecx+0x3b062e],esi
  42afa2:	cdq    
  42afa3:	adc    al,dh
  42afa5:	mov    bl,BYTE PTR [edi+0x1d]
  42afa8:	or     BYTE PTR ds:[edi+0x38],al
  42afac:	inc    edi
  42afad:	add    BYTE PTR [edi-0x3d],bl
  42afb0:	mov    al,0x75
  42afb2:	and    eax,0x7375fac3
  42afb7:	pop    eax
  42afb8:	retf   0x92eb
  42afbb:	(bad)  
  42afbc:	ins    DWORD PTR es:[edi],dx
  42afbd:	or     al,0x5f
  42afbf:	adc    eax,DWORD PTR [edi]
  42afc1:	sub    DWORD PTR [ecx],0x4b
  42afc4:	jbe    0x42afb7
  42afc6:	xchg   BYTE PTR [ecx+edi*2-0xdb1f2f8],dh
  42afcd:	out    0xd7,eax
  42afcf:	outs   dx,BYTE PTR ds:[esi]
  42afd0:	push   es
  42afd1:	add    ch,bh
  42afd3:	jecxz  0x42af5e
  42afd5:	(bad)  
  42afd6:	call   0xe42f:0x1e8471cb
  42afdd:	cli    
  42afde:	mov    dh,0x73
  42afe0:	ins    BYTE PTR es:[edi],dx
  42afe1:	(bad)  
  42afe2:	(bad)  
  42afe3:	stos   DWORD PTR es:[edi],eax
  42afe4:	retf   0x9144
  42afe7:	stos   DWORD PTR es:[edi],eax
  42afe8:	aam    0xa
  42afea:	(bad)  
  42afeb:	stos   DWORD PTR es:[edi],eax
  42afec:	or     al,0x84
  42afee:	(bad)  
  42afef:	fistp  QWORD PTR [ebx]
  42aff1:	push   ebx
  42aff2:	push   ebp
  42aff3:	cs mov dh,bh
  42aff6:	jecxz  0x42b04c
  42aff8:	in     al,0x4f
  42affa:	out    dx,al
  42affb:	ss or  al,0x0
  42affe:	xchg   BYTE PTR [edi],ch
  42b000:	int    0x73
  42b002:	mov    ds:0x1d2328,eax
  42b007:	xchg   ecx,eax
  42b008:	pop    ds
  42b009:	int    0xa
  42b00b:	lock imul ebx,DWORD PTR [ebp-0x73],0xb
  42b010:	inc    esp
  42b011:	loop   0x42b00d
  42b013:	test   eax,0xa028d4bb
  42b018:	xchg   esp,eax
  42b019:	loop   0x42afa2
  42b01b:	inc    ebx
  42b01c:	jl     0x42b08f
  42b01e:	test   BYTE PTR [esi+0x36fae2a6],cl
  42b024:	jae    0x42b037
  42b026:	jb     0x42afa8
  42b028:	je     0x42b080
  42b02a:	call   0xfb2551f4
  42b02f:	cld    
  42b030:	ins    DWORD PTR es:[edi],dx
  42b031:	repz pop edx
  42b033:	enter  0xb560,0xbd
  42b037:	mov    gs,WORD PTR [ebx+0x2a6a873f]
  42b03d:	shl    bl,cl
  42b03f:	xchg   DWORD PTR [edx-0x1d],eax
  42b042:	add    esi,DWORD PTR [ecx+ecx*8+0x1c06fc15]
  42b049:	loop   0x42b05d
  42b04b:	mov    es,WORD PTR [edx-0x1d]
  42b04e:	push   eax
  42b04f:	mov    edx,0x1ec3b545
  42b054:	and    edx,esp
  42b056:	add    eax,DWORD PTR [esi+0x19fbb2dd]
  42b05c:	popf   
  42b05d:	pop    ss
  42b05e:	pop    esi
  42b05f:	xchg   cl,dh
  42b061:	rsqrtps xmm6,XMMWORD PTR [si]
  42b065:	mov    ds:0xdf190f03,eax
  42b06a:	jl     0x42b06c
  42b06c:	inc    edi
  42b06d:	dec    ebx
  42b06e:	sar    BYTE PTR fs:[ebp-0x35],0xa3
  42b073:	idiv   edx
  42b075:	add    ebx,esi
  42b077:	push   ebx
  42b078:	push   0x40769837
  42b07d:	xor    ch,BYTE PTR [ecx+eax*8-0x17]
  42b081:	mov    fs,WORD PTR [ecx-0x57373317]
  42b087:	xor    BYTE PTR [edi],cl
  42b089:	add    edi,edx
  42b08b:	jl     0x42b0d4
  42b08d:	pop    ecx
  42b08e:	push   0x45
  42b090:	inc    esi
  42b091:	iret   
  42b092:	mov    al,ds:0xaf285640
  42b097:	dec    eax
  42b098:	adc    ecx,DWORD PTR [ecx]
  42b09a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b09b:	jl     0x42b061
  42b09d:	test   eax,0x9c8c4332
  42b0a2:	jnp    0x42b025
  42b0a4:	int3   
  42b0a5:	inc    ecx
  42b0a6:	jecxz  0x42b0ab
  42b0a8:	or     DWORD PTR [esi+0x13],ebx
  42b0ab:	adc    al,dh
  42b0ad:	inc    edx
  42b0ae:	push   0xffffff84
  42b0b0:	inc    ebp
  42b0b1:	inc    ebx
  42b0b2:	jecxz  0x42b0b7
  42b0b4:	loopne 0x42b0e8
  42b0b6:	pop    esi
  42b0b7:	and    DWORD PTR [eax],0x85e90a43
  42b0bd:	bnd jle 0x42b12a
  42b0c0:	or     eax,0xb5e9f09c
  42b0c5:	xchg   edi,eax
  42b0c6:	fsubr  DWORD PTR [edx+0x1]
  42b0c9:	dec    eax
  42b0ca:	(bad)  
  42b0cb:	jmp    0x42b051
  42b0cd:	inc    edx
  42b0ce:	or     bl,BYTE PTR [eax+eax*1+0x7]
  42b0d2:	lea    ecx,[ecx]
  42b0d4:	jmp    0x6ac1a35e
  42b0d9:	dec    ebp
  42b0da:	pushf  
  42b0db:	lock jmp 0x6b1b4896
  42b0e1:	rol    DWORD PTR [edi-0x4f],1
  42b0e4:	in     eax,dx
  42b0e5:	test   BYTE PTR [edx+0xa],al
  42b0e8:	push   0xe90a76c7
  42b0ed:	test   eax,esi
  42b0ef:	jle    0x42b153
  42b0f1:	leave  
  42b0f2:	inc    edx
  42b0f3:	or     ch,cl
  42b0f5:	push   0xffffff80
  42b0f7:	loope  0x42b09a
  42b0f9:	inc    esp
  42b0fa:	cwde   
  42b0fb:	lock ins BYTE PTR es:[edi],dx
  42b0fd:	lds    ecx,FWORD PTR [eax-0x79]
  42b100:	cdq    
  42b101:	ficomp WORD PTR [eax-0x327b6c10]
  42b107:	mov    dh,0xf9
  42b109:	scas   eax,DWORD PTR es:[edi]
  42b10a:	cwde   
  42b10b:	lock add DWORD PTR [ecx+0x7],esi
  42b10f:	icebp  
  42b110:	push   cs
  42b111:	xor    al,BYTE PTR [ecx+0x27c51159]
  42b117:	icebp  
  42b118:	(bad)  
  42b119:	and    bl,bl
  42b11b:	jbe    0x42b0f7
  42b11d:	in     al,dx
  42b11e:	test   eax,0xc385e90a
  42b123:	(bad)  
  42b124:	scas   eax,DWORD PTR es:[edi]
  42b125:	add    BYTE PTR [edx+0x4a],0x30
  42b129:	neg    DWORD PTR [ecx-0x679ef21e]
  42b12f:	lock ss out dx,eax
  42b132:	push   es
  42b133:	int3   
  42b134:	add    BYTE PTR [eax],al
  42b136:	(bad)  
  42b137:	sbb    DWORD PTR [eax+0xa3f6cf8],esp
  42b13d:	push   0x6f
  42b13f:	ror    al,0xff
  42b142:	inc    edi
  42b143:	cs xor esi,edi
  42b146:	and    cl,al
  42b148:	mov    al,0x7f
  42b14a:	cmp    dh,ch
  42b14c:	loop   0x42b14f
  42b14e:	das    
  42b14f:	aas    
  42b150:	jg     0x42b0d7
  42b152:	das    
  42b153:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b154:	repz (bad) 
  42b156:	fld    DWORD PTR [ebp+0xa]
  42b159:	inc    eax
  42b15a:	push   esi
  42b15b:	adc    ebx,esi
  42b15d:	jmp    0x3655fd
  42b162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b163:	add    esp,edx
  42b165:	mov    DWORD PTR [esi+ebx*4-0x710fff6],ebx
  42b16c:	add    DWORD PTR [ebp-0x72bf72d6],ecx
  42b172:	pop    esp
  42b173:	inc    esi
  42b174:	or     al,0x0
  42b176:	fucomip st,st(6)
  42b178:	hlt    
  42b179:	adc    eax,0x4a4cdf
  42b17e:	ins    BYTE PTR es:[edi],dx
  42b17f:	add    BYTE PTR [ecx+edi*4],0x91
  42b183:	inc    ebp
  42b184:	or     al,BYTE PTR [eax]
  42b186:	push   edx
  42b187:	rol    DWORD PTR [eax],0xfe
  42b18a:	mov    al,ds:0xaf00caa3
  42b18f:	inc    BYTE PTR [edx+0x75]
  42b192:	xchg   esi,eax
  42b193:	pop    ss
  42b194:	jbe    0x42b19e
  42b196:	xor    bl,BYTE PTR [esi+eiz*8]
  42b199:	add    eax,0x5a3eaf00
  42b19e:	lea    esp,[edx+esi*1]
  42b1a1:	or     al,0x0
  42b1a3:	lahf   
  42b1a4:	pop    ss
  42b1a5:	int3   
  42b1a6:	call   0x36b09e
  42b1ab:	jmp    0xe6c7:0x86850385
  42b1b2:	cli    
  42b1b3:	jno    0x42b1da
  42b1b5:	outs   dx,DWORD PTR ds:[esi]
  42b1b6:	cld    
  42b1b7:	sub    DWORD PTR [ebx+0x7805890c],0x1c59fff4
  42b1c1:	push   es
  42b1c2:	pop    ebx
  42b1c3:	mov    al,0xe2
  42b1c5:	retf   0x8603
  42b1c8:	push   esi
  42b1c9:	jne    0x42b1b6
  42b1cb:	aad    0x7c
  42b1cd:	ret    
  42b1ce:	push   ecx
  42b1cf:	shl    DWORD PTR [ebx+0x1],1
  42b1d2:	mov    al,ds:0x75066d4b
  42b1d7:	pop    eax
  42b1d8:	add    ebp,eax
  42b1da:	(bad)  
  42b1db:	lds    ebp,FWORD PTR [ebx-0x408c04c2]
  42b1e1:	sbb    al,BYTE PTR [eax-0x7a]
  42b1e4:	rol    DWORD PTR [ecx],cl
  42b1e6:	mov    al,ds:0x750ced43
  42b1eb:	xchg   ebp,eax
  42b1ec:	adc    al,BYTE PTR [edx]
  42b1ee:	js     0x42b1b3
  42b1f0:	in     al,dx
  42b1f1:	or     al,0x89
  42b1f3:	xchg   ebx,eax
  42b1f4:	mov    edi,0x69863ec9
  42b1f9:	or     ah,BYTE PTR [eax+0x10ceccb]
  42b1ff:	add    BYTE PTR [eax],dh
  42b201:	push   eax
  42b202:	sbb    dh,al
  42b204:	je     0x42b1f1
  42b206:	or     al,0x87
  42b208:	inc    ebx
  42b209:	xchg   ebx,eax
  42b20a:	adc    edi,DWORD PTR [edi+0x48346e3a]
  42b210:	xor    al,BYTE PTR [ebx-0x1c6d8bcc]
  42b216:	pusha  
  42b217:	adc    BYTE PTR [esi],bh
  42b219:	nop
  42b21a:	mov    esp,eax
  42b21c:	xchg   BYTE PTR [ebx+0x79b6bb0c],ch
  42b222:	dec    esp
  42b223:	add    BYTE PTR [edi+edi*2],bl
  42b226:	rcr    DWORD PTR ds:0xea342c9,cl
  42b22c:	mov    BYTE PTR [edx+0x5d],0x1f
  42b230:	popa   
  42b231:	cmp    ebx,DWORD PTR [eax-0x1cfd681c]
  42b237:	pop    ecx
  42b238:	sahf   
  42b239:	lods   eax,DWORD PTR ds:[esi]
  42b23a:	shl    BYTE PTR [ecx+esi*1-0x1ffbdcd0],cl
  42b241:	ss int3 
  42b243:	std    
  42b244:	or     al,0xe2
  42b246:	fadd   DWORD PTR [ebx-0x7a]
  42b249:	sub    al,0xd
  42b24b:	mov    ds:0x4237fb9,eax
  42b250:	fcomp  QWORD PTR [ebp-0x5c]
  42b253:	outs   dx,DWORD PTR ds:[esi]
  42b254:	popa   
  42b255:	sub    ah,bl
  42b257:	imul   eax,esi,0x42
  42b25a:	mov    BYTE PTR [edi],cl
  42b25c:	ss xor al,0x23
  42b25f:	add    al,0x51
  42b261:	test   esi,ebp
  42b263:	add    al,0x0
  42b265:	sahf   
  42b266:	sub    cl,BYTE PTR [esi+0x44]
  42b269:	xchg   dl,dh
  42b26b:	cmovb  esi,DWORD PTR [si]
  42b26f:	mov    ds:0x1e1a1903,eax
  42b274:	inc    ecx
  42b275:	xchg   BYTE PTR [ebp+0x24],bl
  42b278:	outs   dx,DWORD PTR ds:[esi]
  42b279:	jge    0x42b240
  42b27b:	cmp    ah,ch
  42b27d:	add    BYTE PTR [edx],bl
  42b27f:	es inc ecx
  42b281:	xchg   BYTE PTR [ebp+0x7f59a2dd],ch
  42b287:	mov    ds:0x279a4903,eax
  42b28c:	jo     0x42b2d5
  42b28e:	pop    ebp
  42b28f:	and    al,0x70
  42b291:	jnp    0x42b25a
  42b293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b294:	sti    
  42b295:	push   esi
  42b296:	cmc    
  42b297:	mov    al,BYTE PTR [ebx]
  42b299:	xchg   esi,eax
  42b29a:	inc    edx
  42b29b:	jecxz  0x42b2e9
  42b29d:	popf   
  42b29e:	jno    0x42b305
  42b2a0:	les    edx,FWORD PTR [edx]
  42b2a2:	add    eax,0x4a41620a
  42b2a7:	test   DWORD PTR [ecx+edx*4-0x7a17f9e0],ebx
  42b2ae:	inc    edx
  42b2af:	loop   0x42b2f0
  42b2b1:	mov    ds:0xe0d6f09c,eax
  42b2b6:	dec    edx
  42b2b7:	test   ecx,ebx
  42b2b9:	bound  ebp,QWORD PTR [edi]
  42b2bb:	jbe    0x42b29c
  42b2bd:	lds    eax,FWORD PTR [edx+0x35]
  42b2c0:	mov    edx,0x3cf15ee8
  42b2c5:	dec    esi
  42b2c6:	popf   
  42b2c7:	push   ss
  42b2c8:	sub    eax,0xa027700
  42b2cd:	pop    ecx
  42b2ce:	test   BYTE PTR [edi+0x46a89e12],bl
  42b2d4:	mov    esp,DWORD PTR [edi-0x16f5ad7b]
  42b2da:	(bad)  
  42b2db:	pop    es
  42b2dc:	pop    eax
  42b2dd:	sbb    ch,BYTE PTR [ebx]
  42b2df:	das    
  42b2e0:	pop    edx
  42b2e1:	fcmovb st,st(5)
  42b2e3:	inc    edx
  42b2e4:	xchg   DWORD PTR [ecx-0x56c491d2],ebp
  42b2ea:	ret    0x54fc
  42b2ed:	(bad)  
  42b2ee:	(bad)  
  42b2ef:	aas    
  42b2f0:	or     dh,BYTE PTR [esi+edi*2+0x686a5aab]
  42b2f7:	xor    cl,BYTE PTR [edx]
  42b2f9:	aad    0xf0
  42b2fb:	rol    BYTE PTR [esi-0x27],0x43
  42b2ff:	pop    ss
  42b300:	xor    bl,BYTE PTR [ebp-0x5372c198]
  42b306:	jne    0x42b2a0
  42b308:	pop    ebx
  42b309:	xchg   edi,eax
  42b30a:	dec    esi
  42b30b:	push   cs
  42b30c:	add    bh,BYTE PTR [esi+0x65009140]
  42b312:	ficom  DWORD PTR [edi+0x62ee9f0]
  42b318:	inc    BYTE PTR [eax]
  42b31a:	adc    BYTE PTR [edx-0x10],bl
  42b31d:	add    BYTE PTR [eax-0x677c06e6],cl
  42b323:	mov    ds:0x43738403,eax
  42b328:	or     al,BYTE PTR [eax]
  42b32a:	push   esp
  42b32b:	xchg   edi,eax
  42b32c:	or     DWORD PTR [eax],eax
  42b32e:	add    BYTE PTR [edi+0x38],ch
  42b331:	stc    
  42b332:	paddsb mm1,QWORD PTR [ebx-0x37a00010]
  42b339:	cmp    eax,0x32b14710
  42b33e:	dec    BYTE PTR [eax-0x3b]
  42b341:	inc    ebp
  42b342:	cld    
  42b343:	in     al,dx
  42b344:	jbe    0x42b339
  42b346:	pavgw  mm5,QWORD PTR [edi+0x385ffff0]
  42b34d:	mov    cl,0xf
  42b34f:	lods   al,BYTE PTR ds:[esi]
  42b350:	out    0xf0,eax
  42b352:	jmp    FWORD PTR [edi]
  42b354:	retf   0x75f3
  42b357:	daa    
  42b358:	retf   0xfb0
  42b35b:	mov    ds:0x2ffff0c3,eax
  42b360:	retf   0x75b0
  42b363:	xor    eax,0x130c7738
  42b368:	lea    edi,[ebp+0x44]
  42b36b:	fdivr  DWORD PTR [edx+ebx*2]
  42b36e:	jmp    edx
  42b370:	inc    esi
  42b371:	pop    esp
  42b372:	push   edx
  42b374:	xor    bl,BYTE PTR [eax+eax*2]
  42b377:	fistp  QWORD PTR [edi-0x5bcef334]
  42b37d:	adc    eax,0xa02bc7c
  42b382:	mov    ebp,DWORD PTR [ecx-0x66c1b35a]
  42b388:	mov    ds:0xa821047d,eax
  42b38d:	pop    edi
  42b38e:	test   DWORD PTR [eax-0x6],ebp
  42b391:	mov    eax,DWORD PTR ds:[eax]
  42b394:	jmp    0x6270:0x86347f46
  42b39b:	jg     0x42b3c7
  42b39d:	ja     0x42b389
  42b39f:	pop    ebx
  42b3a0:	xchg   ecx,eax
  42b3a1:	test   BYTE PTR [edx+0xb],0x55
  42b3a5:	imul   ecx,DWORD PTR [esi],0x71a08145
  42b3ab:	mov    edi,0xfed0de85
  42b3b0:	dec    eax
  42b3b1:	popa   
  42b3b2:	leave  
  42b3b3:	outs   dx,BYTE PTR ds:[esi]
  42b3b4:	retf   0x5b62
  42b3b7:	or     dl,bh
  42b3b9:	popf   
  42b3ba:	xor    dl,BYTE PTR [ecx+0x69]
  42b3bd:	out    dx,eax
  42b3be:	std    
  42b3bf:	cli    
  42b3c0:	jnp    0x42b35d
  42b3c2:	repnz aas 
  42b3c4:	xchg   BYTE PTR [eax],ch
  42b3c6:	leave  
  42b3c7:	or     eax,DWORD PTR [edi-0x348001aa]
  42b3cd:	je     0x42b3db
  42b3cf:	je     0x42b364
  42b3d1:	adc    BYTE PTR [edx+0x8],bl
  42b3d4:	add    eax,0x9ffdfe5f
  42b3d9:	dec    edi
  42b3da:	cs (bad) 
  42b3dc:	jmp    FWORD PTR [edx+0x108e747f]
  42b3e2:	inc    edx
  42b3e3:	cld    
  42b3e4:	or     esp,DWORD PTR [eax+0x6]
  42b3e7:	inc    cl
  42b3e9:	or     al,0x52
  42b3eb:	adc    BYTE PTR [eax-0x67d00ddc],dh
  42b3f1:	jmp    0x42b3ff
  42b3f3:	jg     0x42b3b7
  42b3f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b3f6:	xor    bh,bl
  42b3f8:	add    BYTE PTR [ebx-0x79c00891],bl
  42b3fe:	and    bl,al
  42b400:	out    0x84,al
  42b402:	cwde   
  42b403:	int3   
  42b404:	pop    edx
  42b405:	cmp    al,ah
  42b407:	mov    ebp,0x99ab82bd
  42b40c:	inc    ecx
  42b40d:	jp     0x42b3ca
  42b40f:	jmp    0x42b425
  42b411:	mov    edx,0x8643f542
  42b416:	push   ecx
  42b417:	and    ecx,DWORD PTR [edi+eax*4-0xf85f35]
  42b41e:	cld    
  42b41f:	jmp    0x13a:0x9081c78e
  42b426:	xchg   ebx,eax
  42b427:	mov    bl,0xe2
  42b429:	dec    esi
  42b42a:	push   esp
  42b42b:	jno    0x42b421
  42b42d:	add    ch,bh
  42b42f:	out    0xe2,al
  42b431:	mov    ch,0xda
  42b433:	out    0xf7,eax
  42b435:	sbb    DWORD PTR [eax],esi
  42b437:	and    eax,DWORD PTR [eax*8+0x5d561959]
  42b43e:	xchg   ebp,eax
  42b43f:	pop    eax
  42b440:	or     BYTE PTR [esi+0x55],ch
  42b443:	loope  0x42b426
  42b445:	pop    esp
  42b446:	shr    DWORD PTR [eax-0x326a4bf0],0xeb
  42b44d:	jnp    0x42b451
  42b44f:	jecxz  0x42b491
  42b451:	fadd   QWORD PTR [ecx-0x362bcacf]
  42b457:	xchg   edx,eax
  42b458:	pop    edi
  42b45a:	inc    esi
  42b45b:	xor    ecx,DWORD PTR [ebx-0x30a13b00]
  42b461:	loopne 0x42b4dd
  42b463:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b464:	aam    0x43
  42b466:	xchg   BYTE PTR [ecx-0x54],dl
  42b469:	sbb    ebp,DWORD PTR [edx+ecx*2+0x51b337ee]
  42b470:	outs   dx,BYTE PTR ds:[esi]
  42b471:	sbb    ebx,DWORD PTR [esp+ecx*1-0x3fec6da]
  42b478:	out    0x8c,al
  42b47a:	repnz rcl BYTE PTR [esi],0x9c
  42b47e:	jmp    0x86b0c093
  42b483:	xchg   ebp,eax
  42b484:	out    dx,al
  42b485:	fsubr  QWORD PTR [esi]
  42b488:	shl    esp,cl
  42b48a:	xchg   ecx,eax
  42b48b:	inc    edx
  42b48c:	or     ch,BYTE PTR [edx+eax*8-0x45]
  42b490:	inc    edi
  42b491:	in     eax,0x58
  42b493:	inc    esp
  42b494:	icebp  
  42b495:	fstp   QWORD PTR ds:0xb8491698
  42b49b:	push   esp
  42b49c:	or     ah,BYTE PTR [edx+0x3c]
  42b49f:	ds (bad) 
  42b4a1:	(bad)  
  42b4a4:	jecxz  0x42b494
  42b4a6:	or     cl,BYTE PTR [ecx-0x4e]
  42b4a9:	jo     0x42b521
  42b4ab:	mov    edx,0x686aac4c
  42b4b0:	jl     0x42b4d6
  42b4b2:	(bad)  
  42b4b3:	leave  
  42b4b4:	(bad)  
  42b4b6:	dec    edx
  42b4b7:	sub    edx,0xffffffeb
  42b4ba:	or     al,BYTE PTR [edx+0x3d82c105]
  42b4c0:	lock into 
  42b4c2:	add    BYTE PTR [eax-0x75f28a69],ah
  42b4c8:	xchg   edi,eax
  42b4c9:	push   ss
  42b4ca:	mov    ecx,0x170a545b
  42b4cf:	mov    edi,ecx
  42b4d1:	int3   
  42b4d2:	adc    al,0x13
  42b4d4:	test   al,0x5a
  42b4d6:	cmp    BYTE PTR [ebx-0x3b],dh
  42b4d9:	dec    eax
  42b4da:	in     eax,dx
  42b4db:	outs   dx,DWORD PTR ds:[esi]
  42b4dc:	repnz sub BYTE PTR [edx+ecx*2],0x99
  42b4e1:	push   ss
  42b4e2:	jge    0x42b4ff
  42b4e4:	push   esp
  42b4e5:	or     bh,BYTE PTR [edx-0xeaea526]
  42b4eb:	jbe    0x42b4aa
  42b4ed:	jg     0x42b4d8
  42b4ef:	test   DWORD PTR [edx+0x33],eax
  42b4f2:	or     al,0x96
  42b4f4:	inc    edi
  42b4f5:	xchg   BYTE PTR [ebp+eax*4+0x42],ch
  42b4f9:	or     dh,BYTE PTR [edx-0x6a]
  42b4fc:	lds    edi,FWORD PTR [eax-0x13]
  42b4ff:	clc    
  42b500:	inc    edi
  42b501:	jg     0x42b4e8
  42b503:	test   DWORD PTR [edx+0xa],eax
  42b506:	add    BYTE PTR [esi-0x14],dl
  42b509:	in     eax,dx
  42b50a:	call   0x36f116
  42b50f:	pop    ebx
  42b510:	jg     0x42b58e
  42b512:	ins    DWORD PTR es:[edi],dx
  42b513:	sbb    al,0x26
  42b515:	push   es
  42b516:	call   FWORD PTR [edx]
  42b518:	nop
  42b519:	repz jne 0x42b4bf
  42b51c:	mov    ds:0xa2ec0875,al
  42b521:	adc    eax,0x9ff9d50
  42b526:	mov    eax,DWORD PTR [eax]
  42b528:	lahf   
  42b529:	aaa    
  42b52a:	loope  0x42b5a0
  42b52c:	iret   
  42b52d:	cmp    BYTE PTR [edi+0x14],cl
  42b530:	or     esi,DWORD PTR ds:0x4e1c0268
  42b536:	cmc    
  42b537:	jne    0x42b5b4
  42b539:	sub    ebp,esi
  42b53b:	push   esi
  42b53c:	aad    0x73
  42b53e:	repz adc eax,0x308ffb
  42b544:	jmp    0x1899:0x4024757e
  42b54b:	adc    DWORD PTR [edi+0x10565a3e],ebx
  42b551:	cdq    
  42b552:	pop    esp
  42b553:	adc    ch,BYTE PTR [edi+0x3e]
  42b556:	pop    esp
  42b557:	(bad)  
  42b558:	cmp    bl,bh
  42b55a:	(bad)  
  42b55b:	aas    
  42b55c:	pop    ds
  42b55d:	enter  0x8b03,0x8a
  42b561:	mov    ds:0xa72de1c9,al
  42b566:	push   edx
  42b567:	add    al,0x1
  42b569:	jae    0x42b552
  42b56b:	adc    eax,0x4d893b94
  42b570:	xchg   ebx,eax
  42b571:	mov    DWORD PTR [ecx],0xf3be3b89
  42b577:	pop    es
  42b578:	cmp    DWORD PTR [ebp+edx*1-0x28],esi
  42b57c:	out    dx,al
  42b57d:	dec    BYTE PTR [ecx]
  42b57f:	mov    bl,0x86
  42b581:	stos   BYTE PTR es:[edi],al
  42b582:	iret   
  42b583:	je     0x42b563
  42b585:	add    esi,ebx
  42b587:	out    dx,eax
  42b588:	je     0x42b573
  42b58a:	or     al,0x5a
  42b58c:	add    ah,bh
  42b58e:	addr16 xor eax,0xc78c4c9
  42b594:	push   ecx
  42b595:	push   ebp
  42b596:	and    BYTE PTR [ebx],cl
  42b598:	in     al,dx
  42b599:	xchg   esp,eax
  42b59a:	jmp    0x269c0aab
  42b59f:	push   eax
  42b5a0:	or     al,0x51
  42b5a2:	sub    al,0xbd
  42b5a4:	cli    
  42b5a5:	dec    eax
  42b5a6:	mov    eax,ds:0x9973fb37
  42b5ab:	cli    
  42b5ac:	aas    
  42b5ad:	xchg   al,bl
  42b5af:	stc    
  42b5b0:	rol    DWORD PTR [edx-0x7b],0xff
  42b5b4:	add    BYTE PTR [edi+0xd3056d1],bh
  42b5ba:	mov    ds:0xa405c523,al
  42b5bf:	dec    esp
  42b5c0:	outs   dx,BYTE PTR ds:[esi]
  42b5c1:	test   DWORD PTR ds:0x320d5846,eax
  42b5c7:	add    ah,BYTE PTR [esi+0x59]
  42b5ca:	test   BYTE PTR [esi],0x8d
  42b5cd:	xor    BYTE PTR [edx+0x6f495035],0x98
  42b5d4:	or     eax,0xbf819bc6
  42b5d9:	mov    bl,0x92
  42b5db:	mov    eax,esp
  42b5dd:	(bad)  
  42b5de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b5df:	push   ds
  42b5e0:	outs   dx,BYTE PTR ds:[esi]
  42b5e1:	push   ecx
  42b5e2:	lds    eax,FWORD PTR [ecx]
  42b5e4:	ret    0x87ca
  42b5e7:	(bad)  
  42b5e8:	push   DWORD PTR [ecx-0x3f054438]
  42b5ee:	xchg   ebx,eax
  42b5ef:	aaa    
  42b5f0:	sti    
  42b5f1:	add    BYTE PTR [ebx+0xb],dh
  42b5f4:	sti    
  42b5f5:	aas    
  42b5f6:	xchg   BYTE PTR ds:0x42892449,ah
  42b5fc:	enter  0x5940,0xeb
  42b600:	and    edi,DWORD PTR [eax]
  42b602:	add    DWORD PTR [edi+0x4641ef61],ebx
  42b608:	jecxz  0x42b60d
  42b60a:	dec    ecx
  42b60b:	mov    ebp,0xf9340ba5
  42b610:	fiadd  DWORD PTR [ebx+0x32e302fa]
  42b616:	adc    ecx,eax
  42b618:	xchg   dl,bl
  42b61a:	mov    esp,0xb68ab291
  42b61f:	call   0xc35d:0x91acdf2e
  42b626:	sbb    bh,BYTE PTR [edx]
  42b628:	lea    eax,[edx]
  42b62a:	ds fwait
  42b62c:	mov    es,WORD PTR [esi+eax*4]
  42b62f:	inc    edx
  42b630:	pop    esi
  42b631:	mov    ch,bl
  42b633:	(bad)  
  42b634:	neg    ebp
  42b636:	sar    DWORD PTR [edi-0x6e8f589b],1
  42b63c:	out    0x34,eax
  42b63e:	ins    DWORD PTR es:[edi],dx
  42b63f:	aaa    
  42b640:	jnp    0x42b635
  42b642:	test   eax,0x8e476a42
  42b647:	(bad)
  42b64a:	rol    BYTE PTR [esi+0x5d],cl
  42b64d:	or     BYTE PTR [ecx+0x6c],ch
  42b650:	repz fdiv st(2),st
  42b653:	(bad)  
  42b654:	call   0xeaca:0x913c00df
  42b65b:	cmp    BYTE PTR [ecx+0x40f187e2],dl
  42b661:	mov    ax,0x9129
  42b665:	loop   0x42b5ef
  42b667:	(bad)  
  42b668:	mov    ebp,0xddf28ee1
  42b66d:	test   ebp,ebx
  42b66f:	or     al,0xf4
  42b671:	adc    ebx,ebp
  42b673:	jns    0x42b63c
  42b675:	or     DWORD PTR [ecx+0x718d3a5e],ebp
  42b67b:	test   DWORD PTR [ebx+0x4285e9b1],ebx
  42b681:	clc    
  42b682:	fs ss mov ?,eax
  42b686:	push   esi
  42b687:	fidivr DWORD PTR [ebx]
  42b689:	xchg   BYTE PTR [ebp-0x7e],ah
  42b68c:	inc    edx
  42b68d:	or     bh,BYTE PTR [edi]
  42b68f:	dec    eax
  42b690:	cmp    cl,BYTE PTR [esi*4+0x1186bfa6]
  42b697:	loope  0x42b624
  42b699:	lock cdq 
  42b69b:	lods   eax,DWORD PTR ds:[esi]
  42b69c:	popf   
  42b69d:	or     ecx,ebp
  42b69f:	test   esi,eax
  42b6a1:	leave  
  42b6a2:	xchg   ebp,eax
  42b6a3:	mov    dh,0xc7
  42b6a5:	jmp    DWORD PTR [ecx-0x7b]
  42b6a8:	mov    edi,0x8bb93d96
  42b6ad:	lock fwait
  42b6af:	push   esi
  42b6b0:	lea    ebx,[ecx-0x1b]
  42b6b3:	add    cl,dl
  42b6b5:	jbe    0x42b6e2
  42b6b7:	pop    eax
  42b6b8:	add    al,BYTE PTR [edx]
  42b6ba:	call   0x7f4f87bf
  42b6bf:	ins    BYTE PTR es:[edi],dx
  42b6c0:	sub    eax,0xb5def08f
  42b6c5:	(bad)  
  42b6c6:	jle    0x42b734
  42b6c8:	sub    DWORD PTR [ecx-0x656a3110],ebx
  42b6ce:	cmp    al,ch
  42b6d0:	xor    cl,BYTE PTR [ebp+0x45b0a986]
  42b6d6:	fs jmp 0xe400:0x5c0fa782
  42b6de:	hlt    
  42b6df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b6e0:	push   edx
  42b6e1:	add    BYTE PTR [ebp-0xec6e251],al
  42b6e7:	xchg   esi,eax
  42b6e8:	inc    edx
  42b6e9:	leave  
  42b6ea:	icebp  
  42b6eb:	cmp    dl,BYTE PTR fs:[edi+edi*1]
  42b6ef:	add    BYTE PTR [esi+ebp*2-0x3e858bf7],bl
  42b6f6:	repz add al,BYTE PTR [ebx]
  42b6f9:	sbb    al,0x89
  42b6fb:	push   cs
  42b6fc:	fs inc esp
  42b6fe:	pop    ebp
  42b6ff:	lea    esi,[edx-0x21]
  42b702:	in     eax,dx
  42b703:	dec    DWORD PTR [eax+0x51]
  42b706:	inc    ecx
  42b707:	call   FWORD PTR [edi]
  42b709:	cmp    al,0x71
  42b70b:	clc    
  42b70c:	in     al,dx
  42b70d:	idiv   DWORD PTR [ecx-0xc913f17]
  42b713:	call   DWORD PTR [ecx+0x3040205]
  42b719:	arpl   WORD PTR [edi-0x7b],di
  42b71c:	xchg   edi,eax
  42b71d:	jo     0x42b712
  42b71f:	inc    DWORD PTR [eax]
  42b721:	out    dx,eax
  42b722:	fwait
  42b723:	popa   
  42b724:	add    BYTE PTR [edi+0x3c08643],bl
  42b72a:	xchg   ebx,eax
  42b72b:	xchg   DWORD PTR [esi],ecx
  42b72d:	and    al,0x44
  42b72f:	jg     0x42b6c6
  42b731:	cmp    esi,DWORD PTR [eax-0xd]
  42b734:	(bad)  
  42b735:	in     eax,dx
  42b736:	push   edx
  42b737:	cmc    
  42b738:	push   eax
  42b739:	jae    0x42b703
  42b73b:	mov    al,0x75
  42b73d:	push   ebp
  42b73e:	rol    BYTE PTR [ebp-0xc949554],0x50
  42b745:	dec    eax
  42b746:	icebp  
  42b747:	add    edi,edi
  42b749:	bound  edx,QWORD PTR [ebx]
  42b74b:	sbb    al,BYTE PTR [eax+0x6f]
  42b74e:	ret    0xfb0
  42b751:	loop   0x42b798
  42b753:	cmc    
  42b754:	dec    DWORD PTR [eax]
  42b756:	lahf   
  42b757:	pop    es
  42b758:	xor    esp,esi
  42b75a:	xabort 0x2
  42b75d:	pop    eax
  42b75e:	adc    cl,dl
  42b760:	lea    esp,[esi+0x45]
  42b763:	cmc    
  42b764:	adc    eax,0x309587
  42b769:	xchg   BYTE PTR [esi+edx*8],ah
  42b76c:	test   BYTE PTR [ecx],bl
  42b76e:	ss (bad) 
  42b770:	jle    0x42b782
  42b772:	imul   eax,DWORD PTR [eax-0x1],0xffffff9f
  42b776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b777:	xor    edi,ebx
  42b779:	jnp    0x42b71c
  42b77b:	rcl    DWORD PTR [edx+ecx*1],cl
  42b77e:	push   0x4c
  42b780:	add    BYTE PTR [eax+0x28],bl
  42b783:	sti    
  42b784:	and    eax,DWORD PTR [eax]
  42b786:	xchg   esp,eax
  42b787:	(bad)  [edi+eax*4]
  42b78a:	leave  
  42b78b:	xlat   BYTE PTR ds:[ebx]
  42b78c:	xor    dl,BYTE PTR [edi-0x31]
  42b78f:	pop    edx
  42b790:	or     al,BYTE PTR [eax]
  42b792:	cmp    DWORD PTR [ebx+edx*8-0x1bab5c8],ecx
  42b799:	je     0x42b725
  42b79b:	mov    ecx,esp
  42b79d:	out    0x53,al
  42b79f:	and    al,0x4c
  42b7a1:	adc    al,0x5d
  42b7a3:	pusha  
  42b7a4:	pop    edx
  42b7a5:	dec    esp
  42b7a6:	ds mov ch,0x10
  42b7a9:	dec    eax
  42b7aa:	sbb    ecx,DWORD PTR [eax+0xf]
  42b7ad:	jp     0x42b825
  42b7af:	mov    bh,0xde
  42b7b1:	xchg   BYTE PTR [eax-0x6b],cl
  42b7b4:	shl    DWORD PTR [ebx],cl
  42b7b6:	into   
  42b7b7:	pop    DWORD PTR [eax+0x24]
  42b7ba:	xchg   edx,eax
  42b7bb:	xchg   esp,eax
  42b7bc:	stc    
  42b7bd:	imul   edx,DWORD PTR [ebp+0x46850cdb],0xffffffef
  42b7c4:	and    al,BYTE PTR [ebx-0x53]
  42b7c7:	in     eax,dx
  42b7c8:	cmc    
  42b7c9:	ins    DWORD PTR es:[edi],dx
  42b7ca:	push   0xc086c281
  42b7cf:	outs   dx,DWORD PTR ds:[esi]
  42b7d0:	jge    0x42b849
  42b7d2:	xor    BYTE PTR [eax+0x3],0x50
  42b7d6:	dec    ecx
  42b7d7:	pop    eax
  42b7d8:	sub    cl,BYTE PTR [ecx+eax*2]
  42b7db:	outs   dx,DWORD PTR ds:[esi]
  42b7dc:	push   0x899bc60f
  42b7e1:	mov    edi,0x8ef942bb
  42b7e6:	(bad)  
  42b7e7:	ds fwait
  42b7e9:	inc    edx
  42b7ea:	add    BYTE PTR [eax],bh
  42b7ec:	mov    ss,WORD PTR [edi-0x79e7bae2]
  42b7f2:	out    dx,al
  42b7f3:	(bad)  
  42b7f5:	loope  0x42b831
  42b7f7:	enter  0xe346,0x30
  42b7fb:	or     DWORD PTR [edi+0x69a93213],ebx
  42b801:	adc    ebp,DWORD PTR [esi+eax*1+0x43]
  42b805:	jecxz  0x42b80a
  42b807:	pusha  
  42b808:	inc    eax
  42b809:	mov    ah,0x6d
  42b80b:	xchg   DWORD PTR [edx],ebx
  42b80d:	jecxz  0x42b812
  42b80f:	xchg   BYTE PTR [edx],al
  42b811:	inc    eax
  42b812:	push   eax
  42b813:	jle    0x42b7a2
  42b815:	int    0x13
  42b817:	js     0x42b81b
  42b819:	jecxz  0x42b7a9
  42b81b:	mov    cl,0xc1
  42b81d:	cmp    dl,bl
  42b81f:	xor    eax,0x8238fa54
  42b824:	push   ss
  42b825:	or     al,0x1d
  42b827:	dec    ebx
  42b828:	xor    dl,BYTE PTR [edi-0x6240af0f]
  42b82e:	repz dec ecx
  42b830:	lea    edx,[ebp-0x8e8730d]
  42b836:	xor    DWORD PTR [ebp-0x3e0a50c9],ecx
  42b83c:	inc    edx
  42b83d:	pop    esi
  42b83e:	ret    
  42b83f:	cmc    
  42b840:	inc    eax
  42b841:	xor    al,0x4
  42b843:	aam    0x8d
  42b845:	in     eax,dx
  42b846:	mov    ds:0x83e3027b,eax
  42b84b:	pop    eax
  42b84c:	inc    ebx
  42b84d:	dec    edi
  42b84e:	or     al,0x0
  42b850:	pop    ebp
  42b851:	pop    ss
  42b852:	jmp    0x42b83f
  42b854:	jo     0x42b872
  42b856:	leave  
  42b857:	fldcw  WORD PTR [edi-0x1cc25c48]
  42b85d:	or     BYTE PTR [ecx],0xe5
  42b860:	test   edi,esi
  42b862:	test   BYTE PTR [ebp-0x25a70c8b],bh
  42b868:	dec    esi
  42b869:	lock pop eax
  42b86b:	adc    ecx,DWORD PTR [ebx-0x52179c0f]
  42b871:	inc    edx
  42b872:	or     ch,cl
  42b874:	add    eax,0x2ef17688
  42b879:	ss cmp bl,bl
  42b87c:	inc    ebp
  42b87d:	inc    edx
  42b87e:	sub    DWORD PTR [edi],0xffffff8a
  42b881:	or     eax,0x12566ef2
  42b886:	jg     0x42b83c
  42b888:	int    0xf1
  42b88a:	pop    ecx
  42b88b:	pop    esi
  42b88c:	icebp  
  42b88d:	fs sbb al,0xa9
  42b890:	test   edi,eax
  42b892:	leave  
  42b893:	aad    0x8d
  42b895:	dec    ebx
  42b896:	outs   dx,DWORD PTR ds:[esi]
  42b897:	inc    ebp
  42b898:	cmp    ebp,edi
  42b89a:	test   BYTE PTR [ebp+ebx*8-0x6512b847],ah
  42b8a1:	xor    DWORD PTR [esi-0x1b],0xdae54afc
  42b8a8:	sbb    eax,DWORD PTR [esi+0x62]
  42b8ab:	jmp    0xb94cfb25
  42b8b0:	push   esi
  42b8b1:	mov    DWORD PTR [esi],edx
  42b8b3:	add    eax,0xa4c9500
  42b8b8:	jo     0x42b83e
  42b8ba:	push   ebp
  42b8bb:	leave  
  42b8bc:	jne    0x42b853
  42b8be:	out    dx,eax
  42b8bf:	jle    0x42b865
  42b8c1:	(bad)  
  42b8c2:	icebp  
  42b8c3:	lock ja 0x42b937
  42b8c6:	cld    
  42b8c7:	lock pop edi
  42b8c9:	jp     0x42b852
  42b8cb:	push   ss
  42b8cc:	adc    eax,0x6c0a4c58
  42b8d1:	inc    ebp
  42b8d2:	adc    dh,bh
  42b8d4:	popa   
  42b8d5:	nop
  42b8d6:	cmp    dh,BYTE PTR ds:0x77429900
  42b8dc:	add    al,0xbf
  42b8de:	inc    eax
  42b8df:	jmp    0x8a897ffd
  42b8e4:	add    BYTE PTR [edi],bl
  42b8e6:	push   ebx
  42b8e7:	cmc    
  42b8e8:	ss loopne 0x42b887
  42b8eb:	rcl    BYTE PTR [ecx],1
  42b8ed:	outs   dx,DWORD PTR ds:[esi]
  42b8ee:	inc    esi
  42b8ef:	cmc    
  42b8f0:	jbe    0x42b919
  42b8f2:	imul   edx,DWORD PTR ds:0xa000da0,0x32
  42b8f9:	fisttp WORD PTR [edx-0x3d]
  42b8fc:	ret    0x3feb
  42b8ff:	pop    esp
  42b900:	mov    edi,DWORD PTR [edi-0x42]
  42b903:	or     al,BYTE PTR [ebp+0x6803fc1f]
  42b909:	fistp  QWORD PTR [edi+0x3fb5fff0]
  42b90f:	pop    edx
  42b910:	(bad)  
  42b911:	ficomp DWORD PTR [edi-0x4120bfe7]
  42b917:	jp     0x42b921
  42b919:	add    BYTE PTR [edx+0x71],bl
  42b91c:	jl     0x42b925
  42b91e:	sbb    DWORD PTR [ebx+0x15],ebp
  42b921:	mov    al,ds:0x5e09ffdd
  42b926:	pop    esp
  42b927:	pop    esp
  42b928:	mov    esp,ebp
  42b92a:	push   ds
  42b92b:	mov    ds:0x3faf0400,eax
  42b930:	inc    ecx
  42b931:	push   esi
  42b932:	fadd   st,st(4)
  42b934:	test   eax,esi
  42b936:	je     0x42b9a2
  42b938:	repz push eax
  42b93a:	div    DWORD PTR [ecx-0x10]
  42b93d:	jmp    FWORD PTR [edi+0x6a]
  42b940:	adc    eax,0x9ff5c18
  42b945:	dec    eax
  42b946:	and    bh,BYTE PTR [eax+esi*8-0x1]
  42b94a:	pop    edi
  42b94b:	cld    
  42b94c:	pop    ebp
  42b94d:	xor    edi,DWORD PTR [ecx]
  42b94f:	jae    0x42b9c6
  42b951:	or     BYTE PTR [esi+0x51a8cc81],al
  42b957:	jl     0x42b98e
  42b959:	push   0x4616e6
  42b95e:	scas   al,BYTE PTR es:[edi]
  42b95f:	and    eax,0x10863f83
  42b964:	or     al,BYTE PTR [ecx]
  42b966:	xchg   BYTE PTR [ecx-0x19d1437f],bl
  42b96c:	fdivr  st,st(2)
  42b96e:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  42b970:	dec    ecx
  42b971:	cli    
  42b972:	sbb    DWORD PTR [eax],ebx
  42b974:	retf   0x50f
  42b977:	mov    cl,0xd8
  42b979:	jae    0x42b9c4
  42b97b:	adc    BYTE PTR [ecx+0x2613004f],dh
  42b981:	(bad)  
  42b982:	idiv   cl
  42b984:	adc    esi,DWORD PTR [esi]
  42b986:	sti    
  42b987:	jnp    0x42b9f6
  42b989:	in     al,0x7d
  42b98b:	out    dx,eax
  42b98c:	and    ebx,ecx
  42b98e:	test   dh,al
  42b990:	je     0x42b9be
  42b992:	data16 xchg BYTE PTR [ecx-0x672e0074],al
  42b999:	bound  eax,QWORD PTR [ecx]
  42b99b:	pop    esp
  42b99c:	cdq    
  42b99d:	bound  eax,QWORD PTR [ecx]
  42b99f:	cs cdq 
  42b9a1:	or     al,0x0
  42b9a3:	(bad)  
  42b9a4:	push   ebx
  42b9a5:	pop    ebx
  42b9a6:	or     al,0xb1
  42b9a8:	jne    0x42b9c6
  42b9aa:	push   cs
  42b9ab:	inc    esi
  42b9ac:	cdq    
  42b9ad:	mov    esi,edi
  42b9af:	mov    eax,ds:0x741fab5
  42b9b4:	xor    edi,DWORD PTR [esi+0x5a9891ff]
  42b9ba:	xchg   edx,eax
  42b9bb:	push   esp
  42b9bc:	pop    ecx
  42b9bd:	cmp    DWORD PTR [edx-0x23],ebx
  42b9c0:	push   edx
  42b9c1:	int3   
  42b9c2:	pop    es
  42b9c3:	xchg   BYTE PTR [ebx+0x6e2614d7],ch
  42b9c9:	dec    esp
  42b9ca:	add    BYTE PTR [esi],dh
  42b9cc:	inc    ebx
  42b9cd:	loop   0x42b9b9
  42b9cf:	outs   dx,DWORD PTR ds:[esi]
  42b9d0:	lock jnp 0x42b9ba
  42b9d3:	push   es
  42b9d4:	xchg   edi,eax
  42b9d5:	bnd call DWORD PTR [ecx-0x76]
  42b9d9:	xor    ebp,DWORD PTR [esi]
  42b9db:	mov    ch,0xb7
  42b9dd:	pop    ebp
  42b9de:	sar    DWORD PTR [eax],cl
  42b9e0:	mov    ch,BYTE PTR [edi-0x6f51ffcd]
  42b9e6:	loop   0x42b9eb
  42b9e8:	xchg   BYTE PTR [ecx+0x278fbd5],cl
  42b9ee:	jecxz  0x42ba3b
  42b9f0:	arpl   WORD PTR [edi+0x118603e2],cx
  42b9f6:	adc    edx,DWORD PTR cs:[ebx+ebx*4]
  42b9fa:	ret    0xcac
  42b9fd:	mov    dl,BYTE PTR [edx]
  42b9ff:	ins    BYTE PTR es:[edi],dx
  42ba00:	data16 mov bh,0x22
  42ba03:	add    al,0x6e
  42ba05:	stos   BYTE PTR es:[edi],al
  42ba06:	gs inc ebx
  42ba08:	xchg   ch,cl
  42ba0a:	out    0x4,al
  42ba0c:	xchg   BYTE PTR [edx+0x76],al
  42ba0f:	cwde   
  42ba10:	fld    DWORD PTR [edi+0x1ee1d64f]
  42ba16:	lahf   
  42ba17:	aad    0xcc
  42ba19:	lds    esp,FWORD PTR [esi]
  42ba1b:	pop    es
  42ba1c:	dec    ecx
  42ba1d:	mov    al,BYTE PTR [edi+0x4f]
  42ba20:	imul   edi,DWORD PTR [ebp-0x3ff4ccd9],0x89acda32
  42ba2a:	xchg   edx,eax
  42ba2b:	(bad)  
  42ba2c:	xor    bh,BYTE PTR [edx]
  42ba2e:	sbb    esi,DWORD PTR [esi-0x7ff07667]
  42ba34:	(bad)  [esi]
  42ba36:	call   0x95cc40a4
  42ba3b:	or     ecx,DWORD PTR [ebp-0x3e0bd8d1]
  42ba41:	inc    edx
  42ba42:	retw   
  42ba44:	repnz cmp DWORD PTR [edx],ecx
  42ba47:	scas   eax,DWORD PTR es:[edi]
  42ba48:	add    BYTE PTR [ebx+ecx*4],al
  42ba4b:	gs jnp 0x42ba6c
  42ba4e:	push   edi
  42ba4f:	retf   0x9846
  42ba52:	icebp  
  42ba53:	ret    0x86ab
  42ba56:	inc    edx
  42ba57:	mov    edx,0x868e5ee8
  42ba5c:	test   eax,0x6a682db6
  42ba61:	mov    ds:0x82e0775c,al
  42ba66:	aad    0x41
  42ba68:	jmp    0x42ba3d
  42ba6a:	mov    edi,0x97e35c2
  42ba6f:	repz xlat BYTE PTR ds:[ebx]
  42ba71:	rol    BYTE PTR [ecx+0x68],1
  42ba74:	push   0xffffffba
  42ba76:	or     bl,BYTE PTR ds:[esi+eax*4]
  42ba7a:	pop    ecx
  42ba7b:	retf   0x4729
  42ba7e:	pop    eax
  42ba7f:	retf   0xb7aa
  42ba82:	out    dx,eax
  42ba83:	test   BYTE PTR ds:0x1e5836a6,cl
  42ba89:	mov    eax,ds:0xd96ed558
  42ba8e:	and    BYTE PTR ds:0xf9c185a9,bl
  42ba94:	fs enter 0xc0d,0x62
  42ba99:	sar    DWORD PTR [ebx],0xb9
  42ba9c:	out    0x6,eax
  42ba9e:	xchg   ecx,eax
  42ba9f:	dec    ebp
  42baa0:	mov    ebp,0xef2098f
  42baa5:	push   esi
  42baa6:	aas    
  42baa7:	push   0x1e0dca6c
  42baac:	bound  eax,QWORD PTR [eax]
  42baae:	retf   0xca57
  42bab1:	mov    esp,0x1e07bb43
  42bab6:	test   eax,0x85a91c50
  42babb:	or     edx,esi
  42babd:	push   cs
  42babe:	cmp    DWORD PTR [edi],esi
  42bac0:	add    BYTE PTR fs:[edi+0x59],ch
  42bac4:	cmc    
  42bac5:	adc    eax,0x30939b
  42baca:	loop   0x42bb4a
  42bacc:	out    0x2,eax
  42bace:	(bad)  
  42bacf:	mov    ?,WORD PTR [edi+ecx*1-0x2f]
  42bad3:	pop    es
  42bad4:	hlt    
  42bad5:	je     0x42bb2e
  42bad7:	out    0x82,al
  42bad9:	ds fadd st(5),st
  42badc:	out    dx,al
  42badd:	jmp    0x4f69:0x5f09b2fa
  42bae4:	mov    bl,al
  42bae6:	test   BYTE PTR fs:[eax+eax*1],cl
  42baea:	xchg   edx,eax
  42baeb:	mov    ecx,0x6c4383e4
  42baf0:	mov    esp,ebp
  42baf2:	mov    DWORD PTR [edx+0xa],0x62555100
  42baf9:	sub    BYTE PTR [edx-0x974f5fd],0x56
  42bb00:	jg     0x42bb46
  42bb02:	rcl    DWORD PTR [ebx+0x6bebe840],cl
  42bb08:	repz jmp DWORD PTR [edx-0x7d]
  42bb0c:	jl     0x42bb88
  42bb0e:	dec    edx
  42bb0f:	pop    es
  42bb10:	sub    eax,0x43ed0010
  42bb15:	or     dl,BYTE PTR [eax+0x6a]
  42bb18:	inc    edi
  42bb19:	es or  al,0xf
  42bb1c:	outs   dx,DWORD PTR ds:[esi]
  42bb1d:	adc    eax,0xa03ce88
  42bb22:	mov    edi,DWORD PTR [edi-0x3e]
  42bb25:	repnz push ebx
  42bb28:	and    edi,DWORD PTR [edi-0x7c]
  42bb2b:	sub    DWORD PTR [edx],0xfffffff0
  42bb2e:	call   FWORD PTR [edi+0x68ff219b]
  42bb34:	outs   dx,BYTE PTR ds:[esi]
  42bb35:	mov    eax,es
  42bb37:	repnz xor eax,0x7586847f
  42bb3d:	sbb    dh,bh
  42bb3f:	mov    DWORD PTR [ecx-0x2aecacc4],ebx
  42bb45:	adc    BYTE PTR [eax],dl
  42bb47:	(bad)  
  42bb48:	xor    edx,eax
  42bb4a:	bnd jno 0x42badd
  42bb4d:	outs   dx,BYTE PTR ds:[esi]
  42bb4e:	mov    edi,0x83be78f2
  42bb53:	stos   BYTE PTR es:[edi],al
  42bb54:	mov    DWORD PTR [esi],eax
  42bb56:	add    BYTE PTR [esi+0x3075889],al
  42bb5c:	pop    ebp
  42bb5d:	and    cl,BYTE PTR [eax]
  42bb5f:	pop    esi
  42bb60:	and    ebp,ebx
  42bb62:	cli    
  42bb63:	inc    ecx
  42bb64:	je     0x42bb55
  42bb66:	mov    edx,es
  42bb68:	cmp    eax,0x721e4fee
  42bb6d:	dec    edi
  42bb6e:	cli    
  42bb6f:	sub    esi,esp
  42bb71:	and    DWORD PTR [ebx],0xc9b76
  42bb77:	add    BYTE PTR [esi-0x9eb22b1],dh
  42bb7d:	mov    DWORD PTR [eax+eax*1+0x3],ecx
  42bb81:	fst    DWORD PTR [edx-0x5d]
  42bb84:	pop    eax
  42bb85:	shl    dl,0x8b
  42bb88:	xchg   edi,eax
  42bb89:	pop    ecx
  42bb8a:	push   es
  42bb8b:	push   0xc9906
  42bb90:	push   ecx
  42bb91:	sbb    bl,dh
  42bb93:	pcmpeqb mm3,mm1
  42bb96:	or     al,0x53
  42bb98:	(bad)  [ebp-0x66b9ef2c]
  42bb9e:	cmp    DWORD PTR [edi-0x408e97d7],0x5ce31460
  42bba8:	lds    edx,FWORD PTR [ebx]
  42bbaa:	inc    edx
  42bbab:	and    al,0x7e
  42bbad:	mov    al,ds:0x656243ab
  42bbb2:	cmp    al,0xe8
  42bbb4:	rol    DWORD PTR [ecx+0x29],1
  42bbb7:	rcr    DWORD PTR [edx+eax*4+0x3a6a580f],1
  42bbbe:	or     ebp,ecx
  42bbc0:	pop    DWORD PTR [edi+edi*8-0x62b9143a]
  42bbc7:	sti    
  42bbc8:	jl     0x42bc1a
  42bbca:	add    ebx,DWORD PTR [edi-0x707bd50]
  42bbd0:	test   DWORD PTR [ecx],esi
  42bbd2:	mov    ds:0x4e830b03,eax
  42bbd7:	stc    
  42bbd8:	inc    esp
  42bbd9:	add    eax,DWORD PTR [ebx]
  42bbdb:	pusha  
  42bbdc:	add    BYTE PTR [esi],ah
  42bbde:	add    ebx,esp
  42bbe0:	retf   0x5e89
  42bbe3:	aas    
  42bbe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bbe5:	add    DWORD PTR [edx-0x60],0x43
  42bbe9:	outs   dx,BYTE PTR ds:[esi]
  42bbea:	cmp    ebx,esp
  42bbec:	add    eax,DWORD PTR [esi+0x3096b81]
  42bbf2:	xor    DWORD PTR [esi],0x29
  42bbf5:	or     ebp,esi
  42bbf7:	fidivr WORD PTR [edx+edx*4]
  42bbfa:	cmp    DWORD PTR [edx],edi
  42bbfc:	pop    ecx
  42bbfd:	jl     0x42bbf1
  42bbff:	mov    ch,BYTE PTR [esi-0x78]
  42bc02:	inc    edx
  42bc03:	jecxz  0x42bbe3
  42bc05:	xchg   edx,esi
  42bc07:	call   0xb7d2:0xe3426686
  42bc0e:	call   0x2963:0x85ead150
  42bc15:	xchg   cl,al
  42bc17:	rol    BYTE PTR [edi],0x86
  42bc1a:	xor    DWORD PTR [ebp+0x46c1dd7e],0x571f48ff
  42bc24:	add    eax,DWORD PTR [ecx+0x1f]
  42bc27:	dec    ebx
  42bc28:	add    edx,DWORD PTR [ebp+ebp*8+0x7b]
  42bc2c:	retf   
  42bc2d:	test   eax,0xd43609b1
  42bc32:	mov    BYTE PTR [ecx+edi*1-0x4c8a6bf2],al
  42bc39:	cmp    ecx,DWORD PTR [edx+0x62]
  42bc3c:	push   ecx
  42bc3d:	push   es
  42bc3e:	inc    esi
  42bc3f:	or     al,BYTE PTR [ebx-0x1e0c4e00]
  42bc45:	xor    ecx,esp
  42bc47:	inc    edx
  42bc48:	or     ch,BYTE PTR [ebp+eax*2+0xe]
  42bc4c:	cmp    esi,DWORD PTR [edx-0x42]
  42bc4f:	cmp    al,BYTE PTR [ebx-0x2011711]
  42bc55:	pop    edi
  42bc56:	iret   
  42bc57:	test   DWORD PTR ds:[edx+edx*2],ebp
  42bc5b:	mov    edx,0x40d2ed47
  42bc60:	fs in  eax,dx
  42bc62:	(bad)  
  42bc63:	mov    ebx,0xfe4fd576
  42bc68:	icebp  
  42bc69:	jmp    0x42bbf0
  42bc6b:	inc    edx
  42bc6c:	or     dh,BYTE PTR [eax-0x44]
  42bc6f:	xor    ah,dl
  42bc71:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  42bc73:	inc    edx
  42bc74:	or     ah,BYTE PTR [edx-0x3c]
  42bc77:	cs xor esi,0xffffff9a
  42bc7b:	(bad)  
  42bc7c:	in     al,0xf0
  42bc7e:	dec    edi
  42bc7f:	call   0x8d63:0x88399728
  42bc86:	mov    bh,0xb7
  42bc88:	jbe    0x42bd07
  42bc8a:	(bad)  
  42bc8c:	lock jle 0x42bc66
  42bc8f:	mov    ebx,0x7bb416c8
  42bc94:	retf   
  42bc95:	fld    QWORD PTR [ebp+0x35584ef]
  42bc9b:	cdq    
  42bc9c:	adc    DWORD PTR [edx-0x45a89286],edi
  42bca2:	xchg   edx,eax
  42bca3:	cmc    
  42bca4:	test   BYTE PTR [esi],ah
  42bca6:	add    BYTE PTR ds:0x360029e8,bh
  42bcac:	push   ebx
  42bcad:	mov    DWORD PTR es:[eax],edx
  42bcb0:	sub    edx,esp
  42bcb2:	int3   
  42bcb3:	mov    ecx,0x6f84f372
  42bcb8:	inc    ebx
  42bcb9:	xchg   BYTE PTR [eax+0x570a40af],bh
  42bcbf:	and    ch,ch
  42bcc1:	loope  0x42bcab
  42bcc3:	jecxz  0x42bcdf
  42bcc5:	hlt    
  42bcc6:	(bad)  
  42bcc7:	jmp    0x42bd47
  42bcc9:	add    eax,DWORD PTR [eax+ecx*8-0x9fff5c2]
  42bcd0:	push   ebx
  42bcd1:	cli    
  42bcd2:	mov    DWORD PTR [edx],edx
  42bcd4:	ins    BYTE PTR es:[edi],dx
  42bcd5:	out    0x2,eax
  42bcd7:	sbb    al,0xd7
  42bcd9:	add    ax,0xfcd2
  42bcdd:	icebp  
  42bcde:	push   eax
  42bcdf:	cwde   
  42bce0:	data16 mov ah,0x66
  42bce3:	xor    DWORD PTR [ebx+0x37],esi
  42bce6:	ret    
  42bce7:	pusha  
  42bce8:	mov    esp,0x402f0085
  42bced:	jno    0x42bce7
  42bcef:	sub    ch,ch
  42bcf1:	dec    edi
  42bcf2:	mov    ebx,DWORD PTR [edx+0x76]
  42bcf5:	pop    ds
  42bcf6:	inc    edi
  42bcf7:	aaa    
  42bcf8:	push   es
  42bcf9:	inc    esp
  42bcfa:	sbb    BYTE PTR [edi],bh
  42bcfc:	inc    ebp
  42bcfd:	out    dx,al
  42bcfe:	xor    edi,ecx
  42bd00:	push   es
  42bd01:	fld    DWORD PTR [ebx]
  42bd03:	push   edx
  42bd04:	outs   dx,BYTE PTR ds:[esi]
  42bd05:	add    DWORD PTR [ebp+0x17],0xf4758f
  42bd0c:	ins    BYTE PTR es:[edi],dx
  42bd0d:	jle    0x42bd14
  42bd0f:	sbb    DWORD PTR [ecx],0x40
  42bd12:	cmp    DWORD PTR [ebp+0x3],esi
  42bd15:	jmp    0x42bd44
  42bd17:	jb     0x42bd03
  42bd19:	ss dec edi
  42bd1b:	call   0x71e9d8
  42bd20:	(bad)  
  42bd22:	lock jbe 0x42bcab
  42bd25:	cmp    edx,DWORD PTR [eax+0x0]
  42bd28:	pop    eax
  42bd29:	enter  0xc26d,0xae
  42bd2d:	test   al,0x62
  42bd2f:	cli    
  42bd30:	mov    cl,0x1d
  42bd32:	int    0x73
  42bd34:	inc    ebp
  42bd35:	sbb    BYTE PTR [edx+0x20],al
  42bd38:	xchg   DWORD PTR [edx],esp
  42bd3a:	and    al,dh
  42bd3c:	xcrypt-ctr 
  42bd3f:	jle    0x42bd7a
  42bd41:	jge    0x42bd4f
  42bd43:	repnz inc ebx
  42bd45:	sub    eax,0x1816750c
  42bd4a:	inc    eax
  42bd4b:	clc    
  42bd4c:	xchg   BYTE PTR [ebx],al
  42bd4e:	outs   dx,DWORD PTR ds:[esi]
  42bd4f:	cli    
  42bd50:	leave  
  42bd51:	jno    0x42bd20
  42bd53:	test   BYTE PTR [ebp-0x2404c9d0],dh
  42bd59:	lea    esi,[edx+eax*8+0x59]
  42bd5d:	out    0xd5,al
  42bd5f:	out    0xa6,eax
  42bd61:	sti    
  42bd62:	mov    edi,0x51d902fa
  42bd67:	adc    BYTE PTR [ecx+0x2c],al
  42bd6a:	rcl    DWORD PTR [esi+ecx*8],0x67
  42bd6e:	dec    esp
  42bd6f:	add    BYTE PTR [eax],al
  42bd71:	or     ebx,ecx
  42bd73:	push   ecx
  42bd74:	add    al,0xf6
  42bd76:	cdq    
  42bd77:	sar    ebp,cl
  42bd79:	push   edi
  42bd7a:	fstp   DWORD PTR [edi]
  42bd7c:	push   edi
  42bd7d:	dec    edi
  42bd7e:	fdiv   DWORD PTR [esi]
  42bd80:	push   edx
  42bd81:	mov    ecx,0x81e8162f
  42bd86:	scas   al,BYTE PTR es:[edi]
  42bd87:	(bad)  
  42bd89:	or     ebx,ecx
  42bd8b:	push   ecx
  42bd8c:	sbb    cl,BYTE PTR ds:0x514224d
  42bd92:	xchg   ecx,eax
  42bd93:	mov    edi,0xbfa13e7e
  42bd98:	jle    0x42bde8
  42bd9a:	gs mov edi,0xf342667e
  42bda0:	add    edx,DWORD PTR [ecx+0x22]
  42bda3:	test   DWORD PTR [ebx],0x7afaf9ff
  42bda9:	mov    cl,0x96
  42bdab:	in     al,0x12
  42bdad:	mov    ah,0xbc
  42bdaf:	xor    BYTE PTR [ecx-0x76],bl
  42bdb2:	dec    edi
  42bdb3:	and    ebx,ebx
  42bdb5:	xchg   ebx,eax
  42bdb6:	mov    bh,0x9e
  42bdb8:	daa    
  42bdb9:	jbe    0x42bd72
  42bdbb:	and    BYTE PTR [ebp-0x79],bh
  42bdbe:	call   0xc466:0x828cce4c
  42bdc5:	adc    bh,BYTE PTR [ebx]
  42bdc7:	or     esi,DWORD PTR [esi]
  42bdc9:	fadd   DWORD PTR [ecx-0x319a2501]
  42bdcf:	and    BYTE PTR [edi],ch
  42bdd1:	int3   
  42bdd2:	sbb    esp,DWORD PTR ds:0x176900fc
  42bdd8:	ins    BYTE PTR es:[edi],dx
  42bdd9:	loopne 0x42bdbb
  42bddb:	outs   dx,BYTE PTR ds:[esi]
  42bddc:	fidiv  DWORD PTR [edx]
  42bdde:	mov    ah,0xcf
  42bde0:	sbb    eax,0x5581b600
  42bde5:	add    BYTE PTR [ecx-0x4530cc63],bl
  42bdeb:	dec    edx
  42bdec:	retf   
  42bded:	cmp    DWORD PTR [esi+0x42],edi
  42bdf0:	jecxz  0x42be6e
  42bdf2:	retf   0xc4a
  42bdf5:	ret    
  42bdf6:	jl     0x42bdbe
  42bdf8:	jge    0x42bdfd
  42bdfa:	xchg   BYTE PTR [edx+0x4d],al
  42bdfd:	add    cl,cl
  42bdff:	adc    eax,0xc329c67c
  42be04:	add    eax,0xa2c70cce
  42be09:	inc    BYTE PTR ds:0x8603e2cd
  42be0f:	sbb    DWORD PTR [esi+0x58],esi
  42be12:	fisubr WORD PTR [edx-0x43]
  42be15:	push   0x6d0981ec
  42be1a:	(bad)
  42be1d:	bound  eax,QWORD PTR [eax+0x5a]
  42be20:	cmp    eax,0x36c8cdac
  42be25:	sbb    eax,0x600a41d4
  42be2a:	dec    esi
  42be2b:	jbe    0x42bdb0
  42be2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42be2e:	lods   eax,DWORD PTR ds:[esi]
  42be2f:	adc    BYTE PTR [edx+0x46cebdac],al
  42be35:	cmp    eax,0x6406e875
  42be3a:	add    BYTE PTR [esi+0x76],cl
  42be3d:	pop    ecx
  42be3e:	cs jo  0x42bebe
  42be41:	xlat   BYTE PTR ds:[ebx]
  42be42:	ins    BYTE PTR es:[edi],dx
  42be43:	(bad)
  42be46:	push   0x36
  42be48:	jle    0x42be50
  42be4a:	pushf  
  42be4b:	xchg   edx,eax
  42be4c:	adc    DWORD PTR [edi-0x5c],edi
  42be4f:	dec    ecx
  42be50:	adc    ecx,esi
  42be52:	jl     0x42bec1
  42be54:	jl     0x42becc
  42be56:	in     eax,dx
  42be57:	cmp    BYTE PTR [ecx+esi*8],dh
  42be5a:	pop    ds
  42be5b:	push   cs
  42be5c:	shl    DWORD PTR [ebp-0x39],0xdc
  42be60:	push   es
  42be61:	add    ah,BYTE PTR [eax]
  42be63:	leave  
  42be64:	jle    0x42bedc
  42be66:	inc    DWORD PTR [esi]
  42be68:	add    al,0x2a
  42be6a:	call   0x2e5df2c1
  42be6f:	outs   dx,BYTE PTR ds:[esi]
  42be70:	jge    0x42beba
  42be72:	adc    DWORD PTR [ebx+0x56],eax
  42be75:	push   ds
  42be76:	fcmovnb st,st(5)
  42be78:	inc    edx
  42be79:	icebp  
  42be7a:	cmp    al,0x86
  42be7c:	push   0x3c
  42be7e:	lods   eax,DWORD PTR ds:[esi]
  42be7f:	dec    ecx
  42be80:	jl     0x42be3b
  42be82:	call   0x9ea01fb5
  42be87:	mov    cl,0x6e
  42be89:	test   BYTE PTR [esi-0x7e1e0a2d],ch
  42be8f:	shl    ah,1
  42be91:	out    dx,eax
  42be92:	add    BYTE PTR [eax],cl
  42be94:	(bad)  
  42be95:	cmp    edi,edi
  42be97:	sar    BYTE PTR [eax+eax*1],cl
  42be9a:	inc    eax
  42be9b:	out    dx,eax
  42be9c:	lea    esi,[ebp+0xc]
  42be9f:	add    BYTE PTR [edi],al
  42bea1:	jne    0x42be97
  42bea3:	std    
  42bea4:	push   0xc45eca54
  42bea9:	mov    ebx,0x37af08ae
  42beae:	mov    esp,ebp
  42beb0:	sub    al,0x62
  42beb2:	add    BYTE PTR [ebx+0x34],dl
  42beb5:	xor    BYTE PTR [esi],dl
  42beb7:	push   edi
  42beb8:	xor    al,0x10
  42beba:	sbb    ch,bl
  42bebc:	xchg   ebp,eax
  42bebd:	sbb    al,BYTE PTR [edi]
  42bebf:	(bad)  
  42bec0:	loop   0x42be4e
  42bec2:	inc    eax
  42bec3:	push   esi
  42bec4:	ja     0x42bf2b
  42bec6:	ins    BYTE PTR es:[edi],dx
  42bec7:	(bad)  
  42bec8:	push   0x2205f8c3
  42becd:	dec    esp
  42bece:	mov    DWORD PTR [ebp-0x69],eax
  42bed1:	push   ecx
  42bed2:	dec    esp
  42bed3:	sbb    ch,dh
  42bed5:	aas    
  42bed6:	out    dx,al
  42bed7:	xor    bl,BYTE PTR [ecx]
  42bed9:	ins    BYTE PTR es:[edi],dx
  42beda:	jge    0x42bf2c
  42bedc:	jb     0x42bedb
  42bede:	ins    DWORD PTR es:[edi],dx
  42bedf:	lock ins BYTE PTR es:[edi],dx
  42bee1:	mov    al,BYTE PTR [ecx-0x403ccca3]
  42bee7:	add    dh,dl
  42bee9:	or     dl,dh
  42beeb:	mov    BYTE PTR [edx-0x6e],ch
  42beee:	cli    
  42beef:	shr    DWORD PTR [esi],0x19
  42bef2:	push   es
  42bef3:	test   edi,ebx
  42bef5:	sbb    BYTE PTR [edi],dl
  42bef7:	push   0x1f
  42bef9:	xor    ebx,DWORD PTR [ebp-0x75]
  42befc:	icebp  
  42befd:	fwait
  42befe:	and    DWORD PTR [ecx+ebp*8-0x72],0x7200c08c
  42bf06:	aad    0x1e
  42bf08:	ror    BYTE PTR [eax+0x29],0xc3
  42bf0c:	ret    
  42bf0d:	xchg   ah,ah
  42bf0f:	inc    edi
  42bf10:	lock movaps xmm5,xmm6
  42bf14:	xchg   BYTE PTR [ebx-0x3],cl
  42bf17:	jae    0x42bf5a
  42bf19:	jp     0x42bf0d
  42bf1b:	adc    BYTE PTR ds:[edi],cl
  42bf1e:	pop    eax
  42bf1f:	repnz scas eax,DWORD PTR es:[edi]
  42bf21:	xchg   esp,eax
  42bf23:	out    0x50,al
  42bf25:	std    
  42bf26:	mov    al,0xf4
  42bf28:	xchg   BYTE PTR [ecx],bh
  42bf2a:	ins    DWORD PTR es:[edi],dx
  42bf2b:	jno    0x42befc
  42bf2d:	cmp    bh,BYTE PTR gs:[edx]
  42bf30:	push   edx
  42bf31:	add    eax,0x1c73be14
  42bf36:	in     al,dx
  42bf37:	int3   
  42bf38:	add    al,0x1c
  42bf3a:	imul   ecx,DWORD PTR [ecx+0x3cda86d0],0x4701c187
  42bf44:	fs nop
  42bf46:	sub    BYTE PTR [ecx+0x71b612bf],cl
  42bf4c:	jb     0x42bee4
  42bf4e:	test   BYTE PTR [ebp+0x8],dl
  42bf51:	add    eax,0x5e52067f
  42bf56:	xchg   ecx,eax
  42bf58:	cld    
  42bf59:	imul   esi,esp,0xfd3d84a4
  42bf5f:	dec    esp
  42bf60:	test   DWORD PTR [eax-0xe],edx
  42bf63:	out    dx,eax
  42bf64:	gs mov ecx,0x23fa68
  42bf6a:	je     0x42bf95
  42bf6c:	push   es
  42bf6d:	jg     0x42bfbd
  42bf6f:	cwde   
  42bf70:	rol    BYTE PTR [edi],1
  42bf72:	sar    BYTE PTR [edi*1-0x3bf28a18],1
  42bf79:	cli    
  42bf7a:	ins    DWORD PTR es:[edi],dx
  42bf7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bf7c:	pop    edx
  42bf7d:	sbb    eax,0x73c36aac
  42bf82:	bound  edx,QWORD PTR [ecx+0x41fdc16f]
  42bf88:	mov    esp,0xe33a1ddc
  42bf8d:	add    ecx,DWORD PTR [ecx]
  42bf8f:	push   cs
  42bf90:	mov    edi,0x66410ef3
  42bf95:	les    esi,FWORD PTR [ebp+0x46]
  42bf98:	xor    eax,DWORD PTR ds:0xdc1449e1
  42bf9e:	jns    0x42c01b
  42bfa0:	jne    0x42bf6d
  42bfa2:	stos   DWORD PTR es:[edi],eax
  42bfa3:	add    BYTE PTR [eax],0x2f
  42bfa6:	das    
  42bfa7:	test   dl,bh
  42bfa9:	add    esi,DWORD PTR [ebx]
  42bfab:	retf   
  42bfac:	ds jg  0x42bff9
  42bfaf:	dec    edx
  42bfb0:	fmul   DWORD PTR fs:[ecx-0x7dd693ed]
  42bfb7:	and    esp,DWORD PTR [edx+esi*1]
  42bfba:	sub    DWORD PTR [edx+0x2f],edi
  42bfbd:	sti    
  42bfbe:	add    eax,0x8603e2c9
  42bfc3:	pop    ss
  42bfc4:	dec    esi
  42bfc5:	push   ecx
  42bfc6:	xchg   esi,eax
  42bfc7:	imul   ebp,DWORD PTR [esi+0x667e8c66],0xfef500c4
  42bfd1:	fld    TBYTE PTR [eax]
  42bfd3:	jb     0x42bfcb
  42bfd5:	xchg   edi,eax
  42bfd6:	push   ebp
  42bfd7:	jle    0x42bfa2
  42bfd9:	popf   
  42bfda:	sti    
  42bfdb:	mov    al,0x7
  42bfdd:	repz push esi
  42bfdf:	repz sar DWORD PTR [ebp-0x2d],0x59
  42bfe4:	rol    DWORD PTR [ebp-0x1d13ae31],0xca
  42bfeb:	shl    BYTE PTR [esi+0x7b],cl
  42bfee:	ret    0xf83c
  42bff1:	rcr    bl,cl
  42bff3:	push   ds
  42bff4:	loop   0x42bfb6
  42bff6:	retf   0x8305
  42bff9:	cs mov al,ss:0x1e405e47
  42c000:	adc    ecx,DWORD PTR [edx]
  42c002:	push   ds
  42c003:	cmp    ah,BYTE PTR [esi-0x2c35094]
  42c009:	icebp  
  42c00a:	in     al,dx
  42c00b:	mov    dh,0x3
  42c00d:	test   DWORD PTR [edx+edx*8],edx
  42c010:	sub    al,0x79
  42c012:	icebp  
  42c013:	jnp    0x42c015
  42c015:	adc    bl,cl
  42c017:	inc    esi
  42c018:	jle    0x42bf9e
  42c01a:	sbb    al,0xea
  42c01c:	sub    al,0xca
  42c01e:	jb     0x42c03f
  42c020:	jge    0x42c05f
  42c022:	jns    0x42c07e
  42c024:	div    cl
  42c026:	fiadd  DWORD PTR [esi+0x76]
  42c029:	mov    WORD PTR [eax],gs
  42c02b:	xchg   ch,bh
  42c02d:	fldl2t 
  42c02f:	xchg   edx,eax
  42c030:	pop    ss
  42c031:	cli    
  42c032:	fadd   QWORD PTR [eax]
  42c034:	mov    ebp,0x805556c4
  42c039:	pop    ss
  42c03a:	(bad)  
  42c03b:	mov    esp,0x393eca9b
  42c040:	and    al,BYTE PTR [esi]
  42c042:	div    dl
  42c044:	inc    esi
  42c045:	dec    esi
  42c046:	jns    0x42c02e
  42c048:	cmp    esp,DWORD PTR [edx-0xc724bcc]
  42c04e:	xchg   esp,eax
  42c04f:	fild   DWORD PTR [ebp+0x1b]
  42c052:	push   ebp
  42c053:	and    BYTE PTR [ebx+0x45],al
  42c056:	or     dl,BYTE PTR [edi]
  42c058:	(bad)  
  42c059:	jle    0x42c065
  42c05b:	jl     0x42c0b0
  42c05d:	(bad)  
  42c05e:	div    DWORD PTR [ebp+0x3f]
  42c061:	les    esi,FWORD PTR [esi-0x7]
  42c064:	fld    QWORD PTR [eax]
  42c066:	push   ss
  42c067:	pusha  
  42c068:	mov    ah,0x4a
  42c06a:	cmp    DWORD PTR [esi],0x4e
  42c06d:	retf   0xf940
  42c070:	adc    eax,0x69b4e542
  42c075:	vpunpckldq ymm0,ymm4,ymm4
  42c079:	dec    edx
  42c07a:	test   DWORD PTR [eax],eax
  42c07c:	jno    0x42c0f8
  42c07e:	xchg   eax,edx
  42c080:	mov    WORD PTR [ecx-0x39c01391],?
  42c086:	idiv   bh
  42c088:	pop    ebx
  42c089:	adc    ebp,DWORD PTR [eax+0x0]
  42c08c:	dec    esi
  42c08d:	ss mov esi,eax
  42c090:	pop    ss
  42c091:	mov    BYTE PTR [esi-0x2],cl
  42c094:	adc    dl,al
  42c096:	mov    al,0x74
  42c098:	add    BYTE PTR [edi-0x6572f8e4],al
  42c09e:	xchg   edx,eax
  42c09f:	inc    eax
  42c0a0:	push   esi
  42c0a1:	div    DWORD PTR [edi+ecx*2-0x2]
  42c0a5:	push   eax
  42c0a6:	xbegin 0x89749ab1
  42c0ac:	dec    esi
  42c0ad:	xchg   DWORD PTR [ecx+0x3f],edx
  42c0b0:	hlt    
  42c0b1:	sahf   
  42c0b2:	xor    eax,0xfc7e8af6
  42c0b7:	leave  
  42c0b8:	xor    ch,dl
  42c0ba:	mov    BYTE PTR [esi+0x0],ah
  42c0bd:	inc    eax
  42c0be:	adc    dh,bh
  42c0c0:	or     ebp,DWORD PTR [esi-0x62f78577]
  42c0c6:	xchg   BYTE PTR [eax-0x3500a8bb],cl
  42c0cc:	call   0x36a52d
  42c0d1:	jmp    0x42c059
  42c0d3:	jl     0x42c102
  42c0d5:	add    eax,0x83457f40
  42c0da:	ss push 0xf63bf205
  42c0e0:	push   eax
  42c0e1:	pusha  
  42c0e2:	push   edx
  42c0e3:	cmc    
  42c0e4:	adc    eax,0x307613
  42c0e9:	jmp    0xee04:0xdc157c86
  42c0f0:	add    eax,0x36f379da
  42c0f5:	xchg   BYTE PTR [edx+esi*1+0x18773128],dl
  42c0fc:	push   cs
  42c0fd:	add    dh,al
  42c0ff:	imul   ebx,DWORD PTR [eax+eax*1-0x3fe956b1],0x4f77a94f
  42c10a:	and    ebp,ecx
  42c10c:	mov    esi,0x2fec790a
  42c111:	add    DWORD PTR [esi+0x1323c169],eax
  42c117:	das    
  42c118:	stos   DWORD PTR es:[edi],eax
  42c119:	cmp    eax,0x2ac3e986
  42c11e:	jb     0x42c183
  42c120:	mov    eax,?
  42c122:	lods   al,BYTE PTR ds:[esi]
  42c123:	jne    0x42c108
  42c125:	jg     0x42c0f6
  42c127:	mov    DWORD PTR [eax+edi*8+0x27869c67],ecx
  42c12e:	xchg   DWORD PTR [ecx+0xc],ebp
  42c131:	cmp    BYTE PTR [edi-0x667d0ea1],0x6a
  42c138:	or     al,0x0
  42c13a:	sbb    al,0x75
  42c13c:	int    0xfd
  42c13e:	pop    ds
  42c13f:	arpl   WORD PTR [edi+edi*4],sp
  42c142:	or     al,0x5b
  42c144:	(bad)  
  42c145:	lds    esp,FWORD PTR [esi-0x17]
  42c148:	mov    esi,0x8c621460
  42c14d:	cmc    
  42c14e:	or     al,0x74
  42c150:	mov    al,BYTE PTR [edx]
  42c152:	xchg   DWORD PTR [ecx+0xc],ebp
  42c155:	cmp    BYTE PTR [edi-0x71],0xf1
  42c159:	test   BYTE PTR [ebp+0x69],ch
  42c15c:	or     al,0x0
  42c15e:	fcomp  QWORD PTR [esi+0x600bf24]
  42c164:	inc    edx
  42c165:	adc    cl,BYTE PTR [ebx]
  42c167:	add    eax,DWORD PTR [ebx+0xd]
  42c16a:	add    BYTE PTR [esi+0x4557fabf],al
  42c170:	inc    edx
  42c171:	arpl   bp,cx
  42c173:	ins    BYTE PTR es:[edi],dx
  42c174:	dec    ebx
  42c175:	in     ax,0x39
  42c178:	jnp    0x42c15c
  42c17a:	pop    ecx
  42c17b:	xchg   ebp,eax
  42c17c:	sbb    ah,BYTE PTR [esp+eax*4+0x2e172e]
  42c183:	test   al,0x5a
  42c185:	sub    eax,ebx
  42c187:	add    eax,DWORD PTR [ecx-0x1eaddc1a]
  42c18d:	xor    al,0x0
  42c18f:	dec    edx
  42c190:	clc    
  42c191:	adc    ah,ch
  42c193:	cmp    DWORD PTR [ecx-0x2e],0x99c28347
  42c19a:	or     eax,0xcd634c6c
  42c19f:	lahf   
  42c1a0:	idiv   cl
  42c1a2:	sbb    esi,0x2c
  42c1a5:	loopne 0x42c127
  42c1a7:	sub    DWORD PTR [edx-0x1d],eax
  42c1aa:	add    ebp,DWORD PTR [eax+0x57]
  42c1ad:	sbb    eax,ebx
  42c1af:	add    eax,DWORD PTR [ecx-0x1e7ddc0a]
  42c1b5:	aam    0xff
  42c1b7:	jge    0x42c1b1
  42c1b9:	rcl    bl,1
  42c1bb:	xor    DWORD PTR [ecx+0x12],edi
  42c1be:	dec    eax
  42c1bf:	add    edx,0x49
  42c1c2:	or     eax,0xcd62641c
  42c1c7:	add    BYTE PTR [edi-0xa],ch
  42c1ca:	inc    ecx
  42c1cb:	test   BYTE PTR [esi+0x9a7b72c],cl
  42c1d1:	jns    0x42c1aa
  42c1d3:	test   BYTE PTR ds:0x7cc70feb,0xc3
  42c1da:	sbb    DWORD PTR [edx],ecx
  42c1dc:	cli    
  42c1dd:	dec    ebx
  42c1de:	arpl   bp,cx
  42c1e0:	lods   al,BYTE PTR ds:[esi]
  42c1e1:	out    dx,eax
  42c1e2:	mov    DWORD PTR [ecx+0x7d],ebx
  42c1e5:	sbb    ah,BYTE PTR [edx+ebx*2]
  42c1e8:	jp     0x42c204
  42c1ea:	or     ch,BYTE PTR [edx]
  42c1ec:	or     bh,BYTE PTR [ebx+0x4e]
  42c1ef:	je     0x42c23a
  42c1f1:	loopne 0x42c206
  42c1f3:	inc    ecx
  42c1f4:	inc    ebp
  42c1f5:	cli    
  42c1f6:	repnz sbb esi,ecx
  42c1f9:	aas    
  42c1fa:	mov    dl,al
  42c1fc:	cmp    ah,0x1a
  42c1ff:	arpl   WORD PTR [edx+0x4e],ax
  42c202:	sub    al,BYTE PTR ds:0xfd05e8ab
  42c208:	mov    ebx,0x426906f4
  42c20d:	xor    BYTE PTR [edi+0x1c],dh
  42c210:	lods   al,BYTE PTR ds:[esi]
  42c211:	pop    ebx
  42c212:	push   edx
  42c213:	stos   BYTE PTR es:[edi],al
  42c214:	add    eax,0x79ee207b
  42c219:	push   ds
  42c21a:	icebp  
  42c21b:	xchg   esi,eax
  42c21c:	enter  0xf2f9,0xce
  42c220:	cmp    DWORD PTR [eax-0x3d8a6f77],edi
  42c226:	repnz lock dec eax
  42c229:	sub    DWORD PTR [esp+edx*8+0x0],esp
  42c22d:	popf   
  42c22e:	mov    ecx,0xfa123700
  42c233:	mov    bl,0xf1
  42c235:	and    eax,0x56e90a02
  42c23a:	and    al,0x8a
  42c23c:	push   eax
  42c23d:	fs out dx,eax
  42c23f:	test   eax,0xcd1a62c3
  42c244:	not    BYTE PTR [ebx]
  42c246:	xchg   ebx,eax
  42c247:	mov    DWORD PTR [ebx-0x16b5e663],eax
  42c24d:	test   esi,ebp
  42c24f:	add    eax,0xcd1a65c3
  42c254:	imul   edx,DWORD PTR [edx+0x58],0x7a050676
  42c25b:	xor    BYTE PTR [ebp-0x5635d67c],bl
  42c261:	inc    esp
  42c262:	dec    esp
  42c263:	mov    eax,0xb6c57e00
  42c268:	or     BYTE PTR [edi],cl
  42c26a:	add    eax,0x94d2000a
  42c26f:	out    0xe4,eax
  42c271:	sub    bh,al
  42c273:	fld    DWORD PTR [eax+0x405075e5]
  42c279:	das    
  42c27a:	inc    ebp
  42c27b:	jbe    0x42c281
  42c27d:	lds    esp,FWORD PTR [edx+edx*2]
  42c280:	ret    
  42c281:	lahf   
  42c282:	lea    ecx,[edi]
  42c284:	je     0x42c271
  42c286:	mov    ebp,0xb2523ff1
  42c28b:	out    0xf0,eax
  42c28d:	sub    bh,al
  42c28f:	fld    DWORD PTR [eax+0x50769500]
  42c295:	inc    eax
  42c296:	out    dx,eax
  42c297:	inc    esp
  42c298:	ja     0x42c263
  42c29a:	outs   dx,DWORD PTR ds:[esi]
  42c29b:	lea    ecx,[edi]
  42c29d:	je     0x42c2c2
  42c29f:	fwait
  42c2a0:	mov    dh,0x8b
  42c2a2:	clc    
  42c2a3:	and    DWORD PTR [ebp-0x5a6610be],0xaa79ef42
  42c2ad:	inc    edx
  42c2ae:	fild   QWORD PTR [edx+ebp*4+0x42]
  42c2b2:	fist   WORD PTR [edi-0x54]
  42c2b5:	inc    edx
  42c2b6:	scas   eax,DWORD PTR es:[edi]
  42c2b7:	jmp    0x42aa:0xf3af42aa
  42c2be:	lahf   
  42c2bf:	push   es
  42c2c0:	lods   al,BYTE PTR ds:[esi]
  42c2c1:	inc    edx
  42c2c2:	lahf   
  42c2c3:	lods   al,BYTE PTR es:[esi]
  42c2c5:	inc    edx
  42c2c6:	scas   eax,DWORD PTR es:[edi]
  42c2c7:	mov    ch,0xaa
  42c2c9:	inc    edx
  42c2ca:	scas   eax,DWORD PTR es:[edi]
  42c2cb:	retf   
  42c2cc:	stos   BYTE PTR es:[edi],al
  42c2cd:	inc    edx
  42c2ce:	lahf   
  42c2cf:	mov    cl,0xaa
  42c2d1:	inc    edx
  42c2d2:	lahf   
  42c2d3:	pushf  
  42c2d4:	stos   BYTE PTR es:[edi],al
  42c2d5:	inc    edx
  42c2d6:	outs   dx,DWORD PTR ds:[esi]
  42c2d7:	jbe    0x42c284
  42c2d9:	inc    edx
  42c2da:	outs   dx,DWORD PTR ds:[esi]
  42c2db:	push   0x698642ab
  42c2e0:	sbb    al,0xa3
  42c2e2:	les    ebp,FWORD PTR [ecx+0x1f]
  42c2e5:	xchg   DWORD PTR [edx-0x13],esi
  42c2e8:	jmp    0x1288c8e4
  42c2ed:	xchg   ebx,eax
  42c2ef:	cdq    
  42c2f0:	cmp    DWORD PTR [edi-0x78e19e55],eax
  42c2f6:	add    BYTE PTR [esi],dh
  42c2f8:	pop    ebp
  42c2f9:	(bad)  
  42c2fa:	mov    dl,al
  42c2fc:	cmp    eax,0x45ca88de
  42c301:	test   BYTE PTR [eax-0x771dc23e],0xca
  42c308:	inc    ebp
  42c309:	cli    
  42c30a:	test   eax,eax
  42c30c:	nop
  42c30d:	je     0x42c352
  42c30f:	push   0x64
  42c311:	mov    WORD PTR [ebx+0x62],fs
  42c314:	fs inc ebp
  42c316:	push   ebx
  42c317:	or     eax,0x8173f21f
  42c31c:	pushf  
  42c31d:	int3   
  42c31e:	call   0x4f3d62
  42c323:	add    esp,DWORD PTR [ebx+0x300c453f]
  42c329:	or     eax,0x156dcf84
  42c32e:	or     bh,0x6b
  42c331:	ds jmp 0x7433b63d
  42c337:	stos   BYTE PTR es:[edi],al
  42c338:	jmp    0x3874d400
  42c33d:	(bad)  
  42c33e:	clc    
  42c33f:	jae    0x42c2d7
  42c341:	loope  0x42c2c9
  42c343:	inc    ebp
  42c344:	jno    0x42c3b5
  42c346:	mov    edi,0xc9725c1a
  42c34b:	cdq    
  42c34c:	pop    ecx
  42c34d:	jo     0x42c30e
  42c34f:	sbb    ah,BYTE PTR [ebx+esi*2]
  42c352:	inc    ecx
  42c353:	jno    0x42c392
  42c355:	outs   dx,DWORD PTR ds:[esi]
  42c356:	or     ecx,DWORD PTR [ecx+0x3d7b42]
  42c35c:	xchg   ebp,eax
  42c35d:	imul   ecx,DWORD PTR [edi+0x1f],0xfffffffe
  42c361:	inc    ebp
  42c362:	jmp    0x42c3df
  42c364:	(bad)  
  42c365:	dec    edi
  42c366:	aam    0xc3
  42c368:	mov    eax,ds:0x59f2e269
  42c36d:	ja     0x42c3eb
  42c36f:	cmp    eax,0x4ec93687
  42c374:	or     cl,0x5e
  42c377:	pop    ds
  42c378:	mov    ds:0x82391336,al
  42c37d:	leave  
  42c37e:	dec    esi
  42c37f:	call   0x31ea19
  42c384:	jg     0x42c375
  42c386:	out    0x8c,al
  42c388:	popf   
  42c389:	push   ds
  42c38a:	add    edx,DWORD PTR [ecx+0x407a4785]
  42c390:	push   0x52
  42c392:	push   0x48
  42c394:	bound  ebx,QWORD PTR [esi]
  42c396:	cld    
  42c397:	mov    ebx,0x12e6be8c
  42c39c:	xchg   BYTE PTR [edx+0x63],al
  42c39f:	inc    edx
  42c3a0:	xchg   DWORD PTR [edx],edi
  42c3a2:	ins    DWORD PTR es:[edi],dx
  42c3a3:	and    esi,DWORD PTR [ebp+0x52]
  42c3a6:	or     BYTE PTR [edx-0x76],0xc1
  42c3aa:	or     BYTE PTR [eax],cl
  42c3ac:	xchg   BYTE PTR [edx],al
  42c3ae:	loop   0x42c3b3
  42c3b0:	jge    0x42c371
  42c3b2:	or     dl,BYTE PTR [ebx]
  42c3b4:	xchg   BYTE PTR [edx+0x6c],al
  42c3b7:	inc    ecx
  42c3b8:	mov    es,WORD PTR [edi-0x6f]
  42c3bb:	dec    edx
  42c3bc:	xchg   DWORD PTR [edx],ecx
  42c3be:	fs mov esp,0x60477200
  42c3c4:	mov    al,0x7c
  42c3c6:	inc    edx
  42c3c7:	jecxz  0x42c38b
  42c3c9:	gs mov ebp,0x425b7ccd
  42c3cf:	arpl   WORD PTR [edi+0x6d0a4782],di
  42c3d5:	(bad)  
  42c3d6:	dec    eax
  42c3d7:	or     ch,cl
  42c3d9:	add    eax,0x1f6036d
  42c3de:	xchg   ebp,eax
  42c3df:	(bad)  
  42c3e0:	call   0xea6a866a
  42c3e5:	add    BYTE PTR [edx+eax*1],cl
  42c3e8:	push   cs
  42c3e9:	or     DWORD PTR [esi+edi*8],ecx
  42c3ec:	add    eax,0x28a4408
  42c3f1:	ret    0x8649
  42c3f4:	sbb    al,BYTE PTR [ebx+0x1c50a42]
  42c3fa:	mov    esi,0x43cfaf07
  42c3ff:	sbb    edx,edx
  42c401:	mov    dl,0xf5
  42c403:	hlt    
  42c404:	in     al,0x94
  42c406:	mov    esi,0x4285e694
  42c40b:	mov    al,dl
  42c40d:	mov    ecx,DWORD PTR [ecx-0x79]
  42c410:	bound  edi,QWORD PTR [edx+eax*2+0xa]
  42c414:	scas   eax,DWORD PTR es:[edi]
  42c415:	mov    edi,0x6ac23943
  42c41a:	cmc    
  42c41b:	hlt    
  42c41c:	hlt    
  42c41d:	xchg   esp,eax
  42c41e:	mov    esi,0x4285f37f
  42c423:	mov    dl,BYTE PTR [edx-0x78b68500]
  42c429:	outs   dx,DWORD PTR ds:[esi]
  42c42a:	xchg   ebx,eax
  42c42b:	inc    edx
  42c42c:	or     ch,BYTE PTR [edx-0x67]
  42c42f:	push   ds
  42c430:	push   ss
  42c431:	jmp    0xbb4dc7f5
  42c436:	xchg   ecx,eax
  42c437:	mov    esi,0xbf962684
  42c43c:	leave  
  42c43d:	(bad)  [ecx-0x71faaa44]
  42c443:	mov    ebp,0x1d920d3d
  42c448:	les    edi,FWORD PTR [eax+0xf08c10]
  42c44e:	jg     0x42c41a
  42c450:	mov    al,0x74
  42c452:	xchg   ebp,eax
  42c453:	(bad)  
  42c454:	dec    edx
  42c455:	pop    ss
  42c456:	jnp    0x42c422
  42c458:	add    al,0x4
  42c45a:	out    0xb,eax
  42c45c:	sbb    eax,0x2658298a
  42c461:	jg     0x42c45a
  42c463:	std    
  42c464:	and    eax,0x6fca600f
  42c469:	add    BYTE PTR [edi+0x41],ch
  42c46c:	jno    0x42c4d2
  42c46e:	dec    ebx
  42c46f:	dec    ebp
  42c470:	or     ch,cl
  42c472:	sub    BYTE PTR [eax-0x4b20000d],al
  42c478:	adc    BYTE PTR [edi],cl
  42c47a:	stos   DWORD PTR es:[edi],eax
  42c47b:	lea    eax,[edi]
  42c47d:	add    BYTE PTR [edi],ch
  42c47f:	shl    edi,0x9
  42c482:	and    BYTE PTR [ebp+0x411f0bc7],bh
  42c488:	int3   
  42c489:	inc    esi
  42c48a:	add    BYTE PTR [esi],ch
  42c48c:	fs loope 0x42c4bb
  42c48f:	inc    eax
  42c490:	xor    ebx,0xffffff80
  42c493:	inc    esp
  42c494:	inc    esp
  42c495:	add    eax,0xa3f6885
  42c49a:	add    BYTE PTR [ebp+0x48],ah
  42c49d:	retf   0xede8
  42c4a0:	call   0xedacd3ad
  42c4a5:	pop    es
  42c4a6:	add    bh,bl
  42c4a8:	mov    cl,BYTE PTR [edx+0x1]
  42c4ab:	mov    bh,0xe8
  42c4ad:	add    BYTE PTR [ebp-0x2b],dh
  42c4b0:	shl    BYTE PTR [edx+0x16],0xea
  42c4b4:	sub    al,0x6
  42c4b6:	xor    ebx,DWORD PTR [edi]
  42c4b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c4b9:	out    dx,eax
  42c4ba:	xor    ch,bh
  42c4bc:	std    
  42c4bd:	leave  
  42c4be:	loopne 0x42c468
  42c4c0:	inc    esi
  42c4c1:	inc    esi
  42c4c2:	and    al,0xa0
  42c4c4:	enter  0x174a,0x86
  42c4c8:	loopne 0x42c50c
  42c4ca:	adc    BYTE PTR [ebx],cl
  42c4cc:	sub    esi,DWORD PTR [edx]
  42c4ce:	prefetch BYTE PTR ds:0x1305cfcb
  42c4d5:	push   es
  42c4d6:	je     0x42c554
  42c4d8:	mov    ds:0x93fe8519,eax
  42c4dd:	or     al,0x0
  42c4df:	push   es
  42c4e0:	ins    BYTE PTR es:[edi],dx
  42c4e1:	mov    WORD PTR [ebp+0x7ae86cc8],es
  42c4e7:	(bad)  
  42c4e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c4e9:	call   0xdc2055f8
  42c4ee:	stc    
  42c4ef:	add    BYTE PTR [ecx+0x3d],bl
  42c4f2:	jg     0x42c537
  42c4f4:	stos   BYTE PTR es:[edi],al
  42c4f5:	cdq    
  42c4f6:	fld    QWORD PTR [edx+edi*2+0x42]
  42c4fa:	xor    ecx,DWORD PTR [ebx]
  42c4fc:	xchg   BYTE PTR [ecx+0x7d],ch
  42c4ff:	inc    esp
  42c500:	mov    dl,BYTE PTR [eax+0x42]
  42c503:	and    al,0x96
  42c505:	lock pop edx
  42c507:	or     al,0x85
  42c509:	es push ss
  42c50b:	cdq    
  42c50c:	or     eax,0x62438390
  42c511:	push   ecx
  42c512:	jg     0x42c555
  42c514:	jle    0x42c556
  42c516:	(bad)  [edx+0x76]
  42c519:	aaa    
  42c51a:	add    al,0x37
  42c51c:	dec    edx
  42c51d:	cmp    eax,0xf08e6ede
  42c522:	fmul   QWORD PTR [eax-0x190782be]
  42c528:	jle    0x42c50a
  42c52a:	pop    eax
  42c52b:	and    al,0xae
  42c52d:	loop   0x42c55f
  42c52f:	and    al,0x92
  42c531:	call   0x69b0e966
  42c536:	aaa    
  42c537:	or     ch,bh
  42c539:	ins    DWORD PTR es:[edi],dx
  42c53a:	call   0xe8a8d44e
  42c53f:	pop    ss
  42c540:	ins    DWORD PTR es:[edi],dx
  42c541:	inc    edx
  42c542:	and    eax,0x171e421c
  42c547:	mov    eax,DWORD PTR [edi+0x4a]
  42c54a:	ins    BYTE PTR es:[edi],dx
  42c54b:	inc    edi
  42c54c:	push   0x52
  42c54e:	dec    esi
  42c54f:	inc    edi
  42c550:	jbe    0x42c5c5
  42c552:	jns    0x42c59b
  42c554:	add    BYTE PTR [edx+0x52],ch
  42c557:	jl     0x42c5a2
  42c559:	jle    0x42c5a2
  42c55b:	and    cl,BYTE PTR [edx-0x792fb931]
  42c561:	in     al,0x45
  42c563:	jecxz  0x42c568
  42c565:	inc    esp
  42c566:	cld    
  42c567:	loope  0x42c56a
  42c569:	scas   eax,DWORD PTR es:[edi]
  42c56a:	(bad)  
  42c56b:	mov    esi,0x8ebe8d1b
  42c570:	rcr    DWORD PTR [ebx+esi*2+0x7b],0x3e
  42c575:	jle    0x42c53e
  42c577:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c578:	pop    ss
  42c579:	add    eax,DWORD PTR [edx+0xe08ee6e]
  42c57f:	(bad)  
  42c580:	sbb    eax,DWORD PTR [ecx]
  42c582:	push   es
  42c583:	call   DWORD PTR [ebx]
  42c585:	imul   ecx,DWORD PTR [eax-0x7bfeaadf],0x820ad4d7
  42c58f:	push   esi
  42c590:	or     al,BYTE PTR [eax]
  42c592:	cld    
  42c593:	iret   
  42c594:	out    0x7,eax
  42c596:	inc    esi
  42c597:	jmp    0x6d8e8d27
  42c59c:	inc    esi
  42c59d:	xchg   ebp,eax
  42c59e:	push   ds
  42c59f:	and    BYTE PTR [ebp+eax*2+0xb0ef81e],cl
  42c5a6:	or     BYTE PTR [eax-0x1411341],dl
  42c5ac:	out    0x79,eax
  42c5ae:	inc    edx
  42c5af:	mov    cl,BYTE PTR [esi]
  42c5b1:	fdiv   QWORD PTR [edx-0x79]
  42c5b4:	test   al,bl
  42c5b6:	inc    esp
  42c5b7:	loopne 0x42c540
  42c5b9:	add    BYTE PTR [ebp+eax*2+0xa],bh
  42c5bd:	jmp    0xe4378847
  42c5c2:	mov    BYTE PTR [esi+0x4285f407],bh
  42c5c8:	test   BYTE PTR [edi-0x1a7be170],ah
  42c5ce:	(bad)  
  42c5d2:	test   DWORD PTR [edx-0x38],eax
  42c5d5:	scas   eax,DWORD PTR es:[edi]
  42c5d6:	mov    dh,BYTE PTR [ebx-0x7d]
  42c5d9:	(bad)  
  42c5da:	(bad)  
  42c5db:	ja     0x42c5dd
  42c5dd:	ins    DWORD PTR es:[edi],dx
  42c5de:	ss ds or ch,cl
  42c5e2:	or     al,0x7c
  42c5e4:	lock push DWORD PTR ds:[ecx+0x3fff375]
  42c5ec:	sbb    ebp,ecx
  42c5ee:	or     bh,BYTE PTR [esi]
  42c5f0:	or     esp,DWORD PTR [ecx-0x40]
  42c5f3:	push   ebp
  42c5f4:	test   BYTE PTR [edi+0x71712678],ch
  42c5fa:	mov    esi,0x9e60126
  42c5ff:	mov    ebp,edi
  42c601:	call   0xd888f8b
  42c606:	call   0x625b:0xc5ed4729
  42c60d:	out    0x85,eax
  42c60f:	inc    edx
  42c610:	mov    dl,dl
  42c612:	mov    cl,0xf7
  42c614:	add    esi,DWORD PTR [ebx-0x75]
  42c617:	es out dx,eax
  42c619:	in     eax,dx
  42c61a:	cmp    BYTE PTR [edx+0x5600c207],0xc2
  42c621:	hlt    
  42c622:	and    al,0x89
  42c624:	(bad)  
  42c625:	(bad)  
  42c626:	repz test DWORD PTR [edx-0x76],eax
  42c62a:	(bad)  
  42c62b:	sub    DWORD PTR [edi+eax*2+0x478487ff],eax
  42c632:	jmp    0x53de:0x478487
  42c639:	jecxz  0x42c5cd
  42c63b:	fild   DWORD PTR [ebp+0xa]
  42c63e:	adc    cl,0x44
  42c641:	jno    0x42c691
  42c643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c644:	mov    al,0x6f
  42c646:	dec    esi
  42c647:	mov    ebx,0xb5fb70b0
  42c64c:	cmp    DWORD PTR [esi-0x80],edi
  42c64f:	xor    al,0x52
  42c651:	jbe    0x42c5da
  42c653:	das    
  42c654:	lods   al,BYTE PTR ds:[esi]
  42c655:	dec    eax
  42c656:	mov    cr1,esp
  42c659:	add    al,0x0
  42c65b:	lahf   
  42c65c:	xchg   DWORD PTR [edx+0x1],ecx
  42c65f:	jb     0x42c5ff
  42c661:	jne    0x42c662
  42c663:	test   al,0xb0
  42c665:	jo     0x42c662
  42c667:	xor    eax,DWORD PTR [eax-0x79]
  42c66a:	mov    WORD PTR [esi+0x45],ds
  42c66d:	or     al,dh
  42c66f:	xor    DWORD PTR [esi+0xc],eax
  42c672:	jmp    0x4d078d
  42c677:	fild   QWORD PTR [esp+ebx*2+0xb2be20f]
  42c67e:	add    BYTE PTR [edi],ch
  42c680:	xchg   DWORD PTR [edx+0x1],ecx
  42c683:	add    BYTE PTR [eax],ah
  42c685:	sahf   
  42c686:	dec    ebx
  42c687:	or     al,0x1f
  42c689:	inc    ebp
  42c68a:	mov    bh,bl
  42c68c:	outs   dx,DWORD PTR ds:[esi]
  42c68d:	aas    
  42c68e:	xchg   DWORD PTR [eax+0x2e],ebp
  42c691:	inc    ebp
  42c692:	or     al,dh
  42c694:	popa   
  42c695:	inc    ebp
  42c696:	add    ch,cl
  42c698:	adc    al,BYTE PTR [ecx+0xa]
  42c69b:	add    BYTE PTR [edi+0x720f23ab],bl
  42c6a1:	sbb    BYTE PTR [ebx],cl
  42c6a3:	add    bh,ch
  42c6a5:	xchg   BYTE PTR [edx+0x1],cl
  42c6a8:	neg    BYTE PTR [ebx+0x44df0c0f]
  42c6ae:	jg     0x42c6f3
  42c6b0:	xchg   BYTE PTR [ebx+0x2d510909],ch
  42c6b6:	sub    BYTE PTR [ebx],cl
  42c6b8:	adc    BYTE PTR [edi+eiz*1+0x26aade7f],bl
  42c6bf:	mov    DWORD PTR [eax-0x75],ecx
  42c6c2:	mov    BYTE PTR [ecx-0x79],0x65
  42c6c6:	mov    ds:0xc5b8202,eax
  42c6cb:	sub    BYTE PTR [ebp-0x37f6c6c0],0xa0
  42c6d2:	or     eax,DWORD PTR [edi]
  42c6d4:	scas   eax,DWORD PTR es:[edi]
  42c6d5:	adc    DWORD PTR [ebx],eax
  42c6d7:	add    BYTE PTR [esi+0xa2fb2db],al
  42c6dd:	push   ebp
  42c6de:	xchg   dh,dh
  42c6e0:	mov    edi,0xd61e7b8
  42c6e5:	test   al,0x1c
  42c6e7:	bound  eax,QWORD PTR [eax]
  42c6e9:	fstp   QWORD PTR [ecx]
  42c6eb:	add    al,0x62
  42c6ed:	jns    0x42c6fe
  42c6ef:	ret    
  42c6f0:	popa   
  42c6f1:	test   DWORD PTR [edx],ebx
  42c6f3:	sub    BYTE PTR [edi+0x6e],bh
  42c6f6:	mov    ah,BYTE PTR [esi]
  42c6f8:	mov    eax,ecx
  42c6fa:	mov    DWORD PTR [ebx-0x1e],esi
  42c6fd:	test   DWORD PTR [ecx+0xc],ebx
  42c700:	bound  edi,QWORD PTR [ebp+0x1a]
  42c703:	inc    DWORD PTR [ecx+0xc654c]
  42c709:	cld    
  42c70a:	pop    ds
  42c70b:	pop    ss
  42c70c:	and    al,0xfd
  42c70e:	pop    ebp
  42c70f:	add    ecx,ebp
  42c711:	(bad)  [ebp+0xc]
  42c714:	add    BYTE PTR [ebx],cl
  42c716:	sbb    eax,0x307f3bd6
  42c71b:	mov    eax,ds:0xc9ef7961
  42c720:	popa   
  42c721:	add    eax,0xf61fc82
  42c726:	sub    BYTE PTR [edx+eax*8],bl
  42c729:	dec    eax
  42c72a:	inc    edx
  42c72b:	loop   0x42c73c
  42c72d:	fbld   TBYTE PTR [ebx+edi*8-0x643d79fd]
  42c734:	jecxz  0x42c788
  42c736:	cmp    DWORD PTR [ecx-0x65c278bb],ebp
  42c73c:	xchg   edi,eax
  42c73d:	add    BYTE PTR [edx-0x1d],0x83
  42c741:	mov    eax,0x39c6f732
  42c746:	imul   edi,DWORD PTR [ecx+0x7be8c63c],0x45
  42c74d:	add    BYTE PTR [eax-0x18],bh
  42c750:	fcmovnb st,st(3)
  42c752:	mov    ebp,eax
  42c754:	out    0x7d,eax
  42c756:	shr    al,0xe3
  42c759:	ret    0xc327
  42c75c:	pop    edx
  42c75d:	repz daa 
  42c75f:	mov    ecx,0xc96911a8
  42c764:	gs inc eax
  42c766:	push   esi
  42c767:	cs jmp 0x287d:0xf7e89b34
  42c76f:	call   0xe8f472d7
  42c774:	imul   eax,DWORD PTR [ebp+0x72],0x7c02a888
  42c77b:	pop    ecx
  42c77c:	lea    ecx,[eax]
  42c77e:	xchg   BYTE PTR [edx+0x63],al
  42c781:	mov    eax,0x4f5f3fa1
  42c786:	add    DWORD PTR [edx-0x1d],0xff57c789
  42c78d:	xchg   DWORD PTR [ebp+0x3e],edi
  42c790:	(bad)  
  42c792:	lea    eax,[edx-0x1d]
  42c795:	mov    BYTE PTR [eax-0x6e],bl
  42c798:	dec    BYTE PTR [edx*4-0x3870bed8]
  42c79f:	push   esi
  42c7a0:	dec    ecx
  42c7a1:	das    
  42c7a2:	(bad)  
  42c7a3:	cmp    ecx,DWORD PTR [edx]
  42c7a5:	dec    edi
  42c7a6:	lea    ebp,[esp+eax*8+0x67818947]
  42c7ad:	push   0x1a
  42c7af:	pop    ds
  42c7b0:	mov    bl,0x86
  42c7b2:	add    BYTE PTR [ecx+0xb0f0a42],cl
  42c7b8:	add    DWORD PTR [esi],edx
  42c7ba:	pop    es
  42c7bb:	rol    DWORD PTR [ecx+0x401bb578],1
  42c7c1:	add    eax,0xf4c285e9
  42c7c6:	jecxz  0x42c831
  42c7c8:	sub    BYTE PTR [edx+0x1cf67f72],cl
  42c7ce:	imul   ebp,ecx,0xc4a1774e
  42c7d4:	add    BYTE PTR [ebx],cl
  42c7d6:	out    0xea,al
  42c7d8:	ja     0x42c7dd
  42c7da:	jmp    0xf5378a64
  42c7df:	push   esi
  42c7e0:	cmp    eax,ecx
  42c7e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c7e3:	mov    dl,BYTE PTR [edx-0x1d]
  42c7e6:	inc    esp
  42c7e7:	mov    BYTE PTR [edx+0xa],al
  42c7ea:	imul   esi,DWORD PTR [ecx],0x266c0148
  42c7f0:	dec    eax
  42c7f1:	or     ch,cl
  42c7f3:	inc    edi
  42c7f4:	add    al,0xb
  42c7f6:	les    ebp,FWORD PTR [edx]
  42c7f8:	xchg   ebp,eax
  42c7f9:	add    ebp,ecx
  42c7fb:	test   edx,eax
  42c7fd:	hlt    
  42c7fe:	repz cdq 
  42c800:	pop    esp
  42c801:	and    DWORD PTR [edi-0x1a6bd96c],0xffffff9b
  42c808:	pop    ebx
  42c809:	retf   0x85e2
  42c80c:	inc    edx
  42c80d:	mov    ah,dl
  42c80f:	jle    0x42c84a
  42c811:	xchg   BYTE PTR [eax+0x690a4293],ch
  42c817:	add    al,bl
  42c819:	inc    edi
  42c81a:	add    DWORD PTR [ebp-0x73],esp
  42c81d:	inc    edi
  42c81e:	or     al,BYTE PTR [eax]
  42c820:	pop    ds
  42c821:	ret    0x32a
  42c824:	ins    BYTE PTR es:[edi],dx
  42c825:	sti    
  42c826:	add    edi,edi
  42c828:	ins    BYTE PTR es:[edi],dx
  42c829:	sti    
  42c82a:	std    
  42c82b:	(bad)  
  42c82c:	test   BYTE PTR gs:[eax+eiz*1],al
  42c830:	jecxz  0x42c858
  42c832:	add    eax,0xa3cdb82
  42c837:	add    BYTE PTR [ebx-0x4c78fad1],dh
  42c83d:	cmp    al,0xa
  42c83f:	add    al,dl
  42c841:	jmp    0x42c7f2
  42c843:	(bad)  
  42c844:	imul   edx,DWORD PTR [eax+0xa],0xb4569c6
  42c84b:	xor    DWORD PTR [edi],0xfffffffb
  42c84e:	je     0x42c898
  42c850:	retf   
  42c851:	add    DWORD PTR [ecx-0x18],esi
  42c854:	in     al,dx
  42c855:	sbb    eax,0x65bb4837
  42c85a:	outs   dx,DWORD PTR ds:[esi]
  42c85b:	call   0x486de5fc
  42c860:	retf   
  42c861:	dec    ecx
  42c862:	jno    0x42c84c
  42c864:	imul   ebx,DWORD PTR ds:0xc26047ff,0xffffffd2
  42c86b:	or     bl,BYTE PTR [edi+0x41]
  42c86e:	int3   
  42c86f:	inc    esi
  42c870:	imul   edi,DWORD PTR [edi],0x3a95fe9
  42c876:	sbb    al,0x9
  42c878:	test   BYTE PTR [esi],cl
  42c87a:	int3   
  42c87b:	inc    esi
  42c87c:	add    BYTE PTR [ecx+0x47],bl
  42c87f:	jmp    0x1c4661d7
  42c884:	add    DWORD PTR [edx+edi*8+0x415946cb],edx
  42c88b:	jmp    0x1c4631d7
  42c890:	add    eax,0x46cc0154
  42c895:	sbb    DWORD PTR ds:0xd8863be9,edi
  42c89b:	popf   
  42c89c:	dec    edx
  42c89d:	call   0x3e33:0x5f743e49
  42c8a4:	je     0x42c847
  42c8a6:	xor    edi,DWORD PTR [edx]
  42c8a8:	adc    cl,BYTE PTR [esi+0x2f]
  42c8ab:	or     DWORD PTR [eax-0x7f],ecx
  42c8ae:	out    0x8e,al
  42c8b0:	add    eax,0x41ca5b86
  42c8b5:	js     0x42c914
  42c8b7:	popf   
  42c8b8:	sbb    eax,eax
  42c8ba:	sbb    al,0x1c
  42c8bc:	add    ebx,ebp
  42c8be:	je     0x42c88a
  42c8c0:	inc    ecx
  42c8c1:	jo     0x42c851
  42c8c3:	popf   
  42c8c4:	bswap  eax
  42c8c6:	and    al,0x1c
  42c8c8:	or     ebp,DWORD PTR [ebp-0x67be35a0]
  42c8ce:	pop    eax
  42c8cf:	popf   
  42c8d0:	add    eax,eax
  42c8d2:	pushf  
  42c8d3:	sbb    al,BYTE PTR [edx]
  42c8d5:	enter  0xba4,0xe
  42c8d9:	scas   eax,DWORD PTR es:[edi]
  42c8da:	pop    ebx
  42c8db:	mov    bh,0xfa
  42c8dd:	xchg   ecx,eax
  42c8de:	out    0xce,al
  42c8e0:	or     al,BYTE PTR [eax]
  42c8e2:	add    dl,BYTE PTR [ebx-0x10790002]
  42c8e8:	pop    ebx
  42c8e9:	adc    cl,BYTE PTR [ecx-0x75793815]
  42c8ef:	out    0x4d,al
  42c8f1:	lahf   
  42c8f2:	lds    ebx,FWORD PTR [ecx-0x74]
  42c8f5:	mul    BYTE PTR [esi-0x377a002a]
  42c8fb:	pop    eax
  42c8fc:	add    DWORD PTR [edx+0x2f1da4f],esi
  42c902:	xchg   dh,ch
  42c904:	add    eax,edx
  42c906:	enter  0x155a,0xe9
  42c90a:	ds pop edx
  42c90c:	or     al,0x0
  42c90e:	cld    
  42c90f:	retf   
  42c910:	add    eax,0xea42f00b
  42c915:	std    
  42c916:	jge    0x42c95b
  42c918:	loopne 0x42c999
  42c91a:	cs inc ebx
  42c91c:	jecxz  0x42c921
  42c91e:	push   es
  42c91f:	imul   esp,ebp,0xc9c25c2e
  42c925:	add    bh,BYTE PTR [ebx+0x3c]
  42c928:	arpl   WORD PTR [ecx+eax*2+0x47c1e9f5],di
  42c92f:	push   esp
  42c930:	shr    BYTE PTR [edx+0x3e342d6],cl
  42c936:	push   es
  42c937:	push   0xffffffe4
  42c939:	or     BYTE PTR [ebx],al
  42c93b:	retf   
  42c93c:	in     al,dx
  42c93d:	add    eax,DWORD PTR [esi+0x7d539bc2]
  42c943:	lds    esi,FWORD PTR [edi+0xd]
  42c946:	add    BYTE PTR [esi-0x6bbe56be],al
  42c94c:	cmp    cl,BYTE PTR [edx-0x1d944e8f]
  42c952:	xor    DWORD PTR [ebx+0x649ce38],0x6a
  42c959:	loope  0x42c989
  42c95b:	push   edi
  42c95c:	ret    0x485b
  42c95f:	sbb    edi,DWORD PTR [ecx]
  42c961:	sub    DWORD PTR [ecx+0x74],eax
  42c964:	aaa    
  42c965:	pop    edx
  42c966:	cdq    
  42c967:	sub    DWORD PTR [ebx-0x1e],0xae417e83
  42c96e:	sbb    DWORD PTR [esi],eax
  42c970:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  42c972:	cs jg  0x42c8f9
  42c975:	mov    al,ds:0x7b599011
  42c97a:	add    eax,DWORD PTR [esi-0x79459cbe]
  42c980:	cmc    
  42c981:	jmp    0x42c906
  42c983:	push   eax
  42c984:	sbb    eax,0x444016e
  42c989:	fst    DWORD PTR [ecx+eiz*1]
  42c98c:	out    0x9,eax
  42c98e:	imul   ebp,esp,0xc363ff6c
  42c994:	inc    esp
  42c995:	or     ch,cl
  42c997:	add    eax,0x6ee4a74
  42c99c:	sub    al,BYTE PTR [ecx+ebp*8]
  42c99f:	test   DWORD PTR [eax+0x6375f747],eax
  42c9a5:	ins    BYTE PTR es:[edi],dx
  42c9a6:	imul   eax,DWORD PTR [ebx+0x42],0x2001377
  42c9ad:	jne    0x42c9bb
  42c9af:	cmp    al,0xe7
  42c9b1:	jmp    0x2fc8:0x40b71bf4
  42c9b8:	nop
  42c9b9:	ds in  eax,0x2f
  42c9bc:	add    dh,BYTE PTR [esi+edx*2+0x1c]
  42c9c0:	rol    BYTE PTR [eax+0x63c9f747],1
  42c9c6:	dec    esp
  42c9c7:	imul   edi,ebp,0x8c640101
  42c9cd:	inc    esp
  42c9ce:	or     ch,cl
  42c9d0:	repz add BYTE PTR [eax],bl
  42c9d3:	(bad)  
  42c9d4:	fsubr  QWORD PTR [esi]
  42c9d6:	mov    ah,BYTE PTR [eax-0x7c]
  42c9d9:	cmc    
  42c9da:	sbb    DWORD PTR [ecx-0x24],ebp
  42c9dd:	cmp    BYTE PTR [edi-0x1e],dh
  42c9e0:	add    eax,0x8bd45c74
  42c9e5:	add    BYTE PTR [edi-0x21],0x93
  42c9e9:	popa   
  42c9ea:	adc    BYTE PTR [ecx+0x3b],ch
  42c9ed:	inc    esi
  42c9ee:	add    DWORD PTR [ecx+ebx*8+0x3b],ebp
  42c9f2:	or     ch,cl
  42c9f4:	add    eax,0x6f5fd70
  42c9f9:	adc    al,0x3
  42c9fb:	jmp    0xba378c85
  42ca00:	mov    BYTE PTR [edi+0x4285e03e],bh
  42ca06:	enter  0xf100,0x37
  42ca0a:	(bad)  
  42ca0b:	std    
  42ca0c:	outs   dx,BYTE PTR ds:[esi]
  42ca0d:	mov    dh,0x42
  42ca0f:	add    eax,DWORD PTR [eax]
  42ca11:	xchg   BYTE PTR [edx+0x8],bh
  42ca14:	add    BYTE PTR [edi],bl
  42ca16:	(bad)  
  42ca17:	mul    DWORD PTR [eax]
  42ca19:	sbb    dl,ch
  42ca1b:	scas   eax,DWORD PTR es:[edi]
  42ca1c:	or     BYTE PTR [edi],ch
  42ca1e:	inc    esi
  42ca1f:	jno    0x42ca9d
  42ca21:	sbb    DWORD PTR [esi-0x10],0x74
  42ca25:	daa    
  42ca26:	mov    ebp,0xb6df244c
  42ca2b:	dec    esp
  42ca2c:	and    al,0x8f
  42ca2e:	mov    esi,0x32e21672
  42ca33:	push   es
  42ca34:	(bad)  
  42ca35:	mov    eax,ds:0x410f1d3f
  42ca3a:	daa    
  42ca3b:	or     ecx,DWORD PTR [edx-0x91c61ec]
  42ca41:	clc    
  42ca42:	mov    al,0x88
  42ca44:	inc    esi
  42ca45:	fidiv  WORD PTR [ecx+0x9]
  42ca48:	rdmsr  
  42ca4a:	mov    ecx,0xbbaf0008
  42ca4f:	dec    edx
  42ca50:	pop    ss
  42ca51:	ret    
  42ca52:	mov    edi,0x31060e04
  42ca57:	add    eax,DWORD PTR [eax]
  42ca59:	scas   eax,DWORD PTR es:[edi]
  42ca5a:	(bad)
  42ca5d:	mov    bl,0xa0
  42ca5f:	jo     0x42ca5c
  42ca61:	stos   BYTE PTR es:[edi],al
  42ca62:	sbb    eax,ebp
  42ca64:	xor    BYTE PTR [eiz*2+0x7ad4e57c],0x70
  42ca6c:	sti    
  42ca6d:	jne    0x42ca88
  42ca6f:	sbb    al,BYTE PTR [eax+0xb763ab4]
  42ca75:	add    bh,bl
  42ca77:	lods   al,BYTE PTR ds:[esi]
  42ca78:	adc    BYTE PTR [ebp-0x17],dh
  42ca7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ca7c:	dec    edx
  42ca7d:	add    DWORD PTR [esp+ebx*4+0x18],ecx
  42ca81:	xor    eax,DWORD PTR [esi-0x3f76f0e5]
  42ca87:	imul   esp,DWORD PTR [edx],0x9
  42ca8a:	(bad)  
  42ca8c:	mov    bl,0xc
  42ca8e:	mov    al,ds:0x810e2ef2
  42ca93:	push   es
  42ca94:	int    0x3
  42ca96:	pop    edx
  42ca97:	jecxz  0x42cac7
  42ca99:	add    DWORD PTR ds:0x31fea27,ecx
  42ca9f:	lods   eax,DWORD PTR ds:[esi]
  42caa0:	push   es
  42caa1:	test   BYTE PTR [eax+0x63],dl
  42caa4:	or     al,0x0
  42caa6:	std    
  42caa7:	test   DWORD PTR [ecx],0xde270185
  42caad:	xchg   BYTE PTR [edx+0x3f],al
  42cab0:	push   ss
  42cab1:	daa    
  42cab2:	les    ecx,FWORD PTR [edx-0x7d]
  42cab5:	leave  
  42cab6:	jmp    0x5b023b8a
  42cabb:	jne    0x42ca3f
  42cabd:	inc    ecx
  42cabe:	jno    0x42cb3f
  42cac0:	mov    cl,BYTE PTR [ebx]
  42cac2:	test   bl,ah
  42cac4:	das    
  42cac5:	adc    edi,esp
  42cac7:	and    bh,bh
  42cac9:	and    eax,DWORD PTR [ecx-0xd]
  42cacc:	dec    ecx
  42cacd:	and    al,0x89
  42cacf:	pop    eax
  42cad0:	outs   dx,DWORD PTR ds:[esi]
  42cad1:	inc    ebx
  42cad2:	lods   eax,DWORD PTR ds:[esi]
  42cad3:	out    dx,eax
  42cad4:	mov    dh,0x7e
  42cad6:	and    bh,BYTE PTR [edi-0x14]
  42cad9:	inc    DWORD PTR [eax]
  42cadb:	scas   al,BYTE PTR es:[edi]
  42cadc:	push   ebp
  42cadd:	add    al,0x0
  42cadf:	xchg   bl,bl
  42cae1:	mov    dl,0x1f
  42cae3:	adc    edi,0x5b8602b1
  42cae9:	mov    esi,?
  42caeb:	into   
  42caec:	jo     0x42cb5d
  42caee:	push   ebp
  42caef:	mov    ds,WORD PTR [ecx+0xc]
  42caf2:	ret    0x5ac8
  42caf5:	shr    al,1
  42caf7:	pop    esp
  42caf8:	popa   
  42caf9:	or     al,0x0
  42cafb:	push   es
  42cafc:	inc    ebx
  42cafd:	sub    al,0x50
  42caff:	lea    edi,[ebp+0x684cb6fb]
  42cb05:	and    BYTE PTR [esi],bh
  42cb07:	xchg   DWORD PTR ds:0x4284dc0a,ebx
  42cb0d:	jecxz  0x42ca92
  42cb0f:	xor    BYTE PTR [edi],cl
  42cb11:	loopne 0x42cb91
  42cb13:	div    DWORD PTR cs:[si+0x147]
  42cb19:	loop   0x42caf8
  42cb1b:	cs sbb edi,0xebc28603
  42cb22:	push   ebx
  42cb23:	jge    0x42cae2
  42cb25:	mov    edi,0xa8680cb7
  42cb2a:	cmp    eax,0x6fda1f87
  42cb2f:	test   BYTE PTR [edx-0x1d],al
  42cb32:	cmp    eax,0x17
  42cb35:	call   0x9fa99db8
  42cb3a:	mov    ah,0xc7
  42cb3c:	add    dl,ah
  42cb3e:	jmp    0x42cb40
  42cb40:	out    dx,al
  42cb41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cb42:	out    0x3,eax
  42cb44:	xchg   BYTE PTR [ebp+0x3a8dc523],dh
  42cb4a:	sar    BYTE PTR [edx+edx*8+0x6b],1
  42cb4e:	xchg   DWORD PTR [edi+eiz*1+0x27c03137],esi
  42cb55:	ret    
  42cb56:	mov    dh,bl
  42cb58:	daa    
  42cb59:	mov    ecx,0xc41428
  42cb5e:	loop   0x42cb4a
  42cb60:	scas   al,BYTE PTR es:[edi]
  42cb61:	(bad)  
  42cb62:	out    0x3,eax
  42cb64:	xchg   dl,al
  42cb66:	pop    ebx
  42cb67:	in     eax,0x7c
  42cb69:	mov    ebp,0x677cb862
  42cb6e:	and    BYTE PTR ds:0x335a1c87,bh
  42cb74:	test   DWORD PTR [edx+0xa],eax
  42cb77:	jmp    0xee1cf37c
  42cb7c:	mov    WORD PTR [ebx],?
  42cb7e:	mov    DWORD PTR [edx-0x780f93e2],eax
  42cb84:	mov    ch,BYTE PTR [esp+ecx*8+0x395f068f]
  42cb8b:	xchg   DWORD PTR [ecx+eax*1],ecx
  42cb8e:	sbb    al,0x2f
  42cb90:	jnp    0x42cbd3
  42cb92:	and    eax,0xa43d510
  42cb97:	jmp    0x74413ba1
  42cb9c:	mov    WORD PTR [edi+eax*2+0x4b5a39e8],es
  42cba3:	out    0x0,al
  42cba5:	test   DWORD PTR [edx-0x76],eax
  42cba8:	ror    BYTE PTR [eax],cl
  42cbaa:	cmp    al,0x86
  42cbac:	xor    al,0x36
  42cbae:	ins    BYTE PTR es:[edi],dx
  42cbaf:	lock shl BYTE PTR [edx+0x70],1
  42cbb3:	lock mov esi,0xe603700a
  42cbb9:	add    DWORD PTR [esi+ebp*8],eax
  42cbbc:	scas   al,BYTE PTR es:[edi]
  42cbbd:	adc    eax,0xe1fe47bd
  42cbc2:	sar    ch,cl
  42cbc4:	hlt    
  42cbc5:	repnz push eax
  42cbc7:	add    ch,cl
  42cbc9:	test   DWORD PTR [edi+eax*2+0x1759bce8],eax
  42cbd0:	out    dx,al
  42cbd1:	test   DWORD PTR [edx+0x1],eax
  42cbd4:	aaa    
  42cbd5:	leave  
  42cbd6:	mov    esp,0x257e189
  42cbdb:	or     ah,BYTE PTR [ebp-0x36]
  42cbde:	cmp    eax,DWORD PTR [esi+0xa428d68]
  42cbe4:	push   0x56
  42cbe6:	push   ds
  42cbe7:	push   cs
  42cbe8:	jmp    0x9dc8063b
  42cbed:	imul   esi,DWORD PTR [esi],0x5e330083
  42cbf3:	adc    al,0xf
  42cbf5:	icebp  
  42cbf6:	jle    0x42cc67
  42cbf8:	call   0x38d4839
  42cbfd:	outs   dx,DWORD PTR ds:[esi]
  42cbfe:	jl     0x42cc4a
  42cc00:	add    DWORD PTR [ecx],esi
  42cc02:	cs push ds
  42cc04:	xor    DWORD PTR [edi+0x43],0x76
  42cc08:	push   ds
  42cc09:	add    ah,bl
  42cc0b:	(bad)  
  42cc0c:	or     al,0x74
  42cc0e:	aas    
  42cc0f:	sub    al,BYTE PTR ds:0xa3ee185
  42cc15:	add    BYTE PTR [ecx-0x8],ch
  42cc18:	out    dx,eax
  42cc19:	pop    es
  42cc1a:	xchg   BYTE PTR [edx+0x7c2f000a],al
  42cc20:	dec    edx
  42cc21:	add    ch,BYTE PTR [eax]
  42cc23:	(bad)  
  42cc24:	scas   eax,DWORD PTR es:[edi]
  42cc25:	push   es
  42cc26:	pop    ds
  42cc27:	inc    edx
  42cc28:	int3   
  42cc29:	inc    esi
  42cc2a:	sbb    eax,0xe9bae33b
  42cc2f:	inc    ecx
  42cc30:	or     al,dh
  42cc32:	test   eax,0x6ee90b3c
  42cc37:	cmp    ecx,DWORD PTR [edx]
  42cc39:	add    al,ah
  42cc3b:	jmp    0x42cbec
  42cc3d:	mov    ch,BYTE PTR [edi+0x69]
  42cc40:	push   edx
  42cc41:	inc    eax
  42cc42:	out    dx,eax
  42cc43:	mov    ebp,0x6f6b0fb0
  42cc48:	or     DWORD PTR [eax],eax
  42cc4a:	fild   WORD PTR [eax-0x44]
  42cc4d:	dec    esi
  42cc4e:	lods   eax,DWORD PTR ds:[esi]
  42cc4f:	es jno 0x42cc4b
  42cc52:	mov    ah,0x40
  42cc54:	lea    edx,[edx-0xf5be57]
  42cc5a:	mov    ebx,0x6db9fdc2
  42cc5f:	ds hlt 
  42cc61:	inc    esi
  42cc62:	lods   al,BYTE PTR ds:[esi]
  42cc63:	push   ebp
  42cc64:	arpl   WORD PTR [edi],cx
  42cc66:	sbb    al,BYTE PTR [ecx+0x3786c8f2]
  42cc6c:	or     cl,ch
  42cc6e:	add    al,ah
  42cc70:	pop    ecx
  42cc71:	or     al,0x0
  42cc73:	js     0x42cc0a
  42cc75:	pop    es
  42cc76:	cmp    al,0xe0
  42cc78:	push   esp
  42cc79:	xchg   ecx,eax
  42cc7a:	mov    edi,0xfee92368
  42cc7f:	outs   dx,BYTE PTR ds:[esi]
  42cc80:	mov    BYTE PTR [esi],0x0
  42cc83:	xchg   BYTE PTR ds:0xb58dff43,bl
  42cc89:	cmp    BYTE PTR [edx],cl
  42cc8b:	mov    al,bh
  42cc8d:	or     edx,DWORD PTR [ebp+0x23b53546]
  42cc93:	adc    BYTE PTR [edx-0x1b],0xfd
  42cc97:	xor    DWORD PTR [ebx-0x3e],ebx
  42cc9a:	inc    ecx
  42cc9b:	test   BYTE PTR [edi-0x73],dl
  42cc9e:	inc    esi
  42cc9f:	mov    BYTE PTR [ebx+0xc],bl
  42cca2:	cli    
  42cca3:	rcr    BYTE PTR [eax+0x6e],0x49
  42cca7:	test   ebx,ebx
  42cca9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ccaa:	add    eax,0xffc8d479
  42ccaf:	add    DWORD PTR [ebx+0x9],ebx
  42ccb2:	mov    dl,0xd7
  42ccb4:	inc    eax
  42ccb5:	mov    BYTE PTR [ebx],dl
  42ccb7:	sbb    bl,BYTE PTR [ebx]
  42ccb9:	push   es
  42ccba:	or     eax,DWORD PTR [ebx]
  42ccbc:	in     eax,0x5
  42ccbe:	add    BYTE PTR [esi-0x76f75b25],al
  42ccc4:	(bad)  
  42ccc5:	loope  0x42ccc8
  42ccc7:	xchg   BYTE PTR [ebx-0x3e],bl
  42ccca:	inc    ecx
  42cccb:	test   BYTE PTR [edx-0x6d],ah
  42ccce:	push   ss
  42cccf:	mov    BYTE PTR [ebx+0xc],bl
  42ccd2:	cli    
  42ccd3:	add    BYTE PTR [eax+0x58],al
  42ccd6:	outs   dx,BYTE PTR ds:[esi]
  42ccd7:	dec    ecx
  42ccd8:	test   ebx,ebx
  42ccda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ccdb:	vmwrite edx,esp
  42ccde:	cwde   
  42ccdf:	jmp    DWORD PTR [ecx-0x484df6a6]
  42cce5:	inc    ecx
  42cce6:	sub    eax,0xa2ce7186
  42cceb:	add    edi,DWORD PTR [ebp-0x41]
  42ccee:	pusha  
  42ccef:	add    al,0x86
  42ccf1:	inc    edx
  42ccf2:	arpl   WORD PTR [ebx-0x4dc7a874],bp
  42ccf8:	(bad)  
  42ccf9:	aas    
  42ccfa:	jge    0x42cd3e
  42ccfc:	imul   esp,esp,0xecd50239
  42cd02:	iret   
  42cd03:	jns    0x42cd3b
  42cd05:	sub    DWORD PTR [ebp-0x8],esp
  42cd08:	cmc    
  42cd09:	add    ah,bl
  42cd0b:	ss loope 0x42ccd0
  42cd0e:	sbb    edi,edi
  42cd10:	mov    WORD PTR [ebp+0x42860739],?
  42cd16:	and    DWORD PTR [edx+0x30],ecx
  42cd19:	cmp    bl,BYTE PTR [edx]
  42cd1b:	aam    0x82
  42cd1d:	inc    edx
  42cd1e:	jecxz  0x42ccd1
  42cd20:	(bad)  
  42cd21:	aas    
  42cd22:	ins    DWORD PTR es:[edi],dx
  42cd23:	inc    edx
  42cd24:	sbb    esp,esp
  42cd26:	jmp    0xe037623d
  42cd2b:	jns    0x42cd63
  42cd2d:	sub    DWORD PTR [ebp+0x47],esp
  42cd30:	sbb    al,BYTE PTR [ebx]
  42cd32:	jecxz  0x42cd6a
  42cd34:	mov    ecx,0x13c9c2
  42cd39:	jge    0x42ccf8
  42cd3b:	jno    0x42cd43
  42cd3d:	xchg   BYTE PTR [edx-0x5f],al
  42cd40:	dec    ecx
  42cd41:	loopne 0x42cd7b
  42cd43:	retf   0x825b
  42cd46:	inc    edx
  42cd47:	jecxz  0x42ccfa
  42cd49:	inc    edi
  42cd4a:	aas    
  42cd4b:	jge    0x42cd8e
  42cd4d:	leave  
  42cd4e:	jecxz  0x42cce9
  42cd50:	or     BYTE PTR ds:0xd679d01c,dh
  42cd56:	sub    BYTE PTR [ebp+0x4b],ah
  42cd59:	sbb    al,BYTE PTR [ebx]
  42cd5b:	jecxz  0x42cd93
  42cd5d:	xchg   ecx,eax
  42cd5e:	ret    0x7009
  42cd61:	(bad)  
  42cd62:	aaa    
  42cd63:	xchg   DWORD PTR [eax-0x80],esp
  42cd66:	inc    edx
  42cd67:	or     ch,BYTE PTR [edi]
  42cd69:	aas    
  42cd6a:	fs add al,0x50
  42cd6d:	add    eax,0x5e90a3f
  42cd72:	ins    BYTE PTR es:[edi],dx
  42cd73:	sub    esi,ebx
  42cd75:	add    eax,esi
  42cd77:	push   es
  42cd78:	jmp    0xeb8a4e02
  42cd7d:	test   DWORD PTR [ecx+0x5f],ebx
  42cd80:	in     al,dx
  42cd81:	test   DWORD PTR [edx-0x76],eax
  42cd84:	xor    ch,BYTE PTR [ebx-0x12]
  42cd87:	inc    edx
  42cd88:	das    
  42cd89:	mov    edi,0xb1722141
  42cd8e:	push   ds
  42cd8f:	push   cs
  42cd90:	ins    BYTE PTR es:[edi],dx
  42cd91:	pop    ebx
  42cd92:	cmp    BYTE PTR [esi+0xa4280b0],al
  42cd98:	jb     0x42ce10
  42cd9a:	cmp    al,BYTE PTR [edi+0x1a7000fe]
  42cda0:	test   DWORD PTR [ebp+0x2b253329],ebp
  42cda6:	mov    ch,0xbb
  42cda8:	mov    edi,0xc9be39e6
  42cdad:	push   ebp
  42cdae:	or     al,0xbd
  42cdb0:	inc    edi
  42cdb1:	(bad)  
  42cdb2:	jmp    0x7e2ccb9a
  42cdb7:	add    DWORD PTR [ecx],ebx
  42cdb9:	jae    0x42ce03
  42cdbb:	dec    edi
  42cdbc:	es ds push 0xffffffff
  42cdc0:	and    eax,0x50bde0e6
  42cdc5:	mov    cl,0x29
  42cdc7:	push   0x46de0d8c
  42cdcc:	or     dl,BYTE PTR [eax-0x16f5c21e]
  42cdd2:	add    eax,0x8013fe6c
  42cdd7:	add    BYTE PTR [edi+0x0],0x9e
  42cddb:	jo     0x42cdc4
  42cddd:	mov    al,0x1f
  42cddf:	xchg   edi,eax
  42cde0:	push   es
  42cde1:	rdmsr  
  42cde3:	out    0x5,al
  42cde5:	add    BYTE PTR [edi+0x7a014a7c],ch
  42cdeb:	(bad)  
  42cdec:	test   eax,0x35e2480
  42cdf1:	test   dl,bl
  42cdf3:	dec    edx
  42cdf4:	or     al,BYTE PTR [eax]
  42cdf6:	out    dx,eax
  42cdf7:	lods   eax,DWORD PTR ds:[esi]
  42cdf8:	add    DWORD PTR [edi],ecx
  42cdfa:	jecxz  0x42cd96
  42cdfc:	or     al,0x0
  42cdfe:	pop    edi
  42cdff:	push   ebp
  42ce00:	mov    al,0x39
  42ce02:	add    BYTE PTR [ebx],dh
  42ce04:	push   0x1c
  42ce06:	jne    0x42ce6f
  42ce08:	fld    QWORD PTR [esp+0x4f]
  42ce0c:	fild   WORD PTR [esp+0x53]
  42ce10:	mov    BYTE PTR [edx+0x1],cl
  42ce13:	pop    edi
  42ce14:	fimul  WORD PTR [edx+0x3]
  42ce17:	scas   eax,DWORD PTR es:[edi]
  42ce18:	lods   eax,DWORD PTR ds:[esi]
  42ce19:	std    
  42ce1a:	je     0x42ce16
  42ce1c:	daa    
  42ce1d:	int    0x46
  42ce1f:	push   ds
  42ce20:	push   esp
  42ce21:	lock cmp bl,dh
  42ce24:	imul   ebx,DWORD PTR [edi+ecx*1],0xc9ea3
  42ce2b:	pop    ds
  42ce2c:	fnsave [ebx+0xc]
  42ce2f:	fs scas al,BYTE PTR es:[edi]
  42ce31:	jl     0x42ce5f
  42ce33:	fs stc 
  42ce35:	and    eax,0x26096414
  42ce3a:	adc    BYTE PTR [esp+eax*4-0x4ee674c0],dl
  42ce41:	fild   DWORD PTR [ebp-0x75f7e5d1]
  42ce47:	mov    eax,ds:0xdb842639
  42ce4c:	dec    ecx
  42ce4d:	add    BYTE PTR [esi-0x30],0xdb
  42ce51:	dec    edx
  42ce52:	pop    ss
  42ce53:	xchg   BYTE PTR [edi-0x78bd77e1],cl
  42ce59:	out    dx,eax
  42ce5a:	or     cl,BYTE PTR [ebx]
  42ce5c:	xchg   esi,eax
  42ce5d:	mov    bh,0xfa
  42ce5f:	test   eax,0x7a2428ec
  42ce64:	imul   ecx,DWORD PTR [ebp+0x6b820086],0xc
  42ce6b:	or     BYTE PTR [ebp-0x3ffdceab],0xa9
  42ce72:	add    eax,0xefc96d2d
  42ce77:	mov    cl,0xc8
  42ce79:	ins    DWORD PTR es:[edi],dx
  42ce7a:	jb     0x42ce3a
  42ce7c:	or     BYTE PTR [ebx-0x73],0xe8
  42ce80:	jg     0x42ce19
  42ce82:	inc    ebp
  42ce83:	dec    ecx
  42ce84:	fimul  DWORD PTR [edx+0x2f]
  42ce87:	je     0x42cefe
  42ce89:	mov    ds:0x6b8441c6,al
  42ce8e:	out    dx,eax
  42ce8f:	test   ah,ah
  42ce91:	addr16 or al,0x0
  42ce94:	push   es
  42ce95:	imul   ecx,DWORD PTR [ecx+ebp*8-0x24],0x72000c67
  42ce9d:	int3   
  42ce9e:	out    dx,eax
  42ce9f:	xchg   esp,eax
  42cea0:	inc    esi
  42cea1:	popa   
  42cea2:	mov    bl,0x23
  42cea4:	xchg   ebx,eax
  42cea5:	inc    esp
  42cea6:	cld    
  42cea7:	mov    ebp,es
  42cea9:	cmp    esp,ecx
  42ceab:	or     BYTE PTR [ecx-0x79fc4b10],al
  42ceb1:	imul   ebp,ebp,0xffffffb9
  42ceb4:	(bad)
  42ceb7:	das    
  42ceb8:	pop    ds
  42ceb9:	loop   0x42cf02
  42cebb:	or     bh,bh
  42cebd:	inc    eax
  42cebe:	or     ch,cl
  42cec0:	mov    ah,0x67
  42cec2:	or     al,0x0
  42cec4:	mov    ds:0xc0093904,al
  42cec9:	sub    BYTE PTR [edx+ecx*1],cl
  42cecc:	add    bh,bl
  42cece:	inc    ecx
  42cecf:	mov    esi,0xcf428607
  42ced4:	and    BYTE PTR [ebp-0x3e515d49],cl
  42ceda:	and    eax,0x44477bd0
  42cedf:	call   0x1d80:0xe3428218
  42cee6:	es iret 
  42cee8:	add    eax,esp
  42ceea:	pop    es
  42ceeb:	loop   0x42cede
  42ceed:	jl     0x42ceb5
  42ceef:	fld    QWORD PTR [edi]
  42cef1:	xchg   BYTE PTR [edx+0x7c],al
  42cef4:	sub    eax,0x9b57c592
  42cef9:	mov    cl,0x5f
  42cefb:	aas    
  42cefc:	lods   eax,DWORD PTR ds:[esi]
  42cefd:	jl     0x42ce97
  42ceff:	mov    eax,0xde840001
  42cf04:	jecxz  0x42cee6
  42cf06:	pop    ecx
  42cf07:	in     eax,0xfc
  42cf09:	or     al,0x9e
  42cf0b:	loop   0x42cf10
  42cf0d:	xchg   BYTE PTR [edi+0x5f],cl
  42cf10:	test   DWORD PTR [ecx+0x60],ecx
  42cf13:	loop   0x42ce95
  42cf15:	cs inc ebx
  42cf17:	call   0xe3871fa3
  42cf1c:	add    esi,DWORD PTR [ecx+0x5fcf969]
  42cf22:	jne    0x42cf07
  42cf24:	add    eax,DWORD PTR [esi-0x310090f7]
  42cf2a:	dec    edi
  42cf2b:	addr16 mov esp,0x9ae26010
  42cf31:	add    ch,bl
  42cf33:	inc    edx
  42cf34:	jecxz  0x42cf39
  42cf36:	push   es
  42cf37:	pop    esp
  42cf38:	add    bh,ch
  42cf3a:	add    eax,0x8603e39d
  42cf3f:	ret    0xf3cb
  42cf42:	jl     0x42cf12
  42cf44:	clc    
  42cf45:	pop    es
  42cf46:	xchg   BYTE PTR [edx+0xa],al
  42cf49:	imul   ebp,DWORD PTR [esi],0xb05e011b
  42cf4f:	inc    ebx
  42cf50:	or     ch,cl
  42cf52:	dec    esi
  42cf53:	or     DWORD PTR [edx],eax
  42cf55:	adc    ecx,DWORD PTR [edx-0x60554fb5]
  42cf5b:	dec    eax
  42cf5c:	icebp  
  42cf5d:	pop    ss
  42cf5e:	xchg   bh,bl
  42cf60:	loope  0x42cf1b
  42cf62:	cld    
  42cf63:	repnz test BYTE PTR [ecx+0x5e1751e],al
  42cf6a:	pop    ecx
  42cf6b:	inc    edx
  42cf6c:	or     ch,dl
  42cf6e:	fst    QWORD PTR [eax-0x2c]
  42cf71:	and    bh,BYTE PTR [eax]
  42cf73:	dec    esi
  42cf74:	add    DWORD PTR [ebx-0x78],ebp
  42cf77:	inc    esi
  42cf78:	or     ch,cl
  42cf7a:	mov    dl,0x49
  42cf7c:	xor    eax,0x8c4c6dcf
  42cf81:	inc    ebx
  42cf82:	xchg   BYTE PTR [edx+0xa],al
  42cf85:	jb     0x42cfd1
  42cf87:	inc    eax
  42cf88:	int    0x6a
  42cf8a:	sub    eax,0xf065005c
  42cf8f:	pop    edi
  42cf90:	lock jmp 0x7044a962
  42cf96:	add    bl,dl
  42cf98:	dec    esi
  42cf99:	jecxz  0x42cf4f
  42cf9b:	xchg   BYTE PTR [edx+0xa],al
  42cf9e:	bswap  ebx
  42cfa0:	pop    edi
  42cfa1:	xor    BYTE PTR [edi-0x190d3d7a],0x22
  42cfa8:	(bad)  
  42cfa9:	fdiv   st,st(4)
  42cfab:	in     eax,dx
  42cfac:	pop    ebx
  42cfad:	add    BYTE PTR [edi],dh
  42cfaf:	xor    al,0x15
  42cfb1:	mov    WORD PTR [ecx-0xa],cs
  42cfb4:	push   ds
  42cfb5:	or     ch,dh
  42cfb7:	push   es
  42cfb8:	xchg   esi,ebp
  42cfba:	(bad)  
  42cfbb:	sub    eax,0xece7f2df
  42cfc0:	lds    esi,FWORD PTR [edi]
  42cfc2:	add    ah,bl
  42cfc4:	inc    edx
  42cfc5:	or     al,dh
  42cfc7:	test   eax,0x82e91a48
  42cfcc:	inc    edi
  42cfcd:	or     al,BYTE PTR [eax]
  42cfcf:	pop    esp
  42cfd0:	lods   eax,DWORD PTR ds:[esi]
  42cfd1:	add    dh,BYTE PTR [ebx+edx*4-0x39]
  42cfd5:	icebp  
  42cfd6:	setnp  BYTE PTR [ebx]
  42cfd9:	jno    0x42cf9c
  42cfdb:	pop    ds
  42cfdc:	(bad)  
  42cfdd:	icebp  
  42cfde:	add    dl,al
  42cfe0:	rcr    BYTE PTR [ebx+0x6aab00fd],0xc7
  42cfe7:	imul   eax,DWORD PTR [ebp+0x3a],0xef5a0600
  42cfee:	call   FWORD PTR [edi+0x15034aa8]
  42cff4:	sbb    al,0xf1
  42cff6:	jg     0x42cfde
  42cff8:	inc    ebx
  42cff9:	add    eax,0xabe90087
  42cffe:	repz call DWORD PTR [eax-0x2c]
  42d002:	fnstcw WORD PTR [edx]
  42d004:	fst    QWORD PTR [edx]
  42d006:	xchg   esi,eax
  42d007:	inc    eax
  42d008:	outs   dx,DWORD PTR ds:[esi]
  42d009:	pop    ecx
  42d00a:	test   DWORD PTR [edi-0x6e],esi
  42d00d:	test   eax,0x429680f3
  42d012:	add    eax,0xa447a85
  42d017:	add    BYTE PTR [ecx+0x0],ch
  42d01a:	lock adc DWORD PTR [esi+0x1fffee8a],eax
  42d021:	lods   al,BYTE PTR ds:[esi]
  42d022:	dec    edx
  42d023:	add    esi,DWORD PTR [ebp-0x79800ee8]
  42d029:	pop    esp
  42d02a:	add    eax,DWORD PTR [edi-0xc5507]
  42d030:	xor    ah,dl
  42d032:	fnstcw WORD PTR [edx]
  42d034:	popf   
  42d035:	cmp    DWORD PTR [esi-0x7aa710c0],edx
  42d03b:	inc    edi
  42d03c:	xchg   BYTE PTR [esi-0x5d],dh
  42d03f:	cli    
  42d040:	push   es
  42d041:	jae    0x42d030
  42d043:	or     al,BYTE PTR [ebx]
  42d045:	fild   WORD PTR [esi]
  42d047:	add    BYTE PTR [esi+0x76fe4aa5],al
  42d04d:	sbb    BYTE PTR [eax-0x3],0xd1
  42d051:	imul   ecx,DWORD PTR [esi+esi*8-0x3376ab84],0xffffffb9
  42d059:	mov    esp,0x2df00aa3
  42d05e:	or     BYTE PTR [edi+0x0],bh
  42d061:	sahf   
  42d062:	pop    ebx
  42d063:	retf   0x8741
  42d066:	call   0x47f3:0x574e1620
  42d06d:	mov    esi,ebp
  42d06f:	js     0x42d06e
  42d071:	xchg   ecx,eax
  42d072:	imul   ecx,DWORD PTR [ecx+ecx*1-0x28f0d8a],0xffffff81
  42d07a:	imul   ecx,DWORD PTR [ecx+ecx*1-0x1d6fd72],0x71
  42d082:	imul   ecx,DWORD PTR [ecx+ecx*1-0x1df0d7e],0x61
  42d08a:	imul   ecx,edx,0x41
  42d08d:	xchg   DWORD PTR [edi+ecx*4+0x66],eax
  42d091:	test   BYTE PTR [ebx+0xc],ch
  42d094:	xchg   DWORD PTR [eax+0x33],eax
  42d097:	jae    0x42d09d
  42d099:	xchg   BYTE PTR [ebx-0x77],ch
  42d09c:	mov    edi,0x16e58b2
  42d0a1:	push   0x68
  42d0a3:	repz mov cl,0x46
  42d0a6:	pop    esp
  42d0a7:	ret    
  42d0a8:	push   ss
  42d0a9:	inc    esi
  42d0aa:	call   0x2b48bf5b
  42d0af:	push   ss
  42d0b0:	out    0x85,eax
  42d0b2:	cwde   
  42d0b3:	int3   
  42d0b4:	aas    
  42d0b5:	inc    BYTE PTR [ecx+0x21]
  42d0b8:	add    ecx,DWORD PTR [ecx]
  42d0ba:	fisttp QWORD PTR [edx]
  42d0bc:	jg     0x42d0ba
  42d0be:	dec    esp
  42d0bf:	pop    edi
  42d0c0:	call   0x7d252db8
  42d0c5:	add    BYTE PTR [edi+0x217f8f5c],bh
  42d0cb:	dec    ebp
  42d0cc:	addr16 push edx
  42d0ce:	rcr    DWORD PTR [edi+esi*4+0x7e],cl
  42d0d2:	inc    edi
  42d0d3:	xor    eax,0x457d8107
  42d0d8:	call   0xb084:0x8f5cbb41
  42d0df:	inc    edi
  42d0e0:	call   0x7f981b63
  42d0e5:	test   eax,0x3dee428
  42d0ea:	xchg   esp,eax
  42d0eb:	add    ebx,eax
  42d0ed:	or     DWORD PTR [edi+eax*8+0x4286064c],0x6d
  42d0f5:	or     al,BYTE PTR [eax]
  42d0f7:	and    DWORD PTR [edx],0x2a4839c
  42d0fd:	das    
  42d0fe:	xchg   edx,eax
  42d0ff:	stos   BYTE PTR es:[edi],al
  42d100:	loope  0x42d0fa
  42d102:	or     dl,BYTE PTR [ebp-0x1f]
  42d105:	add    eax,DWORD PTR [esi+0x8fba0c7]
  42d10b:	or     eax,0x48497cdf
  42d110:	adc    ch,BYTE PTR [edi]
  42d112:	add    edi,0x45769c28
  42d118:	jecxz  0x42d11d
  42d11a:	or     eax,DWORD PTR [ebx+0x5fb99196]
  42d120:	jecxz  0x42d11a
  42d122:	idiv   DWORD PTR [edi+0xb]
  42d125:	xchg   BYTE PTR [eax+0xac6381],cl
  42d12b:	sbb    al,0xd7
  42d12d:	stc    
  42d12e:	rol    edi,0x41
  42d131:	or     dh,BYTE PTR [ebp-0x16f57b14]
  42d137:	test   edx,eax
  42d139:	in     al,dx
  42d13a:	jmp    0x5bf9:0x7ce24cb1
  42d141:	lock ins BYTE PTR es:[edi],dx
  42d143:	(bad)
  42d146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d147:	inc    edi
  42d148:	inc    ecx
  42d149:	das    
  42d14a:	shl    BYTE PTR [ecx+0x42],1
  42d14d:	or     ch,cl
  42d14f:	pop    edx
  42d150:	and    ecx,0xf05bd19e
  42d156:	lds    ecx,FWORD PTR fs:[eax-0x7a]
  42d15a:	inc    ecx
  42d15b:	out    dx,eax
  42d15c:	pop    eax
  42d15d:	lock fcmovb st,st(5)
  42d160:	mov    edi,0x9c00e6d4
  42d165:	inc    ecx
  42d166:	push   0xffffffe5
  42d168:	dec    esi
  42d169:	lea    ebp,[ecx+0x7e416aa1]
  42d16f:	out    dx,al
  42d170:	pop    eax
  42d171:	mov    ebp,?
  42d173:	mov    cl,0x33
  42d175:	or     dh,ah
  42d177:	(bad)  
  42d178:	les    eax,FWORD PTR [ebp+0xd]
  42d17b:	call   0x45c3:0x8a0545c9
  42d182:	or     eax,0xa5830366
  42d187:	dec    ecx
  42d188:	dec    ebx
  42d189:	jecxz  0x42d147
  42d18b:	test   BYTE PTR [edx+0xa],al
  42d18e:	out    dx,al
  42d18f:	add    bh,dl
  42d191:	pushf  
  42d192:	sub    DWORD PTR [ecx+0x4d],0xfffffff8
  42d196:	dec    ecx
  42d197:	jmp    0x6d4329fd
  42d19c:	sbb    BYTE PTR [eax+esi*8-0x17],0x3e
  42d1a1:	cdq    
  42d1a2:	leave  
  42d1a3:	jo     0x42d151
  42d1a5:	add    DWORD PTR [edx],eax
  42d1a7:	pusha  
  42d1a8:	xlat   BYTE PTR ds:[ebx]
  42d1a9:	dec    esi
  42d1aa:	enter  0xf100,0x3f
  42d1ae:	ss jmp 0x4d11b2
  42d1b4:	lahf   
  42d1b5:	scas   al,BYTE PTR es:[edi]
  42d1b6:	std    
  42d1b7:	je     0x42d1df
  42d1b9:	or     DWORD PTR [edx+0x1],0x12fbda1
  42d1c0:	out    dx,eax
  42d1c1:	ds add eax,0x80d81cb6
  42d1c7:	or     BYTE PTR [eax-0x3a7ff5fa],bl
  42d1cd:	mov    ds:0xa76f1775,al
  42d1d2:	aaa    
  42d1d3:	je     0x42d1bb
  42d1d5:	mov    esi,0xc1a820f7
  42d1da:	add    al,BYTE PTR [edx]
  42d1dc:	scas   eax,DWORD PTR es:[edi]
  42d1dd:	ds int3 
  42d1df:	inc    esi
  42d1e0:	scas   al,BYTE PTR es:[edi]
  42d1e1:	push   ecx
  42d1e2:	loope  0x42d202
  42d1e4:	sahf   
  42d1e5:	or     cl,BYTE PTR ds:[ebx+0x46875a79]
  42d1ec:	xchg   edi,eax
  42d1ed:	xlat   BYTE PTR ds:[ebx]
  42d1ee:	ret    
  42d1ef:	cmovae eax,DWORD PTR [ebp-0xff3ef4]
  42d1f6:	inc    ecx
  42d1f7:	mov    eax,ebx
  42d1f9:	test   al,0xe4
  42d1fb:	scas   al,BYTE PTR es:[edi]
  42d1fc:	cdq    
  42d1fd:	ins    BYTE PTR es:[edi],dx
  42d1fe:	mov    ?,edi
  42d200:	leave  
  42d201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d202:	xchg   ecx,eax
  42d203:	add    eax,DWORD PTR [edx+0xa3fdd]
  42d209:	push   eax
  42d20a:	push   edi
  42d20b:	aaa    
  42d20c:	pop    esi
  42d20d:	push   edi
  42d20e:	push   ecx
  42d20f:	outs   dx,BYTE PTR ds:[esi]
  42d210:	ja     0x42d280
  42d212:	inc    esi
  42d213:	or     cl,BYTE PTR [ebx-0x7c369a64]
  42d219:	xchg   edi,eax
  42d21a:	mov    eax,ds:0x3f158403
  42d21f:	or     al,BYTE PTR [eax]
  42d221:	mov    dh,0x0
  42d223:	add    cl,BYTE PTR [ecx-0x17075e7a]
  42d229:	dec    esp
  42d22a:	ins    BYTE PTR es:[edi],dx
  42d22b:	or     al,0x0
  42d22d:	push   es
  42d22e:	inc    ebp
  42d22f:	repz or al,BYTE PTR [ebx]
  42d232:	cmp    eax,DWORD PTR [esi]
  42d234:	add    BYTE PTR [esi+0xd7f8d44],al
  42d23a:	test   WORD PTR [esi+esi*8+0xdfaa776],0xee22
  42d244:	jle    0x42d2ae
  42d246:	addr16 or al,0x7
  42d249:	inc    eax
  42d24a:	ja     0x42d285
  42d24c:	or     BYTE PTR [esi],al
  42d24e:	push   edx
  42d24f:	in     al,dx
  42d250:	call   0xfaea611d
  42d255:	enter  0x729,0x39
  42d259:	add    bh,bl
  42d25b:	ret    0xc
  42d25e:	xchg   ah,dl
  42d260:	dec    ecx
  42d261:	or     al,0xd
  42d263:	cmp    dl,ch
  42d265:	paddw  mm4,QWORD PTR [ecx]
  42d268:	xacquire xchg BYTE PTR [eax+0x63],cl
  42d26c:	rol    edx,cl
  42d26e:	test   DWORD PTR [esi],esp
  42d270:	push   ss
  42d271:	cdq    
  42d272:	pop    ebp
  42d273:	xchg   ebp,eax
  42d274:	pop    ds
  42d275:	push   es
  42d276:	adc    al,0x67
  42d278:	jecxz  0x42d251
  42d27a:	adc    eax,0xdbe735f
  42d27f:	sbb    cl,BYTE PTR [ebx+edi*2+0x750643a2]
  42d286:	mov    ah,dl
  42d288:	sub    BYTE PTR [esi+ecx*4],ah
  42d28b:	inc    esp
  42d28c:	mov    esi,0xa768ca8c
  42d291:	mov    dl,al
  42d293:	aas    
  42d294:	push   ss
  42d295:	pop    ss
  42d296:	cmp    al,0xe4
  42d298:	retf   
  42d299:	push   es
  42d29a:	inc    edi
  42d29b:	loop   0x42d2e3
  42d29d:	or     BYTE PTR [edi],cl
  42d29f:	inc    edx
  42d2a0:	mov    ecx,0x28dfb2f7
  42d2a5:	cmp    eax,0x460c1c87
  42d2aa:	push   es
  42d2ab:	pop    ebp
  42d2ac:	int    0xf6
  42d2ae:	or     al,dl
  42d2b0:	in     eax,dx
  42d2b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d2b2:	sbb    al,0xc5
  42d2b4:	outs   dx,BYTE PTR ds:[esi]
  42d2b5:	fistp  QWORD PTR [ecx+0x42]
  42d2b8:	and    DWORD PTR ds:0x3a771d87,edi
  42d2be:	add    BYTE PTR [ecx],cl
  42d2c0:	fldz   
  42d2c2:	jle    0x42d2c0
  42d2c4:	int    0xfe
  42d2c6:	js     0x42d31d
  42d2c8:	push   ds
  42d2c9:	sti    
  42d2ca:	js     0x42d311
  42d2cc:	push   ds
  42d2cd:	repz fsub DWORD PTR [ebx]
  42d2d0:	bnd jnp 0x42d289
  42d2d3:	fdiv   QWORD PTR [eax+0x65]
  42d2d6:	les    edx,FWORD PTR [ebp+0x4c]
  42d2d9:	ins    DWORD PTR es:[edi],dx
  42d2da:	ds jne 0x42d2fb
  42d2dd:	imul   edi,eax,0xd20ca87
  42d2e3:	add    BYTE PTR [eax],al
  42d2e5:	clc    
  42d2e6:	fild   QWORD PTR [edx+ecx*8]
  42d2e9:	push   ds
  42d2ea:	loopne 0x42d368
  42d2ec:	dec    ecx
  42d2ed:	data16 aaa 
  42d2ef:	mov    cl,0x58
  42d2f1:	xchg   DWORD PTR [ecx+0x3eb1e25],eax
  42d2f7:	test   eax,0x83a96332
  42d2fc:	dec    ecx
  42d2fd:	data16 bnd jp 0x42d359
  42d301:	addr16 and edi,0xc7bde33e
  42d308:	inc    ecx
  42d309:	adc    al,0xa5
  42d30b:	lds    ebx,FWORD PTR [esi]
  42d30d:	repz js 0x42d2d5
  42d310:	push   ds
  42d311:	sar    DWORD PTR [eax+0x51],cl
  42d314:	sbb    al,0xa7
  42d316:	fbld   TBYTE PTR [ebp+0xb6c0a47]
  42d31c:	push   0xf6bf2ef0
  42d321:	add    DWORD PTR [edx+0x0],ebp
  42d324:	outs   dx,BYTE PTR ds:[esi]
  42d325:	push   ds
  42d326:	push   cs
  42d327:	jmp    0xea259766
  42d32c:	test   DWORD PTR [edx-0x7b],eax
  42d32f:	stos   BYTE PTR es:[edi],al
  42d330:	sbb    eax,0x99f6c9bf
  42d335:	jns    0x42d340
  42d337:	jmp    0xcd9892c1
  42d33c:	cmp    DWORD PTR [edi+0x1eb9c2c0],0x897f380e
  42d346:	lock mov ecx,0xe3759770
  42d34c:	outs   dx,DWORD PTR ds:[esi]
  42d34d:	add    DWORD PTR [ecx],ebx
  42d34f:	add    eax,0x710d4c07
  42d354:	fwait
  42d355:	xor    edi,eax
  42d357:	daa    
  42d358:	sbb    ebx,0x0
  42d35b:	ins    DWORD PTR es:[edi],dx
  42d35c:	pop    edx
  42d35d:	push   edi
  42d35e:	lock jmp 0xb92557a2
  42d364:	hlt    
  42d365:	pop    esp
  42d366:	lock jae 0x42d3dc
  42d369:	xor    esp,DWORD PTR [esi]
  42d36b:	pusha  
  42d36c:	mov    cl,0x4a
  42d36e:	jecxz  0x42d3e9
  42d370:	test   DWORD PTR [edx+0xa],eax
  42d373:	jae    0x42d3d0
  42d375:	xor    esp,DWORD PTR [esi]
  42d377:	popa   
  42d378:	cdq    
  42d379:	das    
  42d37a:	jecxz  0x42d3e9
  42d37c:	test   DWORD PTR [edx+0xa],eax
  42d37f:	arpl   bx,ax
  42d381:	xor    esp,DWORD PTR [esi]
  42d383:	je     0x42d3f6
  42d385:	inc    esi
  42d386:	in     eax,0xe2
  42d388:	add    bh,ch
  42d38a:	add    DWORD PTR [ecx],ebx
  42d38c:	or     eax,0x42174af9
  42d391:	xchg   edi,eax
  42d392:	rol    BYTE PTR [edi+0x0],0x38
  42d396:	ja     0x42d332
  42d398:	or     al,0x39
  42d39a:	mov    edx,0x46198a61
  42d39f:	test   DWORD PTR es:[ebx+0x58],esp
  42d3a3:	mov    BYTE PTR [esi+0x38],al
  42d3a6:	mov    esp,0x9e90f187
  42d3ab:	xchg   esi,eax
  42d3ad:	xchg   ebp,edx
  42d3af:	out    dx,al
  42d3b0:	jmp    FWORD PTR [edi]
  42d3b2:	fdiv   DWORD PTR [eax+0xad93c74]
  42d3b8:	and    al,0x1c
  42d3ba:	dec    esi
  42d3bb:	mov    edx,0x178c08c0
  42d3c0:	shr    BYTE PTR [ebx+eiz*4-0x21],0x83
  42d3c5:	das    
  42d3c6:	dec    ebp
  42d3c7:	out    0x3,eax
  42d3c9:	mov    WORD PTR [esi+0x30],?
  42d3cc:	mov    BYTE PTR [ecx-0x288076c3],bl
  42d3d2:	leave  
  42d3d3:	repz (bad)
  42d3d6:	and    eax,0xc710ffe0
  42d3db:	ret    0xe8ff
  42d3de:	enter  0xfb0,0x2b
  42d3e2:	add    eax,esp
  42d3e4:	jmp    eax
  42d3e6:	(bad)  
  42d3e7:	dec    edx
  42d3e8:	pop    ss
  42d3e9:	retf   
  42d3ea:	retf   
  42d3eb:	add    al,0x7
  42d3ed:	add    BYTE PTR [edi],ah
  42d3ef:	or     al,0x1d
  42d3f1:	jmp    0x368477
  42d3f6:	adc    eax,0x38241d0c
  42d3fb:	xor    bl,BYTE PTR ds:0x4ac498eb
  42d401:	pop    ss
  42d402:	dec    ebx
  42d403:	xlat   BYTE PTR ds:[ebx]
  42d404:	add    al,0x19
  42d406:	test   DWORD PTR [eax],0x59298a1d
  42d40c:	test   al,0x7f
  42d40e:	xchg   BYTE PTR [ecx+eax*4+0x1e],bl
  42d412:	push   edi
  42d413:	add    eax,0x4ffa23ad
  42d418:	lock out 0xfc,al
  42d41b:	call   0x6bb4f849
  42d420:	sbb    BYTE PTR [edx],ch
  42d422:	or     eax,0x468500a9
  42d427:	mov    eax,0x7fda86e3
  42d42c:	clc    
  42d42d:	xchg   BYTE PTR [ecx],bh
  42d42f:	add    DWORD PTR [eax+0x24],0xc97f9a7a
  42d436:	sbb    DWORD PTR [ebx+eax*4],edi
  42d439:	mov    edi,0x417e519a
  42d43e:	jno    0x42d3c7
  42d440:	mov    BYTE PTR [ebx],cl
  42d442:	mov    ah,bl
  42d444:	inc    ebx
  42d445:	adc    esi,eax
  42d447:	and    eax,0xde817af5
  42d44c:	clc    
  42d44d:	cli    
  42d44e:	jmp    0xbe5bbf
  42d453:	stos   BYTE PTR es:[edi],al
  42d454:	dec    ebx
  42d455:	push   es
  42d456:	je     0x42d400
  42d458:	rol    BYTE PTR [edi+0x4],1
  42d45b:	or     ebp,DWORD PTR [eax+ebx*1-0x1dc802dd]
  42d462:	pop    ds
  42d463:	or     eax,0x624bdfb5
  42d468:	mov    esi,DWORD PTR ds:0xbcb4c087
  42d46e:	test   dh,al
  42d470:	aaa    
  42d471:	add    BYTE PTR [esi+0x7de84c48],al
  42d477:	mov    ch,BYTE PTR [ecx-0x7c]
  42d47a:	inc    ecx
  42d47b:	jns    0x42d44a
  42d47d:	inc    edx
  42d47e:	adc    ecx,DWORD PTR [ecx]
  42d480:	pop    esp
  42d481:	sbb    edx,0x7eabe480
  42d487:	cli    
  42d488:	inc    edx
  42d489:	(bad)  
  42d48a:	sti    
  42d48b:	jno    0x42d45e
  42d48d:	dec    BYTE PTR [esi-0x3ca1d158]
  42d493:	aad    0x1f
  42d495:	ins    BYTE PTR es:[edi],dx
  42d496:	aaa    
  42d497:	mov    ds:0xa8d27c3a,al
  42d49c:	mov    BYTE PTR [ecx+0x12553f8e],dl
  42d4a2:	mov    BYTE PTR [ecx],al
  42d4a4:	into   
  42d4a5:	in     al,dx
  42d4a6:	(bad)  
  42d4a7:	(bad)  
  42d4a8:	sub    eax,0x3c7d89bf
  42d4ad:	jnp    0x42d4f8
  42d4af:	xchg   ebp,eax
  42d4b0:	dec    esp
  42d4b1:	mov    al,ds:0x66459cfa
  42d4b6:	outs   dx,DWORD PTR ds:[esi]
  42d4b7:	add    BYTE PTR [edi],bl
  42d4b9:	push   ebp
  42d4ba:	pop    es
  42d4bb:	mov    cs,edx
  42d4bd:	xor    dl,BYTE PTR [eax-0x2364ebf]
  42d4c3:	aas    
  42d4c4:	inc    eax
  42d4c5:	inc    esi
  42d4c6:	jecxz  0x42d514
  42d4c8:	and    BYTE PTR [eax],al
  42d4ca:	jecxz  0x42d4fb
  42d4cc:	push   ds
  42d4cd:	add    bl,ah
  42d4cf:	and    eax,DWORD PTR fs:[eax]
  42d4d2:	jecxz  0x42d4a4
  42d4d4:	sub    eax,DWORD PTR [eax]
  42d4d6:	jecxz  0x42d471
  42d4d8:	and    eax,DWORD PTR [eax]
  42d4da:	jecxz  0x42d4e7
  42d4dc:	sub    DWORD PTR [eax],eax
  42d4de:	jecxz  0x42d4dd
  42d4e0:	and    BYTE PTR [eax],al
  42d4e2:	jecxz  0x42d4d3
  42d4e4:	call   0xe124b7e8
  42d4e9:	jmp    edx
  42d4eb:	cmp    eax,0x64e2ffe9
  42d4f0:	loopne 0x42d4f1
  42d4f2:	loop   0x42d554
  42d4f4:	call   0xe0d6b7f8
  42d4f9:	jmp    edx
  42d4fb:	loop   0x42d4da
  42d4fd:	jmp    edx
  42d4ff:	sub    edx,ebx
  42d501:	dec    DWORD PTR [ecx]
  42d503:	jmp    0xe98e7d17
  42d508:	(bad)  
  42d509:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d50a:	dec    ebx
  42d50b:	jmp    0xe98e7ab9
  42d510:	lock test eax,0xaa1ce94b
  42d516:	dec    ebx
  42d517:	jmp    0xe98e7f38
  42d51c:	add    BYTE PTR [edx+ebp*4],cl
  42d51f:	dec    ebx
  42d520:	jmp    0xe98e7f31
  42d525:	cld    
  42d526:	test   eax,0xa9fce94b
  42d52b:	dec    ebx
  42d52c:	jmp    0xe98e7f14
  42d531:	fld    TBYTE PTR [ecx-0x562316b5]
  42d537:	dec    ebx
  42d538:	jmp    0xe98e7f28
  42d53d:	jecxz  0x42d4e8
  42d53f:	dec    ebx
  42d540:	jmp    0xe98e7f20
  42d545:	xor    ebp,DWORD PTR [edx-0x55d416b5]
  42d54b:	dec    ebx
  42d54c:	jmp    0xe98e7f74
  42d551:	test   eax,0x7ee94ba7
  42d556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d557:	dec    ebx
  42d558:	jmp    0xe98e7e69
  42d55d:	push   edx
  42d55e:	test   al,0x4b
  42d560:	jmp    0xe98e7dbd
  42d565:	es test al,0x4b
  42d568:	jmp    0xe98e7e33
  42d56d:	adc    al,0xa9
  42d56f:	dec    ebx
  42d570:	jmp    0xe98e7929
  42d575:	mov    al,0xa3
  42d577:	dec    ebx
  42d578:	jmp    0x8e7184
  42d57d:	lahf   
  42d57e:	out    dx,eax
  42d57f:	mov    al,ds:0x169f0042
  42d584:	mov    al,ds:0xa8f96f42
  42d589:	inc    edx
  42d58a:	outs   dx,DWORD PTR ds:[esi]
  42d58b:	dec    edi
  42d58c:	mov    eax,ds:0xbcec5f42
  42d591:	inc    edx
  42d592:	pop    edi
  42d593:	mov    ds:0x4f6f42b5,eax
  42d598:	mov    edx,0xbaca6f42
  42d59d:	inc    edx
  42d59e:	pop    edi
  42d59f:	int    0xba
  42d5a1:	inc    edx
  42d5a2:	pop    edi
  42d5a3:	mov    ax,ds:0xb5742f42
  42d5a9:	inc    edx
  42d5aa:	das    
  42d5ab:	idiv   DWORD PTR [edx-0x42c2e0be]
  42d5b1:	inc    edx
  42d5b2:	pop    ds
  42d5b3:	bsr    eax,DWORD PTR [edx+0x2f]
  42d5b7:	int3   
  42d5b8:	mov    eax,ds:0xb5722f42
  42d5bd:	inc    edx
  42d5be:	pop    ds
  42d5bf:	mov    ecx,0x991f42bc
  42d5c4:	mov    al,ds:0xa0a9ef42
  42d5c9:	inc    edx
  42d5ca:	out    dx,eax
  42d5cb:	mov    dh,0xa0
  42d5cd:	inc    edx
  42d5ce:	fisttp WORD PTR [ecx+edi*4+0x42]
  42d5d2:	(bad)  
  42d5d4:	mov    edx,0xbb25ef42
  42d5d9:	inc    edx
  42d5da:	out    dx,eax
  42d5db:	int    0xb9
  42d5dd:	inc    edx
  42d5de:	fcomip st,st(5)
  42d5e0:	mov    ecx,0xb99ddf42
  42d5e5:	inc    edx
  42d5e6:	add    BYTE PTR [edi-0x50bd4663],ch
  42d5ec:	popf   
  42d5ed:	mov    ecx,0xb99d9f42
  42d5f2:	inc    edx
  42d5f3:	lahf   
  42d5f4:	js     0xccf65c18
  42d5fa:	(bad)  
  42d5fb:	adc    eax,0x40b30127
  42d600:	jne    0x42d639
  42d602:	xchg   edi,eax
  42d604:	and    bl,BYTE PTR cs:[ecx+0x5a90d0e1]
  42d60b:	add    eax,0xa17406d4
  42d610:	mov    ds:0x5c69ffd9,eax
  42d615:	es aaa 
  42d617:	dec    esi
  42d618:	jo     0x42d5fb
  42d61a:	jle    0x42d662
  42d61c:	mov    BYTE PTR [esi],ah
  42d61e:	aaa    
  42d61f:	ds nop
  42d621:	or     DWORD PTR [esi-0x261e3bb],eax
  42d627:	jmp    0xee56e967
  42d62c:	pop    edx
  42d62d:	adc    DWORD PTR [eax],edx
  42d62f:	std    
  42d630:	mov    eax,ds:0x5fc01f04
  42d635:	mov    esi,edi
  42d637:	and    DWORD PTR [edi-0x63b9d0ff],ebp
  42d63d:	xor    edi,DWORD PTR [edi-0x40cae4ab]
  42d643:	mov    al,0xd4
  42d645:	xchg   ebp,eax
  42d646:	popa   
  42d647:	add    eax,0xfffcda
  42d64c:	jae    0x42d6b9
  42d64e:	es jg  0x42d6c1
  42d651:	dec    ebp
  42d652:	or     al,0x72
  42d654:	jg     0x42d6cf
  42d656:	push   es
  42d657:	adc    BYTE PTR [edx+0x62],bl
  42d65a:	fstp   TBYTE PTR [edi+0x1969c38]
  42d660:	jle    0x42d671
  42d662:	cdq    
  42d663:	out    0xf8,eax
  42d665:	nop
  42d666:	(bad)  
  42d667:	cli    
  42d668:	mov    ecx,0x46bff3b3
  42d66d:	inc    ecx
  42d66e:	int    0x52
  42d670:	std    
  42d671:	inc    edx
  42d672:	sub    esp,edi
  42d674:	and    esp,DWORD PTR [edx]
  42d676:	sbb    eax,0xed513404
  42d67b:	xlat   BYTE PTR ds:[ebx]
  42d67c:	ja     0x42d680
  42d67e:	jecxz  0x42d609
  42d680:	xchg   DWORD PTR [edi+ebx*1],edx
  42d683:	call   0xfe99bfd
  42d688:	stos   BYTE PTR es:[edi],al
  42d689:	inc    ebp
  42d68a:	mov    bl,0x5
  42d68c:	stc    
  42d68d:	into   
  42d68e:	(bad)  
  42d68f:	or     eax,DWORD PTR [esi-0x33041745]
  42d695:	xlat   BYTE PTR ds:[ebx]
  42d696:	in     eax,0x29
  42d698:	ja     0x42d684
  42d69a:	dec    ebx
  42d69b:	or     eax,0x1f6382a9
  42d6a0:	stos   BYTE PTR es:[edi],al
  42d6a1:	inc    esi
  42d6a2:	loop   0x42d6b2
  42d6a4:	repnz sbb DWORD PTR [ebp+0x47],0x25634486
  42d6ac:	xchg   ebp,eax
  42d6ad:	ret    0x456a
  42d6b0:	add    BYTE PTR [edi+0x3de84],al
  42d6b6:	add    edi,eax
  42d6b8:	mov    DWORD PTR [ecx-0x3e],edx
  42d6bb:	add    al,0x1e
  42d6bd:	xchg   edx,eax
  42d6be:	inc    edi
  42d6bf:	arpl   WORD PTR [ecx-0x7d302888],bx
  42d6c5:	lea    esp,[esi]
  42d6c7:	out    0x3,eax
  42d6c9:	lea    esi,[esi-0x3e3c62dc]
  42d6cf:	add    al,0xfa
  42d6d1:	mov    ds:0x6ca26272,eax
  42d6d6:	adc    al,0xb3
  42d6d8:	mov    WORD PTR [esi],?
  42d6da:	cmp    DWORD PTR [ebp-0x5cea79f8],esp
  42d6e0:	sub    ah,BYTE PTR [edx+0x7e4679f2]
  42d6e6:	mov    ebx,0x80f1028
  42d6eb:	or     bl,cl
  42d6ed:	or     BYTE PTR [ebx],al
  42d6ef:	sbb    dl,bh
  42d6f1:	mov    esp,0x7e2fc900
  42d6f6:	inc    ebx
  42d6f7:	or     ch,cl
  42d6f9:	test   DWORD PTR [ebp+0x111e1507],eax
  42d6ff:	or     al,BYTE PTR [edi]
  42d701:	std    
  42d702:	cli    
  42d703:	adc    eax,0x18149186
  42d708:	sub    DWORD PTR [edx+0xee5c5cf],ecx
  42d70e:	or     ah,0x17
  42d711:	call   DWORD PTR [edx-0x1f]
  42d714:	cli    
  42d715:	add    BYTE PTR [ebp-0x31a8f5be],al
  42d71b:	es add ch,al
  42d71e:	jno    0x42d764
  42d720:	pop    eax
  42d721:	inc    ecx
  42d722:	test   DWORD PTR [esi-0x12],esp
  42d725:	inc    esi
  42d726:	inc    DWORD PTR [ecx+0x428e2b4f]
  42d72c:	test   DWORD PTR [edi-0x52f87c73],ebp
  42d732:	mov    ecx,0x426c0a0f
  42d737:	aam    0x8
  42d739:	mov    ecx,0xfbaa3702
  42d73e:	lds    eax,FWORD PTR [edx-0xf]
  42d741:	xchg   edi,eax
  42d742:	adc    eax,0xe90ad068
  42d747:	dec    esp
  42d748:	enter  0x81e7,0xf9
  42d74c:	dec    ecx
  42d74d:	jmp    0xe1b2a818
  42d752:	test   ebp,edx
  42d754:	pop    ss
  42d755:	push   ebx
  42d756:	sub    al,0x9
  42d759:	push   ebx
  42d75a:	test   eax,ebp
  42d75c:	or     esi,edx
  42d75e:	rcl    BYTE PTR [edi-0x4675d6e5],1
  42d764:	inc    edi
  42d765:	add    bh,dl
  42d767:	enter  0x75b0,0xae
  42d76b:	sbb    BYTE PTR [edi],0xc0
  42d76e:	outs   dx,DWORD PTR ds:[esi]
  42d76f:	add    DWORD PTR [ebx],0x6f4a5eb7
  42d775:	clc    
  42d776:	shl    DWORD PTR [esi],cl
  42d778:	icebp  
  42d779:	xor    al,BYTE PTR [eax]
  42d77b:	out    dx,eax
  42d77c:	add    BYTE PTR [ebx],0xb6
  42d77f:	dec    si
  42d781:	outs   dx,DWORD PTR ds:[esi]
  42d782:	rcr    bl,0x5a
  42d785:	leave  
  42d786:	ret    
  42d787:	push   0xffffffb9
  42d789:	in     al,0x83
  42d78b:	adc    esp,DWORD PTR [ebx+0x5a]
  42d78e:	push   edi
  42d78f:	in     al,0xab
  42d791:	pop    ds
  42d792:	rcr    BYTE PTR [edi-0x281b8a41],0x18
  42d799:	or     bh,dh
  42d79b:	rcr    BYTE PTR [ebx-0x514f73f6],0x81
  42d7a2:	inc    ebp
  42d7a3:	ret    
  42d7a4:	rol    BYTE PTR [ebp-0x10],0xef
  42d7a8:	lods   eax,DWORD PTR ds:[esi]
  42d7a9:	adc    eax,0xa035e94
  42d7ae:	test   DWORD PTR [edi+0x38],ebp
  42d7b1:	(bad)  
  42d7b2:	and    dl,ch
  42d7b4:	mov    dh,0xf3
  42d7b6:	adc    eax,0x305233
  42d7bb:	xchg   esi,eax
  42d7bc:	or     dl,bh
  42d7be:	push   0x1b
  42d7c0:	fwait
  42d7c1:	cs push ss
  42d7c3:	sub    DWORD PTR [esi-0x592572c0],0xacefa0e8
  42d7cd:	repz test BYTE PTR [edi-0x1895c5c9],ch
  42d7d4:	mov    edi,0xb9aff045
  42d7d9:	inc    ebp
  42d7da:	in     al,0xb7
  42d7dc:	mov    ebx,0x8600fdf0
  42d7e1:	js     0x42d76c
  42d7e3:	mov    edi,0x41e5f5a
  42d7e8:	sti    
  42d7e9:	sbb    eax,0x26134f92
  42d7ee:	stos   BYTE PTR es:[edi],al
  42d7ef:	out    0x3a,eax
  42d7f1:	pop    ecx
  42d7f2:	xchg   edx,eax
  42d7f3:	cli    
  42d7f4:	or     bl,BYTE PTR [ecx+0x1dfb0c19]
  42d7fa:	stos   BYTE PTR es:[edi],al
  42d7fb:	out    0x74,eax
  42d7fd:	pop    edx
  42d7fe:	xchg   edx,eax
  42d7ff:	cli    
  42d800:	add    bl,BYTE PTR [ecx+0x551c1a1a]
  42d806:	push   ds
  42d807:	add    BYTE PTR [ecx],dh
  42d809:	enter  0x33fa,0x98
  42d80d:	sbb    eax,DWORD PTR [esi]
  42d80f:	mov    fs,si
  42d812:	dec    edx
  42d813:	lock (bad) 
  42d815:	fmul   st,st(4)
  42d817:	or     edx,ecx
  42d819:	in     al,0xfa
  42d81b:	das    
  42d81c:	js     0x42d7b9
  42d81e:	or     al,0x7f
  42d820:	inc    edx
  42d821:	push   esp
  42d822:	add    DWORD PTR [edx+ebp*2+0x4],0x54bfff3
  42d82a:	xor    eax,0x3c194f5a
  42d82f:	push   ebx
  42d830:	or     eax,0xfd6d9e0c
  42d835:	sbb    al,0x95
  42d837:	or     dh,al
  42d839:	sbb    ebp,DWORD PTR [edi-0x46]
  42d83c:	and    DWORD PTR [esp+ecx*1+0x0],ebx
  42d840:	or     eax,0xf89d25
  42d845:	adc    BYTE PTR [edx],bl
  42d847:	jle    0x42d85a
  42d849:	push   ds
  42d84a:	test   al,0x7f
  42d84c:	cli    
  42d84d:	add    DWORD PTR [ebp+0x5a],ebx
  42d850:	mov    edi,0x85934d1f
  42d855:	dec    edx
  42d856:	xchg   DWORD PTR [eax],ecx
  42d858:	xchg   DWORD PTR [ebx-0x5e0decbe],ebp
  42d85e:	inc    edx
  42d85f:	jnp    0x42d8a2
  42d861:	fdivr  DWORD PTR [ebx-0x457e1fe2]
  42d867:	sub    BYTE PTR [edi],al
  42d869:	sti    
  42d86a:	add    al,0xdf
  42d86c:	cdq    
  42d86d:	add    eax,edx
  42d86f:	cs loopne 0x42d807
  42d872:	inc    edx
  42d873:	imul   esi,DWORD PTR [ecx],0xffffff87
  42d876:	(bad)  
  42d877:	shr    BYTE PTR ds:0xe00e4d92,1
  42d87d:	jns    0x42d871
  42d87f:	(bad)  
  42d880:	mov    dl,0x18
  42d882:	xchg   dh,ah
  42d884:	scas   al,BYTE PTR es:[edi]
  42d885:	mov    bl,BYTE PTR [edx-0x1e]
  42d888:	call   0xcb69:0xf01c4d8c
  42d88f:	aad    0x99
  42d891:	jl     0x42d885
  42d893:	arpl   cx,ax
  42d895:	cdq    
  42d896:	hlt    
  42d897:	pop    edi
  42d898:	mov    dl,0xe8
  42d89a:	xchg   dh,dh
  42d89c:	cmp    bh,BYTE PTR [eax+eax*4-0xa4bfc22]
  42d8a3:	imul   ebx,DWORD PTR [ebx+0xbd54d0a],0x0
  42d8aa:	add    ebp,DWORD PTR [ecx-0x52]
  42d8ad:	frstor [esi+0x41]
  42d8b0:	pop    esp
  42d8b1:	rol    DWORD PTR [edx],1
  42d8b3:	imul   ebp,DWORD PTR [esi-0x1afafd2f],0xd7d5e980
  42d8bd:	stos   DWORD PTR es:[edi],eax
  42d8be:	pop    esi
  42d8bf:	pusha  
  42d8c0:	or     eax,0x5d52009a
  42d8c5:	xchg   ecx,eax
  42d8c6:	xchg   ebp,eax
  42d8c7:	es mov edx,ebx
  42d8ca:	xchg   edx,eax
  42d8cb:	inc    edx
  42d8cc:	jecxz  0x42d900
  42d8ce:	or     esi,ecx
  42d8d0:	(bad)  
  42d8d1:	out    dx,eax
  42d8d2:	push   edi
  42d8d3:	pop    edx
  42d8d4:	or     esp,esp
  42d8d6:	lds    eax,FWORD PTR [edi-0x10]
  42d8d9:	(bad)
  42d8dd:	aas    
  42d8de:	xor    bh,cl
  42d8e0:	jmp    0x42d8be
  42d8e2:	call   FWORD PTR [esi]
  42d8e4:	retf   0xeac2
  42d8e7:	mov    ecx,0x6585993c
  42d8ec:	adc    edx,DWORD PTR [ecx-0x26]
  42d8ef:	aad    0x9
  42d8f1:	jmp    0xdb8226c
  42d8f6:	mov    dh,0x64
  42d8f8:	jno    0x42d8a3
  42d8fa:	cmovs  eax,DWORD PTR [esi+0x8510c2]
  42d901:	je     0x42d8c5
  42d903:	dec    edx
  42d904:	ror    ebx,0xc4
  42d907:	out    0x4f,eax
  42d909:	stos   DWORD PTR es:[edi],eax
  42d90a:	xchg   BYTE PTR [edx+0x57],al
  42d90d:	jb     0x42d90f
  42d90f:	cs int 0xdd
  42d912:	loope  0x42d916
  42d914:	iret   
  42d915:	std    
  42d916:	call   0x83b992c2
  42d91b:	cli    
  42d91c:	push   es
  42d91d:	(bad)  
  42d91f:	xchg   ebx,eax
  42d920:	in     al,0x6
  42d922:	shl    DWORD PTR [edi-0x65beb947],0x63
  42d929:	sbb    bl,al
  42d92b:	pop    eax
  42d92c:	hlt    
  42d92d:	arpl   cx,bx
  42d92f:	push   ds
  42d930:	xlat   BYTE PTR ds:[ebx]
  42d931:	std    
  42d932:	(bad)  
  42d933:	or     al,0x7
  42d935:	loop   0x42d99b
  42d937:	jno    0x42d996
  42d939:	pop    ecx
  42d93a:	inc    ecx
  42d93b:	and    DWORD PTR [esi-0x12],ebp
  42d93e:	es jo  0x42d976
  42d941:	jg     0x42d8e7
  42d943:	in     eax,dx
  42d944:	sti    
  42d945:	lock pushf 
  42d947:	jge    0x42d9a3
  42d949:	push   ecx
  42d94a:	sub    edi,ebp
  42d94c:	dec    eax
  42d94d:	test   DWORD PTR [eax],eax
  42d94f:	scas   eax,DWORD PTR es:[edi]
  42d950:	xor    cl,BYTE PTR [edi]
  42d952:	bound  si,DWORD PTR [eax-0xd17ec84]
  42d959:	retf   0xd850
  42d95c:	cmp    al,0x1a
  42d95e:	inc    DWORD PTR [edx+0x3e]
  42d961:	loop   0x42d9a3
  42d963:	das    
  42d964:	stos   DWORD PTR es:[edi],eax
  42d965:	repz test BYTE PTR [edi],bl
  42d968:	cmp    al,0x7
  42d96a:	xor    ebx,DWORD PTR [edi]
  42d96c:	add    cl,ch
  42d96e:	add    bh,BYTE PTR [edi+edi*2-0x54ff3d3f]
  42d975:	aas    
  42d976:	inc    ecx
  42d977:	(bad)  
  42d978:	mov    al,ds:0x9f409cbf
  42d97d:	jbe    0x42d956
  42d97f:	push   esi
  42d980:	push   ss
  42d981:	or     al,BYTE PTR [edx]
  42d983:	mov    DWORD PTR [eax+0x3a],ebx
  42d986:	int    0x47
  42d988:	mov    ds:0x9f409cb7,eax
  42d98d:	pop    ss
  42d98e:	loop   0x42d91b
  42d990:	scas   eax,DWORD PTR es:[edi]
  42d991:	inc    esi
  42d992:	jg     0x42d9db
  42d994:	push   ebx
  42d995:	mov    bh,0x53
  42d997:	sbb    al,0xe6
  42d999:	or     ch,BYTE PTR [edx]
  42d99b:	mov    DWORD PTR [eax+0x62],edi
  42d99e:	sbb    DWORD PTR [edi+0x77],0x5f47cc16
  42d9a5:	stos   BYTE PTR es:[edi],al
  42d9a6:	repz adc eax,0x305067
  42d9ac:	stos   BYTE PTR es:[edi],al
  42d9ad:	xor    bl,BYTE PTR [esi]
  42d9af:	mov    eax,0xa3f17
  42d9b4:	xlat   BYTE PTR ds:[ebx]
  42d9b5:	idiv   BYTE PTR [eax]
  42d9b7:	(bad)  
  42d9b8:	js     0x42d972
  42d9ba:	jnp    0x42d9e0
  42d9bc:	stc    
  42d9bd:	mov    bh,0x53
  42d9bf:	sub    BYTE PTR [ecx+0x2],dh
  42d9c2:	push   cs
  42d9c3:	add    DWORD PTR [eax+0x2],esp
  42d9c6:	sub    bh,BYTE PTR [edx]
  42d9c8:	xchg   BYTE PTR [ecx+0xc],bl
  42d9cb:	add    ch,bh
  42d9cd:	and    ebp,DWORD PTR [esi]
  42d9cf:	mov    edi,0x86a8d05b
  42d9d4:	dec    ebx
  42d9d5:	push   ecx
  42d9d6:	test   ebx,ebp
  42d9d8:	add    BYTE PTR [edx+0x9e839ab],dl
  42d9de:	jno    0x42d972
  42d9e0:	cli    
  42d9e1:	or     eax,0x89f18a69
  42d9e6:	fistp  DWORD PTR [edi+edi*8-0x2f]
  42d9ea:	pop    eax
  42d9eb:	mov    edi,ecx
  42d9ed:	leave  
  42d9ee:	imul   esi,DWORD PTR [eax-0x5b],0xffffff86
  42d9f2:	pop    ecx
  42d9f3:	or     al,0x7f
  42d9f5:	and    eax,DWORD PTR [ebp+0x613bfb05]
  42d9fb:	fstp   TBYTE PTR [edi-0x5961e205]
  42da01:	in     eax,dx
  42da02:	out    dx,eax
  42da03:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  42da05:	or     eax,0x734e9da3
  42da0a:	mov    bl,0x98
  42da0c:	cs mov ecx,esp
  42da0f:	dec    edx
  42da10:	in     al,0xbd
  42da12:	cwde   
  42da13:	or     BYTE PTR [ebx+eax*1+0x3000c5c],al
  42da1a:	pop    eax
  42da1b:	mov    esi,0x82c3c388
  42da20:	inc    esp
  42da21:	push   esi
  42da22:	mov    WORD PTR [esi],ds
  42da24:	sti    
  42da25:	rcl    DWORD PTR [ebx+0x1f],cl
  42da28:	call   0xfadb1cd0
  42da2d:	call   FWORD PTR [esi-0x78b6c958]
  42da33:	or     ecx,DWORD PTR [ecx+0x44830bbb]
  42da39:	lods   al,BYTE PTR cs:[esi]
  42da3b:	push   ds
  42da3c:	sti    
  42da3d:	add    BYTE PTR [ebx+0x23e92463],dh
  42da43:	inc    ebx
  42da44:	jecxz  0x42da49
  42da46:	cs xor al,0xda
  42da49:	xchg   ebp,eax
  42da4a:	or     al,0xbc
  42da4c:	popf   
  42da4d:	(bad)  
  42da4e:	push   eax
  42da4f:	adc    DWORD PTR [ebp+0xac80f02],0xa336b88b
  42da59:	sub    al,dh
  42da5b:	sub    ah,BYTE PTR [esi+0x13]
  42da5e:	jle    0x42da52
  42da60:	or     dh,BYTE PTR [eax]
  42da62:	out    0x47,al
  42da64:	out    0x7f,eax
  42da66:	sbb    edi,ecx
  42da68:	out    dx,eax
  42da69:	sub    DWORD PTR [esi-0x49],ebp
  42da6c:	sbb    eax,0x23bd39a0
  42da71:	or     BYTE PTR [ecx],ch
  42da73:	sub    dl,0x2
  42da76:	test   dl,dh
  42da78:	scas   eax,DWORD PTR es:[edi]
  42da79:	lock popa 
  42da7b:	xor    BYTE PTR [ebx],ah
  42da7d:	add    al,0x29
  42da7f:	jle    0x42da4f
  42da81:	xchg   esi,eax
  42da82:	pusha  
  42da83:	ss push ebx
  42da85:	add    al,0xa1
  42da87:	sub    al,0x90
  42da89:	adc    BYTE PTR [edx-0x755cbfa6],ch
  42da8f:	dec    ecx
  42da90:	jg     0x42daa2
  42da92:	jb     0x42daee
  42da94:	push   0x6f497aa3
  42da99:	adc    BYTE PTR [edx+0x5a],bh
  42da9c:	push   eax
  42da9d:	mov    ds:0xc3b4496a,eax
  42daa2:	add    BYTE PTR [eax+ebp*8+0x4285c139],bh
  42daa9:	fld    QWORD PTR [edi]
  42daab:	(bad)  
  42daad:	mov    dl,0x42
  42daaf:	xchg   BYTE PTR [edx+0x16],bl
  42dab2:	je     0x42daf5
  42dab4:	dec    ecx
  42dab5:	jnp    0x42da53
  42dab7:	mov    eax,0xb1032edf
  42dabc:	fisttp WORD PTR [ecx]
  42dabe:	dec    ebp
  42dabf:	test   DWORD PTR [edi+0x420ce540],esi
  42dac5:	icebp  
  42dac6:	mov    ecx,0x576c019
  42dacb:	sub    al,0x59
  42dacd:	jl     0x42da5c
  42dacf:	pop    esp
  42dad0:	push   esp
  42dad1:	adc    edx,ebp
  42dad3:	nop
  42dad4:	cmp    al,BYTE PTR [ebp-0x2b420659]
  42dada:	jg     0x42dad6
  42dadc:	dec    ebx
  42dadd:	aaa    
  42dade:	idiv   BYTE PTR [ecx+0x36]
  42dae1:	test   DWORD PTR [ebp+ecx*4-0xe37aca6],esp
  42dae8:	dec    ebx
  42dae9:	xchg   BYTE PTR [ecx+0x37851881],ch
  42daef:	jle    0x42dab0
  42daf1:	aam    0x4f
  42daf3:	mov    ah,0x4b
  42daf5:	ja     0x42dae8
  42daf7:	adc    cl,dh
  42daf9:	std    
  42dafa:	jno    0x42db6d
  42dafc:	cmp    ah,dl
  42dafe:	sub    ch,ah
  42db00:	inc    ebp
  42db01:	lock fs retf 0x12cd
  42db06:	jb     0x42db08
  42db08:	push   eax
  42db09:	cs xchg edx,eax
  42db0c:	js     0x42db3e
  42db0e:	icebp  
  42db0f:	pop    ds
  42db10:	xchg   edx,eax
  42db11:	dec    ebx
  42db12:	jbe    0x42daf1
  42db14:	push   cs
  42db15:	inc    DWORD PTR [ecx]
  42db17:	xchg   ecx,eax
  42db18:	push   0x63
  42db1a:	out    dx,al
  42db1b:	jle    0x42db0e
  42db1d:	xchg   DWORD PTR [ebp-0x1f],esi
  42db20:	push   es
  42db21:	imul   ebp
  42db23:	outs   dx,BYTE PTR ds:[esi]
  42db24:	mov    edx,0xf2fbe542
  42db29:	(bad)  
  42db2a:	in     eax,0x52
  42db2c:	(bad)  
  42db2d:	sbb    dl,cl
  42db2f:	test   eax,0x4166c146
  42db34:	pop    es
  42db35:	imul   ebp
  42db37:	add    al,al
  42db39:	je     0x42daeb
  42db3b:	call   0x339908
  42db40:	pop    ebp
  42db41:	or     dl,BYTE PTR ss:[esi-0x8]
  42db45:	mov    edx,0xdc1afff9
  42db4a:	sbb    DWORD PTR [eax+0x1f],eax
  42db4d:	mov    ebx,0x732debf8
  42db52:	mov    al,0x40
  42db54:	mov    esp,0x7bc7859e
  42db59:	pop    esp
  42db5a:	push   0xf
  42db5c:	mov    cl,0x7b
  42db5e:	jge    0x42dba6
  42db60:	int    0x25
  42db62:	jno    0x42db25
  42db64:	cs adc al,0x6c
  42db67:	mov    edi,edx
  42db69:	scas   al,BYTE PTR es:[edi]
  42db6a:	adc    eax,0x3ce00a0
  42db6f:	or     al,BYTE PTR [ebx+0x217642b7]
  42db75:	sub    al,0xab
  42db77:	or     al,0x74
  42db79:	mov    ds:0x7a02f8c2,eax
  42db7e:	inc    edi
  42db7f:	cmp    BYTE PTR [esi-0x31],al
  42db82:	xor    BYTE PTR [eax],al
  42db84:	(bad)  
  42db85:	imul   ecx,DWORD PTR [esi-0x7a],0xf1c39f4e
  42db8c:	sbb    dh,BYTE PTR [ebx-0x7f]
  42db8f:	push   ds
  42db90:	rcl    BYTE PTR [eax+0x10],0xb0
  42db94:	add    al,0x6f
  42db96:	mov    edx,0xc073244c
  42db9b:	inc    edx
  42db9c:	adc    dh,dh
  42db9e:	sti    
  42db9f:	add    eax,0x1f4aa18d
  42dba4:	imul   BYTE PTR [eax]
  42dba6:	add    eax,DWORD PTR [edx]
  42dba8:	add    eax,0x3b0a436f
  42dbad:	mov    eax,ds:0x86890738
  42dbb2:	imul   esp,eax,0x44e269e6
  42dbb8:	or     al,0xd
  42dbba:	xchg   edx,eax
  42dbbb:	add    al,0x2f
  42dbbd:	push   esp
  42dbbe:	inc    esp
  42dbbf:	enter  0x9773,0x77
  42dbc3:	shl    DWORD PTR [eax],cl
  42dbc5:	fwait
  42dbc6:	pusha  
  42dbc7:	dec    edx
  42dbc8:	bound  ebx,QWORD PTR [edi-0x56]
  42dbcb:	or     dh,BYTE PTR [ebx+ecx*4-0x24]
  42dbcf:	retf   
  42dbd0:	std    
  42dbd1:	add    BYTE PTR [eax+eax*2],bl
  42dbd4:	test   BYTE PTR [edi-0x6a],cl
  42dbd7:	and    BYTE PTR [ebp+0x14],cl
  42dbda:	xchg   DWORD PTR [ecx+0xc],ebx
  42dbdd:	add    BYTE PTR [esi],dh
  42dbdf:	pop    edx
  42dbe0:	mov    eax,ds:0xa8e453b0
  42dbe5:	jle    0x42dbd1
  42dbe7:	push   eax
  42dbe8:	mov    ch,bl
  42dbea:	jp     0x42dc47
  42dbec:	or     al,0x0
  42dbee:	xor    eax,0x7a74710f
  42dbf3:	or     cl,bl
  42dbf5:	cli    
  42dbf6:	(bad)  
  42dbf8:	loop   0x42dc15
  42dbfa:	jg     0x42dbfb
  42dbfc:	stc    
  42dbfd:	or     cl,BYTE PTR [ebx]
  42dbff:	dec    edi
  42dc00:	add    eax,0x43e48600
  42dc05:	and    BYTE PTR [ebx+0x59],ah
  42dc08:	or     al,0xa0
  42dc0a:	xchg   BYTE PTR [eax-0x7d],dl
  42dc0d:	daa    
  42dc0e:	xchg   DWORD PTR [ecx+0xc],ebx
  42dc11:	cmp    eax,0xc5a86
  42dc16:	xchg   ecx,eax
  42dc17:	fsqrt  
  42dc19:	add    BYTE PTR [esi-0x5dbe76a5],al
  42dc1f:	sub    ebx,DWORD PTR [ebp+0x41e27e74]
  42dc25:	and    al,0xa6
  42dc27:	out    0x41,al
  42dc29:	and    al,0xae
  42dc2b:	inc    edx
  42dc2c:	mov    bl,0x7c
  42dc2e:	int    0x1e
  42dc30:	or     edi,DWORD PTR [ebp-0x33]
  42dc33:	push   ds
  42dc34:	idiv   DWORD PTR [eax+eax*1-0x43]
  42dc38:	push   ds
  42dc39:	add    ebx,DWORD PTR [ebx+ebp*4+0xa93476d]
  42dc40:	sbb    edi,0xffffff87
  42dc43:	xor    eax,0xb503e343
  42dc48:	in     eax,dx
  42dc49:	int3   
  42dc4a:	push   es
  42dc4b:	mov    ch,0xd8
  42dc4d:	fistp  WORD PTR [ebx]
  42dc4f:	xchg   BYTE PTR [edx-0x1d],al
  42dc52:	cmp    edx,0xfffffffe
  42dc55:	mov    esi,0xf54551cb
  42dc5a:	ror    DWORD PTR [ebx+0x457ce302],cl
  42dc60:	push   ds
  42dc61:	fild   WORD PTR [esi-0x7818ba0f]
  42dc67:	push   ds
  42dc68:	inc    ebx
  42dc69:	jecxz  0x42dc6e
  42dc6b:	ss mov bh,0x1e
  42dc6e:	call   0xcf1dcef4
  42dc73:	fs inc esp
  42dc75:	xlat   BYTE PTR ds:[ebx]
  42dc76:	xchg   DWORD PTR [ecx],eax
  42dc78:	rol    BYTE PTR [edx],1
  42dc7a:	xchg   ebx,eax
  42dc7b:	xor    eax,0x9a92f71e
  42dc80:	mov    ds:0xb8643d4,al
  42dc85:	aaa    
  42dc86:	call   0x89aa1200
  42dc8b:	cdq    
  42dc8c:	inc    ebp
  42dc8d:	loop   0x42dc21
  42dc8f:	adc    eax,0x7292f71e
  42dc94:	dec    esi
  42dc95:	repnz inc ebx
  42dc97:	xchg   BYTE PTR [ecx+0x1c],bl
  42dc9a:	int    0x0
  42dc9c:	std    
  42dc9d:	push   ds
  42dc9e:	iret   
  42dc9f:	jle    0x42dc70
  42dca1:	and    bh,BYTE PTR [eax+edx*8+0x75]
  42dca5:	xor    cl,BYTE PTR [edx]
  42dca7:	sub    DWORD PTR [edx+0x716e07ce],ecx
  42dcad:	push   ds
  42dcae:	push   ss
  42dcaf:	data16 or al,0xf4
  42dcb2:	arpl   cx,bp
  42dcb4:	imul   eax,DWORD PTR [edx+0x64],0xffffffed
  42dcb8:	adc    al,0xd1
  42dcba:	and    eax,0x8a2e1509
  42dcbf:	fadd   st,st(5)
  42dcc1:	inc    edx
  42dcc2:	test   DWORD PTR [ecx],esp
  42dcc4:	(bad)  
  42dcc5:	imul   esi,DWORD PTR [ebp-0x5b],0xfffffff4
  42dcc9:	shr    BYTE PTR [ecx],cl
  42dccb:	bound  ebx,QWORD PTR [ecx+0x1e]
  42dcce:	sub    bh,BYTE PTR [edx+0x1eee6aed]
  42dcd4:	hlt    
  42dcd5:	ror    cl,0x9d
  42dcd8:	test   BYTE PTR [ecx+0x75],cl
  42dcdb:	(bad)
  42dcde:	inc    ebp
  42dcdf:	int    0xe9
  42dce1:	hlt    
  42dce2:	pop    ecx
  42dce3:	adc    DWORD PTR [edi],ebx
  42dce5:	add    eax,0x499bf6f1
  42dcea:	fsubr  DWORD PTR [edx-0x77]
  42dced:	push   ds
  42dcee:	sbb    ch,cl
  42dcf0:	push   edx
  42dcf1:	push   cs
  42dcf2:	stos   BYTE PTR es:[edi],al
  42dcf3:	sti    
  42dcf4:	inc    ebp
  42dcf5:	inc    edx
  42dcf6:	jbe    0x42dce7
  42dcf8:	push   ss
  42dcf9:	shl    DWORD PTR ds:0x8c7316f9,1
  42dcff:	inc    ebp
  42dd00:	add    BYTE PTR [esi-0x45caf5c8],bl
  42dd06:	ret    
  42dd07:	ins    DWORD PTR es:[edi],dx
  42dd08:	or     eax,0xf8754986
  42dd0d:	not    al
  42dd0f:	and    eax,0xe472f6f5
  42dd14:	shl    BYTE PTR [edx+0x6e153247],1
  42dd1a:	xor    al,0x76
  42dd1c:	jecxz  0x42dd34
  42dd1e:	shl    BYTE PTR ds:0x15b34f00,1
  42dd24:	mov    al,ds:0x390a004d
  42dd29:	pop    ebx
  42dd2a:	pop    esp
  42dd2b:	add    al,0x74
  42dd2d:	ds mov edi,0xb35b2474
  42dd33:	jl     0x42dd3f
  42dd35:	test   al,0x2a
  42dd37:	es or  al,0xd8
  42dd3a:	dec    ebx
  42dd3b:	nop
  42dd3c:	adc    ch,bh
  42dd3e:	aas    
  42dd3f:	push   ebp
  42dd40:	pop    esi
  42dd41:	scas   eax,DWORD PTR es:[edi]
  42dd42:	aas    
  42dd43:	pop    ecx
  42dd44:	mov    eax,edx
  42dd46:	adc    esi,DWORD PTR [eax-0x76f5d0f8]
  42dd4c:	icebp  
  42dd4d:	push   0x79e80628
  42dd52:	xchg   ebx,eax
  42dd53:	in     eax,dx
  42dd54:	call   FWORD PTR [eax+ebx*1+0x186c0006]
  42dd5b:	add    al,BYTE PTR [eax]
  42dd5d:	sub    DWORD PTR [edi-0x79],edi
  42dd60:	inc    ecx
  42dd61:	idiv   DWORD PTR [esi-0x79]
  42dd64:	push   esp
  42dd65:	add    bl,al
  42dd67:	cmp    ebx,DWORD PTR [ebx+ebp*2+0x7d]
  42dd6b:	push   esi
  42dd6c:	pop    ebx
  42dd6d:	mov    edx,esi
  42dd6f:	(bad)  
  42dd70:	dec    ebx
  42dd71:	or     BYTE PTR [esi+edi*2],dh
  42dd74:	sbb    BYTE PTR [ebp+0xe893a30],cl
  42dd7a:	lods   al,BYTE PTR ds:[esi]
  42dd7b:	nop
  42dd7c:	out    dx,eax
  42dd7d:	rcl    BYTE PTR [edi+ecx*4+0x53a0b5e],0x12
  42dd85:	push   edx
  42dd86:	xlat   BYTE PTR ds:[ebx]
  42dd87:	mov    ch,0xd2
  42dd89:	std    
  42dd8a:	fsub   DWORD PTR [esi-0x4410ce12]
  42dd90:	mov    al,0x74
  42dd92:	cwde   
  42dd93:	mov    dl,0x43
  42dd95:	or     BYTE PTR [edx+esi*1],dl
  42dd98:	add    ch,BYTE PTR [ebx-0x7a]
  42dd9b:	lods   al,BYTE PTR ds:[esi]
  42dd9c:	in     al,0x52
  42dd9e:	outs   dx,BYTE PTR ds:[esi]
  42dd9f:	jle    0x42dd40
  42dda1:	cld    
  42dda2:	jno    0x42ddc0
  42dda4:	cmp    al,0xbe
  42dda6:	sbb    BYTE PTR [ecx+0x37],0x87
  42ddaa:	jb     0x42dd84
  42ddac:	test   al,0xf7
  42ddae:	mov    ch,0x2e
  42ddb0:	xor    al,0x53
  42ddb2:	fcomp  QWORD PTR [edx+0x14]
  42ddb5:	add    dl,dl
  42ddb7:	sub    esp,ebp
  42ddb9:	out    0x86,eax
  42ddbb:	add    BYTE PTR [eax-0x77fef206],al
  42ddc1:	in     al,dx
  42ddc2:	mov    ebx,0xbbe74c58
  42ddc7:	icebp  
  42ddc8:	fucomi st,st(3)
  42ddca:	add    BYTE PTR [ebx],ah
  42ddcc:	or     al,0x89
  42ddce:	mov    edi,0xf10e5592
  42ddd3:	adc    DWORD PTR [esi-0x80],eax
  42ddd6:	shufps xmm3,XMMWORD PTR [ecx+0x3c],0xfb
  42dddb:	fwait
  42dddc:	pop    ecx
  42dddd:	sti    
  42ddde:	aas    
  42dddf:	xchg   al,ah
  42dde1:	xlat   BYTE PTR ds:[ebx]
  42dde2:	setne  BYTE PTR [ecx+0x67feb70c]
  42dde9:	or     al,0x0
  42ddeb:	xor    eax,0x14fbd64c
  42ddf0:	cwde   
  42ddf1:	or     al,0xfb
  42ddf3:	mov    eax,0x86010b9b
  42ddf8:	pop    ecx
  42ddf9:	xchg   ebx,eax
  42ddfa:	or     DWORD PTR [esi-0x46053dfa],ebp
  42de00:	pop    es
  42de01:	xor    DWORD PTR [edx+esi*4],0xa9004cc6
  42de08:	stos   BYTE PTR es:[edi],al
  42de09:	(bad)
  42de0d:	xor    ch,al
  42de0f:	sub    eax,0x55000c63
  42de14:	inc    edx
  42de15:	mov    ds:0x4be52c2f,eax
  42de1a:	jnp    0x42de86
  42de1c:	mov    al,ds:0x978608a3
  42de21:	dec    esi
  42de22:	and    BYTE PTR [edx+0x61a062ce],ch
  42de28:	inc    edi
  42de29:	loope  0x42de2e
  42de2b:	shl    DWORD PTR [ebp-0x64],1
  42de2e:	xor    eax,DWORD PTR [eax]
  42de30:	pop    ebp
  42de31:	pop    eax
  42de32:	pop    ebp
  42de33:	hlt    
  42de34:	xchg   ecx,eax
  42de35:	inc    edx
  42de36:	mov    cl,0x8e
  42de38:	jb     0x42de7c
  42de3a:	repnz inc ebx
  42de3c:	xchg   BYTE PTR [edx+eiz*8+0x17b6871b],ch
  42de43:	in     eax,dx
  42de44:	sub    DWORD PTR [ebx-0x33d36ea5],edi
  42de4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42de4b:	pop    ds
  42de4c:	pop    ecx
  42de4d:	add    eax,0x268fbaf
  42de52:	mov    ds:0xe1431a9c,al
  42de57:	add    esi,DWORD PTR [ebp+edx*4-0x6cf5b6a2]
  42de5e:	mov    edx,esp
  42de60:	and    DWORD PTR [eax+eax*1-0x64],0x8f072c98
  42de68:	cli    
  42de69:	neg    DWORD PTR [edi-0x75]
  42de6c:	fadd   QWORD PTR [ecx+0xa]
  42de6f:	outs   dx,DWORD PTR ds:[esi]
  42de70:	jnp    0x42deb3
  42de72:	loope  0x42de7c
  42de74:	add    BYTE PTR [ecx+eiz*8+0x3],al
  42de78:	pusha  
  42de79:	push   esi
  42de7a:	xor    DWORD PTR [ebx],esi
  42de7c:	adc    edi,DWORD PTR [eax+0x41c1831d]
  42de82:	retf   0x94fb
  42de85:	inc    eax
  42de86:	leave  
  42de87:	mov    cl,ch
  42de89:	ror    dh,0x7a
  42de8c:	(bad)  
  42de8d:	xchg   edx,eax
  42de8e:	or     al,BYTE PTR [ecx+0x2]
  42de91:	out    dx,al
  42de92:	dec    ebx
  42de93:	jmp    0x6f09e498
  42de98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42de99:	clc    
  42de9a:	cmp    al,0x5b
  42de9c:	xchg   ecx,eax
  42de9d:	ins    BYTE PTR es:[edi],dx
  42de9e:	push   ss
  42de9f:	lock xchg esi,eax
  42dea1:	push   cs
  42dea2:	add    DWORD PTR [eax],eax
  42dea4:	je     0x42deeb
  42dea6:	ja     0x42de73
  42dea8:	cld    
  42dea9:	push   0x70
  42deab:	retf   0xe307
  42deae:	(bad)  
  42deaf:	outs   dx,BYTE PTR ds:[esi]
  42deb0:	je     0x42deba
  42deb2:	cmp    al,0xb2
  42deb4:	jg     0x42de40
  42deb6:	inc    edx
  42deb7:	or     dh,BYTE PTR [esi+edi*8-0x36]
  42debb:	repz pop esi
  42debd:	adc    cl,cl
  42debf:	adc    ch,BYTE PTR [ecx+0x5cf4b77a]
  42dec5:	(bad)  
  42dec6:	mov    esp,0x90f846ed
  42decb:	out    dx,eax
  42decc:	aam    0x65
  42dece:	push   ecx
  42decf:	dec    edx
  42ded0:	jmp    0x2cb1a4db
  42ded5:	add    BYTE PTR [ebx+ebx*2],bh
  42ded8:	es push cs
  42deda:	rcr    DWORD PTR [ecx+ebp*4],0x85
  42dede:	retf   
  42dedf:	inc    ebp
  42dee0:	cdq    
  42dee1:	sbb    eax,0xce35d
  42dee6:	(bad)
  42dee9:	lahf   
  42deea:	xchg   ebp,eax
  42deeb:	jge    0x42df61
  42deed:	std    
  42deee:	clc    
  42deef:	mov    eax,ds:0xe24285e9
  42def4:	pop    ebp
  42def5:	mov    ah,0x3b
  42def7:	lock jb 0x42defa
  42defa:	mov    cl,0x50
  42defc:	sbb    ebp,DWORD PTR [ecx]
  42defe:	mov    bh,cl
  42df00:	ret    0x85e9
  42df03:	inc    edx
  42df04:	pop    ebx
  42df05:	into   
  42df06:	fnstcw WORD PTR [edi*4-0xcb9a400]
  42df0d:	(bad)  
  42df0e:	xor    cl,BYTE PTR [ebx+0x38]
  42df11:	cmp    ebp,eax
  42df13:	pop    eax
  42df14:	cmp    cl,BYTE PTR [ebx+0x447d566a]
  42df1a:	lahf   
  42df1b:	inc    edx
  42df1c:	add    DWORD PTR [ebp-0x61],0xe27076cd
  42df23:	(bad)  
  42df24:	jae    0x42df23
  42df26:	add    dh,cl
  42df28:	aas    
  42df29:	push   0x5e
  42df2b:	rol    DWORD PTR [esi-0x7c],0x7f
  42df2f:	mov    edi,0xde7fe846
  42df34:	rol    ch,cl
  42df36:	loopne 0x42df05
  42df38:	inc    eax
  42df39:	jmp    FWORD PTR [edx-0x2e]
  42df3c:	popf   
  42df3d:	inc    ebx
  42df3e:	das    
  42df3f:	iret   
  42df40:	fnstcw WORD PTR [ebx]
  42df42:	push   0xc05fd85a
  42df47:	push   edi
  42df48:	pop    esi
  42df49:	call   0x332077
  42df4e:	sbb    al,0x4
  42df50:	push   edx
  42df51:	pop    ebx
  42df52:	lods   al,BYTE PTR ds:[esi]
  42df53:	pop    es
  42df54:	jl     0x42df1f
  42df56:	pop    ebp
  42df57:	dec    edx
  42df58:	or     dl,BYTE PTR [ebp-0x6c]
  42df5b:	loop   0x42dfb7
  42df5d:	push   ebx
  42df5e:	add    BYTE PTR [eax],bh
  42df60:	adc    ebx,ecx
  42df62:	push   ebx
  42df63:	cmp    al,0x5c
  42df65:	mov    ebp,0x87441dc1
  42df6a:	stc    
  42df6b:	or     al,0xdc
  42df6d:	sub    esi,edx
  42df6f:	loopne 0x42df3f
  42df71:	inc    eax
  42df72:	push   ebx
  42df73:	pop    es
  42df74:	xor    DWORD PTR [eax-0x7d8d20be],0x45
  42df7b:	loopne 0x42df58
  42df7d:	sbb    esi,edx
  42df7f:	loopne 0x42df4f
  42df81:	aaa    
  42df82:	pop    ebp
  42df83:	xchg   BYTE PTR [eax],bl
  42df85:	sbb    DWORD PTR [eax],ecx
  42df87:	ins    BYTE PTR es:[edi],dx
  42df88:	in     al,dx
  42df89:	sbb    BYTE PTR [esi*2+0x54fe92e9],al
  42df90:	jmp    0xe2803ae0
  42df95:	retf   0xfd54
  42df98:	std    
  42df99:	mov    ebx,gs
  42df9b:	mov    dh,0x29
  42df9d:	or     al,0x0
  42df9f:	aad    0x77
  42dfa1:	xor    eax,0x88a68666
  42dfa6:	das    
  42dfa7:	jno    0x42df79
  42dfa9:	jle    0x42dffa
  42dfab:	fimul  WORD PTR [esp+esi*8]
  42dfae:	sbb    eax,0xe7b7d161
  42dfb3:	pop    ebx
  42dfb4:	mov    eax,0x70ee7470
  42dfb9:	push   esp
  42dfba:	dec    DWORD PTR [ecx+0x29]
  42dfbd:	xchg   esp,eax
  42dfbe:	shl    DWORD PTR [eax+eiz*4+0x7e],0x2d
  42dfc3:	add    BYTE PTR [ebp-0x28],bl
  42dfc6:	or     al,0x0
  42dfc8:	xchg   BYTE PTR [ecx-0x77897b90],ch
  42dfce:	jle    0x42dfca
  42dfd0:	mov    dh,0xae
  42dfd2:	dec    eax
  42dfd3:	cwde   
  42dfd4:	mov    dh,0xe0
  42dfd6:	jle    0x42dfec
  42dfd8:	mov    ds,WORD PTR [esp+ecx*2]
  42dfdb:	add    BYTE PTR [ebx],al
  42dfdd:	imul   ebx,DWORD PTR [eax],0xc556e3f
  42dfe3:	add    BYTE PTR [esi-0x6b3807a8],al
  42dfe9:	jmp    0x45866cf9
  42dfee:	cmp    esp,DWORD PTR [esi-0x79]
  42dff1:	ror    DWORD PTR [ebx],cl
  42dff3:	lea    eax,[ebx-0x6f]
  42dff6:	cmp    edx,DWORD PTR [ebx-0x1]
  42dff9:	lods   eax,DWORD PTR ds:[esi]
  42dffa:	jg     0x42dff6
  42dffc:	jae    0x42e040
  42dffe:	push   ecx
  42dfff:	hlt    
  42e000:	add    DWORD PTR [edx+0x66],0x665132c4
  42e007:	and    DWORD PTR [ecx+0x3f],0xcd398bc1
  42e00e:	mov    BYTE PTR cs:[ecx-0x637458e6],ch
  42e015:	sub    ah,ah
  42e017:	aad    0xd1
  42e019:	lds    esp,FWORD PTR [ecx-0x5abf83f0]
  42e01f:	test   BYTE PTR [eax+0x48],bh
  42e022:	adc    esp,DWORD PTR [ebx-0x55]
  42e025:	add    bh,BYTE PTR [ecx]
  42e027:	sub    al,BYTE PTR [eax]
  42e029:	(bad)  [ebx]
  42e02b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e02c:	push   esp
  42e02d:	xchg   BYTE PTR [ecx],ch
  42e02f:	jno    0x42e0b0
  42e031:	inc    esi
  42e032:	retf   0xc592
  42e035:	arpl   WORD PTR [ebx-0x42],dx
  42e038:	add    eax,DWORD PTR [esi+0xbfee23d]
  42e03e:	retf   0x8532
  42e041:	arpl   WORD PTR [ebx+0x50],ax
  42e044:	add    al,0x86
  42e046:	add    eax,DWORD PTR [ebx-0xc]
  42e049:	mov    BYTE PTR [ebx],dl
  42e04b:	and    ebx,DWORD PTR [ecx+eax*4-0x7703bbfd]
  42e052:	add    BYTE PTR ds:0x952f0131,ah
  42e058:	jle    0x42e093
  42e05a:	retf   0x9bec
  42e05d:	cmp    al,0x3e
  42e05f:	sub    DWORD PTR [ebx+0x46b387c2],ecx
  42e065:	push   esi
  42e066:	mov    dh,0xe0
  42e068:	(bad)  
  42e069:	xor    DWORD PTR [esi+eiz*8],ebp
  42e06c:	add    al,0x86
  42e06e:	inc    edx
  42e06f:	(bad)  
  42e070:	xor    cl,BYTE PTR [ecx]
  42e072:	sar    cl,0x1d
  42e075:	sbb    BYTE PTR [ebx+0x2cf9620a],0xa6
  42e07c:	bound  ecx,QWORD PTR [ecx+0xc94e246]
  42e082:	cmp    eax,esi
  42e084:	jb     0x42e01c
  42e086:	dec    edx
  42e087:	sub    DWORD PTR [edi],0xe143c586
  42e08d:	add    BYTE PTR ds:0xcc6efd9,cl
  42e093:	retf   
  42e094:	dec    eax
  42e095:	icebp  
  42e096:	pushf  
  42e097:	lock inc ebx
  42e099:	in     eax,0x10
  42e09b:	adc    cl,dl
  42e09d:	ret    
  42e09e:	lea    eax,[edx]
  42e0a0:	jmp    0x85e9:0xb38cdf1
  42e0a7:	pop    ebp
  42e0a8:	(bad)  
  42e0aa:	cmp    ah,BYTE PTR [ebx+0x486e3781]
  42e0b0:	mov    bh,0x32
  42e0b2:	pop    edx
  42e0b3:	(bad)  
  42e0b4:	fldcw  WORD PTR [eax-0x66d4bb05]
  42e0ba:	dec    edx
  42e0bb:	and    al,BYTE PTR [ebx]
  42e0bd:	loop   0x42e0d1
  42e0bf:	mov    ds:0x4835bf81,eax
  42e0c4:	mov    bh,0xb2
  42e0c6:	xor    eax,esp
  42e0c8:	fldcw  WORD PTR [eax]
  42e0ca:	adc    eax,DWORD PTR [ebp+0x2b]
  42e0cd:	cmp    DWORD PTR [edx+0x22],eax
  42e0d0:	add    esi,edx
  42e0d2:	fisub  DWORD PTR [edx+0x48139781]
  42e0d8:	mov    bh,0xa2
  42e0da:	and    esp,eax
  42e0dc:	fldcw  WORD PTR [eax]
  42e0de:	jmp    0x42e124
  42e0e0:	sub    edi,DWORD PTR [ecx]
  42e0e2:	retf   0x321
  42e0e5:	repnz xor ah,BYTE PTR [ebx+0x47e1bf81]
  42e0ec:	mov    bh,0xa2
  42e0ee:	test   ebx,0xae0000d9
  42e0f4:	fild   WORD PTR [edi]
  42e0f6:	and    edi,DWORD PTR [edi+0x6]
  42e0f9:	jmp    0x42e103
  42e0fb:	in     al,0xf5
  42e0fd:	imul   ecx,DWORD PTR [ecx-0x48facd0f],0xd1892e74
  42e107:	out    dx,al
  42e108:	fild   DWORD PTR [edi]
  42e10a:	and    ebp,edi
  42e10c:	add    bl,ch
  42e10e:	or     BYTE PTR [edi+ebp*8+0x2e818969],ah
  42e115:	add    eax,0x892c54b7
  42e11a:	rcr    esi,1
  42e11c:	fild   DWORD PTR [edi]
  42e11e:	and    ebp,edi
  42e120:	add    bl,ch
  42e122:	or     BYTE PTR [ecx+esi*8+0x69],dh
  42e126:	mov    DWORD PTR [ecx-0x5b48fad4],esi
  42e12c:	sub    cl,BYTE PTR [ecx-0x2540b4a3]
  42e132:	shl    ebp,0x3e
  42e135:	adc    eax,edx
  42e137:	cs loopne 0x42e141
  42e13a:	or     ebp,esi
  42e13c:	pusha  
  42e13d:	adc    DWORD PTR [esi+0x3b],0x9874d8bd
  42e144:	mov    ebp,0x3f55106e
  42e149:	push   ebx
  42e14a:	mov    ecx,esp
  42e14c:	aad    0xa6
  42e14e:	mov    esp,DWORD PTR [eax+ebx*8]
  42e151:	aam    0xfe
  42e153:	enter  0x88c9,0x75
  42e157:	add    BYTE PTR [edi],bh
  42e159:	mov    ecx,0x3be48b09
  42e15e:	call   0xf50c3b35
  42e163:	mov    DWORD PTR [ecx],esi
  42e165:	cmp    al,0x89
  42e167:	dec    ebx
  42e168:	xlat   BYTE PTR ds:[ebx]
  42e169:	xlat   BYTE PTR ds:[ebx]
  42e16a:	int3   
  42e16b:	inc    BYTE PTR [esi+0x40888154]
  42e171:	add    DWORD PTR [edi+0x74],ebp
  42e174:	mov    fs,esp
  42e176:	outs   dx,BYTE PTR ds:[esi]
  42e177:	sar    DWORD PTR [eax],0xe0
  42e17a:	sub    BYTE PTR [esi+0x663b2982],bh
  42e180:	leave  
  42e181:	sub    al,0x1a
  42e183:	adc    al,0xc1
  42e185:	ds cld 
  42e187:	push   cs
  42e188:	inc    esi
  42e189:	sub    DWORD PTR [edi+0x41],ebp
  42e18c:	xchg   esi,eax
  42e18d:	mov    al,ds:0x29870743
  42e192:	or     al,0x87
  42e194:	push   edx
  42e195:	dec    ebp
  42e196:	out    dx,al
  42e197:	mov    BYTE PTR [esi],cl
  42e199:	cs or  eax,0x49a08600
  42e19f:	adc    BYTE PTR [eax],ah
  42e1a1:	mov    al,ds:0xb2922437
  42e1a6:	arpl   WORD PTR [edi],ax
  42e1a8:	xchg   DWORD PTR [ecx],ebp
  42e1aa:	or     al,0x87
  42e1ac:	enter  0x2a39,0x89
  42e1b0:	(bad)  
  42e1b1:	cmp    BYTE PTR ds:0x19c48600,cl
  42e1b7:	adc    al,0x59
  42e1b9:	push   ss
  42e1ba:	loopne 0x42e1c9
  42e1bc:	add    dh,al
  42e1be:	sub    DWORD PTR [ebx],edi
  42e1c0:	sti    
  42e1c1:	jae    0x42e204
  42e1c3:	cli    
  42e1c4:	aas    
  42e1c5:	xchg   BYTE PTR [esi-0x7678c35],ch
  42e1cb:	(bad)  
  42e1cc:	mov    edi,0xfde101d6
  42e1d1:	sub    DWORD PTR [ecx],ebp
  42e1d3:	cmp    edi,DWORD PTR [eax]
  42e1d5:	retf   0xe64d
  42e1d8:	jae    0x42e168
  42e1da:	jl     0x42e1bc
  42e1dc:	cmp    edi,DWORD PTR [edx-0x17]
  42e1df:	or     esp,edi
  42e1e1:	sub    BYTE PTR [eax+eiz*8-0x25],0x95
  42e1e6:	inc    edx
  42e1e7:	mov    eax,ds:0xb1030103
  42e1ec:	lds    edi,FWORD PTR [ebp+0x42]
  42e1ef:	scas   al,BYTE PTR es:[edi]
  42e1f0:	jl     0x42e1cf
  42e1f2:	mov    esi,0x9450e6ed
  42e1f7:	nop
  42e1f8:	jl     0x42e1e5
  42e1fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e1fb:	lock xchg DWORD PTR [edi+0x56],edx
  42e1ff:	ins    BYTE PTR es:[edi],dx
  42e200:	stos   DWORD PTR es:[edi],eax
  42e201:	add    BYTE PTR [ecx],bh
  42e203:	loope  0x42e1f2
  42e205:	xchg   ecx,eax
  42e206:	dec    edi
  42e207:	and    DWORD PTR [ecx+eax*1],eax
  42e20a:	test   cl,dh
  42e20c:	jp     0x42e217
  42e20e:	dec    edx
  42e20f:	loop   0x42e214
  42e211:	xchg   BYTE PTR [ebx-0x68],cl
  42e214:	test   BYTE PTR [ecx-0x62fc1ebf],dl
  42e21a:	mov    bl,0xd5
  42e21c:	jl     0x42e260
  42e21e:	imul   eax,DWORD PTR ds:[ecx+0x0],0xffffff8e
  42e223:	cmp    dl,bh
  42e225:	out    dx,eax
  42e226:	xchg   ebx,eax
  42e227:	and    cl,0x78
  42e22a:	ret    0x322a
  42e22d:	xchg   edx,edi
  42e22f:	ss cdq 
  42e231:	icebp  
  42e232:	aad    0x4e
  42e234:	and    DWORD PTR [ebx+ecx*1],eax
  42e237:	add    edi,ecx
  42e239:	jg     0x42e28a
  42e23b:	inc    ebx
  42e23c:	loope  0x42e241
  42e23e:	in     al,0xc5
  42e240:	test   BYTE PTR [ebx+0x7abeaf4b],0xb7
  42e247:	push   edx
  42e248:	sbb    al,0x46
  42e24a:	cmp    DWORD PTR [ebx-0x1f],eax
  42e24d:	add    ebp,DWORD PTR [ecx-0x28]
  42e250:	fld    QWORD PTR [esi+eax*4]
  42e253:	inc    edx
  42e254:	loop   0x42e25e
  42e256:	cs inc esp
  42e258:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e259:	xchg   edi,eax
  42e25a:	xchg   BYTE PTR [edi+0x2eb30531],dh
  42e260:	or     eax,DWORD PTR [edx+0x50]
  42e263:	dec    ebp
  42e264:	mov    bh,0xa4
  42e266:	or     eax,0x80f4f2b9
  42e26b:	push   esi
  42e26c:	jbe    0x42e262
  42e26e:	lods   eax,DWORD PTR ds:[esi]
  42e26f:	mov    dh,BYTE PTR [esi-0x8]
  42e272:	lods   eax,DWORD PTR ds:[esi]
  42e273:	mov    dh,BYTE PTR [esi-0x37]
  42e276:	add    al,0x22
  42e278:	or     DWORD PTR [ebp-0x45],edi
  42e27b:	xor    DWORD PTR [esi-0x1e],0x23aaf8d
  42e282:	lods   eax,DWORD PTR ds:[esi]
  42e283:	retf   0x16d
  42e286:	add    BYTE PTR ds:0xb3d18b64,bl
  42e28c:	mov    ch,0x10
  42e28e:	xor    DWORD PTR [esi-0x52a2bdac],edx
  42e294:	xor    DWORD PTR [ebp-0xe],0x70f69622
  42e29b:	mov    ?,WORD PTR [edx]
  42e29d:	in     al,0xda
  42e29f:	adc    dl,BYTE PTR [esi+0x2a7e60f6]
  42e2a5:	in     al,0xe2
  42e2a7:	add    dl,BYTE PTR [edi-0x35846d0a]
  42e2ad:	ins    DWORD PTR es:[edi],dx
  42e2ae:	cdq    
  42e2af:	repnz xchg esi,eax
  42e2b1:	fisub  WORD PTR [esi+eax*8+0x2a]
  42e2b5:	pop    ebx
  42e2b6:	mov    ss,WORD PTR [esi+0x65]
  42e2b9:	push   ss
  42e2ba:	sub    DWORD PTR [edx-0x640b3541],eax
  42e2c0:	mov    al,ds:0x367676fa
  42e2c5:	lock aam 0x9
  42e2c8:	dec    eax
  42e2c9:	dec    edx
  42e2ca:	jmp    0xea331ca9
  42e2cf:	lds    ebp,FWORD PTR [esi-0x38783cee]
  42e2d5:	inc    ebp
  42e2d6:	inc    ecx
  42e2d7:	push   ebp
  42e2d8:	cmp    eax,0xc0c30076
  42e2dd:	push   ss
  42e2de:	pop    eax
  42e2df:	cmp    eax,DWORD PTR [ebp+0x4545500a]
  42e2e5:	repz adc eax,0x302943
  42e2eb:	add    BYTE PTR [edx+eax*4-0xa],dh
  42e2ef:	sub    ebp,DWORD PTR [edx]
  42e2f1:	shl    DWORD PTR [edi+0xc],1
  42e2f4:	cld    
  42e2f5:	inc    esp
  42e2f6:	or     dl,BYTE PTR [eax+0x64]
  42e2f9:	cmp    dl,0x2b
  42e2fc:	sub    bl,ch
  42e2fe:	aas    
  42e2ff:	call   FWORD PTR [edx-0x2f]
  42e302:	hlt    
  42e303:	jne    0x42e28c
  42e305:	pop    ebx
  42e306:	or     bh,bh
  42e308:	cmp    al,cl
  42e30a:	hlt    
  42e30b:	adc    eax,0x30324b
  42e310:	jo     0x42e372
  42e312:	push   edi
  42e313:	leave  
  42e314:	fsubr  QWORD PTR [eax-0x79]
  42e317:	in     al,dx
  42e318:	pop    esi
  42e319:	mov    ebx,0xa5720c46
  42e31e:	out    dx,eax
  42e31f:	call   FWORD PTR [edi+0x62745b71]
  42e325:	pop    esp
  42e326:	out    dx,eax
  42e327:	pop    eax
  42e328:	test   BYTE PTR [ebx],al
  42e32a:	jl     0x42e369
  42e32c:	push   esp
  42e32d:	add    eax,0x6a42307c
  42e332:	or     DWORD PTR [eax],eax
  42e334:	pop    edi
  42e335:	dec    eax
  42e336:	sub    ch,BYTE PTR [ebx]
  42e338:	cs push ebx
  42e33a:	jmp    FWORD PTR [edx]
  42e33c:	cs xchg DWORD PTR cs:[eax-0x38f5bba1],ebp
  42e344:	call   0x2044:0x2f0202ca
  42e34b:	fcmovnbe st,st(4)
  42e34d:	bswap  ebp
  42e34f:	inc    ebp
  42e350:	add    bl,dl
  42e352:	cmp    dh,ch
  42e354:	inc    DWORD PTR [esi+0x49ee9329]
  42e35a:	fild   WORD PTR [edi+0xc2987fe]
  42e360:	out    0x1c,eax
  42e362:	popa   
  42e363:	das    
  42e364:	cld    
  42e365:	fild   QWORD PTR [ecx]
  42e367:	or     al,0x0
  42e369:	in     eax,dx
  42e36a:	sbb    DWORD PTR [edi+0x687fa44],ebp
  42e370:	add    BYTE PTR [esi+0x43c2ed54],al
  42e376:	dec    ebp
  42e377:	imul   edi,edi,0x5b29e1
  42e37d:	fst    DWORD PTR [esi]
  42e37f:	clc    
  42e380:	push   cs
  42e381:	inc    esi
  42e382:	sub    DWORD PTR [ebx-0x9],esi
  42e385:	std    
  42e386:	out    0xf3,al
  42e388:	cmp    BYTE PTR [eax],cl
  42e38a:	mov    dh,0xc
  42e38c:	add    BYTE PTR [esi+0x872e96],al
  42e392:	xchg   edx,eax
  42e393:	or     eax,DWORD PTR [eax]
  42e395:	xchg   BYTE PTR [edi+esi*1+0xc],dl
  42e399:	sbb    eax,DWORD PTR [esi+0x71]
  42e39c:	retf   0xaf6d
  42e39f:	sgdtd  [esi-0x610772d7]
  42e3a6:	sub    al,0xc
  42e3a8:	add    cl,bh
  42e3aa:	ss jo  0x42e383
  42e3ad:	repz cs adc ah,dl
  42e3b1:	(bad)  
  42e3b2:	fsub   st,st(0)
  42e3b4:	pop    ebx
  42e3b5:	add    BYTE PTR [edx-0x7157f997],dl
  42e3bb:	dec    ebp
  42e3bc:	jecxz  0x42e3ec
  42e3be:	inc    esi
  42e3bf:	mov    dl,0x6d
  42e3c1:	xchg   DWORD PTR [bx+di],ebp
  42e3c4:	or     al,0x89
  42e3c6:	add    BYTE PTR [ebp+0xb],al
  42e3c9:	add    BYTE PTR [esi-0x7894925e],al
  42e3cf:	inc    edx
  42e3d0:	loope  0x42e3d5
  42e3d2:	or     DWORD PTR [ebp+0x4d],edi
  42e3d5:	cwde   
  42e3d6:	nop
  42e3d7:	retf   
  42e3d8:	sahf   
  42e3d9:	sti    
  42e3da:	or     BYTE PTR [ebp-0x55f08533],al
  42e3e0:	loop   0x42e3e5
  42e3e2:	xchg   cl,cl
  42e3e4:	outs   dx,DWORD PTR ds:[esi]
  42e3e5:	pop    ds
  42e3e6:	xchg   DWORD PTR [edx-0x1f],eax
  42e3e9:	jp     0x42e3f2
  42e3eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e3ec:	loop   0x42e3f1
  42e3ee:	xchg   bl,cl
  42e3f0:	sahf   
  42e3f1:	test   DWORD PTR [ebx+ebx*4+0x3a],0xae4281c1
  42e3f9:	js     0x42e3e8
  42e3fb:	nop
  42e3fc:	mov    ah,0x2d
  42e3fe:	xor    eax,0x8ef86cb
  42e403:	xor    ah,BYTE PTR [ebx-0x7c]
  42e406:	xchg   BYTE PTR [ecx+eiz*8+0x3],al
  42e40a:	cmp    dl,BYTE PTR [edx+0x62]
  42e40d:	test   BYTE PTR [esp+eax*2+0x4a3a03e1],al
  42e414:	bound  eax,QWORD PTR [ebx+0x3e14485]
  42e41a:	add    BYTE PTR [ebx],bl
  42e41c:	mov    cs,WORD PTR [ebx+0x6]
  42e41f:	popf   
  42e420:	lods   al,BYTE PTR ds:[esi]
  42e421:	stc    
  42e422:	cmp    BYTE PTR [edx-0x5e],0xd5
  42e426:	ret    
  42e427:	mov    ebx,ecx
  42e429:	cdq    
  42e42a:	aas    
  42e42b:	sbb    al,0xb3
  42e42d:	loop   0x42e432
  42e42f:	xchg   BYTE PTR [esi-0x77caed18],ch
  42e435:	icebp  
  42e436:	nop
  42e437:	ret    0x3236
  42e43a:	out    dx,al
  42e43b:	in     eax,0x45
  42e43d:	pop    eax
  42e43e:	dec    ebx
  42e43f:	jecxz  0x42e481
  42e441:	mov    ds:0xa2498164,al
  42e446:	aam    0xb8
  42e448:	test   al,0xa
  42e44a:	enter  0xaf04,0x2
  42e44e:	outs   dx,BYTE PTR ds:[esi]
  42e44f:	lahf   
  42e450:	ds push ss
  42e452:	test   eax,0xd5cabf85
  42e457:	xchg   ecx,eax
  42e458:	mov    ch,0x6d
  42e45a:	push   ebp
  42e45b:	mov    BYTE PTR [ecx-0x7a],cl
  42e45e:	lock add BYTE PTR [edx+0xa],0x6a
  42e463:	xchg   DWORD PTR [esi],esi
  42e465:	pop    es
  42e466:	out    dx,al
  42e467:	add    DWORD PTR [ecx+0x9],ecx
  42e46a:	jmp    0xb9d3aff4
  42e46f:	add    BYTE PTR [edx+0xa],0xf6
  42e473:	sub    al,0x97
  42e475:	sbb    ch,dh
  42e477:	sub    al,0x1
  42e479:	test   ah,dl
  42e47b:	mov    eax,ds:0xe94a4e
  42e480:	inc    edx
  42e481:	adc    eax,0x8548f21b
  42e486:	out    dx,eax
  42e487:	je     0x42e506
  42e489:	retf   
  42e48a:	dec    ebp
  42e48b:	cmc    
  42e48c:	mov    bl,0x55
  42e48e:	out    dx,eax
  42e48f:	je     0x42e41e
  42e491:	cmp    eax,ebx
  42e493:	dec    edi
  42e494:	or     DWORD PTR [edi+0x54aee81a],esi
  42e49a:	fs jmp 0x9fc6e6fb
  42e4a0:	sub    eax,0x4c626b8
  42e4a5:	cmp    DWORD PTR [esi-0x23],esi
  42e4a8:	je     0x42e49b
  42e4aa:	retf   0x519
  42e4ad:	scas   al,BYTE PTR es:[edi]
  42e4ae:	push   ss
  42e4af:	scas   al,BYTE PTR es:[edi]
  42e4b0:	jle    0x42e4ef
  42e4b2:	loop   0x42e4c0
  42e4b4:	add    al,0x38
  42e4b6:	lock cmp ebx,ebx
  42e4b9:	out    dx,eax
  42e4ba:	or     ch,cl
  42e4bc:	test   DWORD PTR [ecx],edi
  42e4be:	jbe    0x42e4b1
  42e4c0:	add    al,0xae
  42e4c2:	add    al,BYTE PTR [eax]
  42e4c4:	test   DWORD PTR [edx+esi*8],0x46c6c8ff
  42e4cb:	sbb    BYTE PTR [esp+esi*4+0x4ed80f07],ch
  42e4d2:	or     DWORD PTR [eax],eax
  42e4d4:	pop    ds
  42e4d5:	push   eax
  42e4d6:	xchg   ch,ch
  42e4d8:	pop    ds
  42e4d9:	inc    ecx
  42e4da:	or     al,BYTE PTR [ebx-0x7bfcc04c]
  42e4e0:	std    
  42e4e1:	inc    eax
  42e4e2:	or     al,BYTE PTR [eax]
  42e4e4:	add    BYTE PTR [esp+esi*4-0x442f8c10],bl
  42e4eb:	clc    
  42e4ec:	add    eax,0x4b7f1a43
  42e4f1:	mov    ch,0xbc
  42e4f3:	repnz add DWORD PTR [eax],edx
  42e4f6:	std    
  42e4f7:	mov    eax,cs:0x740a40df
  42e4fd:	into   
  42e4fe:	adc    DWORD PTR [eax+0x7640ef00],0xefdbca36
  42e508:	(bad)  
  42e509:	fild   QWORD PTR [eiz*1+0xa414f3d]
  42e510:	add    BYTE PTR [ebx],dh
  42e512:	imul   ebp,DWORD PTR ds:0xa409fa5,0x54a94375
  42e51c:	add    DWORD PTR [edi-0x58a278c0],ebp
  42e522:	or     ebp,DWORD PTR es:[edx-0x61]
  42e526:	es lock push edx
  42e529:	enter  0xe64c,0x13
  42e52d:	scas   eax,DWORD PTR es:[edi]
  42e52e:	ds pop edx
  42e530:	call   0x37a7cb
  42e535:	hlt    
  42e536:	sti    
  42e537:	pop    ss
  42e538:	mov    ebp,DWORD PTR [edx-0x798a0b3e]
  42e53e:	or     edi,edx
  42e540:	call   0xfaccaa18
  42e545:	xchg   ebx,eax
  42e546:	mov    al,BYTE PTR [esi]
  42e548:	add    BYTE PTR [eax],al
  42e54a:	xchg   BYTE PTR [esi],ch
  42e54c:	add    eax,0x893f8666
  42e551:	cli    
  42e552:	mov    al,0x21
  42e554:	pop    edi
  42e555:	and    al,0x73
  42e557:	leave  
  42e558:	push   es
  42e559:	add    BYTE PTR [esi-0x7999d8f2],al
  42e55f:	dec    DWORD PTR [ecx-0x5ab8d71a]
  42e565:	call   DWORD PTR [ecx]
  42e567:	sub    bh,cl
  42e569:	sbb    al,0xce
  42e56b:	or     DWORD PTR [edi+edi*8+0x1],edi
  42e56f:	ins    DWORD PTR es:[edi],dx
  42e570:	neg    DWORD PTR [edi]
  42e572:	mov    DWORD PTR [esi+eax*2+0xd375e4f],ebp
  42e579:	add    BYTE PTR [esi-0x1ef808ac],al
  42e57f:	je     0x42e56a
  42e581:	pop    ecx
  42e582:	cmp    eax,0x861b4862
  42e587:	(bad)  
  42e588:	test   al,0xff
  42e58a:	leave  
  42e58b:	sub    DWORD PTR [ebx],ebx
  42e58d:	test   BYTE PTR [eax+0x7b000c29],dh
  42e593:	mov    al,BYTE PTR [esi]
  42e595:	add    BYTE PTR [esi-0x1ac372f0],al
  42e59b:	sub    DWORD PTR [eax+eax*1],ecx
  42e59e:	sbb    ch,BYTE PTR [esi+0x2986a530]
  42e5a4:	or     al,0xb
  42e5a6:	or     dl,bh
  42e5a8:	or     eax,DWORD PTR [eax]
  42e5aa:	xchg   BYTE PTR [esi],dh
  42e5ac:	lods   eax,DWORD PTR ds:[esi]
  42e5ad:	inc    DWORD PTR [eax]
  42e5af:	sub    DWORD PTR [ecx],0x460dc9f9
  42e5b5:	(bad)  
  42e5b6:	xchg   DWORD PTR gs:[edx-0x58],eax
  42e5ba:	idiv   BYTE PTR [ecx-0x58]
  42e5bd:	loope  0x42e593
  42e5bf:	pop    esp
  42e5c0:	dec    ebp
  42e5c1:	jge    0x42e5d7
  42e5c3:	mov    BYTE PTR [edx+0x31],0x6c
  42e5c7:	inc    esp
  42e5c8:	aaa    
  42e5c9:	mov    DWORD PTR [eax-0x5a5112a0],eax
  42e5cf:	inc    ecx
  42e5d0:	xor    esp,edx
  42e5d2:	adc    BYTE PTR [ebx],al
  42e5d4:	jae    0x42e636
  42e5d6:	sub    BYTE PTR [edi+eax*8],0x9e
  42e5da:	sysexit 
  42e5dc:	add    BYTE PTR ds:0xe1408604,0xf7
  42e5e3:	(bad)  
  42e5e4:	stc    
  42e5e5:	add    DWORD PTR [ecx+edx*1+0x33],esi
  42e5e9:	pop    ebp
  42e5ea:	mov    DWORD PTR [eax-0x400804c9],ecx
  42e5f0:	inc    ebx
  42e5f1:	addr16 retf 0x32fc
  42e5f5:	and    DWORD PTR [eax+edi*8+0x68b5a750],eax
  42e5fc:	aaa    
  42e5fd:	div    bh
  42e5ff:	jg     0x42e5c0
  42e601:	sbb    al,0x16
  42e603:	lea    edi,[ebp+0x32cc80d7]
  42e609:	(bad)  
  42e60a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e60b:	leave  
  42e60c:	xor    ah,dl
  42e60e:	adc    BYTE PTR [ebx],cl
  42e610:	aas    
  42e611:	clc    
  42e612:	jg     0x42e614
  42e614:	mov    esp,0xb17261f9
  42e619:	xor    bl,bl
  42e61b:	shr    DWORD PTR [edx+esi*1+0x420041d1],cl
  42e622:	loope  0x42e627
  42e624:	lea    edi,[ebp+0x328c7eaf]
  42e62a:	fstp   TBYTE PTR [esi]
  42e62c:	lea    esi,[edx]
  42e62e:	mov    cl,0xbd
  42e630:	jl     0x42e664
  42e632:	or     ebp,ecx
  42e634:	test   DWORD PTR [edi-0x54],ebp
  42e637:	jmp    0xd0b828c1
  42e63c:	cld    
  42e63d:	xchg   dh,bh
  42e63f:	jno    0x42e68b
  42e641:	mov    ax,ds:0xa4385e9
  42e647:	fimul  WORD PTR [ecx]
  42e649:	jne    0x42e63a
  42e64b:	xchg   cl,cl
  42e64d:	data16 or ch,cl
  42e650:	test   DWORD PTR [ebx-0x9],eax
  42e653:	xchg   ecx,eax
  42e654:	popf   
  42e655:	add    ah,BYTE PTR [esi]
  42e657:	jns    0x42e5e3
  42e659:	inc    edx
  42e65a:	or     ch,ah
  42e65c:	jne    0x42e690
  42e65e:	or     ebp,ecx
  42e660:	nop
  42e661:	cmc    
  42e662:	retf   0x7742
  42e665:	outs   dx,DWORD PTR ds:[esi]
  42e666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e667:	jmp    0x6c4228f1
  42e66c:	outs   dx,BYTE PTR ds:[esi]
  42e66d:	sub    eax,0x30d3ef0
  42e672:	imul   ebp,DWORD PTR [edx+eax*2+0x3c],0x7000e086
  42e67a:	sub    al,0xf0
  42e67c:	(bad)  
  42e67d:	lods   al,BYTE PTR ds:[esi]
  42e67e:	add    eax,DWORD PTR [eax]
  42e680:	fs jno 0x42e6ae
  42e683:	lock push ss
  42e685:	pop    ecx
  42e686:	mov    dh,0x2a
  42e688:	push   cs
  42e689:	iret   
  42e68a:	dec    ecx
  42e68b:	sbb    BYTE PTR fs:[edx+0x1b],0xf1
  42e690:	inc    BYTE PTR [eax-0x6a]
  42e693:	add    DWORD PTR ds:0x9a4f1e05,0xffffffdb
  42e69a:	enter  0x72fa,0xc3
  42e69e:	inc    ecx
  42e69f:	push   edi
  42e6a0:	sbb    ah,BYTE PTR [ecx]
  42e6a2:	mov    edx,0x6aa3dd6d
  42e6a7:	mov    dl,0xf9
  42e6a9:	mov    al,BYTE PTR [edx+0xa]
  42e6ac:	add    BYTE PTR [ebx+0x5c],cl
  42e6af:	cld    
  42e6b0:	inc    ebp
  42e6b1:	ja     0x42e6f9
  42e6b3:	jbe    0x42e6c6
  42e6b5:	in     al,0xfa
  42e6b7:	dec    DWORD PTR [edx-0x2978ad6e]
  42e6bd:	pop    ss
  42e6be:	add    al,0xf9
  42e6c0:	inc    DWORD PTR [eax]
  42e6c2:	les    esp,FWORD PTR [esi+0x8]
  42e6c5:	icebp  
  42e6c6:	mov    dh,0x46
  42e6c8:	or     BYTE PTR [ebx+0x39],ch
  42e6cb:	and    eax,0x5d185e6a
  42e6d0:	xor    esp,esp
  42e6d2:	pushf  
  42e6d3:	mov    ah,0xfa
  42e6d5:	mov    al,0xb0
  42e6d7:	call   0x8088afe
  42e6dc:	add    DWORD PTR [eax],eax
  42e6de:	pop    ds
  42e6df:	inc    ebp
  42e6e0:	add    DWORD PTR [ebp-0x45],0x2a75cb6c
  42e6e7:	mov    esi,0x55c4e46e
  42e6ec:	pop    ebx
  42e6ed:	xor    bl,BYTE PTR [edi-0x44]
  42e6f0:	shr    eax,0x86
  42e6f3:	fs repz jmp eax
  42e6f7:	imul   DWORD PTR [edi-0x7756d577]
  42e6fd:	inc    esi
  42e6fe:	out    dx,eax
  42e6ff:	mov    ebx,0x22540c3e
  42e704:	or     BYTE PTR [ecx+0x94567],cl
  42e70a:	fistp  QWORD PTR [ebx+0x12541049]
  42e710:	add    BYTE PTR [ecx+0x94937],cl
  42e716:	scas   eax,DWORD PTR es:[edi]
  42e717:	imul   edx,ebx,0xf
  42e71a:	sub    ebp,DWORD PTR [edi]
  42e71c:	out    dx,al
  42e71d:	call   FWORD PTR [edi+0x2cf04ebb]
  42e723:	sub    eax,esp
  42e725:	add    al,BYTE PTR [esi-0x7899fd71]
  42e72b:	add    al,0x9
  42e72d:	repnz lds ebx,FWORD PTR [esi]
  42e730:	clc    
  42e731:	add    eax,0x870ba9d9
  42e736:	dec    eax
  42e737:	add    dh,BYTE PTR [ebx+0x20]
  42e73a:	jno    0x42e71d
  42e73c:	sbb    DWORD PTR [edx+ebx*2-0x63],0xffffffe7
  42e741:	jmp    0x42e743
  42e743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e744:	push   ebp
  42e745:	add    ah,BYTE PTR [esi-0x79]
  42e748:	les    ecx,FWORD PTR [eax]
  42e74a:	repnz inc ebp
  42e74c:	pop    edx
  42e74d:	repnz add eax,0x870269b1
  42e753:	push   eax
  42e754:	ror    BYTE PTR [esi+0x20],cl
  42e757:	cmp    DWORD PTR [ecx-0x62e1a37d],edi
  42e75d:	out    0xe7,eax
  42e75f:	jle    0x42e76e
  42e761:	or     BYTE PTR [esi-0x79],ah
  42e764:	xchg   esp,eax
  42e765:	or     dl,dh
  42e767:	inc    ebp
  42e768:	sub    bh,al
  42e76a:	add    eax,0x870cc9b9
  42e76f:	cmp    BYTE PTR [edx+0x710120ca],dl
  42e775:	add    DWORD PTR [ecx-0x6a],0x8703b678
  42e77c:	sbb    DWORD PTR [ecx*4-0x50929ead],ecx
  42e783:	xchg   BYTE PTR [edx],bl
  42e785:	or     al,0x0
  42e787:	ins    BYTE PTR es:[edi],dx
  42e788:	mov    ebp,0xd8f4e7d4
  42e78d:	ins    DWORD PTR es:[edi],dx
  42e78e:	cli    
  42e78f:	std    
  42e790:	inc    ecx
  42e791:	add    DWORD PTR [esi+edi*4-0x64],0xb70ff146
  42e799:	outs   dx,DWORD PTR ds:[esi]
  42e79a:	jle    0x42e74a
  42e79c:	sub    bh,dh
  42e79e:	xor    ebx,DWORD PTR [edx+eax*2]
  42e7a1:	rcl    esp,1
  42e7a3:	pushf  
  42e7a4:	push   ebp
  42e7a5:	int    0x10
  42e7a7:	add    BYTE PTR [esi+0x42],al
  42e7aa:	mov    al,BYTE PTR [ebx]
  42e7ac:	xchg   BYTE PTR [edx+0x21],al
  42e7af:	clc    
  42e7b0:	gs jmp 0x4288eb97
  42e7b6:	jl     0x42e80b
  42e7b8:	cwde   
  42e7b9:	adc    ebp,edi
  42e7bb:	push   edx
  42e7bc:	cmc    
  42e7bd:	push   edi
  42e7be:	mov    al,BYTE PTR [ebx]
  42e7c0:	xchg   BYTE PTR [esi+0x61],al
  42e7c3:	not    BYTE PTR [ecx-0x41e96f69]
  42e7c9:	push   esi
  42e7ca:	and    DWORD PTR [ebx+ecx*1],eax
  42e7cd:	add    dl,BYTE PTR [esi]
  42e7cf:	pop    es
  42e7d0:	inc    DWORD PTR [ebp+eax*4+0x70c53988]
  42e7d7:	imul   DWORD PTR [edx-0x69]
  42e7da:	mov    DWORD PTR [ecx-0x549ed06e],ebx
  42e7e0:	imul   esi,DWORD PTR [esi+0x36a33904],0x42a016d6
  42e7ea:	mov    al,0x7c
  42e7ec:	jp     0x42e814
  42e7ee:	cmc    
  42e7ef:	ret    
  42e7f0:	or     DWORD PTR [ecx+0x7f01e9e2],ebx
  42e7f6:	jl     0x42e854
  42e7f8:	loope  0x42e7c9
  42e7fa:	cmp    bh,BYTE PTR [esp+ebp*8+0x6]
  42e7fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e7ff:	jnp    0x42e787
  42e801:	inc    edx
  42e802:	loope  0x42e807
  42e804:	jmp    0xd621648e
  42e809:	les    edi,FWORD PTR [edi+esi*8]
  42e80c:	add    BYTE PTR [edx+0x5e160093],dl
  42e812:	push   esi
  42e813:	mov    eax,ds:0x76020b03
  42e818:	pop    ds
  42e819:	add    ebp,DWORD PTR [edi]
  42e81b:	or     edi,DWORD PTR [ebp+0x7f]
  42e81e:	ja     0x42e7ef
  42e820:	jne    0x42e7a5
  42e822:	xor    al,0x46
  42e824:	int    0x85
  42e826:	mov    dh,0x0
  42e828:	jo     0x42e7e9
  42e82a:	sub    cl,al
  42e82c:	sub    al,0x12
  42e82e:	inc    edx
  42e82f:	or     ch,cl
  42e831:	test   edi,eax
  42e833:	repz rcl BYTE PTR [ebx+eax*8-0x3d7d0e93],cl
  42e83b:	or     ch,cl
  42e83d:	popa   
  42e83e:	aas    
  42e83f:	fs call 0xe9a516a0
  42e845:	cwde   
  42e846:	adc    eax,0x28db38e3
  42e84b:	lock ins BYTE PTR es:[edi],dx
  42e84d:	int    0x38
  42e84f:	xchg   BYTE PTR [esi],bl
  42e851:	add    DWORD PTR [edx+0xa],0x74
  42e855:	inc    edi
  42e856:	out    0x5a,al
  42e858:	push   ss
  42e859:	lds    eax,FWORD PTR [esi+0x4285b5a2]
  42e85f:	or     ch,BYTE PTR [esi-0x69]
  42e862:	push   0x16
  42e864:	test   eax,0xeecac785
  42e869:	cdq    
  42e86a:	jbe    0x42e875
  42e86c:	jmp    0xacfa21f6
  42e871:	add    BYTE PTR [ebp+0x39],dh
  42e874:	mov    bh,0xac
  42e876:	mov    DWORD PTR [ebx],eax
  42e878:	in     al,dx
  42e879:	(bad)  [eax+0x6db48c0a]
  42e87f:	inc    edx
  42e880:	jne    0x42e888
  42e882:	aad    0x25
  42e884:	test   DWORD PTR ds:0xc9a3285d,0x128341e9
  42e88e:	popa   
  42e88f:	dec    ecx
  42e890:	and    DWORD PTR [ebp+esi*2+0x6f004565],0x39
  42e898:	mov    ebx,0x40334f8
  42e89d:	sub    esp,edx
  42e89f:	cmc    
  42e8a0:	retf   0xcfe7
  42e8a3:	cmp    BYTE PTR [ebx-0x17566b40],bh
  42e8a9:	add    edx,DWORD PTR [edx+ebp*1]
  42e8ac:	or     BYTE PTR [ebx+0x73efb63a],al
  42e8b2:	test   eax,0xe685d14
  42e8b7:	inc    ecx
  42e8b8:	or     al,BYTE PTR [eax]
  42e8ba:	xlat   BYTE PTR ds:[ebx]
  42e8bb:	inc    edi
  42e8bc:	lock call FWORD PTR [edi-0x64]
  42e8c0:	std    
  42e8c1:	cmc    
  42e8c2:	mov    ds:0x8a74063e,al
  42e8c7:	adc    eax,0x41cd685d
  42e8cc:	or     al,BYTE PTR [eax]
  42e8ce:	xchg   DWORD PTR [eax+esi*8-0x1],eax
  42e8d2:	pop    edi
  42e8d3:	test   al,0x76
  42e8d5:	clc    
  42e8d6:	add    BYTE PTR [edx-0x47af57fe],bh
  42e8dc:	xor    dh,ah
  42e8de:	mov    esp,ecx
  42e8e0:	cwde   
  42e8e1:	and    eax,0x70a898fb
  42e8e6:	jge    0x42e8a3
  42e8e8:	inc    ecx
  42e8e9:	jbe    0x42e8f9
  42e8eb:	fmul   QWORD PTR [edi]
  42e8ed:	push   0xa411fa7
  42e8f2:	push   0xa4720
  42e8f7:	push   esp
  42e8f8:	push   edi
  42e8f9:	cld    
  42e8fa:	inc    ebp
  42e8fb:	test   DWORD PTR [eax],0x100c1d7c
  42e901:	push   0xa40dfa8
  42e906:	push   0xa46d7
  42e90b:	js     0x42e93f
  42e90d:	clc    
  42e90e:	lea    eax,[esi-0x36b05c22]
  42e914:	aad    0x77
  42e916:	xchg   al,cl
  42e918:	push   edx
  42e919:	js     0x42e910
  42e91b:	mov    ecx,0x9e7c862b
  42e920:	sbb    ah,al
  42e922:	or     DWORD PTR [ebp-0x2c],edx
  42e925:	jecxz  0x42e8ca
  42e927:	xchg   BYTE PTR [ebx],bl
  42e929:	or     al,0x68
  42e92b:	sbb    BYTE PTR [ecx],0xc
  42e92e:	add    BYTE PTR [ebp+0x7e447a28],bl
  42e934:	sub    esp,eax
  42e936:	sbb    al,0xd5
  42e938:	dec    esp
  42e939:	fisub  WORD PTR [eax+eax*1+0x680c1986]
  42e940:	mov    edx,DWORD PTR [edi]
  42e942:	or     al,0x0
  42e944:	imul   esi,DWORD PTR [edi+0x6e],0xd691cb8c
  42e94b:	cli    
  42e94c:	ror    ebp,cl
  42e94e:	jge    0x42e911
  42e950:	pop    esi
  42e951:	xchg   esi,eax
  42e952:	jo     0x42e94e
  42e954:	dec    ecx
  42e955:	aam    0xaf
  42e957:	pop    es
  42e958:	xchg   DWORD PTR ds:0x51d14f19,ebp
  42e95e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e95f:	push   DWORD PTR [ecx]
  42e961:	sbb    ah,ah
  42e963:	inc    DWORD PTR [edi-0x6404f3e7]
  42e969:	mov    eax,ds:0xe9ee4487
  42e96e:	jb     0x42e9e4
  42e970:	adc    ah,BYTE PTR [ecx-0x701018b4]
  42e976:	jno    0x42e972
  42e978:	stc    
  42e979:	fiadd  WORD PTR [ebx]
  42e97b:	add    BYTE PTR [esi-0x568bf3e7],cl
  42e981:	dec    DWORD PTR [ebx]
  42e983:	cs (bad) 
  42e985:	mov    al,ds:0x4330e744
  42e98a:	or     BYTE PTR [ecx-0x24],bh
  42e98d:	cmp    ebx,DWORD PTR [eax-0x39]
  42e990:	jne    0x42e9cd
  42e992:	push   eax
  42e993:	inc    esp
  42e994:	cmp    BYTE PTR [ecx],al
  42e996:	add    edx,DWORD PTR [ecx+ecx*4]
  42e999:	cli    
  42e99a:	xchg   edx,eax
  42e99b:	jmp    0x42e920
  42e99d:	inc    eax
  42e99e:	loope  0x42e9a3
  42e9a0:	add    BYTE PTR [ebp-0x6d870a4b],ch
  42e9a6:	outs   dx,BYTE PTR ds:[esi]
  42e9a7:	aad    0xc3
  42e9a9:	mov    eax,ds:0xcedd478c
  42e9ae:	add    dl,dh
  42e9b0:	add    edx,DWORD PTR [ebp+eax*2+0x4248a801]
  42e9b7:	in     eax,0xef
  42e9b9:	mov    al,ds:0x7a64301a
  42e9be:	sub    esp,DWORD PTR [esi+0x43]
  42e9c1:	cmc    
  42e9c2:	dec    eax
  42e9c3:	ins    BYTE PTR es:[edi],dx
  42e9c4:	push   es
  42e9c5:	fsubp  st(2),st
  42e9c7:	and    al,0x4
  42e9c9:	(bad)  
  42e9ca:	repz (bad) 
  42e9cc:	inc    DWORD PTR [esi+0x1508e142]
  42e9d2:	mov    ecx,0x428602e1
  42e9d7:	mov    ds:0xa2379163,al
  42e9dc:	inc    esp
  42e9dd:	cmp    al,0x65
  42e9df:	inc    ecx
  42e9e0:	shufps xmm0,XMMWORD PTR [edx+0x6f],0xfe
  42e9e5:	mov    esi,ebx
  42e9e7:	and    al,0x4
  42e9e9:	mov    dh,BYTE PTR [esi+0x22c56c29]
  42e9ef:	dec    edi
  42e9f0:	js     0x42e9f7
  42e9f2:	add    cl,dh
  42e9f4:	sub    BYTE PTR [ecx],al
  42e9f6:	xchg   BYTE PTR ds:0xae020b00,al
  42e9fc:	and    al,0x1
  42e9fe:	cmp    eax,0x42b0bbd9
  42ea03:	or     ah,BYTE PTR [edx+0x0]
  42ea06:	cld    
  42ea07:	sub    cl,BYTE PTR [ebx]
  42ea09:	jmp    0x7245a393
  42ea0e:	sbb    BYTE PTR [edx-0x3c7a554e],0x81
  42ea15:	in     eax,dx
  42ea16:	test   BYTE PTR [edx+0xa],al
  42ea19:	pusha  
  42ea1a:	int    0x3e
  42ea1c:	cmp    ebp,DWORD PTR [ecx]
  42ea1e:	(bad)
  42ea21:	jmp    0xf126eca0
  42ea26:	xor    DWORD PTR [esi+0x32],esp
  42ea29:	aam    0xc5
  42ea2b:	sub    dh,dh
  42ea2d:	in     al,dx
  42ea2e:	fimul  WORD PTR gs:[ebx-0x17]
  42ea32:	xchg   ecx,eax
  42ea33:	scas   al,BYTE PTR es:[edi]
  42ea34:	and    cl,al
  42ea36:	invd   
  42ea38:	out    dx,al
  42ea39:	into   
  42ea3a:	push   es
  42ea3b:	jmp    0x2ab2:0xa2230c76
  42ea42:	mov    al,cl
  42ea44:	ds or  eax,0xe982bb86
  42ea4a:	mov    al,BYTE PTR [edx+0xa]
  42ea4d:	jb     0x42ea95
  42ea4f:	data16 add dh,BYTE PTR [edx+0x7f]
  42ea53:	call   0xe589:0xbb822ab2
  42ea5a:	mov    al,BYTE PTR [edx+0xa]
  42ea5d:	mov    edx,0xf1cc69c5
  42ea62:	test   DWORD PTR ds:0x82967126,ebp
  42ea68:	or     dh,BYTE PTR [edi+0x0]
  42ea6b:	xchg   DWORD PTR [edx-0x62],esp
  42ea6e:	stos   BYTE PTR es:[edi],al
  42ea6f:	test   DWORD PTR [esi],edi
  42ea71:	pop    ebx
  42ea72:	mov    bh,0x40
  42ea74:	mov    dh,0x45
  42ea76:	inc    ecx
  42ea77:	iret   
  42ea78:	or     al,0xee
  42ea7a:	dec    esi
  42ea7b:	push   es
  42ea7c:	jmp    0x2453:0xbd830076
  42ea83:	iret   
  42ea84:	je     0x42ea82
  42ea86:	cmp    edx,DWORD PTR [ecx-0x6a9e8cd]
  42ea8c:	mul    DWORD PTR [eax]
  42ea8e:	(bad)  [ecx+0x6]
  42ea91:	mov    eax,0x49ddf43
  42ea96:	div    DWORD PTR [eax-0x4f]
  42ea99:	push   esp
  42ea9a:	pop    esi
  42ea9b:	hlt    
  42ea9c:	or     DWORD PTR [ebx],0x0
  42ea9f:	adc    BYTE PTR [ebx+0x4e],0x11
  42eaa3:	fild   WORD PTR [ebp+0x5c]
  42eaa6:	push   ebx
  42eaa7:	and    al,0xa6
  42eaa9:	hlt    
  42eaaa:	adc    eax,0x4a558b
  42eaaf:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  42eab1:	jbe    0x42eab8
  42eab3:	pop    ecx
  42eab4:	clc    
  42eab5:	pop    esp
  42eab6:	jmp    0x42ea80
  42eab8:	je     0x42ea84
  42eaba:	jmp    0x42eaee
  42eabc:	adc    BYTE PTR [edx+0x5b],dl
  42eabf:	inc    eax
  42eac0:	(bad)  
  42eac1:	ficom  DWORD PTR [edi+ebx*4]
  42eac4:	ds cld 
  42eac6:	add    eax,0x30da7f
  42eacb:	imul   ebx,DWORD PTR [ecx],0x4b
  42eace:	call   0xeed473d3
  42ead3:	(bad)  
  42ead4:	jmp    0x42ea5b
  42ead6:	jnp    0x42eb10
  42ead8:	lock push ecx
  42eada:	dec    esi
  42eadb:	adc    DWORD PTR [edi+0x3e],ebp
  42eade:	xchg   DWORD PTR ds:0x30e697,ecx
  42eae4:	inc    esi
  42eae5:	mov    esi,0x451f0103
  42eaea:	jne    0x42eb05
  42eaec:	jl     0x42eae6
  42eaee:	and    al,al
  42eaf0:	fist   WORD PTR [eax+eax*2]
  42eaf3:	xor    eax,esp
  42eaf5:	out    dx,eax
  42eaf6:	push   edi
  42eaf7:	mov    eax,0xe80bdc86
  42eafc:	sub    al,0x91
  42eafe:	js     0x42eafa
  42eb00:	mov    ch,0x5b
  42eb02:	aad    0x3f
  42eb04:	dec    ebp
  42eb05:	pop    esp
  42eb06:	loope  0x42eb0c
  42eb08:	jmp    0x4650fb12
  42eb0d:	sbb    edi,DWORD PTR ds:0x2a5fc5c0
  42eb13:	dec    esp
  42eb14:	jnp    0x42eaf1
  42eb16:	or     esi,edx
  42eb18:	cmp    ebx,0xffffffa7
  42eb1b:	xchg   BYTE PTR ds:[edi],bl
  42eb1e:	mov    esi,0x1a534d73
  42eb23:	(bad)  [ebx+0x32bf7127]
  42eb29:	fnstsw WORD PTR [eax+0x14]
  42eb2c:	inc    edx
  42eb2d:	or     cl,ah
  42eb2f:	dec    DWORD PTR [esi+ebp*1]
  42eb32:	in     al,0xb7
  42eb34:	add    BYTE PTR [ebp+0x1b],al
  42eb37:	xor    eax,0xc1a7a81
  42eb3c:	add    bl,bh
  42eb3e:	aas    
  42eb3f:	xor    DWORD PTR [eax+0xc1a8e],0x1ffaf00b
  42eb49:	shl    al,1
  42eb4b:	jmp    DWORD PTR [edi+0x7a]
  42eb4e:	pop    ecx
  42eb4f:	push   es
  42eb50:	test   DWORD PTR [esi+0x47],eax
  42eb53:	dec    DWORD PTR [esi-0x4a]
  42eb56:	imul   edx,esi,0xce902d2e
  42eb5c:	mov    bh,0xc5
  42eb5e:	sbb    DWORD PTR [edx+eax*2+0x30],esp
  42eb62:	shl    DWORD PTR [ebp+0x56],0x75
  42eb66:	(bad)  
  42eb68:	mov    esi,0xbed8d7fd
  42eb6d:	rcr    BYTE PTR [eax+0x4272ec0f],0xa1
  42eb74:	add    edx,DWORD PTR [ecx-0x79fffa5a]
  42eb7a:	scas   al,BYTE PTR es:[edi]
  42eb7b:	sbb    al,BYTE PTR [ecx+0x74e55e7d]
  42eb81:	jne    0x42ebf7
  42eb83:	pop    esi
  42eb84:	outs   dx,BYTE PTR ds:[esi]
  42eb85:	jne    0x42ebdf
  42eb87:	aaa    
  42eb88:	dec    DWORD PTR [ecx-0x75fc5b2a]
  42eb8e:	scas   al,BYTE PTR es:[edi]
  42eb8f:	push   es
  42eb90:	ins    BYTE PTR es:[edi],dx
  42eb91:	and    DWORD PTR [ecx],ecx
  42eb93:	daa    
  42eb94:	jne    0x42eb9b
  42eb96:	add    edx,DWORD PTR [esi-0x64d8ffe9]
  42eb9c:	pop    ecx
  42eb9d:	rol    ecx,0xbc
  42eba0:	popa   
  42eba1:	add    al,0x87
  42eba3:	inc    edx
  42eba4:	loope  0x42eb30
  42eba6:	inc    edi
  42eba7:	dec    esi
  42eba8:	inc    edx
  42eba9:	in     al,dx
  42ebaa:	icebp  
  42ebab:	and    ecx,0xffffff88
  42ebae:	and    DWORD PTR [esi],edi
  42ebb0:	loop   0x42ebb5
  42ebb2:	xchg   BYTE PTR [ecx+0x3ed01c1f],bh
  42ebb8:	loope  0x42eb87
  42ebba:	add    BYTE PTR [edi+0x27d50bfd],ch
  42ebc0:	push   esi
  42ebc1:	and    BYTE PTR [esi-0x71dfd1d9],bl
  42ebc7:	daa    
  42ebc8:	and    BYTE PTR ss:[esi+0x4a0eb890],cl
  42ebcf:	dec    esi
  42ebd0:	and    DWORD PTR [ecx+eax*1],eax
  42ebd3:	sub    dh,BYTE PTR [ecx]
  42ebd5:	ins    BYTE PTR es:[edi],dx
  42ebd6:	in     eax,dx
  42ebd7:	es xchg ecx,eax
  42ebd9:	je     0x42ebdb
  42ebdb:	(bad)  
  42ebdc:	cmp    dh,dl
  42ebde:	add    edx,DWORD PTR [edx-0x1f]
  42ebe1:	int    0x0
  42ebe3:	scas   al,BYTE PTR es:[edi]
  42ebe4:	mov    ebp,0xf627d50b
  42ebe9:	pop    ds
  42ebea:	mov    fs,WORD PTR [edi]
  42ebec:	or     edi,ebp
  42ebee:	or     DWORD PTR [edx-0x11],0x584a79f5
  42ebf5:	data16 and dh,0x16
  42ebf9:	test   eax,0xbef2bf85
  42ebfe:	add    BYTE PTR [ebp-0x4d],ch
  42ec01:	out    dx,eax
  42ec02:	dec    esi
  42ec03:	jb     0x42ebc5
  42ec05:	(bad)  
  42ec06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ec07:	fnsetpm(287 only) 
  42ec09:	sbb    ch,cl
  42ec0b:	mov    eax,0xe9fdebf
  42ec10:	scas   al,BYTE PTR es:[edi]
  42ec11:	add    dl,BYTE PTR [esi+0x2612ae52]
  42ec17:	loopne 0x42ec6b
  42ec19:	out    dx,eax
  42ec1a:	xchg   esp,eax
  42ec1b:	jne    0x42ec48
  42ec1d:	jbe    0x42ec04
  42ec1f:	shr    DWORD PTR [ebx],cl
  42ec21:	push   ss
  42ec22:	jmp    0x724d6eaf
  42ec27:	sub    eax,0x32b3e294
  42ec2c:	sub    al,0xf0
  42ec2e:	bound  esp,QWORD PTR [edx-0x74]
  42ec31:	push   eax
  42ec32:	mov    WORD PTR [edi+0x53],es
  42ec35:	or     bh,BYTE PTR [ecx+edx*1]
  42ec38:	sbb    ebx,DWORD PTR [ecx+0x72]
  42ec3b:	(bad)  
  42ec3c:	ds push edi
  42ec3e:	(bad)  
  42ec3f:	jg     0x42ec8f
  42ec41:	out    dx,eax
  42ec42:	push   esp
  42ec43:	sahf   
  42ec44:	sub    DWORD PTR [esi-0x27],esi
  42ec47:	hlt    
  42ec48:	scas   al,BYTE PTR es:[edi]
  42ec49:	(bad)  
  42ec4a:	push   ss
  42ec4b:	cmc    
  42ec4c:	dec    esi
  42ec4d:	inc    esi
  42ec4e:	fadd   QWORD PTR [ebp+0x26]
  42ec51:	test   DWORD PTR [ecx-0x59efe1c3],esi
  42ec57:	aad    0x28
  42ec59:	test   BYTE PTR [esi-0x54b273cb],ah
  42ec5f:	sahf   
  42ec60:	inc    edx
  42ec61:	push   ebp
  42ec62:	bound  eax,QWORD PTR [eax]
  42ec64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ec65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ec66:	fiadd  WORD PTR [eax]
  42ec68:	aas    
  42ec69:	or     al,0x5d
  42ec6b:	mov    ebp,edx
  42ec6d:	inc    ecx
  42ec6e:	adc    eax,0xfc6d2f40
  42ec73:	push   0xa3aa8
  42ec78:	xor    eax,0x32ff59b1
  42ec7d:	sub    ah,BYTE PTR [esi+0x1]
  42ec80:	pop    eax
  42ec81:	dec    ebx
  42ec82:	ds adc al,0x2f
  42ec85:	inc    edx
  42ec86:	add    DWORD PTR [ebp+0x4b],0x3301f7bd
  42ec8d:	pop    ebp
  42ec8e:	xchg   DWORD PTR [ebp-0x65],eax
  42ec91:	adc    DWORD PTR [edx-0x37],edx
  42ec94:	lods   eax,DWORD PTR ds:[esi]
  42ec95:	cmp    cl,BYTE PTR [edx]
  42ec97:	sub    DWORD PTR [edx],0xffffff9e
  42ec9a:	std    
  42ec9b:	jae    0x42ed0b
  42ec9d:	ret    
  42ec9e:	inc    esi
  42ec9f:	loopne 0x42eca0
  42eca1:	mov    al,0x16
  42eca3:	lock mov bl,0x1
  42eca6:	lock mov edx,fs
  42eca9:	mov    eax,ds:0x11d2ff3f
  42ecae:	sbb    al,0x40
  42ecb0:	scas   eax,DWORD PTR es:[edi]
  42ecb1:	pop    es
  42ecb2:	or     edx,DWORD PTR [esi-0xf]
  42ecb5:	or     edi,DWORD PTR [edi+0x45]
  42ecb8:	mov    edi,0x22d7f511
  42ecbd:	xor    DWORD PTR [esi-0x29],0x74f4ee44
  42ecc4:	cmp    DWORD PTR [edx],0xfffffff3
  42ecc7:	adc    eax,0x4a4f5300
  42eccc:	add    BYTE PTR [eax],ch
  42ecce:	pop    edx
  42eccf:	stos   BYTE PTR es:[edi],al
  42ecd0:	adc    ch,BYTE PTR [edi-0x7c8b0cc2]
  42ecd6:	cmp    ch,BYTE PTR [eax+0x0]
  42ecd9:	ja     0x42ed19
  42ecdb:	or     dl,BYTE PTR [eax]
  42ecdd:	pop    edi
  42ecde:	mov    al,0x16
  42ece0:	in     al,dx
  42ece1:	xchg   BYTE PTR [edx],ch
  42ece3:	int3   
  42ece4:	inc    DWORD PTR [edx]
  42ece6:	fcomi  st,st(7)
  42ece8:	push   es
  42ece9:	(bad)  
  42ecea:	mov    esp,0x5b94a012
  42ecef:	push   es
  42ecf0:	mov    al,0x87
  42ecf2:	rol    BYTE PTR ds:0x7d9462e,0x0
  42ecf9:	mov    ebx,0x1a7e4fb0
  42ecfe:	sub    ebx,ecx
  42ed00:	push   ecx
  42ed01:	or     eax,0x460fce46
  42ed06:	sbb    edi,DWORD PTR [ecx]
  42ed08:	xlat   BYTE PTR ds:[ebx]
  42ed09:	push   ebp
  42ed0a:	scas   al,BYTE PTR es:[edi]
  42ed0b:	ret    0x56f7
  42ed0e:	enter  0x3cd,0x35
  42ed12:	enter  0xfad8,0x53
  42ed16:	and    esi,DWORD PTR [esp+ebx*2-0x2f]
  42ed1a:	rol    BYTE PTR [esi],cl
  42ed1c:	add    BYTE PTR [esi+0xbd17c9b],al
  42ed22:	pop    ebx
  42ed23:	repnz dec esi
  42ed25:	push   ecx
  42ed26:	mov    al,ds:0xdb96743a
  42ed2b:	or     ecx,DWORD PTR [ecx-0x31ccb500]
  42ed31:	add    esp,DWORD PTR [ecx-0x7d9a105b]
  42ed37:	rol    DWORD PTR [ecx],0x58
  42ed3a:	sahf   
  42ed3b:	pushf  
  42ed3c:	icebp  
  42ed3d:	cli    
  42ed3e:	mov    DWORD PTR [ebp-0x61291039],edx
  42ed44:	(bad)  
  42ed45:	repz (bad) 
  42ed47:	push   0x48d4fed0
  42ed4c:	aad    0xfa
  42ed4e:	repz adc eax,0xed5e747b
  42ed54:	push   esp
  42ed55:	test   BYTE PTR [esi+0x6f],al
  42ed58:	in     eax,dx
  42ed59:	cli    
  42ed5a:	fild   DWORD PTR [edx-0x73]
  42ed5d:	jno    0x42ed93
  42ed5f:	ror    BYTE PTR [esi],0x74
  42ed62:	xchg   BYTE PTR [esi+0x3ac270ec],ch
  42ed68:	fs out dx,eax
  42ed6a:	mov    DWORD PTR [esi+0x3f2044f3],ebx
  42ed70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ed71:	(bad)  
  42ed72:	sbb    al,0x42
  42ed74:	js     0x42ed6d
  42ed76:	adc    DWORD PTR [ecx+ebx*4],esp
  42ed79:	ror    DWORD PTR [ebx],1
  42ed7b:	jle    0x42ede5
  42ed7d:	shl    BYTE PTR [eax+0x1fc23f9],cl
  42ed83:	(bad)  
  42ed84:	data16 loopne 0x42ed2c
  42ed87:	mov    dh,0x62
  42ed89:	pusha  
  42ed8a:	rol    DWORD PTR [eax-0x1f],0x3
  42ed8e:	cmp    DWORD PTR [eax+ebx*4-0x4a39ffcc],ecx
  42ed95:	data16 test al,0xda
  42ed98:	and    esp,DWORD PTR [ecx]
  42ed9a:	rol    DWORD PTR [ecx-0x6e],cl
  42ed9d:	fwait
  42ed9e:	daa    
  42ed9f:	ss jo  0x42edee
  42eda2:	jno    0x42ed3e
  42eda4:	xchg   edx,eax
  42eda5:	hlt    
  42eda6:	ret    
  42eda7:	mov    ecx,0x20f721be
  42edac:	mov    bh,0xae
  42edae:	iret   
  42edaf:	js     0x42ed33
  42edb1:	loope  0x42ee31
  42edb3:	or     bl,bh
  42edb5:	div    BYTE PTR [eax-0x64]
  42edb8:	xchg   edx,eax
  42edb9:	loopne 0x42ee14
  42edbb:	or     BYTE PTR [esi-0x2f],ah
  42edbe:	adc    al,BYTE PTR [esi+0x42]
  42edc1:	fsubr  QWORD PTR [eax]
  42edc3:	adc    edi,DWORD PTR [ebp+0x237c6e7d]
  42edc9:	xor    dh,BYTE PTR [ecx-0x66]
  42edcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42edcd:	aam    0xc3
  42edcf:	imul   esi,DWORD PTR [esi+0x2362a766],0x2835b60b
  42edd9:	push   ss
  42edda:	pop    ecx
  42eddb:	jp     0x42ed5f
  42eddd:	or     ch,BYTE PTR [ebp+eax*8-0x51]
  42ede1:	xor    BYTE PTR [eax+ecx*1-0x21],ch
  42ede5:	in     eax,dx
  42ede6:	xchg   esi,eax
  42ede7:	mov    dh,0x73
  42ede9:	out    dx,eax
  42edea:	mov    bh,0x53
  42edec:	lahf   
  42eded:	jge    0x42ee1b
  42edef:	out    0x72,al
  42edf1:	jge    0x42ee57
  42edf3:	jmp    0xb9de1d
  42edf8:	xor    eax,0xc564d828
  42edfd:	scas   eax,DWORD PTR es:[edi]
  42edfe:	enter  0x2cf,0xa6
  42ee02:	retf   0xf8e2
  42ee05:	dec    ebx
  42ee06:	out    dx,eax
  42ee07:	fsub   st(1),st
  42ee09:	push   ebx
  42ee0a:	retf   0x6cc7
  42ee0d:	jle    0x42ee0d
  42ee0f:	jae    0x42edd1
  42ee11:	loop   0x42ee6d
  42ee13:	ds js  0x42edc0
  42ee16:	sbb    BYTE PTR [ecx-0x4b35427b],ch
  42ee1c:	mov    ebx,edx
  42ee1e:	or     DWORD PTR [edx],edx
  42ee20:	retf   
  42ee21:	pushf  
  42ee22:	sbb    bl,BYTE PTR [esi]
  42ee24:	mov    eax,0x47b2e2a6
  42ee29:	es lock scas al,BYTE PTR es:[edi]
  42ee2c:	xlat   BYTE PTR ds:[ebx]
  42ee2d:	mov    esp,0xfe02a2cb
  42ee32:	jbe    0x42ee64
  42ee34:	dec    ebx
  42ee35:	aas    
  42ee36:	or     bl,BYTE PTR [edx+ebx*1-0x7f0275e9]
  42ee3d:	inc    ecx
  42ee3e:	or     ch,cl
  42ee40:	mov    ah,0x90
  42ee42:	push   edi
  42ee43:	push   ebx
  42ee44:	call   0x7dfa:0xfce1761d
  42ee4b:	sbb    al,0xfa
  42ee4d:	jb     0x42ee31
  42ee4f:	add    ch,al
  42ee51:	sub    esi,0xffffffff
  42ee54:	pop    esi
  42ee55:	or     esp,eax
  42ee57:	pop    si
  42ee59:	or     edi,esp
  42ee5b:	rol    DWORD PTR [eax],0x47
  42ee5e:	aaa    
  42ee5f:	ins    BYTE PTR es:[edi],dx
  42ee60:	xor    DWORD PTR [edx+0x5cff2098],ebx
  42ee66:	pop    edi
  42ee67:	and    al,al
  42ee69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ee6a:	cli    
  42ee6b:	push   es
  42ee6c:	or     al,0x4f
  42ee6e:	cli    
  42ee6f:	(bad)  
  42ee70:	neg    DWORD PTR [edi-0x3b]
  42ee73:	test   DWORD PTR [eax+esi*1],0xac41cd0a
  42ee7a:	scas   eax,DWORD PTR es:[edi]
  42ee7b:	pop    es
  42ee7c:	jb     0x42ee82
  42ee7e:	jo     0x42eeed
  42ee80:	adc    BYTE PTR [ebx],ch
  42ee82:	imul   esi,ebx,0x75
  42ee85:	inc    edx
  42ee87:	xchg   al,ch
  42ee89:	push   ecx
  42ee8a:	mov    cl,0xf4
  42ee8c:	mov    DWORD PTR [edx],eax
  42ee8e:	jg     0x42ee81
  42ee90:	inc    DWORD PTR [eax+0x7e]
  42ee93:	and    esi,DWORD PTR [eax+eiz*4]
  42ee96:	mov    cl,0x65
  42ee98:	adc    ch,dh
  42ee9a:	ret    0xf076
  42ee9d:	xor    cl,bl
  42ee9f:	out    0xfe,eax
  42eea1:	mov    al,ds:0xdb69e7b1
  42eea6:	mov    al,0xf4
  42eea8:	mulps  xmm1,XMMWORD PTR [ebx]
  42eeab:	sbb    al,0x2b
  42eead:	push   0x2b482c1a
  42eeb2:	and    DWORD PTR [eax+0x75],ecx
  42eeb5:	shr    ebp,0x9b
  42eeb8:	xchg   esp,eax
  42eeb9:	out    dx,eax
  42eeba:	inc    ebp
  42eebb:	push   0xb2498407
  42eec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eec1:	add    BYTE PTR [ebx],cl
  42eec3:	add    eax,0x106969f0
  42eec8:	inc    eax
  42eec9:	mov    eax,DWORD PTR [esi+0x5eee74f0]
  42eecf:	enter  0xf9f3,0x69
  42eed3:	xchg   esi,eax
  42eed4:	push   DWORD PTR [esi-0x14]
  42eed7:	xor    ebx,ebx
  42eed9:	mov    ebx,es
  42eedb:	fcmovnu st,st(3)
  42eedd:	cli    
  42eede:	jnp    0x42ef4f
  42eee0:	sbb    BYTE PTR [eax-0x7a],al
  42eee3:	mov    al,al
  42eee5:	push   esi
  42eee6:	dec    edi
  42eee7:	in     eax,dx
  42eee8:	sbb    eax,DWORD PTR [eax]
  42eeea:	lods   al,BYTE PTR ds:[esi]
  42eeeb:	daa    
  42eeec:	aam    0x27
  42eeee:	(bad)  
  42eeef:	ins    BYTE PTR es:[edi],dx
  42eef0:	push   es
  42eef1:	call   0x4936cd
  42eef6:	push   ebp
  42eef7:	cdq    
  42eef8:	es jne 0x42ef15
  42eefb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eefc:	leave  
  42eefd:	cmp    eax,DWORD PTR [ebp-0x414d0f13]
  42ef03:	pop    ds
  42ef04:	mov    ecx,DWORD PTR [ebx-0x79]
  42ef07:	inc    ebx
  42ef08:	out    dx,eax
  42ef09:	mov    dl,0x46
  42ef0b:	xor    esi,esp
  42ef0d:	test   dh,al
  42ef0f:	imul   BYTE PTR [esi+eiz*2]
  42ef12:	test   al,ch
  42ef14:	in     eax,0x36
  42ef16:	(bad)  
  42ef18:	add    al,0x87
  42ef1a:	push   edi
  42ef1b:	mov    bh,0xc
  42ef1d:	out    dx,al
  42ef1e:	call   ebp
  42ef20:	addr16 cli 
  42ef22:	push   edi
  42ef23:	add    edx,esi
  42ef25:	cli    
  42ef26:	add    BYTE PTR [ebx-0x79bfe9c9],bl
  42ef2c:	scas   al,BYTE PTR es:[edi]
  42ef2d:	dec    ebx
  42ef2e:	jae    0x42eebb
  42ef30:	cld    
  42ef31:	jne    0x42eebb
  42ef33:	xor    ecx,DWORD PTR [edi-0x74]
  42ef36:	dec    esp
  42ef37:	mov    ds:0xadc1721f,al
  42ef3c:	and    eax,0x6c46c03d
  42ef41:	je     0x42efa7
  42ef43:	sahf   
  42ef44:	inc    ecx
  42ef45:	fs mov edi,0x4415207d
  42ef4b:	popa   
  42ef4c:	push   edi
  42ef4d:	push   ebp
  42ef4e:	add    al,0x86
  42ef50:	add    ecx,DWORD PTR [esp+edx*1-0x22]
  42ef54:	cmp    dl,BYTE PTR [ecx]
  42ef56:	shl    DWORD PTR [ecx+0x28],0xbe
  42ef5a:	jmp    0xc7b00fb8
  42ef5f:	or     ebx,0x4aca79b3
  42ef65:	fs out 0x3d,eax
  42ef68:	inc    ebx
  42ef69:	jl     0x42ef3e
  42ef6b:	jge    0x42ef30
  42ef6d:	push   ebp
  42ef6e:	cli    
  42ef6f:	in     eax,0x42
  42ef71:	loope  0x42ef76
  42ef73:	xchg   BYTE PTR [edi+0x5d],cl
  42ef76:	mov    fs,WORD PTR [ecx]
  42ef78:	and    dl,ah
  42ef7a:	js     0x42ef79
  42ef7c:	dec    esp
  42ef7d:	inc    ecx
  42ef7e:	add    al,0x86
  42ef80:	inc    edx
  42ef81:	push   0xffffffcf
  42ef83:	jns    0x42ef4a
  42ef85:	dec    esp
  42ef86:	std    
  42ef87:	add    eax,0x3e1cf
  42ef8c:	xchg   bl,cl
  42ef8e:	mov    dh,0xff
  42ef90:	lock cli 
  42ef92:	push   0xffffffcf
  42ef94:	or     ebp,0xfad502e5
  42ef9a:	in     al,dx
  42ef9b:	inc    ebx
  42ef9c:	js     0x42efa1
  42ef9e:	ins    DWORD PTR es:[edi],dx
  42ef9f:	fmul   DWORD PTR [ebx-0x5f8df3aa]
  42efa5:	sbb    al,0x7b
  42efa7:	out    dx,eax
  42efa8:	(bad)  
  42efa9:	retf   
  42efaa:	scas   al,BYTE PTR es:[edi]
  42efab:	adc    edi,DWORD PTR [ecx-0x2e309506]
  42efb1:	ret    
  42efb2:	fadd   QWORD PTR [ebx]
  42efb4:	xor    dh,BYTE PTR [esi+0x7c]
  42efb7:	rol    DWORD PTR [ebp+0x2bfc0bc3],1
  42efbd:	xchg   DWORD PTR [edx],ecx
  42efbf:	fs pushf 
  42efc1:	pop    ss
  42efc2:	(bad)  
  42efc4:	or     al,0x9e
  42efc6:	sbb    ch,BYTE PTR [edx+0x68]
  42efc9:	and    ecx,DWORD PTR [ebx]
  42efcb:	jb     0x42f01d
  42efcd:	and    esi,DWORD PTR [esi+edi*4]
  42efd0:	jbe    0x42f025
  42efd2:	call   DWORD PTR [ebp+0x4f029051]
  42efd8:	or     DWORD PTR ds:0xfd050477,ecx
  42efde:	out    dx,eax
  42efdf:	out    0x85,al
  42efe1:	inc    edx
  42efe2:	or     ebx,edx
  42efe4:	xchg   cl,dh
  42efe6:	xor    edi,DWORD PTR [edx+eax*2]
  42efe9:	lods   eax,DWORD PTR ds:[esi]
  42efea:	sbb    BYTE PTR [ebp+eax*8-0x6d],ah
  42efee:	push   es
  42efef:	rol    BYTE PTR [eax],cl
  42eff1:	aad    0x94
  42eff3:	add    BYTE PTR [edx+0x18],ah
  42eff6:	dec    ebx
  42eff7:	and    ebx,eax
  42eff9:	sahf   
  42effa:	push   ebp
  42effb:	or     edi,DWORD PTR [edi-0x64]
  42effe:	push   ebp
  42efff:	xor    esp,0x75
  42f002:	sbb    eax,DWORD PTR [esi-0x7b]
  42f005:	scas   al,BYTE PTR es:[edi]
  42f006:	push   es
  42f007:	or     al,0xc2
  42f009:	mov    DWORD PTR [edi],esp
  42f00b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f00c:	push   0x38
  42f00e:	sbb    esi,eax
  42f010:	cdq    
  42f011:	test   BYTE PTR [edi],ah
  42f013:	(bad)  
  42f014:	sbb    DWORD PTR [edx+0x5f],eax
  42f017:	retf   
  42f018:	jb     0x42f002
  42f01a:	mov    WORD PTR es:[ecx+ebp*2+0x2d293d1c],gs
  42f022:	mov    ds:0xe085e973,al
  42f027:	(bad)  
  42f028:	call   0xa1a5230c
  42f02d:	aad    0x5f
  42f02f:	or     al,BYTE PTR [ecx]
  42f031:	call   0x3c12:0x2ee90a97
  42f038:	add    BYTE PTR [esp+ebx*4+0x4e],ah
  42f03c:	cld    
  42f03d:	adc    al,0x5
  42f03f:	xor    al,0x8b
  42f041:	sbb    edx,DWORD PTR [ebx+0x5a]
  42f044:	mov    dl,bh
  42f046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f047:	gs inc eax
  42f049:	xlat   BYTE PTR ds:[ebx]
  42f04a:	inc    esi
  42f04b:	cmp    al,BYTE PTR [eax]
  42f04d:	outs   dx,DWORD PTR ds:[esi]
  42f04e:	icebp  
  42f04f:	inc    eax
  42f050:	call   edx
  42f052:	push   ds
  42f053:	cmc    
  42f054:	adc    eax,0x4a34bf00
  42f059:	add    dh,dl
  42f05b:	add    edx,eax
  42f05d:	cmp    ebp,DWORD PTR [ebx+edx*1]
  42f060:	pop    ecx
  42f061:	push   edi
  42f062:	jno    0x42f0e2
  42f064:	(bad)  
  42f065:	retf   
  42f066:	sbb    ch,BYTE PTR [edx-0x24493778]
  42f06c:	sar    DWORD PTR [ebx],cl
  42f06e:	hlt    
  42f06f:	adc    bh,BYTE PTR [ebx]
  42f071:	push   ebx
  42f072:	ins    BYTE PTR es:[edi],dx
  42f073:	lock mov BYTE PTR [ebp-0x1],dl
  42f077:	jle    0x42f04e
  42f079:	dec    BYTE PTR [eax]
  42f07b:	stos   BYTE PTR es:[edi],al
  42f07c:	mov    eax,eax
  42f07e:	adc    edx,DWORD PTR [eax+0x3f]
  42f081:	push   edi
  42f082:	cwde   
  42f083:	adc    edx,esp
  42f085:	call   DWORD PTR [edx]
  42f087:	mov    ds:0xa8f775f4,al
  42f08c:	push   ss
  42f08d:	xchg   esp,eax
  42f08e:	std    
  42f08f:	add    eax,esi
  42f091:	div    BYTE PTR [edi-0x480835b3]
  42f097:	sahf   
  42f098:	inc    esi
  42f099:	out    0x48,eax
  42f09b:	adc    edx,esp
  42f09d:	call   0x314ce7
  42f0a2:	xlat   BYTE PTR ds:[ebx]
  42f0a3:	or     ch,ch
  42f0a5:	jne    0x42f059
  42f0a7:	stc    
  42f0a8:	out    dx,eax
  42f0a9:	jg     0x42f05a
  42f0ab:	inc    ecx
  42f0ac:	aas    
  42f0ad:	call   DWORD PTR [edx]
  42f0af:	mov    ds:0x238675f4,al
  42f0b4:	gs adc al,0xba
  42f0b7:	sbb    esp,ecx
  42f0b9:	inc    DWORD PTR [eax]
  42f0bb:	push   cs
  42f0bc:	out    0x6b,eax
  42f0be:	jle    0x42f10b
  42f0c0:	pop    ds
  42f0c1:	xchg   BYTE PTR gs:[ebx+0x4b],cl
  42f0c5:	dec    edi
  42f0c6:	or     al,0x55
  42f0c8:	imul   eax,esi,0xffffffbe
  42f0cb:	or     eax,0xcb7e4e8e
  42f0d0:	jmp    DWORD PTR [esi+ebp*1+0x46]
  42f0d4:	add    esi,DWORD PTR [esi+0x462b8675]
  42f0da:	add    eax,DWORD PTR [esi-0x7198018f]
  42f0e0:	cmp    eax,edi
  42f0e2:	jmp    FWORD PTR [ecx-0x7d]
  42f0e5:	loopne 0x42f0e6
  42f0e7:	dec    ecx
  42f0e8:	mov    al,ds:0xe7ab7e5e
  42f0ed:	or     eax,DWORD PTR [edi-0x3cf7003f]
  42f0f3:	add    eax,0x76868bc3
  42f0f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f0f9:	jns    0x42f16e
  42f0fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f0fc:	test   al,0xe3
  42f0fe:	add    esi,DWORD PTR [edx+0x15]
  42f101:	sar    esi,0x18
  42f104:	mov    ds:0xed05d7fa,al
  42f109:	or     esi,DWORD PTR [edi+edx*2-0x70]
  42f10d:	leave  
  42f10e:	or     eax,DWORD PTR [ebp+0x5bfadb64]
  42f114:	and    ebp,DWORD PTR [edi+0x44]
  42f117:	out    0xa5,al
  42f119:	dec    ebx
  42f11a:	jae    0x42f152
  42f11c:	nop
  42f11d:	add    edi,edi
  42f11f:	add    BYTE PTR [eax-0x7af03671],bh
  42f125:	ins    BYTE PTR es:[edi],dx
  42f126:	outs   dx,BYTE PTR ds:[esi]
  42f127:	inc    esp
  42f128:	loop   0x42f0cb
  42f12a:	ret    0xddb
  42f12d:	inc    edx
  42f12e:	in     al,0x80
  42f130:	stc    
  42f131:	xchg   ebp,eax
  42f132:	enter  0x84ec,0x67
  42f136:	sbb    BYTE PTR [edx-0x57],ch
  42f139:	sbb    al,0xd
  42f13b:	add    BYTE PTR [ecx-0x64bc9afd],ah
  42f141:	mov    eax,?
  42f143:	out    dx,eax
  42f144:	mov    cl,0x1c
  42f146:	(bad)  
  42f147:	test   DWORD PTR [edx],0x9257602
  42f14d:	mov    ?,WORD PTR [ebp-0x5b407985]
  42f153:	add    cl,dh
  42f155:	test   DWORD PTR [ebp+0x64f36100],edi
  42f15b:	inc    edx
  42f15c:	jne    0x42f185
  42f15e:	add    DWORD PTR [ebp-0x4b4ee136],0x34e72786
  42f168:	inc    esi
  42f169:	and    DWORD PTR [ebp+edi*2-0x489ad556],0x3d
  42f171:	sbb    al,0xd4
  42f173:	inc    ebx
  42f174:	sub    DWORD PTR [edi],esi
  42f176:	sbb    eax,DWORD PTR [esi+eax*4]
  42f179:	add    dl,ch
  42f17b:	add    ebp,DWORD PTR [eax-0x3393e6c6]
  42f181:	jg     0x42f164
  42f183:	pop    ebx
  42f184:	add    BYTE PTR [ebx-0x66],cl
  42f187:	loope  0x42f18c
  42f189:	pop    ecx
  42f18a:	imul   DWORD PTR [ecx-0x39]
  42f18d:	in     al,0xc9
  42f18f:	(bad)  
  42f190:	add    BYTE PTR [bp+si+0x7d0d],al
  42f195:	adc    eax,0x8604614b
  42f19a:	inc    edx
  42f19b:	sbb    al,0x55
  42f19d:	push   edi
  42f19e:	jb     0x42f204
  42f1a0:	test   al,0x81
  42f1a2:	(bad)  
  42f1a3:	loope  0x42f1a8
  42f1a5:	xchg   BYTE PTR [esi],dh
  42f1a7:	or     bh,BYTE PTR [edi-0x1cc93139]
  42f1ad:	cmp    al,0x96
  42f1af:	shl    BYTE PTR [edx-0x7c],cl
  42f1b2:	push   ebx
  42f1b3:	retf   
  42f1b4:	xchg   ebp,eax
  42f1b5:	arpl   bp,cx
  42f1b7:	cs loope 0x42f1e4
  42f1ba:	sbb    DWORD PTR [edx],0x45ca44ea
  42f1c0:	and    eax,0xc0ea9e1d
  42f1c5:	jle    0x42f15d
  42f1c7:	adc    ah,BYTE PTR [edx-0x47]
  42f1ca:	inc    ebx
  42f1cb:	xor    ebx,ecx
  42f1cd:	jo     0x42f219
  42f1cf:	cmp    DWORD PTR [esi+edi*2],0xffffffca
  42f1d3:	sbb    ah,BYTE PTR [edi+0x6a0a2030]
  42f1d9:	(bad)  
  42f1da:	aas    
  42f1db:	mov    ebp,DWORD PTR [ecx+0x6ad12461]
  42f1e1:	(bad)  
  42f1e2:	das    
  42f1e3:	jecxz  0x42f196
  42f1e5:	call   0xa6ca:0xaa4b02
  42f1ec:	loop   0x42f195
  42f1ee:	add    BYTE PTR [eax],ah
  42f1f0:	or     ebp,DWORD PTR [edx-0x10]
  42f1f3:	push   ss
  42f1f4:	lock jae 0x42f1e7
  42f1f7:	pop    ds
  42f1f8:	jecxz  0x42f274
  42f1fa:	sbb    al,0x1b
  42f1fc:	lock stos DWORD PTR es:[edi],eax
  42f1fe:	sbb    eax,0xb172571b
  42f203:	pushf  
  42f204:	fidivr WORD PTR [ecx-0x5775bc6d]
  42f20a:	push   ebp
  42f20b:	retf   0x793d
  42f20e:	add    DWORD PTR [ebx+0x5b36f60c],0x8
  42f215:	mov    dh,0xfc
  42f217:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f218:	pop    es
  42f219:	popa   
  42f21a:	xor    BYTE PTR [edx],dl
  42f21c:	push   edx
  42f21d:	push   esi
  42f21e:	ins    BYTE PTR es:[edi],dx
  42f21f:	(bad)
  42f222:	mov    ch,0x41
  42f224:	jge    0x42f2a3
  42f226:	outs   dx,DWORD PTR ds:[esi]
  42f227:	xchg   ecx,eax
  42f228:	loop   0x42f1b2
  42f22a:	sbb    dl,BYTE PTR [ebp-0x6858ba78]
  42f230:	inc    esi
  42f231:	repz xor bl,ah
  42f234:	fist   WORD PTR [eax-0x34]
  42f237:	jle    0x42f220
  42f239:	stos   DWORD PTR es:[edi],eax
  42f23a:	js     0x42f1e0
  42f23c:	hlt    
  42f23d:	test   BYTE PTR [edi+0x1a],ch
  42f240:	mov    edi,fs
  42f242:	scas   eax,DWORD PTR es:[edi]
  42f243:	or     cl,BYTE PTR ds:[ebp+0x32406eea]
  42f24a:	je     0x42f1e4
  42f24c:	inc    esi
  42f24d:	clc    
  42f24e:	add    BYTE PTR [eax+0x6f10dfd8],ch
  42f254:	inc    esi
  42f255:	or     cl,BYTE PTR [ebx+0x85a6aa]
  42f25b:	in     eax,0x56
  42f25d:	scas   eax,DWORD PTR es:[edi]
  42f25e:	call   0x80be0cce
  42f263:	dec    esi
  42f264:	adc    cl,BYTE PTR [eax-0x3540efbb]
  42f26a:	popa   
  42f26b:	dec    ebp
  42f26c:	xchg   BYTE PTR [edi+0x7d],ch
  42f26f:	lock sub al,0x7a
  42f272:	adc    BYTE PTR [edi+0x20b6f503],ch
  42f278:	call   0x1cc88c47
  42f27d:	push   ebp
  42f27e:	not    DWORD PTR [eax]
  42f280:	pushf  
  42f281:	sub    eax,0xc0e81030
  42f286:	(bad)  
  42f287:	fcom   QWORD PTR [esi-0xc5acdfd]
  42f28d:	hlt    
  42f28e:	ud1    ebx,DWORD PTR [ebp-0xf]
  42f292:	ret    
  42f293:	ja     0x42f2c7
  42f295:	cmp    DWORD PTR [edi+ebx*4-0x79f0f7ee],eax
  42f29c:	mov    ecx,0x3a8a8733
  42f2a1:	push   0x63e6d9be
  42f2a6:	cli    
  42f2a7:	inc    ebx
  42f2a8:	pop    ebx
  42f2a9:	stc    
  42f2aa:	stos   DWORD PTR es:[edi],eax
  42f2ab:	jns    0x42f246
  42f2ad:	dec    ebx
  42f2ae:	ror    DWORD PTR [edx+0x87161b],0x43
  42f2b5:	adc    edx,edx
  42f2b7:	add    DWORD PTR [ebp+0x5d],esi
  42f2ba:	(bad)  
  42f2bb:	repnz mov cl,0x31
  42f2be:	dec    ebx
  42f2bf:	or     bl,al
  42f2c1:	fs or  ecx,edx
  42f2c4:	add    edi,DWORD PTR [esi]
  42f2c6:	stc    
  42f2c7:	push   es
  42f2c8:	leave  
  42f2c9:	sub    bh,dl
  42f2cb:	je     0x42f253
  42f2cd:	sub    ecx,DWORD PTR [esi+edi*4-0x7923bb7c]
  42f2d4:	ret    
  42f2d5:	adc    edx,edx
  42f2d7:	add    al,0xb5
  42f2d9:	(bad)  
  42f2db:	bnd jno 0x42f284
  42f2de:	pop    ecx
  42f2df:	je     0x42f26f
  42f2e1:	loopne 0x42f2e9
  42f2e3:	pop    esi
  42f2e4:	out    dx,eax
  42f2e5:	test   DWORD PTR [esi],eax
  42f2e7:	out    0x8f,eax
  42f2e9:	xchg   esp,eax
  42f2ea:	retf   0x1e07
  42f2ed:	sub    al,0xfb
  42f2ef:	push   es
  42f2f0:	dec    ecx
  42f2f1:	sub    cl,bh
  42f2f3:	imul   esp,DWORD PTR [eax-0x754179d0],0x856611b4
  42f2fd:	cld    
  42f2fe:	pop    ecx
  42f2ff:	pop    edx
  42f300:	sbb    DWORD PTR [eax+0x1393cd8a],esi
  42f306:	xor    DWORD PTR [eax],eax
  42f308:	mov    eax,ds:0x1cffd11d
  42f30d:	neg    DWORD PTR [ebp+0x44]
  42f310:	mov    gs,WORD PTR [edx]
  42f312:	sti    
  42f313:	pop    es
  42f314:	rol    DWORD PTR [ecx-0x1e],0xd5
  42f318:	add    BYTE PTR [edx-0x72],ch
  42f31b:	loope  0x42f377
  42f31d:	xchg   DWORD PTR [ecx],eax
  42f31f:	jecxz  0x42f303
  42f321:	ins    BYTE PTR es:[edi],dx
  42f322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f323:	loope  0x42f2a8
  42f325:	sbb    BYTE PTR [ebp-0x8],al
  42f328:	lods   eax,DWORD PTR ds:[esi]
  42f329:	adc    BYTE PTR [eax],al
  42f32b:	out    0x33,al
  42f32d:	xchg   ah,cl
  42f32f:	and    al,0xca
  42f331:	pop    esp
  42f332:	or     esp,DWORD PTR [edi+edi*8]
  42f335:	mov    ecx,0x30577c6d
  42f33a:	es mov dl,0xcd
  42f33d:	push   esp
  42f33e:	(bad)  
  42f33f:	sahf   
  42f340:	pop    ebx
  42f341:	push   ecx
  42f342:	sub    bl,BYTE PTR [esi-0x2]
  42f345:	cdq    
  42f346:	sbb    BYTE PTR [esi+0x43],bl
  42f349:	adc    eax,0x844a494d
  42f34e:	inc    edx
  42f34f:	loope  0x42f32e
  42f351:	mov    esi,0x83f2097d
  42f356:	lds    ebx,FWORD PTR [esi]
  42f358:	pop    esp
  42f359:	rcl    DWORD PTR [edi],0xf7
  42f35c:	jg     0x42f3d9
  42f35e:	and    cl,0x5b
  42f361:	and    edx,DWORD PTR [ebx-0x62279a40]
  42f367:	leave  
  42f368:	add    al,0xff
  42f36a:	jge    0x42f319
  42f36c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f36d:	sub    eax,0xc103e13e
  42f372:	xchg   ebp,eax
  42f373:	jmp    0xf9d0c87b
  42f378:	fs call 0x2d29:0xc3f40a
  42f380:	repnz fs call 0x2133:0x760f804a
  42f389:	add    al,0x53
  42f38b:	inc    esp
  42f38c:	loop   0x42f391
  42f38e:	xchg   BYTE PTR [ebp+0x7e7eb70a],cl
  42f394:	out    dx,al
  42f395:	mov    edx,0xeae2da57
  42f39a:	test   DWORD PTR [edx-0x9],eax
  42f39d:	pop    eax
  42f39e:	jno    0x42f41e
  42f3a0:	loop   0x42f406
  42f3a2:	icebp  
  42f3a3:	out    0x5c,eax
  42f3a5:	inc    ecx
  42f3a6:	rcr    BYTE PTR [ecx],0xf0
  42f3a9:	inc    esi
  42f3aa:	imul   edi,DWORD PTR [esi-0x12],0x65
  42f3ae:	inc    edx
  42f3af:	xchg   ebx,eax
  42f3b0:	punpckldq mm2,mm1
  42f3b3:	dec    ebx
  42f3b4:	sbb    DWORD PTR [edi],0x5a
  42f3b7:	adc    DWORD PTR [eax-0x1d67d4dc],esi
  42f3bd:	jmp    0xa185235b
  42f3c2:	mov    cl,0x4b
  42f3c4:	out    dx,eax
  42f3c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f3c6:	sub    eax,0x32016dc2
  42f3cb:	sbb    al,dh
  42f3cd:	jmp    0x297fac69
  42f3d2:	dec    ebx
  42f3d3:	jns    0x42f396
  42f3d5:	sub    edi,DWORD PTR [edx+0x17]
  42f3d8:	mov    al,ds:0x5611cee8
  42f3dd:	jb     0x42f3b0
  42f3df:	jb     0x42f43c
  42f3e1:	aas    
  42f3e2:	add    BYTE PTR [ebx-0x61],dl
  42f3e5:	push   ds
  42f3e6:	in     eax,0x85
  42f3e8:	inc    edx
  42f3e9:	fs icebp 
  42f3eb:	jmp    0x3d17:0x4692ea4e
  42f3f2:	xchg   edx,eax
  42f3f3:	mov    esp,0x88aeee76
  42f3f8:	sbb    ebp,DWORD PTR ds:[ecx]
  42f3fb:	mov    bh,BYTE PTR [edi+0x4cb6e2fa]
  42f401:	xchg   BYTE PTR [ebp+eax*4+0x60620a42],ch
  42f408:	out    0x1a,al
  42f40a:	add    BYTE PTR [edi+0x3e],bl
  42f40d:	aas    
  42f40e:	push   esi
  42f40f:	ins    BYTE PTR es:[edi],dx
  42f410:	cld    
  42f411:	or     dl,BYTE PTR [ebx+0x78]
  42f414:	sub    BYTE PTR [edi+eax*8],dl
  42f417:	loope  0x42f453
  42f419:	or     al,BYTE PTR [eax]
  42f41b:	fistp  WORD PTR [ebp-0x79b7f78a]
  42f421:	xchg   al,al
  42f423:	call   0xef4382be
  42f428:	inc    edx
  42f429:	aas    
  42f42a:	push   esi
  42f42b:	in     al,dx
  42f42c:	clc    
  42f42d:	or     dl,BYTE PTR [ebx-0x78]
  42f430:	sub    BYTE PTR [edi+edi*8],dl
  42f433:	add    bl,BYTE PTR [ebx]
  42f435:	cmc    
  42f436:	xlat   BYTE PTR ds:[ebx]
  42f437:	and    al,BYTE PTR [ebx+0x43208404]
  42f43d:	or     al,BYTE PTR [eax]
  42f43f:	mov    BYTE PTR [eax],ch
  42f441:	adc    al,0xff
  42f443:	mov    ds:0x3fff76,al
  42f448:	scas   eax,DWORD PTR es:[edi]
  42f449:	popf   
  42f44a:	jns    0x42f454
  42f44c:	adc    al,0x60
  42f44e:	push   0x16
  42f450:	fild   WORD PTR [edx-0x7f]
  42f453:	pop    ebp
  42f454:	pop    ebx
  42f455:	lahf   
  42f456:	fcomp  QWORD PTR [ecx-0x1c]
  42f459:	pop    ecx
  42f45a:	add    al,0xb7
  42f45c:	mov    eax,ds:0xb7d9fb30
  42f461:	mov    DWORD PTR [ecx+0x8],0xe86f30c3
  42f468:	ins    BYTE PTR es:[edi],dx
  42f469:	out    dx,al
  42f46a:	add    al,BYTE PTR [ebx+0x11771b37]
  42f470:	mov    ch,0x5e
  42f472:	out    0x8,eax
  42f474:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f475:	add    BYTE PTR [eax],dl
  42f477:	push   0x27
  42f479:	(bad)  
  42f47a:	push   ecx
  42f47b:	and    al,0xc7
  42f47d:	sub    BYTE PTR [ebx-0x44cee6ba],al
  42f483:	inc    esi
  42f484:	xchg   BYTE PTR ds:0x1fc0ab1d,bl
  42f48a:	sbb    eax,0x87a347ab
  42f48f:	fld    QWORD PTR [ecx-0x13fb9d8]
  42f495:	sub    BYTE PTR [edx+edi*8+0xbe9a0d1],bh
  42f49c:	dec    edi
  42f49d:	xchg   edx,eax
  42f49e:	les    edx,FWORD PTR [ebx]
  42f4a0:	call   ebp
  42f4a2:	sti    
  42f4a3:	ss (bad) 
  42f4a6:	add    eax,0xd1849189
  42f4ab:	pop    ss
  42f4ac:	add    cl,dl
  42f4ae:	(bad)  
  42f4af:	idiv   edx
  42f4b1:	push   ebx
  42f4b2:	sti    
  42f4b3:	mov    eax,0x3d6c151
  42f4b8:	sti    
  42f4b9:	xchg   ebx,eax
  42f4ba:	inc    edi
  42f4bb:	idiv   BYTE PTR [edi]
  42f4bd:	xchg   BYTE PTR [edx+0x686dfbc1],dl
  42f4c3:	rol    BYTE PTR [ebx],cl
  42f4c5:	pop    ebp
  42f4c6:	xor    cl,dl
  42f4c8:	adc    esi,DWORD PTR [eax]
  42f4ca:	inc    ebx
  42f4cb:	rcl    DWORD PTR gs:[ebx+0x6a5d0d3c],0x8f
  42f4d3:	(bad)  
  42f4d4:	cli    
  42f4d5:	sti    
  42f4d6:	out    dx,eax
  42f4d7:	ins    BYTE PTR es:[edi],dx
  42f4d8:	adc    al,0x62
  42f4da:	sti    
  42f4db:	retf   
  42f4dc:	(bad)  
  42f4dd:	cld    
  42f4de:	gs push 0x5a
  42f4e1:	enter  0x3d80,0xbd
  42f4e5:	jle    0x42f512
  42f4e7:	mov    bl,0x86
  42f4e9:	push   0xffffffaa
  42f4eb:	pop    edi
  42f4ec:	or     eax,DWORD PTR [edi-0x2adf3d5]
  42f4f2:	ficomp DWORD PTR [ebx+esi*4]
  42f4f5:	retf   
  42f4f6:	pop    ds
  42f4f7:	or     ecx,0x6fc0a47
  42f4fd:	inc    edi
  42f4fe:	inc    edx
  42f4ff:	jl     0x42f4d1
  42f501:	or     ecx,0x46ca8cfa
  42f507:	ins    BYTE PTR es:[edi],dx
  42f508:	int3   
  42f509:	jge    0x42f50e
  42f50b:	or     DWORD PTR [ebx],0xffffff89
  42f50e:	add    edi,DWORD PTR [ebx-0x38]
  42f511:	add    BYTE PTR [ebp-0x39],bh
  42f514:	adc    BYTE PTR es:[edi],cl
  42f517:	mov    edi,0x14fc6175
  42f51c:	dec    edi
  42f51d:	mov    cl,bh
  42f51f:	adc    ebp,DWORD PTR [ecx+0x62]
  42f522:	les    edi,FWORD PTR [esi+0x14dc6169]
  42f528:	jecxz  0x42f52d
  42f52a:	xchg   BYTE PTR [edx+0x28],al
  42f52d:	mov    cl,dl
  42f52f:	adc    ecx,DWORD PTR [ecx+0x62]
  42f532:	test   DWORD PTR [edx-0x1f],eax
  42f535:	add    ebp,DWORD PTR [esi-0x439cf8b0]
  42f53b:	jae    0x42f567
  42f53d:	inc    ebp
  42f53e:	mov    DWORD PTR [edx-0x52],eax
  42f541:	mov    ds,WORD PTR [ebp+0x365b05c0]
  42f547:	rcl    DWORD PTR [esi-0x488e79f1],0xba
  42f54e:	adc    eax,0x75c07c9f
  42f553:	ret    
  42f554:	or     al,0x43
  42f556:	jl     0x42f50c
  42f558:	loope  0x42f534
  42f55a:	rol    edi,cl
  42f55c:	pop    esi
  42f55d:	or     ecx,DWORD PTR [ecx]
  42f55f:	cmp    al,0x7c
  42f561:	les    edx,FWORD PTR [ebp-0x6e03e23b]
  42f567:	(bad)  
  42f568:	shr    BYTE PTR [ebx+ebx*8-0x3],1
  42f56c:	mov    esi,0x2e030561
  42f571:	lds    eax,FWORD PTR [eax]
  42f573:	cmp    al,0x7c
  42f575:	aam    0x0
  42f577:	xchg   ebp,eax
  42f578:	aas    
  42f579:	or     bh,BYTE PTR [ecx+0x64027a0d]
  42f57f:	jae    0x42f510
  42f581:	pop    ss
  42f582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f583:	push   ecx
  42f584:	dec    eax
  42f585:	sub    DWORD PTR [edx+0x3e1a7713],0x9
  42f58c:	call   0x86f0:0x18d2811a
  42f593:	sti    
  42f594:	jbe    0x42f5ac
  42f596:	jb     0x42f579
  42f598:	cmp    eax,DWORD PTR [ebx+0x40bb962c]
  42f59e:	loope  0x42f59c
  42f5a0:	inc    ecx
  42f5a1:	(bad)  
  42f5a2:	scas   eax,DWORD PTR es:[edi]
  42f5a3:	add    DWORD PTR [edx+0xa],0x50c985eb
  42f5aa:	in     eax,0xa
  42f5ac:	inc    ecx
  42f5ad:	mov    ebp,DWORD PTR [eax]
  42f5af:	fiadd  DWORD PTR [edx+0x42]
  42f5b2:	(bad)  
  42f5b4:	inc    edx
  42f5b5:	jecxz  0x42f5a2
  42f5b7:	fwait
  42f5b8:	add    dl,BYTE PTR [eax-0x69]
  42f5bb:	cli    
  42f5bc:	mov    esp,0x434b8ce5
  42f5c1:	or     bh,BYTE PTR [edx+edi*8+0x760d8c27]
  42f5c8:	sub    edi,0xffffff9c
  42f5cb:	xchg   ebp,eax
  42f5cc:	mov    BYTE PTR [ebp+0x15],0x7b
  42f5d0:	jmp    0x42f62c
  42f5d2:	jo     0x42f59d
  42f5d4:	jb     0x615ed776
  42f5da:	enter  0xe600,0x18
  42f5de:	xchg   DWORD PTR [ecx],ebp
  42f5e0:	pop    ecx
  42f5e1:	dec    eax
  42f5e2:	out    dx,eax
  42f5e3:	pop    esp
  42f5e4:	into   
  42f5e5:	sbb    eax,esp
  42f5e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f5e8:	rcr    BYTE PTR [eax],0x85
  42f5eb:	stos   BYTE PTR es:[edi],al
  42f5ec:	sbb    cl,BYTE PTR [edx]
  42f5ee:	int    0xdd
  42f5f0:	test   DWORD PTR [edi],edx
  42f5f2:	jbe    0x42f5f4
  42f5f4:	inc    ebx
  42f5f5:	mov    ds:0xec00f476,al
  42f5fa:	add    edi,edi
  42f5fc:	jp     0x42f644
  42f5fe:	loop   0x42f641
  42f600:	loopne 0x42f5a3
  42f602:	hlt    
  42f603:	mov    al,BYTE PTR [edi-0x5a]
  42f606:	rol    DWORD PTR [ebp-0x75011411],cl
  42f60c:	cs mov esi,0xec5f1477
  42f612:	sub    al,0x83
  42f614:	fild   QWORD PTR [esi]
  42f616:	out    0x7,eax
  42f618:	je     0x42f5e9
  42f61a:	pop    es
  42f61b:	lea    ebp,[ebx-0x3174e5c4]
  42f621:	(bad)
  42f624:	mov    ch,0xc6
  42f626:	cmp    eax,0xff806c14
  42f62b:	cmp    ah,BYTE PTR [ebp+0x645608fa]
  42f631:	out    dx,eax
  42f632:	pop    es
  42f633:	add    ecx,DWORD PTR [esi-0x6a11fca]
  42f639:	cmp    al,0x1f
  42f63b:	shr    BYTE PTR [esi+ebp*1-0x36],0xeb
  42f640:	add    al,bl
  42f642:	lds    eax,FWORD PTR [edi]
  42f644:	cmp    esi,ebx
  42f646:	pop    edx
  42f647:	add    dh,BYTE PTR [ebp-0x50]
  42f64a:	lds    eax,FWORD PTR [edi+0x4]
  42f64d:	mov    al,cs:0xee9fffef
  42f653:	xor    cl,BYTE PTR [ebx+edi*4+0x42]
  42f657:	jbe    0x42f666
  42f659:	hlt    
  42f65a:	add    DWORD PTR [esp+eax*1],ebp
  42f65d:	xchg   ebx,ebx
  42f65f:	hlt    
  42f660:	jmp    DWORD PTR [eax-0x38]
  42f663:	scas   eax,DWORD PTR es:[edi]
  42f664:	jne    0x42f6a9
  42f666:	test   DWORD PTR [ebx],eax
  42f668:	add    BYTE PTR [edx-0x79ae1c43],bl
  42f66e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f66f:	enter  0xb50b,0x58
  42f673:	cmp    DWORD PTR [edi-0x40748a2e],0x175e2b84
  42f67d:	inc    ebx
  42f67e:	xlat   BYTE PTR ds:[ebx]
  42f67f:	dec    edi
  42f680:	xchg   BYTE PTR [esi],ch
  42f682:	mov    ds:0xe903fbe9,eax
  42f687:	rcl    BYTE PTR [edi+0x18],cl
  42f68a:	push   0x2
  42f68c:	add    DWORD PTR [ebx],ecx
  42f68e:	pop    edx
  42f68f:	div    BYTE PTR [ebx+0x51]
  42f692:	rcr    al,0x7
  42f695:	push   ds
  42f696:	retf   0xfc42
  42f699:	add    DWORD PTR [ebp+0xff9844e],edx
  42f69f:	psubq  mm7,QWORD PTR [eax+0x7c8a4]
  42f6a6:	jmp    0x452afa99
  42f6ab:	jno    0x42f6fc
  42f6ad:	cli    
  42f6ae:	fldz   
  42f6b0:	dec    edi
  42f6b1:	xchg   BYTE PTR [eax-0x11],cl
  42f6b4:	push   eax
  42f6b5:	jno    0x42f735
  42f6b7:	xchg   edx,eax
  42f6b8:	rol    DWORD PTR [edi],0x59
  42f6bb:	sahf   
  42f6bc:	rol    DWORD PTR [edi],0xae
  42f6bf:	add    eax,DWORD PTR [esi-0x6]
  42f6c2:	mov    cl,0xb8
  42f6c4:	test   bh,dl
  42f6c6:	sahf   
  42f6c7:	cmp    DWORD PTR [edx-0x4],eax
  42f6ca:	mov    eax,ds:0x1300539c
  42f6cf:	and    eax,0xe9fd1d65
  42f6d4:	add    edi,DWORD PTR [ecx]
  42f6d6:	inc    eax
  42f6d7:	pop    ss
  42f6d8:	fmul   DWORD PTR [edi]
  42f6da:	adc    DWORD PTR [esi+0x5f51e74f],0x5bb5fa69
  42f6e4:	scas   eax,DWORD PTR es:[edi]
  42f6e5:	push   esi
  42f6e6:	aas    
  42f6e7:	inc    edx
  42f6e8:	mov    ds:0x18118607,eax
  42f6ed:	pop    edi
  42f6ee:	sar    BYTE PTR [edx],cl
  42f6f0:	leave  
  42f6f1:	pop    edi
  42f6f2:	push   edx
  42f6f3:	adc    ecx,eax
  42f6f5:	mov    bh,BYTE PTR [edi+0x3dc87c3e]
  42f6fb:	or     dh,ah
  42f6fd:	or     eax,DWORD PTR [esi+0x441027bd]
  42f703:	xchg   cl,ch
  42f705:	add    al,0x86
  42f707:	sbb    eax,0xb400b5c6
  42f70c:	adc    DWORD PTR [esi],edx
  42f70e:	sub    BYTE PTR [edx+0x55],dh
  42f711:	cwde   
  42f712:	pop    esi
  42f713:	xchg   ebp,eax
  42f714:	data16 cmc 
  42f716:	pop    esi
  42f717:	xchg   ebp,eax
  42f718:	data16 int 0x6b
  42f71b:	mov    al,ds:0x5e7111
  42f720:	adc    bl,BYTE PTR [edi+0x55]
  42f723:	jne    0x42f74f
  42f725:	pusha  
  42f726:	xlat   BYTE PTR ds:[ebx]
  42f727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f728:	ds pop ecx
  42f72a:	push   ds
  42f72b:	fst    QWORD PTR [eax]
  42f72d:	push   ecx
  42f72e:	mov    dl,cl
  42f730:	(bad)  
  42f731:	pop    eax
  42f732:	xlat   BYTE PTR ds:[ebx]
  42f733:	jle    0x42f6fc
  42f735:	cmp    al,0xd7
  42f737:	cmp    BYTE PTR [ebp+0x450f0f9f],0x7c
  42f73e:	inc    esi
  42f73f:	pop    esp
  42f740:	jo     0x42f765
  42f742:	jbe    0x6b263bf
  42f748:	push   ds
  42f749:	test   BYTE PTR [esi+eax*4],0x42
  42f74d:	pop    ss
  42f74e:	enter  0x438d,0xb4
  42f752:	mov    ch,0x34
  42f754:	mov    ebp,0xc67d0b7e
  42f759:	jbe    0x42f75e
  42f75b:	xchg   BYTE PTR [edx-0x4c],al
  42f75e:	inc    ebx
  42f75f:	add    BYTE PTR [eax],al
  42f761:	or     eax,DWORD PTR [ecx]
  42f763:	sub    ecx,DWORD PTR [edx]
  42f765:	lock out dx,al
  42f767:	call   FWORD PTR [edi]
  42f769:	xchg   bh,bl
  42f76b:	mov    dh,BYTE PTR ds:[ebx+0x428500e9]
  42f772:	jp     0x42f7de
  42f774:	jo     0x42f7b8
  42f776:	jbe    0x42f7c3
  42f778:	inc    DWORD PTR [ecx+0x428a9006]
  42f77e:	(bad)  
  42f77f:	call   0xb6686fd4
  42f784:	rcr    DWORD PTR [edi],cl
  42f786:	lock pusha 
  42f788:	inc    eax
  42f789:	inc    esp
  42f78a:	sub    ebp,DWORD PTR [edx+0x71fe870d]
  42f790:	shr    BYTE PTR [eax],0xf
  42f793:	bound  eax,QWORD PTR [edx+0x10140057]
  42f799:	leave  
  42f79a:	inc    edx
  42f79b:	in     eax,dx
  42f79c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f79d:	pop    es
  42f79e:	xor    al,0x2c
  42f7a0:	xchg   esi,eax
  42f7a1:	xchg   ebp,eax
  42f7a2:	(bad)  
  42f7a3:	jge    0x42f76f
  42f7a5:	inc    ebx
  42f7a6:	or     ch,cl
  42f7a8:	jnp    0x42f7ec
  42f7aa:	jne    0x42f7a5
  42f7ac:	push   es
  42f7ad:	xor    BYTE PTR [edx],cl
  42f7af:	jb     0x42f7fc
  42f7b1:	daa    
  42f7b2:	push   ebx
  42f7b3:	push   edi
  42f7b4:	xor    ecx,DWORD PTR [esi+eax*4]
  42f7b7:	sub    DWORD PTR [ecx+0x708e3ea],esi
  42f7bd:	bound  ecx,QWORD PTR [edx]
  42f7bf:	jb     0x42f78b
  42f7c1:	inc    ebx
  42f7c2:	imul   DWORD PTR [eax]
  42f7c4:	mov    al,BYTE PTR [edx+0x2]
  42f7c7:	jmp    0xc9ce3e9d
  42f7cc:	test   DWORD PTR [edi],esp
  42f7ce:	add    DWORD PTR [eax+0x25],ebp
  42f7d1:	or     al,0xf0
  42f7d3:	sbb    DWORD PTR [eax],eax
  42f7d5:	xor    edi,DWORD PTR [edx+0x101ee542]
  42f7db:	lea    eax,[eax]
  42f7dd:	push   ecx
  42f7de:	inc    ebx
  42f7df:	xchg   esi,eax
  42f7e1:	hlt    
  42f7e2:	jge    0x42f7cb
  42f7e4:	sub    BYTE PTR [ecx+0x6e],bh
  42f7e7:	hlt    
  42f7e8:	mov    ebp,DWORD PTR [edi-0x38]
  42f7eb:	stc    
  42f7ec:	jne    0x42f7de
  42f7ee:	sbb    DWORD PTR [edx+ebp*2],edi
  42f7f1:	push   edi
  42f7f2:	outs   dx,BYTE PTR ds:[esi]
  42f7f3:	ss loopne 0x42f7fa
  42f7f6:	add    dh,al
  42f7f8:	(bad)  
  42f7f9:	push   edx
  42f7fa:	inc    edi
  42f7fb:	(bad)  
  42f7fc:	aas    
  42f7fd:	das    
  42f7fe:	mov    edx,0x329a89d7
  42f803:	test   eax,eax
  42f805:	sub    bh,al
  42f807:	sbb    DWORD PTR [ecx],eax
  42f809:	pop    ds
  42f80a:	inc    ebx
  42f80b:	jge    0x42f87d
  42f80d:	and    eax,DWORD PTR [esi+0x432f3009]
  42f813:	or     cl,BYTE PTR [ebx+0x1842ba28]
  42f819:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f81a:	sti    
  42f81b:	pop    ss
  42f81c:	mov    edi,eax
  42f81e:	mov    ecx,0xfb761c42
  42f823:	adc    esi,DWORD PTR [ebx]
  42f825:	pop    ds
  42f826:	mov    edx,0xc182ebc4
  42f82b:	xor    al,0x0
  42f82d:	ret    
  42f82e:	leave  
  42f82f:	mov    BYTE PTR [edi-0x29],al
  42f832:	mov    ecx,0x139f8301
  42f837:	icebp  
  42f838:	mov    DWORD PTR [eax],0x8903f82a
  42f83e:	repnz outs dx,BYTE PTR ds:[esi]
  42f840:	out    0xb9,eax
  42f842:	ins    DWORD PTR es:[edi],dx
  42f843:	jo     0x42f839
  42f845:	mov    ebx,DWORD PTR [edx]
  42f847:	aas    
  42f848:	xchg   al,al
  42f84a:	enter  0xc3c6,0x0
  42f84e:	scas   eax,DWORD PTR es:[edi]
  42f84f:	inc    edx
  42f850:	xchg   DWORD PTR [edi],ecx
  42f852:	sub    dh,dl
  42f854:	sbb    ecx,DWORD PTR [ebx-0x40f4e07a]
  42f85a:	jmp    DWORD PTR [eax]
  42f85c:	or     DWORD PTR [edx-0x76],0xffffff92
  42f860:	ret    
  42f861:	add    ecx,DWORD PTR ds:0xbe8903dd
  42f867:	and    eax,DWORD PTR [ebx-0x3c5d85b6]
  42f86d:	or     ecx,DWORD PTR ds:0x4f84fe54
  42f873:	js     0x42f86d
  42f875:	push   eax
  42f876:	add    esp,DWORD PTR [ebp-0xa]
  42f879:	push   eax
  42f87a:	add    eax,0x414ff6dc
  42f87f:	out    dx,eax
  42f880:	sbb    edx,DWORD PTR [edx]
  42f882:	(bad)  
  42f883:	sbb    ecx,DWORD PTR [ecx-0x365f7d3d]
  42f889:	sti    
  42f88a:	xchg   DWORD PTR ds:0x908e4c81,esp
  42f890:	dec    ebx
  42f891:	out    0x9a,eax
  42f893:	scas   al,BYTE PTR es:[edi]
  42f894:	push   ebx
  42f895:	cli    
  42f896:	std    
  42f897:	mov    bl,0x89
  42f899:	cli    
  42f89a:	xchg   ebx,eax
  42f89b:	mov    edi,DWORD PTR [edi+0x3e]
  42f89e:	add    BYTE PTR [edx+0x26000c06],bl
  42f8a4:	sbb    al,0xdd
  42f8a6:	jb     0x42f8ad
  42f8a8:	fdiv   QWORD PTR [esi]
  42f8aa:	dec    edi
  42f8ab:	sti    
  42f8ac:	pop    eax
  42f8ad:	push   ss
  42f8ae:	push   eax
  42f8af:	adc    esp,DWORD PTR [ecx]
  42f8b1:	sub    al,0x2f
  42f8b3:	(bad)  
  42f8b4:	jae    0x42f877
  42f8b6:	loopne 0x42f88b
  42f8b8:	je     0x42f844
  42f8ba:	mov    edi,0xffddfa52
  42f8bf:	das    
  42f8c0:	out    dx,eax
  42f8c1:	mov    eax,0x54f0b8e7
  42f8c6:	cli    
  42f8c7:	add    eax,0xfcfffbd7
  42f8cc:	rcr    bh,1
  42f8ce:	jae    0x42f91b
  42f8d0:	inc    edx
  42f8d1:	and    BYTE PTR [ecx+0x5b110c95],al
  42f8d7:	test   DWORD PTR [edx-0x1f],eax
  42f8da:	add    eax,DWORD PTR [ebx]
  42f8dc:	push   cs
  42f8dd:	xchg   esi,eax
  42f8de:	or     cl,BYTE PTR [ecx]
  42f8e0:	cmc    
  42f8e1:	jl     0x42f93a
  42f8e3:	or     al,bh
  42f8e5:	cmc    
  42f8e6:	pop    ecx
  42f8e7:	ins    BYTE PTR es:[edi],dx
  42f8e8:	or     eax,0xda3b70a
  42f8ed:	loope  0x42f949
  42f8ef:	fidiv  DWORD PTR [edx]
  42f8f1:	mov    al,fs:0x5ad10c55
  42f8f7:	push   ecx
  42f8f8:	mov    esi,0xd4f4f5e
  42f8fd:	shr    DWORD PTR [ebx+0x31],0x5b
  42f901:	enter  0x5a,0x2
  42f905:	or     eax,0xf5090b36
  42f90a:	ins    BYTE PTR es:[edi],dx
  42f90b:	push   esi
  42f90c:	cli    
  42f90d:	(bad)  
  42f90e:	mov    ch,0x59
  42f910:	sbb    al,0xd
  42f912:	call   0xca8e:0x910d602e
  42f919:	ss push 0xfffffffb
  42f91c:	add    BYTE PTR ds:0x1a510b8d,al
  42f922:	push   0xb50cfa45
  42f927:	inc    ebx
  42f928:	dec    esp
  42f929:	ins    BYTE PTR es:[edi],dx
  42f92a:	sbb    al,0x4d
  42f92c:	sub    esi,DWORD PTR [edx]
  42f92e:	loope  0x42f8e1
  42f930:	imul   eax,DWORD PTR [esi+0x59],0xffffffe8
  42f934:	sbb    ecx,DWORD PTR [edi]
  42f936:	push   ecx
  42f937:	adc    BYTE PTR [ecx],0x96
  42f93a:	loopne 0x42f8c2
  42f93c:	imul   eax,DWORD PTR [edx+0x6c],0xf43fa853
  42f943:	push   ecx
  42f944:	add    dl,BYTE PTR [esi+esi*4]
  42f947:	adc    DWORD PTR [eax],ebp
  42f949:	push   esi
  42f94a:	or     al,bl
  42f94c:	jge    0x42f957
  42f94e:	ss dec ecx
  42f950:	lock dec ebx
  42f952:	or     ah,BYTE PTR [esi]
  42f954:	xchg   esi,eax
  42f955:	inc    eax
  42f956:	sbb    ebp,DWORD PTR [ecx+0x6c08bb85]
  42f95c:	inc    ebp
  42f95d:	xchg   ecx,eax
  42f95e:	push   ss
  42f95f:	bound  ecx,QWORD PTR [ecx+0x60]
  42f962:	add    ch,BYTE PTR [esi]
  42f964:	inc    ebp
  42f965:	xor    BYTE PTR [edx],bh
  42f967:	jmp    0x83857e6c
  42f96c:	out    dx,eax
  42f96d:	cli    
  42f96e:	or     DWORD PTR [esi],0x62
  42f971:	(bad)  
  42f972:	and    al,0x1
  42f974:	cmp    edx,ebp
  42f976:	ja     0x42f944
  42f978:	fsubr  QWORD PTR [edi-0x3fd01d8f]
  42f97e:	push   cs
  42f97f:	lock sbb cl,dl
  42f982:	imul   ecx,esp,0x837585ed
  42f988:	int    0x5
  42f98a:	sbb    BYTE PTR [ebx],dl
  42f98c:	call   0x629b3c16
  42f991:	mov    ch,0x70
  42f993:	and    DWORD PTR [ecx+0x65001199],0xffffffbc
  42f99a:	or     esi,eax
  42f99c:	jmp    0xcd1d7aa1
  42f9a1:	mov    ch,0x8
  42f9a3:	nop
  42f9a4:	jmp    0xea0db937
  42f9a9:	test   DWORD PTR [edx-0x7d],eax
  42f9ac:	sub    al,0x7e
  42f9ae:	mov    ebp,edx
  42f9b0:	call   0xdc4180c1
  42f9b5:	aam    0x70
  42f9b7:	pop    eax
  42f9b8:	push   ecx
  42f9b9:	mov    bh,0xcd
  42f9bb:	in     eax,dx
  42f9bc:	push   esi
  42f9bd:	sti    
  42f9be:	sbb    eax,DWORD PTR [esi-0x593970a9]
  42f9c4:	add    BYTE PTR [edi-0xd7cf5c1],ch
  42f9ca:	aaa    
  42f9cb:	or     dh,BYTE PTR [eax+eax*1-0x26]
  42f9cf:	push   0x76
  42f9d1:	or     BYTE PTR [ebx+ebp*4],ch
  42f9d4:	out    0xfe,eax
  42f9d6:	pusha  
  42f9d7:	imul   ebp,edi,0xf19e2a8c
  42f9dd:	push   DWORD PTR [eax-0x62]
  42f9e0:	sbb    ebp,DWORD PTR [ecx]
  42f9e2:	nop
  42f9e3:	imul   eax,DWORD PTR [esi-0x78c50401],0x7e78f4d7
  42f9ed:	test   DWORD PTR [edi-0x78000b98],eax
  42f9f3:	(bad)  
  42f9f4:	and    eax,0x868260ff
  42f9f9:	call   0x537642f
  42f9fe:	pop    edi
  42f9ff:	aas    
  42fa00:	or     al,BYTE PTR [ebp-0x74fb04b0]
  42fa06:	sbb    BYTE PTR [esi-0x6855723f],bh
  42fa0c:	icebp  
  42fa0d:	push   eax
  42fa0f:	xchg   esi,eax
  42fa10:	sub    BYTE PTR [edx],ch
  42fa12:	lock imul ecx,DWORD PTR [eax-0x34d1e4ba],0xafc56975
  42fa1d:	ror    BYTE PTR [edi-0x3d],1
  42fa20:	dec    ecx
  42fa21:	xor    BYTE PTR [edi+0x3cf06ec3],bh
  42fa27:	jg     0x42fa10
  42fa29:	fist   WORD PTR [eax]
  42fa2b:	je     0x42fa21
  42fa2d:	test   BYTE PTR [edi],bl
  42fa2f:	sti    
  42fa30:	pop    ds
  42fa31:	push   0x0
  42fa33:	mov    edi,0x1f2049c3
  42fa38:	mov    esi,0x1c3050cc
  42fa3d:	xor    al,0x16
  42fa3f:	xchg   cl,bl
  42fa41:	or     edi,DWORD PTR [edi-0x36]
  42fa44:	in     al,dx
  42fa45:	jo     0x42fa06
  42fa47:	xor    ebx,DWORD PTR [edi]
  42fa49:	fiadd  WORD PTR [ebx]
  42fa4b:	sahf   
  42fa4c:	fimul  WORD PTR [esp+edi*8-0x57]
  42fa50:	popf   
  42fa51:	dec    ebx
  42fa52:	jae    0x42f9df
  42fa54:	cwde   
  42fa55:	sub    eax,DWORD PTR [eax]
  42fa57:	lods   eax,DWORD PTR ds:[esi]
  42fa58:	push   ss
  42fa59:	pop    ss
  42fa5a:	ror    BYTE PTR [ebx],0x59
  42fa5d:	mov    edi,0x5ee8ff03
  42fa62:	or     DWORD PTR ds:0xf30007b7,eax
  42fa68:	sbb    DWORD PTR [edx+0x585acde7],edi
  42fa6e:	cli    
  42fa6f:	mov    ch,0x5b
  42fa71:	mov    dl,0x59
  42fa73:	dec    edi
  42fa74:	pop    esi
  42fa75:	add    eax,DWORD PTR [eax]
  42fa77:	mov    bl,0x94
  42fa79:	bound  edi,QWORD PTR [esi+0x62]
  42fa7c:	or     al,0xbd
  42fa7e:	cs sub eax,0xf61d0e4a
  42fa84:	fmulp  st(3),st
  42fa86:	push   DWORD PTR [edx+0x4bd79842]
  42fa8c:	pop    ebp
  42fa8d:	push   es
  42fa8e:	push   edx
  42fa8f:	sub    edi,esp
  42fa91:	addr16 or eax,0x1d141bc6
  42fa97:	add    dh,dl
  42fa99:	(bad)  
  42fa9a:	retf   
  42fa9b:	call   FWORD PTR [edx+0x20042e09]
  42faa1:	test   ebx,ecx
  42faa3:	inc    DWORD PTR [eax]
  42faa5:	loope  0x42fab0
  42faa7:	jl     0x42fa6c
  42faa9:	pop    esp
  42faaa:	push   es
  42faab:	in     al,0x1a
  42faad:	pop    esp
  42faae:	push   es
  42faaf:	mov    DWORD PTR [ebx-0x79c1b6b9],ecx
  42fab5:	loope  0x42fac0
  42fab7:	mov    al,0xc3
  42fab9:	inc    edx
  42faba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fabb:	add    eax,DWORD PTR [edi-0x260eaf90]
  42fac1:	xor    al,0xa1
  42fac3:	add    ecx,DWORD PTR [edi]
  42fac5:	push   0xe5a8d51
  42faca:	jnp    0x42fa85
  42facc:	mov    ecx,0x7c568eba
  42fad1:	rcr    BYTE PTR [esi-0x62c7f7aa],1
  42fad7:	inc    eax
  42fad8:	pop    eax
  42fad9:	inc    edx
  42fada:	mov    ah,0x56
  42fadc:	push   ebp
  42fadd:	ret    
  42fade:	pop    esi
  42fadf:	rcr    DWORD PTR [ecx-0x824f68e],0x8
  42fae6:	add    DWORD PTR [eax+0x55fc8f39],eax
  42faec:	retf   0x6209
  42faef:	fldcw  WORD PTR [esp+eax*2+0x73]
  42faf3:	aaa    
  42faf4:	push   0xb053444
  42faf9:	jg     0x42facc
  42fafb:	imul   eax,DWORD PTR [eax],0x70
  42fafe:	xchg   ebp,eax
  42faff:	iret   
  42fb00:	push   esi
  42fb01:	scas   eax,DWORD PTR es:[edi]
  42fb02:	mov    esp,0x54ebaa4
  42fb07:	aaa    
  42fb08:	mov    ebp,DWORD PTR ds:0xc0efd5c5
  42fb0e:	push   ebp
  42fb0f:	lods   al,BYTE PTR ds:[esi]
  42fb10:	lods   eax,DWORD PTR ds:[esi]
  42fb11:	jno    0x42fb3a
  42fb13:	jno    0x42fb55
  42fb15:	pusha  
  42fb16:	inc    edx
  42fb17:	ss sbb eax,0xc29ee9dc
  42fb1d:	adc    DWORD PTR [edi-0x70],ebp
  42fb20:	lock sbb eax,0xbe042134
  42fb26:	daa    
  42fb27:	push   ecx
  42fb28:	inc    eax
  42fb29:	mov    eax,0xc7f5ee42
  42fb2e:	xchg   DWORD PTR ds:[edx+0x760a42a8],ebp
  42fb35:	mov    al,ds:0xc4a46e3e
  42fb3a:	or     ah,ch
  42fb3c:	jge    0x42fb03
  42fb3e:	or     BYTE PTR [ebx+0x4bfdf9fc],al
  42fb44:	jmp    0x24fd39cc
  42fb49:	les    ecx,FWORD PTR [eax]
  42fb4b:	or     ebx,DWORD PTR [edi-0x2405d1a8]
  42fb51:	lds    ecx,FWORD PTR [eax]
  42fb53:	(bad)  
  42fb54:	fst    DWORD PTR [edx]
  42fb56:	data16 fisub WORD PTR [eax-0x22]
  42fb5a:	sbb    BYTE PTR [edx+0x4dc141c4],al
  42fb60:	push   ds
  42fb61:	add    bl,dl
  42fb63:	cmp    edi,DWORD PTR [eax-0x23f2754]
  42fb69:	mov    esi,es
  42fb6b:	dec    eax
  42fb6c:	or     bl,BYTE PTR [edx+0x6c8953d8]
  42fb72:	inc    esi
  42fb73:	sbb    al,0x5b
  42fb75:	add    esp,ebp
  42fb77:	mov    ?,eax
  42fb79:	out    dx,al
  42fb7a:	fadd   st,st(7)
  42fb7c:	jbe    0x42fb85
  42fb7e:	pop    ss
  42fb7f:	mov    bh,0x45
  42fb81:	loope  0x42fb95
  42fb83:	or     eax,0x8f0ce176
  42fb88:	repnz inc ecx
  42fb8a:	lea    eax,[edx+0xa]
  42fb8d:	sub    ebx,ebx
  42fb8f:	mov    ?,esi
  42fb91:	mov    esi,0x2915e419
  42fb96:	mov    al,BYTE PTR [edi+0x2b49e8f2]
  42fb9c:	lock sub al,0xbb
  42fb9f:	xchg   DWORD PTR [ebp-0x62],ebp
  42fba2:	test   BYTE PTR [eax+0xd373fb0],bl
  42fba8:	jbe    0x42fb8b
  42fbaa:	push   edx
  42fbab:	cs ss add cl,dl
  42fbaf:	add    esi,eax
  42fbb1:	and    BYTE PTR [ebx],0x3b
  42fbb4:	out    0x2,eax
  42fbb6:	pushf  
  42fbb7:	inc    ebx
  42fbb8:	jge    0x42fbff
  42fbba:	pop    ebx
  42fbbb:	xchg   esi,eax
  42fbbc:	ins    BYTE PTR es:[edi],dx
  42fbbd:	jb     0x42fc28
  42fbbf:	ins    DWORD PTR es:[edi],dx
  42fbc0:	push   ecx
  42fbc1:	mov    bl,BYTE PTR [ecx+ecx*8-0x4cff3d3e]
  42fbc8:	inc    ebx
  42fbc9:	push   ebp
  42fbca:	mov    edi,DWORD PTR [ebx-0x3d]
  42fbcd:	jecxz  0x42fbd7
  42fbcf:	popf   
  42fbd0:	inc    ebx
  42fbd1:	or     cl,BYTE PTR [ebp-0x1199de]
  42fbd7:	pop    eax
  42fbd8:	into   
  42fbd9:	sub    BYTE PTR [bx+0x643],0x6a
  42fbdf:	lahf   
  42fbe0:	outs   dx,BYTE PTR ds:[esi]
  42fbe1:	jbe    0x42fbeb
  42fbe3:	cmc    
  42fbe4:	pop    es
  42fbe5:	call   0xf4b109b1
  42fbea:	test   DWORD PTR [edi+0x5f6a00f2],ebp
  42fbf0:	rol    BYTE PTR [esi-0xb919508],0x50
  42fbf7:	pop    eax
  42fbf8:	sbb    ah,dl
  42fbfa:	adc    DWORD PTR [edi],ebp
  42fbfc:	inc    ebx
  42fbfd:	test   eax,eax
  42fbff:	mov    dl,0x42
  42fc01:	and    al,al
  42fc03:	xor    al,0x63
  42fc05:	repz jne 0x42fc33
  42fc08:	rol    BYTE PTR [esi-0xb91b508],0x68
  42fc0f:	lahf   
  42fc10:	inc    ebx
  42fc11:	or     al,BYTE PTR [eax]
  42fc13:	xlat   BYTE PTR ds:[ebx]
  42fc14:	cmp    dl,BYTE PTR [ebp+0x65d32f40]
  42fc1a:	add    BYTE PTR [edi-0x6c],al
  42fc1d:	dec    ebp
  42fc1e:	(bad)  
  42fc1f:	call   0x9252abab
  42fc24:	add    edx,0xffffffc2
  42fc27:	xchg   BYTE PTR [ecx],ah
  42fc29:	or     al,0x55
  42fc2b:	add    BYTE PTR ds:0x82448885,cl
  42fc31:	sub    DWORD PTR [ebp+0x74],edx
  42fc34:	jp     0x42fbbe
  42fc36:	mov    al,ds:0xbfd90b07
  42fc3b:	pop    ebx
  42fc3c:	xor    DWORD PTR [eax-0x2221f440],ebx
  42fc42:	pop    ebx
  42fc43:	stc    
  42fc44:	leave  
  42fc45:	xchg   ebx,eax
  42fc46:	push   ebx
  42fc47:	test   cl,al
  42fc49:	in     al,0xca
  42fc4b:	cli    
  42fc4c:	xor    ecx,DWORD PTR [ecx]
  42fc4e:	push   edi
  42fc4f:	xor    dh,BYTE PTR [ecx+0x460fd7e5]
  42fc55:	sbb    DWORD PTR [ecx-0x41],esi
  42fc58:	sbb    bh,BYTE PTR [edi]
  42fc5a:	mov    al,ds:0x82ed13fa
  42fc5f:	je     0x42fbe3
  42fc61:	mov    ?,WORD PTR [eax-0x418ee1f9]
  42fc67:	aas    
  42fc68:	xchg   bl,cl
  42fc6a:	arpl   di,ax
  42fc6c:	test   DWORD PTR ds:0x104a7e56,esi
  42fc72:	jno    0x42fc33
  42fc74:	call   0x8eb75363
  42fc79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fc7a:	arpl   di,sp
  42fc7c:	inc    esi
  42fc7d:	push   ss
  42fc7e:	pop    esp
  42fc7f:	cli    
  42fc80:	fist   DWORD PTR [ebx]
  42fc82:	push   esp
  42fc83:	dec    ebx
  42fc84:	or     edi,esp
  42fc86:	pop    ebx
  42fc87:	pop    ecx
  42fc88:	fld    DWORD PTR [ebx]
  42fc8a:	ret    0x3bba
  42fc8d:	cmc    
  42fc8e:	pop    ebx
  42fc8f:	je     0x42fc91
  42fc91:	cmp    ah,0xf1
  42fc94:	lahf   
  42fc95:	xchg   esp,eax
  42fc96:	pop    ebx
  42fc97:	push   es
  42fc98:	pop    ebx
  42fc99:	ret    
  42fc9a:	fdecstp 
  42fc9c:	push   DWORD PTR [edx+0x227e6aa0]
  42fca2:	inc    ebx
  42fca3:	adc    eax,0x758ffaba
  42fca8:	mov    WORD PTR [esi],?
  42fcaa:	inc    ebx
  42fcab:	loope  0x42fcb0
  42fcad:	out    dx,al
  42fcae:	not    DWORD PTR [bp+si-0x14]
  42fcb2:	mov    ecx,0x2fecb49f
  42fcb7:	sub    esi,esi
  42fcb9:	mov    eax,ds:0xddc96a42
  42fcbe:	mov    edi,0xea0a03a1
  42fcc3:	loope  0x42fcc8
  42fcc5:	xchg   BYTE PTR [ecx-0x48],dh
  42fcc8:	add    BYTE PTR [edx-0x2e],0x99
  42fccc:	mov    ?,WORD PTR [ecx-0x7aa41dfb]
  42fcd2:	sub    al,0x48
  42fcd4:	push   ebx
  42fcd5:	add    BYTE PTR [eax+0x6d],dl
  42fcd8:	mul    BYTE PTR [ecx+0x42]
  42fcdb:	ins    BYTE PTR es:[edi],dx
  42fcdc:	dec    ebx
  42fcdd:	dec    ecx
  42fcde:	add    eax,0xec8c4fb7
  42fce3:	jl     0x42fd11
  42fce5:	cli    
  42fce6:	xchg   DWORD PTR ds:0xe142388c,ebp
  42fcec:	add    ebp,DWORD PTR [esi+0x1d]
  42fcef:	not    DWORD PTR [edx+0x6c]
  42fcf2:	mov    ecx,0x6c00b420
  42fcf7:	(bad)  
  42fcf8:	in     eax,dx
  42fcf9:	push   edx
  42fcfa:	aaa    
  42fcfb:	mov    ebx,0x870a539e
  42fd00:	sub    DWORD PTR [ebp+ecx*1+0x5e03e142],ecx
  42fd07:	cmc    
  42fd08:	not    BYTE PTR [edx+0x3c]
  42fd0b:	mov    ecx,0x8f3cb3a0
  42fd10:	mov    ebp,0xaf515752
  42fd15:	jle    0x42fd48
  42fd17:	dec    ecx
  42fd18:	(bad)  
  42fd19:	xlat   BYTE PTR ds:[ebx]
  42fd1a:	popf   
  42fd1b:	dec    ebx
  42fd1c:	or     bh,BYTE PTR [edx+esi*4]
  42fd1f:	xchg   ecx,eax
  42fd20:	ja     0x42fd14
  42fd22:	mov    bh,0x91
  42fd24:	jnp    0x42fd37
  42fd26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fd27:	mov    cl,0x4a
  42fd29:	jmp    0x97f0e68b
  42fd2e:	push   esp
  42fd2f:	or     BYTE PTR [esi],dl
  42fd31:	xchg   ecx,eax
  42fd32:	cli    
  42fd33:	inc    esp
  42fd34:	or     dh,BYTE PTR [eax-0x42]
  42fd37:	sbb    BYTE PTR [ecx+eax*4+0x75fd9134],cl
  42fd3e:	mov    esi,0xcdf4ef38
  42fd43:	je     0x42fd9c
  42fd45:	push   ecx
  42fd46:	pop    esi
  42fd47:	or     esi,eax
  42fd49:	pop    esi
  42fd4a:	push   es
  42fd4b:	jle    0x42fd3f
  42fd4d:	mov    ecx,0xb9f67e06
  42fd52:	rol    DWORD PTR [ecx+0x58],cl
  42fd55:	lahf   
  42fd56:	push   esp
  42fd57:	hlt    
  42fd58:	test   DWORD PTR [ecx],ebp
  42fd5a:	add    BYTE PTR [ecx-0x75edc4b8],bh
  42fd60:	(bad)  
  42fd61:	repnz mov bh,0x64
  42fd64:	mov    ebp,0x39061d45
  42fd69:	or     BYTE PTR [edx+0x4a],dh
  42fd6c:	cmp    al,0x85
  42fd6e:	sub    DWORD PTR [ecx+0x3f],edx
  42fd71:	mov    edx,DWORD PTR [ecx]
  42fd73:	mov    DWORD PTR [ebp+0x4b827216],ecx
  42fd79:	inc    ebp
  42fd7a:	or     eax,0x7cef3739
  42fd7f:	pop    ecx
  42fd80:	or     DWORD PTR [esi-0x1f],esi
  42fd83:	adc    eax,0xb48fe271
  42fd88:	or     al,dh
  42fd8a:	sub    cl,BYTE PTR [ebx]
  42fd8c:	add    bh,bh
  42fd8e:	adc    ecx,ebp
  42fd90:	or     edi,DWORD PTR [ebp-0x48]
  42fd93:	xlat   BYTE PTR ds:[ebx]
  42fd94:	mov    ?,esi
  42fd96:	add    BYTE PTR [eax-0x34],al
  42fd99:	(bad)  
  42fd9b:	pop    edx
  42fd9c:	jb     0x42fd92
  42fd9e:	adc    eax,0x300c73
  42fda3:	adc    ch,0x51
  42fda6:	leave  
  42fda7:	fld    QWORD PTR [esi]
  42fda9:	lock adc esi,DWORD PTR [esi]
  42fdac:	sub    esp,esp
  42fdae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fdaf:	push   ebp
  42fdb0:	xlat   BYTE PTR ds:[ebx]
  42fdb1:	mov    dl,BYTE PTR ds:0x125e56a9
  42fdb7:	retf   
  42fdb8:	ret    0x1dcf
  42fdbb:	mov    DWORD PTR [esi-0x15],eax
  42fdbe:	or     eax,0x867e8900
  42fdc3:	outs   dx,BYTE PTR ds:[esi]
  42fdc4:	push   edx
  42fdc5:	pop    ecx
  42fdc6:	add    ch,0x5d
  42fdc9:	loop   0x42fe30
  42fdcb:	jae    0x42fdfa
  42fdcd:	das    
  42fdce:	push   eax
  42fdcf:	inc    eax
  42fdd0:	in     eax,dx
  42fdd1:	push   edi
  42fdd2:	iret   
  42fdd3:	xor    eax,0xf6d697c9
  42fdd8:	fst    QWORD PTR [edi+0x5e]
  42fddb:	xchg   DWORD PTR [ecx+0x5414d73],ebp
  42fde1:	push   0x77
  42fde3:	mov    esi,0x65e2cb22
  42fde8:	test   DWORD PTR [esi+ebx*2+0x41],edx
  42fdec:	jge    0x42fe0c
  42fdee:	fucomip st,st(5)
  42fdf0:	outs   dx,BYTE PTR ds:[esi]
  42fdf1:	push   edi
  42fdf2:	xor    DWORD PTR [ecx-0x417fa409],ebp
  42fdf8:	cdq    
  42fdf9:	push   ss
  42fdfa:	dec    esi
  42fdfb:	vorps  xmm3,xmm7,XMMWORD PTR [esi+0x41]
  42fe00:	mov    al,ds:0x2d6d4292
  42fe05:	into   
  42fe06:	test   al,0x11
  42fe08:	cmc    
  42fe09:	pushf  
  42fe0a:	ins    DWORD PTR es:[edi],dx
  42fe0b:	mov    esi,0x4e9ed322
  42fe10:	xchg   bl,dl
  42fe12:	sti    
  42fe13:	ins    BYTE PTR es:[edi],dx
  42fe14:	(bad)  
  42fe15:	push   edi
  42fe16:	popf   
  42fe17:	or     BYTE PTR [ebx+0x7591e5b],ah
  42fe1d:	aam    0xa7
  42fe1f:	dec    eax
  42fe20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fe21:	jmp    0x2dd7:0xba008dd6
  42fe28:	sub    al,0xc7
  42fe2a:	sahf   
  42fe2b:	(bad)
  42fe2f:	out    0x28,eax
  42fe31:	cdq    
  42fe32:	pop    ecx
  42fe33:	push   ds
  42fe34:	ins    BYTE PTR es:[edi],dx
  42fe35:	ret    0x3fea
  42fe38:	add    BYTE PTR [esi+0x2f743ffa],bh
  42fe3e:	fcomp  DWORD PTR [esi]
  42fe40:	lea    ebx,[eax]
  42fe42:	jmp    DWORD PTR [ebx-0x48a8b894]
  42fe48:	sub    BYTE PTR [ebx-0x9],ah
  42fe4b:	jae    0x42fe82
  42fe4d:	int3   
  42fe4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fe4f:	sbb    ebx,DWORD PTR [eax]
  42fe51:	inc    ecx
  42fe52:	scas   al,BYTE PTR es:[edi]
  42fe53:	and    ah,al
  42fe55:	mov    edi,ebx
  42fe57:	push   edi
  42fe58:	cmp    al,0xbc
  42fe5a:	xchg   esp,eax
  42fe5b:	sbb    edx,DWORD PTR [eax+ecx*2-0x7a]
  42fe5f:	and    ah,dl
  42fe61:	add    edi,esp
  42fe63:	sbb    esi,DWORD PTR [esi-0x1ddd69d9]
  42fe69:	add    DWORD PTR [edi],eax
  42fe6b:	sbb    al,0x7b
  42fe6d:	leave  
  42fe6e:	sahf   
  42fe6f:	and    al,BYTE PTR [ebx]
  42fe71:	(bad)  
  42fe72:	sub    BYTE PTR [edi+0x23ab9348],bl
  42fe78:	ins    BYTE PTR es:[edi],dx
  42fe79:	xchg   edi,eax
  42fe7a:	xor    bh,cl
  42fe7c:	cmp    al,0x2f
  42fe7e:	adc    eax,0xf8188dbb
  42fe83:	adc    ch,BYTE PTR [edi+eax*8-0x53]
  42fe87:	lahf   
  42fe88:	lods   al,BYTE PTR ds:[esi]
  42fe89:	add    BYTE PTR [ebx+0x6eb8fc42],dl
  42fe8f:	addr16 inc edi
  42fe91:	jl     0x42ff12
  42fe93:	stos   DWORD PTR es:[edi],eax
  42fe94:	ds push esp
  42fe96:	add    cl,al
  42fe98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fe99:	in     al,dx
  42fe9a:	mov    ss,WORD PTR [eax+0x67ce70b8]
  42fea0:	shl    DWORD PTR [esi],cl
  42fea2:	jg     0x42ff0b
  42fea4:	sbb    edi,DWORD PTR [ebx+0xa]
  42fea7:	inc    ebp
  42fea8:	add    DWORD PTR [edi],esp
  42feaa:	clc    
  42feab:	pop    ecx
  42feac:	mov    eax,0xf32f4e70
  42feb1:	xchg   ebx,eax
  42feb2:	ret    0xe2f3
  42feb5:	sub    eax,DWORD PTR [ebx]
  42feb7:	xchg   edi,eax
  42feb8:	adc    edi,DWORD PTR [esi]
  42feba:	call   0xa80e:0x66f0a283
  42fec1:	push   eax
  42fec2:	xchg   edx,eax
  42fec3:	test   DWORD PTR [ebx],esp
  42fec5:	sub    al,0x92
  42fec7:	shl    BYTE PTR [edi-0x4f3fa9b1],0x33
  42fece:	cmp    eax,0x6eeda343
  42fed3:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  42fed5:	sub    al,0xd1
  42fed7:	inc    edi
  42fed8:	(bad)  
  42fed9:	xchg   ebx,eax
  42feda:	loopne 0x42fe5f
  42fedc:	mov    ds:0x8c36806b,eax
  42fee1:	mov    dl,0x6e
  42fee3:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  42fee5:	xchg   BYTE PTR [eax+0x5c],ah
  42fee8:	sub    dl,BYTE PTR [ecx]
  42feea:	push   esi
  42feeb:	add    eax,0x6d007aaf
  42fef0:	ret    
  42fef1:	std    
  42fef2:	daa    
  42fef3:	add    BYTE PTR [edx-0x1f],0xb5
  42fef7:	aam    0xc1
  42fef9:	out    dx,eax
  42fefa:	add    al,0x86
  42fefc:	inc    edx
  42fefd:	nop
  42fefe:	dec    esi
  42feff:	fimul  DWORD PTR [edx-0x67]
  42ff02:	fwait
  42ff03:	sub    DWORD PTR [ebp+0x56c0e90a],eax
  42ff09:	cmp    dl,bh
  42ff0b:	inc    ebp
  42ff0c:	add    DWORD PTR [ebp-0x4a31be53],ecx
  42ff12:	(bad)
  42ff15:	out    dx,eax
  42ff16:	shl    DWORD PTR [eax+0x4fcef0ff],0x51
  42ff1d:	jge    0x42ff8b
  42ff1f:	sub    ebx,edi
  42ff21:	out    dx,eax
  42ff22:	mov    esi,0x2abad90a
  42ff27:	mov    ch,dl
  42ff29:	jb     0x42ff97
  42ff2b:	mov    dh,0xfc
  42ff2d:	test   DWORD PTR [ecx-0x587cb227],ebp
  42ff33:	inc    ebx
  42ff34:	add    eax,esi
  42ff36:	sub    DWORD PTR [ecx],esi
  42ff38:	jbe    0x42ff2b
  42ff3a:	fild   DWORD PTR [ebp-0x18]
  42ff3d:	pop    edi
  42ff3e:	adc    ebx,esi
  42ff40:	int    0x85
  42ff42:	test   DWORD PTR [eax-0x4],0xac19ef
  42ff49:	jg     0x42ff3f
  42ff4b:	xchg   ecx,eax
  42ff4c:	add    dl,0x66
  42ff4f:	pop    ebp
  42ff50:	adc    cl,bh
  42ff52:	pop    esp
  42ff53:	add    BYTE PTR [eax-0x3a],cl
  42ff56:	retf   0xb6d7
  42ff59:	(bad)  
  42ff5a:	enter  0xcdb9,0x80
  42ff5e:	sahf   
  42ff5f:	stos   BYTE PTR es:[edi],al
  42ff60:	test   edi,ecx
  42ff62:	test   DWORD PTR ds:0x99effc4c,ebx
  42ff68:	sub    eax,0x382eb6e3
  42ff6d:	(bad)  
  42ff6e:	retf   0xfef6
  42ff71:	mov    edi,0x4b5e2986
  42ff76:	cmp    ebp,DWORD PTR [ecx]
  42ff78:	imul   ecx,ebx,0xffffff85
  42ff7b:	sub    eax,0xeffcbc
  42ff80:	mov    BYTE PTR [edx+0x6e],bl
  42ff83:	lods   al,BYTE PTR ds:[esi]
  42ff84:	sub    al,0x44
  42ff86:	jge    0x42ff0d
  42ff88:	jnp    0x42ff16
  42ff8a:	hlt    
  42ff8b:	(bad)  
  42ff8c:	out    dx,eax
  42ff8d:	nop
  42ff8e:	push   ss
  42ff8f:	mov    al,0x3d
  42ff91:	add    al,0xf0
  42ff93:	test   bh,ch
  42ff95:	jg     0x42ff1d
  42ff97:	in     al,0x5a
  42ff99:	mov    ?,esp
  42ff9b:	je     0x42ffc3
  42ff9d:	xchg   bh,ch
  42ff9f:	jmp    FWORD PTR [edi-0x43]
  42ffa2:	jbe    0x42ff9d
  42ffa4:	xor    al,0x79
  42ffa6:	leave  
  42ffa7:	add    BYTE PTR [edi],bl
  42ffa9:	add    al,0x45
  42ffab:	jne    0x42ff83
  42ffad:	(bad)  
  42ffae:	or     bl,BYTE PTR [edi+0x49]
  42ffb1:	cmp    ebp,DWORD PTR [ebp-0x774710fc]
  42ffb7:	in     al,dx
  42ffb8:	add    BYTE PTR [esi+0x62],bl
  42ffbb:	jnp    0x42ffc3
  42ffbd:	fild   WORD PTR [ebx+0x3f]
  42ffc0:	push   esi
  42ffc1:	sbb    al,0x2b
  42ffc3:	pop    esp
  42ffc4:	(bad)  
  42ffc5:	sar    BYTE PTR [edi],cl
  42ffc7:	mov    bh,0xbd
  42ffc9:	fild   WORD PTR [ebx+0xa]
  42ffcc:	mov    BYTE PTR [edx-0x73],bh
  42ffcf:	out    0x49,eax
  42ffd1:	mov    esp,0x618bf48e
  42ffd6:	mov    dh,0xf4
  42ffd8:	adc    eax,0x2ff1f7
  42ffdd:	es pop es
  42ffdf:	cld    
  42ffe0:	cmp    ebp,DWORD PTR [ebp+edi*8-0x75]
  42ffe4:	mov    ds:0x8d0a43af,al
  42ffe9:	fcmovu st,st(7)
  42ffeb:	mov    bh,0xbe
  42ffed:	lahf   
  42ffee:	inc    ebx
  42ffef:	or     ch,al
  42fff1:	popf   
  42fff2:	hlt    
  42fff3:	hlt    
  42fff4:	push   esp
  42fff6:	test   DWORD PTR [edi],edi
  42fff8:	inc    DWORD PTR [esi-0x6c05a822]
  42fffe:	(bad)  
  42ffff:	cld    
  430000:	aas    
  430001:	xchg   BYTE PTR [ebx+ecx*2],al
  430004:	jae    0x42ffd7
  430006:	outs   dx,BYTE PTR ds:[esi]
  430007:	scas   eax,DWORD PTR es:[edi]
  430008:	div    DWORD PTR [edi+0x4b9f6f66]
  43000e:	lock ds push eax
  430011:	dec    ecx
  430012:	cs add eax,DWORD PTR ds:[edi+0x56fb0be9]
  43001a:	ins    BYTE PTR es:[edi],dx
  43001b:	inc    ebx
  43001c:	add    BYTE PTR [eax],al
  43001e:	mov    bl,0x2f
  430020:	outs   dx,DWORD PTR ds:[esi]
  430021:	test   dh,bh
  430023:	add    edi,DWORD PTR [edi]
  430025:	cli    
  430026:	mov    dh,0x93
  430028:	or     esp,DWORD PTR [esi+0x11]
  43002b:	add    DWORD PTR ds:0xbc16094f,0xe
  430032:	inc    esi
  430033:	jmp    0x27b6bfc0
  430038:	outs   dx,DWORD PTR ds:[esi]
  430039:	test   BYTE PTR [esi],ah
  43003b:	(bad)  
  43003c:	ds cli 
  43003e:	push   esi
  43003f:	sar    al,1
  430041:	jg     0x4300b7
  430043:	sub    DWORD PTR [esi],eax
  430045:	push   eax
  430046:	(bad)  
  430048:	mov    WORD PTR ds:[ebx],cs
  43004b:	xchg   ecx,eax
  43004c:	inc    edx
  43004d:	cli    
  43004e:	leave  
  43004f:	pop    eax
  430050:	outs   dx,DWORD PTR ds:[esi]
  430051:	test   dh,ah
  430053:	gs ds cli 
  430056:	push   esi
  430057:	mov    al,ds:0xa99557f8
  43005c:	or     eax,DWORD PTR [ebp-0x791eea3a]
  430062:	dec    ebx
  430063:	xor    DWORD PTR [eax-0x7d],0xfa426143
  43006a:	xchg   ecx,eax
  43006b:	fmul   DWORD PTR [edx-0x67627639]
  430071:	xchg   edi,eax
  430072:	jge    0x4300b7
  430074:	sub    BYTE PTR [ecx+eiz*2-0x6d],cl
  430078:	sbb    BYTE PTR [esi+0x6c],cl
  43007b:	add    eax,0xfd864c9f
  430080:	xchg   esi,eax
  430081:	push   edi
  430082:	add    BYTE PTR [eax+ebx*2-0x5b],bl
  430086:	icebp  
  430087:	cdq    
  430088:	inc    edx
  430089:	leave  
  43008a:	scas   al,BYTE PTR es:[edi]
  43008b:	dec    esp
  43008c:	js     0x43006e
  43008e:	adc    DWORD PTR [esi-0x14],eax
  430091:	jae    0x430095
  430093:	xchg   BYTE PTR [edx+0x79],al
  430096:	test   eax,0x5c2ecc3c
  43009b:	in     al,dx
  43009c:	dec    esi
  43009d:	outs   dx,BYTE PTR ds:[esi]
  43009e:	les    ebp,FWORD PTR [ecx]
  4300a0:	iret   
  4300a1:	es pop esp
  4300a3:	ror    edi,1
  4300a5:	push   ds
  4300a6:	pusha  
  4300a7:	leave  
  4300a8:	iret   
  4300a9:	es push esp
  4300ab:	shr    DWORD PTR [eax-0x48],0x79
  4300af:	ret    0x11fa
  4300b2:	fiadd  WORD PTR [ebx]
  4300b4:	xchg   ecx,eax
  4300b5:	xor    al,0x7d
  4300b7:	pop    edx
  4300b8:	cli    
  4300b9:	nop
  4300ba:	icebp  
  4300bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4300bc:	push   ecx
  4300bd:	and    DWORD PTR [edi+edi*8],eax
  4300c0:	xchg   DWORD PTR [ebp+0xf],ebp
  4300c3:	and    DWORD PTR [edi-0x4],esi
  4300c6:	or     al,ah
  4300c8:	inc    edx
  4300c9:	loope  0x4300ce
  4300cb:	jge    0x430094
  4300cd:	jge    0x4300d3
  4300cf:	xchg   BYTE PTR [edx-0x46],al
  4300d2:	test   al,0xb9
  4300d4:	dec    ebp
  4300d5:	pop    ebp
  4300d6:	cmp    bh,BYTE PTR [ecx-0x4be91e03]
  4300dc:	cmp    esi,DWORD PTR [esi-0x643b83ad]
  4300e2:	add    al,0x86
  4300e4:	inc    edx
  4300e5:	jbe    0x4300a8
  4300e7:	add    BYTE PTR [ebp-0x663e836e],dl
  4300ed:	push   0x313cde0a
  4300f2:	mov    edx,0x1e56cc9a
  4300f7:	cli    
  4300f8:	inc    ebp
  4300f9:	std    
  4300fa:	xchg   BYTE PTR [ecx],ch
  4300fc:	ins    DWORD PTR es:[edi],dx
  4300fd:	(bad)  
  4300fe:	xchg   ebp,eax
  4300ff:	jmp    0xa4c64389
  430104:	shl    DWORD PTR [ebx+ecx*8],1
  430107:	neg    cl
  430109:	(bad)  
  43010a:	or     ch,cl
  43010c:	test   edi,ecx
  43010e:	jge    0x430159
  430110:	mov    edi,0xcc98eff8
  430115:	ins    DWORD PTR es:[edi],dx
  430116:	sbb    dl,cl
  430118:	femms  
  43011a:	out    dx,al
  43011b:	fidiv  WORD PTR [ecx-0x50b88943]
  430121:	(bad)  
  430122:	xchg   edx,eax
  430123:	ror    ah,cl
  430125:	clc    
  430126:	pop    edx
  430127:	je     0x43012f
  430129:	fucomp st(5)
  43012b:	mov    esi,0xc15a8dbc
  430130:	lods   eax,DWORD PTR fs:[esi]
  430132:	out    dx,eax
  430133:	scas   al,BYTE PTR es:[edi]
  430134:	push   es
  430135:	mov    ebp,0xc67f3f76
  43013a:	stos   BYTE PTR es:[edi],al
  43013b:	pushf  
  43013c:	cmp    al,0xf8
  43013e:	pop    edx
  43013f:	sub    DWORD PTR [ecx-0x49],0xbd618eef
  430146:	jbe    0x430177
  430148:	pop    edi
  430149:	(bad)  
  43014a:	call   0x15a:0xf83c0080
  430151:	add    bh,ch
  430153:	out    dx,eax
  430154:	in     eax,0xf4
  430156:	int    0x85
  430158:	mov    DWORD PTR [esi-0x8],ecx
  43015b:	out    dx,eax
  43015c:	mov    ecx,0xb467e4f8
  430161:	cmp    al,0xf8
  430163:	test   DWORD PTR [ecx],ebp
  430165:	shl    DWORD PTR [ebx+ebx*2],1
  430168:	add    BYTE PTR [edx],dl
  43016a:	ret    0xf97f
  43016d:	push   eax
  43016e:	mov    BYTE PTR [edi],bh
  430170:	push   ebx
  430171:	inc    edi
  430172:	jge    0x4300ff
  430174:	push   DWORD PTR [eax+0x7974af7b]
  43017a:	jnp    0x430102
  43017c:	nop
  43017d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43017e:	mov    ah,dh
  430180:	push   eax
  430181:	in     al,0x2
  430183:	cld    
  430184:	(bad)  
  430185:	(bad)  
  430186:	out    dx,eax
  430187:	leave  
  430188:	inc    ebp
  430189:	add    BYTE PTR [esi-0x1e],0x24
  43018d:	test   BYTE PTR [eax-0x7435000c],cl
  430193:	hlt    
  430194:	adc    eax,0x2ff547
  430199:	imul   ecx,DWORD PTR [ebp+0x75],0x49c620f0
  4301a0:	call   DWORD PTR [eax-0x76]
  4301a3:	hlt    
  4301a4:	jne    0x4301dd
  4301a6:	mov    dl,BYTE PTR [esi]
  4301a8:	sub    BYTE PTR [eax+eax*1],bh
  4301ab:	lock adc BYTE PTR [edx-0x66],0xe5
  4301b0:	add    BYTE PTR [eax],al
  4301b2:	pop    ds
  4301b3:	inc    eax
  4301b4:	add    eax,DWORD PTR [esp+eax*8+0x72fff488]
  4301bb:	jnp    0x430154
  4301bd:	sti    
  4301be:	adc    BYTE PTR [edx+0x1dde6a3f],cl
  4301c4:	cmc    
  4301c5:	push   0xffefbfe8
  4301ca:	jl     0x430155
  4301cc:	push   ss
  4301cd:	push   eax
  4301ce:	lods   al,BYTE PTR ds:[esi]
  4301cf:	(bad)  
  4301d0:	out    dx,eax
  4301d1:	test   BYTE PTR [edi],bl
  4301d3:	or     al,0x3c
  4301d5:	lea    ebp,[edx]
  4301d7:	jbe    0x4301cb
  4301d9:	jmp    DWORD PTR [eax]
  4301db:	mov    dh,0x67
  4301dd:	sbb    BYTE PTR [edi-0x79a8f9c1],0x66
  4301e4:	outs   dx,DWORD PTR ds:[esi]
  4301e5:	xchg   edi,eax
  4301e6:	popf   
  4301e7:	mov    WORD PTR [ecx+0x4f],es
  4301ea:	xor    eax,0x915b2791
  4301ef:	cmp    al,0x6f
  4301f1:	mov    edi,0x8cb71b12
  4301f6:	or     ebx,DWORD PTR [ecx-0x468605bd]
  4301fc:	mov    dh,0xe7
  4301fe:	ins    BYTE PTR es:[edi],dx
  4301ff:	push   0x2902fa41
  430204:	fiadd  DWORD PTR [ebx]
  430206:	dec    eax
  430207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430208:	inc    edx
  430209:	add    BYTE PTR [esi+ebp*4],cl
  43020c:	inc    edx
  43020d:	pop    edx
  43020e:	mov    al,0xa0
  430210:	xor    al,0xbe
  430212:	mov    bl,0x60
  430214:	push   edx
  430215:	add    BYTE PTR [eax],0x32
  430218:	gs icebp 
  43021a:	(bad)  
  43021b:	cmp    DWORD PTR [eax],edi
  43021d:	mov    esp,0xbd60352
  430222:	repz sub DWORD PTR [esp+edx*2],edx
  430226:	mov    DWORD PTR [ecx],esp
  430228:	or     eax,DWORD PTR [ebx+0x65]
  43022b:	jb     0x4302a3
  43022d:	jo     0x4301bc
  43022f:	push   cs
  430230:	mov    esp,0xa0054f42
  430235:	inc    edx
  430236:	xchg   BYTE PTR gs:[esi-0x5c06a080],bl
  43023d:	inc    edx
  43023e:	xchg   ch,al
  430240:	rcr    BYTE PTR [ebx-0x12],1
  430243:	jmp    0x430218
  430245:	jo     0x430206
  430247:	pusha  
  430248:	out    dx,al
  430249:	outs   dx,BYTE PTR ds:[esi]
  43024a:	shl    DWORD PTR [esi],0x51
  43024d:	xchg   BYTE PTR [ebx-0x7b8716bb],ch
  430253:	xchg   BYTE PTR [ebp+0x42],dh
  430256:	cli    
  430257:	push   esi
  430258:	rol    DWORD PTR [esi],0xae
  43025b:	mov    ecx,0xf17e6841
  430260:	dec    edx
  430261:	jbe    0x4302a6
  430263:	add    eax,0x70facf02
  430268:	add    cl,al
  43026a:	jp     0x43026e
  43026c:	inc    edx
  43026d:	inc    ebp
  43026e:	dec    eax
  43026f:	mov    esi,es
  430271:	out    dx,al
  430272:	jae    0x4302ec
  430274:	and    cl,0x76
  430277:	or     al,BYTE PTR [ebx+0x1d]
  43027a:	dec    eax
  43027b:	add    BYTE PTR [ebx+edx*4+0x28],bh
  43027f:	xor    bl,ch
  430281:	dec    esi
  430282:	pop    esi
  430283:	jle    0x4302a0
  430285:	sti    
  430286:	sbb    BYTE PTR [eax-0x2f],cl
  430289:	ins    BYTE PTR es:[edi],dx
  43028a:	loope  0x430302
  43028c:	shl    BYTE PTR [edx-0x5a96bb84],cl
  430292:	hlt    
  430293:	inc    ebp
  430294:	dec    esp
  430295:	shl    BYTE PTR [ecx],0xc9
  430298:	mov    ds:0xa1b327cd,al
  43029d:	retf   0xc397
  4302a0:	xor    edi,eax
  4302a2:	dec    sp
  4302a4:	cs cli 
  4302a6:	fdiv   DWORD PTR [ecx+ebp*1+0x1c4792b0]
  4302ad:	shl    BYTE PTR [ecx+0x6602faf7],0x44
  4302b4:	xchg   edx,eax
  4302b5:	dec    ebx
  4302b6:	hlt    
  4302b7:	inc    ebx
  4302b8:	addr16 retf 
  4302ba:	dec    sp
  4302bc:	(bad)  
  4302bd:	stc    
  4302be:	test   al,0x79
  4302c0:	or     bh,bl
  4302c2:	stos   BYTE PTR es:[edi],al
  4302c3:	inc    edi
  4302c4:	in     al,dx
  4302c5:	xchg   edx,eax
  4302c6:	cwde   
  4302c7:	das    
  4302c8:	fsubr  QWORD PTR [edi]
  4302ca:	jge    0x43025e
  4302cc:	cwde   
  4302cd:	inc    edx
  4302ce:	fs stc 
  4302d0:	jno    0x430278
  4302d2:	and    al,0x4
  4302d4:	enter  0xaf8,0xdc
  4302d8:	jno    0x430321
  4302da:	dec    edx
  4302db:	jmp    0xaafffcc2
  4302e0:	add    BYTE PTR [ebp-0x522a34cf],al
  4302e6:	mov    BYTE PTR [edx+0x56],bl
  4302e9:	xchg   edi,eax
  4302ea:	dec    ecx
  4302eb:	sbb    ebp,DWORD PTR [ecx+0x2447ea85]
  4302f1:	dec    ecx
  4302f2:	cld    
  4302f3:	jge    0x430361
  4302f5:	xor    dh,0xef
  4302f8:	ss loop 0x43032a
  4302fb:	mov    cl,0x2e
  4302fd:	rol    esi,0x7d
  430300:	and    ebx,eax
  430302:	cld    
  430303:	out    dx,eax
  430304:	adc    DWORD PTR [ecx+0x3c16efbb],edx
  43030a:	push   ebp
  43030b:	jge    0x430371
  43030d:	xchg   esp,eax
  43030e:	icebp  
  43030f:	out    dx,eax
  430310:	push   es
  430311:	sbb    bl,BYTE PTR [edi+0xa]
  430314:	ins    BYTE PTR es:[edi],dx
  430315:	aaa    
  430316:	rol    DWORD PTR [ebx-0x4af1dd6],0xec
  43031d:	sar    BYTE PTR [esi-0x386c9836],0x75
  430324:	sar    ebp,0xb3
  430327:	or     ch,cl
  430329:	test   edx,ebp
  43032b:	in     eax,dx
  43032c:	faddp  st(0),st
  43032e:	cld    
  43032f:	jge    0x43035d
  430331:	xchg   edx,eax
  430332:	mov    DWORD PTR [ebx-0x7a3a2a59],eax
  430338:	mov    cl,0x51
  43033a:	cld    
  43033b:	out    dx,eax
  43033c:	sbb    DWORD PTR [edx+0x57],ebx
  43033f:	mov    ecx,0xcabe48a6
  430344:	out    dx,al
  430345:	add    BYTE PTR [esi-0x47],dh
  430348:	xchg   BYTE PTR [ecx-0x56c4b64a],ch
  43034e:	mov    ebx,0x70085c9
  430353:	mov    esp,esi
  430355:	call   FWORD PTR [edx-0x3e]
  430358:	div    esp
  43035a:	cmp    BYTE PTR [eax+0x44ae683f],al
  430360:	or     al,BYTE PTR [eax+0x137bf228]
  430366:	fild   WORD PTR [edi+eax*4+0x35]
  43036a:	dec    ebx
  43036b:	hlt    
  43036c:	das    
  43036d:	add    BYTE PTR [edx],bh
  43036f:	ret    0xf8df
  430372:	dec    eax
  430373:	cmp    BYTE PTR [edi],0x8d
  430376:	and    al,BYTE PTR [ebp-0x12]
  430379:	(bad)  
  43037a:	mov    eax,0xdad6f4b3
  43037f:	ret    0xfe07
  430382:	test   al,0x80
  430384:	aas    
  430385:	(bad)  
  430386:	loop   0x430313
  430388:	repnz (bad) 
  43038a:	js     0x43033f
  43038c:	hlt    
  43038d:	(bad)  
  43038e:	mov    edx,0x88feffca
  430393:	xor    BYTE PTR [edi+0xa445f9c],0xe8
  43039a:	adc    eax,0xdafff4f1
  43039f:	ret    0xfe07
  4303a2:	sub    BYTE PTR [esi+0x3f],bh
  4303a5:	lea    esp,[edx+0xfff78e]
  4303ab:	cmp    BYTE PTR [edi+0x7e27857e],ch
  4303b1:	hlt    
  4303b2:	jmp    FWORD PTR [edi+0x6f]
  4303b5:	xchg   al,dh
  4303b7:	inc    edi
  4303b8:	jle    0x4303ae
  4303ba:	push   eax
  4303bb:	fs xor eax,0x42b3bf3f
  4303c1:	or     al,BYTE PTR [eax]
  4303c3:	jp     0x43038c
  4303c5:	outs   dx,DWORD PTR ds:[esi]
  4303c6:	lock or BYTE PTR [esi-0x19],bh
  4303ca:	dec    edi
  4303cb:	xchg   ch,cl
  4303cd:	inc    edi
  4303ce:	cli    
  4303cf:	add    eax,0xc684fa9e
  4303d4:	aas    
  4303d5:	out    dx,al
  4303d6:	xchg   al,al
  4303d8:	pop    ecx
  4303d9:	dec    esi
  4303da:	inc    ebp
  4303db:	std    
  4303dc:	outs   dx,DWORD PTR ds:[esi]
  4303dd:	inc    ebp
  4303de:	cmp    BYTE PTR [ebx-0x79c16517],bl
  4303e4:	push   ss
  4303e5:	hlt    
  4303e6:	xchg   BYTE PTR gs:[eax-0x568b1c21],bl
  4303ed:	or     edi,DWORD PTR [ecx+0xbeaa8]
  4303f3:	add    esp,DWORD PTR [edi+0x6]
  4303f6:	xrelease mov DWORD PTR [eax],edi
  4303f9:	xor    bh,bh
  4303fb:	sub    DWORD PTR [ecx-0x37808b4c],0x487afa5
  430405:	xor    eax,0x5274d3be
  43040a:	jle    0x43047e
  43040c:	add    eax,0x5a00648b
  430411:	jmp    0xedf68ad0
  430416:	popf   
  430417:	mov    ebp,es
  430419:	mov    cl,0xf6
  43041b:	mov    dl,0x76
  43041d:	fdivr  DWORD PTR [esi]
  43041f:	fstp   DWORD PTR [ebp+0x6500d1ef]
  430425:	sbb    edx,edx
  430427:	adc    ebx,edi
  430429:	sbb    eax,0x960f4f22
  43042e:	pop    edx
  43042f:	out    0x40,eax
  430431:	mov    DWORD PTR [ebp-0x6],eax
  430434:	std    
  430435:	mov    bl,0x53
  430437:	add    esi,DWORD PTR [edx]
  430439:	mov    eax,0xb1056146
  43043e:	rep ins DWORD PTR es:[edi],dx
  430440:	xchg   esp,eax
  430441:	fs retf 0xb0f
  430445:	inc    edx
  430446:	mov    eax,ds:0x262182ce
  43044b:	dec    eax
  43044c:	call   0xad866890
  430451:	leave  
  430452:	es dec eax
  430454:	or     BYTE PTR [ebp-0x7],dh
  430457:	jbe    0x43049d
  430459:	xor    dl,BYTE PTR [ecx]
  43045b:	inc    ebp
  43045c:	call   0x28cb:0xb9c3d3e6
  430463:	hlt    
  430464:	(bad)  
  430465:	jl     0x4304a8
  430467:	js     0x4304ad
  430469:	and    bh,BYTE PTR [edx-0x42]
  43046c:	mov    ebp,0x3613a0c4
  430471:	div    esi
  430473:	push   ebx
  430474:	add    BYTE PTR [ebx-0x2b0b1e7e],al
  43047a:	aas    
  43047b:	mov    ecx,0x644ef5bb
  430480:	pop    ebx
  430481:	xchg   edx,eax
  430482:	outs   dx,BYTE PTR ds:[esi]
  430483:	in     eax,0x10
  430485:	inc    esi
  430486:	jmp    0x837c:0x5c8478ed
  43048d:	jg     0x4304d2
  43048f:	loope  0x430494
  430491:	popa   
  430492:	dec    esp
  430493:	ins    BYTE PTR es:[edi],dx
  430494:	cld    
  430495:	out    0xc9,eax
  430497:	popa   
  430498:	out    0x86,eax
  43049a:	inc    edx
  43049b:	loope  0x43047a
  43049d:	push   cs
  43049e:	cmp    ch,0x77
  4304a1:	js     0x4304f5
  4304a3:	clc    
  4304a4:	sub    al,BYTE PTR [edx]
  4304a6:	mov    ch,bh
  4304a8:	push   ds
  4304a9:	inc    esi
  4304aa:	and    ah,BYTE PTR [edx+0x4bfad28d]
  4304b0:	sbb    cl,BYTE PTR [ebx]
  4304b2:	mov    BYTE PTR [ebp-0x21fd6f2b],bl
  4304b8:	shl    DWORD PTR [ebx-0x16ad83bd],cl
  4304be:	pusha  
  4304bf:	or     ah,ah
  4304c1:	test   DWORD PTR [edx-0x7d],eax
  4304c4:	mov    ecx,0xed75f3ff
  4304c9:	repz mov ch,0xe3
  4304cc:	sub    edx,DWORD PTR [ecx]
  4304ce:	cmp    DWORD PTR [ebx-0x6df5549],eax
  4304d4:	pop    DWORD PTR [ebp-0x41]
  4304d7:	rcl    BYTE PTR [ecx-0x1254bb00],cl
  4304dd:	jle    0x4304f0
  4304df:	jg     0x4304cf
  4304e1:	ins    BYTE PTR es:[edi],dx
  4304e2:	inc    edx
  4304e3:	jno    0x430506
  4304e5:	ja     0x430471
  4304e7:	inc    ebx
  4304e8:	jbe    0x4304f7
  4304ea:	stc    
  4304eb:	jle    0x4304eb
  4304ed:	jno    0x4304b9
  4304ef:	inc    ebp
  4304f0:	div    DWORD PTR [ecx]
  4304f2:	jns    0x4304f6
  4304f4:	sub    al,0xa4
  4304f6:	dec    ebp
  4304f7:	je     0x4304c3
  4304f9:	loope  0x4304b0
  4304fb:	clc    
  4304fc:	jne    0x430533
  4304fe:	adc    DWORD PTR [esi+0x2],edi
  430501:	bound  eax,QWORD PTR [edx-0x749e4507]
  430507:	inc    edx
  430508:	or     dl,BYTE PTR [ecx]
  43050a:	adc    eax,DWORD PTR [edx-0x10]
  43050d:	push   ds
  43050e:	adc    BYTE PTR [edi+ecx*2-0x32f5c749],dh
  430515:	loope  0x43049c
  430517:	pop    DWORD PTR [ebx+0x7ae90315]
  43051d:	in     al,0x85
  43051f:	inc    edx
  430520:	pop    ebx
  430521:	lahf   
  430522:	or     BYTE PTR ds:0xddc16258,cl
  430528:	pop    ss
  430529:	mov    edx,0x6a68f8c4
  43052e:	pop    ebp
  43052f:	jmp    FWORD PTR ds:[edx+0x7]
  430533:	cmc    
  430534:	out    dx,eax
  430535:	jmp    0x489917
  43053a:	pop    ds
  43053b:	inc    ecx
  43053c:	jge    0x4304c3
  43053e:	add    BYTE PTR [esi+0x37],bl
  430541:	hlt    
  430542:	inc    DWORD PTR [ebp+0x3e]
  430545:	pop    edx
  430546:	(bad)  
  430547:	push   0xffffffd1
  430549:	cmc    
  43054a:	jmp    DWORD PTR [eax]
  43054c:	inc    ecx
  43054d:	loop   0x430508
  43054f:	fiadd  DWORD PTR [eax+0xa]
  430552:	mov    ebp,DWORD PTR [esi+ecx*2-0x364c3b91]
  430559:	scas   eax,DWORD PTR es:[edi]
  43055a:	je     0x430538
  43055c:	mov    ebx,0x77b02caf
  430561:	inc    edi
  430562:	add    esi,DWORD PTR [ecx-0x5f]
  430565:	push   es
  430566:	add    BYTE PTR [edi-0x4603893b],bl
  43056c:	repz ror DWORD PTR [edi],0x28
  430570:	mov    edi,0xaaafffef
  430575:	xchg   cl,cl
  430577:	mov    ebx,0x41088601
  43057c:	xchg   BYTE PTR [edi-0x7],ch
  43057f:	outs   dx,BYTE PTR ds:[esi]
  430580:	mov    ecx,0x481a8b7b
  430585:	jge    0x430514
  430587:	(bad)  ds:0xd32efff4
  43058d:	jle    0x43051f
  43058f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430590:	xor    ah,0x51
  430593:	in     al,dx
  430594:	jge    0x43059d
  430596:	lea    eax,[edx]
  430598:	xor    al,0xe7
  43059a:	jae    0x4305a3
  43059c:	xor    esp,0x5bab6f84
  4305a2:	mov    eax,DWORD PTR [eax]
  4305a4:	sbb    dh,BYTE PTR [eax+edi*1]
  4305a7:	(bad)  
  4305a8:	mov    eax,0x2f438912
  4305ad:	cmp    edx,edi
  4305af:	sbb    ebp,edi
  4305b1:	ret    
  4305b2:	dec    eax
  4305b3:	push   ss
  4305b4:	xchg   BYTE PTR [eax+0x4b],cl
  4305b7:	jle    0x4305fe
  4305b9:	and    bl,BYTE PTR [ecx]
  4305bb:	mov    bl,0x7d
  4305bd:	mov    ah,0x53
  4305bf:	push   ss
  4305c0:	iret   
  4305c1:	push   0x5e540348
  4305c6:	xchg   edi,eax
  4305c7:	(bad)  
  4305c8:	in     al,dx
  4305c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4305ca:	dec    ecx
  4305cb:	dec    ebp
  4305cc:	add    eax,0xa55002aa
  4305d1:	mov    al,0xa0
  4305d3:	add    al,0xee
  4305d5:	cmp    bl,BYTE PTR [edx]
  4305d7:	add    BYTE PTR [esi-0x527bb1a0],al
  4305dd:	cmc    
  4305de:	adc    al,0x87
  4305e0:	dec    ebx
  4305e1:	icebp  
  4305e2:	jle    0x43061b
  4305e4:	scas   al,BYTE PTR es:[edi]
  4305e5:	adc    bh,BYTE PTR [ecx+edi*8]
  4305e8:	mov    cl,0x60
  4305ea:	xor    eax,0x23f04387
  4305ef:	jmp    0x858c9ce7
  4305f4:	inc    ebx
  4305f5:	loopne 0x430615
  4305f7:	std    
  4305f8:	push   edi
  4305f9:	sub    ecx,ebp
  4305fb:	pop    ecx
  4305fc:	sub    eax,0x86034832
  430601:	into   
  430602:	jle    0x4305ef
  430604:	pop    es
  430605:	jge    0x430639
  430607:	add    BYTE PTR [eax],al
  430609:	xchg   cl,ch
  43060b:	(bad)  
  43060c:	xchg   bl,cl
  43060e:	in     eax,dx
  43060f:	jle    0x43064f
  430611:	jbe    0x43065f
  430613:	dec    esi
  430614:	push   ecx
  430615:	jge    0x430640
  430617:	ror    DWORD PTR [ebp+ecx*8+0x79c2e6eb],1
  43061e:	xor    eax,esi
  430620:	inc    BYTE PTR [ecx+edx*2]
  430623:	push   es
  430624:	mov    DWORD PTR [ebx+0x7e84194d],edi
  43062a:	out    0xb,eax
  43062c:	add    BYTE PTR [esi+0x5bb83942],bh
  430632:	mov    bh,BYTE PTR [ecx]
  430634:	mov    eax,0xb8298a64
  430639:	jge    0x4305fa
  43063b:	leave  
  43063c:	out    dx,eax
  43063d:	xchg   ebp,eax
  43063e:	cmp    esi,ebx
  430640:	inc    ebx
  430641:	out    dx,al
  430642:	clc    
  430643:	loop   0x430648
  430645:	xchg   bh,al
  430647:	push   ds
  430648:	or     al,0x9
  43064a:	inc    edx
  43064b:	mov    al,ds:0xe1410173
  430650:	add    ecx,DWORD PTR [ecx]
  430652:	setp   BYTE PTR [esi-0x27]
  430656:	hlt    
  430657:	cwde   
  430658:	sub    dh,BYTE PTR [ebx-0x32fc1ec0]
  43065e:	ins    BYTE PTR es:[edi],dx
  43065f:	stc    
  430660:	mov    WORD PTR [eax],es
  430662:	jmp    0x548a:0xf2bc4137
  430669:	xchg   BYTE PTR [edx-0x1f],al
  43066c:	mov    WORD PTR [eax],es
  43066e:	shr    cl,0x2f
  430671:	push   edx
  430672:	pushf  
  430673:	repnz mov DWORD PTR [ecx+edx*4-0x56b62cab],0x8c3e4331
  43067f:	(bad)  
  430680:	xor    DWORD PTR [eax+eax*8+0xe55f452],ecx
  430687:	js     0x4306be
  430689:	cld    
  43068a:	arpl   WORD PTR [eax-0x22],di
  43068d:	cmp    BYTE PTR [ecx+0x4e],dl
  430690:	and    DWORD PTR [eax+eiz*1-0x7f871f85],eax
  430697:	and    eax,0x952e3820
  43069c:	cld    
  43069d:	dec    edx
  43069e:	mov    ebx,0xd60721c5
  4306a3:	and    eax,0xea38ad3c
  4306a8:	or     ch,BYTE PTR [eax-0x7e]
  4306ab:	inc    edx
  4306ac:	or     ah,BYTE PTR [edx+0x75]
  4306af:	xabort 0x5d
  4306b2:	adc    cl,cl
  4306b4:	inc    ebp
  4306b5:	icebp  
  4306b6:	or     al,0x3a
  4306b8:	xor    DWORD PTR [edi-0x30207b9e],0x49
  4306bf:	(bad)  
  4306c0:	rcl    cl,cl
  4306c2:	mov    eax,ds:0xabbeed9f
  4306c7:	pop    edx
  4306c8:	or     ecx,ebp
  4306ca:	test   DWORD PTR [ecx],edi
  4306cc:	int3   
  4306cd:	xor    al,0x7f
  4306cf:	mov    ebx,0xad00a155
  4306d4:	inc    ebx
  4306d5:	mov    ebp,DWORD PTR [ecx-0x6eba452a]
  4306db:	aad    0xec
  4306dd:	bound  ebp,QWORD PTR [ebx+0x740a4283]
  4306e3:	cmovb  esi,eax
  4306e6:	jle    0x430761
  4306e8:	xchg   esp,eax
  4306e9:	pop    edx
  4306ea:	pusha  
  4306eb:	iret   
  4306ec:	loope  0x43066f
  4306ee:	in     al,dx
  4306ef:	jno    0x4306dd
  4306f1:	adc    eax,0xa82781d
  4306f6:	sbb    al,BYTE PTR [edx+0x70]
  4306f9:	(bad)  
  4306fa:	in     eax,0x2
  4306fc:	xchg   esi,ebx
  4306fe:	adc    al,al
  430700:	inc    ebp
  430701:	jo     0x4306d2
  430703:	adc    al,BYTE PTR [esi-0xf8f8d1e]
  430709:	jbe    0x43074c
  43070b:	pop    ss
  43070c:	add    DWORD PTR [edx],0xffffff99
  43070f:	cli    
  430710:	jne    0x4306fc
  430712:	jo     0x430763
  430714:	in     eax,0xe2
  430716:	in     eax,dx
  430717:	lods   eax,DWORD PTR ds:[esi]
  430718:	out    dx,al
  430719:	out    dx,eax
  43071a:	ins    DWORD PTR es:[edi],dx
  43071b:	retf   0x3776
  43071e:	push   0xffffff89
  430720:	inc    edi
  430721:	jnp    0x430723
  430723:	cmp    DWORD PTR [ebx-0x2c9e74f6],ebx
  430729:	lock xchg DWORD PTR ds:[ecx-0x1a],ebx
  43072e:	std    
  43072f:	sbb    BYTE PTR [edx+ebp*1],bl
  430732:	inc    edx
  430734:	mov    BYTE PTR cs:[ebp+0x0],al
  430738:	inc    ebx
  430739:	shl    BYTE PTR [esi-0x10],cl
  43073c:	inc    edi
  43073d:	and    esi,0xc7bc38fd
  430743:	test   DWORD PTR [esi],esi
  430745:	lods   eax,DWORD PTR ds:[esi]
  430746:	dec    DWORD PTR [edx-0x2177d95e]
  43074c:	(bad)  
  43074d:	mov    cl,0xeb
  43074f:	std    
  430750:	sbb    BYTE PTR [esi+ecx*2-0x3fdabf4],bh
  430757:	jmp    DWORD PTR [edx-0x4ba77ce]
  43075d:	mov    ebx,0xfa5cec3e
  430762:	out    0x38,eax
  430764:	xor    al,0x35
  430766:	cmp    BYTE PTR [eax-0x5d],cl
  430769:	mov    al,0x8e
  43076b:	push   ecx
  43076d:	sbb    al,0x9b
  43076f:	mov    ah,0x1a
  430771:	xor    BYTE PTR [ecx-0x18],bl
  430774:	sbb    DWORD PTR [ecx-0x12],edi
  430777:	jmp    DWORD PTR [edx]
  430779:	xor    BYTE PTR [ecx+0x61],dh
  43077c:	and    al,0xfa
  43077e:	fisttp WORD PTR [ecx-0x7a81cf1e]
  430784:	xchg   edx,eax
  430785:	xor    ah,dh
  430787:	push   esi
  430789:	cli    
  43078a:	add    ecx,DWORD PTR [ecx+0x75882c3a]
  430790:	dec    ebx
  430791:	mov    ebp,0x85ecfc6e
  430796:	call   0xee5f3b83
  43079b:	inc    DWORD PTR [eax]
  43079d:	xchg   BYTE PTR [edx+ecx*8+0xb],ah
  4307a1:	loopne 0x4307ff
  4307a3:	mov    al,0x3
  4307a5:	xchg   BYTE PTR [esi+0x1],ch
  4307a8:	xchg   bx,dx
  4307ab:	pop    es
  4307ac:	push   ebx
  4307ad:	push   ds
  4307ae:	shr    edx,cl
  4307b0:	cli    
  4307b1:	sub    eax,edi
  4307b3:	push   es
  4307b4:	(bad)  
  4307b5:	call   0x80e9:0xac00a1ef
  4307bc:	inc    edx
  4307bd:	mov    BYTE PTR [ecx],ch
  4307bf:	push   ds
  4307c0:	inc    edx
  4307c1:	stos   DWORD PTR es:[edi],eax
  4307c2:	add    BYTE PTR [esi],ch
  4307c4:	out    0x43,eax
  4307c6:	es sub eax,0xc57260fa
  4307cc:	adc    DWORD PTR ds:0x5374a1f,eax
  4307d2:	test   eax,0xa153fadf
  4307d7:	cmp    DWORD PTR [edx+ecx*4+0x56],0x72
  4307dc:	xchg   BYTE PTR [ebx-0x33],dl
  4307df:	cmp    DWORD PTR [esi],0x164ed876
  4307e5:	(bad)  
  4307e6:	cld    
  4307e7:	enter  0x5db,0x9d
  4307eb:	mov    esi,0x36e4f90a
  4307f0:	fmul   DWORD PTR [ebp+0x73faa1a2]
  4307f6:	mov    al,0x80
  4307f8:	xchg   esp,eax
  4307f9:	jbe    0x43078a
  4307fb:	sub    eax,0x465c34fa
  430800:	add    eax,DWORD PTR [eax]
  430802:	ss cmp al,0x41
  430805:	test   DWORD PTR gs:[ecx-0x2679fa22],edx
  43080c:	sub    bh,0xb
  43080f:	das    
  430810:	mov    bh,0xc
  430812:	imul   esi,DWORD PTR [esi+0x4271e73b],0xd95c3f54
  43081c:	fnstcw WORD PTR ds:0xc76cef4c
  430822:	cmp    DWORD PTR [ebx-0x25a07727],0xef3f2f02
  43082c:	jnp    0x43088a
  43082e:	sub    DWORD PTR [ecx-0x10d3c0b4],ebp
  430834:	jbe    0x430869
  430836:	sub    edi,edi
  430838:	xchg   esp,eax
  430839:	ds sbb al,0xbc
  43083c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43083d:	sub    BYTE PTR [esi-0x6d],bh
  430840:	fdiv   DWORD PTR [esi+0x38b4da81]
  430846:	cld    
  430847:	out    dx,al
  430848:	sub    dh,bl
  43084a:	push   eax
  43084b:	stc    
  43084c:	mov    ds:0x6c95860b,eax
  430851:	das    
  430852:	push   es
  430853:	ficomp WORD PTR [ecx+0x34428602]
  430859:	(bad)  
  43085a:	xor    al,0xbb
  43085c:	push   cs
  43085d:	or     al,0x9
  43085f:	repnz ins BYTE PTR es:[edi],dx
  430861:	add    al,0xcd
  430863:	mov    cl,0x4d
  430865:	add    al,BYTE PTR [eax]
  430867:	xchg   BYTE PTR [edx+0x76],al
  43086a:	(bad)  
  43086b:	mov    ch,0x5b
  43086d:	out    0xdb,al
  43086f:	or     BYTE PTR [eax],al
  430871:	mov    dh,BYTE PTR [ebp-0x789f0fc7]
  430877:	loope  0x4308b7
  430879:	pop    ebp
  43087a:	pop    ecx
  43087b:	xchg   BYTE PTR [edx-0x1f],al
  43087e:	mov    BYTE PTR [edx+0x2e],dh
  430881:	out    dx,eax
  430882:	ret    
  430883:	mov    DWORD PTR [eax-0x1b],ebx
  430886:	mov    cs,edx
  430888:	neg    cl
  43088a:	jmp    0x430880
  43088c:	and    cl,0xd3
  43088f:	ins    BYTE PTR es:[edi],dx
  430890:	adc    cl,BYTE PTR [ebx]
  430892:	push   0xffffffc1
  430894:	cmp    DWORD PTR [ebp+0x64561929],eax
  43089a:	in     al,dx
  43089b:	or     BYTE PTR [edi+0x715591f6],al
  4308a1:	dec    edx
  4308a2:	jmp    0x6b1ef1dc
  4308a7:	leave  
  4308a8:	cmp    DWORD PTR [ebp-0x673875d7],eax
  4308ae:	jmp    0x6cc04b38
  4308b3:	xor    ecx,ebp
  4308b5:	out    dx,eax
  4308b6:	out    dx,al
  4308b7:	xor    al,0xe6
  4308b9:	ss xor al,0x5c
  4308bc:	call   0x7819b247
  4308c1:	push   0xef318f6a
  4308c6:	into   
  4308c7:	mov    ebp,0xf576ef
  4308cc:	add    eax,0xadbe32af
  4308d1:	call   0xae3cef45
  4308d6:	jecxz  0x4308de
  4308d8:	and    al,0x6d
  4308da:	lods   eax,DWORD PTR ds:[esi]
  4308db:	fstp   QWORD PTR [eax+ebp*8+0x5516f6ef]
  4308e2:	fs stc 
  4308e4:	inc    dh
  4308e6:	mov    ?,WORD PTR cs:[ebp-0x18]
  4308ea:	pop    edx
  4308eb:	adc    DWORD PTR [edx],edx
  4308ed:	je     0x430939
  4308ef:	jmp    0xadcf0560
  4308f4:	jle    0x4308e7
  4308f6:	rcl    bl,cl
  4308f8:	inc    ebp
  4308f9:	jmp    0x4308c5
  4308fb:	push   edx
  4308fc:	sbb    BYTE PTR [edx+ecx*8],0x65
  430900:	dec    edx
  430901:	jno    0x430934
  430903:	bound  eax,QWORD PTR [ebp-0x749e753b]
  430909:	inc    edx
  43090a:	or     al,BYTE PTR [eax]
  43090c:	repnz sti 
  43090e:	sti    
  43090f:	mov    DWORD PTR [edx],esp
  430911:	sbb    DWORD PTR [eax-0x13fc67f8],ecx
  430917:	dec    esp
  430918:	sbb    al,BYTE PTR [ecx]
  43091a:	lock mov dl,bh
  43091d:	and    al,0x86
  43091f:	leave  
  430920:	pusha  
  430921:	ins    DWORD PTR es:[edi],dx
  430922:	add    DWORD PTR ss:[edi+0x41],ebx
  430926:	repz mov cl,0xe3
  430929:	inc    edi
  43092a:	or     al,BYTE PTR [eax]
  43092c:	mov    dl,0xfb
  43092e:	jmp    0x43099a
  430930:	add    BYTE PTR [esi],bl
  430932:	push   ss
  430933:	inc    eax
  430934:	call   0x313203
  430939:	xchg   BYTE PTR [eax+0x9],cl
  43093c:	add    BYTE PTR [edi],ch
  43093e:	mov    edx,0x1659f446
  430943:	mov    DWORD PTR [edi],eax
  430945:	inc    esi
  430946:	ins    BYTE PTR es:[edi],dx
  430947:	out    dx,eax
  430948:	(bad)  
  430949:	out    dx,eax
  43094a:	mov    ebx,0xc57fff0c
  43094f:	or     al,BYTE PTR [eax]
  430951:	fistp  QWORD PTR [ecx-0x1eba42aa]
  430957:	push   edi
  430958:	mov    eax,DWORD PTR [ecx]
  43095a:	sbb    DWORD PTR [edx-0x74d7deb1],ebx
  430960:	shl    al,0x6c
  430963:	test   BYTE PTR [eax],0xdf
  430966:	inc    eax
  430967:	push   0xfc026205
  43096c:	push   eax
  43096d:	xor    al,BYTE PTR [edx]
  43096f:	mov    eax,0x3a523050
  430974:	push   ss
  430975:	pop    edi
  430976:	inc    esi
  430977:	xchg   DWORD PTR [edi],eax
  430979:	sub    al,0x81
  43097b:	or     eax,DWORD PTR [ebx+0x335a456b]
  430981:	inc    esp
  430982:	mov    edx,0x95862c86
  430987:	xor    al,0xfa
  430989:	maxps  xmm4,xmm7
  43098c:	stc    
  43098d:	jns    0x430914
  43098f:	and    ebp,DWORD PTR [ebx+0x65342c8f]
  430995:	add    BYTE PTR [edx+0x1e4c82cf],bl
  43099b:	(bad)
  43099f:	and    eax,0x4064e734
  4309a4:	xor    edi,edx
  4309a6:	mov    ?,WORD PTR [esi+0x2d0a0a73]
  4309ac:	or     eax,DWORD PTR [eax]
  4309ae:	xchg   BYTE PTR [ecx],al
  4309b0:	shl    DWORD PTR [ebp-0x969b7f],cl
  4309b6:	sub    edx,ebx
  4309b8:	fdivr  DWORD PTR [esi]
  4309ba:	adc    ecx,edi
  4309bc:	pop    ebx
  4309bd:	xchg   BYTE PTR [eax],bl
  4309bf:	adc    cl,BYTE PTR [esi*1-0x7b77f2ef]
  4309c6:	push   esi
  4309c7:	adc    esi,DWORD PTR [edx]
  4309c9:	cli    
  4309ca:	push   esi
  4309cb:	mov    cs,esp
  4309cd:	adc    ebp,esi
  4309cf:	xchg   ebx,eax
  4309d0:	adc    edi,ebx
  4309d2:	icebp  
  4309d3:	fdivr  QWORD PTR [ecx+0x4c]
  4309d6:	sub    eax,0x8f560880
  4309db:	xchg   ebx,eax
  4309dc:	fdivp  st(5),st
  4309de:	(bad)  
  4309e0:	jle    0x4309a2
  4309e2:	add    eax,0x3173aad2
  4309e7:	add    BYTE PTR [esi+0x73],al
  4309ea:	push   ebp
  4309eb:	add    BYTE PTR [esi+0x73],al
  4309ee:	js     0x430a00
  4309f0:	inc    esi
  4309f1:	jae    0x430a5f
  4309f3:	pop    eax
  4309f4:	push   ds
  4309f5:	pop    ecx
  4309f6:	xor    dl,BYTE PTR ds:0x1a00bddf
  4309fc:	aaa    
  4309fd:	fnstsw WORD PTR [ebp-0x2e38bded]
  430a03:	inc    ecx
  430a04:	mov    bh,0xa6
  430a06:	or     eax,DWORD PTR [ecx]
  430a08:	inc    ebx
  430a09:	pop    eax
  430a0a:	je     0x430a11
  430a0c:	inc    ecx
  430a0d:	loope  0x430a12
  430a0f:	outs   dx,BYTE PTR ds:[esi]
  430a10:	js     0x4309ea
  430a12:	cmp    DWORD PTR [edi+edx*8-0x45],ebp
  430a16:	sub    edx,0xffffffa9
  430a19:	in     al,0xae
  430a1b:	lds    esi,FWORD PTR [edi+0x42010ba6]
  430a21:	scas   eax,DWORD PTR es:[edi]
  430a22:	mov    WORD PTR [ecx],fs
  430a24:	(bad)  
  430a25:	loop   0x430a2a
  430a27:	xchg   dl,bl
  430a29:	fidiv  WORD PTR [edx-0xcf314c1]
  430a2f:	add    BYTE PTR [ebp+0x2b0d1f9],al
  430a35:	cli    
  430a36:	xchg   BYTE PTR [edx-0x6a31f656],bh
  430a3c:	jmp    0x430a1e
  430a3e:	sub    al,0x79
  430a40:	mov    edi,0x39959fda
  430a45:	sbb    al,0x4e
  430a47:	xchg   edx,eax
  430a48:	push   ebx
  430a49:	imul   ecx,esi,0x8be4d6f1
  430a4f:	pop    edx
  430a50:	repnz enter 0xe1ae,0x93
  430a55:	jl     0x430a05
  430a57:	cmp    DWORD PTR [edi-0x4711f461],0xdc003932
  430a61:	mov    al,BYTE PTR [edi-0x23]
  430a64:	mov    esi,0x3303e5ff
  430a69:	mov    bh,0x85
  430a6b:	test   BYTE PTR [ebp+0x752762e9],ah
  430a71:	aas    
  430a72:	loope  0x430a77
  430a74:	push   esp
  430a75:	pop    eax
  430a76:	loope  0x430a25
  430a78:	test   eax,0xa62d0abd
  430a7d:	cmp    ah,dl
  430a7f:	mov    DWORD PTR [edx-0x1f8d1019],edx
  430a85:	inc    edx
  430a86:	and    edi,0xfffffffa
  430a89:	add    BYTE PTR [esi],0x60
  430a8c:	dec    ecx
  430a8d:	es (bad) 
  430a8f:	popa   
  430a90:	dec    ebp
  430a91:	inc    edx
  430a92:	mov    esi,DWORD PTR [ecx-0x527e128f]
  430a98:	dec    ecx
  430a99:	cmp    al,BYTE PTR [ecx+eiz*4-0x1e959677]
  430aa0:	test   DWORD PTR [edx-0x3f7e32c2],edi
  430aa6:	inc    edx
  430aa7:	in     al,dx
  430aa8:	std    
  430aa9:	jge    0x430ad1
  430aab:	cld    
  430aac:	adc    bh,BYTE PTR [ebx+eax*4]
  430aaf:	test   eax,0xcd46bb95
  430ab4:	lea    edi,[edi-0x3e788a3f]
  430aba:	or     DWORD PTR [ebx-0x11e5127c],eax
  430ac0:	(bad)  
  430ac1:	inc    ebp
  430ac2:	jge    0x430af1
  430ac4:	add    BYTE PTR [esi],ah
  430ac6:	ds loop 0x430b37
  430ac9:	dec    edi
  430aca:	in     al,dx
  430acb:	out    dx,eax
  430acc:	aas    
  430acd:	mov    dl,0x85
  430acf:	mov    ecx,0x76b6b1cc
  430ad4:	or     eax,0xfad7da82
  430ad9:	mov    al,0xec
  430adb:	cmp    ebp,DWORD PTR [ecx+0xce5c0b8]
  430ae1:	inc    esp
  430ae2:	inc    ebp
  430ae3:	or     bh,BYTE PTR [edi*8-0x47c5a623]
  430aea:	xchg   esp,eax
  430aeb:	adc    DWORD PTR [ecx-0x7ef97af3],0x61
  430af2:	lahf   
  430af3:	out    dx,eax
  430af4:	add    BYTE PTR [eax],cl
  430af6:	mov    esi,0xa31c047c
  430afb:	repz add BYTE PTR [edx],ch
  430afe:	adc    BYTE PTR [ebx+edx*2],al
  430b01:	sub    BYTE PTR [ebx-0x22],dl
  430b04:	adc    bl,bh
  430b06:	inc    ebp
  430b07:	xchg   DWORD PTR [esi],eax
  430b09:	and    bh,BYTE PTR [esi+0x7b]
  430b0c:	adc    esp,esp
  430b0e:	cwde   
  430b0f:	or     eax,DWORD PTR [ebx+0x3763e89]
  430b15:	enter  0xf403,0x83
  430b19:	mov    eax,ds:0x9d754242
  430b1e:	adc    eax,0x549f15f5
  430b23:	dec    edx
  430b24:	add    dh,bl
  430b26:	stos   DWORD PTR es:[edi],eax
  430b27:	repz ret 0x5e00
  430b2b:	inc    ebp
  430b2c:	or     dh,BYTE PTR [esi+0x24]
  430b2f:	mov    esp,0x77a2083e
  430b34:	jnp    0x430b7a
  430b36:	mov    ah,0x3f
  430b38:	out    0x3c,eax
  430b3a:	adc    eax,0x5fb7e23d
  430b3f:	sub    esi,esp
  430b41:	mov    ecx,DWORD PTR [edx]
  430b43:	cmp    eax,0x17a2f087
  430b48:	jnp    0x430b6e
  430b4a:	mov    ch,0x3e
  430b4c:	pop    esp
  430b4d:	push   0x2d1a19
  430b52:	dec    di
  430b54:	cmp    DWORD PTR [esi-0x1d],0x570474bb
  430b5b:	or     cl,BYTE PTR ds:[eax]
  430b5e:	out    dx,eax
  430b5f:	sbb    al,0xf1
  430b61:	stos   BYTE PTR es:[edi],al
  430b62:	sub    BYTE PTR [eax],dh
  430b64:	mov    eax,eax
  430b66:	jb     0x430bbc
  430b68:	pop    esp
  430b69:	call   0x3180a3
  430b6e:	xchg   BYTE PTR [esi+0x54],dl
  430b71:	jae    0x430b01
  430b73:	fs or  al,0x87
  430b76:	mov    ebp,0x96fb0554
  430b7b:	dec    eax
  430b7c:	fcom   DWORD PTR [esi-0x31]
  430b7f:	pushf  
  430b80:	out    dx,eax
  430b81:	push   DWORD PTR [edx]
  430b83:	fs daa 
  430b85:	jle    0x430b29
  430b87:	out    dx,al
  430b88:	fsubr  QWORD PTR [esi]
  430b8a:	lods   eax,DWORD PTR ds:[esi]
  430b8b:	mov    al,0xc0
  430b8d:	xchg   BYTE PTR [eax],al
  430b8f:	ja     0x430bf4
  430b91:	sar    bl,cl
  430b93:	mov    ebp,0xff149f1c
  430b98:	xchg   esi,eax
  430b99:	pop    ds
  430b9a:	out    0x6f,eax
  430b9c:	mov    ds:0xdaecfa38,al
  430ba1:	jle    0x430be7
  430ba3:	pop    esi
  430ba4:	add    al,0x4
  430ba6:	(bad)  
  430ba7:	retf   
  430ba8:	inc    ebp
  430ba9:	(bad)  
  430bab:	adc    bl,0x6
  430bae:	dec    edi
  430baf:	aad    0x64
  430bb1:	retf   0xd507
  430bb4:	lods   al,BYTE PTR ds:[esi]
  430bb5:	fsubr  st(7),st
  430bb7:	pop    ecx
  430bb8:	xlat   BYTE PTR ds:[ebx]
  430bb9:	or     eax,DWORD PTR [eax]
  430bbb:	std    
  430bbc:	inc    ecx
  430bbd:	hlt    
  430bbe:	neg    BYTE PTR [edx-0x4132dc48]
  430bc4:	fdiv   DWORD PTR ds:0x7ea3342e
  430bca:	push   cs
  430bcb:	xchg   cl,bl
  430bcd:	push   ds
  430bce:	lock or eax,0x1ebd8b99
  430bd4:	push   esp
  430bd5:	push   es
  430bd6:	add    BYTE PTR [eax+eax*1-0x1f],dl
  430bda:	out    0xa1,eax
  430bdc:	cmc    
  430bdd:	cmp    dl,bh
  430bdf:	movhps QWORD PTR [edx],xmm6
  430be2:	lds    edx,FWORD PTR ss:[edi]
  430be5:	icebp  
  430be6:	aaa    
  430be7:	xor    eax,DWORD PTR [edx-0xb]
  430bea:	scas   eax,DWORD PTR es:[edi]
  430beb:	xchg   edi,eax
  430bec:	mov    ebx,0xfd08b438
  430bf1:	mov    DWORD PTR [edi-0x7f183300],esp
  430bf7:	sahf   
  430bf8:	xor    dl,ch
  430bfa:	iret   
  430bfb:	mov    cl,0x67
  430bfd:	mov    ebx,0x3591423
  430c02:	out    dx,al
  430c03:	add    BYTE PTR [ebx],cl
  430c05:	mov    ebp,DWORD PTR [ebp+0x763e1734]
  430c0b:	ret    0x3741
  430c0e:	cwde   
  430c0f:	or     al,0x75
  430c11:	or     ebp,edi
  430c13:	dec    edx
  430c14:	enter  0x2923,0xd3
  430c18:	ins    BYTE PTR es:[edi],dx
  430c19:	ins    DWORD PTR es:[edi],dx
  430c1a:	stc    
  430c1b:	xchg   bh,al
  430c1d:	cmp    bl,BYTE PTR [ecx-0x10]
  430c20:	lock out 0x38,eax
  430c23:	mov    DWORD PTR [edx+ebx*8+0x15],edx
  430c27:	pop    ebp
  430c28:	push   edx
  430c29:	out    0x7c,eax
  430c2b:	mov    edi,0xd8af874d
  430c30:	dec    esi
  430c31:	add    al,0xea
  430c33:	add    edx,ebx
  430c35:	mov    ebx,0xea2580ed
  430c3a:	sub    BYTE PTR fs:[ebp+0x75dfa5ba],cl
  430c41:	xor    esp,DWORD PTR [ecx]
  430c43:	shl    DWORD PTR [edi+0x6edfa5b9],1
  430c49:	xor    ecx,esp
  430c4b:	int    0xd1
  430c4d:	xchg   ecx,eax
  430c4e:	out    0x3,al
  430c50:	xchg   BYTE PTR [edi+0x1e458b3f],cl
  430c56:	add    al,0x3e
  430c58:	add    BYTE PTR [ebp+0x1e],al
  430c5b:	test   DWORD PTR [ebx],0x140585ff
  430c61:	jbe    0x4b91971
  430c67:	inc    edi
  430c68:	add    eax,0x2483428b
  430c6d:	jp     0x430c2e
  430c6f:	pop    es
  430c70:	xchg   ecx,eax
  430c71:	stos   DWORD PTR es:[edi],eax
  430c72:	fcomi  st,st(0)
  430c74:	xchg   esi,eax
  430c75:	cmp    DWORD PTR [edi-0x18fa9b01],esp
  430c7b:	out    dx,eax
  430c7c:	jmp    0xe4a74e60
  430c81:	or     BYTE PTR [ebx-0x404a3eda],al
  430c87:	inc    ebp
  430c88:	fstp   st(7)
  430c8a:	out    0x61,al
  430c8c:	jmp    0xec254f70
  430c91:	and    dh,0xef
  430c94:	bound  esi,QWORD PTR [ebp-0xe210742]
  430c9a:	xor    al,0x9
  430c9c:	jmp    0xdac56726
  430ca1:	test   DWORD PTR [edx-0x11],eax
  430ca4:	(bad)  
  430ca5:	lods   eax,DWORD PTR ds:[esi]
  430ca6:	test   ebx,esp
  430ca8:	das    
  430ca9:	call   0x6d42:0x926af2bc
  430cb0:	lock ins DWORD PTR es:[edi],dx
  430cb2:	jg     0x430c5b
  430cb4:	adc    al,0x72
  430cb6:	mov    esp,0xbd1f02c7
  430cbb:	jo     0x430d36
  430cbd:	add    dh,bh
  430cbf:	clc    
  430cc0:	loop   0x430d0d
  430cc2:	into   
  430cc3:	call   0xee499cb7
  430cc8:	push   es
  430cc9:	fiadd  WORD PTR [edi]
  430ccb:	or     al,0xb
  430ccd:	jmp    0xe58ac457
  430cd2:	aad    0xe8
  430cd4:	adc    eax,0xa8290f5
  430cd9:	shr    ecx,0xa0
  430cdc:	in     eax,dx
  430cdd:	add    al,al
  430cdf:	in     eax,dx
  430ce0:	scas   eax,DWORD PTR es:[edi]
  430ce1:	mov    DWORD PTR [ebx+0x6c4013da],esp
  430ce7:	push   ss
  430ce8:	hlt    
  430ce9:	jne    0x430ca4
  430ceb:	xor    ecx,DWORD PTR [ebx+0x24]
  430cee:	rol    cl,1
  430cf0:	jae    0x430d16
  430cf2:	mov    al,0x3c
  430cf4:	add    eax,DWORD PTR [edx-0xbce64]
  430cfa:	push   es
  430cfb:	imul   ebp,edi,0xffffffff
  430cfe:	lahf   
  430cff:	in     al,dx
  430d00:	scas   eax,DWORD PTR es:[edi]
  430d01:	add    DWORD PTR [edi],0x40
  430d04:	add    ecx,DWORD PTR [esi+eax*2+0x24000a3e]
  430d0b:	add    ch,BYTE PTR [esp+ebx*1]
  430d0e:	adc    al,0xaf
  430d10:	inc    DWORD PTR [ecx+ebx*8-0x567d0f56]
  430d17:	loop   0x430d97
  430d19:	push   esi
  430d1a:	imul   ecx,DWORD PTR [ecx+0x47],0xffffffcb
  430d1e:	shl    BYTE PTR [ecx],0x69
  430d21:	add    DWORD PTR [eax],0xffffffb7
  430d24:	cmp    al,BYTE PTR [ebx]
  430d26:	mov    bh,0x97
  430d28:	addr16 jae 0x430d4f
  430d2b:	aaa    
  430d2c:	mov    edx,0xd65b74d8
  430d31:	adc    DWORD PTR [ebp+0x58],esi
  430d34:	mov    esp,0xef1b0031
  430d39:	imul   edi,DWORD PTR [ebx],0x7710dd03
  430d3f:	push   esp
  430d40:	fs dec ebx
  430d42:	and    al,0x3b
  430d44:	inc    eax
  430d45:	mov    ebx,0x2e7c2cdf
  430d4a:	add    BYTE PTR [ebx],ch
  430d4c:	popa   
  430d4d:	out    dx,eax
  430d4e:	jbe    0x430cd4
  430d50:	cwde   
  430d51:	xchg   bh,bh
  430d53:	pop    ebx
  430d54:	xor    eax,0x8f868d40
  430d59:	loop   0x430d72
  430d5b:	add    ebx,DWORD PTR [edi]
  430d5d:	loop   0x430d72
  430d5f:	fiadd  WORD PTR [esi+0x6b]
  430d62:	cld    
  430d63:	loope  0x430dd4
  430d65:	lahf   
  430d66:	and    edi,DWORD PTR [esi+0x56]
  430d69:	dec    ebx
  430d6a:	je     0x430cf7
  430d6c:	popf   
  430d6d:	(bad)  
  430d6e:	and    edi,DWORD PTR [eax-0x26]
  430d71:	jo     0x430d8c
  430d73:	or     eax,0xae1be24f
  430d78:	bound  esp,QWORD PTR [ecx-0x4]
  430d7b:	mov    cl,0x3c
  430d7d:	cmp    eax,DWORD PTR [ebx+0x62]
  430d80:	cli    
  430d81:	mov    edi,DWORD PTR [ebx+0x6a]
  430d84:	aad    0xb
  430d86:	jne    0x430d88
  430d88:	imul   esi,DWORD PTR ds:0xf86a7bdf,0xc
  430d8f:	test   BYTE PTR [ecx+0xdfa3c5c],dh
  430d95:	sahf   
  430d96:	out    0xf,eax
  430d98:	or     eax,0x87891b9f
  430d9d:	pusha  
  430d9e:	ret    0xfd13
  430da1:	lods   eax,DWORD PTR ds:[esi]
  430da2:	out    0x13,eax
  430da4:	pslld  mm7,QWORD PTR [ebx+0x0]
  430da8:	mov    ecx,0x6b86c0cb
  430dad:	mov    bh,0x45
  430daf:	jbe    0x43e4da06
  430db5:	inc    ebp
  430db6:	cmp    al,0x73
  430db8:	(bad)  
  430db9:	jmp    0x372370d1
  430dbe:	cmp    al,0x2d
  430dc0:	inc    esi
  430dc1:	push   ecx
  430dc2:	and    dl,BYTE PTR [ebp+ecx*1+0x36]
  430dc6:	(bad)  
  430dc7:	dec    esi
  430dc8:	or     eax,0x82447052
  430dcd:	add    al,0x75
  430dcf:	jmp    DWORD PTR [ecx]
  430dd1:	inc    ebx
  430dd2:	into   
  430dd3:	leave  
  430dd4:	jmp    ebx
  430dd6:	jns    0x430d9f
  430dd8:	std    
  430dd9:	mov    esi,0x2f85b7a1
  430dde:	mov    eax,ds:0x598b6a1d
  430de3:	hlt    
  430de4:	loopne 0x430dc9
  430de6:	loope  0x430e03
  430de8:	jno    0x430d7e
  430dea:	mov    dh,0x31
  430dec:	add    BYTE PTR [edx],cl
  430dee:	add    esi,DWORD PTR [esi]
  430df0:	add    ah,BYTE PTR [eax+0x41]
  430df3:	test   al,0xb7
  430df5:	mov    ebp,0xbcf429da
  430dfa:	jecxz  0x430e68
  430dfc:	sub    al,0xa8
  430dfe:	inc    eax
  430dff:	aam    0x30
  430e01:	add    ah,ah
  430e03:	out    dx,al
  430e04:	pop    es
  430e05:	jno    0x430e09
  430e07:	popf   
  430e08:	xlat   BYTE PTR ds:[ebx]
  430e09:	add    BYTE PTR [eax+0x6c],al
  430e0c:	test   ch,bh
  430e0e:	inc    ecx
  430e0f:	loope  0x430e14
  430e11:	xor    al,0x92
  430e13:	jp     0x430ddc
  430e15:	jge    0x430dce
  430e17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430e18:	(bad)  
  430e19:	aas    
  430e1a:	xor    cl,dh
  430e1c:	add    eax,DWORD PTR [esi+0x61416c8c]
  430e22:	pop    edx
  430e23:	mov    ecx,0x21be5c31
  430e28:	mov    eax,0x7cf4e3a2
  430e2d:	ret    0xcb3a
  430e30:	add    al,0xc9
  430e32:	add    edx,edi
  430e34:	int3   
  430e35:	sub    ebx,eax
  430e37:	shl    DWORD PTR [eax],1
  430e39:	cmp    al,0xe3
  430e3b:	mov    gs,WORD PTR [edi]
  430e3d:	or     BYTE PTR [ebp+0x16a3d9f1],cl
  430e43:	test   eax,0x7cda4c7c
  430e48:	mov    ebp,0x6d0ae31f
  430e4d:	retf   0xfe6e
  430e50:	popa   
  430e51:	add    BYTE PTR [edi+0x5c],bh
  430e54:	or     DWORD PTR [edx+0x46],esi
  430e57:	call   0xdc852876
  430e5c:	or     al,0x62
  430e5e:	mov    DWORD PTR ds:[edi+0x32],ecx
  430e62:	lods   eax,DWORD PTR ds:[esi]
  430e63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430e64:	(bad)  
  430e65:	call   0x1921ca22
  430e6a:	pop    ebx
  430e6b:	jecxz  0x430df1
  430e6d:	and    al,0xd2
  430e6f:	nop
  430e70:	push   edi
  430e71:	bound  ebx,QWORD PTR [ebp-0x49]
  430e74:	or     ecx,ebp
  430e76:	test   DWORD PTR [edi-0x4a321a9c],ecx
  430e7c:	push   ebp
  430e7d:	xchg   ebp,eax
  430e7e:	lea    edi,[esi-0x408970bc]
  430e84:	retf   0x98fd
  430e87:	arpl   WORD PTR [ebp+0x7d],bp
  430e8a:	test   DWORD PTR [esi+0x1f],ebp
  430e8d:	push   0xe50ae6e0
  430e92:	and    eax,0xb70f78e3
  430e97:	push   esi
  430e98:	out    dx,al
  430e99:	push   ecx
  430e9a:	sbb    al,0xaf
  430e9c:	in     eax,dx
  430e9d:	push   esi
  430e9e:	repnz icebp 
  430ea0:	test   DWORD PTR [edi+0x31],edx
  430ea3:	cmp    al,BYTE PTR [ebx+0x3dc8b1ac]
  430ea9:	icebp  
  430eaa:	ds leave 
  430eac:	fadd   DWORD PTR [ecx+0x2f]
  430eaf:	mov    al,dh
  430eb1:	add    DWORD PTR cs:[edx+0x5f00f775],esp
  430eb8:	jmp    0x293c:0xdc684c63
  430ebf:	push   esi
  430ec0:	jl     0x430e83
  430ec2:	sub    eax,DWORD PTR [ecx-0xdff7cbe]
  430ec8:	xor    DWORD PTR [edx+0x205d2343],eax
  430ece:	mov    al,0x1e
  430ed0:	aas    
  430ed1:	loope  0x430e5e
  430ed3:	pop    ds
  430ed4:	adc    ebx,DWORD PTR [edi+0xa45ee8c]
  430eda:	lea    esi,[ebx-0x7097f816]
  430ee0:	fwait
  430ee1:	out    dx,eax
  430ee2:	inc    DWORD PTR [ebp+0x4a]
  430ee5:	push   edx
  430ee6:	call   0x34aba3
  430eeb:	arpl   WORD PTR [esi-0x7ae06afc],ax
  430ef1:	or     eax,DWORD PTR [eax]
  430ef3:	jb     0x430f52
  430ef5:	jecxz  0x430e7a
  430ef7:	sbb    ecx,DWORD PTR [edi]
  430ef9:	xchg   eax,eax
  430efb:	test   al,0xc9
  430efd:	ret    
  430efe:	add    BYTE PTR [edi-0x37097abb],bl
  430f04:	leave  
  430f05:	retf   
  430f06:	add    BYTE PTR [edi+0x62388945],ch
  430f0c:	hlt    
  430f0d:	xor    BYTE PTR [eax-0x6d],dl
  430f10:	dec    ebx
  430f11:	jge    0x430f60
  430f13:	dec    ebx
  430f14:	mul    DWORD PTR [ebp+0x0]
  430f17:	cli    
  430f18:	add    ebx,eax
  430f1a:	push   ecx
  430f1b:	add    bh,dl
  430f1d:	inc    edx
  430f1e:	sar    bh,0xd8
  430f21:	retf   
  430f22:	scas   eax,DWORD PTR es:[edi]
  430f23:	jne    0x430f85
  430f25:	mov    ebx,0x4613e9f3
  430f2a:	or     al,BYTE PTR [eax]
  430f2c:	in     al,dx
  430f2d:	sub    eax,0xbbe00f04
  430f32:	out    dx,eax
  430f33:	call   FWORD PTR [edi+0x30]
  430f36:	sub    ebx,DWORD PTR [ebp+0x2d1443]
  430f3c:	mov    ah,0x6
  430f3e:	or     BYTE PTR ds:0xfba1b886,ah
  430f44:	gs inc esp
  430f46:	mov    al,ds:0x14efc686
  430f4b:	js     0x430f52
  430f4d:	or     DWORD PTR [edi+eiz*8],ecx
  430f50:	cwde   
  430f51:	call   0x44b94ece
  430f56:	nop
  430f57:	or     bh,BYTE PTR [ecx]
  430f59:	sub    ebx,DWORD PTR [edi+eiz*8]
  430f5c:	outs   dx,BYTE PTR ds:[esi]
  430f5d:	lock js 0x430fa7
  430f60:	add    BYTE PTR [ecx],0x47
  430f63:	std    
  430f64:	jne    0x430f4f
  430f66:	lock mov dl,0x46
  430f69:	call   DWORD PTR [eax+ebx*2]
  430f6c:	or     eax,0x85e746aa
  430f71:	ins    BYTE PTR es:[edi],dx
  430f72:	xor    edi,ecx
  430f74:	fnstsw WORD PTR [edi]
  430f76:	mov    ecx,DWORD PTR [ecx]
  430f78:	shl    DWORD PTR [ebx-0x10b90e51],0x7
  430f7f:	je     0x430f81
  430f81:	mov    al,ch
  430f83:	js     0x430fc4
  430f85:	nop
  430f86:	(bad)  
  430f87:	fnstsw WORD PTR [esi-0x32]
  430f8a:	(bad)  
  430f8b:	adc    al,0x38
  430f8d:	mov    DWORD PTR [eax],ebx
  430f8f:	retf   
  430f90:	adc    eax,0xb2f09b9d
  430f95:	inc    esi
  430f96:	unpckhps xmm5,XMMWORD PTR [ecx+edx*4]
  430f9a:	shl    BYTE PTR [ebx+0x6e118517],0x9
  430fa1:	pop    ebp
  430fa2:	dec    edi
  430fa3:	inc    edi
  430fa4:	add    DWORD PTR [esi+0x6cffcb9f],ecx
  430faa:	out    0xf0,eax
  430fac:	mov    dl,0xc6
  430fae:	in     eax,dx
  430faf:	cmp    bh,cl
  430fb1:	pop    ebp
  430fb2:	cli    
  430fb3:	lock mov dl,0xc6
  430fb6:	std    
  430fb7:	inc    esi
  430fb8:	out    0x8a,eax
  430fba:	inc    edx
  430fbb:	sbb    al,0x6
  430fbd:	lea    edx,[edi-0x14b9005f]
  430fc3:	fiadd  WORD PTR [edx+0x56a4249]
  430fc9:	jno    0x430fcd
  430fcb:	cmp    eax,DWORD PTR [edx-0x5d]
  430fce:	fstp   QWORD PTR [ecx+eax*1]
  430fd1:	test   al,0xe0
  430fd3:	cdq    
  430fd4:	cmp    al,0xc8
  430fd6:	mov    dl,0x5d
  430fd8:	xor    ebx,eax
  430fda:	inc    edx
  430fdb:	pop    edi
  430fdc:	xor    bh,BYTE PTR [ebx-0x4ccd8ebe]
  430fe2:	inc    edx
  430fe3:	outs   dx,DWORD PTR ds:[esi]
  430fe4:	xor    al,BYTE PTR [eax]
  430fe6:	stos   DWORD PTR es:[edi],eax
  430fe7:	inc    edx
  430fe8:	pop    ebp
  430fe9:	xor    ah,BYTE PTR [ebx-0x64cd83be]
  430fef:	inc    edx
  430ff0:	mov    esi,DWORD PTR [edx]
  430ff2:	xchg   ebx,eax
  430ff3:	inc    edx
  430ff4:	lods   al,BYTE PTR ds:[esi]
  430ff5:	xor    cl,BYTE PTR [ebx-0x7ccd6dbe]
  430ffb:	inc    edx
  430ffc:	mov    al,0x32
  430ffe:	jnp    0x431042
  431000:	jl     0x431034
  431002:	jae    0x431046
  431004:	xor    BYTE PTR [edx],0x6b
  431007:	inc    edx
  431008:	mov    dh,BYTE PTR [edx]
  43100a:	arpl   WORD PTR [edx+0x72],ax
  43100d:	xor    bl,BYTE PTR [ebx+0x42]
  431010:	mov    esi,DWORD PTR [edx]
  431012:	push   ebx
  431013:	inc    edx
  431014:	xor    cl,BYTE PTR cs:[ebx+0x42]
  431018:	fs sub eax,0x80de54a1
  43101e:	jl     0x431080
  431020:	xlat   BYTE PTR ds:[ebx]
  431021:	clc    
  431022:	add    al,bh
  431024:	shr    DWORD PTR [esp+ebp*2],0xdf
  431028:	fs sub al,0xbc
  43102b:	push   edi
  43102c:	frstor [ebp+0x79250700]
  431032:	inc    esp
  431033:	and    eax,0x4285e90a
  431038:	out    dx,eax
  431039:	in     al,dx
  43103a:	test   DWORD PTR [edx+0xa],eax
  43103d:	call   0xda9bf933
  431042:	jnp    0x430fde
  431044:	pop    es
  431045:	jmp    0x1400:0xe57d4285
  43104c:	mov    edx,0xd7b52b23
  431051:	push   DWORD PTR ds:0xa7bac56e
  431057:	inc    ebp
  431058:	fbstp  TBYTE PTR [esi+edx*1]
  43105b:	aaa    
  43105c:	inc    esi
  43105d:	jge    0x4310b8
  43105f:	test   edi,esp
  431061:	add    eax,0x42cdef57
  431066:	(bad)  
  431067:	fimul  WORD PTR [eax]
  431069:	outs   dx,BYTE PTR ds:[esi]
  43106a:	scas   eax,DWORD PTR es:[edi]
  43106b:	(bad)  
  43106c:	sahf   
  43106d:	push   eax
  43106e:	stos   BYTE PTR es:[edi],al
  43106f:	and    ecx,eax
  431071:	push   es
  431072:	fs push edi
  431074:	mov    DWORD PTR [edx-0x17],ecx
  431077:	mov    ebx,0xa162559f
  43107c:	jb     0x4310d9
  43107e:	ds aas 
  431080:	xlat   BYTE PTR ds:[ebx]
  431081:	cmp    ebp,DWORD PTR [ecx-0x1a017a63]
  431087:	adc    BYTE PTR [edi+0x4285c442],bl
  43108d:	or     ch,BYTE PTR [ecx-0x441179e4]
  431093:	inc    ebp
  431094:	dec    esp
  431095:	mov    eax,0xbd1a9ca1
  43109a:	cdq    
  43109b:	dec    edi
  43109c:	push   ds
  43109d:	or     bl,ch
  43109f:	cmp    al,0xdc
  4310a1:	retf   0x421d
  4310a4:	jo     0x431086
  4310a6:	sbb    bh,BYTE PTR [edi+0x62328563]
  4310ac:	ret    0x9a
  4310af:	add    BYTE PTR [edi+0x42],ch
  4310b2:	or     bh,bh
  4310b4:	sbb    bl,dh
  4310b6:	test   ebx,eax
  4310b8:	in     al,0x1f
  4310ba:	out    0x32,eax
  4310bc:	jbe    0x4310ed
  4310be:	hlt    
  4310bf:	psubusw mm5,QWORD PTR [edx]
  4310c2:	gs add al,bh
  4310c5:	cs push ss
  4310c7:	dec    eax
  4310c8:	sub    eax,DWORD PTR [edx]
  4310ca:	lock test BYTE PTR [edi-0x6b],ch
  4310ce:	add    cl,BYTE PTR [edi]
  4310d0:	pop    ecx
  4310d1:	or     edx,0x46d92fe0
  4310d7:	cld    
  4310d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4310d9:	pop    es
  4310da:	add    dh,dh
  4310dc:	das    
  4310dd:	xor    al,0x8a
  4310df:	je     0x431077
  4310e1:	adc    BYTE PTR [edi],ch
  4310e3:	adc    DWORD PTR [edi-0x6d],ebx
  4310e6:	adc    BYTE PTR [eax+0xf2a3cde],dh
  4310ec:	stc    
  4310ed:	xchg   BYTE PTR [esi+esi*4],al
  4310f0:	rol    DWORD PTR [edx+0x469f5ad6],cl
  4310f6:	add    esi,DWORD PTR [esi+0x5adb82db]
  4310fc:	outs   dx,DWORD PTR ds:[esi]
  4310fd:	inc    esi
  4310fe:	ins    BYTE PTR es:[edi],dx
  4310ff:	ror    DWORD PTR [esi],0xdf
  431102:	imul   ecx,DWORD PTR [ebx],0xd9bcd9f7
  431108:	add    al,0x67
  43110a:	sbb    eax,0x371ebcc0
  43110f:	dec    ebp
  431110:	xchg   ebx,eax
  431111:	lods   eax,DWORD PTR ds:[esi]
  431112:	add    DWORD PTR [eax+eax*1-0x3e692621],eax
  431119:	and    al,BYTE PTR [edx+0x7d]
  43111c:	add    BYTE PTR [esi+0x41],ch
  43111f:	or     ch,bl
  431121:	jae    0x431180
  431123:	scas   eax,DWORD PTR es:[edi]
  431124:	psubd  mm0,QWORD PTR [edi+0x6686047e]
  43112b:	add    eax,0x24eb8601
  431130:	je     0x43118c
  431132:	mov    esp,0xd3dbfadb
  431137:	and    al,0x14
  431139:	mov    bh,bh
  43113b:	retf   
  43113c:	(bad)  
  43113d:	cmp    BYTE PTR [ebx],dh
  43113f:	(bad)  
  431140:	mov    edi,0x2f0f8331
  431145:	push   es
  431146:	mov    esi,0x3b5fff7
  43114b:	adc    al,0xc9
  43114d:	and    BYTE PTR [ebx+eiz*1+0xa],cl
  431151:	shr    DWORD PTR [edx],1
  431153:	lods   al,BYTE PTR ds:[esi]
  431154:	test   BYTE PTR [esi+0x57],al
  431157:	add    BYTE PTR [edi+0x4039fbb8],al
  43115d:	xchg   esp,eax
  43115e:	imul   edi,DWORD PTR [edx+0x22160702],0xffffffff
  431165:	icebp  
  431166:	jmp    0x67db:0xf773faeb
  43116d:	test   dl,ch
  43116f:	or     eax,DWORD PTR [eax]
  431171:	in     eax,dx
  431172:	test   eax,0x2031bff5
  431177:	sub    eax,0xeb7e00bd
  43117c:	fst    DWORD PTR [edx+0xd]
  43117f:	xchg   edx,eax
  431180:	jo     0x4311f4
  431182:	lods   al,BYTE PTR ss:[esi]
  431184:	or     al,0x18
  431186:	sbb    ebp,DWORD PTR [ebx]
  431188:	push   es
  431189:	test   DWORD PTR [eax+0xbe8093e],esi
  43118f:	mov    DWORD PTR [edx],esp
  431191:	cli    
  431192:	or     eax,0xc8a0135c
  431197:	pop    ebx
  431198:	and    al,0xf1
  43119a:	inc    edx
  43119b:	psubb  mm0,QWORD PTR [eax]
  43119e:	cli    
  43119f:	jecxz  0x43117d
  4311a1:	out    0x9,eax
  4311a3:	inc    ebx
  4311a4:	fwait
  4311a5:	sub    BYTE PTR [eax+ecx*8+0x28],ch
  4311a9:	retf   0xcf
  4311ac:	fiadd  WORD PTR [ebx]
  4311ae:	mov    ebx,0xc8d42dc7
  4311b3:	je     0x431145
  4311b5:	sub    bl,dl
  4311b7:	ds hlt 
  4311b9:	dec    esi
  4311ba:	dec    esp
  4311bb:	push   esi
  4311bc:	fnstcw WORD PTR [esi+0x39]
  4311bf:	fdiv   QWORD PTR [esi-0xea9c2f1]
  4311c5:	sub    bh,BYTE PTR [edx-0x7e4fefb2]
  4311cb:	outs   dx,DWORD PTR ds:[esi]
  4311cc:	mov    ah,0x1b
  4311ce:	dec    edi
  4311cf:	inc    ebx
  4311d0:	loope  0x4311d5
  4311d2:	add    ebx,edx
  4311d4:	int3   
  4311d5:	ss xchg ebp,eax
  4311d7:	pop    ebx
  4311d8:	xchg   esp,ebp
  4311da:	lods   al,BYTE PTR ds:[esi]
  4311db:	and    ch,BYTE PTR [ebp-0xd]
  4311de:	add    BYTE PTR [ebx+0x32],ch
  4311e1:	dec    esi
  4311e2:	rol    DWORD PTR [ebp+0x6f],0x31
  4311e6:	sub    DWORD PTR [edx-0x163c08ea],ebx
  4311ec:	rcr    BYTE PTR [ebp+0x39406bf8],0xa2
  4311f3:	push   cs
  4311f4:	test   DWORD PTR ds:0x28417f9,ebx
  4311fa:	mov    ds:0xa2018c00,al
  4311ff:	(bad)  
  431200:	loope  0x4311eb
  431202:	mov    eax,ds:0x7b000180
  431207:	inc    edi
  431208:	test   BYTE PTR [ecx+eax*8-0x73],bh
  43120c:	leave  
  43120d:	pop    ds
  43120e:	mov    esp,0xf0201927
  431213:	adc    eax,0x3081b7f
  431218:	test   DWORD PTR ds:0xadb39d5,edx
  43121e:	fdiv   QWORD PTR [ecx+0x31]
  431221:	dec    edx
  431222:	jmp    0xd3421129
  431227:	xchg   esi,eax
  431228:	jp     0x431292
  43122a:	jo     0x431270
  43122c:	outs   dx,DWORD PTR ds:[esi]
  43122d:	call   FWORD PTR [esi+0x62681647]
  431233:	pop    ds
  431234:	punpckhbw mm5,QWORD PTR [eax]
  431237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431238:	inc    ebx
  431239:	push   0x1a65c4f2
  43123e:	iret   
  43123f:	mov    esp,0x6a5881
  431244:	(bad)  
  431245:	pop    ds
  431246:	jge    0x4311f7
  431248:	dec    ecx
  431249:	jo     0x4312a5
  43124b:	jo     0x431289
  43124d:	jae    0x43123e
  43124f:	cld    
  431250:	adc    eax,0x2e94a31
  431255:	(bad)  
  431256:	(bad)  
  431257:	outs   dx,DWORD PTR ds:[esi]
  431258:	cmp    al,0x67
  43125a:	dec    edi
  43125b:	jb     0x431221
  43125d:	jns    0x4312b2
  43125f:	nop
  431260:	enter  0x129c,0xe9
  431264:	enter  0xdec3,0x38
  431268:	aad    0x47
  43126a:	mov    bh,0xe8
  43126c:	repnz or al,0x8c
  43126f:	ror    DWORD PTR [ebx+0x10600255],1
  431275:	rol    DWORD PTR [ecx+0x3e49e1c],cl
  43127b:	push   0xffffff9d
  43127d:	xor    BYTE PTR [ebp-0x11],dh
  431280:	cmp    al,0x76
  431282:	repnz pusha 
  431284:	lock (bad) 
  431286:	pop    esp
  431287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431288:	loopne 0x4312b8
  43128a:	out    dx,eax
  43128b:	adc    al,0x92
  43128d:	mov    edi,gs
  43128f:	sbb    al,0x9e
  431291:	xlat   BYTE PTR ds:[ebx]
  431292:	jne    0x431275
  431294:	outs   dx,BYTE PTR ds:[esi]
  431295:	push   esi
  431296:	out    dx,al
  431297:	add    BYTE PTR [eax],cl
  431299:	lods   al,BYTE PTR ds:[esi]
  43129a:	imul   eax
  43129c:	mov    ds:0x26000a3e,eax
  4312a1:	cmp    bh,0xff
  4312a4:	xchg   edx,eax
  4312a5:	push   edi
  4312a6:	jecxz  0x431229
  4312a8:	add    bl,bl
  4312aa:	ror    DWORD PTR [edx],1
  4312ac:	add    BYTE PTR [edi-0x11],bl
  4312af:	mov    eax,0xa467264
  4312b4:	push   esi
  4312b5:	adc    ch,ch
  4312b7:	dec    esi
  4312b8:	and    BYTE PTR [eax],dl
  4312ba:	lods   al,BYTE PTR ds:[esi]
  4312bb:	gs je  0x431275
  4312be:	or     al,0xa3
  4312c0:	std    
  4312c1:	js     0x431319
  4312c3:	fbstp  TBYTE PTR [ebx]
  4312c5:	push   0x8574fce6
  4312ca:	ss lds ecx,FWORD PTR es:[eax-0x593fdfd6]
  4312d2:	stos   DWORD PTR es:[edi],eax
  4312d3:	pop    edi
  4312d4:	(bad)  
  4312d5:	and    DWORD PTR [esi-0x6b],ecx
  4312d8:	inc    eax
  4312d9:	pop    ds
  4312da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4312db:	add    BYTE PTR [esi-0x1d],0xa3
  4312df:	add    BYTE PTR [esi+0x23],0x57
  4312e3:	icebp  
  4312e4:	test   eax,ebp
  4312e6:	test   al,0x5a
  4312e8:	sub    BYTE PTR [edx-0x1e],0xef
  4312ec:	jae    0x4312a1
  4312ee:	mov    dh,0xc7
  4312f0:	add    bh,ch
  4312f2:	inc    ebp
  4312f3:	loop   0x431318
  4312f5:	push   es
  4312f6:	sub    al,0xf4
  4312f8:	mov    ecx,DWORD PTR [edi]
  4312fa:	(bad)  
  4312fb:	stc    
  4312fc:	je     0x4312aa
  4312fe:	cmp    eax,0x21f8c4fa
  431303:	and    al,al
  431305:	loopne 0x4312df
  431307:	xchg   edi,eax
  431308:	dec    esi
  431309:	pop    edi
  43130a:	ds ins BYTE PTR es:[edi],dx
  43130c:	mov    DWORD PTR [eax],eax
  43130e:	popa   
  43130f:	xchg   esi,eax
  431310:	call   0x1e3f9917
  431315:	mov    BYTE PTR [ecx],dl
  431317:	cmp    ecx,DWORD PTR [ecx+0x74f81af1]
  43131d:	repnz sahf 
  43131f:	sub    eax,0x6781fa49
  431324:	inc    esi
  431325:	jae    0x4312b1
  431327:	fs lahf 
  431329:	outs   dx,DWORD PTR ds:[esi]
  43132a:	pop    esi
  43132b:	cmp    DWORD PTR [ecx-0x6],ecx
  43132e:	imul   ebx,DWORD PTR [edi+0x46],0xef647774
  431335:	xchg   DWORD PTR gs:[edi+esi*1-0x6],esp
  43133a:	jbe    0x431318
  43133c:	dec    ebx
  43133d:	pop    edx
  43133e:	test   al,0xa4
  431340:	cs mov ebp,0x4c74eb66
  431346:	push   bx
  431348:	push   esi
  431349:	add    BYTE PTR [esi-0x4d381b15],al
  43134f:	lock in al,0xc6
  431352:	call   0xbeb:0x4e9072fc
  431359:	add    BYTE PTR [ecx+0x3e363c18],al
  43135f:	push   esi
  431360:	out    dx,al
  431361:	popa   
  431362:	mov    ebp,0xd0cbcdb
  431367:	and    DWORD PTR [ebx],edx
  431369:	or     ch,bh
  43136b:	test   al,0x8d
  43136d:	ss cmc 
  43136f:	jl     0x43137d
  431371:	xchg   DWORD PTR [eax],eax
  431373:	lds    eax,FWORD PTR [ebp+eax*2+0xa]
  431377:	adc    BYTE PTR [ebx+0x64de0091],ch
  43137d:	(bad)  
  43137e:	cli    
  43137f:	leave  
  431380:	push   ebx
  431381:	mov    dl,0x1f
  431383:	push   cs
  431384:	es jmp 0x8623:0xcaa182e6
  43138c:	inc    edx
  43138d:	clc    
  43138e:	ins    DWORD PTR es:[edi],dx
  43138f:	inc    edx
  431390:	push   ds
  431391:	pop    es
  431392:	add    eax,edi
  431394:	pop    edi
  431395:	fs inc ebx
  431397:	ins    DWORD PTR es:[edi],dx
  431398:	pusha  
  431399:	push   0xffffffbe
  43139b:	jne    0x4313e6
  43139d:	xor    BYTE PTR [ebx+0x39],al
  4313a0:	jmp    0xbe6a:0xd8825c0b
  4313a7:	mov    DWORD PTR [ebp-0x3c01505f],edi
  4313ad:	out    0xfb,al
  4313af:	imul   ecx,ebp,0x8277f3ee
  4313b5:	loope  0x431366
  4313b7:	(bad)  
  4313b8:	ins    BYTE PTR es:[edi],dx
  4313b9:	icebp  
  4313ba:	fimul  DWORD PTR es:[edx+0x76]
  4313be:	mov    esi,0x523072c5
  4313c3:	sar    dh,0xe5
  4313c6:	cmp    BYTE PTR [edx+0x7fafe146],0x6c
  4313cd:	add    eax,0x5e46b227
  4313d2:	mov    esi,0x521872b5
  4313d7:	add    BYTE PTR [eax-0x65d93202],bl
  4313dd:	cs jnp 0x4313a0
  4313e0:	jns    0x4313b9
  4313e2:	jbe    0x4313f7
  4313e4:	mov    dl,0x14
  4313e6:	clc    
  4313e7:	scas   eax,DWORD PTR es:[edi]
  4313e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4313e9:	lds    ebp,FWORD PTR [eax-0x26c584f3]
  4313ef:	aam    0xc2
  4313f1:	xlat   BYTE PTR ds:[ebx]
  4313f2:	rol    BYTE PTR [edx+eiz*2-0x7a5222c6],1
  4313f9:	adc    esp,DWORD PTR [ecx+0x6f478519]
  4313ff:	mov    edi,0xd28ca71
  431404:	test   eax,0xaac10a3d
  431409:	(bad)  
  43140a:	out    dx,eax
  43140b:	scas   al,BYTE PTR es:[edi]
  43140c:	das    
  43140d:	push   esp
  43140e:	sbb    dl,BYTE PTR [ebx]
  431410:	into   
  431411:	mov    BYTE PTR [edi-0x9],0xb5
  431415:	jno    0x431406
  431417:	mov    edx,0x6a2a4e63
  43141c:	push   eax
  43141d:	sub    ebp,edi
  43141f:	cld    
  431420:	xor    DWORD PTR [edi+ebp*8-0x66],0xcd45917b
  431428:	xchg   BYTE PTR [ebp+0x2a],cl
  43142b:	push   0xffffffc6
  43142d:	das    
  43142e:	fs call 0xed258589
  431434:	xor    al,0xdc
  431436:	out    dx,eax
  431437:	out    0xea,al
  431439:	je     0x431451
  43143b:	es add cl,dl
  43143e:	iret   
  43143f:	lock inc esi
  431441:	mov    ds:0x85e90a43,eax
  431446:	mov    ebp,0xc033bddc
  43144b:	ja     0x431426
  43144d:	mov    eax,0x6327f2be
  431452:	fsubr  st(2),st
  431454:	xchg   ecx,eax
  431455:	sbb    bl,ah
  431457:	out    dx,eax
  431458:	bound  ebx,QWORD PTR [ebx-0x16]
  43145b:	jmp    0x43146c
  43145d:	imul   ebx,esp,0xffffff83
  431460:	push   es
  431461:	cmp    eax,eax
  431463:	fisubr WORD PTR [eax-0x62]
  431466:	pop    es
  431467:	or     eax,0xaa185e9
  43146c:	dec    ecx
  43146d:	(bad)  
  43146e:	(bad)  
  43146f:	cmp    al,0xac
  431471:	ins    BYTE PTR es:[edi],dx
  431472:	jle    0x431462
  431474:	jo     0x4314d6
  431476:	imul   ebp
  431478:	(bad)  
  431479:	mov    ds:0xa8ad7dca,al
  43147e:	fsub   st(7),st
  431480:	add    BYTE PTR [esi-0x38],dl
  431483:	xlat   BYTE PTR ds:[ebx]
  431484:	std    
  431485:	add    BYTE PTR [esi],bl
  431487:	sbb    BYTE PTR [ebp-0xbdfe5],0x26
  43148e:	push   0x1de0fdbf
  431493:	cmp    BYTE PTR [ebp-0xbe00d],0x89
  43149a:	pop    edx
  43149b:	xchg   esi,eax
  43149c:	clc    
  43149d:	add    bl,BYTE PTR [esi]
  43149f:	hlt    
  4314a0:	data16 add BYTE PTR [ebx],dl
  4314a3:	push   eax
  4314a4:	jecxz  0x4314a3
  4314a6:	add    BYTE PTR [edi],bl
  4314a8:	imul   ecx,DWORD PTR [edx+edx*8-0x1f0011e7],0x9b8583b7
  4314b3:	sbb    al,0xf4
  4314b5:	dec    DWORD PTR [ecx+0x4e]
  4314b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4314b9:	shl    BYTE PTR [edx-0x4c990be2],0x6c
  4314c0:	mov    bl,0xfd
  4314c2:	rcr    BYTE PTR [esi],0x93
  4314c5:	(bad)
  4314c9:	push   DWORD PTR [eax+0x5a]
  4314cc:	inc    esi
  4314cd:	add    al,0xa6
  4314cf:	push   esp
  4314d0:	out    0xfd,eax
  4314d2:	pusha  
  4314d3:	push   ds
  4314d4:	jle    0x43151b
  4314d6:	sub    edx,DWORD PTR [edi]
  4314d8:	xchg   BYTE PTR [eax],dh
  4314da:	jb     0x4314fa
  4314dc:	hlt    
  4314dd:	add    DWORD PTR [edi],ebx
  4314df:	inc    ecx
  4314e0:	or     cl,BYTE PTR [ecx-0x11da66]
  4314e6:	add    BYTE PTR [esi+0x2f],cl
  4314e9:	cld    
  4314ea:	pop    es
  4314eb:	xchg   edx,eax
  4314ec:	adc    al,BYTE PTR [eax-0x21]
  4314ef:	pop    eax
  4314f0:	xchg   ah,ah
  4314f2:	loop   0x431515
  4314f4:	hlt    
  4314f5:	(bad)  
  4314f6:	fiadd  DWORD PTR [ebp+0x0]
  4314f9:	inc    eax
  4314fa:	xchg   bl,ch
  4314fc:	or     BYTE PTR [edx+edx*8+0x38],0x59
  431501:	out    0x73,eax
  431503:	jmp    0x431510
  431505:	add    BYTE PTR [eax],al
  431507:	iret   
  431508:	test   al,0x7f
  43150a:	cli    
  43150b:	push   ebx
  43150c:	pusha  
  43150d:	cmp    bl,BYTE PTR [edi+ebx*4+0x34]
  431511:	sub    edi,edx
  431513:	test   eax,0xd2cb5a8f
  431518:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431519:	pop    edx
  43151a:	retf   
  43151b:	retf   0x1af0
  43151e:	add    dh,ah
  431520:	sub    BYTE PTR [esi],al
  431522:	jne    0x4314a9
  431524:	test   eax,0x8f6f0006
  431529:	add    DWORD PTR [eax],eax
  43152b:	xchg   BYTE PTR [eax+0x2b],ah
  43152e:	push   ecx
  43152f:	std    
  431530:	pop    eax
  431531:	iret   
  431532:	shl    dl,0xd4
  431535:	xor    cl,0xda
  431538:	fdivr  DWORD PTR [eax-0x129ea67a]
  43153e:	test   DWORD PTR [esi+0x63],esi
  431541:	out    dx,al
  431542:	dec    ecx
  431543:	(bad)  
  431544:	stc    
  431545:	retf   
  431546:	inc    eax
  431547:	or     ecx,DWORD PTR ds:0xadddf091
  43154d:	dec    eax
  43154e:	retf   
  43154f:	inc    edx
  431550:	aaa    
  431551:	pop    edx
  431552:	retf   
  431553:	cmp    cl,BYTE PTR [edi]
  431555:	pop    edx
  431556:	retf   
  431557:	push   edx
  431558:	daa    
  431559:	pop    edx
  43155a:	retf   
  43155b:	dec    edx
  43155c:	pusha  
  43155d:	sub    edx,DWORD PTR [ebp+edi*8-0x2a]
  431561:	mov    dh,0x86
  431563:	mov    bl,0xd3
  431565:	mov    ah,0x86
  431567:	(bad)  
  431568:	dec    DWORD PTR ds:0x60680071
  43156e:	(bad)  [ebx]
  431570:	add    ebx,edi
  431572:	std    
  431573:	dec    esi
  431574:	inc    DWORD PTR [ecx+0x1e]
  431577:	and    BYTE PTR [edi],dh
  431579:	jmp    0x4291a662
  43157e:	ins    BYTE PTR es:[edi],dx
  43157f:	cwde   
  431580:	int    0xc8
  431582:	mov    ebx,0xff4cd4de
  431587:	nop
  431588:	in     eax,0x1d
  43158a:	loope  0x43158f
  43158c:	xchg   BYTE PTR [edx+0x6c],al
  43158f:	rcl    BYTE PTR [ebp-0x534ae88f],1
  431595:	outs   dx,BYTE PTR ds:[esi]
  431596:	icebp  
  431597:	xchg   ch,al
  431599:	inc    ebp
  43159a:	inc    bx
  43159c:	pop    ds
  43159d:	inc    eax
  43159e:	ins    BYTE PTR es:[edi],dx
  43159f:	inc    ecx
  4315a0:	nop
  4315a1:	dec    ebp
  4315a2:	int    0xde
  4315a4:	xchg   esp,eax
  4315a5:	dec    ebx
  4315a6:	or     BYTE PTR [esi-0x4783b92e],0x81
  4315ad:	(bad)  
  4315ae:	jb     0x43153e
  4315b0:	inc    esp
  4315b1:	sbb    BYTE PTR [eax+0x3abd8c97],al
  4315b7:	xchg   edi,eax
  4315b8:	js     0x431581
  4315ba:	cmp    al,0xee
  4315bc:	dec    esp
  4315bd:	mov    bl,0x6b
  4315bf:	sti    
  4315c0:	or     ebp,DWORD PTR [edi]
  4315c2:	loop   0x43154f
  4315c4:	ins    DWORD PTR es:[edi],dx
  4315c5:	inc    ecx
  4315c6:	mov    bh,0x8b
  4315c8:	xchg   ecx,eax
  4315c9:	and    BYTE PTR [esi+0x19],0xb2
  4315cd:	shr    BYTE PTR [eax+edx*8+0x0],cl
  4315d1:	jge    0x43159a
  4315d3:	xchg   esi,eax
  4315d4:	or     esp,DWORD PTR [ecx-0x27]
  4315d7:	in     al,dx
  4315d8:	sbb    eax,0xbeaf9e94
  4315dd:	mov    esp,0xd0bffec7
  4315e2:	push   es
  4315e3:	push   cs
  4315e4:	dec    edi
  4315e5:	cmp    eax,0xcd4f3607
  4315ea:	push   es
  4315eb:	push   ds
  4315ec:	dec    edi
  4315ed:	int    0x6
  4315ef:	or     esp,DWORD PTR [edx-0x5c]
  4315f2:	outs   dx,BYTE PTR ds:[esi]
  4315f3:	cmp    ebp,0x5
  4315f6:	call   0x42c8fe05
  4315fb:	pop    ebx
  4315fc:	jb     0x431617
  4315fe:	cmp    al,0x57
  431600:	(bad)
  431605:	icebp  
  431606:	sbb    eax,DWORD PTR [ebp-0x10dfe13a]
  43160c:	aam    0xa9
  43160e:	xor    DWORD PTR [edx-0x17],ecx
  431611:	jecxz  0x4315e6
  431613:	popa   
  431614:	jmp    0xe9a4e9f4
  431619:	repz ror eax,cl
  43161c:	jmp    0xea32e9c0
  431621:	pop    ebp
  431622:	loopne 0x431614
  431624:	mov    fs,WORD PTR [edi+0x54]
  431627:	(bad)  
  431628:	fld    QWORD PTR [esi+0x6c]
  43162b:	add    DWORD PTR [ecx+edi*1+0x19625894],0x43
  431633:	test   DWORD PTR [edi+0x0],esi
  431636:	or     al,0x41
  431638:	mov    esp,esp
  43163a:	pop    ecx
  43163b:	shl    DWORD PTR [esi+0x4],cl
  43163e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43163f:	cs push ds
  431641:	inc    DWORD PTR [ebp-0x2d]
  431644:	popa   
  431645:	jmp    0xe9a4e965
  43164a:	repz shl BYTE PTR [ecx-0x17],cl
  43164e:	into   
  43164f:	rcl    DWORD PTR ds:0xe24285e9,cl
  431655:	je     0x4316bb
  431657:	fsubr  st,st(7)
  431659:	push   0xffffffce
  43165b:	das    
  43165c:	push   eax
  43165d:	mov    esi,0xb4e5bbda
  431662:	retf   0xef54
  431665:	jmp    0x43165a
  431667:	into   
  431668:	aas    
  431669:	add    al,bh
  43166b:	push   ecx
  43166c:	icebp  
  43166d:	add    eax,DWORD PTR [ecx+ecx*4+0x3edff446]
  431674:	or     al,BYTE PTR [eax]
  431676:	xchg   bx,ax
  431678:	xrelease mov DWORD PTR [edx+0x36],ebp
  43167c:	jle    0x431619
  43167e:	out    dx,eax
  43167f:	or     al,BYTE PTR ds:[eax]
  431682:	mov    ch,BYTE PTR fs:[eax]
  431685:	ret    
  431686:	ins    BYTE PTR es:[edi],dx
  431687:	or     al,0xfc
  431689:	imul   BYTE PTR [edi-0x43]
  43168c:	test   DWORD PTR [eax],0x4588d770
  431692:	xlat   BYTE PTR ds:[ebx]
  431693:	lds    edi,FWORD PTR [esi]
  431695:	adc    al,0x8f
  431697:	(bad)  
  431698:	pop    ecx
  431699:	push   ebx
  43169a:	add    BYTE PTR [edx+ecx*4],dl
  43169d:	out    0xc1,eax
  43169f:	stc    
  4316a0:	and    esp,esi
  4316a2:	and    ebx,0xffffffce
  4316a5:	loop   0x431645
  4316a7:	sahf   
  4316a8:	or     cl,BYTE PTR ds:[ebx-0x1725315e]
  4316af:	push   0x1c03c953
  4316b4:	mov    edi,0x988c56df
  4316b9:	hlt    
  4316ba:	push   ebp
  4316bb:	arpl   di,ax
  4316bd:	retf   
  4316be:	or     al,0xe2
  4316c0:	test   DWORD PTR [ecx+0xc],esi
  4316c3:	in     al,0x98
  4316c5:	dec    DWORD PTR [edx-0x174f4197]
  4316cb:	push   ebx
  4316cc:	and    al,0xf4
  4316ce:	push   DWORD PTR [eax+ecx*1-0x69f3a8e8]
  4316d5:	hlt    
  4316d6:	push   ebp
  4316d7:	push   ebx
  4316d8:	(bad)  
  4316d9:	retf   
  4316da:	or     al,0xb2
  4316dc:	test   DWORD PTR [ecx+0xc],esi
  4316df:	xchg   esp,eax
  4316e0:	cwde   
  4316e1:	dec    DWORD PTR [edx-0x4181d77a]
  4316e7:	push   ds
  4316e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4316e9:	sub    edx,edi
  4316eb:	add    DWORD PTR [ebp-0x40],edx
  4316ee:	pop    ss
  4316ef:	push   ecx
  4316f0:	mov    ecx,0xef5bfabc
  4316f5:	xchg   bl,al
  4316f7:	jp     0x43175f
  4316f9:	dec    ebx
  4316fa:	jns    0x43168e
  4316fc:	push   esp
  4316fd:	mov    cl,0xf
  4316ff:	add    BYTE PTR ds:0xdec183a1,cl
  431705:	inc    edi
  431706:	adc    dl,bh
  431708:	leave  
  431709:	xor    al,0x1b
  43170b:	jno    0x4316aa
  43170d:	fmul   st(2),st
  43170f:	(bad)  
  431711:	mov    cl,0x9b
  431713:	adc    edi,ebp
  431715:	cs out dx,al
  431717:	push   ecx
  431718:	push   ebp
  431719:	sub    eax,0x5c7a540f
  43171e:	inc    edx
  43171f:	or     eax,DWORD PTR [ebx]
  431721:	pushf  
  431722:	nop
  431723:	call   0x1cdac375
  431728:	test   DWORD PTR [esi],ebx
  43172a:	div    BYTE PTR [esi]
  43172c:	jecxz  0x4316f1
  43172e:	xchg   edi,eax
  43172f:	adc    al,0xd
  431731:	es out dx,al
  431733:	push   ecx
  431734:	aad    0x2b
  431736:	andps  xmm2,XMMWORD PTR [edx+0xb0b425c]
  43173d:	sbb    edx,DWORD PTR [eax-0x65239219]
  431743:	dec    eax
  431744:	xchg   BYTE PTR [ecx+ebp*4+0xf],al
  431748:	lea    eax,[ecx-0x69f2f068]
  43174e:	repz push ecx
  431750:	shr    DWORD PTR [edx+0x5c9a5410],1
  431756:	inc    edx
  431757:	or     eax,DWORD PTR [ebx]
  431759:	sbb    ecx,DWORD PTR [edi+0x48425de8]
  43175f:	xchg   edi,eax
  431760:	pop    esi
  431761:	mov    ebp,0x800f3b6
  431766:	or     DWORD PTR [esi-0x3302ff1e],ecx
  43176c:	dec    esi
  43176d:	dec    ebx
  43176e:	mov    ebx,0x988c138e
  431773:	aad    0x4
  431775:	(bad)  
  431776:	jbe    0x431764
  431778:	push   cs
  431779:	xor    al,0x32
  43177b:	imul   edi,eax,0xb88f4186
  431781:	cmp    BYTE PTR [edx-0x2dc5750f],0x21
  431788:	mov    DWORD PTR [ebx-0x4b253daa],edi
  43178e:	inc    eax
  43178f:	pop    esi
  431790:	xchg   esi,eax
  431791:	mov    esp,0xa08ab0d0
  431796:	fidiv  DWORD PTR [ecx]
  431798:	pop    ds
  431799:	lods   al,BYTE PTR ds:[esi]
  43179a:	shl    ah,1
  43179c:	mov    al,ds:0x92900d91
  4317a1:	(bad)  
  4317a2:	fucom  st(4)
  4317a4:	nop
  4317a5:	ds inc edx
  4317a7:	int3   
  4317a8:	mov    al,ds:0x957f0d79
  4317ad:	sahf   
  4317ae:	mov    ebx,0x77d7fc1e
  4317b3:	adc    DWORD PTR [edi],ebx
  4317b5:	fidiv  DWORD PTR [esi]
  4317b7:	fs inc edi
  4317b9:	jge    0x431780
  4317bb:	mov    eax,ds:0x500c6e97
  4317c0:	xchg   ecx,eax
  4317c1:	jl     0x43179e
  4317c3:	in     al,0x90
  4317c5:	mov    esi,0xa10c42
  4317ca:	jns    0x431787
  4317cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4317cd:	pop    ds
  4317ce:	js     0x43179a
  4317d0:	scas   eax,DWORD PTR es:[edi]
  4317d1:	repnz add BYTE PTR [esi-0x17],bh
  4317d5:	mov    ch,0xd4
  4317d7:	jno    0x4317e3
  4317d9:	ss out dx,al
  4317db:	xor    ecx,DWORD PTR [ebx-0x353a6edb]
  4317e1:	popf   
  4317e2:	arpl   ax,cx
  4317e4:	inc    ebp
  4317e5:	sbb    eax,0x62f276fc
  4317ea:	mov    edi,0x4cc2f7c8
  4317ef:	sub    dl,bh
  4317f1:	ret    0x4b92
  4317f4:	and    eax,edx
  4317f6:	dec    eax
  4317f7:	pusha  
  4317f8:	adc    eax,0x81d3d662
  4317fd:	not    BYTE PTR gs:[edi-0x11]
  431801:	out    0x7b,al
  431803:	mov    edx,0xcb8a6cae
  431808:	out    dx,eax
  431809:	(bad)  
  43180a:	lds    edi,FWORD PTR [edx-0xa202ac3]
  431810:	jnp    0x431812
  431812:	cmovg  esi,edx
  431815:	jb     0x431830
  431817:	inc    eax
  431818:	adc    DWORD PTR [esi+eiz*2],0x83af61da
  43181f:	int3   
  431820:	xor    eax,ebx
  431822:	div    DWORD PTR [esi]
  431824:	sub    DWORD PTR [esi+ebp*2],0xffffffba
  431828:	mov    fs,WORD PTR [edx+ebp*8-0x34]
  43182c:	out    dx,eax
  43182d:	mov    es,WORD PTR [eax]
  43182f:	or     eax,0x9ae97db3
  431834:	int3   
  431835:	out    dx,eax
  431836:	sub    ch,bh
  431838:	jge    0x431830
  43183a:	mov    dl,0xc2
  43183c:	pusha  
  43183d:	add    BYTE PTR [edx+0x21],ah
  431840:	retf   
  431841:	sbb    esp,0x55
  431844:	mov    edx,0x99d616d
  431849:	lock push esi
  43184b:	imul   ecx,eax,0x75
  43184e:	stc    
  43184f:	push   cs
  431850:	xchg   dh,dh
  431852:	add    BYTE PTR [esi+ebx*1+0x36ea890a],ch
  431859:	add    al,0x88
  43185b:	sbb    BYTE PTR ds:0x4aa4fff4,ch
  431861:	xchg   BYTE PTR [eax+0x60],bh
  431864:	sub    eax,0xc7ab8bf4
  431869:	out    dx,eax
  43186a:	(bad)  
  43186b:	jo     0x43189a
  43186d:	adc    BYTE PTR [ebp-0x6d],0xbb
  431871:	inc    esi
  431872:	clc    
  431873:	je     0x431881
  431875:	mov    al,bh
  431877:	xchg   esi,eax
  431878:	cmp    eax,0x7ef0fff4
  43187d:	ret    
  43187e:	int3   
  43187f:	cld    
  431880:	xchg   esp,eax
  431881:	pop    esp
  431882:	mov    ebx,DWORD PTR [ebx-0x54750026]
  431888:	ficomp DWORD PTR [ebx]
  43188a:	mov    esp,DWORD PTR [ebx+0x7d5517da]
  431890:	xchg   esi,eax
  431891:	pop    edx
  431892:	push   ecx
  431893:	add    BYTE PTR [edi-0x26],dl
  431896:	repz inc edx
  431898:	lahf   
  431899:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43189a:	hlt    
  43189b:	xor    eax,0xa429f
  4318a0:	push   cs
  4318a1:	inc    ebx
  4318a2:	stos   BYTE PTR es:[edi],al
  4318a3:	inc    ebx
  4318a4:	scas   eax,DWORD PTR es:[edi]
  4318a5:	icebp  
  4318a6:	retf   
  4318a7:	mov    DWORD PTR [ebx-0x26],ebp
  4318aa:	pop    es
  4318ab:	fs es call 0x42b318a1
  4318b2:	xchg   DWORD PTR [ebx+ecx*2-0xe],eax
  4318b6:	mov    BYTE PTR [eax+0x77],bl
  4318b9:	mov    ebx,0xf3432443
  4318be:	adc    cl,BYTE PTR [ebx-0x190c1a1]
  4318c4:	loope  0x43187b
  4318c6:	cmp    BYTE PTR [ebx-0x7cc419e5],cl
  4318cc:	xchg   BYTE PTR [ecx+0xd],dh
  4318cf:	jae    0x43185b
  4318d1:	xor    BYTE PTR [ecx+esi*2],bl
  4318d4:	push   0x371d756
  4318d9:	mov    al,0x5a
  4318db:	paddw  mm4,mm0
  4318de:	test   BYTE PTR [edi-0x6e],al
  4318e1:	pop    eax
  4318e2:	xchg   edx,eax
  4318e3:	add    eax,DWORD PTR [esi-0x7898c052]
  4318e9:	fimul  DWORD PTR [ebx]
  4318eb:	add    ch,bh
  4318ed:	cwde   
  4318ee:	add    ebp,eax
  4318f0:	mov    edi,fs
  4318f2:	or     eax,DWORD PTR [eax]
  4318f4:	aas    
  4318f5:	fisttp DWORD PTR [ebx]
  4318f7:	add    BYTE PTR [eax],al
  4318f9:	xchg   BYTE PTR [eax-0x36],dl
  4318fc:	pop    es
  4318fd:	fdivrp st(7),st
  4318ff:	pop    es
  431900:	add    BYTE PTR [esi+0x9635b40],al
  431906:	fisttp WORD PTR [ebx]
  431908:	add    BYTE PTR [esi+0x6ec388db],al
  43190e:	adc    al,0xb4
  431910:	push   esi
  431911:	lds    esp,FWORD PTR [eax-0x3e]
  431914:	and    eax,DWORD PTR [edx-0x77fc3a74]
  43191a:	fisttp DWORD PTR [ebx]
  43191c:	add    dh,ch
  43191e:	fimul  DWORD PTR [ebx]
  431920:	add    BYTE PTR [esi+0x4286d717],al
  431926:	inc    DWORD PTR [ebx]
  431928:	xchg   DWORD PTR [esi],edi
  43192a:	rcr    eax,cl
  43192c:	(bad)  
  43192d:	sahf   
  43192e:	mov    bh,0xf
  431930:	cli    
  431931:	adc    DWORD PTR [esi],0xc49e677f
  431937:	xchg   esi,eax
  431938:	or     esi,DWORD PTR [ecx-0x35]
  43193b:	sti    
  43193c:	cli    
  43193d:	imul   bh
  43193f:	and    edi,DWORD PTR [ecx]
  431941:	popa   
  431942:	pop    esp
  431943:	adc    edi,DWORD PTR [esi+0x42]
  431946:	inc    edx
  431947:	cmc    
  431948:	mov    eax,0xc058608
  43194d:	add    DWORD PTR [esi-0x3],esi
  431950:	repz push cs
  431952:	inc    eax
  431953:	cdq    
  431954:	pop    es
  431955:	xchg   BYTE PTR [edx-0x1f],al
  431958:	inc    esi
  431959:	fidivr DWORD PTR [ecx-0x7eff2063]
  43195f:	mov    ecx,0x2e961b0a
  431964:	and    BYTE PTR [ebp-0x146d328f],dl
  43196a:	sub    DWORD PTR [edi],esi
  43196c:	adc    BYTE PTR [ebx],bl
  43196e:	or     al,0xc1
  431970:	sbb    eax,0xe6006308
  431975:	add    edx,DWORD PTR [ebx+0x74]
  431978:	nop
  431979:	mov    dh,0x8
  43197b:	fdiv   DWORD PTR [ebx+eax*2+0x35b4e998]
  431982:	mov    al,0xd4
  431984:	mov    ah,0x1a
  431986:	fdivr  st(2),st
  431988:	dec    esp
  431989:	mov    ebx,0x8ea46f2f
  43198e:	jecxz  0x431948
  431990:	ror    BYTE PTR [esi+0x2be257c6],cl
  431996:	and    al,0x41
  431998:	loope  0x43199d
  43199a:	popa   
  43199b:	add    dh,ch
  43199d:	ds pop eax
  43199f:	sti    
  4319a0:	hlt    
  4319a1:	xor    eax,0x21a0cd70
  4319a6:	xor    bh,BYTE PTR [ecx+0x7537b695]
  4319ac:	sbb    eax,DWORD PTR [eax+eiz*1]
  4319af:	inc    edx
  4319b0:	or     DWORD PTR [edi+0x7d],ecx
  4319b3:	and    ecx,0x138661b4
  4319b9:	add    al,0x86
  4319bb:	imul   ecx,DWORD PTR [edi],0xffffffbf
  4319be:	retf   0xaff
  4319c1:	sbb    al,0x0
  4319c3:	adc    DWORD PTR [eax+0x26],ebx
  4319c6:	loope  0x4319db
  4319c8:	jae    0x4319b9
  4319ca:	fnsave [ecx]
  4319cc:	xor    dl,ah
  4319ce:	xchg   ebp,eax
  4319cf:	outs   dx,DWORD PTR ds:[esi]
  4319d0:	enter  0x6aef,0x81
  4319d4:	aaa    
  4319d5:	dec    ebp
  4319d6:	sub    ecx,DWORD PTR [ebp-0x36ca41be]
  4319dc:	idiv   DWORD PTR [esi-0x41083ed3]
  4319e2:	bound  edi,QWORD PTR [esi+esi*2-0x7d]
  4319e6:	cmp    eax,0x7212d800
  4319eb:	inc    esi
  4319ec:	inc    esp
  4319ed:	pop    ebx
  4319ee:	jb     0x4319be
  4319f0:	das    
  4319f1:	pop    eax
  4319f2:	bound  ebx,QWORD PTR [eax]
  4319f4:	inc    esp
  4319f5:	cmp    ebx,ecx
  4319f7:	xor    al,0xc5
  4319f9:	or     BYTE PTR [edi],ch
  4319fb:	(bad)  
  4319fc:	enter  0x260a,0xc6
  431a00:	iret   
  431a01:	or     ecx,ebp
  431a03:	test   DWORD PTR [edx+0x7d],eax
  431a06:	jb     0x4319dd
  431a08:	dec    esp
  431a09:	repnz out 0xf6,eax
  431a0c:	inc    esp
  431a0d:	sub    DWORD PTR [edi],0xffffff86
  431a10:	retf   
  431a11:	rcr    BYTE PTR [edx],0x8e
  431a14:	or     ch,bh
  431a16:	xor    al,0x8e
  431a18:	ret    
  431a19:	inc    eax
  431a1a:	cmc    
  431a1b:	add    dh,BYTE PTR [edx+0x2]
  431a1e:	jmp    0x767e:0xf2fe1c3e
  431a25:	(bad)  
  431a26:	popa   
  431a27:	add    cl,bl
  431a29:	cmp    edi,eax
  431a2b:	sub    DWORD PTR [esi-0x6f9c00a0],eax
  431a31:	inc    edx
  431a32:	or     ch,cl
  431a34:	or     BYTE PTR [esi-0x1e],bh
  431a37:	pusha  
  431a38:	dec    ebx
  431a39:	mov    DWORD PTR [ebx-0x7ec55c00],0x46bd1745
  431a43:	sbb    dh,ah
  431a45:	mov    esp,ebx
  431a47:	adc    esp,0x28
  431a4a:	jnp    0x431aac
  431a4c:	mov    ah,0x40
  431a4e:	jge    0x4319eb
  431a50:	pop    edi
  431a51:	aas    
  431a52:	or     al,BYTE PTR [eax]
  431a54:	stos   BYTE PTR es:[edi],al
  431a55:	rcr    BYTE PTR [eax-0x75],cl
  431a58:	sbb    edx,DWORD PTR [ecx+0x1b]
  431a5b:	(bad)  
  431a5c:	jecxz  0x431aae
  431a5e:	dec    DWORD PTR [eax+0x882ee2]
  431a64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431a65:	mov    esi,edi
  431a67:	test   DWORD PTR [esi-0x4e],esp
  431a6a:	sbb    ecx,DWORD PTR [ebx-0xf8e1b0]
  431a70:	push   0x9845c929
  431a75:	aas    
  431a76:	test   eax,eax
  431a78:	or     esi,ebx
  431a7a:	je     0x431abf
  431a7c:	je     0x431a09
  431a7e:	test   DWORD PTR [ebx-0x1083a59],0x7d6f7962
  431a88:	call   0x6390cb
  431a8d:	push   esp
  431a8e:	inc    ecx
  431a8f:	outs   dx,DWORD PTR ds:[esi]
  431a90:	clc    
  431a91:	test   eax,0x698b08ba
  431a96:	inc    edx
  431a97:	out    dx,eax
  431a98:	into   
  431a99:	pushf  
  431a9a:	cmp    dh,BYTE PTR [edx]
  431a9c:	call   DWORD PTR [edx-0x64b178c6]
  431aa2:	mov    ebp,0x79ac0859
  431aa7:	and    BYTE PTR [edx*4+0x140c5629],cl
  431aae:	mov    ebx,?
  431ab0:	pop    edi
  431ab1:	dec    ecx
  431ab2:	lea    ecx,[eax+0x450e86e5]
  431ab8:	ret    0xafc3
  431abb:	or     eax,DWORD PTR [eax]
  431abd:	xchg   bl,bl
  431abf:	push   ds
  431ac0:	int3   
  431ac1:	std    
  431ac2:	push   ds
  431ac3:	test   BYTE PTR [eax+0x6c953c9e],0x66
  431aca:	iret   
  431acb:	in     al,0x7e
  431acd:	xchg   ebx,eax
  431ace:	xchg   edi,eax
  431acf:	dec    ecx
  431ad0:	ds xchg bl,bl
  431ad3:	jg     0x431af4
  431ad5:	scas   al,BYTE PTR es:[edi]
  431ad6:	xchg   edi,eax
  431ad7:	dec    ecx
  431ad8:	xchg   BYTE PTR ds:[ebx-0x23ce02d2],al
  431adf:	xchg   bl,al
  431ae1:	sbb    BYTE PTR [esi+0x4b],0x73
  431ae5:	xchg   ecx,eax
  431ae6:	fs enter 0xac0f,0xda
  431aeb:	mov    esp,0x49977bfa
  431af0:	add    BYTE PTR ds:[esi+0xd072f5c],al
  431af7:	lahf   
  431af8:	(bad)  
  431afa:	sub    DWORD PTR [edx],edi
  431afc:	adc    bh,dl
  431afe:	std    
  431aff:	xchg   esi,eax
  431b00:	fistp  QWORD PTR [eax]
  431b02:	dec    esi
  431b03:	xlat   BYTE PTR ds:[ebx]
  431b04:	jg     0x431b16
  431b06:	or     eax,0x314e03a7
  431b0b:	fs xchg BYTE PTR ss:[esi-0x3606a40d],bh
  431b13:	call   0x64dd5f9b
  431b18:	shl    edi,0xf
  431b1b:	and    al,0x2
  431b1d:	xchg   DWORD PTR [eax+0x32f90e5c],ecx
  431b23:	aam    0x84
  431b25:	dec    ecx
  431b26:	mov    bl,ah
  431b28:	dec    eax
  431b29:	cs mov dl,bl
  431b2c:	sbb    BYTE PTR [edx+eax*4+0x42],dl
  431b30:	jl     0x431af8
  431b32:	jge    0x431af1
  431b34:	aaa    
  431b35:	or     al,0x81
  431b37:	clc    
  431b38:	aam    0x7
  431b3a:	mov    al,0xc9
  431b3c:	or     BYTE PTR ss:[ecx],cl
  431b3f:	jg     0x431bb2
  431b41:	mov    eax,ecx
  431b43:	cmp    bh,BYTE PTR [edi+ebp*1+0x69]
  431b47:	jl     0x431bc0
  431b49:	pop    ss
  431b4a:	pop    esp
  431b4b:	mov    WORD PTR [edi+0x17],ds
  431b4e:	dec    esp
  431b4f:	leave  
  431b50:	sub    dh,BYTE PTR [ebx-0x509ac683]
  431b56:	add    BYTE PTR [ecx+ecx*8],bh
  431b59:	pop    eax
  431b5a:	mov    ecx,edx
  431b5c:	cmp    dh,BYTE PTR [edx+0x59fd08ae]
  431b62:	mov    ds:0x2d30c92f,eax
  431b67:	addr16 leave 
  431b69:	cmp    BYTE PTR [edi],dl
  431b6b:	sbb    al,0x1f
  431b6d:	icebp  
  431b6e:	in     eax,dx
  431b6f:	push   ecx
  431b70:	inc    edx
  431b71:	sub    cl,ah
  431b73:	push   ebp
  431b74:	xor    BYTE PTR [ecx-0x4ae102fd],ah
  431b7a:	in     eax,dx
  431b7b:	mov    ecx,0x5a176c42
  431b80:	mov    ebp,0x19dd8515
  431b85:	in     al,0x3
  431b87:	xchg   BYTE PTR [ebp+0x42986d21],ah
  431b8d:	push   0x9
  431b8f:	adc    bl,BYTE PTR [ebx+0x2eff0424]
  431b95:	test   eax,0x6a42806c
  431b9a:	clc    
  431b9b:	cmc    
  431b9c:	call   0x6c71:0xeff0424
  431ba3:	push   0xedd87a42
  431ba8:	call   0xd47e:0x64822a0a
  431baf:	dec    ebp
  431bb0:	call   0xacfd:0xbcebe94b
  431bb7:	repnz or BYTE PTR [edx],cl
  431bba:	str    WORD PTR [esi]
  431bbd:	daa    
  431bbe:	mov    ds:0x65c84440,al
  431bc3:	jne    0x431b4b
  431bc5:	sahf   
  431bc6:	mov    eax,ds:0x7e648a2a
  431bcb:	int3   
  431bcc:	in     eax,0x9a
  431bce:	dec    ebx
  431bcf:	jmp    0x8560d7c7
  431bd4:	fimul  DWORD PTR [eax]
  431bd6:	or     bh,BYTE PTR [ebp+0x8]
  431bd9:	aas    
  431bda:	fiadd  DWORD PTR [eax-0x5b7b37bc]
  431be0:	test   DWORD PTR [edi-0x37bb6f3a],esp
  431be6:	test   BYTE PTR [ecx+eiz*1+0x4480c2a9],ah
  431bed:	enter  0xa47e,0x7d
  431bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431bf2:	(bad)  
  431bf3:	push   eax
  431bf4:	inc    esp
  431bf5:	enter  0x6484,0xa5
  431bf9:	retf   
  431bfa:	out    dx,eax
  431bfb:	push   ss
  431bfc:	mov    eax,0xc4401a3e
  431c01:	(bad)  
  431c02:	or     ch,cl
  431c04:	add    BYTE PTR [edx-0x57],0x31
  431c08:	jb     0x431c12
  431c0a:	or     cl,BYTE PTR [edx+0x41]
  431c0d:	lahf   
  431c0e:	dec    ebx
  431c0f:	jmp    0x920d5aa4
  431c14:	mov    edi,0x285e502
  431c1a:	enter  0x79ec,0x9f
  431c1e:	dec    ebx
  431c1f:	jmp    0xa85a024
  431c24:	add    BYTE PTR [edi+0x6c9fef64],bl
  431c2a:	add    DWORD PTR ds:[ebp-0xbd509],0x43aa42fe
  431c35:	lahf   
  431c36:	mov    esp,0x2d23dc86
  431c3b:	hlt    
  431c3c:	push   0x6f
  431c3e:	cs push ss
  431c40:	cld    
  431c41:	outs   dx,BYTE PTR ds:[esi]
  431c42:	add    esi,eax
  431c44:	addr16 mov ebx,0xe0002fcb
  431c4a:	xlat   BYTE PTR ds:[ebx]
  431c4b:	out    dx,eax
  431c4c:	adc    DWORD PTR [edi+0x6b09623e],ebp
  431c52:	inc    ebx
  431c53:	retf   0x4aff
  431c56:	(bad)  
  431c57:	std    
  431c58:	aas    
  431c59:	das    
  431c5a:	xchg   ebx,eax
  431c5b:	hlt    
  431c5c:	adc    eax,0x2fd45f
  431c61:	add    bx,0x73cc
  431c66:	jp     0x431c2b
  431c68:	int3   
  431c69:	jae    0x431ce5
  431c6b:	ret    
  431c6c:	int3   
  431c6d:	stc    
  431c6e:	mov    ecx,0x3a3b244b
  431c73:	retf   0x3775
  431c76:	mov    edx,0xb9ff2443
  431c7b:	dec    ebx
  431c7c:	and    al,0xe3
  431c7e:	icebp  
  431c7f:	mov    ebp,0xd7b98ef7
  431c84:	mov    eax,DWORD PTR [eax]
  431c86:	sbb    esp,edi
  431c88:	pop    es
  431c89:	neg    esi
  431c8b:	mov    ecx,0x35ac8bdf
  431c90:	imul   esp,DWORD PTR [edi+ebp*4],0xffffffb9
  431c94:	(bad)  
  431c95:	mov    ebx,DWORD PTR [ecx]
  431c97:	imul   esp,DWORD PTR ss:[edi+edi*4],0x41
  431c9c:	fldpi  
  431c9e:	xchg   BYTE PTR [eax],bl
  431ca0:	add    edi,0xfea14fd
  431ca6:	std    
  431ca7:	and    al,0xea
  431ca9:	or     ecx,DWORD PTR ds:0xb707ea1d
  431caf:	add    DWORD PTR ds:0x3d02b7d6,edi
  431cb5:	xlat   BYTE PTR ds:[ebx]
  431cb6:	jge    0x431c4a
  431cb8:	xor    bl,0x79
  431cbb:	test   eax,0x3871ef82
  431cc0:	jmp    0xa243:0x82a3fd13
  431cc7:	jmp    0x431cc7
  431cc9:	loopne 0x431c50
  431ccb:	stos   BYTE PTR es:[edi],al
  431ccc:	cdq    
  431ccd:	or     DWORD PTR [ebp-0x26f415d9],ebx
  431cd3:	jecxz  0x431c6e
  431cd5:	or     cl,BYTE PTR [ebp-0x47f83069]
  431cdb:	rol    ch,cl
  431cdd:	es ret 0xf637
  431ce1:	push   ss
  431ce2:	fidivr DWORD PTR [edi]
  431ce4:	cli    
  431ce5:	cs dec ebp
  431ce7:	xor    edx,ecx
  431ce9:	and    eax,DWORD PTR [eax]
  431ceb:	mov    fs,eax
  431ced:	lahf   
  431cee:	and    ecx,DWORD PTR [edx+0x2ef23104]
  431cf4:	pop    ecx
  431cf5:	xor    edi,edi
  431cf7:	cld    
  431cf8:	adc    DWORD PTR [edx-0x7d7cf232],eax
  431cfe:	(bad)  
  431cff:	or     eax,0x96bdb516
  431d04:	fild   DWORD PTR [edi-0x35]
  431d07:	mov    edx,0x76b6bca8
  431d0c:	jnp    0x431cd8
  431d0e:	(bad)  
  431d0f:	in     al,dx
  431d10:	loopne 0x431ccc
  431d12:	push   eax
  431d13:	or     eax,0x863e6bec
  431d18:	inc    edx
  431d19:	jl     0x431cdb
  431d1b:	gs ss jp 0x431cde
  431d1f:	cmp    DWORD PTR [ebx+0x59ff0824],0x7256b8cd
  431d29:	sub    DWORD PTR [ebp+0x462c6b42],ebp
  431d2f:	test   DWORD PTR [edx-0x48],eax
  431d32:	xor    al,0xd0
  431d34:	test   BYTE PTR [ebp-0x4a0942c0],0x40
  431d3b:	dec    ebp
  431d3c:	neg    BYTE PTR [ebp+0x6cf64d40]
  431d42:	adc    ebx,edx
  431d44:	mov    ecx,0x3aba7f6d
  431d49:	dec    ecx
  431d4a:	sar    DWORD PTR [ebx+0xa9e142],0x9e
  431d51:	inc    ebx
  431d52:	in     eax,dx
  431d53:	pop    es
  431d54:	mov    eax,ds:0x46ff02
  431d59:	and    DWORD PTR ds:0x29c34707,0xffffffb4
  431d60:	ret    0xe142
  431d63:	cwde   
  431d64:	sbb    al,0x11
  431d66:	xor    ecx,DWORD PTR [ebp-0x80]
  431d69:	inc    ebx
  431d6a:	loope  0x431d6f
  431d6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431d6d:	or     edi,DWORD PTR [ecx+0x23ae8ceb]
  431d73:	jg     0x431d48
  431d75:	data16 and al,0x40
  431d78:	cmp    eax,0xcd4035f6
  431d7d:	cmc    
  431d7e:	sbb    eax,0x6cf5cd40
  431d83:	adc    ebx,DWORD PTR [edx-0x47]
  431d86:	in     eax,dx
  431d87:	jle    0x431dcb
  431d89:	cmp    bh,BYTE PTR [esp+edi*4-0x63]
  431d8d:	inc    ecx
  431d8e:	cmp    DWORD PTR [ebx],eax
  431d90:	adc    eax,0x18dd0a83
  431d95:	jae    0x431d96
  431d97:	xor    eax,0xbb3b42f3
  431d9c:	cld    
  431d9d:	mov    ch,0x46
  431d9f:	icebp  
  431da0:	lods   eax,DWORD PTR ds:[esi]
  431da1:	mov    ebp,0xbba15ff8
  431da6:	ins    DWORD PTR es:[edi],dx
  431da7:	(bad)  [eax]
  431da9:	jge    0x431da9
  431dab:	add    DWORD PTR [ebx-0x128dfea9],edx
  431db1:	cmp    al,0xb
  431db3:	nop
  431db4:	add    al,al
  431db6:	retf   
  431db7:	jl     0x431d9c
  431db9:	ret    
  431dba:	inc    ebx
  431dbb:	retf   0x50d1
  431dbe:	bnd jl 0x431d52
  431dc1:	push   eax
  431dc2:	test   BYTE PTR [edi+0x37],cl
  431dc5:	and    DWORD PTR [edi-0x35],esp
  431dc8:	add    ebp,DWORD PTR [edx+0x5c]
  431dcb:	shl    BYTE PTR [esi],cl
  431dcd:	dec    ecx
  431dce:	(bad)  
  431dcf:	out    0x45,eax
  431dd1:	test   DWORD PTR [edx+0xa],eax
  431dd4:	push   0x1e
  431dd6:	enter  0x2f0a,0x85
  431dda:	inc    edx
  431ddb:	dec    edx
  431ddc:	jmp    0x5eacf9e0
  431de1:	xchg   esp,eax
  431de2:	enter  0x6c51,0xc5
  431de6:	dec    edi
  431de7:	sub    eax,0x233c3e62
  431dec:	das    
  431ded:	aad    0x71
  431def:	loop   0x431e4a
  431df1:	je     0x431dbb
  431df3:	out    dx,eax
  431df4:	nop
  431df5:	loop   0x431db5
  431df7:	retf   0x28b5
  431dfa:	mov    ebp,0xdb4acd4a
  431dff:	movhps xmm6,QWORD PTR [ebp+0x3ce8ea44]
  431e06:	jle    0x431df6
  431e08:	sete   al
  431e0b:	out    dx,eax
  431e0c:	add    BYTE PTR [edi+ebx*8-0x78],dh
  431e10:	inc    ebp
  431e11:	mov    eax,DWORD PTR [edi+ebp*8-0x76]
  431e15:	fucomip st,st(4)
  431e17:	ret    0x3d
  431e1a:	loop   0x431e5b
  431e1c:	or     al,al
  431e1e:	mov    eax,0xee8bca4b
  431e23:	jge    0x431dad
  431e25:	gs (bad) 
  431e27:	jns    0x431e6f
  431e29:	cld    
  431e2a:	mov    ecx,0x9cfff431
  431e2f:	jg     0x431e18
  431e31:	mov    ch,BYTE PTR [edi-0x273cf5c1]
  431e37:	fld    TBYTE PTR [ebx+0x16]
  431e3a:	pop    edi
  431e3b:	ds mov esi,0xc3823bcc
  431e41:	int3   
  431e42:	sub    eax,DWORD PTR [edx-0x51b333d]
  431e48:	sub    ecx,DWORD PTR [eax]
  431e4a:	in     al,0x2
  431e4c:	sub    al,0x10
  431e4e:	push   esp
  431e4f:	pop    es
  431e50:	mov    BYTE PTR [ebx+eax*2-0x3d],cl
  431e54:	jbe    0x431e5f
  431e56:	in     al,0xfa
  431e58:	sub    eax,DWORD PTR [eax+edx*8]
  431e5b:	pop    ds
  431e5c:	lods   eax,DWORD PTR ds:[esi]
  431e5d:	adc    BYTE PTR [edi],ch
  431e5f:	mov    ?,esp
  431e61:	loope  0x431e17
  431e63:	push   ss
  431e64:	mov    BYTE PTR [ebx+eax*4-0x3a],al
  431e68:	cld    
  431e69:	fs or  edx,0xfffffff0
  431e6d:	xlat   BYTE PTR ds:[ebx]
  431e6e:	xchg   esp,eax
  431e6f:	cli    
  431e70:	sub    ecx,DWORD PTR [eax]
  431e72:	push   eax
  431e73:	pop    ds
  431e74:	lock shl ah,cl
  431e77:	jl     0x431e78
  431e79:	inc    DWORD PTR [edi+0x4]
  431e7c:	or     al,BYTE PTR [ebx+0x0]
  431e7f:	out    dx,eax
  431e80:	call   0xa:0x3eef35f4
  431e87:	xchg   BYTE PTR [eax-0x3e],ah
  431e8a:	and    edx,DWORD PTR [esi+0x7623aa62]
  431e90:	dec    esi
  431e91:	stos   BYTE PTR es:[edi],al
  431e92:	and    esi,DWORD PTR [esi-0x10]
  431e95:	sub    ecx,DWORD PTR [esi+0x38]
  431e98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431e99:	ins    BYTE PTR es:[edi],dx
  431e9a:	(bad)  
  431e9b:	jmp    0x4b742a37
  431ea0:	fst    st(6)
  431ea2:	les    edx,FWORD PTR [esi+0x52]
  431ea5:	test   al,0xe7
  431ea7:	mov    cl,0x65
  431ea9:	inc    BYTE PTR [ebp+0x4442f543]
  431eaf:	mov    ds:0x99fa1afa,al
  431eb4:	push   ecx
  431eb5:	enter  0x3f7,0x16
  431eb9:	push   ss
  431eba:	arpl   bp,sp
  431ebc:	fmul   DWORD PTR [ebx]
  431ebe:	add    BYTE PTR [esi+0x764c6eec],al
  431ec4:	dec    eax
  431ec5:	jae    0x431ed3
  431ec7:	xchg   BYTE PTR [ebx+0x70cf000b],ch
  431ecd:	mov    ecx,0x2834bd59
  431ed2:	pop    esp
  431ed3:	mov    bh,0xec
  431ed5:	outs   dx,BYTE PTR ds:[esi]
  431ed6:	cli    
  431ed7:	mov    ebx,0xd3fa0f24
  431edc:	xchg   edi,eax
  431edd:	sbb    dh,BYTE PTR [esi+edx*4+0x28]
  431ee1:	cwde   
  431ee2:	or     eax,DWORD PTR [eax]
  431ee4:	cmp    DWORD PTR [edi+0x13c667f3],edx
  431eea:	(bad)  
  431eed:	stos   DWORD PTR es:[edi],eax
  431eee:	imul   edi,DWORD PTR [esi],0xffffff86
  431ef1:	adc    eax,DWORD PTR [esi]
  431ef3:	neg    DWORD PTR [ecx]
  431ef5:	add    DWORD PTR [esi+0x46d66ec3],0xf1ff63fa
  431eff:	aas    
  431f00:	xchg   BYTE PTR [edx+0x35],al
  431f03:	aas    
  431f04:	int    0x8e
  431f06:	sbb    eax,0xaf8ebd3f
  431f0b:	jl     0x431ee6
  431f0d:	int    0xa7
  431f0f:	out    dx,eax
  431f10:	or     BYTE PTR [ecx],dl
  431f12:	sar    DWORD PTR [eax-0x332ac500],1
  431f18:	into   
  431f19:	cmp    bl,ah
  431f1b:	jl     0x431eeb
  431f1d:	(bad)  
  431f1e:	loopne 0x431eb6
  431f20:	jp     0x431eef
  431f22:	and    esp,esi
  431f24:	add    BYTE PTR [ecx],dl
  431f26:	fnsave [esi-0x3e36ecbf]
  431f2c:	lods   eax,DWORD PTR ds:[esi]
  431f2d:	rol    eax,0x7b
  431f30:	inc    edi
  431f31:	pop    esi
  431f32:	loop   0x431ec1
  431f34:	lea    eax,[ebx+0x49]
  431f37:	hlt    
  431f38:	xchg   BYTE PTR [eax-0x33],al
  431f3b:	fmul   QWORD PTR [edi]
  431f3d:	push   edx
  431f3e:	ins    BYTE PTR es:[edi],dx
  431f3f:	(bad)  
  431f40:	popf   
  431f41:	imul   ebp,DWORD PTR [ecx],0xfffffff8
  431f44:	add    BYTE PTR [eax],bh
  431f46:	in     eax,dx
  431f47:	add    BYTE PTR [eax],0x45
  431f4a:	dec    esi
  431f4b:	mov    ss,WORD PTR fs:[ebp+0x9061642]
  431f52:	sbb    cl,bh
  431f54:	jl     0x431f0d
  431f56:	push   edx
  431f57:	adc    BYTE PTR [esi+0x7b0e8e10],ch
  431f5d:	pop    ebp
  431f5e:	sbb    BYTE PTR [ecx+ebx*4-0x77],ch
  431f62:	(bad)  
  431f63:	dec    edi
  431f64:	inc    DWORD PTR ds:0x8603e184
  431f6a:	int    0x9f
  431f6c:	out    dx,eax
  431f6d:	add    al,BYTE PTR [edx+0x41d487d0]
  431f73:	loope  0x431f78
  431f75:	mov    ch,0xcd
  431f77:	leave  
  431f78:	pop    es
  431f79:	xchg   ecx,eax
  431f7a:	ror    DWORD PTR [edx],0x3
  431f7d:	out    dx,al
  431f7e:	ins    BYTE PTR es:[edi],dx
  431f7f:	mov    ebp,DWORD PTR [esi]
  431f81:	iret   
  431f82:	xor    al,0x27
  431f84:	push   0xffffff89
  431f86:	or     dh,BYTE PTR [esi-0x35]
  431f89:	add    al,0xbc
  431f8b:	push   ebx
  431f8c:	popf   
  431f8d:	idiv   BYTE PTR [edi]
  431f8f:	out    dx,eax
  431f90:	xchg   cl,bh
  431f92:	pop    eax
  431f93:	mov    eax,DWORD PTR [esi]
  431f95:	repz xor al,0x1b
  431f98:	push   0xe90cd781
  431f9d:	test   DWORD PTR [esi],esi
  431f9f:	add    ecx,DWORD PTR [esi-0x191044b3]
  431fa5:	mov    BYTE PTR [ebx],bl
  431fa7:	dec    ebp
  431fa8:	stos   DWORD PTR es:[edi],eax
  431fa9:	mov    DWORD PTR [edx-0x7d],eax
  431fac:	sub    DWORD PTR [eax],eax
  431fae:	stos   BYTE PTR es:[edi],al
  431faf:	vandnps xmm0,xmm6,XMMWORD PTR [edi-0x2df2bf37]
  431fb7:	(bad)  
  431fb8:	dec    eax
  431fb9:	adc    edx,ebx
  431fbb:	mov    ebx,0x49416ad9
  431fc0:	adc    DWORD PTR [edi],0x76
  431fc3:	leave  
  431fc4:	dec    esp
  431fc5:	sub    eax,0xec77000f
  431fca:	in     al,dx
  431fcb:	or     DWORD PTR [esi],esp
  431fcd:	cmp    ebp,ebp
  431fcf:	add    DWORD PTR [edx],esp
  431fd1:	cmp    DWORD PTR [ecx+0x5dad8b92],edx
  431fd7:	leave  
  431fd8:	pop    eax
  431fd9:	(bad)  
  431fdb:	jge    0x432027
  431fdd:	ins    BYTE PTR es:[edi],dx
  431fde:	lds    esi,FWORD PTR [ebx]
  431fe0:	std    
  431fe1:	popa   
  431fe2:	add    esp,DWORD PTR [edx+ebx*2+0x72]
  431fe6:	inc    ebx
  431fe7:	push   0x407a5e5a
  431fec:	(bad)  
  431fed:	loope  0x431f9b
  431fef:	adc    DWORD PTR [esi],ecx
  431ff1:	bound  eax,QWORD PTR [edi+0x78]
  431ff4:	test   DWORD PTR [eax],eax
  431ff6:	outs   dx,DWORD PTR ds:[esi]
  431ff7:	xlat   BYTE PTR ds:[ebx]
  431ff8:	dec    BYTE PTR [edx-0x74c0581f]
  431ffe:	fstp   DWORD PTR [ebx-0x3b6100c1]
  432004:	retf   
  432005:	or     BYTE PTR [ebp+esi*8+0x13],dh
  432009:	mov    ebp,DWORD PTR [ecx]
  43200b:	pushf  
  43200c:	mov    BYTE PTR [esi-0x45],cl
  43200f:	icebp  
  432010:	aas    
  432011:	inc    DWORD PTR [eax]
  432013:	sahf   
  432014:	(bad)  
  432015:	retf   
  432016:	or     BYTE PTR [esp+eax*1],bl
  432019:	jo     0x43201a
  43201b:	dec    esi
  43201c:	rcl    BYTE PTR [esi+0x4908f0c0],0x1c
  432023:	scas   eax,DWORD PTR es:[edi]
  432024:	inc    ebx
  432025:	or     al,BYTE PTR [eax]
  432027:	inc    ecx
  432028:	(bad)  
  432029:	jo     0x43200b
  43202b:	shr    bh,cl
  43202d:	lods   eax,DWORD PTR ds:[esi]
  43202e:	add    al,0x9f
  432030:	or     esi,ecx
  432032:	call   eax
  432034:	dec    ebp
  432035:	push   ecx
  432036:	pop    ebp
  432037:	in     eax,dx
  432038:	dec    edx
  432039:	or     cl,ah
  43203b:	jecxz  0x43203f
  43203d:	ret    
  43203e:	int3   
  43203f:	push   0x39
  432041:	jecxz  0x431fce
  432043:	test   eax,0x278b5b4a
  432048:	mov    edx,esi
  43204a:	jbe    0x4320a9
  43204c:	cmp    dh,dl
  43204e:	test   DWORD PTR [eax],edx
  432050:	xlat   BYTE PTR ds:[ebx]
  432051:	push   es
  432052:	xor    ebp,DWORD PTR [edi]
  432054:	in     eax,dx
  432055:	dec    esi
  432056:	ret    
  432057:	xor    al,0x6
  432059:	add    BYTE PTR [esi+0x6b],0x3a
  43205d:	dec    ecx
  43205e:	sbb    al,0xe4
  432060:	xchg   BYTE PTR [edi],dl
  432062:	xor    DWORD PTR [edi-0x4bf08abd],0xffffffc0
  432069:	mov    BYTE PTR [esi-0x71],dl
  43206c:	cmc    
  43206d:	pop    edx
  43206e:	push   edx
  43206f:	xchg   BYTE PTR [ecx],al
  432071:	mov    eax,ds:0x12a98620
  432076:	or     eax,0xc010500
  43207b:	jne    0x4320f3
  43207d:	xor    al,0x8
  43207f:	xchg   DWORD PTR [eax+0x574fb6b9],edi
  432085:	add    DWORD PTR [ebp+0x74a98621],edx
  43208b:	inc    ecx
  43208c:	mov    dh,0x34
  43208e:	clc    
  43208f:	xchg   BYTE PTR [ebx-0x5f],al
  432092:	mov    dh,0x4d
  432094:	ss inc ecx
  432096:	adc    esi,ebp
  432098:	fld    DWORD PTR [edi+0xb]
  43209b:	cmp    al,BYTE PTR ds:0x48010a65
  4320a1:	mov    eax,ds:0xce61c272
  4320a6:	dec    edx
  4320a7:	retf   
  4320a8:	retf   0x2ff4
  4320ab:	retf   
  4320ac:	ret    0x2fec
  4320af:	retf   
  4320b0:	mov    edx,0x725a717b
  4320b5:	ja     0x432128
  4320b7:	jb     0x432113
  4320b9:	push   esp
  4320ba:	xchg   ebp,eax
  4320bb:	jae    0x4320ba
  4320bd:	stos   BYTE PTR es:[di],al
  4320bf:	xchg   BYTE PTR [ecx],bh
  4320c1:	inc    ebp
  4320c2:	outs   dx,DWORD PTR ds:[esi]
  4320c3:	xchg   ebx,eax
  4320c4:	(bad)  
  4320c5:	icebp  
  4320c6:	std    
  4320c7:	stc    
  4320c8:	jns    0x43205b
  4320ca:	sbb    esi,DWORD PTR [esi]
  4320cc:	inc    esp
  4320cd:	pop    edx
  4320ce:	mov    eax,ds:0xba93c186
  4320d3:	mov    WORD PTR [edx+0x6e4fbcb3],ss
  4320d9:	push   cs
  4320da:	add    edx,edi
  4320dc:	add    BYTE PTR [ecx+0x31],dl
  4320df:	mov    dh,0x4b
  4320e1:	std    
  4320e2:	ins    BYTE PTR es:[edi],dx
  4320e3:	ret    0xe128
  4320e6:	mov    ebx,0x42aa5ad4
  4320eb:	fs inc edi
  4320ed:	jge    0x43215a
  4320ef:	mov    al,0xaf
  4320f1:	cli    
  4320f2:	dec    esi
  4320f3:	mov    cl,0xfc
  4320f5:	aam    0x3
  4320f7:	aas    
  4320f8:	sub    BYTE PTR [esi],0x41
  4320fb:	or     al,0x41
  4320fd:	mov    ds:0x20411c46,eax
  432102:	inc    ecx
  432103:	hlt    
  432104:	inc    ebx
  432105:	dec    ebx
  432106:	and    al,0x6a
  432108:	add    dh,BYTE PTR [ebx-0x55]
  43210b:	jl     0x4320c9
  43210d:	mov    cl,0xc9
  43210f:	xor    al,0x7e
  432111:	jge    0x43212e
  432113:	call   0x64ff676c
  432118:	sbb    bl,bl
  43211a:	js     0x432140
  43211c:	xchg   ecx,eax
  43211d:	test   DWORD PTR [ecx+0x24],ebp
  432120:	sbb    bl,cl
  432122:	jo     0x432145
  432124:	mov    ecx,0x96e2cb27
  432129:	scas   al,BYTE PTR es:[edi]
  43212a:	inc    ecx
  43212b:	aam    0x7f
  43212d:	test   cl,al
  43212f:	imul   eax,DWORD PTR [eax],0x425d4d86
  432135:	mov    eax,ds:0x347ee1bd
  43213a:	ss in  al,0xb2
  43213d:	sbb    eax,0x79fc9
  432142:	xor    eax,0xd3146c7a
  432147:	stos   BYTE PTR es:[edi],al
  432148:	mov    ecx,0xe2bd7c0a
  43214d:	ret    0xc9f5
  432150:	cmp    BYTE PTR [eax-0x79227918],dl
  432156:	pop    ebx
  432157:	inc    ecx
  432158:	adc    ebp,ecx
  43215a:	add    BYTE PTR ds:0x7ad50715,dh
  432160:	jl     0x43211d
  432162:	mov    cl,0x4d
  432164:	or     bh,BYTE PTR [edi]
  432166:	test   bl,cl
  432168:	inc    edi
  432169:	and    DWORD PTR [ecx-0x63],esi
  43216c:	call   FWORD PTR [esi+0x283b41ec]
  432172:	and    DWORD PTR [eax],eax
  432174:	push   esi
  432175:	pusha  
  432176:	inc    ebp
  432177:	add    eax,0x43845389
  43217c:	or     ch,cl
  43217e:	clc    
  43217f:	dec    eax
  432180:	and    esi,0x0
  432183:	xor    eax,0xc5fce906
  432188:	and    BYTE PTR [esi],ch
  43218a:	lea    edi,[eax+0x534a6e83]
  432190:	or     ch,cl
  432192:	push   0x4ad22e08
  432197:	sub    al,0x67
  432199:	(bad)  
  43219a:	cmc    
  43219b:	sub    BYTE PTR [ebx],cl
  43219d:	sti    
  43219e:	rol    BYTE PTR [edx-0x75573385],0x83
  4321a5:	adc    BYTE PTR [eax],al
  4321a7:	or     esi,DWORD PTR [esp+ecx*1+0x784285e8]
  4321ae:	in     al,dx
  4321af:	inc    eax
  4321b0:	mov    edi,0xc585e90a
  4321b5:	aas    
  4321b6:	adc    ecx,ebx
  4321b8:	mov    ebx,0x138243bd
  4321bd:	loop   0x432174
  4321bf:	cmp    BYTE PTR [eax+0x49496aef],0xb
  4321c6:	xchg   edi,eax
  4321c7:	das    
  4321c8:	retf   
  4321c9:	(bad)
  4321cd:	out    dx,eax
  4321ce:	inc    edx
  4321cf:	leave  
  4321d0:	into   
  4321d1:	cwde   
  4321d2:	jmp    0x432156
  4321d4:	inc    edx
  4321d5:	or     dl,dl
  4321d7:	retf   
  4321d8:	sub    al,0x27
  4321da:	ret    0xc275
  4321dd:	enter  0x5d00,0x47
  4321e1:	or     al,BYTE PTR [eax]
  4321e3:	xor    al,0x78
  4321e5:	cmp    cl,dh
  4321e7:	inc    ecx
  4321e8:	inc    esi
  4321e9:	xchg   ecx,esi
  4321eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4321ec:	clc    
  4321ed:	aaa    
  4321ee:	push   esi
  4321ef:	sbb    al,0x78
  4321f1:	gs add dh,ch
  4321f4:	push   edi
  4321f5:	cdq    
  4321f6:	stc    
  4321f7:	mov    eax,0x3bc47048
  4321fc:	inc    edi
  4321fd:	mov    ebx,0xa4031c0
  432202:	pop    esi
  432203:	in     al,0x4
  432205:	ret    
  432206:	int3   
  432207:	and    bh,BYTE PTR ds:0x100056e3
  43220d:	cmp    eax,0x8074086e
  432212:	add    edi,DWORD PTR [esi-0x10b778]
  432218:	ins    BYTE PTR es:[edi],dx
  432219:	push   edi
  43221b:	cmp    esp,DWORD PTR [ecx-0x3074fd2c]
  432221:	xor    ebp,DWORD PTR [ebx+0xa3fdf24]
  432227:	add    BYTE PTR [eax+eax*4],ah
  43222a:	jnp    0x4321af
  43222c:	mov    bh,0x3f
  43222e:	jnp    0x432240
  432230:	xlat   BYTE PTR ds:[ebx]
  432231:	(bad)
  432234:	enter  0x4c3d,0x74
  432238:	xor    al,BYTE PTR [esi]
  43223a:	add    al,0x84
  43223c:	sub    BYTE PTR [esi+0xa],al
  43223f:	add    BYTE PTR [esi+0x588b6382],bl
  432245:	jmp    0x744c:0x1cb5788
  43224c:	outs   dx,DWORD PTR ds:[esi]
  43224d:	aas    
  43224e:	or     al,BYTE PTR [eax]
  432250:	cli    
  432251:	inc    edx
  432252:	cmp    DWORD PTR [ebx+eiz*2-0x72],esi
  432256:	mov    edi,0xce928672
  43225b:	iret   
  43225c:	pcmpeqb mm3,QWORD PTR [edx+0x6f55c988]
  432263:	enter  0xa4ce,0x6e
  432267:	push   edx
  432268:	jle    0x432212
  43226a:	cmp    al,0xe6
  43226c:	test   al,bh
  43226e:	xor    eax,0x50860065
  432273:	dec    ebx
  432274:	dec    edi
  432275:	aam    0xf4
  432277:	adc    ebx,DWORD PTR [ecx]
  432279:	bound  ebp,QWORD PTR [ecx-0x23e78f5]
  43227f:	je     0x4322c3
  432281:	mov    dl,0x30
  432283:	or     DWORD PTR [edi+0x42],edi
  432286:	cdq    
  432287:	adc    ecx,DWORD PTR [ecx-0x79fe8bfe]
  43228d:	mov    DWORD PTR [eax],ebp
  43228f:	or     DWORD PTR [edi],0xffffff86
  432292:	(bad)  
  432294:	xchg   BYTE PTR [ecx],bh
  432296:	std    
  432297:	outs   dx,BYTE PTR ds:[esi]
  432298:	push   edx
  432299:	jb     0x4322bb
  43229b:	leave  
  43229c:	sub    ebp,DWORD PTR [ebp-0x78fe2886]
  4322a2:	test   eax,0x36b6370b
  4322a7:	test   DWORD PTR [edi+ecx*8+0x41870a30],eax
  4322ae:	icebp  
  4322af:	push   es
  4322b0:	rcr    DWORD PTR [ebp+0x1cbfd6a6],0xa9
  4322b7:	mov    ch,0x4f
  4322b9:	cmp    DWORD PTR [ecx-0x5679c9e2],eax
  4322bf:	outs   dx,BYTE PTR ds:[esi]
  4322c0:	dec    edx
  4322c1:	and    dh,BYTE PTR [eax]
  4322c3:	or     bh,BYTE PTR [edi-0x3e]
  4322c6:	cwde   
  4322c7:	je     0x432313
  4322c9:	loop   0x43224e
  4322cb:	scas   al,BYTE PTR es:[edi]
  4322cc:	sti    
  4322cd:	jns    0x4322b8
  4322cf:	outs   dx,BYTE PTR ds:[esi]
  4322d0:	adc    al,BYTE PTR ds:0xf42b43
  4322d6:	imul   ecx,DWORD PTR [ecx+0x66],0x98ba5cb8
  4322dd:	test   al,0xa8
  4322df:	sbb    BYTE PTR [edi],0xa7
  4322e2:	adc    dh,cl
  4322e4:	out    dx,al
  4322e5:	test   DWORD PTR [edx],0x814f5b1
  4322eb:	or     dl,BYTE PTR ds:0xe83b4e7f
  4322f1:	jl     0x4322b7
  4322f3:	jp     0x4322d9
  4322f5:	inc    edx
  4322f6:	and    BYTE PTR [ebp+0x14],al
  4322f9:	inc    esp
  4322fa:	jo     0x432290
  4322fc:	or     DWORD PTR fs:[ebp-0x3cba8ab7],eax
  432303:	int    0x90
  432305:	xchg   edi,eax
  432306:	pusha  
  432307:	xchg   ebx,eax
  432308:	xchg   ebx,eax
  432309:	mov    bl,0x54
  43230b:	stos   BYTE PTR es:[edi],al
  43230c:	gs int3 
  43230e:	stc    
  43230f:	mov    ecx,0xcb5dc06c
  432314:	mov    al,ds:0x644200a7
  432319:	aas    
  43231a:	xchg   ecx,eax
  43231b:	stos   BYTE PTR es:[edi],al
  43231c:	adc    eax,0x6cb9dc0c
  432321:	clc    
  432322:	mov    al,ds:0x79c2ca82
  432327:	das    
  432328:	fild   WORD PTR [edi+edi*4-0x69117c2]
  43232f:	sbb    DWORD PTR [edi-0x45],edi
  432332:	xor    BYTE PTR [edx-0x3a17571d],ah
  432338:	iret   
  432339:	add    BYTE PTR [eax],al
  43233b:	(bad)  
  43233c:	into   
  43233d:	mov    eax,ds:0x25c73fa7
  432342:	add    al,0x87
  432344:	pop    ss
  432345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432346:	cmp    BYTE PTR [ebp+0x4d389d86],bh
  43234c:	xchg   BYTE PTR [edx],cl
  43234e:	sbb    al,0xfd
  432350:	lods   eax,DWORD PTR ds:[esi]
  432351:	pop    ebx
  432352:	pop    ss
  432353:	and    eax,eax
  432355:	ins    DWORD PTR es:[edi],dx
  432356:	icebp  
  432357:	mov    esp,0x85e90a42
  43235c:	shr    edi,0x62
  43235f:	sbb    DWORD PTR ds:0x428ae72d,esi
  432365:	or     bh,dl
  432367:	addr16 mov eax,ds:0x7c59
  43236b:	mov    DWORD PTR [ebx+eax*4+0x75c0162e],edi
  432372:	fnstsw WORD PTR [esi]
  432374:	inc    ebx
  432375:	or     ecx,ebp
  432377:	test   DWORD PTR [ecx],ebp
  432379:	add    ah,BYTE PTR [eax+edx*4+0x4c]
  43237d:	xchg   BYTE PTR [ecx+0x640a4287],ah
  432383:	retf   0x864c
  432386:	scas   al,BYTE PTR es:[edi]
  432387:	xchg   DWORD PTR [edx+0xa],eax
  43238a:	push   0xffffff92
  43238c:	mov    eax,0x47cc579
  432391:	inc    edx
  432392:	bound  edi,QWORD PTR [ecx]
  432394:	adc    DWORD PTR [ebx+0x77c011be],eax
  43239a:	aad    0x94
  43239c:	cdq    
  43239d:	and    DWORD PTR [esi-0x47b43300],0xffffff9d
  4323a4:	fidiv  DWORD PTR [esi+0x3e5283c]
  4323aa:	push   esi
  4323ab:	jb     0x4323a6
  4323ad:	add    al,0x2b
  4323af:	sti    
  4323b0:	cmp    al,0x14
  4323b2:	dec    edx
  4323b3:	pusha  
  4323b4:	icebp  
  4323b5:	add    BYTE PTR [eax+0x72],ch
  4323b8:	test   eax,0xa1706801
  4323bd:	and    DWORD PTR es:[esi],0xfffffffe
  4323c1:	push   edi
  4323c2:	aas    
  4323c3:	adc    eax,0x4a140d
  4323c8:	nop
  4323c9:	pop    es
  4323ca:	or     ecx,DWORD PTR [edx-0xc]
  4323cd:	lock inc edi
  4323cf:	mov    ebx,DWORD PTR [eax-0x4774967e]
  4323d5:	fisubr DWORD PTR [ecx-0x77]
  4323d8:	dec    ebx
  4323d9:	cli    
  4323da:	xchg   al,al
  4323dc:	jnp    0x43237d
  4323de:	mov    BYTE PTR [edi-0x7d],cl
  4323e1:	cmp    ebx,DWORD PTR [esp+ebp*1+0x44]
  4323e5:	jl     0x432371
  4323e7:	jmp    0x7a44:0xa3f59
  4323ee:	jl     0x4323fd
  4323f0:	lahf   
  4323f1:	out    0xe7,eax
  4323f3:	cmp    DWORD PTR [esp+eax*2],edi
  4323f6:	or     al,BYTE PTR [ebx+0x4782bb5b]
  4323fc:	dec    edi
  4323fd:	lds    esi,FWORD PTR [eax+eiz*2+0x2c]
  432401:	mov    cl,0x6d
  432403:	and    eax,0xa441e00
  432408:	xchg   sp,ax
  43240a:	lock arpl WORD PTR [esi-0x6c],sp
  43240e:	out    dx,eax
  43240f:	pop    edi
  432410:	mov    ebx,DWORD PTR [eax+0x23]
  432413:	sbb    DWORD PTR [eax],eax
  432415:	fistp  QWORD PTR [ecx]
  432417:	dec    esp
  432418:	pusha  
  432419:	je     0x432423
  43241b:	stos   DWORD PTR es:[edi],eax
  43241c:	push   ss
  43241d:	out    dx,eax
  43241e:	inc    ebx
  43241f:	add    esi,DWORD PTR [edi+0xc82d5a6]
  432425:	sbb    DWORD PTR ds:0x43a9989c,edi
  43242b:	or     cl,BYTE PTR [ebx+0x192378]
  432431:	scas   eax,DWORD PTR es:[edi]
  432432:	(bad)  
  432433:	lock xchg DWORD PTR [ebx-0x60f56f],ebp
  43243a:	test   al,0xef
  43243c:	push   DWORD PTR [eax-0x79f050fb]
  432442:	xlat   BYTE PTR ds:[ebx]
  432443:	jbe    0x4324c4
  432445:	cmp    eax,0x87620669
  43244a:	sbb    eax,0xa98a975d
  43244f:	or     ecx,DWORD PTR [ebp+0x35e1802]
  432455:	xchg   BYTE PTR [ecx-0x1f963f74],ch
  43245b:	push   es
  43245c:	add    BYTE PTR [esi],bl
  43245e:	test   eax,0x4786000c
  432463:	rol    edi,0xd5
  432466:	xchg   ebp,eax
  432467:	div    BYTE PTR [edx+0x3db03f00]
  43246d:	add    BYTE PTR [esi],0x72
  432470:	(bad)  
  432471:	jmp    FWORD PTR [esi+ebx*4]
  432474:	div    BYTE PTR [edx+0x214ea57]
  43247a:	jns    0x432453
  43247c:	mov    WORD PTR [edi-0x34],?
  43247f:	jmp    0x2dca868f
  432484:	ins    DWORD PTR es:[edi],dx
  432485:	xchg   DWORD PTR [edi-0x57],edi
  432488:	or     eax,DWORD PTR [edi-0x1fe2ff]
  43248e:	add    DWORD PTR [esp+esi*1+0x6eb1c526],edi
  432495:	lahf   
  432496:	cwde   
  432497:	test   eax,0xc941870b
  43249c:	not    BYTE PTR [ebx+0x73ae91c7]
  4324a2:	or     eax,0x5a4a715a
  4324a7:	xchg   esp,eax
  4324a8:	outs   dx,BYTE PTR ds:[esi]
  4324a9:	jg     0x432431
  4324ab:	test   eax,0x2c59730b
  4324b0:	add    edi,esi
  4324b2:	aaa    
  4324b3:	(bad)  [ebx+0xcc94988]
  4324b9:	pop    ebx
  4324ba:	sbb    al,BYTE PTR [edx+0x7c]
  4324bd:	lods   al,BYTE PTR ds:[esi]
  4324be:	sub    eax,0xbc30cb
  4324c3:	pop    es
  4324c4:	cmp    DWORD PTR [ecx+0x44],edi
  4324c7:	jp     0x432499
  4324c9:	dec    ebp
  4324ca:	inc    ebp
  4324cb:	inc    esp
  4324cc:	jecxz  0x4324fe
  4324ce:	add    BYTE PTR [eax-0x36],ah
  4324d1:	and    al,al
  4324d3:	test   al,0x81
  4324d5:	add    al,0xbd
  4324d7:	aad    0xc9
  4324d9:	add    al,dl
  4324db:	(bad)  
  4324dc:	std    
  4324dd:	cmp    ch,dh
  4324df:	adc    al,0x3f
  4324e1:	and    ah,cl
  4324e3:	xor    ecx,edx
  4324e5:	xor    ah,al
  4324e7:	out    0xcb,eax
  4324e9:	in     eax,0xa9
  4324eb:	jl     0x4324da
  4324ed:	and    BYTE PTR [eax+0x79390608],bl
  4324f3:	aam    0xfe
  4324f5:	(bad)  
  4324f6:	jp     0x43247d
  4324f8:	or     BYTE PTR [eax-0x4c],ah
  4324fb:	leave  
  4324fc:	stc    
  4324fd:	loop   0x432502
  4324ff:	xchg   BYTE PTR [edx-0x2a],al
  432502:	dec    esp
  432503:	cs ret 0x3e1
  432507:	xchg   BYTE PTR [ebx-0x58],al
  43250a:	xchg   edi,eax
  43250b:	add    BYTE PTR [esi],cl
  43250d:	or     DWORD PTR [ecx],eax
  43250f:	push   ebp
  432510:	es jl  0x4324c7
  432513:	push   ecx
  432514:	jge    0x4324b6
  432516:	mov    ds:0x3e1b5f1,eax
  43251b:	jge    0x432509
  43251d:	jecxz  0x432599
  43251f:	inc    esp
  432520:	or     dh,BYTE PTR [ebx+eiz*1]
  432523:	mov    esp,gs
  432525:	stos   DWORD PTR es:[edi],eax
  432526:	add    ah,BYTE PTR [ecx+0x35bcc483]
  43252c:	retf   
  43252d:	mov    al,ds:0x7c17a8bb
  432532:	lods   al,BYTE PTR ds:[esi]
  432533:	add    BYTE PTR ds:0xbdae0ac9,ch
  432539:	mov    edi,0xc82eeb06
  43253e:	stos   BYTE PTR es:[edi],al
  43253f:	inc    DWORD PTR [ebp-0x11897cbe]
  432545:	push   eax
  432546:	or     ch,cl
  432548:	pop    eax
  432549:	mov    al,0x68
  43254b:	pusha  
  43254c:	dec    esi
  43254d:	cld    
  43254e:	sbb    BYTE PTR [esi+0x2a],0x50
  432552:	or     ch,cl
  432554:	or     bl,cl
  432556:	xchg   edx,eax
  432557:	fild   WORD PTR [ebp-0x6d1a7dbe]
  43255d:	mov    ch,0x90
  43255f:	dec    ecx
  432560:	jl     0x4325a4
  432562:	or     ch,dh
  432564:	pop    ds
  432565:	sub    BYTE PTR [eax-0x18],0xf1
  432569:	ret    0xe996
  43256c:	test   DWORD PTR [edx-0x7d],eax
  43256f:	jbe    0x432557
  432571:	dec    edi
  432572:	or     ch,cl
  432574:	push   ss
  432575:	mov    esi,0x428a5d87
  43257a:	or     bh,BYTE PTR [edx+0x20c35f53]
  432580:	cmc    
  432581:	loope  0x43259b
  432583:	jmp    0x2bd9710d
  432588:	test   DWORD PTR [eax],ecx
  43258a:	jbe    0x4325ee
  43258c:	adc    BYTE PTR [ebp-0x4ff12ab0],dh
  432592:	jmp    DWORD PTR [ebp+edx*8-0x48]
  432596:	out    dx,eax
  432597:	add    BYTE PTR ss:[ecx],al
  43259a:	or     ecx,DWORD PTR [esi+0x64]
  43259d:	mov    ebx,0x4d720739
  4325a2:	jp     0x4325af
  4325a4:	sub    cl,ch
  4325a6:	mov    bl,0x3c
  4325a8:	sub    DWORD PTR [ecx],eax
  4325aa:	adc    ebx,DWORD PTR [esi-0x7d]
  4325ad:	test   DWORD PTR [edi-0x27],ebx
  4325b0:	add    BYTE PTR ds:0xbfe85911,bl
  4325b6:	js     0x4325c2
  4325b8:	add    BYTE PTR [ecx+ecx*1],ah
  4325bb:	pop    esi
  4325bc:	mov    eax,esp
  4325be:	adc    al,0x85
  4325c0:	pop    es
  4325c1:	sub    al,0x7d
  4325c3:	sbb    ch,al
  4325c5:	dec    edi
  4325c6:	mov    bh,0xf1
  4325c8:	jmp    DWORD PTR [eax+edx*2]
  4325cb:	ins    DWORD PTR es:[edi],dx
  4325cc:	jns    0x43255d
  4325ce:	inc    eax
  4325cf:	add    DWORD PTR [ebp-0xbbd1d],eax
  4325d5:	cwde   
  4325d6:	and    BYTE PTR ds:0xad2194c0,bl
  4325dc:	mov    ecx,DWORD PTR [eax-0x583674de]
  4325e2:	inc    edi
  4325e3:	test   DWORD PTR [edi+0x67],eax
  4325e6:	cmp    eax,0x6d5debaf
  4325eb:	retf   0xd33
  4325ee:	mov    ebp,0xcc3804f4
  4325f3:	mov    al,0x52
  4325f5:	mov    ah,0x18
  4325f7:	pop    esi
  4325f8:	sub    ecx,DWORD PTR [esi]
  4325fa:	push   cs
  4325fb:	pop    edx
  4325fc:	push   edi
  4325fd:	add    BYTE PTR [edi],al
  4325ff:	jmp    0xc5722636
  432604:	dec    ecx
  432605:	ins    BYTE PTR es:[edi],dx
  432606:	xchg   esi,eax
  432607:	or     BYTE PTR [esi-0x75],cl
  43260a:	and    BYTE PTR [ebp+0x58c710c6],bh
  432610:	idiv   edi
  432612:	dec    eax
  432613:	les    eax,FWORD PTR [ecx]
  432615:	xor    ebp,DWORD PTR [edi+0x32102f76]
  43261b:	push   ecx
  43261c:	ins    DWORD PTR es:[edi],dx
  43261d:	(bad)  
  43261e:	jecxz  0x432670
  432620:	fwait
  432621:	ror    al,0x21
  432624:	push   ebp
  432625:	dec    eax
  432626:	ins    BYTE PTR es:[edi],dx
  432627:	lahf   
  432628:	lock pop esp
  43262a:	xchg   BYTE PTR [eax-0x78],ch
  43262d:	cli    
  43262e:	adc    BYTE PTR [edi+edx*4+0x50db61c0],0x8b
  432636:	inc    edx
  432637:	test   eax,0xd6c55b06
  43263c:	sub    ah,0x55
  43263f:	retf   
  432640:	push   esp
  432641:	test   DWORD PTR [ebx],esp
  432643:	mov    cl,0xae
  432645:	call   FWORD PTR [ecx-0x6e7af457]
  43264b:	and    BYTE PTR [ecx+0x74],bl
  43264e:	pop    es
  43264f:	xchg   ebx,eax
  432650:	add    al,0xff
  432652:	sub    DWORD PTR [ecx+0x796e1e76],0x2071f9f0
  43265c:	pop    ecx
  43265d:	je     0x432666
  43265f:	repnz add al,0xff
  432662:	add    BYTE PTR [ecx-0x57],ah
  432665:	jbe    0x43266d
  432667:	add    eax,0x81001a56
  43266c:	and    eax,0xa949fe3c
  432671:	mov    bh,al
  432673:	xchg   ecx,eax
  432674:	and    eax,0xa939fed1
  432679:	rol    BYTE PTR ss:0xbf6e0532,0x20
  432681:	inc    ecx
  432682:	dec    eax
  432683:	or     eax,0xb18553ec
  432688:	test   DWORD PTR [esi+0x71],edi
  43268b:	pop    edx
  43268c:	js     0x432674
  43268e:	test   DWORD PTR [ecx+0x52b21951],edi
  432694:	call   0x5441:0x47c72d05
  43269b:	std    
  43269c:	fild   DWORD PTR [edi+0x1d]
  43269f:	hlt    
  4326a0:	pop    ds
  4326a1:	push   ecx
  4326a2:	inc    eax
  4326a3:	cmovb  esp,DWORD PTR [eax-0x1a389bb5]
  4326aa:	inc    edx
  4326ab:	fs leave 
  4326ad:	fnsave [ebp+0x3]
  4326b0:	add    ebp,DWORD PTR [ebp+0x24]
  4326b3:	dec    edi
  4326b4:	outs   dx,BYTE PTR ds:[esi]
  4326b5:	jl     0x432710
  4326b7:	inc    esi
  4326b8:	inc    ebx
  4326b9:	cmp    BYTE PTR [eax],cl
  4326bb:	dec    eax
  4326bc:	(bad)  
  4326bd:	test   al,0x4b
  4326bf:	add    ecx,DWORD PTR [ebx]
  4326c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4326c2:	imul   ecx,DWORD PTR [ebx],0x6a552b
  4326c8:	add    DWORD PTR [esi+0x3b],ebp
  4326cb:	lea    edi,[edi]
  4326cd:	and    ch,BYTE PTR [eax+ebx*2+0x16]
  4326d1:	hlt    
  4326d2:	jecxz  0x4326d7
  4326d4:	xchg   BYTE PTR [edx+0x7a],al
  4326d7:	push   eax
  4326d8:	(bad)  
  4326d9:	mov    ebx,0x3a096818
  4326de:	inc    ecx
  4326df:	xchg   DWORD PTR [esi+0x37],eax
  4326e2:	sub    edi,DWORD PTR ds:0x3e1c30f
  4326e8:	xchg   BYTE PTR ds:0x1eb78d23,dh
  4326ee:	ins    BYTE PTR es:[edi],dx
  4326ef:	push   eax
  4326f0:	call   0xe249:0x2982b15d
  4326f7:	add    eax,DWORD PTR [esi+0x7678926d]
  4326fd:	adc    dl,BYTE PTR [eax]
  4326ff:	in     al,dx
  432700:	jo     0x432764
  432702:	loope  0x432707
  432704:	mov    ds:0xc78af986,eax
  432709:	and    ah,BYTE PTR [ebx+edi*8-0x7b]
  43270d:	cmp    edi,esi
  43270f:	cmp    ch,bh
  432711:	mov    edx,0x368603e1
  432716:	aam    0x84
  432718:	inc    BYTE PTR [ebp-0x4a]
  43271b:	adc    cl,BYTE PTR [ebx]
  43271d:	sbb    cl,BYTE PTR [edx]
  43271f:	lds    ebx,FWORD PTR [edx-0x1c9785ed]
  432725:	inc    edx
  432726:	sbb    ch,cl
  432728:	test   DWORD PTR [ebx+ecx*1],esi
  43272b:	jo     0x43272d
  43272d:	dec    esi
  43272e:	and    al,BYTE PTR [ebx-0xdd0b252]
  432734:	jmp    0x4285:0xe85f3096
  43273b:	xor    DWORD PTR [esi-0x7078c4db],esp
  432741:	test   BYTE PTR [edx+0xa],al
  432744:	xchg   DWORD PTR [edx],edx
  432746:	adc    al,0x5e
  432748:	dec    edi
  432749:	ins    DWORD PTR es:[edi],dx
  43274a:	adc    esp,DWORD PTR [esi+0x72]
  43274d:	dec    ecx
  43274e:	push   ds
  43274f:	and    DWORD PTR [esi],0xe
  432752:	and    al,0x23
  432754:	mov    edx,0xdfa6cb0d
  432759:	test   DWORD PTR [edx+0x7d],eax
  43275c:	xor    eax,0x2e84ad82
  432761:	jmp    0xaad3:0xda3b73b
  432768:	inc    DWORD PTR [ebp+0x76706842]
  43276e:	inc    DWORD PTR [edx+0xa542276]
  432774:	jmp    0xdfd5fa85
  432779:	test   DWORD PTR [edx+0x1e],eax
  43277c:	jmp    0x81f3:0xe61445fd
  432783:	mov    bl,0xe8
  432785:	test   DWORD PTR [edx+0xa],eax
  432788:	call   0xe95c0985
  43278d:	test   DWORD PTR [ebx],edi
  43278f:	mov    eax,0x7020079
  432794:	dec    edx
  432795:	jmp    0xd6d905
  43279a:	pop    eax
  43279b:	into   
  43279c:	push   es
  43279d:	add    bh,bl
  43279f:	rol    DWORD PTR [esi+0xa3a5797],1
  4327a5:	add    BYTE PTR [esi-0x79],ch
  4327a8:	icebp  
  4327a9:	(bad)  
  4327aa:	out    dx,eax
  4327ab:	inc    esp
  4327ac:	mov    dl,0x0
  4327ae:	fiadd  WORD PTR [edx+ecx*1+0x66]
  4327b2:	mov    ah,0x7c
  4327b4:	pop    ebp
  4327b5:	or     al,0xe0
  4327b7:	test   edi,0x8ac7790f
  4327bd:	dec    ecx
  4327be:	fild   WORD PTR [ebp+eiz*8+0xd]
  4327c2:	mov    al,ds:0x85c1bff7
  4327c7:	dec    ecx
  4327c8:	add    DWORD PTR [esi+0x4048c52d],esi
  4327ce:	lahf   
  4327cf:	es out dx,eax
  4327d1:	fwait
  4327d2:	sbb    BYTE PTR [ebp-0x4290fff9],bh
  4327d8:	mov    DWORD PTR [ecx+ebx*2+0x1c2b0a44],ebx
  4327df:	jne    0x4327a8
  4327e1:	cmp    eax,ebx
  4327e3:	jecxz  0x432801
  4327e5:	add    BYTE PTR [edi-0x43],ch
  4327e8:	dec    ecx
  4327e9:	js     0x43283b
  4327eb:	fsubr  DWORD PTR [edi-0x25a2f375]
  4327f1:	add    DWORD PTR [eax+0xc06d2a],ecx
  4327f7:	adc    DWORD PTR [edi+0x12b67849],edi
  4327fd:	add    ch,bl
  4327ff:	sbb    al,0xd3
  432801:	inc    edi
  432802:	add    BYTE PTR [esi],bl
  432804:	adc    DWORD PTR [esi-0x75],ebx
  432807:	js     0x43283b
  432809:	xor    eax,0x856e38d6
  43280e:	inc    edi
  43280f:	xlat   BYTE PTR ds:[ebx]
  432810:	mov    esp,0x24865841
  432815:	push   eax
  432816:	xor    al,0xd5
  432818:	stc    
  432819:	or     DWORD PTR [ecx-0x42],0xffffffb8
  43281d:	mov    ch,0x4c
  43281f:	xchg   edi,eax
  432820:	fwait
  432821:	cmp    al,0xbf
  432823:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432824:	loopne 0x43287d
  432826:	test   DWORD PTR [ecx-0x1b],edx
  432829:	jle    0x43286c
  43282b:	dec    esi
  43282c:	mov    eax,0x7c4704b8
  432831:	rol    DWORD PTR [ebp-0x789a26cf],1
  432837:	mov    dh,bl
  432839:	add    BYTE PTR [ecx+0x4984d541],dh
  43283f:	ds xor al,0x58
  432842:	inc    esp
  432843:	and    BYTE PTR [edx],ah
  432845:	pop    es
  432846:	inc    esi
  432847:	fstp   QWORD PTR [edx-0x5779fff5]
  43284d:	cmp    eax,0xbcc1b78
  432852:	pop    ecx
  432853:	sbb    bl,BYTE PTR [edi+ebp*2]
  432856:	or     BYTE PTR [esi+0x6c4524],al
  43285c:	inc    ecx
  43285d:	pusha  
  43285e:	pop    esi
  43285f:	add    BYTE PTR [esi-0x3e3ef467],al
  432865:	stc    
  432866:	or     eax,DWORD PTR [eax]
  432868:	xchg   BYTE PTR [ecx-0x199c7c02],bl
  43286e:	in     eax,dx
  43286f:	stc    
  432870:	std    
  432871:	ja     0x4328dd
  432873:	xor    DWORD PTR [ecx+edx*2],0x5
  432877:	test   ecx,edx
  432879:	xchg   ecx,eax
  43287a:	or     al,dh
  43287c:	sub    eax,0x9cc73a9b
  432881:	cdq    
  432882:	and    bh,BYTE PTR [esi-0x17aab52a]
  432888:	outs   dx,DWORD PTR ds:[esi]
  432889:	test   DWORD PTR [ebx],0xb8420d00
  43288f:	outs   dx,DWORD PTR ds:[esi]
  432890:	or     eax,DWORD PTR [edi+0x64]
  432893:	enter  0xb976,0xa8
  432897:	pop    edi
  432898:	out    dx,al
  432899:	enter  0xfd57,0xff
  43289d:	mov    edx,0x527880d0
  4328a2:	loope  0x4328b0
  4328a4:	add    eax,0xdffd36dd
  4328a9:	push   cs
  4328aa:	jg     0x4328dc
  4328ac:	(bad)  
  4328ad:	or     al,dh
  4328af:	rcl    BYTE PTR [ebx+0x2f],0x99
  4328b3:	add    edi,DWORD PTR [edi-0x3a]
  4328b6:	jae    0x4328bc
  4328b8:	xchg   BYTE PTR [edx+0x6c],al
  4328bb:	inc    ebp
  4328bc:	sub    bh,BYTE PTR [ebx+0x8003bb8]
  4328c2:	push   es
  4328c3:	stc    
  4328c4:	cld    
  4328c5:	add    edx,edi
  4328c7:	inc    ecx
  4328c8:	push   ss
  4328c9:	xchg   BYTE PTR [edx+0x6c],al
  4328cc:	(bad)  
  4328cd:	loop   0x432926
  4328cf:	loope  0x4328d4
  4328d1:	arpl   WORD PTR [eax+0x11528b47],di
  4328d7:	ins    BYTE PTR es:[edi],dx
  4328d8:	xchg   esp,eax
  4328d9:	push   ds
  4328da:	push   ebp
  4328db:	loope  0x4328e0
  4328dd:	add    edi,DWORD PTR [esi+0x42861581]
  4328e3:	jns    0x4328ec
  4328e5:	add    BYTE PTR [ebx+0x58],0xa3
  4328e9:	je     0x43292d
  4328eb:	loope  0x4328f9
  4328ed:	adc    al,0x93
  4328ef:	inc    DWORD PTR [edx]
  4328f1:	repnz aad 0x75
  4328f4:	add    eax,DWORD PTR [esi+0x17876642]
  4328fa:	xlat   BYTE PTR ds:[ebx]
  4328fb:	loope  0x432900
  4328fd:	xchg   BYTE PTR [ecx+0x42949f60],bh
  432903:	loope  0x43292d
  432905:	jmp    0x432972
  432907:	or     ch,BYTE PTR [esi-0x1b]
  43290a:	push   eax
  43290b:	or     ch,cl
  43290d:	nop
  43290e:	pop    ebx
  43290f:	xor    DWORD PTR [esi-0x1e3e3e4f],0xffffff82
  432916:	mov    DWORD PTR [edi+0x11],0xebe3ed87
  43291d:	mov    dh,0x82
  43291f:	sbb    DWORD PTR [esi+0x120a2461],0x0
  432926:	aad    0xfc
  432928:	pop    ecx
  432929:	sahf   
  43292a:	in     eax,dx
  43292b:	les    esi,FWORD PTR ds:0x47c785e9
  432931:	xchg   ebp,eax
  432932:	cld    
  432933:	add    ecx,DWORD PTR [esi+0x72]
  432936:	sub    BYTE PTR [edi],0xc6
  432939:	stc    
  43293a:	lods   eax,DWORD PTR ds:[esi]
  43293b:	mov    ah,0xf5
  43293d:	push   cs
  43293e:	mov    edx,0x52e7ffc7
  432943:	push   ds
  432944:	out    dx,eax
  432945:	scas   al,BYTE PTR es:[edi]
  432946:	xor    DWORD PTR [ebp+0x79],esi
  432949:	fldcw  WORD PTR [ebx+edx*1-0x52621111]
  432950:	push   eax
  432951:	push   ebp
  432952:	(bad)  
  432953:	sti    
  432954:	jne    0x4329c6
  432956:	sub    eax,0x7ed5e11a
  43295b:	stos   DWORD PTR es:[edi],eax
  43295c:	out    dx,eax
  43295d:	push   0xfffffffd
  43295f:	sbb    cl,BYTE PTR [edx]
  432961:	cmp    eax,0x4d57c7c4
  432966:	stc    
  432967:	add    dh,BYTE PTR [edx]
  432969:	arpl   si,ax
  43296b:	lods   al,BYTE PTR ds:[esi]
  43296c:	lock bound ecx,QWORD PTR ds:0x85e918e2
  432973:	(bad)  
  432974:	xchg   edi,eax
  432975:	inc    ebp
  432976:	je     0x4329ba
  432978:	or     bl,dl
  43297a:	aaa    
  43297b:	and    BYTE PTR [ecx-0x6838342b],al
  432981:	add    BYTE PTR [edi-0x4bfff5b0],bh
  432987:	mov    ecx,0x2f001692
  43298c:	inc    ecx
  43298d:	add    BYTE PTR [esi+edi*1],0x46
  432991:	xchg   ecx,eax
  432992:	mov    al,ds:0xf0a4111
  432997:	icebp  
  432998:	test   DWORD PTR [ecx+eax*1+0x7b],ebp
  43299c:	rcl    DWORD PTR [esi-0x7cbf1100],0x84
  4329a3:	pusha  
  4329a4:	ror    BYTE PTR [edx],cl
  4329a6:	add    bh,bl
  4329a8:	mov    ebp,0xf9646879
  4329ad:	dec    ebp
  4329ae:	test   DWORD PTR [esi+0x208b092e],esp
  4329b4:	imul   ebp,ebp,0x1d4474c0
  4329ba:	shl    BYTE PTR [ebx+esi*1],0xfe
  4329be:	xor    bh,BYTE PTR [ebp-0x3b]
  4329c1:	hlt    
  4329c2:	add    al,0xb8
  4329c4:	mov    esp,0x113452b0
  4329c9:	pop    esi
  4329ca:	sub    edi,DWORD PTR [esi+0x14]
  4329cd:	pop    edx
  4329ce:	push   edi
  4329cf:	xchg   DWORD PTR [ecx-0x4460ffca],esp
  4329d5:	dec    ecx
  4329d6:	ins    BYTE PTR es:[edi],dx
  4329d7:	push   ss
  4329d8:	add    BYTE PTR [esi-0x75],cl
  4329db:	jo     0x4329a2
  4329dd:	(bad)  
  4329de:	adc    BYTE PTR [edi+0x11],al
  4329e1:	sti    
  4329e2:	dec    DWORD PTR [eax-0x43]
  4329e5:	add    DWORD PTR [ebx],esi
  4329e7:	pop    ds
  4329e8:	outs   dx,DWORD PTR ds:[esi]
  4329e9:	das    
  4329ea:	adc    BYTE PTR [edx+0xfe6d37],ah
  4329f0:	arpl   WORD PTR [ecx],di
  4329f2:	fwait
  4329f3:	ror    al,0x8
  4329f6:	push   ebp
  4329f7:	dec    eax
  4329f8:	fcomp  QWORD PTR [edi-0x2779a310]
  4329fe:	mov    dl,bh
  432a00:	or     BYTE PTR [edi+edi*2+0x4f63d1c0],0x8b
  432a08:	ret    0x699
  432a0b:	pop    ebx
  432a0c:	inc    ebp
  432a0d:	dec    edi
  432a0e:	jg     0x4329fc
  432a10:	or     eax,0x3f2cfe57
  432a15:	popa   
  432a16:	aad    0x74
  432a18:	mov    ds:0xbd1c4530,al
  432a1d:	pop    edx
  432a1e:	pop    edi
  432a1f:	pop    ebx
  432a20:	psrad  mm2,QWORD PTR [edi]
  432a23:	xchg   DWORD PTR [ecx*4+0x327e467e],edi
  432a2a:	cmp    eax,0x3bd7c918
  432a2f:	(bad)  
  432a30:	fstp   DWORD PTR [ecx+0x327e870b]
  432a36:	inc    ebx
  432a37:	add    al,0xff
  432a39:	icebp  
  432a3a:	pop    es
  432a3b:	xchg   DWORD PTR [esi+0x79],ecx
  432a3e:	jle    0x432a88
  432a40:	outs   dx,BYTE PTR ds:[esi]
  432a41:	and    al,BYTE PTR [ebx+0x2c]
  432a44:	push   ecx
  432a46:	cmp    eax,DWORD PTR [edi+0x487e813e]
  432a4c:	bound  esp,QWORD PTR [esi]
  432a4e:	xor    DWORD PTR [eax],0xffffff83
  432a51:	cdq    
  432a52:	or     eax,ecx
  432a54:	add    BYTE PTR [esi-0x53],al
  432a57:	or     eax,DWORD PTR [eax+0x48849986]
  432a5d:	repnz and bh,BYTE PTR [esi]
  432a60:	push   eax
  432a61:	punpcklwd mm0,DWORD PTR [edx-0x3f]
  432a65:	push   es
  432a66:	(bad)  ds:0xb9a8600
  432a6c:	add    BYTE PTR [esi+0x7dc486dc],al
  432a72:	cdq    
  432a73:	or     edi,ecx
  432a75:	push   ecx
  432a76:	inc    edx
  432a77:	test   al,0xf9
  432a79:	fwait
  432a7a:	sub    BYTE PTR [esi],0xc6
  432a7d:	mov    al,BYTE PTR [edx+0x59]
  432a80:	cli    
  432a81:	aas    
  432a82:	stos   DWORD PTR es:[edi],eax
  432a83:	adc    BYTE PTR [edi-0x10],0x45
  432a87:	loope  0x432a50
  432a89:	cmp    bh,BYTE PTR [esi-0x63]
  432a8c:	enter  0x7e52,0xe
  432a90:	lea    ebp,[edx]
  432a92:	mov    bh,0xe
  432a94:	or     al,0xb7
  432a96:	lds    edi,FWORD PTR [edx]
  432a98:	jo     0x432a2c
  432a9a:	mov    bh,0xea
  432a9c:	pop    ss
  432a9d:	add    eax,0x4b66cdab
  432aa2:	adc    al,0x6c
  432aa4:	outs   dx,DWORD PTR ds:[esi]
  432aa5:	add    ch,0x2f
  432aa8:	jnp    0x432a2e
  432aaa:	outs   dx,DWORD PTR ds:[esi]
  432aab:	sub    al,0xf1
  432aad:	mov    esp,0xbc8ce796
  432ab2:	cmp    BYTE PTR [eax+eax*1],0x93
  432ab6:	mov    edi,0x4d003427
  432abb:	aas    
  432abc:	fs loop 0x432a4e
  432abf:	lds    ecx,FWORD PTR [edi]
  432ac1:	jo     0x432a57
  432ac3:	mov    edi,0x45320bff
  432ac8:	fs cli 
  432aca:	jg     0x432af8
  432acc:	fstp   QWORD PTR [ecx+0x3b]
  432acf:	jmp    0x5680:0xaa9ff8f7
  432ad6:	sar    BYTE PTR [ecx],1
  432ad8:	loope  0x432a66
  432ada:	inc    edi
  432adb:	jbe    0x432b43
  432add:	ret    
  432ade:	cli    
  432adf:	inc    esi
  432ae0:	sbb    dh,BYTE PTR [ecx-0x5e]
  432ae3:	cs clc 
  432ae5:	push   ebx
  432ae6:	or     eax,DWORD PTR [ecx+ebx*1]
  432ae9:	(bad)  
  432aea:	rcr    DWORD PTR [esi+0x11],0xf9
  432aee:	push   ecx
  432aef:	mov    esi,0x278a240a
  432af4:	(bad)  
  432af5:	loope  0x432b3d
  432af7:	add    al,0x36
  432af9:	jmp    0x384d6d83
  432afe:	or     eax,0xb660020c
  432b03:	pop    esi
  432b04:	loop   0x432ae7
  432b06:	lods   al,BYTE PTR cs:[esi]
  432b08:	out    dx,eax
  432b09:	daa    
  432b0a:	retf   
  432b0b:	or     ecx,DWORD PTR [ebp-0x55]
  432b0e:	lea    eax,[edx-0x4e]
  432b11:	ja     0x432b31
  432b13:	lods   al,BYTE PTR ds:[esi]
  432b14:	out    dx,eax
  432b15:	push   cs
  432b16:	mov    ecx,0x41e902e8
  432b1b:	ja     0x432adb
  432b1d:	sub    eax,0xbe76c900
  432b22:	mov    esp,0xa483970a
  432b27:	xchg   ebp,eax
  432b28:	idiv   DWORD PTR [edx]
  432b2a:	and    ch,BYTE PTR [edx+0x264ffe7]
  432b30:	inc    ebx
  432b31:	or     ch,cl
  432b33:	add    eax,0x50de396b
  432b38:	mov    eax,0x2785e90a
  432b3d:	ins    DWORD PTR es:[edi],dx
  432b3e:	cmc    
  432b3f:	jge    0x432b7c
  432b41:	test   DWORD PTR [ecx-0x7b],esp
  432b44:	inc    edx
  432b45:	or     dh,BYTE PTR [edi-0x3dfdc9fe]
  432b4b:	mov    dl,0x35
  432b4d:	add    DWORD PTR [edi-0x6d0f97f8],ebx
  432b53:	xor    al,ch
  432b55:	sbb    ch,cl
  432b57:	cld    
  432b58:	or     al,0x12
  432b5a:	and    BYTE PTR [eax],dh
  432b5c:	bound  esi,QWORD PTR [ebp-0xd]
  432b5f:	inc    eax
  432b60:	add    al,0x2a
  432b62:	imul   eax,ebp,0xd8600a67
  432b68:	pop    edx
  432b69:	xor    DWORD PTR [eax],eax
  432b6b:	mov    eax,ds:0x28077b62
  432b70:	push   0x5aca026
  432b75:	or     cl,BYTE PTR [ebx+0x4e8556a9]
  432b7b:	aas    
  432b7c:	clc    
  432b7d:	popa   
  432b7e:	int3   
  432b7f:	test   BYTE PTR [esi],bh
  432b81:	or     ch,BYTE PTR [edx+0x0]
  432b84:	cs adc eax,0xa6a4d1f1
  432b8a:	ins    DWORD PTR es:[edi],dx
  432b8b:	les    esi,FWORD PTR [ebx]
  432b8d:	ins    BYTE PTR es:[edi],dx
  432b8e:	cmc    
  432b8f:	jne    0x432bc4
  432b91:	adc    BYTE PTR [eax+edi*4-0x6d],dl
  432b95:	mov    cl,0xf1
  432b97:	push   DWORD PTR [ebx+ecx*1-0x50]
  432b9b:	adc    BYTE PTR [edi],bl
  432b9d:	mov    esp,0xb63d0c5b
  432ba2:	je     0x432bc0
  432ba4:	cmp    DWORD PTR [esi-0x76b8cbaf],esi
  432baa:	hlt    
  432bab:	inc    DWORD PTR [eax-0x43]
  432bae:	rol    BYTE PTR [ebp-0x74e9cd5c],cl
  432bb4:	sub    DWORD PTR [ebp-0x7b],ebx
  432bb7:	dec    esi
  432bb8:	mov    edi,ecx
  432bba:	pop    ecx
  432bbb:	dec    DWORD PTR [esi+0x6808c6c5]
  432bc1:	push   0x44af000e
  432bc6:	or     bl,BYTE PTR [edi-0x1f]
  432bc9:	mov    ebx,0x82e25bad
  432bce:	sbb    al,BYTE PTR [eax]
  432bd0:	inc    edi
  432bd1:	lods   al,BYTE PTR ds:[esi]
  432bd2:	icebp  
  432bd3:	call   DWORD PTR [eax-0x503dacf5]
  432bd9:	inc    esp
  432bda:	mov    esi,0xbe80d3cc
  432bdf:	int3   
  432be0:	xor    eax,DWORD PTR [eax-0x27793342]
  432be6:	dec    ebx
  432be7:	dec    esp
  432be8:	add    BYTE PTR [esi],dl
  432bea:	mov    ah,0x4b
  432bec:	add    BYTE PTR [ecx+0x5a],al
  432bef:	pop    edx
  432bf0:	pop    es
  432bf1:	xchg   BYTE PTR [ecx+0x49c6c10b],bl
  432bf7:	xchg   esi,eax
  432bf8:	push   ds
  432bf9:	(bad)  
  432bfa:	cdq    
  432bfb:	mov    al,0x40
  432bfd:	scas   al,BYTE PTR es:[edi]
  432bfe:	xchg   esi,eax
  432bff:	or     eax,DWORD PTR [eax]
  432c01:	xchg   ah,bl
  432c03:	(bad)  
  432c04:	int3   
  432c05:	dec    edx
  432c06:	addr16 sub esp,0xffffffd7
  432c0a:	outs   dx,DWORD PTR ds:[esi]
  432c0b:	sub    DWORD PTR [ebp-0x76],0x1c
  432c0f:	jne    0x432c45
  432c11:	xchg   BYTE PTR [eax-0x7d],dl
  432c14:	clc    
  432c15:	xchg   ebx,eax
  432c16:	test   BYTE PTR [edx+ecx*2+0x205c246a],al
  432c1d:	into   
  432c1e:	call   0x85eb:0x6c86000b
  432c25:	dec    ebp
  432c26:	inc    ecx
  432c27:	inc    DWORD PTR fs:[ecx-0x16]
  432c2b:	clc    
  432c2c:	into   
  432c2d:	add    eax,0x48870756
  432c32:	lods   eax,DWORD PTR ds:[esi]
  432c33:	mov    al,al
  432c35:	push   ebx
  432c36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432c37:	pop    eax
  432c38:	mov    eax,0xb9987
  432c3d:	sub    BYTE PTR [edx+ebp*8],dh
  432c40:	pop    ebx
  432c41:	lds    ecx,FWORD PTR [ebx+ecx*8+0x7a814037]
  432c48:	or     eax,0xb60fc7fd
  432c4d:	add    BYTE PTR [edi-0x4afff467],al
  432c53:	cmp    edi,DWORD PTR [esi+0x42]
  432c56:	push   esi
  432c57:	and    ch,BYTE PTR ds:0x23cfff2c
  432c5d:	and    eax,0x88f1420d
  432c62:	les    ebx,FWORD PTR [edx+0x2c]
  432c65:	cld    
  432c66:	call   0x828c98c5
  432c6b:	mov    ebx,0x5bd63037
  432c70:	mov    ecx,0x239ad053
  432c75:	in     eax,0x5f
  432c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432c78:	ins    BYTE PTR es:[edi],dx
  432c79:	ds sahf 
  432c7b:	ret    
  432c7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432c7d:	or     BYTE PTR [ecx],al
  432c7f:	add    ch,dl
  432c81:	push   esp
  432c82:	inc    edi
  432c83:	add    cl,dl
  432c85:	add    eax,DWORD PTR [esi+0x4630e142]
  432c8b:	or     BYTE PTR [edi+ebx*8-0x33],ch
  432c8f:	sbb    esp,0x3d
  432c92:	push   esi
  432c93:	mov    ecx,0x7f53f826
  432c98:	out    dx,eax
  432c99:	dec    BYTE PTR [eax]
  432c9b:	and    eax,0xbb47895d
  432ca0:	mov    esp,0x15100b07
  432ca5:	add    DWORD PTR [edx+esi*2-0x4f],edx
  432ca9:	sub    BYTE PTR [edi+0x7eebb310],bh
  432caf:	xchg   edi,eax
  432cb0:	dec    eax
  432cb1:	cmc    
  432cb2:	add    BYTE PTR [ebx],cl
  432cb4:	cmc    
  432cb5:	sub    al,0x81
  432cb7:	ret    0xc35
  432cba:	sti    
  432cbb:	pop    edx
  432cbc:	pop    esi
  432cbd:	ins    BYTE PTR es:[edi],dx
  432cbe:	inc    ecx
  432cbf:	jp     0x432c7c
  432cc1:	mov    bh,0x2f
  432cc3:	push   edi
  432cc4:	pop    ebx
  432cc5:	sub    BYTE PTR [ecx+ecx*2-0x66],dl
  432cc9:	pop    es
  432cca:	out    0xaf,al
  432ccc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432ccd:	ins    BYTE PTR es:[edi],dx
  432cce:	dec    esi
  432ccf:	pop    esi
  432cd0:	ret    
  432cd1:	sbb    eax,0xb1280908
  432cd6:	push   esp
  432cd7:	add    DWORD PTR [eax],edx
  432cd9:	or     al,ch
  432cdb:	push   esi
  432cdc:	adc    BYTE PTR [eax+0x62],0xa9
  432ce0:	or     cl,bl
  432ce2:	jb     0x432ca7
  432ce4:	pop    edx
  432ce5:	or     DWORD PTR [edi],ebp
  432ce7:	mov    dl,0x6d
  432ce9:	dec    eax
  432cea:	sbb    ecx,esp
  432cec:	inc    ebx
  432ced:	(bad)  
  432cee:	daa    
  432cef:	mov    dl,0x42
  432cf1:	or     ch,cl
  432cf3:	test   DWORD PTR [edi-0x6d60f2a8],edi
  432cf9:	jnp    0x432ce7
  432cfb:	xchg   BYTE PTR [ebp-0x7f],dh
  432cfe:	pop    ss
  432cff:	sahf   
  432d00:	or     edi,DWORD PTR [ebx]
  432d02:	test   eax,0x3ce5bfdb
  432d07:	inc    edi
  432d08:	ja     0x432cc8
  432d0a:	cmp    al,0xff
  432d0c:	xchg   esi,eax
  432d0d:	and    DWORD PTR [edx+edi*2],0x27
  432d11:	fidivr WORD PTR [ecx-0x11353e2e]
  432d17:	add    BYTE PTR [ecx-0x7a16e452],bl
  432d1d:	mov    edi,0xab88cd72
  432d22:	jmp    FWORD PTR [esp+ebp*8+0x37]
  432d26:	or     ch,cl
  432d28:	push   es
  432d29:	sub    edi,esi
  432d2b:	call   0xfb12ebba
  432d30:	test   DWORD PTR [edx-0x75],eax
  432d33:	add    DWORD PTR [edx+0x5d6a0431],ecx
  432d39:	ds or  ah,dh
  432d3c:	push   eax
  432d3d:	xchg   edx,eax
  432d3e:	sbb    ebp,ecx
  432d40:	test   DWORD PTR [edi],esp
  432d42:	das    
  432d43:	repnz xor BYTE PTR [eax-0x39],al
  432d47:	out    0x81,al
  432d49:	inc    edx
  432d4a:	or     ch,cl
  432d4c:	(bad)  
  432d4d:	cli    
  432d4e:	std    
  432d4f:	popa   
  432d50:	xchg   ebp,eax
  432d51:	mov    ebp,0xba77003d
  432d56:	inc    edx
  432d57:	adc    BYTE PTR [ecx+eax*1],dl
  432d5a:	push   es
  432d5b:	push   ebx
  432d5c:	and    al,0xe
  432d5e:	xor    cl,BYTE PTR [ecx+0x4587ade2]
  432d64:	aas    
  432d65:	and    eax,0x29f45609
  432d6a:	mov    DWORD PTR cs:[edx+0x575587ae],ebp
  432d71:	daa    
  432d72:	inc    ebx
  432d73:	loopne 0x432da5
  432d75:	sti    
  432d76:	rol    DWORD PTR [eax],1
  432d78:	outs   dx,DWORD PTR ds:[esi]
  432d79:	inc    ecx
  432d7a:	or     al,BYTE PTR [ebx+0x1501700]
  432d80:	xchg   DWORD PTR [edi+0x4c],edi
  432d83:	or     al,BYTE PTR [eax]
  432d85:	call   0x4d17b8e3
  432d8a:	cld    
  432d8b:	or     DWORD PTR [ebx-0x3f7359a0],ecx
  432d91:	xchg   edx,eax
  432d92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432d93:	retf   0x1b07
  432d96:	inc    ecx
  432d97:	or     al,BYTE PTR [eax]
  432d99:	div    BYTE PTR [ecx-0x43e00001]
  432d9f:	hlt    
  432da0:	adc    BYTE PTR [edi+ebx*2],cl
  432da3:	ins    DWORD PTR es:[edi],dx
  432da4:	jge    0x432e11
  432da6:	add    DWORD PTR ds:[esp+esi*1-0x17fff5b1],eax
  432dae:	jmp    0xce85:0x950afef0
  432db5:	jl     0x432d55
  432db7:	xor    BYTE PTR [ebx+0x5588a6a1],al
  432dbd:	xchg   edi,eax
  432dbe:	cmp    eax,0x4e9983d2
  432dc3:	pusha  
  432dc4:	fisub  WORD PTR [ecx+0x130201f9]
  432dca:	jae    0x432e3b
  432dcc:	sti    
  432dcd:	xchg   BYTE PTR [eax+esi*2+0x31ce8600],ch
  432dd4:	data16 xchg cl,dl
  432dd7:	or     esp,DWORD PTR [esi-0x7a]
  432dda:	push   ebx
  432ddb:	pop    ebx
  432ddc:	pop    ss
  432ddd:	xchg   BYTE PTR [ebx+0x6e00416e],bl
  432de3:	rol    DWORD PTR ds:0x618dd38b,0x87
  432dea:	(bad)  [ebp+0x70]
  432ded:	push   ecx
  432dee:	mov    gs,WORD PTR [edx+0x58]
  432df1:	call   0x4ee0b5
  432df6:	or     eax,0x3d2dde47
  432dfb:	xor    eax,DWORD PTR [eax+ebx*1-0x6b]
  432dff:	jecxz  0x432dc5
  432e01:	add    DWORD PTR [edi+0x2f000b99],eax
  432e07:	sub    edx,DWORD PTR [esi]
  432e09:	add    BYTE PTR [esi+0x49204430],al
  432e0f:	push   ebp
  432e10:	push   ss
  432e11:	add    BYTE PTR [esi+0x46830b99],al
  432e17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432e18:	add    al,0xc1
  432e1a:	(bad)  
  432e1b:	jmp    0x2d55281c
  432e20:	icebp  
  432e21:	inc    ecx
  432e22:	jle    0x432dbe
  432e24:	or     al,0x84
  432e26:	pop    ss
  432e27:	call   0xbfc8:0xcb89000b
  432e2e:	out    0xa1,al
  432e30:	jo     0x432df7
  432e32:	mov    DWORD PTR [edx],0xa8c6fcf3
  432e38:	aad    0xb7
  432e3a:	jns    0x432dd5
  432e3c:	or     eax,DWORD PTR [eax]
  432e3e:	fldcw  WORD PTR [edx-0x7e]
  432e41:	into   
  432e42:	push   ebx
  432e43:	in     al,dx
  432e44:	jo     0x432e13
  432e46:	add    BYTE PTR [esi],al
  432e48:	inc    ebx
  432e49:	add    eax,DWORD PTR [edx]
  432e4b:	push   es
  432e4c:	test   eax,0xb78077f9
  432e51:	sahf   
  432e52:	sti    
  432e53:	add    cl,BYTE PTR [esi]
  432e55:	sbb    edx,ecx
  432e57:	inc    esi
  432e58:	dec    edx
  432e59:	popf   
  432e5a:	js     0x432ea2
  432e5c:	inc    edx
  432e5d:	sbb    bh,BYTE PTR [ecx]
  432e5f:	add    DWORD PTR [edx-0x1f],0x225e477e
  432e66:	fimul  WORD PTR [edx+0x5985bcb7]
  432e6c:	xor    esp,DWORD PTR [edx+eiz*8-0x76]
  432e70:	mov    edi,0x8204fca2
  432e75:	push   esi
  432e76:	cs or  ebx,esi
  432e79:	cld    
  432e7a:	lods   eax,DWORD PTR ds:[esi]
  432e7b:	pop    ecx
  432e7c:	mov    ds:0x42e803e1,eax
  432e81:	xchg   esp,eax
  432e82:	out    0xe0,al
  432e84:	inc    edx
  432e85:	dec    ebx
  432e86:	add    al,0x9
  432e88:	or     ebp,ebp
  432e8a:	fstp   TBYTE PTR [eax+0xb03e14f]
  432e90:	cmc    
  432e91:	call   0xa2ee0412
  432e96:	fisttp QWORD PTR [esi+0x3b8594ab]
  432e9c:	inc    eax
  432e9d:	fs mov ebp,0xc20b989
  432ea3:	add    DWORD PTR [ecx],eax
  432ea5:	mov    cl,0x7a
  432ea7:	lahf   
  432ea8:	outs   dx,DWORD PTR ds:[esi]
  432ea9:	dec    esp
  432eaa:	xor    eax,0x3e98f400
  432eaf:	adc    al,0x86
  432eb1:	inc    edx
  432eb2:	sbb    al,0xbc
  432eb4:	je     0x432f33
  432eb6:	ins    BYTE PTR es:[edi],dx
  432eb7:	push   edi
  432eb8:	ficomp WORD PTR [eax+0x42861412]
  432ebe:	jl     0x432f17
  432ec0:	jle    0x432f3d
  432ec2:	or     ch,BYTE PTR [ebx-0x568b0183]
  432ec8:	test   DWORD PTR [ebp+0x7add2155],edi
  432ece:	sbb    ch,cl
  432ed0:	test   DWORD PTR ds:0x4432f9f0,esp
  432ed6:	mov    ecx,DWORD PTR [ecx+esi*4+0x746cff41]
  432edd:	xor    ecx,DWORD PTR [edx]
  432edf:	jmp    0xf6501f6a
  432ee4:	dec    eax
  432ee5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432ee6:	sbb    DWORD PTR [edi],0x5b
  432ee9:	mov    ds:0x4b4f6a4c,eax
  432eee:	xor    DWORD PTR [edx+eiz*2],0x776ad7a0
  432ef5:	xor    edi,DWORD PTR [edi+ebp*4-0x24]
  432ef9:	sti    
  432efa:	sbb    DWORD PTR [ecx+0x6a],ebp
  432efd:	dec    ebx
  432efe:	jmp    DWORD PTR [ebx-0x2f]
  432f01:	xor    cl,BYTE PTR [edx]
  432f03:	jmp    0xc94e0f56
  432f08:	test   DWORD PTR [edx+0x76],eax
  432f0b:	idiv   BYTE PTR [edx+0xa60205]
  432f11:	lds    edi,FWORD PTR [edx]
  432f13:	inc    esi
  432f14:	sbb    al,0xc2
  432f16:	inc    edx
  432f17:	loope  0x432f27
  432f19:	jp     0x432f5d
  432f1b:	or     dh,BYTE PTR [edx-0x32]
  432f1e:	bound  eax,QWORD PTR [ebp-0x7cb76657]
  432f24:	mov    ds:0x6a02aa44,al
  432f29:	in     al,0xa1
  432f2b:	xor    cl,0xfe
  432f2e:	add    ebx,DWORD PTR [edx]
  432f30:	jmp    0xdd4d71c0
  432f35:	xchg   edi,eax
  432f36:	retf   0x3d4d
  432f39:	les    esp,FWORD PTR [edi+0x47b50002]
  432f3f:	adc    DWORD PTR [ebp+0x43],0x1d
  432f43:	push   ebx
  432f44:	in     eax,dx
  432f45:	or     dl,BYTE PTR fs:[edx]
  432f48:	push   edx
  432f49:	pop    ds
  432f4a:	jle    0x432f48
  432f4c:	pop    ss
  432f4d:	scas   eax,DWORD PTR es:[edi]
  432f4e:	inc    ebp
  432f4f:	test   DWORD PTR [ebp+0x67],edx
  432f52:	sbb    al,0x49
  432f54:	sbb    ah,cl
  432f56:	mov    ds,WORD PTR ds:0xf04a68f6
  432f5c:	jmp    FWORD PTR [edi+0x1c05e545]
  432f62:	xchg   ebx,eax
  432f63:	sub    dh,BYTE PTR [ebx-0x43]
  432f66:	(bad)  
  432f67:	jae    0x432f65
  432f69:	outs   dx,DWORD PTR ds:[esi]
  432f6a:	inc    edx
  432f6b:	xchg   BYTE PTR [eax+0xf0a457f],dl
  432f71:	sbb    DWORD PTR [ecx+esi*8+0x4d],eax
  432f75:	add    BYTE PTR [ebx+0x1d],dl
  432f78:	(bad)  
  432f79:	ror    DWORD PTR [edi+0x4],cl
  432f7c:	ins    DWORD PTR es:[edi],dx
  432f7d:	(bad)  
  432f7e:	push   edi
  432f7f:	push   ds
  432f80:	pop    ebx
  432f81:	clc    
  432f82:	pop    esp
  432f83:	lea    ebp,[ebp-0x2]
  432f86:	jg     0x432f9c
  432f88:	aam    0x8b
  432f8a:	push   0x9bc08b66
  432f8f:	inc    ebp
  432f90:	xchg   DWORD PTR [eax+0x2b],ebx
  432f93:	cwde   
  432f94:	dec    ecx
  432f95:	adc    BYTE PTR [edi],bl
  432f97:	inc    ebx
  432f98:	or     al,BYTE PTR [eax]
  432f9a:	jnp    0x432fdc
  432f9c:	sbb    BYTE PTR [ebp-0xd],0x1c
  432fa0:	lds    ecx,FWORD PTR [ebx+0x8e786ec]
  432fa6:	fidivr WORD PTR [ebx+0x1a]
  432fa9:	rol    DWORD PTR [esi+ecx*2],0x68
  432fad:	add    al,0x72
  432faf:	or     ebx,esi
  432fb1:	mov    BYTE PTR [edx],ah
  432fb3:	mov    ds:0x9865582,al
  432fb8:	outs   dx,BYTE PTR ds:[esi]
  432fb9:	pop    ebx
  432fba:	icebp  
  432fbb:	and    ebp,DWORD PTR [edi]
  432fbd:	sbb    BYTE PTR [esi],dh
  432fbf:	mov    edx,0xab797ed3
  432fc4:	or     eax,DWORD PTR [ebp+0x416d5333]
  432fca:	sahf   
  432fcb:	pushf  
  432fcc:	les    ebp,FWORD PTR ds:0xfd076fb0
  432fd2:	mov    cl,0xaa
  432fd4:	or     esp,ebp
  432fd6:	sub    DWORD PTR [eax+eiz*8],0x10
  432fda:	add    BYTE PTR ds:0x9a7b8c8d,dl
  432fe0:	stos   BYTE PTR es:[edi],al
  432fe1:	lock xor DWORD PTR [edx+0x7b],0xb
  432fe6:	add    BYTE PTR [ecx+0x61],bh
  432fe9:	or     al,0xf9
  432feb:	shr    DWORD PTR [ebp-0x75aa358c],cl
  432ff1:	dec    ecx
  432ff2:	jge    0x43303c
  432ff4:	xchg   edx,eax
  432ff5:	outs   dx,BYTE PTR ds:[esi]
  432ff6:	push   ebx
  432ff7:	outs   dx,BYTE PTR ds:[esi]
  432ff8:	lods   eax,DWORD PTR ds:[esi]
  432ff9:	ret    
  432ffa:	jge    0x43305c
  432ffc:	call   0x8326:0x710dda79
  433003:	inc    esi
  433004:	push   esi
  433005:	sbb    BYTE PTR [ebp-0x619d4c3],al
  43300b:	xchg   BYTE PTR [ecx-0x6e3178f5],ch
  433011:	je     0x43305c
  433013:	data16 adc al,0xcc
  433016:	mov    edi,0x3f6ea21e
  43301b:	xchg   edx,eax
  43301c:	mov    eax,0xab861048
  433021:	or     eax,DWORD PTR [eax]
  433023:	call   0xd4eb:0x1a5b737f
  43302a:	or     BYTE PTR [ebx+ebp*4-0x76],ch
  43302e:	push   ebx
  43302f:	jmp    0xa8cb:0xdd507942
  433036:	or     edi,DWORD PTR [eax]
  433038:	repnz dec eax
  43303a:	cli    
  43303b:	jbe    0x43307f
  43303d:	loope  0x4330b9
  43303f:	add    BYTE PTR ds:0x6e467a9a,dh
  433045:	push   ebx
  433046:	sub    al,0x32
  433048:	aam    0x87
  43304a:	loopne 0x433053
  43304c:	xchg   BYTE PTR [edx-0x1f],al
  43304f:	test   BYTE PTR [edi+0x32],0xe1
  433053:	pop    es
  433054:	xchg   BYTE PTR [edx-0x6b],al
  433057:	sub    esp,DWORD PTR fs:[eax-0x3c7f8d0f]
  43305e:	jle    0x43304f
  433060:	xchg   BYTE PTR [edi+0x5d],cl
  433063:	lea    edi,[edi+0x42]
  433066:	loope  0x433066
  433068:	xlat   BYTE PTR ds:[ebx]
  433069:	inc    esp
  43306a:	clc    
  43306b:	aas    
  43306c:	or     bl,0xf
  43306f:	shl    BYTE PTR [esi+0x4],cl
  433072:	fs (bad) 
  433074:	jle    0x43303f
  433076:	ss in  al,dx
  433078:	imul   esi,DWORD PTR [edi+0x64],0xffffffee
  43307c:	jbe    0x433092
  43307e:	lahf   
  43307f:	jns    0x433048
  433081:	bound  edi,QWORD PTR [edx+0x4d]
  433084:	mov    ch,0xa1
  433087:	js     0x4330d4
  433089:	retf   0x1819
  43308c:	aaa    
  43308d:	pop    es
  43308e:	rol    DWORD PTR [ebx],1
  433090:	cmp    BYTE PTR [edi-0x3573881f],bl
  433096:	cs loopne 0x433082
  433099:	stos   BYTE PTR es:[edi],al
  43309a:	jmp    0xf1150f8
  43309f:	loopne 0x4330af
  4330a1:	std    
  4330a2:	xchg   ebp,eax
  4330a3:	jns    0x4330a5
  4330a5:	mov    bh,0x3a
  4330a7:	adc    dl,BYTE PTR [edx+0x1e]
  4330aa:	mov    ebp,0x4285df0a
  4330af:	adc    DWORD PTR [edx+ebp*8],0xffffffc6
  4330b3:	inc    edi
  4330b4:	add    DWORD PTR [edi-0x30a8c48b],esi
  4330ba:	dec    ebx
  4330bb:	sub    DWORD PTR [esi-0x2a353c5b],0xffffff82
  4330c2:	or     DWORD PTR [edx-0x27],0xe90a4285
  4330c9:	ret    0x540
  4330cc:	jmp    0xa73a7356
  4330d1:	xchg   ebp,eax
  4330d2:	inc    edx
  4330d3:	push   es
  4330d4:	jmp    0x76c97a5e
  4330d9:	add    BYTE PTR [edx+0xa],0x62
  4330dd:	dec    ebx
  4330de:	add    al,BYTE PTR [ebx+0x45c6a99c]
  4330e4:	std    
  4330e5:	pop    esi
  4330e6:	fistp  QWORD PTR [eax-0x1c]
  4330e9:	push   cs
  4330ea:	fild   WORD PTR [ecx-0x353d865c]
  4330f0:	fiadd  WORD PTR [ecx]
  4330f2:	xor    BYTE PTR [edx],cl
  4330f4:	jmp    0x982f87e
  4330f9:	add    DWORD PTR [esi+0x5df1776],eax
  4330ff:	sbb    ah,BYTE PTR [eax-0x68]
  433102:	jbe    0x433089
  433104:	mov    al,0xd9
  433106:	push   esi
  433107:	adc    DWORD PTR [esi],0x0
  43310a:	mov    ds:0x9edd44c7,al
  43310f:	or     ecx,DWORD PTR [edx+0x62]
  433112:	xlat   BYTE PTR ds:[ebx]
  433113:	cmp    al,BYTE PTR [ecx-0x385fe1cc]
  433119:	loop   0x43310a
  43311b:	adc    BYTE PTR ds:0x83a6b8c2,al
  433121:	stos   DWORD PTR es:[edi],eax
  433122:	sahf   
  433123:	icebp  
  433124:	icebp  
  433125:	add    BYTE PTR [edi+0x1b],ch
  433128:	dec    ebx
  433129:	aam    0x1c
  43312b:	add    eax,0x7e9f52e6
  433130:	mov    gs,edx
  433132:	push   0x534585ae
  433137:	sbb    bl,BYTE PTR [ebx-0x8]
  43313a:	pop    esp
  43313b:	test   esi,edi
  43313d:	div    BYTE PTR [eax]
  43313f:	xor    cl,BYTE PTR [edx]
  433141:	add    ch,bh
  433143:	inc    ecx
  433144:	jbe    0x433160
  433146:	push   esp
  433147:	hlt    
  433148:	cmc    
  433149:	mov    esp,DWORD PTR [edx]
  43314b:	stos   BYTE PTR es:[edi],al
  43314c:	test   DWORD PTR [edi-0x29],ecx
  43314f:	repz pop ecx
  433151:	push   ecx
  433152:	inc    edi
  433153:	xchg   esi,eax
  433154:	sbb    eax,DWORD PTR [eax]
  433156:	lahf   
  433157:	sbb    bl,BYTE PTR [ebx-0x8]
  43315a:	ss push es
  43315c:	adc    cl,BYTE PTR [ebx+0x452795f2]
  433162:	mov    eax,DWORD PTR [edx-0x26]
  433165:	sub    eax,esp
  433167:	add    DWORD PTR [edi+0x71c28755],eax
  43316d:	inc    eax
  43316e:	add    BYTE PTR [edi-0x62],ch
  433171:	mov    WORD PTR [ecx+ebx*2-0x5f38f5bf],ss
  433178:	push   es
  433179:	or     al,BYTE PTR [eax]
  43317b:	pop    edi
  43317c:	inc    ecx
  43317d:	leave  
  43317e:	pop    es
  43317f:	jno    0x4331c2
  433181:	or     al,BYTE PTR [eax]
  433183:	xor    BYTE PTR [ecx],al
  433185:	sbb    al,BYTE PTR [eax]
  433187:	push   edi
  433188:	inc    ecx
  433189:	or     cl,BYTE PTR [edi]
  43318b:	jecxz  0x43314e
  43318d:	or     al,BYTE PTR [eax]
  43318f:	das    
  433190:	les    esi,FWORD PTR [ebx-0x4]
  433193:	das    
  433194:	cwde   
  433195:	mov    esi,DWORD PTR [eax+0x39]
  433198:	inc    ecx
  433199:	or     dh,BYTE PTR [ebx]
  43319b:	fistp  WORD PTR [edx]
  43319d:	inc    edi
  43319e:	add    BYTE PTR [esi+0x760cb9a4],al
  4331a4:	imul   ebp,DWORD PTR [ebp+0x43],0x1a
  4331a8:	adc    BYTE PTR [ebx+0x20],cl
  4331ab:	jmp    FWORD PTR [ebp-0x16]
  4331ae:	add    esi,0xffffff9e
  4331b1:	test   DWORD PTR es:[esi-0x71],ecx
  4331b5:	outs   dx,BYTE PTR ds:[esi]
  4331b6:	dec    ebx
  4331b7:	fisubr DWORD PTR ds:0x109174ad
  4331bd:	xor    eax,DWORD PTR [eax-0x63]
  4331c0:	jecxz  0x4331ed
  4331c2:	ins    DWORD PTR es:[edi],dx
  4331c3:	mov    DWORD PTR [eax],esp
  4331c5:	pop    ecx
  4331c6:	aam    0xfc
  4331c8:	in     eax,dx
  4331c9:	iret   
  4331ca:	mov    BYTE PTR [edx+0x4641e491],al
  4331d0:	and    BYTE PTR [ecx-0x8],bl
  4331d3:	add    BYTE PTR ds:0x3a00cfee,al
  4331d9:	xchg   ebx,eax
  4331da:	jo     0x43321f
  4331dc:	mov    dl,0x9f
  4331de:	dec    edx
  4331df:	cld    
  4331e0:	adc    al,0xf4
  4331e2:	cli    
  4331e3:	inc    ecx
  4331e4:	jbe    0x433191
  4331e6:	add    eax,0x1c1f8600
  4331eb:	test   DWORD PTR [ebx],edi
  4331ed:	xchg   edi,eax
  4331ee:	jo     0x433243
  4331f0:	jle    0x433213
  4331f2:	dec    ebx
  4331f3:	sbb    bh,dl
  4331f5:	mov    bh,0x5b
  4331f7:	call   0x4ed0d7
  4331fc:	std    
  4331fd:	push   esi
  4331fe:	fiadd  WORD PTR [edi+0x437091c9]
  433204:	push   edx
  433205:	inc    ebx
  433206:	dec    ecx
  433207:	cld    
  433208:	test   DWORD PTR [ecx-0x559d8478],edi
  43320e:	outs   dx,BYTE PTR ds:[esi]
  43320f:	push   ebx
  433210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433212:	mov    dh,bl
  433214:	mov    ebp,DWORD PTR [ecx+0x4280e50b]
  43321a:	jl     0x43325e
  43321c:	lds    sp,DWORD PTR [ecx+0x2183876f]
  433223:	or     BYTE PTR [esi+0x4703e142],al
  433229:	add    al,0x21
  43322b:	add    al,0x86
  43322d:	inc    edx
  43322e:	loope  0x4331f2
  433230:	xchg   DWORD PTR [ebx-0x1f],eax
  433233:	add    eax,DWORD PTR [esi+0x142893]
  433239:	xchg   BYTE PTR [edx],dh
  43323b:	loope  0x433240
  43323d:	jg     0x433205
  43323f:	jns    0x433244
  433241:	xchg   BYTE PTR [edx+0x64],al
  433244:	push   0x7fd042da
  433249:	adc    DWORD PTR [esi-0x1f],ecx
  43324c:	add    ebx,DWORD PTR [ebx+0x6a5f5e82]
  433252:	inc    edx
  433253:	call   0xa175bd09
  433258:	jl     0x43329f
  43325a:	xchg   esi,eax
  43325b:	jl     0x43329f
  43325d:	leavew 
  43325f:	sahf   
  433260:	fild   WORD PTR ds:0x3248d83
  433266:	or     eax,ebp
  433268:	jl     0x4332a7
  43326a:	jbe    0x4332ca
  43326c:	mov    esp,0x3a7c3312
  433271:	(bad)  
  433272:	push   edi
  433273:	test   eax,0x6c4beb1b
  433278:	push   eax
  433279:	pop    edx
  43327a:	enter  0xe01e,0xfe
  43327e:	inc    ebp
  43327f:	sti    
  433280:	call   0x4faf354c
  433285:	pop    esi
  433286:	mov    edi,0x1686e03e
  43328b:	stc    
  43328c:	jl     0x433253
  43328e:	xchg   esi,eax
  43328f:	or     al,0x3f
  433291:	inc    edx
  433292:	adc    BYTE PTR [edx],cl
  433294:	jbe    0x4332cd
  433296:	add    DWORD PTR [edx],ebx
  433298:	jmp    0x1d4d7528
  43329d:	add    BYTE PTR [edi-0x5c6ac23b],dl
  4332a3:	out    dx,eax
  4332a4:	icebp  
  4332a5:	(bad)  
  4332a6:	(bad)  
  4332a7:	cmp    bl,BYTE PTR [ecx+0x3b]
  4332aa:	mov    edx,0x85dda5aa
  4332af:	inc    edx
  4332b0:	adc    DWORD PTR [edx+esi*8],0xffffffc2
  4332b4:	inc    edi
  4332b5:	sar    DWORD PTR [edx-0x1],1
  4332b8:	cmc    
  4332b9:	shl    BYTE PTR [eax+0x3390b9e],0x17
  4332c0:	out    0xe9,al
  4332c2:	pop    esp
  4332c3:	out    dx,eax
  4332c4:	icebp  
  4332c5:	out    0x58,al
  4332c7:	(bad)  
  4332c8:	cld    
  4332c9:	call   0x7243d853
  4332ce:	inc    edi
  4332cf:	bound  eax,QWORD PTR [ebp-0x38bec9d7]
  4332d5:	test   eax,0xe90a4299
  4332da:	test   DWORD PTR [ecx+0x4285f107],eax
  4332e0:	or     dl,BYTE PTR [esi]
  4332e2:	inc    edi
  4332e3:	xor    cl,BYTE PTR [edx]
  4332e5:	jmp    0x43326c
  4332e7:	inc    edx
  4332e8:	jbe    0x4332b6
  4332ea:	or     bl,BYTE PTR [eax-0x389285e6]
  4332f0:	xchg   ebx,eax
  4332f1:	jmp    0x6a4d757b
  4332f6:	loope  0x43328e
  4332f8:	or     bl,dh
  4332fa:	icebp  
  4332fb:	dec    ecx
  4332fc:	std    
  4332fd:	call   0xebfb7e87
  433302:	add    BYTE PTR [esi+0xe],ch
  433305:	out    dx,al
  433306:	bound  ebx,QWORD PTR [edi]
  433308:	mov    dl,ch
  43330a:	sub    ecx,DWORD PTR [ebx]
  43330c:	test   DWORD PTR [edx],eax
  43330e:	add    dh,dl
  433310:	or     dl,dh
  433312:	add    esp,edi
  433314:	mov    esi,0x8c7d10f4
  433319:	add    DWORD PTR [edi-0x26cab970],esi
  43331f:	xor    BYTE PTR [ecx],bl
  433321:	cmc    
  433322:	sti    
  433323:	add    BYTE PTR [ebx-0x6bc324e3],ch
  433329:	test   DWORD PTR [edi+0x3f],eax
  43332c:	sbb    edx,ecx
  43332e:	je     0x433359
  433330:	pop    ss
  433331:	inc    ecx
  433332:	adc    BYTE PTR [esi],ch
  433334:	lods   eax,DWORD PTR ds:[esi]
  433335:	pop    es
  433336:	or     DWORD PTR [esi],0x45
  433339:	xchg   DWORD PTR [eax+0x33],ecx
  43333c:	pop    ss
  43333d:	pop    ecx
  43333e:	and    BYTE PTR [eax-0x10fec601],bl
  433344:	inc    ebp
  433345:	or     ch,BYTE PTR [edx-0x11]
  433348:	test   DWORD PTR [ecx],0xc7ddf6a
  43334e:	adc    al,0xdf
  433350:	inc    ebp
  433351:	test   DWORD PTR [ebp-0x49],ecx
  433354:	push   ss
  433355:	pop    ebx
  433356:	clc    
  433357:	add    dl,BYTE PTR es:[edx]
  43335a:	mov    esi,ebx
  43335c:	push   ebp
  43335d:	leave  
  43335e:	pop    es
  43335f:	mov    ah,0x45
  433361:	or     al,BYTE PTR [eax]
  433363:	jbe    0x4333b6
  433365:	(bad)  
  433366:	inc    DWORD PTR [eax]
  433368:	scas   eax,DWORD PTR es:[edi]
  433369:	mov    esi,0x5fec20f4
  43336e:	ins    DWORD PTR es:[edi],dx
  43336f:	jge    0x4332f4
  433371:	inc    ebp
  433372:	add    DWORD PTR [esp+eiz*8+0x60ffef91],eax
  433379:	shl    eax,cl
  43337b:	(bad)  
  43337c:	adc    ah,BYTE PTR [ecx-0x61d3317b]
  433382:	xor    BYTE PTR [ebx+0x55889629],al
  433388:	xchg   BYTE PTR [ebx+0xb],dh
  43338b:	fadd   DWORD PTR ds:0x286e2689
  433391:	adc    al,0xb3
  433393:	test   DWORD PTR [ebp-0x16],eax
  433396:	out    0x10,al
  433398:	pop    es
  433399:	mov    al,BYTE PTR [esi]
  43339b:	stc    
  43339c:	xchg   BYTE PTR [ebx-0x140237f4],ch
  4333a2:	(bad)
  4333a5:	jmp    0xe8:0xab6308e5
  4333ac:	xchg   BYTE PTR [esi+eax*8-0x396c447b],ch
  4333b3:	in     eax,0x9e
  4333b5:	lods   al,BYTE PTR ds:[esi]
  4333b6:	int3   
  4333b7:	xchg   DWORD PTR [ecx+0x73],eax
  4333ba:	outs   dx,BYTE PTR ds:[esi]
  4333bb:	aas    
  4333bc:	mov    dh,0xdc
  4333be:	les    ebp,FWORD PTR ds:0x5ef67f0
  4333c4:	xchg   BYTE PTR [ebx-0x60a682f5],ch
  4333ca:	or     ecx,DWORD PTR [ecx]
  4333cc:	add    BYTE PTR [edx],cl
  4333ce:	or     ebx,esi
  4333d0:	dec    ecx
  4333d2:	je     0x4333df
  4333d4:	data16 xchg BYTE PTR [ebp+0xb],dh
  4333d8:	call   0x4ed528
  4333dd:	std    
  4333de:	lods   eax,DWORD PTR ds:[esi]
  4333df:	xrelease xchg BYTE PTR [ecx+0x43],al
  4333e3:	ins    DWORD PTR es:[edi],dx
  4333e4:	ds push esi
  4333e6:	adc    al,0x59
  4333e8:	clc    
  4333e9:	shl    DWORD PTR [edi-0x556e000c],0x8c
  4333f0:	jnp    0x43346c
  4333f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4333f3:	clc    
  4333f4:	and    DWORD PTR [edx+0x5000ba5],0xf
  4333fb:	test   DWORD PTR [ecx],0xc1c1d81
  433401:	xchg   BYTE PTR [edx-0x1f],al
  433404:	sbb    bh,0x3e
  433407:	loope  0x433478
  433409:	jb     0x4333d6
  43340b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43340c:	xor    BYTE PTR [ecx],0x40
  43340f:	mov    ah,0xda
  433411:	mov    ds:0x9bfea091,eax
  433416:	inc    edx
  433417:	loope  0x43341c
  433419:	and    DWORD PTR [ebp-0x3c79fc14],edi
  43341f:	lahf   
  433420:	add    bl,BYTE PTR [ebx+0xcfd9c6c]
  433426:	mov    esp,0x428603e1
  43342b:	fs push 0x7fd04312
  433431:	add    BYTE PTR [ecx],ch
  433433:	dec    esp
  433434:	loope  0x433439
  433436:	(bad)  
  433437:	shl    bl,1
  433439:	out    0x4d,al
  43343b:	xchg   esi,eax
  43343c:	ins    BYTE PTR es:[edi],dx
  43343d:	mov    ch,0xc3
  43343f:	mov    ds:0x4ac48323,al
  433444:	jp     0x433496
  433446:	fiadd  WORD PTR [ebx+0x49]
  433449:	sbb    ah,0x43
  43344c:	rol    ebp,cl
  43344e:	or     ecx,DWORD PTR [edx+esi*1+0x648403da]
  433455:	in     al,0xc1
  433457:	les    eax,FWORD PTR [ecx+0x2]
  43345a:	add    DWORD PTR [eax],ecx
  43345c:	fld    QWORD PTR [edx+0x4eb843ae]
  433462:	scas   eax,DWORD PTR es:[edi]
  433463:	pop    esi
  433464:	pop    esi
  433465:	push   ebx
  433466:	push   0x3
  433468:	loope  0x43342e
  43346a:	mov    ds:0x7cfe2044,eax
  43346f:	inc    edx
  433470:	loope  0x433475
  433472:	or     ebp,DWORD PTR [eax+0x4bbfdce4]
  433478:	loope  0x43347d
  43347a:	add    edi,DWORD PTR [edi+0xa]
  43347d:	add    esp,ebp
  43347f:	xchg   ecx,eax
  433480:	out    dx,eax
  433481:	out    dx,al
  433482:	pop    es
  433483:	sbb    edi,esi
  433485:	out    dx,al
  433486:	and    al,BYTE PTR [ecx+0x1b]
  433489:	jmp    0x5b87713
  43348e:	inc    ebp
  43348f:	popf   
  433490:	or     al,0x6a
  433492:	xor    BYTE PTR [ebp+0x3f0046e2],dl
  433498:	xchg   edi,eax
  433499:	out    dx,eax
  43349a:	test   al,0x5f
  43349c:	cwde   
  43349d:	enter  0x95ee,0x42
  4334a1:	or     ch,cl
  4334a3:	push   es
  4334a4:	lods   al,BYTE PTR ds:[esi]
  4334a5:	or     edx,DWORD PTR [eax-0x16f5c286]
  4334ab:	sahf   
  4334ac:	add    eax,DWORD PTR [edx]
  4334ae:	scas   al,BYTE PTR es:[edi]
  4334af:	retf   0x463a
  4334b2:	adc    al,0xc2
  4334b4:	inc    edx
  4334b5:	(bad)  
  4334b6:	out    dx,al
  4334b7:	mov    BYTE PTR [edx+0xa],al
  4334ba:	jmp    0x6a4fd183
  4334bf:	fcom   DWORD PTR [edx+eiz*8-0x1069138c]
  4334c6:	jb     0x4334e0
  4334c8:	adc    eax,0xa77ee6e9
  4334cd:	fild   DWORD PTR [edx+0x7]
  4334d0:	pushf  
  4334d1:	sub    bl,dl
  4334d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4334d4:	adc    eax,0x498a456d
  4334d9:	xchg   BYTE PTR [edx],al
  4334db:	mov    edi,0xe3e6ef96
  4334e0:	xchg   edi,eax
  4334e1:	lock pushf 
  4334e3:	mov    eax,ds:0xaa3ac0bc
  4334e8:	push   edi
  4334e9:	mov    esp,DWORD PTR [edi]
  4334eb:	call   0x8b7a:0x871155bf
  4334f2:	punpckldq mm5,DWORD PTR [eax]
  4334f5:	rol    BYTE PTR [eax],1
  4334f7:	hlt    
  4334f8:	fild   DWORD PTR [ebp+0x717000c3]
  4334fe:	sub    edi,edi
  433500:	js     0x433544
  433502:	or     al,cl
  433504:	xchg   BYTE PTR [esi],ch
  433506:	xor    eax,0x151558c1
  43350b:	cli    
  43350c:	cmp    BYTE PTR [edi-0x5b9324e3],bl
  433512:	ins    DWORD PTR es:[edi],dx
  433513:	jge    0x433540
  433515:	cwde   
  433516:	mov    BYTE PTR [edi+0x6f],al
  433519:	xlat   BYTE PTR ds:[ebx]
  43351a:	or     DWORD PTR [esi],ecx
  43351c:	das    
  43351d:	inc    edx
  43351e:	or     cl,BYTE PTR [edi]
  433520:	mov    ds:0x1f0008a7,eax
  433525:	xlat   BYTE PTR ds:[ebx]
  433526:	or     DWORD PTR [edi],ecx
  433528:	das    
  433529:	inc    edx
  43352a:	or     cl,BYTE PTR [ebx+0x4586fe60]
  433530:	repz adc al,0xca
  433533:	bt     DWORD PTR [ecx],ecx
  433536:	or     al,0x0
  433538:	out    dx,eax
  433539:	sbb    al,BYTE PTR [ebx-0x4]
  43353c:	les    eax,FWORD PTR [eax-0x7f9bfa84]
  433542:	xchg   DWORD PTR [ebp+0x73],ecx
  433545:	sbb    al,BYTE PTR [ebx-0x10]
  433548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433549:	cmp    DWORD PTR [ebp+eax*1+0x54],0x33458780
  433551:	adc    al,0xca
  433553:	packsswb mm0,QWORD PTR [ebx+0x1aaf0008]
  43355a:	inc    ebx
  43355b:	hlt    
  43355c:	xor    al,0x4
  43355e:	repnz mov eax,DWORD PTR [eax]
  433561:	loop   0x4335dc
  433563:	aas    
  433564:	push   edx
  433565:	(bad)  
  433567:	jb     0x43354f
  433569:	push   0x7345859e
  43356e:	inc    eax
  43356f:	dec    ebx
  433570:	clc    
  433571:	xchg   BYTE PTR [edx-0x21a003d0],al
  433577:	sti    
  433578:	dec    edx
  43357a:	xor    esi,DWORD PTR [edx+0x53]
  43357d:	jle    0x4335a7
  43357f:	scas   eax,DWORD PTR es:[edi]
  433580:	or     al,0x9f
  433582:	in     al,0x4b
  433584:	out    0xb0,eax
  433586:	mov    eax,ds:0x9d05000b
  43358b:	sbb    al,0x6d
  43358d:	mov    al,ds:0x86246226
  433592:	sub    BYTE PTR [ecx-0x4],ch
  433595:	xchg   BYTE PTR [edi+eax*4+0x7f],dh
  433599:	mov    WORD PTR [ebx-0x570ff6f5],gs
  43359f:	in     al,dx
  4335a0:	dec    ebx
  4335a1:	xor    ah,BYTE PTR [eax]
  4335a3:	fmul   st(5),st
  4335a5:	imul   eax,DWORD PTR es:[edi+0x31128ec2],0x878385f8
  4335b0:	cli    
  4335b1:	cmp    BYTE PTR [ecx],0xcc
  4335b4:	test   DWORD PTR ds:0xc719e528,edi
  4335ba:	scas   eax,DWORD PTR es:[edi]
  4335bb:	add    DWORD PTR [edi-0x39],edi
  4335be:	test   eax,0x20860006
  4335c3:	mov    DWORD PTR [edi-0x3ab4c700],0xbf108be5
  4335cd:	jge    0x4335b5
  4335cf:	xchg   ebx,eax
  4335d0:	mov    bh,bl
  4335d2:	sub    ebx,0x6a82bf88
  4335d8:	fild   WORD PTR [eax*1+0x397f1bed]
  4335df:	mov    ecx,DWORD PTR [ecx]
  4335e1:	push   DWORD PTR [ecx+0x22417eaa]
  4335e7:	and    bl,BYTE PTR [ebx+0x5c]
  4335ea:	xchg   ecx,eax
  4335eb:	inc    edx
  4335ec:	pusha  
  4335ed:	and    BYTE PTR [ecx-0x7178ef6c],dl
  4335f3:	xor    ebp,eax
  4335f5:	mov    bl,BYTE PTR [ebx-0x65]
  4335f8:	add    bl,ah
  4335fa:	inc    edi
  4335fb:	cld    
  4335fc:	cwde   
  4335fd:	add    eax,DWORD PTR [esi-0x78351ebe]
  433603:	xor    ecx,esp
  433605:	add    eax,DWORD PTR [esi-0x64946f39]
  43360b:	add    eax,DWORD PTR [ebp+0x57]
  43360e:	enter  0xe4a7,0x90
  433612:	leave  
  433613:	inc    edx
  433614:	fs loope 0x433662
  433617:	adc    DWORD PTR [ebx],eax
  433619:	xchg   DWORD PTR [ebp+0x212e196],edi
  43361f:	xchg   edi,eax
  433620:	cli    
  433621:	add    eax,DWORD PTR [esi+0x2f056f43]
  433627:	push   es
  433628:	popf   
  433629:	mov    es,WORD PTR [eax]
  43362b:	dec    esp
  43362c:	jo     0x4335af
  43362e:	inc    ebp
  43362f:	fwait
  433630:	jl     0x43362b
  433632:	mov    WORD PTR [ebp-0x74441b66],?
  433638:	xchg   esp,eax
  433639:	in     al,0x55
  43363b:	fadd   st(7),st
  43363d:	and    BYTE PTR [edi+ecx*4-0x35],ch
  433641:	in     eax,0x48
  433643:	xchg   esi,eax
  433644:	pop    edi
  433645:	and    DWORD PTR [ebx+eax*1],eax
  433648:	mov    BYTE PTR [esp+eiz*8-0x79],ah
  43364c:	sbb    al,0x7a
  43364e:	dec    edi
  43364f:	inc    edi
  433650:	adc    dl,BYTE PTR [eax+0x4a]
  433653:	pop    esi
  433654:	(bad)  
  433655:	test   al,0x6b
  433657:	or     DWORD PTR [eax+0x3fac86e4],ebp
  43365d:	or     al,0x53
  43365f:	pop    edx
  433660:	adc    BYTE PTR [ebx+ebx*4-0x7d],dh
  433664:	inc    edx
  433665:	or     ch,cl
  433667:	test   DWORD PTR [ebx+0x47],ecx
  43366a:	sar    DWORD PTR [eax],0x35
  43366d:	jecxz  0x43365d
  43366f:	neg    dh
  433671:	es jmp 0x624d78fc
  433677:	dec    esp
  433678:	sub    bh,bh
  43367a:	push   ebp
  43367b:	xchg   ecx,eax
  43367c:	out    dx,eax
  43367d:	sbb    edx,ecx
  43367f:	lds    eax,FWORD PTR [edx+0x3b]
  433682:	sbb    ebx,edi
  433684:	mov    ebx,0x99d5a656
  433689:	inc    edi
  43368a:	add    DWORD PTR [edx+0x5b6201],0x1987c76c
  433694:	mov    DWORD PTR [edx+0xa],eax
  433697:	fs mov bh,0x26
  43369a:	sub    eax,0x743e010c
  4336a0:	mov    edi,0x85e90c92
  4336a5:	add    al,0x7d
  4336a7:	outs   dx,BYTE PTR cs:[esi]
  4336a9:	repnz pop eax
  4336ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4336ac:	mov    al,BYTE PTR [ecx+0xa]
  4336af:	jmp    0x6c5e5339
  4336b4:	mov    edi,0x82035a12
  4336b9:	stos   BYTE PTR es:[edi],al
  4336ba:	mov    eax,ds:0x834285d8
  4336bf:	sbb    al,0xda
  4336c1:	adc    al,0xc6
  4336c3:	loope  0x4336c1
  4336c5:	(bad)  
  4336c6:	shr    DWORD PTR [edx+eax*8+0x48],1
  4336ca:	test   DWORD PTR [edx+edx*4+0x4f700a42],eax
  4336d1:	sub    al,bh
  4336d3:	out    0xdb,al
  4336d5:	xchg   edx,eax
  4336d6:	out    dx,eax
  4336d7:	jmp    0xeaa937d6
  4336dc:	dec    esi
  4336dd:	and    dh,BYTE PTR [ecx]
  4336df:	add    al,ch
  4336e1:	add    DWORD PTR es:[ebx+0xa3c7c],eax
  4336e8:	and    al,0xf1
  4336ea:	push   ebp
  4336eb:	mov    eax,0xa3eae
  4336f0:	pop    esp
  4336f1:	sahf   
  4336f2:	test   DWORD PTR [edi+0x0],ecx
  4336f5:	jecxz  0x4336fd
  4336f7:	or     eax,0x6f4a24c3
  4336fc:	mov    esp,DWORD PTR [edi+0x7008e785]
  433702:	lods   al,BYTE PTR ds:[esi]
  433703:	(bad)  
  433704:	mov    DWORD PTR [edx],ebp
  433706:	jp     0x43373d
  433708:	into   
  433709:	jmp    0x73c0a470
  43370e:	inc    esi
  43370f:	add    DWORD PTR [eax+edx*2+0x60000a3d],eax
  433716:	lods   al,BYTE PTR ds:[esi]
  433717:	lock (bad) 
  433719:	mov    ds:0xfcce85a2,al
  43371e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43371f:	test   DWORD PTR [edi-0x65],ecx
  433722:	or     BYTE PTR [ebp-0x3a],ch
  433725:	aaa    
  433726:	inc    edi
  433727:	sar    BYTE PTR [eax+0xa461e],cl
  43372d:	cld    
  43372e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43372f:	test   DWORD PTR [edi+0x53],ecx
  433732:	mov    ebp,0x6757f85b
  433737:	lods   eax,DWORD PTR ds:[esi]
  433738:	mov    ebx,DWORD PTR [ebx]
  43373a:	lds    eax,FWORD PTR [ebp+0x29d2ec8]
  433740:	ud1    edi,DWORD PTR [edi+eax*4+0x45]
  433745:	jnp    0x433775
  433747:	les    esi,FWORD PTR [edi+0x1e]
  43374a:	mov    edi,0x9606c1c2
  43374f:	outs   dx,BYTE PTR ds:[esi]
  433750:	stc    
  433751:	fcomip st,st(6)
  433753:	pop    eax
  433754:	mov    edx,DWORD PTR [edi+0x8e784]
  43375a:	xchg   BYTE PTR [eax-0x1582386f],ch
  433760:	push   ebp
  433761:	xor    BYTE PTR [ebp+0x6aa480a0],ch
  433767:	fwait
  433768:	or     eax,DWORD PTR [eax]
  43376a:	xchg   BYTE PTR [eax+edx*2],bl
  43376d:	cld    
  43376e:	xchg   BYTE PTR [eax-0x79],dh
  433771:	scas   eax,DWORD PTR es:[edi]
  433772:	mov    ds,WORD PTR [ebx-0x6227f6f5]
  433778:	jmp    0x66cd:0xd9248a4b
  43377f:	fld    QWORD PTR [esi+0x38128ec2]
  433785:	clc    
  433786:	test   DWORD PTR [ebx+0x7e],esp
  433789:	inc    ebx
  43378a:	jb     0x433734
  43378c:	xchg   ecx,eax
  43378d:	int3   
  43378e:	popf   
  43378f:	mov    dl,BYTE PTR [esi-0x29]
  433792:	mov    DWORD PTR [ecx-0xc367a26],esi
  433798:	mov    edx,0x686a9de5
  43379d:	test   ebx,edx
  43379f:	jns    0x433809
  4337a1:	xchg   edx,ecx
  4337a3:	pusha  
  4337a4:	push   esi
  4337a5:	stc    
  4337a6:	leave  
  4337a7:	repz fmul QWORD PTR [esi-0x79]
  4337ab:	fwait
  4337ac:	or     esp,DWORD PTR [edx+0xd]
  4337af:	fsub   DWORD PTR cs:[edx+0x5]
  4337b3:	loop   0x4337ab
  4337b5:	jb     0x433755
  4337b7:	mov    al,ds:0x59fbcc95
  4337bc:	or     al,0x87
  4337be:	add    BYTE PTR [ebx-0x21],dl
  4337c1:	adc    esi,eax
  4337c3:	jne    0x43383e
  4337c5:	call   0x8600:0xb9baaa4
  4337cc:	sbb    al,0x69
  4337ce:	cld    
  4337cf:	xchg   BYTE PTR [eax-0x79],dh
  4337d2:	dec    edi
  4337d3:	mov    es,WORD PTR [edx-0x1f]
  4337d6:	add    edi,DWORD PTR [edi-0x28]
  4337d9:	jecxz  0x4337b9
  4337db:	cmp    eax,0xd3ce6c8e
  4337e0:	mov    eax,ds:0x3da516c
  4337e5:	fs (bad) 
  4337e7:	jle    0x43382e
  4337e9:	sub    DWORD PTR [ecx+0x396a4469],edx
  4337ef:	sahf   
  4337f0:	dec    esp
  4337f1:	xor    DWORD PTR [edx-0x4f],edx
  4337f4:	mov    esp,0x9cc36ba0
  4337f9:	(bad)  
  4337fb:	add    eax,0x3787e882
  433800:	dec    eax
  433801:	loope  0x433806
  433803:	(bad)  
  433804:	xlat   BYTE PTR ds:[ebx]
  433805:	mov    ch,0x46
  433807:	fdivr  QWORD PTR [ebx+0x44668324]
  43380d:	les    esp,FWORD PTR fs:[ebx-0x7d]
  433811:	or     al,0x2
  433813:	add    esi,edi
  433815:	mov    esp,0x6496c58c
  43381a:	in     eax,dx
  43381b:	dec    eax
  43381c:	fwait
  43381d:	mov    WORD PTR [ebx],es
  43381f:	xchg   BYTE PTR [edx+0x47],al
  433822:	add    DWORD PTR [eax],0x31
  433825:	xor    bh,al
  433827:	xchg   ebp,eax
  433828:	inc    edx
  433829:	mov    edx,0xb5c01e
  43382e:	inc    sp
  433830:	and    ecx,DWORD PTR [ebp-0x4f]
  433833:	push   edx
  433834:	push   esi
  433835:	fwait
  433836:	loopne 0x4337c8
  433838:	jmp    0x6442:0x8603e166
  43383f:	pusha  
  433840:	add    al,BYTE PTR [ebx-0x30]
  433843:	xchg   ecx,ebx
  433845:	inc    edi
  433846:	loope  0x43384b
  433848:	jg     0x433822
  43384a:	jecxz  0x43382a
  43384c:	cmp    eax,0xd3620a8e
  433851:	jge    0x43383d
  433853:	bound  esi,QWORD PTR [esi]
  433855:	outs   dx,BYTE PTR ds:[esi]
  433856:	dec    esp
  433857:	push   0xffffffcb
  433859:	cmp    cl,BYTE PTR [ebx]
  43385b:	inc    ecx
  43385c:	test   BYTE PTR [edi+0xb],0x60
  433860:	jle    0x4337ec
  433862:	xor    ebx,DWORD PTR [ecx+0x57]
  433865:	ja     0x433842
  433867:	push   edx
  433868:	cld    
  433869:	int    0x8b
  43386b:	dec    ecx
  43386c:	or     BYTE PTR ds:0x412eaca,0xf6
  433873:	sub    BYTE PTR [ebp+ecx*4-0x764fdb49],ch
  43387a:	out    dx,eax
  43387b:	adc    al,BYTE PTR [ebx+edi*4+0x49]
  43387f:	out    dx,al
  433880:	pushf  
  433881:	xchg   edx,eax
  433882:	jnp    0x43384a
  433884:	add    al,0xb
  433886:	out    dx,al
  433887:	jmp    0x8f09b88c
  43388c:	out    0x85,al
  43388e:	inc    edx
  43388f:	(bad)  
  433890:	xchg   DWORD PTR ds:[ecx+0x7c0fed3d],ecx
  433897:	fcmovne st,st(1)
  433899:	(bad)  
  43389a:	cli    
  43389b:	int    0x2b
  43389d:	pop    es
  43389e:	test   BYTE PTR [edx],al
  4338a0:	jmp    0xf30c:0xe649bafd
  4338a7:	icebp  
  4338a8:	add    bl,BYTE PTR [edx+0x20]
  4338ab:	rcr    DWORD PTR [edx+0x6acbc51f],1
  4338b1:	sub    cl,BYTE PTR [ecx]
  4338b3:	mov    ebp,DWORD PTR [ecx-0x62ba3871]
  4338b9:	inc    ebp
  4338ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4338bb:	pop    es
  4338bc:	popa   
  4338bd:	sub    eax,0xaf96ef89
  4338c2:	iret   
  4338c3:	or     ebx,DWORD PTR [ecx+0xf6030f]
  4338c9:	and    BYTE PTR [edi],al
  4338cb:	out    0x0,al
  4338cd:	fild   WORD PTR [edx+0xa]
  4338d0:	mov    ebp,DWORD PTR [eax+0x64c7ed1e]
  4338d6:	add    eax,0x23200366
  4338db:	xor    eax,0xc4c5d8c8
  4338e0:	add    ch,BYTE PTR [edi+0x537d6d42]
  4338e6:	inc    esi
  4338e7:	jbe    0x433905
  4338e9:	xor    al,0x7
  4338eb:	out    0xeb,al
  4338ed:	add    BYTE PTR [edi+edi*4-0x2dbffb9],bl
  4338f4:	popa   
  4338f5:	(bad)  
  4338f6:	cli    
  4338f7:	jbe    0x433965
  4338f9:	mov    ebx,esp
  4338fb:	std    
  4338fc:	jns    0x4338fd
  4338fe:	loopne 0x43391a
  433900:	ins    DWORD PTR es:[edi],dx
  433901:	jge    0x4338a6
  433903:	inc    esi
  433904:	jnp    0x4338f2
  433906:	in     al,0x7
  433908:	add    sp,WORD PTR [eax]
  43390b:	and    dh,BYTE PTR [edi]
  43390d:	inc    edi
  43390e:	pop    ss
  43390f:	aas    
  433910:	jo     0x4338ef
  433912:	pop    edx
  433913:	outs   dx,DWORD PTR ds:[esi]
  433914:	icebp  
  433915:	sub    DWORD PTR [eax],0xffffff8d
  433918:	add    al,BYTE PTR [esi+ebp*8-0x3efff5b9]
  43391f:	ret    
  433920:	mov    cl,0x70
  433922:	sub    eax,0x58000a42
  433927:	(bad)  
  433928:	jge    0x433930
  43392a:	pop    ds
  43392b:	inc    edx
  43392c:	add    DWORD PTR [edi+0xa452f],0xffffffaa
  433933:	(bad)  
  433934:	pop    ebp
  433935:	mov    DWORD PTR [esi],ebp
  433937:	mov    ecx,0x169a4c49
  43393c:	cli    
  43393d:	add    bl,BYTE PTR [edi]
  43393f:	inc    edx
  433940:	inc    eax
  433941:	mov    eax,DWORD PTR [esi+0x418b664c]
  433947:	push   edi
  433948:	ss dec edi
  43394a:	leave  
  43394b:	fwait
  43394c:	add    al,0x0
  43394e:	xchg   BYTE PTR [ebx+0x49008b39],bl
  433954:	mov    edi,DWORD PTR [ebx]
  433956:	xchg   bx,ax
  433959:	imul   BYTE PTR [eax]
  43395b:	xchg   BYTE PTR [ebx+0x126ec48a],bl
  433961:	dec    eax
  433962:	fmul   DWORD PTR [ebx]
  433964:	pop    esp
  433965:	inc    BYTE PTR [edx-0x63209c5]
  43396b:	std    
  43396c:	lods   al,BYTE PTR ds:[esi]
  43396d:	pop    edi
  43396e:	mov    edi,DWORD PTR [ecx]
  433970:	jg     0x4338f6
  433972:	push   ecx
  433973:	ss es jbe 0x433967
  433977:	test   BYTE PTR [ebx-0x22fcb1f5],bl
  43397d:	xor    edx,DWORD PTR [eax+0x37]
  433980:	adc    BYTE PTR [esi],bh
  433982:	pusha  
  433983:	dec    ecx
  433984:	fwait
  433985:	add    eax,0x829b8600
  43398a:	inc    ecx
  43398b:	jmp    0x390b:0xb95480ab
  433992:	data16 test BYTE PTR [ebx-0x4e],al
  433996:	sub    al,BYTE PTR [esi+0x6ec48a9b]
  43399c:	adc    cl,BYTE PTR [ecx-0x28]
  43399f:	add    ebx,ebx
  4339a1:	add    eax,DWORD PTR [ebx-0x62c909e]
  4339a7:	add    eax,0xfd0201fe
  4339ac:	sub    eax,0x6881c1ce
  4339b1:	or     eax,DWORD PTR [eax]
  4339b3:	xchg   BYTE PTR [edi+ebp*2-0x647fff8d],ah
  4339ba:	or     eax,ecx
  4339bc:	mov    DWORD PTR [edx-0x13],eax
  4339bf:	add    eax,DWORD PTR [esi+0x2596442]
  4339c5:	inc    esp
  4339c6:	adc    ebp,DWORD PTR [edx+0x79]
  4339c9:	setno  BYTE PTR [esi]
  4339cc:	icebp  
  4339cd:	mov    ecx,fs
  4339cf:	push   ebp
  4339d0:	gs mov ecx,0xff0b0c26
  4339d6:	mov    BYTE PTR [edi+0x4c6a9235],cl
  4339dc:	cmp    BYTE PTR [ecx+0x3a01dbb6],0x7c
  4339e3:	dec    ecx
  4339e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4339e5:	mov    edx,0xf702f3b1
  4339ea:	cmp    al,0x35
  4339ec:	or     edx,esi
  4339ee:	fdiv   QWORD PTR [ebx]
  4339f0:	add    ebp,ebp
  4339f2:	or     BYTE PTR [ebp+0x4f494e17],cl
  4339f8:	addr16 inc edx
  4339fa:	loope  0x43398a
  4339fc:	inc    ebp
  4339fd:	cmp    bh,BYTE PTR [esp+esi*1+0x7a]
  433a01:	mov    ecx,0xec0af3b9
  433a06:	fmul   DWORD PTR [esi+0x316a4ef7]
  433a0c:	pop    esi
  433a0d:	mov    eax,0x46c68ed1
  433a12:	ror    BYTE PTR fs:[esi+0x10eb8bf],0xfe
  433a1a:	lock mov WORD PTR [eax],es
  433a1d:	mov    ch,0x8a
  433a1f:	jp     0x433a61
  433a21:	dec    edx
  433a22:	cmp    al,0x66
  433a24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433a25:	test   DWORD PTR [edx-0x1f],eax
  433a28:	ret    0x8707
  433a2b:	cld    
  433a2c:	add    eax,DWORD PTR [esi+0x2fdac88b]
  433a32:	call   0x620a:0x4286004e
  433a39:	int3   
  433a3a:	div    BYTE PTR [ecx+0xa4285e8]
  433a40:	mov    edx,0xa5878225
  433a45:	add    BYTE PTR [edi+ebp*8+0xa4285e9],cl
  433a4c:	and    DWORD PTR [ecx-0x74e7c33],ebp
  433a52:	add    DWORD PTR [esi],edi
  433a54:	jb     0x433a37
  433a56:	ret    
  433a57:	and    DWORD PTR [ecx-0x21fd5c3e],0xfffffff7
  433a5e:	add    DWORD PTR [ecx-0x3faa4654],0xffffffd7
  433a65:	dec    edx
  433a66:	(bad)
  433a69:	pop    esi
  433a6a:	mov    cs,WORD PTR [edx]
  433a6c:	fidiv  WORD PTR [ecx]
  433a6e:	retf   
  433a6f:	add    eax,0xb83985e9
  433a74:	jmp    0x433a32
  433a76:	imul   ebp
  433a78:	(bad)  
  433a79:	iret   
  433a7a:	jge    0x433a66
  433a7c:	bound  edi,QWORD PTR [esi+esi*8]
  433a7f:	dec    ebx
  433a80:	push   0x0
  433a82:	(bad)  
  433a83:	cmp    cl,BYTE PTR [ebx]
  433a85:	inc    ecx
  433a86:	sbb    eax,0x85e9ef8b
  433a8b:	jge    0x433a77
  433a8d:	bound  edi,QWORD PTR [esi+edi*8-0x5b26380]
  433a94:	sub    ch,BYTE PTR [edx]
  433a96:	adc    BYTE PTR [esi-0x77],al
  433a99:	bound  ecx,QWORD PTR [ebp-0x35]
  433a9c:	loope  0x433a7f
  433a9e:	jl     0x433a70
  433aa0:	shl    DWORD PTR [eax-0x77],0x96
  433aa4:	xor    ebp,DWORD PTR [edi-0x56793429]
  433aaa:	pop    esi
  433aac:	retf   0x85e9
  433aaf:	inc    edx
  433ab0:	mov    ds:0x8b38ef00,al
  433ab5:	mov    eax,0x8b0a3f2f
  433aba:	out    0x7e,eax
  433abc:	out    0x8,eax
  433abe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433abf:	add    edx,esi
  433ac1:	pop    gs
  433ac3:	ja     0x433a4c
  433ac5:	dec    ebp
  433ac6:	or     edi,DWORD PTR [ecx]
  433ac8:	mov    esp,0xe603ecc8
  433acd:	mov    DWORD PTR [edx-0x20fe4d36],ebp
  433ad3:	ds or  dl,bl
  433ad6:	bsr    eax,DWORD PTR [ebx-0x1c]
  433ada:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433adb:	lods   eax,DWORD PTR gs:[esi]
  433add:	rol    DWORD PTR [edi],cl
  433adf:	mov    ebp,0x979ef443
  433ae4:	sbb    al,BYTE PTR [ebx]
  433ae6:	add    BYTE PTR [esi-0x43],ch
  433ae9:	ret    0xe88b
  433aec:	add    al,BYTE PTR [ebp-0x43c6d8fc]
  433af2:	dec    ebp
  433af3:	mov    esi,DWORD PTR [edi-0x61910bb5]
  433af9:	add    cl,BYTE PTR [edi]
  433afb:	sbb    DWORD PTR [esi-0x7f6b3f13],eax
  433b01:	jl     0x433b61
  433b03:	je     0x433b45
  433b05:	sbb    DWORD PTR [ebx+0xa466f],0xffffffec
  433b0c:	icebp  
  433b0d:	in     eax,dx
  433b0e:	add    BYTE PTR [eax+0xa],dl
  433b11:	syscall 
  433b13:	pop    edi
  433b14:	inc    esi
  433b15:	add    DWORD PTR [esi-0x2c3b4893],esi
  433b1b:	(bad)  
  433b1c:	mov    bh,0x43
  433b1e:	fsub   QWORD PTR [eax+0x1]
  433b21:	out    dx,al
  433b22:	inc    edx
  433b23:	pop    esp
  433b24:	into   
  433b25:	add    DWORD PTR [esi-0x1bb44316],esi
  433b2b:	xchg   BYTE PTR [eax-0x1c7a3867],ah
  433b31:	xchg   ebx,eax
  433b32:	jmp    FWORD PTR [ecx]
  433b34:	pushf  
  433b35:	or     ecx,ebp
  433b37:	es adc eax,0xda05e448
  433b3d:	add    eax,DWORD PTR [edi+0x1d43d3bb]
  433b43:	inc    ebp
  433b44:	int    0xe3
  433b46:	or     DWORD PTR [ecx],edi
  433b48:	push   edi
  433b49:	mov    ah,0xfd
  433b4b:	add    dh,al
  433b4d:	and    al,0x42
  433b4f:	dec    esp
  433b50:	std    
  433b51:	lahf   
  433b52:	mov    WORD PTR [edi-0x1733f8bd],es
  433b58:	mov    ds,WORD PTR [eax+0x5685c099]
  433b5e:	jmp    0x1009:0x9d90c835
  433b65:	iret   
  433b66:	mov    eax,0xb5ef4b85
  433b6b:	in     eax,0x6d
  433b6d:	jmp    0xb:0x94ca8983
  433b74:	std    
  433b75:	push   ebx
  433b76:	int3   
  433b77:	out    0x8e,eax
  433b79:	cwde   
  433b7a:	cdq    
  433b7b:	mov    DWORD PTR [edi-0x79ea50e0],0x5de5b69b
  433b85:	sub    al,BYTE PTR [ebx+ecx*2-0x403ceb96]
  433b8c:	outs   dx,DWORD PTR ds:[esi]
  433b8d:	mov    eax,DWORD PTR [ecx+ecx*2+0x73cb1fc6]
  433b94:	jge    0x433bee
  433b96:	or     dl,BYTE PTR [edi]
  433b98:	xchg   BYTE PTR [ebx-0x686318f5],bl
  433b9e:	or     eax,DWORD PTR [eax]
  433ba0:	push   ds
  433ba1:	jnp    0x433be2
  433ba3:	adc    eax,DWORD PTR [ecx+0x42]
  433ba6:	pusha  
  433ba7:	rcr    BYTE PTR [ebx+0x3fd6e142],0x89
  433bae:	fdivr  DWORD PTR [edi-0x1ec27900]
  433bb4:	add    eax,DWORD PTR [esi-0x79fffd65]
  433bba:	inc    edx
  433bbb:	cdq    
  433bbc:	inc    esp
  433bbd:	xchg   edx,eax
  433bbe:	cmp    DWORD PTR [ecx+eax*2+0x7e],ebp
  433bc2:	and    DWORD PTR [ecx],0x210fc5fc
  433bc8:	add    al,0xe9
  433bca:	cmp    ebp,esp
  433bcc:	add    eax,DWORD PTR [esi+0x73cc4f39]
  433bd2:	mov    ds:0xfa3f8cd0,eax
  433bd7:	lahf   
  433bd8:	push   DWORD PTR [edx+eax*2-0x1f]
  433bdc:	add    eax,DWORD PTR [ebx]
  433bde:	add    DWORD PTR [ecx],ebp
  433be0:	add    esi,0xd61b280d
  433be6:	adc    al,0x1a
  433be8:	mov    edx,ebp
  433bea:	pop    ebp
  433beb:	loope  0x433bf0
  433bed:	xchg   BYTE PTR [edx+0x64],al
  433bf0:	pop    ecx
  433bf1:	mov    dl,0x41
  433bf3:	sar    BYTE PTR [edi+0x69],1
  433bf6:	ds loope 0x433bfc
  433bf9:	(bad)  
  433bfa:	shl    bl,1
  433bfc:	(bad)  
  433bfd:	dec    ebp
  433bfe:	xchg   BYTE PTR [esi+eax*8-0x3d],ch
  433c02:	mov    eax,ds:0x39c482a3
  433c07:	jp     0x433c3a
  433c09:	jle    0x433c4f
  433c0b:	dec    ecx
  433c0c:	sbb    esi,edi
  433c0e:	cli    
  433c0f:	xchg   edx,eax
  433c10:	mov    ch,0xb
  433c12:	clc    
  433c13:	test   al,0x9b
  433c15:	add    BYTE PTR [ecx-0x78],ch
  433c18:	loope  0x433c1d
  433c1a:	push   ebx
  433c1b:	mov    ds:0x63ced4dc,eax
  433c20:	or     ch,BYTE PTR [edx]
  433c22:	mov    eax,DWORD PTR [ecx]
  433c24:	dec    edx
  433c25:	sbb    bl,BYTE PTR [ebp-0x78]
  433c28:	sub    BYTE PTR [ebp+0x72ef883c],0xc0
  433c2f:	add    al,BYTE PTR [ecx+0xa2e3d66]
  433c35:	jmp    0xe95b7e22
  433c3a:	test   DWORD PTR [edx-0x7d],eax
  433c3d:	cs pop edx
  433c3f:	retf   0xe909
  433c42:	test   DWORD PTR [edx-0x25],eax
  433c45:	leave  
  433c46:	mov    ebp,0xcd72cb25
  433c4b:	mov    ebp,0x3f0d3947
  433c50:	and    BYTE PTR [edx-0x43],0xc7
  433c54:	loope  0x433c37
  433c56:	adc    ah,0xc1
  433c59:	jo     0x433ca1
  433c5b:	mov    ?,WORD PTR [ebx]
  433c5d:	scas   eax,DWORD PTR es:[edi]
  433c5e:	dec    ebx
  433c5f:	add    bl,BYTE PTR [edx+0xa862e6a]
  433c65:	fimul  WORD PTR [ecx+0x77]
  433c68:	or     ebp,ecx
  433c6a:	test   DWORD PTR [ecx],edi
  433c6c:	mov    eax,0xedfbd0eb
  433c71:	(bad)  
  433c72:	retf   
  433c73:	jne    0x433c5f
  433c75:	bound  eax,QWORD PTR [eax-0x16]
  433c78:	dec    ebx
  433c79:	push   0x0
  433c7b:	jecxz  0x433cb7
  433c7d:	or     esp,DWORD PTR [ecx]
  433c7f:	std    
  433c80:	xchg   edi,ebp
  433c82:	jmp    0x632db20c
  433c87:	inc    eax
  433c88:	repnz cmp BYTE PTR [ebp+ebx*2+0xc2a2afa],0x3e
  433c91:	mov    DWORD PTR [edx+0x3d],esp
  433c94:	(bad)  
  433c95:	loope  0x433c78
  433c97:	adc    ah,0xc1
  433c9a:	add    dh,dl
  433c9c:	add    dh,dh
  433c9e:	cmp    ebp,DWORD PTR [ecx+0x4fa8aef8]
  433ca4:	cmp    eax,0x435fb08b
  433ca9:	or     cl,BYTE PTR [ebx+0x8e782f7]
  433caf:	mov    dh,0xff
  433cb1:	aad    0xf
  433cb3:	adc    DWORD PTR [ebx-0x79],edi
  433cb6:	dec    ebp
  433cb7:	inc    ebx
  433cb8:	cmp    eax,0x2cc8bc
  433cbd:	out    0x89,al
  433cbf:	(bad)  
  433cc0:	retf   0x1b2
  433cc3:	pop    ds
  433cc4:	inc    ebx
  433cc5:	or     dl,bl
  433cc7:	aas    
  433cc8:	mov    ecx,0x61b7e443
  433ccd:	lods   eax,DWORD PTR ds:[esi]
  433cce:	rcl    DWORD PTR [edi],cl
  433cd0:	mov    ecx,0x9b1ef443
  433cd5:	sbb    al,BYTE PTR [ebx]
  433cd7:	push   ds
  433cd8:	mov    ecx,0x4eb08bc2
  433cdd:	test   DWORD PTR [eax+eax*1],eax
  433ce0:	push   edi
  433ce1:	cmp    eax,0xbaf34dbc
  433ce6:	dec    ebx
  433ce7:	hlt    
  433ce8:	push   ds
  433ce9:	xchg   esi,eax
  433cea:	add    cl,BYTE PTR [edi]
  433cec:	and    DWORD PTR [esi-0x13],edi
  433cef:	shl    BYTE PTR [eax+ecx*8+0x7c],0x56
  433cf4:	sbb    al,0xef
  433cf6:	in     eax,dx
  433cf7:	add    al,cl
  433cf9:	push   es
  433cfa:	das    
  433cfb:	add    ebp,DWORD PTR [edi-0x5249febe]
  433d01:	mov    ecx,0xb93fd3c4
  433d06:	inc    ebx
  433d07:	fcomp  QWORD PTR [eax-0x1]
  433d0a:	in     eax,dx
  433d0b:	inc    edx
  433d0c:	ins    BYTE PTR es:[edi],dx
  433d0d:	retf   0xb601
  433d10:	mov    ds:0x86e44bb9,al
  433d15:	pushf  
  433d16:	jge    0x433cdf
  433d18:	test   DWORD PTR [ebx-0x72],esp
  433d1b:	jmp    DWORD PTR [ecx-0x64]
  433d1e:	or     ecx,ebp
  433d20:	adc    WORD PTR [edi-0x1c],ax
  433d24:	add    eax,0xb386fe56
  433d29:	xchg   ebx,eax
  433d2a:	inc    ebx
  433d2b:	sbb    eax,0x9e3c945
  433d30:	icebp  
  433d31:	push   esi
  433d32:	mov    eax,0x462146fd
  433d37:	push   eax
  433d38:	std    
  433d39:	lahf   
  433d3a:	mov    WORD PTR [edi-0x17333835],es
  433d40:	mov    ss,WORD PTR [ebp+edi*2+0x568500c0]
  433d47:	jmp    0x3809:0xa44d4035
  433d4e:	dec    edi
  433d4f:	mov    bh,0x85
  433d51:	inc    ebx
  433d52:	scas   eax,DWORD PTR es:[edi]
  433d53:	mov    edx,0xcaa9de5
  433d58:	mov    edx,eax
  433d5a:	nop
  433d5b:	or     eax,DWORD PTR [eax]
  433d5d:	or     eax,0x8ee7ccd4
  433d62:	xchg   esp,eax
  433d63:	jge    0x433d2c
  433d65:	xchg   DWORD PTR [edi+ebp*4],ebx
  433d68:	adc    eax,0xe5ba9b86
  433d6d:	ins    DWORD PTR es:[edi],dx
  433d6e:	jmp    0x744b:0xb3a24b83
  433d75:	and    DWORD PTR [eax],0xdbc10830
  433d7b:	repz inc ebx
  433d7d:	sbb    ebx,ebx
  433d7f:	or     esp,edi
  433d81:	ds cdq 
  433d83:	or     eax,DWORD PTR [eax]
  433d85:	std    
  433d86:	arpl   WORD PTR [esi],ax
  433d88:	mov    dl,0xc6
  433d8a:	pop    edx
  433d8b:	in     al,0x10
  433d8d:	add    eax,0x1040142
  433d92:	cmc    
  433d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433d94:	mov    al,bh
  433d96:	cli    
  433d97:	pop    ds
  433d98:	cld    
  433d99:	xchg   esi,eax
  433d9a:	inc    edx
  433d9b:	loope  0x433da0
  433d9d:	or     edi,ebp
  433d9f:	mov    eax,0xa10e467e
  433da4:	sbb    BYTE PTR [esi+0x11],dl
  433da7:	ret    
  433da8:	add    BYTE PTR [eax],0xcd
  433dab:	xchg   cl,ah
  433dad:	add    al,0xa
  433daf:	mov    dl,0xe3
  433db1:	add    eax,DWORD PTR [esi+0x2f069735]
  433db7:	not    esp
  433db9:	jg     0x433df7
  433dbb:	jno    0x433d7e
  433dbd:	inc    esi
  433dbe:	mov    ds:0xb57cf97c,eax
  433dc3:	mov    ah,ah
  433dc5:	stos   DWORD PTR es:[edi],eax
  433dc6:	pop    ebx
  433dc7:	or     eax,0xb92c5629
  433dcc:	adc    BYTE PTR [esi+edi*1],bh
  433dcf:	inc    ebx
  433dd0:	loope  0x433dd5
  433dd2:	xchg   BYTE PTR [ecx-0x7f],dh
  433dd5:	pop    ds
  433dd6:	loope  0x433dd1
  433dd8:	ret    
  433dd9:	(bad)  
  433dda:	jmp    0xebfa62da
  433ddf:	inc    edx
  433de0:	js     0x433daa
  433de2:	jae    0x433e26
  433de4:	loope  0x433db0
  433de6:	xchg   DWORD PTR [edx],ebp
  433de8:	loope  0x433ded
  433dea:	xchg   cl,al
  433dec:	(bad)  
  433dee:	xchg   BYTE PTR ds:0x84b8425d,dh
  433df4:	loope  0x433e74
  433df6:	cmp    eax,0xb6410ca2
  433dfb:	mov    eax,0x835b47a8
  433e00:	scas   eax,DWORD PTR es:[edi]
  433e01:	cmp    al,0x63
  433e03:	cmp    DWORD PTR [edx+0x49],0xffffff9a
  433e07:	dec    eax
  433e08:	or     ch,BYTE PTR [esi+0x69fd1069]
  433e0e:	add    BYTE PTR ds:0x85e91383,dl
  433e14:	inc    edx
  433e15:	jmp    DWORD PTR [ebx+0x16]
  433e18:	test   bh,ch
  433e1a:	jmp    0xd27d3807
  433e1f:	dec    edx
  433e20:	adc    edi,edi
  433e22:	rol    DWORD PTR [edx-0x42],1
  433e25:	aas    
  433e26:	mov    ch,0x88
  433e28:	stc    
  433e29:	and    DWORD PTR [eax-0x41],esp
  433e2c:	mov    fs,WORD PTR [ebx]
  433e2e:	and    DWORD PTR [ecx+0x3e],esp
  433e31:	xor    DWORD PTR [esi],0xffffff9e
  433e34:	pop    ebp
  433e35:	ret    0xc4ea
  433e38:	push   edx
  433e39:	sub    DWORD PTR [esi+ecx*2],0xffffffbc
  433e3d:	cmp    eax,0x49f9a0b5
  433e42:	jo     0x433e0a
  433e44:	xor    bp,WORD PTR [eax-0x577cd051]
  433e4b:	sub    BYTE PTR [ecx],bh
  433e4d:	sbb    DWORD PTR [edx+eiz*8],0x5d
  433e51:	ret    0x4c72
  433e54:	add    al,BYTE PTR [ecx+0x45bc2e2c]
  433e5a:	mov    ch,0x6a
  433e5c:	push   ebp
  433e5e:	bound  eax,QWORD PTR [esi-0x6e]
  433e61:	xor    ebp,DWORD PTR [eax-0x577cc0c1]
  433e67:	push   edx
  433e68:	push   ebp
  433e6a:	ret    0xbc0d
  433e6d:	cmp    eax,0xcdf74079
  433e72:	adc    al,BYTE PTR [eax]
  433e74:	cli    
  433e75:	mov    ebp,0xf9325145
  433e7a:	dec    ecx
  433e7b:	bound  eax,QWORD PTR [esi+0x6e]
  433e7e:	and    ebx,DWORD PTR [ebp+edi*4+0x7b003dbb]
  433e85:	fs add ch,bl
  433e88:	pushf  
  433e89:	ret    0x47
  433e8c:	and    al,0x2
  433e8e:	(bad)  
  433e8f:	mov    ah,BYTE PTR [ebx+0x3e]
  433e92:	test   DWORD PTR [ebp-0x69],eax
  433e95:	pop    es
  433e96:	add    al,BYTE PTR [eax-0x70]
  433e99:	add    dh,dh
  433e9b:	mov    DWORD PTR [edx],ebx
  433e9d:	addr16 jnp 0x433e8c
  433ea0:	in     al,dx
  433ea1:	lock dec ecx
  433ea3:	add    BYTE PTR [eax-0x46],dl
  433ea6:	xor    DWORD PTR [ecx],eax
  433ea8:	pop    edi
  433ea9:	aas    
  433eaa:	leave  
  433eab:	pop    es
  433eac:	sub    edi,DWORD PTR [edi]
  433eae:	or     al,BYTE PTR [eax]
  433eb0:	xchg   BYTE PTR [ebx],ch
  433eb2:	out    dx,eax
  433eb3:	jmp    FWORD PTR [edi]
  433eb5:	mov    esi,0x421ff073
  433eba:	xchg   BYTE PTR [eax-0x74f5c0e2],cl
  433ec0:	push   0x66
  433ec2:	mov    BYTE PTR [edi+0x6f],cl
  433ec5:	push   es
  433ec6:	add    al,BYTE PTR [eax-0x30]
  433ec9:	inc    edx
  433eca:	cli    
  433ecb:	mov    DWORD PTR [edx+0x66],ebx
  433ece:	leave  
  433ecf:	pop    es
  433ed0:	fstp   TBYTE PTR [esi]
  433ed2:	or     al,BYTE PTR [eax]
  433ed4:	push   ss
  433ed5:	mov    ?,eax
  433ed7:	inc    DWORD PTR [eax]
  433ed9:	fistp  QWORD PTR [ebp+0x41df0871]
  433edf:	xchg   BYTE PTR [eax-0x7cf5c111],dh
  433ee5:	add    DWORD PTR [esi+0x5d],ebx
  433ee8:	bound  ebx,QWORD PTR es:[edx]
  433eeb:	add    BYTE PTR es:[ebx+esi*8-0x13],bl
  433ef0:	add    al,ah
  433ef2:	mov    edx,0x3eaf013f
  433ef7:	add    DWORD PTR [esi-0x3bc8e63],esi
  433efd:	xchg   BYTE PTR [eax],ah
  433eff:	int3   
  433f00:	int    0xa6
  433f02:	(bad)  
  433f03:	xchg   dl,al
  433f05:	mov    ss,WORD PTR [edx]
  433f07:	aaa    
  433f08:	clc    
  433f09:	test   DWORD PTR [ecx-0x7b],esp
  433f0c:	cli    
  433f0d:	data16 (bad) 
  433f0f:	mov    ecx,0xd0bcb85
  433f14:	inc    ebx
  433f15:	jbe    0x433f0c
  433f17:	or     BYTE PTR cs:[edi-0x3f010856],al
  433f1e:	ja     0x433f94
  433f20:	inc    ebx
  433f21:	out    0xc5,ax
  433f24:	je     0x433ed5
  433f26:	hlt    
  433f27:	cs call 0x5027182a
  433f2d:	popf   
  433f2e:	and    eax,DWORD PTR [ebp+0x3c6b9679]
  433f34:	dec    esi
  433f35:	mov    dl,0x70
  433f37:	ror    DWORD PTR [esi+0x7e],cl
  433f3a:	imul   ecx,DWORD PTR [ebx],0xffffffe5
  433f3d:	add    BYTE PTR [ebx+0x21fcde83],al
  433f43:	ins    BYTE PTR es:[edi],dx
  433f44:	outs   dx,BYTE PTR ds:[esi]
  433f45:	dec    ebx
  433f46:	mov    ?,esp
  433f48:	aaa    
  433f49:	clc    
  433f4a:	jmp    FWORD PTR [eax]
  433f4c:	fiadd  WORD PTR [esi+0x79867bc7]
  433f52:	xchg   esi,eax
  433f53:	imul   ebp,DWORD PTR [esi+0x43],0xfffffff6
  433f57:	repnz inc edi
  433f59:	loopne 0x433f58
  433f5b:	lods   al,BYTE PTR ds:[esi]
  433f5c:	pop    eax
  433f5d:	sbb    eax,0xda6ba3
  433f62:	xchg   ah,ah
  433f64:	lods   eax,DWORD PTR ds:[esi]
  433f65:	mov    edi,0xbf069be7
  433f6a:	std    
  433f6b:	mov    ah,0xcc
  433f6d:	out    0x7e,eax
  433f6f:	jmp    0xbf0b:0x6bc100eb
  433f76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433f77:	inc    edx
  433f78:	stc    
  433f79:	add    al,0xf1
  433f7b:	int    0x3c
  433f7d:	ret    0x5aa1
  433f80:	in     al,0xc2
  433f82:	pop    ebx
  433f83:	or     ecx,edi
  433f85:	push   edi
  433f86:	mov    cl,ch
  433f88:	sahf   
  433f89:	sti    
  433f8a:	mov    BYTE PTR [edx],0xe9
  433f8d:	inc    edi
  433f8e:	adc    eax,0xdadce102
  433f93:	xor    eax,0x8974141c
  433f98:	loopne 0x433f86
  433f9a:	jno    0x433f1d
  433f9c:	loope  0x433f22
  433f9e:	out    dx,eax
  433f9f:	dec    edx
  433fa0:	loope  0x433fa2
  433fa2:	add    BYTE PTR [edx],cl
  433fa4:	shl    cl,1
  433fa6:	add    eax,DWORD PTR [esi+0x51f388c5]
  433fac:	push   eax
  433fad:	xchg   DWORD PTR gs:[esi+0x3c84e142],eax
  433fb4:	and    dh,BYTE PTR [ebp+eiz*1-0x45]
  433fb8:	jmp    esp
  433fba:	add    al,0x7f
  433fbc:	(bad)  
  433fbd:	jl     0x433fc3
  433fbf:	xchg   BYTE PTR [edx-0x18],al
  433fc2:	xchg   ebp,eax
  433fc3:	and    BYTE PTR [eax-0x6ffc2ff2],al
  433fc9:	xchg   esp,eax
  433fca:	in     al,0x50
  433fcc:	lds    esp,FWORD PTR [edi-0x46e8ff04]
  433fd2:	add    ebx,esi
  433fd4:	les    ebx,FWORD PTR [edi-0x135f97dc]
  433fda:	cs xchg edx,eax
  433fdc:	div    BYTE PTR [ebx+edi*2]
  433fdf:	cmp    eax,0x7e45a04a
  433fe4:	push   es
  433fe5:	push   ss
  433fe6:	inc    esp
  433fe7:	xchg   BYTE PTR [ecx-0x7f2e0f20],cl
  433fed:	loope  0x434069
  433fef:	xchg   ebp,eax
  433ff1:	or     dh,BYTE PTR [ecx-0x50]
  433ff4:	dec    ecx
  433ff5:	mov    BYTE PTR [ecx-0x5e108559],cl
  433ffb:	sar    BYTE PTR [edx-0x11],0x5e
  433fff:	pop    eax
  434000:	pop    ss
  434001:	dec    edi
  434002:	bound  ebp,QWORD PTR [edi+0xe1cc1c]
  434008:	test   edi,eax
  43400a:	inc    ebp
  43400b:	icebp  
  43400c:	or     al,0xd
  43400e:	loop   0x434080
  434010:	dec    edx
  434011:	dec    esi
  434012:	and    DWORD PTR [ebp+edx*2-0x409de538],0x7e
  43401a:	xor    DWORD PTR [ecx-0x1aa5368b],0xb72df1ea
  434024:	loop   0x43403f
  434026:	xor    dh,BYTE PTR [edx-0x16107ef3]
  43402c:	test   DWORD PTR [ecx],ebx
  43402e:	add    DWORD PTR [edi+edx*4],0xffffffc0
  434032:	add    ch,cl
  434034:	xchg   esp,eax
  434035:	xchg   ebp,eax
  434036:	cmp    esi,edi
  434038:	inc    eax
  434039:	inc    edx
  43403a:	push   cs
  43403b:	jmp    0x250a82c5
  434040:	fidivr DWORD PTR [edi-0x11]
  434043:	jmp    0xa64aa5cd
  434048:	into   
  434049:	call   0x2483:0x7a40c6ed
  434050:	or     al,bh
  434052:	cmp    eax,0xfe0a82c1
  434057:	popa   
  434058:	inc    esi
  434059:	jb     0x433fdc
  43405b:	stc    
  43405c:	ins    BYTE PTR es:[edi],dx
  43405d:	adc    ebp,esi
  43405f:	jo     0x43400e
  434061:	push   edx
  434062:	cmp    DWORD PTR [ecx],0xc16efd8e
  434068:	test   edi,eax
  43406a:	dec    edi
  43406b:	add    BYTE PTR [eax],al
  43406d:	(bad)  
  43406e:	(bad)  
  43406f:	js     0x4340ad
  434071:	shl    BYTE PTR [ebx+0x6e],cl
  434074:	aas    
  434075:	aad    0x12
  434077:	and    al,0x8b
  434079:	bound  esp,QWORD PTR [esi-0x7b]
  43407c:	dec    ebp
  43407d:	mov    bh,0x4c
  43407f:	das    
  434080:	adc    bl,dl
  434082:	and    al,0x85
  434084:	inc    ebp
  434085:	dec    edi
  434086:	cld    
  434087:	push   edx
  434088:	or     BYTE PTR [edi-0x48],al
  43408b:	in     eax,0xff
  43408d:	dec    eax
  43408e:	retf   0x74ca
  434091:	mov    bl,0x88
  434093:	or     DWORD PTR [esi],ebx
  434095:	outs   dx,DWORD PTR ds:[esi]
  434096:	inc    ebx
  434097:	or     bl,BYTE PTR [esi+0x14]
  43409a:	retf   
  43409b:	out    dx,al
  43409c:	jmp    FWORD PTR [eax-0x7d74ae70]
  4340a2:	xor    dh,BYTE PTR [eax+0x7afc6f08]
  4340a8:	or     ah,ah
  4340aa:	or     bl,dl
  4340ac:	sub    esp,DWORD PTR [ecx]
  4340ae:	inc    edi
  4340af:	test   DWORD PTR [ebp+0x7f],ebx
  4340b2:	pop    esp
  4340b3:	push   esp
  4340b4:	adc    BYTE PTR [esi],ch
  4340b6:	add    eax,0x77090102
  4340bb:	lock pop esi
  4340bd:	mov    eax,ecx
  4340bf:	jno    0x4340c9
  4340c1:	pop    ds
  4340c2:	cld    
  4340c3:	dec    edx
  4340c4:	rol    bl,1
  4340c6:	push   ebx
  4340c7:	mov    ebx,ebx
  4340c9:	mov    bl,0x5f
  4340cb:	ins    DWORD PTR es:[edi],dx
  4340cc:	jg     0x4340fd
  4340ce:	inc    ebx
  4340cf:	cmp    eax,0xfa2e0074
  4340d4:	pop    ebx
  4340d5:	or     al,0x64
  4340d7:	add    eax,0x341c2b12
  4340dc:	pop    edx
  4340dd:	call   0x4d8935
  4340e2:	adc    al,0x7d
  4340e4:	xchg   BYTE PTR [esi-0x7a],cl
  4340e7:	gs jb  0x43413b
  4340ea:	jle    0x434070
  4340ec:	mov    dl,0x4f
  4340ee:	xor    al,0xd1
  4340f0:	pop    ecx
  4340f1:	dec    ecx
  4340f3:	push   0xe29e4174
  4340f8:	inc    edi
  4340f9:	xor    BYTE PTR ds:0x95f88a68,cl
  4340ff:	popf   
  434100:	out    dx,eax
  434101:	rol    BYTE PTR [ebx+0x71],0xb
  434105:	add    BYTE PTR [esi-0x77077597],al
  43410b:	xchg   esi,eax
  43410c:	push   es
  43410d:	ror    DWORD PTR [ebx+0x71],0xb
  434111:	dec    DWORD PTR [ecx-0x75b68d98]
  434117:	cmp    al,0xa3
  434119:	adc    eax,0x7db9794f
  43411e:	lods   al,BYTE PTR ds:[si]
  434120:	mov    bh,al
  434122:	jge    0x434190
  434124:	js     0x4340e4
  434126:	test   DWORD PTR [esi+0x4a0745f3],esp
  43412c:	xchg   BYTE PTR [eax],al
  43412e:	xchg   BYTE PTR [ebx+0xa],ch
  434131:	iret   
  434132:	test   esp,edx
  434134:	(bad)  
  434135:	jl     0x434137
  434137:	ret    
  434138:	pop    ebx
  434139:	push   es
  43413a:	xchg   eax,edx
  43413c:	mov    edi,0x810b0458
  434141:	push   edi
  434142:	add    al,BYTE PTR ds:0x9b040a1f
  434148:	jb     0x4341bc
  43414a:	inc    ebx
  43414b:	ds out 0xca,eax
  43414e:	or     DWORD PTR [ebx],ecx
  434150:	sti    
  434151:	mov    esp,0x215e09f9
  434156:	mov    eax,0xf9beb4fd
  43415b:	pop    ecx
  43415c:	loopne 0x434145
  43415e:	pop    ebx
  43415f:	les    eax,FWORD PTR [edx-0x7]
  434162:	add    eax,DWORD PTR [ebx]
  434164:	or     cl,cl
  434166:	sub    eax,0xe66c1d3b
  43416b:	cmp    eax,0xe03e980
  434170:	jge    0x4340fa
  434172:	int3   
  434173:	iret   
  434174:	sbb    eax,0x805de67c
  434179:	jmp    0xa0c14481
  43417e:	repz jb 0x4341c3
  434181:	out    0xf2,eax
  434183:	push   0x42
  434185:	(bad)  
  434187:	bound  eax,QWORD PTR [edx+0x61]
  43418a:	icebp  
  43418b:	pop    edx
  43418c:	inc    edx
  43418d:	push   esi
  43418e:	icebp  
  43418f:	push   edx
  434190:	inc    edx
  434191:	mov    ah,0xf0
  434193:	dec    edx
  434194:	inc    edx
  434195:	add    eax,0x1442c2f8
  43419a:	test   DWORD PTR [eax],0xf69d42ba
  4341a0:	mov    dl,0x42
  4341a2:	loop   0x434199
  4341a4:	stos   BYTE PTR es:[edi],al
  4341a5:	inc    edx
  4341a6:	scas   eax,DWORD PTR es:[edi]
  4341a7:	cmc    
  4341a8:	mov    ds:0x9af55e42,al
  4341ad:	inc    edx
  4341ae:	jp     0x4341a5
  4341b0:	xchg   edx,eax
  4341b1:	inc    edx
  4341b2:	test   eax,0x36428af4
  4341b7:	hlt    
  4341b8:	add    BYTE PTR [edx+0x3c],0xf4
  4341bc:	jp     0x434200
  4341be:	fsubr  st,st(3)
  4341c0:	jb     0x434204
  4341c2:	je     0x4341b0
  4341c4:	push   0x42
  4341c6:	inc    edx
  4341c7:	in     eax,dx
  4341c8:	bound  eax,QWORD PTR [edx+0xf]
  4341cb:	call   0xe840842a
  4341d0:	push   edx
  4341d1:	inc    edx
  4341d2:	aaa    
  4341d3:	jmp    0x42c2:0xea9c424a
  4341da:	or     ch,bh
  4341dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4341dd:	aas    
  4341de:	or     bl,BYTE PTR [edx]
  4341e0:	stos   BYTE PTR es:[edi],al
  4341e1:	aas    
  4341e2:	or     al,BYTE PTR [eax]
  4341e4:	mov    ds:0xaadc0a3f,eax
  4341e9:	aas    
  4341ea:	or     dl,BYTE PTR [ebx+eiz*4-0x578df5c1]
  4341f1:	aas    
  4341f2:	or     cl,BYTE PTR [ebp-0x60]
  4341f5:	aas    
  4341f6:	or     bh,BYTE PTR [edx+0x68]
  4341f9:	aas    
  4341fa:	or     dh,BYTE PTR [esp+esi*4+0x3d]
  4341fe:	or     bl,bh
  434200:	add    BYTE PTR [ebp+edi*1+0x3db5150a],dh
  434207:	or     bl,BYTE PTR [edx*4+0x18bc0a3d]
  43420e:	outs   dx,BYTE PTR ds:[esi]
  43420f:	pop    eax
  434210:	bound  esi,QWORD PTR [edi]
  434212:	dec    edx
  434213:	test   DWORD PTR [edi],edi
  434215:	cmp    DWORD PTR ss:[ebx-0x353e9659],eax
  43421c:	mov    ebp,0x540c597
  434221:	pop    es
  434222:	test   BYTE PTR [esi-0x2a],dh
  434225:	call   0x4aa7782c
  43422a:	test   DWORD PTR [ebx],0x2200d8b9
  434230:	mov    ecx,0x2d8b8c3c
  434235:	dec    edx
  434236:	mov    DWORD PTR [eax-0x23],0x622210c0
  43423d:	les    esp,FWORD PTR [esi]
  43423f:	pop    ecx
  434240:	fwait
  434241:	cmp    al,0x93
  434243:	mov    ebp,DWORD PTR [ebp-0x2b77cd3]
  434249:	test   DWORD PTR [edx+0xa],eax
  43424c:	jmp    0x2c93c4c1
  434251:	dec    eax
  434252:	inc    edi
  434253:	or     al,BYTE PTR [eax]
  434255:	pop    es
  434256:	mov    dh,cl
  434258:	inc    DWORD PTR [eax+0x2a]
  43425b:	push   ebx
  43425c:	ret    0x3feb
  43425f:	mov    esi,0xbeb413cc
  434264:	int3   
  434265:	add    BYTE PTR [ebx],dh
  434267:	mov    ah,0xbe
  434269:	int3   
  43426a:	xor    esi,DWORD PTR [esi+edi*4-0x22046534]
  434271:	mov    esi,DWORD PTR [edx+0x7e]
  434274:	mov    esp,DWORD PTR ds:[edx+0x68b5a76]
  43427b:	xchg   ecx,esp
  43427d:	adc    BYTE PTR [esi],ch
  43427f:	data16 icebp 
  434281:	call   FWORD PTR [edi-0x610492c1]
  434287:	adc    bl,BYTE PTR ds:0x273ea8b
  43428d:	mov    dh,0x9f
  43428f:	inc    esp
  434290:	enter  0x3681,0x96
  434294:	icebp  
  434295:	add    BYTE PTR [edi-0x297ef3eb],bl
  43429b:	xchg   esi,eax
  43429c:	icebp  
  43429d:	add    BYTE PTR [edi+0x44],ch
  4342a0:	test   DWORD PTR [ecx+0xf196a0],0x810c155f
  4342aa:	nop
  4342ab:	xchg   esi,eax
  4342ac:	icebp  
  4342ad:	add    BYTE PTR [edi-0x4],ch
  4342b0:	enter  0x7fc1,0x6f
  4342b4:	push   edx
  4342b5:	or     ebx,DWORD PTR [esi+0x33c2532c]
  4342bb:	aas    
  4342bc:	pop    esp
  4342bd:	mov    edi,DWORD PTR [edx-0x4509738d]
  4342c3:	jge    0x434249
  4342c5:	inc    esi
  4342c6:	push   ds
  4342c7:	sub    DWORD PTR [ecx+0x5b],edx
  4342ca:	add    BYTE PTR [edx-0x7c],ah
  4342cd:	(bad)  
  4342ce:	inc    DWORD PTR [esi-0x6aef4318]
  4342d4:	sub    BYTE PTR [edi-0x2b],ch
  4342d7:	xchg   edx,eax
  4342d8:	xchg   edi,eax
  4342d9:	js     0x43427f
  4342db:	stos   BYTE PTR es:[edi],al
  4342dc:	imul   ecx,DWORD PTR [ebx],0x99648600
  4342e2:	add    al,BYTE PTR [ebp-0x1102b35f]
  4342e8:	das    
  4342e9:	aas    
  4342ea:	repz pop es
  4342ec:	mov    ds:0x6986f9db,al
  4342f1:	push   ebp
  4342f2:	add    al,BYTE PTR [edi]
  4342f4:	ret    0xf9db
  4342f7:	xchg   BYTE PTR [ecx-0x7d],ch
  4342fa:	outs   dx,DWORD PTR ds:[esi]
  4342fb:	push   es
  4342fc:	fs mov esi,ecx
  4342ff:	mov    eax,ds:0xfd09d0a9
  434304:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434305:	retf   
  434306:	loopne 0x43428a
  434308:	push   eax
  434309:	enter  0xc8fd,0xba
  43430d:	int3   
  43430e:	loopne 0x434386
  434310:	mov    ah,0xee
  434312:	mov    esi,0xcc5ae2d
  434317:	xchg   dl,ch
  434319:	mov    esp,0xb6b9bb0
  43431e:	or     DWORD PTR [esi+ebx*2],eax
  434321:	push   es
  434322:	add    BYTE PTR [esi-0x27586f0d],al
  434328:	sbb    edx,0xed5647dd
  43432e:	xchg   BYTE PTR [eax],al
  434330:	mov    bl,0x5f
  434332:	mov    ebp,fs
  434334:	push   ss
  434335:	outs   dx,DWORD PTR ds:[esi]
  434336:	or     eax,DWORD PTR [eax]
  434338:	push   cs
  434339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43433a:	or     al,0x0
  43433c:	xchg   dh,ah
  43433e:	imul   esp,DWORD PTR [esi+eax*4],0x85129960
  434345:	and    eax,0x42d0b1f1
  43434a:	loop   0x434350
  43434c:	sbb    DWORD PTR [esi-0x45],eax
  43434f:	clc    
  434350:	xlat   BYTE PTR ds:[ebx]
  434351:	adc    bl,ah
  434353:	add    al,0x19
  434355:	inc    esi
  434356:	stos   DWORD PTR es:[edi],eax
  434357:	clc    
  434358:	xlat   BYTE PTR ds:[ebx]
  434359:	adc    ah,ah
  43435b:	add    al,0xf9
  43435d:	inc    ebp
  43435e:	mov    ebx,0xdd1137f8
  434363:	add    al,0xf9
  434365:	inc    ebp
  434366:	stos   DWORD PTR es:[edi],eax
  434367:	clc    
  434368:	aaa    
  434369:	adc    esi,ebx
  43436b:	add    al,0xd9
  43436d:	inc    ebp
  43436e:	mov    ebx,0xdf1117f8
  434373:	add    al,0xd9
  434375:	inc    ebp
  434376:	stos   DWORD PTR es:[edi],eax
  434377:	clc    
  434378:	pop    ss
  434379:	adc    eax,esp
  43437b:	add    al,0xb9
  43437d:	inc    ebp
  43437e:	mov    ebx,0xe910f7f8
  434383:	add    al,0xb9
  434385:	inc    ebp
  434386:	stos   DWORD PTR es:[edi],eax
  434387:	clc    
  434388:	not    DWORD PTR [eax]
  43438a:	cli    
  43438b:	add    al,0x99
  43438d:	inc    ebp
  43438e:	cmp    edi,eax
  434390:	xlat   BYTE PTR ds:[ebx]
  434391:	adc    bl,ch
  434393:	add    al,0x0
  434395:	cdq    
  434396:	inc    ebp
  434397:	sub    edi,eax
  434399:	xlat   BYTE PTR ds:[ebx]
  43439a:	adc    ah,bh
  43439c:	add    al,0x79
  43439e:	inc    ebp
  43439f:	cmp    edi,eax
  4343a1:	aaa    
  4343a2:	adc    ch,ah
  4343a4:	add    al,0x79
  4343a6:	inc    ebp
  4343a7:	sub    edi,eax
  4343a9:	aaa    
  4343aa:	adc    dh,dh
  4343ac:	add    al,0x59
  4343ae:	inc    ebp
  4343af:	cmp    edi,eax
  4343b1:	pop    ss
  4343b2:	adc    bh,ah
  4343b4:	add    al,0x59
  4343b6:	inc    ebp
  4343b7:	sub    edi,eax
  4343b9:	pop    ss
  4343ba:	adc    al,bh
  4343bc:	add    al,0x39
  4343be:	inc    ebp
  4343bf:	cmp    eax,DWORD PTR [ecx+esi*1]
  4343c2:	lds    ecx,FWORD PTR [edx]
  4343c4:	das    
  4343c5:	xor    eax,0xd663ff01
  4343ca:	jnp    0x4343bb
  4343cc:	out    0x12,al
  4343ce:	jmp    0x73492a5c
  4343d3:	jmp    0x618e7080
  4343d8:	mov    ebx,0xc6f07911
  4343dd:	test   DWORD PTR [eax+0x430238b2],eax
  4343e3:	mov    bh,BYTE PTR [esi-0x211b472f]
  4343e9:	dec    edx
  4343ea:	mov    bh,bh
  4343ec:	call   0xa34ebeb9
  4343f1:	ror    DWORD PTR [esi+edi*8],0xe5
  4343f5:	push   es
  4343f6:	das    
  4343f7:	out    dx,eax
  4343f8:	mov    es,WORD PTR [eax]
  4343fa:	rol    esp,0xd3
  4343fd:	test   BYTE PTR [ecx-0x77],0xa
  434401:	jmp    0xda363b8b
  434406:	mov    eax,0x85e994f6
  43440b:	inc    edx
  43440c:	sub    DWORD PTR [edx],0xffffffcb
  43440f:	imul   eax,DWORD PTR [esi],0xa1e266c
  434415:	out    0x3,al
  434417:	push   esp
  434418:	or     esp,DWORD PTR [ebx]
  43441a:	xchg   ecx,eax
  43441b:	mov    dl,0x58
  43441d:	call   0x334eb3a6
  434422:	jno    0x4343d6
  434424:	pop    eax
  434425:	jmp    0x4343ab
  434427:	outs   dx,DWORD PTR ds:[esi]
  434428:	or     esp,DWORD PTR [ebx]
  43442a:	jno    0x4343de
  43442c:	pop    eax
  43442d:	jmp    0xb251:0x330b6f84
  434434:	pop    eax
  434435:	in     eax,dx
  434436:	test   BYTE PTR [edi+0xb],ch
  434439:	and    edx,DWORD PTR [ecx-0x4e]
  43443c:	pop    eax
  43443d:	add    BYTE PTR [edx],dh
  43443f:	inc    ebp
  434440:	test   DWORD PTR [ebx],0x56b96f75
  434446:	and    DWORD PTR [ebp-0x9],eax
  434449:	add    esp,DWORD PTR [ebp+0x6f]
  43444c:	mov    ecx,0xf7453056
  434451:	add    edx,ebp
  434453:	jo     0x43440e
  434455:	push   esi
  434456:	daa    
  434457:	inc    ebp
  434458:	test   DWORD PTR [ebx],0x56b970e5
  43445e:	add    dh,dh
  434460:	inc    esp
  434461:	test   DWORD PTR [ebx],0x56b97135
  434467:	in     eax,0x44
  434469:	test   DWORD PTR [ebx],0x56b97125
  43446f:	aam    0x44
  434471:	test   DWORD PTR [ebx],0x56b97115
  434477:	jmp    0x4344bd
  434479:	test   DWORD PTR [ebx],0x56b97125
  43447f:	mov    edx,0xf503f744
  434484:	jo     0x43443f
  434486:	push   esi
  434487:	test   eax,0xe503f744
  43448c:	jo     0x434447
  43448e:	push   esi
  43448f:	cwde   
  434490:	inc    esp
  434491:	test   DWORD PTR [ebx],0x10e5c455
  434497:	pushf  
  434498:	xchg   BYTE PTR [ebp-0x3a],ch
  43449b:	(bad)  
  43449c:	cmp    eax,DWORD PTR [ecx]
  43449e:	test   DWORD PTR [ebx-0x80],eax
  4344a1:	icebp  
  4344a2:	jmp    edx
  4344a4:	lods   al,BYTE PTR ds:[esi]
  4344a5:	jbe    0x4344b2
  4344a7:	push   0xa7030cc5
  4344ac:	xor    eax,0x1214f8ed
  4344b1:	sti    
  4344b2:	mov    eax,0x8009c2fe
  4344b7:	xchg   BYTE PTR [eax-0x1a],bl
  4344ba:	mov    edi,0xce4e985c
  4344bf:	xchg   ecx,eax
  4344c0:	imul   ecx,eax,0x338500f9
  4344c6:	sub    DWORD PTR [edi+0x6],0x68
  4344ca:	mov    esi,ecx
  4344cc:	and    DWORD PTR [edx],ebp
  4344ce:	ror    DWORD PTR [ecx],1
  4344d0:	scas   eax,DWORD PTR es:[edi]
  4344d1:	mov    ebx,0x9818fff5
  4344d6:	or     esi,esi
  4344d8:	std    
  4344d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4344da:	sub    BYTE PTR [edi+0x5267926],bh
  4344e0:	(bad)  
  4344e1:	and    esp,DWORD PTR [edi]
  4344e3:	mov    esi,0xccb7698a
  4344e8:	ret    0x7156
  4344eb:	out    dx,al
  4344ec:	icebp  
  4344ed:	fsubr  DWORD PTR [edi-0xe]
  4344f0:	pop    edx
  4344f1:	xchg   BYTE PTR [eax-0x5c],bh
  4344f4:	mov    ds:0x86000b69,al
  4344f9:	xlat   BYTE PTR ds:[ebx]
  4344fa:	retf   
  4344fb:	std    
  4344fc:	push   ebp
  4344fd:	jb     0x4344f5
  4344ff:	mov    cl,0x97
  434501:	mov    esp,0xf7a47fbb
  434506:	add    eax,0xceaa8600
  43450b:	or     BYTE PTR [ebp+0x5d],dh
  43450e:	pusha  
  43450f:	cmp    BYTE PTR [ebp-0x57],ah
  434512:	or     edi,DWORD PTR [edi]
  434514:	dec    eax
  434515:	mov    gs,ecx
  434517:	dec    ebp
  434518:	cmp    esp,ebp
  43451a:	(bad)  
  43451b:	and    BYTE PTR [ecx-0x15],bh
  43451e:	lock std 
  434520:	sub    DWORD PTR [edx+esi*2-0x6],0x84ef0547
  434528:	add    BYTE PTR [ecx+0x79],dh
  43452b:	or     al,0x85
  43452d:	push   esi
  43452e:	sub    edx,esp
  434530:	adc    BYTE PTR ds:0x63c34943,cl
  434536:	dec    ebx
  434537:	(bad)
  43453c:	add    ecx,ecx
  43453e:	pusha  
  43453f:	add    BYTE PTR [esi+eax*4],al
  434542:	inc    edx
  434543:	jl     0x434535
  434545:	adc    al,0x3b
  434547:	enter  0x8643,0x31
  43454b:	int    0x66
  43454d:	outs   dx,BYTE PTR ds:[esi]
  43454e:	sub    DWORD PTR [ecx-0x5d64f4fd],esp
  434554:	fdivr  DWORD PTR [esi+0x31]
  434557:	cmc    
  434558:	dec    si
  43455a:	and    DWORD PTR [ecx],esp
  43455c:	add    al,0x65
  43455e:	jne    0x434541
  434560:	add    eax,DWORD PTR [esi-0x418132cf]
  434566:	and    eax,0x13a30421
  43456b:	fnstsw WORD PTR [eax+0x28]
  43456e:	test   cl,cl
  434570:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434572:	jne    0x434555
  434574:	add    eax,DWORD PTR [esi-0x71811a37]
  43457a:	sbb    eax,0x99030421
  43457f:	mov    ds:0x84c38ed8,al
  434584:	les    eax,FWORD PTR [esi-0x75ef1ebe]
  43458a:	xlat   BYTE PTR ds:[ebx]
  43458b:	mov    ecx,0x42460018
  434590:	ins    BYTE PTR es:[edi],dx
  434591:	test   eax,0x110969e1
  434596:	adc    bh,0x29
  434599:	and    DWORD PTR [esi+0x42],eax
  43459c:	(bad)
  4345a1:	add    esi,DWORD PTR [ebx-0x50f4b1c2]
  4345a7:	add    ah,cl
  4345a9:	adc    BYTE PTR [ecx+0x35620a4a],dh
  4345af:	mov    ch,0xe4
  4345b1:	(bad)  
  4345b3:	call   0x1eea:0xf45d12c9
  4345ba:	test   DWORD PTR [edx+0xa],eax
  4345bd:	push   0xe90a7b67
  4345c2:	test   DWORD PTR [edi+0x238d5c16],edi
  4345c8:	dec    edx
  4345c9:	jmp    0xb1d09464
  4345ce:	mov    es,WORD PTR [edx]
  4345d0:	or     ah,BYTE PTR [edx-0x13]
  4345d3:	mov    ah,0xe3
  4345d5:	add    DWORD PTR [ecx],edx
  4345d7:	push   ecx
  4345d8:	lea    esp,[ecx]
  4345da:	sub    DWORD PTR ds:0x42450c0a,esi
  4345e0:	or     ch,cl
  4345e2:	clc    
  4345e3:	push   eax
  4345e4:	test   DWORD PTR [ecx],eax
  4345e6:	cmc    
  4345e7:	xor    al,0xa
  4345e9:	cli    
  4345ea:	pop    edx
  4345eb:	inc    esi
  4345ec:	sub    DWORD PTR [ebx+0x41a69c3],0x0
  4345f3:	lds    eax,FWORD PTR [ecx+0xa]
  4345f6:	jmp    0xe1c88403
  4345fb:	fdiv   QWORD PTR [edx+ecx*1]
  4345fe:	bound  ebp,QWORD PTR [eax+0xae1e3b4]
  434604:	xchg   edi,eax
  434605:	out    dx,eax
  434606:	jmp    0xe57e8890
  43460b:	out    0x39,al
  43460d:	and    ebp,DWORD PTR [ecx]
  43460f:	cmp    BYTE PTR [edi+0x59f1a8d4],0x3b
  434616:	in     eax,dx
  434617:	out    0x39,al
  434619:	sub    ebp,DWORD PTR [ecx+0x56ebf585]
  43461f:	add    BYTE PTR [edx+0xa],0x1a
  434623:	mov    cs,edi
  434625:	xor    al,BYTE PTR [eax]
  434627:	nop
  434628:	dec    BYTE PTR [ecx]
  43462a:	xor    ebx,DWORD PTR [esi]
  43462c:	push   eax
  43462d:	test   eax,edx
  43462f:	sahf   
  434630:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434631:	sbb    cl,BYTE PTR [ebx+0x8e57d77]
  434637:	out    dx,al
  434638:	pushf  
  434639:	icebp  
  43463a:	add    BYTE PTR [edi+0x40],bl
  43463d:	test   DWORD PTR [edx+ecx*8],edx
  434640:	jbe    0x43466c
  434642:	inc    eax
  434643:	das    
  434644:	mov    edi,0x402fffcd
  434649:	or     dh,BYTE PTR [ebx]
  43464b:	pop    ebx
  43464c:	mov    ds:0x3fdf2b32,eax
  434651:	test   eax,ebx
  434653:	outs   dx,BYTE PTR ds:[esi]
  434654:	mov    ds:0x1b003312,eax
  434659:	mov    ds:0x3e5f2332,eax
  43465e:	sub    edi,edi
  434660:	pop    ds
  434661:	inc    eax
  434662:	or     dh,BYTE PTR [ebx]
  434664:	sti    
  434665:	retf   0x2f32
  434668:	scas   eax,DWORD PTR es:[edi]
  434669:	ds sbb eax,0xb0c4db51
  43466f:	rol    edi,0x4f
  434672:	sub    edi,edi
  434674:	out    dx,eax
  434675:	aas    
  434676:	or     cl,BYTE PTR [ebx+0x2732caeb]
  43467c:	lahf   
  43467d:	ds test edx,ebx
  434680:	push   ds
  434681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434682:	add    al,BYTE PTR [ecx+0xa810c]
  434688:	scas   eax,DWORD PTR es:[edi]
  434689:	ins    BYTE PTR es:[edi],dx
  43468a:	or     ebx,DWORD PTR [ebp+0x2f64c7]
  434690:	and    al,0x95
  434692:	scas   eax,DWORD PTR es:[edi]
  434693:	jmp    0x43464c
  434695:	ins    BYTE PTR es:[edi],dx
  434696:	or     ebx,DWORD PTR [ebp+0x2f5b67]
  43469c:	push   ds
  43469d:	popf   
  43469e:	icebp  
  43469f:	add    BYTE PTR [esi-0x75d2f497],al
  4346a5:	out    dx,al
  4346a6:	repnz sub dh,al
  4346a9:	imul   ecx,DWORD PTR [eax+0x4678a6bf],0xeafb05f8
  4346b3:	test   BYTE PTR [esi],dh
  4346b5:	loopne 0x434689
  4346b7:	mov    edi,0xe5c6796c
  4346bc:	add    BYTE PTR [esi-0x16],bh
  4346bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4346c0:	stc    
  4346c1:	xchg   BYTE PTR [ecx+0xb],ch
  4346c4:	test   DWORD PTR [edx-0x39df0d12],ebx
  4346ca:	imul   eax,DWORD PTR [esi+0xb6931dd],0xaa957500
  4346d4:	cmp    BYTE PTR [ebp-0x57],ch
  4346d7:	or     eax,DWORD PTR [ebp+0x189daa3e]
  4346dd:	push   ebp
  4346de:	ins    DWORD PTR es:[edi],dx
  4346df:	nop
  4346e0:	cmp    BYTE PTR [ebp+0x29],ah
  4346e3:	push   es
  4346e4:	and    eax,DWORD PTR [ecx]
  4346e6:	imul   ecx,DWORD PTR [ebx],0x8895b500
  4346ec:	cmp    BYTE PTR [ecx+0x572d0629],ah
  4346f2:	lods   eax,DWORD PTR ds:[esi]
  4346f3:	jge    0x4346b3
  4346f5:	mov    DWORD PTR [eax+0x68d92316],0x5cfd000b
  4346ff:	mov    BYTE PTR [eax],bh
  434701:	mov    eax,ds:0xdc850629
  434706:	test   eax,0xc807089d
  43470b:	leave  
  43470c:	add    BYTE PTR [esi+0xb03f669],al
  434712:	mov    cl,0xde
  434714:	aas    
  434715:	xchg   al,ah
  434717:	iret   
  434718:	mov    edi,0xf50941ad
  43471d:	test   ebp,edx
  43471f:	sub    ebp,esp
  434721:	add    BYTE PTR [ecx+0x42],cl
  434724:	bound  esp,QWORD PTR [esi+0x3e1437f]
  43472a:	stos   DWORD PTR es:[edi],eax
  43472b:	inc    esi
  43472c:	dec    esi
  43472d:	cld    
  43472e:	sahf   
  43472f:	add    ah,cl
  434731:	push   eax
  434732:	jg     0x4346fb
  434734:	xor    eax,0x64725fbf
  434739:	ret    0xf482
  43473c:	mov    al,0x8c
  43473e:	xor    al,0x84
  434740:	sbb    eax,DWORD PTR [esi]
  434742:	add    esi,DWORD PTR [edx-0x2c]
  434745:	add    al,bl
  434747:	and    ebp,0xffffff8c
  43474a:	test   BYTE PTR ds:[eax],bl
  43474d:	adc    al,0xb1
  43474f:	imul   esi,eax,0x6c428603
  434755:	add    ch,bl
  434757:	sub    cl,al
  434759:	inc    ebx
  43475a:	xchg   BYTE PTR [ebp+0x3b2bc2c9],bh
  434760:	bound  esp,QWORD PTR [edi+ecx*1-0x4cfc1ebd]
  434767:	cs pop esi
  434769:	sti    
  43476a:	mov    ds:0xce8ce102,al
  43476f:	sbb    esp,0x1b
  434772:	fwait
  434773:	cs push esi
  434775:	sti    
  434776:	add    BYTE PTR [edx],0xe1
  434779:	out    0xde,al
  43477b:	inc    edx
  43477c:	loope  0x434781
  43477e:	mov    ds:0x9efb662e,eax
  434783:	add    ah,cl
  434785:	test   BYTE PTR [eax],al
  434787:	lods   al,BYTE PTR ds:[esi]
  434788:	inc    esi
  434789:	sub    ecx,DWORD PTR [ebp+0x602ff7c7]
  43478f:	pop    ebx
  434790:	(bad)  
  434791:	ja     0x4347ca
  434793:	nop
  434794:	ror    BYTE PTR [edx],cl
  434796:	out    0x1f,al
  434798:	inc    ecx
  434799:	cmp    ebx,DWORD PTR [ecx-0x16106efc]
  43479f:	test   DWORD PTR [edx-0x37],eax
  4347a2:	push   ecx
  4347a3:	jge    0x4347c4
  4347a5:	push   es
  4347a6:	jl     0x434825
  4347a8:	dec    esi
  4347a9:	dec    edx
  4347aa:	jmp    0x4eb84473
  4347af:	cs xchg edx,eax
  4347b1:	push   eax
  4347b2:	sub    bh,BYTE PTR [ecx]
  4347b4:	jle    0x434774
  4347b6:	pushf  
  4347b7:	adc    bl,BYTE PTR [esi-0x7d]
  4347ba:	pushf  
  4347bb:	mov    ebp,eax
  4347bd:	rcr    DWORD PTR [edi+edi*2+0x43bcca1f],0x3e
  4347c5:	or     ah,BYTE PTR [edx-0x28]
  4347c8:	push   edx
  4347c9:	and    DWORD PTR [ebp+ecx*4+0x4604255a],0x6b
  4347d1:	dec    ebp
  4347d2:	sub    edi,DWORD PTR [ecx+0x42]
  4347d5:	mov    esi,0x5b14be9c
  4347da:	push   0xffffffe9
  4347dc:	and    eax,0x391e3d83
  4347e1:	sub    DWORD PTR ds:0x2b832d1e,0xffffffc2
  4347e8:	(bad)  
  4347e9:	xchg   esp,eax
  4347ea:	pop    ebp
  4347eb:	add    BYTE PTR [edx-0x3afdf5be],al
  4347f1:	(bad)  
  4347f2:	dec    esp
  4347f3:	cmc    
  4347f4:	cld    
  4347f5:	pop    ss
  4347f6:	outs   dx,BYTE PTR ds:[esi]
  4347f7:	xor    eax,0xebe3b185
  4347fc:	dec    esp
  4347fd:	mov    cl,0xeb
  4347ff:	stc    
  434800:	jl     0x43478c
  434802:	cmp    ebp,0x798cc5e1
  434808:	mov    al,BYTE PTR [edx+0xa]
  43480b:	bound  ebx,QWORD PTR [esi+esi*8+0x32]
  43480f:	add    bh,ah
  434811:	add    eax,esi
  434813:	mov    ah,bh
  434815:	mov    esi,0xbbb7244e
  43481a:	pusha  
  43481b:	cmp    BYTE PTR [esi],ah
  43481d:	sub    ah,BYTE PTR [esi]
  43481f:	add    al,0x14
  434821:	sbb    al,0x5e
  434823:	lea    ebp,[ebx+0x5b88ef69]
  434829:	push   0xb7a08b0f
  43482e:	rol    BYTE PTR [ebx+0x448743bf],cl
  434834:	or     DWORD PTR [edx-0x7b],0x42
  434838:	mov    esi,DWORD PTR [ecx+0x9]
  43483b:	add    DWORD PTR [edi+0x44],ebp
  43483e:	and    eax,0x1d4228e8
  434843:	in     eax,dx
  434844:	aam    0x4
  434846:	jb     0x4347d1
  434848:	repz adc eax,DWORD PTR [bp+di]
  43484c:	lahf   
  43484d:	mov    ebp,0x37002476
  434852:	inc    ecx
  434853:	mov    ecx,0x25e2b61f
  434858:	adc    BYTE PTR [eax],ch
  43485a:	stc    
  43485b:	dec    ebp
  43485c:	cmp    BYTE PTR [eax],ch
  43485e:	mov    edi,0xbd1b244e
  434863:	js     0x4348a5
  434865:	xchg   esp,eax
  434866:	push   edi
  434867:	es jmp 0x434864
  43486a:	rol    BYTE PTR [edi+0x0],cl
  43486d:	mov    WORD PTR [ecx+eax*1-0x49],?
  434871:	sti    
  434872:	add    BYTE PTR ds:0xeac5d8cd,dh
  434878:	add    bh,ch
  43487a:	inc    ebx
  43487b:	outs   dx,DWORD PTR ds:[esi]
  43487c:	jmp    0xbbd8:0xffef43ef
  434883:	(bad)  
  434884:	add    bh,bl
  434886:	inc    ebx
  434887:	add    DWORD PTR [edi-0x70ae27a],esi
  43488d:	jge    0x43482b
  43488f:	xor    bl,bl
  434891:	std    
  434892:	sbb    eax,0x387903e2
  434897:	pop    es
  434898:	call   FWORD PTR [ebp+ebx*1-0x1e]
  43489c:	(bad)  
  43489e:	sar    BYTE PTR [esi+0x14],1
  4348a1:	push   0xfffffff4
  4348a3:	ss and al,0x82
  4348a6:	hlt    
  4348a7:	cs and al,0xa6
  4348aa:	pop    esp
  4348ab:	mov    dh,0x85
  4348ad:	ret    0x1245
  4348b0:	mov    dh,0x6e
  4348b2:	pop    es
  4348b3:	mov    al,0xf9
  4348b5:	add    bl,bh
  4348b7:	in     al,dx
  4348b8:	repnz pop es
  4348ba:	xchg   DWORD PTR [ecx+0xb],ebx
  4348bd:	mov    edx,DWORD PTR [edx]
  4348bf:	imul   eax,DWORD PTR [ebx],0x845951ff
  4348c5:	add    al,0x94
  4348c7:	mov    WORD PTR [edi],es
  4348c9:	ss mov ebx,0x7444846d
  4348cf:	gs cld 
  4348d1:	inc    ebx
  4348d2:	ins    BYTE PTR es:[edi],dx
  4348d3:	pop    ebp
  4348d4:	xor    al,BYTE PTR [ecx]
  4348d6:	add    eax,0x2f73031b
  4348db:	inc    esp
  4348dc:	ss jge 0x434923
  4348df:	gs pop esi
  4348e1:	stc    
  4348e2:	adc    DWORD PTR [ecx+0xb],ebx
  4348e5:	jae    0x434867
  4348e7:	fmul   st(3),st
  4348e9:	inc    dh
  4348eb:	adc    BYTE PTR [esi],0x2c
  4348ee:	xchg   esp,ebx
  4348f0:	fild   DWORD PTR [eax]
  4348f2:	add    ebx,DWORD PTR [ebp-0xf]
  4348f5:	test   BYTE PTR [edx+0x45],ch
  4348f8:	out    0x24,al
  4348fa:	leave  
  4348fb:	jne    0x434906
  4348fd:	(bad)  
  4348fe:	fstp   DWORD PTR [eax+0x30]
  434901:	dec    esp
  434902:	std    
  434903:	inc    ecx
  434904:	sub    eax,0x2dbb91e8
  434909:	call   0x3de774ab
  43490e:	mov    edi,DWORD PTR [ebx-0x447617eb]
  434914:	or     eax,DWORD PTR [ebx+eax*1+0xe]
  434918:	lds    ecx,FWORD PTR [edi]
  43491a:	add    BYTE PTR [ebx],cl
  43491c:	push   esi
  43491d:	mov    ebp,0x606f4caa
  434922:	mov    ebp,0x1bfd0e0b
  434927:	add    DWORD PTR [esi],eax
  434929:	add    eax,0xd0f90920
  43492e:	clc    
  43492f:	cmp    dh,al
  434931:	in     eax,dx
  434932:	mov    dl,bh
  434934:	fld    QWORD PTR es:[eax]
  434937:	jbe    0x4348f5
  434939:	mov    ch,0xe7
  43493b:	mov    DWORD PTR ds:0x6d9e6070,edi
  434941:	ins    BYTE PTR es:[edi],dx
  434942:	cmp    al,dh
  434944:	mov    ebx,0xb97de7c5
  434949:	cmc    
  43494a:	out    0x28,eax
  43494c:	and    al,0x18
  43494e:	mov    ebp,0xe7b5ba3f
  434953:	jns    0x4348da
  434955:	popf   
  434956:	out    0x8d,eax
  434958:	inc    eax
  434959:	loop   0x43495e
  43495b:	xchg   BYTE PTR [ebx+0x170333ab],bh
  434961:	(bad)  
  434964:	paddw  mm3,QWORD PTR [edi]
  434967:	add    eax,DWORD PTR [ecx]
  434969:	push   ebp
  43496a:	stc    
  43496b:	fldln2 
  43496d:	loop   0x4348f7
  43496f:	cmp    eax,edx
  434971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434972:	out    0x5a,eax
  434974:	or     al,0x28
  434976:	pop    edi
  434977:	sub    eax,DWORD PTR [eax-0x5]
  43497a:	and    dh,BYTE PTR [ebx-0x21]
  43497d:	or     edi,edi
  43497f:	add    ch,bl
  434981:	xor    ebp,DWORD PTR [edx]
  434983:	ss popf 
  434985:	mul    BYTE PTR [ecx-0x37]
  434988:	cwde   
  434989:	or     eax,0x4db60c7b
  43498e:	pop    edi
  43498f:	sbb    DWORD PTR [esi-0x1b],edi
  434992:	pop    esp
  434993:	add    BYTE PTR [edi-0x1f],dh
  434996:	gs leave 
  434998:	fistp  QWORD PTR fs:[edx+0x4]
  43499c:	jno    0x4349aa
  43499e:	pop    esi
  43499f:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4349a1:	push   cs
  4349a2:	pop    edi
  4349a3:	add    eax,0xdb682269
  4349a8:	pop    edx
  4349a9:	fldcw  WORD PTR [ecx]
  4349ab:	stos   DWORD PTR es:[edi],eax
  4349ac:	mov    bh,0xe5
  4349ae:	push   0x68ff65c7
  4349b3:	sar    BYTE PTR [ecx+0x62157be1],0xf2
  4349ba:	jnp    0x43498c
  4349bc:	cdq    
  4349bd:	mul    BYTE PTR [edi+eax*8+0x65]
  4349c1:	sbb    al,0x31
  4349c3:	lock dec ebp
  4349c5:	cmp    BYTE PTR [edx+ebp*1],al
  4349c8:	cmp    DWORD PTR [esi-0x42],edi
  4349cb:	sub    eax,0x64be7e51
  4349d0:	pop    es
  4349d1:	(bad)  
  4349d2:	or     ch,cl
  4349d4:	test   DWORD PTR [ebp+0x4285e810],esi
  4349da:	pop    eax
  4349db:	ins    BYTE PTR es:[edi],dx
  4349dc:	imul   esp,DWORD PTR [esi],0xdfd3ba0a
  4349e2:	cmp    BYTE PTR [ecx+0x6820600],0x30
  4349e9:	push   edi
  4349ea:	jno    0x434a69
  4349ec:	imul   edx,DWORD PTR [edx],0x45
  4349ef:	or     ch,cl
  4349f1:	jp     0x434a3b
  4349f3:	or     ch,cl
  4349f5:	test   DWORD PTR [edi],ebx
  4349f7:	clc    
  4349f8:	add    BYTE PTR [ecx],bh
  4349fa:	mov    edi,0x422f833a
  4349ff:	inc    edi
  434a00:	jne    0x434a1c
  434a02:	mov    ebx,0x40e57c70
  434a07:	or     bh,BYTE PTR [ecx+0xa40cc]
  434a0d:	xor    ah,BYTE PTR [edx]
  434a0f:	es add ah,bl
  434a12:	mov    dl,0x6c
  434a14:	mov    edi,ecx
  434a16:	ret    
  434a17:	retf   0x7604
  434a1a:	xor    edi,ebx
  434a1c:	mov    eax,0xa40ae
  434a21:	mov    DWORD PTR [edi+0x40ab9470],edi
  434a27:	or     dh,BYTE PTR [ebx]
  434a29:	pop    edi
  434a2a:	mov    edi,0x4079ac70
  434a2f:	or     cl,BYTE PTR [ecx+0x1bdeed]
  434a35:	pop    edi
  434a36:	mov    edi,0x4049b070
  434a3b:	or     cl,BYTE PTR [ecx+0x1be6ed]
  434a41:	outs   dx,DWORD PTR ds:[esi]
  434a42:	or     ch,BYTE PTR [ebp-0x41858c34]
  434a48:	int3   
  434a49:	add    BYTE PTR [ebx+0x73ccbe7a],dl
  434a4f:	jp     0x434a0f
  434a51:	int3   
  434a52:	cli    
  434a53:	mov    esp,0xd6a451de
  434a58:	pop    edx
  434a59:	adc    al,0x1f
  434a5b:	inc    eax
  434a5c:	cmp    eax,0x2319456
  434a61:	mov    esi,DWORD PTR [ebx+0x1f0b4df6]
  434a67:	inc    eax
  434a68:	or     DWORD PTR [ecx+ebp*2],0xffffffbd
  434a6c:	push   ebx
  434a6d:	cld    
  434a6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434a6f:	jl     0x434a72
  434a71:	pop    DWORD PTR [esi-0x79fff446]
  434a77:	(bad)  
  434a78:	clc    
  434a79:	test   BYTE PTR [edx],dh
  434a7b:	repnz sub al,BYTE PTR ds:0x9c805986
  434a82:	push   cs
  434a83:	push   esi
  434a84:	(bad)  
  434a85:	inc    DWORD PTR [esi+0x11147c8c]
  434a8b:	jne    0x434b09
  434a8d:	sbb    al,0x21
  434a8f:	inc    esp
  434a90:	out    dx,eax
  434a91:	int3   
  434a92:	xor    al,0x72
  434a94:	cmp    bl,BYTE PTR [eax]
  434a96:	cld    
  434a97:	cmc    
  434a98:	or     BYTE PTR [eax-0x6e],bl
  434a9b:	pop    ecx
  434a9c:	or     eax,DWORD PTR [ebp+0x556f1da]
  434aa2:	xchg   BYTE PTR [ecx-0x13],bl
  434aa5:	xchg   ebx,eax
  434aa6:	mov    BYTE PTR [ecx+0x1a],dl
  434aa9:	add    BYTE PTR [esi+0x3f068c],al
  434aaf:	or     eax,0x8d5c83d5
  434ab4:	pop    ecx
  434ab5:	or     eax,DWORD PTR [ebp-0x4efc0225]
  434abb:	xchg   edx,eax
  434abc:	or     al,0x4
  434abe:	mov    cl,0x82
  434ac0:	hlt    
  434ac1:	sub    BYTE PTR ds:0x734ba735,dh
  434ac7:	jne    0x434aa9
  434ac9:	pop    ecx
  434aca:	cld    
  434acb:	cld    
  434acc:	les    eax,FWORD PTR ds:0xb599a58
  434ad2:	sbb    bl,BYTE PTR ss:[ebx+0x53]
  434ad6:	adc    al,0x86
  434ad8:	pop    ecx
  434ad9:	cmp    DWORD PTR [edx],ebp
  434adb:	std    
  434adc:	int    0x3
  434ade:	xchg   edx,ebx
  434ae0:	or     BYTE PTR [edi+0x5],dl
  434ae3:	xchg   BYTE PTR [ecx-0x80],bl
  434ae6:	nop
  434ae7:	mov    dh,0x95
  434ae9:	or     eax,DWORD PTR [eax]
  434aeb:	std    
  434aec:	inc    ecx
  434aed:	rol    BYTE PTR ds:0xc56b8c9,cl
  434af3:	mov    bl,0x78
  434af5:	push   edi
  434af6:	xchg   BYTE PTR [ebx],cl
  434af8:	std    
  434af9:	mov    esp,0x25b1fa8b
  434afe:	or     eax,0x5d0f4286
  434b03:	add    esp,DWORD PTR [ebp+0x16]
  434b06:	lds    ecx,FWORD PTR [ebx]
  434b08:	adc    eax,0x3a3d8d9d
  434b0d:	inc    edi
  434b0e:	mov    ebx,DWORD PTR [edx]
  434b10:	mov    edx,0x86000d2d
  434b15:	inc    edx
  434b16:	cmp    al,0x8d
  434b18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434b19:	or     al,0xa4
  434b1b:	mov    ecx,DWORD PTR [edx]
  434b1d:	mov    dl,0x25
  434b1f:	or     eax,0x5d0f4286
  434b24:	add    esp,DWORD PTR [ebp+0x16]
  434b27:	(bad)
  434b2a:	(bad)  
  434b2b:	enter  0x7dba,0x35
  434b2f:	enter  0x7752,0x1d
  434b33:	enter  0x774a,0xae
  434b37:	mov    WORD PTR [edx-0x3a],fs
  434b3a:	sub    eax,0xdd1402ec
  434b3f:	push   esp
  434b40:	or     ecx,DWORD PTR [esp+edi*2+0x4b]
  434b44:	mov    ?,WORD PTR [ebx+0x540bab8e]
  434b4a:	push   0x4f
  434b4c:	sub    bh,BYTE PTR [esi-0x4428004e]
  434b52:	mov    dh,0xa3
  434b54:	add    edx,DWORD PTR [ecx+ebp*8]
  434b57:	push   eax
  434b58:	or     ebp,esp
  434b5a:	lock hlt 
  434b5c:	inc    eax
  434b5d:	mov    esp,0xb18f9f8e
  434b62:	adc    cl,BYTE PTR [ebp+0xb0a8440]
  434b68:	jp     0x434ba9
  434b6a:	les    esp,FWORD PTR [eax-0x6]
  434b6d:	es add ebp,ecx
  434b70:	test   ecx,eax
  434b72:	sub    BYTE PTR [ecx],0x8b
  434b75:	inc    edx
  434b76:	or     ah,BYTE PTR [eax+0x0]
  434b79:	std    
  434b7a:	inc    BYTE PTR [edx]
  434b7c:	jmp    0x31c60d06
  434b81:	xchg   ebx,eax
  434b82:	inc    edx
  434b83:	or     dh,BYTE PTR [eax+0xd]
  434b86:	test   DWORD PTR [edx],0x82c185e9
  434b8c:	sbb    DWORD PTR [ebx+0x42],edi
  434b8f:	or     dh,BYTE PTR [eax+0xd]
  434b92:	lsl    ebp,cx
  434b95:	test   ecx,eax
  434b97:	xor    BYTE PTR [ecx],0x83
  434b9a:	inc    edx
  434b9b:	or     ah,BYTE PTR [edx-0x3]
  434b9e:	push   cs
  434b9f:	push   ss
  434ba0:	jmp    0x71da0b2a
  434ba5:	xor    DWORD PTR [edi],edi
  434ba7:	or     ch,cl
  434ba9:	call   0xcb7:0x41606880
  434bb0:	jb     0x434bbf
  434bb2:	push   cs
  434bb3:	push   ss
  434bb4:	jmp    0xa93b633e
  434bb9:	cld    
  434bba:	or     al,0xd2
  434bbc:	pusha  
  434bbd:	mov    al,0x66
  434bbf:	cmp    DWORD PTR [ebp+ebx*1-0x7c030f17],0x8e60a42
  434bca:	adc    BYTE PTR [ecx],cl
  434bcc:	jmp    0x71da0956
  434bd1:	fnstcw WORD PTR [edi]
  434bd3:	or     ch,cl
  434bd5:	or     al,0x15
  434bd7:	not    BYTE PTR [ebx+0x38]
  434bda:	addr16 out dx,eax
  434bdc:	jmp    0xbbb65e1
  434be1:	add    BYTE PTR [ebp-0x44],dl
  434be4:	pop    ebx
  434be5:	in     al,dx
  434be6:	xchg   esi,eax
  434be7:	add    dl,bh
  434be9:	nop
  434bea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434beb:	add    dh,dh
  434bed:	mov    ebp,DWORD PTR [esi]
  434bef:	cmp    bh,BYTE PTR [ecx+0x1447c4c]
  434bf5:	mov    bh,0xab
  434bf7:	mov    ebp,0x819440f0
  434bfc:	je     0x434c04
  434bfe:	mov    eax,ds:0xa289c1bd
  434c03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434c04:	ins    BYTE PTR es:[edi],dx
  434c05:	mov    DWORD PTR [ebx+0x723af0d5],ebp
  434c0b:	xchg   esi,eax
  434c0c:	jno    0x434c55
  434c0e:	fs sub esp,esi
  434c11:	callw  0x8ed6
  434c15:	cmp    al,0xb4
  434c17:	inc    esp
  434c18:	or     dh,BYTE PTR [ebx]
  434c1a:	adc    DWORD PTR [ebp-0x26],ebp
  434c1d:	jl     0x434bc4
  434c1f:	mov    ebx,0xbd202be0
  434c24:	jae    0x434c06
  434c26:	adc    al,0x72
  434c28:	mov    edx,0x7e6a500f
  434c2d:	add    ebp,ecx
  434c2f:	inc    eax
  434c30:	mov    eax,ds:0xa2bc6ecf
  434c35:	push   ss
  434c36:	outs   dx,DWORD PTR ds:[esi]
  434c37:	inc    esp
  434c38:	test   DWORD PTR [ebp-0x45],ecx
  434c3b:	rol    edi,0x74
  434c3e:	outs   dx,DWORD PTR ds:[esi]
  434c3f:	inc    ecx
  434c40:	mov    ecx,0x44be0054
  434c45:	in     eax,dx
  434c46:	aad    0x68
  434c48:	loope  0x434c22
  434c4a:	add    DWORD PTR [edi+0x5f001bda],ebp
  434c50:	mov    ebp,0x31b4fc73
  434c55:	repnz and edx,0xffffff97
  434c59:	push   es
  434c5a:	inc    DWORD PTR [esi-0x58c5862]
  434c60:	ficomp WORD PTR [edi+0x6160a09]
  434c66:	add    BYTE PTR [esi+0x527871d6],al
  434c6c:	or     eax,DWORD PTR fs:[eax]
  434c6f:	std    
  434c70:	(bad)  
  434c71:	mov    bh,0x47
  434c73:	push   0xba4876dc
  434c78:	je     0x434c85
  434c7a:	add    BYTE PTR [esi-0x55b78122],al
  434c80:	or     eax,DWORD PTR fs:[eax]
  434c83:	pop    ebx
  434c84:	mov    al,BYTE PTR [edx+0xb59a2a4]
  434c8a:	add    BYTE PTR [esi+0x3efea0dc],al
  434c90:	dec    DWORD PTR [edx-0x5fba79ca]
  434c96:	bound  eax,QWORD PTR ds:0x7d3a42de
  434c9c:	pop    ecx
  434c9d:	or     edi,esi
  434c9f:	out    dx,eax
  434ca0:	mov    eax,0x378600b8
  434ca5:	add    eax,0xa54e0094
  434caa:	add    al,0x0
  434cac:	xchg   ah,ah
  434cae:	shl    BYTE PTR [edx-0x79],0x88
  434cb2:	mov    edx,gs
  434cb4:	test   dh,dl
  434cb6:	pushf  
  434cb7:	jns    0x434cea
  434cb9:	hlt    
  434cba:	pop    ecx
  434cbb:	cld    
  434cbc:	or     ebp,DWORD PTR [ebx]
  434cbe:	pop    ds
  434cbf:	imul   edi,edi,0x75
  434cc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434cc3:	or     DWORD PTR [ecx],ebx
  434cc5:	inc    eax
  434cc6:	jge    0x434d43
  434cc8:	push   edx
  434cc9:	fidiv  WORD PTR [edi+0x41e4ba74]
  434ccf:	lock sti 
  434cd1:	in     al,dx
  434cd2:	sbb    BYTE PTR [ebp+ecx*4+0x42],0xe1
  434cd7:	add    ecx,DWORD PTR ds:0x8603e1cb
  434cdd:	inc    edx
  434cde:	ins    BYTE PTR es:[edi],dx
  434cdf:	inc    ebp
  434ce0:	sub    ah,BYTE PTR [edi-0x72]
  434ce3:	mov    bl,0xa3
  434ce5:	pop    eax
  434ce6:	fisttp QWORD PTR [ebp+edx*4+0x1e48cc62]
  434ced:	out    0xc7,eax
  434cef:	push   es
  434cf0:	xlat   BYTE PTR ds:[ebx]
  434cf1:	in     eax,0x6b
  434cf3:	add    DWORD PTR ds:0xb3027bee,ecx
  434cf9:	ins    BYTE PTR es:[edi],dx
  434cfa:	push   ebp
  434cfb:	sbb    ecx,DWORD PTR [ebx]
  434cfd:	mov    WORD PTR [edx*8+0x576c6b03],cs
  434d04:	mov    esi,0x3087036
  434d09:	aaa    
  434d0a:	cmp    BYTE PTR [ebx-0x76512f00],0xe
  434d11:	xchg   BYTE PTR [edx+0x47],al
  434d14:	mov    edx,DWORD PTR [edi+eiz*2-0x1afc4fca]
  434d1b:	xchg   esp,eax
  434d1c:	mov    DWORD PTR ds:0x35b55e62,esi
  434d22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434d23:	ins    BYTE PTR es:[edi],dx
  434d24:	aaa    
  434d25:	mov    dl,0xc2
  434d27:	cwde   
  434d28:	add    al,BYTE PTR [eax-0x47]
  434d2b:	out    dx,al
  434d2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434d2d:	adc    eax,0x335618d0
  434d32:	mov    ebx,0x77435786
  434d37:	xor    eax,0x1d774ac8
  434d3c:	enter  0x7742,0xae
  434d40:	mov    BYTE PTR [edx-0x3e],bl
  434d43:	sub    eax,0x900cd314
  434d48:	mov    BYTE PTR [ecx-0x46],dl
  434d4b:	sub    DWORD PTR ds:0xeb09fe17,eax
  434d51:	push   esi
  434d52:	js     0x434d1b
  434d54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434d55:	std    
  434d56:	imul   ebp,edi,0x26
  434d59:	repz mov ebp,0xfd091945
  434d5f:	push   es
  434d60:	fs je  0x434da1
  434d63:	test   DWORD PTR [ecx],ebp
  434d65:	jno    0x434da1
  434d67:	mov    cl,0x73
  434d69:	add    BYTE PTR [edx+0xa],0x6c
  434d6d:	pop    edx
  434d6e:	addr16 mov bh,0xf6
  434d71:	add    dl,dl
  434d73:	inc    edx
  434d74:	or     al,BYTE PTR [edi-0x107100f4]
  434d7a:	js     0x434d0b
  434d7c:	push   DWORD PTR [eax+0x15]
  434d7f:	inc    ebx
  434d80:	or     ch,cl
  434d82:	push   es
  434d83:	test   BYTE PTR [eax],cl
  434d85:	sub    cl,BYTE PTR ds:0x9072edea
  434d8b:	cmp    al,BYTE PTR [ecx+0x4dc0161c]
  434d91:	mov    ecx,0xc83a7fe
  434d96:	(bad)  
  434d97:	cmp    esi,DWORD PTR [edi-0x26d0bbfe]
  434d9d:	sbb    al,0x86
  434d9f:	das    
  434da0:	retf   
  434da1:	sbb    eax,0xcd82f88
  434da6:	mov    eax,fs
  434da8:	or     BYTE PTR [ebp+0x1a],bl
  434dab:	out    0x3,al
  434dad:	jmp    0x6c62ad37
  434db2:	(bad)
  434db5:	mov    dl,0xc0
  434db7:	push   0x76
  434db9:	icebp  
  434dba:	fwait
  434dbb:	imul   eax,DWORD PTR [esi+0xa3cb966],0xffffffe9
  434dc2:	mov    ebp,DWORD PTR [ebx-0x79]
  434dc5:	lea    ecx,[edi-0x4bfff5be]
  434dcb:	xor    al,0x6d
  434dcd:	cli    
  434dce:	push   ebp
  434dcf:	cs pop es
  434dd1:	xchg   ax,ax
  434dd3:	out    0xc9,al
  434dd5:	or     al,BYTE PTR [eax]
  434dd7:	das    
  434dd8:	inc    ecx
  434dd9:	in     eax,0x7
  434ddb:	or     DWORD PTR [esi+0x4135c489],ebp
  434de1:	or     dh,BYTE PTR [ebx]
  434de3:	ins    DWORD PTR es:[edi],dx
  434de4:	mov    eax,0x8aaaf84b
  434de9:	jnp    0x434df5
  434deb:	(bad)  
  434dec:	mov    ebx,0xbc1f000a
  434df1:	pusha  
  434df2:	add    eax,DWORD PTR [edi+esi*1+0x3b7ac335]
  434df9:	mov    bh,0x6
  434dfb:	out    dx,eax
  434dfc:	inc    eax
  434dfd:	or     cl,BYTE PTR [ebp+0x8e5b34e]
  434e03:	push   ss
  434e04:	cmp    DWORD PTR [edx],ecx
  434e06:	add    bh,ch
  434e08:	rcr    DWORD PTR [edi-0x3],0x6c
  434e0c:	sti    
  434e0d:	in     eax,dx
  434e0e:	add    al,0x10
  434e10:	add    esi,esi
  434e12:	jne    0x434e73
  434e14:	adc    DWORD PTR [ebx+ebx*2+0x24],edx
  434e18:	fwait
  434e19:	push   ebx
  434e1a:	ret    
  434e1b:	repz cmp DWORD PTR [esi-0x417e1c34],0xdde56acc
  434e26:	and    DWORD PTR [ebx],0x52
  434e29:	cmp    eax,0x1ac1456
  434e2e:	mov    bh,0x71
  434e30:	cmp    al,0x1d
  434e32:	shr    BYTE PTR [eax-0x1b],cl
  434e35:	test   bh,0xaa
  434e38:	mov    ds:0xe000fff1,al
  434e3d:	scas   eax,DWORD PTR es:[edi]
  434e3e:	xchg   DWORD PTR [ebp-0x25],ebx
  434e41:	ror    DWORD PTR [eax+0x7],0x86
  434e45:	adc    al,0x41
  434e47:	clc    
  434e48:	mov    bl,BYTE PTR [ecx+0xb]
  434e4b:	add    BYTE PTR [ebx],al
  434e4d:	and    DWORD PTR [ecx],esi
  434e4f:	or     al,0xf
  434e51:	lock add eax,0x41148600
  434e57:	clc    
  434e58:	test   DWORD PTR [ecx+0xb],ebx
  434e5b:	add    BYTE PTR [ebx],al
  434e5d:	sbb    eax,0x5e7b880b
  434e62:	or     eax,DWORD PTR [eax]
  434e64:	add    eax,0xf410414
  434e69:	iret   
  434e6a:	mov    ebx,0x5f519b87
  434e6f:	call   DWORD PTR [ecx]
  434e71:	pop    edx
  434e72:	or     eax,DWORD PTR [ebp-0xfc71ef7]
  434e78:	xchg   ecx,eax
  434e79:	sub    al,0xfb
  434e7b:	test   BYTE PTR [ebx-0x7b],dh
  434e7e:	or     ch,cl
  434e80:	dec    DWORD PTR [esi]
  434e82:	mov    ds:0x6e856b87,al
  434e87:	push   ebx
  434e88:	loop   0x434eda
  434e8a:	aad    0x7b
  434e8c:	mov    es,WORD PTR [eax-0x4d]
  434e8f:	or     DWORD PTR [edx],ecx
  434e91:	lods   eax,DWORD PTR ds:[esi]
  434e92:	pop    es
  434e93:	add    BYTE PTR [esi-0x6e07ad90],al
  434e99:	push   es
  434e9a:	bound  eax,QWORD PTR [eax]
  434e9c:	xchg   BYTE PTR [ecx-0x76],bl
  434e9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434ea0:	add    BYTE PTR [edx+0x59],ch
  434ea3:	or     eax,DWORD PTR [eax]
  434ea5:	xchg   BYTE PTR [esp+esi*2-0x44],bl
  434ea9:	(bad)  
  434eaa:	xor    esi,eax
  434eac:	call   FWORD PTR [ecx+0x78bc72f0]
  434eb2:	pop    ecx
  434eb3:	or     esi,DWORD PTR [esi+0xb5976]
  434eb9:	lods   eax,DWORD PTR ds:[esi]
  434eba:	int3   
  434ebb:	loopne 0x434e82
  434ebd:	clc    
  434ebe:	inc    edx
  434ebf:	mov    BYTE PTR [edx],0x37
  434ec2:	scas   al,BYTE PTR es:[edi]
  434ec3:	xchg   ecx,eax
  434ec4:	das    
  434ec5:	add    BYTE PTR [edx-0x1f],0x29
  434ec9:	or     ecx,DWORD PTR [edi+eax*8-0x4648c72a]
  434ed0:	sti    
  434ed1:	out    0x39,eax
  434ed3:	push   ecx
  434ed4:	imul   esi,DWORD PTR [edx+eax*2-0x1f],0x2
  434ed9:	hlt    
  434eda:	leave  
  434edb:	jns    0x434ef6
  434edd:	xchg   BYTE PTR [edx+0x7c],al
  434ee0:	push   ebx
  434ee1:	call   0xed02:0x2f14edba
  434ee8:	add    dl,ah
  434eea:	leave  
  434eeb:	pop    edx
  434eec:	sbb    DWORD PTR [esi+0x7a3b7c42],eax
  434ef2:	mov    bh,0x91
  434ef4:	sti    
  434ef5:	add    DWORD PTR [esi-0x2e],eax
  434ef8:	jle    0x434f10
  434efa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434efb:	xlat   BYTE PTR ds:[ebx]
  434efc:	add    eax,DWORD PTR [esi-0xe930e4f]
  434f02:	(bad)  
  434f04:	add    eax,DWORD PTR [eax]
  434f06:	jmp    0xcc213c15
  434f0b:	(bad)  [ebx+0xaf60da2]
  434f11:	mov    ah,0x64
  434f13:	mov    ecx,0x42746c71
  434f18:	loope  0x434f96
  434f1a:	xor    eax,0x2418cc5e
  434f1f:	mov    bh,0x6d
  434f21:	je     0x434f55
  434f23:	cmp    cl,ah
  434f25:	add    esp,DWORD PTR [edi+ecx*4]
  434f28:	sub    DWORD PTR [edx],0xffffff89
  434f2b:	rcr    BYTE PTR [ecx+0x1a],cl
  434f2e:	xchg   BYTE PTR [edx-0x1c],al
  434f31:	shr    BYTE PTR [ecx+0x5],0x6d
  434f35:	jnp    0x434f35
  434f37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434f38:	or     bl,bh
  434f3a:	test   DWORD PTR [edx-0x1],eax
  434f3d:	arpl   WORD PTR [edi+0xd66ef5b],bp
  434f43:	push   edx
  434f44:	push   es
  434f45:	jmp    0xe73c14cf
  434f4a:	or     DWORD PTR [eax+0x1785e909],ecx
  434f50:	jne    0x434fa7
  434f52:	xchg   esi,eax
  434f54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434f55:	jmp    0x7e4291df
  434f5a:	push   es
  434f5b:	xchg   ebx,eax
  434f5c:	jo     0x434f41
  434f5e:	test   DWORD PTR [edx-0x51],eax
  434f61:	stc    
  434f62:	test   DWORD PTR [edx+0xa],eax
  434f65:	rcr    ah,cl
  434f67:	leave  
  434f68:	cmp    eax,0xcaa30011
  434f6d:	scas   al,BYTE PTR es:[edi]
  434f6e:	test   DWORD PTR [ebp+0x54363342],0xee35feea
  434f78:	xchg   edx,eax
  434f79:	outs   dx,BYTE PTR ds:[esi]
  434f7a:	jecxz  0x434f01
  434f7c:	inc    edx
  434f7d:	adc    DWORD PTR [ecx+ebx*1+0x72cbdae5],0x4070020a
  434f88:	pushw  0xf5e0
  434f8c:	call   0xdd5a:0xc785e918
  434f93:	push   ebx
  434f94:	ret    0xd7b2
  434f97:	test   DWORD PTR [edx-0x7e],eax
  434f9a:	in     eax,dx
  434f9b:	xchg   esp,eax
  434f9c:	mov    DWORD PTR [ebp-0x3b],0x7215fa84
  434fa3:	pop    ebp
  434fa4:	xor    DWORD PTR ss:[ecx],0xffffffaa
  434fa8:	(bad)  
  434fa9:	call   0x7161:0xa427f50
  434fb0:	dec    ebx
  434fb1:	add    DWORD PTR [eax],0x2f
  434fb4:	icebp  
  434fb5:	sbb    eax,DWORD PTR [eax]
  434fb7:	lahf   
  434fb8:	fidiv  WORD PTR [edx-0x14]
  434fbb:	outs   dx,BYTE PTR ds:[esi]
  434fbc:	or     eax,0x7f5fb116
  434fc1:	lds    esp,FWORD PTR [esi-0x54]
  434fc4:	mov    ds:0xe0e74d85,al
  434fc9:	push   ebp
  434fca:	or     bh,BYTE PTR [edi+0xbc99dc]
  434fd0:	push   ecx
  434fd1:	inc    ebp
  434fd2:	or     cl,BYTE PTR [ebx-0x76934f0e]
  434fd8:	pop    es
  434fd9:	in     eax,dx
  434fda:	sbb    eax,DWORD PTR [eax]
  434fdc:	das    
  434fdd:	mov    esi,0xf1a4660f
  434fe2:	mov    ecx,0xa45357c
  434fe7:	data16 ins BYTE PTR es:[edi],dx
  434fe9:	stos   BYTE PTR es:[edi],al
  434fea:	test   DWORD PTR [eax+0xa3bbb],ecx
  434ff0:	add    DWORD PTR [edi+esi*4-0x48],ebx
  434ff4:	xor    DWORD PTR [ebp+0xa],eax
  434ff7:	add    ebx,edx
  434ff9:	lods   al,BYTE PTR ds:[esi]
  434ffa:	xchg   DWORD PTR [eax+0xa3bbb],ecx
  435000:	les    esi,FWORD PTR [ebp-0x79]
  435003:	push   ebp
  435004:	jmp    0x435066
  435006:	mov    edx,0xef5c0988
  43500b:	(bad)  
  43500c:	clc    
  43500d:	xor    eax,0x7bef000a
  435012:	clc    
  435013:	mov    DWORD PTR [edx+0x4b8885ae],ebx
  435019:	cmp    BYTE PTR [edx],cl
  43501b:	add    BYTE PTR [edi+ebx*4-0x2827988c],dh
  435022:	cdq    
  435023:	mov    esp,0x890a44b5
  435028:	jb     0x434fcc
  43502a:	ins    BYTE PTR es:[edi],dx
  43502b:	rol    DWORD PTR [esi-0x71b78c33],cl
  435031:	loop   0x435073
  435033:	in     al,0x0
  435035:	sub    BYTE PTR [edx-0x65],dl
  435038:	mov    eax,0x850b6b70
  43503d:	(bad)  
  43503e:	jge    0x4350b1
  435040:	cmp    BYTE PTR [esi],0x78
  435043:	or     eax,DWORD PTR [eax]
  435045:	(bad)  
  435046:	ins    DWORD PTR es:[edi],dx
  435047:	push   ss
  435048:	test   ebx,eax
  43504a:	add    eax,0xe47a5805
  43504f:	sbb    eax,0xf3a20d14
  435054:	test   esi,esi
  435056:	ret    0x18
  435059:	xchg   cl,dl
  43505b:	adc    DWORD PTR [ecx],ecx
  43505d:	or     eax,0x861279fa
  435062:	imul   esi,DWORD PTR [ebx+edi*2+0x22],0xf714436b
  43506a:	pop    ecx
  43506b:	rol    ebp,1
  43506d:	test   al,0x1c
  43506f:	pop    DWORD PTR [ebp+0x548931cb]
  435075:	jl     0x4350d0
  435077:	outs   dx,BYTE PTR ds:[esi]
  435078:	nop
  435079:	retf   0xb77
  43507c:	add    BYTE PTR ds:0xf629fbf,cl
  435082:	adc    bl,BYTE PTR [esi+0x12]
  435085:	xchg   BYTE PTR [ecx-0x6c],ch
  435088:	push   ss
  435089:	pusha  
  43508a:	aam    0x62
  43508c:	mov    esp,0x620b698c
  435091:	mov    ch,0x88
  435093:	and    eax,0x15c20e07
  435098:	add    BYTE PTR [eax],al
  43509a:	xchg   BYTE PTR [edx+ecx*2-0x8],ch
  43509e:	psrad  mm3,QWORD PTR [esi+0x12]
  4350a2:	xchg   BYTE PTR [ecx+0x74],ch
  4350a5:	mov    dl,dh
  4350a7:	inc    edx
  4350a8:	out    dx,eax
  4350a9:	add    eax,DWORD PTR [esi+0x23b0a3c3]
  4350af:	pop    ecx
  4350b0:	out    0x2d,eax
  4350b2:	cmp    cl,cl
  4350b4:	mov    al,ss:0x7a837324
  4350ba:	ds dec edx
  4350bc:	jp     0x435106
  4350be:	push   0xffffffe8
  4350c0:	jmp    0xe17b8f58
  4350c5:	add    ecx,DWORD PTR [ebx]
  4350c7:	repnz in al,dx
  4350c9:	jns    0x4350d1
  4350cb:	call   0x14dd:0xca8603f7
  4350d2:	add    eax,DWORD PTR ds:0x36ae0445
  4350d8:	jl     0x435105
  4350da:	jb     0x4350a8
  4350dc:	push   ecx
  4350dd:	ins    BYTE PTR es:[edi],dx
  4350de:	xchg   esp,eax
  4350df:	inc    edx
  4350e0:	loope  0x43515c
  4350e2:	into   
  4350e3:	dec    edx
  4350e4:	imul   edx,DWORD PTR [edi],0x6f71cb7f
  4350ea:	xchg   esp,eax
  4350eb:	inc    edx
  4350ec:	loope  0x435168
  4350ee:	popf   
  4350ef:	outs   dx,BYTE PTR ds:[esi]
  4350f0:	loop   0x43513d
  4350f2:	jb     0x435085
  4350f4:	icebp  
  4350f5:	(bad)  [ebx-0x18]
  4350f8:	adc    ebx,DWORD PTR [esi+0x7bf3848b]
  4350fe:	add    BYTE PTR [esi],dl
  435100:	sahf   
  435101:	iret   
  435102:	add    eax,DWORD PTR [esi+0x2e6b69e8]
  435108:	cmp    cl,ah
  43510a:	add    esp,ecx
  43510c:	icebp  
  43510d:	loop   0x435112
  43510f:	xchg   al,ch
  435111:	mov    bl,0xa2
  435113:	fs dec ecx
  435115:	jno    0x435183
  435117:	je     0x43515b
  435119:	loope  0x43509b
  43511b:	or     DWORD PTR [edx+ebx*8-0x14],eax
  43511f:	ret    
  435120:	pop    esi
  435121:	or     ch,cl
  435123:	sub    dh,BYTE PTR [edx]
  435125:	or     ch,cl
  435127:	test   ebp,ebx
  435129:	repz rep stos BYTE PTR es:[edi],al
  43512c:	leave  
  43512d:	adc    eax,ebp
  43512f:	test   DWORD PTR [edx-0x1],eax
  435132:	pop    ebp
  435133:	sbb    ah,BYTE PTR [eax+0x2585e904]
  435139:	icebp  
  43513a:	jo     0x435185
  43513c:	pop    edx
  43513d:	xor    DWORD PTR [ecx-0xa],0x30
  435141:	or     ch,cl
  435143:	outs   dx,BYTE PTR ds:[esi]
  435144:	mov    esi,DWORD PTR [eax+0x6]
  435147:	jae    0x4350dc
  435149:	call   0xb970:0xef5e6c29
  435150:	outs   dx,BYTE PTR ds:[esi]
  435151:	push   0x42c8243a
  435156:	loope  0x435124
  435158:	add    esi,esp
  43515a:	iret   
  43515b:	dec    esp
  43515c:	into   
  43515d:	mov    dl,0xd7
  43515f:	test   DWORD PTR [edx-0x7d],eax
  435162:	cdq    
  435163:	add    BYTE PTR [ecx-0x678e753c],dl
  435169:	inc    edx
  43516a:	or     dh,BYTE PTR [ecx+0x7e]
  43516d:	dec    ebp
  43516e:	and    DWORD PTR [ecx+ebp*8-0x6102a8a3],0xffffffda
  435176:	adc    eax,0x844a5262
  43517b:	pop    ecx
  43517c:	popf   
  43517d:	xor    BYTE PTR [edx],cl
  43517f:	jmp    0x62428801
  435184:	adc    bl,BYTE PTR [edi-0x387a16e8]
  43518a:	ins    DWORD PTR es:[edi],dx
  43518b:	aad    0x84
  43518d:	cli    
  43518e:	adc    eax,0xc4247598
  435193:	dec    edi
  435194:	mov    bh,0x6b
  435196:	sbb    DWORD PTR [edx+eiz*1],0xffffffca
  43519a:	push   esi
  43519b:	add    ch,dl
  43519d:	xchg   ecx,eax
  43519e:	xchg   DWORD PTR [eax+0xa3743],edx
  4351a4:	and    al,0xf4
  4351a6:	in     eax,dx
  4351a7:	es jmpw 0x685d
  4351ac:	lahf   
  4351ad:	inc    ecx
  4351ae:	in     eax,0x20
  4351b0:	mov    ebx,ebx
  4351b2:	mov    cl,0xc0
  4351b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4351b5:	inc    ecx
  4351b6:	or     ah,BYTE PTR [esi-0x34]
  4351b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4351ba:	test   DWORD PTR [eax+0xa3743],ecx
  4351c0:	mov    DWORD PTR [ecx-0x49],ebx
  4351c3:	mov    eax,0x30a4159
  4351c8:	add    BYTE PTR [edx+0x238887ae],dl
  4351ce:	aaa    
  4351cf:	or     al,BYTE PTR [eax]
  4351d1:	aam    0xd9
  4351d3:	lods   eax,DWORD PTR ds:[esi]
  4351d4:	push   ss
  4351d5:	outs   dx,DWORD PTR ds:[esi]
  4351d6:	inc    ecx
  4351d7:	ins    DWORD PTR es:[edi],dx
  4351d8:	ret    0xc2c2
  4351db:	test   DWORD PTR ds:0x55870d41,0xe2bd27d3
  4351e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4351e6:	sbb    DWORD PTR [edx],eax
  4351e8:	mov    edx,ebp
  4351ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4351eb:	ins    BYTE PTR es:[edi],dx
  4351ec:	or     DWORD PTR [edi+0x2f001be9],ebp
  4351f2:	ficomp DWORD PTR [ecx+0x14]
  4351f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4351f6:	shl    DWORD PTR [edx-0x7dbee0ea],0x4
  4351fd:	fimul  DWORD PTR cs:[edx-0x1c]
  435201:	out    dx,al
  435202:	or     BYTE PTR [esi],dl
  435204:	mov    esi,DWORD PTR [edi+0x35]
  435207:	mov    BYTE PTR [eax+0xa37b6],dl
  43520d:	je     0x43522d
  43520f:	add    cl,BYTE PTR [eax-0x6f79a825]
  435215:	xchg   BYTE PTR [edi-0x1f79ffe4],dh
  43521b:	and    ah,ch
  43521d:	xchg   DWORD PTR [ebx],esp
  43521f:	sbb    ch,BYTE PTR [edi+0x62b03196]
  435225:	aad    0x83
  435227:	xchg   DWORD PTR [esi-0x436a1e4b],edi
  43522d:	add    BYTE PTR [eax+0xf620b6b],dl
  435233:	jecxz  0x435292
  435235:	adc    al,BYTE PTR [esi-0x78d87195]
  43523b:	imul   ecx,DWORD PTR [ebx],0x62
  43523e:	mov    ch,0xc8
  435240:	sub    al,0x7
  435242:	push   ss
  435243:	add    bl,BYTE PTR [eax+eax*1]
  435246:	xchg   al,ch
  435248:	(bad)  
  435249:	std    
  43524a:	pop    esi
  43524b:	jnp    0x435253
  43524d:	add    BYTE PTR [esi+0x48887c54],al
  435253:	push   eax
  435254:	or     eax,DWORD PTR [eax]
  435256:	lods   eax,DWORD PTR ds:[esi]
  435257:	repnz ins BYTE PTR es:[edi],dx
  435259:	dec    ebx
  43525a:	dec    esi
  43525b:	loope  0x4352ca
  43525d:	mov    esp,0x350b6970
  435262:	push   ecx
  435263:	pushf  
  435264:	sub    al,0x9
  435266:	icebp  
  435267:	stc    
  435268:	leave  
  435269:	push   es
  43526a:	xchg   BYTE PTR [ecx+0x6e],ch
  43526d:	push   ebx
  43526e:	sbb    cl,ah
  435270:	fcomp  st(6)
  435272:	or     eax,0xc386f392
  435277:	dec    ebp
  435278:	sub    al,0x7
  43527a:	div    cl
  43527c:	sbb    eax,DWORD PTR [eax]
  43527e:	xchg   al,dl
  435280:	push   ebp
  435281:	adc    al,0xc
  435283:	jmp    0x473:0x6986125d
  43528a:	xchg   edi,eax
  43528b:	loopne 0x4352d5
  43528d:	in     al,0x87
  43528f:	inc    edx
  435290:	dec    ecx
  435291:	adc    BYTE PTR [eax],al
  435293:	or     ebx,ebx
  435295:	hlt    
  435296:	jle    0x4352e6
  435298:	dec    edx
  435299:	imul   edx,DWORD PTR [ebx+0x3e13519],0xfffffffe
  4352a0:	ss clc 
  4352a2:	jle    0x4352ba
  4352a4:	lahf   
  4352a5:	xlat   BYTE PTR ds:[ebx]
  4352a6:	add    eax,DWORD PTR [esi-0x4e67c939]
  4352ac:	repz aam 0x74
  4352af:	xchg   esi,eax
  4352b0:	sub    BYTE PTR [ebx+0x7c6bd321],bh
  4352b6:	cmp    BYTE PTR [esi-0x5e01d233],bl
  4352bc:	leave  
  4352bd:	jno    0x435326
  4352bf:	je     0x435303
  4352c1:	loope  0x435341
  4352c3:	aad    0x5e
  4352c5:	pop    es
  4352c6:	jge    0x435306
  4352c8:	call   0x21c1:0x678603cf
  4352cf:	add    ebx,DWORD PTR [edx+0x5b61fd1d]
  4352d5:	(bad)  
  4352d6:	(bad)  
  4352d7:	addr16 (bad) 
  4352d9:	imul   esp,DWORD PTR [edi+0x74],0x8121e142
  4352e0:	call   0x38e4:0x42861189
  4352e7:	ds leave 
  4352e9:	imul   esp,DWORD PTR [edi-0x6c],0xfe7ee142
  4352f0:	popf   
  4352f1:	out    dx,eax
  4352f2:	add    eax,DWORD PTR [esi+0xb023bf]
  4352f8:	fwait
  4352f9:	pop    ecx
  4352fa:	jmp    0xa497:0xb6c9b929
  435301:	outs   dx,DWORD PTR ds:[esi]
  435302:	add    edi,DWORD PTR [esi+0x4e]
  435305:	dec    edx
  435306:	jp     0x435348
  435308:	loop   0x4352ed
  43530a:	or     eax,esp
  43530c:	adc    eax,0x85e9189a
  435311:	lds    ebx,FWORD PTR [edx-0x3]
  435314:	arpl   dx,ax
  435316:	mov    dl,0xf7
  435318:	test   DWORD PTR [edx-0x7e],eax
  43531b:	in     eax,dx
  43531c:	je     0x4352e3
  43531e:	inc    ebp
  43531f:	lds    eax,FWORD PTR [ebp+0x727215fa]
  435325:	test   BYTE PTR ss:[ecx+0x2d],bl
  435329:	xor    BYTE PTR [edx],cl
  43532b:	jmp    0x61455d62
  435330:	xchg   esi,eax
  435331:	dec    ecx
  435332:	cmp    DWORD PTR [ecx+0x2e],0x30
  435336:	or     ch,cl
  435338:	sbb    dl,bh
  43533a:	fucomp st(0)
  43533c:	cmp    eax,0xabf9b936
  435341:	test   BYTE PTR [eax-0x66],ch
  435344:	pop    ds
  435345:	fmul   st,st(3)
  435347:	jbe    0x435346
  435349:	mov    dl,0xae
  43534b:	fild   WORD PTR [ebp-0x259f97be]
  435351:	call   0xc71b:0x5f85e918
  435358:	xor    bh,BYTE PTR [ecx+0x68]
  43535b:	loopne 0x43535d
  43535d:	cmc    
  43535e:	call   0xeec8:0xd785e918
  435365:	mov    esp,0x85d7aeca
  43536a:	inc    edx
  43536b:	and    DWORD PTR [ecx+eiz*8+0x5960dc27],0x66
  435373:	test   DWORD PTR [eax],esi
  435375:	jno    0x4353c3
  435377:	mov    cl,0x73
  435379:	add    BYTE PTR [edx+0xa],0x2e
  43537d:	push   ecx
  43537e:	pop    edx
  43537f:	or     ebp,ecx
  435381:	test   DWORD PTR [edx-0x1d],eax
  435384:	add    cl,ch
  435386:	data16 loopne 0x4353fe
  435389:	jmp    0xdf435f7a
  43538e:	inc    ebp
  43538f:	leave  
  435390:	inc    ebp
  435391:	idiv   DWORD PTR [esi]
  435393:	or     al,BYTE PTR [eax]
  435395:	out    dx,eax
  435396:	mov    dh,0xfe
  435398:	mov    eax,0xa45e0
  43539d:	and    BYTE PTR [ecx],bl
  43539f:	repnz add al,0xdf
  4353a2:	inc    ebp
  4353a3:	or     al,BYTE PTR [ebx+0x29068e72]
  4353a9:	call   0xf1a8:0x1b8501b6
  4353b0:	(bad)  
  4353b1:	js     0x4353bf
  4353b3:	push   ebp
  4353b4:	mov    edx,DWORD PTR [edx]
  4353b6:	add    DWORD PTR [ebp-0x416e1434],ebp
  4353bc:	int3   
  4353bd:	push   edx
  4353be:	xlat   BYTE PTR ds:[ebx]
  4353bf:	fst    QWORD PTR [ecx+0x0]
  4353c2:	and    al,0x18
  4353c4:	add    cl,BYTE PTR [ebx+0x1be1f9]
  4353ca:	outs   dx,DWORD PTR ds:[esi]
  4353cb:	out    dx,al
  4353cc:	or     bh,bh
  4353ce:	stc    
  4353cf:	stos   BYTE PTR es:[edi],al
  4353d0:	icebp  
  4353d1:	push   edi
  4353d2:	mov    ah,0x44
  4353d4:	or     al,BYTE PTR [eax]
  4353d6:	outs   dx,DWORD PTR ds:[esi]
  4353d7:	mov    esi,0xf3390bf7
  4353dc:	imul   ecx,DWORD PTR [ebx-0x1d42dc71],0xffffffe4
  4353e3:	sbb    edx,DWORD PTR [esi]
  4353e5:	mov    edx,esi
  4353e7:	mov    al,ds:0xedd1096c
  4353ec:	sbb    eax,DWORD PTR [eax]
  4353ee:	pop    ds
  4353ef:	(bad)  
  4353f0:	pop    ebx
  4353f1:	or     BYTE PTR [ebp+0x2f16b2c3],ah
  4353f7:	inc    ebp
  4353f8:	add    BYTE PTR [esi+ebx*1],0x44
  4353fc:	push   esp
  4353fd:	adc    al,0x86
  4353ff:	in     eax,0x98
  435401:	mov    bh,0x70
  435403:	imul   ecx,DWORD PTR [ebx],0xffffff85
  435406:	xor    BYTE PTR [edi+0x6e],0x4a
  43540a:	mov    ss,esp
  43540c:	das    
  43540d:	cld    
  43540e:	(bad)  
  43540f:	jbe    0x435403
  435411:	test   BYTE PTR [eax],dl
  435413:	daa    
  435414:	sbb    DWORD PTR [eax],eax
  435416:	xchg   BYTE PTR [edx+0x45],ch
  435419:	adc    al,0x17
  43541b:	pop    ebx
  43541c:	rol    ebp,1
  43541e:	push   0xc47d8e9c
  435423:	ins    DWORD PTR es:[edi],dx
  435424:	ins    DWORD PTR es:[edi],dx
  435425:	xchg   edx,eax
  435426:	add    BYTE PTR [edx],al
  435428:	jns    0x435435
  43542a:	add    BYTE PTR [eax],ah
  43542c:	shr    BYTE PTR [edi-0x48],cl
  43542f:	cwde   
  435430:	imul   ecx,DWORD PTR [ebx],0xffffffe5
  435433:	xchg   ebp,eax
  435434:	add    ebx,ebx
  435436:	loopne 0x435460
  435438:	push   edx
  435439:	ins    DWORD PTR es:[edi],dx
  43543a:	mov    eax,0x7d0b6b70
  43543f:	(bad)  
  435440:	outs   dx,BYTE PTR gs:[esi]
  435442:	mov    cl,dl
  435444:	push   eax
  435445:	or     eax,DWORD PTR [eax]
  435447:	or     eax,0x884f227
  43544c:	push   ss
  43544d:	add    BYTE PTR [eax],al
  43544f:	xchg   BYTE PTR [ecx],ah
  435451:	mov    esi,edi
  435453:	jge    0x4354bc
  435455:	cmp    eax,0x101a0d62
  43545a:	int    0x64
  43545c:	aad    0x37
  43545e:	adc    al,0xff
  435460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435462:	bound  edi,QWORD PTR [edi-0x31]
  435465:	pop    ebp
  435466:	adc    al,BYTE PTR [esi-0x71ad8b97]
  43546c:	shr    DWORD PTR [edi-0x48],cl
  43546f:	cwde   
  435470:	imul   ecx,DWORD PTR [ebx],0x67a8288
  435476:	pop    edx
  435477:	jp     0x4354bb
  435479:	jnp    0x435409
  43547b:	shl    DWORD PTR [eax],1
  43547d:	loope  0x435482
  43547f:	or     ebx,ecx
  435481:	in     al,dx
  435482:	jp     0x435440
  435484:	dec    edx
  435485:	ins    BYTE PTR es:[edi],dx
  435486:	inc    ecx
  435487:	add    cl,bl
  435489:	int    0xf6
  43548b:	add    BYTE PTR [edx],al
  43548d:	mov    cl,0x2d
  43548f:	push   cs
  435490:	xchg   BYTE PTR [edx-0x1e],al
  435493:	inc    ebp
  435494:	xchg   edx,eax
  435495:	xchg   ecx,eax
  435496:	rcr    ecx,1
  435498:	retf   
  435499:	loopne 0x43544e
  43549b:	fwait
  43549c:	pop    ebx
  43549d:	test   dh,dl
  43549f:	jl     0x435495
  4354a1:	xchg   esi,eax
  4354a2:	out    dx,eax
  4354a3:	add    eax,DWORD PTR [esi-0x1829620]
  4354a9:	xor    cl,ah
  4354ab:	add    esp,DWORD PTR [ebx-0x592cb8cd]
  4354b1:	loopne 0x43549c
  4354b3:	jge    0x4354a3
  4354b5:	xor    cl,ah
  4354b7:	add    esp,DWORD PTR [ebx]
  4354b9:	sbb    esi,0xf7970c7c
  4354bf:	add    eax,DWORD PTR [esi+0x3141ecb]
  4354c5:	leave  
  4354c6:	cmp    eax,0x6442860d
  4354cb:	ret    
  4354cc:	jp     0x435491
  4354ce:	mov    dh,bh
  4354d0:	out    dx,eax
  4354d1:	lock (bad) 
  4354d3:	jp     0x43552b
  4354d5:	loopne 0x43546a
  4354d7:	mov    eax,ds:0x7ced080b
  4354dc:	lds    edx,FWORD PTR [esi-0x39]
  4354df:	cld    
  4354e0:	neg    DWORD PTR [ecx-0x3479fc11]
  4354e6:	mov    bh,0xfb
  4354e8:	or     eax,eax
  4354ea:	mov    DWORD PTR ds:0xff794286,ecx
  4354f0:	add    BYTE PTR [eax+0x79970a41],al
  4354f6:	rcr    BYTE PTR [eax+0xa429370],0x72
  4354fd:	arpl   WORD PTR [esi],bp
  4354ff:	sub    DWORD PTR [edi+0x1545be0d],0xffffff8d
  435506:	jmp    DWORD PTR cs:[ecx+0x13]
  43550a:	xchg   esi,eax
  43550b:	sbb    cl,ch
  43550d:	test   DWORD PTR [edi+0x4d],edx
  435510:	aad    0x7a
  435512:	xor    ah,BYTE PTR [ebx+eiz*1]
  435515:	mov    eax,DWORD PTR [ebp+0x4dc76ae2]
  43551b:	cmp    DWORD PTR [edi+0x6e],0x73e90a34
  435522:	mov    edi,0x42789188
  435527:	or     al,dl
  435529:	xchg   edi,eax
  43552a:	in     al,0xda
  43552c:	leave  
  43552d:	cwde   
  43552e:	aas    
  43552f:	mov    BYTE PTR [ecx+0x6a0a4280],al
  435535:	lds    edi,FWORD PTR ds:0x342e5f81
  43553b:	or     ch,cl
  43553d:	xchg   esi,eax
  43553e:	pop    ecx
  43553f:	xor    DWORD PTR [edx+edi*2],ebx
  435542:	dec    ecx
  435543:	xor    BYTE PTR [edi-0x7e],0x42
  435547:	or     ah,BYTE PTR [edx-0x8]
  43554a:	xchg   esi,eax
  43554b:	sbb    cl,ch
  43554d:	test   edi,edx
  43554f:	lock in al,dx
  435551:	stos   DWORD PTR es:[edi],eax
  435552:	loopne 0x435552
  435554:	ds add bl,bh
  435557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435558:	dec    ebx
  435559:	sub    DWORD PTR [edx+0x86db74b],ecx
  43555f:	fld    DWORD PTR [ebx]
  435561:	jmp    0x39c635eb
  435566:	push   0x7862ec87
  43556b:	cs push 0xb2c83600
  435571:	push   ss
  435572:	pop    ds
  435573:	inc    edx
  435574:	add    DWORD PTR [esi+0x1be6d1],esi
  43557a:	das    
  43557b:	fistp  DWORD PTR [ebx+0x8]
  43557e:	xchg   edi,eax
  43557f:	dec    edx
  435580:	(bad)  
  435581:	(bad)  
  435582:	jmp    0x91f956cc
  435587:	jmp    0xdb3255a7
  43558c:	inc    ebx
  43558d:	adc    al,0x74
  43558f:	add    al,0x2
  435591:	mov    bl,dl
  435593:	xor    BYTE PTR [ebp+0xa44b396],al
  435599:	add    BYTE PTR [esi+0x49ca282e],bl
  43559f:	jae    0x435583
  4355a1:	mov    ebx,0xa41de
  4355a6:	fdivp  st(7),st
  4355a8:	adc    eax,0x6c92ed83
  4355ad:	mov    DWORD PTR [ecx],ebp
  4355af:	jmp    0xd8e255cf
  4355b4:	fwait
  4355b5:	mov    esp,0xeb0a41c9
  4355ba:	add    BYTE PTR [ebp+0x3387b94f],cl
  4355c0:	add    cl,BYTE PTR [edx+0x0]
  4355c3:	mov    ebx,ebx
  4355c5:	xchg   ebp,eax
  4355c6:	xchg   BYTE PTR [ecx+0x58],dh
  4355c9:	out    dx,eax
  4355ca:	dec    DWORD PTR [ecx+0x7666d073]
  4355d0:	(bad)  
  4355d1:	mov    dl,0x16
  4355d3:	pop    edi
  4355d4:	inc    ecx
  4355d5:	ins    DWORD PTR es:[edi],dx
  4355d6:	rcr    DWORD PTR [eax+ebx*8-0x7d],0xbc
  4355db:	cmp    DWORD PTR [ecx+0xa],eax
  4355de:	add    esp,esp
  4355e0:	push   0x74
  4355e2:	adc    BYTE PTR [eax-0x33],ah
  4355e5:	dec    edi
  4355e6:	inc    DWORD PTR [esi-0x2c7a5a14]
  4355ec:	arpl   WORD PTR [ebx+ecx*4],si
  4355ef:	adc    bh,dh
  4355f1:	or     al,BYTE PTR [eax]
  4355f3:	xchg   al,dl
  4355f5:	lods   al,BYTE PTR ds:[esi]
  4355f6:	call   0xf9e969b6
  4355fb:	or     eax,0xb46f7b6
  435600:	aad    0x72
  435602:	pop    es
  435603:	xchg   BYTE PTR [ebx+0x72],ch
  435606:	ret    0x6f1e
  435609:	mov    ds:0x42a401f9,eax
  43560e:	test   ebx,esp
  435610:	popf   
  435611:	retf   0xc2cc
  435614:	es mov bh,0xcc
  435617:	mov    edx,0x5ec72b5
  43561c:	push   edi
  43561d:	sbb    al,0x4d
  43561f:	add    BYTE PTR ds:0xb42cfdfe,cl
  435625:	or     al,0x33
  435627:	aaa    
  435628:	test   dl,0xf4
  43562b:	inc    ecx
  43562d:	jae    0x4355b6
  43562f:	aaa    
  435630:	test   DWORD PTR [ebx+0xb],ebp
  435633:	in     eax,0x89
  435635:	out    0x21,al
  435637:	and    al,0x86
  435639:	loopne 0x43566b
  43563b:	hlt    
  43563c:	or     eax,0x861261e3
  435641:	imul   ebx,DWORD PTR [ecx+esi*4],0xffffff82
  435645:	sbb    bh,BYTE PTR [edi-0x50]
  435648:	out    dx,al
  435649:	push   esp
  43564a:	or     eax,DWORD PTR [eax]
  43564c:	xchg   ecx,eax
  43564d:	jmp    0x435620
  43564f:	sub    eax,0xfc58d2c4
  435654:	or     edx,DWORD PTR [ebx+0x742a887f]
  43565a:	or     eax,DWORD PTR [eax]
  43565c:	comiss xmm2,DWORD PTR [edx+0x7a430309]
  435663:	add    al,0x86
  435665:	inc    edx
  435666:	loopne 0x4356c2
  435668:	mov    dl,0x8f
  43566a:	jecxz  0x4356ce
  43566c:	xchg   esi,eax
  43566d:	inc    edx
  43566e:	loope  0x435673
  435670:	arpl   WORD PTR [eax+0x7a],bx
  435673:	cmp    DWORD PTR [esi],ebp
  435675:	sbb    BYTE PTR [eax],ah
  435677:	and    cl,cl
  435679:	inc    ebx
  43567a:	jo     0x435654
  43567c:	repnz fsubr QWORD PTR [ebx-0x46]
  435680:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435681:	outs   dx,DWORD PTR ds:[esi]
  435682:	add    ecx,DWORD PTR [edi+0x7a4abe00]
  435688:	inc    ecx
  435689:	or     bl,ch
  43568b:	jmp    0xe1709503
  435690:	add    eax,DWORD PTR [ebx]
  435692:	repz int3 
  435694:	lea    ecx,[esi]
  435696:	fwait
  435697:	xlat   BYTE PTR ds:[ebx]
  435698:	add    eax,DWORD PTR [esi-0x210b2a36]
  43569e:	add    dl,ch
  4356a0:	mov    cs,WORD PTR [esi+0x4a]
  4356a3:	jnp    0x435718
  4356a5:	sbb    DWORD PTR ds:0xdb0303e1,ebp
  4356ab:	in     al,dx
  4356ac:	mov    ds,WORD PTR [ebp+0x56]
  4356af:	imul   esi,edi,0x5f51c78e
  4356b5:	xchg   esp,eax
  4356b6:	inc    edx
  4356b7:	loope  0x43565b
  4356b9:	inc    esi
  4356ba:	cs jb  0x4356b0
  4356bd:	imul   ecx,DWORD PTR [eax-0x385348b9],0x36
  4356c4:	pushf  
  4356c5:	std    
  4356c6:	out    dx,al
  4356c7:	cli    
  4356c8:	xchg   ebx,eax
  4356c9:	add    DWORD PTR [ebx+0x5381f955],esi
  4356cf:	pop    es
  4356d0:	lea    esi,[esi]
  4356d2:	call   0x565:0x698603cf
  4356d9:	xchg   BYTE PTR [edx+0xa],al
  4356dc:	movups XMMWORD PTR [esi],xmm1
  4356df:	mov    ebx,0x68601107
  4356e4:	lock mov ch,0x9a
  4356e7:	sbb    cl,ch
  4356e9:	add    BYTE PTR [ebp+0x7240c155],al
  4356ef:	push   esp
  4356f0:	out    dx,eax
  4356f1:	jmp    0x69f3e78a
  4356f6:	rol    BYTE PTR [edx],0xa
  4356f9:	out    dx,al
  4356fa:	int3   
  4356fb:	scas   al,BYTE PTR es:[edi]
  4356fc:	mov    bl,0xef
  4356fe:	mov    DWORD PTR [edx+0xa],eax
  435701:	jb     0x435718
  435703:	push   ebx
  435704:	out    dx,eax
  435705:	jmp    0xb4c4c42a
  43570a:	in     eax,dx
  43570b:	mov    esp,0x7de0e155
  435710:	jo     0x43569a
  435712:	xchg   esp,eax
  435713:	xchg   ecx,eax
  435714:	xchg   esi,eax
  435715:	inc    ebx
  435716:	mov    DWORD PTR [esi],edi
  435718:	or     ch,cl
  43571a:	cli    
  43571b:	out    dx,al
  43571c:	stc    
  43571d:	(bad)  
  43571e:	sbb    BYTE PTR [ebx+eax*4-0x5f],dh
  435722:	(bad)  
  435723:	loopne 0x435725
  435725:	jns    0x435759
  435727:	xor    BYTE PTR [edx],cl
  435729:	jmp    0x91d5e7a4
  43572e:	mov    esp,0x7262ef52
  435733:	cs and ch,0xb4
  435737:	pop    ecx
  435738:	dec    edx
  435739:	aad    0x96
  43573b:	nop
  43573c:	xchg   edx,eax
  43573d:	jo     0x4356db
  43573f:	push   edx
  435740:	out    dx,eax
  435741:	bound  ecx,QWORD PTR [edx+0x2e]
  435744:	cmp    DWORD PTR [ecx],0xffffff82
  435747:	retf   0xf80e
  43574a:	cli    
  43574b:	mov    cl,0xae
  43574d:	inc    DWORD PTR [eax]
  43574f:	test   DWORD PTR [edx-0x7d],eax
  435752:	sub    al,0x12
  435754:	dec    esp
  435755:	dec    edx
  435756:	add    BYTE PTR [ebx-0xb],dl
  435759:	sbb    DWORD PTR [edx],ebp
  43575b:	xor    eax,0xe4ebbd1d
  435760:	add    edx,esi
  435762:	lea    esi,[ebx+0x40]
  435765:	cli    
  435766:	mov    edi,ecx
  435768:	loop   0x435785
  43576a:	add    BYTE PTR [edi+0x1c],bl
  43576d:	xchg   DWORD PTR [eax-0x10b2e9],ebx
  435773:	les    ecx,FWORD PTR [edi+0x69]
  435776:	mov    edx,ebx
  435778:	lock add eax,0x6c461f04
  43577e:	ror    ebp,cl
  435780:	sbb    al,0x7
  435782:	nop
  435783:	xchg   edi,eax
  435784:	dec    esp
  435785:	out    dx,eax
  435786:	call   FWORD PTR [ecx+eax*1]
  435789:	repnz mov DWORD PTR [edi-0x10ffe41e],edx
  435790:	mov    esi,0x6d7bd0e
  435795:	dec    edx
  435796:	add    BYTE PTR [ecx+ebx*1-0x12],dh
  43579a:	mov    DWORD PTR [edx],ecx
  43579c:	mov    dh,0x8b
  43579e:	(bad)  [ebx+0x2f]
  4357a1:	and    eax,0x3ec6aa34
  4357a6:	inc    eax
  4357a7:	fistp  QWORD PTR [esi+0x45d1bc82]
  4357ad:	or     bh,BYTE PTR [edi+0xa45bf]
  4357b3:	add    BYTE PTR [edi+ebp*4+0x1649cf35],al
  4357ba:	ins    BYTE PTR es:[edi],dx
  4357bb:	mov    ebp,ecx
  4357bd:	sbb    edi,DWORD PTR [ebp+0x1fd24e7]
  4357c3:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4357c5:	in     eax,dx
  4357c6:	mov    cl,0x16
  4357c8:	lahf   
  4357c9:	inc    ebp
  4357ca:	add    DWORD PTR [esi+0x1bee07],esi
  4357d0:	xchg   BYTE PTR [ebx+0x7e],bl
  4357d3:	js     0x435767
  4357d5:	jecxz  0x4357c5
  4357d7:	ss jno 0x4357f5
  4357da:	repnz or BYTE PTR [eax],dh
  4357dd:	jecxz  0x435832
  4357df:	adc    al,BYTE PTR [esi-0x71b781a5]
  4357e5:	in     al,0x12
  4357e7:	adc    al,0xfe
  4357e9:	inc    esi
  4357ea:	sbb    DWORD PTR [ebp-0xe5112],eax
  4357f0:	inc    ecx
  4357f1:	clc    
  4357f2:	dec    edx
  4357f3:	adc    al,0xf7
  4357f5:	dec    edx
  4357f6:	ffree  st(4)
  4357f8:	test   al,0x2c
  4357fa:	mov    ecx,0x800bbb85
  4357ff:	dec    esp
  435800:	lea    ecx,[ebx]
  435802:	and    DWORD PTR [edi-0xf2d2a],eax
  435808:	adc    DWORD PTR [edi+edi*8],esi
  43580b:	popa   
  43580c:	xor    eax,0x36072149
  435811:	repz lock (bad) 
  435814:	stc    
  435815:	pop    ebx
  435816:	mov    esi,0x6fe0087
  43581b:	icebp  
  43581c:	(bad)  
  43581d:	jmp    0xe296dcb6
  435822:	(bad)  [eax+eax*1+0x6d0b5b87]
  435829:	jg     0x435883
  43582b:	push   ebp
  43582c:	scas   al,BYTE PTR es:[edi]
  43582d:	push   es
  43582e:	adc    al,BYTE PTR [esi+0x0]
  435831:	lods   eax,DWORD PTR ds:[esi]
  435832:	data16 test dh,al
  435835:	mov    DWORD PTR [ecx-0x3607f6f9],0x5b464685
  43583f:	test   BYTE PTR [ebx-0x6e],cl
  435842:	push   0x5cd77c58
  435847:	test   BYTE PTR [eax+0x3ef41d2],cl
  43584d:	xchg   BYTE PTR [ebp+0x428603f1],cl
  435853:	int3   
  435854:	mov    esi,0xdb90ce01
  435859:	dec    edx
  43585a:	rol    DWORD PTR [eax],1
  43585c:	mov    edx,ebp
  43585e:	ds loopne 0x4358b7
  435861:	mov    ds:0x378aff94,al
  435866:	jmp    0xfb4efafe
  43586b:	clc    
  43586c:	and    eax,0xf6a9b281
  435871:	inc    ecx
  435872:	push   eax
  435873:	call   0xf7ce76cd
  435878:	add    eax,DWORD PTR [esi+0xf791bb]
  43587e:	add    DWORD PTR [edi],ebp
  435880:	rcr    BYTE PTR [esi+0x4c6c36c6],cl
  435886:	jb     0x4358c7
  435888:	ja     0x435906
  43588a:	fnstcw WORD PTR [eax]
  43588c:	loope  0x435891
  43588e:	add    esi,ebx
  435890:	clc    
  435891:	mov    esp,DWORD PTR [edx+0x3a746c31]
  435897:	cmp    ecx,esp
  435899:	add    ebp,edi
  43589b:	add    cl,ch
  43589d:	push   esp
  43589e:	xchg   esi,eax
  43589f:	sbb    al,0x3b
  4358a1:	rcr    DWORD PTR es:[edi+0x6c],cl
  4358a5:	push   ecx
  4358a6:	(bad)  
  4358a7:	mov    ebp,0xb9d60995
  4358ac:	jno    0x43590d
  4358ae:	je     0x4358f2
  4358b0:	loope  0x43583c
  4358b2:	push   ebp
  4358b3:	dec    esi
  4358b4:	aas    
  4358b5:	(bad)  
  4358b6:	dec    BYTE PTR [edx+0x5b8603f7]
  4358bc:	jmp    0x828b:0x473e4d8a
  4358c3:	xchg   ebx,eax
  4358c4:	or     cl,BYTE PTR [edi-0x2b]
  4358c7:	ins    DWORD PTR es:[edi],dx
  4358c8:	push   0x188a0de0
  4358cd:	jmp    0x7103a657
  4358d2:	or     eax,0x85e9188e
  4358d7:	lds    ebp,FWORD PTR [esi]
  4358d9:	push   esp
  4358da:	inc    ebp
  4358db:	or     eax,0xeafce94a
  4358e0:	add    DWORD PTR [eax+eax*1+0x0],esp
  4358e4:	cmp    DWORD PTR [esi+0xa428569],eax
  4358ea:	ret    0x9459
  4358ed:	repnz mov ch,0xc5
  4358f0:	inc    edx
  4358f1:	xor    DWORD PTR [ecx-0x1f],0x34
  4358f5:	or     ch,cl
  4358f7:	(bad)  [edx]
  4358f9:	or     ch,cl
  4358fb:	test   DWORD PTR ds:0xcc3802f7,esp
  435901:	push   edi
  435902:	(bad)  
  435903:	or     al,0x60
  435905:	push   0x42c4e31a
  43590a:	loope  0x435977
  43590c:	inc    edi
  43590d:	mov    edx,0xef4f1361
  435912:	out    dx,al
  435913:	pop    ebx
  435914:	stos   BYTE PTR es:[edi],al
  435915:	mov    dl,0xff
  435917:	test   DWORD PTR [edx-0x7d],eax
  43591a:	cdq    
  43591b:	stc    
  43591c:	(bad)  
  43591d:	push   cs
  43591e:	mov    eax,0xee160208
  435923:	cmp    ebp,DWORD PTR [edx+0x4285dfb1]
  435929:	cmp    DWORD PTR [ecx-0x27],0xffffffc5
  43592d:	inc    edx
  43592e:	icebp  
  43592f:	std    
  435930:	sub    eax,0x8e427200
  435935:	sbb    cl,ch
  435937:	test   DWORD PTR [ecx+0x4a],ecx
  43593a:	cmc    
  43593b:	push   esp
  43593c:	xor    ah,BYTE PTR [eax+eax*1]
  43593f:	hlt    
  435940:	daa    
  435941:	mov    ebp,0x9abb49ea
  435946:	mov    eax,0xa42b900
  43594b:	lea    edi,[ebx+0x69]
  43594e:	fisttp WORD PTR [ebx-0x6f78c1be]
  435954:	jecxz  0x4359aa
  435956:	out    dx,eax
  435957:	inc    DWORD PTR [ecx+edx*2]
  43595a:	imul   edx,ebx,0x900724fd
  435960:	(bad)  
  435961:	push   esp
  435962:	out    dx,eax
  435963:	jmp    FWORD PTR [edi+edi*2-0x79]
  435967:	mov    BYTE PTR [ebx-0x1b0010ac],dl
  43596d:	std    
  43596e:	cmc    
  43596f:	cmp    edx,edi
  435971:	out    0x1b,al
  435973:	add    BYTE PTR [edi],ch
  435975:	aas    
  435976:	jo     0x435945
  435978:	shr    DWORD PTR [edi-0x2be7f00f],cl
  43597e:	out    dx,eax
  43597f:	add    ebx,DWORD PTR [edi]
  435981:	inc    edx
  435982:	test   DWORD PTR [eax-0x10ab5d],ecx
  435988:	xchg   ecx,eax
  435989:	push   esi
  43598a:	out    dx,eax
  43598b:	call   FWORD PTR [edi]
  43598d:	pop    ebx
  43598e:	fisttp QWORD PTR [ecx-0x31cac636]
  435994:	and    DWORD PTR [ebx],esi
  435996:	add    DWORD PTR [edi+0x6465c],esi
  43599c:	fbld   TBYTE PTR [edi]
  43599e:	test   esi,edx
  4359a0:	stc    
  4359a1:	xchg   edx,eax
  4359a2:	ror    BYTE PTR [ebx+0x5d873a17],1
  4359a8:	fbld   TBYTE PTR [edi]
  4359aa:	pop    es
  4359ab:	nop
  4359ac:	add    BYTE PTR [edi+0x54ffef54],dl
  4359b2:	adc    DWORD PTR [esi],edx
  4359b4:	mov    al,BYTE PTR [edi]
  4359b6:	jmp    0x1c83:0x5b86001b
  4359bd:	xchg   edi,eax
  4359be:	jl     0x435a0b
  4359c0:	adc    al,0xfd
  4359c2:	add    esi,edx
  4359c4:	test   BYTE PTR [esi+0x53],cl
  4359c7:	adc    DWORD PTR [eax+0xb6ddf],0x88963efd
  4359d1:	jb     0x435a27
  4359d3:	adc    BYTE PTR [eax+0xb5542],0x79
  4359da:	sbb    esi,edx
  4359dc:	scas   al,BYTE PTR es:[edi]
  4359dd:	xchg   esi,eax
  4359de:	add    ecx,0x82b55562
  4359e4:	dec    ebx
  4359e5:	mov    ds,esi
  4359e7:	ss push es
  4359e9:	push   esi
  4359ea:	loop   0x435a66
  4359ec:	mov    esp,0x620b5b78
  4359f1:	jmp    FWORD PTR [edx+0x5b861253]
  4359f7:	(bad)  
  4359f8:	mov    al,0xd
  4359fa:	pop    ecx
  4359fb:	pop    es
  4359fc:	add    BYTE PTR [esi-0x178d264],al
  435a02:	into   
  435a03:	hlt    
  435a04:	jmp    DWORD PTR [ecx]
  435a06:	mov    al,ds:0x18bbe382
  435a0b:	and    eax,0x75ad585
  435a10:	add    BYTE PTR [eax],al
  435a12:	xchg   BYTE PTR [ebp-0x3a9e1d46],bh
  435a18:	add    al,0xb0
  435a1a:	ds dec ebp
  435a1c:	or     eax,DWORD PTR [eax]
  435a1e:	test   DWORD PTR [ecx],esp
  435a20:	test   BYTE PTR [eax+0xb6d2a],cl
  435a26:	xchg   ecx,eax
  435a27:	adc    al,0x7a
  435a29:	inc    BYTE PTR [ebp-0xa5f4a5]
  435a2f:	jmp    0x3ee1:0x42861256
  435a36:	or     esp,DWORD PTR [edi+0x2e]
  435a39:	(bad)  
  435a3a:	retf   0x9b7d
  435a3d:	sbb    eax,esi
  435a3f:	dec    esp
  435a40:	aam    0xd7
  435a42:	jmp    0x86b3d205
  435a47:	inc    edx
  435a48:	loope  0x4359d2
  435a4a:	inc    ecx
  435a4b:	inc    edx
  435a4c:	scas   eax,DWORD PTR es:[edi]
  435a4d:	(bad)  
  435a4e:	xchg   ecx,eax
  435a4f:	shl    dh,1
  435a51:	and    DWORD PTR [ebx],ecx
  435a53:	or     esp,ecx
  435a55:	adc    ah,al
  435a57:	add    ah,BYTE PTR [ebp+eax*8-0x7e]
  435a5b:	jno    0x4359e8
  435a5d:	xchg   DWORD PTR [esi+0x2c],ebp
  435a60:	jmp    FWORD PTR [ebp+0x5c47bfe4]
  435a66:	xchg   BYTE PTR [edx-0x1f],al
  435a69:	add    edx,ebp
  435a6b:	push   ss
  435a6c:	inc    DWORD PTR [esi+0x3e18f0c]
  435a72:	xchg   BYTE PTR [edx-0x32],al
  435a75:	in     eax,dx
  435a76:	add    BYTE PTR [edi-0x79337041],ah
  435a7c:	inc    edx
  435a7d:	loope  0x435a82
  435a7f:	mov    ch,0x22
  435a81:	cdq    
  435a82:	in     al,0x29
  435a84:	dec    esp
  435a85:	loope  0x435a0f
  435a87:	or     al,0x37
  435a89:	loop   0x435a8e
  435a8b:	xchg   BYTE PTR [edx+0x425986bf],dh
  435a91:	mov    dh,0x9
  435a93:	(bad)  
  435a94:	mov    edi,0x42bd0022
  435a99:	loop   0x435a9e
  435a9b:	xchg   dh,cl
  435a9d:	pop    es
  435a9e:	xlat   BYTE PTR ds:[ebx]
  435a9f:	xor    DWORD PTR [eax+0x42860559],eax
  435aa5:	loope  0x435a6d
  435aa7:	sar    BYTE PTR [esi+0x1d],cl
  435aaa:	enter  0x7eca,0xa
  435aae:	mov    edx,0xf882f0c5
  435ab3:	add    BYTE PTR [ecx+0x9],ah
  435ab6:	repnz mov DWORD PTR [ecx+ebx*8],0x858280d0
  435abe:	mov    ebx,0xc1d9528c
  435ac3:	outs   dx,DWORD PTR ds:[esi]
  435ac4:	lea    edi,[esi-0x4181364b]
  435aca:	lods   eax,DWORD PTR ds:[esi]
  435acb:	sar    DWORD PTR [esi-0x42],0x62
  435acf:	std    
  435ad0:	mov    ds,WORD PTR [eax]
  435ad2:	jmp    0xa0ce585c
  435ad7:	(bad)  
  435ad8:	enter  0xee2b,0x0
  435adc:	xlat   BYTE PTR ds:[ebx]
  435add:	stos   BYTE PTR es:[edi],al
  435ade:	mov    dl,0xff
  435ae0:	test   DWORD PTR [edx-0x7d],eax
  435ae3:	cmp    DWORD PTR [esi-0x3a],esi
  435ae6:	inc    edx
  435ae7:	icebp  
  435ae8:	or     eax,0xc57e192e
  435aed:	and    DWORD PTR ss:[ecx],0x56
  435af1:	(bad)  
  435af2:	pop    edx
  435af3:	loope  0x435b71
  435af5:	nop
  435af6:	xchg   edx,eax
  435af7:	mov    al,ds:0x52ef4b37
  435afc:	xor    eax,0x3bd7c1c0
  435b01:	mov    BYTE PTR [edx-0x1f],0xf8
  435b05:	icebp  
  435b06:	adc    eax,0x188a9d73
  435b0b:	jmp    0xd8521595
  435b10:	in     al,dx
  435b11:	add    DWORD PTR [esi],edx
  435b13:	cli    
  435b14:	cmp    ah,al
  435b16:	xor    BYTE PTR [ecx+0x5d],0x30
  435b1a:	or     ch,cl
  435b1c:	or     bh,BYTE PTR [edx+0x4285ffae]
  435b22:	push   ebx
  435b23:	sub    al,cl
  435b25:	jge    0x435ae5
  435b27:	add    BYTE PTR [ebx-0x5433417d],bl
  435b2d:	cmp    DWORD PTR [esi-0x21440d34],0x53
  435b34:	icebp  
  435b35:	mov    ebx,0x9ddd8bd7
  435b3a:	cmp    bh,0xd8
  435b3d:	test   al,0x6d
  435b3f:	jge    0x435b41
  435b41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435b42:	ds leave 
  435b44:	adc    BYTE PTR [ebx],0x50
  435b47:	out    dx,eax
  435b48:	call   DWORD PTR [edi+0x53000a3e]
  435b4e:	add    al,0x85
  435b50:	dec    eax
  435b51:	mov    bl,0xbd
  435b53:	pop    edx
  435b54:	or     BYTE PTR [edi],ah
  435b56:	dec    edx
  435b57:	add    bh,bh
  435b59:	scas   eax,DWORD PTR es:[edi]
  435b5a:	push   edx
  435b5b:	xchg   BYTE PTR [eax+0x77],dl
  435b5e:	adc    eax,DWORD PTR [ebp-0x3a488c88]
  435b64:	rol    DWORD PTR [esi],0x37
  435b67:	or     BYTE PTR [eax+eax*2],0xab
  435b6b:	dec    edx
  435b6c:	adc    al,0xd4
  435b6e:	es push ss
  435b70:	mov    ebp,DWORD PTR [edi+0x36]
  435b73:	mov    bl,cl
  435b75:	rcl    DWORD PTR [ebp-0x54bff37e],1
  435b7b:	dec    edx
  435b7c:	adc    al,0xb4
  435b7e:	es push ss
  435b80:	mov    ebp,edi
  435b82:	cmp    eax,0x95d0cb85
  435b87:	scas   eax,DWORD PTR es:[edi]
  435b88:	jmp    0x174219a4
  435b8d:	pop    eax
  435b8e:	(bad)  
  435b8f:	adc    eax,0x7687a25f
  435b94:	sbb    ah,BYTE PTR [esi+esi*8+0x3e3f8b15]
  435b9b:	inc    ebp
  435b9c:	mov    DWORD PTR [edx],edi
  435b9e:	mov    BYTE PTR ds:[esi],bl
  435ba1:	xchg   bl,ah
  435ba3:	icebp  
  435ba4:	push   cs
  435ba5:	add    ch,bh
  435ba7:	xchg   esi,eax
  435ba8:	add    edi,ecx
  435baa:	inc    esi
  435bab:	addr16 dec ecx
  435bad:	cmp    DWORD PTR [ebp+0x2d5aa8ce],0xffffffae
  435bb4:	(bad)  
  435bb5:	int3   
  435bb6:	mov    edx,0xd2ccc227
  435bbb:	pop    edi
  435bbd:	int3   
  435bbe:	retf   0xc797
  435bc1:	int3   
  435bc2:	ret    0x7d06
  435bc5:	in     al,dx
  435bc6:	add    eax,0x1351eb88
  435bcb:	pop    es
  435bcc:	test   al,0x2d
  435bce:	iret   
  435bcf:	ret    
  435bd0:	or     al,0x0
  435bd2:	xchg   BYTE PTR [ebx-0x22],bl
  435bd5:	sar    ebx,1
  435bd7:	dec    edi
  435bd8:	inc    ebp
  435bd9:	bound  ecx,QWORD PTR ds:0xe0dfbf27
  435bdf:	pop    esp
  435be0:	pushf  
  435be1:	bound  eax,QWORD PTR [ebp+0x38b102a9]
  435be7:	inc    ecx
  435be8:	or     DWORD PTR [ebx+ecx*8-0x45],0x4b
  435bed:	jge    0x435c4d
  435bef:	pop    eax
  435bf0:	adc    esp,esp
  435bf2:	xchg   ebp,eax
  435bf3:	leave  
  435bf4:	outs   dx,DWORD PTR ds:[esi]
  435bf5:	aad    0xce
  435bf7:	jg     0x435bfb
  435bf9:	mov    cl,0xda
  435bfb:	test   al,0x5
  435bfd:	adc    DWORD PTR [edi+ebp*2-0x7],0x8
  435c02:	stc    
  435c03:	xchg   esi,eax
  435c04:	and    al,ah
  435c06:	std    
  435c07:	and    cl,BYTE PTR [ebx+0x62]
  435c0a:	add    BYTE PTR [edi],cl
  435c0c:	xchg   edi,eax
  435c0d:	and    al,ah
  435c0f:	cs mov ebx,0x7911f991
  435c15:	test   BYTE PTR [ecx+edx*8],al
  435c18:	mov    al,ds:0x4280ecce
  435c1d:	inc    ebp
  435c1e:	cmp    DWORD PTR [ebx],eax
  435c20:	pop    edi
  435c21:	scas   al,BYTE PTR es:[edi]
  435c22:	vfnmsub213ps ymm1,ymm1,YMMWORD PTR [edx+ebx*8+0xb0aedc4]
  435c2c:	(bad)  
  435c2d:	clc    
  435c2e:	xor    al,0x37
  435c30:	mov    ebp,0x3a468cc9
  435c35:	ins    BYTE PTR es:[edi],dx
  435c36:	xor    edi,DWORD PTR [edx-0x43]
  435c39:	fld    DWORD PTR [ecx+ecx*8+0x1c41448]
  435c40:	out    dx,eax
  435c41:	call   0xa08999d3
  435c46:	jle    0x435c9e
  435c48:	cs loope 0x435c4e
  435c4b:	xchg   BYTE PTR [edx-0x1f],al
  435c4e:	add    eax,edi
  435c50:	mov    edi,0x4891f015
  435c55:	test   BYTE PTR [ecx],0x86
  435c58:	inc    edx
  435c59:	data16 mov dl,0xfc
  435c5c:	adc    bh,bh
  435c5e:	cmp    BYTE PTR [edx-0x6ff01e41],0x47
  435c65:	pop    edi
  435c66:	xor    al,0x92
  435c68:	inc    edx
  435c69:	loope  0x435bf5
  435c6b:	hlt    
  435c6c:	repnz int3 
  435c6e:	add    eax,DWORD PTR [eax]
  435c70:	xchg   BYTE PTR [ecx+0x3bb26e65],bh
  435c76:	loope  0x435c7b
  435c78:	add    esi,edi
  435c7a:	pop    esp
  435c7b:	mov    esi,0xefc9130a
  435c80:	cmp    DWORD PTR [eax-0x1f],ecx
  435c83:	mov    bh,BYTE PTR [esi]
  435c85:	pop    esp
  435c86:	loopne 0x435c5a
  435c88:	cmp    esp,ecx
  435c8a:	imul   esi,DWORD PTR [eax],0xdaa14507
  435c90:	les    ecx,FWORD PTR [edx-0x53]
  435c93:	leave  
  435c94:	xchg   ebx,eax
  435c95:	mov    BYTE PTR [edx],cl
  435c97:	cdq    
  435c98:	sbb    DWORD PTR [eax-0x11],ecx
  435c9b:	jmp    0x435c3b
  435c9d:	test   DWORD PTR [edx+0x4cb8420],0xe387fca8
  435ca7:	jmp    0x435c7d
  435ca9:	xchg   edi,ebp
  435cab:	addr16 call 0x5ab5:0xce90a2e
  435cb3:	aad    0x85
  435cb5:	inc    edx
  435cb6:	sub    DWORD PTR [ebp+0x58],0x85e902e6
  435cbd:	nop
  435cbe:	or     ecx,ebp
  435cc0:	test   DWORD PTR [edx+0x68],eax
  435cc3:	jo     0x435c66
  435cc5:	ret    0x6dc8
  435cc8:	stos   DWORD PTR es:[edi],eax
  435cc9:	out    dx,eax
  435cca:	adc    eax,0xef4285e9
  435ccf:	ja     0x435cfe
  435cd1:	xor    al,0xa
  435cd3:	jmp    0x76b162d8
  435cd8:	loop   0x435c5a
  435cda:	xchg   ecx,eax
  435cdb:	inc    esi
  435cdc:	push   0xffffff87
  435cde:	pop    ds
  435cdf:	mov    BYTE PTR [ebp+0x6b],dl
  435ce2:	inc    edi
  435ce3:	out    dx,eax
  435ce4:	push   0xffffffdb
  435ce6:	repnz adc eax,0x734885e9
  435cec:	pop    ebx
  435ced:	adc    bh,bl
  435cef:	in     eax,dx
  435cf0:	jb     0x435c88
  435cf2:	cmp    al,BYTE PTR [ecx-0x774279cd]
  435cf8:	sbb    DWORD PTR [esi+0x47],edx
  435cfb:	out    dx,eax
  435cfc:	push   eax
  435cfd:	sub    al,0x85
  435cff:	add    DWORD PTR [ecx-0xe],0x4c
  435d03:	mov    esp,DWORD PTR [edx-0x76]
  435d06:	(bad)  
  435d07:	sbb    BYTE PTR [edx+0x71e283fc],bh
  435d0d:	out    dx,al
  435d0e:	dec    eax
  435d0f:	out    dx,eax
  435d10:	add    ah,dl
  435d12:	ret    
  435d13:	mov    BYTE PTR [esp+ebx*4],0xac
  435d17:	out    dx,eax
  435d18:	jl     0x435cda
  435d1a:	mov    esp,0x266f84b
  435d1f:	bnd jmp 0x435d0a
  435d22:	mov    ecx,0x42df24a6
  435d27:	or     al,BYTE PTR [eax]
  435d29:	lds    ebx,FWORD PTR fs:[ecx+0x14]
  435d2d:	out    dx,eax
  435d2e:	inc    edx
  435d2f:	test   DWORD PTR [ecx+ebp*2-0x20fffaf1],ecx
  435d36:	mov    ebx,0xe4006094
  435d3b:	inc    edx
  435d3c:	or     cl,BYTE PTR [eax+0x26]
  435d3f:	lds    ebx,FWORD PTR [ecx+0x14]
  435d42:	scas   eax,DWORD PTR es:[edi]
  435d43:	inc    edx
  435d44:	push   0x87883401
  435d49:	mov    ?,WORD PTR [edi]
  435d4b:	cmp    DWORD PTR [edx],ecx
  435d4d:	add    bh,al
  435d4f:	adc    al,0xe3
  435d51:	inc    eax
  435d53:	mov    eax,0x4294608c
  435d58:	or     al,BYTE PTR [ebx-0x6a10531b]
  435d5e:	fwait
  435d5f:	push   edx
  435d60:	out    dx,eax
  435d61:	push   esp
  435d63:	mov    esp,0x425f1456
  435d68:	xchg   DWORD PTR [ecx+eiz*8+0x6f00050a],ebx
  435d6f:	inc    ecx
  435d70:	pushf  
  435d71:	push   esp
  435d72:	cmp    eax,DWORD PTR [edx+0xa]
  435d75:	mov    esp,ecx
  435d77:	adc    dl,BYTE PTR [esi]
  435d79:	add    BYTE PTR [edi-0x47],bl
  435d7c:	xchg   BYTE PTR [esi+0xa3b93],cl
  435d82:	dec    ecx
  435d83:	mov    ebx,0x43498716
  435d88:	push   ss
  435d89:	lahf   
  435d8a:	xchg   al,ah
  435d8c:	inc    esi
  435d8d:	clc    
  435d8e:	test   al,0xe2
  435d90:	stc    
  435d91:	mov    BYTE PTR [eax+ebp*8],cl
  435d94:	not    DWORD PTR [edi+0x7a]
  435d97:	pop    ebx
  435d98:	or     eax,DWORD PTR [esi+0x143355fa]
  435d9e:	add    BYTE PTR [esi-0x7d3b75a5],al
  435da4:	popa   
  435da5:	mov    esp,0x190a3809
  435daa:	std    
  435dab:	js     0x435d92
  435dad:	mov    edx,0x98335385
  435db2:	mov    esi,0x5807e80e
  435db7:	jp     0x435e14
  435db9:	or     ecx,DWORD PTR [ecx]
  435dbb:	adc    DWORD PTR [ebx],ebp
  435dbd:	adc    BYTE PTR [edi+0x620bdc5a],al
  435dc3:	invd   
  435dc5:	jne    0x435dc5
  435dc7:	(bad)  
  435dc8:	aad    0x2a
  435dca:	add    eax,0x664c5b86
  435dcf:	xchg   eax,esp
  435dd1:	lods   al,BYTE PTR ds:[esi]
  435dd2:	xchg   DWORD PTR [ebx-0x7d],ecx
  435dd5:	mov    ds:0x9684a2ce,eax
  435dda:	jge    0x435d9e
  435ddc:	push   edi
  435ddd:	mov    bh,BYTE PTR [edx+0xb6fd6]
  435de3:	test   BYTE PTR [eax+ecx*4+0x3e],cl
  435de7:	jno    0x435d8d
  435de9:	xchg   esi,eax
  435dea:	stc    
  435deb:	clc    
  435dec:	push   es
  435ded:	cli    
  435dee:	jmp    DWORD PTR [ecx-0x20]
  435df1:	ins    BYTE PTR es:[edi],dx
  435df2:	push   esp
  435df3:	jb     0x435e50
  435df5:	or     eax,DWORD PTR [ebp+0x13af8]
  435dfb:	xchg   al,ah
  435dfd:	inc    edi
  435dfe:	or     BYTE PTR [edi],cl
  435e00:	out    dx,eax
  435e01:	ins    BYTE PTR es:[edi],dx
  435e02:	pop    esp
  435e03:	add    BYTE PTR [ebp+0xb03e142],cl
  435e09:	jl     0x435e64
  435e0b:	adc    al,0x1d
  435e0d:	inc    ebp
  435e0e:	pop    eax
  435e0f:	mov    BYTE PTR [ebp+0x5a6d4e46],bh
  435e15:	cmp    ecx,esp
  435e17:	add    ebx,DWORD PTR [esi]
  435e19:	xchg   ebx,eax
  435e1a:	cs xchg esp,eax
  435e1c:	pmulhw mm3,QWORD PTR [ebx+0x23e6e588]
  435e23:	(bad)  
  435e24:	retf   0x3575
  435e27:	mov    edx,0xbac71d75
  435e2d:	jne    0x435dde
  435e2f:	mov    dh,dl
  435e31:	mov    eax,0x4282f767
  435e36:	loope  0x435dbe
  435e38:	cld    
  435e39:	lods   eax,DWORD PTR ds:[esi]
  435e3a:	loope  0x435e3f
  435e3c:	xchg   ah,ch
  435e3e:	or     BYTE PTR [eax-0x51],cl
  435e41:	inc    esp
  435e42:	loopne 0x435dcb
  435e44:	add    al,0x1a
  435e46:	cld    
  435e47:	add    eax,DWORD PTR [esi-0x7e83a049]
  435e4d:	inc    edx
  435e4e:	loope  0x435e89
  435e50:	scas   al,BYTE PTR es:[edi]
  435e51:	or     dh,BYTE PTR [eax+0x5fb69f93]
  435e57:	aam    0x8a
  435e59:	inc    edx
  435e5a:	loope  0x435e8f
  435e5c:	sahf   
  435e5d:	jbe    0x435e15
  435e5f:	xchg   ebx,eax
  435e60:	jg     0x435e22
  435e62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435e63:	add    BYTE PTR [esi],bh
  435e65:	xor    ecx,esp
  435e67:	add    eax,DWORD PTR [eax]
  435e69:	xchg   BYTE PTR [edi-0x1c],dl
  435e6c:	add    cl,0x42
  435e6f:	call   0x24da6ccd
  435e74:	inc    esp
  435e75:	xchg   ah,bl
  435e77:	arpl   WORD PTR [eax-0x4],dx
  435e7a:	(bad)  
  435e7b:	cli    
  435e7c:	add    eax,DWORD PTR [esi-0x5d03f5be]
  435e82:	cmp    DWORD PTR [eax+0x4a05d959],edi
  435e88:	jmp    0x77f123ec
  435e8d:	xchg   esp,eax
  435e8e:	cmp    al,0xa
  435e90:	jmp    0xde752e1a
  435e95:	mov    edi,0xc5aaa4ba
  435e9a:	inc    edx
  435e9b:	push   0x70b8b66a
  435ea0:	jecxz  0x435e27
  435ea2:	inc    edx
  435ea3:	or     dh,BYTE PTR [eax+edx*8+0x5379b83a]
  435eaa:	add    eax,0xc59fe94a
  435eaf:	lods   eax,DWORD PTR ds:[esi]
  435eb0:	jg     0x435f26
  435eb2:	cmp    al,0xa
  435eb4:	jmp    0x6a7d2e3e
  435eb9:	repnz mov eax,DWORD PTR ds:[ecx]
  435ebd:	add    edi,0x24664b9
  435ec3:	sbb    eax,ebp
  435ec5:	pop    es
  435ec6:	fwait
  435ec7:	sbb    cl,ch
  435ec9:	test   eax,ebp
  435ecb:	retf   0x31
  435ece:	pop    es
  435ecf:	test   DWORD PTR [ecx-0x8],0xf7a2b88a
  435ed6:	test   DWORD PTR [edx+0x50],eax
  435ed9:	stos   BYTE PTR es:[edi],al
  435eda:	or     BYTE PTR [ebx+0xc],bl
  435edd:	ins    BYTE PTR es:[edi],dx
  435ede:	dec    ecx
  435edf:	add    bl,BYTE PTR [ecx]
  435ee1:	call   0xe95bf8ed
  435ee6:	test   eax,ebp
  435ee8:	retf   0xd6a
  435eeb:	inc    ebp
  435eec:	jle    0x435f1b
  435eee:	ret    0x933
  435ef1:	addr16 mov ebp,0x97e90a30
  435ef7:	test   DWORD PTR [esi-0x417ce500],edi
  435efd:	int3   
  435efe:	sbb    eax,DWORD PTR [ebx-0x3c5d3342]
  435f04:	fisttp QWORD PTR [ebx-0x7779b99e]
  435f0a:	jmp    0x435f54
  435f0c:	out    dx,eax
  435f0d:	call   FWORD PTR [esi+esi*4+0xc467e03]
  435f14:	pop    esp
  435f15:	mov    esi,DWORD PTR [edx]
  435f17:	dec    ebx
  435f18:	imul   ecx,DWORD PTR [ebx-0x1d42e68f],0x66020794
  435f22:	out    0xce,al
  435f24:	mov    cl,0x16
  435f26:	out    dx,eax
  435f27:	add    DWORD PTR ds:[esi+0x1bf707],esi
  435f2e:	ffreep st(3)
  435f30:	pop    ecx
  435f31:	adc    al,0x0
  435f33:	addr16 push ebx
  435f35:	add    BYTE PTR [edi],cl
  435f37:	xor    edi,edx
  435f39:	mov    dh,0x16
  435f3b:	fistp  QWORD PTR [esi]
  435f3d:	icebp  
  435f3e:	inc    eax
  435f3f:	mov    bl,0xc3
  435f41:	inc    ecx
  435f42:	adc    al,0x24
  435f44:	lar    ecx,WORD PTR [eax-0x6f79b235]
  435f4b:	jmp    0x435f94
  435f4d:	out    dx,eax
  435f4e:	dec    eax
  435f50:	std    
  435f51:	adc    eax,0xc5649fb1
  435f56:	data16 fcomp QWORD PTR [edi-0x4250b27b]
  435f5d:	mov    al,0xf3
  435f5f:	push   ss
  435f60:	into   
  435f61:	lods   eax,DWORD PTR ds:[esi]
  435f62:	push   ss
  435f63:	outs   dx,DWORD PTR ds:[esi]
  435f64:	inc    esi
  435f65:	test   DWORD PTR [ebp+0x5b],edx
  435f68:	ins    BYTE PTR es:[edi],dx
  435f69:	xchg   DWORD PTR [eax-0x10c319],esi
  435f6f:	test   eax,0x8601686f
  435f74:	ret    
  435f75:	lods   al,BYTE PTR ds:[esi]
  435f76:	cmc    
  435f77:	pop    ecx
  435f78:	rol    DWORD PTR [esp+eax*8+0x62c5668a],1
  435f7f:	std    
  435f80:	push   esi
  435f81:	repnz popa 
  435f83:	push   ebp
  435f84:	into   
  435f85:	test   BYTE PTR [edi-0x43915d7b],bh
  435f8b:	cwde   
  435f8c:	sub    ecx,DWORD PTR [ebx]
  435f8e:	test   DWORD PTR [ebx-0x9f8dec5],edi
  435f94:	shl    ebx,cl
  435f96:	inc    DWORD PTR [eax]
  435f98:	sbb    DWORD PTR [ebp+0x2a9c0c37],esp
  435f9e:	xchg   ebx,eax
  435f9f:	sahf   
  435fa0:	or     eax,0xca7d9981
  435fa5:	das    
  435fa6:	and    BYTE PTR [ebp-0x3335a036],bh
  435fac:	ret    0xca77
  435faf:	int3   
  435fb0:	mov    edx,0xd2ccca6f
  435fb5:	(bad)  
  435fb6:	ins    DWORD PTR es:[edi],dx
  435fb7:	in     al,dx
  435fb8:	aaa    
  435fb9:	cld    
  435fba:	ins    DWORD PTR es:[edi],dx
  435fbb:	pop    ebx
  435fbc:	jbe    0x435f9f
  435fbe:	ins    DWORD PTR es:[edi],dx
  435fbf:	jae    0x43603f
  435fc1:	lods   al,BYTE PTR ds:[esi]
  435fc2:	pop    esp
  435fc3:	test   BYTE PTR [esi+0x51000b2b],al
  435fc9:	push   0x2b86fc47
  435fce:	or     eax,DWORD PTR [eax]
  435fd0:	sub    BYTE PTR [ebp+ebp*2+0x3a],bh
  435fd4:	add    eax,0x12fdea99
  435fd9:	and    edx,DWORD PTR [ebx-0x65f7738e]
  435fdf:	xchg   DWORD PTR [ecx+0x4f],eax
  435fe2:	outs   dx,DWORD PTR ds:[esi]
  435fe3:	sbb    BYTE PTR [esi-0x29fff4dc],0x3
  435fea:	inc    edx
  435feb:	cld    
  435fec:	jno    0x436030
  435fee:	test   al,0x7e
  435ff0:	cld    
  435ff1:	gs cld 
  435ff3:	add    eax,DWORD PTR [esi+0x5dcc8993]
  435ff9:	inc    ecx
  435ffa:	add    BYTE PTR [eax+eax*1-0x3683b5b6],0x5e
  436002:	jae    0x436073
  436004:	nop
  436005:	aas    
  436006:	int    0x4e
  436008:	pop    ebx
  436009:	xchg   esp,eax
  43600a:	inc    edx
  43600b:	loope  0x436089
  43600d:	cld    
  43600e:	in     eax,dx
  43600f:	out    dx,al
  436010:	add    eax,DWORD PTR [esi-0x5d02dd3b]
  436016:	add    ebp,ebx
  436018:	ret    0x4520
  43601b:	and    bl,BYTE PTR [edx-0x706235ed]
  436021:	push   ebx
  436022:	or     al,0xb8
  436024:	or     bl,ch
  436026:	inc    esp
  436027:	data16 cmp al,0x85
  43602a:	int    0x11
  43602c:	jle    0x435fe1
  43602e:	inc    esi
  43602f:	in     al,dx
  436030:	lds    esi,FWORD PTR [edi+0x5d]
  436033:	jl     0x43607b
  436035:	xchg   edx,eax
  436036:	(bad)  
  436037:	and    BYTE PTR [edi],dl
  436039:	jb     0x436008
  43603b:	jge    0x436034
  43603d:	ss xchg ebp,eax
  43603f:	xchg   ecx,eax
  436040:	cmp    esi,ebx
  436042:	add    ch,bh
  436044:	(bad)  
  436045:	mov    edi,0xa0f31cc4
  43604a:	(bad)  
  43604b:	loop   0x436050
  43604d:	xchg   ch,al
  43604f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436050:	jl     0x435fd8
  436052:	inc    edx
  436053:	loope  0x43605c
  436055:	pop    esi
  436057:	lea    eax,[esi+eax*4]
  43605a:	inc    edx
  43605b:	sbb    al,0xba
  43605d:	jg     0x436025
  43605f:	xchg   ebp,eax
  436060:	add    al,0x0
  436062:	xchg   BYTE PTR [edx+0x7c],al
  436065:	jle    0x4360a9
  436067:	pop    ecx
  436068:	or     ch,cl
  43606a:	test   ebp,eax
  43606c:	ins    BYTE PTR es:[edi],dx
  43606d:	aad    0x6
  43606f:	xchg   edx,eax
  436070:	push   es
  436071:	push   0xfffffffb
  436073:	dec    ebx
  436074:	jo     0x4360b1
  436076:	test   al,0xc5
  436078:	retf   
  436079:	unpckhps xmm4,XMMWORD PTR [ebx]
  43607c:	sbb    DWORD PTR [edi],0x4e
  43607f:	mov    ds:0x54ba6f01,al
  436084:	or     ch,cl
  436086:	inc    eax
  436087:	repnz (bad) 
  436089:	xor    DWORD PTR [eax],esi
  43608b:	inc    eax
  43608c:	out    dx,eax
  43608d:	(bad)  
  43608e:	enter  0x824a,0x5
  436092:	cmp    DWORD PTR [ecx],0x48
  436095:	cmc    
  436096:	and    dl,dh
  436098:	(bad)  
  436099:	nop
  43609a:	adc    BYTE PTR [eax-0x11],al
  43609d:	(bad)  
  43609e:	enter  0x8356,0xb7
  4360a2:	or     eax,0x7cf10dc8
  4360a7:	les    ebp,FWORD PTR [ebp-0x10bd7a21]
  4360ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4360ae:	stc    
  4360af:	lock sbb ebx,edx
  4360b2:	sub    eax,0x513dba5
  4360b7:	add    edi,ebx
  4360b9:	pusha  
  4360ba:	add    bh,bh
  4360bc:	pop    ss
  4360bd:	jmp    0x5fc50547
  4360c2:	cmp    dl,BYTE PTR [edx+ecx*1-0x17]
  4360c6:	add    BYTE PTR [esi+ecx*2],bl
  4360c9:	push   0x1a4e41a
  4360ce:	push   edi
  4360cf:	inc    edx
  4360d0:	push   esp
  4360d1:	or     ch,cl
  4360d3:	add    al,0x0
  4360d5:	or     esi,DWORD PTR [eax+0x23]
  4360d8:	(bad)  
  4360d9:	pop    ss
  4360da:	jmp    0xcd882664
  4360df:	or     al,0xcc
  4360e1:	and    DWORD PTR [eax],eax
  4360e3:	xchg   esp,eax
  4360e4:	inc    ebx
  4360e5:	or     cl,BYTE PTR [ebx+0x62fd9]
  4360eb:	outs   dx,DWORD PTR ds:[esi]
  4360ec:	sbb    DWORD PTR [edx+0x41],0xffffff8e
  4360f0:	test   BYTE PTR [eax-0x18],al
  4360f3:	pop    ebx
  4360f4:	aam    0xf0
  4360f6:	push   edx
  4360f8:	lds    eax,FWORD PTR [ecx+0x5a436f09]
  4360fe:	lea    esi,[ecx+0x5f000ab7]
  436104:	jbe    0x43608b
  436106:	(bad)  
  436107:	pop    ss
  436108:	adc    ah,bh
  43610a:	push   DWORD PTR [eax+0x614c5c4]
  436110:	mov    ecx,0xbc1f000a
  436115:	test   BYTE PTR [ecx+ebx*1+0x328b0a43],bh
  43611c:	aaa    
  43611d:	test   BYTE PTR [edi+0x1d],al
  436120:	(bad)  
  436121:	test   BYTE PTR ds:0x8b6c7141,0x9f
  436128:	gs mov ebp,0x7d6400e2
  43612e:	push   ss
  43612f:	data16 out 0xb4,al
  436132:	mov    dl,0x16
  436134:	fild   WORD PTR [edx+0x1]
  436137:	mov    dh,0x61
  436139:	mov    ebx,DWORD PTR [eax+eax*1]
  43613c:	out    dx,eax
  43613d:	mov    ebx,0x2f67085c
  436142:	add    bh,bh
  436144:	sbb    DWORD PTR [edi],esi
  436146:	add    dh,BYTE PTR [esi+0x1c8e61]
  43614c:	scas   eax,DWORD PTR es:[edi]
  43614d:	mov    ebx,0x75241444
  436152:	add    cl,BYTE PTR [eax-0x6979cc7d]
  436158:	add    edi,DWORD PTR [eax]
  43615a:	out    dx,eax
  43615b:	inc    DWORD PTR [esi-0x28ebb7e8]
  436161:	cmp    cl,dl
  436163:	lds    esp,FWORD PTR [eax]
  436165:	fmul   QWORD PTR [ebp+0x72f9447d]
  43616b:	xchg   edx,eax
  43616c:	cmp    bl,BYTE PTR [esi]
  43616e:	or     eax,DWORD PTR [eax]
  436170:	call   0x90fbea17
  436175:	sub    ecx,DWORD PTR [ebx]
  436177:	in     eax,0x75
  436179:	inc    ebp
  43617a:	mov    ecx,0x8522e0e0
  43617f:	mov    eax,0x7d0b2b78
  436184:	inc    edi
  436185:	sub    DWORD PTR [edx+ecx*4+0x2],esi
  436189:	push   ss
  43618a:	or     eax,DWORD PTR [eax]
  43618c:	scas   al,BYTE PTR es:[edi]
  43618d:	and    esi,DWORD PTR [eax+eax*2]
  436190:	add    BYTE PTR [esi-0x39bb91bd],al
  436196:	sub    esi,DWORD PTR [edx-0x3e]
  436199:	fcom   QWORD PTR cs:[ecx-0x3d56e607]
  4361a0:	or     ch,bh
  4361a2:	jne    0x436132
  4361a4:	xchg   edx,eax
  4361a5:	push   ds
  4361a6:	test   DWORD PTR [ebp-0x7d],edi
  4361a9:	add    eax,edi
  4361ab:	add    eax,0xc183c085
  4361b0:	div    cl
  4361b2:	ins    BYTE PTR es:[edi],dx
  4361b3:	sbb    eax,0xa7b04d5a
  4361b8:	pop    ebx
  4361b9:	lds    ebp,FWORD PTR [edi-0x36]
  4361bc:	int3   
  4361bd:	retf   0x71fe
  4361c0:	in     al,dx
  4361c1:	std    
  4361c2:	out    0xee,al
  4361c4:	or     BYTE PTR [ecx],bl
  4361c6:	out    dx,eax
  4361c7:	cli    
  4361c8:	dec    edi
  4361c9:	scas   al,BYTE PTR es:[edi]
  4361ca:	leave  
  4361cb:	cmp    al,0xf9
  4361cd:	mov    ecx,0x5304c2a8
  4361d2:	push   0x42baccca
  4361d7:	mov    ch,0xbf
  4361d9:	ror    BYTE PTR [esi],cl
  4361db:	popf   
  4361dc:	mov    edi,0x792e0eca
  4361e1:	mov    ds:0x360025c9,al
  4361e6:	sub    bl,BYTE PTR [ebp+0x4e]
  4361e9:	jg     0x436228
  4361eb:	mov    DWORD PTR fs:[edx+0x42bfa49f],0xbf8d0e
  4361f6:	cmp    cl,BYTE PTR [esi]
  4361f8:	mov    ch,0xbf
  4361fa:	push   edx
  4361fb:	push   cs
  4361fc:	popf   
  4361fd:	mov    edi,0x748a0e4a
  436202:	xchg   BYTE PTR [edx-0x1f],al
  436205:	jle    0x4361c8
  436207:	inc    edx
  436208:	loope  0x436288
  43620a:	leave  
  43620b:	inc    edx
  43620c:	loope  0x43628c
  43620e:	rol    DWORD PTR [edx-0x1f],0x7e
  436212:	leave  
  436213:	inc    edx
  436214:	loope  0x436294
  436216:	rol    DWORD PTR [edx-0x1f],0x3
  43621a:	xchg   BYTE PTR [edx-0x1e],al
  43621d:	add    eax,DWORD PTR [esi-0x79fc1bbe]
  436223:	inc    edx
  436224:	call   0xf885e82c
  436229:	add    eax,DWORD PTR [esi-0x79fc2fbe]
  43622f:	inc    edx
  436230:	clc    
  436231:	add    eax,DWORD PTR [esi-0x79fc5fbe]
  436237:	inc    edx
  436238:	sub    BYTE PTR [ebx],al
  43623a:	xchg   BYTE PTR [edx+0x10],al
  43623d:	add    al,BYTE PTR [esi-0x79ffe7be]
  436243:	inc    edx
  436244:	add    BYTE PTR [esi+eax*4],al
  436247:	inc    edx
  436248:	or     ah,bh
  43624a:	sar    DWORD PTR [eax+esi*8],0xeb
  43624e:	mov    ecx,0xbdf60a3c
  436253:	cmp    al,0xef
  436255:	out    dx,al
  436256:	jge    0x43629a
  436258:	or     ah,dh
  43625a:	add    BYTE PTR ds:0xdde0a42,cl
  436260:	cmp    eax,0x3efdd6ef
  436265:	out    dx,eax
  436266:	into   
  436267:	std    
  436268:	inc    edx
  436269:	or     al,dh
  43626b:	or     eax,0xdbe0a4a
  436270:	pop    edx
  436271:	or     dh,BYTE PTR [esi-0x51f58603]
  436277:	std    
  436278:	mov    ecx,0x3a0da60a
  43627d:	or     bl,BYTE PTR [esi-0x69f6c5f3]
  436283:	std    
  436284:	cmp    DWORD PTR [ebx],ecx
  436286:	mov    ?,ebp
  436288:	cmp    DWORD PTR [edi],eax
  43628a:	xchg   BYTE PTR ds:0xd7dff3a,cl
  436290:	cmp    cl,BYTE PTR [edi]
  436292:	jbe    0x436291
  436294:	cmp    DWORD PTR [edi],ebp
  436296:	outs   dx,BYTE PTR ds:[esi]
  436297:	std    
  436298:	cmp    DWORD PTR [edi+0x66],ebp
  43629b:	or     eax,0x57b6ef3a
  4362a0:	(bad)  
  4362a1:	pop    ebx
  4362a2:	jne    0x4362ad
  4362a4:	das    
  4362a5:	dec    edx
  4362a6:	dec    ebp
  4362a7:	mov    DWORD PTR [esi-0x477f5eda],esi
  4362ad:	push   cs
  4362ae:	jb     0x436264
  4362b0:	inc    esi
  4362b1:	sub    edi,0xffffff88
  4362b4:	adc    cl,BYTE PTR [ebx+0x45c4e943]
  4362ba:	int    0xb9
  4362bc:	les    edx,FWORD PTR [ebp-0x3b]
  4362bf:	add    cl,ch
  4362c1:	(bad)  
  4362c2:	pop    ebp
  4362c3:	int    0xa9
  4362c5:	lds    edi,FWORD PTR [edi]
  4362c7:	stc    
  4362c8:	dec    eax
  4362c9:	cwde   
  4362ca:	(bad)  
  4362cb:	call   esp
  4362cd:	fdivp  st(0),st
  4362cf:	(bad)  [esp+ebx*8+0x469ee96e]
  4362d6:	or     al,BYTE PTR [eax]
  4362d8:	pushf  
  4362d9:	cld    
  4362da:	xchg   BYTE PTR [ebx+edx*4+0xa],bl
  4362de:	mov    BYTE PTR [ebx+eax*4+0x1e],ch
  4362e2:	mov    BYTE PTR [ebx+eax*4+0x36],cl
  4362e6:	xchg   BYTE PTR [edi+0x6b],al
  4362e9:	mov    ebx,0x7bf65041
  4362ee:	es or  dh,dh
  4362f1:	jae    0x436319
  4362f3:	or     al,0xf7
  4362f5:	inc    esi
  4362f6:	or     al,BYTE PTR [eax]
  4362f8:	pop    edi
  4362f9:	mov    esp,0xdf1c5441
  4362fe:	inc    ecx
  4362ff:	mov    DWORD PTR [ebx+0x1b],esp
  436302:	mov    bh,0x1
  436304:	pop    edi
  436305:	aas    
  436306:	or     cl,BYTE PTR [ebx-0x1f429198]
  43630c:	ja     0x4362cb
  43630e:	inc    esi
  43630f:	and    al,0x23
  436311:	mov    esp,0x78a42849
  436316:	cmp    cl,BYTE PTR [ebx+0x44881290]
  43631c:	xchg   ebx,eax
  43631d:	adc    cl,BYTE PTR [eax-0x77e97cb4]
  436323:	push   esp
  436324:	add    BYTE PTR [ebx+0x776f860e],al
  43632a:	mov    ebx,0x4b743c51
  43632f:	es sub al,0x74
  436332:	jae    0x43635a
  436334:	adc    al,0xf4
  436336:	clc    
  436337:	js     0x43635b
  436339:	pop    esp
  43633a:	push   es
  43633b:	add    eax,0xfe87992b
  436340:	(bad)  
  436341:	out    dx,eax
  436342:	ds and eax,0x7a686c1
  436348:	and    al,0x6a
  43634a:	pop    eax
  43634b:	dec    edi
  43634c:	test   esi,ecx
  43634e:	test   edx,0xffadeced
  436354:	and    edx,DWORD PTR [edx-0x6ddc005e]
  43635a:	inc    eax
  43635b:	jecxz  0x43634d
  43635d:	enter  0xb27,0x0
  436361:	xchg   BYTE PTR [ebp-0x6139d30a],dl
  436367:	or     al,0x42
  436369:	std    
  43636a:	fild   WORD PTR [ebp+edi*4+0x5a5dc8e]
  436371:	outs   dx,BYTE PTR ds:[esi]
  436372:	adc    eax,0x47f2858e
  436377:	ret    0xab7c
  43637a:	pop    ebx
  43637b:	gs cmp eax,0x83f22d86
  436381:	ucomiss xmm1,DWORD PTR [ebx]
  436384:	add    cl,bl
  436386:	inc    esp
  436387:	ss dec ebp
  436389:	add    BYTE PTR [edi-0x757a9d83],dh
  43638f:	pop    es
  436390:	mov    WORD PTR [edx+eiz*2],?
  436393:	sub    ecx,DWORD PTR [ebx]
  436395:	and    BYTE PTR [esi+0x7556628e],al
  43639b:	fistp  DWORD PTR [ecx]
  43639d:	inc    esp
  43639e:	push   ebp
  43639f:	imul   esi,ecx,0xffffff9d
  4363a2:	pop    es
  4363a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4363a4:	dec    ecx
  4363a5:	arpl   WORD PTR [eax+0x7380016],sp
  4363ab:	xchg   ebx,eax
  4363ac:	adc    al,0x74
  4363ae:	imul   ecx,DWORD PTR [edi],0x0
  4363b1:	xor    BYTE PTR [edi],al
  4363b3:	xchg   BYTE PTR [ebx],dl
  4363b5:	push   0x6b
  4363b7:	loop   0x4363b8
  4363b9:	daa    
  4363ba:	sub    ecx,DWORD PTR cs:[ebx]
  4363bd:	add    BYTE PTR [esi+0x1965f842],al
  4363c3:	sub    edi,ecx
  4363c5:	test   dh,ah
  4363c7:	dec    ecx
  4363c8:	mov    WORD PTR fs:[edi+ebp*4+0x430090f7],es
  4363d0:	loope  0x436355
  4363d2:	xchg   BYTE PTR [edi+0x1829ce3],ch
  4363d8:	fidiv  WORD PTR [ebx]
  4363da:	or     eax,DWORD PTR [esi+0x428605e1]
  4363e0:	loope  0x43637e
  4363e2:	add    BYTE PTR [ecx],0xe6
  4363e5:	xor    esi,ebx
  4363e7:	test   ecx,esp
  4363e9:	add    al,0x86
  4363eb:	inc    edx
  4363ec:	loope  0x43641b
  4363ee:	add    cl,bl
  4363f0:	popf   
  4363f1:	sub    DWORD PTR [ebp-0x739f2df9],ebx
  4363f7:	jg     0x4363aa
  4363f9:	out    0xd4,al
  4363fb:	sub    DWORD PTR [eax-0x3db48292],esp
  436401:	mov    ds:0xfc224af3,eax
  436406:	fwait
  436407:	or     ecx,DWORD PTR [esi-0x43]
  43640a:	jl     0x4363c6
  43640c:	pop    esi
  43640d:	jmp    0xdd10b8f6
  436412:	jb     0x436414
  436414:	push   es
  436415:	(bad)  [edi-0x3ca2d8bd]
  43641b:	mov    ch,0x5b
  43641d:	mov    ds:0x29ec769b,al
  436422:	or     BYTE PTR [edx+0x52],ah
  436425:	loopne 0x4363a8
  436427:	mov    al,0x3e
  436429:	loope  0x43642e
  43642b:	push   ecx
  43642c:	scas   al,BYTE PTR es:[edi]
  43642d:	add    eax,0x59fe76f0
  436432:	xor    BYTE PTR [edx-0x29831ebe],al
  436438:	add    cl,BYTE PTR [edx]
  43643a:	inc    ebx
  43643b:	cmc    
  43643c:	mov    esi,0x49d581c1
  436441:	xchg   BYTE PTR ds:0x690a4285,bl
  436447:	and    al,0x4b
  436449:	jbe    0x436417
  43644b:	mov    ebx,0x43f87b0f
  436450:	and    DWORD PTR [ebx],edi
  436452:	sub    DWORD PTR [eax],eax
  436454:	addr16 in eax,dx
  436456:	xor    DWORD PTR [edx],0x5
  436459:	neg    DWORD PTR [ecx]
  43645b:	sbb    ah,ch
  43645d:	ds loop 0x4364c3
  436460:	fdivr  st,st(1)
  436462:	or     cl,ch
  436464:	test   DWORD PTR [edx-0x25],eax
  436467:	leave  
  436468:	push   edx
  436469:	pusha  
  43646a:	ror    DWORD PTR [edx],1
  43646c:	mov    DWORD PTR [esi],0xc035eadd
  436472:	push   ebp
  436473:	or     eax,0xeef3b86a
  436478:	or     BYTE PTR [ebx+0x3b],0xa9
  43647c:	mov    bl,ch
  43647e:	and    DWORD PTR [edx-0x45e609f6],0x22
  436485:	ds loop 0x4364fa
  436488:	xchg   esi,eax
  436489:	pop    esi
  43648a:	push   es
  43648b:	bound  ecx,QWORD PTR [esi-0x93601a2]
  436491:	mov    ebp,0x12bd5805
  436496:	leave  
  436497:	xchg   ebx,eax
  436498:	cmp    bh,BYTE PTR [esi+0x5e1c3bd]
  43649e:	frstor [ebx-0x1e]
  4364a1:	jmp    0xe909:0xe899f619
  4364a8:	test   edx,eax
  4364aa:	call   0x34e6de95
  4364af:	xor    BYTE PTR [ebp+0x56008447],dl
  4364b5:	adc    ebp,DWORD PTR [edi-0x42fdff9a]
  4364bb:	lds    eax,FWORD PTR [eax-0x1f41d164]
  4364c1:	in     al,0xdb
  4364c3:	xchg   ebp,ecx
  4364c5:	addr16 cmp eax,0xf4df000a
  4364cb:	jmp    0xd2a2a18
  4364d0:	lds    edi,FWORD PTR [ecx+ebx*8-0x14]
  4364d4:	iret   
  4364d5:	xchg   esp,eax
  4364d6:	xchg   DWORD PTR ds:[ebx+ecx*8+0xf],esi
  4364db:	xchg   bh,al
  4364dd:	les    esi,FWORD PTR [edi+0x26]
  4364e0:	sub    ah,dl
  4364e2:	add    DWORD PTR [ecx],eax
  4364e4:	sbb    BYTE PTR [ebx],0x43
  4364e7:	or     al,BYTE PTR [eax]
  4364e9:	adc    al,0x6f
  4364eb:	sbb    BYTE PTR es:[eax+ecx*8],ah
  4364ef:	and    al,0xf2
  4364f1:	in     al,dx
  4364f2:	(bad)  
  4364f3:	in     al,dx
  4364f4:	mov    DWORD PTR [ecx-0x45],ebp
  4364f7:	or     DWORD PTR [edx+0x56883da9],ecx
  4364fd:	pop    ebp
  4364fe:	(bad)  
  4364ff:	retf   
  436500:	add    esp,edi
  436502:	js     0x4364f3
  436504:	xchg   DWORD PTR [eax+0x5cc76d44],ebx
  43650a:	aam    0xa5
  43650c:	mov    ebp,DWORD PTR [ebx+0x22]
  43650f:	and    ebp,ecx
  436511:	aas    
  436512:	shl    al,0xff
  436515:	lods   al,BYTE PTR ds:[esi]
  436516:	leave  
  436517:	out    dx,al
  436518:	je     0x43658c
  43651a:	push   es
  43651b:	jae    0x436541
  43651d:	add    BYTE PTR [edi+0x47],al
  436520:	mov    ecx,0x266fa44f
  436525:	sbb    BYTE PTR [ebp+0x1ce96e38],dl
  43652b:	mov    ebx,0xa1860149
  436530:	xor    dh,bh
  436532:	or     eax,esp
  436534:	or     edi,DWORD PTR [ebp-0x3f]
  436537:	and    al,0x9c
  436539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43653a:	fist   WORD PTR [eax-0x3f16067b]
  436540:	dec    edx
  436541:	or     DWORD PTR [ebx],ecx
  436543:	pop    ss
  436544:	or     al,0x0
  436546:	xchg   BYTE PTR [ecx+0x29860006],ah
  43654c:	mov    esp,0xca0c3ee0
  436551:	std    
  436552:	(bad)  
  436553:	mov    ds:0xb48e241f,eax
  436558:	out    dx,eax
  436559:	jge    0x4364fa
  43655b:	add    BYTE PTR [ebp+0x4b80a9f9],0x9
  436562:	or     ecx,DWORD PTR [ebx+0x9]
  436565:	add    BYTE PTR [esi-0x79fff51f],al
  43656b:	sub    DWORD PTR [edx-0x50b3c120],edi
  436571:	std    
  436572:	inc    edi
  436573:	mov    eax,ds:0xb08a243a
  436578:	or     bh,BYTE PTR [esi+0x5f]
  43657b:	and    eax,DWORD PTR [esi-0x515e9607]
  436581:	test   DWORD PTR [eax],eax
  436583:	retf   0xda3f
  436586:	lock aas 
  436588:	mov    cl,0x1a
  43658a:	and    al,0x8e
  43658c:	and    cl,cl
  43658e:	or     DWORD PTR [esi+ebp*8],eax
  436591:	or     eax,DWORD PTR [eax]
  436593:	xchg   BYTE PTR [eax],ch
  436595:	mov    cl,0x7d
  436597:	mov    edx,0xbaffdb07
  43659c:	call   ecx
  43659e:	mov    esi,0x4471bb85
  4365a3:	push   0x13
  4365a5:	ret    0x90be
  4365a8:	inc    edx
  4365a9:	rcr    eax,0xd0
  4365ac:	xor    DWORD PTR [ebp+0x536a1779],eax
  4365b2:	cdq    
  4365b3:	push   esp
  4365b4:	jns    0x4365d8
  4365b6:	push   cs
  4365b7:	dec    eax
  4365b8:	imul   esp,DWORD PTR [edx],0x37ca2a91
  4365be:	(bad)  
  4365c0:	sub    DWORD PTR [ecx-0xea1b588],ebp
  4365c6:	enter  0xacc1,0xd5
  4365ca:	add    BYTE PTR [edx+0x5e],bl
  4365cd:	aad    0x0
  4365cf:	(bad)  
  4365d0:	imul   edx,DWORD PTR [edx],0xa4c9c9d9
  4365d6:	fist   WORD PTR [ecx+0x5c0e2279]
  4365dc:	imul   esp,DWORD PTR [edx],0x6cc9e291
  4365e2:	fistp  WORD PTR [ecx-0x37]
  4365e5:	mov    edi,ds
  4365e7:	add    BYTE PTR [ecx+0x79],ch
  4365ea:	mov    ds:0xa2696c0d,al
  4365ef:	nop
  4365f0:	loop   0x4365bb
  4365f2:	iret   
  4365f3:	fdiv   DWORD PTR [ebx+0x29]
  4365f6:	cmc    
  4365f7:	add    BYTE PTR [esi+0x69],dh
  4365fa:	mov    dl,0x78
  4365fc:	retf   0xe95e
  4365ff:	enter  0xac28,0xe9
  436603:	fsub   DWORD PTR [eax]
  436605:	xor    DWORD PTR [ebp-0x6c96a888],eax
  43660b:	js     0x43664b
  43660d:	xor    DWORD PTR [ebp+0x78],eax
  436610:	rcr    BYTE PTR [esi-0x3b],cl
  436613:	call   0x3503:0x84803490
  43661a:	clc    
  43661b:	or     al,0x7f
  43661d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43661e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43661f:	js     0x436644
  436621:	inc    ebp
  436622:	or     al,BYTE PTR [edi]
  436624:	es popa 
  436626:	(bad)  
  436627:	in     eax,dx
  436628:	out    0x4a,al
  43662a:	pusha  
  43662b:	aad    0x31
  43662d:	inc    ecx
  43662e:	(bad)  
  43662f:	fucomp st(7)
  436631:	dec    edx
  436632:	fbld   TBYTE PTR [eax]
  436634:	jle    0x4365cc
  436636:	es loope 0x436657
  436639:	xor    eax,0xf536f67f
  43663e:	mov    bh,BYTE PTR [eiz*8+0x7be61cb1]
  436645:	xor    edi,edi
  436647:	mov    esi,0xedc8b5c3
  43664c:	add    dl,bl
  43664e:	and    eax,0x62086af0
  436653:	inc    DWORD PTR [ecx]
  436655:	add    cl,BYTE PTR [ebx-0x2d]
  436658:	or     DWORD PTR [edx-0x75091546],esi
  43665e:	push   ss
  43665f:	and    ebp,0x6
  436662:	dec    ebx
  436663:	mov    eax,0xc1aa9a25
  436668:	ret    0xbdfc
  43666b:	leave  
  43666c:	pop    esp
  43666d:	jae    0x436664
  43666f:	loope  0x43666a
  436671:	fld    TBYTE PTR [esi+ebp*2+0xd]
  436675:	call   0xa42:0x83ed8849
  43667c:	add    BYTE PTR [esi+0x60],ch
  43667f:	push   ss
  436680:	sub    BYTE PTR ss:[ecx+ebx*1],bl
  436684:	jmp    0x43660b
  436686:	inc    edx
  436687:	sbb    DWORD PTR [ecx+0x511a1cc3],0x7a
  43668e:	dec    ecx
  43668f:	xchg   BYTE PTR [ecx+0x6a0a4282],cl
  436695:	stos   BYTE PTR es:[edi],al
  436696:	dec    ecx
  436697:	jbe    0x43668e
  436699:	xchg   esp,eax
  43669a:	add    eax,0x323800c9
  43669f:	(bad)  
  4366a0:	movaps XMMWORD PTR [edi+0x25],xmm7
  4366a4:	call   0xd8ceaaf5
  4366a9:	ins    BYTE PTR es:[edi],dx
  4366aa:	sti    
  4366ab:	out    dx,al
  4366ac:	add    cl,BYTE PTR [esi+0x4f]
  4366af:	mov    ebp,0xc19c00c1
  4366b4:	sub    DWORD PTR [edi-0x3],esi
  4366b7:	push   eax
  4366b8:	fs cmc 
  4366ba:	fdiv   DWORD PTR [ecx]
  4366bc:	xor    DWORD PTR [ebx-0xcfeb55f],eax
  4366c2:	test   eax,0xe820cabb
  4366c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4366c8:	leave  
  4366c9:	mov    ecx,DWORD PTR [ebx]
  4366cb:	pop    esp
  4366cc:	dec    BYTE PTR [esi]
  4366ce:	inc    esp
  4366cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4366d0:	add    DWORD PTR [esi+0x77],edi
  4366d3:	dec    edi
  4366d4:	jno    0x4366ab
  4366d6:	and    al,0x4a
  4366d8:	ins    DWORD PTR es:[edi],dx
  4366d9:	sqrtps xmm2,XMMWORD PTR [edx-0x5ca1277b]
  4366e0:	sbb    ch,BYTE PTR [ebx]
  4366e2:	xchg   esi,eax
  4366e3:	dec    edi
  4366e4:	fs leave 
  4366e6:	inc    edi
  4366e7:	dec    esi
  4366e8:	add    DWORD PTR [ebx+ebx*2+0x1c000a3e],eax
  4366ef:	lahf   
  4366f0:	add    DWORD PTR [eax+edx*2+0x4f],esi
  4366f4:	mov    ebp,0xc73168c1
  4366f9:	bswap  ecx
  4366fb:	jge    0x436722
  4366fd:	call   0xd8ceb97e
  436702:	pushf  
  436703:	sti    
  436704:	out    dx,al
  436705:	add    dh,dh
  436707:	lds    esi,FWORD PTR [ebp+0x24]
  43670a:	pop    ebx
  43670b:	(bad)  
  43670c:	enter  0xa32b,0x6a
  436710:	and    bh,BYTE PTR [ebx]
  436712:	sbb    al,0x50
  436714:	jo     0x4366bf
  436716:	add    BYTE PTR [esi+0xd000b29],al
  43671c:	fistp  QWORD PTR [edi-0xf]
  43671f:	pop    ebp
  436720:	mov    eax,0xaf85e788
  436725:	add    DWORD PTR [eax-0x13e6077],ecx
  43672b:	cmovnp ecx,DWORD PTR [eax]
  43672e:	jge    0x436778
  436730:	sub    BYTE PTR [ebx-0x2b4e78bf],al
  436736:	std    
  436737:	add    al,0x64
  436739:	or     ch,ch
  43673b:	and    ah,BYTE PTR [eax-0x4f5ddc09]
  436741:	iret   
  436742:	and    edi,DWORD PTR [esi-0x6e]
  436745:	cmp    bh,cl
  436747:	loope  0x4367b4
  436749:	call   0x5aff:0x70a88647
  436750:	mov    eax,ds:0x11a27c2e
  436755:	imul   DWORD PTR [ebp-0x79c25faf]
  43675b:	sub    DWORD PTR [eax-0x1bf602a2],0x27418805
  436765:	add    DWORD PTR [ecx-0x7b],0xffffffa8
  436769:	inc    esp
  43676a:	add    al,0x95
  43676c:	jle    0x4366ee
  43676e:	pop    esp
  43676f:	push   0x31
  436771:	add    BYTE PTR fs:[ecx-0x7e7a76ed],cl
  436778:	(bad)  
  436779:	lds    ecx,FWORD PTR [eax]
  43677b:	add    BYTE PTR [ebx],al
  43677d:	loop   0x436784
  43677f:	add    BYTE PTR [esi+0x7909669c],al
  436785:	int3   
  436786:	dec    edx
  436787:	or     eax,esp
  436789:	fisub  DWORD PTR [esp+ecx*1]
  43678c:	add    edx,esp
  43678e:	les    edi,FWORD PTR [esi+eax*4]
  436791:	inc    edx
  436792:	in     al,0x4d
  436794:	add    eax,DWORD PTR [edi+0x7c]
  436797:	imul   edx,DWORD PTR [edx+0x31],0xffffff98
  43679b:	add    DWORD PTR [ebx],0x7ec44932
  4367a1:	(bad)  
  4367a2:	push   esi
  4367a3:	add    al,0x86
  4367a5:	inc    edx
  4367a6:	fs pop DWORD PTR fs:[ecx-0x6c]
  4367ab:	inc    ebx
  4367ac:	(bad)  
  4367ad:	mov    al,0xa2
  4367af:	and    eax,0xc548c782
  4367b4:	dec    edx
  4367b5:	inc    edx
  4367b6:	jl     0x436780
  4367b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4367b9:	ds in  al,0x4c
  4367bc:	add    eax,DWORD PTR [edi+0x69]
  4367bf:	imul   ebx,DWORD PTR [ecx+0x3814831],0x32
  4367c6:	jl     0x436814
  4367c8:	or     eax,DWORD PTR [edi+0xbd737fd]
  4367ce:	ins    BYTE PTR es:[edi],dx
  4367cf:	clc    
  4367d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4367d1:	push   0xffffffec
  4367d3:	inc    esp
  4367d4:	jg     0x43679a
  4367d6:	inc    edx
  4367d7:	add    al,0x86
  4367d9:	inc    edx
  4367da:	in     al,0x4c
  4367dc:	cmp    ebp,DWORD PTR [esi-0x79ffcc3b]
  4367e2:	mov    bh,0xc1
  4367e4:	sub    al,0xe9
  4367e6:	inc    ebp
  4367e7:	icebp  
  4367e8:	cmp    al,0xd1
  4367ea:	mov    eax,0x35c92c99
  4367ef:	inc    ebp
  4367f0:	lea    edx,[edi+0x3c6cd45d]
  4367f6:	ins    DWORD PTR es:[edi],dx
  4367f7:	mov    dl,0xf9
  4367f9:	retf   
  4367fa:	pop    ebp
  4367fb:	mov    dl,0x74
  4367fd:	and    bh,BYTE PTR [ebp+0x1d632cd7]
  436803:	and    DWORD PTR [ebp+0x3cf166c2],ecx
  436809:	dec    esi
  43680a:	mov    eax,0xb683010a
  43680f:	es cmc 
  436811:	mov    dh,BYTE PTR [edx]
  436813:	and    ebx,DWORD PTR [eax-0x47cd0566]
  436819:	aas    
  43681a:	and    edi,DWORD PTR [bx+si-0x194e]
  43681f:	adc    BYTE PTR ds:0x35836a5e,0x5e
  436826:	jb     0x43685b
  436828:	cwde   
  436829:	pop    ds
  43682a:	push   edi
  43682b:	and    ebx,DWORD PTR [eax+0x7682e692]
  436831:	bound  ebx,QWORD PTR [edi]
  436833:	jecxz  0x43682e
  436835:	xor    BYTE PTR [edx],0x23
  436838:	pop    eax
  436839:	ret    0x7801
  43683c:	loope  0x4367e8
  43683e:	add    ebx,edi
  436840:	test   DWORD PTR [edx],eax
  436842:	xor    esp,DWORD PTR [ebx]
  436844:	cmp    al,BYTE PTR [eax]
  436846:	cli    
  436847:	pop    es
  436848:	sti    
  436849:	test   DWORD PTR [edx],edx
  43684b:	mov    dh,0x26
  43684d:	add    eax,0xe1268e0b
  436852:	pop    esp
  436853:	lock es pushw es
  436857:	stc    
  436858:	fldcw  WORD PTR [edx-0xc4ecf36]
  43685e:	test   DWORD PTR [edx+0xa],eax
  436861:	add    ah,BYTE PTR [ecx-0x26]
  436864:	sub    DWORD PTR [ebp+0x79],edi
  436867:	stc    
  436868:	or     ecx,ebp
  43686a:	test   DWORD PTR [edx-0x4c],eax
  43686d:	loop   0x4367f4
  43686f:	inc    edx
  436870:	or     al,BYTE PTR [edx]
  436872:	jno    0x43686d
  436874:	mov    ebp,0xb130c52a
  436879:	add    ecx,DWORD PTR [edx-0x6d3df5be]
  43687f:	lds    esi,FWORD PTR [ebp+0x5]
  436882:	mov    dh,0xf7
  436884:	aad    0x0
  436886:	pushf  
  436887:	add    ebp,edi
  436889:	mov    ecx,0xa4465
  43688e:	inc    esp
  43688f:	inc    edi
  436890:	test   DWORD PTR [ebx+ecx*4+0xe],eax
  436894:	mov    ecx,cs
  436896:	imul   eax,DWORD PTR [ebx-0x79],0x48
  43689a:	xchg   DWORD PTR [ebx+0x56a61c49],edi
  4368a0:	in     eax,0x0
  4368a2:	pushf  
  4368a3:	sbb    DWORD PTR [edx-0x5d],0x74f0465c
  4368aa:	add    BYTE PTR ds:0x6b8bd2bd,ch
  4368b0:	pop    edx
  4368b1:	push   edx
  4368b2:	mov    esp,esp
  4368b4:	mov    ebx,0x9d5e1c59
  4368b9:	in     eax,dx
  4368ba:	sub    bl,BYTE PTR [esi-0x7b]
  4368bd:	iret   
  4368be:	add    eax,DWORD PTR [ebp+ecx*4-0x412c8779]
  4368c5:	push   edi
  4368c6:	cmp    al,0x74
  4368c8:	jnp    0x43684d
  4368ca:	pop    esp
  4368cb:	mov    esp,DWORD PTR [edx+0x37]
  4368ce:	pop    esp
  4368cf:	mov    ecx,DWORD PTR [edx+0x7b]
  4368d2:	adc    al,0x84
  4368d4:	mov    bl,0x85
  4368d6:	sbb    BYTE PTR [esi+0x22],dl
  4368d9:	sub    edx,DWORD PTR [esp+ebp*4]
  4368dc:	mov    ah,0x85
  4368de:	pop    eax
  4368df:	stos   DWORD PTR es:[edi],eax
  4368e0:	(bad)  
  4368e1:	in     al,0xb
  4368e3:	sahf   
  4368e4:	movntps XMMWORD PTR [esi+esi*1],xmm2
  4368e8:	jbe    0x43689f
  4368ea:	add    DWORD PTR [edi-0x732cf5bd],ebp
  4368f0:	sti    
  4368f1:	ins    DWORD PTR es:[edi],dx
  4368f2:	cmp    eax,0x2ce4ef
  4368f7:	popf   
  4368f8:	sub    al,BYTE PTR [edi]
  4368fa:	(bad)  
  4368fc:	xchg   BYTE PTR [ecx],al
  4368fe:	jle    0x436886
  436900:	fdivp  st(7),st
  436902:	jo     0x4368a9
  436904:	add    al,0x7e
  436906:	data16 scas al,BYTE PTR es:[edi]
  436908:	mov    ah,0xcf
  43690a:	and    edi,DWORD PTR [edx+0x44]
  43690d:	push   eax
  43690e:	jb     0x436910
  436910:	mov    WORD PTR [eax+edx*2+0x7d],es
  436914:	inc    ebp
  436915:	and    al,0x7e
  436917:	pop    eax
  436918:	adc    ah,0x0
  43691b:	and    eax,0x7d4cd835
  436920:	inc    eax
  436921:	and    al,0x7e
  436923:	jo     0x4368af
  436925:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436926:	iret   
  436927:	and    edx,DWORD PTR [esi-0x6c8daffc]
  43692d:	adc    al,0x50
  43692f:	jg     0x436976
  436931:	sbb    al,BYTE PTR [esi]
  436933:	add    BYTE PTR [esi+0x1d0fd3a2],al
  436939:	ss and al,0xf5
  43693c:	stc    
  43693d:	outs   dx,DWORD PTR ds:[esi]
  43693e:	xchg   cl,al
  436940:	xchg   DWORD PTR [edx],ebx
  436942:	or     eax,DWORD PTR [eax]
  436944:	call   DWORD PTR [eax]
  436946:	sbb    edi,DWORD PTR [ebp-0x3e]
  436949:	fsubr  DWORD PTR [ecx-0x3030bcab]
  43694f:	mov    esp,0xec83cdca
  436954:	add    eax,0x3384ef6d
  436959:	sub    DWORD PTR [eax+eax*8],edi
  43695c:	xchg   ecx,eax
  43695d:	cwde   
  43695e:	inc    ebx
  43695f:	test   edi,eax
  436961:	pop    ecx
  436962:	data16 adc BYTE PTR [ebp+0x5a],bh
  436966:	fadd   QWORD PTR [ebx+ecx*2-0x15bc81cb]
  43696d:	mov    cl,0xc2
  43696f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436970:	pmaxub mm3,QWORD PTR [esi+0x694b0087]
  436977:	jle    0x4369bc
  436979:	rol    BYTE PTR [ecx+0x7a],cl
  43697c:	(bad)  
  43697d:	cmp    DWORD PTR [ebp+eiz*1-0x5e77fe40],edi
  436984:	xor    DWORD PTR [esi-0x6b],eax
  436987:	push   dx
  436989:	repnz dec eax
  43698b:	fadd   QWORD PTR [esi]
  43698d:	or     eax,0x8603e0ca
  436992:	inc    edx
  436993:	call   0x47c4ec4c
  436998:	jge    0x43695c
  43699a:	jg     0x4369d9
  43699c:	(bad)  
  43699d:	sar    BYTE PTR [edi+0x45],cl
  4369a0:	les    esi,FWORD PTR [edx+0x0]
  4369a3:	adc    ebp,DWORD PTR [esi+0xb]
  4369a6:	mov    eax,0xbb7c88f9
  4369ab:	xor    eax,0xe13dde80
  4369b0:	add    eax,DWORD PTR [esi-0x6d7f012e]
  4369b6:	xchg   DWORD PTR [ebp+0x4],eax
  4369b9:	xchg   ebp,eax
  4369ba:	inc    esp
  4369bb:	mov    ecx,0xd443fe80
  4369c0:	jno    0x4369c3
  4369c2:	mov    BYTE PTR [ebp+0x39],cl
  4369c5:	mov    esi,0x458ae6b4
  4369ca:	cs jl  0x436a19
  4369cd:	add    eax,0x32ab603
  4369d2:	mov    ch,cl
  4369d4:	mov    BYTE PTR [esi+0x5],dh
  4369d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4369d8:	adc    eax,DWORD PTR [eax]
  4369da:	inc    esi
  4369db:	inc    ebx
  4369dc:	loope  0x4369e1
  4369de:	or     eax,DWORD PTR [eax-0x3e7f750f]
  4369e4:	loopne 0x4369ed
  4369e6:	or     edx,DWORD PTR [ebx+0x6a]
  4369e9:	or     ch,BYTE PTR [ebx]
  4369eb:	inc    edx
  4369ec:	fld    QWORD PTR [esp+eax*4+0x43]
  4369f0:	loope  0x4369f5
  4369f2:	xchg   BYTE PTR [edx+ecx*1-0x7c68ba46],cl
  4369f9:	add    al,0xa9
  4369fb:	out    dx,al
  4369fc:	push   esi
  4369fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4369fe:	test   BYTE PTR [edx+0xa],al
  436a01:	jmp    0xe4bb6dc4
  436a06:	imul   ebp,DWORD PTR [esi+0x421e4c6e],0x75
  436a0d:	in     al,dx
  436a0e:	dec    edx
  436a0f:	jbe    0x436a03
  436a11:	cmp    edx,edi
  436a13:	ja     0x4369d4
  436a15:	cmp    al,BYTE PTR [edi+0xbad6cc5]
  436a1b:	sub    eax,0xc785e9ef
  436a20:	xlat   BYTE PTR ds:[ebx]
  436a21:	ins    BYTE PTR es:[edi],dx
  436a22:	and    DWORD PTR [ecx+0xa],esp
  436a25:	out    0xfa,al
  436a27:	jge    0x436a7e
  436a29:	inc    ebp
  436a2a:	xchg   BYTE PTR [eax],dh
  436a2c:	and    edi,DWORD PTR [eax+0x1d]
  436a2f:	push   ebx
  436a30:	dec    esp
  436a31:	push   0xffffff9f
  436a33:	cmp    edi,DWORD PTR [eax-0x7a]
  436a36:	(bad)  
  436a37:	nop
  436a38:	add    ah,BYTE PTR [ebx+edx*4-0x58]
  436a3c:	sbb    ebp,DWORD PTR [eax+eax*1+0x57]
  436a40:	mov    dh,0x5
  436a42:	push   0x7d
  436a44:	sub    eax,0x8ad2e37b
  436a49:	mov    esp,DWORD PTR [ecx]
  436a4b:	push   0xffffff97
  436a4d:	or     DWORD PTR [eax+eax*8-0x13],0x3a
  436a52:	sub    ebx,esp
  436a54:	ret    
  436a55:	inc    esp
  436a56:	outs   dx,DWORD PTR ds:[esi]
  436a57:	or     eax,0x85e9ef2c
  436a5c:	daa    
  436a5d:	add    dh,BYTE PTR [ecx+ebp*8+0x65]
  436a61:	or     ch,cl
  436a63:	test   DWORD PTR [edx-0x66],eax
  436a66:	(bad)  
  436a67:	(bad)  
  436a68:	jge    0x436a6f
  436a6a:	mov    gs:0xb200432d,eax
  436a70:	in     al,0x6c
  436a72:	shr    BYTE PTR [ebp-0x5db377da],0xc4
  436a79:	ins    BYTE PTR es:[edi],dx
  436a7a:	clc    
  436a7b:	mov    ecx,0xba8be832
  436a80:	push   esi
  436a81:	test   DWORD PTR [ebp+0x7b],esi
  436a84:	jne    0x436a50
  436a86:	test   DWORD PTR [esi],esp
  436a88:	xor    ebp,DWORD PTR [eax]
  436a8a:	data16 fsubr QWORD PTR [edx+0x2d]
  436a8e:	add    BYTE PTR [ebx+0x33b70149],ah
  436a94:	add    eax,0x1173b702
  436a99:	mov    esp,DWORD PTR [esi-0x1a]
  436a9c:	inc    edx
  436a9d:	pop    esp
  436a9e:	pavgb  mm2,QWORD PTR [edx+0x2d]
  436aa2:	data16 add BYTE PTR [eax],bl
  436aa5:	add    ebx,DWORD PTR [esp+eax*4-0x56]
  436aa9:	adc    bl,BYTE PTR [esp+eax*4-0x5c]
  436aad:	adc    DWORD PTR [edi],eax
  436aaf:	inc    eax
  436ab0:	inc    esp
  436ab1:	xchg   DWORD PTR [eax-0x29],esp
  436ab4:	xchg   esp,eax
  436ab5:	test   BYTE PTR [ebp-0x18],ch
  436ab8:	pop    ds
  436ab9:	out    dx,eax
  436aba:	lock call FWORD PTR [eax+0x373976a7]
  436ac1:	sbb    al,0xfe
  436ac3:	(bad)  
  436ac4:	and    dl,BYTE PTR [edx+edx*1-0x36bfe0b2]
  436acb:	inc    ebp
  436acc:	aas    
  436acd:	push   cs
  436ace:	inc    ecx
  436acf:	inc    eax
  436ad0:	out    dx,eax
  436ad1:	mov    esi,0x7634e442
  436ad6:	mov    dl,0x98
  436ad8:	sub    al,BYTE PTR [eax]
  436ada:	out    dx,eax
  436adb:	sub    al,0xdd
  436add:	inc    ebp
  436ade:	or     al,BYTE PTR [eax]
  436ae0:	ss add ebx,edx
  436ae3:	mov    eax,0x2ef947
  436ae8:	xchg   BYTE PTR [esi],al
  436aea:	add    eax,0x7e19a9fe
  436aef:	inc    ebx
  436af0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436af1:	pop    esp
  436af2:	leave  
  436af3:	jecxz  0x436a7b
  436af5:	sbb    cl,BYTE PTR [ebx]
  436af7:	add    BYTE PTR [ebp-0x598c81da],bl
  436afd:	mov    ds:0x5e49dbf9,al
  436b02:	push   0xd
  436b04:	xchg   BYTE PTR [ecx],bl
  436b06:	or     eax,DWORD PTR [ebp-0x7fd23500]
  436b0c:	add    bh,bh
  436b0e:	gs jbe 0x436a98
  436b11:	shl    ecx,cl
  436b13:	jg     0x436b60
  436b15:	pop    edx
  436b16:	rol    DWORD PTR ds:0x58198600,0xe0
  436b1d:	xchg   ebp,eax
  436b1e:	sar    BYTE PTR [ebp+0x7b],1
  436b21:	ds mov dl,0xd2
  436b24:	jmp    0x436b33
  436b26:	loope  0x436aa9
  436b28:	dec    eax
  436b29:	xor    DWORD PTR [edx+0x65ffcff2],esp
  436b2f:	pop    edx
  436b30:	xchg   ebx,edx
  436b32:	cmc    
  436b33:	xchg   esi,esi
  436b35:	xchg   DWORD PTR [esi],esi
  436b37:	or     al,0x3b
  436b39:	mov    edx,0x1d000b18
  436b3e:	pop    ds
  436b3f:	mov    dh,dh
  436b41:	test   BYTE PTR [esi],cl
  436b43:	add    BYTE PTR [ebx],bh
  436b45:	push   esi
  436b46:	pop    ss
  436b47:	or     eax,DWORD PTR [eax]
  436b49:	sbb    DWORD PTR [eax+0x18e9fe11],0x8fee737e
  436b53:	dec    BYTE PTR [edx+0xb18fd]
  436b59:	xchg   BYTE PTR [eax-0x2a03300e],ah
  436b5f:	jb     0x436ae6
  436b61:	cmp    eax,DWORD PTR [edx-0x3]
  436b64:	sub    al,0xcb
  436b66:	mov    ecx,0x950b14b5
  436b6b:	or     DWORD PTR [edx],ecx
  436b6d:	add    bh,dh
  436b6f:	aas    
  436b70:	ins    BYTE PTR es:[edi],dx
  436b71:	dec    ebx
  436b72:	pop    ebx
  436b73:	cld    
  436b74:	test   DWORD PTR [ecx],eax
  436b76:	les    eax,FWORD PTR [ecx+edx*8+0x775eab03]
  436b7d:	push   ds
  436b7e:	jg     0x436b73
  436b80:	loop   0x436b10
  436b82:	int    0x22
  436b84:	in     al,0x43
  436b86:	add    BYTE PTR [edi-0x7],cl
  436b89:	mov    WORD PTR [ebp+0x79cf6906],?
  436b8f:	mov    al,ds:0xa08e106c
  436b94:	jp     0x436b65
  436b96:	mov    ebx,DWORD PTR ds:0x52c541fb
  436b9c:	inc    ecx
  436b9d:	xor    eax,0xbf6aa146
  436ba2:	xchg   ebx,eax
  436ba3:	mov    ebp,0xfd637c35
  436ba8:	jnp    0x436beb
  436baa:	or     ebp,DWORD PTR [eax+0x2a29be85]
  436bb0:	loope  0x436bb5
  436bb2:	push   ebx
  436bb3:	and    eax,0x1a4b4d7c
  436bb8:	jl     0x436b81
  436bba:	and    DWORD PTR [ebp+ebx*1+0x566efd4c],edi
  436bc1:	add    al,0x86
  436bc3:	inc    edx
  436bc4:	loope  0x436bca
  436bc6:	(bad)  
  436bc7:	mov    bh,0xdc
  436bc9:	mov    edx,0x2cf1a80b
  436bce:	mov    esp,0x8b235d
  436bd3:	cdq    
  436bd4:	scas   eax,DWORD PTR es:[edi]
  436bd5:	dec    ecx
  436bd6:	lea    esi,ds:0xcece5e2a
  436bdc:	jmp    0x1a0a:0x4285e809
  436be3:	sub    bh,BYTE PTR [edi-0x16c6eac4]
  436be9:	jne    0x436bdb
  436beb:	or     BYTE PTR [edx-0x3ae5c7f6],al
  436bf1:	enter  0x2394,0xc5
  436bf5:	leave  
  436bf6:	jge    0x436b84
  436bf8:	mov    ebp,0x316afe71
  436bfd:	or     esi,ecx
  436bff:	sbb    ch,BYTE PTR [eax]
  436c01:	cmp    al,0xee
  436c03:	or     al,BYTE PTR [ebp+0x2b3debe2]
  436c09:	out    dx,eax
  436c0a:	jmp    0x2d4d1094
  436c0f:	cmp    ebp,esp
  436c11:	or     BYTE PTR [esi+ebp*8-0x4b],0x13
  436c16:	add    cl,BYTE PTR [ecx+0x35]
  436c19:	jmp    DWORD PTR [ecx+ecx*8+0x42]
  436c1d:	or     ch,cl
  436c1f:	cli    
  436c20:	jl     0x436c04
  436c22:	fdivrp st(6),st
  436c24:	cmp    BYTE PTR [ebx-0x48c471d4],al
  436c2a:	in     eax,dx
  436c2b:	push   ebp
  436c2c:	sar    BYTE PTR [ecx+edx*4],0xfa
  436c30:	clc    
  436c31:	xor    dh,BYTE PTR [esi+ebx*4]
  436c34:	cmp    ecx,DWORD PTR [eax+0x2b9e00cd]
  436c3a:	out    dx,eax
  436c3b:	jb     0x436c5d
  436c3d:	std    
  436c3e:	sub    bh,BYTE PTR [esi-0x4]
  436c41:	mov    ah,0xc6
  436c43:	mov    dl,0xf0
  436c45:	adc    bh,bh
  436c47:	ins    BYTE PTR es:[edi],dx
  436c48:	xchg   edx,eax
  436c49:	sub    ebp,edi
  436c4b:	pop    esi
  436c4c:	jo     0x436c5d
  436c4e:	jne    0x436c3a
  436c50:	cli    
  436c51:	mov    esi,gs
  436c53:	(bad)  
  436c54:	rcr    BYTE PTR [eax],1
  436c56:	add    DWORD PTR [eax],0x2a
  436c59:	jge    0x436bde
  436c5b:	or     al,0x5d
  436c5d:	mov    esp,0x64f042
  436c62:	imul   DWORD PTR [ebx]
  436c64:	fs in  eax,dx
  436c66:	out    dx,al
  436c67:	jmp    FWORD PTR [edi-0x4beb7cbc]
  436c6d:	(bad)  
  436c6e:	jmp    0x421c:0x5d98ea3b
  436c75:	sbb    DWORD PTR [esp+eiz*4-0x70],ebx
  436c79:	icebp  
  436c7a:	xor    ebp,DWORD PTR [ebx]
  436c7c:	push   0xa37ecaa8
  436c81:	(bad)  
  436c82:	das    
  436c83:	sub    DWORD PTR [ecx-0x5b4012c3],0x11
  436c8a:	sti    
  436c8b:	jb     0x436ce1
  436c8d:	mov    esp,0x11e4c47a
  436c92:	fisttp DWORD PTR [ebx+0x1b136aa]
  436c98:	outs   dx,DWORD PTR ds:[esi]
  436c99:	inc    esp
  436c9a:	or     dl,bl
  436c9c:	add    BYTE PTR [eax+0x44],cl
  436c9f:	(bad)  [ecx+0x55878e92]
  436ca5:	sbb    eax,esp
  436ca7:	icebp  
  436ca8:	add    DWORD PTR [edx+0x7bfa6f36],ebx
  436cae:	inc    ebx
  436caf:	or     al,BYTE PTR [eax]
  436cb1:	add    al,0x3c
  436cb3:	ins    DWORD PTR es:[edi],dx
  436cb4:	clc    
  436cb5:	sub    eax,0x5810333
  436cba:	paddsw mm7,mm7
  436cbd:	pop    ds
  436cbe:	inc    ecx
  436cbf:	ins    DWORD PTR es:[edi],dx
  436cc0:	mov    al,0x1f
  436cc2:	inc    esp
  436cc3:	or     cl,BYTE PTR [ebx+0x147abc29]
  436cc9:	je     0x436d03
  436ccb:	or     BYTE PTR [ebx*2-0x7975fc45],0xe6
  436cd3:	jbe    0x436c5d
  436cd5:	cmp    bl,BYTE PTR [edx-0x4b6f7afb]
  436cdb:	shr    edi,0x9d
  436cde:	push   edi
  436cdf:	inc    ebp
  436ce0:	test   DWORD PTR [edx+eiz*4-0x5dd72837],0x528481c2
  436ceb:	loopne 0x436ce6
  436ced:	mov    cl,0x48
  436cef:	test   BYTE PTR [esi-0x38c4a3a4],bh
  436cf5:	enter  0x1ade,0x40
  436cf9:	push   cs
  436cfa:	xlat   BYTE PTR ds:[ebx]
  436cfb:	adc    eax,0x18d6ff62
  436d00:	add    DWORD PTR [eax],0xffffff89
  436d03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436d04:	(bad)  
  436d05:	test   bl,bh
  436d07:	sub    DWORD PTR [edx-0x7cc20d2b],ecx
  436d0d:	inc    ebx
  436d0e:	inc    edx
  436d0f:	cmp    al,0x2f
  436d11:	xor    eax,0xddef1c3
  436d16:	or     eax,0xcb85725e
  436d1b:	add    eax,0xe4952f84
  436d20:	jge    0x436d65
  436d22:	dec    esi
  436d23:	mov    eax,ds:0xc90d0eca
  436d28:	add    ebp,0xd
  436d2b:	fcomp  DWORD PTR [ebx-0x18]
  436d2e:	std    
  436d2f:	push   ebp
  436d30:	push   ss
  436d31:	xchg   DWORD PTR [edx-0x69],edi
  436d34:	add    BYTE PTR [esi+0x21],0x91
  436d38:	push   es
  436d39:	add    BYTE PTR [esi+0xbe05c19],al
  436d3f:	loopne 0x436d1f
  436d41:	add    dh,dh
  436d43:	leave  
  436d44:	bound  eax,QWORD PTR [ebx-0x7c8ed237]
  436d4a:	mov    BYTE PTR [ecx-0x33],0xc
  436d4e:	std    
  436d4f:	jns    0x436da1
  436d51:	and    dh,cl
  436d53:	inc    edx
  436d54:	pop    ecx
  436d55:	lock xor edi,DWORD PTR [ebx+0x7d034fb5]
  436d5c:	int    0x88
  436d5e:	or     ch,0xe0
  436d61:	add    eax,DWORD PTR [esi+0xbe242]
  436d67:	or     edi,DWORD PTR [ebp+0x1d]
  436d6a:	mov    dl,BYTE PTR [ebp+0x4a]
  436d6d:	enter  0x8d5,0x44
  436d71:	aam    0x43
  436d73:	push   ebx
  436d74:	mov    ebx,0x86e2d7fd
  436d79:	lahf   
  436d7a:	mov    ebx,0x3e12699
  436d7f:	cmp    edi,DWORD PTR [ebx-0xa3527fb]
  436d85:	neg    DWORD PTR [edi]
  436d87:	mov    ss,WORD PTR [eax-0x5f]
  436d8a:	add    ecx,DWORD PTR [edx-0x9]
  436d8d:	jnp    0x436dd1
  436d8f:	xor    edx,ebx
  436d91:	pop    eax
  436d92:	in     al,dx
  436d93:	mov    esi,0xdfe181
  436d98:	inc    ebx
  436d99:	loope  0x436d9e
  436d9b:	xchg   BYTE PTR [edx+0x52a5c07c],dl
  436da1:	jp     0x436d8b
  436da3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436da4:	push   edx
  436da5:	callw  0xc00e
  436da9:	or     al,0x64
  436dab:	retf   
  436dac:	mov    WORD PTR [eax],?
  436dae:	mov    ebp,eax
  436db0:	sub    bh,BYTE PTR [edx-0x21]
  436db3:	and    DWORD PTR [ebx-0x1e24094],edx
  436db9:	and    eax,0x88261f78
  436dbe:	jne    0x436dc9
  436dc0:	or     BYTE PTR [ecx+0xa32c587],0xd
  436dc7:	daa    
  436dc8:	inc    ebx
  436dc9:	or     ch,cl
  436dcb:	add    BYTE PTR [ebp+0x75b482e7],al
  436dd1:	sahf   
  436dd2:	sub    esp,0xe90a4285
  436dd8:	mov    esp,0x4cb2508a
  436ddd:	jne    0x436daa
  436ddf:	inc    esi
  436de0:	jno    0x436d7c
  436de2:	sbb    BYTE PTR [ecx-0x6542097b],ch
  436de8:	sar    DWORD PTR [esi+0x3f9a0545],cl
  436dee:	retf   0x8d9c
  436df1:	mov    edi,0xbf79c53d
  436df6:	inc    ebp
  436df7:	int    0x75
  436df9:	push   edi
  436dfa:	fcom   QWORD PTR [esi]
  436dfc:	adc    eax,0xc672d1bf
  436e01:	popa   
  436e02:	(bad)  
  436e03:	cmc    
  436e04:	adc    al,0xbf
  436e06:	fiadd  DWORD PTR [edx]
  436e08:	inc    ebp
  436e09:	mov    esi,0x615e62c1
  436e0e:	push   ss
  436e0f:	jb     0x436e52
  436e11:	popa   
  436e12:	sbb    dh,BYTE PTR [edx+0x29]
  436e15:	popa   
  436e16:	(bad)  
  436e17:	mov    bh,0xec
  436e19:	cmc    
  436e1a:	sar    BYTE PTR [eax-0xd2e0a11],cl
  436e20:	mov    esp,0xd6b6f6b1
  436e25:	mov    edi,0x6161bef9
  436e2a:	adc    ah,BYTE PTR [edx-0x33]
  436e2d:	mov    edi,0x8100cd45
  436e32:	xor    ebp,eax
  436e34:	jmp    0x6151:0xd20094d4
  436e3b:	sbb    dl,BYTE PTR [esi]
  436e3d:	mov    dl,BYTE PTR [edi+eax*1+0x2ae54400]
  436e44:	or     al,0x11
  436e46:	inc    eax
  436e47:	inc    esp
  436e48:	xor    ebx,DWORD PTR ds:0x945ecbba
  436e4e:	sbb    BYTE PTR [edx],0x0
  436e51:	imul   ebp,DWORD PTR [esi+0x40dffff1],0xae97000a
  436e5b:	icebp  
  436e5c:	(bad)  
  436e5d:	out    dx,eax
  436e5e:	inc    eax
  436e5f:	or     al,BYTE PTR [eax]
  436e61:	dec    ecx
  436e62:	scas   al,BYTE PTR es:[edi]
  436e63:	icebp  
  436e64:	call   ebp
  436e66:	aas    
  436e67:	sub    eax,0x2d3fd900
  436e6c:	add    BYTE PTR [edi+0x68000a40],ch
  436e72:	scas   al,BYTE PTR es:[edi]
  436e73:	icebp  
  436e74:	(bad)  
  436e75:	cmp    dh,BYTE PTR [eax+esi*1+0x0]
  436e79:	ds je  0x436eac
  436e7c:	add    BYTE PTR [edi-0x77fff5c0],ch
  436e82:	scas   al,BYTE PTR es:[edi]
  436e83:	icebp  
  436e84:	dec    esi
  436e86:	jae    0x436eb8
  436e88:	add    BYTE PTR [edx+0x75],al
  436e8b:	xor    BYTE PTR [eax],al
  436e8d:	outs   dx,DWORD PTR ds:[esi]
  436e8e:	inc    eax
  436e8f:	or     al,BYTE PTR [eax]
  436e91:	push   0xfff1b0
  436e96:	inc    ebx
  436e97:	mov    WORD PTR [eax],?
  436e99:	add    BYTE PTR [edi-0x74],al
  436e9c:	xor    BYTE PTR [eax],al
  436e9e:	outs   dx,DWORD PTR ds:[esi]
  436e9f:	inc    eax
  436ea0:	or     al,BYTE PTR [eax]
  436ea2:	dec    eax
  436ea3:	mov    al,0xf1
  436ea5:	jmp    FWORD PTR [esi]
  436ea7:	lea    esi,[eax]
  436ea9:	add    BYTE PTR [edx-0x73],ah
  436eac:	xor    BYTE PTR [eax],al
  436eae:	das    
  436eaf:	inc    eax
  436eb0:	or     al,BYTE PTR [eax]
  436eb2:	call   0xd0436066
  436eb7:	jmp    FWORD PTR [edi]
  436eb9:	add    BYTE PTR [esi-0x79c1347b],al
  436ebf:	sbb    DWORD PTR [ebx],ecx
  436ec1:	add    BYTE PTR [esi+0x9f97abc],al
  436ec7:	xchg   BYTE PTR ds:0x3d798640,bh
  436ecd:	inc    eax
  436ece:	xchg   BYTE PTR [ecx],bl
  436ed0:	or     eax,DWORD PTR [eax]
  436ed2:	xchg   BYTE PTR [ebx+edi*2+0x3dffe9f9],bl
  436ed9:	inc    eax
  436eda:	xchg   bl,ch
  436edc:	cmp    eax,0xb198640
  436ee1:	add    BYTE PTR [esi-0x36068484],al
  436ee7:	ret    
  436ee8:	mov    ebx,0xbbf7863e
  436eed:	xchg   BYTE PTR ds:[ecx],bl
  436ef0:	or     eax,DWORD PTR [eax]
  436ef2:	xchg   BYTE PTR [ebx+edi*2-0x7],bl
  436ef6:	test   eax,0x3e52a8
  436efb:	xchg   BYTE PTR [edx+edx*2+0xb19863e],ah
  436f02:	add    BYTE PTR [esi-0x760684c4],al
  436f08:	push   0xffffff95
  436f0a:	xchg   BYTE PTR ds:[esi-0x6b],ah
  436f0e:	xchg   BYTE PTR ds:[ecx],bl
  436f11:	or     eax,DWORD PTR [eax]
  436f13:	xchg   BYTE PTR [esp+edi*2],bl
  436f16:	stc    
  436f17:	imul   edi,DWORD PTR [eax-0x6a],0x9674863e
  436f1e:	xchg   BYTE PTR ds:[ecx],bl
  436f21:	or     eax,DWORD PTR [eax]
  436f23:	xchg   BYTE PTR [ecx],bl
  436f25:	or     eax,DWORD PTR [eax]
  436f27:	xchg   BYTE PTR [ecx],bl
  436f29:	or     eax,DWORD PTR [eax]
  436f2b:	xchg   BYTE PTR [esi-0x79],al
  436f2e:	in     al,dx
  436f2f:	popa   
  436f30:	mov    ds:0x42d44f62,al
  436f35:	das    
  436f36:	pop    esp
  436f37:	push   es
  436f38:	push   edx
  436f39:	loope  0x436f3e
  436f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436f3c:	push   ecx
  436f3d:	loope  0x436f42
  436f3f:	mov    edx,0xae03e151
  436f44:	push   ecx
  436f45:	loope  0x436f4a
  436f47:	mov    dl,0x51
  436f49:	loope  0x436f4e
  436f4b:	push   0x51
  436f4d:	loope  0x436f52
  436f4f:	sbb    dl,BYTE PTR [ecx-0x1f]
  436f52:	add    edi,esi
  436f54:	push   eax
  436f55:	loope  0x436f5a
  436f57:	add    dl,BYTE PTR [ecx-0x1f]
  436f5a:	add    eax,DWORD PTR [esi+0x51]
  436f5d:	loope  0x436f62
  436f5f:	add    BYTE PTR [edx-0x71fc1eaf],bl
  436f65:	push   ecx
  436f66:	loope  0x436f6b
  436f68:	xchg   edx,eax
  436f69:	push   ecx
  436f6a:	loope  0x436f6f
  436f6c:	dec    edx
  436f6d:	push   ecx
  436f6e:	loope  0x436f73
  436f70:	cmp    dl,BYTE PTR [ecx-0x1f]
  436f73:	add    ebx,DWORD PTR [esi]
  436f75:	push   ecx
  436f76:	loope  0x436f7b
  436f78:	jno    0x436fc2
  436f7a:	loope  0x436f7f
  436f7c:	push   cx
  436f7e:	loope  0x436f83
  436f80:	jp     0x436fd3
  436f82:	loope  0x436f87
  436f84:	outs   dx,BYTE PTR ds:[esi]
  436f85:	push   ecx
  436f86:	loope  0x436f8b
  436f88:	jb     0x436fdb
  436f8a:	loope  0x436f8f
  436f8c:	stos   BYTE PTR es:[edi],al
  436f8d:	xor    esp,ecx
  436f8f:	add    ebx,edx
  436f91:	xor    esp,ecx
  436f93:	add    edi,DWORD PTR [esi-0x3dfc1ecd]
  436f99:	xor    esp,ecx
  436f9b:	add    eax,DWORD PTR [esi+0x5a03e133]
  436fa1:	xor    esp,ecx
  436fa3:	add    ecx,DWORD PTR [esi+0x33]
  436fa6:	loope  0x436fab
  436fa8:	push   edx
  436fa9:	xor    esp,ecx
  436fab:	add    ecx,DWORD PTR [edx-0x7a16f5cd]
  436fb1:	pop    esi
  436fb2:	sbb    ecx,ebp
  436fb4:	test   DWORD PTR [edx+0x19],ebp
  436fb7:	jmp    0xe95cd641
  436fbc:	test   DWORD PTR [edx],esp
  436fbe:	sbb    ch,cl
  436fc0:	test   esi,edi
  436fc2:	sbb    ecx,ebp
  436fc4:	add    BYTE PTR [ebp-0x7a16e606],al
  436fca:	neg    BYTE PTR [ecx]
  436fcc:	jmp    0xe95d9656
  436fd1:	test   DWORD PTR [esi],edi
  436fd3:	sbb    ecx,ebp
  436fd5:	test   esp,esp
  436fd7:	sbb    cl,ch
  436fd9:	test   DWORD PTR [esi+0x19],eax
  436fdc:	jmp    0xe95d7266
  436fe1:	test   esi,ebx
  436fe3:	sbb    ecx,ebp
  436fe5:	test   edx,ebx
  436fe7:	sbb    ecx,ebp
  436fe9:	test   esi,edx
  436feb:	sbb    ecx,ebp
  436fed:	test   DWORD PTR [esi],eax
  436fef:	sbb    ch,cl
  436ff1:	test   DWORD PTR [esi],ebx
  436ff3:	sbb    ch,cl
  436ff5:	test   esp,eax
  436ff7:	sbb    cl,ch
  436ff9:	test   DWORD PTR [esi],esp
  436ffb:	sbb    ch,cl
  436ffd:	test   edx,esp
  436fff:	sbb    ecx,ebp
  437001:	test   DWORD PTR [esi-0x457a16e7],edi
  437007:	sbb    ecx,ebp
  437009:	test   DWORD PTR [esi-0x197a16e7],esi
  43700f:	sbb    ecx,ebp
  437011:	test   esi,edi
  437013:	sbb    ecx,ebp
  437015:	test   DWORD PTR [ecx+ebx*1+0x1a0685e9],esp
  43701c:	jmp    0xe95d32a6
  437021:	test   DWORD PTR [esi-0x657a16e6],ebx
  437027:	sbb    al,BYTE PTR [eax]
  437029:	add    BYTE PTR [edi+0x45],bl
  43702c:	jbe    0x43703e
  43702e:	das    
  43702f:	inc    ebp
  437030:	xchg   BYTE PTR [eax],dl
  437032:	das    
  437033:	inc    ebp
  437034:	scas   al,BYTE PTR es:[edi]
  437035:	adc    BYTE PTR [edi],bl
  437037:	inc    ebp
  437038:	dec    esp
  437039:	adc    DWORD PTR [edi],ebx
  43703b:	inc    ebp
  43703c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43703d:	adc    BYTE PTR [edi],ch
  43703f:	inc    ebp
  437040:	sbb    dl,BYTE PTR [ecx]
  437042:	das    
  437043:	inc    ebp
  437044:	(bad)  
  437045:	adc    BYTE PTR [edi],bl
  437047:	inc    ebp
  437048:	add    dl,BYTE PTR [ecx]
  43704a:	pop    ds
  43704b:	inc    ebp
  43704c:	push   es
  43704d:	adc    edi,ebp
  43704f:	inc    esp
  437050:	or     dl,BYTE PTR [ecx]
  437052:	out    dx,eax
  437053:	inc    esp
  437054:	out    dx,al
  437055:	adc    bh,bl
  437057:	inc    esp
  437058:	repnz adc bh,bl
  43705b:	inc    esp
  43705c:	not    BYTE PTR [eax]
  43705e:	out    dx,eax
  43705f:	inc    esp
  437060:	(bad)  
  437061:	adc    bh,ch
  437063:	inc    esp
  437064:	retf   0xdf10
  437067:	inc    esp
  437068:	scas   al,BYTE PTR es:[edi]
  437069:	adc    bh,bl
  43706b:	inc    esp
  43706c:	mov    dl,0x10
  43706e:	scas   eax,DWORD PTR es:[edi]
  43706f:	inc    esp
  437070:	mov    dh,0x10
  437072:	scas   eax,DWORD PTR es:[edi]
  437073:	inc    esp
  437074:	mov    edx,0x9e449f10
  437079:	adc    BYTE PTR [edi-0x50ef5dbc],bl
  43707f:	inc    esp
  437080:	cmp    dl,BYTE PTR [eax]
  437082:	scas   eax,DWORD PTR es:[edi]
  437083:	inc    esp
  437084:	push   ds
  437085:	adc    BYTE PTR [edi-0x60efddbc],bl
  43708b:	inc    esp
  43708c:	adc    BYTE PTR es:[eax],al
  43708f:	outs   dx,DWORD PTR ds:[esi]
  437090:	inc    esp
  437091:	sub    dl,BYTE PTR [eax]
  437093:	outs   dx,DWORD PTR ds:[esi]
  437094:	inc    esp
  437095:	push   cs
  437096:	adc    BYTE PTR [edi+0x44],bl
  437099:	adc    dl,BYTE PTR [eax]
  43709b:	pop    edi
  43709c:	inc    esp
  43709d:	push   ss
  43709e:	adc    BYTE PTR [edi+0x44],ch
  4370a1:	sbb    dl,BYTE PTR [eax]
  4370a3:	xchg   BYTE PTR [ecx],ch
  4370a5:	or     ecx,DWORD PTR [esi+esi*2]
  4370a8:	sub    DWORD PTR [ebx],ecx
  4370aa:	or     BYTE PTR [esi+0x29],dh
  4370ad:	or     eax,DWORD PTR [esi+edx*4]
  4370b0:	sub    DWORD PTR [ebx],ecx
  4370b2:	add    BYTE PTR [esi-0x7e03f4d7],dl
  4370b8:	sub    DWORD PTR [ebx],ecx
  4370ba:	clc    
  4370bb:	jns    0x4370e6
  4370bd:	or     esi,esp
  4370bf:	xchg   ecx,eax
  4370c0:	sub    DWORD PTR [ebx],ecx
  4370c2:	lock mov DWORD PTR [ecx],ebp
  4370c5:	or     ebp,esp
  4370c7:	sub    DWORD PTR [ecx],0x29770a0b
  4370cd:	or     edx,esp
  4370cf:	xchg   ecx,eax
  4370d0:	sub    DWORD PTR [ebx],ecx
  4370d2:	stos   BYTE PTR es:[edi],al
  4370d3:	xchg   esi,eax
  4370d4:	sub    DWORD PTR [ebx],ecx
  4370d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4370d7:	xchg   esi,eax
  4370d8:	sub    DWORD PTR [ebx],ecx
  4370da:	mov    ecx,0xec0b2991
  4370df:	jns    0x43710a
  4370e1:	or     edi,edi
  4370e3:	ja     0x43710e
  4370e5:	or     esp,DWORD PTR [edi+esi*2+0x79cc0b29]
  4370ec:	sub    DWORD PTR [ebx],ecx
  4370ee:	sub    DWORD PTR [esi+0xc00b29],edx
  4370f4:	mov    DWORD PTR [ecx],ebp
  4370f6:	or     edi,DWORD PTR [ecx+eax*4+0x79b80b29]
  4370fd:	sub    DWORD PTR [ebx],ecx
  4370ff:	mov    ah,0x91
  437101:	sub    DWORD PTR [ebx],ecx
  437103:	mov    ah,0x89
  437105:	sub    DWORD PTR [ebx],ecx
  437107:	mov    al,0x81
  437109:	sub    DWORD PTR [ebx],ecx
  43710b:	lods   al,BYTE PTR ds:[esi]
  43710c:	jns    0x437137
  43710e:	or     ebp,DWORD PTR [eax-0x5bf4d66f]
  437114:	mov    DWORD PTR [ecx],ebp
  437116:	or     esp,DWORD PTR [eax-0x63f4d67f]
  43711c:	jns    0x437160
  43711e:	loope  0x437123
  437120:	dec    BYTE PTR [esi-0x1f]
  437123:	add    esi,edx
  437125:	dec    esi
  437126:	loope  0x43712b
  437128:	test   BYTE PTR [esi-0x1f],0x3
  43712c:	cli    
  43712d:	dec    esi
  43712e:	loope  0x437133
  437130:	push   cs
  437131:	dec    edi
  437132:	loope  0x437137
  437134:	add    cl,BYTE PTR [edi-0x1f]
  437137:	add    eax,DWORD PTR [esi]
  437139:	dec    edi
  43713a:	loope  0x43713f
  43713c:	stos   BYTE PTR es:[edi],al
  43713d:	dec    edi
  43713e:	loope  0x437143
  437140:	sahf   
  437141:	dec    edi
  437142:	loope  0x437147
  437144:	xor    ecx,DWORD PTR [edi-0x1f]
  437147:	add    esp,DWORD PTR [ecx+esi*1]
  43714a:	loope  0x43714f
  43714c:	cmp    dh,BYTE PTR [ecx]
  43714e:	loope  0x437153
  437150:	iret   
  437151:	dec    esi
  437152:	loope  0x437157
  437154:	push   esi
  437155:	dec    edi
  437156:	loope  0x43715b
  437158:	add    BYTE PTR [edx+0x4f],al
  43715b:	loope  0x437160
  43715d:	ds dec edi
  43715f:	loope  0x437164
  437161:	dec    edx
  437162:	dec    edi
  437163:	loope  0x437168
  437165:	inc    esi
  437166:	dec    edi
  437167:	loope  0x43716c
  437169:	xchg   edx,eax
  43716a:	dec    edi
  43716b:	loope  0x437170
  43716d:	mov    cs,WORD PTR [edi-0x1f]
  437170:	add    edi,DWORD PTR [edx+0x4f]
  437173:	loope  0x437178
  437175:	jbe    0x4371c6
  437177:	loope  0x43717c
  437179:	bound  ecx,QWORD PTR [edi-0x1f]
  43717c:	add    ebx,DWORD PTR [esi+0x4f]
  43717f:	loope  0x437184
  437181:	dec    esp
  437182:	xor    ecx,esp
  437184:	add    edx,DWORD PTR [esi+0x4f]
  437187:	loope  0x43718c
  437189:	bound  ecx,QWORD PTR [edi-0x1f]
  43718c:	add    ebx,DWORD PTR [esi+0x4f]
  43718f:	loope  0x437194
  437191:	stos   BYTE PTR es:[edi],al
  437192:	dec    ebp
  437193:	loope  0x437198
  437195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437196:	dec    ebp
  437197:	or     ch,cl
  437199:	test   DWORD PTR [esi],edi
  43719b:	(bad)  
  43719c:	call   0xe942ac26
  4371a1:	test   DWORD PTR [esi],esi
  4371a3:	(bad)  
  4371a4:	call   0xe942a42e
  4371a9:	test   DWORD PTR [esi-0x1],ecx
  4371ac:	call   0xe95d5136
  4371b1:	test   DWORD PTR [esi-0x1],eax
  4371b4:	call   0xe942b43e
  4371b9:	test   DWORD PTR [esi],ebx
  4371bb:	add    cl,ch
  4371bd:	add    BYTE PTR [ebp-0x7a16ffe6],al
  4371c3:	push   ss
  4371c4:	add    cl,ch
  4371c6:	test   DWORD PTR [esi+0x7285e91a],eax
  4371cc:	sbb    ch,cl
  4371ce:	test   DWORD PTR [esi+0x1a],ebx
  4371d1:	jmp    0xe95dfc5b
  4371d6:	test   DWORD PTR [edx],esp
  4371d8:	add    cl,ch
  4371da:	test   esi,edi
  4371dc:	(bad)  
  4371dd:	call   0xe9436c67
  4371e2:	test   esi,esi
  4371e4:	(bad)  
  4371e5:	call   0xe943686f
  4371ea:	test   DWORD PTR [esi-0x1],ecx
  4371ed:	call   0xe9437c77
  4371f2:	test   DWORD PTR [esi],eax
  4371f4:	add    cl,ch
  4371f6:	test   DWORD PTR [edx],eax
  4371f8:	add    cl,ch
  4371fa:	test   esi,ebx
  4371fc:	(bad)  
  4371fd:	call   0xe9434c87
  437202:	test   esi,edx
  437204:	(bad)  
  437205:	call   0xe943488f
  43720a:	test   edx,edx
  43720c:	(bad)  
  43720d:	call   0x436097
  437212:	outs   dx,DWORD PTR ds:[esi]
  437213:	inc    ecx
  437214:	mov    ds:0xa6416f0e,al
  437219:	push   cs
  43721a:	pop    edi
  43721b:	inc    ecx
  43721c:	stos   BYTE PTR es:[edi],al
  43721d:	push   cs
  43721e:	pop    edi
  43721f:	inc    ecx
  437220:	mov    cs,WORD PTR [esi]
  437222:	add    BYTE PTR [edi+0x41],ch
  437225:	xchg   edx,eax
  437226:	push   cs
  437227:	outs   dx,DWORD PTR ds:[esi]
  437228:	inc    ecx
  437229:	jmp    0x5f0e:0xce415f0e
  437230:	inc    ecx
  437231:	ror    BYTE PTR [esi],cl
  437233:	das    
  437234:	inc    ecx
  437235:	(bad)  
  437236:	push   cs
  437237:	das    
  437238:	inc    ecx
  437239:	fimul  DWORD PTR [esi]
  43723b:	pop    ds
  43723c:	inc    ecx
  43723d:	mov    esi,0xc2411f0e
  437242:	push   cs
  437243:	das    
  437244:	inc    ecx
  437245:	(bad)  
  437246:	push   cs
  437247:	das    
  437248:	inc    ecx
  437249:	aad    0xe
  43724b:	pop    ds
  43724c:	inc    ecx
  43724d:	(bad)  [esi]
  43724f:	pop    ds
  437250:	inc    ecx
  437251:	mov    ecx,0x6640ef0f
  437256:	push   cs
  437257:	out    dx,eax
  437258:	inc    eax
  437259:	mov    WORD PTR [edi],cs
  43725b:	fild   WORD PTR [eax+0x70]
  43725e:	pandn  mm0,QWORD PTR [eax-0x53]
  437262:	push   cs
  437263:	out    dx,eax
  437264:	inc    eax
  437265:	dec    ebx
  437266:	pxor   mm0,QWORD PTR [eax+0x5e]
  43726a:	pandn  mm0,QWORD PTR [eax+0x3e]
  43726e:	push   cs
  43726f:	fild   WORD PTR [eax-0x67]
  437272:	imul   eax,DWORD PTR [eax+0x46]
  437276:	push   cs
  437277:	scas   eax,DWORD PTR es:[edi]
  437278:	inc    eax
  437279:	dec    edx
  43727a:	push   cs
  43727b:	lahf   
  43727c:	inc    eax
  43727d:	dec    edx
  43727e:	push   cs
  43727f:	lahf   
  437280:	inc    eax
  437281:	bound  ecx,QWORD PTR [esi]
  437283:	scas   eax,DWORD PTR es:[edi]
  437284:	inc    eax
  437285:	ss push cs
  437287:	add    BYTE PTR [edi-0x79f1d5c0],ch
  43728d:	sub    ecx,DWORD PTR [ebx]
  43728f:	sbb    al,0x78
  437291:	sub    ecx,DWORD PTR [ebx]
  437293:	sbb    BYTE PTR [eax-0x77ebf4d7],dl
  437299:	sub    DWORD PTR [ebx],ecx
  43729b:	and    eax,0x210b2981
  4372a0:	jns    0x4372cb
  4372a2:	or     ebx,DWORD PTR [eax]
  4372a4:	nop
  4372a5:	sub    DWORD PTR [ebx],ecx
  4372a7:	adc    al,0x88
  4372a9:	sub    DWORD PTR [ebx],ecx
  4372ab:	xchg   BYTE PTR [ecx+0x29],bh
  4372ae:	or     edi,DWORD PTR [ecx+esi*2-0x61b0f4d7]
  4372b5:	sub    DWORD PTR [ebx],ecx
  4372b7:	test   eax,0x260b299e
  4372bc:	(bad)
  4372c0:	(bad)
  4372c4:	jg     0x4372ef
  4372c6:	or     ebp,DWORD PTR [edi]
  4372c8:	jl     0x4372f3
  4372ca:	or     esi,esp
  4372cc:	sub    DWORD PTR [ecx],0xb
  4372cf:	lock jnp 0x4372fb
  4372d2:	or     ebp,esp
  4372d4:	xchg   ebx,eax
  4372d5:	sub    DWORD PTR [ebx],ecx
  4372d7:	call   0xe44e9c67
  4372dc:	sub    DWORD PTR [ecx],0xb
  4372df:	loopne 0x43735c
  4372e1:	sub    DWORD PTR [ebx],ecx
  4372e3:	fcom   QWORD PTR [ebx-0x7427f4d7]
  4372e9:	sub    DWORD PTR [ebx],ecx
  4372eb:	adc    BYTE PTR [eax],al
  4372ed:	sub    BYTE PTR [ecx],0xb
  4372f0:	or     al,0x78
  4372f2:	sub    DWORD PTR [ebx],ecx
  4372f4:	ret    0x2991
  4372f7:	or     ecx,eax
  4372f9:	mov    ebp,DWORD PTR [ecx]
  4372fb:	or     eax,eax
  4372fd:	sub    DWORD PTR [ecx],0xb
  437300:	mov    esp,0xb80b297b
  437305:	xchg   ebx,eax
  437306:	inc    edx
  437307:	loope  0x43730c
  437309:	ror    BYTE PTR [ebp-0x1f],cl
  43730c:	add    ecx,DWORD PTR [esp+ecx*2]
  43730f:	loope  0x437314
  437311:	fimul  DWORD PTR [ebp-0x1f]
  437314:	add    esi,DWORD PTR [ebx+0x35]
  437317:	loope  0x43731c
  437319:	mov    ah,0x34
  43731b:	loope  0x437320
  43731d:	es dec ebp
  43731f:	loope  0x437324
  437321:	or     cl,BYTE PTR [ebp-0x1f]
  437324:	add    esi,DWORD PTR [edx-0x4ffc1ece]
  43732a:	xor    ah,cl
  43732c:	add    esi,esi
  43732e:	dec    esp
  43732f:	loope  0x437334
  437331:	cli    
  437332:	dec    esp
  437333:	loope  0x437338
  437335:	push   cs
  437336:	dec    ebp
  437337:	loope  0x43733c
  437339:	add    cl,BYTE PTR [ebp-0x1f]
  43733c:	add    eax,DWORD PTR [esi]
  43733e:	dec    ebp
  43733f:	loope  0x437344
  437341:	stos   BYTE PTR es:[edi],al
  437342:	dec    ebp
  437343:	loope  0x437348
  437345:	out    dx,al
  437346:	xor    ecx,esp
  437348:	add    eax,DWORD PTR [ebp+0x32]
  43734b:	loope  0x437350
  43734d:	xor    BYTE PTR [edx],dh
  43734f:	loope  0x437354
  437351:	add    BYTE PTR [edi],cl
  437353:	xor    ah,cl
  437355:	add    ebx,DWORD PTR [esi+0x4d]
  437358:	loope  0x43735d
  43735a:	push   edx
  43735b:	dec    ebp
  43735c:	loope  0x437361
  43735e:	sub    al,0x4b
  437360:	loope  0x437365
  437362:	dec    edx
  437363:	dec    ebp
  437364:	loope  0x437369
  437366:	ds dec ebp
  437368:	loope  0x43736d
  43736a:	xor    cl,BYTE PTR [ebp-0x1f]
  43736d:	add    esi,DWORD PTR [esi]
  43736f:	dec    ebp
  437370:	loope  0x437375
  437372:	cmp    cl,BYTE PTR [ebp-0x1f]
  437375:	add    esp,esp
  437377:	dec    edx
  437378:	loope  0x43737d
  43737a:	inc    edx
  43737b:	dec    ebp
  43737c:	loope  0x437381
  43737e:	or     al,0x4b
  437380:	or     ch,cl
  437382:	test   DWORD PTR [esi-0x3],ebp
  437385:	call   0xe940ce0f
  43738a:	test   esp,ecx
  43738c:	(bad)  
  43738d:	call   0xe940d617
  437392:	test   DWORD PTR [esi],edi
  437394:	std    
  437395:	call   0xe940ae1f
  43739a:	test   DWORD PTR [esi],ebp
  43739c:	std    
  43739d:	call   0xe940a627
  4373a2:	test   DWORD PTR [esi-0x3],eax
  4373a5:	call   0xe940be2f
  4373aa:	test   DWORD PTR [esi],edi
  4373ac:	std    
  4373ad:	call   0xe9593937
  4373b2:	test   DWORD PTR [esi],edx
  4373b4:	(bad)  
  4373b5:	call   0xfe5df8ba
  4373ba:	call   0xe9418244
  4373bf:	test   DWORD PTR [edx],edx
  4373c1:	(bad)  
  4373c2:	call   0xe9419a4c
  4373c7:	test   DWORD PTR [edx],ebp
  4373c9:	(bad)  
  4373ca:	call   0xe9419254
  4373cf:	test   DWORD PTR [edx+0x0],ebp
  4373d2:	jmp    0xe943d25c
  4373d7:	test   DWORD PTR [edx+0x0],esp
  4373da:	jmp    0xe943aa64
  4373df:	test   DWORD PTR [edi+edi*8-0x18],ebx
  4373e3:	test   DWORD PTR [eax-0x1],edx
  4373e6:	call   0xe942c870
  4373eb:	test   DWORD PTR [eax-0x1],ebp
  4373ee:	call   0xe9417678
  4373f3:	test   esi,edx
  4373f5:	std    
  4373f6:	call   0x414e80
  4373fb:	scas   eax,DWORD PTR es:[edi]
  4373fc:	inc    ebp
  4373fd:	mov    dh,0xc
  4373ff:	lahf   
  437400:	inc    ebp
  437401:	mov    edx,0x9e459f0c
  437406:	or     al,0xaf
  437408:	inc    ebp
  437409:	mov    ds:0xa645af0c,al
  43740e:	or     al,0x9f
  437410:	inc    ebp
  437411:	mov    edx,0x9e459f0c
  437416:	or     al,0x6f
  437418:	inc    ebp
  437419:	mov    ds:0x456f000c,al
  43741e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43741f:	or     al,0x5f
  437421:	inc    ebp
  437422:	stos   BYTE PTR es:[edi],al
  437423:	or     al,0x5f
  437425:	inc    ebp
  437426:	mov    cs,WORD PTR [edi+ebp*2]
  437429:	inc    ebp
  43742a:	cld    
  43742b:	push   cs
  43742c:	outs   dx,DWORD PTR ds:[esi]
  43742d:	inc    ebp
  43742e:	loopne 0x43743e
  437430:	pop    edi
  437431:	inc    ebp
  437432:	scas   al,BYTE PTR es:[edi]
  437433:	adc    eax,0xee8455f
  437438:	das    
  437439:	inc    ebp
  43743a:	aad    0x15
  43743c:	das    
  43743d:	inc    ebp
  43743e:	ror    BYTE PTR [esi],1
  437440:	pop    ds
  437441:	inc    ebp
  437442:	aam    0xe
  437444:	pop    ds
  437445:	inc    ebp
  437446:	fmul   DWORD PTR [esi]
  437448:	das    
  437449:	inc    ebp
  43744a:	fmul   QWORD PTR [esi]
  43744c:	das    
  43744d:	inc    ebp
  43744e:	ror    BYTE PTR [esi],0x1f
  437451:	inc    ebp
  437452:	push   0xc
  437454:	pop    ds
  437455:	inc    ebp
  437456:	dec    esi
  437457:	or     al,0xef
  437459:	inc    esp
  43745a:	push   edx
  43745b:	or     al,0xef
  43745d:	inc    esp
  43745e:	push   esi
  43745f:	or     al,0xdf
  437461:	inc    esp
  437462:	pop    edx
  437463:	or     al,0xdf
  437465:	inc    esp
  437466:	ds or  al,0xef
  437469:	inc    esp
  43746a:	inc    edx
  43746b:	or     al,0xef
  43746d:	inc    esp
  43746e:	inc    esi
  43746f:	or     al,0xdf
  437471:	inc    esp
  437472:	dec    edx
  437473:	or     al,0x86
  437475:	sub    ecx,DWORD PTR [ebx]
  437477:	cmp    al,0x92
  437479:	sub    ecx,DWORD PTR [ebx]
  43747b:	cmp    BYTE PTR [edx+0x340b2b],cl
  437481:	sub    BYTE PTR [ebx],0xb
  437484:	xor    BYTE PTR [edx+0x2b],bh
  437487:	or     ebp,DWORD PTR [edx+edx*4]
  43748a:	sub    ecx,DWORD PTR [ebx]
  43748c:	sub    BYTE PTR [edx-0x7ddbf4d5],cl
  437492:	sub    ecx,DWORD PTR [ebx]
  437494:	and    BYTE PTR [edx+0x2b],bh
  437497:	or     ebx,DWORD PTR [edx+edx*4]
  43749a:	sub    DWORD PTR [ebx],ecx
  43749c:	sbb    BYTE PTR [edx-0x7debf4d7],cl
  4374a2:	sub    DWORD PTR [ebx],ecx
  4374a4:	adc    BYTE PTR [edx+0x29],bh
  4374a7:	or     ecx,DWORD PTR [edx+edx*4]
  4374aa:	sub    DWORD PTR [ebx],ecx
  4374ac:	or     BYTE PTR [edx-0x7dfbf4d7],cl
  4374b2:	sub    DWORD PTR [ebx],ecx
  4374b4:	add    BYTE PTR [edx+0x29],bh
  4374b7:	or     edi,esp
  4374b9:	lea    ebp,[ecx]
  4374bb:	or     edi,eax
  4374bd:	lea    ebp,[ecx]
  4374bf:	or     esi,esp
  4374c1:	jge    0x4374ec
  4374c3:	or     esi,eax
  4374c5:	jge    0x4374f0
  4374c7:	or     ebp,esp
  4374c9:	lea    ebp,[ecx]
  4374cb:	or     ebp,eax
  4374cd:	lea    ebp,[ecx]
  4374cf:	or     esp,esp
  4374d1:	jge    0x4374fc
  4374d3:	or     esp,eax
  4374d5:	jge    0x437500
  4374d7:	or     ebx,esp
  4374d9:	lea    ebp,[ecx]
  4374db:	or     ebx,eax
  4374dd:	lea    ebp,[ecx]
  4374df:	or     edx,esp
  4374e1:	jge    0x43750c
  4374e3:	or     edx,eax
  4374e5:	add    BYTE PTR [ebp+0x29],bh
  4374e8:	or     ecx,esp
  4374ea:	lea    ebp,[ecx]
  4374ec:	or     ecx,eax
  4374ee:	lea    eax,[edx-0x1f]
  4374f1:	add    ecx,edx
  4374f3:	dec    ebx
  4374f4:	loope  0x4374f9
  4374f6:	(bad)  
  4374f7:	dec    ebx
  4374f8:	loope  0x4374fd
  4374fa:	add    cl,BYTE PTR [ecx+eiz*8+0x3]
  4374fe:	dec    BYTE PTR [ebx-0x1f]
  437501:	add    edi,edx
  437503:	dec    ebx
  437504:	loope  0x437509
  437506:	ror    DWORD PTR [ebx-0x1f],0x3
  43750a:	lds    ecx,FWORD PTR [ebx-0x1f]
  43750d:	add    ebp,esi
  43750f:	dec    ebx
  437510:	loope  0x437515
  437512:	jmp    0xe14b:0xe603e14b
  437519:	add    ecx,DWORD PTR [edx+esi*1]
  43751c:	loope  0x437521
  43751e:	xchg   ebp,eax
  43751f:	xor    ecx,esp
  437521:	add    edx,DWORD PTR [edx]
  437523:	xor    ecx,esp
  437525:	add    edx,DWORD PTR [esi]
  437527:	dec    ebx
  437528:	loope  0x43752d
  43752a:	adc    cl,BYTE PTR [ebx-0x1f]
  43752d:	add    ecx,DWORD PTR [esi]
  43752f:	dec    ebx
  437530:	loope  0x437535
  437532:	cli    
  437533:	dec    edx
  437534:	loope  0x437539
  437536:	push   es
  437537:	dec    ebx
  437538:	loope  0x43753d
  43753a:	ret    0xe14b
  43753d:	add    esp,DWORD PTR [eax*2+0x455003e1]
  437544:	loope  0x437549
  437546:	mov    dh,0x4b
  437548:	loope  0x43754d
  43754a:	add    BYTE PTR [edx-0x51fc1eb5],dh
  437550:	dec    ebx
  437551:	loope  0x437556
  437553:	stos   BYTE PTR es:[edi],al
  437554:	dec    ebx
  437555:	loope  0x43755a
  437557:	(bad)  
  437558:	dec    edx
  437559:	loope  0x43755e
  43755b:	xor    cl,BYTE PTR [ebx-0x1f]
  43755e:	add    eax,DWORD PTR [ecx]
  437560:	inc    esi
  437561:	loope  0x437566
  437563:	add    eax,0x6903e146
  437568:	inc    esi
  437569:	or     ch,cl
  43756b:	test   DWORD PTR [ebx-0x457a1702],ebx
  437571:	add    ch,cl
  437573:	test   DWORD PTR [esi-0x4d7a16fe],ebp
  437579:	add    ch,cl
  43757b:	test   esi,eax
  43757d:	add    ch,cl
  43757f:	test   edx,ecx
  437581:	add    ch,cl
  437583:	test   DWORD PTR [esi-0x3d7a16fe],edi
  437589:	add    ch,cl
  43758b:	test   DWORD PTR [esi-0x657a16fd],edx
  437591:	add    ebp,ecx
  437593:	test   DWORD PTR [esi+0x6285e903],ecx
  437599:	add    ebp,ecx
  43759b:	test   DWORD PTR [esi],esi
  43759d:	add    ebp,ecx
  43759f:	test   DWORD PTR [edx],edi
  4375a1:	add    ebp,ecx
  4375a3:	test   DWORD PTR [esi],ebp
  4375a5:	add    ebp,ecx
  4375a7:	test   DWORD PTR [edx],esi
  4375a9:	add    ebp,ecx
  4375ab:	test   DWORD PTR [esi+0x3],eax
  4375ae:	jmp    0x38dfab3
  4375b3:	jmp    0xe946b43d
  4375b8:	test   DWORD PTR [edx+0x3],eax
  4375bb:	jmp    0xe9478c45
  4375c0:	test   DWORD PTR [edx],ebx
  4375c2:	add    al,0xe9
  4375c4:	test   DWORD PTR [esi],ecx
  4375c6:	add    al,0xe9
  4375c8:	test   DWORD PTR [edx],edx
  4375ca:	add    al,0xe9
  4375cc:	test   DWORD PTR [esi],esp
  4375ce:	add    al,0xe9
  4375d0:	test   DWORD PTR [edx],ebp
  4375d2:	add    al,0xe9
  4375d4:	test   DWORD PTR [esi],ebx
  4375d6:	add    al,0xe9
  4375d8:	test   DWORD PTR [edx],edx
  4375da:	add    al,0xe9
  4375dc:	test   DWORD PTR [esi],esp
  4375de:	add    al,0xe9
  4375e0:	test   DWORD PTR [edx],ebp
  4375e2:	add    al,0x0
  4375e4:	fild   WORD PTR [ecx-0x2a]
  4375e7:	or     bl,bh
  4375e9:	inc    ecx
  4375ea:	inc    ebp
  4375eb:	or     ebp,edi
  4375ed:	inc    ecx
  4375ee:	mov    esi,0x3c41ef0a
  4375f3:	or     eax,0xd2041df
  4375f8:	fild   WORD PTR [ecx-0x26]
  4375fb:	or     ch,BYTE PTR [edi-0x50f541bf]
  437601:	inc    ecx
  437602:	ret    0x9f0a
  437605:	inc    ecx
  437606:	mov    dh,0xa
  437608:	lahf   
  437609:	inc    ecx
  43760a:	and    eax,0x9e41af0b
  43760f:	or     ch,BYTE PTR [edi+0x116241]
  437615:	lahf   
  437616:	inc    ecx
  437617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437618:	or     bl,BYTE PTR [edi+0x6f0aaa41]
  43761e:	inc    ecx
  43761f:	mov    cs,WORD PTR [edx]
  437621:	outs   dx,DWORD PTR ds:[esi]
  437622:	inc    ecx
  437623:	xchg   edx,eax
  437624:	or     bl,BYTE PTR [edi+0x41]
  437627:	xchg   esi,eax
  437628:	or     bl,BYTE PTR [edi+0x41]
  43762b:	call   0x6f0a:0x7e416f0a
  437632:	inc    ecx
  437633:	or     BYTE PTR [edx],0x5f
  437636:	inc    ecx
  437637:	xchg   BYTE PTR [edx],cl
  437639:	pop    edi
  43763a:	inc    ecx
  43763b:	mov    cl,BYTE PTR [edx]
  43763d:	das    
  43763e:	inc    ecx
  43763f:	jle    0x43764b
  437641:	das    
  437642:	inc    ecx
  437643:	fimul  WORD PTR [esi]
  437645:	pop    ds
  437646:	inc    ecx
  437647:	jbe    0x437653
  437649:	pop    ds
  43764a:	inc    ecx
  43764b:	jp     0x437657
  43764d:	das    
  43764e:	inc    ecx
  43764f:	pop    esi
  437650:	or     ch,BYTE PTR [edi]
  437652:	inc    ecx
  437653:	bound  ecx,QWORD PTR [edx]
  437655:	pop    ds
  437656:	inc    ecx
  437657:	data16 or bl,BYTE PTR [edi]
  43765a:	inc    ecx
  43765b:	push   0xa
  43765d:	xchg   BYTE PTR [ebx],ch
  43765f:	or     ebx,DWORD PTR [esp+ecx*4+0x2b]
  437663:	or     ebx,DWORD PTR [eax+0x7c]
  437666:	sub    ecx,DWORD PTR [ebx]
  437668:	push   esp
  437669:	jl     0x437696
  43766b:	or     edx,DWORD PTR [eax-0x74]
  43766e:	sub    ecx,DWORD PTR [ebx]
  437670:	dec    esp
  437671:	mov    WORD PTR [ebx],gs
  437673:	or     ecx,DWORD PTR [eax+0x7c]
  437676:	sub    ecx,DWORD PTR [ebx]
  437678:	xlat   BYTE PTR ds:[ebx]
  437679:	add    BYTE PTR [eax+0x2b],bh
  43767c:	or     edx,DWORD PTR [eax-0x74]
  43767f:	sub    ecx,DWORD PTR [ebx]
  437681:	dec    esp
  437682:	mov    WORD PTR [ebx],gs
  437684:	or     ecx,DWORD PTR [eax+0x7c]
  437687:	sub    ecx,DWORD PTR [ebx]
  437689:	inc    esp
  43768a:	jl     0x4376b7
  43768c:	or     eax,DWORD PTR [eax-0x74]
  43768f:	sub    ecx,DWORD PTR [ebx]
  437691:	cmp    al,0x8c
  437693:	sub    ecx,DWORD PTR [ebx]
  437695:	cmp    BYTE PTR [ebx+ebp*1+0xb],bh
  437699:	xor    al,0x7c
  43769b:	sub    ecx,DWORD PTR [ebx]
  43769d:	and    BYTE PTR [ecx+ebp*1+0x298c1c0b],cl
  4376a4:	or     ebx,DWORD PTR [eax]
  4376a6:	jl     0x4376d1
  4376a8:	or     edx,DWORD PTR [esp+edi*2]
  4376ab:	sub    DWORD PTR [ebx],ecx
  4376ad:	adc    BYTE PTR [ecx+ebp*1+0x298c0c0b],cl
  4376b4:	or     esp,DWORD PTR [edi+0x40b297d]
  4376ba:	jl     0x4376e5
  4376bc:	or     eax,DWORD PTR [eax]
  4376be:	mov    WORD PTR [ecx],gs
  4376c0:	or     edi,esp
  4376c2:	(bad)
  4376c6:	jg     0x4376f1
  4376c8:	or     esi,esp
  4376ca:	jg     0x4376f5
  4376cc:	or     esi,eax
  4376ce:	(bad)
  4376d2:	(bad)
  4376d6:	jg     0x43771a
  4376d8:	loope  0x4376dd
  4376da:	and    cl,BYTE PTR [edx-0x1f]
  4376dd:	add    eax,DWORD PTR [eax]
  4376df:	out    0x49,al
  4376e1:	loope  0x4376e6
  4376e3:	fimul  DWORD PTR [ecx-0x1f]
  4376e6:	add    ecx,esi
  4376e8:	dec    ecx
  4376e9:	loope  0x4376ee
  4376eb:	ror    BYTE PTR [ecx-0x1f],cl
  4376ee:	add    esi,DWORD PTR [esi-0x35fc1eb7]
  4376f4:	dec    ecx
  4376f5:	loope  0x4376fa
  4376f7:	imul   eax,DWORD PTR [edi-0x1f],0xe149c203
  4376fe:	add    eax,esi
  437700:	dec    ecx
  437701:	loope  0x437706
  437703:	cli    
  437704:	dec    ecx
  437705:	loope  0x43770a
  437707:	out    dx,al
  437708:	dec    ecx
  437709:	loope  0x43770e
  43770b:	repnz dec ecx
  43770d:	loope  0x437712
  43770f:	(bad)  
  437710:	dec    ecx
  437711:	loope  0x437716
  437713:	jmp    0xe149:0xde03e149
  43771a:	add    esp,edx
  43771c:	dec    ecx
  43771d:	loope  0x437722
  43771f:	add    BYTE PTR [edi-0x1f],0x3
  437723:	sbb    cl,BYTE PTR [ecx-0x1f]
  437726:	add    ecx,DWORD PTR [esi]
  437728:	dec    ecx
  437729:	loope  0x43772e
  43772b:	adc    cl,BYTE PTR [ecx-0x1f]
  43772e:	add    esi,esi
  437730:	dec    eax
  437731:	loope  0x437736
  437733:	or     cl,BYTE PTR [ecx-0x1f]
  437736:	add    edi,esi
  437738:	dec    eax
  437739:	loope  0x43773e
  43773b:	add    cl,BYTE PTR [ecx-0x1f]
  43773e:	add    eax,DWORD PTR [esi]
  437740:	dec    ecx
  437741:	loope  0x437746
  437743:	add    BYTE PTR [edx-0x51fc1eb7],bh
  437749:	dec    ecx
  43774a:	loope  0x43774f
  43774c:	mov    dl,0x49
  43774e:	loope  0x437753
  437750:	xchg   esi,eax
  437751:	dec    ecx
  437752:	or     ch,cl
  437754:	test   DWORD PTR [esi-0x557a16ff],esp
  43775a:	add    ecx,ebp
  43775c:	test   DWORD PTR [ebx+eax*1],eax
  43775f:	jmp    0xe94519e9
  437764:	test   DWORD PTR [esi+0x1],esi
  437767:	jmp    0xe944f1f1
  43776c:	test   DWORD PTR [esi+0x1],ebp
  43776f:	jmp    0xe944e9f9
  437774:	test   DWORD PTR [esi-0x757a16ff],eax
  43777a:	add    ecx,ebp
  43777c:	test   DWORD PTR [esi+0x1],edi
  43777f:	jmp    0xe944fa09
  437784:	test   DWORD PTR [esi+0x1],edx
  437787:	jmp    0xe944d211
  43778c:	test   DWORD PTR [esi+0x1],ecx
  43778f:	jmp    0xe9463019
  437794:	test   DWORD PTR [edx+eax*1+0x2b085e9],ebp
  43779b:	jmp    0xe9463c25
  4377a0:	test   DWORD PTR [ecx+0x1],ebx
  4377a3:	jmp    0xe946402d
  4377a8:	add    BYTE PTR [ebp-0x7a16fd3c],al
  4377ae:	nop
  4377af:	add    ebp,ecx
  4377b1:	test   DWORD PTR [ecx+0x1],ebp
  4377b4:	jmp    0xe944dd3e
  4377b9:	test   DWORD PTR [ebx+eax*1+0x12d85e9],edx
  4377c0:	jmp    0xe947144a
  4377c5:	test   DWORD PTR [eax-0x5b7a16fd],ebp
  4377cb:	add    eax,DWORD PTR [eax]
  4377cd:	pop    ds
  4377ce:	inc    esi
  4377cf:	push   eax
  4377d0:	or     ebp,DWORD PTR [edi]
  4377d2:	inc    esi
  4377d3:	cli    
  4377d4:	or     BYTE PTR [edi],ch
  4377d6:	inc    esi
  4377d7:	fimul  WORD PTR [eax]
  4377d9:	pop    ds
  4377da:	inc    esi
  4377db:	loop   0x4377e5
  4377dd:	pop    ds
  4377de:	inc    esi
  4377df:	inc    eax
  4377e0:	or     ebp,edi
  4377e2:	inc    ebp
  4377e3:	test   DWORD PTR [eax],0x8fb45ef
  4377e9:	fild   WORD PTR [ebp-0x21]
  4377ec:	or     bh,bl
  4377ee:	inc    ebp
  4377ef:	jecxz  0x4377f9
  4377f1:	out    dx,eax
  4377f2:	inc    ebp
  4377f3:	out    0x8,eax
  4377f5:	out    dx,eax
  4377f6:	inc    ebp
  4377f7:	jmp    0x437801
  4377f9:	fild   WORD PTR [ebp+0x3c]
  4377fc:	or     ebx,edi
  4377fe:	inc    ebp
  4377ff:	and    BYTE PTR [ebx],cl
  437801:	scas   eax,DWORD PTR es:[edi]
  437802:	inc    ebp
  437803:	xlat   BYTE PTR ds:[ebx]
  437804:	or     BYTE PTR [edi-0x60f724bb],ch
  43780a:	inc    ebp
  43780b:	mov    edi,0x459f0008
  437810:	ret    
  437811:	or     BYTE PTR [edi-0x50f4ebbb],ch
  437817:	inc    ebp
  437818:	sbb    BYTE PTR [ebx],cl
  43781a:	lahf   
  43781b:	inc    ebp
  43781c:	sbb    al,0xb
  43781e:	lahf   
  43781f:	inc    ebp
  437820:	add    BYTE PTR [ebx],cl
  437822:	outs   dx,DWORD PTR ds:[esi]
  437823:	inc    ebp
  437824:	mov    bh,0x8
  437826:	outs   dx,DWORD PTR ds:[esi]
  437827:	inc    ebp
  437828:	mov    ebx,0x9f455f08
  43782d:	or     BYTE PTR [edi+0x45],bl
  437830:	mov    ds:0xa7456f08,eax
  437835:	or     BYTE PTR [edi+0x45],ch
  437838:	stos   DWORD PTR es:[edi],eax
  437839:	or     BYTE PTR [edi+0x45],bl
  43783c:	cld    
  43783d:	or     bl,BYTE PTR [edi+0x45]
  437840:	xchg   ebx,eax
  437841:	or     BYTE PTR [edi],ch
  437843:	inc    ebp
  437844:	xchg   edi,eax
  437845:	or     BYTE PTR [esi+0x7e930b1b],al
  43784b:	sbb    ecx,DWORD PTR [ebx]
  43784d:	(bad)  
  43784e:	jle    0x43786b
  437850:	or     ecx,DWORD PTR [ebx-0x78f4e472]
  437856:	mov    ds,WORD PTR [ebx]
  437858:	or     eax,DWORD PTR [ebx+0x7f0b1b7e]
  43785e:	jle    0x43787b
  437860:	or     edi,DWORD PTR [ebx-0x72]
  437863:	sbb    ecx,DWORD PTR [ebx]
  437865:	ja     0x4377f5
  437867:	sbb    ecx,DWORD PTR [ebx]
  437869:	jae    0x4378e9
  43786b:	sbb    ecx,DWORD PTR [ebx]
  43786d:	ret    0x1b7c
  437870:	or     edi,DWORD PTR [esi+0xb1b8c00]
  437876:	mov    edx,0xb60b1b8c
  43787b:	jl     0x437898
  43787d:	or     esi,DWORD PTR [edx-0x51f4e484]
  437883:	mov    WORD PTR [ebx],ds
  437885:	or     ebp,DWORD PTR [edx-0x59f4e474]
  43788b:	jl     0x4378a8
  43788d:	or     esp,DWORD PTR [edx-0x61f4e484]
  437893:	mov    WORD PTR [ebx],ds
  437895:	or     ebx,DWORD PTR [edx-0x69f4e474]
  43789b:	jl     0x4378b8
  43789d:	or     edx,DWORD PTR [edx-0x71f4e484]
  4378a3:	mov    WORD PTR [ecx],ds
  4378a5:	or     ecx,DWORD PTR [edx-0x79f4e674]
  4378ab:	jl     0x4378c6
  4378ad:	or     eax,DWORD PTR [edx+0x7e0b197c]
  4378b3:	mov    WORD PTR [ecx],ds
  4378b5:	or     edi,DWORD PTR [edx-0x74]
  4378b8:	sbb    DWORD PTR [ebx],ecx
  4378ba:	jbe    0x437938
  4378bc:	sbb    DWORD PTR [ebx],ecx
  4378be:	jb     0x43793c
  4378c0:	inc    edx
  4378c1:	loope  0x4378c6
  4378c3:	mov    al,0x3c
  4378c5:	loope  0x4378ca
  4378c7:	lods   al,BYTE PTR ds:[esi]
  4378c8:	cmp    al,0xe1
  4378ca:	add    ebp,DWORD PTR [eax-0x5bfc1ec4]
  4378d0:	cmp    al,0xe1
  4378d2:	add    eax,eax
  4378d4:	cmp    al,0xe1
  4378d6:	add    eax,DWORD PTR [eax]
  4378d8:	mov    esp,0xb803e13c
  4378dd:	cmp    al,0xe1
  4378df:	add    esi,DWORD PTR [esp+edi*1+0x3c5003e1]
  4378e6:	loope  0x4378eb
  4378e8:	dec    esp
  4378e9:	cmp    al,0xe1
  4378eb:	add    ecx,DWORD PTR [eax+0x3c]
  4378ee:	loope  0x4378f3
  4378f0:	inc    esp
  4378f1:	cmp    al,0xe1
  4378f3:	add    esp,DWORD PTR [eax-0x63fc1ec4]
  4378f9:	cmp    al,0xe1
  4378fb:	add    ebx,DWORD PTR [eax-0x6bfc1ec4]
  437901:	cmp    al,0xe1
  437903:	add    esi,DWORD PTR [eax+0x3c]
  437906:	loope  0x43790b
  437908:	ins    BYTE PTR es:[edi],dx
  437909:	cmp    al,0xe1
  43790b:	add    ebp,DWORD PTR [eax+0x3c]
  43790e:	loope  0x437913
  437910:	fs cmp al,0xe1
  437913:	add    eax,DWORD PTR [eax+0x7c03e13c]
  437919:	cmp    al,0xe1
  43791b:	add    edi,DWORD PTR [eax+0x3c]
  43791e:	loope  0x437923
  437920:	je     0x43795e
  437922:	loope  0x437927
  437924:	nop
  437925:	cmp    al,0xe1
  437927:	add    ecx,DWORD PTR [esp+edi*1+0x3c8803e1]
  43792e:	loope  0x437933
  437930:	test   BYTE PTR [ecx+eiz*8],bh
  437933:	add    esp,DWORD PTR [eax+0x39]
  437936:	loope  0x43793b
  437938:	pop    esp
  437939:	cmp    DWORD PTR [edx],ecx
  43793b:	jmp    0x15bfe40
  437940:	jmp    0xe9448dca
  437945:	test   DWORD PTR [eax],esp
  437947:	add    ecx,ebp
  437949:	test   DWORD PTR [ecx+eax*1],ebx
  43794c:	jmp    0xe944a1d6
  437951:	test   DWORD PTR [ecx+eax*1],esp
  437954:	jmp    0xe94469de
  437959:	test   esp,ebp
  43795b:	add    cl,ch
  43795d:	test   eax,edi
  43795f:	add    cl,ch
  437961:	test   esp,esi
  437963:	add    cl,ch
  437965:	test   DWORD PTR [eax],eax
  437967:	add    ecx,ebp
  437969:	test   esp,edi
  43796b:	add    cl,ch
  43796d:	test   DWORD PTR [eax],ecx
  43796f:	add    ecx,ebp
  437971:	test   DWORD PTR [ecx+eax*1],eax
  437974:	jmp    0xe94449fe
  437979:	test   esp,ecx
  43797b:	add    cl,ch
  43797d:	test   eax,ebx
  43797f:	add    cl,ch
  437981:	test   esp,edx
  437983:	add    cl,ch
  437985:	test   eax,esp
  437987:	add    cl,ch
  437989:	test   esp,ebx
  43798b:	add    cl,ch
  43798d:	test   eax,ebp
  43798f:	add    cl,ch
  437991:	test   esp,esp
  437993:	add    cl,ch
  437995:	test   DWORD PTR [eax-0x537a1700],esi
  43799b:	add    cl,ch
  43799d:	test   DWORD PTR [eax-0x7aff1700],edi
  4379a3:	mov    ah,0x0
  4379a5:	jmp    0xe944362f
  4379aa:	test   DWORD PTR [eax-0x3b7a1700],edi
  4379b0:	add    cl,ch
  4379b2:	test   eax,eax
  4379b4:	add    BYTE PTR [eax],al
  4379b6:	outs   dx,DWORD PTR ds:[esi]
  4379b7:	inc    edx
  4379b8:	jo     0x4379c3
  4379ba:	outs   dx,DWORD PTR ds:[esi]
  4379bb:	inc    edx
  4379bc:	je     0x4379c7
  4379be:	pop    edi
  4379bf:	inc    edx
  4379c0:	js     0x4379cb
  4379c2:	pop    edi
  4379c3:	inc    edx
  4379c4:	jl     0x4379cf
  4379c6:	das    
  4379c7:	inc    edx
  4379c8:	pusha  
  4379c9:	or     DWORD PTR [edi],ebp
  4379cb:	inc    edx
  4379cc:	or     DWORD PTR fs:[edi],ebx
  4379cf:	inc    edx
  4379d0:	push   0x6c421f09
  4379d5:	or     DWORD PTR [edi],ebp
  4379d7:	inc    edx
  4379d8:	push   eax
  4379d9:	or     DWORD PTR [edi],ebp
  4379db:	inc    edx
  4379dc:	push   esp
  4379dd:	or     DWORD PTR [edi],ebx
  4379df:	inc    edx
  4379e0:	pop    eax
  4379e1:	or     DWORD PTR [edi],ebx
  4379e3:	inc    edx
  4379e4:	pop    esp
  4379e5:	or     edi,ebp
  4379e7:	inc    ecx
  4379e8:	inc    eax
  4379e9:	or     edi,ebp
  4379eb:	inc    ecx
  4379ec:	inc    esp
  4379ed:	or     edi,ebx
  4379ef:	inc    ecx
  4379f0:	dec    eax
  4379f1:	or     edi,ebx
  4379f3:	inc    ecx
  4379f4:	dec    esp
  4379f5:	or     edi,ebp
  4379f7:	inc    ecx
  4379f8:	xor    BYTE PTR [ecx],cl
  4379fa:	out    dx,eax
  4379fb:	inc    ecx
  4379fc:	xor    al,0x9
  4379fe:	fild   WORD PTR [ecx+0x38]
  437a01:	or     edi,ebx
  437a03:	inc    ecx
  437a04:	cmp    al,0x9
  437a06:	add    BYTE PTR [edi-0x50f6dfbf],ch
  437a0c:	inc    ecx
  437a0d:	and    al,0x9
  437a0f:	lahf   
  437a10:	inc    ecx
  437a11:	sub    BYTE PTR [ecx],cl
  437a13:	lahf   
  437a14:	inc    ecx
  437a15:	sub    al,0x9
  437a17:	scas   eax,DWORD PTR es:[edi]
  437a18:	inc    ecx
  437a19:	adc    BYTE PTR [ecx],cl
  437a1b:	scas   eax,DWORD PTR es:[edi]
  437a1c:	inc    ecx
  437a1d:	adc    al,0x9
  437a1f:	lahf   
  437a20:	inc    ecx
  437a21:	sbb    BYTE PTR [ecx],cl
  437a23:	lahf   
  437a24:	inc    ecx
  437a25:	sbb    al,0x9
  437a27:	outs   dx,DWORD PTR ds:[esi]
  437a28:	inc    ecx
  437a29:	add    BYTE PTR [ecx],cl
  437a2b:	outs   dx,DWORD PTR ds:[esi]
  437a2c:	inc    ecx
  437a2d:	add    al,0x9
  437a2f:	xchg   BYTE PTR [ebx],bl
  437a31:	or     eax,DWORD PTR [esi]
  437a33:	jg     0x437a50
  437a35:	or     eax,DWORD PTR [edx]
  437a37:	(bad)  
  437a38:	sbb    ecx,DWORD PTR [ebx]
  437a3a:	dec    BYTE PTR [esi+0x7efa0b1b]
  437a40:	sbb    ecx,DWORD PTR [ebx]
  437a42:	idiv   BYTE PTR [esi+0x1b]
  437a45:	or     esi,edx
  437a47:	mov    ds,WORD PTR [ebx]
  437a49:	or     ebp,esi
  437a4b:	mov    ds,WORD PTR [ebx]
  437a4d:	or     ebp,edx
  437a4f:	jle    0x437a6c
  437a51:	or     esp,esi
  437a53:	jle    0x437a70
  437a55:	or     esp,edx
  437a57:	mov    ds,WORD PTR [ebx]
  437a59:	or     ebx,esi
  437a5b:	mov    ds,WORD PTR [ebx]
  437a5d:	or     ebx,edx
  437a5f:	jle    0x437a7c
  437a61:	or     edx,esi
  437a63:	jle    0x437a80
  437a65:	or     edx,edx
  437a67:	mov    ds,WORD PTR [ebx]
  437a69:	or     ecx,esi
  437a6b:	add    BYTE PTR [esi+0x7eca0b1b],cl
  437a71:	sbb    ecx,DWORD PTR [ebx]
  437a73:	(bad)  
  437a74:	jle    0x437a91
  437a76:	or     eax,edx
  437a78:	mov    ds,WORD PTR [ebx]
  437a7a:	or     edi,DWORD PTR [esi-0x45f4e472]
  437a80:	jle    0x437a9d
  437a82:	or     esi,DWORD PTR [esi-0x4df4e482]
  437a88:	mov    ds,WORD PTR [ebx]
  437a8a:	or     ebp,DWORD PTR [esi-0x55f4e472]
  437a90:	jle    0x437aad
  437a92:	or     esp,DWORD PTR [esi-0x5df4e482]
  437a98:	mov    ds,WORD PTR [ebx]
  437a9a:	or     ebx,DWORD PTR [esi-0x65f4e472]
  437aa0:	jle    0x437abd
  437aa2:	or     edx,DWORD PTR [esi-0x6df4e482]
  437aa8:	mov    es,WORD PTR [edx-0x1f]
  437aab:	add    ecx,DWORD PTR [eax]
  437aad:	cmp    esp,ecx
  437aaf:	add    edi,esp
  437ab1:	cmp    ah,cl
  437ab3:	add    eax,DWORD PTR [eax]
  437ab5:	cmp    esp,ecx
  437ab7:	add    eax,DWORD PTR [ebx+edi*1]
  437aba:	loope  0x437abf
  437abc:	fdivr  DWORD PTR [edx]
  437abe:	loope  0x437ac3
  437ac0:	int3   
  437ac1:	cmp    ah,cl
  437ac3:	add    edx,eax
  437ac5:	cmp    ah,cl
  437ac7:	add    esi,DWORD PTR [edx+edi*1+0x3aa803e1]
  437ace:	loope  0x437ad3
  437ad0:	add    BYTE PTR [edx+edi*1+0x3aa003e1],bl
  437ad7:	loope  0x437adc
  437ad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437ada:	cmp    ah,cl
  437adc:	add    edi,DWORD PTR [eax-0x53fc1ec6]
  437ae2:	cmp    ah,cl
  437ae4:	add    esi,DWORD PTR [eax+0x5403e13a]
  437aea:	cmp    ah,cl
  437aec:	add    ecx,DWORD PTR [eax+0x3a]
  437aef:	loope  0x437af4
  437af1:	cmp    al,0x3a
  437af3:	loope  0x437af8
  437af5:	inc    eax
  437af6:	cmp    ah,cl
  437af8:	add    eax,DWORD PTR [edx+edi*1-0x1f]
  437afc:	add    ebx,DWORD PTR [eax-0x73fc1ec6]
  437b02:	cmp    ah,cl
  437b04:	add    edx,DWORD PTR [eax+0x7403e13a]
  437b0a:	cmp    ah,cl
  437b0c:	add    ebp,DWORD PTR [eax+0x3a]
  437b0f:	loope  0x437b14
  437b11:	pop    esp
  437b12:	cmp    ah,cl
  437b14:	add    esp,DWORD PTR [eax+0x3a]
  437b17:	loope  0x437b1c
  437b19:	fs cmp ah,cl
  437b1c:	add    edi,DWORD PTR [eax+0x3a]
  437b1f:	loope  0x437b24
  437b21:	ins    BYTE PTR es:[edi],dx
  437b22:	cmp    cl,BYTE PTR [edx]
  437b24:	jmp    0xe945afae
  437b29:	test   DWORD PTR [eax],esi
  437b2b:	add    ch,cl
  437b2d:	test   DWORD PTR [edx+eax*1],edi
  437b30:	jmp    0xe94ad4ba
  437b35:	add    BYTE PTR [ebp-0x7a16f89b],al
  437b3b:	inc    eax
  437b3c:	add    ch,cl
  437b3e:	test   DWORD PTR [edi+eax*1],ecx
  437b41:	jmp    0xe94a83cb
  437b46:	test   DWORD PTR [edi+eax*1],edx
  437b49:	jmp    0xe94a8bd3
  437b4e:	test   DWORD PTR [edi+eax*1],ebx
  437b51:	jmp    0xe94a93db
  437b56:	test   DWORD PTR [edi+eax*1],esp
  437b59:	jmp    0xe94a9be3
  437b5e:	test   esp,ebp
  437b60:	push   es
  437b61:	jmp    0xe94a63eb
  437b66:	test   esp,esi
  437b68:	push   es
  437b69:	jmp    0xe94a6bf3
  437b6e:	test   esp,edi
  437b70:	push   es
  437b71:	jmp    0xe94a73fb
  437b76:	test   DWORD PTR [edi+eax*1],eax
  437b79:	jmp    0xe94a7c03
  437b7e:	test   esp,ecx
  437b80:	push   es
  437b81:	jmp    0xe94a440b
  437b86:	test   esp,edx
  437b88:	push   es
  437b89:	jmp    0xe94a4c13
  437b8e:	test   esp,ebx
  437b90:	push   es
  437b91:	jmp    0xe949211b
  437b96:	test   DWORD PTR [ecx-0x7aff16fb],esp
  437b9c:	ins    DWORD PTR es:[edi],dx
  437b9d:	add    eax,0x513eaf00
  437ba2:	add    eax,0x5553e9f
  437ba7:	lahf   
  437ba8:	ds pop ecx
  437baa:	add    eax,0x53d466f
  437baf:	outs   dx,DWORD PTR ds:[esi]
  437bb0:	inc    esi
  437bb1:	es add eax,0x784465f
  437bb7:	pop    edi
  437bb8:	inc    esi
  437bb9:	mov    BYTE PTR [edi],al
  437bbb:	outs   dx,DWORD PTR ds:[esi]
  437bbc:	inc    esi
  437bbd:	mov    WORD PTR [edi],es
  437bbf:	outs   dx,DWORD PTR ds:[esi]
  437bc0:	inc    esi
  437bc1:	jo     0x437bca
  437bc3:	pop    edi
  437bc4:	inc    esi
  437bc5:	xor    eax,0x39465f05
  437bca:	add    eax,0x51d462f
  437bcf:	das    
  437bd0:	inc    esi
  437bd1:	and    DWORD PTR ds:0x764461f,eax
  437bd7:	pop    ds
  437bd8:	inc    esi
  437bd9:	push   0x6c462f07
  437bde:	pop    es
  437bdf:	das    
  437be0:	inc    esi
  437be1:	push   eax
  437be2:	pop    es
  437be3:	pop    ds
  437be4:	inc    esi
  437be5:	push   esp
  437be6:	pop    es
  437be7:	pop    ds
  437be8:	inc    esi
  437be9:	pop    eax
  437bea:	pop    es
  437beb:	out    dx,eax
  437bec:	inc    ebp
  437bed:	pop    esp
  437bee:	pop    es
  437bef:	out    dx,eax
  437bf0:	inc    ebp
  437bf1:	inc    eax
  437bf2:	pop    es
  437bf3:	fild   WORD PTR [ebp+0x5]
  437bf6:	add    eax,0x50945df
  437bfb:	out    dx,eax
  437bfc:	inc    ebp
  437bfd:	in     eax,dx
  437bfe:	add    al,0x0
  437c00:	out    dx,eax
  437c01:	inc    ebp
  437c02:	xor    BYTE PTR [edi],al
  437c04:	fild   WORD PTR [ebp+0x34]
  437c07:	pop    es
  437c08:	fild   WORD PTR [ebp+0x38]
  437c0b:	pop    es
  437c0c:	scas   eax,DWORD PTR es:[edi]
  437c0d:	inc    ebp
  437c0e:	cmp    al,0x7
  437c10:	scas   eax,DWORD PTR es:[edi]
  437c11:	inc    ebp
  437c12:	and    BYTE PTR [edi],al
  437c14:	lahf   
  437c15:	inc    ebp
  437c16:	and    al,0x7
  437c18:	xchg   BYTE PTR [ebx],bl
  437c1a:	or     esp,DWORD PTR [esi]
  437c1c:	mov    DWORD PTR [ebx],ebx
  437c1e:	or     esp,DWORD PTR [edx]
  437c20:	sbb    DWORD PTR [ebx],0x1b891e0b
  437c26:	or     ebx,DWORD PTR [edx]
  437c28:	sbb    DWORD PTR [ebx],0x1b89160b
  437c2e:	or     edx,DWORD PTR [edx]
  437c30:	sbb    DWORD PTR [ebx],0x1b890e0b
  437c36:	or     ecx,DWORD PTR [edx]
  437c38:	sbb    DWORD PTR [ebx],0x1b89060b
  437c3e:	or     eax,DWORD PTR [edx]
  437c40:	sbb    DWORD PTR [ebx],0x1b88fe0b
  437c46:	or     edi,edx
  437c48:	sbb    BYTE PTR [ebx],0xb
  437c4b:	test   BYTE PTR [eax-0x7f0df4e5],0x1b
  437c52:	or     ebp,esi
  437c54:	mov    BYTE PTR [ebx],bl
  437c56:	or     ebp,edx
  437c58:	sbb    BYTE PTR [ebx],0xb
  437c5b:	out    0x88,al
  437c5d:	sbb    ecx,DWORD PTR [ebx]
  437c5f:	loop   0x437be1
  437c61:	sbb    ecx,DWORD PTR [ebx]
  437c63:	fiadd  WORD PTR [eax]
  437c65:	mov    BYTE PTR [ebx],bl
  437c67:	or     ebx,edx
  437c69:	sbb    BYTE PTR [ebx],0xb
  437c6c:	(bad)  
  437c6d:	mov    BYTE PTR [ebx],bl
  437c6f:	or     edx,edx
  437c71:	sbb    BYTE PTR [ebx],0xb
  437c74:	into   
  437c75:	mov    BYTE PTR [ebx],bl
  437c77:	or     eax,DWORD PTR [ebp-0x7ef4e47e]
  437c7d:	mov    bl,BYTE PTR [ebx]
  437c7f:	or     edi,DWORD PTR [ebp-0x7e]
  437c82:	sbb    ecx,DWORD PTR [ebx]
  437c84:	mov    esi,0xba0b1b88
  437c89:	sbb    BYTE PTR [ebx],0xb
  437c8c:	mov    dh,0x88
  437c8e:	sbb    ecx,DWORD PTR [ebx]
  437c90:	mov    dl,0x80
  437c92:	inc    edx
  437c93:	loope  0x437c98
  437c95:	loopne 0x437cd6
  437c97:	loope  0x437c9c
  437c99:	fdivr  QWORD PTR [edi]
  437c9b:	loope  0x437ca0
  437c9d:	call   0xe4475de1
  437ca2:	aas    
  437ca3:	loope  0x437ca8
  437ca5:	lock aas 
  437ca7:	loope  0x437cac
  437ca9:	in     al,dx
  437caa:	aas    
  437cab:	loope  0x437cb0
  437cad:	sbb    BYTE PTR [ecx-0x1f],al
  437cb0:	add    edx,DWORD PTR [ecx+eax*2]
  437cb3:	loope  0x437cb8
  437cb5:	add    BYTE PTR [ecx-0x1f],al
  437cb8:	add    edi,esp
  437cba:	inc    eax
  437cbb:	loope  0x437cc0
  437cbd:	or     BYTE PTR [ecx-0x1f],al
  437cc0:	add    eax,DWORD PTR [ecx+eax*2]
  437cc3:	loope  0x437cc8
  437cc5:	rol    BYTE PTR [eax-0x1f],1
  437cc8:	add    eax,DWORD PTR [eax]
  437cca:	int3   
  437ccb:	inc    eax
  437ccc:	loope  0x437cd1
  437cce:	mov    eax,0xb403e140
  437cd3:	inc    eax
  437cd4:	loope  0x437cd9
  437cd6:	mov    al,ds:0x9c03e140
  437cdb:	inc    eax
  437cdc:	loope  0x437ce1
  437cde:	test   al,0x40
  437ce0:	loope  0x437ce5
  437ce2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437ce3:	inc    eax
  437ce4:	loope  0x437ce9
  437ce6:	mov    al,0x40
  437ce8:	loope  0x437ced
  437cea:	lods   al,BYTE PTR ds:[esi]
  437ceb:	inc    eax
  437cec:	loope  0x437cf1
  437cee:	pop    eax
  437cef:	inc    eax
  437cf0:	loope  0x437cf5
  437cf2:	push   esp
  437cf3:	inc    eax
  437cf4:	loope  0x437cf9
  437cf6:	inc    eax
  437cf7:	inc    eax
  437cf8:	loope  0x437cfd
  437cfa:	cmp    DWORD PTR [esi],0xffffffe1
  437cfd:	add    eax,DWORD PTR [edi-0x24fc1ec2]
  437d03:	inc    ebx
  437d04:	loope  0x437d09
  437d06:	iret   
  437d07:	inc    ebx
  437d08:	loope  0x437d0d
  437d0a:	mov    WORD PTR [eax+0xa],es
  437d0d:	jmp    0xe94bcd97
  437d12:	test   DWORD PTR [eax+ecx*1-0x17],edx
  437d16:	test   DWORD PTR [eax+0x8],ebx
  437d19:	jmp    0xe94bd9a3
  437d1e:	test   DWORD PTR [eax+0x8],esp
  437d21:	jmp    0xe94be1ab
  437d26:	test   DWORD PTR [eax],ebp
  437d28:	or     cl,ch
  437d2a:	test   DWORD PTR [eax+ecx*1],ebp
  437d2d:	jmp    0x8740232
  437d32:	jmp    0xe94bb1bc
  437d37:	test   DWORD PTR [eax],edi
  437d39:	or     cl,ch
  437d3b:	test   DWORD PTR [eax+ecx*1],edi
  437d3e:	jmp    0xe94bbdc8
  437d43:	test   DWORD PTR [eax+ecx*1-0x17],eax
  437d47:	test   DWORD PTR [eax],ecx
  437d49:	add    eax,0x50c85e9
  437d4e:	jmp    0xe9488dd8
  437d53:	test   DWORD PTR [eax*1+0x51885e9],edx
  437d5a:	jmp    0xe94899e4
  437d5f:	test   DWORD PTR [eax],esp
  437d61:	add    eax,0x52485e9
  437d66:	jmp    0xe94865f0
  437d6b:	test   esp,ebp
  437d6d:	add    al,0xe9
  437d6f:	test   eax,esi
  437d71:	add    al,0xe9
  437d73:	test   esp,esi
  437d75:	add    al,0xe9
  437d77:	test   eax,edi
  437d79:	add    al,0xe9
  437d7b:	test   esp,edi
  437d7d:	add    al,0xe9
  437d7f:	test   DWORD PTR [eax],eax
  437d81:	add    eax,0x50485e9
  437d86:	add    bh,bl
  437d88:	inc    edx
  437d89:	mov    al,0x5
  437d8b:	fild   WORD PTR [edx-0x4c]
  437d8e:	add    eax,0x5b842af
  437d93:	add    BYTE PTR [edi-0x60fa43be],ch
  437d99:	inc    edx
  437d9a:	mov    al,ds:0xa4429f05
  437d9f:	add    eax,0x5a842af
  437da4:	scas   eax,DWORD PTR es:[edi]
  437da5:	inc    edx
  437da6:	lods   al,BYTE PTR ds:[esi]
  437da7:	add    eax,0x590429f
  437dac:	lahf   
  437dad:	inc    edx
  437dae:	xchg   esp,eax
  437daf:	add    eax,0x598426f
  437db4:	outs   dx,DWORD PTR ds:[esi]
  437db5:	inc    edx
  437db6:	pushf  
  437db7:	add    eax,0x580425f
  437dbc:	pop    edi
  437dbd:	inc    edx
  437dbe:	test   BYTE PTR ds:0x588426f,al
  437dc4:	outs   dx,DWORD PTR ds:[esi]
  437dc5:	inc    edx
  437dc6:	mov    WORD PTR ds:0x570425f,es
  437dcc:	pop    edi
  437dcd:	inc    edx
  437dce:	je     0x437dd5
  437dd0:	das    
  437dd1:	inc    edx
  437dd2:	js     0x437dd9
  437dd4:	das    
  437dd5:	inc    edx
  437dd6:	jl     0x437ddd
  437dd8:	pop    ds
  437dd9:	inc    edx
  437dda:	pusha  
  437ddb:	add    eax,0x564421f
  437de0:	das    
  437de1:	inc    edx
  437de2:	push   0x6c422f05
  437de7:	add    eax,0x550421f
  437dec:	pop    ds
  437ded:	inc    edx
  437dee:	push   esp
  437def:	add    eax,0x55841ef
  437df4:	out    dx,eax
  437df5:	inc    ecx
  437df6:	pop    esp
  437df7:	add    eax,0x4041df00
  437dfc:	add    eax,0x54441df
  437e01:	xchg   BYTE PTR [ebx],bl
  437e03:	or     eax,DWORD PTR [esi-0x7d]
  437e06:	sbb    ecx,DWORD PTR [ebx]
  437e08:	inc    edx
  437e09:	mov    ebx,DWORD PTR [ebx]
  437e0b:	or     edi,DWORD PTR [esi]
  437e0d:	sbb    DWORD PTR [ebx],0xb
  437e10:	cmp    cl,BYTE PTR [ebx-0x7cc9f4e5]
  437e16:	sbb    ecx,DWORD PTR [ebx]
  437e18:	xor    cl,BYTE PTR [ebx-0x7cd1f4e5]
  437e1e:	sbb    ecx,DWORD PTR [ebx]
  437e20:	sub    cl,BYTE PTR [ebx-0x7cd9f4e5]
  437e26:	sbb    ecx,DWORD PTR [ebx]
  437e28:	and    cl,BYTE PTR [ebx-0x7ce1f4e5]
  437e2e:	sbb    ecx,DWORD PTR [ebx]
  437e30:	sbb    cl,BYTE PTR [ebx-0x7ce9f4e5]
  437e36:	sbb    ecx,DWORD PTR [ebx]
  437e38:	adc    cl,BYTE PTR [ebx-0x7cf1f4e5]
  437e3e:	sbb    ecx,DWORD PTR [ebx]
  437e40:	or     cl,BYTE PTR [ebx-0x7cf9f4e5]
  437e46:	sbb    ecx,DWORD PTR [ebx]
  437e48:	add    cl,BYTE PTR [ebx-0x7d01f4e5]
  437e4e:	sbb    ecx,DWORD PTR [ebx]
  437e50:	cli    
  437e51:	mov    bl,BYTE PTR [ebx]
  437e53:	or     esi,esi
  437e55:	sbb    BYTE PTR [ebx],0xb
  437e58:	repnz mov bl,BYTE PTR [ebx]
  437e5b:	or     ebp,esi
  437e5d:	add    BYTE PTR [edx-0x7515f4e5],al
  437e63:	sbb    ecx,DWORD PTR [ebx]
  437e65:	out    0x82,al
  437e67:	sbb    ecx,DWORD PTR [ebx]
  437e69:	loop   0x437df5
  437e6b:	sbb    ecx,DWORD PTR [ebx]
  437e6d:	fiadd  WORD PTR [edx-0x7525f4e5]
  437e73:	sbb    ecx,DWORD PTR [ebx]
  437e75:	(bad)  
  437e76:	sbb    BYTE PTR [ebx],0xb
  437e79:	ror    BYTE PTR [edx-0x47fc1ebe],cl
  437e7f:	cmp    eax,0x3dcc03e1
  437e84:	loope  0x437e89
  437e86:	sar    BYTE PTR ds:0x3dc403e1,0xe1
  437e8d:	add    ecx,DWORD PTR [eax]
  437e8f:	ds loope 0x437e95
  437e92:	cld    
  437e93:	cmp    eax,0x3df003e1
  437e98:	loope  0x437e9d
  437e9a:	hlt    
  437e9b:	cmp    eax,0x3dd803e1
  437ea0:	loope  0x437ea5
  437ea2:	in     al,dx
  437ea3:	cmp    eax,0x3de003e1
  437ea8:	loope  0x437ead
  437eaa:	in     al,0x3d
  437eac:	loope  0x437eb1
  437eae:	call   0x1c475ff0
  437eb3:	aas    
  437eb4:	loope  0x437eb9
  437eb6:	adc    BYTE PTR [edi],bh
  437eb8:	loope  0x437ebd
  437eba:	adc    al,0x3f
  437ebc:	loope  0x437ec1
  437ebe:	clc    
  437ebf:	ds loope 0x437ec5
  437ec2:	add    BYTE PTR [edi+edi*1],cl
  437ec5:	loope  0x437eca
  437ec7:	add    BYTE PTR [edi],bh
  437ec9:	loope  0x437ece
  437ecb:	add    al,0x3f
  437ecd:	loope  0x437ed2
  437ecf:	enter  0xe13e,0x3
  437ed3:	mov    esp,0xb003e13e
  437ed8:	ds loope 0x437ede
  437edb:	mov    ah,0x3e
  437edd:	loope  0x437ee2
  437edf:	cwde   
  437ee0:	ds loope 0x437ee6
  437ee3:	lods   al,BYTE PTR ds:[esi]
  437ee4:	ds loope 0x437eea
  437ee7:	mov    al,ds:0xa403e13e
  437eec:	ds loope 0x437ef2
  437eef:	test   al,0x3e
  437ef1:	loope  0x437ef6
  437ef3:	pop    esp
  437ef4:	ds or  ch,cl
  437ef7:	test   DWORD PTR [esi+eax*1-0x17],ebp
  437efb:	test   DWORD PTR [eax+0x6],esi
  437efe:	jmp    0xe949f388
  437f03:	test   DWORD PTR [eax+0x6],edi
  437f06:	jmp    0xe949fb90
  437f0b:	test   DWORD PTR [eax+0x4485e906],eax
  437f11:	push   es
  437f12:	jmp    0xe949c79c
  437f17:	test   DWORD PTR [esi+eax*1-0x17],ecx
  437f1b:	test   DWORD PTR [eax+0x6],edx
  437f1e:	jmp    0xe949d3a8
  437f23:	test   DWORD PTR [eax+0x6],ebx
  437f26:	jmp    0x6a0042b
  437f2b:	jmp    0xe949dfb5
  437f30:	test   DWORD PTR [esi+eax*1],esp
  437f33:	jmp    0xe949a7bd
  437f38:	test   DWORD PTR [esi+eax*1],ebp
  437f3b:	jmp    0xe949afc5
  437f40:	test   DWORD PTR [esi+eax*1],esi
  437f43:	jmp    0xe949b7cd
  437f48:	test   DWORD PTR [esi+eax*1],edi
  437f4b:	jmp    0xe949bfd5
  437f50:	test   DWORD PTR [ebx+ecx*1],eax
  437f53:	jmp    0xe94e87dd
  437f58:	test   DWORD PTR [ebx+ecx*1],ecx
  437f5b:	jmp    0xe94e8fe5
  437f60:	test   DWORD PTR [ebx+ecx*1],edx
  437f63:	jmp    0xe94e97ed
  437f68:	test   DWORD PTR [ebx+ecx*1],ebx
  437f6b:	jmp    0x4e9ff5
  437f70:	pop    ds
  437f71:	aas    
  437f72:	rol    BYTE PTR [ebx],1
  437f74:	out    dx,eax
  437f75:	ds aam 0x3
  437f78:	out    dx,eax
  437f79:	fadd   DWORD PTR ds:[ebx]
  437f7c:	fistp  QWORD PTR [esi]
  437f7e:	fadd   QWORD PTR [ebx]
  437f80:	fistp  QWORD PTR [esi]
  437f82:	rol    BYTE PTR [ebx],0xef
  437f85:	ds wrpkru 
  437f89:	adc    eax,DWORD PTR ds:[ecx]
  437f8c:	add    bh,bl
  437f8e:	ds pop ss
  437f90:	add    edi,ebx
  437f92:	sbb    eax,DWORD PTR ds:[ecx]
  437f95:	scas   eax,DWORD PTR es:[edi]
  437f96:	add    BYTE PTR ds:[ecx],al
  437f99:	scas   eax,DWORD PTR es:[edi]
  437f9a:	ds cmp al,0x1
  437f9d:	lahf   
  437f9e:	xor    eax,DWORD PTR ds:[ecx]
  437fa1:	lahf   
  437fa2:	or     eax,DWORD PTR ds:[ecx]
  437fa5:	scas   eax,DWORD PTR es:[edi]
  437fa6:	ds out dx,eax
  437fa8:	add    BYTE PTR [edi-0x60ff0cc2],ch
  437fae:	test   DWORD PTR ds:[eax],0xfb3e9f
  437fb5:	outs   dx,DWORD PTR ds:[esi]
  437fb6:	inc    esi
  437fb7:	loopne 0x437fb9
  437fb9:	outs   dx,DWORD PTR ds:[esi]
  437fba:	inc    esi
  437fbb:	jecxz  0x437fbd
  437fbd:	pop    edi
  437fbe:	inc    esi
  437fbf:	out    0x0,eax
  437fc1:	pop    edi
  437fc2:	inc    esi
  437fc3:	jmp    0x437fc5
  437fc5:	outs   dx,DWORD PTR ds:[esi]
  437fc6:	inc    esi
  437fc7:	iret   
  437fc8:	add    BYTE PTR [edi+0x46],ch
  437fcb:	rol    DWORD PTR [eax],cl
  437fcd:	pop    edi
  437fce:	inc    esi
  437fcf:	xlat   BYTE PTR ds:[ebx]
  437fd0:	add    BYTE PTR [edi+0x46],bl
  437fd3:	fild   DWORD PTR [eax]
  437fd5:	das    
  437fd6:	inc    esi
  437fd7:	rol    BYTE PTR [eax],0x2f
  437fda:	inc    esi
  437fdb:	ret    
  437fdc:	add    BYTE PTR [edi],bl
  437fde:	inc    esi
  437fdf:	mov    DWORD PTR [eax],0xcb461f
  437fe5:	das    
  437fe6:	inc    esi
  437fe7:	scas   eax,DWORD PTR es:[edi]
  437fe8:	add    BYTE PTR [esi-0x7944f515],al
  437fee:	jmp    0x437ffa
  437ff0:	mov    bh,0x0
  437ff2:	xchg   bl,ch
  437ff4:	or     dh,BYTE PTR [ebx-0x50f5147a]
  437ffa:	xchg   bl,ch
  437ffc:	or     ch,BYTE PTR [ebx-0x58f5147a]
  438002:	xchg   bl,ch
  438004:	or     ah,BYTE PTR [ebx+0x5a0aeb86]
  43800a:	fstp   DWORD PTR [esi+0x29]
  43800d:	mov    DWORD PTR [ebx+0xc],ecx
  438010:	inc    ecx
  438011:	inc    ebx
  438012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438013:	jmp    0x438056
  438015:	inc    ebx
  438016:	test   BYTE PTR [ebx],cl
  438018:	or     eax,DWORD PTR [eax]
  43801a:	xchg   BYTE PTR [eax-0x1499fe3a],dh
  438020:	or     al,BYTE PTR [eax]
  438022:	add    eax,0x1b4015e7
  438027:	call   0xabc3c36d
  43802c:	or     al,BYTE PTR [eax]
  43802e:	xchg   BYTE PTR [edi+eax*8+0x1c],ah
  438032:	jns    0x437fb5
  438034:	out    dx,al
  438035:	mov    cl,BYTE PTR [edx+0x5000571]
  43803b:	sub    eax,DWORD PTR [edx]
  43803d:	stc    
  43803e:	push   esi
  43803f:	ins    BYTE PTR es:[edi],dx
  438040:	ds stc 
  438042:	repnz icebp 
  438044:	ins    DWORD PTR es:[edi],dx
  438045:	inc    ebx
  438046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438047:	adc    al,0xc8
  438049:	sub    BYTE PTR [eax+0x4a7ca3b5],bh
  43804f:	or     BYTE PTR [eax+0x41eb7ebd],ah
  438055:	inc    ebx
  438056:	add    BYTE PTR [ebx+ebp*8+0x6486000a],bl
  43805d:	(bad)  
  43805e:	sbb    al,0x81
  438060:	cmp    esi,eax
  438062:	(bad)  
  438063:	bound  eax,QWORD PTR [edx-0x60]
  438066:	add    eax,DWORD PTR [esi+0x19c3aa42]
  43806c:	add    ecx,esp
  43806e:	adc    al,BYTE PTR [eax-0x7]
  438071:	sar    DWORD PTR [edx-0x3b],1
  438074:	dec    esp
  438075:	fs dec ebx
  438077:	add    DWORD PTR [esi-0x1b],esi
  43807a:	test   BYTE PTR [ebp+0x5c],al
  43807d:	loop   0x438003
  43807f:	out    dx,al
  438080:	inc    ebx
  438081:	or     BYTE PTR ss:[ebx-0x79],ch
  438085:	or     ecx,DWORD PTR [eax]
  438087:	or     DWORD PTR [edi+0x46e642df],edx
  43808d:	loop   0x4380e2
  43808f:	test   DWORD PTR [edx-0xf],eax
  438092:	add    eax,DWORD PTR [esi-0x3c8c2331]
  438098:	add    BYTE PTR [ebx+eax*2-0x7e],ah
  43809c:	add    DWORD PTR [ecx-0x3b78f4bc],edx
  4380a2:	add    ah,dh
  4380a4:	and    edx,0x2239a684
  4380aa:	pop    ebx
  4380ab:	fwait
  4380ac:	leave  
  4380ad:	popf   
  4380ae:	stc    
  4380af:	rol    BYTE PTR [esp+eiz*2],cl
  4380b2:	into   
  4380b3:	xchg   DWORD PTR [edx],esp
  4380b5:	lds    esp,FWORD PTR [edx]
  4380b7:	add    eax,DWORD PTR [esi+0x30002eb]
  4380bd:	xchg   BYTE PTR [ecx+eax*1],al
  4380c0:	xor    al,0x83
  4380c2:	jecxz  0x438048
  4380c4:	dec    ax
  4380c6:	jp     0x43808e
  4380c8:	xchg   ebx,eax
  4380c9:	ret    
  4380ca:	(bad)  
  4380cb:	cmc    
  4380cc:	test   BYTE PTR [ebp-0x15],dh
  4380cf:	test   ch,cl
  4380d1:	dec    esp
  4380d2:	loope  0x4380aa
  4380d4:	test   ebx,eax
  4380d6:	popf   
  4380d7:	in     eax,dx
  4380d8:	test   DWORD PTR [ebx],eax
  4380da:	fs into 
  4380dc:	xchg   DWORD PTR [edx],esp
  4380de:	or     dh,BYTE PTR [ebp-0x77]
  4380e1:	jge    0x438128
  4380e3:	rol    DWORD PTR [ecx-0x779b7543],cl
  4380e9:	push   edx
  4380ea:	jne    0x4380d1
  4380ec:	add    al,0x84
  4380ee:	adc    al,0xeb
  4380f0:	(bad)  
  4380f1:	jmp    0x2c82:0xf9b9ce6b
  4380f8:	in     al,dx
  4380f9:	add    BYTE PTR [esi+0xa],al
  4380fc:	add    eax,0x44eb2b84
  438101:	stc    
  438102:	inc    esp
  438103:	or     al,BYTE PTR [ebp+0x7d]
  438106:	inc    ebp
  438107:	retf   0xbd87
  43810a:	mov    bl,BYTE PTR [esp+eax*4]
  43810d:	push   edx
  43810e:	jne    0x4380ff
  438110:	sub    eax,0x398eef1e
  438115:	mov    ebp,0x42842de1
  43811a:	or     ch,BYTE PTR [edx-0x26f383fb]
  438120:	add    dh,cl
  438122:	dec    eax
  438123:	loop   0x4380c8
  438125:	cmp    ecx,edi
  438127:	out    dx,al
  438128:	iretw  
  43812a:	pop    esi
  43812b:	retf   
  43812c:	push   ecx
  43812d:	jns    0x43812f
  43812f:	out    dx,eax
  438130:	jmp    0x1ab0fe79
  438135:	ret    0x874
  438138:	push   ecx
  438139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43813a:	add    bh,ch
  43813c:	jmp    0xa887b05
  438141:	lds    edi,FWORD PTR [ebp+0x6d]
  438144:	jmp    0x4380eb
  438146:	jle    0x43814d
  438148:	push   0x4f
  43814a:	pop    esi
  43814b:	add    eax,0x2b83052a
  438150:	jmp    0x7445:0xeb6d7dc4
  438157:	add    eax,0xe09ac00
  43815c:	or     DWORD PTR [ebx+eax*8+0x72],ebp
  438160:	add    bh,BYTE PTR [edi]
  438162:	sbb    cl,BYTE PTR [ebx+eax*4]
  438165:	loop   0x43818a
  438167:	or     eax,ebx
  438169:	lods   al,BYTE PTR ds:[esi]
  43816a:	or     cl,BYTE PTR [esi]
  43816c:	add    ebp,esp
  43816e:	call   0x45f1:0x9038ff8a
  438175:	jl     0x4380fa
  438177:	ins    DWORD PTR es:[edi],dx
  438178:	jge    0x438176
  43817a:	add    bh,BYTE PTR [edx+eiz*1+0x20]
  43817e:	or     ch,ch
  438180:	aas    
  438181:	fild   WORD PTR [edx+0xa]
  438184:	inc    DWORD PTR [eax]
  438186:	mov    ds:0xcc458523,al
  43818b:	(bad)  
  43818c:	mov    eax,0x84476a08
  438191:	add    ebx,edi
  438193:	ret    
  438194:	leave  
  438195:	add    al,0xf8
  438197:	xor    cl,cl
  438199:	inc    ebp
  43819a:	lods   eax,DWORD PTR ds:[esi]
  43819b:	and    cl,BYTE PTR [edx]
  43819d:	add    BYTE PTR [edi-0x43ba0e7d],ch
  4381a3:	sub    DWORD PTR [ebp+0x7d],0xffffffec
  4381a7:	add    bh,BYTE PTR [ebx+eiz*1+0x28]
  4381ab:	or     cl,BYTE PTR [esi]
  4381ad:	(bad)  
  4381ae:	loop   0x4381d0
  4381b0:	mov    bh,BYTE PTR [ebp+0x7d]
  4381b3:	(bad)  
  4381b4:	jnp    0x4381bc
  4381b6:	inc    edi
  4381b7:	test   al,0xee
  4381b9:	jmp    FWORD PTR [edi-0x7f]
  4381bc:	test   DWORD PTR [ebp-0x74],eax
  4381bf:	std    
  4381c0:	mov    eax,0x8445ea08
  4381c5:	add    ebx,DWORD PTR [edi-0x3f]
  4381c8:	leave  
  4381c9:	add    al,0xa8
  4381cb:	xor    DWORD PTR [ebp-0x10dedd7d],ebp
  4381d1:	ret    0x5486
  4381d4:	ret    0x481c
  4381d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4381d8:	sub    BYTE PTR [eax+0x72f009c3],al
  4381de:	adc    BYTE PTR [ebx-0x40],0xfe
  4381e2:	xor    esp,ebp
  4381e4:	dec    ebx
  4381e5:	test   ebx,eax
  4381e7:	or     al,dh
  4381e9:	mov    cl,0x0
  4381eb:	mov    ?,WORD PTR [esi+0x2]
  4381ee:	mov    al,BYTE PTR [ebp-0x753f7615]
  4381f4:	adc    al,0x36
  4381f6:	mov    ebp,0x200c8f05
  4381fb:	xor    cl,0x52
  4381fe:	hlt    
  4381ff:	clc    
  438200:	mov    esp,0x484b7d3c
  438205:	add    bh,BYTE PTR [ebp-0x6bffe22]
  43820b:	loope  0x438275
  43820d:	(bad)  
  43820e:	sbb    al,0x84
  438210:	test   al,0x88
  438212:	jnp    0x4381a9
  438214:	sub    edx,edi
  438216:	add    esi,ebx
  438218:	and    ecx,DWORD PTR [ebx]
  43821a:	add    BYTE PTR [esi+0x654388a8],al
  438220:	jmp    0x88eff6e
  438225:	pop    es
  438226:	mov    ebp,0x3292705
  43822b:	lds    ebp,FWORD PTR [eax-0x41]
  43822e:	sub    al,0x46
  438230:	push   ss
  438231:	add    eax,0xaea63e8
  438236:	add    ch,al
  438238:	add    DWORD PTR [ebx+0x498481fa],0xffffffe8
  43823f:	pushf  
  438240:	cmp    eax,0xb605f93d
  438245:	lock cld 
  438247:	repnz in eax,0x52
  43824a:	test   al,0x60
  43824c:	inc    edx
  43824d:	sub    BYTE PTR [ebp+0x0],cl
  438250:	sbb    ebp,edx
  438252:	lock add al,BYTE PTR [esi-0x3a7edbbe]
  438259:	and    esp,esp
  43825b:	inc    eax
  43825c:	ret    
  43825d:	jg     0x43823e
  43825f:	ret    
  438260:	mov    ah,0x47
  438262:	fs (bad) 
  438264:	xchg   edx,eax
  438265:	dec    ebx
  438266:	and    al,0x81
  438268:	lds    esp,FWORD PTR [ecx]
  43826a:	out    0x40,al
  43826c:	mov    ds:0x94f3df7f,eax
  438271:	inc    edi
  438272:	fs (bad) 
  438274:	jb     0x4382b7
  438276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438277:	or     BYTE PTR [ebp-0x7b28febc],0xc1
  43827e:	sbb    eax,0x64018521
  438283:	(bad)  
  438284:	xchg   edx,eax
  438285:	dec    ebx
  438286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438287:	sub    DWORD PTR [ebp+0x42],0xffffffe2
  43828b:	(bad)  
  43828c:	xchg   edx,ebp
  43828e:	dec    BYTE PTR [ebp-0x21]
  438291:	cld    
  438292:	mov    ds:0xe141bc5b,eax
  438297:	add    ecx,DWORD PTR [ebx]
  438299:	ret    0x3fd
  43829c:	shl    DWORD PTR [ebp-0x21],0x5b
  4382a0:	push   edx
  4382a1:	cld    
  4382a2:	outs   dx,DWORD PTR ds:[esi]
  4382a3:	dec    esp
  4382a4:	repz shl ebp,0x2
  4382a8:	test   eax,0x4e5be775
  4382ad:	cld    
  4382ae:	addr16 dec esp
  4382b0:	fcmovnb st,st(0)
  4382b2:	int    0x1
  4382b4:	add    BYTE PTR [esi+0x77],dh
  4382b7:	fistp  WORD PTR [ebx+0x4a]
  4382ba:	cld    
  4382bb:	aas    
  4382bc:	dec    esp
  4382bd:	inc    ebx
  4382be:	jmp    0x43833c
  4382c0:	add    eax,DWORD PTR [esi-0x127fdbbe]
  4382c6:	das    
  4382c7:	or     ch,BYTE PTR [ecx+0x51e24250]
  4382cd:	test   DWORD PTR [edx+0xa],eax
  4382d0:	sub    al,BYTE PTR [esi]
  4382d2:	js     0x4382e0
  4382d4:	leave  
  4382d5:	cmp    BYTE PTR [ecx-0x75],al
  4382d8:	lods   al,BYTE PTR ds:[esi]
  4382d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4382da:	inc    ecx
  4382db:	retf   
  4382dc:	push   0x48
  4382de:	pop    edi
  4382df:	add    eax,0x6d7dc62a
  4382e4:	jmp    0x43831b
  4382e6:	jo     0x438302
  4382e8:	add    DWORD PTR [ecx-0x7],edx
  4382eb:	out    dx,al
  4382ec:	out    dx,al
  4382ed:	cdq    
  4382ee:	jg     0x438304
  4382f0:	call   0x24cee23b
  4382f5:	imul   eax,DWORD PTR [eax-0x35],0xeef926c1
  4382fc:	into   
  4382fd:	cmp    DWORD PTR [edi+0x14],0x8b5ec6e8
  438304:	and    al,0xa9
  438306:	inc    esi
  438307:	retf   
  438308:	push   0xffffffbf
  43830a:	cs dec edx
  43830c:	xor    al,0x84
  43830e:	jmp    0x6acb:0x4285e954
  438315:	mov    edi,0x1c0efd
  43831a:	xchg   DWORD PTR [ebp+0x45],edi
  43831d:	retf   0xbd84
  438320:	mov    ch,BYTE PTR [ecx+eiz*2]
  438323:	aas    
  438324:	retf   
  438325:	xchg   ecx,eax
  438326:	or     edi,eax
  438328:	out    dx,al
  438329:	jbe    0x43832c
  43832b:	js     0x438345
  43832d:	jmp    0x3025c4e8
  438332:	dec    edi
  438333:	stc    
  438334:	out    dx,al
  438335:	sub    dh,BYTE PTR [edx]
  438337:	sub    BYTE PTR [edx],cl
  438339:	jmp    0xccce40c3
  43833e:	cwde   
  43833f:	xor    BYTE PTR [ebp+0x0],0x6a
  438343:	les    ecx,FWORD PTR [edx+0x23]
  438346:	push   0xffffff84
  438348:	ins    DWORD PTR es:[edi],dx
  438349:	jge    0x4383a8
  43834b:	pop    ds
  43834c:	jnp    0x438353
  43834e:	in     al,dx
  43834f:	add    DWORD PTR [esi],ecx
  438351:	add    eax,0x234ac3ac
  438356:	pop    esp
  438357:	test   BYTE PTR [edx+0x7b465f7d],cl
  43835d:	push   es
  43835e:	xchg   DWORD PTR [ebp-0xd],ebp
  438361:	inc    DWORD PTR [eax+0x1f01e283]
  438367:	aas    
  438368:	or     al,bl
  43836a:	ja     0x4382f3
  43836c:	icebp  
  43836d:	push   DWORD PTR [eax]
  43836f:	test   BYTE PTR [ebp+0x7d],ch
  438372:	jl     0x43837a
  438374:	jl     0x43837c
  438376:	aaa    
  438377:	cwde   
  438378:	icebp  
  438379:	push   DWORD PTR [eax]
  43837b:	test   dl,ah
  43837d:	jnp    0x43837f
  43837f:	rol    BYTE PTR [edi+0x23aa83f1],cl
  438385:	out    dx,eax
  438386:	ret    0xa5c
  438389:	in     eax,dx
  43838a:	pop    ds
  43838b:	mov    bl,0xfc
  43838d:	out    0x6b,al
  43838f:	xor    cl,BYTE PTR [eax+0x23aa83f1]
  438395:	push   es
  438396:	ret    
  438397:	mul    ebp
  438399:	repz push eax
  43839c:	ret    
  43839d:	dec    edx
  43839e:	and    ebp,DWORD PTR [ebp+0x3bee283]
  4383a4:	mov    cl,dh
  4383a6:	call   0x350d48
  4383ab:	sbb    al,0xa
  4383ad:	sbb    DWORD PTR [eax],eax
  4383af:	call   0x4b45:0x854585fb
  4383b6:	and    ebx,DWORD PTR [edx+eax*1]
  4383b9:	push   cs
  4383ba:	add    eax,DWORD PTR [esi-0x678477d8]
  4383c0:	jmp    0xf943:0xc86e01d9
  4383c7:	jno    0x4383f6
  4383c9:	jo     0x43840e
  4383cb:	mov    edx,gs
  4383cd:	leave  
  4383ce:	sbb    al,0x5
  4383d0:	lahf   
  4383d1:	daa    
  4383d2:	inc    BYTE PTR [ebp+ebp*2-0x3e]
  4383d6:	std    
  4383d7:	jno    0x4383b0
  4383d9:	adc    al,0xe8
  4383db:	add    BYTE PTR [eax+0x44],dl
  4383de:	stc    
  4383df:	cs es inc edi
  4383e2:	stc    
  4383e3:	add    BYTE PTR [ecx],bh
  4383e5:	ins    DWORD PTR es:[edi],dx
  4383e6:	ret    0x8611
  4383e9:	outs   dx,BYTE PTR ds:[esi]
  4383ea:	lock test bl,al
  4383ed:	adc    eax,0x6c654306
  4383f2:	retf   0x801c
  4383f5:	lods   al,BYTE PTR ds:[esi]
  4383f6:	test   BYTE PTR [ebx+0x78],bh
  4383f9:	jmp    0xf941:0x801e01bf
  438400:	add    DWORD PTR [ebp-0x1563bc94],ebp
  438406:	scas   eax,DWORD PTR es:[edi]
  438407:	sbb    al,0x5
  438409:	pop    ds
  43840a:	and    eax,0xba03c4fe
  43840f:	sti    
  438410:	loope  0x4383ba
  438412:	dec    ebp
  438413:	cwde   
  438414:	fisub  DWORD PTR [eax-0xeac82c0]
  43841a:	or     dh,BYTE PTR [ebx+0x7d]
  43841d:	fs scas eax,DWORD PTR es:[edi]
  43841f:	adc    eax,0x7d251e87
  438424:	inc    ebx
  438425:	or     al,0xef
  438427:	mov    esp,0xfef8f705
  43842c:	xor    ch,cl
  43842e:	push   edx
  43842f:	mov    eax,ss:0xdbd4168
  438435:	inc    ebx
  438436:	sahf   
  438437:	in     eax,dx
  438438:	nop
  438439:	jle    0x43843f
  43843b:	test   DWORD PTR [ebp+0x25],eax
  43843e:	jecxz  0x438484
  438440:	outs   dx,BYTE PTR ds:[esi]
  438441:	and    al,0x3d
  438443:	dec    ecx
  438444:	jg     0x438430
  438446:	mov    esi,0xf96f0047
  43844b:	arpl   di,ax
  43844d:	xchg   edi,eax
  43844e:	inc    ebx
  43844f:	mov    bh,0x1
  438451:	outs   dx,BYTE PTR ds:[esi]
  438452:	pop    ebx
  438453:	and    BYTE PTR [ecx+0x5f],cl
  438456:	add    eax,0x437bbf7c
  43845b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43845c:	and    al,0xcb
  43845e:	jg     0x438424
  438460:	add    eax,0x47aaea03
  438465:	aas    
  438466:	stc    
  438467:	arpl   di,ax
  438469:	xchg   edi,eax
  43846a:	inc    eax
  43846b:	outs   dx,DWORD PTR ds:[esi]
  43846c:	add    DWORD PTR [esi],ebx
  43846e:	div    esi
  438470:	dec    eax
  438471:	pop    ds
  438472:	add    eax,0xf9135409
  438477:	out    0x7c,eax
  438479:	lds    ebx,FWORD PTR [edx+eiz*8-0x42]
  43847d:	push   0xffffffc5
  43847f:	sbb    eax,0xc9040025
  438484:	arpl   bx,si
  438486:	clc    
  438487:	(bad)  
  438488:	pop    ebx
  438489:	stos   BYTE PTR es:[edi],al
  43848a:	imul   BYTE PTR [edi-0x308894b8]
  438490:	(bad)  
  438491:	pop    edi
  438492:	inc    eax
  438493:	leave  
  438494:	xor    ah,bl
  438496:	clc    
  438497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438498:	inc    esp
  438499:	or     edi,DWORD PTR [edi+0xb]
  43849c:	add    eax,DWORD PTR [ebp+0x25]
  43849f:	fs mov esi,0x5ba444a2
  4384a5:	(bad)  
  4384a6:	cld    
  4384a7:	xchg   DWORD PTR [eax-0x62],ecx
  4384aa:	inc    esp
  4384ab:	ins    DWORD PTR es:[edi],dx
  4384ac:	dec    eax
  4384ad:	add    BYTE PTR [edi-0x680bf63c],ch
  4384b3:	clc    
  4384b4:	jne    0x438489
  4384b6:	add    bh,BYTE PTR [ebp+0x4]
  4384b9:	jmp    0x4285:0xe99dc38e
  4384c0:	mov    edx,esp
  4384c2:	jg     0x438508
  4384c4:	call   FWORD PTR [esi+0x23]
  4384c7:	inc    ebx
  4384c8:	or     ch,cl
  4384ca:	int    0xd8
  4384cc:	out    dx,eax
  4384cd:	ds mov esi,0x57b48ab5
  4384d3:	stc    
  4384d4:	jne    0x4384a9
  4384d6:	add    bh,BYTE PTR [esp+eax*1-0x16]
  4384da:	dec    esi
  4384db:	lds    edi,FWORD PTR [ebp-0x17]
  4384de:	test   DWORD PTR [edx-0x75],eax
  4384e1:	xchg   esp,eax
  4384e2:	aas    
  4384e3:	stc    
  4384e4:	call   FWORD PTR [esi+0x3]
  4384e7:	inc    ebx
  4384e8:	or     ch,cl
  4384ea:	int    0x78
  4384ec:	lock inc cl
  4384ef:	mov    ch,0x8a
  4384f1:	je     0x43850a
  4384f3:	div    BYTE PTR [ebp-0x27]
  4384f6:	add    bh,BYTE PTR [esp+eax*1-0x16]
  4384fa:	sbb    ch,al
  4384fc:	pop    ebp
  4384fd:	jmp    0x4625c787
  438502:	dec    eax
  438503:	stc    
  438504:	out    dx,al
  438505:	stos   BYTE PTR es:[edi],al
  438506:	add    eax,0xd6ea187c
  43850b:	dec    ebx
  43850c:	mov    edi,DWORD PTR [esp+ebp*8]
  43850f:	div    BYTE PTR [ebp+0x13]
  438512:	add    BYTE PTR [edx-0x70],al
  438515:	lock scas al,BYTE PTR es:[edi]
  438517:	inc    ecx
  438518:	mov    ch,0x8a
  43851a:	and    al,0xe0
  43851c:	inc    ebx
  43851d:	jne    0x43850c
  43851f:	add    al,0x7c
  438521:	add    al,0xea
  438523:	(bad)  
  438524:	jg     0x438508
  438526:	and    DWORD PTR [eax-0x7],eax
  438529:	out    dx,al
  43852a:	add    ah,bl
  43852c:	ret    
  43852d:	jb     0x438545
  43852f:	mov    ds:0xdbe80912,al
  438534:	jge    0x438527
  438536:	(bad)  
  438537:	in     al,dx
  438538:	ret    
  438539:	jb     0x438551
  43853b:	mov    eax,ds:0xaa830312
  438540:	stc    
  438541:	in     eax,dx
  438542:	je     0x4384c9
  438544:	xchg   esi,eax
  438545:	sub    dh,bh
  438547:	enter  0xad7f,0x83
  43854b:	dec    edx
  43854c:	in     eax,0x9
  43854e:	jne    0x438599
  438550:	les    esi,FWORD PTR [edx+0xa]
  438553:	ins    BYTE PTR es:[edi],dx
  438554:	adc    dl,BYTE PTR [edi]
  438556:	sub    DWORD PTR [edx],0x54
  438559:	dec    edx
  43855a:	jne    0x4385b7
  43855c:	les    esi,FWORD PTR [edx+0xe]
  43855f:	pop    edi
  438560:	pop    es
  438561:	add    ebp,eax
  438563:	sub    edi,DWORD PTR [ebp-0xf]
  438566:	jmp    FWORD PTR [esi+edx*4+0xc]
  43856a:	dec    BYTE PTR [eax-0x1d745281]
  438570:	call   0xc48fca64
  438575:	dec    edx
  438576:	and    eax,DWORD PTR [eax]
  438578:	sub    eax,0x25eee284
  43857d:	xor    cl,0xe8
  438580:	ins    DWORD PTR es:[edi],dx
  438581:	mov    esi,ecx
  438583:	jmp    FWORD PTR [edx+ecx*1+0x19]
  438587:	add    al,0x4a
  438589:	clc    
  43858a:	out    0xe5,al
  43858c:	retf   0xf17f
  43858f:	ret    
  438590:	je     0x438594
  438592:	adc    eax,0x6d23b201
  438597:	inc    ebp
  438598:	mov    WORD PTR [ebx-0x53],es
  43859b:	call   0x350eba
  4385a0:	imul   ebp
  4385a2:	cmc    
  4385a3:	inc    DWORD PTR [esi-0x6f847430]
  4385a9:	jmp    0xa4e18787
  4385ae:	inc    ecx
  4385af:	stc    
  4385b0:	test   eax,0x787b8bab
  4385b5:	jmp    0x438590
  4385b7:	add    DWORD PTR [esi-0x6e06bdd0],ebp
  4385bd:	sub    ecx,DWORD PTR [ebx+edi*2+0x1d9ec70]
  4385c4:	outs   dx,BYTE PTR ds:[esi]
  4385c5:	rol    BYTE PTR [ecx-0x7],0x79
  4385c9:	sub    DWORD PTR [ebx+edi*2+0x1d9e798],ecx
  4385d0:	pop    esi
  4385d1:	int3   
  4385d2:	inc    ecx
  4385d3:	stc    
  4385d4:	popa   
  4385d5:	sub    DWORD PTR [ebx+edi*2+0x1d9de70],ecx
  4385dc:	add    BYTE PTR [esi+0x78],bl
  4385df:	inc    edx
  4385e0:	stc    
  4385e1:	dec    ecx
  4385e2:	sub    DWORD PTR [ebx+edi*2+0x1c4e498],ecx
  4385e9:	cs fs inc edx
  4385ec:	stc    
  4385ed:	xor    DWORD PTR [ecx],ebp
  4385ef:	je     0x438634
  4385f1:	mov    edx,gs
  4385f3:	leave  
  4385f4:	sbb    al,0x5
  4385f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4385f7:	sub    edi,esi
  4385f9:	inc    esp
  4385fa:	inc    esp
  4385fb:	jle    0x4385f3
  4385fd:	adc    ebp,ebx
  4385ff:	mov    BYTE PTR [ebx+0x70],bh
  438602:	jmp    0x4385c3
  438604:	add    esi,ebp
  438606:	jg     0x43864f
  438608:	stc    
  438609:	stc    
  43860a:	test   al,0x88
  43860c:	jnp    0x4385a6
  43860e:	jmp    0xf947:0x8bde01bf
  438615:	loope  0x4385bf
  438617:	mov    BYTE PTR [ebx+0x70],bh
  43861a:	jmp    0x432194de
  43861f:	ss dec edx
  438621:	iret   
  438622:	cmc    
  438623:	arpl   di,ax
  438625:	mov    eax,DWORD PTR [ecx+0xd]
  438628:	mov    dl,0xa1
  43862a:	mov    edi,DWORD PTR [esi+0x45]
  43862d:	scas   eax,DWORD PTR es:[edi]
  43862e:	add    DWORD PTR [edi+eax*8-0x69],esp
  438632:	inc    ecx
  438633:	idiv   ch
  438635:	test   eax,0x9f457637
  43863a:	add    DWORD PTR [edi+eax*8+0x77],esp
  43863e:	ds into 
  438640:	repnz add BYTE PTR [ecx+0x7f456b28],ah
  438647:	rcl    ebp,0xf9
  43864a:	jp     0x4386bd
  43864c:	lock pop ebx
  43864e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43864f:	test   DWORD PTR [edi+0x45],0xedadc12b
  438656:	test   BYTE PTR [edi-0x21],ch
  438659:	pop    ebx
  43865a:	jo     0x438653
  43865c:	pop    ds
  43865d:	inc    ebp
  43865e:	adc    eax,ecx
  438660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438661:	in     eax,dx
  438662:	xchg   DWORD PTR [edi-0xe],ebp
  438665:	pop    ebx
  438666:	xchg   eax,edi
  438668:	pop    ss
  438669:	inc    ebp
  43866a:	mov    ebx,0xba00eb77
  43866f:	inc    esi
  438670:	sbb    DWORD PTR [ecx],eax
  438672:	sub    eax,0x2e40eff5
  438677:	div    esp
  438679:	inc    esp
  43867a:	pop    ds
  43867b:	add    DWORD PTR [edi+edi*4+0x7b],ebp
  43867f:	inc    ebx
  438680:	push   ds
  438681:	and    DWORD PTR [ebx+0x4301047f],ecx
  438687:	jmp    0xc663:0xf4ff4a06
  43868e:	xchg   edi,eax
  43868f:	inc    edx
  438690:	cs (bad) 
  438692:	loope  0x438676
  438694:	lods   al,BYTE PTR ds:[esi]
  438695:	inc    esp
  438696:	fild   WORD PTR [eax]
  438698:	or     ch,BYTE PTR [edx-0x40]
  43869b:	push   edx
  43869c:	or     DWORD PTR [eax+edx*8],esi
  43869f:	(bad)  
  4386a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4386a2:	inc    edx
  4386a3:	sti    
  4386a4:	retf   0x6a
  4386a7:	enter  0xc52,0x1c
  4386ab:	mov    ch,0xdc
  4386ad:	retf   
  4386ae:	nop
  4386af:	dec    edx
  4386b0:	sti    
  4386b1:	mov    al,BYTE PTR [esp+ebp*4]
  4386b4:	cmc    
  4386b5:	jp     0x4386d2
  4386b7:	inc    edx
  4386b8:	mov    eax,0xb74276ed
  4386bd:	mov    ch,ah
  4386bf:	mov    ds:0x2def75f5,eax
  4386c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4386c5:	in     eax,dx
  4386c6:	pop    esi
  4386c7:	retf   0x8ab5
  4386ca:	aam    0x6b
  4386cc:	inc    eax
  4386cd:	jne    0x4386c7
  4386cf:	int    0xd9
  4386d1:	lock inc esi
  4386d3:	ret    0x6d75
  4386d6:	xrelease xchg BYTE PTR [esi+0x1f],ch
  4386da:	inc    ecx
  4386db:	out    dx,al
  4386dc:	imul   dh
  4386de:	cs (bad) 
  4386e0:	jne    0x43874f
  4386e2:	dec    DWORD PTR [eax+0x71]
  4386e5:	or     BYTE PTR [ecx],dl
  4386e7:	mov    edx,0xc616eef6
  4386ec:	jne    0x43875b
  4386ee:	div    DWORD PTR [ebx]
  4386f0:	jno    0x43870b
  4386f2:	adc    DWORD PTR [ecx-0x13],eax
  4386f5:	out    dx,al
  4386f6:	(bad)  
  4386f7:	mov    eax,ds:0x49ea0477
  4386fc:	dec    eax
  4386fd:	loop   0x438770
  4386ff:	leave  
  438700:	stc    
  438701:	out    dx,al
  438702:	stos   BYTE PTR es:[edi],al
  438703:	pop    edx
  438704:	fs out dx,al
  438706:	fiadd  WORD PTR [ebp-0x4b]
  438709:	sub    BYTE PTR [eax+eax*1],0x98
  43870d:	repz inc ebp
  43870f:	or     cl,BYTE PTR [ecx]
  438711:	sub    BYTE PTR [ebx],0x0
  438714:	fdivr  QWORD PTR [edx+eiz*8-0x5d]
  438718:	(bad)  
  438719:	jg     0x43870c
  43871b:	adc    DWORD PTR [edx-0x168af5a8],0x27
  438722:	pop    esp
  438723:	cld    
  438724:	and    BYTE PTR [eax+0x58a283ad],al
  43872a:	out    dx,eax
  43872b:	je     0x4386d6
  43872d:	daa    
  43872e:	dec    eax
  43872f:	cld    
  438730:	add    BYTE PTR [eax+0x588283ad],al
  438736:	lock je 0x4386f3
  438739:	daa    
  43873a:	cmp    ecx,edi
  43873c:	adc    BYTE PTR [edi+0x6d],bh
  43873f:	jge    0x4386e6
  438741:	cmp    al,0x1
  438743:	test   BYTE PTR [edi+edi*1-0x1028fff6],ah
  43874a:	bnd call eax
  43874d:	jnp    0x4387bc
  43874f:	jge    0x4387ca
  438751:	cmp    al,0x7b
  438753:	sbb    eax,0xfed01dc
  438758:	sbb    cl,BYTE PTR [esi-0x1e]
  43875b:	push   ss
  43875c:	xchg   esi,eax
  43875d:	jg     0x438750
  43875f:	and    DWORD PTR [edx],0x45
  438762:	in     eax,dx
  438763:	jae    0x4387a6
  438765:	daa    
  438766:	add    ah,bh
  438768:	mov    al,ds:0x23e8ad7f
  43876d:	xor    esi,ecx
  43876f:	inc    DWORD PTR [eax]
  438771:	pop    esp
  438772:	mov    ebx,0xba1b1672
  438777:	or     al,ch
  438779:	das    
  43877a:	xor    esi,ecx
  43877c:	jmp    FWORD PTR [ebx+edi*4+0x72]
  438780:	push   ss
  438781:	sub    bh,BYTE PTR [edx+0x342be808]
  438787:	icebp  
  438788:	jmp    FWORD PTR [esp+edi*4]
  43878b:	jb     0x4387a3
  43878d:	xchg   bl,ah
  43878f:	mov    cl,0xe
  438791:	fimul  WORD PTR [ecx]
  438793:	xor    edi,ecx
  438795:	jmp    0x85495201
  43879a:	sub    eax,0xafbbe7dd
  43879f:	dec    ebx
  4387a0:	stc    
  4387a1:	lds    esp,FWORD PTR [edi-0x36]
  4387a4:	adc    DWORD PTR [ecx+0x437d1356],eax
  4387aa:	out    0x1a,eax
  4387ac:	jae    0x438745
  4387ae:	rol    DWORD PTR [esi-0x8],0xb1
  4387b2:	ret    
  4387b3:	xchg   DWORD PTR [ebx+0x7c],edi
  4387b6:	call   0xa8f19371
  4387bb:	das    
  4387bc:	stc    
  4387bd:	cdq    
  4387be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4387bf:	and    dh,BYTE PTR [esi-0x42b39c73]
  4387c5:	std    
  4387c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4387c7:	or     al,0xff
  4387c9:	retf   0x873c
  4387cc:	inc    ebx
  4387cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4387ce:	fadd   QWORD PTR [edi-0x18]
  4387d1:	pop    ebp
  4387d2:	xchg   esp,eax
  4387d3:	dec    esp
  4387d4:	stc    
  4387d5:	add    BYTE PTR ds:0xdb001107,al
  4387db:	push   ss
  4387dc:	and    edx,DWORD PTR [ecx+0x7d4c395e]
  4387e2:	shl    ebp,cl
  4387e4:	pop    es
  4387e5:	or     DWORD PTR [ebx],eax
  4387e7:	jl     0x4387f4
  4387e9:	add    BYTE PTR [esi+0x39f59c53],al
  4387ef:	pop    ecx
  4387f0:	dec    eax
  4387f1:	jge    0x4387a6
  4387f3:	stc    
  4387f4:	add    eax,0xaf539373
  4387f9:	mul    DWORD PTR [ecx]
  4387fb:	icebp  
  4387fc:	test   BYTE PTR [ebx-0x74],bh
  4387ff:	fcomp  QWORD PTR [ebx]
  438801:	or     DWORD PTR [ebx],0xffffffdc
  438804:	or     al,BYTE PTR [eax]
  438806:	push   ds
  438807:	inc    ebx
  438808:	dec    ebp
  438809:	cmp    eax,0x85a3f1ff
  43880e:	jge    0x438868
  438810:	jecxz  0x4387c8
  438812:	xchg   esp,eax
  438813:	fiadd  DWORD PTR [ecx+0x3c]
  438816:	out    dx,eax
  438817:	icebp  
  438818:	arpl   WORD PTR [edi-0x791fba75],di
  43881e:	pusha  
  43881f:	inc    edx
  438820:	loope  0x438825
  438822:	fimul  WORD PTR [ebx+0x5cf41bc]
  438828:	fs mov edi,0x13164597
  43882e:	scas   al,BYTE PTR es:[edi]
  43882f:	mov    BYTE PTR [ecx-0x23a50bf],bl
  438835:	or     eax,0x2c1476ab
  43883a:	add    BYTE PTR [eax-0x13],ah
  43883d:	outs   dx,DWORD PTR ds:[esi]
  43883e:	inc    ecx
  43883f:	fcmovnb st,st(5)
  438841:	cmc    
  438842:	sbb    DWORD PTR [edx+0x542be777],ecx
  438848:	in     eax,dx
  438849:	addr16 inc ecx
  43884b:	inc    ebx
  43884c:	(bad)
  43884f:	test   DWORD PTR [edi-0xe],esi
  438852:	sub    edx,DWORD PTR [ebx-0x14bec016]
  438858:	outs   dx,DWORD PTR ds:[esi]
  438859:	sti    
  43885a:	add    al,0xd5
  43885c:	xor    bl,BYTE PTR [ecx+0x21]
  43885f:	push   ebx
  438860:	icebp  
  438861:	aaa    
  438862:	inc    ebp
  438863:	shr    DWORD PTR [edi-0x29],cl
  438866:	or     ebp,edx
  438868:	push   ebx
  438869:	sbb    DWORD PTR [eax],edx
  43886b:	ds icebp 
  43886d:	jne    0xb727c530
  438873:	cwde   
  438874:	(bad)  
  438876:	cmp    al,0x2f
  438878:	icebp  
  438879:	and    eax,DWORD PTR [ebp-0x3f17a763]
  43887f:	xchg   dl,bl
  438881:	or     esp,edi
  438883:	dec    esi
  438884:	jmp    0x438874
  438886:	add    bh,BYTE PTR [edx+ebx*8-0xc]
  43888a:	jecxz  0x4388d2
  43888c:	jmp    0x438858
  43888e:	jb     0x438850
  438890:	push   esi
  438891:	or     DWORD PTR [ebx+ebp*8],ebp
  438894:	ins    DWORD PTR es:[edi],dx
  438895:	inc    ebp
  438896:	or     al,BYTE PTR [eax-0x5df01e51]
  43889c:	jmp    0x43888c
  43889e:	push   0x0
  4388a0:	sbb    BYTE PTR [ebx+0xa],dl
  4388a3:	cmp    al,0x75
  4388a5:	fcmovu st,st(3)
  4388a7:	mov    dh,0x46
  4388a9:	jmp    0x438835
  4388ab:	and    al,0x90
  4388ad:	out    dx,eax
  4388ae:	jne    0x4388e8
  4388b0:	push   0xfffffffc
  4388b2:	repz xchg esi,eax
  4388b4:	inc    esi
  4388b5:	scas   eax,DWORD PTR es:[edi]
  4388b6:	mov    cl,BYTE PTR [esp+ecx*4]
  4388b9:	icebp  
  4388ba:	jne    0x438894
  4388bc:	ins    DWORD PTR es:[edi],dx
  4388bd:	mov    bh,0xf6
  4388bf:	jle    0x438907
  4388c1:	outs   dx,DWORD PTR ds:[esi]
  4388c2:	ins    DWORD PTR es:[edi],dx
  4388c3:	jecxz  0x43884f
  4388c5:	jne    0x4388fb
  4388c7:	or     DWORD PTR [esi],0xca66eef8
  4388cd:	ins    DWORD PTR es:[edi],dx
  4388ce:	ins    DWORD PTR es:[edi],dx
  4388cf:	test   DWORD PTR [ebx-0x16bee68d],0x24eeef1
  4388d9:	ins    BYTE PTR es:[edi],dx
  4388da:	add    al,0xea
  4388dc:	sbb    BYTE PTR [edi-0x1e],cl
  4388df:	mov    DWORD PTR [ebx+0xa2aeee9],ebx
  4388e5:	ins    BYTE PTR es:[edi],dx
  4388e6:	sbb    dl,ch
  4388e8:	adc    BYTE PTR [ecx-0x1e],al
  4388eb:	je     0x43896b
  4388ed:	jmp    0x463bf3e0
  4388f2:	or     ebx,DWORD PTR [ecx+eax*4-0x39ec7f26]
  4388f9:	jmp    0xc6ba89c8
  4388fe:	idiv   edi
  438900:	sbb    BYTE PTR [ebp+eax*4+0x45350045],al
  438907:	dec    ebx
  438908:	and    ebx,DWORD PTR [eax+ecx*1+0x302c020e]
  43890f:	dec    ebx
  438910:	and    esp,DWORD PTR [eax]
  438912:	cli    
  438913:	in     al,dx
  438914:	pandn  mm0,QWORD PTR [ebx+0xa]
  438918:	(bad)  
  438919:	mov    ds:0x8d7d6ee4,al
  43891e:	aas    
  43891f:	jnp    0x438927
  438921:	mov    bh,0xf
  438923:	cmc    
  438924:	call   FWORD PTR [eax]
  438926:	test   BYTE PTR [ebp-0x43c083bb],al
  43892c:	or     BYTE PTR [edx],bh
  43892e:	cmp    al,BYTE PTR [ebx+eax*1+0x4c9c4af]
  438935:	sbb    BYTE PTR [edi-0x1c62ba37],dl
  43893b:	out    dx,al
  43893c:	jmp    FWORD PTR [edi-0x33ba0e7c]
  438942:	sub    eax,0x11f224b
  438947:	or     eax,0xe245920f
  43894c:	xor    eax,0xc3f12fe5
  438951:	hlt    
  438952:	adc    DWORD PTR [ecx],ecx
  438954:	rol    esi,1
  438956:	mov    ebp,0xf9e40652
  43895b:	or     eax,0x833ee10f
  438960:	add    al,0xe9
  438962:	inc    ebx
  438963:	or     al,BYTE PTR [ebx-0x2f0ec561]
  438969:	add    ah,ah
  43896b:	loope  0x438975
  43896d:	ror    DWORD PTR [esi+0x6c0642bd],1
  438973:	das    
  438974:	dec    ebx
  438975:	and    eax,DWORD PTR [esi+0x61dc157]
  43897b:	mov    esi,0xdf9b08e8
  438980:	and    bh,dh
  438982:	pop    ds
  438983:	lock das 
  438985:	mov    ebp,0x8eb9dfd
  43898a:	rcr    al,1
  43898c:	out    dx,al
  43898d:	mov    ds:0xa0eeeb7a,eax
  438992:	jb     0x438973
  438994:	out    dx,al
  438995:	test   eax,0xa8eee37a
  43899a:	jb     0x438983
  43899c:	out    dx,al
  43899d:	or     BYTE PTR [edx-0x25],bl
  4389a0:	and    eax,DWORD PTR [eax+eax*8]
  4389a3:	and    eax,0x1dfcff06
  4389a8:	jmp    0x4389b2
  4389aa:	adc    cl,ah
  4389ac:	cdq    
  4389ad:	add    al,0x10
  4389af:	fmul   QWORD PTR [edx]
  4389b1:	jge    0x438979
  4389b3:	in     al,0x2f
  4389b5:	ror    al,1
  4389b7:	sbb    eax,0xbfc50006
  4389bc:	rcr    DWORD PTR [eax+eiz*4],0x1d
  4389c0:	in     al,dx
  4389c1:	jg     0x4389de
  4389c3:	sti    
  4389c4:	push   DWORD PTR [edx-0x78]
  4389c7:	shl    DWORD PTR [ebx-0x9],0x89
  4389cb:	pop    edi
  4389cc:	dec    esp
  4389cd:	test   DWORD PTR [eax],eax
  4389cf:	retf   
  4389d0:	cmp    bh,bh
  4389d2:	mov    cl,0x86
  4389d4:	dec    edi
  4389d5:	xchg   esi,eax
  4389d6:	je     0x438988
  4389d8:	push   edi
  4389d9:	bound  esi,QWORD PTR [esp+ebp*4+0x3f]
  4389dd:	popa   
  4389de:	je     0x438978
  4389e0:	inc    edi
  4389e1:	push   0x67ef9474
  4389e6:	je     0x438988
  4389e8:	mul    DWORD PTR [eax+0x74]
  4389eb:	pushf  
  4389ec:	fbld   TBYTE PTR [ebx+0x74]
  4389ef:	push   0xb26fe542
  4389f4:	and    ch,cl
  4389f6:	jo     0x4389b2
  4389f8:	dec    esp
  4389f9:	aad    0x6d
  4389fb:	mov    dl,0x48
  4389fd:	mov    ebp,0xc5549a6e
  438a02:	scas   eax,DWORD PTR es:[edi]
  438a03:	xchg   ebp,eax
  438a04:	push   eax
  438a05:	lods   eax,DWORD PTR ds:[esi]
  438a06:	mov    al,0x95
  438a08:	cmp    al,0xb5
  438a0a:	lods   eax,DWORD PTR ds:[esi]
  438a0b:	xchg   ebp,eax
  438a0c:	cmp    BYTE PTR [ebp+0x254475ae],bl
  438a12:	or     eax,0x8dc4072
  438a17:	les    eax,FWORD PTR [edi-0x77fcfd1e]
  438a1d:	add    al,0xd
  438a1f:	adc    al,0x3b
  438a21:	jbe    0x438a2b
  438a23:	or     al,0x42
  438a25:	loope  0x4389a7
  438a27:	mov    BYTE PTR [esi-0x48],0x54
  438a2b:	les    eax,FWORD PTR [edi-0x11fcfc1e]
  438a31:	sbb    eax,0x87bf00e1
  438a36:	ret    
  438a37:	sub    DWORD PTR ds:0x87b6e820,0xffffffda
  438a3e:	sub    BYTE PTR [ebx],bh
  438a40:	lahf   
  438a41:	in     eax,dx
  438a42:	mov    ds:0xe0214589,eax
  438a47:	jne    0x438ac7
  438a49:	mov    edi,0x46868e5c
  438a4e:	loope  0x438a53
  438a50:	sub    ebp,0x63
  438a53:	inc    esp
  438a54:	sub    ch,0x30
  438a57:	inc    ecx
  438a58:	outs   dx,DWORD PTR ds:[esi]
  438a59:	xchg   DWORD PTR [esi+edi*1],eax
  438a5c:	lds    esp,FWORD PTR [eax]
  438a5e:	popa   
  438a5f:	mov    edi,0x5ae3d83
  438a64:	outs   dx,BYTE PTR ds:[esi]
  438a65:	and    ecx,DWORD PTR [edx+0x3d]
  438a68:	dec    edi
  438a69:	add    DWORD PTR [edx],ecx
  438a6b:	bound  eax,QWORD PTR [ecx+0x4e]
  438a6e:	push   DWORD PTR [esi-0x6e]
  438a71:	mov    ecx,0x3a827785
  438a76:	or     ch,cl
  438a78:	xchg   BYTE PTR [edx-0x75],al
  438a7b:	sub    DWORD PTR [esi-0x15],edi
  438a7e:	fldcw  WORD PTR [edx]
  438a80:	arpl   WORD PTR [ecx+0x4f41072b],ax
  438a86:	mov    bh,BYTE PTR [edi+eiz*1+0x3a]
  438a8a:	jne    0x438a7b
  438a8c:	pop    ebp
  438a8d:	hlt    
  438a8e:	icebp  
  438a8f:	out    dx,al
  438a90:	ret    0x82af
  438a93:	sub    al,0xe7
  438a95:	cmp    DWORD PTR [eax-0x39ffff0f],edi
  438a9b:	jg     0x438a86
  438a9d:	jns    0x438ae1
  438a9f:	or     ch,dl
  438aa1:	test   DWORD PTR [edi-0x36],ebp
  438aa4:	in     eax,dx
  438aa5:	call   0xa56:0xc8a6cb12
  438aac:	jmp    0x24c6cd36
  438ab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438ab2:	cmp    DWORD PTR [eax-0x50d67ad7],edi
  438ab8:	jmp    0xf8b2cd42
  438abd:	pop    ebp
  438abe:	ds clc 
  438ac0:	mov    fs,WORD PTR [edx+0x6f]
  438ac3:	ins    DWORD PTR es:[edi],dx
  438ac4:	fild   WORD PTR [edx+0x12910868]
  438aca:	jmp    0x74bb:0xda4676ee
  438ad1:	ret    0x82e9
  438ad4:	lods   al,BYTE PTR ds:[esi]
  438ad5:	lahf   
  438ad6:	jmp    0x438b1d
  438ad8:	or     al,BYTE PTR [edi]
  438ada:	sub    BYTE PTR [ebx],0xeb
  438add:	mov    BYTE PTR [ecx],0x45
  438ae0:	repz test DWORD PTR [edx+0xa],eax
  438ae4:	add    BYTE PTR [edi-0x45],ch
  438ae7:	dec    edx
  438ae8:	and    esp,DWORD PTR [eax+0x76]
  438aeb:	dec    edx
  438aec:	add    DWORD PTR [edx+0x6f],edx
  438aef:	or     al,BYTE PTR [eax]
  438af1:	das    
  438af2:	scas   eax,DWORD PTR es:[edi]
  438af3:	sbb    eax,ebp
  438af5:	jns    0x438b2b
  438af7:	icebp  
  438af8:	call   FWORD PTR [esp+ebp*4+0xa000118]
  438aff:	cdq    
  438b00:	ins    DWORD PTR es:[edi],dx
  438b01:	jge    0x438b1c
  438b03:	inc    edi
  438b04:	je     0x438b69
  438b06:	ja     0x438aca
  438b08:	icebp  
  438b09:	call   DWORD PTR [eax]
  438b0b:	sub    al,0x33
  438b0d:	rcr    BYTE PTR [edi],0x40
  438b10:	or     bh,BYTE PTR [ecx+ebx*1-0x47]
  438b14:	scas   eax,DWORD PTR es:[edi]
  438b15:	rcl    ebp,0x42
  438b18:	xchg   ecx,eax
  438b1a:	pop    esp
  438b1b:	and    eax,0x39d58301
  438b20:	jnp    0x438b2d
  438b22:	ins    BYTE PTR es:[edi],dx
  438b23:	sub    eax,0x1ead740a
  438b28:	push   eax
  438b29:	clc    
  438b2a:	adc    BYTE PTR [eax],ch
  438b2c:	lods   eax,DWORD PTR ds:[esi]
  438b2d:	adc    DWORD PTR ds:0x2c377b39,0x2d
  438b34:	lock je 0x438ae0
  438b37:	pop    ss
  438b38:	inc    eax
  438b39:	clc    
  438b3a:	adc    BYTE PTR [eax],ch
  438b3c:	lods   eax,DWORD PTR ds:[esi]
  438b3d:	adc    DWORD PTR [esi],0x44
  438b40:	jnp    0x438b48
  438b42:	pop    es
  438b43:	add    bh,dh
  438b45:	inc    DWORD PTR [eax]
  438b47:	test   BYTE PTR [ebp-0x7],ch
  438b4a:	test   eax,0xd3e808b2
  438b4f:	daa    
  438b50:	icebp  
  438b51:	jmp    FWORD PTR [ebx+eax*8]
  438b54:	test   BYTE PTR [edi],0x5a
  438b57:	inc    ecx
  438b58:	loop   0x438b8b
  438b5a:	out    0x27,eax
  438b5c:	icebp  
  438b5d:	ret    
  438b5e:	xchg   BYTE PTR [eax+0x2d],bl
  438b61:	or     DWORD PTR [eax],eax
  438b63:	fninit 
  438b65:	and    ah,BYTE PTR [edx]
  438b67:	pop    esi
  438b68:	test   BYTE PTR [ebx],dh
  438b6a:	mov    ebp,0xf939e25e
  438b6f:	dec    ecx
  438b70:	pusha  
  438b71:	leave  
  438b72:	adc    eax,0x7ce7a687
  438b77:	ret    
  438b78:	clc    
  438b79:	add    al,0xbd
  438b7b:	dec    ecx
  438b7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438b7d:	or     al,0x0
  438b7f:	xchg   cl,bl
  438b81:	or     al,BYTE PTR [ebp-0x4dfc0735]
  438b87:	(bad)  
  438b88:	(bad)  
  438b8a:	mov    eax,0x790ad986
  438b8f:	ja     0x438bd2
  438b91:	icebp  
  438b92:	repnz add esp,ebx
  438b95:	xchg   DWORD PTR [ebx-0x70],edi
  438b98:	fdiv   QWORD PTR [eax+0x3c08de2d]
  438b9e:	stc    
  438b9f:	jmp    0x87037d3b
  438ba4:	(bad)  [edx]
  438ba6:	jl     0x438b4b
  438ba8:	jb     0x438bef
  438baa:	mov    edi,0xbf7de4dc
  438baf:	add    eax,0xbc7d03fa
  438bb4:	or     bh,BYTE PTR [edx-0x25dfafc]
  438bba:	jae    0x438b53
  438bbc:	rol    DWORD PTR [ebx-0xf],1
  438bbf:	test   eax,0x9c7d47d3
  438bc4:	or     edi,DWORD PTR [edx-0x6351ffff]
  438bca:	cmp    edi,ecx
  438bcc:	xchg   ecx,eax
  438bcd:	xchg   edi,eax
  438bce:	and    dh,BYTE PTR [ecx-0x7acb8c6e]
  438bd4:	retf   
  438bd5:	adc    eax,0x42a54306
  438bda:	rcl    BYTE PTR fs:[edx-0x3abddbbc],0x4c
  438be2:	loope  0x438be7
  438be4:	xchg   BYTE PTR [edx+0x6c],al
  438be7:	sar    BYTE PTR [edx+0x39],0x6f
  438beb:	ret    
  438bec:	push   eax
  438bed:	daa    
  438bee:	jo     0x438bf3
  438bf0:	xchg   BYTE PTR [edx-0x48],al
  438bf3:	sbb    ch,BYTE PTR [esi]
  438bf5:	push   cs
  438bf6:	xor    eax,0xa5c63f3a
  438bfb:	adc    DWORD PTR [edx-0x52792092],ecx
  438c01:	push   eax
  438c02:	fild   QWORD PTR [edi+0x117dc589]
  438c08:	xchg   DWORD PTR [ecx-0x1d],ebp
  438c0b:	cs push ecx
  438c0d:	fisub  DWORD PTR [eax+0x32]
  438c10:	pminsw mm4,QWORD PTR [ebx]
  438c13:	clc    
  438c14:	inc    ecx
  438c15:	inc    ebx
  438c16:	loope  0x438c1b
  438c18:	jp     0x438c48
  438c1a:	jp     0x438c62
  438c1c:	xor    ebp,ebx
  438c1e:	in     al,0x8a
  438c20:	sub    esi,eax
  438c22:	ror    DWORD PTR [ecx],0x63
  438c25:	in     al,dx
  438c26:	into   
  438c27:	scas   al,BYTE PTR es:[edi]
  438c28:	je     0x438bef
  438c2a:	leave  
  438c2b:	or     al,0x0
  438c2d:	dec    ebp
  438c2e:	and    ah,BYTE PTR [ebx+edi*1-0x35]
  438c32:	jne    0x438c10
  438c34:	test   BYTE PTR [ecx-0x51edcabc],bh
  438c3a:	(bad)  
  438c3b:	nop
  438c3c:	cmp    DWORD PTR [edi+0x7f3e6405],ebp
  438c42:	outs   dx,DWORD PTR ds:[esi]
  438c43:	in     al,dx
  438c44:	test   BYTE PTR [ecx-0x51fe02c6],bl
  438c4a:	jg     0x438cbc
  438c4c:	cmp    DWORD PTR [edi-0x6a0366fb],ecx
  438c52:	jmp    0x85570260
  438c57:	adc    al,0xe8
  438c59:	cmp    BYTE PTR [esi-0x75],al
  438c5c:	lods   al,BYTE PTR ds:[esi]
  438c5d:	push   0xffffffe7
  438c5f:	retf   
  438c60:	sub    DWORD PTR es:[edi+0xa],ecx
  438c64:	jmp    0xa4c6ceee
  438c69:	bound  edi,QWORD PTR [edx]
  438c6b:	mov    eax,0xaf2d84a9
  438c70:	jmp    0xd8b2cefa
  438c75:	ins    DWORD PTR es:[edi],dx
  438c76:	xchg   dh,dh
  438c78:	cs jg  0x438ce2
  438c7b:	ins    DWORD PTR es:[edi],dx
  438c7c:	inc    DWORD PTR [esi+0x7f112c6c]
  438c82:	repz out dx,al
  438c84:	push   ss
  438c85:	retf   
  438c86:	sub    eax,0x4285e9ca
  438c8b:	outs   dx,BYTE PTR ds:[esi]
  438c8c:	fdiv   st(4),st
  438c8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438c8f:	enter  0x13,0x86
  438c93:	ror    eax,0x6a
  438c96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438c97:	cmp    ecx,DWORD PTR [ebx+0x87580f3]
  438c9d:	sar    DWORD PTR [edx+0x42deeef4],1
  438ca3:	(bad)  
  438ca5:	ficomp DWORD PTR [esi+0x782482eb]
  438cab:	jmp    0x854e96f5
  438cb0:	sub    ebp,ebx
  438cb2:	inc    edx
  438cb3:	add    eax,DWORD PTR [ebp-0x2d]
  438cb6:	test   DWORD PTR [edx+0xa],eax
  438cb9:	jmp    0xf66f11c8
  438cbe:	aaa    
  438cbf:	or     BYTE PTR [ecx],0xdc
  438cc2:	cs inc edx
  438cc4:	or     ch,cl
  438cc6:	fimul  WORD PTR [edi-0x1e]
  438cc9:	jecxz  0x438d34
  438ccb:	jmp    0x438cbb
  438ccd:	add    BYTE PTR [eax+esi*4],bl
  438cd0:	sbb    BYTE PTR ds:0x7d6d3c93,al
  438cd6:	popa   
  438cd7:	inc    ebx
  438cd8:	jno    0x438cdc
  438cda:	add    al,0xee
  438cdc:	out    0xb5,al
  438cde:	shr    DWORD PTR [edx],1
  438ce0:	icebp  
  438ce1:	ret    
  438ce2:	mov    bh,BYTE PTR [esi+0xa]
  438ce5:	add    BYTE PTR [edi-0x50],ch
  438ce8:	sub    ecx,DWORD PTR [ecx+0x4e884ad]
  438cee:	(bad)  
  438cef:	test   BYTE PTR [ebp-0x1f],ch
  438cf2:	pop    eax
  438cf3:	mov    edi,0x2000cf7
  438cf8:	aaa    
  438cf9:	ins    DWORD PTR es:[edi],dx
  438cfa:	stc    
  438cfb:	daa    
  438cfc:	mov    al,0xff
  438cfe:	out    0xb3,eax
  438d00:	xor    ecx,esi
  438d02:	call   FWORD PTR [esi+edi*4-0x9]
  438d06:	lar    eax,WORD PTR [edx-0x1e]
  438d0a:	mov    DWORD PTR [ecx+0x2a],esi
  438d0d:	icebp  
  438d0e:	ret    
  438d0f:	ja     0x438cc0
  438d11:	(bad)  
  438d13:	or     BYTE PTR [edx+ecx*2+0xda8ee1a],bh
  438d1a:	and    DWORD PTR [edx],0xffffffdf
  438d1d:	in     al,dx
  438d1e:	ret    0x220
  438d21:	adc    eax,0xa43df00
  438d26:	mov    esi,DWORD PTR [edx-0x5049fe1d]
  438d2c:	cmp    eax,0x43dfbf33
  438d31:	or     bh,BYTE PTR [edi-0x52]
  438d34:	sbb    ebp,DWORD PTR [edx+0x6d2ff8f3]
  438d3a:	jge    0x438d0d
  438d3c:	call   0x145ab4b1
  438d41:	stc    
  438d42:	dec    DWORD PTR [eax]
  438d44:	test   BYTE PTR [ebx],dh
  438d46:	rol    BYTE PTR [esi+0x1a000ad9],0xf3
  438d4d:	jge    0x438d0d
  438d4f:	(bad)  
  438d50:	ror    DWORD PTR [ecx],cl
  438d52:	xchg   edi,eax
  438d54:	pop    esp
  438d55:	and    eax,0x1730509
  438d5a:	jae    0x438d5c
  438d5c:	lea    ebx,[ebp+ebp*1+0x7]
  438d60:	cli    
  438d61:	xlat   BYTE PTR ds:[ebx]
  438d62:	and    ch,BYTE PTR [esi]
  438d64:	jo     0x438cee
  438d66:	aaa    
  438d67:	mov    ebp,0xf93b366e
  438d6c:	pop    ecx
  438d6d:	fs leave 
  438d6f:	adc    eax,0x7ceb9687
  438d74:	ret    
  438d75:	cmp    al,0xc
  438d77:	mov    ebp,0x109649
  438d7c:	xchg   cl,bl
  438d7e:	or     al,BYTE PTR [ebp-0x4df80335]
  438d84:	(bad)  
  438d85:	(bad)  
  438d87:	mov    eax,0x790ad986
  438d8c:	ja     0x438dcf
  438d8e:	mov    ebp,0x8b4011ec
  438d93:	jnp    0x438e05
  438d95:	loopne 0x438d4b
  438d97:	dec    ebp
  438d98:	out    dx,al
  438d99:	in     al,dx
  438d9a:	cmp    ecx,edi
  438d9c:	stc    
  438d9d:	sbb    esi,ecx
  438d9f:	mov    edi,0x7c0ad986
  438da4:	inc    ebx
  438da5:	jb     0x438df0
  438da7:	mov    edi,0xbf7dd4ec
  438dac:	add    eax,0xcc7d07fa
  438db1:	in     al,dx
  438db2:	mov    ecx,0x39f8de01
  438db7:	stc    
  438db8:	rcr    DWORD PTR [ebx+0x2e8bf68b],0xf0
  438dbf:	out    0x0,eax
  438dc1:	fild   DWORD PTR [ecx-0x72]
  438dc4:	ss scas eax,DWORD PTR es:[edi]
  438dc6:	add    ah,BYTE PTR [ecx+edi*1-0x74]
  438dca:	ins    DWORD PTR es:[edi],dx
  438dcb:	icebp  
  438dcc:	adc    BYTE PTR [ecx+0x131b1541],0xe9
  438dd3:	clc    
  438dd4:	mov    eax,0x30a0da77
  438dd9:	jg     0x438dc1
  438ddb:	mov    ds:0xf6367082,eax
  438de0:	or     dh,bl
  438de2:	jmp    0x438ddc
  438de4:	mov    bh,0x87
  438de6:	ficom  DWORD PTR [eax+0x23e65f30]
  438dec:	sub    edi,ebx
  438dee:	lock aas 
  438df0:	or     eax,DWORD PTR ss:[eax+0x21c504eb]
  438df7:	shl    BYTE PTR fs:[edx+0x4a472440],0xf7
  438dff:	or     BYTE PTR [ebp+0x3e0e632],dh
  438e05:	xchg   BYTE PTR [edx-0x1f],al
  438e08:	add    eax,DWORD PTR [esi+0x1b839142]
  438e0e:	out    0x14,al
  438e10:	adc    eax,DWORD PTR [esi+0xab1f142]
  438e16:	out    0xe0,al
  438e18:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  438e1e:	inc    edx
  438e1f:	mov    bh,0x7e
  438e21:	repz in eax,0xa4
  438e24:	adc    DWORD PTR [eax],eax
  438e26:	xchg   BYTE PTR [edx+0x15],al
  438e29:	mov    ah,0xe2
  438e2b:	in     eax,0xe0
  438e2d:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  438e33:	inc    edx
  438e34:	std    
  438e35:	mov    ebx,ecx
  438e37:	in     eax,0xe0
  438e39:	adc    eax,DWORD PTR [esi-0x89af5be]
  438e3f:	out    0xee,al
  438e41:	jmp    0xe94dd0cb
  438e46:	test   DWORD PTR [edx+0xa],eax
  438e49:	jg     0x438e5a
  438e4b:	call   0x42bac03e
  438e50:	or     cl,BYTE PTR ds:0xe9eee6d7
  438e56:	test   DWORD PTR [edx+0xa],eax
  438e59:	jmp    0x8d4dd0e3
  438e5e:	movntq (bad),mm5
  438e5f:	out    0xee,eax
  438e61:	and    DWORD PTR [edi+0x37510a42],edx
  438e67:	out    0xee,al
  438e69:	jmp    0xe94dd0f3
  438e6e:	test   DWORD PTR [edx+0xa],eax
  438e71:	jmp    0x438e7c
  438e73:	out    0xee,eax
  438e75:	jge    0x438eee
  438e77:	inc    edx
  438e78:	or     dl,BYTE PTR [ecx-0x16111a10]
  438e7e:	test   DWORD PTR [edx+0xa],eax
  438e81:	jmp    0x674dd10b
  438e86:	(bad)  
  438e87:	out    0xee,al
  438e89:	xchg   ebp,eax
  438e8a:	add    BYTE PTR [ebx-0x2df6f5be],dl
  438e90:	in     eax,0xee
  438e92:	jmp    0xe94dd11c
  438e97:	test   DWORD PTR [edx+0xa],eax
  438e9a:	dec    edi
  438e9b:	or     edi,esp
  438e9d:	out    dx,al
  438e9e:	inc    ebp
  438e9f:	xchg   edx,eax
  438ea0:	inc    edx
  438ea1:	or     al,BYTE PTR ds:0xe9eee621
  438ea7:	test   DWORD PTR [edx+0xa],eax
  438eaa:	jmp    0x314dd134
  438eaf:	add    bh,ah
  438eb1:	out    dx,al
  438eb2:	cdq    
  438eb3:	add    BYTE PTR [edx+0xa],0x0
  438eb7:	add    esi,DWORD PTR [ecx+0x40afffed]
  438ebd:	or     al,BYTE PTR [eax]
  438ebf:	scas   eax,DWORD PTR es:[edi]
  438ec0:	inc    eax
  438ec1:	or     al,BYTE PTR [eax]
  438ec3:	mov    ebx,0x37ffecbd
  438ec8:	push   ecx
  438ec9:	or     al,BYTE PTR [eax]
  438ecb:	pop    ss
  438ecc:	xchg   esp,eax
  438ecd:	in     eax,dx
  438ece:	jmp    FWORD PTR [edi-0x60fff5c0]
  438ed4:	inc    eax
  438ed5:	or     al,BYTE PTR [eax]
  438ed7:	retf   
  438ed8:	iret   
  438ed9:	in     al,dx
  438eda:	call   FWORD PTR [ebx-0x78fff5cd]
  438ee0:	mov    cl,0xed
  438ee2:	call   FWORD PTR [edi+0x40]
  438ee5:	or     al,BYTE PTR [eax]
  438ee7:	pop    edi
  438ee8:	inc    eax
  438ee9:	or     al,BYTE PTR [eax]
  438eeb:	das    
  438eec:	shr    esp,1
  438eee:	inc    DWORD PTR [eax]
  438ef0:	jnp    0x438f43
  438ef2:	or     al,BYTE PTR [eax]
  438ef4:	pop    ss
  438ef5:	mov    bl,0xed
  438ef7:	call   FWORD PTR [edi+0x40]
  438efa:	or     al,BYTE PTR [eax]
  438efc:	das    
  438efd:	inc    eax
  438efe:	or     al,BYTE PTR [eax]
  438f00:	lods   eax,DWORD PTR ds:[esi]
  438f01:	shr    ah,1
  438f03:	dec    DWORD PTR [ebx+0x3f000a51]
  438f09:	mov    cl,0xed
  438f0b:	jmp    FWORD PTR [edi]
  438f0d:	inc    eax
  438f0e:	or     al,BYTE PTR [eax]
  438f10:	das    
  438f11:	inc    eax
  438f12:	or     al,BYTE PTR [eax]
  438f14:	(bad)  
  438f15:	shr    ah,1
  438f17:	push   DWORD PTR [ebx+0x4f]
  438f1a:	or     al,BYTE PTR [eax]
  438f1c:	setbe  ch
  438f1f:	(bad)  
  438f20:	out    dx,eax
  438f21:	aas    
  438f22:	or     al,BYTE PTR [eax]
  438f24:	fistp  QWORD PTR [edi]
  438f26:	or     al,BYTE PTR [eax]
  438f28:	cdq    
  438f29:	int3   
  438f2a:	in     al,dx
  438f2b:	call   DWORD PTR [ebx-0x79fff5b8]
  438f31:	(bad)  [edx]
  438f33:	add    BYTE PTR [esi-0x79fff527],al
  438f39:	(bad)  [edx]
  438f3b:	add    BYTE PTR [esi-0x79fff527],al
  438f41:	(bad)  [edx]
  438f43:	add    BYTE PTR [esi-0x56027ce9],al
  438f49:	xor    eax,0x43a1fd83
  438f4e:	cmp    ebp,0xffffff99
  438f51:	addr16 cmp ebp,0x0
  438f55:	xchg   ecx,eax
  438f56:	jg     0x438edb
  438f58:	std    
  438f59:	mov    DWORD PTR [ecx-0x387e027e],ebx
  438f5f:	cmp    ch,0x79
  438f62:	mov    bl,0x82
  438f64:	std    
  438f65:	jno    0x438fd2
  438f67:	cmp    ebp,0x69
  438f6a:	out    dx,eax
  438f6b:	jb     0x438f6a
  438f6d:	popa   
  438f6e:	cmp    DWORD PTR [esi-0x3],ebp
  438f71:	pop    ecx
  438f72:	inc    edi
  438f73:	outs   dx,BYTE PTR ds:[esi]
  438f74:	std    
  438f75:	push   ecx
  438f76:	lds    esi,FWORD PTR [edx-0x3]
  438f79:	dec    ecx
  438f7a:	div    DWORD PTR [edx-0x3]
  438f7d:	inc    ecx
  438f7e:	push   DWORD PTR [edx-0x3]
  438f81:	cmp    DWORD PTR [edi-0x40ce0292],eax
  438f87:	ins    DWORD PTR es:[edi],dx
  438f88:	std    
  438f89:	sub    DWORD PTR [edi],edx
  438f8b:	outs   dx,BYTE PTR ds:[esi]
  438f8c:	std    
  438f8d:	and    DWORD PTR [ebx],ebp
  438f8f:	outs   dx,BYTE PTR ds:[esi]
  438f90:	std    
  438f91:	sbb    DWORD PTR [ecx+0x6e],eax
  438f94:	std    
  438f95:	adc    DWORD PTR [edi+0x6e],ecx
  438f98:	std    
  438f99:	or     DWORD PTR [ebx],eax
  438f9b:	outs   dx,BYTE PTR ds:[esi]
  438f9c:	std    
  438f9d:	add    DWORD PTR [ebx-0x39060293],ebp
  438fa3:	ins    DWORD PTR es:[edi],dx
  438fa4:	std    
  438fa5:	icebp  
  438fa6:	pop    esi
  438fa7:	ins    DWORD PTR es:[edi],dx
  438fa8:	std    
  438fa9:	jmp    0xe3c00eef
  438fae:	loop   0x438f52
  438fb0:	jl     0x438f8d
  438fb2:	loop   0x438f60
  438fb4:	jl     0x438f89
  438fb6:	loop   0x438f80
  438fb8:	jl     0x438fba
  438fba:	retf   
  438fbb:	loop   0x438f85
  438fbd:	jl     0x438f82
  438fbf:	loop   0x438fa7
  438fc1:	jge    0x438f7e
  438fc3:	loop   0x438f9d
  438fc5:	jge    0x438f7a
  438fc7:	loop   0x438fdd
  438fc9:	mov    ebp,DWORD PTR [ebx-0x79fc1f1e]
  438fcf:	inc    edx
  438fd0:	stos   DWORD PTR es:[edi],eax
  438fd1:	sbb    DWORD PTR [ebx-0x6c7e4b1e],0x8b81aae2
  438fdb:	loop   0x43900f
  438fdd:	add    DWORD PTR [ebx+0x7b8150e2],0x7381fae2
  438fe7:	loop   0x438fed
  438fe9:	sub    BYTE PTR [ebx-0x1e],0x4
  438fed:	and    DWORD PTR [ebx-0x1e],0xffffffe0
  438ff1:	add    eax,DWORD PTR [esi+0x53806742]
  438ff7:	loop   0x438feb
  438ff9:	or     BYTE PTR [ebx-0x1e],0x48
  438ffd:	jg     0x439042
  438fff:	loop   0x439065
  439001:	cmp    BYTE PTR [ebx],0xe2
  439004:	mov    eax,0xc4e23380
  439009:	sub    BYTE PTR [ebx],0xe2
  43900c:	enter  0x2380,0xe2
  439010:	mov    edx,0xa0e21b80
  439015:	adc    BYTE PTR [ebx],0xe2
  439018:	aam    0x80
  43901a:	or     esp,edx
  43901c:	fadd   DWORD PTR [eax+0x18e20300]
  439022:	jg     0x43901f
  439024:	loope  0x43902f
  439026:	push   ebx
  439027:	push   es
  439028:	loopne 0x439018
  43902a:	and    DWORD PTR [ecx-0x21],ebp
  43902d:	out    dx,al
  43902e:	rol    DWORD PTR [esi],0xe0
  439031:	out    dx,al
  439032:	jmp    0x794dd2bc
  439037:	cmc    
  439038:	fucomip st,st(6)
  43903a:	jmp    0x474dd2c4
  43903f:	repz fsubp st(6),st
  439042:	pop    ecx
  439043:	jmp    0x439023
  439045:	out    dx,al
  439046:	(bad)  
  439047:	jecxz  0x439027
  439049:	out    dx,al
  43904a:	jae    0x439027
  43904c:	fsubp  st(6),st
  43904e:	mov    bh,0xf3
  439050:	fsubp  st(6),st
  439052:	xchg   ebx,ebp
  439054:	fsubp  st(6),st
  439056:	fwait
  439057:	jecxz  0x439037
  439059:	out    dx,al
  43905a:	(bad)  
  43905b:	fcmovnu st,st(6)
  43905d:	out    dx,al
  43905e:	repz xor esi,ebx
  439061:	out    dx,al
  439062:	xlat   BYTE PTR ds:[ebx]
  439063:	sub    esi,ebx
  439065:	out    dx,al
  439066:	iret   
  439067:	and    esi,ebx
  439069:	out    dx,al
  43906a:	mov    bh,0x19
  43906c:	fsubp  st(6),st
  43906e:	mov    bl,0x31
  439070:	fsubp  st(6),st
  439072:	lds    ebp,FWORD PTR [ecx]
  439074:	fsubp  st(6),st
  439076:	fbld   TBYTE PTR [ecx]
  439078:	fsubp  st(6),st
  43907a:	gs push ss
  43907c:	fsubp  st(6),st
  43907e:	pop    ebp
  43907f:	neg    ch
  439081:	out    dx,al
  439082:	test   DWORD PTR [eax],eax
  439084:	neg    ch
  439086:	out    dx,al
  439087:	sub    esi,esi
  439089:	fucomp st(6)
  43908b:	or     eax,0x1deeddf6
  439090:	(bad)  
  439091:	fucomp st(6)
  439093:	stc    
  439094:	call   0xe1077f76
  439099:	fucomp st(6)
  43909b:	iret   
  43909c:	fcomp  st(5)
  43909e:	out    dx,al
  43909f:	add    BYTE PTR ds:0xdffedb0,bl
  4390a5:	mov    al,0xed
  4390a7:	jmp    FWORD PTR [ebp-0x50]
  4390aa:	in     eax,dx
  4390ab:	jmp    DWORD PTR [edi-0x4f]
  4390ae:	in     eax,dx
  4390af:	jmp    DWORD PTR [ebx-0x50]
  4390b2:	in     eax,dx
  4390b3:	call   FWORD PTR [ecx-0x50]
  4390b6:	in     eax,dx
  4390b7:	dec    DWORD PTR [ebx]
  4390b9:	mov    al,0xed
  4390bb:	push   ebp
  4390bd:	scas   eax,DWORD PTR es:[edi]
  4390be:	in     eax,dx
  4390bf:	(bad)  
  4390c0:	stc    
  4390c1:	scas   eax,DWORD PTR es:[edi]
  4390c2:	in     eax,dx
  4390c3:	call   FWORD PTR [ebx]
  4390c5:	mov    al,0xed
  4390c7:	push   ebx
  4390c9:	scas   eax,DWORD PTR es:[edi]
  4390ca:	in     eax,dx
  4390cb:	jmp    FWORD PTR [ecx-0x51]
  4390ce:	in     eax,dx
  4390cf:	inc    DWORD PTR [edi-0x4200126c]
  4390d5:	xchg   edx,eax
  4390d6:	in     eax,dx
  4390d7:	jmp    DWORD PTR [ebx-0x6c]
  4390da:	in     eax,dx
  4390db:	dec    DWORD PTR [edi-0x6c]
  4390de:	in     eax,dx
  4390df:	dec    DWORD PTR [edi-0x7a00126c]
  4390e5:	xchg   esp,eax
  4390e6:	in     eax,dx
  4390e7:	inc    DWORD PTR [eax]
  4390e9:	out    0x91,eax
  4390eb:	in     eax,dx
  4390ec:	(bad)  
  4390ed:	mov    ecx,0xf9ffed91
  4390f2:	xchg   ecx,eax
  4390f3:	in     eax,dx
  4390f4:	jmp    FWORD PTR [ebx-0x4000126f]
  4390fa:	xchg   ecx,eax
  4390fb:	in     eax,dx
  4390fc:	jmp    FWORD PTR [ebp-0x3600126f]
  439102:	xchg   ecx,eax
  439103:	in     eax,dx
  439104:	call   DWORD PTR [ecx-0x6d]
  439107:	in     eax,dx
  439108:	jmp    FWORD PTR ds:0xe7ffed93
  43910e:	xchg   edx,eax
  43910f:	in     eax,dx
  439110:	dec    DWORD PTR [edi]
  439112:	xchg   ebx,eax
  439113:	in     eax,dx
  439114:	push   ecx
  439116:	xchg   edx,eax
  439117:	in     eax,dx
  439118:	inc    DWORD PTR [esi+0x9fcba61]
  43911e:	push   esp
  43911f:	mov    edx,0xba7201fc
  439124:	cld    
  439125:	stc    
  439126:	cmp    DWORD PTR [edx-0x45de0e04],0xba4de9fc
  439130:	cld    
  439131:	loope  0x439126
  439133:	sahf   
  439134:	cld    
  439135:	(bad)  
  439137:	sahf   
  439138:	cld    
  439139:	shl    edi,1
  43913b:	mov    bh,ch
  43913d:	leave  
  43913e:	in     eax,dx
  43913f:	mov    bh,ch
  439141:	shr    DWORD PTR [ecx],0x86
  439144:	std    
  439145:	mov    ecx,0xb1fd8639
  43914a:	pop    edi
  43914b:	pushf  
  43914c:	std    
  43914d:	add    BYTE PTR [ecx-0x5e02638d],ch
  439153:	outs   dx,DWORD PTR ds:[esi]
  439154:	pushf  
  439155:	std    
  439156:	cdq    
  439157:	and    ebx,DWORD PTR [ebp+edi*8-0x263b26f]
  43915e:	mov    DWORD PTR [ecx],esp
  439160:	mov    ds:0xa32781fc,eax
  439165:	cld    
  439166:	jns    0x43915b
  439168:	mov    ds:0xa3f571fc,eax
  43916d:	cld    
  43916e:	imul   edi,edi,0x6761fca3
  439174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439175:	cld    
  439176:	pop    ecx
  439177:	(bad)  
  439178:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439179:	cld    
  43917a:	push   ecx
  43917b:	adc    esp,DWORD PTR [esp+edi*8-0x35bc2b7]
  439182:	inc    ecx
  439183:	sub    DWORD PTR [esp+edi*8-0x35c4cc7],esp
  43918a:	xor    DWORD PTR [edi-0x5c],esi
  43918d:	cld    
  43918e:	sub    DWORD PTR [ecx-0x5c],edi
  439191:	cld    
  439192:	and    DWORD PTR [edx-0x5b],eax
  439195:	test   eax,0xa97cdf1a
  43919a:	adc    bl,bh
  43919c:	mov    edx,0xaadf0aa9
  4391a1:	test   eax,0xa9c8df02
  4391a6:	cli    
  4391a7:	(bad)  
  4391a9:	test   eax,0xa9dadef2
  4391ae:	jmp    0xdee2:0xa9e8de
  4391b5:	int3   
  4391b6:	lods   al,BYTE PTR ds:[esi]
  4391b7:	fcmovu st,st(6)
  4391b9:	shr    BYTE PTR [edx+edx*8-0x35535922],0xde
  4391c1:	cwde   
  4391c2:	lods   al,BYTE PTR ds:[esi]
  4391c3:	ret    0x82de
  4391c6:	lods   al,BYTE PTR ds:[esi]
  4391c7:	mov    edx,0xb2ac56de
  4391cc:	fisubr WORD PTR [edx-0x54]
  4391cf:	stos   BYTE PTR es:[edi],al
  4391d0:	ficomp WORD PTR [esi]
  4391d2:	lods   eax,DWORD PTR ds:[esi]
  4391d3:	mov    ds:0x9aad16de,al
  4391d8:	fisubr WORD PTR [esi]
  4391da:	lods   eax,DWORD PTR ds:[esi]
  4391db:	xchg   edx,eax
  4391dc:	faddp  st(4),st
  4391de:	lods   al,BYTE PTR ds:[esi]
  4391df:	mov    bl,dh
  4391e1:	and    al,0xad
  4391e3:	sbb    dh,0xce
  4391e6:	lods   al,BYTE PTR ds:[esi]
  4391e7:	jp     0x4391c7
  4391e9:	cli    
  4391ea:	lods   al,BYTE PTR ds:[esi]
  4391eb:	jb     0x4391cb
  4391ed:	ins    BYTE PTR es:[edi],dx
  4391ee:	stos   DWORD PTR es:[edi],eax
  4391ef:	push   0xffffffde
  4391f1:	xchg   BYTE PTR [ebx-0x54d3219e],ch
  4391f7:	pop    edx
  4391f8:	fisub  WORD PTR [esi]
  4391fa:	stos   DWORD PTR es:[edi],eax
  4391fb:	push   edx
  4391fc:	ficomp WORD PTR [edx+0x6ede4aab]
  439202:	stos   DWORD PTR es:[edi],eax
  439203:	inc    edx
  439204:	fimul  WORD PTR [ebx+ebp*4+0x3a]
  439208:	fisub  WORD PTR [ebx+ebp*4+0x32]
  43920c:	fimul  WORD PTR [ecx]
  43920e:	mov    ebx,0x8deededd
  439213:	in     eax,dx
  439214:	fsubp  st(6),st
  439216:	mov    ch,0x0
  439218:	in     eax,dx
  439219:	fsubp  st(6),st
  43921b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43921c:	fstp   st(6)
  43921e:	out    dx,al
  43921f:	fstp   st(5)
  439221:	fsubp  st(6),st
  439223:	leave  
  439224:	sub    eax,0x2dddeedf
  439229:	fucomip st,st(6)
  43922b:	jmp    0xfa32714d
  439230:	xor    ebx,edi
  439232:	out    dx,al
  439233:	(bad)  
  439235:	fucomip st,st(6)
  439237:	mov    ecx,0xa1eedf13
  43923c:	sbb    ebx,edi
  43923e:	out    dx,al
  43923f:	mov    DWORD PTR [ebx],edx
  439241:	fucomip st,st(6)
  439243:	popa   
  439244:	sti    
  439245:	fsubp  st(6),st
  439247:	push   ebp
  439248:	repz fsubp st(6),st
  43924b:	pop    ds
  43924c:	sti    
  43924d:	fsubp  st(6),st
  43924f:	and    eax,0x29eedef3
  439254:	fcmovnu st,st(6)
  439256:	out    dx,al
  439257:	fst    st(2)
  439259:	fsubp  st(6),st
  43925b:	(bad)  
  43925c:	fcmovu st,st(6)
  43925e:	out    dx,al
  43925f:	call   edx
  439261:	fsubp  st(6),st
  439263:	jmp    0x923270a2
  439268:	xor    dh,bl
  43926a:	out    dx,al
  43926b:	icebp  
  43926c:	and    ebx,esi
  43926e:	out    dx,al
  43926f:	cdq    
  439270:	xor    dh,bl
  439272:	out    dx,al
  439273:	jmp    0xdd4dd4fd
  439278:	hlt    
  439279:	fsubp  st(6),st
  43927b:	leave  
  43927c:	add    ah,dh
  43927e:	fsubp  st(6),st
  439280:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439281:	hlt    
  439282:	fsubp  st(6),st
  439284:	jmp    0x4dd50e
  439289:	aaa    
  43928a:	inc    ecx
  43928b:	or     al,BYTE PTR [eax-0x7ff5beca]
  439291:	sbb    eax,0x29800a41
  439296:	inc    ecx
  439297:	or     al,BYTE PTR [eax+0xa412f]
  43929d:	pop    ebx
  43929e:	pop    ebx
  43929f:	in     eax,dx
  4392a0:	push   DWORD PTR [ecx+0x45ffed5b]
  4392a6:	pop    ebx
  4392a7:	in     eax,dx
  4392a8:	(bad)  
  4392a9:	out    dx,eax
  4392aa:	inc    eax
  4392ab:	or     al,BYTE PTR [eax]
  4392ad:	dec    ebp
  4392ae:	pop    ebx
  4392af:	in     eax,dx
  4392b0:	push   DWORD PTR [ecx+0x5a]
  4392b3:	in     eax,dx
  4392b4:	inc    DWORD PTR ds:0x9bffed5a
  4392ba:	pop    ebx
  4392bb:	in     eax,dx
  4392bc:	jmp    FWORD PTR [ebx+0x6dffed5b]
  4392c2:	pop    ebx
  4392c3:	in     eax,dx
  4392c4:	dec    DWORD PTR [ecx-0x260012a5]
  4392ca:	pop    ecx
  4392cb:	in     eax,dx
  4392cc:	jmp    FWORD PTR [ebx-0x3c0012a7]
  4392d2:	pop    edx
  4392d3:	in     eax,dx
  4392d4:	(bad)  
  4392d5:	stc    
  4392d6:	pop    edx
  4392d7:	in     eax,dx
  4392d8:	(bad)  
  4392d9:	in     eax,dx
  4392da:	pop    edx
  4392db:	in     eax,dx
  4392dc:	inc    DWORD PTR [ecx+0x5b]
  4392df:	in     eax,dx
  4392e0:	inc    DWORD PTR [eax]
  4392e2:	cmp    eax,0xe3ffed5b
  4392e7:	pop    ecx
  4392e8:	in     eax,dx
  4392e9:	inc    DWORD PTR [edi-0x6a0012a8]
  4392ef:	pop    eax
  4392f0:	in     eax,dx
  4392f1:	call   DWORD PTR [ecx-0x7e0012a8]
  4392f7:	pop    eax
  4392f8:	in     eax,dx
  4392f9:	call   DWORD PTR [ecx+0x40]
  4392fc:	or     al,BYTE PTR [eax-0x12a5e1]
  439302:	xchg   BYTE PTR [edi],dh
  439304:	je     0x439303
  439306:	inc    ecx
  439307:	jmp    0xfd72:0x1986000a
  43930e:	xor    edx,ebp
  439310:	or     al,BYTE PTR [eax]
  439312:	xchg   BYTE PTR [ecx-0x2dde027a],bh
  439318:	xchg   ch,bh
  43931a:	sbb    edx,esi
  43931c:	xchg   ch,bh
  43931e:	adc    DWORD PTR [edx-0x7e],eax
  439321:	std    
  439322:	or     esi,ebp
  439324:	xchg   ch,bh
  439326:	add    esp,ebx
  439328:	outs   dx,BYTE PTR ds:[esi]
  439329:	std    
  43932a:	stc    
  43932b:	and    eax,0x29f1fd8a
  439330:	mov    bh,ch
  439332:	jmp    0xe2411d50
  439337:	or     DWORD PTR [edx-0x78b02603],0xfffffffd
  43933e:	shl    DWORD PTR [ecx-0x79],1
  439341:	std    
  439342:	leave  
  439343:	jg     0x4392cc
  439345:	std    
  439346:	add    cl,al
  439348:	ja     0x87594d4b
  43934e:	std    
  43934f:	mov    cl,0x3f
  439351:	xchg   ebp,edi
  439353:	test   eax,0xa1fd8741
  439358:	repz xchg ebp,edi
  43935b:	cdq    
  43935c:	jmp    0x69d590e8
  439361:	mov    bh,ch
  439363:	mov    DWORD PTR [ebp-0x76],ebx
  439366:	std    
  439367:	add    DWORD PTR [ebp+0x4d79fd8a],0xa371fd8a
  439371:	mov    ebp,edi
  439373:	imul   edi,DWORD PTR [ebx-0x409e0277],0x4259fd89
  43937d:	fld    QWORD PTR [eax-0x7f0d24ad]
  439383:	dec    ebx
  439384:	fild   DWORD PTR [eax]
  439386:	add    DWORD PTR [ebx-0x25],0xdb3b80ec
  43938d:	add    al,0x81
  43938f:	xor    ebx,ebx
  439391:	mov    eax,0x98db2b80
  439396:	and    BYTE PTR [ebx],0xdb
  439399:	enter  0x1b80,0xdb
  43939d:	mov    WORD PTR [eax-0x7d3b24ed],es
  4393a3:	or     ebx,ebx
  4393a5:	call   0x151e972c
  4393aa:	add    BYTE PTR [eax],0xfb
  4393ad:	(bad)  
  4393af:	xor    ebx,0xeb8228da
  4393b5:	fisubr DWORD PTR [eax]
  4393b7:	and    bl,0xda
  4393ba:	cmp    al,BYTE PTR [edx-0x7e652525]
  4393c0:	rcr    edx,cl
  4393c2:	outs   dx,BYTE PTR ds:[esi]
  4393c3:	or     ebx,0xc38164da
  4393c9:	ficomp DWORD PTR [eax-0x7e]
  4393cc:	mov    ebx,0xb37f72da
  4393d1:	fidiv  DWORD PTR [esi]
  4393d3:	sub    BYTE PTR [ebx-0x5c7dbb26],0xda
  4393da:	inc    eax
  4393db:	sbb    BYTE PTR [ebx-0x6c7dcd26],0xda
  4393e2:	and    al,0x82
  4393e4:	mov    ebx,edx
  4393e6:	push   ss
  4393e7:	test   BYTE PTR [ebx+0x7b834eda],al
  4393ed:	fisub  DWORD PTR [ebx+eax*4+0x73]
  4393f1:	fidiv  DWORD PTR [eax]
  4393f3:	sub    DWORD PTR [ebx-0x26],0x9
  4393f7:	stos   DWORD PTR es:[edi],eax
  4393f8:	add    eax,0x59beed8
  4393fd:	fsubr  st,st(6)
  4393ff:	dec    ebx
  439400:	add    eax,0x555eed8
  439405:	fsubr  st,st(6)
  439407:	out    dx,eax
  439408:	or     bl,al
  43940a:	out    dx,al
  43940b:	icebp  
  43940c:	add    bl,al
  43940e:	out    dx,al
  43940f:	cmp    eax,0xeed80b00
  439414:	push   ecx
  439415:	add    ebx,eax
  439417:	out    dx,al
  439418:	adc    ecx,DWORD PTR [ebx]
  43941a:	fsubr  st,st(6)
  43941c:	and    eax,DWORD PTR [ebx]
  43941e:	fsubr  st,st(6)
  439420:	gs or  ebx,eax
  439423:	out    dx,al
  439424:	push   ecx
  439425:	add    ebx,eax
  439427:	out    dx,al
  439428:	jae    0x439435
  43942a:	fsubr  st,st(6)
  43942c:	pop    ebp
  43942d:	add    ebx,eax
  43942f:	out    dx,al
  439430:	xchg   DWORD PTR [ebx],ecx
  439432:	fsubr  st,st(6)
  439434:	pop    DWORD PTR [ebx]
  439436:	fsubr  st,st(6)
  439438:	xchg   ebx,eax
  439439:	or     ebx,eax
  43943b:	out    dx,al
  43943c:	popf   
  43943d:	add    ebx,eax
  43943f:	out    dx,al
  439440:	and    eax,0x15eed808
  439445:	add    al,bl
  439447:	out    dx,al
  439448:	invd   
  43944a:	fsubr  st,st(6)
  43944c:	sti    
  43944d:	add    ebx,eax
  43944f:	out    dx,al
  439450:	mov    DWORD PTR ds:0x5cfeed8,0x593eed8
  43945a:	fsubr  st,st(6)
  43945c:	mov    ds:0xd9eed805,eax
  439461:	pop    es
  439462:	fsubr  st,st(6)
  439464:	retf   
  439465:	pop    es
  439466:	fsubr  st,st(6)
  439468:	stc    
  439469:	pop    es
  43946a:	xlat   BYTE PTR ds:[ebx]
  43946b:	out    dx,al
  43946c:	xchg   edi,eax
  43946d:	stc    
  43946e:	xlat   BYTE PTR ds:[ebx]
  43946f:	out    dx,al
  439470:	add    bh,bh
  439472:	pop    eax
  439473:	in     eax,dx
  439474:	inc    DWORD PTR [eax]
  439476:	aaa    
  439477:	pop    ecx
  439478:	in     eax,dx
  439479:	dec    ecx
  43947b:	pop    ecx
  43947c:	in     eax,dx
  43947d:	dec    ecx
  43947f:	pop    ecx
  439480:	in     eax,dx
  439481:	call   ebp
  439483:	pop    ecx
  439484:	in     eax,dx
  439485:	jmp    FWORD PTR [ebx-0x3b]
  439488:	in     al,dx
  439489:	(bad)  
  43948a:	inc    ebx
  43948c:	in     al,dx
  43948d:	(bad)  
  43948e:	jmp    0x5a438156
  439493:	(bad)  
  439494:	in     al,dx
  439495:	call   FWORD PTR [ebp-0x4200133b]
  43949b:	(bad)
  43949e:	add    eax,ebp
  4394a0:	in     al,dx
  4394a1:	jmp    FWORD PTR [edi+0x5fffecc5]
  4394a7:	(bad)
  4394aa:	(bad)
  4394ad:	(bad)  
  4394ae:	out    dx,eax
  4394af:	inc    esp
  4394b0:	or     al,BYTE PTR [eax]
  4394b2:	in     eax,0xb3
  4394b4:	in     al,dx
  4394b5:	(bad)  
  4394b6:	fnsave [ebx-0x51740014]
  4394bc:	in     al,dx
  4394bd:	push   DWORD PTR [edi-0x52]
  4394c0:	in     al,dx
  4394c1:	call   FWORD PTR [edi]
  4394c3:	mov    ch,0xec
  4394c5:	(bad)  
  4394c6:	out    dx,eax
  4394c7:	mov    ah,0xec
  4394c9:	inc    DWORD PTR [ecx-0x4b]
  4394cc:	in     al,dx
  4394cd:	jmp    FWORD PTR ds:0x55ffecb5
  4394d3:	scas   al,BYTE PTR es:[edi]
  4394d4:	in     al,dx
  4394d5:	call   DWORD PTR [ecx+0xffecae]
  4394db:	outs   dx,DWORD PTR ds:[esi]
  4394dc:	scas   al,BYTE PTR es:[edi]
  4394dd:	in     al,dx
  4394de:	call   FWORD PTR [ebx-0x6600134c]
  4394e4:	mov    ah,0xec
  4394e6:	jmp    ebp
  4394e8:	pop    ecx
  4394e9:	in     eax,dx
  4394ea:	inc    DWORD PTR [esi+0x79fd71c5]
  4394f0:	call   0xfd72:0x8471fd71
  4394f7:	imul   esi,DWORD PTR [esi+0x72],0x71d061fd
  4394fe:	std    
  4394ff:	pop    ecx
  439500:	inc    edx
  439501:	jno    0x439500
  439503:	push   ecx
  439504:	cwde   
  439505:	jno    0x439504
  439507:	dec    ecx
  439508:	stos   BYTE PTR es:[edi],al
  439509:	jno    0x439508
  43950b:	inc    ecx
  43950c:	jmp    0xa:0xdb86000a
  439513:	push   es
  439514:	push   ds
  439515:	js     0x439514
  439517:	sub    ebx,edi
  439519:	or     al,BYTE PTR [eax]
  43951b:	push   es
  43951c:	out    0xa,eax
  43951e:	add    BYTE PTR [esi],al
  439520:	jmp    0x43952c
  439522:	add    BYTE PTR [esi],al
  439524:	xor    al,0x78
  439526:	std    
  439527:	or     edi,esp
  439529:	or     al,BYTE PTR [eax]
  43952b:	push   es
  43952c:	jmp    0xa249953b
  439531:	jo     0x439530
  439533:	icebp  
  439534:	std    
  439535:	jo     0x439534
  439537:	jmp    0x643a019
  43953c:	pop    ebp
  43953d:	or     eax,DWORD PTR [eax]
  43953f:	add    BYTE PTR [esi],al
  439541:	(bad)  
  439542:	jo     0x439541
  439544:	rcr    ebx,1
  439546:	je     0x439545
  439548:	leave  
  439549:	iret   
  43954a:	or     al,BYTE PTR [eax]
  43954c:	push   es
  43954d:	xlat   BYTE PTR ds:[ebx]
  43954e:	or     al,BYTE PTR [eax]
  439550:	push   es
  439551:	outs   dx,BYTE PTR ds:[esi]
  439552:	push   es
  439553:	add    BYTE PTR [esi],al
  439555:	in     al,dx
  439556:	or     al,BYTE PTR [eax]
  439558:	push   es
  439559:	icebp  
  43955a:	or     al,BYTE PTR [eax]
  43955c:	push   es
  43955d:	jmp    0xa:0xdf99fd74
  439564:	push   es
  439565:	inc    ebx
  439566:	in     eax,dx
  439567:	add    eax,DWORD PTR [esi-0x7c86633e]
  43956d:	xlat   BYTE PTR ds:[ebx]
  43956e:	mov    ds:0x58d77b79,al
  439573:	jns    0x4395e8
  439575:	xlat   BYTE PTR ds:[ebx]
  439576:	pop    ss
  439577:	add    al,0x86
  439579:	ret    0x3d0
  43957c:	xchg   dl,al
  43957e:	jecxz  0x439583
  439580:	xchg   dl,al
  439582:	rol    DWORD PTR [ebx],cl
  439584:	xchg   dl,al
  439586:	rol    BYTE PTR [ebx],1
  439588:	xchg   dl,al
  43958a:	loopne 0x43958f
  43958c:	xchg   BYTE PTR [edx-0x71],al
  43958f:	xchg   ebp,eax
  439590:	cmp    edx,edi
  439592:	and    BYTE PTR [ebp-0x6ac528cd],dl
  439598:	sub    edx,edi
  43959a:	adc    al,0x95
  43959c:	and    edx,edi
  43959e:	push   ss
  43959f:	xchg   ebp,eax
  4395a0:	sbb    edx,edi
  4395a2:	dec    eax
  4395a3:	xchg   ebp,eax
  4395a4:	add    BYTE PTR [ebx],dl
  4395a6:	xlat   BYTE PTR ds:[ebx]
  4395a7:	adc    BYTE PTR [ebp-0x6af128f5],dl
  4395ad:	add    edx,edi
  4395af:	in     al,0x91
  4395b1:	sti    
  4395b2:	(bad)  
  4395b3:	not    BYTE PTR [ecx-0x6e3f290d]
  4395b9:	jmp    0x439591
  4395bb:	ficom  DWORD PTR [ecx-0x6e53291d]
  4395c1:	fcmovnbe st,st(6)
  4395c3:	mov    al,ds:0x32d6d391
  4395c8:	xchg   edx,eax
  4395c9:	retf   
  4395ca:	(bad)  
  4395cb:	mov    ah,0x91
  4395cd:	ret    
  4395ce:	(bad)  
  4395cf:	cmp    dl,BYTE PTR [edx+0x3e0d6bb]
  4395d5:	xchg   BYTE PTR [edx+0x7b],al
  4395d8:	ja     0x439585
  4395da:	(bad)  
  4395db:	push   0x77
  4395dd:	mov    ds:0x118509d6,eax
  4395e2:	aad    0xee
  4395e4:	cmp    ecx,DWORD PTR [esi]
  4395e6:	aad    0xee
  4395e8:	inc    edi
  4395e9:	push   cs
  4395ea:	aad    0xee
  4395ec:	sub    eax,0xddeed7fe
  4395f1:	icebp  
  4395f2:	xlat   BYTE PTR ds:[ebx]
  4395f3:	out    dx,al
  4395f4:	retf   
  4395f5:	stc    
  4395f6:	xlat   BYTE PTR ds:[ebx]
  4395f7:	out    dx,al
  4395f8:	div    ecx
  4395fa:	xlat   BYTE PTR ds:[ebx]
  4395fb:	out    dx,al
  4395fc:	jmp    0x864dd886
  439601:	xchg   DWORD PTR [ebp+0x60],edi
  439604:	cmc    
  439605:	es push 0x2400d65e
  43960b:	pop    edi
  43960c:	lds    eax,FWORD PTR gs:[edx]
  43960f:	ins    BYTE PTR es:[edi],dx
  439610:	imul   ebx,ebx,0xffffffe6
  439613:	push   0xd5e1bf65
  439618:	out    dx,al
  439619:	push   edx
  43961a:	xchg   DWORD PTR [ebp+0x60],edi
  43961d:	mov    ch,0xe6
  43961f:	addr16 pop esi
  439621:	(bad)  
  439622:	in     al,0x5e
  439624:	vpunpcklbw xmm5,xmm5,XMMWORD PTR gs:[ebx-0x65]
  43962a:	out    0x68,al
  43962c:	gs (bad) 
  43962e:	xor    esi,edx
  439630:	out    dx,al
  439631:	adc    cl,bh
  439633:	jb     0x43969e
  439635:	and    BYTE PTR [ecx],0x84
  439638:	pop    edi
  439639:	jnp    0x43960f
  43963b:	pop    esp
  43963c:	pusha  
  43963d:	xchg   cl,bh
  43963f:	pusha  
  439640:	aas    
  439641:	mov    edi,edi
  439643:	pusha  
  439644:	imul   esi,DWORD PTR [ebp-0x7b],0xffffffc7
  439648:	or     ebp,DWORD PTR [esi]
  43964a:	jmp    0xe793eca0
  43964f:	pop    esi
  439650:	dec    ebx
  439651:	inc    esi
  439652:	jmp    0x862d0cc2
  439657:	add    al,0xc
  439659:	add    BYTE PTR [edi-0x4b],dh
  43965c:	dec    edi
  43965d:	jo     0x4396dc
  43965f:	mov    ch,0x2f
  439661:	ins    BYTE PTR es:[edi],dx
  439662:	inc    ebx
  439663:	scas   eax,DWORD PTR es:[edi]
  439664:	dec    ebp
  439665:	add    ah,ah
  439667:	inc    eax
  439668:	inc    edx
  439669:	gs jle 0x4395fa
  43966c:	das    
  43966d:	ins    BYTE PTR es:[edi],dx
  43966e:	add    BYTE PTR [ebx+0x20004daf],dl
  439674:	inc    eax
  439675:	inc    edx
  439676:	gs jle 0x439607
  439679:	dec    eax
  43967a:	jb     0x4396f6
  43967c:	mov    ch,0xee
  43967e:	call   DWORD PTR [ebp+0x5b654940]
  439684:	icebp  
  439685:	pop    esp
  439686:	outs   dx,DWORD PTR ds:[esi]
  439687:	jl     0x43963e
  439689:	pop    ebp
  43968a:	jae    0x4396a3
  43968c:	mov    ah,0x4f
  43968e:	jo     0x4396bf
  439690:	inc    ecx
  439691:	ret    
  439692:	add    ah,bh
  439694:	mov    bl,0x4f
  439696:	jo     0x439674
  439698:	xchg   edx,eax
  439699:	imul   esp,DWORD PTR [ecx-0x15],0xffffffb3
  43969d:	out    dx,al
  43969e:	dec    ebp
  4396a0:	inc    eax
  4396a1:	inc    edi
  4396a2:	outs   dx,BYTE PTR ds:[esi]
  4396a3:	inc    esi
  4396a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4396a5:	addr16 popa 
  4396a7:	shl    DWORD PTR [edi-0x6d239a8c],cl
  4396ad:	addr16 je 0x4396c6
  4396b0:	mov    ds:0xb43c6c4f,al
  4396b5:	dec    ebp
  4396b6:	je     0x4396be
  4396b8:	scas   al,BYTE PTR es:[edi]
  4396b9:	pusha  
  4396ba:	add    dh,al
  4396bc:	inc    ecx
  4396bd:	ds gs push cs
  4396c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4396c1:	imul   eax,DWORD PTR [ebx+0x5d],0xffffffb8
  4396c5:	jp     0x439730
  4396c7:	cld    
  4396c8:	lahf   
  4396c9:	bound  edx,QWORD PTR [ebx+0x3a]
  4396cc:	mov    ds:0xac50697a,eax
  4396d1:	out    dx,al
  4396d2:	inc    DWORD PTR [eax]
  4396d4:	xchg   ch,bh
  4396d6:	or     al,BYTE PTR [ebx+0x20]
  4396d9:	outs   dx,DWORD PTR ds:[esi]
  4396da:	(bad)  
  4396db:	ins    DWORD PTR es:[edi],dx
  4396dc:	inc    ebp
  4396dd:	sbb    DWORD PTR [ebx-0x5477d08d],edx
  4396e3:	imul   esi,DWORD PTR ds:0x1f73a986,0x14
  4396ea:	cwde   
  4396eb:	dec    DWORD PTR [ecx-0x14bbf567]
  4396f1:	inc    ebp
  4396f2:	(bad)  
  4396f3:	jae    0x4396d8
  4396f5:	sub    BYTE PTR [esi+eiz*2+0x5ea942fa],bh
  4396fc:	fidivr DWORD PTR [eax]
  4396fe:	(bad)  
  4396ff:	pop    esp
  439700:	fidiv  DWORD PTR [edx]
  439702:	xchg   ebp,eax
  439703:	imul   eax,DWORD PTR [esi-0x31bcf40e],0xd44fba42
  43970d:	in     al,dx
  43970e:	test   eax,0xaf8b562
  439713:	add    DWORD PTR [edi-0x3a8c705c],0xa76a9794
  43971d:	jmp    0x4396ad
  43971f:	dec    ebx
  439720:	scas   eax,DWORD PTR es:[edi]
  439721:	add    edx,DWORD PTR [eax-0x114e79b0]
  439727:	dec    esp
  439728:	stos   DWORD PTR es:[edi],eax
  439729:	lea    ebp,[edi-0x47536b93]
  43972f:	dec    edx
  439730:	jno    0x4396ef
  439732:	(bad)  
  439733:	(bad)  
  439734:	stc    
  439735:	pop    esp
  439736:	or     al,0x41
  439738:	add    BYTE PTR [ebx-0x53],ch
  43973b:	leave  
  43973c:	push   0x73a0595b
  439741:	imul   edx,DWORD PTR [edi-0x4b],0x5e
  439745:	imul   eax,esi,0xffffffbd
  439748:	call   ecx
  43974a:	mov    dl,0xee
  43974c:	dec    esp
  43974d:	arpl   WORD PTR [edx+0x4d],ax
  439750:	leave  
  439751:	aaa    
  439752:	pop    ebp
  439753:	aas    
  439754:	cwde   
  439755:	mov    ecx,0x4705f8d3
  43975a:	pop    ebp
  43975b:	push   ebp
  43975c:	rcr    DWORD PTR [esi],1
  43975e:	pop    esi
  43975f:	cs mov al,0x24
  439762:	mov    al,BYTE PTR [edx-0x4e]
  439765:	and    eax,0x91bb3e66
  43976a:	shr    DWORD PTR [ebp+0x13693408],cl
  439770:	cwde   
  439771:	hlt    
  439772:	popa   
  439773:	std    
  439774:	leave  
  439775:	jmp    0x4397d4
  439777:	dec    al
  439779:	stc    
  43977a:	inc    edx
  43977b:	push   ebx
  43977c:	or     BYTE PTR [ebx-0xe57019a],bh
  439782:	inc    edx
  439783:	inc    ebp
  439784:	push   es
  439785:	(bad)  
  439786:	pop    ebp
  439787:	in     eax,dx
  439788:	mov    ecx,0xacf450e4
  43978d:	fisub  WORD PTR [esi+ebx*4-0x65]
  439791:	(bad)  
  439792:	inc    edx
  439793:	cmc    
  439794:	add    eax,0xd0cd5dc7
  439799:	sahf   
  43979a:	pop    esi
  43979b:	(bad)  
  43979c:	scas   eax,DWORD PTR es:[edi]
  43979d:	add    BYTE PTR [esp+edi*2-0x7b5b5026],ah
  4397a4:	ret    0xa4b0
  4397a7:	imul   esp,ecx,0x3
  4397aa:	lds    eax,FWORD PTR [eax-0x58]
  4397ad:	test   al,0x95
  4397af:	jb     0x439744
  4397b1:	mov    dl,0x62
  4397b3:	add    DWORD PTR [ebp-0x6ba29459],0x65d2f196
  4397bd:	add    al,0xab
  4397bf:	push   eax
  4397c0:	jle    0x439766
  4397c2:	push   ebp
  4397c3:	pop    ebp
  4397c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4397c5:	cdq    
  4397c6:	fs or  bh,BYTE PTR fs:[ebp+0xc]
  4397cb:	shr    esi,cl
  4397cd:	test   BYTE PTR [ecx+0x1e506971],0x81
  4397d4:	pop    edi
  4397d5:	pop    ebx
  4397d6:	xlat   BYTE PTR ds:[ebx]
  4397d7:	dec    edi
  4397d8:	pop    esi
  4397d9:	pop    ebp
  4397da:	jecxz  0x43983e
  4397dc:	pop    esi
  4397dd:	inc    esp
  4397de:	aad    0x74
  4397e0:	fs dec esp
  4397e2:	jmp    0x862d1335
  4397e7:	jg     0x4397ee
  4397e9:	inc    ebp
  4397ea:	stc    
  4397eb:	dec    esi
  4397ec:	jl     0x439838
  4397ee:	xlat   BYTE PTR ds:[ebx]
  4397ef:	bound  esp,QWORD PTR [ecx+0x3e]
  4397f2:	mov    cl,BYTE PTR [ebx]
  4397f4:	add    eax,0x7c56110d
  4397f9:	or     ch,BYTE PTR [ebx]
  4397fb:	push   esi
  4397fc:	push   edi
  4397fd:	jmp    0x364eed87
  439802:	add    dl,bh
  439804:	fs pusha 
  439806:	and    al,0xfc
  439808:	fs pusha 
  43980a:	std    
  43980b:	or     al,0xd2
  43980d:	out    dx,al
  43980e:	add    DWORD PTR [ebp-0xe268a7a],0x11c86b68
  439818:	gs inc edx
  43981a:	enter  0x65f7,0x5e
  43981e:	les    eax,FWORD PTR [ebp-0xe55f580]
  439824:	pop    edx
  439825:	jnp    0x4397eb
  439827:	dec    ebp
  439828:	jno    0x43988a
  43982a:	int    0xe1
  43982c:	or     ch,BYTE PTR fs:[eax]
  43982f:	add    BYTE PTR [ebx+0x54c89d65],0x7c
  439836:	fwait
  439837:	cs pop esp
  439839:	jbe    0x4397f4
  43983b:	sbb    ebx,DWORD PTR [ebx+0x6b]
  43983e:	test   BYTE PTR [eax],dl
  439840:	pop    edi
  439841:	inc    ecx
  439842:	add    BYTE PTR [ebx],dl
  439844:	inc    esi
  439845:	inc    edx
  439846:	add    ebp,DWORD PTR [ebx]
  439848:	xchg   ebp,eax
  439849:	dec    ebp
  43984a:	popa   
  43984b:	or     edi,esp
  43984d:	pop    esp
  43984e:	add    al,BYTE PTR gs:[esi+0x24]
  439852:	add    eax,0x7467b880
  439857:	inc    edx
  439858:	xchg   esi,eax
  439859:	pop    esp
  43985a:	outs   dx,DWORD PTR ds:[esi]
  43985b:	cmp    al,0xa9
  43985d:	pop    ebp
  43985e:	jae    0x4397ea
  439860:	test   eax,0xad5d6f63
  439865:	out    dx,al
  439866:	inc    DWORD PTR [eax]
  439868:	sbb    bh,BYTE PTR [edx]
  43986a:	cmp    eax,0x6baa4c79
  43986f:	ins    DWORD PTR es:[edi],dx
  439870:	jae    0x43980f
  439872:	arpl   WORD PTR [ebp-0x3d],sp
  439875:	xchg   ebx,eax
  439876:	dec    eax
  439877:	imul   ecx,DWORD PTR [ebx-0x7596a557],0xf7ffeea9
  439881:	dec    eax
  439882:	dec    ecx
  439883:	arpl   WORD PTR gs:[ecx-0x6f7d9299],bx
  43988a:	popa   
  43988b:	outs   dx,BYTE PTR ds:[esi]
  43988c:	cmp    ch,0x60
  43988f:	dec    ax
  439891:	mov    bh,0x63
  439893:	popa   
  439894:	arpl   WORD PTR [ecx+eiz*2-0x12bad092],bx
  43989b:	add    eax,esp
  43989d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43989e:	jp     0x4398ec
  4398a0:	call   0x3afe84a
  4398a5:	pushf  
  4398a6:	arpl   WORD PTR [ebp+0x2f],sp
  4398a9:	inc    ebp
  4398aa:	jns    0x4398ae
  4398ac:	loopne 0x439855
  4398ae:	jp     0x439903
  4398b0:	(bad)  
  4398b1:	mov    ch,0x7a
  4398b3:	sbb    bl,BYTE PTR gs:[ecx+0x45026d67]
  4398ba:	inc    esp
  4398bb:	add    eax,0x7395c786
  4398c0:	je     0x439911
  4398c2:	test   al,0x69
  4398c4:	cmp    ebx,ebx
  4398c6:	or     al,BYTE PTR [ebx+eax*4-0x41]
  4398ca:	xchg   ebp,eax
  4398cb:	jae    0x4398cd
  4398cd:	push   esp
  4398ce:	mov    esp,0x9a5f6f9f
  4398d3:	or     cl,BYTE PTR [ebx-0x75]
  4398d6:	ja     0x43986d
  4398d8:	jae    0x43990e
  4398da:	jg     0x439883
  4398dc:	imul   eax,DWORD PTR [edi-0x25],0x2e85610a
  4398e3:	xchg   edi,eax
  4398e4:	imul   ebx,DWORD PTR [edx],0x72
  4398e7:	enter  0x1276,0x86
  4398eb:	mov    dl,0x68
  4398ed:	cmp    DWORD PTR [edx-0x7cba9d5e],eax
  4398f3:	stos   DWORD PTR es:[edi],eax
  4398f4:	ins    DWORD PTR es:[edi],dx
  4398f5:	xchg   dl,cl
  4398f7:	pop    es
  4398f8:	push   ecx
  4398f9:	out    dx,eax
  4398fa:	inc    ebp
  4398fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4398fc:	cmp    al,0xde
  4398fe:	cmp    bl,BYTE PTR [eax-0x68d126ad]
  439904:	imul   ebx,edx,0x32
  439907:	enter  0xd276,0x46
  43990b:	push   es
  43990c:	out    dx,al
  43990d:	mov    ch,BYTE PTR [edi]
  43990f:	mov    ds:0xabd6d26d,eax
  439914:	imul   edx,edi,0xffffffee
  439917:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439918:	ins    DWORD PTR es:[edi],dx
  439919:	mov    edi,0x31ff92a6
  43991e:	sbb    eax,0xfaa34e06
  439923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439924:	dec    edi
  439925:	xchg   esp,eax
  439926:	clc    
  439927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439928:	bound  edx,QWORD PTR [ebp-0x5c9d4074]
  43992e:	or     BYTE PTR [ebp+0x9860076],dl
  439934:	pop    es
  439935:	push   edx
  439936:	outs   dx,DWORD PTR ds:[esi]
  439937:	inc    edx
  439938:	xchg   ebx,eax
  439939:	xchg   edi,eax
  43993a:	je     0x43999d
  43993c:	jge    0x4398f1
  43993e:	arpl   WORD PTR [edi-0x73],bx
  439941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439942:	dec    edx
  439943:	push   esi
  439944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439945:	fwait
  439946:	loope  0x439917
  439948:	sbb    al,BYTE PTR [edi]
  43994a:	xor    al,0x59
  43994c:	jae    0x4398e5
  43994e:	push   esp
  43994f:	popa   
  439950:	test   edx,eax
  439952:	pop    ebp
  439953:	pop    esi
  439954:	jo     0x4398fa
  439956:	inc    esp
  439957:	dec    edx
  439958:	loope  0x43995d
  43995a:	pop    eax
  43995b:	inc    ecx
  43995c:	daa    
  43995d:	xchg   edx,eax
  43995e:	and    al,0x65
  439960:	and    eax,0x42544bad
  439965:	xchg   edx,eax
  439966:	sbb    BYTE PTR [edx+0x8],al
  439969:	add    ecx,DWORD PTR [edx+0x5f]
  43996c:	inc    edx
  43996d:	test   al,0x3d
  43996f:	pop    ecx
  439970:	inc    ebx
  439971:	xchg   edx,eax
  439972:	sub    BYTE PTR [edx+edi*1-0x49],dl
  439976:	or     edi,0x65d208a1
  43997c:	adc    esi,DWORD PTR [ecx-0x67fd9f18]
  439982:	in     al,0x76
  439984:	or     DWORD PTR [edx+0x3fd61e4],edx
  43998a:	adc    eax,0xe4922442
  43998f:	popa   
  439990:	in     eax,dx
  439991:	test   al,0xb5
  439993:	pop    edx
  439994:	repz test al,0x0
  439997:	loopne 0x4399ff
  439999:	loope  0x43999e
  43999b:	das    
  43999c:	inc    esi
  43999d:	mov    bh,0xac
  43999f:	mov    ds:0x9da4ce56,eax
  4399a4:	jb     0x439979
  4399a6:	scas   al,BYTE PTR es:[edi]
  4399a7:	xchg   ebp,eax
  4399a8:	les    edx,FWORD PTR gs:[edi+0x793cf19]
  4399af:	ret    
  4399b0:	or     bh,BYTE PTR gs:[ebp-0x6199a6c2]
  4399b7:	sub    eax,DWORD PTR [ecx-0x30d16a9f]
  4399bd:	out    dx,al
  4399be:	xchg   BYTE PTR [ecx-0x3c629a83],cl
  4399c4:	addr16 pop esi
  4399c6:	test   BYTE PTR ds:0xf197615a,dl
  4399cc:	arpl   WORD PTR [esp+eiz*4-0x13],di
  4399d0:	into   
  4399d1:	out    dx,al
  4399d2:	add    DWORD PTR [ecx-0x348a9a83],0x67
  4399d9:	pop    esi
  4399da:	dec    esp
  4399db:	(bad)  
  4399dc:	addr16 pop ebp
  4399de:	inc    esp
  4399df:	mov    ah,BYTE PTR [ebx]
  4399e1:	add    eax,0x7668143e
  4399e6:	inc    esp
  4399e7:	enter  0x5e67,0x4c
  4399eb:	sub    al,0x8
  4399ee:	fist   WORD PTR es:[edx+0x48]
  4399f2:	inc    eax
  4399f3:	(bad)  
  4399f4:	arpl   WORD PTR [ecx+0x35],cx
  4399f7:	push   ds
  4399f8:	pusha  
  4399f9:	popa   
  4399fa:	or     eax,DWORD PTR [eax]
  4399fc:	pop    ds
  4399fd:	push   edx
  4399fe:	sbb    bh,BYTE PTR gs:[ecx]
  439a01:	into   
  439a02:	out    dx,al
  439a03:	test   eax,0x8657c84
  439a08:	test   BYTE PTR cs:[ecx+0x15],ah
  439a0c:	das    
  439a0d:	into   
  439a0e:	out    dx,al
  439a0f:	outs   dx,BYTE PTR ds:[esi]
  439a10:	test   DWORD PTR [edi],ecx
  439a12:	jl     0x439a20
  439a14:	and    edx,DWORD PTR [edx+0x65]
  439a17:	daa    
  439a18:	repz pop ecx
  439a1a:	gs mov esi,0xa7097385
  439a20:	loope  0x439a72
  439a22:	jnp    0x4399e5
  439a24:	inc    ebx
  439a25:	gs pop esi
  439a27:	les    eax,FWORD PTR [edi+0x51]
  439a2a:	push   0x5c9b4900
  439a2f:	jae    0x439a50
  439a31:	inc    edx
  439a32:	fild   WORD PTR [ecx]
  439a34:	fcomp  DWORD PTR [edx-0x6239b986]
  439a3a:	imul   edx,DWORD PTR [ebx+0x16],0xffffffac
  439a3e:	imul   eax,DWORD PTR [ebp+0x27],0x42
  439a42:	pop    ebp
  439a43:	add    al,0x2c
  439a45:	fwait
  439a46:	jp     0x439a94
  439a48:	push   cs
  439a49:	mov    cl,0x7a
  439a4b:	inc    ebp
  439a4c:	pop    ebp
  439a4d:	mov    bl,0x61
  439a4f:	jb     0x439a30
  439a51:	inc    ecx
  439a52:	loopne 0x439a55
  439a54:	sbb    BYTE PTR [ebx-0x61f9b986],bl
  439a5a:	imul   edx,DWORD PTR [esi+edx*2-0x63],0x6b
  439a5f:	add    BYTE PTR [eax],al
  439a61:	stc    
  439a62:	inc    esi
  439a63:	inc    esi
  439a64:	gs inc ebx
  439a66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439a67:	jp     0x439ace
  439a69:	imul   ebx,DWORD PTR [ecx+0x46786562],0xa56801de
  439a73:	jp     0x439abb
  439a75:	inc    esi
  439a76:	xchg   edx,eax
  439a77:	imul   ecx,DWORD PTR [ecx-0x3f],0xffffffa4
  439a7b:	popa   
  439a7c:	jb     0x439a10
  439a7e:	mov    eax,ds:0x9c80697a
  439a83:	sub    al,0x79
  439a85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439a86:	mov    eax,ds:0xa4636460
  439a8b:	out    dx,al
  439a8c:	dec    DWORD PTR [esi+0x5b653d3a]
  439a92:	pop    es
  439a93:	push   0x7b017a6c
  439a98:	je     0x439ad7
  439a9a:	cwde   
  439a9b:	dec    esp
  439a9c:	jne    0x439af9
  439a9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439a9f:	pop    ebp
  439aa0:	push   edi
  439aa1:	pop    ds
  439aa2:	inc    ecx
  439aa3:	clc    
  439aa4:	add    eax,DWORD PTR [esi-0x54945877]
  439aaa:	cli    
  439aab:	cdq    
  439aac:	(bad)  
  439aad:	retf   
  439aae:	mov    ss,WORD PTR [esi+0xadb8e62]
  439ab4:	push   ecx
  439ab5:	test   DWORD PTR [esi+0x2586fab],esp
  439abb:	test   al,0x70
  439abd:	dec    ecx
  439abe:	mov    ebp,0xc66266c4
  439ac3:	or     dl,dl
  439ac5:	add    BYTE PTR [edx+0x676a9c8e],al
  439acb:	stos   DWORD PTR es:[edi],eax
  439acc:	mov    ah,0x66
  439ace:	arpl   WORD PTR [esi+edi*4+0x61],cx
  439ad2:	dec    eax
  439ad3:	mov    dl,0x9e
  439ad5:	bound  eax,QWORD PTR [esi+0x343d0667]
  439adb:	(bad)  
  439adc:	stos   DWORD PTR es:[edi],eax
  439add:	jae    0x439b02
  439adf:	sbb    eax,0x1e2b6ba3
  439ae4:	stos   DWORD PTR es:[edi],eax
  439ae5:	outs   dx,DWORD PTR ds:[esi]
  439ae6:	and    BYTE PTR ss:[eax+0xadb3960],0xc4
  439aee:	xchg   DWORD PTR [edi+eiz*4],ebx
  439af1:	jae    0x439b38
  439af3:	push   ss
  439af4:	pushf  
  439af5:	ins    DWORD PTR es:[edi],dx
  439af6:	and    eax,DWORD PTR [ebp+0x7ee5392]
  439afc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439afd:	pop    esi
  439afe:	loop   0x439ad9
  439b00:	or     dl,BYTE PTR [edi+0x73a7088a]
  439b06:	rol    BYTE PTR [ecx-0x64],cl
  439b09:	(bad)  
  439b0a:	out    0x45,eax
  439b0c:	mov    dh,0x6d
  439b0e:	out    dx,eax
  439b0f:	xor    al,0x9c
  439b11:	data16 fiadd DWORD PTR [edx+0x6]
  439b15:	stc    
  439b16:	xchg   DWORD PTR [edi+eiz*4],ebx
  439b19:	jae    0x439ae9
  439b1b:	cmp    ah,BYTE PTR [eax-0x41bd559d]
  439b21:	retf   0x649f
  439b24:	rcl    BYTE PTR [ecx-0x55329e64],0x0
  439b2b:	scas   al,BYTE PTR es:[edi]
  439b2c:	pop    esp
  439b2d:	loope  0x439b32
  439b2f:	into   
  439b30:	inc    ebp
  439b31:	aad    0x90
  439b33:	xchg   ebp,eax
  439b34:	push   eax
  439b35:	les    edx,FWORD PTR [ebx+0x3e17390]
  439b3b:	inc    edi
  439b3c:	inc    ebp
  439b3d:	lods   eax,DWORD PTR ds:[esi]
  439b3e:	nop
  439b3f:	jne    0x439b91
  439b41:	test   BYTE PTR [ebx+0x3e18178],dl
  439b47:	test   eax,0x55908545
  439b4c:	push   eax
  439b4d:	test   BYTE PTR [esi+0x3e18169],ch
  439b53:	dec    eax
  439b54:	inc    ebp
  439b55:	jge    0x439ae7
  439b57:	push   ebp
  439b58:	push   eax
  439b59:	test   BYTE PTR [ebx+0x3a25c38],dl
  439b5f:	mov    eax,0x35a12041
  439b64:	jle    0x439ba8
  439b66:	xchg   edi,eax
  439b67:	xor    eax,0x2e965385
  439b6c:	push   eax
  439b6d:	loope  0x439b72
  439b6f:	pop    edx
  439b70:	aas    
  439b71:	xor    eax,0x1d6630ab
  439b76:	lods   eax,DWORD PTR ds:[esi]
  439b77:	sub    edx,DWORD PTR [eax+0x42]
  439b7a:	xchg   esi,eax
  439b7b:	clc    
  439b7c:	and    ecx,0x20416603
  439b82:	mov    eax,ds:0xad2985f5
  439b87:	cmc    
  439b88:	jg     0x439b92
  439b8a:	mov    al,ds:0x960976e4
  439b8f:	add    ah,ah
  439b91:	popa   
  439b92:	std    
  439b93:	add    esi,DWORD PTR [edx]
  439b95:	inc    ecx
  439b96:	sub    BYTE PTR [ecx+0x70a85d5],ah
  439b9c:	adc    al,0x64
  439b9e:	jl     0x439b9e
  439ba0:	out    dx,eax
  439ba1:	push   edi
  439ba2:	xlat   BYTE PTR gs:[ebx]
  439ba4:	add    DWORD PTR [ecx+0x69],esi
  439ba7:	fcmovnu st,st(2)
  439ba9:	imul   ebp,DWORD PTR [ebp+eax*8-0x1a],0x71
  439bae:	or     al,BYTE PTR [ecx-0x3383f27e]
  439bb4:	jmp    0x6b59:0xf399654e
  439bbb:	int3   
  439bbc:	sbb    BYTE PTR [esi+0x57],bl
  439bbf:	jmp    0xb64e5e49
  439bc4:	adc    eax,0x13b96060
  439bc9:	pop    edx
  439bca:	imul   ecx,DWORD PTR [eax+edi*8-0x79d5f5a3],0x76
  439bd2:	bound  edi,QWORD PTR [ebx+0x26]
  439bd5:	ins    BYTE PTR es:[edi],dx
  439bd6:	mov    dx,0x80b3
  439bda:	popa   
  439bdb:	jnp    0x439bf5
  439bdd:	dec    edi
  439bde:	or     ah,BYTE PTR ds:0x5b627686
  439be4:	out    0x6b,eax
  439be6:	data16 sbb dl,al
  439be9:	js     0x439c50
  439beb:	push   ecx
  439bec:	test   dl,0xee
  439bef:	pop    DWORD PTR [ebp+0x4c7c0d]
  439bf5:	jmp    0x439c45
  439bf7:	gs adc eax,0x415e59dd
  439bfd:	daa    
  439bfe:	pop    esi
  439bff:	jp     0x439bfb
  439c01:	push   ebx
  439c02:	ja     0x439c64
  439c04:	or     BYTE PTR [edx],bl
  439c06:	push   edi
  439c07:	bound  ecx,QWORD PTR [esi]
  439c09:	push   ss
  439c0a:	retf   0x2bee
  439c0d:	mov    BYTE PTR [ebx+0x58121565],al
  439c13:	popa   
  439c14:	add    BYTE PTR [ecx-0x61],dl
  439c17:	jp     0x439c7e
  439c19:	outs   dx,DWORD PTR ds:[esi]
  439c1a:	mov    al,0x61
  439c1c:	data16 xchg BYTE PTR [edx-0x4fccac95],bl
  439c23:	outs   dx,BYTE PTR ds:[si]
  439c25:	inc    eax
  439c26:	xchg   ebp,eax
  439c27:	out    dx,al
  439c28:	dec    DWORD PTR [ebx+0x43654940]
  439c2e:	xchg   esi,eax
  439c2f:	pop    esp
  439c30:	imul   esi,DWORD PTR [ecx],0xef657a9f
  439c36:	scas   eax,DWORD PTR es:[edi]
  439c37:	popa   
  439c38:	data16 mov ss:0xb9c9496b,al
  439c3f:	pop    ecx
  439c40:	add    dl,cl
  439c42:	ds dec ebx
  439c44:	js     0x439c55
  439c46:	lahf   
  439c47:	pusha  
  439c48:	and    bl,BYTE PTR fs:[eax+edi*2+0x609cfd69]
  439c50:	ins    DWORD PTR es:[edi],dx
  439c51:	add    bl,BYTE PTR [edx+edi*2+0x67af5353]
  439c58:	outs   dx,BYTE PTR ds:[esi]
  439c59:	add    BYTE PTR [eax],al
  439c5b:	mov    cl,0x59
  439c5d:	add    BYTE PTR [ecx-0x37],ch
  439c60:	pop    edx
  439c61:	jb     0x439c99
  439c63:	add    ah,BYTE PTR [ecx+0x74]
  439c66:	inc    edx
  439c67:	mov    al,0x2d
  439c69:	jb     0x439cc1
  439c6b:	mov    dl,0x67
  439c6d:	arpl   WORD PTR [esi-0x66],cx
  439c70:	cmp    eax,0x67b24c65
  439c75:	outs   dx,DWORD PTR ds:[esi]
  439c76:	cmp    DWORD PTR [esi],edi
  439c78:	mov    WORD PTR [edx],es
  439c7a:	pusha  
  439c7b:	test   eax,0xb0c7547a
  439c80:	imul   esp,DWORD PTR [ecx-0x3d],0xffffffff
  439c84:	popa   
  439c85:	outs   dx,BYTE PTR ds:[esi]
  439c86:	xchg   ebx,eax
  439c87:	test   eax,0x455f7476
  439c8c:	jg     0x439c92
  439c8e:	xchg   BYTE PTR [edi+ecx*4],cl
  439c91:	jae    0x439c45
  439c93:	inc    ebx
  439c94:	cwde   
  439c95:	(bad)  
  439c96:	out    0x37,eax
  439c98:	lds    ebp,FWORD PTR [eax-0x28]
  439c9b:	iret   
  439c9c:	(bad)  
  439c9d:	ja     0x439c59
  439c9f:	fisttp DWORD PTR [edx]
  439ca1:	dec    esp
  439ca2:	test   BYTE PTR [eax],ah
  439ca4:	(bad)  
  439ca5:	jae    0x439c7d
  439ca7:	in     eax,dx
  439ca8:	mov    eax,ds:0x95eca35c
  439cad:	inc    esi
  439cae:	stos   BYTE PTR es:[edi],al
  439caf:	fisttp DWORD PTR [edx]
  439cb1:	call   0x87a7:0x62949c86
  439cb8:	(bad)
  439cbc:	(bad)  
  439cbd:	ja     0x439cbf
  439cbf:	pop    ecx
  439cc0:	fisttp DWORD PTR [edx]
  439cc2:	ret    
  439cc3:	xchg   DWORD PTR [eax-0x59ba8c71],esp
  439cc9:	xchg   esp,eax
  439cca:	ins    DWORD PTR es:[edi],dx
  439ccb:	arpl   WORD PTR [ecx-0x5291ac82],di
  439cd1:	(bad)  
  439cd2:	pop    esi
  439cd3:	bound  esp,QWORD PTR [edx+0x15d1ff8e]
  439cd9:	or     dl,BYTE PTR [edx+ebx*2+0x4c]
  439cdd:	int3   
  439cde:	imul   esi,DWORD PTR [edx],0xffffffc0
  439ce1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439ce2:	(bad)  
  439ce3:	mov    ecx,0x22540a20
  439ce8:	ins    BYTE PTR es:[edi],dx
  439ce9:	int3   
  439cea:	ins    DWORD PTR es:[edi],dx
  439ceb:	and    edi,DWORD PTR [esi+0x6]
  439cee:	ror    DWORD PTR [edx+0x416ca207],0x7e
  439cf5:	call   0x8662:0x7f6f2751
  439cfc:	xchg   ebx,eax
  439cfd:	out    dx,al
  439cfe:	push   ebx
  439cff:	repnz or al,0xb5
  439d02:	(bad)
  439d07:	sti    
  439d08:	inc    edx
  439d09:	inc    BYTE PTR [ebx]
  439d0b:	inc    esi
  439d0c:	aas    
  439d0d:	xor    eax,0xa55f39f
  439d12:	stos   BYTE PTR es:[edi],al
  439d13:	mov    eax,0xe3b4064e
  439d18:	push   edi
  439d19:	add    al,0x9f
  439d1b:	ficom  DWORD PTR [ebx-0x1f]
  439d1e:	add    ecx,DWORD PTR [edi+0x9f133e]
  439d24:	stos   BYTE PTR es:[edi],al
  439d25:	pop    ebp
  439d26:	cmc    
  439d27:	mov    esi,0x8fd75db7
  439d2c:	sub    eax,ecx
  439d2e:	add    eax,DWORD PTR [ebx]
  439d30:	les    ebx,FWORD PTR [ecx-0x3b]
  439d33:	sahf   
  439d34:	mov    ch,0x59
  439d36:	scas   al,BYTE PTR es:[edi]
  439d37:	sahf   
  439d38:	mov    ch,0x57
  439d3a:	popf   
  439d3b:	test   al,0x9a
  439d3d:	jle    0x439d01
  439d3f:	(bad)  
  439d40:	outs   dx,BYTE PTR fs:[esi]
  439d42:	retf   0x64a6
  439d45:	inc    edx
  439d46:	fs add eax,0xaf8d5d47
  439d4c:	fs push ebp
  439d4e:	xchg   ecx,eax
  439d4f:	shr    DWORD PTR [eax+0x56],0x7e
  439d53:	leave  
  439d54:	cmp    BYTE PTR [ebp-0x7a],dl
  439d57:	mov    al,0xd1
  439d59:	(bad)  
  439d5a:	pop    ebp
  439d5b:	add    eax,0xaf755d47
  439d60:	and    al,0x55
  439d62:	jno    0x439d17
  439d64:	pop    eax
  439d65:	dec    esi
  439d66:	mov    DWORD PTR [eax+0x4fcc7b1],esi
  439d6c:	inc    esp
  439d6d:	pop    ecx
  439d6e:	cmp    eax,0x465935a1
  439d73:	mov    eax,ds:0xa70d5735
  439d78:	xor    ah,BYTE PTR [ecx+0x55]
  439d7b:	mov    esi,0xb0465620
  439d80:	call   0x828fa7da
  439d85:	wbinvd 
  439d87:	daa    
  439d88:	add    BYTE PTR [ebx],ah
  439d8a:	pop    ecx
  439d8b:	data16 das 
  439d8d:	sbb    edx,DWORD PTR [ebp+0x7b]
  439d90:	adc    eax,0xc5e6020
  439d95:	sub    edi,eax
  439d97:	out    dx,al
  439d98:	mov    edi,0x1761848a
  439d9d:	es push es
  439d9f:	pop    esi
  439da0:	push   cs
  439da1:	adc    eax,0x832c0a64
  439da6:	test   BYTE PTR [ecx-0x1],ah
  439da9:	adc    DWORD PTR [ecx+0x65],edi
  439dac:	loope  0x439da7
  439dae:	and    BYTE PTR [ecx-0x33],0xe6
  439db2:	jno    0x439dbe
  439db4:	mov    es,WORD PTR [ebp-0x83b8a89]
  439dba:	dec    edi
  439dbb:	pop    edx
  439dbc:	int3   
  439dbd:	mul    DWORD PTR [eax+0x5f]
  439dc0:	mov    ebx,0xca60682e
  439dc5:	es push es
  439dc7:	pop    edi
  439dc8:	mov    ah,0x2b
  439dca:	push   ebx
  439dcb:	gs fwait
  439dcd:	test   DWORD PTR [edx+0xb],esp
  439dd0:	lods   al,BYTE PTR ds:[esi]
  439dd1:	sub    BYTE PTR [ecx+0x65],dl
  439dd4:	scas   eax,DWORD PTR es:[edi]
  439dd5:	sub    bl,BYTE PTR [ebx+0x65]
  439dd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439dd9:	in     eax,dx
  439dda:	jno    0x439de6
  439ddc:	int3   
  439ddd:	xchg   DWORD PTR [ecx+0x67cb7565],eax
  439de3:	jbe    0x439d65
  439de5:	or     esp,DWORD PTR [ebx+ebx*2+0x70]
  439de9:	adc    al,0x53
  439deb:	gs push esp
  439ded:	add    BYTE PTR [ebx-0x75b197a8],bh
  439df3:	cmc    
  439df4:	or     BYTE PTR [esi],ch
  439df6:	out    0x52,eax
  439df8:	inc    esi
  439df9:	pop    ebx
  439dfa:	jecxz  0x439e4c
  439dfc:	add    BYTE PTR gs:[ebx-0x5b],ch
  439e00:	pop    esi
  439e01:	gs cwde 
  439e03:	ds add ch,BYTE PTR fs:[eax-0x49ac855d]
  439e0b:	mov    cl,0x7a
  439e0d:	gs xchg edx,eax
  439e0f:	add    ch,BYTE PTR [esi+eiz*2-0x72]
  439e13:	mov    bl,0x62
  439e15:	je     0x439db1
  439e17:	test   DWORD PTR [edx+0x61],0x617ba551
  439e1e:	js     0x439dc3
  439e20:	out    dx,al
  439e21:	push   DWORD PTR [esi]
  439e23:	inc    esp
  439e24:	dec    ecx
  439e25:	gs cmp edi,esi
  439e28:	popa   
  439e29:	xchg   BYTE PTR [bx+di+0x6c4f],ah
  439e2e:	(bad)  [ebx-0x4eb58999]
  439e34:	out    dx,al
  439e35:	(bad)  
  439e36:	fld    QWORD PTR [ebx+0x49]
  439e39:	cmp    edx,DWORD PTR gs:[edx-0x5cc390a4]
  439e40:	pop    ebp
  439e41:	jae    0x439e5e
  439e43:	xchg   edi,eax
  439e44:	arpl   WORD PTR [ebp+0x3c],sp
  439e47:	inc    edx
  439e48:	xor    BYTE PTR ds:0x727ab133,al
  439e4e:	cld    
  439e4f:	call   0xca41:0xef00575e
  439e56:	add    ch,BYTE PTR [eax]
  439e58:	sahf   
  439e59:	popa   
  439e5a:	(bad)  
  439e5b:	(bad)  
  439e5c:	popf   
  439e5d:	inc    ebx
  439e5e:	gs repnz pushf 
  439e61:	pop    esp
  439e62:	jns    0x439e80
  439e64:	mov    dh,0x4f
  439e66:	je     0x439ea2
  439e68:	mov    al,0x4b
  439e6a:	js     0x439e0b
  439e6c:	inc    ecx
  439e6d:	xchg   esp,eax
  439e6e:	add    bl,BYTE PTR [eax-0x5b]
  439e71:	jp     0x439ec8
  439e73:	cmp    al,0xa5
  439e75:	pop    esp
  439e76:	inc    esp
  439e77:	xchg   BYTE PTR [esi-0x70],dh
  439e7a:	pop    esi
  439e7b:	sbb    eax,DWORD PTR [edi]
  439e7d:	call   0xe969:0xab0f3f52
  439e84:	push   cs
  439e85:	stos   DWORD PTR es:[edi],eax
  439e86:	pusha  
  439e87:	jecxz  0x439e64
  439e89:	or     cl,dl
  439e8b:	xchg   DWORD PTR [edi+ecx*4],ebx
  439e8e:	jae    0x439e52
  439e90:	xor    bl,BYTE PTR [ecx-0x70d6379c]
  439e96:	bound  esi,QWORD PTR [ebp-0x14a354d5]
  439e9c:	push   ds
  439e9d:	mov    ss,WORD PTR [eax-0x7a]
  439ea0:	je     0x439eae
  439ea2:	inc    ecx
  439ea3:	stos   DWORD PTR es:[edi],eax
  439ea4:	iret   
  439ea5:	pushf  
  439ea6:	push   0x62a7c6aa
  439eab:	mov    edi,0xb4688cc5
  439eb0:	out    dx,al
  439eb1:	stos   DWORD PTR es:[edi],eax
  439eb2:	jae    0x439e63
  439eb4:	hlt    
  439eb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439eb6:	push   eax
  439eb7:	add    BYTE PTR [esi-0x6bc2fa3e],al
  439ebd:	(bad)  
  439ebe:	stos   DWORD PTR es:[edi],eax
  439ebf:	jae    0x439e64
  439ec1:	test   eax,0x8f716a8f
  439ec6:	(bad)  
  439ec7:	push   ebx
  439ec8:	outs   dx,BYTE PTR ds:[esi]
  439ec9:	mov    DWORD PTR [edi+0xadb6a5e],ecx
  439ecf:	xchg   edx,eax
  439ed0:	test   DWORD PTR [ebx-0x419a9768],ecx
  439ed6:	cdq    
  439ed7:	ins    BYTE PTR es:[edi],dx
  439ed8:	xchg   ebp,eax
  439ed9:	jmp    0xa898058a
  439ede:	jle    0x439f30
  439ee0:	xchg   BYTE PTR [ebx+0x9],ah
  439ee3:	push   eax
  439ee4:	xor    al,0xb4
  439ee6:	test   eax,0xda483562
  439eeb:	sub    eax,0x7392be40
  439ef0:	push   ecx
  439ef1:	inc    edx
  439ef2:	loope  0x439ef7
  439ef4:	fdivr  QWORD PTR [edi]
  439ef6:	sub    BYTE PTR [eax-0x57bd9fd2],ch
  439efc:	cmp    eax,0x89a94455
  439f01:	les    ebx,FWORD PTR [ebp+0x4056c701]
  439f07:	mov    ds:0xa60e56d8,al
  439f0c:	fst    QWORD PTR [ebx+0x44]
  439f0f:	test   eax,0xfff3c469
  439f14:	rcr    DWORD PTR [ebp+0x14],cl
  439f17:	(bad)  
  439f18:	in     al,dx
  439f19:	pop    ebp
  439f1a:	sub    eax,0x5de300ac
  439f1f:	add    ah,BYTE PTR [eax+0x361c449]
  439f25:	adc    DWORD PTR [eax+0x6],0xffffffa3
  439f29:	mov    ch,0x5d
  439f2b:	sbb    eax,0x45da3ab
  439f30:	nop
  439f31:	sahf   
  439f32:	push   eax
  439f33:	jmp    0xb7ff:0x3cc421ac
  439f3a:	pop    ecx
  439f3b:	ror    DWORD PTR [edi-0x42529e6c],cl
  439f41:	fwait
  439f42:	pop    ebp
  439f43:	mov    esi,0x973ee903
  439f48:	stos   BYTE PTR es:[edi],al
  439f49:	imul   ecx,DWORD PTR [esi-0x52],0xffffffa2
  439f4d:	pop    ebp
  439f4e:	sub    DWORD PTR [ebp-0x1ea0a159],0xb33fe303
  439f58:	sahf   
  439f59:	ins    BYTE PTR es:[edi],dx
  439f5a:	push   ebx
  439f5b:	(bad)  
  439f5c:	sahf   
  439f5d:	inc    ebp
  439f5e:	pop    ecx
  439f5f:	xchg   ebx,eax
  439f60:	sahf   
  439f61:	sub    cl,BYTE PTR [esi-0x68]
  439f64:	xchg   ecx,eax
  439f65:	cmp    BYTE PTR [ebx-0x1f],ch
  439f68:	add    edi,DWORD PTR ds:0x15a60a3f
  439f6e:	popa   
  439f6f:	pusha  
  439f70:	pushf  
  439f71:	clc    
  439f72:	dec    edi
  439f73:	gs popa 
  439f75:	ffree  st(3)
  439f77:	out    dx,al
  439f78:	nop
  439f79:	add    BYTE PTR [ecx+0x5acc5d65],0x5e
  439f80:	push   esp
  439f81:	add    bh,ah
  439f83:	pusha  
  439f84:	inc    eax
  439f85:	dec    eax
  439f86:	daa    
  439f87:	pusha  
  439f88:	dec    eax
  439f89:	dec    esi
  439f8a:	adc    BYTE PTR [ecx+0x5f],dh
  439f8d:	inc    ebp
  439f8e:	addps  xmm4,XMMWORD PTR [ebp+0x1c]
  439f92:	and    eax,0x1a1d6050
  439f97:	pop    edx
  439f98:	popa   
  439f99:	paddd  mm6,QWORD PTR [ecx+0xa]
  439f9d:	sahf   
  439f9e:	mov    BYTE PTR [ebx+0x7b],bh
  439fa1:	sub    esp,DWORD PTR [ebx]
  439fa3:	pop    edi
  439fa4:	pop    esp
  439fa5:	or     al,0xeb
  439fa7:	pop    esi
  439fa8:	pop    edx
  439fa9:	cmc    
  439faa:	adc    eax,ebx
  439fac:	out    dx,al
  439fad:	jge    0x43a02d
  439faf:	jno    0x43a007
  439fb1:	sbb    bh,BYTE PTR ds:0xe8a87660
  439fb7:	dec    esi
  439fb8:	popa   
  439fb9:	xlat   BYTE PTR ds:[ebx]
  439fba:	out    dx,al
  439fbb:	add    eax,0x59f8c75f
  439fc0:	pop    esi
  439fc1:	(bad)  
  439fc2:	rcr    BYTE PTR [edi+0x7b],1
  439fc5:	mov    edx,0xb0605a22
  439fca:	and    ebx,eax
  439fcc:	out    dx,al
  439fcd:	mov    ds:0xa44074be,al
  439fd2:	sub    DWORD PTR [esi],edx
  439fd4:	cmp    al,0xd7
  439fd6:	sub    DWORD PTR [edi+0x5e],edx
  439fd9:	jmp    0xac4d6f63
  439fde:	std    
  439fdf:	pop    ebx
  439fe0:	jbe    0x439f98
  439fe2:	jmp    0xa818:0x6658
  439fe9:	pop    ebp
  439fea:	inc    ebp
  439feb:	pop    es
  439fec:	aas    
  439fed:	and    eax,0x4fa6dc00
  439ff2:	jb     0x439fff
  439ff4:	mov    al,ds:0xfd3d6579
  439ff9:	out    dx,al
  439ffa:	(bad)  
  439ffb:	cmp    DWORD PTR ds:0x8b336549,edi
  43a001:	ja     0x43a076
  43a003:	xor    ebx,DWORD PTR [ecx-0x252db29d]
  43a009:	pop    esp
  43a00a:	imul   ecx,esp,0xa4ffeed9
  43a010:	dec    eax
  43a011:	inc    eax
  43a012:	gs rcr bh,0x5d
  43a016:	je     0x439faa
  43a018:	fsubr  DWORD PTR ds:0x5dd98e6c
  43a01e:	inc    ecx
  43a01f:	pop    edi
  43a020:	inc    esi
  43a021:	cdq    
  43a022:	add    BYTE PTR [ebx+0x3d4668eb],ah
  43a028:	out    0x63,eax
  43a02a:	gs lahf 
  43a02c:	fsub   DWORD PTR [ecx+0x63]
  43a02f:	nop
  43a030:	inc    esi
  43a031:	push   ebp
  43a032:	add    DWORD PTR [eax-0x15],esp
  43a035:	jp     0x43a084
  43a037:	push   edx
  43a038:	fstp   DWORD PTR [ebp+0x61]
  43a03b:	inc    eax
  43a03c:	jmp    0x43a07c
  43a03e:	outs   dx,DWORD PTR ds:[esi]
  43a03f:	sub    al,0x46
  43a041:	mov    es,WORD PTR [eax]
  43a043:	jecxz  0x43a02f
  43a045:	push   0x6ae3d657
  43a04a:	outs   dx,DWORD PTR ds:[esi]
  43a04b:	add    BYTE PTR [eax],dh
  43a04d:	neg    BYTE PTR [edi+ebp*2-0x44]
  43a051:	cld    
  43a052:	out    dx,al
  43a053:	(bad)  
  43a054:	mov    ecx,0xfb612d45
  43a059:	loope  0x43a0b4
  43a05b:	imul   ecx,DWORD PTR [ecx],0x867761ea
  43a061:	sti    
  43a062:	xchg   esp,eax
  43a063:	push   0x1b0af865
  43a068:	xchg   ah,ch
  43a06a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a06b:	imul   ebp,DWORD PTR [edx],0xffffffd8
  43a06e:	lea    ebp,[ecx+0x2a]
  43a071:	enter  0x4f93,0x34
  43a075:	inc    eax
  43a076:	test   al,0x3e
  43a078:	xchg   BYTE PTR [ecx+0x8],bh
  43a07b:	dec    esi
  43a07c:	and    ecx,DWORD PTR [eax]
  43a07e:	xchg   ebx,eax
  43a07f:	ins    BYTE PTR es:[edi],dx
  43a080:	sbb    cl,BYTE PTR [esi]
  43a082:	cwde   
  43a083:	cmp    al,0x1a
  43a085:	or     dl,BYTE PTR [ebp+0xaabd96c]
  43a08b:	test   BYTE PTR fs:[ebp-0x59],bl
  43a08f:	imul   ebp,ebx,0xa
  43a092:	xchg   ebp,eax
  43a093:	(bad)  
  43a094:	lds    ecx,FWORD PTR [edx]
  43a096:	xchg   esi,eax
  43a097:	jae    0x43a074
  43a099:	pop    ebp
  43a09a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a09b:	call   FWORD PTR [ecx-0x3d]
  43a09e:	add    eax,0xaf51eb44
  43a0a3:	inc    ebx
  43a0a4:	mov    edi,0xb2668e6c
  43a0a9:	dec    edi
  43a0aa:	mov    dh,0x6d
  43a0ac:	test   eax,0xffcb4c
  43a0b1:	xor    DWORD PTR [edi],ebx
  43a0b3:	push   es
  43a0b4:	inc    esp
  43a0b5:	mov    ds:0xa96bc249,eax
  43a0ba:	sti    
  43a0bb:	xchg   esp,eax
  43a0bc:	push   0xe80aeaa5
  43a0c1:	test   ah,bh
  43a0c3:	xchg   ecx,eax
  43a0c4:	xchg   dx,ax
  43a0c6:	mov    WORD PTR [edx-0x720394bd],ss
  43a0cc:	jae    0x43a137
  43a0ce:	sti    
  43a0cf:	or     dl,BYTE PTR [edi+0x61a7ef86]
  43a0d5:	cmp    esp,edi
  43a0d7:	mov    bl,0x3c
  43a0d9:	outs   dx,BYTE PTR ds:[esi]
  43a0da:	inc    edx
  43a0db:	call   0x32a0:0x9312659f
  43a0e2:	sbb    ecx,esp
  43a0e4:	add    esp,DWORD PTR [esi+0x35a6a843]
  43a0ea:	add    eax,0x312a956e
  43a0ef:	jae    0x43a0a4
  43a0f1:	push   ds
  43a0f2:	xor    eax,0x421303e1
  43a0f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a0f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a0f9:	daa    
  43a0fa:	sbb    DWORD PTR [edx-0x5e],ebx
  43a0fd:	and    eax,0x23b45831
  43a102:	xor    DWORD PTR [ebx+eax*8-0x77],eax
  43a106:	rol    BYTE PTR [ebp+0x6],0xd0
  43a10a:	and    eax,0x33d8a755
  43a10f:	inc    esi
  43a110:	enter  0x42b2,0xf3
  43a114:	add    eax,0x4625d600
  43a119:	popf   
  43a11a:	int3   
  43a11b:	and    eax,0x27b89514
  43a120:	push   es
  43a121:	ret    
  43a122:	push   ecx
  43a123:	rol    dl,0x2
  43a126:	(bad)  
  43a127:	and    eax,0x582c815
  43a12c:	or     DWORD PTR [ebx+ebp*2],eax
  43a12f:	inc    esp
  43a130:	adc    DWORD PTR [edi-0x58d9d45c],esp
  43a136:	call   0xe117:0xa4a90233
  43a13d:	add    esi,DWORD PTR [ecx+eax*2-0x58]
  43a141:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a142:	xchg   ebp,eax
  43a143:	add    eax,ebp
  43a145:	call   0x2673:0xa2b02499
  43a14c:	popf   
  43a14d:	mov    ds:0x3e12175,al
  43a152:	or     BYTE PTR [ebp+0xa],al
  43a155:	call   0x2efb:0xb44b3420
  43a15c:	pop    edi
  43a15d:	fwait
  43a15e:	adc    eax,0x85e97b2b
  43a163:	or     ecx,DWORD PTR [ebx+edi*4]
  43a166:	and    BYTE PTR [ebx],ah
  43a168:	popa   
  43a169:	call   0x2119:0xaa7c2519
  43a170:	jnp    0x43a1ec
  43a172:	enter  0x5737,0xe9
  43a176:	test   DWORD PTR [esi-0x4ff6af5],edi
  43a17c:	and    BYTE PTR [eax+0x5a],ah
  43a17f:	out    0x20,al
  43a181:	jbe    0x43a1c7
  43a183:	(bad)  
  43a184:	and    al,0x7b
  43a186:	pop    edx
  43a187:	jecxz  0x43a1ab
  43a189:	gs jmp 0x2e4cec14
  43a18f:	das    
  43a190:	xor    ecx,DWORD PTR [ebx+0x48]
  43a193:	sbb    dh,BYTE PTR [ebx]
  43a195:	jne    0x43a1d2
  43a197:	pop    ds
  43a198:	mov    edi,0x18b08ee
  43a19d:	gs sbb eax,0x660a7e4e
  43a1a3:	mov    eax,DWORD PTR [ecx]
  43a1a5:	gs sbb eax,0x8662f0f
  43a1ab:	push   ds
  43a1ac:	and    al,0x5c
  43a1ae:	or     al,0xe5
  43a1b0:	xor    cl,BYTE PTR [edx]
  43a1b2:	out    dx,eax
  43a1b3:	test   DWORD PTR [eax+0x290b0e65],eax
  43a1b9:	pop    edx
  43a1ba:	or     BYTE PTR [ebx],al
  43a1bc:	sub    DWORD PTR [esi-0x17],esi
  43a1bf:	test   DWORD PTR [eax+0xc],ebp
  43a1c2:	scas   al,BYTE PTR es:[edi]
  43a1c3:	cmc    
  43a1c4:	and    esp,DWORD PTR [eax-0x60]
  43a1c7:	jmp    0x43a1f7
  43a1c9:	jne    0x43a1a0
  43a1cb:	leave  
  43a1cc:	and    edi,DWORD PTR [ebx+0x0]
  43a1cf:	aam    0xd6
  43a1d1:	popa   
  43a1d2:	jo     0x43a1b3
  43a1d4:	inc    edx
  43a1d5:	pushf  
  43a1d6:	add    BYTE PTR [ebx],bl
  43a1d8:	jmp    0x6563:0xe61d4668
  43a1df:	add    BYTE PTR [edi],bl
  43a1e1:	shl    DWORD PTR [ecx+0x63],1
  43a1e4:	push   ds
  43a1e5:	inc    ebx
  43a1e6:	fwait
  43a1e7:	add    BYTE PTR [ebx],bl
  43a1e9:	jmp    0x723e:0xe8434468
  43a1f0:	adc    ah,ah
  43a1f2:	pop    ecx
  43a1f3:	add    BYTE PTR [edi],bl
  43a1f5:	inc    esp
  43a1f6:	cmp    eax,0x4f842b65
  43a1fb:	jo     0x43a218
  43a1fd:	ficomp DWORD PTR [ebp+eiz*2-0x51]
  43a201:	inc    edx
  43a202:	add    BYTE PTR [ecx],0x68
  43a205:	jmp    0xe089f984
  43a20a:	push   0x6f
  43a20c:	fmul   DWORD PTR [edx+0x40b3002d]
  43a212:	inc    eax
  43a213:	gs enter 0x5ddf,0x74
  43a218:	mov    edx,0xce6c2dd0
  43a21d:	rcr    DWORD PTR [ebp+0x45],1
  43a220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a221:	xchg   esi,ebp
  43a223:	call   DWORD PTR [edx+0x6b654947]
  43a229:	sub    DWORD PTR [ebx+0x73],0xffffff9c
  43a22d:	out    0x69,eax
  43a22f:	gs cwde 
  43a231:	inc    esi
  43a232:	add    BYTE PTR [ecx],0x68
  43a235:	jmp    0x43a2b1
  43a237:	push   ebp
  43a238:	das    
  43a239:	out    0x4f,al
  43a23b:	je     0x43a1c7
  43a23d:	lock imul ebp,DWORD PTR [esi+0x2f],0x15742
  43a245:	call   0x86911d34
  43a24a:	mov    ds,WORD PTR [ebx-0x5e7b9894]
  43a250:	xchg   BYTE PTR ds:[edi+0xb],ah
  43a254:	inc    ebx
  43a255:	pusha  
  43a256:	xchg   DWORD PTR [edx-0x697aa0a2],edi
  43a25c:	jmp    ecx
  43a25e:	sbb    eax,0xdf634106
  43a263:	mov    bh,0x66
  43a265:	pusha  
  43a266:	(bad)  
  43a267:	(bad)  
  43a268:	jo     0x43a1f0
  43a26a:	ror    BYTE PTR [eax],1
  43a26c:	dec    ebp
  43a26d:	sub    edi,DWORD PTR ds:0x38234aa7
  43a273:	pushf  
  43a274:	pop    esi
  43a275:	sub    esi,eax
  43a277:	mov    dh,0x66
  43a279:	sbb    ecx,esi
  43a27b:	(bad)  
  43a27c:	jb     0x43a298
  43a27e:	aam    0xa
  43a280:	les    eax,FWORD PTR [eax+edi*2+0x123973a7]
  43a287:	nop
  43a288:	arpl   WORD PTR [ecx],bx
  43a28a:	sbb    al,0xca
  43a28c:	push   0xffb504f0
  43a291:	jns    0x43a2b0
  43a293:	or     eax,DWORD PTR [ecx-0x15]
  43a296:	ja     0x43a24d
  43a298:	data16 fmul DWORD PTR [edi]
  43a29b:	lea    esi,[eax-0x2e]
  43a29e:	jl     0x43a230
  43a2a0:	pusha  
  43a2a1:	mov    cl,0xab
  43a2a3:	or     ch,BYTE PTR [eax*4+0x699374]
  43a2aa:	loop   0x43a2f0
  43a2ac:	xchg   ebp,eax
  43a2ad:	inc    ecx
  43a2ae:	mov    ah,0xbc
  43a2b0:	(bad)  
  43a2b1:	dec    edi
  43a2b2:	test   eax,0x86739052
  43a2b7:	int3   
  43a2b8:	or     cl,BYTE PTR [ecx+ebx*4+0x4a]
  43a2bc:	mov    ds:0xa54ab346,al
  43a2c1:	bound  esi,QWORD PTR [ecx+0x503e142]
  43a2c7:	inc    ebx
  43a2c8:	test   al,0xa6
  43a2ca:	xchg   ebp,eax
  43a2cb:	push   ss
  43a2cc:	enter  0x5693,0x2b
  43a2d0:	scas   eax,DWORD PTR es:[edi]
  43a2d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a2d2:	outs   dx,BYTE PTR ds:[esi]
  43a2d3:	xor    eax,0x42ae03e1
  43a2d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a2d9:	fwait
  43a2da:	dec    eax
  43a2db:	xor    BYTE PTR [ebp-0x51d8b164],cl
  43a2e1:	mov    ah,0xd9
  43a2e3:	mov    esp,0x274702a9
  43a2e8:	xchg   ebp,eax
  43a2e9:	mov    al,0x61
  43a2eb:	daa    
  43a2ec:	test   DWORD PTR [edi-0x5890d4aa],ebx
  43a2f2:	cs xor eax,0x42ea03e1
  43a2f8:	test   al,0xa6
  43a2fa:	xor    eax,0x259d8a15
  43a2ff:	sub    eax,0x3021b778
  43a304:	mov    ds:0x9d531225,eax
  43a30a:	sub    ah,BYTE PTR [edi]
  43a30c:	push   esp
  43a30d:	xchg   ecx,eax
  43a30e:	add    al,cl
  43a310:	es loope 0x43a316
  43a313:	push   ebx
  43a314:	inc    ebx
  43a315:	push   ds
  43a316:	sahf   
  43a317:	in     eax,0xd
  43a319:	inc    esi
  43a31a:	sahf   
  43a31b:	hlt    
  43a31c:	inc    edx
  43a31d:	xor    eax,0x2f25d302
  43a322:	test   al,0xcc
  43a324:	and    eax,0x23b09114
  43a329:	push   es
  43a32a:	mov    ch,0x49
  43a32c:	mov    esp,0x25c7026b
  43a331:	adc    eax,0xf325aab7
  43a336:	mov    esp,0xa10628d3
  43a33b:	mov    ch,0x9
  43a33d:	or     al,BYTE PTR [edi]
  43a33f:	call   0xe5401f6e
  43a344:	das    
  43a345:	popa   
  43a346:	(bad)  
  43a347:	repz adc cl,BYTE PTR [edx]
  43a34a:	xchg   ebx,eax
  43a34b:	test   BYTE PTR [edx],cl
  43a34d:	popa   
  43a34e:	lds    ebx,FWORD PTR [eax+esi*1]
  43a351:	gs pushf 
  43a353:	and    BYTE PTR [edx],ch
  43a355:	jne    0x43a307
  43a357:	sbb    DWORD PTR [ecx],esp
  43a359:	pop    ebp
  43a35a:	jmp    0x995016e4
  43a35f:	add    ch,BYTE PTR [edi]
  43a361:	jbe    0x43a2f8
  43a363:	std    
  43a364:	sub    eax,0x9298865
  43a369:	gs call 0xbbfa:0x8c671cf6
  43a371:	out    dx,al
  43a372:	mov    eax,0x65018400
  43a377:	jge    0x43a369
  43a379:	and    BYTE PTR [eax+0x74],ah
  43a37c:	in     al,dx
  43a37d:	das    
  43a37e:	gs test dh,al
  43a381:	sub    dh,BYTE PTR [ebp+0x7f]
  43a384:	icebp  
  43a385:	mov    ebx,0x18b3fee
  43a38a:	gs push ebp
  43a38c:	iret   
  43a38d:	and    BYTE PTR [eax+0x5c],ah
  43a390:	cmp    DWORD PTR [edi],ebp
  43a392:	imul   edx,DWORD PTR [ebp+0x27],0x8adbeebb
  43a399:	add    DWORD PTR [ebp+0x35],esp
  43a39c:	inc    ecx
  43a39d:	daa    
  43a39e:	imul   edi,DWORD PTR [edx],0x3c6908f9
  43a3a4:	daa    
  43a3a5:	adc    cl,BYTE PTR [edx]
  43a3a7:	xchg   ebp,eax
  43a3a8:	mov    BYTE PTR ds:0x1ff61a71,cl
  43a3ae:	pop    ebp
  43a3af:	cmp    ebx,ebp
  43a3b1:	sub    al,0x69
  43a3b3:	cld    
  43a3b4:	out    0x2e,al
  43a3b6:	add    BYTE PTR gs:0x816e47d4,ch
  43a3bd:	xlat   BYTE PTR ds:[ebx]
  43a3be:	pop    ecx
  43a3bf:	add    BYTE PTR [eax-0x718da9bc],ah
  43a3c5:	jecxz  0x43a42c
  43a3c7:	push   eax
  43a3c8:	cmp    bh,cl
  43a3ca:	jnp    0x43a43c
  43a3cc:	(bad)  
  43a3ce:	pusha  
  43a3cf:	jne    0x43a403
  43a3d1:	(bad)  
  43a3d2:	out    dx,al
  43a3d3:	push   DWORD PTR [edx]
  43a3d5:	inc    esi
  43a3d6:	dec    ecx
  43a3d7:	add    BYTE PTR gs:[ebx],dh
  43a3da:	cli    
  43a3db:	imul   ebp,DWORD PTR [esi+0x32],0xfffffffe
  43a3df:	jp     0x43a446
  43a3e1:	retf   0x6bf4
  43a3e4:	arpl   WORD PTR [ebx],dx
  43a3e6:	aas    
  43a3e7:	inc    ebp
  43a3e8:	add    DWORD PTR [eax],esp
  43a3ea:	loop   0x43a466
  43a3ec:	dec    ebp
  43a3ed:	add    bl,cl
  43a3ef:	jnp    0x43a3f1
  43a3f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a3f2:	inc    esp
  43a3f3:	inc    ebx
  43a3f4:	gs cmp edx,edx
  43a3f7:	inc    edi
  43a3f8:	je     0x43a3fc
  43a3fa:	fimul  DWORD PTR [eax+0x72]
  43a3fd:	clc    
  43a3fe:	fnstcw WORD PTR [esi]
  43a400:	outs   dx,DWORD PTR ds:[esi]
  43a401:	push   es
  43a402:	fnstcw WORD PTR [edx+0x0]
  43a405:	mov    DWORD PTR [ecx+eax*2+0x70],0x654ad842
  43a40d:	sub    al,0xdb
  43a40f:	jp     0x43a480
  43a411:	fcomip st,st(5)
  43a413:	out    dx,al
  43a414:	call   ebp
  43a416:	aas    
  43a417:	dec    ecx
  43a418:	gs mov bl,0xf1
  43a41b:	jnp    0x43a47f
  43a41d:	call   0x9c46:0x6f7560e3
  43a424:	add    bh,BYTE PTR [ebx+eiz*8+0x7a]
  43a428:	dec    ebx
  43a429:	add    bh,0x4c
  43a42c:	outs   dx,DWORD PTR ds:[esi]
  43a42d:	jle    0x43a3ff
  43a42f:	push   0x53
  43a431:	xchg   BYTE PTR [edi-0x5b],dl
  43a434:	jae    0x43a3d9
  43a436:	stos   DWORD PTR es:[edi],eax
  43a437:	or     cl,BYTE PTR [esi-0x79]
  43a43a:	push   0xbb0073a9
  43a43f:	ds xchg esp,eax
  43a441:	jb     0x43a412
  43a443:	mov    bh,0xa9
  43a445:	push   0xffffffcf
  43a447:	pop    edi
  43a448:	push   es
  43a449:	jle    0x43a3d2
  43a44b:	call   0x93f617f9
  43a450:	xchg   esp,eax
  43a451:	bound  esp,QWORD PTR [edi-0x79]
  43a454:	scas   al,BYTE PTR es:[edi]
  43a455:	bound  esi,QWORD PTR [ebp-0x7c]
  43a458:	jle    0x43a4c2
  43a45a:	jbe    0x43a407
  43a45c:	or     bl,BYTE PTR [ebp-0x7c]
  43a45f:	(bad)  [ecx+0x7efc6f60]
  43a465:	bound  edx,QWORD PTR [eax+edx*8-0x73]
  43a469:	imul   ebp,DWORD PTR [edx-0x30],0xdc634a9b
  43a470:	xchg   edi,eax
  43a471:	pop    esi
  43a472:	sub    esi,eax
  43a474:	mov    ebx,0x66fb9ff
  43a479:	inc    edi
  43a47a:	xor    eax,0x325ca9dd
  43a47f:	ficom  WORD PTR [ecx+0xb321a6f]
  43a485:	ss test bl,bl
  43a488:	xchg   esp,eax
  43a489:	data16 and BYTE PTR [edi],dl
  43a48c:	mov    ecx,0x90ff1866
  43a491:	jo     0x43a419
  43a493:	pushf  
  43a494:	add    eax,0xab0ef743
  43a499:	imul   edx,esp,0x6
  43a49c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a49d:	jae    0x43a425
  43a49f:	or     eax,DWORD PTR ss:[edi+0x0]
  43a4a3:	lock ja 0x43a435
  43a4a6:	ins    DWORD PTR es:[edi],dx
  43a4a7:	aad    0xfe
  43a4a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a4aa:	jae    0x43a460
  43a4ac:	inc    edx
  43a4ad:	(bad)  
  43a4ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a4af:	aad    0x42
  43a4b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a4b2:	add    al,0xca
  43a4b4:	xor    al,0x2
  43a4b6:	xchg   ecx,eax
  43a4b7:	les    ebx,FWORD PTR [esi]
  43a4b9:	or     BYTE PTR [edi+0x34cb931],bl
  43a4bf:	(bad)  
  43a4c0:	pop    ds
  43a4c1:	cmc    
  43a4c2:	mov    al,0xa8
  43a4c4:	sub    ch,bh
  43a4c6:	cwde   
  43a4c7:	xchg   esi,eax
  43a4c8:	or     ebp,edi
  43a4ca:	mov    eax,ds:0x60f429e
  43a4cf:	mov    dh,0x29
  43a4d1:	aam    0x8f
  43a4d3:	dec    esp
  43a4d4:	pop    ds
  43a4d5:	aam    0x94
  43a4d7:	pop    eax
  43a4d8:	and    esi,eax
  43a4da:	mov    al,0xf1
  43a4dc:	mov    eax,0x2b44042e
  43a4e1:	mov    ebp,0xc41f5397
  43a4e6:	(bad)  
  43a4e7:	fnstcw WORD PTR [eax+0x323f05ed]
  43a4ed:	jle    0x43a488
  43a4ef:	sub    edi,DWORD PTR ss:[edi-0x61]
  43a4f3:	xor    DWORD PTR cs:[edi+ecx*4-0x6775d1a8],esi
  43a4fb:	pop    ds
  43a4fc:	adc    ecx,esp
  43a4fe:	add    esi,eax
  43a500:	inc    ebx
  43a501:	xchg   esp,eax
  43a502:	sahf   
  43a503:	adc    eax,0x95890e
  43a508:	and    al,0x23
  43a50a:	test   DWORD PTR [edi-0x6fa3cadc],edi
  43a510:	push   ds
  43a511:	xor    ah,cl
  43a513:	add    ecx,eax
  43a515:	inc    edx
  43a516:	and    al,0x98
  43a518:	out    dx,al
  43a519:	xor    eax,DWORD PTR [esi-0x40]
  43a51c:	in     al,0x33
  43a51e:	pop    esp
  43a51f:	nop
  43a520:	fidiv  WORD PTR [edx]
  43a522:	loope  0x43a527
  43a524:	out    dx,al
  43a525:	inc    ecx
  43a526:	or     ch,BYTE PTR [esi]
  43a528:	stc    
  43a529:	xor    ebx,DWORD PTR [edx+0x3b]
  43a52c:	out    dx,eax
  43a52d:	push   ss
  43a52e:	gs sbb dh,bl
  43a531:	adc    ah,BYTE PTR [ecx+0xf]
  43a534:	out    0x2a,al
  43a536:	ja     0x43a572
  43a538:	push   ss
  43a539:	sbb    DWORD PTR [esi+0x0],esi
  43a53c:	cvtpi2ps xmm1,QWORD PTR [edx]
  43a53f:	stc    
  43a540:	test   DWORD PTR [ebp+0x7c],esi
  43a543:	add    al,0xe5
  43a545:	xor    esp,DWORD PTR [ebp+0x1e]
  43a548:	std    
  43a549:	sub    DWORD PTR [esi-0x2],esp
  43a54c:	test   BYTE PTR [esi],0x76
  43a54f:	enter  0x20f9,0x5f
  43a553:	iret   
  43a554:	ss mov eax,0x7585a7ee
  43a55a:	pop    esi
  43a55b:	mov    esi,0xd057251a
  43a560:	(bad)  
  43a562:	pop    edi
  43a563:	mov    dh,0x1a
  43a565:	xor    al,0x69
  43a567:	mov    ebp,0xe9602afc
  43a56c:	add    BYTE PTR [ebp-0x1745f420],al
  43a572:	xor    ebx,DWORD PTR [edx-0x65]
  43a575:	push   ds
  43a576:	pop    ss
  43a577:	gs call 0x2b11:0x7f611312
  43a57f:	ja     0x43a51b
  43a581:	stc    
  43a582:	sbb    BYTE PTR [esi-0x70],dh
  43a585:	(bad)  
  43a586:	sub    DWORD PTR [edx],ecx
  43a588:	xchg   edi,eax
  43a589:	test   DWORD PTR [ebp+0x7c],esi
  43a58c:	test   ah,ah
  43a58e:	xor    esp,DWORD PTR [ebp+0x2d]
  43a591:	out    0x26,eax
  43a593:	arpl   WORD PTR [ebp+0x19],dx
  43a596:	daa    
  43a597:	push   edi
  43a598:	jmp    0x2a4e1222
  43a59d:	adc    bl,BYTE PTR [eax]
  43a59f:	jl     0x43a5a1
  43a5a1:	mov    bl,0xcf
  43a5a3:	jns    0x43a60a
  43a5a5:	popf   
  43a5a6:	out    0xee,eax
  43a5a8:	jmp    FWORD PTR [edx-0x649ab6c3]
  43a5ae:	cli    
  43a5af:	dec    edi
  43a5b0:	jae    0x43a61d
  43a5b2:	cmc    
  43a5b3:	pusha  
  43a5b4:	jo     0x43a550
  43a5b6:	rol    BYTE PTR [edi+0x6e],cl
  43a5b9:	mov    edi,ecx
  43a5bb:	out    dx,al
  43a5bc:	inc    DWORD PTR [ebx+0x43]
  43a5bf:	sub    eax,0x5bd47e68
  43a5c4:	jo     0x43a5e5
  43a5c6:	loop   0x43a624
  43a5c8:	push   edi
  43a5c9:	das    
  43a5ca:	inc    ebx
  43a5cb:	sbb    eax,0x7ae16801
  43a5d0:	dec    ecx
  43a5d1:	add    BYTE PTR [eax+edx*8],bh
  43a5d4:	pusha  
  43a5d5:	dec    ecx
  43a5d6:	rcl    esp,1
  43a5d8:	popa   
  43a5d9:	add    BYTE PTR [eax-0x418db9c2],ch
  43a5df:	mov    DWORD PTR [edi+0x63],0xffeeccd0
  43a5e6:	pushf  
  43a5e7:	inc    esp
  43a5e8:	push   esi
  43a5e9:	outs   dx,DWORD PTR ds:[esi]
  43a5ea:	cli    
  43a5eb:	int3   
  43a5ec:	arpl   WORD PTR [bx+si],dx
  43a5ef:	xlat   BYTE PTR ds:[ebx]
  43a5f0:	imul   eax,DWORD PTR [eax],0x1d
  43a5f3:	ds dec ecx
  43a5f5:	gs sbb edi,esp
  43a5f8:	imul   edi,DWORD PTR [ecx+0xd],0xffffffd0
  43a5fc:	dec    edi
  43a5fd:	jb     0x43a60a
  43a5ff:	hlt    
  43a600:	jp     0x43a663
  43a602:	sub    esp,edx
  43a604:	out    dx,al
  43a605:	call   DWORD PTR [esi+0x1f614340]
  43a60b:	call   0xd04f1477
  43a610:	jns    0x43a662
  43a612:	xor    ch,dl
  43a614:	pusha  
  43a615:	je     0x43a5f3
  43a617:	ds aad 0x1
  43a61a:	xchg   BYTE PTR [edx-0x65],ah
  43a61d:	push   eax
  43a61e:	fbstp  TBYTE PTR [ebp-0x56]
  43a621:	push   0xc20aabf1
  43a626:	test   BYTE PTR [eax-0x57],bl
  43a629:	jae    0x43a5dc
  43a62b:	add    bl,BYTE PTR [eax-0x49931e9d]
  43a631:	push   0x40aabd5
  43a636:	add    BYTE PTR [edi-0x388c56a4],al
  43a63c:	cmp    eax,0x4fb562ab
  43a641:	xchg   edi,eax
  43a642:	ins    DWORD PTR es:[edi],dx
  43a643:	xchg   BYTE PTR [ebx-0x5054befb],bl
  43a649:	retf   
  43a64a:	imul   esp,DWORD PTR [edi-0x5eb46448],0xffffffb5
  43a651:	(bad)  
  43a652:	push   eax
  43a653:	xchg   BYTE PTR [edi-0x7094befb],al
  43a659:	mov    edx,0x9486745e
  43a65e:	jae    0x43a5e6
  43a660:	daa    
  43a661:	push   es
  43a662:	inc    ecx
  43a663:	arpl   di,si
  43a665:	lahf   
  43a666:	data16 jo 0x43a6e8
  43a669:	xchg   edi,eax
  43a66a:	jo     0x43a6a0
  43a66c:	xchg   BYTE PTR [ebx+0xb348673],ch
  43a672:	inc    esp
  43a673:	pop    edi
  43a674:	fcomp  DWORD PTR [edx-0x6d37c5a2]
  43a67a:	dec    edx
  43a67b:	and    ebx,eax
  43a67d:	fwait
  43a67e:	pop    esi
  43a67f:	sub    DWORD PTR [esi-0x60560061],edi
  43a685:	or     BYTE PTR [ebx+0x15],cl
  43a688:	mov    esp,0x372f5e9f
  43a68d:	lods   eax,DWORD PTR ds:[esi]
  43a68e:	push   0x6b99d614
  43a693:	adc    al,BYTE PTR [edx+0x5a]
  43a696:	xchg   esp,eax
  43a697:	in     eax,dx
  43a698:	pop    ds
  43a699:	and    BYTE PTR [edx+0x441fe300],ah
  43a69f:	nop
  43a6a0:	loop   0x43a6e4
  43a6a2:	jmp    0x316763a8
  43a6a7:	scas   al,BYTE PTR es:[edi]
  43a6a8:	call   0xb8d2dbdd
  43a6ad:	es sub al,0x9f
  43a6b0:	fmul   DWORD PTR ds:0x11b503e1
  43a6b6:	push   ds
  43a6b7:	mov    dl,0x72
  43a6b9:	jo     0x43a67a
  43a6bb:	lahf   
  43a6bc:	lods   eax,DWORD PTR ds:[esi]
  43a6bd:	es loope 0x43a6c3
  43a6c0:	pop    es
  43a6c1:	inc    ebx
  43a6c2:	sub    dl,BYTE PTR [ecx-0x67eae02a]
  43a6c8:	retf   0x24
  43a6cb:	lea    ebp,[edi+0x11a00a11]
  43a6d1:	mov    ch,0xb6
  43a6d3:	add    al,bh
  43a6d5:	pop    ds
  43a6d6:	int    0xb7
  43a6d8:	fs and al,0xc8
  43a6db:	(bad)  
  43a6dc:	popa   
  43a6dd:	adc    edx,ecx
  43a6df:	lahf   
  43a6e0:	icebp  
  43a6e1:	mov    ah,0xac
  43a6e3:	add    ebp,DWORD PTR [ebx+0x648dd725]
  43a6e9:	xor    BYTE PTR [ebp-0x72e19f50],dh
  43a6ef:	xchg   esp,eax
  43a6f0:	inc    edx
  43a6f1:	cs mov bl,0x9a
  43a6f4:	pop    edi
  43a6f5:	sbb    eax,0xd259ab4
  43a6fa:	loope  0x43a6ff
  43a6fc:	ret    0xa441
  43a6ff:	xchg   ecx,eax
  43a700:	add    BYTE PTR [eax],bh
  43a702:	xor    dl,BYTE PTR [ebp-0x46d1db44]
  43a708:	mov    ds:0xa2912a32,al
  43a70d:	sub    esp,DWORD PTR [ebx]
  43a70f:	or     al,BYTE PTR [ebp+eax*4-0x855f61b]
  43a716:	sub    edi,DWORD PTR [edx+0x5d]
  43a719:	inc    ebp
  43a71a:	pop    ss
  43a71b:	jns    0x43a771
  43a71d:	sbb    eax,0x1b2a6526
  43a722:	sub    dh,BYTE PTR [esi+0x44]
  43a725:	cli    
  43a726:	das    
  43a727:	push   edi
  43a728:	jmp    0x2a4d24b2
  43a72d:	hlt    
  43a72e:	sub    al,0x7a
  43a730:	cmp    eax,0x445e2114
  43a735:	and    eax,0x1b2a6527
  43a73a:	sub    dh,BYTE PTR [esi+0x4]
  43a73d:	or     dh,BYTE PTR [eax]
  43a73f:	or     bl,BYTE PTR [edx-0x7b]
  43a742:	jne    0x43a7c0
  43a744:	adc    BYTE PTR [edx],dl
  43a746:	xor    BYTE PTR [ebx-0x5],cl
  43a749:	add    BYTE PTR ds:0x14da0476,dl
  43a74f:	jnp    0x43a752
  43a751:	mov    dh,al
  43a753:	or     DWORD PTR [edx],ebp
  43a755:	hlt    
  43a756:	sub    al,0x7a
  43a758:	fld    QWORD PTR [ecx+0x21]
  43a75b:	jnp    0x43a732
  43a75d:	pop    ss
  43a75e:	sub    esi,DWORD PTR [ecx-0x5f]
  43a761:	and    al,0x27
  43a763:	(bad)  
  43a764:	jmp    0x9ce2c69
  43a769:	stos   BYTE PTR es:[edi],al
  43a76a:	imul   DWORD PTR [edx+edi*2]
  43a76d:	mov    ch,0x1d
  43a76f:	adc    eax,0x1511c17b
  43a774:	jbe    0x43a73e
  43a776:	test   DWORD PTR [ecx+0x2115b608],esi
  43a77c:	pusha  
  43a77d:	mov    ecx,0x8c6b2b17
  43a782:	push   ss
  43a783:	daa    
  43a784:	push   esi
  43a785:	jle    0x43a795
  43a787:	and    DWORD PTR [eax+0x0],esp
  43a78a:	scas   eax,DWORD PTR es:[edi]
  43a78b:	aas    
  43a78c:	pop    ecx
  43a78d:	add    eax,esp
  43a78f:	aam    0x7a
  43a791:	push   ebx
  43a792:	push   es
  43a793:	aam    0x3d
  43a795:	jne    0x43a794
  43a797:	cmp    BYTE PTR [ebx+0x74],0xd7
  43a79b:	das    
  43a79c:	pusha  
  43a79d:	imul   edx,ebx,0x5b000a35
  43a7a3:	cmp    eax,0x30c27041
  43a7a8:	push   esi
  43a7a9:	push   0x644f299d
  43a7ae:	jae    0x43a7df
  43a7b0:	gs gs leave 
  43a7b3:	ds push edx
  43a7b5:	add    DWORD PTR [eax-0x69ac89d7],esp
  43a7bb:	sub    bh,BYTE PTR ds:0x7afd8d75
  43a7c1:	je     0x43a74a
  43a7c3:	das    
  43a7c4:	pusha  
  43a7c5:	imul   edx,DWORD PTR [ebx+0x6f2d35],0x763122
  43a7cf:	gs cmp eax,0xb136549
  43a7d5:	popa   
  43a7d6:	imul   eax,DWORD PTR [edx-0x2e91b8d0],0x2f
  43a7dd:	pusha  
  43a7de:	ins    DWORD PTR es:[edi],dx
  43a7df:	into   
  43a7e0:	sub    ah,BYTE PTR [edi+0x6f]
  43a7e3:	leave  
  43a7e4:	outs   dx,BYTE PTR ds:[esi]
  43a7e6:	add    BYTE PTR [ebp*1+0x2a23616b],bl
  43a7ed:	pop    edx
  43a7ee:	jb     0x43a7b8
  43a7f0:	sbb    ebp,DWORD PTR [ebx+0x73]
  43a7f3:	or     al,0xfe
  43a7f5:	pop    esp
  43a7f6:	push   ebp
  43a7f7:	or     al,0x2a
  43a7f9:	pusha  
  43a7fa:	push   edi
  43a7fb:	scas   eax,DWORD PTR es:[edi]
  43a7fc:	ds cdq 
  43a7fe:	add    ebx,ebp
  43a800:	das    
  43a801:	popa   
  43a802:	imul   eax,DWORD PTR [esi+0x34507ad6],0xffffffc2
  43a809:	jo     0x43a872
  43a80b:	xor    al,dh
  43a80d:	arpl   WORD PTR [ebx+0x30],sp
  43a810:	retf   0x735e
  43a813:	sub    edx,esp
  43a815:	or     bl,BYTE PTR [ecx]
  43a817:	xchg   dl,ch
  43a819:	data16 data16 sti 
  43a81c:	or     al,0x72
  43a81e:	push   esp
  43a81f:	jmp    0xd6ae0938
  43a824:	or     eax,0x6fdf725d
  43a829:	popa   
  43a82a:	popa   
  43a82b:	jmp    0x43a899
  43a82d:	push   es
  43a82e:	rol    BYTE PTR [eax],cl
  43a830:	xchg   BYTE PTR [eax+edi*2+0x77],bl
  43a834:	(bad)  
  43a835:	outs   dx,DWORD PTR ds:[esi]
  43a836:	push   esp
  43a837:	arpl   sp,dx
  43a839:	add    ah,BYTE PTR [edi+esi*2-0x2b]
  43a83d:	push   edx
  43a83e:	arpl   WORD PTR [edx-0x59],bp
  43a841:	push   edi
  43a842:	jno    0x43a8b2
  43a844:	stos   DWORD PTR es:[edi],eax
  43a845:	jo     0x43a84d
  43a847:	ret    
  43a848:	xchg   BYTE PTR [eax+edi*2+0x77],bl
  43a84c:	xchg   esi,eax
  43a84d:	scas   eax,DWORD PTR es:[edi]
  43a84e:	inc    ebx
  43a84f:	arpl   WORD PTR [edx-0x49889e8c],dx
  43a855:	cmp    bh,BYTE PTR [eax+0x5f]
  43a858:	fwait
  43a859:	fwait
  43a85a:	or     al,dh
  43a85c:	xchg   ah,bl
  43a85e:	je     0x43a8d7
  43a860:	jbe    0x43a7f9
  43a862:	cmp    eax,0x7488766b
  43a867:	je     0x43a8a6
  43a869:	xchg   BYTE PTR [ebp+0x0],ch
  43a86c:	xchg   BYTE PTR [eax],dh
  43a86e:	or     edi,DWORD PTR ds:0x747a8254
  43a874:	dec    edx
  43a875:	jle    0x43a8ee
  43a877:	je     0x43a8cd
  43a879:	lock ins DWORD PTR es:[edi],dx
  43a87b:	inc    ebp
  43a87c:	sub    eax,DWORD PTR [edx-0x56]
  43a87f:	add    edi,DWORD PTR ds:0x2971ba43
  43a885:	mov    ah,BYTE PTR ss:[edx+esi*1+0x27]
  43a88a:	mov    ah,0x7c
  43a88c:	xor    esi,DWORD PTR [esi]
  43a88e:	jle    0x43a900
  43a890:	dec    ebx
  43a891:	sbb    dh,BYTE PTR [esi+0x77]
  43a894:	add    BYTE PTR [edx],ch
  43a896:	and    DWORD PTR [eax+0x71],esi
  43a899:	inc    ebp
  43a89a:	sub    bl,BYTE PTR [eax+0x3a43f703]
  43a8a0:	jb     0x43a883
  43a8a2:	ss pop edx
  43a8a4:	arpl   dx,sp
  43a8a6:	sbb    ebx,DWORD PTR [ebx+0x67]
  43a8a9:	mov    ebx,0xf0774427
  43a8ae:	sbb    ebp,DWORD PTR ds:0x3427c27b
  43a8b4:	gs loopne 0x43a8d2
  43a8b7:	xor    DWORD PTR [eax-0x21],edi
  43a8ba:	xor    al,0xe1
  43a8bc:	add    esi,esp
  43a8be:	inc    ebx
  43a8bf:	xor    al,0x67
  43a8c1:	mov    dl,0x15
  43a8c3:	push   es
  43a8c4:	gs mov ch,0x34
  43a8c7:	or     bh,BYTE PTR [eax-0x4f]
  43a8ca:	push   es
  43a8cb:	push   es
  43a8cc:	jne    0x43a891
  43a8ce:	xor    al,0x1a
  43a8d0:	je     0x43a864
  43a8d2:	and    ebx,esi
  43a8d4:	inc    edi
  43a8d5:	mov    cl,0x25
  43a8d7:	add    eax,0x24429804
  43a8dc:	jno    0x43a94a
  43a8de:	cmp    BYTE PTR [esi-0x2aea8d8b],bh
  43a8e4:	jne    0x43a94f
  43a8e6:	and    al,al
  43a8e8:	push   esp
  43a8e9:	gs and eax,0x366975d6
  43a8ef:	retf   0x6547
  43a8f2:	xor    eax,0x326975c4
  43a8f7:	or     bh,BYTE PTR [ebp+0x56205600]
  43a8fd:	mov    esi,0x9c6b255a
  43a902:	xor    ebp,DWORD PTR [ecx]
  43a904:	jbe    0x43a8a6
  43a906:	dec    ecx
  43a907:	and    eax,0x29338a7b
  43a90c:	jp     0x43a8a3
  43a90e:	push   ss
  43a90f:	and    BYTE PTR [edi-0x17],dl
  43a912:	test   ebp,edi
  43a914:	or     BYTE PTR [esi-0x73a4c9d8],ah
  43a91a:	and    dh,BYTE PTR ds:0x37f9807c
  43a920:	inc    esi
  43a921:	dec    esp
  43a922:	repz or eax,0x36fa507c
  43a928:	pop    edi
  43a929:	pop    ebx
  43a92a:	ror    DWORD PTR [edi],cl
  43a92c:	imul   edi,DWORD PTR ds:0x1a0bf88a,0xffffffe1
  43a933:	ss pop ebx
  43a935:	inc    esp
  43a936:	jmp    0x43a96b
  43a938:	jl     0x43a97a
  43a93a:	into   
  43a93b:	aaa    
  43a93c:	inc    esi
  43a93d:	inc    esp
  43a93e:	mov    ebx,0xb2107c0d
  43a943:	ss pop edi
  43a945:	sbb    ebx,ebx
  43a947:	packssdw mm0,QWORD PTR ds:0x3b0c7782
  43a94e:	test   eax,0xa0fb4b21
  43a953:	pcmpeqd mm0,QWORD PTR [ebx+eax*8]
  43a957:	and    esi,DWORD PTR [ecx+0x2c]
  43a95a:	mov    dl,BYTE PTR [ecx]
  43a95c:	or     bh,bh
  43a95e:	add    BYTE PTR [ebx+0x54ce6500],cl
  43a964:	xor    esp,DWORD PTR [ebp-0x25]
  43a967:	ins    BYTE PTR es:[edi],dx
  43a968:	adc    al,0x69
  43a96a:	lds    esi,FWORD PTR [eax+0x23]
  43a96d:	inc    ebp
  43a96e:	sar    DWORD PTR [esi],1
  43a970:	inc    edx
  43a971:	or     al,BYTE PTR [eax]
  43a973:	into   
  43a974:	inc    ebp
  43a975:	inc    eax
  43a976:	gs enter 0x7a12,0x65
  43a97b:	sar    esi,0x6a
  43a97e:	jns    0x43a96a
  43a980:	sub    ebx,DWORD PTR [ecx+0x0]
  43a983:	fild   WORD PTR [ebp+0x40]
  43a986:	or     BYTE PTR gs:[edi],al
  43a989:	pop    esi
  43a98a:	outs   dx,DWORD PTR ds:[esi]
  43a98b:	or     al,0x29
  43a98d:	inc    ebp
  43a98e:	test   BYTE PTR gs:[ebx+0x74],0x2
  43a993:	std    
  43a994:	sub    BYTE PTR [ecx+0x53],ch
  43a997:	or     bh,BYTE PTR [eax]
  43a999:	pop    esp
  43a99a:	popa   
  43a99b:	add    edi,DWORD PTR [ecx]
  43a99d:	imul   eax,DWORD PTR [ebp-0x9],0xa
  43a9a1:	or     al,BYTE PTR [eax]
  43a9a3:	push   0xda714b46
  43a9a8:	and    eax,0x1ac6535e
  43a9ad:	or     al,BYTE PTR [eax]
  43a9af:	scas   al,BYTE PTR es:[edi]
  43a9b0:	cli    
  43a9b1:	pop    ebx
  43a9b2:	inc    ecx
  43a9b3:	jg     0x43a9b2
  43a9b5:	sbb    al,0x32
  43a9b7:	sbb    DWORD PTR [edx],0x435f6c5e
  43a9bd:	jp     0x43a9c0
  43a9bf:	js     0x43a9f9
  43a9c1:	fs jae 0x43a9c4
  43a9c4:	lahf   
  43a9c5:	xor    al,0x67
  43a9c7:	outs   dx,BYTE PTR ds:[esi]
  43a9c8:	fwait
  43a9c9:	sub    BYTE PTR [ecx+0x0],bl
  43a9cc:	add    BYTE PTR [ebp+0x79],0x76
  43a9d0:	and    DWORD PTR [edx+edi*2],esi
  43a9d3:	jb     0x43aa4b
  43a9d5:	and    BYTE PTR [esi+0x66],dh
  43a9d8:	pop    esi
  43a9d9:	inc    esi
  43a9da:	push   0x5e346a01
  43a9df:	push   ebp
  43a9e0:	add    DWORD PTR [edx],ebx
  43a9e2:	pop    ebp
  43a9e3:	arpl   si,cx
  43a9e5:	xor    ch,BYTE PTR [ebx+0x41]
  43a9e8:	fild   WORD PTR [edx+0x14]
  43a9eb:	add    DWORD PTR [esi+0x456e76ec],eax
  43a9f1:	out    dx,al
  43a9f2:	jp     0x43aa3e
  43a9f4:	dec    edi
  43a9f5:	fimul  DWORD PTR [edx]
  43a9f7:	ins    DWORD PTR es:[edi],dx
  43a9f8:	xchg   cl,cl
  43a9fa:	gs je  0x43aa5b
  43a9fd:	loop   0x43aa7a
  43a9ff:	push   ebx
  43aa00:	push   esp
  43aa01:	int    0x57
  43aa03:	add    BYTE PTR [esi+0x27500af2],al
  43aa09:	aad    0x62
  43aa0b:	inc    edx
  43aa0c:	pop    ds
  43aa0d:	(bad)  
  43aa0e:	inc    dx
  43aa10:	das    
  43aa11:	sub    eax,0xd6274a62
  43aa16:	popa   
  43aa17:	push   ecx
  43aa18:	xchg   BYTE PTR [esi+eax*1],dh
  43aa1b:	push   eax
  43aa1c:	daa    
  43aa1d:	sub    eax,0x2eeb4e63
  43aa22:	pusha  
  43aa23:	jb     0x43aa08
  43aa25:	pop    ebp
  43aa26:	pop    ebp
  43aa27:	ins    BYTE PTR es:[edi],dx
  43aa28:	add    bl,ch
  43aa2a:	push   0x6ce56376
  43aa2f:	push   es
  43aa30:	adc    eax,0x6e726887
  43aa35:	lds    edx,FWORD PTR [esi]
  43aa37:	jbe    0x43aa83
  43aa39:	(bad)  
  43aa3a:	fwait
  43aa3b:	or     dl,BYTE PTR [ebp-0x7a]
  43aa3e:	dec    ebx
  43aa3f:	gs je  0x43a9f0
  43aa42:	bound  edi,QWORD PTR [ebx+0x44]
  43aa45:	scas   eax,DWORD PTR es:[edi]
  43aa46:	dec    ecx
  43aa47:	popa   
  43aa48:	pop    ebp
  43aa49:	mov    edx,0xd1777c3c
  43aa4e:	fwait
  43aa4f:	or     ch,BYTE PTR [esi]
  43aa51:	xchg   BYTE PTR [ebx+0x65],ch
  43aa54:	je     0x43aa04
  43aa56:	pop    edx
  43aa57:	bound  esp,QWORD PTR [ebx+ecx*8+0x43]
  43aa5b:	jb     0x43aac0
  43aa5d:	cwde   
  43aa5e:	test   al,0x5d
  43aa60:	imul   esi,DWORD PTR [eax+0x54],0x42865306
  43aa67:	mov    cl,0x64
  43aa69:	jp     0x43aa85
  43aa6b:	test   al,0x68
  43aa6d:	jb     0x43aa75
  43aa6f:	shr    DWORD PTR [esp+edx*2+0x27],cl
  43aa73:	(bad)  
  43aa74:	js     0x43aae3
  43aa76:	and    BYTE PTR [esi+0x66423771],bh
  43aa7c:	add    esi,DWORD PTR [esi]
  43aa7e:	and    ebp,DWORD PTR [ebp-0x51d8af95]
  43aa84:	outs   dx,BYTE PTR ds:[esi]
  43aa85:	xor    al,0x27
  43aa87:	mov    ds:0x94195364,eax
  43aa8c:	outs   dx,DWORD PTR ds:[esi]
  43aa8d:	add    BYTE PTR [ecx+0x31],cl
  43aa90:	mov    DWORD PTR [esi-0x7a],edx
  43aa93:	inc    edx
  43aa94:	pop    eax
  43aa95:	add    ecx,DWORD PTR [ebx-0x6]
  43aa98:	pushf  
  43aa99:	push   0x68752722
  43aa9e:	xor    al,0x23
  43aaa0:	test   DWORD PTR [eax-0x1b],edi
  43aaa3:	adc    eax,0x422b03e1
  43aaa8:	xor    al,0x4c
  43aaaa:	retf   0x3d27
  43aaad:	addr16 repnz daa 
  43aab0:	sub    al,0x67
  43aab2:	fst    DWORD PTR ds:0x437803e1
  43aab8:	adc    al,0x78
  43aaba:	loopne 0x43aabd
  43aabc:	ds je  0x43aa7b
  43aabf:	adc    eax,0x42bb03e1
  43aac4:	adc    DWORD PTR [ebx-0x4e],esp
  43aac7:	sbb    dh,BYTE PTR [esi]
  43aac9:	arpl   WORD PTR [edx-0x49aee6df],di
  43aacf:	daa    
  43aad0:	add    al,0x55
  43aad2:	xchg   BYTE PTR [edx+0x74],al
  43aad5:	add    al,0xb6
  43aad7:	and    ebp,ebp
  43aad9:	imul   eax,ebx,0x19
  43aadc:	sbb    dh,BYTE PTR [eax+edi*4+0x1d]
  43aae0:	or     al,BYTE PTR [esi]
  43aae2:	jle    0x43aaf7
  43aae4:	or     cl,BYTE PTR [esi-0x7e]
  43aae7:	adc    ch,BYTE PTR [ecx-0x23]
  43aaea:	pop    ebp
  43aaeb:	adc    DWORD PTR [eax-0x28],esp
  43aaee:	jo     0x43ab0b
  43aaf0:	jbe    0x43aabe
  43aaf2:	add    BYTE PTR [esi],dh
  43aaf4:	xor    ch,BYTE PTR [ecx-0x36]
  43aaf7:	pusha  
  43aaf8:	pop    ds
  43aaf9:	push   edi
  43aafa:	jmp    0x994dd684
  43aaff:	fs bound ebx,QWORD PTR ss:[eax-0x3b89e4c8]
  43ab07:	push   esi
  43ab08:	xor    ch,BYTE PTR [ecx-0x76]
  43ab0b:	sub    BYTE PTR [edi],bl
  43ab0d:	push   edi
  43ab0e:	jmp    0xb94e1d98
  43ab13:	and    al,0x36
  43ab15:	bound  ebp,QWORD PTR [eax-0x77b3d9df]
  43ab1b:	es daa 
  43ab1d:	jnp    0x43aaac
  43ab1f:	and    al,0x1f
  43ab21:	bound  ebx,QWORD PTR [esi-0x65f6b47b]
  43ab27:	icebp  
  43ab28:	sbb    al,0x4b
  43ab2a:	push   esp
  43ab2b:	cli    
  43ab2c:	clc    
  43ab2d:	inc    eax
  43ab2e:	ss cmp ch,0x41
  43ab32:	and    eax,0x205a6bbb
  43ab37:	test   al,0x26
  43ab39:	pop    esi
  43ab3a:	push   ebp
  43ab3b:	mov    ch,ch
  43ab3d:	or     DWORD PTR [edx],ebx
  43ab3f:	mov    edx,0xc83d6501
  43ab44:	sbb    DWORD PTR [esi+0x45],ebx
  43ab47:	mov    eax,ds:0xae085a1c
  43ab4c:	sbb    dl,BYTE PTR [edi-0x17]
  43ab4f:	test   DWORD PTR [eax+0xa],eax
  43ab52:	sub    dh,BYTE PTR [ebx+0x85d17]
  43ab58:	test   al,0x26
  43ab5a:	add    BYTE PTR ds:[esi+0x1c],dh
  43ab5e:	imul   edx,DWORD PTR [eax+edi*2-0x1],0x5f
  43ab63:	add    DWORD PTR [bx],edx
  43ab66:	or     al,BYTE PTR [eax]
  43ab68:	int    0x40
  43ab6a:	cmp    eax,0x5e1bc268
  43ab6f:	inc    ebp
  43ab70:	out    0x24,eax
  43ab72:	dec    ebp
  43ab73:	jne    0x43ab38
  43ab75:	and    al,0x59
  43ab77:	add    BYTE PTR [eax+edi*8],bl
  43ab7a:	dec    edx
  43ab7b:	dec    esp
  43ab7c:	sbb    esi,DWORD PTR [ebx+0x20]
  43ab7f:	cs ret 
  43ab81:	sbb    ebx,DWORD PTR [esi+0x0]
  43ab84:	fnstcw WORD PTR [edi]
  43ab86:	dec    ecx
  43ab87:	gs repz adc al,0x5d
  43ab8b:	gs or  eax,0x26d4efe
  43ab91:	add    eax,0x3faf5772
  43ab96:	cmp    eax,0x60350c65
  43ab9b:	xor    ecx,ebp
  43ab9d:	pop    ebp
  43ab9e:	data16 ins BYTE PTR es:[edi],dx
  43aba0:	sti    
  43aba1:	aas    
  43aba2:	sbb    al,BYTE PTR [eax]
  43aba4:	sub    al,0x1e
  43aba6:	sub    eax,0x76200272
  43abab:	gs mov dh,0x18
  43abae:	pop    ebp
  43abaf:	je     0x43ab6f
  43abb1:	sbb    BYTE PTR [ebp+0x65],cl
  43abb4:	outs   dx,DWORD PTR ds:[esi]
  43abb5:	aas    
  43abb6:	pop    esi
  43abb7:	add    BYTE PTR [edi+edx*1-0x49ff91a5],ch
  43abbe:	sbb    BYTE PTR [edi+0x74],ah
  43abc1:	mov    dh,0x25
  43abc3:	pop    esi
  43abc4:	imul   esi,DWORD PTR [ebp+0x21],0x466f000a
  43abcb:	sub    eax,0x6718766f
  43abd0:	je     0x43ab68
  43abd2:	and    eax,0x4f86695e
  43abd7:	imul   ecx,DWORD PTR [ebp-0x5d],0x9f6e7938
  43abde:	lods   eax,DWORD PTR ds:[esi]
  43abdf:	ins    DWORD PTR es:[edi],dx
  43abe0:	add    BYTE PTR [esi+0x713d0aec],al
  43abe6:	bound  esp,QWORD PTR [edi+eiz*2+0x72]
  43abea:	inc    edx
  43abeb:	gs ins BYTE PTR es:[edi],dx
  43abed:	pop    edi
  43abee:	lahf   
  43abef:	imul   eax,DWORD PTR [ebx+0x6e],0x865d0a99
  43abf6:	fsub   DWORD PTR [ebx+0x4d]
  43abf9:	arpl   WORD PTR [ebp-0x7e9e91a6],dx
  43abff:	ins    DWORD PTR es:[edi],dx
  43ac00:	ds pop edx
  43ac02:	jp     0x43ac64
  43ac04:	gs sub ebp,ebp
  43ac07:	or     al,BYTE PTR [edx+0x6374d886]
  43ac0d:	daa    
  43ac0e:	int    0x69
  43ac10:	dec    ebp
  43ac11:	xor    al,bh
  43ac13:	imul   ebx,DWORD PTR [edi+0x33],0x414860e4
  43ac1a:	sub    eax,0xd5275e64
  43ac1f:	or     ch,BYTE PTR [eax+0x0]
  43ac22:	xchg   al,bl
  43ac24:	arpl   WORD PTR [edi+eiz*8+0x2c],dx
  43ac28:	pusha  
  43ac29:	dec    ebx
  43ac2a:	jecxz  0x43ac52
  43ac2c:	dec    ecx
  43ac2d:	outs   dx,BYTE PTR ds:[esi]
  43ac2e:	jmp    0x43ac26
  43ac30:	add    eax,0x425c8608
  43ac35:	dec    ebp
  43ac36:	iret   
  43ac37:	push   edi
  43ac38:	dec    esp
  43ac39:	outs   dx,BYTE PTR ds:[esi]
  43ac3a:	jmp    0xd4b803a5
  43ac3f:	adc    ah,BYTE PTR [ecx+eiz*2-0x7a]
  43ac43:	add    al,BYTE PTR ds:0x5d6dba4d
  43ac49:	push   0xffffffa1
  43ac4b:	popa   
  43ac4c:	js     0x43acb7
  43ac4e:	mov    ds:0xc1512042,eax
  43ac53:	(bad)  
  43ac54:	rol    BYTE PTR [ebx],cl
  43ac56:	scas   eax,DWORD PTR es:[edi]
  43ac57:	push   ss
  43ac58:	(bad)  
  43ac59:	ss push 0xa2680558
  43ac5f:	inc    edx
  43ac60:	lock add eax,0x60fd1fbb
  43ac66:	arpl   WORD PTR [esi],bp
  43ac68:	sub    BYTE PTR [esi+0x60],ah
  43ac6b:	pop    ds
  43ac6c:	add    al,0x70
  43ac6e:	xchg   BYTE PTR [edx+0x3f],al
  43ac71:	add    eax,DWORD PTR [edx+0x1f]
  43ac74:	mov    ebp,0xa81f5a60
  43ac79:	gs pusha 
  43ac7b:	pop    ds
  43ac7c:	les    ebp,FWORD PTR [edi-0x7a]
  43ac7f:	inc    edx
  43ac80:	cmp    al,0x4
  43ac82:	inc    edi
  43ac83:	pop    ds
  43ac84:	mov    ch,0x3f
  43ac86:	add    BYTE PTR ds:0x2566ca30,ah
  43ac8c:	add    eax,0x422373c2
  43ac91:	fadd   DWORD PTR [ebx]
  43ac93:	imul   esi,DWORD PTR [esi+eax*4],0x64
  43ac97:	sbb    bl,BYTE PTR [edi]
  43ac99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ac9a:	push   0x2d
  43ac9c:	xor    al,BYTE PTR [edx-0x6adbd691]
  43aca2:	pusha  
  43aca3:	dec    eax
  43aca4:	sbb    esi,DWORD PTR [ebp+0x68]
  43aca7:	loope  0x43acdb
  43aca9:	loope  0x43acae
  43acab:	mov    dh,0x42
  43acad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43acae:	jne    0x43ac95
  43acb0:	and    ecx,DWORD PTR [ebp+0x5f]
  43acb3:	stos   DWORD PTR es:[edi],eax
  43acb4:	sbb    DWORD PTR [esi],edi
  43acb6:	je     0x43ac79
  43acb8:	cs dec edx
  43acba:	jmp    0x8645:0x251f
  43acc0:	inc    edx
  43acc1:	les    eax,FWORD PTR [edx+eax*8]
  43acc4:	pop    ds
  43acc5:	cmp    eax,0xa1fba5f
  43acca:	sub    eax,0x400a42c3
  43accf:	mov    al,bh
  43acd1:	sbb    dh,BYTE PTR fs:[esi-0x39fb83e5]
  43acd8:	or     bl,BYTE PTR [bx+di]
  43acdb:	xor    bh,0x68
  43acde:	pop    ss
  43acdf:	mov    cl,0xfe
  43ace1:	dec    edx
  43ace2:	jmp    0x1a4f8f6c
  43ace7:	popa   
  43ace8:	cs pop esp
  43acea:	or     al,0x0
  43acec:	arpl   WORD PTR [esi],bp
  43acee:	pop    esp
  43acef:	push   es
  43acf0:	pop    esp
  43acf1:	inc    edx
  43acf2:	or     bl,ah
  43acf4:	test   BYTE PTR [ebx],al
  43acf6:	data16 rol BYTE PTR [edi+0x16],1
  43acfa:	jne    0x43acd6
  43acfc:	ins    DWORD PTR es:[edi],dx
  43acfd:	inc    edx
  43acfe:	or     al,BYTE PTR [eax-0x429b0878]
  43ad04:	aaa    
  43ad05:	and    DWORD PTR [ebp-0x4a],esp
  43ad08:	xor    eax,0x4ebd7c1b
  43ad0d:	sbb    BYTE PTR [edi-0x5c],ah
  43ad10:	sub    eax,0x85db0a42
  43ad15:	addr16 jl 0x43ac9c
  43ad18:	and    al,0x2e
  43ad1a:	lods   eax,DWORD PTR gs:[esi]
  43ad1c:	inc    edx
  43ad1d:	adc    ecx,DWORD PTR [edx]
  43ad1f:	cli    
  43ad20:	test   DWORD PTR [eax+0x61],ebp
  43ad23:	jge    0x43ad68
  43ad25:	push   ss
  43ad26:	jbe    0x43ad11
  43ad28:	test   DWORD PTR [eax+0x2ed8ae08],eax
  43ad2e:	inc    esi
  43ad2f:	mov    al,ds:0x5a761fcb
  43ad34:	xor    BYTE PTR [ebx+0xa],0x2a
  43ad38:	fsub   DWORD PTR [ebx]
  43ad3a:	imul   ebx,DWORD PTR [ebp-0x47],0xbb2b40fe
  43ad41:	and    ebp,DWORD PTR [ebx+0x0]
  43ad44:	mov    ebx,DWORD PTR [ebx]
  43ad46:	popa   
  43ad47:	outs   dx,BYTE PTR ds:[esi]
  43ad48:	das    
  43ad49:	inc    esp
  43ad4a:	dec    ecx
  43ad4b:	inc    esp
  43ad4c:	ins    WORD PTR es:[edi],dx
  43ad4e:	and    BYTE PTR [esi],ch
  43ad50:	add    bl,cl
  43ad52:	sbb    bl,BYTE PTR [esi+0x0]
  43ad55:	jbe    0x43ad95
  43ad57:	pop    ecx
  43ad58:	push   ebx
  43ad59:	outs   dx,BYTE PTR ds:[esi]
  43ad5a:	or     eax,0x3e8b6e6b
  43ad5f:	inc    esi
  43ad60:	add    BYTE PTR [eax+0xd],bl
  43ad63:	das    
  43ad64:	push   edx
  43ad65:	jp     0x43ad84
  43ad67:	jl     0x43ad69
  43ad69:	ja     0x43adae
  43ad6b:	ins    BYTE PTR es:[edi],dx
  43ad6c:	jb     0x43acf8
  43ad6e:	pop    es
  43ad6f:	dec    edi
  43ad70:	mov    esi,DWORD PTR fs:[eax]
  43ad73:	outs   dx,BYTE PTR ds:[si]
  43ad75:	mov    ecx,0x56000a1a
  43ad7a:	inc    ebx
  43ad7b:	imul   esp,DWORD PTR [ebp-0x45],0xad646624
  43ad82:	sbb    al,0x64
  43ad84:	data16 mov al,0x43
  43ad87:	add    al,0x0
  43ad89:	sbb    BYTE PTR [edi],cl
  43ad8b:	das    
  43ad8c:	inc    ecx
  43ad8d:	retf   
  43ad8e:	pop    es
  43ad8f:	pusha  
  43ad90:	gs in  al,dx
  43ad92:	cs push esi
  43ad94:	outs   dx,DWORD PTR ds:[esi]
  43ad95:	in     al,dx
  43ad96:	pop    ss
  43ad97:	pusha  
  43ad98:	imul   edx,DWORD PTR [ecx],0xcf002f23
  43ad9e:	inc    ebx
  43ad9f:	pop    ecx
  43ada0:	push   ebx
  43ada1:	fdivp  st(6),st
  43ada3:	pop    edi
  43ada4:	gs (bad) 
  43ada6:	pop    ss
  43ada7:	imul   eax,DWORD PTR [ebp-0x7],0x8
  43adab:	fs je  0x43ae1d
  43adae:	inc    ebx
  43adaf:	sub    BYTE PTR [eax],al
  43adb1:	sbb    BYTE PTR [esi],cl
  43adb3:	das    
  43adb4:	inc    ebp
  43adb5:	add    cl,cl
  43adb7:	and    DWORD PTR [esp+esi*2-0x64],esp
  43adbb:	and    DWORD PTR [esi+0x65],ebx
  43adbe:	xchg   ah,bh
  43adc0:	jns    0x43adc2
  43adc2:	xchg   BYTE PTR [eax+0x6],al
  43adc5:	push   ecx
  43adc6:	mov    ch,0x5a
  43adc8:	dec    ecx
  43adc9:	push   0xffffffbb
  43adcb:	test   BYTE PTR [edi+0x63],0xb2
  43adcf:	push   0x5e9d6e67
  43add4:	pusha  
  43add5:	arpl   WORD PTR [eax-0x79ff84bb],bx
  43addb:	(bad)
  43addf:	pop    edx
  43ade0:	cmp    eax,0x624da569
  43ade5:	add    BYTE PTR [esi+0x55510aa4],al
  43adeb:	pop    edx
  43adec:	dec    ebx
  43aded:	ins    BYTE PTR es:[edi],dx
  43adee:	imul   ebp,DWORD PTR [ecx+ebp*2+0x683e7843],0x5be88674
  43adf9:	cs inc ecx
  43adfb:	dec    esp
  43adfc:	cmp    al,0x2a
  43adfe:	bound  edi,QWORD PTR [ebp+0x66]
  43ae01:	add    BYTE PTR [esi+0x543d0674],al
  43ae07:	cmp    BYTE PTR [edx+0x74],0x5b
  43ae0b:	ja     0x43ae87
  43ae0d:	outs   dx,BYTE PTR ds:[esi]
  43ae0e:	sub    ebp,esp
  43ae10:	imul   ebx,DWORD PTR [ebp+0x3a],0x277465dd
  43ae17:	cdq    
  43ae18:	or     dl,BYTE PTR [ecx]
  43ae1a:	add    BYTE PTR [edi+0x4f582ce9],al
  43ae20:	mov    esi,0xcd14697a
  43ae25:	dec    ebx
  43ae26:	arpl   WORD PTR [eiz*1+0x29f1745c],dx
  43ae2d:	push   0x0
  43ae2f:	xchg   BYTE PTR [edx+0xa],bh
  43ae32:	cmp    eax,0x445f29eb
  43ae37:	jecxz  0x43ae7b
  43ae39:	push   ebp
  43ae3a:	popa   
  43ae3b:	ficomp DWORD PTR [edi]
  43ae3d:	and    al,0x61
  43ae3f:	call   0xe9a1f872
  43ae44:	and    DWORD PTR [edx+0x70],eax
  43ae47:	in     eax,0xfc
  43ae49:	xor    ah,BYTE PTR [edi-0x53]
  43ae4c:	adc    DWORD PTR ds:0xe11fa867,esi
  43ae52:	add    ebx,ecx
  43ae54:	inc    edx
  43ae55:	and    al,0x61
  43ae57:	cwde   
  43ae58:	cmp    BYTE PTR cs:[ebp+eiz*4+0x14],dh
  43ae5d:	xor    al,0x7d
  43ae5f:	stos   DWORD PTR es:[edi],eax
  43ae60:	cs (bad) 
  43ae62:	push   0x71f02ec3
  43ae67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ae68:	or     eax,0x429003e1
  43ae6d:	and    al,0x61
  43ae6f:	push   0x5f68242e
  43ae74:	xor    DWORD PTR [esi],eax
  43ae76:	push   ebx
  43ae77:	jb     0x43ae8e
  43ae79:	shl    DWORD PTR [eax-0x7a],cl
  43ae7c:	inc    edx
  43ae7d:	std    
  43ae7e:	add    eax,DWORD PTR [eax]
  43ae80:	fwait
  43ae81:	pop    ds
  43ae82:	shr    DWORD PTR [edi+0x45],cl
  43ae85:	adc    al,0xd6
  43ae87:	push   0x6fb31f8b
  43ae8c:	sub    DWORD PTR [edx+ebx*8],ebx
  43ae8f:	bound  ebx,QWORD PTR [ecx+0x2e]
  43ae92:	mov    esi,0x94144972
  43ae97:	outs   dx,DWORD PTR ds:[esi]
  43ae98:	pop    ds
  43ae99:	xor    BYTE PTR [esi+0x3],bh
  43ae9c:	gs inc edx
  43ae9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ae9f:	pusha  
  43aea0:	sub    BYTE PTR [esi],ch
  43aea2:	popf   
  43aea3:	jo     0x43aebb
  43aea5:	push   ss
  43aea6:	mov    ah,BYTE PTR [edx+0x29]
  43aea9:	cs jle 0x43aeee
  43aeac:	in     eax,0x30
  43aeae:	jne    0x43af1c
  43aeb0:	in     al,0x1b
  43aeb2:	or     cl,BYTE PTR [edx-0x559ad116]
  43aeb8:	loopne 0x43aed2
  43aeba:	jbe    0x43af08
  43aebc:	loop   0x43aeec
  43aebe:	or     dh,bh
  43aec0:	test   BYTE PTR [edx],dl
  43aec2:	dec    eax
  43aec3:	xor    DWORD PTR [ecx-0x2bc185d6],edx
  43aec9:	cs dec ebx
  43aecb:	dec    esp
  43aecc:	mov    ah,0x2e
  43aece:	pop    ebx
  43aecf:	xor    eax,0x2c6514a3
  43aed4:	mov    dl,0x42
  43aed6:	or     ch,BYTE PTR [edx]
  43aed8:	aam    0xd
  43aeda:	pop    edx
  43aedb:	cmp    eax,0x5205457
  43aee0:	scas   al,BYTE PTR es:[edi]
  43aee1:	push   ss
  43aee2:	or     dh,BYTE PTR ds:0x75fa8a00
  43aee8:	adc    eax,0x1764f792
  43aeed:	data16 hlt 
  43aeef:	fs clc 
  43aef1:	push   0xb0fd7b21
  43aef6:	sub    cl,BYTE PTR [ecx-0x17]
  43aef9:	test   DWORD PTR ds:0x2e71b10a,ecx
  43aeff:	jp     0x43aeb9
  43af01:	push   0x3cd07c21
  43af06:	sbb    BYTE PTR [eax-0x42],ch
  43af09:	inc    esp
  43af0a:	inc    edx
  43af0b:	or     ah,BYTE PTR [ebp+eax*4+0x35b575fa]
  43af12:	mul    DWORD PTR [edi+eax*8+0x51]
  43af16:	hlt    
  43af17:	fs mov eax,0x9d7b2118
  43af1d:	pusha  
  43af1e:	sub    dl,BYTE PTR [edi-0x17]
  43af21:	test   edi,edx
  43af23:	or     DWORD PTR [eax-0x649ad1d5],esp
  43af29:	and    esp,DWORD PTR [ecx]
  43af2b:	jbe    0x43af2d
  43af2d:	sbb    al,0x5
  43af2f:	jbe    0x43af84
  43af31:	repz and BYTE PTR [esi+0x75],dh
  43af35:	in     al,dx
  43af36:	add    cl,BYTE PTR [edi+0x6c]
  43af39:	jmp    0x43af5c
  43af3b:	dec    edi
  43af3c:	arpl   WORD PTR [edi+edi*8+0x40040009],si
  43af43:	inc    edi
  43af44:	outs   dx,BYTE PTR ds:[esi]
  43af45:	mov    bl,0x3
  43af47:	pusha  
  43af48:	outs   dx,BYTE PTR ds:[esi]
  43af49:	add    dl,al
  43af4b:	xor    bh,BYTE PTR [edi]
  43af4d:	jne    0x43af21
  43af4f:	xor    BYTE PTR [edi+0x44],dh
  43af52:	into   
  43af53:	xor    cl,BYTE PTR [edi+0x41]
  43af56:	jno    0x43af77
  43af58:	ins    BYTE PTR es:[di],dx
  43af5a:	mov    esi,0x2f655e20
  43af5f:	inc    eax
  43af60:	stos   BYTE PTR es:[edi],al
  43af61:	add    BYTE PTR [esi+0x1c],dl
  43af64:	jbe    0x43afcb
  43af66:	ins    DWORD PTR es:[edi],dx
  43af67:	sbb    al,0x6b
  43af69:	je     0x43afb8
  43af6b:	add    ecx,DWORD PTR [edi+0x64]
  43af6e:	mov    cl,0x17
  43af70:	pop    esi
  43af71:	mov    gs:0x58002f26,al
  43af77:	aas    
  43af78:	inc    edi
  43af79:	outs   dx,BYTE PTR ds:[esi]
  43af7a:	repz add al,0x60
  43af7d:	outs   dx,BYTE PTR ds:[esi]
  43af7e:	rcl    BYTE PTR [ebx],cl
  43af80:	inc    eax
  43af81:	gs into 
  43af83:	add    ecx,DWORD PTR [ecx+ebp*2-0x35]
  43af87:	add    al,0xa
  43af89:	add    BYTE PTR [ebx+0x3f],cl
  43af8c:	inc    edi
  43af8d:	outs   dx,BYTE PTR ds:[esi]
  43af8e:	add    eax,DWORD PTR ds:0x13c26e60
  43af94:	cmp    eax,0x79fef365
  43af99:	je     0x43af61
  43af9b:	push   ds
  43af9c:	fs inc ecx
  43af9e:	scas   eax,DWORD PTR es:[edi]
  43af9f:	aas    
  43afa0:	push   esp
  43afa1:	add    bh,dl
  43afa3:	adc    esi,DWORD PTR [esi+0x70]
  43afa6:	xchg   al,ch
  43afa8:	dec    edi
  43afa9:	push   0x22
  43afab:	out    0x4f,eax
  43afad:	outs   dx,DWORD PTR ds:[esi]
  43afae:	add    bl,bh
  43afb0:	mov    dh,0x79
  43afb2:	je     0x43af85
  43afb4:	cdq    
  43afb5:	or     dh,BYTE PTR [esi+eax*4-0x1c8b9b1e]
  43afbc:	daa    
  43afbd:	gs arpl dx,bx
  43afc0:	push   0xdb57461
  43afc5:	gs je  0x43afa3
  43afc8:	or     BYTE PTR [edi+0x5f],al
  43afcb:	fisub  DWORD PTR [ebp+0x68]
  43afce:	pop    edi
  43afcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43afd0:	adc    BYTE PTR [ebx+0x0],dl
  43afd3:	xchg   BYTE PTR [eax+0x6],ah
  43afd6:	dec    eax
  43afd7:	mov    edx,0xa34d7665
  43afdc:	arpl   WORD PTR [edx+0x4e],sp
  43afdf:	stos   DWORD PTR es:[edi],eax
  43afe0:	dec    edx
  43afe1:	jno    0x43b046
  43afe3:	xchg   ebp,eax
  43afe4:	dec    ebp
  43afe5:	inc    ebp
  43afe6:	add    BYTE PTR [esi-0x67b8f9c0],al
  43afec:	dec    ebp
  43afed:	popa   
  43afee:	outs   dx,BYTE PTR ds:[esi]
  43afef:	jo     0x43b027
  43aff1:	jb     0x43b030
  43aff3:	push   0x34
  43aff5:	ja     0x43b05a
  43aff7:	cmp    ch,BYTE PTR ds:[esp+eiz*2+0x5a]
  43affc:	ds push es
  43affe:	outs   dx,DWORD PTR ds:[esi]
  43afff:	xchg   dl,dh
  43b001:	push   0x68876374
  43b006:	arpl   WORD PTR [edx-0x28],bx
  43b009:	imul   ebp,DWORD PTR [edx+0x58],0x7e
  43b00d:	addr16 je 0x43b057
  43b010:	cdq    
  43b011:	or     bl,BYTE PTR [edx+0x68f28600]
  43b017:	je     0x43b044
  43b019:	out    0x68,eax
  43b01b:	arpl   WORD PTR [edx],si
  43b01d:	retf   0x6371
  43b020:	adc    al,0x42
  43b022:	stos   BYTE PTR es:[edi],al
  43b023:	inc    edx
  43b024:	push   ss
  43b025:	cs call 0x3703:0xe10b1c62
  43b02d:	inc    edx
  43b02e:	test   eax,0xb812fa77
  43b033:	jae    0x43b01a
  43b035:	xor    BYTE PTR [ebx+0x7e17e168],dl
  43b03b:	jbe    0x43b02f
  43b03d:	add    esp,ecx
  43b03f:	add    edx,eax
  43b041:	inc    edx
  43b042:	cmp    DWORD PTR [eax-0x2e],edi
  43b045:	adc    ah,BYTE PTR [edx]
  43b047:	push   0x753df4ea
  43b04c:	aad    0x27
  43b04e:	push   esp
  43b04f:	js     0x43b01f
  43b051:	daa    
  43b052:	inc    edx
  43b053:	push   0x453414a5
  43b058:	xchg   BYTE PTR [edx+0x50],al
  43b05b:	add    eax,ecx
  43b05d:	xor    BYTE PTR ds:0xfe30b069,dh
  43b063:	ja     0x43b034
  43b065:	adc    al,BYTE PTR [esi]
  43b067:	bound  edx,QWORD PTR [ecx+0x42]
  43b06a:	jbe    0x43b06f
  43b06c:	shl    DWORD PTR [eax],0x15
  43b06f:	imul   esi,DWORD PTR [eax+0x30],0x174977fe
  43b076:	push   es
  43b077:	jbe    0x43b079
  43b079:	jns    0x43b08c
  43b07b:	icebp  
  43b07c:	ja     0x43b0df
  43b07e:	xor    edi,ebp
  43b080:	inc    esp
  43b081:	xchg   BYTE PTR [edx-0x2c],al
  43b084:	add    eax,DWORD PTR [ecx+0x30]
  43b087:	aad    0x68
  43b089:	pusha  
  43b08a:	xor    BYTE PTR [esi-0x3deb7489],bh
  43b090:	sub    si,di
  43b093:	mov    dl,0x5f
  43b095:	jns    0x43b0d9
  43b097:	test   DWORD PTR [ebx],eax
  43b099:	dec    ecx
  43b09a:	xor    BYTE PTR [edx],cl
  43b09c:	mov    ebp,0xc460301e
  43b0a1:	sbb    DWORD PTR [edi],ecx
  43b0a3:	gs popf 
  43b0a5:	inc    eax
  43b0a6:	sub    ebx,DWORD PTR [edi-0x6e]
  43b0a9:	xor    ah,BYTE PTR ds:0x685e949
  43b0af:	or     ah,BYTE PTR [esi+0x7b5516ee]
  43b0b5:	fstp   DWORD PTR [edi+0x69]
  43b0b8:	mov    cl,ch
  43b0ba:	and    eax,0x30f18745
  43b0bf:	jno    0x43b061
  43b0c1:	out    0x24,eax
  43b0c3:	pop    edi
  43b0c4:	or     BYTE PTR ds:[edi],0xa
  43b0c8:	xor    esi,ecx
  43b0ca:	push   ss
  43b0cb:	jp     0x43b0f5
  43b0cd:	fisub  WORD PTR [esi]
  43b0cf:	pop    esp
  43b0d0:	inc    esp
  43b0d1:	mov    ch,0x15
  43b0d3:	cmp    bh,BYTE PTR gs:[esi-0x61b79af6]
  43b0da:	and    eax,0xcf003a7c
  43b0df:	inc    edx
  43b0e0:	or     dl,BYTE PTR [esi]
  43b0e2:	pop    ebp
  43b0e3:	or     al,0x41
  43b0e5:	aaa    
  43b0e6:	shl    esi,0x1f
  43b0e9:	add    eax,0x260a2ea6
  43b0ee:	mov    BYTE PTR ds:0x6f5e3449,0x3c
  43b0f5:	xlat   BYTE PTR ds:[ebx]
  43b0f6:	popa   
  43b0f7:	cs pop esi
  43b0f9:	jmp    0x274d4c83
  43b0fe:	popa   
  43b0ff:	push   ss
  43b100:	push   ebp
  43b101:	cli    
  43b102:	push   0x51cc4730
  43b107:	or     DWORD PTR [eax-0x39],esp
  43b10a:	inc    dx
  43b10c:	or     cl,ah
  43b10e:	test   DWORD PTR [eiz*2+0x611244d5],ecx
  43b115:	add    ch,ch
  43b117:	pop    ss
  43b118:	ins    BYTE PTR es:[edi],dx
  43b119:	retfw  0x4c16
  43b11d:	jb     0x43b0d9
  43b11f:	daa    
  43b120:	or     al,BYTE PTR [eax]
  43b122:	jb     0x43b16a
  43b124:	inc    esp
  43b125:	gs sti 
  43b127:	neg    DWORD PTR [ebp+eiz*2-0x13]
  43b12b:	pop    es
  43b12c:	fs jne 0x43b131
  43b12f:	inc    ebp
  43b130:	inc    esp
  43b131:	inc    ebp
  43b132:	cmp    eax,DWORD PTR ds:0x563c495a
  43b138:	and    al,0x64
  43b13a:	add    eax,DWORD PTR [eax]
  43b13c:	or     al,BYTE PTR [eax]
  43b13e:	xor    DWORD PTR [ecx+ecx*2+0x65],eax
  43b142:	add    bl,bl
  43b144:	add    al,0x66
  43b146:	popa   
  43b147:	mov    edi,0xac726b1a
  43b14c:	add    esp,DWORD PTR [esi+0x64]
  43b14f:	lods   eax,DWORD PTR ds:[esi]
  43b150:	daa    
  43b151:	pop    ebp
  43b152:	jae    0x43b11e
  43b154:	adc    eax,0xf676000a
  43b159:	inc    ecx
  43b15a:	dec    esp
  43b15b:	pop    DWORD PTR [ebx]
  43b15d:	pop    edx
  43b15e:	dec    ecx
  43b15f:	or     DWORD PTR [edx],0x442f4c3e
  43b165:	pop    esp
  43b166:	add    eax,eax
  43b168:	daa    
  43b169:	pusha  
  43b16a:	jb     0x43b0ed
  43b16c:	and    DWORD PTR [edx],ecx
  43b16e:	add    BYTE PTR ds:0x2656348,al
  43b174:	daa    
  43b175:	jp     0x43b1f0
  43b177:	out    dx,eax
  43b178:	inc    ebx
  43b179:	in     al,0x4
  43b17b:	and    BYTE PTR [edi],0x63
  43b17e:	jae    0x43b1fa
  43b180:	sbb    cl,BYTE PTR [edx]
  43b182:	add    BYTE PTR [ebx-0x428ba2b8],bh
  43b188:	arpl   WORD PTR es:[eax-0x21],si
  43b18c:	inc    ebx
  43b18d:	out    0x4,eax
  43b18f:	xchg   BYTE PTR [esi-0x21da9499],al
  43b195:	jp     0x43b197
  43b197:	xchg   BYTE PTR [edx+0x6],dh
  43b19a:	pop    ecx
  43b19b:	cmp    ebp,edx
  43b19d:	imul   esp,DWORD PTR [edi-0x7a],0x18590667
  43b1a4:	fsubr  QWORD PTR [eax+0x71]
  43b1a7:	add    BYTE PTR [esi],dl
  43b1a9:	mov    ebx,0xc71a6a53
  43b1ae:	or     cl,al
  43b1b0:	test   eax,ebx
  43b1b2:	jo     0x43b221
  43b1b4:	lock mov ecx,0x1de86774
  43b1ba:	popa   
  43b1bb:	add    BYTE PTR [esi-0xca6fa01],al
  43b1c1:	lds    esi,FWORD PTR [esi+0x69]
  43b1c4:	fldcw  WORD PTR [ecx-0x97d13f6]
  43b1ca:	pusha  
  43b1cb:	imul   esp,ebx,0x10
  43b1ce:	js     0x43b233
  43b1d0:	xchg   BYTE PTR [ecx+0x5eab6b01],al
  43b1d6:	imul   ebp,DWORD PTR [eax-0x4c],0xffffffa9
  43b1da:	or     bl,BYTE PTR [ebp+eax*4-0x4d938ec0]
  43b1e1:	or     BYTE PTR [ebp+0x0],ah
  43b1e4:	xchg   ch,ch
  43b1e6:	or     ebx,DWORD PTR [ecx-0x6a]
  43b1e9:	ds jl  0x43b24f
  43b1ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b1ed:	dec    edx
  43b1ee:	push   0x6c
  43b1f0:	xchg   BYTE PTR [eax+0x2],al
  43b1f3:	pop    edi
  43b1f4:	fs cmp al,0x6
  43b1f7:	imul   esi,DWORD PTR [ebp-0x61],0x6b
  43b1fb:	outs   dx,BYTE PTR ds:[esi]
  43b1fc:	jp     0x43b18d
  43b1fe:	data16 ins BYTE PTR es:[edi],dx
  43b200:	pop    edx
  43b201:	test   eax,0x478aa20a
  43b206:	jl     0x43b26b
  43b208:	arpl   WORD PTR [edx-0x1f],ax
  43b20b:	add    eax,DWORD PTR [eax]
  43b20d:	lods   al,BYTE PTR ds:[esi]
  43b20e:	inc    ebp
  43b20f:	mov    esi,0xc82e5a64
  43b214:	bound  eax,QWORD PTR [esi+0x4f036a42]
  43b21a:	adc    eax,0x163573ad
  43b21f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b220:	push   0x52c01548
  43b225:	sbb    dl,BYTE PTR [edx+ecx*8]
  43b228:	pop    ebp
  43b229:	daa    
  43b22a:	add    ecx,esp
  43b22c:	add    ebp,DWORD PTR [esi+0x46]
  43b22f:	mov    bl,0x77
  43b231:	sbb    dh,ch
  43b233:	xchg   BYTE PTR [esi-0x17],dh
  43b236:	sub    al,0x85
  43b238:	add    eax,DWORD PTR [esi+0x44]
  43b23b:	mov    al,ds:0x7601fa68
  43b240:	jno    0x43b21a
  43b242:	daa    
  43b243:	xchg   DWORD PTR [edi-0x4a],esi
  43b246:	adc    BYTE PTR [eax+0x62],dh
  43b249:	in     eax,0x11
  43b24b:	push   esp
  43b24c:	add    al,0x43
  43b24e:	inc    edi
  43b24f:	ss pop esi
  43b251:	fisub  WORD PTR [ebx]
  43b253:	inc    edi
  43b254:	push   0x494527b2
  43b259:	mov    esi,0xba743e21
  43b25e:	sub    eax,DWORD PTR [eax+0x5e]
  43b261:	les    ebp,FWORD PTR [ebx]
  43b263:	inc    ebp
  43b264:	js     0x43b20b
  43b266:	adc    cl,ah
  43b268:	add    esp,ebp
  43b26a:	inc    esi
  43b26b:	xor    al,0x69
  43b26d:	call   0x2ca9:0x5bfef7
  43b274:	std    
  43b275:	pop    edi
  43b276:	gs es es ins BYTE PTR es:[edi],dx
  43b27a:	pop    ebx
  43b27b:	daa    
  43b27c:	icebp  
  43b27d:	ja     0x43b2e8
  43b27f:	sub    eax,0x2e6145ff
  43b284:	or     bh,ch
  43b286:	outs   dx,BYTE PTR ds:[esi]
  43b287:	sub    al,0xa
  43b289:	adc    DWORD PTR [ebx+0x64e164fb],eax
  43b28f:	and    DWORD PTR [edx-0x2b],edi
  43b292:	cmp    BYTE PTR [edx],ch
  43b294:	imul   eax,edi,0xdb652e29
  43b29a:	je     0x43b2de
  43b29c:	or     ch,cl
  43b29e:	test   DWORD PTR [edx+0xa],eax
  43b2a1:	jmp    0xe94df52b
  43b2a6:	test   DWORD PTR [edx+0xa],eax
  43b2a9:	jmp    0xe94df533
  43b2ae:	test   DWORD PTR [edx+0xa],eax
  43b2b1:	jmp    0xe94df53b
  43b2b6:	test   DWORD PTR [edx+0xa],eax
  43b2b9:	jmp    0xe94df543
  43b2be:	test   DWORD PTR [edx+0xa],eax
  43b2c1:	jmp    0xe94df54b
  43b2c6:	test   DWORD PTR [edx+0xa],eax
  43b2c9:	jmp    0xe94df553
  43b2ce:	test   DWORD PTR [edx+0xa],eax
  43b2d1:	jmp    0xe94df55b
  43b2d6:	add    BYTE PTR [ebp-0x7a16f5be],al
  43b2dc:	inc    edx
  43b2dd:	or     ch,cl
  43b2df:	test   DWORD PTR [edx+0xa],eax
  43b2e2:	jmp    0xe94df56c
  43b2e7:	test   DWORD PTR [edx+0xa],eax
  43b2ea:	jmp    0xe94df574
  43b2ef:	test   DWORD PTR [edx+0xa],eax
  43b2f2:	jmp    0xe94df57c
  43b2f7:	test   DWORD PTR [edx+0xa],eax
  43b2fa:	jmp    0x4df584
  43b2ff:	fild   WORD PTR [eax+0xa]
  43b302:	add    bh,bl
  43b304:	inc    eax
  43b305:	or     al,BYTE PTR [eax]
  43b307:	out    dx,eax
  43b308:	inc    eax
  43b309:	or     al,BYTE PTR [eax]
  43b30b:	out    dx,eax
  43b30c:	inc    eax
  43b30d:	or     al,BYTE PTR [eax]
  43b30f:	fild   WORD PTR [eax+0xa]
  43b312:	add    bh,bl
  43b314:	inc    eax
  43b315:	or     al,BYTE PTR [eax]
  43b317:	scas   eax,DWORD PTR es:[edi]
  43b318:	inc    eax
  43b319:	or     al,BYTE PTR [eax]
  43b31b:	scas   eax,DWORD PTR es:[edi]
  43b31c:	inc    eax
  43b31d:	or     al,BYTE PTR [eax]
  43b31f:	lahf   
  43b320:	inc    eax
  43b321:	or     al,BYTE PTR [eax]
  43b323:	lahf   
  43b324:	inc    eax
  43b325:	or     al,BYTE PTR [eax]
  43b327:	scas   eax,DWORD PTR es:[edi]
  43b328:	inc    eax
  43b329:	or     al,BYTE PTR [eax]
  43b32b:	scas   eax,DWORD PTR es:[edi]
  43b32c:	inc    eax
  43b32d:	or     al,BYTE PTR [eax]
  43b32f:	lahf   
  43b330:	inc    eax
  43b331:	or     al,BYTE PTR [eax]
  43b333:	lahf   
  43b334:	inc    eax
  43b335:	or     al,BYTE PTR [eax]
  43b337:	outs   dx,DWORD PTR ds:[esi]
  43b338:	inc    eax
  43b339:	or     al,BYTE PTR [eax]
  43b33b:	add    BYTE PTR [edi+0x40],ch
  43b33e:	or     al,BYTE PTR [eax]
  43b340:	pop    edi
  43b341:	inc    eax
  43b342:	or     al,BYTE PTR [eax]
  43b344:	pop    edi
  43b345:	inc    eax
  43b346:	or     al,BYTE PTR [eax]
  43b348:	outs   dx,DWORD PTR ds:[esi]
  43b349:	inc    eax
  43b34a:	or     al,BYTE PTR [eax]
  43b34c:	outs   dx,DWORD PTR ds:[esi]
  43b34d:	inc    eax
  43b34e:	or     al,BYTE PTR [eax]
  43b350:	pop    edi
  43b351:	inc    eax
  43b352:	or     al,BYTE PTR [eax]
  43b354:	pop    edi
  43b355:	inc    eax
  43b356:	or     al,BYTE PTR [eax]
  43b358:	das    
  43b359:	inc    eax
  43b35a:	or     al,BYTE PTR [eax]
  43b35c:	das    
  43b35d:	inc    eax
  43b35e:	or     al,BYTE PTR [eax]
  43b360:	pop    ds
  43b361:	inc    eax
  43b362:	or     al,BYTE PTR [eax]
  43b364:	pop    ds
  43b365:	inc    eax
  43b366:	or     al,BYTE PTR [eax]
  43b368:	das    
  43b369:	inc    eax
  43b36a:	or     al,BYTE PTR [eax]
  43b36c:	das    
  43b36d:	inc    eax
  43b36e:	or     al,BYTE PTR [eax]
  43b370:	pop    ds
  43b371:	inc    eax
  43b372:	or     al,BYTE PTR [eax]
  43b374:	pop    ds
  43b375:	inc    eax
  43b376:	or     al,BYTE PTR [eax]
  43b378:	xchg   BYTE PTR [ecx-0x5679fff6],ch
  43b37e:	or     al,BYTE PTR [eax]
  43b380:	xchg   BYTE PTR [ecx-0x5679fff6],ch
  43b386:	or     al,BYTE PTR [eax]
  43b388:	xchg   BYTE PTR [ecx-0x5679fff6],ch
  43b38e:	or     al,BYTE PTR [eax]
  43b390:	xchg   BYTE PTR [ecx-0x5679fff6],ch
  43b396:	or     al,BYTE PTR [eax]
  43b398:	xchg   BYTE PTR [ecx-0x5679fff6],ch
  43b39e:	or     al,BYTE PTR [eax]
  43b3a0:	add    BYTE PTR [esi-0x79fff557],al
  43b3a6:	test   eax,0xa986000a
  43b3ab:	or     al,BYTE PTR [eax]
  43b3ad:	xchg   BYTE PTR [ecx-0x5679fff6],ch
  43b3b3:	or     al,BYTE PTR [eax]
  43b3b5:	xchg   BYTE PTR [ecx-0x1c79fff6],ch
  43b3bb:	in     al,0x3f
  43b3bd:	cmp    eax,0xcab903fa
  43b3c2:	test   eax,0xa986000a
  43b3c7:	or     al,BYTE PTR [eax]
  43b3c9:	xchg   BYTE PTR [ecx-0x568072f9],cl
  43b3cf:	or     al,BYTE PTR [eax]
  43b3d1:	xchg   BYTE PTR [ecx-0x5679fff6],ch
  43b3d7:	or     al,BYTE PTR [eax]
  43b3d9:	xchg   BYTE PTR [ecx-0x55c60012],ch
  43b3df:	out    0xf8,al
  43b3e1:	xor    DWORD PTR [esi-0x6f79fff6],ebx
  43b3e7:	or     al,BYTE PTR [eax]
  43b3e9:	xchg   BYTE PTR [ecx+0x6],ch
  43b3ec:	add    BYTE PTR [esi-0x79fff914],al
  43b3f2:	inc    edx
  43b3f3:	popa   
  43b3f4:	add    al,0x86
  43b3f6:	inc    edx
  43b3f7:	(bad)  
  43b3f8:	jmp    0x43b3f8
  43b3fa:	call   0x3e9:0x428603f8
  43b401:	xchg   BYTE PTR [edx-0x3f],al
  43b404:	add    eax,DWORD PTR [eax]
  43b406:	xchg   BYTE PTR [edx-0x10],al
  43b409:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43b40f:	inc    edx
  43b410:	loope  0x43b415
  43b412:	xchg   BYTE PTR [edx-0x1f],al
  43b415:	mov    ds:0x3e15acb,eax
  43b41a:	xchg   BYTE PTR [edx-0x1f],al
  43b41d:	add    eax,DWORD PTR [esi-0x7b441ebe]
  43b423:	add    ah,cl
  43b425:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43b42b:	inc    edx
  43b42c:	loope  0x43b41b
  43b42e:	add    DWORD PTR [edx],0x428603e1
  43b434:	loope  0x43b439
  43b436:	xchg   BYTE PTR [edx-0x5f],al
  43b439:	xchg   DWORD PTR [ebp-0x79fc1efe],ecx
  43b43f:	inc    edx
  43b440:	loope  0x43b445
  43b442:	xchg   BYTE PTR [edx-0x6f],al
  43b445:	(bad)  
  43b446:	jle    0x43b44a
  43b448:	loope  0x43b44d
  43b44a:	xchg   BYTE PTR [edx-0x1f],al
  43b44d:	add    eax,DWORD PTR [esi-0x7c103abe]
  43b453:	add    ah,cl
  43b455:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43b45b:	ret    0x8b6e
  43b45e:	xchg   edi,eax
  43b45f:	add    ah,cl
  43b461:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43b467:	bound  ebp,QWORD PTR [ebp-0x57]
  43b46a:	add    BYTE PTR [eax+0x2],bh
  43b46d:	or     ch,cl
  43b46f:	test   DWORD PTR [edx+0xa],eax
  43b472:	jmp    0x3048f88
  43b477:	mov    WORD PTR [ebp+0x4a],ss
  43b47a:	jmp    0x84ecf704
  43b47f:	xor    DWORD PTR [edx+edx*1+0x4a0bd8ab],ecx
  43b486:	leave  
  43b487:	cmc    
  43b488:	mov    ebx,0xea80f9b4
  43b48d:	pushf  
  43b48e:	lods   al,BYTE PTR ds:[esi]
  43b48f:	push   cs
  43b490:	and    DWORD PTR [edx-0x67],ecx
  43b493:	ds popf 
  43b495:	and    al,0x4c
  43b497:	jnp    0x43b465
  43b499:	ds add cl,ah
  43b49c:	push   ss
  43b49d:	dec    edx
  43b49e:	fcom   DWORD PTR [edi]
  43b4a0:	jae    0x43b436
  43b4a2:	stos   BYTE PTR es:[edi],al
  43b4a3:	scas   eax,DWORD PTR es:[edi]
  43b4a4:	inc    esp
  43b4a5:	jge    0x43b4b7
  43b4a7:	or     eax,0xec4049bc
  43b4ac:	mov    ecx,0x48024445
  43b4b1:	jg     0x43b51b
  43b4b3:	or     edx,ecx
  43b4b5:	dec    ecx
  43b4b6:	popaw  
  43b4b8:	jne    0x43b461
  43b4ba:	cs ins BYTE PTR es:[edi],dx
  43b4bc:	add    BYTE PTR [edi],cl
  43b4be:	xchg   ecx,eax
  43b4bf:	inc    ebx
  43b4c0:	xchg   BYTE PTR [ecx+0x7e],cl
  43b4c3:	inc    edi
  43b4c4:	jns    0x43b543
  43b4c6:	adc    BYTE PTR ds:0xf8434680,al
  43b4cc:	loopne 0x43b516
  43b4ce:	xor    eax,0x551e0600
  43b4d3:	(bad)  
  43b4d4:	mov    ds:0x6259f6cd,al
  43b4d9:	sbb    eax,0xcb499d4c
  43b4de:	iret   
  43b4df:	rol    BYTE PTR [ecx],1
  43b4e1:	mov    fs,edx
  43b4e3:	dec    edi
  43b4e4:	adc    BYTE PTR [eax],cl
  43b4e6:	dec    ebx
  43b4e7:	add    dh,bh
  43b4e9:	mov    ds:0x8ff3e378,eax
  43b4ee:	daa    
  43b4ef:	das    
  43b4f0:	stos   DWORD PTR es:[edi],eax
  43b4f1:	lds    ebp,FWORD PTR [eax]
  43b4f3:	inc    esp
  43b4f4:	xchg   DWORD PTR [esi],ebp
  43b4f6:	sbb    DWORD PTR [edx-0x1d014419],ebp
  43b4fc:	sub    al,BYTE PTR [edx-0x1cfbbb0c]
  43b502:	(bad)  
  43b504:	sbb    BYTE PTR [edi-0x31],dh
  43b507:	dec    edx
  43b508:	test   ecx,ecx
  43b50a:	rol    DWORD PTR [ebp-0x76],0xda
  43b50e:	leave  
  43b50f:	xchg   ecx,eax
  43b510:	loope  0x43b4f4
  43b512:	mov    al,ds:0x8d9db6a0
  43b517:	inc    esi
  43b518:	shl    bh,cl
  43b51a:	sbb    BYTE PTR [edx+ebx*8],cl
  43b51d:	ret    
  43b51e:	mov    BYTE PTR [ebp-0x27],dh
  43b521:	fild   DWORD PTR [esi+0x4d]
  43b524:	idiv   esi
  43b526:	in     eax,0xa7
  43b528:	dec    esp
  43b529:	ins    DWORD PTR es:[edi],dx
  43b52a:	xor    eax,0xe3d00735
  43b52f:	push   ebx
  43b530:	loop   0x43b513
  43b532:	jmp    0x43b591
  43b534:	add    BYTE PTR [edx+0x143b53d7],ah
  43b53a:	int3   
  43b53b:	jl     0x43b597
  43b53d:	mov    al,ds:0xcef0abff
  43b542:	pop    esi
  43b543:	retf   0xca54
  43b546:	sbb    bh,BYTE PTR [edx]
  43b548:	popa   
  43b549:	mov    ds,WORD PTR [edi-0x792ba57b]
  43b54f:	sub    ebx,DWORD PTR [ebp-0x1a]
  43b552:	stos   DWORD PTR es:[edi],eax
  43b553:	aad    0x67
  43b555:	(bad)
  43b558:	repz js 0x43b544
  43b55b:	mov    eax,cs
  43b55d:	cmp    BYTE PTR [edi+0x6e],0x6e
  43b561:	xchg   BYTE PTR [ebp-0x4d],bl
  43b564:	xchg   esp,eax
  43b565:	sbb    DWORD PTR [edx+0x70],ecx
  43b568:	std    
  43b569:	xlat   BYTE PTR ds:[ebx]
  43b56a:	or     edx,ecx
  43b56c:	and    bl,BYTE PTR [ebx-0x79fff557]
  43b572:	fidiv  WORD PTR [esi-0x4949bd36]
  43b578:	retf   
  43b579:	cmp    cl,dh
  43b57b:	mov    dh,0xf4
  43b57d:	sar    DWORD PTR [edx],0x27
  43b580:	push   es
  43b581:	ror    DWORD PTR [ebx+edi*2],1
  43b584:	cmp    edi,DWORD PTR [eax+edx*8-0x5b]
  43b588:	imul   DWORD PTR [ecx-0x3eca959d]
  43b58e:	push   0x7b689077
  43b593:	test   edx,esi
  43b595:	xchg   ecx,eax
  43b596:	in     al,dx
  43b597:	aad    0x2b
  43b599:	add    BYTE PTR [ebx+0x42],ah
  43b59c:	call   0xdbf44ef8
  43b5a1:	out    dx,al
  43b5a2:	jns    0x43b5fd
  43b5a4:	repnz sbb al,0xa
  43b5a7:	loope  0x43b5a6
  43b5a9:	inc    eax
  43b5aa:	fisub  DWORD PTR [esi-0x56]
  43b5ad:	jmp    0xb1ec9f13
  43b5b2:	das    
  43b5b3:	jge    0x43b546
  43b5b5:	add    dl,bl
  43b5b7:	nop
  43b5b8:	mov    ah,ah
  43b5ba:	dec    ecx
  43b5bb:	jl     0x43b5e4
  43b5bd:	mov    esp,0xd2cfe3c4
  43b5c2:	adc    dh,al
  43b5c4:	fsub   st,st(0)
  43b5c6:	mov    cl,0x6b
  43b5c8:	call   0x6f0deec7
  43b5cd:	push   cs
  43b5ce:	fldenv [ebp-0x72]
  43b5d1:	jecxz  0x43b56c
  43b5d3:	xor    BYTE PTR [esi],0x55
  43b5d6:	addr16 mov dh,0xae
  43b5d9:	mov    ecx,0xde6e41f2
  43b5de:	dec    eax
  43b5df:	push   edi
  43b5e0:	jae    0x43b5a2
  43b5e2:	retf   0x4e5b
  43b5e5:	inc    eax
  43b5e6:	cmp    eax,0xde8a7f2e
  43b5eb:	push   esi
  43b5ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b5ed:	pop    edi
  43b5ee:	fsubr  DWORD PTR [ebp+0x37ed4109]
  43b5f4:	jb     0x43b5ad
  43b5f6:	cmc    
  43b5f7:	push   esi
  43b5f8:	add    eax,0x64a44423
  43b5fd:	stos   BYTE PTR es:[edi],al
  43b5fe:	add    BYTE PTR [edx+0x737b0251],bh
  43b604:	push   edi
  43b605:	add    dl,BYTE PTR [ecx+0x59]
  43b608:	cmp    esi,0xd3163ab4
  43b60e:	stos   BYTE PTR es:[edi],al
  43b60f:	ds push edi
  43b611:	cwde   
  43b612:	(bad)  
  43b613:	scas   al,BYTE PTR es:[edi]
  43b614:	(bad)
  43b617:	add    edi,DWORD PTR [ebp+0x5745ead5]
  43b61d:	std    
  43b61e:	es in  eax,0xa8
  43b621:	sub    DWORD PTR [ecx-0x6428539a],esp
  43b627:	imul   edx,DWORD PTR [edi-0x42],0xffffff97
  43b62b:	or     BYTE PTR [esi+0x226084],bl
  43b631:	adc    ecx,ecx
  43b633:	xor    al,0x58
  43b635:	les    ebp,FWORD PTR [edx-0x7c]
  43b638:	xchg   BYTE PTR [ebx],al
  43b63a:	push   eax
  43b63b:	pop    ss
  43b63c:	ret    
  43b63d:	daa    
  43b63e:	xchg   ebp,eax
  43b63f:	add    BYTE PTR [eax+0x72],bl
  43b642:	jmp    0x1a5:0x629b3bb3
  43b649:	rol    bl,cl
  43b64b:	sbb    eax,0x507cc257
  43b650:	pop    ebx
  43b651:	arpl   WORD PTR [edi],di
  43b653:	neg    edx
  43b655:	or     ecx,ebp
  43b657:	pop    esi
  43b658:	jae    0x43b68c
  43b65a:	or     eax,0x201edca
  43b65f:	sti    
  43b660:	popf   
  43b661:	jmp    0xaf33:0x971b0067
  43b668:	mov    cl,0x0
  43b66a:	dec    esp
  43b66b:	out    0xdb,al
  43b66d:	lods   al,BYTE PTR ds:[esi]
  43b66e:	je     0x43b66e
  43b670:	dec    esp
  43b671:	ins    BYTE PTR es:[edi],dx
  43b672:	xor    al,0xfa
  43b674:	xchg   edx,eax
  43b675:	fmul   QWORD PTR ss:[edx]
  43b678:	cmp    eax,0xf220e068
  43b67d:	out    dx,eax
  43b67e:	xor    BYTE PTR [edi-0x80],cl
  43b681:	fcmovne st,st(1)
  43b683:	ss int3 
  43b685:	loopne 0x43b612
  43b687:	dec    edi
  43b688:	daa    
  43b689:	sar    DWORD PTR [ebx],1
  43b68b:	mov    ecx,DWORD PTR [ebp-0x1c]
  43b68e:	sbb    BYTE PTR [esi+0x37],cl
  43b691:	mov    ebx,0x46292045
  43b696:	push   ds
  43b697:	int3   
  43b698:	xchg   edx,eax
  43b699:	sahf   
  43b69a:	sbb    al,0xb7
  43b69c:	cdq    
  43b69d:	or     ebx,DWORD PTR [ebx-0x69]
  43b6a0:	sti    
  43b6a1:	push   ds
  43b6a2:	and    eax,0xa63e4a6e
  43b6a7:	sub    ebx,ecx
  43b6a9:	xlat   BYTE PTR ds:[ebx]
  43b6aa:	ins    BYTE PTR es:[edi],dx
  43b6ab:	push   edx
  43b6ac:	int    0x83
  43b6ae:	packuswb mm0,mm0
  43b6b1:	mov    ebp,0x59f29653
  43b6b6:	scas   eax,DWORD PTR es:[edi]
  43b6b7:	cdq    
  43b6b8:	add    al,0x38
  43b6ba:	adc    bl,BYTE PTR [edi+0x246c214c]
  43b6c0:	add    al,0xca
  43b6c2:	sahf   
  43b6c3:	out    0x9,eax
  43b6c5:	sbb    BYTE PTR [ecx],bl
  43b6c7:	or     eax,0x8e788e00
  43b6cc:	pop    ds
  43b6cd:	push   edi
  43b6ce:	jge    0x43b6d5
  43b6d0:	add    BYTE PTR [edx+0x6f0ad6b7],ch
  43b6d6:	inc    ecx
  43b6d7:	or     al,BYTE PTR [eax]
  43b6d9:	out    0x55,eax
  43b6db:	dec    edx
  43b6dc:	add    BYTE PTR [edi],dl
  43b6de:	add    BYTE PTR [edx+0x0],cl
  43b6e1:	cs inc eax
  43b6e3:	or     al,BYTE PTR [eax]
  43b6e5:	cmp    DWORD PTR [eax+0xa],eax
  43b6e8:	add    BYTE PTR [eax],ch
  43b6ea:	inc    ecx
  43b6eb:	or     al,BYTE PTR [eax]
  43b6ed:	daa    
  43b6ee:	pop    eax
  43b6ef:	dec    edx
  43b6f0:	add    bh,ch
  43b6f2:	add    cl,BYTE PTR [edx+0x0]
  43b6f5:	das    
  43b6f6:	inc    ecx
  43b6f7:	or     al,BYTE PTR [eax]
  43b6f9:	cmp    DWORD PTR [ecx+0xa],eax
  43b6fc:	add    BYTE PTR [eax],ch
  43b6fe:	inc    ecx
  43b6ff:	or     al,BYTE PTR [eax]
  43b701:	out    dx,eax
  43b702:	inc    eax
  43b703:	or     al,BYTE PTR [eax]
  43b705:	out    0x54,eax
  43b707:	dec    edx
  43b708:	add    bh,bl
  43b70a:	inc    eax
  43b70b:	or     al,BYTE PTR [eax]
  43b70d:	in     al,dx
  43b70e:	inc    eax
  43b70f:	or     al,BYTE PTR [eax]
  43b711:	lock inc eax
  43b713:	or     al,BYTE PTR [eax]
  43b715:	out    dx,eax
  43b716:	inc    eax
  43b717:	or     al,BYTE PTR [eax]
  43b719:	fiadd  WORD PTR [eax+0xa]
  43b71c:	add    bh,bl
  43b71e:	inc    eax
  43b71f:	or     al,BYTE PTR [eax]
  43b721:	mov    ebx,0x6b002ec4
  43b726:	and    al,0x4a
  43b728:	add    BYTE PTR [ebx+0x2ec4],ah
  43b72e:	arpl   WORD PTR [edx+ecx*2],sp
  43b731:	add    BYTE PTR [edi+0x47002ec4],ch
  43b737:	mov    bl,0x2e
  43b739:	add    BYTE PTR [edi-0x4d],cl
  43b73c:	add    BYTE PTR cs:[edi-0x4d],al
  43b740:	add    BYTE PTR cs:[edi-0x38ffd14f],cl
  43b747:	mov    cl,0x2e
  43b749:	add    BYTE PTR [esi-0x79c066a7],al
  43b74f:	popa   
  43b750:	cdq    
  43b751:	aas    
  43b752:	xchg   ch,bh
  43b754:	cwde   
  43b755:	aas    
  43b756:	xchg   BYTE PTR [ecx-0x67],bl
  43b759:	aas    
  43b75a:	xchg   BYTE PTR [ecx],al
  43b75c:	cdq    
  43b75d:	aas    
  43b75e:	xchg   BYTE PTR [ecx],cl
  43b760:	cdq    
  43b761:	aas    
  43b762:	xchg   BYTE PTR ds:0x11863f9a,dl
  43b768:	call   0x863f:0x9a29863f
  43b76f:	in     eax,dx
  43b770:	cwde   
  43b771:	aas    
  43b772:	xchg   ch,ch
  43b774:	cwde   
  43b775:	aas    
  43b776:	xchg   BYTE PTR [ecx],cl
  43b778:	cdq    
  43b779:	aas    
  43b77a:	xchg   BYTE PTR ds:0x35863f99,dh
  43b780:	cdq    
  43b781:	aas    
  43b782:	xchg   BYTE PTR [ebp-0x67],ah
  43b785:	aas    
  43b786:	xchg   BYTE PTR [ebp-0x67],dh
  43b789:	aas    
  43b78a:	xchg   BYTE PTR [ebp-0x3a79c067],al
  43b790:	cwde   
  43b791:	aas    
  43b792:	add    BYTE PTR [esi-0x79c066e7],al
  43b798:	lods   eax,DWORD PTR ds:[esi]
  43b799:	cwde   
  43b79a:	aas    
  43b79b:	xchg   cl,ch
  43b79d:	cwde   
  43b79e:	aas    
  43b79f:	xchg   BYTE PTR ds:0x11863f99,al
  43b7a5:	cdq    
  43b7a6:	aas    
  43b7a7:	xchg   BYTE PTR [ebp-0x68],bh
  43b7aa:	aas    
  43b7ab:	xchg   ch,bl
  43b7ad:	cwde   
  43b7ae:	aas    
  43b7af:	xchg   BYTE PTR ds:0xa1863f9c,bh
  43b7b5:	cwde   
  43b7b6:	aas    
  43b7b7:	xchg   BYTE PTR [ebp-0x64],dl
  43b7ba:	aas    
  43b7bb:	xchg   BYTE PTR ds:0x25863f9c,al
  43b7c1:	pushf  
  43b7c2:	aas    
  43b7c3:	xchg   BYTE PTR [edx+0x3d],al
  43b7c6:	xchg   edx,eax
  43b7c7:	mov    ecx,0xb1926142
  43b7cc:	inc    edx
  43b7cd:	test   DWORD PTR [edx-0x6d42bd57],edx
  43b7d3:	mov    eax,ds:0x9992bd42
  43b7d8:	inc    edx
  43b7d9:	std    
  43b7da:	xchg   edx,eax
  43b7db:	xchg   ecx,eax
  43b7dc:	inc    edx
  43b7dd:	sbb    DWORD PTR [ebx-0x6cdebd77],edx
  43b7e3:	add    DWORD PTR [edx-0x6b],0x71427974
  43b7ea:	je     0x43b85d
  43b7ec:	inc    edx
  43b7ed:	push   ebp
  43b7ee:	je     0x43b859
  43b7f0:	inc    edx
  43b7f1:	dec    ecx
  43b7f2:	je     0x43b855
  43b7f4:	inc    edx
  43b7f5:	sub    DWORD PTR [eax+eax*1+0x59],esi
  43b7f9:	inc    edx
  43b7fa:	sbb    eax,0xf9425174
  43b7ff:	jae    0x43b84a
  43b801:	inc    edx
  43b802:	or     DWORD PTR [ecx+eax*8+0x42],esi
  43b806:	in     eax,dx
  43b807:	jae    0x43b7c2
  43b809:	inc    edx
  43b80a:	in     eax,0x73
  43b80c:	mov    cl,0x42
  43b80e:	xchg   ecx,eax
  43b80f:	xchg   ebx,eax
  43b810:	test   eax,0xa1938142
  43b815:	inc    edx
  43b816:	popf   
  43b817:	xchg   ebx,eax
  43b818:	cdq    
  43b819:	inc    edx
  43b81a:	cmp    eax,0x4d429193
  43b81f:	xchg   ebx,eax
  43b820:	mov    DWORD PTR [edx+0x61],eax
  43b823:	xchg   ebx,eax
  43b824:	add    DWORD PTR [edx-0x2f],0xc9427992
  43b82b:	xchg   edx,eax
  43b82c:	jno    0x43b870
  43b82e:	adc    eax,0x1426993
  43b833:	xchg   ebx,eax
  43b834:	popa   
  43b835:	inc    edx
  43b836:	fst    QWORD PTR [edx-0x6dd6bda7]
  43b83c:	push   ecx
  43b83d:	inc    edx
  43b83e:	or     ch,BYTE PTR [ecx]
  43b840:	hlt    
  43b841:	push   edx
  43b842:	or     dl,BYTE PTR [ecx+0x14]
  43b845:	push   edx
  43b846:	or     ch,BYTE PTR [ecx+0x14]
  43b849:	push   edx
  43b84a:	or     dl,BYTE PTR [ecx-0x5af5ade9]
  43b850:	pop    ss
  43b851:	push   edx
  43b852:	or     al,ch
  43b854:	not    DWORD PTR [ecx+0xa]
  43b857:	loope  0x43b850
  43b859:	push   ecx
  43b85a:	or     al,BYTE PTR [ecx]
  43b85c:	add    bh,dh
  43b85e:	push   ecx
  43b85f:	or     al,BYTE PTR ds:0x110a51f7
  43b865:	pop    ss
  43b866:	push   edx
  43b867:	or     dh,BYTE PTR [ebp-0x66f5adea]
  43b86d:	push   ss
  43b86e:	push   edx
  43b86f:	or     ch,cl
  43b871:	test   DWORD PTR [edx+0xa],eax
  43b874:	jmp    0xe94dfafe
  43b879:	test   DWORD PTR [edx+0xa],eax
  43b87c:	jmp    0xe94dfb06
  43b881:	test   DWORD PTR [edx+0xa],eax
  43b884:	push   esi
  43b885:	jmp    0x862cc2da
  43b88a:	inc    edx
  43b88b:	or     ch,cl
  43b88d:	test   DWORD PTR [edx+0xa],eax
  43b890:	jmp    0x1e4dfb1a
  43b895:	mov    al,ds:0x85e90a50
  43b89a:	inc    edx
  43b89b:	or     ch,cl
  43b89d:	test   DWORD PTR [edx+0xa],eax
  43b8a0:	jmp    0x474dfb2a
  43b8a5:	adc    DWORD PTR [eax+0xa],0xffffffe9
  43b8a9:	test   DWORD PTR [edx+0xa],eax
  43b8ac:	jmp    0xe94dfb36
  43b8b1:	test   DWORD PTR [edx+0xa],eax
  43b8b4:	dec    esp
  43b8b5:	arpl   WORD PTR [eax+0xa],dx
  43b8b8:	add    BYTE PTR [edi-0x60fff5bb],ch
  43b8be:	inc    ebp
  43b8bf:	or     al,BYTE PTR [eax]
  43b8c1:	add    BYTE PTR [edi+0xd000a45],bl
  43b8c7:	push   eax
  43b8c8:	xor    BYTE PTR [eax],al
  43b8ca:	outs   dx,DWORD PTR ds:[esi]
  43b8cb:	inc    ebp
  43b8cc:	or     al,BYTE PTR [eax]
  43b8ce:	pop    edi
  43b8cf:	inc    ebp
  43b8d0:	or     al,BYTE PTR [eax]
  43b8d2:	pop    edi
  43b8d3:	inc    ebp
  43b8d4:	or     al,BYTE PTR [eax]
  43b8d6:	sub    BYTE PTR [ecx+0x30],dl
  43b8d9:	add    BYTE PTR [edi+0x45],ch
  43b8dc:	or     al,BYTE PTR [eax]
  43b8de:	pop    edi
  43b8df:	inc    ebp
  43b8e0:	or     al,BYTE PTR [eax]
  43b8e2:	pop    edi
  43b8e3:	inc    ebp
  43b8e4:	or     al,BYTE PTR [eax]
  43b8e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b8e7:	push   ecx
  43b8e8:	xor    BYTE PTR [eax],al
  43b8ea:	das    
  43b8eb:	inc    ebp
  43b8ec:	or     al,BYTE PTR [eax]
  43b8ee:	pop    ds
  43b8ef:	inc    ebp
  43b8f0:	or     al,BYTE PTR [eax]
  43b8f2:	pop    ds
  43b8f3:	inc    ebp
  43b8f4:	or     al,BYTE PTR [eax]
  43b8f6:	in     eax,0x1
  43b8f8:	xor    BYTE PTR [eax],al
  43b8fa:	das    
  43b8fb:	inc    ebp
  43b8fc:	or     al,BYTE PTR [eax]
  43b8fe:	pop    ds
  43b8ff:	inc    ebp
  43b900:	or     al,BYTE PTR [eax]
  43b902:	pop    ds
  43b903:	inc    ebp
  43b904:	or     al,BYTE PTR [eax]
  43b906:	xlat   BYTE PTR ds:[ebx]
  43b907:	dec    edi
  43b908:	xor    BYTE PTR [eax],al
  43b90a:	out    dx,eax
  43b90b:	inc    esp
  43b90c:	or     al,BYTE PTR [eax]
  43b90e:	fild   WORD PTR [edx+ecx*1+0x0]
  43b912:	fild   WORD PTR [edx+ecx*1+0x0]
  43b916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b917:	push   ecx
  43b918:	xor    BYTE PTR [eax],al
  43b91a:	out    dx,eax
  43b91b:	inc    esp
  43b91c:	or     al,BYTE PTR [eax]
  43b91e:	fild   WORD PTR [edx+ecx*1+0x0]
  43b922:	fild   WORD PTR [edx+ecx*1+0x0]
  43b926:	add    BYTE PTR [edx+0x51],dl
  43b929:	xor    BYTE PTR [eax],al
  43b92b:	scas   eax,DWORD PTR es:[edi]
  43b92c:	inc    esp
  43b92d:	or     al,BYTE PTR [eax]
  43b92f:	lahf   
  43b930:	inc    esp
  43b931:	or     al,BYTE PTR [eax]
  43b933:	xchg   BYTE PTR [ebx-0x4979fff6],bl
  43b939:	cs xchg BYTE PTR ds:[ebx-0x6479fff6],bl
  43b941:	or     al,BYTE PTR [eax]
  43b943:	xchg   BYTE PTR [ebx+0x2e86000a],bl
  43b949:	das    
  43b94a:	xchg   BYTE PTR ds:[ecx-0x6679fff6],bl
  43b951:	or     al,BYTE PTR [eax]
  43b953:	xchg   BYTE PTR [ecx+0x7786000a],bl
  43b959:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b95a:	aas    
  43b95b:	xchg   BYTE PTR [ecx-0x6679fff6],bl
  43b961:	or     al,BYTE PTR [eax]
  43b963:	xchg   BYTE PTR [ecx+0x2186000a],bl
  43b969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b96a:	aas    
  43b96b:	xchg   BYTE PTR [ecx-0x6679fff6],bl
  43b971:	or     al,BYTE PTR [eax]
  43b973:	xchg   BYTE PTR [ecx-0x2479fff6],bl
  43b979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b97a:	aas    
  43b97b:	xchg   BYTE PTR [ecx-0x6679fff6],bl
  43b981:	or     al,BYTE PTR [eax]
  43b983:	xchg   BYTE PTR [ecx-0x6a79fff6],bl
  43b989:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b98a:	aas    
  43b98b:	add    BYTE PTR [esi-0x79fff567],al
  43b991:	cdq    
  43b992:	or     al,BYTE PTR [eax]
  43b994:	xchg   BYTE PTR [ecx+0x3d86000a],bl
  43b99a:	mov    ds:0xa99863f,al
  43b99f:	add    BYTE PTR [esi-0x79fff567],al
  43b9a5:	cdq    
  43b9a6:	or     al,BYTE PTR [eax]
  43b9a8:	xchg   dh,ah
  43b9aa:	fidivr DWORD PTR [esi]
  43b9ac:	xchg   BYTE PTR [edx-0x1f],al
  43b9af:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43b9b5:	inc    edx
  43b9b6:	loope  0x43b9bb
  43b9b8:	xchg   BYTE PTR [edx-0xa],al
  43b9bb:	rcr    BYTE PTR [eax+0x42],cl
  43b9be:	loope  0x43b9c3
  43b9c0:	xchg   BYTE PTR [edx-0x1f],al
  43b9c3:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43b9c9:	inc    edx
  43b9ca:	hlt    
  43b9cb:	sar    BYTE PTR [eax-0x79fc1ebe],cl
  43b9d1:	inc    edx
  43b9d2:	loope  0x43b9d7
  43b9d4:	xchg   BYTE PTR [edx-0x1f],al
  43b9d7:	add    eax,DWORD PTR [esi-0x672d65be]
  43b9dd:	inc    edx
  43b9de:	loope  0x43b9e3
  43b9e0:	xchg   BYTE PTR [edx-0x1f],al
  43b9e3:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43b9e9:	inc    edx
  43b9ea:	and    dl,dl
  43b9ec:	js     0x43ba30
  43b9ee:	loope  0x43b9f3
  43b9f0:	add    BYTE PTR [esi-0x79fc1ebe],al
  43b9f6:	inc    edx
  43b9f7:	loope  0x43b9fc
  43b9f9:	xchg   BYTE PTR [edx-0x1a],al
  43b9fc:	rcr    DWORD PTR [eax+0x42],1
  43b9ff:	loope  0x43ba04
  43ba01:	xchg   BYTE PTR [edx-0x1f],al
  43ba04:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43ba0a:	inc    edx
  43ba0b:	sub    al,0xd2
  43ba0d:	mov    eax,0x8603e142
  43ba12:	inc    edx
  43ba13:	loope  0x43ba18
  43ba15:	xchg   BYTE PTR [edx-0x1f],al
  43ba18:	add    eax,DWORD PTR [esi-0x672d8abe]
  43ba1e:	inc    edx
  43ba1f:	loope  0x43ba24
  43ba21:	xchg   BYTE PTR [edx-0x1f],al
  43ba24:	add    eax,DWORD PTR [esi-0x7a16f5be]
  43ba2a:	inc    edx
  43ba2b:	or     cl,BYTE PTR [esp+edx*8-0x7a16f5b1]
  43ba32:	inc    edx
  43ba33:	or     ch,cl
  43ba35:	test   DWORD PTR [edx+0xa],eax
  43ba38:	jmp    0xa4dfcc2
  43ba3d:	mov    ch,0x4f
  43ba3f:	or     ch,cl
  43ba41:	test   DWORD PTR [edx+0xa],eax
  43ba44:	jmp    0xe94dfcce
  43ba49:	test   DWORD PTR [edx+0xa],eax
  43ba4c:	rcl    BYTE PTR [ebp+ecx*2+0xa],0xe9
  43ba51:	test   DWORD PTR [edx+0xa],eax
  43ba54:	jmp    0xa863f59
  43ba59:	jmp    0x5b4dfce3
  43ba5e:	xor    eax,0x85e90a4d
  43ba63:	inc    edx
  43ba64:	or     ch,cl
  43ba66:	test   DWORD PTR [edx+0xa],eax
  43ba69:	jmp    0xb64dfcf3
  43ba6e:	push   ecx
  43ba6f:	dec    ebp
  43ba70:	or     ch,cl
  43ba72:	test   DWORD PTR [edx+0xa],eax
  43ba75:	jmp    0xe94dfcff
  43ba7a:	test   DWORD PTR [edx+0xa],eax
  43ba7d:	xor    DWORD PTR gs:[ebp+0xa],ecx
  43ba81:	jmp    0xe94dfd0b
  43ba86:	test   DWORD PTR [edx+0xa],eax
  43ba89:	jmp    0x984dfd13
  43ba8e:	ror    DWORD PTR [edx+ecx*1-0x17],1
  43ba92:	test   DWORD PTR [edx+0xa],eax
  43ba95:	jmp    0xe94dfd1f
  43ba9a:	test   DWORD PTR [edx+0xa],eax
  43ba9d:	retf   0x4cbe
  43baa0:	or     al,BYTE PTR [eax]
  43baa2:	fild   WORD PTR [ecx+0xa]
  43baa5:	add    bh,bl
  43baa7:	inc    ecx
  43baa8:	or     al,BYTE PTR [eax]
  43baaa:	scas   eax,DWORD PTR es:[edi]
  43baab:	inc    ecx
  43baac:	or     al,BYTE PTR [eax]
  43baae:	jb     0x43bb09
  43bab0:	xor    BYTE PTR [eax],al
  43bab2:	lahf   
  43bab3:	inc    ecx
  43bab4:	or     al,BYTE PTR [eax]
  43bab6:	lahf   
  43bab7:	inc    ecx
  43bab8:	or     al,BYTE PTR [eax]
  43baba:	add    BYTE PTR [edi-0x7dfff5bf],ch
  43bac0:	pop    edi
  43bac1:	xor    BYTE PTR [eax],al
  43bac3:	lahf   
  43bac4:	inc    ecx
  43bac5:	or     al,BYTE PTR [eax]
  43bac7:	lahf   
  43bac8:	inc    ecx
  43bac9:	or     al,BYTE PTR [eax]
  43bacb:	outs   dx,DWORD PTR ds:[esi]
  43bacc:	inc    ecx
  43bacd:	or     al,BYTE PTR [eax]
  43bacf:	inc    edx
  43bad0:	pop    esi
  43bad1:	xor    BYTE PTR [eax],al
  43bad3:	pop    edi
  43bad4:	inc    ecx
  43bad5:	or     al,BYTE PTR [eax]
  43bad7:	pop    edi
  43bad8:	inc    ecx
  43bad9:	or     al,BYTE PTR [eax]
  43badb:	outs   dx,DWORD PTR ds:[esi]
  43badc:	inc    ecx
  43badd:	or     al,BYTE PTR [eax]
  43badf:	scas   eax,DWORD PTR es:[edi]
  43bae0:	pop    esi
  43bae1:	xor    BYTE PTR [eax],al
  43bae3:	pop    edi
  43bae4:	inc    ecx
  43bae5:	or     al,BYTE PTR [eax]
  43bae7:	pop    edi
  43bae8:	inc    ecx
  43bae9:	or     al,BYTE PTR [eax]
  43baeb:	das    
  43baec:	inc    ecx
  43baed:	or     al,BYTE PTR [eax]
  43baef:	sub    BYTE PTR [ecx+0x30],bl
  43baf2:	add    BYTE PTR [edi],bl
  43baf4:	inc    ecx
  43baf5:	or     al,BYTE PTR [eax]
  43baf7:	pop    ds
  43baf8:	inc    ecx
  43baf9:	or     al,BYTE PTR [eax]
  43bafb:	das    
  43bafc:	inc    ecx
  43bafd:	or     al,BYTE PTR [eax]
  43baff:	mov    DWORD PTR [eax+0x30],ebx
  43bb02:	add    BYTE PTR [edi],bl
  43bb04:	inc    ecx
  43bb05:	or     al,BYTE PTR [eax]
  43bb07:	pop    ds
  43bb08:	inc    ecx
  43bb09:	or     al,BYTE PTR [eax]
  43bb0b:	out    dx,eax
  43bb0c:	inc    eax
  43bb0d:	or     al,BYTE PTR [eax]
  43bb0f:	test   eax,0xdf003058
  43bb14:	inc    eax
  43bb15:	or     al,BYTE PTR [eax]
  43bb17:	fild   WORD PTR [eax+0xa]
  43bb1a:	add    BYTE PTR [esi+0xa9b],al
  43bb20:	xchg   BYTE PTR [edx-0x6479c1df],cl
  43bb26:	or     al,BYTE PTR [eax]
  43bb28:	xchg   BYTE PTR [ebx-0x6479fff6],bl
  43bb2e:	or     al,BYTE PTR [eax]
  43bb30:	xchg   ch,bh
  43bb32:	mov    esi,0xa9b863d
  43bb37:	add    BYTE PTR [esi-0x79fff565],al
  43bb3d:	fwait
  43bb3e:	or     al,BYTE PTR [eax]
  43bb40:	xchg   BYTE PTR [ebx-0x41],cl
  43bb43:	cmp    eax,0xa9b86
  43bb48:	xchg   BYTE PTR [ebx-0x6679fff6],bl
  43bb4e:	or     al,BYTE PTR [eax]
  43bb50:	xchg   BYTE PTR [esp+edi*4+0x3d],dh
  43bb54:	xchg   BYTE PTR [ecx-0x6679fff6],bl
  43bb5a:	or     al,BYTE PTR [eax]
  43bb5c:	xchg   BYTE PTR [ecx-0x2a79fff6],bl
  43bb62:	mov    esp,0xa99863d
  43bb67:	add    BYTE PTR [esi-0x79fff567],al
  43bb6d:	cdq    
  43bb6e:	or     al,BYTE PTR [eax]
  43bb70:	xchg   BYTE PTR [ebx-0x40],cl
  43bb73:	cmp    eax,0xa9986
  43bb78:	xchg   BYTE PTR [ecx-0x6679fff6],bl
  43bb7e:	or     al,BYTE PTR [eax]
  43bb80:	xchg   BYTE PTR [ebx-0x44],bh
  43bb83:	cmp    eax,0xa998600
  43bb88:	add    BYTE PTR [esi-0x79fff567],al
  43bb8e:	cdq    
  43bb8f:	or     al,BYTE PTR [eax]
  43bb91:	xchg   dh,bh
  43bb93:	mov    ebp,0xe142863d
  43bb98:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43bb9e:	inc    edx
  43bb9f:	loope  0x43bba4
  43bba1:	xchg   BYTE PTR [edx-0x5a],al
  43bba4:	int3   
  43bba5:	xchg   ebx,eax
  43bba6:	inc    edx
  43bba7:	loope  0x43bbac
  43bba9:	xchg   BYTE PTR [edx-0x1f],al
  43bbac:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43bbb2:	inc    edx
  43bbb3:	outs   dx,BYTE PTR ds:[esi]
  43bbb4:	int3   
  43bbb5:	jae    0x43bbf9
  43bbb7:	loope  0x43bbbc
  43bbb9:	xchg   BYTE PTR [edx-0x1f],al
  43bbbc:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43bbc2:	inc    edx
  43bbc3:	stc    
  43bbc4:	mov    bl,0x53
  43bbc6:	inc    edx
  43bbc7:	loope  0x43bbcc
  43bbc9:	xchg   BYTE PTR [edx-0x1f],al
  43bbcc:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43bbd2:	inc    edx
  43bbd3:	aad    0x8e
  43bbd5:	mov    bl,0x42
  43bbd7:	loope  0x43bbdc
  43bbd9:	xchg   BYTE PTR [edx-0x1f],al
  43bbdc:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43bbe2:	inc    edx
  43bbe3:	jle    0x43bb72
  43bbe5:	xchg   ebx,eax
  43bbe6:	inc    edx
  43bbe7:	loope  0x43bbec
  43bbe9:	add    BYTE PTR [esi-0x79fc1ebe],al
  43bbef:	inc    edx
  43bbf0:	loope  0x43bbf5
  43bbf2:	xchg   BYTE PTR [edx+0x11],al
  43bbf5:	data16 jo 0x43bc3a
  43bbf8:	loope  0x43bbfd
  43bbfa:	xchg   BYTE PTR [edx-0x1f],al
  43bbfd:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43bc03:	inc    edx
  43bc04:	cwde   
  43bc05:	xchg   esp,eax
  43bc06:	push   eax
  43bc07:	inc    edx
  43bc08:	loope  0x43bc0d
  43bc0a:	xchg   BYTE PTR [edx-0x1f],al
  43bc0d:	add    eax,DWORD PTR [esi-0x7a16f5be]
  43bc13:	inc    edx
  43bc14:	or     dh,BYTE PTR [ebx-0x16f5b3e6]
  43bc1a:	test   DWORD PTR [edx+0xa],eax
  43bc1d:	jmp    0xe94dfea7
  43bc22:	test   DWORD PTR [edx+0xa],eax
  43bc25:	and    ebp,ebp
  43bc27:	dec    ebx
  43bc28:	or     ch,cl
  43bc2a:	test   DWORD PTR [edx+0xa],eax
  43bc2d:	jmp    0xe94dfeb7
  43bc32:	test   DWORD PTR [edx+0xa],eax
  43bc35:	fcom   QWORD PTR [esp+ecx*2]
  43bc38:	or     ch,cl
  43bc3a:	test   DWORD PTR [edx+0xa],eax
  43bc3d:	jmp    0xe94dfec7
  43bc42:	test   DWORD PTR [edx+0xa],eax
  43bc45:	pop    edx
  43bc46:	icebp  
  43bc47:	dec    ebx
  43bc48:	or     ch,cl
  43bc4a:	test   DWORD PTR [edx+0xa],eax
  43bc4d:	jmp    0xa864152
  43bc52:	cmp    DWORD PTR [edi],ebx
  43bc54:	dec    edx
  43bc55:	or     dh,BYTE PTR [esi]
  43bc57:	cmovp  ecx,DWORD PTR [edx]
  43bc5a:	sub    esp,edx
  43bc5c:	add    cl,BYTE PTR [edx]
  43bc5e:	jmp    0x8d4dfee8
  43bc63:	mov    ah,0x2
  43bc65:	or     cl,BYTE PTR [ecx-0x5af5fd4c]
  43bc6b:	mov    ah,0x2
  43bc6d:	or     ah,BYTE PTR [ecx-0x62f5fd2c]
  43bc73:	aam    0x2
  43bc75:	or     bl,BYTE PTR [ecx+0x350a02d4]
  43bc7b:	aad    0x2
  43bc7d:	or     dh,BYTE PTR [ecx]
  43bc7f:	mov    ch,0x2
  43bc81:	or     ch,BYTE PTR ds:0x290a02b5
  43bc87:	mov    ch,0x2
  43bc89:	or     al,BYTE PTR [eax]
  43bc8b:	xor    ebp,0x49
  43bc8e:	add    BYTE PTR [edi-0x10ffb60b],al
  43bc94:	inc    ebp
  43bc95:	or     al,BYTE PTR [eax]
  43bc97:	add    BYTE PTR [esi+0x45df9906],dh
  43bc9d:	or     al,BYTE PTR [eax]
  43bc9f:	out    dx,eax
  43bca0:	inc    ebp
  43bca1:	or     al,BYTE PTR [eax]
  43bca3:	out    dx,eax
  43bca4:	inc    ebp
  43bca5:	or     al,BYTE PTR [eax]
  43bca7:	fild   WORD PTR [ebp+0xa]
  43bcaa:	add    bh,bl
  43bcac:	inc    ebp
  43bcad:	or     al,BYTE PTR [eax]
  43bcaf:	scas   eax,DWORD PTR es:[edi]
  43bcb0:	inc    ebp
  43bcb1:	or     al,BYTE PTR [eax]
  43bcb3:	add    BYTE PTR [edi-0x60fff5bb],ch
  43bcb9:	inc    ebp
  43bcba:	or     al,BYTE PTR [eax]
  43bcbc:	lahf   
  43bcbd:	inc    ebp
  43bcbe:	or     al,BYTE PTR [eax]
  43bcc0:	scas   eax,DWORD PTR es:[edi]
  43bcc1:	inc    ebp
  43bcc2:	or     al,BYTE PTR [eax]
  43bcc4:	scas   eax,DWORD PTR es:[edi]
  43bcc5:	inc    ebp
  43bcc6:	or     al,BYTE PTR [eax]
  43bcc8:	lahf   
  43bcc9:	inc    ebp
  43bcca:	or     al,BYTE PTR [eax]
  43bccc:	lahf   
  43bccd:	inc    ebp
  43bcce:	or     al,BYTE PTR [eax]
  43bcd0:	outs   dx,DWORD PTR ds:[esi]
  43bcd1:	inc    ebp
  43bcd2:	or     al,BYTE PTR [eax]
  43bcd4:	outs   dx,DWORD PTR ds:[esi]
  43bcd5:	inc    ebp
  43bcd6:	or     al,BYTE PTR [eax]
  43bcd8:	pop    edi
  43bcd9:	inc    ebp
  43bcda:	or     al,BYTE PTR [eax]
  43bcdc:	pop    edi
  43bcdd:	inc    ebp
  43bcde:	or     al,BYTE PTR [eax]
  43bce0:	outs   dx,DWORD PTR ds:[esi]
  43bce1:	inc    ebp
  43bce2:	or     al,BYTE PTR [eax]
  43bce4:	outs   dx,DWORD PTR ds:[esi]
  43bce5:	inc    ebp
  43bce6:	or     al,BYTE PTR [eax]
  43bce8:	pop    edi
  43bce9:	inc    ebp
  43bcea:	or     al,BYTE PTR [eax]
  43bcec:	pop    edi
  43bced:	inc    ebp
  43bcee:	or     al,BYTE PTR [eax]
  43bcf0:	das    
  43bcf1:	inc    ebp
  43bcf2:	or     al,BYTE PTR [eax]
  43bcf4:	das    
  43bcf5:	inc    ebp
  43bcf6:	or     al,BYTE PTR [eax]
  43bcf8:	pop    ds
  43bcf9:	inc    ebp
  43bcfa:	or     al,BYTE PTR [eax]
  43bcfc:	pop    ds
  43bcfd:	inc    ebp
  43bcfe:	or     al,BYTE PTR [eax]
  43bd00:	das    
  43bd01:	inc    ebp
  43bd02:	or     al,BYTE PTR [eax]
  43bd04:	xchg   BYTE PTR [ebx-0x6479fff6],bl
  43bd0a:	or     al,BYTE PTR [eax]
  43bd0c:	xchg   BYTE PTR [ebx-0x6479fff6],bl
  43bd12:	or     al,BYTE PTR [eax]
  43bd14:	xchg   BYTE PTR [ebx-0x79fffff6],bl
  43bd1a:	fwait
  43bd1b:	or     al,BYTE PTR [eax]
  43bd1d:	xchg   BYTE PTR [ebx-0x6479fff6],bl
  43bd23:	or     al,BYTE PTR [eax]
  43bd25:	xchg   BYTE PTR [ebx-0x6479fff6],bl
  43bd2b:	or     al,BYTE PTR [eax]
  43bd2d:	xchg   BYTE PTR [ebx-0x6479fff6],bl
  43bd33:	or     al,BYTE PTR [eax]
  43bd35:	xchg   BYTE PTR [ebx-0x6479fff6],bl
  43bd3b:	or     al,BYTE PTR [eax]
  43bd3d:	xchg   BYTE PTR [ebx-0x6479fff6],bl
  43bd43:	or     al,BYTE PTR [eax]
  43bd45:	xchg   BYTE PTR [ebx-0x6479fff6],bl
  43bd4b:	or     al,BYTE PTR [eax]
  43bd4d:	xchg   BYTE PTR [ebx-0x6679fff6],bl
  43bd53:	or     al,BYTE PTR [eax]
  43bd55:	xchg   BYTE PTR [ecx-0x6679fff6],bl
  43bd5b:	or     al,BYTE PTR [eax]
  43bd5d:	xchg   BYTE PTR [ecx-0x6679fff6],bl
  43bd63:	or     al,BYTE PTR [eax]
  43bd65:	xchg   BYTE PTR [ecx-0x6679fff6],bl
  43bd6b:	or     al,BYTE PTR [eax]
  43bd6d:	xchg   BYTE PTR [ecx-0x6679fff6],bl
  43bd73:	or     al,BYTE PTR [eax]
  43bd75:	xchg   BYTE PTR [ecx-0x6679fff6],bl
  43bd7b:	or     al,BYTE PTR [eax]
  43bd7d:	add    BYTE PTR [esi-0x79fc1ebe],al
  43bd83:	inc    edx
  43bd84:	loope  0x43bd89
  43bd86:	xchg   BYTE PTR [edx-0x1f],al
  43bd89:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43bd8f:	inc    edx
  43bd90:	loope  0x43bd95
  43bd92:	xchg   BYTE PTR [edx-0x1f],al
  43bd95:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43bd9b:	inc    edx
  43bd9c:	loope  0x43bda1
  43bd9e:	xchg   BYTE PTR [edx-0x1f],al
  43bda1:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43bda7:	inc    edx
  43bda8:	loope  0x43bdad
  43bdaa:	xchg   BYTE PTR [edx-0x1f],al
  43bdad:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43bdb3:	inc    edx
  43bdb4:	loope  0x43bdb9
  43bdb6:	xchg   BYTE PTR [edx-0x1f],al
  43bdb9:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43bdbf:	inc    edx
  43bdc0:	loope  0x43bdc5
  43bdc2:	xchg   BYTE PTR [edx-0x1f],al
  43bdc5:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43bdcb:	inc    edx
  43bdcc:	loope  0x43bdd1
  43bdce:	xchg   BYTE PTR [edx-0x1f],al
  43bdd1:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43bdd7:	inc    edx
  43bdd8:	loope  0x43bddd
  43bdda:	xchg   BYTE PTR [edx-0x1f],al
  43bddd:	add    eax,DWORD PTR [esi+0x3e142]
  43bde3:	xchg   BYTE PTR [edx-0x1f],al
  43bde6:	add    eax,DWORD PTR [esi+0x51f3e142]
  43bdec:	xchg   eax,eax
  43bdee:	add    eax,DWORD PTR [esi-0x11e5c2be]
  43bdf4:	dec    eax
  43bdf5:	jmp    0xa902017
  43bdfa:	mov    ecx,0xa1344693
  43bdff:	mov    ebp,esi
  43be01:	xor    ecx,DWORD PTR [ecx+0x7c]
  43be04:	push   ss
  43be05:	xor    al,0x61
  43be07:	jl     0x43bdc7
  43be09:	xor    ebp,ecx
  43be0b:	lds    eax,FWORD PTR [edx+0xa]
  43be0e:	add    DWORD PTR [edx-0x60c6f5be],eax
  43be14:	push   cs
  43be15:	sub    eax,0x2d069f41
  43be1a:	imul   ecx,DWORD PTR [edi-0x709ed342],0x7f792cb6
  43be24:	scas   al,BYTE PTR es:[edi]
  43be25:	sub    al,0x81
  43be27:	jo     0x43bdcf
  43be29:	das    
  43be2a:	dec    ecx
  43be2b:	js     0x43be0b
  43be2d:	das    
  43be2e:	inc    ecx
  43be2f:	jo     0x43be73
  43be31:	or     ch,cl
  43be33:	and    eax,0x83990a42
  43be38:	inc    edx
  43be39:	or     bl,BYTE PTR [ecx-0x80]
  43be3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43be3d:	aaa    
  43be3e:	dec    ecx
  43be3f:	js     0x43be1b
  43be41:	aaa    
  43be42:	xchg   ebp,eax
  43be43:	nop
  43be44:	into   
  43be45:	aaa    
  43be46:	popf   
  43be47:	add    BYTE PTR [eax-0x7fdac882],cl
  43be4d:	outs   dx,BYTE PTR ds:[esi]
  43be4e:	aaa    
  43be4f:	sub    eax,0x55379e78
  43be54:	nop
  43be55:	mov    ?,WORD PTR [edi]
  43be57:	cmp    eax,0xe5373e88
  43be5c:	sub    BYTE PTR [esi],0x37
  43be5f:	int    0x78
  43be61:	pop    esi
  43be62:	aaa    
  43be63:	aad    0x90
  43be65:	dec    esi
  43be66:	aaa    
  43be67:	fisttp QWORD PTR [eax-0x7f5ac902]
  43be6d:	out    dx,al
  43be6e:	lods   eax,DWORD PTR ss:[esi]
  43be70:	js     0x43be90
  43be72:	aaa    
  43be73:	add    BYTE PTR [ebx],bl
  43be75:	xor    eax,0x34bb3776
  43be7a:	xchg   BYTE PTR [edi],dh
  43be7c:	stos   DWORD PTR es:[edi],eax
  43be7d:	xor    eax,0x35bb3796
  43be82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43be83:	aaa    
  43be84:	sti    
  43be85:	xor    al,0xb6
  43be87:	aaa    
  43be88:	sti    
  43be89:	xor    al,0xc6
  43be8b:	aaa    
  43be8c:	jmp    0x43bec2
  43be8e:	(bad)  
  43be8f:	aaa    
  43be90:	(bad)  [esi+eiz*8]
  43be93:	aaa    
  43be94:	(bad)  [esi+esi*8]
  43be97:	aaa    
  43be98:	cmp    esi,DWORD PTR ds:0x29eb3806
  43be9e:	push   ss
  43be9f:	cmp    BYTE PTR [ebx-0x44c7d9d7],bh
  43bea5:	sub    DWORD PTR [esi],esi
  43bea7:	cmp    BYTE PTR [ebx+0x384629],bh
  43bead:	stos   DWORD PTR es:[edi],eax
  43beae:	es push esi
  43beb0:	cmp    BYTE PTR [ebx-0x64c799da],bl
  43beb6:	es jbe 0x43bef1
  43beb9:	mov    ebx,0x2b388629
  43bebe:	sub    DWORD PTR [esi-0x59d6c4c8],edx
  43bec4:	cmp    bl,bh
  43bec6:	sub    DWORD PTR [esi-0x39d604c8],esi
  43becc:	cmp    BYTE PTR [ebx+0x29],ch
  43becf:	(bad)  
  43bed0:	cmp    BYTE PTR [ebx+0x29],bl
  43bed3:	out    0x38,al
  43bed5:	fld    TBYTE PTR [ecx]
  43bed7:	idiv   BYTE PTR [eax]
  43bed9:	mov    ebx,0x6b390629
  43bede:	es push ss
  43bee0:	cmp    DWORD PTR [ebx],edi
  43bee2:	es cmp DWORD PTR es:[ebx],edi
  43bee6:	es cmp DWORD PTR ss:[ebx],edi
  43beea:	es inc esi
  43beec:	cmp    DWORD PTR [esi-0x70abf221],eax
  43bef2:	xlat   BYTE PTR ds:[ebx]
  43bef3:	or     eax,0xdaf7f64
  43bef8:	je     0x43bf79
  43befa:	pop    es
  43befb:	push   cs
  43befc:	test   BYTE PTR [edi+0x1f],ch
  43beff:	push   cs
  43bf00:	xchg   esp,eax
  43bf01:	outs   dx,DWORD PTR ds:[esi]
  43bf02:	test   DWORD PTR ds:0x12af5fa4,0x12a75fb4
  43bf0c:	les    ecx,FWORD PTR [edi-0x21]
  43bf0f:	adc    dl,ah
  43bf11:	add    BYTE PTR [edi-0x29],cl
  43bf14:	adc    ah,ah
  43bf16:	mov    edi,0xbff4126f
  43bf1b:	(bad)  
  43bf1c:	adc    al,BYTE PTR [esp+ebp*4]
  43bf1f:	lahf   
  43bf20:	adc    BYTE PTR [esp+ebp*4],dl
  43bf23:	ja     0x43bf35
  43bf25:	and    al,0x9c
  43bf27:	outs   dx,DWORD PTR ds:[esi]
  43bf28:	adc    BYTE PTR [esp+ebx*4],dh
  43bf2b:	adc    BYTE PTR [si-0x74],al
  43bf2f:	pop    edi
  43bf30:	adc    al,0x54
  43bf32:	mov    WORD PTR [edi+0x14],ss
  43bf35:	fs jl  0x43bf67
  43bf38:	adc    al,0x74
  43bf3a:	jl     0x43bec3
  43bf3c:	adc    BYTE PTR [esp+ebp*2+0x6c94141f],al
  43bf43:	not    DWORD PTR [ebx]
  43bf45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bf46:	pop    esp
  43bf47:	scas   eax,DWORD PTR es:[edi]
  43bf48:	adc    esi,DWORD PTR [esp+ebx*2+0x4cc413a7]
  43bf4f:	pop    edi
  43bf50:	adc    al,0xd4
  43bf52:	dec    esp
  43bf53:	push   edi
  43bf54:	adc    al,0xe4
  43bf56:	mov    esp,0xbcf413ed
  43bf5b:	inc    ebp
  43bf5c:	adc    al,0x4
  43bf5e:	lods   eax,DWORD PTR ds:[esi]
  43bf5f:	popf   
  43bf60:	adc    DWORD PTR [ebp*4-0x62dbee8b],edx
  43bf67:	inc    edx
  43bf68:	aad    0x18
  43bf6a:	xchg   edx,eax
  43bf6b:	inc    edi
  43bf6c:	int    0x18
  43bf6e:	retf   0xa547
  43bf71:	sbb    BYTE PTR [edx+0x189d47],dh
  43bf77:	stos   BYTE PTR es:[edi],al
  43bf78:	inc    edi
  43bf79:	xchg   ebp,eax
  43bf7a:	sbb    BYTE PTR [edx+0xa186d47],dh
  43bf80:	dec    eax
  43bf81:	sbb    DWORD PTR gs:[edx],edx
  43bf84:	dec    eax
  43bf85:	cmp    eax,0x9547ea19
  43bf8a:	sbb    dl,dl
  43bf8c:	inc    edi
  43bf8d:	lea    ebx,[eax]
  43bf8f:	dec    edx
  43bf90:	dec    eax
  43bf91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43bf92:	sbb    BYTE PTR [edx],dh
  43bf94:	dec    eax
  43bf95:	popf   
  43bf96:	sbb    dl,ch
  43bf98:	inc    edi
  43bf99:	aad    0x18
  43bf9b:	repnz inc edi
  43bf9d:	lods   eax,DWORD PTR ds:[esi]
  43bf9e:	sbb    BYTE PTR [edx-0x6de81aba],cl
  43bfa4:	inc    esi
  43bfa5:	mov    ebp,0xd546aa17
  43bfaa:	pop    ss
  43bfab:	xchg   edx,eax
  43bfac:	inc    esi
  43bfad:	int    0x17
  43bfaf:	dec    edx
  43bfb0:	inc    esi
  43bfb1:	and    eax,0x1d463218
  43bfb6:	sbb    BYTE PTR [edx],ch
  43bfb8:	inc    esi
  43bfb9:	adc    eax,0xed463218
  43bfbe:	pop    ss
  43bfbf:	or     al,BYTE PTR [edi+0x65]
  43bfc2:	pop    ss
  43bfc3:	adc    al,BYTE PTR [edi+0x3d]
  43bfc6:	pop    ss
  43bfc7:	jmp    0x2146:0xd2179546
  43bfce:	pop    ss
  43bfcf:	ret    0x3946
  43bfd2:	pop    ss
  43bfd3:	mov    ds:0x82175146,al
  43bfd8:	inc    esi
  43bfd9:	adc    eax,0x45b20017
  43bfde:	in     eax,dx
  43bfdf:	push   ss
  43bfe0:	retf   0xa45
  43bfe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43bfe4:	nop
  43bfe5:	out    dx,al
  43bfe6:	sub    al,0x8d
  43bfe8:	js     0x43c008
  43bfea:	sub    eax,0x2d0e7095
  43bfef:	popf   
  43bff0:	js     0x43bfb0
  43bff2:	sub    al,0x65
  43bff4:	jo     0x43bfa4
  43bff6:	sub    al,0x6d
  43bff8:	cwde   
  43bff9:	fisubr WORD PTR [edx*2+0x3d2cce90]
  43c000:	cwde   
  43c001:	jle    0x43c02f
  43c003:	and    eax,0xd2c6e90
  43c008:	js     0x43bfa8
  43c00a:	sub    al,0xe9
  43c00c:	mov    ch,0x42
  43c00e:	or     ah,BYTE PTR [ecx]
  43c010:	mov    al,BYTE PTR [edx+0xa]
  43c013:	cmc    
  43c014:	outs   dx,BYTE PTR ds:[esi]
  43c015:	bound  esi,QWORD PTR ds:0x355a9f05
  43c01b:	adc    eax,0xf535529f
  43c020:	mov    cs,WORD PTR [edx+0x35]
  43c023:	cmc    
  43c024:	mov    es,WORD PTR [edx]
  43c026:	xor    eax,0x347e7f1d
  43c02b:	mov    cl,0x7f
  43c02d:	jbe    0x43c063
  43c02f:	inc    ebp
  43c030:	ins    BYTE PTR es:[edi],dx
  43c031:	fidiv  DWORD PTR [edi]
  43c033:	inc    ebp
  43c034:	ins    BYTE PTR es:[edi],dx
  43c035:	shl    BYTE PTR [edi],cl
  43c037:	push   ebp
  43c038:	pushf  
  43c039:	jle    0x43c06c
  43c03b:	mov    cl,0x8a
  43c03d:	mov    ?,WORD PTR [ecx]
  43c03f:	add    DWORD PTR [eax],0xe9318682
  43c045:	add    eax,0x85f5ee83
  43c04a:	inc    edx
  43c04b:	or     dl,BYTE PTR [ebp-0x75]
  43c04e:	xchg   edx,eax
  43c04f:	xor    BYTE PTR [ebp-0x7d],dl
  43c052:	mov    dh,BYTE PTR [eax]
  43c054:	push   ebp
  43c055:	jnp    0x43c099
  43c057:	xor    al,0xe5
  43c059:	xchg   ebx,eax
  43c05a:	dec    edx
  43c05b:	xor    al,0x0
  43c05d:	jae    0x43c0af
  43c05f:	(bad)  
  43c060:	cmp    ah,BYTE PTR [edi-0x40c531b0]
  43c066:	push   eax
  43c067:	out    0x3a,al
  43c069:	lahf   
  43c06a:	push   eax
  43c06b:	idiv   BYTE PTR [edx]
  43c06d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c06e:	push   eax
  43c06f:	out    dx,al
  43c070:	cmp    bl,BYTE PTR [edi+0x51]
  43c073:	push   es
  43c074:	cmp    esp,DWORD PTR [edi+0x51]
  43c077:	cmp    ax,WORD PTR [edi]
  43c07a:	push   ecx
  43c07b:	pop    esi
  43c07c:	cmp    edi,DWORD PTR [edi+0x73b7650]
  43c082:	push   ecx
  43c083:	outs   dx,BYTE PTR ds:[esi]
  43c084:	cmp    ebx,DWORD PTR [edi-0x58c479af]
  43c08a:	push   ecx
  43c08b:	jle    0x43c0c8
  43c08d:	lahf   
  43c08e:	push   eax
  43c08f:	xchg   esi,eax
  43c090:	cmp    eax,DWORD PTR [edi]
  43c092:	push   ecx
  43c093:	mov    dl,0x3b
  43c095:	repz push eax
  43c097:	retf   0x373b
  43c09a:	push   ecx
  43c09b:	out    0x3b,al
  43c09d:	(bad)  
  43c09e:	push   edx
  43c09f:	idiv   BYTE PTR [edi+eax*8]
  43c0a2:	push   ecx
  43c0a3:	out    dx,al
  43c0a4:	cmp    al,0x0
  43c0a6:	fist   WORD PTR [edx+0x6]
  43c0a9:	cmp    eax,0x3cfe52e7
  43c0ae:	fist   WORD PTR [edx+0x16]
  43c0b1:	cmp    eax,0x3d0e5387
  43c0b6:	mov    edi,0xaf3d2652
  43c0bb:	cmc    
  43c0bc:	out    dx,al
  43c0bd:	call   DWORD PTR [ebx-0x4cfff5ba]
  43c0c3:	pop    ecx
  43c0c4:	mov    dh,BYTE PTR [ebx+ebx*1]
  43c0c7:	pop    ecx
  43c0c8:	xor    BYTE PTR [ebx+eax*2],0x59
  43c0cc:	call   0x8734:0xe2594b34
  43c0d3:	pop    ebx
  43c0d4:	sub    esi,DWORD PTR ds:0xf8122a86
  43c0da:	mov    ebx,0xb04b109e
  43c0df:	clc    
  43c0e0:	adc    cl,bh
  43c0e2:	mov    eax,0xb14d1345
  43c0e7:	je     0x43c0e6
  43c0e9:	out    0x9f,al
  43c0eb:	jae    0x43c0e9
  43c0ed:	mov    dl,0x9c
  43c0ef:	sub    DWORD PTR [eax],eax
  43c0f1:	fs xchg edx,eax
  43c0f3:	mov    ds:0x2b8ab1fe,al
  43c0f8:	call   FWORD PTR [eax-0x7d]
  43c0fb:	push   eax
  43c0fc:	sbb    dh,BYTE PTR [ebx]
  43c0fe:	js     0x43c0de
  43c100:	sbb    BYTE PTR [esi+0x70],ah
  43c103:	jmp    0x43c11d
  43c105:	xchg   edx,eax
  43c106:	push   0xcc1931
  43c10b:	pusha  
  43c10c:	pop    eax
  43c10d:	sbb    ebx,ebx
  43c10f:	pop    eax
  43c110:	jbe    0x43c12b
  43c112:	or     eax,0x24198151
  43c117:	dec    ecx
  43c118:	pop    eax
  43c119:	sbb    DWORD PTR [ebx-0x3f],eax
  43c11c:	sbb    DWORD PTR cs:[ebp-0x47],ebx
  43c120:	add    bl,BYTE PTR [ecx]
  43c122:	jns    0x43c0d5
  43c124:	mov    esp,0x6b860018
  43c129:	stos   BYTE PTR es:[edi],al
  43c12a:	jmp    ecx
  43c12c:	add    cl,BYTE PTR [ebx]
  43c12e:	add    BYTE PTR [esi-0x699ae9b9],al
  43c134:	out    dx,al
  43c135:	adc    eax,0x15bc96bf
  43c13a:	fbstp  TBYTE PTR [esi+0x7d]
  43c13d:	sbb    ebx,DWORD PTR [esi]
  43c13f:	ja     0x43c17a
  43c141:	sbb    ebx,DWORD PTR [ebx+0x77]
  43c144:	push   edx
  43c145:	sbb    ebp,DWORD PTR [ecx+0x77]
  43c148:	in     al,dx
  43c149:	sbb    dl,BYTE PTR [eax-0x39e4cfa9]
  43c14f:	push   edi
  43c150:	inc    edx
  43c151:	das    
  43c152:	adc    ebp,DWORD PTR [ebp-0x2fe96bce]
  43c158:	xor    ebx,DWORD PTR [esi]
  43c15a:	push   ss
  43c15b:	xor    DWORD PTR ds:0x33ac14eb,0xffffffa3
  43c162:	adc    al,0xc9
  43c164:	xor    ebp,DWORD PTR [ebp+0x5b340214]
  43c16a:	adc    eax,0x17a73466
  43c16f:	add    bl,dh
  43c171:	ss push ss
  43c173:	sbb    dl,ah
  43c175:	xor    eax,0x35eb1695
  43c17a:	in     eax,0x19
  43c17c:	mov    al,ds:0x7719af38
  43c181:	cmp    BYTE PTR [ebp-0x69c737e7],bl
  43c187:	sbb    DWORD PTR [esi],eax
  43c189:	cmp    DWORD PTR [edi+0x1a],esp
  43c18c:	adc    edi,DWORD PTR [ecx]
  43c18e:	pop    esp
  43c18f:	sbb    bh,cl
  43c191:	cmp    BYTE PTR [edi+0x19],bh
  43c194:	fnstsw WORD PTR [eax]
  43c196:	xchg   esp,eax
  43c197:	sbb    esi,ecx
  43c199:	cmp    BYTE PTR [eax-0x54c73ae7],bl
  43c19f:	sbb    ecx,ecx
  43c1a1:	cmp    BYTE PTR [eax-0x3bc72de7],dl
  43c1a7:	sbb    ecx,esp
  43c1a9:	cmp    bh,al
  43c1ab:	sbb    ebp,edx
  43c1ad:	cmp    BYTE PTR [ecx+ebx*1+0x18fc38db],bh
  43c1b4:	xor    DWORD PTR [edi],0xffffffce
  43c1b7:	sbb    BYTE PTR [ebp+0x37],al
  43c1ba:	sub    ebx,DWORD PTR [ecx]
  43c1bc:	push   ebp
  43c1bd:	aaa    
  43c1be:	or     BYTE PTR [ecx],bl
  43c1c0:	aas    
  43c1c1:	aaa    
  43c1c2:	push   esp
  43c1c3:	sbb    dl,ch
  43c1c5:	aaa    
  43c1c6:	xor    DWORD PTR [eax],ebx
  43c1c8:	in     eax,dx
  43c1c9:	aaa    
  43c1ca:	or     ch,BYTE PTR [edx-0x61c97582]
  43c1d0:	jle    0x43c242
  43c1d2:	ss out dx,eax
  43c1d4:	add    BYTE PTR [ebp+0x23],bh
  43c1d7:	xor    ah,BYTE PTR [ecx]
  43c1d9:	jp     0x43c1f0
  43c1db:	xor    al,ah
  43c1dd:	(bad)  
  43c1de:	(bad)  
  43c1df:	xor    DWORD PTR [ecx-0x73],edi
  43c1e2:	lods   al,BYTE PTR ds:[esi]
  43c1e3:	xor    DWORD PTR [edx+0x20318d7d],eax
  43c1e9:	jge    0x43c18a
  43c1eb:	xor    DWORD PTR [ebx-0x73],eax
  43c1ee:	inc    edi
  43c1ef:	xor    edi,ebx
  43c1f1:	mov    WORD PTR [esi+0x31],ds
  43c1f4:	retf   0x277c
  43c1f7:	xor    esi,ecx
  43c1f9:	jl     0x43c22e
  43c1fb:	xor    edx,edx
  43c1fd:	mov    WORD PTR [esi],ss
  43c1ff:	xor    DWORD PTR [ebp-0x74],ebx
  43c202:	xor    BYTE PTR [eax],0x34
  43c205:	jl     0x43c276
  43c207:	xor    bh,ch
  43c209:	jnp    0x43c264
  43c20b:	xor    al,0x9d
  43c20d:	xchg   ebx,eax
  43c20e:	sbb    BYTE PTR [ecx+ecx*4],dh
  43c211:	mov    ebp,esi
  43c213:	xor    ebx,DWORD PTR [ebx+0x7c]
  43c216:	lds    esi,FWORD PTR [ebx]
  43c218:	xchg   esp,eax
  43c219:	jl     0x43c1d6
  43c21b:	xor    esi,DWORD PTR [esp+ecx*4-0x7342cc60]
  43c222:	outs   dx,DWORD PTR ds:[esi]
  43c223:	xor    edi,DWORD PTR [esi-0x19cc8684]
  43c229:	jl     0x43c27f
  43c22b:	xor    edx,edx
  43c22d:	mov    WORD PTR [eax+0x33],fs
  43c230:	cmc    
  43c231:	mov    WORD PTR [eax],?
  43c233:	xor    edi,DWORD PTR [edx]
  43c235:	jge    0x43c24e
  43c237:	xor    edi,DWORD PTR [esi]
  43c239:	add    BYTE PTR [ebp-0x1d],bh
  43c23c:	xor    bh,BYTE PTR [ecx-0x73]
  43c23f:	shl    DWORD PTR [edx],cl
  43c241:	outs   dx,BYTE PTR ds:[esi]
  43c242:	lea    esi,[eax+0x4b700032]
  43c248:	fdivr  QWORD PTR [ebx]
  43c24a:	in     al,0x4a
  43c24c:	jmp    0x943c:0x7b52813b
  43c253:	dec    esi
  43c254:	mov    DWORD PTR [edx+edx*1],edi
  43c257:	push   edx
  43c258:	lds    edi,FWORD PTR [esp+ecx*2]
  43c25b:	push   edx
  43c25c:	or     bh,BYTE PTR ds:0x3d1b5371
  43c262:	adc    BYTE PTR [ebx+0x33],0x3d
  43c266:	push   esp
  43c267:	push   ebx
  43c268:	jb     0x43c2a7
  43c26a:	loop   0x43c2bf
  43c26c:	test   DWORD PTR ds:0x3da553be,edi
  43c272:	ficom  WORD PTR [ebx-0x42]
  43c275:	cmp    eax,0x3de9538e
  43c27a:	jnp    0x43c2cf
  43c27c:	(bad)  
  43c27d:	cmp    eax,0x3e1e5051
  43c282:	repz dec edi
  43c284:	gs ror BYTE PTR ds:[esp+eax*1+0x3f],cl
  43c28a:	arpl   WORD PTR [ebp-0x3b],cx
  43c28d:	aas    
  43c28e:	jle    0x43c2dd
  43c290:	fnstcw WORD PTR [edi]
  43c292:	sub    cl,BYTE PTR [ebp+0xa]
  43c295:	add    BYTE PTR [edi],bl
  43c297:	shr    dh,cl
  43c299:	(bad)  
  43c29a:	fild   WORD PTR [ecx+0xa]
  43c29d:	add    BYTE PTR [eax],al
  43c29f:	dec    esi
  43c2a0:	push   esi
  43c2a1:	add    DWORD PTR [ecx],esi
  43c2a3:	mov    ds:0xb0313f57,eax
  43c2a8:	push   edi
  43c2a9:	xchg   DWORD PTR [ecx],esi
  43c2ab:	push   ebx
  43c2ac:	push   esi
  43c2ad:	mov    ds:0xb5566331,al
  43c2b2:	xor    DWORD PTR [eax],esp
  43c2b4:	push   edi
  43c2b5:	fdiv   QWORD PTR [ecx]
  43c2b7:	cli    
  43c2b8:	push   esi
  43c2b9:	push   DWORD PTR [ecx]
  43c2bb:	retf   
  43c2bc:	push   ebx
  43c2bd:	sub    esi,DWORD PTR [edx]
  43c2bf:	xchg   BYTE PTR [esi+0x5a743918],bl
  43c2c5:	sbb    al,0x84
  43c2c7:	je     0x43c2aa
  43c2c9:	sbb    BYTE PTR [edi-0x23e75a8c],dh
  43c2cf:	push   esp
  43c2d0:	xchg   esi,eax
  43c2d1:	sbb    ebx,DWORD PTR [esi+0x55]
  43c2d4:	aaa    
  43c2d5:	sbb    al,0x2f
  43c2d7:	pop    edx
  43c2d8:	pop    esp
  43c2d9:	adc    al,BYTE PTR [ecx+0x52]
  43c2dc:	scas   al,BYTE PTR es:[edi]
  43c2dd:	push   ss
  43c2de:	jo     0x43c29a
  43c2e0:	fst    QWORD PTR [esi]
  43c2e2:	shl    DWORD PTR [edx-0x44fce8fa],cl
  43c2e8:	cdq    
  43c2e9:	adc    DWORD PTR [esi-0x4d],esp
  43c2ec:	mov    bh,0x11
  43c2ee:	xchg   ebx,eax
  43c2ef:	fwait
  43c2f0:	pop    ss
  43c2f1:	adc    cl,cl
  43c2f3:	xchg   ebx,eax
  43c2f4:	push   esp
  43c2f5:	adc    bh,bh
  43c2f7:	fwait
  43c2f8:	popa   
  43c2f9:	adc    al,0x40
  43c2fb:	nop
  43c2fc:	adc    BYTE PTR [edi+eiz*2],0x78
  43c300:	les    edx,FWORD PTR [ebx+ebx*4]
  43c303:	add    BYTE PTR [eax+0x32],dh
  43c306:	adc    eax,0x155778e3
  43c30b:	sub    DWORD PTR [ecx-0x4a],esi
  43c30e:	pop    ss
  43c30f:	dec    esp
  43c310:	pop    ecx
  43c311:	leave  
  43c312:	pop    ss
  43c313:	push   0x51
  43c315:	push   cs
  43c316:	sbb    BYTE PTR [eax-0x7ceb5ea7],ch
  43c31c:	dec    esi
  43c31d:	(bad)  
  43c31e:	std    
  43c31f:	dec    eax
  43c320:	mov    edi,0xbfef02e6
  43c325:	push   edi
  43c326:	add    al,0x43
  43c328:	lods   al,BYTE PTR ds:[esi]
  43c329:	xor    BYTE PTR [edi+edi*4],al
  43c32c:	lods   al,BYTE PTR ds:[esi]
  43c32d:	mov    bl,0x3
  43c32f:	fcomp  QWORD PTR [ebx+eax*2-0x106266ff]
  43c336:	add    cl,bh
  43c338:	lea    eax,[edx-0x3d]
  43c33b:	cmova  edi,DWORD PTR [esi]
  43c33e:	xor    DWORD PTR [eax],edx
  43c340:	push   edi
  43c341:	ds adc BYTE PTR ss:[edi],ch
  43c345:	ds pop ss
  43c347:	adc    BYTE PTR [esi+edi*1],ch
  43c34a:	imul   edx,DWORD PTR [eax],0xffffffe1
  43c34d:	cmp    eax,0x3f76108a
  43c352:	mov    ch,0xe
  43c354:	or     eax,0xe90e583f
  43c359:	cmp    esp,ecx
  43c35b:	ret    
  43c35c:	mov    DWORD PTR [eax+esi*4+0x3],edi
  43c360:	xchg   BYTE PTR [edx-0x24],al
  43c363:	adc    ebp,DWORD PTR [ebx]
  43c365:	xor    edx,DWORD PTR [edx]
  43c367:	adc    eax,DWORD PTR [eax]
  43c369:	fdiv   QWORD PTR [ecx]
  43c36b:	je     0x43c380
  43c36d:	mov    esp,0x3111d930
  43c372:	xor    DWORD PTR [eax+0x12],esi
  43c375:	stos   DWORD PTR es:[edi],eax
  43c376:	das    
  43c377:	mov    ah,0x10
  43c379:	lahf   
  43c37a:	cmp    DWORD PTR ss:[eax],ebx
  43c37d:	lahf   
  43c37e:	xor    eax,0x36391779
  43c383:	fcom   DWORD PTR ds:0x14e134ff
  43c389:	or     DWORD PTR [ebx],edi
  43c38b:	imul   ecx,DWORD PTR [esp+eiz*8],0x1f0b1039
  43c392:	cmp    al,BYTE PTR [ecx+ecx*1+0x29]
  43c396:	aas    
  43c397:	mov    edx,0xd3dea0e
  43c39c:	push   cs
  43c39d:	pushf  
  43c39e:	cmp    al,0xd5
  43c3a0:	or     eax,0xd5a3b44
  43c3a5:	cs cmp al,0x9f
  43c3a8:	or     al,0x86
  43c3aa:	inc    edx
  43c3ab:	loope  0x43c360
  43c3ad:	jmp    0x8648002d
  43c3b2:	inc    edx
  43c3b3:	or     ah,ah
  43c3b5:	jne    0x43c35b
  43c3b7:	cmp    esp,eax
  43c3b9:	jne    0x43c3b0
  43c3bb:	cmp    BYTE PTR [ecx+0x74],bl
  43c3be:	cmp    BYTE PTR [eax],0xf8
  43c3c1:	xchg   edi,eax
  43c3c2:	pop    ebx
  43c3c3:	cmp    al,0x23
  43c3c5:	xchg   esp,eax
  43c3c6:	or     eax,0xe294333c
  43c3cb:	cmp    edi,ebx
  43c3cd:	add    BYTE PTR [edi+0x77683bf3],dl
  43c3d3:	sar    DWORD PTR [ebx],0x53
  43c3d6:	ja     0x43c386
  43c3d8:	cmp    edi,DWORD PTR [ebp+0x77]
  43c3db:	cmp    esp,DWORD PTR es:[ecx]
  43c3de:	ja     0x43c3e7
  43c3e0:	cmp    esp,DWORD PTR [ebx-0x45c5426a]
  43c3e6:	xchg   ecx,eax
  43c3e7:	std    
  43c3e8:	xor    eax,0x35419930
  43c3ed:	cmp    DWORD PTR [eax-0x7302c8b3],edx
  43c3f3:	or     esi,DWORD PTR [ecx]
  43c3f5:	mov    bl,0x8c
  43c3f7:	leave  
  43c3f8:	xor    BYTE PTR [edi+0x7c],ch
  43c3fb:	mov    esi,DWORD PTR [eax]
  43c3fd:	daa    
  43c3fe:	jl     0x43c413
  43c400:	xor    al,0x80
  43c402:	pop    DWORD PTR [ebx+esi*1+0x33148f1e]
  43c409:	mov    ?,WORD PTR [esi-0x5b]
  43c40c:	xor    dl,BYTE PTR [edx]
  43c40e:	jle    0x43c467
  43c410:	cs jp  0x43c3a4
  43c413:	scas   eax,DWORD PTR es:[edi]
  43c414:	sub    eax,0x2eea8bb9
  43c419:	jmp    0x3a323f43
  43c41e:	add    BYTE PTR [edx+0xa],0x54
  43c422:	call   0x3bca:0x93a33956
  43c429:	pop    ecx
  43c42a:	cdq    
  43c42b:	(bad)  
  43c42c:	cmp    al,BYTE PTR [eax]
  43c42e:	outs   dx,BYTE PTR ds:[esi]
  43c42f:	push   ebx
  43c430:	mov    al,0x33
  43c432:	add    BYTE PTR [edx+edx*2-0x50],ah
  43c436:	xor    al,0x85
  43c438:	push   eax
  43c439:	cmp    DWORD PTR [esi],esi
  43c43b:	inc    esp
  43c43c:	dec    edi
  43c43d:	or     eax,0x554e9138
  43c442:	cmp    BYTE PTR [edi],bh
  43c444:	dec    esi
  43c445:	fdivr  DWORD PTR [eax]
  43c447:	xchg   edi,eax
  43c448:	dec    ebp
  43c449:	nop
  43c44a:	cmp    eax,edi
  43c44c:	dec    esp
  43c44d:	ins    DWORD PTR es:[edi],dx
  43c44e:	cmp    esp,DWORD PTR [ecx]
  43c450:	dec    ebx
  43c451:	retf   
  43c452:	cmp    ebp,DWORD PTR [edi]
  43c454:	dec    edx
  43c455:	inc    ebx
  43c456:	cmp    eax,0x3e8848b5
  43c45b:	ss dec eax
  43c45d:	test   al,0x3e
  43c45f:	jmp    0x43c4a8
  43c461:	or     bh,BYTE PTR [edi]
  43c463:	sub    BYTE PTR [ebp+0x58],cl
  43c466:	aas    
  43c467:	dec    ebx
  43c468:	dec    ebp
  43c469:	or     al,BYTE PTR [eax]
  43c46b:	pop    edi
  43c46c:	xchg   esi,eax
  43c46d:	out    dx,al
  43c46e:	dec    DWORD PTR [ebx]
  43c470:	inc    esi
  43c471:	or     al,BYTE PTR [eax]
  43c473:	sub    edx,DWORD PTR [esi+0x5a]
  43c476:	xor    DWORD PTR [eax],ecx
  43c478:	push   eax
  43c479:	mov    bl,0x31
  43c47b:	outs   dx,DWORD PTR ds:[esi]
  43c47c:	dec    edi
  43c47d:	dec    edx
  43c47e:	xor    dl,bl
  43c480:	push   eax
  43c481:	shl    DWORD PTR [ebx],0x81
  43c484:	push   ecx
  43c485:	in     al,dx
  43c486:	xor    edx,DWORD PTR [edi+0x24340651]
  43c48c:	dec    edx
  43c48d:	sub    DWORD PTR ds:0x366e53a4,esi
  43c493:	scas   al,BYTE PTR es:[edi]
  43c494:	push   esp
  43c495:	mov    ecx,0x54530036
  43c49a:	or     al,0x38
  43c49c:	loope  0x43c4eb
  43c49e:	jb     0x43c4d8
  43c4a0:	mov    ds:0x5b393d46,al
  43c4a5:	inc    edi
  43c4a6:	jo     0x43c4e1
  43c4a8:	xchg   ch,cl
  43c4aa:	(bad)  
  43c4ab:	sti    
  43c4ac:	lods   eax,DWORD PTR ds:[esi]
  43c4ad:	jae    0x43c4b5
  43c4af:	inc    edx
  43c4b0:	stos   BYTE PTR es:[edi],al
  43c4b1:	out    dx,eax
  43c4b2:	push   es
  43c4b3:	inc    eax
  43c4b4:	mov    ds:0x9bf101a3,eax
  43c4b9:	add    DWORD PTR [eax],0x3e29157
  43c4bf:	add    BYTE PTR [esi-0x3e00f595],al
  43c4c5:	and    eax,DWORD PTR [esi]
  43c4c7:	add    BYTE PTR [esi+0x76571a98],al
  43c4cd:	or     eax,0x28742f16
  43c4d2:	sbb    BYTE PTR [esp+edx*2-0x5e],cl
  43c4d6:	adc    al,0x7f
  43c4d8:	push   ebp
  43c4d9:	imul   ebx,DWORD PTR [ebx],0x3e
  43c4dc:	pop    ecx
  43c4dd:	inc    esp
  43c4de:	sbb    edx,DWORD PTR [ecx+0x1f1c0b51]
  43c4e4:	mov    esi,0xbe7402ba
  43c4e9:	fiadd  WORD PTR [edx]
  43c4eb:	xchg   ebx,eax
  43c4ec:	scas   al,BYTE PTR es:[edi]
  43c4ed:	out    0x2,eax
  43c4ef:	sahf   
  43c4f0:	scas   al,BYTE PTR es:[edi]
  43c4f1:	aad    0x2
  43c4f3:	mov    al,0x9e
  43c4f5:	icebp  
  43c4f6:	add    bh,BYTE PTR [esi+ebx*4+0xc60327]
  43c4fd:	mov    ds,WORD PTR [ebx+eax*1-0x29]
  43c501:	mov    cs,WORD PTR [ebp+0x3]
  43c504:	out    0x7e,eax
  43c506:	dec    ecx
  43c507:	add    ebx,DWORD PTR [eax]
  43c509:	jg     0x43c496
  43c50b:	std    
  43c50c:	and    BYTE PTR [edi-0x4a],ch
  43c50f:	std    
  43c510:	xor    ch,BYTE PTR [edi-0x7c]
  43c513:	std    
  43c514:	ds pop edi
  43c516:	mov    al,ds:0xd65f48fd
  43c51b:	std    
  43c51c:	pop    ecx
  43c51d:	dec    edi
  43c51e:	mov    edi,0x424f6afd
  43c523:	dec    ebp
  43c524:	or     edi,DWORD PTR [ecx+0x3b]
  43c527:	mov    cl,0xb
  43c529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c52a:	cmp    al,0x15
  43c52c:	push   cs
  43c52d:	push   ebp
  43c52e:	cmp    al,0xbc
  43c530:	push   cs
  43c531:	lods   al,BYTE PTR ds:[esi]
  43c532:	cmp    eax,0x3d400d29
  43c537:	mov    cs,WORD PTR ds:0xf3e14286
  43c53d:	sar    BYTE PTR [eax+0x0],1
  43c540:	add    al,0x86
  43c542:	inc    edx
  43c543:	pop    esp
  43c544:	or     ebp,ecx
  43c546:	cmp    al,0xdb
  43c548:	push   es
  43c549:	jb     0x43c582
  43c54b:	or     eax,DWORD PTR [edi]
  43c54d:	push   es
  43c54e:	cmp    BYTE PTR [ecx+0xa],al
  43c551:	jmp    0x537:0xb00a9e37
  43c558:	or     edi,esi
  43c55a:	cmp    cl,ah
  43c55c:	and    edx,DWORD PTR [ecx+0x2fc78]
  43c562:	xchg   BYTE PTR [edx-0x72],al
  43c565:	adc    al,0xd3
  43c567:	xor    DWORD PTR [ecx-0x33cdaded],ebp
  43c56d:	adc    eax,0x124e3402
  43c572:	sti    
  43c573:	xor    BYTE PTR [eax+edx*1+0xba63072],ah
  43c57a:	mov    bl,0x3a
  43c57c:	scas   al,BYTE PTR es:[edi]
  43c57d:	or     edi,ebx
  43c57f:	cmp    cl,BYTE PTR [ebx+0x263b180c]
  43c585:	or     al,0x9e
  43c587:	cmp    DWORD PTR [ecx-0x78c65ff6],eax
  43c58d:	or     dh,BYTE PTR [ebp-0x50f563c7]
  43c593:	cmp    DWORD PTR [ebp+0xb],ebx
  43c596:	or     DWORD PTR [edx],edi
  43c598:	pop    edi
  43c599:	or     ecx,DWORD PTR [ebx]
  43c59b:	cmp    cl,BYTE PTR [edx]
  43c59d:	push   ecx
  43c59e:	jge    0x43c57b
  43c5a0:	xor    BYTE PTR [ebx+0x7d],cl
  43c5a3:	mov    eax,ds:0xa78c9530
  43c5a8:	xor    BYTE PTR [edi-0x56cf5274],dl
  43c5ae:	jl     0x43c533
  43c5b0:	xor    BYTE PTR [ebx-0x62cf7684],ah
  43c5b6:	mov    WORD PTR [edi-0x6a7360d0],cs
  43c5bc:	xor    cl,al
  43c5be:	jl     0x43c62b
  43c5c0:	xor    BYTE PTR [ebx-0x5acf8e84],bh
  43c5c6:	add    BYTE PTR [edi+esi*2+0x3d8be730],cl
  43c5cd:	xor    al,0xf9
  43c5cf:	adc    DWORD PTR [ebx+0x34],0xfffffff3
  43c5d3:	jnp    0x43c62e
  43c5d5:	xor    al,0xcd
  43c5d7:	xchg   ebx,eax
  43c5d8:	pop    ds
  43c5d9:	xor    al,0xcf
  43c5db:	mov    esp,DWORD PTR ds:0x3b83b134
  43c5e1:	xor    al,0x2b
  43c5e3:	js     0x43c5e6
  43c5e5:	xor    al,0xb5
  43c5e7:	xchg   ebx,eax
  43c5e8:	pop    es
  43c5e9:	xor    al,0xb7
  43c5eb:	mov    ecx,DWORD PTR ds:0xe383c934
  43c5f1:	xor    eax,ebx
  43c5f3:	jnp    0x43c5de
  43c5f5:	xor    edi,DWORD PTR [ebp-0x40cc106d]
  43c5fb:	mov    esi,ebp
  43c5fd:	xor    esp,DWORD PTR [ecx-0x7d]
  43c600:	retf   
  43c601:	xor    ebx,DWORD PTR [ebx+0x7b]
  43c604:	shl    DWORD PTR [ebx],1
  43c606:	test   DWORD PTR [ebx-0x74b8cc29],edx
  43c60c:	popf   
  43c60d:	xor    ebx,DWORD PTR [ecx-0x7d]
  43c610:	mov    bl,0x33
  43c612:	push   ebx
  43c613:	jnp    0x43c5ce
  43c615:	xor    eax,DWORD PTR [eax]
  43c617:	jae    0x43c65e
  43c619:	(bad)  
  43c61a:	cmp    ch,BYTE PTR [ecx+0x45]
  43c61d:	mov    ebp,0xd345773a
  43c622:	cmp    bh,BYTE PTR [ebp+0x45]
  43c625:	jmp    0xdf8fa164
  43c62a:	cmp    al,BYTE PTR [eax]
  43c62c:	ror    DWORD PTR [ebx-0xb],1
  43c62f:	cmp    bl,bh
  43c631:	dec    ebx
  43c632:	or     edi,DWORD PTR [ebx]
  43c634:	in     eax,0x4b
  43c636:	add    DWORD PTR [ebx],edi
  43c638:	ret    
  43c639:	dec    ebx
  43c63a:	pop    ss
  43c63b:	cmp    edi,DWORD PTR [ecx-0x78c4f2b5]
  43c641:	dec    ebx
  43c642:	and    edi,DWORD PTR [ebx]
  43c644:	int    0x4b
  43c646:	cmp    DWORD PTR [ebx],edi
  43c648:	stos   DWORD PTR es:[edi],eax
  43c649:	dec    ebx
  43c64a:	das    
  43c64b:	cmp    esp,DWORD PTR [ecx+0x4b]
  43c64e:	inc    ebp
  43c64f:	cmp    ebp,DWORD PTR [edi+0x4b]
  43c652:	pop    ebx
  43c653:	cmp    esi,DWORD PTR [ebp+0x4b]
  43c656:	push   ecx
  43c657:	cmp    edx,DWORD PTR [ebx-0x76c498b5]
  43c65d:	dec    ebx
  43c65e:	pop    ebp
  43c65f:	cmp    edx,DWORD PTR [edi+0x1d3b734b]
  43c665:	dec    ebx
  43c666:	mov    DWORD PTR [ebx],edi
  43c668:	sti    
  43c669:	dec    ecx
  43c66a:	jg     0x43c6a7
  43c66c:	icebp  
  43c66d:	dec    ecx
  43c66e:	xchg   ebp,eax
  43c66f:	cmp    edi,edi
  43c671:	dec    ecx
  43c672:	stos   DWORD PTR es:[edi],eax
  43c673:	cmp    ebp,ebx
  43c675:	dec    ecx
  43c676:	lahf   
  43c677:	cmp    ecx,DWORD PTR [eax]
  43c679:	dec    edx
  43c67a:	(bad)  
  43c67b:	cmp    ebp,DWORD PTR [ebx+0x763bc049]
  43c681:	dec    ecx
  43c682:	sar    DWORD PTR [ebx],1
  43c684:	ror    DWORD PTR [ecx-0x22],0x3b
  43c688:	pushf  
  43c689:	dec    ecx
  43c68a:	idiv   DWORD PTR [ebx]
  43c68c:	sub    eax,0x3c093e
  43c691:	xchg   BYTE PTR [ebx+0x6],dh
  43c694:	and    BYTE PTR [edx+0x7d],ch
  43c697:	push   es
  43c698:	sub    al,0x62
  43c69a:	mov    ecx,0x45a9706
  43c69f:	add    bl,BYTE PTR [ecx+0x50]
  43c6a2:	lds    eax,FWORD PTR [eiz*4+0x40076948]
  43c6a9:	shl    DWORD PTR [ecx],0x7
  43c6ac:	arpl   WORD PTR [ecx-0x4e65f813],di
  43c6b2:	lds    eax,FWORD PTR [edi]
  43c6b4:	stos   BYTE PTR es:[edi],al
  43c6b5:	test   eax,0xa1ba07cd
  43c6ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c6bb:	pop    es
  43c6bc:	add    BYTE PTR [esi-0x2e00e595],al
  43c6c2:	iret   
  43c6c3:	or     al,BYTE PTR [eax]
  43c6c5:	xchg   BYTE PTR [esi+0x16],cl
  43c6c8:	push   ebp
  43c6c9:	jbe    0x43c703
  43c6cb:	adc    eax,0x15457757
  43c6d0:	adc    al,0x74
  43c6d2:	cs sbb al,0x5d
  43c6d5:	je     0x43c726
  43c6d7:	sbb    al,0x84
  43c6d9:	push   esp
  43c6da:	jecxz  0x43c6f4
  43c6dc:	call   0x2b54:0xe7191154
  43c6e3:	sbb    eax,DWORD PTR [ecx+0x55]
  43c6e6:	pop    es
  43c6e7:	sbb    al,0x61
  43c6e9:	mov    edx,0xb28efef0
  43c6ee:	idiv   ah
  43c6f0:	stos   DWORD PTR es:[edi],eax
  43c6f1:	mov    eax,0xb7fcd9
  43c6f6:	mov    al,0x2a
  43c6f8:	std    
  43c6f9:	(bad)  
  43c6fa:	cwde   
  43c6fb:	sub    eax,0xff90dffd
  43c700:	cld    
  43c701:	in     eax,0x98
  43c703:	cmp    ebp,edi
  43c705:	aaa    
  43c706:	xchg   ecx,eax
  43c707:	inc    DWORD PTR gs:[eax+0x79]
  43c70b:	inc    edx
  43c70c:	mov    bh,0xe
  43c70e:	shr    BYTE PTR ds:0x2da80e87,cl
  43c714:	xchg   ecx,eax
  43c715:	push   cs
  43c716:	scas   al,BYTE PTR es:[edi]
  43c717:	sub    eax,0x2cf00e5f
  43c71c:	push   es
  43c71d:	push   cs
  43c71e:	pop    esi
  43c71f:	cmp    bl,BYTE PTR [eax+0x753aa90b]
  43c725:	or     esi,edx
  43c727:	cmp    DWORD PTR [esi],edi
  43c729:	or     ebp,DWORD PTR [edi]
  43c72b:	cmp    al,bl
  43c72d:	or     al,0x65
  43c72f:	cmp    ebp,DWORD PTR [ecx+0xb]
  43c732:	sbb    edi,DWORD PTR [ebx]
  43c734:	xchg   DWORD PTR [ebx],ecx
  43c736:	(bad)  
  43c737:	cmp    bh,al
  43c739:	or     DWORD PTR [ecx+0x550a0638],eax
  43c73f:	cmp    BYTE PTR [ebp-0x37c84ef6],bl
  43c745:	or     cl,ch
  43c747:	aaa    
  43c748:	das    
  43c749:	or     DWORD PTR [edx],eax
  43c74b:	cmp    DWORD PTR [ebp-0xdc97ff7],esi
  43c751:	pop    es
  43c752:	cdq    
  43c753:	ss retf 
  43c755:	pop    es
  43c756:	inc    edx
  43c757:	ss adc al,0x8
  43c75a:	add    dh,al
  43c75c:	xor    eax,0x37720886
  43c761:	push   ds
  43c762:	pop    es
  43c763:	cld    
  43c764:	ss dec eax
  43c766:	pop    es
  43c767:	mov    edi,0xec05cf36
  43c76c:	xor    al,0x98
  43c76e:	push   es
  43c76f:	push   edx
  43c770:	xor    eax,0x3560065a
  43c775:	pop    edx
  43c776:	push   es
  43c777:	outs   dx,DWORD PTR ds:[esi]
  43c778:	xor    eax,0x337504f2
  43c77d:	in     al,dx
  43c77e:	add    al,0x78
  43c780:	xor    esi,edx
  43c782:	add    al,0xb4
  43c784:	xor    ecx,DWORD PTR [edx]
  43c786:	mov    esp,0x6a2ef682
  43c78b:	mov    edi,DWORD PTR [ebx-0x277c7cd2]
  43c791:	cs inc ebp
  43c793:	mov    esp,DWORD PTR [esi-0x6d7ca8d2]
  43c799:	adc    DWORD PTR cs:[ebx-0x3a16f5be],ecx
  43c7a0:	jae    0x43c790
  43c7a2:	mov    al,BYTE PTR gs:[edx+0xa]
  43c7a6:	mov    bh,0x75
  43c7a8:	mov    ebp,0x7e9a3a39
  43c7ad:	cmp    DWORD PTR [ebp+edx*4-0x6a3cc672],esi
  43c7b4:	cmp    cx,bx
  43c7b7:	xchg   ebp,eax
  43c7b8:	jo     0x43c7f3
  43c7ba:	iret   
  43c7bb:	jne    0x43c810
  43c7bd:	cmp    DWORD PTR [ebx],edx
  43c7bf:	add    BYTE PTR [ebp+0x25],dh
  43c7c2:	cmp    DWORD PTR ds:0x27389a75,ebx
  43c7c8:	je     0x43c7ad
  43c7ca:	cmp    edx,DWORD PTR [edi-0x69]
  43c7cd:	cdq    
  43c7ce:	cmp    edx,DWORD PTR [edi+edx*4-0x68eec4cf]
  43c7d5:	stc    
  43c7d6:	cmp    ah,BYTE PTR [edi-0x6a]
  43c7d9:	jmp    0x43c80f
  43c7db:	mov    ecx,0x88349190
  43c7e0:	mov    BYTE PTR [eax+edi*1],ch
  43c7e3:	adc    DWORD PTR [eax+0x7bf137e3],eax
  43c7e9:	clc    
  43c7ea:	aaa    
  43c7eb:	pop    ecx
  43c7ec:	xchg   ebx,eax
  43c7ed:	shl    DWORD PTR [edi],1
  43c7ef:	xchg   BYTE PTR [ebx-0x7c6dc862],cl
  43c7f5:	mov    ds:0x847b2937,eax
  43c7fa:	aaa    
  43c7fb:	push   ecx
  43c7fc:	xchg   ebx,eax
  43c7fd:	je     0x43c836
  43c7ff:	add    BYTE PTR [esi+0x46],dl
  43c802:	add    DWORD PTR [edi],esi
  43c804:	jle    0x43c84b
  43c806:	and    dh,BYTE PTR [edi]
  43c808:	dec    edi
  43c809:	inc    esi
  43c80a:	jnp    0x43c843
  43c80c:	fild   DWORD PTR [esi-0x38]
  43c80f:	aaa    
  43c810:	jp     0x43c858
  43c812:	das    
  43c813:	cmp    BYTE PTR [ebp+0x2238f447],ch
  43c819:	dec    eax
  43c81a:	lea    edi,[edx]
  43c81c:	xchg   DWORD PTR [ecx+0x5a],ecx
  43c81f:	cmp    al,0x6c
  43c821:	cmp    ebx,DWORD PTR [edi+0x3f]
  43c824:	add    BYTE PTR [edi],bl
  43c826:	das    
  43c827:	out    dx,eax
  43c828:	inc    ebx
  43c82a:	aas    
  43c82b:	or     al,BYTE PTR [eax]
  43c82d:	sub    BYTE PTR [edi+0x7b],cl
  43c830:	xor    BYTE PTR [edx],cl
  43c832:	outs   dx,BYTE PTR ds:[esi]
  43c833:	clc    
  43c834:	xor    dh,ch
  43c836:	ins    DWORD PTR es:[edi],dx
  43c837:	push   ebx
  43c838:	xor    DWORD PTR [ebp+0x6d],ecx
  43c83b:	xchg   DWORD PTR [ecx],esi
  43c83d:	or     ch,BYTE PTR [ebp-0x3f]
  43c840:	xor    DWORD PTR [eax],ebx
  43c842:	ins    DWORD PTR es:[edi],dx
  43c843:	and    dh,BYTE PTR [edx]
  43c845:	fisubr DWORD PTR [esp+ebp*1+0x32]
  43c849:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c84a:	ins    BYTE PTR es:[edi],dx
  43c84b:	pop    eax
  43c84c:	xor    bh,BYTE PTR [eax+0x6c]
  43c84f:	ins    BYTE PTR es:[edi],dx
  43c850:	xor    bl,BYTE PTR [edi+0x6c]
  43c853:	(bad)  [edx]
  43c855:	push   ss
  43c856:	ins    BYTE PTR es:[edi],dx
  43c857:	fidiv  WORD PTR [edx]
  43c859:	adc    al,0x6c
  43c85b:	pop    es
  43c85c:	xor    eax,esp
  43c85e:	imul   ecx,DWORD PTR [edx+0x33],0xffffff9b
  43c862:	imul   ecx,DWORD PTR [edi-0x794adcd],0x33
  43c869:	fs jp  0x43c8e1
  43c86c:	xor    al,0xd9
  43c86e:	push   0xffffffb3
  43c870:	xor    al,0xbd
  43c872:	push   0xffffffeb
  43c874:	xor    al,0x40
  43c876:	imul   edi,DWORD PTR [ebx+0x35],0xffffff86
  43c87a:	fdivrp st(0),st
  43c87c:	mov    DWORD PTR [ebx-0x6c5f0f46],ebx
  43c882:	cli    
  43c883:	lock icebp 
  43c885:	fwait
  43c886:	mov    eax,?
  43c888:	pusha  
  43c889:	add    BYTE PTR [eax+0x78d1f3de],dl
  43c88f:	inc    eax
  43c890:	hlt    
  43c891:	cli    
  43c892:	jo     0x43c912
  43c894:	repz gs jns 0x43c881
  43c898:	repnz shl BYTE PTR [ecx+0x4a],cl
  43c89c:	repz cmp ebx,DWORD PTR [edi-0x33]
  43c8a0:	in     eax,dx
  43c8a1:	jl     0x43c902
  43c8a3:	(bad)  
  43c8a4:	in     al,dx
  43c8a5:	mov    bh,0x4f
  43c8a7:	push   ds
  43c8a8:	in     eax,dx
  43c8a9:	fimul  DWORD PTR [edi-0x52]
  43c8ac:	in     al,dx
  43c8ad:	mov    sp,0xeffb
  43c8b1:	stos   DWORD PTR es:[edi],eax
  43c8b2:	mov    esp,0xacceecd0
  43c8b7:	jnp    0x43c8a5
  43c8b9:	push   es
  43c8ba:	lods   eax,DWORD PTR ds:[esi]
  43c8bb:	or     eax,0xad9dabef
  43c8c0:	out    dx,eax
  43c8c1:	or     ebx,DWORD PTR [edx-0x6d54f5cf]
  43c8c7:	mov    WORD PTR [ecx],cs
  43c8c9:	xor    DWORD PTR [ebx-0x7f88f644],ecx
  43c8cf:	sbb    DWORD PTR [ecx],ecx
  43c8d1:	into   
  43c8d2:	jns    0x43c92f
  43c8d4:	sub    bh,bh
  43c8d6:	mov    cl,0x87
  43c8d8:	or     al,BYTE PTR [eax]
  43c8da:	xchg   BYTE PTR [esi+0x59568bfa],al
  43c8e0:	cmc    
  43c8e1:	jp     0x43c93a
  43c8e3:	out    0xf5,al
  43c8e5:	adc    al,0x54
  43c8e7:	scas   al,BYTE PTR es:[edi]
  43c8e8:	neg    DWORD PTR [eax+0x24f6a555]
  43c8ee:	add    BYTE PTR [ebx-0x4e870f6f],bh
  43c8f4:	inc    edx
  43c8f5:	repz sti 
  43c8f7:	cmp    DWORD PTR [ecx+eiz*8],ebp
  43c8fa:	xor    ebp,DWORD PTR [ecx+0x71]
  43c8fd:	cld    
  43c8fe:	add    eax,DWORD PTR [esi-0x740b13be]
  43c904:	xor    edi,eax
  43c906:	cmc    
  43c907:	ja     0x43c93d
  43c909:	mov    edx,0x4135b9f6
  43c90e:	clc    
  43c90f:	es aaa 
  43c911:	xchg   ecx,eax
  43c912:	sti    
  43c913:	(bad)  
  43c914:	sub    dh,BYTE PTR [ebp-0x5]
  43c917:	mov    ch,BYTE PTR [esi]
  43c919:	inc    edi
  43c91a:	add    al,BYTE PTR [esi+0x2083e142]
  43c920:	jno    0x43c8ea
  43c922:	add    al,0x86
  43c924:	inc    edx
  43c925:	loop   0x43c91a
  43c927:	out    dx,al
  43c928:	xor    DWORD PTR [edx],esp
  43c92a:	repz or DWORD PTR [edx],esi
  43c92d:	mov    dh,0xf4
  43c92f:	jg     0x43c964
  43c931:	daa    
  43c932:	hlt    
  43c933:	xor    DWORD PTR [eax+edi*1],0xfffffff6
  43c937:	add    DWORD PTR [ecx+ecx*1],esi
  43c93a:	cmc    
  43c93b:	pop    ds
  43c93c:	xor    eax,0x362df86c
  43c941:	mov    ecx,0x3437a8f8
  43c946:	test   DWORD PTR [edx],0x78f78037
  43c94c:	sub    al,0xc
  43c94e:	std    
  43c94f:	outs   dx,BYTE PTR ds:[esi]
  43c950:	sub    eax,0x7600fcf4
  43c955:	sub    eax,0x2d6efcec
  43c95a:	and    al,0xfd
  43c95c:	inc    esi
  43c95d:	sub    eax,0x2d4efd2c
  43c962:	xor    al,0xfd
  43c964:	ss sub eax,0x2d2efd2c
  43c96a:	add    al,0xfd
  43c96c:	es sub eax,0xdb83020a
  43c972:	xor    bh,dl
  43c974:	jp     0x43c969
  43c976:	xor    ah,dl
  43c978:	jb     0x43c965
  43c97a:	xor    ch,BYTE PTR [edx+0x6b]
  43c97d:	ret    
  43c97e:	xor    ah,BYTE PTR [edx+0x63]
  43c981:	mov    ebx,0xd35b7a32
  43c986:	xor    ah,BYTE PTR [edx+0x53]
  43c989:	retf   
  43c98a:	xor    cl,BYTE PTR [edx-0x7dcd5cb5]
  43c990:	inc    ebx
  43c991:	fwait
  43c992:	xor    bh,BYTE PTR [edx+0x3b]
  43c995:	mov    bl,0x32
  43c997:	bound  esi,QWORD PTR [ebx]
  43c999:	stos   DWORD PTR es:[edi],eax
  43c99a:	xor    ch,BYTE PTR [edx]
  43c99c:	sub    eax,DWORD PTR [ebx+0x7b232232]
  43c9a2:	xor    bh,BYTE PTR [edx]
  43c9a4:	sbb    edx,DWORD PTR [ebx-0x74ecddce]
  43c9aa:	xor    cl,BYTE PTR [edx]
  43c9ac:	or     esp,DWORD PTR [ebx+0x32]
  43c9af:	add    al,BYTE PTR [ebx]
  43c9b1:	pop    ebx
  43c9b2:	xor    bh,dl
  43c9b4:	cli    
  43c9b5:	jb     0x43c9e9
  43c9b7:	loop   0x43c9b9
  43c9b9:	repnz push 0x32
  43c9bc:	jmp    0x3ae1:0xe22e42e9
  43c9c3:	cs cli 
  43c9c5:	fst    DWORD PTR [edx+0x2e]
  43c9c8:	loop   0x43c99b
  43c9ca:	dec    edx
  43c9cb:	or     al,BYTE PTR cs:[esi-0x79fdd1df]
  43c9d2:	sbb    DWORD PTR [esi],ebp
  43c9d4:	cli    
  43c9d5:	mov    ecx,0xb1e22e32
  43c9da:	sub    ch,BYTE PTR [esi]
  43c9dc:	sub    al,BYTE PTR [esi-0x79ddd1ff]
  43c9e2:	stc    
  43c9e3:	sub    eax,0x2d7a99a2
  43c9e8:	add    ah,ch
  43c9ea:	outs   dx,DWORD PTR ds:[esi]
  43c9eb:	fnstcw WORD PTR [esp+eiz*8]
  43c9ee:	outs   dx,DWORD PTR ds:[esi]
  43c9ef:	sar    DWORD PTR [esp+ecx*1],1
  43c9f2:	outs   dx,DWORD PTR ds:[esi]
  43c9f3:	jmp    0xe1b2ce34
  43c9f8:	cmp    al,0xcc
  43c9fa:	outs   dx,DWORD PTR ds:[esi]
  43c9fb:	stc    
  43c9fc:	cmp    al,0xe4
  43c9fe:	outs   dx,DWORD PTR ds:[esi]
  43c9ff:	icebp  
  43ca00:	cmp    al,0x6c
  43ca02:	jo     0x43ca0d
  43ca04:	cmp    eax,0x3d017064
  43ca09:	sub    al,0x70
  43ca0b:	sbb    DWORD PTR ds:0x3d117064,edi
  43ca11:	mov    WORD PTR [edi+0x29],gs
  43ca14:	cmp    eax,0x3d216f84
  43ca19:	dec    esp
  43ca1a:	jo     0x43ca55
  43ca1c:	cmp    eax,0x31702400
  43ca21:	cmp    eax,0x3d496fec
  43ca26:	in     al,0x6f
  43ca28:	inc    ecx
  43ca29:	cmp    eax,0x3d596fec
  43ca2e:	in     al,0x6f
  43ca30:	push   ecx
  43ca31:	cmp    eax,0x3d69700c
  43ca36:	add    al,0x70
  43ca38:	popa   
  43ca39:	cmp    eax,0x3d79414c
  43ca3e:	fs inc ecx
  43ca40:	jno    0x43ca7f
  43ca42:	ins    BYTE PTR es:[edi],dx
  43ca43:	inc    ecx
  43ca44:	mov    DWORD PTR ds:0x3ff66cdb,edi
  43ca4a:	(bad)  
  43ca4c:	out    dx,eax
  43ca4d:	dec    DWORD PTR [edi-0x41fff5ba]
  43ca53:	jbe    0x43c9ea
  43ca55:	xor    al,0x32
  43ca57:	push   0xffffffed
  43ca59:	xor    al,0x8c
  43ca5b:	imul   ecx,DWORD PTR [edi-0x1c9722cb],0xf7938636
  43ca65:	fist   DWORD PTR [ecx+0x5b]
  43ca68:	repnz sbb al,0x4e
  43ca6b:	xchg   edi,eax
  43ca6c:	repnz dec esp
  43ca6e:	dec    esi
  43ca6f:	(bad)  
  43ca71:	mov    edi,DWORD PTR [esi-0x43ff12ff]
  43ca77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ca78:	repz loope 0x43ca27
  43ca7b:	cmp    al,0xf3
  43ca7d:	lods   eax,DWORD PTR ss:[esi]
  43ca7f:	xchg   edx,eax
  43ca80:	rep lods al,BYTE PTR ds:[esi]
  43ca82:	add    BYTE PTR [ebp-0x65181161],bl
  43ca88:	mov    edx,0x3c93f508
  43ca8d:	lock cmp ecx,DWORD PTR [eax-0x7f91132b]
  43ca94:	fsub   st(7),st
  43ca96:	lea    edi,[eax-0x15]
  43ca99:	out    dx,eax
  43ca9a:	mov    al,0x70
  43ca9c:	xor    dh,al
  43ca9e:	jmp    0x7061:0xbef5968
  43caa5:	out    dx,eax
  43caa6:	aaa    
  43caa7:	pop    ecx
  43caa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43caa9:	out    dx,eax
  43caaa:	pop    ecx
  43caab:	push   ecx
  43caac:	or     ch,bh
  43caae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43caaf:	dec    ecx
  43cab0:	dec    eax
  43cab1:	out    dx,eax
  43cab2:	loope  0x43ca75
  43cab4:	inc    edi
  43cab5:	out    dx,eax
  43cab6:	repnz mov ecx,0xf1ffef5f
  43cabc:	pop    ebx
  43cabd:	push   0xfffffffe
  43cabf:	jmp    0x8643d58f
  43cac4:	push   edx
  43cac5:	mul    BYTE PTR [ebp-0x6a]
  43cac8:	psubq  mm6,QWORD PTR [edx+0x7fab096]
  43cacf:	xchg   edi,eax
  43cad0:	mov    dh,ch
  43cad2:	and    esi,DWORD PTR [edi+0x42]
  43cad5:	cmc    
  43cad6:	cs ja  0x43cb10
  43cad9:	cmc    
  43cada:	scas   al,BYTE PTR es:[edi]
  43cadb:	ja     0x43cb1f
  43cadd:	addr16 hlt 
  43cadf:	into   
  43cae0:	xor    edx,DWORD PTR [esp+esi*8-0xe2ccf9a]
  43cae7:	add    BYTE PTR [ecx],dh
  43cae9:	xor    BYTE PTR [esi],al
  43caeb:	repnz fidiv WORD PTR [eax]
  43caee:	xchg   ecx,eax
  43caef:	icebp  
  43caf0:	stos   DWORD PTR es:[edi],eax
  43caf1:	xor    bl,al
  43caf3:	repnz retf 
  43caf5:	xor    DWORD PTR [ecx],edx
  43caf7:	repz out 0x31,al
  43cafa:	mov    ds:0xe33164f2,al
  43caff:	div    DWORD PTR [eax-0x67086eca]
  43cb05:	aaa    
  43cb06:	sar    al,0xa1
  43cb09:	xor    al,0x15
  43cb0b:	idiv   BYTE PTR [esp+esi*1+0x33fef5be]
  43cb12:	dec    edi
  43cb13:	cmc    
  43cb14:	in     eax,0x33
  43cb16:	jae    0x43cb0d
  43cb18:	dec    ecx
  43cb19:	xor    eax,0x2a93fbd7
  43cb1e:	mov    ah,0xfb
  43cb20:	retf   
  43cb21:	sub    bh,BYTE PTR [esi-0x5]
  43cb24:	das    
  43cb25:	sub    dh,BYTE PTR [esp+edi*8-0x672d465]
  43cb2c:	mov    eax,ds:0x46f96728
  43cb31:	sub    BYTE PTR [ecx],dl
  43cb33:	stc    
  43cb34:	repnz daa 
  43cb36:	(bad)  
  43cb38:	sub    DWORD PTR [ecx],0xffffffc4
  43cb3b:	cli    
  43cb3c:	and    DWORD PTR [ecx],ebp
  43cb3e:	test   eax,0xa5292ff9
  43cb43:	stc    
  43cb44:	int    0x28
  43cb46:	lods   eax,DWORD PTR ds:[esi]
  43cb47:	stc    
  43cb48:	mov    ebp,0xf9c528
  43cb4d:	fild   QWORD PTR [eax]
  43cb4f:	leave  
  43cb50:	stc    
  43cb51:	xchg   BYTE PTR [esi],ch
  43cb53:	sar    edi,1
  43cb55:	mov    ds:0x86020a2e,eax
  43cb5a:	sub    DWORD PTR [esi],ebp
  43cb5c:	daa    
  43cb5d:	xchg   BYTE PTR [edx],cl
  43cb5f:	cs inc esi
  43cb61:	xchg   cl,ah
  43cb63:	sub    eax,0x2df1860c
  43cb68:	adc    al,0x86
  43cb6a:	mov    edx,0x6c91962d
  43cb6f:	out    dx,al
  43cb70:	jmp    0x5232378a
  43cb75:	mov    al,BYTE PTR [edx+0xa]
  43cb78:	jecxz  0x43cbef
  43cb7a:	push   ebx
  43cb7b:	cmp    cl,BYTE PTR [eax+0x7a]
  43cb7e:	stos   BYTE PTR es:[edi],al
  43cb7f:	cmp    DWORD PTR [edx],esi
  43cb81:	jb     0x43cb0c
  43cb83:	cmp    DWORD PTR [ebp+0x5a],eax
  43cb86:	pop    ebp
  43cb87:	cmp    edx,ebp
  43cb89:	push   esp
  43cb8a:	push   eax
  43cb8b:	cmp    DWORD PTR [edx*2+0x54ab3918],eax
  43cb92:	in     eax,dx
  43cb93:	cmp    BYTE PTR [esi+0x35],ah
  43cb96:	mov    dh,0x38
  43cb98:	sub    DWORD PTR ds:0x347f3c47,esi
  43cb9e:	mov    DWORD PTR [ebx],edi
  43cba0:	pushf  
  43cba1:	ss mov ebx,0x3b1e1635
  43cba7:	xor    eax,0x382610c6
  43cbac:	lea    ebx,[ebx]
  43cbae:	push   ecx
  43cbaf:	aaa    
  43cbb0:	sahf   
  43cbb1:	add    BYTE PTR [edx],dl
  43cbb3:	or     BYTE PTR [edi],dh
  43cbb5:	jge    0x43cbb1
  43cbb7:	sub    al,0x32
  43cbb9:	mov    eax,ds:0x663212fd
  43cbbe:	repnz test eax,0xddec0131
  43cbc4:	xor    esp,DWORD PTR [ecx-0x24]
  43cbc7:	in     al,dx
  43cbc8:	xor    ebp,DWORD PTR [esi-0x21]
  43cbcb:	iret   
  43cbcc:	xor    ecx,DWORD PTR [ebx+0x339ccf]
  43cbd2:	adc    al,0x6a
  43cbd4:	fdivr  DWORD PTR [edx]
  43cbd6:	int3   
  43cbd7:	imul   edi,edx,0x136aa23a
  43cbdd:	cmp    esp,DWORD PTR [edi+0x69]
  43cbe0:	js     0x43cc1d
  43cbe2:	arpl   WORD PTR [ecx-0x76],bp
  43cbe5:	cmp    edx,DWORD PTR [edx+ebp*2]
  43cbe8:	lea    edi,[ebx]
  43cbea:	cmp    ebp,DWORD PTR [edx-0x3d]
  43cbed:	cmp    esp,edx
  43cbef:	push   0xffffffe9
  43cbf1:	cmp    ebx,DWORD PTR [ecx-0x48c3d095]
  43cbf7:	inc    edx
  43cbf8:	data16 cmp al,0xb1
  43cbfb:	imul   eax,ebx,0x3c
  43cbfe:	ins    BYTE PTR es:[di],dx
  43cc00:	sbb    bh,BYTE PTR ds:0x3da76ce9
  43cc06:	xor    BYTE PTR [esi+0x5f],ch
  43cc09:	aas    
  43cc0a:	cmp    BYTE PTR [esi-0x6e],ch
  43cc0d:	aas    
  43cc0e:	pushf  
  43cc0f:	outs   dx,BYTE PTR ds:[esi]
  43cc10:	(bad)  
  43cc11:	aas    
  43cc12:	imul   ebp,DWORD PTR [esi-0x33],0x6ed6003f
  43cc19:	out    dx,al
  43cc1a:	jmp    FWORD PTR [edi]
  43cc1c:	jg     0x43cc0d
  43cc1e:	(bad)  
  43cc1f:	sti    
  43cc20:	or     al,BYTE PTR ds:[eax]
  43cc23:	mov    dh,0x6f
  43cc25:	out    0x31,eax
  43cc27:	jg     0x43cc99
  43cc29:	hlt    
  43cc2a:	xor    DWORD PTR [edx+esi*2],ebx
  43cc2d:	sub    BYTE PTR [ebx],dh
  43cc2f:	mov    ebp,0x7d34a173
  43cc34:	jae    0x43cc1a
  43cc36:	xor    al,0xe8
  43cc38:	jae    0x43cc58
  43cc3a:	xor    eax,0x35977470
  43cc3f:	cmp    al,0x74
  43cc41:	xlat   BYTE PTR ds:[ebx]
  43cc42:	xor    eax,0x368670b7
  43cc47:	xor    DWORD PTR [eax+0xd],esi
  43cc4a:	aaa    
  43cc4b:	xchg   BYTE PTR [esi-0x5],al
  43cc4e:	xor    eax,0x4efb2399
  43cc53:	xchg   ecx,eax
  43cc54:	(bad)  
  43cc55:	cli    
  43cc56:	mov    edi,0xfdfab679
  43cc5b:	jno    0x43cbee
  43cc5d:	repnz sbb BYTE PTR [edi+0x4],ch
  43cc61:	in     eax,dx
  43cc62:	mov    bh,0x6f
  43cc64:	clc    
  43cc65:	out    dx,eax
  43cc66:	loopne 0x43ccc4
  43cc68:	sti    
  43cc69:	out    dx,al
  43cc6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cc6b:	pop    edx
  43cc6c:	test   al,0xf1
  43cc6e:	jmp    0x43ccc2
  43cc70:	pop    eax
  43cc71:	icebp  
  43cc72:	mov    eax,ds:0xc5f0974b
  43cc77:	ret    
  43cc78:	ins    BYTE PTR es:[edi],dx
  43cc79:	lock lods eax,DWORD PTR ds:[esi]
  43cc7b:	add    BYTE PTR [eax-0x4efc0c13],bh
  43cc81:	jbe    0x43cc76
  43cc83:	and    DWORD PTR [ecx-0x5ebe0cb5],ebp
  43cc89:	xor    bl,0x68
  43cc8c:	cdq    
  43cc8d:	xchg   bl,dh
  43cc8f:	fst    DWORD PTR [ecx+0x49feda5b]
  43cc95:	test   BYTE PTR [edx],cl
  43cc97:	add    BYTE PTR [esi+0x7623fa8c],al
  43cc9d:	addr16 cli 
  43cc9f:	xor    eax,0x65fad176
  43cca4:	jbe    0x43cc6e
  43cca6:	cli    
  43cca7:	lahf   
  43cca8:	push   esi
  43cca9:	in     eax,0xf5
  43ccab:	dec    edi
  43ccac:	push   edi
  43ccad:	int    0xf5
  43ccaf:	scas   eax,DWORD PTR es:[edi]
  43ccb0:	push   edi
  43ccb1:	sbb    dh,ch
  43ccb3:	dec    eax
  43ccb4:	push   edx
  43ccb5:	fdivr  st,st(1)
  43ccb7:	int3   
  43ccb8:	mov    edx,0xb383f975
  43ccbd:	sbb    cl,bh
  43ccbf:	dec    ecx
  43ccc0:	mov    eax,0xb0aff8eb
  43ccc5:	inc    edx
  43ccc6:	shl    ecx,0x8c
  43ccc9:	xor    DWORD PTR [ebx],edi
  43cccb:	repz push ecx
  43cccd:	xor    ecx,esp
  43cccf:	sti    
  43ccd0:	sub    DWORD PTR [edx],0x2ab0fc38
  43ccd6:	out    0xfc,eax
  43ccd8:	sub    BYTE PTR [ebx],0x48
  43ccdb:	std    
  43ccdc:	cmp    ebp,DWORD PTR [ebx]
  43ccde:	jbe    0x43ccdc
  43cce0:	add    bl,bl
  43cce2:	sub    ecx,ecx
  43cce4:	cld    
  43cce5:	xchg   edx,eax
  43cce6:	sub    al,0x2e
  43cce8:	(bad)  
  43cce9:	(bad)  
  43ccea:	sub    al,0x65
  43ccec:	(bad)  
  43cced:	xor    al,0x26
  43ccef:	loope  0x43cce9
  43ccf1:	data16 daa 
  43ccf3:	je     0x43cced
  43ccf5:	shl    BYTE PTR [edi],1
  43ccf7:	clc    
  43ccf8:	stc    
  43ccf9:	mov    cl,0x28
  43ccfb:	add    eax,0x7a2855fa
  43cd00:	stc    
  43cd01:	mov    dh,0x29
  43cd03:	pop    eax
  43cd04:	cli    
  43cd05:	sub    ebp,DWORD PTR [ecx]
  43cd07:	xor    bh,dl
  43cd09:	popa   
  43cd0a:	imul   esp,eax,0x206958a3
  43cd10:	add    eax,DWORD PTR [esi+0x26f41642]
  43cd16:	xor    al,BYTE PTR [ebx+esi*8-0x3e]
  43cd1a:	xor    ebp,DWORD PTR [ebp+esi*8-0xae3cb5e]
  43cd21:	call   0xa335:0x67f70135
  43cd28:	idiv   BYTE PTR [edi+0x35f68935]
  43cd2e:	xor    eax,0x2e7befe9
  43cd33:	retf   
  43cd34:	out    dx,eax
  43cd35:	push   ebx
  43cd36:	mov    cs:0x612e6bef,eax
  43cd3c:	out    dx,eax
  43cd3d:	add    BYTE PTR [esi],ch
  43cd3f:	or     cl,BYTE PTR [edi-0x1f]
  43cd42:	lods   eax,DWORD PTR ds:[esi]
  43cd43:	xor    eax,0x5dd9001c
  43cd48:	xor    eax,0x3570d6db
  43cd4d:	jmp    0xf679103a
  43cd52:	loopne 0x43cd75
  43cd54:	xor    eax,0x3527d913
  43cd59:	dec    ebp
  43cd5a:	mov    cl,0x3f
  43cd5c:	cmp    BYTE PTR [edx],dl
  43cd5e:	mov    ah,0x70
  43cd60:	aaa    
  43cd61:	xor    al,0xb2
  43cd63:	lds    esi,FWORD PTR [ecx]
  43cd65:	les    ebp,FWORD PTR [edx-0x62cbcec3]
  43cd6b:	mov    esp,0xc69d7d30
  43cd70:	xor    BYTE PTR [ecx-0xecfa573],bh
  43cd76:	mov    ebp,DWORD PTR ds:0xe5802b34
  43cd7c:	xor    ebx,DWORD PTR [ecx+0x78]
  43cd7f:	mov    ds:0x9570ad33,al
  43cd84:	xor    esi,DWORD PTR [edx+0x68]
  43cd87:	inc    edi
  43cd88:	xor    esp,edx
  43cd8a:	bound  edx,QWORD PTR [ebx+0x565b3c32]
  43cd90:	xor    dl,BYTE PTR [esi+0x53]
  43cd93:	push   esp
  43cd94:	add    cl,BYTE PTR cs:[esi+0x29]
  43cd98:	cs cwde 
  43cd9a:	cmp    eax,esp
  43cd9c:	sub    eax,0x2dd231bf
  43cda1:	je     0x43cdd1
  43cda3:	(bad)  
  43cda4:	sub    eax,0x2d542e32
  43cda9:	or     eax,0x2c5f1900
  43cdae:	in     eax,0x1f
  43cdb0:	xor    DWORD PTR [eax],esi
  43cdb2:	mov    eax,ds:0x3d30070f
  43cdb7:	or     al,0xb4
  43cdb9:	das    
  43cdba:	add    BYTE PTR [ebx+ebp*2],ch
  43cdbd:	push   edi
  43cdbe:	aas    
  43cdbf:	jle    0x43ce2b
  43cdc1:	outs   dx,DWORD PTR ds:[esi]
  43cdc2:	aas    
  43cdc3:	dec    esi
  43cdc4:	imul   ebp,DWORD PTR [ecx-0x3a964bc1],0xf16ac43f
  43cdce:	aas    
  43cdcf:	out    dx,eax
  43cdd0:	mov    bl,0xef
  43cdd2:	call   DWORD PTR [ebx+0x43]
  43cdd5:	or     al,BYTE PTR [eax]
  43cdd7:	(bad)  
  43cdd8:	jae    0x43ce0e
  43cdda:	xor    BYTE PTR [ebp+0x3430656e],bl
  43cde0:	jae    0x43cd8c
  43cde2:	xor    BYTE PTR ds:0x31309e74,al
  43cde8:	jae    0x43cdad
  43cdea:	xor    bl,ch
  43cdec:	jae    0x43cdf1
  43cdee:	xor    DWORD PTR [eax-0x48cede8c],edx
  43cdf4:	je     0x43ce36
  43cdf6:	xor    DWORD PTR [edi+0x73],ebp
  43cdf9:	jo     0x43ce2c
  43cdfb:	jecxz  0x43ce71
  43cdfd:	mov    eax,0xd4742331
  43ce02:	xor    ebx,edi
  43ce04:	je     0x43ce0a
  43ce06:	xor    bh,BYTE PTR [edi]
  43ce08:	ins    DWORD PTR es:[edi],dx
  43ce09:	sub    al,0x32
  43ce0b:	pop    ds
  43ce0c:	ins    DWORD PTR es:[edi],dx
  43ce0d:	push   0x6dd40032
  43ce12:	xchg   edi,eax
  43ce13:	xor    cl,BYTE PTR [eax]
  43ce15:	ins    DWORD PTR es:[edi],dx
  43ce16:	fidiv  DWORD PTR [edx]
  43ce18:	mov    ebp,0x2532f66d
  43ce1d:	outs   dx,BYTE PTR ds:[esi]
  43ce1e:	xor    edi,DWORD PTR es:[ecx]
  43ce21:	outs   dx,BYTE PTR ds:[esi]
  43ce22:	dec    esi
  43ce23:	xor    ecx,DWORD PTR [ecx+0x6e]
  43ce26:	mov    dh,BYTE PTR [ebx]
  43ce28:	push   es
  43ce29:	outs   dx,BYTE PTR ds:[esi]
  43ce2a:	mov    ecx,0xdc6e5a33
  43ce2f:	xor    edi,DWORD PTR [edx+0x6e]
  43ce32:	or     dh,BYTE PTR [esi+eax*4]
  43ce35:	fimul  WORD PTR fs:0x1fde7252
  43ce3c:	mov    edx,0xb22dde78
  43ce41:	test   al,0xde
  43ce43:	je     0x43cdff
  43ce45:	fstp   st(6)
  43ce47:	(bad)  
  43ce48:	mov    dl,0x52
  43ce4a:	fist   WORD PTR ds:0x6bf9549b
  43ce50:	xchg   ebx,eax
  43ce51:	or     eax,0x4e98a5e0
  43ce56:	fild   QWORD PTR [ebp-0x6f]
  43ce59:	cs in  eax,dx
  43ce5b:	xchg   ecx,eax
  43ce5c:	jl     0x43cdf7
  43ce5e:	repnz out 0x7a,al
  43ce61:	inc    esp
  43ce62:	icebp  
  43ce63:	push   DWORD PTR [ecx-0x5601f5a8]
  43ce69:	push   esp
  43ce6a:	or     al,BYTE PTR [eax]
  43ce6c:	xchg   BYTE PTR [edx+edi*8-0x3c7abab],dl
  43ce73:	jnp    0x43ce75
  43ce75:	push   esp
  43ce76:	mov    bh,bl
  43ce78:	pop    eax
  43ce79:	push   ebp
  43ce7a:	dec    ebp
  43ce7b:	cli    
  43ce7c:	test   BYTE PTR [edx-0x4d4305f1],bh
  43ce82:	and    cl,bh
  43ce84:	sbb    bh,BYTE PTR [eax-0x4f421ffe]
  43ce8a:	(bad)  
  43ce8b:	in     eax,dx
  43ce8c:	(bad)  
  43ce8d:	sahf   
  43ce8e:	std    
  43ce8f:	in     eax,dx
  43ce90:	fcomp  QWORD PTR [esi-0x72b712eb]
  43ce96:	jge    0x43ce8e
  43ce98:	pop    eax
  43ce99:	mov    esi,DWORD PTR [esi-0xf]
  43ce9c:	mov    eax,DWORD PTR [ebx+0x39fff6e6]
  43cea2:	pop    esp
  43cea3:	sbb    bh,dh
  43cea5:	xor    DWORD PTR [edx+ecx*1-0xa187a00],esi
  43ceac:	call   0xf5b91107
  43ceb1:	div    DWORD PTR [ebx]
  43ceb3:	mov    ebp,?
  43ceb5:	lock xor ecx,DWORD PTR [esi*8-0xc99cbe8]
  43cebd:	repnz xor DWORD PTR [edx+0x492e7cef],edi
  43cec4:	lock daa 
  43cec6:	xor    BYTE PTR [eax],bh
  43cec8:	icebp  
  43cec9:	push   0xfee692c
  43cece:	sub    eax,0x2d28ed8a
  43ced3:	mov    al,ds:0xde2cbaed
  43ced8:	out    dx,al
  43ced9:	add    BYTE PTR [edx+0x2d],ch
  43cedc:	xor    al,0xef
  43cede:	es sub eax,0x2c0ffcf0
  43cee4:	out    0xf9,al
  43cee6:	xchg   ebp,eax
  43cee7:	sub    BYTE PTR [edx+edi*8],cl
  43ceea:	xchg   ecx,eax
  43ceeb:	sub    DWORD PTR [ebx-0x5],ecx
  43ceee:	push   ds
  43ceef:	sub    DWORD PTR [ebx-0x6],eax
  43cef2:	and    DWORD PTR [esi],0x2c
  43cef5:	stc    
  43cef6:	adc    BYTE PTR [edi],ah
  43cef8:	pop    esp
  43cef9:	clc    
  43cefa:	retf   
  43cefb:	daa    
  43cefc:	mov    ah,0xf8
  43cefe:	pop    eax
  43ceff:	daa    
  43cf00:	cmp    al,0x6d
  43cf03:	daa    
  43cf04:	loop   0x43cefb
  43cf06:	xchg   BYTE PTR [esp+edi*2],ah
  43cf09:	cmc    
  43cf0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cf0b:	and    eax,0x25c9f722
  43cf10:	fcomi  st,st(6)
  43cf12:	shl    BYTE PTR ds:0x2530f681,1
  43cf18:	pop    esp
  43cf19:	test   BYTE PTR [ecx+0x65],0xe0
  43cf1d:	jecxz  0x43cf62
  43cf1f:	gs pop eax
  43cf21:	add    eax,DWORD PTR [esi+0x78f40442]
  43cf27:	xor    cl,BYTE PTR [edx]
  43cf29:	stos   BYTE PTR es:[edi],al
  43cf2a:	xor    eax,0x150e39f8
  43cf2f:	cmp    DWORD PTR es:[ebp+0x4d38d912],ecx
  43cf36:	sbb    bh,BYTE PTR [ecx+0x38]
  43cf39:	out    0x17,eax
  43cf3b:	enter  0x7535,0x0
  43cf3f:	neg    BYTE PTR [edi+0x6eb9834]
  43cf45:	cmp    BYTE PTR [ebp+0x6637e3e3],cl
  43cf4b:	fstp   TBYTE PTR [edx+0x37]
  43cf4e:	adc    esi,ebx
  43cf50:	pusha  
  43cf51:	aaa    
  43cf52:	fucomp st(0)
  43cf54:	imul   esi,DWORD PTR [edi],0x36f8e303
  43cf5a:	dec    edx
  43cf5b:	fstp   TBYTE PTR [edi-0x594c8dca]
  43cf61:	ss pushf 
  43cf63:	stos   DWORD PTR es:[edi],eax
  43cf64:	jno    0x43cf9c
  43cf66:	repnz lods eax,DWORD PTR ds:[esi]
  43cf68:	xor    esi,DWORD PTR [edx]
  43cf6a:	clc    
  43cf6b:	lods   eax,DWORD PTR ds:[esi]
  43cf6c:	div    DWORD PTR [ecx]
  43cf6e:	dec    edx
  43cf6f:	mov    ds:0x9a7b31de,al
  43cf74:	pushf  
  43cf75:	xor    DWORD PTR [esi-0x6e],edx
  43cf78:	mov    WORD PTR [ecx],?
  43cf7a:	mov    bh,0x8a
  43cf7c:	dec    ebp
  43cf7d:	xor    esi,eax
  43cf7f:	jl     0x43cfab
  43cf81:	xor    DWORD PTR ds:0x1331097d,ebp
  43cf87:	ins    DWORD PTR es:[edi],dx
  43cf88:	in     eax,0x30
  43cf8a:	outs   dx,BYTE PTR ds:[esi]
  43cf8b:	ins    DWORD PTR es:[edi],dx
  43cf8c:	lds    esi,FWORD PTR [eax]
  43cf8e:	aaa    
  43cf8f:	pop    ebp
  43cf90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cf91:	xor    BYTE PTR [eax+0x5d],al
  43cf94:	mov    esi,DWORD PTR [eax]
  43cf96:	push   esi
  43cf97:	dec    ebp
  43cf98:	gs xor cl,dh
  43cf9b:	dec    edi
  43cf9c:	dec    edx
  43cf9d:	xor    al,0x17
  43cf9f:	cmp    al,0x24
  43cfa1:	xor    al,0x0
  43cfa3:	add    BYTE PTR [eax],bl
  43cfa5:	push   0x53
  43cfa7:	cmp    bh,cl
  43cfa9:	imul   ebp,DWORD PTR [ebp+0x3a],0x3a8e68d5
  43cfb0:	jg     0x43d01a
  43cfb2:	into   
  43cfb3:	cmp    bh,BYTE PTR [ebp+0x68]
  43cfb6:	or     DWORD PTR [ebx],edi
  43cfb8:	sbb    DWORD PTR [ebx+0x23],ebp
  43cfbb:	cmp    ebp,DWORD PTR [ebx+ebp*2]
  43cfbe:	cmp    eax,0x5d6b0c3b
  43cfc3:	cmp    ebp,DWORD PTR [edx+0x69]
  43cfc6:	xchg   ebp,eax
  43cfc7:	cmp    esi,DWORD PTR [eax+0xa3bed69]
  43cfcd:	ins    BYTE PTR es:[edi],dx
  43cfce:	arpl   WORD PTR [ebx+esi*2],di
  43cfd1:	imul   esp,DWORD PTR [esp+edi*1+0x3cd46c27],0xffffffbe
  43cfd9:	imul   ebp,ecx,0x3c
  43cfdc:	ret    0xfb6b
  43cfdf:	cmp    al,0xaa
  43cfe1:	ins    BYTE PTR es:[edi],dx
  43cfe2:	std    
  43cfe3:	cmp    al,0x8c
  43cfe5:	imul   esp,DWORD PTR [eax],0x3d
  43cfe8:	test   DWORD PTR [ebx-0x7b],ebp
  43cfeb:	cmp    eax,0x3df36ce6
  43cff0:	ret    
  43cff1:	ins    DWORD PTR es:[edi],dx
  43cff2:	dec    ecx
  43cff3:	ds inc esi
  43cff5:	ins    BYTE PTR es:[edi],dx
  43cff6:	jo     0x43d036
  43cff8:	adc    DWORD PTR [ebp-0x62],ebp
  43cffb:	fld    TBYTE PTR ds:[ebp-0x21]
  43cfff:	ds jo  0x43d070
  43d002:	das    
  43d003:	aas    
  43d004:	imul   DWORD PTR [esi-0x12]
  43d007:	inc    DWORD PTR [eax]
  43d009:	pop    edi
  43d00a:	outs   dx,DWORD PTR ds:[esi]
  43d00b:	in     al,dx
  43d00c:	push   DWORD PTR [ebx-0x5dfff5c1]
  43d012:	jo     0x43cfca
  43d014:	xor    DWORD PTR [edx+0x4c31f970],edx
  43d01a:	jno    0x43d03c
  43d01c:	xor    al,BYTE PTR [esi+0x7456fc50]
  43d022:	xchg   esp,eax
  43d023:	clc    
  43d024:	jb     0x43d09a
  43d026:	add    eax,0x6a750af9
  43d02b:	stc    
  43d02c:	inc    edx
  43d02d:	jne    0x43cfde
  43d02f:	stc    
  43d030:	mov    dl,BYTE PTR [ebp-0xd]
  43d033:	stc    
  43d034:	(bad)  
  43d035:	push   ebp
  43d036:	dec    esi
  43d037:	cli    
  43d038:	not    BYTE PTR [ebp+0x59]
  43d03b:	fimul  WORD PTR ds:0x38de7552
  43d041:	mov    edx,0xb3aadfbc
  43d046:	xor    al,ah
  43d048:	push   ss
  43d049:	mov    eax,0xb0a3dc74
  43d04e:	js     0x43d042
  43d050:	xor    ebx,DWORD PTR [esi-0x617e0d3e]
  43d056:	in     al,dx
  43d057:	fst    st(6)
  43d059:	mov    fs,WORD PTR [ecx-0x23]
  43d05c:	or     ecx,DWORD PTR [edi+0x7f4edd1f]
  43d062:	(bad)  
  43d063:	fsubr  QWORD PTR [edi+edi*2-0xe]
  43d067:	fmul   QWORD PTR [edi-0x1f238591]
  43d06d:	add    BYTE PTR [edi-0x55],ch
  43d070:	fadd   QWORD PTR [ebx]
  43d072:	pop    esp
  43d073:	xchg   esp,ebx
  43d075:	adc    BYTE PTR [eax+edi*2-0x24],bl
  43d079:	sub    eax,0x78e01a4c
  43d07e:	dec    esp
  43d07f:	lock fbld TBYTE PTR [edx]
  43d082:	mov    ebp,0xbd34df7a
  43d087:	xor    bh,bl
  43d089:	push   eax
  43d08a:	lods   eax,DWORD PTR ds:[esi]
  43d08b:	aas    
  43d08c:	fistp  WORD PTR [esi-0x53]
  43d08f:	push   ecx
  43d090:	fbld   TBYTE PTR [ebp+ebx*4+0x5b]
  43d094:	fbstp  TBYTE PTR [edx-0x63]
  43d097:	inc    edx
  43d098:	jmp    0x43d088
  43d09a:	into   
  43d09b:	sbb    eax,0x1e38ef68
  43d0a0:	mov    al,ds:0xb21ecdef
  43d0a5:	out    dx,eax
  43d0a6:	rcr    DWORD PTR [esi],1
  43d0a8:	inc    ebp
  43d0a9:	lock popa 
  43d0ab:	pop    ds
  43d0ac:	in     eax,dx
  43d0ad:	lock mov ds:0xeaf0b11f,al
  43d0b3:	pop    ds
  43d0b4:	sbb    cl,dh
  43d0b6:	int    0x20
  43d0b8:	(bad)  
  43d0b9:	icebp  
  43d0ba:	xor    esp,DWORD PTR [ecx]
  43d0bc:	fdivrp st(2),st
  43d0be:	repz and DWORD PTR [eax-0xd],eax
  43d0c2:	int3   
  43d0c3:	and    DWORD PTR ds:0xe121e2f3,eax
  43d0c9:	inc    ebx
  43d0ca:	lock popa 
  43d0cc:	in     al,dx
  43d0cd:	add    eax,DWORD PTR [esi+0xf39c42]
  43d0d3:	pop    es
  43d0d4:	adc    eax,DWORD PTR [edi]
  43d0d6:	hlt    
  43d0d7:	add    dl,BYTE PTR [eax+ebp*4]
  43d0da:	hlt    
  43d0db:	loopne 0x43d0f0
  43d0dd:	cmc    
  43d0de:	cmc    
  43d0df:	hlt    
  43d0e0:	adc    al,0x9b
  43d0e2:	cmc    
  43d0e3:	pop    esp
  43d0e4:	push   ss
  43d0e5:	xor    bh,0x91
  43d0e8:	pop    ss
  43d0e9:	lock clc 
  43d0eb:	jb     0x43d104
  43d0ed:	jmp    0x58f9:0xf31862f9
  43d0f4:	sbb    BYTE PTR [ecx],ah
  43d0f6:	cli    
  43d0f7:	inc    esi
  43d0f8:	sbb    BYTE PTR [edi],dh
  43d0fa:	cli    
  43d0fb:	xor    al,0x18
  43d0fd:	or     dl,bh
  43d0ff:	add    eax,0x29f96b19
  43d104:	sbb    BYTE PTR [ecx-0x7],dl
  43d107:	sbb    BYTE PTR ss:[ebp-0x7ae7a507],cl
  43d10e:	stc    
  43d10f:	pop    ebx
  43d110:	sbb    BYTE PTR [edx],cl
  43d112:	jo     0x43d173
  43d114:	pusha  
  43d115:	aaa    
  43d116:	rcr    DWORD PTR [esp+ebp*1+0x37],1
  43d11a:	stos   DWORD PTR es:[edi],eax
  43d11b:	dec    esp
  43d11c:	pop    es
  43d11d:	aaa    
  43d11e:	scas   al,BYTE PTR es:[edi]
  43d11f:	dec    esp
  43d120:	(bad)  
  43d121:	ss ret 
  43d123:	cmp    al,0xf1
  43d125:	sar    BYTE PTR ss:[edx+ebx*8],1
  43d129:	ss jns 0x43d158
  43d12c:	xchg   ebx,eax
  43d12d:	sub    DWORD PTR ss:[edi+eax*4],ebp
  43d131:	ss adc al,0x1c
  43d134:	jle    0x43d16c
  43d136:	inc    ebx
  43d137:	add    BYTE PTR [edi+ebp*2],bl
  43d13a:	and    ecx,DWORD PTR ss:[eax+eiz*2]
  43d13e:	ss repz sbb eax,0xedc9323d
  43d145:	and    dh,BYTE PTR [edx]
  43d147:	mov    esi,0x2d319bed
  43d14c:	fisttp QWORD PTR [ebx+0x48dd1531]
  43d152:	xor    esi,esp
  43d154:	repnz cmp BYTE PTR [ecx],dh
  43d157:	into   
  43d158:	jmp    0x33f9:0xe03a30a3
  43d15f:	jb     0x43d139
  43d161:	mov    eax,0x85b09533
  43d166:	xor    edi,DWORD PTR [eax-0x2bcc8358]
  43d16c:	mov    al,ds:0x9b113335
  43d171:	repz xor cl,BYTE PTR [eax-0x4d]
  43d175:	(bad)  
  43d176:	xor    dl,BYTE PTR [ebx+ebp*4-0x40]
  43d17a:	xor    dl,BYTE PTR [edi-0x5d]
  43d17d:	inc    edi
  43d17e:	cs stc 
  43d180:	cdq    
  43d181:	ds fdiv QWORD PTR cs:[ecx+0x1a]
  43d186:	cs pop ss
  43d188:	jbe    0x43d166
  43d18a:	sub    eax,0x9852e000
  43d18f:	cmp    al,0xe4
  43d191:	push   edx
  43d192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d193:	cmp    al,0xa2
  43d195:	push   edx
  43d196:	mov    esi,0xe6530d3c
  43d19b:	cmp    al,0x0
  43d19d:	mov    ecx,0x5e3cf452
  43d1a2:	jno    0x43d1a0
  43d1a4:	cmp    al,0x39
  43d1a6:	jno    0x43d1e3
  43d1a8:	cmp    eax,0x3d6a70f6
  43d1ad:	pop    ebx
  43d1ae:	jno    0x43d20d
  43d1b0:	cmp    eax,0x3d817146
  43d1b5:	popa   
  43d1b6:	outs   dx,DWORD PTR ds:[esi]
  43d1b7:	lock cmp eax,0x3e025221
  43d1bd:	adc    DWORD PTR [edx+0x13],edx
  43d1c0:	ds ss push edx
  43d1c3:	pop    ecx
  43d1c4:	ds in  al,dx
  43d1c6:	push   edx
  43d1c7:	out    dx,al
  43d1c8:	(bad)  
  43d1c9:	out    dx,eax
  43d1ca:	repz out dx,eax
  43d1cc:	call   DWORD PTR [ebx+0x46]
  43d1cf:	or     al,BYTE PTR [eax]
  43d1d1:	addr16 push ebx
  43d1d3:	mov    ch,0x31
  43d1d5:	rcl    BYTE PTR [ebp+0x27],0x32
  43d1d9:	pop    ss
  43d1da:	push   edi
  43d1db:	xor    BYTE PTR [ebx],dh
  43d1dd:	nop
  43d1de:	push   ebp
  43d1df:	xor    ecx,DWORD PTR gs:[edi+0x56]
  43d1e3:	test   eax,0x1a571e33
  43d1e8:	xor    al,0xb4
  43d1ea:	push   edi
  43d1eb:	cmp    esi,DWORD PTR [edx+ecx*2]
  43d1ee:	pop    edx
  43d1ef:	xchg   BYTE PTR [eax+ebx*8],dh
  43d1f2:	push   edi
  43d1f3:	test   BYTE PTR ds:0x363459a3,dh
  43d1f9:	dec    esi
  43d1fa:	pop    esp
  43d1fb:	ja     0x43d233
  43d1fd:	mov    DWORD PTR [ecx+0x30],ebx
  43d200:	cmp    BYTE PTR [eax],al
  43d202:	add    al,0x6c
  43d204:	ret    
  43d205:	cmp    BYTE PTR [esi-0x40e51ca1],al
  43d20b:	es jecxz 0x43d263
  43d20e:	scas   eax,DWORD PTR es:[edi]
  43d20f:	xor    ebx,esp
  43d211:	ins    DWORD PTR es:[edi],dx
  43d212:	scas   eax,DWORD PTR es:[edi]
  43d213:	pop    ebp
  43d214:	jecxz  0x43d198
  43d216:	lahf   
  43d217:	sti    
  43d218:	jecxz  0x43d1b2
  43d21a:	lahf   
  43d21b:	mov    ecx,0x8fd0e3
  43d220:	in     al,0x13
  43d222:	mov    WORD PTR [ebx],?
  43d224:	loopne 0x43d258
  43d226:	jl     0x43d299
  43d228:	fcomp  QWORD PTR [ecx-0xd22bf84]
  43d22e:	ins    BYTE PTR es:[edi],dx
  43d22f:	dec    edx
  43d230:	fst    QWORD PTR [esi+0x6d]
  43d233:	clc    
  43d234:	ffree  st(1)
  43d236:	pop    ebp
  43d237:	pop    ss
  43d238:	fidivr WORD PTR [ebx]
  43d23a:	pop    edx
  43d23b:	mov    ecx,0xb1525ede
  43d240:	fidivr WORD PTR [ecx+0x4a]
  43d243:	sub    ebx,edi
  43d245:	or     bl,al
  43d247:	test   eax,0xafbb50df
  43d24c:	fbstp  TBYTE PTR [ebx-0x4d]
  43d24f:	stc    
  43d250:	fist   WORD PTR [esi-0x391fe555]
  43d256:	mov    ds:0x9807dc59,eax
  43d25b:	dec    ebx
  43d25c:	stc    
  43d25d:	adc    BYTE PTR [ecx-0x3601d597],dl
  43d263:	test   al,0x5
  43d265:	add    BYTE PTR [eax],al
  43d267:	xchg   BYTE PTR [eax],al
  43d269:	mul    ch
  43d26b:	jbe    0x43d2e5
  43d26d:	cmc    
  43d26e:	data16 ja 0x43d291
  43d271:	cmc    
  43d272:	retf   0x7677
  43d275:	clc    
  43d276:	xor    dl,BYTE PTR [ebx+edx*8-0x5]
  43d27a:	fst    DWORD PTR [edx+ebx*4-0x5]
  43d27e:	or     eax,0xf3074255
  43d283:	push   esi
  43d284:	adc    ecx,DWORD PTR [ebx+esi*8+0x32]
  43d288:	adc    dh,BYTE PTR [ebx+0x81689f3]
  43d28e:	clc    
  43d28f:	jecxz  0x43d2a7
  43d291:	pop    ebp
  43d292:	clc    
  43d293:	inc    esi
  43d294:	pop    ss
  43d295:	jmp    0xb95b7f92
  43d29a:	clc    
  43d29b:	repnz pop ss
  43d29d:	mov    ds:0x10186af9,al
  43d2a2:	test   BYTE PTR [edi+0x15],0x1e
  43d2a6:	neg    BYTE PTR [esi-0x340901eb]
  43d2ac:	adc    eax,0x1611f6c2
  43d2b1:	push   cs
  43d2b2:	neg    DWORD PTR ds:0x81ebfc16
  43d2b8:	sbb    bh,dh
  43d2ba:	jmp    0x43d31b
  43d2bc:	sbb    dh,BYTE PTR [ebx+0x651afeeb]
  43d2c2:	in     al,dx
  43d2c3:	push   ss
  43d2c4:	sbb    ebp,esi
  43d2c6:	in     al,dx
  43d2c7:	mov    al,0x1b
  43d2c9:	sub    esp,0x0
  43d2cc:	push   es
  43d2cd:	sbb    al,0x4
  43d2cf:	in     eax,dx
  43d2d0:	(bad)  
  43d2d1:	sbb    BYTE PTR [edx],ch
  43d2d3:	jmp    0x1946:0xead318f0
  43d2da:	into   
  43d2db:	out    dx,eax
  43d2dc:	jb     0x43d2fc
  43d2de:	test   eax,0x7b1e40ef
  43d2e3:	out    dx,eax
  43d2e4:	rcr    BYTE PTR [esi],0x3
  43d2e7:	icebp  
  43d2e8:	imul   ebx,DWORD PTR [edi],0xf
  43d2eb:	icebp  
  43d2ec:	inc    esi
  43d2ed:	pop    ds
  43d2ee:	lods   al,BYTE PTR ds:[esi]
  43d2ef:	lock aam 0x1f
  43d2f2:	lods   al,BYTE PTR ds:[esi]
  43d2f3:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d2f5:	pop    ds
  43d2f6:	mov    eax,0xa1f9cf0
  43d2fb:	in     al,dx
  43d2fc:	stos   DWORD PTR es:[edi],eax
  43d2fd:	inc    esi
  43d2fe:	xor    ah,cl
  43d300:	mov    ds:0x9be03025,eax
  43d305:	sbb    dh,BYTE PTR [eax]
  43d307:	es jo  0x43d312
  43d30a:	xor    BYTE PTR [esi],dh
  43d30c:	push   0x63732fd9
  43d311:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d312:	das    
  43d313:	mov    dl,0x5b
  43d315:	js     0x43d346
  43d317:	xchg   DWORD PTR [ebx+0x6c],esi
  43d31a:	das    
  43d31b:	or     ebp,DWORD PTR [ecx-0x6e]
  43d31e:	cs xchg esi,eax
  43d320:	pusha  
  43d321:	push   esp
  43d322:	cs jmp 0x46322fbd
  43d328:	test   DWORD PTR [edx+0xa],eax
  43d32b:	leave  
  43d32c:	xor    eax,0xb43909
  43d331:	xor    al,0xe9
  43d333:	cmp    ah,BYTE PTR [esp+esi*1+0x7c]
  43d337:	cmp    dl,bl
  43d339:	sbb    DWORD PTR [ebp+esi*1+0x35421148],edx
  43d340:	sahf   
  43d341:	push   cs
  43d342:	mov    cl,0x34
  43d344:	xor    cl,BYTE PTR [esi]
  43d346:	dec    esi
  43d347:	cmp    BYTE PTR [ebp-0x5],ah
  43d34a:	repnz ss mov ah,0xf0
  43d34e:	loope  0x43d386
  43d350:	xchg   ecx,eax
  43d351:	clc    
  43d352:	fnsave [esi]
  43d354:	ja     0x43d346
  43d356:	mov    ah,0x36
  43d358:	dec    ebx
  43d359:	fcom   DWORD PTR [eax-0x792fd6ca]
  43d35f:	ss adc eax,ebx
  43d362:	fs ss fcmovbe st,st(3)
  43d366:	push   ebp
  43d367:	ss icebp 
  43d369:	lods   eax,DWORD PTR ds:[esi]
  43d36a:	dec    esi
  43d36b:	xor    cl,BYTE PTR [ecx]
  43d36d:	stos   BYTE PTR es:[edi],al
  43d36e:	and    dh,BYTE PTR [edx]
  43d370:	push   cs
  43d371:	mov    ds:0x70003202,al
  43d376:	outs   dx,BYTE PTR ds:[esi]
  43d377:	pop    eax
  43d378:	cmp    BYTE PTR [esi+ebp*2+0x4d],ah
  43d37c:	cmp    BYTE PTR [edx+0x6e],al
  43d37f:	jns    0x43d3b9
  43d381:	and    eax,0x238996e
  43d386:	outs   dx,BYTE PTR ds:[esi]
  43d387:	lea    edi,[eax]
  43d389:	(bad)  
  43d38a:	outs   dx,BYTE PTR ds:[esi]
  43d38b:	mov    ecx,0xc96f2f38
  43d390:	cmp    BYTE PTR [edx],dl
  43d392:	outs   dx,DWORD PTR ds:[esi]
  43d393:	sar    DWORD PTR [eax],1
  43d395:	add    cl,bh
  43d397:	outs   dx,BYTE PTR ds:[esi]
  43d398:	loopne 0x43d3d2
  43d39a:	fld    TBYTE PTR [esi-0xb]
  43d39d:	cmp    BYTE PTR [ebx+0x69],ch
  43d3a0:	add    eax,0xd692e39
  43d3a5:	cmp    DWORD PTR [ebp+0x67],esi
  43d3a8:	sbb    al,0x39
  43d3aa:	addr16 addr16 dec eax
  43d3ad:	cmp    ecx,esp
  43d3af:	push   0x68f4395b
  43d3b4:	bound  edi,QWORD PTR [ecx]
  43d3b6:	in     eax,dx
  43d3b7:	push   0x67af3974
  43d3bc:	xchg   DWORD PTR [ecx],edi
  43d3be:	mov    ebp,0x7399767
  43d3c3:	push   0x67a8399e
  43d3c8:	mov    bl,0x39
  43d3ca:	lahf   
  43d3cb:	adc    BYTE PTR [bp+si],bh
  43d3ce:	int3   
  43d3cf:	imul   ecx,DWORD PTR [edi-0x4d97b6c6],0xad6ad93a
  43d3d9:	cmp    edx,DWORD PTR [edi-0x4ac3f897]
  43d3df:	imul   esi,DWORD PTR [edx],0x3c
  43d3e2:	pop    ecx
  43d3e3:	imul   ecx,DWORD PTR [eax+0x766c203c],0x3d
  43d3ea:	xor    al,0x6c
  43d3ec:	loope  0x43d42b
  43d3ee:	xchg   BYTE PTR [ecx-0x24],ah
  43d3f1:	daa    
  43d3f2:	jo     0x43d42c
  43d3f4:	loopne 0x43d44e
  43d3f6:	push   0x2dcb5
  43d3fb:	popa   
  43d3fc:	inc    esi
  43d3fd:	(bad)  ds:0x42dd5559
  43d403:	push   ecx
  43d404:	cmp    eax,0x84960dd
  43d409:	fidivr WORD PTR [edx-0x275963f]
  43d40f:	jns    0x43d46e
  43d411:	or     eax,DWORD PTR [eax]
  43d413:	xchg   dh,bh
  43d415:	cli    
  43d416:	fwait
  43d417:	mov    dh,0xdc
  43d419:	cli    
  43d41a:	push   es
  43d41b:	xchg   edi,eax
  43d41c:	jns    0x43d419
  43d41e:	pop    ds
  43d41f:	xchg   edi,eax
  43d420:	sub    ebx,edi
  43d422:	inc    esp
  43d423:	xchg   edi,eax
  43d424:	dec    esp
  43d425:	sti    
  43d426:	arpl   WORD PTR [edi+0x77bbfb76],dx
  43d42c:	and    eax,0x1477d3fc
  43d431:	cld    
  43d432:	pop    esp
  43d433:	je     0x43d3f9
  43d435:	clc    
  43d436:	mov    eax,0xa3f9e374
  43d43b:	push   ebp
  43d43c:	add    edi,edx
  43d43e:	stc    
  43d43f:	push   ebp
  43d440:	pop    ebx
  43d441:	mul    BYTE PTR [edi-0x46092ba6]
  43d447:	push   edx
  43d448:	not    DWORD PTR [bx]
  43d44b:	mov    ebx,0xb3fcf783
  43d450:	push   esp
  43d451:	hlt    
  43d452:	and    BYTE PTR [eax-0x4fbc0b86],bh
  43d458:	xchg   esi,eax
  43d459:	hlt    
  43d45a:	pop    esi
  43d45b:	cwde   
  43d45c:	mov    cl,0xf4
  43d45e:	jge    0x43d460
  43d460:	nop
  43d461:	repnz hlt 
  43d463:	mov    ebp,0x1af53098
  43d468:	xchg   ecx,eax
  43d469:	inc    edx
  43d46a:	and    al,0xf3
  43d46c:	dec    esp
  43d46d:	adc    esi,DWORD PTR [ebx+esi*8]
  43d470:	pop    esp
  43d471:	adc    ebx,DWORD PTR [edi+0x6c1a86f3]
  43d477:	in     al,dx
  43d478:	jmp    0x2019:0x65eccf19
  43d47f:	in     eax,dx
  43d480:	and    BYTE PTR [ecx],bl
  43d482:	cmp    ebp,ebp
  43d484:	add    BYTE PTR [ecx],bl
  43d486:	sahf   
  43d487:	in     eax,dx
  43d488:	jo     0x43d4a2
  43d48a:	(bad)  
  43d48c:	mov    esi,0xd1ee391c
  43d491:	sbb    al,0x38
  43d493:	out    dx,al
  43d494:	add    ebx,DWORD PTR ds:0x1d1dee79
  43d49a:	mov    ch,0xee
  43d49c:	aas    
  43d49d:	sbb    eax,0x1d50ee7d
  43d4a2:	int    0xee
  43d4a4:	jo     0x43d4c3
  43d4a6:	sub    bh,ch
  43d4a8:	fstp   DWORD PTR ds:0x1e1fef6e
  43d4ae:	xchg   bh,ch
  43d4b0:	out    dx,al
  43d4b1:	sbb    eax,0x1e4bef99
  43d4b6:	inc    edx
  43d4b7:	out    dx,eax
  43d4b8:	sbb    BYTE PTR [esi],bl
  43d4ba:	dec    ecx
  43d4bb:	out    dx,eax
  43d4bc:	pop    ds
  43d4bd:	push   ds
  43d4be:	cli    
  43d4bf:	out    0x8a,eax
  43d4c1:	push   ss
  43d4c2:	(bad)  
  43d4c4:	add    BYTE PTR [ebp+0x16],ah
  43d4c7:	or     ebp,eax
  43d4c9:	pop    eax
  43d4ca:	push   ss
  43d4cb:	jmp    0xb05a25b7
  43d4d0:	out    0x69,eax
  43d4d2:	push   ss
  43d4d3:	pop    esi
  43d4d4:	call   0xe888ebf1
  43d4d9:	xor    DWORD PTR [edi],edx
  43d4db:	inc    esi
  43d4dc:	call   0xe854ec03
  43d4e1:	mov    dh,0x16
  43d4e3:	or     cl,BYTE PTR [ecx]
  43d4e5:	fisub  WORD PTR [ebx+0x2d]
  43d4e8:	out    0xde,eax
  43d4ea:	dec    ebp
  43d4eb:	sub    eax,0x2d09af33
  43d4f0:	ss scas eax,DWORD PTR es:[edi]
  43d4f2:	fild   QWORD PTR [eax+eax*4]
  43d4f5:	sahf   
  43d4f6:	xchg   esp,eax
  43d4f7:	sub    al,0x8d
  43d4f9:	sahf   
  43d4fa:	imul   ebp,DWORD PTR [edi+edi*4],0x13049ae
  43d501:	lods   al,BYTE PTR ds:[esi]
  43d502:	or     eax,0xc19c3930
  43d507:	das    
  43d508:	ins    DWORD PTR es:[edi],dx
  43d509:	lahf   
  43d50a:	push   esp
  43d50b:	das    
  43d50c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d50d:	outs   dx,DWORD PTR ds:[esi]
  43d50e:	pop    eax
  43d50f:	das    
  43d510:	cli    
  43d511:	ins    BYTE PTR es:[edi],dx
  43d512:	and    ebp,DWORD PTR [edi]
  43d514:	xlat   BYTE PTR ds:[ebx]
  43d515:	pop    esp
  43d516:	or     ch,BYTE PTR [edi]
  43d518:	sub    al,0x5d
  43d51a:	into   
  43d51b:	cs push 0x6c
  43d51e:	mov    eax,0x9d6c372e
  43d523:	cs jmp 0x7e322c1e
  43d529:	add    BYTE PTR [ebp+0x35b10a42],al
  43d52f:	repz cmp DWORD PTR [edi+0x49398d35],ecx
  43d536:	xor    eax,0x32e13962
  43d53b:	dec    edx
  43d53c:	cmp    DWORD PTR [ebx+ebx*1],eax
  43d53f:	into   
  43d540:	cmp    BYTE PTR [esi+0x12],ch
  43d543:	test   DWORD PTR [eax],edi
  43d545:	dec    edi
  43d546:	sbb    bl,BYTE PTR [ebx+0x38]
  43d549:	call   0x2ffb:0x783be113
  43d550:	cmp    edi,esi
  43d552:	lock or edi,DWORD PTR [ebx]
  43d555:	mov    al,bh
  43d557:	fnstcw WORD PTR [edx]
  43d559:	jne    0x43d54b
  43d55b:	(bad)  
  43d55c:	cmp    al,BYTE PTR [eax]
  43d55e:	lods   al,BYTE PTR ds:[esi]
  43d55f:	push   eax
  43d560:	les    esi,FWORD PTR [ebx]
  43d562:	int    0x68
  43d564:	inc    eax
  43d565:	xor    al,0xf9
  43d567:	push   0x51f534d7
  43d56c:	mov    ?,WORD PTR ds:0x36ac545b
  43d572:	not    BYTE PTR [ebx-0x42]
  43d575:	ss icebp 
  43d577:	push   ebx
  43d578:	shl    BYTE PTR [esi],1
  43d57a:	ret    
  43d57b:	push   ebx
  43d57c:	in     al,0x36
  43d57e:	fst    QWORD PTR [ebx+0x1]
  43d581:	aaa    
  43d582:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d583:	push   ecx
  43d584:	getsec 
  43d586:	test   DWORD PTR [ebx+0x1d],edx
  43d589:	aaa    
  43d58a:	xchg   ebp,eax
  43d58b:	push   ecx
  43d58c:	dec    edx
  43d58d:	aaa    
  43d58e:	add    BYTE PTR [ebp-0x3ac8c2af],dh
  43d594:	push   ecx
  43d595:	push   ecx
  43d596:	aaa    
  43d597:	test   BYTE PTR [ecx+0x5c],dl
  43d59a:	aaa    
  43d59b:	rcl    BYTE PTR [ecx-0x46],0x37
  43d59f:	adc    al,0x52
  43d5a1:	push   ebx
  43d5a2:	cmp    BYTE PTR [eax-0xec7599a],al
  43d5a8:	data16 into 
  43d5aa:	cmp    al,dl
  43d5ac:	data16 adc al,0x39
  43d5af:	sahf   
  43d5b0:	imul   ecx,DWORD PTR [ecx+0x39],0x4b
  43d5b4:	ins    DWORD PTR es:[edi],dx
  43d5b5:	jb     0x43d5f0
  43d5b7:	or     ebp,DWORD PTR [edx+ecx*8+0x39]
  43d5bb:	sbb    al,0x66
  43d5bd:	push   cs
  43d5be:	cmp    dh,BYTE PTR [ebp+0x68]
  43d5c1:	sbb    al,0x3a
  43d5c3:	xchg   BYTE PTR [eax+0x55],ch
  43d5c6:	cmp    al,BYTE PTR [ecx+0x66]
  43d5c9:	js     0x43d605
  43d5cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d5cc:	push   0x68bf3a9f
  43d5d1:	jecxz  0x43d60d
  43d5d3:	sti    
  43d5d4:	data16 (bad) 
  43d5d7:	xchg   BYTE PTR [ebp-0x1a],ch
  43d5da:	dec    esp
  43d5db:	stos   BYTE PTR es:[edi],al
  43d5dc:	xchg   ebx,eax
  43d5dd:	out    0x8d,al
  43d5df:	mov    ds:0x9ae6e21a,al
  43d5e4:	gs out 0x16,eax
  43d5e7:	xchg   ebx,eax
  43d5e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d5e9:	out    0x59,eax
  43d5eb:	mov    ebx,ebp
  43d5ed:	out    0x9b,al
  43d5ef:	and    DWORD PTR [ebx+0x7b00bce7],0xffffff8a
  43d5f6:	out    0xe8,eax
  43d5f8:	jae    0x43d65a
  43d5fa:	loopne 0x43d61c
  43d5fc:	push   0x6072e055
  43d601:	cld    
  43d602:	loopne 0x43d5b6
  43d604:	pop    eax
  43d605:	xchg   ebx,eax
  43d606:	loopne 0x43d5d0
  43d608:	push   eax
  43d609:	popa   
  43d60a:	loope  0x43d65d
  43d60c:	dec    ecx
  43d60d:	daa    
  43d60e:	loope  0x43d59b
  43d610:	shl    eax,0xe1
  43d613:	fdivr  QWORD PTR [ecx+0x71fd6a69]
  43d619:	adc    DWORD PTR [esi],eax
  43d61b:	add    BYTE PTR [esi-0x69ba0578],al
  43d621:	aaa    
  43d622:	neg    BYTE PTR [edx-0x6a]
  43d625:	in     eax,0xfa
  43d627:	lea    edx,[esi-0x695c0512]
  43d62d:	in     eax,0xfa
  43d62f:	and    BYTE PTR [ebp+edi*8-0xc],dh
  43d633:	and    al,0x75
  43d635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d636:	cmc    
  43d637:	adc    eax,0xa2dfd97a
  43d63c:	jae    0x43d667
  43d63e:	loopne 0x43d617
  43d640:	pop    eax
  43d641:	out    dx,al
  43d642:	clc    
  43d643:	add    al,0x51
  43d645:	(bad)  
  43d646:	stc    
  43d647:	xor    bl,BYTE PTR [ecx-0x5a]
  43d64a:	stc    
  43d64b:	inc    esi
  43d64c:	push   ecx
  43d64d:	mov    dh,0xf9
  43d64f:	dec    esi
  43d650:	mov    ecx,0x50f0ae42
  43d655:	mfence 
  43d658:	add    BYTE PTR [eax+0xf],dl
  43d65b:	jle    0x43d64d
  43d65d:	pusha  
  43d65e:	movd   mm6,eax
  43d661:	jo     0x43d672
  43d663:	outs   dx,BYTE PTR ds:[esi]
  43d664:	lock push eax
  43d666:	movd   mm6,eax
  43d669:	push   eax
  43d66a:	jns    0xe1592b5b
  43d670:	jae    0x43d635
  43d672:	push   esi
  43d673:	rol    BYTE PTR [esi+eax*4],0x42
  43d677:	xor    esp,esi
  43d679:	hlt    
  43d67a:	adc    DWORD PTR [ebx+0x3b1163f4],esi
  43d680:	cmc    
  43d681:	sbb    BYTE PTR [ecx],dl
  43d683:	xor    ch,0xc0
  43d686:	adc    cl,ch
  43d688:	out    dx,eax
  43d689:	sub    BYTE PTR [esi],cl
  43d68b:	pop    edx
  43d68c:	lock cwde 
  43d68e:	or     al,0x4
  43d690:	out    dx,al
  43d691:	xchg   esp,eax
  43d692:	sbb    ecx,DWORD PTR [edx]
  43d694:	in     eax,dx
  43d695:	pushf  
  43d696:	sbb    eax,edx
  43d698:	in     al,dx
  43d699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d69a:	sbb    ecx,edx
  43d69c:	in     al,dx
  43d69d:	pushf  
  43d69e:	sbb    edx,edx
  43d6a0:	in     al,dx
  43d6a1:	xchg   esp,eax
  43d6a2:	sbb    ecx,edx
  43d6a4:	in     al,dx
  43d6a5:	pushf  
  43d6a6:	sbb    esp,DWORD PTR [edx]
  43d6a8:	in     eax,dx
  43d6a9:	les    ebx,FWORD PTR [ebx]
  43d6ab:	sub    ch,ch
  43d6ad:	mov    esp,0xd4ed121b
  43d6b2:	sbb    ecx,edx
  43d6b4:	in     al,dx
  43d6b5:	fcomp  QWORD PTR [ebx]
  43d6b7:	ret    0xa4ec
  43d6ba:	sbb    ecx,edx
  43d6bc:	in     al,dx
  43d6bd:	add    BYTE PTR [ebx+ebx*1+0x1b94ecd2],bl
  43d6c4:	retf   0x9cec
  43d6c7:	sbb    esp,DWORD PTR [edx-0x13]
  43d6ca:	add    al,0x1c
  43d6cc:	or     ah,BYTE PTR [eax+0x1b]
  43d6cf:	leave  
  43d6d0:	xor    BYTE PTR [eax-0xd],bl
  43d6d3:	mov    al,0x30
  43d6d5:	sub    bl,0xb8
  43d6d8:	xor    BYTE PTR [eax-0x1d],cl
  43d6db:	mov    al,ds:0xa8db4030
  43d6e0:	xor    BYTE PTR [eax-0xd],bl
  43d6e3:	nop
  43d6e4:	xor    BYTE PTR [eax-0x15],al
  43d6e7:	cwde   
  43d6e8:	xor    BYTE PTR [eax],ch
  43d6ea:	jecxz  0x43d66c
  43d6ec:	xor    BYTE PTR [eax],ah
  43d6ee:	fisttp DWORD PTR [eax+0x70b31830]
  43d6f4:	xor    al,al
  43d6f6:	stos   BYTE PTR es:[edi],al
  43d6f7:	js     0x43d729
  43d6f9:	enter  0x60a2,0x30
  43d6fd:	rcr    BYTE PTR [edx-0x4d27cf98],0x50
  43d704:	xor    al,al
  43d706:	stos   BYTE PTR es:[edi],al
  43d707:	pop    eax
  43d708:	xor    al,ch
  43d70a:	lahf   
  43d70b:	inc    eax
  43d70c:	xor    al,0xe0
  43d70e:	lahf   
  43d70f:	dec    eax
  43d710:	xor    al,0xd8
  43d712:	outs   dx,DWORD PTR ds:[esi]
  43d713:	xor    BYTE PTR [eax+eax*1],dh
  43d716:	ins    BYTE PTR es:[edi],dx
  43d717:	cmp    BYTE PTR [eax+ecx*8],dh
  43d71a:	pop    edi
  43d71b:	and    BYTE PTR [eax+eax*8],dh
  43d71e:	pop    edi
  43d71f:	sub    BYTE PTR [eax+ebx*8],dh
  43d722:	add    BYTE PTR [edi+0x10],ch
  43d725:	xor    al,0xc0
  43d727:	outs   dx,DWORD PTR ds:[esi]
  43d728:	xchg   esp,eax
  43d729:	xor    ebp,DWORD PTR [ecx]
  43d72b:	pop    ebp
  43d72c:	push   DWORD PTR [edx]
  43d72e:	std    
  43d72f:	pop    esp
  43d730:	fidiv  DWORD PTR [edx]
  43d732:	pop    esp
  43d733:	sub    al,0xb7
  43d735:	xor    dl,BYTE PTR [edx+0x2c]
  43d738:	dec    ebp
  43d739:	xor    dh,BYTE PTR [ebx+0x712def29]
  43d73f:	and    DWORD PTR [esp+ebp*1+0x2c832e28],esp
  43d746:	add    bh,cl
  43d748:	push   0xffffffa0
  43d74a:	ds jo  0x43d7ac
  43d74d:	ja     0x43d78e
  43d74f:	mov    ah,0x5c
  43d751:	out    dx,al
  43d752:	(bad)  
  43d753:	out    dx,eax
  43d754:	sub    ah,0xff
  43d757:	pop    ebx
  43d758:	inc    ecx
  43d759:	or     al,BYTE PTR [eax]
  43d75b:	push   0x51
  43d75d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d75e:	xor    BYTE PTR [eax+0x51],dl
  43d761:	shl    BYTE PTR [eax],0x88
  43d764:	push   ecx
  43d765:	adc    eax,0x4c4e1431
  43d76a:	xor    DWORD PTR [esi-0x26ce11b2],eax
  43d770:	push   edx
  43d771:	cld    
  43d772:	xor    eax,ecx
  43d774:	push   edx
  43d775:	pop    edx
  43d776:	xor    al,BYTE PTR [eax+edx*2-0x61]
  43d77a:	xor    al,dl
  43d77c:	dec    edi
  43d77d:	hlt    
  43d77e:	xor    dh,BYTE PTR [ebp+0x56332851]
  43d784:	push   ebx
  43d785:	ins    BYTE PTR es:[edi],dx
  43d786:	xor    eax,DWORD PTR [eax]
  43d788:	ds push ebx
  43d78a:	fnsave [ebx]
  43d78c:	popf   
  43d78d:	fs push ss
  43d78f:	xor    al,0x36
  43d791:	gs ret 
  43d793:	xor    eax,0x35e0641b
  43d798:	sbb    DWORD PTR [eax+ebx*1+0x36],esp
  43d79c:	pop    edx
  43d79d:	data16 sub al,0x36
  43d7a0:	sbb    DWORD PTR [ebp-0x25],esp
  43d7a3:	ss add al,0x65
  43d7a6:	cli    
  43d7a7:	addr16 xchg DWORD PTR ss:[bx],esi
  43d7ac:	xchg   ecx,eax
  43d7ad:	gs and eax,0x6f666938
  43d7b3:	cmp    BYTE PTR [ecx],al
  43d7b5:	imul   ebp,DWORD PTR [esi-0x4f95fcc7],0x869bc3b
  43d7bf:	cmp    al,0x86
  43d7c1:	xchg   ebx,eax
  43d7c2:	out    0x8c,al
  43d7c4:	arpl   cx,cx
  43d7c6:	out    0xad,al
  43d7c8:	pop    ebx
  43d7c9:	or     eax,0x553cde7
  43d7ce:	out    0xf5,eax
  43d7d0:	dec    ebx
  43d7d1:	js     0x43d7b7
  43d7d3:	push   ss
  43d7d4:	sar    BYTE PTR [edi],0xe8
  43d7d7:	cmp    DWORD PTR [eax-0x4fae1b67],edi
  43d7dd:	mov    ds:0xd5a885e4,al
  43d7e2:	out    0xa5,eax
  43d7e4:	mov    al,ds:0x98bde7f9
  43d7e9:	adc    eax,ebp
  43d7eb:	fld    DWORD PTR [eax]
  43d7ed:	nop
  43d7ee:	pop    edx
  43d7ef:	in     al,0xf5
  43d7f1:	mov    BYTE PTR [ecx-0x1b],ch
  43d7f4:	or     al,0x81
  43d7f6:	jb     0x43d7dd
  43d7f8:	sub    eax,0x51e52a79
  43d7fd:	jno    0x43d802
  43d7ff:	in     eax,0x78
  43d801:	imul   ebx,esi,0x8f61ade5
  43d807:	in     eax,0xff
  43d809:	cdq    
  43d80a:	imul   ebx,edx,0xaf591fd
  43d810:	add    BYTE PTR [esi-0x49d7059b],al
  43d816:	neg    BYTE PTR ss:[ebp-0x4a]
  43d81a:	call   0xf1fa6319
  43d81f:	cli    
  43d820:	test   eax,0xc5faecb6
  43d825:	xchg   esi,eax
  43d826:	retf   0x1fa
  43d829:	xchg   edi,eax
  43d82a:	cmp    al,0xfb
  43d82c:	xchg   BYTE PTR [edi-0x685f041f],dl
  43d832:	adc    eax,0xf377e9fc
  43d837:	clc    
  43d838:	nop
  43d839:	je     0x43d87d
  43d83b:	(bad)  
  43d83c:	icebp  
  43d83d:	repz cmovge esi,ecx
  43d841:	andnpd xmm6,xmm0
  43d845:	gs push cs
  43d847:	mov    esp,0x9c0e9aef
  43d84c:	out    dx,eax
  43d84d:	enter  0xce0d,0xec
  43d851:	add    BYTE PTR [edx+0xb],dl
  43d854:	lahf   
  43d855:	in     al,dx
  43d856:	sub    cl,BYTE PTR [ebx]
  43d858:	ja     0x43d846
  43d85a:	(bad)  
  43d85b:	or     ah,dl
  43d85d:	jmp    0x43d7ea
  43d85f:	sbb    dl,BYTE PTR [ebp+0x7819faeb]
  43d865:	call   0xe80def8e
  43d86a:	aad    0x15
  43d86c:	or     esp,edi
  43d86e:	scas   eax,DWORD PTR es:[edi]
  43d86f:	adc    al,0xc4
  43d871:	in     eax,0xa3
  43d873:	adc    al,0xb2
  43d875:	in     eax,0x76
  43d877:	adc    al,0xa0
  43d879:	in     eax,0x47
  43d87b:	adc    al,0x3b
  43d87d:	loop   0x43d8c0
  43d87f:	adc    al,0x37
  43d881:	loop   0x43d8d2
  43d883:	adc    al,0x4d
  43d885:	loop   0x43d878
  43d887:	adc    ebx,DWORD PTR [eax-0x62ec201e]
  43d88d:	loop   0x43d84c
  43d88f:	adc    edx,DWORD PTR [edx+eiz*8-0x1d69ec4a]
  43d896:	bound  edx,QWORD PTR [ecx]
  43d898:	int3   
  43d899:	loop   0x43d820
  43d89b:	adc    edi,edx
  43d89d:	loop   0x43d865
  43d89f:	adc    DWORD PTR [ebx-0x1d],esi
  43d8a2:	sbb    al,0x12
  43d8a4:	mov    ah,bl
  43d8a6:	pop    ebp
  43d8a7:	adc    ah,cl
  43d8a9:	mov    ds:0x3ec525b,eax
  43d8ae:	xchg   BYTE PTR [edx-0x25],al
  43d8b1:	sar    DWORD PTR [ebp+0x50a12],cl
  43d8b7:	pop    edx
  43d8b8:	cdq    
  43d8b9:	cmp    DWORD PTR [ebp-0x18c6ddae],esp
  43d8bf:	pop    edx
  43d8c0:	xchg   esi,eax
  43d8c1:	cmp    BYTE PTR [edi],bl
  43d8c3:	push   eax
  43d8c4:	push   es
  43d8c5:	cmp    al,0xb0
  43d8c7:	cmp    edi,DWORD PTR [ebp-0x63cf85c5]
  43d8cd:	cmp    ecx,DWORD PTR [edi+0x38]
  43d8d0:	dec    eax
  43d8d1:	cmp    edx,esi
  43d8d3:	xor    dl,dh
  43d8d5:	cmp    ch,BYTE PTR [ebp-0x27]
  43d8d8:	xchg   esp,eax
  43d8d9:	cmp    ah,BYTE PTR [edi]
  43d8db:	shr    DWORD PTR [ebx+0x3a],1
  43d8de:	icebp  
  43d8df:	fldcw  WORD PTR [edx]
  43d8e1:	ss (bad) 
  43d8e4:	shl    BYTE PTR ds:0x3522befd,cl
  43d8ea:	mov    ds:0x143488be,al
  43d8ef:	scas   eax,DWORD PTR es:[edi]
  43d8f0:	xor    bh,BYTE PTR [eax]
  43d8f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d8f3:	scas   eax,DWORD PTR es:[edi]
  43d8f4:	pop    es
  43d8f5:	cmp    BYTE PTR [eax-0x74c80c21],bl
  43d8fb:	fbstp  TBYTE PTR [edi+0x37]
  43d8fe:	leave  
  43d8ff:	iret   
  43d900:	cmc    
  43d901:	ss aas 
  43d903:	int    0x7a
  43d905:	ss int3 
  43d907:	mov    esp,0xb8ae33f9
  43d90c:	push   0x8b0c432
  43d911:	cmp    ah,BYTE PTR cs:[esi+0x641f2d7b]
  43d918:	aad    0x2f
  43d91a:	mov    DWORD PTR [eax],eax
  43d91c:	addr16 push ecx
  43d91e:	out    dx,al
  43d91f:	jmp    0x4a322839
  43d924:	test   DWORD PTR [edx+0xa],eax
  43d927:	leave  
  43d928:	xor    eax,0x338a3bd9
  43d92d:	xor    eax,0x7867003b
  43d932:	adc    dh,BYTE PTR [ebx]
  43d934:	aas    
  43d935:	js     0x43d961
  43d937:	xor    eax,DWORD PTR [edi+0x78]
  43d93a:	and    dh,BYTE PTR [ebx]
  43d93c:	push   DWORD PTR [edi+0x3a]
  43d93f:	xor    esp,DWORD PTR [edi+0x79]
  43d942:	xor    dh,BYTE PTR [ebx]
  43d944:	fbstp  TBYTE PTR [edi+0x4a]
  43d947:	xor    esp,edi
  43d949:	ja     0x43d98d
  43d94b:	xor    ebx,edi
  43d94d:	ja     0x43d8d0
  43d94f:	xor    edi,edx
  43d951:	ja     0x43d92d
  43d953:	xor    ecx,DWORD PTR [eax+0x78]
  43d956:	and    al,0x34
  43d958:	std    
  43d959:	js     0x43d9bc
  43d95b:	xor    al,0x75
  43d95d:	jns    0x43d974
  43d95f:	xor    eax,0x356f6a2e
  43d964:	loop   0x43d9d0
  43d966:	cmp    BYTE PTR [esi],dh
  43d968:	call   0x136c:0xde377d6b
  43d96f:	cmp    BYTE PTR ds:0xe839236d,bl
  43d975:	ins    DWORD PTR es:[edi],dx
  43d976:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d977:	cmp    eax,DWORD PTR [edx-0x68c35090]
  43d97d:	(bad)  
  43d97e:	into   
  43d97f:	cmp    eax,0x7a70a700
  43d984:	ds and eax,0x1f3e6e64
  43d98a:	fs cwde 
  43d98c:	sub    esp,DWORD PTR ds:[esp+ecx*4+0x3e]
  43d991:	mul    DWORD PTR [ebx-0x60]
  43d994:	adc    ah,BYTE PTR ds:[edx+esi*4+0x3e]
  43d999:	sub    al,0x65
  43d99b:	les    edi,FWORD PTR [esi]
  43d99d:	push   ds
  43d99e:	gs (bad) 
  43d9a0:	ds dec eax
  43d9a2:	gs jmp 0xf9a8d1e6
  43d9a8:	xchg   BYTE PTR ds:[ecx+ebp*8+0xb],bl
  43d9ad:	cdq    
  43d9ae:	dec    edx
  43d9af:	jmp    0xe9be6ac4
  43d9b4:	and    eax,0x3ce99689
  43d9b9:	and    DWORD PTR [ecx],0x327949e9
  43d9bf:	jmp    0xa9d4b23
  43d9c4:	std    
  43d9c5:	sub    DWORD PTR [edx],ebp
  43d9c7:	push   es
  43d9c8:	add    BYTE PTR [esi+0x5613da64],al
  43d9ce:	sub    dh,dl
  43d9d0:	rcl    BYTE PTR [esi+0x4b],cl
  43d9d3:	(bad)  [edx+0x57]
  43d9d6:	jmp    0x43d9b2
  43d9d8:	fdiv   DWORD PTR [edi-0x480c2503]
  43d9de:	cmp    edx,ecx
  43d9e0:	inc    esp
  43d9e1:	mov    ecx,0x5ed183
  43d9e6:	lods   al,BYTE PTR ds:[esi]
  43d9e7:	ror    edi,cl
  43d9e9:	xchg   esi,eax
  43d9ea:	pushf  
  43d9eb:	jns    0x43d9d5
  43d9ed:	sub    BYTE PTR [eax-0x6f511404],bl
  43d9f3:	pop    ecx
  43d9f4:	cli    
  43d9f5:	cld    
  43d9f6:	leave  
  43d9f7:	ins    DWORD PTR es:[edi],dx
  43d9f8:	or     al,BYTE PTR [eax]
  43d9fa:	xchg   BYTE PTR [edx+ebx*8-0x243488f9],dl
  43da01:	mov    eax,0x3cd06277
  43da06:	jno    0x43d9a7
  43da08:	rol    BYTE PTR [eax],cl
  43da0a:	pop    edi
  43da0b:	das    
  43da0c:	in     al,dx
  43da0d:	loope  0x43da68
  43da0f:	pop    ecx
  43da10:	jmp    0x8600:0xab991fc
  43da17:	jle    0x43d9f4
  43da19:	cmp    al,0xb4
  43da1b:	lods   eax,DWORD PTR ds:[esi]
  43da1c:	aad    0xd7
  43da1e:	mov    ch,0xbd
  43da20:	aad    0xdf
  43da22:	mov    ch,0x42
  43da24:	jge    0x43d9fa
  43da26:	popa   
  43da27:	adc    edi,DWORD PTR [ebp-0x2c]
  43da2a:	jno    0x43da3f
  43da2c:	(bad)  
  43da2d:	aam    0x51
  43da2f:	adc    edi,DWORD PTR [ebp-0x2c]
  43da32:	push   ecx
  43da33:	adc    ebx,ebp
  43da35:	xlat   BYTE PTR ds:[ebx]
  43da36:	adc    DWORD PTR [esi],0x1691d7dd
  43da3c:	int    0xd7
  43da3e:	xchg   ecx,eax
  43da3f:	push   ss
  43da40:	mov    ebp,0xfd1691d7
  43da45:	xlat   BYTE PTR ds:[ebx]
  43da46:	popa   
  43da47:	push   ss
  43da48:	std    
  43da49:	xlat   BYTE PTR ds:[ebx]
  43da4a:	add    BYTE PTR [ecx+0x16],dh
  43da4d:	or     eax,0xfd1651d8
  43da52:	xlat   BYTE PTR ds:[ebx]
  43da53:	push   ecx
  43da54:	push   ss
  43da55:	popf   
  43da56:	xlat   BYTE PTR ds:[ebx]
  43da57:	rcl    DWORD PTR [esi],0x9d
  43da5a:	xlat   BYTE PTR ds:[ebx]
  43da5b:	push   ecx
  43da5c:	push   ss
  43da5d:	(bad)  
  43da5e:	xlat   BYTE PTR ds:[ebx]
  43da5f:	push   ecx
  43da60:	push   ss
  43da61:	jge    0x43da3a
  43da63:	push   edi
  43da64:	pop    ss
  43da65:	jl     0x43da3f
  43da67:	sti    
  43da68:	push   ss
  43da69:	outs   dx,DWORD PTR ds:[esi]
  43da6a:	fsubr  DWORD PTR [ebx]
  43da6c:	pop    ss
  43da6d:	push   edi
  43da6e:	fmul   st,st(1)
  43da70:	push   ss
  43da71:	sbb    eax,0xfa16e8d8
  43da76:	fstp   TBYTE PTR [ecx+0xa]
  43da79:	int    0xdb
  43da7b:	imul   ecx,DWORD PTR [edx],0xa4fdbb5
  43da81:	(bad)  [esi]
  43da84:	or     ah,BYTE PTR [edx-0x24]
  43da87:	dec    DWORD PTR [ecx]
  43da89:	mov    ebx,esp
  43da8b:	out    0x9,eax
  43da8d:	fmul   st(5),st
  43da90:	or     DWORD PTR [ecx-0x21f65b24],edi
  43da96:	fdivr  QWORD PTR [ebx+0x9]
  43da99:	iret   
  43da9a:	fsubr  QWORD PTR [ebx+0x5af70a0b]
  43daa0:	(bad)  
  43daa1:	xor    BYTE PTR ds:0x7a30e553,cl
  43daa7:	dec    ebx
  43daa8:	mov    eax,ds:0x89435830
  43daad:	xor    BYTE PTR [eax-0x11b1c500],cl
  43dab3:	jmp    0xe63229ed
  43dab8:	test   DWORD PTR [edx+0xa],eax
  43dabb:	sbb    ebx,DWORD PTR [ecx-0x6a]
  43dabe:	sbb    DWORD PTR ss:[edx-0x3e],0x37535430
  43dac6:	xor    al,0x10
  43dac8:	dec    esp
  43dac9:	xor    DWORD PTR [ebx],0xee4e3c36
  43dacf:	jmp    0xaa322a99
  43dad4:	test   DWORD PTR [edx+0xa],eax
  43dad7:	stos   BYTE PTR es:[edi],al
  43dad8:	xor    eax,0xd5c639f1
  43dadd:	aam    0x39
  43dadf:	cdq    
  43dae0:	aam    0xf0
  43dae2:	cmp    dh,ch
  43dae4:	into   
  43dae5:	mov    esp,0xfecf8434
  43daea:	xor    DWORD PTR [edx-0x3e],edx
  43daed:	adc    DWORD PTR [ecx],esi
  43daef:	mov    cl,0xba
  43daf1:	push   esi
  43daf2:	xor    dh,dh
  43daf4:	scas   eax,DWORD PTR es:[edi]
  43daf5:	and    dh,BYTE PTR [edi+ebp*4]
  43daf8:	scas   eax,DWORD PTR es:[edi]
  43daf9:	mov    cl,0x33
  43dafb:	lahf   
  43dafc:	loope  0x43dade
  43dafe:	sub    eax,0x2dc9d986
  43db03:	fcmovnbe st,st(0)
  43db05:	sub    BYTE PTR [edi],ch
  43db07:	push   ebx
  43db08:	leave  
  43db09:	pop    ecx
  43db0a:	cs fld st(0)
  43db0d:	dec    ecx
  43db0e:	cs jmp 0x16322a69
  43db14:	add    BYTE PTR [edx-0x60fff5be],cl
  43db1a:	jno    0x43db1e
  43db1c:	xor    BYTE PTR [edi+0x71],bl
  43db1f:	adc    dh,BYTE PTR [eax]
  43db21:	(bad)  
  43db22:	jbe    0x43db46
  43db24:	xor    BYTE PTR [edi+0x71],ch
  43db27:	xor    dh,BYTE PTR [eax]
  43db29:	lahf   
  43db2a:	jbe    0x43db6e
  43db2c:	xor    BYTE PTR [edi-0x70cfad8a],bl
  43db32:	jbe    0x43db96
  43db34:	xor    BYTE PTR [edi+0x76],ch
  43db37:	jb     0x43db69
  43db39:	fbstp  TBYTE PTR [ecx-0x7e]
  43db3c:	xor    bh,bl
  43db3e:	jno    0x43dad2
  43db40:	xor    bh,cl
  43db42:	jno    0x43db32
  43db44:	call   FWORD PTR [edi]
  43db46:	loope  0x43db35
  43db48:	push   ebx
  43db4a:	inc    ebp
  43db4b:	or     al,BYTE PTR [eax]
  43db4d:	pop    ds
  43db4e:	jo     0x43db6a
  43db50:	xor    ecx,DWORD PTR [ebx-0x7cccd98f]
  43db56:	jno    0x43dbae
  43db58:	xor    esp,ebx
  43db5a:	outs   dx,DWORD PTR ds:[esi]
  43db5b:	dec    esi
  43db5c:	xor    ecx,ebx
  43db5e:	outs   dx,DWORD PTR ds:[esi]
  43db5f:	xor    ax,bx
  43db62:	outs   dx,DWORD PTR ds:[esi]
  43db63:	pop    esi
  43db64:	xor    edi,DWORD PTR [ebx]
  43db66:	jo     0x43dbde
  43db68:	xor    esp,DWORD PTR [ebx]
  43db6a:	jo     0x43dbda
  43db6c:	xor    ebp,DWORD PTR [ebx+0x70]
  43db6f:	xchg   BYTE PTR [ebx],dh
  43db71:	arpl   WORD PTR [eax+0x7e],si
  43db74:	xor    ebx,DWORD PTR [ebx+0x70]
  43db77:	xchg   esi,eax
  43db78:	xor    eax,DWORD PTR [eax]
  43db7a:	arpl   WORD PTR [eax-0x72],si
  43db7d:	xor    ecx,DWORD PTR [ebx+0x70]
  43db80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43db81:	xor    eax,DWORD PTR [ebx+0x70]
  43db84:	sahf   
  43db85:	xor    edi,DWORD PTR [ebx+0x70]
  43db88:	mov    dh,0x33
  43db8a:	jecxz  0x43dbfe
  43db8c:	scas   al,BYTE PTR es:[edi]
  43db8d:	xor    ebp,ebx
  43db8f:	jb     0x43db57
  43db91:	xor    eax,DWORD PTR [esi+0x55cfd8a7]
  43db97:	xchg   edi,eax
  43db98:	fcom   st(7)
  43db9a:	push   ebp
  43db9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43db9c:	fcomp  st(7)
  43db9e:	mov    ch,0x85
  43dba0:	fsub   st,st(7)
  43dba2:	mov    ch,0x85
  43dba4:	fsubr  st,st(7)
  43dba6:	mov    ch,0x95
  43dba8:	fdiv   st,st(7)
  43dbaa:	mov    ch,0xa5
  43dbac:	fdivr  st,st(7)
  43dbae:	xchg   ebp,eax
  43dbaf:	gs (bad) 
  43dbb1:	pop    es
  43dbb2:	xchg   edx,eax
  43dbb3:	gs (bad) 
  43dbb5:	setp   BYTE PTR [ebp-0x2a]
  43dbb9:	pop    ss
  43dbba:	xchg   edx,eax
  43dbbb:	gs (bad) 
  43dbbd:	pop    ds
  43dbbe:	jp     0x43db45
  43dbc0:	(bad)  
  43dbc1:	daa    
  43dbc2:	jb     0x43db49
  43dbc4:	(bad)  
  43dbc5:	das    
  43dbc6:	jp     0x43db5d
  43dbc8:	(bad)  
  43dbc9:	aaa    
  43dbca:	jb     0x43dbf1
  43dbcc:	sar    BYTE PTR [edi],cl
  43dbce:	pop    edx
  43dbcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43dbd0:	(bad)  
  43dbd1:	inc    edi
  43dbd2:	push   edx
  43dbd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43dbd4:	(bad)  
  43dbd5:	dec    edi
  43dbd6:	pop    edx
  43dbd7:	xchg   ebp,eax
  43dbd8:	(bad)  
  43dbd9:	push   edi
  43dbda:	push   edx
  43dbdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43dbdc:	(bad)  
  43dbdd:	pop    edi
  43dbde:	add    BYTE PTR [edx-0x4d98297b],bh
  43dbe4:	test   esi,edx
  43dbe6:	outs   dx,DWORD PTR ds:[esi]
  43dbe7:	mov    edx,0xb277d695
  43dbec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43dbed:	(bad)  
  43dbee:	jg     0x43db8a
  43dbf0:	in     eax,0xd1
  43dbf2:	xchg   DWORD PTR [edx-0x65702e1b],edx
  43dbf8:	aad    0xd1
  43dbfa:	xchg   edi,eax
  43dbfb:	xchg   edx,eax
  43dbfc:	in     eax,0xd1
  43dbfe:	mov    bl,0x7a
  43dc00:	and    eax,0x3d72d3d2
  43dc05:	shl    bl,cl
  43dc07:	jp     0x43dc6e
  43dc09:	xlat   BYTE PTR ds:[ebx]
  43dc0a:	adc    esi,DWORD PTR [ebx+0x42]
  43dc0d:	std    
  43dc0e:	(bad)  
  43dc0f:	push   ebp
  43dc10:	adc    eax,0x1535d725
  43dc15:	cmp    eax,0x651515d7
  43dc1a:	(bad)  
  43dc1b:	cmc    
  43dc1c:	adc    eax,0x1535d67d
  43dc21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43dc22:	(bad)  
  43dc23:	push   ebp
  43dc24:	adc    eax,0x1575d6bd
  43dc29:	in     eax,0xd5
  43dc2b:	xchg   ebp,eax
  43dc2c:	adc    al,0xbd
  43dc2e:	aad    0x95
  43dc30:	adc    al,0x25
  43dc32:	(bad)  
  43dc33:	mov    ch,0x14
  43dc35:	std    
  43dc36:	aad    0xd5
  43dc38:	adc    al,0x65
  43dc3a:	aad    0xf5
  43dc3c:	adc    edi,DWORD PTR ds:0xa513f5d5
  43dc42:	aad    0x0
  43dc44:	push   ebp
  43dc45:	adc    al,0x7d
  43dc47:	aad    0x35
  43dc49:	adc    al,0xe5
  43dc4b:	aam    0x95
  43dc4d:	adc    edi,ebp
  43dc4f:	aam    0x55
  43dc51:	adc    esp,DWORD PTR [ebp-0x42ec4a2c]
  43dc57:	aam    0x95
  43dc59:	adc    esp,DWORD PTR [ebp-0x2c]
  43dc5c:	cmc    
  43dc5d:	adc    bh,BYTE PTR [ebp-0x2c]
  43dc60:	xor    eax,0xd5d42513
  43dc65:	adc    bh,BYTE PTR ds:0xe512f5d4
  43dc6b:	fist   DWORD PTR [ebp-0x6a2442f6]
  43dc71:	or     ah,BYTE PTR [ebp+0x7d0a35db]
  43dc77:	(bad)  [ecx+0xa]
  43dc7a:	xchg   ebp,eax
  43dc7b:	fist   DWORD PTR [ecx+0xa]
  43dc7e:	popa   
  43dc7f:	fild   DWORD PTR ds:0xddb790a
  43dc85:	or     cl,BYTE PTR [edx]
  43dc87:	pop    ecx
  43dc88:	int    0xae
  43dc8a:	xor    DWORD PTR [ecx-0x33],edx
  43dc8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43dc8e:	xor    DWORD PTR [ecx-0x6ece613e],ecx
  43dc94:	mov    edx,0x85e93196
  43dc99:	inc    edx
  43dc9a:	or     ch,cl
  43dc9c:	test   DWORD PTR [edx+0xa],eax
  43dc9f:	jmp    0xe94e1f29
  43dca4:	test   DWORD PTR [edx+0xa],eax
  43dca7:	jmp    0xa8661ac
  43dcac:	jmp    0xe94e1f36
  43dcb1:	test   DWORD PTR [edx+0xa],eax
  43dcb4:	jmp    0xe94e1f3e
  43dcb9:	test   DWORD PTR [edx+0xa],eax
  43dcbc:	jmp    0xe94e1f46
  43dcc1:	test   DWORD PTR [edx+0xa],eax
  43dcc4:	jmp    0xe94e1f4e
  43dcc9:	test   DWORD PTR [edx+0xa],eax
  43dccc:	jmp    0xe94e1f56
  43dcd1:	test   DWORD PTR [edx+0xa],eax
  43dcd4:	jmp    0xe94e1f5e
  43dcd9:	test   DWORD PTR [edx+0xa],eax
  43dcdc:	jmp    0xe94e1f66
  43dce1:	test   DWORD PTR [edx+0xa],eax
  43dce4:	jmp    0xe94e1f6e
  43dce9:	test   DWORD PTR [edx+0xa],eax
  43dcec:	jmp    0xe94e1f76
  43dcf1:	test   DWORD PTR [edx+0xa],eax
  43dcf4:	jmp    0xe94e1f7e
  43dcf9:	test   DWORD PTR [edx+0xa],eax
  43dcfc:	jmp    0x4e1f86
  43dd01:	scas   eax,DWORD PTR es:[edi]
  43dd02:	inc    ebp
  43dd03:	or     al,BYTE PTR [eax]
  43dd05:	scas   eax,DWORD PTR es:[edi]
  43dd06:	inc    ebp
  43dd07:	or     al,BYTE PTR [eax]
  43dd09:	lahf   
  43dd0a:	inc    ebp
  43dd0b:	or     al,BYTE PTR [eax]
  43dd0d:	add    BYTE PTR [edi-0x50fff5bb],bl
  43dd13:	inc    ebp
  43dd14:	or     al,BYTE PTR [eax]
  43dd16:	scas   eax,DWORD PTR es:[edi]
  43dd17:	inc    ebp
  43dd18:	or     al,BYTE PTR [eax]
  43dd1a:	lahf   
  43dd1b:	inc    ebp
  43dd1c:	or     al,BYTE PTR [eax]
  43dd1e:	lahf   
  43dd1f:	inc    ebp
  43dd20:	or     al,BYTE PTR [eax]
  43dd22:	outs   dx,DWORD PTR ds:[esi]
  43dd23:	inc    ebp
  43dd24:	or     al,BYTE PTR [eax]
  43dd26:	outs   dx,DWORD PTR ds:[esi]
  43dd27:	inc    ebp
  43dd28:	or     al,BYTE PTR [eax]
  43dd2a:	pop    edi
  43dd2b:	inc    ebp
  43dd2c:	or     al,BYTE PTR [eax]
  43dd2e:	pop    edi
  43dd2f:	inc    ebp
  43dd30:	or     al,BYTE PTR [eax]
  43dd32:	outs   dx,DWORD PTR ds:[esi]
  43dd33:	inc    ebp
  43dd34:	or     al,BYTE PTR [eax]
  43dd36:	outs   dx,DWORD PTR ds:[esi]
  43dd37:	inc    ebp
  43dd38:	or     al,BYTE PTR [eax]
  43dd3a:	pop    edi
  43dd3b:	inc    ebp
  43dd3c:	or     al,BYTE PTR [eax]
  43dd3e:	pop    edi
  43dd3f:	inc    ebp
  43dd40:	or     al,BYTE PTR [eax]
  43dd42:	das    
  43dd43:	inc    ebp
  43dd44:	or     al,BYTE PTR [eax]
  43dd46:	das    
  43dd47:	inc    ebp
  43dd48:	or     al,BYTE PTR [eax]
  43dd4a:	pop    ds
  43dd4b:	inc    ebp
  43dd4c:	or     al,BYTE PTR [eax]
  43dd4e:	pop    ds
  43dd4f:	inc    ebp
  43dd50:	or     al,BYTE PTR [eax]
  43dd52:	das    
  43dd53:	inc    ebp
  43dd54:	or     al,BYTE PTR [eax]
  43dd56:	das    
  43dd57:	inc    ebp
  43dd58:	or     al,BYTE PTR [eax]
  43dd5a:	pop    ds
  43dd5b:	inc    ebp
  43dd5c:	or     al,BYTE PTR [eax]
  43dd5e:	pop    ds
  43dd5f:	inc    ebp
  43dd60:	or     al,BYTE PTR [eax]
  43dd62:	out    dx,eax
  43dd63:	inc    esp
  43dd64:	or     al,BYTE PTR [eax]
  43dd66:	out    dx,eax
  43dd67:	inc    esp
  43dd68:	or     al,BYTE PTR [eax]
  43dd6a:	fild   WORD PTR [edx+ecx*1+0x0]
  43dd6e:	fild   WORD PTR [edx+ecx*1+0x0]
  43dd72:	add    bh,ch
  43dd74:	inc    esp
  43dd75:	or     al,BYTE PTR [eax]
  43dd77:	out    dx,eax
  43dd78:	inc    esp
  43dd79:	or     al,BYTE PTR [eax]
  43dd7b:	xchg   BYTE PTR [ebx+0xa],bl
  43dd7e:	add    BYTE PTR [esi-0x79fff5a5],al
  43dd84:	pop    ebx
  43dd85:	or     al,BYTE PTR [eax]
  43dd87:	xchg   BYTE PTR [ebx+0xa],bl
  43dd8a:	add    BYTE PTR [esi-0x79fff5a5],al
  43dd90:	pop    ebx
  43dd91:	or     al,BYTE PTR [eax]
  43dd93:	xchg   BYTE PTR [ebx+0xa],bl
  43dd96:	add    BYTE PTR [esi-0x79fff5a5],al
  43dd9c:	pop    ebx
  43dd9d:	or     al,BYTE PTR [eax]
  43dd9f:	xchg   BYTE PTR [ebx+0xa],bl
  43dda2:	add    BYTE PTR [esi-0x79fff5a7],al
  43dda8:	pop    ecx
  43dda9:	or     al,BYTE PTR [eax]
  43ddab:	xchg   BYTE PTR [ecx+0xa],bl
  43ddae:	add    BYTE PTR [esi-0x79fff5a7],al
  43ddb4:	pop    ecx
  43ddb5:	or     al,BYTE PTR [eax]
  43ddb7:	xchg   BYTE PTR [ecx+0xa],bl
  43ddba:	add    BYTE PTR [esi-0x79fff5a7],al
  43ddc0:	pop    ecx
  43ddc1:	or     al,BYTE PTR [eax]
  43ddc3:	xchg   BYTE PTR [ecx+0xa],bl
  43ddc6:	add    BYTE PTR [esi-0x79fff5a7],al
  43ddcc:	pop    ecx
  43ddcd:	or     al,BYTE PTR [eax]
  43ddcf:	xchg   BYTE PTR [ecx+0xa],bl
  43ddd2:	add    BYTE PTR [esi+0xa59],al
  43ddd8:	xchg   BYTE PTR [ecx+0xa],bl
  43dddb:	add    BYTE PTR [esi-0x79fff5a7],al
  43dde1:	pop    ecx
  43dde2:	or     al,BYTE PTR [eax]
  43dde4:	xchg   BYTE PTR [ecx+0xa],bl
  43dde7:	add    BYTE PTR [esi-0x79fff5a7],al
  43dded:	pop    ecx
  43ddee:	or     al,BYTE PTR [eax]
  43ddf0:	xchg   BYTE PTR [ecx+0xa],bl
  43ddf3:	add    BYTE PTR [esi-0x79fc1ebe],al
  43ddf9:	inc    edx
  43ddfa:	loope  0x43ddff
  43ddfc:	xchg   BYTE PTR [edx-0x1f],al
  43ddff:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43de05:	inc    edx
  43de06:	loope  0x43de0b
  43de08:	xchg   BYTE PTR [edx-0x1f],al
  43de0b:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43de11:	inc    edx
  43de12:	loope  0x43de17
  43de14:	xchg   BYTE PTR [edx-0x1f],al
  43de17:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43de1d:	inc    edx
  43de1e:	loope  0x43de23
  43de20:	xchg   BYTE PTR [edx-0x1f],al
  43de23:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43de29:	inc    edx
  43de2a:	loope  0x43de2f
  43de2c:	xchg   BYTE PTR [edx-0x1f],al
  43de2f:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43de35:	inc    edx
  43de36:	loope  0x43de3b
  43de38:	xchg   BYTE PTR [edx-0x1f],al
  43de3b:	add    eax,DWORD PTR [eax]
  43de3d:	xchg   BYTE PTR [edx-0x1f],al
  43de40:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43de46:	inc    edx
  43de47:	loope  0x43de4c
  43de49:	xchg   BYTE PTR [edx-0x1f],al
  43de4c:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43de52:	inc    edx
  43de53:	loope  0x43de58
  43de55:	xchg   BYTE PTR [edx-0x1f],al
  43de58:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43de5e:	inc    edx
  43de5f:	loope  0x43de64
  43de61:	xchg   BYTE PTR [edx-0x1f],al
  43de64:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43de6a:	inc    edx
  43de6b:	loope  0x43de70
  43de6d:	xchg   BYTE PTR [edx+0xa],al
  43de70:	jmp    0xe94e20fa
  43de75:	test   DWORD PTR [edx+0xa],eax
  43de78:	jmp    0xe94e2102
  43de7d:	test   DWORD PTR [edx+0xa],eax
  43de80:	jmp    0xe94e210a
  43de85:	test   DWORD PTR [edx+0xa],eax
  43de88:	jmp    0xe94e2112
  43de8d:	test   DWORD PTR [edx+0xa],eax
  43de90:	jmp    0xe94e211a
  43de95:	test   DWORD PTR [edx+0xa],eax
  43de98:	jmp    0xe94e2122
  43de9d:	test   DWORD PTR [edx+0xa],eax
  43dea0:	jmp    0xa8663a5
  43dea5:	jmp    0xe94e212f
  43deaa:	test   DWORD PTR [edx+0xa],eax
  43dead:	jmp    0xe94e2137
  43deb2:	test   DWORD PTR [edx+0xa],eax
  43deb5:	jmp    0xe94e213f
  43deba:	test   DWORD PTR [edx+0xa],eax
  43debd:	jmp    0xe94e2147
  43dec2:	test   DWORD PTR [edx+0xa],eax
  43dec5:	jmp    0xe94e214f
  43deca:	test   DWORD PTR [edx+0xa],eax
  43decd:	jmp    0xe94e2157
  43ded2:	test   DWORD PTR [edx+0xa],eax
  43ded5:	jmp    0xe94e215f
  43deda:	test   DWORD PTR [edx+0xa],eax
  43dedd:	jmp    0xe94e2167
  43dee2:	test   DWORD PTR [edx+0xa],eax
  43dee5:	jmp    0x4e216f
  43deea:	out    dx,eax
  43deeb:	inc    ecx
  43deec:	or     al,BYTE PTR [eax]
  43deee:	fild   WORD PTR [ecx+0xa]
  43def1:	add    bh,bl
  43def3:	inc    ecx
  43def4:	or     al,BYTE PTR [eax]
  43def6:	out    dx,eax
  43def7:	inc    ecx
  43def8:	or     al,BYTE PTR [eax]
  43defa:	out    dx,eax
  43defb:	inc    ecx
  43defc:	or     al,BYTE PTR [eax]
  43defe:	fild   WORD PTR [ecx+0xa]
  43df01:	add    bh,bl
  43df03:	inc    ecx
  43df04:	or     al,BYTE PTR [eax]
  43df06:	add    BYTE PTR [edi-0x50fff5bf],ch
  43df0c:	inc    ecx
  43df0d:	or     al,BYTE PTR [eax]
  43df0f:	lahf   
  43df10:	inc    ecx
  43df11:	or     al,BYTE PTR [eax]
  43df13:	lahf   
  43df14:	inc    ecx
  43df15:	or     al,BYTE PTR [eax]
  43df17:	scas   eax,DWORD PTR es:[edi]
  43df18:	inc    ecx
  43df19:	or     al,BYTE PTR [eax]
  43df1b:	scas   eax,DWORD PTR es:[edi]
  43df1c:	inc    ecx
  43df1d:	or     al,BYTE PTR [eax]
  43df1f:	lahf   
  43df20:	inc    ecx
  43df21:	or     al,BYTE PTR [eax]
  43df23:	lahf   
  43df24:	inc    ecx
  43df25:	or     al,BYTE PTR [eax]
  43df27:	outs   dx,DWORD PTR ds:[esi]
  43df28:	inc    ecx
  43df29:	or     al,BYTE PTR [eax]
  43df2b:	outs   dx,DWORD PTR ds:[esi]
  43df2c:	inc    ecx
  43df2d:	or     al,BYTE PTR [eax]
  43df2f:	pop    edi
  43df30:	inc    ecx
  43df31:	or     al,BYTE PTR [eax]
  43df33:	pop    edi
  43df34:	inc    ecx
  43df35:	or     al,BYTE PTR [eax]
  43df37:	outs   dx,DWORD PTR ds:[esi]
  43df38:	inc    ecx
  43df39:	or     al,BYTE PTR [eax]
  43df3b:	outs   dx,DWORD PTR ds:[esi]
  43df3c:	inc    ecx
  43df3d:	or     al,BYTE PTR [eax]
  43df3f:	pop    edi
  43df40:	inc    ecx
  43df41:	or     al,BYTE PTR [eax]
  43df43:	pop    edi
  43df44:	inc    ecx
  43df45:	or     al,BYTE PTR [eax]
  43df47:	das    
  43df48:	inc    ecx
  43df49:	or     al,BYTE PTR [eax]
  43df4b:	das    
  43df4c:	inc    ecx
  43df4d:	or     al,BYTE PTR [eax]
  43df4f:	pop    ds
  43df50:	inc    ecx
  43df51:	or     al,BYTE PTR [eax]
  43df53:	pop    ds
  43df54:	inc    ecx
  43df55:	or     al,BYTE PTR [eax]
  43df57:	das    
  43df58:	inc    ecx
  43df59:	or     al,BYTE PTR [eax]
  43df5b:	das    
  43df5c:	inc    ecx
  43df5d:	or     al,BYTE PTR [eax]
  43df5f:	pop    ds
  43df60:	inc    ecx
  43df61:	or     al,BYTE PTR [eax]
  43df63:	xchg   BYTE PTR [ebx+0xa],bl
  43df66:	add    BYTE PTR [esi+0xa5b],al
  43df6c:	xchg   BYTE PTR [ebx+0xa],bl
  43df6f:	add    BYTE PTR [esi-0x79fff5a5],al
  43df75:	pop    ebx
  43df76:	or     al,BYTE PTR [eax]
  43df78:	xchg   BYTE PTR [ebx+0xa],bl
  43df7b:	add    BYTE PTR [esi-0x79fff5a5],al
  43df81:	pop    ebx
  43df82:	or     al,BYTE PTR [eax]
  43df84:	xchg   BYTE PTR [ebx+0xa],bl
  43df87:	add    BYTE PTR [esi-0x79fff5a5],al
  43df8d:	pop    ebx
  43df8e:	or     al,BYTE PTR [eax]
  43df90:	xchg   BYTE PTR [ebx+0xa],bl
  43df93:	add    BYTE PTR [esi-0x79fff5a5],al
  43df99:	pop    ebx
  43df9a:	or     al,BYTE PTR [eax]
  43df9c:	xchg   BYTE PTR [ebx+0xa],bl
  43df9f:	add    BYTE PTR [esi-0x79fff5a5],al
  43dfa5:	pop    ebx
  43dfa6:	or     al,BYTE PTR [eax]
  43dfa8:	xchg   BYTE PTR [ecx+0xa],bl
  43dfab:	add    BYTE PTR [esi-0x79fff5a7],al
  43dfb1:	pop    ecx
  43dfb2:	or     al,BYTE PTR [eax]
  43dfb4:	xchg   BYTE PTR [ecx+0xa],bl
  43dfb7:	add    BYTE PTR [esi-0x79fff5a7],al
  43dfbd:	pop    ecx
  43dfbe:	or     al,BYTE PTR [eax]
  43dfc0:	xchg   BYTE PTR [ecx+0xa],bl
  43dfc3:	add    BYTE PTR [esi-0x79fff5a7],al
  43dfc9:	pop    ecx
  43dfca:	or     al,BYTE PTR [eax]
  43dfcc:	xchg   BYTE PTR [ecx+0xa],bl
  43dfcf:	add    BYTE PTR [eax],al
  43dfd1:	xchg   BYTE PTR [ecx+0xa],bl
  43dfd4:	add    BYTE PTR [esi-0x79fff5a7],al
  43dfda:	pop    ecx
  43dfdb:	or     al,BYTE PTR [eax]
  43dfdd:	xchg   BYTE PTR [edx-0x1f],al
  43dfe0:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43dfe6:	inc    edx
  43dfe7:	loope  0x43dfec
  43dfe9:	xchg   BYTE PTR [edx-0x1f],al
  43dfec:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43dff2:	inc    edx
  43dff3:	loope  0x43dff8
  43dff5:	xchg   BYTE PTR [edx-0x1f],al
  43dff8:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43dffe:	inc    edx
  43dfff:	loope  0x43e004
  43e001:	xchg   BYTE PTR [edx-0x1f],al
  43e004:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43e00a:	inc    edx
  43e00b:	loope  0x43e010
  43e00d:	xchg   BYTE PTR [edx-0x1f],al
  43e010:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43e016:	inc    edx
  43e017:	loope  0x43e01c
  43e019:	xchg   BYTE PTR [edx-0x1f],al
  43e01c:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43e022:	inc    edx
  43e023:	loope  0x43e028
  43e025:	xchg   BYTE PTR [edx-0x1f],al
  43e028:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43e02e:	inc    edx
  43e02f:	loope  0x43e034
  43e031:	xchg   BYTE PTR [edx-0x1f],al
  43e034:	add    eax,DWORD PTR [eax]
  43e036:	xchg   BYTE PTR [edx-0x1f],al
  43e039:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43e03f:	inc    edx
  43e040:	loope  0x43e045
  43e042:	xchg   BYTE PTR [edx-0x1f],al
  43e045:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43e04b:	inc    edx
  43e04c:	loope  0x43e051
  43e04e:	xchg   BYTE PTR [edx-0x1f],al
  43e051:	add    eax,DWORD PTR [esi-0x79fc1ebe]
  43e057:	inc    edx
  43e058:	or     ch,cl
  43e05a:	test   DWORD PTR [edx+0xa],eax
  43e05d:	jmp    0xe94e22e7
  43e062:	test   DWORD PTR [edx+0xa],eax
  43e065:	jmp    0xe94e22ef
  43e06a:	test   DWORD PTR [edx+0xa],eax
  43e06d:	jmp    0xe94e22f7
  43e072:	test   DWORD PTR [edx+0xa],eax
  43e075:	jmp    0xe94e22ff
  43e07a:	test   DWORD PTR [edx+0xa],eax
  43e07d:	jmp    0xe94e2307
  43e082:	test   DWORD PTR [edx+0xa],eax
  43e085:	jmp    0xe94e230f
  43e08a:	test   DWORD PTR [edx+0xa],eax
  43e08d:	jmp    0xe94e2317
  43e092:	test   DWORD PTR [edx+0xa],eax
  43e095:	jmp    0xe94e231f
  43e09a:	add    BYTE PTR [ebp-0x7a16f5be],al
  43e0a0:	inc    edx
  43e0a1:	or     ch,cl
  43e0a3:	test   DWORD PTR [edx+0xa],eax
  43e0a6:	jmp    0xe94e2330
  43e0ab:	test   DWORD PTR [edx+0xa],eax
  43e0ae:	jmp    0xe94e2338
  43e0b3:	test   DWORD PTR [edx+0xa],eax
  43e0b6:	jmp    0xe94e2340
  43e0bb:	test   DWORD PTR [edx+0xa],eax
  43e0be:	jmp    0xe94e2348
  43e0c3:	test   DWORD PTR [edx+0xa],eax
  43e0c6:	jmp    0xe94e2350
  43e0cb:	test   DWORD PTR [edx+0xa],eax
  43e0ce:	jmp    0x4e2358
  43e0d3:	pop    ds
  43e0d4:	inc    esi
  43e0d5:	or     al,BYTE PTR [eax]
  43e0d7:	pop    ds
  43e0d8:	inc    esi
  43e0d9:	or     al,BYTE PTR [eax]
  43e0db:	das    
  43e0dc:	inc    esi
  43e0dd:	or     al,BYTE PTR [eax]
  43e0df:	das    
  43e0e0:	inc    esi
  43e0e1:	or     al,BYTE PTR [eax]
  43e0e3:	pop    ds
  43e0e4:	inc    esi
  43e0e5:	or     al,BYTE PTR [eax]
  43e0e7:	pop    ds
  43e0e8:	inc    esi
  43e0e9:	or     al,BYTE PTR [eax]
  43e0eb:	out    dx,eax
  43e0ec:	inc    ebp
  43e0ed:	or     al,BYTE PTR [eax]
  43e0ef:	out    dx,eax
  43e0f0:	inc    ebp
  43e0f1:	or     al,BYTE PTR [eax]
  43e0f3:	fild   WORD PTR [ebp+0xa]
  43e0f6:	add    bh,bl
  43e0f8:	inc    ebp
  43e0f9:	or     al,BYTE PTR [eax]
  43e0fb:	out    dx,eax
  43e0fc:	inc    ebp
  43e0fd:	or     al,BYTE PTR [eax]
  43e0ff:	add    bh,ch
  43e101:	inc    ebp
  43e102:	or     al,BYTE PTR [eax]
  43e104:	fild   WORD PTR [ebp+0xa]
  43e107:	add    bh,bl
  43e109:	inc    ebp
  43e10a:	or     al,BYTE PTR [eax]
  43e10c:	scas   eax,DWORD PTR es:[edi]
  43e10d:	inc    ebp
  43e10e:	or     al,BYTE PTR [eax]
  43e110:	scas   eax,DWORD PTR es:[edi]
  43e111:	inc    ebp
  43e112:	or     al,BYTE PTR [eax]
  43e114:	lahf   
  43e115:	inc    ebp
  43e116:	or     al,BYTE PTR [eax]
  43e118:	lahf   
  43e119:	inc    ebp
  43e11a:	or     al,BYTE PTR [eax]
  43e11c:	scas   eax,DWORD PTR es:[edi]
  43e11d:	inc    ebp
  43e11e:	or     al,BYTE PTR [eax]
  43e120:	scas   eax,DWORD PTR es:[edi]
  43e121:	inc    ebp
  43e122:	or     al,BYTE PTR [eax]
  43e124:	lahf   
  43e125:	inc    ebp
  43e126:	or     al,BYTE PTR [eax]
  43e128:	lahf   
  43e129:	inc    ebp
  43e12a:	or     al,BYTE PTR [eax]
  43e12c:	outs   dx,DWORD PTR ds:[esi]
  43e12d:	inc    ebp
  43e12e:	or     al,BYTE PTR [eax]
  43e130:	outs   dx,DWORD PTR ds:[esi]
  43e131:	inc    ebp
  43e132:	or     al,BYTE PTR [eax]
  43e134:	pop    edi
  43e135:	inc    ebp
  43e136:	or     al,BYTE PTR [eax]
  43e138:	pop    edi
  43e139:	inc    ebp
  43e13a:	or     al,BYTE PTR [eax]
  43e13c:	outs   dx,DWORD PTR ds:[esi]
  43e13d:	inc    ebp
  43e13e:	or     al,BYTE PTR [eax]
  43e140:	outs   dx,DWORD PTR ds:[esi]
  43e141:	inc    ebp
  43e142:	or     al,BYTE PTR [eax]
  43e144:	pop    edi
  43e145:	inc    ebp
  43e146:	or     al,BYTE PTR [eax]
  43e148:	pop    edi
  43e149:	inc    ebp
  43e14a:	or     al,BYTE PTR [eax]
  43e14c:	xchg   BYTE PTR [ebx],ch
  43e14e:	or     al,BYTE PTR [eax]
  43e150:	xchg   BYTE PTR [ebx],ch
  43e152:	or     al,BYTE PTR [eax]
  43e154:	xchg   BYTE PTR [ebx],ch
  43e156:	or     al,BYTE PTR [eax]
  43e158:	xchg   BYTE PTR [ebx],ch
  43e15a:	or     al,BYTE PTR [eax]
  43e15c:	xchg   BYTE PTR [ebx],ch
  43e15e:	or     al,BYTE PTR [eax]
  43e160:	xchg   BYTE PTR [ebx],ch
  43e162:	or     al,BYTE PTR [eax]
  43e164:	add    BYTE PTR [esi-0x79fff5d5],al
  43e16a:	sub    ecx,DWORD PTR [edx]
  43e16c:	add    BYTE PTR [esi-0x79fff5d5],al
  43e172:	sub    ecx,DWORD PTR [edx]
  43e174:	add    BYTE PTR [esi-0x79fff5d5],al
  43e17a:	sub    ecx,DWORD PTR [edx]
  43e17c:	add    BYTE PTR [esi-0x79fff5d5],al
  43e182:	sub    ecx,DWORD PTR [edx]
  43e184:	add    BYTE PTR [esi-0x79fff5d5],al
  43e18a:	sub    ecx,DWORD PTR [edx]
  43e18c:	add    BYTE PTR [esi-0x79fff5d5],al
  43e192:	sub    ecx,DWORD PTR [edx]
  43e194:	add    BYTE PTR [esi-0x79fff5d5],al
  43e19a:	sub    ecx,DWORD PTR [edx]
  43e19c:	add    BYTE PTR [esi-0x79fff5d5],al
  43e1a2:	sub    ecx,DWORD PTR [edx]
  43e1a4:	add    BYTE PTR [esi-0x79fff5d5],al
  43e1aa:	sub    ecx,DWORD PTR [edx]
  43e1ac:	add    BYTE PTR [esi-0x79fff5d7],al
  43e1b2:	sub    DWORD PTR [edx],ecx
  43e1b4:	add    BYTE PTR [esi-0x79fff5d7],al
  43e1ba:	sub    DWORD PTR [edx],ecx
  43e1bc:	add    BYTE PTR [esi-0x79fff5d7],al
  43e1c2:	sub    DWORD PTR [edx],ecx
  43e1c4:	add    BYTE PTR [esi+0x3e342],al
  43e1ca:	xchg   BYTE PTR [edx-0x1d],al
  43e1cd:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  43e1d3:	inc    edx
  43e1d4:	jecxz  0x43e1d9
  43e1d6:	xchg   BYTE PTR [edx-0x1d],al
  43e1d9:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  43e1df:	inc    edx
  43e1e0:	jecxz  0x43e1e5
  43e1e2:	xchg   BYTE PTR [edx-0x1d],al
  43e1e5:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  43e1eb:	inc    edx
  43e1ec:	jecxz  0x43e1f1
  43e1ee:	xchg   BYTE PTR [edx-0x1d],al
  43e1f1:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  43e1f7:	inc    edx
  43e1f8:	jecxz  0x43e1fd
  43e1fa:	xchg   BYTE PTR [edx-0x1d],al
  43e1fd:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  43e203:	inc    edx
  43e204:	jecxz  0x43e209
  43e206:	xchg   BYTE PTR [edx-0x1d],al
  43e209:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  43e20f:	inc    edx
  43e210:	jecxz  0x43e215
  43e212:	xchg   BYTE PTR [edx-0x1d],al
  43e215:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  43e21b:	inc    edx
  43e21c:	jecxz  0x43e221
  43e21e:	xchg   BYTE PTR [edx-0x1d],al
  43e221:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  43e227:	inc    edx
  43e228:	jecxz  0x43e22d
  43e22a:	xchg   BYTE PTR [edx-0x1d],al
  43e22d:	add    eax,DWORD PTR [eax]
  43e22f:	xchg   BYTE PTR [edx-0x1d],al
  43e232:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  43e238:	inc    edx
  43e239:	jecxz  0x43e23e
  43e23b:	xchg   BYTE PTR [edx-0x1d],al
  43e23e:	add    eax,DWORD PTR [esi-0x7a16f5be]
  43e244:	inc    edx
  43e245:	or     ch,cl
  43e247:	test   DWORD PTR [edx+0xa],eax
  43e24a:	jmp    0xe94e24d4
  43e24f:	test   DWORD PTR [edx+0xa],eax
  43e252:	jmp    0xe94e24dc
  43e257:	test   DWORD PTR [edx+0xa],eax
  43e25a:	jmp    0xe94e24e4
  43e25f:	test   DWORD PTR [edx+0xa],eax
  43e262:	jmp    0xe94e24ec
  43e267:	test   DWORD PTR [edx+0xa],eax
  43e26a:	jmp    0xe94e24f4
  43e26f:	test   DWORD PTR [edx+0xa],eax
  43e272:	jmp    0xe94e24fc
  43e277:	test   DWORD PTR [edx+0xa],eax
  43e27a:	jmp    0xe94e2504
  43e27f:	test   DWORD PTR [edx+0xa],eax
  43e282:	jmp    0xe94e250c
  43e287:	test   DWORD PTR [edx+0xa],eax
  43e28a:	jmp    0xe94e2514
  43e28f:	test   DWORD PTR [edx+0xa],eax
  43e292:	jmp    0xa866797
  43e297:	jmp    0xe94e2521
  43e29c:	test   DWORD PTR [edx+0xa],eax
  43e29f:	jmp    0xe94e2529
  43e2a4:	test   DWORD PTR [edx+0xa],eax
  43e2a7:	jmp    0xe94e2531
  43e2ac:	test   DWORD PTR [edx+0xa],eax
  43e2af:	jmp    0xe94e2539
  43e2b4:	test   DWORD PTR [edx+0xa],eax
  43e2b7:	jmp    0x4e2541
  43e2bc:	pop    edi
  43e2bd:	inc    edx
  43e2be:	or     al,BYTE PTR [eax]
  43e2c0:	outs   dx,DWORD PTR ds:[esi]
  43e2c1:	inc    edx
  43e2c2:	or     al,BYTE PTR [eax]
  43e2c4:	outs   dx,DWORD PTR ds:[esi]
  43e2c5:	inc    edx
  43e2c6:	or     al,BYTE PTR [eax]
  43e2c8:	pop    edi
  43e2c9:	inc    edx
  43e2ca:	or     al,BYTE PTR [eax]
  43e2cc:	pop    edi
  43e2cd:	inc    edx
  43e2ce:	or     al,BYTE PTR [eax]
  43e2d0:	das    
  43e2d1:	inc    edx
  43e2d2:	or     al,BYTE PTR [eax]
  43e2d4:	das    
  43e2d5:	inc    edx
  43e2d6:	or     al,BYTE PTR [eax]
  43e2d8:	pop    ds
  43e2d9:	inc    edx
  43e2da:	or     al,BYTE PTR [eax]
  43e2dc:	pop    ds
  43e2dd:	inc    edx
  43e2de:	or     al,BYTE PTR [eax]
  43e2e0:	das    
  43e2e1:	inc    edx
  43e2e2:	or     al,BYTE PTR [eax]
  43e2e4:	das    
  43e2e5:	inc    edx
  43e2e6:	or     al,BYTE PTR [eax]
  43e2e8:	pop    ds
  43e2e9:	inc    edx
  43e2ea:	or     al,BYTE PTR [eax]
  43e2ec:	pop    ds
  43e2ed:	inc    edx
  43e2ee:	or     al,BYTE PTR [eax]
  43e2f0:	out    dx,eax
  43e2f1:	inc    ecx
  43e2f2:	or     al,BYTE PTR [eax]
  43e2f4:	out    dx,eax
  43e2f5:	inc    ecx
  43e2f6:	or     al,BYTE PTR [eax]
  43e2f8:	add    bh,bl
  43e2fa:	inc    ecx
  43e2fb:	or     al,BYTE PTR [eax]
  43e2fd:	fild   WORD PTR [ecx+0xa]
  43e300:	add    bh,ch
  43e302:	inc    ecx
  43e303:	or     al,BYTE PTR [eax]
  43e305:	out    dx,eax
  43e306:	inc    ecx
  43e307:	or     al,BYTE PTR [eax]
  43e309:	fild   WORD PTR [ecx+0xa]
  43e30c:	add    bh,bl
  43e30e:	inc    ecx
  43e30f:	or     al,BYTE PTR [eax]
  43e311:	scas   eax,DWORD PTR es:[edi]
  43e312:	inc    ecx
  43e313:	or     al,BYTE PTR [eax]
  43e315:	scas   eax,DWORD PTR es:[edi]
  43e316:	inc    ecx
  43e317:	or     al,BYTE PTR [eax]
  43e319:	lahf   
  43e31a:	inc    ecx
  43e31b:	or     al,BYTE PTR [eax]
  43e31d:	lahf   
  43e31e:	inc    ecx
  43e31f:	or     al,BYTE PTR [eax]
  43e321:	scas   eax,DWORD PTR es:[edi]
  43e322:	inc    ecx
  43e323:	or     al,BYTE PTR [eax]
  43e325:	scas   eax,DWORD PTR es:[edi]
  43e326:	inc    ecx
  43e327:	or     al,BYTE PTR [eax]
  43e329:	lahf   
  43e32a:	inc    ecx
  43e32b:	or     al,BYTE PTR [eax]
  43e32d:	lahf   
  43e32e:	inc    ecx
  43e32f:	or     al,BYTE PTR [eax]
  43e331:	outs   dx,DWORD PTR ds:[esi]
  43e332:	inc    ecx
  43e333:	or     al,BYTE PTR [eax]
  43e335:	xchg   BYTE PTR [ebx],ch
  43e337:	or     al,BYTE PTR [eax]
  43e339:	xchg   BYTE PTR [ebx],ch
  43e33b:	or     al,BYTE PTR [eax]
  43e33d:	xchg   BYTE PTR [ebx],ch
  43e33f:	or     al,BYTE PTR [eax]
  43e341:	xchg   BYTE PTR [ebx],ch
  43e343:	or     al,BYTE PTR [eax]
  43e345:	xchg   BYTE PTR [ebx],ch
  43e347:	or     al,BYTE PTR [eax]
  43e349:	xchg   BYTE PTR [ebx],ch
  43e34b:	or     al,BYTE PTR [eax]
  43e34d:	xchg   BYTE PTR [ebx],ch
  43e34f:	or     al,BYTE PTR [eax]
  43e351:	xchg   BYTE PTR [ebx],ch
  43e353:	or     al,BYTE PTR [eax]
  43e355:	xchg   BYTE PTR [ebx],ch
  43e357:	or     al,BYTE PTR [eax]
  43e359:	xchg   BYTE PTR [ebx],ch
  43e35b:	or     al,BYTE PTR [eax]
  43e35d:	add    BYTE PTR [esi-0x79fff5d5],al
  43e363:	sub    ecx,DWORD PTR [edx]
  43e365:	add    BYTE PTR [esi-0x79fff5d5],al
  43e36b:	sub    ecx,DWORD PTR [edx]
  43e36d:	add    BYTE PTR [esi-0x79fff5d5],al
  43e373:	sub    ecx,DWORD PTR [edx]
  43e375:	add    BYTE PTR [esi-0x79fff5d5],al
  43e37b:	sub    ecx,DWORD PTR [edx]
  43e37d:	add    BYTE PTR [esi-0x79fff5d5],al
  43e383:	sub    ecx,DWORD PTR [edx]
  43e385:	add    BYTE PTR [esi-0x79fff5d5],al
  43e38b:	sub    ecx,DWORD PTR [edx]
  43e38d:	add    BYTE PTR [esi-0x79fff5d5],al
  43e393:	sub    ecx,DWORD PTR [edx]
  43e395:	add    BYTE PTR [esi-0x79fff5d5],al
  43e39b:	sub    ecx,DWORD PTR [edx]
  43e39d:	add    BYTE PTR [esi-0x79fff5d5],al
  43e3a3:	sub    ecx,DWORD PTR [edx]
  43e3a5:	add    BYTE PTR [esi-0x79fff5d5],al
  43e3ab:	sub    ecx,DWORD PTR [edx]
  43e3ad:	add    BYTE PTR [esi-0x79fc1cbe],al
  43e3b3:	inc    edx
  43e3b4:	jecxz  0x43e3b9
  43e3b6:	xchg   BYTE PTR [edx-0x1d],al
  43e3b9:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  43e3bf:	inc    edx
  43e3c0:	jecxz  0x43e3c5
  43e3c2:	add    BYTE PTR [esi-0x79fc1cbe],al
  43e3c8:	inc    edx
  43e3c9:	jecxz  0x43e3ce
  43e3cb:	xchg   BYTE PTR [edx-0x1d],al
  43e3ce:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  43e3d4:	inc    edx
  43e3d5:	jecxz  0x43e3da
  43e3d7:	xchg   BYTE PTR [edx-0x1d],al
  43e3da:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  43e3e0:	inc    edx
  43e3e1:	jecxz  0x43e3e6
  43e3e3:	xchg   BYTE PTR [edx-0x1d],al
  43e3e6:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  43e3ec:	inc    edx
  43e3ed:	jecxz  0x43e3f2
  43e3ef:	xchg   BYTE PTR [edx-0x1d],al
  43e3f2:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  43e3f8:	inc    edx
  43e3f9:	jecxz  0x43e3fe
  43e3fb:	xchg   BYTE PTR [edx-0x1d],al
  43e3fe:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  43e404:	inc    edx
  43e405:	jecxz  0x43e40a
  43e407:	xchg   BYTE PTR [edx-0x1d],al
  43e40a:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  43e410:	inc    edx
  43e411:	jecxz  0x43e416
  43e413:	xchg   BYTE PTR [edx-0x1d],al
  43e416:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  43e41c:	inc    edx
  43e41d:	jecxz  0x43e422
  43e41f:	xchg   BYTE PTR [edx-0x1d],al
  43e422:	add    eax,DWORD PTR [esi+0x3e342]
  43e428:	xchg   BYTE PTR [edx+0xa],al
  43e42b:	jmp    0xe94e26b5
  43e430:	test   DWORD PTR [edx+0xa],eax
  43e433:	jmp    0xe94e26bd
  43e438:	test   DWORD PTR [edx+0xa],eax
  43e43b:	jmp    0xe94e26c5
  43e440:	test   DWORD PTR [edx+0xa],eax
  43e443:	jmp    0xe94e26cd
  43e448:	test   DWORD PTR [edx+0xa],eax
  43e44b:	jmp    0xe94e26d5
  43e450:	test   DWORD PTR [edx+0xa],eax
  43e453:	jmp    0xe94e26dd
  43e458:	test   DWORD PTR [edx+0xa],eax
  43e45b:	jmp    0xe94e26e5
  43e460:	test   DWORD PTR [edx+0xa],eax
  43e463:	jmp    0xe94e26ed
  43e468:	test   DWORD PTR [edx+0xa],eax
  43e46b:	jmp    0xe94e26f5
  43e470:	test   DWORD PTR [edx+0xa],eax
  43e473:	jmp    0xe94e26fd
  43e478:	test   DWORD PTR [edx+0xa],eax
  43e47b:	jmp    0xe94e2705
  43e480:	test   DWORD PTR [edx+0xa],eax
  43e483:	jmp    0xe94e270d
  43e488:	test   DWORD PTR [edx+0xa],eax
  43e48b:	jmp    0xa866990
  43e490:	jmp    0xe94e271a
  43e495:	test   DWORD PTR [edx+0xa],eax
  43e498:	jmp    0xe94e2722
  43e49d:	test   DWORD PTR [edx+0xa],eax
  43e4a0:	jmp    0x4e272a
  43e4a5:	scas   eax,DWORD PTR es:[edi]
  43e4a6:	or     al,BYTE PTR ds:[eax]
  43e4a9:	scas   eax,DWORD PTR es:[edi]
  43e4aa:	or     al,BYTE PTR ds:[eax]
  43e4ad:	lahf   
  43e4ae:	or     al,BYTE PTR ds:[eax]
  43e4b1:	lahf   
  43e4b2:	or     al,BYTE PTR ds:[eax]
  43e4b5:	outs   dx,DWORD PTR ds:[esi]
  43e4b6:	inc    esi
  43e4b7:	or     al,BYTE PTR [eax]
  43e4b9:	outs   dx,DWORD PTR ds:[esi]
  43e4ba:	inc    esi
  43e4bb:	or     al,BYTE PTR [eax]
  43e4bd:	pop    edi
  43e4be:	inc    esi
  43e4bf:	or     al,BYTE PTR [eax]
  43e4c1:	pop    edi
  43e4c2:	inc    esi
  43e4c3:	or     al,BYTE PTR [eax]
  43e4c5:	outs   dx,DWORD PTR ds:[esi]
  43e4c6:	inc    esi
  43e4c7:	or     al,BYTE PTR [eax]
  43e4c9:	outs   dx,DWORD PTR ds:[esi]
  43e4ca:	inc    esi
  43e4cb:	or     al,BYTE PTR [eax]
  43e4cd:	pop    edi
  43e4ce:	inc    esi
  43e4cf:	or     al,BYTE PTR [eax]
  43e4d1:	pop    edi
  43e4d2:	inc    esi
  43e4d3:	or     al,BYTE PTR [eax]
  43e4d5:	das    
  43e4d6:	inc    esi
  43e4d7:	or     al,BYTE PTR [eax]
  43e4d9:	das    
  43e4da:	inc    esi
  43e4db:	or     al,BYTE PTR [eax]
  43e4dd:	pop    ds
  43e4de:	inc    esi
  43e4df:	or     al,BYTE PTR [eax]
  43e4e1:	pop    ds
  43e4e2:	inc    esi
  43e4e3:	or     al,BYTE PTR [eax]
  43e4e5:	das    
  43e4e6:	inc    esi
  43e4e7:	or     al,BYTE PTR [eax]
  43e4e9:	das    
  43e4ea:	inc    esi
  43e4eb:	or     al,BYTE PTR [eax]
  43e4ed:	pop    ds
  43e4ee:	inc    esi
  43e4ef:	or     al,BYTE PTR [eax]
  43e4f1:	add    BYTE PTR [edi],bl
  43e4f3:	inc    esi
  43e4f4:	or     al,BYTE PTR [eax]
  43e4f6:	out    dx,eax
  43e4f7:	inc    ebp
  43e4f8:	or     al,BYTE PTR [eax]
  43e4fa:	out    dx,eax
  43e4fb:	inc    ebp
  43e4fc:	or     al,BYTE PTR [eax]
  43e4fe:	fild   WORD PTR [ebp+0xa]
  43e501:	add    bh,bl
  43e503:	inc    ebp
  43e504:	or     al,BYTE PTR [eax]
  43e506:	out    dx,eax
  43e507:	inc    ebp
  43e508:	or     al,BYTE PTR [eax]
  43e50a:	out    dx,eax
  43e50b:	inc    ebp
  43e50c:	or     al,BYTE PTR [eax]
  43e50e:	fild   WORD PTR [ebp+0xa]
  43e511:	add    bh,bl
  43e513:	inc    ebp
  43e514:	or     al,BYTE PTR [eax]
  43e516:	scas   eax,DWORD PTR es:[edi]
  43e517:	inc    ebp
  43e518:	or     al,BYTE PTR [eax]
  43e51a:	scas   eax,DWORD PTR es:[edi]
  43e51b:	inc    ebp
  43e51c:	or     al,BYTE PTR [eax]
  43e51e:	xchg   BYTE PTR [ebx],ch
  43e520:	or     al,BYTE PTR [eax]
  43e522:	xchg   BYTE PTR [ebx],ch
  43e524:	or     al,BYTE PTR [eax]
  43e526:	xchg   BYTE PTR [ebx],ch
  43e528:	or     al,BYTE PTR [eax]
  43e52a:	xchg   BYTE PTR [ebx],ch
  43e52c:	or     al,BYTE PTR [eax]
  43e52e:	xchg   BYTE PTR [ebx],ch
  43e530:	or     al,BYTE PTR [eax]
  43e532:	xchg   BYTE PTR [ebx],ch
  43e534:	or     al,BYTE PTR [eax]
  43e536:	xchg   BYTE PTR [ebx],ch
  43e538:	or     al,BYTE PTR [eax]
  43e53a:	xchg   BYTE PTR [ebx],ch
  43e53c:	or     al,BYTE PTR [eax]
  43e53e:	xchg   BYTE PTR [ebx],ch
  43e540:	or     al,BYTE PTR [eax]
  43e542:	xchg   BYTE PTR [ebx],ch
  43e544:	or     al,BYTE PTR [eax]
  43e546:	xchg   BYTE PTR [ebx],ch
  43e548:	or     al,BYTE PTR [eax]
  43e54a:	xchg   BYTE PTR [ebx],ch
  43e54c:	or     al,BYTE PTR [eax]
  43e54e:	xchg   BYTE PTR [ebx],ch
  43e550:	or     al,BYTE PTR [eax]
  43e552:	xchg   BYTE PTR [ebx],ch
  43e554:	or     al,BYTE PTR [eax]
  43e556:	add    BYTE PTR [esi-0x79fff5d5],al
  43e55c:	sub    ecx,DWORD PTR [edx]
  43e55e:	add    BYTE PTR [esi-0x79fff5d5],al
  43e564:	sub    ecx,DWORD PTR [edx]
  43e566:	add    BYTE PTR [esi-0x79fff5d5],al
  43e56c:	sub    ecx,DWORD PTR [edx]
  43e56e:	add    BYTE PTR [esi-0x79fff5d5],al
  43e574:	sub    ecx,DWORD PTR [edx]
  43e576:	add    BYTE PTR [esi-0x79fff5d5],al
  43e57c:	sub    ecx,DWORD PTR [edx]
  43e57e:	add    BYTE PTR [esi-0x79fff5d5],al
  43e584:	sub    ecx,DWORD PTR [edx]
  43e586:	add    BYTE PTR [esi-0x79fff5d5],al
  43e58c:	sub    ecx,DWORD PTR [edx]
  43e58e:	add    BYTE PTR [esi-0x79fff5d5],al
  43e594:	sub    ecx,DWORD PTR [edx]
  43e596:	add    BYTE PTR [esi-0x79fc1cbe],al
  43e59c:	inc    edx
  43e59d:	jecxz  0x43e5a2
  43e59f:	xchg   BYTE PTR [edx-0x1d],al
  43e5a2:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  43e5a8:	inc    edx
  43e5a9:	jecxz  0x43e5ae
  43e5ab:	xchg   BYTE PTR [edx-0x1d],al
  43e5ae:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  43e5b4:	inc    edx
  43e5b5:	jecxz  0x43e5ba
  43e5b7:	xchg   BYTE PTR [edx-0x1d],al
  43e5ba:	add    eax,DWORD PTR [eax]
  43e5bc:	xchg   BYTE PTR [edx-0x1d],al
  43e5bf:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  43e5c5:	inc    edx
  43e5c6:	jecxz  0x43e5cb
  43e5c8:	xchg   BYTE PTR [edx-0x1d],al
  43e5cb:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  43e5d1:	inc    edx
  43e5d2:	jecxz  0x43e5d7
  43e5d4:	xchg   BYTE PTR [edx-0x1d],al
  43e5d7:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  43e5dd:	inc    edx
  43e5de:	jecxz  0x43e5e3
  43e5e0:	xchg   BYTE PTR [edx-0x1d],al
  43e5e3:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  43e5e9:	inc    edx
  43e5ea:	jecxz  0x43e5ef
  43e5ec:	xchg   BYTE PTR [edx-0x1d],al
  43e5ef:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  43e5f5:	inc    edx
  43e5f6:	jecxz  0x43e5fb
  43e5f8:	xchg   BYTE PTR [edx-0x1d],al
  43e5fb:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  43e601:	inc    edx
  43e602:	jecxz  0x43e607
  43e604:	xchg   BYTE PTR [edx-0x1d],al
  43e607:	add    eax,DWORD PTR [esi-0x79fc1cbe]
  43e60d:	inc    edx
  43e60e:	jecxz  0x43e613
  43e610:	xchg   BYTE PTR [edx+0xa],al
  43e613:	jmp    0xe94e289d
  43e618:	test   DWORD PTR [edx+0xa],eax
  43e61b:	jmp    0xe94e28a5
  43e620:	add    BYTE PTR [ebp-0x7a16f5be],al
  43e626:	inc    edx
  43e627:	or     ch,cl
  43e629:	test   DWORD PTR [edx+0xa],eax
  43e62c:	jmp    0xe94e28b6
  43e631:	test   DWORD PTR [edx+0xa],eax
  43e634:	jmp    0xe94e28be
  43e639:	test   DWORD PTR [edx+0xa],eax
  43e63c:	jmp    0xe94e28c6
  43e641:	test   DWORD PTR [edx+0xa],eax
  43e644:	jmp    0xe94e28ce
  43e649:	test   DWORD PTR [edx+0xa],eax
  43e64c:	jmp    0xe94e28d6
  43e651:	test   DWORD PTR [edx+0xa],eax
  43e654:	jmp    0xe94e28de
  43e659:	test   DWORD PTR [edx+0xa],eax
  43e65c:	jmp    0xe94e28e6
  43e661:	test   DWORD PTR [edx+0xa],eax
  43e664:	jmp    0xe94e28ee
  43e669:	test   DWORD PTR [edx+0xa],eax
  43e66c:	jmp    0xe94e28f6
  43e671:	test   DWORD PTR [edx+0xa],eax
  43e674:	jmp    0xe94e28fe
  43e679:	test   DWORD PTR [edx+0xa],eax
  43e67c:	jmp    0xe94e2906
  43e681:	test   DWORD PTR [edx+0xa],eax
  43e684:	jmp    0xa866b89
  43e689:	jmp    0x4e2913
  43e68e:	out    dx,eax
  43e68f:	inc    edx
  43e690:	or     al,BYTE PTR [eax]
  43e692:	fild   WORD PTR [edx+0xa]
  43e695:	add    bh,bl
  43e697:	inc    edx
  43e698:	or     al,BYTE PTR [eax]
  43e69a:	scas   eax,DWORD PTR es:[edi]
  43e69b:	inc    edx
  43e69c:	or     al,BYTE PTR [eax]
  43e69e:	scas   eax,DWORD PTR es:[edi]
  43e69f:	inc    edx
  43e6a0:	or     al,BYTE PTR [eax]
  43e6a2:	lahf   
  43e6a3:	inc    edx
  43e6a4:	or     al,BYTE PTR [eax]
  43e6a6:	fisub  WORD PTR [ebx-0x5c]
  43e6a9:	mov    esp,edx
  43e6ab:	push   edx
  43e6ac:	(bad)  
  43e6ad:	xor    BYTE PTR [esi],dh
  43e6af:	cmp    DWORD PTR [ebp-0x19],0x59add142
  43e6b6:	jnp    0x43e66f
  43e6b8:	popa   
  43e6b9:	aaa    
  43e6ba:	ss adc al,0x83
  43e6bd:	int3   
  43e6be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e6bf:	test   BYTE PTR ds:0x72d40a57,ah
  43e6c5:	aad    0xb7
  43e6c7:	sbb    BYTE PTR [esi+0x1bc623d1],dl
  43e6cd:	ins    DWORD PTR es:[edi],dx
  43e6ce:	lds    edi,FWORD PTR [ebx+0x5bb99a73]
  43e6d4:	imul   eax,DWORD PTR [eax],0x59299787
  43e6da:	aad    0xd7
  43e6dc:	pop    ecx
  43e6dd:	mov    al,BYTE PTR [eax]
  43e6df:	loopne 0x43e75f
  43e6e1:	in     al,0x50
  43e6e3:	loop   0x43e760
  43e6e5:	mov    esp,0x612943fb
  43e6ea:	add    bl,cl
  43e6ec:	mov    bl,0x12
  43e6ee:	loope  0x43e6ae
  43e6f0:	add    eax,0x5be018bb
  43e6f5:	adc    eax,0xd25130a5
  43e6fa:	fcom   QWORD PTR [ebx]
  43e6fc:	push   0xea997a09
  43e701:	lods   al,BYTE PTR ds:[esi]
  43e702:	mov    ch,0xfe
  43e704:	loop   0x43e686
  43e706:	adc    DWORD PTR [esi-0x5a0c068d],eax
  43e70c:	xchg   esi,eax
  43e70d:	jge    0x43e6cd
  43e70f:	mov    dh,0xfe
  43e711:	lahf   
  43e712:	loope  0x43e784
  43e714:	dec    ebx
  43e715:	(bad)  
  43e716:	jl     0x43e790
  43e718:	cmp    eax,0xac6aa099
  43e71d:	pushf  
  43e71e:	jae    0x43e769
  43e720:	sub    BYTE PTR [ebx-0x78],0xf6
  43e724:	scas   eax,DWORD PTR es:[edi]
  43e725:	les    esp,FWORD PTR [ebp-0x7f62c89c]
  43e72b:	retf   
  43e72c:	rol    DWORD PTR ds:0xc60f7dad,1
  43e732:	or     ah,bh
  43e734:	stos   BYTE PTR es:[edi],al
  43e735:	jb     0x43e74c
  43e737:	mov    bl,BYTE PTR [eax]
  43e739:	and    DWORD PTR [ebp-0x48daebe7],eax
  43e73f:	(bad)  [edi-0x68]
  43e742:	fldcw  WORD PTR [ecx-0x22]
  43e745:	not    BYTE PTR [edi]
  43e747:	inc    ebp
  43e748:	jae    0x43e75e
  43e74a:	lea    edi,[ebx]
  43e74c:	mov    eax,ds:0x20001ac
  43e751:	outs   dx,DWORD PTR ds:[esi]
  43e752:	fisttp WORD PTR [ebx]
  43e754:	sbb    ebp,esi
  43e756:	inc    ebx
  43e757:	push   ebp
  43e758:	jp     0x43e7a4
  43e75a:	std    
  43e75b:	in     eax,dx
  43e75c:	icebp  
  43e75d:	pop    ebx
  43e75e:	mov    ebx,0x9708e800
  43e763:	gs mov esp,0xc3d10d94
  43e769:	leave  
  43e76a:	cwde   
  43e76b:	mov    edi,0x682ca841
  43e770:	daa    
  43e771:	inc    esp
  43e772:	push   esi
  43e773:	nop
  43e774:	inc    ebx
  43e775:	jns    0x43e76e
  43e777:	aad    0x47
  43e779:	push   ecx
  43e77a:	outs   dx,BYTE PTR ds:[esi]
  43e77b:	inc    esi
  43e77c:	call   0x4d6337c5
  43e781:	inc    edx
  43e782:	cmc    
  43e783:	jg     0x43e7a8
  43e785:	add    ch,BYTE PTR [ebp-0x4c]
  43e788:	in     al,dx
  43e789:	or     eax,0x3fa159d2
  43e78e:	ds (bad) 
  43e790:	fidivr DWORD PTR [eax+0x3c]
  43e793:	mov    esp,0xb6b6ef67
  43e798:	enter  0x3e13,0xfc
  43e79c:	(bad)  
  43e79d:	imul   BYTE PTR [esi-0x19]
  43e7a0:	or     DWORD PTR [esi],0x1d
  43e7a3:	aad    0xda
  43e7a5:	repnz push ss
  43e7a7:	xchg   ebp,eax
  43e7a8:	xchg   ecx,eax
  43e7a9:	pop    eax
  43e7aa:	ss scas al,BYTE PTR es:[edi]
  43e7ac:	mov    esi,0x6a71ad5
  43e7b1:	fwait
  43e7b2:	mov    edx,0xb4ab0082
  43e7b7:	sub    bl,BYTE PTR [eax]
  43e7b9:	in     al,dx
  43e7ba:	ret    
  43e7bb:	popa   
  43e7bc:	push   edx
  43e7bd:	ficomp WORD PTR [eax-0x68315466]
  43e7c3:	jg     0x43e818
  43e7c5:	adc    al,BYTE PTR fs:[ecx+0x3f]
  43e7c9:	jae    0x43e7c5
  43e7cb:	(bad)  
  43e7cc:	and    DWORD PTR [ebx-0x6d620ead],esi
  43e7d2:	out    0xdb,al
  43e7d4:	inc    edx
  43e7d5:	fcmovb st,st(7)
  43e7d7:	push   cs
  43e7d8:	repz mov bh,0x89
  43e7db:	jno    0x43e801
  43e7dd:	dec    esi
  43e7de:	jnp    0x43e7ce
  43e7e0:	out    0x7f,eax
  43e7e2:	jmp    0x43e813
  43e7e4:	mov    ah,dl
  43e7e6:	sbb    ecx,DWORD PTR [bx+di-0xfc8]
  43e7eb:	dec    edx
  43e7ec:	(bad)  
  43e7ed:	pop    ss
  43e7ee:	test   eax,0x71baf83
  43e7f3:	xchg   edi,eax
  43e7f4:	std    
  43e7f5:	cmp    BYTE PTR [edi],bh
  43e7f7:	xchg   edx,eax
  43e7f8:	cmp    edx,DWORD PTR [ebp+0x4d]
  43e7fb:	or     dl,BYTE PTR [ebp+0x36cd3bc7]
  43e801:	dec    ecx
  43e802:	(bad)  
  43e803:	loopne 0x43e79d
  43e805:	or     BYTE PTR [ecx-0x59],ch
  43e808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e809:	lods   al,BYTE PTR ds:[esi]
  43e80a:	inc    ebx
  43e80b:	pop    ss
  43e80c:	test   BYTE PTR [ecx],0xbe
  43e80f:	adc    eax,0x72c1d419
  43e814:	mov    DWORD PTR [ebx],esp
  43e816:	or     al,0x4d
  43e818:	jb     0x43e81a
  43e81a:	inc    esi
  43e81b:	(bad)  
  43e81c:	retf   0x3999
  43e81f:	xor    DWORD PTR [eax],0xffffffcb
  43e822:	pop    edx
  43e823:	push   0x4c265e71
  43e828:	fidiv  WORD PTR [ecx-0x333223a3]
  43e82e:	jnp    0x43e825
  43e830:	lods   al,BYTE PTR ds:[esi]
  43e831:	out    0x5a,eax
  43e833:	adc    DWORD PTR [edx+edi*2],ebx
  43e836:	lds    ebp,FWORD PTR [ecx+0x66d28873]
  43e83c:	push   0x45
  43e83e:	mov    ch,0x97
  43e840:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  43e842:	data16 adc bh,BYTE PTR ds:0x27e4f5e4
  43e849:	shl    BYTE PTR [ebp-0x648553d1],cl
  43e84f:	ror    DWORD PTR [ebp-0x69fc0b8d],1
  43e855:	ss and ecx,esp
  43e858:	stc    
  43e859:	dec    DWORD PTR [eax-0x1179be6f]
  43e85f:	pop    esp
  43e860:	dec    ebp
  43e861:	inc    edi
  43e862:	push   edx
  43e863:	mov    esp,0x949d3bc5
  43e868:	push   eax
  43e869:	xor    al,0x1e
  43e86b:	int3   
  43e86c:	xchg   edx,eax
  43e86d:	xor    cl,ch
  43e86f:	call   0x3962a20e
  43e874:	adc    al,BYTE PTR [eax]
  43e876:	clc    
  43e877:	and    BYTE PTR [ecx-0x69],al
  43e87a:	fwait
  43e87b:	aaa    
  43e87c:	repnz mov eax,ds:0x5659db00
  43e882:	dec    ebp
  43e883:	inc    esp
  43e884:	shl    DWORD PTR ss:[ecx+0x18dc44e4],cl
  43e88b:	jmp    0x64a4:0x56f7790f
  43e892:	add    BYTE PTR [ecx+0x4ce39767],cl
  43e898:	or     dh,BYTE PTR [edx]
  43e89a:	out    0x7c,eax
  43e89c:	jno    0x43e842
  43e89e:	out    0x61,eax
  43e8a0:	jnp    0x43e86a
  43e8a2:	call   0xc0c4:0xa1f92413
  43e8a9:	ins    DWORD PTR es:[edi],dx
  43e8aa:	and    ax,WORD PTR [ecx+ebx*8]
  43e8ae:	(bad)
  43e8b1:	mov    edi,0xdec733cc
  43e8b6:	push   ecx
  43e8b7:	std    
  43e8b8:	jl     0x43e8bc
  43e8ba:	mov    bh,BYTE PTR [esi-0x36]
  43e8bd:	aas    
  43e8be:	dec    DWORD PTR ds:0xd3c35028
  43e8c4:	mov    ebp,0x99d851de
  43e8c9:	cmp    ecx,ecx
  43e8cb:	loop   0x43e88a
  43e8cd:	jnp    0x43e8ff
  43e8cf:	or     eax,0xd08afeb9
  43e8d4:	dec    esi
  43e8d5:	add    DWORD PTR [esi+0x7e],0xfdfc47bb
  43e8dc:	mov    al,0x2a
  43e8de:	mov    edi,DWORD PTR [eax-0x3e]
  43e8e1:	sub    eax,0x49b2006b
  43e8e6:	mov    bh,BYTE PTR [edi]
  43e8e8:	mov    ebp,0x1feb08b6
  43e8ed:	xchg   edx,eax
  43e8ee:	dec    esp
  43e8ef:	mov    ebp,DWORD PTR [ebx]
  43e8f1:	nop
  43e8f2:	leave  
  43e8f3:	int3   
  43e8f4:	mov    bl,0xbd
  43e8f6:	fiadd  WORD PTR [ebx+0x45816722]
  43e8fc:	jle    0x43e8b9
  43e8fe:	inc    edi
  43e8ff:	loopne 0x43e90e
  43e901:	sub    dl,0x8b
  43e904:	push   ebx
  43e905:	and    cl,BYTE PTR [edx]
  43e907:	push   ecx
  43e908:	mov    dl,0xbb
  43e90a:	push   edi
  43e90b:	in     al,0xfd
  43e90d:	xchg   esi,esp
  43e90f:	mov    ecx,DWORD PTR [esi-0x56]
  43e912:	or     DWORD PTR [ebp-0x72],ecx
  43e915:	mov    ebx,0x97fdf83f
  43e91a:	repnz mov eax,DWORD PTR [esi+eiz*2+0x9]
  43e91f:	inc    ebp
  43e920:	mov    ?,WORD PTR [ebx-0x7ff217b9]
  43e926:	repnz mov edx,DWORD PTR [edi+0x62]
  43e92a:	or     DWORD PTR [ebp+0x7e],edx
  43e92d:	mov    ebx,0x880df057
  43e932:	repnz mov ecx,DWORD PTR [esi+0x4e]
  43e936:	or     DWORD PTR [ebp+0x7e],ecx
  43e939:	mov    ebx,0x87c1fc3f
  43e93e:	test   BYTE PTR [eax],0x86
  43e941:	inc    edx
  43e942:	or     ch,bl
  43e944:	(bad)  
  43e945:	mov    ebp,0x500f457
  43e94a:	add    al,0xc
  43e94c:	mov    ebx,edx
  43e94e:	add    BYTE PTR ss:[ebp+0x5e],0xbd
  43e953:	aas    
  43e954:	hlt    
  43e955:	popf   
  43e956:	jp     0x43e96a
  43e958:	jae    0x43e918
  43e95a:	mov    ebp,0x43fdf057
  43e95f:	or     DWORD PTR [ebp-0x72],eax
  43e962:	mov    ebx,0x40acdc47
  43e967:	bound  ebp,QWORD PTR [ebp+eax*4-0x4474f57e]
  43e96e:	push   cs
  43e96f:	pop    esp
  43e970:	call   0x4e2d2b
  43e975:	add    eax,0x4684ff06
  43e97a:	mov    bh,0x11
  43e97c:	mov    esi,DWORD PTR [ebx-0x11ba7dca]
  43e982:	inc    eax
  43e983:	mov    ch,0xc
  43e985:	push   esi
  43e986:	mov    ebx,0x96fdec3f
  43e98b:	fimul  WORD PTR [ebx+0x4822e43]
  43e991:	test   BYTE PTR [edi+eax*2+0x8],0xed
  43e996:	or     DWORD PTR ds:[ebp-0x2a],0xff04cbc4
  43e99e:	jle    0x43e99a
  43e9a0:	jmp    0x43e98c
  43e9a2:	je     0x43e96e
  43e9a4:	mov    esp,DWORD PTR [ebx-0x3d333672]
  43e9aa:	std    
  43e9ab:	mov    esi,0xfdba00cc
  43e9b0:	mov    esi,0xbefdd2cc
  43e9b5:	int3   
  43e9b6:	xor    edi,DWORD PTR [ebp+0x49a283de]
  43e9bc:	loop   0x43e9c3
  43e9be:	mov    DWORD PTR [eax],esi
  43e9c0:	out    dx,al
  43e9c1:	mov    ebx,ecx
  43e9c3:	sbb    al,BYTE PTR [edx-0x1d6c91bb]
  43e9c9:	sub    DWORD PTR [ecx+0x30],esi
  43e9cc:	out    dx,al
  43e9cd:	add    DWORD PTR [edx+0x47],0xffffffa9
  43e9d1:	hlt    
  43e9d2:	xor    eax,0x1a680a84
  43e9d7:	inc    esp
  43e9d8:	dec    edx
  43e9d9:	add    ch,bh
  43e9db:	jge    0x43e9bf
  43e9dd:	push   ecx
  43e9de:	dec    ecx
  43e9df:	push   esi
  43e9e0:	not    bl
  43e9e2:	lds    eax,FWORD PTR [edx-0x57]
  43e9e5:	clc    
  43e9e6:	push   ebp
  43e9e7:	test   BYTE PTR [edx],cl
  43e9e9:	push   0xffffff86
  43e9eb:	pushf  
  43e9ec:	or     ch,BYTE PTR [eax+0x3a]
  43e9ef:	inc    esp
  43e9f0:	dec    edx
  43e9f1:	add    BYTE PTR [ecx],ah
  43e9f3:	push   esi
  43e9f4:	repnz rol ebp,cl
  43e9f7:	inc    edx
  43e9f8:	add    DWORD PTR [ebp+0x1e],0x8
  43e9fc:	dec    eax
  43e9fd:	cld    
  43e9fe:	xchg   BYTE PTR [edx+0xa],al
  43ea01:	add    ch,ch
  43ea03:	cmp    DWORD PTR [ecx-0x373c05ab],eax
  43ea09:	add    edi,edi
  43ea0b:	xchg   ebp,eax
  43ea0c:	out    dx,al
  43ea0d:	sub    DWORD PTR [ebx+0x2e],0x3
  43ea11:	jae    0x43ea13
  43ea13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ea14:	mov    ebx,0x3f0dfc47
  43ea19:	xchg   DWORD PTR [ebp+eax*4-0x2aef57e],ecx
  43ea20:	xchg   ebp,eax
  43ea21:	loop   0x43ea75
  43ea23:	rcl    DWORD PTR [ebp-0xa],0xd3
  43ea27:	inc    ebp
  43ea28:	inc    edx
  43ea29:	or     DWORD PTR [ebp-0x4e],0xb28d06b9
  43ea30:	adc    ecx,DWORD PTR [edx+0x0]
  43ea33:	lods   eax,DWORD PTR ds:[esi]
  43ea34:	adc    al,BYTE PTR [edx-0x40fcc41b]
  43ea3a:	int3   
  43ea3b:	ret    0xbefe
  43ea3e:	int3   
  43ea3f:	mov    edx,0x52ccbefe
  43ea44:	(bad)  
  43ea45:	mov    esi,0xdebbd3cc
  43ea4a:	mov    eax,ds:0x4a16d6
  43ea4f:	test   al,0xbb
  43ea51:	dec    edx
  43ea52:	xor    BYTE PTR ds:0xf3e027d,cl
  43ea58:	jp     0x43ea5c
  43ea5a:	pop    ebp
  43ea5b:	inc    ebp
  43ea5c:	(bad)  
  43ea5d:	mov    esi,0xbefe3acc
  43ea62:	int3   
  43ea63:	push   edx
  43ea64:	(bad)  
  43ea65:	mov    esi,0xdebbd3cc
  43ea6a:	mov    ecx,ebx
  43ea6c:	ds pop edx
  43ea6e:	mov    edi,DWORD PTR [ebx+0x7bff5b3a]
  43ea74:	fiadd  DWORD PTR ss:[ebx+0x0]
  43ea78:	xchg   BYTE PTR [ebp-0x1bd3337],cl
  43ea7e:	mov    esi,0xbefe3acc
  43ea83:	int3   
  43ea84:	sar    ch,cl
  43ea86:	mov    esi,0xdebb53cc
  43ea8b:	and    edx,0x39
  43ea8e:	pusha  
  43ea8f:	add    BYTE PTR [edx+eax*2+0x62],bl
  43ea93:	fadd   QWORD PTR [ebp+0x73ff0a82]
  43ea99:	sub    bl,dl
  43ea9b:	inc    ebx
  43ea9c:	xchg   BYTE PTR [ecx+0x1a5ef847],bh
  43eaa2:	or     al,BYTE PTR [eax-0x7a]
  43eaa5:	mov    ebx,0x1a56f847
  43eaaa:	mov    cl,0xff
  43eaac:	mov    cl,0x2e
  43eaae:	mov    al,ah
  43eab0:	jle    0x43ea6b
  43eab2:	inc    edi
  43eab3:	cld    
  43eab4:	or     eax,0xd511a7d
  43eab9:	xchg   ebp,eax
  43eaba:	(bad)  
  43eabb:	push   ecx
  43eabc:	std    
  43eabd:	test   BYTE PTR [edx],al
  43eabf:	push   eax
  43eac0:	mov    DWORD PTR [esi+ebp*8-0x366f9475],edx
  43eac7:	int3   
  43eac8:	sar    DWORD PTR [ecx-0x77b6ae22],cl
  43eace:	out    dx,al
  43eacf:	add    BYTE PTR [esi-0x7014f5be],al
  43ead5:	mov    ecx,0x305fc47
  43eada:	or     al,0x89
  43eadc:	add    bl,cl
  43eade:	or     BYTE PTR cs:[ebp+0x4a],0x6a
  43eae3:	aas    
  43eae4:	adc    BYTE PTR [ebp-0x71aa7eb3],dh
  43eaea:	inc    ecx
  43eaeb:	push   edi
  43eaec:	cld    
  43eaed:	xor    esp,0x3ebb8b08
  43eaf3:	or     DWORD PTR [ebp+0x22],ecx
  43eaf6:	ds mov ah,0x11
  43eaf9:	pop    ebp
  43eafa:	add    BYTE PTR [edi+0x7],dh
  43eafd:	into   
  43eafe:	inc    ebx
  43eaff:	or     al,BYTE PTR [eax]
  43eb01:	xchg   BYTE PTR [ecx],bl
  43eb03:	pop    es
  43eb04:	jmp    0x43eadc
  43eb06:	jno    0x43ead2
  43eb08:	mov    esp,ebx
  43eb0a:	(bad)
  43eb0e:	(bad)  
  43eb0f:	mov    esi,0xbefebacc
  43eb14:	int3   
  43eb15:	sar    dh,cl
  43eb17:	mov    esi,0xdeb933cc
  43eb1c:	mov    ecx,0xa426e
  43eb21:	bound  edi,QWORD PTR [ecx-0x6d6c76fd]
  43eb27:	(bad)  
  43eb28:	inc    ebx
  43eb29:	xchg   BYTE PTR [edi-0x13d3337],cl
  43eb2f:	mov    esi,0xbefebacc
  43eb34:	int3   
  43eb35:	sar    dh,cl
  43eb37:	mov    esi,0xdeb933cc
  43eb3c:	and    DWORD PTR [edx+0x458152],0x7e
  43eb43:	shl    DWORD PTR [edx+0x4],0x86
  43eb47:	cmp    eax,0x42868886
  43eb4c:	or     cl,BYTE PTR [ebx+0x51813ac3]
  43eb52:	add    cl,0xe0
  43eb55:	or     BYTE PTR [edi],dh
  43eb57:	sbb    BYTE PTR [ebp+edx*2+0x847b952],al
  43eb5e:	add    eax,0xc3890302
  43eb63:	xor    al,dh
  43eb65:	inc    ebp
  43eb66:	inc    edx
  43eb67:	inc    edx
  43eb68:	or     al,BYTE PTR [eax]
  43eb6a:	xchg   BYTE PTR [ecx],bl
  43eb6c:	add    al,0x8b
  43eb6e:	ret    
  43eb6f:	cs mov al,cl
  43eb72:	xchg   DWORD PTR [ebx-0x68f203c1],edi
  43eb78:	out    dx,al
  43eb79:	cmp    esi,DWORD PTR [ebx-0x2b985ca]
  43eb7f:	xchg   dh,ch
  43eb81:	mov    edi,DWORD PTR [ebx-0x654901ce]
  43eb87:	or     ebx,0xfffffffa
  43eb8a:	mov    al,cl
  43eb8c:	lock add edi,DWORD PTR [ebx+0x70]
  43eb90:	add    DWORD PTR [ebp-0x16],0x91f03fb8
  43eb97:	cmc    
  43eb98:	push   ss
  43eb99:	inc    ecx
  43eb9a:	pop    es
  43eb9b:	and    dh,ch
  43eb9d:	jbe    0xce996ee5
  43eba3:	mov    eax,0xd000847
  43eba8:	jg     0x43eba8
  43ebaa:	add    cl,BYTE PTR [esi-0x207a847]
  43ebb0:	inc    ebp
  43ebb1:	sbb    eax,DWORD PTR [ebx]
  43ebb3:	inc    ebx
  43ebb4:	push   edx
  43ebb5:	or     DWORD PTR [ebp-0x72],0x850c57b9
  43ebbc:	push   ebx
  43ebbd:	or     DWORD PTR [ebp-0x72],0x9d0a06ba
  43ebc4:	fiadd  DWORD PTR [ecx+0x47b78e55]
  43ebca:	or     BYTE PTR [ebp-0x3476f980],al
  43ebd0:	cmp    ah,bl
  43ebd2:	imul   ebp,DWORD PTR [ecx+0x2c],0xffffffee
  43ebd6:	mov    ebp,DWORD PTR [ebx-0x72]
  43ebd9:	leave  
  43ebda:	int3   
  43ebdb:	mov    bl,0xb7
  43ebdd:	fiadd  WORD PTR [ebx+0x45816762]
  43ebe3:	jle    0x43eb9e
  43ebe5:	inc    edi
  43ebe6:	in     al,0xd
  43ebe8:	jle    0x43ebd0
  43ebea:	mov    edx,ebx
  43ebec:	or     dl,BYTE PTR es:[ecx+0x72]
  43ebf0:	mov    ecx,0x85fde857
  43ebf5:	loop   0x43eb82
  43ebf7:	push   cs
  43ebf8:	ret    
  43ebf9:	or     al,BYTE PTR [eax]
  43ebfb:	xchg   BYTE PTR [ecx-0x51fa0fc1],bh
  43ec01:	cli    
  43ec02:	add    BYTE PTR [ecx-0x3a],bh
  43ec05:	icebp  
  43ec06:	add    BYTE PTR [esi+0x558142],al
  43ec0c:	mov    ?,WORD PTR [edi]
  43ec0e:	push   edi
  43ec0f:	lock call DWORD PTR [ebp+0x22438bea]
  43ec16:	mov    bh,BYTE PTR [eax+0x76]
  43ec19:	inc    edx
  43ec1a:	std    
  43ec1b:	and    ebx,0x42
  43ec1e:	or     al,BYTE PTR [eax]
  43ec20:	pop    esp
  43ec21:	inc    edx
  43ec22:	pusha  
  43ec23:	add    ch,bh
  43ec25:	jge    0x43ec11
  43ec27:	mov    ebx,DWORD PTR [ebx+0x3a]
  43ec2a:	or     DWORD PTR [ecx-0x76],edx
  43ec2d:	nop
  43ec2e:	in     eax,dx
  43ec2f:	adc    eax,0x4a0fae
  43ec34:	inc    DWORD PTR [ebp+0x224b8bee]
  43ec3a:	mov    bh,BYTE PTR [eax]
  43ec3c:	xchg   BYTE PTR [esi+0x22438b13],dh
  43ec42:	adc    BYTE PTR [ebp+0x7e],0x3f
  43ec46:	sbb    ecx,DWORD PTR [ecx+0x458236db]
  43ec4c:	data16 mov bh,0x3f
  43ec4f:	or     BYTE PTR [ebp-0x4476e586],al
  43ec55:	push   ds
  43ec56:	loop   0x43ec6f
  43ec58:	or     eax,0xc38bea95
  43ec5d:	cmp    cl,BYTE PTR [ecx]
  43ec5f:	inc    edx
  43ec60:	jbe    0x43ec1b
  43ec62:	inc    edi
  43ec63:	hlt    
  43ec64:	std    
  43ec65:	jl     0x43ec51
  43ec67:	mov    ebx,ebx
  43ec69:	cmp    cl,BYTE PTR [ecx]
  43ec6b:	adc    DWORD PTR [edi],ecx
  43ec6d:	xchg   ebp,eax
  43ec6e:	faddp  st(7),st
  43ec70:	add    bl,cl
  43ec72:	sub    cl,BYTE PTR [ebx]
  43ec74:	add    BYTE PTR [esi+0x26458142],al
  43ec7a:	mov    edi,0xb6861072
  43ec7f:	std    
  43ec80:	mov    al,bl
  43ec82:	and    cl,BYTE PTR [edx+0x5b68639]
  43ec88:	(bad)  
  43ec89:	dec    ebx
  43ec8a:	sub    cl,BYTE PTR [eax+eax*1]
  43ec8d:	xchg   BYTE PTR [edx-0x7f],al
  43ec90:	push   ebp
  43ec91:	cli    
  43ec92:	mov    esi,0xa1720030
  43ec97:	add    DWORD PTR [ebp-0x26],0xe78102b6
  43ec9e:	inc    ecx
  43ec9f:	or     al,BYTE PTR [eax]
  43eca1:	push   es
  43eca2:	mov    dh,0xe
  43eca4:	mov    esi,DWORD PTR [ebx]
  43eca6:	add    BYTE PTR ss:[edx],0x6b
  43ecaa:	sub    ebp,esi
  43ecac:	(bad)  
  43ecad:	cmp    DWORD PTR [edx-0x6f4db27f],edx
  43ecb3:	loop   0x43ec6a
  43ecb5:	stos   DWORD PTR es:[edi],eax
  43ecb6:	sub    ch,dh
  43ecb8:	or     edx,0x39
  43ecbb:	add    DWORD PTR [ebp-0x46],0x16
  43ecbf:	jnp    0x2c62300
  43ecc5:	std    
  43ecc6:	jl     0x43ecca
  43ecc8:	(bad)  
  43ecc9:	fidivr DWORD PTR [edx]
  43eccb:	or     BYTE PTR [edx+0xd],dl
  43ecce:	sub    dh,0x50
  43ecd1:	pop    esi
  43ecd2:	shr    bh,cl
  43ecd4:	inc    DWORD PTR [eax]
  43ecd6:	imul   eax,esi,0x800f08c6
  43ecdc:	into   
  43ecdd:	mov    ecx,ebx
  43ecdf:	push   ss
  43ece0:	adc    BYTE PTR [ebp+0x32],0xbc
  43ece4:	sbb    ecx,DWORD PTR [ebx-0x3f75d13d]
  43ecea:	mov    bh,BYTE PTR [ebx+0x780df447]
  43ecf0:	fiadd  WORD PTR [ebx+0x4d833f47]
  43ecf6:	sbb    bl,BYTE PTR [esi]
  43ecf8:	xchg   esi,eax
  43ecf9:	mov    edi,DWORD PTR [ebx+0x72c28a22]
  43ecff:	mov    ebx,0x391fe057
  43ed04:	in     eax,dx
  43ed05:	dec    DWORD PTR [ecx]
  43ed07:	mov    esi,0xf6c55de7
  43ed0c:	mov    esi,0xdebd53cc
  43ed11:	and    edx,0x3a
  43ed14:	(bad)  
  43ed15:	lock test DWORD PTR [edx+0x427bff0a],eax
  43ed1c:	(bad)  
  43ed1d:	inc    ebx
  43ed1e:	xchg   BYTE PTR [ebx+0x265ef847],bh
  43ed24:	or     al,BYTE PTR [eax-0x7a]
  43ed27:	mov    ebp,0x1a56f847
  43ed2c:	sub    eax,0x8a29b9fd
  43ed31:	les    edi,FWORD PTR [esi-0x45]
  43ed34:	inc    edi
  43ed35:	cld    
  43ed36:	std    
  43ed37:	ja     0x43ed53
  43ed39:	push   ecx
  43ed3a:	add    BYTE PTR ds:0xd51fe90,cl
  43ed40:	add    BYTE PTR [edx],0x50
  43ed43:	xchg   ecx,eax
  43ed44:	(bad)  
  43ed45:	out    dx,al
  43ed46:	mov    esp,DWORD PTR [ebx+0x52ccc987]
  43ed4c:	idiv   BYTE PTR [esi-0x21422c34]
  43ed52:	mov    eax,ds:0x4a0ed2
  43ed57:	inc    eax
  43ed58:	inc    edx
  43ed59:	bound  ecx,QWORD PTR [ebx+0x43d68e7b]
  43ed5f:	xchg   BYTE PTR [ebx+0x514015a],bh
  43ed65:	adc    DWORD PTR [eax-0x7d],0xffffff87
  43ed69:	leave  
  43ed6a:	int3   
  43ed6b:	push   edx
  43ed6c:	idiv   BYTE PTR [esi-0x21422c34]
  43ed72:	and    DWORD PTR [edx],0x36
  43ed75:	stos   DWORD PTR es:[edi],eax
  43ed76:	push   eax
  43ed77:	push   edx
  43ed78:	test   DWORD PTR [edx],ecx
  43ed7a:	mov    esi,DWORD PTR [esi*2-0x7df2c13d]
  43ed81:	cmp    cl,BYTE PTR [ebx+0x3ed8bd34]
  43ed87:	std    
  43ed88:	jns    0x43ed88
  43ed8a:	mov    dl,ah
  43ed8c:	mov    edx,0x7f0df43f
  43ed91:	test   BYTE PTR [ebx+0x4d83363e],0xee
  43ed98:	mov    esp,0x8f0ff857
  43ed9d:	out    dx,al
  43ed9e:	mov    eax,0xa428700
  43eda3:	add    BYTE PTR [ebx],cl
  43eda5:	add    dh,BYTE PTR [edi+0x44]
  43eda8:	add    eax,0x3b00f2a7
  43edad:	ds cmp eax,eax
  43edb0:	lods   eax,DWORD PTR ds:[esi]
  43edb1:	or     DWORD PTR gs:[ebp-0x52],0x6d185bbc
  43edb9:	pop    DWORD PTR [edx]
  43edbb:	jne    0x43ee3c
  43edbd:	mov    ebp,0x770df847
  43edc2:	dec    BYTE PTR [eax+0x5581463e]
  43edc8:	mov    ?,WORD PTR [edi+eax*2+0x12850f10]
  43edcf:	mov    eax,0xa4287
  43edd4:	pop    ebp
  43edd5:	dec    ebx
  43edd6:	or     DWORD PTR [ebp+0x6e],0xbb891bbc
  43eddd:	sub    al,BYTE PTR [edx+0x476c5e45]
  43ede3:	cld    
  43ede4:	fstp   TBYTE PTR [esi]
  43ede6:	cmp    eax,eax
  43ede8:	pop    ebp
  43ede9:	aas    
  43edea:	loope  0x43ed9f
  43edec:	jne    0x43edf0
  43edee:	and    ch,0xdb
  43edf1:	add    edi,DWORD PTR [edi-0x4108bd34]
  43edf7:	int3   
  43edf8:	cmp    dh,bh
  43edfa:	mov    esi,0xbef752cc
  43edff:	int3   
  43ee00:	mov    bl,0xbb
  43ee02:	fiadd  WORD PTR [ebx-0x3ab4de00]
  43ee08:	inc    ebp
  43ee09:	push   cs
  43ee0a:	inc    ebx
  43ee0b:	cmp    al,BYTE PTR [eax]
  43ee0d:	xchg   BYTE PTR [edx+0x42460406],bl
  43ee13:	stos   DWORD PTR es:[edi],eax
  43ee14:	cmp    al,0xda
  43ee16:	or     DWORD PTR [edx],0x50
  43ee19:	ficom  WORD PTR [ebx-0x3c1e0012]
  43ee1f:	(bad)  
  43ee20:	or     BYTE PTR [edi],cl
  43ee22:	jle    0x43ee1a
  43ee24:	push   0x46
  43ee26:	mov    ebx,0xbb37f83f
  43ee2b:	pop    ss
  43ee2c:	sbb    al,0xda
  43ee2e:	or     DWORD PTR [edx],0xffffff8b
  43ee31:	inc    esp
  43ee32:	xchg   edx,eax
  43ee33:	pop    edx
  43ee34:	push   0xffffff86
  43ee36:	daa    
  43ee37:	pop    eax
  43ee38:	hlt    
  43ee39:	in     eax,0x4e
  43ee3b:	(bad)  
  43ee3c:	inc    ebx
  43ee3d:	xchg   bl,al
  43ee3f:	das    
  43ee40:	adc    al,0xb2
  43ee42:	or     DWORD PTR [edx],0x0
  43ee45:	sbb    edi,DWORD PTR [edi]
  43ee47:	mov    dl,0x2
  43ee49:	xchg   BYTE PTR [edx+0xa],al
  43ee4c:	jmp    0x43ee3a
  43ee4e:	mov    ebx,0x8285ffff
  43ee53:	or     cl,BYTE PTR [ecx+0x6332c3]
  43ee59:	push   esp
  43ee5a:	inc    ebx
  43ee5b:	or     ch,BYTE PTR [eax-0x7a]
  43ee5e:	inc    ebx
  43ee5f:	dec    edx
  43ee60:	add    BYTE PTR ds:0xc5d4164d,cl
  43ee66:	inc    edx
  43ee67:	mov    eax,edx
  43ee69:	add    BYTE PTR [esi-0x2bfff5bd],al
  43ee6f:	sbb    cl,BYTE PTR [ebp-0x75d8c602]
  43ee75:	les    eax,FWORD PTR [edx-0x39fcf516]
  43ee7b:	inc    edx
  43ee7c:	pop    ds
  43ee7d:	add    BYTE PTR [ebp-0x7474f5be],al
  43ee83:	dec    esi
  43ee84:	(bad)  
  43ee85:	inc    ebx
  43ee86:	xchg   BYTE PTR [ebx-0x3e],bl
  43ee89:	mov    DWORD PTR [ebx+0x7e],edi
  43ee8c:	(bad)  
  43ee8d:	inc    ebx
  43ee8e:	xchg   BYTE PTR [ebx-0x7d2dbbe9],bh
  43ee94:	or     dl,BYTE PTR [edx+0x27]
  43ee97:	dec    esi
  43ee98:	(bad)  
  43ee99:	inc    ebx
  43ee9a:	xchg   BYTE PTR [edx-0x6f29b27f],dl
  43eea0:	loop   0x43ee3f
  43eea2:	fisub  DWORD PTR [esi]
  43eea4:	out    dx,al
  43eea5:	or     edx,0x35
  43eea8:	adc    DWORD PTR ds:0x4a0e72,0x89028d85
  43eeb2:	push   ebx
  43eeb3:	sbb    al,BYTE PTR [edx-0x16d961ab]
  43eeb9:	mov    esp,DWORD PTR [ebx-0x2d33367c]
  43eebf:	cmc    
  43eec0:	mov    esi,0xdebb33cc
  43eec5:	mov    ecx,DWORD PTR [ebx+0x3a]
  43eec8:	xor    DWORD PTR [ebp+0x7a],eax
  43eecb:	mov    bl,0x5
  43eecd:	mov    eax,DWORD PTR [eax]
  43eecf:	retf   
  43eed0:	cmp    ah,cl
  43eed2:	add    eax,0x4581426d
  43eed7:	add    BYTE PTR [edi-0x8c53337],0xbe
  43eede:	int3   
  43eedf:	push   edx
  43eee0:	idiv   DWORD PTR [esi-0x21464c34]
  43eee6:	and    DWORD PTR [edx+0x57],0xffffffc5
  43eeea:	inc    ebp
  43eeeb:	dec    edx
  43eeec:	inc    ebx
  43eeed:	or     al,BYTE PTR [esi+eax*4]
  43eef0:	mov    ecx,0x800f0847
  43eef5:	ror    BYTE PTR [ebx+0x55820ac3],cl
  43eefb:	jle    0x43ef3e
  43eefd:	pop    ebx
  43eefe:	cmp    al,0xf
  43ef00:	nop
  43ef01:	jmp    0xbeb6:0xfe22c38b
  43ef08:	dec    esi
  43ef09:	adc    DWORD PTR [ebp+0x26],0x9e0a46b8
  43ef10:	mov    ebx,0x4e6ee847
  43ef15:	push   es
  43ef16:	inc    eax
  43ef17:	xchg   BYTE PTR [ecx-0x7e2dc401],bh
  43ef1d:	or     dl,BYTE PTR [ecx-0x12]
  43ef20:	jne    0x43ef13
  43ef22:	(bad)  
  43ef23:	fld    st(1)
  43ef25:	(bad)  
  43ef26:	or     bh,bh
  43ef28:	jg     0x43ef24
  43ef2a:	push   0x46
  43ef2c:	call   0x62:0x4286300a
  43ef33:	add    BYTE PTR [esi-0x7995f5c2],al
  43ef39:	and    eax,0x7ffff058
  43ef3e:	out    0x8b,al
  43ef40:	cmp    esp,DWORD PTR [edx]
  43ef42:	add    BYTE PTR [edx+0x32],0x92
  43ef46:	or     DWORD PTR [ebp+0x7e],0xa2558193
  43ef4d:	nop
  43ef4e:	loop   0x43ef11
  43ef50:	and    DWORD PTR ds:0x364283ee,0xffffffc5
  43ef57:	inc    ebp
  43ef58:	jp     0x43ef9c
  43ef5a:	or     al,BYTE PTR [eax]
  43ef5c:	xchg   BYTE PTR [ecx],bl
  43ef5e:	add    al,0x8b
  43ef60:	retf   
  43ef61:	cs mov al,al
  43ef64:	xchg   DWORD PTR [ebx+0x76fdf447],edi
  43ef6a:	jmp    0xdb39:0x493110f
  43ef71:	cs jp  0x43efcd
  43ef74:	or     eax,0xae83e27f
  43ef79:	dec    esi
  43ef7a:	or     dh,BYTE PTR [ebx+eax*8-0x47]
  43ef7e:	aas    
  43ef7f:	call   0x5e9a89
  43ef84:	xchg   edx,eax
  43ef85:	adc    WORD PTR [ebp+0x1e],0x48b9
  43ef8b:	adc    ch,bh
  43ef8d:	jbe    0x43ef79
  43ef8f:	mov    edx,DWORD PTR [edi+0x66]
  43ef92:	jg     0x43efd8
  43ef94:	xchg   esi,eax
  43ef95:	and    eax,0xe6004d82
  43ef9a:	jo     0x43ef74
  43ef9c:	div    DWORD PTR [edi+0x66]
  43ef9f:	adc    DWORD PTR [ebp-0x1a],0x9a429d34
  43efa6:	xchg   edx,eax
  43efa7:	add    DWORD PTR [ebp-0x22],0x85083fb8
  43efae:	jp     0x43efc6
  43efb0:	push   ecx
  43efb1:	or     eax,0x438be28f
  43efb6:	push   ds
  43efb7:	or     al,BYTE PTR [edx-0x7e]
  43efba:	xchg   edx,eax
  43efbb:	loop   0x43f012
  43efbd:	stos   DWORD PTR es:[edi],eax
  43efbe:	and    al,0xee
  43efc0:	or     edx,0x35
  43efc3:	or     DWORD PTR [ebp-0x52],0xff28cbc0
  43efca:	jbe    0x43efae
  43efcc:	jmp    0x43efc2
  43efce:	mov    eax,0x1ad4e457
  43efd3:	std    
  43efd4:	sti    
  43efd5:	jns    0x43effb
  43efd7:	mov    al,ah
  43efd9:	mov    bl,BYTE PTR [edx+0x42c60426]
  43efdf:	stos   DWORD PTR es:[edi],eax
  43efe0:	cmp    al,0x3a
  43efe2:	or     BYTE PTR [edx],0x50
  43efe5:	outs   dx,BYTE PTR ds:[esi]
  43efe6:	mov    eax,0xc051fff0
  43efeb:	(bad)  
  43efec:	or     bh,bh
  43efee:	jge    0x43efbe
  43eff0:	add    DWORD PTR [ebx-0x79bc2996],0x42
  43eff7:	ja     0x43f003
  43eff9:	std    
  43effa:	xor    eax,0xc500d43a
  43efff:	inc    edx
  43f000:	pop    ebx
  43f001:	(bad)  
  43f002:	mov    ebx,0x5e3d8a06
  43f007:	push   cs
  43f008:	dec    edx
  43f009:	add    BYTE PTR [esi-0x3995f153],al
  43f00f:	call   0x5581:0x4286300a
  43f016:	cli    
  43f017:	nop
  43f018:	add    DWORD PTR [ebp-0x1a],0x573442b7
  43f01f:	and    ebx,DWORD PTR [eax-0x10]
  43f022:	and    eax,0x8643d64f
  43f027:	pop    ss
  43f028:	sbb    BYTE PTR [edx+0x46],ch
  43f02b:	call   0x5581:0x4286300a
  43f032:	ret    0x6090
  43f035:	add    BYTE PTR [ecx-0x655c0573],bh
  43f03b:	push   cs
  43f03c:	dec    edx
  43f03d:	add    BYTE PTR ds:0x45d41666,al
  43f043:	inc    edx
  43f044:	or     dh,BYTE PTR [ebp+0x73]
  43f047:	cwde   
  43f048:	dec    edx
  43f049:	push   0xa7286
  43f04e:	std    
  43f04f:	jge    0x43f03f
  43f051:	push   eax
  43f052:	in     al,dx
  43f053:	inc    edx
  43f054:	in     eax,dx
  43f055:	push   ebp
  43f056:	jbe    0x43f037
  43f058:	push   ss
  43f059:	aam    0xc5
  43f05b:	inc    edx
  43f05c:	or     DWORD PTR [ebp+0x62],0xd83fb9
  43f063:	or     eax,0xc38bd28d
  43f068:	or     cl,BYTE PTR [edx]
  43f06a:	inc    edx
  43f06b:	xchg   edx,eax
  43f06c:	mov    ecx,0x74fde047
  43f071:	jmp    0xc38b:0x5892d78b
  43f078:	push   ds
  43f079:	pop    ebx
  43f07a:	mov    eax,DWORD PTR [ebx-0x79bc29b2]
  43f080:	xchg   ecx,eax
  43f081:	loop   0x43f014
  43f083:	and    ah,BYTE PTR [ebx]
  43f085:	out    dx,al
  43f086:	add    DWORD PTR [edx+0x36],0xffffff81
  43f08a:	push   ebp
  43f08b:	es mov edi,0x4286a4b0
  43f091:	or     al,BYTE PTR [eax]
  43f093:	jp     0x43f0fe
  43f095:	add    DWORD PTR [ebp-0x1a],0x85d83fb6
  43f09c:	mov    edx,0x428600aa
  43f0a1:	or     DWORD PTR [ebp-0xe],0xffffffb6
  43f0a5:	push   edi
  43f0a6:	loopne 0x43f0cf
  43f0a8:	dec    esi
  43f0a9:	(bad)  
  43f0aa:	inc    ebx
  43f0ab:	xchg   BYTE PTR [edi+0x48],dl
  43f0ae:	xor    al,0x25
  43f0b0:	jle    0x43f088
  43f0b2:	inc    ebx
  43f0b3:	xchg   BYTE PTR [edi+0x7ed243ff],dh
  43f0b9:	or     dl,BYTE PTR [ecx-0x3]
  43f0bc:	dec    esp
  43f0bd:	push   ss
  43f0be:	aam    0x45
  43f0c0:	inc    edx
  43f0c1:	pop    eax
  43f0c2:	mov    ecx,DWORD PTR [ebx+0x16]
  43f0c5:	pop    ebx
  43f0c6:	call   0xee6c0acb
  43f0cb:	inc    DWORD PTR ds:0x3b8afefe
  43f0d1:	and    al,BYTE PTR [edx+0x49f69a15]
  43f0d7:	add    BYTE PTR [ebp-0x6476dd8d],al
  43f0dd:	jbe    0x43f0b5
  43f0df:	inc    ebx
  43f0e0:	xchg   ch,al
  43f0e2:	das    
  43f0e3:	cmp    BYTE PTR [edx],bh
  43f0e5:	xchg   BYTE PTR [edx],cl
  43f0e7:	add    bl,dl
  43f0e9:	outs   dx,BYTE PTR ds:[esi]
  43f0ea:	stos   DWORD PTR es:[edi],eax
  43f0eb:	adc    al,0x3a
  43f0ed:	xchg   BYTE PTR [edx],cl
  43f0ef:	push   eax
  43f0f0:	std    
  43f0f1:	dec    edi
  43f0f2:	push   esi
  43f0f3:	aam    0xc5
  43f0f5:	inc    edx
  43f0f6:	pop    ebx
  43f0f7:	mov    edx,DWORD PTR [ebx-0x79bc29ae]
  43f0fd:	je     0x43f0e1
  43f0ff:	jne    0x43f12b
  43f101:	and    ch,dh
  43f103:	or     DWORD PTR [edx+0x4f],0xffffffab
  43f107:	adc    al,0x32
  43f109:	xchg   BYTE PTR [edx],cl
  43f10b:	push   eax
  43f10c:	push   ds
  43f10d:	mov    dh,bl
  43f10f:	dec    DWORD PTR [ecx]
  43f111:	mov    dh,0x4
  43f114:	in     eax,dx
  43f115:	mov    ds:0x82823462,al
  43f11a:	or     cl,BYTE PTR [ebx+0x43d65e83]
  43f120:	xchg   BYTE PTR [ebx-0x1e],dh
  43f123:	push   ecx
  43f124:	fbld   TBYTE PTR [ecx]
  43f126:	out    dx,al
  43f127:	add    edx,0x4a
  43f12a:	add    DWORD PTR [ebp+0x0],0xffffffba
  43f12e:	int    0x17
  43f130:	adc    al,0xb2
  43f132:	test   DWORD PTR [edx],ecx
  43f134:	push   edx
  43f135:	or     eax,0x8b8bea88
  43f13a:	ss (bad) 
  43f13c:	inc    ebx
  43f13d:	xchg   BYTE PTR [ebp+0x42],al
  43f140:	sub    BYTE PTR [edi-0x33],dl
  43f143:	pop    ss
  43f144:	xor    BYTE PTR [edx-0x51adf57b],bh
  43f14a:	ins    DWORD PTR es:[edi],dx
  43f14b:	out    dx,al
  43f14c:	call   DWORD PTR [ecx-0x18f3393b]
  43f152:	push   edx
  43f153:	(bad)  
  43f154:	inc    ebx
  43f155:	xchg   BYTE PTR [edi-0x66],al
  43f158:	rol    DWORD PTR [ebp+0x5a5ca942],1
  43f15e:	test   DWORD PTR [edx],ecx
  43f160:	lea    edi,[ebx-0x3995a3e6]
  43f166:	lods   al,BYTE PTR ds:[esi]
  43f167:	add    al,0x8b
  43f169:	jae    0x43f1e9
  43f16b:	(bad)  
  43f16c:	inc    ebx
  43f16d:	xchg   BYTE PTR [ebp+ebp*8+0x55],dh
  43f171:	xor    ch,BYTE PTR [edx]
  43f173:	jmp    0xb3653373
  43f178:	add    DWORD PTR [esi+0x2b8b0a42],eax
  43f17e:	jg     0x43f148
  43f180:	add    al,0x86
  43f182:	push   cs
  43f183:	mov    edi,0xbf0e52cc
  43f188:	int3   
  43f189:	mov    bl,0xcd
  43f18b:	fimul  WORD PTR [ebx+0x40814acb]
  43f191:	add    BYTE PTR [edx],cl
  43f193:	jg     0x43f15e
  43f195:	int3   
  43f196:	ror    BYTE PTR ds:0xcd53ccbf,cl
  43f19c:	ficom  WORD PTR [ebx+0x58]
  43f19f:	jns    0x43f122
  43f1a1:	cmp    eax,0x49f6a6
  43f1a6:	or     eax,0x45d41e3f
  43f1ab:	inc    edx
  43f1ac:	xor    DWORD PTR ds:0x49f66e,0x5d518029
  43f1b6:	lds    ecx,FWORD PTR ds:0xcd53ccbf
  43f1bc:	ficom  WORD PTR [ecx+0x1e]
  43f1bf:	xchg   BYTE PTR [esi],al
  43f1c1:	inc    eax
  43f1c2:	xchg   bl,ah
  43f1c4:	cs aam 0x45
  43f1c7:	inc    edx
  43f1c8:	pop    edx
  43f1c9:	call   0x320bb8
  43f1ce:	add    eax,0x43890306
  43f1d3:	push   ds
  43f1d4:	or     BYTE PTR [ebp-0x72],0x71
  43f1d8:	pusha  
  43f1d9:	add    BYTE PTR ds:0xc5d45236,cl
  43f1df:	inc    edx
  43f1e0:	pop    eax
  43f1e1:	call   ebx
  43f1e3:	push   ds
  43f1e4:	and    ch,0xc3
  43f1e7:	add    edi,DWORD PTR [edi-0x21344c34]
  43f1ed:	and    DWORD PTR [edx+0x67],0xffffffc5
  43f1f1:	inc    ebp
  43f1f2:	dec    esi
  43f1f3:	inc    ebx
  43f1f4:	or     al,BYTE PTR [eax]
  43f1f6:	add    BYTE PTR [esi-0x4123b7f9],al
  43f1fc:	inc    edx
  43f1fd:	or     al,BYTE PTR [eax]
  43f1ff:	dec    ecx
  43f200:	xchg   dh,dh
  43f202:	add    DWORD PTR [esi-0x3438f5be],eax
  43f208:	push   ds
  43f209:	or     eax,DWORD PTR [eax]
  43f20b:	xchg   BYTE PTR [edx-0x3b],al
  43f20e:	inc    ebp
  43f20f:	sub    al,BYTE PTR [ebx+0xa]
  43f212:	add    BYTE PTR [esi+0xf083fcb],al
  43f218:	dec    esi
  43f219:	cmp    dl,ah
  43f21b:	inc    ebp
  43f21c:	inc    edx
  43f21d:	loop   0x43f1c8
  43f21f:	stc    
  43f220:	pop    ds
  43f221:	out    dx,al
  43f222:	mov    eax,ds:0x49f6b6
  43f227:	stos   DWORD PTR es:[edi],eax
  43f228:	pop    ds
  43f229:	out    dx,al
  43f22a:	add    BYTE PTR [esi-0x7439016a],al
  43f230:	pop    edx
  43f231:	(bad)  
  43f232:	inc    ebx
  43f233:	xchg   BYTE PTR [edx+0xa],al
  43f236:	add    BYTE PTR [esi-0x7c38fed5],al
  43f23c:	pop    edx
  43f23d:	(bad)  
  43f23e:	inc    ebx
  43f23f:	xchg   BYTE PTR [ecx+0xa],al
  43f242:	add    BYTE PTR [esi-0x45cfd03d],al
  43f248:	or     DWORD PTR [edx],0x0
  43f24b:	adc    ecx,DWORD PTR [ebp+eax*8+0x5]
  43f24f:	dec    esi
  43f250:	test   BYTE PTR [ecx+0x0],0x86
  43f254:	inc    edx
  43f255:	or     al,BYTE PTR [eax]
  43f257:	add    eax,0xd4325d
  43f25c:	lds    eax,FWORD PTR [edx+0xa]
  43f25f:	jne    0x43f1e4
  43f261:	lods   al,BYTE PTR ds:[esi]
  43f262:	or     bh,bh
  43f264:	xchg   ebx,eax
  43f265:	inc    edx
  43f266:	(bad)  
  43f267:	inc    ebx
  43f268:	xchg   bl,ah
  43f26a:	cmp    dl,ah
  43f26c:	lds    eax,FWORD PTR [edx-0x7f]
  43f26f:	or     eax,0x49f696
  43f274:	dec    DWORD PTR [edx+eiz*8-0x29ad6475]
  43f27b:	inc    ebx
  43f27c:	xchg   bl,cl
  43f27e:	inc    edi
  43f27f:	call   0x89727709
  43f284:	ret    
  43f285:	sub    al,BYTE PTR [edx-0x36d1b3]
  43f28b:	sbb    esi,DWORD PTR [edx]
  43f28d:	or     DWORD PTR [edx],0x68
  43f290:	mov    dh,0x46
  43f292:	dec    edx
  43f293:	add    BYTE PTR [ecx],cl
  43f295:	xor    eax,0x4245d40a
  43f29a:	test   eax,0xa82d23c
  43f29f:	(bad)  
  43f2a0:	mov    ecx,DWORD PTR [esi-0x6a79bc2a]
  43f2a6:	push   es
  43f2a7:	inc    eax
  43f2a8:	xchg   BYTE PTR [edx+0x4246046a],ch
  43f2ae:	adc    DWORD PTR ds:0x49f692,0xf7c92a34
  43f2b8:	rcr    DWORD PTR [esi],0x8a
  43f2bb:	les    ecx,FWORD PTR [esi+0xd442e3]
  43f2c1:	inc    ebp
  43f2c2:	inc    edx
  43f2c3:	in     eax,dx
  43f2c4:	adc    eax,0x49f63e
  43f2c9:	in     eax,0x79
  43f2cb:	(bad)  
  43f2cc:	inc    ebx
  43f2cd:	xchg   cl,ah
  43f2cf:	ds aam 0x45
  43f2d2:	inc    edx
  43f2d3:	pop    edx
  43f2d4:	call   0x3212ab
  43f2d9:	add    eax,0xc3890707
  43f2de:	adc    al,BYTE PTR [edx-0x1d8b89b3]
  43f2e4:	aad    0x68
  43f2e6:	push   ds
  43f2e7:	out    dx,al
  43f2e8:	or     DWORD PTR [edx+0x47],0xffffffa9
  43f2ec:	xor    al,0x32
  43f2ee:	or     BYTE PTR [edx],0x8b
  43f2f1:	mov    ebx,0x866a5912
  43f2f6:	jecxz  0x43f32e
  43f2f8:	aam    0xc5
  43f2fa:	inc    edx
  43f2fb:	pop    edx
  43f2fc:	call   0x32091b
  43f301:	add    eax,0xbb8aff07
  43f306:	adc    al,BYTE PTR [ebp+ecx*2-0x3a835da]
  43f30d:	pop    ebp
  43f30e:	ja     0x43f30a
  43f310:	jae    0x43f2be
  43f312:	leave  
  43f313:	inc    edi
  43f314:	loopne 0x43f2cc
  43f316:	leave  
  43f317:	aas    
  43f318:	fcom   QWORD PTR [edi+0x2a]
  43f31b:	popf   
  43f31c:	sti    
  43f31d:	stc    
  43f31e:	sbb    eax,0xe17ec48a
  43f323:	dec    edx
  43f324:	aam    0x0
  43f326:	inc    ebp
  43f327:	inc    edx
  43f328:	adc    DWORD PTR ds:0x49f646,0xd43ee334
  43f332:	inc    ebp
  43f333:	inc    edx
  43f334:	or     DWORD PTR [ebp-0x1e],eax
  43f337:	jb     0x43f2ba
  43f339:	or     eax,0x49f67a
  43f33e:	test   DWORD PTR [edi-0xa61ae12],ecx
  43f344:	repz jmp FWORD PTR [ecx+0xd0cc6c1]
  43f34b:	js     0x43f343
  43f34d:	add    esi,DWORD PTR [ebx]
  43f34f:	dec    BYTE PTR [ecx]
  43f351:	push   ebp
  43f352:	stos   BYTE PTR es:[edi],al
  43f353:	retf   
  43f354:	push   edi
  43f355:	in     al,0xfd
  43f357:	xchg   esi,ebp
  43f359:	add    ecx,ebx
  43f35b:	inc    BYTE PTR [ebx+0x3fc97a45]
  43f361:	loopne 0x43f300
  43f363:	dec    edi
  43f364:	dec    edx
  43f365:	aam    0xc5
  43f367:	inc    edx
  43f368:	or     DWORD PTR [ebp+0x66],0x29
  43f36c:	(bad)  
  43f36d:	mov    ebx,0x86000b1a
  43f373:	inc    edx
  43f374:	loope  0x43f37f
  43f376:	std    
  43f377:	jbe    0x43f36b
  43f379:	add    DWORD PTR [esi+eax*2-0x7d],0x55
  43f37e:	ds leave 
  43f380:	inc    edi
  43f381:	clc    
  43f382:	ins    DWORD PTR es:[edi],dx
  43f383:	xchg   edx,edi
  43f385:	jae    0x43f3f5
  43f387:	leave  
  43f388:	push   DWORD PTR [ebx]
  43f38a:	add    BYTE PTR [edx],bh
  43f38c:	or     DWORD PTR [edx],0x821acb03
  43f392:	adc    DWORD PTR [ebp+0x52a1f277],eax
  43f398:	test   BYTE PTR [ecx+0x0],0x85
  43f39c:	xchg   edx,esi
  43f39e:	mov    DWORD PTR [esi+0x7f83fc9],edx
  43f3a4:	add    esp,esp
  43f3a6:	add    eax,DWORD PTR [esi-0x65ea7ebe]
  43f3ac:	test   BYTE PTR [ecx+0x0],0x85
  43f3b0:	ja     0x43f3a4
  43f3b2:	xor    edi,DWORD PTR [ebx+eiz*8+0x36]
  43f3b6:	aam    0x45
  43f3b8:	inc    edx
  43f3b9:	or     DWORD PTR [ebp-0x42],eax
  43f3bc:	retf   0xeb02
  43f3bf:	icebp  
  43f3c0:	retf   0x241f
  43f3c3:	fiadd  DWORD PTR [eax+0x626b890a]
  43f3c9:	(bad)  
  43f3ca:	inc    ebx
  43f3cb:	xchg   BYTE PTR [ecx-0x3d],dl
  43f3ce:	mov    DWORD PTR [ebx+0x3a],edx
  43f3d1:	(bad)  
  43f3d2:	inc    ebx
  43f3d3:	xchg   BYTE PTR [ecx-0x3d],dl
  43f3d6:	mov    DWORD PTR [ebx+0x6e],ebp
  43f3d9:	(bad)  
  43f3da:	inc    ebx
  43f3db:	xchg   BYTE PTR [edx],ch
  43f3dd:	cmp    eax,0x801c79f7
  43f3e2:	or     eax,0x49f021
  43f3e7:	dec    DWORD PTR [ebp+0x3f86b9f2]
  43f3ed:	dec    edx
  43f3ee:	add    BYTE PTR [eax],al
  43f3f0:	pop    es
  43f3f1:	sub    cl,BYTE PTR [ebx]
  43f3f3:	add    eax,DWORD PTR [esi+0x4e558142]
  43f3f9:	push   0x6a9b89db
  43f3fe:	(bad)  
  43f3ff:	inc    ebx
  43f400:	xchg   cl,ah
  43f402:	and    dl,ah
  43f404:	lds    eax,FWORD PTR [edx+0x5a]
  43f407:	call   0x320c8e
  43f40c:	add    eax,0x8b8b0707
  43f411:	push   esi
  43f412:	(bad)  
  43f413:	inc    ebx
  43f414:	xchg   BYTE PTR [ecx-0x1e],dh
  43f417:	aad    0xc
  43f419:	sbb    al,0xee
  43f41b:	test   esi,eax
  43f41d:	xchg   ebp,eax
  43f41e:	push   es
  43f41f:	xor    eax,esi
  43f421:	daa    
  43f422:	and    DWORD PTR [ebx+0x43d666ab],ecx
  43f428:	xchg   BYTE PTR [edi+0x5e0504c6],bh
  43f42e:	xor    dl,ah
  43f430:	inc    ebp
  43f431:	inc    edx
  43f432:	or     dh,BYTE PTR [edi+edi*2-0x1f]
  43f436:	push   ss
  43f437:	aam    0x45
  43f439:	inc    edx
  43f43a:	add    DWORD PTR [edx+ebp*2+0x46],0xffffffe2
  43f43f:	pop    ebp
  43f440:	mov    ebx,0x9b8bee1b
  43f445:	jbe    0x43f41d
  43f447:	inc    ebx
  43f448:	xchg   BYTE PTR [eax-0x37],dh
  43f44b:	xor    eax,esi
  43f44d:	(bad)  
  43f44e:	out    0x5d,eax
  43f450:	lds    ecx,FWORD PTR [esi]
  43f452:	mov    edi,0x428600cc
  43f457:	or     al,BYTE PTR [eax]
  43f459:	xchg   BYTE PTR [edx+0xa],al
  43f45c:	add    BYTE PTR [esi-0x79fff5be],al
  43f462:	inc    edx
  43f463:	or     al,BYTE PTR [eax]
  43f465:	xchg   BYTE PTR [edx+0xa],al
  43f468:	add    BYTE PTR [esi-0x79fff5be],al
  43f46e:	inc    edx
  43f46f:	or     al,BYTE PTR [eax]
  43f471:	xchg   BYTE PTR [edx+0xa],al
  43f474:	add    BYTE PTR [esi-0x79fff5be],al
  43f47a:	inc    edx
  43f47b:	or     al,BYTE PTR [eax]
  43f47d:	xchg   BYTE PTR [edx+0xa],al
  43f480:	add    BYTE PTR [esi-0x79fff5be],al
  43f486:	inc    edx
  43f487:	or     al,BYTE PTR [eax]
  43f489:	xchg   BYTE PTR [edx+0xa],al
  43f48c:	add    BYTE PTR [esi-0x79fff5be],al
  43f492:	inc    edx
  43f493:	or     al,BYTE PTR [eax]
  43f495:	xchg   BYTE PTR [edx+0xa],al
  43f498:	add    BYTE PTR [esi-0x79fff5be],al
  43f49e:	inc    edx
  43f49f:	or     al,BYTE PTR [eax]
  43f4a1:	xchg   BYTE PTR [edx+0xa],al
  43f4a4:	add    BYTE PTR [esi-0x79fff5be],al
  43f4aa:	inc    edx
  43f4ab:	or     al,BYTE PTR [eax]
  43f4ad:	xchg   BYTE PTR [edx+0xa],al
  43f4b0:	add    BYTE PTR [esi-0x79fff5be],al
  43f4b6:	inc    edx
  43f4b7:	or     al,BYTE PTR [eax]
  43f4b9:	add    BYTE PTR [esi-0x79fff5be],al
  43f4bf:	inc    edx
  43f4c0:	or     al,BYTE PTR [eax]
  43f4c2:	xchg   BYTE PTR [edx+0xa],al
  43f4c5:	add    BYTE PTR [esi-0x79fff5be],al
  43f4cb:	inc    edx
  43f4cc:	or     al,BYTE PTR [eax]
  43f4ce:	xchg   BYTE PTR [edx+0xa],al
  43f4d1:	add    BYTE PTR [esi-0x79fff5be],al
  43f4d7:	inc    edx
  43f4d8:	or     al,BYTE PTR [eax]
  43f4da:	xchg   BYTE PTR [edx+0xa],al
  43f4dd:	add    BYTE PTR [esi-0x79fff5be],al
  43f4e3:	inc    edx
  43f4e4:	or     al,BYTE PTR [eax]
  43f4e6:	xchg   BYTE PTR [edx+0xa],al
  43f4e9:	add    BYTE PTR [esi-0x79fff5be],al
  43f4ef:	inc    edx
  43f4f0:	or     al,BYTE PTR [eax]
  43f4f2:	xchg   BYTE PTR [edx+0xa],al
  43f4f5:	add    BYTE PTR [esi-0x79fff5be],al
  43f4fb:	inc    edx
  43f4fc:	or     al,BYTE PTR [eax]
  43f4fe:	xchg   BYTE PTR [edx+0xa],al
  43f501:	add    BYTE PTR [esi-0x79fff5be],al
  43f507:	inc    edx
  43f508:	or     al,BYTE PTR [eax]
  43f50a:	xchg   BYTE PTR [edx+0xa],al
  43f50d:	add    BYTE PTR [esi-0x79fff5be],al
  43f513:	inc    edx
  43f514:	or     al,BYTE PTR [eax]
  43f516:	xchg   BYTE PTR [edx+0xa],al
  43f519:	add    BYTE PTR [esi+0xa42],al
  43f51f:	xchg   BYTE PTR [edx+0xa],al
  43f522:	add    BYTE PTR [esi-0x79fff5be],al
  43f528:	inc    edx
  43f529:	or     al,BYTE PTR [eax]
  43f52b:	xchg   BYTE PTR [edx+0xa],al
  43f52e:	add    BYTE PTR [esi-0x79fff5be],al
  43f534:	inc    edx
  43f535:	or     al,BYTE PTR [eax]
  43f537:	xchg   BYTE PTR [edx+0xa],al
  43f53a:	add    BYTE PTR [esi-0x79fff5be],al
  43f540:	inc    edx
  43f541:	or     al,BYTE PTR [eax]
  43f543:	xchg   BYTE PTR [edx+0xa],al
  43f546:	add    BYTE PTR [esi-0x79fff5be],al
  43f54c:	inc    edx
  43f54d:	or     al,BYTE PTR [eax]
  43f54f:	xchg   BYTE PTR [edx+0xa],al
  43f552:	add    BYTE PTR [esi-0x79fff5be],al
  43f558:	inc    edx
  43f559:	or     al,BYTE PTR [eax]
  43f55b:	xchg   BYTE PTR [edx+0xa],al
  43f55e:	add    BYTE PTR [esi+0xa42],al
  43f564:	add    al,0x0
  43f566:	add    BYTE PTR [esi-0x71fff5be],al
  43f56c:	inc    edx
  43f56d:	or     al,BYTE PTR [eax]
  43f56f:	cli    
  43f570:	jo     0x43f50c
  43f572:	xor    edi,edx
  43f574:	jo     0x43f508
  43f576:	xor    edi,edx
  43f578:	jo     0x43f524
  43f57a:	xor    ebp,DWORD PTR [edx]
  43f57c:	jno    0x43f520
  43f57e:	xor    eax,DWORD PTR [esi-0x51fff67e]
  43f584:	inc    edx
  43f585:	or     al,BYTE PTR [eax]
  43f587:	gs jnp 0x43f50b
  43f58a:	cmp    DWORD PTR [esi],edx
  43f58c:	jnp    0x43f51e
  43f58e:	cmp    DWORD PTR [ecx],ecx
  43f590:	jnp    0x43f534
  43f592:	cmp    eax,esi
  43f594:	jp     0x43f56f
  43f596:	cmp    DWORD PTR [eax],edi
  43f598:	jnp    0x43f57c
  43f59a:	cmp    DWORD PTR [edx-0x42c5d888],ecx
  43f5a0:	js     0x43f5fd
  43f5a2:	cmp    bl,BYTE PTR [edi+0x78]
  43f5a5:	xlat   BYTE PTR ds:[ebx]
  43f5a6:	cmp    ah,dl
  43f5a8:	js     0x43f577
  43f5aa:	cmp    al,0xc3
  43f5ac:	jge    0x43f58d
  43f5ae:	cmp    al,0x82
  43f5b0:	jg     0x43f5b9
  43f5b2:	cmp    eax,0x3db47fa9
  43f5b7:	lds    edi,FWORD PTR [esi-0x2f]
  43f5ba:	cmp    eax,0x3de57edf
  43f5bf:	leave  
  43f5c0:	jle    0x43f5c8
  43f5c2:	ds xchg esp,eax
  43f5c4:	jl     0x43f5f2
  43f5c6:	ds ja  0x43f645
  43f5c9:	xor    edi,DWORD PTR [esi]
  43f5cb:	add    BYTE PTR [ecx+0x7c],dh
  43f5ce:	dec    edi
  43f5cf:	ds dec esi
  43f5d1:	jl     0x43f59e
  43f5d3:	ds leave 
  43f5d5:	jnp    0x43f563
  43f5d7:	aas    
  43f5d8:	or     eax,0xe83f977d
  43f5dd:	jl     0x43f599
  43f5df:	aas    
  43f5e0:	mov    ebx,0x6c3fee7c
  43f5e5:	jl     0x43f5f1
  43f5e7:	add    BYTE PTR [esi+0x12000992],al
  43f5ed:	inc    ebx
  43f5ee:	or     al,BYTE PTR [eax]
  43f5f0:	test   BYTE PTR [edx+0x2f],dh
  43f5f3:	xor    BYTE PTR [edi-0x46cfac8e],dh
  43f5f9:	jb     0x43f667
  43f5fb:	xor    dl,dl
  43f5fd:	jb     0x43f58e
  43f5ff:	xor    ch,bh
  43f601:	jb     0x43f59c
  43f603:	xor    BYTE PTR [ebx+esi*2],bl
  43f606:	stos   DWORD PTR es:[edi],eax
  43f607:	xor    cl,ch
  43f609:	jb     0x43f5c0
  43f60b:	xor    BYTE PTR [ebx+0x73],cl
  43f60e:	fnsave [eax]
  43f610:	daa    
  43f611:	jae    0x43f5f4
  43f613:	xor    BYTE PTR [edi],bl
  43f615:	jae    0x43f620
  43f617:	xor    DWORD PTR [edi+0x71],esi
  43f61a:	inc    edx
  43f61b:	xor    eax,eax
  43f61d:	jno    0x43f67d
  43f61f:	xor    DWORD PTR [ebx+0x4316071],esp
  43f625:	jb     0x43f5db
  43f627:	xor    esi,ecx
  43f629:	jno    0x43f60a
  43f62b:	xor    edi,esp
  43f62d:	jno    0x43f610
  43f62f:	xor    DWORD PTR [eax],eax
  43f631:	bnd jno 0x43f628
  43f634:	xor    DWORD PTR [edi+0x72320470],ecx
  43f63a:	jo     0x43f653
  43f63c:	xor    ah,BYTE PTR [ecx-0x73cdc190]
  43f642:	jo     0x43f679
  43f644:	xor    cl,BYTE PTR [ebx+0x70]
  43f647:	inc    ebx
  43f648:	xor    cl,BYTE PTR [eax+0x70]
  43f64b:	pop    esi
  43f64c:	xor    ah,BYTE PTR [eax+esi*2]
  43f64f:	bound  esi,QWORD PTR [edx]
  43f651:	sbb    esi,DWORD PTR [eax+0x78]
  43f654:	xor    dl,BYTE PTR [ecx]
  43f656:	jno    0x43f5e8
  43f658:	xor    al,al
  43f65a:	jo     0x43f622
  43f65c:	xor    dh,BYTE PTR [eax+esi*2+0x6f8032d6]
  43f663:	and    DWORD PTR [ebx],esi
  43f665:	mov    esi,0xd033466f
  43f66a:	outs   dx,DWORD PTR ds:[esi]
  43f66b:	imul   esi,DWORD PTR [ebx],0x337b6fdf
  43f671:	out    dx,eax
  43f672:	outs   dx,DWORD PTR ds:[esi]
  43f673:	mov    ?,WORD PTR [ebx]
  43f675:	adc    ch,BYTE PTR [edi-0x69]
  43f678:	xor    esp,DWORD PTR [edi+ebp*2]
  43f67b:	mov    ebx,0xc46f4b33
  43f680:	xor    esi,DWORD PTR [eax]
  43f682:	outs   dx,DWORD PTR ds:[esi]
  43f683:	out    dx,eax
  43f684:	xor    eax,DWORD PTR [esi-0x79fff5be]
  43f68a:	inc    edx
  43f68b:	or     al,BYTE PTR [eax]
  43f68d:	xchg   BYTE PTR [edx+0xa],al
  43f690:	add    BYTE PTR [esi+0xa42],al
  43f696:	xchg   BYTE PTR [edx+0xa],al
  43f699:	add    BYTE PTR [esi-0x79fff5be],al
  43f69f:	inc    edx
  43f6a0:	or     al,BYTE PTR [eax]
  43f6a2:	xchg   BYTE PTR [edx+0xa],al
  43f6a5:	add    BYTE PTR [esi-0x79fff5be],al
  43f6ab:	inc    edx
  43f6ac:	or     al,BYTE PTR [eax]
  43f6ae:	xchg   BYTE PTR [edx+0xa],al
  43f6b1:	add    BYTE PTR [esi-0x79fff5be],al
  43f6b7:	inc    edx
  43f6b8:	or     al,BYTE PTR [eax]
  43f6ba:	xchg   BYTE PTR [edx+0xa],al
  43f6bd:	add    BYTE PTR [esi-0x79fff5be],al
  43f6c3:	inc    edx
  43f6c4:	or     al,BYTE PTR [eax]
  43f6c6:	xchg   BYTE PTR [edx+0xa],al
  43f6c9:	add    BYTE PTR [esi-0x79fff5be],al
  43f6cf:	inc    edx
  43f6d0:	or     al,BYTE PTR [eax]
  43f6d2:	xchg   BYTE PTR [edx+0xa],al
  43f6d5:	add    BYTE PTR [esi-0x79fff5be],al
  43f6db:	inc    edx
  43f6dc:	or     al,BYTE PTR [eax]
  43f6de:	xchg   BYTE PTR [edx+0xa],al
  43f6e1:	add    BYTE PTR [esi-0x79fff5be],al
  43f6e7:	inc    edx
  43f6e8:	or     al,BYTE PTR [eax]
  43f6ea:	xchg   BYTE PTR [edx+0xa],al
  43f6ed:	add    BYTE PTR [esi-0x79fff5be],al
  43f6f3:	inc    edx
  43f6f4:	or     al,BYTE PTR [eax]
  43f6f6:	xchg   BYTE PTR [edx+0xa],al
  43f6f9:	add    BYTE PTR [eax],al
  43f6fb:	xchg   BYTE PTR [edx+0xa],al
  43f6fe:	add    BYTE PTR [esi-0x79fff5be],al
  43f704:	inc    edx
  43f705:	or     al,BYTE PTR [eax]
  43f707:	xchg   BYTE PTR [edx+0xa],al
  43f70a:	add    BYTE PTR [esi-0x79fff5be],al
  43f710:	inc    edx
  43f711:	or     al,BYTE PTR [eax]
  43f713:	xchg   BYTE PTR [edx+0xa],al
  43f716:	add    BYTE PTR [esi-0x79fff5be],al
  43f71c:	inc    edx
  43f71d:	or     al,BYTE PTR [eax]
  43f71f:	xchg   BYTE PTR [edx+0xa],al
  43f722:	add    BYTE PTR [esi-0x79fff5be],al
  43f728:	inc    edx
  43f729:	or     al,BYTE PTR [eax]
  43f72b:	xchg   BYTE PTR [edx+0xa],al
  43f72e:	add    BYTE PTR [esi-0x79fff5be],al
  43f734:	inc    edx
  43f735:	or     al,BYTE PTR [eax]
  43f737:	xchg   BYTE PTR [edx+0xa],al
  43f73a:	add    BYTE PTR [esi-0x79fff5be],al
  43f740:	inc    edx
  43f741:	or     al,BYTE PTR [eax]
  43f743:	xchg   BYTE PTR [edx+0xa],al
  43f746:	add    BYTE PTR [esi-0x79fff5be],al
  43f74c:	inc    edx
  43f74d:	or     al,BYTE PTR [eax]
  43f74f:	xchg   BYTE PTR [edx+0xa],al
  43f752:	add    BYTE PTR [esi-0x79fff5be],al
  43f758:	inc    edx
  43f759:	or     al,BYTE PTR [eax]
  43f75b:	xchg   BYTE PTR [edx+0xa],al
  43f75e:	add    BYTE PTR [eax],al
  43f760:	xchg   BYTE PTR [edx+0xa],al
  43f763:	add    BYTE PTR [esi-0x79fff5be],al
  43f769:	inc    edx
  43f76a:	or     al,BYTE PTR [eax]
  43f76c:	xchg   BYTE PTR [edx+0xa],al
  43f76f:	add    BYTE PTR [esi-0x79fff5be],al
  43f775:	inc    edx
  43f776:	or     al,BYTE PTR [eax]
  43f778:	xchg   BYTE PTR [edx+0xa],al
  43f77b:	add    BYTE PTR [esi-0x79fff5be],al
  43f781:	inc    edx
  43f782:	or     al,BYTE PTR [eax]
  43f784:	xchg   BYTE PTR [edx+0xa],al
  43f787:	add    BYTE PTR [esi-0x79fff5be],al
  43f78d:	inc    edx
  43f78e:	or     al,BYTE PTR [eax]
  43f790:	xchg   BYTE PTR [edx+0xa],al
  43f793:	add    BYTE PTR [esi-0x79fff5be],al
  43f799:	inc    edx
  43f79a:	or     al,BYTE PTR [eax]
  43f79c:	xchg   BYTE PTR [edx+0xa],al
  43f79f:	add    BYTE PTR [esi-0x79fff5be],al
  43f7a5:	inc    edx
  43f7a6:	or     al,BYTE PTR [eax]
  43f7a8:	xchg   BYTE PTR [edx+0xa],al
  43f7ab:	add    BYTE PTR [esi-0x79fff5be],al
  43f7b1:	inc    edx
  43f7b2:	or     al,BYTE PTR [eax]
  43f7b4:	xchg   BYTE PTR [edx+0xa],al
  43f7b7:	add    BYTE PTR [esi-0x79fff5be],al
  43f7bd:	inc    edx
  43f7be:	or     al,BYTE PTR [eax]
  43f7c0:	xchg   BYTE PTR [edx+0xa],al
  43f7c3:	add    BYTE PTR [eax],al
  43f7c5:	xchg   BYTE PTR [edx+0xa],al
  43f7c8:	add    BYTE PTR [esi-0x79fff5be],al
  43f7ce:	inc    edx
  43f7cf:	or     al,BYTE PTR [eax]
  43f7d1:	xchg   BYTE PTR [edx+0xa],al
  43f7d4:	add    BYTE PTR [esi-0x79fff5be],al
  43f7da:	inc    edx
  43f7db:	or     al,BYTE PTR [eax]
  43f7dd:	xchg   BYTE PTR [edx+0xa],al
  43f7e0:	add    BYTE PTR [esi-0x79fff5be],al
  43f7e6:	inc    edx
  43f7e7:	or     al,BYTE PTR [eax]
  43f7e9:	xchg   BYTE PTR [edx+0xa],al
  43f7ec:	add    BYTE PTR [esi-0x79fff5be],al
  43f7f2:	inc    edx
  43f7f3:	or     al,BYTE PTR [eax]
  43f7f5:	xchg   BYTE PTR [edx+0xa],al
  43f7f8:	add    BYTE PTR [esi-0x79fff5be],al
  43f7fe:	inc    edx
  43f7ff:	or     al,BYTE PTR [eax]
  43f801:	xchg   BYTE PTR [edx+0xa],al
  43f804:	add    BYTE PTR [esi-0x79fff5be],al
  43f80a:	inc    edx
  43f80b:	or     al,BYTE PTR [eax]
  43f80d:	xchg   BYTE PTR [edx+0xa],al
  43f810:	add    BYTE PTR [esi-0x79fff5be],al
  43f816:	inc    edx
  43f817:	or     al,BYTE PTR [eax]
  43f819:	xchg   BYTE PTR [edx+0xa],al
  43f81c:	add    BYTE PTR [esi-0x79fff5be],al
  43f822:	inc    edx
  43f823:	or     al,BYTE PTR [eax]
  43f825:	xchg   BYTE PTR [edx+0xa],al
  43f828:	add    BYTE PTR [eax],al
  43f82a:	xchg   BYTE PTR [edx+0xa],al
  43f82d:	add    BYTE PTR [esi-0x79fff5be],al
  43f833:	inc    edx
  43f834:	or     al,BYTE PTR [eax]
  43f836:	xchg   BYTE PTR [edx+0xa],al
  43f839:	add    BYTE PTR [esi-0x79fff5be],al
  43f83f:	inc    edx
  43f840:	or     al,BYTE PTR [eax]
  43f842:	xchg   BYTE PTR [edx+0xa],al
  43f845:	add    BYTE PTR [esi-0x79fff5be],al
  43f84b:	inc    edx
  43f84c:	or     al,BYTE PTR [eax]
  43f84e:	xchg   BYTE PTR [edx+0xa],al
  43f851:	add    BYTE PTR [esi-0x79fff5be],al
  43f857:	inc    edx
  43f858:	or     al,BYTE PTR [eax]
  43f85a:	xchg   BYTE PTR [edx+0xa],al
  43f85d:	add    BYTE PTR [esi-0x79fff5be],al
  43f863:	inc    edx
  43f864:	or     al,BYTE PTR [eax]
  43f866:	xchg   BYTE PTR [edx+0xa],al
  43f869:	add    BYTE PTR [esi-0x79fff5be],al
  43f86f:	inc    edx
  43f870:	or     al,BYTE PTR [eax]
  43f872:	xchg   BYTE PTR [edx+0xa],al
  43f875:	add    BYTE PTR [esi-0x79fff5be],al
  43f87b:	inc    edx
  43f87c:	or     al,BYTE PTR [eax]
  43f87e:	xchg   BYTE PTR [edx+0xa],al
  43f881:	add    BYTE PTR [esi-0x79fff5be],al
  43f887:	inc    edx
  43f888:	or     al,BYTE PTR [eax]
  43f88a:	xchg   BYTE PTR [edx+0xa],al
  43f88d:	add    BYTE PTR [eax],al
  43f88f:	xchg   BYTE PTR [edx+0xa],al
  43f892:	add    BYTE PTR [esi-0x79fff5be],al
  43f898:	inc    edx
  43f899:	or     al,BYTE PTR [eax]
  43f89b:	xchg   BYTE PTR [edx+0xa],al
  43f89e:	add    BYTE PTR [esi-0x79fff5be],al
  43f8a4:	inc    edx
  43f8a5:	or     al,BYTE PTR [eax]
  43f8a7:	xchg   BYTE PTR [edx+0xa],al
  43f8aa:	add    BYTE PTR [esi-0x79fff5be],al
  43f8b0:	inc    edx
  43f8b1:	or     al,BYTE PTR [eax]
  43f8b3:	xchg   BYTE PTR [edx+0xa],al
  43f8b6:	add    BYTE PTR [esi-0x79fff5be],al
  43f8bc:	inc    edx
  43f8bd:	or     al,BYTE PTR [eax]
  43f8bf:	xchg   BYTE PTR [edx+0xa],al
  43f8c2:	add    BYTE PTR [esi-0x79fff5be],al
  43f8c8:	inc    edx
  43f8c9:	or     al,BYTE PTR [eax]
  43f8cb:	xchg   BYTE PTR [edx+0xa],al
  43f8ce:	add    BYTE PTR [esi-0x79fff5be],al
  43f8d4:	inc    edx
  43f8d5:	or     al,BYTE PTR [eax]
  43f8d7:	xchg   BYTE PTR [edx+0xa],al
  43f8da:	add    BYTE PTR [esi-0x79fff5be],al
  43f8e0:	inc    edx
  43f8e1:	or     al,BYTE PTR [eax]
  43f8e3:	xchg   BYTE PTR [edx+0xa],al
  43f8e6:	add    BYTE PTR [esi-0x79fff5be],al
  43f8ec:	inc    edx
  43f8ed:	or     al,BYTE PTR [eax]
  43f8ef:	xchg   BYTE PTR [edx+0xa],al
  43f8f2:	add    BYTE PTR [eax],al
  43f8f4:	xchg   BYTE PTR [edx+0xa],al
  43f8f7:	add    BYTE PTR [esi-0x79fff5be],al
  43f8fd:	inc    edx
  43f8fe:	or     al,BYTE PTR [eax]
  43f900:	xchg   BYTE PTR [edx+0xa],al
  43f903:	add    BYTE PTR [esi-0x79fff5be],al
  43f909:	inc    edx
  43f90a:	or     al,BYTE PTR [eax]
  43f90c:	xchg   BYTE PTR [edx+0xa],al
  43f90f:	add    BYTE PTR [esi-0x79fff5be],al
  43f915:	inc    edx
  43f916:	or     al,BYTE PTR [eax]
  43f918:	xchg   BYTE PTR [edx+0xa],al
  43f91b:	add    BYTE PTR [esi-0x79fff5be],al
  43f921:	inc    edx
  43f922:	or     al,BYTE PTR [eax]
  43f924:	xchg   BYTE PTR [edx+0xa],al
  43f927:	add    BYTE PTR [esi-0x79fff5be],al
  43f92d:	inc    edx
  43f92e:	or     al,BYTE PTR [eax]
  43f930:	xchg   BYTE PTR [edx+0xa],al
  43f933:	add    BYTE PTR [esi-0x79fff5be],al
  43f939:	inc    edx
  43f93a:	or     al,BYTE PTR [eax]
  43f93c:	xchg   BYTE PTR [edx+0xa],al
  43f93f:	add    BYTE PTR [esi-0x79fff5be],al
  43f945:	inc    edx
  43f946:	or     al,BYTE PTR [eax]
  43f948:	xchg   BYTE PTR [edx+0xa],al
  43f94b:	add    BYTE PTR [esi-0x79fff5be],al
  43f951:	inc    edx
  43f952:	or     al,BYTE PTR [eax]
  43f954:	xchg   BYTE PTR [edx+0xa],al
  43f957:	add    BYTE PTR [eax],al
  43f959:	xchg   BYTE PTR [edx+0xa],al
  43f95c:	add    BYTE PTR [esi-0x79fff5be],al
  43f962:	inc    edx
  43f963:	or     al,BYTE PTR [eax]
  43f965:	xchg   BYTE PTR [edx+0xa],al
  43f968:	add    BYTE PTR [esi-0x79fff5be],al
  43f96e:	inc    edx
  43f96f:	or     al,BYTE PTR [eax]
  43f971:	sub    BYTE PTR ds:0x2d840044,0x44
  43f978:	add    BYTE PTR [eax-0x73ffbbd3],cl
  43f97e:	sub    eax,0x2d900044
  43f983:	inc    esp
  43f984:	add    BYTE PTR [ebp+ebp*1+0x2d980044],dl
  43f98b:	inc    esp
  43f98c:	add    BYTE PTR [ebp+ebp*1+0x2da00044],bl
  43f993:	inc    esp
  43f994:	add    BYTE PTR [ebp+ebp*1+0x2da80044],ah
  43f99b:	inc    esp
  43f99c:	add    BYTE PTR [ebp+ebp*1+0x2db00044],ch
  43f9a3:	inc    esp
  43f9a4:	add    BYTE PTR [ebp+ebp*1+0x2db80044],dh
  43f9ab:	inc    esp
  43f9ac:	add    BYTE PTR [ebp+ebp*1+0x2dc00044],bh
  43f9b3:	inc    esp
  43f9b4:	add    ah,al
  43f9b6:	sub    eax,0x2dc80044
  43f9bb:	inc    esp
  43f9bc:	add    ah,cl
  43f9be:	sub    eax,0x2dd00044
  43f9c3:	inc    esp
  43f9c4:	add    ah,dl
  43f9c6:	sub    eax,0x2dd80044
  43f9cb:	inc    esp
  43f9cc:	add    ah,bl
  43f9ce:	sub    eax,0x2de00044
  43f9d3:	inc    esp
  43f9d4:	add    ah,ah
  43f9d6:	sub    eax,0x2de80044
  43f9db:	inc    esp
  43f9dc:	add    ah,ch
  43f9de:	sub    eax,0x2df00044
  43f9e3:	inc    esp
  43f9e4:	add    ah,dh
  43f9e6:	sub    eax,0x2df80044
  43f9eb:	inc    esp
  43f9ec:	add    ah,bh
  43f9ee:	sub    eax,0x2e000044
  43f9f3:	inc    esp
  43f9f4:	add    BYTE PTR [esi+ebp*1],al
  43f9f7:	inc    esp
  43f9f8:	add    BYTE PTR [eax],cl
  43f9fa:	cs inc esp
  43f9fc:	add    BYTE PTR [esi+ebp*1],cl
  43f9ff:	inc    esp
  43fa00:	add    BYTE PTR [eax],dl
  43fa02:	cs inc esp
  43fa04:	add    BYTE PTR [esi+ebp*1],dl
  43fa07:	inc    esp
  43fa08:	add    BYTE PTR [eax],bl
  43fa0a:	cs inc esp
  43fa0c:	add    BYTE PTR [esi+ebp*1],bl
  43fa0f:	inc    esp
  43fa10:	add    BYTE PTR [eax],ah
  43fa12:	cs inc esp
  43fa14:	add    BYTE PTR [esi+ebp*1],ah
  43fa17:	inc    esp
  43fa18:	add    BYTE PTR [eax],ch
  43fa1a:	cs inc esp
  43fa1c:	add    BYTE PTR [esi+ebp*1],ch
  43fa1f:	inc    esp
  43fa20:	add    BYTE PTR [eax],dh
  43fa22:	cs inc esp
  43fa24:	add    BYTE PTR [esi+ebp*1],dh
  43fa27:	inc    esp
  43fa28:	add    BYTE PTR [eax],bh
  43fa2a:	cs inc esp
  43fa2c:	add    BYTE PTR [esi+ebp*1],bh
  43fa2f:	inc    esp
  43fa30:	add    BYTE PTR [eax+0x2e],al
  43fa33:	inc    esp
  43fa34:	add    BYTE PTR [esi+ebp*1],dl
  43fa37:	inc    esp
  43fa38:	add    BYTE PTR [esi+ebp*1+0x44],al
  43fa3c:	add    BYTE PTR [eax+0x2e],cl
  43fa3f:	inc    esp
  43fa40:	add    BYTE PTR [esi+ebp*1+0x44],cl
  43fa44:	add    BYTE PTR [eax+0x2e],dl
  43fa47:	inc    esp
  43fa48:	add    BYTE PTR [eax+0x2d],dh
  43fa4b:	inc    esp
  43fa4c:	add    BYTE PTR [esi+ebp*1+0x44],dl
  43fa50:	add    BYTE PTR [eax+0x2e],bl
  43fa53:	inc    esp
  43fa54:	add    BYTE PTR [esi+ebp*1+0x44],bl
  43fa58:	add    BYTE PTR [eax+0x2e],ah
  43fa5b:	inc    esp
  43fa5c:	add    BYTE PTR [esi+ebp*1+0x44],ah
  43fa60:	add    BYTE PTR [eax+0x2e],ch
  43fa63:	inc    esp
  43fa64:	add    ah,bl
  43fa66:	sub    eax,0x2e6c0044
  43fa6b:	inc    esp
  43fa6c:	add    BYTE PTR [eax+0x2e],dh
  43fa6f:	inc    esp
  43fa70:	add    BYTE PTR [esi+ebp*1+0x44],dh
  43fa74:	add    BYTE PTR [eax+0x2e],bh
  43fa77:	inc    esp
  43fa78:	add    BYTE PTR [esi+ebp*1+0x44],bh
  43fa7c:	add    BYTE PTR [eax-0x7bffbbd2],al
  43fa82:	cs inc esp
  43fa84:	add    BYTE PTR [eax],al
  43fa86:	cs inc esp
  43fa88:	add    BYTE PTR [ebp+ebp*1+0x2e880044],cl
  43fa8f:	inc    esp
  43fa90:	add    BYTE PTR [esi+ebp*1+0x2e900044],cl
  43fa97:	inc    esp
  43fa98:	add    BYTE PTR [esi+ebp*1+0x2e980044],dl
  43fa9f:	inc    esp
  43faa0:	add    BYTE PTR [esi+ebp*1+0x2ea00044],bl
  43faa7:	inc    esp
  43faa8:	add    BYTE PTR [esi+ebp*1+0x2ea80044],ah
  43faaf:	inc    esp
  43fab0:	add    BYTE PTR [esi+ebp*1+0x2eb00044],ch
  43fab7:	inc    esp
  43fab8:	add    BYTE PTR [esi+ebp*1],bh
  43fabb:	inc    esp
  43fabc:	add    BYTE PTR [esi+ebp*1+0x2eb80044],dh
  43fac3:	inc    esp
  43fac4:	add    BYTE PTR [esi+ebp*1+0x2ec00044],bh
  43facb:	inc    esp
  43facc:	add    ah,al
  43face:	cs inc esp
  43fad0:	add    BYTE PTR [eax+0x2e],dl
  43fad3:	inc    esp
  43fad4:	add    al,cl
  43fad6:	cs inc esp
  43fad8:	add    ah,cl
  43fada:	cs inc esp
  43fadc:	add    al,dl
  43fade:	cs inc esp
  43fae0:	add    al,dl
  43fae2:	sub    eax,0x2ed40044
  43fae7:	inc    esp
  43fae8:	add    al,bl
  43faea:	cs inc esp
  43faec:	add    BYTE PTR [esi+ebp*1],dh
  43faef:	inc    esp
  43faf0:	add    ah,bl
  43faf2:	cs inc esp
  43faf4:	add    al,ah
  43faf6:	cs inc esp
  43faf8:	add    BYTE PTR [eax-0x1bffbbd2],al
  43fafe:	cs inc esp
  43fb00:	add    al,ch
  43fb02:	cs inc esp
  43fb04:	add    ah,ch
  43fb06:	cs inc esp
  43fb08:	add    al,dh
  43fb0a:	cs inc esp
  43fb0c:	add    ah,dh
  43fb0e:	cs inc esp
  43fb10:	add    al,bh
  43fb12:	cs inc esp
  43fb14:	add    ah,bh
  43fb16:	cs inc esp
  43fb18:	add    BYTE PTR [eax],al
  43fb1a:	das    
  43fb1b:	inc    esp
  43fb1c:	add    BYTE PTR [edi+ebp*1],al
  43fb1f:	inc    esp
  43fb20:	add    BYTE PTR [eax],cl
  43fb22:	das    
  43fb23:	inc    esp
  43fb24:	add    BYTE PTR [edi+ebp*1],cl
  43fb27:	inc    esp
  43fb28:	add    BYTE PTR [eax],dl
  43fb2a:	das    
  43fb2b:	inc    esp
  43fb2c:	add    al,bh
  43fb2e:	cs inc esp
  43fb30:	add    BYTE PTR [edi+ebp*1],dl
  43fb33:	inc    esp
  43fb34:	add    BYTE PTR [eax],bl
  43fb36:	das    
  43fb37:	inc    esp
  43fb38:	add    BYTE PTR [edi+ebp*1],bl
  43fb3b:	inc    esp
  43fb3c:	add    BYTE PTR [eax],ah
  43fb3e:	das    
  43fb3f:	inc    esp
  43fb40:	add    BYTE PTR [edi+ebp*1],ah
  43fb43:	inc    esp
  43fb44:	add    BYTE PTR [eax],ch
  43fb46:	das    
  43fb47:	inc    esp
  43fb48:	add    BYTE PTR [edi+ebp*1],ch
  43fb4b:	inc    esp
  43fb4c:	add    ah,dl
  43fb4e:	sub    eax,0x2f300044
  43fb53:	inc    esp
  43fb54:	add    BYTE PTR [edi+ebp*1],dh
  43fb57:	inc    esp
  43fb58:	add    BYTE PTR [eax],bh
  43fb5a:	das    
  43fb5b:	inc    esp
  43fb5c:	add    BYTE PTR [edi+ebp*1],bh
  43fb5f:	inc    esp
  43fb60:	add    BYTE PTR [eax+0x2f],al
  43fb63:	inc    esp
  43fb64:	add    BYTE PTR [eax],ah
  43fb66:	das    
  43fb67:	inc    esp
  43fb68:	add    BYTE PTR [edi+ebp*1+0x44],al
  43fb6c:	add    BYTE PTR [eax+0x2f],cl
  43fb6f:	inc    esp
  43fb70:	add    BYTE PTR [edi+ebp*1+0x44],cl
  43fb74:	add    BYTE PTR [eax+0x2f],dl
  43fb77:	inc    esp
  43fb78:	add    BYTE PTR [edi+ebp*1+0x44],dl
  43fb7c:	add    BYTE PTR [eax+0x2f],bl
  43fb7f:	inc    esp
  43fb80:	add    BYTE PTR [edi+ebp*1+0x44],bl
  43fb84:	add    al,al
  43fb86:	sub    eax,0x2e8c0044
  43fb8b:	inc    esp
  43fb8c:	add    BYTE PTR [eax+0x2f],ah
  43fb8f:	inc    esp
  43fb90:	add    BYTE PTR [edi+ebp*1+0x44],ah
  43fb94:	add    BYTE PTR [eax+0x2f],ch
  43fb97:	inc    esp
  43fb98:	add    BYTE PTR [edi+ebp*1+0x44],ch
  43fb9c:	add    BYTE PTR [eax+0x2d],ch
  43fb9f:	inc    esp
  43fba0:	add    BYTE PTR [eax+0x2f],dh
  43fba3:	inc    esp
  43fba4:	add    BYTE PTR [edi+ebp*1+0x44],dh
  43fba8:	add    BYTE PTR [eax+0x2f],bh
  43fbab:	inc    esp
  43fbac:	add    BYTE PTR [eax+0x2d],bh
  43fbaf:	inc    esp
  43fbb0:	add    BYTE PTR [edi+ebp*1+0x44],bh
  43fbb4:	add    BYTE PTR [eax-0x47ffbbd1],al
  43fbba:	sub    eax,0x2f840044
  43fbbf:	inc    esp
  43fbc0:	add    BYTE PTR [eax-0x7ffbbd1],cl
  43fbc6:	sub    eax,0x2f8c0044
  43fbcb:	inc    esp
  43fbcc:	add    BYTE PTR [eax-0x6bffbbd1],dl
  43fbd2:	das    
  43fbd3:	inc    esp
  43fbd4:	add    ah,dh
  43fbd6:	sub    eax,0x2d680044
  43fbdb:	inc    esp
  43fbdc:	add    BYTE PTR [esi+ebp*1+0x44],ah
  43fbe0:	add    BYTE PTR [eax+0x2c00442f],bl
  43fbe6:	das    
  43fbe7:	inc    esp
  43fbe8:	add    BYTE PTR [edi+ebp*1],dl
  43fbeb:	inc    esp
  43fbec:	add    BYTE PTR [edi+ebp*1+0x2d7c0044],bl
  43fbf3:	inc    esp
  43fbf4:	add    BYTE PTR [eax-0x63ffbbd1],ah
  43fbfa:	sub    eax,0x2fa40044
  43fbff:	inc    esp
  43fc00:	add    BYTE PTR [eax-0x53ffbbd1],ch
  43fc06:	das    
  43fc07:	inc    esp
  43fc08:	add    BYTE PTR [eax+0x5400442f],dh
  43fc0e:	das    
  43fc0f:	inc    esp
  43fc10:	add    BYTE PTR [edi+ebp*1+0x2fcc0044],dh
  43fc17:	inc    esp
  43fc18:	add    al,dl
  43fc1a:	das    
  43fc1b:	inc    esp
  43fc1c:	add    ah,dl
  43fc1e:	das    
  43fc1f:	inc    esp
  43fc20:	add    al,bl
  43fc22:	das    
  43fc23:	inc    esp
  43fc24:	add    ah,cl
  43fc26:	das    
  43fc27:	inc    esp
  43fc28:	add    ah,bl
  43fc2a:	das    
  43fc2b:	inc    esp
  43fc2c:	add    al,ah
  43fc2e:	das    
  43fc2f:	inc    esp
  43fc30:	add    ah,ah
  43fc32:	das    
  43fc33:	inc    esp
  43fc34:	add    al,ch
  43fc36:	das    
  43fc37:	inc    esp
  43fc38:	add    ah,ch
  43fc3a:	das    
  43fc3b:	inc    esp
  43fc3c:	add    al,dh
  43fc3e:	das    
  43fc3f:	inc    esp
  43fc40:	add    ah,dh
  43fc42:	das    
  43fc43:	inc    esp
  43fc44:	add    al,bh
  43fc46:	das    
  43fc47:	inc    esp
  43fc48:	add    ah,bh
  43fc4a:	das    
  43fc4b:	inc    esp
  43fc4c:	add    BYTE PTR [eax],al
  43fc4e:	xor    BYTE PTR [eax+eax*1+0x4],al
  43fc52:	xor    BYTE PTR [eax+eax*1+0x8],al
  43fc56:	xor    BYTE PTR [eax+eax*1+0xc],al
  43fc5a:	xor    BYTE PTR [eax+eax*1+0x10],al
  43fc5e:	xor    BYTE PTR [eax+eax*1+0x14],al
  43fc62:	xor    BYTE PTR [eax+eax*1+0x18],al
  43fc66:	xor    BYTE PTR [eax+eax*1+0x1c],al
  43fc6a:	xor    BYTE PTR [eax+eax*1+0x20],al
  43fc6e:	xor    BYTE PTR [eax+eax*1+0x24],al
  43fc72:	xor    BYTE PTR [eax+eax*1+0x28],al
  43fc76:	xor    BYTE PTR [eax+eax*1+0x2c],al
  43fc7a:	xor    BYTE PTR [eax+eax*1+0x30],al
  43fc7e:	xor    BYTE PTR [eax+eax*1+0x34],al
  43fc82:	xor    BYTE PTR [eax+eax*1+0x38],al
  43fc86:	xor    BYTE PTR [eax+eax*1+0x3c],al
  43fc8a:	xor    BYTE PTR [eax+eax*1+0x40],al
  43fc8e:	xor    BYTE PTR [eax+eax*1+0x44],al
  43fc92:	xor    BYTE PTR [eax+eax*1+0x48],al
  43fc96:	xor    BYTE PTR [eax+eax*1+0x4c],al
  43fc9a:	xor    BYTE PTR [eax+eax*1+0x50],al
  43fc9e:	xor    BYTE PTR [eax+eax*1-0x18],al
  43fca2:	das    
  43fca3:	inc    esp
  43fca4:	add    BYTE PTR [eax+esi*1+0x44],dl
  43fca8:	add    BYTE PTR [eax+0x30],bl
  43fcab:	inc    esp
  43fcac:	add    al,bh
  43fcae:	das    
  43fcaf:	inc    esp
  43fcb0:	add    BYTE PTR [eax+esi*1+0x44],bl
  43fcb4:	add    BYTE PTR [eax+0x30],ah
  43fcb7:	inc    esp
  43fcb8:	add    BYTE PTR [eax+esi*1+0x44],ah
  43fcbc:	add    BYTE PTR [eax+0x30],ch
  43fcbf:	inc    esp
  43fcc0:	add    BYTE PTR [eax+esi*1+0x44],ch
  43fcc4:	add    BYTE PTR [eax+0x30],dh
  43fcc7:	inc    esp
  43fcc8:	add    BYTE PTR [eax+esi*1+0x44],dh
  43fccc:	add    BYTE PTR [eax+0x30],bh
  43fccf:	inc    esp
  43fcd0:	add    BYTE PTR [eax+esi*1+0x44],bh
  43fcd4:	add    BYTE PTR [eax-0x7bffbbd0],al
  43fcda:	xor    BYTE PTR [eax+eax*1-0x78],al
  43fcde:	xor    BYTE PTR [eax+eax*1-0x74],al
  43fce2:	xor    BYTE PTR [eax+eax*1-0x70],al
  43fce6:	xor    BYTE PTR [eax+eax*1+0x0],al
  43fcea:	xor    BYTE PTR [eax+eax*1-0x6c],al
  43fcee:	xor    BYTE PTR [eax+eax*1-0x68],al
  43fcf2:	xor    BYTE PTR [eax+eax*1-0x64],al
  43fcf6:	xor    BYTE PTR [eax+eax*1-0x60],al
  43fcfa:	xor    BYTE PTR [eax+eax*1+0x4c],al
  43fcfe:	xor    BYTE PTR [eax+eax*1-0x5c],al
  43fd02:	xor    BYTE PTR [eax+eax*1-0x58],al
  43fd06:	xor    BYTE PTR [eax+eax*1-0x54],al
  43fd0a:	xor    BYTE PTR [eax+eax*1-0x50],al
  43fd0e:	xor    BYTE PTR [eax+eax*1-0x14],al
  43fd12:	das    
  43fd13:	inc    esp
  43fd14:	add    BYTE PTR [eax+esi*1+0x30b80044],dh
  43fd1b:	inc    esp
  43fd1c:	add    BYTE PTR [eax+esi*1+0x30c00044],bh
  43fd23:	inc    esp
  43fd24:	add    ah,al
  43fd26:	xor    BYTE PTR [eax+eax*1-0x34],al
  43fd2a:	das    
  43fd2b:	inc    esp
  43fd2c:	add    al,cl
  43fd2e:	xor    BYTE PTR [eax+eax*1+0x54],al
  43fd32:	xor    BYTE PTR [eax+eax*1+0x3c],al
  43fd36:	xor    BYTE PTR [eax+eax*1+0x70],al
  43fd3a:	xor    BYTE PTR [eax+eax*1-0x34],al
  43fd3e:	xor    BYTE PTR [eax+eax*1-0x8],al
  43fd42:	das    
  43fd43:	inc    esp
  43fd44:	add    al,dl
  43fd46:	xor    BYTE PTR [eax+eax*1-0x74],al
  43fd4a:	xor    BYTE PTR [eax+eax*1-0x2c],al
  43fd4e:	xor    BYTE PTR [eax+eax*1-0x28],al
  43fd52:	xor    BYTE PTR [eax+eax*1-0x24],al
  43fd56:	xor    BYTE PTR [eax+eax*1-0x74],al
  43fd5a:	xor    BYTE PTR [eax+eax*1+0x54],al
  43fd5e:	xor    BYTE PTR [eax+eax*1-0x20],al
  43fd62:	xor    BYTE PTR [eax+eax*1-0x1c],al
  43fd66:	xor    BYTE PTR [eax+eax*1-0x18],al
  43fd6a:	xor    BYTE PTR [eax+eax*1-0x14],al
  43fd6e:	xor    BYTE PTR [eax+eax*1-0x10],al
  43fd72:	xor    BYTE PTR [eax+eax*1-0xc],al
  43fd76:	xor    BYTE PTR [eax+eax*1-0x8],al
  43fd7a:	xor    BYTE PTR [eax+eax*1-0x4],al
  43fd7e:	xor    BYTE PTR [eax+eax*1-0x7c],al
  43fd82:	xor    BYTE PTR [eax+eax*1+0x0],al
  43fd86:	xor    DWORD PTR [eax+eax*1+0x4],eax
  43fd8a:	xor    DWORD PTR [eax+eax*1+0x8],eax
  43fd8e:	xor    DWORD PTR [eax+eax*1+0xc],eax
  43fd92:	xor    DWORD PTR [eax+eax*1+0x10],eax
  43fd96:	xor    DWORD PTR [eax+eax*1+0x14],eax
  43fd9a:	xor    DWORD PTR [eax+eax*1+0x18],eax
  43fd9e:	xor    DWORD PTR [eax+eax*1-0x1c],eax
  43fda2:	xor    BYTE PTR [eax+eax*1+0x1c],al
  43fda6:	xor    DWORD PTR [eax+eax*1+0x20],eax
  43fdaa:	xor    DWORD PTR [eax+eax*1+0x24],eax
  43fdae:	xor    DWORD PTR [eax+eax*1+0x28],eax
  43fdb2:	xor    DWORD PTR [eax+eax*1+0x2c],eax
  43fdb6:	xor    DWORD PTR [eax+eax*1+0x30],eax
  43fdba:	xor    DWORD PTR [eax+eax*1+0x34],eax
  43fdbe:	xor    DWORD PTR [eax+eax*1+0x38],eax
  43fdc2:	xor    DWORD PTR [eax+eax*1+0x74],eax
  43fdc6:	xor    BYTE PTR [eax+eax*1+0x3c],al
  43fdca:	xor    DWORD PTR [eax+eax*1+0x40],eax
  43fdce:	xor    DWORD PTR [eax+eax*1+0x44],eax
  43fdd2:	xor    DWORD PTR [eax+eax*1+0x48],eax
  43fdd6:	xor    DWORD PTR [eax+eax*1+0x60],eax
  43fdda:	xor    BYTE PTR [eax+eax*1+0x4c],al
  43fdde:	xor    DWORD PTR [eax+eax*1+0x50],eax
  43fde2:	xor    DWORD PTR [eax+eax*1+0x54],eax
  43fde6:	xor    DWORD PTR [eax+eax*1-0x70],eax
  43fdea:	xor    BYTE PTR [eax+eax*1+0x1c],al
  43fdee:	xor    BYTE PTR [eax+eax*1+0x3c],al
  43fdf2:	xor    DWORD PTR [eax+eax*1+0x58],eax
  43fdf6:	xor    DWORD PTR [eax+eax*1+0x5c],eax
  43fdfa:	xor    DWORD PTR [eax+eax*1+0x60],eax
  43fdfe:	xor    DWORD PTR [eax+eax*1+0x64],eax
  43fe02:	xor    DWORD PTR [eax+eax*1+0x68],eax
  43fe06:	xor    DWORD PTR [eax+eax*1+0x6c],eax
  43fe0a:	xor    DWORD PTR [eax+eax*1+0x14],eax
  43fe0e:	xor    DWORD PTR [eax+eax*1+0x70],eax
  43fe12:	xor    DWORD PTR [eax+eax*1+0x74],eax
  43fe16:	xor    DWORD PTR [eax+eax*1+0x78],eax
  43fe1a:	xor    DWORD PTR [eax+eax*1+0x7c],eax
  43fe1e:	xor    DWORD PTR [eax+eax*1-0x80],eax
  43fe22:	xor    DWORD PTR [eax+eax*1-0x7c],eax
  43fe26:	xor    DWORD PTR [eax+eax*1-0x78],eax
  43fe2a:	xor    DWORD PTR [eax+eax*1-0x74],eax
  43fe2e:	xor    DWORD PTR [eax+eax*1-0x70],eax
  43fe32:	xor    DWORD PTR [eax+eax*1-0x6c],eax
  43fe36:	xor    DWORD PTR [eax+eax*1-0x68],eax
  43fe3a:	xor    DWORD PTR [eax+eax*1-0x64],eax
  43fe3e:	xor    DWORD PTR [eax+eax*1-0x60],eax
  43fe42:	xor    DWORD PTR [eax+eax*1+0x1c],eax
  43fe46:	xor    BYTE PTR [eax+eax*1+0x7c],al
  43fe4a:	xor    DWORD PTR [eax+eax*1-0x5c],eax
  43fe4e:	xor    DWORD PTR [eax+eax*1-0x58],eax
  43fe52:	xor    DWORD PTR [eax+eax*1-0x54],eax
  43fe56:	xor    DWORD PTR [eax+eax*1-0x50],eax
  43fe5a:	xor    DWORD PTR [eax+eax*1-0x4c],eax
  43fe5e:	xor    DWORD PTR [eax+eax*1+0x24],eax
  43fe62:	xor    BYTE PTR [eax+eax*1-0x48],al
  43fe66:	xor    DWORD PTR [eax+eax*1-0x44],eax
  43fe6a:	xor    DWORD PTR [eax+eax*1-0x40],eax
  43fe6e:	xor    DWORD PTR [eax+eax*1-0x3c],eax
  43fe72:	xor    DWORD PTR [eax+eax*1-0x38],eax
  43fe76:	xor    DWORD PTR [eax+eax*1-0x34],eax
  43fe7a:	xor    DWORD PTR [eax+eax*1-0x30],eax
  43fe7e:	xor    DWORD PTR [eax+eax*1-0x2c],eax
  43fe82:	xor    DWORD PTR [eax+eax*1-0x28],eax
  43fe86:	xor    DWORD PTR [eax+eax*1+0x5c],eax
  43fe8a:	xor    DWORD PTR [eax+eax*1-0x24],eax
  43fe8e:	xor    DWORD PTR [eax+eax*1+0x70],eax
  43fe92:	xor    DWORD PTR [eax+eax*1-0x20],eax
  43fe96:	xor    DWORD PTR [eax+eax*1-0x1c],eax
  43fe9a:	xor    DWORD PTR [eax+eax*1-0x18],eax
  43fe9e:	xor    DWORD PTR [eax+eax*1-0x14],eax
  43fea2:	xor    DWORD PTR [eax+eax*1-0x10],eax
  43fea6:	xor    DWORD PTR [eax+eax*1+0x20],eax
  43feaa:	xor    DWORD PTR [eax+eax*1-0x24],eax
  43feae:	das    
  43feaf:	inc    esp
  43feb0:	add    BYTE PTR [ecx+esi*1],dh
  43feb3:	inc    esp
  43feb4:	add    ah,dh
  43feb6:	xor    DWORD PTR [eax+eax*1-0x8],eax
  43feba:	xor    DWORD PTR [eax+eax*1-0x4],eax
  43febe:	xor    DWORD PTR [eax+eax*1+0x30],eax
  43fec2:	xor    DWORD PTR [eax+eax*1+0x0],eax
  43fec6:	xor    al,BYTE PTR [eax+eax*1+0x54]
  43feca:	xor    DWORD PTR [eax+eax*1+0x4],eax
  43fece:	xor    al,BYTE PTR [eax+eax*1+0x8]
  43fed2:	xor    al,BYTE PTR [eax+eax*1+0xc]
  43fed6:	xor    al,BYTE PTR [eax+eax*1+0x10]
  43feda:	xor    al,BYTE PTR [eax+eax*1+0x14]
  43fede:	xor    al,BYTE PTR [eax+eax*1+0x18]
  43fee2:	xor    al,BYTE PTR [eax+eax*1+0x1c]
  43fee6:	xor    al,BYTE PTR [eax+eax*1+0x20]
  43feea:	xor    al,BYTE PTR [eax+eax*1+0x24]
  43feee:	xor    al,BYTE PTR [eax+eax*1+0x28]
  43fef2:	xor    al,BYTE PTR [eax+eax*1+0x2c]
  43fef6:	xor    al,BYTE PTR [eax+eax*1+0x30]
  43fefa:	xor    al,BYTE PTR [eax+eax*1+0x34]
  43fefe:	xor    al,BYTE PTR [eax+eax*1+0x38]
  43ff02:	xor    al,BYTE PTR [eax+eax*1+0x4]
  43ff06:	xor    BYTE PTR [eax+eax*1+0x3c],al
  43ff0a:	xor    al,BYTE PTR [eax+eax*1+0x40]
  43ff0e:	xor    al,BYTE PTR [eax+eax*1+0x44]
  43ff12:	xor    al,BYTE PTR [eax+eax*1+0x48]
  43ff16:	xor    al,BYTE PTR [eax+eax*1+0x4c]
  43ff1a:	xor    al,BYTE PTR [eax+eax*1+0x50]
  43ff1e:	xor    al,BYTE PTR [eax+eax*1-0x68]
  43ff22:	xor    BYTE PTR [eax+eax*1-0x48],al
  43ff26:	xor    BYTE PTR [eax+eax*1+0x54],al
  43ff2a:	xor    al,BYTE PTR [eax+eax*1+0x58]
  43ff2e:	xor    al,BYTE PTR [eax+eax*1+0x5c]
  43ff32:	xor    al,BYTE PTR [eax+eax*1-0x2c]
  43ff36:	xor    al,BYTE PTR [eax+eax*1-0x28]
  43ff3a:	xor    al,BYTE PTR [eax+eax*1-0x24]
  43ff3e:	xor    al,BYTE PTR [eax+eax*1-0x20]
  43ff42:	xor    al,BYTE PTR [eax+eax*1-0x1c]
  43ff46:	xor    al,BYTE PTR [eax+eax*1-0x18]
  43ff4a:	xor    al,BYTE PTR [eax+eax*1-0x14]
  43ff4e:	xor    al,BYTE PTR [eax+eax*1-0x10]
  43ff52:	xor    al,BYTE PTR [eax+eax*1-0xc]
  43ff56:	xor    al,BYTE PTR [eax+eax*1-0x8]
  43ff5a:	xor    al,BYTE PTR [eax+eax*1-0x4]
  43ff5e:	xor    al,BYTE PTR [eax+eax*1+0x0]
  43ff62:	xor    eax,DWORD PTR [eax+eax*1+0x4]
  43ff66:	xor    eax,DWORD PTR [eax+eax*1+0x8]
  43ff6a:	xor    eax,DWORD PTR [eax+eax*1+0xc]
  43ff6e:	xor    eax,DWORD PTR [eax+eax*1+0x10]
  43ff72:	xor    eax,DWORD PTR [eax+eax*1+0x14]
  43ff76:	xor    eax,DWORD PTR [eax+eax*1+0x18]
  43ff7a:	xor    eax,DWORD PTR [eax+eax*1+0x1c]
  43ff7e:	xor    eax,DWORD PTR [eax+eax*1+0x20]
  43ff82:	xor    eax,DWORD PTR [eax+eax*1+0x24]
  43ff86:	xor    eax,DWORD PTR [eax+eax*1+0x28]
  43ff8a:	xor    eax,DWORD PTR [eax+eax*1+0x2c]
  43ff8e:	xor    eax,DWORD PTR [eax+eax*1+0x30]
  43ff92:	xor    eax,DWORD PTR [eax+eax*1+0x34]
  43ff96:	xor    eax,DWORD PTR [eax+eax*1+0x38]
  43ff9a:	xor    eax,DWORD PTR [eax+eax*1+0x0]
  43ff9e:	xor    eax,DWORD PTR [eax+eax*1+0x3c]
  43ffa2:	xor    eax,DWORD PTR [eax+eax*1+0x40]
  43ffa6:	xor    eax,DWORD PTR [eax+eax*1+0x44]
  43ffaa:	xor    eax,DWORD PTR [eax+eax*1+0x48]
  43ffae:	xor    eax,DWORD PTR [eax+eax*1+0x4c]
  43ffb2:	xor    eax,DWORD PTR [eax+eax*1+0x50]
  43ffb6:	xor    eax,DWORD PTR [eax+eax*1-0x20]
  43ffba:	xor    al,BYTE PTR [eax+eax*1+0x54]
  43ffbe:	xor    eax,DWORD PTR [eax+eax*1+0x58]
  43ffc2:	xor    eax,DWORD PTR [eax+eax*1+0x54]
  43ffc6:	xor    eax,DWORD PTR [eax+eax*1+0x5c]
  43ffca:	xor    eax,DWORD PTR [eax+eax*1+0x60]
  43ffce:	xor    eax,DWORD PTR [eax+eax*1+0x64]
  43ffd2:	xor    eax,DWORD PTR [eax+eax*1+0x68]
  43ffd6:	xor    eax,DWORD PTR [eax+eax*1+0x6c]
  43ffda:	xor    eax,DWORD PTR [eax+eax*1+0x70]
  43ffde:	xor    eax,DWORD PTR [eax+eax*1+0x74]
  43ffe2:	xor    eax,DWORD PTR [eax+eax*1+0x78]
  43ffe6:	xor    eax,DWORD PTR [eax+eax*1+0x50]
  43ffea:	xor    eax,DWORD PTR [eax+eax*1+0x7c]
  43ffee:	xor    eax,DWORD PTR [eax+eax*1+0x20]
  43fff2:	xor    eax,DWORD PTR [eax+eax*1-0x80]
  43fff6:	xor    eax,DWORD PTR [eax+eax*1-0x7c]
  43fffa:	xor    eax,DWORD PTR [eax+eax*1-0x78]
  43fffe:	xor    eax,DWORD PTR [eax+eax*1-0x74]
  440002:	xor    eax,DWORD PTR [eax+eax*1-0x70]
  440006:	xor    eax,DWORD PTR [eax+eax*1-0x6c]
  44000a:	xor    eax,DWORD PTR [eax+eax*1-0x68]
  44000e:	xor    eax,DWORD PTR [eax+eax*1-0x64]
  440012:	xor    eax,DWORD PTR [eax+eax*1-0x60]
  440016:	xor    eax,DWORD PTR [eax+eax*1-0x5c]
  44001a:	xor    eax,DWORD PTR [eax+eax*1-0x58]
  44001e:	xor    eax,DWORD PTR [eax+eax*1-0x54]
  440022:	xor    eax,DWORD PTR [eax+eax*1+0x30]
  440026:	xor    eax,DWORD PTR [eax+eax*1-0x50]
  44002a:	xor    eax,DWORD PTR [eax+eax*1-0x4c]
  44002e:	xor    eax,DWORD PTR [eax+eax*1-0x48]
  440032:	xor    eax,DWORD PTR [eax+eax*1-0x44]
  440036:	xor    eax,DWORD PTR [eax+eax*1-0x40]
  44003a:	xor    eax,DWORD PTR [eax+eax*1-0x3c]
  44003e:	xor    eax,DWORD PTR [eax+eax*1+0x54]
  440042:	xor    eax,DWORD PTR [eax+eax*1-0x38]
  440046:	xor    eax,DWORD PTR [eax+eax*1-0x34]
  44004a:	xor    eax,DWORD PTR [eax+eax*1+0x34]
  44004e:	xor    eax,DWORD PTR [eax+eax*1+0x20]
  440052:	xor    eax,DWORD PTR [eax+eax*1+0x8]
  440056:	xor    eax,DWORD PTR [eax+eax*1-0x30]
  44005a:	xor    eax,DWORD PTR [eax+eax*1+0x38]
  44005e:	xor    eax,DWORD PTR [eax+eax*1-0x2c]
  440062:	xor    eax,DWORD PTR [eax+eax*1+0x48]
  440066:	xor    eax,DWORD PTR [eax+eax*1-0x28]
  44006a:	xor    eax,DWORD PTR [eax+eax*1-0x24]
  44006e:	xor    eax,DWORD PTR [eax+eax*1-0x20]
  440072:	xor    eax,DWORD PTR [eax+eax*1-0x1c]
  440076:	xor    eax,DWORD PTR [eax+eax*1-0x18]
  44007a:	xor    eax,DWORD PTR [eax+eax*1-0x14]
  44007e:	xor    eax,DWORD PTR [eax+eax*1-0x40]
  440082:	xor    eax,DWORD PTR [eax+eax*1-0x10]
  440086:	xor    eax,DWORD PTR [eax+eax*1-0x8]
  44008a:	xor    al,BYTE PTR [eax+eax*1-0x18]
  44008e:	xor    eax,DWORD PTR [eax+eax*1-0xc]
  440092:	xor    eax,DWORD PTR [eax+eax*1-0x8]
  440096:	xor    eax,DWORD PTR [eax+eax*1-0x14]
  44009a:	xor    al,BYTE PTR [eax+eax*1-0x4]
  44009e:	xor    eax,DWORD PTR [eax+eax*1+0x0]
  4400a2:	xor    al,0x44
  4400a4:	add    BYTE PTR [esp+esi*1],al
  4400a7:	inc    esp
  4400a8:	add    BYTE PTR [eax],al
  4400aa:	xor    eax,DWORD PTR [eax+eax*1+0x8]
  4400ae:	xor    al,0x44
  4400b0:	add    BYTE PTR [esp+esi*1],cl
  4400b3:	inc    esp
  4400b4:	add    ah,al
  4400b6:	xor    eax,DWORD PTR [eax+eax*1+0x74]
  4400ba:	xor    eax,DWORD PTR [eax+eax*1+0x70]
  4400be:	xor    eax,DWORD PTR [eax+eax*1+0x10]
  4400c2:	xor    al,0x44
  4400c4:	add    BYTE PTR [esp+esi*1],dl
  4400c7:	inc    esp
  4400c8:	add    BYTE PTR [eax],bl
  4400ca:	xor    al,0x44
  4400cc:	add    ah,bl
  4400ce:	xor    eax,DWORD PTR [eax+eax*1-0x28]
  4400d2:	xor    eax,DWORD PTR [eax+eax*1+0x1c]
  4400d6:	xor    al,0x44
  4400d8:	add    BYTE PTR [eax],ah
  4400da:	xor    al,0x44
  4400dc:	add    BYTE PTR [esp+esi*1],ah
  4400df:	inc    esp
  4400e0:	add    BYTE PTR [eax+0x33],ch
  4400e3:	inc    esp
  4400e4:	add    BYTE PTR [eax],ch
  4400e6:	xor    al,0x44
  4400e8:	add    BYTE PTR [eax],bl
  4400ea:	xor    al,0x44
  4400ec:	add    BYTE PTR [esp+esi*1],ch
  4400ef:	inc    esp
  4400f0:	add    BYTE PTR [eax],ah
  4400f2:	xor    eax,DWORD PTR [eax+eax*1+0x8]
  4400f6:	xor    eax,DWORD PTR [eax+eax*1+0x30]
  4400fa:	xor    al,0x44
  4400fc:	add    ah,dh
  4400fe:	xor    eax,DWORD PTR [eax+eax*1+0x40]
  440102:	xor    eax,DWORD PTR [eax+eax*1+0x34]
  440106:	xor    al,0x44
  440108:	add    BYTE PTR [ebx+esi*1],ah
  44010b:	inc    esp
  44010c:	add    BYTE PTR [eax],bh
  44010e:	xor    al,0x44
  440110:	add    BYTE PTR [esp+esi*1],bh
  440113:	inc    esp
  440114:	add    BYTE PTR [eax+0x34],al
  440117:	inc    esp
  440118:	add    BYTE PTR [esp+esi*1+0x44],al
  44011c:	add    BYTE PTR [eax+0x34],cl
  44011f:	inc    esp
  440120:	add    BYTE PTR [esp+esi*1+0x44],cl
  440124:	add    BYTE PTR [eax+0x34],dl
  440127:	inc    esp
  440128:	add    BYTE PTR [esp+esi*1+0x44],dl
  44012c:	add    BYTE PTR [eax+0x34],bl
  44012f:	inc    esp
  440130:	add    BYTE PTR [esp+esi*1+0x44],bl
  440134:	add    BYTE PTR [eax+0x34],ah
  440137:	inc    esp
  440138:	add    BYTE PTR [ebx+esi*1],ch
  44013b:	inc    esp
  44013c:	add    BYTE PTR [esp+esi*1+0x44],ah
  440140:	add    BYTE PTR [eax+0x34],ch
  440143:	inc    esp
  440144:	add    BYTE PTR [ebx+esi*1+0x44],ah
  440148:	add    BYTE PTR [esp+esi*1+0x44],ch
  44014c:	add    BYTE PTR [eax+0x34],dh
  44014f:	inc    esp
  440150:	add    BYTE PTR [esp+esi*1+0x44],dh
  440154:	add    BYTE PTR [eax+0x34],bh
  440157:	inc    esp
  440158:	add    BYTE PTR [esp+esi*1+0x44],bh
  44015c:	add    BYTE PTR [eax-0x7bffbbcc],al
  440162:	xor    al,0x44
  440164:	add    ah,bl
  440166:	xor    eax,DWORD PTR [eax+eax*1+0x2c]
  44016a:	xor    al,0x44
  44016c:	add    BYTE PTR [eax-0x73ffbbcc],cl
  440172:	xor    al,0x44
  440174:	add    BYTE PTR [eax],al
  440176:	xor    eax,DWORD PTR [eax+eax*1+0x2c]
  44017a:	xor    al,0x44
  44017c:	add    BYTE PTR [eax+0x34],dl
  44017f:	inc    esp
  440180:	add    BYTE PTR [eax],dh
  440182:	xor    eax,DWORD PTR [eax+eax*1-0x70]
  440186:	xor    al,0x44
  440188:	add    BYTE PTR [ebx+esi*1],dh
  44018b:	inc    esp
  44018c:	add    BYTE PTR [esp+esi*1+0x34980044],dl
  440193:	inc    esp
  440194:	add    BYTE PTR [esp+esi*1+0x34a00044],bl
  44019b:	inc    esp
  44019c:	add    BYTE PTR [eax+0x34],al
  44019f:	inc    esp
  4401a0:	add    BYTE PTR [esp+esi*1+0x34a80044],ah
  4401a7:	inc    esp
  4401a8:	add    al,dh
  4401aa:	xor    eax,DWORD PTR [eax+eax*1+0x3c]
  4401ae:	xor    al,0x44
  4401b0:	add    BYTE PTR [esp+esi*1+0x34700044],ch
  4401b7:	inc    esp
  4401b8:	add    BYTE PTR [eax],dh
  4401ba:	xor    al,0x44
  4401bc:	add    BYTE PTR [esp+esi*1+0x336c0044],cl
  4401c3:	inc    esp
  4401c4:	add    BYTE PTR [eax+0x7c004434],dh
  4401ca:	xor    al,0x44
  4401cc:	add    BYTE PTR [esp+esi*1+0x34b80044],dh
  4401d3:	inc    esp
  4401d4:	add    BYTE PTR [esp+esi*1+0x34c00044],bh
  4401db:	inc    esp
  4401dc:	add    BYTE PTR [eax],dh
  4401de:	xor    al,0x44
  4401e0:	add    ah,bh
  4401e2:	xor    al,BYTE PTR [eax+eax*1-0x80]
  4401e6:	xor    eax,DWORD PTR [eax+eax*1-0x3c]
  4401ea:	xor    al,0x44
  4401ec:	add    BYTE PTR [eax],ch
  4401ee:	xor    eax,DWORD PTR [eax+eax*1+0x34]
  4401f2:	xor    eax,DWORD PTR [eax+eax*1-0x50]
  4401f6:	xor    al,0x44
  4401f8:	add    BYTE PTR [ebx+esi*1+0x34c80044],al
  4401ff:	inc    esp
  440200:	add    BYTE PTR [eax],dh
  440202:	xor    eax,DWORD PTR [eax+eax*1-0x34]
  440206:	xor    al,0x44
  440208:	add    al,dl
  44020a:	xor    al,0x44
  44020c:	add    BYTE PTR [esp+esi*1+0x34280044],al
  440213:	inc    esp
  440214:	add    ah,dl
  440216:	xor    al,0x44
  440218:	add    al,cl
  44021a:	xor    al,0x44
  44021c:	add    ah,dh
  44021e:	xor    eax,DWORD PTR [eax+eax*1-0x28]
  440222:	xor    al,0x44
  440224:	add    BYTE PTR [ebx+esi*1+0x34dc0044],bh
  44022b:	inc    esp
  44022c:	add    al,ah
  44022e:	xor    al,0x44
  440230:	add    BYTE PTR [ebx+esi*1],dl
  440233:	inc    esp
  440234:	add    BYTE PTR [eax-0x1bffbbcd],dh
  44023a:	xor    al,0x44
  44023c:	add    al,ch
  44023e:	xor    al,0x44
  440240:	add    BYTE PTR [eax],al
  440242:	xor    al,0x44
  440244:	add    ah,ch
  440246:	xor    al,0x44
  440248:	add    al,dh
  44024a:	xor    al,0x44
  44024c:	add    ah,bl
  44024e:	xor    al,0x44
  440250:	add    ah,dh
  440252:	xor    al,0x44
  440254:	add    ah,bh
  440256:	xor    al,0x44
  440258:	add    BYTE PTR [eax],al
  44025a:	xor    eax,0x35040044
  44025f:	inc    esp
  440260:	add    BYTE PTR [eax],cl
  440262:	xor    eax,0x350c0044
  440267:	inc    esp
  440268:	add    BYTE PTR [eax],dl
  44026a:	xor    eax,0x35040044
  44026f:	inc    esp
  440270:	add    BYTE PTR [esi*1+0x35180044],dl
  440277:	inc    esp
  440278:	add    BYTE PTR [esi*1+0x35200044],bl
  44027f:	inc    esp
  440280:	add    BYTE PTR [esi*1+0x35280044],ah
  440287:	inc    esp
  440288:	add    BYTE PTR [esi*1+0x35300044],ch
  44028f:	inc    esp
  440290:	add    BYTE PTR [esi*1+0x35380044],dh
  440297:	inc    esp
  440298:	add    BYTE PTR [esi*1+0x35400044],bh
  44029f:	inc    esp
  4402a0:	add    BYTE PTR [ebp+esi*1+0x44],al
  4402a4:	add    BYTE PTR [eax+0x35],cl
  4402a7:	inc    esp
  4402a8:	add    BYTE PTR [ebp+esi*1+0x44],cl
  4402ac:	add    BYTE PTR [eax+0x35],dl
  4402af:	inc    esp
  4402b0:	add    BYTE PTR [ebp+esi*1+0x44],dl
  4402b4:	add    BYTE PTR [eax+0x35],bl
  4402b7:	inc    esp
  4402b8:	add    BYTE PTR [ebp+esi*1+0x44],bl
  4402bc:	add    BYTE PTR [eax+0x35],ah
  4402bf:	inc    esp
  4402c0:	add    BYTE PTR [ebp+esi*1+0x44],ah
  4402c4:	add    BYTE PTR [eax+0x35],ch
  4402c7:	inc    esp
  4402c8:	add    BYTE PTR [ebp+esi*1+0x44],ch
  4402cc:	add    BYTE PTR [eax+0x35],dh
  4402cf:	inc    esp
  4402d0:	add    BYTE PTR [ebp+esi*1+0x44],dh
  4402d4:	add    BYTE PTR [eax],ch
  4402d6:	xor    eax,0x35780044
  4402db:	inc    esp
  4402dc:	add    BYTE PTR [ebp+esi*1+0x44],bh
  4402e0:	add    BYTE PTR [eax-0x7bffbbcb],al
  4402e6:	xor    eax,0x35880044
  4402eb:	inc    esp
  4402ec:	add    BYTE PTR [ebp+esi*1+0x35900044],cl
  4402f3:	inc    esp
  4402f4:	add    BYTE PTR [ebp+esi*1+0x35980044],dl
  4402fb:	inc    esp
  4402fc:	add    BYTE PTR [ebp+esi*1+0x35a00044],bl
  440303:	inc    esp
  440304:	add    BYTE PTR [eax-0x5bffbbcb],bl
  44030a:	xor    eax,0x35a80044
  44030f:	inc    esp
  440310:	add    BYTE PTR [ebp+esi*1+0x35b00044],ch
  440317:	inc    esp
  440318:	add    BYTE PTR [ebp+esi*1+0x35b80044],dh
  44031f:	inc    esp
  440320:	add    BYTE PTR [eax],al
  440322:	xor    eax,0x35bc0044
  440327:	inc    esp
  440328:	add    al,al
  44032a:	xor    eax,0x35c40044
  44032f:	inc    esp
  440330:	add    al,cl
  440332:	xor    eax,0x35cc0044
  440337:	inc    esp
  440338:	add    al,dl
  44033a:	xor    eax,0x35d40044
  44033f:	inc    esp
  440340:	add    al,bl
  440342:	xor    eax,0x35240044
  440347:	inc    esp
  440348:	add    ah,bl
  44034a:	xor    eax,0x35e00044
  44034f:	inc    esp
  440350:	add    ah,ah
  440352:	xor    eax,0x35e80044
  440357:	inc    esp
  440358:	add    ah,ch
  44035a:	xor    eax,0x35f00044
  44035f:	inc    esp
  440360:	add    ah,dh
  440362:	xor    eax,0x35f80044
  440367:	inc    esp
  440368:	add    ah,bh
  44036a:	xor    eax,0x36000044
  44036f:	inc    esp
  440370:	add    BYTE PTR [esi+esi*1],al
  440373:	inc    esp
  440374:	add    BYTE PTR [eax],cl
  440376:	ss inc esp
  440378:	add    BYTE PTR [esi+esi*1],cl
  44037b:	inc    esp
  44037c:	add    BYTE PTR [eax],dl
  44037e:	ss inc esp
  440380:	add    al,dh
  440382:	xor    eax,0x352c0044
  440387:	inc    esp
  440388:	add    BYTE PTR [esi+esi*1],dl
  44038b:	inc    esp
  44038c:	add    BYTE PTR [eax],bl
  44038e:	ss inc esp
  440390:	add    BYTE PTR [esi+esi*1],bl
  440393:	inc    esp
  440394:	add    BYTE PTR [eax],ah
  440396:	ss inc esp
  440398:	add    BYTE PTR [ebp+esi*1+0x44],dh
  44039c:	add    BYTE PTR [esi+esi*1],ah
  44039f:	inc    esp
  4403a0:	add    BYTE PTR [eax],dh
  4403a2:	xor    eax,0x36280044
  4403a7:	inc    esp
  4403a8:	add    BYTE PTR [esi+esi*1],ch
  4403ab:	inc    esp
  4403ac:	add    BYTE PTR [eax],dh
  4403ae:	ss inc esp
  4403b0:	add    BYTE PTR [esi+esi*1],dh
  4403b3:	inc    esp
  4403b4:	add    BYTE PTR [eax],bh
  4403b6:	ss inc esp
  4403b8:	add    BYTE PTR [esi+esi*1],bh
  4403bb:	inc    esp
  4403bc:	add    BYTE PTR [eax+0x36],al
  4403bf:	inc    esp
  4403c0:	add    BYTE PTR [esi+esi*1+0x44],al
  4403c4:	add    BYTE PTR [eax+0x35],cl
  4403c7:	inc    esp
  4403c8:	add    BYTE PTR [eax+0x36],cl
  4403cb:	inc    esp
  4403cc:	add    ah,bl
  4403ce:	xor    eax,0x364c0044
  4403d3:	inc    esp
  4403d4:	add    BYTE PTR [eax+0x36],dl
  4403d7:	inc    esp
  4403d8:	add    BYTE PTR [esi+esi*1+0x44],dl
  4403dc:	add    BYTE PTR [esi*1+0x36580044],bh
  4403e3:	inc    esp
  4403e4:	add    BYTE PTR [ebp+esi*1+0x44],dl
  4403e8:	add    BYTE PTR [eax+0x35],cl
  4403eb:	inc    esp
  4403ec:	add    BYTE PTR [eax],dh
  4403ee:	ss inc esp
  4403f0:	add    BYTE PTR [esi+esi*1+0x44],bl
  4403f4:	add    BYTE PTR [eax+0x36],ah
  4403f7:	inc    esp
  4403f8:	add    BYTE PTR [eax+0x35],dh
  4403fb:	inc    esp
  4403fc:	add    BYTE PTR [esi+esi*1+0x44],ah
  440400:	add    BYTE PTR [eax+0x36],ch
  440403:	inc    esp
  440404:	add    BYTE PTR [esi+esi*1+0x44],ch
  440408:	add    BYTE PTR [eax+0x36],dh
  44040b:	inc    esp
  44040c:	add    BYTE PTR [esi+esi*1+0x44],dh
  440410:	add    BYTE PTR [eax+0x36],bh
  440413:	inc    esp
  440414:	add    BYTE PTR [eax-0x7ffbbcb],ah
  44041a:	xor    eax,0x367c0044
  44041f:	inc    esp
  440420:	add    BYTE PTR [eax+0x35],dl
  440423:	inc    esp
  440424:	add    al,cl
  440426:	xor    eax,0x36700044
  44042b:	inc    esp
  44042c:	add    BYTE PTR [eax-0x7bffbbca],al
  440432:	ss inc esp
  440434:	add    BYTE PTR [eax-0x73ffbbca],cl
  44043a:	ss inc esp
  44043c:	add    BYTE PTR [eax-0x6bffbbca],dl
  440442:	ss inc esp
  440444:	add    BYTE PTR [eax-0x63ffbbca],bl
  44044a:	ss inc esp
  44044c:	add    BYTE PTR [eax-0x5bffbbca],ah
  440452:	ss inc esp
  440454:	add    BYTE PTR [eax-0x77ffbbca],ch
  44045a:	ss inc esp
  44045c:	add    BYTE PTR [esi+esi*1+0x36b00044],ch
  440463:	inc    esp
  440464:	add    al,dh
  440466:	xor    eax,0x367c0044
  44046b:	inc    esp
  44046c:	add    BYTE PTR [esi+esi*1+0x35c00044],dh
  440473:	inc    esp
  440474:	add    BYTE PTR [eax+0x60004436],bh
  44047a:	ss inc esp
  44047c:	add    BYTE PTR [esi+esi*1+0x36c00044],bh
  440483:	inc    esp
  440484:	add    ah,al
  440486:	ss inc esp
  440488:	add    al,cl
  44048a:	ss inc esp
  44048c:	add    ah,cl
  44048e:	ss inc esp
  440490:	add    BYTE PTR [eax+0x36],bl
  440493:	inc    esp
  440494:	add    BYTE PTR [esi*1+0x35800044],al
  44049b:	inc    esp
  44049c:	add    BYTE PTR [esi*1+0x36d00044],ch
  4404a3:	inc    esp
  4404a4:	add    ah,dl
  4404a6:	ss inc esp
  4404a8:	add    ah,cl
  4404aa:	xor    eax,0x36d80044
  4404af:	inc    esp
  4404b0:	add    ah,bl
  4404b2:	ss inc esp
  4404b4:	add    al,ah
  4404b6:	ss inc esp
  4404b8:	add    ah,ah
  4404ba:	ss inc esp
  4404bc:	add    al,ch
  4404be:	ss inc esp
  4404c0:	add    BYTE PTR [eax],bh
  4404c2:	xor    eax,0x35c80044
  4404c7:	inc    esp
  4404c8:	add    ah,ch
  4404ca:	ss inc esp
  4404cc:	add    BYTE PTR [esi+esi*1+0x36f00044],dl
  4404d3:	inc    esp
  4404d4:	add    ah,dh
  4404d6:	ss inc esp
  4404d8:	add    al,bh
  4404da:	ss inc esp
  4404dc:	add    BYTE PTR [esi+esi*1],al
  4404df:	inc    esp
  4404e0:	add    BYTE PTR [ebp+esi*1+0x44],dl
  4404e4:	add    BYTE PTR [esi+esi*1+0x44],dl
  4404e8:	add    ah,bh
  4404ea:	ss inc esp
  4404ec:	add    BYTE PTR [eax],al
  4404ee:	aaa    
  4404ef:	inc    esp
  4404f0:	add    BYTE PTR [edi+esi*1],al
  4404f3:	inc    esp
  4404f4:	add    ah,dl
  4404f6:	xor    eax,0x37080044
  4404fb:	inc    esp
  4404fc:	add    BYTE PTR [ebp+esi*1+0x370c0044],ah
  440503:	inc    esp
  440504:	add    BYTE PTR [esi+esi*1+0x37100044],ah
  44050b:	inc    esp
  44050c:	add    BYTE PTR [edi+esi*1],dl
  44050f:	inc    esp
  440510:	add    BYTE PTR [eax+0x36],cl
  440513:	inc    esp
  440514:	add    al,ch
  440516:	ss inc esp
  440518:	add    BYTE PTR [eax],bl
  44051a:	aaa    
  44051b:	inc    esp
  44051c:	add    BYTE PTR [edi+esi*1],bl
  44051f:	inc    esp
  440520:	add    BYTE PTR [eax],ah
  440522:	aaa    
  440523:	inc    esp
  440524:	add    BYTE PTR [edi+esi*1],ah
  440527:	inc    esp
  440528:	add    BYTE PTR [eax],ch
  44052a:	aaa    
  44052b:	inc    esp
  44052c:	add    BYTE PTR [edi+esi*1],ch
  44052f:	inc    esp
  440530:	add    BYTE PTR [eax],dh
  440532:	aaa    
  440533:	inc    esp
  440534:	add    BYTE PTR [edi+esi*1],dh
  440537:	inc    esp
  440538:	add    al,bh
  44053a:	xor    eax,0x37380044
  44053f:	inc    esp
  440540:	add    ah,ah
  440542:	ss inc esp
  440544:	add    BYTE PTR [edi+esi*1],bh
  440547:	inc    esp
  440548:	add    ah,bh
  44054a:	xor    al,0x44
  44054c:	add    BYTE PTR [eax+0x37],al
  44054f:	inc    esp
  440550:	add    BYTE PTR [edi+esi*1+0x44],al
  440554:	add    BYTE PTR [eax+0x37],cl
  440557:	inc    esp
  440558:	add    BYTE PTR [edi+esi*1+0x44],cl
  44055c:	add    BYTE PTR [esi+esi*1],ch
  44055f:	inc    esp
  440560:	add    BYTE PTR [esi+esi*1+0x35900044],dl
  440567:	inc    esp
  440568:	add    BYTE PTR [eax+0x37],dl
  44056b:	inc    esp
  44056c:	add    BYTE PTR [edi+esi*1+0x44],dl
  440570:	add    BYTE PTR [eax+0x37],bl
  440573:	inc    esp
  440574:	add    BYTE PTR [edx+esi*1+0x44],dh
  440578:	add    BYTE PTR [eax+0x32],bh
  44057b:	inc    esp
  44057c:	add    BYTE PTR [edx+esi*1+0x44],bh
  440580:	add    BYTE PTR [eax-0x7bffbbce],al
  440586:	xor    al,BYTE PTR [eax+eax*1-0x78]
  44058a:	xor    al,BYTE PTR [eax+eax*1-0x74]
  44058e:	xor    al,BYTE PTR [eax+eax*1-0x74]
  440592:	xor    al,BYTE PTR [eax+eax*1+0x78]
  440596:	xor    al,BYTE PTR [eax+eax*1-0x70]
  44059a:	xor    al,BYTE PTR [eax+eax*1-0x74]
  44059e:	xor    al,BYTE PTR [eax+eax*1-0x6c]
  4405a2:	xor    al,BYTE PTR [eax+eax*1-0x68]
  4405a6:	xor    al,BYTE PTR [eax+eax*1-0x64]
  4405aa:	xor    al,BYTE PTR [eax+eax*1-0x80]
  4405ae:	xor    al,BYTE PTR [eax+eax*1-0x60]
  4405b2:	xor    al,BYTE PTR [eax+eax*1-0x64]
  4405b6:	xor    al,BYTE PTR [eax+eax*1-0x5c]
  4405ba:	xor    al,BYTE PTR [eax+eax*1-0x68]
  4405be:	xor    al,BYTE PTR [eax+eax*1+0x74]
  4405c2:	xor    al,BYTE PTR [eax+eax*1-0x58]
  4405c6:	xor    al,BYTE PTR [eax+eax*1-0x54]
  4405ca:	xor    al,BYTE PTR [eax+eax*1+0x7c]
  4405ce:	xor    al,BYTE PTR [eax+eax*1-0x80]
  4405d2:	xor    al,BYTE PTR [eax+eax*1-0x60]
  4405d6:	xor    al,BYTE PTR [eax+eax*1+0x74]
  4405da:	xor    al,BYTE PTR [eax+eax*1-0x54]
  4405de:	xor    al,BYTE PTR [eax+eax*1-0x7c]
  4405e2:	xor    al,BYTE PTR [eax+eax*1-0x60]
  4405e6:	xor    al,BYTE PTR [eax+eax*1-0x50]
  4405ea:	xor    al,BYTE PTR [eax+eax*1-0x80]
  4405ee:	xor    al,BYTE PTR [eax+eax*1-0x6c]
  4405f2:	xor    al,BYTE PTR [eax+eax*1-0x4c]
  4405f6:	xor    al,BYTE PTR [eax+eax*1-0x50]
  4405fa:	xor    al,BYTE PTR [eax+eax*1-0x78]
  4405fe:	xor    al,BYTE PTR [eax+eax*1-0x48]
  440602:	xor    al,BYTE PTR [eax+eax*1-0x5c]
  440606:	xor    al,BYTE PTR [eax+eax*1-0x48]
  44060a:	xor    al,BYTE PTR [eax+eax*1+0x7c]
  44060e:	xor    al,BYTE PTR [eax+eax*1-0x6c]
  440612:	xor    al,BYTE PTR [eax+eax*1-0x64]
  440616:	xor    al,BYTE PTR [eax+eax*1+0x74]
  44061a:	xor    al,BYTE PTR [eax+eax*1-0x80]
  44061e:	xor    al,BYTE PTR [eax+eax*1-0x80]
  440622:	xor    al,BYTE PTR [eax+eax*1-0x64]
  440626:	xor    al,BYTE PTR [eax+eax*1+0x7c]
  44062a:	xor    al,BYTE PTR [eax+eax*1-0x58]
  44062e:	xor    al,BYTE PTR [eax+eax*1-0x80]
  440632:	xor    al,BYTE PTR [eax+eax*1-0x54]
  440636:	xor    al,BYTE PTR [eax+eax*1-0x58]
  44063a:	xor    al,BYTE PTR [eax+eax*1-0x60]
  44063e:	xor    al,BYTE PTR [eax+eax*1-0x48]
  440642:	xor    al,BYTE PTR [eax+eax*1-0x70]
  440646:	xor    al,BYTE PTR [eax+eax*1-0x60]
  44064a:	xor    al,BYTE PTR [eax+eax*1-0x44]
  44064e:	xor    al,BYTE PTR [eax+eax*1-0x50]
  440652:	xor    al,BYTE PTR [eax+eax*1-0x70]
  440656:	xor    al,BYTE PTR [eax+eax*1-0x50]
  44065a:	xor    al,BYTE PTR [eax+eax*1-0x64]
  44065e:	xor    al,BYTE PTR [eax+eax*1-0x68]
  440662:	xor    al,BYTE PTR [eax+eax*1-0x40]
  440666:	xor    al,BYTE PTR [eax+eax*1-0x7c]
  44066a:	xor    al,BYTE PTR [eax+eax*1-0x70]
  44066e:	xor    al,BYTE PTR [eax+eax*1-0x80]
  440672:	xor    al,BYTE PTR [eax+eax*1-0x5c]
  440676:	xor    al,BYTE PTR [eax+eax*1-0x58]
  44067a:	xor    al,BYTE PTR [eax+eax*1+0x78]
  44067e:	xor    al,BYTE PTR [eax+eax*1+0x74]
  440682:	xor    al,BYTE PTR [eax+eax*1-0x4c]
  440686:	xor    al,BYTE PTR [eax+eax*1-0x44]
  44068a:	xor    al,BYTE PTR [eax+eax*1+0x74]
  44068e:	xor    al,BYTE PTR [eax+eax*1-0x50]
  440692:	xor    al,BYTE PTR [eax+eax*1-0x78]
  440696:	xor    al,BYTE PTR [eax+eax*1-0x64]
  44069a:	xor    al,BYTE PTR [eax+eax*1-0x3c]
  44069e:	xor    al,BYTE PTR [eax+eax*1-0x44]
  4406a2:	xor    al,BYTE PTR [eax+eax*1-0x6c]
  4406a6:	xor    al,BYTE PTR [eax+eax*1-0x78]
  4406aa:	xor    al,BYTE PTR [eax+eax*1-0x50]
  4406ae:	xor    al,BYTE PTR [eax+eax*1-0x74]
  4406b2:	xor    al,BYTE PTR [eax+eax*1+0x7c]
  4406b6:	xor    al,BYTE PTR [eax+eax*1-0x58]
  4406ba:	xor    al,BYTE PTR [eax+eax*1-0x5c]
  4406be:	xor    al,BYTE PTR [eax+eax*1+0x78]
  4406c2:	xor    al,BYTE PTR [eax+eax*1-0x78]
  4406c6:	xor    al,BYTE PTR [eax+eax*1+0x74]
  4406ca:	xor    al,BYTE PTR [eax+eax*1-0x3c]
  4406ce:	xor    al,BYTE PTR [eax+eax*1-0x5c]
  4406d2:	xor    al,BYTE PTR [eax+eax*1+0x7c]
  4406d6:	xor    al,BYTE PTR [eax+eax*1-0x74]
  4406da:	xor    al,BYTE PTR [eax+eax*1-0x78]
  4406de:	xor    al,BYTE PTR [eax+eax*1-0x5c]
  4406e2:	xor    al,BYTE PTR [eax+eax*1-0x5c]
  4406e6:	xor    al,BYTE PTR [eax+eax*1-0x54]
  4406ea:	xor    al,BYTE PTR [eax+eax*1-0x44]
  4406ee:	xor    al,BYTE PTR [eax+eax*1-0x3c]
  4406f2:	xor    al,BYTE PTR [eax+eax*1+0x74]
  4406f6:	xor    al,BYTE PTR [eax+eax*1-0x70]
  4406fa:	xor    al,BYTE PTR [eax+eax*1-0x40]
  4406fe:	xor    al,BYTE PTR [eax+eax*1-0x7c]
  440702:	xor    al,BYTE PTR [eax+eax*1+0x7c]
  440706:	xor    al,BYTE PTR [eax+eax*1-0x78]
  44070a:	xor    al,BYTE PTR [eax+eax*1-0x40]
  44070e:	xor    al,BYTE PTR [eax+eax*1-0x54]
  440712:	xor    al,BYTE PTR [eax+eax*1+0x78]
  440716:	xor    al,BYTE PTR [eax+eax*1-0x7c]
  44071a:	xor    al,BYTE PTR [eax+eax*1-0x44]
  44071e:	xor    al,BYTE PTR [eax+eax*1-0x80]
  440722:	xor    al,BYTE PTR [eax+eax*1-0x78]
  440726:	xor    al,BYTE PTR [eax+eax*1-0x7c]
  44072a:	xor    al,BYTE PTR [eax+eax*1-0x40]
  44072e:	xor    al,BYTE PTR [eax+eax*1+0x78]
  440732:	xor    al,BYTE PTR [eax+eax*1-0x74]
  440736:	xor    al,BYTE PTR [eax+eax*1-0x78]
  44073a:	xor    al,BYTE PTR [eax+eax*1+0x78]
  44073e:	xor    al,BYTE PTR [eax+eax*1-0x64]
  440742:	xor    al,BYTE PTR [eax+eax*1-0x70]
  440746:	xor    al,BYTE PTR [eax+eax*1-0x3c]
  44074a:	xor    al,BYTE PTR [eax+eax*1-0x50]
  44074e:	xor    al,BYTE PTR [eax+eax*1-0x48]
  440752:	xor    al,BYTE PTR [eax+eax*1-0x40]
  440756:	xor    al,BYTE PTR [eax+eax*1-0x5c]
  44075a:	xor    al,BYTE PTR [eax+eax*1-0x50]
  44075e:	xor    al,BYTE PTR [eax+eax*1+0x7c]
  440762:	xor    al,BYTE PTR [eax+eax*1-0x50]
  440766:	xor    al,BYTE PTR [eax+eax*1-0x68]
  44076a:	xor    al,BYTE PTR [eax+eax*1-0x60]
  44076e:	xor    al,BYTE PTR [eax+eax*1-0x3c]
  440772:	xor    al,BYTE PTR [eax+eax*1-0x5c]
  440776:	xor    al,BYTE PTR [eax+eax*1-0x44]
  44077a:	xor    al,BYTE PTR [eax+eax*1-0x40]
  44077e:	xor    al,BYTE PTR [eax+eax*1-0x80]
  440782:	xor    al,BYTE PTR [eax+eax*1-0x4c]
  440786:	xor    al,BYTE PTR [eax+eax*1-0x78]
  44078a:	xor    al,BYTE PTR [eax+eax*1-0x7c]
  44078e:	xor    al,BYTE PTR [eax+eax*1-0x40]
  440792:	xor    al,BYTE PTR [eax+eax*1-0x80]
  440796:	xor    al,BYTE PTR [eax+eax*1-0x6c]
  44079a:	xor    al,BYTE PTR [eax+eax*1-0x80]
  44079e:	xor    al,BYTE PTR [eax+eax*1-0x7c]
  4407a2:	xor    al,BYTE PTR [eax+eax*1+0x7c]
  4407a6:	xor    al,BYTE PTR [eax+eax*1-0x58]
  4407aa:	xor    al,BYTE PTR [eax+eax*1-0x48]
  4407ae:	xor    al,BYTE PTR [eax+eax*1+0x7c]
  4407b2:	xor    al,BYTE PTR [eax+eax*1-0x78]
  4407b6:	xor    al,BYTE PTR [eax+eax*1-0x64]
  4407ba:	xor    al,BYTE PTR [eax+eax*1+0x74]
  4407be:	xor    al,BYTE PTR [eax+eax*1-0x54]
  4407c2:	xor    al,BYTE PTR [eax+eax*1-0x50]
  4407c6:	xor    al,BYTE PTR [eax+eax*1-0x40]
  4407ca:	xor    al,BYTE PTR [eax+eax*1-0x3c]
  4407ce:	xor    al,BYTE PTR [eax+eax*1-0x78]
  4407d2:	xor    al,BYTE PTR [eax+eax*1-0x44]
  4407d6:	xor    al,BYTE PTR [eax+eax*1-0x58]
  4407da:	xor    al,BYTE PTR [eax+eax*1+0x7c]
  4407de:	xor    al,BYTE PTR [eax+eax*1-0x58]
  4407e2:	xor    al,BYTE PTR [eax+eax*1-0x50]
  4407e6:	xor    al,BYTE PTR [eax+eax*1-0x5c]
  4407ea:	xor    al,BYTE PTR [eax+eax*1-0x50]
  4407ee:	xor    al,BYTE PTR [eax+eax*1-0x3c]
  4407f2:	xor    al,BYTE PTR [eax+eax*1-0x60]
  4407f6:	xor    al,BYTE PTR [eax+eax*1-0x74]
  4407fa:	xor    al,BYTE PTR [eax+eax*1-0x50]
  4407fe:	xor    al,BYTE PTR [eax+eax*1-0x3c]
  440802:	xor    al,BYTE PTR [eax+eax*1-0x40]
  440806:	xor    al,BYTE PTR [eax+eax*1-0x4c]
  44080a:	xor    al,BYTE PTR [eax+eax*1-0x70]
  44080e:	xor    al,BYTE PTR [eax+eax*1+0x7c]
  440812:	xor    al,BYTE PTR [eax+eax*1-0x80]
  440816:	xor    al,BYTE PTR [eax+eax*1-0x78]
  44081a:	xor    al,BYTE PTR [eax+eax*1-0x48]
  44081e:	xor    al,BYTE PTR [eax+eax*1-0x70]
  440822:	xor    al,BYTE PTR [eax+eax*1-0x4c]
  440826:	xor    al,BYTE PTR [eax+eax*1-0x64]
  44082a:	xor    al,BYTE PTR [eax+eax*1-0x50]
  44082e:	xor    al,BYTE PTR [eax+eax*1-0x7c]
  440832:	xor    al,BYTE PTR [eax+eax*1-0x68]
  440836:	xor    al,BYTE PTR [eax+eax*1-0x7c]
  44083a:	xor    al,BYTE PTR [eax+eax*1-0x58]
  44083e:	xor    al,BYTE PTR [eax+eax*1-0x7c]
  440842:	xor    al,BYTE PTR [eax+eax*1+0x78]
  440846:	xor    al,BYTE PTR [eax+eax*1-0x40]
  44084a:	xor    al,BYTE PTR [eax+eax*1-0x68]
  44084e:	xor    al,BYTE PTR [eax+eax*1+0x74]
  440852:	xor    al,BYTE PTR [eax+eax*1-0x5c]
  440856:	xor    al,BYTE PTR [eax+eax*1-0x6c]
  44085a:	xor    al,BYTE PTR [eax+eax*1-0x60]
  44085e:	xor    al,BYTE PTR [eax+eax*1-0x74]
  440862:	xor    al,BYTE PTR [eax+eax*1-0x48]
  440866:	xor    al,BYTE PTR [eax+eax*1-0x50]
  44086a:	xor    al,BYTE PTR [eax+eax*1-0x3c]
  44086e:	xor    al,BYTE PTR [eax+eax*1-0x3c]
  440872:	xor    al,BYTE PTR [eax+eax*1-0x5c]
  440876:	xor    al,BYTE PTR [eax+eax*1-0x50]
  44087a:	xor    al,BYTE PTR [eax+eax*1+0x7c]
  44087e:	xor    al,BYTE PTR [eax+eax*1-0x60]
  440882:	xor    al,BYTE PTR [eax+eax*1-0x7c]
  440886:	xor    al,BYTE PTR [eax+eax*1+0x74]
  44088a:	xor    al,BYTE PTR [eax+eax*1-0x3c]
  44088e:	xor    al,BYTE PTR [eax+eax*1-0x3c]
  440892:	xor    al,BYTE PTR [eax+eax*1+0x60]
  440896:	aaa    
  440897:	inc    esp
  440898:	add    BYTE PTR [edi+esi*1+0x44],ah
  44089c:	add    BYTE PTR [eax+0x37],ch
  44089f:	inc    esp
  4408a0:	add    BYTE PTR [edi+esi*1+0x44],ch
  4408a4:	add    BYTE PTR [eax+0x37],dh
  4408a7:	inc    esp
  4408a8:	add    BYTE PTR [edi+esi*1+0x44],dh
  4408ac:	add    BYTE PTR [eax+0x37],bh
  4408af:	inc    esp
  4408b0:	add    BYTE PTR [edi+esi*1+0x44],bh
  4408b4:	add    BYTE PTR [eax-0x7bffbbc9],al
  4408ba:	aaa    
  4408bb:	inc    esp
  4408bc:	add    BYTE PTR [edi+esi*1+0x37880044],al
  4408c3:	inc    esp
  4408c4:	add    BYTE PTR [eax-0x73ffbbc9],cl
  4408ca:	aaa    
  4408cb:	inc    esp
  4408cc:	add    BYTE PTR [eax-0x6bffbbc9],dl
  4408d2:	aaa    
  4408d3:	inc    esp
  4408d4:	add    BYTE PTR [eax-0x63ffbbc9],bl
  4408da:	aaa    
  4408db:	inc    esp
  4408dc:	add    BYTE PTR [eax-0x5bffbbc9],ah
  4408e2:	aaa    
  4408e3:	inc    esp
  4408e4:	add    BYTE PTR [eax-0x53ffbbc9],ch
  4408ea:	aaa    
  4408eb:	inc    esp
  4408ec:	add    BYTE PTR [eax-0x67ffbbc9],dh
  4408f2:	aaa    
  4408f3:	inc    esp
  4408f4:	add    BYTE PTR [edi+esi*1+0x37b80044],dh
  4408fb:	inc    esp
  4408fc:	add    BYTE PTR [edi+esi*1+0x37c00044],bh
  440903:	inc    esp
  440904:	add    ah,al
  440906:	aaa    
  440907:	inc    esp
  440908:	add    al,cl
  44090a:	aaa    
  44090b:	inc    esp
  44090c:	add    ah,cl
  44090e:	aaa    
  44090f:	inc    esp
  440910:	add    al,dl
  440912:	aaa    
  440913:	inc    esp
  440914:	add    ah,dl
  440916:	aaa    
  440917:	inc    esp
  440918:	add    al,bl
  44091a:	aaa    
  44091b:	inc    esp
  44091c:	add    ah,bl
  44091e:	aaa    
  44091f:	inc    esp
  440920:	add    BYTE PTR [edi+esi*1+0x376c0044],ch
  440927:	inc    esp
  440928:	add    al,ah
  44092a:	aaa    
  44092b:	inc    esp
  44092c:	add    BYTE PTR [edi+esi*1+0x37b40044],bh
  440933:	inc    esp
  440934:	add    ah,ah
  440936:	aaa    
  440937:	inc    esp
  440938:	add    al,ch
  44093a:	aaa    
  44093b:	inc    esp
  44093c:	add    ah,ch
  44093e:	aaa    
  44093f:	inc    esp
  440940:	add    al,dh
  440942:	aaa    
  440943:	inc    esp
  440944:	add    ah,dh
  440946:	aaa    
  440947:	inc    esp
  440948:	add    al,bh
  44094a:	aaa    
  44094b:	inc    esp
  44094c:	add    ah,dl
  44094e:	aaa    
  44094f:	inc    esp
  440950:	add    ah,bh
  440952:	aaa    
  440953:	inc    esp
  440954:	add    BYTE PTR [edi+esi*1+0x44],ah
  440958:	add    BYTE PTR [edi+esi*1+0x44],bh
  44095c:	add    BYTE PTR [eax+0x37],dh
  44095f:	inc    esp
  440960:	add    al,bl
  440962:	aaa    
  440963:	inc    esp
  440964:	add    BYTE PTR [eax+0x4437],dl
  44096a:	cmp    BYTE PTR [eax+eax*1-0x1c],al
  44096e:	aaa    
  44096f:	inc    esp
  440970:	add    BYTE PTR [eax+edi*1],al
  440973:	inc    esp
  440974:	add    BYTE PTR [eax-0x4bffbbc9],bl
  44097a:	aaa    
  44097b:	inc    esp
  44097c:	add    BYTE PTR [eax],cl
  44097e:	cmp    BYTE PTR [eax+eax*1+0x64],al
  440982:	aaa    
  440983:	inc    esp
  440984:	add    BYTE PTR [eax+edi*1],cl
  440987:	inc    esp
  440988:	add    BYTE PTR [eax],dl
  44098a:	cmp    BYTE PTR [eax+eax*1+0x14],al
  44098e:	cmp    BYTE PTR [eax+eax*1+0x18],al
  440992:	cmp    BYTE PTR [eax+eax*1+0xc],al
  440996:	cmp    BYTE PTR [eax+eax*1-0x28],al
  44099a:	aaa    
  44099b:	inc    esp
  44099c:	add    BYTE PTR [eax+edi*1],bl
  44099f:	inc    esp
  4409a0:	add    al,dh
  4409a2:	aaa    
  4409a3:	inc    esp
  4409a4:	add    BYTE PTR [eax+0x37],ch
  4409a7:	inc    esp
  4409a8:	add    BYTE PTR [eax+0x20004437],ch
  4409ae:	cmp    BYTE PTR [eax+eax*1+0x24],al
  4409b2:	cmp    BYTE PTR [eax+eax*1+0x20],al
  4409b6:	cmp    BYTE PTR [eax+eax*1+0x8],al
  4409ba:	cmp    BYTE PTR [eax+eax*1+0x28],al
  4409be:	cmp    BYTE PTR [eax+eax*1+0x20],al
  4409c2:	cmp    BYTE PTR [eax+eax*1-0x60],al
  4409c6:	aaa    
  4409c7:	inc    esp
  4409c8:	add    BYTE PTR [eax+0x37],ch
  4409cb:	inc    esp
  4409cc:	add    BYTE PTR [eax+0x2c004437],ch
  4409d2:	cmp    BYTE PTR [eax+eax*1+0xc],al
  4409d6:	cmp    BYTE PTR [eax+eax*1-0xc],al
  4409da:	aaa    
  4409db:	inc    esp
  4409dc:	add    BYTE PTR [edi+esi*1+0x37a00044],dl
  4409e3:	inc    esp
  4409e4:	add    BYTE PTR [eax],dh
  4409e6:	cmp    BYTE PTR [eax+eax*1-0x44],al
  4409ea:	aaa    
  4409eb:	inc    esp
  4409ec:	add    BYTE PTR [eax-0x17ffbbc9],ah
  4409f2:	aaa    
  4409f3:	inc    esp
  4409f4:	add    al,ah
  4409f6:	aaa    
  4409f7:	inc    esp
  4409f8:	add    BYTE PTR [eax],ah
  4409fa:	cmp    BYTE PTR [eax+eax*1+0x34],al
  4409fe:	cmp    BYTE PTR [eax+eax*1+0x38],al
  440a02:	cmp    BYTE PTR [eax+eax*1+0x3c],al
  440a06:	cmp    BYTE PTR [eax+eax*1+0x40],al
  440a0a:	cmp    BYTE PTR [eax+eax*1+0x14],al
  440a0e:	cmp    BYTE PTR [eax+eax*1-0x68],al
  440a12:	aaa    
  440a13:	inc    esp
  440a14:	add    BYTE PTR [eax-0x33ffbbc9],ah
  440a1a:	aaa    
  440a1b:	inc    esp
  440a1c:	add    BYTE PTR [eax+edi*1+0x44],al
  440a20:	add    BYTE PTR [eax+0x38],cl
  440a23:	inc    esp
  440a24:	add    ah,bh
  440a26:	aaa    
  440a27:	inc    esp
  440a28:	add    BYTE PTR [edi+esi*1+0x37700044],ch
  440a2f:	inc    esp
  440a30:	add    ah,ch
  440a32:	aaa    
  440a33:	inc    esp
  440a34:	add    BYTE PTR [eax+edi*1],dl
  440a37:	inc    esp
  440a38:	add    BYTE PTR [edi+esi*1+0x37f80044],bh
  440a3f:	inc    esp
  440a40:	add    BYTE PTR [eax+0x4437],bl
  440a46:	cmp    BYTE PTR [eax+eax*1-0x60],al
  440a4a:	aaa    
  440a4b:	inc    esp
  440a4c:	add    BYTE PTR [eax+0x48004437],cl
  440a52:	cmp    BYTE PTR [eax+eax*1-0x4],al
  440a56:	aaa    
  440a57:	inc    esp
  440a58:	add    BYTE PTR [eax-0x47ffbbc9],bh
  440a5e:	aaa    
  440a5f:	inc    esp
  440a60:	add    al,ch
  440a62:	aaa    
  440a63:	inc    esp
  440a64:	add    BYTE PTR [edi+esi*1+0x37640044],dh
  440a6b:	inc    esp
  440a6c:	add    BYTE PTR [eax+0x68004437],bl
  440a72:	aaa    
  440a73:	inc    esp
  440a74:	add    BYTE PTR [eax+0x38],cl
  440a77:	inc    esp
  440a78:	add    BYTE PTR [eax+edi*1+0x44],cl
  440a7c:	add    BYTE PTR [edi+esi*1+0x44],ah
  440a80:	add    BYTE PTR [eax-0x5bffbbc9],ah
  440a86:	aaa    
  440a87:	inc    esp
  440a88:	add    BYTE PTR [eax+0x3c004437],cl
  440a8e:	cmp    BYTE PTR [eax+eax*1+0x60],al
  440a92:	aaa    
  440a93:	inc    esp
  440a94:	add    BYTE PTR [eax+0x38],dl
  440a97:	inc    esp
  440a98:	add    BYTE PTR [eax+edi*1+0x44],dl
  440a9c:	add    BYTE PTR [edi+esi*1+0x44],bh
  440aa0:	add    BYTE PTR [eax],bl
  440aa2:	cmp    BYTE PTR [eax+eax*1-0x28],al
  440aa6:	aaa    
  440aa7:	inc    esp
  440aa8:	add    BYTE PTR [eax+0x58004437],dl
  440aae:	cmp    BYTE PTR [eax+eax*1+0x68],al
  440ab2:	aaa    
  440ab3:	inc    esp
  440ab4:	add    BYTE PTR [edi+esi*1+0x44],bh
  440ab8:	add    BYTE PTR [eax+0x37],ch
  440abb:	inc    esp
  440abc:	add    BYTE PTR [eax+0x37],bh
  440abf:	inc    esp
  440ac0:	add    al,dh
  440ac2:	aaa    
  440ac3:	inc    esp
  440ac4:	add    BYTE PTR [eax+0x38],al
  440ac7:	inc    esp
  440ac8:	add    BYTE PTR [edi+esi*1+0x37b40044],bh
  440acf:	inc    esp
  440ad0:	add    ah,cl
  440ad2:	aaa    
  440ad3:	inc    esp
  440ad4:	add    BYTE PTR [eax],dh
  440ad6:	cmp    BYTE PTR [eax+eax*1-0x60],al
  440ada:	aaa    
  440adb:	inc    esp
  440adc:	add    BYTE PTR [edi+esi*1+0x377c0044],dl
  440ae3:	inc    esp
  440ae4:	add    BYTE PTR [eax+edi*1+0x44],bl
  440ae8:	add    ah,ch
  440aea:	aaa    
  440aeb:	inc    esp
  440aec:	add    al,dh
  440aee:	aaa    
  440aef:	inc    esp
  440af0:	add    BYTE PTR [eax-0x5bffbbc9],dh
  440af6:	aaa    
  440af7:	inc    esp
  440af8:	add    al,bl
  440afa:	aaa    
  440afb:	inc    esp
  440afc:	add    BYTE PTR [eax+edi*1],ah
  440aff:	inc    esp
  440b00:	add    BYTE PTR [edi+esi*1+0x44],dh
  440b04:	add    BYTE PTR [eax+0x38],ah
  440b07:	inc    esp
  440b08:	add    al,bh
  440b0a:	aaa    
  440b0b:	inc    esp
  440b0c:	add    BYTE PTR [eax+edi*1+0x44],ah
  440b10:	add    al,bl
  440b12:	aaa    
  440b13:	inc    esp
  440b14:	add    BYTE PTR [eax+edi*1],ch
  440b17:	inc    esp
  440b18:	add    BYTE PTR [eax-0xfffbbc9],cl
  440b1e:	aaa    
  440b1f:	inc    esp
  440b20:	add    al,dh
  440b22:	aaa    
  440b23:	inc    esp
  440b24:	add    BYTE PTR [edi+esi*1+0x44],dh
  440b28:	add    BYTE PTR [eax+0x68004437],dh
  440b2e:	cmp    BYTE PTR [eax+eax*1+0x60],al
  440b32:	aaa    
  440b33:	inc    esp
  440b34:	add    BYTE PTR [eax+edi*1+0x44],ch
  440b38:	add    BYTE PTR [eax],dl
  440b3a:	cmp    BYTE PTR [eax+eax*1-0x20],al
  440b3e:	aaa    
  440b3f:	inc    esp
  440b40:	add    BYTE PTR [eax+edi*1],bh
  440b43:	inc    esp
  440b44:	add    BYTE PTR [eax],bh
  440b46:	cmp    BYTE PTR [eax+eax*1+0x48],al
  440b4a:	cmp    BYTE PTR [eax+eax*1+0x40],al
  440b4e:	cmp    BYTE PTR [eax+eax*1+0x28],al
  440b52:	cmp    BYTE PTR [eax+eax*1-0x2c],al
  440b56:	aaa    
  440b57:	inc    esp
  440b58:	add    BYTE PTR [eax+edi*1+0x44],cl
  440b5c:	add    BYTE PTR [edi+esi*1+0x37f00044],bl
  440b63:	inc    esp
  440b64:	add    BYTE PTR [eax+0x38],dh
  440b67:	inc    esp
  440b68:	add    BYTE PTR [edi+esi*1+0x37b80044],cl
  440b6f:	inc    esp
  440b70:	add    BYTE PTR [edi+esi*1+0x38080044],cl
  440b77:	inc    esp
  440b78:	add    BYTE PTR [eax+0x37],dh
  440b7b:	inc    esp
  440b7c:	add    BYTE PTR [eax+edi*1],dh
  440b7f:	inc    esp
  440b80:	add    ah,bl
  440b82:	aaa    
  440b83:	inc    esp
  440b84:	add    BYTE PTR [edi+esi*1+0x44],ah
  440b88:	add    BYTE PTR [eax+edi*1+0x44],dh
  440b8c:	add    BYTE PTR [eax+0x38],al
  440b8f:	inc    esp
  440b90:	add    BYTE PTR [eax+0x58004437],bh
  440b96:	cmp    BYTE PTR [eax+eax*1+0x30],al
  440b9a:	cmp    BYTE PTR [eax+eax*1+0x0],al
  440b9e:	cmp    BYTE PTR [eax+eax*1+0x7c],al
  440ba2:	aaa    
  440ba3:	inc    esp
  440ba4:	add    BYTE PTR [eax-0x17ffbbc9],ah
  440baa:	aaa    
  440bab:	inc    esp
  440bac:	add    al,ah
  440bae:	aaa    
  440baf:	inc    esp
  440bb0:	add    BYTE PTR [eax+edi*1+0x44],dl
  440bb4:	add    BYTE PTR [ecx+0x61],al
  440bb7:	stos   BYTE PTR es:[edi],al
  440bb8:	mov    ebp,DWORD PTR ds:0xa930cb70
  440bbe:	inc    esi
  440bbf:	xchg   ecx,eax
  440bc0:	out    0xad,eax
  440bc2:	test   al,0x59
  440bc5:	in     al,0x84
  440bc7:	ins    BYTE PTR es:[edi],dx
  440bc8:	aaa    
  440bc9:	cmp    DWORD PTR [esi],esi
  440bcb:	(bad)  
  440bcc:	int3   
  440bcd:	cmp    BYTE PTR [esi-0xa5aa8d8],dh
  440bd3:	jg     0x440baa
  440bd5:	pop    eax
  440bd6:	sub    bl,BYTE PTR [eax+0x16f7ecd1]
  440bdc:	ins    DWORD PTR es:[edi],dx
  440bdd:	jp     0x440b6c
  440bdf:	jle    0x440b7b
  440be1:	xchg   esi,eax
  440be2:	ins    DWORD PTR es:[edi],dx
  440be3:	add    BYTE PTR gs:[eax],ch
  440be6:	test   eax,0xe99a5924
  440beb:	push   esp
  440bec:	mov    bl,BYTE PTR [edi+0x3fe493e1]
  440bf2:	loopne 0x440c6a
  440bf4:	mov    esp,0x612505e4
  440bf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440bfa:	xchg   ebp,eax
  440bfb:	pop    ds
  440bfc:	loope  0x440b8f
  440bfe:	aaa    
  440bff:	mov    bh,0x18
  440c01:	iret   
  440c02:	ins    DWORD PTR es:[edi],dx
  440c03:	sbb    DWORD PTR [ebp-0x23278ce1],esp
  440c09:	fcomp  QWORD PTR [ecx+0x5]
  440c0c:	jp     0x440c44
  440c0e:	fadd   st(1),st
  440c10:	mov    ch,0xa1
  440c12:	in     al,0x8d
  440c14:	adc    eax,ebx
  440c16:	adc    esi,esp
  440c18:	and    ecx,DWORD PTR [ebp+0x7dd0c1f7]
  440c1e:	(bad)  
  440c1f:	out    0x1e,al
  440c21:	and    cl,ch
  440c23:	or     DWORD PTR [esi],0x2e
  440c26:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440c28:	and    al,0xb7
  440c2a:	(bad)  
  440c2b:	je     0x440c7c
  440c2d:	(bad)  [ebp+0x3e94b08f]
  440c33:	stos   BYTE PTR es:[edi],al
  440c34:	and    dl,BYTE PTR [edi+edx*8]
  440c37:	xchg   ebp,eax
  440c39:	jp     0x440cb7
  440c3b:	mov    bl,0x1b
  440c3d:	sub    al,0x3c
  440c3f:	or     eax,0x1a8c81a1
  440c44:	cld    
  440c45:	adc    ebx,DWORD PTR [ebx-0x75]
  440c48:	xchg   edi,eax
  440c49:	maxps  xmm7,XMMWORD PTR [ecx-0x210dbba3]
  440c50:	out    0xc5,eax
  440c52:	adc    DWORD PTR [eax],ebx
  440c54:	ret    
  440c55:	pop    eax
  440c56:	outs   dx,BYTE PTR ds:[esi]
  440c57:	xchg   ebx,eax
  440c58:	aad    0x8a
  440c5a:	mov    DWORD PTR [esi],0xc194c84
  440c60:	mov    ch,0xf5
  440c62:	mov    edx,0x77210c5a
  440c67:	repnz scas eax,DWORD PTR es:[edi]
  440c69:	inc    edi
  440c6a:	aad    0x7
  440c6c:	scas   al,BYTE PTR es:[edi]
  440c6d:	and    dh,cl
  440c6f:	push   0x4a
  440c71:	mov    edi,0xe245d764
  440c76:	repz rcr bh,0x83
  440c7a:	inc    edi
  440c7b:	push   0x97b067e1
  440c80:	int    0xb2
  440c82:	push   cs
  440c83:	fcmovb st,st(1)
  440c85:	pop    edx
  440c86:	mov    BYTE PTR [ecx-0x1a],cl
  440c89:	pop    esi
  440c8a:	stos   BYTE PTR es:[edi],al
  440c8b:	and    BYTE PTR [ebx+0xe],cl
  440c8e:	test   BYTE PTR [edx-0x22e6040],dh
  440c94:	aam    0x72
  440c96:	stos   BYTE PTR es:[edi],al
  440c97:	inc    eax
  440c98:	add    eax,0x3c032ffd
  440c9d:	out    0xc9,eax
  440c9f:	data16 mov ch,0x75
  440ca2:	iret   
  440ca3:	add    edi,ebx
  440ca5:	out    0x9,al
  440ca7:	lds    edi,FWORD PTR [ebp-0x2bf5e353]
  440cad:	(bad)  
  440cae:	(bad)  cs:[ecx+0x1a18eef5]
  440cb5:	fst    st(7)
  440cb7:	fistp  WORD PTR [ecx+edi*8+0x495987dc]
  440cbe:	sub    edx,0x7f
  440cc1:	fldcw  WORD PTR [ebp-0x62]
  440cc4:	mov    es,WORD PTR [edx+0x595a5fb3]
  440cca:	fmul   DWORD PTR [edi+0x5b]
  440ccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440cce:	mov    cl,0xe5
  440cd0:	shl    DWORD PTR [ebx+0x45],1
  440cd3:	sti    
  440cd4:	mov    ecx,0x1f336225
  440cd9:	adc    ah,dh
  440cdb:	cmp    ebp,DWORD PTR [eax+ebp*8+0x5d8b7442]
  440ce2:	adc    DWORD PTR [esi+0x49],edx
  440ce5:	mov    dl,0x60
  440ce7:	enter  0x2d38,0x1c
  440ceb:	ds mov bh,0x54
  440cee:	cli    
  440cef:	mov    bl,0x2b
  440cf1:	push   0xa9b3d1fb
  440cf6:	imul   BYTE PTR ds:[edx-0x20]
  440cfa:	aad    0x2
  440cfc:	int    0xed
  440cfe:	pop    es
  440cff:	fld    DWORD PTR [ecx+edx*8]
  440d02:	dec    ecx
  440d03:	xor    eax,0x8c3dc15
  440d08:	fbstp  TBYTE PTR [edi-0x4e15d84b]
  440d0e:	(bad)  
  440d0f:	sub    eax,0x114947a5
  440d14:	adc    eax,0x178afc1f
  440d19:	xor    BYTE PTR [edx],dl
  440d1b:	xchg   BYTE PTR [eax-0x60],bh
  440d1e:	xlat   BYTE PTR ds:[ebx]
  440d1f:	fcomp  DWORD PTR [esi-0x75]
  440d22:	inc    esp
  440d23:	mov    eax,es
  440d25:	push   eax
  440d26:	mov    WORD PTR [eax+0x3a],ss
  440d29:	bound  esp,QWORD PTR [edi-0x5b4884d3]
  440d2f:	sbb    esp,ebp
  440d31:	dec    eax
  440d32:	pop    eax
  440d33:	stos   BYTE PTR es:[edi],al
  440d34:	fbld   TBYTE PTR ds:0x6bec36e
  440d3a:	inc    edi
  440d3b:	xlat   BYTE PTR ds:[ebx]
  440d3c:	adc    DWORD PTR [ebx-0x40],esi
  440d3f:	outs   dx,BYTE PTR ds:[esi]
  440d40:	jns    0x440da3
  440d42:	iret   
  440d43:	xor    esp,DWORD PTR [eax-0x54]
  440d46:	push   ecx
  440d47:	pop    ebp
  440d48:	cmp    al,0x45
  440d4a:	and    edx,edi
  440d4c:	dec    esi
  440d4d:	std    
  440d4e:	nop
  440d4f:	mov    cl,0x25
  440d51:	jmp    0x440db3
  440d53:	cmc    
  440d54:	mov    eax,ds:0x9f974e93
  440d59:	call   0xa6d5:0x4f97d1f1
  440d60:	repz ds inc ebp
  440d63:	push   edi
  440d64:	dec    ebx
  440d65:	scas   eax,DWORD PTR es:[edi]
  440d66:	fld    TBYTE PTR [edx]
  440d68:	pop    edi
  440d69:	data16 xor BYTE PTR [ecx+0x619952c7],cl
  440d70:	pop    edx
  440d71:	push   ebp
  440d72:	sbb    al,0x99
  440d74:	cwde   
  440d75:	pop    ecx
  440d76:	(bad)  [esi-0x1f42f70]
  440d7c:	sbb    ebp,edi
  440d7e:	and    cl,BYTE PTR [ebp-0x69]
  440d81:	mov    WORD PTR [eax],cs
  440d83:	cld    
  440d84:	mov    eax,ds:0x4d546b1c
  440d89:	stos   DWORD PTR es:[edi],eax
  440d8a:	pop    es
  440d8b:	fbstp  TBYTE PTR [ecx+0x18f2767b]
  440d91:	sbb    eax,0x99f77531
  440d96:	xchg   ebp,eax
  440d97:	imul   eax,DWORD PTR [eax],0xe39b593e
  440d9d:	mov    bl,0x3b
  440d9f:	cmp    al,0xe7
  440da1:	and    edx,DWORD PTR [ebx-0x56]
  440da4:	out    0x96,eax
  440da6:	mov    esp,0x15549ac5
  440dab:	cmc    
  440dac:	mov    eax,ds:0x6680825b
  440db1:	test   BYTE PTR ds:0x25ffc5d5,dh
  440db7:	push   0xff00442d
  440dbc:	and    eax,0x442d6c
  440dc1:	jmp    DWORD PTR ds:0x442d70
  440dc7:	jmp    DWORD PTR ds:0x442d74
  440dcd:	jmp    DWORD PTR ds:0x442d78
  440dd3:	jmp    DWORD PTR ds:0x442d7c
  440dd9:	jmp    DWORD PTR ds:0x442d80
  440ddf:	jmp    DWORD PTR ds:0x442d84
  440de5:	jmp    DWORD PTR ds:0x442d88
  440deb:	jmp    DWORD PTR ds:0x442d8c
  440df1:	jmp    DWORD PTR ds:0x442d90
  440df7:	jmp    DWORD PTR ds:0x442d94
  440dfd:	jmp    DWORD PTR ds:0x442d98
  440e03:	jmp    DWORD PTR ds:0x442d9c
  440e09:	jmp    DWORD PTR ds:0x442da0
  440e0f:	jmp    DWORD PTR ds:0x442da4
  440e15:	jmp    DWORD PTR ds:0x442da8
  440e1b:	jmp    DWORD PTR ds:0x442dac
  440e21:	jmp    DWORD PTR ds:0x442db0
  440e27:	jmp    DWORD PTR ds:0x442db4
  440e2d:	jmp    DWORD PTR ds:0x442db8
  440e33:	jmp    DWORD PTR ds:0x442dbc
  440e39:	jmp    DWORD PTR ds:0x442dc0
  440e3f:	jmp    DWORD PTR ds:0x442dc4
  440e45:	jmp    DWORD PTR ds:0x442dc8
  440e4b:	jmp    DWORD PTR ds:0x442dcc
  440e51:	jmp    DWORD PTR ds:0x442dd0
  440e57:	jmp    DWORD PTR ds:0x442dd4
  440e5d:	jmp    DWORD PTR ds:0x442dd8
  440e63:	jmp    DWORD PTR ds:0x442ddc
  440e69:	jmp    DWORD PTR ds:0x442de0
  440e6f:	jmp    DWORD PTR ds:0x442de4
  440e75:	jmp    DWORD PTR ds:0x442de8
  440e7b:	jmp    DWORD PTR ds:0x442dec
  440e81:	jmp    DWORD PTR ds:0x442df0
  440e87:	jmp    DWORD PTR ds:0x442df4
  440e8d:	jmp    DWORD PTR ds:0x442df8
  440e93:	jmp    DWORD PTR ds:0x442dfc
  440e99:	jmp    DWORD PTR ds:0x442e00
  440e9f:	jmp    DWORD PTR ds:0x442e04
  440ea5:	jmp    DWORD PTR ds:0x442e08
  440eab:	jmp    DWORD PTR ds:0x442e0c
  440eb1:	jmp    DWORD PTR ds:0x442e10
  440eb7:	jmp    DWORD PTR ds:0x442e14
  440ebd:	jmp    DWORD PTR ds:0x442e18
  440ec3:	jmp    DWORD PTR ds:0x442e1c
  440ec9:	jmp    DWORD PTR ds:0x442e20
  440ecf:	jmp    DWORD PTR ds:0x442e24
  440ed5:	jmp    DWORD PTR ds:0x442e28
  440edb:	jmp    DWORD PTR ds:0x442e2c
  440ee1:	jmp    DWORD PTR ds:0x442e30
  440ee7:	jmp    DWORD PTR ds:0x442e34
  440eed:	jmp    DWORD PTR ds:0x442e38
  440ef3:	jmp    DWORD PTR ds:0x442e3c
  440ef9:	jmp    DWORD PTR ds:0x442e40
  440eff:	jmp    DWORD PTR ds:0x442e44
  440f05:	jmp    DWORD PTR ds:0x442e48
  440f0b:	jmp    DWORD PTR ds:0x442e4c
  440f11:	jmp    DWORD PTR ds:0x442e50
  440f17:	jmp    DWORD PTR ds:0x442e54
  440f1d:	jmp    DWORD PTR ds:0x442e58
  440f23:	jmp    DWORD PTR ds:0x442e5c
  440f29:	jmp    DWORD PTR ds:0x442e60
  440f2f:	jmp    DWORD PTR ds:0x442e64
  440f35:	jmp    DWORD PTR ds:0x442e68
  440f3b:	jmp    DWORD PTR ds:0x442e6c
  440f41:	jmp    DWORD PTR ds:0x442e70
  440f47:	jmp    DWORD PTR ds:0x442e74
  440f4d:	jmp    DWORD PTR ds:0x442e78
  440f53:	jmp    DWORD PTR ds:0x442e7c
  440f59:	jmp    DWORD PTR ds:0x442e80
  440f5f:	jmp    DWORD PTR ds:0x442e84
  440f65:	jmp    DWORD PTR ds:0x442e88
  440f6b:	jmp    DWORD PTR ds:0x442e8c
  440f71:	jmp    DWORD PTR ds:0x442e90
  440f77:	jmp    DWORD PTR ds:0x442e94
  440f7d:	jmp    DWORD PTR ds:0x442e98
  440f83:	jmp    DWORD PTR ds:0x442e9c
  440f89:	jmp    DWORD PTR ds:0x442ea0
  440f8f:	jmp    DWORD PTR ds:0x442ea4
  440f95:	jmp    DWORD PTR ds:0x442ea8
  440f9b:	jmp    DWORD PTR ds:0x442eac
  440fa1:	jmp    DWORD PTR ds:0x442eb0
  440fa7:	jmp    DWORD PTR ds:0x442eb4
  440fad:	jmp    DWORD PTR ds:0x442eb8
  440fb3:	jmp    DWORD PTR ds:0x442ebc
  440fb9:	jmp    DWORD PTR ds:0x442ec0
  440fbf:	jmp    DWORD PTR ds:0x442ec4
  440fc5:	jmp    DWORD PTR ds:0x442ec8
  440fcb:	jmp    DWORD PTR ds:0x442ecc
  440fd1:	jmp    DWORD PTR ds:0x442ed0
  440fd7:	jmp    DWORD PTR ds:0x442ed4
  440fdd:	jmp    DWORD PTR ds:0x442ed8
  440fe3:	jmp    DWORD PTR ds:0x442edc
  440fe9:	jmp    DWORD PTR ds:0x442ee0
  440fef:	jmp    DWORD PTR ds:0x442ee4
  440ff5:	jmp    DWORD PTR ds:0x442ee8
  440ffb:	jmp    DWORD PTR ds:0x442eec
  441001:	jmp    DWORD PTR ds:0x442ef0
  441007:	jmp    DWORD PTR ds:0x442ef4
  44100d:	jmp    DWORD PTR ds:0x442ef8
  441013:	jmp    DWORD PTR ds:0x442efc
  441019:	jmp    DWORD PTR ds:0x442f00
  44101f:	jmp    DWORD PTR ds:0x442f04
  441025:	jmp    DWORD PTR ds:0x442f08
  44102b:	jmp    DWORD PTR ds:0x442f0c
  441031:	jmp    DWORD PTR ds:0x442f10
  441037:	jmp    DWORD PTR ds:0x442f14
  44103d:	jmp    DWORD PTR ds:0x442f18
  441043:	jmp    DWORD PTR ds:0x442f1c
  441049:	jmp    DWORD PTR ds:0x442f20
  44104f:	jmp    DWORD PTR ds:0x442f24
  441055:	jmp    DWORD PTR ds:0x442f28
  44105b:	jmp    DWORD PTR ds:0x442f2c
  441061:	jmp    DWORD PTR ds:0x442f30
  441067:	jmp    DWORD PTR ds:0x442f34
  44106d:	jmp    DWORD PTR ds:0x442f38
  441073:	jmp    DWORD PTR ds:0x442f3c
  441079:	jmp    DWORD PTR ds:0x442f40
  44107f:	jmp    DWORD PTR ds:0x442f44
  441085:	jmp    DWORD PTR ds:0x442f48
  44108b:	jmp    DWORD PTR ds:0x442f4c
  441091:	jmp    DWORD PTR ds:0x442f50
  441097:	jmp    DWORD PTR ds:0x442f54
  44109d:	jmp    DWORD PTR ds:0x442f58
  4410a3:	jmp    DWORD PTR ds:0x442f5c
  4410a9:	jmp    DWORD PTR ds:0x442f60
  4410af:	jmp    DWORD PTR ds:0x442f64
  4410b5:	jmp    DWORD PTR ds:0x442f68
  4410bb:	jmp    DWORD PTR ds:0x442f6c
  4410c1:	jmp    DWORD PTR ds:0x442f70
  4410c7:	jmp    DWORD PTR ds:0x442f74
  4410cd:	jmp    DWORD PTR ds:0x442f78
  4410d3:	jmp    DWORD PTR ds:0x442f7c
  4410d9:	jmp    DWORD PTR ds:0x442f80
  4410df:	jmp    DWORD PTR ds:0x442f84
  4410e5:	jmp    DWORD PTR ds:0x442f88
  4410eb:	jmp    DWORD PTR ds:0x442f8c
  4410f1:	jmp    DWORD PTR ds:0x442f90
  4410f7:	jmp    DWORD PTR ds:0x442f94
  4410fd:	jmp    DWORD PTR ds:0x442f98
  441103:	jmp    DWORD PTR ds:0x442f9c
  441109:	jmp    DWORD PTR ds:0x442fa0
  44110f:	jmp    DWORD PTR ds:0x442fa4
  441115:	jmp    DWORD PTR ds:0x442fa8
  44111b:	jmp    DWORD PTR ds:0x442fac
  441121:	jmp    DWORD PTR ds:0x442fb0
  441127:	jmp    DWORD PTR ds:0x442fb4
  44112d:	jmp    DWORD PTR ds:0x442fbc
  441133:	jmp    DWORD PTR ds:0x442fc0
  441139:	jmp    DWORD PTR ds:0x442fc4
  44113f:	jmp    DWORD PTR ds:0x442fc8
  441145:	jmp    DWORD PTR ds:0x442fcc
  44114b:	jmp    DWORD PTR ds:0x442fd0
  441151:	jmp    DWORD PTR ds:0x442fd4
  441157:	jmp    DWORD PTR ds:0x442fd8
  44115d:	jmp    DWORD PTR ds:0x442fdc
  441163:	jmp    DWORD PTR ds:0x442fe0
  441169:	jmp    DWORD PTR ds:0x442fe4
  44116f:	jmp    DWORD PTR ds:0x442fe8
  441175:	jmp    DWORD PTR ds:0x442fec
  44117b:	jmp    DWORD PTR ds:0x442ff0
  441181:	jmp    DWORD PTR ds:0x442ff4
  441187:	jmp    DWORD PTR ds:0x442ff8
  44118d:	jmp    DWORD PTR ds:0x442ffc
  441193:	jmp    DWORD PTR ds:0x443000
  441199:	jmp    DWORD PTR ds:0x443004
  44119f:	jmp    DWORD PTR ds:0x443008
  4411a5:	jmp    DWORD PTR ds:0x44300c
  4411ab:	jmp    DWORD PTR ds:0x443010
  4411b1:	jmp    DWORD PTR ds:0x443014
  4411b7:	jmp    DWORD PTR ds:0x443018
  4411bd:	jmp    DWORD PTR ds:0x44301c
  4411c3:	jmp    DWORD PTR ds:0x443020
  4411c9:	jmp    DWORD PTR ds:0x443024
  4411cf:	jmp    DWORD PTR ds:0x443028
  4411d5:	jmp    DWORD PTR ds:0x44302c
  4411db:	jmp    DWORD PTR ds:0x443030
  4411e1:	jmp    DWORD PTR ds:0x443034
  4411e7:	jmp    DWORD PTR ds:0x443038
  4411ed:	jmp    DWORD PTR ds:0x44303c
  4411f3:	jmp    DWORD PTR ds:0x443040
  4411f9:	jmp    DWORD PTR ds:0x443044
  4411ff:	jmp    DWORD PTR ds:0x443048
  441205:	jmp    DWORD PTR ds:0x44304c
  44120b:	jmp    DWORD PTR ds:0x443050
  441211:	jmp    DWORD PTR ds:0x443054
  441217:	jmp    DWORD PTR ds:0x443058
  44121d:	jmp    DWORD PTR ds:0x44305c
  441223:	jmp    DWORD PTR ds:0x443060
  441229:	jmp    DWORD PTR ds:0x443064
  44122f:	jmp    DWORD PTR ds:0x443068
  441235:	jmp    DWORD PTR ds:0x44306c
  44123b:	jmp    DWORD PTR ds:0x443070
  441241:	jmp    DWORD PTR ds:0x443074
  441247:	jmp    DWORD PTR ds:0x443078
  44124d:	jmp    DWORD PTR ds:0x44307c
  441253:	jmp    DWORD PTR ds:0x443080
  441259:	jmp    DWORD PTR ds:0x443084
  44125f:	jmp    DWORD PTR ds:0x443088
  441265:	jmp    DWORD PTR ds:0x44308c
  44126b:	jmp    DWORD PTR ds:0x443090
  441271:	jmp    DWORD PTR ds:0x443094
  441277:	jmp    DWORD PTR ds:0x443098
  44127d:	jmp    DWORD PTR ds:0x44309c
  441283:	jmp    DWORD PTR ds:0x4430a0
  441289:	jmp    DWORD PTR ds:0x4430a4
  44128f:	jmp    DWORD PTR ds:0x4430a8
  441295:	jmp    DWORD PTR ds:0x4430ac
  44129b:	jmp    DWORD PTR ds:0x4430b0
  4412a1:	jmp    DWORD PTR ds:0x4430b4
  4412a7:	jmp    DWORD PTR ds:0x4430b8
  4412ad:	jmp    DWORD PTR ds:0x4430bc
  4412b3:	jmp    DWORD PTR ds:0x4430c0
  4412b9:	jmp    DWORD PTR ds:0x4430c4
  4412bf:	jmp    DWORD PTR ds:0x4430c8
  4412c5:	jmp    DWORD PTR ds:0x4430cc
  4412cb:	jmp    DWORD PTR ds:0x4430d0
  4412d1:	jmp    DWORD PTR ds:0x4430d4
  4412d7:	jmp    DWORD PTR ds:0x4430d8
  4412dd:	jmp    DWORD PTR ds:0x4430dc
  4412e3:	jmp    DWORD PTR ds:0x4430e0
  4412e9:	jmp    DWORD PTR ds:0x4430e4
  4412ef:	jmp    DWORD PTR ds:0x4430e8
  4412f5:	jmp    DWORD PTR ds:0x4430ec
  4412fb:	jmp    DWORD PTR ds:0x4430f0
  441301:	jmp    DWORD PTR ds:0x4430f4
  441307:	jmp    DWORD PTR ds:0x4430f8
  44130d:	jmp    DWORD PTR ds:0x4430fc
  441313:	jmp    DWORD PTR ds:0x443100
  441319:	jmp    DWORD PTR ds:0x443104
  44131f:	jmp    DWORD PTR ds:0x443108
  441325:	jmp    DWORD PTR ds:0x44310c
  44132b:	jmp    DWORD PTR ds:0x443110
  441331:	jmp    DWORD PTR ds:0x443114
  441337:	jmp    DWORD PTR ds:0x443118
  44133d:	jmp    DWORD PTR ds:0x44311c
  441343:	jmp    DWORD PTR ds:0x443120
  441349:	jmp    DWORD PTR ds:0x443124
  44134f:	jmp    DWORD PTR ds:0x443128
  441355:	jmp    DWORD PTR ds:0x44312c
  44135b:	jmp    DWORD PTR ds:0x443130
  441361:	jmp    DWORD PTR ds:0x443134
  441367:	jmp    DWORD PTR ds:0x443138
  44136d:	jmp    DWORD PTR ds:0x44313c
  441373:	jmp    DWORD PTR ds:0x443140
  441379:	jmp    DWORD PTR ds:0x443144
  44137f:	jmp    DWORD PTR ds:0x443148
  441385:	jmp    DWORD PTR ds:0x44314c
  44138b:	jmp    DWORD PTR ds:0x443150
  441391:	jmp    DWORD PTR ds:0x443154
  441397:	jmp    DWORD PTR ds:0x443158
  44139d:	jmp    DWORD PTR ds:0x44315c
  4413a3:	jmp    DWORD PTR ds:0x443160
  4413a9:	jmp    DWORD PTR ds:0x443164
  4413af:	jmp    DWORD PTR ds:0x443168
  4413b5:	jmp    DWORD PTR ds:0x44316c
  4413bb:	jmp    DWORD PTR ds:0x443170
  4413c1:	jmp    DWORD PTR ds:0x443174
  4413c7:	jmp    DWORD PTR ds:0x443178
  4413cd:	jmp    DWORD PTR ds:0x44317c
  4413d3:	jmp    DWORD PTR ds:0x443180
  4413d9:	jmp    DWORD PTR ds:0x443184
  4413df:	jmp    DWORD PTR ds:0x443188
  4413e5:	jmp    DWORD PTR ds:0x44318c
  4413eb:	jmp    DWORD PTR ds:0x443190
  4413f1:	jmp    DWORD PTR ds:0x443194
  4413f7:	jmp    DWORD PTR ds:0x443198
  4413fd:	jmp    DWORD PTR ds:0x44319c
  441403:	jmp    DWORD PTR ds:0x4431a0
  441409:	jmp    DWORD PTR ds:0x4431a4
  44140f:	jmp    DWORD PTR ds:0x4431a8
  441415:	jmp    DWORD PTR ds:0x4431ac
  44141b:	jmp    DWORD PTR ds:0x4431b0
  441421:	jmp    DWORD PTR ds:0x4431b4
  441427:	jmp    DWORD PTR ds:0x4431b8
  44142d:	jmp    DWORD PTR ds:0x4431bc
  441433:	jmp    DWORD PTR ds:0x4431c0
  441439:	jmp    DWORD PTR ds:0x4431c4
  44143f:	jmp    DWORD PTR ds:0x4431c8
  441445:	jmp    DWORD PTR ds:0x4431cc
  44144b:	jmp    DWORD PTR ds:0x4431d0
  441451:	jmp    DWORD PTR ds:0x4431d4
  441457:	jmp    DWORD PTR ds:0x4431d8
  44145d:	jmp    DWORD PTR ds:0x4431dc
  441463:	jmp    DWORD PTR ds:0x4431e0
  441469:	jmp    DWORD PTR ds:0x4431e4
  44146f:	jmp    DWORD PTR ds:0x4431e8
  441475:	jmp    DWORD PTR ds:0x4431ec
  44147b:	jmp    DWORD PTR ds:0x4431f0
  441481:	jmp    DWORD PTR ds:0x4431f4
  441487:	jmp    DWORD PTR ds:0x4431f8
  44148d:	jmp    DWORD PTR ds:0x4431fc
  441493:	jmp    DWORD PTR ds:0x443200
  441499:	jmp    DWORD PTR ds:0x443204
  44149f:	jmp    DWORD PTR ds:0x443208
  4414a5:	jmp    DWORD PTR ds:0x44320c
  4414ab:	jmp    DWORD PTR ds:0x443210
  4414b1:	jmp    DWORD PTR ds:0x443214
  4414b7:	jmp    DWORD PTR ds:0x443218
  4414bd:	jmp    DWORD PTR ds:0x44321c
  4414c3:	jmp    DWORD PTR ds:0x443220
  4414c9:	jmp    DWORD PTR ds:0x443224
  4414cf:	jmp    DWORD PTR ds:0x443228
  4414d5:	jmp    DWORD PTR ds:0x44322c
  4414db:	jmp    DWORD PTR ds:0x443230
  4414e1:	jmp    DWORD PTR ds:0x443234
  4414e7:	jmp    DWORD PTR ds:0x443238
  4414ed:	jmp    DWORD PTR ds:0x44323c
  4414f3:	jmp    DWORD PTR ds:0x443240
  4414f9:	jmp    DWORD PTR ds:0x443244
  4414ff:	jmp    DWORD PTR ds:0x443248
  441505:	jmp    DWORD PTR ds:0x44324c
  44150b:	jmp    DWORD PTR ds:0x443250
  441511:	jmp    DWORD PTR ds:0x443254
  441517:	jmp    DWORD PTR ds:0x443258
  44151d:	jmp    DWORD PTR ds:0x44325c
  441523:	jmp    DWORD PTR ds:0x443264
  441529:	int3   
  44152a:	jmp    DWORD PTR ds:0x44326c
  441530:	jmp    DWORD PTR ds:0x443274
  441536:	jmp    DWORD PTR ds:0x443278
  44153c:	jmp    DWORD PTR ds:0x44327c
  441542:	jmp    DWORD PTR ds:0x443280
  441548:	jmp    DWORD PTR ds:0x443284
  44154e:	jmp    DWORD PTR ds:0x443288
  441554:	jmp    DWORD PTR ds:0x44328c
  44155a:	jmp    DWORD PTR ds:0x443290
  441560:	jmp    DWORD PTR ds:0x443294
  441566:	jmp    DWORD PTR ds:0x443298
  44156c:	jmp    DWORD PTR ds:0x44329c
  441572:	jmp    DWORD PTR ds:0x4432a0
  441578:	jmp    DWORD PTR ds:0x4432a4
  44157e:	jmp    DWORD PTR ds:0x4432a8
  441584:	jmp    DWORD PTR ds:0x4432ac
  44158a:	jmp    DWORD PTR ds:0x4432b0
  441590:	jmp    DWORD PTR ds:0x4432b4
  441596:	jmp    DWORD PTR ds:0x4432b8
  44159c:	jmp    DWORD PTR ds:0x4432bc
  4415a2:	jmp    DWORD PTR ds:0x4432c0
  4415a8:	jmp    DWORD PTR ds:0x4432c4
  4415ae:	jmp    DWORD PTR ds:0x4432cc
  4415b4:	jmp    DWORD PTR ds:0x4432d4
  4415ba:	jmp    DWORD PTR ds:0x4432d8
  4415c0:	jmp    DWORD PTR ds:0x4432dc
  4415c6:	jmp    DWORD PTR ds:0x4432e0
  4415cc:	jmp    DWORD PTR ds:0x4432e4
  4415d2:	jmp    DWORD PTR ds:0x4432e8
  4415d8:	jmp    DWORD PTR ds:0x4432ec
  4415de:	jmp    DWORD PTR ds:0x4432f0
  4415e4:	jmp    DWORD PTR ds:0x4432f4
  4415ea:	jmp    DWORD PTR ds:0x4432f8
  4415f0:	jmp    DWORD PTR ds:0x4432fc
  4415f6:	jmp    DWORD PTR ds:0x443300
  4415fc:	jmp    DWORD PTR ds:0x443304
  441602:	jmp    DWORD PTR ds:0x443308
  441608:	jmp    DWORD PTR ds:0x44330c
  44160e:	jmp    DWORD PTR ds:0x443310
  441614:	jmp    DWORD PTR ds:0x443314
  44161a:	jmp    DWORD PTR ds:0x443318
  441620:	jmp    DWORD PTR ds:0x44331c
  441626:	jmp    DWORD PTR ds:0x443320
  44162c:	jmp    DWORD PTR ds:0x443324
  441632:	jmp    DWORD PTR ds:0x443328
  441638:	jmp    DWORD PTR ds:0x44332c
  44163e:	jmp    DWORD PTR ds:0x443330
  441644:	jmp    DWORD PTR ds:0x443334
  44164a:	jmp    DWORD PTR ds:0x443338
  441650:	jmp    DWORD PTR ds:0x44333c
  441656:	jmp    DWORD PTR ds:0x443340
  44165c:	jmp    DWORD PTR ds:0x443344
  441662:	jmp    DWORD PTR ds:0x443348
  441668:	jmp    DWORD PTR ds:0x44334c
  44166e:	jmp    DWORD PTR ds:0x443350
  441674:	jmp    DWORD PTR ds:0x443354
  44167a:	jmp    DWORD PTR ds:0x443358
  441680:	jmp    DWORD PTR ds:0x44335c
  441686:	jmp    DWORD PTR ds:0x443360
  44168c:	jmp    DWORD PTR ds:0x443364
  441692:	jmp    DWORD PTR ds:0x443368
  441698:	jmp    DWORD PTR ds:0x44336c
  44169e:	jmp    DWORD PTR ds:0x443370
  4416a4:	jmp    DWORD PTR ds:0x443374
  4416aa:	jmp    DWORD PTR ds:0x443378
  4416b0:	jmp    DWORD PTR ds:0x44337c
  4416b6:	jmp    DWORD PTR ds:0x443380
  4416bc:	jmp    DWORD PTR ds:0x443384
  4416c2:	jmp    DWORD PTR ds:0x443388
  4416c8:	jmp    DWORD PTR ds:0x44338c
  4416ce:	jmp    DWORD PTR ds:0x443390
  4416d4:	jmp    DWORD PTR ds:0x443394
  4416da:	jmp    DWORD PTR ds:0x443398
  4416e0:	jmp    DWORD PTR ds:0x44339c
  4416e6:	jmp    DWORD PTR ds:0x4433a0
  4416ec:	jmp    DWORD PTR ds:0x4433a4
  4416f2:	jmp    DWORD PTR ds:0x4433a8
  4416f8:	jmp    DWORD PTR ds:0x4433ac
  4416fe:	jmp    DWORD PTR ds:0x4433b0
  441704:	jmp    DWORD PTR ds:0x4433b4
  44170a:	jmp    DWORD PTR ds:0x4433b8
  441710:	jmp    DWORD PTR ds:0x4433bc
  441716:	jmp    DWORD PTR ds:0x4433c0
  44171c:	jmp    DWORD PTR ds:0x4433c4
  441722:	jmp    DWORD PTR ds:0x4433c8
  441728:	jmp    DWORD PTR ds:0x4433cc
  44172e:	jmp    DWORD PTR ds:0x4433d0
  441734:	jmp    DWORD PTR ds:0x4433d4
  44173a:	jmp    DWORD PTR ds:0x4433d8
  441740:	jmp    DWORD PTR ds:0x4433dc
  441746:	jmp    DWORD PTR ds:0x4433e0
  44174c:	jmp    DWORD PTR ds:0x4433e4
  441752:	jmp    DWORD PTR ds:0x4433e8
  441758:	jmp    DWORD PTR ds:0x4433ec
  44175e:	jmp    DWORD PTR ds:0x4433f0
  441764:	jmp    DWORD PTR ds:0x4433f4
  44176a:	jmp    DWORD PTR ds:0x4433f8
  441770:	jmp    DWORD PTR ds:0x4433fc
  441776:	jmp    DWORD PTR ds:0x443400
  44177c:	jmp    DWORD PTR ds:0x443404
  441782:	jmp    DWORD PTR ds:0x443408
  441788:	jmp    DWORD PTR ds:0x44340c
  44178e:	jmp    DWORD PTR ds:0x443410
  441794:	jmp    DWORD PTR ds:0x443414
  44179a:	jmp    DWORD PTR ds:0x443418
  4417a0:	jmp    DWORD PTR ds:0x44341c
  4417a6:	jmp    DWORD PTR ds:0x443420
  4417ac:	jmp    DWORD PTR ds:0x443424
  4417b2:	jmp    DWORD PTR ds:0x443428
  4417b8:	jmp    DWORD PTR ds:0x44342c
  4417be:	jmp    DWORD PTR ds:0x443430
  4417c4:	jmp    DWORD PTR ds:0x443434
  4417ca:	jmp    DWORD PTR ds:0x443438
  4417d0:	jmp    DWORD PTR ds:0x44343c
  4417d6:	jmp    DWORD PTR ds:0x443440
  4417dc:	jmp    DWORD PTR ds:0x443444
  4417e2:	jmp    DWORD PTR ds:0x443448
  4417e8:	jmp    DWORD PTR ds:0x44344c
  4417ee:	jmp    DWORD PTR ds:0x443450
  4417f4:	jmp    DWORD PTR ds:0x443454
  4417fa:	jmp    DWORD PTR ds:0x443458
  441800:	jmp    DWORD PTR ds:0x44345c
  441806:	jmp    DWORD PTR ds:0x443460
  44180c:	jmp    DWORD PTR ds:0x443464
  441812:	jmp    DWORD PTR ds:0x443468
  441818:	jmp    DWORD PTR ds:0x44346c
  44181e:	jmp    DWORD PTR ds:0x443470
  441824:	jmp    DWORD PTR ds:0x443474
  44182a:	jmp    DWORD PTR ds:0x443478
  441830:	jmp    DWORD PTR ds:0x44347c
  441836:	jmp    DWORD PTR ds:0x443480
  44183c:	jmp    DWORD PTR ds:0x443484
  441842:	jmp    DWORD PTR ds:0x443488
  441848:	jmp    DWORD PTR ds:0x44348c
  44184e:	jmp    DWORD PTR ds:0x443490
  441854:	jmp    DWORD PTR ds:0x443494
  44185a:	jmp    DWORD PTR ds:0x443498
  441860:	jmp    DWORD PTR ds:0x44349c
  441866:	jmp    DWORD PTR ds:0x4434a0
  44186c:	jmp    DWORD PTR ds:0x4434a4
  441872:	jmp    DWORD PTR ds:0x4434a8
  441878:	jmp    DWORD PTR ds:0x4434ac
  44187e:	jmp    DWORD PTR ds:0x4434b0
  441884:	jmp    DWORD PTR ds:0x4434b4
  44188a:	jmp    DWORD PTR ds:0x4434b8
  441890:	jmp    DWORD PTR ds:0x4434bc
  441896:	jmp    DWORD PTR ds:0x4434c0
  44189c:	jmp    DWORD PTR ds:0x4434c4
  4418a2:	jmp    DWORD PTR ds:0x4434c8
  4418a8:	jmp    DWORD PTR ds:0x4434cc
  4418ae:	jmp    DWORD PTR ds:0x4434d0
  4418b4:	jmp    DWORD PTR ds:0x4434d4
  4418ba:	jmp    DWORD PTR ds:0x4434d8
  4418c0:	jmp    DWORD PTR ds:0x4434dc
  4418c6:	jmp    DWORD PTR ds:0x4434e0
  4418cc:	jmp    DWORD PTR ds:0x4434e4
  4418d2:	jmp    DWORD PTR ds:0x4434e8
  4418d8:	jmp    DWORD PTR ds:0x4434ec
  4418de:	jmp    DWORD PTR ds:0x4434f0
  4418e4:	jmp    DWORD PTR ds:0x4434f4
  4418ea:	jmp    DWORD PTR ds:0x4434fc
  4418f0:	jmp    DWORD PTR ds:0x443500
  4418f6:	jmp    DWORD PTR ds:0x443504
  4418fc:	jmp    DWORD PTR ds:0x443508
  441902:	jmp    DWORD PTR ds:0x44350c
  441908:	jmp    DWORD PTR ds:0x443510
  44190e:	jmp    DWORD PTR ds:0x443514
  441914:	jmp    DWORD PTR ds:0x443518
  44191a:	jmp    DWORD PTR ds:0x44351c
  441920:	jmp    DWORD PTR ds:0x443520
  441926:	jmp    DWORD PTR ds:0x443524
  44192c:	jmp    DWORD PTR ds:0x443528
  441932:	jmp    DWORD PTR ds:0x44352c
  441938:	jmp    DWORD PTR ds:0x443530
  44193e:	jmp    DWORD PTR ds:0x443534
  441944:	jmp    DWORD PTR ds:0x443538
  44194a:	jmp    DWORD PTR ds:0x44353c
  441950:	jmp    DWORD PTR ds:0x443540
  441956:	jmp    DWORD PTR ds:0x443544
  44195c:	jmp    DWORD PTR ds:0x443548
  441962:	jmp    DWORD PTR ds:0x44354c
  441968:	jmp    DWORD PTR ds:0x443550
  44196e:	jmp    DWORD PTR ds:0x443554
  441974:	jmp    DWORD PTR ds:0x443558
  44197a:	jmp    DWORD PTR ds:0x44355c
  441980:	jmp    DWORD PTR ds:0x443560
  441986:	jmp    DWORD PTR ds:0x443564
  44198c:	jmp    DWORD PTR ds:0x443568
  441992:	jmp    DWORD PTR ds:0x44356c
  441998:	jmp    DWORD PTR ds:0x443570
  44199e:	jmp    DWORD PTR ds:0x443574
  4419a4:	jmp    DWORD PTR ds:0x443578
  4419aa:	jmp    DWORD PTR ds:0x44357c
  4419b0:	jmp    DWORD PTR ds:0x443580
  4419b6:	jmp    DWORD PTR ds:0x443584
  4419bc:	jmp    DWORD PTR ds:0x443588
  4419c2:	jmp    DWORD PTR ds:0x44358c
  4419c8:	jmp    DWORD PTR ds:0x443590
  4419ce:	jmp    DWORD PTR ds:0x443594
  4419d4:	jmp    DWORD PTR ds:0x443598
  4419da:	jmp    DWORD PTR ds:0x44359c
  4419e0:	jmp    DWORD PTR ds:0x4435a0
  4419e6:	jmp    DWORD PTR ds:0x4435a4
  4419ec:	jmp    DWORD PTR ds:0x4435a8
  4419f2:	jmp    DWORD PTR ds:0x4435ac
  4419f8:	jmp    DWORD PTR ds:0x4435b0
  4419fe:	jmp    DWORD PTR ds:0x4435b4
  441a04:	jmp    DWORD PTR ds:0x4435b8
  441a0a:	jmp    DWORD PTR ds:0x4435bc
  441a10:	jmp    DWORD PTR ds:0x4435c0
  441a16:	jmp    DWORD PTR ds:0x4435c4
  441a1c:	jmp    DWORD PTR ds:0x4435c8
  441a22:	jmp    DWORD PTR ds:0x4435cc
  441a28:	jmp    DWORD PTR ds:0x4435d0
  441a2e:	jmp    DWORD PTR ds:0x4435d4
  441a34:	jmp    DWORD PTR ds:0x4435d8
  441a3a:	jmp    DWORD PTR ds:0x4435dc
  441a40:	jmp    DWORD PTR ds:0x4435e0
  441a46:	jmp    DWORD PTR ds:0x4435e4
  441a4c:	jmp    DWORD PTR ds:0x4435e8
  441a52:	jmp    DWORD PTR ds:0x4435ec
  441a58:	jmp    DWORD PTR ds:0x4435f0
  441a5e:	jmp    DWORD PTR ds:0x4435f4
  441a64:	jmp    DWORD PTR ds:0x4435f8
  441a6a:	jmp    DWORD PTR ds:0x4435fc
  441a70:	jmp    DWORD PTR ds:0x443600
  441a76:	jmp    DWORD PTR ds:0x443604
  441a7c:	jmp    DWORD PTR ds:0x443608
  441a82:	jmp    DWORD PTR ds:0x44360c
  441a88:	jmp    DWORD PTR ds:0x443610
  441a8e:	jmp    DWORD PTR ds:0x443614
  441a94:	jmp    DWORD PTR ds:0x443618
  441a9a:	jmp    DWORD PTR ds:0x44361c
  441aa0:	jmp    DWORD PTR ds:0x443620
  441aa6:	jmp    DWORD PTR ds:0x443624
  441aac:	jmp    DWORD PTR ds:0x443628
  441ab2:	jmp    DWORD PTR ds:0x44362c
  441ab8:	jmp    DWORD PTR ds:0x443630
  441abe:	jmp    DWORD PTR ds:0x443634
  441ac4:	jmp    DWORD PTR ds:0x443638
  441aca:	jmp    DWORD PTR ds:0x44363c
  441ad0:	jmp    DWORD PTR ds:0x443640
  441ad6:	jmp    DWORD PTR ds:0x443644
  441adc:	jmp    DWORD PTR ds:0x443648
  441ae2:	jmp    DWORD PTR ds:0x44364c
  441ae8:	jmp    DWORD PTR ds:0x443650
  441aee:	jmp    DWORD PTR ds:0x443654
  441af4:	jmp    DWORD PTR ds:0x443658
  441afa:	jmp    DWORD PTR ds:0x44365c
  441b00:	jmp    DWORD PTR ds:0x443660
  441b06:	jmp    DWORD PTR ds:0x443664
  441b0c:	jmp    DWORD PTR ds:0x443668
  441b12:	jmp    DWORD PTR ds:0x44366c
  441b18:	jmp    DWORD PTR ds:0x443670
  441b1e:	jmp    DWORD PTR ds:0x443674
  441b24:	jmp    DWORD PTR ds:0x443678
  441b2a:	jmp    DWORD PTR ds:0x44367c
  441b30:	jmp    DWORD PTR ds:0x443680
  441b36:	jmp    DWORD PTR ds:0x443684
  441b3c:	jmp    DWORD PTR ds:0x443688
  441b42:	jmp    DWORD PTR ds:0x44368c
  441b48:	jmp    DWORD PTR ds:0x443690
  441b4e:	jmp    DWORD PTR ds:0x443694
  441b54:	jmp    DWORD PTR ds:0x443698
  441b5a:	jmp    DWORD PTR ds:0x44369c
  441b60:	jmp    DWORD PTR ds:0x4436a0
  441b66:	jmp    DWORD PTR ds:0x4436a4
  441b6c:	jmp    DWORD PTR ds:0x4436a8
  441b72:	jmp    DWORD PTR ds:0x4436ac
  441b78:	jmp    DWORD PTR ds:0x4436b0
  441b7e:	jmp    DWORD PTR ds:0x4436b4
  441b84:	jmp    DWORD PTR ds:0x4436b8
  441b8a:	jmp    DWORD PTR ds:0x4436bc
  441b90:	jmp    DWORD PTR ds:0x4436c0
  441b96:	jmp    DWORD PTR ds:0x4436c4
  441b9c:	jmp    DWORD PTR ds:0x4436c8
  441ba2:	jmp    DWORD PTR ds:0x4436cc
  441ba8:	jmp    DWORD PTR ds:0x4436d0
  441bae:	jmp    DWORD PTR ds:0x4436d4
  441bb4:	jmp    DWORD PTR ds:0x4436d8
  441bba:	jmp    DWORD PTR ds:0x4436dc
  441bc0:	jmp    DWORD PTR ds:0x4436e0
  441bc6:	jmp    DWORD PTR ds:0x4436e4
  441bcc:	jmp    DWORD PTR ds:0x4436e8
  441bd2:	jmp    DWORD PTR ds:0x4436ec
  441bd8:	jmp    DWORD PTR ds:0x4436f0
  441bde:	jmp    DWORD PTR ds:0x4436f4
  441be4:	jmp    DWORD PTR ds:0x4436f8
  441bea:	jmp    DWORD PTR ds:0x4436fc
  441bf0:	jmp    DWORD PTR ds:0x443700
  441bf6:	jmp    DWORD PTR ds:0x443704
  441bfc:	jmp    DWORD PTR ds:0x443708
  441c02:	jmp    DWORD PTR ds:0x44370c
  441c08:	jmp    DWORD PTR ds:0x443710
  441c0e:	jmp    DWORD PTR ds:0x443714
  441c14:	jmp    DWORD PTR ds:0x443718
  441c1a:	jmp    DWORD PTR ds:0x44371c
  441c20:	jmp    DWORD PTR ds:0x443720
  441c26:	jmp    DWORD PTR ds:0x443724
  441c2c:	jmp    DWORD PTR ds:0x443728
  441c32:	jmp    DWORD PTR ds:0x44372c
  441c38:	jmp    DWORD PTR ds:0x443730
  441c3e:	jmp    DWORD PTR ds:0x443734
  441c44:	jmp    DWORD PTR ds:0x443738
  441c4a:	jmp    DWORD PTR ds:0x44373c
  441c50:	jmp    DWORD PTR ds:0x443740
  441c56:	jmp    DWORD PTR ds:0x443744
  441c5c:	jmp    DWORD PTR ds:0x443748
  441c62:	jmp    DWORD PTR ds:0x44374c
  441c68:	jmp    DWORD PTR ds:0x443750
  441c6e:	jmp    DWORD PTR ds:0x443754
  441c74:	jmp    DWORD PTR ds:0x443758
  441c7a:	jmp    DWORD PTR ds:0x443760
  441c80:	jmp    DWORD PTR ds:0x443764
  441c86:	jmp    DWORD PTR ds:0x443768
  441c8c:	jmp    DWORD PTR ds:0x44376c
  441c92:	jmp    DWORD PTR ds:0x443770
  441c98:	jmp    DWORD PTR ds:0x443774
  441c9e:	jmp    DWORD PTR ds:0x443778
  441ca4:	jmp    DWORD PTR ds:0x44377c
  441caa:	jmp    DWORD PTR ds:0x443780
  441cb0:	jmp    DWORD PTR ds:0x443784
  441cb6:	jmp    DWORD PTR ds:0x443788
  441cbc:	jmp    DWORD PTR ds:0x44378c
  441cc2:	jmp    DWORD PTR ds:0x443790
  441cc8:	jmp    DWORD PTR ds:0x443794
  441cce:	jmp    DWORD PTR ds:0x443798
  441cd4:	jmp    DWORD PTR ds:0x44379c
  441cda:	jmp    DWORD PTR ds:0x4437a0
  441ce0:	jmp    DWORD PTR ds:0x4437a4
  441ce6:	jmp    DWORD PTR ds:0x4437a8
  441cec:	jmp    DWORD PTR ds:0x4437ac
  441cf2:	jmp    DWORD PTR ds:0x4437b0
  441cf8:	jmp    DWORD PTR ds:0x4437b4
  441cfe:	jmp    DWORD PTR ds:0x4437b8
  441d04:	jmp    DWORD PTR ds:0x4437bc
  441d0a:	jmp    DWORD PTR ds:0x4437c0
  441d10:	jmp    DWORD PTR ds:0x4437c4
  441d16:	jmp    DWORD PTR ds:0x4437c8
  441d1c:	jmp    DWORD PTR ds:0x4437cc
  441d22:	jmp    DWORD PTR ds:0x4437d0
  441d28:	jmp    DWORD PTR ds:0x4437d4
  441d2e:	jmp    DWORD PTR ds:0x4437d8
  441d34:	jmp    DWORD PTR ds:0x4437dc
  441d3a:	jmp    DWORD PTR ds:0x4437e0
  441d40:	jmp    DWORD PTR ds:0x4437e4
  441d46:	jmp    DWORD PTR ds:0x4437e8
  441d4c:	jmp    DWORD PTR ds:0x4437ec
  441d52:	jmp    DWORD PTR ds:0x4437f0
  441d58:	jmp    DWORD PTR ds:0x4437f4
  441d5e:	jmp    DWORD PTR ds:0x4437f8
  441d64:	jmp    DWORD PTR ds:0x4437fc
  441d6a:	jmp    DWORD PTR ds:0x443800
  441d70:	jmp    DWORD PTR ds:0x443804
  441d76:	jmp    DWORD PTR ds:0x443808
  441d7c:	jmp    DWORD PTR ds:0x44380c
  441d82:	jmp    DWORD PTR ds:0x443810
  441d88:	jmp    DWORD PTR ds:0x443814
  441d8e:	jmp    DWORD PTR ds:0x443818
  441d94:	jmp    DWORD PTR ds:0x44381c
  441d9a:	jmp    DWORD PTR ds:0x443820
  441da0:	jmp    DWORD PTR ds:0x443824
  441da6:	jmp    DWORD PTR ds:0x443828
  441dac:	jmp    DWORD PTR ds:0x44382c
  441db2:	jmp    DWORD PTR ds:0x443830
  441db8:	jmp    DWORD PTR ds:0x443834
  441dbe:	jmp    DWORD PTR ds:0x443838
  441dc4:	jmp    DWORD PTR ds:0x44383c
  441dca:	jmp    DWORD PTR ds:0x443840
  441dd0:	jmp    DWORD PTR ds:0x443844
  441dd6:	jmp    DWORD PTR ds:0x443848
  441ddc:	jmp    DWORD PTR ds:0x44384c
  441de2:	jmp    DWORD PTR ds:0x443850
  441de8:	jmp    DWORD PTR ds:0x443854
  441dee:	jmp    DWORD PTR ds:0x443858
  441df4:	jmp    DWORD PTR ds:0x44385c
  441dfa:	jmp    DWORD PTR ds:0x443860
  441e00:	jmp    DWORD PTR ds:0x443864
  441e06:	jmp    DWORD PTR ds:0x443868
  441e0c:	jmp    DWORD PTR ds:0x44386c
  441e12:	jmp    DWORD PTR ds:0x443870
  441e18:	jmp    DWORD PTR ds:0x443874
